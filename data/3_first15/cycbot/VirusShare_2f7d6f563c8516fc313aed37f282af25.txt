mov
fisttpl
add
pop
pop
test
push
int
xor
mov
cmp
js
mov
fbld
jb
adc
jae
into
iret
push
jmp
hlt
add
pop
inc
movb
lock
sub
add
add
add
test
ds
dec
mov
iret
nop
add
scas
lods
clc
xlat
and
add
mov
gs
orl
add
mov
lret
imul
add
xchg
sahf
cltd
popf
sti
in
sub
rolb
pop
jmp
mov
ret
hlt
add
ljmp
out
add
add
in
sub
and
addb
jno
in
lods
push
add
test
out
sub
xchg
add
icebp
movsb
add
jnp
add
mov
repz
subl
mov
push
add
add
std
repnz
decb
add
je
adc
pop
fnstsw
or
lds
mov
sub
aam
pop
pop
dec
jno
inc
add
div
dec
imul
mov
icebp
and
adc
lcall
inc
jg
add
add
add
pop
loopne
xchg
sbb
hlt
add
add
arpl
add
stos
mov
or
cmc
out
jne
lods
add
repnz
repnz
cltd
push
inc
add
cmp
addb
jge
or
out
or
les
inc
loopne
mov
test
add
jmp
pop
push
add
add
movb
xor
loope
mov
and
cld
jp
and
fcomps
push
add
xor
pop
mov
or
inc
add
add
hlt
add
fbstp
xor
nop
add
ljmp
jle
add
add
iret
mov
mov
mov
cmc
jno
and
push
add
mov
push
add
mov
add
add
sbb
add
sbb
mov
add
sub
add
sbb
in
cmc
xchg
add
pushw
fwait
sahf
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
dec
outsb
dec
or
sbb
add
add
pop
ret
les
ficoml
add
push
add
jno
pop
inc
aaa
jp
lods
push
ljmp
cltd
push
add
add
sbb
and
outsl
inc
jne
aad
fnstenv
pop
sbb
mov
add
ja
repz
jno
imul
ds
add
imul
add
sub
mov
out
call
mov
cmp
push
add
adc
sbb
add
inc
sbb
add
lock
mov
shll
add
sbb
push
add
imul
add
lcall
cmp
add
nop
add
cmp
mov
movsl
push
add
mov
dec
mov
add
fimull
in
add
add
xor
or
js
add
mov
fstpl
add
add
xchg
sub
add
pushf
jo
sbb
mov
mov
add
inc
add
add
push
add
cwtl
xchg
ds
leave
in
pusha
add
add
add
xchg
mov
add
cmpsb
add
mov
fnstcw
add
stc
dec
lret
add
xor
pop
mov
loope
push
jbe
shr
popa
mov
add
add
add
out
movb
add
mov
mov
popf
aad
stos
data16
mov
add
fcmovbe
add
jno
add
testb
jnp
add
add
ss
mov
mov
add
cmp
add
mov
stos
jle
testb
sub
mov
mov
add
sbb
lea
out
jno
sbb
aad
add
stc
dec
outsl
push
add
cmp
lock
mov
jnp
iret
jae
push
add
xchg
add
ja
add
add
sti
jecxz
sbb
add
nop
add
mov
sub
add
addb
add
test
stos
js
mov
mov
int3
repz
mov
jmp
or
xor
cmp
add
add
popf
cmp
and
fidivrl
rolb
dec
dec
loop
and
mov
inc
das
jno
add
add
add
into
movb
xor
push
dec
xor
in
inc
add
and
insl
lea
add
adc
mov
iret
lret
das
fisttps
add
xor
mov
adc
mov
cmp
or
add
ret
dec
shrl
sub
add
jo
pusha
add
sbb
mov
lods
add
inc
add
add
aad
dec
call
sbb
mov
addb
add
add
aaa
jmp
fildl
inc
add
add
add
add
mov
add
mov
test
push
push
aaa
sbb
sbb
inc
add
jae
and
mov
pop
lahf
loope
repz
out
shll
test
sbb
pushf
cmpsl
fwait
xor
and
mov
xchg
add
xor
test
add
push
add
add
sahf
jb
mov
mov
les
ret
fists
jmp
rolb
int
adc
out
xchg
xor
leave
nop
add
add
mov
push
movb
add
xor
mov
mov
mov
add
mov
cmp
and
leave
sbb
int3
idivl
ficomps
add
add
xor
add
je
out
lcall
pusha
add
mov
jle
and
mov
jmp
testb
jecxz
add
add
or
sub
sub
inc
sub
in
xchg
jl
test
xor
lods
push
in
cmp
mov
mov
add
and
jbe
dec
cmpl
and
imul
bound
mov
add
xor
stos
jl
movb
clc
in
push
inc
inc
incl
mov
add
insl
nop
add
adc
icebp
xchg
aam
xchg
and
mov
inc
add
xorl
add
aad
jb
dec
mov
jnp
add
cmp
jle
cs
mov
add
pop
mov
or
add
out
mov
push
add
xor
push
jb
push
sbb
stos
ffree
or
xorl
add
jmp
pop
popf
lret
ja
add
add
add
arpl
jbe
sbb
mov
add
add
and
mov
push
clc
xchg
and
jne
add
pop
dec
icebp
sahf
push
add
add
add
add
add
add
cli
ja
lock
add
icebp
mov
jmp
xor
icebp
sbb
mov
rolb
les
jne
inc
add
fimuls
les
sbb
sbb
or
stos
jg
fwait
add
mov
ret
fiadds
add
add
fdivs
ss
imul
rolb
hlt
add
add
mov
js
cmp
out
sbb
push
add
push
add
sbb
add
incb
add
mov
jecxz
mov
push
sub
add
mov
xor
xchg
in
ds
adc
test
inc
icebp
xor
scas
adcl
add
mov
mov
addb
lcall
xchg
shl
and
mov
mov
ret
add
xchg
mov
pop
jne
inc
nop
add
push
pop
call
cltd
cmpsl
add
mov
stos
stos
xchg
xchg
in
push
add
jae
imul
push
add
jbe
lods
add
add
push
ja,pn
daa
push
push
dec
mov
add
subl
pop
sbb
xchg
mov
fwait
xor
mov
add
add
add
xchg
add
push
add
pop
mov
mov
push
add
or
sbb
imul
push
add
mov
stc
lahf
cmp
xor
fcomps
add
addr16
mov
add
jp
add
sub
add
add
add
add
stos
fidivrl
add
add
cmpsb
add
fiaddl
repnz
out
sub
pop
xor
scas
and
mov
add
into
or
outsb
and
add
add
adc
jmp
call
add
xor
inc
sub
add
add
add
in
xchg
add
add
aas
cmc
sub
imul
and
rolb
popl
add
pop
dec
pop
jg
sti
jbe
push
add
add
sbb
add
iret
inc
add
xor
pop
mov
mov
add
sbb
add
call
push
int3
cmp
cmp
and
daa
push
add
out
xor
mov
mov
mov
mov
testb
add
sub
notl
mov
stos
test
je
mov
jge
loopne
icebp
push
xor
cmp
xchg
add
cmpsb
add
add
sub
int
stc
ret
add
add
add
xchg
add
sub
xchg
aaa
enter
push
jp
add
xor
sub
add
add
arpl
sub
mov
rolb
or
bswap
jg
add
cmc
adc
mov
and
dec
sbb
or
sub
movsb
add
fdivrl
js
add
adc
add
cwtl
xchg
testl
xor
data16
jp
add
add
mov
sbb
add
data16
lret
imul
inc
add
lea
mov
imul
std
push
add
ret
adc
call
xchg
mov
les
cli
sbb
add
add
push
add
mov
jnp
add
addr16
js
add
add
add
lock
ret
cmp
mov
mov
push
ljmp
movb
add
cmp
add
int
mov
add
adc
sub
fdivr
repnz
and
mov
mov
lock
mov
add
add
pop
push
add
add
add
push
mov
scas
xor
mov
ret
sbb
movb
mov
add
aaa
jecxz
add
jne
jne
aaa
inc
add
stos
mov
mov
mov
pushf
pop
pop
fidivrs
out
rolb
add
add
shrl
enter
aaa
jg
jns
popa
cwtl
daa
inc
add
lods
stc
inc
loopne
xchg
repz
xchg
or
add
sub
cld
mov
add
nop
add
das
ret
shl
rolb
enter
cmpsl
and
mov
inc
add
push
add
outsl
lea
add
pop
inc
jmp
add
js
add
ret
ds
add
mov
fsubrl
dec
dec
in
popf
sbb
xchg
add
add
data16
add
call
addb
dec
push
hlt
add
mov
sub
add
dec
ficoml
add
jnp
add
add
pop
sti
cmp
cmp
add
add
add
xor
lock
add
lahf
mov
mov
sti
push
add
add
add
add
jb
mov
xchg
adc
sbb
add
add
add
mov
insl
mov
add
pop
cmpxchg
ret
add
add
add
sbb
jecxz
add
dec
sbb
outsb
mov
cs
pop
insl
subl
sub
cs
cs
and
mov
add
add
sti
add
sbb
add
stos
cmp
jmp
mov
xor
cmpsb
add
clc
adc
faddp
mov
and
or
test
dec
mov
mov
hlt
add
add
mov
cltd
dec
pop
mov
add
jno
jecxz
add
addb
cmp
add
xor
lods
or
xchg
add
mov
pop
inc
add
lret
cmpsb
add
pop
inc
jb
mov
cld
cwtl
dec
mov
mov
movsl
aaa
cmp
pop
mov
add
mov
loopne
stc
sbb
add
in
and
mov
in
dec
call
sbb
out
xchg
adc
add
sbb
sub
push
add
pop
mov
sbb
inc
enter
loopne
dec
mov
jns
add
xor
add
xchg
loopne
loopne
jae
loopne
pushf
push
sahf
inc
add
cmp
pop
fcoml
xor
add
fucom
add
cmp
xor
and
add
cwtl
dec
dec
sub
inc
addb
add
add
pop
cmc
out
icebp
aad
add
mov
call
arpl
push
and
mov
mov
aaa
dec
rolb
mov
add
mov
add
inc
add
cmpsb
add
pusha
add
mov
sub
push
cmp
add
add
loopne
dec
inc
add
add
xor
cmp
js
jmp
xchg
add
add
sub
and
mov
int3
xlat
ds
add
dec
push
ja
stos
fistpl
repz
mov
out
fcomps
inc
out
add
inc
inc
add
add
xchg
jne
add
insb
mov
outsb
loope
xor
mov
sbb
imul
bound
mov
jns
sbb
xchg
add
pop
shrl
mov
insl
cmpsl
outsl
leave
rolb
and
lock
xchg
lahf
add
cmp
inc
sub
fnstcw
negl
insb
mov
jg
inc
add
add
jecxz
add
add
aaa
out
sub
icebp
and
adcl
mov
popf
fnstsw
sub
add
inc
xor
xor
sub
in
in
scas
loop
pop
data16
js
push
jb
jae
add
add
fimuls
add
addb
add
in
repz
cmp
pop
xor
jno
push
add
mov
je
test
lea
stos
je
pop
jbe
sbb
add
add
jmp
dec
pop
les
loopne
push
jp
lods
push
addl
mov
sbb
mov
das
test
insb
les
sub
add
add
add
add
xchg
mov
add
add
add
stos
out
movsl
jb
insb
pop
push
mov
ds
mov
js
adcl
je
add
cmc
jmp
add
jno
jp
add
push
add
scas
sbb
pop
add
xchg
add
adc
add
mov
cmp
add
add
add
xor
add
ljmp
add
add
add
movsl
in
push
aam
test
lahf
push
data16
dec
jge
inc
testb
add
in
adc
add
mov
mov
add
add
test
outsb
jo
bound
mov
pop
and
add
pushf
mov
add
cmpsl
inc
add
dec
ret
jl
shl
arpl
mov
dec
xor
mov
sahf
fldenv
mov
mov
xchg
add
add
mov
lea
adc
mov
enter
cmpsl
ret
jp
and
mov
lods
int3
aam
jl
inc
add
ljmp
dec
mov
je
loopne
sbbl
rolb
sub
and
mov
push
ret
add
in
jecxz
push
iret
push
and
jle
mov
aaa
adc
or
arpl
sbb
add
fists
cwtl
pop
rolb
mov
ja
inc
add
mov
push
add
cmpsl
add
push
mov
addr16
push
add
add
rolb
push
add
adc
mov
jo
adc
fcomi
test
jmp
xor
add
cmp
xor
mov
xchg
add
outsb
pusha
add
mov
ljmp
cltd
mov
popa
iret
test
sbb
mov
fiaddl
push
fidivl
mov
cmpsb
add
add
push
add
test
jge
icebp
sti
data16
lret
xlat
pop
xor
test
push
add
mov
mov
mov
jnp
sub
xchg
adc
xor
add
scas
lret
add
jl
scas
mov
xor
ljmp
testb
lcall
sbb
testb
jno
add
les
in
and
and
dec
je
imul
add
xchg
add
push
pop
pop
pushf
inc
add
jge
add
add
add
mov
xor
add
add
cltd
sbb
test
inc
add
add
add
add
add
je
outsb
sub
les
adc
cmp
mov
mov
xchg
add
add
sti
sub
pop
mov
enter
adc
add
add
jbe
xchg
add
add
cmp
push
jl
jmp
jecxz
lods
adc
xchg
cmp
inc
add
add
jae
data16
mov
sti
ret
ljmp
mov
and
jecxz
movsb
add
and
mov
and
mov
mov
jge
aad
loope
adc
add
dec
cmp
scas
push
cmp
dec
aam
stos
jmp
dec
sub
jb
mov
out
lds
pop
mov
mov
insl
dec
jl
lret
frstor
add
stos
popa
pushf
or
add
add
imul
daa
sahf
dec
add
jmp
lods
sahf
aad
iret
mov
addb
push
out
mov
fidivl
add
add
sbbl
cmp
add
mov
mov
mov
bound
mov
mov
add
jns
inc
push
mov
xor
push
add
xor
add
pop
jbe
mov
pop
mov
mov
sub
adc
jl
add
sbb
pop
lds
inc
mov
jge
sub
in
in
inc
add
add
xor
cmp
push
dec
jle
dec
call
add
add
add
jno
je
mov
pop
repnz
dec
add
and
pop
add
mov
enter
adc
mov
dec
sbb
adcl
add
inc
add
pop
xchg
sub
shll
add
mov
add
add
add
adc
imul
lcall
in
sbb
add
jp
imul
add
add
call
outsl
sbb
cmc
clc
xor
adc
xchg
cmp
data16
add
insb
adc
mov
xchg
cs
add
dec
nop
add
cmp
out
jb
ret
cmpsb
add
or
lea
rolb
lcall
pop
mov
push
sub
add
sbb
mov
add
daa
pop
pusha
add
add
inc
rolb
cmp
mov
add
add
pusha
add
sbb
add
les
xor
add
xor
push
add
mov
imull
mov
jne
add
repnz
ds
cli
je
pushf
iret
mov
pop
pop
push
std
fnstsw
push
add
pop
xchg
add
sar
inc
add
mov
fsts
ljmp
add
jp
add
add
mov
test
xor
or
mov
inc
add
add
ret
add
scas
sub
mov
xchg
add
mov
in
push
add
test
bound
mov
movsb
add
add
add
pop
mov
stc
in
cwtl
lock
add
or
ds
add
cmp
add
mov
add
add
js
cmp
add
mov
cwtl
sub
push
add
and
mov
ret
mov
pushf
xor
add
dec
dec
fcoms
sbb
jl
add
aas
cmp
shll
repz
es
insl
shrl
add
xor
pop
cmp
cmp
ret
cmp
dec
insl
insb
lea
test
xchg
fistps
or
cmp
mov
inc
push
add
mov
push
inc
add
jl
push
mov
add
testb
add
mov
dec
in
test
out
pop
inc
add
imul
jnp
and
jle
xchg
movsb
add
add
js
add
add
cmp
fnsave
int
adc
xchg
add
jbe
xor
sub
inc
frstor
mov
mov
inc
add
jl
ss
mov
jne
es
add
mull
add
repz
add
or
add
and
mov
scas
loop
mov
add
stc
rolb
inc
add
add
mov
add
add
add
ret
rolb
xchg
in
jmp
add
sub
xchg
add
or
enter
std
hlt
add
add
add
icebp
sbb
push
outsl
mov
cli
stc
mov
popa
add
mov
fcmovnbe
push
and
fidivrs
mov
mov
lock
add
mov
jp
andl
add
jmp
and
mov
mov
add
add
mov
sbb
popf
jmp
inc
add
add
push
add
mov
jp
dec
xchg
aam
inc
add
and
mov
cmc
int
inc
jmp
sarl
mov
mov
add
mov
popf
or
add
stc
xchg
add
add
jo
inc
add
add
mov
adc
sub
inc
add
sub
aad
add
dec
clc
or
fdivr
and
mov
call
push
insl
int3
fistps
push
push
add
fdivl
add
int
adc
pop
out
fnsave
dec
add
mov
and
loopne
sbb
mov
add
cmp
bound
mov
add
add
leave
dec
fwait
jns
mov
xor
mov
fisubs
pop
movsb
add
enter
jl
add
stos
or
sub
int
clc
or
add
push
jmp
shll
xchg
aaa
imul
bound
mov
add
add
mov
add
add
fstl
cmpsb
add
jg
mov
aaa
jnp
cmp
imul
push
add
out
lret
add
movl
add
or
lcall
fwait
add
fistpl
adc
add
je
jo
rolb
lahf
arpl
push
add
loop
shrl
pushf
rolb
jbe
in
or
and
sub
jb
xchg
add
add
mov
push
add
add
sbb
add
xlat
and
arpl
rolb
add
imul
bound
mov
xchg
add
sbb
mov
adc
mov
incb
mov
xchg
mov
add
and
movsb
add
inc
add
addb
add
xchg
add
add
iret
cmp
icebp
jne
test
aam
push
add
push
add
mov
xor
arpl
and
mov
and
inc
add
cmp
push
add
add
xchg
add
test
ss
outsb
cltd
popf
icebp
sti
int
les
xor
cmp
xor
xchg
add
add
mov
mov
imul
test
sub
out
sarl
shll
js
dec
jb
push
add
add
add
mov
dec
inc
mov
dec
jns
cmp
adc
and
xchg
add
add
dec
sub
icebp
lret
stos
inc
aam
push
cltd
and
adc
push
loope
in
adc
add
add
push
add
mov
add
add
add
mov
pop
xor
jmp
bound
mov
imul
stos
insl
and
push
out
daa
and
int
int3
js
je
movb
add
inc
add
mov
add
sub
sub
add
sub
lock
cmpl
sbb
add
add
pop
pop
data16
loopne
push
fildl
jge
bound
mov
pushf
adc
inc
add
add
mov
fldl
cmp
and
aad
inc
dec
ficomps
xchg
add
add
mov
add
pop
xor
jge
sbb
mov
or
mov
dec
mov
xchg
sbb
add
fdivrs
fxch
ds
add
cmpsl
push
add
add
jmp
popa
shl
add
je
or
add
pusha
add
stc
mov
aas
mov
add
test
or
std
jle
add
add
add
notl
add
add
das
inc
mov
or
push
test
dec
pop
ror
mov
jmp
add
in
dec
bound
mov
jbe
test
out
dec
dec
fbld
push
cmp
cs
sbb
add
cmc
inc
add
movsl
hlt
add
add
fldenv
add
mov
loop
mov
pop
mov
test
movsb
add
mov
or
js
add
mov
stc
add
adc
ljmp
stos
arpl
jmp
add
aas
inc
add
add
clc
addr16
movb
clc
push
add
add
in
invd
mov
jecxz
fwait
test
lret
test
push
lahf
and
lods
imul
xchg
add
add
add
jno
addb
push
push
imul
add
xor
add
out
into
jo
sbb
ret
out
jp
add
mov
add
add
add
cltd
repz
insb
aas
and
xchg
pop
imul
add
icebp
nop
add
or
xchg
pop
mov
rolb
ret
mov
xor
iret
inc
push
add
add
rorl
or
call
inc
add
rolb
int
rolb
rolb
insb
sbbl
push
push
inc
add
add
test
dec
bound
mov
inc
add
add
dec
add
mov
mov
add
add
adc
mov
cmpsl
or
pushf
rcll
test
in
testb
add
sti
pop
jg
popf
adc
add
mov
lock
mov
roll
sub
jp
sbb
xchg
push
pop
jno
add
add
inc
add
out
out
push
add
xor
add
and
xchg
add
sbb
fists
add
add
in
mov
scas
gs
add
subl
add
mov
cmp
mov
inc
add
enter
sbb
add
iret
adc
add
mov
adc
add
pop
adc
jl
mov
add
data16
add
testb
fwait
mov
cltd
pop
iret
fnstsw
dec
cwtl
sub
stos
or
add
xchg
add
scas
cmp
xor
add
xchg
add
out
add
mov
in
mov
xor
add
add
add
cli
test
aam
cmp
xchg
jbe
std
lcall
add
add
dec
scas
fistpl
enter
push
add
jmp
add
mov
add
jae
add
xchg
adc
les
xchg
sub
add
lahf
adc
push
jns
adc
and
mov
mov
pop
mov
cltd
bound
mov
add
mov
mov
test
mov
outsb
repz
cmpsl
loope
call
add
in
test
pop
stc
push
add
add
mov
int3
leave
adc
add
cmp
xor
add
cmpsb
add
js
add
add
add
lret
sbb
mov
mov
add
mov
js
mov
shrl
add
mov
int
clc
xor
mov
cld
mov
add
sbb
pushl
addb
ds
int3
hlt
add
dec
in
mov
negl
dec
cld
insl
mov
add
add
mov
adc
popa
dec
mov
mov
lods
arpl
add
rolb
das
push
in
sub
push
add
add
mov
imul
fidivs
add
add
sbb
mov
add
pusha
add
mov
add
inc
xor
rolb
imul
xlat
ja
rcr
inc
add
jp
xor
jp
inc
add
imul
mov
add
addr16
test
or
xlat
das
pop
xchg
and
hlt
add
pop
ja
rolb
jo
xchg
inc
push
jbe
test
shll
push
add
jae
cmp
mov
icebp
mov
mov
dec
clc
hlt
add
les
loope
push
and
add
fdivr
xor
mov
inc
pop
mov
sbb
clc
testb
addb
adc
add
add
push
add
xchg
xor
cmp
xor
mov
add
call
push
jne
jo
jmp
dec
fistpl
xor
les
bound
mov
mov
cmp
push
adc
stos
adc
jmp
data16
mov
sbb
add
push
bound
mov
shll
pop
repnz
add
fs
psubusb
sub
fdivrl
push
adc
add
adc
inc
add
int
mov
jle
add
add
push
test
ljmp
mov
add
inc
add
add
add
add
add
cmp
ja
add
cli
pop
mov
scas
sbb
pop
icebp
jg
inc
add
and
add
in
sbb
movsb
add
stc
fwait
cmpl
adc
adc
pop
adc
xchg
int
jne
add
aad
add
lret
int
pop
xchg
pop
jecxz
pop
shll
add
or
cmp
mov
rcll
jo,pn
test
and
insb
stos
pop
aam
fists
add
jmp
aad
inc
push
ficomps
sub
fidivrs
jle
mov
xchg
jp
inc
add
pop
mov
loopne
lcall
fsubrl
imul
add
cltd
rolb
add
and
mov
fstl
jge
add
add
add
inc
fisttpll
mov
add
xor
push
add
mov
stos
sbb
xlat
and
cmp
inc
add
ror
scas
ret
add
jo
test
scas
mov
add
jge
push
xlat
jle
subl
repnz
jmp
cmp
xchg
sbb
jo
mov
mov
inc
mov
add
add
ljmp
mov
shll
mov
xlat
push
mov
movsl
aad
inc
imul
out
mov
xor
inc
rolb
and
out
pop
dec
aad
sbb
andl
out
xchg
push
add
sub
push
sbb
inc
js
data16
dec
and
ds
aaa
dec
mov
add
or
sarl
jmp
addr16
xor
jne
add
add
add
negl
add
add
add
sbb
mov
xchg
mov
push
repz
add
flds
add
int3
les
or
or
add
add
or
sub
push
add
cmp
or
add
push
add
add
call
xor
add
add
add
sbb
add
adc
jnp
add
add
mov
lcall
lret
hlt
add
push
add
mov
xlat
rolb
pushf
sbb
inc
int
rolb
cmp
sub
add
fcmovb
dec
push
add
add
xor
add
daa
lods
jge
add
jnp
add
lahf
loopne
lods
adc
aas
out
add
mov
pop
sbb
push
out
mov
adc
push
add
add
add
bound
mov
lods
fsubrl
cmp
filds
mov
add
mov
xchg
push
add
add
xor
sbb
add
xor
jl
sub
mov
push
addb
add
mov
jl
add
dec
rolb
or
jae
or
add
add
jle
icebp
loopne
les
push
scas
jge
repz
add
sub
add
add
das
repz
aas
mov
adc
xor
pop
test
push
add
shll
flds
add
lods
jp
and
mov
add
or
add
xor
addb
inc
cmp
cmpsb
add
add
sbb
add
adc
movsb
add
ret
cwtl
adc
add
mov
hlt
add
add
mov
outsl
mov
add
addb
fucomi
stos
xchg
jmp
add
add
mov
gs
xchg
add
jae
add
inc
or
lret
inc
add
int3
add
mov
call
add
xchg
xchg
mov
pop
push
jbe
daa
mov
inc
add
popa
add
add
and
mov
mov
mov
pop
fistpll
pop
lret
aad
and
loop
pop
jp
push
mov
push
push
int3
mov
insl
dec
jnp
add
fcom
add
add
add
lea
cli
add
testb
add
out
gs
mov
ret
push
fisttps
push
add
add
add
add
sbb
dec
je
sbb
add
dec
xor
fucom
inc
add
add
and
imul
and
repnz
add
incb
xor
mov
scas
adc
add
mov
add
add
add
fsub
rolb
add
sbb
inc
addb
pop
and
mov
sbb
jmp
pop
ja
mov
add
jo
add
loopne
pop
enter
add
add
nop
add
push
test
imul
mov
push
add
outsl
enter
leave
xchg
add
shll
and
dec
xchg
add
add
imull
dec
inc
add
popf
orl
ds
add
adc
add
fldenv
add
iret
cld
mov
push
push
jns
add
repz
xor
addr16
mov
mov
push
add
add
lret
out
jp
add
std
mov
rolb
mov
in
cmc
and
mov
lods
mov
incl
sbb
xor
push
addb
sti
add
add
mov
loop
dec
jb
xor
test
mov
add
and
push
and
mov
and
add
add
inc
add
pusha
add
pop
sahf
fbstp
jne
add
add
jno
inc
add
add
stos
fcompl
adc
rolb
pusha
add
in
outsl
push
out
sub
add
push
cmc
int3
aaa
pop
and
jle
xchg
add
js
push
mov
cs
add
inc
shrl
movsl
xorl
shrl
icebp
pop
pop
mov
and
mov
add
mov
mov
add
rolb
lea
push
add
add
add
aaa
dec
push
add
xor
xor
push
xchg
cld
sub
add
add
je
sti
pop
mov
fists
push
jno
dec
jmp
push
movsb
add
add
push
pop
xor
inc
add
lret
insl
rolb
xor
scas
cmc
xchg
add
mov
push
add
add
add
mov
mull
mov
cltd
inc
add
scas
cli
int3
hlt
add
xor
mov
add
add
mov
add
add
or
add
sbb
add
outsl
in
in
add
mov
icebp
rolb
fisubrl
lea
inc
add
jne
icebp
fmull
adc
mov
and
add
cwtl
fwait
cli
mov
sub
repz
or
add
icebp
xchg
jl
gs
add
mov
jecxz
jp
add
shrl
aad
mov
jl
add
push
mov
pop
movsb
add
daa
or
pop
jbe
or
add
pusha
add
pop
mov
add
xchg
and
mov
test
add
out
and
sub
repnz
daa
scas
xchg
add
iret
insl
inc
add
sbb
lods
lea
cmp
movsb
add
jp
fidivrs
mov
add
jg
dec
insl
jae
mov
sbb
inc
cwtl
inc
add
and
mov
dec
and
sub
add
or
fmuls
add
push
shll
mov
xlat
push
push
add
sub
xchg
testb
sbb
jne
add
add
std
std
inc
dec
in
pop
and
add
out
aad
add
add
std
pusha
add
xor
fstpl
dec
addb
add
add
dec
xchg
jmp
stos
jle
pop
stos
jne
pop
popf
sub
loop
sub
add
outsb
mov
sbb
add
fidivrs
push
lea
ja
add
add
add
sub
cs
add
xchg
add
pop
into
pop
addr16
and
cmp
adc
lods
pop
pop
insl
mov
rolb
inc
mov
mov
add
add
and
call
push
sbb
cmp
rcl
add
add
inc
lcall
add
inc
inc
mov
add
xchg
insl
sbb
add
lcall
xchg
add
add
xor
and
je
pop
dec
sarl
add
add
aad
jmp
add
mov
cld
test
push
mov
mov
call
loope
cmp
aas
dec
pushf
mov
pop
mov
pop
push
cld
test
mov
rorl
sub
loop
ret
xchg
dec
add
add
mov
add
lds
dec
in
xor
pop
xor
xchg
add
out
and
insb
xchg
test
add
mov
notl
fdivrs
add
push
test
pushf
and
sysexit
jns
sbb
jnp
add
mov
cmpsl
xor
cmp
add
and
push
adc
mov
add
sbb
pop
push
cmp
add
lcall
xor
push
add
fwait
mov
cmp
mov
rolb
adc
jmp
or
xor
add
test
add
add
mov
iret
out
aad
mov
pushf
aad
mov
dec
mov
ffree
add
add
mov
add
adc
inc
add
add
and
mov
mov
mov
daa
and
negl
sub
aad
add
lds
lret
rolb
and
sti
daa
pop
cmpl
add
add
mov
aad
add
rolb
jae
add
add
add
jmp
add
add
cmp
int
es
ficoms
add
cmp
jl
xchg
add
push
add
sbb
and
cltd
xchg
punpcklwd
aam
mov
outsl
call
dec
cmpsb
add
cmpl
cli
sub
xchg
add
sub
add
mov
xor
je
iret
sub
mov
mov
pop
xchg
and
mov
pop
mov
mov
addr16
lods
inc
add
add
add
dec
cmp
pop
mov
int3
or
fisubs
jecxz
add
sti
and
or
add
add
add
cmpsl
jle
leave
jp
int
add
add
pop
repnz
loopne
mov
pop
mov
cmp
xor
xor
ljmp
sahf
xchg
add
test
add
popa
inc
pusha
add
aam
hlt
add
fisttps
outsl
xchg
mov
add
and
mov
fucomip
cli
xor
adc
or
add
icebp
fisttpll
mov
emms
dec
les
jo
mov
add
mov
adc
or
push
flds
jp
add
add
add
inc
out
dec
jae
js
add
add
mov
dec
insb
and
push
pusha
add
mov
cltd
dec
xor
ret
and
imul
or
sahf
jbe
fdivs
add
pop
or
xor
mov
add
add
test
sub
std
pop
add
mov
xchg
add
dec
ret
push
add
mov
mul
pop
and
int
mov
and
xchg
add
mov
mov
add
push
or
add
jp
or
push
mov
add
adc
xchg
add
or
mov
xor
or
stc
mov
add
mov
add
jecxz
add
rolb
add
add
fistpl
dec
les
mov
gs
enter
mov
popf
rcrl
stos
lret
jle
add
add
add
or
stos
mov
mov
add
cwtl
add
mov
inc
add
cmp
aaa
out
mov
jb
int
add
call
add
bound
mov
mov
add
add
cli
rolb
add
pop
inc
add
fidivs
mov
sbb
mov
add
add
nop
add
add
repz
add
mov
add
add
add
add
les
lods
xchg
add
gs
and
mov
imul
rolb
cmp
inc
fists
push
and
mov
mov
andl
and
mov
cs
fnstsw
cmc
int3
cmp
mov
and
cli
dec
cli
jae
fs
add
cmpsb
add
test
jo
pop
xlat
push
add
fbld
add
add
jge
pop
call
test
lret
cld
cmp
sbb
push
add
clc
data16
jnp
sub
inc
add
fst
or
gs
les
inc
idivl
call
add
test
pop
les
into
dec
inc
add
inc
add
and
mov
jge
int
cmpsl
xchg
int
sub
push
lea
or
sbb
repnz
pushf
cmp
sub
add
jl
das
jle
sbb
mov
bound
mov
push
add
jp
pushf
inc
movsb
add
mov
call
add
mov
lcall
push
add
int3
mov
dec
enter
xchg
add
and
js
add
in
mov
jb
jge
add
pop
imul
cs
add
mov
jmp
jno
in
mov
add
mov
add
pop
popf
in
movb
std
mov
add
jge
sub
lcall
xor
in
xorl
mov
lods
pop
ret
inc
add
add
cs
dec
jnp
out
movl
add
add
mov
les
adc
add
xchg
add
xor
xlat
add
pop
addb
add
add
js
mov
fwait
sbb
xchg
adc
add
addb
jnp
mov
push
add
mov
add
mov
add
push
popf
and
jne,pn
inc
cwtl
int
mov
adc
jg
add
ljmp
add
ret
push
popf
sbb
jo
in
pop
mov
add
xchg
mov
pop
mov
push
add
xchg
add
pop
lods
pop
sub
mov
add
daa
mov
add
mov
dec
inc
add
lea
call
in
cmp
popa
push
addb
add
and
test
add
lret
jg
add
inc
bound
mov
push
mov
rcll
dec
dec
dec
enter
inc
add
add
add
test
movsb
add
mov
add
add
enter
sahf
mov
add
jbe
enter
add
testb
cltd
pop
ret
outsb
jae
add
lahf
add
add
mov
testb
xor
push
popf
jne
adc
lds
pop
mov
add
add
js
or
or
add
fxch
imul
sbb
inc
add
fwait
sub
lcall
xchg
add
jb
les
pop
inc
mull
adc
pop
sub
jge
sub
mov
ret
sub
loope
stc
jg
popf
pop
in
xchg
ja
scas
or
add
in
popl
es
adc
outsl
out
sub
add
mov
fbstp
lret
sub
loope
add
jle
in
rolb
mov
add
inc
mov
add
popa
dec
imul
loope
out
mov
push
add
outsl
mov
repz
add
and
arpl
mov
adc
xor
mov
test
jg
shll
add
popa
in
addr16
push
add
mov
dec
popa
xor
mov
add
sbb
adc
and
mov
jnp
lea
push
mov
jno
add
lods
mov
push
cmp
xchg
add
add
mov
inc
add
enter
ret
in
mov
add
push
add
add
pushf
or
fiaddl
add
dec
stos
pop
xchg
cmp
into
adc
popf
sti
jmp
outsl
push
es
repz
ret
add
out
imul
dec
movb
add
add
mov
out
xlat
arpl
sub
lcall
push
add
scas
and
aam
cmp
jmp
jle
add
jns
add
sub
add
add
or
repnz
cmp
add
scas
pop
rolb
add
xor
jge
and
xlat
loope
pop
jmp
add
cs
add
sub
add
add
xchg
add
xlat
cwtl
jnp
mov
add
add
inc
add
dec
jb
fdivrl
add
lahf
jecxz
ret
adc
cmp
xchg
dec
mov
ds
adc
push
add
xor
das
mov
in
mov
clc
test
add
and
mov
or
mov
push
add
fdivrs
mov
adc
sbb
imul
inc
mov
add
cmovb
mov
ljmp
add
out
mov
inc
xchg
mov
mov
mov
or
push
and
jle
outsl
call
xchg
add
add
jmp
sahf
out
xor
int3
out
sub
add
add
add
leave
jns
push
add
push
hlt
add
sub
lcall
mov
cli
cmp
or
mov
testb
add
shll
rorl
push
add
add
outsb
ljmp
dec
pop
lock
add
add
pop
ret
cld
cmp
stc
test
add
push
add
add
out
adc
pop
fsubrl
add
add
mov
mov
in
and
mov
ret
push
xlat
push
inc
vunpcklps
stos
or
add
test
add
lahf
add
rolb
or
std
dec
sarl
or
add
cmp
adc
movsb
add
mov
loopne
test
cli
add
pop
xchg
add
lcall
push
dec
mov
add
pop
insb
loope
repz
test
add
pop
mov
add
out
sbb
add
xchg
dec
lret
xchg
add
addr16
add
add
fcoml
mov
inc
add
stc
test
aad
push
mov
pushf
out
xchg
add
test
fbld
lret
ja
add
lret
add
add
xchg
rolb
into
stc
test
loope
cmp
add
stos
rolb
inc
add
loop
xchg
add
add
add
jnp
dec
ficoms
nop
add
dec
loopne
dec
dec
test
sub
gs
add
add
mov
cmp
fadds
sub
cmp
xchg
add
add
gs
and
add
aaa
das
fisttpl
mov
add
hlt
add
ret
pop
add
xchg
in
cmpsb
add
add
add
add
add
call
add
inc
cld
flds
add
cwtl
lods
lret
inc
add
push
xor
or
cmpl
adcl
and
push
sub
imul
add
sbb
add
sbb
pop
push
add
add
push
xor
stos
dec
arpl
int3
imul
add
mov
ljmp
mov
and
jae
test
movb
movd
push
add
add
in
pop
cwtl
fisubs
push
mov
add
add
add
add
bound
mov
clc
fnsave
add
out
dec
mov
or
add
or
push
sbb
data16
dec
hlt
add
mov
add
cmp
mov
add
je
jnp
push
cmp
add
lcall
xor
add
xchg
add
bound
mov
add
rolb
add
cmp
add
push
add
push
add
add
add
pop
jne
xchg
add
inc
add
bound
mov
add
adc
mov
inc
dec
xor
pop
adc
add
xchg
add
mov
mov
add
add
add
mov
cltd
fcmovnb
add
sub
dec
inc
add
nop
add
jne
dec
pushf
pop
out
addr16
movsb
add
mov
and
mov
enter
mov
add
mov
loope
jno
add
scas
rolb
add
and
stos
arpl
add
xchg
add
test
clc
mov
jo
push
add
out
rolb
ret
pop
aad
adc
push
mov
dec
cmpsb
add
xchg
aas
in
jg
lahf
test
loop
addr16
add
addr16
jae
addr16
hlt
add
mov
mov
bound
mov
dec
add
xlat
mov
or
add
add
loopne
pop
and
mov
mov
or
dec
dec
mov
std
out
les
repnz
add
inc
add
dec
popa
iret
or
sti
lea
enter
mov
add
ret
int3
enter
xor
add
pusha
add
sbb
or
and
mov
pusha
add
push
add
cwtl
outsb
outsb
and
dec
mov
push
add
add
add
repnz
lret
jns
or
sub
pop
cmp
aad
dec
bound
mov
pop
stos
fcomi
loope
add
push
or
sbb
add
push
xchg
aas
insb
xchg
add
xchg
add
dec
popf
sbb
pop
or
jecxz,pt
add
cmpsl
mov
ds
add
ljmp
add
testb
add
loopne
adcl
sbb
aaa
jb
pop
testb
add
xor
xchg
xchg
add
or
inc
add
std
in
jecxz
aam
inc
add
adc
sbb
pop
in
cmp
out
or
pop
fadd
add
mov
add
add
add
mov
dec
add
mov
add
add
add
std
sub
or
mov
push
add
sub
sbb
adc
sti
cs
movb
add
xchg
add
jb,pt
repnz
cmp
cs
stos
cwtl
fisttpll
xchg
add
cmp
sub
push
scas
fcomip
add
mov
xchg
dec
push
insl
testb
add
mov
add
add
idiv
hlt
add
enter
int3
mov
pop
adc
sbb
add
add
mov
inc
scas
sti
and
testb
xor
jne
add
mov
sbb
mov
add
cli
xchg
add
add
jmp
pop
inc
inc
add
xchg
add
push
add
mov
adc
add
add
dec
xchg
xor
adc
add
add
add
mov
and
std
adc
xchg
xchg
add
jo
ds
pop
out
test
imul
add
outsl
outsb
nop
add
rolb
shrl
lea
add
inc
repz
pop
data16
sub
inc
loopne
stc
lds
dec
sarl
pop
sub
sti
ds
mov
mov
lret
add
and
add
stos
sub
add
gs
add
fisubrs
inc
add
pop
movsb
add
outsb
data16
or
lret
into
movsl
add
into
out
in
add
mov
or
pusha
add
xor
sbb
push
cmpsl
bound
mov
xchg
mov
nop
add
xchg
add
fmuls
dec
ljmp
jno
add
mov
lea
adc
sbb
add
push
jmp
sahf
lds
push
jg
xor
or
das
inc
add
add
fnsave
add
mov
jns
push
lock
pushf
in
push
add
mov
js
jmp
mov
in
mov
inc
add
xchg
stos
sarl
sub
inc
faddp
add
bound
mov
add
push
divl
dec
or
test
push
pushl
sbb
and
int3
rolb
add
add
add
push
add
sbb
xor
sti
mov
ja
pop
xchg
adc
jge
xor
ret
sbb
add
add
lock
add
das
ja
mov
add
scas
push
add
in
inc
add
sub
int3
rolb
add
add
push
add
fmull
aam
js
push
jp
add
sub
inc
inc
xor
popa
adc
sbb
in
stos
bound
mov
add
movb
adc
in
add
or
pusha
add
push
imul
add
add
mov
jl
rolb
add
mov
push
add
mov
pop
sub
add
add
aaa
xor
and
mov
sub
rolb
push
add
jae
adc
add
push
popf
sbb
aas
sbb
lret
fsubs
add
rolb
jo
pop
test
cmc
mov
mov
add
daa
test
push
add
clc
mov
gs
dec
in
xchg
sbb
add
and
scas
adcl
or
add
fildll
les
icebp
in
push
add
add
add
pushl
jl
lods
in
fwait
loope
add
add
imul
fimull
adc
add
and
mov
add
out
add
not
add
jne
pop
aam
xchg
add
cltd
sub
add
iret
mov
sbb
in
in
xchg
add
addb
pop
ja
pop
cld
push
add
dec
leave
sub
xchg
dec
sbb
testb
test
lahf
pusha
add
inc
add
ret
mov
pop
test
add
mov
fwait
pushl
cli
clc
mov
add
sbb
mov
or
leave
sub
add
add
jl
rolb
ljmp
push
and
out
or
jmp
repnz
call
insl
aas
pushf
in
pusha
add
scas
je
and
add
cmpsl
xor
jp
push
mov
lahf
call
add
jae
movsl
mov
pop
xor
adcl
insb
into
xchg
call
add
jmp
popf
pop
mov
add
sub
fdivrs
push
mov
fisubrl
push
mov
or
repnz
add
add
dec
rcll
aam
cld
add
mov
stos
fsub
add
cmc
jb
addr16
ja
shll
inc
and
or
adc
mov
in
mov
sbb
scas
cs
add
add
add
mov
mov
aad
push
filds
stc
mov
mov
add
dec
or
ret
jo
insb
lods
add
add
xchg
cmp
cmp
ret
icebp
sbb
pop
pusha
add
sub
add
add
add
xchg
inc
and
mov
mov
mov
mov
cli
cmc
lcall
add
add
add
mov
iret
dec
and
gs
mov
les
jno
add
mov
pop
stc
push
fcoms
add
and
mov
push
add
ja
int
add
cltd
insb
adc
mov
in
add
add
add
add
cmp
sbb
cmp
add
pusha
add
add
pop
loope
add
or
cmp
add
or
dec
xchg
add
or
adc
into
dec
push
adc
nop
add
mov
jne
add
add
into
jnp
add
ret
adc
jmp
add
jmp
add
or
inc
add
ljmp
outsb
dec
shll
inc
in
pop
cmp
rolb
mov
aad
jecxz
add
xchg
add
inc
dec
xchg
fistpll
sub
fwait
inc
add
add
mov
inc
out
stos
mov
adc
cmc
sbb
fucomi
repnz
mov
test
fsubl
fnstenv
mov
cmc
inc
add
sub
mov
mov
add
cmpsb
add
test
shll
mov
mov
popa
mov
xor
or
mov
movsb
add
rolb
lcall
mov
jo
test
cmpsb
add
add
push
add
xchg
add
add
add
and
xchg
iret
bound
mov
or
add
cmp
or
add
test
add
push
add
into
sub
repnz
add
mov
or
xor
pcmpgtw
push
cmc
out
cli
push
dec
out
incb
add
repnz
mov
dec
or
into
fadds
dec
and
xchg
movsl
cmpsl
lods
xor
and
mov
lret
push
mov
out
lea
xor
pop
mov
add
rcll
mov
stc
fadds
add
mov
data16
sub
pop
bound
mov
out
adc
add
lahf
adc
or
inc
add
int
and
addb
or
lret
and
inc
lock
ljmp
xor
sti
and
add
ret
add
and
mov
add
mov
cmpsl
pop
push
add
add
js
cld
mov
add
add
adc
arpl
lahf
adc
sbb
sbb
sbb
jno
xchg
fisubrs
mov
inc
add
mov
mov
add
shrl
add
push
insl
and
out
mov
add
cmp
add
add
cli
adc
xchg
add
sbb
push
add
push
fisubrs
sti
push
inc
add
lods
sbb
add
dec
nop
add
dec
adc
in
jo
sub
dec
xchg
add
cltd
jg
pushf
xor
and
mov
pop
sub
add
push
add
push
pop
mov
mov
popa
fwait
inc
add
pop
jle
add
in
loop
outsl
sbb
lret
popf
xor
loopne
sub
add
loope
aad
int
sub
push
push
xor
popf
fiaddl
add
mov
addb
in
jb
xor
adc
jbe
imul
lret
inc
mov
add
insl
pop
arpl
fisubrs
lods
add
mov
repz
xor
inc
dec
ljmp
xlat
lods
add
mov
repz
stos
rolb
inc
add
add
mov
cwtl
push
add
add
add
add
cli
xor
push
mov
hlt
add
xlat
xchg
sahf
ljmp
push
movsl
xchg
cmp
mov
mov
int
add
outsb
mov
add
out
mov
push
add
lods
pop
ret
fwait
in
add
outsb
jmp
popa
lret
mov
add
or
add
add
mov
or
mov
insb
aad
sbb
faddl
add
scas
mov
aad
cmp
add
or
and
repnz
out
xchg
add
and
add
sub
sbb
add
pop
ds
mov
repnz
adc
movsb
add
xchg
scas
push
add
fstpt
mov
ds
or
add
mov
jae
mov
cmp
add
rolb
adc
add
mov
sbb
adc
mov
test
jb
and
dec
mov
popa
jne
add
xchg
push
add
mov
das
rolb
add
inc
cmpsb
add
inc
add
sub
add
mov
add
test
sbb
add
or
adc
addr16
or
or
ficompl
and
mov
addr16
xor
add
ret
addb
inc
sub
adc
add
inc
add
push
add
outsb
subl
add
add
mov
loope
loope
or
mov
out
stos
lea
jnp
add
mov
add
xor
movsl
push
fildll
cs
dec
inc
add
add
jns
setns
cmp
call
lret
addb
add
add
add
jle
add
mov
or
addb
xor
add
add
adc
add
mov
add
mov
je
jmp
jl
pop
pushf
ja
data16
mov
push
loope
dec
cli
mov
inc
int
add
add
mov
fdivl
add
iret
cmp
fbld
out
testb
cltd
call
add
adc
xchg
jle
in
add
es
outsl
push
push
cld
xor
mov
cmpsb
add
icebp
adc
inc
add
std
pmaxub
dec
sub
add
pop
and
out
adc
add
hlt
add
xor
mov
or
cld
out
and
out
cld
dec
dec
cmp
int3
jae
out
jmp
pop
dec
inc
add
add
shll
xchg
movsb
add
fldt
and
gs
pop
jb
inc
add
or
add
iret
or
and
mov
inc
add
movsl
mov
pop
das
repz
add
addr16
ljmp
cmpsl
or
mov
or
iret
add
mov
add
je
xor
add
mov
dec
push
scas
pop
inc
mov
mov
das
fisubrs
add
add
add
mov
dec
and
mov
jne
loope
add
add
add
frstor
imul
add
stos
inc
arpl
mov
into
push
xchg
mov
add
addb
dec
xchg
sub
mov
mov
add
mov
rorl
mov
rolb
mov
and
dec
adc
bound
mov
fwait
out
stc
and
mov
xor
inc
fnstcw
loopne
jbe
ss
xchg
sbb
mov
clc
push
loop
stos
lahf
pop
inc
push
cmc
add
add
sbb
add
add
add
add
outsl
addb
add
pop
xchg
add
stos
test
push
les
lgdtl
add
pop
push
add
ds
sbb
sub
add
push
add
sbb
adc
cmp
lods
daa
ljmp
dec
or
add
add
in
mov
push
cmp
cli
push
mov
jp
or
insl
xlat
mov
mov
shll
sub
rolb
sbb
movb
add
loope
add
add
and
les
push
add
push
add
sub
adc
popf
rolb
pop
and
xor
add
mov
pop
jge
add
dec
inc
pop
mov
pop
addr16
add
cmc
xchg
jge
decl
add
out
mov
dec
sti
or
add
add
xchg
aaa
mov
pop
imul
sub
stc
loopne
jns
dec
or
jecxz
ficomps
jbe
adc
or
dec
sub
sbb
pop
sub
add
add
xor
jae
add
test
jno
pusha
add
inc
adc
test
add
mov
lcall
rolb
xor
pop
bsf
mov
mov
ds
sbb
pop
xor
mov
add
jmp
cltd
adc
in
xor
lret
mov
add
xchg
fstl
lods
and
add
dec
rolb
test
in
sahf
outsl
mov
cmpl
xor
sub
shl
add
add
jl
push
add
push
mov
adc
mul
add
in
push
js
cwtl
mov
add
arpl
add
lret
xor
inc
add
mov
clc
jb
arpl
mov
add
mov
aaa
or
inc
and
add
add
push
cwtl
add
stc
mov
jae
lods
aam
mov
out
dec
jl
add
mov
add
push
add
sbb
inc
popa
push
dec
sbb
lret
mov
push
jne
adc
sti
aad
jl
mov
ret
jns
mov
sbb
test
or
rolb
adc
mov
mov
add
xchg
add
popf
inc
add
push
add
std
xchg
push
mov
dec
and
xchg
mov
dec
mov
push
add
add
add
add
gs
jl
add
add
jae
inc
pop
cwtl
addb
mov
hlt
add
pop
sbb
add
mov
jnp
add
mov
sub
add
insb
add
add
add
mov
xchg
pop
cmpsb
add
leave
push
mov
int
and
mov
add
mov
fiadds
add
les
insb
pusha
add
xlat
cwtl
lcall
rolb
xchg
push
pop
aam
jmp
xchg
push
add
jmp
mov
push
roll
or
punpckhdq
stos
jb
test
add
add
add
jne
sub
add
iret
mov
dec
push
testl
add
insl
xchg
pop
mov
mov
adc
daa
push
xchg
xchg
mov
add
daa
into
es
test
add
sbb
pop
in
push
add
dec
ja
add
cmp
dec
or
call
add
sti
cmp
push
xor
adc
aam
add
addb
add
add
pop
jle
outsb
out
into
movsl
aaa
in
xchg
insb
fstl
cli
xor
add
xchg
add
mov
add
add
push
lahf
mov
sub
mov
add
lods
je
push
popf
push
add
ds
fucomp
aam
adc
in
add
dec
add
or
add
fadds
loopne
jmp
lock
xchg
add
add
add
icebp
in
rorl
in
sub
add
sahf
mull
add
addr16
adc
sub
jno
cwtl
dec
xlat
test
add
movb
mov
out
rolb
loop
call
testb
iret
push
add
rcrl
cmp
inc
xchg
jmp
add
mov
insb
sbb
cs
add
orl
inc
testb
add
out
add
mov
addb
stc
jl
xchg
add
adc
and
add
lods
loop
sub
fcomps
repnz
lea
add
movsb
add
stc
fisubl
mov
mov
mov
fcmovne
xchg
mov
add
test
add
dec
lods
dec
aas
mov
pop
lcall
mov
mov
rolb
roll
mov
lahf
in
cwtl
lret
data16
add
mov
stos
js
add
aaa
loop
pop
jl
loopne
cmp
aaa
outsb
jne
aaa
pushf
daa
loopne
push
add
add
cmp
add
jl
or
dec
mov
add
aad
xchg
add
stos
sub
push
add
movsl
inc
add
xor
push
bound
mov
or
dec
jle
add
add
mov
enter
test
add
adc
not
add
add
daa
ret
stos
cwtl
outsb
mov
jl
lock
imul
loop
dec
iret
cmpl
pop
or
add
mov
add
cli
xchg
add
rolb
xor
cltd
in
xchg
add
adc
ret
dec
pop
mov
lock
and
mov
mov
add
nop
add
popf
int3
jmp
add
or
jne
pop
popa
push
add
add
gs
int
or
mov
add
mov
subl
push
sub
push
add
adc
and
add
jns
lcall
addb
dec
jae
add
pop
popa
cmp
adc
cltd
mov
xchg
add
jne
push
add
incb
add
fnstenv
aaa
stos
push
xchg
inc
add
add
mov
iret
sub
add
aam
xor
popa
testb
xchg
push
add
add
mov
add
cmpl
add
add
xchg
fcoml
loopne
rolb
or
or
add
add
data16
pop
sub
add
aaa
fwait
popf
in
das
mov
pop
pusha
add
lock
adc
pushf
int
and
mov
jmp
adc
lods
daa
and
flds
mov
cmpsb
add
xchg
int
sub
out
push
ds
into
xchg
add
jbe
add
movb
add
mov
in
inc
xchg
xchg
xchg
dec
aas
push
add
add
in
jg
fmuls
jmp
movb
inc
add
es
add
insl
aam
jg
in
pop
xor
or
add
add
add
mov
jmp
rolb
sub
or
mov
xor
aam
fldenv
mov
push
cwtl
mov
imull
add
adc
into
adc
add
stc
outsb
cmc
pop
or
add
add
add
add
cmpsl
inc
add
pop
sub
adc
push
add
push
add
add
enter
outsl
xchg
add
pop
mov
ffree
add
or
fsubl
mov
push
add
add
out
mov
add
mov
aad
add
add
mov
xchg
dec
cmp
int3
js
aam
cltd
push
add
clc
cmc
or
add
or
add
add
nop
add
xchg
adc
jecxz
add
push
add
roll
ljmp
mov
xchg
add
rorl
add
sbb
push
into
adc
inc
add
mov
cld
imul
add
add
push
testb
inc
mov
add
add
dec
aad
mov
mov
out
lcall
pop
xor
and
mov
fsubs
add
adc
rolb
mov
in
cmpsl
push
add
mov
in
out
inc
push
xlat
cmp
add
pop
popf
adc
add
arpl
add
add
cli
add
adc
xor
popf
inc
add
loop
add
or
arpl
or
lret
mov
mov
lahf
sub
nop
add
add
jbe
andps
not
jb
aas
adc
bound
mov
stos
and
inc
out
flds
cmp
cld
repnz
and
imul
and
cs
je
jp
xor
add
mov
gs
add
add
cltd
hlt
add
cs
fwait
nop
add
add
ffreep
add
push
test
add
pop
cwtl
call
sub
push
add
add
lcall
mov
inc
call
mov
add
mov
xchg
push
add
mov
orl
and
add
cmp
sbb
xor
jno
dec
fwait
inc
push
outsl
xchg
xor
add
pop
or
inc
add
adc
pop
ja
pop
testb
imul
mov
jb
fildll
push
enter
push
mov
inc
add
or
dec
leave
fdivrl
sub
mov
in
or
bound
mov
add
add
add
cmp
sbbl
jne
add
pushf
popa
add
and
mov
add
and
mov
push
adc
out
gs
sbb
cmp
add
jno
rolb
xchg
push
add
jae
cs
bound
mov
cmp
dec
ss
testb
sti
call
mov
dec
movsl
movl
add
push
cmp
add
mov
pop
push
add
pop
fistl
push
or
and
or
xchg
xlat
pop
insl
stos
insb
fiadds
cs
add
add
xor
mov
add
add
push
add
inc
add
mov
test
cmp
mov
loop
and
add
or
pop
ret
jl
add
lea
pop
pop
cmpsb
add
add
jmp
add
popa
or
add
mov
jmp
xchg
movb
fwait
push
add
add
mov
mov
push
add
mov
inc
add
mov
rcr
add
arpl
or
dec
data16
adc
mov
add
aad
jae
add
dec
testb
out
add
aaa
sbb
add
jae
je
xchg
add
in
inc
add
pop
adc
add
jo
mov
lods
mov
add
testb
add
jg
jbe
inc
add
add
mov
stos
ljmp
sub
rolb
fsubs
int
cmc
or
add
xlat
sar
popf
jnp
out
test
push
adc
add
rolb
dec
loopne
mov
add
sub
rolb
fmull
jle
cli
jo
mov
nop
add
rolb
add
add
add
add
outsl
add
mov
and
sbb
dec
push
fsubrl
jle
ficoms
aam
aaa
psubusb
add
mov
add
add
js
add
aam
sub
xor
in
pop
xorl
dec
aam
sbb
pusha
add
aas
cmp
mov
nop
add
add
in
inc
jge
sbb
imul
loope
adc
hlt
add
sbb
add
in
add
imul
add
mov
adc
outsb
jp
xchg
add
inc
add
add
xor
std
push
add
in
add
xlat
mov
outsl
mov
sbb
add
addr16
push
add
inc
mov
into
movsb
add
pop
notl
xchg
add
fmul
in
jecxz
clc
into
les
xor
iret
mov
rorl
add
xor
inc
add
sub
add
jb
add
add
add
mov
cmp
sbb
push
add
in
jecxz
jae
add
mov
out
addr16
in
add
lods
lea
jp
mov
cmpsb
add
pop
mov
gs
add
mov
movb
add
mov
mov
push
add
ret
xchg
add
fiaddl
add
add
add
mov
add
add
mov
dec
dec
dec
sbb
dec
stos
fnsave
add
pop
fst
add
jecxz
add
and
mov
or
pop
pop
mov
pop
xor
pop
fxch
adc
addb
jp
push
add
adcl
push
add
shll
and
into
xchg
inc
add
add
data16
add
sub
gs
dec
mov
add
pop
cs
jo
test
sbb
and
mov
iret
sub
or
pusha
add
xor
sbb
add
mov
outsl
or
jge
push
ficoml
bound
mov
xor
lock
sub
sub
dec
or
add
dec
cs
test
cmpsb
add
xchg
add
mov
lahf
cltd
rolb
sub
add
dec
xchg
add
add
mov
adc
adc
outsl
addr16
or
add
out
add
push
rolb
out
sub
xor
fcomps
add
add
int3
clc
icebp
mov
cmp
fnstenv
in
sub
add
aaa
xlat
bound
mov
jns
jbe
ret
gs
push
jb
sub
das
add
jg
mov
imul
add
mov
repnz
adc
sahf
imul
daa
lods
push
cmp
inc
mov
add
std
push
add
add
cmp
add
mov
add
lahf
xor
add
testb
test
cmc
lcall
pushf
leave
xlat
sub
xor
xor
pop
push
jle
add
dec
sub
outsb
pop
pushf
leave
test
shrl
sbb
push
loopne
mov
loope
repz
add
push
add
xchg
aam
jecxz
js
inc
add
mov
add
push
flds
inc
add
out
dec
je
imul
jae
test
pop
cmp
ficomps
pusha
add
leave
dec
inc
popf
fildl
pop
pop
addr16
frstor
mov
add
das
imul
and
movnti
fs
add
add
pop
sub
add
mov
add
mov
js
add
add
pop
daa
sbb
mov
add
jbe,pt
dec
addb
add
push
add
add
add
fistps
inc
jae
pop
xchg
or
add
push
adc
add
outsl
inc
add
leave
push
pop
out
lcall
rolb
lahf
pushl
mov
xor
add
add
inc
or
call
stos
addb
adc
push
imul
lcall
add
add
add
mov
lods
jae
repnz
fistl
add
sbb
cld
push
add
jl
js
and
mov
int
mov
mov
add
add
insb
stos
lret
xor
and
mov
add
add
add
add
js
add
cmp
add
push
sub
je
push
add
add
pop
sbb
in
jb
dec
pusha
add
mov
dec
and
cmp
sub
add
pop
les
lods
ljmp
xchg
mov
mov
add
push
cmp
push
add
aad
add
add
add
cmp
js
rolb
fcoml
mov
mov
imull
add
mov
push
sub
pop
mov
cld
xchg
dec
sub
ja
movsb
add
scas
stos
jne
add
dec
fnstcw
adc
bound
mov
pop
les
aas
push
add
shrl
incb
mov
add
add
add
mov
lds
mov
add
mov
pop
xor
aad
sbb
push
add
jl
xchg
scas
sbb
add
add
add
jb
mov
leave
adc
cmp
add
ja
xor
out
shrl
mov
fsubs
add
xchg
add
jae
sti
xor
cs
ret
mov
add
add
testb
add
dec
pop
movb
imul
mov
pop
inc
sub
mov
rorl
das
add
icebp
or
fildl
dec
add
push
rolb
adc
or
cltd
or
xor
cmpsl
lahf
lret
mov
cmp
pop
mov
lcall
jl
dec
jle
add
add
mov
xchg
arpl
xor
mov
inc
pop
fisubrl
popa
xor
xor
xchg
add
fdivs
cli
cmpsb
add
xor
cmp
add
jle
add
xchg
add
arpl
jecxz
lret
mov
sbb
add
dec
je
fcmovb
mov
cli
jno
add
sbb
add
add
sub
mov
out
add
fisttpll
jns
cwtl
fwait
insl
add
pop
addb
add
add
inc
add
sbb
add
jne
add
xchg
add
mov
cmp
into
jnp
add
add
sub
add
add
add
add
add
add
stos
pop
adc
inc
cmc
add
cli
jae
add
sub
adc
jge
rolb
mov
pop
mov
dec
movsb
add
mov
mov
stos
mov
pop
addb
cmp
pop
nop
add
das
jbe
test
aas
out
fwait
adc
dec
int3
in
xchg
add
xchg
jae
pop
xor
sub
push
add
add
repnz
add
push
add
clc
inc
add
arpl
and
inc
add
rolb
arpl
movsb
add
add
add
cwtl
xchg
push
add
add
jl
and
push
addb
add
mov
and
add
enter
mov
inc
jnp
add
pop
nop
add
mov
sbb
push
add
add
add
add
xchg
dec
arpl
cmp
cmp
xchg
mov
sub
inc
add
stc
mov
popl
sub
sahf
bound
mov
fmull
push
add
or
add
les
pop
mov
clc
outsl
fstpt
add
fsubrs
adc
add
mov
insl
jmp
pop
fcompp
iret
mov
push
add
sahf
push
lcall
mov
mov
sahf
ret
push
add
or
popa
add
aaa
pop
push
add
pop
cmp
add
repnz
jae
add
clc
push
push
mov
xchg
ret
add
shlb
lods
clc
repnz
jae
mov
add
mov
add
add
add
add
and
mov
pop
clc
repnz
jae
add
dec
lods
int
add
mov
lret
jmp
add
add
add
shr
or
add
add
add
add
and
add
clc
repnz
jae
add
negl
mov
clc
repnz
jae
in
cmp
add
shr
clc
repnz
jae
jne
imull
push
shlb
out
mov
repnz
jae
mov
add
jmp
clc
repnz
jae
add
ret
test
pop
push
push
mov
xchg
ret
lcall
add
push
mov
push
add
add
push
push
test
dec
cmp
repnz
jae
add
fistpll
stc
clc
repnz
jae
incl
add
dec
cmp
repnz
jae
add
add
mov
add
repnz
jae
add
jb
ljmp
clc
repnz
jae
lahf
xchg
mov
fwait
cld
nop
jmp
les
push
loopne
add
inc
add
clc
repnz
jae
mov
add
cld
nop
jmp
cli
loopne
add
ljmp
adc
repnz
jae
add
cmp
std
push
ret
addl
jae
add
addr16
je
clc
repnz
jae
rolb
jle
fwait
cld
nop
jmp
mov
add
or
gs
mov
clc
repnz
jae
add
add
sub
and
repnz
jae
add
jo
dec
je
fwait
cld
nop
jmp
add
jno
daa
push
add
repnz
jae
add
add
sarb
clc
repnz
jae
jno
pop
add
add
xchg
addb
add
jmp
add
mov
test
test
cmp
pop
xchg
clc
repnz
jae
add
add
add
mov
xchg
ret
xchg
add
sbb
in
add
xor
lret
pop
and
add
shl
in
jo
cwtl
dec
push
mov
xchg
ret
test
add
add
add
nop
jae
shlb
add
mov
push
movl
testl
cmp
jmp
jle
add
add
add
leave
mov
clc
repnz
jae
loope
add
testb
add
push
mov
xchg
ret
add
jno
ljmp
inc
or
add
repnz
jae
add
cs
add
clc
repnz
jae
aad
add
add
out
xchg
add
sub
clc
repnz
jae
rolb
in
imull
push
cld
nop
jmp
test
shlb
mov
push
mov
xchg
ret
in
loopne
aad
cmp
inc
and
repnz
jae
add
sub
xchg
xchg
es
mov
push
mov
xchg
ret
loopne
cmp
aad
add
clc
repnz
jae
lds
test
mov
out
sbb
andl
shll
out
pop
clc
repnz
jae
or
add
add
mov
push
mov
xchg
ret
cli
std
shr
add
fimuls
nop
jae
xchg
add
add
loope
pop
clc
repnz
jae
mov
mov
add
mov
push
mov
xchg
ret
cmp
add
push
mov
xchg
ret
sub
mov
xchg
or
add
repnz
jae
add
add
inc
inc
add
repnz
jae
ljmp
clc
repnz
jae
addr16
add
add
add
into
sub
clc
repnz
jae
add
add
add
dec
add
clc
repnz
jae
add
cld
movzwl
clc
repnz
jae
rolb
jne
add
add
repnz
jae
add
add
sub
jae
add
jno
mov
add
popa
fs
repnz
jae
jno
add
jp
fwait
cld
nop
jmp
xor
add
add
repnz
jae
mov
add
push
aad
xlat
adc
cld
call
clc
repnz
jae
mov
dec
mov
clc
repnz
jae
add
test
add
mov
dec
cmpw
fwait
cld
nop
jmp
mov
dec
push
mov
add
add
push
xchg
pop
movsb
fs
mov
clc
repnz
jae
test
ret
add
repnz
jae
xchg
add
decl
mov
mov
cmp
ret
std
mov
and
idivb
addb
sub
fwait
cld
nop
jmp
add
stc
add
add
add
clc
repnz
jae
add
add
xor
fwait
cld
nop
jmp
ljmp
add
clc
repnz
jae
add
add
std
add
and
fwait
cld
nop
jmp
rolb
cmp
imul
add
add
repnz
jae
cmp
cmp
repz
cld
nop
jmp
mov
pop
push
jmp
dec
push
clc
repnz
jae
add
testb
sbb
popa
add
repnz
jae
add
jb
scas
pop
les
scas
shl
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
add
add
int
or
cmp
jmp
add
pushf
loopne
idivl
dec
cmp
repnz
jae
lds
cli
add
std
fadd
iret
or
adcl
test
add
sbb
sar
nop
jae
sahf
scas
aad
add
add
add
sldt
jb
shll
add
int
add
clc
repnz
jae
add
add
add
inc
mov
add
add
repnz
jae
mov
add
mov
mov
fwait
cld
nop
jmp
enter
mov
repnz
jae
add
push
add
fdivp
movsl
clc
repnz
jae
add
jne
add
pop
push
mov
xchg
ret
push
sub
in
decl
push
mov
xchg
ret
add
mov
ljmp
jae
test
cli
jle
mov
insl
mov
clc
repnz
jae
add
rolb
ret
push
clc
repnz
jae
std
add
pushf
add
push
insl
lea
push
mov
xchg
ret
rolb
add
stc
clc
repnz
jae
add
pushf
add
xor
push
mov
xchg
ret
scas
add
enter
pusha
add
sub
cld
nop
jmp
std
or
roll
cmp
cmpl
fwait
cld
nop
jmp
jno
mov
repnz
jae
add
test
addr16
jne
clc
repnz
jae
add
mov
mov
jge
clc
repnz
jae
add
add
mov
xchg
mov
and
mov
clc
repnz
jae
addr16
add
add
sub
call
mov
cmp
ret
loopne
xchg
pop
sar
add
add
jmp
add
cli
mov
xor
adc
mov
cld
mov
clc
repnz
jae
scas
xchg
rcl
enter
add
add
lahf
add
add
add
add
mov
jmp
add
scas
pushf
mov
add
add
ljmp
jae
ret
cli
mov
sbb
nop
jae
add
test
inc
add
clc
repnz
jae
in
loope
aad
add
mov
mov
adc
repnz
jae
sub
shlb
leave
add
push
mov
xchg
ret
add
add
add
out
jmp
sub
jb
add
add
pusha
clc
repnz
jae
add
xchg
jno
add
sub
push
loop
add
add
scas
sub
add
repnz
jae
xchg
lahf
rolb
xchg
inc
pop
mov
clc
repnz
jae
add
add
jmp
pusha
push
mov
xchg
ret
add
or
mov
push
mov
xchg
ret
add
jne
add
add
xchg
incl
rol
mov
add
add
mov
clc
repnz
jae
shrb
sbb
test
repnz
jae
mov
out
and
clc
repnz
jae
pop
sub
cmp
nop
jae
mov
add
clc
repnz
jae
add
mov
cmpsl
xchg
add
mov
clc
repnz
jae
mov
xor
add
add
add
add
add
idiv
mov
inc
pop
add
fwait
cld
nop
jmp
ljmp
pop
pop
sub
clc
repnz
jae
aas
les
int
ficoml
repnz
jae
dec
add
lahf
add
add
stos
pop
clc
repnz
jae
test
add
jne
add
repnz
jae
add
shrb
sbb
out
inc
add
add
cli
and
xor
clc
repnz
jae
outsb
add
add
and
add
push
clc
repnz
jae
rolb
add
add
add
add
lcall
cltd
adc
push
pushf
add
inc
add
pop
clc
repnz
jae
add
add
fwait
cld
nop
jmp
stc
jno
add
sbb
add
clc
repnz
jae
scas
incl
add
mov
clc
repnz
jae
imulb
ret
jg
ja
outsb
je
repnz
jae
sub
cmp
add
cld
nop
jmp
add
add
mov
push
clc
repnz
jae
ljmp
pushf
shll
add
in
push
fwait
cld
nop
jmp
and
jno
add
incl
loopne
add
clc
repnz
jae
add
add
add
je
clc
repnz
jae
add
add
aad
add
aad
mov
xor
mov
clc
repnz
jae
outsb
add
add
add
fwait
cld
nop
jmp
add
or
ret
jo
clc
repnz
jae
ret
lds
lret
clc
repnz
jae
loope
add
add
loope
add
add
push
clc
repnz
jae
xor
push
cwtl
pop
clc
repnz
jae
ret
add
add
add
jae
ret
addr16
lahf
mov
or
add
repnz
jae
add
adc
dec
cs
clc
repnz
jae
lahf
dec
add
add
enter
pop
clc
repnz
jae
adc
dec
ljmp
repnz
jae
roll
mov
mov
dec
cld
mov
clc
repnz
jae
add
imul
xchg
ret
add
add
fimuls
nop
jae
jno
add
add
pop
clc
repnz
jae
test
and
test
cmp
clc
repnz
jae
add
jb
test
sahf
cmpl
fwait
cld
nop
jmp
pop
in
add
popa
add
mov
xchg
ret
add
test
xchg
mov
nop
jae
add
lods
mov
xor
lret
add
fwait
cld
nop
jmp
add
xchg
or
scas
mov
pop
fwait
cld
nop
jmp
or
outsb
add
sar
add
test
repnz
jae
aad
add
add
bound
mov
add
mov
fwait
cld
nop
jmp
add
bound
mov
jp
ret
push
mov
xchg
ret
add
ficoms
repnz
jae
mov
pushf
add
mov
add
xorl
clc
repnz
jae
add
jae
lea
fwait
cld
nop
jmp
loopne
dec
rolb
add
decl
jmp
jne
add
test
repnz
jae
add
out
pop
add
mov
clc
repnz
jae
add
cmp
in
imull
push
clc
repnz
jae
add
incl
outsb
les
add
mov
push
mov
xchg
ret
add
pop
clc
repnz
jae
std
loopne
add
add
clc
repnz
jae
jno
mov
mov
roll
fwait
cld
nop
jmp
add
lahf
add
add
mov
clc
repnz
jae
cli
mov
mov
add
push
mov
xchg
ret
cmp
leave
clc
repnz
jae
add
shlb
push
clc
repnz
jae
ljmp
cmpsl
sub
repnz
jae
add
or
add
dec
lods
push
mov
xchg
ret
cs
add
mov
repnz
jae
aas
lahf
ret
int
add
cmp
fwait
cld
nop
jmp
cli
loopne
xchg
filds
lds
mov
push
mov
xchg
ret
add
jle
std
mov
repnz
clc
repnz
jae
out
xchg
add
add
sti
incl
add
add
je
clc
repnz
jae
xor
addr16
add
jle
clc
repnz
jae
and
add
push
mov
xchg
ret
cli
xchg
loope
mov
inc
and
insl
mov
push
mov
xchg
ret
les
dec
clc
repnz
jae
add
mov
mov
sar
repnz
jae
and
mov
mov
cld
clc
repnz
jae
or
add
mov
add
lock
clc
repnz
jae
shrb
clc
repnz
jae
aad
add
mov
inc
add
mov
xchg
ret
lcall
push
add
mov
xchg
ret
stc
add
dec
add
adc
out
mov
clc
repnz
jae
mov
sahf
inc
add
call
fwait
cld
nop
jmp
ljmp
dec
push
clc
repnz
jae
add
add
out
push
dec
xor
clc
repnz
jae
loopne
dec
add
push
loop
fwait
cld
nop
jmp
add
add
add
iret
inc
add
aas
add
add
call
push
add
add
adc
mov
rolb
sub
nop
jae
add
pop
add
cs
add
add
clc
repnz
jae
add
cli
xchg
idivb
popa
fwait
cld
nop
jmp
add
add
mov
xchg
add
add
mov
xchg
ret
add
mov
clc
repnz
jae
aad
fincstp
icebp
fwait
cld
nop
jmp
or
add
add
sub
mov
fwait
cld
nop
jmp
add
push
add
rcrb
inc
add
cmp
add
clc
repnz
jae
pushl
add
mov
adc
xchg
add
add
clc
repnz
jae
add
lock
push
fwait
cld
nop
jmp
add
enter
xchg
jne
data16
nop
jae
add
ret
incl
pop
imul
clc
repnz
jae
add
or
or
add
in
push
push
mov
xchg
ret
add
incl
add
add
clc
repnz
jae
int
adc
test
jae
ret
movsl
rolb
pop
jne
clc
repnz
jae
add
mov
jbe
data16
ret
pop
mov
clc
repnz
jae
aad
add
mov
test
jl
xor
repnz
jae
add
mov
add
es
add
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
add
add
add
repnz
jae
xor
jno
add
dec
sub
repnz
jae
ljmp
add
mov
fwait
cld
nop
jmp
add
mov
add
cmpl
js
incl
fists
sub
mov
xchg
ret
mov
add
push
and
mov
out
loopne
mov
mov
xchg
ret
add
add
add
xorl
jle
leave
lea
fwait
cld
nop
jmp
add
cs
inc
test
sub
sbb
add
lds
pop
mov
and
mov
clc
repnz
jae
add
add
test
arpl
clc
repnz
jae
add
incl
inc
cli
add
fwait
cld
nop
jmp
add
idivb
add
xor
jmp
mov
test
test
cmp
nop
jae
pushf
ljmp
add
lahf
in
clc
repnz
jae
sahf
add
sahf
in
fildll
fwait
cld
nop
jmp
enter
int
pop
fwait
cld
nop
jmp
add
shl
add
loopne
cmp
add
clc
repnz
jae
mov
jb
jo
scas
mov
clc
repnz
jae
mov
xchg
add
cli
hlt
add
clc
repnz
jae
add
loope
add
add
lds
xchg
add
add
nop
jmp
and
mov
pop
cli
aas
add
repnz
pop
fwait
cld
nop
jmp
add
add
les
mov
xchg
ret
std
push
xchg
add
xor
add
clc
repnz
jae
ret
mov
mov
faddl
xchg
ret
mov
les
xor
clc
repnz
jae
mov
std
je
data16
jae
xor
loope
aad
rolb
jle
add
repnz
jae
add
add
mov
add
add
mov
adc
in
incl
enter
add
pop
clc
repnz
jae
cmp
int
add
aad
cmpsb
add
add
mov
mov
rep
clc
repnz
jae
addr16
filds
add
add
call
clc
repnz
jae
add
add
int3
jne
clc
repnz
jae
add
incb
clc
clc
repnz
jae
add
testl
add
popa
add
repnz
jae
mov
pop
addb
add
push
mov
xchg
ret
aad
push
add
addl
mov
add
repnz
jae
ret
jne
call
clc
repnz
jae
roll
cli
out
push
add
add
repnz
jae
rol
add
int
add
jae
or
add
std
out
cs
sti
mov
clc
repnz
jae
add
mov
mov
and
push
mov
xchg
ret
mov
or
imul
and
outsb
scas
sarl
add
stos
clc
repnz
jae
shlb
lds
adc
aaa
aad
mov
clc
repnz
jae
add
adc
sbb
popa
add
mov
xchg
ret
outsb
int
add
ret
add
repnz
jae
testl
pop
rep
clc
repnz
jae
les
add
mov
pop
xor
fwait
cld
nop
jmp
or
ljmp
nop
jae
add
add
les
xor
add
push
add
dec
jl
add
icebp
orps
xchg
faddl
xchg
ret
lods
mov
out
add
add
mov
nop
jae
pop
roll
add
rolb
add
mov
clc
repnz
jae
std
add
mov
std
add
push
mov
xchg
ret
add
jne
clc
repnz
jae
or
add
push
clc
repnz
jae
add
add
ret
jo
lds
push
mov
xchg
ret
add
push
mov
xchg
ret
testl
mov
loopne
add
repnz
jae
outsb
add
add
add
add
add
repnz
jae
mov
push
push
clc
repnz
jae
add
mov
jecxz
mov
clc
repnz
jae
add
jb
rep
clc
repnz
jae
add
add
pop
add
push
mov
xchg
ret
add
jno
add
fbstp
sar
nop
jae
dec
add
ret
push
mov
repnz
jae
add
add
add
fisttps
nop
jae
xchg
add
loopne
add
add
xchg
lea
fwait
cld
nop
jmp
add
add
clc
repnz
jae
in
mov
arpl
fwait
cld
nop
jmp
add
test
testl
mov
clc
repnz
jae
xor
mov
in
add
repnz
jae
add
sahf
add
add
push
mov
mov
add
and
add
add
testl
ror
add
fwait
cld
nop
jmp
cli
add
add
mov
clc
repnz
jae
or
push
pop
mov
fwait
cld
nop
jmp
add
mov
repnz
add
jae
cld
nop
jmp
add
notl
repnz
jae
std
add
or
mov
mov
push
mov
xchg
ret
add
sahf
add
push
add
add
clc
repnz
jae
int
or
sti
clc
repnz
jae
add
rolb
aad
sub
jmp
xchg
out
add
rolb
add
daa
xchg
fldt
clc
repnz
jae
add
mov
push
lcall
inc
add
add
add
ljmp
jecxz
add
loope
add
daa
sbb
lcall
adc
add
add
add
mov
jb
mov
movsb
add
jmp
loopne
add
pop
add
add
loope
mov
jmp
fadds
xchg
ret
add
cs
cs
js
clc
clc
repnz
jae
cmp
add
addr16
sub
jne
je
repnz
jae
add
add
mov
jnp
in
add
add
clc
repnz
jae
add
or
cmp
fwait
cld
nop
jmp
add
incl
sbb
fiadds
xchg
ret
add
adc
out
and
inc
and
repnz
jae
or
add
add
xor
nop
jmp
negb
add
mov
sti
in
clc
repnz
jae
mov
test
aas
push
mov
dec
add
je
pop
mov
mov
ljmp
mov
xchg
ret
add
shll
add
push
push
mov
xchg
ret
aas
add
add
add
mov
cmp
repnz
jae
incl
lahf
sahf
jne
lods
xchg
push
add
not
push
mov
xchg
ret
add
cli
add
lahf
call
cld
nop
jmp
add
fisttps
push
add
test
les
repnz
jae
shrb
mov
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
xor
add
adc
repnz
jae
mov
add
aad
inc
pop
loope
add
fwait
cld
nop
jmp
loope
sar
add
xchg
add
nop
jae
testb
mov
mov
clc
repnz
jae
std
add
add
add
clc
repnz
jae
test
add
add
fsts
repnz
jae
jne
aad
mov
sahf
stc
rolb
push
add
pop
push
mov
xchg
ret
mov
in
pop
push
push
mov
fwait
cld
nop
jmp
cmp
pop
add
sub
fwait
cld
nop
jmp
add
cs
ljmp
inc
add
add
push
pop
ljmp
or
add
add
jle
add
call
fwait
cld
nop
jmp
aad
scas
add
insb
testl
fwait
cld
nop
jmp
add
add
clc
repnz
jae
stc
cli
aas
scas
add
add
xor
xor
fwait
cld
nop
jmp
stc
push
add
add
repnz
jae
mov
jb
push
cmp
clc
repnz
jae
dec
add
add
mov
mov
mov
xchg
ret
sub
add
jne
fwait
cld
nop
jmp
test
testl
dec
cmp
repnz
jae
add
cltd
dec
fwait
cld
nop
jmp
loopne
or
add
aad
add
push
mov
xchg
ret
add
add
mov
pop
push
mov
xchg
ret
jb
add
add
testb
jne
clc
repnz
jae
add
add
add
decb
test
repnz
clc
repnz
jae
aad
add
jne
fwait
cld
nop
jmp
add
in
add
mov
clc
repnz
jae
add
les
sub
repz
mov
xchg
ret
xchg
add
aas
addr16
add
add
push
mov
xchg
ret
roll
add
or
add
mov
repnz
jae
add
add
rolb
mov
add
clc
repnz
jae
jle
add
cs
stos
xor
clc
repnz
jae
xor
negl
nop
jae
or
add
inc
inc
jge
addb
nop
jae
add
and
shl
inc
add
add
test
icebp
xchg
loopne
jl
push
mov
xchg
ret
int
int
addr16
test
pop
dec
fwait
cld
nop
jmp
ret
add
loopne
pushf
add
jmp
jae
add
inc
cmp
dec
cmp
repnz
jae
push
add
add
inc
popl
nop
jmp
add
add
mov
fwait
cld
nop
jmp
rolb
pop
clc
repnz
jae
add
in
add
pop
push
mov
xchg
ret
sar
and
cli
scas
mov
xchg
add
dec
push
push
mov
xchg
ret
add
or
and
mov
xchg
ret
test
cli
add
add
clc
repnz
jae
dec
enter
add
adc
je
clc
repnz
jae
ljmp
add
push
mov
xchg
ret
add
cs
push
mov
clc
repnz
jae
add
mov
clc
repnz
jae
dec
add
jae
testl
ljmp
aam
lcall
jmp
ljmp
add
dec
pusha
clc
repnz
jae
jle
add
sub
add
clc
repnz
jae
dec
rolb
vaddss
mov
nop
jae
jno
add
push
xchg
push
mov
xchg
ret
add
mov
add
pop
jecxz
add
in
add
outsb
push
clc
repnz
jae
add
add
sub
jno
fmuls
outsl
repnz
add
add
sub
mov
nop
jae
addr16
mov
call
clc
repnz
jae
sahf
add
add
clc
repnz
jae
add
add
or
incl
enter
add
pop
add
and
repnz
jae
std
or
aad
add
test
pfcmpge
jae
addr16
pushf
add
xchg
mov
sbbl
clc
repnz
jae
add
stc
mov
mov
clc
repnz
jae
add
or
cs
xchg
call
jae
std
add
dec
rolb
add
sbb
clc
repnz
jae
add
test
jae
or
mov
add
fwait
cld
nop
jmp
add
add
add
mov
xchg
ret
pushf
loopne
add
dec
dec
fwait
cld
nop
jmp
add
add
add
add
push
mov
xchg
ret
rorl
add
imul
jmp
add
mov
add
mov
push
mov
xchg
ret
add
add
aas
divl
pop
pop
mov
clc
repnz
jae
lds
jle
addb
lods
subl
push
mov
xchg
ret
loope
ret
add
push
mov
xchg
ret
or
cli
jle
add
rcrl
mov
add
lahf
cli
push
fwait
cld
nop
jmp
testb
add
dec
popa
clc
repnz
jae
mov
add
xor
push
dec
decl
clc
repnz
jae
jno
int
enter
xor
cld
nop
jmp
add
cs
mov
add
fwait
cld
nop
jmp
rcrl
add
jae
push
mov
xchg
ret
cmp
add
sub
repnz
jae
in
rolb
add
inc
add
add
repnz
jae
mov
pop
clc
repnz
jae
add
mov
popf
push
clc
repnz
jae
outsb
add
add
add
push
add
cs
clc
repnz
jae
xchg
adc
jle
int
mov
lock
xchg
ret
add
notl
mov
push
mov
xchg
ret
sarl
add
mov
popa
clc
repnz
jae
incl
scas
add
add
add
fwait
cld
nop
jmp
add
add
in
add
mov
rcrl
dec
adc
and
inc
add
addr16
add
mov
inc
xlat
leave
call
clc
repnz
jae
push
cs
mov
icebp
clc
repnz
jae
aad
add
testb
nop
jae
jne
add
hlt
add
lea
clc
repnz
jae
ljmp
add
jne
push
mov
xchg
ret
add
add
or
test
sbb
test
add
clc
repnz
jae
add
mov
repz
inc
fmuls
jae
adc
jb
rolb
add
clc
repnz
jae
mov
roll
dec
add
js
jne
clc
repnz
jae
int
add
jb
mov
lds
clc
repnz
jae
cmp
ljmp
jae
add
fcomip
add
add
mov
clc
repnz
jae
jle
add
sbb
mov
push
clc
repnz
jae
sub
add
add
nop
jae
and
add
stc
push
testl
nop
jae
add
add
jno
aam
iret
mov
clc
repnz
jae
add
add
repnz
jae
stc
add
shl
add
outsb
jg
sub
add
adc
inc
add
lahf
add
out
stos
push
mov
xchg
ret
std
test
add
clc
repnz
jae
add
insl
call
fwait
cld
nop
jmp
in
add
and
mov
fwait
cld
nop
jmp
mov
test
mov
push
mov
xchg
ret
int
mov
xchg
clc
repnz
jae
add
jno
mov
add
clc
repnz
jae
ljmp
cld
nop
jmp
test
testb
add
loopne
std
mov
fwait
cld
nop
jmp
add
add
add
add
add
push
push
mov
xchg
ret
aad
jne
add
lods
testb
mov
clc
repnz
jae
lods
add
in
add
mov
clc
repnz
jae
enter
mov
mov
clc
repnz
jae
lahf
pushf
add
inc
loopne
mov
xchg
ret
enter
or
push
clc
repnz
jae
add
mov
mov
repnz
jae
mov
cli
add
add
add
clc
repnz
jae
jne
pop
sub
dec
cmp
repnz
jae
add
add
in
add
dec
adc
cmpsl
out
inc
add
int
add
aad
add
rorl
add
clc
repnz
jae
scas
filds
mov
mov
fwait
cld
nop
jmp
loopne
or
add
divb
add
cmp
mov
clc
repnz
jae
ljmp
dec
add
repnz
jae
add
pop
cmp
repnz
jae
add
rolb
outsb
push
mov
add
add
fildl
in
dec
xchg
in
add
je
mov
clc
repnz
jae
add
mov
clc
repnz
jae
div
add
lahf
lods
rolb
ficoml
cld
nop
jmp
aad
add
add
aad
or
test
push
mov
xchg
ret
aad
jne
add
mov
jnp
jmp
lahf
ljmp
and
mov
fwait
cld
nop
jmp
jb
add
add
clc
repnz
jae
add
pop
clc
repnz
jae
xchg
add
add
out
loopne
fisttpl
repnz
jae
add
add
fistpll
ret
inc
add
out
les
push
loopne
arpl
mov
add
call
shl
sbb
popa
add
mov
xchg
ret
jno
mov
and
push
fs
repnz
jae
stc
add
popf
xor
clc
repnz
jae
lahf
add
dec
add
push
rcll
nop
jae
add
add
mov
cld
nop
jmp
loope
add
xor
push
xor
clc
repnz
jae
add
filds
aas
add
std
movzwl
push
mov
xchg
ret
int
or
movb
mov
clc
repnz
jae
outsb
outsb
add
add
push
out
inc
add
test
in
lcall
ljmp
repnz
pop
ret
clc
repnz
jae
add
xchg
mov
add
stc
je
clc
repnz
jae
add
add
in
inc
add
loopne
mov
push
push
mov
xchg
ret
ljmp
aaa
cltd
test
fwait
cld
nop
jmp
out
xchg
add
add
iret
mov
clc
repnz
jae
jle
add
add
jle,pn
clc
repnz
jae
add
stc
mov
push
or
jae
add
jno
adc
cmp
nop
jmp
xchg
sub
div
inc
add
fwait
cld
nop
jmp
scas
add
add
lods
roll
sub
clc
repnz
jae
add
add
out
ret
les
lahf
loope
add
add
jle
int
add
add
nop
jae
add
or
add
aas
add
add
add
clc
repnz
jae
pushf
aad
add
loopne
add
pushl
push
mov
xchg
ret
add
xor
fwait
cld
nop
jmp
les
enter
push
and
and
push
mov
xchg
ret
roll
sub
rolb
xor
insl
jne
clc
repnz
jae
add
mov
mov
fwait
cld
nop
jmp
add
scas
add
add
nop
jmp
add
add
add
mov
xchg
ret
xchg
add
xchg
add
jae
mov
add
add
mov
mov
mov
xchg
ret
add
filds
mov
add
nop
jae
mov
aas
testl
push
mov
xchg
ret
dec
loope
xchg
add
repnz
jae
add
add
movzwl
fwait
cld
nop
jmp
add
rolb
add
test
fwait
cld
nop
jmp
ljmp
mov
clc
repnz
jae
add
xchg
addr16
inc
clc
repnz
jae
outsb
sub
add
out
test
fwait
cld
nop
jmp
add
add
imull
rcrb
cld
nop
jmp
dec
scas
lds
insl
imul
clc
repnz
jae
add
xchg
add
repz
mov
xchg
ret
aas
cli
or
mov
pop
cmp
fwait
cld
nop
jmp
add
add
repnz
jae
add
add
sahf
add
add
inc
add
fwait
cld
nop
jmp
jno
add
jle
lea
fwait
cld
nop
jmp
mov
out
add
add
clc
repnz
jae
add
add
aad
dec
mov
clc
repnz
jae
dec
loopne
aad
sbb
mov
nop
jae
mov
add
add
add
sahf
push
mov
add
mov
add
sub
imul
fwait
cld
nop
jmp
add
jmp
xchg
push
inc
push
add
jnp
clc
repnz
jae
mov
add
dec
ret
clc
repnz
jae
pop
push
testl
movb
push
mov
loope
pusha
mov
add
add
inc
cmp
cld
nop
jmp
sarb
jle
add
repnz
jae
test
add
add
mov
mov
jmp
add
and
add
test
add
add
repnz
jae
jno
add
outsl
mov
clc
repnz
jae
add
jb
add
sub
popa
fwait
cld
nop
jmp
dec
sub
add
add
add
cli
jne
clc
repnz
jae
cli
add
sbbl
inc
add
jle
loopne
add
jb
aas
push
push
mov
xchg
ret
outsb
add
filds
add
cmp
incl
push
add
sub
aad
pop
mov
fwait
cld
nop
jmp
add
add
add
out
ret
rolb
rolb
mov
repnz
jae
jmp
xor
mov
sar
clc
repnz
jae
jno
add
shr
rol
push
mov
xchg
ret
sub
insb
push
push
mov
xchg
ret
add
or
loope
out
add
push
mov
xchg
ret
int
add
ret
mov
sub
mov
xchg
ret
les
add
das
push
clc
repnz
jae
aad
add
outsb
jne
mov
fwait
cld
nop
jmp
aad
add
rcrl
jmp
add
add
or
ljmp
testb
movzwl
clc
repnz
jae
loope
pushf
dec
add
push
clc
repnz
jae
dec
std
add
or
add
mov
xchg
ret
mov
add
add
clc
repnz
jae
lods
in
add
or
cmpw
fwait
cld
nop
jmp
add
aas
or
add
pop
clc
repnz
jae
ljmp
mov
push
fwait
cld
nop
jmp
add
add
mov
rep
clc
repnz
jae
mov
jb
imul
nop
jae
shl
cli
std
in
add
jo
sbb
mov
xchg
ret
cs
aad
add
inc
add
fwait
cld
nop
jmp
pop
test
add
add
push
clc
repnz
jae
dec
add
cs
aas
lds
add
fwait
cld
nop
jmp
add
scas
bound
mov
add
push
mov
add
mov
jl
and
mov
clc
repnz
jae
mov
mov
and
clc
repnz
jae
add
add
mov
insb
mov
clc
repnz
jae
incl
and
addr16
leave
sub
repnz
jae
dec
pushf
add
add
add
clc
repnz
jae
scas
add
iret
mov
push
mov
xchg
ret
add
int
add
cmpsb
add
push
mov
xchg
ret
mov
testb
add
test
sti
push
push
mov
xchg
ret
out
sub
add
mov
clc
repnz
jae
or
push
push
mov
xchg
ret
add
add
add
inc
add
adc
clc
repnz
jae
loope
add
jo
add
sar
repnz
jae
add
mov
jne
daa
sbb
push
clc
repnz
jae
push
mov
pop
out
mov
clc
repnz
jae
xchg
or
add
fwait
cld
nop
jmp
add
sub
xor
add
add
lds
add
jne
clc
repnz
jae
add
mov
lret
jmp
and
add
sub
in
push
add
xlat
mov
xchg
loop
addb
mov
test
das
cmp
cmc
out
push
add
add
in
pop
fwait
aam
js
dec
mov
cmp
add
mov
add
out
add
add
stos
pop
out
scas
les
jg
mov
stos
jle
mov
xchg
sub
mov
and
mov
insl
in
add
in
call
pop
lods
mov
lock
add
cmpsl
inc
paddsb
jle
pop
mov
sub
mov
pop
lret
shll
and
jp
mov
push
mov
add
add
fxch
jns
aam
int
les
and
loop
fstpl
adc
add
mov
mov
dec
push
add
pop
inc
add
add
add
sub
int
add
push
add
fs
add
loopne
popa
adc
inc
hlt
add
add
data16
push
mov
mov
leave
xlat
movb
mov
dec
push
sbb
pop
pop
mov
mov
mov
sbb
movsl
mov
std
and
push
fildll
sub
lock
push
les
bound
mov
dec
push
xchg
ret
les
inc
xchg
shll
rorl
xchg
insb
rolb
outsl
cli
jno
xor
dec
mov
add
and
add
inc
add
mov
ficomps
jg
add
mov
nop
add
out
loope
test
mov
mov
jns
dec
dec
push
stos
pushf
shll
add
in
push
add
insb
xchg
pushf
mov
imul
fisubrs
push
imul
mov
stos
jno
out
xor
test
scas
test
enter
into
add
scas
xor
add
add
inc
mov
xor
jns
add
imul
inc
add
add
in
cmpsb
add
add
sti
cmp
sbb
in
pop
pushf
and
mov
or
pop
dec
adc
push
add
mov
add
insb
jmp
in
leave
test
add
mov
int3
repz
cli
adc
lret
test
push
add
jbe
xor
adc
fsubs
add
add
loop
and
add
sub
dec
fwait
test
sysenter
add
pushf
cli
mov
rolb
push
mov
pop
mov
das
mov
add
lea
pop
dec
lea
push
add
jae
add
je
out
add
dec
lret
add
add
cwtl
ljmp
pop
and
popa
cmc
pushf
and
mov
add
jmp
add
lahf
pop
cmpsl
xchg
lea
call
aas
jg
xor
xor
mov
mov
data16
addb
mov
add
add
add
cmc
cmpsb
add
ds
xchg
mov
add
add
xchg
cli
imul
fisttps
ficompl
insb
cmpsl
add
mov
dec
loop
xchg
add
pop
stc
rolb
testb
fcomps
pusha
add
jp
sbb
int
add
addb
add
add
mov
add
jp
add
add
add
inc
lcall
or
add
mov
adc
ja
cmp
sbb
ds
ja
add
lock
cs
sbb
fcmovu
mov
or
fucom
add
arpl
mov
inc
add
pop
push
or
add
pop
xor
bound
mov
add
add
shl
add
push
add
add
and
loop
sbb
add
add
lcall
add
push
sub
xor
pop
cwtl
mov
add
mov
add
addr16
mov
add
cmp
hlt
add
rolb
les
jl
cli
push
add
dec
xchg
add
xor
push
mov
pop
adc
lea
addb
add
int3
push
add
mov
push
in
xor
or
fsubrl
add
add
iret
add
mov
es
mov
pop
pop
cmc
inc
ljmp
add
or
sub
outsb
cmp
clc
fildll
fsubl
mov
push
add
int3
adc
mov
sti
movsb
add
xchg
add
sbb
add
cmp
roll
mov
les
sbb
mov
addb
cltd
xor
xor
int
push
add
dec
dec
mov
dec
inc
mov
testb
iret
add
daa
imul
jno
mov
mov
mov
cmp
scas
int3
movsl
mov
add
hlt
add
xchg
add
dec
pop
imul
js
or
add
imul
add
lock
mov
add
xor
gs
clc
xchg
sub
rol
rolb
add
sahf
push
add
pusha
add
add
cli
jl
add
test
or
movsl
scas
add
int3
xlat
arpl
sahf
sahf
pop
addr16
test
fisubrs
push
xchg
mov
xor
ret
test
cld
cmp
inc
add
dec
lea
add
testb
add
dec
jo
cmpsl
xor
pop
fwait
push
jmp
add
dec
out
and
mov
xor
push
ret
mull
cmp
in
orl
jmp
xchg
add
jb
sbb
daa
jo
xor
add
xchg
add
xor
push
add
rcl
add
inc
add
nop
add
or
mov
add
add
xor
mov
or
xor
test
pop
movsb
add
loope
loopne
push
add
cmpsl
adc
jo
loop
icebp
pop
stos
sti
pop
mov
mov
mov
gs
add
add
mov
mov
scas
and
mov
fcomip
add
add
in
cs
test
add
push
or
mov
add
mov
xchg
pop
or
and
insb
pop
iret
mov
int3
loopne
leave
jnp
add
call
add
sbb
bound
mov
popf
or
js
add
movsl
mov
fcmovnb
add
lret
mov
add
fisubrs
les
shrl
lea
jbe
mov
jno
cmpsl
sahf
ret
mov
xchg
mov
add
or
add
loope
addb
mov
cmpsb
add
add
xchg
add
pop
sbb
mov
xor
in
pop
adc
rolb
mov
cli
loopne
ret
test
ljmp
cli
mov
pop
stc
cmpsb
add
insl
cmp
mov
call
imul
add
scas
testb
add
jae
sbb
add
mov
movb
add
pause
add
add
lods
xchg
add
fdivl
mov
xchg
sahf
xor
fwait
sub
jns
inc
test
mov
lds
out
mov
stos
movsl
pusha
add
out
out
mov
mov
add
repnz
add
mov
cmp
push
push
add
push
mov
fwait
add
push
add
dec
cwtl
and
lcall
add
jl
add
mov
add
bound
mov
push
add
add
cltd
ret
lea
xor
inc
push
mov
les
push
jge
add
xchg
outsl
xor
fsubrl
pop
pop
adc
mov
hlt
add
data16
add
pop
inc
scas
aam
push
jb
sub
ja
mov
ss
sub
add
sbb
jae
push
add
dec
xor
jl
bound
mov
icebp
mov
sbb
jl
call
sub
cmpsl
xchg
dec
mov
add
lahf
popa
stc
jno
push
add
add
dec
sahf
cmp
mov
mov
add
int3
movsl
fcom
fsubs
add
dec
into
push
add
fwait
lret
cli
ret
xchg
pop
push
imul
je
jge
pop
stos
xrelease
add
lds
add
jp
jl
add
jg
cltd
inc
add
js
add
sub
add
jo
push
and
xor
popl
mov
nop
add
mov
sbb
mov
mov
ret
movsb
add
mov
insb
outsb
sti
mov
aas
jne
cmp
sbb
jle
push
and
add
mov
add
mov
inc
add
aas
repz
add
add
pop
push
add
xchg
add
add
bound
mov
xor
icebp
addr16
ljmp
mov
push
lret
int3
cmp
xor
or
jecxz
call
add
add
roll
popf
aas
or
insl
lret
or
add
nop
add
add
add
insl
jno
lcall
add
or
cmp
mov
dec
add
stc
jmp
int
add
mov
push
add
add
add
sub
cmp
mov
pop
les
or
mov
add
sub
or
pop
xchg
adc
sahf
lahf
fmull
out
adc
dec
jb
sub
in
adc
and
repnz
push
add
cli
jg
add
lahf
add
mov
xor
cwtl
push
cli
aaa
cwtl
jae
sub
mov
add
jno
movsl
ljmp
add
xor
scas
mov
inc
add
arpl
push
add
mov
mov
dec
or
add
add
mov
aas
cs
add
add
rolb
sbb
add
add
add
lea
je
or
es
mov
mov
dec
jecxz
jge
nop
add
mov
pushf
pop
orl
xor
das
popf
and
dec
jg
add
xor
xor
jmp
aam
push
push
add
ret
cmpsl
rolb
mov
mov
add
stc
outsb
lret
movsl
mov
rolb
cltd
and
mov
std
pop
jecxz
rolb
xchg
in
jge
aaa
xchg
int3
or
inc
add
xchg
add
mov
jne
mov
inc
add
imul
mov
and
in
xor
cmp
out
add
test
push
repz
in
add
mov
mov
inc
incb
add
outsb
repnz
cld
rcll
pop
inc
cmc
mov
ja
push
add
ljmp
add
roll
fcom
add
push
add
add
push
add
mov
rolb
add
notl
sbb
aad
dec
int3
adc
aam
inc
or
jno
jo
jb
fwait
es
xor
nop
add
pop
out
mov
mov
clc
inc
mov
cwtl
mov
add
mov
rolb
xor
stos
dec
add
pop
rolb
jp
aaa
pop
push
add
addr16
adc
and
mov
add
add
mov
dec
mov
add
cmp
dec
dec
jo
das
xchg
mov
mov
sti
aad
inc
add
call
data16
add
xlat
push
add
push
add
sahf
lock
add
movsl
test
jp
aaa
addb
add
jns
add
data16
add
mov
stc
mov
fdivs
dec
rolb
pusha
add
sahf
sbb
mov
or
mov
aad
xor
bound
mov
add
add
push
loop
and
mov
cltd
je
pop
sub
rcll
or
add
add
mov
mov
stc
stos
mov
dec
lahf
bound
mov
pop
movl
cmp
pusha
add
lret
in
dec
popf
insl
add
movsl
sbb
in
add
add
add
lds
adc
in
cmp
push
or
add
add
or
add
or
sahf
add
cmp
addb
add
mov
mov
xor
popa
inc
add
test
add
add
inc
add
stos
dec
sahf
jg
pop
dec
sub
add
cmp
scas
mov
aaa
jmp
mov
add
add
inc
add
out
test
add
mov
mov
add
mov
add
add
dec
dec
addb
ret
mov
scas
add
mov
cli
icebp
add
mov
std
adc
dec
fbstp
dec
test
add
add
add
repnz
mov
rorl
jle
loop
sub
mov
aam
mov
dec
loopne
addr16
jne
jp
rolb
add
mov
loop
dec
sbb
add
mov
add
mov
add
add
add
xchg
push
fists
lahf
push
rolb
clc
jge
lret
sub
and
add
jnp
jae
xchg
add
adc
push
xor
sub
sahf
add
rolb
add
mov
int3
test
ret
jae
push
add
add
sub
push
add
add
adcl
icebp
mov
and
add
jno
add
add
mov
mov
sbb
inc
repnz
test
enter
mov
push
add
adc
test
ljmp
imul
jg
rolb
dec
push
fnstenv
mov
leave
push
aam
leave
jne
mov
inc
cmp
xlat
add
push
add
jg
add
or
add
mov
mov
and
out
add
add
add
and
leave
lods
or
iret
push
sub
add
ljmp
lret
mov
add
mov
ja
pop
stc
sbb
cmp
add
loop
mov
hlt
add
add
cmp
cmp
mov
int
mov
nop
add
dec
js
outsb
jo
fwait
or
sub
add
and
mov
mov
add
push
lock
push
add
pop
testl
lcall
push
add
add
popa
ret
add
scas
sahf
lahf
aad
add
pop
sbb
sar
push
add
add
lock
xor
roll
add
or
cmp
movsb
add
fnstsw
xor
push
add
add
sub
jne
scas
fdivs
add
hlt
add
add
push
out
push
mov
out
dec
flds
mov
js
ljmp
cs
out
pop
xchg
add
push
dec
jae
add
cmc
xchg
mov
inc
add
dec
xor
stos
adc
add
adc
addb
gs
push
push
add
lods
out
or
jmp
add
and
out
xor
cmpsb
add
add
mov
dec
sahf
cltd
aad
add
aas
adc
sbb
mov
scas
jne
mov
adc
test
add
mov
notl
inc
add
add
push
mov
jle
and
adc
add
clc
je
sub
add
add
cmp
add
push
out
mov
xor
and
mov
mov
loope
scas
popa
pop
pop
fiaddl
into
push
daa
pop
negl
sbb
or
pushf
lods
xchg
fwait
stos
mov
je
rolb
sub
push
add
jae
add
ljmp
add
add
add
add
jp
add
nop
add
rolb
addl
xor
out
and
dec
lods
loopne
jle
ficoms
push
add
add
sti
fimull
jne
add
add
add
mov
in
in
add
add
cmc
repz
mov
je
popf
rolb
pop
sbb
test
add
add
and
mov
mov
add
add
lds
lret
mov
add
add
jne
add
add
pop
pop
sbb
rolb
or
add
add
add
mov
mov
or
mov
insl
imul
push
add
inc
add
xchg
add
add
int3
fidivl
add
push
fwait
add
mov
jge
add
push
mov
add
dec
xor
loope
mov
jb
stos
rolb
xchg
add
int
out
cmp
pop
or
push
outsb
push
stos
pop
rolb
mov
cli
arpl
scas
mov
mov
in
lock
adc
sbb
js
add
lcall
mov
outsb
mov
add
jl
js
push
add
xlat
mov
mov
add
push
add
inc
std
scas
enter
and
add
pop
push
fstl
mov
and
int3
lcall
lcall
sub
mov
insb
int3
dec
add
add
es
or
lret
arpl
add
xor
lods
pop
xchg
add
cmpsb
add
sub
add
stc
mov
adc
push
add
js
mov
add
fnstcw
dec
push
add
adc
loop
xor
loopne
arpl
add
lock
add
add
ljmp
add
jno
or
mov
jmp
test
adc
add
rolb
sar
inc
xor
add
movb
addr16
push
add
xchg
add
int3
rolb
add
lret
outsb
call
jg
mov
jae
cwtl
xchg
adc
out
stc
out
or
outsb
jae
add
in
add
add
jmp
loope
add
jmp
add
rcll
inc
add
into
jmp
int3
xor
mov
mov
pmaxsw
mov
stos
fwait
jge
sti
sub
out
or
fsubl
in
add
lcall
add
shr
mov
add
push
lret
xor
and
pop
jno
fcomp
pop
dec
into
lahf
dec
lea
mov
xor
and
mov
mov
add
add
bound
mov
add
addb
add
add
add
mov
shrl
shll
mov
outsb
sub
loopne,pt
jecxz
add
int3
popf
dec
iret
mov
add
add
in
inc
out
xchg
pop
cli
stos
outsl
imul
pop
fldt
or
dec
ja
add
loop
mov
add
gs
add
fs
imul
add
add
mov
mov
push
shl
pop
je
push
add
add
outsb
mov
int
add
add
dec
mov
add
frstor
add
sub
mov
ja
dec
fbld
dec
lea
test
xchg
cld
sbb
add
push
mov
xor
push
xlat
out
iret
dec
mov
int3
iret
imul
jne
add
sub
pop
add
add
cwtl
push
sahf
les
cmpsl
ret
inc
cmpsl
call
fistps
dec
add
mov
insb
mov
mov
push
add
add
add
add
and
mov
or
fisubl
add
add
add
cmp
mov
pop
mov
add
adc
aas
jg
add
adc
pushf
mov
cmpsb
add
inc
pop
cltd
negl
in
adc
xchg
add
mov
mov
in
les
and
adc
mov
dec
jo
jbe
repnz
sbb
mov
add
or
add
add
add
xor
bound
mov
int3
mov
add
stc
pop
rolb
add
push
jnp
push
add
add
cmp
nop
add
add
sub
ljmp
jbe
into
mov
stos
enter
jbe
out
jns
push
add
aam
dec
and
data16
dec
pusha
add
jp
outsl
movsb
add
mov
adc
outsl
into
mov
lods
xlat
mov
rcll
stos
pop
mov
inc
add
cmc
cmp
daa
das
aad
fucom
mov
jl
lcall
cmc
leave
test
add
add
xor
cmpsl
into
lcall
out
pusha
add
add
add
add
inc
add
mov
scas
dec
or
inc
add
out
into
cmp
add
add
add
xor
cmc
mov
add
pop
inc
push
mov
adc
fs
insb
push
jno
mov
lds
ja
das
jg
and
lcall
test
fdivrl
repnz
dec
cmp
sub
add
and
add
dec
cmp
jle
add
mov
jp
sbb
add
xor
add
xchg
pop
add
pop
rcr
nop
add
or
das
jae
xchg
add
pop
lret
test
or
xchg
add
add
or
cmc
pop
test
cmpsb
add
add
and
add
push
pop
xor
stos
dec
pop
test
or
add
int
add
jno
lahf
sti
and
mov
ret
push
or
inc
mov
pusha
add
jmp
out
inc
mov
enter
add
xor
add
cltd
push
add
jae
add
mov
incb
mov
fbld
inc
add
xchg
add
fadd
xchg
je
cmp
add
add
and
mov
cmp
dec
sbb
lret
add
rcll
jecxz
cltd
sbb
add
cli
movsb
add
repnz
pop
lcall
add
cmp
test
pop
mov
pop
int
mov
xchg
mov
fcmovnb
and
mov
inc
add
xchg
add
xlat
mov
jle
pop
lret
mov
aaa
int
add
xor
add
jns
cmpsb
add
pop
xchg
jb
pop
insl
xchg
add
adc
mov
dec
push
cmc
in
mov
in
sbbl
and
mov
repz
xchg
cmp
push
add
mov
jns
adc
rolb
stos
inc
add
add
or
cmp
cs
add
mov
add
dec
jb
fbstp
testb
insb
add
lods
fmul
gs
and
inc
iret
add
add
push
rcll
xor
outsb
xor
test
data16
mulps
or
lret
jmp
add
ficomps
popa
andl
call
add
sub
cmpsl
jb
and
mov
add
adc
push
add
out
pop
sahf
lahf
rcrl
xchg
xor
bound
mov
outsl
mov
jl
les
xchg
add
incb
insl
call
add
cmp
add
daa
jno
mov
addb
add
cmp
lds
add
mov
push
sbb
test
mov
lds
mov
cmpsb
add
mov
add
xchg
add
pop
mov
mov
push
add
push
dec
sbb
add
pusha
add
xlat
push
test
mov
mov
sbb
and
mov
add
jecxz
cmp
add
aam
sbb
add
add
nop
add
add
jg
add
fists
scas
sub
inc
data16
jmp
adc
in
add
rolb
push
add
push
sbb
add
add
pop
push
push
add
push
xchg
add
nop
add
mov
jecxz
in
jle
xchg
add
imul
xchg
enter
repz
push
add
xor
aam
or
add
into
ja
sbb
ds
add
xor
add
push
add
jns
pmulhuw
push
add
aam
cs
xlat
inc
add
in
add
ret
and
popf
pop
xchg
jns
repz
add
imul
mov
xor
or
mov
sbb
sub
mov
pusha
add
push
add
or
pop
lods
mov
add
cmp
sub
in
cwtl
inc
leave
xchg
add
push
gs
jecxz
sarl
mov
and
into
data16
add
add
push
add
mov
add
mov
sub
ret
add
xor
mov
stc
adc
jmp
cmp
in
cmp
add
repnz
pusha
add
lods
mov
imul
push
add
addb
add
sti
testb
add
add
add
add
add
mov
mov
xchg
add
clc
mov
add
add
cmp
add
mov
insb
rcr
and
cltd
aam
loopne
out
add
adc
fisubl
in
mov
mov
xor
pop
aaa
movsl
icebp
mov
mov
cmpsb
add
dec
hlt
add
into
pop
ret
insl
xor
xchg
pop
aas
add
dec
stos
cld
imul
pop
std
imul
test
add
sub
testb
add
add
add
add
mov
mov
xor
xor
jae
add
sbb
fcomps
cmp
pop
aaa
daa
xchg
add
ret
data16
ret
dec
testb
add
stc
out
pop
cmp
scas
lahf
rcl
add
inc
add
push
daa
loop
mov
pop
outsl
test
add
cs
sbb
das
lea
mov
mov
ret
test
sbb
add
aad
mov
xchg
add
cld
sbb
out
and
rolb
pop
sub
test
add
hlt
add
lods
sub
add
stos
testb
add
mov
add
mov
movsl
stos
ja
dec
cmp
cmc
mov
int3
or
xor
std
stos
aas
jecxz
sub
sub
xor
outsl
jae
sub
repnz
popa
int
add
cmove
mov
dec
adc
and
mov
enter
jp
cli
sbb
add
add
mov
mov
les
addr16
push
add
pop
fistpl
das
cltd
addr16
push
daa
stos
sub
adc
aad
add
sub
fildl
dec
popa
hlt
add
loop
xchg
mov
mov
push
add
jns
mov
inc
test
add
jge
dec
and
mov
add
xor
cmp
add
push
add
add
push
add
and
mov
fiadds
pop
mov
add
add
add
mov
gs
add
leave
loope
mov
lret
loop
mov
mov
add
add
inc
jae
add
bound
mov
test
cmp
or
xor
inc
add
pop
mov
add
add
pushf
sub
dec
or
daa
xor
add
add
add
in
add
jge
add
rol
add
push
add
sub
add
dec
movsl
ja
jge
pop
nop
add
add
add
std
sub
inc
add
aad
sub
xor
xchg
jge
cmp
xor
add
add
mov
push
add
leave
mov
pop
vucomiss
add
mov
add
add
movb
out
inc
fcmovnbe
add
add
pop
hlt
add
shrl
push
xor
push
mov
push
add
jl
mov
mov
xchg
adc
int
xlat
mov
testb
add
push
fstpt
iret
std
or
pushf
testl
loopne
and
push
rolb
fistl
dec
movsl
jns
inc
adc
movsl
mov
fwait
push
mov
sub
add
add
inc
mov
xchg
mov
and
mov
pop
in
mov
dec
iret
outsl
outsl
dec
loopne
and
mov
sti
movb
jmp
xchg
je
fsubp
jle
clc
mov
out
into
shll
jnp
cmp
inc
add
lcall
or
test
pop
mov
add
mov
add
add
add
cs
repz
bound
mov
sbb
dec
pop
xchg
aad
data16
cmc
rolb
sbb
add
mov
fwait
xchg
add
es
pop
outsb
aam
mov
add
add
aad
fwait
adc
cmpsl
cmp
or
add
cmp
add
add
imul
mov
scas
leave
pop
ja
add
and
mov
or
add
cltd
mov
add
faddl
add
add
mov
out
dec
xor
add
adcl
test
dec
cmp
inc
add
and
mov
mov
add
adc
test
iret
mov
clc
mov
add
mov
jno
das
int3
in
add
fcompl
add
call
pop
jecxz
and
add
repz
mov
inc
add
push
add
bound
mov
add
xchg
ret
loope
xor
inc
roll
rolb
mov
push
add
jecxz
or
add
add
add
add
je
jecxz
aaa
imul
jne
lahf
or
jno
leave
jo
loopne
inc
fstpl
mov
out
addr16
mov
jno
add
pop
add
lahf
dec
movb
pop
dec
cmp
call
jno
add
fsts
sub
rolb
mov
add
out
push
add
xchg
xlat
sbb
add
pop
lret
add
mov
add
add
sub
pusha
add
or
lds
rol
add
add
add
aaa
out
mov
add
cld
addb
add
mov
sahf
or
mov
imul
push
mov
iret
sub
add
or
dec
lret
mov
imul
xor
cmpsb
add
add
add
pushf
and
lods
and
jbe
sub
push
add
dec
push
mov
repnz
ljmp
add
jmp
jne,pt
rolb
add
cmp
mov
inc
add
mov
das
adc
mov
add
add
gs
lock
jo
add
mov
sub
xchg
pusha
add
add
push
add
add
sahf
call
cmp
add
or
jns
testb
mov
add
push
dec
loop
mov
lods
mov
add
in
int
stos
push
add
fsubs
jg
xor
out
add
cmp
push
lret
xchg
lock
insb
add
mov
repz
loope
cmp
dec
push
inc
mov
les
int
arpl
stos
fstpl
stos
daa
fisubrl
sbb
xor
mov
push
mov
xor
or
loop
sub
add
jle
inc
mov
pop
sbb
add
add
pop
inc
aam
subl
int
addb
xchg
mov
add
movsl
mov
movsl
sbb
dec
pop
push
add
loopne
dec
mov
daa
cmpsl
ljmp
mov
loope
lret
push
mov
add
adc
inc
add
scas
fistpl
dec
cmpl
and
je
rolb
mov
addb
inc
add
add
inc
add
icebp
out
faddp
lea
add
movsb
add
add
sub
pop
cs
inc
pop
aas
sub
fwait
mov
add
repnz
add
push
add
add
add
out
sahf
sub
mov
data16
data16
add
mov
xor
hlt
add
inc
add
jae
add
scas
add
xchg
xorl
pop
dec
xlat
lods
out
xchg
add
repnz
add
add
add
out
add
push
or
add
dec
push
cwtl
ficomps
rcrl
add
sub
sub
mov
cmp
inc
enter
add
lods
sub
lcall
stos
or
add
sbb
stc
add
mov
mov
mov
std
dec
adc
and
mov
clc
push
testb
xchg
add
add
pop
ja
inc
pop
adc
mov
cmc
les
ret
popf
addb
sub
nop
add
enter
ljmp
mov
mov
add
sbb
mov
sbb
movb
mov
mov
data16
divl
inc
or
popa
scas
int
insl
jmp
lods
dec
jecxz
lahf
leave
xchg
add
add
imul
js
add
add
add
xlat
adc
sbb
add
mov
add
xlat
pop
cmp
add
add
scas
dec
push
inc
add
nop
add
add
testb
add
adc
pushf
mov
cli
cmp
addb
add
add
popf
sbb
cli
lahf
mov
ret
push
add
das
xor
sbb
add
add
dec
stos
add
pusha
add
add
adcl
add
bound
mov
add
add
lret
in
dec
mov
add
cmp
and
mov
push
imul
incb
add
add
fucomip
and
ret
pop
ja
dec
mov
fnstcw
sbb
stc
push
add
dec
rcr
mov
mov
outsl
adc
scas
mov
int3
push
add
xor
imull
add
roll
add
xor
xchg
add
mov
fadd
test
add
lahf
fsub
add
add
rcl
cli
pop
inc
add
out
xchg
add
sbb
movsb
add
add
dec
push
add
add
popa
jo
stos
push
int3
xor
popf
lea
in
in
stc
and
outsl
mov
push
les
xor
mov
sahf
pop
ja
add
add
xchg
add
lds
mov
bound
mov
push
add
add
ja
add
loope
add
push
mov
add
xchg
mov
mov
pop
cmp
inc
sub
dec
inc
add
cmpsb
add
add
cltd
rolb
rolb
das
sbb
inc
sbb
mov
and
mov
mov
xchg
pop
add
mov
add
add
add
push
cmp
add
xchg
push
add
aas
push
add
add
and
push
movsb
add
add
add
pop
and
add
mov
test
arpl
add
lds
fisttpl
add
jae
pop
inc
add
sysret
mov
adc
shrl
gs
add
add
imul
inc
add
xor
inc
movsl
cmp
cs
iret
inc
dec
mov
dec
cmp
add
add
lahf
daa
int3
adc
xchg
add
insb
mov
adc
stc
dec
addb
add
out
cmp
add
call
lods
in
pop
mov
add
add
add
add
push
movsb
add
dec
adc
add
add
or
add
mov
and
popf
into
mov
mov
inc
loope
in
stc
dec
mov
add
dec
in
popf
imul
add
add
add
cld
push
add
sbb
mov
and
mov
in
add
add
in
insb
repnz
pop
add
movb
dec
add
mov
add
mov
stos
cld
inc
add
cmp
loop
movb
rolb
sahf
out
xchg
push
add
nop
add
pop
fcomps
test
and
mov
out
add
add
xchg
outsl
mov
adc
add
shrl
add
and
ret
add
rolb
mov
add
aaa
leave
cmpsl
xor
popf
cli
in
aaa
mov
lods
or
aas
push
cmp
test
loope
push
adc
fcmovb
xchg
testb
movb
leave
mov
add
add
insb
lahf
jmp
add
mov
mov
movb
sbb
cmp
add
jecxz
dec
jle
in
sub
jle
cmp
fadds
dec
negl
dec
push
js
hlt
add
movsl
mov
int
add
enter
les
cs
iret
pop
fiadds
adc
push
add
xor
and
das
push
out
ja
xchg
testb
add
add
popf
jl
mov
mov
add
mov
xlat
pusha
add
add
bound
mov
add
add
adc
xchg
call
add
add
xor
add
insl
inc
inc
add
add
stos
test
add
das
inc
add
pop
in
inc
add
jbe
pop
in
add
sbb
repnz
movb
mov
add
add
shll
lea
jae
out
push
add
aam
insb
cld
mov
mov
int3
sub
pop
das
addb
ret
fisttpll
add
xchg
add
jo
inc
dec
inc
add
jo
mov
add
in
mov
fwait
out
stc
sub
adc
add
pop
or
xchg
addb
add
addb
add
mov
jne
aad
pop
cld
decl
pop
testb
add
mov
add
add
fisttpl
pushf
call
sbb
mov
sub
add
call
mov
cs
enter
mov
mov
or
add
add
mov
add
arpl
xchg
jge
adc
add
mov
movb
mov
cmp
add
out
mov
mov
mov
add
mov
xchg
add
push
mov
add
add
push
daa
add
jae
f2xm1
add
mov
popf
fstpt
in
add
mov
mov
outsl
xor
ficoms
and
mov
stc
xchg
add
add
icebp
stos
fsubrl
lret
fsts
pop
jle
cmpsl
xchg
mov
outsl
adc
imul
jns
maxps
dec
pop
lcall
xor
mov
push
add
mov
rolb
sbb
aas
movsb
add
add
cmpsb
add
pop
test
ljmp
add
xlat
sub
dec
xchg
jmp
jmp
bound
mov
movb
nop
add
leave
add
mov
add
adc
iret
sub
add
lods
testb
add
hlt
add
sti
mov
push
add
dec
out
stc
xchg
add
fsubs
mov
dec
pop
add
aas
std
in
das
xor
push
add
fcoms
adc
push
rolb
push
add
pop
add
add
inc
add
pop
pop
pop
push
ret
lods
sbb
mov
push
add
mov
sub
sbb
jnp
add
add
lret
add
add
dec
xlat
sbb
mov
scas
sarl
sub
sub
adc
adc
cmp
lock
arpl
cli
push
add
out
stc
mov
add
add
add
sti
cmp
out
ret
or
fmulp
lea
or
mov
daa
cmc
hlt
add
push
in
ret
mov
add
int3
data16
ds
dec
ficoms
add
rolb
add
addb
inc
je
test
cli
mov
mov
add
xor
inc
xchg
out
pushf
sahf
fadds
add
testb
rolb
mov
add
test
add
and
sub
bound
mov
add
adcl
add
push
mov
or
adc
xlat
inc
adc
lods
imul
add
js
and
mov
negl
imul
lock
aam
repz
insb
jb
lea
bound
mov
add
arpl
sbb
cmp
mov
arpl
sub
xchg
add
xchg
jo
pushf
in
jl
adc
arpl
xor
sbb
add
add
mov
xchg
leave
dec
scas
icebp
sbb
andl
pop
stc
arpl
cli
push
fwait
lret
insl
inc
add
mov
pusha
add
cld
xchg
add
add
add
dec
mov
sub
or
data16
mov
add
loop
cwtl
ret
loopne
mov
mov
dec
test
mov
add
inc
mov
mov
xchg
pop
lods
push
cs
add
sahf
in
orl
inc
add
mov
lods
mov
xchg
jg
sbb
in
hlt
add
sub
mov
add
mov
rorl
and
mov
repz
xchg
fcoml
cli
xor
aad
add
mov
adc
push
add
add
repz
pop
lea
cmp
xchg
add
mov
add
movsl
testb
jo
imul
ds
fstps
dec
rcrl
pop
test
lret
sbb
pushf
adcl
add
insl
movsb
add
outsl
popf
xchg
stc
xor
bound
mov
rdpmc
addb
mov
jbe
xchg
add
lcall
shl
add
and
add
push
or
sbb
loopne
getsec
sahf
stos
xchg
or
rolb
das
fistl
mov
repz
das
xchg
idivl
add
adc
sub
add
addb
lahf
sub
mov
clc
dec
sbb
adc
push
add
add
cwtl
mov
lods
xchg
gs
add
sbb
enter
jecxz
add
dec
rolb
cld
xchg
add
inc
add
adc
add
les
in
xor
jno
xchg
sbb
jae
add
jle
xchg
add
add
mov
or
adc
mov
bound
mov
cmpsb
add
enter
inc
push
mov
pop
mov
fmuls
mov
add
add
adc
pop
lods
mov
and
push
xchg
test
rolb
data16
add
mov
add
push
pminsw
sub
jae
in
ljmp
movb
jno
sub
jnp
add
inc
add
push
add
add
ret
fcoms
int3
mov
mov
add
xchg
loop
inc
pop
lret
xlat
mov
jae
adc
mov
gs
popa
mov
jno
adc
or
out
xchg
mov
add
inc
add
lret
repnz
add
or
cmc
faddp
add
out
hlt
add
add
xchg
xchg
add
arpl
xchg
int3
and
mov
dec
and
mov
daa
jb
push
add
sub
sub
add
mov
add
add
rolb
xor
cmp
test
mov
push
dec
mov
xor
mov
xchg
nop
add
jnp
mov
jl
add
das
dec
sbb
cmp
fbstp
or
cmc
out
mov
mov
add
add
aad
mov
sub
inc
bts
add
add
int3
push
add
mov
add
scas
fsubs
add
or
bound
mov
xor
sub
call
ret
dec
enter
jmp
cltd
xchg
jg
add
add
out
add
jp
mov
ret
movb
xchg
or
stos
les
cmpsb
add
add
xchg
add
ja
xor
push
add
and
mov
mov
flds
mov
imul
mov
movb
dec
pop
shrl
add
add
add
pop
add
iret
cmp
mov
mov
xchg
or
jns
daa
ljmp
add
adc
jg
ljmp
sub
push
add
add
add
jns
and
mov
rolb
pop
sbb
add
dec
mov
mov
mov
xchg
ja
jne
adc
sahf
dec
stos
es
ret
add
push
add
pop
push
add
or
mov
add
into
cs
mov
lcall
add
jl
dec
roll
mov
add
std
sub
lea
add
jno
push
add
arpl
in
cmp
outsl
dec
movsb
add
add
mov
add
out
adc
in
add
add
add
push
sbb
les
adc
nop
add
pop
shll
add
pop
scas
and
mov
mov
push
inc
add
sahf
cmp
daa
rolb
enter
lret
clc
push
pop
xchg
add
loopne
pop
cmp
or
aam
xor
add
call
mov
repnz
sbb
xchg
das
xor
add
add
loopne
shll
bound
mov
pop
popf
enter
add
add
mov
addr16
add
mov
pop
imul
lret
mov
test
add
adc
mov
xchg
jge
popa
add
mov
add
test
jl
add
arpl
add
sbb
or
add
mov
fcmovnbe
add
add
pop
xor
stc
jmp
add
into
sub
jb
imul
add
mov
add
jns
in
in
xor
mov
dec
inc
add
add
adc
add
add
js
add
add
int3
add
add
pop
lret
je
mov
rolb
xchg
add
sti
fistps
add
jnp
cs
xchg
into
jae
add
lock
jp
jmp
mov
mov
outsl
mov
repnz
add
jecxz
clc
fdivs
repz
cmp
add
test
sbb
loop
call
pop
lock
dec
lcall
test
add
icebp
xlat
cmc
icebp
aad
inc
add
dec
addr16
push
stc
jg,pt
add
mov
push
add
add
adc
std
mov
add
mov
cmp
outsl
mov
gs
xor
add
xchg
inc
add
sub
jg
ret
jl
outsl
or
lock
out
add
add
nop
add
dec
xchg
add
enter
mov
xor
mov
mov
xchg
fldcw
rolb
inc
mov
mov
cmp
add
add
jae
add
pop
es
icebp
psubusw
mov
add
add
cmpsl
inc
add
insl
xor
dec
icebp
mov
lahf
dec
mov
dec
data16
stc
cwtl
ljmp
addb
test
pop
addr16
scas
rolb
cmp
mov
sub
mov
pop
lods
adc
add
dec
fbstp
add
ja
lods
add
xor
insl
scas
xlat
mov
dec
iret
mov
add
mov
jbe
iret
lea
add
mov
cmpsl
cs
inc
cmp
sahf
adc
mov
add
ljmp
lock
mov
add
xchg
fwait
sbb
add
lret
stos
lahf
fimull
fwait
mov
jo
add
fidivl
mov
nop
add
lods
ret
or
pop
push
add
pop
dec
pop
jnp
add
jne
js
mov
add
scas
push
out
stc
pop
rolb
add
mov
add
das
outsl
testb
or
add
jb
insl
jg
add
mov
shll
push
pop
mov
fiaddl
movsl
and
add
xchg
in
add
outsl
repnz
nop
add
add
pop
xchg
add
js
add
xchg
add
pop
jmp
jo
cs
scas
dec
mov
mov
dec
imul
add
inc
add
push
fdiv
jp
pop
xor
cltd
pop
stos
loope
add
add
mov
mov
sbb
mov
stc
ds
popl
add
data16
loope
jns
leave
rolb
sbb
stc
fistps
enter
pusha
add
enter
jp
jle
add
lcall
xor
adcl
ds
add
sub
aam
sbb
adc
outsl
jbe
cmpsb
add
outsb
rcll
add
call
mov
loopne
stc
mov
pop
jl
add
test
cmp
pop
jle
hlt
add
add
pop
mov
xor
arpl
adc
pop
push
or
add
xor
fisttpl
xor
insb
lcall
aad
aas
dec
das
dec
sub
jno
add
add
xchg
add
test
and
pop
repz
popf
mov
mov
lea
rolb
add
or
dec
sub
mov
xor
test
add
mov
add
xor
inc
adc
add
popa
pop
mov
lds
aas
negl
pushl
add
add
xor
mov
inc
add
cmp
dec
add
jp
test
sub
add
add
movb
sub
out
add
mov
add
pop
scas
loopne
push
loopne
sbb
xor
ret
xor
mov
add
lods
leave
mov
aad
dec
mov
cmc
add
add
lods
mov
inc
mov
dec
pop
in
mov
add
add
sti
mov
add
int3
push
add
push
rolb
add
mov
data16
loop
fisubl
orl
add
add
xchg
push
add
and
mov
xor
data16
je
xor
sub
cmp
cli
xlat
and
mov
sbb
add
add
dec
and
add
fwait
ret
addb
and
cld
xor
rolb
push
add
sarl
insb
mov
add
pop
jp
addb
add
add
aas
jmp
add
add
add
fsubl
adc
sti
xchg
mov
int
inc
add
inc
stc
dec
les
mov
push
add
iret
sahf
mov
push
bound
mov
jg
add
das
fdivs
add
mov
loope
fldenv
xor
pop
pop
adc
pop
inc
add
ret
add
lds
pop
bound
mov
jl
dec
addb
data16
mov
dec
imul
cmp
outsl
stos
es
add
dec
dec
sti
lds
jbe
pop
add
fcmovnu
add
cli
cmp
add
add
pcmpgtd
inc
add
sub
add
imul
add
loope
popf
test
mov
jle
add
add
add
jne
jge
insl
mov
scas
and
daa
data16
xchg
int3
or
shl
push
jge
push
es
outsl
insl
pop
pop
les
addr16
hlt
add
insb
imul
jle
add
sub
add
add
and
mov
popa
cmp
pop
shl
add
enter
add
aaa
mov
add
xchg
mov
fildll
enter
popf
mov
add
sub
adc
addb
add
dec
mov
dec
cmpsb
add
inc
les
adc
rorl
add
and
adc
fwait
inc
cmpsl
sbb
add
add
cwtl
dec
push
inc
add
xchg
add
xchg
cwtl
inc
add
inc
add
cmp
xlat
mov
dec
stc
jne
add
popa
jmp
loope
out
jo
movsl
push
add
mov
sbb
xor
dec
leave
ret
ja
add
add
mov
push
add
fstl
inc
mov
add
add
mov
cmp
add
mov
push
and
mov
dec
sub
stc
or
add
sarl
add
sbb
or
rolb
xchg
add
add
enter
cmp
jge,pn
add
test
jp
add
jo
outsl
data16
fimull
pop
pusha
add
lcall
sbb
cmpsl
cmp
add
aad
fisubrl
add
loopne
or
data16
add
add
cmp
mov
xchg
add
xor
fldt
sub
mov
cmp
add
xor
mov
add
mov
add
adc
xchg
popa
dec
lahf
adc
xlat
or
pop
xorl
cmpsl
testb
add
adc
cmp
fldl
add
xchg
jno
add
add
mov
add
iret
mov
bound
mov
pop
stos
test
rolb
shl
add
pop
pusha
add
xchg
aam
imul
xchg
add
arpl
add
cmp
push
xlat
cld
aad
add
push
add
jo
cmpsb
add
add
add
xor
outsb
mov
mov
add
rol
jns
jbe
adc
sub
push
insl
sti
mov
pop
pavgb
or
xchg
push
push
add
adc
dec
nop
add
add
mov
add
cld
lods
push
add
add
mov
adc
aas
jno
mov
or
add
jg
add
dec
jnp
inc
adc
loopne
mov
add
insl
fsts
push
add
ljmp
or
add
test
xor
mov
add
scas
dec
mov
mov
sub
mov
sub
xchg
pop
inc
pop
ret
popf
outsl
sbb
ds
ret
add
xchg
outsl
in
stc
mov
add
aad
xchg
add
jb
and
fiadds
add
pop
inc
push
add
leave
sti
test
popa
dec
into
jo
test
or
ds
stos
pop
test
jp
xchg
sbb
out
or
das
or
and
mov
add
push
int3
xor
outsb
push
add
loope
les
iret
xchg
add
fmulp
push
add
add
stos
popf
das
ret
call
cmp
push
mov
xchg
and
pop
fists
add
movb
add
xchg
rol
dec
push
jae
fwait
das
add
pop
cmp
add
add
add
add
pusha
add
add
rolb
add
clc
xchg
ret
rcr
jns
dec
jnp
jno
leave
into
testb
xor
repnz
inc
xchg
add
cmpsb
add
add
loope
add
add
mov
mov
mov
mov
pop
pop
dec
es
pop
hlt
add
dec
jbe
push
in
inc
add
lret
add
clc
fwait
mov
push
add
add
out
adc
add
push
inc
add
add
add
add
in
dec
pop
fwait
pop
sarl
pop
xor
outsb
in
adc
push
add
pop
jg
jns
sub
stos
mov
push
cmp
add
xchg
data16
jne
add
add
push
add
insb
mov
add
adc
fwait
lods
addb
in
test
lahf
push
add
mov
adc
xor
imul
adc
into
sub
xor
add
mov
in
sbb
add
icebp
push
add
inc
add
out
push
add
mov
sub
jmp
in
fcoms
int
fwait
and
inc
popl
cmp
add
aas
push
add
add
add
sub
das
adc
insb
cmp
jns
mov
add
mov
in
push
and
mov
test
or
inc
leave
std
jno
fsubs
add
push
add
lcall
mov
add
test
fsubrl
and
mov
add
add
adc
dec
popa
pop
lock
add
add
add
lret
fcomip
loopne
xor
mov
xchg
add
push
push
add
daa
xchg
sbb
mov
pusha
add
xchg
mov
rolb
cli
gs
inc
sarl
pop
cmp
cmp
mov
addr16
jmp
xchg
psubsb
lds
imul
add
add
andl
lret
mov
add
adcl
es
add
call
cmp
add
mov
mov
add
fucomip
insl
cmpsb
add
add
jae
add
add
fprem1
or
dec
sbb
dec
mov
xor
or
mov
fildll
cmp
or
out
add
xchg
inc
add
jb
cmp
nop
add
lods
xchg
add
sbb
jg
add
dec
or
rolb
push
add
jbe
pushf
mov
add
or
add
add
add
mov
mov
dec
cld
dec
cwtl
cmpsb
add
lcall
add
push
pushf
pop
mov
add
add
add
fisubl
add
fwait
cmc
int
push
cld
dec
push
loope
add
adc
addl
jge
movsl
jecxz
frndint
or
ficompl
add
add
sub
add
mov
xor
mov
lock
test
xchg
mov
xchg
insl
gs
shll
iret
jle
add
xchg
xor
and
loope
in
add
add
push
mov
fidivs
loop
cmp
in
pop
push
add
cmc
adc
movb
add
cmp
int3
pop
mov
add
add
gs
add
in
das
fadd
add
lahf
dec
mov
add
pushf
lds
add
add
loop
loope
add
add
ror
leave
lea
mov
xlat
cmovnp
add
xor
rorl
imul
pushf
in
add
scas
mov
add
pushf
and
sahf
mov
sbb
add
sub
adc
jne
pop
das
sub
test
out
fwait
repz
push
scas
mov
hlt
add
repnz
add
stc
mov
xchg
bound
mov
add
add
mov
xor
add
xchg
add
lahf
fldenv
xor
les
enter
pop
jbe
mov
sbb
add
pop
xchg
sub
pop
mov
jmp
xor
fstpl
sub
loop
mov
ja
stc
mov
adc
outsb
mov
iret
in
sub
sti
shll
mov
adc
add
rolb
or
jg
add
jb
pushf
xor
add
add
aaa
inc
popa
add
mov
jno
adc
mov
add
les
sbb
mov
add
sub
add
mov
add
add
outsb
bound
mov
lea
test
xor
daa
iret
lret
stc
in
cmpsb
add
xlat
lcall
jle
out
and
adc
xorl
add
mov
sbb
cmp
add
jne
push
dec
sub
add
xchg
jne
add
jne
out
idivl
insb
inc
add
in
nop
add
sbb
cmp
mov
adc
or
rolb
sub
mov
xchg
jmp
add
xchg
xchg
rolb
mov
mov
testl
add
add
xchg
add
add
inc
add
xchg
add
add
mov
xor
jne
add
adcl
out
and
mov
test
int3
fisttps
inc
push
mov
and
orl
mov
add
jecxz
dec
out
call
add
xchg
mov
gs
adc
pop
cmpl
dec
and
adc
out
outsl
jecxz
cmp
add
mov
xor
push
add
xor
imul
loopne
dec
dec
dec
xchg
inc
add
and
mov
fwait
out
ret
jecxz
sbb
pop
in
xor
jnp
add
cltd
addb
add
mov
add
push
add
jl
fcmovnu
enter
mov
push
inc
add
mov
and
mov
xor
hlt
add
add
into
jb
aam
push
call
add
jge
mov
add
jg
out
in
pop
test
sahf
data16
xchg
add
sbbl
lea
lret
imul
dec
test
add
add
cmp
adc
test
clc
out
jb
jns
pop
je
mov
add
scas
repnz
add
pop
fwait
xchg
add
loope
add
add
inc
add
bound
mov
push
movsb
add
filds
mov
fadd
add
sub
jl
outsb
sub
in
add
movsl
sub
dec
add
mov
dec
mov
add
jnp
push
data16
xchg
add
sub
lds
add
data16
add
in
jmp
ret
cmp
add
cltd
add
sbb
outsb
mov
fsincos
jb
shrl
add
xchg
rolb
lds
dec
aaa
loopne
pushf
sub
js
add
ret
inc
fnstsw
mov
add
add
xlat
lods
cmc
shll
add
add
loop
rolb
sbb
insb
and
add
jnp
pop
sbb
pop
data16
adcl
std
fldln2
in
push
js
dec
test
stc
out
fwait
popf
addl
repnz
data16
cmpsl
int3
testb
add
push
add
pop
push
add
push
leave
dec
mov
std
and
jns
pop
mov
test
iret
popf
imul
and
adc
clc
pop
in
xchg
xchg
mov
and
push
add
jb
loopne
mov
add
add
outsb
or
inc
pop
pop
imul
sbb
add
add
xor
jns
scas
daa
add
sub
mov
in
dec
outsl
pop
sti
aaa
js
add
push
push
add
jle
add
inc
add
sbb
pop
loopne
gs
add
push
pop
push
add
dec
and
mov
mov
jne
pop
pop
int
addb
add
ret
and
mov
add
jge
out
dec
or
inc
add
lahf
mov
mov
sbb
inc
add
cwtl
push
xchg
adc
das
ficoml
push
repz
add
mov
add
lret
jbe
sti
mov
push
ret
ret
icebp
jo
pop
cmp
mov
xchg
in
push
leave
mov
add
cmpsb
add
inc
add
or
add
add
sub
cmp
test
add
add
clc
or
scas
scas
inc
add
add
cmpsl
mov
arpl
shl
adc
out
movsl
pop
mov
cltd
jmp
and
add
mov
mov
stos
dec
pop
addb
xchg
lret
iret
arpl
mov
iret
lods
cwtl
xchg
mov
add
inc
xor
aaa
insl
mov
popl
mov
sub
add
jbe
or
add
mov
sqrtps
add
mov
sub
add
sbb
add
pop
lods
rcrl
add
inc
shll
pop
movsl
cmp
into
push
add
dec
rolb
add
imul
into
inc
add
add
add
fisubrs
insl
rolb
scas
ljmp
push
jge
add
xchg
add
scas
mov
inc
clc
icebp
push
inc
cltd
mov
pop
cmp
mov
movsl
push
add
add
push
add
sbb
nop
add
xchg
xor
add
xor
orl
cli
nop
add
aad
push
add
into
rcll
insb
arpl
sti
push
add
add
or
inc
stos
fisttpl
sub
sbb
out
addb
add
inc
add
add
fistps
imul
mov
adc
adc
mov
mov
xchg
jnp
inc
push
add
add
out
out
into
jmp
cwtl
xchg
pop
jns
push
xchg
das
sbb
dec
push
mov
sahf
cwtl
stc
sbb
shrl
xchg
mov
mov
dec
adc
mov
sbb
int
nop
add
dec
adc
add
mov
nop
add
daa
jl
mov
pop
into
addr16
push
add
ret
add
sbb
xor
ret
adc
add
lahf
orl
adc
add
add
add
cli
cmp
add
jp
jns
cmp
js
xlat
adc
add
loop
or
std
dec
pop
lahf
add
xchg
add
fistpll
bound
mov
add
add
mov
and
add
push
add
inc
add
mov
lods
cltd
add
add
fstl
xor
in
xchg
in
xor
mov
add
add
adc
or
push
cld
rorl
push
fcmove
jl
dec
add
addb
add
jle
add
add
outsl
cmp
mov
outsl
and
xor
faddl
fistpl
outsl
xchg
mov
notl
repnz
mov
add
jnp
test
sar
ds
add
mov
lods
adc
in
push
add
mov
push
cmp
dec
inc
add
dec
rolb
add
fnstenv
xchg
and
add
add
mov
mov
dec
xor
cli
cmc
test
or
add
sub
sub
in
dec
imul
add
xor
jp
pop
nop
add
jecxz
add
mov
dec
sbb
cmp
aas
data16
addl
add
adc
lds
pop
dec
loope
inc
add
mov
inc
cmc
stos
cld
adc
bound
mov
xor
adc
mov
xor
orl
movsl
cmpsb
add
repz
and
mov
mov
add
sub
stos
loop
in
cmp
add
mov
into
jecxz
push
gs
incl
add
pop
mov
xchg
inc
add
into
scas
dec
je
in
jbe
sbb
push
add
pop
out
dec
push
add
add
add
add
mov
cmp
jo
filds
mov
add
imul
xor
add
cmp
xor
adc
inc
sub
add
add
addb
jnp
add
xchg
add
add
add
mov
xchg
dec
roll
add
nopl
lods
cltd
pop
xchg
into
dec
push
cmp
aad
test
stc
xchg
add
push
sub
add
add
nop
add
add
add
lea
hlt
add
cmpl
add
jns
sbb
pop
testb
add
xor
add
lods
push
aad
and
mov
add
xlat
xor
loopne
pop
ret
xchg
aad
add
mov
filds
add
data16
add
add
mov
cmp
add
data16
push
add
sbb
dec
sti
add
jg
ret
or
inc
dec
cld
sbb
rolb
and
mov
jne
add
add
add
pop
je
mov
add
aas
mov
movsl
cmp
jl
cld
ficoml
xchg
and
mov
imul
xor
out
aaa
cltd
inc
ret
xchg
xor
pushl
shll
mov
mov
insl
sub
push
es
add
xor
pop
mov
mov
or
add
movb
and
add
in
pop
dec
xchg
mov
jle
ret
add
data16
in
outsl
insl
inc
add
movsl
repz
je
adc
mov
stos
sahf
cld
mov
nop
add
mov
aaa
cmp
js
pop
mov
sub
mov
ds
add
dec
cmp
lahf
int3
insl
movsb
add
mov
xchg
sub
repz
cmp
or
add
add
ja
enter
sub
push
add
addb
add
mov
xchg
add
and
mov
adc
add
jns
sub
sub
add
add
iret
insb
je
jl
call
add
pop
fmull
jo
jno
add
xchg
inc
add
out
pop
mov
add
push
add
js
int3
popf
icebp
xchg
push
add
out
cs
jl
pop
mov
push
push
add
push
cmpsb
add
bound
mov
inc
add
fwait
xchg
loopne
pop
inc
idivl
add
lock
cmpl
push
pop
enter
sub
add
add
fcmove
out
inc
add
rorl
xchg
add
iret
push
das
ja
stc
xor
sbb
aad
sub
inc
mov
cld
mov
clc
movsb
add
addr16
clc
mov
or
popf
add
mov
add
dec
mov
pop
dec
rolb
xor
imul
stos
dec
mov
add
sti
inc
or
add
add
dec
pushf
in
add
mov
add
cmpsb
add
sti
enter
mov
adc
mov
add
decl
mov
add
imul
aas
push
add
add
je
mov
mov
stos
lods
jg
rcrl
scas
or
push
add
lds
movl
add
loop
in
lret
stos
pop
pop
cli
pop
stos
leave
cmpsl
push
jmp
pusha
add
push
rolb
push
add
popl
add
add
mov
aaa
fpatan
xchg
add
jno
jmp
out
sahf
cwtl
and
mov
stc
or
ds
data16
or
cmp
add
in
fdivp
add
add
add
add
push
add
popf
rcll
leave
inc
rcll
lea
pcmpgtw
mov
adc
shll
add
xchg
test
add
mov
add
aam
popa
push
add
xchg
cld
sub
insb
popf
ja
add
xchg
add
add
add
xchg
cmpsb
add
in
adc
es
mov
mov
inc
imul
stos
stos
inc
hlt
add
add
lahf
jle
ret
sub
add
mov
imul
or
std
cmp
cmp
adc
xchg
sbb
sub
rolb
xlat
stos
push
add
add
in
clc
add
add
pop
push
add
adc
add
fwait
add
inc
pop
stos
jecxz
dec
js
add
add
lret
incb
dec
stc
scas
jmp
mov
add
mov
sbb
fistps
aad
add
movsb
add
xor
mov
cwtl
gs
dec
cmp
add
sub
and
loopne
popf
outsl
adc
pop
repz
add
adc
cwtl
pusha
add
add
cmc
imul
fdiv
add
cltd
popf
sbb
add
insb
cmp
adc
mov
out
mov
ljmp
xchg
add
dec
mov
add
fisttpl
fldcw
repz
mov
ret
and
mov
aad
add
gs
movsb
add
add
push
repnz
add
xchg
add
pop
int3
push
add
or
add
add
add
ljmp
les
xchg
sbb
mov
adc
add
repnz
mov
add
sub
xor
and
mov
mov
xchg
je
cmp
cmpsb
add
add
add
pop
jb
mov
pop
mov
loopne
fldz
push
add
xor
jg
sub
enter
add
or
std
and
insl
mov
cmp
push
add
imul
mov
mov
and
add
add
lahf
ja
add
das
or
add
ja
adc
mov
xchg
shr
jo
pop
pop
or
mov
cmp
or
adc
add
add
test
add
cli
rolb
leave
inc
out
call
xor
add
add
fcomi
lahf
mul
add
shrl
inc
add
add
pusha
add
leave
out
adc
mov
cmc
jge
outsl
cltd
sub
adc
test
sub
dec
aam
aaa
lret
mov
cltd
xchg
xchg
add
add
clc
inc
outsb
mov
inc
add
mov
mov
sbb
addb
mov
sbb
pop
or
mov
mov
jg
out
loopne
mov
roll
jae
and
add
pop
stos
and
mov
add
add
aaa
adc
xchg
add
add
daa
stos
dec
mov
insb
add
ffree
sub
add
add
inc
jle
push
jg
push
add
sub
loop
pop
nop
add
lret
roll
mov
aad
rolb
adc
fidivl
mov
mov
popf
loopne
pop
test
xchg
add
addb
xor
addb
add
movsl
std
outsb
mov
rorl
add
add
les
lret
shll
mov
mov
mov
cmp
addb
add
add
xor
sub
stos
mov
loopne
dec
mov
stos
pop
sub
insb
fisubrs
mov
stos
pop
lock
std
in
mov
nop
add
xor
add
in
and
add
add
cmp
add
pop
aaa
stc
stos
push
inc
or
add
inc
add
jae
cmpsb
add
add
mov
pop
imul
mov
and
in
xchg
xor
add
hlt
add
add
mov
sbb
aaa
movsb
add
and
mov
test
xor
add
hlt
add
sbb
add
or
mov
or
mov
pop
out
xor
inc
add
in
jb
mov
sub
daa
add
pop
fistpll
add
push
jo
adc
push
gs
arpl
mov
add
mov
add
fucomi
leave
mov
add
sub
push
cmp
sub
or
add
inc
add
add
add
pop
insb
push
add
hlt
add
rolb
mov
in
addb
add
add
add
movsl
fdiv
les
fdivp
add
add
mov
mov
add
add
ret
dec
ret
dec
in
fisubrs
mov
add
jnp
scas
int3
rolb
add
jb
inc
add
clc
or
pop
sarl
int3
mov
adc
sbb
mov
add
add
in
bound
mov
imul
loop
cwtl
rolb
add
pop
pushf
mov
leave
mov
pop
loope
pushf
sbb
inc
add
mov
sbb
mov
sahf
push
add
mov
movsl
cmpsb
add
into
pop
ret
mov
add
add
mov
jmp
add
or
mov
and
rolb
call
icebp
pop
stos
cltd
jle
add
mov
outsl
push
add
and
mov
jge
push
add
mov
add
add
mov
rcrl
ficoms
cli
pop
out
add
cmp
pop
sub
stc
mov
adc
sub
insl
cmp
xchg
sahf
mov
add
inc
add
imul
out
repz
flds
movsl
movsb
add
insb
mov
in
mov
sbb
xor
cmp
push
cmp
mov
pop
adc
cmpsl
mov
add
add
add
pop
jne
or
mov
mov
add
add
add
add
add
add
sbb
fildl
jle
xor
mov
mov
add
adc
mov
in
xlat
testb
add
add
xor
add
dec
xchg
or
jg
adc
add
repz
les
pop
xor
mov
mov
movsb
add
push
add
or
push
mov
xchg
mov
call
add
add
and
mov
add
ficoml
arpl
add
mov
sbb
fwait
sub
fsubr
mov
pop
cmp
add
lods
out
cmp
pop
fiaddl
inc
add
inc
aam
and
mov
addr16
adc
add
sbb
pop
sbb
dec
xchg
add
add
add
in
or
xchg
push
add
add
mov
fldenv
mov
addr16
sbb
add
or
popf
adc
add
add
add
pushf
pop
mov
ss
lods
jg
add
add
mov
bound
mov
pop
addb
ljmp
add
add
pop
popa
movb
and
aaa
dec
ret
aas
pxor
in
add
add
xor
lret
add
faddp
icebp
push
dec
jno
add
mov
lea
cmp
imul
sbb
fsubrl
add
mov
add
add
sub
daa
in
push
lods
and
mov
xchg
add
fcoms
xchg
das
mov
pop
outsl
cmp
addr16
insb
inc
add
pop
xchg
mov
and
sbb
sub
add
mov
adc
xorl
sbb
ljmp
cwtl
cmpsl
insl
xor
jl
add
fidivl
int
nop
add
add
mov
add
outsl
push
mov
add
lret
add
leave
lea
or
inc
cmp
sub
add
imul
test
stc
iret
shll
shll
leave
movb
and
mov
cmc
pusha
add
ljmp
and
mov
addb
add
daa
jae
jl,pn
push
int3
xchg
add
mov
fiaddl
mov
stc
push
jbe
nop
add
mov
cwtl
test
in
jmp
or
add
mov
add
add
lahf
int3
dec
cwtl
sub
add
pop
inc
pop
aam
data16
mov
cmp
idiv
mov
add
lock
pop
rolb
add
daa
rcll
push
inc
add
jno
jg
js
icebp
cmp
add
mov
loope
add
mov
jns
add
int
stos
fdivl
int
out
in
daa
rorl
jae
pop
jecxz
mov
mov
sbb
cmp
xor
xor
jle
ljmp
and
sti
addr16
scas
pop
jge
lods
imul
dec
shrl
out
pushf
mov
xchg
add
pop
xchg
add
add
mov
mov
test
sub
addb
add
mov
or
sub
and
xchg
movsl
mov
aam
jge
push
lahf
jae
cwtl
fwait
push
add
je
incb
scas
inc
jno
add
mov
cmp
jb
sbb
push
lahf
pop
fisubl
fisubs
jae
addl
and
add
incb
jl
jmp
lret
fiaddl
add
test
mov
mov
mov
xor
arpl
addb
inc
add
test
pop
jne
add
add
cmc
xchg
rolb
fbld
sqrtps
fwait
in
dec
mov
or
add
add
inc
push
xchg
addr16
popf
mov
add
ret
daa
dec
ljmp
fistpl
xchg
subl
fwait
cli
out
mov
mov
add
xchg
add
and
add
add
mov
xchg
dec
cs
mov
hlt
add
inc
adc
pop
jae
add
add
lds
test
push
out
add
ret
jne
add
add
pushf
xor
xchg
aaa
xor
and
xlat
in
adc
add
push
lret
sub
add
add
inc
sbb
fimuls
mov
add
mov
daa
jns
cmp
mov
add
push
add
pop
jb
cli
pop
out
inc
xor
lock
sub
leave
lock
aas
sub
add
pop
or
nop
add
int3
testl
xor
add
lret
inc
add
dec
mov
int
or
icebp
xor
inc
add
add
add
and
jge
mov
cmpsb
add
mov
add
je
sub
popf
xchg
pop
mov
cmc
push
add
push
mov
cmc
ret
clc
lock
pop
dec
and
mov
add
add
in
adc
push
add
addb
rolb
sub
addl
hlt
add
arpl
sbb
cltd
sub
add
scas
addb
add
pop
inc
add
mov
iret
nop
add
ja
aaa
lcall
add
add
movsl
aad
add
add
add
add
jge
inc
add
add
add
test
inc
add
push
xorl
jecxz
add
dec
rolb
test
add
sub
pushf
sbb
mov
enter
add
add
jne
scas
push
add
loope
add
int
aam
jnp
mov
sbb
in
xchg
add
int3
pop
xchg
add
mov
add
add
ljmp
xor
or
mov
add
add
add
ja
std
mov
or
add
add
xor
mov
xor
jp
int
in
fisubrl
clc
or
andl
mov
jb
gs
scas
dec
pop
sarl
xor
pop
xchg
js
addb
add
pop
pop
shll
add
add
xor
cmp
add
mov
adc
push
add
add
rolb
insb
jmp
pop
adc
adc
jo
cmp
add
or
cs
add
xor
add
jle
mov
jne
inc
movsb
add
add
add
aas
sbb
xchg
testb
add
add
sbb
dec
add
ja
cli
aas
rolb
xor
data16
add
mov
addb
dec
aas
and
sbb
add
push
add
add
and
rolb
jnp
add
add
add
add
ficoms
xchg
add
add
add
pop
mov
add
jno
add
add
call
mov
mov
rolb
cwtl
insl
andl
xchg
sbb
mov
add
add
ficoms
add
inc
pop
insl
add
mov
mov
mov
aaa
jbe
cmp
sbb
sub
loopne
scas
cmp
js
loopne
mov
or
sbb
lds
testl
in
mov
pop
xor
add
add
pop
stc
jl
scas
sub
sub
fisubs
add
dec
inc
add
add
fwait
inc
add
test
or
add
mov
outsl
cmp
add
pop
xor
mov
mov
add
sbb
jp
sbb
inc
xor
add
add
sbb
inc
add
outsb
addb
add
and
mov
data16
add
push
add
fwait
jbe
add
add
add
sub
enter
or
sahf
pop
jg
enter
xor
cmp
push
mov
push
fs
stos
pop
das
jo
lods
lea
add
push
add
push
movsl
mov
outsb
jo
adc
jo
jg
jp
jbe
jg
add
js
xchg
outsl
dec
fwait
cmp
and
mov
inc
add
sub
insb
int
xor
add
sub
push
add
rolb
mov
notl
mov
add
push
add
add
loope
pop
outsb
mov
ds
add
add
adc
push
add
ret
jecxz
addb
pop
mov
clc
and
mov
dec
test
mov
add
add
daa
inc
add
pop
push
add
test
js
mov
add
test
lahf
jns
add
dec
mov
add
lcall
dec
mov
push
and
inc
add
push
add
int
add
mov
jno
add
xor
rolb
adc
sub
and
adc
and
push
add
add
test
add
daa
cmpl
je
insb
xchg
add
ja
aad
xor
cmp
call
sub
add
fwait
xchg
ds
pop
and
mov
jl
add
popa
pop
movsl
test
sbb
mov
jmp
jbe
push
add
add
cld
or
negl
jge
dec
aad
sbb
add
add
add
data16
sbb
mov
add
push
imul
jg
pop
rolb
or
sti
in
jns
test
jno
scas
xor
out
out
cmp
jmp
aaa
adc
mov
or
and
mov
add
add
add
in
mov
inc
insl
mov
cmp
dec
in
adc
add
mov
inc
add
jae
add
add
add
and
test
shll
leave
lret
add
add
push
mov
push
add
ljmp
jle
hlt
add
mov
pop
inc
dec
movups
lock
dec
addl
push
inc
insl
add
add
add
out
sub
xchg
push
add
add
jne
mov
add
ret
jnp
test
jne
pop
cmp
add
mov
push
add
add
cmpsb
add
mov
inc
movb
mov
push
add
dec
inc
add
test
inc
add
jmp
or
add
push
add
add
mov
adc
mov
in
fisttpl
mov
aam
stos
pop
jl
fcoms
jns
add
sub
sbb
and
mov
mov
mov
repnz
or
test
mov
add
or
fcmovnb
add
or
mov
sub
sahf
adc
aas
and
ret
xor
push
loope
add
int
push
out
push
add
das
loop
fwait
add
add
es
out
adc
mov
test
mov
dec
fcoms
mov
add
add
imul
addb
add
add
cld
enter
lea
add
push
add
jo
stc
add
cwtl
push
jb
fdivl
dec
xor
dec
mov
add
cmc
add
add
xor
mov
mov
stos
aad
add
stos
enter
xchg
add
sub
in
outsb
loopne
jae
xor
jge,pn
add
cmp
sti
test
xchg
mov
push
add
add
xlat
lds
dec
iret
bsr
repnz
rolb
shll
sbb
dec
icebp
mov
add
add
mov
and
mov
addb
in
je
jae
fwait
xchg
add
cld
jmp
add
pop
sbb
sub
add
push
add
mov
fnstcw
mov
fstp
or
add
xor
dec
push
add
mov
xchg
jg
scas
xchg
jbe
jl
add
mov
fidivrs
outsl
pop
stc
sub
add
adc
mov
test
ljmp
mov
aam
cmp
inc
lret
add
jg
or
and
fdiv
add
ret
mov
lcall
jp
sti
mov
xchg
or
xchg
add
pusha
add
dec
inc
add
hlt
add
shll
dec
push
add
cli
addr16
inc
add
stos
mov
sarl
push
adc
push
add
inc
bound
mov
add
popf
lcall
add
mov
rcl
in
or
and
int
aad
jl
add
add
xor
cmp
in
xchg
insb
push
rolb
daa
jae
cli
testb
aad
addr16
add
inc
adc
adc
scas
or
out
and
addb
movb
add
add
pushf
testb
add
add
imull
mov
add
mov
cli
push
xchg
add
dec
cmp
xchg
add
push
leave
push
outsb
push
add
add
or
bound
mov
out
vpunpcklbw
mov
adc
lret
enter
add
data16
add
test
mov
push
add
xor
sti
cld
xchg
cmp
adc
push
add
testl
addb
cmp
mov
add
push
jecxz
test
mov
call
lods
lcall
add
mov
sub
add
mov
repnz
cmp
push
add
outsb
jle
loopne
daa
das
shll
add
add
add
cmc
addb
add
inc
add
adc
add
add
enter
in
data16
push
imul
pop
leave
xchg
sub
sbb
mov
add
rcl
add
add
mov
push
jbe
sub
mov
fstpl
cmp
add
repnz
cmp
outsl
or
mov
cmpsl
fcmovb
add
add
pop
loope
lock
add
nop
add
cmp
pushf
rolb
mov
repz
inc
rolb
addb
add
adcl
add
add
nop
add
add
mov
inc
add
fstl
iret
xor
rolb
stc
cmp
add
add
rcr
sbb
add
add
or
stos
pushf
and
cwtl
xor
test
test
dec
jg
add
shll
push
mov
cmp
add
pop
cwtl
push
rolb
out
lahf
test
dec
push
dec
sub
push
add
add
xchg
add
add
sbb
add
pop
andl
cmpsl
repz
add
adc
ljmp
fabs
stos
adc
lret
push
xor
je
push
add
xor
add
dec
jns
mov
fildl
add
aaa
into
inc
imul
cmc
or
mov
add
add
or
dec
xchg
add
add
lds
cmpsb
add
lahf
jl
arpl
add
add
add
add
sub
filds
ficoml
or
imul
push
mov
stos
mov
add
push
add
inc
add
xchg
jbe
inc
add
xlat
shrl
push
push
add
sbb
sub
invd
mov
fcomps
stc
cmpsb
add
dec
sbb
incl
mov
pop
nop
add
add
add
add
mov
sbbl
movsb
add
inc
add
das
cmp
sbbl
add
push
testl
mov
sbb
inc
add
movb
out
adc
add
add
or
add
inc
add
add
xchg
pop
shll
and
mov
add
cmp
loopne
xchg
addb
jle
add
nop
add
addb
add
add
mov
mov
jnp
mov
testb
xchg
mov
and
push
sub
add
pushf
cmp
movsb
add
mov
scas
data16
pop
stc
cli
out
add
movb
or
add
mov
jmp
add
call
add
mov
test
pop
or
arpl
xor
cmp
pop
mov
stos
sub
mov
mov
int3
dec
pop
sub
adc
dec
xchg
mov
add
add
add
js
add
std
out
add
mov
mov
cmc
and
pop
sti
add
mov
pop
jb
lods
addb
jp
jp
idivl
aam
or
lcall
xor
push
add
add
add
pop
clflush
or
mov
add
add
mov
nop
add
sub
push
xor
cmpsb
add
dec
jmp
add
mov
xor
hlt
add
test
mov
add
add
stc
push
cmc
out
add
mov
sarl
push
mov
loope
add
xor
gs
mov
ja
xor
inc
shl
sub
shll
jae
repz
icebp
ljmp
mov
out
add
mov
ljmp
add
mov
xchg
xchg
add
test
xchg
dec
je
int
pop
lods
jno
jl
out
xor
adc
xor
dec
pop
mov
add
mov
test
out
add
pop
repz
ret
sub
adc
pop
lods
xlat
aas
ret
cld
addb
pop
sub
test
mov
sbb
cmp
loop
dec
out
add
cmp
xor
outsl
pop
jge
add
inc
add
add
or
mov
adc
sub
and
add
add
je
call
add
add
mov
add
add
push
roll
add
jo
mov
add
repnz
pop
or
xchg
add
sarl
cmp
outsb
cs
cwtl
testb
ljmp
lret
dec
inc
add
lahf
adc
add
jmp
test
push
pop
cmpsl
sti
jg
mov
incb
sti
iret
repz
inc
add
out
cltd
adc
pop
sbb
add
jnp
je
cli
mov
or
lods
xor
rol
add
lret
mov
ja
mov
jecxz
cld
xchg
pop
movsl
dec
mov
movsl
cmp
add
lcall
loop
adcl
insl
bound
mov
add
fiaddl
or
pop
dec
pop
pusha
add
push
add
add
repz
mov
sub
add
mov
jnp
call
add
sub
dec
outsl
data16
mov
mov
add
nop
add
add
cmp
pop
in
mov
aam
add
in
test
movsl
mov
adc
testb
cmc
inc
add
jns
int3
lds
add
cld
popa
pop
rolb
push
add
lret
sahf
cli
jns
add
in
push
mov
enter
add
add
xchg
pop
in
mov
adc
add
jns
lds
sub
add
jo
aaa
mov
scas
pop
dec
ret
add
add
call
add
add
add
add
dec
int
mov
add
addb
call
stos
lahf
out
sbb
and
jbe
pop
inc
add
pop
cmp
mov
sbb
push
add
in
std
aad
add
or
data16
pop
xchg
stc
pop
and
loopne
cld
lea
std
add
mov
call
sub
jmp
add
add
add
jne
add
add
add
mov
cmpsl
popf
mov
push
out
jns
add
outsl
mov
add
mov
or
or
cmpl
add
rolb
mov
cld
rolb
push
add
mov
test
mov
or
lcall
fs
jge
sbb
add
or
or
add
movb
aaa
and
mov
add
aaa
cld
ja
add
dec
xchg
xchg
mov
xchg
add
adc
cmp
xchg
mov
fcmovu
cmpsb
add
push
add
jp
add
add
add
mov
sbb
test
enter
jl
push
or
dec
push
arpl
popa
sahf
push
out
xor
fisubrs
ljmp
stos
clc
adc
push
add
mov
aad
push
add
add
dec
xchg
add
add
add
push
add
add
add
je
xchg
pop
clc
push
insb
xchg
add
add
mov
add
iret
sub
rolb
loope
or
add
testb
push
shrl
mov
push
mov
int3
inc
add
add
add
or
lea
fiaddl
add
bound
mov
mov
add
add
add
leave
jo
clc
xchg
add
push
adc
enter
add
mov
lcall
jns
test
jb
jle
add
mov
add
add
jbe
sub
xchg
add
mov
mov
leave
push
aaa
test
add
pop
movb
adc
add
add
add
add
or
add
mov
push
add
addb
add
mov
sub
stos
fstpt
add
jmp
icebp
sbb
push
add
push
xor
push
fbstp
add
lcall
add
add
or
jbe
mov
dec
or
mov
add
add
add
xchg
rol
imul
leave
add
sbb
stos
mov
imul
imul
cmp
popa
or
hlt
add
lret
cmp
add
fcoml
add
push
push
mov
mov
addb
add
ret
out
sub
push
add
loopne
add
push
add
sbb
jp
add
add
cmpsb
add
call
adc
add
mov
add
mov
xor
stos
aam
mov
add
daa
popa
ret
cmp
lret
fcomi
add
scas
cld
movsb
add
dec
lods
sbb
mov
push
sbb
xor
add
and
mov
outsl
xor
enter
adc
mov
push
out
scas
mov
es
xor
jmp
pop
pop
adc
iret
lret
dec
fisubl
add
and
mov
sbb
lcall
test
lock
jmp
lods
jo
mov
xorl
add
add
add
mov
loope
add
movb
cmpsl
ja
in
inc
add
xchg
and
mov
cmp
sbb
add
jnp
cs
adc
repz
ljmp
ret
add
cmpsl
lret
mov
imul
int
mov
xchg
adc
inc
add
sahf
fcomps
fld
into
cmc
jo
cmc
jecxz
add
push
add
sbb
fsubrl
xor
add
add
loopne
fsubrl
test
addb
cmp
in
cmp
add
adc
pusha
add
jae
add
dec
das
aas
lods
aad
mov
add
fisubrl
add
push
xlat
aad
push
add
add
add
add
test
add
add
mov
aaa
dec
rolb
mov
and
pop
scas
adcl
sbb
mov
pop
icebp
push
add
aaa
mov
adc
lea
les
data16
fwait
mov
xor
inc
add
out
test
hlt
add
add
cld
inc
enter
fldl
mov
add
outsb
int3
fiadds
or
rcl
add
add
add
frstor
data16
js
mov
popa
mov
cmp
add
adc
rolb
mov
pop
dec
mov
xorl
add
mov
xchg
add
mov
add
xlat
nop
add
add
xor
fnstsw
test
inc
mov
add
add
into
insl
inc
add
jno
inc
add
add
mov
add
mov
in
ja
add
mov
ds
dec
and
mov
dec
and
mov
cli
add
loope
add
sbb
fwait
cwtl
aad
and
js
roll
jne
mov
jne,pt
add
xor
test
and
add
jg
aas
idiv
jl
pushf
das
adc
test
out
cwtl
dec
mov
and
test
xor
cli
jns
add
add
add
add
or
add
pushl
add
add
jp
shll
dec
mov
inc
add
mov
aaa
mov
add
dec
fldcw
dec
mov
mov
push
test
outsl
adc
sahf
mov
sbb
add
add
add
cmovs
xchg
rolb
rcll
mov
fisubrs
jg
adc
push
je
sbb
and
mov
arpl
pop
cmp
je
aaa
and
mov
icebp
aam
xchg
mov
dec
daa
stc
jae
and
add
lds
jg
out
mov
jnp
add
push
lods
cltd
cmovne
sub
dec
in
int3
mov
add
add
out
and
test
fabs
icebp
in
daa
data16
add
scas
cmp
ret
call
inc
add
scas
jl
fmull
jl
mov
add
add
xor
fnstcw
add
add
fisttpl
mov
mov
or
add
lcall
add
mov
add
mov
lods
imul
loop
movsb
add
add
mov
push
loope
dec
jmp
xchg
add
je
mov
mov
cmp
mov
ds
pop
leave
push
add
add
jl
add
push
add
in
pop
roll
sbb
jae
cli
jno
add
and
movb
sbb
xchg
add
and
add
mov
sub
fisttpl
fwait
pop
fisubrs
mov
push
cmp
in
add
and
mov
mov
out
insl
xor
sahf
stos
enter
and
pop
mov
mov
and
add
test
jmp
movb
add
sbb
xchg
ffree
mov
jae
int
jp
xchg
add
add
xor
add
insl
fnsave
add
dec
add
sub
add
mov
add
inc
pop
repz
pop
outsb
push
add
or
add
test
add
mov
imul
int3
cmp
out
xor
or
xchg
lods
nop
add
jns
stos
outsl
mov
stc
mov
add
daa
jmp
sbb
xor
fwait
pop
add
jae
push
add
add
nop
add
add
scas
and
xchg
bound
mov
mov
add
add
inc
add
add
push
mov
frstor
or
enter
add
mov
add
imul
jbe
xchg
jp
mov
add
pop
sbb
add
xor
aas
inc
add
mov
adc
add
add
arpl
mov
push
add
pop
jmp
push
add
mov
mov
mov
das
addb
add
pop
xor
mov
loope
or
icebp
xor
pop
mov
add
iret
int3
scas
leave
loop
into
pop
out
and
sub
mov
pop
xor
mov
mov
mov
mov
add
add
adc
add
add
add
add
and
add
mov
add
jl
and
mov
in
mov
sbb
mov
add
add
push
add
add
aaa
call
fisubrs
shll
lock
push
mov
add
add
mov
add
int
xor
jb
ret
add
mov
lea
add
xor
data16
push
sub
gs
add
push
jbe
in
push
popa
mov
clc
cs
popa
rdmsr
add
add
aam
sbb
sti
aaa
loopne
inc
add
iret
push
pop
cmpsl
movsl
inc
add
mov
negl
mov
dec
mov
pop
push
add
add
scas
pop
jo
push
add
push
adc
add
xchg
sub
push
add
add
sar
pusha
add
mov
add
or
mov
nop
add
add
pop
add
add
std
push
add
dec
inc
jns
test
sub
jae
dec
cmc
jp
pop
sahf
test
popl
or
sti
movb
inc
add
mov
nop
add
addr16
faddp
mov
sbb
add
mov
mov
sub
add
add
lret
pop
mov
out
jg
inc
inc
add
xchg
fxch
cmpsl
xchg
cmc
xchg
add
add
outsb
sti
outsl
enter
jb
scas
xchg
loop
or
sbb
add
ret
clc
pop
scas
hlt
add
add
add
add
fimull
mov
mov
pop
repz
rolb
mov
jp
add
dec
loope
aam
das
adc
fstl
data16
jbe
or
xor
cwtl
cmpsb
add
pop
push
fsubr
add
mov
and
mov
stos
gs
mov
mov
sub
lods
mov
fsubr
mov
mov
loopne
fucomi
add
add
pop
fsubrl
add
pop
fdiv
cmp
pop
dec
mov
xor
xchg
add
lock
and
scas
mov
sub
add
add
mov
out
std
jo
xor
and
add
xchg
add
mov
testb
aaa
repnz
out
jle
add
xchg
data16
je
lahf
mov
scas
addb
mov
add
add
outsb
inc
add
in
xchg
add
add
add
je
cwtl
add
js
shl
in
dec
push
add
push
add
or
movsl
les
push
add
add
mov
add
add
call
je
negl
mov
or
enter
and
shl
push
add
pop
icebp
movsl
jne
add
add
add
add
mov
add
imull
mov
mov
hlt
add
add
pop
xchg
add
outsl
cmp
push
mov
pop
mov
fistpll
je
xchg
test
fcmovu
testb
mov
add
ucomiss
add
jns
add
pop
xchg
xchg
xchg
inc
add
sub
jp
add
pop
fimuls
in
xlat
lahf
add
mov
shl
add
jnp
add
add
mov
adc
cmpsb
add
mov
add
adc
adc
sahf
xor
xchg
mov
jb
add
loopne
jbe
pushf
ja
push
add
mov
xchg
add
mov
repnz
enter
add
add
sub
or
sub
cs
imul
add
add
sbb
into
push
pop
sbb
add
adc
stos
xor
add
addb
jmp
add
rolb
int3
data16
add
add
inc
mov
addr16
push
add
add
aaa
mov
add
xor
mov
mov
jmp
popa
and
add
inc
xchg
add
inc
add
sub
jbe
testb
pushf
bound
mov
xchg
loope
add
mov
xchg
push
rolb
call
sti
and
pop
in
int
pop
jp
add
push
fistps
pop
push
add
mov
sbb
jno
and
test
lret
bound
mov
into
or
fwait
jmp
xchg
shll
mov
add
add
ja
mov
leave
inc
xchg
imul
cld
cltd
dec
sbb
fmul
aam
push
addb
add
aam
xchg
arpl
inc
cmp
add
add
outsb
cwtl
mov
add
mov
stos
mov
test
hlt
add
lods
push
add
xchg
or
pop
into
xchg
lds
add
sub
inc
in
stos
bound
mov
add
add
add
mov
imul
jge
sbb
jb
testb
add
add
loope
icebp
mov
data16
push
out
stc
adc
pop
push
lea
add
cli
pop
jne
add
jge
ljmp
stc
out
fmulp
call
xchg
add
stos
scas
sub
mov
inc
add
icebp
stos
mov
xchg
jle
xor
pop
fwait
inc
rolb
sbb
fstl
ljmp
and
jbe
clc
hlt
add
add
add
mov
add
nop
add
jno
imul
addl
add
std
inc
rolb
out
ret
jo
add
stc
mov
cmp
lds
inc
xchg
aaa
data16
xchg
mov
addb
add
lds
sub
ja
imul
fsts
mov
sub
mov
push
clc
mov
jp
push
mov
cmp
add
daa
popa
lods
aad
insb
push
or
add
and
into
xchg
add
add
cs
mov
or
add
and
mov
addb
test
jge
add
add
and
stos
addb
add
repz
in
lcall
add
dec
add
pop
testb
add
ret
push
add
in
rolb
jo
loopne
dec
sbb
inc
push
js
add
sbb
cmp
or
cmc
adc
add
add
mov
xor
aam
lods
add
mov
call
pop
stos
stc
push
add
add
lods
and
jge
cmp
sub
xor
add
mov
cltd
xchg
add
adc
mov
sbb
mov
jl
inc
add
xchg
jns
jp
add
mov
add
add
mov
xor
aaa
mov
add
mov
add
add
mov
in
or
add
xchg
add
mov
call
aaa
pop
js
add
dec
aam
addb
add
add
mov
add
xchg
not
add
clc
dec
jl
addb
pop
add
push
add
cld
xchg
enter
pop
push
add
inc
ja
fbld
cltd
mov
or
mov
and
mov
or
adc
push
stc
lret
je
mov
add
lea
inc
add
add
jg
faddl
add
xor
jle
pop
jb
mov
insb
xor
fistl
sub
add
push
imul
cli
fmul
sbb
and
mov
add
add
cli
rolb
cltd
daa
ficoms
shll
mov
cmp
stos
outsl
mov
push
imul
data16
fwait
mov
movb
add
jecxz
add
scas
sub
add
adc
push
add
sbb
repnz
add
push
add
add
cmp
dec
pop
cmp
nop
add
inc
add
jbe
jle
add
add
push
pusha
add
in
dec
ljmp
incb
mov
pop
and
mov
xchg
inc
dec
movsb
add
fildll
xor
sub
jge
add
push
cwtl
ret
push
jns
fs
pop
cmp
xor
idivl
cmp
inc
sbb
fdivrl
adc
outsl
movsb
add
add
cli
inc
add
mov
xor
test
add
stc
mov
add
mov
add
add
add
add
int
add
movsb
add
inc
add
gs
adc
add
xor
sarl
inc
jp
leave
stos
stc
push
pop
cli
cmp
mov
vpcmpeqb
adc
js
loope
add
push
add
mov
pop
push
add
movsb
add
add
add
sub
xor
push
add
jne
push
dec
jecxz
adc
daa
sbb
add
ljmp
add
add
sub
mov
ret
mov
mov
lods
pop
sub
sti
popf
sub
add
xor
mov
decb
and
mov
dec
movsb
add
out
jge
add
mov
pop
lcall
mov
add
adc
mov
push
add
add
add
bound
mov
mov
add
add
adc
loope
add
pop
aad
call
mov
push
add
outsl
xor
leave
xchg
add
inc
and
jge
loopne
pop
push
add
xchg
add
test
push
jp
ljmp
call
int
rorl
push
add
loop
int3
mov
push
add
test
loopne
sub
jecxz
push
add
or
sbb
lcall
jg
xchg
push
dec
cmpsb
add
inc
add
dec
mov
mov
dec
push
add
testl
movsb
add
hlt
add
cmp
and
jl
mov
add
cltd
jbe
xchg
insl
les
nop
add
mov
sbb
cld
add
je
addb
add
mov
sub
lret
adc
movb
add
cltd
xchg
add
into
xor
push
add
pop
out
aas
inc
add
pop
ret
stc
hlt
add
push
cwtl
aaa
jb
add
dec
and
mov
inc
pop
mov
cmp
jmp
pop
add
mov
add
nop
add
movsb
add
and
mov
insl
xchg
int3
testl
jge
sbb
jno
xchg
add
jno
add
xchg
add
or
xor
xor
pusha
add
leave
js
jb
add
pushf
pop
sub
pop
rolb
xor
rolb
add
xor
add
arpl
je
add
ret
ret
fdivrl
xchg
add
jecxz
cltd
cli
inc
add
cld
stos
addr16
sub
pop
test
push
or
add
pop
jo
xor
lods
loopne
cmp
inc
outsb
imul
rcrl
add
and
dec
rcrl
enter
add
add
movsl
inc
add
mov
fwait
inc
mov
in
and
mov
repnz
out
lret
add
push
add
add
mov
mov
mov
pusha
add
xlat
jmp
or
add
out
add
scas
mov
add
add
cld
jge
pop
popf
sti
testl
test
pop
jge
adc
add
iret
and
pop
jge,pn
add
add
cmpsl
adc
inc
add
mov
inc
lret
outsl
test
add
add
add
leave
xchg
add
data16
push
add
xor
adc
hlt
add
pop
inc
jmp
add
xor
push
add
movsl
data16
add
add
in
fmuls
mov
rcll
add
add
sbb
mov
xchg
inc
add
aas
sub
imul
add
and
mov
js
add
add
repnz
push
mov
add
nop
add
mull
add
add
jbe
hlt
add
add
add
and
ljmp
add
or
jne
add
sahf
lock
mov
dec
cmp
movb
add
add
test
xchg
xor
mov
add
rolb
adc
mov
cli
jb
bswap
mov
movsl
into
mov
popa
test
enter
clc
add
imul
fs
mov
or
movsb
add
sbb
add
push
add
enter
and
movb
add
fisubrs
add
das
into
sbb
cltd
ds
add
or
pop
inc
add
dec
jnp
mov
mov
push
add
add
add
inc
add
mov
add
mov
inc
add
cltd
cmc
js
mov
inc
add
and
icebp
imul
repz
cli
stos
data16
cwtl
gs
add
stos
push
add
aad
out
push
add
outsb
pop
pop
scas
dec
xchg
stos
or
inc
add
movl
arpl
xchg
lret
or
push
add
dec
cmc
sub
push
adc
loopne
push
aam
addb
add
outsb
loope
daa
call
xchg
inc
add
sub
sbb
add
cmp
clc
sbb
mov
out
insl
adc
sbb
movsl
push
add
add
adc
sub
mov
int
add
pop
in
int
add
sub
add
xor
jbe
push
add
lret
and
mov
add
mov
pop
les
add
mov
mov
mov
ret
mov
loop
dec
sbb
push
stos
bndldx
add
int
movsb
add
inc
xchg
dec
push
pop
fsubrp
rcrl
aam
bound
mov
repnz
stc
dec
cmpsl
push
add
mov
add
sti
std
or
add
inc
shll
or
or
mov
mov
lret
add
sahf
divl
add
movl
insb
pop
ja
testl
add
add
and
insl
iret
add
lret
outsb
push
sahf
insb
sub
addps
add
icebp
mov
mov
outsl
mov
add
ret
push
scas
push
movb
add
fcomip
add
add
add
test
add
and
mov
inc
add
or
push
add
pop
sbb
dec
mov
mov
je
pop
and
lret
jo
or
mov
jp
daa
or
leave
lahf
dec
insl
clc
mov
push
add
lods
dec
or
xor
fists
sub
xchg
cmp
or
add
add
add
add
into
sbb
add
imul
lahf
jmp
add
addb
test
cmp
add
rcl
add
mov
mov
das
mov
rolb
xchg
cmp
cltd
mov
addb
add
jae
add
mov
inc
mov
mov
add
arpl
xor
bound
mov
xchg
in
push
add
pop
shll
pusha
add
mov
add
push
add
add
add
add
push
mov
lcall
and
mov
add
dec
mov
out
popa
push
add
inc
add
stos
fiadds
xor
cmp
das
mov
test
add
add
add
add
mov
stos
jmp
mov
popf
out
jns
out
lahf
sub
std
jmp
jae
mov
sbb
add
add
int3
testb
pop
lret
mov
fstl
mov
add
lea
mov
xchg
add
add
gs
add
add
mov
and
pop
xor
scas
mov
pxor
add
pop
jecxz
mov
adc
cmpsl
into
sub
adc
add
mov
add
push
add
add
dec
mov
in
mov
inc
cmp
add
add
mov
xchg
add
sub
add
sbb
xor
dec
pop
or
sbb
incb
xchg
sti
mov
in
push
mov
mov
std
inc
add
dec
adc
imul
push
push
bound
mov
mov
lret
fwait
notl
testb
xchg
jns
cmpsl
lea
outsb
xchg
out
in
xchg
add
pop
inc
cmp
sbb
je
fs
insb
or
pop
sar
in
mov
mov
inc
add
add
fisubrs
add
and
pop
ret
out
and
add
sub
addr16
or
mov
xor
call
sub
add
pop
dec
and
mov
lods
add
jns
cmp
and
mov
test
enter
xlat
inc
jne
add
rolb
rolb
das
jno
addb
jl
stos
data16
add
sbb
mov
mov
in
sub
int
adc
jnp
sbb
cltd
or
push
add
testb
add
add
mov
pusha
add
add
add
add
add
enter
add
lcall
mov
and
add
mov
out
xchg
add
xor
clc
push
add
add
add
add
mov
sub
add
xor
add
insb
add
mov
add
mov
add
jle
pusha
add
add
rolb
add
pop
int3
outsl
out
inc
add
adcl
mov
xor
leave
mov
call
out
fnstenv
xchg
add
outsl
xor
add
repz
add
daa
les
push
add
fwait
rorl
push
add
test
aam
fisubs
jo
cmp
addb
add
sub
add
add
add
add
add
mov
xchg
roll
testb
xor
hlt
add
loope
push
add
inc
loopne
movsl
pop
inc
add
add
adc
add
jp
jp
mov
xor
inc
add
add
mov
add
mov
mov
push
add
pop
rolb
add
push
add
xor
pop
fbstp
and
mov
in
mov
mov
daa
jnp
pop
test
mov
fimull
outsb
out
outsb
pop
xor
jae
imul
or
add
aad
add
dec
push
imul
or
nop
add
out
xor
mov
test
add
cmp
cmpl
add
sbb
pop
jle
add
repnz
add
xchg
add
loope
cmpsl
jecxz
dec
and
mov
inc
add
popf
jo
loop
loopne
and
mov
push
inc
jmp
and
mov
lds
aaa
cmpsb
add
ret
cld
cwtl
sahf
or
stos
outsl
inc
dec
inc
add
add
jo
and
ret
mov
arpl
bound
mov
hlt
add
cmc
fisttpl
adc
add
mov
fwait
cmc
stc
int3
xor
jne
pop
scas
mull
add
mov
outsb
lcall
roll
add
mov
sub
mov
ret
aas
adc
fidivl
jl
add
add
lods
mov
ljmp
add
cld
fsubrp
js
scas
mov
imull
insl
mov
adc
in
cmp
scas
decb
data16
dec
je
pushf
push
addb
icebp
mov
xchg
cltd
lods
mov
add
cmovo
mov
add
cwtl
aam
sbb
jae
or
mov
add
std
mov
sbb
mov
stc
fisubs
pop
adc
xor
mov
xor
add
mov
inc
int
push
add
sub
or
pop
in
add
inc
add
decl
add
mov
add
pop
xor
fistpll
repz
pop
arpl
xchg
add
ds
out
loop
and
bound
mov
mov
cltd
lea
or
xor
and
add
add
mov
add
add
inc
cmp
mov
sbb
rolb
dec
aam
pop
cmpsl
popa
clc
mov
add
inc
add
add
add
add
add
adc
ljmp
pop
sbb
cmc
pop
cmp
mov
xchg
dec
leave
push
add
pop
fwait
jno
cmp
add
sub
imul
mov
sbb
pop
std
cs
cmc
loope
add
in
fmuls
add
cli
test
mov
adc
lock
push
add
imul
add
daa
lods
fidivrs
add
add
jae
je
pop
cmp
and
enter
cld
and
mov
mov
call
add
push
mov
add
and
mov
nop
add
int
popa
je
es
sub
and
hlt
add
lock
sbbl
rolb
add
leave
stc
lret
mov
adc
pop
jge
push
addb
insl
rolb
push
rolb
add
fidivl
mov
mov
rolb
mov
dec
daa
dec
data16
cmp
lock
dec
nop
add
add
dec
rcr
pop
push
add
in
mov
mov
iret
dec
cmp
addr16
popa
data16
sub
add
cs
sbb
cmp
jns
sbb
add
fbstp
xchg
jle
add
shll
mov
pop
mov
stos
pop
or
adc
jl
fstpl
repnz
lock
out
or
pop
les
push
rorl
icebp
test
mov
mov
testb
add
cmpsl
ja
icebp
and
stc
fcmovnbe
pop
scas
negl
inc
add
adc
pop
data16
movb
add
hlt
add
jle
mov
shll
fcoms
repz
add
dec
and
add
inc
add
scas
mov
xchg
add
or
arpl
mov
sub
sbb
and
mov
add
add
mov
addr16
add
add
add
add
mov
mov
jle
add
add
int3
movsb
add
mov
testl
add
out
mov
jns
jle
je
mov
sbb
testb
je
test
stc
lock
sub
add
les
jle
add
out
dec
mov
arpl
add
mov
add
je
fistpl
jmp
andl
test
adc
data16
je
rorl
mov
addr16
adc
xchg
aaa
data16
dec
mov
call
add
sub
add
in
test
ljmp
add
add
jle
sub
add
add
add
lea
and
mov
jbe
jmp
jns
int3
fdivr
cmp
xor
jmp
adc
add
mov
push
add
adc
xchg
add
das
mov
pop
inc
add
inc
mov
shl
or
mov
xchg
add
sbb
mov
add
aaa
add
add
push
fsubrl
movb
add
mov
add
jge
rorl
xor
sub
mov
dec
jl
mov
or
fs
add
push
rcr
cmp
call
into
xor
cwtl
inc
and
mov
test
stos
dec
cmp
add
std
xor
ret
mov
out
pop
xchg
jg
add
stc
fwait
and
add
out
loope
mov
sbb
je
and
mov
sbb
add
in
sbb
les
shll
sub
add
cmpsb
add
add
fcompl
rorl
add
scas
lods
add
add
nop
add
inc
xchg
dec
jecxz
flds
sahf
cld
push
jo
ja
clc
jg
cmc
pop
repz
shll
dec
cmp
fimull
xchg
add
mov
icebp
mov
je
sub
lods
out
cmp
out
inc
add
scas
cmpsb
add
bound
mov
jmp
mov
add
scas
scas
sbb
cld
js
test
push
fildll
pop
ds
mov
inc
add
mov
fistpl
cmp
data16
subl
insl
xchg
add
add
stos
fwait
pop
or
and
add
sub
add
jo
call
addb
sbb
add
movsl
rolb
mov
add
add
jecxz
mov
xor
adc
add
xor
mov
jp
add
pusha
add
add
add
add
pusha
add
add
push
adc
out
jle
dec
push
add
les
sahf
addb
push
inc
add
add
push
add
add
add
mov
inc
outsl
sub
add
inc
add
shrl
mov
add
in
push
add
xor
cmp
add
add
daa
xchg
add
mov
test
jg
push
add
sbb
ljmp
mov
push
sbb
and
mov
add
add
sahf
loopne
dec
ja
add
das
das
add
mov
add
stc
aam
cmp
lods
push
add
add
add
sbb
mov
cmp
adc
push
add
leave
xorl
push
add
mov
repnz
mov
data16
stc
cmc
cmp
add
add
fisubrl
push
dec
in
insb
mov
les
cmc
inc
sbb
xchg
loop
shrl
ret
xchg
add
movsb
add
sbb
inc
scas
adc
or
icebp
test
out
and
jl
mov
jp
orl
jge
add
leave
cmp
rorl
sti
ds
dec
inc
add
cmp
add
add
sbb
outsb
sbb
add
add
arpl
icebp
mov
decb
fsubl
lcall
js
add
add
add
arpl
jge
adc
ja
in
adc
mov
leave
push
push
add
or
jge
xor
in
decl
jb
in
int3
enter
push
jbe
push
add
cmp
adc
xor
jb
sub
test
add
fcmovu
pop
mov
or
lods
call
mov
jns
test
xchg
add
mov
pop
add
mov
test
and
mov
or
mov
xchg
add
push
hlt
add
jecxz
add
outsb
pop
xlat
rolb
jle
movsb
add
ret
pop
cmpsl
mov
mov
test
lods
push
add
xchg
add
jnp
cmpsb
add
add
addb
in
xchg
rcll
pop
ljmp
add
add
add
mov
add
pop
add
mov
mov
add
add
add
push
add
jnp
add
dec
xor
or
lret
data16
sbb
cmc
push
add
add
jne
cli
leave
test
int
dec
dec
cmp
add
xchg
add
add
js
dec
loopne
test
add
cwtl
push
add
movsb
add
jg
add
stos
pop
mov
add
mov
mov
push
lcall
add
imul
sbb
jo
lds
add
popf
jb
shll
test
ret
sub
add
loop
ret
mov
test
rolb
and
mov
popa
stos
sbb
lret
jp
lock
cs
adcl
add
mov
jmp
lods
push
add
add
sahf
jo
mov
mov
stos
mov
mov
jmp
mov
stos
add
leave
sbb
push
add
int3
xchg
mov
add
sub
aaa
pop
sub
dec
push
add
add
add
add
add
or
cmp
xor
in
dec
mov
adc
daa
fwait
sbb
or
xchg
jle
sahf
lods
push
add
aad
and
mov
lds
mov
pushf
push
roll
out
js
mov
movsl
adc
icebp
add
mov
movsl
pop
mov
add
subl
sbb
pop
lods
je
sbb
add
jbe
inc
jmp
add
adc
js
add
add
jmp
hlt
add
jle
mov
mov
mov
sub
ss
lock
imul
add
sub
add
add
mov
in
sub
ja
add
ljmp
add
outsl
cmp
add
rorl
out
in
addl
mov
add
add
mov
mov
mov
sub
add
scas
xchg
push
add
sub
out
cmp
pop
dec
dec
cmp
and
mov
jmp
add
lret
jae
ds
or
out
movsb
add
hlt
add
subl
addb
lea
pop
jns
add
stos
mov
xchg
add
push
outsb
xor
fimuls
jns
emms
out
xchg
add
or
mov
iret
mov
sbb
push
add
mov
push
loop
std
jnp
mov
mov
and
add
add
ja
mov
push
add
js
sub
add
mov
mov
xchg
xchg
or
add
push
add
and
decb
iret
dec
mov
pop
aaa
xor
lock
mov
add
cmp
pop
add
inc
push
je
push
add
and
mov
push
das
jo
push
insl
addb
cmp
sbb
pop
xchg
stos
insb
adc
pushf
je
rolb
out
fbstp
xor
fldenv
inc
xchg
test
xchg
add
repnz
add
fisttps
mov
inc
rolb
xor
repnz
adc
testb
add
add
add
mov
inc
popf
pop
movsb
add
stos
mov
ljmp
lahf
inc
lcall
gs
fwait
xor
ja
lcall
add
inc
ljmp
xchg
push
add
add
mov
add
cwtl
cmp
lahf
cltd
jmp
add
add
add
aad
aaa
jns
and
add
cmp
xor
pop
enter
mov
es
or
aad
xchg
jg
add
jg
mov
cmp
aad
add
add
pop
dec
je
pop
mov
movb
les
cmpsb
add
add
add
mov
imul
add
sub
add
mov
repz
fsub
cmpsb
add
add
inc
add
or
add
add
stos
jecxz
dec
sbb
into
stos
or
mov
repz
mov
push
add
add
mov
push
popf
movsl
data16
into
xlat
int
sbb
fsubr
cltd
xchg
sub
jmp
jg
add
sub
sub
int
std
das
pop
add
popa
rolb
or
stc
pop
adc
cmp
pop
sbb
shrl
and
jne
add
ret
out
add
add
mov
add
jb
xor
add
add
sbb
add
add
aam
xchg
mov
inc
bound
mov
stos
cmp
imul
adc
pusha
add
inc
add
test
lds
mov
imul
cmp
lcall
and
jmp
xchg
xchg
pop
cli
movb
out
iret
pop
xchg
dec
sub
lahf
outsl
push
sub
out
ret
add
add
add
inc
pop
or
add
cli
xchg
pop
call
insl
outsb
int3
jecxz
mov
add
jg
movsb
add
imul
add
outsl
or
gs
add
add
jae
or
cmp
mov
add
lcall
test
sahf
popf
repz
mov
push
add
add
in
jl
int
add
xchg
xor
icebp
mov
xlat
pop
fwait
add
add
insl
pop
pop
rolb
in
add
mov
jo
movsl
jo
stos
cmpsb
add
add
sub
mov
call
add
jmp
sbb
add
push
xor
jge
inc
cli
inc
add
mov
jg
sub
add
mov
mov
daa
inc
add
out
fdiv
popa
aaa
push
add
add
pop
adc
cmp
cmp
mov
jne
add
cvttps2pi
stc
cmp
fisubl
add
jg
out
out
push
add
aad
lret
cmc
adc
add
jl
sbb
add
dec
push
add
add
mov
aad
add
mov
add
arpl
pop
pop
mov
arpl
add
pop
pop
imul
add
add
addb
add
and
mov
add
fisubrl
mov
sbb
and
cmp
lret
push
xchg
stc
movsl
popf
lods
or
inc
adc
movsl
flds
add
mov
insl
dec
cmp
dec
mov
add
fnstcw
in
inc
or
stos
mov
add
dec
mov
lea
add
cmp
mov
add
mov
mov
fildll
cmp
add
icebp
int
mov
jno
add
xchg
rolb
scas
jae
xor
roll
or
push
xchg
mov
adc
push
adc
push
fst
push
add
add
nop
add
rcrl
dec
adc
dec
in
or
addb
dec
les
fldcw
adc
add
add
jmp
sbb
cmp
add
lcall
or
push
add
mov
add
sbb
les
fisubrs
movsb
add
add
add
in
inc
add
xor
insb
test
add
add
outsb
mov
mov
add
cmp
add
dec
jne
stos
in
lea
or
mov
addb
add
andl
popf
jns
add
inc
add
and
adc
inc
add
inc
xchg
add
add
inc
add
add
add
pushf
inc
and
mov
jno
in
mov
decl
fmul
cld
mov
popa
xor
push
add
out
fiaddl
add
pop
and
mov
cli
adc
xchg
test
lods
sbb
loopne
in
mov
add
add
add
and
mov
mov
add
les
fsubl
add
clc
addb
addr16
add
clc
in
adc
add
mov
inc
add
dec
lcall
add
mov
ret
push
add
add
add
cmp
add
rolb
insl
push
add
or
xchg
add
add
inc
add
fwait
dec
push
add
in
addb
add
add
es
add
mov
add
cwtl
lods
fisttpl
loopne
shll
mov
iret
in
aad
pop
ret
ret
sub
and
add
pop
xchg
add
pop
rolb
xor
lret
cwtl
divl
add
push
add
bound
mov
add
adc
mov
add
add
cmc
test
xor
or
inc
fwait
cmp
inc
add
lods
add
mov
sub
dec
push
leave
mov
jnp
dec
cmp
add
add
add
pusha
add
add
add
addb
xor
mov
lahf
aam
xchg
stc
test
adc
addb
add
jl
scas
add
adc
sub
xor
cmc
push
add
mov
push
aaa
cmp
add
push
add
testb
inc
enter
hlt
add
ret
or
lock
pushf
sub
add
jle
or
data16
mov
inc
add
lods
push
mov
movb
dec
daa
jns
shr
popa
dec
loop
insl
ret
xor
jmp
push
add
int3
sbb
add
repz
add
adc
movb
add
add
add
pop
or
add
lods
cmp
fadd
add
mov
pushf
push
mov
negl
repz
aam
jae
sub
add
add
xchg
add
cmpsl
rorl
mov
jae
sub
mov
add
push
add
testl
sbb
push
add
adc
imul
xchg
jno
add
cmp
out
jo
nop
add
cmp
pop
mov
add
add
jecxz
add
push
or
add
mov
add
imul
xor
les
ds
fsqrt
jne
xor
mov
cmp
add
into
push
push
add
fadds
push
ds
add
push
and
mov
add
sub
and
sbb
add
repz
add
add
add
inc
pop
in
fwait
sbb
decb
xchg
pop
dec
stc
out
add
add
insb
int
mov
add
add
add
adc
scas
addb
push
add
xchg
add
add
outsb
pop
adc
insl
inc
out
scas
out
cmp
add
movsl
sbb
popa
jp
insl
push
dec
add
add
outsl
into
popf
push
nop
add
add
loop
data16
clc
inc
add
mov
pcmpeqw
add
or
add
mov
and
popa
push
add
mov
mov
mov
inc
add
add
cmp
ja
sub
sbb
mov
add
mov
repnz
sub
add
jmp
or
jecxz
dec
dec
icebp
add
and
in
sbb
inc
add
decl
push
and
mov
jecxz
push
sub
inc
add
add
dec
sbb
cmp
inc
add
mov
cmp
push
imul
int3
lods
addr16
aaa
pop
xor
add
testb
int
in
mov
adc
insb
add
ret
push
cmp
add
rcrl
add
inc
add
add
loope
scas
xor
lds
popf
push
dec
pop
adc
add
pop
cld
lock
inc
or
and
mov
cmp
lods
pushf
add
clc
lcall
aad
outsb
out
outsl
mov
add
out
movsl
movsl
sub
add
xchg
aas
daa
mov
mov
imul
add
test
xchg
lds
lock
add
insl
aam
xchg
add
add
das
inc
add
mov
scas
add
mov
mull
lods
and
addb
inc
pop
cli
test
jle
cltd
cwtl
lret
lcall
sahf
popf
jns
add
jmp
sub
mov
rolb
icebp
jmp
and
mov
add
add
and
sar
nop
add
or
or
js
cmp
popf
push
add
add
mov
add
or
fwait
loopne
testb
pop
add
lahf
push
add
add
cwtl
cs
les
xchg
add
add
adc
outsb
popf
push
add
arpl
lods
mov
aam
jg
test
pusha
add
add
mov
xchg
dec
insl
fimuls
push
add
sub
jb
test
data16
test
add
push
jle
add
enter
sbb
lea
xlat
xor
stos
dec
into
sbb
pop
pop
and
mov
add
add
mov
add
hlt
add
dec
pusha
add
iret
jp
or
adc
and
or
es
push
out
mov
add
sub
pop
imul
push
testb
call
and
add
add
pop
push
add
add
add
jle
cltd
adc
add
sub
add
pop
gs
call
mov
push
add
add
mov
inc
add
xchg
cmpsl
mov
add
xchg
sub
lahf
sub
add
mov
rolb
xor
jp
push
add
imul
addb
jae
add
mov
sti
dec
mov
pop
adc
push
scas
andl
sub
sub
add
jge
add
xor
shll
add
adc
dec
out
add
add
lss
addb
add
add
in
out
in
sbb
addr16
lds
mov
adc
pop
stc
push
add
dec
aam
mov
xor
add
add
and
pop
les
test
sti
scas
xor
decb
add
cmp
pop
xchg
add
mov
mov
loopne
ret
add
mov
mov
cmpsl
lret
out
mov
aad
jmp
mov
lds
pop
sub
in
add
out
and
cmp
add
add
xchg
pop
adc
sub
add
xor
iret
pop
mov
adc
roll
lods
xchg
add
movsb
add
loope
movsb
add
add
and
lea
add
cmp
ret
xchg
add
dec
pusha
add
cmp
movsl
dec
jb
or
je
mov
aad
cmp
add
cmp
cmp
add
push
add
add
add
push
add
add
testb
lods
hlt
add
add
mov
andl
mov
add
xchg
daa
ret
pcmpeqd
pop
clc
sbb
add
dec
cwtl
mov
mov
fcmovb
add
fcomps
fnsave
add
add
add
inc
add
stos
jnp
add
mov
add
add
sub
aas
bound
mov
mov
mov
aaa
sbb
add
cmpl
add
add
add
dec
gs
ret
mov
fsubr
test
lret
nop
add
push
pop
arpl
mov
inc
add
mov
imul
add
add
stos
je
icebp
das
cs
dec
dec
insl
dec
lcall
cld
add
data16
dec
or
aas
push
add
push
push
add
add
ret
inc
add
lock
data16
sub
jno
adc
enter
add
cmpsb
add
push
ret
test
scas
add
adc
xor
push
add
add
mov
test
int3
outsb
and
outsl
imul
in
andl
push
add
add
sub
je
lods
xchg
int3
pop
in
aad
ss
add
lahf
mov
add
repnz
insl
in
cmp
adc
xchg
add
in
jecxz
push
adc
dec
pop
fsubrs
push
push
lahf
add
mov
add
pop
pop
das
xchg
add
decl
add
add
jmp
cli
pop
mov
add
add
mov
add
xor
dec
scas
push
and
ljmp
lret
push
add
popl
xchg
add
out
sbb
stos
test
and
mov
fwait
gs
add
jb
fdivr
aam
or
push
add
sbb
pop
hlt
add
es
sbb
add
clc
movsl
out
in
into
nop
add
add
sbb
mov
filds
fcomi
add
loop
repnz
mov
mov
pop
or
sbb
pop
std
imul
out
cmp
ret
xor
add
cmp
jmp
cs
lret
addr16
mov
add
jbe
sub
sub
add
cmpsl
mov
testb
add
imul
xchg
call
cmp
fs
add
add
push
ret
fidivl
add
add
add
stos
pop
iret
lock
add
dec
mov
push
aaa
or
sub
jecxz
mov
fildl
ret
add
mov
add
jnp
sub
daa
fdivrl
outsl
xorl
loope
sbb
add
bound
mov
jns
add
xchg
add
sub
add
add
add
loopne
shll
add
enter
pop
and
mov
add
add
add
arpl
sbb
mov
movb
clc
push
add
cmpsb
add
in
mov
add
cmp
mov
add
xor
push
xchg
and
data16
dec
mov
xor
int
fnstcw
add
add
outsb
ret
add
daa
cltd
pop
adc
add
daa
sub
add
fidivrs
dec
loopne
xor
push
add
add
pop
add
mov
add
add
imul
xchg
dec
lahf
ret
mov
sbb
decb
add
xchg
sbb
dec
inc
add
xor
mov
or
add
mov
cmp
add
add
sub
dec
add
xor
aas
ret
pop
out
xchg
mov
adc
popa
jg
add
cltd
inc
add
cli
cli
rolb
adc
ljmp
push
ret
xchg
je
mov
pop
mov
add
nop
add
add
mov
jmp
nop
add
or
xchg
or
inc
ret
pop
cmp
iret
movb
rolb
stc
pop
ja
jge
addb
mov
or
cmp
aam
in
jmp
mov
add
ret
sbb
mov
add
aaa
into
dec
pop
xchg
fcomp
mov
jge
push
add
mov
push
lods
mov
xchg
or
or
iret
or
cltd
pop
loopne
dec
mov
or
add
jmp
cli
xor
add
sub
add
jmp
adc
add
and
add
mov
notl
xchg
add
sbb
rolb
or
mov
add
cli
test
in
pop
test
sbb
mov
add
sub
mov
mov
test
add
or
jle
add
pushf
lods
fwait
add
mov
jne
xchg
add
add
pop
cmpl
xor
push
add
lret
std
lret
iret
out
outsl
data16
jns
add
jae
testb
pop
or
add
add
add
jge
ja
mov
mov
int3
icebp
push
add
cmp
sbb
cmpsl
cs
push
add
add
adc
add
addr16
fincstp
mov
adc
clc
je
outsl
std
repz
or
je
cmp
adc
fwait
mov
fdivp
add
mov
insb
xchg
add
add
int3
add
aaa
outsl
jg
xor
pop
push
ret
out
ficoms
mov
adc
add
add
pop
js
aas
mov
dec
bound
mov
cli
outsb
cltd
gs
add
pushf
in
dec
dec
pusha
add
out
pop
add
add
add
scas
sub
add
push
add
adc
add
icebp
cmp
dec
dec
sub
push
inc
lock
pop
inc
add
fcomps
and
mov
imul
insl
bswap
push
add
arpl
roll
mull
and
pop
or
add
mov
add
jge
add
mov
add
scas
stos
iret
mov
add
bound
mov
dec
popf
add
sub
dec
mov
cli
xchg
add
rolb
lock
jns
dec
mov
add
jl
out
xor
pushf
mov
add
push
add
add
stos
and
mov
push
add
add
and
pop
sub
fucomi
mov
dec
fsubrl
fdivrl
fimull
add
data16
gs
in
sbb
add
cltd
fistpl
inc
cmp
cwtl
xchg
mov
mov
add
add
mov
bound
mov
add
js
add
sbb
and
fsincos
or
jecxz
std
mov
cmc
lds
fcmovne
and
xor
cmp
pop
add
jb
nop
add
sbb
push
fsubs
add
add
sub
push
sahf
loopne
pop
pop
lahf
cmp
xchg
add
pushf
data16
out
in
clc
cmp
ja
cmpsl
mov
bound
mov
enter
adc
xor
dec
stos
data16
in
mov
addb
dec
sub
jecxz
dec
or
add
inc
add
inc
add
roll
xor
add
js
mov
addb
add
adc
pop
xchg
add
add
ljmp
test
add
push
add
bound
mov
add
add
call
aaa
xor
mov
test
lcall
mov
xchg
mov
cwtl
push
push
fldl
add
push
add
data16
add
inc
adc
insl
jle
add
sub
test
add
dec
stc
je
push
mov
int3
daa
pop
mov
add
stos
lods
in
xchg
sbb
fadd
add
add
mov
or
pop
mov
arpl
add
xchg
add
scas
jmp
add
mov
lahf
rolb
pop
pushl
or
add
ljmp
mov
inc
add
mov
test
add
mov
loopne
outsl
mov
loopne
sti
push
add
add
pop
addb
loope
cmp
enter
mov
je
jns
add
add
add
add
mov
scas
push
aas
stc
cmp
or
add
jnp
cmpsl
loop
pop
pusha
add
add
cmc
push
add
aad
xchg
in
out
mov
add
mov
ljmp
add
mov
stos
pop
jbe
bound
mov
imul
adc
add
mov
cmp
arpl
add
dec
mov
mov
popf
test
add
push
add
aad
add
roll
add
add
std
js
ret
inc
or
popa
or
les
lds
jmp
loope
pop
push
add
push
add
pop
std
scas
out
jl
mov
add
mov
ftst
add
addr16
data16
adc
push
add
addb
lods
fnstenv
roll
das
push
add
mov
add
sub
out
mov
repnz
mov
insl
in
repnz
movsb
add
movsb
add
fadds
add
add
jmp
add
add
add
add
test
gs
icebp
cmp
ljmp
add
add
in
int3
push
cmc
cli
push
add
fsubl
add
add
add
add
add
push
movsl
test
or
pop
jns
jb
pop
sbb
sti
ret
movsb
add
add
pop
loopne
sub
dec
loope
add
int
cmc
mov
loopne
cmp
push
push
pop
push
add
xor
jbe
add
jno
pop
xchg
scas
imul
cltd
out
fsubr
dec
cmp
cmp
dec
shll
lcall
not
add
or
add
xor
int3
data16
lock
sti
rolb
add
sbb
fcmovb
add
add
add
push
add
cmpsl
lods
xchg
push
add
movsl
lcall
cmp
jmp
add
add
add
mov
rorl
cmp
nop
add
dec
or
add
lds
add
cs
mov
sub
xchg
add
xor
mov
push
add
mov
data16
mov
cmc
dec
aam
fldt
add
sahf
iret
icebp
cmc
mov
pop
jge
pop
jl
fsub
push
dec
inc
and
mov
add
addb
pushf
out
pop
test
adc
push
add
add
add
pop
test
mul
add
xor
sub
pushf
loopne
xor
jmp
add
sbb
dec
pop
jnp
add
sbb
mov
arpl
add
add
shll
add
addb
mov
push
add
mov
jbe
dec
adc
lds
sub
add
mov
push
dec
addr16
addb
add
bound
mov
cmpsb
add
popf
nop
add
adc
daa
out
test
sub
add
mov
add
data16
fwait
movsb
add
int3
lahf
movb
cmp
jbe
sar
push
in
xchg
add
add
leave
pop
jecxz
adc
rolb
scas
hlt
add
testb
jae
add
outsb
mov
mov
iret
outsl
add
add
sahf
adc
dec
mov
add
in
dec
and
mov
sbb
and
sub
add
push
add
cld
orl
testb
dec
cmp
aas
pop
cli
rcll
add
repz
int
sbb
je
lret
stos
loop
jmp
dec
mov
adc
mov
xchg
add
sti
inc
cmp
test
filds
jnp
push
lea
add
add
add
or
pop
add
pop
mov
lock
push
add
icebp
mov
jne
bound
mov
pop
adc
add
add
add
fistl
dec
ljmp
add
testb
lods
imul
ficomps
stos
adc
xor
jmp
pop
sub
ret
add
lahf
sbb
add
add
add
sbb
roll
push
das
xor
add
push
add
add
cltd
inc
adc
movsb
add
add
les
inc
sub
mov
ja
add
sbb
add
push
xor
sbb
in
mov
cmpsb
add
inc
add
pop
int
fisttpl
add
ficoms
add
add
fnstenv
add
add
jns
mov
add
xlat
xchg
add
jae
insl
js
sbb
data16
inc
aas
jae
insl
xor
jge
add
in
inc
xlat
loop
mov
mov
jne
add
or
inc
add
xchg
add
pop
xchg
std
iret
pop
jp
add
mov
mov
sub
mov
mov
stos
scas
mov
movsl
je
xchg
add
mov
add
xchg
mov
add
pop
das
add
add
outsl
mov
mov
xchg
add
mov
add
addb
add
mov
xor
mov
addb
mov
add
push
sub
add
sahf
dec
jno
mov
add
scas
ret
fadds
add
xchg
add
lods
jmp
mov
enter
and
add
pop
cmp
outsl
popf
das
je
or
add
mov
testl
add
mov
test
rolb
xchg
add
sbb
add
stos
add
cmp
outsl
mov
or
dec
int3
adc
push
xchg
add
pop
and
mov
in
sub
add
daa
pusha
add
push
add
les
jecxz
add
add
add
mov
add
fwait
push
push
add
dec
testb
push
push
add
add
sti
lods
inc
outsl
jl
add
cmp
dec
cwtl
nop
add
xchg
add
jne
add
int
push
cmp
add
test
gs
sti
add
test
test
xor
pusha
add
dec
or
and
mov
add
xchg
add
mov
testb
pop
jg
rolb
add
bound
mov
jecxz
cmp
add
inc
add
mov
inc
pop
push
mov
xor
les
and
hlt
add
mov
add
cwtl
xchg
clc
sub
add
daa
mov
lcall
cmp
loop
and
mov
add
fildll
in
cmp
sub
data16
cmp
clc
or
outsl
sub
add
xchg
into
inc
jge
sub
dec
ja
rolb
sar
daa
lcall
decb
add
add
mov
add
xchg
addr16
ljmp
sbb
adc
sbb
add
fwait
es
add
xchg
movb
inc
imul
sbb
mov
add
xor
add
add
push
addb
sub
add
fsubr
mov
add
pop
ret
hlt
add
push
add
imul
mov
add
add
add
add
rolb
movsb
add
mov
mov
jg
mov
lret
jae
add
or
fisttps
clc
jle
add
add
mov
sub
add
mov
xchg
sub
aam
mov
inc
add
add
imul
push
mov
adc
lahf
sub
xchg
add
add
add
aad
notl
ret
add
fildl
fsubrs
jno
lock
test
icebp
cli
adc
outsl
jae
add
add
stos
push
add
inc
pushl
dec
add
xor
push
add
push
insb
xor
mov
cltd
push
inc
add
adc
push
jmp
sarl
mov
add
mov
add
inc
add
add
add
pop
sbb
popa
jb
cmpl
add
inc
add
andl
test
jae
mov
add
data16
mov
ret
jecxz
push
add
push
add
add
jne
and
lock
add
mov
faddl
add
and
rolb
lret
call
inc
add
add
dec
inc
add
xchg
jle
add
icebp
pusha
add
add
add
cmc
lahf
vmptrld
cltd
repz
add
jle
add
outsl
sahf
mov
push
iret
leave
jge
in
cwtl
jae
ret
add
add
