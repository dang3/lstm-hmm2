push
cmpsl
loopne
daa
test
mov
mov
loopne
and
movsl
loopne
jl
loopne
dec
movsl
loopne
shll
loopne
shll
mov
movsl
loopne
test
loopne
shlb
hlt
mov
loopne
lock
loopne
push
movsb
loopne
push
loopne
cltd
movsb
loopne
push
movsl
loopne
andb
mov
mov
loopne
pop
test
loopne
aas
mov
loopne
arpl
loopne
stos
mov
loopne
shll
loopne
jb
loopne
sbb
loopne
mov
movsb
loopne
xchg
movsb
loopne
movsl
loopne
mov
test
loopne
dec
test
mov
mov
loopne
xchg
movsl
loopne
adc
loopne
js
loopne
cmp
loopne
or
loopne
sbb
loopne
push
loopne
bt
mov
mov
loopne
shll
mov
cmpsb
loopne
mov
loopne
dec
test
loopne
and
loopne
mov
mov
loopne
test
movsb
loopne
jae
loopne
sbb
mov
loopne
sbb
test
mov
movsl
loopne
mov
loopne
loopne
shll
scas
movsl
loopne
js
loopne
inc
cmpsb
loopne
scas
mov
loopne
cmpsw
loopne
popf
cmpsb
loopne
addr16
sub
mov
cmpsb
loopne
movsl
movsb
loopne
mov
cmpsb
loopne
bound
loopne
mov
test
mov
cmpsb
loopne
jns
loopne
enter
xchg
cmpsb
loopne
jmp
loopne
xlat
cmpsl
loopne
mov
loopne
pop
mov
loopne
hlt
test
mov
test
loopne
pop
mov
loopne
hlt
cmpsl
loopne
pop
movsb
loopne
mov
loopne
add
mov
movsl
loopne
mulb
loopne
stos
mov
loopne
cwtl
test
mov
mov
loopne
push
movsl
loopne
ljmp
mov
cmpsb
loopne
lret
mov
loopne
andl
jns
loopne
data16
loopne
insb
cmpsl
loopne
push
mov
loopne
mov
test
mov
movsl
loopne
mov
mov
loopne
std
cmpsb
loopne
xchg
movsl
loopne
cmp
loopne
jbe
loopne
or
loopne
pop
test
mov
cmpsb
loopne
adc
loopne
js
loopne
sbb
loopne
test
mov
movsl
loopne
adc
loopne
andb
mov
movsl
loopne
adc
loopne
ret
mov
movsb
loopne
cmp
loopne
hlt
test
mov
mov
loopne
adc
mov
test
mov
mov
loopne
cmc
mov
loopne
and
loopne
hlt
mov
loopne
andb
mov
cmpsb
loopne
ja
loopne
cmc
mov
loopne
mov
loopne
add
loopne
pop
test
loopne
jmp
cmpsb
loopne
pop
test
mov
mov
loopne
add
loopne
pop
mov
loopne
pop
mov
loopne
fsubrs
loopne
add
loopne
dec
cmpsl
loopne
sbb
mov
loopne
xor
mov
loopne
pop
mov
loopne
xchg
cmpsl
loopne
and
test
loopne
add
loopne
pop
movsl
loopne
cmpsb
loopne
dec
movsb
loopne
sbb
mov
loopne
jmp
test
mov
movsl
loopne
mov
mov
loopne
es
mov
mov
loopne
mulb
loopne
xchg
mov
loopne
mov
mov
loopne
sbb
loopne
sbb
loopne
stos
movsb
loopne
enter
je
loopne
fldenv
loopne
loopne
xor
movsl
loopne
cmp
loopne
ret
mov
movsl
loopne
jnp
loopne
ljmp
mov
mov
loopne
shll
loopne
xchg
loopne
xor
test
mov
test
mov
movsb
loopne
mov
loopne
jnp
loopne
mov
loopne
popa
cmpsl
loopne
shll
mov
mov
loopne
das
mov
loopne
mov
cmpsb
loopne
xchg
loopne
test
loopne
stc
cmpsl
loopne
inc
test
mov
cmpsb
loopne
push
movsl
loopne
adc
cmpsb
loopne
out
mov
loopne
lea
loopne
and
mov
loopne
sub
loopne
dec
cmpsb
loopne
push
mov
loopne
inc
test
mov
cmpsb
loopne
fisubl
loopne
mov
movsl
loopne
or
test
mov
mov
loopne
stos
cmpsl
loopne
cmpsl
loopne
sbb
loopne
sbb
loopne
out
loopne
imul
loopne
push
mov
loopne
adc
loopne
movsl
cmpsl
loopne
add
test
loopne
sahf
cmpsb
loopne
cmpsb
mov
loopne
mov
loopne
fs
mov
movsl
loopne
sti
mov
loopne
jl
loopne
cmpsl
loopne
inc
movsb
loopne
mov
loopne
jl
loopne
inc
test
loopne
fsubl
loopne
int3
mov
loopne
adc
loopne
mov
mov
loopne
in
loopne
sub
loopne
jle
loopne
insl
movsb
loopne
inc
movsb
loopne
adc
loopne
lock
loopne
mov
loopne
popa
cmpsl
loopne
mov
loopne
sbb
loopne
outsb
mov
loopne
cmpsl
loopne
add
loopne
mull
loopne
mov
movsl
loopne
dec
mov
loopne
add
loopne
stos
mov
loopne
pop
mov
loopne
and
loopne
and
loopne
sub
mov
cmpsl
loopne
int
loopne
test
loopne
dec
movsl
loopne
call
mov
loopne
xchg
mov
loopne
and
loopne
aas
cmpsb
loopne
aaa
mov
loopne
in
loopne
dec
mov
loopne
aas
cmpsb
loopne
cmpsb
test
mov
test
mov
cmpsl
loopne
fsubs
loopne
cwtl
mov
loopne
leave
movsb
loopne
jb
loopne
inc
cmpsl
loopne
dec
mov
loopne
movsb
loopne
repnz
loopne
shlb
mov
test
mov
movsl
loopne
push
mov
loopne
cmpsb
mov
loopne
int
loopne
movsl
mov
loopne
test
loopne
nop
mov
loopne
lret
mov
mov
loopne
mov
movsl
loopne
sub
mov
mov
loopne
pusha
cmpsl
loopne
mov
mov
loopne
mov
loopne
xor
loopne
dec
test
loopne
dec
mov
loopne
push
cmpsl
loopne
mov
movsb
loopne
ret
mov
loopne
stc
movsl
loopne
push
cmpsb
loopne
repz
loopne
sub
loopne
jg
loopne
es
loopne
mull
loopne
into
mov
loopne
sbb
loopne
frstor
loopne
xchg
cmpsl
loopne
aaa
movsl
loopne
add
loopne
cmp
loopne
shll
mov
test
mov
cmpsb
loopne
push
mov
loopne
add
mov
loopne
mov
loopne
imull
loopne
jg
loopne
adc
loopne
std
mov
loopne
jb
loopne
shrb
loopne
imul
mov
mov
loopne
inc
cmpsb
loopne
lahf
cmpsl
loopne
sbb
loopne
mov
cmpsl
loopne
push
loopne
dec
mov
loopne
dec
movsl
loopne
movsb
loopne
shld
mov
movsl
loopne
les
loopne
cmp
loopne
dec
movsl
loopne
and
mov
movsb
loopne
push
movsb
loopne
xchg
loopne
fwait
movsb
loopne
sbb
mov
loopne
repnz
loopne
mov
cmpsl
loopne
xchg
cmpsb
loopne
lds
loopne
dec
test
loopne
adc
movsl
loopne
xchg
cmpsb
loopne
cwtl
movsb
loopne
push
movsl
loopne
fisubs
loopne
and
mov
cmpsb
loopne
cmpsb
loopne
pop
mov
loopne
andl
mov
cmpsb
loopne
sub
mov
mov
loopne
add
cmpsb
loopne
test
mov
test
loopne
push
loopne
cli
cmpsb
loopne
push
mov
loopne
jo
loopne
loopne
jo
loopne
mov
loopne
jno
loopne
and
loopne
mov
mov
loopne
fsubrl
loopne
sbb
mov
movsb
loopne
fwait
movsb
loopne
dec
cmpsl
loopne
jne
loopne
push
test
loopne
dec
mov
loopne
push
mov
loopne
lock
loopne
frstor
mov
mov
loopne
sbb
loopne
jl
loopne
or
loopne
frstor
loopne
cmpsb
loopne
jecxz
loopne
pop
movsb
loopne
out
cmpsb
loopne
popa
cmpsl
loopne
sbb
loopne
cltd
mov
loopne
adc
loopne
push
test
mov
test
mov
movsb
loopne
mov
loopne
popa
movsb
loopne
adc
movsl
loopne
lods
cmpsb
loopne
xor
loopne
jge
loopne
mulb
loopne
cmp
loopne
fildll
loopne
insl
movsl
loopne
mov
loopne
mov
loopne
pop
cmpsb
loopne
sbb
loopne
mov
loopne
pop
mov
loopne
aas
movsb
loopne
andl
mov
movsb
loopne
imul
mov
movsb
loopne
xchg
mov
test
mov
movsl
loopne
push
test
loopne
test
cmpsb
loopne
mov
loopne
push
mov
loopne
or
mov
loopne
out
mov
loopne
and
loopne
imul
mov
test
mov
cmpsl
loopne
test
loopne
popf
mov
loopne
jg
loopne
add
loopne
ja
loopne
pop
cmpsl
loopne
int3
cmpsl
loopne
mov
mov
movsl
loopne
sub
loopne
push
mov
loopne
push
movsb
loopne
pop
mov
loopne
in
loopne
mulb
loopne
icebp
mov
loopne
ljmp
mov
movsl
loopne
mov
mov
loopne
aas
cmpsb
loopne
andl
mov
test
mov
movsb
loopne
cmp
loopne
adc
loopne
shlb
loopne
push
cmpsl
loopne
adc
loopne
std
mov
loopne
cmp
loopne
movsl
loopne
repnz
loopne
jnp
loopne
stos
mov
loopne
in
cmpsb
loopne
mov
loopne
jmp
loopne
cwtl
movsb
loopne
jb
loopne
cs
mov
movsl
loopne
popa
cmpsb
loopne
jle
loopne
sbb
loopne
pop
test
loopne
inc
movsl
loopne
dec
mov
loopne
cmc
mov
loopne
sbb
movsl
loopne
mov
mov
loopne
sbb
mov
cmpsl
loopne
nop
movsl
loopne
and
loopne
fbld
loopne
mov
loopne
pop
test
loopne
cmp
mov
loopne
mov
loopne
cmp
loopne
add
cmpsl
loopne
add
loopne
int3
movsb
loopne
xchg
mov
loopne
imul
add
loopne
mov
movsb
loopne
in
movsb
loopne
push
movsb
loopne
lock
loopne
add
loopne
daa
mov
loopne
andb
mov
mov
loopne
dec
movsl
loopne
cmp
loopne
mov
loopne
mov
loopne
loope
loopne
mov
mov
loopne
xchg
movsl
loopne
cmp
loopne
or
loopne
mov
loopne
xor
loopne
cmp
movsb
loopne
lret
mov
loopne
mov
mov
movsb
loopne
call
movsb
loopne
mull
loopne
test
loopne
test
loopne
scas
mov
loopne
lds
loopne
mov
movsl
loopne
and
mov
loopne
jno
loopne
sub
loopne
jge
loopne
adc
loopne
into
test
mov
mov
loopne
jmp
test
mov
movsl
loopne
cmp
loopne
data16
loopne
cld
test
mov
test
mov
movsb
loopne
add
mov
loopne
push
movsl
loopne
bound
mov
cmpsb
loopne
std
movsb
loopne
arpl
mov
mov
loopne
stos
cmpsb
loopne
stos
mov
loopne
push
mov
loopne
fisubl
loopne
and
mov
loopne
xchg
movsb
loopne
xchg
mov
loopne
cmp
mov
movsb
loopne
or
movsb
loopne
push
mov
loopne
sub
mov
movsb
loopne
jl
loopne
stc
cmpsl
loopne
xchg
movsb
loopne
mov
loopne
dec
movsl
loopne
outsl
mov
loopne
repz
loopne
jno
loopne
pop
movsb
loopne
mov
loopne
popa
cmpsl
loopne
inc
mov
loopne
mov
loopne
cmp
loopne
mov
loopne
insb
test
mov
cmpsb
loopne
scas
mov
loopne
xchg
movsb
loopne
imul
loopne
dec
test
loopne
inc
test
mov
movsb
loopne
popf
cmpsl
loopne
pop
test
mov
mov
loopne
adc
loopne
jnp
loopne
jne
loopne
out
loopne
sahf
mov
loopne
adc
loopne
cmc
mov
loopne
nop
mov
loopne
xor
loopne
xlat
mov
loopne
xchg
mov
loopne
andl
loopne
lcall
mov
mov
loopne
out
mov
loopne
clc
mov
loopne
sbb
mov
test
mov
movsb
loopne
stc
mov
loopne
pusha
cmpsb
loopne
stos
mov
loopne
add
loopne
inc
test
mov
cmpsb
loopne
cmp
loopne
sub
loopne
jp
loopne
pop
mov
loopne
mov
loopne
add
loopne
push
cmpsb
loopne
mov
cmpsl
loopne
ret
movsl
loopne
inc
movsb
loopne
stc
mov
loopne
bt
mov
cmpsl
loopne
lock
loopne
sub
loopne
shll
mov
movsb
loopne
imul
mov
test
loopne
fsubs
mov
test
mov
mov
loopne
insl
test
mov
mov
loopne
mov
loopne
jp
loopne
movsb
loopne
loopne
loopne
movsb
loopne
call
mov
loopne
xchg
movsl
loopne
jmp
loopne
dec
mov
loopne
jb
loopne
mov
loopne
xchg
cmpsl
loopne
out
loopne
xor
loopne
add
movsl
loopne
dec
movsl
loopne
mov
loopne
outsb
mov
loopne
outsl
movsl
loopne
adc
loopne
test
loopne
add
loopne
or
mov
mov
loopne
cmp
mov
loopne
ja
loopne
dec
cmpsb
loopne
cmp
loopne
mov
mov
loopne
movsl
loopne
mov
movsl
loopne
cmp
loopne
inc
movsl
loopne
mov
cmpsl
loopne
push
cmpsl
loopne
mov
loopne
popa
cmpsl
loopne
mov
loopne
mov
loopne
stos
mov
loopne
mov
cmpsl
loopne
mov
loopne
mov
loopne
test
loopne
xchg
test
mov
mov
loopne
dec
test
mov
mov
loopne
lods
movsb
loopne
cmp
test
loopne
lock
loopne
aaa
test
mov
movsl
loopne
fwait
cmpsb
loopne
lods
cmpsb
loopne
test
loopne
fldt
loopne
xchg
movsl
loopne
aas
test
loopne
adc
loopne
aaa
test
mov
mov
loopne
xchg
loopne
das
movsb
loopne
sbb
mov
loopne
movsb
movsl
loopne
mov
loopne
cwtl
mov
loopne
mov
mov
mov
loopne
and
loopne
cmp
loopne
push
test
mov
mov
loopne
xor
loopne
call
test
mov
cmpsb
loopne
jno
loopne
xor
mov
cmpsb
loopne
aad
loopne
jb
loopne
jle
loopne
sbb
loopne
mov
loopne
mov
mov
loopne
out
loopne
pop
mov
loopne
jmp
loopne
xchg
loopne
ljmp
mov
mov
loopne
jo
loopne
push
cmpsb
loopne
in
mov
loopne
mov
movsl
loopne
pop
mov
loopne
shrb
loopne
mov
loopne
movsb
loopne
cmc
movsl
loopne
jp
loopne
push
cmpsl
loopne
fsubs
loopne
sti
cmpsb
loopne
push
cmpsl
loopne
xor
loopne
dec
test
loopne
cmpsl
loopne
or
loopne
inc
mov
loopne
and
loopne
movsl
loopne
subb
mov
test
mov
movsl
loopne
stc
mov
loopne
mov
movsl
loopne
bound
loopne
andl
loopne
movsw
loopne
xchg
loopne
icebp
mov
loopne
lods
movsb
loopne
push
mov
loopne
push
mov
loopne
push
loopne
push
mov
loopne
or
loopne
cmc
cmpsb
loopne
fildll
loopne
nop
mov
loopne
xlat
mov
loopne
push
loopne
lret
cmpsl
loopne
mov
loopne
dec
cmpsb
loopne
mov
loopne
shll
loopne
imul
loopne
mulb
loopne
loopne
mov
movsl
loopne
pushf
movsb
loopne
ret
cmpsb
loopne
clc
cmpsl
loopne
dec
mov
loopne
dec
test
mov
cmpsb
loopne
aas
cmpsl
loopne
or
loopne
pop
movsl
loopne
add
loopne
mov
loopne
andl
mov
mov
loopne
xchg
mov
movsb
loopne
inc
test
mov
test
mov
mov
loopne
cmp
mov
loopne
pusha
mov
loopne
cmpsl
cmpsl
loopne
shlb
mov
cmpsl
loopne
loop
loopne
dec
test
loopne
push
movsl
loopne
add
loopne
jmp
cmpsl
loopne
push
mov
loopne
aam
loopne
js
loopne
aad
loopne
xchg
movsl
loopne
mov
loopne
movsb
loopne
inc
test
mov
movsb
loopne
mov
movsl
loopne
in
cmpsb
loopne
das
cmpsb
loopne
cmc
mov
loopne
mov
loopne
jae
loopne
add
loopne
sub
mov
loopne
cld
mov
loopne
sahf
mov
loopne
jno
loopne
and
loopne
int
loopne
repnz
loopne
lcall
mov
test
loopne
inc
test
loopne
int
loopne
repz
loopne
pop
test
loopne
dec
test
loopne
adc
mov
cmpsb
loopne
std
movsl
loopne
push
test
loopne
cs
loopne
xor
loopne
out
loopne
call
mov
loopne
dec
test
loopne
jbe
loopne
xlat
mov
loopne
xlat
mov
loopne
lea
loopne
test
loopne
aad
loopne
je
loopne
aad
loopne
jmp
test
loopne
test
loopne
inc
movsl
loopne
mov
loopne
shlb
loopne
adc
loopne
test
loopne
xor
movsl
loopne
stc
cmpsb
loopne
push
cmpsb
loopne
pusha
mov
loopne
cmp
loopne
sub
loopne
inc
mov
loopne
outsl
mov
loopne
shlb
loopne
and
movsl
loopne
shlb
loopne
jnp
loopne
sub
loopne
jmp
mov
loopne
aam
loopne
or
loopne
xlat
cmpsb
loopne
loope
loopne
loope
loopne
mov
movsl
loopne
sbb
loopne
sub
loopne
xchg
cmpsl
loopne
cmc
movsb
loopne
insb
cmpsl
loopne
mov
loopne
mov
loopne
mov
loopne
mov
mov
test
loopne
int
loopne
les
mov
mov
loopne
pop
cmpsl
loopne
insl
cmpsb
loopne
push
test
loopne
out
cmpsl
loopne
sbb
loopne
clc
movsb
loopne
jbe
loopne
push
loopne
scas
cmpsb
loopne
sub
mov
loopne
aas
test
mov
cmpsl
loopne
cmp
loopne
xchg
cmpsl
loopne
cs
mov
mov
loopne
enter
cwtl
cmpsl
loopne
sbb
loopne
shll
loopne
push
movsb
loopne
jmp
mov
loopne
jecxz
loopne
mov
cmpsl
loopne
or
loopne
mov
loopne
lea
loopne
xor
loopne
sbb
loopne
inc
cmpsb
loopne
pop
movsl
loopne
cmc
mov
loopne
hlt
mov
loopne
and
mov
test
mov
movsl
loopne
sub
loopne
repnz
loopne
mov
loopne
xchg
loopne
cmpsl
mov
loopne
andb
mov
movsl
loopne
mov
loopne
es
mov
test
loopne
cmpsb
cmpsl
loopne
mov
loopne
fsubrs
loopne
pop
cmpsl
loopne
fisubl
loopne
adc
loopne
xchg
loopne
out
mov
loopne
push
cmpsb
loopne
call
cmpsb
loopne
out
loopne
push
mov
loopne
dec
mov
loopne
loop
loopne
push
movsl
loopne
loopne
loopne
aad
loopne
push
cmpsb
loopne
or
loopne
hlt
mov
or
lret
or
push
adc
add
mov
push
scas
adc
add
add
shlb
clc
cmp
clc
cmp
add
add
add
ja
clc
outsl
mov
rol
clc
add
add
cmp
aad
jo
add
ljmp
clc
fstps
nop
jle
int
add
add
mov
clc
dec
jmp
push
add
shrb
xchg
movsl
clc
fistpl
cmc
cmp
lret
push
add
popa
add
ret
clc
lcall
pop
push
add
bound
add
add
or
clc
and
add
rcll
add
add
loop
mov
xchg
jmp
push
ss
add
add
jne
clc
ljmp
add
jbe
add
sbb
cmp
clc
sub
add
ret
clc
pushf
xor
add
add
mov
das
mov
pop
loope
lock
clc
jle
and
add
mov
fists
std
outsl
jecxz
cmp
clc
mov
out
shlb
add
push
add
cmp
clc
mov
or
push
movsl
clc
add
add
mov
fsubl
outsb
arpl
add
movsl
clc
idivb
clc
inc
add
loopne
push
in
mov
clc
nop
js
clc
jne
lret
loop
mov
xchg
push
fwait
or
test
add
or
mov
sub
jg
sub
adc
add
fildll
fucomp
test
and
add
clc
inc
add
out
stos
push
clc
xor
clc
xor
add
add
add
dec
pop
out
mov
clc
mov
sar
xchg
loope
out
fwait
push
popa
add
cmp
clc
data16
repz
add
outsb
iret
xchg
sub
adc
add
iret
jb
add
testl
clc
adc
add
out
xor
add
xbegin
jno
add
ja
add
cmc
pop
in
adc
add
mov
clc
inc
add
push
pop
shl
clc
sub
pop
dec
addr16
cs
cmp
dec
jnp
add
sar
clc
lret
push
clc
add
add
add
cmp
xchg
lods
pop
clc
insb
xor
ret
inc
add
data16
addr16
test
mov
clc
jo
add
clc
add
add
add
dec
pusha
add
repz
and
add
add
add
dec
sbb
add
clc
loope
inc
clc
jne
clc
stos
inc
add
xchg
pop
adc
add
clc
sahf
gs
sbb
add
xchg
mov
movsl
clc
add
add
cmc
sub
push
into
jmp
popa
add
push
adc
cmpsb
clc
dec
add
add
jge
xchg
mul
clc
test
clc
cltd
lret
das
sub
clc
fisubrs
mov
clc
dec
stc
lret
shl
clc
jns
lods
insb
push
sub
loope
lock
sub
add
inc
add
repnz
fcompl
fsubrl
loop
stos
cmpsb
clc
sar
jp
add
push
add
cs
dec
iret
push
add
cmp
lea
add
push
pop
push
add
lahf
pop
imul
mov
xor
add
clc
mov
inc
add
outsl
ret
inc
add
out
push
std
sub
clc
cmp
imul
out
jg
add
push
add
cs
xlat
cmp
clc
cwtl
in
stos
add
add
add
out
jge
add
adc
add
clc
cmp
push
mov
test
add
sub
push
dec
fdivrs
test
clc
pop
sar
repnz
inc
add
stos
call
add
and
add
push
test
test
mov
clc
cwtl
ret
clc
lahf
pop
mov
jnp
clc
mov
and
add
kmovw
push
add
dec
mov
add
and
add
add
add
fidivrl
inc
clc
pop
clc
inc
clc
cmp
add
add
mov
add
cli
mov
mov
add
es
sbb
xchg
dec
dec
or
add
add
sarb
add
in
movsb
clc
in
sbb
add
nop
aas
loop
int3
sub
loopne
ret
clc
mov
testl
or
js
dec
cmp
mov
sub
loope
sar
add
mov
rorb
bound
add
movsb
clc
adc
add
mov
add
cmp
push
add
dec
aam
clc
sahf
xchg
add
add
clc
ja
clc
mov
clc
in
fidivs
add
mov
xchg
cmp
clc
push
sbb
dec
push
add
jge
or
fs
xchg
inc
add
int3
cmp
push
add
ds
and
add
dec
sbb
cli
sar
scas
dec
pop
ja
add
popf
cmp
clc
mov
sub
push
hlt
push
add
cs
adc
add
out
dec
xabort
cmp
ss
add
fbstp
add
and
add
xchg
aam
adc
add
clc
and
add
add
inc
add
xchg
mov
add
dec
fs
pop
sbb
jbe
cmp
clc
cwtl
add
add
lock
clc
push
xor
add
add
cmp
pop
or
clc
push
clc
adc
add
clc
mov
mov
xchg
fstpl
add
and
rcll
add
add
out
arpl
add
dec
ljmp
clc
insl
jnp
add
inc
add
or
jbe
add
arpl
add
add
pop
clc
or
xchg
das
out
test
mov
cmp
xchg
sub
sub
add
scas
cli
jmp
add
test
das
scas
and
in
push
add
repnz
lock
and
dec
test
nop
add
add
stos
std
clc
inc
clc
dec
mov
xchg
lock
nop
xor
add
dec
jmp
clc
jb
add
cmc
out
lahf
cmp
mov
clc
stos
xchg
addr16
add
add
jp
ret
clc
cmpsb
clc
adc
add
clc
xchg
pop
add
cs
popl
add
sar
clc
add
clc
xchg
cmp
mov
jne
dec
setno
ret
cs
cwtl
sub
jg
add
aaa
sar
clc
cmp
mov
add
sar
dec
jne
add
push
nop
cwtl
add
add
pop
leave
cmp
push
lock
mov
push
clc
sub
pop
sub
inc
add
and
lods
and
add
sti
pop
repnz
test
jno
add
add
dec
mov
repnz
push
add
mov
push
add
mov
add
add
int3
enter
scas
inc
clc
xor
add
xchg
jo
add
clc
data16
mov
add
sub
mov
add
sub
mov
clc
adc
add
cmp
pop
sbb
aaa
not
jmp
iret
pop
add
cmp
add
lea
add
sub
adc
and
cmp
clc
jne
stos
xor
add
scas
cmp
roll
sti
jbe
dec
or
add
add
add
add
jno
add
add
add
insb
pushf
fwait
aas
mov
mov
add
pop
ret
clc
movsl
clc
xor
add
jns
xor
add
xchg
ss
sbb
clc
jnp
clc
xor
add
cwtl
leave
in
inc
add
pusha
add
or
mov
or
add
pusha
add
lahf
iret
mov
clc
pusha
add
dec
jle
lock
clc
stc
jns
clc
rcll
add
clc
js
jmp
sub
pop
stc
jbe
add
add
xor
add
xor
clc
in
push
clc
je
cmp
pop
mov
clc
fsts
push
clc
inc
clc
sub
xlat
lcall
add
xchg
fisubl
clc
out
inc
clc
cmp
add
leave
push
jnp
add
ffreep
clc
xchg
adc
stc
jge
add
lahf
call
clc
call
in
in
cmp
inc
clc
jb
add
outsl
add
xchg
jbe
stos
fcomps
jle
add
jo
add
clc
xchg
test
mov
adc
add
lcall
push
std
mov
add
add
push
push
clc
das
mov
fnsave
mov
sub
mov
clc
sahf
test
or
clc
mov
clc
fcomps
xor
add
mov
add
add
shr
push
add
or
aad
push
dec
mov
sbb
clc
hlt
dec
icebp
sub
std
out
fucomip
popf
jns
jne
insl
mov
mov
push
sub
push
push
push
push
push
push
call
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
xchg
sub
add
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
jmp
stc
movhps
add
movsl
clc
pop
mov
and
add
add
xchg
and
add
add
add
cmpsl
clc
pop
cmp
add
push
clc
sub
cli
xchg
imul
push
mov
fistl
xor
add
fnstsw
mov
add
add
adc
fs
mov
inc
add
cld
mov
add
mov
jmp
fsts
mulb
adc
add
xor
fists
fdivs
movsb
clc
fadd
clc
push
mov
clc
ds
add
add
add
and
add
add
jae
add
jns
imul
out
popa
add
sti
sub
xlat
adc
mov
icebp
outsb
dec
outsl
lcall
stc
jecxz
or
fdivl
es
ret
cmp
dec
pop
xor
add
or
fadds
cmp
pusha
add
mov
pop
popf
adc
add
cmp
jp
mov
add
movsb
clc
push
sbb
clc
mov
add
lret
clc
push
pusha
add
sub
es
leave
fnsave
clc
push
add
repnz
mov
or
clc
push
add
add
mov
mov
jecxz
test
int
jmp
jle
lock
xlat
push
out
inc
clc
test
clc
test
mov
push
mov
push
push
sar
jns
inc
clc
call
into
movsb
clc
jo
add
push
clc
jne
add
sbb
clc
push
add
stos
xchg
cmp
clc
es
gs
mov
dec
loopne
addr16
jne
cmp
xor
add
ret
clc
popf
lret
rolb
add
mov
ficoms
mov
mov
add
cld
jns
fwait
adc
add
pop
pop
or
sbb
add
jae
add
add
sub
clc
mov
jae
add
dec
mov
add
loopne
xor
add
add
jnp
loope
or
leave
adc
pop
mov
sar
inc
add
push
jns
and
add
clc
sar
add
adc
push
outsb
pop
lea
xchg
sbb
loope
jnp
dec
fsubs
sar
ja
xchg
popf
and
add
clc
xchg
sbb
inc
clc
aaa
leave
cmpsb
clc
push
clc
xchg
mov
popa
add
mov
clc
cmp
clc
sbb
xbegin
clc
iret
adc
add
clc
ror
cmp
mov
add
push
clc
cvtps2pd
in
data16
jb
add
and
add
sub
add
clc
sar
xchg
cmp
add
add
or
or
and
add
cmp
add
xchg
push
adc
add
in
jno
add
enter
xchg
pop
shll
clc
cmp
cmp
ret
clc
clc
aaa
sbb
add
add
jno
add
or
add
clc
iret
test
and
das
xchg
mov
sar
add
aad
dec
outsl
stc
std
dec
addr16
xchg
add
add
mov
ja
push
push
add
pop
push
add
xchg
stos
or
jg
or
clc
sar
clc
pop
arpl
add
cmpsb
clc
es
sbb
mov
mov
aaa
sti
sub
xor
das
fld
clc
loopne
mov
add
imul
mov
mov
stos
js
xchg
xchg
cltd
inc
clc
je
outsl
push
stos
leave
adc
add
lret
mov
cmp
add
inc
clc
push
inc
clc
loop
and
add
inc
clc
and
xchg
sub
in
xor
add
mov
out
push
add
push
add
sub
clc
cmp
clc
sub
faddp
clc
sub
xchg
jb
add
add
sahf
mov
mov
fs
xor
add
mov
clc
sar
clc
call
insl
mov
imul
add
push
bnd
push
add
xchg
xor
add
adc
clc
push
add
fs
fs
scas
adc
add
mov
sbb
fs
stos
xbegin
cmp
clc
lahf
mov
mov
mov
add
dec
push
add
pop
add
add
add
lcall
clc
mov
add
loope
dec
int
loope
pop
and
add
sbb
clc
and
das
xchg
xchg
stos
addr16
aas
dec
inc
clc
mov
mov
sub
xchg
lods
mov
add
pop
es
ret
clc
dec
lods
scas
inc
add
inc
add
mov
jp
outsl
fsubrs
daa
clc
add
add
popf
mov
clc
test
clc
imul
aas
outsl
pop
clc
cmp
add
mov
add
ret
inc
clc
inc
clc
and
add
daa
clc
aas
and
mull
add
add
nop
bound
add
test
call
aam
add
jecxz
jo
add
clc
adc
cmp
add
aam
pop
mov
iret
jmp
jmp
inc
clc
xchg
fdivr
mov
jno
add
lret
clc
fldl
add
adc
add
cmp
fdivrl
jp
gs
addr16
popf
and
mov
clc
push
add
sub
sar
unpckhps
add
add
add
mov
mov
loope
push
adc
clc
imul
adc
adc
add
clc
inc
add
inc
clc
iret
imul
mov
push
jmp
jno
add
add
mov
adc
add
push
clc
dec
xlat
dec
mov
or
clc
add
add
loope
dec
aas
lods
sbb
lods
cmp
add
nop
notl
int3
fwait
and
xor
add
data16
push
cmc
sub
sar
mov
add
xchg
or
addr16
lahf
scas
fs
xor
scas
xor
add
clc
test
in
push
loopne
fwait
rcrl
adc
clc
or
arpl
add
add
ja
add
int
pop
mov
imul
and
out
pushf
stc
out
cmp
gs
rcl
imul
clc
data16
xchg
and
add
add
push
push
vmaxps
clc
repz
mov
add
arpl
add
xlat
push
add
lcall
pop
gs
and
and
adc
add
cmp
test
mov
add
or
jecxz
sar
mov
add
iret
jmp
add
sbb
clc
int
jns
xchg
sbb
cmp
clc
test
sbb
add
push
clc
sbb
mov
add
push
sub
jnp
jb
add
mov
jge
mov
add
push
add
mov
jmp
add
xor
add
pop
lock
add
xchg
nop
xchg
xor
add
clc
packsswb
add
add
divl
imul
xor
clc
adc
add
sub
out
clc
lock
add
mov
or
bound
add
imul
fiaddl
mul
clc
repz
lret
clc
test
mov
addr16
fildl
add
cmp
scas
stos
xchg
imul
dec
fwait
stos
test
add
xor
add
add
add
sub
clc
dec
push
add
sbb
clc
mov
jl
clc
cmp
clc
and
add
and
add
push
add
sbb
clc
pop
dec
fsubrl
in
into
adc
add
mov
xchg
pusha
add
fdivrp
aaa
lret
pop
add
mov
clc
xor
add
jl
clc
js
popl
data16
cmpsl
clc
dec
aaa
arpl
add
clc
dec
std
cmp
xchg
fcmovnbe
dec
push
clc
fiaddl
jg
paddsw
xchg
data16
sahf
cmc
mov
icebp
sub
jb
add
repnz
clc
jmp
clc
repnz
jl
lret
xchg
push
lret
mov
add
mov
mov
incb
cmp
clc
inc
clc
or
xor
jp
add
xor
clc
jbe
clc
cmp
out
sar
clc
test
clc
jns
add
mov
or
je
push
add
add
add
clc
xchg
outsl
test
clc
fsubr
and
add
clc
jb
add
add
mov
popa
add
adc
add
add
icebp
and
mov
fisubl
clc
mov
repz
pop
xabort
add
fimuls
popl
add
clc
enter
lcall
pop
dec
or
add
inc
add
xchg
adc
sub
loope
mov
add
clc
sahf
and
stos
adc
add
add
pop
clc
gs
daa
clc
nop
clc
cwtl
and
add
clc
insb
ret
clc
jae
add
cmpsl
clc
jbe
add
sub
lods
jmp
inc
clc
and
add
push
add
cmp
xchg
jns
add
mov
repz
fisttpl
mov
lcall
mov
popf
pop
add
add
add
add
add
fimull
xchg
adc
add
scas
mov
sbb
clc
test
xchg
push
add
mov
movsb
clc
dec
mov
inc
clc
imul
clc
cmp
or
clc
lahf
mov
clc
jne
clc
push
cmp
cmp
cmp
add
push
outsb
aas
cmp
clc
test
rcr
sahf
mov
imul
clc
or
clc
fs
movsb
clc
in
and
add
add
rcl
arpl
add
clc
and
add
clc
mov
clc
ds
mov
jb
add
add
int3
dec
daa
clc
das
mov
xor
add
add
jmp
clc
movsb
clc
pop
clc
adc
add
sub
cmc
jg
dec
clc
mov
add
pop
dec
mov
clc
sbb
clc
inc
clc
movsl
clc
cmp
add
daa
clc
icebp
push
pop
nop
or
add
test
add
iret
cs
pop
dec
dec
and
add
add
hlt
enter
sub
add
scas
mov
clc
in
jb
add
clc
mov
jne
clc
shll
clc
out
popa
add
sti
push
clc
clc
pop
pop
mov
testb
mov
rclb
pop
cmpsl
clc
fcompl
add
nop
dec
and
add
jbe
xor
xchg
nop
mov
rolb
inc
clc
dec
cmp
fs
clc
pop
pop
shrb
xchg
pop
xabort
cmp
aaa
sbb
add
add
aad
jnp
sub
inc
clc
and
add
cli
test
ljmp
insl
xchg
push
addr16
fistpll
clc
jo
add
pop
mov
clc
dec
jae
add
sbb
jns
clc
xor
add
xchg
rclb
add
repnz
test
hlt
sbb
add
dec
lods
lahf
cwtl
xor
adc
std
jg
pop
popa
add
faddl
xlat
add
add
add
xor
add
or
ret
clc
lcall
dec
mov
inc
clc
test
cmp
pusha
add
sub
loop
lcall
sbb
pushl
cmp
clc
xchg
aaa
nop
clc
aaa
cli
test
cmp
pop
push
fdivrl
add
rclb
clc
stos
das
data16
mov
or
pop
stc
fsubs
clc
popf
clc
add
add
call
clc
aad
pusha
add
mov
or
add
xor
add
addr16
mov
add
add
or
ss
pop
aaa
cwtl
or
add
mov
movsl
clc
adc
add
add
loope
jmp
add
jne
dec
mov
clc
out
xor
add
mov
add
jb
add
clc
and
push
add
xchg
push
add
stos
pop
loopne
add
add
adc
add
sbb
push
dec
outsl
xlat
fisubl
clc
fs
leave
cmp
add
daa
clc
inc
add
aas
or
jge
pop
rcl
push
cmpsl
clc
es
jbe
pop
mov
ret
clc
sub
add
cld
mov
inc
add
movsl
clc
mov
push
add
mov
lcall
add
clc
mov
lods
mov
clc
push
test
add
xchg
mov
add
cmp
dec
gs
data16
mov
out
lahf
mov
adc
add
aas
dec
lret
mov
fcoml
add
testb
bound
add
fs
ret
clc
xchg
scas
jbe
clc
fnstenv
add
dec
scas
das
inc
clc
pushf
mov
std
hlt
mov
mov
mov
cmp
clc
leave
clc
lock
add
cmpsl
clc
fistl
sub
or
scas
mov
dec
xchg
fucomip
movsl
clc
mov
cmpsb
clc
test
mov
ret
clc
push
add
push
add
fiaddl
aam
add
xchg
mov
push
clc
push
adc
add
shlb
add
push
lea
add
stc
out
lock
add
push
sbb
sar
test
out
fmuls
jno
add
clc
repz
add
add
add
je
mov
pop
jae
add
dec
xchg
dec
mov
into
jmp
lret
xchg
sbb
lahf
sbb
cmp
add
pop
mov
ret
clc
sarb
add
add
int
fstp
push
roll
std
mov
sbb
add
add
add
lock
pop
fsubrp
cmp
popf
push
add
sti
or
ret
clc
lahf
xchg
mov
clc
fildll
sbb
add
test
stos
xchg
imul
clc
mov
call
jecxz
js
push
add
cmp
xor
add
adc
add
adc
cmp
int3
inc
clc
cwtl
xchg
mov
repnz
je
sti
arpl
add
vrcpps
add
add
and
add
mov
add
or
clc
ret
add
jp
sub
add
or
pop
negl
mov
push
ficomps
xchg
clc
ss
clc
dec
sbb
xor
add
scas
jno
add
add
fwait
cvtpi2ps
push
mov
clc
mov
add
clc
xor
add
add
add
insl
xor
add
add
lods
imul
pop
jmp
mov
add
fnstcw
or
jecxz
fimull
mov
clc
mov
mov
mov
sti
push
cmp
imul
cmp
addr16
gs
lahf
mov
add
push
clc
movsl
clc
out
cmp
cmp
add
add
mov
mov
dec
pop
pop
cwtl
sahf
cwtl
repnz
add
sbb
sub
push
jns
sahf
xor
iret
pop
enter
clc
loope
sar
jne
xchg
jge
mov
add
dec
dec
mov
xabort
add
add
add
mov
jge
cmpsb
clc
and
clc
repnz
add
add
clc
repnz
dec
push
aas
xor
negl
outsb
mov
out
mov
clc
daa
clc
ss
clc
pop
clc
rolb
sbb
gs
cmp
and
add
xlat
fidivrs
clc
jb
add
mov
sbb
clc
add
add
clc
sub
insl
imul
or
fidivrl
sbb
add
sbb
adc
add
sbb
clc
mov
clc
or
push
add
icebp
sbb
clc
repnz
add
insb
dec
test
inc
clc
push
add
sahf
loope
into
fisubs
enter
test
fst
rcl
shl
clc
or
cld
sar
inc
add
cmpsl
clc
adc
hlt
jg
clc
stos
xor
xor
imul
lahf
stos
xchg
inc
add
mov
jbe
pop
inc
clc
jmp
clc
in
mov
xor
stc
fwait
inc
clc
jns
push
add
jp
cmpsb
clc
popa
add
out
dec
jmp
idivl
in
xchg
mov
clc
mov
jl
pop
fidivs
fadd
clc
loope
cli
push
mov
add
clc
shll
add
lret
mov
sub
clc
push
mov
pop
cwtl
mov
add
mov
addr16
mov
xor
cmpsl
clc
mov
add
or
lahf
mov
add
cmp
neg
jp
mov
add
dec
push
daa
clc
jge
rep
jmp
test
loop
out
cmp
add
or
aad
sbb
clc
lcall
sbb
push
stc
mov
jle
ficoms
jb
clc
jo
add
dec
add
add
lock
jecxz
into
push
xor
add
clc
sbb
clc
test
rcrl
mov
scas
adc
loop
lcall
adc
clc
sbb
ret
clc
das
bound
add
sbb
clc
fsubr
push
sti
es
cmc
sub
pusha
add
inc
clc
lret
inc
add
cmp
add
lock
add
call
clc
mov
gs
sti
fs
scas
push
add
xor
xchg
pop
adc
add
mov
add
lret
stc
adc
add
add
or
clc
cmpsl
clc
mov
add
add
clc
sub
jnp
add
sub
or
add
lods
addr16
jecxz
cmp
lods
mov
add
sub
pusha
add
gs
pop
es
xlat
pushf
inc
clc
sar
adc
add
clc
mov
add
pop
test
clc
mov
mov
popa
add
sbb
add
add
push
mov
add
pop
leave
mov
leave
vmovaps
clc
xor
inc
add
cmp
mov
int
jbe
add
add
loope
dec
sbb
decl
clc
xabort
add
mov
add
clc
stos
mov
clc
xchg
incl
sub
and
add
decl
cs
imul
rcrl
push
bswap
add
test
adc
std
aam
cs
pop
lods
xchg
and
add
inc
add
push
dec
int
stos
xchg
sar
dec
incl
cmpsb
clc
test
adc
add
dec
popa
add
jg
fcom
fimuls
adc
add
cli
pop
inc
add
sar
add
fidivl
add
mov
aas
mov
xchg
or
push
inc
clc
sti
sti
xchg
enter
clc
xlat
out
mov
je
scas
cmpsb
clc
add
add
add
add
dec
sahf
inc
clc
iret
clc
jmp
clc
iret
cmp
push
pusha
add
lahf
mov
clc
xor
add
clc
xchg
cmpsb
clc
mov
xor
add
clc
shlb
pop
cmp
add
add
lock
xor
add
mov
adc
add
clc
sar
pop
cmp
mov
add
iret
adc
add
add
out
lahf
sub
es
es
sub
lret
js
clc
cmpsb
clc
cmpsl
clc
fucomi
daa
clc
hlt
xor
add
in
xabort
xor
fbld
add
inc
add
cmp
push
enter
clc
ret
clc
mov
sub
add
pop
xchg
cmc
dec
push
add
xchg
cli
clc
push
jnp
jnp
clc
cmp
mov
rcrb
call
mov
cmp
jge
xor
adc
add
leave
pop
inc
add
sub
adc
outsl
mov
xor
add
mov
add
xchg
hlt
negb
mov
clc
xlat
out
mov
add
sbb
lea
pop
arpl
add
out
scas
es
jnp
cmp
jb
add
clc
pop
insb
cld
test
adc
xlat
cmpsl
clc
into
push
scas
inc
add
lret
push
data16
push
aaa
xchg
gs
arpl
add
negl
loopne
fidivrl
push
loopne
fistl
add
cmpsb
clc
push
inc
clc
mov
pop
clc
int
clc
mov
mov
clc
pop
test
push
pop
adc
add
out
aas
xchg
dec
jno
add
movsl
clc
mov
clc
sub
mov
loopne
mov
mov
jne
dec
jnp
jns
movsl
clc
pop
clc
push
test
int3
and
add
clc
jae
add
add
inc
clc
and
add
cmp
add
add
icebp
or
clc
push
clc
mov
add
icebp
lock
gs
cmp
cmpsb
clc
xchg
scas
into
push
and
add
clc
iret
add
xchg
sub
mov
inc
clc
test
cmpsl
clc
push
clc
push
lods
inc
clc
cmp
xlat
cmp
add
mov
test
add
in
and
add
punpcklwd
add
clc
into
sar
adc
add
clc
mov
clc
xor
add
xchg
mov
and
test
iret
dec
test
mov
or
inc
clc
fwait
push
add
sar
add
add
add
clc
mov
mov
xchg
push
jge
clc
xchg
sbb
movsl
clc
loopne
in
test
mov
shll
add
dec
jecxz
cmp
pop
imul
clc
push
xor
add
sub
movsb
clc
dec
data16
sub
or
clc
mov
lea
sub
sub
sar
aaa
sub
jae
add
es
cltd
pop
lahf
jmp
lea
dec
xchg
pop
mov
xor
add
sub
clc
gs
fucom
clc
call
push
cmp
sub
clc
jge
inc
clc
mov
adc
add
addr16
es
sub
clc
xchg
ret
clc
add
add
clc
or
add
cmp
clc
mov
push
add
xor
add
push
aaa
push
clc
cmp
clc
adc
add
dec
cltd
and
add
es
int
cmp
clc
fdivl
adc
lock
daa
clc
stc
sti
push
add
and
add
aaa
dec
cmp
clc
mov
clc
in
cmp
rcll
add
pop
push
add
popa
add
insl
clc
paddusb
push
add
int
jl
pop
sti
lcall
mov
add
add
and
add
pop
dec
and
add
mov
add
and
add
cli
mov
es
adc
add
inc
add
test
fwait
pop
rclb
and
add
dec
in
fiadds
add
sbb
clc
rcrb
mov
dec
or
add
xor
sub
test
and
add
xchg
es
or
add
xabort
clc
ret
clc
test
push
add
rorl
add
xchg
mov
clc
fwait
dec
cli
add
and
add
xor
add
sar
pop
pop
pop
mov
add
lea
dec
leave
scas
testl
test
add
aas
mov
add
or
aad
xlat
or
bound
add
and
add
clc
ljmp
add
pop
cs
pop
popf
int
cmp
stc
ret
clc
jne
data16
xchg
pop
sub
clc
jno
add
dec
dec
es
mov
adc
add
push
add
mov
es
sti
pop
lock
add
imul
clc
in
imul
add
add
push
lods
outsb
loope
nop
adc
add
clc
into
sub
clc
pop
imul
clc
aas
in
pop
mov
mov
inc
add
js
aad
clc
sar
clc
mov
clc
inc
add
stc
push
clc
cmp
mov
adc
add
es
inc
clc
outsb
mov
fs
in
mov
sti
insb
pop
dec
loopne
xor
or
stos
inc
clc
test
call
clc
adc
and
add
out
jbe
add
xchg
xchg
icebp
lock
sarb
clc
movsl
clc
clc
outsl
lods
add
add
clc
mov
pop
out
jbe
sar
add
jns
hlt
push
clc
sub
jecxz
enter
push
add
into
pushf
add
add
add
fcoml
xchg
mov
add
mov
pop
adc
es
mov
clc
mov
cmp
sbb
and
add
xchg
add
cmp
add
add
add
insl
mov
xchg
pop
clc
pop
pop
sar
add
enter
clc
call
sbb
mov
pop
xor
add
dec
and
sbb
add
cmp
int
add
int3
adc
add
arpl
add
sar
out
jmp
add
add
add
inc
add
push
pop
clc
insb
and
add
or
add
cmp
push
ret
outsb
into
test
arpl
add
out
mov
movsl
clc
loope
fstp
sub
in
push
clc
sub
movsb
clc
sbb
add
add
clc
adc
clc
mov
jno
add
add
lcall
jmp
add
add
rclb
add
iret
mov
imul
clc
adc
add
clc
repz
add
inc
add
enter
add
aaa
dec
or
add
or
ds
cs
test
clc
cld
ljmp
add
xchg
pop
fidivrs
mov
notl
add
mov
aas
push
add
xor
scas
in
sar
out
adc
add
add
push
cmp
into
mov
mov
or
push
lcall
ret
xor
add
ret
clc
jle
xchg
out
cmp
add
in
cmp
popa
add
push
or
insl
ret
pop
mov
sahf
xor
ss
add
push
fldl2e
pop
adc
add
add
xor
add
mov
sbb
or
popa
add
cmp
xchg
xabort
sub
push
cli
xchg
push
pushf
cs
add
add
xor
add
mov
push
inc
clc
or
dec
adc
add
frndint
cmc
mov
cli
pop
or
mov
leave
outsl
mov
clc
jge
jnp
out
int
clc
testb
pop
jbe
je
sub
xchg
xor
add
add
add
add
fprem
add
add
int3
mov
test
fistpl
and
add
add
loop
inc
clc
xbegin
mov
clc
mov
jp
clc
rcrb
clc
shll
add
mov
inc
clc
pop
mov
je
sbb
sar
push
push
push
pushf
outsl
cmp
add
pushl
add
push
add
popa
add
hlt
hlt
cmp
inc
clc
cwtl
cli
sbb
cmp
punpckhbw
add
lock
lcall
add
or
add
clc
xchg
push
in
pusha
add
inc
clc
data16
or
jae
add
cli
mov
icebp
sub
mov
push
add
pop
popf
add
add
cmpsb
clc
loopne
sbb
jbe
cmp
add
mulb
cs
clc
nop
jno
add
clc
xchg
scas
mov
add
repz
imul
add
dec
int3
fs
push
js
clc
add
add
insb
add
add
clc
jmp
pop
sahf
push
clc
aad
sub
mov
add
cmpsb
clc
add
add
pop
clc
stos
cmpsb
clc
mull
ljmp
push
test
pop
xor
or
adc
add
add
pushf
lahf
push
fsubs
pop
scas
data16
inc
clc
mov
sub
add
sbb
adc
or
aam
add
add
add
clc
fdivrp
push
xchg
xor
jmp
clc
bound
add
add
cld
lea
add
push
add
jg
daa
clc
das
jns
clc
or
addr16
cli
loopne
adc
add
int
xor
add
test
movsl
clc
inc
clc
xor
add
add
xchg
gs
jb
add
int3
fwait
cli
inc
add
pop
cmp
pop
insb
push
xchg
dec
stos
xabort
bound
add
and
add
and
sub
xor
add
xchg
sar
push
clc
or
fcoml
add
add
testb
add
xchg
and
add
add
insb
sbb
fmuls
clc
add
add
das
mov
cmp
sbb
fnstenv
add
std
iret
adc
add
loopne
xlat
jb
add
jge
clc
stos
cmp
test
faddl
add
popa
add
sbb
add
das
cmp
add
adc
addr16
lahf
inc
clc
add
cmp
outsl
or
clc
xor
add
scas
dec
dec
xchg
jle
add
cmp
cmp
clc
and
add
push
fcom
jo
add
sar
add
add
jge
dec
xchg
movsl
clc
xor
add
or
add
clc
out
out
fisubl
clc
in
in
mov
add
xlat
xor
xchg
mov
add
ljmp
add
shll
push
add
add
cmp
and
add
cld
inc
add
inc
add
push
lret
bound
add
add
push
adc
add
xabort
ss
sub
adc
add
add
lret
clc
cmp
ds
lret
add
clc
pop
cmp
leave
cli
aad
sub
add
cmpsl
clc
cmp
inc
clc
xchg
or
arpl
add
inc
clc
or
clc
and
clc
mov
out
mov
in
in
mov
scas
ja
mov
xchg
sbb
add
fxch
xchg
fisttpll
inc
clc
test
lock
lcall
push
mov
mov
add
pusha
add
and
add
addr16
repnz
clc
dec
pop
jns
js
cmp
sbb
add
insl
std
or
push
cmp
mov
int3
lret
jnp
add
popa
add
xor
add
clc
push
pop
sub
add
sub
scas
fidivl
add
dec
xor
add
add
mov
sar
add
add
sarl
xchg
mov
aam
push
add
xor
add
jbe
cmp
clc
jae
add
push
test
cmp
push
sbb
and
add
fs
test
leave
hlt
adc
add
pusha
add
lock
mov
add
mov
mov
mov
or
clc
cmp
add
cwtl
adc
add
pop
pop
stc
mov
clc
fcompl
add
testb
dec
pop
std
or
out
push
fsts
pop
mov
jge
push
mov
add
dec
inc
clc
or
jae
add
addr16
ds
add
pusha
add
mov
clc
push
gs
daa
clc
xchg
mov
add
stos
into
gs
insb
inc
clc
enter
or
cmc
xchg
mov
sub
xor
sub
std
mov
ds
clc
jb
add
cmp
clc
enter
xor
add
pop
gs
xchg
push
clc
mov
and
add
insb
int
add
neg
stos
mov
add
clc
and
jbe
jns
add
call
cltd
pop
popa
add
jl
jns
add
pop
inc
add
inc
add
repnz
clc
push
negb
mov
clc
data16
adc
add
add
test
aam
dec
inc
add
and
add
testl
sahf
push
aad
clc
sub
cmp
xchg
lock
add
push
add
jge
ljmp
sub
clc
sar
add
sub
repnz
outsl
mov
lahf
and
add
in
dec
push
add
mov
test
clc
in
push
clc
mov
popa
add
fisubrs
test
arpl
add
adc
xor
fldcw
scas
faddl
clc
mov
jns
or
xchg
cmc
icebp
cld
sub
clc
jae
add
clc
xchg
xor
add
clc
out
sub
or
clc
in
add
add
sub
dec
insb
mov
lods
xor
add
add
sbb
cmp
add
stos
inc
clc
mov
add
cli
push
nop
dec
scas
ficomps
lret
arpl
add
add
popa
add
xchg
pop
inc
clc
jnp
sub
cs
push
add
aaa
fwait
mov
adc
add
add
jne
outsl
fnstcw
out
imul
mov
sbb
add
and
add
cmp
and
add
add
add
clc
leave
sar
repnz
jno
add
clc
push
mov
lods
dec
mov
sub
sub
lahf
dec
lret
sahf
pop
out
mov
data16
daa
clc
loope
idivl
cmc
jp
addr16
lods
adc
clc
popa
add
lock
add
jb
add
lret
imul
xlat
xchg
mov
mov
clc
xlat
push
mov
addr16
lret
ds
add
mov
add
test
sti
sub
xor
add
clc
mov
adc
add
sub
sar
rcll
add
inc
clc
rol
clc
int3
mov
mov
mov
add
jle
clc
jl
mov
add
sub
add
add
mov
add
testl
push
pop
sub
or
call
pop
sub
insb
xchg
in
outsb
xchg
adc
add
xchg
sti
gs
dec
fs
fisubrs
pushf
jne
mov
jns
add
mov
hlt
inc
clc
or
add
push
add
rcrl
and
add
jne
add
add
arpl
add
jbe
add
imul
movhps
out
jecxz
sbb
mov
jno
add
sub
add
xlat
xor
mov
clc
cmp
lcall
daa
clc
xchg
pop
pop
jl
clc
adc
add
add
add
sbb
leave
test
test
xor
mov
clc
pop
clc
movsl
clc
filds
clc
popf
cmpsb
clc
or
outsl
and
add
add
adc
add
decb
sbb
dec
fwait
pop
xor
add
clc
xchg
stos
add
add
xor
popf
rolb
clc
inc
clc
or
clc
sbb
xchg
mull
repnz
addr16
loopne
xchg
push
clc
mov
or
sti
stos
sbb
sar
clc
loopne
cltd
jecxz
sar
in
mov
sub
add
clc
mov
mov
clc
push
stos
cmp
jecxz
idivl
mov
fcmovu
xchg
aad
mov
add
in
mov
clc
movntps
ljmp
and
add
add
clc
test
cmc
into
jge
clc
cmp
clc
sbb
or
xchg
sbb
add
sti
nop
jge
jo
add
dec
repz
mov
xabort
add
mov
pop
xchg
pop
mov
jb
add
mov
cwtl
out
mov
clc
sar
repnz
mov
loopne
jmp
jecxz
pusha
add
lods
hlt
mov
sub
add
daa
clc
or
test
jb
add
cmp
clc
jb
add
aas
xabort
call
sar
in
or
jle
xor
add
test
inc
clc
ja
add
outsb
jno
add
xchg
js
xlat
lret
jne
add
push
jo
add
fistl
xchg
and
add
clc
pushf
out
xlat
or
add
cmp
push
add
mov
fidivrs
xabort
clc
es
sahf
iret
pop
decb
outsl
fwait
cmova
imul
add
pusha
add
cmp
add
dec
sbb
mov
cmp
pop
loopne
mov
ljmp
shlb
repz
add
adc
add
in
xchg
sbb
sbb
clc
ds
add
setge
add
sub
sbb
add
in
aas
fnsave
add
cmp
in
lret
adc
add
sub
add
xlat
cmp
push
sub
clc
mov
add
add
inc
add
adc
add
adc
add
xchg
xor
add
add
push
add
cmp
or
test
lods
cmp
add
pop
fidivl
bound
add
ret
insl
clc
je
adc
add
add
sbb
and
add
clc
dec
lahf
pop
insl
add
add
add
and
add
clc
pop
sahf
xchg
xchg
push
clc
test
inc
clc
cmp
inc
add
lea
pop
stos
in
out
scas
mov
into
daa
clc
out
aas
xchg
fisttps
add
cltd
xchg
in
fs
jo
add
sbb
clc
mov
adc
xchg
out
pop
int3
jbe
inc
clc
repz
add
clc
nop
jae
add
jmp
pushf
call
clc
jge
clc
fimuls
mov
add
inc
clc
hlt
jecxz
je
sub
cmp
add
sar
nop
fdivrl
mov
repnz
add
add
add
add
add
aad
cmp
add
jnp
dec
mov
push
clc
lcall
ret
clc
mov
out
sbb
ret
mov
add
fs
add
add
mov
clc
pop
clc
imul
iret
or
jl
shll
sbb
das
cmp
inc
add
pop
bound
add
add
add
cmp
add
mov
adc
mov
clc
cmc
mov
rcl
test
clc
and
add
faddp
clc
std
push
push
fildll
push
in
leave
aad
add
das
lcall
add
add
add
insb
dec
push
add
sub
push
push
add
push
add
adc
pop
daa
clc
mov
inc
add
adc
add
pop
fstps
dec
icebp
cmpsl
clc
sub
addr16
xchg
loope
lods
jnp
outsl
jns
push
fsubl
add
xor
add
add
add
jb
add
add
cmp
stc
std
cmp
mov
sahf
cmp
or
jbe
clc
mov
clc
push
dec
add
add
bound
add
loopne
sub
lahf
push
xbegin
in
fiaddl
and
add
stc
push
add
imul
push
insb
inc
add
inc
add
mov
int3
mov
imul
insl
fucom
clc
and
imul
fwait
mov
out
iret
rcrl
ret
clc
pop
add
add
clc
in
pusha
add
jbe
gs
and
clc
aam
inc
clc
icebp
adc
add
sbb
add
mov
add
gs
push
add
push
or
add
adc
add
inc
clc
adc
add
test
clc
add
std
loopne
xlat
insb
mov
clc
cmp
insl
ret
movsb
clc
dec
xchg
pop
aaa
sbb
sbb
add
imul
in
push
test
mov
clc
jbe
add
add
mov
add
clc
mov
xor
push
jp
clc
xchg
dec
cmp
pop
jbe
lret
daa
clc
out
sahf
clc
dec
int
clc
adc
add
clc
paddsw
add
clc
ret
imul
add
mov
aam
clc
push
inc
add
ja
add
mov
dec
test
mov
dec
mov
f2xm1
jae
add
add
cmp
mov
add
clc
addr16
sbb
jmp
xbegin
add
out
aam
clc
push
dec
mov
add
in
shrb
repz
loopne
xchg
cmp
add
jae
add
mov
and
add
dec
dec
ret
clc
daa
clc
sbb
fnstenv
mov
fstps
mov
add
add
add
add
add
out
in
sbb
xor
add
clc
ret
clc
inc
clc
jae
add
cwtl
jle
push
add
pop
or
add
or
inc
add
in
push
aas
sbb
cmp
mov
sub
movsb
clc
mov
clc
cmp
out
movsl
clc
jnp
sbb
popf
and
add
mov
add
xor
add
add
or
xchg
aaa
clc
cmp
add
fs
and
add
mov
add
lret
sar
nop
add
faddl
add
jg
add
cmp
add
imul
cwtl
es
shll
clc
jne
cld
test
lret
add
add
xchg
xbegin
dec
mov
cmp
add
data16
test
and
and
add
cmp
add
jmp
data16
adc
add
clc
xabort
add
adc
mov
jmp
add
pop
inc
add
shll
sub
clc
jnp
clc
inc
add
lcall
test
clc
or
ret
clc
jg
add
shr
jb
add
clc
jle
pop
in
mov
add
sti
dec
ljmp
clc
or
mov
xor
test
mov
in
add
fimuls
jo
add
lret
push
push
jp
cmpsl
clc
mov
add
mov
cwtl
pushf
add
add
jmp
clc
out
add
sti
push
movsl
clc
ret
mov
clc
push
stos
es
inc
clc
and
add
aaa
mov
cmp
es
ljmp
fwait
and
add
mov
sbb
int
add
popf
pop
push
lods
push
mov
add
cmp
out
inc
add
in
mov
add
movsb
clc
leave
mov
xchg
mov
add
fnstsw
push
add
mov
add
dec
mov
and
add
orps
jmp
imul
add
leave
imulb
adc
add
mov
jle
and
add
insb
pop
sarb
sar
pop
clc
ja
cmpsb
clc
sar
ds
pusha
add
sar
push
mov
and
add
clc
xor
add
add
lahf
mov
clc
pop
stc
fadds
add
iret
cmp
clc
add
inc
clc
lret
jecxz
mov
add
xor
clc
and
add
pop
call
fildl
xchg
cmpsb
clc
or
add
es
add
push
add
mov
repnz
add
add
add
cmp
sbb
clc
push
and
add
subps
clc
mov
cmpsb
clc
mov
pop
outsb
lret
push
loopne
or
add
out
inc
clc
minss
clc
fildl
add
es
rclb
clc
fldt
jbe
clc
ja
fmul
mov
mov
and
add
jge
jbe
clc
fwait
dec
lods
mov
xchg
dec
test
repz
sbb
clc
push
sbb
and
imul
cmp
add
pop
push
rcrl
mov
add
std
jp
clc
dec
xchg
test
sar
mov
push
add
push
and
lods
jg
inc
add
cmp
repz
pop
add
add
out
jecxz
adc
clc
mov
jae
add
clc
sub
jl
xchg
bound
add
add
add
add
jl
clc
fiaddl
add
mov
jbe
pop
into
push
xor
adc
push
dec
xor
add
cmpsb
clc
push
clc
or
sub
add
clc
pushf
cmp
jnp
clc
push
add
cmp
shll
clc
sub
mov
add
add
or
cmp
clc
xbegin
insl
fistpll
adc
dec
xchg
cmp
xchg
cli
enter
mov
adc
add
je
jne
inc
add
sbb
clc
dec
add
pop
clc
or
pop
add
add
divl
add
inc
clc
jg
loop
nop
lods
inc
clc
mov
add
in
sbb
add
in
sahf
mov
clc
lods
mov
add
fisttpl
clc
sahf
jp
clc
shr
aas
dec
sar
ret
add
add
add
stos
test
push
add
in
xchg
or
out
cmc
cmp
mov
jbe
clc
xor
add
inc
clc
movsl
clc
ds
mov
mov
mov
clc
pop
jle
test
repz
pop
xchg
scas
popa
add
dec
sub
aad
add
out
xbegin
dec
in
cltd
fadd
clc
jmp
mov
negl
clc
loope
rcrb
add
mov
movsl
clc
pop
clc
jbe
add
jb
add
call
repz
add
add
jns
add
mov
imul
push
clc
jecxz
sbb
mov
xor
add
clc
sbb
out
adc
add
sub
pop
cmp
clc
in
imul
lods
xor
add
add
nop
inc
clc
cwtl
in
mov
cli
mov
clc
out
mov
iret
repnz
loop
adc
je
xchg
and
add
arpl
add
clc
mov
sbb
clc
sub
popa
add
push
add
adc
add
xchg
sub
clc
and
add
stos
and
aas
xor
add
mov
xor
and
lret
mov
mov
clc
rcl
in
not
cwtl
pop
sbb
and
add
mov
push
dec
test
dec
xor
xchg
cmp
fwait
pop
add
add
pop
ret
add
mov
adc
pop
clc
push
or
bound
add
jecxz
fs
mov
loop
popa
add
ljmp
and
add
push
cld
push
ret
xchg
dec
sub
add
stc
pop
call
cmp
repnz
jmp
clc
push
xor
ss
add
hlt
leave
int3
cld
das
add
add
out
adc
cs
or
enter
nop
cli
cmp
xchg
int
clc
cli
cmpsl
clc
ds
inc
add
popa
add
daa
clc
leave
cmpsb
clc
dec
enter
repz
cmp
clc
pop
pop
daa
clc
imul
xchg
push
add
imul
fstl
jns
inc
add
push
xor
clc
sar
add
ret
clc
push
arpl
add
add
add
mov
jle
add
xchg
or
jg
mov
mov
add
and
mov
pop
lret
mulb
and
add
inc
clc
cs
dec
mov
xchg
mov
clc
sahf
jge
mov
fwait
jmp
test
push
add
xchg
js
pop
sub
add
loopne
sbb
outsb
jl
dec
xchg
std
fiadds
add
clc
daa
clc
add
add
clc
aad
adc
add
jle
jno
add
xchg
aam
add
fistl
dec
sti
inc
clc
jne
sbb
clc
adc
add
clc
pop
or
fsubrs
or
clc
jnp
mov
clc
inc
clc
cli
scas
jno
add
lock
loopne
jge
and
add
mov
pop
scas
mov
or
clc
cmpsb
clc
and
add
add
sub
pop
int3
ficoms
mov
add
add
add
jne
clc
lahf
or
xor
decb
jl
add
mov
ja
add
outsl
pop
add
fmul
jmp
add
jle
icebp
add
add
clc
push
aaa
and
add
clc
das
cmp
sub
add
push
add
cmpsl
clc
pop
fbld
mov
shlb
add
add
clc
arpl
add
add
dec
out
push
mov
add
jl
arpl
add
fwait
jmp
and
push
sub
mov
add
pop
clc
and
add
scas
mov
cli
je
clc
push
add
mov
push
add
sar
rsm
push
add
in
iret
push
cltd
xor
add
popf
sub
add
push
ret
scas
dec
data16
add
clc
pop
cld
scas
add
add
xor
clc
shlb
add
sti
scas
lods
push
pop
jno
add
loope
sbb
add
cmp
add
cmp
clc
dec
fidivrs
cs
and
add
clc
push
add
fwait
jmp
or
fs
jmp
and
add
and
add
lret
add
clc
jecxz
push
clc
aam
xchg
pop
pop
sti
das
lahf
inc
add
inc
clc
imul
push
add
mov
jp
cli
push
add
daa
clc
faddp
clc
rcr
loopne
xbegin
add
sahf
mov
clc
cmpsb
clc
adc
add
add
mov
add
clc
pop
cmp
pop
lret
or
mov
clc
mov
jbe
mov
add
add
cmp
inc
add
sub
clc
dec
call
insl
push
add
and
scas
outsb
dec
add
add
add
fwait
jmp
nop
or
clc
cmp
add
inc
add
sub
clc
ret
clc
sub
push
pop
rcll
add
outsl
adc
add
call
jne
aad
cmp
add
flds
add
testl
hlt
pop
clc
loope
mov
cli
aam
mov
insl
loop
xchg
or
ss
mov
clc
das
mov
cmp
add
test
cmp
add
aad
clc
push
add
aaa
fstp
xchg
mov
clc
jne
clc
es
push
inc
add
cmp
clc
lock
sub
mov
push
sbb
add
add
inc
add
xor
add
ret
fwait
jmp
inc
jg
push
mov
popf
jo
add
repnz
addr16
mov
push
mov
cmpsl
xchg
add
cmp
dec
mov
add
xabort
cmp
jmp
add
pop
and
mov
cmp
add
out
fstpl
mov
add
rcrl
std
clc
jle
addr16
cld
movsl
clc
pop
mov
add
add
sbb
clc
jmp
test
addl
cmp
add
clc
insl
dec
call
clc
cmp
xchg
mov
fadds
clc
mov
test
outsl
inc
clc
fisubrs
mov
fsubs
jno
xor
add
daa
clc
jle
repnz
push
add
ret
clc
sbb
or
xchg
pop
cld
outsb
jmp
or
xbegin
mov
xor
add
xor
add
cld
xchg
ret
mulb
add
clc
cmp
and
add
lcall
inc
clc
data16
sub
iret
aam
mov
clc
aad
or
add
cltd
xor
add
push
enter
xor
add
or
sbb
add
ficomps
loope
ds
clc
mov
jge
clc
jp
aam
int3
push
add
or
mov
xor
add
clc
lods
gs
clc
mov
iret
dec
dec
je
add
scas
sbb
aas
test
mov
clc
push
add
mov
dec
pop
or
xor
add
add
clc
jbe
add
xbegin
clc
cld
or
or
jno
add
pop
dec
test
inc
clc
imul
mov
push
ret
sbb
jne
add
cmp
je
call
jmp
test
xchg
mov
dec
nop
loopne
aam
dec
jbe
das
out
lock
pusha
add
pushf
imul
repz
shrb
sub
cmp
sub
jnp
jb
add
xor
add
push
xor
add
sbb
inc
add
cwtl
inc
clc
sub
add
jp
pop
push
rcrl
add
push
sub
jle
clc
jp
clc
gs
push
add
xor
clc
push
pop
sub
lock
imull
fdivs
leave
in
adc
add
mov
clc
adc
add
sub
add
jbe
clc
lods
fildll
daa
clc
mov
add
add
add
sbb
test
add
fwait
jmp
sar
or
jecxz
add
add
add
mov
add
cli
cmpsl
clc
fidivrl
lret
imul
mov
mov
dec
mov
pop
inc
add
fstl
add
lret
inc
clc
insl
xchg
mov
clc
outsb
xor
add
lahf
aad
mov
add
push
sub
add
outsb
cmp
clc
fistps
clc
decl
jmp
and
inc
cmp
daa
clc
cltd
pop
xor
add
lahf
cli
fmuls
mov
xchg
push
outsl
pop
cmp
jae
add
xchg
in
xchg
pop
sub
popf
pop
pop
jne
xchg
cli
xor
add
adc
add
adc
clc
cld
mov
std
fwait
cli
hlt
inc
add
cmp
test
lret
imull
clc
or
outsb
jecxz
lods
and
mov
xbegin
int
add
fwait
jmp
sub
adc
clc
mov
loope
aam
lods
pop
icebp
mov
dec
push
cmp
add
jg
jmp
add
test
test
add
clc
pusha
add
inc
clc
nop
clc
cmpsb
clc
push
add
inc
add
xchg
in
jge
add
add
cmp
clc
mov
pop
cmpsl
clc
xchg
mov
clc
sbb
jmp
sub
dec
mov
or
xor
add
fidivrl
in
pop
xor
add
clc
leave
sub
cmp
sub
inc
clc
dec
lret
mov
clc
lods
popf
aad
push
add
xchg
mov
frstor
mov
lcall
lahf
sub
push
and
add
outsl
or
cmc
dec
add
add
clc
loop
pop
xor
xor
add
nop
cli
decl
jl
add
imul
lods
incl
sub
or
mov
clc
mov
add
shll
add
mov
outsb
mov
mov
sbb
imul
clc
ret
clc
ss
aam
fadd
clc
jo
add
sarb
es
or
add
and
add
add
add
mov
mov
mov
mov
add
clc
fmul
cmp
add
pop
das
mov
cmp
add
out
sahf
and
add
add
xchg
cmp
mov
add
add
inc
clc
je
clc
jl
addr16
test
aam
clc
in
sar
add
imul
clc
pop
cmp
test
xor
add
add
cmp
clc
sbb
outsl
dec
add
sub
lea
test
cmp
adc
pusha
add
std
out
lcall
out
test
mov
in
push
aas
insl
popf
push
sub
push
add
xor
add
daa
clc
nop
dec
inc
add
es
shrb
add
inc
add
dec
aam
cmp
aaa
mov
jo
add
fadd
clc
cld
sub
dec
cmpsl
clc
daa
clc
faddl
add
cmpsb
clc
add
add
clc
outsl
push
xor
add
pop
push
add
insb
cltd
repz
jle
add
shrb
aas
fwait
jmp
aas
inc
sub
test
cmp
adc
add
add
add
cmp
fs
sbb
or
add
add
test
add
jne
clc
xchg
dec
insb
outsl
xor
sub
mov
push
ret
clc
xchg
popf
mov
add
insb
rolb
add
add
xchg
xor
add
hlt
lods
dec
mov
fcoms
add
push
add
sub
add
fistps
add
adc
jo
add
adc
clc
push
mov
fwait
jmp
sub
dec
sub
std
int3
out
sbb
fistl
add
sbb
in
lods
xchg
and
add
pop
cmp
clc
inc
clc
mov
inc
clc
scas
outsb
pop
cltd
inc
clc
pushf
sbb
add
aam
and
cmp
add
adc
add
add
add
add
add
add
add
xchg
sub
inc
clc
adc
add
and
add
clc
or
clc
or
add
data16
pop
je
add
xor
clc
int
clc
add
add
frstor
add
add
clc
jge
add
pop
clc
sbb
push
in
jmp
xchg
jge
mov
xor
mov
clc
in
fbstp
mov
inc
clc
mov
add
cmp
xchg
push
test
dec
cld
push
ret
lods
jge
cmp
clc
popl
clc
pop
mov
add
add
add
inc
add
ret
hlt
dec
mov
clc
cmp
xbegin
pop
push
add
pop
push
add
fwait
jmp
outsl
xor
add
clc
cmp
mov
jo
add
das
int3
and
add
add
mov
dec
xor
add
push
es
sar
add
add
ss
clc
bound
add
add
es
inc
clc
test
dec
jb
add
add
add
clc
sub
clc
movsb
clc
cwtl
jbe
ret
clc
sub
clc
lret
cltd
lods
mov
clc
mov
mov
clc
cmpsb
clc
ja
test
add
pop
stos
or
add
clc
xchg
jbe
jge
cmp
out
pusha
add
add
add
sub
outsb
push
lea
fwait
jmp
aaa
push
scas
jb
add
mov
fwait
jmp
or
clc
or
mov
cld
push
ret
sub
dec
and
add
and
das
movups
add
add
fs
dec
arpl
add
add
mov
cmp
outsl
js
add
jns
push
cld
push
ret
imul
mov
jmp
jg
adc
clc
sahf
push
movsl
clc
sub
ret
clc
inc
add
sti
test
mov
add
sbb
movsb
clc
sbb
in
xor
add
mul
clc
and
add
add
add
add
lods
in
cwtl
cmp
xbegin
out
scas
cmp
mov
clc
insb
xabort
or
out
push
push
fwait
jmp
es
sub
fcoml
clc
lcall
mov
sub
into
adc
sub
lcall
dec
sbb
clc
ret
add
fst
mov
add
clc
or
lcall
add
shrl
clc
xchg
sub
imul
sbb
xor
add
add
call
push
add
pop
clc
sbb
or
jmp
clc
push
xor
add
push
add
int
add
jb
add
add
arpl
add
push
clc
test
push
je
fwait
jmp
scas
and
add
fwait
ja
add
in
sti
aas
jp
dec
mov
sbb
fwait
jmp
dec
fwait
bound
add
inc
clc
daa
clc
jecxz
mov
in
lock
movsl
clc
call
push
test
add
cmp
cli
mov
scas
sti
lret
imul
add
pop
clc
nop
test
push
pop
xchg
sub
popf
cmp
xchg
pusha
add
enter
push
add
bound
add
push
vmovntps
add
pop
clc
paddsb
inc
clc
mov
mov
and
add
inc
add
cmp
clc
dec
inc
clc
mov
sbb
add
clc
cld
sub
add
test
clc
mov
mov
add
clc
test
cwtl
fidivrl
negb
int3
jnp
leave
inc
add
mov
jno
add
jg
clc
push
xchg
call
add
add
jl
clc
out
fs
and
push
xchg
aam
in
sub
add
cmp
push
jge
jl
mov
int
das
xor
mov
push
jo
add
add
out
adc
add
add
mov
hlt
pop
loopne
xor
gs
lcall
clc
xchg
bswap
popa
add
dec
sar
add
movsb
clc
std
pop
xchg
adc
add
add
movsl
clc
dec
testb
mov
xchg
pop
push
clc
and
add
sub
clc
lods
xchg
jae
add
in
and
add
outsb
lock
mov
cltd
imul
jmp
fstps
jge
push
ret
clc
xor
add
clc
call
jmp
sub
and
out
push
add
dec
xor
add
xor
add
pop
fwait
jmp
lea
mov
nop
mov
hlt
mov
add
push
mov
jb
add
add
sbb
and
push
ret
insb
jge
imul
add
push
fimull
shlb
add
jg
fwait
jmp
cmp
insl
call
imul
jno
add
add
cli
fidivs
add
add
add
ret
clc
mov
xor
add
add
push
add
inc
clc
imul
clc
dec
dec
jno
add
push
fwait
jmp
pop
mov
clc
arpl
add
test
clc
jbe
and
bound
add
in
xchg
fadds
fimull
add
cld
add
push
aaa
fs
std
push
xchg
lock
mov
push
add
cmp
ret
data16
pop
push
out
out
push
adc
add
cmpsl
clc
xchg
cmp
cmp
cmp
or
lcall
clc
push
add
leave
into
xchg
dec
sar
fs
mov
sub
jg
inc
add
loopne
cmp
clc
insl
scas
stc
outsl
cwtl
inc
add
add
add
add
sar
jp
repz
jmp
add
cli
adc
add
add
pop
dec
loopne
dec
sbb
xor
add
fildll
add
test
imulb
loop
dec
das
cwtl
cmp
cmp
popa
add
cmp
std
add
add
mov
js
aas
add
idiv
inc
clc
lods
data16
jl
mov
std
xor
clc
mov
es
xor
add
push
add
mov
xchg
inc
clc
leave
push
ret
fwait
jmp
cmp
out
push
and
add
clc
jl
jp
add
mov
int3
pop
mov
sar
inc
add
xchg
mov
add
shlb
fistl
std
pop
inc
clc
bound
add
out
es
shl
clc
push
fsubl
cmp
inc
add
mov
dec
adc
pop
clc
adc
add
inc
add
sub
into
lret
decb
dec
sar
clc
push
add
stos
lahf
lods
pop
clc
imul
add
fnstcw
or
add
dec
jl
add
popf
or
clc
mov
add
sbb
enter
add
fcoml
nop
add
fwait
jmp
popa
sti
xor
add
imul
xor
add
outsl
lock
add
sub
pop
cltd
in
inc
clc
adc
add
clc
arpl
add
je
sar
clc
fcmove
push
pop
mov
add
pop
test
add
fadds
add
sbb
hlt
test
pop
sar
add
ss
mov
add
mov
call
bound
add
add
pop
lcall
xor
add
fs
ja
clc
mov
add
xor
shrl
add
inc
add
shll
add
inc
clc
test
cmp
pop
sbb
idivl
clc
jno
add
add
fisttpll
lock
cmp
add
pop
xchg
loop
jge
pop
aas
in
dec
cmpsl
clc
jmp
shlb
add
xabort
daa
clc
hlt
jp
jge
ret
clc
aas
jbe
das
jecxz
push
inc
clc
hlt
fbstp
pop
push
in
js
rclb
and
add
sbb
aas
and
add
gs
in
das
je
pop
clc
sbb
loop
push
ret
sub
or
inc
add
xchg
xchg
ret
and
add
sub
or
jnp
add
jnp
loopne
enter
jno
add
insl
fs
xor
add
or
add
sub
mov
and
add
ret
xbegin
arpl
add
sbb
add
flds
add
or
daa
clc
in
and
add
ret
push
add
xor
add
add
pop
xchg
or
and
fnclex
clc
fwait
ret
clc
jmp
repnz
movsl
clc
movsb
clc
roll
xlat
push
mov
fwait
jmp
andb
add
xchg
cmp
jecxz
mov
rep
fwait
jmp
cmpb
fwait
sbb
jmp
lea
lods
data16
std
pop
mov
mov
sub
clc
push
mov
jle
xchg
mov
adc
add
add
clc
and
add
push
cld
push
ret
fwait
mov
fs
pop
mov
clc
jbe
clc
loope
or
add
inc
add
push
xor
fwait
jmp
dec
jno
sub
or
inc
clc
sbb
negl
cli
pop
clc
or
clc
push
sar
pop
fwait
jmp
dec
test
cmpsb
push
add
lahf
in
repz
add
add
jle
daa
clc
add
addr16
iret
or
xor
add
dec
mov
aas
dec
mov
jp
clc
fnsave
add
xchg
xchg
clc
cs
aad
out
insl
loop
outsb
sub
add
add
add
cs
mov
fsubrl
add
bnd
add
repz
add
clc
and
add
in
cmp
clc
pop
push
int3
call
add
mov
add
add
or
add
lock
jecxz
cmp
cltd
push
add
mov
jbe
cld
push
ret
ja
xchg
movsl
clc
and
add
add
add
xor
add
add
fwait
jmp
mov
clc
jnp
jno
add
mov
dec
cmp
add
sbb
hlt
incl
nop
outsl
or
or
cmp
lahf
int
sar
pop
clc
sti
and
add
clc
xor
clc
cmp
mov
add
mov
or
push
ret
aaa
adc
add
xlat
pop
xor
adc
add
push
or
sar
clc
xchg
dec
mov
clc
bound
add
dec
ja
cs
jne
int
pop
imul
inc
clc
or
clc
add
inc
add
inc
add
xabort
xor
add
push
lret
test
fldcw
and
data16
or
add
add
add
mov
clc
int3
nop
imul
add
popa
add
repnz
add
inc
add
add
leave
shrb
jmp
mov
add
add
sahf
cmpsl
clc
pop
sarb
clc
pop
test
lock
test
mov
aaa
je
add
adc
add
push
enter
gs
cmp
add
add
std
pop
or
push
fwait
jmp
and
sub
dec
push
push
add
add
xbegin
pop
jno
add
add
pop
js
clc
sarb
mov
out
popl
add
in
adc
add
xor
add
stos
roll
add
rep
fwait
jmp
aaa
xchg
push
nop
jmp
cmp
add
xchg
jae
add
cmp
add
es
mov
clc
xchg
loopne
int3
aas
ja
mov
push
add
test
add
add
lret
popa
add
cli
je
clc
lock
out
cmp
insb
cld
mov
add
fildl
push
negl
inc
add
sbb
push
dec
mov
add
sbb
lods
jae
add
add
add
push
add
add
inc
clc
clc
popf
or
clc
hlt
inc
add
sub
rorb
ret
add
xchg
hlt
mov
cli
in
daa
clc
arpl
add
push
cld
push
ret
push
add
pop
imul
add
mov
fsubrl
add
clc
jns
mov
clc
sbb
sub
dec
cmp
fildll
clc
movsl
clc
movsb
clc
dec
fidivrl
cmp
imul
cs
add
out
push
add
sahf
dec
hlt
sarl
clc
sbb
jmp
push
nop
dec
loope
cmp
add
addr16
or
js
clc
movsl
clc
scas
ljmp
jo
add
cmp
mov
pop
scas
inc
add
lea
ljmp
fwait
jmp
sub
push
lods
int
pop
pop
mov
add
sar
dec
push
call
sub
jl
outsl
jle
clc
rcrl
dec
add
add
add
cmpsl
clc
add
add
push
add
repz
mov
mov
test
pop
mov
cwtl
add
add
add
clc
and
outsb
imul
clc
int3
stos
sub
clc
cmp
add
leave
pop
pop
xchg
mov
pop
mov
xchg
adc
push
popa
add
cmpsb
clc
fimull
mov
jg
clc
lock
sub
adc
add
rorb
movsb
clc
sbb
or
mov
jecxz
int3
fldenv
add
cltd
sub
fmuls
out
rcr
sbb
pop
sar
add
jne
add
das
sahf
insl
pop
rcll
add
jo
add
add
clc
jnp
xlat
sbb
je
cmp
pop
fstl
add
add
adc
add
mov
clc
call
xchg
cmp
sbb
imul
add
clc
push
cmp
add
push
or
jo
add
hlt
inc
add
sub
clc
inc
clc
movsl
clc
movsl
clc
mov
ljmp
jg
bound
add
add
lret
xor
add
imul
inc
add
dec
inc
add
inc
clc
pushf
mov
clc
xlat
and
add
in
inc
clc
pop
mov
push
clc
pop
clc
enter
fucomi
inc
add
rclb
add
add
lock
sub
outsl
aas
xor
add
clc
stos
add
add
clc
mov
repz
js
clc
mov
mov
clc
enter
add
mov
inc
clc
mov
loopne
lret
jno
add
clc
shll
mov
cmp
clc
inc
add
xor
add
sahf
mov
add
lock
enter
mov
sbb
popa
add
inc
add
adc
add
add
add
add
lods
enter
vmovups
add
add
cmpsl
clc
dec
jg
push
int
mov
test
clc
xabort
lods
lods
scas
mov
add
sub
mov
mov
fwait
jmp
add
clc
xchg
cmp
clc
movsb
clc
fnstcw
dec
pop
icebp
mov
add
push
out
cld
push
mov
add
cmp
hlt
jl
repz
push
cld
push
ret
data16
xchg
or
add
mov
push
xchg
cmp
clc
push
add
xchg
je
mov
mov
cld
push
ret
xchg
cmp
ja
mov
add
clc
xchg
scas
dec
sahf
popf
addr16
cmp
add
add
add
outsb
push
add
cmp
xchg
jno
add
add
add
clc
xor
fbld
es
cmp
clc
popf
xlat
cwtl
or
sbb
or
add
clc
test
in
add
add
out
out
xor
add
clc
sub
add
add
xchg
fimuls
add
pop
clc
arpl
add
add
jne
scas
xchg
vunpckhps
jmp
xor
add
xor
add
clc
out
and
add
add
clc
testl
mov
repnz
pushl
jg
push
push
clc
lahf
mov
xchg
mov
add
cld
lahf
add
pop
xchg
push
loopne
fstps
cmp
clc
xchg
lret
js
xchg
or
add
stc
jle
add
add
in
xchg
mov
faddl
clc
shll
add
cwtl
dec
dec
dec
or
std
add
or
cmpsb
clc
jmp
movsl
clc
xor
clc
jp
enter
fwait
mov
sub
add
mov
cmp
adc
push
ret
outsl
cmp
lret
sbb
add
jle
clc
push
add
in
push
rcll
or
add
icebp
mov
add
push
mov
pop
cmp
add
clc
sar
add
inc
clc
fstpl
popa
add
mov
das
stc
jecxz
xchg
loop
xchg
lock
js
jecxz
xchg
sti
push
or
sub
clc
jo
add
add
jmp
cbtw
mov
or
clc
sub
jo
add
ljmp
add
stc
push
clc
jp
jmp
dec
loope,pt
int3
test
out
lods
dec
jl
xlat
cmpsl
clc
mov
das
in
enter
add
cmp
add
add
lods
test
iret
dec
lock
bound
add
jle
clc
push
mov
aad
inc
add
in
pop
jno
add
add
out
pop
clc
imul
add
mov
jmp
jno
insb
cmp
sbb
xor
add
clc
cmp
clc
adc
add
fwait
jmp
lods
nop
mov
shl
cwtl
sbb
pop
in
out
adc
add
add
clc
push
das
testl
add
in
xlat
cmpsb
clc
inc
clc
outsb
addr16
in
clc
sahf
idivb
mov
and
add
lcall
push
pop
jae
add
addr16
fldenv
add
cwtl
lods
jp
test
mov
aam
loop
cld
pop
or
repnz
fcoms
add
cmp
add
int
fimull
fwait
and
add
add
mov
clc
scas
jno
add
gs
mov
add
xchg
xor
add
movsb
clc
cmp
stos
mov
into
mov
clc
lea
add
ret
seto
imul
iret
push
cmp
in
ds
pop
lock
xor
or
or
mov
lock
inc
add
sub
or
cld
call
push
ret
jge
scas
scas
or
clc
pusha
add
pop
ret
clc
icebp
mov
adc
out
mov
push
mov
clc
mov
clc
insb
xchg
adc
add
push
add
in
dec
or
push
add
inc
add
or
jno
add
jge
clc
mov
clc
cs
add
insb
cmc
cmpsb
clc
dec
sub
mov
xor
add
ret
clc
and
add
incl
push
ret
add
and
add
cmp
xor
add
push
pop
ljmp
in
mov
push
fcomps
clc
xchg
sbb
jl
push
push
add
imul
clc
fwait
dec
je
fsubrl
sti
xchg
cmp
add
inc
clc
push
clc
sahf
out
in
fldenv
sbb
clc
or
and
add
push
pusha
fwait
jmp
dec
sub
cmp
fsubl
clc
mov
clc
je
dec
adc
add
arpl
add
and
add
or
test
dec
jg
add
daa
clc
and
add
clc
jb
add
movsb
clc
cmp
les
push
ret
test
jecxz
xor
adc
add
sbb
das
sbb
jp
pop
rcll
push
fsubl
pop
xor
add
decl
fwait
jmp
pop
pop
ja
and
add
dec
imulb
int3
icebp
sbb
clc
pop
clc
xchg
scas
loope
nop
cmpsb
clc
fiaddl
repnz
pop
movsl
clc
cmc
into
inc
clc
sub
or
add
fnsave
scas
push
xchg
push
test
fwait
divl
fwait
jmp
sub
mov
add
gs
cwtl
push
xchg
sbb
cmp
into
jg
sub
in
movsb
clc
fldcw
mov
mov
clc
clc
cmpsl
clc
sbb
mov
aas
push
xbegin
popa
add
dec
xor
add
add
cmpsl
clc
xabort
cmpsl
clc
pop
push
mov
clc
rol
clc
out
cmp
loope
xchg
in
jmp
sahf
xchg
push
add
mov
int3
out
dec
jl
clc
lret
cwtl
and
add
cli
xchg
mov
shrl
fs
pop
mov
fisubrl
mov
push
cmp
ljmp
lret
fwait
jmp
or
pop
add
add
fs
call
int3
aam
add
inc
clc
stc
mov
in
in
xor
add
fldcw
add
iret
dec
outsl
sti
sar
sub
dec
mov
leave
jno
add
add
pop
xchg
add
add
inc
fwait
jmp
movsb
dec
push
dec
jne
out
scas
jne
add
add
add
mov
jns
scas
and
add
leave
repnz
add
mov
mov
es
mov
shlb
in
xor
add
clc
mov
jae
add
data16
mov
in
jecxz
pusha
add
in
ja
mov
jne
or
pop
clc
outsb
and
add
fwait
jmp
nop
or
loope
aam
mov
ret
add
lret
scas
xchg
bound
add
and
add
add
outsl
popf
inc
clc
out
shll
add
clc
mov
add
fadds
stos
mov
iret
add
xlat
adc
adc
lcall
lcall
cmc
inc
add
test
xbegin
mov
mov
push
add
xbegin
add
add
std
push
add
insb
inc
clc
xchg
jns
add
and
add
sub
loop
scas
mov
into
mov
mov
add
and
xchg
lcall
fwait
jmp
sub
pop
sbb
push
xor
add
fs
das
push
nop
clc
mov
inc
add
out
negb
mov
mov
gs
xchg
dec
pop
clc
cmpsl
clc
jnp
jle
clc
fldcw
test
sbb
jmp
out
std
mov
gs
sar
mov
fwait
jmp
or
and
sahf
sbb
and
add
icebp
mov
xor
add
bound
add
clc
push
mov
add
inc
clc
cli
hlt
inc
add
sbb
lret
mov
xchg
add
pushf
xchg
mov
jl
inc
add
ja
test
add
add
fs
push
sbb
nop
mov
decl
rolb
jno
and
xabort
clc
xchg
mov
sbb
push
ljmp
std
repz
add
xchg
mov
pop
fistps
dec
xor
add
add
cmpsb
clc
fs
sub
enter
sar
clc
stos
shl
clc
cmp
ljmp
sbb
sbb
loope
fwait
divl
test
clc
or
cli
xchg
dec
jns
sbb
clc
and
add
mov
add
data16
arpl
add
cmp
loopne
repz
mov
add
lock
add
pop
fld
clc
jge
enter
lret
mov
clc
xor
add
ret
mov
ret
clc
push
add
movsl
clc
or
cmpsb
clc
fbstp
add
xbegin
mov
in
fdivr
pop
ss
add
add
inc
clc
mov
jmp
jmp
adc
adc
add
add
add
in
cvtdq2ps
lahf
add
fstps
jns
mov
pop
cmc
jl
add
stos
fimull
clc
insl
sub
sub
fsubrs
push
add
jecxz
xchg
dec
add
add
pop
sbb
add
jo
add
jg
jle
add
imul
mov
clc
lods
mov
add
add
add
jle
aaa
and
add
nopl
add
jb
add
clc
rcrb
xchg
sbb
push
add
sub
mov
clc
idivb
add
add
clc
jns
incl
mov
add
test
add
cmp
stos
inc
add
sbb
jno
add
add
add
add
clc
lret
pusha
add
jp
sub
aaa
or
inc
add
pusha
add
fists
clc
mov
call
fwait
jmp
mov
add
popa
add
pushf
or
xchg
scas
nop
add
add
mov
add
mov
add
into
mov
pusha
cld
push
ret
sub
sub
sbb
clc
js
xor
add
repnz
cmp
push
fimull
sbb
cli
fwait
jmp
sub
cmp
add
clc
mov
lahf
inc
add
lea
push
add
ret
clc
adc
add
add
pop
sub
clc
mov
xor
sar
xor
fwait
jmp
sub
pop
addr16
outsb
adc
clc
mov
push
jo
add
clc
cltd
push
add
cmp
std
fnstcw
fistpll
clc
pop
jle
stos
dec
lea
push
jnp
clc
dec
addr16
aad
add
add
add
daa
clc
enter
xor
add
add
dec
cmp
popa
add
popa
add
mov
sbb
or
add
imul
pop
pop
repnz
cmpsb
clc
cmp
data16
cwtl
push
cmp
add
loopne
js
sar
clc
lods
cmp
clc
push
add
xbegin
bnd
mov
clc
cld
inc
add
push
add
cmc
sub
fldt
js
and
inc
clc
cmp
xchg
mov
mov
add
sbb
fwait
cmpsl
clc
and
add
add
nop
xchg
loop
mov
jp
cmc
push
add
adc
add
jno
add
clc
mov
add
add
add
clc
testl
jmp
push
sub
xor
scas
xlat
dec
xchg
nop
cmp
pusha
add
push
add
inc
add
repnz
jecxz
sub
dec
xor
add
xchg
cmp
repz
push
lods
insl
pop
mov
clc
in
scas
fisubrs
add
aaa
ficomps
mov
or
add
sub
cmp
imul
int3
mov
add
lods
xchg
mov
add
mov
mov
add
add
mov
clc
bound
add
clc
dec
add
add
clc
xor
push
add
test
aad
inc
clc
mov
clc
ret
clc
dec
gs
sub
into
mov
clc
sbb
and
add
lcall
xchg
dec
jle
mov
xchg
mov
fwait
cmpsl
clc
rcrl
lret
or
mov
mov
popa
add
enter
out
call
jmp
pop
sbb
test
mov
fwait
sar
and
add
add
mov
add
add
mov
xchg
xor
lret
inc
add
cmpsb
clc
mov
clc
test
pop
sub
add
push
push
fwait
jmp
mov
clc
cmp
xchg
mov
push
clc
ret
clc
xchg
jb
add
pop
scas
rorb
cmp
push
in
shll
add
pop
clc
dec
lods
loope
scas
dec
xchg
stc
arpl
add
in
mov
add
add
lret
sbb
jae
add
and
repnz
bound
add
add
or
add
frstor
xlat
imul
or
clc
movsb
clc
gs
int
mov
push
addr16
call
clc
inc
add
mov
push
add
jbe
add
mov
incl
jne
fwait
jmp
and
inc
add
jle
push
clc
pop
clc
jo
add
clc
adc
add
stos
cs
sub
clc
xor
mov
fwait
jmp
push
test
or
fwait
jmp
mov
jge
mov
aaa
pop
xor
sarb
add
cmp
clc
push
dec
add
add
clc
test
clc
lea
clc
stc
dec
dec
test
frstor
add
dec
pop
shll
add
loop
scas
cmp
clc
mov
lea
add
push
add
arpl
add
inc
clc
cmp
clc
add
add
inc
add
push
sbb
add
aas
call
add
test
lahf
push
add
fwait
jmp
xor
jecxz
int
sbb
test
pop
mov
jb
add
add
ror
cmp
clc
mov
movaps
clc
jo
add
rcll
add
add
dec
inc
clc
mov
xchg
addr16
adc
add
cmp
add
lock
aaa
xchg
loop
clc
loopne
sbb
clc
jmp
clc
adc
add
add
scas
inc
clc
aas
outsb
sti
fldt
loopne
inc
add
mov
xchg
decl
int3
jge
add
sub
ja
push
mov
fwait
jmp
jno
pop
or
jo
add
clc
inc
add
adc
add
mov
pushf
sbb
mov
jnp
add
pop
sub
jge
pop
jmp
fwait
jmp
push
inc
clc
cmp
clc
mov
add
add
clc
pop
add
add
clc
xchg
add
pop
iret
xchg
adc
jnp
cli
mov
jns
and
and
jae
add
pop
clc
sub
in
je
add
cmpsl
clc
repz
out
mov
add
test
clc
push
add
cmp
add
pop
test
cld
mov
or
popa
add
and
add
icebp
bound
add
cmp
add
add
insl
ljmp
push
add
inc
clc
idiv
pop
mov
add
add
clc
ljmp
out
jle
sti
push
out
pop
mov
xor
add
add
add
add
pop
mov
sub
je
jae
add
mov
ljmp
clc
mov
add
cmp
add
add
fwait
jmp
call
mov
add
inc
clc
add
xchg
decb
ja
fadd
clc
pop
mov
add
xchg
mov
mov
aas
test
nop
clc
cmp
mov
adc
add
add
add
cld
in
sub
negl
add
sahf
data16
daa
clc
out
and
mov
clc
mov
int3
mov
jno
add
pop
mov
add
or
clc
or
clc
iret
clc
jo
add
clc
shl
pusha
add
pop
mov
add
adc
add
push
ret
and
jp
scas
xchg
jno
add
add
jbe
xchg
jecxz
nop
daa
clc
push
pop
nop
mov
clc
pop
stos
insb
and
add
fiadds
inc
clc
fmul
jl
sub
clc
adc
clc
sbb
jp
clc
cmp
clc
and
add
pop
push
add
dec
mov
xor
add
add
add
or
cmp
sbb
xor
add
clc
inc
add
xabort
in
cmp
xchg
pushf
adc
jns
jbe
and
add
ret
mov
clc
roll
data16
fisttps
jmp
sar
add
pop
es
adc
add
add
add
mov
add
cmp
xor
add
jno
add
leave
in
shr
aaa
jbe
fs
push
add
data16
jae
add
fcompl
push
clc
adc
mov
cmp
mov
sbb
and
add
sbb
dec
daa
clc
clc
insb
or
add
sbb
add
mov
add
sub
sahf
add
stos
adc
getsec
cmpsb
clc
push
add
dec
adc
sbb
push
ret
dec
inc
or
rorb
or
mov
push
mov
add
daa
clc
cmp
jge
movsl
clc
lret
dec
mov
in
xchg
int
nop
jp
jne
ljmp
in
clc
test
or
clc
addr16
push
pop
jnp
flds
stos
test
clc
sbb
inc
clc
jne
pop
cld
push
ret
jge
inc
pop
xabort
dec
sub
clc
data16
mov
xchg
aaa
rcrb
mov
fs
test
and
ja
mov
iret
lcall
mov
cmp
clc
cmp
fildl
clc
jnp
clc
outsb
sub
add
cltd
cmp
add
leave
rcll
add
add
cmpsl
clc
jp
daa
clc
cld
stc
divl
shlb
clc
out
jmp
clc
xchg
lock
add
cltd
add
add
clc
jns
cmpsb
clc
cmp
jnp
movsl
clc
add
add
clc
lret
mov
fstps
add
clc
sbb
xchg
xor
add
js
add
push
mov
adc
add
jecxz
dec
jge
clc
cmp
push
sub
mov
fiadds
or
fidivrs
add
add
pop
inc
add
imul
iret
mov
insl
movsb
clc
add
enter
xor
push
imul
jmp
pop
rclb
add
pop
or
adc
push
out
mov
clc
cmp
add
into
push
fdivrp
lcall
mov
jg
mov
jge
adc
add
lret
dec
inc
add
popf
xchg
xchg
xlat
xor
add
add
add
inc
add
mov
push
add
sub
add
hlt
xor
xchg
sarb
sbb
clc
add
add
das
dec
add
mov
lea
ret
clc
xchg
jns
ficoms
add
add
mov
mov
clc
out
xor
add
sar
add
cwtl
pop
dec
fldl2t
negb
int
int3
ret
clc
fwait
loope
outsl
cmp
and
or
clc
dec
pop
in
pop
test
ret
clc
stos
xabort
sbb
pop
lods
nop
cli
in
loopne,pn
cmp
clc
inc
clc
mov
into
fs
xchg
add
add
es
pop
cmp
lret
idiv
test
xchg
fistpll
aas
or
add
sar
cli
dec
pop
mov
add
fwait
jmp
shlb
mov
mov
mov
cmp
sbb
add
repnz
ficoms
add
popl
inc
clc
cmp
repnz
std
movsl
clc
nop
filds
test
jae
add
movzwl
fwait
jmp
xor
clc
repz
add
fucompp
imul
data16
xchg
mov
popf
cltd
jecxz
push
add
xor
clc
mov
leave
mov
clc
lea
mov
add
cmp
mov
add
inc
add
dec
scas
pusha
add
nop
and
pop
cmp
shrb
clc
imulb
add
cmc
mov
clc
call
mov
daa
clc
es
pop
and
mov
clc
nop
data16
cmpsl
clc
xchg
loop
es
fs
sahf
inc
add
adc
add
jle
dec
pop
in
push
mov
dec
cmp
xchg
or
add
cmp
add
mov
push
add
pop
xchg
ds
jmp
imul
add
insb
mov
add
dec
pop
clc
xor
ja
pop
push
daa
clc
xchg
dec
cli
lahf
jmp
sub
stos
sbb
clc
xchg
sbb
addr16
jg
clc
xchg
out
xor
add
gs
xchg
dec
imul
ret
clc
xchg
jge
add
xlat
mov
clc
dec
jg
clc
ljmp
sbb
clc
jo
add
mov
pop
mov
aam
sub
add
xor
add
and
add
sar
xor
add
pop
popf
loope
sar
cmp
pop
mov
dec
ficomps
and
jnp
clc
mov
insb
or
add
xchg
call
mov
push
add
pusha
add
ficompl
add
pop
sbb
inc
add
call
add
rep
fwait
jmp
sub
add
mov
and
add
imul
clc
imul
add
adc
add
clc
pop
loope
xchg
or
add
clc
lcall
aaa
stos
mov
cmp
xor
clc
cmp
decl
add
add
inc
sub
clc
loope
xor
add
add
jg
clc
cltd
aam
add
add
lods
mov
add
clc
push
sbb
ret
add
push
aaa
lods
adc
add
jl
inc
add
cmpsb
clc
push
aas
dec
cmp
add
add
add
xor
add
clc
in
xchg
push
es
sub
clc
int
clc
xbegin
clc
or
add
fmull
pop
inc
add
repnz
stc
or
add
adc
add
shll
xchg
es
pop
into
pop
arpl
add
add
jnp
push
mov
fwait
jmp
das
icebp
mov
add
std
cmp
stos
int3
push
mov
add
fwait
jmp
mov
clc
mov
clc
or
jb
add
mov
push
add
clc
xor
add
add
enter
xchg
xor
add
and
add
sub
jo
add
or
jmp
add
cwtl
adc
add
mov
sbb
and
add
sub
testb
add
clc
fs
and
add
xor
add
clc
and
add
clc
or
and
add
sub
mov
lods
inc
add
mov
imul
fisttpl
dec
xor
ret
xchg
push
add
xchg
aam
mov
fldenv
add
inc
add
jg
add
cs
sbb
add
clc
dec
das
pop
mov
add
cmp
hlt
pop
xbegin
xor
add
mov
add
stc
mov
jmp
add
pop
pop
loope
or
add
mov
fdivl
add
clc
or
clc
aam
and
add
sub
addr16
and
arpl
add
cld
cmp
add
add
fnstsw
clc
clc
inc
clc
xchg
sti
movsl
clc
mov
xchg
mov
xchg
pop
ficompl
add
pop
leave
loopne
mov
add
add
dec
pusha
add
cmp
clc
pop
add
add
clc
add
add
je
add
hlt
imul
sbb
jmp
clc
add
add
fcos
ljmp
ja
ret
push
sub
fwait
jmp
imul
add
icebp
test
cmp
data16
movsl
clc
jmp
add
push
xchg
ficoms
fcomip
cmp
clc
sar
jge
sbb
aad
in
insb
push
clc
xor
push
fwait
jmp
je
and
cwtl
jmp
clc
test
test
mov
clc
dec
mov
mov
rcrb
into
fisttpll
xabort
add
rcr
fst
lret
outsl
sub
add
jbe
clc
mov
add
mov
clc
dec
outsb
mov
xor
add
pop
xchg
mov
ja
push
xchg
jg
jnp
lock
clc
jae
add
add
divl
sbb
clc
mov
add
imul
xor
clc
daa
clc
in
inc
clc
mov
sbb
jp
add
and
add
clc
add
add
mov
stos
ficoml
add
in
or
pop
add
add
add
add
nop
inc
clc
dec
test
pop
dec
push
add
fwait
jmp
data16
pop
fwait
jmp
cmp
pop
sub
jno
add
add
insl
or
sub
or
xchg
jmp
cld
pop
es
stc
sbb
data16
aad
clc
xlat
aad
clc
inc
clc
std
cmpsb
clc
or
repz
clc
xchg
cli
mov
clc
in
mov
mov
add
xlat
inc
add
cmp
add
fildll
mov
sub
pop
mov
add
pop
sub
je
add
jg
add
test
fbld
add
add
rol
clc
cmp
pop
add
add
add
cmp
add
mov
cltd
inc
clc
jno
add
fistps
jl
mov
add
clc
add
add
clc
ja
pop
add
add
clc
aas
inc
clc
mov
clc
push
mov
mov
add
js
add
in
push
jmp
cmp
clc
xbegin
loopne
repz
xchg
aam
xchg
jmp
cld
clc
or
aam
fdivrl
xchg
or
add
mov
mov
mov
sbb
jmp
das
das
stc
pop
inc
clc
int
mov
clc
adc
add
clc
cmpsb
clc
cmp
clc
test
jb
add
dec
es
jnp
test
push
jg
clc
test
mov
mov
clc
cmp
clc
lods
aas
imul
push
add
ljmp
push
clc
inc
add
sbb
leave
xor
add
push
add
fwait
jmp
xor
or
sahf
mov
sub
xor
add
xor
cmp
sbb
aaa
mov
mov
jmp
sub
sub
and
add
jbe
fwait
jmp
xor
into
in
push
add
add
outsl
popa
fs
jmp
outsl
aam
clc
lret
sbb
xor
sar
out
mov
add
add
add
clc
jecxz
adc
add
bound
add
clc
jae
add
add
add
jle
add
add
add
fxtract
sub
clc
push
jmp
fwait
jmp
sub
jno
add
or
jno
add
add
adc
fwait
jmp
jge
sub
je
mov
clc
push
fsubl
call
sbb
mov
inc
clc
mov
add
push
imulb
lods
icebp
clc
leave
xor
add
add
pushf
imul
clc
xor
add
clc
xchg
or
add
xor
add
pop
out
mov
add
ret
clc
fldenv
add
push
add
dec
push
jmp
mov
sub
je
mov
and
sar
pop
lret
fldl
ret
clc
jp
clc
icebp
inc
add
popa
add
rolb
add
and
add
imulb
pusha
add
iret
in
inc
add
dec
cs
clc
test
clc
popf
and
dec
or
cmp
clc
mov
clc
mov
dec
cmpsl
clc
ret
clc
cmp
scas
inc
clc
int3
mov
bound
add
xor
add
inc
add
jle
xor
add
stos
mov
and
add
dec
add
add
or
mull
clc
jge
aas
cmp
mov
cmp
inc
add
call
clc
int3
sahf
and
add
push
mov
mov
clc
jo
add
add
add
add
adc
add
pop
dec
mov
js
xor
fwait
jmp
nop
xchg
push
add
push
add
in
dec
fsubrl
dec
cli
cmp
add
xor
inc
clc
xchg
and
add
add
sbb
rep
fwait
jmp
fwait
add
fstps
add
add
insb
rcrb
jnp
or
clc
aas
arpl
add
clc
jl
add
adc
add
clc
in
loopne
repnz
xchg
int
or
pop
stos
inc
clc
xor
clc
test
add
popf
push
add
jge
add
add
idivb
lods
imul
loopne
outsb
pop
jo
add
mov
add
int3
sub
nop
lods
cmp
clc
out
add
add
aas
es
sbb
add
sub
sub
lods
mov
adc
add
pop
arpl
add
cmp
xchg
pusha
add
inc
add
mov
jge
fwait
jmp
test
xor
clc
cmpsb
clc
stos
push
add
inc
add
stos
push
sub
shl
repz
jnp
lret
xchg
xchg
jp
std
mov
add
xor
add
mov
div
inc
clc
jmp
jmp
outsl
lods
fwait
adc
fbld
scas
fists
add
and
add
add
cwtl
cmp
ds
push
in
cmp
clc
cmp
push
clc
jnp
into
xchg
sbb
clc
cmp
push
shl
clc
mov
inc
clc
fildl
clc
cld
dec
xor
add
std
and
add
adc
add
out
add
add
push
add
clc
cmp
add
roll
add
mov
dec
in
cli
add
add
push
fbstp
add
add
cmp
mov
add
add
mov
add
add
adc
cwtl
addr16
pop
xchg
cld
insl
sub
dec
lret
addr16
jg
add
mov
clc
negb
add
adc
add
fwait
jmp
xor
sub
sti
sarl
fnsave
fs
popa
add
in
std
ljmp
cmp
shrl
mov
fisttps
out
xchg
mov
ljmp
fwait
jmp
inc
dec
sub
and
add
add
mov
cli
stc
fldenv
xbegin
adc
xlat
push
mov
add
jne
clc
jbe
inc
add
sar
icebp
xabort
and
add
pop
xor
add
and
add
jge
gs
divl
mov
push
scas
inc
add
add
push
outsl
fwait
jmp
fs
je
xchg
scas
jno
add
sbb
add
icebp
sub
lahf
or
add
lahf
icebp
stos
cmpsl
clc
xor
add
mov
add
fwait
jmp
fcoml
mov
mov
fwait
jmp
movsb
push
fs
data16
cmp
clc
mov
movsb
clc
adc
bound
add
nop
and
add
add
pop
aad
in
daa
clc
loop
cmp
add
xor
xlat
add
sub
add
dec
out
adc
add
jmp
sub
sub
add
mov
and
inc
add
test
dec
push
add
fwait
jmp
cltd
lcall
stos
add
add
cvtpi2ps
and
lock
add
loope
scas
inc
clc
in
int3
pop
insb
decb
clc
outsb
lret
add
sti
push
mov
imul
add
repnz
in
data16
cmp
clc
xchg
neg
aas
aad
add
xor
add
jns
and
add
clc
xor
push
or
add
mov
inc
add
imul
ljmp
jmp
or
or
jo
add
or
enter
imul
aas
pushf
add
add
clc
cs
mov
in
call
jmp
imul
adc
or
out
pop
call
clc
xabort
clc
mov
jb
add
jne
clc
mov
push
ret
je
imul
cmpsb
clc
repz
loopne
xchg
scas
sar
jp
xor
psadbw
pop
es
xbegin
sar
clc
out
cmpsl
clc
loope
bnd
push
clc
sti
sub
push
add
mov
add
mov
inc
clc
icebp
bound
add
mov
add
imul
loop
cld
push
ret
inc
scas
jbe
and
add
xor
add
add
cld
push
ret
mov
inc
add
sarb
push
add
fwait
jmp
pop
pop
pop
pop
clc
ljmp
jmp
sub
sub
xchg
sbb
ljmp
test
jo
add
add
in
sbb
clc
mov
mov
cwtl
mov
add
mov
or
fwait
jmp
pop
pusha
add
dec
push
idivl
sub
add
pop
imul
add
pusha
add
mov
dec
dec
dec
mov
clc
add
add
push
mov
xchg
mov
rcrb
insl
dec
mov
cmp
enter
das
push
push
add
into
xor
add
imul
or
shlb
test
fcomi
pop
add
add
out
pusha
add
out
xchg
xbegin
test
cmp
add
clc
jg
add
mov
push
add
adc
add
mov
add
or
and
add
push
cmpsb
clc
cmpsb
clc
out
mov
insl
lock
das
in
in
jl
clc
mov
and
add
bound
add
dec
cmp
clc
xor
add
add
stos
xchg
cmp
pop
movsb
clc
mov
data16
lret
clc
clc
inc
clc
push
clc
nop
out
in
leave
dec
add
add
clc
push
lea
fwait
jmp
outsw
add
push
add
data16
add
xor
add
add
add
int3
and
add
jecxz
lcall
push
scas
jl
add
xchg
into
sub
cs
sbb
push
sub
add
mov
pop
daa
clc
pop
in
arpl
add
and
jmp
sub
incl
jne
fwait
jmp
dec
sub
fidivrs
and
add
dec
jle
add
pop
enter
int
add
xchg
test
cmp
dec
movsl
clc
sahf
dec
je
imul
and
add
inc
clc
mov
pop
push
jb
add
pushf
lret
mov
iret
pop
movsl
clc
xchg
mov
ret
clc
inc
add
cmp
add
aas
jb
add
sub
jecxz
inc
clc
fs
mov
jae
add
test
ret
clc
lcall
cld
push
ret
inc
dec
pop
cmc
mov
pop
fwait
jmp
or
cmpsb
movsb
aas
mov
add
add
sbb
sbb
cmc
and
add
inc
add
add
add
add
mov
add
shll
add
fidivs
and
clc
or
mov
aaa
sbb
pop
mov
adc
int3
cmpsb
clc
ja
jo
add
test
cld
push
ret
es
out
dec
mov
fsubs
add
gs
mov
sbb
push
lahf
adc
add
clc
out
cmpsl
clc
push
add
xchg
mov
aaa
loope
maxps
add
sub
call
daa
clc
daa
clc
fstpl
add
mov
add
add
jle
pop
xor
add
mov
rol
clc
pop
push
add
std
in
sub
clc
in
call
call
test
cmp
mov
repnz
add
addr16
jne
mov
add
pop
jb
add
mov
nop
dec
mov
add
add
push
push
scas
fs
adc
ss
sub
add
cmp
clc
pop
pop
mov
dec
mov
clc
in
mov
xor
add
push
clc
scas
xchg
lcall
in
dec
movsl
clc
mov
push
jae
add
clc
fnstcw
jmp
add
xor
sub
xchg
pushl
add
cld
push
ret
dec
or
cmp
clc
push
add
enter
mov
jae
add
inc
add
repnz
call
add
xchg
mov
dec
inc
add
mov
or
jg
fwait
inc
cli
jg
out
imul
mov
outsl
or
pusha
add
dec
push
sar
ss
mov
cmp
add
mov
mov
js
clc
and
add
cmpsl
clc
jbe
add
in
sub
mov
fcompl
clc
mov
dec
jl
push
add
pop
add
add
push
cld
pop
js
call
push
ret
cwtl
ja
sub
cmp
dec
lods
fsub
clc
push
add
xchg
cmc
xor
add
push
add
aad
inc
add
in
push
mov
add
xabort
sbb
and
add
add
outsb
jmp
xchg
xchg
jp
clc
lea
gs
or
cmp
jb
add
mov
add
sbb
mov
jecxz
pop
sar
xor
add
add
xchg
iret
lret
clc
add
add
mov
clc
scas
outsl
cmp
ret
add
add
lahf
pusha
add
push
cmpsl
clc
mov
in
add
sub
sti
and
add
jecxz
insb
and
add
mov
and
add
add
aas
push
add
add
add
fnstenv
add
clc
outsl
dec
jg
adc
add
and
add
add
movsb
clc
push
add
fyl2xp1
xor
js
fldenv
add
sbb
add
in
or
add
adc
add
stos
or
xor
add
sbb
test
js
ret
sbb
mov
clc
arpl
add
xchg
popa
add
mov
cmp
clc
cmp
mov
clc
jo
add
clc
jl
clc
pop
and
je
add
dec
fcompl
sub
xchg
inc
clc
fldenv
cmp
jo
add
dec
insl
xor
add
sub
and
ljmp
sahf
cmp
data16
ret
clc
mov
xchg
mov
mov
mov
clc
jns
push
sbb
shrb
jle
movsb
clc
jmp
clc
push
sbb
ud1
jmp
fwait
jmp
sub
je
daa
clc
imul
mov
adc
clc
xor
add
mov
mov
fwait
jmp
mov
ds
clc
scas
pop
sbb
cld
pop
mov
jmp
scas
inc
add
jmp
es
mov
fisubs
test
mov
data16
dec
negl
pop
xor
add
push
fwait
jmp
sub
inc
add
mov
or
mov
add
mov
iret
nop
inc
clc
and
add
add
and
add
jb,pt
add
clc
mov
add
add
fldenv
add
ja
clc
xor
mov
xbegin
jmp
clc
push
add
test
movsl
clc
add
add
add
stos
push
add
imul
jg
sub
sahf
xor
test
in
stos
fldt
out
sar
inc
add
lcall
mov
clc
xor
clc
test
and
add
clc
ret
clc
sub
lahf
push
add
inc
clc
inc
add
fwait
aad
add
jl
clc
xchg
cmp
add
pusha
add
push
addr16
loope
lret
dec
inc
add
push
add
lcall
or
add
mov
data16
clc
or
clc
mov
clc
gs
or
clc
cmp
loope
or
xchg
divb
add
cmp
ljmp
clc
scas
pop
data16
or
sbb
lret
adc
add
aad
ret
jg
add
mov
mov
inc
add
xchg
mov
gs
sbb
pop
add
pop
data16
add
ss
movsb
clc
int3
stc
inc
clc
inc
clc
popf
push
add
cmp
add
add
cs
sarl
mov
cs
clc
pop
lods
cltd
fsts
mov
xchg
push
add
xor
clc
call
xor
clc
mov
add
add
cmp
gs
xchg
jns
fcompl
mov
add
fwait
jmp
sbb
in
jbe
and
clc
lock
add
or
clc
fsubs
add
clc
inc
add
push
and
add
mov
stos
imul
push
lsl
add
addr16
fisttpl
add
add
pop
and
add
add
jl
inc
add
push
movsb
clc
ss
xchg
add
add
loope
loopne
cmp
jnp
dec
lods
loop
cmp
inc
clc
mov
int
mov
imul
jno
add
dec
fwait
jmp
orb
lahf
roll
add
out
imul
jl
rcr
jo
add
add
mov
test
add
mov
clc
push
and
add
mov
xchg
fisubs
clc
inc
add
aam
add
mov
mov
jmp
or
sahf
dec
ret
clc
idivb
push
sbb
test
inc
add
xabort
clc
out
adc
add
clc
or
ja
test
cmp
insb
inc
clc
outsl
ds
clc
cmp
clc
push
and
add
add
jmp
subb
sahf
mov
add
jl
in
jo
add
xchg
leave
add
add
fwait
jge
movsb
clc
xchg
mov
adc
clc
ja
clc
cmp
add
add
imul
ljmp
jge
jns
add
pop
sbb
mov
pop
lods
adc
clc
ret
clc
mov
mov
fwait
jmp
and
or
mov
push
ret
je
je
pop
pop
inc
add
mov
scas
inc
add
sub
cmp
jns
mov
sbb
inc
add
cmp
test
add
js
ret
mov
imul
jnp
pushf
push
js
call
push
clc
lahf
sub
inc
add
enter
xchg
fldl
loope
aaa
jns
add
fwait
sbb
clc
adc
add
sub
or
stos
idivl
mov
fstps
cmp
add
lret
cwtl
cmpsl
clc
cmpsl
clc
jl
clc
aad
clc
addr16
lret
mov
jb
add
fmull
cltd
mov
xor
add
data16
adc
add
fs
push
add
mov
push
sub
lcall
sahf
cmp
fs
cmp
mov
inc
clc
push
add
xor
add
data16
lock
xor
add
call
scas
ret
gs
pop
cmc
mov
inc
clc
cmpsl
clc
lret
clc
adc
arpl
add
add
jmp
add
add
add
clc
adc
add
mov
pop
xor
add
mov
fwait
jmp
or
xchg
jns
pop
xchg
push
add
cmc
cmc
jecxz
xchg
push
cmc
scas
sbb
push
push
add
imul
cltd
lcall
clc
pop
xchg
cmp
clc
aam
and
add
jbe
clc
fdivs
add
mov
lods
mov
inc
clc
and
dec
mov
in
push
inc
repz
add
inc
sahf
fwait
test
clc
aas
jo
add
cmc
jg
xchg
icebp
sub
inc
clc
je
mov
add
xor
add
cmp
add
scas
jne
clc
mov
mov
mov
inc
add
mov
xor
add
js
clc
mov
clc
mov
add
clc
jecxz
loop
fidivs
daa
clc
dec
adc
add
add
mov
mov
push
inc
add
inc
cmp
push
add
das
mov
out
pop
aaa
inc
clc
sar
push
lods
pop
adc
add
test
cmp
pop
push
clc
cmp
mov
lock
ljmp
clc
clc
sub
add
dec
movsl
clc
scas
lock
clc
sbb
add
mov
rcrb
or
clc
sub
add
out
xor
mov
rcrl
mov
and
add
scas
add
and
popf
mov
adc
add
lret
in
lcall
cwtl
inc
add
cmp
repnz
rcrl
add
or
outsb
neg
nop
insl
pop
insl
mov
dec
test
or
aad
add
dec
cmp
add
xchg
push
clc
sbb
push
or
pushl
aaa
adc
add
test
xadd
jb
add
test
xchg
mov
sar
inc
clc
jmp
sbb
gs
mov
xchg
test
clc
xchg
dec
sub
mov
call
cld
push
ret
xor
adc
add
add
add
add
ja
scas
add
jp
clc
sbb
loop
fwait
jmp
and
test
add
pop
pop
add
add
clc
inc
clc
je
clc
lock
pop
fsubs
add
rolb
add
sub
gs
jmp
je
mov
clc
dec
mov
clc
xchg
data16
push
mov
fsub
clc
sar
jle
jae
add
js
fucomip
shlb
add
in
in
sub
lcall
pop
pop
in
lods
xchg
data16
pop
pop
aam
clc
dec
in
es
or
jo
add
jle
add
xor
loopne
fs
and
add
mov
mov
jmp
jge
mov
sarb
add
pop
mov
or
inc
add
pop
cmpsl
clc
or
sub
clc
lods
loopne
or
ffreep
clc
sub
pop
cld
push
ret
sub
pop
or
clc
jmp
mov
push
add
cwtl
punpcklbw
add
cmp
clc
sub
add
cltd
inc
clc
cmpsl
clc
je
movsl
clc
or
ret
clc
cmp
pop
inc
clc
enter
dec
sbb
sub
add
out
dec
sti
mov
imul
fildl
xchg
and
add
inc
clc
iret
daa
clc
mov
or
clc
jecxz
cmp
fwait
pusha
add
ret
clc
dec
stos
sub
clc
enter
and
add
push
add
aad
jns
clc
aam
mov
add
add
addr16
das
sbb
dec
mov
js
clc
sub
iret
pop
ror
test
pop
sbb
dec
sbb
inc
add
inc
clc
mov
and
sub
fcom
cmp
mov
dec
sub
imul
pop
xlat
inc
add
in
nop
stos
pop
mov
ss
add
sub
cmp
add
gs
pusha
add
ljmp
inc
add
sub
clc
in
gs
aaa
addr16
shl
jns
add
dec
pusha
add
mov
clc
adc
add
mov
push
je
xor
add
test
xbegin
cmp
mov
rcrb
jnp
arpl
add
xbegin
inc
clc
xchg
fs
lret
lock
clc
push
add
out
inc
clc
in
xchg
jmp
clc
or
add
call
cld
push
ret
pop
addb
scas
xbegin
leave
xchg
xchg
and
add
addr16
in
pop
pop
cmp
or
clc
xlat
jns
clc
movsl
clc
inc
add
outsl
int
clc
test
inc
clc
mov
xor
add
clc
std
clc
sar
xor
add
fwait
jmp
or
inc
add
xchg
or
lea
clc
cmp
sahf
lock
clc
out
lock
pop
int3
sbb
sub
enter
adc
add
mov
clc
dec
jbe
mov
mov
add
add
into
xlat
aam
push
add
aas
in
jle
clc
movsb
clc
mov
add
jge
clc
mov
add
cmc
sbb
in
das
in
xchg
pop
jmp
insl
lret
ret
clc
std
cli
dec
stos
cmp
sbb
enter
insb
pushf
inc
add
xchg
jno
add
das
pop
pushf
cmp
xchg
popf
mov
outsb
test
xchg
into
test
int3
stc
mov
inc
clc
and
add
mov
add
movsb
clc
xchg
dec
push
add
xchg
add
add
add
ss
push
fwait
jmp
and
imul
clc
fidivrl
push
ret
cmpsb
xor
clc
adc
add
clc
jnp
jge
clc
or
clc
ficoml
popf
loopne
mull
clc
cmp
adc
add
pop
sub
clc
xor
add
dec
lea
fwait
jmp
scas
pop
push
push
jbe
pop
sahf
mov
clc
sti
xor
add
cmc
or
mov
adc
add
push
test
sbb
add
dec
jno
add
clc
out
push
or
fildl
add
addr16
adc
add
add
add
gs
into
mov
clc
loop
add
mov
add
mov
xor
add
push
ror
movsl
clc
fcompl
test
fwait
jmp
sub
push
push
in
xchg
out
or
adc
add
mov
push
add
je
clc
xor
add
mov
fwait
jmp
nop
imul
jae
add
jmp
push
sub
dec
adc
ss
xor
add
add
inc
add
movsb
clc
scas
push
mov
xchg
loope
xchg
mov
aas
inc
add
xor
add
lret
add
mov
imul
clc
cmp
pop
and
add
arpl
add
mov
add
inc
clc
sub
clc
jmp
inc
add
mov
icebp
int3
sar
add
cli
movsl
clc
lret
push
add
add
jmp
lcall
clc
lock
add
scas
ror
push
clc
clc
xlat
jno
add
ss
mov
clc
test
adc
add
add
clc
cmp
xabort
jl
ljmp
lret
scas
mov
ss
jne
jecxz
mov
inc
clc
es
mov
add
ret
dec
push
cmp
xchg
cmp
cmp
mov
add
aaa
adc
std
in
cwtl
jg
inc
add
push
clc
xor
popa
add
cmp
lret
inc
clc
rol
clc
sub
dec
fcom
inc
add
pop
clc
imul
clc
test
jne
cmp
add
ss
clc
mov
addr16
sbb
clc
add
mov
cli
je
clc
jmp
dec
mov
or
add
and
add
clc
mov
jbe
clc
dec
ja
mov
sbb
fwait
jmp
sub
add
inc
add
gs
hlt
mov
add
mov
xchg
pusha
add
xchg
mov
xor
add
add
inc
add
mov
cmp
mov
int
clc
dec
dec
jmp
add
popf
and
incl
sti
fwait
jmp
pop
push
push
aaa
lcall
xchg
lods
aaa
or
xchg
out
inc
clc
bound
add
aas
sub
add
clc
imul
add
inc
clc
cld
push
add
into
mov
clc
sbb
clc
and
add
fs
stc
test
add
push
or
add
addr16
rclb
lods
xor
add
sub
mov
sub
add
push
sbbb
push
mov
repz
clc
mov
or
add
es
mov
out
mov
add
add
sbb
xor
add
aas
gs
loope
aaa
xbegin
clc
in
xor
add
add
xchg
adc
add
inc
add
lret
mov
sti
sub
add
pop
cmpsl
clc
rcrl
xlat
jne
imul
fucomp
testl
clc
fisttpl
xlat
std
loopne
and
bound
add
shl
lcall
clc
dec
jge
lahf
xor
add
addr16
mov
clc
dec
ljmp
clc
mov
scas
fstl
jmp
cmp
testb
pop
inc
add
pop
add
add
mov
mov
lods
rcrb
cmp
xchg
add
xchg
and
add
add
mov
out
inc
clc
cmpsb
clc
aad
pop
pushf
mov
xlat
push
add
push
add
pop
jmp
fwait
jmp
dec
test
cmp
rcrl
add
adc
add
push
push
add
adc
add
pop
cmc
or
sub
seta
add
popf
movsb
clc
mov
movsl
clc
test
cmp
add
xlat
mov
lret
cmp
jl
mov
clc
pop
adc
add
jae
add
add
xchg
push
ljmp
push
jno
movsb
sarl
push
ret
xor
pop
data16
cmp
jmp
xchg
es
test
inc
clc
jle
pop
test
clc
ret
clc
cmp
clc
into
insb
pop
clc
fiaddl
lods
cmp
fildl
xchg
loopne
pushf
xchg
sbb
or
iret
mov
js
add
jnp
clc
and
stc
aad
sahf
mov
add
popf
jo
add
add
adc
add
loope
ss
clc
cmp
add
hlt
jl
mov
clc
and
add
add
pop
aaa
cmp
add
fimull
xchg
lock
clc
mov
sbb
push
ret
fs
sub
stos
cmpsl
clc
sub
mov
test
or
xlat
rolb
clc
jnp
jl
sub
mov
jmp
in
es
bound
add
jb
add
clc
push
mov
fwait
jmp
adcb
jne
fwait
jmp
inc
clc
pop
call
fstl
add
clc
xchg
mov
in
roll
ret
mov
rcrb
add
xchg
aas
jmp
clc
push
add
es
lcall
sahf
pop
outsb
daa
clc
push
div
fwait
jmp
xchg
test
push
test
cld
aad
aaa
fdivr
leave
mov
leave
fldcw
stos
mov
dec
lcall
pusha
add
lock
or
sahf
imul
cld
jns
inc
add
jb
add
mov
add
rcll
dec
fisubrl
clc
in
mov
xchg
fdivp
mov
push
add
push
add
add
add
fldcw
cmc
js
stos
mov
das
gs
xor
add
fdiv
and
add
jge
clc
popf
cmp
int
fmuls
in
cltd
jns
sti
gs
jb
test
mov
add
leave
aad
push
cld
push
ret
scas
mov
pop
push
mov
fwait
jmp
movsb
imul
fucom
clc
and
add
xor
add
add
cmp
sub
dec
jecxz
sar
clc
dec
mov
adc
add
inc
clc
xabort
add
aam
imul
clc
insl
xchg
adc
add
clc
pmullw
xchg
test
shr
jae
add
xchg
cltd
push
ljmp
ljmp
jmp
test
push
ljmp
loopne
and
add
mov
dec
sbb
jle
adc
add
clc
mov
adc
add
jo
add
stos
and
add
xbegin
loope
and
add
rcrl
inc
clc
lahf
xchg
addr16
stos
fsubr
adc
add
cmp
loope
cmp
decl
fwait
jmp
xchg
or
xbegin
and
add
add
test
mov
fwait
jmp
cmpb
fistl
stos
add
add
add
xor
add
pop
clc
lock
sar
mov
clc
cmp
or
pop
dec
movsb
clc
mov
das
cltd
outsb
out
shll
push
add
nop
adc
add
add
pop
ss
aam
scas
fdivp
popf
idivb
data16
xor
add
fmull
pop
popl
pop
xchg
loope
xor
add
push
add
xchg
aas
add
add
ja
sbb
test
clc
movsl
clc
sar
clc
add
add
clc
sbb
mov
fwait
jmp
imul
jmp
imul
add
adc
add
sti
sbb
cmpsl
clc
pop
arpl
add
mov
cmp
pop
push
add
sbb
add
adc
add
nop
lcall
add
jo
add
cmp
ja
push
add
adc
add
add
popa
add
in
test
mov
loop
divl
add
scas
pop
fcomps
clc
mov
jo
add
add
push
fwait
jmp
sub
aaa
daa
clc
fsubs
clc
mov
stos
iret
mov
clc
lcall
add
dec
mov
out
xchg
mov
sbb
inc
add
push
add
repnz
mov
scas
adc
add
clc
jo
add
jmp
sub
and
aaa
outsb
push
add
xchg
data16
jle
jne
in
outsl
aad
push
test
stc
mov
add
test
xchg
xchg
pop
xor
add
add
clc
push
clc
into
test
leave
add
add
mov
adc
add
add
cmpsl
clc
aam
ja
clc
ljmp
add
mov
call
cmp
dec
fwait
jmp
xchg
and
push
popf
dec
jo
add
cs
mov
sub
clc
dec
mov
test
xabort
pop
cmp
lea
add
add
insb
out
xchg
aas
imul
test
and
add
clc
cmp
add
sub
sub
add
sub
add
scas
jecxz
in
lock
call
jmp
xabort
clc
adc
add
lods
xchg
cmp
add
add
add
add
add
mov
cld
push
ret
sub
cs
ficomps
es
imul
mov
clc
dec
dec
fistpl
push
add
mov
clc
inc
clc
in
in
jmp
fxch
fisttps
clc
bswap
jmp
daa
clc
test
push
jecxz
add
aas
or
lret
arpl
add
add
add
pop
cmpsl
clc
xabort
aas
or
clc
jmp
clc
fwait
cmp
into
lcall
add
add
ja
add
dec
enter
lret
sahf
cmp
popa
add
arpl
add
aad
cmp
xbegin
push
out
xchg
scas
dec
sub
fcompl
sub
jmp
add
imul
std
sar
lret
add
int
xor
inc
clc
mov
add
out
loope
mov
bound
add
in
popf
fwait
adc
add
add
pusha
add
and
add
dec
sar
add
inc
clc
repz
push
ret
fwait
jmp
popa
sub
add
jno
add
aam
push
mov
inc
clc
xchg
and
add
lret
clc
xor
add
cmp
pop
inc
clc
mov
add
hlt
stos
in
test
inc
add
stos
lahf
out
xbegin
inc
clc
out
rorb
into
jge
xor
clc
ret
clc
mov
jecxz
sub
sub
clc
xchg
xor
add
xabort
add
pop
clc
daa
clc
pop
dec
lahf
sar
cmp
push
fwait
jmp
sub
sub
adc
add
clc
xchg
and
add
add
add
mov
hlt
shl
and
add
add
add
add
adc
add
jne
fwait
jmp
js
call
add
add
lods
mov
or
add
clc
jae
add
clc
mov
negb
jne
fwait
jmp
adc
add
mov
dec
mov
add
out
jo
add
dec
xchg
mov
es
or
sbb
leave
movsb
clc
ljmp
fwait
mov
addr16
and
add
loop
pop
fldenv
dec
mov
sbb
push
std
test
or
push
add
pop
mov
clc
xor
add
add
mov
xor
add
xor
lea
sahf
and
add
clc
xchg
in
out
mov
fidivrl
mov
imul
clc
stos
imul
clc
or
clc
or
add
adc
add
sbb
sar
add
add
inc
add
sar
xor
add
push
add
rorl
lods
in
sahf
lea
mov
clc
lret
test
pop
lcall
xchg
push
add
add
clc
aam
adc
add
push
dec
cld
push
ret
cmpsb
push
sub
clc
xchg
je
clc
push
add
rclb
add
jne
clc
sub
pushf
cmp
mov
sub
xchg
call
sar
add
mov
in
aaa
and
or
add
jbe
fwait
jmp
sub
xchg
mov
xchg
into
jp
dec
push
lea
fwait
jmp
aas
outsl
inc
mov
cld
push
ret
sbb
sbb
jmp
sahf
push
inc
xchg
sub
xabort
sub
mov
add
clc
push
mov
mov
add
aam
fsubl
add
add
and
clc
rol
clc
out
and
add
add
pop
lods
aam
jns
clc
aad
add
xchg
into
movsl
clc
cltd
mov
cmp
clc
pop
out
ss
dec
xor
clc
xor
mov
clc
add
adc
xlat
mov
jg
and
and
add
arpl
add
pop
sub
inc
clc
fidivrl
sbb
clc
inc
add
adc
add
add
cmpsb
clc
insl
or
js
add
xor
xor
imul
addr16
popa
add
dec
stos
jbe
in
sbb
clc
or
cmp
push
add
fstps
inc
clc
pop
cmpsb
clc
mov
add
dec
sbb
jne
fwait
jmp
mov
add
clc
mov
aaa
movsl
clc
mov
mov
in
or
pop
mov
inc
clc
dec
adc
xor
fwait
jmp
je
mov
clc
push
push
add
call
pop
pop
mov
clc
jns
imul
add
loope
in
sbb
clc
test
adc
add
jo
add
add
popa
add
or
dec
aas
inc
add
xchg
adc
add
pop
clc
out
sbb
sti
call
push
ret
sub
add
add
xor
rclb
cld
push
ret
dec
mov
cmp
bound
add
clc
outsl
xchg
aam
adc
add
clc
xchg
test
add
insb
xchg
mov
clc
fs
lods
test
jno
add
clc
pop
enter
add
xor
add
pop
addr16
jbe
pop
jl
clc
or
push
add
clc
fidivrl
and
jo
add
mov
add
push
add
xchg
movsb
clc
jmp
mov
pusha
add
data16
in
insl
mov
sbb
cmp
jmp
or
or
ret
jns
pop
std
imul
xchg
cmp
add
lods
adc
add
add
sub
add
fimuls
std
and
add
dec
popa
add
inc
add
xor
add
clc
and
add
insb
xor
insb
or
add
add
add
mov
add
jns
into
lret
or
clc
sbb
arpl
jmp
xor
jb
add
dec
movsb
clc
adc
clc
sti
lea
clc
mov
pusha
add
cmp
clc
cltd
or
sbb
push
ret
push
mov
insb
adc
add
insb
push
cwtl
add
add
xor
cld
push
ret
ja
jg
clc
enter
sub
clc
sub
add
out
and
lret
cs
pop
xchg
cld
lret
cmp
add
pop
push
add
sub
outsb
repz
inc
clc
jecxz
call
add
adc
rcr
addr16
xchg
cmp
aas
or
clc
jmp
inc
clc
lcall
jo
add
push
in
cmp
dec
cld
jecxz
add
add
frstor
adc
add
sub
fwait
jmp
mov
push
cld
push
ret
data16
mov
clc
add
arpl
add
js
xor
fwait
jmp
test
jbe
clc
jmp
adc
add
add
mov
jle
lret
jae
add
add
xchg
or
clc
test
and
add
xabort
push
add
call
dec
add
cld
push
add
loop
int3
ss
pop
in
cmp
clc
lods
sahf
or
aas
dec
push
add
icebp
iret
dec
mov
dec
and
add
add
clc
out
xabort
adc
add
sti
into
pextrw
jb
add
addr16
scas
mov
mov
jmp
cmpsb
dec
push
inc
clc
sbb
jmp
dec
add
jno
pop
cmp
clc
fstpl
sar
mov
std
ja
pop
dec
add
add
add
mov
dec
leave
test
inc
add
pushf
mov
mov
add
loope
and
add
repz
push
clc
insl
aam
sub
add
loop,pt
add
in
dec
hlt
data16
jecxz
std
je
js
add
dec
popa
add
pop
sti
pop
or
mov
clc
xchg
inc
clc
popf
sbb
fwait
jmp
nop
mov
aad
out
cmp
add
add
dec
aaa
add
pop
add
add
xbegin
add
fs
adc
add
mov
leave
arpl
add
clc
test
sar
add
cmp
jnp
clc
das
dec
xchg
lcall
cmp
clc
jne
clc
jb
add
add
add
stos
mov
pop
out
xor
xor
add
xchg
pop
adc
add
mov
dec
imul
loopne
push
add
in
sub
mov
and
add
push
clc
repnz
add
stos
pop
xor
add
mov
jb
add
pop
clc
sbb
add
clc
push
add
mov
xchg
fdivs
mov
xchg
test
pop
sub
movsl
clc
sub
insl
xor
add
clc
cmp
loopne
add
scas
das
dec
lea
add
ljmp
mov
cmp
rorb
mov
int3
mov
sbb
imul
add
and
add
scas
or
clc
cmc
cmp
lret
ficoml
add
test
cmp
cmpsl
clc
movsl
clc
daa
clc
xchg
jmp
mov
fwait
jmp
test
add
and
add
add
clc
jbe
dec
je
add
pop
loope
mov
gs
xlat
out
sbb
jmp
jge
or
clc
enter
loope
jne
clc
sar
add
cmp
lret
push
adc
push
ret
pop
bnd
xchg
xchg
idivl
decl
idiv
decl
push
stc
mov
pop
out
sub
xchg
cmp
add
mov
into
cmc
out
dec
mov
lock
sbb
clc
loopne
fmull
aam
mov
fwait
jmp
sub
lock
add
pop
sub
jne
adc
jae
add
stos
add
add
fsubrp
jnp
clc
jecxz
xlat
jp
addr16
je
cwtl
adc
add
movsl
clc
cld
mov
mov
fwait
jmp
push
pop
mov
sbb
jmp
and
add
add
add
mov
pushf
pop
clc
jg
mov
js
mov
add
jne
add
xchg
xlat
cltd
and
add
fucomi
cmp
add
mov
add
popf
sti
iret
inc
add
int3
mulb
add
out
lahf
nop
pop
repz
lret
clc
xor
push
add
sar
add
add
sbb
lea
lods
jge
add
ds
filds
clc
sub
cwtl
std
sar
add
add
push
fwait
jmp
jno
push
xor
mov
push
scas
or
add
sub
test
add
inc
clc
jge
cmc
insl
pusha
add
pop
dec
sbb
jo
add
clc
jp
add
cmc
lret
add
add
pop
cmp
push
ret
inc
push
mov
add
mov
cmpsl
clc
outsl
fxch
mov
inc
add
incl
add
mov
popa
add
jbe
pop
clc
stos
testl
or
add
mov
in
and
add
xbegin
fnstsw
outsb
ja
clc
fcompl
loope
insb
jae
add
add
add
push
add
push
sub
inc
clc
sbb
pop
aam
push
jmp
test
and
add
clc
pusha
add
and
add
add
add
sbb
ljmp
pusha
add
mov
clc
cmp
or
test
mov
add
fwait
jmp
addb
mov
bound
add
and
add
dec
out
aas
adc
add
add
mov
xchg
into
sbb
add
xadd
and
add
push
data16
jo
add
add
add
add
inc
add
pop
sahf
dec
cmp
mov
cld
push
ret
sub
fbstp
add
jmp
clc
jle
xchg
roll
add
ja
clc
movsl
clc
ss
cmp
stos
sub
and
jmp
sub
sub
jl
clc
add
add
jp
dec
pop
lods
cmp
clc
pop
repnz
pop
clc
pop
imul
and
add
mov
add
fwait
jmp
clc
in
negl
clc
add
pop
lret
add
xbegin
jle
clc
lahf
cmp
test
fwait
cmpsl
clc
adc
add
clc
mov
dec
inc
clc
movsb
clc
adc
mov
jo
add
add
add
xor
add
add
and
call
add
loop
test
clc
xchg
lods
or
add
sbb
clc
sbb
jne
fwait
jmp
and
or
add
add
jl
clc
or
add
pop
clc
icebp
js
jecxz
pop
clc
insl
mov
shlb
cmp
clc
jae
add
add
loop
add
add
clc
mov
xchg
xlat
test
pop
inc
add
xchg
xbegin
clc
pop
outsl
sbb
sti
pop
clc
xor
add
add
add
stc
xchg
jl
faddl
in
ja
daa
clc
imul
adc
add
add
enter
clc
hlt
enter
pop
imul
pop
push
clc
or
repnz
inc
clc
test
add
adc
add
clc
pop
clc
jo
add
pop
clc
inc
add
int
not
mov
clc
pop
add
das
jae
add
add
in
fbstp
sub
clc
sub
sbb
div
repz
loop
mov
jmp
fwait
jmp
add
cmpsl
clc
mov
js
clc
or
push
sub
xchg
xor
add
adc
add
add
lret
es
stos
lret
add
add
add
push
ret
xbegin
fwait
jmp
adc
jns
clc
jmp
adc
add
clc
mov
and
mov
adc
mov
add
sbb
push
clc
ror
lods
lods
ret
clc
packsswb
add
movsl
clc
xchg
nop
mov
cmp
clc
xchg
pop
clc
cmp
sahf
jae
add
clc
int
xchg
rcrb
aaa
scas
lret
lods
mov
lods
sarl
add
add
js
cmpsb
clc
cmp
xchg
jnp
je
clc
ja
and
add
jnp
add
mov
jmp
add
jnp
clc
cld
sbb
add
loope
lret
add
loopne
pop
js
add
enter
clc
stc
mov
push
add
cmp
stc
stos
push
je
fwait
jmp
jb
add
jne
fwait
jmp
loop
insb
insl
fsubrl
xchg
and
add
sbb
add
imul
xor
add
add
mov
int3
dec
imull
mov
clc
pop
cmpsl
clc
jae
add
add
adc
clc
loop
mov
add
add
jno
add
adc
add
xchg
add
add
sbb
add
clc
cmp
xchg
je
mov
fs
out
fimuls
pusha
add
addr16
cli
xor
add
add
add
add
mov
dec
jp
pop
add
xchg
fidivrl
scas
int3
out
cwtl
sarb
clc
mov
adc
add
popf
ret
clc
sub
fcmovbe
sahf
mov
add
and
add
push
in
mov
mov
imul
stos
mov
push
clc
arpl
add
movsl
clc
inc
clc
test
shlb
repnz
test
cmp
add
clc
cmp
clc
cld
xor
cmc
lahf
cmp
aas
vucomiss
leave
sub
add
dec
repnz
jmp
xchg
sub
push
add
jmp
clc
js
jp
fiadds
add
adc
test
clc
xor
inc
loopne
jmp
sub
clc
mov
jg
in
xor
add
sbb
sbb
add
mov
add
add
scas
push
and
fwait
jmp
sub
add
add
mov
fwait
jmp
sub
jne
sub
clc
pop
insl
cmp
cs
mov
push
jne
fwait
jmp
dec
push
add
gs
dec
cli
jecxz
adc
add
clc
jecxz
bound
add
and
push
clc
xor
add
mov
bound
add
cs
add
jmp
int3
mov
aad
inc
clc
cmc
or
mov
push
jmp
fwait
jmp
pop
cmpsl
clc
std
xchg
jno
add
loope
ljmp
clc
cmp
jno
add
add
lahf
mov
pop
pop
pusha
add
inc
add
shrl
jae
add
dec
in
shll
add
out
in
pop
sbb
or
ret
sahf
cmp
sti
lods
std
adc
clc
pop
dec
jg
add
pop
mov
clc
movsl
clc
adc
add
aad
or
sar
mov
mov
mov
or
push
mov
jmp
mov
sub
out
mov
fmull
clc
jo
add
push
outsl
and
lods
rclb
fwait
jmp
insb
push
popa
lea
add
push
push
inc
dec
test
scas
pop
xabort
add
lret
jbe
add
testb
shlb
add
daa
clc
pop
sbb
test
or
add
add
sbb
add
push
jno
xchg
hlt
adc
add
and
jne
inc
add
adc
add
cmp
clc
insb
out
movsb
clc
scas
mov
and
add
insb
pop
cmpsl
clc
mov
cmc
cmp
adc
add
lret
adc
add
push
test
jmp
push
lcall
add
add
add
jge
pop
clc
addr16
bound
add
add
movsb
clc
lea
mov
negb
addr16
xchg
mov
clc
xor
add
pop
and
add
cli
stos
cli
jnp
mov
clc
pop
mov
mov
clc
jb
add
loope
cmc
adc
add
add
lcall
inc
clc
inc
clc
sbb
clc
push
mov
add
mov
fwait
jmp
sbb
or
jmp
sbb
dec
sbb
add
add
add
add
daa
clc
adc
scas
sbb
clc
int
clc
and
clc
dec
jno
add
adc
add
clc
lret
in
in
scas
jge
mov
add
jg
clc
shll
dec
js
test
rorb
ss
or
dec
inc
clc
jg
pushf
dec
sbb
clc
cmp
jmp
xabort
add
cmp
xor
add
lret
add
clc
mov
add
in
jmp
clc
into
xchg
daa
clc
sub
mov
clc
pushf
loop
daa
clc
test
dec
adc
aaa
jne
push
dec
lock
add
lods
xchg
adc
add
pop
pushl
add
fwait
jmp
inc
add
jecxz
pop
xor
add
in
jne
outsl
xchg
sub
add
jne
clc
or
clc
jmp
shlb
clc
movsl
clc
inc
clc
inc
add
pusha
add
add
add
ds
xlat
das
leave
dec
arpl
add
clc
insl
push
cmpl
fwait
jmp
mov
mov
sar
sar
dec
fwait
jg
leave
sbb
adc
add
js
lea
fwait
jmp
xor
nop
jg
jns
inc
clc
ljmp
clc
push
rcl
or
sbb
mov
jmp
sub
clc
int3
ss
je
insl
jg
mov
mov
icebp
and
add
xabort
dec
dec
mov
dec
xbegin
mov
xchg
mov
clc
insb
adc
add
clc
das
out
cmp
clc
sbb
sbb
xchg
mov
and
add
xchg
outsb
iret
rorb
test
outsl
pop
xabort
xchg
std
enter
push
push
cld
push
ret
sub
mov
lcall
add
cltd
clc
or
arpl
add
add
loopne
dec
cld
push
ret
cwtl
push
pop
fs
clc
inc
add
insl
jae
add
add
or
and
add
add
jle
clc
xchg
ja
xabort
clc
es
push
rcrb
mov
dec
icebp
pop
cmp
clc
xchg
add
add
add
xor
clc
or
clc
fisubrl
push
stc
mov
add
add
dec
sbb
getsec
pop
cmp
cltd
xor
add
clc
mov
fbstp
add
sti
scas
mov
pop
scas
and
daa
clc
insb
pop
lcall
add
fwait
jmp
jg
sahf
scas
idivb
or
inc
add
mov
clc
pop
sub
clc
sub
cmp
data16
in
loopne
aam
pop
cltd
out
popf
mov
sub
add
add
mov
cmpsb
ljmp
cmpsb
push
or
clc
movsl
clc
das
movsb
clc
testb
fcoml
add
add
rorl
sar
clc
xchg
xor
mov
fwait
jmp
add
xor
add
add
clc
jb
add
loop
lret
data16
je
shll
add
cltd
and
clc
mov
xchg
fcomps
push
add
lcall
cli
aaa
push
jmp
xor
and
mov
jg
xchg
push
add
mov
pushf
push
movzwl
fwait
jmp
outsl
add
push
xchg
push
das
pushf
loop
mov
add
mov
clc
xchg
outsl
out
jle
popf
sbb
cld
ljmp
or
lret
cli
pop
dec
jne
clc
ljmp
mov
clc
test
pop
in
lcall
add
clc
cmp
adc
add
and
inc
clc
imul
jmp
jg
sahf
sar
sarl
clc
fmuls
add
inc
clc
in
cmp
add
popa
add
sub
jg
dec
out
outsl
adc
add
js
pop
dec
xchg
inc
clc
daa
clc
pushf
addr16
jnp
cltd
adc
add
jnp
jmp
je
scas
xchg
shll
outsl
cmp
inc
add
xor
and
jmp
lcall
add
dec
arpl
add
pushf
aaa
pop
scas
pop
cmp
add
xor
add
xchg
aam
sub
inc
clc
imul
clc
mov
add
push
cmc
push
add
stc
iret
out
jo
add
mov
fwait
jmp
sub
outsb
fcmovb
clc
xbegin
jmp
push
sub
inc
clc
es
cmpsb
clc
loopne
hlt
adc
xabort
adc
add
addr16
sub
add
mov
ja
gs
xbegin
add
jmp
add
int3
adc
decl
xor
add
test
push
sbb
and
mov
in
mov
imul
faddl
clc
mov
jno
add
cmp
clc
dec
stc
stc
icebp
mov
or
clc
sub
xchg
in
or
hlt
cmp
clc
or
movsb
clc
mov
cld
test
mov
clc
jb
add
sahf
outsb
test
adc
add
add
mov
cld
push
ret
pop
ljmp
push
sbb
hlt
add
imul
mov
clc
sti
xlat
fldcw
ja
add
xchg
or
std
and
add
call
xchg
sub
add
sub
clc
or
lea
clc
sar
clc
cmp
stos
xchg
xabort
pop
notl
push
add
push
add
fsubrs
add
fiadds
add
mov
clc
mov
add
lahf
pop
not
adc
clc
outsl
cld
pop
clc
bound
add
add
pusha
add
int3
inc
clc
xchg
loop
std
cld
cmp
mov
int
sub
jns
lea
cs
inc
clc
test
clc
jge
clc
bound
add
mov
clc
cmpsb
clc
dec
mov
adc
push
aam
clc
arpl
add
mov
fwait
and
add
clc
inc
add
push
jno
add
ret
clc
push
cmp
cld
push
ret
pop
fwait
sub
clc
mov
jae
add
add
cmp
in
cmp
cmp
imul
div
or
sub
out
mov
add
mov
add
sub
cmp
add
cwtl
pop
ja
cmp
leave
xchg
mov
clc
ror
mov
clc
mov
iret
cmc
pop
inc
clc
out
mov
fdivl
cld
push
ret
adc
and
shr
add
addr16
ret
clc
jne
pop
xor
add
out
aas
xchg
lcall
mov
fwait
jmp
push
cwtl
jp
adc
clc
ss
mov
ss
hlt
mov
add
cmc
mov
clc
out
sbb
out
xor
add
fidivs
add
stc
out
and
add
pop
xlat
xor
add
xchg
dec
cmp
pop
fwait
jmp
and
jp
sbb
add
cwtl
fistps
gs
roll
add
pusha
add
jge
sar
cmp
add
cmc
jge
clc
push
decl
test
jmp
jo
add
push
push
int3
dec
mov
pop
sbb
add
add
add
push
cmp
clc
cltd
mov
mov
jmp
sbb
push
ret
aas
sub
inc
xbegin
add
xchg
xchg
icebp
repz
and
jmp
add
pop
xchg
mov
add
dec
xabort
push
cmp
clc
outsl
test
jbe
mulb
insb
xchg
add
inc
add
test
xlat
dec
fcomip
inc
clc
je
jp
sub
dec
mov
sar
or
clc
or
ja
add
stos
mov
clc
daa
clc
or
jno
add
add
add
mov
sbb
pop
adc
add
add
cli
ja
add
mov
add
mov
xor
add
repnz
out
rorb
sbb
dec
mov
and
add
clc
sbb
or
or
clc
xchg
add
add
loope
sahf
addr16
mov
cld
push
ret
sbb
mov
cmpsb
clc
pop
xor
add
clc
mov
add
out
xchg
dec
rorl
adc
add
loopne
addr16
and
add
dec
mov
mov
clc
fs
das
mov
clc
and
add
xlat
ret
add
sbb
sbb
add
jbe
mov
add
decl
jle
mov
ja
clc
inc
clc
and
add
dec
mov
xor
add
testl
pop
lods
cld
rcrb
mov
add
fistl
add
pushf
pop
aam
rcrb
incl
push
ret
sub
xchg
sub
cli
outsl
nop
in
sar
jg
clc
out
xlat
scas
cwtl
out
popf
jecxz
add
add
clc
push
push
fwait
jmp
and
aas
xorb
bound
add
add
add
in
jmp
clc
inc
clc
int
clc
adc
out
push
loope
lcall
push
loop
sbb
add
sti
sub
outsb
and
add
add
add
jno
add
clc
xor
add
pop
leave
pusha
add
stos
repz
imul
cmp
add
add
jecxz
add
inc
add
jle
sar
gs
xor
add
nop
xor
add
clc
cmp
sar
mov
sub
sub
sub
xor
xor
add
pushl
aaa
shrl
mov
es
and
add
jae
add
add
pop
jo
add
ds
add
fwait
dec
es
lock
push
and
inc
clc
sub
clc
inc
add
fsubs
shlb
add
out
call
clc
das
cmpsb
clc
xchg
stc
push
add
or
xor
add
add
lcall
add
ds
sub
add
clc
call
jmp
ja
jno
cmpsb
lea
add
sub
adc
add
in
lret
cs
add
cmpsb
clc
arpl
add
add
scas
shll
add
add
dec
std
mov
decl
sub
add
add
lock
cmp
je
xchg
shll
add
clc
xchg
xchg
pop
mov
inc
add
and
lock
add
add
enter
inc
clc
push
add
xchg
repnz
cmp
sar
jecxz
jnp
sbb
clc
xor
add
cmp
mov
mov
clc
and
sbb
inc
add
sub
add
add
clc
ret
clc
xor
add
mov
add
clc
cld
inc
clc
lret
add
cltd
jl
leave
xchg
es
sar
add
aas
rcl
daa
clc
and
add
xchg
and
lock
iret
into
pop
cmp
lret
mov
hlt
repnz
xor
add
popa
add
lret
fwait
out
data16
sbb
loopne
int3
ss
test
mulb
add
xchg
jns
add
sbb
jmp
outsl
sub
push
sahf
movsb
clc
mov
inc
add
lods
mov
cmpsl
clc
insb
lret
sbb
iret
or
inc
add
push
add
clc
sarb
clc
mov
and
add
adc
add
add
sbb
mov
pop
mov
add
xchg
cwtl
in
jge
xchg
and
add
or
add
mov
mov
imul
jae
add
inc
add
xchg
add
mov
js
clc
jae
add
add
mov
mov
sub
add
lcall
and
jns
push
xlat
fsubl
adc
add
jns
clc
dec
xlat
cltd
jnp
add
aas
js
add
xchg
jbe
movsl
clc
dec
ret
jb
add
clc
imulb
sar
jmp
popf
xchg
adc
add
mov
add
sub
clc
adc
add
clc
out
add
add
xchg
xchg
push
xor
push
and
add
movsl
clc
push
and
add
xor
addr16
pop
sahf
repnz
add
clc
push
scas
dec
leave
ret
sub
mov
fcmovbe
cmp
fwait
jmp
subb
fucomip
xchg
push
xor
add
xchg
mov
outsl
je
add
xor
add
push
outsl
cli
push
mov
add
add
add
push
rcrl
mov
mov
inc
add
jns
imulb
scas
cmovns
jae
add
cmp
rorb
xchg
sti
mov
out
lea
fildll
add
clc
adc
add
fwait
idivl
mov
ret
clc
add
add
fwait
jmp
sub
clc
adc
add
add
repnz
jns
push
add
repnz
add
mov
clc
sub
add
add
test
add
mov
clc
sub
jg
add
add
add
add
cld
pusha
add
fldenv
jno
add
cmpsb
clc
jo
add
loope
add
add
xchg
jge
mov
ja
push
inc
fwait
jmp
pop
sub
clc
pop
pusha
add
cs
jno
add
add
fwait
jmp
push
movsb
clc
clc
test
clc
pop
mov
add
adc
add
add
iret
aas
sbb
clc
nop
into
out
cwtl
mov
clc
int
clc
roll
ss
or
mov
add
in
stc
add
add
rcll
add
sbb
push
add
lcall
clc
add
add
xlat
inc
add
gs
add
add
sbb
add
clc
pop
and
dec
cmp
cmp
jmp
sub
cmc
imul
add
add
test
pop
movsb
clc
sub
clc
imul
clc
jmp
inc
clc
insb
push
mov
fwait
jmp
dec
pop
sub
add
xor
add
add
add
and
fsubr
sub
clc
rcl
jae
add
add
mov
cmp
cmp
push
add
xbegin
fsubrs
clc
in
push
jns
xchg
pop
pop
ja
clc
popa
add
xlat
addr16
into
and
add
popa
add
jne,pn
add
dec
leave
ljmp
es
cmp
scas
cli
mov
xor
pop
std
jno
add
inc
add
jbe
clc
mov
inc
add
sbb
dec
jecxz
push
add
mov
inc
add
xor
clc
movsb
clc
imul
fwait
jmp
insb
sub
clc
sbb
ret
clc
push
clc
das
push
ret
inc
add
addr16
mov
add
add
repz
cld
pop
out
lcall
add
je
fwait
jmp
lahf
stc
pop
pop
dec
inc
add
std
adc
add
adc
stos
mulb
xchg
inc
clc
movsb
clc
mov
push
stos
aas
sar
xchg
jns
jp
or
mov
add
dec
sub
mulb
add
pop
insb
mov
mov
nop
adc
add
mov
fwait
jmp
popa
push
add
push
add
push
into
insl
mov
or
pushl
fwait
jmp
nop
fwait
daa
clc
xchg
aam
cmp
add
lcall
push
ret
inc
mov
clc
cmp
lahf
data16
imul
add
or
clc
pop
or
cmp
clc
cmp
mov
or
insl
outsb
pop
cmp
clc
jbe
clc
mov
js
clc
outsl
aad
mov
push
ret
clc
cmpsb
clc
test
clc
jmp
int
push
lea
test
out
and
out
cmp
in
leave
pop
or
clc
ljmp
fwait
jmp
adc
cmp
add
jnp
out
ret
cmp
clc
jbe
add
mov
xlat
into
int3
mov
dec
adc
add
fldt
clc
push
cmp
add
int
in
push
clc
js
add
jmp
mov
movzwl
fwait
jmp
sub
fisubs
sbb
jae
add
call
hlt
and
add
sub
add
inc
add
pop
xor
add
clc
mov
clc
pop
idivb
clc
sbb
adc
add
jmp
imul
call
fwait
jmp
pop
sbb
fimull
xor
add
loope
std
ret
clc
aaa
xor
add
add
je
scas
dec
mov
add
clc
mov
and
add
rep
or
stc
sbb
add
ja
test
add
cmp
adc
add
push
add
mov
sahf
sbb
sti
fwait
jmp
scas
push
lods
pop
lods
adc
add
add
rep
fwait
jmp
sub
adc
add
pop
jge
sbb
jg
pop
das
rolb
add
gs
into
jne
clc
jecxz
fucomip
or
cmpsb
clc
jbe
es
xchg
mov
cld
push
ret
cwtl
sub
test
clc
pop
fsts
add
xchg
jge
clc
inc
clc
rorl
adc
jmp
xor
ljmp
jb
add
cld
std
add
add
lret
mov
pop
add
sub
add
call
pop
aam
push
cld
push
ret
dec
je
popa
mov
sahf
incl
sub
je
push
cld
push
ret
sbb
inc
pop
mov
outsb
cmc
mov
movzwl
fwait
jmp
sub
add
in
in
jno
add
add
clc
adc
add
add
xor
clc
data16
outsb
es
xchg
imul
clc
xabort
bound
add
into
test
add
add
sub
clc
push
flds
mov
jg
clc
dec
dec
lock
add
add
mov
cmc
lods
aas
rol
clc
das
jl
xchg
fwait
jmp
adc
cwtl
imul
dec
movsb
clc
data16
and
add
pop
sbb
fprem
pop
inc
add
js
push
clc
inc
clc
cs
sbb
popa
std
ljmp
or
add
fwait
jmp
sub
clc
pop
jmp
mov
xlat
loope
xor
add
nop
repnz
jge
fwait
jmp
dec
sub
adc
add
popf
arpl
add
sbb
xchg
ds
ds
cmp
ret
clc
call
clc
inc
clc
add
add
inc
add
aam
lret
and
add
frstor
clc
pop
clc
add
add
push
add
and
cmp
mov
pop
mov
mov
add
clc
xchg
das
mov
add
sbb
push
mov
decl
cmp
jmp
add
lods
mov
jmp
adc
aaa
push
jnp
decl
test
mov
sub
ljmp
sbb
in
mov
sti
jg
add
shll
add
shll
lods
fbld
clc
movsl
clc
sbb
adc
add
add
fbld
mov
clc
stos
mov
ret
clc
scas
mov
jmp
add
add
addr16
aam
pop
pop
cmp
clc
mov
clc
push
jmp
sahf
or
cld
test
dec
addr16
test
add
mul
clc
add
add
clc
jge
or
loopne
dec
push
xor
rcrb
and
fwait
jmp
or
aaa
in
data16
cld
dec
push
clc
inc
add
call
clc
cmp
clc
jge
clc
inc
add
sbb
ret
add
mov
sbb
clc
imul
add
xor
add
add
arpl
add
pop
pop
fmull
clc
outsb
pushf
arpl
add
inc
add
in
xor
das
xchg
pop
push
clc
outsl
mov
push
gs
pop
cmp
in
nop
fistps
es
hlt
push
add
cld
out
sub
mov
fwait
jmp
mov
clc
clc
dec
xchg
lcall
stos
push
push
clc
mov
clc
rorl
or
clc
xchg
mov
rcl
test
add
popa
add
stos
adc
std
inc
clc
xchg
dec
adc
add
sbb
test
jmp
push
clc
inc
clc
idivl
ljmp
xor
in
imul
jmp
clc
das
ja
clc
dec
add
add
clc
push
push
xchg
fwait
jmp
lods
ja
or
enter
inc
add
mov
sub
int3
scas
insl
test
cmpsb
clc
push
lea
imul
xlat
mov
mov
add
sbb
clc
into
lret
test
rorl
lea
dec
ret
lcall
call
int
add
daa
clc
pop
clc
rorb
jnp
clc
aad
sar
sub
leave
or
pop
fisubrs
es
repz
sub
add
add
clc
cmp
clc
inc
clc
clc
mov
add
adc
xabort
sbb
mov
add
inc
clc
nop
icebp
loop
dec
das
mov
and
add
add
int3
insl
xor
add
and
add
loopne
pushf
pop
adc
add
push
add
sbb
cmpsl
clc
dec
push
add
ds
ss
scas
das
inc
add
cmp
hlt
add
add
push
add
and
add
push
add
sub
add
push
add
push
icebp
pushf
out
pop
test
fiaddl
pop
arpl
add
cmpsl
xchg
ljmp
inc
inc
je
adc
add
mov
clc
cmp
dec
lcall
enter
cmp
clc
mov
dec
inc
add
jg
inc
add
stos
rorb
add
test
mov
data16
push
add
mov
enter
test
not
sbb
cld
push
ret
sub
sbb
add
adc
add
add
xbegin
add
cmp
lock
push
data16
xabort
rcrb
push
fwait
jmp
sub
nop
or
xchg
hlt
es
mov
rcrl
clc
aaa
push
jo
add
push
cmp
clc
sub
push
add
jge
clc
cmp
aaa
and
pop
clc
mov
aas
sub
imul
xor
add
xor
mov
clc
dec
cwtl
decl
test
lcall
faddl
popf
icebp
pop
movsl
clc
pusha
add
mov
add
adc
add
clc
into
aas
adc
add
clc
shrl
add
add
add
pop
addr16
mov
add
cli
xchg
xchg
jae
add
clc
mov
mov
clc
es
cmp
xchg
decb
add
push
add
cs
push
push
cld
push
ret
movsb
jge
and
clc
data16
and
push
add
pop
and
mov
add
push
add
mov
sub
lahf
mov
clc
sbb
xor
add
jge
xchg
or
popl
add
sbb
je
sub
incl
mov
jmp
adc
test
add
lret
fwait
jmp
dec
movsb
mov
or
xor
add
push
add
ja,pt
add
adc
add
push
ret
test
add
pop
pushf
int3
push
fwait
adc
add
sti
scas
sbb
or
mov
das
xor
jbe
xor
add
pushf
adc
mov
fwait
jmp
adc
adc
sbb
jmp
and
dec
mov
add
add
add
add
add
inc
clc
push
add
cli
outsl
rolb
jmp
cmp
clc
aad
add
adc
pop
ds
into
in
cmp
add
mov
push
mov
ljmp
dec
sub
test
shl
clc
push
add
fs
sub
add
and
add
push
add
push
xor
cld
push
ret
sub
loopne
lea
push
clc
cmp
add
cld
push
ret
dec
mov
sahf
inc
clc
push
pop
xor
adc
add
add
clc
daa
clc
cmp
mov
add
lret
clc
dec
lock
xchg
mov
divb
clc
inc
add
jb
add
cmp
sub
gs
and
add
clc
jne
lret
gs
cmp
add
pusha
add
xor
add
clc
mov
nop
xchg
hlt
pop
push
add
movsl
clc
pushf
std
add
je
add
in
xchg
gs
ret
xchg
add
hlt
mov
dec
and
mov
sar
dec
dec
dec
adc
add
dec
daa
clc
and
ret
clc
fnstcw
cmp
dec
hlt
push
add
loop
out
inc
add
or
jae
add
clc
mov
pop
dec
int
dec
mov
dec
inc
clc
lea
aam
xor
pop
clc
mov
mov
sar
out
inc
add
repnz
clc
or
mov
fs
hlt
stos
cmp
xbegin
fmul
xlat
bound
add
add
inc
add
fwait
dec
int3
imul
add
call
add
into
or
add
add
jns
add
add
cmp
clc
adc
add
add
add
jne
add
sub
es
jo
add
mov
clc
fidivs
add
xlat
and
push
add
sbb
xor
je
fwait
jmp
or
clc
loope
sub
xbegin
push
mov
shlb
call
xchg
movsb
clc
repnz
xchg
clc
dec
aam
movzwl
fwait
jmp
insb
nop
mov
cld
cmp
sub
gs
aam
clc
dec
addr16
sbb
sbb
lcall
clc
inc
clc
fcoms
sbb
and
add
mov
push
ret
sub
pop
mov
mov
aas
xor
add
das
cmp
clc
mov
clc
jns
pop
add
add
dec
dec
sar
add
cmp
pop
fwait
jmp
xchg
sub
clc
mov
add
test
fadd
clc
ret
clc
xchg
pop
enter
push
add
push
add
dec
bound
add
add
lods
cmp
xchg
sbb
inc
push
enter
mov
test
sub
mov
sub
mov
aad
add
rorb
add
add
cmpsl
clc
shlb
lcall
fstp
jne
clc
mov
dec
push
add
shll
clc
mov
add
or
mov
push
in
push
ret
sub
clc
popf
bound
add
repnz
xchg
icebp
out
data16
cmpsl
clc
leave
fadds
add
int
loopne
test
clc
mov
mov
outsl
cmp
pop
decl
add
call
jbe
test
cmp
inc
add
iret
xchg
pop
mov
clc
out
inc
clc
cmp
popa
add
mov
cli
stos
insb
xor
add
icebp
inc
clc
hlt
push
add
cmpsl
clc
jg
clc
fwait
out
cmp
push
clc
hlt
jno
add
add
clc
mov
mov
add
repz
clc
and
add
clc
out
jo
add
add
leave
into
adc
add
clc
test
sub
xor
cld
push
ret
je
adc
clc
inc
add
xor
add
add
xchg
lret
js
clc
dec
adc
add
inc
clc
add
clc
xor
add
or
je
clc
push
add
dec
push
lods
insb
push
mov
clc
pushf
push
mov
jns
out
sub
dec
mov
inc
clc
push
ljmp
cmp
clc
in
cmc
lea
stos
adc
sbb
clc
sbb
clc
mov
les
fwait
jmp
jge
adc
add
ret
jmp
sbb
fwait
jmp
mov
int
repnz
add
inc
clc
nop
mov
test
cmp
clc
sarl
mov
lret
pop
fwait
jmp
aas
sub
out
in
test
cld
push
ret
xchg
dec
cmp
ja
mov
leave
add
clc
lret
xor
arpl
add
add
es
xchg
xor
add
fstp
push
add
mov
add
mov
sbb
clc
push
add
sub
cmp
dec
cltd
fdivrl
cs
push
daa
clc
fs
push
out
cltd
lcall
inc
clc
imul
clc
in
incl
cltd
mov
ljmp
cmpsb
push
xchg
sub
adc
add
add
mov
clc
mov
int
add
xchg
pop
fidivrs
outsl
pop
or
lods
lods
inc
clc
push
loop
jmp
mov
xabort
and
add
add
clc
repz
jg
mov
add
add
add
imul
jge
xchg
call
add
popa
add
movsb
clc
cmp
xor
add
add
push
into
push
add
testl
clc
stos
push
add
and
add
fwait
jmp
test
clc
mov
cltd
es
adc
add
clc
iret
sbb
clc
sub
aaa
mov
add
neg
sbb
add
cmp
add
sar
jg
add
mov
clc
mov
clc
stc
mov
add
mov
or
add
push
pandn
mov
or
clc
and
add
stc
cmp
xchg
cli
fwait
test
jne
cmp
clc
jnp
clc
in
xlat
inc
clc
cmp
out
cmpsb
clc
push
jne
fwait
jmp
cmp
dec
jno
add
call
sbb
hlt
xabort
push
add
test
sbb
add
adc
add
add
popa
add
and
rorl
cmp
mov
fwait
jmp
xor
adc
clc
mov
pop
dec
ret
int
cmp
cmp
clc
sahf
adc
clc
ret
clc
push
pushf
pushl
insb
and
cmp
loopne
fildll
lcall
clc
test
lea
add
repnz
add
add
mov
jge
push
mov
add
add
dec
sbb
push
ret
xchg
adc
add
fidivrs
movsl
clc
std
out
or
lret
mov
repnz
add
sar
add
xchg
pop
mov
pushf
fwait
jmp
scas
push
add
add
or
inc
add
fwait
push
clc
test
js
add
fwait
jmp
scas
push
sahf
insl
or
clc
or
cmp
or
clc
sub
jb
add
add
fildll
sbb
add
dec
repz
sbb
bound
add
add
sbb
popf
and
add
pop
rcrl
add
add
clc
and
add
mov
fwait
jmp
push
scas
adc
xor
add
mov
or
repnz
clc
pushf
fsts
add
add
shll
or
cmp
clc
mov
pop
ret
clc
jle
clc
lock
add
add
add
cmpsl
clc
negb
push
iret
insb
dec
gs
or
add
arpl
add
clc
fwait
popf
lahf
ljmp
scas
incl
clc
inc
add
mov
add
rep
fwait
jmp
sub
fwait
xchg
push
lcall
inc
clc
pop
xchg
jge
push
cmp
int3
addr16
xchg
xbegin
add
shrl
add
mov
imul
sub
loopne
cld
sbb
jmp
pop
push
das
push
test
ljmp
clc
das
mov
cmpsb
clc
cmp
dec
cmp
sub
xchg
sbb
jb
add
add
dec
cmp
lcall
ljmp
xchg
sub
fsubl
clc
sti
repz
add
push
mov
out
xchg
add
add
add
mov
pop
clc
sbb
jmp
lods
push
test
add
inc
clc
test
dec
out
aam
add
fcmovbe
mov
jmp
jg
add
mov
clc
or
add
cmp
fwait
jmp
mov
das
mov
add
addr16
or
jmp
outsl
add
add
push
ficompl
sbb
imul
add
ljmp
mov
clc
cmp
add
add
adc
inc
add
ss
mov
ss
inc
clc
jne
clc
add
add
clc
inc
clc
inc
clc
add
add
clc
cmp
lock
clc
cwtl
cmpsb
clc
test
inc
add
dec
js
rcl
adc
xchg
cmp
bnd
xabort
clc
or
add
add
sarb
aaa
pop
rol
clc
cmp
add
clc
cmp
pop
cmpsl
clc
js
clc
pop
or
push
mov
pop
jg
shll
add
clc
sub
add
sub
and
add
int
xbegin
outsb
fisttpll
clc
cmp
add
adc
cmp
mov
jle
add
leave
fwait
insl
mov
add
lcall
clc
and
add
adc
clc
xor
repnz
insb
jne
or
fnstsw
push
clc
fsub
clc
pop
mov
clc
aam
mov
push
dec
pop
popf
xabort
cmp
test
clc
idivl
add
pop
adc
add
dec
push
fwait
jmp
push
dec
jp
sbb
pusha
fwait
jmp
movsb
sub
adc
add
mov
dec
adc
add
sub
movsb
clc
xchg
jg
pop
arpl
add
pop
sub
add
mov
jbe
jne
push
jne
fwait
jmp
pop
leave
pop
jp
jmp
add
mov
add
pop
stos
xor
sbb
jne
cld
push
ret
dec
or
sar
adc
add
data16
and
add
fdivrs
sar
inc
lret
inc
add
sub
scas
adc
add
add
dec
sbb
mov
clc
lcall
mov
add
mov
int3
pusha
add
loope
popf
icebp
sar
clc
and
call
outsb
shrl
adc
clc
out
pop
adc
add
cmpsb
clc
mov
add
mov
mov
cli
cmp
jge
popa
fwait
jmp
adc
sub
negb
pop
loope
mov
add
push
push
push
popf
inc
add
cmp
or
fsubp
clc
jne
clc
fldcw
adc
add
ss
pop
test
mov
call
enter
add
inc
add
fnstcw
nop
or
add
fwait
ja
cmp
push
or
into
cmc
adc
add
dec
jo
add
inc
clc
xchg
mov
dec
int3
dec
pop
pop
push
ret
fwait
jmp
push
push
movsb
popa
sub
movsb
clc
js
clc
ret
pop
hlt
push
jmp
or
sub
add
and
int3
jp
clc
fistpll
add
sub
add
fisubrl
xbegin
stos
cmc
or
add
popa
add
xchg
out
jae
add
add
rorl
mov
mov
fwait
jmp
xor
clc
cld
decb
add
push
clc
int3
ljmp
push
push
fwait
jmp
mov
sbb
clc
or
pop
cmp
dec
js
clc
mov
aam
cmpsb
clc
popf
enter
add
clc
sarl
mov
add
xor
or
jo
add
rorb
push
out
bound
add
add
jnp
clc
ret
clc
push
cmp
cld
push
ret
sbb
add
jecxz
xabort
mov
mov
add
jecxz
lods
jg
mov
scas
add
add
enter
add
repnz
cli
push
add
mov
xor
add
arpl
fwait
jmp
mov
xchg
iret
xchg
push
add
outsl
xlat
call
lock
clc
ljmp
daa
clc
pop
mov
leave
jns
clc
cmp
xor
clc
in
test
pop
jle
fmuls
add
loop
pop
bound
add
add
lock
add
clc
loop
popf
es
mov
outsl
mov
jne
clc
mov
add
cmp
test
fwait
jmp
je
popa
mov
jl
jno
add
lods
cld
push
ret
and
sub
paddsw
add
sahf
push
clc
cmp
mov
clc
std
xor
add
cmp
sbb
and
rorl
clc
sbb
clc
ljmp
call
adc
add
sub
add
mov
pop
sbb
iret
jne
popf
and
decb
leave
mov
xchg
int3
clc
jno
add
sbb
fwait
jmp
push
movsl
clc
in
sti
ds
mov
mov
mov
lahf
int3
jne
push
sub
mov
mov
xor
add
rclb
arpl
add
out
cmp
mov
imul
in
ds
rcr
pop
clc
adc
clc
dec
addr16
ljmp
jg
and
add
add
xor
add
pop
lea
add
xchg
inc
clc
aad
cmpsb
clc
stos
repz
clc
push
xor
ret
clc
hlt
push
test
add
popf
ja
mov
mov
mov
ret
clc
data16
into
sti
hlt
es
cld
ljmp
clc
test
pop
out
lock
adc
push
add
ror
mov
add
clc
out
dec
pop
push
add
lret
mov
mov
ficoms
and
xlat
mov
and
je
out
aad
test
inc
clc
sbb
cwtl
scas
cmp
sbb
clc
decl
imul
dec
inc
xchg
aas
cmp
bound
add
and
add
mov
jmp
push
jge
sub
pop
mov
clc
out
movsl
clc
ds
jmp
icebp
push
push
cld
push
ret
test
movsl
clc
sbb
sub
das
cmp
das
dec
fstpt
add
push
and
add
ret
clc
cmpsl
clc
ret
seto
jecxz
clc
jo
add
add
into
pop
xchg
jmp
add
inc
add
mov
cltd
and
add
add
cmp
or
or
fwait
jmp
sub
clc
adc
sub
clc
cmpsl
clc
sub
add
xchg
cld
pop
mov
inc
clc
fcoml
clc
decl
test
lcall
stc
data16
iret
lock
in
flds
sbb
and
add
xbegin
mov
sub
jmp
push
dec
outsl
jno
add
add
ficoms
fwait
jmp
test
fistpl
clc
mov
clc
dec
out
aad
in
push
clc
add
add
cld
sets
add
popf
pop
xor
add
and
add
add
or
mov
add
mov
add
mov
add
adc
add
sbb
jb
cld
push
ret
sub
clc
vzeroupper
ds
test
xor
add
clc
lret
push
xlat
inc
clc
out
sti
aaa
ret
clc
and
add
dec
or
add
mov
xchg
lret
inc
add
data16
fs
push
pop
scas
insl
jo
add
add
clc
push
add
ret
clc
aam
in
inc
add
outsl
movsl
clc
cmc
push
add
inc
add
cmp
or
mov
add
pop
adc
add
sub
stos
cmp
clc
jb
add
or
dec
xor
add
mov
jmp
and
add
add
push
add
mov
add
in
das
divb
lret
add
or
clc
push
sbb
clc
and
add
sar
xchg
jge
clc
and
add
fwait
jmp
sub
leave
mov
add
mov
mulb
add
xbegin
lods
add
insl
pop
pop
clc
add
add
ja
adc
add
clc
stos
sar
dec
fldcw
or
clc
shlb
add
push
jo
inc
add
jg
sub
sahf
cltd
mov
add
sub
pop
mov
cmp
sbb
jns
mov
clc
repz
int
add
lahf
and
add
add
adc
add
in
adc
add
clc
fcomp
lock
loope
or
into
loopne
jge
clc
fists
inc
add
decl
icebp
nop
and
clc
jbe
add
es
ret
clc
cmp
mov
movsl
clc
lret
pop
clc
jmp
cmp
jno
add
movsl
clc
fcmovu
enter
mov
shll
cmp
clc
sbb
add
dec
adc
add
push
xlat
cmc
fldt
jnp
clc
push
add
sbb
sub
add
pushf
cltd
jge
aas
shrl
in
jno
add
jnp
and
clc
fisubl
add
add
fwait
jmp
mov
aaa
fiadds
rcrb
xor
add
pusha
fwait
jmp
cmpsb
sub
outsl
sub
sub
mov
sar
push
add
fwait
jmp
add
into
cmp
add
fwait
jmp
lret
mov
push
mov
clc
fbstp
xor
clc
ss
movsb
clc
adc
add
pop
clc
pop
lea
mov
add
add
add
sbb
xchg
lcall
jmp
aas
aaa
sub
jge
or
clc
inc
add
xbegin
sub
adc
add
mov
push
xor
call
das
or
clc
xor
add
in
popa
add
xchg
push
add
loop
bound
add
lods
add
in
shll
clc
dec
push
add
xchg
sar
clc
loope
cwtl
call
data16
cmp
clc
pop
scas
nop
xchg
add
lea
xchg
ja
jnp
add
lret
addr16
adc
add
sar
add
add
add
or
add
jb
add
lret
popf
mov
dec
sub
movsb
clc
sbb
push
ret
sub
pop
sub
icebp
test
icebp
jl
clc
fiaddl
sbb
add
mov
xchg
movsl
clc
outsl
push
cld
ljmp
or
insl
cmp
std
xchg
fmul
or
imul
inc
add
mul
clc
cltd
and
clc
or
add
push
clc
mov
jge
clc
xchg
cld
lret
rcrl
add
push
jl
add
outsb
je
clc
cmp
add
daa
clc
and
std
cmpsb
clc
xchg
mov
clc
aad
and
add
mov
int3
mov
add
ljmp
divb
popa
add
es
pop
inc
clc
or
arpl
add
data16
gs
bound
add
jle
clc
loop
push
add
data16
mov
call
decl
jne
ljmp
or
jns
arpl
add
or
add
lods
pop
sbb
xchg
testb
add
add
test
clc
imul
clc
lods
in
fs
decl
cld
push
ret
sub
sahf
out
cmpsb
clc
xchg
cmc
xbegin
data16
shll
std
lcall
ljmp
shrb
jnp
xchg
imul
mov
imul
or
jmp
sub
cmpb
cmp
push
add
or
clc
xor
add
sub
enter
aam
mov
add
xlat
xabort
in
jl
nop
push
movsl
clc
sub
fisubrl
clc
in
jle
add
fwait
jmp
xchg
dec
scas
fidivl
add
fwait
clc
xlat
adc
add
int
mov
add
mov
movsl
clc
ffree
clc
aaa
mov
gs
inc
clc
xbegin
das
fmul
nop
in
sar
jno
add
clc
jo
add
cmp
add
clc
mov
add
pop
pop
test
jae
add
adc
add
pop
sti
xchg
out
jns
add
push
in
leave
push
add
inc
add
mov
clc
mov
add
xchg
sahf
fninit
clc
aas
xor
clc
cmp
mov
sub
add
clc
ljmp
pop
int3
fisubrl
add
add
clc
mov
clc
adc
add
rsm
aaa
xchg
jb
add
add
movsb
clc
and
add
out
out
repnz
scas
cmp
pop
clc
push
cmpsb
clc
insl
fildl
es
cmp
ffree
clc
xchg
lahf
adc
add
add
lret
dec
mov
and
ds
add
push
sub
fwait
or
inc
add
push
cs
fistl
jl
add
jecxz
movsl
clc
jns
shrb
add
xor
add
add
add
movsb
clc
loope
jmp
add
pop
int3
inc
add
jg
clc
xor
add
clc
cmpsl
clc
sbb
fwait
jmp
add
mov
test
lret
stos
aas
in
jo
add
clc
pop
mov
jae
add
insl
fwait
pop
jecxz
inc
add
push
sub
pop
sbb
sbb
inc
add
sub
sub
add
add
cld
push
ret
push
ja
lods
cmp
push
add
dec
mov
add
sbb
add
add
add
xchg
aaa
es
std
fcmovu
hlt
xlat
jns
loope
lahf
add
add
clc
and
add
ss
call
clc
xor
add
add
clc
jne
push
jb
lcall
pop
sub
add
cmc
jp
clc
jo
add
inc
clc
xlat
jecxz
bound
add
mov
add
fwait
jmp
sahf
adc
clc
imul
cmp
xor
add
clc
insb
mov
nop
icebp
fisttps
clc
inc
clc
adc
add
add
mov
clc
enter
clc
flds
add
clc
cmc
js
hlt
pusha
add
clc
mov
sbb
jmp
testb
pop
bound
add
clc
stos
jno
add
clc
ja
clc
sbb
out
xor
push
ja
clc
std
decb
out
sub
clc
jo
add
bnd
adc
dec
jae
add
jg
icebp
outsl
outsl
lea
adc
add
clc
mov
add
jl
clc
mov
in
outsb
test
or
add
clc
outsb
mov
add
add
add
cwtl
call
clc
bound
add
incl
repz
jmp
ja
sub
add
push
add
xchg
popa
add
push
clc
into
mov
clc
mov
dec
shll
add
cmp
push
inc
add
testb
lcall
add
inc
clc
xor
add
and
jo
add
adc
add
fwait
jmp
sbb
mov
rorl
add
xabort
gs
idivb
add
cmp
push
add
sbb
add
pop
ss
dec
out
fldt
adc
add
and
sub
pop
pop
dec
in
loop
jno
add
mov
fwait
jmp
jno
mov
test
pop
clc
sbb
clc
in
and
add
add
aad
add
push
mov
fwait
jmp
test
arpl
add
lods
out
pop
jne
mov
dec
and
clc
push
pop
sbb
xchg
fimull
out
es
arpl
add
gs
div
ficompl
mov
inc
add
rol
clc
aam
add
imul
mov
mov
test
fidivl
xchg
sub
mov
test
adc
clc
sbb
cmpsb
clc
outsl
arpl
add
imul
sbb
push
ret
sub
aas
dec
jge
sar
clc
dec
aaa
push
clc
sbb
jmp
or
push
inc
clc
jbe
aaa
cmp
add
dec
add
add
add
lret
add
xchg
bound
add
bnd
and
xor
aam
push
push
add
inc
add
dec
mov
pop
leave
push
clc
or
cmp
dec
mov
jb
add
jmp
clc
out
and
add
add
nop
and
add
test
push
xchg
push
add
test
sar
clc
add
add
jnp
mov
add
add
int
cli
pusha
add
pop
into
cmpsb
clc
jae
add
or
add
or
clc
pop
push
clc
mov
add
cmp
mov
xchg
xor
outsb
lock
and
das
leave
movsb
clc
mov
clc
pop
cmpsl
clc
sub
or
jmp
push
ret
sub
cmp
mov
rcrl
clc
leave
add
add
in
adc
add
mov
pushf
es
adc
add
clc
mov
int3
jmp
mov
clc
ret
jns
jg
sub
popa
add
mov
add
add
into
mov
shll
clc
ret
add
sub
clc
mov
clc
mov
sub
clc
pusha
add
adc
push
ret
dec
sub
sbb
inc
add
pop
dec
rcll
push
add
pop
icebp
clc
test
jle
pusha
add
add
movsl
clc
aam
clc
outsl
dec
lock
sti
jg
pop
clc
fwait
xchg
mov
or
ret
clc
loope
and
add
push
add
ss
push
cld
push
ret
push
movsb
scas
cmp
clc
cmp
xchg
ja
lods
cmpsl
clc
jle
clc
movsl
clc
lahf
dec
mov
push
clc
mov
push
insl
enter
push
rcl
adc
add
mov
push
or
push
adc
add
add
ret
clc
js
mov
sbb
jne
lcall
pushl
dec
hlt
xchg
fdivrl
fisubrs
push
add
insl
add
add
push
add
cli
ljmp
or
addr16
xor
leave
pop
mov
push
add
add
add
clc
rcl
int
into
shl
clc
lahf
cmp
clc
data16
imul
add
add
xor
add
add
aam
nop
icebp
or
in
stos
int
nop
inc
clc
repnz
insl
inc
clc
movsl
clc
repnz
cltd
sbb
push
ret
ja
push
dec
mov
clc
lods
hlt
ret
leave
lcall
clc
pop
sbb
rcrb
ljmp
data16
sbb
push
clc
ss
clc
adc
add
xchg
sarb
xor
add
mov
das
fidivrl
add
add
pop
push
repnz
lcall
and
add
add
dec
addr16
inc
clc
sar
cli
aad
dec
mov
or
gs
jp
sbb
add
add
jg
xchg
jo
add
mov
stos
lahf
mov
clc
xor
clc
sar
imul
lods
cwtl
cmp
add
mov
and
add
clc
gs
push
add
jp
clc
nop
mov
cmp
imul
inc
xor
fwait
jmp
and
incl
sti
fwait
jmp
dec
scas
mov
xor
add
jmp
clc
jne
clc
sarb
add
pushf
jae
add
clc
cs
add
aas
rcll
pop
cmc
lcall
lcall
add
xchg
xchg
sbb
loop
dec
inc
clc
pop
ds
clts
clc
stos
cld
js
add
add
sar
clc
popf
inc
add
xor
lods
imul
add
pop
jle
sti
cmp
push
push
fwait
jmp
outsl
jge
sub
jmp
pushl
outsl
ja
in
pop
lret
push
clc
xbegin
add
stos
sub
stos
in
lahf
scas
loope
mov
loope
push
add
dec
arpl
add
mov
cmp
shr
insb
xchg
inc
add
ljmp
clc
sbb
mov
add
enter
mov
xchg
mov
sub
add
out
fwait
aad
clc
mov
fwait
mov
aas
lahf
aam
fs
testb
add
dec
xchg
int
sar
inc
clc
push
mov
pushf
push
add
xbegin
add
addr16
in
ljmp
clc
mov
sbb
decl
add
mov
mov
mov
add
push
cld
push
ret
sbbb
sbb
psubsb
repnz
repnz
test
test
loope
aam
fcomps
mov
add
add
sar
inc
mov
push
nop
or
clc
pop
or
cltd
roll
inc
clc
push
push
fwait
jmp
ja
xchg
scas
cmpsb
es
mov
cwtl
add
add
xchg
cmp
add
lcall
push
add
mov
add
out
mov
clc
cmp
clc
and
add
fld
clc
adc
add
xor
jbe
clc
push
xor
fwait
jmp
test
xchg
or
jb
add
clc
and
add
add
fwait
jmp
dec
sub
clc
xabort
add
dec
dec
insb
leave
mov
push
mov
sub
fs
sbb
pop
or
adc
add
clc
or
clc
out
and
add
jl
jecxz
dec
mov
decl
test
jmp
mov
imul
clc
mov
rol
clc
imul
aam
lahf
ret
out
imul
mov
shl
clc
out
pmulhw
sbb
add
stos
test
jns
gs
jp
add
fmull
add
xchg
mov
ret
mov
xchg
adc
add
cmp
clc
inc
clc
cmpsl
clc
test
clc
arpl
add
clc
dec
cmp
aad
add
es
pop
fcmovbe
jge
clc
xchg
fldt
clc
cmp
mov
add
jmp
or
mov
adc
add
cmc
insb
jno
add
clc
inc
clc
gs
jnp
clc
jb
add
add
fs
sub
sbb
push
ret
sahf
mov
fistpl
mov
and
add
jge
or
add
jae
add
in
loope
sti
xchg
push
add
xchg
in
jb
add
xbegin
sbb
pop
js
lcall
pushl
clc
pop
leave
enter
mov
sti
imul
clc
mov
loop
cld
push
ret
adc
clc
in
es
je
popf
cmp
gs
ret
clc
xor
add
mov
mov
ja
or
stos
int3
cmpsl
clc
pop
setb
add
dec
mov
sub
push
and
jge
xchg
data16
stos
in
sahf
roll
sub
clc
push
icebp
fwait
lock
cvttps2pi
sti
mov
clc
cli
adc
add
clc
sqrtps
add
add
jo
add
je
fwait
jmp
pop
add
add
add
ljmp
adc
push
ret
inc
cmp
add
dec
jmp
mov
gs
inc
add
stos
fisubrs
mov
test
pop
pop
in
jns
mov
data16
mov
inc
clc
push
clc
fstl
add
add
add
add
sub
call
add
add
mov
lea
add
jae
add
add
sbb
xor
add
add
call
add
and
rcr
sub
pop
jnp
clc
fcmovne
leave
pop
xor
add
add
jo
add
sbb
lock
cmp
sbb
jge
fwait
jmp
sub
addr16
aad
clc
mov
rol
clc
stc
mov
fs
or
hlt
call
add
in
dec
add
lods
mov
mov
push
fwait
jmp
adc
cli
bound
add
adc
add
add
sbb
clc
inc
add
movsb
clc
jo
add
jmp
sub
nop
test
dec
fstpt
jmp
sub
mov
push
stos
leave
mov
clc
cmp
mov
clc
adc
add
call
mov
clc
or
pop
mov
mov
fimuls
mov
add
insb
addr16
decb
inc
add
popa
add
in
xor
add
adc
add
ds
mov
xchg
or
dec
pop
movsl
clc
outsl
test
mul
clc
loopne
mov
aad
cmp
clc
insl
insb
and
add
add
decl
xor
add
dec
incl
out
mov
or
and
add
add
add
sbb
jmp
sub
xor
insb
inc
add
jns
clc
mov
xor
add
stc
pop
scas
add
mov
rcr
fucomi
notb
push
or
repz
xchg
fsubr
mov
cs
clc
or
clc
std
loopne
pop
movsl
clc
loop
push
jmp
sar
clc
cmp
cmp
ret
in
ja
jo
add
push
add
sub
fwait
jmp
xchg
dec
or
leave
rorl
push
mulb
clc
lahf
xor
add
xor
clc
mov
sbb
test
push
clc
mov
add
pop
clc
mov
add
inc
add
mov
mov
cmp
mov
xlat
or
imul
movsb
clc
pop
xchg
das
daa
clc
rol
clc
out
out
popf
iret
iret
jg
push
testl
fwait
jmp
repnz
stos
inc
add
xchg
fsincos
ss
add
push
leave
fwait
jmp
sahf
jno
aas
inc
and
inc
add
fdivl
or
add
bound
add
add
dec
xor
add
add
sarb
add
jmp
jle
add
mov
hlt
cmp
movsb
clc
push
jmp
int
mov
call
fwait
jmp
inc
xchg
sub
sub
fsubl
add
jge
jns
add
ljmp
cmp
int
out
test
inc
add
daa
clc
add
data16
fs
jb,pn
add
jnp
std
push
pop
clc
popf
fs
jno
add
clc
mov
push
add
fcoml
clc
cmp
clc
xor
add
clc
addr16
fadd
clc
pop
clc
fsubrl
mov
jmp
sub
add
add
push
adc
fwait
jmp
sub
clc
insl
cmp
push
mov
clc
xchg
loope
mov
clc
arpl
add
add
clc
dec
fidivs
add
clc
add
add
clc
fidivl
add
dec
sub
add
push
add
fwait
jmp
dec
lods
push
icebp
sti
incl
lods
add
sub
sar
add
lret
xchg
add
add
add
and
add
clc
fadds
add
push
fistps
ss
clc
repz
iret
ror
sbb
mov
mov
dec
lods
jecxz
adc
add
movsb
clc
popf
loopne
xchg
pop
mov
cmp
clc
sub
pop
loopne
sub
shlb
and
clc
sbb
inc
add
xchg
rdseed
mov
clc
xchg
xchg
add
add
xchg
xor
clc
out
push
icebp
mov
add
add
pop
fwait
jmp
jg
popa
add
mov
add
adc
add
clc
pop
lcall
xor
add
imul
push
lahf
aad
add
adc
add
jne
lods
mov
insb
jae
add
clc
adc
jp
mov
clc
cltd
cmc
aam
bound
add
clc
pusha
add
cmovne
jo
add
add
mov
add
ja
clc
lods
stc
aad
fwait
stc
scas
mov
xchg
cmp
mov
clc
adc
add
mov
add
adc
jmp
lea
data16
mov
clc
ja
sbb
out
cmp
outsl
push
mov
mov
cmp
sub
mov
adc
add
loop
ljmp
clc
cmp
int3
inc
clc
bound
add
mov
sbb
clc
xbegin
add
cmp
clc
cmp
push
jmp
add
add
add
add
lods
sbb
inc
clc
mov
das
mov
xchg
lret
outsl
fimull
cmp
jo
add
xchg
push
mov
or
fsts
call
sub
pop
clc
das
out
push
add
data16
cli
jg
clc
in
inc
add
pop
jno
add
add
mov
pushl
fwait
jmp
xchg
add
ficompl
sahf
inc
clc
lahf
repz
mov
scas
inc
add
fidivs
add
dec
into
xchg
es
inc
add
jns
add
icebp
mov
add
sub
clc
inc
add
bound
add
add
mov
inc
add
sbb
ja
ljmp
insb
sub
adc
cmpsb
clc
sar
test
fwait
jmp
sub
cwtl
dec
sbb
popf
inc
clc
pop
clc
mov
sbb
inc
clc
mov
fcomp
add
mov
pop
cmp
mov
fwait
jmp
fwait
sub
jb
add
add
xchg
incl
dec
cmp
jmp
imul
jne
clc
xchg
test
mov
fstl
add
mov
pop
clc
sub
jmp
clc
sti
pushf
cmc
or
cmp
sub
xchg
leave
and
add
imul
clc
adc
clc
sub
add
push
pop
clc
mov
adc
add
push
fwait
jmp
sub
or
add
outsb
mov
clc
xchg
in
jle
add
bound
add
clc
es
gs
dec
pop
into
stos
lock
jp
or
test
add
das
mov
fwait
jmp
xor
data16
cmp
push
or
push
ret
sub
xlat
aad
add
cmp
push
clc
jae
add
inc
clc
inc
clc
scas
pusha
add
fucomp
adc
clc
lea
xbegin
clc
sbb
add
hlt
dec
addr16
jb
add
loopne
cmp
add
cld
jle
repnz
cmp
clc
mov
clc
aaa
cmpsb
clc
sahf
clc
enter
add
iret
jp
clc
out
rcrb
adc
add
fwait
lock
clc
fists
jmp
pop
push
push
xor
rorl
push
sbb
clc
xchg
lcall
shll
add
add
xor
add
clc
mov
fsts
add
xchg
sbb
lahf
inc
add
loopne
data16
xbegin
out
sbb
xabort
add
lcall
clc
dec
punpcklbw
add
xbegin
xor
add
hlt
pop
adc
jbe
clc
js
ja
add
cmpsl
clc
jb
add
rcll
add
clc
and
mov
jbe
mov
clc
pusha
add
mov
add
lret
xlat
rcrb
adc
mov
fstpl
add
xor
sti
fistpl
clc
push
clc
fwait
leave
fsts
add
fists
add
clc
fdivl
adc
add
add
fxch
es
push
or
or
mov
fisttpl
mov
clc
xchg
and
add
add
sbb
jp
fwait
jmp
sbb
sti
inc
add
add
add
mov
jg
clc
xchg
in
cmp
jae
add
jecxz
call
jmp
and
sub
aaa
sti
hlt
aaa
test
fimuls
das
or
test
testb
fwait
jmp
data16
out
std
fcomps
lea
add
or
add
mov
add
jl
mov
fwait
xabort
ljmp
stos
pushf
mov
sbb
add
push
stc
loopne
xor
cld
add
add
dec
aad
sar
pop
test
mov
loop
or
cmpsb
clc
push
loope
push
push
fwait
jmp
int
push
add
cmc
int3
push
add
or
mov
nop
jg
orb
mov
call
or
clc
inc
clc
sbb
stos
cmp
clc
sbb
cli
insl
xlat
in
out
xor
add
inc
add
mov
push
add
jle
push
push
ret
scas
adc
or
add
add
sbb
add
and
add
jp
mov
clc
push
inc
add
std
cmpsl
clc
xor
add
inc
clc
push
in
jno
add
pop
pop
call
mov
add
push
and
shrb
add
xor
add
xor
add
clc
lods
push
jmp
sub
add
sub
add
enter
bound
add
mov
add
ss
test
inc
add
push
mov
inc
cld
push
ret
jno
lods
push
arpl
add
nop/reserved
jnp
mov
clc
sbb
mov
clc
stos
push
test
sbb
cli
jp
add
or
adc
lcall
jg
mov
add
out
inc
add
ret
clc
arpl
add
clc
pop
clc
outsl
pop
dec
ja
fcompl
jle
dec
js
xchg
push
or
sub
add
call
jb
add
pop
push
add
jbe
add
xchg
push
add
jmp
icebp
sub
clc
mov
flds
sahf
inc
jg
jno
add
cmpsb
clc
mov
into
into
inc
add
add
mov
clc
mov
fists
clc
mov
push
pop
rolb
clc
daa
clc
push
dec
jl
cs
jge
js
clc
xor
add
in
mov
clc
cmc
jmp
push
cmp
add
pop
cmp
push
fcomps
sbb
clc
stc
outsb
jns
push
add
mov
push
add
xchg
xchg
clc
mov
fwait
out
in
add
add
dec
jl
pop
popf
cwtl
data16
jg
pop
cmc
inc
clc
sub
add
push
pop
and
xchg
fldcw
cli
cmp
mov
add
sarb
dec
cmp
add
mov
clc
sar
xor
cmp
sub
ds
clc
pop
push
jmp
add
pop
mull
add
fwait
jmp
lods
mov
std
lret
mov
add
sbb
fadds
insl
mov
adc
add
test
jmp
add
add
add
add
add
mov
pop
pop
xchg
imul
mov
mov
push
add
mov
pop
fidivrs
add
outsl
js
push
cli
roll
add
or
clc
mov
clc
pop
mov
jp
clc
or
add
jne
clc
cmp
clc
push
add
or
inc
clc
xchg
mov
clc
add
add
iret
sub
add
out
rorb
clc
dec
aas
xchg
push
add
pop
mov
ljmp
pop
sbb
add
loop
insl
cmc
adc
add
fimuls
pop
jb
add
clc
add
add
add
xchg
sub
adc
add
clc
sbb
dec
mov
insl
mov
insb
and
icebp
out
lret
add
clc
and
add
add
clc
jmp
jle
cld
mov
test
push
sbb
clc
cmp
clc
adc
add
push
push
clc
xchg
daa
clc
jge
repnz
push
add
adc
add
enter
cmp
inc
clc
pop
jne
add
pop
dec
add
mov
sub
jnp
ja
mov
je
add
mov
xchg
pop
clc
jb
add
cmpsl
clc
stc
mov
dec
mov
jne
clc
lock
and
add
add
insl
jae
add
add
or
ret
clc
and
add
daa
clc
popl
add
mull
pop
mov
jae
add
clc
sbb
pop
inc
clc
mov
sub
ret
clc
gs
popl
clc
push
xor
add
add
sar
add
outsb
inc
add
sub
push
add
pop
repz
bound
add
add
cltd
xor
mov
clc
das
addr16
push
clc
push
mov
xchg
das
sar
add
iret
inc
clc
jmp
clc
fsubr
icebp
jno
add
das
jge
clc
popf
shlb
xchg
shll
scas
mov
add
pop
jl
or
cmp
pop
push
add
pusha
add
jp
jmp
push
cld
lret
cmp
fdivrs
clc
pop
insl
mov
sahf
outsl
sub
ja
clc
int3
aam
sar
popf
push
add
aad
add
jp
add
lret
jg
movsl
clc
ljmp
dec
push
jle
or
adc
add
add
push
clc
inc
clc
cmc
test
hlt
test
ret
cmpsl
clc
adc
add
xchg
sub
cmp
fisttpll
xchg
push
add
add
mov
or
jno
add
loope
push
in
bound
add
sub
sub
and
add
add
scas
aam
dec
inc
clc
jecxz
cmp
data16
fnstsw
clc
mov
add
jg
inc
add
ror
jle
add
mov
add
clc
cmp
ja
or
add
lods
hlt
test
add
addr16
sbb
out
pop
leave
clc
aas
mov
dec
scas
dec
inc
clc
jge
loop
imul
mov
mov
add
mul
clc
je
scas
call
adc
add
test
push
mov
push
add
sub
and
mov
clc
sar
movsb
clc
scas
clc
dec
add
add
add
lret
add
popa
add
sub
mov
pop
in
into
fcmovnbe
and
cmpsl
clc
call
add
popf
dec
movsb
clc
mov
pop
sbb
add
clc
fidivrs
mov
add
fucomp
sahf
sar
mov
sub
adc
add
mov
repz
clc
bound
add
add
jbe
clc
test
repz
jle
jge
in
add
add
add
add
rolb
mov
and
add
clc
jge
cs
aas
mov
xor
add
mov
in
test
sarl
clc
das
js
mov
test
push
sbb
add
lret
js
lret
daa
clc
mov
clc
out
ljmp
clc
cs
add
lods
das
repnz
in
mov
add
cli
xor
add
clc
add
cmp
clc
fimuls
testb
arpl
add
das
cmp
call
add
xor
add
mov
lock
dec
mov
add
push
clc
notl
int3
cvtps2pi
sbb
add
inc
add
and
shlb
test
mov
gs
in
cmp
mov
mov
and
add
mov
jp
clc
int3
sub
push
clc
fcomip
adc
add
add
add
rcrb
clc
cmpsb
clc
stos
dec
dec
mov
fwait
or
fiaddl
add
loope
test
ss
outsb
jb
add
clc
jb
add
je
add
sar
iret
and
add
mov
add
mov
and
out
int
add
xchg
fists
out
inc
add
outsl
xchg
sub
add
xchg
adc
add
clc
test
lret
push
test
sub
jb
add
aam
xchg
xchg
xchg
lret
addr16
cmp
sarl
std
adc
add
add
test
clc
lea
xlat
sub
cmp
add
or
clc
adc
clc
mull
add
pop
adc
add
pop
cmpsb
clc
lock
imul
sti
flds
clc
jge
clc
out
stc
in
sbb
add
fisubrl
idiv
roll
clc
ret
clc
imul
pop
insb
xchg
jge
pop
jns
push
cs
add
clc
mov
xor
add
divl
mov
mov
leave
int
mov
pop
fcomp
pusha
add
mov
xabort
clc
cmp
clc
mov
add
int3
sbb
cltd
mov
jb
add
mov
clc
cmp
lea
add
add
cmp
clc
insb
int
clc
testl
add
gs
movsl
clc
stos
and
add
mov
cld
sub
cmp
clc
lods
fdivrs
cmp
clc
fs
sub
or
push
sub
pop
xor
add
clc
je
add
clc
sbb
cmp
jo
add
clc
cli
inc
clc
in
jge
clc
stos
mov
sarl
cli
sar
lods
xchg
dec
and
add
add
add
adc
add
sub
add
cmp
clc
add
add
clc
fld
clc
cmp
cmp
sbb
mov
add
or
cmp
add
add
add
clc
or
jge
jo
add
jnp
scas
adc
add
or
out
push
clc
xabort
clc
imul
adc
in
adc
mov
lods
mov
add
mov
xchg
and
daa
clc
ficomps
add
sub
add
mov
outsl
fcmovne
fisttpll
cwtl
jo
add
adc
fwait
sarb
add
and
add
mov
or
cld
das
xor
add
add
daa
clc
es
or
add
dec
sti
jne
dec
or
std
add
add
add
in
xabort
pop
imull
inc
add
cmp
clc
test
pop
clc
xlat
sub
xchg
xchg
mov
and
test
mov
add
add
add
mov
clc
into
scas
pop
cmp
add
into
out
adc
cs
scas
and
add
leave
mov
xchg
sbb
lock
xor
add
test
call
cld
mov
clc
jmp
add
loopne
inc
clc
sahf
sahf
inc
add
cmp
add
push
into
movsb
clc
test
adc
add
add
loope
outsl
jle
clc
or
clc
inc
add
xchg
testl
insb
mov
xbegin
clc
je,pt
add
div
gs
repnz
mov
mov
xchg
mov
clc
adc
add
add
add
cwtl
icebp
cmp
cwtl
sbb
lahf
lock
xchg
lcall
mov
lahf
mov
sub
clc
pop
mov
sbb
clc
scas
pop
cmp
in
jae
add
inc
clc
inc
add
popa
add
dec
mov
pop
clc
cmp
add
pop
push
repnz
jp
clc
xor
add
add
add
pop
push
sti
cmpsb
clc
ficoms
iret
cwtl
fidivl
clc
and
add
dec
sbb
clc
loop
loop
fists
add
insb
test
add
add
and
add
pop
pop
add
fwait
aas
add
cld
lea
sar
clc
fbld
lahf
add
add
add
add
add
inc
clc
mov
dec
jns
mov
sti
sbb
bound
add
or
add
dec
push
stos
aad
sbb
mov
jno
add
sub
clc
mov
idivb
inc
clc
mov
or
loop
xor
add
fwait
js
lods
in
xlat
data16
enter
add
loop
mov
imul
add
cmp
pop
xchg
xor
clc
cmp
add
pop
clc
fwait
mov
clc
pusha
add
dec
lret
cmpsb
clc
dec
inc
add
outsl
jnp
clc
or
pop
clc
pushf
fidivrs
scas
or
sar
or
inc
clc
cmpsl
clc
js
shl
clc
in
sahf
aam
idivb
pop
clc
mulb
add
or
clc
mov
jnp
add
aad
clc
fnstenv
push
scas
or
clc
dec
insl
loop
popf
mov
fwait
mov
inc
add
inc
clc
arpl
add
add
add
add
frstor
mov
mov
clc
jg
clc
dec
popa
add
xchg
xor
add
lret
inc
add
adc
add
out
cli
addr16
jns
add
mov
shl
clc
mov
inc
add
out
xor
cwtl
mov
divl
and
add
cli
dec
shlb
negl
add
fidivrs
arpl
add
mov
xbegin
add
cmp
clc
data16
rcr
std
out
ss
clc
nop
xabort
pop
push
jle
call
sub
xor
add
lcall
jae
add
test
es
cmc
jge
cmp
mov
sbb
clc
sub
clc
jle
inc
clc
and
add
add
mov
pushf
jmp
sub
and
imull
pop
clc
into
outsl
xabort
addr16
sbb
ret
clc
popf
jae
add
clc
loopne
sub
clc
fstps
in
jp
dec
cltd
ret
clc
ss
adc
add
push
arpl
add
clc
mov
clc
bound
add
ret
clc
xor
add
xchg
hlt
lret
testl
add
and
add
out
adc
add
clc
or
clc
cltd
pop
imul
push
mov
sub
dec
sar
clc
dec
push
add
nop
movsl
clc
lea
add
sbb
clc
cmc
xor
add
mov
mov
xbegin
test
cli
xbegin
out
push
add
cltd
pop
ret
clc
sbb
cmp
xor
add
nop
cmp
adc
add
imul
push
push
cmpsb
clc
cmp
clc
pop
loop
push
daa
clc
pushf
xchg
lret
xchg
push
add
shlb
add
jnp
sbb
mov
pop
rcr
addr16
mov
mov
std
add
inc
add
and
fsubp
clc
movsb
clc
adc
add
fs
inc
add
cli
rol
clc
cld
push
add
test
or
add
int3
mov
clc
loope
xchg
or
add
pop
lret
xchg
test
es
inc
clc
daa
clc
cmp
clc
cld
mov
add
pop
mov
clc
ds
add
pop
mov
sar
mov
xchg
push
add
sub
clc
fstl
add
add
jmp
cmp
dec
sub
jne
jnp
jg
out
mov
jb
add
hlt
std
outsb
dec
mov
shlb
add
jge
inc
clc
or
int
ja
and
add
clc
out
daa
clc
out
mov
jns
cltd
xchg
mov
jmp
pop
clc
fwait
jmp
add
outsl
das
arpl
add
outsl
and
test
adc
add
stos
movsl
clc
sahf
inc
add
cwtl
mov
stos
js
clc
fs
hlt
dec
and
divb
add
sahf
add
add
je
sub
sbb
icebp
pop
imulb
clc
sti
aas
mov
dec
lods
mov
xlat
fsubrs
aad
jmp
add
jns
xlat
mov
loopne
outsl
in
es
xchg
popf
popa
add
and
add
stos
mov
jbe
push
cli
sti
push
sub
push
clc
imul
add
add
add
cmpsb
clc
adc
add
add
js
cmc
ja
pop
mov
jno
add
std
push
add
jo
add
push
add
in
push
or
add
test
push
adc
add
mov
adc
mov
sub
shl
jne
fidivs
add
stos
rclb
lret
cmp
icebp
fwait
pop
clc
mov
lea
add
push
arpl
add
adc
add
cmp
clc
push
add
jle
clc
inc
clc
pushf
fcomi
arpl
add
ljmp
leave
sub
add
xor
add
das
adc
add
leave
rorb
push
add
mov
hlt
mov
sbb
dec
adc
fdivrp
mov
jo
add
add
clc
push
jbe
xor
add
inc
add
push
mov
xchg
mov
inc
clc
lods
xchg
mov
mov
into
pop
ret
test
xchg
push
add
cli
rcll
enter
mov
or
inc
add
lret
ret
clc
pop
clc
loopne
addr16
shll
cli
push
add
inc
add
mov
clc
loope
pop
adc
push
arpl
add
jo
add
mov
mov
sar
clc
inc
clc
ja
clc
lock
clc
cmc
xor
xor
add
pop
sub
mov
sbb
clc
add
add
add
add
add
xor
add
lret
outsb
sbb
cs
jb
add
jo
add
add
dec
or
xchg
adc
push
add
lods
cmp
mov
jecxz
test
add
mov
ficompl
movsb
clc
sar
mov
add
cmp
adc
add
xor
add
mov
hlt
lock
xchg
push
adc
xchg
mov
cmp
mov
push
cli
inc
clc
lret
inc
clc
mov
cwtl
mov
cld
icebp
sub
pop
adc
add
xchg
cs
or
clc
pop
mov
clc
clc
mov
clc
cwtl
cmp
clc
jle
add
iret
repnz
clc
sarb
add
jb
add
jbe
sub
add
sbb
sbb
clc
xchg
pop
js
stos
cmp
pop
je
sbb
sbb
mov
add
mov
and
bound
add
clc
lea
nop
dec
sub
push
clc
bound
add
pop
push
inc
clc
insb
imul
inc
clc
push
inc
clc
jbe
or
fld1
cltd
push
add
pop
rcrb
addr16
stc
pop
xor
add
add
clc
in
into
aaa
and
add
add
cld
test
xor
add
clc
lock
icebp
es
mov
push
add
ret
clc
stos
mov
add
xor
add
cs
leave
data16
mov
mov
clc
mov
add
clc
mov
fcompp
fiaddl
clc
test
clc
sbb
add
gs
int3
sti
xor
add
das
lods
pop
clc
pusha
add
push
add
or
outsl
dec
test
xor
add
mov
js
scas
clc
adc
idivl
jmp
dec
inc
clc
inc
add
sahf
clc
addr16
add
sub
stc
cmp
clc
xor
add
iret
xor
add
clc
sbb
add
ds
pop
sbb
mov
mov
pusha
add
insl
sar
push
xor
add
jnp
add
mov
pop
fadd
clc
mov
add
inc
add
lcall
loopne
push
clc
jbe
sub
add
add
push
jp
dec
outsb
cld
loop
push
xchg
leave
gs
sub
fidivs
add
mov
sbb
push
add
stc
clc
ja
cltd
adc
add
adc
add
clc
ret
clc
incb
addr16
sbb
sbb
dec
inc
clc
jp
push
ja
fld
clc
jle
inc
clc
lods
and
add
mov
fld
clc
lock
icebp
test
pushf
push
jnp
clc
out
gs
add
add
clc
out
movsb
clc
ss
cld
fcom
xchg
popa
add
dec
jo
add
sbb
add
jle
clc
xbegin
clc
movsl
clc
adc
add
sahf
xchg
cmp
jl
nop
push
divb
add
jmp
push
add
push
cmp
adc
jg
clc
pop
sarl
jae
add
loope
dec
inc
add
insl
aas
dec
pshufw
cmc
cltd
in
mov
mov
and
add
clc
sbb
int3
mov
clc
faddl
add
stos
test
pop
adc
clc
jns
jmp
das
sar
pop
or
add
inc
add
push
add
ja
add
pop
scas
lods
push
push
add
pop
clc
pop
pop
loope
cmp
clc
gs
and
add
shrl
cmp
inc
add
cmp
stos
sub
mov
jmp
lods
faddl
insb
pop
scas
stos
add
add
adc
add
clc
mov
pop
mov
clc
arpl
add
outsl
test
daa
clc
cmp
jecxz
cmp
add
cmp
je
pop
out
test
cmp
rorl
in
fsubp
clc
or
mov
dec
fst
mov
dec
ret
clc
frstor
add
add
hlt
jle,pn
sub
ss
out
insl
dec
jns
mov
clc
xchg
dec
sub
push
decl
add
test
and
inc
clc
int3
inc
clc
test
fs
inc
clc
jp
mov
pop
or
clc
cmpsl
clc
cmpsb
clc
lods
cmpsb
clc
ret
jb
add
clc
aam
clc
cmp
clc
and
add
outsl
fcom
mov
cmp
add
jmp
add
cwtl
or
mov
add
int
mov
add
sbb
pop
dec
and
add
add
jns
jae
add
int
cmc
push
xabort
adc
add
push
mov
push
sbb
sahf
adc
add
clc
pop
and
add
jae
add
mov
jle
jp
pop
pop
and
add
sarb
insb
loop
xchg
jns
clc
mov
push
repz
icebp
jg
add
std
sub
add
and
sti
xor
add
popf
ret
cmc
aad
mov
mov
out
mov
sbb
clc
mov
clc
sub
add
scas
cmp
mov
add
cli
mov
neg
and
add
outsb
sbb
sub
add
cmp
add
icebp
mov
bound
add
clc
xbegin
clc
or
add
add
add
add
mov
mov
clc
pop
adc
xchg
adc
add
inc
clc
dec
mov
decb
imul
aaa
into
fwait
sbb
add
inc
add
and
add
clc
cmp
clc
lea
clc
sub
sub
cmp
add
add
clc
inc
add
add
add
cmpsl
clc
pop
jbe
clc
pusha
add
icebp
mov
iret
mov
clc
sbb
iret
test
sub
clc
out
sahf
lret
insl
repnz
shrb
clc
iret
insl
in
pusha
add
mov
clc
mull
aad
pop
mov
rolb
add
clc
adc
clc
adc
add
fldl
add
js
js
clc
jbe
xchg
sti
mov
sub
sub
add
cmp
push
cs
add
push
sahf
cmc
mov
cs
push
add
pop
clc
add
add
sahf
xchg
rcl
push
lcall
dec
jbe
jns
clc
aam
mov
clc
enter
mov
or
clc
shlb
test
pop
xchg
jno
add
clc
mov
lret
push
add
rol
clc
test
out
aam
dec
cmp
cmp
add
sbb
mov
add
push
add
add
pusha
add
sti
mov
clc
mov
xchg
xor
add
int
mov
and
add
clc
jnp
repnz
clc
cs
sub
lods
jnp
clc
mov
je
mov
add
dec
sti
loop
test
jge
into
xbegin
ret
clc
gs
scas
cmp
sbb
add
fistl
push
mov
add
fsub
clc
fisubrl
add
clc
push
adc
clc
in
sarl
clc
mov
sti
pop
js
mov
aas
push
cmp
cmp
xabort
clc
sub
cmp
clc
inc
clc
adc
add
sbb
adc
add
clc
roll
pop
xlat
and
add
leave
inc
clc
mov
clc
inc
add
imul
in
cli
arpl
add
sub
add
iret
xchg
lret
clc
mov
jmp
add
cmp
jne
outsl
xor
add
xor
add
mov
sbb
sbb
add
and
add
test
add
test
sbb
popa
add
outsb
xlat
mov
add
lret
add
add
add
inc
clc
sbb
xbegin
fisubl
mov
and
add
add
mov
sar
stos
stos
aam
adc
add
add
xabort
in
imul
pop
and
clc
adc
add
clc
fs
pop
push
cmp
adc
or
clc
jp
out
and
add
push
add
push
add
push
mov
dec
icebp
inc
clc
xchg
stc
jns
mov
add
outsl
lods
mov
sbb
clc
dec
cltd
and
add
add
int3
lret
cmp
or
sbb
lock
jg
clc
xchg
outsb
das
shl
cmp
add
out
inc
clc
jg
clc
dec
arpl
add
clc
jge
test
loopne
add
add
bound
add
add
sarb
jae
add
add
sub
sub
push
push
add
sub
add
sub
inc
add
add
add
scas
data16
dec
jmp
clc
xchg
lahf
leave
xor
add
xor
add
clc
push
mov
sub
add
xor
es
aam
push
das
mov
add
dec
lret
repz
jo
add
mov
dec
cltd
mov
clc
dec
call
push
add
inc
add
in
mov
add
add
clc
aas
xor
add
and
xchg
cwtl
lods
lods
lret
lea
clc
jle
fcmovbe
loope
sahf
sbb
add
add
jne
push
enter
add
mov
adc
adc
add
js
add
xabort
mov
add
inc
clc
into
loopne
sar
clc
jmp
clc
or
clc
out
movsl
clc
jns
add
xchg
adc
add
std
push
add
inc
add
jb
add
mov
add
fsubl
pushl
xchg
jns
or
xor
add
clc
pop
add
add
clc
lea
add
punpckhdq
jne
pop
xor
add
xchg
ljmp
cmp
aas
xchg
cmpsl
clc
sti
dec
lcall
pusha
add
mov
pop
movsb
clc
pop
cltd
decb
test
insb
outsl
fdivrs
lods
loop
outsb
pop
cs
fwait
and
cli
mov
xchg
call
arpl
add
cmpsl
clc
xchg
inc
add
aam
cmp
clc
inc
add
rcrb
call
add
add
inc
clc
lret
cmpsb
clc
dec
fs
mov
shlb
jge
pusha
add
push
jle
dec
inc
clc
sar
test
mov
jno
add
jecxz
aas
addr16
xor
add
add
add
add
add
insb
popa
add
in
and
pusha
add
xor
add
lods
sbb
push
add
and
mov
jmp
clc
aad
clc
stos
sbb
clc
xchg
mov
add
inc
add
cmp
add
clc
adc
add
sahf
xor
clc
inc
add
mov
inc
add
dec
sub
clc
jae
add
nop
leave
push
clc
pop
jae
add
add
pushf
loope
pushf
pop
inc
add
pop
clc
inc
add
ds
mov
clc
mov
add
sar
jo
add
add
add
jg
inc
add
fwait
clc
in
cmpsb
clc
xor
imul
pop
gs
mov
add
aam
jp
jns
lcall
mov
mov
add
push
add
imul
clc
inc
add
cmp
mov
insl
pop
icebp
mov
add
cs
cmp
bound
add
xor
add
mov
mov
clc
stos
dec
jns
xor
add
adc
add
ficoms
mov
xchg
clc
push
sub
adc
add
adc
add
pop
clc
fidivl
push
xchg
and
sub
add
nop
clc
call
push
xchg
sub
clc
in
stos
ret
clc
fmuls
xabort
repnz
clc
cmpsb
clc
mov
and
add
cmp
and
cmp
idiv
lods
data16
mov
fsubrs
cmp
push
iret
add
add
mov
daa
clc
adc
test
daa
clc
arpl
add
std
push
pop
in
fistps
ljmp
add
mov
add
add
add
inc
add
test
jne
clc
fisttps
outsl
dec
loop
fldl
add
leave
cmp
add
clc
jge
clc
addr16
cmc
cmpsb
clc
sar
push
jne
mov
or
adc
add
pop
clc
add
xor
fwait
add
jg
frstor
sbb
add
push
mov
push
adc
add
add
test
pop
mov
test
xor
inc
clc
push
add
aas
in
nop
data16
jno
add
add
sub
clc
lods
out
in
and
add
scas
nop
adc
pop
sbb
clc
test
int3
cmpsb
clc
pop
fstpt
popa
add
test
pop
push
add
jno
add
shlb
add
cmp
sub
and
add
or
add
adc
pop
clc
and
add
inc
clc
lret
xlat
push
add
outsl
aas
xchg
repnz
dec
lock
pop
clc
aad
push
lret
pop
mov
clc
loop
out
insl
cmp
add
jno
add
xor
add
pop
xchg
nop
push
add
add
add
repz
add
sbb
add
inc
add
idivb
add
fstp
cwtl
sub
push
or
and
add
clc
scas
and
add
sar
hlt
inc
clc
add
add
xbegin
xchg
jno
add
sbb
add
mov
stos
clc
push
dec
enter
cmp
add
add
add
add
clc
insl
sub
hlt
adc
add
and
add
inc
add
lret
popf
sbb
aad
cltd
mov
mov
out
out
ficomps
mov
sub
cmp
push
add
add
add
clc
gs
insb
xchg
xchg
xchg
or
clc
sbb
clc
mov
ja
or
clc
loopne
test
sbb
cmp
enter
insl
popa
add
outsb
in
outsl
insb
add
add
add
jecxz
cmp
data16
movsl
clc
and
add
clc
pop
rorl
es
inc
add
in
fwait
or
je
mov
clc
bound
add
clc
pop
fdiv
push
daa
clc
ljmp
mov
add
fadds
clc
push
bound
add
xor
add
push
jecxz,pn
or
clc
enter
sbb
fwait
mov
clc
ja
and
add
clc
mov
pop
vmovhps
mov
sub
add
add
addr16
push
pop
xchg
rcl
and
cli
loopne
stc
out
sub
mov
clc
cwtl
cmp
sbb
sub
mov
mov
add
cmp
outsb
cmp
add
add
clc
loope
jno
add
mov
inc
add
xchg
jbe
push
clc
sub
test
adc
add
add
jo
add
add
lahf
out
arpl
add
mov
cs
jge
cli
inc
add
pushf
jle
clc
pop
rcrb
or
jp
cmp
add
jle
xchg
leave
or
add
add
xchg
insb
sub
das
test
je
xor
add
add
arpl
add
add
dec
test
jl
inc
add
sub
clc
lcall
add
xor
add
popa
add
mov
adc
add
add
ljmp
mov
roll
add
clc
sub
push
jnp
enter
fcmovu
icebp
xabort
add
push
pop
sub
sbb
daa
clc
out
es
pop
clc
sbb
mov
cmp
inc
add
popf
or
cwtl
ljmp
cmc
and
add
cli
mov
or
clc
lods
jl
add
iret
pop
into
icebp
mov
sub
sarl
insl
dec
push
dec
lock
add
cmpsl
clc
or
clc
mov
pop
jmp
mov
dec
ja
jae
add
cld
sub
fiadds
add
insl
push
add
or
cli
dec
and
add
pop
push
add
or
clc
push
or
clc
pop
or
je
js
add
inc
add
xor
clc
xor
add
fildll
clc
popa
add
cs
xchg
cs
lret
minps
clc
push
clc
loopne
inc
add
movsb
clc
sahf
adc
add
add
add
sbb
sub
stc
sub
mov
inc
add
add
add
lcall
iret
sbb
jne
clc
sar
loop
mov
lret
jmp
add
add
sti
jl
clc
sbb
in
ret
ljmp
aam
xchg
outsb
pop
aad
fbstp
pop
clc
in
dec
aad
in
cmp
add
add
add
cmp
add
ret
clc
leave
push
add
cltd
pop
std
xchg
mov
fsts
mov
popf
cmp
idivl
push
adc
dec
sub
add
adc
add
lcall
mov
clc
xlat
out
mov
lods
cmp
add
imul
push
add
jecxz
sub
clc
mov
sbb
pop
add
add
mov
jb
add
or
out
outsb
lahf
mov
daa
clc
loope
jbe
clc
cmp
fs
dec
adc
add
clc
and
add
jae
add
add
out
jg
fistl
add
dec
push
inc
clc
cld
mov
add
fs
cmc
test
xchg
mov
clc
iret
mov
add
test
push
loop
push
add
inc
clc
push
sub
push
push
clc
loope
sar
aad
dec
and
test
add
lret
mov
das
cmpsb
clc
icebp
sbb
add
xchg
lcall
cld
adc
adc
add
push
add
das
cmp
dec
outsb
jl
add
add
add
add
iret
cmp
push
adc
add
add
sahf
fs
jecxz
lock
clc
sub
add
adc
add
int3
mov
add
jne
clc
gs
pop
xchg
xchg
xor
add
add
pusha
add
scas
or
clc
xbegin
clc
or
cmp
int3
or
shrb
push
out
add
add
arpl
add
repz
mov
arpl
add
lss
outsl
jle
fstps
sub
add
pop
lock
add
nop
nop
xbegin
pop
and
add
fidivrs
aaa
fmul
adc
add
repnz
ds
add
aad
clc
add
add
pop
mov
clc
xchg
sahf
call
mov
aad
clc
push
int3
data16
sbb
xchg
adc
add
dec
int
add
int3
ljmp
movsb
clc
mov
daa
clc
or
add
push
dec
daa
clc
out
sub
clc
dec
sbb
clc
sub
clc
negb
mov
clc
test
test
cmpsb
clc
es
cli
pop
sti
inc
add
sbb
clc
xabort
add
add
cmc
xchg
sbb
jae
add
clc
rcll
lods
xchg
ja
push
clc
jbe
test
jg
pop
fdivrs
inc
clc
mov
add
adc
add
mov
div
cmp
bound
add
xor
add
dec
test
jg
ss
add
sub
jge
es
fsubrp
push
popf
cmp
add
pop
inc
add
test
dec
xabort
xchg
sbb
adc
cltd
insl
pushf
and
add
aas
jle
cmp
clc
stc
outsl
js,pn
add
ds
push
js
dec
add
mov
add
nop
xbegin
cmpsl
clc
fsub
clc
inc
clc
stos
pop
dec
clc
cmp
add
popf
lcall
leave
in
inc
add
xor
clc
xchg
int3
mov
add
dec
pop
jl
clc
jge
add
jae
add
mov
loope
jb
add
nop
dec
mov
clc
pop
jge
inc
clc
mov
clc
or
mov
clc
repz
pop
cmp
add
clc
scas
test
std
and
add
xchg
fst
xchg
nop
cmp
add
sbb
or
mov
add
mov
dec
cmc
clc
and
add
daa
clc
push
add
sub
clc
test
sahf
in
and
add
cwtl
inc
clc
jle
dec
cli
jo
add
clc
xchg
push
add
add
je
mov
add
xchg
aas
add
add
clc
and
add
add
cmp
push
jbe
clc
cld
dec
add
add
xor
add
clc
lods
into
lcall
bound
add
clc
cmp
cld
in
push
push
xbegin
sbb
mov
jno
add
mov
bound
add
imul
add
push
insb
add
add
clc
mov
clc
push
add
fdivp
leave
cmp
mov
cmc
and
add
add
sbb
loop
into
mov
clc
adc
jp
add
aas
xor
add
clc
icebp
scas
aad
gs
movsl
clc
out
idivl
xchg
das
or
sbb
dec
pxor
sbb
xchg
mov
mov
jnp
clc
xor
add
fisubrs
aaa
push
adc
add
dec
sbb
add
pop
clc
add
add
dec
xlat
xchg
frstor
clc
pop
add
clc
cmp
add
inc
clc
inc
clc
outsb
cmp
add
pop
jae
add
sub
cmp
pop
push
fisubl
push
shrb
lret
add
lods
jecxz
pop
decb
imul
mov
mov
add
sbb
out
ret
clc
repz
jge
clc
ret
clc
adc
clc
dec
scas
mov
xchg
cmc
loopne
push
dec
dec
insb
sti
mov
xchg
adc
add
mov
add
mov
clc
in
stc
out
sbb
clc
and
xbegin
add
loopne
sar
cld
sub
cmc
inc
clc
leave
iret
inc
clc
mov
add
dec
fisubrl
clc
hlt
xchg
clc
and
vshufps
and
add
clc
iret
fcompl
movsb
clc
test
or
mov
addr16
fsts
sbb
lret
cwtl
pop
arpl
add
clc
fcmovb
clc
dec
mov
xlat
or
add
movsb
clc
hlt
and
mov
adc
add
clc
mov
gs
mov
adc
xchg
jge
clc
mov
mov
popf
adc
add
clc
clc
int
clc
cmpsb
clc
sbb
add
cmp
fcmovnu
aas
fldcw
sub
inc
clc
xchg
mov
testb
clc
dec
xchg
stos
or
dec
clc
stc
inc
add
xchg
or
add
cltd
sbb
clc
jno
add
das
popa
add
mov
clc
or
clc
stos
insl
addr16
push
xbegin
add
xlat
js
cmp
cld
cmp
sub
clc
xchg
mull
test
loopne
cmp
add
add
add
add
add
sub
pusha
add
push
add
in
mov
clc
sbb
clc
ja
ret
clc
jbe
add
insb
in
add
add
jmp
add
hlt
push
add
inc
add
cmp
test
popa
add
mov
clc
imul
add
in
clc
xor
add
push
jbe
mov
or
and
add
add
add
pop
repnz
add
add
inc
add
cmp
test
xor
add
xchg
ds
add
mov
add
movsl
clc
xor
add
add
add
or
add
sbb
add
add
clc
into
and
add
clc
sub
or
cmp
or
pop
fs
pop
imul
loope
adc
add
cmove
jl
arpl
add
sbb
pop
lods
lret
mov
pop
mov
add
je
and
gs
lock
clc
mov
add
add
loopne
outsb
das
jb
add
and
add
clc
iret
lret
add
or
clc
sub
push
add
das
pop
xchg
imul
xchg
sar
loopne
fnsave
add
xor
add
mov
clc
clc
jle
aaa
sahf
out
pop
xchg
sub
push
out
jo
add
cwtl
lahf
jmp
aad
add
sub
mov
cmp
mov
into
fwait
in
jg
addr16
adc
add
cmp
fdivs
fisttpll
pop
fwait
mov
clc
mov
add
movsb
clc
add
lcall
mov
mov
clc
pusha
add
mov
clc
fs
mov
clc
fldl
add
push
add
and
add
xchg
push
adc
add
add
adc
add
cmp
or
add
pop
fucomip
cwtl
push
add
add
shrl
mov
add
fcmovnu
cpuid
clc
jb
add
clc
hlt
jns
clc
cwtl
loopne
dec
inc
clc
or
clc
clc
imul
clc
into
fdivrp
push
add
mov
dec
imul
sub
add
mov
clc
push
jae
add
js
and
add
jae
add
xor
add
dec
xchg
add
in
push
sbb
add
pop
cmpsl
clc
in
in
jp
lods
sbb
xor
add
mov
add
or
add
add
add
add
fnstenv
add
jns
add
sub
es
and
add
js,pn
popf
dec
cwtl
out
xor
add
sub
sbb
add
clc
add
fs
push
jae
add
sub
clc
sahf
iret
data16
cmpsb
clc
ds
clc
jno
add
clc
mov
call
add
jmp
dec
lock
out
add
pop
int
pop
imul
lods
jg
out
aad
dec
add
add
fst
xchg
rcrb
push
add
cmc
xchg
cmp
clc
jnp
scas
cmp
add
clc
mov
test
clc
xor
dec
shl
push
clc
pop
dec
pop
dec
and
add
ljmp
call
enter
add
push
clc
xor
add
xchg
mov
add
mov
cmp
inc
add
mov
add
adc
add
clc
aaa
add
add
or
jp
xchg
call
clc
stc
pop
inc
add
pop
popa
add
mov
lods
loopne
push
mov
adc
xchg
add
mov
fs
aam
sub
movsb
clc
xchg
mov
loop
sub
aad
add
jns
add
movsl
clc
mov
ss
aas
xor
add
add
daa
clc
aam
clc
rorb
clc
pop
scas
loop
cltd
xchg
out
inc
add
sub
mov
xor
add
clc
imulb
mov
clc
stc
add
pop
mov
clc
lret
std
cmpsl
clc
adc
cmpsl
clc
jne
add
repnz
add
lret
mov
test
pop
xchg
data16
sbb
stc
and
add
addr16
roll
add
add
out
jae
add
add
in
dec
insl
add
add
add
and
add
xchg
mov
cmp
cld
inc
add
sahf
sub
add
sahf
imulb
add
call
or
clc
mov
add
push
add
and
add
xor
add
add
cltd
clc
or
xchg
ja
mov
sbb
clc
aaa
cmp
add
add
dec
cmp
add
fildl
std
mov
or
clc
sub
clc
leave
popa
add
gs
pusha
add
push
add
mov
clc
cmp
and
add
sti
and
add
adc
add
xchg
cmp
and
add
add
mov
clc
push
add
adc
add
xor
add
add
lea
add
daa
clc
and
add
aaa
cmc
insl
xor
add
clc
hlt
jns
cmp
jl
and
add
clc
shll
ja
ss
mov
clc
call
clc
pop
push
add
sub
clc
xchg
inc
clc
cmp
call
add
jno
add
mov
add
fdivl
vzeroupper
cmp
add
add
add
mov
cmpsb
clc
jne
add
jmp
pop
push
bnd
clc
mov
cmp
push
jae
add
outsb
add
add
stos
sbb
jmp
cmp
js
clc
or
loope
gs
jmp
clc
sar
test
cld
sbb
iret
cmp
mov
add
cmp
adc
clc
sbb
clc
push
clc
mov
add
addr16
add
add
js
or
add
neg
mov
xor
add
in
movsb
clc
cmp
push
pop
xchg
inc
clc
sahf
ss
clc
add
add
jae
add
add
das
inc
add
popl
in
lock
loopne
sbb
add
add
clc
xchg
inc
clc
mov
inc
add
inc
clc
jb
add
push
add
cltd
or
adc
add
xlat
push
cmpsl
clc
lock
in
mov
add
gs
jmp
and
cmpsl
clc
stos
adc
add
add
pop
xchg
push
add
scas
adc
add
sti
pop
sbb
test
sub
aam
fisubs
sar
sbb
sub
clc
inc
clc
dec
adc
add
add
add
pop
jge
clc
cmp
push
add
sbb
add
fisubs
add
leave
and
add
pop
clc
cwtl
add
add
leave
stos
add
mov
clc
inc
add
adc
add
sub
clc
cmpsb
clc
movsb
clc
add
dec
aas
cmp
add
mov
out
sbb
ret
clc
xchg
cmp
ss
xor
add
clc
push
add
xchg
test
lods
fisttpll
loope
cmp
es
add
add
clc
push
test
fstpl
add
clc
pop
repnz
mov
ss
pushf
jge
movsb
clc
xor
add
push
jl
fidivrs
clc
mov
testl
add
jp
xor
add
clc
push
add
fiaddl
jp
pop
lea
jp
push
clc
pop
xor
add
js
arpl
add
lret
int
lcall
in
dec
push
in
and
add
icebp
sub
add
push
add
jecxz
cmp
sub
sbb
aaa
sar
addr16
add
add
add
push
ret
hlt
or
pop
mov
sar
xchg
sbb
daa
clc
fidivs
add
xbegin
pop
sub
cld
rorb
add
push
cltd
jne
insl
jb
add
pop
xor
test
mov
insl
flds
add
adc
loop
mov
jno
add
out
bound
add
xchg
push
test
jns
add
test
cmpsl
clc
stc
jmp
clc
bound
add
repz
mov
xchg
es
adc
mov
and
add
clc
sub
clc
or
sbb
push
push
add
sub
add
cmp
clc
xchg
rolb
clc
test
push
xlat
insl
fldcw
mov
mulb
add
and
fcoml
add
pop
inc
add
push
add
es
mov
clc
das
sti
cmpsb
clc
mov
mov
popf
push
add
mov
clc
inc
add
xchg
lods
in
out
inc
clc
cltd
jbe
clc
ficompl
mov
push
cmp
fs
inc
clc
out
cmpsb
clc
testb
mov
and
stos
gs
lcall
mov
add
jmp
mov
clc
es
push
cmp
dec
mov
xchg
imul
cmp
mov
or
add
xchg
xor
mov
sub
data16
cmc
dec
push
add
popf
cmp
clc
pop
stos
ret
clc
xchg
mov
neg
push
nop
cmp
dec
clc
xor
add
ret
clc
push
jl
test
pop
stos
pop
clc
hlt
inc
clc
jg
js
clc
ss
clc
adc
add
inc
clc
mov
sbb
jp
stos
dec
xor
add
mov
add
jne
sar
push
arpl
add
clc
into
dec
push
lea
outsb
inc
clc
mov
stos
fwait
in
inc
clc
push
cmpsb
clc
cmp
add
pop
push
in
jnp
mull
add
xabort
cmp
push
add
push
mov
clc
or
add
mov
clc
arpl
add
or
bnd
mov
es
sar
clc
push
jge
dec
out
xor
add
test
add
mov
stc
sub
push
dec
lcall
push
add
cli
push
cmpsl
clc
imul
pop
daa
clc
sub
lcall
cmp
clc
fcomps
adc
add
add
add
xor
add
xchg
movsb
clc
push
fstpl
jg
mov
add
mov
clc
mov
add
xbegin
int3
or
add
add
popa
add
lcall
cli
in
sti
pop
int
pop
lcall
enter
pushf
mov
rorb
sbb
sbb
add
outsl
xlat
xchg
mov
clc
shrb
testb
mov
dec
out
test
inc
add
fwait
inc
clc
push
arpl
add
bound
add
add
push
add
fstl
add
cmp
clc
ljmp
test
add
ret
clc
fldlg2
lods
push
cmp
pushf
mov
add
add
add
adc
add
adc
add
jns
mov
clc
inc
clc
push
mov
pop
jae
add
or
add
push
jns
add
mov
add
std
adc
add
clc
and
add
enter
clc
pushf
icebp
int
inc
add
sbb
fldenv
add
mov
clc
outsl
pop
pop
cmp
mov
add
clc
scas
push
enter
inc
clc
inc
clc
dec
mov
lock
test
xor
add
fnsave
add
add
clc
jg
aaa
mov
add
and
add
cmp
xchg
out
cmp
add
xor
add
clc
data16
mov
xchg
or
je
inc
add
cmpsb
clc
stos
cmpsl
clc
or
out
or
or
push
inc
add
icebp
dec
hlt
lea
bound
add
add
add
cmp
dec
in
pushf
dec
stos
and
in
imul
incb
clc
fildl
ja
cmp
push
jb
add
clc
mov
lret
test
mov
repnz
xor
add
push
add
jo
add
mov
clc
sbb
add
pop
int
clc
ljmp
clc
mov
clc
pop
mov
jecxz
cmp
addr16
in
and
add
decb
add
jp
xchg
lea
icebp
jge
enter
mov
jge
into
fdivrs
clc
xchg
cmc
je
add
sar
push
add
ljmp
add
js
cltd
cmp
mov
sar
push
clc
mov
clc
xor
add
add
clc
pop
jae
add
enter
pusha
add
movsb
clc
arpl
add
or
mov
nop
das
push
push
clc
cmp
pusha
add
and
add
add
jle
inc
clc
mov
push
adc
add
popf
stc
xbegin
pusha
add
and
add
loopne
inc
add
mov
imul
pause
sbb
clc
out
mov
pop
loope
jnp
lret
and
add
clc
sbb
pop
jnp
cmp
dec
jp
clc
jbe
add
mov
clc
push
add
sub
clc
lret
or
dec
clc
add
add
sub
lock
stos
xchg
divb
add
enter
xchg
test
inc
clc
xor
add
jne
cmp
clc
add
add
push
loope
adc
add
clc
xor
clc
cmp
mov
clc
dec
and
add
push
xchg
repz
add
std
pop
enter
ljmp
clc
test
xchg
hlt
popa
add
lods
shl
clc
mov
xor
add
negb
pop
push
jne
pop
clc
cmp
test
push
insl
add
in
push
loop
pop
lcall
jae
add
add
xor
xchg
dec
mov
scas
jg
mov
test
clc
ret
clc
sar
xchg
popa
add
aam
fcoms
das
dec
test
push
adc
add
add
and
clc
aaa
outsl
dec
fcompl
cltd
aad
clc
push
add
sahf
inc
clc
pusha
add
sbb
loopne
nop
je
or
add
repnz
lea
or
add
scas
xbegin
movsl
clc
das
jns
pop
fdivl
add
mov
add
add
add
repnz
add
clc
cld
arpl
add
add
cli
push
add
dec
aaa
add
sbb
add
xor
add
in
xor
add
sbb
add
aas
and
adc
add
jge
xchg
shrl
add
and
add
clc
pop
gs
data16
push
clc
daa
clc
popl
inc
add
xor
add
clc
xlat
and
add
push
add
hlt
sub
add
daa
clc
dec
outsl
sbb
mov
out
and
add
mov
jnp
xor
add
sbb
stc
cmp
clc
adc
cmp
add
scas
clc
push
add
xchg
fsubl
in
aas
xor
dec
test
dec
imul
clc
lea
aad
pushf
or
jnp
rolb
mov
add
add
clc
dec
and
add
clc
out
sub
in
pop
clc
int
add
add
add
add
clc
data16
in
repnz
mov
mov
cwtl
xchg
das
inc
clc
cmp
out
aaa
inc
clc
sub
fld
clc
pusha
add
xlat
iret
cmp
clc
adc
add
mov
clc
mov
add
fsubs
pop
out
inc
add
xchg
insb
xor
add
insb
xchg
sbb
out
push
push
loop
iret
jae
add
mov
sub
sbb
and
add
sahf
jbe
fs
sub
test
mov
add
push
clc
push
jmp
lahf
dec
mov
sbb
and
add
and
add
add
and
add
xor
add
jmp
push
jge
test
mov
add
ljmp
cmp
sahf
notl
add
jae
add
leave
out
addr16
ficomps
fsts
add
ds
sub
add
mov
clc
xor
add
mov
xor
add
clc
jae
add
xbegin
add
clc
push
clc
lcall
scas
rol
clc
mov
pop
cmp
lret
jl
add
jge
lods
jbe
clc
mov
hlt
arpl
add
add
sbb
sub
jns
add
es
pop
movsl
clc
fs
test
ljmp
clc
out
xchg
pop
popf
nop
and
add
flds
loop
ljmp
dec
jmp
add
sbb
adc
add
add
pop
pushl
add
xchg
xchg
fidivs
add
mov
fldenv
add
add
pop
clc
inc
clc
movsb
clc
or
add
cmp
add
fists
add
or
cltd
cmp
outsl
sbb
iret
scas
je
pusha
add
xchg
aas
aad
xchg
clc
fucomi
sbb
jecxz
add
cwtl
pop
out
sti
xor
add
push
add
fldpi
in
popa
add
cmp
and
add
test
pop
mov
lods
enter
add
clc
push
add
insb
imull
lods
dec
adc
push
add
xchg
inc
add
faddl
icebp
movsl
clc
jmp
add
sbb
mov
sbb
pop
or
cmp
inc
clc
shrl
mov
clc
test
add
out
and
add
add
add
test
xchg
call
clc
push
adc
add
add
loop
sahf
sbb
sbb
clc
jne
xor
add
push
pop
rcrl
imul
clc
mov
inc
clc
add
insb
cld
ds
rorb
ss
cmpsb
clc
push
xlat
mov
es
cs
jmp
pop
lods
adc
add
mov
add
xor
add
movsl
clc
dec
mov
fucompp
mov
or
ja
stos
pop
nop
cli
test
push
add
pop
ficoml
jmp
add
or
push
std
and
add
cmp
icebp
stos
xlat
cmpsl
clc
or
mov
out
sub
clc
inc
add
imul
cmp
bound
add
add
xchg
inc
clc
dec
lcall
add
add
gs
leave
test
push
movsl
clc
mov
ret
clc
test
dec
add
add
sbb
aam
clc
notl
add
push
add
outsb
push
popf
mov
leave
push
add
cli
xchg
sbb
lock
add
xchg
in
mov
dec
push
clc
loope
popf
cmpsb
clc
addr16
fs
push
aaa
sti
or
push
add
push
insb
das
sub
add
clc
xchg
aaa
popf
call
fistpll
add
add
js
inc
add
xchg
xchg
popf
lahf
pop
fs
test
loopne
daa
clc
lahf
mov
fs
sbb
sar
test
iret
or
pop
out
aad
and
add
cli
outsl
adc
add
add
add
je
clc
testb
popl
stos
bound
add
mov
ljmp
iret
leave
dec
dec
cltd
xor
add
enter
push
adc
cltd
xor
add
adc
clc
sbb
loopne
inc
clc
ja
lret
pop
jmp
inc
add
xbegin
mov
adc
mov
out
mov
sbb
clc
xchg
mov
popa
add
xbegin
add
inc
clc
fimuls
clc
decl
shll
dec
xchg
clc
cmc
sub
sbb
add
add
test
add
in
ds
out
rep
cmp
clc
jnp
add
pmullw
jle
popf
mov
xbegin
jl
inc
add
jns
pop
cmp
xchg
cmp
clc
adc
add
clc
inc
clc
inc
clc
xor
add
jg
add
jmp
add
push
jne
add
aad
ret
clc
mov
pop
sbb
pop
dec
sub
addr16
sar
clc
sbb
add
mov
or
xlat
test
inc
clc
cmp
jo,pt
add
add
ds
xlat
adc
add
lahf
jecxz
aad
add
leave
mov
mov
add
cmp
inc
add
xor
shr
xchg
push
jo
add
add
fisttps
pop
test
sbb
fs
mov
sar
clc
pop
jle
add
es
mov
clc
xchg
jg
add
mov
mov
icebp
cmp
clc
mov
clc
popf
pop
mov
stos
call
pop
push
add
jmp
add
add
cmp
clc
jecxz
cmp
clc
in
and
add
add
test
lahf
bound
add
clc
xor
add
clc
jmp
dec
test
je
inc
clc
cmp
inc
clc
arpl
add
clc
test
es
test
hlt
es
push
push
adc
add
mov
xchg
iret
push
test
add
ffree
clc
or
clc
push
xchg
je
clc
imul
lods
push
jae
add
lock
aam
pop
adc
mov
sub
clc
arpl
add
or
xor
add
jnp
jnp
add
lods
ljmp
add
dec
sbb
icebp
mov
or
mov
clc
dec
and
add
jl
xor
cmp
pop
clc
rcl
divb
fdivl
add
xchg
pushf
sub
add
push
repnz
add
mov
add
add
mov
or
add
add
out
jo
add
dec
mov
not
clc
clc
inc
add
lods
cmp
and
cmp
inc
add
int
or
fucomi
test
xchg
ja
xchg
jae
add
add
add
fcmovnb
clc
sub
add
mov
push
add
mov
mov
or
ffreep
clc
or
xchg
xchg
stos
add
mov
lcall
in
sti
and
add
sub
cmove
ficompl
call
js
pop
fcmove
and
sub
xor
rcl
mov
add
or
adc
add
clc
inc
add
hlt
push
add
add
add
das
cmc
pusha
add
mov
add
lods
out
push
add
and
popa
add
inc
clc
popf
lret
push
mov
jne
jae
add
add
push
cmp
gs
or
mov
nop
mov
negl
add
gs
mov
cmp
ss
stos
sbb
fbld
clc
mov
mul
clc
insb
enter
negl
movsl
clc
inc
add
jne
sbb
aas
sub
clc
gs
cmp
push
mov
mov
add
clc
jmp
test
dec
inc
add
mov
clc
es
mov
sub
jle
add
lret
bound
add
sar
in
jmp
clc
sti
xor
add
cltd
cmp
xchg
sbb
push
repnz
mov
push
data16
add
push
sub
adc
add
add
adc
add
popa
add
pop
mov
scas
dec
arpl
add
sub
sbb
clc
pop
pop
xchg
fimull
xbegin
push
add
out
cmp
xor
add
clc
adc
add
lret
lods
cmp
add
ds
push
or
jmp
cli
fcompl
out
mov
add
sub
add
idivl
push
or
cs
clc
outsb
inc
clc
jo
add
clc
movsl
clc
scas
pop
inc
clc
pop
sarb
sti
sbb
add
add
clc
jne
lcall
imul
inc
add
sub
movsl
clc
mov
xor
add
add
stos
pop
push
int3
and
add
dec
pop
dec
lcall
in
stc
cmp
inc
clc
in
mov
push
add
add
add
lock
clc
pop
in
cmc
mov
clc
and
inc
clc
call
clc
push
test
vstmxcsr
addr16
int
add
into
sbb
push
in
data16
jno
add
xchg
pop
mov
clc
jbe,pt
fs
dec
mov
add
sbb
and
add
add
cmp
clc
xor
add
shrb
add
sar
clc
enter
mov
clc
pop
xchg
je
xabort
clc
xchg
aam
dec
push
mov
clc
cmp
clc
fwait
adc
add
push
jg
add
mov
or
enter
and
add
loope
pop
cmpsb
clc
mov
in
imul
add
sar
clc
clc
add
pop
insb
jae
add
add
sarb
or
push
cmp
insb
hlt
sbb
add
cmp
inc
add
mov
out
lret
popf
test
or
mov
xchg
cmp
add
mov
lahf
jbe
nop
dec
lahf
mov
cmp
das
ror
jbe
mov
xchg
mov
movsb
clc
push
add
fs
mov
jecxz
xchg
xchg
pop
xchg
fsubl
addr16
js
addr16
push
rolb
add
add
in
push
repz
xchg
jnp
inc
clc
xlat
fsubp
clc
push
in
xbegin
clc
loop
or
add
cltd
or
cmpsb
clc
test
outsl
arpl
add
insl
mov
clc
jg
add
mov
add
jmp
add
fs
pushf
je,pt
test
add
push
lret
mov
cmp
add
and
add
cltd
or
clc
and
xor
add
or
es
push
add
adc
add
idivl
cmpsb
clc
mov
add
into
jecxz
push
jnp
mov
std
jno
add
leave
dec
ficoml
mov
in
and
pop
clc
cmp
sar
add
add
cmp
popa
add
push
add
mov
dec
fidivrs
xchg
mov
das
mov
clc
ss
clc
xbegin
xor
add
pusha
add
js,pt
pop
es
mov
xbegin
and
add
hlt
or
clc
ret
clc
xor
add
add
pushf
scas
data16
add
add
add
clc
cli
inc
add
pop
xchg
or
clc
dec
ret
cmp
clc
dec
out
xchg
imul
push
sbb
clc
jle
addr16
ffreep
clc
push
ja
mov
add
push
sbb
clc
adc
add
clc
mov
add
fdivl
add
adc
add
bound
add
adc
adc
add
add
add
adc
add
mov
xbegin
add
sub
iret
mov
add
clc
es
xchg
cmpsb
clc
insl
mov
clc
shrl
add
stos
movsl
clc
rcrb
mov
sub
and
add
push
add
add
add
clc
shlb
cltd
push
dec
xchg
xor
add
mov
clc
dec
ds
in
pop
add
add
xabort
jl
add
sbb
xlat
aaa
lods
daa
clc
aas
mov
cmp
pop
jnp
push
add
outsl
mov
clc
or
jb
add
pop
and
dec
sti
mov
mov
add
and
add
sbb
mov
clc
inc
clc
out
testb
pop
ja
xlat
adc
dec
daa
clc
inc
clc
sbb
mov
rcll
fs
xchg
xchg
data16
sar
add
jmp
add
test
mov
sbb
add
inc
add
push
jbe
push
popa
add
xor
add
and
add
outsl
and
add
lock
add
jge
sbb
add
add
dec
and
add
sub
or
clc
in
sub
pop
inc
add
movsl
clc
loopne
ret
clc
or
clc
pop
and
add
ljmp
out
test
iret
cltd
dec
sbb
xlat
dec
in
lret
call
std
fs
cmp
clc
jae
add
ret
mov
cmp
pop
in
sbb
and
add
add
pop
rcrb
xchg
fdivs
add
push
arpl
add
add
dec
arpl
add
lcall
mov
push
pop
clc
cmc
or
pop
cmp
adc
clc
mov
add
repz
clc
pusha
add
jbe
add
and
and
add
lahf
xchg
lahf
jg
call
add
hlt
and
add
data16
out
dec
jne
push
pop
ljmp
clc
mov
xchg
dec
jecxz
jo
add
push
sub
add
ss
int
mov
int
fucomp
lahf
sti
add
add
cmp
cmp
sar
clc
cltd
and
add
scas
mov
push
in
loop
sbb
add
push
fwait
adc
lret
push
jb
add
dec
daa
clc
scas
pop
sbb
clc
inc
clc
xbegin
add
xchg
rclb
mov
jbe
mov
add
cmc
xchg
mov
clc
int3
xbegin
clc
sti
add
add
je
clc
lods
cld
sub
ffree
clc
xor
add
push
cmc
jnp
jmp
mov
cld
sub
or
data16
aaa
nop
sub
add
inc
add
and
add
add
inc
add
pop
sub
mov
add
sbb
add
dec
popa
add
mov
clc
cwtl
leave
cwtl
daa
clc
push
clc
cmp
dec
pop
push
add
or
mov
lcall
add
clc
xor
add
out
xchg
fnstsw
add
adc
add
sub
clc
cmp
add
pusha
add
sar
hlt
enter
add
add
bound
add
jns
or
je
cmp
jecxz
and
add
jne
add
or
clc
jae
add
add
fs
in
int3
sahf
mov
add
clc
xchg
inc
clc
mov
das
fsubr
cmp
clc
ret
hlt
jge
clc
mov
jbe
clc
mov
and
add
out
stc
cmp
int3
fs
testl
add
mov
push
clc
rolb
lock
clc
insb
pop
ljmp
outsb
mov
add
fisubs
adc
add
clc
xor
add
loope
in
pop
cmp
clc
je
clc
mov
clc
add
add
test
clc
add
add
cmp
and
dec
enter
daa
clc
jl
stc
ljmp
dec
mov
cmp
mov
add
ss
add
and
add
push
data16
arpl
add
lods
sti
out
dec
stos
inc
add
mov
imul
aas
cmc
add
clc
fadds
add
adc
clc
push
and
mov
clc
ss
clc
push
cmp
movsb
clc
xchg
jae
add
clc
push
or
dec
ret
clc
mov
sbb
clc
and
add
out
lods
ja
or
add
ret
clc
cmp
add
or
imul
imul
aad
push
out
ret
clc
cli
sar
add
stc
push
pop
pop
jp
in
jo
add
add
sbb
add
add
enter
scas
jg
and
add
aas
jbe
clc
int
clc
aam
add
inc
add
mov
add
xabort
clc
sbb
clc
mov
clc
daa
clc
xor
mov
push
add
cmp
pop
inc
clc
iret
and
add
ljmp
dec
pushf
push
pusha
add
push
test
adc
add
add
adc
add
dec
lods
mov
cmp
inc
add
xor
add
sarb
pop
clc
imul
add
jb
add
in
push
jae
add
push
clc
js
out
cmp
clc
cmp
push
test
clc
sar
add
test
pusha
add
mov
mov
jns
jl
cmc
fidivs
add
push
add
or
clc
sbb
xor
clc
out
cmp
clc
out
testb
cmpsl
clc
clc
repnz
cmp
clc
cmp
popf
das
mov
or
add
add
sar
add
push
cmp
inc
add
mov
decb
clc
in
mov
add
cmp
add
clc
mov
repnz
shl
clc
aas
mov
sbb
push
add
dec
xor
add
gs
loope
push
and
add
push
add
sub
lods
or
add
js
add
cmp
dec
stos
in
push
mov
add
ss
in
nop
call
xor
add
add
adc
icebp
hlt
insl
xbegin
add
mov
sub
ss
repnz
cmp
add
sarb
add
sub
fistpll
loop
addr16
mov
lcall
clc
pop
scas
dec
mov
sub
iret
xchg
daa
clc
jns
clc
aaa
ret
push
and
add
adc
adc
xchg
jbe
clc
cmc
mov
clc
mov
and
add
test
and
add
add
add
in
jp
adc
add
add
dec
inc
add
inc
add
cmp
clc
adc
add
clc
ss
out
fs
mov
mov
jp
add
add
mov
jge
nop
popa
add
movsl
clc
cmp
dec
fisttps
and
add
add
mov
cmp
adc
hlt
pop
clc
xchg
jp
mov
cmp
inc
add
lock
lods
test
add
add
jecxz
mov
insl
mov
je
or
outsl
and
clc
xchg
cmp
pop
ret
clc
push
adc
add
repz
add
inc
add
dec
xchg
clc
pop
pop
cmp
call
rcrb
add
inc
add
aaa
dec
or
lcall
scas
addr16
test
add
push
pop
mov
pop
mov
add
sub
add
pop
sti
xor
add
add
out
fsubl
add
pop
ja
sbb
fmul
mov
clc
cltd
adc
add
add
push
imulb
arpl
add
test
xchg
pop
jmp
clc
add
add
clc
icebp
push
clc
and
add
and
and
add
add
push
mov
ds
add
jae
add
xor
add
sub
add
clc
arpl
add
mov
in
rcrl
jnp
clc
jge
in
and
add
hlt
adc
add
mov
push
clc
fcompl
jne
xchg
das
adc
out
or
es
xor
add
or
add
repz
xchg
or
xor
cwtl
sar
mov
cmp
paddq
dec
hlt
pop
pusha
add
cmp
add
sub
inc
clc
inc
clc
test
add
mov
inc
clc
xchg
fs
jb
add
clc
jo
add
ss
add
push
xchg
hlt
cmp
pusha
add
ds
loop
nop
pop
or
xor
add
imul
sbb
mov
pusha
add
sub
push
ret
call
add
imul
add
js
ss
dec
cmp
ds
push
clc
push
adc
add
add
clc
in
sbb
add
pop
mov
push
cmp
add
fistl
add
dec
ja
clc
hlt
rcr
aaa
imul
adc
add
mov
das
ja
clc
js
add
fisttps
xor
add
inc
add
push
mov
clc
dec
jae
add
add
lret
sub
clc
adc
add
add
pop
enter
clc
sbb
xor
cs
push
add
and
add
lcall
dec
dec
loope
mov
add
add
lods
scas
mov
add
test
add
add
add
cmp
xchg
je
pop
jns
clc
xor
stc
frstor
push
rcrl
lock
pusha
add
cmp
or
rorb
ret
clc
sar
clc
dec
jecxz
lret
or
add
popa
add
jmp
fdivrl
mov
add
jl
clc
aad
inc
clc
vcvtps2pd
clc
jno
add
clc
add
add
lods
insb
inc
add
sar
inc
clc
fnstenv
std
mov
and
movsb
clc
es
stc
mov
sti
dec
or
jne
push
mov
int
movhps
add
jno
add
test
out
xor
inc
add
addr16
xor
add
out
outsl
mov
pushf
jbe
clc
dec
popa
add
push
inc
clc
pop
loope
jg
add
jne
test
fnstenv
lret
fsubp
clc
pmulhw
sub
clc
imul
imul
jnp
out
fdivs
add
xor
add
fldcw
push
scas
sbb
outsb
dec
pop
out
mov
repnz
jge,pt
jns
sbb
clc
cmp
clc
mov
add
mov
mov
dec
and
add
cmc
fs
inc
clc
es
sbb
clc
fs
jle
and
add
dec
popf
pop
test
clc
aad
pop
repz
add
inc
add
jecxz
cmc
ss
rcll
add
lahf
jnp
cs
cmp
add
jmp
clc
mov
clc
sbb
xabort
add
sbb
lods
mov
inc
clc
add
adc
add
sar
xlat
popf
pop
push
add
and
add
cwtl
int
movsb
clc
xor
clc
sbb
push
cmp
inc
clc
clc
js
add
add
add
mov
dec
and
add
mov
add
jg
and
in
mov
sar
clc
dec
cmp
rorb
push
sub
sbb
dec
stc
stos
in
dec
push
sub
js
push
add
fcmovbe
xchg
xchg
test
daa
clc
dec
pop
add
add
cld
xchg
xor
dec
pop
cli
adc
add
push
adc
add
add
adc
add
clc
or
add
cltd
and
add
add
mov
jnp
scas
inc
clc
dec
sbb
add
and
add
das
inc
clc
push
add
test
xlat
adc
add
jp
and
fidivs
add
or
mov
ds
clc
lods
fdivl
add
add
ret
clc
cs
out
jno
add
clc
aaa
js
scas
jge
add
sbb
push
inc
add
cltd
sti
sbb
movsb
clc
shl
jnp
out
in
pop
scas
enter
mov
mov
clc
imul
pop
mov
clc
sbb
clc
test
adc
add
clc
lahf
mov
mov
test
lods
xor
add
cmp
or
gs
outsb
outsb
xchg
mov
add
sahf
aam
add
leave
clc
rclb
sahf
pop
push
mov
and
add
add
call
and
add
add
fidivrs
mov
sar
clc
lret
cmp
add
xlat
dec
das
inc
clc
loop
cmp
jge
test
cmp
mov
clc
sbb
ss
scas
cs
clc
or
pop
clc
and
add
mov
outsb
inc
clc
out
inc
clc
lea
clc
adc
add
clc
hlt
cmc
jo
add
cltd
aam
scas
mov
pop
push
mov
clc
repz
or
clc
jl
sar
clc
lods
in
mov
clc
sbb
gs
and
hlt
inc
clc
fucomi
je
xabort
clc
push
scas
xor
add
das
stos
bound
add
and
cmpsb
clc
pushf
sar
fidivl
jo
add
add
add
test
clc
adc
add
push
add
dec
mov
add
xchg
mov
and
pop
and
add
ret
clc
cs
mov
and
add
clc
mov
movsl
clc
adc
add
data16
adc
clc
pop
jae
add
clc
xor
add
jno
add
shlb
add
jne,pt
clc
test
arpl
add
add
mov
or
into
ret
clc
xchg
movsb
clc
jge
sub
add
cmp
add
cmp
stos
rol
clc
xchg
mov
clc
test
arpl
add
add
xchg
bts
clc
mov
add
ret
add
pushf
fidivrs
icebp
aam
add
je
clc
mov
sbb
clc
aaa
clc
test
scas
mov
sub
test
xchg
cmp
fidivrs
add
xchg
sbb
add
gs
fmuls
out
and
add
add
jmp
add
pop
cmp
mov
test
sub
xchg
push
out
roll
pushf
fwait
loop
and
add
gs
cmp
in
das
lahf
xchg
js
mov
lcall
popf
pop
cltd
ficoms
add
add
clc
popa
add
lret
clc
pop
fistl
clc
adc
fnstenv
push
outsb
push
adc
add
sub
inc
add
mov
fldcw
cs
pop
xchg
mov
jecxz
mov
clc
jo
add
dec
jp
clc
imul
add
mov
clc
and
add
clc
push
cmp
sbb
clc
pop
xchg
push
dec
adc
add
add
add
gs
lcall
clc
loopne
jge
bound
add
inc
add
jp
or
add
lea
setbe
test
push
outsb
sarb
sbb
inc
add
jge
mov
repz
add
clc
bound
add
xor
add
sub
clc
jnp
enter
clc
cmc
or
ud2
js
jecxz
push
icebp
cmp
mov
clc
jp
push
add
inc
add
inc
clc
inc
add
fs
adc
add
bndstx
clc
leave
pop
inc
add
inc
clc
cmpsl
clc
test
add
fwait
pop
clc
pop
fmulp
jg
mov
fdivl
nop
rcrl
jbe
sbb
add
cs
mov
clc
mov
clc
and
add
sbb
add
pop
push
loop
pop
arpl
add
cmp
pushf
imul
sub
clc
or
xchg
sub
push
add
loop
jg
jle
test
add
add
add
jb
add
add
pop
push
add
pusha
add
add
add
add
adc
add
clc
cmp
mov
xchg
sbb
loope
xchg
sbb
inc
clc
dec
push
add
and
into
cmp
cmpsl
clc
pusha
add
in
push
in
arpl
add
ja
clc
test
add
add
pop
and
add
clc
sbb
sar
add
add
mov
pop
or
lahf
icebp
adc
add
inc
clc
shl
clc
jle
hlt
sar
movsl
clc
jge
cmpsl
clc
shrb
std
pop
pop
scas
dec
and
add
adc
add
inc
add
sahf
push
clc
push
add
out
mov
imul
scas
jae
add
cmp
lret
xor
add
pop
dec
add
add
in
jb
add
sbb
xabort
out
mov
ja
repz
fwait
out
xor
add
add
stos
aam
clc
stos
lcall
clc
imul
fiaddl
add
test
clc
shlb
cmp
scas
popf
mov
cs
ss
clc
out
cmpsb
clc
mov
pop
add
add
add
loope
xchg
pop
int
daa
clc
fisubs
add
push
add
add
add
in
dec
stos
inc
add
roll
mov
fstps
cmc
ss
pop
sub
bound
add
add
leave
notb
mov
shrb
add
and
add
clc
mov
sbb
mov
out
push
add
add
add
clc
jg
add
sub
and
jmp
add
and
add
lret
hlt
push
je
clc
add
add
mov
add
cmp
add
mov
xchg
or
xchg
push
fistps
push
add
cld
and
dec
cmc
std
mov
xchg
or
inc
clc
das
stos
incl
cmp
jge
add
pop
ljmp
test
lea
pusha
add
loop
inc
clc
xlat
loopne
xchg
cmp
lahf
mov
mov
add
xchg
psubd
lret
xbegin
and
add
add
sbb
xor
add
aad
inc
add
cmpsl
clc
inc
clc
fnstenv
pop
cli
xor
add
xor
add
cmp
ret
clc
jb
add
sbb
maskmovq
mull
or
add
lea
out
js
mov
pop
jmp
clc
inc
add
xabort
ljmp
in
inc
add
mov
clc
add
add
or
clc
jns
je
push
imul
ret
add
mov
add
clc
sahf
sti
dec
imul
cltd
and
out
xchg
sub
add
xor
add
in
stos
sti
sti
cmp
clc
or
add
repz
mov
add
clc
lahf
aas
lock
xchg
and
add
in
or
mov
clc
jns
clc
or
add
add
clc
xchg
and
add
xchg
sbb
movsb
clc
jo
add
mov
jmp
jns
add
xchg
nop
sar
clc
test
mov
loope
jb
add
add
in
mov
add
jl
clc
dec
sub
add
add
outsl
fs
mov
mov
dec
pop
xor
jecxz
sarl
add
fiaddl
sub
je
clc
ljmp
clc
enter
push
popf
mov
dec
push
jne
clc
std
add
add
cmpsb
clc
pop
popa
add
pop
xor
add
jae
add
sbb
add
inc
clc
insb
aad
clc
into
xor
add
lods
daa
clc
div
sar
fdivr
test
or
add
mov
clc
mov
insl
push
add
in
lret
add
adc
add
add
jne
adc
cmp
pop
cmp
adc
add
jl
xabort
add
clc
pop
cli
bound
add
clc
call
add
push
aaa
leave
fs
int
fdivs
add
mov
jecxz
ss
cmp
sbb
and
add
add
mov
mov
add
xabort
int3
out
sbb
addr16
aad
aam
in
and
add
add
mov
add
out
mov
inc
clc
out
sbb
mov
clc
inc
add
jmp
xchg
in
xchg
adc
add
add
dec
loop
sub
add
cld
push
mov
imul
add
mov
ds
add
clc
push
clc
gs
mov
lea
leave
out
bound
add
inc
clc
cmpsb
clc
or
pop
repz
add
pusha
add
sub
pop
jmp
cmp
clc
jle
add
into
mov
clc
jnp
ret
clc
dec
cs
adc
mov
adc
add
add
rcrl
es
hlt
cmpsb
clc
xor
add
hlt
pop
push
sar
and
add
add
clc
movsb
clc
xabort
iret
and
add
add
add
and
dec
sub
add
and
pop
sbb
add
add
out
cli
cmp
xor
add
cmp
mov
shrl
or
gs
adc
mov
mov
clc
sub
clc
and
fwait
mov
aam
clc
and
xor
cmp
add
add
je
sub
push
add
lods
xchg
cli
out
data16
daa
clc
pop
jl
clc
iret
push
pop
xlat
mov
js
jl
cmp
mov
jle
rcrl
clc
bound
add
sbb
clc
sub
or
add
ds
mov
jge
clc
mov
clc
adc
add
add
add
push
xchg
mov
sbb
loope
mov
sti
mov
lret
int3
cmp
clc
add
xchg
add
add
cmp
add
cs
add
popl
add
push
std
mov
add
xchg
inc
clc
inc
clc
mov
into
nop
dec
lock
or
or
aad
add
lcall
sar
in
repnz
sbb
add
aas
hlt
stos
mov
adc
mov
clc
shl
adc
add
add
add
add
add
pop
dec
je
xchg
cli
push
add
add
add
adc
add
mov
add
clc
popa
add
pop
push
jo
add
int3
sub
pop
jp
clc
sbb
clc
loope
add
add
add
lods
lea
imul
xor
shl
clc
jae
add
sbb
test
mov
pop
in
xchg
int3
xchg
jno
add
add
mov
dec
inc
clc
js
jnp
clc
pusha
add
cmp
clc
mov
mov
mov
repz
add
add
add
shr
cmp
clc
push
sti
ret
push
in
jne
insb
je
xchg
push
add
shll
and
add
add
sbb
pop
fnstsw
mov
xabort
clc
stc
mov
or
pop
aad
push
movsl
clc
enter
imul
xchg
pop
or
nop
pop
xchg
repnz
add
jg
clc
sbb
add
int
jo
add
mov
popl
aad
add
inc
clc
testb
jne
clc
mov
adc
xchg
ret
imul
add
mov
mov
sti
pop
das
sbb
clc
jae
add
add
add
add
test
xor
inc
clc
pop
clc
push
clc
sbb
loop
xchg
inc
add
and
add
add
add
xbegin
clc
aaa
cmp
clc
stos
cmp
clc
jb
add
cmp
and
add
pop
adc
add
sar
xor
add
lock
push
add
insb
nop
mov
jge
nop
idivb
cmp
mov
add
add
add
jae
add
add
push
jo
add
dec
cmp
and
add
xchg
jno
add
sar
add
add
cmp
sarl
add
test
pop
mov
add
inc
add
pop
cld
sar
mov
jae
add
push
add
inc
clc
pop
and
add
clc
bound
add
mov
inc
clc
inc
add
xabort
xor
push
add
outsl
icebp
ret
clc
outsl
sti
sub
mov
cmpsb
clc
dec
mov
pushf
dec
pop
sbb
add
add
pop
push
clc
mov
xchg
mov
add
inc
clc
and
add
pop
mov
imul
add
add
imul
mov
ficoml
add
or
lods
ficoml
pusha
add
mov
add
add
add
ja
or
xchg
out
sahf
dec
movsl
clc
adc
add
dec
push
push
arpl
add
add
arpl
add
sbb
clc
roll
add
add
sub
aaa
sbb
add
cmpsb
clc
fstl
add
and
add
jne
clc
divl
add
add
add
dec
mov
fs
lcall
sarl
and
add
clc
in
add
add
es
out
add
sar
clc
loopne
fstps
sahf
mov
test
nop
imul
clc
jle
js
mov
int3
xchg
outsl
mov
das
dec
xchg
stos
jnp
stc
jnp
dec
loope
test
add
enter
nop
jae
add
xchg
push
sub
add
rclb
add
std
mov
fsubrl
imul
jo
add
push
add
std
push
xor
add
jmp
jle
cmp
clc
sbb
mov
pop
clc
lea
add
ret
clc
pusha
add
pop
pop
shrb
xor
add
add
dec
ret
clc
cmp
repz
cmp
sbb
sub
jns
shll
rorb
xor
clc
stc
popa
add
sub
movsl
clc
dec
ljmp
cmp
pop
clc
aad
clc
mov
clc
es
sar
pop
mov
clc
mulb
add
inc
add
sub
add
cli
push
and
outsb
push
popa
add
inc
add
jecxz
imul
add
sub
add
sbb
cmpsl
clc
add
clc
jbe
rcrl
ljmp
sbb
add
inc
clc
sub
add
add
add
clc
das
sbb
jle
call
clc
adc
add
ret
jl
ficoml
add
pushf
push
pshufw
pop
insb
pusha
add
mov
xor
add
bound
add
adc
clc
out
xchg
hlt
dec
ss
and
sbb
jnp
vmovhps
pop
xor
add
jge
sti
stc
addr16
cli
inc
clc
cwtl
enter
clc
cmp
aas
xchg
in
pop
cltd
jb
add
add
clc
mov
sbb
add
dec
lcall
clc
loopne
mov
mov
add
push
mov
adc
lret
mov
pcmpeqd
shll
or
leave
jno
add
outsb
cmp
add
push
ljmp
mull
clc
clc
test
add
mov
add
xabort
gs
in
stc
mov
clc
test
ror
insb
mov
add
mov
loope
jle
js
adc
add
aad
gs
dec
fisttps
mov
xchg
lods
outsb
and
test
in
imul
loop
push
clc
scas
out
outsb
gs
lahf
dec
and
add
stos
mov
call
adc
add
add
add
clc
and
cs
and
mov
pushf
add
xlat
sub
pop
clc
adc
add
cmp
add
xlat
pusha
add
jo
add
add
clc
push
iret
je
sub
add
mov
sbb
sub
popa
add
xchg
sub
scas
ds
inc
clc
xor
add
mov
ret
clc
cmp
inc
add
jnp
pop
scas
in
lock
scas
ljmp
add
or
add
push
ss
add
inc
clc
sar
xor
add
sti
sbb
rol
clc
sahf
mov
clc
cmp
sbb
clc
xor
add
clc
sbb
xabort
clc
and
add
add
pop
jecxz
daa
clc
test
pushf
xchg
scas
jno
add
pop
clc
mov
lret
lret
jo
add
cwtl
adc
add
xor
xor
add
or
adc
add
clc
out
enter
stos
add
add
aas
insl
inc
clc
dec
test
cmp
mov
lods
xor
fwait
dec
lea
add
clc
jmp
ffree
clc
add
add
add
xchg
loop
ds
out
and
add
mov
add
lods
cmp
loopne
mov
mov
pop
pop
insb
mov
cli
icebp
rcrb
clc
aaa
and
add
clc
push
add
cmc
cmp
add
out
push
add
mov
add
add
add
shll
add
mov
test
xchg
lea
pusha
add
sahf
ret
clc
push
popa
add
add
add
clc
sti
rcll
ljmp
jle
jbe
add
adc
add
mov
mov
test
aam
clc
inc
add
sar
mov
lea
out
xchg
push
clc
xor
add
inc
add
cmp
into
lods
xor
add
clc
sub
add
add
ljmp
cmp
je
aas
gs
je,pt
icebp
pop
inc
clc
jp
push
add
leave
mov
out
add
add
add
clc
fwait
cwtl
xchg
add
sbb
mov
fidivrl
inc
add
mov
add
lcall
lods
mov
stc
cld
mov
clc
xor
add
sub
clc
adc
add
popa
add
mov
clc
mov
xchg
fs
inc
clc
jns
nop
clc
lods
inc
add
data16
add
add
clc
mov
xchg
jge
clc
and
add
clc
cmc
decb
xchg
es
popa
add
inc
add
icebp
push
add
aam
sub
fstpt
add
mov
or
mov
sbb
clc
sar
sub
clc
in
xchg
clc
xchg
push
add
sub
rorb
dec
mov
or
cmp
add
cmpsb
clc
leave
push
popa
add
orps
clc
xchg
out
bound
add
ljmp
inc
clc
fisttpl
or
insl
pop
jnp
clc
into
mov
loope
fsubrl
clc
inc
add
or
push
into
cmp
clc
push
xchg
out
lcall
adc
dec
fmuls
ret
clc
jbe
clc
xchg
inc
clc
jbe
jp
add
cwtl
sbb
push
add
pop
xchg
pushf
dec
movsl
clc
cmp
add
loope
incb
daa
clc
movsb
clc
or
sbb
add
cmp
incl
add
or
mov
add
add
sbb
jns
xbegin
mov
loop
add
inc
clc
imul
sbb
add
es
push
repnz
sbb
clc
in
icebp
jae
add
add
clc
nop
dec
xabort
add
loope
shll
add
add
ud2
add
add
mov
fs
stos
inc
add
jae
add
add
cli
mov
mov
fwait
pop
clc
icebp
aaa
mov
add
add
sub
fiaddl
sarb
add
xchg
push
pop
xbegin
add
int
stos
or
pop
jl
das
cmp
cmp
mov
dec
mov
push
add
lahf
mov
cmc
push
xor
add
out
push
clc
add
add
loope
fisubs
add
add
push
add
mov
xor
add
clc
xabort
add
xlat
mov
add
call
clc
mov
imul
pop
es
out
popa
add
jnp
add
pop
clc
jg
xor
sbb
adc
add
sub
clc
mov
int3
xchg
pop
push
add
mov
js
es
mov
std
push
add
adc
add
jb
add
add
jno
add
icebp
mov
xchg
cmp
add
sbb
add
add
push
clc
lcall
add
or
fidivrl
add
add
mov
icebp
lahf
bound
add
mov
mov
out
addr16
or
clc
adc
add
add
pop
clc
dec
dec
push
or
mov
adc
add
jecxz
divb
add
clc
ds
mov
shrl
xor
add
clc
and
add
jae
add
add
xchg
pusha
add
rcr
inc
add
sbb
icebp
hlt
out
fiaddl
add
das
push
stos
out
push
add
ljmp
clc
in
dec
sti
loop
cltd
cmp
inc
add
push
dec
push
or
add
push
pop
xchg
xor
add
cmp
clc
ret
jns
cmp
iret
mov
mov
add
jns
pop
inc
add
cmpsb
clc
mov
mov
add
es
das
lock
and
pop
rcl
ds
mov
push
clc
and
add
jmp
fdivl
movsl
clc
je
inc
clc
mov
add
inc
clc
lods
in
inc
clc
add
mov
add
clc
inc
clc
nop
xabort
add
add
int
add
or
sub
cmp
clc
in
test
rorb
or
sti
incl
add
clc
mov
add
mov
data16
add
add
gs
sub
arpl
add
clc
xchg
jmp
lods
and
sti
xor
add
lahf
inc
clc
and
add
push
mov
sbb
or
call
push
or
clc
jbe
int
inc
add
outsl
mov
sahf
hlt
inc
clc
pushf
cmp
sbb
sar
hlt
lcall
lahf
push
add
mov
or
lret
mov
or
jne
clc
arpl
add
add
sahf
pusha
add
test
add
jae
add
push
and
add
cmp
clc
pop
xor
add
clc
jno
add
clc
mov
xor
add
clc
adc
add
xchg
iret
call
test
data16
pop
clc
jecxz
cmp
aas
into
cs
jg
clc
cli
xor
add
js
xlat
sar
push
pop
cmp
and
add
out
jmp
sti
xor
add
out
lret
adc
add
xchg
or
add
mov
jg
lret
fmuls
clc
test
jge
aaa
push
mov
imul
add
push
clc
add
add
sbb
xor
add
jno
add
add
clc
std
xor
add
test
gs
mov
in
imul
imul
imul
xor
add
add
pop
mov
outsl
rolb
add
dec
add
add
cwtl
outsl
mov
clc
cwtl
ds
sub
cmp
dec
sub
xchg
or
clc
in
in
in
fldenv
add
xor
add
xor
outsl
or
aam
xor
add
aam
imul
lret
add
dec
mov
cli
ret
clc
rcl
push
sbb
shrl
add
mov
clc
cmpsl
clc
mov
add
rolb
add
aas
stos
bound
add
add
mov
add
push
inc
add
sub
cmpsl
clc
sub
xor
add
add
js
clc
gs
dec
xchg
xchg
jg
jb
add
clc
vshufps
xor
add
add
push
add
inc
clc
dec
fmul
hlt
fs
fidivs
add
push
jle
clc
dec
test
lcall
inc
add
in
push
outsl
dec
fadds
aas
xabort
pop
in
lods
xchg
lea
add
cmpsb
clc
xlat
in
iret
jle
clc
das
out
xor
add
clc
sub
scas
pop
inc
clc
idiv
cmp
mov
add
clc
sti
daa
clc
push
add
add
and
clc
data16
cmp
addr16
mov
imul
clc
inc
clc
incb
clc
inc
clc
insb
mov
clc
pop
loopne
pop
dec
pusha
add
xchg
sbb
push
loopne
mov
mov
clc
jno
add
dec
push
adc
clc
jae
add
clc
popl
adc
add
add
into
xor
add
cmp
lock
push
add
iret
sti
jp
clc
lcall
pop
out
fdivs
popf
out
adc
add
mov
add
popf
xor
add
pop
dec
mov
clc
cmpsl
clc
mov
ret
clc
fxch
dec
or
in
cmp
cmp
add
add
and
add
clc
inc
clc
jp
clc
notl
test
sti
lods
pop
cmp
fdivrs
dec
jmp
xlat
pusha
add
pop
test
and
add
add
clc
xchg
fwait
out
in
popf
push
add
xor
add
clc
and
add
jae,pn
add
clc
pop
sahf
xchg
jns
cld
fnstcw
mov
add
addr16
sbb
xchg
xor
add
add
jge
sub
bound
add
cmc
mov
add
cmp
clc
or
popf
out
cmp
inc
clc
push
add
shrl
clc
dec
shll
add
jp
cmpsl
clc
inc
add
sar
clc
adc
add
mov
sub
xor
add
clc
cli
nop
push
clc
stos
or
add
icebp
lret
rcrl
mov
push
arpl
add
hlt
repnz
clc
addr16
mov
clc
es
sub
lea
iret
testl
in
cmp
xabort
clc
and
add
and
or
clc
xor
add
call
clc
cmp
clc
inc
clc
jne
fwait
add
add
add
and
or
clc
mov
jl
cmpsl
clc
imul
in
mov
sbb
in
iret
je
add
imul
pop
pop
hlt
cmp
repz
fistps
clc
sbb
clc
pop
mov
push
mov
jae
add
clc
inc
add
cmp
push
in
xbegin
ret
xchg
inc
add
sti
call
cmp
xchg
std
add
add
adc
add
add
in
adc
add
clc
jb
add
jns
xchg
jl
sbb
inc
clc
movsl
clc
fimull
clc
mov
pusha
add
mov
add
adc
add
xchg
pop
aad
push
cmp
add
pop
aam
clc
shll
add
clc
call
clc
push
add
je
clc
add
add
aad
mov
jno
add
inc
add
add
add
add
sti
inc
add
aas
xchg
data16
jge
and
add
add
sbb
mov
clc
cmp
clc
jg
clc
inc
add
and
add
push
add
std
or
jbe
or
or
arpl
add
add
xchg
push
inc
clc
sub
lahf
fstps
lods
mov
aam
jb
add
clc
imull
inc
add
neg
jne
cmp
test
pop
fnsave
add
popf
pop
or
insl
xchg
lahf
icebp
xchg
int3
call
ficompl
cli
mov
clc
es
lods
jnp
dec
stc
mov
dec
jg
stos
mov
push
add
add
add
sbb
add
mov
and
test
icebp
hlt
cmp
clc
sub
cmp
add
mov
xor
add
xchg
mov
cs
push
jbe
cmpsl
clc
add
add
fidivrl
loopne
adc
push
clc
mov
clc
jle
clc
dec
pushf
add
add
jnp
add
cmp
add
mov
sti
push
outsl
or
in
loop
push
add
clc
ficompl
add
insb
dec
cmp
enter
ret
dec
test
clc
mov
add
push
jg
clc
sbb
clc
sar
sub
mov
out
ljmp
sarb
dec
add
mov
dec
inc
clc
inc
clc
push
add
insl
int
and
add
pop
mov
clc
nop
repz
clc
ds
es
xlat
outsl
scas
push
mov
clc
pop
clc
xor
add
lods
insl
adc
add
imul
jns
cmp
cmp
add
sbb
aas
sub
fwait
test
push
clc
mov
jo
add
clc
shrl
xchg
jp
jl
loopne
xchg
cwtl
insl
push
add
fcoml
mov
push
add
outsl
xor
add
ja
add
test
add
nop
dec
xchg
fidivrl
push
addr16
pop
adc
add
dec
cmp
xor
add
add
dec
add
add
bound
add
add
add
and
add
hlt
test
xor
add
clc
fucomp
cmp
inc
clc
into
cmp
add
xchg
cld
sub
in
sub
cmp
inc
clc
sub
dec
xchg
cmp
cmp
clc
popf
add
add
add
jo
add
mov
out
push
and
add
or
stos
jg
sub
sbb
clc
sub
and
mov
sbb
sub
xchg
test
mov
jmp
clc
sub
push
js
add
ret
clc
ljmp
addr16
test
sbb
dec
cmp
sbb
add
jbe
mov
paddw
clc
in
mov
dec
sahf
lret
hlt
das
leave
cmp
sahf
push
shlb
clc
jno
add
push
add
sahf
mov
dec
outsb
mov
or
add
dec
shll
cwtl
push
cmp
inc
clc
xchg
daa
clc
iret
inc
add
xabort
clc
int
add
int
fiaddl
push
fnstcw
fimuls
add
sar
das
or
fwait
enter
clc
rclb
add
data16
cs
xor
add
adc
add
clc
test
dec
lea
add
clc
xor
add
mov
cmpsl
clc
jmp
fnsave
add
addr16
mov
mov
sti
outsb
push
mov
pop
xrelease
std
dec
insl
xchg
jb
add
clc
and
add
add
imul
ss
mov
add
pop
dec
adc
add
clc
xor
add
jne
in
push
icebp
add
add
add
lods
sbb
add
gs
pop
inc
add
clc
dec
jo
add
je
add
push
clc
adc
add
pushl
add
clc
jae
add
add
daa
clc
sbb
clc
dec
popf
and
cltd
inc
clc
fbld
mov
fldcw
in
pop
adc
clc
or
add
ja
add
pop
repnz
clc
cmp
add
nop
mov
jnp
ja
mov
mov
add
mov
int
clc
xor
add
clc
mov
cmp
pop
idiv
mov
clc
mov
clc
fsubrl
clc
add
add
push
mov
adc
add
mov
mov
mov
imul
add
add
fucomip
or
clc
sub
clc
mov
add
pushf
add
push
fcmovbe
jecxz
rorl
add
cs
add
dec
push
inc
add
mov
into
xchg
and
add
mov
pop
aam
cmp
add
add
cmp
clc
pop
out
adc
lods
and
add
push
clc
add
test
ljmp
jmp
fs
cmp
dec
sahf
scas
roll
add
icebp
nop
out
xabort
cmp
xchg
adc
add
jo
add
outsb
loope
jge
into
or
clc
push
add
push
pop
push
imull
sub
call
add
clc
call
add
nop
push
mov
dec
sub
clc
dec
mov
add
data16
imul
clc
std
jbe
add
mov
clc
mov
push
sub
pop
stos
imul
add
add
aad
dec
mov
cmp
xor
clc
fcomps
add
repz
addr16
ds
add
into
add
lock
clc
xchg
cmpsb
clc
cmc
es
push
sub
imul
clc
fistpl
pop
pop
test
daa
clc
xchg
jae
add
and
add
xabort
add
fwait
dec
cmc
nop
aas
fdivl
add
sbb
add
leave
xchg
xchg
xchg
out
in
imul
pop
push
xbegin
xor
add
add
imul
dec
lret
bound
add
insl
mov
clc
xor
add
divl
pop
movsl
clc
into
pop
add
add
pop
clc
mov
add
scas
adc
insb
fs
cmp
pop
scas
cmp
arpl
add
mov
pop
nopl
add
add
arpl
add
add
js
clc
cwtl
push
add
xbegin
add
mull
add
jp
clc
popf
cli
pop
movsl
clc
add
add
ljmp
sub
pop
cmp
add
das
jne
dec
movsl
clc
repnz
cmp
mov
clc
mov
add
clc
mov
add
pop
add
add
das
das
ds
adc
add
ret
push
loop
sbb
add
jp
mov
add
rcll
add
clc
outsb
fildll
and
add
pop
mov
clc
int
jns
clc
lahf
int3
mov
fnsave
je
xchg
call
add
add
cmp
clc
lret
pop
cmp
mov
and
add
in
or
hlt
push
clc
lea
add
xlat
inc
add
xabort
mov
cmp
clc
fchs
clc
inc
add
push
pop
iret
popa
add
outsl
inc
clc
test
imulb
xor
idivl
clc
int
dec
ffreep
clc
inc
add
mov
cmpsl
clc
or
and
add
out
popf
test
push
add
jl
xlat
in
rdtsc
add
aas
jae
add
pop
and
add
cld
gs
add
dec
cmp
gs
jbe
cmp
clc
ss
loope
ljmp
clc
roll
add
or
sar
mov
add
aam
add
test
dec
je
or
xor
or
mov
push
clc
pop
jl
sub
add
add
add
add
mov
int
shr
jl
pop
data16
or
push
repz
in
outsl
fldcw
xor
adc
add
sub
add
hlt
loope
cmp
mov
inc
add
shl
clc
sahf
push
bound
add
add
clc
push
add
fnstsw
mov
clc
cmpsb
clc
pushf
or
inc
clc
mov
adc
test
arpl
add
add
adc
jl
clc
sbb
in
xchg
inc
clc
aam
clc
cmpsl
clc
hlt
sar
insl
dec
clc
xchg
mov
clc
sbb
clc
mov
pop
fwait
in
sbb
add
sbb
clc
repz
clc
notl
add
xabort
mov
pop
or
clc
and
add
add
add
scas
out
sub
leave
pusha
add
je
push
add
pop
clc
fistpl
jge
add
push
add
ja
clc
outsl
xchg
mov
add
es
daa
clc
adc
clc
movsl
clc
pop
pop
clc
xor
add
add
add
add
mulb
add
inc
clc
ret
add
sar
xchg
int
sbb
mov
clc
xchg
jnp
xchg
stc
lret
clc
repnz
test
add
sub
add
dec
or
movsb
clc
and
add
clc
sub
cmp
scas
repz
add
mov
clc
lock
add
xchg
cmp
add
jno
add
stos
popa
add
sbb
clc
or
add
cltd
mov
insb
push
xchg
mov
add
push
pushf
fisttps
and
add
clc
fildll
add
lods
out
push
sub
aad
std
jg
adc
add
movsl
clc
cmc
aam
clc
movsl
clc
pop
mov
add
mov
add
jl
mov
enter
add
movsl
clc
sub
add
add
loope
mov
sbb
clc
lret
mov
cmp
clc
push
add
xchg
sub
aam
popf
pushf
jge
mov
nop
icebp
in
or
cmp
clc
inc
add
movsb
clc
sahf
and
stos
mov
test
mov
clc
adc
add
add
add
imul
popf
or
jg
xor
add
cld
ss
clc
pop
ds
add
fisttpl
leave
fildl
sarl
add
inc
add
push
clc
and
mov
inc
clc
pop
xchg
push
add
and
add
add
mov
add
add
jl
clc
cltd
ret
clc
iret
bound
add
cltd
push
push
jg
mov
aad
daa
clc
mov
jle
loopne
outsb
dec
mov
push
mov
add
sub
xchg
clc
mov
fimuls
fcomps
clc
pop
clc
adc
add
js
fiaddl
mov
push
iret
and
pop
jge,pn
sbb
mov
clc
sub
daa
clc
add
mov
sbb
lret
mov
gs
in
cmp
push
out
sub
push
add
dec
repz
add
mov
jae
add
mov
clc
int
clc
js
add
mov
cmp
lods
jns
clc
fisubs
pop
and
add
add
cltd
xchg
imul
add
and
ss
add
cmp
clc
mov
clc
cltd
mov
jecxz
data16
jp
pushl
bound
add
cmp
pushf
or
xchg
cli
fwait
cmc
or
push
sar
enter
rol
clc
cmp
popf
lcall
mov
push
addr16
ficompl
push
add
mov
clc
iret
fldt
cmpsb
clc
loopne
aad
xor
add
clc
sbb
add
lock
in
dec
xabort
add
ljmp
add
clc
jno
add
clc
data16
mov
add
add
push
clc
jge
fdivrl
push
and
cmpsl
clc
push
jns
clc
mov
imul
adc
add
jge
sbb
add
repnz
mov
mov
mov
add
clc
scas
push
clc
cmpsb
clc
inc
clc
sbb
add
add
add
add
clc
aam
test
mov
nop
cmp
ror
stc
adc
xor
add
clc
mov
test
xchg
sbb
loop
add
adc
add
mov
pop
repnz
imul
sar
out
cmp
clc
pop
or
lcall
xchg
out
and
add
hlt
ret
clc
imul
sbb
cmp
clc
mov
add
xchg
push
movsb
clc
jnp
add
adc
add
inc
clc
stos
pop
push
and
clc
xchg
aam
xchg
inc
clc
sbb
fstpt
xchg
in
sub
clc
xchg
mov
add
xchg
out
idivb
int3
mov
clc
jno
add
add
cmp
push
add
add
clc
jns
push
clc
dec
test
imulb
out
addr16
adc
add
rol
clc
xabort
mov
jge
clc
fisubrl
cmpsb
clc
dec
xchg
aas
and
add
adc
add
xchg
jle
add
add
jle
add
add
add
pop
or
add
jp
clc
es
inc
clc
sub
rolb
add
xchg
inc
clc
pop
lea
or
add
mov
call
xabort
add
sahf
scas
gs
ja
stc
fsubrp
idivb
push
jo
add
sbb
add
xchg
imul
push
add
rorl
lret
cs
clc
iret
add
add
lcall
inc
add
test
clc
sbb
clc
leave
cmp
or
push
scas
xchg
repz
clc
lock
clc
aam
clc
rol
clc
cmp
jmp
shr
jecxz
ret
adc
add
push
cmp
clc
push
add
xor
add
add
popf
int
das
aas
cmp
sub
push
and
mov
test
test
aaa
mov
outsl
or
add
negb
jl
sub
clc
ljmp
xchg
inc
add
or
push
ret
add
cmp
sub
add
cmp
pop
clc
mov
cmpsl
clc
mov
cmp
clc
push
add
jno
add
popl
lret
out
ret
clc
mov
add
mov
inc
add
stc
mov
fwait
lret
push
cltd
xor
test
add
adc
add
clc
cli
push
add
push
clc
sub
adc
cmp
add
sar
dec
loop
lret
loopne
mov
roll
add
mov
stos
mov
jl
arpl
add
add
dec
testl
pop
out
and
add
clc
and
mov
add
mov
clc
sub
divb
mov
clc
dec
in
cmp
pop
jo
add
sar
sub
clc
pop
add
add
add
jge
push
add
push
fbld
push
add
push
jmp
hlt
cmpsb
clc
ja
add
xchg
sub
mov
sub
clc
mov
sbb
lea
cmp
xchg
pop
pushf
scas
addr16
xchg
fs
push
cltd
mov
inc
clc
pop
cmp
add
clc
es
aas
xor
add
add
enter
rorb
clc
pusha
add
sub
push
cld
push
add
test
insl
test
jl
cmp
mov
icebp
add
add
movsb
clc
loope
jp
clc
pop
loop
mov
clc
cmp
or
jecxz
in
and
add
insb
stos
jp
fisttps
enter
and
add
cmp
cmp
add
cli
sbb
mov
clc
jp
add
and
add
add
scas
das
mov
adc
dec
cltd
fimull
add
bound
add
clc
or
add
clc
xchg
nop
cmp
clc
xbegin
add
jae
add
and
add
cmp
xlat
inc
add
and
mov
clc
jecxz
popa
add
cmp
int
in
dec
outsb
mov
clc
loop
xor
add
or
repz
add
fcmovnu
insb
add
add
add
add
popa
add
inc
add
add
add
add
add
add
imul
rorb
rcll
clc
rorl
jmp
clc
pop
pushf
cmp
inc
clc
inc
add
adc
add
adc
add
clc
xchg
add
add
add
add
ficoms
mov
jge
out
clc
mov
pop
cli
xchg
add
pusha
add
fdivl
add
fwait
imul
clc
mov
push
add
jno
add
clc
dec
push
add
mov
sub
and
add
add
mov
add
add
sti
mov
push
add
lods
pop
in
outsb
mov
clc
lock
fs
sar
push
add
pop
push
lock
xabort
sub
add
xchg
inc
clc
popa
add
lret
lods
data16
mov
add
sbb
mov
outsl
pusha
add
mov
push
ss
clc
pop
outsb
jno
add
clc
inc
clc
negb
add
xabort
add
fistps
add
jge
mov
add
fisttpll
clc
jbe
clc
aas
jbe
clc
inc
add
pop
clc
inc
clc
jbe
add
sub
clc
and
iret
push
clc
xor
add
add
pop
insl
stc
je
lret
fldcw
sbb
fldcw
cltd
pop
inc
add
jp
add
lods
addr16
mov
clc
iret
insb
mulb
clc
mov
clc
adc
add
add
out
adc
add
add
sbb
fsts
xchg
sub
sar
mov
clc
sub
lcall
scas
imul
xchg
push
sub
mov
imul
ds
arpl
add
lods
cmp
push
clc
or
je
pop
xor
add
add
arpl
add
int3
jecxz
xchg
inc
add
push
mov
shlb
add
add
cmp
jge
add
fildl
pop
sub
test
jo
add
clc
mov
out
out
fwait
sti
outsl
and
add
push
clc
sar
rcll
add
seto
xchg
jnp
xor
add
mov
add
imul
dec
test
jecxz
jmp
xorps
mov
sar
jle
clc
xchg
int
lea
dec
gs
cmp
repnz
mov
add
mov
jbe
cmp
lret
add
xor
add
clc
lret
test
push
add
or
dec
mov
clc
fldl
add
add
arpl
add
add
ja
push
clc
mov
cmp
mov
xlat
or
or
jg
cmp
clc
mov
clc
mov
shll
stos
jne
sbb
add
lock
mov
clc
pop
sub
jl
fcompl
sub
fucomip
dec
jns
ret
clc
bound
add
out
inc
add
or
jno
add
mov
add
pop
aad
lcall
fs
aas
shll
movsb
clc
out
or
add
add
add
or
mov
add
xchg
sbb
add
add
pushf
test
pop
mull
cmp
jge
jmp
push
cmp
cltd
lret
dec
gs
aad
clc
movsl
clc
loop
js
pop
clc
leave
mov
mov
mov
mov
xchg
inc
add
ret
clc
in
insb
inc
add
xchg
ret
clc
stos
jmp
jae
add
clc
and
add
pop
clc
mov
mov
push
add
in
popa
add
jle
clc
lahf
adc
cltd
adc
xchg
adc
add
add
add
add
daa
clc
scas
xor
add
clc
ljmp
add
add
addr16
inc
clc
mov
fsubl
icebp
loop
out
mov
mov
jge
hlt
sub
clc
imul
clc
std
clc
or
add
in
rsqrtps
add
add
and
add
ret
add
fndisi(8087
clc
jecxz
pop
xor
add
pop
xor
cmp
sti
sar
clc
ret
clc
mov
repz
cmp
addr16
in
stc
sbb
push
add
fildll
in
add
add
clc
pop
mov
mov
rcrl
add
stos
cmp
cmp
clc
dec
mov
clc
mov
scas
ret
pushf
incl
cmpsl
clc
jne
clc
cmp
clc
outsl
ss
adc
add
clc
jne
js
clc
into
mov
clc
js
clc
lods
loop
dec
sub
add
popf
jmp
movsb
clc
jb
add
mov
add
outsb
data16
xchg
into
mov
xor
add
jl
clc
inc
add
idivb
mov
inc
add
mov
loopne
pop
xor
add
add
pop
test
sub
add
test
into
aad
or
outsb
imul
sub
add
and
add
add
cld
sbb
push
add
jmp
test
clc
fs
addr16
add
add
mov
cmc
ret
clc
xchg
add
add
dec
nop
inc
clc
mov
mov
cld
adc
add
imul
mov
cmp
pop
sub
mov
add
stos
pushf
xlat
mov
int
mov
cmp
push
adc
push
fnstenv
add
jno
add
mov
clc
cs
cmp
add
insb
repz
clc
mov
aam
dec
or
add
pop
repnz
in
dec
int
push
clc
xor
add
jp
lret
movsl
clc
aaa
cli
mov
das
and
add
pop
in
push
clc
xor
add
push
add
jbe
add
lcall
ljmp
cwtl
jg
add
push
xor
add
adc
add
dec
cwtl
adc
add
ja
jae
add
add
hlt
mov
es
cmp
push
mov
lret
clc
sub
cs
nop
vandnps
add
mov
cmp
scas
adc
add
inc
add
es
inc
add
jbe
add
hlt
jg
cmp
insb
xor
xor
add
clc
sub
cmp
add
add
add
clc
sub
fidivs
add
xor
add
or
in
outsb
outsb
ficompl
pop
clc
lods
je
out
add
push
push
add
leave
sub
aaa
sub
push
sti
loope
int
jmp
add
repz
mov
lods
fbstp
cmp
clc
hlt
pop
push
jne
shll
clc
sub
clc
mov
clc
push
add
sbb
add
dec
cmpsl
clc
shll
sub
add
dec
pop
je
xchg
inc
clc
lea
je
mov
xor
test
sub
jl
jp
ror
lods
xchg
sbb
jb
add
xor
add
clc
mov
add
sar
cmp
clc
cmp
addr16
push
inc
clc
mov
add
adc
add
clc
push
add
push
jb
add
clc
pop
bound
add
push
mov
xlat
std
push
add
in
mov
add
addr16
fldenv
add
xchg
pop
inc
clc
xchg
cs
clc
add
add
adc
add
push
clc
jle
clc
jg
xor
add
add
clc
inc
add
adc
add
jg
add
es
clc
cmp
push
add
fistpl
push
add
fcomi
leave
enter
and
add
add
pop
inc
clc
daa
clc
idiv
mov
mov
add
cmp
clc
lahf
sbb
into
bound
add
clc
lea
icebp
movsl
clc
cmpsl
clc
mov
test
and
add
push
dec
fildl
scas
sbb
mov
and
add
clc
xor
add
mov
clc
ljmp
add
cmp
jne
pop
clc
mov
add
push
xbegin
add
mov
push
xabort
mov
add
inc
add
xor
add
clc
sarl
jge
clc
sub
clc
ret
push
add
jae
add
clc
mov
and
add
clc
dec
pop
hlt
xchg
sbb
jle
clc
mov
push
call
add
mov
add
fldenv
add
clc
and
add
scas
repnz
in
test
or
jmp
add
into
pop
mov
add
outsl
adc
add
add
mov
lea
fwait
stos
bnd
add
add
cwtl
push
add
out
or
and
cltd
pop
fisttpl
mov
xlat
adc
add
jl
add
out
or
lret
add
bound
add
mov
add
sub
pop
clc
sbb
add
add
out
cmp
add
mov
add
add
xchg
jmp
inc
clc
es
or
repz
add
pop
xchg
mov
pop
cmp
fldcw
mov
fadd
clc
das
and
add
cmpsl
clc
lods
jp
daa
clc
aam
add
mov
clc
xchg
outsl
sub
clc
not
mov
mov
clc
add
dec
cs
jg
aad
xor
add
mov
cltd
mov
clc
mov
mov
jl
and
imul
add
mov
dec
pushl
sub
pop
sar
lods
es
jns
mov
fs
nop
mov
clc
cs
add
jae
add
clc
and
xor
add
clc
sbb
inc
clc
adc
clc
xor
mov
cmp
outsb
pop
add
add
clc
divb
mov
xchg
dec
xchg
movsb
clc
sar
add
jg
clc
cli
mov
jo
add
add
mov
lcall
add
jp
fsts
add
push
sahf
pusha
add
adc
add
inc
add
push
out
dec
test
add
add
mov
lret
es
out
jle
lret
pop
clc
dec
ds
clc
pop
clc
mov
cld
mov
jnp
mov
clc
cmp
xchg
dec
sar
fwait
push
aas
pop
clc
pushf
sbb
add
xchg
cmp
clc
cmp
clc
and
add
and
add
filds
add
jns
xor
add
loopne
push
mov
clc
jbe
xor
add
add
clc
push
mov
mov
dec
shl
clc
lahf
or
xchg
arpl
add
add
add
xchg
movsl
clc
icebp
and
xchg
in
or
add
repz
add
aam
push
inc
clc
mov
clc
aaa
push
add
fdivs
add
mov
push
clc
aam
mov
sbb
add
add
ss
into
jl
add
pusha
add
sbb
addr16
add
add
into
sar
add
add
add
loopne
test
xchg
xchg
pusha
add
cmp
and
add
cmp
add
and
cmp
cld
fnsave
ret
clc
mov
xor
add
call
mov
add
fsubrs
add
xor
add
and
add
add
cs
mov
add
add
pop
mul
clc
jl
pop
mov
cmc
jg
dec
jae
add
add
pop
clc
xchg
pop
pushf
fucom
clc
cmp
cmp
ficompl
clc
push
clc
sbb
je
or
add
xchg
mov
or
jl
add
cmc
pop
xchg
xlat
in
cltd
mov
add
mov
mov
clc
ret
clc
or
jge
add
movsb
clc
cmp
sub
cmp
loopne
movsl
clc
stc
or
add
add
ljmp
jo
add
clc
movsl
clc
pop
sbb
imul
adc
add
add
pop
loop
sbb
clc
jne
imul
jl
clc
aas
push
add
adc
add
clc
bound
add
push
outsb
clc
push
mov
mov
cwtl
mov
add
outsl
cmc
ficomps
das
xchg
adc
add
clc
fwait
or
ds
mov
cmp
dec
outsl
arpl
add
add
cmp
pop
xor
add
mov
test
mov
bound
add
mov
add
mov
add
cld
mov
cli
loopne
xabort
add
xor
add
mov
cmp
push
jnp
xlat
hlt
in
push
cwtl
pop
leave
push
cmp
push
iret
nop
loopne
mov
add
icebp
sub
add
adc
add
add
xchg
dec
inc
clc
sub
mov
clc
das
xchg
cmp
dec
insb
mov
cmpsb
clc
jnp
add
mov
and
add
mov
sub
add
pop
pop
xor
add
outsl
sub
inc
clc
push
add
loopne
fwait
jno
add
cmp
jo
add
sbb
clc
adc
add
mov
or
jbe
clc
das
loopne
or
pop
cmpsb
clc
xor
add
cmp
add
clc
push
push
mov
clc
dec
push
popf
add
add
out
dec
jg
clc
ret
clc
pop
dec
aaa
arpl
add
add
mov
movsl
clc
jl
clc
imul
sarl
sar
aad
pop
fstpl
clc
insl
sti
jle
clc
cmp
mov
mov
clc
xchg
and
clc
dec
notb
add
pop
out
out
imul
ja
mov
clc
xlat
popa
add
data16
sbb
pop
jecxz
jno
add
testb
push
add
into
xor
add
clc
adc
add
add
cmp
es
xchg
xchg
hlt
adc
add
add
je
mov
add
add
cli
mov
lahf
iret
dec
in
dec
loope
dec
cmp
imul
add
pop
jge
clc
in
add
add
mov
dec
test
mov
mov
mov
jmp
arpl
add
clc
lahf
loopne
pusha
add
sbb
add
mov
cmp
pop
pop
lods
ja
scas
dec
and
cmp
lods
ret
into
cmc
dec
sub
mov
add
jecxz
mov
sub
add
pop
imul
sti
push
inc
add
js
daa
clc
ss
insl
out
cmp
fwait
sbb
and
add
pop
cmp
mov
clc
xor
add
clc
test
add
aaa
ds
push
add
stos
or
or
clc
cmp
clc
jo
add
ds
xchg
pop
clc
rolb
clc
xchg
cmp
push
mov
lods
sar
fildll
add
add
imul
add
clc
jo
add
clc
mov
add
sarl
lock
add
out
ljmp
cmp
clc
lock
xbegin
add
pop
cltd
xchg
cmp
add
aam
add
test
insb
repnz
jmp
clc
shlb
add
cli
xabort
dec
mov
test
call
cld
adc
pop
mov
cli
pop
int
and
loope
lret
add
adc
add
rorb
push
sbb
push
add
inc
clc
cmc
data16
adc
mov
sub
clc
stos
cmp
clc
inc
clc
inc
add
adc
add
cld
xor
xor
add
dec
cmp
mov
in
mov
pop
fldcw
push
inc
add
mov
cs
add
cli
mov
clc
mov
xor
clc
jmp
add
cmp
push
cmp
addr16
fidivrl
mov
popa
add
sbb
stos
jo
add
popa
add
aad
jnp
clc
push
jg
xchg
jmp
inc
clc
ffree
clc
roll
clc
jmp
mov
clc
jne
leave
das
push
scas
mov
add
and
add
cmpsb
clc
dec
push
add
stos
dec
pop
cmp
aaa
imul
mov
add
ds
cmp
clc
sbb
cmp
ljmp
fisubrs
icebp
arpl
add
in
xchg
jle
out
dec
movsb
clc
dec
mov
movsb
clc
cmp
loope
jb
add
add
mov
clc
jl
add
jbe
lret
mov
clc
sti
pop
push
cltd
inc
clc
mov
add
inc
add
mov
stc
outsl
ffreep
clc
repnz
cs
loope
ds
cmp
add
pop
repz
and
add
int3
mov
xchg
stos
dec
sub
pop
lret
hlt
xor
add
add
or
cmp
cmpsl
clc
pop
mov
sub
xor
sbb
add
es
movsb
clc
pop
ret
clc
dec
sarl
mov
add
std
inc
add
gs
aad
clc
mov
clc
in
jmp
add
add
push
add
jp
or
add
mov
sbb
add
clc
sbb
lea
add
cli
icebp
xchg
or
add
sbb
xchg
cmp
cli
sub
clc
cld
add
xabort
leave
add
add
ss
clc
xbegin
enter
fisubrl
outsb
pop
sub
add
pop
aaa
mov
clc
jno
add
clc
lea
add
jbe
clc
arpl
add
add
add
clc
add
add
clc
cs
xor
add
rol
clc
sar
cmp
xchg
xchg
enter
add
addr16
lret
push
clc
push
add
repnz
pop
or
aam
gs
lods
pusha
add
gs
lods
sbb
add
data16
fists
add
shlb
mov
mov
enter
loope
rcr
mov
add
cmp
add
ret
pop
xor
add
inc
add
lods
ss
mov
jecxz
adc
add
add
ds
and
add
add
adc
add
add
fdivrp
dec
icebp
jne
clc
push
add
jmp
jns
push
stos
dec
xor
add
sti
insl
jno
add
dec
cmp
cmp
dec
sar
cld
out
test
cli
or
dec
jp
addr16
cld
out
cmp
xchg
test
insb
mov
daa
clc
cmp
shll
add
pop
aam
clc
sub
fcomps
xor
add
scas
jbe
mov
das
lods
data16
adc
add
push
xchg
in
xabort
shlb
clc
sbb
lahf
cmp
pop
pop
inc
add
mov
add
clc
hlt
xchg
cmc
and
add
add
adc
add
sbb
outsb
iret
loop
out
cltd
mov
data16
fstpt
std
int
in
daa
clc
cltd
out
je
cs
xor
pop
or
clc
dec
or
clc
or
insl
test
pushf
push
cwtl
aas
dec
xchg
imul
mov
add
out
clc
in
enter
clc
incb
js
mov
jb
add
sbb
mov
mov
test
pop
clc
adc
add
mov
fildll
fstps
jo
add
clc
mov
das
repz
mov
clc
daa
clc
adc
lods
add
arpl
add
xor
loop
cmp
adc
add
mov
mov
cltd
mov
clc
mov
icebp
mov
clc
mov
jb
add
mov
add
and
add
clc
jnp
clc
pop
movsl
clc
sub
mov
fidivl
ds
xchg
jle
dec
mov
fcmovne
xchg
jp
dec
call
sahf
pop
inc
add
pop
jnp
add
mov
xor
add
clc
pop
repnz
mov
jecxz
bound
add
clc
cwtl
mov
clc
insb
sahf
adc
add
ret
clc
mov
pop
clc
sbb
cmp
add
add
add
aam
mov
loop
mov
add
sub
in
fiaddl
add
add
adc
stc
std
in
push
add
rcll
add
xor
add
clc
lret
sub
sbb
clc
xor
add
iret
lcall
out
rcr
fcmovnbe
ret
clc
mov
cmpsl
clc
xchg
call
add
add
and
add
pop
sti
cmp
push
adc
mov
add
mov
add
mov
push
and
add
add
js
push
jl
clc
push
jp
lret
push
clc
adc
add
add
push
clc
cltd
out
test
push
add
loopne
cmp
add
adc
add
clc
bound
add
add
pop
fisttps
add
ja
mov
adc
add
add
mov
push
cmpsl
clc
jp
pop
rorb
add
add
cmp
sbb
add
fldl
xabort
add
and
add
add
add
add
inc
add
dec
int
xchg
shlb
aam
jns
add
sub
add
pop
in
test
out
movhps
clc
arpl
add
jne
or
clc
mov
add
das
add
add
cltd
test
add
mov
clc
data16
jne
inc
clc
sbb
add
jb
add
add
push
add
sub
mov
xlat
or
xchg
sbb
stos
sub
pop
jmp
clc
clc
inc
clc
mov
and
add
popa
add
test
xchg
dec
mov
gs
jb
add
and
int3
and
add
sbb
imul
jge
clc
cmp
dec
add
add
adc
ficoml
add
xor
add
cmp
jl
add
mov
ja
clc
sub
dec
imul
add
add
or
clc
and
add
clc
mov
xchg
xchg
mov
or
add
data16
cmp
lcall
clc
cmc
mov
add
movsl
clc
cmpsl
clc
addr16
mov
cmp
clc
xchg
cmc
pop
clc
insl
dec
lret
outsl
popa
add
xbegin
lcall
push
xchg
pop
aas
add
add
xchg
in
mov
add
popf
fmul
push
pushf
or
add
add
add
jg
clc
mov
clc
das
jmp
add
shlb
sub
jg
sbb
daa
clc
data16
cmp
adc
add
clc
clc
jecxz
fwait
xor
add
addr16
aam
fwait
mov
adc
add
movsl
clc
imul
mov
repz
fsubp
clc
push
cwtl
mov
xchg
loopne
xchg
and
pop
pushf
mov
out
lcall
jg
dec
stos
ficompl
add
lret
add
clc
jg
adc
pop
ret
clc
add
jo
add
inc
add
lahf
ret
clc
mov
xor
xor
add
xor
add
add
clc
lret
mov
sub
sahf
hlt
scas
sub
jge
add
call
push
mov
add
data16
clc
out
imul
dec
cmc
sbb
inc
clc
sub
add
shrb
mov
inc
add
cwtl
sub
jnp
add
aam
bound
add
add
cmp
in
aam
clc
mov
fnstsw
jbe
test
mov
inc
add
and
sub
mov
clc
dec
add
add
add
sbb
aad
clc
jns
clc
subps
lea
add
test
push
fidivs
arpl
add
clc
push
xchg
lea
mov
mov
loop
inc
add
pusha
add
pop
xor
lock
test
mov
mov
mov
add
clc
xchg
notb
inc
add
das
mov
gs
cmp
clc
pop
xor
repz
add
cmp
out
stc
imul
xor
add
shlb
add
xchg
iret
clts
clc
push
add
pop
clc
jmp
add
and
add
ffreep
clc
adc
add
pop
fiadds
gs
inc
add
loop
xchg
or
cli
pop
stos
add
add
clc
rol
clc
pop
in
mov
adc
add
mull
pop
outsl
mov
clc
or
add
push
mov
in
data16
xchg
data16
dec
add
mov
mov
insb
leave
mov
add
lea
loop
dec
push
and
push
add
sub
js
dec
inc
add
fst
clc
mov
cmpsl
clc
and
add
push
clc
mov
clc
jbe
clc
cmp
clc
push
xor
add
clc
inc
add
jne
je
clc
dec
loope
daa
clc
cmc
cmc
sbb
cmp
data16
repz
mov
mov
add
xchg
stc
data16
jnp
dec
and
inc
add
cmp
cmp
add
dec
push
push
mov
add
and
add
lahf
notl
add
je
cmp
add
gs
not
jnp
clc
imul
mov
add
add
push
addr16
mov
sbb
popf
inc
add
dec
mov
add
pop
cmp
dec
mov
cli
cmp
nop
mov
mov
clc
stos
jb
add
add
add
add
mov
jle
dec
aas
fdivl
cmp
clc
jbe
xlat
sbb
clc
in
je
xchg
insb
cmp
jge
cltd
in
inc
add
inc
add
lock
add
xchg
test
inc
clc
jb
add
enter
xor
add
sub
add
mov
lods
js
repz
add
clc
sbb
add
xchg
sub
pop
add
add
sti
jl
out
and
add
clc
xchg
or
dec
sbb
xor
add
clc
scas
clc
je
stos
stc
push
clc
mov
add
add
xor
clc
inc
clc
inc
clc
icebp
popa
add
mov
clc
cmpsb
clc
jmp
add
add
or
in
mov
add
fstp
call
shrl
fs
push
dec
sahf
xor
add
jg
cmp
add
sar
aam
repz
outsb
mov
loop
add
add
fsubp
clc
mov
das
cmp
add
push
xchg
jle
clc
and
add
outsl
jns
clc
test
sbb
add
sbb
add
clc
and
cmpsb
clc
into
jecxz
xchg
cmpsb
clc
inc
clc
add
add
bound
add
xabort
inc
add
insb
jge
jle
stc
jnp
add
add
clc
in
jae
add
clc
mov
add
sbb
data16
fidivs
add
xor
mov
popf
adc
dec
in
sub
cmp
sar
hlt
frstor
xchg
or
mov
inc
add
xchg
test
clc
jle
or
popf
lcall
mov
dec
and
stc
in
xor
add
cli
push
sbb
sarb
clc
bound
add
add
in
rcll
add
sahf
cmp
fisubs
add
arpl
add
cmp
xabort
push
loopne
pop
int
lret
fisttps
clc
pop
jbe
imul
dec
clc
add
add
clc
or
cmpsl
clc
outsb
sub
jle
clc
nop
imul
es
fxtract
push
lret
mov
outsb
adc
add
mov
and
add
clc
cmp
pusha
add
lret
push
add
mov
clc
or
add
add
mov
pop
out
cmp
mov
clc
arpl
add
add
pop
mov
add
add
or
clc
add
mov
clc
es
mov
cmp
push
into
push
add
mov
test
pop
cli
xchg
lea
cmp
cld
mov
pop
idivl
movsb
clc
xchg
pusha
add
int3
jbe
test
push
add
test
dec
in
imul
das
hlt
lock
in
adc
add
cli
pop
leave
js
clc
dec
loope
pop
mov
add
ficomps
ds
ret
pop
sub
ret
lods
pop
cwtl
ja
cmp
add
add
mov
loopne
cmp
sbb
add
mov
mov
jmp
add
sbb
clc
data16
js,pn
int3
dec
jb
add
jo
add
push
mov
rcrl
mov
notl
and
add
xor
add
pop
jge
add
sti
jp
sub
shrl
jl
mov
add
jo
add
clc
cmp
jns
clc
into
lcall
aad
mov
push
clc
test
jb,pn
add
xchg
loopne
out
sar
fucomi
fsub
clc
dec
stos
ss
xchg
nop
mov
push
add
fisttpl
sbb
clc
stc
or
xchg
sbb
int3
or
pushf
jmp
mov
clc
int
dec
inc
clc
leave
insb
sub
add
lods
push
mov
cmp
das
cmp
mov
sbb
clc
push
pop
enter
cmp
or
fisttpll
in
aas
fcmovbe
dec
sbb
fwait
pop
clc
ret
clc
xor
add
clc
mov
adc
add
clc
insb
inc
clc
push
add
fadds
mov
ss
and
add
outsl
push
rorb
mov
clc
gs
repz
jne
clc
xchg
loope
ret
dec
mov
mov
add
xor
add
clc
sbb
clc
xabort
cmp
cld
jne
add
fcoml
popa
add
and
add
add
cmp
lcall
add
adc
add
add
clc
mov
into
es
bound
add
sbb
xor
add
ja
add
in
xchg
dec
mov
aad
ret
and
and
add
add
int
dec
adc
clc
jnp
or
jecxz
add
add
add
ficoms
pop
scas
int
clc
repnz
inc
clc
add
add
add
clc
stos
pushf
cmc
enter
outsl
add
add
mov
add
mov
add
lods
mov
add
enter
test
xchg
imul
popa
add
loope
xchg
sub
add
popl
add
sbb
push
cwtl
sarl
jo
add
in
inc
add
or
pushf
xchg
or
clc
sub
clc
xor
add
mov
push
add
add
dec
movsb
clc
mov
xor
add
lcall
cmpsl
clc
icebp
jl
or
add
enter
pop
in
sub
jmp
data16
pop
repnz
popa
add
gs
leave
in
xchg
xor
repnz
add
push
add
inc
add
fsubrp
mov
push
ret
clc
mov
cmp
adc
add
jo
add
sbb
sub
jbe
stos
mov
clc
mull
adc
add
pusha
add
pop
stos
aaa
push
scas
pop
clc
jecxz
sahf
stos
out
repnz
test
cmc
daa
clc
or
add
mov
add
add
clc
or
mov
add
fimuls
sar
dec
arpl
add
add
mov
xchg
lea
add
aas
mov
push
add
cmp
clc
test
xor
add
cmp
add
add
imul
mov
pushf
idivb
cmp
clc
push
mov
ljmp
mov
mov
sub
push
data16
loopne
fwait
stc
xor
add
clc
and
add
inc
clc
ffree
clc
hlt
nop
dec
and
fsubrl
xbegin
cmp
cmp
inc
add
and
add
pop
clc
add
add
imul
clc
popf
aas
xor
add
xor
cmpsl
clc
pop
dec
int
xchg
lret
inc
add
testb
cs
push
add
cmp
pop
insl
shl
clc
push
add
add
add
add
push
sub
icebp
bound
add
std
inc
add
xchg
outsl
addr16
hlt
jo
add
or
add
add
clc
enter
mulb
mov
add
clc
sbb
in
cmp
add
hlt
mov
dec
jl
adc
clc
adc
add
clc
test
mov
clc
xchg
jecxz
es
xchg
push
pop
out
test
jecxz
dec
pop
mulb
mov
cmp
es
das
fnstsw
xor
add
inc
clc
add
push
adc
add
pop
stos
das
ja
add
sub
add
push
test
xor
add
clc
adc
add
add
mov
add
lahf
jge
sub
clc
cltd
inc
add
mov
es
add
popf
xor
add
enter
aaa
test
arpl
add
clc
mov
sub
clc
mov
mov
dec
cmpsb
clc
xor
add
inc
clc
je
lret
sub
xor
add
lods
mov
clc
dec
fisubrs
sbb
repz
push
add
aas
mov
stc
push
add
ja
pushf
aaa
scas
push
dec
or
add
xor
add
add
nop
sti
pop
mov
sti
add
add
dec
mov
clc
fldcw
jb
add
cmpsl
clc
mov
insb
data16
in
sub
sbb
lcall
clc
push
aad
clc
in
jns
clc
addr16
insl
in
leave
adc
add
clc
or
mov
clc
cmpsb
clc
sbb
pop
ljmp
jge
sub
clc
shrl
add
into
cmc
aad
test
jle
clc
add
add
add
cmpsb
clc
daa
clc
sar
js,pt
clc
push
in
popa
add
or
add
sbb
aaa
jl
mov
clc
imul
add
adc
clc
in
shlb
cmp
add
je
icebp
xor
add
xor
add
xchg
js
lret
mov
clc
leave
cli
pusha
add
dec
lods
ss
add
nop
mov
sbb
test
add
jge
in
lods
clc
lret
pop
push
add
xchg
xabort
sub
clc
dec
add
add
xor
add
inc
add
lret
add
popa
add
inc
clc
icebp
repz
jmp
repz
cmp
add
inc
clc
in
inc
clc
xchg
rep
mov
clc
fsub
clc
sub
add
sub
or
add
lock
add
lods
and
add
clc
mov
clc
clc
loop
aam
and
add
add
std
inc
add
in
sbb
cmp
mov
pop
dec
add
add
push
sub
lock
mov
add
enter
push
add
ret
clc
add
add
sbb
clc
scas
inc
add
cmp
call
add
mov
adc
add
mov
add
fwait
sub
clc
sbb
fdivl
sbb
cmp
insl
jle
clc
add
add
jge
clc
fwait
mov
jmp
or
clc
push
clc
cmp
clc
rorb
rclb
adc
mov
aam
jmp
jnp
clc
dec
jle
push
push
xor
add
adc
add
xlat
stos
mov
clc
inc
clc
xchg
dec
push
add
sar
in
pop
out
inc
clc
or
add
or
sar
and
add
or
clc
ljmp
jp
add
adc
add
in
cs
out
in
clc
cmp
add
cmpsb
clc
loope
out
pop
push
add
cmpsl
clc
test
jl
mov
push
add
frstor
add
test
cmp
clc
fsubl
adc
add
add
stos
in
sub
clc
xchg
dec
pop
clc
ja
add
inc
add
jl
add
push
not
xchg
jo
add
sar
mov
add
mov
inc
add
es
sbb
and
add
add
repz
pop
pop
xor
add
pushf
mov
pop
pop
pop
lahf
lret
and
add
add
js
cs
fsts
lods
cmp
aas
pop
inc
clc
jg
add
inc
add
and
jb
add
jae
add
push
xor
add
test
or
push
add
and
add
clc
inc
clc
xchg
movsb
clc
mov
add
cmp
fadds
add
out
mov
push
sbb
xchg
inc
clc
mov
add
mov
inc
clc
popf
sti
mov
imul
clc
inc
clc
mov
clc
mov
dec
push
pop
xchg
repnz
out
scas
xchg
inc
add
adc
add
xor
dec
jecxz
and
add
clc
jb
add
shll
add
insl
out
mov
mov
inc
add
pop
inc
add
lock
jnp
clc
fists
nop
mov
test
cmp
adc
mov
add
jmp
clc
daa
clc
adc
add
lock
pop
insb
and
and
out
and
add
add
xchg
cmp
add
pop
data16
iret
cmpsb
clc
pop
stos
mov
add
pop
push
stos
xor
cmp
cmpsl
clc
xor
bound
add
add
jp
xor
lret
clc
jnp
jbe
push
inc
clc
test
and
add
sar
add
es
lret
pusha
add
dec
jle
clc
pop
test
add
lret
lea
clc
idiv
lock
daa
clc
sti
fistps
add
adc
add
add
insb
cmp
push
add
xchg
mov
sbb
clc
mov
dec
stc
fs
mov
pop
cli
pushf
fcomps
sub
push
add
mov
mov
cmp
test
movsl
clc
mov
cmpsl
clc
cmp
add
adc
add
add
add
push
add
jo
add
clc
jae
add
add
aaa
lods
cmpsb
clc
adc
add
or
sar
jp
xlat
jae
add
inc
clc
into
push
clc
enter
add
clc
mov
adc
add
clc
mov
add
fs
out
aad
cmp
loopne
fs
push
add
sbb
mov
or
add
nop
test
sub
out
xor
add
add
cs
cmp
sub
mov
add
mov
enter
nop
ret
add
dec
inc
add
xchg
stos
sahf
scas
je
enter
fcoms
test
adc
add
jne
clc
jb
add
or
add
sahf
jo
add
add
cli
mov
ljmp
adc
add
loope
jo
add
clc
mov
mov
push
cmp
or
or
adc
push
clc
and
add
clc
jae
add
clc
dec
imul
clc
movups
add
dec
mov
clc
jno
add
repnz
add
cmp
clc
and
stc
xchg
loop
jmp
outsb
inc
add
jnp
clc
cmp
dec
inc
clc
pop
clc
je
rcll
iret
or
lgs
add
jns
mov
push
add
gs
int3
mov
lret
insl
sbb
shlb
int
clc
mov
mov
shrl
iret
sbb
pop
add
cmpsl
clc
sub
push
in
sti
mov
mov
mov
add
inc
add
in
mov
add
jb
add
mov
clc
test
dec
fadd
clc
ficoms
mov
js
clc
and
add
clc
cmp
xor
clc
iret
and
divl
add
add
clc
xchg
cld
stos
or
cmp
add
imul
mov
clc
inc
clc
add
mov
imul
xchg
fcmovnbe
jle
arpl
add
je
clc
aam
add
push
jg
push
pop
or
sub
add
add
add
add
add
lods
es
clc
xchg
xor
adc
add
add
pop
loope
dec
push
add
dec
sar
dec
push
gs
rolb
add
add
add
add
pushl
in
sub
inc
clc
loop
and
add
in
cltd
mov
sar
popf
push
hlt
xor
xor
clc
imul
jno
add
add
inc
add
xor
jle
push
add
lahf
stos
cmc
aad
clc
or
cmpsl
clc
test
mov
xabort
std
cmp
pop
cld
outsb
xchg
insb
xor
inc
clc
das
outsl
scas
test
jge
call
add
clc
push
add
jnp
sub
xchg
mov
add
mov
repnz
add
in
mov
clc
mov
add
add
sbb
outsl
outsl
xchg
mov
out
mov
pushf
cmp
sar
es
rol
clc
adc
add
clc
sahf
stos
adc
add
clc
scas
scas
inc
add
aas
scas
clc
adc
add
add
add
addr16
inc
clc
sahf
fstl
clc
mov
jne
test
add
clc
pop
xchg
bound
add
lods
jo
add
pop
pop
outsl
ljmp
push
aam
dec
loopne
jle
mov
or
adc
outsl
xlat
pcmpgtb
pushf
into
or
clc
push
clc
pusha
add
inc
add
xor
add
add
add
call
add
mov
rclb
add
sbb
pusha
add
jnp
sbb
outsl
stos
fwait
inc
add
or
cwtl
mov
lods
sbb
clc
pop
xchg
xor
add
loope
js
jno
add
cmpsb
clc
cmp
clc
pinsrw
adc
add
cmp
clc
stos
cmp
pop
clc
and
add
lods
mov
clc
mov
inc
clc
jp
lahf
mov
mov
add
icebp
fs
fisubs
pop
pop
sbb
xor
add
inc
clc
es
fsts
add
cmp
mov
clc
mov
push
rcrl
add
or
add
and
xchg
push
clc
stc
insl
pushf
and
add
sub
nop
out
cwtl
lret
and
add
jg
add
pop
cmp
inc
add
xlat
mov
and
jne
fistpll
xor
add
and
add
add
add
and
add
add
lcall
clc
jl
add
lret
clc
cmp
faddl
add
jmp
scas
mull
out
movsl
clc
cmp
add
jo
add
add
xchg
aam
leave
loope
mov
add
fsubl
inc
clc
cli
out
xor
add
add
mov
cmp
xlat
adc
add
clc
sbb
clc
mov
add
sbb
clc
fsubr
daa
clc
jg
scas
ds
cs
clc
mov
add
cltd
cs
clc
ja
add
mov
push
rolb
add
scas
scas
ds
stos
or
xor
add
mov
clc
push
add
outsl
in
mov
bound
add
test
icebp
mov
push
add
mov
add
es
xchg
test
and
fwait
sbb
insb
ljmp
add
add
stc
jle
add
seto
mov
clc
bound
add
add
jo
add
add
fsubr
jge
push
add
or
or
clc
lock
adc
clc
fcompl
fnstsw
cltd
xchg
fs
mov
add
ret
clc
je
mov
lahf
push
inc
clc
lods
sbb
jp
add
mov
cmp
add
data16
or
jl
clc
sbb
repnz
add
push
clc
xchg
lret
mov
xbegin
pop
hlt
dec
sbb
bnd
push
mov
push
cmc
repz
mov
clc
sbb
clc
mov
add
pop
clc
aad
sahf
imul
and
add
clc
or
adc
add
sub
mov
pushf
xabort
cmp
dec
bound
add
add
push
push
add
test
dec
fildl
clc
popf
mov
dec
jae
add
cmp
imul
push
mul
clc
sti
xchg
js
clc
mov
mov
jge
adc
add
scas
push
add
je
add
jno
add
mov
mov
clc
pop
lahf
negb
clc
jne
iret
lods
das
inc
add
adc
test
adc
add
add
add
sahf
add
add
sar
mov
fiadds
add
push
add
iret
sbb
clc
fsubrp
or
clc
sahf
cmp
mov
clc
push
add
lcall
xchg
out
pop
fldt
clc
ret
clc
lret
mov
push
sbb
ficoms
add
nop
sahf
fs
pop
scas
inc
clc
in
lods
into
ret
and
add
clc
sbb
clc
inc
clc
mov
xchg
jp
lea
lret
jmp
add
push
cld
shrl
add
ss
addr16
jbe
xchg
nop
push
add
add
add
mov
clc
pop
xchg
in
mov
add
cmp
dec
sbb
xlat
sahf
cmp
scas
clc
cmp
in
outsb
xabort
pop
loope
and
add
scas
loop
and
add
add
dec
cwtl
pop
movsl
clc
fadds
add
add
add
cltd
lret
icebp
arpl
add
clc
inc
clc
inc
clc
and
add
imul
mov
sub
movsb
clc
pop
cmp
add
es
push
repnz
add
sar
cmp
fdecstp
pop
jb
add
clc
cmpsb
clc
ja
push
add
stos
sbb
test
pusha
add
ss
clc
mov
cmpsb
clc
mov
nop
pop
sbb
dec
insl
mov
inc
add
pop
test
add
incl
clc
into
mov
clc
mov
imul
lret
fwait
cld
xor
add
mov
add
jle
sub
add
pop
clc
push
stc
jns
push
clc
mov
dec
iret
mov
add
inc
add
jge
xor
sub
outsl
ljmp
arpl
add
clc
jae
add
test
add
add
clc
stos
adc
jl
xchg
xchg
jbe
and
add
sub
xor
add
cmp
sbb
insl
mov
mov
xor
add
add
mov
mov
add
or
sub
daa
clc
xchg
push
pop
push
push
add
ret
clc
in
or
add
addr16
ret
fwait
mov
inc
clc
jb
add
cmp
clc
int
cltd
mov
hlt
sub
insl
cmp
add
or
out
pusha
add
pop
punpckhdq
lods
and
jb
add
inc
add
rorl
cld
xor
add
in
mov
clc
js
lock
clc
adc
add
add
add
clc
clc
add
add
jle
clc
dec
movsb
clc
dec
jg
sub
mov
clc
lods
mov
and
add
clc
loop
stos
addr16
daa
clc
pop
cmp
out
cmp
dec
inc
clc
sub
jbe
jne
mov
clc
imul
mov
add
add
and
add
ret
clc
push
add
dec
mov
clc
jl
xchg
pop
cli
jo
add
pop
out
add
mov
and
add
add
cmp
rcl
add
xor
add
aas
mov
je
ror
xchg
mov
add
bound
add
jecxz
sti
mov
in
cmp
add
test
cmc
outsl
add
add
clc
inc
clc
das
lea
clc
fmulp
addr16
adc
add
lea
clc
pop
mov
push
add
mov
cli
iret
or
push
jle
fdivrl
push
add
jmp
clc
loop
xchg
fnsave
add
or
clc
push
pop
sarb
clc
bound
add
cld
js
clc
loope
push
add
insl
xchg
jecxz,pn
dec
dec
lea
add
xchg
movsl
clc
push
add
add
out
pop
lock
clc
fwait
mov
mov
jmp
pop
cld
jo
add
push
inc
clc
jl
mov
clc
jo
add
jl
clc
cltd
inc
add
aaa
cmpsb
clc
add
add
clc
repz
add
addr16
pop
das
cmp
cmpsb
clc
lods
mov
xbegin
ret
clc
xchg
aam
ret
gs
jmp
push
popf
sbb
add
sub
add
dec
daa
clc
idiv
pop
mov
clc
rcll
clc
es
push
ja
pop
adc
add
add
cmp
inc
clc
push
add
push
std
jl
clc
enter
inc
add
inc
add
cmpsb
clc
ljmp
iret
std
jmp
cmp
add
hlt
outsl
jo
add
clc
clc
ret
clc
ja
cmp
clc
stos
pop
jmp
clc
mov
clc
ret
clc
insl
ret
clc
mov
in
out
loope
ret
loop
pop
inc
clc
inc
clc
sub
sub
sti
in
icebp
fwait
insl
mov
adc
add
clc
xor
add
dec
push
add
cmp
push
add
sar
add
push
je
bound
add
xchg
pop
ret
bound
add
mov
pop
cli
push
jmp
cmp
fldcw
add
fnsave
jl
add
das
adc
add
clc
cmp
add
jae
add
mov
outsl
cltd
mov
loop
inc
add
lret
cmp
or
fcoms
fwait
das
xchg
mov
fstl
add
sub
jg
add
cmp
add
lcall
adc
add
clc
adc
clc
js
in
aad
add
aam
clc
ret
sbb
adc
add
add
push
inc
add
mov
jne
clc
pop
lcall
inc
clc
fs
lea
dec
cmp
add
insb
gs
lcall
adc
add
and
add
clc
jne
mov
add
add
and
outsb
sahf
imul
mov
test
add
cmp
add
test
aam
cmp
push
push
fsubr
lods
jne
add
pop
xabort
sub
add
add
clc
xor
add
clc
clc
push
loop
int3
add
clc
in
jbe
es
mov
pop
js
add
fistl
push
xchg
mov
xchg
inc
add
jp
or
add
add
into
cltd
sub
inc
clc
xabort
add
cmp
cs
push
int3
push
add
push
sub
das
mov
add
mov
jne
out
stc
fwait
cli
and
mov
clc
lods
or
add
jle
daa
clc
movsl
clc
mov
pop
xchg
or
clc
mov
clc
mov
add
clc
fistpl
clc
sti
lcall
add
daa
clc
jne
clc
std
cmp
dec
cltd
ss
fs
cmp
cmpsb
clc
add
inc
clc
lcall
fdivl
add
or
add
mov
and
push
adc
pushl
add
lret
add
add
or
test
add
lock
clc
cmp
clc
xchg
and
add
clc
out
mov
add
dec
xchg
dec
mov
add
clc
sbb
lret
out
inc
clc
cmp
clc
xor
add
cltd
mov
clc
test
decl
jb
add
push
test
inc
add
jmp
add
cmp
mov
sub
cmp
test
add
ret
clc
jb
add
pop
mov
clc
sar
xchg
es
sbb
xchg
fsubrl
mov
clc
mov
add
pop
or
clc
nop
repz
mov
add
xor
add
add
js
add
xor
adc
add
js
mov
je
pusha
add
push
clc
mov
mov
stc
test
fidivrs
lcall
jno
add
add
cmp
push
add
adc
sbb
shlb
pop
cmp
add
cmc
mov
jp
dec
data16
shrl
ja
cwtl
push
idivb
jbe
clc
jnp
clc
push
sbb
add
inc
add
aaa
data16
add
fwait
push
mov
clc
iret
insb
pop
mov
cmp
add
add
dec
lods
ja
cld
mov
push
insb
or
pop
jae
add
mov
clc
sbb
clc
bound
add
enter
add
pop
js
mov
add
add
clc
loopne
or
pop
adc
add
clc
sar
add
adc
add
xor
add
inc
clc
mov
add
adc
add
lods
xor
add
ljmp
cmp
test
fsts
add
test
ret
add
je
clc
sbb
clc
cmp
mov
add
mov
clc
dec
xchg
ss
fs
pushl
mov
adc
add
fs
rcrb
pop
stos
xor
add
add
data16
outsb
cmp
add
dec
mov
add
add
mov
push
and
add
add
or
add
add
add
or
and
add
add
sbb
xchg
xchg
dec
popf
filds
add
in
push
add
xbegin
add
jne
jns
mov
adc
int
clc
ljmp
add
mov
add
pop
or
add
add
add
add
fcomps
into
or
xor
push
add
xchg
stc
xchg
push
divl
aad
clc
inc
add
or
xbegin
add
jno
add
xchg
jge
icebp
cmp
aad
mov
add
inc
clc
cmp
insl
adc
add
add
out
outsl
pop
mov
add
adc
add
sub
lret
or
fnclex
clc
xor
or
lods
and
xchg
adc
add
add
aad
pushf
jle
mov
clc
xchg
xor
add
xor
add
sti
jnp
mov
gs
test
cmp
add
jmp
arpl
add
push
add
clc
out
jnp
push
clc
cwtl
arpl
add
clc
sarb
test
addr16
ret
clc
xchg
mov
jmp
add
das
movsl
clc
mov
scas
adc
add
clc
in
ret
add
jle
cli
sti
mov
mov
movsl
clc
and
or
jae
add
cmp
repz
fdivrp
lret
mov
clc
adc
add
clc
jae
add
aad
add
pop
loope
pop
imul
mull
inc
clc
push
clc
sbb
fldl
add
push
clc
mov
dec
sar
dec
clc
mov
fnstenv
adc
add
clc
push
add
mov
lods
adc
add
add
sbb
loope
cltd
lahf
outsl
inc
clc
push
mov
add
xor
imul
add
hlt
cmp
cmp
data16
push
add
xor
add
iret
bound
add
add
adc
add
icebp
ljmp
clc
mov
movsb
clc
push
add
aaa
mov
jecxz
mov
pushf
frstor
add
clc
std
clc
pushf
sar
clc
mov
xchg
addr16
dec
leave
xor
add
push
add
imul
jne
gs
and
pop
jle
pop
outsb
mov
mov
jne
cmc
dec
out
dec
push
xchg
out
dec
clc
push
add
out
bound
add
sbb
lock
mov
mov
add
add
xchg
xor
add
clc
cld
movsl
clc
or
clc
out
into
pop
bound
add
xchg
xor
add
add
inc
add
push
sub
clc
out
xor
add
inc
clc
xlat
mov
add
xor
add
sarb
mov
jge
jbe
add
clc
es
int
clc
fdivr
movsl
clc
adc
add
mov
jo
add
push
mov
add
aad
add
push
cmpsb
clc
and
cmp
loopne,pn
arpl
add
mov
add
jecxz
fs
ljmp
inc
add
push
rsqrtps
add
add
shlb
sbb
add
sub
clc
xchg
and
add
add
push
and
add
add
int3
xor
add
pop
mov
xchg
or
loope
fstpt
inc
clc
xor
add
in
sbb
add
cmpsb
clc
or
add
add
dec
cmp
dec
sub
push
dec
cmp
data16
scas
xor
add
pop
sub
icebp
cmp
rolb
add
clc
push
lock
adc
add
add
adc
add
lcall
aam
clc
cmp
out
add
add
scas
call
pop
and
add
mov
cs
mov
add
jae
add
nop
gs
in
xlat
cs
jmp
ja
clc
dec
pop
xchg
inc
add
test
mov
clc
rcl
lods
or
nop
mov
lret
fstpl
xbegin
xchg
mov
and
add
cld
out
mov
clc
or
add
add
inc
clc
jae
add
mov
add
dec
test
mov
add
pop
or
jmp
jo
add
xlat
add
add
xchg
ds
js
sbb
push
jb
add
xchg
pop
push
add
out
push
add
cmp
adc
add
inc
add
push
add
wrmsr
add
or
pop
std
sub
mov
add
add
pop
nop
ss
clc
xchg
pop
clc
and
add
adc
add
add
xchg
jg
xor
add
popa
add
out
loop
mov
int3
pop
pop
or
mov
dec
fwait
cmpsl
clc
fnstsw
jno
add
inc
clc
add
sub
adc
add
pop
cltd
dec
in
mov
clc
push
clc
jg
xchg
fidivrl
cmp
clc
jmp
or
push
add
popf
xchg
push
das
js
clc
iret
roll
fwait
sar
lods
fcmovnbe
imul
jp
mov
clc
push
add
xlat
push
jmp
clc
mov
xor
scas
fwait
and
add
in
sar
jb
add
pop
clc
push
sbb
adc
jbe
call
loopne
out
adc
add
pop
adc
add
add
mov
add
xchg
into
js
pop
mov
loopne
push
and
mov
dec
xor
add
clc
mov
clc
mov
or
jmp
sub
clc
lea
add
push
inc
clc
pop
adc
add
add
add
clc
push
add
dec
sarb
clc
mov
jno
add
add
clc
mov
jno
add
jb
add
add
decl
clc
push
outsl
ljmp
in
data16
clc
sti
daa
clc
jae
add
data16
add
or
push
add
xor
clc
adc
add
cmp
jle
testb
clc
adc
add
clc
lcall
add
lea
xchg
cmp
or
clc
jbe
add
dec
xor
add
lahf
pusha
add
cmp
clc
or
lods
add
out
dec
lods
cld
ret
jle
clc
inc
clc
add
add
enter
xchg
adc
add
or
cmp
and
add
lret
fwait
ss
adc
add
aaa
and
add
int
inc
add
mov
clc
add
add
imul
inc
clc
pop
in
div
jo
add
stos
aas
lods
cmpsb
clc
shl
das
xor
add
ds
mov
clc
xabort
clc
dec
pop
sbb
clc
sub
bound
add
adc
imul
add
cmp
xabort
clc
cmp
push
add
push
push
test
clc
js
enter
stos
sbb
sub
in
pop
or
loopne
fsubrl
clc
push
add
std
inc
clc
push
add
cmp
pop
pop
popa
add
ret
clc
pop
clc
xor
add
add
clc
fistpll
add
inc
clc
and
add
inc
add
sbb
add
adc
insl
xor
add
inc
clc
and
add
xabort
jge
clc
shr
jg
jg
clc
sbb
adc
clc
hlt
push
ret
clc
outsl
rorl
dec
inc
add
insl
jo
add
add
add
imul
mov
add
xchg
repnz
mov
fisttpll
repz
aaa
push
xlat
jbe
xchg
insl
hlt
adc
add
pop
mov
xor
add
adc
clc
cmp
clc
je
clc
sub
mov
je
clc
mov
test
cmp
add
xchg
cmp
comiss
add
mov
and
xabort
clc
scas
cmp
pop
sar
xlat
enter
cmpsl
clc
ds
push
arpl
add
clc
cmp
or
add
jne
enter
clc
nop
sbb
add
add
mov
add
add
addr16
daa
clc
sti
idivl
add
and
add
pop
clc
push
packsswb
add
fiaddl
and
add
decb
clc
add
dec
insb
inc
add
sub
add
outsl
lret
aad
mov
inc
clc
xor
add
sbb
xlat
cld
dec
ds
dec
lahf
mov
clc
push
clc
inc
clc
xchg
cmp
xlat
xchg
dec
stos
pop
mov
clc
outsb
and
fndisi(8087
clc
add
add
add
add
add
add
add
add
and
add
add
mov
clc
adc
and
add
and
add
push
mov
das
dec
pop
xchg
outsb
div
and
add
clc
in
icebp
push
lea
and
add
es
inc
add
or
push
xchg
shl
cmp
clc
sar
int3
fptan
gs
and
add
mov
stc
in
lea
test
repnz
or
not
mov
shrl
or
mov
mov
add
add
add
push
jno
add
adc
add
es
pop
outsl
gs
scas
test
xbegin
dec
cmp
sar
clc
repnz
or
pop
enter
fnstcw
add
and
fwait
sbb
imul
mov
addr16
stc
and
add
or
clc
ficompl
cmp
pop
addr16
inc
add
pop
lret
cmp
add
add
jno
push
nop
cmc
mov
dec
insl
dec
or
add
shlb
add
pusha
add
daa
clc
pop
push
add
icebp
dec
jns
clc
cmp
add
xor
add
and
add
mov
or
clc
out
jg
jge
mov
clc
adc
add
clc
mov
jl
add
inc
clc
lods
push
add
mov
add
shrb
inc
add
test
incl
popf
push
dec
test
add
lret
cs
or
cltd
loope
xchg
jg
out
xchg
cmpsb
clc
mov
jne
mov
cmp
bound
add
lods
inc
clc
and
mov
add
mov
xchg
enter
sub
add
pusha
add
out
push
adc
xabort
clc
mov
ss
clc
xchg
push
clc
xchg
fsubs
add
add
add
adc
add
test
fisubs
clc
mov
jo
add
shll
mulb
hlt
das
nop
int3
inc
add
push
jae
add
sbb
inc
clc
xor
pop
test
fwait
jp
clc
lahf
ficoml
add
jmp
add
mov
add
xchg
or
mov
fwait
adc
add
add
clc
or
mov
xchg
fwait
adc
fistps
pop
sub
clc
dec
mov
xor
add
scas
jmp
dec
movsl
clc
push
cwtl
ret
clc
dec
mov
arpl
add
cmpsl
clc
fs
ja
cs
pop
xchg
inc
clc
stos
push
add
cli
inc
clc
add
clc
push
add
out
in
jne
add
into
push
into
mov
add
rsqrtps
add
notb
add
fistl
add
add
add
sahf
sar
clc
stc
push
add
cmp
clc
jg
pusha
add
push
adc
add
sbb
add
add
sbb
add
sar
xor
repz
inc
clc
sbb
push
add
icebp
in
popa
add
jno
add
add
add
fxch
test
adc
add
adc
add
or
cmpsb
clc
loope
in
pop
cmp
ds
clc
pop
mov
data16
jnp
clc
xchg
sub
in
aam
push
add
xor
add
sbb
clc
leave
dec
mov
das
xchg
cld
xchg
add
add
inc
add
cmp
pop
inc
add
pop
clc
jne
jbe
fs
fisttps
add
push
add
nop
nop
push
mov
clc
cmp
clc
lea
add
add
je
xchg
cmpsb
clc
fs
enter
out
insl
std
mov
jbe
clc
inc
add
in
arpl
add
sub
clc
or
add
hlt
int
cmp
dec
mov
sbb
add
iret
add
clc
rclb
add
sub
inc
add
mov
movsl
clc
sub
dec
out
test
loope
sbb
ss
clc
into
or
repz
clc
jne
jns
and
cld
push
adc
add
stos
rorb
icebp
dec
mov
lods
outsb
arpl
add
add
rcl
or
add
add
scas
mov
pusha
add
data16
mov
fwait
sahf
cwtl
push
cmp
mov
add
add
add
cmpsb
clc
sub
leave
aam
mov
aam
mov
add
in
cmp
inc
clc
xchg
cmp
clc
lods
in
testl
shr
push
mov
clc
movsb
clc
mov
bound
add
aam
clc
out
gs
sub
inc
add
gs
clc
testb
sbb
clc
vsubps
add
call
int
dec
add
add
movsb
clc
sar
dec
es
scas
repz
mov
xchg
pop
mov
packsswb
add
sahf
push
cwtl
gs
mov
add
mov
clc
jbe
fnsave
add
test
add
add
add
test
add
inc
add
pop
ret
fdivrs
mov
cmp
add
add
test
push
add
xchg
adc
clc
mov
mov
add
jmp
add
sbb
push
add
adc
add
sar
add
mov
cmp
pusha
add
jb
add
add
cli
loopne
push
or
dec
xor
add
add
mov
call
xchg
push
add
cmp
clc
push
xlat
in
adc
add
clc
sbb
stos
pop
jb
add
jp
clc
hlt
push
insb
scas
xchg
scas
ret
clc
push
insb
out
mov
cwtl
pop
aad
bswap
xchg
dec
es
es
out
jp
clc
cltd
jnp
push
add
dec
inc
add
arpl
add
clc
jge
xbegin
clc
fnsave
sub
clc
cli
mov
clc
lret
fisttpll
adc
add
add
inc
add
inc
add
dec
loopne
cli
loop
inc
add
test
cmp
clc
xor
add
inc
add
mov
out
lods
add
add
add
add
pop
cmp
pop
mov
clc
clc
test
sub
clc
inc
add
insb
add
add
dec
and
jns
cmp
or
scas
cmp
rorb
clc
mov
xchg
xor
add
in
fcoml
add
int3
das
cmp
gs
fbstp
push
add
mov
xlat
fwait
push
inc
clc
jle
shr
jp
clc
jl
clc
aad
ret
clc
int3
add
add
add
mov
clc
in
add
add
clc
std
dec
and
add
push
dec
lock
clc
outsb
sub
cmp
add
std
icebp
or
sub
rorl
add
clc
sub
add
xchg
ja
sub
add
rcll
clc
and
add
aaa
mov
fbstp
add
data16
shl
clc
sar
sub
cmp
dec
popa
add
pop
push
add
outsb
xbegin
or
mov
pop
mov
adc
add
pop
mov
cld
xchg
sbb
add
mov
add
add
popa
add
cmp
clc
frstor
add
imul
hlt
sub
into
in
fsubrl
pop
clc
out
ds
mov
insl
ja
test
add
xchg
or
fdivp
lea
clc
jno
add
jbe
add
add
test
mov
push
add
adc
mov
data16
inc
add
sti
movsb
clc
sbb
loopne
sbb
add
or
ret
clc
fidivs
xchg
repz
clc
jne
or
jle
xor
add
push
and
add
call
clc
scas
jns
stc
pop
cmp
inc
clc
push
mov
jmp
cs
jg
sub
add
pop
sub
add
xbegin
sbb
enter
clc
or
push
iret
jmp
add
cs
das
mov
in
adc
add
cmp
ret
xchg
jp
clc
into
sbb
imul
fimull
sub
add
clc
push
pop
clc
add
add
cmp
lods
cmp
int3
push
add
bound
add
and
add
rol
clc
push
mov
dec
jnp
jecxz
push
das
dec
aas
sbb
loope
sub
add
es
bound
add
stos
pop
mov
clc
fs
and
pop
icebp
xchg
stos
pop
clc
adc
add
clc
push
out
mov
data16
ljmp
or
add
push
sarl
push
cmp
add
fsts
es
std
push
ret
clc
xchg
xor
add
add
clc
pop
xchg
push
add
mov
mov
jmp
push
mov
testl
clc
ret
insl
rcrb
fstpt
test
pop
jnp
ficompl
clc
popa
add
xor
add
clc
jns
in
xor
add
clc
push
add
mov
addr16
inc
clc
or
mov
clc
clc
add
lods
repz
mov
daa
clc
jg
jns
ret
test
xbegin
add
cmp
dec
outsb
pop
call
add
inc
add
cmp
clc
clc
cmpsb
clc
fisttpll
add
or
add
clc
fildll
add
jae
add
add
into
or
clc
dec
scas
xchg
sbb
xor
add
and
xchg
xor
add
sbb
cmp
dec
mov
add
and
add
add
cmp
faddl
push
xor
add
clc
and
add
cmpsl
clc
fsubrl
clc
stos
insb
mov
clc
mov
pop
dec
mov
cmp
mov
add
cld
nop
mov
adc
jae
add
add
bound
add
clc
jnp
data16
shrl
stos
std
push
mov
clc
sub
cltd
in
out
arpl
add
add
scas
test
addr16
jle
clc
and
inc
add
out
popf
inc
add
adc
add
sbb
add
scas
push
clc
sbb
mov
add
add
add
stos
out
or
lods
stos
mov
clc
xchg
add
add
add
clc
pop
insl
adc
mov
clc
popf
pop
xlat
stos
mov
add
cmpsb
clc
hlt
mov
add
and
add
dec
cmp
je
jp
add
and
jecxz
lods
xor
add
pushf
cmp
clc
iret
lock
mov
pop
clc
pop
clc
pop
push
jno
add
cmp
cmp
clc
loop
xor
add
clc
ds
rolb
add
cmp
into
shl
clc
mov
add
push
cmp
pop
dec
lock
testl
push
add
lods
add
xchg
ss
add
mov
push
sar
jge
mov
add
jmp
pop
cmpsb
clc
repnz
ret
notl
loopne
repz
add
add
je
clc
data16
xbegin
cmp
icebp
mov
clc
pop
lahf
imul
clc
sbb
add
add
adc
es
mov
rcll
add
xchg
stos
mov
rcl
js
add
fidivl
add
jl
clc
aam
fstpt
popa
add
inc
clc
sar
ret
clc
lret
imul
movsb
clc
xbegin
add
mov
add
add
scas
outsb
mov
clc
fisttpl
call
push
mov
ss
pop
inc
add
sub
inc
add
ss
dec
mov
and
hlt
xchg
gs
cs
mov
pusha
add
push
push
push
add
cmp
nop
mov
test
pushl
add
add
clc
push
pop
cmp
jae
add
out
dec
push
clc
pop
cmp
out
addr16
push
xor
clc
fnstsw
cmp
clc
cmpsl
clc
ret
clc
push
add
add
xchg
add
xabort
xchg
clc
or
cmc
or
add
add
gs
fwait
sub
outsl
ss
inc
add
aaa
push
bound
add
cmp
test
push
add
data16
fstpt
clc
cltd
rcrl
add
fildl
es
rorb
negb
add
in
in
push
mov
add
in
int3
enter
dec
cmp
xor
dec
add
add
call
popa
add
ja
jnp
xbegin
outsb
cmp
clc
ja
add
jp
rorb
movsb
clc
cmpsb
clc
mov
push
ja
cmpsl
clc
cmp
add
add
out
adc
add
add
dec
and
add
cld
mov
add
clc
sbb
clc
jmp
inc
add
mov
add
mov
sub
cmp
add
fidivl
add
push
add
es
fdiv
int
xchg
xor
add
xor
add
aam
add
and
add
clc
fldenv
cmp
add
js
repnz
loop
repnz
aaa
mov
jne
dec
aas
sahf
in
or
adc
clc
cmp
clc
data16
in
mov
out
xlat
pop
add
add
popa
add
pop
das
adc
add
into
jae
add
loop
pop
add
add
add
add
adc
add
lret
inc
add
push
setno
clc
sub
add
add
add
sbb
sbb
add
add
test
jl
clc
fwait
cmp
clc
in
xor
add
aam
clc
and
add
clc
mov
clc
out
push
clc
push
inc
add
lods
dec
push
clc
ds
sbb
clc
mov
add
cld
repz
test
add
add
clc
push
sahf
sbb
and
add
call
adc
add
push
dec
cs
inc
clc
push
dec
das
pop
clc
xchg
insb
xor
add
adc
add
xabort
push
sar
clc
mov
dec
dec
fst
pop
mov
add
add
daa
clc
addr16
jmp
sbb
adc
add
aad
and
mov
add
clc
xor
add
add
push
clc
pop
ret
clc
add
add
inc
clc
jbe
mov
add
jns
insb
ljmp
frstor
add
sub
mov
clc
aas
ss
xbegin
cmp
add
xlat
sar
jg
add
xor
add
push
add
arpl
add
dec
ret
clc
into
pop
gs
stos
push
inc
add
or
lods
jmp
mov
scas
inc
clc
push
add
fwait
ror
pop
in
jb
add
in
sahf
fimuls
add
mov
or
add
sub
clc
jo
add
xchg
sahf
or
repnz
pop
inc
add
aad
add
adc
add
loop
mov
or
mov
fistps
aad
clc
cmp
clc
cmp
sbb
inc
clc
sarl
jbe
clc
add
mov
clc
bound
add
dec
push
ljmp
iret
fimull
mov
popf
add
add
add
pop
dec
lret
dec
cmpsl
clc
scas
xor
add
add
divb
xchg
loopne
add
add
clc
lea
add
mov
gs
test
add
jg
clc
out
push
inc
clc
gs
inc
clc
pop
and
add
addr16
jl
xchg
pop
mov
clc
cmp
adc
add
cmp
add
stos
mov
mov
clc
dec
movsb
clc
sub
clc
out
loope
pop
test
sub
clc
lock
std
xabort
movsb
clc
cltd
cld
fsubl
jle
pop
popf
mov
ffreep
clc
push
ds
inc
clc
arpl
add
cmp
clc
sar
mov
adc
add
negb
loopne
inc
clc
movzwl
mov
clc
inc
clc
nop
mov
add
add
insb
mov
jb
add
clc
pop
adc
bound
add
jp
cpuid
clc
cwtl
enter
sub
fsub
clc
cmp
inc
clc
pop
and
add
popf
sar
add
cmp
jb
add
add
adc
sub
jmp
add
add
cmp
cld
outsl
cmp
js
iret
cmp
or
push
sbb
cmpsl
clc
aad
imul
fistl
add
das
fld
clc
mov
push
outsb
xabort
clc
test
loop
push
clc
push
add
xor
add
sbb
clc
icebp
out
out
enter
lock
add
add
dec
mov
lret
dec
dec
xabort
lods
inc
add
lods
out
add
add
cmp
and
add
add
rcl
ss
mov
add
xbegin
daa
clc
cmp
or
rcr
sbb
repnz
mov
into
mov
add
push
add
dec
je
add
enter
add
clc
dec
and
push
clc
mov
xchg
pop
mov
negl
inc
clc
xabort
cs
push
add
repz
add
inc
clc
dec
arpl
add
mov
jge
lea
sbb
leave
ficoms
adc
and
add
ss
sbb
add
int
push
jl
cmp
dec
mov
or
jnp
add
repz
push
jae
add
add
popf
js
and
add
add
lea
add
add
pusha
add
sarb
clc
xchg
pop
push
xbegin
lea
aaa
decb
test
rcrb
add
or
sbb
cmp
add
sub
incl
add
cmp
add
in
xchg
push
test
sub
and
clc
frstor
add
adc
add
mov
cmp
clc
mov
add
cltd
push
jle
clc
or
add
movsb
clc
pop
xbegin
mov
out
cwtl
stc
jge
push
icebp
xchg
pop
or
add
push
push
roll
inc
add
pusha
add
mov
mov
dec
xor
add
inc
clc
lret
mov
jo
add
add
add
loopne
and
add
add
mov
imul
add
xlat
lock
fsubs
jne
clc
imull
clc
jg
clc
aas
inc
clc
add
add
mov
adc
xor
add
fisubs
add
dec
xor
jno
add
mov
pop
cmc
jae
add
imul
loopne
xchg
push
clc
test
loope
sub
add
imull
movsl
clc
pop
xchg
std
inc
clc
jae
add
inc
clc
or
clc
leave
jecxz
xlat
pop
clc
push
xchg
jae
add
add
sbb
clc
cld
sub
clc
sbb
inc
clc
add
add
sub
add
adc
add
add
fisttpll
sbb
fldt
sbb
mov
add
pop
icebp
shlb
add
or
add
xor
add
xchg
adc
aaa
fs
xbegin
add
xchg
mov
in
pop
mov
dec
mov
add
das
mov
add
das
aas
leave
mov
sub
push
frstor
add
jo
add
add
daa
clc
inc
add
mov
jle
sub
call
mov
fnstenv
mov
clc
test
push
add
xchg
in
and
das
fsubrl
aad
clc
in
push
dec
stos
stc
cmp
pop
clc
mov
ret
clc
mov
test
mov
clc
cmpsb
clc
shl
clc
rcl
lods
sub
in
inc
add
mov
lahf
addr16
inc
clc
jg
mov
clc
push
clc
sbb
dec
jmp
clc
repz
push
clc
addr16
push
clc
pop
sub
clc
inc
clc
dec
sbb
cli
xor
add
gs
fst
insl
lock
loope
dec
lock
add
imul
add
aam
clc
push
adc
add
mov
cwtl
cmpsb
clc
mov
add
imul
test
mov
dec
dec
sub
jne
out
lcall
fwait
or
add
insl
test
cmp
es
xchg
inc
add
pop
cmp
pop
jmp
clc
ljmp
adc
out
adc
clc
popa
add
xchg
add
add
dec
xchg
ljmp
add
or
lahf
pop
pop
mov
add
or
pop
fwait
test
clc
jle
stc
jno
add
lock
sbb
xchg
dec
mov
clc
push
add
add
add
sub
and
add
add
xchg
xabort
clc
mov
mov
adc
cmp
mov
sbb
cld
xlat
xabort
cs
test
addr16
gs
mov
into
inc
add
and
or
add
into
xor
clc
mov
fistpll
add
jp
add
popl
xabort
sub
add
push
clc
imul
adc
add
outsb
xor
mov
add
inc
add
daa
clc
in
scas
jne
clc
mov
or
insl
inc
add
fcomi
mov
xchg
adc
push
add
into
ret
clc
aaa
cmp
insb
stos
imul
add
test
addr16
adc
add
add
clc
cmp
inc
clc
mov
outsb
inc
add
mov
add
lock
sar
clc
adc
pop
mov
lock
add
add
mov
addr16
sti
mov
mov
add
or
xchg
dec
dec
ljmp
push
dec
sub
add
xor
add
sub
clc
movsl
clc
ljmp
data16
aas
pop
jb
add
clc
cmpsl
clc
test
clc
push
cwtl
push
add
dec
popa
add
arpl
add
clc
mov
inc
add
xchg
testb
pusha
add
enter
lret
cmp
add
pop
mov
clc
shrb
sub
cmp
add
adc
sub
xchg
mov
fistpl
js
lret
push
add
add
add
and
add
aad
add
incl
jmp
add
adc
cmp
clc
push
add
xchg
addr16
push
mov
scas
sti
pop
cmp
clc
fs
daa
clc
shr
fdivrs
rcrb
pop
sub
fimuls
cmpsb
clc
cmp
out
aad
add
ss
mov
add
push
popa
add
cmp
add
add
in
popa
add
cld
hlt
lahf
mov
bts
clc
adc
add
repnz
add
add
fildll
clc
xchg
stc
mov
pop
xbegin
clc
icebp
sub
or
xchg
xchg
mov
ljmp
xor
add
jne
pop
push
add
mov
cmp
sbb
add
add
mov
mov
clc
loope
push
add
std
xchg
shll
add
mov
cmc
and
cmp
xlat
sahf
mov
into
aaa
loopne
push
add
stos
cltd
mov
clc
dec
cmp
or
clc
int3
in
push
add
std
adc
add
in
imul
xor
add
add
sub
push
xchg
cs
add
aad
fildll
imul
aaa
inc
add
in
cmp
out
add
cli
cmp
pusha
add
add
sub
mov
clc
repz
push
insl
pop
push
sbb
inc
clc
fidivl
sbb
add
xlat
pop
js
add
mov
sub
clc
dec
repz
pop
sbb
add
and
add
add
repnz
in
jg
add
xchg
jecxz
pop
adc
add
clc
sar
clc
test
mov
loope
xor
in
dec
das
mov
cs
mov
cwtl
aad
add
loope
repz
iret
repnz
add
and
add
add
cmpsl
clc
hlt
scas
mov
clc
leave
push
fs
mov
add
jmp
clc
push
cmpsb
clc
mov
sarl
mov
xchg
bound
add
push
inc
add
add
add
mov
sbb
add
dec
push
sar
add
ret
clc
dec
jle
clc
and
add
call
cmpsb
clc
hlt
jmp
mov
dec
sbb
add
cwtl
in
test
cmp
add
pop
enter
add
clc
sti
sbb
in
cmc
or
addr16
fwait
cmc
data16
pop
aam
adc
add
adc
add
clc
das
arpl
add
mov
xor
hlt
xchg
and
add
xchg
jp
add
ja
add
enter
and
jnp
clc
add
gs
xor
add
mov
xchg
stc
ret
clc
jns
pop
out
cmc
scas
mov
push
add
adc
add
add
xchg
iret
repnz
mov
xor
add
iret
cmp
fsts
pop
adc
add
mov
add
xchg
pop
jb
add
sbb
inc
clc
pop
sar
clc
fsubrs
jae
add
test
arpl
add
clc
imul
stc
mov
add
clc
or
push
pop
jno
add
and
add
add
in
sub
add
aaa
ror
loopne
aam
test
lret
icebp
out
popa
add
or
clc
mov
clc
mov
clc
in
or
xor
add
pop
cmp
aas
adc
add
add
fs
sbb
rorl
mov
addr16
or
add
call
sbb
daa
clc
push
sbb
mov
pushf
jns
clc
out
mov
clc
mov
ds
inc
add
pop
dec
int3
test
clc
dec
jnp
add
xchg
int
clc
adc
add
add
add
xor
pusha
add
jge
out
out
xchg
adc
clc
aaa
mov
add
add
dec
pop
icebp
dec
push
jo
add
call
sti
mov
ljmp
je
ss
movsb
clc
jmp
clc
or
push
add
cmp
push
mov
add
clc
movsb
clc
or
pop
imul
add
push
out
lock
sub
add
stos
sbb
lea
out
and
add
add
pop
mov
clc
adc
add
cmp
cmp
lock
add
xchg
jae
add
clc
push
dec
mov
movsl
clc
sbb
jecxz
inc
add
inc
add
pop
lock
xor
add
add
repnz
sbb
nop
cmp
jmp
jmp
sbb
lahf
sbb
fnstsw
leave
inc
clc
scas
lea
clc
xchg
int3
push
add
cmp
loop
enter
jle
clc
inc
add
popf
inc
clc
dec
jmp
sub
gs
faddl
add
jmp
clc
push
mov
clc
nop
inc
add
sbb
mov
add
sar
cmp
iret
out
aaa
fcompl
nop
cld
in
popf
xchg
into
imul
add
jle
clc
icebp
data16
or
clc
int
clc
or
clc
adc
add
add
jle
addr16
aad
or
ficomps
mov
add
mov
mov
sbb
cmpsb
clc
mov
clc
xabort
bnd
and
add
clc
gs
rolb
add
ss
adc
add
inc
clc
lret
stc
jp
mov
add
fildll
fwait
call
jno
add
bnd
xchg
lea
push
clc
call
or
or
insb
addr16
dec
sub
pop
lock
and
add
mov
xchg
xchg
xchg
add
add
cmp
inc
clc
xchg
inc
clc
jg
sub
shll
clc
xor
clc
int3
or
roll
daa
clc
sbb
add
fnstcw
add
add
add
stc
pusha
add
jp
jo
add
add
sub
lea
mov
mov
jo
add
push
gs
test
adc
add
stos
push
add
ds
inc
clc
xor
add
add
add
xor
add
clc
xor
add
leave
rcl
outsl
pop
clc
push
add
pop
lea
call
push
add
add
cmp
add
xor
add
clc
push
add
xchg
xor
jp
push
xbegin
add
dec
mov
add
aas
addr16
in
push
jl
es
lcall
clc
into
data16
in
jle
jne
cmpsb
clc
cmp
add
cmp
std
adc
add
es
xabort
mov
mov
pop
fcmovbe
jmp
fcomp
cmp
inc
add
inc
add
loop
jnp
jns
pop
pushf
mov
add
repz
clc
push
sub
sub
add
add
adc
add
or
clc
push
or
pop
dec
inc
add
sub
into
ret
imul
es
imul
jo
add
imul
and
add
or
clc
dec
inc
clc
arpl
add
cltd
ror
iret
lea
clc
sub
mov
mov
adc
add
cli
fcmove
popf
add
mov
leave
jmp
jae
add
lahf
out
ret
clc
pusha
add
cld
cmp
add
sbb
xor
int3
outsb
and
add
aad
inc
add
pop
or
jg
int
pop
sub
jecxz
push
data16
popl
add
lahf
or
adc
add
add
dec
pop
lock
movsl
clc
cld
negl
dec
pop
fists
add
pusha
add
ss
std
outsl
lret
leave
test
je
clc
test
xchg
jl
ss
cmp
ja
js
add
add
in
in
mov
clc
push
push
mov
add
inc
add
jnp
and
pop
xbegin
adc
add
lahf
and
add
and
push
ljmp
popa
add
push
add
pop
jg
clc
test
mov
fbld
clc
mov
jo
add
pushf
xbegin
cwtl
xchg
mov
clc
pop
add
add
int
add
clc
insl
mov
add
cmpsb
clc
or
clc
mov
jo
add
loope
cli
pop
xbegin
mov
test
push
pop
mov
leave
iret
sarb
xchg
out
mov
add
push
add
cmp
clc
cld
adc
add
add
aam
clc
add
add
mov
movsb
clc
jo
add
inc
add
ljmp
clc
adc
clc
cmp
add
lea
cwtl
mov
xchg
push
imul
clc
int
imul
clc
adc
add
aas
jb
add
xor
add
inc
add
imul
add
lahf
loopne
repnz
push
mov
jle
clc
out
mov
mov
jns
shll
add
imul
add
lock
push
pop
bound
add
cli
xor
add
lods
xlat
nop
cmp
push
aad
clc
add
add
add
popf
push
mov
xchg
ret
clc
adc
clc
dec
sub
clc
into
jbe
clc
test
push
addr16
ljmp
add
repnz
out
sbb
int3
xchg
daa
clc
pop
push
pop
loope
stos
jbe
sub
cltd
std
fs
ss
leave
xchg
push
add
xchg
jl
clc
insl
cmp
add
clc
cmp
mov
test
gs
mov
clc
cs
add
push
add
mov
call
movsl
clc
dec
push
add
mov
repz
cmc
push
inc
clc
popl
add
iret
push
cmp
imul
popf
popa
add
jmp
adc
add
clc
shl
clc
dec
mov
adc
push
add
push
add
pusha
add
adc
add
stc
fldenv
xor
push
add
lahf
nop
pop
imul
jp
fidivrs
add
add
mov
stc
cwtl
mov
mov
scas
in
in
lret
cmp
clc
or
clc
dec
push
out
cmp
add
rcll
xchg
addr16
dec
push
add
inc
add
fs
cmp
dec
testb
add
add
xchg
lock
add
cmp
mov
jecxz
xor
mov
clc
shl
clc
cld
pop
test
dec
sub
loope
push
out
repz
pop
or
clc
cmp
inc
clc
mov
add
dec
push
add
pop
dec
cmp
icebp
or
add
scas
inc
clc
lods
pop
aam
clc
push
add
cltd
sar
clc
repz
add
add
clc
fimull
pop
sub
sbb
add
clc
push
adc
add
sub
or
add
arpl
add
add
clc
or
imul
loope
fs
lcall
clc
cmpsl
clc
jno
add
gs
sbb
imul
jo
add
add
test
sar
push
cmp
movsb
clc
jl
sbb
mov
pop
clc
rcll
add
push
mov
add
sar
add
popa
add
push
add
sbb
mov
xchg
mov
add
add
into
adc
add
inc
clc
mov
lea
clc
aas
sar
cmpsb
clc
add
push
add
movsl
clc
push
xabort
imul
jl
repnz
lcall
mov
add
test
xchg
dec
jns
clc
mov
xor
cmp
sti
cmp
ret
clc
dec
xbegin
add
insl
jo
add
clc
and
add
clc
add
add
clc
clc
mov
jp
mov
lcall
clc
sbb
pop
clc
das
add
add
repnz
repz
clc
sub
clc
repz
clc
repz
clc
repz
jle
xor
add
clc
jp
xadd
push
daa
clc
cmp
or
mov
mov
clc
mov
add
aas
add
add
sbb
call
clc
cltd
in
adc
add
or
loopne
jnp
xor
add
stos
mov
clc
cmp
add
sub
movsl
clc
movsb
clc
adc
add
clc
pop
mov
inc
add
push
xchg
jb
add
clc
in
add
sahf
push
xor
inc
add
jo
add
fwait
pop
mov
jmp
cmp
popf
outsl
repnz
add
add
mov
lcall
adc
add
sbb
call
in
data16
cmp
fnstsw
clc
daa
clc
mov
add
pop
scas
mov
enter
add
xbegin
add
clc
sub
lret
popf
xbegin
mov
clc
jae
add
clc
or
clc
lahf
inc
add
dec
adc
add
arpl
add
call
dec
sub
sar
aaa
push
cmp
add
mov
into
sti
fnsave
jmp
std
rcrb
add
ficoms
add
iret
aas
inc
clc
out
xchg
sbb
add
add
mov
add
mov
dec
aad
lock
add
xlat
sub
add
xlat
sahf
push
add
es
mov
push
push
pop
clc
push
mov
clc
xchg
mov
sub
jb
add
dec
add
add
cmp
pop
xchg
or
clc
xor
add
add
mov
imulb
popf
jmp
movsb
clc
pop
cmp
add
or
clc
test
add
enter
xlat
das
movsb
clc
sub
add
adc
cmpsb
clc
stc
out
cmp
add
fdivrl
popa
add
push
clc
sub
xchg
popa
add
loope
cmp
inc
add
cmp
cmp
clc
outsl
mov
xchg
sbb
inc
clc
roll
add
outsb
fnstenv
xchg
jno
add
add
pop
and
add
add
dec
xchg
lock
add
lret
push
clc
xor
add
add
sti
mov
and
add
sub
mov
add
jb
add
in
mov
xor
mov
call
add
loope
cltd
out
out
data16
gs
fdivl
pop
rorb
add
and
add
add
jbe
clc
imulb
insb
xor
addr16
mov
push
dec
push
clc
iret
jecxz
movsl
clc
in
pushl
add
dec
jle
jne
cltd
leave
shrl
add
mov
add
dec
out
dec
push
add
rorb
and
add
sub
xor
and
add
jmp
out
dec
push
clc
adc
add
imul
add
sub
clc
pop
scas
sub
insb
adc
xchg
enter
adc
add
add
cmp
add
clc
es
addr16
enter
fwait
sub
add
cmp
mov
or
add
das
or
add
add
add
lahf
mov
push
mov
fwait
cs
and
xchg
in
push
or
add
out
addr16
adc
add
add
pushf
daa
clc
or
clc
mov
clc
inc
clc
rcrl
repz
add
test
clc
popa
add
or
add
mov
aad
mov
add
leave
cmpsb
clc
xor
add
add
mov
xchg
or
add
hlt
insb
sub
sbb
clc
xchg
or
out
or
data16
cmp
sar
lods
rol
clc
out
pop
or
clc
iret
mov
cltd
pushf
cmpsl
clc
rol
clc
xor
add
clc
xabort
outsb
jg
es
and
add
add
fcomps
data16
ljmp
movsl
clc
cwtl
mov
clc
out
cmp
inc
add
push
add
cmp
jb
add
lods
lcall
clc
mov
dec
int3
pop
insl
push
lods
enter
clc
pop
aad
add
int
pop
ficoms
add
clc
cmp
or
mov
clc
out
out
imull
shll
clc
out
or
inc
add
aas
jg
inc
clc
mov
sub
add
add
xchg
enter
add
mov
xor
add
add
clc
cltd
mov
mov
pop
clc
push
mov
push
fs
fistl
xchg
pop
xchg
dec
sbb
jns
popf
scas
jb
add
cltd
xchg
bnd
cmp
aad
mov
mov
add
add
jno
add
cmpsb
clc
mov
push
add
std
inc
add
inc
add
cmc
jp
mov
add
lods
insl
xor
add
and
add
insb
ds
cwtl
xabort
clc
cmpsl
clc
imul
cmp
cli
xchg
out
cvtps2pd
lss
cmp
clc
sarl
clc
mov
clc
lret
jnp
add
popa
add
sar
ljmp
bound
add
jbe
add
imul
sub
lods
popf
mov
inc
add
aaa
std
push
add
adc
add
clc
sbb
clc
mov
daa
clc
test
into
loopne
mov
inc
add
push
xor
xor
add
lret
xor
add
xor
add
clc
adc
add
mov
leave
ss
xchg
into
lock
add
add
cmp
xlat
dec
cmp
add
pop
outsb
and
add
adc
add
cmp
loopne
jp
ss
clc
inc
add
inc
add
dec
mov
mov
sbb
cmp
mov
je
mov
jmp
inc
clc
push
add
jp
clc
insl
or
pop
in
sub
add
insb
or
inc
clc
sub
pop
sar
push
add
inc
clc
and
adc
add
mov
add
mov
dec
je
clc
jnp
mov
clc
or
add
arpl
add
int
sbb
clc
jns
cmp
and
add
add
add
mov
sub
add
xor
or
arpl
add
add
pushf
inc
clc
xchg
scas
jo
add
jns
push
bound
add
cmp
dec
mov
jbe
ss
add
push
mov
sub
add
xor
out
stos
ficomps
clc
and
in
clc
enter
addr16
lret
add
clc
rorl
and
add
mov
clc
cltd
sti
and
add
sbb
in
adc
lahf
dec
pop
clc
or
or
aas
imul
mov
lea
pop
jmp
pushf
xchg
push
mov
clc
repnz
mov
clc
push
add
dec
stos
out
stos
mov
dec
cmp
clc
push
into
movsb
clc
jno
add
sub
bound
add
add
pop
xchg
jmp
cltd
xchg
mov
mov
fisttpll
add
bound
add
test
lods
sbb
add
xor
add
clc
xchg
sarl
adc
add
add
in
mov
add
scas
bound
add
dec
or
fcomip
inc
add
push
add
inc
clc
sbb
shr
fcoms
xor
add
dec
mov
clc
nop
hlt
mov
pop
clc
dec
xchg
movd
clc
paddsw
mov
add
lcall
std
in
fisttpl
popa
add
push
bound
add
mov
clc
mov
add
or
push
mov
lods
cmpsl
clc
call
clc
lods
and
add
mov
jnp
sub
pop
lods
scas
mov
add
clc
mov
cmp
clc
in
cmp
pop
pop
scas
xchg
add
enter
jo
add
push
dec
mov
cmp
clc
xchg
in
jno
add
in
jae
add
add
xor
add
clc
int
jmp
mov
xor
lret
add
mov
mov
add
mov
add
xchg
sbb
push
fsts
clc
jnp
loopne
and
movsb
clc
cmp
add
ret
clc
lcall
pop
xor
out
stos
out
cmp
jp
cmpsb
clc
fsub
clc
mov
inc
clc
sub
cltd
fsubrs
fiadds
mov
arpl
add
sbb
inc
add
fmull
lret
add
xor
add
int3
push
add
jae
add
pop
xor
add
clc
mov
clc
or
lock
aaa
cs
add
push
je
repz
add
xor
add
hlt
push
add
inc
clc
add
add
add
sbb
sub
outsl
or
add
pop
xor
add
xabort
stos
fisubs
and
fwait
add
add
add
clc
and
add
pop
mov
jnp
push
add
pop
aam
or
add
out
push
mov
cmp
clc
filds
iret
movsl
clc
xor
add
mov
clc
push
call
hlt
addr16
flds
add
xchg
cmc
cmpsl
clc
sub
clc
and
add
dec
jmp
aam
jg
clc
stos
push
add
xchg
sbb
and
add
xchg
and
add
fstpt
dec
mov
cmp
clc
jbe
out
addr16
mov
clc
jno
add
add
lahf
xor
add
add
stos
inc
clc
push
clc
jbe
inc
add
push
clc
loopne
xor
add
pop
push
add
rcrl
das
jo
add
cmp
pushf
mov
push
arpl
add
jg
int
cmp
push
add
scas
pop
push
sub
xchg
bound
add
add
pop
ljmp
add
mov
jnp
mov
push
inc
add
and
popf
cmp
pop
ret
mov
add
lea
add
and
add
clc
mov
scas
sti
wrmsr
add
cmp
clc
push
add
or
push
add
imul
cmp
and
add
add
dec
sbb
jae
add
jp
add
out
iret
mov
imul
negl
add
sub
and
add
add
sub
sbb
add
push
sub
dec
adc
add
add
mov
add
or
pop
test
clc
pop
inc
add
or
dec
stc
sub
add
fbstp
add
add
sar
inc
add
repnz
aas
in
into
pushf
loope
fsubl
clc
popa
add
into
cmovae
add
inc
add
mov
or
add
out
imul
add
add
add
add
add
clc
and
fnstcw
pop
ds
repz
in
jne
nop
and
add
clc
mov
xbegin
add
clc
jecxz
mov
push
add
xor
add
bound
add
add
lcall
add
int
adc
clc
int
add
cmp
mov
sub
add
add
data16
clc
scas
jle
clc
mov
add
inc
clc
ds
mov
in
cmp
rcll
add
int
add
mov
jge
nop
stos
mov
out
dec
cmp
fs
mov
ret
clc
int
adc
add
out
push
add
add
pop
test
daa
clc
and
add
clc
xor
add
add
add
aas
inc
clc
mov
sbb
xor
add
clc
out
dec
sub
lret
sub
in
imull
xor
add
clc
push
xchg
arpl
add
add
mov
icebp
cmpsl
clc
es
jmp
xor
add
jne
dec
adc
add
add
mov
mov
add
jno
add
push
add
mov
clc
inc
clc
fcompl
in
jge
mov
fidivrl
mov
add
roll
and
lods
inc
clc
inc
clc
movsb
clc
das
ljmp
outsl
push
add
mov
adc
add
add
mov
sar
clc
or
int3
jge
sub
in
and
add
push
outsb
push
or
jmp
push
sbb
xor
std
into
int3
stos
or
add
stos
mov
push
loop
push
clc
leave
fisubrl
lcall
out
sub
cltd
lea
dec
cmp
mov
xor
add
add
push
add
sahf
in
das
insb
pop
mov
add
nop
mov
push
cmpsl
clc
dec
mov
pop
sbb
mov
clc
cld
cmp
sti
ret
call
sub
xchg
leave
xor
add
mov
jbe
jl
daa
clc
insb
lods
adc
jne
das
dec
mov
je
mov
dec
sahf
arpl
add
dec
pop
clc
mov
add
clc
movsb
clc
outsb
arpl
add
add
xor
add
aaa
int3
mov
add
gs
call
clc
mov
clc
shlb
lock
inc
clc
lret
mov
dec
add
add
add
add
add
dec
mov
clc
xchg
insb
das
mov
sarl
cmpsb
clc
inc
clc
and
add
clc
xor
filds
lods
ljmp
xlat
jmp
ret
clc
cmp
int
loopne
jge
add
int3
push
add
ret
clc
and
add
mov
add
pop
cmpsl
clc
mov
cmp
add
add
add
push
sub
clc
xchg
repnz
cmp
clc
mov
mov
push
jmp
xchg
test
add
punpcklwd
add
push
clc
test
mov
repz
add
xabort
inc
add
movsl
clc
cmpsl
clc
movsb
clc
jo
add
fs
wbinvd
mul
clc
sahf
adc
clc
popa
add
in
in
lea
add
sub
rcll
and
pop
sti
cli
mov
or
clc
sarb
clc
das
bound
add
xor
add
add
or
cmp
fbstp
fnstsw
clc
ljmp
add
test
out
lahf
popa
add
inc
clc
addr16
loope
outsb
jle
clc
gs
cs
mov
push
adc
add
xchg
xchg
rol
clc
lcall
pop
cmp
fnsave
clc
bound
add
xor
clc
adc
add
add
lods
inc
add
nop
outsl
xchg
xor
push
mov
sub
aam
clc
rclb
add
inc
clc
mov
push
in
jmp
clc
xchg
gs
inc
clc
in
ret
clc
sub
lock
clc
xor
add
scas
xchg
dec
xor
add
add
cld
sar
pop
mov
xchg
xchg
imul
inc
add
sub
push
push
push
cwtl
loop
or
out
lods
cmp
adc
add
cmp
or
push
push
mov
dec
xor
add
pusha
add
fcmovbe
dec
out
jmp
xchg
adc
add
add
clc
dec
push
pop
push
cli
psraw
and
cld
repz
add
clc
dec
das
cmp
mov
add
pop
ficompl
arpl
add
add
jbe
push
mov
clc
dec
fdivrs
mov
clc
push
sar
add
add
xlat
dec
mov
mov
add
into
je
vmovhps
clc
nop
jne
add
xchg
rorb
xchg
pop
xlat
out
dec
sbb
aas
dec
iret
inc
clc
dec
fwait
mov
mov
add
jmp
sub
sub
cli
or
add
dec
js
idivl
js
clc
ds
clc
xchg
pop
addr16
pop
mov
gs
cmp
clc
ljmp
test
and
add
jl
clc
icebp
cwtl
mov
pusha
add
pop
ret
clc
xor
add
icebp
cmc
mov
test
test
add
add
add
clc
sar
add
mov
clc
cmp
push
add
ds
fwait
push
mov
add
imulb
arpl
add
insl
out
pusha
add
jmp
clc
jg
clc
jnp
xchg
addr16
pop
dec
pop
add
add
add
sub
inc
clc
cmp
mov
sar
push
add
xlat
sar
ror
jae
add
clc
inc
add
enter
aad
xor
add
aad
lods
pop
sbb
movsb
clc
sub
inc
clc
lret
movsb
clc
cmp
cmp
clc
xchg
inc
clc
scas
mov
lahf
mov
push
or
add
add
clc
pusha
add
ror
cmovns
inc
add
pop
imul
mov
add
clc
push
pushf
push
push
data16
rcl
or
add
das
daa
clc
sar
clc
sbb
rclb
xor
add
cli
addr16
cmc
jg
pop
inc
clc
cli
lahf
rolb
add
aaa
cmpsl
clc
mov
and
add
pushf
and
mov
push
jl
sub
clc
fbld
add
add
add
add
jne
pop
insb
je
stos
cmp
js
adc
add
push
add
sahf
sar
add
mov
imul
inc
clc
pop
clc
pusha
add
adc
add
add
push
cmc
push
lock
jp
into
fwait
pushf
into
cmpxchg
jmp
inc
clc
mov
inc
add
xor
push
out
mov
and
scas
ret
mov
jbe
clc
jecxz
mov
clc
dec
call
inc
clc
pop
enter
clc
jo
add
stc
clc
or
xor
add
into
sub
cli
mov
fwait
cmp
into
or
clc
ficoml
aad
popf
cmp
clc
xor
add
clc
jnp
rclb
pop
cltd
jle
jle
mov
clc
pop
mov
iret
pop
jne
clc
aad
cwtl
sti
inc
add
arpl
add
clc
or
add
je
push
faddp
clc
and
xor
add
cs
xchg
pushl
add
jae
add
clc
lcall
inc
add
sar
lcall
cltd
jb
add
push
add
sub
xbegin
add
push
inc
clc
stc
inc
add
mov
add
ljmp
cmp
lcall
add
icebp
add
add
fimull
sahf
add
add
jl
add
mov
add
clc
mov
xchg
into
add
add
push
scas
cmc
push
add
adc
add
clc
adc
daa
clc
cmp
clc
mov
adc
add
lahf
mov
clc
sub
imul
jno
add
icebp
mov
ret
clc
lret
jp
cmpsl
clc
cmp
push
clc
and
in
icebp
aas
jns
loop,pt
inc
add
sub
add
test
lret
shlb
sbb
add
pop
add
add
xchg
pop
jb
add
popf
jp
jno
add
pop
sbb
clc
mov
popa
add
in
add
add
repnz
push
jecxz
jns
sar
clc
pop
mov
pop
clc
mov
pop
sub
ss
clc
mov
add
mov
add
sub
sub
clc
pop
and
add
add
clc
cwtl
dec
xor
add
or
clc
repnz
or
add
cmp
mov
clc
lods
ds
and
add
jge
add
sar
add
add
add
add
cmp
or
mov
pop
popa
add
jle
cmp
add
xor
dec
and
add
das
sub
popf
sahf
popf
sub
clc
xchg
arpl
add
add
aaa
pop
clc
loope
sub
and
add
add
sub
and
add
add
jns
pop
cmp
std
cmpsb
clc
cmp
add
popf
scas
cmp
pop
stc
sub
add
mov
adc
add
add
inc
clc
insb
jns
push
arpl
add
outsl
mov
sub
sub
add
aaa
mov
push
lods
stos
jge
mov
sbb
daa
clc
mov
clc
sbb
clc
in
cmp
add
es
jbe
add
cmp
sub
clc
pusha
add
sbb
clc
or
fs
mov
and
add
clc
xchg
test
xor
add
mov
jo
add
and
add
add
daa
clc
outsl
mov
clc
cld
imul
clc
xchg
and
add
mov
xchg
lcall
push
mov
clc
pop
cs
or
xchg
cmp
insb
lods
pop
mov
clc
dec
addr16
push
clc
inc
add
sar
pop
repnz
xor
add
inc
clc
push
bound
add
clc
jecxz
fmul
mov
sub
mull
mov
sbb
pop
clc
mov
clc
cld
data16
pop
mov
roll
add
jge
bound
add
add
add
stc
clc
mov
js
divl
pop
fsubr
imul
pop
or
add
fs
push
dec
popf
mov
xlat
jbe
clc
pop
clc
iret
xchg
pusha
add
clc
add
sbb
ret
jne
xchg
outsb
push
add
sub
clc
ljmp
xor
add
fdivrs
xchg
inc
clc
xchg
jo
add
mov
push
cmp
clc
fs
test
add
fucomp
sar
fiaddl
mov
loop
xchg
scas
cmc
imul
add
cmp
dec
loop
dec
icebp
in
ljmp
adc
data16
movsl
clc
add
rcll
xor
add
add
add
add
loop
cs
add
sbb
add
add
add
xchg
and
add
xchg
fistpl
jle
add
mov
incl
add
clc
lret
and
add
outsl
stc
xchg
mov
push
add
mov
clc
push
add
mov
mov
add
add
xchg
cmp
jne
add
add
daa
clc
in
cmp
push
cwtl
jge
clc
aad
add
pop
int3
shr
out
xor
add
add
clc
ss
add
push
addr16
mov
add
add
clc
test
popf
imull
pushf
adc
add
xchg
loopne
inc
add
jo
add
clc
push
add
push
add
mov
add
ret
clc
mov
push
aad
js
loopne
leave
pushf
arpl
add
and
cmp
fnstsw
mov
xchg
mov
clc
cmp
sub
add
lcall
add
or
icebp
clc
mov
clc
jge
clc
xor
fld
clc
push
add
imul
clc
adc
add
in
and
add
fsubrs
rorl
testb
imul
add
adc
add
popa
add
push
add
popa
add
or
add
cmc
jo
add
mov
dec
xor
add
add
mov
add
inc
clc
ja
into
aas
push
add
rcl
mov
push
test
cmp
lock
push
icebp
and
add
pusha
add
cmp
repnz
inc
add
fs
loopne
xor
add
stos
je
fs
stos
sti
pop
ljmp
ds
pop
mov
clc
jmp
jnp
clc
fbld
add
mov
mov
mov
push
sub
add
ss
lret
push
adc
add
pop
fsub
clc
dec
fsts
cmc
loope
sbb
clc
outsl
inc
add
int3
xor
add
sbb
mov
inc
clc
repz
add
push
add
xchg
inc
add
rcr
cmp
fcmovnbe
out
dec
cmp
and
add
push
xchg
xor
lret
popl
or
push
add
pop
xlat
aaa
aas
loope
sar
imul
add
sahf
xor
add
add
clc
xchg
cs
add
cs
add
jae
add
add
push
cmp
mov
clc
cmc
enter
clc
dec
sbb
pop
jmp
mov
add
mov
aaa
jl
add
mov
and
add
scas
dec
sub
add
stc
test
stc
cmp
add
call
xor
add
repz
add
mov
add
adc
add
jnp
xchg
int
jl
pop
bound
add
iret
cltd
cmp
sti
cwtl
popf
inc
add
movsl
clc
scas
into
fcmovne
jg
clc
jb
add
cmp
clc
loopne
jo
add
add
xor
add
vxorps
jle
add
mov
and
add
clc
or
add
add
daa
clc
scas
jae
add
inc
add
stos
sbb
pop
lock
pusha
add
jb
add
ljmp
fisttps
add
add
add
clc
test
lahf
aaa
lret
mov
jnp
std
xchg
das
loope
sub
add
aaa
pop
pop
int
clc
jle
clc
jecxz
clc
mov
add
lods
lods
addr16
mov
add
add
add
xor
add
adc
mov
clc
sar
xchg
push
clc
mov
cmp
clc
and
add
add
push
clc
mov
add
inc
add
and
add
ret
out
scas
or
add
leave
in
mov
dec
sbb
jb
add
add
dec
push
lahf
sti
or
jbe
push
xchg
cli
arpl
add
clc
je
clc
inc
clc
and
add
clc
pop
fisttps
stos
add
add
jl
mov
mov
mov
clc
stos
xchg
cmp
cltd
push
add
mov
clc
jmp
add
into
push
push
insl
or
and
lea
add
add
xchg
fwait
aaa
add
add
inc
add
jbe
mov
add
adc
add
lret
cltd
jbe
rorb
sbb
add
add
cmp
push
clc
or
push
add
add
add
add
sbb
sub
jecxz
push
inc
add
mov
data16
loope
mov
jmp
push
jbe
lea
clc
and
add
sbb
bound
add
jle
adc
add
out
add
add
xchg
push
inc
add
push
sub
sub
divb
lock
add
push
ljmp
popa
add
pop
clc
jae
add
dec
mov
add
clc
xlat
js
clc
insl
push
cmp
add
adc
jmp
xor
add
por
add
add
fwait
pop
push
cld
mov
daa
clc
xor
add
add
dec
pop
aam
jg
inc
clc
gs
cwtl
cmp
out
xbegin
push
add
int3
dec
out
lahf
out
xchg
sub
mov
lods
daa
clc
and
add
shl
clc
in
jmp
inc
add
mov
push
mov
clc
jae
add
ljmp
push
repnz
gs
inc
add
ror
jns
fsubp
clc
xchg
push
or
xor
add
clc
mov
fadd
clc
pop
inc
clc
hlt
or
jae
add
xchg
lods
dec
push
jle
push
add
clc
es
lock
sub
add
imul
fsubrl
add
mov
pop
insb
sub
imul
add
jl
clc
in
aaa
imul
dec
sar
clc
test
adc
clc
outsl
out
mov
add
add
cmpsb
clc
mov
add
clc
idivl
jge
mov
push
push
pop
clc
roll
sbb
clc
xor
jecxz
dec
sub
outsb
daa
clc
popa
add
scas
fcomp
lcall
clc
divb
add
dec
in
pop
lret
mov
jo
add
sar
clc
mov
sahf
cmc
xchg
jecxz
mov
repz
add
inc
add
fwait
pop
xchg
in
clc
or
push
fs
shl
rcl
and
fwait
push
repnz
mov
aaa
inc
clc
fdivp
popa
add
inc
add
inc
add
pop
faddp
clc
mov
clc
pop
jge
add
dec
frndint
addr16
ret
clc
add
inc
add
xor
add
cmp
add
cmp
or
add
clc
out
push
add
and
add
and
fld
clc
hlt
cwtl
mov
pop
ja
ljmp
jne
adc
add
daa
clc
cvtps2pi
clc
inc
clc
mov
outsl
push
add
iret
mov
clc
xlat
scas
loopne
dec
test
add
push
add
xor
and
add
int3
xchg
ds
clc
icebp
jle
clc
push
add
movsl
clc
fstps
push
sbb
addr16
sar
clc
cmpsb
clc
in
xor
add
int
xabort
clc
push
stos
dec
cmp
add
clc
xor
add
jmp
mov
and
add
xlat
xchg
mov
or
test
pop
sar
xchg
in
inc
clc
mov
clc
or
clc
push
rol
clc
test
push
clc
cmp
pop
dec
jae
add
mov
mov
clc
mov
add
add
testl
add
mov
inc
clc
push
add
movhps
add
add
out
pop
clc
inc
add
and
add
clc
pop
jnp
add
mov
pop
js
push
cld
mov
xchg
cmpsl
clc
inc
add
outsl
cwtl
or
push
in
xbegin
pop
push
mov
test
arpl
add
add
add
out
add
add
bound
add
icebp
add
cmp
clc
mov
ret
clc
ljmp
rsqrtps
add
clc
jmp
lods
in
aam
xor
add
mov
mov
js
imul
sbb
jecxz
jns
xor
add
mov
clc
js
jae
add
add
mov
clc
mov
add
add
into
sar
push
add
push
add
mov
outsl
clc
xchg
in
cli
sar
or
xchg
xlat
jae
add
inc
add
sar
lcall
clc
es
pop
or
dec
fistpl
push
clc
mov
add
sar
inc
add
mov
add
add
add
clc
call
sbb
add
pushf
inc
add
shr
jp
add
mov
gs
inc
add
test
add
sbb
sar
jnp
xchg
adc
add
push
add
lods
repz
lret
scas
jp
shl
jnp
out
add
add
add
clc
insb
dec
push
fsubr
je
clc
jb
add
lahf
aas
in
ficompl
clc
cmp
clc
ljmp
gs
in
or
push
test
push
push
jnp
push
adc
add
add
fsubrp
xchg
xchg
mov
clc
adc
add
push
add
lret
xchg
loope
in
dec
imul
add
dec
dec
fs
imul
pop
clc
xchg
pop
xchg
dec
daa
clc
or
add
mov
in
movsl
clc
sti
gs
sbb
clc
sub
pusha
add
in
xchg
mov
cmp
push
add
test
add
cmp
clc
jb
add
in
gs
push
xchg
xbegin
fdivs
add
mov
clc
ljmp
out
mov
add
jge
push
sar
clc
bound
add
add
xor
add
sub
clc
cmpsb
clc
ljmp
add
add
xabort
add
in
pop
iret
out
hlt
test
sqrtps
add
js
clc
ret
lcall
clc
addr16
arpl
add
cmp
mov
add
ja
clc
mov
add
cmpsb
clc
movsl
clc
xor
add
add
add
push
add
in
mov
in
jae
add
push
insl
out
inc
add
jge
mov
cmp
clc
sarb
clc
popf
xlat
sbb
add
in
or
xchg
dec
fmuls
and
add
pop
add
add
repz
add
add
clc
xchg
icebp
adc
add
add
xabort
and
add
int3
or
push
xchg
int
insb
call
xchg
push
fiaddl
mov
add
xor
add
mov
in
lock
xlat
or
ljmp
fs
inc
clc
jno
add
add
jl
fildll
insl
or
jp
clc
test
clc
adc
add
notl
add
mov
jg
mov
add
jno
add
clc
aas
jmp
clc
mov
add
add
xchg
sar
cmc
icebp
push
clc
jl
clc
mov
pop
clc
lea
add
inc
clc
jp
jg
jne
lods
xor
add
xor
fucomip
push
pushf
ret
pop
mov
mov
lea
clc
nop
xchg
or
out
int
clc
icebp
pop
in
lock
int3
pop
scas
daa
clc
test
pop
push
add
daa
clc
pusha
add
mov
xlat
repnz
jecxz
xchg
popf
pop
cmp
add
pop
pop
out
mov
lods
mul
clc
xor
add
jbe
cmp
add
sub
movzwl
clc
cmp
jns
xchg
pushf
movlps
add
xchg
sbb
mov
clc
pop
int3
pop
clc
or
hlt
cld
inc
add
dec
fimull
in
nop
ja
mov
mov
jnp
fimuls
adc
clc
int3
negb
or
movsl
clc
mov
clc
inc
add
leave
data16
jnp
clc
fisubrl
faddp
clc
cmp
mov
loope
rorb
and
add
aam
clc
ja
clc
pop
scas
dec
loop
inc
clc
dec
or
clc
loopne
adc
add
xchg
cmp
push
mov
js
sbb
add
lahf
cmp
mov
add
inc
add
icebp
pop
xor
add
jo
add
lret
insl
imul
clc
cwtl
inc
add
cwtl
sbb
movsb
clc
xchg
mov
cli
mov
clc
mov
add
cmp
clc
adc
addr16
dec
leave
pushl
aam
clc
outsl
mov
xor
add
mulb
cmp
add
add
add
pop
ds
sar
pop
and
add
clc
shlb
add
out
sarl
clc
cmp
jmp
mov
ret
clc
cmp
adc
add
clc
popa
add
jno
add
icebp
in
or
inc
clc
das
xchg
test
movsb
clc
jns
cwtl
xbegin
sbb
out
adc
jle
clc
mov
imul
mov
clc
push
cmp
sub
and
add
rorb
sarl
repnz
inc
add
lods
inc
clc
fildl
sub
push
test
sub
cmp
mov
repnz
mov
jecxz
sbb
insb
fiaddl
add
xchg
push
push
mov
clc
xchg
inc
add
cwtl
ds
ret
clc
push
bound
add
clc
push
sbb
add
nop
testb
popa
add
mov
cmp
clc
fcomps
mov
fs
lret
add
cli
mov
cs
das
pushf
cltd
int3
or
xlat
es
movsl
clc
push
add
imul
int3
dec
popf
je
pop
push
add
mov
insb
shll
mov
rclb
add
add
add
add
int
add
mov
clc
out
push
add
sbb
clc
daa
clc
sbb
clc
pop
xchg
or
adc
add
scas
xlat
cmp
clc
mov
out
xchg
gs
xor
add
clc
dec
scas
xchg
int
inc
add
rcrl
pop
out
hlt
push
xchg
mov
cli
aad
clc
test
push
dec
js
test
mov
adc
jle
mov
add
sahf
or
stos
roll
fst
and
add
clc
scas
mov
jo
add
add
fistpll
clc
mov
or
add
mov
clc
insb
test
adc
clc
add
add
pop
push
clc
xor
add
enter
testl
add
mov
outsl
pop
scas
adc
add
lcall
dec
pop
loope
aaa
lods
aad
lods
in
jp
mov
clc
pop
add
add
clc
mov
jge
es
mov
add
daa
clc
popf
ljmp
mov
and
add
clc
add
add
push
inc
add
cmp
out
sar
pop
or
mov
add
ja
icebp
loop
dec
and
xor
aam
clc
dec
xor
add
clc
cmp
add
xchg
xor
add
add
inc
add
sbb
clc
push
fisttpll
clc
lods
loopne
push
jecxz
minps
push
out
mov
clc
xchg
negb
clc
jp
xor
add
in
jb
add
add
int
push
out
cmp
push
add
push
mov
dec
adc
std
into
mov
scas
clc
call
or
mov
dec
ja
push
mov
add
mov
fwait
mov
arpl
add
lcall
stos
jae
add
clc
enter
xchg
dec
lea
scas
jb
add
xchg
sbb
gs
mov
fxch
pop
fdivl
add
mov
std
sbb
xbegin
clc
mov
mov
sti
mov
clc
sub
sbb
inc
clc
jb
add
clc
pop
test
mov
dec
xabort
mov
pusha
add
scas
out
repnz
sbb
cmp
imull
push
add
test
clc
pop
sub
cltd
xor
add
xor
fsub
clc
pop
or
lods
test
add
add
add
push
xor
add
clc
mov
addr16
sub
sbb
add
std
fistpl
shlb
add
add
jo
add
mov
or
add
inc
add
mov
mov
add
data16
xchg
sub
clc
scas
or
add
aaa
jns
imul
loop
cmpsb
clc
cltd
inc
clc
xor
cmp
mov
add
insb
arpl
add
push
xchg
xor
add
aaa
int
nop
inc
add
inc
add
push
xbegin
cmp
xchg
or
add
sub
mov
add
pop
lret
add
enter
leave
cmp
add
sar
icebp
loopne
push
cs
clc
jg
clc
lcall
cmp
rorl
lea
add
pop
clc
and
add
faddl
and
pmulhw
fwait
and
add
imull
add
mov
add
jl
add
pop
jg
jmp
ja
clc
cmp
clc
pop
xor
add
das
pushf
mov
add
inc
clc
movsl
clc
stos
ds
dec
and
add
xchg
xchg
push
popa
add
loope
inc
clc
gs
cmp
flds
jbe
add
pop
je
movsl
clc
cmpsb
clc
lret
add
xor
add
clc
leave
push
add
je
test
in
pop
insl
pop
call
add
fwait
rclb
add
popf
roll
xchg
lods
push
or
imul
clc
adc
add
clc
add
mov
sbb
add
jg
jne
ja
sub
sub
lcall
pop
cmpsb
clc
cmp
data16
xabort
jecxz
arpl
add
int
add
sbb
mov
data16
sbb
sub
add
add
dec
pusha
add
jle
sub
add
add
ljmp
mov
add
adc
clc
pop
call
shl
clc
scas
jmp
clc
jns
cmp
inc
clc
mov
or
fwait
bnd
add
fisubrl
movsl
clc
xchg
cmp
push
add
jge
ret
clc
fldl
mov
clc
dec
cmp
mov
mov
ds
fcompl
clc
mov
and
add
mov
add
sbb
sub
pop
in
outsb
jg
clc
lcall
push
add
cmp
add
or
xlat
and
add
push
push
mov
clc
popa
add
int3
push
fdivrl
mov
scas
iret
jge
mov
add
cli
sarl
xor
add
sub
mov
clc
push
add
lock
fcmovne
xor
add
add
and
add
add
add
rolb
add
clc
ss
sub
sbb
clc
or
test
jmp
cli
out
out
jmp
insb
ds
push
lret
movsb
clc
mov
fnstcw
cli
inc
add
stos
mov
xchg
imull
jl
or
push
pop
shll
add
pop
xchg
and
add
add
iret
jg
sbb
jo
add
add
add
or
clc
std
mov
out
mov
adc
add
add
in
ja
xabort
bound
add
cmp
add
test
gs
add
add
cmp
inc
clc
adc
add
mov
and
add
add
shrl
bound
add
add
inc
clc
data16
movsb
clc
pop
in
pop
rcll
add
add
sub
add
aas
push
dec
sbb
mov
add
aad
clc
lock
clc
aad
clc
out
sbb
xabort
clc
pop
je
idivb
cmp
cmp
xor
add
push
stc
jge
add
push
add
pop
out
out
mov
clc
sub
sbb
lcall
add
fists
add
adc
add
add
add
add
xchg
dec
adc
and
pop
pop
jp
add
lods
adc
add
dec
into
cmpsb
clc
mov
clc
xor
add
std
ret
clc
mov
fcomip
std
clc
mov
shll
xchg
cmp
sub
xchg
and
xbegin
push
add
aad
repnz
mov
out
jl
clc
test
cwtl
fstps
dec
xchg
movsl
clc
lods
repz
add
loopne
testl
fwait
jg
pop
mov
clc
jne
xbegin
sub
lods
ja
lods
fsubl
add
cmc
arpl
add
clc
xchg
rcrb
add
clc
jg
clc
sar
mov
clc
mov
negb
incb
add
fwait
xor
add
out
xchg
es
xchg
sti
fsubrl
add
inc
add
lcall
dec
jge
or
clc
stos
fisttpll
add
clc
fwait
lret
sar
stos
xor
add
add
hlt
out
mov
clc
mov
add
pop
add
add
xor
add
ja
cmpsb
clc
xlat
cwtl
hlt
add
add
cld
adc
mov
repz
jle
insl
jmp
clc
dec
fsubrl
clc
outsl
inc
add
lock
cmp
add
stos
dec
sub
pop
in
or
std
add
add
out
add
add
pop
out
div
xchg
push
clc
dec
mov
push
add
mov
cs
clc
int
inc
add
je
add
sub
clc
ljmp
add
inc
add
xchg
mov
add
clc
lahf
std
fld
clc
lret
and
add
clc
fcoml
or
add
test
clc
sar
cmp
clc
push
add
mov
add
insl
icebp
cld
jl
das
shlb
jo
add
adc
add
ret
clc
fnstsw
pop
cmp
clc
push
aas
xchg
rolb
xchg
ljmp
es
lea
mov
dec
sub
add
add
add
xlat
aam
popa
add
cwtl
filds
js
and
xabort
sbb
add
pushf
inc
clc
mov
push
add
rcrl
dec
cmp
jg
clc
shll
cmp
clc
adc
add
loopne
add
add
add
clc
and
add
lea
add
pop
clc
cmp
clc
je
adc
scas
imul
sbb
clc
imul
clc
in
insl
stos
or
sub
std
aas
clc
scas
jne
add
cmp
jno
add
clc
push
clc
dec
shrl
es
out
sbb
mov
data16
repz
xchg
nopl
std
cs
dec
jmp
mov
fs
xchg
fadds
mov
inc
add
sbb
xchg
xchg
adc
add
clc
aam
add
cmp
lods
xchg
repnz
clc
faddl
clc
sti
dec
clc
in
or
add
cmp
adc
add
clc
fadds
add
and
aad
pop
int3
xor
add
clc
test
jne
xlat
outsl
xor
add
test
sbb
clc
xor
add
clc
data16
xabort
pusha
add
sub
add
stc
out
add
add
test
add
fisubrl
xchg
push
popf
xbegin
mov
cltd
in
sbb
clc
test
sub
outsl
aaa
sub
add
sahf
loop
shrl
dec
sub
inc
add
clc
in
mov
add
cmc
sub
test
sar
clc
lret
add
ljmp
jae
add
clc
popa
add
stc
mov
inc
add
outsb
ret
sti
adc
loope
xchg
cmpsl
clc
add
add
clc
mov
clc
mov
add
lret
cmp
mov
and
add
xor
add
clc
mov
push
add
mov
ret
clc
pop
and
add
sar
aas
jecxz
icebp
das
iret
lcall
dec
xabort
add
add
enter
clc
out
and
add
leave
in
adc
dec
ror
or
clc
mov
jle
inc
add
lea
xchg
pop
clc
mov
add
jb
add
lret
add
cmp
sub
sub
add
cmp
clc
pop
and
add
add
sub
clc
cmp
lret
mov
cltd
int3
pusha
add
cmp
add
add
pop
and
add
nop
stc
lcall
add
sub
test
fimuls
mov
xor
add
add
fildl
add
aas
jno
add
adc
add
add
sbb
mov
add
cli
sbb
add
mov
clc
ret
cmp
add
nop
insb
mov
push
hlt
mov
imul
clc
mov
push
add
and
add
mov
add
mov
jno
add
cmp
mov
add
sti
mov
sub
add
test
add
js
push
add
aad
pop
pop
sub
repnz
pop
dec
adc
add
adc
add
loopne
adc
add
dec
ret
xabort
mov
mov
xchg
jg
jbe
in
in
popf
push
pop
sar
loope
dec
or
clc
cmp
add
ret
add
fistl
xor
add
or
clc
stos
add
add
adc
add
add
push
mov
stos
mov
clc
jno
add
jnp
xor
clc
sar
imul
ja
add
add
xbegin
popa
add
repz
fildl
add
clc
rcl
sub
pushf
sar
sub
add
pusha
add
aas
out
and
add
add
pop
cmpsl
clc
add
add
push
adc
add
test
sahf
and
pushf
mov
cmpsl
clc
shlb
sub
mov
cmpsb
clc
inc
add
fwait
cltd
inc
add
lahf
add
add
clc
js
popf
cli
cmp
fldenv
ljmp
xchg
fdivrp
cmc
xchg
insb
lock
mov
and
scas
mov
clc
mov
clc
mov
add
xbegin
xchg
mov
lods
xchg
mov
cs
adc
add
clc
fmull
add
testb
loopne
jmp
clc
in
leave
bound
add
clc
clc
nop
or
add
add
dec
mov
sbb
mov
cmpsb
clc
push
movsb
clc
es
push
add
repnz
clc
xchg
add
cmp
sub
xor
add
movsl
clc
not
insb
roll
add
repnz
jge
jmp
mov
push
mov
clc
sahf
mov
add
add
repz
jmp
fstl
add
add
clc
pop
mov
lret
pop
add
clc
ret
clc
mov
and
add
sub
push
aam
pmaddubsw
jge
sti
fdivrs
lret
test
cs
test
clc
xchg
mov
out
cmp
add
push
sahf
lret
mov
clc
xor
add
insb
cmpsl
clc
pop
cmp
clc
jae
add
add
sar
iret
js
sbb
clc
dec
aas
ja
add
fnstcw
add
clc
jb
add
xchg
leave
dec
xchg
inc
add
imul
sbb
clc
inc
add
inc
clc
pop
push
test
lods
add
add
in
and
cmpsb
clc
gs
sahf
jbe
pop
xchg
arpl
add
add
mov
clc
xor
add
shrb
clc
movsl
clc
pop
xor
add
enter
pop
add
add
xchg
and
add
clc
jns
and
add
push
xchg
mov
xor
add
clc
sar
stos
out
iret
lret
imul
clc
fcoml
add
add
add
pop
pop
dec
dec
add
push
clc
fs
cmp
clc
push
ljmp
adc
add
add
add
out
stos
test
sbb
clc
inc
add
out
lea
faddl
popa
add
in
pop
sbb
shlb
ret
clc
dec
scas
xchg
outsb
pop
cwtl
mov
clc
mov
add
add
es
rcl
test
adc
add
pop
cmp
hlt
dec
popa
add
mov
add
ds
mov
in
ret
clc
push
pop
jnp
xchg
insb
adc
add
inc
add
xor
add
add
adc
add
add
and
ret
sub
add
movsb
clc
clc
in
dec
xchg
cwtl
je
scas
jbe
add
cmp
mov
lods
popa
add
add
cmp
pop
adc
add
lods
xchg
data16
mov
add
add
add
clc
out
vmovlps
add
clc
loop
mov
add
adc
add
add
adc
add
add
in
cmp
mulb
add
scas
aad
clc
jg
add
lock
add
clc
xchg
jns
inc
add
ret
clc
jbe
xor
loopne
mov
clc
dec
call
clc
aad
clc
jbe
add
test
clc
sti
mov
js
daa
clc
add
add
scas
sub
imul
jae
add
clc
xlat
out
xchg
sar
jl
into
pop
sbb
fistpll
add
dec
js
clc
cs
clc
ljmp
sub
sbb
rorl
insl
add
add
add
jp
mov
add
push
aaa
sub
mov
fistpl
test
popl
fdivr
mov
or
clc
aam
clc
into
ljmp
add
push
add
sbb
mov
add
add
sbb
filds
add
outsl
lods
mov
add
clc
sar
clc
negl
dec
xabort
lcall
popl
adc
add
or
push
add
out
pop
push
cltd
push
add
dec
cmp
mov
add
add
add
mov
jg
jns
add
add
mov
dec
test
arpl
add
sbb
clc
push
mov
add
lock
ss
pushl
add
jle
mov
xbegin
add
jae
add
fdivs
scas
lcall
and
add
add
push
cltd
stos
cld
pop
cmp
stos
mov
jmp
pop
adc
add
pop
stos
mov
daa
clc
jnp
push
add
cltd
sbb
add
enter
lret
loope
in
bound
add
clc
inc
clc
cmp
mov
inc
clc
xor
add
sub
cmpsl
clc
ret
clc
lea
inc
add
inc
add
jb
add
outsl
adc
add
add
js
sarl
add
lcall
jmp
add
fs
cmp
add
clc
cmp
push
addr16
mov
sar
in
sarl
dec
adc
add
add
mov
mov
clc
cltd
enter
scas
filds
imul
popa
add
cmp
add
add
add
cmpsb
clc
jmp
clc
test
sub
clc
cmp
clc
clc
dec
fistl
test
clc
mov
add
add
xchg
or
mov
add
sub
add
add
add
rclb
add
add
ret
aam
push
sbb
xlat
pop
incb
in
push
clc
cmp
in
int
mov
clc
dec
inc
clc
stos
cmp
cmpsl
clc
out
mov
in
pop
mov
and
add
mov
sarl
lahf
sar
add
mov
clc
iret
cld
shll
and
out
sbb
clc
mov
mov
fcoml
clc
add
add
cmp
cmp
add
lods
data16
cli
out
xchg
fidivrl
pop
sbb
stos
ficomps
add
mov
cmp
mov
cld
dec
xchg
push
lock
ret
add
adc
add
clc
inc
add
xor
add
cmpsl
clc
add
repnz
add
clc
test
inc
add
ss
leave
mov
push
and
add
xchg
insb
mov
pop
shll
aas
je
clc
cmp
clc
jo
add
fisttpll
fidivs
sbb
add
xlat
iret
adc
add
add
lret
loope
add
add
out
iret
mov
sub
icebp
fiadds
clc
xchg
insl
mov
outsl
test
lret
clc
mov
clc
jl
aam
in
arpl
add
sub
out
loopne
mov
clc
push
or
std
lret
data16
scas
xchg
popa
add
adc
add
add
repz
fldcw
cltd
shrb
jns
add
fnsave
fiadds
clc
pop
sub
stc
sbb
scas
pushf
sub
leave
fidivs
add
rcrl
cmp
ret
add
lods
lods
cli
push
repz
clc
lret
cmpsb
clc
mov
add
mov
add
adc
add
test
jl
mov
clc
pop
fidivrs
lahf
mov
pop
or
clc
mov
in
insl
add
push
clc
es
inc
add
and
add
test
cmp
cs
setg
idivl
dec
inc
clc
pop
cld
dec
inc
clc
push
add
push
clc
jmp
add
lcall
pushf
popf
test
lcall
clc
pop
jg
clc
cwtl
adc
add
mov
clc
pusha
add
sbb
sar
pop
mov
add
sub
test
sar
cld
loopne
lods
add
add
add
push
mov
loopne
jb
add
clc
mov
in
push
clc
mov
add
add
in
cmp
add
xchg
xchg
adc
clc
out
pop
sbb
test
clc
fldt
inc
clc
xor
add
clc
inc
add
mov
cli
scas
pop
sub
clc
imul
gs
or
jo
add
inc
clc
mov
clc
das
push
add
add
fsubrs
sbb
data16
xchg
lock
clc
xor
add
jge
add
sar
jg
test
add
jle
sub
enter
xchg
cmp
popf
sbb
push
add
data16
outsl
pop
std
incb
adc
add
or
xchg
and
add
mov
lcall
xchg
and
jl
add
lret
in
mov
sub
insl
jg
add
and
add
add
dec
scas
imul
xchg
cmp
clc
add
add
add
jle
ds
lret
imul
sar
leave
cmp
clc
jbe
lret
add
add
clc
mov
jg
push
sar
xor
mov
mov
add
sar
sbb
aaa
adc
add
fldt
and
call
add
clc
or
add
clc
js
clc
test
jmp
pop
mov
mov
inc
add
and
loopne
movsl
clc
push
jne
or
cmp
mov
add
clc
xor
add
adc
ds
or
pop
outsb
or
das
inc
clc
xchg
js
mov
inc
clc
inc
clc
fs
mov
clc
stc
push
push
aas
and
add
xchg
push
clc
mov
fdivrl
clc
push
cli
sbb
int3
xchg
imul
clc
jge
mov
clc
pop
mov
fsubp
clc
cmp
mov
clc
sub
sarl
xabort
cli
jmp
sbb
xor
clc
and
clc
jp
test
jg
daa
clc
inc
clc
std
cs
stos
and
add
sar
add
sahf
mov
inc
add
stos
xchg
pop
cltd
out
push
cmpsb
clc
xchg
sar
enter
add
mov
icebp
mov
out
aam
sbb
add
fistl
inc
clc
jl
popf
mov
inc
clc
cltd
sar
add
sub
mov
clc
icebp
imul
and
add
mov
rcrb
mov
sbb
add
pop
in
fwait
cmp
into
pusha
add
cmp
out
xabort
std
push
clc
data16
xor
add
adc
add
add
jl
arpl
add
push
clc
mov
dec
addr16
dec
xchg
mov
pop
pop
cltd
mov
clc
lods
in
dec
jp
cwtl
or
clc
inc
add
xchg
and
imul
add
add
mov
in
clc
in
neg
sarb
ret
clc
test
jecxz
movsl
clc
xabort
add
adc
add
cwtl
and
insl
pop
js
push
xor
add
push
loopne
mov
or
cmp
add
adc
sub
sub
xor
sar
push
dec
ds
rorb
add
or
add
add
add
clc
movsb
clc
mov
addr16
lret
or
add
fisttps
clc
jge
xor
clc
jns
or
rcll
inc
clc
cmp
mov
sar
add
jbe
sub
insl
arpl
add
xor
add
cltd
xchg
pop
fmuls
dec
cmp
mov
clc
inc
clc
into
xchg
int
and
adc
test
add
lods
and
add
add
xbegin
test
fisubrl
into
arpl
add
jnp
loop
push
cmp
add
push
int
pop
jne
std
cmp
add
lock
xor
add
clc
inc
add
in
sub
stc
adc
add
mov
in
inc
add
dec
add
adc
clc
push
or
clc
lret
xchg
call
insl
dec
xor
and
add
clc
mov
xchg
push
fdivrl
push
in
out
imul
ds
pop
or
clc
adc
add
icebp
adc
add
sbb
ds
addr16
adc
add
add
cmp
clc
pop
clc
rolb
add
sub
cmp
das
test
mov
adc
clc
push
add
repnz
test
mov
clc
scas
fs
hlt
push
add
add
clc
lahf
icebp
xchg
das
jp
inc
clc
and
add
sbb
add
std
leave
jb
add
add
out
inc
add
in
mov
enter
sahf
push
clc
push
cmp
fidivrl
clc
test
and
add
add
ret
clc
test
movsl
clc
push
mov
test
adc
add
cld
test
xlat
out
int3
pop
pop
cmc
out
roll
add
clc
xchg
adc
add
xor
add
push
add
icebp
or
add
xor
add
clc
cmp
mov
clc
outsl
xlat
aaa
sbb
adc
or
or
mov
cmp
lea
test
add
push
add
mov
jg
push
cmp
scas
adc
clc
cli
xchg
cwtl
jae
add
add
jno
add
clc
push
add
pop
nop
fcoml
clc
cmpsl
clc
sarl
inc
add
mov
sub
or
push
ror
mov
add
fs
imul
add
push
dec
fildll
pushf
mov
or
add
and
add
clc
adc
add
ret
clc
dec
mov
xchg
das
xor
add
cmp
add
pop
clc
aaa
dec
es
inc
clc
and
imul
adc
add
cmp
jmp
cmp
add
mov
cmp
cmpsl
clc
and
add
lock
add
cmpsb
clc
xor
or
mov
cmp
clc
lea
enter
add
add
xor
add
add
repz
insl
cmp
clc
jo
add
add
sub
inc
clc
xchg
hlt
pop
icebp
push
inc
add
jo
add
add
and
add
in
repz
fiadds
jecxz
pop
add
add
clc
pop
clc
push
jle
sbb
add
in
scas
enter
clc
sbb
clc
outsl
mov
clc
pushf
adc
add
cmp
clc
pop
jmp
clc
inc
add
mov
add
clc
popf
lea
negb
test
and
pop
clc
lods
add
cmp
sbb
clc
pusha
add
or
adc
add
cmp
add
outsb
xabort
shl
fs
push
jns
add
adc
add
clc
pop
xor
add
clc
mov
dec
fs
inc
clc
pop
or
clc
adc
scas
movsl
clc
insb
and
add
add
leave
push
add
sti
neg
movsl
clc
push
add
or
add
ret
clc
and
add
clc
jnp
jl
mov
clc
xchg
mov
add
stos
push
add
cmp
dec
ficoml
mov
adc
or
arpl
add
add
pop
sub
lahf
sbb
add
idivl
sar
imul
clc
aad
clc
or
js
loop
mov
cmp
and
add
clc
mov
call
add
push
pop
and
add
sbb
dec
clc
lods
insl
out
lcall
shll
xchg
mov
lcall
add
testb
clc
sar
jnp
clc
loop
fidivs
clc
mov
or
clc
or
in
push
mov
clc
add
add
and
add
fsubrl
mov
mov
leave
clc
outsl
mov
fcoml
xbegin
aam
lret
fildl
xchg
mov
add
icebp
in
xor
add
sub
push
add
in
xor
add
jle
inc
add
lret
clc
icebp
into
lods
xor
add
dec
scas
out
sub
sub
clc
pop
call
inc
add
jecxz
dec
pop
dec
dec
sar
lret
pop
clc
jbe
sub
cmpsb
clc
xabort
push
add
mov
add
icebp
gs
lret
and
add
aas
jbe
clc
test
dec
pop
dec
xchg
lods
imul
mov
add
jge
mov
add
mov
cmp
add
add
dec
cltd
xchg
repz
mov
clc
sar
clc
hlt
jnp
add
sub
add
push
into
inc
clc
sbb
add
addr16
cmc
insl
scas
sbb
clc
mov
je
jecxz
cmp
outsl
sub
clc
mov
mov
push
mov
clc
aam
clc
jb
add
daa
clc
sti
adc
add
dec
out
and
add
add
xchg
bound
add
sub
mov
add
mov
add
bswap
test
mov
cmp
cli
sbb
add
test
mov
lcall
add
mov
jne
add
mov
fs
ljmp
xchg
dec
call
dec
mov
add
xsave
add
cltd
div
imul
clc
lods
push
add
add
repnz
add
sbb
clc
xbegin
cmp
clc
popf
jmp
fwait
aaa
jge
xor
sbb
sbb
sbb
fdivl
add
add
add
mov
mov
add
or
clc
pop
push
pop
mov
add
jo
add
add
clc
cmp
sub
bound
add
clc
pusha
add
packuswb
fsts
clc
lret
add
fsubrp
icebp
pop
sub
xor
add
out
push
add
das
int3
ja
cmpsb
clc
mov
xchg
jl
clc
mov
add
pop
sbb
jl
mov
mov
clc
sub
mov
dec
xor
add
add
add
and
xor
add
add
pop
outsb
pop
outsb
rep
outsb
dec
add
add
clc
adc
ret
add
sbb
add
data16
lods
pushf
jge
fwait
adc
add
add
add
add
out
es
mov
clc
xor
add
dec
or
add
lods
push
cmpsl
clc
out
pop
add
add
pop
lea
movsl
clc
push
add
or
sahf
cld
stos
aam
clc
gs
or
add
pop
lods
ja
jo
add
add
in
add
sbb
clc
adc
xchg
call
add
push
lock
push
fimuls
ja
xor
add
shll
clc
fisubs
clc
cmp
cmp
clc
inc
add
add
add
clc
sbb
sub
clc
push
jle
mov
sbb
sbb
idivb
ljmp
mov
sbb
std
loope
sub
clc
mov
or
sbb
add
lods
test
xabort
clc
mov
mov
lods
in
sbb
pop
stos
xor
add
pop
clc
in
lcall
inc
add
xchg
repz
xor
add
inc
clc
test
jmp
and
add
add
loopne
xchg
pop
lcall
add
clc
enter
into
jecxz
pop
enter
clc
dec
sbb
lods
add
add
xchg
mov
add
cld
popf
or
push
ljmp
or
clc
rcl
hlt
and
add
add
xchg
dec
leave
insl
push
lahf
xchg
mov
mov
sbb
js
pop
pop
mov
add
pop
push
xor
add
add
lea
add
icebp
mov
add
add
pop
adc
clc
or
and
rcr
mov
mov
lods
loope
push
lods
cmpsl
clc
sar
sar
clc
std
jno
add
insb
out
cmp
das
mov
clc
imul
mov
xchg
loop
fmull
outsl
out
cmp
fnstcw
add
aaa
add
popa
add
and
add
add
clc
cmpsb
clc
mov
cwtl
and
add
push
adc
add
cmp
sub
clc
and
add
mov
bound
add
outsl
jmp
jmp
sar
stos
mov
outsl
jg
pop
stc
add
mov
clc
push
mov
add
dec
icebp
pop
cmc
mov
into
sub
sub
clc
cmp
pusha
add
shll
gs
push
in
out
dec
jmp
test
sub
add
xbegin
cli
lock
add
cmp
add
add
lods
sub
and
add
xchg
mov
outsl
jo
add
push
enter
lret
inc
clc
test
gs
dec
sti
or
cmp
arpl
add
lcall
clc
jle
data16
cmc
test
add
add
add
sbb
clc
xchg
and
add
data16
in
mov
sub
adc
add
es
xchg
or
adc
mov
mov
adc
add
daa
clc
mov
cwtl
pop
mov
mov
mov
sub
mov
add
cmp
aam
pop
push
sub
stos
lret
push
mov
jb
add
js
lods
cmp
dec
or
bound
add
clc
pop
inc
clc
test
add
add
clc
sbb
add
add
add
in
int
ret
clc
push
int
clc
stc
pop
pop
clc
sub
add
out
repz
clc
dec
pop
clc
xchg
rclb
add
clc
mov
clc
mov
cli
or
clc
jnp
add
inc
add
cmp
sub
stos
negb
cmp
test
mov
stos
adc
insb
pop
pop
in
mulb
bound
add
xchg
xor
add
clc
add
add
cmp
cmp
or
mov
clc
mov
add
or
sbb
mov
add
xchg
outsl
jne
clc
dec
or
push
mov
lahf
cmp
clc
sbb
out
loope
out
fwait
push
add
cmp
daa
clc
loop
loope
pop
jl
adc
das
lea
add
ret
clc
xlat
pop
inc
clc
inc
add
mov
cmpsb
clc
xchg
movsb
clc
fidivrs
xor
add
pusha
add
mov
inc
clc
and
add
push
add
leave
scas
mov
pop
pop
loope
popf
mov
add
mov
sbb
mov
add
xchg
sbb
add
clc
jg
cmp
xchg
inc
add
mov
outsl
mov
mov
into
or
add
xlat
scas
adc
add
mov
xor
lea
mov
sub
mov
aaa
jae
add
add
cmp
clc
pop
jb
add
hlt
aas
sbb
push
arpl
add
add
add
popa
add
call
fildl
add
add
clc
sbb
pop
jl
fidivl
add
clc
daa
clc
jmp
xchg
or
sub
cmp
gs
adc
add
jae
add
add
bound
add
push
lock
sbb
pop
out
outsb
test
clc
cld
mov
add
call
lret
out
xor
add
nop
and
add
lock
bound
add
xchg
pop
repnz
bound
add
dec
mov
and
add
inc
clc
lcall
add
clc
jnp
in
xchg
mov
add
mov
cmp
push
add
jge
clc
xabort
clc
push
clc
in
data16
fs
ljmp
clc
cmpsb
clc
adc
add
add
cmp
pop
mov
repz
jbe
clc
jge
clc
pop
mov
add
xchg
cs
clc
xabort
arpl
add
clc
lods
mov
clc
mov
loop
lods
cmpsl
clc
mov
inc
clc
push
pop
clc
jns
mov
stos
rol
clc
cmp
mov
jle
out
sub
insl
insl
mov
add
out
pop
inc
add
xchg
out
pushf
mov
clc
push
mov
add
push
mov
aas
pop
jbe
or
add
xor
clc
nop
mov
pop
movsl
clc
or
add
clc
add
xor
add
mov
in
sar
into
mov
call
clc
adc
add
and
add
add
cmp
clc
daa
clc
icebp
xchg
lods
or
add
dec
iret
pop
mov
add
clc
pop
lea
jmp
lahf
addr16
cmpsl
clc
loopne
inc
add
push
sbb
add
je
sub
clc
or
xor
repnz
ret
loopne
jno
add
clc
cmp
pusha
add
xor
add
clc
fs
add
in
jl
clc
pop
mov
dec
xor
add
cmp
clc
dec
push
adc
add
je
mov
aas
xor
add
add
cli
sub
add
pop
cmp
imul
mov
fsts
add
mov
add
add
add
sbb
clc
inc
add
xchg
sub
popf
cltd
or
cmp
add
cmpsl
clc
inc
clc
fld
clc
int3
dec
inc
add
pop
inc
clc
xor
add
add
mov
push
aam
add
mov
add
sub
pop
clc
add
add
es
int
clc
dec
sbb
pop
lods
sar
xor
add
and
add
test
clc
mov
out
ss
inc
clc
sar
mov
add
not
leave
push
mov
fsub
clc
xchg
push
cmp
clc
or
add
mov
adc
add
clc
cmpsl
clc
adc
add
xor
add
jle
frstor
add
pop
xchg
ret
clc
std
ss
push
clc
notb
add
mov
jle
or
ds
sub
clc
xor
add
xchg
mov
testb
add
mov
adc
add
dec
dec
jne
inc
clc
push
cmp
dec
in
sar
and
outsl
test
inc
clc
mov
clc
int3
stos
bound
add
popa
add
add
add
sub
clc
inc
add
or
sub
xor
add
add
sti
inc
add
add
add
add
aad
decl
int3
sub
mov
push
in
ss
mov
test
in
lods
arpl
add
add
adc
add
sbb
clc
fildl
add
adc
add
clc
fiaddl
add
and
add
add
xor
add
rcrl
cmp
movsl
clc
jo
add
mov
imull
xbegin
mov
clc
push
mov
add
add
enter
clc
xlat
push
push
mov
icebp
sub
mov
es
lret
repz
clc
enter
in
mov
in
ret
dec
mov
cmp
addr16
mov
add
jg
mov
popf
sahf
mov
jg
and
add
ret
and
xor
add
icebp
psubb
imulb
add
mov
add
add
xor
xor
add
cmpsl
clc
jne
dec
sub
pop
clc
ret
dec
sbb
clc
and
sbb
repnz
fstl
add
xlat
dec
cmp
cmp
clc
and
add
mov
lahf
push
add
movsb
clc
fildl
add
out
adc
clc
adc
xbegin
popa
add
xor
add
clc
jbe
fs
adc
add
clc
test
or
clc
cmc
test
in
and
clc
xchg
xbegin
mov
mov
cmp
add
jae
add
clc
push
add
std
add
add
xchg
mov
aad
mov
clc
adc
add
jmp
je
fdivr
lods
ret
clc
cmp
mov
clc
sbb
clc
mov
test
sub
add
fisubrs
inc
clc
nop
test
dec
es
push
mov
ficompl
clc
jae
add
movsb
clc
fs
jbe
in
dec
inc
clc
dec
mov
add
out
mov
jp
jmp
fcomps
add
repz
inc
clc
sub
add
dec
sub
xchg
shrl
fidivs
add
add
outsb
cmp
add
dec
xchg
mov
mov
fsubrl
std
dec
mov
dec
and
sub
arpl
add
clc
fistpl
clc
out
sub
xor
add
add
out
es
aaa
sar
dec
sbb
movsb
clc
cmp
dec
and
add
jne
add
cld
outsl
scas
pop
cmpsl
clc
insb
fnstsw
clc
ja
or
dec
mov
push
sahf
cld
loopne
xchg
fdivl
add
add
add
clc
into
lock
data16
mov
pop
clc
xchg
push
clc
xchg
mov
mov
fcoms
adc
add
add
add
cltd
arpl
add
test
add
fistps
clc
inc
add
jle
add
iret
pop
jle
lahf
jp
clc
mov
fcompl
add
clc
cs
scas
cltd
push
add
add
jo
add
jl
cmp
hlt
mov
out
std
jge
push
add
or
clc
fsubrs
clc
pusha
add
and
add
aad
xor
lea
cmc
mov
dec
xor
add
add
jmp
inc
clc
sti
pushf
movsb
clc
imul
lahf
xchg
aad
clc
cmp
add
add
add
add
and
mov
bound
add
adc
add
cmp
xlat
pop
push
int
xchg
popf
or
gs
mov
dec
push
jle
xabort
lret
sti
dec
cmp
cmp
jmp
pop
dec
ss
xchg
dec
cmp
addr16
mov
clc
mov
nop
or
sbb
mov
sub
clc
and
add
or
mov
mov
clc
and
jnp
fs
jp
bound
add
out
xchg
xchg
cmp
jmp
add
lcall
or
testl
clc
push
jb
add
repnz
clc
pop
repz
insl
mov
add
mov
fldt
mov
test
pop
add
add
das
pop
mov
mov
or
add
push
add
mov
add
loope
jbe
popf
dec
mov
push
imul
add
scas
mov
inc
clc
pop
mov
icebp
cmp
clc
in
fcomp
cmp
clc
lcall
inc
clc
outsb
cmpsb
clc
mov
clc
push
xchg
inc
clc
out
jne
decl
add
adc
add
adc
add
add
xor
add
xchg
clc
push
cmc
iret
jle
leave
lods
pop
mov
clc
or
movsl
clc
jns
clc
xbegin
mov
sub
add
xor
rcrl
inc
clc
pusha
add
mov
in
repnz
insl
mov
add
inc
clc
lahf
js
cmp
jp
add
xor
add
clc
jb
add
ret
clc
mov
add
cmp
cltd
cltd
jne
add
cmp
add
xlat
movsl
clc
ds
sbb
add
add
add
jo
add
mov
pop
in
rol
clc
cmpsl
clc
cwtl
mov
mov
fcomp
jnp
and
add
scas
dec
jg
sbb
clc
bound
add
cmp
popa
add
ret
clc
lods
dec
xchg
pop
push
or
pop
sub
clc
fsubl
add
add
add
add
inc
clc
push
add
mov
dec
pop
into
in
jbe
add
add
fwait
sar
clc
in
js
add
and
add
add
enter
inc
add
or
mov
cltd
leave
aaa
and
add
cmp
add
inc
clc
sub
into
dec
dec
es
cmpsb
clc
cld
and
fstps
xor
add
cmp
in
leave
xchg
sub
clc
mov
clc
push
add
jne
add
filds
adc
mov
clc
push
xor
add
mov
bound
add
fists
add
dec
mov
add
jge
add
add
mov
clc
push
out
inc
add
cmp
mov
add
push
add
mov
imul
clc
mov
mov
clc
jbe
dec
push
shll
popa
add
mov
dec
cli
scas
outsb
xor
add
add
mov
movsb
clc
xabort
fists
jecxz
jecxz
mov
fdivrs
fidivrl
add
clc
fs
pop
sbb
loope
mov
movsl
clc
data16
into
ja
out
add
add
clc
lcall
xor
cmc
addr16
decb
jno
add
int
jno,pt
add
clc
arpl
add
xchg
add
add
clc
int
ret
clc
inc
clc
jne
inc
add
mov
sbb
lcall
iret
mov
clc
cmc
dec
or
inc
clc
mov
out
sar
movsl
clc
jb
add
add
add
mov
add
add
or
add
xchg
and
add
negl
sbb
data16
mov
js
clc
pop
sar
mov
add
mov
sbb
addr16
sub
add
sbb
clc
adc
mov
aam
lret
clc
cmp
jp
inc
add
leave
cmp
sar
add
cmp
addr16
xor
add
add
cli
xor
add
mov
std
mov
sbb
out
mov
mov
clc
jmp
clc
pop
out
xchg
jnp
clc
dec
push
scas
shr
xbegin
add
sub
lret
je
clc
or
add
and
add
mov
add
fimull
or
add
add
clc
pusha
add
out
push
add
mov
cmpsb
clc
xor
add
adc
add
pop
adc
add
mov
rcrb
clc
push
lods
pop
jae
add
jle
clc
mov
and
int3
pusha
add
adc
add
clc
mov
add
sbb
add
clc
add
add
adc
add
sub
add
clc
push
faddl
call
mov
es
jbe
clc
in
lea
insl
rcl
out
insl
xchg
gs
aad
add
dec
data16
out
mov
leave
dec
pushf
sbb
bound
add
clc
push
add
cli
enter
add
add
or
clc
sbb
incb
addr16
mov
sub
pop
add
add
lea
pop
clc
movsl
clc
cli
loope
cmp
clc
xchg
ja
clc
sar
add
adc
clc
jbe
clc
push
add
inc
clc
mov
clc
sbb
add
clc
dec
inc
clc
mov
add
mov
fbstp
add
pop
cmp
clc
xor
add
add
loopne
or
inc
add
cmp
and
jne
or
xlat
daa
clc
mov
jp
adc
clc
daa
clc
adc
nop
or
lahf
js
add
es
dec
ja
mov
add
loope
push
ljmp
sub
add
add
add
ds
sbb
mov
xabort
cltd
jl
add
stos
popf
adc
add
cmp
pop
sub
add
pop
dec
mov
and
ffreep
clc
and
add
add
in
mov
test
in
cltd
mov
repz
lods
out
out
out
jmp
es
xchg
jbe
jp
dec
es
pop
fmull
clc
push
xor
add
adc
add
add
lock
fwait
and
clc
mov
movsl
clc
repz
clc
cmp
repnz
faddp
clc
loop
adc
sub
jle
or
add
mov
mov
jno
add
aam
aaa
xchg
jl
push
pop
adc
add
nop
sub
xor
add
clc
jmp
add
jg
and
mov
add
sub
add
add
pop
test
pop
fisttpll
pusha
add
lcall
pop
jbe
stos
adc
clc
xchg
imull
clc
clc
fsubr
adc
add
add
daa
clc
mov
sbb
clc
nop
adc
add
clc
ret
push
insb
ss
sub
pop
rcrl
sub
mov
out
lock
clc
pop
fsts
add
push
clc
inc
clc
mov
push
xchg
sbb
xor
xor
leave
xor
add
or
add
lcall
add
stos
cs
dec
nop
jl
or
into
iret
sbb
push
add
scas
add
add
cmp
mov
lea
loope
adc
add
cmp
clc
es
sbb
inc
add
mov
movsb
clc
shrb
icebp
jns
imul
add
add
clc
ja
xchg
jns
pusha
add
stos
sar
clc
dec
addr16
sub
add
adc
add
outsb
lods
int
push
add
cmpsl
clc
clc
sahf
xbegin
sar
test
imul
aad
add
aas
call
sub
mov
add
cmpsl
clc
cmp
add
iret
ss
stos
shrl
add
clc
rcl
xbegin
jp
add
cmp
xchg
sbb
scas
or
test
mov
mov
lods
enter
push
add
jp
fimuls
cwtl
cmp
cmp
add
js
dec
cmp
clc
pop
clc
icebp
addr16
mov
mov
into
pushf
inc
add
pop
sar
add
test
and
clc
scas
mov
clc
xor
add
mov
clc
arpl
add
add
cmp
lret
cmc
mov
loop
dec
sub
loop
inc
add
lahf
pop
es
xor
add
lcall
xor
jle
stos
cmp
clc
lock
inc
add
stc
imul
add
clc
dec
cltd
xor
jne
repnz
xor
add
out
sar
add
sahf
push
add
jecxz
and
jno
add
loope
hlt
enter
cmc
lret
pushf
fcom
mov
lcall
add
add
popf
adc
add
clc
clc
out
repz
add
push
add
xchg
and
add
rep
or
mov
test
sti
xchg
mov
push
das
lcall
cmpsb
clc
cmp
adc
add
and
add
add
data16
or
mov
push
cmpsl
clc
pop
vmovaps
add
sub
ss
and
add
inc
add
fwait
pop
cld
pop
push
dec
sti
mull
add
add
cwtl
add
inc
add
sbb
mov
add
add
jmp
add
gs
sub
dec
xchg
lea
outsb
mov
add
cmpsb
clc
adc
add
xchg
xbegin
aaa
mov
clc
movsb
clc
xor
add
add
inc
add
cmp
xor
aas
or
clc
xchg
testb
ror
xchg
in
cmp
pop
sub
cmp
cmp
je
add
lods
mov
inc
add
cmpsl
clc
push
push
xbegin
xabort
lods
xchg
dec
cmc
mov
mov
sahf
inc
clc
mov
push
jmp
clc
add
add
or
in
xor
sub
add
mov
test
mov
xchg
mov
cs
imul
add
add
jp
clc
jne
jg
inc
clc
jecxz
leave
in
jne
clc
cs
mov
sbb
outsl
insb
mov
in
xchg
mov
clc
ss
clc
xor
add
vorps
add
jne
sar
clc
and
add
add
mov
in
nop
icebp
or
clc
inc
add
sbb
ret
clc
cli
pop
clc
insb
pop
cwtl
stos
push
sar
add
aaa
out
aas
sbb
xchg
sub
add
inc
clc
xchg
jecxz
add
add
clc
mov
xchg
push
add
ret
ljmp
cs
data16
repz
add
clc
repnz
dec
sbb
clc
test
clc
lret
fmull
or
clc
cld
mov
lods
jbe
cmp
clc
mov
ret
clc
push
shll
clc
lock
clc
repz
iret
jae
add
sbb
cmp
jb
add
xor
add
add
cmp
add
mov
fsubrl
lahf
xor
add
scas
cmpsl
clc
pop
bound
add
clc
inc
add
sar
ds
add
sar
rorl
inc
add
aad
add
or
pop
insl
in
fstps
in
xor
mov
cmp
clc
mov
add
mov
clc
es
xchg
repz
jecxz
ffreep
clc
jmp
add
jle
clc
mov
sar
sub
repz
mov
aaa
lods
sahf
fcmovbe
push
daa
clc
sahf
and
add
add
clc
add
add
mov
clc
cmp
add
rolb
add
xor
add
clc
or
clc
sar
push
clc
nop
in
jmp
clc
cmp
js
cmp
mov
and
add
cmp
add
add
push
clc
jle
outsb
xchg
mov
pop
mov
mov
inc
clc
outsl
into
fnstenv
incl
add
add
clc
jne
jle
add
sub
pop
sub
fmul
movsb
clc
cmpsb
clc
inc
add
pop
cmp
clc
ljmp
push
arpl
add
clc
iret
ja
jo
add
clc
call
add
scas
in
inc
clc
and
je
clc
xor
add
out
lret
out
mov
daa
clc
jecxz
bound
add
stos
cmpsl
clc
cmp
test
and
add
test
popf
pop
idivl
scas
add
test
jne
rolb
add
jle
rcrl
add
and
add
add
icebp
daa
clc
xchg
repz
clc
fimuls
iret
adc
add
sub
clc
mov
test
es
iret
sub
add
cmp
jge
jmp
jb
add
adc
in
sbb
sbb
clc
push
popf
sbb
add
mov
add
sub
add
xor
add
sahf
popa
add
data16
push
add
adc
mov
jp
imul
cmp
add
rcll
clc
mov
mov
mov
loope
sub
add
js
add
mov
add
lods
sbb
imul
jnp
arpl
add
jo
add
icebp
pop
adc
add
add
mov
push
add
fisttps
aaa
cmpsb
clc
call
mov
and
add
clc
stos
or
in
xor
dec
xchg
in
xchg
insb
out
push
lea
mov
ja
add
sar
cld
sub
clc
fimuls
clc
mov
adc
add
cmp
or
push
add
dec
xchg
jp
sahf
adc
add
add
test
add
add
cmp
clc
divb
add
adc
add
clc
sbb
clc
cmpsb
clc
insl
daa
clc
or
sub
shll
add
clc
test
add
movsl
clc
mov
add
lcall
jnp
test
sub
jbe
lea
shl
clc
inc
clc
jecxz
xchg
push
add
ret
clc
insb
xchg
cmp
and
add
or
adc
fldenv
add
push
dec
cmp
pop
es
aas
push
popl
clc
mov
jecxz
jns
in
and
add
cmp
clc
inc
clc
jmp
sbb
cmp
clc
mov
add
outsl
shl
clc
mov
clc
stc
add
add
add
dec
sub
jb
add
sbb
add
add
pop
lret
arpl
add
aas
stos
scas
jns
pushl
add
xor
add
add
fisubl
clc
sbb
push
clc
jnp
out
mov
nop
sbb
data16
loope
or
add
add
int
clc
mov
in
pop
and
aam
jae
add
hlt
aam
fisttpll
ret
aas
xor
add
add
sbb
jae
add
add
jmp
ljmp
shll
sar
xor
add
add
xbegin
and
inc
clc
push
add
push
and
call
pushf
cli
pop
scas
lea
add
loop
aad
add
cmp
push
add
insb
popa
add
dec
cmc
in
fisubs
xchg
cmp
pop
stos
lock
clc
mov
clc
pop
cmp
inc
add
pop
imul
into
xor
add
clc
pop
adc
clc
sub
div
mov
aad
out
out
xlat
mov
lock
scas
je
clc
sbb
clc
jne
int3
pop
arpl
add
clc
loope
xabort
xor
add
clc
ljmp
mov
add
int3
sbb
mov
loope
sbb
mov
clc
cld
mov
lcall
cmp
add
push
mov
mov
int3
mov
clc
cmp
push
add
adc
add
mov
clc
lahf
inc
clc
sub
ljmp
cld
add
add
mov
clc
enter
mov
test
push
dec
inc
add
ss
sahf
cmpsl
clc
push
sahf
lret
adc
add
pushf
aaa
out
mov
or
pop
sbb
adc
add
pop
hlt
add
mov
incb
add
mov
sarb
push
inc
clc
mov
out
mov
mov
add
scas
or
ret
clc
cs
jne
sti
jge
clc
pop
xor
repnz
jns
lret
or
add
xchg
xchg
outsb
cmc
pop
clc
mov
jmp
clc
and
jns
xchg
repz
add
jg
push
sub
das
inc
clc
pushl
fsub
clc
mov
add
cld
mov
jnp
add
mov
lods
mov
int
dec
aas
pop
hlt
hlt
jge,pt
movsl
clc
dec
mov
movsb
clc
adc
add
clc
mov
add
push
adc
add
and
add
cltd
mov
clc
ret
clc
ss
jle
lock
add
and
add
add
mov
insb
stc
mov
jbe
clc
es
movsl
clc
sbb
clc
add
add
add
shll
sbb
add
pop
scas
mov
out
mov
push
inc
clc
xlat
clc
cltd
out
add
add
inc
clc
fs
insl
sarb
mov
pop
xchg
idiv
cmp
add
jl
clc
hlt
cwtl
jno
add
add
clc
test
add
push
add
sub
push
add
jbe
mov
add
icebp
mov
aaa
cld
cmp
mov
je
clc
scas
xchg
ret
clc
and
shlb
lcall
movsb
clc
or
test
sar
cltd
ficomps
iret
cmp
xlat
repz
push
cmp
mov
inc
clc
std
out
idivb
loop
xchg
sub
bound
add
add
xor
add
ss
add
clc
jp
fisubrs
out
xchg
adc
add
js
clc
cmp
xchg
and
add
or
loopne
incl
cmp
clc
movsl
clc
pushf
addr16
and
add
jg
lret
cmp
push
add
dec
in
iret
push
mov
out
jp
add
dec
or
clc
bound
add
mov
js
pop
test
mulb
push
sbb
xor
add
cmpsl
clc
clc
pop
mov
add
mov
push
mov
xchg
xor
add
add
add
add
push
das
movsl
clc
mov
and
add
clc
mov
inc
add
and
add
add
cmpsl
clc
xchg
cmp
clc
mov
adc
add
xor
add
xchg
scas
and
pop
es
mov
add
cltd
sub
mov
clc
inc
add
bound
add
fdivrl
ret
add
cmp
pop
clc
popa
add
cmp
adc
popf
xabort
pop
es
int3
and
add
out
and
add
push
or
cmpsb
clc
cs
and
pop
dec
mov
add
mov
push
add
mov
mov
mov
sub
clc
sub
add
imull
clc
and
add
jbe
cs
clc
into
cmpsb
clc
rolb
push
clc
adc
add
clc
cmp
add
jmp
cmp
add
test
lods
sar
outsl
out
add
add
add
ljmp
out
int3
insb
xchg
ja
clc
and
and
add
add
push
jmp
add
add
pop
push
clc
adc
clc
test
add
mov
pop
mov
add
lods
cmp
mov
jmp
jbe
add
sbb
adc
add
jno
add
add
jp
rorb
inc
clc
sub
jo
add
add
or
mov
rcrl
movsb
clc
pushf
ret
clc
mov
mov
pop
imul
lods
push
xor
add
mov
or
add
clc
jbe
fsts
ret
clc
cmp
add
in
dec
lahf
or
pop
clc
add
add
jp
ret
clc
test
adc
add
dec
dec
inc
clc
es
push
add
cmp
xor
add
daa
clc
push
xor
add
pop
data16
adc
add
clc
or
lods
mov
call
insb
inc
clc
pop
cmp
jno
add
pop
and
add
xor
add
add
or
dec
cmp
lahf
xor
add
xor
add
add
mov
or
dec
mov
push
ret
clc
fisubs
addr16
jmp
push
inc
clc
sub
loop
cmp
shr
dec
js
add
scas
shl
xchg
shlb
add
or
out
dec
cmp
add
add
cmp
mov
xor
add
or
add
and
add
clc
mov
xchg
mov
push
fidivrl
rolb
add
daa
clc
mov
add
fxch
mov
adc
add
pop
push
add
mov
cmp
leave
sbb
add
test
push
clc
jb
add
jbe
clc
movsb
clc
sub
clc
incb
add
add
hlt
adc
add
insb
mov
dec
pop
xor
inc
clc
dec
push
add
mov
pusha
add
mov
rol
clc
adc
add
xabort
clc
cmp
cmpsb
clc
inc
clc
push
test
js
inc
add
add
dec
pop
mov
dec
pop
clc
xchg
fcoml
pop
xor
sbb
aas
cmp
shll
adc
sub
call
xor
add
add
lret
clc
fdivs
add
jne
jmp
adc
add
push
nop
cld
in
out
push
jge
sub
sbb
inc
clc
cmp
add
xabort
clc
out
nop
pop
dec
cmpsb
clc
loopne
add
add
push
xchg
dec
aaa
xchg
mov
add
jle
sar
clc
in
iret
rcll
add
mov
lret
add
mov
push
adc
add
clc
and
add
mov
add
push
add
je
sub
sub
add
stos
xchg
lcall
add
into
insb
or
cwtl
push
cmpsb
clc
int3
xchg
sub
add
add
add
push
add
cltd
or
test
cmc
mov
add
xor
inc
clc
lcall
xor
clc
into
addr16
pop
clc
push
add
jae
add
add
jbe
jbe
inc
clc
arpl
add
daa
clc
fwait
insb
pop
sar
add
data16
das
ljmp
call
xor
add
xchg
mov
sbb
or
jno
add
inc
add
divl
mulb
scas
je
dec
call
add
xor
fmul
inc
clc
push
add
lea
jg
std
std
mov
xchg
lret
mov
incl
add
mov
cmp
clc
sar
clc
and
add
add
shrl
ljmp
lods
mov
xchg
cs
mov
push
mov
out
add
add
fs
xor
clc
int3
call
clc
jno
add
pop
call
add
clc
xchg
push
add
cmp
clc
lret
cmp
xor
push
add
mov
clc
ss
xchg
and
add
xor
adc
add
xbegin
lcall
jno
add
adc
fcompl
dec
xchg
xor
add
add
clc
xchg
and
push
add
aam
add
add
rorl
jb
add
add
push
xor
add
jnp
test
clc
jnp
clc
add
ret
clc
mov
add
or
cs
cs
xor
add
xchg
xchg
and
add
and
add
test
mov
pop
fcomps
leave
es
mov
mov
add
and
add
add
lret
mov
clc
out
into
dec
and
add
clc
cmp
mov
add
lret
roll
add
cs
ds
push
clc
mov
mov
mov
lret
bnd
clc
mov
xchg
shll
add
or
pop
cmc
in
xbegin
xchg
push
add
ret
add
xor
add
inc
add
mov
clc
lcall
jae
add
mov
lcall
pop
mov
cmc
sub
popf
cmp
adc
add
test
add
mov
test
or
imul
sub
clc
adc
add
add
add
add
mov
loop
xor
add
add
pop
add
add
push
add
in
es
fldcw
int
clc
xchg
ljmp
xchg
in
out
sub
add
jmp
loopne
jns
add
and
es
bnd
add
repz
js
cmp
sbb
stc
cmpsl
clc
cli
stc
sbb
add
fwait
cli
stc
mov
movzbl
add
xor
loop
xlat
sar
lods
inc
add
jnp
clc
mov
xchg
mov
pop
insb
xbegin
cmc
add
add
add
std
xchg
cmp
sbb
xchg
sub
icebp
stos
sub
push
push
fisubl
inc
add
loopne
cmp
clc
call
clc
push
clc
fwait
or
pop
cmpsl
clc
rcl
adc
clc
jo
add
add
int
lret
sub
add
xchg
insl
sub
dec
or
cmpsb
clc
movsb
clc
pop
cmp
add
jno
add
clc
mov
nop
fwait
hlt
mov
clc
xchg
stc
mov
clc
int3
lcall
mov
add
mov
clc
xchg
fisttpl
clc
xchg
cmp
insb
dec
cmp
test
or
jl
inc
add
hlt
pop
pop
clc
in
pop
mov
add
push
clc
jle
int3
mov
and
add
add
push
add
add
xchg
xchg
mulb
add
call
test
dec
mov
clc
cld
mov
out
pop
fwait
das
ret
clc
or
test
in
inc
add
ret
add
scas
push
enter
stos
test
imul
add
clc
inc
add
lahf
jns
sub
and
add
jmp
fsubrp
loopne
xchg
ljmp
add
pop
clc
out
testb
test
aaa
dec
inc
clc
mov
clc
clc
cs
push
roll
add
add
jl
test
rclb
add
sar
clc
xor
add
lods
jg
clc
jge
clc
push
add
xbegin
and
add
outsb
fs
dec
aas
shlb
mov
test
test
pusha
add
imul
adc
add
inc
clc
ja
int
mov
add
fprem1
sti
dec
fcmovnu
mov
or
add
add
sub
clc
imul
nop
and
add
sub
add
decl
outsl
xchg
fsubrs
lock
add
mov
into
adc
add
xor
add
push
add
loopne
jb
add
cli
cmpsb
clc
out
push
adc
cs
xor
add
ja
scas
xchg
addr16
mov
sti
cmpsb
clc
inc
clc
mov
xor
add
mov
clc
jb
add
add
pop
cmp
xchg
scas
fnstsw
xor
lret
mov
xor
add
xchg
push
insl
fisubrl
cmp
and
adc
std
push
add
es
mov
inc
clc
outsb
loopne
cli
sub
push
mov
cmc
das
cmpsl
clc
inc
add
imul
adc
addr16
fistps
mov
bound
add
push
add
sub
xbegin
loop
in
repz
clc
or
fwait
xchg
iret
icebp
mov
repnz
lea
pop
jecxz
test
clc
mov
mov
add
jo
add
clc
jb
add
clc
jle
and
mov
add
add
mov
sti
lcall
cli
pop
clc
ret
clc
iret
mulb
dec
std
shr
int3
fxam
clc
jp
adc
add
mov
add
cmp
push
das
dec
ja
clc
xor
add
lahf
mov
cli
cmp
lcall
add
jle
add
dec
inc
add
leave
mov
mov
clc
popa
add
mov
add
clc
add
add
push
clc
gs
movsl
clc
or
cmp
in
sbb
clc
push
add
call
add
inc
clc
inc
add
mov
sbb
insb
enter
push
cmp
cmp
add
bound
add
or
imull
test
inc
add
lahf
and
add
mov
clc
xbegin
jnp
add
jecxz
sar
clc
adc
add
clc
int
dec
push
cmpsl
clc
inc
add
or
call
or
fiaddl
add
insl
data16
lock
cmpsb
clc
imul
loopne
jge
clc
or
clc
int3
icebp
dec
mov
stos
xbegin
imul
add
pop
xchg
in
mov
clc
inc
add
rclb
das
loope
psrlq
mov
cltd
inc
clc
cwtl
mov
add
push
add
scas
push
sbb
jge
int
aad
cmp
dec
enter
shrb
adc
add
xchg
mov
cld
add
popa
add
xor
add
sahf
xor
add
dec
jmp
clc
cmc
cmp
add
insb
lret
pop
cmc
cmp
dec
cmp
jmp
clc
lcall
add
mov
div
pop
hlt
arpl
add
sysenter
push
add
dec
dec
repnz
fs
cmp
shl
clc
lods
out
fs
sar
xbegin
push
sahf
in
loop
addr16
inc
add
jg
fadd
clc
rcrb
add
out
clc
js
mov
cmp
clc
mov
clc
cmp
pop
or
test
pop
jp
sbb
add
cmp
xor
add
dec
and
jecxz
icebp
dec
cltd
mov
push
xchg
xchg
std
xchg
test
jno
add
out
outsl
stos
pop
sub
test
lcall
in
add
add
mov
clc
fwait
fs
fwait
hlt
add
add
repnz
inc
clc
sub
add
out
cld
fisttps
ret
clc
push
push
add
sahf
or
clc
enter
das
cmp
insb
add
add
add
pop
vmovups
add
add
add
and
push
test
repnz
add
clc
aad
clc
jo
add
pushf
inc
clc
int3
mov
add
pop
dec
adc
add
mov
leave
dec
add
and
add
pop
clc
mov
ljmp
or
add
mov
add
and
add
bnd
clc
add
inc
clc
xor
add
aaa
shl
loopne
sbb
or
in
jno
add
add
add
cmp
arpl
add
add
sbb
dec
int
ret
es
mov
roll
clc
mov
mov
flds
add
addr16
cmp
add
in
in
cmc
xor
add
nop
in
jle
inc
add
dec
mov
cld
ds
dec
mov
rcrl
add
xrelease
jle
clc
faddl
jnp
in
imul
dec
sbb
add
pop
in
int
mov
pop
cmp
add
add
popf
mov
and
add
enter
pop
mov
xchg
loope
sbb
es
rorl
push
add
lea
clc
push
add
jns
clc
adc
add
add
sub
inc
clc
cwtl
mov
cmp
aas
jae
add
add
add
or
icebp
sbb
xor
add
clc
xor
add
fnstcw
clc
ss
jo
add
clc
or
add
ds
jne
jae
add
and
inc
clc
or
adc
add
pop
outsl
xor
add
add
or
add
mov
add
sub
clc
sbb
add
fcompl
vdivps
add
push
push
xchg
and
add
add
test
sub
push
clc
in
fidivs
add
in
push
pop
clc
testl
movsl
clc
pushf
mov
adc
clc
mov
clc
dec
xor
add
clc
add
jns
or
clc
jmp
jo
add
add
leave
xchg
mov
add
cmpsb
clc
add
add
add
scas
sar
xchg
stos
mov
add
loope
inc
clc
mov
push
clc
and
add
add
enter
ret
clc
mov
in
outsb
sbb
jge
add
add
aas
aam
clc
xor
add
sti
lods
in
and
add
push
dec
fidivrl
mov
or
add
pop
mov
arpl
add
mov
loopne
es
ljmp
add
movsl
clc
lcall
clc
pop
clc
adc
jl
cmp
add
das
test
ret
clc
mov
add
push
sub
clc
push
clc
mov
lcall
aaa
sbb
adc
add
bound
add
add
xor
add
arpl
add
add
or
add
cltd
ret
add
out
add
scas
jo
add
cmp
add
adc
add
clc
xchg
add
add
add
fs
inc
clc
mov
clc
mov
clc
fadds
cmp
mov
and
add
clc
inc
add
push
add
movsb
clc
dec
cmp
sbb
clc
add
test
xchg
push
clc
daa
clc
scas
jno
add
mov
add
mov
sub
mov
jg
cmp
add
repnz
popf
shl
or
cmp
lock
clc
popa
add
sbb
or
aas
clc
mov
mov
push
movsl
clc
sub
add
push
lods
cmp
clc
or
xchg
loopne
cwtl
mov
jg
clc
push
add
xchg
cmp
loope
push
add
dec
repnz
es
sahf
mov
add
mov
inc
add
mov
xor
add
pop
inc
clc
jo
add
add
fnstcw
and
add
clc
loopne
in
test
push
sub
inc
clc
pop
fcomps
mov
push
xchg
xor
add
add
mov
inc
add
incb
pop
clc
leave
clc
daa
clc
cmp
add
cli
out
inc
clc
or
push
xor
add
ficoms
push
jno
add
repz
mov
clc
clc
test
outsb
inc
clc
cmp
clc
lret
add
ja
clc
inc
add
je
add
in
movlps
add
add
pop
cmp
add
xabort
mov
xabort
fcomps
clc
mov
adc
add
add
xchg
nop
aas
out
xbegin
pop
es
pop
sbb
adc
add
push
notl
cltd
and
add
xlat
cmp
xor
call
inc
add
je
clc
push
sti
test
pop
fcompl
inc
add
enter
xbegin
clc
out
cli
imul
das
mov
clc
cmp
adc
pop
push
pop
xabort
mov
add
test
xor
add
sub
push
add
inc
clc
sbb
clc
and
add
arpl
add
sar
clc
daa
clc
nop
pop
clc
add
jnp
add
ja
repnz
lea
pop
clc
jge
add
add
add
add
enter
aam
jbe
ja
add
push
push
sbb
add
and
add
add
mov
mov
clc
pusha
add
ret
outsb
repz
add
pusha
add
fdivr
xor
add
loop
icebp
into
adc
push
fldz
cmpsb
clc
test
fstps
inc
add
movsb
clc
and
int3
cmp
mov
inc
add
repnz
in
or
scas
imul
clc
jne
clc
xlat
call
add
cld
push
outsl
mov
repz
fwait
sbb
add
dec
inc
clc
and
add
clc
mov
add
movsb
clc
pop
fadds
jo
add
add
gs
push
clc
dec
cltd
adc
stos
fisttpl
pop
mov
clc
dec
stos
pop
clc
xchg
push
test
cmp
push
inc
clc
dec
out
repnz
fcmovb
clc
jecxz
sub
add
dec
jno
add
clc
push
rdmsr
add
jae
add
add
loop
adc
add
stc
mov
sub
scas
sub
into
mov
jbe
addr16
jle
sarl
clc
xor
clc
adc
add
iret
std
cld
lods
nop
cmc
sti
jmp
int
or
pusha
add
mov
insl
loop,pn
inc
add
sar
xchg
pop
adc
add
dec
repnz
jbe
daa
clc
in
xchg
xchg
cltd
clc
pop
cmp
clc
cli
imul
add
adc
add
mov
nop
outsl
clc
cmp
jecxz
push
add
mov
add
add
inc
add
add
dec
inc
add
data16
xabort
add
out
daa
clc
sahf
bound
add
bound
add
clc
inc
clc
jp
xchg
mov
cmp
xor
add
pop
cltd
and
pop
sbb
add
cld
xchg
call
inc
clc
cld
xbegin
add
xor
add
add
mov
add
dec
jl
int3
aam
add
cmp
mov
clc
mov
add
add
add
push
cli
div
test
fwait
repz
add
rcr
cltd
jmp
add
mov
add
mov
clc
fcoms
dec
mov
idiv
adc
cmp
stos
jbe
inc
add
je
clc
cwtl
cmc
mov
mov
clc
out
push
add
pop
repnz
add
inc
add
mov
bound
add
add
clc
shr
int3
jnp
adc
pushf
call
add
sbb
cmp
add
mov
je
cmp
aas
and
lods
and
std
std
xchg
mov
scas
xor
add
std
jbe
add
xchg
push
add
dec
jne
ss
in
sub
aas
jle
sub
add
aas
or
clc
jbe
add
mov
cmp
dec
xchg
mov
add
test
add
rcrl
inc
add
sar
rcrl
add
push
xchg
pop
aas
jne
clc
ficomps
clc
jmp
clc
mov
add
pop
clc
add
add
mov
add
ljmp
stos
dec
int
clc
or
call
ret
dec
aaa
sub
lahf
push
add
jmp
popa
add
popl
clc
negl
adc
add
vmovlps
add
out
sub
clc
xabort
mov
dec
mov
out
inc
add
inc
clc
arpl
add
add
clc
sbb
and
add
and
add
cmp
add
test
add
xchg
pop
jae
add
add
stos
aad
xchg
aaa
mov
bsr
mov
sub
clc
sub
push
add
ljmp
sbb
clc
sub
add
cli
mov
mov
clc
aaa
cld
out
ljmp
clc
sar
clc
push
add
xchg
mov
clc
clc
stc
aam
clc
in
dec
int3
mov
add
and
add
clc
jle
jb
add
add
cld
fbld
clc
imul
popa
add
lret
sahf
cld
dec
in
xchg
push
add
pop
mov
inc
add
xchg
je
sbb
aaa
add
imul
clc
or
add
jb
add
mov
push
clc
pop
cmpsl
clc
push
add
sahf
fsub
clc
mov
cmp
cmp
push
pop
ljmp
shll
lcall
xor
add
in
mov
mov
clc
fisubrl
adc
add
clc
inc
add
and
add
adc
clc
cs
dec
call
lahf
es
fcomp
int3
enter
clc
sar
clc
cmp
adc
add
cmp
hlt
or
add
or
scas
and
mov
add
clc
pop
clc
xchg
lods
jbe
add
into
hlt
or
clc
adc
add
fsub
clc
inc
add
jne
or
add
dec
pop
inc
clc
dec
lods
add
add
and
add
ds
add
add
test
clc
clc
fnstsw
test
gs
popl
leave
xabort
add
add
add
add
sub
xchg
sti
sub
adc
clc
std
adc
pop
inc
clc
xor
add
clc
fsts
push
pop
xchg
movsl
clc
and
add
cs
fmul
pop
push
add
mov
push
fidivrs
and
add
clc
dec
mov
in
xchg
inc
clc
lcall
add
test
ret
xchg
fisubrs
xchg
icebp
clc
mov
xchg
enter
jbe
fs
xchg
inc
add
scas
push
dec
or
add
mov
mov
ljmp
sub
dec
adc
add
int3
inc
add
jns
clc
daa
clc
stc
lret
adc
add
fldcw
fucomp
mov
clc
sahf
clc
hlt
mov
push
xchg
mov
add
mov
push
and
into
daa
clc
insl
sar
in
add
mov
popa
add
add
push
adc
add
cltd
daa
clc
xor
add
add
out
out
xchg
jle
clc
pcmpgtb
in
mov
add
clc
and
add
add
mov
cs
cmp
clc
cli
jecxz
mov
cmp
clc
nopl
in
out
pop
xchg
imul
adc
jecxz
push
aaa
cld
mov
add
mov
jl
and
add
cli
cmc
sbb
clc
ja
adc
add
leave
stos
xchg
add
out
inc
clc
sub
clc
or
gs
pop
into
pop
out
dec
xchg
mov
aaa
xor
add
test
pop
pushl
add
mov
jbe
jecxz
sub
add
push
adc
add
xor
add
sub
imul
clc
xchg
inc
add
mov
gs
add
add
pop
xor
add
stos
jmp
repz
insl
jle
lret
ja
adc
clc
out
pop
aaa
sub
clc
sub
add
add
ret
clc
stc
fists
add
and
add
jecxz
or
clc
in
xor
add
add
add
loopne
pop
cmp
push
add
add
add
outsl
mov
decb
inc
add
ljmp
ret
stos
fsub
clc
cmp
or
clc
jg
cvtps2pd
add
clc
and
imulb
cmp
into
pop
xor
add
int
sub
add
add
popf
repz
clc
sbb
stos
dec
and
pop
dec
mov
pop
data16
mov
clc
add
add
xor
add
idivl
push
loope
mov
add
xchg
mov
add
mov
jae
add
aad
jecxz
xchg
in
add
add
clc
repz
mov
mov
faddl
clc
sti
jle
inc
clc
inc
clc
xchg
in
xchg
aaa
adc
add
icebp
pop
adc
clc
clc
cwtl
hlt
cwtl
sarb
add
adc
clc
insb
dec
and
add
xchg
cmp
xchg
scas
adc
add
mov
fsub
clc
mov
add
clc
mov
clc
shl
clc
cmc
ja
add
inc
add
int3
add
add
add
popa
add
pusha
add
and
add
jle
leave
fstpl
mov
and
add
mov
add
fnop
in
cmp
clc
jl
leave
mov
clc
cmpsb
clc
into
in
cmp
jbe
fildll
stos
out
cmp
jns
addr16
frstor
test
stos
and
add
add
or
std
jmp
or
mov
add
call
jecxz
and
add
stos
fs
adc
or
data16
sub
xchg
fs
jbe
mov
xor
add
sbb
mov
clc
sarl
clc
mov
clc
cmp
clc
stos
iret
sbb
xor
inc
add
sbb
push
arpl
add
icebp
xor
add
add
mov
outsb
aaa
iret
adc
loopne
dec
in
dec
add
add
sub
clc
mov
add
loop
addr16
xchg
ljmp
movsb
clc
or
add
add
out
inc
add
pop
outsb
push
clc
cltd
push
addr16
in
inc
add
repz
jp
sub
mov
add
and
add
push
add
or
rcll
add
jbe
add
lods
ret
clc
enter
clc
pop
loop
sub
clc
fnstsw
or
outsb
rolb
jmp
imulb
test
jae
add
or
mov
or
xchg
inc
add
mov
cmp
add
adc
add
mulb
add
nop
mov
dec
ffreep
clc
jge
clc
or
int3
movsb
clc
lea
pusha
add
mov
add
inc
add
add
std
xor
scas
mov
clc
in
xchg
push
loopne
sbb
cmp
clc
gs
dec
fs
out
mov
sbb
clc
nop
gs
jb
add
add
in
lret
add
xor
add
push
sbb
dec
push
xbegin
cmp
push
sbb
das
jl
add
iret
ficoms
xchg
mov
clc
jae
add
add
shll
add
clc
or
add
xchg
nop
out
and
add
push
xlat
loope
addr16
insb
push
insl
loop
inc
add
mov
pusha
add
cmp
in
dec
popa
add
cmpsl
clc
jno
add
aaa
scas
and
add
mov
or
and
add
cmp
rep
loope
pop
clc
scas
xchg
push
mov
add
mov
sub
jne
clc
sarb
xchg
int
or
clc
js
jo
add
inc
add
iret
xchg
jmp
clc
ficomps
cwtl
mov
xchg
jae
add
mov
insb
mov
clc
imul
out
std
mov
clc
cmp
insl
xor
add
clc
or
clc
adc
add
clc
mov
and
add
out
sbb
or
add
jno
add
jp
bound
add
lcall
pop
jecxz
clc
mov
add
push
push
add
addr16
push
add
mov
add
add
data16
popf
jne
sti
add
adc
xor
add
clc
cmp
add
sub
clc
and
add
add
dec
xchg
clc
aad
insl
cmpsl
clc
push
add
fidivrl
cmp
js
aam
add
dec
inc
clc
mov
testb
sub
xchg
sbb
add
mov
jmp
add
pop
clc
jne
push
sahf
xor
add
add
movsb
clc
xbegin
in
mov
push
add
mov
out
sar
stos
pop
js
pop
jmp
lea
mov
gs
data16
xchg
test
scas
insl
jge
inc
add
lcall
add
inc
clc
xchg
lods
out
ja
add
jnp
add
in
leave
cld
cltd
loop
xchg
gs
test
push
lret
xchg
aam
add
add
movsb
clc
aaa
add
add
clc
mov
add
mov
add
cmp
clc
push
stos
pop
and
and
add
jge
out
cltd
push
add
ja
add
lock
clc
mov
clc
sar
xchg
insl
sub
pop
lret
aaa
push
dec
loopne
and
add
clc
cli
and
add
sub
add
mov
test
mov
clc
repz
test
scas
jle
es
mov
pop
clc
out
lret
clc
sbb
add
daa
clc
add
add
sbb
mov
aas
adc
add
mov
mov
mov
clc
shll
clc
jge
jo
add
dec
aam
popa
add
mov
negl
mov
hlt
gs
ret
in
sbb
add
ss
das
add
add
add
sbb
clc
push
add
movsb
clc
sub
push
daa
clc
lahf
in
dec
test
mov
movaps
mov
lea
sahf
inc
clc
icebp
sbb
add
daa
clc
push
push
add
decb
push
add
mov
cwtl
jnp
adc
add
jbe
rcr
xor
add
sbb
push
clc
add
add
add
push
push
pop
jno
add
add
outsl
clc
xbegin
push
and
add
or
clc
inc
clc
enter
mov
std
in
je
clc
lock
add
add
push
jmp
clc
xor
add
ret
lea
sbb
clc
xlat
mov
clc
cmp
movsl
clc
mov
cmp
fs
sub
in
mov
pusha
add
mov
sbb
ret
clc
push
adc
add
int
fcmovbe
flds
inc
clc
pop
clc
cmp
or
clc
xchg
jle
push
add
cmp
clc
jns
add
pop
dec
xlat
adc
loop
fsubrp
jecxz
fucomp
out
mov
insb
nop
clc
and
add
clc
fdivl
add
pop
inc
add
in
jne
clc
xor
add
clc
mov
push
jb
add
popf
pusha
add
in
out
mov
clc
shll
or
aam
je
mov
dec
scas
mov
clc
je
mov
out
dec
int
scas
and
add
clc
cmpsb
clc
mov
add
sbb
mov
add
adc
add
clc
push
int3
mov
sub
jne
test
fildll
lret
mov
clc
insb
inc
clc
fcomip
gs
fldt
mov
stos
imul
stc
push
fwait
jg
add
add
add
clc
lods
or
loope
inc
add
ljmp
clc
pop
ds
clc
mov
mov
add
cmp
cmpsl
clc
into
stc
push
ret
clc
push
add
lahf
adc
add
add
sbb
aam
xchg
adc
clc
hlt
xchg
add
add
das
bound
add
clc
xor
clc
push
jne
mov
or
add
clc
mov
xchg
data16
fwait
mov
arpl
add
push
add
mov
add
sbb
repnz
cmpsb
clc
inc
add
ret
clc
pop
xchg
es
xchg
insb
loope
add
xor
add
or
loop
mov
add
clc
fistl
clc
stos
addr16
mov
add
insb
add
add
add
add
loop,pt
enter
add
imul
nop
repnz
clc
popf
push
push
imul
fstl
add
ljmp
outsl
pop
testl
sahf
cmpsl
clc
sub
jecxz
clc
dec
call
add
es
cld
ss
ja
out
js
clc
pop
clc
loop
inc
clc
inc
clc
js
dec
sar
fidivl
push
inc
clc
sar
cmp
mov
add
push
jns
push
clc
jecxz
dec
jns
clc
push
add
test
add
clc
iret
fldpi
leave
add
pop
pop
sub
push
add
jb
add
dec
sbb
add
add
loope
stc
cwtl
dec
jnp
cmp
adc
add
lret
mov
and
add
mov
nop
xchg
pop
jecxz
push
pop
mov
add
popf
cs
jbe
add
push
bound
add
outsl
mov
and
clc
xchg
inc
clc
clc
repz
fisubs
inc
clc
xchg
mov
testl
aaa
mov
clc
test
and
adc
cmpsb
clc
mov
cmp
clc
neg
fs
mov
xchg
mov
mov
popa
add
adc
add
and
add
shlb
add
clc
lret
pop
lods
test
scas
dec
sub
clc
mov
clc
pop
mov
stos
ret
sar
mov
clc
jno
add
lods
ljmp
and
add
mov
add
shrl
ljmp
jmp
repz
push
divl
mov
or
add
mov
clc
sbb
fldenv
clc
imul
add
aas
fsubrs
lret
add
movsb
clc
cltd
vmovlps
add
incb
cmp
fsubrl
xchg
lret
scas
jle
add
xchg
mov
add
gs
lea
jle
imul
outsb
cmc
sub
add
mov
dec
xor
add
or
add
push
repnz
sbb
add
jnp
stos
jecxz
inc
clc
lcall
xor
add
clc
push
add
lods
xchg
leave
push
push
add
xchg
pushf
sar
jge
add
in
out
test
pop
jle
dec
shlb
dec
mov
lods
mov
mov
clc
punpcklwd
add
adc
dec
addr16
or
loope
xor
add
leave
popa
add
js
cmp
clc
pop
gs
lcall
add
sub
jmp
shll
clc
jo
add
and
clc
cli
sbb
cmp
jne
and
add
add
add
clc
jae
add
jg
es
sti
out
jbe
pop
fs
mov
fistpll
rcll
test
cwtl
cmp
cs
mov
clc
add
add
lret
lock
popa
add
sbb
mov
add
cmpsb
clc
fsubs
add
cmp
ljmp
jns
inc
clc
ficomps
cmp
adc
add
adc
add
outsl
adc
add
clc
dec
mov
dec
inc
add
push
push
push
js
add
jle
clc
jne
roll
add
and
add
add
or
clc
stc
xchg
ficomps
add
jno
add
add
push
in
and
add
push
pop
add
lcall
add
repnz
add
adc
fadds
repz
add
das
rclb
stc
or
repz
jo
add
add
sar
inc
clc
lods
das
inc
clc
dec
movsb
clc
pop
ret
dec
loopne
sub
in
xabort
inc
clc
or
cmp
mov
add
popa
add
cmp
clc
jnp
sub
out
dec
mov
jecxz
inc
add
dec
jle
clc
inc
add
and
add
outsb
mov
lods
sti
cmp
imull
cmp
add
push
or
inc
add
cmp
clc
pop
clc
mov
clc
or
clc
divl
add
inc
add
jne
xchg
inc
add
xchg
loope
inc
clc
mov
add
out
mov
add
add
add
mov
fcoml
add
xbegin
add
cmp
clc
adc
add
imul
dec
aas
cmpsb
clc
ljmp
mov
dec
lcall
out
sub
pop
cs
out
mov
leave
cmp
mov
cmp
or
cmpsl
clc
fcoms
add
clc
shrb
push
mov
testb
add
or
xor
xor
add
add
add
cmpsl
clc
adc
add
icebp
out
mov
in
js
nop
and
add
push
add
cmp
clc
icebp
out
out
inc
add
sbb
xchg
cmp
test
fadds
vrsqrtps
add
push
cli
or
clc
add
add
lcall
iret
cmp
lcall
mov
mov
outsl
addr16
add
cmp
add
clc
call
lea
add
and
sar
lea
cli
imul
xor
add
add
jp
xchg
int3
xchg
or
clc
xor
dec
aaa
psubusb
sbb
in
jmp
clc
lock
clc
mov
clc
pushf
loopne
mov
add
cld
jae
add
lods
pop
ja
ss
out
and
add
adc
cmp
icebp
cs
mov
ljmp
sti
mov
adc
add
add
add
add
dec
push
add
pop
sub
push
xor
add
pop
mov
sbb
add
push
clc
xchg
fiaddl
add
xabort
add
cld
loop
fcompl
xor
ljmp
pop
mov
dec
or
dec
inc
clc
push
cmp
add
addr16
push
data16
jp
clc
ljmp
add
xor
add
clc
xlat
fsubrs
push
ret
clc
cmp
push
into
and
jo
add
sub
cli
lods
jbe
fcmovnb
clc
pop
in
inc
add
mov
xchg
pop
mov
dec
rcr
xor
add
push
mov
mov
add
pop
inc
clc
cmp
add
fnstenv
add
or
adc
add
add
push
fstps
mov
add
pop
sarl
add
loopne
or
xor
adc
add
cmp
inc
clc
sbb
imul
mov
xchg
xchg
scas
sbb
add
add
add
std
pusha
add
cmp
add
repz
clc
cmp
mov
xchg
push
fdivrl
ljmp
clc
sub
and
add
add
cltd
roll
add
add
repnz
sub
add
add
add
push
add
pop
xbegin
pop
lock
add
add
sbb
mov
add
into
dec
into
cmp
add
mov
add
pushf
pop
or
xlat
in
fisubrs
clc
add
add
and
xlat
pop
clc
fisttpl
cmp
mov
mov
add
test
int
xchg
dec
out
mov
add
mov
mov
mov
mov
sub
int
inc
add
xchg
popa
add
call
add
or
insb
sahf
xchg
data16
outsl
jl
clc
aam
clc
dec
mov
out
mov
fucompp
bound
add
sarl
stc
add
add
mov
mov
ljmp
add
es
or
add
add
xchg
jns
xlat
cmp
clc
dec
xchg
int3
daa
clc
sar
xchg
scas
pop
clc
adc
add
add
negb
sub
scas
xchg
cmp
dec
loop
clc
mov
or
add
clc
jge
add
and
add
add
in
dec
mov
clc
push
sti
fsubl
jge
sbb
add
stc
mov
add
sbb
dec
mov
pop
push
pop
jbe
test
add
js
stc
xor
test
or
add
dec
sbb
clc
xchg
pop
cmp
clc
push
dec
lahf
jae
add
imul
outsl
mulb
dec
stc
pop
clc
aad
fcoms
add
lods
shr
mov
and
add
clc
hlt
xor
test
jge
add
push
add
sar
popf
data16
cmp
add
jecxz
push
pop
ffree
clc
sar
stc
inc
clc
aam
mov
add
xor
lods
into
xor
add
clc
sbb
clc
jnp
fisubs
add
jae
add
clc
mov
mov
imul
lahf
test
push
add
add
lret
cli
pop
pop
xchg
jle
mov
push
test
clc
adc
add
pusha
add
hlt
clc
popf
imul
add
xlat
push
sub
sbb
jmp
add
clc
movsl
clc
pop
fisttps
add
xor
clc
push
jae
add
clc
push
fimuls
lods
data16
pop
clc
mov
ret
add
fsubrl
add
push
add
xchg
xchg
dec
adc
add
xor
add
add
clc
cmp
push
add
add
add
add
cmp
add
jge
jnp
cmp
mov
jl
add
add
xchg
sbb
fs
mov
sub
sbb
notb
add
push
add
xchg
rorb
add
cmp
clc
loope
and
jo
add
int
mov
movsl
clc
xlat
push
adc
add
mov
add
sbb
add
in
mov
add
add
clc
mov
clc
mov
push
add
push
out
rorl
or
add
sub
and
add
add
popl
mov
add
pop
adc
pushf
aad
add
int3
in
mov
xchg
xchg
xabort
dec
ja
cmp
clc
xchg
inc
clc
lea
add
mov
clc
pop
loope
leave
in
sub
scas
and
add
clc
jmp
sar
clc
cld
pop
sbb
in
jb
add
rclb
and
add
xchg
out
pop
data16
cmp
add
xbegin
lret
pop
clc
outsb
vandps
push
pop
xchg
inc
clc
das
stos
mov
xbegin
sbb
pop
mov
and
dec
xchg
jl
and
jge
clc
mov
gs
jp
push
add
jbe
outsl
mov
clc
xor
mov
clc
and
add
sbb
dec
outsl
es
mov
add
bound
add
cmp
lock
clc
ret
loope
xbegin
push
addr16
cwtl
sahf
push
add
mov
sub
adc
add
das
inc
clc
adc
add
clc
adc
add
inc
clc
add
imul
clc
cmp
es
addr16
ja
add
and
add
pop
pop
cmp
das
sub
cwtl
nop
test
dec
adc
add
add
add
add
add
add
cmp
daa
clc
mov
add
add
xchg
cmp
add
dec
add
jb
add
add
mov
lods
pop
clc
mov
dec
sub
ja
adc
add
sti
lods
ljmp
adc
test
clc
leave
call
adc
add
pushf
clc
cmp
out
cmpsl
clc
ljmp
std
mov
inc
add
and
add
xchg
scas
inc
clc
mov
dec
mov
out
mulb
add
sar
cld
add
add
sbb
mov
clc
and
add
cld
xor
add
xchg
lcall
push
cmp
add
jmp
mov
clc
mov
push
loop
scas
out
data16
xor
add
fwait
ja
fnstenv
xchg
push
test
push
flds
add
add
clc
push
stos
inc
clc
out
xbegin
inc
clc
xlat
in
call
xchg
cmp
add
jns
add
xbegin
mov
adc
add
adc
clc
daa
clc
repz
add
iret
js
clc
cmp
sub
insl
movsl
clc
cli
push
js
clc
stos
push
add
lock
xabort
das
pop
push
cltd
mov
clc
inc
clc
jbe
sbb
cmc
mov
incb
add
cli
data16
sahf
pop
sbb
add
add
add
mov
clc
adc
das
scas
mov
inc
add
or
clc
hlt
pop
insl
push
clc
imul
ficomps
and
add
imul
add
andps
and
add
clc
cmp
popf
insb
mov
jmp
clc
dec
scas
add
sbb
add
sbb
and
add
mov
mov
clc
fs
inc
add
dec
cmp
clc
sub
jno
add
pop
jge
clc
cmp
add
clc
int3
movsb
clc
push
add
inc
add
mov
clc
jmp
mov
or
mov
pop
clc
dec
pop
clc
sarl
add
test
push
add
popa
add
in
aaa
or
fwait
mov
cmpsb
clc
idivl
lcall
adc
add
aam
add
outsl
mov
clc
int3
daa
clc
or
clc
loop
jmp
dec
popa
add
mov
fcoms
add
push
clc
in
mov
fwait
or
clc
test
clc
adc
add
clc
cli
cmp
or
add
sbb
clc
cmp
clc
cmp
clc
shr
movsb
clc
clc
lahf
lret
jmp
push
clc
sbb
jl
mov
lret
mov
dec
push
pop
inc
add
pop
out
or
lret
repnz
clc
jg
dec
std
hlt
and
add
stc
jmp
or
mov
hlt
cmc
push
fists
in
mov
pop
xor
add
clc
mov
clc
mov
hlt
popf
push
add
mov
clc
and
add
add
or
clc
jae
add
pop
cmp
movsl
clc
jg
popa
add
xchg
jg
add
jo
add
add
inc
clc
xchg
cmp
cmpsb
clc
inc
clc
pop
xchg
jae
add
add
xchg
out
bound
add
dec
int
add
mov
add
maskmovq
push
add
jecxz
jecxz
sbb
daa
clc
mov
fildll
mov
jne,pt
clc
mov
clc
stos
punpcklbw
add
xabort
in
iret
pop
cmp
pop
bound
add
sti
cmpsl
clc
sub
clc
adc
add
add
insb
stos
and
add
or
add
out
mov
add
arpl
add
lahf
or
clc
adc
add
movsl
clc
push
add
or
add
xchg
test
push
js
add
or
leave
sub
sub
es
cmp
add
pop
call
cmp
inc
add
int3
jge
arpl
add
add
cltd
fnsave
mov
clc
incb
sti
addr16
shlb
add
pop
clc
cmp
add
push
add
lahf
jnp
pop
stc
cs
clc
int3
xor
add
inc
clc
fwait
js
fsubrs
add
adc
cmp
mov
inc
clc
inc
add
jecxz
mov
add
ret
clc
sahf
daa
clc
jle
clc
mov
sbb
mov
in
mov
inc
add
imull
inc
add
clc
add
add
xor
add
add
lods
jl
and
test
add
mov
scas
idivb
shrl
and
add
add
ljmp
leave
hlt
mov
add
sahf
sub
mov
clc
xchg
fnstcw
xor
add
in
arpl
add
add
cmp
cmp
in
hlt
leave
lods
jbe
add
pusha
add
cltd
pushf
ds
fcoms
daa
clc
jl
leave
leave
sbb
add
add
dec
mov
clc
fwait
mov
clc
test
sub
js
imul
push
clc
jecxz
add
add
mov
clc
mov
ret
clc
xchg
add
add
sti
push
add
repz
mov
add
inc
add
aad
mov
sbb
cmpsb
clc
mov
aam
mov
clc
fcomp
cmpsl
clc
cmp
clc
movsl
clc
popa
add
outsl
push
ljmp
adc
popf
xor
add
add
stos
push
outsb
daa
clc
cmp
add
out
cld
and
add
add
add
fs
outsb
mov
pop
stc
cmc
jns
lods
xor
add
mov
jge
dec
shlb
clc
jnp
mov
daa
clc
cmp
clc
test
xor
clc
js
xchg
outsb
cmp
clc
lret
sti
xor
add
fildl
clc
clc
call
push
cmp
clc
or
add
dec
mov
add
inc
clc
cmpsl
clc
mov
add
insb
jmp
repnz
mov
add
nop
leave
cmp
nop
aaa
mov
add
clc
js
push
inc
add
adc
add
add
sbb
add
pusha
add
cmp
test
clc
sub
stos
and
add
clc
out
icebp
mov
add
clc
cmc
testb
add
clc
aam
push
add
and
add
clc
jb
add
add
fcomp
push
and
add
add
or
adc
add
inc
add
pop
jb
add
pop
xchg
call
cmp
add
xor
add
cmp
xabort
in
mov
clc
xchg
repnz
jmp
cltd
add
mov
movsl
clc
cmpsl
clc
pushf
mov
xchg
pop
pop
adc
add
loopne
jne
sub
call
jg
add
rcrl
clc
mov
clc
xor
add
mov
add
add
mov
clc
out
or
or
sbb
outsl
add
add
fsts
jnp
clc
dec
mov
clc
mov
fmul
jge
clc
inc
clc
clc
ja
lahf
mov
dec
fwait
dec
inc
add
or
imul
lods
jns
clc
sbb
add
test
clc
das
jle
icebp
mov
xchg
test
add
xchg
fs
movsl
clc
adc
add
fisubs
add
test
fcomip
add
add
clc
sbb
or
roll
xchg
pop
and
add
ljmp
add
clc
in
cmp
lods
or
clc
cmpsl
clc
outsb
or
das
cmpsb
clc
inc
add
xor
add
shll
add
add
dec
cs
xchg
sbb
insl
mov
or
clc
fwait
jae
add
pop
decl
jno
add
cmpsb
clc
xor
add
add
sbb
fidivs
add
clc
mov
clc
push
test
and
add
jns
xor
add
clc
sbb
add
es
mov
aaa
mov
cmp
clc
xor
add
cmc
shrl
jnp
clc
push
add
mov
add
xlat
add
add
pop
in
sbb
clc
cwtl
pusha
add
shll
add
add
add
or
mov
repnz
rcll
mov
add
out
repz
add
scas
sbb
add
in
push
mov
add
xabort
mov
clc
fists
add
pop
cmp
shll
in
mov
add
cmp
cmpsl
clc
push
add
inc
clc
ret
dec
sbb
clc
jae
add
clc
lret
aam
clc
ds
mov
rcll
mov
je
mov
cltd
sti
sub
jge
jnp
add
addr16
inc
clc
addr16
lahf
insl
in
stc
cmpsb
clc
loopne
pop
mov
lahf
adc
nop
inc
clc
xchg
xchg
scas
cmp
mov
mov
sbb
add
loopne
pop
add
add
insl
shl
clc
pop
mov
clc
divb
cld
dec
xchg
mov
push
lods
and
add
jmp
jbe
clc
addr16
cmp
movsl
clc
cmp
clc
mov
aam
aam
mov
gs
mov
aad
xchg
sbb
mov
clc
xor
add
ret
clc
movsb
clc
cmpsb
clc
out
lods
in
pop
cmpsb
clc
jbe
leave
popf
mulb
add
repnz
add
or
clc
shll
add
dec
push
scas
lret
or
cmpsb
clc
inc
clc
sbb
clc
push
mov
jecxz
fwait
dec
fwait
xor
add
fstps
add
loopne
mov
mov
add
add
add
mov
pop
clc
cwtl
xchg
or
inc
clc
mov
sbb
lods
insl
cmp
push
add
pop
sub
gs
in
xlat
lahf
sbb
mov
jecxz
scas
int
jecxz
inc
clc
mov
mov
add
mov
sar
jle
lods
lahf
std
aaa
push
mov
stc
fs
hlt
or
clc
clc
push
insb
push
mov
sbb
add
add
cmp
and
add
dec
jmp
jo
add
add
int
pop
mov
cmp
add
sub
cs
xchg
dec
adc
add
shl
into
bound
add
outsb
fdivp
repz
cmp
mov
push
add
fsubr
rorb
insb
bound
add
cwtl
push
mov
clc
mov
adc
arpl
add
clc
pop
mov
clc
xor
add
scas
pop
mov
in
lods
sub
clc
cltd
xchg
sub
mov
push
add
xchg
ja
clc
call
clc
sti
movsb
clc
clc
scas
xchg
nop
fisubs
clc
cmc
pop
pop
dec
data16
jmp
test
pop
clc
adc
add
add
sar
clc
cld
pop
mov
clc
mov
cld
xchg
out
dec
and
add
in
decb
into
or
aas
add
leave
arpl
add
gs
xor
add
fcomip
stos
fiadds
clc
in
push
add
mov
jp
clc
loop
inc
add
or
repz
clc
lret
cmp
add
sbb
lock
or
add
fimuls
lcall
clc
mov
add
cmp
lcall
add
xchg
mov
add
shl
out
jle
push
mov
add
mov
add
pop
je
es
adc
add
add
and
test
loop
fidivl
lcall
int
dec
in
xbegin
and
add
dec
push
add
mov
in
out
mov
clc
outsl
inc
clc
bound
add
pop
aam
das
lret
jmp
xchg
push
cmp
rcr
adc
test
inc
clc
fsubrp
jg
sub
push
jmp
ds
cmp
clc
push
clc
jne
dec
pop
push
add
flds
clc
aas
xor
add
mov
clc
cmpsb
clc
jno
add
clc
clc
out
sbb
mov
add
clc
and
add
mov
fadd
clc
lahf
int3
std
sbb
add
data16
ror
inc
clc
rolb
add
add
mov
and
add
add
repz
add
mov
sub
xchg
daa
clc
dec
jo
add
and
add
add
add
pmaxub
add
cmp
or
xchg
mov
data16
nop
add
add
clc
and
add
push
add
lahf
rol
clc
push
fiaddl
clc
out
jle
cmpsb
clc
xor
imul
enter
jle
aam
inc
clc
ljmp
mov
inc
clc
pop
clc
add
add
xchg
jo
add
add
mov
xchg
rorb
ss
fs
mov
lods
sub
add
xbegin
mov
lea
xchg
cmc
dec
pop
jmp
ret
clc
adc
add
sbb
sbb
add
inc
add
add
aas
lsl
add
clc
sbb
add
mov
sub
dec
push
add
pop
es
cs
pop
scas
outsl
push
add
jne
clc
adc
add
movsb
clc
into
push
add
sar
xor
add
add
bound
add
sbb
clc
mov
pop
stos
and
xlat
imul
sti
sbb
mov
pop
pushf
lods
mov
clc
inc
add
loop
sbb
adc
add
lahf
xor
outsb
sbb
clc
ljmp
hlt
jecxz
fs
or
adc
add
and
add
sub
fs
mov
ss
add
imul
cmp
dec
pop
shrl
push
xbegin
repz
xchg
xor
bsr
mov
jmp
xchg
nop
push
xchg
into
inc
add
aad
jns
add
sbb
mov
add
mov
test
jg
jnp
pop
pop
mov
add
data16
fbld
ja
fldt
movsl
clc
pop
adc
add
mov
ret
leave
addr16
cmp
clc
sbb
dec
push
out
or
mov
clc
loop
add
add
idivb
xor
add
clc
adc
clc
ret
clc
push
add
fcmove
mov
clc
sahf
adc
add
clc
adc
add
testb
ss
arpl
add
data16
fdivl
mov
fwait
bound
add
clc
lods
sub
and
add
jle
clc
aas
jns
call
jge
xor
add
add
pop
clc
outsb
jb
add
push
pushf
inc
add
out
aad
clc
adc
add
xor
add
add
or
outsb
or
xlat
adc
add
add
add
popf
pop
pop
jbe
jecxz
push
clc
push
add
pop
sbb
jns
clc
mov
add
clc
mov
sbb
mov
or
std
cltd
stos
addr16
and
add
dec
add
add
cmp
and
add
cmpsl
clc
ret
clc
leave
add
add
push
stos
inc
add
pushf
inc
add
push
add
adc
add
mov
andnps
add
add
adc
add
clc
adc
add
clc
js
fcmovnbe
repnz
pop
push
clc
cmp
add
add
jge
add
cltd
popa
add
sub
xor
add
int3
jp
popf
sar
iret
fbld
add
adc
add
add
cmp
add
clc
sbb
add
cmpsl
clc
pushl
add
dec
inc
add
or
sar
add
enter
clc
xbegin
add
xchg
dec
fisubl
imulb
add
sub
add
cmp
add
clc
imul
add
sbb
pop
roll
add
jne
clc
testb
push
int3
push
popl
add
inc
add
cmpsl
clc
push
jnp
dec
cmp
std
push
and
add
popf
pop
mov
jecxz
adc
add
lcall
xlat
mov
add
xchg
push
shrb
add
gs
push
add
and
add
add
andnps
in
jp
clc
jmp
clc
pop
fwait
xor
add
out
mov
xlat
jp
pop
or
test
repz
js
sbb
and
sbb
jmp
clc
aad
add
add
add
add
add
clc
cmp
add
xchg
adc
repz
jo
add
and
add
cmp
pop
push
add
xlat
mov
out
int
xor
add
mov
jge
loop
jns
cmp
add
xchg
out
push
sub
loopne
icebp
jp
jp
test
push
out
ljmp
clc
ss
scas
insl
xchg
xchg
adc
add
add
imul
fidivs
push
mov
add
and
mov
clc
dec
push
add
jp
clc
nop
push
outsb
fidivl
add
add
leave
mov
dec
pop
ds
add
sar
je
clc
shr
mov
mov
clc
addr16
sbb
add
test
scas
lcall
add
mov
add
sbb
inc
add
pop
and
add
jg
clc
stos
mov
add
push
xchg
fisubl
add
clc
clc
stc
xchg
sti
cltd
or
cmpsl
clc
shrb
xbegin
or
clc
push
cmp
mov
xchg
test
ss
clc
jno
add
insb
push
mov
add
add
and
add
incl
mov
roll
add
jns
push
aas
mov
clc
sub
clc
lcall
xchg
adc
add
clc
mov
clc
mov
lcall
cmp
sbb
add
mov
and
add
add
clc
adc
add
hlt
repnz
fwait
or
fldt
hlt
dec
cmc
jmp
clc
mov
push
add
pop
outsl
push
add
add
push
add
cmp
clc
mov
add
insb
mov
jo
add
clc
cmp
cltd
fs
mov
sub
lods
mov
enter
into
ljmp
push
or
add
add
call
and
add
add
lods
jmp
add
sbb
cld
cmp
clc
cmp
push
bound
add
test
lcall
test
packssdw
mov
pop
sar
test
xchg
das
popf
and
add
lret
push
adc
add
add
out
cli
inc
add
adc
add
mulb
clc
sub
fisubrl
add
decl
clc
jo
add
into
enter
mov
fmulp
xor
add
or
jb
add
add
xor
clc
out
adc
adc
add
or
push
add
scas
sub
adc
popf
shr
xchg
sub
pop
repnz
clc
enter
add
clc
xchg
call
call
add
lods
sbb
add
pop
clc
sarl
pop
cmp
arpl
add
fs
jge
and
dec
int3
cli
leave
xchg
in
jb
add
pop
sub
addr16
jne
clc
addr16
stos
iret
mov
xor
add
add
add
jno
add
hlt
ds
adc
add
stos
add
add
punpckhwd
add
sub
push
mov
clc
pop
filds
clc
add
add
mov
lcall
add
add
adc
add
push
add
inc
clc
ds
clc
or
fbstp
icebp
fcmovnb
clc
cmova
mov
movsl
clc
or
cmp
clc
ror
pop
mov
sbb
test
rclb
add
es
test
adc
jp
clc
mov
clc
call
push
lea
mov
push
add
dec
arpl
add
mov
add
push
add
sbb
pop
fcmovnu
pop
sub
mov
clc
xlat
mov
cmp
add
inc
add
std
cmpsb
clc
jg
mov
clc
cltd
repz
mov
and
pop
mov
sar
mov
cmp
mov
clc
enter
bound
add
pop
lcall
in
out
push
add
std
mov
xchg
cmp
add
sub
adc
add
clc
scas
adc
add
clc
sbb
add
outsb
xor
add
adc
add
lock
lods
push
add
lock
xabort
and
add
lahf
sbb
add
cmpsb
clc
movsl
clc
xchg
push
hlt
and
add
inc
add
cs
cmp
inc
add
mov
clc
jp
clc
xchg
cwtl
push
repz
cmp
ret
lods
hlt
jecxz
hlt
loop
jp
clc
mov
out
sub
dec
lods
pusha
add
jno
add
add
mov
add
jo
add
add
or
add
data16
lods
push
std
jo
add
add
out
je
mov
sbb
bound
add
add
cltd
dec
jmp
and
add
mov
enter
cmp
pop
sti
cmp
mov
popa
add
fcoml
add
clc
jnp
add
jp
bound
add
fistpll
popf
fildll
fidivrs
jp
inc
add
or
add
fidivs
xchg
imul
xchg
cwtl
idivl
or
mov
mov
xor
add
add
addr16
dec
idivl
jle
dec
gs
mov
clc
pushf
cmc
pop
out
pop
mov
lahf
cwtl
or
clc
fsubrl
add
jmp
clc
xchg
mov
clc
and
add
clc
cwtl
fs
lea
es
jo
add
test
sarl
add
adc
add
push
or
cmp
cmp
jne
cmpsl
clc
inc
add
aas
fdivs
lea
addr16
pop
jno
add
jne
push
lcall
lret
aam
faddp
clc
ret
clc
mov
popa
add
pop
cmp
cmp
add
cmp
out
addr16
loop
popf
clc
mov
adc
add
jnp
xor
add
clc
gs
or
xchg
int3
xchg
mov
lcall
clc
jno
add
in
adc
add
test
es
xchg
ret
pop
clc
push
jl
add
mov
and
add
stos
sub
dec
xor
xchg
push
add
lcall
pop
jmp
add
sahf
popa
add
popf
sysexit
aad
add
int
add
mov
add
xabort
clc
mov
clc
sub
xchg
arpl
add
mov
add
ret
clc
stos
dec
adc
add
xor
jl
arpl
add
inc
clc
push
inc
clc
aad
rolb
add
test
lcall
clc
movsl
clc
in
mov
ds
cmp
or
lock
in
lret
fadd
clc
xor
add
add
or
clc
jae
add
push
and
add
add
bound
add
mov
ret
clc
ja
lock
fsubl
addr16
inc
add
dec
inc
add
ret
xor
add
add
xor
ja
sub
or
sub
sbb
movsl
clc
das
mov
cmp
ljmp
repnz
jge
js
and
add
jae
add
add
and
add
pop
xchg
push
push
clc
int3
test
repz
insb
vpcomud
jmp
clc
ret
clc
adc
add
add
mov
add
sub
inc
add
and
add
inc
add
add
add
cld
jo
add
clc
inc
add
testb
imul
clc
xor
add
add
mov
clc
xchg
inc
clc
mov
jl
pop
lahf
push
add
add
popa
add
mov
and
add
clc
mov
mov
lods
jno
add
add
sbb
push
js
add
add
clc
jb
add
cwtl
pop
mov
cmp
clc
hlt
in
data16
mulb
ret
pop
fisubl
add
clc
mov
pop
lahf
xor
add
cmp
cld
cmp
clc
adc
mov
add
add
add
adc
clc
ja
push
sub
fimull
xchg
sbb
add
into
mov
icebp
dec
jbe
adc
add
add
fdivl
add
rcrl
cmp
jb
add
xlat
into
mov
jl
lock
mov
cli
out
push
add
int
pop
leave
or
clc
push
clc
sbb
clc
mov
clc
bound
add
clc
dec
push
add
xchg
enter
add
sbb
add
mov
push
ret
push
and
add
add
aad
xchg
sbb
fdivs
add
cmp
clc
pop
cwtl
push
lret
lods
sub
clc
mov
sub
clc
cwtl
pop
lahf
sbb
mov
clc
push
mov
clc
cli
sbb
lock
clc
adc
add
add
xor
add
add
in
cmpsl
clc
js
lret
stc
inc
add
add
add
xchg
mov
clc
std
fucom
clc
xor
add
add
rclb
popl
adc
add
ret
clc
jb
add
xor
add
imul
sbb
insl
insl
inc
add
ficomps
cld
sub
cmp
clc
sahf
ret
clc
inc
add
jmp
clc
xchg
arpl
add
clc
cmp
jmp
clc
aad
add
xabort
clc
addr16
fs
xor
add
rclb
clc
or
add
fsubr
loope
or
stos
lods
das
packuswb
xchg
xchg
and
add
mov
mul
clc
xor
add
dec
mov
clc
sub
mov
xor
add
sar
clc
dec
jge
push
inc
add
cmp
add
mov
add
jo
add
or
sub
add
lahf
dec
stc
add
add
push
add
sub
clc
mov
mov
clc
clc
clc
loopne
sub
jne
clc
push
and
add
add
scas
jno
add
xchg
inc
clc
and
add
clc
fildl
clc
data16
inc
clc
xchg
outsb
lret
add
add
inc
clc
mov
add
enter
clc
and
add
sbb
clc
into
clc
push
sbb
xlat
mov
pop
push
pop
clc
fists
mov
inc
add
push
cltd
jmp
xabort
dec
mov
adc
add
fldt
push
jg
pop
add
add
jp
add
mov
add
test
xor
add
bound
add
add
add
mov
add
jne
xor
fs
push
add
fs
divl
add
clc
ret
clc
dec
cltd
and
add
mov
int3
push
xor
add
clc
add
add
add
mov
push
add
sar
clc
sub
lea
add
cwtl
call
sub
sbb
clc
inc
add
or
push
mov
cmc
ret
fwait
sbb
or
cmp
add
mov
aam
ja
add
xchg
and
clc
xor
add
sub
clc
cmp
jnp
mov
mov
jp
pop
mov
clc
mov
push
add
jmp
or
pop
sbb
in
add
mov
add
and
jnp
loop
xchg
cwtl
xabort
mov
mov
add
fmuls
bound
add
mov
fstp
jg
add
add
popa
add
fldt
add
scas
push
jg
mov
add
mov
mov
mov
aaa
xchg
cwtl
cmp
and
add
mul
clc
fsubr
xchg
xchg
push
das
mov
clc
nop
out
xchg
jge
push
add
jo
add
add
push
sar
aas
or
add
push
incl
loope
mov
clc
jae
add
sahf
dec
lea
mov
add
shrb
jle
clc
mov
scas
push
sbb
xlat
and
add
test
and
lea
sub
mov
adc
add
ljmp
add
fdivs
fisubs
and
add
mov
add
aas
movsl
clc
clc
int3
arpl
add
jo
add
es
clc
decl
aaa
lock
inc
add
fmull
shr
dec
test
xchg
pusha
add
adc
add
sub
clc
pop
stos
jnp
clc
dec
pop
lods
popf
or
add
mov
sbb
loop
push
add
pop
xor
jae
add
add
mov
add
ljmp
out
xchg
imul
clc
mov
cmp
inc
add
lcall
lret
and
add
add
stc
scas
xchg
fmuls
mov
jb
add
add
mov
cli
mov
iret
mov
cmp
push
clc
sar
fldt
insb
mov
or
clc
push
add
sub
add
sar
fs
decl
addr16
cs
dec
cmp
clc
in
adc
add
add
dec
scas
fbstp
jne
cmp
or
fildll
cmp
scas
in
jns
jo
add
clc
xor
add
clc
cmpsl
clc
cmp
clc
roll
add
sbb
clc
push
dec
in
xabort
clc
mov
cmp
push
clc
ljmp
clc
test
clc
aaa
jbe
sbb
clc
icebp
lcall
test
xor
add
xor
add
add
mov
test
pop
push
add
movsb
clc
cs
or
mov
add
add
clc
mov
addr16
jp
jge
stos
leave
mov
sub
add
pop
inc
add
inc
add
fisubs
add
ja
add
data16
cli
push
sar
jle
stos
xchg
je
add
cmp
fiadds
add
clc
xbegin
shll
push
pop
pop
nop
inc
add
cmpsb
clc
pushf
xor
add
add
mov
fsqrt
scas
cmp
clc
cmp
clc
js
test
adc
add
clc
fistpl
clc
mov
add
push
add
mov
cmc
sar
clc
jmp
rol
clc
add
sbb
clc
cmp
push
push
clc
pop
push
inc
clc
sub
mov
xchg
sbb
pop
xchg
dec
out
call
pop
mov
repz
pop
jbe
int3
mov
std
jne
and
add
xchg
leave
sbb
pop
cmp
inc
add
lods
mov
add
dec
dec
imul
lea
dec
data16
enter
clc
enter
cmp
add
add
dec
fcmovbe
push
push
or
inc
clc
cmp
je
clc
out
mov
jb
add
clc
dec
into
test
clc
call
add
out
in
cmp
or
test
xchg
jecxz
data16
popa
add
lods
outsb
lock
clc
dec
mov
incb
add
mov
or
stc
fbstp
add
lock
push
add
xchg
add
xor
xchg
push
add
mov
xchg
or
jns
clc
cmc
jbe
sbb
clc
push
in
clc
shll
add
mov
add
mov
ss
add
mov
and
add
jnp
jb
add
es
push
clc
jno
add
popf
lret
sbb
add
je
add
fstpt
hlt
sub
add
clc
flds
clc
seto
scas
arpl
add
inc
clc
outsb
cmp
inc
clc
call
xchg
out
mov
add
add
movsl
clc
sub
add
out
fsubrp
mov
cmp
dec
push
clc
stos
push
dec
stc
mov
pop
inc
add
mov
fnstenv
add
add
clc
in
push
jne
sbb
out
adc
add
adc
add
pop
or
clc
xchg
mov
bound
add
scas
xlat
rorb
clc
popf
sbb
clc
xchg
or
iret
add
add
jl
add
ljmp
clc
jle
clc
sbb
add
mov
popa
add
mov
add
inc
clc
sub
add
fistl
fbstp
add
add
arpl
add
dec
aas
xchg
gs
call
or
mov
clc
inc
add
aad
clc
mov
ds
movsb
clc
mov
jbe
mov
clc
hlt
icebp
or
cld
mov
mov
clc
mov
inc
add
mov
sub
enter
mov
add
add
andps
mov
jecxz
jmp
clc
mov
clc
popa
add
mov
mov
clc
out
fwait
inc
add
mov
arpl
add
push
inc
clc
jecxz
decb
clc
sbb
clc
repz
mov
pop
mov
pop
push
add
je
ret
clc
fwait
cmp
enter
add
fwait
pop
mov
xor
inc
add
jb
add
clc
sbb
cmpsl
clc
pop
pop
add
add
push
jnp,pt
incb
add
inc
clc
adc
add
clc
cld
or
arpl
add
add
mov
clc
cmp
add
sar
jg
mov
add
aaa
mov
add
add
clc
jle
mov
clc
adc
cmp
cmpsl
clc
mov
add
fsqrt
in
out
adc
sbb
and
sub
popf
outsl
mov
adc
add
add
mov
add
push
add
sub
cltd
push
add
mov
jbe
clc
xchg
inc
add
movsl
clc
das
ja
clc
inc
clc
xlat
aam
xor
add
ds
xabort
gs
imul
ret
clc
cld
in
xchg
and
add
xabort
in
sub
jns
out
mov
add
adc
add
lcall
mov
add
dec
gs
icebp
mov
cmpsb
clc
addr16
cltd
and
add
sbb
loopne
out
cmpsl
clc
loop
ds
scas
loop
pushf
xchg
jmp
clc
pop
clc
mov
clc
inc
clc
into
xor
pop
push
add
or
cmp
inc
add
cmpsb
clc
mov
mov
add
jno
add
clc
push
push
outsl
lods
loop
jecxz
enter
add
inc
add
jno
add
mov
sub
insb
dec
adc
add
ja
mov
xabort
aas
xchg
inc
add
in
fadd
clc
pop
cltd
call
clc
xlat
jo
add
add
pushf
test
adc
add
add
clc
mov
out
es
test
mov
clc
jno
add
add
loope
jae
add
mov
add
add
mov
add
stos
imul
pusha
add
push
mov
clc
mov
cmp
add
imul
mov
xor
add
clc
push
add
sub
clc
in
inc
clc
pop
fs
addr16
fiaddl
add
mov
repnz
call
add
inc
add
mov
xchg
cmpsb
clc
mov
fldt
add
imul
jno
add
cmp
daa
clc
dec
mov
inc
clc
aad
je
inc
add
pushf
sbb
cmp
cmp
add
pop
clc
in
stc
daa
clc
in
lea
jno
add
add
add
int
cmpsl
clc
push
xchg
test
push
add
add
clc
pushf
std
filds
push
add
sub
add
idivb
mov
clc
hlt
lods
cmp
shr
std
cmp
clc
mov
add
clc
jl
clc
out
jnp
fcomp
push
shll
and
add
stos
add
add
add
lods
lret
and
lret
add
clc
scas
pusha
add
out
adc
add
add
dec
pop
adc
scas
pop
push
enter
inc
clc
inc
add
cmp
pop
je
fs
sub
add
add
loop
mov
clc
in
lret
dec
push
clc
xlat
mov
in
sbb
das
cmp
dec
pusha
add
jg
clc
mov
adc
sub
and
add
push
test
add
aad
dec
aaa
pop
cmp
clc
inc
add
or
test
mov
clc
fsubr
je
clc
inc
add
addr16
test
push
add
pushf
sahf
xor
add
insl
jmp
xor
add
add
mov
mov
mov
mov
je
scas
inc
add
cld
sub
add
es
popf
shlb
add
mov
pop
mov
insb
mov
add
add
icebp
loope
rorl
add
test
cs
movsl
clc
or
out
clc
out
incl
jmp
add
cmp
xchg
testl
inc
add
pop
jmp
clc
into
jecxz
inc
add
lret
ret
clc
mov
clc
mov
lock
add
clc
and
add
push
add
lahf
outsb
out
add
add
clc
push
jb
add
scas
pop
and
add
outsl
fcomps
cmpsb
clc
ja,pt
add
call
clc
jle
clc
js
dec
push
cmp
add
xabort
clc
sbb
clc
mov
scas
jmp
insb
dec
and
add
dec
cmp
clc
xchg
int3
pop
ljmp
cltd
pop
clc
mov
mov
test
add
inc
add
cmp
clc
hlt
ljmp
clc
movsb
clc
and
add
fbld
and
cmp
pop
cmp
add
popf
ret
clc
into
mov
mov
mov
add
mov
add
add
addr16
xchg
call
clc
sbb
dec
xor
add
fistpll
xor
add
push
dec
add
add
clc
dec
pop
clc
jae
add
add
idivl
jl
add
aad
add
add
mov
sbb
ret
clc
js
test
mov
push
pop
clc
hlt
mov
or
xchg
mov
xchg
pop
fwait
adc
mov
pop
clc
cmp
mov
sub
sti
dec
xchg
nop
dec
sub
mov
clc
bound
add
into
inc
clc
jae
add
push
jle
nop
lock
clc
sti
jge
inc
add
or
push
call
fsubl
mov
add
push
add
push
add
xor
add
add
in
push
add
loopne
xor
add
aam
imul
pop
clc
cmp
clc
stc
fucomi
aas
pushf
dec
mov
mov
add
add
idivb
and
add
inc
clc
push
clc
fs
xchg
mov
mov
push
clc
xlat
push
add
and
add
xchg
imul
sbb
and
add
pop
push
push
add
ret
dec
cmp
add
ret
pop
loop
cmp
add
xchg
lods
pop
movsl
clc
mov
clc
nop
mov
add
insl
adc
add
or
add
sbb
dec
mov
pushf
rcl
lods
xchg
mov
pop
xchg
sbb
cmp
stc
jnp
clc
stc
dec
rolb
in
mov
pop
packssdw
jns
int3
pop
ljmp
add
iret
ret
clc
and
mov
clc
fnsave
add
gs
mov
clc
arpl
add
aad
add
or
pusha
add
in
popa
add
sar
clc
in
lea
add
push
loop
das
data16
test
add
fdivrs
mov
xlat
mov
dec
fimuls
clc
add
add
push
inc
add
pop
clc
test
cld
cmp
add
clc
lods
arpl
add
add
push
jb
add
or
clc
pop
clc
test
pop
sar
or
clc
push
clc
std
or
clc
ljmp
movsb
clc
das
icebp
loopne
fs
sar
or
clc
push
mov
clc
inc
add
push
pop
mov
mov
repnz
sub
add
cmp
or
clc
dec
fcomps
clc
inc
clc
ret
clc
mov
add
clc
cltd
lcall
mov
mov
xbegin
add
lcall
add
adc
add
clc
push
jg
cmp
jl
add
jg
mov
das
pop
inc
clc
fwait
xabort
push
xor
add
add
aaa
aas
xchg
mov
test
clc
sbb
push
dec
jmp
clc
mov
xchg
ficoml
and
loopne
mov
cmpsl
clc
std
daa
clc
dec
inc
clc
arpl
add
push
mov
pop
icebp
mov
clc
int
push
cmp
cmp
dec
pop
xlat
and
pop
cmc
xchg
loope
xor
add
push
inc
add
pop
adc
add
clc
int
clc
sar
dec
addr16
ja
clc
out
sbb
clc
jb
add
add
fistpll
cmpsl
clc
stc
cmpsl
clc
sub
add
outsb
dec
outsb
mov
add
out
push
clc
cmp
sub
mov
or
add
add
testb
add
test
add
mov
clc
xchg
in
mov
add
add
sub
add
fs
jp
cmp
test
xor
add
into
jb
add
mov
inc
clc
enter
inc
clc
arpl
add
clc
scas
mov
clc
mov
clc
pop
mov
or
xchg
mov
lret
lock
mov
add
add
lcall
in
mov
jle
add
cmpsl
clc
or
clc
ja
shlb
loop
xchg
cwtl
sub
jb
add
icebp
bound
add
add
cltd
xbegin
arpl
add
add
mov
imul
add
enter
add
clc
repnz
cs
push
xchg
fcmovne
test
push
add
pusha
add
adc
incl
cmp
clc
inc
add
in
push
dec
call
add
pop
pop
scas
sub
icebp
xchg
sarb
dec
unpckhps
lret
mov
add
jb
add
dec
push
add
dec
add
add
clc
or
cli
sar
pop
cmp
xchg
repnz
add
add
addr16
add
add
clc
xbegin
out
std
loopne
xor
clc
sar
scas
dec
fsubrl
ds
scas
out
outsl
pop
outsb
dec
insl
and
add
mov
out
cmc
jecxz
clc
jbe
lsl
add
mov
sbb
in
pop
clc
pop
cwtl
mov
cmpsl
clc
xchg
addr16
cld
mov
cld
clc
mov
add
add
sub
clc
inc
add
ds
fs
dec
or
inc
clc
dec
loop
dec
cmp
and
add
clc
mov
jno
add
outsb
lods
push
icebp
inc
add
test
clc
lret
pushf
sbb
cmp
xchg
sub
clc
int3
loopne
sbb
clc
int3
popa
add
push
add
xchg
ja
fsubs
lret
test
xchg
adc
add
clc
hlt
lret
das
adc
cmp
and
add
push
popa
add
and
adc
add
in
push
sbb
sub
mov
add
add
bound
add
add
ss
sbb
xchg
lods
cli
sub
jge
cmp
jno
add
add
sbb
pop
pop
das
or
clc
in
ja
add
mov
es
cmp
fcoms
clc
xchg
clc
loopne
mov
enter
add
sub
add
clc
bnd
mov
push
mov
clc
cmc
cmp
cmp
add
xchg
stos
jbe
repz
add
cmpsl
clc
aad
lahf
mov
add
add
sar
adc
add
sub
clc
call
mov
ds
add
inc
clc
out
mov
add
xchg
push
fdivrs
clc
and
add
inc
clc
push
xchg
pop
push
fisttpll
test
sbb
inc
clc
fs
cmp
scas
jp
clc
pusha
add
sahf
inc
add
loop
in
imul
mov
pop
fisubs
add
mov
clc
test
inc
add
add
add
clc
fldl
add
lret
adc
clc
mov
fdivrl
clc
enter
mov
xchg
add
add
add
rorb
add
add
call
outsb
pop
jle
dec
pushf
dec
push
sbb
mov
clc
je
clc
shrb
jecxz
aaa
cmp
fsubr
fisubrs
popf
inc
add
add
add
loop
adc
add
lcall
ss
jge
xchg
sbb
sbb
adc
add
add
clc
pop
clc
xor
add
clc
dec
cmp
xor
add
sub
add
add
push
add
xchg
aam
add
mov
add
adc
add
sar
or
add
f2xm1
mov
add
clc
movsb
clc
jg
clc
sbb
mov
sbb
clc
stos
xchg
or
jp
inc
clc
mov
add
mov
jl
mov
aad
mov
clc
mov
xor
add
add
pusha
add
xor
xabort
or
add
mov
lock
mov
cltd
scas
and
add
or
and
add
adc
add
pop
fimull
dec
add
add
int
add
add
mov
lea
sar
jns
cmpsl
clc
ds
ss
icebp
mov
scas
dec
mov
add
std
push
dec
arpl
add
add
cmp
clc
add
add
filds
add
xor
nop
stc
outsl
sarl
dec
and
add
clc
xchg
aas
jmp
xor
add
clc
add
add
add
out
add
add
add
mov
push
sbb
and
sbb
xor
add
dec
jge
inc
clc
or
add
mov
sbb
jp
loop
mov
lods
pop
pop
daa
clc
or
clc
nop
rol
clc
xor
add
add
clc
dec
xor
add
rorb
lcall
ret
clc
loopne
mov
adc
add
lahf
bound
add
add
add
push
jno
add
xlat
inc
clc
int3
popl
push
clc
stos
cmp
hlt
out
cld
repnz
dec
pop
fwait
add
add
sbb
push
push
sar
xbegin
add
repz
mov
clc
aam
or
cmp
stc
in
add
add
mov
je
mul
clc
imul
clc
arpl
add
cmc
or
sbb
add
ljmp
ror
push
add
mov
gs
lahf
xchg
add
add
sahf
hlt
lret
add
es
jne
add
movsb
clc
dec
jl
shrl
cmc
ret
clc
push
push
xchg
in
jb
add
clc
xor
add
pushf
cmp
fsubrs
insl
add
add
clc
insb
cmp
daa
clc
loop
movsl
clc
jns
adc
add
add
pop
push
add
add
clc
iret
and
add
or
jp
add
add
dec
cmp
add
stos
xchg
nop
hlt
dec
data16
or
xchg
adc
add
add
xor
add
clc
stos
stos
fmuls
add
int3
sti
icebp
inc
clc
rcrb
stos
pop
push
insb
out
sub
cmp
arpl
add
clc
xor
icebp
into
stos
setp
jmp
lcall
xor
add
jmp
cmp
jp
clc
fstl
clc
pop
push
add
sar
xchg
cs
xchg
cmp
add
test
mov
ret
clc
das
xchg
aas
cmpsl
clc
or
push
add
inc
clc
ret
out
mov
mov
ret
loop
loopne
jl
and
add
add
jge
cmp
lcall
out
fistpll
add
rcr
in
pop
and
or
mov
cmp
clc
lahf
pop
fs
or
das
ja
clc
pop
aad
cmpsb
clc
add
add
add
shll
scas
pop
out
pushf
dec
mov
rolb
add
lret
pop
hlt
jmp
jmp
dec
out
icebp
inc
clc
stos
xchg
in
sar
das
mov
gs
sub
cmp
and
add
test
xchg
cs
add
testl
gs
and
out
cmc
push
add
sarl
repz
mov
add
ja
sub
cmp
jp
clc
xor
add
jae
add
sbb
sar
stos
cmp
stos
pop
clc
in
fnstenv
ss
add
add
push
imul
add
cmp
inc
clc
cmp
mov
clc
or
clc
inc
clc
dec
sbb
add
xor
add
add
clc
sub
clc
mov
mov
and
add
movsl
clc
and
add
add
cmc
cmp
leave
pop
cld
fstpl
push
mov
ja
cmp
add
insb
clc
insl
fidivl
push
add
outsb
push
inc
clc
inc
add
pop
dec
mov
mov
add
push
add
insb
xchg
pop
pop
imul
int3
ret
cmp
int
add
add
or
cmc
mov
clc
sahf
xor
mov
mov
add
hlt
xchg
dec
or
es
stos
jns
clc
adc
add
lock
jnp
sar
jmp
lock
test
clc
aas
jbe
mov
xlat
out
sar
sarl
add
add
clc
cmp
or
push
push
cmp
and
add
add
xor
movsb
clc
and
add
cmp
clc
data16
cmp
lret
dec
pop
mov
cmp
add
add
jmp
ret
clc
mov
int3
imul
fwait
add
clc
fbstp
imul
sub
xlat
cmp
std
xor
jne
movsb
clc
mov
mov
cmc
and
and
add
clc
add
add
clc
test
stc
mov
aas
or
clc
and
add
bts
pushf
xlat
adc
add
pop
test
add
mov
cwtl
sti
fwait
xor
clc
mov
dec
push
pop
clc
xor
add
hlt
cli
add
sti
mov
push
mov
fs
push
add
lods
mov
add
rorl
add
decb
cmpsb
clc
out
out
sti
fs
out
mov
add
sbb
add
add
push
xlat
dec
jns
add
nop
cmp
clc
mov
popf
jns
add
sbb
clc
push
mov
mov
inc
clc
pushf
mov
adc
add
xor
add
clc
dec
pop
outsb
in
fisttpll
test
add
inc
clc
inc
add
stos
lahf
gs
xchg
sbb
push
enter
sub
clc
add
add
cmpsl
clc
ss
into
mov
add
or
cmp
sub
xor
mov
clc
mov
cmp
pop
aam
add
lods
inc
clc
test
daa
clc
lock
clc
leave
and
add
add
clc
inc
add
mov
popa
add
mov
out
mov
and
add
je
out
insl
pop
inc
clc
or
push
add
and
add
jg
jg
add
or
add
sbb
push
insb
gs
inc
add
mov
add
clc
and
add
clc
mov
or
clc
fisttps
clc
ds
mov
add
mov
and
add
clc
in
ja
clc
in
adc
and
add
mov
mov
xchg
iret
dec
add
cmc
inc
add
std
lods
mov
add
rorl
shrl
aad
imul
add
add
and
add
repnz
cmp
clc
mov
gs
sbb
add
add
mov
jae
add
or
inc
clc
dec
jl
inc
clc
scas
push
popa
add
jge
clc
jns
add
std
dec
movsb
clc
adc
add
stc
xor
add
clc
inc
add
and
add
inc
add
xchg
dec
popf
loope
outsl
or
test
pop
xchg
xchg
movsb
clc
scas
pop
ror
aam
dec
mov
cmp
mov
or
jmp
jmp
call
add
inc
add
outsl
insl
jg
xor
add
or
in
cwtl
sbb
out
mov
xbegin
fstpt
add
xchg
cmp
jae
add
stos
or
mov
sti
xabort
inc
clc
test
ret
push
adc
clc
xor
add
clc
mov
clc
cltd
cmpsb
clc
push
cmp
clc
dec
aad
clc
mov
clc
cmpsb
clc
cmp
hlt
dec
shll
add
sbb
mov
insl
cmc
iret
aaa
fsubs
add
inc
clc
sar
es
into
test
xchg
sahf
ja
mov
pushf
cltd
pop
pop
mov
mov
add
das
into
sub
add
add
pushf
add
add
add
sub
add
mov
fs
jp
cmpsb
clc
or
add
add
inc
clc
xchg
movsb
clc
or
popf
push
outsl
mov
jno
add
xor
clc
jg
and
add
add
pop
negb
cli
loope
aaa
addr16
dec
add
add
or
push
js
repz
cmp
ja
xor
inc
clc
mov
jb
add
clc
cmp
stc
jg
into
or
clc
sbb
repnz
clc
mov
mov
cmp
clc
mov
add
sub
clc
in
aad
clc
mov
add
dec
mov
add
es
xor
add
fwait
lret
pop
aad
mov
add
sub
clc
xor
add
add
test
daa
clc
push
add
cmp
add
mov
iret
lcall
pop
cmp
das
int
or
jg
pop
test
xor
clc
inc
clc
cmpsb
clc
loope,pt
push
lret
cmp
cmc
sar
cmpsl
clc
cmp
xchg
jbe
clc
fs
jnp
repnz
add
das
mov
clc
xor
add
lods
aas
mov
clc
enter
sahf
out
add
jb
add
mov
push
clc
jecxz
cmpsl
clc
xchg
push
sbb
clc
sar
xchg
pcmpgtd
or
add
repz
xor
outsb
sub
lret
clc
mov
test
dec
xchg
jno
add
cld
and
outsb
in
aam
inc
clc
lea
dec
inc
add
push
inc
add
in
inc
add
enter
jecxz
dec
xor
add
add
mov
add
clc
inc
add
addr16
xchg
jae
add
mov
xabort
add
cmp
xchg
std
xlat
sti
sbb
pop
mov
bound
add
clc
xor
add
cmp
mov
clc
jg
add
add
dec
inc
clc
and
add
add
lret
outsb
mov
mov
add
xor
add
add
pop
jle
add
and
add
mov
clc
and
add
add
add
cli
movsl
clc
movsl
clc
ds
ret
clc
movsb
clc
or
add
lods
lret
fsub
clc
pop
cmp
sti
xchg
and
add
insb
imul
insl
pop
mov
clc
popf
dec
bound
add
add
dec
pop
and
add
fildll
pop
push
mov
out
cmc
shld
test
clc
ret
clc
fcompl
add
clc
jbe
clc
ljmp
stc
jle
clc
or
imull
sub
push
and
add
lea
sub
clc
mov
insl
es
repnz
add
add
fwait
push
add
xchg
outsb
icebp
sbb
fidivrs
jne
add
pop
aaa
and
add
add
sbb
add
in
int
clc
incl
add
das
and
mov
clc
mov
mov
pop
clc
sbb
sub
add
mov
es
pusha
add
stos
pop
lret
jae
add
xlat
adc
add
add
in
fnstsw
add
add
clc
xchg
mov
clc
and
add
das
jo
add
ja
clc
dec
sub
clc
pop
fmul
cmpsl
clc
cwtl
and
dec
xchg
add
add
addr16
or
mov
add
sub
shrb
push
cld
jo
add
pop
xchg
lea
add
or
data16
inc
add
mov
clc
addr16
jge
cmp
push
add
pushf
mov
loopne
ljmp
xabort
pop
fsubrl
scas
inc
clc
cmp
mov
sbb
div
and
rolb
add
pop
xor
add
pusha
add
lea
scas
pop
in
cli
inc
clc
xlat
je
clc
inc
add
imulb
mov
loopne
out
xchg
loopne
fldl
sbb
int
mov
mov
mov
clc
repnz
or
ds
inc
add
fisttpl
jno
add
jle
sbb
xchg
gs
pop
xor
add
add
pop
cwtl
popf
adc
daa
clc
sub
mov
add
add
xbegin
das
test
add
add
sbb
sahf
adc
add
pop
jp
jno
add
add
sbb
cmp
sti
or
adc
clc
mov
loop
adc
add
clc
pop
cli
cmp
add
por
clc
sti
mov
lahf
xchg
jns
mov
outsl
iret
mov
ret
push
add
hlt
fmul
push
je
cmp
jge
push
lahf
sahf
xor
add
js
clc
and
add
popa
add
cmpsl
clc
jne
sbb
add
jmp
clc
adc
add
aaa
sub
fcmovne
mov
lret
mov
sub
push
add
adc
add
xchg
daa
clc
sub
addr16
jno
add
add
add
data16
xchg
xor
add
lock
add
rorl
clc
mov
add
add
add
add
in
jb
add
mov
xchg
sbb
aaa
add
lcall
add
dec
fs
push
xchg
mov
inc
clc
cmp
xor
add
call
add
ja
clc
ss
adc
add
std
adc
add
and
add
add
push
add
inc
clc
ss
in
add
add
scas
clc
sti
or
pop
mov
adc
dec
inc
clc
rorb
ficoml
clc
sbb
mov
repz
mov
add
