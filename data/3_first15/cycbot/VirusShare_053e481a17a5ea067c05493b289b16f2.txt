push
out
in
out
in
loop
in
out
in
in
in
loope
in
jmp
loop
mov
loop
call
jecxz
in
loop
in
out
in
jecxz
in
call
loop
and
loop
jo
loop
sub
loop
imul
in
loop
in
jecxz
in
in
in
loope
in
loop
in
jecxz
in
loop
in
call
loop
cmp
loop
mov
in
in
jecxz
in
out
in
call
loop
shl
in
out
in
in
in
call
loop
gs
in
loope
in
loope
in
in
in
out
in
in
in
out
in
loop
in
jecxz
in
loope
in
in
in
in
in
call
loop
fninit
loop
mov
loop
ds
in
in
in
in
in
call
loop
jnp
loop
cwtl
loope
in
out
in
jecxz
in
in
in
call
loop
adc
call
loop
xchg
loop
in
in
in
loop
in
loope
in
in
in
out
in
out
in
jmp
loop
adc
loop
and
loop
in
loop
test
loop
aam
loop
mov
loop
in
loop
sbb
loop
mov
out
in
loop
in
call
loop
mov
loop
pop
in
in
loop
in
out
in
jecxz
in
out
in
call
loop
jge
loop
dec
jmp
loop
and
loop
and
loop
shl
loop
popa
call
loop
sub
loop
jns
loop
push
in
in
out
in
loope
in
out
in
in
in
jecxz
in
out
in
out
in
loop
in
out
in
out
in
out
in
in
in
call
loop
aam
loop
mov
jmp
loop
xchg
in
in
call
loop
xchg
loop
shl
in
call
loop
movsl
out
in
out
in
call
loop
shl
loop
or
loop
sbb
loop
in
in
in
out
in
in
in
jecxz
in
out
in
loope
in
out
in
call
loop
jl
loop
mov
loop
in
out
in
out
in
call
loop
mov
loop
int
loop
js
loop
mul
loop
sub
loop
hlt
in
in
out
in
out
in
call
loop
xchg
loop
or
loop
mov
loop
in
out
in
out
in
call
loop
popa
jecxz
in
out
in
loop
in
in
in
out
in
loop
in
loope
in
loop
in
in
in
out
in
jecxz
in
jecxz
in
in
in
loop
in
out
in
call
loop
jge
loop
scas
jecxz
in
jecxz
in
jecxz
in
out
in
loope
in
loope
in
jecxz
in
in
in
in
in
out
in
jecxz
in
call
loop
nop
in
in
in
in
in
in
loope
in
out
in
out
in
in
in
loope
in
in
in
in
in
jecxz
in
out
in
out
in
loop
in
out
in
out
in
call
loop
sbb
loop
xor
loop
mov
loop
dec
loop
in
out
in
out
in
call
loop
ds
in
jmp
loop
aas
call
loop
loop,pn
in
in
in
out
in
jmp
loop
int
loop
mov
loop
ret
in
loop
in
in
in
in
in
call
loop
sbb
loop
ljmp
in
loop
in
out
in
loope
in
out
in
loop
in
out
in
loop
in
jecxz
in
in
in
jecxz
in
jmp
loop
ds
loop
out
in
jecxz
in
in
in
out
in
loop
in
in
in
jecxz
in
jmp
loop
loopne
loop
and
in
jecxz
in
jecxz
in
out
in
in
in
loop
in
loop
in
in
in
call
loop
xchg
out
in
in
in
in
in
in
in
call
loop
xchg
out
in
out
in
in
in
in
in
call
loop
or
loop
shl
in
loop
in
in
in
loop
in
in
in
loop
in
in
in
loop
in
call
loop
jecxz
loop
shl
in
out
in
in
in
in
in
in
in
loop
in
jmp
loop
inc
out
in
jmp
loop
mov
jecxz
in
out
in
loope
in
in
in
call
loop
adc
loop
jae
loop
jb
loop
add
loop
ftst
loop
xor
loop
inc
loop
in
in
in
in
in
out
in
jmp
loop
inc
loop
in
call
loop
test
out
in
jecxz
in
in
in
in
in
jecxz
in
in
in
jecxz
in
in
in
jmp
loop
cmp
in
in
jecxz
in
in
in
in
in
out
in
out
in
call
loop
loop
sbb
in
in
in
in
in
in
out
in
call
loop
jge
loop
shl
loop
cwtl
in
in
in
in
jecxz
in
jecxz
in
in
in
in
in
loop
in
call
loop
cwtl
jecxz
in
call
loop
inc
jmp
loop
dec
in
in
out
in
jecxz
in
out
in
in
in
call
loop
push
loop
in
out
in
out
in
in
in
in
in
in
in
out
in
loop
in
loop
in
call
loop
pop
loope
in
jecxz
in
call
loop
pushf
out
in
jecxz
in
jmp
loop
shl
loop
or
loop
dec
in
in
jecxz
in
jecxz
in
in
in
in
in
in
in
loop
in
out
in
jmp
loop
mov
loope
in
loope
in
call
loop
mul
loop
pop
in
in
jecxz
in
call
loop
jmp
loop
xchg
loop
jae
loop
and
loop
lahf
out
in
out
in
jmp
loop
shl
loop
add
loop
add
in
in
out
in
in
in
out
in
in
in
out
in
in
in
loop
in
in
in
out
in
in
in
loop
in
call
loop
cmp
loop
in
jmp
loop
pop
jecxz
in
jmp
loop
loop
loop
add
loop
loop
loop
cmp
loop
sub
in
in
call
loop
addr16
in
in
in
call
loop
iret
loop
in
out
in
in
in
loope
in
out
in
in
in
out
in
out
in
call
loop
and
in
jecxz
in
jecxz
in
loope
in
jecxz
in
jecxz
in
in
in
jecxz
in
call
loop
fs
in
out
in
loope
in
in
in
out
in
call
loop
in
in
out
in
out
in
loope
in
in
in
in
in
call
loop
push
in
in
call
loop
lcall
in
out
in
call
loop
mov
loop
addr16
in
in
in
call
loop
aad
loop
fsubp
loop
loop
loop
sub
out
in
out
in
jecxz
in
out
in
out
in
loop
in
out
in
in
in
out
in
out
in
out
in
loop
in
out
in
jecxz
in
loope
in
out
in
call
loop
or
loop
xor
loop
out
in
in
in
in
out
in
in
in
in
in
out
in
loop
in
out
in
out
in
out
in
out
in
in
in
in
in
loope
in
in
in
out
in
loop
in
call
loop
jp
loop
cli
out
in
out
in
in
in
loope
in
call
loop
lret
in
jmp
loop
cmp
loop
jae
loop
shl
in
in
in
loop
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
in
in
out
in
call
loop
cld
out
in
in
in
in
in
out
in
loop
in
jecxz
in
jecxz
in
out
in
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
loop
in
out
in
out
in
call
loop
xlat
out
in
out
in
loop
in
loop
in
in
in
out
in
call
loop
sub
loop
dec
in
in
out
in
out
in
out
in
in
in
out
in
loop
in
in
in
in
in
in
in
call
loop
nop
call
loop
iret
in
in
loop
in
jmp
loop
outsb
out
in
in
in
out
in
out
in
call
loop
lahf
in
in
in
in
in
in
out
in
in
in
call
loop
xor
loop
aam
loop
push
jmp
loop
cli
call
loop
push
loop
in
in
in
in
in
loop
in
in
in
call
loop
inc
loop
in
out
in
loope
in
jecxz
in
in
in
jecxz
in
out
in
jmp
loop
xor
loop
mov
loop
in
out
in
loop
in
jecxz
in
out
in
in
in
call
loop
arpl
loop
push
out
in
out
in
out
in
jecxz
in
out
in
out
in
out
in
in
in
in
in
loope
in
call
loop
dec
loop
in
call
loop
cltd
call
loop
mov
in
in
jecxz
in
loop
in
call
loop
inc
loop
in
call
loop
sahf
out
in
out
in
loope
in
out
in
loop
in
jecxz
in
in
in
loop
in
loope
in
in
in
loop
in
jecxz
in
in
in
jecxz
in
call
loop
sbb
loop
mov
jecxz
in
call
loop
ret
call
loop
clc
out
in
out
in
in
in
call
loop
nop
call
loop
out
loop
mov
loop
cmp
loop
push
out
in
in
in
out
in
jmp
loop
cmp
loop
imul
in
in
in
loop
in
loop
in
jecxz
in
in
in
loope
in
out
in
loope
in
jecxz
in
jecxz
in
loop
in
in
in
out
in
out
in
call
loop
jno
loop
imul
loop
mov
loop
mov
loop
mov
call
loop
mov
out
in
out
in
loope
in
in
in
out
in
out
in
loop
in
loop
in
loop
in
out
in
jecxz
in
out
in
call
loop
shl
loop
mov
jmp
loop
jmp
loop
in
loop
in
out
in
in
in
out
in
in
in
out
in
loope
in
jecxz
in
jecxz
in
jecxz
in
in
in
loop
in
loope
in
out
in
out
in
in
in
in
in
jmp
loop
jne
loop
push
out
in
loop
in
call
loop
into
loop
in
out
in
loop
in
out
in
in
in
loop
in
in
in
out
in
out
in
in
in
in
in
loop
in
jecxz
in
out
in
out
in
out
in
jecxz
in
out
in
out
in
out
in
jecxz
in
out
in
out
in
out
in
out
in
jecxz
in
in
in
jecxz
in
loop
in
in
in
jmp
loop
add
out
in
out
in
out
in
loope
in
loop
in
loop
in
loop
in
loope
in
loop
in
in
in
out
in
out
in
out
in
in
in
jmp
loop
push
loop
in
jmp
loop
xor
loop
and
loop
push
out
in
jmp
loop
dec
call
loop
jno
loop
fsubr
loop
sub
loop
iret
out
in
call
loop
mov
in
in
loop
in
in
in
jmp
loop
and
loop
sub
loop
mov
loop
pop
call
loop
add
out
in
call
loop
popa
call
loop
xchg
out
in
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
call
loop
mov
loope
in
in
in
loope
in
out
in
in
in
loope
in
loope
in
call
loop
ja
loop
and
loop
pop
out
in
out
in
in
in
out
in
in
in
loop
in
loop
in
in
in
call
loop
mov
loop
in
jecxz
in
jecxz
in
loop
in
jecxz
in
out
in
out
in
in
in
in
in
out
in
jecxz
in
out
in
out
in
loop
in
jmp
loop
pop
out
in
out
in
out
in
out
in
in
in
jecxz
in
in
in
in
in
in
in
call
loop
pop
in
in
jmp
loop
mov
out
in
jecxz
in
in
in
in
in
out
in
loop
in
out
in
loop
in
loop
in
in
in
in
in
out
in
jecxz
in
in
in
out
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
in
in
loop
in
loop
in
loope
in
in
in
jmp
loop
dec
in
in
loope
in
call
loop
mov
loop
loop
jnp
loop
shl
in
loop
in
in
in
out
in
in
in
in
in
jecxz
in
out
in
jmp
loop
loope
in
in
in
jecxz
in
loop
in
jmp
loop
pop
in
in
jecxz
in
loop
in
jecxz
in
out
in
jecxz
in
out
in
out
in
in
in
call
loop
loopne
loop
xor
loop
and
in
call
loop
loop
push
jecxz
in
call
loop
mov
in
in
in
in
jecxz
in
in
in
out
in
out
in
loop
in
call
loop
inc
jecxz
in
loope
in
loop
in
out
in
loop
in
in
in
loop
in
out
in
in
in
out
in
out
in
loop
in
loope
in
loop
in
loope
in
loop
in
jecxz
in
out
in
in
in
jecxz
in
in
in
call
loop
ljmp
in
out
in
loop
in
call
loop
mov
in
in
loop
in
in
in
loope
in
jecxz
in
out
in
loope
in
loop
in
out
in
call
loop
aam
loop
and
loop
or
loop
aam
loop
push
out
in
call
loop
mov
loop
cli
out
in
jecxz
in
loop
in
in
in
out
in
out
in
loop
in
call
loop
cmpsl
loope
in
loop
in
jecxz
in
in
in
loope
in
jecxz
in
out
in
call
loop
aas
in
in
out
in
jmp
loop
shl
loop
scas
call
loop
mov
loop
arpl
loop
jo
loop
dec
loop
in
in
in
out
in
in
in
in
in
out
in
out
in
in
in
jecxz
in
loop
in
in
in
loop
in
in
in
out
in
jmp
loop
movsl
out
in
in
in
call
loop
stos
in
in
in
in
in
in
loop
in
loop
in
call
loop
sbb
loop
lock
in
call
loop
lcall
in
out
in
loop
in
loop
in
out
in
in
in
out
in
jmp
loop
aam
loop
das
jmp
loop
adc
loop
mov
loop
out
in
call
loop
mul
loop
fsubp
loop
xchg
in
in
out
in
loop
in
in
in
loope
in
jecxz
in
out
in
in
in
jmp
loop
jno
loop
xor
loop
sbb
loop
push
in
in
loop
in
loop
in
in
in
jmp
loop
movsb
loope
in
loope
in
out
in
call
loop
sbb
loop
jbe
loop
repnz
in
out
in
out
in
in
in
out
in
loope
in
call
loop
cmp
loop
cmp
loop
push
jecxz
in
out
in
in
in
loop
in
jecxz
in
in
in
out
in
in
in
loope
in
jecxz
in
out
in
out
in
out
in
loop
in
in
in
in
in
out
in
out
in
loope
in
call
loop
inc
in
in
in
in
in
in
in
in
out
in
in
in
out
in
out
in
jecxz
in
jecxz
in
in
in
out
in
call
loop
test
loop
cmpsb
call
loop
sbb
loop
sub
loop
inc
in
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
call
loop
fucomip
loop
popa
in
in
jmp
loop
cwtl
out
in
out
in
jecxz
in
out
in
in
in
out
in
call
loop
mov
in
in
jecxz
in
in
in
loop
in
in
in
jecxz
in
in
in
loop
in
out
in
out
in
jecxz
in
loop
in
loop
in
loop
in
call
loop
xchg
loop
in
out
in
out
in
call
loop
loop
loop
fsub
loop
imul
loop
enter
inc
in
in
jecxz
in
out
in
loope
in
out
in
in
in
out
in
loope
in
loop
in
out
in
in
in
out
in
out
in
out
in
loope
in
in
in
out
in
call
loop
push
in
in
loope
in
loop
in
jecxz
in
out
in
call
loop
mov
in
in
jmp
loop
leave
loop
in
jecxz
in
loop
in
out
in
call
loop
ljmp
in
in
in
jmp
loop
dec
out
in
loope
in
in
in
in
in
call
loop
imul
in
out
in
in
in
loope
in
call
loop
vpsrad
int3
loope
in
in
in
out
in
in
in
out
in
out
in
in
in
call
loop
cltd
jecxz
in
in
in
out
in
call
loop
ja
loop
es
in
in
in
out
in
in
in
loop
in
loop
in
in
in
out
in
jmp
loop
mov
jmp
loop
push
loop
in
in
in
in
in
in
in
out
in
jecxz
in
call
loop
shl
loop
dec
in
in
in
in
jecxz
in
call
loop
cmpsl
loop
in
out
in
in
in
loop
in
loope
in
in
in
jecxz
in
out
in
in
in
jecxz
in
jecxz
in
out
in
out
in
in
in
jecxz
in
loop
in
out
in
in
in
loope
in
loope
in
in
in
in
in
out
in
call
loop
lods
out
in
loope
in
jecxz
in
in
in
loope
in
loope
in
call
loop
add
in
in
jecxz
in
out
in
in
in
in
in
call
loop
jge
loop
das
in
in
jecxz
in
jmp
loop
inc
in
in
loop
in
out
in
jecxz
in
loop
in
jecxz
in
in
in
call
loop
test
loop
or
loop
add
out
in
loope
in
out
in
call
loop
clc
loop
in
out
in
call
loop
push
out
in
in
in
jecxz
in
out
in
loop
in
in
in
out
in
in
in
loop
in
call
loop
ja
loop
fucom
loop
aad
loop
sahf
loope
in
in
in
call
loop
daa
jecxz
in
in
in
out
in
loop
in
loop
in
jecxz
in
out
in
in
in
call
loop
loopne
loop
fwait
loop
in
out
in
jmp
loop
jecxz
loop
test
loop
add
loop
push
out
in
jmp
loop
out
in
out
in
in
in
loope
in
out
in
jecxz
in
loop
in
out
in
out
in
in
in
out
in
loope
in
jecxz
in
out
in
in
in
loop
in
out
in
out
in
in
in
in
in
loope
in
out
in
jecxz
in
loop
in
out
in
in
in
out
in
jecxz
in
out
in
add
push
xlat
add
nop
or
add
add
lods
das
popf
jo
inc
add
mov
add
sbb
add
pop
xchg
popa
add
hlt
fwait
xchg
adc
jmp
add
fwait
sub
sbb
sub
add
cmp
add
mov
xor
push
loopne
lds
int
jg
aas
inc
add
adc
lcall
add
add
cmpsl
add
dec
sub
sbb
add
jmp
pop
daa
add
xchg
jmp
addl
push
pop
pop
mov
mov
ljmp
add
lcall
jmp
lcall
jne
mov
popf
daa
add
xchg
loop
add
loopne
outsl
add
mov
add
lea
jmp
add
add
iret
popf
xor
cmp
add
cmc
icebp
xor
jmp
fmull
mov
jg
add
icebp
mov
add
mov
add
test
jbe
adc
jle
dec
mov
jmp
mov
inc
add
add
cs
in
test
jp
add
add
stc
lret
int
add
mov
movb
push
dec
movsl
add
loope
cmp
arpl
decl
pop
data16
clc
fdivl
push
mov
add
add
xor
incl
pop
arpl
decl
incl
add
jb
pushl
jge
add
lods
arpl
ljmp
arpl
ljmp
dec
nop
pop
pop
movl
jl
cltd
cmpsb
add
add
ljmp
lret
fcmovnb
add
addl
add
fstl
add
arpl
incl
out
testl
pusha
add
addl
divl
xchg
push
add
rol
add
mov
xchg
divl
add
out
ret
add
roll
xchg
mov
mov
jb
call
add
pushl
pop
addb
rep
sbb
ljmp
pop
out
sub
fnstenv
jns
inc
add
movb
idiv
sbb
dec
in
jns
add
movsb
add
add
add
pushl
add
pop
pusha
add
adc
lcall
adc
cmp
lods
add
pushl
decl
bound
ljmp
lods
push
add
jmp
add
add
mov
testb
add
push
pop
inc
add
push
add
jne
mov
add
iret
ficomps
in
xor
jp
lds
xchg
cmp
mov
adc
call
jmp
mov
imul
lcall
pop
mov
cld
xor
pushl
add
inc
add
or
call
incl
adc
incl
ja
sahf
ds
mov
adc
add
dec
pop
popf
pop
sub
add
sbb
jecxz
movsl
add
add
inc
add
ljmp
sbb
add
mov
jb
inc
add
add
sub
movb
add
mov
jmp
sub
push
cmp
adc
push
outsb
lds
xchg
movl
add
movsl
add
add
ja
cmp
roll
inc
add
push
dec
insl
xchg
jo
incl
pop
add
mov
xor
decl
add
mov
add
rolb
add
add
loope
mov
add
sub
or
mov
fsubl
outsl
mov
jg
and
call
mov
test
movl
incl
lcall
mov
stc
inc
add
das
leave
dec
icebp
fldl
push
pop
add
ljmp
and
decl
lods
in
add
add
dec
pushf
jecxz
mov
popa
add
jb
dec
add
fistpl
add
jns
add
mov
cld
js
add
add
push
add
scas
shl
add
or
push
add
mov
add
and
jmp
aas
push
add
lahf
jmp
cmp
add
inc
add
add
cld
out
jo
ljmp
add
daa
add
call
mov
add
mov
pop
insb
dec
mov
int3
fimuls
decl
repz
add
mov
add
xchg
addl
out
mov
push
add
cltd
or
sti
fistpl
aaa
xchg
mov
mov
dec
dec
dec
jge
sub
dec
mov
sbb
xchg
movl
lods
cli
add
idiv
repz
xlat
fildll
lea
lea
cmp
add
adc
lcall
rcr
pushf
xchg
and
pushl
sti
ror
dec
shl
inc
add
stos
sar
pusha
add
push
add
repnz
cli
popa
add
sti
cmpsb
add
rcll
add
add
mov
add
sbb
std
inc
add
add
push
add
push
add
cmp
dec
add
std
pop
jecxz
xor
add
pop
xchg
hlt
dec
inc
add
add
add
sub
cmpsl
add
clc
inc
add
mov
movsb
add
cmp
jmp
dec
jg
add
call
popf
inc
add
xor
inc
add
sbb
std
fidivrl
lcall
movb
sti
daa
add
lea
call
jmp
add
int
popf
addb
add
lahf
out
push
add
push
add
test
outsl
or
xor
dec
shr
cmp
jl
decb
clc
jae
jmp
add
xlat
inc
add
add
pushf
negl
pop
inc
add
call
sbb
stos
cli
outsb
scas
or
add
iret
out
in
jae
jmp
add
testb
rolb
jnp
add
lds
enter
add
addl
add
add
add
push
mov
out
addb
add
add
pop
ljmp
add
pusha
add
roll
sub
add
xchg
lret
cmp
in
mov
xchg
sarb
sub
cmpsb
add
sti
pop
jle
mov
pusha
add
jno
cmp
add
loopne
jle
addb
add
cmp
add
scas
jp
fwait
addb
cmp
and
mov
xlat
lret
xor
pushl
jl
add
cmp
pop
xchg
add
cmp
sbb
mov
add
add
xor
ljmp
add
outsb
xor
jmp
add
lcall
xchg
ds
add
mov
pop
repz
adc
add
push
addb
pop
sub
addb
add
add
add
in
inc
add
sbb
cmp
add
adc
jmp
push
add
add
pushl
js
add
xchg
mov
ljmp
std
xchg
push
add
addb
add
out
jmp
add
inc
add
lea
scas
sti
mov
neg
xchg
aas
inc
add
rcll
push
xor
jb
lcall
add
lea
cltd
xor
push
add
pop
push
add
std
jbe
insb
mov
mov
in
out
lret
arpl
inc
add
inc
add
or
cmc
push
aad
add
int
cmp
pushf
jb
pushl
add
fimuls
or
pop
ja
xor
incl
add
pushl
dec
sbb
inc
add
icebp
repz
out
dec
add
dec
mov
add
adc
jmp
js
add
add
add
sahf
popa
add
pop
roll
add
add
ficoml
fildl
decb
and
ljmp
sbb
sub
in
jbe
add
xchg
cmpsl
add
jecxz
dec
pop
int
add
fcoml
lds
cmpsb
add
scas
imul
push
adc
call
add
add
pushl
dec
out
arpl
incl
out
jno
call
rolb
repnz
movsb
add
xchg
or
add
out
xor
call
in
test
scas
fucomip
jl
test
mov
insl
int3
lock
minps
jge
add
dec
and
jmp
movsb
jle
or
out
out
mov
sub
push
push
push
call
test
jne
push
push
push
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
decl
dec
sbb
add
aad
add
div
and
mov
fisttpl
fisttps
add
add
jb
inc
add
cmpsl
add
orps
cltd
negl
jle
mov
js
and
pushl
popf
lea
add
cmpsl
add
cmpsl
add
pushl
mov
cld
xchg
push
popa
add
sbb
push
add
pop
or
aas
repz
jmp
mov
add
mov
push
push
sbb
or
loopne
cmp
xor
dec
addb
add
or
leave
outsb
sbb
add
xchg
scas
mov
jae
mov
add
add
inc
add
fdivs
lcall
jmp
add
add
cmp
incb
call
and
pushl
add
bnd
jecxz
sahf
sti
aaa
mov
sti
cltd
imul
pop
pop
aas
inc
add
and
call
add
mov
data16
je
add
add
call
add
jae
enter
hlt
addb
imulb
pop
call
cmp
cmp
add
sahf
adc
incl
add
insl
mov
inc
add
call
in
jl
xor
jmp
add
jge
push
sub
add
dec
in
mov
add
pop
sub
fdivrs
add
shrb
inc
add
enter
add
or
in
push
iret
push
sbb
fistpll
add
adc
add
addb
jae
incl
dec
movsl
add
pop
sbb
add
add
add
add
ds
or
pop
add
lock
scas
icebp
movb
data16
fistpl
jecxz
add
cmp
mov
add
add
add
fdivl
add
arpl
call
das
sbb
pop
frstor
push
loopne
inc
add
fistl
jmp
add
in
or
jl
add
add
stc
jge
or
and
add
pop
mov
loope
hlt
sub
shlb
hlt
ret
add
add
add
and
decl
sbb
jmp
scas
cmp
xor
jmp
add
data16
adc
mov
ljmp
sbb
add
mov
addl
cld
in
jns
in
pop
loop
mov
add
push
cmp
add
mov
jl
jb
pusha
add
xchg
popa
add
mov
push
test
cmp
jg
imul
pushl
jmp
add
add
pushl
add
mov
add
aam
add
dec
push
mov
mov
add
cltd
add
add
jmp
pushl
add
lea
insl
ss
sbb
add
jmp
cmp
mov
pushl
xor
pushl
decl
sub
add
decl
aam
push
mov
lret
xor
mov
std
push
ret
add
icebp
lcall
cli
push
add
sbb
addl
dec
int
jle
rcr
cli
stc
decl
int3
sub
stc
movsl
add
negl
cs
bswap
inc
add
fcmovnu
hlt
pop
jae
pushl
add
outsl
inc
add
add
roll
add
stos
mov
aad
les
add
loopne
jae
jg
add
mov
add
push
jg
sbb
adc
iret
rclb
call
aam
add
add
add
daa
add
imul
sahf
into
rcl
jno
lcall
daa
add
add
add
add
inc
add
into
push
add
add
stos
arpl
decl
push
xchg
lcall
ljmp
addr16
mov
dec
cmp
stc
fcmovne
or
sub
std
add
add
mov
add
adc
push
jl
div
mov
or
or
ffreep
add
push
pop
mov
add
fildl
ficompl
sub
add
mov
jne
cmp
jnp
adc
inc
add
add
jns
popf
js
cmpps
and
sbb
xor
ret
add
add
push
jnp
add
add
decl
add
jnp
test
aas
clc
push
jg
pusha
add
push
add
jg
mov
add
add
stos
mov
jg
add
addr16
jmp
outsl
pushf
sbb
add
add
mov
and
add
add
call
add
cmp
add
add
popa
add
scas
dec
aas
jle
mov
sub
mov
add
roll
add
sbb
in
push
xor
jmp
add
js
add
inc
add
add
fildll
addl
add
mov
add
test
add
decl
movb
add
enter
call
movb
add
push
pop
add
or
cmp
add
mov
push
add
nop
sub
add
sbb
add
clc
ret
add
cmc
mov
add
xor
call
add
push
add
movl
lock
addb
add
add
add
add
cld
adc
jmp
add
mov
add
push
add
pop
scas
inc
add
sub
cli
cmp
mov
pop
testb
les
inc
add
imul
ljmp
enter
mov
xchg
and
add
xchg
sti
xchg
inc
add
add
add
call
add
es
xor
call
push
cmp
lcall
pushl
push
add
inc
add
pushl
add
pop
data16
push
jge
dec
lods
push
add
mov
pushf
insb
adc
mov
jno
call
iret
adc
jmp
and
mov
pusha
add
aad
xchg
das
xor
incl
ret
loopne
dec
cmp
or
addb
add
jl
stc
mov
les
cmpsl
add
add
push
add
mov
in
mov
mov
inc
add
fstl
pop
les
movsb
add
fimull
stc
jl
add
dec
dec
inc
add
sub
add
incl
rep
fxch
dec
fwait
rolb
fs
push
add
lds
leave
cwtl
inc
add
xor
mov
fldcw
mov
add
dec
mov
xor
jmp
aaa
adc
call
in
xchg
add
xchg
lock
ljmp
add
mov
ss
in
cmp
add
and
ds
cmp
fstps
popa
add
mov
add
jne
cld
jbe
add
nop
daa
add
or
test
inc
add
sbb
je
mov
add
add
pop
sbb
cld
sahf
add
decl
inc
add
iret
push
add
push
add
mov
dec
and
lcall
push
jne
mov
add
mul
add
add
or
lcall
and
jmp
lret
addb
add
add
call
addb
add
dec
aad
add
lret
jle
jb
pushl
add
pop
add
add
jmp
add
push
add
repnz
push
add
sbb
add
inc
add
add
incl
incl
add
nop
push
mov
add
add
inc
add
inc
add
es
mov
std
rorb
mov
sub
push
jne
and
add
add
lcall
add
insb
addb
mov
addb
add
faddl
divb
add
int
add
int
sbb
add
incl
mov
and
decl
clc
ds
decb
pop
add
push
add
pushl
call
jnp
add
mov
loope
push
shlb
add
sbb
inc
add
ret
add
ds
lods
loop
push
dec
adc
jbe
insb
dec
jmp
movl
mov
in
addb
enter
and
cltd
dec
icebp
in
sub
inc
add
stc
pop
ret
add
adc
incl
add
lds
out
xchg
movl
std
lods
lret
insb
popa
add
mov
xor
jmp
add
add
or
add
cmp
ss
add
icebp
pushf
add
lcall
add
inc
add
push
add
fcoms
add
fsubp
add
jecxz
sub
bound
lcall
arpl
decl
int
sbb
add
cs
mov
add
add
adc
jnp
add
bound
decl
nop
add
xor
mov
adc
add
imul
out
dec
mov
or
dec
pop
data16
add
test
stos
or
add
iret
jecxz
jge
loope
mov
fsubrs
frstor
add
lea
push
add
lahf
fistpll
incl
jg
pop
push
in
imul
add
cmp
ljmp
add
push
add
or
out
push
fnsetpm(287
add
lcall
fdivr
hlt
scas
push
lret
cmp
int3
mov
add
movsb
add
sub
add
add
divl
add
inc
add
add
insb
ja
add
decb
inc
add
out
jns
addb
xor
jmp
xor
add
add
decl
xlat
divb
lods
arpl
ljmp
add
fnstsw
cmpsb
add
add
push
push
pop
xchg
ficoms
add
in
inc
add
adc
call
pop
aad
add
cwtl
fbstp
lcall
add
add
scas
jns
adc
xchg
mov
les
cmp
add
pop
inc
add
sbb
stos
fists
dec
push
add
mov
add
add
add
ficomps
testb
mov
clc
add
pushl
arpl
mov
sub
jle
add
sbb
insb
xchg
testb
add
add
mov
add
xor
in
ds
add
movsb
add
lods
es
js
add
lcall
add
dec
fistpl
jl
add
add
inc
add
repnz
cmpsb
add
ljmp
add
add
add
decl
add
loope
lods
loope
cltd
jl
bound
jmp
aaa
popf
imul
fnsave
add
jmp
mov
inc
add
add
push
cmp
inc
add
inc
add
insl
arpl
inc
add
loope
scas
mov
add
pusha
add
sub
add
jmp
sti
bnd
push
add
mov
cmp
inc
add
add
rcrb
jecxz
out
sbb
sub
add
ja
mov
add
add
insb
mov
add
std
loop
nop
mov
cmp
add
xor
incl
jmp
add
mov
pushl
add
inc
add
mov
add
lcall
mov
adc
push
mov
add
rorl
not
mov
jns
and
ljmp
add
sar
mov
mov
mov
push
lds
pop
adc
mov
pop
mov
jecxz
xchg
lods
push
repz
movsb
add
lcall
mov
mulb
add
add
icebp
movl
scas
push
mov
mov
ja
add
or
sbb
xor
ljmp
stos
roll
add
lds
cmp
and
or
add
add
mov
pop
lcall
ficoms
add
dec
or
decl
rclb
add
ljmp
int
push
out
xlat
mov
aas
jmp
cmp
inc
add
add
mov
add
add
int3
in
sub
sahf
xor
jmp
jne
add
add
jmp
xchg
mov
and
in
call
xor
cmp
add
add
dec
insb
jae
jmp
dec
pop
cmp
adc
call
add
out
dec
inc
add
mov
add
add
jns
add
sub
add
inc
add
add
rolb
cmc
cs
add
xchg
add
lret
pop
fildl
vmread
arpl
jmp
add
shl
add
add
mov
lcall
push
mov
pop
push
add
incl
mov
add
loope
sahf
addb
add
jp
inc
add
inc
add
push
add
test
fwait
add
incl
std
aad
add
inc
add
add
push
bound
lcall
dec
cwtl
ja
test
out
xchg
in
adc
pushl
sbb
add
out
cmp
call
pop
jbe
out
ljmp
mov
add
add
sbb
add
int
adc
jmp
add
xchg
mov
add
lcall
add
add
adc
add
push
mov
or
add
dec
loop,pt
std
addb
sahf
hlt
xchg
ja
add
push
add
data16
add
inc
add
outsl
test
sbb
add
or
fwait
out
jmp
add
decl
cmp
add
data16
or
sahf
inc
add
ds
fnstcw
ret
add
sar
inc
add
jge
lock
call
or
or
repnz
shll
add
addb
add
xchg
daa
add
xor
lcall
lods
jmp
add
push
ljmp
add
cmp
add
mov
xchg
jg
aas
in
mov
add
inc
add
movsl
add
das
sbb
pop
repnz
add
xchg
sub
inc
add
add
pop
sub
adc
fnstcw
ret
add
sub
add
fbld
in
mov
or
jmp
jnp
inc
add
mov
je
sbb
ljmp
int3
dec
cs
add
popa
add
push
add
enter
mov
push
stos
movsl
add
ficoml
mov
ret
add
decl
add
insb
add
jo
ljmp
add
shll
add
ljmp
add
mov
sub
sub
add
rorl
testl
pop
roll
leave
aas
stc
dec
popa
add
mov
add
incl
add
push
adc
outsl
ss
add
cmc
jne
mov
or
ficomps
add
add
mov
inc
add
and
in
sub
lcall
jecxz
dec
push
add
mov
and
call
out
adc
ljmp
add
mov
sahf
call
loop
ficoml
add
push
fstpt
jnp
mov
add
add
inc
add
mov
fsub
add
out
pop
jae
mov
call
popa
add
movsb
add
ret
add
add
lahf
aam
add
xor
decl
inc
add
add
xlat
scas
loop
dec
dec
out
xchg
xor
jmp
add
xchg
and
clc
sbb
add
add
in
jmp
sub
xlat
sti
jnp
dec
outsb
into
jns
add
data16
mov
bound
mov
add
pop
cmp
addb
add
in
movsl
add
fwait
data16
and
cld
or
inc
add
enter
outsb
loop
xor
mov
dec
sub
sbb
or
add
add
dec
imul
sub
incl
sbb
add
mov
add
mov
add
pushl
add
aaa
mov
add
inc
add
fisubl
incl
sbb
ja
movsb
add
test
mov
add
mov
add
mov
in
sbb
ljmp
push
add
shrb
sub
jmp
add
add
sub
jmp
adc
cmp
hlt
add
decl
push
sbb
push
add
lock
decl
add
jg
xchg
or
ljmp
inc
add
and
lcall
mov
ss
push
add
in
xor
mov
insb
pop
cmpsb
add
add
xchg
mov
add
mov
add
add
in
sbb
and
int3
loope
add
js
out
mov
jo
call
and
loop
sti
pop
mov
in
inc
add
add
push
out
sbb
add
cmpsb
add
jp
push
jle
test
rcrb
inc
add
call
outsl
cmp
add
dec
lret
xor
dec
addb
and
call
roll
xor
add
mov
cmp
rolb
aad
and
decl
in
push
add
sbb
cmp
jne
inc
add
shlb
add
fwait
mov
push
mov
in
push
add
add
mov
inc
add
cs
js
add
cld
in
daa
add
jbe
add
movsl
add
mov
mov
sbb
jae
lcall
pushf
sbb
in
pop
nop
sarb
mov
shll
add
imul
xlat
addb
lea
sti
mov
add
add
lret
add
or
decl
loope
xor
xchg
fldln2
dec
mov
add
add
nop
scas
into
movsl
add
push
add
dec
dec
add
add
dec
add
mov
rolb
add
inc
add
fsubrp
pause
call
jns
stc
mov
add
cwtl
ds
clc
dec
movsl
add
add
add
loope
lcall
stos
push
add
cmp
add
push
add
mov
add
and
jmp
cmp
add
mov
xchg
sahf
sarl
push
add
in
add
pushl
neg
push
cmp
add
movl
push
loopne
outsb
add
jmp
add
add
sub
push
pop
push
arpl
decl
and
decl
minps
add
dec
pop
lods
jbe
push
add
mov
add
and
call
decl
mov
add
cwtl
push
jge,pn
mov
call
add
repz
add
fsubrs
test
jo
lcall
add
stc
ror
adc
jmp
add
loope
iret
jmp
mov
js
loope
adc
lcall
lds
and
pushl
add
out
ss
lcall
jle
pop
pushf
sbb
add
call
inc
add
inc
add
pusha
add
popf
movb
pop
jae
call
pop
push
imul
push
add
mov
adc
lcall
pop
add
add
mov
inc
add
mov
repnz
add
repz
pop
dec
add
dec
ucomiss
add
hlt
loop
stos
cmp
add
scas
dec
adc
ljmp
in
or
inc
add
cwtl
sbb
add
cmp
pushl
add
lcall
mov
ljmp
arpl
jmp
add
add
cmp
add
call
call
or
pusha
add
es
add
mov
add
incl
lcall
decl
xchg
ss
sbb
push
pop
mov
add
mov
add
call
add
bound
incl
add
add
loopne
notb
outsl
dec
mov
add
sub
pop
mov
add
fidivrl
movb
jb
dec
movsl
add
add
jl
add
xchg
pushf
das
lret
loopne
stc
add
jmp
add
cld
add
fiadds
add
pop
in
or
add
add
dec
outsl
popf
push
add
xor
inc
add
divl
ss
inc
add
jmp
fbld
lcall
xor
decl
sub
pop
mov
test
mov
stos
js
ficomps
in
out
or
jp
add
or
in
dec
ja
add
lahf
montmul
cmpsb
add
add
outsl
inc
add
test
mov
fdivl
sbb
insb
inc
add
mov
add
lods
idiv
cmp
adc
add
scas
lea
lock
add
and
ljmp
das
cmp
add
pushl
add
std
movsb
add
mov
bound
jmp
add
jg
aam
inc
add
add
inc
add
into
out
lods
movb
mov
into
jne
rolb
movsl
add
inc
add
mov
add
pusha
add
jbe
sbb
xchg
and
decl
insb
ffree
add
inc
add
jbe
out
cmp
pop
cmpsb
add
add
pushl
add
push
out
mov
loop
push
sbb
loop
mov
add
cmp
add
jo
pushl
xor
add
add
cli
push
lahf
xor
decl
push
flds
pushl
decl
movb
test
lcall
add
lods
dec
mov
enter
inc
add
pop
out
add
inc
add
out
push
imul
add
jl
fisubl
cld
lods
pop
inc
add
add
or
pop
mov
mov
or
sbb
jmp
add
inc
add
jne
in
push
add
outsl
sbb
add
add
add
add
jmp
add
add
lods
adc
call
jmp
roll
xlat
xor
lea
aas
ss
fst
mov
add
shl
inc
add
int
sbb
mov
add
sub
add
add
test
rolb
daa
add
sbb
stc
into
jmp
add
pop
mov
add
jns
add
into
mov
add
rolb
add
popf
rcr
addb
movsl
add
jbe
mov
fwait
sub
mov
sbb
rcrl
pop
adc
decl
data16
add
mov
add
push
add
and
push
movb
dec
fsubrl
jmp
sbb
add
push
add
movsl
add
and
add
add
addb
push
add
mov
lods
mov
push
sbb
add
jmp
add
incl
add
push
popa
add
mov
pop
lret
dec
fmuls
cmp
mov
add
add
adc
add
aaa
mov
add
add
pop
add
dec
stos
xchg
and
addl
or
lcall
ret
add
add
pop
jae
call
notb
add
mov
add
repnz
ds
mov
add
test
cmp
add
inc
add
std
rcll
insb
lds
dec
xor
ljmp
add
mov
xchg
sti
add
add
jbe
addb
inc
add
mov
add
add
add
add
ret
add
add
sbb
mull
scas
in
enter
add
add
popf
fcomps
incl
add
adc
jmp
shll
cmpsb
add
pushl
lcall
add
add
iret
jge
test
int3
jbe
add
jmp
add
add
in
xchg
in
lret
cmp
add
mov
mov
add
pop
and
lcall
pushf
dec
mov
add
xor
call
in
push
in
iret
jb
jmp
cld
mov
enter
add
fwait
lods
xor
mov
xchg
lahf
inc
add
out
test
adc
jmp
add
fsubp
add
aad
add
fldt
add
mov
cmp
call
imulb
imul
pop
add
mov
add
push
add
sub
in
daa
add
or
push
jo
jmp
add
dec
sbb
xchg
outsl
repnz
xchg
push
add
enter
push
dec
push
mov
push
arpl
jmp
call
push
xchg
pop
xor
fldenv
repnz
pushl
mov
push
mov
repnz
cmp
lods
jno
jle
add
pushl
xchg
aaa
xchg
fnsave
sub
mov
add
fidivrl
jbe
xchg
repnz
incl
push
add
fnstenv
add
mov
add
add
xchg
stc
shll
dec
pop
add
pushl
call
add
pop
jns
outsb
pop
movb
in
mov
cmp
add
push
xor
add
xchg
rcrl
cltd
ret
add
mov
add
inc
add
jb
dec
sbb
xchg
pop
sbb
xor
jmp
call
xor
repnz
sub
add
add
movb
add
add
add
das
inc
add
add
pop
add
pop
addl
push
sub
stos
das
repz
push
add
xor
jmp
add
add
arpl
cld
pop
iret
out
into
nop
stos
mov
data16
sbb
ds
jno
pushl
push
adc
call
add
test
mov
xchg
ss
add
add
gs
inc
add
pop
daa
add
add
cmpsl
add
imul
enter
addb
addb
add
cmp
add
int
test
ret
add
xchg
roll
adc
pushl
ljmp
nop
ret
add
cmp
inc
add
jmp
loope
popf
jl
cwtl
cmp
jne
xor
decl
add
mov
xchg
icebp
ja
in
push
add
add
ljmp
lds
mov
add
lcall
inc
add
or
sub
ss
add
lds
roll
sub
cmp
push
add
pop
popa
add
cmc
test
jp
add
add
pushl
add
cli
or
sub
pushl
add
cmp
add
pushl
movl
outsb
dec
shr
mov
mov
jbe
pushf
pop
add
incl
add
out
dec
out
cld
pop
inc
add
lods
jle
inc
add
push
ja
add
add
push
sub
add
mov
hlt
mov
ja
add
imul
xor
add
mov
or
add
ret
add
add
xor
add
les
nop
mov
adc
jmp
mov
dec
lea
add
mov
pop
inc
add
fwait
je
lret
test
shlb
mov
add
movsb
add
dec
sbb
arpl
jle
into
cmp
add
add
pop
xchg
fwait
mov
out
cmpsb
add
add
mov
mov
push
mov
mulb
pop
cli
data16
lcall
sub
mov
inc
add
icebp
fnstcw
bound
jmp
std
pop
adc
mov
add
popa
add
ja
add
testl
xor
lcall
popa
add
loop
add
incl
add
cmp
in
push
movb
add
aam
add
jg
add
aaa
sahf
loope
jp
add
fisubs
add
mov
add
xor
add
xor
push
add
add
push
add
xor
add
add
push
dec
rolb
cmp
add
mov
dec
xlat
mov
outsb
in
lods
arpl
call
daa
add
jmp
add
lcall
ljmp
add
cs
aad
add
addb
add
push
pop
std
leave
stos
test
add
inc
add
or
add
sub
ljmp
call
jbe
add
add
xor
decl
movb
xchg
imul
dec
inc
add
add
ds
xor
std
in
cld
bound
lcall
inc
add
sbb
xchg
mov
xchg
test
les
inc
add
movsl
add
and
cmp
fsubrl
cwtl
hlt
jbe
xchg
mov
decl
xchg
arpl
jmp
dec
insl
out
or
fildll
add
lret
jle
int3
xchg
and
and
ljmp
jl
add
jbe
add
arpl
cmp
add
xor
pushl
sub
jns
add
add
loope
outsb
push
add
adc
pushl
lods
rcrb
movl
imul
sbb
inc
add
fwait
jns
in
jb
mov
add
mov
test
test
adc
pop
test
fxrstor
push
mov
test
out
aaa
sub
xor
xchg
add
cmp
add
and
ljmp
inc
add
xor
lcall
xchg
fsubs
call
out
or
add
xchg
outsl
mov
fidivl
pop
pop
mov
adc
fimull
icebp
push
rolb
sbb
add
mov
xor
jmp
push
add
inc
add
xlat
xchg
push
xchg
xor
ljmp
add
call
addr16
add
jl
adc
ljmp
ret
add
data16
dec
push
sbb
sarb
add
add
adc
ljmp
jbe
pop
inc
add
add
jno
ljmp
add
or
add
sbb
roll
add
popf
xchg
pop
xchg
xchg
pop
stos
dec
sbb
add
call
jo
incl
outsl
scas
add
pushl
mov
sbb
add
xchg
mov
add
cmp
pop
mov
add
adc
decl
mov
incl
mov
ljmp
add
jno
decl
adc
add
jmp
add
add
popa
add
ds
mov
aas
out
xchg
mov
xchg
and
ljmp
sbb
sub
jo
jmp
cli
push
add
sub
test
push
add
imul
dec
or
jmp
addr16
sahf
jnp
add
jecxz
lock
out
sti
add
push
popf
adc
inc
add
cli
out
add
lcall
xor
inc
add
sbb
sahf
sbb
jns
fwait
lret
nop
cltd
pusha
add
jbe
pop
sub
out
scas
jns
mov
data16
add
imul
add
pop
mov
add
lods
sbb
add
add
pushl
test
fstl
add
push
out
cld
arpl
decl
and
mov
insb
or
add
aaa
mov
add
aas
push
push
add
add
daa
add
pop
add
sub
ljmp
ds
add
add
fbstp
movb
inc
add
les
xchg
add
das
cli
clc
scas
mov
pop
add
mov
decl
push
add
push
pop
ja
sbb
adc
incl
ss
ret
add
add
add
cs
xlat
cwtl
out
dec
cmp
pushf
add
ljmp
jmp
call
add
xchg
je
add
xchg
fnsave
lock
jmp
add
idiv
pop
mov
pushf
fwait
call
in
loop
aam
push
pop
jl
add
movl
lahf
jmp
mov
jne
add
add
jg
mov
and
insb
outsl
mov
add
add
add
rolb
adc
jg
adc
push
scas
imul
add
cli
rcr
xor
pushl
sub
push
mov
add
dec
mov
imul
push
add
add
xor
cmc
mov
inc
add
dec
roll
add
sbb
add
pushf
dec
popl
dec
mov
dec
and
mov
lods
sarb
add
add
pop
add
in
xor
pop
sub
add
xchg
sbb
xchg
xor
cmp
lret
jno
incl
dec
roll
jg
mov
dec
sub
bound
pushl
push
and
call
add
add
pop
jle
cmp
cmp
loop
jne
int3
mov
adc
decl
xchg
pop
pop
inc
add
dec
lret
xchg
adc
push
cmc
cmp
add
mov
and
ljmp
jns
add
arpl
incl
pushl
and
lcall
or
mov
call
xchg
cmpsb
add
jg
xor
dec
dec
addl
pop
push
add
sub
add
adc
mov
add
xor
incl
dec
in
add
add
add
ljmp
mov
jns
add
push
add
mov
adc
jmp
dec
out
pushf
or
or
cmc
movsb
add
rcl
and
jmp
add
cmpsl
add
or
paddsw
mov
add
std
ljmp
bound
call
pop
mov
jb
fcmovne
inc
add
data16
fldenv
data16
add
fildll
fisttpll
repz
sbb
and
cmp
jl
ja
add
decl
les
push
add
jnp
stc
je
sub
add
ja
add
mov
add
add
mov
lahf
push
add
stc
xchg
pop
add
push
xchg
stos
push
add
cmp
sbb
add
sgdtl
ljmp
inc
add
xchg
hlt
nop
aaa
sbb
add
in
mov
cld
scas
divl
js
add
pushl
mov
xor
jnp
mov
scas
mov
lock
mov
push
add
inc
add
and
call
rolb
mov
mov
stc
aad
add
ret
push
shr
in
sub
pop
iret
or
popf
mov
addl
add
ss
decl
mov
clc
lock
mov
jmp
add
jl
and
jmp
mov
inc
add
push
mov
pop
add
call
xchg
mov
jl
dec
jbe
add
mov
outsb
inc
add
jmp
add
ljmp
loop
movb
add
clc
xchg
push
pop
jo
jns
add
add
out
lahf
push
add
dec
xchg
sbb
mov
add
push
sti
cmp
popa
add
out
ret
add
or
inc
add
insb
rolb
add
mov
in
addl
add
incl
in
fisttps
add
cmp
add
add
add
dec
addb
pop
or
add
daa
add
icebp
mov
movl
jmp
ds
push
mov
mov
jae
lcall
add
add
iret
addb
pop
test
mov
js
mov
repnz
sub
add
xor
add
idivb
jo
lcall
xor
dec
adc
call
dec
sbb
add
in
shlb
decl
jl
add
add
push
bound
call
aaa
roll
add
add
xchg
add
ljmp
fmuls
jnp
xor
decl
pop
imul
push
add
test
cltd
add
jmp
aas
dec
xor
inc
add
repz
jl
push
aam
dec
leave
xor
js
jp
cmpsb
add
in
push
add
add
pop
iret
jl
and
jmp
rcl
out
ffreep
add
add
add
add
mov
and
ljmp
jns
add
pop
mov
mov
fwait
bound
pushl
call
jne
pop
test
jle
add
or
call
add
sbb
mov
in
dec
shll
orps
incl
add
les
out
mov
mov
clc
inc
add
push
add
aaa
das
mov
mov
add
pushf
cs
repnz
lods
iret
or
add
lcall
add
dec
mov
xchg
inc
add
lods
jbe
int
push
addb
cmp
test
add
sub
add
jp
icebp
lret
cmp
js
testb
add
add
addb
es
clc
leave
mov
add
lret
push
add
incl
add
adc
jle
call
pop
jmp
or
inc
add
jp
add
add
icebp
xlat
out
and
leave
loop
fsubrl
push
xchg
fnstsw
fcomps
scas
adc
lcall
mov
add
pop
out
sbb
pop
std
mov
add
jae
inc
add
inc
add
mov
add
push
movl
dec
out
sub
add
xchg
and
dec
push
test
ljmp
int3
jge
add
push
test
jno
call
add
add
add
jo
dec
push
inc
add
pop
daa
add
add
icebp
stos
sti
scas
dec
in
ja
cmp
call
push
add
pop
movsl
add
add
jmp
push
pop
add
add
add
decl
cltd
adc
pushl
sub
add
in
jb
call
add
add
roll
push
xchg
je
add
addl
movb
stc
dec
lahf
repnz
lea
in
loop
int3
aam
add
xchg
lret
add
jmp
add
clc
mov
jp
sbb
aam
add
add
add
loop
fwait
add
pushl
jns
add
dec
test
push
add
fidivrl
sub
or
jl
adc
lcall
add
scas
bound
jmp
jecxz
sbb
add
push
lds
loop
icebp
mov
movb
add
bswap
xchg
or
and
incl
add
les
mov
add
xchg
sbb
repz
push
add
nop
push
add
mov
xchg
sbb
insb
add
decl
push
add
pushf
push
add
cmp
jmp
int3
push
add
mov
jnp
add
addb
mov
add
call
mov
int3
push
les
lds
dec
jno
fdivl
push
add
mov
jne
ss
ljmp
push
imul
and
add
mov
add
inc
add
loop
clc
lds
movsl
add
add
and
jmp
add
mov
pop
or
mov
add
add
xor
pushl
add
mov
pop
add
sub
xor
ljmp
add
pop
jns
push
insl
and
call
call
daa
add
add
mov
mov
sub
sar
mov
push
mov
xchg
clc
cmp
inc
add
jmp
add
mov
or
add
add
pop
push
xchg
jno
incl
jmp
add
mov
lret
jge
sub
sbb
outsb
addb
add
rolb
sbb
inc
add
clc
fisubl
or
add
add
dec
fcmovne
pop
jno
lcall
mov
add
inc
add
add
notb
imul
add
jbe
sub
rolb
add
fistps
cwtl
pop
add
outsl
xchg
and
pushl
add
les
jge
mov
out
cmp
xchg
in
add
ljmp
sbb
sahf
adc
incl
add
mov
cmp
call
in
xor
pushl
lcall
stos
adc
pushl
lret
mov
sbb
jae
jmp
call
scas
jnp
icebp
push
lods
je
ljmp
lcall
jns
add
fstps
jne
add
enter
add
les
jo
ljmp
cwtl
pop
das
mov
lods
xor
inc
add
add
add
imul
call
and
decl
add
jle
pop
xchg
clc
push
add
adc
pushl
xor
into
sti
popa
add
push
add
jmp
add
inc
add
pushf
push
lods
cwtl
stc
fdivr
adc
add
fisubrl
cmp
ja
mov
xchg
aad
add
and
in
fldenv
lods
enter
cmp
jmp
or
push
push
or
stos
movb
pushl
mov
push
daa
add
add
add
rcrl
add
add
xor
add
add
inc
add
scas
xor
xchg
repz
decl
arpl
pushl
daa
add
add
push
movl
cmpsb
add
or
xchg
in
rcrl
aam
inc
add
ljmp
add
xchg
ret
add
mov
pop
adc
ljmp
add
add
test
sbb
movsb
add
add
and
popa
add
out
les
jbe
jo
incl
add
or
les
es
addb
loope
out
dec
mov
in
imul
add
and
lcall
add
mov
testb
add
jg
sub
movsb
add
add
push
add
std
fwait
dec
fmull
mov
and
add
lods
loop
mov
fnstsw
jl
cmp
xchg
mov
add
lahf
inc
add
std
das
filds
decl
test
add
lcall
push
add
incl
add
outsl
xchg
push
aam
addl
movl
mov
cmp
xor
mov
cli
cltd
mov
shll
add
cmp
mov
add
jns
add
fidivrl
cmp
add
in
jp
push
add
and
pushl
decl
lahf
cltd
sti
movsl
add
add
cmp
lret
mov
sahf
test
add
into
movsl
add
jmp
add
das
jbe
add
jns
add
push
add
mov
cs
add
xchg
push
lds
jle
sahf
in
push
movl
frstor
add
lds
arpl
pushl
incl
lock
movl
xor
jmp
add
ljmp
add
ljmp
add
addl
jns
sti
add
jmp
adc
jnp
mov
daa
add
add
xchg
cltd
test
push
in
push
add
pushl
push
inc
add
fisttpll
mov
add
pop
lea
shlb
std
xor
call
adc
cli
fimull
loopne
movsl
add
pushl
pop
xor
inc
add
add
pushl
add
mov
add
add
icebp
push
sub
adc
push
and
pushl
decl
add
add
add
aas
jno
lcall
add
jb
incl
into
jge
lahf
outsb
push
mov
add
push
mov
push
lahf
push
sub
std
mov
jge
push
add
pop
aad
inc
add
cmp
add
add
add
cmp
std
jmp
cmp
add
add
cli
mov
add
pop
rcrl
mov
gs
xor
call
add
add
mov
in
inc
add
add
jo
pushl
aas
dec
data16
push
and
jmp
sub
movl
add
iret
add
cwtl
mov
add
ljmp
add
nop
push
xor
ljmp
clc
roll
decl
mov
add
roll
add
add
enter
mov
scas
pop
or
cmp
add
add
call
add
add
mov
testb
fisubrl
jae
ljmp
add
push
add
mov
stc
ds
xor
call
add
cwtl
mov
add
adc
ret
add
pop
jo
jmp
repz
rolb
inc
add
mov
add
into
cli
push
mov
add
ss
add
add
cmp
imul
add
pop
and
incl
jbe
pushf
xchg
iret
ljmp
xor
lcall
cmpsb
add
add
mov
mov
dec
out
addb
add
out
mov
mov
out
inc
add
mov
add
add
sti
xor
decl
call
pop
jmp
pop
pop
stc
inc
add
add
xor
decl
mov
mov
cmc
stos
lret
call
or
push
add
add
cld
xlat
bound
lcall
add
pushl
add
loopne
mov
into
add
call
push
stos
scas
pusha
add
mov
push
add
push
add
mov
add
add
cld
dec
dec
in
add
jmp
add
adc
decl
add
test
mov
add
fisttpll
pop
das
mov
stc
popa
add
xor
dec
sub
leave
mov
adc
cmp
add
push
mov
frstor
scas
mov
pusha
add
cmp
cmp
scas
push
nop
test
mov
jbe
add
test
add
in
loopne,pt
pop
mov
movl
add
pop
lret
in
dec
and
cmp
add
nop
jmp
add
stc
call
pop
outsb
jae
lcall
clc
mov
arpl
call
add
add
fsubrl
test
fidivrl
add
lcall
jno
incl
out
and
xor
cmp
xchg
push
aam
add
hlt
mov
inc
add
stos
pop
jg
add
inc
add
addl
add
out
xor
lcall
add
add
pop
xchg
lods
test
repnz
jge
inc
add
or
inc
add
loopne
rolb
in
lock
mov
pop
pop
cmp
add
push
add
adc
add
mov
add
adc
jmp
add
ficoms
insl
movsl
add
mov
cmp
lds
jecxz
je
addl
mov
adc
decl
adc
pushl
add
jb
fsub
add
fsts
call
add
test
xchg
dec
xchg
mov
mov
add
add
pop
jecxz
add
call
out
mov
dec
fsts
fucomp
mov
addl
ljmp
add
sbb
sub
dec
ret
add
scas
mov
fcoml
cmp
mov
add
inc
add
out
jae
lcall
add
mov
add
loopne
negl
dec
das
pushf
pushl
mov
add
add
jmp
mov
jno
ljmp
add
jle
add
je
adc
cmp
insl
fidivs
add
push
mov
push
aas
stos
neg
xchg
sub
add
and
lods
addb
jae
incl
pop
nop
and
pushl
jecxz
cmp
clc
addr16
mov
add
add
add
push
cwtl
out
jne
pop
inc
add
in
mov
add
and
fcomp
popf
jp
add
nop
jbe
outsb
test
cmp
add
xor
decl
add
pop
neg
fadds
push
mull
fstpl
mov
ja
stos
push
out
add
call
add
or
lcall
jge
xchg
xor
ljmp
xor
jno
ljmp
repz
add
xor
incl
add
mov
fldt
call
dec
jmp
popf
lods
jge
cmp
push
pop
and
scas
adc
inc
add
add
cmp
pop
add
add
push
adc
lcall
cwtl
dec
pop
movb
mov
mov
stos
js
add
add
mov
add
xor
call
mov
lret
or
add
mov
add
xchg
fistl
decl
test
cmp
movsl
add
add
adc
pushl
add
pop
stos
in
lods
frstor
add
addb
add
pushl
jmp
incl
jmp
add
mov
add
pushf
lret
icebp
sbb
xor
lcall
arpl
incl
add
xchg
pop
aad
fsubl
add
mov
addl
add
xlat
and
sub
or
add
cmp
add
int3
cltd
pop
dec
and
call
testb
add
lret
cmp
xchg
or
add
sbb
insb
je
add
call
stos
insb
pusha
add
xlat
and
pushl
daa
add
add
pop
cli
pusha
add
imul
sub
dec
xor
clc
ds
mov
add
jmp
add
test
cmp
dec
popf
jl
add
cmpsl
add
jmp
push
mov
cmp
add
xchg
enter
cli
jmp
pusha
add
jecxz
rorb
add
lahf
mov
outsl
pop
imul
mov
outsb
addr16
add
or
test
negl
add
aam
add
add
sbb
stc
push
add
mov
out
cmpsb
add
push
add
push
aaa
ss
add
out
addb
jecxz
out
push
inc
add
add
mov
pop
iret
inc
add
jb
mov
mov
movl
mov
add
push
mov
mov
imul
incl
roll
rcl
inc
add
nop
jecxz
mov
bound
jmp
push
popa
add
jnp
jb
ljmp
xchg
mov
arpl
inc
add
add
ret
push
lahf
mov
add
add
mov
ljmp
in
add
add
sbb
add
cmp
xchg
inc
add
int
cmp
mov
mov
mov
incl
jecxz
dec
insb
sub
das
jmp
add
test
add
add
add
fsubrs
das
jl
test
mov
add
roll
mov
jbe
mov
pusha
add
dec
les
sahf
jb
jmp
add
add
add
add
loope
cmp
in
dec
fdivrs
add
jmp
add
sbb
ds
add
jmp
in
dec
lahf
adc
out
int3
pop
dec
lret
jb
pushl
call
xchg
enter
pusha
add
shll
mov
dec
xor
pushl
xor
pop
es
bound
ljmp
movsl
add
adc
movb
inc
add
add
lcall
testl
jmp
in
mov
pushf
or
xchg
xchg
addb
ljmp
inc
add
add
ljmp
adc
addl
idiv
cmp
mov
or
push
xor
jmp
add
mov
add
push
sub
push
or
adc
mov
in
push
jne
out
clc
xor
call
decl
sub
add
ljmp
out
lea
jmp
adc
decl
inc
add
stc
mov
add
fdiv
mov
xchg
and
add
add
lcall
ja
les
xchg
out
cmc
xchg
inc
add
mov
mov
inc
add
loop
jge
mov
jno
lcall
inc
add
call
add
out
pop
test
add
xchg
xchg
push
or
add
nop
xchg
pop
add
lea
add
dec
mov
add
outsl
aaa
leave
add
ljmp
cmpsb
add
add
add
push
rolb
add
aas
mov
add
add
cltd
pop
jno
mov
aas
cmp
add
inc
add
cld
jecxz
int3
addb
jge
aaa
out
dec
fstpt
xor
push
push
mov
dec
inc
add
sbb
xor
inc
add
mov
xchg
mul
add
aaa
mov
pushl
add
out
pushf
push
dec
pop
cmc
or
mov
jnp
repnz
aad
add
push
add
mov
cltd
arpl
call
aam
push
aaa
pushf
pop
mov
add
add
les
shll
incl
push
ret
add
in
and
fcom
daa
add
add
mulb
add
and
lahf
aam
mov
out
jb
jmp
add
push
and
cmp
mov
xor
pushl
pop
test
filds
ss
addl
in
fistpll
lcall
add
add
jbe
add
dec
stos
mov
inc
add
icebp
int
push
mov
call
add
mov
add
add
ret
inc
add
addb
stos
ja
add
out
pop
pusha
add
and
ljmp
je
das
mov
add
iret
aas
adc
incl
cmp
jbe
add
test
or
fnstenv
jmp
call
js
add
cmp
add
add
incl
test
add
add
cmp
add
add
dec
mov
add
jo
call
add
mov
add
in
fdivl
add
test
push
sub
inc
add
imul
mov
add
and
decl
jmp
cmpsb
add
decl
add
daa
add
mov
call
scas
mov
xchg
sub
sub
jecxz
push
idivb
aad
add
mov
mov
jmp
inc
add
sub
xchg
add
jb
dec
xlat
fdivl
cmp
add
imul
dec
ja
fimull
xor
lcall
add
ljmp
add
test
push
pushf
xchg
in
jno
jp
fdivl
aas
jg
add
add
imul
ljmp
add
add
int
push
cmpsb
add
add
scas
fldcw
xchg
arpl
lcall
push
std
cli
push
add
and
fsts
pop
fimuls
lahf
sbb
sbb
notb
lcall
mov
dec
inc
add
jmp
adc
jmp
clc
sbb
add
add
adc
pushl
pushl
add
das
pop
je
scas
leave
inc
add
add
mov
push
negl
jp
das
jo
stc
das
pushf
addb
dec
daa
add
mov
mov
add
out
dec
test
adc
out
ret
add
add
push
inc
add
lahf
notb
add
add
nop
movb
mov
lcall
rcrl
jg
out
mov
stos
lret
jne
dec
fmulp
inc
add
mov
rolb
insb
and
lcall
rolb
add
push
add
cmc
test
or
add
push
add
mov
insb
cli
add
call
enter
jp
sbb
add
ret
aad
sti
cmp
add
add
mov
mov
icebp
dec
pop
inc
add
roll
add
and
cwtl
cli
mov
add
call
sub
pop
popf
nop
ficompl
addb
add
mov
pushf
iret
test
addl
pop
xor
decl
adc
lcall
adc
jae
dec
adc
pushl
mov
add
add
cmp
add
addl
inc
add
mov
repnz
inc
add
lcall
and
clc
mov
add
sbb
add
add
dec
scas
icebp
inc
add
push
add
aas
std
jb
decl
mov
out
mov
dec
aad
mov
lcall
cmp
jne
lds
mov
movsl
add
movb
sarl
push
dec
sti
mov
xchg
xor
jmp
pusha
add
insl
add
ljmp
xchg
push
add
xlat
lds
stos
xchg
add
mov
add
mov
dec
adc
mov
lods
leave
xor
call
add
adc
pushl
and
cld
out
outsl
leave
ret
add
call
add
addb
add
lods
cld
pop
mov
add
test
xchg
cwtl
setp
roll
cmp
scas
test
push
jmp
add
aaa
outsb
mov
mov
jns
pop
pop
add
xchg
js
roll
ljmp
popf
cwtl
xor
incl
jmp
cld
sub
mov
jmp
add
adc
lcall
add
push
add
mov
cmp
mov
ret
adc
inc
add
bound
lcall
add
dec
inc
add
insb
cmpsb
add
pop
mov
loop
lds
add
mov
mov
add
call
call
stos
dec
inc
add
sti
packsswb
decl
cmpsl
add
jl
add
stc
pop
jae
call
decl
add
cli
mov
add
in
xchg
mov
push
scas
jg
push
add
aad
add
jo
ficoml
add
movl
cltd
stos
mov
clc
or
adc
add
movsl
add
fcoms
jmp
add
ljmp
add
in
inc
add
into
bnd
out
sub
mov
call
jbe
sbb
ljmp
add
mov
cld
lock
call
jmp
mov
xchg
movsl
add
pushl
and
cmp
rcrb
cmp
mov
and
decl
out
jo
jmp
and
inc
add
aas
mov
adc
jmp
pusha
add
cmp
sub
xchg
dec
cmp
lcall
add
lds
rcl
mov
add
test
js
into
enter
mov
sbb
push
add
ljmp
sti
mov
inc
add
add
cli
jb
mov
xchg
movb
ljmp
enter
cmpsl
add
cli
mov
inc
add
dec
pop
cmovg
push
icebp
stos
psubb
add
xor
dec
mov
add
pushl
add
mov
add
ljmp
add
pop
mov
add
dec
les
adc
call
jmp
sbb
addb
daa
add
add
test
push
int
add
cmp
pop
xchg
call
icebp
imul
add
pop
rolb
add
sub
ljmp
add
addb
jne
xchg
in
addb
test
add
dec
dec
movl
ret
add
cmp
mov
in
cmpsl
add
add
dec
push
add
lods
xchg
daa
add
lcall
pop
fsubr
sub
sarl
fisttpl
rolb
lcall
pop
add
add
mov
addl
add
cld
pop
aas
clc
shl
add
jnp
push
cmp
stos
leave
inc
add
pop
jnp
add
add
data16
repnz
cmp
jmp
cmpsl
add
incl
add
mov
or
loopne
mov
addl
add
pusha
add
mov
add
push
cmp
add
push
add
dec
aaa
addb
dec
mov
add
adc
dec
jge
add
add
call
cld
arpl
jmp
lds
in
sub
repz
add
stos
addb
or
lcall
dec
inc
add
mov
jmp
push
leave
adc
lcall
or
push
sarb
jno
jg
test
dec
aaa
adc
ljmp
cli
fbstp
add
add
push
add
xchg
out
les
pop
aas
mov
icebp
sub
add
pop
push
push
pop
push
les
inc
add
decl
push
ss
add
aaa
repz
cmpsl
add
add
adc
jmp
add
gs
pop
sbb
dec
lcall
xchg
call
shl
jb
jmp
sbb
adc
add
add
sub
dec
mov
lcall
out
xor
cmp
sbb
add
jne
mov
pushf
sbb
jmp
or
add
aam
adc
lcall
adc
dec
mov
add
hlt
imul
add
test
inc
add
cmp
jmp
jle
imul
lods
movsb
add
incl
add
dec
mov
inc
add
sub
sahf
mov
xchg
movsb
add
add
mov
inc
add
add
stos
pop
mov
mov
and
call
sbb
add
roll
cmpsb
add
pushf
arpl
mov
add
dec
mov
push
add
cmp
lcall
sbb
cmp
iret
and
hlt
sbb
add
test
stos
jae
jmp
add
add
inc
add
or
les
pop
outsb
ljmp
add
movsl
add
add
inc
add
ljmp
lcall
push
sbb
add
outsb
rcr
cmp
cmp
add
add
ret
add
in
pop
mov
cmpsl
add
cmc
push
add
cmp
repnz
hlt
lods
aas
adc
dec
lock
add
movsl
add
or
adc
incl
jo
mov
inc
add
xchg
sti
out
add
fmul
movb
movsb
add
jae
incl
lcall
nop
xchg
dec
or
cwtl
xchg
nop
rcrb
je
xor
lcall
mov
repz
add
rcl
ffreep
add
enter
clc
dec
loopne
mov
in
idivl
iret
pop
cltd
in
rolb
cmp
push
rol
add
addl
cmc
adc
incl
add
xchg
and
adc
jmp
ljmp
push
in
scas
mov
add
loopne
dec
inc
add
dec
stos
cmpsb
add
and
ljmp
es
leave
insb
stc
mov
cmp
fisttps
lcall
cld
dec
push
add
sarb
in
add
ljmp
aas
jno
ljmp
add
jbe
add
add
rcrb
push
add
fnsave
lods
outsb
or
cmp
xor
incl
inc
add
movb
cmpsb
add
adc
dec
jne
add
push
incl
add
push
mov
add
aas
and
pushl
mov
and
inc
add
les
or
stc
mov
ja
or
add
int
and
incl
mov
jnp
bound
pushl
addr16
insl
adc
incl
inc
add
add
add
addl
dec
fwait
dec
and
ljmp
rolb
add
add
fnstenv
add
jnp
cltd
push
add
adc
xchg
mov
add
ljmp
add
and
add
mov
les
addb
dec
int3
or
mov
addb
push
cs
xor
mov
out
adc
fistpll
push
or
add
add
aam
jle
add
pushl
mov
cmpsb
add
sub
add
add
into
sti
mov
add
movsb
add
pop
cmp
ljmp
sahf
mov
add
pop
push
mov
add
push
mov
push
lds
xchg
sbb
hlt
or
add
jmp
dec
outsl
xchg
ret
dec
lret
movb
mov
mov
stc
stc
test
add
je
scas
in
lds
incl
add
jb
jp
pop
cwtl
push
xor
sub
add
je
add
pop
mov
add
fisubrl
jmp
add
test
stos
jmp
fdivrl
fcmovnb
add
add
xchg
jle
pushf
and
ljmp
xor
sub
ljmp
add
int
push
add
dec
imul
xor
ljmp
in
hlt
xor
pushl
ds
jbe
adc
fstl
call
repz
adc
lock
movb
add
insl
sub
das
cmp
add
add
call
fwait
cmp
dec
xchg
inc
add
add
pop
add
dec
add
fnstsw
add
fistl
icebp
push
enter
ljmp
add
fsubrl
jbe
sub
or
add
incl
clc
iret
adc
jl
add
add
xor
jmp
xlat
mov
sahf
bound
jmp
daa
add
mov
jl
arpl
pushl
stos
hlt
repnz
push
add
call
dec
cltd
adc
jmp
inc
add
mov
add
aaa
lods
sahf
push
inc
add
ja
add
or
xor
inc
add
add
fdivrl
push
add
in
mov
add
lcall
sbb
movl
add
jb
ljmp
cltd
out
sub
das
out
ljmp
add
pop
lods
mov
push
add
adc
lcall
inc
add
xchg
add
aaa
data16
jmp
sbb
stos
sbb
aam
loop
ret
pop
cmp
mov
fimull
test
fnstcw
jnp
jge
add
inc
add
add
leave
jecxz
inc
add
sbb
add
push
loop
aas
sahf
dec
mov
add
ljmp
add
add
add
decl
cltd
push
cmc
push
add
and
ljmp
es
push
repnz
call
sti
fldln2
push
inc
add
sub
dec
addb
jg
ljmp
add
addr16
mov
mov
sub
and
jmp
add
call
dec
insb
adc
push
add
and
inc
add
incl
adc
jmp
inc
add
xor
call
add
add
incl
inc
add
mov
add
ljmp
pop
cltd
inc
add
add
xor
into
pusha
add
loopne
sub
mov
pushl
add
popf
dec
cmpsl
add
push
jp
les
test
add
aad
xor
decl
lahf
dec
aaa
in
add
call
mov
fimull
sub
cmpsl
add
decl
cmpsb
add
inc
add
aas
or
cmpsb
add
gs
push
add
stos
sub
add
ljmp
decl
popa
add
jbe
outsb
jecxz
adc
call
mov
decl
popf
xor
lcall
ret
add
add
add
add
data16
xchg
sub
shrl
jp
inc
add
mov
outsb
sbb
inc
add
xlat
adc
ljmp
add
lcall
add
mov
mov
push
dec
inc
add
push
jp,pn
inc
add
or
add
add
cltd
dec
outsl
inc
add
nop
push
add
push
add
mov
add
incl
mov
and
push
add
aas
add
or
les
sub
add
add
add
shr
les
addb
add
adc
pushl
add
mov
call
lcall
mov
cmp
xchg
imul
add
pushl
ret
add
add
aas
into
ret
dec
movsb
add
xchg
xchg
lahf
add
pushl
push
out
jne
and
jge
sbb
rolb
jbe
rorl
daa
add
push
test
fcmove
es
sub
xor
jo
call
dec
inc
add
in
fisttps
fbld
decl
mov
pop
cwtl
mov
js
and
call
pop
roll
add
imul
jbe
imul
add
cs
inc
add
call
incl
add
mov
rcrl
add
rclb
outsb
roll
addl
sub
mov
lcall
xchg
push
add
ds
add
rolb
int
add
cmp
stc
jns
add
ljmp
push
cld
add
mov
call
incl
adc
add
fimuls
push
add
pmaddwd
add
cmp
jae
call
pushf
lret
pop
into
xor
mov
daa
add
add
repz
add
push
sub
scas
xor
loope
dec
inc
add
add
lods
add
sbb
rcll
dec
cli
cmc
jmp
decb
ja
add
insb
fs
xor
incl
and
incl
fcmovbe
adc
jmp
fisttpll
lock
addl
movb
add
ds
loop
mov
or
add
lcall
add
lock
incl
jne
adc
leave
in
mov
pop
add
decl
sub
xchg
add
xchg
inc
add
push
cmp
add
add
ljmp
insl
mov
cmpsl
add
mov
add
stos
add
lcall
dec
fbstp
incl
movsb
add
fisttpll
dec
mov
add
add
push
ja
add
scas
pop
test
add
sub
add
movsl
add
sub
xchg
mov
push
add
xor
pushl
out
xchg
bound
jmp
add
and
ljmp
pop
cmc
jnp
shlb
sbb
clc
xor
adc
dec
mov
add
call
and
pushl
add
fsts
push
add
stc
cmpsl
add
add
and
jmp
ljmp
sub
jo
jmp
add
test
adc
imul
jo
pushl
cmp
inc
add
add
incl
inc
add
add
outsb
xor
push
dec
sub
add
add
add
add
pushf
dec
lcall
sbb
add
and
jmp
add
scas
mulb
add
call
js
add
clc
mov
mov
mov
add
add
inc
add
incb
jmp
dec
mov
cmc
shll
in
jns
dec
ljmp
call
ss
fisubl
xchg
in
mov
dec
sub
add
add
outsb
inc
add
sbb
add
fiaddl
push
mov
add
insb
inc
add
ljmp
sbb
add
shlb
pop
test
add
add
dec
push
jg
xor
decl
addl
jl
dec
js
add
push
adc
aam
push
add
pop
lret
ljmp
sbb
pop
out
adc
cmc
add
cmp
mov
push
add
jmp
push
test
add
lcall
test
gs
xchg
pop
pushf
jl
add
xchg
int3
jae
incl
add
mov
repz
pop
add
call
into
mov
xlat
fsubr
mov
xchg
push
popa
add
neg
push
add
ss
scas
xchg
std
sub
add
pusha
add
add
add
jmp
ds
dec
roll
add
addl
add
aam
add
jb
lcall
inc
add
add
ja
adc
decl
sti
sti
jbe
test
mov
add
dec
data16
add
inc
add
scas
xor
jmp
incl
add
add
add
jle
add
icebp
int
addl
and
jmp
sbb
movsl
add
imulb
add
add
or
add
pop
or
mov
add
xor
ficompl
je
xchg
pushf
sub
jp
fistpll
aam
add
roll
mov
mov
mov
aam
add
add
lcall
mov
lock
lcall
jnp
sti
add
and
lock
mov
das
mov
add
add
insl
movsl
add
add
xchg
xlat
int
jecxz
sbb
mov
add
inc
add
add
dec
sbb
clc
mov
add
flds
mov
call
in
shr
dec
add
and
add
ret
add
jmp
add
popa
add
scas
enter
push
shlb
decl
sbb
add
or
add
push
add
push
add
add
arpl
ljmp
xor
lcall
int3
movl
mov
mov
add
ljmp
repz
mov
add
lret
fwait
add
call
add
sbb
fisubl
addl
add
adc
incl
fdiv
xlat
pop
call
add
or
arpl
decl
ljmp
fld
add
out
pusha
add
inc
add
scas
repnz
add
daa
add
sbb
add
in
testl
add
stos
in
sub
sub
adc
push
xchg
pushf
inc
add
aas
repz
jecxz
fcompl
xchg
cwtl
fsubrs
add
pop
push
add
mov
mov
jle
fdivrs
dec
les
addb
pop
push
add
cs
cmc
addb
add
inc
add
outsb
cmp
and
ficomps
add
mov
movsl
add
dec
fcmovnu
stos
into
pop
push
add
jp
push
cmc
adc
add
jbe
add
mov
mov
scas
jle
insb
fistl
ficoml
or
add
add
outsl
push
jecxz
lds
repnz
mov
add
mov
add
aad
je
add
lret
cmp
adc
dec
rcrl
aad
xchg
test
adc
add
sub
mov
lds
clc
lea
repnz
lret
add
mov
leave
enter
or
add
jne
test
sbb
add
jmp
add
shlb
adc
decl
cmc
fcmovnbe
mov
pop
into
aas
inc
add
sbb
add
jns
add
xchg
dec
cmp
add
add
add
repnz
add
clc
mov
cmpsb
add
add
repnz
jne
adc
decl
into
sbb
insb
bound
jmp
je
add
mov
inc
add
lock
pop
adc
add
cmp
ja
inc
add
or
add
mov
cmp
jns
repz
fisubs
xor
incl
add
xchg
addl
xchg
sbb
push
addb
in
push
add
stos
pop
add
call
cltd
jns
popa
add
rolb
add
add
daa
add
iret
ret
add
popf
cwtl
cltd
jecxz
inc
add
mov
add
add
lock
aam
jg
add
mov
ljmp
addb
movb
jmp
incl
add
aam
lahf
in
mov
call
add
rorl
addb
clc
jg
xor
in
add
add
add
faddl
add
scas
mov
call
add
jnp
test
jmp
add
mov
cmp
mov
add
add
les
add
jmp
pushl
jmp
add
aas
jl
rolb
add
test
jbe
add
jecxz
xchg
call
lcall
inc
add
lcall
pop
insl
xchg
cmp
aaa
shll
mov
xchg
out
out
jbe
stos
dec
lret
add
add
add
repz
nop
mov
cmpsl
add
insb
pop
jge
add
insb
aas
fmulp
sub
mov
add
cmp
ret
xor
mov
mov
add
or
dec
int3
mov
cmp
sbb
mov
movb
jecxz
pop
add
out
inc
add
add
call
and
incl
mov
add
push
add
sub
jmp
add
add
std
add
ljmp
mov
xlat
test
sbb
ljmp
sti
call
dec
fcmovne
fstl
hlt
dec
out
jo
pushl
add
add
sbb
push
stos
add
xchg
out
bound
dec
lcall
xchg
pop
lds
addb
stc
clc
mov
add
xchg
mov
mov
add
addb
popf
in
ja
add
lcall
jecxz
test
ds
adc
lcall
mov
js
add
inc
add
mov
test
add
roll
in
mov
add
aas
cs
addl
add
scas
xor
jmp
call
dec
daa
add
xchg
fidivs
out
xor
decl
jnp
out
scas
dec
outsb
pop
add
arpl
lcall
jbe
add
add
out
dec
fucomip
adc
call
repz
je
jae
call
inc
add
inc
add
xchg
add
jmp
xchg
add
call
pop
fidivl
ljmp
mov
mov
add
data16
roll
add
cli
rcrl
outsl
das
and
ljmp
pushl
push
mov
insb
push
add
aas
fdivl
add
daa
add
negl
add
adc
incl
add
add
jmp
fsubrl
ljmp
lahf
insb
jb
lcall
push
mov
jp
add
sbb
mov
cmpsb
add
outsl
mov
push
loope
jb
decl
pop
add
add
inc
add
mov
pushl
add
add
add
jmp
aam
add
dec
imul
dec
pushf
ret
add
dec
out
jnp
xor
incl
call
add
mov
add
cli
dec
adc
ljmp
cwtl
data16
outsb
mov
out
jno
incl
jl
add
cwtl
mov
add
movsl
add
lods
adc
mov
add
adc
jmp
pop
sub
sub
or
xor
pushl
lcall
jbe
add
add
add
test
or
dec
jmp
add
cli
mov
stc
mov
add
in
mov
or
test
add
ljmp
gs
setno
jle
add
cmp
pushl
decl
jmp
pop
test
sbb
cmp
add
add
push
add
pop
cmp
add
add
mov
sbb
xchg
pop
outsl
je
add
fsub
add
jmp
add
pushl
int3
inc
add
shl
add
fistl
adc
jmp
add
ljmp
insb
mov
adc
decl
fidivrs
jnp
add
pop
icebp
inc
add
ret
add
ds
add
jmp
add
call
add
lcall
inc
add
xor
add
or
or
add
xchg
rcrl
cwtl
dec
imul
add
loop
jge
or
xchg
sub
pushl
add
addb
add
outsb
pushf
fstpt
std
in
fisubrl
xchg
jb
ljmp
mov
sbb
call
jns
lea
sub
add
addb
fcmovne
loopne
mov
push
push
outsb
sbb
jmp
push
jns
aam
dec
cmp
add
aam
add
jnp
dec
cmp
fwait
mov
cmp
inc
add
push
sub
pop
and
jmp
add
insl
jb
pushl
jmp
add
pop
movb
sbb
add
test
scas
lea
and
jmp
add
cltd
inc
add
incl
addb
adc
call
ljmp
add
add
cs
in
sub
addb
cltd
jbe
lret
jo
decl
mov
sub
add
add
out
jnp
ret
add
pop
add
sti
popf
inc
add
in
add
dec
cld
loope
or
seta
ljmp
fwait
push
add
les
mov
add
pop
add
stos
sarl
add
mov
add
mov
test
sub
ljmp
add
add
sbb
inc
add
jmp
ljmp
cwtl
das
push
add
data16
add
jns
pop
inc
add
cmovae
ljmp
add
add
add
lret
cmc
push
sbb
cltd
data16
jns
add
std
es
add
incl
enter
add
out
cmpsb
add
addb
data16
add
pop
fisubrl
pusha
add
mov
lcall
les
add
inc
add
cmp
lret
add
mov
add
mov
or
loop
dec
sbb
sbb
jg
add
push
jecxz
pusha
add
xchg
sub
add
dec
ds
add
add
jecxz
sbb
pop
outsb
or
test
aam
jle
add
lcall
add
clc
lds
mov
push
out
sar
or
test
adc
call
movsb
add
ljmp
add
jg
mov
out
in
push
add
add
dec
daa
add
mov
int
add
push
xchg
popa
add
push
cs
sar
mov
pushl
add
stc
repnz
add
fcomp
mov
lcall
pop
push
movsb
add
add
call
inc
add
jle
mov
roll
scas
insl
jno
jmp
mov
add
add
lcall
test
in
jmp
imul
add
pusha
add
out
sub
push
popa
add
movl
cmpsl
add
xor
jmp
pop
add
dec
jecxz
xchg
fwait
push
add
push
add
dec
insb
sub
add
decl
mov
push
movb
pop
cli
fcmovnu
hlt
ss
add
mov
jp
cwtl
mov
lds
push
add
and
add
and
xor
lcall
sbb
fdivrl
sbb
jmp
call
in
jne
mov
push
test
jne
out
cmp
add
mov
ss
stc
inc
add
dec
xlat
xor
add
incl
add
add
add
jmp
xchg
add
and
add
add
ret
add
pop
jno
call
cmp
cmp
and
jmp
jmp
add
inc
add
ficompl
add
and
sub
out
jp
add
add
dec
jecxz
in
xor
push
test
xchg
leave
bound
call
repz
out
mov
cwtl
xlat
cmp
pop
dec
cmp
cmp
sbb
inc
add
sbb
add
pushl
rorl
adc
out
cmp
rcrb
scas
mov
jne
mov
push
imul
add
sub
dec
xchg
outsl
xchg
stos
lock
lahf
add
stos
add
fdiv
add
add
add
in
mov
or
push
and
cld
add
jmp
add
lods
push
fsubr
xchg
mov
out
test
jbe
movl
cmpsl
add
add
add
pop
bound
dec
je
add
add
inc
add
mov
add
mov
add
movl
add
loopne
sbb
out
addl
add
in
adc
jmp
add
cmp
add
add
add
xchg
cmpsb
add
ja
add
cwtl
xchg
enter
pop
outsb
or
mov
mov
add
add
add
icebp
or
movb
push
add
pop
jp
mov
push
je
mov
and
cmp
cmp
incl
pop
jno
push
jbe
ficomps
lods
nop
ret
add
add
mov
roll
pop
sub
and
pushl
decl
inc
add
cmpsb
add
imul
ja
mov
pop
stos
stos
pop
pop
testl
ds
sbb
push
imulb
and
jmp
add
push
mov
decl
or
add
inc
add
add
addb
cld
adc
call
movsb
add
add
ljmp
add
cmp
add
xor
jae
call
ds
sbb
pop
dec
add
decl
add
out
sahf
mov
cli
out
inc
add
arpl
call
jmp
add
mov
fnsave
add
iret
out
loopne
pop
repnz
mov
and
inc
add
add
add
ret
xlat
cwtl
sub
add
aaa
mov
fdivrs
add
idivl
addb
cmovnp
add
add
ljmp
mov
add
pop
and
rcll
push
and
pushl
jmp
jmp
add
add
add
pop
int
or
movsl
add
scas
dec
mov
cld
int3
pop
push
add
das
inc
add
add
inc
add
push
jle
sbb
add
cltd
adc
jmp
add
mov
adc
add
dec
les
push
mov
push
add
decl
stos
popf
or
hlt
jns
out
lods
hlt
cli
or
mov
arpl
incl
jg
lret
addb
pop
add
lcall
mov
addr16
lds
dec
ret
add
jno
call
mov
add
jecxz
cmp
add
sub
add
decl
add
jmp
jmp
mov
sub
cmpsl
add
and
pop
mov
out
push
fmul
les
addb
add
jecxz
lahf
mov
outsb
daa
add
lcall
cmp
sub
sub
pop
inc
add
movl
sub
popf
dec
dec
sbb
fwait
mov
and
out
or
or
stc
loopne
test
and
incl
add
add
dec
scas
pop
das
and
incl
add
push
add
nop
inc
add
add
pushl
add
cmp
push
xor
jg
mov
or
les
les
and
jmp
add
xor
inc
add
add
into
pushl
add
add
lret
push
add
xchg
pop
cmc
insl
mov
push
add
add
lcall
outsl
add
decl
add
mov
add
addb
movb
loop
jbe
add
inc
add
lods
leave
lret
rcrl
scas
cmp
inc
add
repz
add
lahf
stos
stos
test
outsb
mov
add
out
add
leave
mov
movb
fistps
ljmp
inc
add
cmp
jle
add
mov
mov
pusha
add
mov
pop
xchg
ja
add
icebp
sub
lock
add
add
mov
add
lods
imul
cltd
mov
jmp
cmpsl
add
add
mov
or
popf
and
pushl
call
ss
dec
sahf
int
mov
add
lds
xchg
movsl
add
add
jg
xor
repz
das
push
pop
std
int
push
inc
add
or
sbb
addb
test
dec
xchg
add
add
jo
lcall
jbe
add
xor
rolb
pop
lret
in
nop
in
pop
inc
add
pop
adc
fidivs
add
dec
cmp
cmp
stos
aaa
leave
mov
adc
jmp
jecxz
push
add
xchg
addl
mov
nop
jmp
xchg
sbb
add
decl
push
mov
xchg
ret
fiaddl
mov
nop
jmp
add
add
add
cmpsl
add
add
rcrb
add
add
add
lods
mov
nop
jmp
add
add
xchg
sub
movsb
nop
jmp
push
add
fidivrl
add
add
nop
jmp
faddl
roll
jb
add
push
inc
inc
add
add
mov
push
jno
jp
inc
add
jmp
repnz
add
add
lret
nop
jmp
add
add
nop
add
mov
mov
xchg
ret
add
mov
add
add
or
pop
mov
nop
jmp
repnz
add
cmc
insl
mov
nop
jmp
sbb
call
nop
jmp
push
push
add
stos
mov
nop
jmp
add
add
nop
add
into
shl
push
mov
xchg
ret
dec
add
jb
call
pushl
push
mov
xchg
ret
sti
add
jmp
push
xchg
add
mov
addb
mov
nop
jmp
jmp
jnp
jns
nop
jmp
jb
add
add
add
inc
add
xchg
movsl
add
jle
nop
jmp
lods
add
mov
stos
mov
nop
jmp
push
add
push
bnd
push
push
mov
xchg
ret
nop
inc
loopne
insb
inc
push
mov
xchg
ret
sbb
call
nop
jmp
mov
add
stc
nop
jmp
push
loopne
ss
add
lods
push
nop
jmp
jb
stc
sbb
add
and
and
call
sub
nop
jmp
add
sbb
nop
jmp
add
nop
jmp
cmp
add
pop
add
xchg
bound
jns
nop
jmp
push
xchg
dec
sbb
inc
add
loope
test
and
jge
nop
jmp
add
add
add
in
push
add
nop
jmp
add
inc
push
adc
nop
jmp
add
jae
dec
mov
nop
jmp
add
add
imul
nop
jmp
add
inc
add
add
popf
xchg
nop
jmp
mov
push
add
inc
sbb
mov
xchg
ret
add
lods
add
pause
jmp
add
add
popa
nop
jmp
sbb
add
add
mov
scas
mov
nop
jmp
add
cli
jb
add
add
add
add
push
add
addl
add
cmp
js
add
nop
jmp
aam
add
inc
add
hlt
or
or
add
pushf
add
push
js
mov
mov
call
adc
loopne
xor
nop
jmp
pop
add
add
lcall
popa
nop
jmp
add
jae
add
mov
adc
decl
adc
add
add
hlt
call
jmp
add
xchg
push
push
or
jmp
jecxz
adc
hlt
add
inc
add
cmp
jmp
add
mov
add
sbb
add
pusha
add
add
add
rolb
cli
dec
nop
jmp
add
dec
adc
add
add
add
add
rcll
cmpsl
add
mov
nop
jmp
push
add
call
pushl
push
mov
xchg
ret
sbb
add
jmp
add
adc
add
nop
jmp
js
push
loopne
add
push
mov
xchg
ret
add
mov
data16
inc
add
push
mov
xchg
ret
add
mov
ss
cmp
nop
jmp
pop
add
add
nop
jmp
decb
lock
add
lea
push
mov
xchg
ret
push
jbe
mov
jmp
push
add
add
or
mov
xchg
ret
add
xchg
fildl
cld
mov
and
lods
repnz
cmpl
nop
jmp
loopne
add
cmp
mull
jmp
sbb
repnz
add
nop
jmp
add
or
add
mov
jmp
fwait
add
add
jae
jb
nop
jmp
add
mov
fidivrl
mov
add
sbb
jmp
sbb
add
add
nop
jmp
add
push
push
push
mov
xchg
ret
add
add
fists
mov
xchg
ret
fucompp
hlt
lods
push
add
test
add
hlt
add
add
add
cwtl
test
nop
jmp
add
add
dec
stos
nop
jmp
call
add
or
aad
add
xlat
xor
dec
add
nop
jmp
inc
mov
add
xorb
rcrl
add
add
add
mov
xchg
ret
add
mov
mov
nop
jmp
xlat
add
aam
add
push
push
mov
xchg
ret
add
incl
add
addb
je
nop
jmp
add
add
add
nop
jmp
mov
xchg
push
je
add
pop
nop
jmp
push
add
add
decl
dec
and
add
add
rep
nop
jmp
add
add
cmp
cmpsl
add
add
and
incl
add
mov
xchg
xchg
jne
nop
jmp
add
push
mov
xchg
ret
enter
sub
rcll
add
js
sbb
test
nop
jmp
sti
add
nop
pop
div
nop
jmp
add
sbb
add
push
nop
jmp
cli
add
repnz
add
and
jmp
push
aam
add
dec
dec
push
nop
jmp
add
add
xchg
pop
inc
add
shrb
nop
jmp
add
add
shl
add
add
adcb
add
pop
xchg
add
call
add
push
jb
add
xor
incl
nop
jmp
adc
stc
fiaddl
add
add
incl
add
mov
in
testl
cmp
xor
pushl
nop
jmp
add
add
add
xchg
data16
mov
xchg
ret
push
add
sbb
add
nop
jmp
add
hlt
jecxz
mov
push
mov
xchg
ret
add
add
insb
mov
add
sbb
mov
nop
jmp
dec
add
in
add
add
nop
jmp
xchg
xlat
mov
mov
add
add
incb
mov
add
add
xchg
mov
add
push
mov
xchg
ret
add
add
push
nop
jmp
add
add
add
or
add
add
sbb
sub
ret
pushf
add
lods
push
mov
jmp
cld
add
aaa
mov
loopne
add
add
sahf
inc
add
jae
push
int
inc
push
add
nop
jmp
pushf
add
js
xor
fstpt
nop
jmp
dec
push
push
jecxz
jmp
nop
jmp
add
je
jmp
nop
jmp
jno
sbb
add
cs
nop
jmp
add
add
jmp
add
add
sbb
add
lcall
jmp
cli
mov
mov
add
mov
nop
jmp
add
push
add
sar
call
add
add
call
mov
add
add
js
mov
add
xor
push
mov
xchg
ret
mov
jno
je
nop
jmp
cli
add
sti
add
nop
jmp
aam
mov
mov
add
jae
jmp
sti
add
cld
sub
nop
jmp
lock
negl
mov
nop
jmp
jnp
add
add
repz
inc
add
push
cs
mov
gs
push
add
nop
add
js
add
pushl
ret
nop
jmp
add
add
add
nop
jmp
lock
lock
mov
nop
jmp
add
cmp
add
add
adc
add
daa
pop
add
decb
lods
push
nop
jmp
jae
dec
sbb
add
add
jmp
add
cmp
or
decl
push
mov
xchg
ret
add
add
test
xchg
sbb
jmp
add
add
add
mov
xchg
ret
cli
sbb
pusha
add
push
test
sbb
add
incl
add
sbb
add
nop
jmp
mov
sbb
nop
jmp
add
repnz
nop
jmp
push
dec
add
pop
aam
dec
push
movsl
nop
jmp
mov
add
adc
daa
add
add
rep
nop
jmp
addb
add
add
das
je
nop
jmp
fiaddl
xlat
imull
pusha
sbb
add
add
mov
xlat
sti
pushl
xchg
jmp
jmp
stc
sub
mov
int3
mov
nop
jmp
add
or
popa
idiv
call
incl
faddl
add
pop
add
add
mov
test
js
jne
nop
jmp
mov
inc
aam
sbb
pop
or
push
push
mov
fwait
add
nop
jmp
ja
add
ja
jb
sub
nop
jmp
mov
sbb
in
add
les
add
sbb
nop
jmp
stc
xchg
add
movzwl
nop
jmp
hlt
adc
add
adc
add
incb
add
xchg
fwait
dec
pop
push
mov
xchg
ret
call
add
nop
jmp
shll
jne
nop
jmp
fwait
fdivl
mov
xchg
ret
cmp
ljmp
add
add
mov
push
mov
xchg
ret
aam
xchg
jmp
add
lea
nop
jmp
push
sbb
adc
mov
std
call
adc
add
mov
add
add
sbb
add
nop
jmp
add
add
push
mov
xchg
ret
cmp
pushf
add
call
nop
jmp
add
fwait
inc
xlat
sub
nop
jmp
add
jae
sti
mov
add
add
fwait
mov
nop
jmp
push
rolb
inc
adc
jmp
add
add
add
add
pushl
aam
fcoms
in
scas
add
add
add
pusha
push
mov
xchg
ret
mov
push
mov
adc
add
jmp
pop
jge
pop
push
mov
xchg
ret
xchg
js
add
je
sub
xlat
lods
inc
add
xlat
aad
add
sub
add
add
xchg
add
loope
fwait
add
nop
jmp
cmp
add
pushf
add
nop
jmp
xchg
fwait
add
push
pop
jne
nop
jmp
in
enter
inc
add
mov
inc
add
push
loopne
push
xor
nop
jmp
push
pop
xor
pop
add
nop
jmp
add
cmp
jns
nop
jmp
add
push
add
add
movzwl
push
mov
xchg
ret
hlt
test
mov
sub
ret
add
add
add
add
sbb
cli
add
add
nop
jmp
add
hlt
mov
add
push
nop
jmp
call
add
cmp
rclb
mov
add
js
inc
add
rcll
mov
add
add
add
push
push
mov
xchg
ret
add
add
mov
fldl
add
lock
dec
add
xchg
nop
js
sub
add
incl
js
add
mov
xchg
inc
add
xchg
add
nop
jmp
lods
add
push
add
in
or
pop
stos
inc
add
hlt
fimull
add
add
xlat
stc
sbb
js
add
iret
mov
nop
jmp
sti
add
add
adc
add
add
add
nop
jmp
push
add
adc
jnp
mov
mov
push
add
lods
nop
add
jnp
add
add
mov
nop
jmp
add
jecxz
leave
push
nop
jmp
mov
add
enter
push
mov
xchg
ret
push
inc
in
inc
add
add
cmp
xor
add
jmp
add
cmp
mov
add
jmp
push
inc
mov
push
add
nop
jmp
stc
add
add
jae
mov
nop
jmp
add
add
jg
lret
nop
jmp
jb
fwait
add
repnz
fs
add
add
mov
xchg
ret
add
lahf
push
nop
jmp
mov
add
jae
cmp
cwtl
mov
push
mov
xchg
ret
push
add
cmp
mov
xchg
ret
adc
pop
push
mov
xchg
ret
add
add
rolb
add
nop
jmp
add
arpl
nop
jmp
add
add
fadd
nop
jmp
xchg
add
mov
add
pushl
add
ret
add
add
add
dec
push
push
mov
xchg
ret
fwait
add
mov
nop
jmp
add
add
add
decl
adc
add
add
add
mov
iret
mov
push
mov
xchg
ret
add
add
inc
cld
nop
jmp
add
add
jecxz
loopne
jbe
add
jne
nop
jmp
add
add
mov
jmp
add
sbbb
add
decl
cmp
nop
jmp
adc
nop
add
fisubl
pop
add
nop
jmp
sti
js
adc
push
dec
push
nop
jmp
adc
add
xchg
pushf
mov
nop
jmp
nop
add
enter
jmp
jno
mov
mov
je
nop
jmp
xchg
add
jmp
add
in
ja
fwait
loopne
shll
loop
ret
add
std
and
nop
jmp
aam
js
add
add
add
decl
adc
incl
add
add
add
ret
add
add
add
add
push
add
add
add
nop
jmp
xchg
ja
add
add
pushl
add
and
pop
mov
nop
jmp
call
fwait
add
nop
jmp
stc
xchg
add
inc
roll
pop
jne
nop
jmp
add
jbe
nop
jmp
add
xchg
add
push
push
mov
xchg
ret
nop
add
add
push
push
mov
xchg
ret
loopne
js
daa
add
mov
push
mov
xchg
ret
ss
mov
push
mov
xchg
ret
jb
xchg
movsl
add
pop
push
mov
xchg
ret
js
add
push
jmp
nop
add
add
pop
not
nop
jmp
mov
add
add
nop
jmp
fcoml
sbb
add
xchg
inc
add
jmp
add
add
out
incl
add
adc
ja
add
shl
nop
jmp
mov
adc
ljmp
popa
nop
jmp
mov
add
mov
add
mov
nop
jmp
add
push
mov
xchg
ret
xchg
add
sbb
add
add
add
add
movl
jmp
add
fsub
add
add
nop
jmp
sti
xchg
mov
add
inc
add
mov
add
jmp
add
mov
cmc
xlat
call
scas
inc
add
add
push
mov
leave
mov
add
sub
push
sub
rolb
add
js
add
push
les
push
add
push
mov
xchg
ret
add
nop
jmp
add
xchg
add
add
add
mov
add
cmp
dec
or
add
mov
jns
xchg
cmpl
add
add
nop
jmp
add
add
mov
sbb
incl
add
xchg
cmp
or
add
add
sbb
test
add
incl
add
add
cmp
nop
jmp
push
add
add
push
decb
lods
imul
nop
jmp
add
sbb
xchg
decb
scas
adc
add
fiaddl
add
dec
mov
nop
jmp
inc
lock
inc
push
mov
xchg
ret
add
ss
jmp
add
jmp
jb
push
add
add
sti
cwtl
jne
nop
jmp
jnp
sti
pop
shr
nop
jmp
add
aam
add
jl
nop
jmp
dec
mov
mov
call
nop
jmp
add
xchg
lcall
in
incl
add
add
add
inc
adc
add
add
xchg
add
add
add
sbb
sti
add
push
test
add
add
sti
add
add
lods
inc
add
call
add
andnps
dec
xchg
add
sub
nop
jmp
add
js
sarl
add
call
nop
jmp
jmp
scas
add
nop
jmp
enter
pushf
add
mov
push
mov
xchg
ret
js
mov
nop
jmp
add
pushf
add
aaa
ficoml
jmp
repnz
sbb
lock
add
add
loop
dec
add
nop
jmp
add
mov
or
inc
in
ljmp
cmp
add
mov
jmp
adc
mov
jne
add
jb
add
add
add
call
mov
jmp
add
add
push
xor
add
repnz
add
push
decb
and
decl
add
pushl
jmp
add
push
nop
jmp
fwait
fwait
add
in
add
inc
xchg
add
mulb
incl
decl
popf
inc
add
aam
xlat
xchg
enter
nop
jmp
js
js
push
add
add
jne
nop
jmp
push
js
imulb
or
add
ja
add
sbb
xchg
pop
add
nop
jmp
jae
add
jnp
mov
icebp
nop
jmp
add
add
in
pop
add
push
xchg
insb
mov
nop
jmp
add
roll
add
xchg
stos
push
nop
jmp
add
add
sti
pushf
xchg
rorl
jmp
enter
add
add
nop
jmp
lock
xchg
adc
push
nop
jmp
add
pop
push
testb
lcall
ret
jmp
push
push
lods
add
add
add
jmp
jmp
jmp
push
add
faddl
sbb
adc
incl
add
cmc
out
mov
nop
jmp
add
cltd
push
mov
popf
add
ficompl
mov
cmp
mov
xchg
ret
add
add
call
add
mov
or
jmp
add
add
aad
push
push
mov
xchg
ret
call
je
nop
jmp
xchg
incb
add
add
add
in
push
add
mov
or
add
add
add
xchg
push
push
mov
add
add
add
lcall
mov
push
nop
jmp
add
add
add
enter
add
pop
jno
mov
jns
nop
jmp
fdiv
xchg
fwait
add
lock
dec
cmp
jmp
sbb
mov
add
outsl
cmpw
nop
jmp
js
jb
sti
call
nop
jmp
push
or
cmp
test
add
nop
jmp
add
mov
std
incl
pushf
jae
add
mov
pushl
mov
nop
jmp
add
jb
fcoms
jmp
add
add
mov
sbb
and
jmp
mov
xchg
add
mov
ss
and
add
push
negb
mov
xchg
ret
mov
mov
fcoms
mov
xchg
ret
nop
jmp
data16
nop
jmp
add
enter
sbb
mov
in
cmc
insl
add
add
add
dec
in
mov
nop
jmp
push
add
add
add
nop
jmp
mov
add
and
nop
jmp
mov
add
mov
nop
jmp
add
xchg
sbb
add
jmp
lahf
std
incl
add
incb
xchg
movsb
add
mov
nop
jmp
sti
pushf
sti
add
sahf
mov
nop
jmp
xchg
add
mov
jmp
aam
add
or
test
rclb
add
add
mov
push
jmp
add
push
jecxz
xchg
add
or
pop
add
add
xlat
add
mov
lea
push
mov
xchg
ret
add
out
jmp
nop
jmp
mov
pushf
cli
loopne
add
imul
nop
jmp
add
nop
jmp
add
add
in
js
xchg
cmpl
add
ss
push
add
push
add
or
pop
call
call
dec
or
dec
nop
jmp
add
incb
cmpsb
add
jmp
add
and
jmp
mov
mov
add
and
mov
xchg
ret
add
mov
and
jmp
add
add
add
sbb
xor
add
add
add
mov
nop
jmp
add
cli
add
add
icebp
das
push
push
mov
xchg
ret
add
xor
call
nop
jmp
add
xor
nop
jmp
add
pop
add
sbb
cld
or
push
add
add
add
call
add
loopne
call
jmp
sti
add
stc
mov
add
nop
jmp
loopne
add
add
mov
call
add
mov
add
call
jmp
add
sti
adc
add
pop
push
mov
xchg
ret
mov
jnp
in
push
nop
jmp
call
ss
cmp
xchg
add
add
add
dec
xlat
add
sub
add
add
add
sbb
push
movsb
nop
jmp
add
add
addb
xor
call
xor
dec
stos
push
mov
xchg
ret
add
add
add
jmp
add
mov
xchg
ret
mov
imul
sar
incl
add
add
add
nop
jmp
add
ja
add
call
jo
ljmp
fistl
and
and
add
add
add
nop
jmp
add
add
jo
call
cmp
iret
add
add
add
add
add
push
nop
jmp
nop
xlat
inc
add
xor
nop
jmp
push
adc
xacquire
mov
jmp
call
fwait
xchg
jmp
nop
in
incl
add
push
xlat
add
cmp
in
add
cmc
add
fcoml
cmp
std
jne
nop
jmp
jnp
fiaddl
add
add
nop
jmp
jb
add
pushf
add
add
or
add
add
incl
mov
call
seto
xchg
add
add
xchg
in
add
nop
jmp
sti
roll
add
clc
push
mov
xchg
ret
in
add
adc
js
push
mov
xchg
ret
add
jno
xchg
data16
mov
loop
sbb
add
inc
aas
lock
ss
add
nop
jmp
repnz
add
pop
je
nop
jmp
jb
sbb
stos
push
mov
xchg
ret
ja
jecxz
mov
nop
jmp
mov
adc
sub
nop
jmp
enter
popa
add
and
jmp
push
pushl
push
mov
xchg
ret
push
jno
mov
nop
jmp
add
add
add
add
nop
jmp
add
add
nop
jmp
lock
lods
jecxz
scas
dec
nop
jmp
add
mov
inc
add
popf
push
push
mov
xchg
ret
jmp
jne
nop
jmp
push
add
push
nop
jmp
add
sti
add
dec
nop
jmp
xchg
add
add
xchg
cmpsb
add
add
pop
nop
jmp
xchg
add
or
add
mov
nop
jmp
add
call
add
jle
movsb
nop
jmp
add
hlt
add
add
jmp
loopne
jno
mov
mov
scas
in
call
incl
add
push
add
add
jno
mov
cld
shr
nop
jmp
mov
js
add
js
loop
push
mov
xchg
ret
add
adc
nop
jmp
sbb
sbb
mov
adcb
add
add
rclb
enter
in
in
adc
sti
jne
nop
jmp
mov
mov
nop
jmp
add
add
inc
sub
pushl
add
adc
add
nop
jmp
hlt
add
sti
das
xor
nop
jmp
add
add
add
mov
nop
jmp
xchg
js
add
or
call
sti
xchg
xor
out
incl
in
add
add
add
nop
jmp
xchg
add
dec
add
cmp
jae
jmp
add
rclb
or
and
js
repnz
out
xchg
push
jg
nop
jmp
hlt
cli
fwait
js
add
movb
jmp
add
or
incl
fwait
add
jge
les
nop
jmp
add
add
ffree
jmp
stc
incl
add
mov
xchg
and
in
movsb
stos
add
add
pop
loope
popf
jmp
nop
jmp
push
add
mov
xchg
ret
nop
fwait
into
lea
nop
jmp
add
add
mov
add
fildl
mov
xchg
ret
cmpb
out
nop
jmp
add
add
xchg
and
nop
jmp
add
add
add
sub
push
mov
xchg
ret
lock
imul
jmp
js
ss
add
pop
lret
nop
jmp
mov
add
inc
add
xor
lcall
push
mov
xchg
ret
push
addb
cmpsb
add
mov
nop
jmp
add
incb
ss
push
nop
jmp
jecxz
mov
add
jmp
jge
nop
jmp
push
push
mov
mulb
jmp
add
sub
test
add
add
in
add
xchg
scas
mov
nop
jmp
add
add
add
out
lods
mov
nop
jmp
mov
add
nop
jmp
push
mov
jae
mov
pop
insb
pop
nop
jmp
mov
jecxz
add
or
jmp
add
call
add
mov
nop
jmp
add
addb
and
lcall
dec
cmp
pushl
push
inc
jae
push
jmp
call
incl
push
push
nop
jmp
mov
jno
sub
icebp
add
cmp
add
jne
nop
jmp
roll
xchg
std
push
nop
jmp
add
add
add
jmp
decb
add
mov
das
lea
push
mov
xchg
ret
fiaddl
lcall
incl
add
hlt
add
add
sti
mov
nop
jmp
sbb
stc
ficompl
xor
nop
jmp
xchg
add
ja
add
cmp
dec
add
mov
jmp
push
add
jmp
sbb
in
add
repnz
test
mov
inc
test
add
add
jmp
add
test
into
movzwl
nop
jmp
add
sbb
add
inc
add
add
xchg
nop
jmp
push
cli
add
pusha
nop
jmp
bnd
aam
push
nop
add
addl
xor
nop
jmp
push
ja
jb
add
cmp
jb,pt
nop
jmp
enter
les
jnp
nop
jmp
js
add
js
jg
leave
sub
push
loopne
in
lock
cmp
inc
in
mov
xchg
ret
push
push
jns
les
nop
jmp
cmp
add
jmp
nop
jmp
in
add
lock
pusha
push
mov
xchg
ret
cli
add
out
mov
nop
jmp
mov
add
add
add
push
mov
xchg
ret
add
xchg
jns
inc
call
incl
ficoml
add
add
bound
jmp
lock
jecxz
mov
push
mov
xchg
ret
cmp
push
jbe
add
push
mov
xchg
ret
mov
add
add
add
nop
jmp
fwait
add
mov
xor
and
jecxz
cld
push
push
mov
xchg
ret
faddl
add
test
nop
jmp
pushf
add
or
test
jmp
inc
sti
sti
int
ficoms
incl
lock
add
add
nop
jmp
add
or
sti
inc
adc
bound
push
mov
add
nop
jmp
ja
add
mov
xchg
ret
add
add
nop
jmp
mov
hlt
js
add
push
add
add
inc
add
push
mov
xchg
ret
in
add
add
xor
nop
jmp
mov
inc
sbb
jmp
aam
add
push
sbb
nop
jmp
add
add
mov
xchg
sub
stos
nop
jmp
add
cli
aam
sti
iret
push
nop
jmp
mov
fwait
pushf
add
adc
add
nop
jmp
add
scas
push
nop
jmp
add
add
add
add
add
stc
inc
nop
jmp
add
xchg
aam
lock
add
add
nop
jmp
mov
jmp
cltd
je
nop
jmp
cli
lock
xchg
cmc
out
mov
nop
jmp
aam
add
dec
mov
test
nop
jmp
add
add
cli
add
push
push
mov
xchg
ret
sti
nop
add
mov
xchg
ret
jnp
add
add
movb
add
insb
insb
nop
jmp
jb
add
incl
nop
jmp
add
add
jmp
push
jae
cltd
xor
push
mov
xchg
ret
add
sub
int3
add
add
add
add
add
add
filds
dec
cmp
jmp
xchg
add
push
lock
add
rcr
je
nop
jmp
add
jnp
add
add
add
movsl
inc
add
adc
add
xchg
repz
loope
incl
add
add
push
mov
adc
jmp
mov
inc
fwait
in
imul
lcall
add
dec
add
add
lcall
call
jmp
lock
jne
nop
jmp
add
add
decl
sbb
add
push
int
icebp
call
dec
out
jmp
pushl
nop
jmp
xchg
xchg
dec
add
add
nop
jmp
add
enter
sub
nop
jmp
xchg
mov
nop
jmp
fwait
push
add
add
add
nop
jmp
adc
add
push
nop
jmp
mov
mov
adc
iret
or
incl
add
add
pop
add
nop
jmp
jb
js
mov
dec
lea
nop
jmp
js
mov
nop
xchg
xchg
imul
enter
add
dec
jmp
nop
jmp
add
data16
push
mov
xor
mov
add
call
nop
jmp
sti
mov
add
nop
jmp
lods
add
add
js
sarb
jmp
sti
add
add
add
data16
mov
nop
jmp
ss
aad
mov
nop
jmp
jnp
js
mov
inc
nop
jmp
add
sbb
testb
cmp
add
in
lock
mov
push
add
insb
mov
nop
jmp
add
and
push
mov
xchg
ret
jno
pop
add
mov
xchg
ret
lock
and
nop
jmp
add
xchg
add
stc
add
jmp
nop
jmp
mov
hlt
xchg
shlb
xlat
bound
decl
popl
nop
jmp
jb
add
enter
inc
nop
jmp
js
add
jmp
add
rclb
sti
add
add
or
dec
clc
dec
inc
nop
jmp
push
or
xchg
dec
mov
nop
jmp
add
add
push
push
mov
xchg
ret
js
jmp
mov
nop
jmp
push
add
push
pop
je
nop
jmp
push
mov
cwtl
push
mov
add
dec
add
add
jmp
dec
jbe
add
xor
call
jl
adc
jmp
add
push
scas
loop
loopne
repnz
jno
lcall
scas
jecxz
and
call
add
adc
ret
scas
cli
push
add
mov
roll
shrl
add
movb
pop
enter
inc
add
mov
jmp
out
mov
daa
add
mov
add
popf
dec
pop
add
aas
clc
enter
loop
outsb
sbb
add
sti
sbb
add
inc
add
push
add
mov
inc
add
sbb
outsb
aad
and
decl
pop
add
jmp
sbb
add
mov
ds
dec
pop
iret
push
imul
mov
ret
dec
adc
lcall
sub
aam
add
ret
add
sbb
dec
add
lcall
push
pop
cli
bound
call
add
or
add
mov
add
fwait
loope
jns
js
add
add
lahf
imul
add
repnz
push
add
addb
sub
mov
jge
xlat
or
jl
lds
dec
mov
add
jg
xor
ljmp
movsb
add
add
cmp
push
jne
cwtl
lds
jecxz
call
lea
inc
add
add
add
cli
inc
add
add
add
arpl
jmp
add
add
mov
arpl
incl
lcall
test
das
adc
in
pop
idiv
popf
mov
add
add
inc
add
add
push
adc
add
or
push
or
add
mov
add
cmp
add
inc
add
dec
mov
add
test
ja
sbb
ret
add
lcall
ret
and
cmp
cmc
stos
scas
addl
push
add
bound
decl
add
call
outsl
dec
xlat
adc
lcall
mov
add
addl
push
add
int3
sti
push
sbb
add
imul
add
add
push
add
add
add
add
in
adc
movsl
add
adc
aas
nop
lods
mov
incl
add
imul
pusha
add
pusha
add
xor
cli
push
add
in
push
mov
dec
xor
decl
and
pushl
add
sub
mov
add
add
xchg
push
je
ja
mov
fwait
mov
xor
add
add
pushl
fldenv
add
push
add
add
pushl
incl
call
jns
xlat
xlat
sub
add
add
jb
mov
stc
push
add
pop
out
fldcw
sbb
lds
cwtl
clc
pop
data16
add
inc
add
out
in
les
movl
push
add
sti
roll
sbb
fidivs
add
int
or
add
jae
jmp
add
mov
cld
aas
jle
xlat
std
je
jmp
add
dec
lods
cmp
pushf
mov
addb
inc
add
pop
lcall
add
pop
dec
addb
dec
mov
add
push
add
mov
ljmp
fildll
fldt
mov
add
add
add
mov
ret
add
mov
add
cld
dec
pop
adc
ljmp
add
add
repnz
call
mov
mov
call
xchg
jge
xor
std
lods
push
lret
xchg
adc
incl
ljmp
add
sbb
xchg
pop
add
jmp
ss
in
enter
add
push
xchg
lds
outsl
dec
clts
add
push
std
addb
cmp
and
out
sbb
xlat
scas
and
pushl
jo
incl
add
enter
add
pop
cmp
add
mov
call
jmp
jge
inc
add
addl
add
xor
lcall
inc
add
lcall
ds
add
add
add
mov
sub
cmp
inc
add
stos
pop
push
sub
leave
and
xchg
or
cmp
aad
rcrb
cmp
add
fimuls
fwait
pop
and
ljmp
pop
xchg
push
add
add
out
ucomiss
add
mov
decl
enter
flds
lcall
sub
mov
push
scas
pop
add
fucomip
lods
mov
add
cwtl
ljmp
decl
loopne
xchg
fistl
movsb
add
cltd
fstpl
add
pushl
call
fisubrs
xor
decl
pop
in
add
add
adc
call
add
pushl
ss
xchg
adc
call
dec
lds
popa
add
scas
mov
xchg
aam
popl
push
or
xchg
mov
add
in
repz
pushl
jmp
jecxz
mov
add
cmp
inc
add
adc
jae
ljmp
xor
jmp
add
outsb
popa
add
outsb
in
outsb
cmp
jbe
adc
add
in
cmpsl
add
out
ljmp
jae
call
add
fwait
pop
ja
mov
add
mov
pop
frstor
add
fsts
add
mov
add
dec
or
add
add
jmp
pop
inc
add
jns
loop
jo
lcall
insl
lods
add
ljmp
std
cmc
sahf
jecxz
dec
lods
xchg
addb
add
insl
xchg
insb
add
jp
std
aas
xor
lcall
mov
push
dec
mov
adc
addr16
addl
jmp
add
outsl
xchg
cmpsl
add
popa
add
dec
jmp
imulb
mov
in
inc
add
ret
add
repnz
inc
add
inc
add
mov
add
or
add
inc
add
and
decl
add
add
jle
add
nop
jb
pop
addl
arpl
jmp
add
add
cmp
lret
icebp
add
xchg
call
jmp
add
xchg
or
stos
mov
push
loop
xchg
sar
in
addb
sti
or
dec
or
decl
add
add
add
lret
pushl
adc
ljmp
push
pop
inc
add
clc
outsl
out
jle
mov
mov
add
jp
add
das
mov
push
pop
add
in
xlat
sbb
add
add
lds
sbb
jo
lcall
sub
add
add
add
mov
sub
add
std
pop
stos
cld
push
shl
add
add
call
add
push
imull
ss
add
dec
mov
mov
jg
add
adc
jnp
mov
add
cmpsb
add
lods
inc
add
outsl
jg
push
xchg
fsubl
add
inc
add
add
enter
add
push
add
movb
sbb
add
imul
insl
push
add
leave
movsl
add
sti
addl
jns
gs
cmc
stos
fwait
dec
movsl
add
push
imul
inc
add
das
push
add
and
icebp
mov
scas
add
call
in
movsb
add
in
xlat
lock
aam
adc
ficompl
sahf
dec
push
mov
jg
add
inc
add
cld
xor
ljmp
lds
movb
ja
add
cwtl
cmpsl
add
add
lcall
pop
nop
bound
jmp
incl
mov
cld
cmpsl
add
and
stc
mov
jnp
add
add
sub
add
or
imull
lea
add
dec
addr16
mov
push
add
mov
add
incl
repz
xor
add
add
cmp
sbb
call
ljmp
add
jg
mov
ljmp
sbb
pop
xchg
outsl
and
jmp
add
mov
cmp
jns
jb
decl
mov
repnz
add
xor
rolb
js
les
pop
decl
pop
outsb
movl
push
add
push
add
dec
push
aas
test
ss
add
dec
jns
mov
add
pop
sub
cs
cmp
in
cmp
hlt
movl
lds
rol
add
or
cmp
add
xor
lcall
aas
bound
decl
pusha
add
dec
mov
add
lret
in
xor
jmp
or
add
mov
scas
outsb
roll
add
sbb
mov
mov
ret
daa
add
mov
popf
xlat
add
mov
add
add
cli
push
add
push
xchg
das
xor
push
mov
repz
ljmp
mov
add
cmp
and
jns
inc
add
roll
add
int3
mov
add
add
scas
sar
je
fwait
imul
pusha
add
xchg
push
add
aas
dec
add
clc
mov
scas
shll
cwtl
push
add
jecxz
sbb
sub
bound
call
lcall
add
and
call
pushl
mov
into
xchg
mov
and
add
lcall
sahf
sub
pop
push
test
xor
lcall
aas
and
ljmp
fwait
or
cmp
jle
adc
ljmp
and
flds
decl
pop
xchg
jle
mov
pop
sbb
addl
add
sbb
push
add
sarb
cld
xor
jmp
adc
dec
adc
pushl
add
and
and
out
mov
xchg
add
cs
add
in
ljmp
jmp
cmc
loopne
lret
add
mov
or
lea
ja
xor
pushl
mov
push
push
pushl
inc
add
leave
jns
add
mov
add
rolb
pop
add
add
nop
leave
push
add
stos
add
add
sub
orps
ljmp
jbe
xor
stos
adc
call
jne
add
cld
fucomi
loope
roll
or
push
mov
pop
jo
call
add
xor
lods
movsl
add
add
add
add
addb
cmp
add
add
rolb
ret
add
add
push
add
mov
add
cmc
mov
mov
outsb
stos
xlat
popa
add
push
add
lods
jae
lcall
pop
test
xchg
ret
leave
mov
or
add
add
repnz
out
movb
not
imul
pop
inc
add
dec
xor
adc
add
divl
add
sbb
mov
add
dec
outsb
cmp
add
mov
rolb
and
call
ret
mov
add
jg,pt
aam
mov
add
cmp
addb
add
jmp
add
add
mov
add
push
aaa
ret
add
lret
aaa
xchg
sahf
inc
add
pop
stos
daa
add
bound
jmp
add
add
jge
js
jo
decl
add
stc
ljmp
aas
pop
iret
lods
pop
aam
mov
cmpsb
add
pop
pop
sbb
xlat
hlt
fadds
incl
data16
or
adc
jmp
add
mov
push
aas
jnp
add
sbb
mov
mov
xlat
xlat
movsl
add
pusha
add
outsl
icebp
pop
test
mov
jnp
or
test
addb
mov
sbb
sbb
or
out
ret
add
lret
sub
add
inc
add
ja
pop
leave
cltd
sbb
add
add
repz
add
push
fmull
test
inc
add
rcll
cmp
ljmp
jns
add
inc
add
int3
mul
add
rorb
push
add
fisubrl
out
out
movsl
add
jge
je
add
aam
add
add
dec
and
incl
sbb
add
decl
ret
add
popa
add
dec
mov
pop
movsl
add
add
jmp
adc
inc
add
add
jmp
cmp
push
test
add
add
inc
add
xchg
jmp
outsl
dec
movb
lret
das
lcall
in
push
add
or
jle
add
adc
incl
decl
cmp
divb
xchg
jo
pushl
jbe
add
insb
enter
add
mov
std
addb
add
add
ljmp
add
insl
mov
arpl
ljmp
es
add
ljmp
push
inc
add
movl
add
cltd
out
add
add
scas
pop
or
ret
add
iret
pop
pop
adc
jmp
add
sbb
xchg
jbe
jno
fprem1
mov
movl
push
sbb
add
mov
pushl
decl
les
pop
popa
add
std
cmp
inc
add
test
pop
insb
inc
add
fwait
cmp
popf
data16
mov
dec
mov
js
call
sbb
xchg
sub
mov
ret
add
je
mov
sub
test
or
lea
xlat
add
lods
push
add
sti
call
sub
xchg
xchg
sarb
iret
shrl
add
dec
push
add
push
add
addl
add
in
out
dec
jno
in
ja
adc
mov
add
xor
incl
mov
call
nop
cltd
pop
aad
inc
add
arpl
call
xor
and
ret
add
dec
and
incl
incl
incl
or
jmp
pop
bound
decl
addb
xchg
dec
mov
lock
and
jmp
adc
jmp
add
mov
add
sahf
mov
sub
lds
outsb
xor
mov
call
add
rolb
add
dec
pop
sbb
aas
test
add
stc
repnz
add
add
bound
ljmp
add
dec
add
out
ja
add
fldenv
add
dec
push
add
sti
or
loope
xor
lcall
outsb
iret
fistpl
dec
add
jb
jmp
add
add
rorb
imul
add
loopne
scas
lds
mov
mov
or
data16
cmp
ljmp
decl
add
adc
mov
add
add
xor
pushl
ds
scas
pop
inc
add
movsb
add
stos
popf
push
sbb
ret
add
pop
inc
add
sub
xor
jmp
and
call
cmp
add
add
add
fcompl
add
mov
add
add
add
ja
jo
call
mov
xor
xchg
mov
mov
fwait
jae
decl
or
add
inc
add
imull
inc
add
add
decl
add
ja,pt
mov
xchg
in
cli
into
jle
add
inc
add
add
popa
add
mov
mov
add
xor
pushl
call
mov
je
add
loope
imul
inc
add
inc
add
lea
jb
dec
loop
xchg
fucomi
mov
mov
or
mov
add
jmp
imul
stos
inc
add
jmp
fnstenv
mov
add
jge
jge
add
add
jmp
add
mov
add
lcall
sbb
add
decl
addl
cli
loopne
mov
jle
add
add
add
jg
add
xor
dec
in
cmp
xchg
repz
add
and
call
lods
pop
aas
lds
dec
outsb
push
add
add
daa
add
stos
ljmp
add
in
inc
add
xchg
add
add
icebp
jmp
in
jae
out
xchg
loop
push
adc
call
pushf
add
ljmp
add
mov
add
cmpsb
add
pop
push
into
nop
test
addb
add
mov
add
les
jmp
cmc
stos
sti
mov
push
push
jecxz
add
jmp
add
add
add
stos
add
hlt
push
insb
cld
pop
mov
add
sbb
add
jmp
add
fsubr
ss
add
rorl
pop
leave
popf
xor
add
add
and
lcall
in
movb
jb
cmp
mov
inc
add
mov
sub
dec
testl
add
imul
mov
das
adc
jmp
add
test
call
jmp
bound
lcall
xchg
cmp
jg
fwait
mov
mov
add
add
add
dec
push
movb
add
outsl
lods
sub
add
out
or
call
mov
aas
push
add
addl
ds
xor
decl
std
rolb
jle
cld
inc
add
outsl
scas
xchg
jp
add
add
outsl
lds
xchg
sub
add
add
ja
mov
js
lds
cmpsl
add
call
sub
add
inc
add
sub
add
decl
jnp
sub
cli
mov
mov
imul
mov
leave
scas
xchg
pushf
or
inc
add
xor
inc
add
inc
add
mov
inc
add
xchg
inc
add
sub
out
jecxz
aaa
movb
xchg
cld
and
cmp
in
shlb
lods
push
add
jo
pushl
call
call
pop
jp
add
int3
lret
stc
jecxz
xchg
cmp
add
xor
fstl
lcall
add
repz
jg
test
add
xchg
add
and
jmp
add
data16
mov
add
add
add
pop
test
sbb
add
add
pop
fldenv
pushl
add
jno
incl
decl
rolb
xor
jg
add
jmp
mov
add
and
xchg
std
in
cld
cmp
push
aad
leave
in
xor
dec
dec
je
into
fcoml
incl
add
and
jmp
push
push
dec
mov
jmp
push
roll
jbe
push
add
out
sti
pop
stos
fstl
je
lods
jnp
dec
test
sub
mov
lds
das
je
pop
out
movb
movsb
add
call
inc
add
mov
js
add
add
negb
rolb
add
add
out
and
jmp
add
stos
pushf
pop
insl
pop
mov
add
add
dec
jle
adc
lcall
add
mov
stos
xor
call
push
xchg
mov
int3
lret
sbb
das
or
incl
sbb
dec
aas
test
sub
mov
push
jae
incl
add
decl
clc
es
hlt
fsubrl
in
cli
sub
xor
mov
push
stc
loope
fwait
mov
lods
pop
insl
in
xchg
xlat
addb
add
or
dec
cld
roll
add
mov
pusha
add
dec
and
inc
add
add
add
add
in
xchg
cld
mov
movl
cmc
icebp
out
lret
push
out
insl
add
add
cmpsb
add
add
inc
add
mov
add
xchg
and
add
pushl
outsl
fsubrl
dec
mov
lcall
push
cmp
test
addl
sub
das
out
pop
test
iret
addb
add
leave
mov
mov
idivl
cmpsb
add
pushl
std
add
aas
sarl
inc
add
addb
movsl
add
cltd
clc
or
add
inc
add
call
add
cltd
inc
add
addb
add
jg
in
aaa
push
add
fcoms
push
loopne
fnstcw
insl
mov
pop
dec
sbb
mov
add
mov
dec
adc
ljmp
dec
xor
push
add
sub
adc
ljmp
ss
out
icebp
je
and
ljmp
dec
mov
add
test
sti
pushf
std
mov
mov
add
repz
jg
add
add
cs
add
test
pop
add
decl
add
dec
into
sbb
movl
in
jae
jmp
call
incl
add
mov
inc
add
movsl
add
add
sub
add
cld
ja
mov
nop
insl
movb
jo
lcall
inc
add
mov
xor
jmp
add
mov
fstpt
xchg
lods
fsubrs
mov
pushf
sahf
mov
sbb
add
test
loope
pop
sub
roll
add
xor
decl
call
mov
movsb
add
test
fwait
or
lods
inc
add
addl
clc
les
mov
ficoml
pushl
out
fidivrs
add
add
fstpl
aad
add
push
add
or
add
push
mov
test
loopne
xor
fnstsw
lahf
pop
add
mov
adc
call
add
mov
push
mov
add
jmp
sarb
push
add
xchg
inc
add
sub
jle
loope
pop
add
add
lods
sub
pop
inc
add
sarb
jp
add
pushl
mov
add
add
xchg
mov
xchg
iret
push
roll
mov
lcall
cmp
test
sbb
add
in
addl
mov
push
nop
outsb
dec
sbb
mov
test
mov
pop
add
pushl
push
push
jecxz
ss
add
or
pushl
call
mov
addb
pusha
add
fldl
add
mov
add
call
xor
jmp
cmp
lcall
add
fnstsw
iret
jmp
add
popf
flds
add
fsubl
incl
add
inc
add
ds
mov
jo
jmp
xchg
jge
or
or
xchg
lret
cmp
cwtl
rolb
push
add
pop
rcrb
mov
add
insb
sbb
cmp
int3
mov
xor
call
pop
test
add
test
cmp
mov
leave
lcall
xor
push
fidivrl
add
and
push
add
jge
aaa
std
lret
dec
rolb
in
mov
add
mov
imul
xchg
addb
repnz
roll
add
sbb
add
add
movl
rolb
add
pop
pop
insl
pop
jmp
pop
mov
add
lock
add
jne
fldlg2
ja
stos
out
lahf
outsl
stos
aaa
inc
add
inc
add
sbb
add
add
divb
xchg
popa
add
dec
and
js
into
adc
std
cmp
loope
jne
loop
lret
adc
pushl
repz
add
mov
call
ret
add
pop
xor
lcall
scas
jecxz
scas
push
add
add
adc
jb
iret
mov
and
pushl
mov
xchg
xchg
lods
pop
arpl
incl
sbb
mov
push
outsb
cmp
outsl
dec
sbb
mov
clc
outsb
xchg
lods
and
call
add
shrl
add
lret
cmp
jecxz
ss
icebp
cmp
addl
in
cli
add
jmp
add
ja
add
roll
xchg
es
add
lret
push
incb
jl
add
mov
sbb
add
lods
mov
adc
inc
add
inc
add
add
or
shll
add
sub
mov
and
ds
or
inc
add
test
push
add
rolb
lcall
ja
sub
pushl
jns
cmp
add
imul
or
add
fidivl
dec
mov
pop
or
inc
add
mov
ljmp
popa
add
iret
repnz
mov
lret
js
lret
jae
decl
xchg
mov
loop
mov
add
cltd
aad
fisubs
add
es
cli
mov
jmp
add
pushl
fnstsw
movsl
add
mov
movsb
add
call
push
add
push
rcll
test
inc
add
push
jl
lods
xlat
cmp
add
test
ss
add
add
addb
add
mov
sub
movsb
add
push
int
inc
add
nop
add
ljmp
ja
add
call
in
sub
add
pop
fwait
scas
mov
add
add
shr
adc
ret
add
add
pop
clc
mov
add
cmp
cmc
pusha
add
cwtl
push
or
add
incl
pop
test
nop
addl
cmp
jno
call
xchg
sahf
lcall
mov
incl
add
mov
pop
add
addl
jmp
lcall
xor
aas
pop
xlat
xchg
push
add
mov
loopne
pop
popa
add
sahf
fdivs
jns
push
adc
call
push
xchg
mov
add
add
add
add
and
inc
add
add
add
push
add
out
daa
add
xchg
shrl
sbb
ss
pop
outsb
jge
cmpsl
add
ficomps
add
pop
les
sub
inc
add
shlb
add
cmp
cmp
add
dec
ljmp
call
aas
lds
xor
jmp
add
cli
add
inc
add
mov
add
sub
add
idivl
push
rcll
push
nop
arpl
incl
out
xor
add
in
sbb
test
add
xor
add
imul
add
mov
lcall
add
ja
addl
add
add
jmp
add
push
cli
ret
popf
push
add
lds
add
mov
adc
jmp
add
inc
add
xchg
or
add
dec
inc
add
jno
ljmp
ljmp
mov
mov
add
dec
push
add
repnz
leave
int
inc
add
imul
sti
roll
adc
dec
xchg
pop
add
add
add
add
sbb
lcall
jo
mov
incl
add
roll
add
ljmp
into
sbb
scas
stc
sarl
test
mov
add
aad
add
add
or
sub
repnz
loope
lcall
in
insb
ret
shll
call
lcall
insl
push
add
mov
sub
scas
mov
add
mov
add
mov
xlat
addl
sbb
or
add
push
add
jp
add
add
jge
mov
cmp
add
decl
arpl
inc
add
scas
loop
sbb
add
iret
in
movl
pop
add
decl
jmp
incl
xchg
adc
decl
dec
push
inc
add
lods
mov
jnp
sub
add
inc
add
testl
sbb
js
ficoml
ljmp
data16
jae
ljmp
lds
jmp
iret
cld
fdivrl
pop
sbb
xchg
sub
add
inc
add
cmp
roll
add
sub
add
add
adc
ljmp
adc
add
inc
add
mov
aam
push
adc
call
push
xchg
xor
cmp
aaa
addb
lock
stos
jge
xchg
ja
pop
add
add
mov
insl
inc
add
add
push
jge
sti
xlat
loop
xor
add
inc
add
sbb
add
aaa
mov
push
cmc
push
inc
add
push
add
add
roll
call
add
addb
mov
jmp
mov
out
popa
add
ja
roll
mov
mov
shr
out
adc
decl
add
loope
aaa
sub
add
jmp
add
arpl
decl
sarl
in
das
shll
xchg
movsl
add
ljmp
mov
add
push
add
jo
lcall
add
or
push
add
jo
call
rcll
add
aam
add
decl
add
repz
ja
add
lret
xor
inc
add
jmp
pop
jne
add
add
mov
ljmp
and
dec
add
mov
add
call
inc
add
out
in
rcl
pusha
add
or
incl
mov
pop
sub
inc
add
jne
add
xor
call
add
imul
add
add
lret
mov
mov
cmp
jns
lods
imul
pop
adc
add
add
mov
call
fisubrs
sub
push
add
roll
add
add
add
push
add
imul
sti
addl
pop
add
adc
add
xchg
mov
jle
pushf
int3
inc
add
add
pop
arpl
lcall
add
push
adc
add
pushf
stos
idivl
bnd
pop
jns
push
and
lcall
xchg
fldt
sub
inc
add
pusha
add
sbb
lret
jl
mov
mov
add
add
adc
mov
insl
mov
add
data16
or
add
jno
ljmp
out
push
add
repnz
jmp
jmp
add
add
cmp
add
imul
add
cmp
jmp
add
mov
add
lcall
pop
add
pushf
pop
jl
movl
add
add
cwtl
or
loop
or
in
dec
stos
jnp
movsb
add
dec
or
xchg
sub
rolb
pushf
add
mov
call
js
add
std
sbb
inc
add
aas
xor
inc
add
ljmp
data16
mov
je
mov
shr
stos
clc
xor
out
or
loopne
outsb
and
inc
add
add
in
push
add
sub
ds
cmpsb
add
test
jmp
bswap
imul
xchg
out
loopne
add
lcall
data16
jbe
ja
add
push
stos
cmp
add
sbb
cltd
mov
std
addb
add
scas
das
xchg
mov
lock
push
add
jno
pushl
add
aaa
in
nop
sbb
add
pop
xor
addb
cmp
add
shr
xor
jmp
ss
movsl
add
push
add
fwait
mov
add
xchg
mov
add
and
jmp
add
add
add
addl
add
inc
add
faddp
add
les
outsl
mov
lcall
inc
add
fnstenv
and
pushl
dec
and
add
addb
test
mov
add
sbb
roll
insl
test
dec
pop
sbb
jmp
decl
stos
ja
xor
jbe
push
loope
pop
pop
enter
fwait
iret
inc
add
pop
data16
decl
lea
add
cmp
enter
call
add
push
add
xchg
loope
add
ljmp
mov
jb
pushl
pushl
mov
or
lcall
sbb
adc
incl
repz
mov
add
ret
add
add
incl
add
add
push
pushf
movl
popf
push
pop
add
out
movl
aas
pop
inc
add
inc
add
mov
add
data16
add
cmp
add
mov
or
xchg
lods
test
je
add
mov
add
aas
push
add
lock
lea
add
iret
iret
xchg
paddw
in
xchg
test
push
push
add
cltd
loopne
and
mov
mov
add
shrb
repz
mov
add
mov
ficoms
add
fiadds
ss
aam
add
loop
lahf
cmp
add
mov
add
data16
and
lcall
imul
out
inc
add
adc
call
incl
add
jno,pt
jmp
and
jmp
call
add
cmc
sbb
and
mov
ss
jecxz
out
add
fsubs
add
xor
loopne
lret
and
xchg
sbb
or
add
adc
call
mov
sub
imul
xchg
inc
add
cltd
mov
repz
add
add
incl
test
out
fiadds
pushl
add
adc
xlat
xor
incl
add
mov
add
add
call
call
repnz
scas
sub
call
scas
add
ljmp
adc
call
add
jno
inc
add
cmpsl
add
mov
add
jne
insb
and
cmp
inc
add
sbb
das
ljmp
jbe
add
inc
add
ljmp
js
add
jbe
and
push
mov
add
sbb
scas
jg
roll
push
scas
fsubrl
add
movl
aaa
jo
jge
int
sub
cmpsl
add
add
add
stos
pop
xor
inc
add
mov
out
dec
stc
jno
jmp
cmp
dec
cs
jne
sub
mov
xchg
adc
ljmp
or
add
push
mov
cmp
add
xchg
test
jl
dec
les
in
cs
js
add
or
add
fldt
xor
decl
mov
add
les
xor
pushl
or
int3
in
adc
jmp
add
ljmp
add
xor
ljmp
cmpsb
add
insl
les
xor
ljmp
add
add
call
add
dec
xchg
xchg
inc
add
int3
sti
add
mov
add
mov
pushf
mov
pop
mov
add
popa
add
in
scas
std
mov
add
pop
add
nop
jb
pushl
add
jmp
add
add
jle
lds
movsb
add
call
add
cld
add
add
faddl
add
xlat
mov
xchg
testl
mov
cwtl
push
add
mov
add
mov
add
add
jg
jb
call
pop
push
cltd
or
mov
fsubrs
add
incl
lcall
add
add
call
mov
add
call
push
cwtl
hlt
sbb
call
lcall
dec
in
or
add
or
dec
cmpsb
add
push
add
mov
icebp
scas
push
add
push
add
add
nop
cmp
mov
add
push
add
fnsave
add
and
incl
imul
add
add
cmp
addl
push
sub
cmpsb
add
add
cli
lods
and
lret
cmpsb
add
push
xchg
jbe
dec
sub
mov
add
sbb
add
xchg
lds
in
addb
cmp
inc
add
adc
ljmp
les
pop
int
imul
mov
nop
pop
push
add
add
mov
jl
xor
pushl
lock
fidivrs
add
add
pop
add
add
loop
xchg
jge
add
sbb
add
ret
sbb
adc
inc
add
std
cmc
jmp
sbb
in
lods
fsts
fsts
push
gs
pop
cmp
xchg
aad
mov
inc
add
adc
ljmp
xlat
push
lret
out
inc
add
and
in
inc
add
aam
add
cmpsb
add
mov
jmp
push
bound
jmp
das
inc
add
sbb
sti
aas
movb
fwait
lea
jae
decl
int3
dec
adc
cld
xchg
pop
mov
outsb
xchg
sub
movsb
add
lods
adc
incl
mov
call
repz
jae
pushl
and
incl
mov
add
sbb
add
pop
aas
mov
iret
in
add
and
pushl
add
repz
add
xchg
lock
add
dec
aam
lret
add
pushl
add
mov
add
sub
fldcw
cmpsl
add
push
xor
leave
push
adc
add
sub
out
dec
adc
add
cltd
xor
decl
add
jl
pusha
add
mov
add
lea
repnz
dec
aam
adc
lcall
add
iret
xchg
xor
add
add
add
pop
add
add
dec
clc
ficoml
pop
inc
add
jl
add
fcmove
xchg
inc
add
add
scas
xchg
cmpsb
add
xor
pushl
bound
incl
add
add
add
and
jno
ljmp
sbb
add
adc
jno
incl
add
push
inc
add
rorl
add
push
ret
add
add
jmp
pop
pop
jge
fsub
add
push
and
decl
pop
outsl
sbb
add
xor
gs
add
add
ljmp
add
pop
push
std
push
shrb
xor
ljmp
lea
or
add
cmpsl
add
mov
popa
add
shlb
add
or
mov
add
mov
arpl
incl
add
inc
add
rolb
addl
imul
add
je
add
sub
mov
add
mov
pop
outsb
imul
xor
jmp
jp
add
jo
ljmp
add
bswap
outsb
cmp
call
mov
mov
icebp
or
add
pushl
mov
jb
jmp
add
pop
add
sub
mov
lret
pop
add
add
fldt
xchg
and
xor
ljmp
add
add
adc
in
jp
roll
lods
fistpll
sub
sbb
inc
add
mov
push
call
adc
inc
add
mov
add
or
fistpll
inc
add
les
jg
imul
xchg
jecxz
and
jmp
add
add
xor
call
adc
add
inc
add
fwait
pop
shl
add
test
fadd
add
add
dec
sbb
add
dec
add
dec
pushf
test
aas
add
lcall
lahf
in
mov
mov
aam
mov
add
lds
mov
add
pushl
cld
add
lea
mov
imul
sub
scas
dec
aam
add
sahf
push
pop
imul
add
fwait
lahf
jb
decl
dec
sub
xchg
xor
sbb
dec
out
movb
and
decl
sub
dec
js
add
ljmp
lock
add
add
ljmp
insl
mov
fs
add
stos
dec
cli
fisubrs
in
add
add
dec
xor
cmp
jmp
pushl
add
test
stos
xor
incl
add
push
jmp
add
aad
addl
rorb
xchg
ss
xchg
out
inc
add
pop
sahf
sbb
xor
incl
call
pushl
scas
dec
lods
or
push
rolb
add
add
add
jl
je
xchg
aas
fwait
insl
xor
call
call
inc
add
add
popa
add
jmp
roll
addl
add
call
imul
lock
add
add
add
addb
sbb
cmp
jmp
and
rolb
add
lret
testl
jecxz
ret
add
jl
xchg
mov
push
cmp
add
nop
in
jl
cmp
add
add
movsb
add
push
add
pop
popf
rolb
add
cwtl
sub
jb
jge
add
add
add
lcall
add
mov
add
add
aas
ljmp
add
out
sub
movsl
add
lds
sub
add
sub
lea
bound
jg
or
adc
decl
popf
pop
inc
add
add
sbb
add
push
add
mov
add
dec
dec
dec
mov
add
sub
xlat
lret
js
fidivs
mov
icebp
jbe
rorl
dec
mov
add
loope
imul
cmpsl
add
add
add
mov
mov
xchg
push
aad
pushf
out
or
xor
cmp
imul
add
push
xchg
addl
add
pop
mov
add
movsl
add
outsb
xor
incl
add
incl
fldl
mov
add
inc
add
xchg
sub
add
repnz
add
add
dec
cs
xchg
mov
add
ret
add
push
xchg
sti
mov
dec
jns
out
stos
into
call
add
jmp
jb
lcall
fwait
push
add
jge
pop
jb
jmp
imull
je
mov
or
in
loopne
ret
add
dec
movb
add
add
ljmp
cld
imul
add
pop
mov
sub
push
fxch
roll
movsl
add
aas
pop
jo
jmp
and
movsb
add
push
add
mov
add
inc
add
add
add
jmp
add
add
push
imul
ljmp
mov
add
call
cmp
add
ljmp
add
push
enter
aaa
scas
lahf
pop
pop
sub
add
fstps
dec
sbb
pushl
add
imul
xor
jmp
stos
cmp
aas
ret
xchg
push
pop
int
mov
inc
add
pop
jp
add
sbb
push
jle
add
xor
jge
add
insl
add
add
movsb
add
push
fcomps
mov
jns
mov
jg
add
incl
movl
data16
iret
scas
adc
ljmp
push
add
mov
inc
add
incl
outsb
jbe
clc
movsb
add
push
pop
dec
mov
mov
add
jmp
incl
add
roll
pop
mov
fbstp
test
cmp
nop
adc
dec
icebp
xor
push
aam
adc
cld
adc
decl
sub
lods
mov
add
jmp
lea
add
ficomps
jmp
movb
mulb
cltd
fcoms
push
int
cld
lahf
mov
mov
pop
stc
jbe
add
iret
jmp
add
lods
pop
and
pushl
dec
push
movb
imul
pusha
add
negb
sbb
out
or
pop
fisttpll
test
fmul
xchg
add
fldl
add
lods
and
jmp
add
ja
add
jmp
add
xchg
mov
add
mov
add
dec
push
dec
mov
movsb
add
add
fdivrl
add
mov
add
fcmovnbe
lds
cmp
addl
ja
fcompl
push
mov
decl
add
enter
add
mov
add
pop
cltd
sbb
add
add
movl
incl
popa
add
jmp
add
mov
xchg
ffreep
add
push
mov
les
fmulp
dec
int3
decl
jmp
cmc
xor
push
and
push
mov
inc
add
arpl
ljmp
outsb
cs
sti
ljmp
mov
add
add
or
pop
cmp
and
incl
cmp
add
fucom
add
jmp
pushl
add
sub
jo
pushl
sar
inc
add
adc
dec
cwtl
popa
add
push
add
decl
jg
loop
cwtl
iret
fsts
ljmp
loop
out
inc
add
xor
in
jb
jmp
add
fld
add
add
add
pop
cmp
jne
add
movsl
add
lock
call
add
inc
add
inc
add
add
add
clc
imull
add
pushl
add
in
icebp
and
decl
mov
movsb
add
pushl
add
js
xchg
int3
sarb
add
addl
mov
or
call
jb
mov
lret
cltd
stos
jmp
scas
sbb
xchg
add
add
ljmp
mov
outsl
push
add
addl
add
movb
pop
aas
mov
xchg
push
lcall
lcall
xchg
dec
mov
addl
add
arpl
ljmp
add
jmp
add
xchg
sub
add
add
jb
call
incl
ljmp
fsubr
shl
jno
jle
add
aam
add
add
push
fstpl
in
xor
incl
add
inc
add
add
lcall
nop
mov
add
test
add
push
sub
call
add
pushf
jle
jno
jmp
xor
incl
add
adc
cmpsb
add
neg
pusha
add
jmp
dec
cmp
add
in
addb
push
arpl
push
fcoml
cmp
add
cmp
add
outsl
lods
les
and
and
jmp
dec
loop
or
cwtl
loop
add
ljmp
lret
push
adc
jmp
add
cmpsl
add
pop
inc
add
gs
repnz
add
xor
jne,pt
mov
ret
std
cwtl
xlat
lds
push
add
pop
cmpsb
add
ficoms
add
dec
sub
cmpsl
add
add
or
aas
mov
add
or
mov
mov
add
addl
jns
inc
add
xor
pushl
add
add
sub
jmp
dec
std
pop
inc
add
add
xor
push
add
xor
fwait
stc
rolb
and
cli
lahf
dec
test
add
mov
sti
cmpsb
add
cmp
add
sbb
add
das
in
jbe
fisttpl
enter
add
xchg
push
add
jp
adc
lcall
add
jl
lods
test
ljmp
add
add
mov
push
add
push
add
ss
add
call
or
cld
add
lcall
sbb
lea
add
in
push
jle
clc
or
jne
add
clc
inc
add
dec
inc
add
shlb
add
add
je
add
lods
add
add
popa
add
scas
push
add
and
incl
add
pop
mov
cmpsb
add
add
hlt
xlat
lret
bound
jmp
lcall
add
cmp
add
push
adc
add
outsb
jae
mov
jo
lcall
sub
and
fsubs
jmp
and
incl
jge
add
int
jnp
fsubrp
test
cmp
lods
inc
add
add
incl
add
push
lcall
sub
dec
addl
pop
cmp
add
and
pop
int
test
cld
aad
sbb
xor
add
jo
lcall
mov
pop
add
mov
or
pop
mov
add
or
add
add
add
add
fcomps
testl
add
decl
roll
loope
pop
ds
mov
add
in
test
add
mov
or
add
cmpsl
add
and
inc
add
mov
sub
adc
incl
int3
or
add
dec
inc
add
jmp
add
push
add
pop
addb
icebp
inc
add
add
add
jo
push
negb
push
add
xlat
push
sub
mov
mov
cmp
test
push
add
ljmp
add
add
add
and
data16
outsl
pop
cmp
add
mov
sahf
rol
add
add
cmpsb
add
add
mov
add
dec
lods
pop
xchg
cmp
ret
add
add
inc
add
adc
decl
ret
out
add
ljmp
add
fwait
and
pop
iret
sub
add
add
sub
mov
add
addb
add
adc
incl
clc
mov
add
mov
sub
push
cld
lahf
call
ret
add
jle
addb
add
dec
sbb
xchg
scas
adc
ljmp
add
xchg
mov
out
cmp
mov
add
push
rcrl
nop
fldenv
push
movb
sub
add
mov
incl
frstor
add
lods
ljmp
add
in
nop
mov
ljmp
test
dec
xchg
iret
jp,pn
ja
inc
add
pop
inc
add
sub
test
xor
pushl
xchg
add
xchg
mov
repnz
fidivrl
add
jo
decl
loop
push
int
roll
decl
addl
or
movb
xor
incl
incl
incl
push
mov
add
add
jae
mov
inc
add
ljmp
clc
jno
js
add
fldcw
push
int
add
les
xor
lcall
incl
fists
leave
add
idivb
add
adc
inc
add
mov
mov
pop
lock
mov
das
ret
add
dec
dec
pop
sarl
test
mov
jp
lea
out
cmp
loopne
pop
addl
arpl
lcall
addb
xor
call
in
inc
add
jno
in
push
aam
xor
decl
sub
data16
frstor
mov
add
dec
movsb
add
add
sahf
inc
add
pop
mov
mov
std
mov
addl
addl
add
push
add
test
divb
cs
sahf
adc
decl
jecxz
mov
repz
incl
into
mov
incl
add
add
incl
or
add
cmp
add
roll
add
add
lock
and
lcall
movsb
add
or
add
mov
add
insb
add
call
movb
xor
call
add
adc
add
xor
lcall
aad
lock
clc
cmp
addl
in
outsb
les
addb
add
es
dec
dec
jns
add
lahf
jle
add
js
add
scas
dec
cli
shll
xchg
call
add
test
dec
or
out
cmp
pop
test
xchg
inc
add
inc
add
jo
ljmp
add
divb
ljmp
sti
dec
les
push
add
ds
outsl
cmp
out
std
lcall
bound
lcall
insb
ret
add
outsb
daa
add
add
in
fcom
repz
sbb
test
jle
add
call
push
test
pop
ret
cmp
sbb
add
add
addb
add
or
hlt
xchg
pop
int3
jl
jmp
add
fwait
dec
adc
lcall
lods
mov
add
ret
add
add
inc
add
xchg
stc
sbb
add
roll
cmp
inc
add
jns
push
mov
add
pop
aas
push
add
fimuls
add
lahf
movb
mov
call
sbb
add
scas
out
les
sub
fwait
dec
and
ljmp
stc
pop
sbb
push
scas
jns
setno
and
cmpsl
add
add
dec
and
ljmp
add
sbb
add
call
push
lahf
push
add
sbb
add
add
dec
or
sub
movb
add
mov
add
jge
add
or
mov
add
addb
cmp
add
loop
xchg
mov
stos
faddp
add
push
sub
mov
inc
add
xchg
loop
adc
ljmp
test
aad
mov
and
in
shll
repnz
mov
je
add
pop
push
add
call
push
jns
dec
dec
mov
xchg
in
adc
ljmp
push
add
ss
and
incl
add
mov
add
xor
call
data16
xchg
hlt
ret
add
test
sbb
add
add
incl
pop
xchg
and
call
imul
addl
insl
rcrl
imul
fmul
push
add
out
out
push
cmp
iret
xchg
add
mov
sbb
pushf
adc
push
insb
repz
add
sub
pop
insl
jg
add
add
mov
addl
incl
add
sti
dec
dec
pop
iret
int
mov
sbb
add
inc
add
aaa
mull
or
lds
int
add
sub
mov
mov
addl
add
add
add
inc
add
outsb
xchg
lret
add
fcmovnu
push
mov
add
ljmp
int
add
push
add
iret
mov
fidivl
add
lcall
add
mov
add
jns
xor
decl
add
xor
adc
add
xchg
jae
lcall
or
adc
cmp
add
adc
call
jmp
add
adc
mov
mov
pushl
lahf
ljmp
xor
jmp
mov
add
mov
roll
cs
jg
add
push
jg
enter
sub
add
xchg
cli
fidivrl
mov
pop
sub
add
ljmp
add
add
cmc
and
xchg
out
pop
add
dec
lock
ljmp
into
pop
or
int
cltd
repz
add
pop
jnp
or
mov
pop
mov
push
jne
jg
ss
bound
ljmp
cmp
stos
cmpsb
add
add
in
test
sbb
add
movl
xchg
inc
add
lcall
add
xor
decl
mov
pusha
add
cltd
je
add
sub
add
mov
add
rolb
mov
mov
add
add
jae
call
fistpl
test
in
mov
lcall
lcall
insb
adc
call
les
dec
aaa
mov
push
inc
add
xchg
sbb
pop
mov
in
addb
movsl
add
ja
push
sub
add
shrb
pop
add
or
add
jmp
jp
or
jb
jmp
add
sub
sbb
add
cmp
jle
add
add
push
jecxz
mov
add
pop
hlt
pop
mov
push
sbb
call
add
sti
icebp
pusha
add
mov
mov
push
mov
pop
mov
add
lcall
repnz
in
add
setl
dec
inc
add
add
add
add
cmpsb
add
jecxz
or
nop
in
loop
sbb
add
shll
sbb
dec
jle
cmp
add
xchg
push
dec
xchg
into
adc
ljmp
jl
jg
sarl
dec
addb
add
mov
add
movsl
add
xor
jmp
add
xchg
lds
push
hlt
pop
inc
add
add
mov
cmp
push
add
cli
push
mov
add
popa
add
mov
mov
add
add
mov
aad
jo
push
push
rol
add
mov
notb
add
ret
cmp
sub
shrl
add
add
inc
add
addb
add
scas
pop
incb
add
dec
pop
sahf
fdivl
outsl
sbb
add
add
jg
lea
cli
xor
mov
add
sbb
or
sub
hlt
enter
imul
mov
mov
cmpsb
add
aam
add
add
pop
add
xor
cltd
mov
sub
lds
out
xchg
mov
mov
pushl
pop
add
and
ljmp
sarl
or
test
push
add
lret
push
roll
call
add
inc
add
addb
addr16
add
mov
outsl
popl
adc
roll
xlat
cmc
ret
add
aam
add
inc
add
mov
scas
jb
call
pushl
les
and
adc
pushl
incl
add
lock
jmp
in
roll
insl
sbb
push
mov
lahf
loope
popa
add
into
mov
aaa
jg
iret
mov
add
movsl
add
call
xchg
gs
add
cmp
mov
adc
jmp
pop
adc
lcall
dec
xor
inc
add
mov
add
incl
pushl
add
jle
cmp
add
jmp
filds
add
loope
and
dec
stc
enter
cli
leave
jp
add
dec
push
pop
cld
dec
inc
add
push
int
addl
clc
xchg
std
sub
xchg
push
movsb
add
jae
pushl
add
mov
lods
dec
movsl
add
cmc
popf
insl
iret
push
jge
scas
ja
add
pop
aad
xchg
scas
mov
and
add
ret
add
cmp
add
sub
movsl
add
add
add
imul
ljmp
add
push
jbe
dec
aas
inc
add
add
ret
add
mov
scas
data16
add
mov
test
movb
addb
add
movsb
add
call
lcall
add
inc
add
add
pop
mov
add
cmp
movb
ret
ss
cmp
lea
mov
pop
xchg
jl
sub
fcmovnb
add
jmp
jl
movb
push
add
xlat
fistps
push
sub
les
xacquire
jle
push
ja
xchg
sbb
dec
or
in
addb
pop
lcall
add
jmp
jnp
repz
ljmp
aas
les
bound
lcall
dec
stos
imul
add
decl
outsb
pop
xchg
adc
call
add
les
mov
mov
lcall
or
mov
sbb
add
addb
pop
addl
add
add
incl
add
mov
aaa
push
hlt
hlt
in
ret
stos
mov
add
pop
in
in
scas
aaa
pop
mov
cmp
add
dec
sbb
jl
cmp
add
add
add
add
shll
sub
pop
push
sbb
mov
add
roll
dec
into
sub
jmp
add
xchg
ds
test
jae
cmp
incl
add
int3
test
lahf
jae
cmp
add
add
add
movsl
add
dec
addl
lea
xlat
or
adc
fisubs
add
pushf
sarl
ret
pop
jb
call
add
mov
xlat
add
pop
push
add
cmp
mov
cs
cltd
je
add
pop
aaa
jge
out
dec
cmpsl
add
or
lahf
roll
add
add
aas
jle
add
adc
inc
add
nop
xchg
fistps
mov
add
fistps
movsb
add
add
call
add
lret
push
aas
sbb
aad
add
mov
add
push
add
push
add
sub
add
inc
add
addr16
mov
add
dec
bound
inc
add
add
sbb
fmuls
add
mov
add
adc
incl
add
xchg
es
add
mov
xor
call
cmp
add
out
fxch
adc
xor
call
ja
xchg
mov
xor
dec
rep
jl
add
xor
incl
pop
into
nop
data16
add
icebp
xchg
xchg
pop
fcoms
add
cmp
rolb
inc
add
add
add
lcall
movl
inc
add
idiv
sub
add
ss
fisttpl
in
jle
pop
lods
adc
or
jmp
add
cmc
xor
aas
pop
add
add
xchg
cmp
dec
fidivrl
jmp
jnp
adc
ljmp
and
decl
movl
or
fcmovne
cli
fucomi
push
add
stos
movsl
add
add
mov
rcrb
add
dec
lcall
mov
jnp
jbe
cmp
jle
sub
add
cmp
xlat
mov
sub
add
pop
imul
adc
stc
or
clc
fs
popa
add
pop
das
fidivs
clc
or
add
fcos
push
mov
adc
ljmp
loopne
test
ljmp
adc
call
incl
call
pusha
add
fiaddl
movl
add
add
add
jg
add
sub
add
and
jmp
add
repz
mov
in
or
pop
mov
int
add
insl
lret
stos
out
or
add
jmp
fistpll
rolb
std
hlt
enter
roll
ja
clc
jp
aad
lds
movl
lcall
add
decb
test
or
jb
decl
sbb
add
add
add
or
add
add
std
test
scas
and
incl
das
cmp
pop
push
outsl
leave
xor
incl
incl
xchg
xor
lcall
movsb
add
fldl
cmpsb
add
je
xlat
push
ds
sbb
add
mov
add
dec
or
jle
push
in
mov
sbb
add
ljmp
jno
decl
add
add
out
fdivs
das
mov
add
add
shl
mov
mov
add
sub
decl
add
lock
add
or
inc
add
add
pop
arpl
jmp
call
xchg
movsb
add
jnp
hlt
dec
ds
pextrw
add
lea
mov
pop
ret
add
test
mov
icebp
mov
fucom
add
nop
xor
out
sub
adc
divb
jbe
add
add
lcall
jle
addb
call
aam
cmp
inc
add
jnp
add
xor
incl
decl
add
pop
sti
inc
add
jmp
icebp
pop
dec
sbb
lcall
fwait
dec
pop
out
jno
call
lcall
js
notb
add
add
cmp
cwtl
addl
add
movl
gs
nopl
add
hlt
insl
lret
adc
cmp
fdivrs
sti
out
dec
mov
add
add
adc
add
dec
pop
rolb
ret
add
jle
add
lahf
fcomp
rcrb
jmp
adc
cwtl
sti
pop
xchg
das
mov
sub
mov
lods
sbb
add
arpl
dec
adc
mov
and
jmp
add
pop
xchg
adc
pushl
add
mov
in
jmp
sbb
add
add
add
jns
ja
push
add
push
add
sub
lods
mov
pop
push
mov
dec
pop
das
cmp
addl
test
jg
xor
ljmp
push
dec
outsb
lods
mov
inc
add
and
aaa
ss
mov
add
mov
add
xor
lcall
data16
mov
inc
add
mov
cmc
dec
mov
jg
push
out
dec
mov
fwait
rolb
add
imull
cmp
decl
mov
fistpll
fcoms
jmp
cwtl
loop
inc
add
inc
add
mov
aas
les
mov
sahf
loop
fldl
add
addb
int
add
add
lahf
stos
stc
push
add
lahf
mov
add
out
outsl
mov
mov
cwtl
addb
cmp
push
add
jnp
inc
add
xchg
cmp
out
aad
in
add
add
add
popa
add
call
pop
mov
lea
add
repnz
in
sbb
hlt
fsub
add
jle
xchg
ficoml
repz
xor
inc
add
xor
fcompl
mov
sub
pushl
add
mov
jg
add
decl
add
jnp
aad
in
cmc
push
add
mov
add
add
mov
jb
mov
pop
addl
out
dec
mov
xor
pushl
jmp
decl
add
sarb
stos
xlat
ds
add
movb
add
ljmp
nop
push
add
pop
cltd
mov
and
decl
js
xor
call
mov
adc
adc
or
add
adc
lcall
arpl
pushl
pushl
add
and
aas
sti
push
add
mov
out
mov
pop
and
inc
add
push
dec
xchg
pop
arpl
decl
and
mov
cmpsb
add
inc
add
cmc
pop
jae
push
push
xchg
pop
jo
call
push
sbb
xchg
int
ret
jno
call
push
push
add
fxch
or
xchg
mov
add
ljmp
mov
and
inc
add
sub
add
in
aaa
mov
jae
ljmp
dec
push
movsb
add
incl
fisubrs
cmpsl
add
push
dec
add
ret
add
push
adc
adc
add
aam
push
add
add
scas
xchg
jns
add
cmpsb
add
js
xchg
push
add
cmp
add
add
push
bound
incl
add
scas
mov
add
cmp
testl
out
add
push
add
inc
add
dec
push
pop
mov
push
pushf
add
ret
add
popf
psubusb
js
add
mov
inc
add
je
add
ds
js
adc
incl
js
mov
or
push
add
cmp
add
add
enter
add
jmp
add
add
jmp
pop
dec
enter
aas
int3
popa
add
cwtl
pop
add
pop
add
sbb
pushl
add
ret
dec
leave
lock
incl
add
fstpl
add
mov
mov
xlat
xchg
and
incl
lcall
lcall
jmp
add
add
push
in
dec
popa
add
cmpsl
add
addb
add
and
lcall
inc
add
push
add
sub
pusha
add
addb
and
cmp
add
mov
cmp
xor
incl
add
faddp
add
int3
jne
add
inc
add
mov
pop
dec
ja
out
loope
loop
test
sub
movb
adc
inc
add
add
mov
add
mov
scas
addl
dec
sub
adc
call
jge
add
xchg
stc
push
test
mov
jb
mov
pusha
add
add
mov
add
aaa
cmpsb
add
loope
fiadds
jmp
aaa
ds
xor
jmp
jmp
add
or
lock
and
cmp
ljmp
sti
cmp
int3
xchg
stc
movsl
add
testl
or
pop
add
and
lcall
stc
jo
cmp
xchg
lds
jecxz
rolb
mov
in
pop
out
mov
call
add
roll
lock
decl
add
jge
add
and
add
decl
rolb
dec
imul
outsb
pop
or
add
lock
jmp
add
decb
pop
and
add
add
repz
add
add
xchg
sub
add
xchg
adc
call
sub
lret
push
push
lods
xchg
popf
mov
fdivp
add
incl
sti
roll
mov
xor
incl
mov
add
incl
add
push
add
test
add
mov
ja
stos
into
scas
mov
jge
sub
pop
fisubl
add
push
add
test
cmc
loop
pop
daa
add
cltd
cld
inc
add
jnp
add
push
add
movl
add
int
bound
lcall
pop
inc
add
mov
add
adc
inc
add
fldt
lock
loop
in
xchg
jb
decb
sbb
add
xchg
mov
adc
clc
fisttps
add
repnz
fcmovbe
sub
inc
add
and
decl
mov
pop
shll
add
add
add
rep
sub
add
dec
cld
fiadds
decl
scas
mov
sub
add
ficoms
dec
sub
mov
or
inc
add
adc
ljmp
add
in
les
jecxz
xchg
fmuls
xor
lcall
push
push
add
add
push
add
mov
mov
je
mov
xor
addl
gs
inc
add
cli
rep
hlt
notl
add
dec
mov
add
push
add
xchg
lahf
stos
sub
add
in
pop
add
inc
add
clc
jmp
mov
pop
popa
add
mov
add
push
out
pop
xchg
add
jmp
add
mov
pop
dec
mov
xor
pushl
add
jnp
add
ret
add
in
std
cmp
sahf
pop
clc
clc
test
cltd
cmpsl
add
mov
push
add
mov
add
add
imull
mov
add
lds
add
push
add
xor
add
pop
pop
and
mov
ljmp
into
cs
addr16
decb
mov
add
addl
add
mov
jmp
dec
imul
inc
add
and
inc
add
notl
xor
lcall
sub
addr16
ja
add
lods
pushf
fnstenv
lods
mov
inc
add
mov
add
stos
int3
pop
mov
add
add
add
lcall
add
jmp
add
jo
decl
inc
add
insl
add
sub
lods
pop
add
sub
add
xchg
xor
push
push
daa
add
add
adc
mov
data16
add
add
aam
add
rolb
outsb
cmp
add
sub
test
xchg
dec
dec
dec
cmpsb
add
cli
pop
add
call
push
shrl
add
fadd
add
sbb
push
add
lds
dec
and
ljmp
leave
in
fdivrs
or
and
jmp
add
pop
pop
add
inc
add
add
xor
sti
mov
ret
push
ss
add
repnz
xor
dec
sub
insb
sbb
or
inc
add
cmp
mov
add
mov
add
add
aas
mov
mov
adc
call
add
add
add
cmp
adc
dec
inc
add
into
cmp
add
cmp
push
ret
add
push
add
mov
dec
xchg
rolb
adc
pushl
in
xchg
add
loopne
xor
jns
xor
ljmp
add
push
add
test
int3
xor
xchg
push
sbb
and
pushl
in
xor
pop
out
add
inc
add
add
dec
fdivrl
add
fiadds
add
sub
add
cli
scas
xlat
fldl
lgs
add
or
inc
add
adc
jge
add
lret
icebp
adc
decl
mov
ja
dec
stos
push
cmp
pushf
cmc
fisubrs
add
lods
test
in
aam
bound
push
pop
test
movl
ljmp
jno
in
inc
add
imul
movsb
add
push
mov
in
loop
inc
add
xlat
rolb
add
iret
scas
leave
pop
add
incl
addb
ljmp
call
xor
jmp
add
xor
add
dec
or
cmp
cld
and
push
scas
lods
lret
loop
xchg
out
sbb
add
pop
cmp
xchg
mov
sub
sbb
add
xchg
xchg
xor
imul
addl
add
mov
jne
out
sbb
add
xchg
jno
incl
dec
push
int
iret
hlt
inc
add
ljmp
sbb
push
add
add
add
push
add
mov
add
dec
pop
out
test
cmpsb
add
incl
dec
bound
incl
add
add
arpl
lcall
out
movsb
add
xchg
or
movsl
add
sbb
jecxz
cmpsb
add
pushl
jmp
or
xchg
call
aad
and
incl
pop
cmp
pop
add
or
cmp
add
dec
mov
sbb
xor
out
js
add
jmp
stos
pop
addl
imul
sbb
fstl
out
stc
add
decl
scas
aad
mov
or
adc
add
ja
push
xchg
addb
mov
xchg
ljmp
cltd
addb
add
pushl
xlat
or
xchg
push
and
incl
mov
add
add
sub
pushl
inc
add
add
jnp
add
mov
add
pop
mov
inc
add
sahf
mov
inc
add
nop
mov
scas
add
pushl
dec
cmc
lds
movsb
add
add
pmulhuw
mov
add
rol
add
call
enter
jnp
add
jns
aam
aas
iret
mov
add
stos
clc
call
jg
movb
rolb
add
add
add
add
push
push
add
cmp
add
xchg
sti
scas
fsub
add
out
ljmp
stos
push
and
dec
mov
cwtl
lods
pop
mov
test
shr
dec
pop
sbb
add
mov
lods
mov
add
xor
pop
add
pop
add
bswap
xlat
xor
call
dec
testl
out
or
add
push
add
xchg
vmwrite
push
add
mov
add
add
xchg
pop
js
repz
push
add
addl
jp
mov
push
mov
decl
add
jmp
add
add
jp
add
mov
mov
jo
jmp
sarl
xor
call
jno
lcall
adc
call
jae
call
pushl
imul
test
or
cmp
add
sbb
scas
ret
imulb
dec
mov
pop
pusha
add
negb
add
jns
addb
movsb
add
in
and
cld
cmp
add
add
int3
pop
mov
lds
fmuls
add
inc
add
push
add
pop
mov
test
cmp
jmp
ljmp
add
dec
push
add
pop
popf
mov
dec
jge
add
jle
lret
pop
add
dec
jmp
add
test
out
in
sub
fbstp
mov
stos
fldenv
jo
pushl
add
xchg
or
add
bound
push
fcmovnu
sbb
add
jne
inc
add
lock
loop
icebp
enter
loope
out
mov
push
add
ja
adc
pop
dec
insb
das
xchg
mov
dec
pop
push
add
xor
jmp
push
movl
dec
int3
popf
test
add
add
idivb
cmc
adc
pushl
arpl
jmp
lahf
push
rolb
add
popa
add
ret
lahf
je
add
sub
movl
outsl
movb
clc
mov
add
push
and
ljmp
add
jmp
push
add
jbe
add
sarl
push
repnz
ljmp
addl
stc
cli
sarb
push
jg
in
push
test
jae
jmp
add
xchg
scas
lea
ljmp
jl
push
xchg
insb
movsl
add
add
add
sbb
addb
pop
cltd
or
out
or
ljmp
pop
mov
mov
add
negl
ja
xor
jmp
add
repnz
add
adc
popf
rolb
fstpt
xor
pushl
add
out
dec
cli
xchg
and
fdiv
clc
test
push
idivl
add
sub
negl
add
pushl
jmp
ljmp
sub
cld
cmpsb
add
stos
shll
pop
dec
pop
adc
inc
add
pushl
jne
test
jb
pushl
add
add
sahf
stc
xlat
test
jne
jmp
mov
cmc
fdivrs
movl
add
icebp
inc
add
addl
push
rorb
pop
dec
inc
add
pop
aaa
pushf
or
add
add
inc
add
lahf
in
test
add
add
iret
cmpsb
add
add
add
push
pop
jp
loop
js
test
hlt
cwtl
adc
pushl
addl
cltd
or
cmpsl
add
sbb
add
add
xor
add
add
jmp
jmp
popf
mov
and
call
aad
add
dec
out
div
xchg
mov
dec
pop
test
add
add
mov
mov
jne
popa
add
add
lcall
outsb
in
or
add
dec
cltd
int3
jae,pt
call
add
sbb
add
popf
xchg
inc
add
sarb
pop
std
pop
mov
add
cli
dec
cltd
push
inc
add
add
add
or
data16
add
dec
jmp
add
daa
add
pop
sub
data16
add
movl
xchg
push
lcall
add
mov
sbb
movsb
add
inc
add
bound
push
sbb
add
add
pop
add
int3
insl
inc
add
jo
push
cmp
decl
jno
call
cmp
mov
addb
cmp
stos
mov
add
mov
xor
jp
add
fs
data16
not
jo
aas
les
mov
add
add
add
aam
add
pop
inc
add
sub
adc
jmp
add
add
lcall
mov
adc
addl
add
addl
sahf
fisubrl
push
cmc
push
add
jo
inc
add
add
sub
jmp
add
decl
add
pop
jae
call
xchg
push
mov
add
mov
push
add
add
add
jl
mov
shlb
movl
in
jno
ljmp
add
pusha
add
jbe
add
jge
stc
xchg
add
call
sub
sti
iret
jg
je
add
add
je
add
jle
mov
stc
push
cmp
mov
add
xchg
movsb
add
pop
movl
ljmp
roll
mov
mov
int3
addb
mov
add
push
sbb
faddl
push
in
in
mov
sub
jecxz
sub
cltd
hlt
pop
ja
add
add
add
pushl
dec
enter
mov
add
jmp
shrl
mov
or
jp
add
int3
lret
add
add
roll
push
add
call
cli
adc
decl
add
ljmp
add
lock
cmc
or
decl
addb
pushl
add
rolb
inc
add
mov
aad
fsubr
test
adc
push
jo
pushl
xchg
xchg
add
jmp
incl
add
cmpsb
add
out
mov
out
repnz
std
sahf
cs
or
movsb
add
mov
addl
sbb
add
cltd
jo
call
mov
dec
add
rolb
mov
sub
add
xchg
popf
movl
jno
call
roll
add
dec
out
loope
repz
movsb
add
adc
lcall
iret
movb
in
or
ja
lds
mov
fstpt
jbe
xchg
push
insl
nop
dec
push
add
addl
pop
data16
stos
ja
ja
or
add
cmp
movsl
add
dec
xor
jmp
add
add
and
ljmp
call
xor
lcall
add
mov
scas
das
lea
les
cltd
and
incl
xor
call
cmp
add
push
add
add
cwtl
sarl
sbb
add
sti
ljmp
add
inc
add
mov
add
adc
jns
inc
add
ficoms
call
add
outsl
fisubrl
add
or
sbb
addb
mov
mov
jmp
add
rolb
add
adc
pushl
roll
add
js
add
add
fcomp
xlat
mov
mov
ds
add
jmp
cli
add
bound
incl
call
mov
int3
fidivl
add
dec
add
ljmp
add
jp
cmpsl
add
fbld
push
dec
hlt
pop
test
adc
jle
and
lcall
ljmp
loope
sbb
testl
inc
add
decl
mov
das
pop
mov
add
push
add
decl
add
push
imul
xor
decl
rolb
mov
add
ret
mov
mov
add
dec
lds
xchg
cmpsb
add
add
mov
decl
add
aam
mov
sbb
jg
int
iret
hlt
xchg
aad
fcmovnu
movl
add
mov
add
jmp
add
add
insb
ds
push
add
sbb
add
aas
jb
jmp
cmp
out
add
pushl
add
xchg
jbe
add
pop
scas
inc
add
xchg
and
incl
cs
lret
mov
add
stc
dec
mov
add
add
dec
loope
movzwl
lret
add
inc
add
add
xor
decl
add
popa
add
daa
add
mov
adc
aad
add
testl
sbb
add
dec
mov
mov
lret
or
add
in
lcall
xlat
and
call
add
jns
sub
add
add
push
add
jmp
mov
adc
dec
inc
add
aam
add
sbb
add
pop
mov
stc
sarl
xor
decl
xlat
cmpsb
add
call
add
jb
decl
add
mov
add
fistpl
ds
mov
sbb
push
adc
add
add
movl
icebp
add
xor
pushl
add
add
cmc
lahf
push
pushf
and
pushl
add
jp
rorl
sbb
dec
data16
push
imull
insb
jns
add
lret
dec
pop
add
xchg
adc
jp
out
stos
adc
add
add
mov
addl
addl
push
add
jae
ljmp
mov
test
adc
incl
iret
ret
add
ds
mov
ja
dec
pop
mov
ja
and
incl
add
roll
jle
mov
stos
nop
aaa
rolb
jmp
add
xlat
mov
cmp
add
arpl
jg
pop
or
aad
xchg
adc
add
decl
pop
stos
jbe
js
roll
test
add
mov
iret
leave
cmc
sbb
fiadds
sub
add
or
mov
add
mov
push
add
inc
add
addb
inc
add
repnz
pushl
mov
add
add
xor
jl
add
jmp
add
pushl
xor
ljmp
add
mov
movsl
add
lock
sarb
add
int
jo
call
sub
bound
incl
add
and
pop
adc
ljmp
xchg
addl
add
and
incl
push
add
pushf
js
add
ret
pop
xor
pop
faddl
test
idivl
or
push
add
addb
int
add
and
pop
pop
cmp
sub
add
xchg
rol
add
add
cmp
add
pop
dec
mov
enter
incl
jns
add
add
jmp
add
cld
xchg
test
cmp
jb
dec
push
out
addl
test
fstl
xchg
mov
lea
and
jmp
add
outsb
in
aas
fcomi
mov
add
inc
add
add
xchg
add
add
cmp
ja
add
mulps
fsubrs
arpl
lcall
mov
add
dec
imull
incl
add
cmc
inc
add
xor
add
jo
decl
dec
cmc
xor
add
jp
cld
test
add
push
add
jge
cli
mov
sbb
or
ljmp
push
add
xchg
dec
je
shrb
add
jmp
add
cmp
add
cmp
arpl
std
icebp
stos
in
aas
aaa
jp
lret
repz
add
movl
lret
jmp
sbb
pop
pop
add
add
add
push
out
mov
add
xchg
sub
movsl
add
out
cmp
add
sub
cmp
and
incl
jle
addb
add
mov
jg
xor
loope
test
inc
add
mov
ljmp
jae
call
add
std
ja
xor
call
loope
clc
sbb
mov
add
adc
jmp
leave
xchg
mov
lret
and
enter
lods
push
movsl
add
add
inc
add
dec
mov
add
jp
cmc
xchg
pop
fabs
add
add
add
sbb
add
xor
call
jle
add
mov
fcompl
mov
stos
movl
add
mov
cmp
adc
inc
add
cli
aam
add
inc
add
jl
mov
pop
outsb
fldenv
or
add
insb
lcall
add
ljmp
add
js
add
rorb
out
scas
dec
fwait
add
incl
cmp
in
inc
add
cld
mov
jno
jmp
add
lret
dec
movsb
add
fisttps
mulb
mov
cltd
cs
jo
lcall
jno
jle
nop
add
inc
add
sub
je
mov
arpl
pushl
jmp
add
add
movsb
add
mov
lcall
popf
jb
pushl
lahf
loop,pn
sahf
loopne
fsub
add
dec
add
fstl
mov
xor
call
popf
fwait
or
add
lds
icebp
and
mov
jp
xor
jmp
add
jae
decl
xchg
das
cmp
jo
lcall
les
es
jmp
xchg
mov
push
add
mov
dec
loopne
cmpsl
add
scas
rep
add
pop
add
push
negb
add
xchg
fidivrl
dec
adc
lcall
jp
add
sbb
push
fstps
imul
pop
xor
aad
inc
add
push
enter
sarb
mov
or
add
push
add
xlat
jl
movl
add
clc
loopne
dec
sbb
add
add
add
xchg
pop
push
add
mov
out
pushf
fdivr
fisubl
add
adc
call
lcall
xor
mov
xchg
mov
mov
fs
icebp
pop
out
jg
add
aas
mov
add
add
xor
dec
in
clc
mov
add
push
add
pusha
add
popf
lods
icebp
clc
ret
add
add
in
xchg
add
jle
add
adc
xchg
pop
jge
mov
movb
arpl
ljmp
add
and
add
adc
in
les
sub
pusha
add
lods
stos
pop
xlat
inc
add
stos
push
xlat
cld
stos
ja
aaa
divl
outsl
insb
rclb
in
mov
add
add
lods
pop
xchg
fdivrl
dec
imul
pushl
and
in
lock
push
add
mov
xchg
pop
imul
lcall
sub
add
cmp
cmc
add
ljmp
push
mov
lret
mov
add
add
decl
movl
clc
dec
mov
sub
adc
incl
add
roll
inc
add
in
jl
add
add
adc
outsb
or
add
test
add
lds
inc
add
cmp
xchg
push
mov
movb
fldcw
push
shrb
mov
mov
repnz
pop
stc
arpl
fnstsw
mov
pushf
scas
xchg
stos
cmp
add
and
decl
inc
add
jecxz
pushf
addb
cli
jo
jp
aad
add
jno
decl
sub
out
mov
jo
incl
incl
fildl
cmpsl
add
pushl
xchg
and
add
xchg
leave
pop
addl
xchg
mov
repnz
adc
mov
add
das
add
jmp
add
fistpl
add
fnstenv
add
insb
popa
add
pop
test
cli
xchg
mov
decl
jnp
add
lcall
push
add
push
add
push
add
mov
rcr
add
decl
push
add
and
lahf
pop
imul
in
dec
push
out
ret
add
add
lea
ljmp
std
mov
bound
fisubrs
ja
push
add
dec
ret
add
add
sahf
and
jmp
add
int3
xor
pushl
not
cmp
jp
add
inc
add
mov
add
xor
call
lcall
add
xor
jl
mov
in
test
add
jmp
xchg
push
sbb
rolb
push
add
pop
pop
inc
add
push
inc
add
add
lods
loopne
jns
xchg
xchg
or
add
pop
xor
call
cmp
cli
test
scas
sbb
add
add
add
movl
add
add
test
pop
or
add
sub
xchg
scas
repnz
test
mov
rol
add
repz
dec
mov
jp
add
pushl
or
fcomps
addl
pop
add
cli
lods
insb
cltd
adc
pushl
pop
adc
pushl
add
mov
push
add
add
popa
add
popa
add
sbb
and
outsb
lahf
fisttps
dec
rolb
adc
add
mov
push
pop
sbb
lcall
movsb
add
pushl
incl
inc
add
mov
add
mov
add
push
or
add
fistpll
jne
fs
stos
pop
fwait
out
push
add
mov
pop
adc
call
idivb
add
incl
fiaddl
addl
add
add
repnz
xor
call
ljmp
mov
mov
dec
inc
add
and
in
sbb
add
popf
mov
lds
adc
add
add
jl
add
lea
jmp
xchg
inc
add
jne
test
test
sbb
add
js
and
ljmp
push
pop
and
inc
add
ds
add
out
das
cmp
pop
lods
push
inc
add
cli
outsl
or
decl
lds
mov
inc
add
mov
mov
dec
std
bound
ljmp
xchg
rolb
in
call
imull
lds
mov
add
mov
mov
mov
add
cmc
push
push
add
push
add
add
mov
popf
inc
add
add
jecxz
pop
bound
fstpl
add
js
mov
add
add
sub
iret
push
sbb
add
sub
sub
mov
or
add
xchg
or
and
push
add
add
and
jmp
ret
adc
jnp
mov
shr
ds
das
jle
jne
add
pushf
lret
add
lds
push
add
call
les
outsl
into
push
mov
jne
cmp
add
push
je
add
sbb
add
add
xor
pushl
add
stos
icebp
mov
mov
pop
loop
dec
mov
mov
pop
lahf
sbb
push
mov
add
decb
and
pushl
pop
arpl
decl
add
jmp
add
xchg
test
cld
push
add
push
mov
pop
or
add
lret
shrb
add
add
aam
xchg
or
addl
cmp
mov
in
nop
bound
push
jne
addl
adc
call
or
cltd
cmp
pop
movb
add
cmpsb
add
mov
lret
pushl
dec
test
add
pop
sarl
xor
jmp
or
sbb
xor
incl
lahf
add
push
pop
into
cmp
cs
aad
push
add
test
add
add
cmp
add
dec
test
add
lahf
clc
rcl
clc
jnp
add
mov
lret
xchg
pop
addl
add
push
add
incl
call
dec
int3
pusha
add
inc
add
in
shl
add
mov
sub
insl
mov
inc
add
mov
lcall
push
stos
mov
push
jb
sti
pop
add
push
cli
insl
jge
pop
jnp
hlt
hlt
add
incl
add
mov
pop
jae
lcall
mov
jp
clc
clc
std
outsb
inc
add
stos
pop
cmp
rolb
push
movb
add
push
add
add
cmp
mov
add
push
jb
incl
xor
pushl
lcall
and
decl
push
add
adc
incl
bnd
mov
mov
lret
std
popa
add
out
out
bound
call
pop
inc
add
dec
xor
ficompl
add
rolb
aam
or
jne
sbb
push
mov
add
add
aaa
pop
pop
roll
outsl
adc
jmp
fbstp
lcall
add
add
loop
lods
cs
cli
adc
dec
sub
add
pop
add
stc
test
add
movsb
add
nop
push
in
ljmp
call
sub
mov
xchg
test
add
addb
cmp
inc
add
sub
cmpsl
add
push
jb
jnp
insb
loopne
data16
cmp
out
lcall
add
mov
add
fstp
push
jmp
jecxz
dec
sub
movsb
add
pop
clc
lret
adc
add
decl
in
popa
add
arpl
lcall
mov
add
loopne
mov
in
inc
add
and
jge
adc
inc
add
out
inc
add
mov
ret
adc
lcall
add
pop
decl
add
mov
add
call
addl
ss
add
mov
xchg
fisttpll
mov
add
addr16
add
add
add
jbe
mov
pop
lret
cmpsl
add
cmp
add
xor
clc
mov
push
add
das
idivb
dec
jnp
adc
cltd
out
xchg
jge
sub
jp
out
cmp
call
add
lahf
cmp
add
mov
rorb
rcl
ljmp
xor
pushl
add
loop
aaa
mov
mov
push
add
lcall
es
pop
pop
popa
add
in
mov
sub
jmp
add
dec
dec
outsb
dec
jo
call
add
add
jle
rolb
inc
add
lcall
mov
add
cmp
pushl
jle
xor
dec
lds
fs
add
dec
push
add
jno
ljmp
add
add
push
add
into
xchg
stc
jns
addb
add
add
decl
or
xor
jmp
add
pop
xchg
stos
mov
add
mov
fadds
ja
add
dec
pop
sub
lcall
cmc
rolb
push
dec
jae
ljmp
xor
jmp
add
dec
test
mov
add
popa
add
call
call
add
inc
add
push
sbb
in
fimull
add
xchg
adc
jns
add
inc
add
movsb
add
add
add
push
add
and
call
add
filds
add
in
cli
outsl
lcall
sub
sub
je
add
ljmp
data16
rolb
add
jle
mov
add
not
rolb
stc
add
pushl
add
mov
repz
push
add
xchg
push
shr
jae
call
add
lahf
jge
add
add
xchg
ret
add
adc
add
cs
sub
push
add
mov
add
ffreep
add
movsb
add
add
ja
sbb
fsts
pop
xchg
sub
inc
add
xchg
outsl
popf
xchg
mov
add
add
pop
outsb
xor
call
push
and
call
xor
dec
pop
add
add
imul
jp
add
inc
add
rcll
add
lahf
jns
lock
pop
adc
add
jp
fwait
add
cmp
push
push
sub
pop
sbb
call
pop
push
hlt
pop
add
ljmp
xor
decl
incl
xchg
mov
cmp
add
hlt
xor
les
popf
mov
push
add
add
movsb
add
add
test
or
jp
aaa
xchg
and
dec
rolb
add
push
pushl
ljmp
repnz
push
daa
add
mov
incl
add
test
jecxz
in
jmp
das
std
mov
popf
or
sbb
clc
incb
jl
shrb
jmp
add
ljmp
icebp
popa
add
dec
inc
add
adc
call
ljmp
mov
mov
add
add
add
xor
call
mov
outsb
mov
mov
jb
fnstsw
push
test
fcmovnb
add
cmp
add
add
add
cmp
add
inc
add
add
fs
add
add
add
push
ficoms
add
and
std
rolb
cmp
or
das
pop
data16
add
adc
cmp
add
repz
incl
add
scas
mov
add
cld
inc
add
mov
jle
lock
add
add
jmp
add
pushl
mov
or
add
lcall
add
push
add
mov
or
je
add
push
sub
ljmp
add
dec
push
add
push
adc
ljmp
jp
repz
cli
push
add
test
inc
add
sub
add
sub
hlt
add
cld
push
push
jne
loope
aas
push
add
adc
add
add
push
imul
pop
xor
lcall
add
push
sbb
add
mov
pop
adc
ficoms
out
and
call
add
cmpsl
add
push
movsb
add
add
add
add
mov
dec
clc
addb
lock
sti
mov
add
icebp
aas
or
sub
add
mov
add
ljmp
and
lcall
repz
rolb
add
xchg
testl
add
xlat
cltd
sbb
add
ror
add
roll
add
xor
call
add
pop
mov
aas
cmp
xor
ljmp
add
jg
pop
cmp
lods
mov
dec
cwtl
call
lcall
mov
pushl
add
sahf
or
add
movb
xlat
loop
jp
add
movb
roll
jge
inc
add
xchg
lret
mov
adc
add
add
inc
add
movsl
add
lock
jno
lcall
call
add
js
or
add
mov
int3
shl
in
mov
add
add
cmp
add
mov
add
dec
orps
fistl
add
shlb
gs
aas
cld
lea
aad
add
adc
inc
add
fs
mov
aaa
adc
call
incl
fldl
lcall
mov
aaa
ficoml
add
movsl
add
inc
add
inc
add
ljmp
xlat
mov
xor
jl
outsb
dec
inc
add
data16
icebp
addb
jmp
jo
call
cwtl
testb
lahf
mov
sub
add
mov
xchg
add
lcall
cltd
mov
xchg
nopl
ds
push
dec
insb
mov
add
add
addl
and
dec
popf
int3
xchg
cmp
imul
jecxz
std
rorl
add
add
or
mov
xor
ljmp
mov
add
addl
popf
ret
add
mov
add
mov
out
xchg
aam
fisttps
sbb
add
inc
add
xchg
add
sarb
cmc
lods
sbb
mov
or
add
jge
bound
std
loope
mov
add
push
cwtl
add
jae
incl
add
les
jns
pop
jp
aad
add
push
mov
and
jle
mov
leave
adc
push
mov
dec
pop
jmp
popf
jno
incl
incl
jmp
add
pop
pop
mov
xor
decl
add
sub
mov
incl
pushl
adc
inc
add
xchg
xor
incl
add
sbb
jg
sbb
daa
add
or
adc
adc
faddl
aas
cmp
cmp
outsb
sbb
lcall
sub
add
int
jnp
sub
add
cmp
add
mov
xchg
std
shlb
movsl
add
add
mov
out
inc
add
push
add
aad
hlt
imul
mov
fnstenv
add
popa
add
and
pushl
jmp
add
xchg
sub
scas
fidivrs
add
dec
pop
js
bound
lcall
xchg
lret
test
add
loope
test
cmp
clc
jbe
cmp
jmp
pusha
add
xchg
out
cli
cs
add
mov
out
mov
pushl
add
jg
icebp
inc
add
add
into
ljmp
dec
xchg
cmc
stos
sub
jl
movl
add
push
insl
imul
stos
out
xor
pushl
fnstenv
adc
decl
stos
test
pushf
scas
add
mov
add
ficompl
add
adc
pusha
add
sahf
shl
add
shlb
cmp
push
add
fsubs
jmp
add
mov
lahf
push
in
mov
int
push
jne
rolb
decl
inc
add
add
iret
negl
add
add
in
loop
loopne
aaa
movb
sub
add
add
inc
add
add
ljmp
scas
fiaddl
jbe
add
add
sti
xlat
adc
call
cltd
adc
jmp
insl
adc
pushl
sbb
pushf
mov
inc
add
decl
addl
ret
mov
inc
add
mov
movb
add
pop
add
jnp
cld
ljmp
dec
pop
out
outsl
cmp
mov
rcr
insl
jmp
add
lahf
inc
add
fsts
pop
add
add
sbb
out
movb
add
mov
add
fmull
fstl
pushl
inc
add
stos
adc
incl
adc
aad
out
scas
daa
add
ljmp
pop
mov
add
pushf
sbb
aad
xor
add
pushl
mov
pushl
pop
xchg
mul
add
sti
frstor
add
dec
notl
out
outsl
and
add
jmp
add
addb
rclb
pop
cmp
add
nop
add
decl
mov
int3
fwait
pop
inc
add
fcmovnu
mov
cld
add
add
or
sbb
lcall
repz
inc
add
mov
pop
sbb
add
outsb
sub
bound
call
add
test
add
xor
decl
mov
ljmp
add
sub
xlat
or
ficomps
add
nop
int
add
call
aas
lret
add
lret
mov
add
dec
cpuid
add
add
add
call
mov
xor
ficomps
cmp
and
decl
ret
add
add
push
outsl
push
mov
cli
ret
add
lret
sub
add
pop
and
incl
jne
add
pop
mov
mov
call
test
sub
inc
add
nop
xchg
sti
lahf
inc
add
pop
sbb
pop
push
adc
push
mov
scas
inc
add
mov
add
add
add
mov
add
adc
jmp
aas
addb
push
and
lcall
lds
test
imulb
dec
fdiv
shrl
hlt
sub
xor
ljmp
add
add
cmpsl
add
sbb
add
xchg
jno
pushl
jb
push
std
mov
sub
ret
add
cld
aaa
fwait
sub
add
inc
add
add
cs
add
add
lea
imull
ret
clc
inc
add
adc
decl
mov
lds
mov
add
loope
pushf
adc
inc
add
pop
add
or
cwtl
sarl
add
std
push
xchg
mov
pop
pop
add
jmp
add
add
pop
insl
mov
add
movsb
add
mov
leave
loop
inc
add
add
mov
fstpt
add
dec
pushf
mov
cli
adc
pushl
and
add
xlat
xor
add
sub
arpl
jmp
add
je
dec
popa
add
pop
sub
arpl
lcall
add
decl
adc
add
lcall
adc
inc
add
into
lret
push
add
mov
inc
add
pushl
push
mov
and
incl
and
inc
add
movsl
add
add
packsswb
jmp
add
add
roll
add
jmp
repz
mov
xchg
lret
mov
jl
add
jmp
add
sbb
ds
jo
dec
jle
add
das
movsl
add
inc
add
popa
add
call
add
jnp
add
or
into
in
jbe
add
ja
cs
mov
push
add
adc
jmp
add
call
fmul
jge
loop
fcomp
xchg
push
add
sti
mov
jo
jmp
add
add
adc
test
add
test
add
and
fisubl
add
stos
stos
or
iret
cmp
scas
xchg
loope
fnstcw
add
testb
test
addl
test
sub
add
ss
mov
enter
jns
add
fdivp
dec
inc
add
lcall
out
lods
add
cwtl
in
dec
add
in
bound
dec
sbb
iret
roll
push
cmp
add
ja
int3
or
pusha
add
cmp
leave
xlat
les
adc
incl
push
mov
fimuls
add
test
addb
mov
add
bound
ljmp
in
adc
incl
mov
and
incl
fildl
add
shll
lcall
jb
jmp
and
decl
add
in
into
sbb
push
add
push
dec
push
pop
js
mov
add
push
pushl
jns
add
jmp
adc
incl
add
pop
jmp
add
mov
popf
xchg
cmc
movb
test
mov
dec
arpl
ljmp
add
jmp
add
xor
jg
add
jb
jmp
add
mov
out
aas
stos
inc
add
addb
push
hlt
loop
out
insb
push
add
mov
mov
insl
jp
lcall
add
mov
mov
add
fdivl
dec
icebp
dec
arpl
jmp
pushf
hlt
test
cmp
pop
stos
jge
mov
add
out
imulb
sbb
xor
incl
mov
add
add
or
data16
mov
add
add
mov
pop
fwait
dec
ljmp
pop
roll
add
out
sbb
call
push
adc
enter
add
add
add
add
fcomps
add
add
add
add
add
add
push
add
jmp
fmuls
add
add
jnp
add
add
mov
in
imul
sbb
or
mov
sbb
dec
lods
push
add
ds
data16
add
in
sbb
jo
call
mov
sbb
mov
aad
add
xchg
add
cmp
call
lcall
lock
sub
lahf
mov
jp
add
cltd
cmp
pop
push
movb
addl
add
cli
jne
push
push
add
dec
ret
add
add
popf
pop
ret
aam
dec
outsb
add
inc
add
fwait
iret
icebp
mov
add
mov
sub
add
js
add
add
call
add
std
adc
mov
imul
or
mov
test
or
addl
ret
add
clc
imulb
inc
add
add
data16
sbb
add
repz
inc
add
sti
sub
cmovp
add
js
add
fdivr
popf
jns
dec
add
add
add
es
loopne
lahf
cli
lfs
jne
roll
add
mov
add
jg
fdivrl
int
adc
jo
call
mov
add
imul
outsb
sbb
xchg
jl
jo
pushl
inc
add
add
addl
testl
add
iret
aad
stc
mov
adc
jmp
add
mov
cltd
iret
sub
add
icebp
or
mov
add
lods
sub
adc
decl
cmpsb
add
ja
jne
testb
add
shl
mov
sbb
add
dec
xchg
jnp
mov
add
cli
inc
add
mov
add
ds
daa
add
jns
add
lahf
loopne
daa
add
pop
test
nop
add
addb
cmp
negb
sbb
lahf
jns
dec
inc
add
add
add
lods
inc
add
int3
cmp
add
inc
add
mov
popa
add
cmp
dec
pop
aad
mov
aam
cmp
pop
push
add
ljmp
fsubrs
mov
js
add
in
leave
sub
js
add
mov
sarl
add
cmp
xlat
pop
mov
jmp
xchg
xchg
enter
incl
add
inc
add
mov
call
mov
add
je
add
aad
jb
mov
xchg
mov
add
lcall
mov
add
std
mov
decl
addl
add
xchg
les
fnstsw
push
add
jne
mov
call
xchg
outsl
and
add
adc
add
out
mov
add
add
push
add
ja
xor
jmp
cmp
add
sahf
mov
fists
lods
mov
add
es
jle
mov
add
add
test
pusha
add
mov
dec
gs
and
and
call
cli
push
decl
xchg
sahf
cwtl
popf
mov
add
add
inc
add
pop
and
mov
jmp
incl
cwtl
add
push
rorb
adc
jg
sub
add
push
mov
mov
imul
arpl
incl
push
pop
mov
add
pushf
mov
add
dec
movsl
add
add
rolb
fmull
insb
outsl
xor
pushl
mov
popf
pop
out
sbb
mov
jmp
mov
add
rcl
mov
aam
lea
add
addb
cmpsb
add
int
push
std
adc
pop
out
lcall
pop
mov
negl
add
and
ljmp
add
xchg
jo
call
sbb
xor
ljmp
push
bound
in
push
add
and
add
xor
jmp
jmp
add
jo
call
push
lea
add
push
add
lahf
inc
add
out
cs
dec
lods
ljmp
incl
sub
fisubrl
in
sar
pop
jge
push
leave
adc
incl
ljmp
add
das
xor
pushl
push
add
add
popf
outsl
outsl
and
fcoml
mov
add
aam
mov
xlat
dec
in
out
jecxz
add
add
add
out
imul
movb
add
lods
sub
ret
rcr
pop
out
and
call
cmp
jnp
sub
add
ret
add
jbe
add
mov
xlat
push
add
movsl
add
and
jmp
loope
push
repnz
ss
addl
fildll
add
mov
add
mov
lods
loop
xor
mov
mov
decl
les
xchg
jb
incl
inc
add
push
add
test
jno
call
add
cmc
mov
lret
ljmp
pop
mov
jbe
test
stc
jg
jmp
data16
push
xor
ljmp
add
jbe
add
add
push
push
xor
decl
outsl
sub
fistps
add
enter
adc
cmp
pop
les
mov
add
dec
xchg
mov
roll
es
idivb
xor
pushl
add
inc
add
add
fmull
mov
mov
mov
add
adc
call
and
call
incl
add
scas
fstl
lcall
jmp
sub
add
movb
add
call
add
icebp
fs
mov
ljmp
add
incl
add
jne
mov
push
pop
rcrl
xchg
repz
xchg
cwtl
cmp
add
daa
add
sub
add
fbstp
add
popa
add
in
sub
add
fistpl
dec
mov
dec
dec
movl
add
pop
dec
add
mov
ja
jmp
sbb
add
fcmovne
loope
jb
incl
add
clc
mov
les
sar
popf
jl
call
add
add
cmp
push
add
or
pushl
ljmp
push
fcmovu
test
jnp
repz
es
pushf
scas
push
addr16
add
adc
add
push
add
xlat
push
add
mov
add
in
cmp
adc
pushl
lcall
addl
in
xchg
jmp
icebp
icebp
popf
cwtl
inc
add
mov
push
ret
add
jns
add
add
lods
mul
add
pop
xchg
mov
outsb
push
out
xchg
jmp
out
scas
or
mov
add
lock
xchg
in
mov
call
out
xchg
je
movsl
add
add
jmp
add
out
daa
add
add
fwait
int
mov
pop
dec
scas
jnp
int
mov
jo
pushl
stc
push
dec
dec
sub
add
add
inc
add
inc
add
cmp
add
ja
add
xor
pushl
add
outsb
mov
test
add
xchg
adc
push
in
push
lret
stos
xchg
cmp
add
popf
int3
xor
incl
add
fwait
enter
push
add
mov
fbstp
add
add
ljmp
mov
cmp
add
pop
cmp
add
inc
add
iret
rclb
imul
push
rcrl
mov
xchg
movb
mov
xor
ljmp
mov
add
cmp
xchg
and
inc
add
jns
add
in
sahf
loopne
lds
pop
xchg
inc
add
add
add
ljmp
cld
inc
add
lock
cwtl
mov
loop
ss
jge
mov
push
add
and
inc
add
ljmp
pusha
add
js
inc
add
push
inc
add
fidivl
add
das
mov
add
cli
add
outsb
jg
data16
add
mov
mov
test
add
add
xchg
lods
in
or
add
mov
add
scas
imul
xchg
xchg
js
cmp
add
les
inc
add
test
std
add
jmp
add
jmp
call
add
jmp
add
add
addl
out
and
incl
add
call
jmp
add
add
inc
add
and
mov
stc
mov
add
add
jno
push
inc
add
and
incl
fcomi
addb
faddl
add
add
mov
lret
add
fadds
cmp
jne
add
les
mov
into
into
push
push
cli
jg
outsl
xchg
cmc
cmp
add
push
jo
decl
out
mov
lcall
addr16
add
sbb
lods
sbb
dec
rol
add
ret
add
loopne
lahf
fsubr
test
addr16
push
add
add
lcall
movsl
add
add
pushl
fsub
add
imulb
add
nop
out
sbb
iret
push
add
and
ljmp
sbb
mov
addb
add
lcall
loopne
mov
and
jmp
add
add
add
add
cmp
clc
jno
lcall
icebp
daa
add
add
add
cmp
mov
add
das
xor
leave
js
xor
ljmp
test
add
repnz
pop
add
arpl
lcall
sub
outsb
addb
test
add
add
stos
push
mov
xchg
dec
ss
push
add
sbb
jb
push
imul
jmp
pusha
add
ljmp
add
movsb
add
add
sbb
push
jnp
popa
add
mov
inc
add
push
scas
jle
je
jne
fldcw
fildl
inc
add
xchg
xchg
cltd
cmpsl
add
bound
mov
add
popf
sub
fistpll
das
add
sub
add
add
sbb
movb
les
jnp
add
out
or
out
loope
addl
addb
xchg
std
addl
add
or
push
hlt
fstp
addl
add
add
inc
add
xchg
xchg
inc
add
clc
mov
inc
add
cmp
fwait
push
cmpsb
add
xor
decl
call
bound
lcall
push
xchg
dec
std
aaa
fiadds
in
in
mov
incl
in
cmp
inc
add
test
lahf
sti
jge
add
incl
add
out
sub
add
sub
add
call
sbb
mov
push
sub
decl
into
push
clc
movb
mulb
adc
push
inc
add
pop
addb
mov
add
mov
add
push
das
outsb
fldenv
add
add
jle
aas
aam
fnstcw
inc
add
add
jg
les
leave
and
mov
push
add
push
add
je
mov
add
dec
mov
mov
mov
pop
xchg
movsl
add
add
cmp
ljmp
ljmp
add
add
fiadds
rcrb
mov
fstpt
add
int
add
add
mov
add
jg
add
jp
mov
add
push
add
pop
scas
jnp
loope
scas
pop
data16
ljmp
mov
add
inc
add
lcall
pop
mov
pop
and
incl
cmpsl
add
fmuls
cmp
incl
mov
pushf
repz
xor
inc
add
add
sub
shlb
add
inc
add
add
mov
sbb
adc
add
add
add
data16
dec
imul
jno
call
cmp
mov
dec
mov
add
xchg
inc
add
sbb
fwait
inc
add
pushf
lret
add
add
fcom
pop
push
mov
ljmp
jecxz
pop
loop
shlb
decl
jo
call
or
incl
movd
push
xchg
xchg
test
mov
pusha
add
push
add
add
add
das
xor
incl
ljmp
lcall
and
lcall
ficoms
add
imul
inc
add
movsl
add
push
add
add
jp
add
into
mov
push
cmp
dec
cmp
test
add
add
inc
add
ss
add
ds
movsb
add
fmuls
aas
insb
call
jmp
add
lock
inc
add
sub
add
aaa
es
pop
arpl
jmp
ret
jl
int3
loope
rcrl
add
call
pop
add
sub
cld
mov
add
jnp
fsub
add
add
cmpsl
add
movb
pushf
xchg
addl
add
iret
push
cmpsb
add
mov
repnz
push
popf
fisubl
mov
bswap
lds
push
add
cmp
add
ss
add
add
mov
jmp
add
fwait
daa
add
jg
mov
pushl
test
add
out
insb
into
cmp
shr
lock
sub
and
jmp
add
clc
sub
jno
decl
push
lret
mov
pop
ret
add
jle
pusha
add
pop
and
sti
mov
aaa
push
pop
gs
add
loope
popf
xchg
mov
add
cld
cld
xor
dec
cltd
mov
jg
add
jae
call
movl
and
pushl
inc
add
add
add
aam
add
inc
add
in
into
shll
mov
sbb
mov
add
and
xchg
push
add
cmp
lcall
imul
cmp
add
arpl
mov
sbb
mov
imul
add
mov
inc
add
insb
fbstp
add
data16
pop
cli
dec
inc
add
mov
add
add
addb
mov
add
loope
mov
add
sub
add
repz
mov
add
add
lcall
jp
fcoms
or
lods
test
das
xor
mov
decl
lcall
cmp
test
mov
ljmp
sbb
lods
int
or
or
cmpsb
add
adc
inc
add
movsl
add
add
jo
lcall
add
or
add
add
sub
add
add
fcmovnu
dec
movsb
add
jnp
les
mov
adc
add
sub
ret
add
xchg
lret
movsb
add
add
or
add
fcomp
add
mov
push
jns
add
push
push
add
scas
rolb
add
xor
cmp
add
mov
sub
lret
inc
add
xlat
aam
add
incl
stos
push
clc
cltd
push
lcall
add
lcall
fidivrl
add
jmp
and
inc
add
inc
add
ljmp
stos
sbb
add
cmp
int
push
int
mov
mov
mov
or
add
fcmovb
add
jb
inc
add
cmp
imul
in
xchg
into
pop
movsb
add
int
or
add
add
lcall
add
sbb
dec
test
push
add
gs
jg
add
pushf
mov
call
fwait
cmpsb
add
inc
add
push
add
repnz
add
sbb
lcall
lea
ljmp
mov
cmp
pop
scas
in
adc
jmp
repnz
add
jne
lds
jns
add
add
mov
aas
arpl
mov
ret
add
xor
stos
mov
sub
add
adc
jmp
add
repnz
add
and
pushl
push
xchg
imul
add
pop
add
daa
add
add
add
movb
sahf
sub
mov
add
mov
adc
incl
inc
add
loop
cmp
add
add
iret
mov
ljmp
lret
loopne
leave
mov
add
add
out
ret
mov
decl
lods
mov
bound
jmp
in
mov
inc
add
add
call
xor
jmp
add
lcall
push
add
and
lcall
add
cmp
in
pusha
add
pop
pop
aaa
pusha
add
ljmp
push
add
push
inc
add
xor
add
adc
pushl
adc
ljmp
ljmp
lea
add
inc
add
pop
mov
xor
ljmp
xlat
jae
lcall
loop
ljmp
add
xchg
add
fwait
mov
inc
add
add
jbe
roll
add
push
add
mov
or
outsb
mov
mov
decl
mov
or
add
jo
inc
add
add
lock
add
stos
pushf
out
mov
bound
mov
fsubrl
iret
jne
jne
bound
mov
jle
dec
addl
or
jb
jmp
add
iret
mov
les
mov
mov
add
ljmp
lds
movl
mov
mov
add
inc
add
add
pop
sbb
out
push
jbe
jb
lcall
add
add
and
dec
adc
jmp
add
dec
push
add
mov
shrb
dec
mov
fwait
adc
cmp
add
add
incl
jle
xchg
add
add
dec
add
add
movups
incl
dec
cmc
adc
incl
lcall
fwait
adc
add
xchg
push
pop
add
xor
incl
pop
frstor
and
incl
sbb
add
addl
add
add
dec
add
nop
jg
push
xor
sahf
leave
insb
bound
decl
cli
je
lods
adc
incl
icebp
cmpsb
add
sahf
aaa
jno
fcomps
arpl
ljmp
call
clc
or
add
or
xchg
adc
push
pop
add
add
aas
dec
in
aaa
mov
add
jl
pop
mov
sbb
xchg
pop
inc
add
roll
iret
pusha
add
mov
sub
roll
jb
lcall
dec
outsl
adc
inc
add
add
cmp
dec
add
clc
incl
add
mov
add
mov
notl
mov
add
int3
stos
pop
movsb
add
call
jns
inc
add
jl
int
stos
inc
add
loopne
push
jns
xor
decl
mov
pushl
cwtl
adc
jmp
add
mov
jg
imul
pop
loop
addl
add
mov
add
push
add
decl
je
sbb
pushl
add
hlt
pushf
cmp
rorb
add
add
sbb
lods
sbb
dec
xchg
rcrb
leave
outsl
xor
xlat
sub
nop
mov
mov
mov
sbb
rolb
xchg
mov
xor
add
jmp
add
fisubrl
stc
sub
add
pusha
add
sbb
xlat
adc
js
mov
add
stos
dec
loop
cmc
inc
add
push
add
call
add
incl
flds
add
shlb
mov
add
adc
pushl
mov
add
add
jp
call
aas
fdivrs
adc
in
imul
insl
xchg
adc
push
sub
fistpll
cmp
clc
movl
fiaddl
or
mov
jge
rorl
repnz
arpl
jmp
pushl
add
add
arpl
ljmp
jnp
xchg
sub
outsb
pop
sbb
pop
and
or
add
xchg
lret
add
aas
and
loopne,pt
adc
mov
add
or
pushf
mov
pop
jae
call
inc
add
sbb
inc
add
scas
loop,pn
lahf
in
and
ficoml
mov
pop
add
fstp
data16
or
mov
jae
call
pushf
outsb
cmpsl
add
std
jbe
add
ljmp
push
add
pop
mov
xor
mov
add
stos
clc
push
add
push
addb
xchg
stos
popf
cmp
xchg
cmpsb
add
fldenv
ljmp
add
dec
sahf
loopne
inc
add
imul
mov
out
repz
add
mov
add
decl
mov
movsl
add
lcall
add
push
add
push
jb
decl
mov
call
daa
add
push
sbb
jg
in
xlat
insb
sbb
data16
add
and
pushl
add
or
add
add
stc
jns
add
incl
add
lcall
xchg
dec
pusha
add
arpl
call
call
cmp
mov
and
add
add
sahf
lods
xchg
push
mov
add
and
fisttpl
push
push
fadds
dec
cmpsb
add
xor
jg
add
jmp
pop
out
cmpsb
add
testl
add
cmp
fmuls
add
pop
push
add
push
call
add
add
pushl
push
out
pushf
inc
add
shr
cmp
pop
xchg
jne
add
sbb
lret
push
add
aad
in
xor
add
pop
je
mov
iret
push
add
adc
mov
sahf
mov
js
push
add
add
dec
xor
decl
push
fldenv
call
inc
add
push
add
jne
xor
incl
add
jne
dec
mov
lcall
out
insb
push
push
add
lcall
add
int3
mov
fdiv
inc
add
sbb
inc
add
jp
mov
roll
outsl
mov
inc
add
mov
pop
inc
add
aad
add
rcrb
cli
fmuls
loopne
sbb
add
add
mov
mov
add
mov
add
mov
add
pop
push
pop
fsubrl
push
addl
test
jb
ljmp
mov
int
pop
popa
add
inc
add
adc
fisubrl
addb
add
in
addb
add
incl
inc
add
clc
push
add
add
popf
xchg
and
dec
dec
lods
push
add
add
call
cmc
roll
xor
lcall
stos
es
inc
add
add
jmp
mov
incl
add
push
add
mov
add
shll
js
insl
addb
xchg
inc
add
dec
jbe
add
cs
loope
mov
ret
add
add
dec
xor
pushf
fnsave
add
mov
sbb
rolb
add
mov
xchg
xchg
jp
loop
mov
add
int
lret
add
push
lret
and
inc
add
add
add
sbb
scas
jle
mov
or
xchg
insb
pop
in
add
mov
xchg
lea
repnz
add
add
movl
insb
or
incl
jb
push
in
dec
jbe
in
xor
cwtl
jp
add
add
fidivs
add
pop
add
aas
ficoml
add
popa
add
test
and
mov
add
add
negl
mov
fwait
push
add
inc
add
add
jmp
add
imul
notl
stos
and
repz
add
xor
decl
mov
lods
xor
faddp
add
push
inc
add
mov
add
add
push
addb
add
mov
sbb
add
mov
pop
imul
lea
add
mov
mov
incl
add
pushf
jle
cmp
data16
add
push
cmp
call
mov
add
sarl
add
add
jmp
repnz
nop
stos
sub
ret
add
test
test
add
add
cmovle
cmc
in
loope
addl
flds
xchg
mov
xchg
and
out
outsb
test
incb
mov
and
dec
dec
sahf
cmp
add
add
add
xor
lcall
xlat
jle
add
addl
add
bsf
cmp
lcall
dec
and
ljmp
xor
cld
hlt
mov
sbb
add
add
out
mov
add
pusha
add
mov
test
imul
mov
iret
cmc
lock
push
cltd
cmp
shrb
icebp
movl
add
add
add
call
inc
add
add
mov
xor
call
add
xlat
pop
aam
pop
xchg
push
add
or
jl
add
fisubrs
addl
pop
push
add
fucompp
pop
mov
add
xor
decl
inc
add
add
add
add
mov
loop
jecxz
bound
jge
add
sub
add
ficompl
rorb
push
add
jae
pushl
mov
add
mov
add
outsb
data16
aam
push
dec
insb
or
rorl
cmc
mov
add
mov
add
jmp
out
outsb
sub
add
loop
jmp
call
lret
jns
sbb
add
jae
incb
sub
add
outsl
lods
push
cmc
xor
out
movsb
add
add
arpl
incl
add
roll
sub
inc
add
mov
sahf
pusha
add
cmp
popf
xchg
fldl
in
mov
fistpll
pop
xchg
dec
out
cmp
xchg
mov
jmp
add
push
add
sub
add
mov
sbb
add
incl
pushl
pushl
call
add
add
jns
add
in
sub
add
bswap
roll
inc
add
add
lcall
aam
aad
movl
add
cmp
decl
inc
add
les
sti
es
push
add
adc
decl
mov
add
cmp
add
add
push
pusha
add
daa
add
ret
add
sbb
xor
fisttpll
push
fs
pop
or
push
add
cs
int3
sub
fistpll
call
add
mov
adc
call
or
cli
rol
add
ljmp
push
add
dec
into
or
add
fwait
adc
incl
jge
add
pop
int3
add
cmp
pop
shlb
jmp
add
add
shll
ljmp
add
pop
sahf
rol
add
jmp
jp
add
test
mov
les
movsl
add
add
jmp
jle
bswap
add
sbb
ret
shrb
cmpsb
add
pop
stc
into
out
pushf
push
cli
fnstcw
inc
add
ret
add
xchg
pop
or
clc
out
sti
pop
inc
add
add
movb
push
sbb
add
or
inc
add
fildl
sub
imul
add
add
mov
add
sub
xchg
std
lret
add
das
sub
add
add
mov
xchg
in
sub
pop
cld
out
int
add
js
add
dec
addb
aam
push
add
jle
jp
add
out
xchg
lret
mov
addl
xchg
jne
xchg
xchg
rcl
cwtl
sti
cltd
pop
outsl
ja
add
sbb
lcall
push
in
testl
les
sbb
sbb
pop
mov
std
xor
outsb
lret
dec
mov
pop
xor
pushl
add
lcall
add
xor
out
dec
sarl
push
imul
push
popa
add
mov
add
jbe
xor
add
fcmovu
sbb
add
scas
in
push
add
cli
inc
add
adc
pushl
lcall
into
add
jmp
lds
jmp
xchg
mov
add
insl
cmp
add
add
ljmp
sub
inc
add
dec
in
jb
decl
mov
add
mov
dec
cmp
adc
out
fmull
jg
mov
add
adc
add
shrl
test
xchg
sbb
add
dec
add
fistpll
jg
push
add
mov
add
test
mov
inc
add
jmp
pushl
add
int3
lock
add
pop
push
add
cld
inc
add
pop
add
addl
add
add
decl
movb
add
mov
fdivl
sub
fadds
cmpsb
add
push
add
popf
scas
cs
in
inc
add
cltd
xchg
and
push
add
leave
xor
fnsave
insl
leave
mov
mov
jmp
adc
dec
jmp
decl
pushl
add
nop
and
ljmp
fldl
pushl
add
inc
add
jp
pop
dec
push
add
jecxz,pt
jb
lcall
add
pushf
pop
add
scas
and
decl
inc
add
stc
xchg
lret
add
mov
adc
incl
jge
add
and
out
dec
inc
add
pushf
in
mov
add
push
stos
sbb
mov
adc
lcall
push
add
add
decl
lods
lock
les
mov
adc
dec
popf
test
push
add
ja
add
pop
sbb
pusha
add
or
mov
outsb
mov
cld
push
mov
jecxz
pop
lds
out
dec
test
add
rolb
adc
jmp
call
cmp
addl
lds
sbb
add
decl
jae
pushl
ja
stc
lods
scas
inc
add
push
add
inc
add
push
daa
add
add
mov
inc
add
out
imul
push
stc
push
add
xor
faddl
add
fwait
mov
cmpsb
add
or
add
sub
add
add
pusha
add
rcrl
cmp
pop
arpl
push
add
lcall
pushl
xor
jmp
ds
mov
stc
xchg
sbb
xchg
pop
rolb
add
add
daa
add
call
mov
cmp
in
add
add
add
add
mov
add
mov
jmp
imul
push
add
daa
add
mov
imul
mov
in
mov
test
roll
add
leave
mov
sub
cltd
sub
xchg
dec
mov
push
out
rorb
js
add
adc
add
and
incl
add
inc
add
ja
pop
mov
add
add
pushl
les
movsl
add
add
or
pop
std
out
dec
out
int
lea
sub
add
jns
mov
push
fwait
mov
lods
std
mov
add
sub
sahf
pop
sbb
add
add
insl
in
add
ljmp
mov
add
incl
jg
pop
pop
or
push
add
push
add
xchg
push
add
add
loope
lea
add
incl
lcall
add
mov
cmp
mov
add
ljmp
into
cmp
push
fiadds
sbb
bound
lcall
add
xchg
mov
rolb
fs
enter
push
scas
dec
outsl
push
xor
ljmp
lret
push
add
cmp
add
add
add
movb
in
lock
add
push
sbb
pop
or
sub
add
dec
pop
mov
addl
add
fstl
add
roll
iret
inc
add
aam
pop
call
roll
add
dec
repnz
jmp
add
or
int3
std
nop
sub
imul
jb
incl
sbb
dec
push
add
sahf
mov
sbb
jl
sub
out
xchg
fcomi
sahf
test
add
xchg
lea
std
mov
add
xchg
mov
add
sub
jp
cmp
pop
push
inc
add
leave
xlat
lock
cmp
add
or
push
add
adc
add
gs
add
add
mov
lcall
call
add
adc
pushl
jne
or
add
fstl
add
leave
xchg
movsb
add
add
fwait
mov
mov
mov
add
inc
add
push
iret
mov
mov
pusha
add
sub
add
add
call
add
out
out
push
int3
xchg
addb
add
xchg
jae
ljmp
add
sub
lock
add
mov
add
lcall
cmpsb
add
enter
add
sub
add
cmp
sti
add
mov
test
lods
add
cmpsl
add
push
pushf
lea
cmp
adc
or
cltd
sti
xchg
js
jp
sahf
leave
inc
add
stc
adc
lds
pop
repnz
pop
mov
add
pop
dec
cmpsb
add
incl
add
fstpt
fbld
add
sbb
adc
decl
sub
lahf
jle
add
mov
ret
add
sub
decl
mov
decl
xlat
data16
mov
add
in
scas
mov
popf
sub
push
add
fnstsw
roll
add
add
add
decl
mov
ret
add
adc
mov
test
lock
push
add
mov
jns
mov
outsb
cmp
movl
jl
add
add
aad
add
cmp
call
enter
les
iret
sub
movsl
add
je
roll
add
dec
fstl
add
in
stos
pop
inc
add
push
xor
call
call
add
add
nop
addb
add
add
add
stos
outsl
push
push
cmp
add
lds
addb
add
add
test
mov
addb
inc
add
add
stos
scas
ret
add
fcos
aas
sub
popf
roll
add
loope
mov
add
add
add
insb
movb
xchg
addb
and
inc
add
inc
add
lcall
add
add
mov
movsb
add
add
add
mov
pop
cwtl
mov
mov
push
add
decl
cli
xchg
popf
mov
aam
add
ret
add
push
icebp
rclb
add
adc
cmp
add
add
decl
fwait
mov
add
hlt
ret
add
addl
cmp
add
add
add
out
sub
mov
add
inc
add
pushl
fists
mov
inc
add
fimuls
das
pusha
add
add
decl
cwtl
add
add
dec
int
add
call
jmp
add
dec
and
sbb
adc
mov
into
push
push
std
imul
push
dec
cwtl
sub
add
jbe
mov
das
jmp
inc
add
add
gs
sub
cld
movl
int3
bound
push
scas
sti
jmp
jp
das
sbb
or
mov
mov
add
add
mov
sub
cmp
add
add
xchg
pop
add
lcall
pushl
add
mov
xchg
xlat
movsl
add
pop
and
lcall
sub
add
test
psraw
lret
inc
add
movb
out
sbb
pop
pop
dec
push
add
cmp
cwtl
inc
add
lds
sbb
add
mov
sbb
decl
mov
dec
add
incl
inc
add
mov
add
dec
pop
jg
add
cmp
or
je
dec
jo
jmp
push
add
xor
jmp
call
fistl
ljmp
add
incb
addl
push
ret
add
ljmp
xor
jmp
mov
addl
dec
mul
add
add
movsb
add
add
das
movl
lock
add
xchg
call
call
pop
cmpsb
add
das
sbb
inc
add
xor
cmp
add
jg
popa
add
stc
data16
pushl
add
dec
int
mov
addl
push
add
dec
jle
les
sahf
ds
out
leave
in
pop
mov
lods
sub
cwtl
pop
js
je
std
cmp
mov
add
mov
jmp
add
xchg
hlt
pop
fstps
lock
lcall
mov
add
adc
movb
add
push
jmp
jmp
movsl
add
inc
add
add
add
add
ljmp
arpl
pushl
dec
outsb
sahf
sbb
add
xchg
dec
jbe
add
js
add
dec
cmp
add
add
add
mov
jae
jmp
add
pop
push
add
lods
sahf
fcom
push
add
popa
add
mov
ljmp
stc
dec
lods
cmc
movsl
add
cmp
sti
jle
xchg
mov
pop
cmp
mov
sbb
or
add
iret
or
add
add
or
add
decl
add
mov
mov
add
or
int3
push
jmp
xor
cmp
pop
lods
ja
cmp
mov
add
ljmp
dec
notl
mov
call
pop
lods
or
add
add
add
incl
addb
inc
add
push
add
sub
dec
mov
movl
in
jp
add
scas
add
pushl
pushl
popa
add
add
add
xchg
dec
repnz
pop
lea
js
fisubrl
cmp
add
lcall
decl
lcall
xor
add
xchg
push
add
loope
mov
xchg
pop
add
add
add
rcl
ja
add
cmp
sbb
xor
adc
lcall
jnp
add
movsl
add
add
clc
mov
mov
add
nop
stc
pop
call
outsb
cmp
fildll
or
iret
xchg
mov
add
add
cmp
add
pop
add
add
imul
xlat
cmp
add
aas
add
ljmp
lock
js
xor
pushl
add
mov
pop
jmp
add
mov
add
lds
and
pushl
jmp
cmp
ficompl
sbb
mov
dec
stc
addl
add
sbb
jmp
add
std
add
mov
std
mov
lds
cmp
add
xchg
jg
cld
leave
sti
pop
lret
lahf
jmp
add
push
add
cmp
adc
ljmp
mov
cmp
stc
addl
and
jmp
lock
add
push
add
sub
fdivl
addl
add
cmp
push
mov
xor
decl
repz
add
xchg
aad
add
cmp
mov
addr16
add
js
jle
pop
jmp
mov
outsb
cmpsl
add
add
mov
test
xchg
ret
add
iret
push
add
add
adc
or
jns
xor
out
loop
cmovp
arpl
decl
in
jbe
addl
add
and
jmp
stos
adc
add
lcall
sbb
test
push
add
aad
add
xor
incl
add
cmp
daa
add
sbb
add
mov
push
ja
sub
ljmp
xor
lcall
jmp
jle
cld
out
xchg
jge
xchg
adc
add
add
and
add
incl
add
add
cmp
xchg
mov
and
ljmp
add
add
add
xchg
jl
outsb
push
inc
add
add
dec
hlt
jo
decl
xchg
jae
cmp
lcall
adc
jmp
sti
and
incl
add
fwait
cwtl
inc
add
daa
add
loopne
ja
mov
add
xlat
xor
jmp
add
movl
addb
pop
jae
ljmp
add
jmp
out
stos
insb
pop
xchg
ljmp
jl
jne
adc
cmpsl
add
enter
adc
dec
and
clc
insb
gs
add
dec
test
lods
jle
add
fsubr
dec
pop
inc
add
lahf
jbe
or
add
inc
add
add
call
add
mov
add
pop
dec
imul
lret
dec
dec
out
pop
mov
mov
add
mov
add
call
incl
ljmp
test
or
jns
jno
push
sub
pop
dec
sbb
out
in
xor
cmp
add
add
js
add
xor
xchg
ret
insb
out
push
mov
mov
cmp
add
iret
jmp
add
fwait
in
enter
jmp
add
sbb
xchg
add
incl
add
mov
lds
push
add
outsl
insl
jp
add
add
int3
arpl
call
mov
sub
inc
add
add
iret
cmp
and
fstl
cmpsb
add
add
inc
add
add
adc
pop
or
push
jns
add
aaa
xor
fcoml
add
shlb
add
movb
dec
or
test
pop
xor
pushl
xchg
stos
add
out
iret
dec
adc
add
xchg
push
mov
add
add
add
add
mov
ja
xlat
in
pop
data16
lahf
mov
stos
mov
lcall
mov
mov
pop
nop
add
std
leave
pop
je
push
add
add
iret
data16
shlb
add
mov
into
add
add
add
test
push
add
fldt
aad
scas
adc
call
dec
mov
sti
xchg
add
cmp
cltd
mov
jmp
add
pushl
add
addl
into
xchg
lret
cmpsb
add
pop
sbb
lcall
call
inc
add
add
in
sbb
rclb
or
xchg
add
call
dec
add
add
cs
add
pop
mov
jmp
movl
int3
mov
xchg
push
add
mov
incl
sbb
int
addl
pop
into
fnstsw
lods
addl
mov
add
push
add
mov
pop
sbb
dec
push
add
incl
jns
add
pop
add
add
add
add
mov
add
push
add
xchg
jae
jmp
xchg
ds
add
add
sbb
repnz
pop
shrl
add
test
xlat
js
outsb
jg
cmp
jl
xor
ljmp
loop
fs
jns
add
add
lcall
lahf
aad
pop
add
add
push
add
sbb
addl
bnd
adc
add
ljmp
add
pop
add
xchg
pop
pushf
icebp
test
and
jmp
add
test
imul
enter
sub
add
adc
les
xor
pushl
add
addb
xchg
xchg
pop
add
add
imulb
xchg
sub
add
sub
fwait
cltd
inc
add
jle
add
pop
movb
add
xor
call
in
add
add
lea
push
addl
inc
add
push
push
sub
add
push
add
loop
push
fcmovbe
mov
add
add
or
push
test
lahf
movsb
add
pop
dec
mov
add
mov
and
jne
add
rorb
push
add
outsl
jne
add
add
mov
add
xlat
inc
add
sbb
cwtl
aam
pop
je
add
insl
loop
in
scas
lds
shll
add
jmp
add
xor
cmp
add
gs
push
in
sbb
mov
loope
xchg
pop
imul
and
xchg
je
add
clc
nop
cmp
pop
mov
push
in
sahf
mov
out
add
add
jmp
jno
clc
icebp
repz
mov
fmulp
loope
out
iret
jne
add
add
pop
adc
call
or
pushl
xor
decl
mov
lea
ljmp
add
psadbw
cmc
xlat
jl
add
add
add
lret
add
add
lcall
mov
ret
add
movb
mov
xor
call
iret
jb,pt
jmp
add
xchg
in
jg
add
sti
dec
mov
lret
push
repz
mov
int
test
mov
mov
push
addr16
in
jmp
add
adc
pop
roll
pop
fucomi
xchg
push
add
inc
add
je
mov
add
add
cmp
outsb
mov
jle
add
add
add
xor
pushl
out
cmpsl
add
add
add
mov
or
ficomps
loopne
addl
mov
add
movsb
add
jbe
adc
cmp
mov
adc
call
jb
jmp
pop
sti
ss
jmp
in
or
stos
lods
push
out
stc
push
add
sub
add
insb
push
lds
mov
roll
add
adc
cmp
stos
xor
call
jp
xor
cmp
rorl
ja
jo
call
jne
cmpsl
add
add
mov
or
das
push
add
bnd
add
or
add
lock
dec
fwait
xchg
mov
xor
rorl
roll
cmp
add
addl
add
incl
sahf
add
add
add
mov
add
ja
rolb
add
add
mov
add
sbb
lea
add
stc
in
and
call
ficoml
add
jmp
dec
ljmp
push
add
dec
fwait
pop
bound
out
xlat
data16
nop
dec
mov
cmp
add
add
or
cld
insl
jae
fdivl
ljmp
add
ret
sahf
lods
jmp
xchg
adc
jmp
add
add
fidivs
ljmp
bound
mov
add
decl
cs
sub
test
add
add
incl
add
push
arpl
mov
mov
pusha
add
sti
les
pusha
add
in
icebp
xlat
std
stc
or
inc
add
clc
out
pop
sbb
test
or
xlat
sub
insb
mov
xlat
movb
mov
add
outsb
mov
data16
loope
xor
ljmp
mov
sar
jbe
pop
sub
jnp
js
xlat
xor
jmp
incl
add
add
movsl
add
aam
pop
add
call
ficompl
and
lcall
add
ss
push
in
mov
inc
add
stos
insl
repz
bound
decl
in
stos
mov
sub
inc
add
sub
iret
lea
aad
add
add
xchg
inc
add
push
or
add
scas
lea
dec
cli
pop
push
xor
lcall
add
dec
xchg
cmpsb
add
bound
ljmp
xor
scas
ja
add
lods
pushf
dec
addr16
out
sub
push
add
add
ljmp
add
add
lcall
cli
mov
add
add
addl
call
decl
inc
add
push
add
mov
add
push
jae
call
pop
add
fists
dec
push
push
xchg
cmovp
les
pop
in
aad
lret
push
add
outsb
mov
add
sub
bnd
push
add
daa
add
ds
ja
into
xor
imul
and
incl
add
add
sub
jl
add
mov
adc
into
stos
addb
add
popf
test
add
add
add
das
inc
add
in
test
movsl
add
jg
add
clc
or
mov
push
add
or
mov
mov
add
pusha
add
adc
inc
add
add
add
mov
insl
cmpsb
add
jp
xchg
xlat
pop
fnstcw
mov
add
lock
bnd
add
and
incl
add
dec
fwait
pop
sub
add
mov
mov
mov
dec
pop
adc
add
add
inc
add
add
not
sbb
call
mov
push
cmp
repz
add
push
stos
lods
jge
add
inc
add
loopne
fisubrl
dec
enter
jp
add
adc
pushl
add
or
xor
jmp
add
push
out
repz
add
sub
bound
out
lds
out
flds
add
xor
pop
in
stc
push
fistpll
lahf
pop
add
call
std
cmp
cmpsb
add
jno
decl
add
push
push
add
push
testb
incl
add
adc
add
cmp
int3
dec
sub
leave
push
add
decl
jge
std
push
add
int
add
add
loope
addb
push
add
push
inc
add
add
xor
incl
add
iret
dec
pop
add
add
jmp
les
cmp
pushf
inc
add
jo
lcall
lahf
ljmp
decl
in
outsb
popa
add
adc
push
add
adc
decl
popa
add
outsl
and
lcall
out
xchg
outsl
xchg
mov
push
or
int
add
add
pushl
ret
mov
sub
add
add
xor
pushl
push
add
lcall
cmp
add
add
xor
ljmp
loop
push
sbb
ljmp
movsb
add
mov
jo
pushl
mov
add
mov
add
jl
add
push
out
test
ja
add
add
incl
decl
rolb
add
ljmp
test
add
xor
dec
and
popf
jecxz
mov
add
jne
add
mov
add
roll
call
decl
add
xchg
cs
lret
xchg
ja
lods
ja
add
mov
mov
cmp
xchg
dec
add
add
add
add
jecxz
int
add
mov
addr16
add
add
scas
icebp
jle
cwtl
mov
add
mov
add
add
test
nop
adc
decl
mov
add
push
add
inc
add
adc
std
les
pop
fists
add
push
test
add
incl
add
add
xor
jle
add
lahf
test
add
add
bound
cmp
add
xor
cmp
cmp
popl
inc
add
cmpsb
add
dec
xor
dec
imul
add
lcall
cli
pop
enter
add
decl
add
add
adc
incl
adc
incl
jnp
xor
decl
rol
add
jmp
add
xchg
test
stos
cmp
push
dec
outsb
outsb
test
inc
add
hlt
daa
add
leave
out
sti
outsb
mov
lds
and
lcall
xchg
dec
jae
jmp
mov
add
add
xchg
inc
add
add
fcomps
add
add
js
test
sub
sbb
cmp
lds
and
das
shl
add
mov
ljmp
call
push
test
add
mov
in
addb
cmp
mov
and
adc
fsubrs
loope
hlt
pop
and
inc
add
mov
daa
add
fisttpl
fprem1
push
add
call
lcall
int3
fucom
add
jg
ja
mov
add
push
add
push
add
add
out
adc
jmp
ljmp
add
add
ret
add
add
lock
ss
sbb
outsb
adc
lcall
add
arpl
inc
add
stos
inc
add
add
decl
cmp
mov
scas
addl
les
lahf
add
incl
pushl
add
call
std
cltd
lods
dec
pop
adc
inc
add
aam
ja
enter
fdivrl
add
pop
and
jmp
outsb
sbb
sbb
dec
arpl
call
add
xchg
pop
ljmp
sbb
pushl
add
mov
add
pushl
add
in
pop
mov
mov
add
outsb
and
add
mov
add
addl
cltd
outsl
out
xchg
sahf
mov
sub
pop
add
inc
add
jno
pushl
add
jge
xor
inc
add
aaa
push
add
lock
push
add
dec
in
sbb
popa
add
push
lret
add
fiadds
add
push
testb
sub
add
add
pop
xchg
imul
pop
fs
data16
jmp
inc
add
movl
arpl
decl
and
dec
cmpsl
add
out
mov
mov
add
jl
add
sub
aas
aas
lods
dec
mov
add
add
xchg
inc
add
aaa
adc
cmp
cmp
and
sub
aas
dec
cli
cmc
cmp
add
pop
stos
or
add
adc
ljmp
jge
add
add
xchg
push
sub
and
pushl
add
adc
fstl
loopne
push
add
xor
ljmp
add
lahf
dec
jae
decl
call
aaa
pushf
mov
mov
add
aam
sub
inc
add
rolb
push
ja
mov
test
push
add
add
fldt
xchg
dec
out
jl
and
dec
cmpsb
add
sbb
cltd
cmp
sbb
jp
add
popf
cltd
test
push
add
lcall
add
pop
ja
pop
roll
add
xchg
pop
add
call
add
in
xor
incl
pushl
add
mov
add
pusha
add
mov
add
lcall
lea
add
push
add
add
fisttpl
add
add
jno
ficoms
add
add
int3
in
lret
call
adc
mov
sub
add
pop
loope
push
add
jmp
aad
sbb
inc
add
push
movb
add
pop
xchg
xchg
mov
add
decl
add
movsl
add
jns
loop
ret
add
push
xchg
add
jne
add
lds
sub
push
push
add
jne
sti
leave
aad
dec
sub
add
fcomps
mov
sahf
in
sub
call
lcall
adc
pop
pop
sub
lods
dec
xchg
pop
dec
or
add
int
movl
and
dec
push
add
push
add
add
in
imul
add
cld
mov
jae
ljmp
jmp
bound
pushl
push
add
add
sbb
rolb
add
in
mov
add
pop
push
add
adc
xor
pop
xchg
or
mov
jbe
mov
jmp
add
fidivl
incl
push
jge
sub
out
xchg
mov
cmp
add
xor
decl
add
dec
mov
bnd
lcall
mov
xchg
addl
mov
add
stos
jg
add
fwait
repnz
sbb
hlt
xchg
push
out
roll
push
call
ret
add
add
xchg
jmp
fidivrs
loope
loop
ljmp
add
add
lods
cmc
add
mov
add
mov
pop
cmp
mov
add
bound
pushl
add
mov
mov
lods
jo
jmp
cmp
add
addl
add
add
add
sub
add
ret
add
mov
inc
add
mov
ja
xor
ffree
add
inc
add
das
scas
addb
add
add
add
adc
dec
add
add
mov
add
add
adc
decl
in
in
cmp
inc
add
ljmp
iret
sbb
cmc
and
decl
repnz
lcall
lods
cs
add
mov
dec
and
jl
and
push
imul
sub
inc
add
mov
add
jae
mov
movsb
add
add
lret
mov
add
add
push
add
aaa
and
inc
add
add
lcall
jl
cmp
add
pushl
mov
inc
add
sbb
add
insb
add
movsb
add
cmp
add
jne
inc
add
mov
pop
mov
ljmp
loopne
cmp
fsubrl
add
xchg
clc
dec
and
xchg
adc
dec
jb
call
add
jno
call
pushl
add
adc
fucompp
cwtl
mov
jmp
add
and
decl
inc
add
loop
cli
sub
jg
jp
add
movb
push
adc
push
pop
insb
or
pop
or
outsl
testl
add
adc
ljmp
mov
out
add
push
mov
add
lret
cmpsb
add
xchg
fwait
pop
pop
add
jp
add
add
push
and
pushl
inc
add
mov
imul
ljmp
add
sub
adc
lcall
mov
clc
push
jae
incl
xor
inc
add
movb
add
dec
mul
add
outsb
stc
and
js
clc
inc
add
shlb
cli
add
incl
add
mov
push
add
mov
add
dec
dec
sbb
call
mov
aas
pop
add
decl
movsl
add
add
sbb
xchg
jecxz
aad
jo
incl
jp
add
or
add
add
add
bound
cmp
fisttpl
mov
add
aas
lea
or
addr16
xchg
jge
pop
in
sub
lock
add
cmp
add
and
lcall
les
out
lods
xchg
adc
call
inc
add
and
mov
pop
push
les
cld
test
test
outsl
sub
mov
mov
aam
jb
call
ljmp
adc
add
add
dec
out
adc
push
add
inc
add
in
negl
inc
add
add
call
rcll
add
xor
movsl
add
add
jns
fstpt
scas
mov
add
jmp
add
call
or
push
add
add
add
movsl
add
int
mov
mov
cmc
test
add
push
fsubs
add
sub
add
add
lods
into
pop
add
or
imul
leave
lret
insb
pop
add
jmp
jmp
cmpsb
add
add
call
ds
add
push
stc
test
fistpl
dec
in
mov
not
mov
sbb
leave
stos
outsl
icebp
xor
incl
pop
mov
add
lcall
mov
sub
xchg
fildl
incl
idivb
add
fstps
jp
add
insl
pop
xor
incl
add
inc
add
cli
rcl
in
mov
add
int3
jnp
repz
add
mov
sub
addl
sub
add
dec
sti
lcall
push
mov
pushf
add
cmp
and
pushl
add
mov
add
add
stos
jg
pop
fst
scas
xchg
xor
add
inc
add
add
add
or
add
pop
add
add
loope
xchg
sbb
inc
add
add
push
add
add
incl
mov
std
stos
addr16
mov
ret
add
add
add
push
jecxz
ss
or
aad
add
mov
fstpt
jge
leave
push
xchg
jne
add
pushl
add
in
mov
push
in
mov
lahf
and
mov
hlt
add
incl
add
add
jmp
stc
cmpsl
add
add
lcall
scas
pop
dec
rolb
rolb
add
add
xchg
pop
lea
add
decl
add
call
cmp
addb
add
jne
sub
add
cli
js
dec
cli
jae
decl
popf
pop
add
popa
add
roll
add
cmp
inc
add
popa
add
inc
add
aas
leave
xchg
xchg
out
xor
lcall
add
in
push
loop
push
movsb
add
ds
sub
xchg
pop
push
and
push
mov
into
loopne
das
cmp
add
dec
cmp
add
add
push
push
add
out
jg
arpl
lcall
add
mov
repz
imul
icebp
inc
add
std
xor
std
mov
mov
clc
sub
jp
add
movl
sub
jmp
call
div
jo
incl
add
push
mov
jmp
ja
add
add
movsb
add
mov
add
add
cld
lods
js
pop
add
fistl
mov
inc
add
test
mov
lds
mov
sbb
sbb
outsb
sub
les
lret
data16
adc
incl
add
add
add
jg
pop
pop
cli
lahf
dec
outsl
data16
cmc
cs
sub
movsl
add
mov
std
cmp
cld
imul
int3
mov
call
add
add
xor
jg
fmull
les
sub
add
je
push
std
or
movl
add
lret
rorl
add
mov
fwait
mov
pop
sub
loope
cltd
fdivrl
outsb
addb
add
mov
add
jge
add
mov
jo
lcall
mov
xor
mov
mov
decl
mov
fidivrl
mov
cmp
add
pop
loop
test
add
xor
decl
mov
add
add
jmp
into
jg
adc
call
add
popf
pop
add
add
add
push
sub
add
loopne
add
pushl
enter
jge
ja
push
and
inc
add
mov
into
inc
add
aad
and
incl
sahf
pop
jmp
sbb
lods
les
inc
add
mov
cs
add
rorb
push
es
add
add
sub
pop
in
sti
test
add
add
add
test
pushl
test
pop
sets
jl
icebp
jno
js
xor
mov
addl
lea
js
add
add
add
add
mov
add
loop
mov
xor
lcall
lea
and
call
add
mov
add
decl
add
in
and
incl
into
pop
xchg
enter
dec
idiv
pop
jns
ret
add
pop
or
scas
cmp
sahf
dec
mov
movl
popf
or
add
add
xchg
addl
dec
cmp
adc
stos
testl
ljmp
xchg
push
add
adc
movl
add
shrb
add
pop
nop
ret
imul
add
mov
inc
add
data16
loop
lea
add
add
jmp
mov
add
jnp
xchg
push
add
daa
add
loop
and
decl
inc
add
jno
ljmp
inc
add
popa
add
push
add
adc
ljmp
cmp
std
mov
dec
sarl
cmp
add
addr16
add
inc
add
xor
jmp
add
add
jmp
add
add
add
data16
pushl
call
ret
add
add
add
lock
and
lcall
add
imul
sbb
cmp
add
das
xchg
cmpsl
add
fisttpl
xor
add
cmp
mulb
add
jns
jge
add
add
sbb
xor
fldl
call
cmpsl
add
std
pop
sti
rolb
push
xchg
and
add
imul
call
lcall
add
cli
and
push
int
xor
ljmp
or
and
jl
negl
pop
cmp
les
add
ljmp
add
jae
sti
mov
add
out
mov
outsb
roll
incl
add
je
test
mov
std
pop
out
push
add
add
mov
jnp
mov
loop
addb
add
sahf
fldcw
fmuls
push
add
movsb
add
mov
inc
add
add
out
loopne
clc
mov
add
aad
dec
pop
pop
pushf
arpl
jmp
add
fldl
lods
mov
addb
add
icebp
add
push
mov
add
and
data16
add
add
add
hlt
pop
bound
incl
pushl
outsl
jecxz
mov
add
inc
add
mov
sahf
daa
add
jo
push
xor
call
or
in
ds
add
push
add
xchg
dec
xor
ljmp
add
decl
jo
mov
add
in
inc
add
cmp
int3
mov
add
cmp
cmp
adc
xor
lcall
sbb
and
push
inc
add
push
add
and
ljmp
add
add
xchg
push
add
sbb
incl
push
add
stos
pop
add
insl
fbstp
add
sbb
pop
enter
push
mov
xor
negl
add
and
ljmp
fstpt
lret
mov
insb
lahf
addb
inc
add
std
stos
or
mov
movsb
add
add
add
pushl
testb
mov
push
push
addb
adc
pushl
jb
call
add
cld
push
sub
xchg
popf
outsl
inc
add
push
push
lret
pusha
add
mov
insb
fucomp
or
add
push
xor
mov
insb
dec
movl
pop
jge
test
call
cmp
add
mov
loopne
mov
add
add
pop
xor
jge
int3
mov
add
adc
ljmp
cltd
inc
add
and
rolb
movl
add
decl
add
add
xchg
int
mov
mov
out
mov
ficomps
add
addl
xchg
xor
jmp
jle
xchg
dec
lret
pusha
add
jl
mov
ret
add
ret
add
decl
sub
lcall
pop
push
jnp
fisttps
cli
movl
popa
add
xchg
mov
test
fwait
mov
pop
aad
repz
add
add
roll
mov
movl
adc
rolb
add
add
dec
arpl
fcoms
fiadds
add
mov
rolb
lret
push
add
xchg
mov
add
movb
insb
test
sub
imul
push
cmp
xchg
dec
daa
add
xchg
cmpsl
add
pusha
add
jp
add
mov
add
cld
cmp
jno
jmp
add
mov
add
arpl
jmp
inc
add
dec
imul
dec
or
jmp
hlt
or
add
push
add
stos
push
mov
add
jmp
arpl
aas
xor
jmp
mov
add
jno
inc
add
add
add
jnp
xchg
mov
jmp
inc
add
icebp
rcr
jns
add
add
scas
sbb
dec
aas
rolb
add
pop
lods
jnp
in
dec
cmp
add
push
xchg
out
cmpsl
add
mov
inc
add
dec
cmpsb
add
fwait
sub
add
add
mov
push
add
pop
decb
roll
and
pushl
call
add
add
add
add
add
pop
jle
sub
decl
mov
add
add
jbe
sbb
jae
mov
incl
js
sbb
addl
xchg
xlat
mov
mov
mov
xchg
aas
insb
mov
add
inc
add
inc
add
mov
add
jno
mov
add
clc
adc
add
push
sbb
add
sbb
xor
ljmp
addb
nop
es
add
add
cmc
popa
add
call
push
pushf
cmp
push
add
jl
add
xchg
in
xchg
inc
add
call
jecxz
inc
add
push
stc
into
push
add
add
mov
stc
cmp
add
jnp
add
sub
scas
rclb
add
sbb
inc
add
push
add
add
jae
incl
add
enter
adc
decl
push
add
cmp
cs
gs
add
or
add
pop
ret
add
repz
push
aam
add
jbe
add
add
scas
icebp
add
ds
sbb
cmpsl
add
out
adc
call
add
adc
call
add
ficoms
dec
mov
leave
bnd
incl
xchg
pop
add
or
outsl
mov
inc
add
cmp
add
jmp
add
add
rolb
mov
add
add
pop
add
daa
add
push
add
fsubr
repnz
lcall
out
jg
ja
add
scas
push
dec
roll
xchg
cld
nop
cmp
sbb
add
add
add
incl
add
stos
and
decl
add
cld
std
add
int3
mov
xchg
mov
sbb
add
movsb
add
add
repz
push
add
mov
stos
cmp
aaa
out
and
mov
loope
push
add
pushf
fs
xchg
push
add
push
add
cmpsb
add
cs
cmp
adc
pushl
addb
setne
add
movb
add
addb
ficompl
jl
mov
add
jno
lcall
jmp
mov
pop
adc
pop
les
mov
jo
push
and
call
jae
incl
ret
add
addb
icebp
insl
jne
push
decl
mov
addb
add
loopne
pop
nop
mov
js
cli
jle
add
adc
incl
icebp
iret
add
cmp
xchg
adc
clc
jle
add
fs
test
adc
pushl
jmp
lret
popa
add
movb
add
push
add
test
sbb
push
push
sahf
loop
dec
bound
clc
cmp
or
call
call
in
xor
jmp
xlat
xor
jl
lods
push
add
roll
cmp
add
add
ret
push
mov
pusha
add
in
leave
bound
decl
mov
nop
mov
inc
add
lret
xchg
add
jp
mov
add
pushl
add
add
add
in
jge
add
jp
jg
xchg
or
pop
add
decb
test
xor
inc
add
add
or
rolb
cs
sbb
es
dec
imul
or
scas
jae
jns
mov
and
push
pop
add
push
negl
add
outsl
cmpsb
add
notl
out
xchg
imul
inc
add
jns
mov
add
fldenv
out
push
add
rolb
nop
adc
stc
adc
lcall
lret
xor
pushl
add
jns
sub
add
sbb
add
outsl
lds
repz
add
add
lea
rolb
loopne
dec
jmp
add
call
movsb
add
scas
jns
clc
sahf
mov
fnsave
add
add
jmp
jne
jp
add
and
call
pop
adc
dec
push
sub
add
add
mov
add
stc
cmp
jb
push
lea
xchg
shll
jmp
add
incl
add
jnp
fnstenv
add
mov
add
bound
decl
add
add
mov
add
fcomps
sub
ja
add
add
mov
add
hlt
mov
in
fidivrs
decl
add
add
test
out
cmp
mov
pusha
add
add
mov
add
jns
cmpsb
add
aam
xchg
outsl
mov
add
add
add
mov
addb
add
aaa
mov
add
add
ljmp
inc
add
enter
stc
cmp
addb
cli
in
pop
and
decl
pop
jo
cmp
add
je
shrb
add
incl
dec
movsl
add
push
add
stc
xor
pushl
lods
add
mov
push
add
jmp
dec
stos
fstps
cmp
or
stos
and
ljmp
mov
ss
sub
add
out
adc
fnsave
add
daa
add
scas
sub
enter
xchg
arpl
pushl
out
inc
add
push
cmp
push
add
pusha
add
sbb
cmc
ljmp
add
outsl
xor
mov
add
lods
std
pop
sbb
rclb
les
stos
xchg
outsb
and
jmp
cld
sub
fsubrs
fst
adc
push
or
ljmp
mov
pop
clc
repnz
lret
addl
sti
pop
aam
xor
call
add
shrl
xor
loopne
loopne
and
cwtl
int3
addl
adc
jmp
add
dec
and
decl
jle
hlt
daa
add
add
dec
push
fld1
stos
into
adc
decl
mull
incl
add
jnp
add
cmp
movb
push
testb
add
decl
or
add
adc
ljmp
mov
sti
addb
add
sub
dec
cmp
mov
mov
repnz
add
add
mov
add
jb
mov
and
dec
icebp
mov
imull
addl
add
movl
icebp
jnp
das
dec
add
jmp
add
loop
lahf
xchg
test
ss
data16
xchg
je
add
push
mov
add
add
adc
ljmp
add
cld
or
add
test
adc
incl
inc
add
sbb
push
das
xchg
mov
add
add
or
rorl
jmp
add
dec
push
popf
xor
cmp
aad
add
add
xor
sbb
add
or
lret
add
in
addl
pop
add
add
test
and
pop
mov
js
sub
adc
decl
pushl
daa
add
lcall
jl
and
xchg
jbe
out
ficoml
pop
ret
add
add
and
mov
cmp
mov
in
loopne
addb
jge
mov
add
add
and
js
add
and
xor
add
es
loope
pop
add
add
sti
mov
in
dec
sti
pop
cmc
mov
cs
out
test
lcall
das
lret
cmp
add
pop
xor
incl
in
adc
lcall
sub
popa
add
lods
jle
in
jge
add
in
add
xor
pushl
stos
sub
add
pop
cmp
mov
sahf
dec
into
int3
or
add
and
ljmp
fnstenv
add
das
sub
add
mov
je
add
les
addl
lret
jno
pushl
fisubrl
cs
pop
lds
mov
rolb
dec
xor
decl
and
mov
inc
add
add
call
add
push
add
in
cli
push
and
dec
loope
add
add
inc
add
dec
cwtl
adc
incl
pop
imul
out
fwait
cmpsb
add
mov
add
in
xchg
jl
add
scas
movsb
add
mov
add
ljmp
add
mov
in
mov
add
inc
add
lret
mov
ljmp
das
aad
add
jns
roll
mov
add
add
fidivs
xchg
iret
call
dec
xor
lcall
add
jg
les
xlat
aas
mov
add
fadds
cli
idivl
out
dec
cmp
add
pop
out
dec
jno
fdivs
decl
add
addl
xor
incl
inc
add
cmp
adc
dec
jmp
sub
xchg
fwait
test
imul
cli
dec
test
pop
inc
add
pop
repnz
add
add
movsl
add
loope
or
pop
and
push
pop
gs
lods
dec
pop
add
rolb
mov
push
push
add
or
add
xchg
jg
add
dec
mov
cmpsl
add
push
xor
incl
pushl
inc
add
add
cmp
pop
push
and
incl
jecxz
fnstenv
pushl
add
out
pop
xor
lcall
pop
outsl
mov
mov
push
inc
add
pop
loope
icebp
cmp
mov
add
mov
sub
push
fcomi
add
pushl
pop
xchg
jge
mov
in
jecxz
xchg
cltd
flds
decb
popf
stos
dec
pop
push
add
or
cli
inc
add
add
mov
mov
add
dec
or
adc
jmp
add
add
mov
fwait
pop
cltd
sbb
add
movl
lahf
aas
cmp
add
or
decl
shl
add
add
jno
mov
sbb
roll
add
les
je
int3
jo
lcall
add
and
call
mov
or
cmp
add
fistpl
sub
scas
les
sub
add
add
jne
dec
pop
sbb
arpl
inc
add
dec
cmp
add
jo
jmp
and
ljmp
shll
push
push
add
jmp
leave
xor
xor
inc
add
add
add
sbb
jae
pushl
dec
ret
dec
jge
popf
arpl
ljmp
inc
add
fldenv
adc
std
lods
cmp
into
push
enter
dec
mov
inc
add
hlt
fcomps
mov
jnp
add
adc
incl
add
test
xchg
inc
add
pop
lahf
loopne
mov
or
lods
jl
add
decl
adc
incl
decl
xchg
mov
andnps
xchg
push
add
out
test
into
cmpsl
add
movsb
add
mov
rolb
cli
fdivl
mov
inc
add
aaa
daa
add
lcall
daa
add
add
test
fisubrs
out
in
ret
add
jns
add
fisubl
jmp
jmp
add
ljmp
add
inc
add
dec
sub
movsl
add
add
add
insb
pop
add
ret
add
add
pushl
add
mov
sbb
lcall
push
add
mov
ss
add
pop
aas
add
push
movl
addb
add
repnz
sbb
add
push
add
addl
push
add
add
add
mov
add
xor
incl
fiaddl
add
loopne
jb
ljmp
adc
call
add
xchg
cwtl
jno
jmp
je
idiv
enter
in
cmp
adc
jp
xor
incl
sarl
stos
pop
adc
jmp
add
add
hlt
mov
enter
and
ljmp
pop
repnz
jb
inc
add
dec
cmpsb
add
movsl
add
outsb
jge
add
bound
call
dec
mov
inc
add
daa
add
rcrb
xor
pushl
in
fisttpl
movsl
add
in
sub
cli
cmc
dec
data16
xor
call
mul
add
f2xm1
sahf
add
xchg
scas
cli
lcall
add
inc
add
das
enter
cli
jbe
add
add
lods
xor
jmp
xchg
imul
idiv
and
in
addl
pop
les
sarl
jmp
add
xor
pushl
add
xor
inc
add
into
xchg
mov
add
aas
in
dec
pop
mov
add
lahf
add
add
lds
pop
lcall
stos
pop
jmp
add
push
movl
scas
addb
add
add
mov
fisttps
add
add
add
je,pn
repz
cmp
mov
icebp
sbb
add
decl
lods
pop
adc
incl
add
out
jle
mov
mov
adc
incl
add
ror
ds
add
pop
push
add
add
push
add
fists
add
xor
mov
call
add
add
add
nop
sbb
push
add
loopne
roll
xchg
aam
lahf
dec
mov
pop
sub
add
lret
mov
add
mov
jl
push
add
xlat
in
cmp
add
cld
insb
lods
out
sti
les
jno
mov
cwtl
push
add
int3
nop
movl
jge
add
out
fcoml
inc
add
jmp
pushl
add
test
xchg
inc
add
or
cli
pop
cmpsl
add
add
pop
jmp
add
add
ljmp
std
mov
sti
jo
call
or
outsb
sub
decl
add
dec
arpl
mov
mov
call
add
lret
ror
out
imul
add
fdiv
cmp
pop
sbb
test
mov
add
jbe
add
ja
fcoml
decl
jb
incl
daa
add
add
lcall
add
mov
into
push
ja
aad
sub
mov
sbb
add
mov
pushf
sub
cwtl
lock
aas
lahf
inc
add
repz
mov
loop
jmp
sbb
fmuls
mov
dec
rolb
inc
add
push
xor
call
adc
push
jl
add
add
dec
cli
addb
cmp
pop
fdivl
int
add
lcall
mov
add
add
add
cmovo
decl
sbb
add
mov
dec
mov
push
add
in
and
cmp
addl
add
add
push
or
add
cmp
scas
sti
insb
insb
sbb
push
add
jns
add
pop
inc
add
add
ffree
add
fistpll
add
imul
scas
addb
add
or
daa
add
push
add
push
fwait
std
xchg
mov
hlt
mov
mov
dec
stos
xlat
xor
decl
inc
add
mov
ja
addb
lea
test
add
rolb
add
ja
add
stos
xchg
imul
add
adc
decl
add
sbb
add
add
and
out
jle
add
popf
incb
add
scas
scas
mov
jno
inc
add
mov
jns
push
add
pushl
add
cs
dec
lcall
add
add
adc
call
fistpll
cmp
fs
addb
add
push
adc
incl
insb
js
jg
cltd
xchg
iret
push
movb
data16
mov
xor
fwait
mov
add
jmp
add
dec
jne
mov
sub
clc
in
roll
add
jne
jge
add
outsl
addl
mov
lock
out
cmp
push
mov
jne
imul
and
decl
add
add
cmp
incl
jl
in
and
cmp
add
ds
add
mov
add
add
add
add
add
add
lret
ljmp
cmp
add
pop
add
sbb
add
fwait
xchg
cmc
jne
add
add
aaa
out
add
jns
add
add
add
fnstenv
fs
loope
add
iret
out
lods
add
lcall
ficompl
mov
add
push
add
mov
add
push
push
lds
cmp
lret
ret
je
add
and
decl
adc
call
mov
mov
add
pop
xchg
dec
fidivrl
nop
mov
sbb
mov
push
sbb
add
fstpl
push
addb
add
add
gs
fsubrs
add
sti
addb
mov
movl
push
add
mov
cmp
add
mov
add
xor
jp
notb
dec
shll
push
add
adc
incl
add
push
mov
add
lea
adc
lcall
mov
aaa
out
imul
push
push
add
daa
add
add
jmp
add
fwait
and
lcall
dec
aam
add
ja
pop
or
cmp
mov
sub
roll
inc
add
mov
add
add
mov
jmp
add
or
pushf
nop
sub
aaa
sub
add
daa
add
dec
sti
push
jnp
call
add
call
rorb
ja
adc
push
call
in
dec
lahf
faddp
add
filds
sub
add
loopne
icebp
xchg
shlb
add
idivb
loopne
std
ljmp
jmp
ljmp
addl
mov
clc
mov
fbld
pushf
idivl
std
push
push
add
pop
inc
add
jns
push
add
xchg
sbb
ret
add
add
lds
push
scas
dec
ret
add
das
cmp
push
adc
mov
sbb
repz
and
dec
stos
push
icebp
std
mov
mov
or
add
or
add
sub
pop
mov
xchg
mov
inc
add
mov
add
inc
add
jbe
add
aad
loope
inc
add
add
jmp
add
lret
addl
ror
jmp
out
dec
in
sbb
add
mov
add
jmp
add
push
add
pushl
add
hlt
jp
daa
add
call
cmc
push
add
cli
fsub
add
decb
lods
ljmp
mov
jbe
add
add
pop
mov
xchg
enter
xchg
dec
mov
adc
ljmp
jecxz
fisubl
add
aas
sbb
add
in
inc
add
pop
push
push
add
xchg
ret
or
pop
mov
xor
cmp
push
mov
xor
jmp
add
pushf
sbb
aad
addb
movb
pop
stc
add
add
and
decl
popa
add
sbb
dec
jmp
inc
add
jmp
lods
xchg
sub
leave
cld
fiaddl
mov
cmpsb
add
mov
add
jmp
add
dec
cmpsb
add
ja,pn
add
jno
ljmp
out
test
add
pop
lret
inc
add
mov
test
and
push
cmp
nop
xlat
movb
xchg
adc
decl
xor
clc
jle
adc
lcall
mov
or
add
repnz
add
add
add
mov
xor
or
inc
add
cwtl
cmpsl
add
mov
sbb
jae
fbstp
add
cmc
xor
call
stc
add
add
add
sbb
xor
inc
add
icebp
nop
int
nop
and
cmc
ljmp
adc
and
jmp
add
out
aas
or
unpckhps
xor
js
push
add
mov
add
add
int3
sub
add
sbb
cmp
xor
ljmp
in
js
mov
push
mov
pop
lcall
adc
jmp
mov
into
dec
loopne
xchg
cli
lock
add
xchg
mul
add
push
mov
sub
add
jae
dec
iret
aaa
negb
addb
add
setle
xor
add
add
cmp
add
jmp
add
mov
data16
add
add
add
jmp
add
rolb
mov
jae
incl
push
jae
call
add
mov
add
lods
int
add
idiv
mov
aaa
in
dec
sbb
mov
loop
push
into
dec
sbb
xchg
aaa
push
insl
pop
loop
mov
lcall
sub
icebp
mov
stos
icebp
sub
pop
in
icebp
enter
add
data16
add
lcall
test
outsl
cmp
mov
push
int3
push
add
insb
pop
add
jns
daa
add
les
jnp
xchg
in
sub
and
rclb
sub
inc
add
iret
and
jmp
add
push
jp
daa
add
int3
pop
popa
add
jno
decl
add
addb
lds
repnz
add
sbb
in
and
incl
cmp
add
in
arpl
decl
add
lahf
icebp
xor
call
add
scas
push
add
decl
push
add
add
jmp
and
ljmp
ds
or
add
ljmp
inc
add
pop
jg
xchg
ficoml
add
sub
push
add
add
jns
add
lods
jno
call
test
add
sub
inc
add
mov
mov
xor
lcall
icebp
dec
adc
mov
cmp
dec
jo
decl
in
aam
pop
jno
pushl
add
pushl
add
add
ret
inc
add
test
add
cmp
add
pushl
dec
sti
dec
daa
add
js
das
das
and
inc
add
adc
call
cmp
cmp
add
add
inc
add
mov
out
das
cwtl
ljmp
push
add
pop
xchg
jno
incl
add
incl
add
ret
add
out
das
mov
outsl
sbb
mov
add
and
incl
dec
insb
dec
pop
add
lods
push
mov
incb
add
sti
push
add
call
xor
jmp
add
repz
push
mov
pop
data16
pushl
add
insl
scas
js
add
jle
out
outsb
adc
xchg
pop
xchg
fcom
dec
jne
add
push
cmp
fucomip
or
sbb
jmp
movsl
add
add
and
pushl
fldt
cld
ret
add
les
adc
ljmp
pop
push
arpl
call
add
add
add
add
push
movb
add
add
aas
stos
into
and
fldenv
pushl
add
add
decl
dec
dec
shrl
or
sub
add
stos
dec
popa
add
push
add
pop
in
rcrl
addl
add
add
jge
test
jmp
add
add
mov
lahf
push
add
movb
into
xor
pushl
cmp
add
pop
jmp
add
ljmp
pop
sub
incl
and
sbb
add
jmp
scas
pop
inc
add
lcall
add
add
jno
lcall
rolb
add
iret
dec
pop
sbb
call
js
adc
decl
add
add
add
inc
add
outsb
or
loop
xchg
xor
call
add
cmp
sbb
add
adc
dec
mov
add
add
add
call
push
push
push
cli
mov
shl
sbb
loop
hlt
and
incl
sbb
pop
mov
aaa
inc
add
xor
incl
jle
sahf
mov
jb
ljmp
add
incl
icebp
inc
add
add
mov
jmp
add
add
addl
movb
leave
inc
add
aaa
mov
ret
jge
mov
fmull
mov
mov
add
addb
mov
fidivl
clc
add
add
out
xor
call
dec
adc
pushl
out
or
pop
scas
mov
sub
add
dec
and
fsubrs
add
stos
mov
lahf
sbb
adc
cli
and
decl
aam
add
stos
outsl
imul
inc
add
cmp
mov
add
fdivr
sub
in
frstor
add
and
leave
movaps
mov
dec
push
mov
mov
pop
xor
fsubr
jmp
add
pusha
add
xor
mov
icebp
aad
add
pop
imul
repnz
lods
pop
add
sbb
lahf
popf
in
icebp
jb
decl
lret
add
add
mov
les
cmp
add
insb
xor
ljmp
sbb
cmovl
sbb
imul
out
addl
out
mov
movl
and
ljmp
add
and
jg
add
sbb
xchg
and
push
jo
jmp
add
addl
pop
xlat
movl
dec
lock
add
pop
mov
mov
add
stos
cmp
js
add
sub
into
inc
add
repz
insl
or
add
add
dec
jmp
cli
jae
call
cmp
add
mov
test
std
mov
xlat
add
jmp
call
lcall
dec
and
out
lds
fwait
jl
jo
stc
xchg
mov
cmp
adc
fisttps
enter
sbb
out
loope
cmp
and
adc
or
push
addr16
mov
cmp
pusha
add
mov
xchg
pusha
add
mov
jmp
mov
sbb
lods
aam
add
pop
add
loope
ja
inc
add
add
lcall
add
icebp
xor
std
push
movsb
add
push
adc
adc
jl
lret
fisttpl
xchg
push
inc
add
mov
xor
ds
cltd
and
incl
add
mov
add
pop
cmpsb
add
mov
push
mov
mov
add
icebp
or
movsl
add
dec
out
fidivl
add
fdivl
fisubrs
adc
add
imul
xchg
cltd
lods
stos
mov
into
xchg
ljmp
mov
mov
movsb
add
mov
nop
mov
xchg
repnz
sub
jg
add
jle
add
aaa
mov
call
imul
add
lret
jmp
pop
xor
lcall
add
dec
dec
hlt
fsubp
add
repz
or
cmp
push
jo
jmp
add
scas
fwait
out
addb
add
jae
inc
add
add
iret
std
loop
icebp
fdiv
insl
stc
test
xchg
scas
or
scas
jb
pushl
add
cmp
lcall
adc
call
inc
add
push
jl
insb
pop
in
mov
add
into
xor
ljmp
add
ljmp
add
push
and
xor
jmp
add
aad
jp
add
imul
adc
clc
out
sub
add
xchg
movsb
add
mov
out
cvtpi2ps
add
push
add
popf
xor
ljmp
or
push
data16
and
sub
add
insl
jmp
stc
dec
addl
xchg
push
add
aas
das
xchg
and
decl
xchg
add
dec
add
jmp
sub
adc
pushl
stc
jle
add
add
cwtl
sub
add
jbe
push
add
daa
add
or
lcall
incl
pushl
ljmp
push
aaa
sbb
add
add
mov
incl
pop
add
lcall
pushl
lahf
sbb
call
daa
add
add
add
testl
cmp
cmc
int3
mov
jmp
sbb
add
cmpsl
add
and
dec
cmp
xor
add
mov
xor
incl
add
fldl
mov
add
add
xor
jmp
add
xchg
add
std
loopne
insb
pop
push
add
inc
add
add
add
mov
add
jmp
mov
stc
push
addb
sub
and
decl
int
add
mov
jmp
fs
mov
in
push
add
or
inc
add
outsl
add
decl
rolb
aad
push
jmp
into
sub
add
addl
sbb
add
les
cmp
add
pop
fcmovb
add
lods
mov
add
aaa
dec
cmpsb
add
add
cmp
dec
xor
decl
sub
add
in
cs
jnp
roll
adc
jmp
add
xchg
xchg
cmp
dec
stc
cmp
add
cmc
int
add
add
jg
add
sub
mov
decl
test
or
hlt
sbb
fdivrp
syscall
add
xor
lcall
add
adc
fdivp
mov
in
icebp
xchg
dec
mov
test
fldt
imull
add
jecxz
movl
ljmp
aas
lcall
pop
add
add
lods
out
out
lret
mov
dec
scas
jl
aam
pop
repz
xchg
cmp
mov
mov
mov
mov
add
stc
pop
fwait
push
add
sbb
dec
lcall
je
xor
std
sbb
add
popf
aaa
incl
add
test
xlat
arpl
jg
add
inc
add
add
incl
or
hlt
push
add
push
add
das
inc
add
add
lea
pop
add
and
adc
pop
push
push
add
lahf
outsb
mov
sub
lcall
addb
pop
pop
pusha
add
outsl
imul
mov
add
push
loop
xchg
sub
roll
movl
sar
pop
add
mov
in
in
xor
lcall
jp
add
add
add
inc
add
add
call
mov
addb
mov
mov
xchg
sti
addr16
dec
sahf
xchg
mov
test
and
incl
add
in
outsb
data16
and
addb
add
add
jmp
add
xor
cmpsl
add
decl
aam
push
outsb
pop
sti
cmpsl
add
mov
mov
insb
addb
add
test
jecxz
pop
add
in
xor
incl
lcall
and
jl
add
mov
add
add
lcall
test
cmp
lret
or
add
add
add
adc
sbb
mov
fsts
add
add
addb
add
add
js
mov
pop
inc
add
pop
add
cmp
lods
outsb
dec
mov
mov
jno
lcall
add
and
inc
add
add
add
inc
add
jmp
push
inc
add
pop
pop
test
mov
rolb
cmp
add
and
jmp
add
add
roll
add
iret
mov
dec
mov
add
add
nop
inc
add
inc
add
push
add
stos
mov
dec
aas
add
inc
add
lds
adc
cmp
add
mov
add
mov
add
ficoms
call
add
xchg
std
jae
in
push
mov
jne
xor
dec
and
or
ss
inc
add
hlt
stc
fcmovnb
add
ljmp
mov
mov
decl
add
mov
mov
imul
and
call
dec
aas
and
pushl
add
sahf
and
jmp
call
add
add
add
add
int
add
add
in
mov
hlt
stc
pop
in
add
dec
enter
jl
add
lds
cmp
add
jp
adc
push
add
les
dec
add
outsb
out
xchg
loop
sbb
daa
add
movl
in
loopne
icebp
jns
icebp
bound
call
pushl
push
les
outsl
cmp
addl
data16
push
add
xchg
call
jg
daa
add
repnz
add
add
pop
int
add
mov
add
jg
sbb
add
adc
cmc
mov
call
add
movsl
add
jg
dec
testb
lcall
cmp
add
addl
add
inc
add
hlt
movb
xor
ljmp
push
or
call
or
add
pop
cmpsb
add
inc
add
sbb
add
mov
or
aas
sub
lcall
or
call
decl
pop
int
in
and
ljmp
sti
jge
mov
push
xchg
and
decl
or
cmp
push
add
inc
add
push
add
add
addr16
cmpsl
add
add
sbb
add
add
inc
add
sub
sub
xchg
icebp
jl
xor
lcall
xlat
test
negl
add
sub
dec
fs
jbe
add
popl
fistpl
jne
mov
pusha
add
pop
addl
or
in
add
incl
lods
dec
add
sub
add
fildl
mov
dec
or
js
mov
mov
add
das
jle
add
fmuls
insl
xorps
lahf
jecxz
mov
fprem
sbb
pusha
add
sub
inc
add
cmp
add
mov
rcr
out
dec
ja
xchg
add
mov
int3
cld
jp
dec
mov
ss
test
mov
out
cmp
loop
addl
pop
inc
add
addl
add
add
movsl
add
std
dec
lock
mov
js
add
add
lcall
pushl
mov
loope
fnstsw
xor
js
sarl
ret
mov
add
add
add
ret
add
add
add
ljmp
pop
add
or
add
add
add
pushl
add
add
cli
mov
adc
sub
cs
mov
inc
add
arpl
call
add
stos
jmp
push
ret
add
arpl
jmp
xchg
aam
add
test
movl
dec
fimull
dec
int3
and
call
pop
sub
add
decl
push
sub
pop
ret
add
add
sbb
xor
pushl
add
pop
inc
add
mov
and
decl
add
enter
add
ja
add
adc
push
cltd
roll
add
in
mov
or
xchg
in
sub
add
pop
add
add
loope
push
add
xor
call
leave
fbld
jbe
add
mov
repz
push
sahf
daa
add
add
add
in
xchg
or
add
jns
fwait
and
fsubs
lcall
ljmp
pop
push
dec
ds
add
into
cmpsl
add
sub
fisubrl
jp
add
cli
jnp
int
add
xlat
lock
cltd
or
inc
add
aad
mov
pusha
add
cmp
mov
jmp
dec
mov
dec
pusha
add
rolb
imul
add
pushl
mov
aad
inc
add
adc
pushl
add
cs
xor
add
incl
add
adc
dec
test
sub
lods
jp
add
ljmp
push
add
jmp
or
imul
jmp
add
dec
std
ss
inc
add
xor
lcall
add
push
add
imul
sbb
inc
add
int3
or
mov
mov
add
addb
xchg
rolb
sbb
add
inc
add
xchg
lds
fwait
int
jmp
decl
fldt
mov
add
or
xchg
dec
movsb
add
add
mov
pop
add
test
add
lcall
aas
push
add
into
push
icebp
push
inc
add
adc
lcall
add
fst
cs
add
add
fisttps
xchg
xchg
inc
add
shll
add
aas
mov
call
add
cmpsl
add
xchg
les
fistps
dec
sub
into
lcall
add
sbb
add
mov
add
call
add
mov
add
add
pushl
add
jp
lods
sbb
test
ljmp
sti
popf
in
scas
dec
dec
stc
inc
add
push
cmp
add
add
in
jno
dec
pop
and
call
cs
les
addb
clc
leave
push
pop
addb
inc
add
add
aas
popa
add
xchg
pop
shlb
add
fsubl
add
add
add
sahf
inc
add
or
or
ss
add
dec
ds
test
add
jmp
jae
call
sbb
xchg
pop
sub
movsl
add
call
das
outsb
out
add
push
add
sub
pushl
add
stc
jno
incl
mov
add
int3
cmp
loop
adc
ljmp
decl
add
jmp
add
pop
cltd
stos
or
add
mov
sub
add
lods
mov
pop
add
add
cmp
add
cld
in
push
add
sub
add
mov
jb
jmp
add
push
fidivs
pop
add
ljmp
add
bound
jmp
add
add
add
call
sub
das
dec
mov
in
les
int
add
or
add
mov
jnp
add
cmp
cmp
cld
add
lcall
ljmp
sbb
loop
mov
jmp
test
fists
add
ds
or
incl
pop
shrl
ljmp
dec
out
call
add
lds
sub
add
and
call
inc
add
push
dec
dec
int3
loop
xchg
mov
pushl
jmp
add
add
jns
add
inc
add
add
jle
add
push
add
ret
mov
mov
add
add
mov
add
add
addb
add
pop
sub
add
jno
call
sub
adc
sbb
lcall
xchg
xor
call
add
loope
add
add
push
cmp
add
jae
cli
movb
add
insl
enter
lcall
dec
int3
pop
movsb
add
xchg
shlb
test
shrl
imul
das
lds
movl
add
lret
movsb
add
repz
dec
push
or
add
add
push
add
pop
add
sbb
nop
or
dec
xchg
lahf
pop
or
add
addl
ror
leave
ficompl
jbe
cs
ljmp
test
call
jl
add
mov
add
add
hlt
je
ljmp
add
xchg
addl
add
clc
test
add
jge
add
sub
add
in
inc
add
add
add
pusha
add
gs
movl
jno
jmp
mov
fs
add
add
or
jl
jae
jp
add
inc
add
ljmp
data16
addl
jge
add
sub
jmp
addl
push
loope
dec
xchg
or
lods
or
mov
je
jge
add
int3
inc
add
jmp
xor
sti
pop
and
decl
jae
jmp
pushl
add
dec
mov
icebp
xchg
mov
xor
incl
stc
mov
mov
mov
ror
inc
add
lcall
xor
rorb
dec
ja
add
lret
adc
jl
mov
cmp
mov
push
enter
outsb
push
mov
cmpsl
add
add
sub
stos
outsb
push
add
test
jmp
add
fstl
leave
mov
sbb
add
add
ret
add
in
mov
add
jno
cli
pop
xchg
das
push
in
out
dec
lds
xchg
and
call
sahf
mov
xchg
test
out
pop
loop
xchg
xchg
fwait
fwait
sbb
pop
rolb
imul
js
leave
jecxz
mov
jg
cmpsb
add
jb
cmp
mov
add
jp
sbb
test
decl
and
addb
mov
inc
add
mov
add
movsl
add
sti
enter
movl
dec
loopne
icebp
add
decl
add
shl
add
xchg
jbe
daa
add
imul
pop
add
data16
add
ljmp
hlt
and
sbb
jmp
int3
mov
enter
addb
sar
sub
test
mov
add
sub
loopne
iret
loope
test
sub
pushl
add
inc
add
jo
repnz
add
xor
decl
scas
fldenv
lock
call
add
add
test
xor
dec
pop
out
lock
test
dec
xchg
scas
mov
add
push
add
jo
mov
add
inc
add
add
mov
in
addb
add
movsl
add
jmp
add
roll
add
jge
mov
add
aas
jl
mov
rcrb
add
lddqu
hlt
cmp
popa
add
or
add
lahf
pop
sbb
add
in
pop
mov
mov
and
data16
imul
out
and
mov
repnz
call
dec
xor
call
jns
and
jg
add
jmp
jl
pop
lret
test
sub
add
jl
add
xchg
lret
mov
mov
out
lcall
mov
sbb
in
je
je
loop
xor
cmp
mov
sti
sub
cmp
dec
data16
pop
ljmp
add
or
sti
jge
mov
jmp
sub
std
xchg
and
clc
jp
add
mov
add
add
scas
xchg
add
add
fcomp
fpatan
push
ljmp
pop
ss
js
add
sbb
add
sarl
mov
xchg
mov
add
int3
aas
and
add
add
lods
cld
mov
lret
cmp
add
add
lcall
add
jmp
movsb
add
add
dec
repz
inc
add
stc
jo
mov
sahf
in
adc
shrb
das
cvtps2pd
jle
add
test
fnsave
add
or
add
int3
push
jl
add
mov
jg
add
data16
add
pusha
add
lods
push
add
mov
ret
add
ljmp
imull
add
cmpsb
add
push
add
and
incl
lahf
push
add
push
clc
repz
popa
add
iret
cltd
lahf
sub
popa
add
cmp
cmc
out
cmp
add
add
incl
xchg
lcall
add
dec
inc
add
add
icebp
mov
ljmp
sti
pop
jo
ljmp
jne
add
add
add
test
add
dec
call
out
push
mov
lock
lds
out
add
jne
add
aad
jae
call
sbb
add
xchg
adc
call
movsl
add
add
outsl
das
push
cltd
push
jae
decl
add
enter
cmp
add
or
mov
cmp
cmp
add
cmpsl
add
add
sub
pop
mov
in
jo,pn
lcall
call
xchg
adc
jl
or
add
in
xchg
in
popa
add
jecxz
ss
xchg
test
je
sub
add
pop
nop
sahf
lahf
mov
pop
mov
push
add
movsl
add
fstpt
add
dec
jmp
add
loope
movsl
add
icebp
aaa
pop
add
jmp
add
push
inc
add
xchg
insl
cmp
add
jo
pushl
add
clc
stc
mov
lds
jb
jmp
test
out
jne
add
dec
sbb
movb
inc
add
sub
add
jp
push
mov
or
add
add
test
add
xchg
in
sub
addl
add
pop
popa
add
pop
push
stos
addb
pop
add
dec
cmpsb
add
nop
xchg
jns
jae
lcall
add
dec
mov
into
pushf
push
add
add
add
add
in
sahf
push
test
sti
incb
jmp
add
mov
lock
popf
dec
lods
mov
call
stos
add
add
repnz
scas
jne
clc
lret
add
enter
imul
push
add
shll
and
lcall
shll
add
adc
pushl
pop
in
sarb
mov
add
pop
outsb
cmp
add
mov
add
add
jmp
add
add
add
std
push
push
add
dec
addb
rolb
pushl
add
add
pusha
add
adc
add
data16
sub
ljmp
xchg
add
xchg
inc
add
cmp
add
rclb
add
in
and
call
in
addb
popa
add
cmp
add
jl
add
add
test
dec
jle
add
pop
outsb
je
or
jecxz
add
call
mov
movsb
add
sub
add
mov
add
add
mov
jno
lcall
mov
ss
jecxz
jmp
cli
mov
test
and
mov
ret
add
mov
mov
rolb
mov
pop
add
add
stos
mov
sub
imul
add
xor
call
into
push
addr16
xchg
cmp
add
call
mov
and
lcall
shrb
ds
dec
mov
scas
mov
enter
add
in
lahf
push
add
sbb
add
mov
add
add
test
mov
lock
aas
mov
add
lret
js
jae
ljmp
sub
int3
mov
pushl
cmp
cmp
add
test
or
add
add
decl
push
adc
mov
stc
loop
nop
pop
incb
add
push
ret
outsl
inc
add
mov
stos
xor
ljmp
in
mov
sub
push
jo
incl
add
in
insb
outsb
stos
sub
decl
icebp
js
push
add
int3
rolb
add
push
flds
movsb
add
seto
add
movl
push
add
add
roll
imul
xor
dec
jecxz
mov
movsb
add
or
and
cld
xchg
addl
les
loope
jns
adc
call
mov
stos
sub
add
aam
add
and
add
lea
add
and
incl
jo
jmp
sub
jecxz
movl
add
int3
je
mulb
sti
pusha
add
test
xchg
mov
add
aam
loopne
imul
notl
jns
pop
fcomps
lods
pop
add
lcall
add
mov
test
mov
add
fimull
pop
call
les
js
add
out
and
call
inc
add
add
mov
add
mov
and
fisubrl
inc
add
add
jmp
add
add
adc
add
jb
ljmp
mov
jne
add
test
test
scas
out
clc
neg
push
add
sbb
add
add
push
add
sti
out
test
mov
dec
mov
addb
add
add
jnp
sub
lods
push
out
mov
inc
add
inc
add
mov
add
imul
add
sahf
cmp
sti
cmc
push
add
loop
ja
adc
pushl
sub
xchg
push
add
inc
add
add
incl
add
mov
pop
dec
test
push
xor
stos
jns
add
mov
mov
rolb
movsl
add
add
add
add
mov
add
inc
add
movsb
add
add
jp
add
roll
lods
aaa
sbb
clc
push
add
stos
or
cli
jae
jmp
call
sahf
dec
pop
sub
mov
movsb
add
mov
add
outsl
dec
inc
add
add
mov
adc
inc
add
add
add
inc
add
add
jmp
add
and
mov
add
pop
in
dec
inc
add
shlb
outsl
xchg
inc
add
add
jbe
lahf
mov
aam
addb
mov
lock
aaa
stos
add
jmp
add
fcompl
add
and
incl
add
jle
jmp
cvtps2pi
dec
and
pushl
stc
loopne
aam
pop
inc
add
dec
push
mov
je
add
jp
in
movsl
add
mov
add
hlt
jg
xlat
mov
mov
fdiv
jle
add
ja,pn
iret
loopne
sub
add
data16
add
ljmp
std
dec
sbb
or
sbb
add
sub
add
mov
inc
add
add
addb
add
lcall
add
add
add
aam
add
sahf
mov
addb
mov
push
mov
in
mov
add
add
add
push
movsl
add
lcall
or
stos
add
pushl
push
inc
add
out
mov
out
pushf
xlat
addb
add
cmp
out
mov
movsl
add
jl
inc
add
rolb
leave
cmp
push
add
cli
xchg
in
cmp
in
cmp
repnz
inc
add
or
push
add
add
add
mov
roll
add
sub
mov
pop
mov
out
mov
movsl
add
add
jae
pushl
xchg
and
jmp
pushl
lcall
xchg
adc
fdivp
adc
pushl
rep
and
in
jae
jmp
sbb
inc
add
jns
in
lcall
jmp
add
pushf
leave
in
mov
add
mov
jmp
add
add
sbb
and
decl
push
add
test
into
sbb
add
mov
mov
or
test
jl
add
in
scas
daa
add
add
loopne
mov
add
add
mov
mov
add
ljmp
fisubs
incl
call
cmc
push
and
ljmp
cmp
add
mov
jns
xlat
nop
sub
lds
nop
xchg
nop
push
adc
add
mov
jl
add
inc
add
mov
add
add
in
xchg
lock
mov
add
jo
cmp
mov
add
aaa
ret
add
incb
xchg
movsl
add
cli
mov
addl
or
add
push
add
lcall
add
add
fldenv
stos
pop
add
or
arpl
decl
jns
stc
push
add
push
jbe
out
divb
jmp
add
outsl
inc
add
push
arpl
jmp
push
arpl
decl
adc
roll
mov
jge
adc
jmp
add
insl
data16
add
sbb
ret
add
ret
push
dec
dec
xchg
push
xor
lcall
in
stc
xchg
pop
pop
add
push
mov
adc
mov
add
add
xchg
add
mov
push
or
ss
add
jno
decl
push
add
roll
inc
add
hlt
jb
ljmp
decl
pop
in
lods
sbb
push
pop
ret
add
nop
cli
scas
outsb
cwtl
pop
and
xchg
cli
daa
add
inc
add
add
lea
aam
in
stc
push
or
or
add
sbb
les
je
sub
fadds
add
pop
add
or
and
push
pop
add
dec
aas
push
add
mov
xor
decl
add
jno
push
loope
lock
imul
sbb
push
pop
loop
arpl
ljmp
mov
add
adc
jmp
add
or
add
cltd
xor
inc
add
test
test
push
add
pop
mov
fidivrs
mov
and
ljmp
popf
and
cmp
or
pop
not
mov
gs
add
add
test
arpl
dec
push
adc
push
add
cmp
add
lods
addb
inc
add
mov
adc
incl
add
into
sbb
add
sti
jnp
cmpsb
add
and
add
lcall
ljmp
add
add
test
add
xchg
pushf
mov
pop
popl
mov
shrb
mov
roll
add
lods
jne
add
sub
stc
mov
int3
add
incl
add
loopne
std
fsubrs
add
mov
repz
lcall
pop
xchg
pop
add
jmp
add
push
sub
jle
addl
push
insb
push
add
inc
add
jp
cwtl
movl
pop
pop
sahf
fdivrs
xor
pushl
xchg
inc
add
fldcw
adc
jmp
add
add
rorl
jge
fldenv
addl
addb
loope
push
movsb
add
out
repnz
sti
ret
add
inc
add
add
lcall
inc
add
add
loop
addb
imulb
je
add
roll
cmp
pop
xchg
cwtl
mov
pop
jb
dec
nop
std
jnp
cmp
clc
cmc
sub
and
cmp
add
add
lock
rorl
into
sbb
jp
mov
xor
jg
scas
jl
aam
lods
jge
pushf
add
lods
pop
push
add
shll
decl
sarl
outsl
je,pn
add
mulb
xchg
or
pushl
add
in
dec
test
out
scas
enter
call
inc
add
xor
push
stos
je
add
add
pushl
insb
cld
mov
cld
pop
add
add
cld
nop
out
movsl
add
jmp
add
add
and
pushl
fdivrs
mov
inc
add
inc
add
add
mov
add
aad
lcall
add
lahf
pop
aas
push
cmp
add
add
pusha
add
jno
call
fistpl
adc
push
in
push
adc
incl
add
decb
or
add
mov
add
adc
lcall
adc
jmp
ljmp
add
xchg
fsubr
xchg
add
sbb
add
aad
add
xor
sub
add
or
xor
call
pushl
add
inc
add
and
sub
add
imul
call
add
and
jl
mov
and
ljmp
dec
and
jmp
add
int3
pop
add
xor
incl
add
xchg
xchg
sar
jp
fadd
add
lcall
add
dec
incl
add
or
add
push
add
xlat
or
pop
addb
outsb
lret
int3
insl
into
ds
xor
incl
or
add
mov
mov
outsl
insb
lcall
mov
pushl
mov
bound
pushl
jmp
decl
push
in
pop
inc
add
xchg
adc
jmp
add
bnd
decl
movsb
add
cwtl
sub
movsl
add
jnp
fsubrl
jno
call
mov
mov
ljmp
and
pop
loop
es
inc
add
xor
outsb
cmp
lds
mov
js
push
add
out
jp
inc
add
jmp
xor
lcall
xor
decl
js
cli
cld
mov
and
call
jb
incl
les
movsb
add
addr16
jl
add
call
lcall
add
add
pushl
add
cmp
jnp
shrl
sysenter
mov
add
add
fiadds
movsl
add
decl
or
jno
incl
add
aam
sub
repz
lea
add
xlat
je
add
xor
inc
add
nop
and
pushl
sub
add
add
push
xchg
aad
mov
dec
mov
add
fcompl
push
add
addb
add
jge
addb
dec
jno
mov
mov
popa
add
and
out
xor
incl
pop
mov
add
add
in
lret
sub
jne
add
dec
push
add
inc
add
shrb
mov
push
inc
add
and
dec
mov
mov
inc
add
mov
add
in
dec
xchg
pop
dec
dec
outsl
in
aaa
icebp
or
inc
add
or
hlt
leave
fcomps
add
mov
or
decb
call
mov
stc
addl
pop
leave
sahf
leave
jmp
in
jl
add
dec
addl
scas
mov
adc
pushl
loope
addb
xchg
insl
call
lahf
mov
decl
add
popa
add
inc
add
adc
cmp
out
jmp
push
add
xor
jmp
push
add
xchg
dec
add
xchg
or
mov
add
adc
pushl
add
mov
add
fsubrl
push
mov
sub
lret
add
pushl
jb
incb
push
mov
add
mov
insl
addl
push
add
rcl
pop
push
add
in
cs
movb
push
add
addl
add
add
add
add
sub
jne
adc
add
aaa
add
inc
add
add
or
mov
pop
xor
decl
outsb
je
cmc
fwait
add
add
jmp
or
inc
add
add
insb
mov
add
movl
xor
add
jp
mov
pushf
mov
push
add
add
decl
addl
imulb
add
add
add
push
mov
repz
add
les
pop
adc
incl
add
ror
push
or
js
add
xor
jmp
test
roll
ljmp
std
rcrb
inc
add
add
ljmp
lahf
je,pn
adc
decl
add
movb
inc
add
adc
dec
scas
nop
mov
add
cmp
shr
addl
cmpsb
add
add
inc
add
add
mov
in
jnp
ljmp
add
mov
cmp
leave
inc
add
mov
sarl
xchg
push
fisttpll
and
jmp
add
pushf
mov
mov
and
ljmp
jbe
xchg
lret
out
xchg
out
les
dec
add
lcall
pushl
add
xor
call
popa
add
decb
push
adc
pushl
add
add
jns
xlat
jge
xchg
adc
dec
into
ret
add
dec
and
inc
add
mov
add
jae
inc
add
out
push
add
mov
add
lcall
add
sbb
adc
popa
add
inc
add
ds
xchg
lods
test
inc
add
cmp
and
lcall
into
cmpsb
add
enter
add
lea
add
mov
movsb
add
add
fmull
addl
push
aad
dec
cmp
cwtl
stos
jle
adc
decl
ds
dec
lods
xchg
or
mov
mov
jecxz
loop
fcoms
adc
call
jmp
add
in
mov
pop
xchg
or
lds
dec
aas
pop
aaa
xchg
pusha
add
clc
cvtdq2ps
js
add
pop
gs
inc
add
ljmp
inc
add
roll
addl
add
and
add
add
and
out
ficompl
popa
add
ljmp
xchg
stc
mov
add
popf
sbb
addb
jb
jmp
add
inc
add
decl
hlt
push
add
or
add
in
xor
jmp
call
dec
pop
mov
add
sub
xor
add
add
dec
lahf
mov
add
mov
ss
leave
and
decl
jp
dec
pop
jmp
mov
ja
push
add
in
pusha
add
rclb
push
add
jge
stos
adc
pushl
jmp
push
mov
test
cld
loopne
call
add
addl
sbb
into
repnz
xchg
aaa
cltd
mov
out
push
pop
mov
add
xor
call
jmp
leave
movsb
add
insb
xor
call
movsb
add
roll
add
jne
add
add
sub
add
inc
add
inc
add
mov
sahf
shl
dec
int
add
stos
mov
add
push
add
add
inc
add
cmp
push
stos
lods
out
jp
add
xor
pushl
inc
add
jbe
inc
add
call
add
repz
stos
inc
add
cmp
add
aam
lods
out
sbb
lds
jmp
add
ljmp
or
adc
add
add
add
movb
enter
xchg
mov
or
std
stc
pushf
and
lcall
add
adc
inc
add
add
idivb
add
add
inc
add
imul
adc
pop
int3
out
movsl
add
sahf
add
xchg
fisubl
add
cmp
pop
cmp
mov
add
out
jno
push
out
xor
incl
fsts
out
out
mov
or
lods
into
mov
hlt
mov
dec
jmp
add
mov
add
imul
dec
xchg
inc
add
mov
add
push
add
addb
add
clc
dec
dec
loope
adc
cld
pushf
in
mov
shrl
add
bound
lcall
mov
jae
jnp
jecxz
mov
rolb
xchg
lds
sbb
cmp
add
add
decl
add
mov
inc
add
dec
adc
add
dec
into
iret
sbb
jns
ss
add
loop
fidivrl
ret
add
jmp
mov
xor
jle
adc
std
sub
add
insl
lret
add
add
mov
jb
lcall
lea
les
in
ds
jae
ljmp
ja
adc
decl
inc
add
add
or
add
add
lods
loope
sti
std
bound
filds
add
add
lcall
inc
add
add
and
call
loop
push
out
mov
and
ljmp
add
mov
add
pop
lds
addl
add
fcmovne
lret
bound
lcall
xlat
and
mov
xchg
testl
pop
shld
lahf
insl
sbb
insb
mov
cmp
aam
xchg
mov
maxps
add
add
xchg
or
add
xchg
ficoml
add
jae
fnstcw
jle
inc
add
popf
insl
sbb
or
into
outsl
mov
xor
out
pop
add
push
adc
lcall
add
add
push
jl
pop
add
mov
sub
add
add
add
add
lods
dec
xor
dec
mov
cs
lret
in
roll
add
mov
xchg
add
pushf
mov
add
xchg
or
jmp
call
push
lods
pop
sub
push
add
shl
rcrb
adc
jmp
push
and
inc
add
mov
add
jb
push
add
jge
mov
out
leave
cmp
jl
add
lods
push
mov
add
sbb
jle
sub
ljmp
stc
icebp
and
jnp
pop
pop
pop
xor
ljmp
out
lock
fisubrl
incl
popf
jmp
add
mov
fdivs
and
jmp
add
lcall
mov
cs
add
add
cltd
sub
cmpsb
add
jmp
add
andps
jns
dec
dec
mov
push
add
cmpsb
add
add
inc
add
jg
fidivl
sub
fidivrl
mov
add
cltd
adc
add
add
or
rolb
in
dec
push
add
jle
stc
jecxz
add
pushl
or
lret
call
add
leave
sbb
add
and
ljmp
lret
cld
sbb
add
add
add
call
xchg
int
loopne
aad
add
add
mov
adc
pushl
push
add
and
call
mov
or
xchg
mov
rolb
jp
add
jmp
add
add
fadds
add
pop
hlt
pop
xchg
push
add
add
and
add
and
mov
lcall
ljmp
jbe
jae
incl
add
faddp
add
inc
add
add
das
sbb
pop
nop
jl
add
sbb
mov
add
jl
scas
push
add
test
sbb
imul
push
outsb
xchg
add
dec
jbe
daa
add
incl
jmp
add
xor
fidivrl
pop
sub
add
xchg
mov
lods
xchg
pop
or
add
leave
add
jmp
add
jmp
lods
and
incl
push
adc
pushl
add
ss
pop
repz
push
or
add
in
aas
lods
cmc
ret
insb
cmpsb
add
mov
add
into
cmpsb
add
sub
add
js
movl
in
frstor
cmp
ret
or
mov
in
mov
nop
mov
ljmp
add
int
ret
add
arpl
incl
decl
pop
and
mov
fists
inc
add
push
add
sbb
les
mov
cs
call
ja
push
lret
mov
lcall
in
popa
add
adc
sti
mov
add
repz
shl
add
xor
jmp
mov
mov
mov
jne
push
adc
decl
jne
add
inc
add
and
call
add
push
scas
iret
clc
push
push
test
incl
lret
scas
jmp
add
adc
add
fisttpl
jg
adc
decl
dec
adc
add
add
add
pushl
add
cmp
push
add
decl
scas
xchg
frndint
into
scas
push
add
fdivrp
pop
mov
inc
add
jg
pop
or
cmc
mov
add
inc
add
mov
mov
push
ds
add
pop
scas
pop
fcoms
add
pop
add
addb
add
repnz
xor
pushl
sbb
rolb
out
out
xchg
movsb
add
in
movb
outsl
imul
xchg
inc
add
lods
push
add
add
out
add
sbb
jl
add
and
fimuls
testl
adc
jle
add
mov
cmc
cmc
sbb
add
add
add
mov
mov
add
or
test
scas
mov
loop
addb
ret
int
add
add
scas
stos
in
in
pop
cwtl
jg
add
pop
popf
and
ljmp
stos
test
jecxz
xchg
sub
mov
insl
sbb
mov
add
add
add
jecxz
in
das
das
xor
shrl
les
pusha
add
shll
add
insl
popf
loope
mov
xchg
sub
ret
add
add
add
jno
ds
decl
sbb
add
mov
add
xchg
mov
jae
jmp
add
popa
add
loope
test
mov
loope
sub
cmp
adc
mov
scas
out
push
push
add
stos
addr16
xor
inc
add
and
sub
add
add
popa
add
mov
mov
add
add
hlt
ret
add
add
in
cmp
add
int3
or
clc
inc
add
adc
jmp
in
or
add
inc
add
lds
or
pop
insl
add
jmp
jmp
add
add
mov
insb
fadds
add
dec
adc
push
add
push
inc
add
push
mov
rorl
add
add
lret
js
add
add
push
movsb
add
push
push
cmp
add
repz
lods
xor
add
add
jge
jbe
lret
clc
xchg
jnp
add
cli
mov
insb
sub
xlat
sub
add
add
lret
xor
lcall
fstpl
pop
adc
ljmp
add
test
jecxz
xor
incl
int
jge
add
add
mov
inc
add
inc
add
pop
and
jg
add
add
jmp
add
mov
fisttps
sub
add
add
ljmp
dec
ret
add
adc
jb
jmp
dec
mov
ret
add
add
pushl
les
dec
push
add
jnp
outsb
in
inc
add
add
ja
jp
outsb
mov
popa
add
je
add
addl
push
roll
mov
push
add
fisubs
add
in
cmc
popa
add
push
nop
pop
pop
sbb
add
repnz
mov
ljmp
addb
iret
sbb
mov
insl
add
call
add
rorb
lcall
mov
aaa
iret
fmuls
outsb
daa
add
xchg
addl
ja
lcall
adc
incl
add
sbb
add
call
bound
call
or
dec
imul
mov
mov
add
insb
fidivs
add
and
shl
add
mov
add
xchg
pop
xor
lcall
add
movl
jae
lcall
mov
stc
push
push
dec
add
add
mov
aad
mov
repz
add
sahf
or
mov
fistpll
cmpsb
add
in
adc
jmp
add
add
call
dec
pusha
add
jo
jmp
add
test
addl
add
imul
push
mov
sub
add
daa
add
incl
add
add
jmp
call
adc
add
jg
adc
jle
add
add
add
xchg
das
xchg
cmp
push
jne
add
incl
add
fldt
inc
add
mov
addb
add
add
add
jp
fcmovb
add
addl
mov
xor
jmp
jmp
js
add
adc
lcall
mov
bound
jns
add
sahf
test
jg
aas
push
add
loopne
pop
add
int
add
fistpll
inc
add
jns
and
fnstenv
pushl
add
xor
call
jmp
add
or
pop
sbb
mov
mov
jne
lds
mov
test
mov
sub
add
data16
mov
loop
addl
sbb
sub
scas
xor
lcall
mov
add
add
int3
and
push
cmp
add
repnz
cwtl
aas
xor
jle
adc
jns
add
jne
data16
sti
add
incl
add
sti
xor
lcall
add
jbe
adc
decl
and
jmp
add
cmp
sbb
clc
xchg
loopne
in
push
imul
decl
pop
addl
add
push
add
addl
iret
push
add
add
call
testl
addb
sub
add
push
jae
incl
movb
add
sbb
sarl
cwtl
scas
roll
je
add
add
xor
push
ret
dec
adc
decl
jl
add
add
lock
ljmp
cmpsb
add
nop
xor
sarb
add
rolb
sbb
and
fdivl
add
out
fsubs
add
cmc
and
incl
add
inc
add
add
loopne
push
push
lods
push
adc
mov
xchg
dec
call
pop
add
add
cmp
or
add
adc
inc
add
dec
push
add
movb
sarl
add
addl
and
cmpsb
add
inc
add
negb
add
xchg
dec
je
pop
push
add
xor
mov
incl
scas
lret
mov
inc
add
and
inc
add
in
roll
lock
inc
add
add
jl
mov
sub
add
add
in
les
dec
repnz
jns
int3
xchg
sahf
dec
repnz
add
xor
call
add
jp
imul
add
add
add
dec
repnz
mov
daa
add
add
lods
ret
mov
mulb
rolb
js
add
add
add
add
add
add
fnstsw
xchg
mov
add
push
add
fnstsw
add
sub
addb
add
lcall
mov
pop
adc
push
add
add
sub
ja
cmpsb
add
sub
std
jge
addl
add
and
inc
add
pop
xor
dec
jp
add
cmp
fists
add
ficoml
add
aad
mov
add
ljmp
mov
movb
test
mov
mov
sbb
add
mov
adc
jmp
call
rclb
int3
jecxz
aaa
sti
add
add
and
push
push
add
add
call
sbb
out
jecxz
inc
add
pop
adc
jmp
arpl
push
imul
sub
add
lds
movl
outsb
lret
fmuls
ja
and
pushl
jmp
add
add
incl
add
add
stos
xchg
nop
js
mov
xchg
aam
pop
cmc
or
mov
add
cmp
inc
add
jo
jmp
pushl
jns
add
mov
shl
mov
xchg
sub
inc
add
mov
sub
enter
adc
decl
jp
dec
insb
or
ljmp
iret
addb
inc
add
ljmp
add
push
mov
add
stos
mov
pop
rclb
scas
add
jge
sub
daa
add
xor
js
add
add
iret
push
add
iret
cmp
mov
es
add
jge
mov
add
add
add
mov
add
dec
ficoml
push
pop
push
jmp
mov
in
cwtl
popf
jb
incl
add
dec
xchg
inc
add
jge
inc
add
das
inc
add
outsl
sti
rcl
stos
test
sbb
pop
jo
jmp
fcomp
sti
sbb
push
add
test
scas
pushf
sbb
in
mov
push
add
mulb
jmp
add
push
add
push
mov
add
cmp
push
add
testb
ret
add
in
xchg
gs
add
dec
cmp
stos
xchg
movsb
add
imul
fildll
add
fisubrl
cmpsl
add
dec
rolb
add
add
or
call
test
add
cmp
add
addl
adc
mov
sbb
mov
add
mov
push
icebp
push
add
idivb
add
leave
loop
add
mov
add
divb
add
or
sbb
adc
dec
xor
ficoml
add
movsl
add
xchg
roll
jo
cmp
mov
mov
aaa
mov
lcall
add
fnsave
add
adc
push
addl
jmp
fnstsw
add
addb
int
mov
sar
mov
js
xlat
adc
into
iret
ljmp
add
sub
js
test
push
clc
insl
stos
inc
add
add
dec
mov
add
call
xor
lcall
lods
and
call
push
push
mov
and
call
loope
test
add
add
push
stos
xor
into
adc
pop
gs
pop
add
incl
fdiv
test
pusha
add
push
add
add
xor
jmp
add
scas
cmp
bound
incl
adc
cmp
cli
xor
jmp
add
inc
add
incl
pushl
add
jne
unpckhps
inc
add
dec
js
test
dec
add
add
push
add
mov
sbb
out
dec
jecxz
xor
call
add
addl
add
add
mov
adc
inc
add
or
inc
add
addb
add
test
movsl
add
lcall
push
xor
incl
xor
cmp
scas
cmp
sub
mov
in
sub
sub
movl
incl
add
push
add
cmp
shrb
jmp
add
add
jg
add
stos
xchg
and
ljmp
cmpsb
add
add
pusha
add
aaa
mov
lcall
add
sub
movl
lock
and
call
sahf
push
add
call
add
ds
icebp
adc
pushl
add
dec
cwtl
pop
xchg
stos
in
movl
lcall
sbb
ljmp
push
test
movsb
add
in
aas
bound
call
nop
arpl
pushl
call
jmp
add
xchg
stc
mov
add
add
data16
insl
sub
add
pusha
add
cmpsb
add
cld
mov
ljmp
popa
add
scas
and
push
data16
jns
add
add
cmp
sub
lcall
jle
and
jmp
add
incl
or
add
fcmovnbe
add
rolb
add
add
ljmp
rorb
aam
and
decl
mov
call
or
add
lcall
fcompl
sti
jmp
add
cmpsl
add
push
add
out
roll
xor
mov
aas
jns
add
mov
in
movsb
add
into
xor
ljmp
add
std
cld
loope
aad
add
mov
add
add
mov
add
fs
iret
pushf
scas
std
movb
add
or
mov
add
enter
jp
add
mov
sbb
add
rolb
cmp
add
mov
mov
addb
ret
add
adc
ljmp
push
mov
inc
add
pop
xchg
decb
jnp
sbb
imul
add
jge
pushf
inc
add
hlt
cs
dec
ret
push
and
jmp
add
adc
ljmp
bound
call
add
push
add
cs
test
xchg
mov
add
fucomip
jno
call
arpl
pushl
jmp
mov
add
cmpsb
add
ss
pop
movl
dec
sub
incl
inc
add
je
add
lds
outsl
addb
pop
dec
adc
aam
aad
add
sbb
ljmp
adc
jmp
fldl
add
and
stc
add
call
lret
shll
cs
add
pushl
xor
decl
cmpsb
add
adc
ljmp
mov
xchg
xchg
sub
inc
add
push
sar
add
decl
xor
add
add
ret
add
xchg
jo
ljmp
in
bound
jnp
add
add
and
jmp
add
add
lds
pop
sti
sbb
add
inc
add
hlt
imul
add
adc
jmp
add
mov
push
fcomps
cld
mov
sbb
add
jns
addl
call
cmp
push
test
rolb
add
and
call
incl
add
add
add
lock
mov
lcall
out
int
xchg
aam
or
outsb
aam
cmp
incl
add
fdivl
jmp
mov
fsubrp
add
add
jecxz
pop
sbb
mov
decl
fldl
and
add
add
lcall
mov
add
inc
add
adc
ljmp
xchg
repnz
loop
sub
lock
insl
loop
inc
add
sbb
ja
add
jmp
jge
arpl
inc
add
stos
inc
add
add
inc
add
push
add
int
add
and
push
add
inc
add
pop
arpl
lcall
add
mov
fsubrs
add
fisubs
add
sbb
add
add
into
add
add
loope
bound
fcompl
mov
add
lret
test
adc
call
sarb
inc
add
add
add
jmp
add
aam
add
je
add
movsb
add
add
and
jmp
imul
add
mov
jecxz
adc
outsb
cmp
inc
add
add
mov
add
cmp
call
sti
cmp
add
add
xchg
out
mov
roll
adc
inc
add
dec
xor
lcall
xchg
mov
cwtl
jl
add
outsb
mov
jno
jl
lcall
out
adc
decl
aam
add
shlb
in
ret
add
fisttpl
add
fcomi
daa
add
sbb
add
add
sub
push
jae
incl
jl,pt
push
add
sub
mov
out
data16
int
dec
xor
xor
call
add
lds
mov
mov
jmp
inc
add
cmp
add
sbb
add
sbb
rcrb
add
push
add
push
or
cwtl
pop
cmc
and
call
jle
aaa
and
or
adc
or
xchg
les
add
mov
popa
add
sarl
ficoms
mov
add
jmp
add
test
xlat
aas
call
push
add
in
pop
adc
sti
dec
push
xchg
sub
out
js
add
add
mov
pushl
cs
dec
fisttpl
outsb
sbb
cmp
stc
sbb
sbb
addl
test
add
xchg
icebp
mov
add
pushf
mov
fisubs
cli
mov
decl
jmp
add
xor
add
jecxz
addl
fsubl
decl
lods
movsb
add
iret
adc
inc
add
add
push
mov
add
out
out
leave
jne
scas
cmc
jmp
xor
decl
pop
adc
ds
rcr
mov
pop
add
pushl
movl
add
mov
and
jmp
add
loop
sbb
push
inc
add
xchg
fldt
add
xchg
movsl
add
dec
test
sub
add
daa
add
ljmp
add
add
cmpsb
add
ljmp
mov
dec
sub
inc
add
xchg
and
pushl
push
icebp
sahf
cmp
pop
xlat
aam
xchg
xchg
lods
xchg
add
incl
ljmp
add
imull
ret
add
scas
sbb
ljmp
mov
lret
jo
jmp
add
xchg
mov
sti
mov
les
out
es
add
aad
add
lret
sbb
arpl
inc
add
add
push
enter
inc
add
add
pushl
ss
cmp
inc
add
add
xchg
sbb
add
add
mov
addb
test
jmp
cmp
and
decl
add
add
add
cmpsl
add
lock
cwtl
fimuls
data16
js
out
sti
add
push
cmp
cmp
add
mov
jmp
add
iret
loop
cltd
inc
add
mov
fisubrl
mov
fisubrl
adc
jmp
add
pop
pop
test
pop
add
pushl
push
mov
add
enter
add
out
xor
sti
js
xor
call
lea
adc
mov
add
in
call
add
cltd
mov
lcall
bound
pushl
add
push
add
xchg
movb
add
lods
push
add
cld
icebp
in
mov
movl
ret
add
clc
jo
mov
add
pop
xchg
pop
fwait
test
enter
imul
int
add
clc
ja
add
push
dec
lods
icebp
les
cmp
add
incl
add
add
and
icebp
mov
lods
add
mov
cmp
decl
add
push
add
jecxz
mov
add
push
sub
sub
add
jge
add
mov
xchg
jo
dec
mov
push
add
mov
fwait
pop
jg
sbb
repz
and
ljmp
add
lods
add
decl
rolb
xor
sub
add
lea
stc
bound
incl
outsl
aam
cmc
decl
mov
into
ja
punpckhbw
sbb
add
add
mov
pop
stos
rorl
lds
fisttpl
jbe
ljmp
pop
add
lcall
fcomip
xor
call
lods
mov
add
test
add
pop
imul
std
sarb
mov
sarb
pop
and
call
sbb
stos
imul
ljmp
xor
js
dec
lea
mov
add
add
xchg
push
jmp
ljmp
inc
add
jmp
add
sub
insb
push
add
jmp
mov
add
add
and
call
ljmp
and
mov
adc
aas
sbb
add
rolb
add
dec
lret
dec
pop
movsb
add
xchg
imul
movsb
add
out
iret
xchg
pop
les
jnp
push
and
add
mov
mov
push
lea
filds
sbb
add
add
jbe
add
add
mov
add
incl
dec
sub
add
mov
add
add
int
cld
rcll
dec
aam
cs
shll
push
push
or
nop
pop
xchg
sbb
mov
iret
movb
cmpsb
add
fistl
data16
enter
mov
add
mov
add
jmp
add
add
inc
add
add
mov
add
sbb
add
lcall
decl
add
mov
and
hlt
dec
mov
add
int
ljmp
sahf
mov
lahf
in
jl
xchg
jmp
add
pushl
out
xchg
inc
add
bound
jle
mov
xor
add
scas
jge
enter
ljmp
push
and
call
call
jae
jmp
ljmp
mov
stos
daa
add
lds
loop
cmp
add
notl
sbb
mov
add
dec
inc
add
scas
addb
stos
or
ret
add
add
divb
clc
xor
decl
add
dec
sub
add
push
fwait
aam
lds
inc
add
add
add
leave
push
mov
lock
push
add
cli
add
push
mov
push
adc
jmp
add
addl
mov
add
add
add
mov
decl
into
mov
inc
add
push
add
fmuls
ljmp
ljmp
cmp
xchg
and
cmp
push
xor
decl
jae
ljmp
fidivrs
das
loopne
rol
add
sub
xchg
imul
rolb
add
and
inc
add
add
enter
pushf
movb
enter
push
add
mov
and
fucomip
inc
add
xlat
adc
inc
add
ljmp
add
fdivr
xchg
cmpsl
add
cmpsb
add
das
pop
fstl
pushl
incl
in
mov
mov
add
add
add
add
cmp
add
xchg
cmp
mov
add
add
add
pushf
xor
jmp
xchg
je
jno
pushl
jmp
xor
jmp
add
mov
jb
fsubrs
add
inc
add
out
and
jmp
adc
mov
add
sbb
add
jne
ds
add
les
pop
adc
lcall
fcomi
les
push
add
fwait
mov
ret
daa
add
fadd
add
lods
cld
in
bound
call
mov
cld
fldenv
add
test
imull
add
popf
repnz
cmp
xor
cli
mov
pushl
add
bound
incl
mov
mov
mov
add
cmp
add
xchg
add
add
out
test
out
inc
add
add
call
add
decl
add
lock
add
jl
add
lcall
pop
lods
cmpsb
add
cmp
add
sub
mov
lcall
das
mov
dec
sti
dec
mov
mov
movsb
add
dec
push
add
xor
pop
dec
jecxz
push
imul
icebp
xchg
jle
push
jle
enter
jle
addb
insb
cmp
dec
push
add
add
scas
cltd
sub
mov
jmp
pushl
add
cltd
clc
dec
cli
pushf
sub
adc
jmp
add
jns
and
ljmp
outsb
imull
sub
cmp
add
ja
das
sub
call
bound
mov
lcall
and
add
add
add
mov
stc
xor
add
add
addb
lcall
addl
inc
add
rcrl
mov
inc
add
lods
jb
call
popa
add
pop
sbb
sbb
js
add
pop
add
fmuls
add
add
xchg
adc
ljmp
adc
out
adc
call
add
dec
in
or
mov
and
jmp
jle
mov
jge
sbb
int
add
cld
das
xchg
ret
pop
sbb
cmp
add
sbb
loopne
and
pushl
add
es
mov
add
fsincos
testb
rorl
jmp
add
add
add
add
add
lahf
dec
inc
add
insb
jg
add
stc
mov
jmp
jg
add
out
in
xor
mov
into
mov
add
incl
add
pushl
test
jns
mov
add
inc
add
add
lret
dec
mov
jp
out
cmp
add
pop
ja
add
sbb
add
sub
jne
mov
add
xlat
jge
add
add
cmp
jmp
add
ret
add
jle
movl
ret
mov
add
in
push
out
push
daa
add
mov
jns
dec
cmpsl
add
add
mov
aam
add
jb
cli
inc
add
lcall
or
out
in
jl
add
cmc
and
push
cmpsb
add
add
add
std
push
add
push
add
call
cmp
add
mov
add
mov
lahf
push
pusha
add
add
pushl
add
mov
add
mov
inc
add
and
dec
sub
add
add
incl
add
inc
add
add
push
add
ret
add
add
xlat
xor
call
add
sbb
addb
jae
call
ret
add
add
add
jb
cmp
push
add
pop
add
outsb
dec
pop
popf
daa
add
add
pop
xchg
add
dec
mov
faddl
lods
data16
add
xchg
pop
sub
test
jmp
add
sub
add
push
outsb
sbb
popf
out
mov
mov
add
and
decl
pop
imul
call
mov
mov
xchg
xchg
es
add
xchg
out
add
lds
sarl
push
lock
add
adc
lcall
add
or
add
add
sti
arpl
decl
mov
dec
addb
push
add
mov
call
aam
add
add
jg
add
jge
add
pushl
decl
lahf
fsts
add
add
in
cmp
xchg
test
and
push
mov
pop
add
sub
les
jnp
dec
in
mov
xchg
in
mov
mov
push
into
push
add
xor
decl
bound
lcall
lods
std
aad
add
add
xor
fadd
add
js
cmovnp
add
add
sbb
add
push
outsb
imul
stos
cmp
pop
decl
add
add
add
dec
mov
stc
test
xchg
mov
sbb
call
aam
add
add
inc
add
addl
loopne
xor
push
insl
fwait
les
loop
hlt
xchg
inc
add
out
fwait
lcall
jns
or
adc
add
adc
adc
ljmp
pop
loope
iret
push
add
into
movl
scas
xor
jnp
or
add
in
inc
add
mov
je
push
addb
add
sarl
and
pusha
add
shr
roll
enter
mov
or
add
into
addl
cmp
dec
cld
lds
sbb
mov
pop
pop
pop
add
cmp
and
add
cwtl
push
rcrb
cld
aad
add
add
add
mov
fidivl
pushl
add
jge
into
enter
add
xchg
loopne
add
xchg
ret
cmpsb
add
movsb
add
std
lcall
adc
in
dec
xchg
lods
cltd
les
rdtsc
add
data16
call
pop
mov
ja
repnz
add
into
xor
call
or
mov
add
mov
add
jle
pop
cld
fcmovbe
jns
mov
in
lods
mov
add
add
adc
pushl
mov
add
mov
mov
sbb
add
mov
cmp
jecxz
xor
clc
test
xchg
xor
add
scas
xchg
lods
mov
jno
lcall
movl
in
inc
add
add
pop
xor
call
std
dec
shlb
movsb
add
decl
aad
add
mov
add
add
mov
jb
decl
add
xor
cli
push
repz
or
pop
push
push
add
pop
dec
rolb
add
jmp
ja
add
or
jno
out
stc
div
jb
push
xchg
addb
jmp
fdivs
incl
dec
data16
cmp
push
add
ret
add
or
and
ljmp
xor
add
add
or
add
inc
add
add
ljmp
lahf
push
mov
incb
sub
add
push
add
fcoms
add
lods
push
add
mov
sahf
movsl
add
add
add
pushf
mov
fildl
add
sub
add
fucom
add
dec
push
add
or
addl
add
push
add
mov
mov
lcall
add
push
add
loop
cmp
add
jle
in
cmp
add
pushl
adc
stc
cmc
roll
add
daa
add
add
jecxz
dec
movl
add
jbe
addb
sub
pusha
add
jno
ficompl
ret
cli
arpl
fcmovne
pop
cli
dec
adc
and
dec
pop
loop
faddl
enter
ret
add
loop
sbb
add
xchg
sbb
add
mov
pop
test
or
or
mov
and
call
pop
mov
movb
add
mov
movb
and
incl
les
or
or
ffreep
add
add
decl
add
ljmp
loop
leave
aaa
nop
xchg
jne
add
nop
adc
aas
add
fsts
insb
pushf
pop
xchg
xor
call
popf
loope
or
jg
jb
lcall
std
add
insb
lock
adc
mov
adc
lcall
jns
add
add
push
add
add
mov
add
cltd
inc
add
test
inc
add
movsl
add
loop
imul
test
or
lods
jg
add
lcall
xor
dec
rorl
pop
add
mov
data16
lcall
call
incl
add
xor
jmp
add
or
mov
cmpsl
add
mov
add
sbb
call
add
jno
decl
mov
mov
add
add
add
ljmp
add
mov
xchg
aaa
jg
jecxz
push
ficomps
and
add
les
xor
jge
and
jmp
add
pushf
mov
shr
mov
add
adc
dec
in
fdivrl
icebp
jg
js
add
add
jecxz
sub
add
les
pop
data16
jmp
pop
fwait
jno
ljmp
add
add
add
mov
pop
inc
add
add
js
cmp
pop
sbb
inc
add
add
data16
mov
movb
add
add
add
std
movsb
add
mov
mov
hlt
int
mov
add
add
add
flds
dec
fistpll
jbe
add
mov
in
imul
and
out
xchg
lods
sub
add
mov
sar
ror
lahf
movsl
add
mov
call
add
mov
lahf
push
mov
add
inc
add
xor
ljmp
pushl
shl
add
xchg
rcrl
in
repz
push
fidivs
ljmp
add
lock
add
push
add
aas
lret
pop
adc
add
sub
addl
add
jl
add
mov
add
mov
push
add
bswap
sub
add
sbb
sub
xor
incl
push
movsb
add
dec
pushf
sahf
jge
and
call
add
inc
add
push
adc
xor
pushl
push
push
add
cmpsl
add
lret
sbb
repz
ret
add
add
add
mov
insb
inc
add
xlat
cmp
jp
add
add
pusha
add
inc
add
mov
add
lahf
nop
jl
add
add
and
lcall
addb
mov
aam
add
push
add
sbb
xchg
insl
fdivrs
adc
lcall
add
in
jmp
ljmp
inc
add
cwtl
insl
lods
inc
add
ljmp
jno
mov
call
add
lcall
mov
add
mov
add
push
into
dec
xchg
lods
add
ljmp
lea
jp
add
ds
dec
stc
and
jmp
imul
sahf
sar
adc
add
lret
add
push
lods
stc
inc
add
mov
mov
decl
inc
add
je
xor
push
cmp
add
cmp
lret
inc
add
dec
insb
js
out
movb
data16
add
insl
divl
or
rcrl
add
add
add
leave
mov
add
mov
add
pop
add
xlat
test
aas
xchg
lods
push
add
ds
std
dec
fnstcw
enter
cmpsb
add
add
push
add
pusha
add
in
inc
add
divl
add
xchg
push
idivb
add
sti
fldpi
mov
cmp
push
in
sbb
mov
jae
incl
mov
add
lods
insb
cmp
leave
in
aas
stos
push
add
dec
leave
repnz
mov
sub
loope
lock
or
in
or
test
cmp
mov
add
stos
mov
mov
adc
and
call
cs
add
dec
addb
add
mov
dec
mov
push
add
mov
sbb
add
mov
fcomps
ret
add
add
jo
call
aam
add
sub
sub
add
or
lcall
dec
adc
inc
add
add
add
push
xor
decl
xor
ficoms
mov
or
incl
nop
call
add
outsb
addb
iret
int3
add
call
call
xlat
imul
cmp
test
in
sbb
aam
add
test
push
imul
mov
js
jle
add
daa
add
add
add
lret
add
cli
add
pushl
int3
getsec
mov
sbb
in
push
rorb
pop
push
add
sbb
idivl
and
add
pop
mov
jg
rorb
add
sbb
aam
jns
add
add
js
adc
add
sbb
jnp
add
mov
add
stc
sbb
add
xchg
movl
lcall
es
or
fnstsw
sahf
sahf
dec
pop
jl
add
pop
lds
cli
enter
movsbl
jp
add
add
mov
repnz
lret
and
jge
add
pushl
add
scas
clc
cmpsl
add
xchg
clc
loop
pop
mov
add
in
movb
sbb
jnp
jb
incl
fidivs
add
out
cmp
dec
dec
xor
jo
incl
jmp
in
icebp
movsl
add
pop
in
push
sbb
add
jae
lcall
and
mov
jp
add
into
xchg
push
pop
jg
adc
incl
add
xchg
call
scas
hlt
mov
mov
sti
inc
add
xlat
jg
xor
call
push
add
add
aas
aas
or
sbb
lret
call
mov
add
pushl
add
addl
add
add
pop
mov
dec
pop
xchg
jno
cli
jne
add
fnsave
aaa
adc
push
or
or
fstpt
cmp
mov
add
mov
add
push
add
jmp
add
insb
pmulhuw
imul
lret
add
add
or
mov
xchg
data16
jecxz
jmp
push
add
hlt
jae
in
fiadds
add
call
cmpsl
add
test
cs
mov
or
adc
ljmp
in
int
add
daa
add
mov
and
incl
add
movl
lds
push
mov
add
xchg
insb
data16
xor
out
fsts
cmp
add
fmull
insl
ret
add
out
adc
jmp
add
in
std
cmp
stc
popa
add
mov
movl
mov
xor
pushl
inc
add
cs
jnp
stos
dec
lcall
lcall
pop
test
mov
ja
add
add
jg
or
repnz
decl
mov
pop
jnp
mov
mov
add
mov
rcrl
add
add
stc
cmp
pop
and
jmp
add
ljmp
add
outsb
cli
push
add
scas
arpl
jmp
add
inc
add
add
testl
add
scas
rolb
add
add
test
mov
jmp
jo
ljmp
add
add
leave
aas
in
in
insl
lret
movb
add
sti
scas
sbb
aas
add
enter
add
fdivrs
add
cli
fwait
dec
js
mov
lcall
add
sub
xchg
mov
pushl
add
and
pushl
add
add
lods
test
insl
clc
adc
lcall
add
mov
movl
add
stc
adc
fisubl
lds
xor
add
xchg
xchg
mov
add
fisubl
fwait
sti
sub
add
inc
add
in
or
and
jns
inc
add
int3
pop
dec
sub
repnz
cmp
add
mov
cmp
mov
jo
jle
mov
in
adc
in
mov
xchg
mov
add
dec
mov
in
push
pop
jns
push
shlb
addr16
sbb
fisttps
or
add
maskmovq
imull
mov
icebp
cmp
in
fcomip
lds
addl
cs
ret
mov
aas
inc
add
adc
pushl
add
int
icebp
test
push
add
jnp
jge
adc
call
xchg
push
push
add
jo
ds
pop
mov
inc
add
in
rorb
js
add
mov
push
cmp
add
sbb
add
adc
fwait
xor
call
pop
ret
mov
add
jmp
add
sub
add
push
lahf
insb
mov
add
faddl
mov
add
push
cmp
add
add
je
add
mov
inc
add
xchg
cld
test
add
jo
fidivrl
imul
test
or
aam
push
adc
decl
addr16
add
test
cmp
add
in
add
inc
add
in
inc
add
sbb
push
add
adc
push
add
sub
xor
adc
decl
dec
or
adc
call
loop
or
dec
xor
in
and
cmp
add
mov
or
xchg
jl
and
incl
inc
add
add
pop
test
push
jmp
addl
xchg
into
mov
outsl
mov
aad
lea
ljmp
addb
add
pop
jge
or
sbb
add
mov
inc
add
sti
mov
sti
outsl
push
add
xchg
add
call
add
in
les
and
decl
lahf
cld
xchg
sub
mov
add
add
adc
call
xchg
enter
mov
data16
add
pop
push
cmp
add
in
xor
lcall
add
add
add
fcoms
call
das
add
fildl
iret
add
lcall
xor
xchg
mov
sub
add
je
or
add
xchg
xchg
stc
fnstenv
add
outsb
movsb
add
dec
sub
jmp
jmp
lods
jl
clc
mov
negb
incl
add
call
addb
add
scas
adc
decl
lcall
sbb
add
dec
movb
xrelease
rolb
lahf
mov
ja
and
sti
out
daa
add
mov
ds
add
add
enter
mov
sub
jl
add
lcall
pop
hlt
xlat
fimull
lahf
lea
xor
pushl
add
xor
popf
mov
push
add
fwait
mov
mov
add
inc
add
add
lcall
push
xchg
cmc
xor
ljmp
mov
add
decl
add
in
jb
lcall
sets
scas
inc
add
addl
loop
push
pop
mov
fistps
cmp
cmpsb
add
add
leave
jp
add
lcall
add
lret
insl
into
inc
add
add
mov
add
add
mov
pop
cmp
add
or
das
mov
cmp
jbe
jg
add
push
pop
cs
mov
adc
jmp
add
or
outsb
mov
sub
in
jmp
add
add
jno
lcall
add
xchg
mov
repz
int3
mov
add
in
or
add
and
mov
add
add
pop
incl
add
in
cmp
test
out
test
sbb
ss
arpl
call
cs
mov
inc
add
call
cmp
rcll
add
xor
incl
add
dec
add
ljmp
or
add
nop
pop
xchg
push
add
add
xor
jmp
add
int
add
movl
mov
ljmp
stos
out
sub
decl
add
jno
jmp
or
loope
xor
inc
add
add
add
inc
add
mov
add
pop
dec
out
ljmp
pushl
add
pop
push
jmp
xchg
push
cld
int3
repz
into
sub
out
xchg
dec
fidivl
mov
mov
add
inc
add
xor
jns
xlat
adc
incl
cwtl
or
rcll
add
pushl
sbb
in
add
add
jae
decl
adc
decl
movsl
add
cmp
lret
lret
rolb
ret
imul
add
sub
outsl
rol
add
popa
add
xor
add
das
push
jp
add
inc
add
pop
add
add
xor
call
add
dec
sarl
movl
scas
sbb
mov
mov
add
add
mov
lods
dec
cmp
sub
incl
stos
aad
add
out
inc
add
add
repnz
add
fldl
loop
imul
call
add
test
rorl
loop
push
add
mov
lock
cmp
sti
icebp
fwait
mov
inc
add
mov
sbb
xchg
xor
add
sbb
mov
add
inc
add
shl
add
jg
mov
jmp
add
jnp
adc
add
xor
inc
add
cmp
push
decl
mov
sbb
jmp
es
push
lea
add
jecxz
sub
add
in
inc
add
jp
test
mov
add
cltd
imul
mov
add
loopne
sbb
add
inc
add
jns
stc
xchg
push
mov
push
mov
add
decl
xchg
xchg
inc
add
pop
sbb
jnp
add
adc
imull
scas
dec
jno
incl
add
or
jge
add
in
adc
incl
add
add
imul
cmp
add
xchg
pop
or
inc
add
into
xchg
pop
inc
add
lock
lret
pop
xor
jmp
aam
in
dec
push
add
add
xchg
iret
pusha
add
loop
sbb
test
add
pop
mov
je
imul
inc
add
dec
rcrl
sbb
add
les
adc
call
jb
ljmp
xor
push
scas
pop
inc
add
or
cmp
push
add
add
lret
addl
cltd
and
jmp
jnp
das
adc
ljmp
into
jmp
mov
call
js
push
mov
add
addl
mov
jmp
test
sahf
cmpsl
add
nop
addb
lahf
xchg
fbld
add
mov
inc
add
fidivl
jmp
add
call
cmp
dec
dec
mov
add
dec
sti
push
sti
arpl
cmp
mov
int
pushf
jb
aas
outsl
enter
add
roll
ret
add
add
test
add
pop
cld
popa
add
cltd
int
mov
inc
add
add
add
xchg
mov
add
lods
data16
das
mov
add
add
ljmp
push
addb
add
cmp
das
cmpsb
add
adc
lock
add
arpl
pushl
incl
out
jmp
popa
add
ficoms
adc
cld
jne
cmc
push
test
xchg
test
mov
test
inc
add
add
mov
add
fwait
pop
inc
add
jo
call
fsubr
dec
or
loope
xchg
add
nop
mov
lcall
movl
lcall
cld
push
mov
add
out
dec
sti
and
add
negb
lahf
dec
addl
dec
xchg
mov
jg
add
gs
adc
rcrb
xchg
mov
repz
add
sub
pop
int3
xlat
jmp
sbb
stos
les
inc
add
cli
sub
repnz
ljmp
faddl
add
call
add
add
pusha
add
addl
pop
mov
cmp
pop
fimull
lock
call
add
ljmp
mov
mov
cmpsb
add
mov
push
add
mov
bound
call
pusha
add
push
add
push
push
add
add
addl
add
add
jl
add
add
ret
add
add
negb
sub
xchg
push
add
adc
lcall
and
incl
push
or
and
dec
scas
sub
add
mov
mov
add
pop
xlat
push
push
fs
mov
nop
sbb
ret
add
cmp
add
add
mov
rolb
jno
ds
xchg
bound
pushl
add
jo
decl
rclb
add
adc
jmp
add
movsb
add
add
cltd
lret
push
jbe
add
pop
mov
add
fwait
pop
popa
add
pusha
add
loopne
movsl
add
aaa
test
lods
mov
add
mov
push
add
add
insl
cltd
arpl
in
mov
repz
adc
mov
add
add
mov
add
lret
push
add
scas
mull
add
mov
add
ljmp
mov
aas
xor
jge
imul
add
add
or
repnz
aas
aad
xor
sbb
add
loopne
mov
push
call
daa
add
enter
incl
add
xchg
fidivs
add
and
addb
faddl
hlt
jo
in
pop
sub
mov
add
cld
push
dec
pop
aad
add
mov
mov
add
mov
add
pop
movl
icebp
inc
add
aas
or
incl
add
bound
call
call
add
pushf
pop
push
add
sub
enter
cmc
fwait
addr16
out
roll
xor
mov
add
pop
imul
add
lods
inc
add
pushf
mov
mov
cmc
movsl
add
jge
addb
add
fistpl
dec
or
add
into
fistl
stc
sti
cltd
insl
mov
xchg
mov
add
lods
insl
dec
sbb
add
rcpps
call
mov
pop
mov
rorl
insl
mov
jmp
add
leave
jge
roll
sbb
add
dec
push
add
xlat
iret
add
add
and
incl
fldl
add
add
addb
into
ret
add
enter
fistps
sub
jo
jmp
add
add
dec
cmpsb
add
into
cmc
push
pop
mov
mov
sub
add
pop
mov
in
xchg
push
aas
imul
add
add
push
and
lcall
jae
decl
jnp
add
incl
mov
sbb
add
das
jecxz
add
sub
fsubs
test
or
add
ljmp
mov
gs
addl
add
or
add
jnp
add
sub
add
and
jmp
add
fisubl
hlt
clc
xor
jp
add
mov
cmc
add
decl
or
addb
hlt
xor
fsubl
push
jnp
dec
arpl
ljmp
lods
cmp
add
dec
outsb
lods
cmc
data16
push
add
mov
xchg
mov
add
pusha
add
cmp
jmp
scas
push
add
jl
xchg
fdivrl
cmpsl
add
inc
add
add
lahf
mov
adc
dec
push
pop
inc
add
mov
mov
add
addl
add
stos
mov
idivb
add
add
cmpsl
add
outsb
in
call
decl
out
adc
lcall
iret
pop
mov
ljmp
add
je
rcll
das
mov
pop
repnz
mov
add
mov
add
lret
jl
or
into
jecxz
jno
cmp
pushf
add
jmp
add
int
jbe
dec
fstl
sahf
bound
lcall
xchg
jae
pushl
add
dec
sbb
addl
mov
push
cwtl
int3
mov
add
jp
sbb
inc
add
add
add
movb
iret
sub
add
add
jmp
jp
add
into
add
jns
dec
pop
add
lcall
or
pop
cltd
push
fdivl
mov
push
stos
push
add
incl
add
or
inc
add
add
insb
test
std
outsb
add
add
xchg
inc
add
mov
add
jns
shrb
jmp
add
sahf
mov
xlat
adc
inc
add
out
cmpsb
add
jnp
jp
add
std
sbb
lret
add
add
aam
xchg
inc
add
call
test
dec
cmp
add
pop
icebp
bound
jmp
xor
call
add
mov
sub
xchg
inc
add
mov
add
sub
cmp
sbb
add
in
mov
rorb
jo
lcall
mov
and
pop
mov
add
jbe
mull
add
out
clc
xor
lcall
lds
clc
xor
pop
add
jmp
jnp
in
lret
inc
add
js
add
xchg
adc
jmp
add
xchg
push
adc
sbb
xchg
xchg
call
sub
push
popa
add
addl
add
add
ljmp
push
add
movsb
add
xor
pushl
inc
add
rcll
xchg
ljmp
jmp
push
inc
add
bound
lcall
sbb
inc
add
mov
add
movl
xor
xchg
mov
daa
add
mov
add
cmovbe
push
jle
inc
add
outsl
add
in
movl
rcl
jne
inc
add
inc
add
mov
xchg
ret
add
pop
ljmp
add
jne
adc
clc
jno
call
add
add
cli
inc
add
sub
add
stos
jae
decl
call
rolb
popf
push
movb
add
popf
inc
add
das
fimull
add
scas
pop
das
mov
add
test
xchg
xor
incl
test
adc
incl
add
add
lds
mov
data16
xchg
pusha
add
push
lret
xor
mov
in
pop
jne
fistpl
jge
mov
inc
add
addb
icebp
and
lcall
addl
ljmp
xor
add
decl
add
sub
adc
sub
jl
cmp
add
jo
jmp
add
leave
sar
sbb
mov
add
insl
in
add
sbb
add
in
lods
lds
pop
or
hlt
ficoml
or
or
add
add
lcall
addl
jp
add
adc
add
mov
add
cmp
add
mov
or
repz
in
dec
fld
add
xchg
inc
add
inc
add
arpl
ljmp
push
popa
add
jl
pushl
sbb
add
adc
ljmp
add
xor
mov
add
lods
pushf
arpl
dec
add
jns
cmp
add
popf
arpl
jmp
add
call
loopne
dec
add
call
add
add
and
inc
add
xchg
ds
rdmsr
add
mov
sub
jle
in
lods
jmp
pop
int
add
add
xlat
adc
pop
xor
add
shrl
add
mov
sbb
testl
decl
pop
leave
xor
jmp
decl
add
lcall
lods
lds
data16
push
stc
ss
imul
add
add
hlt
mov
cmp
cmp
bound
out
mov
inc
add
mov
add
add
incl
insb
repz
add
add
sbb
xor
jbe
fbstp
add
addr16
ret
add
mov
add
jecxz
lods
bound
incl
mov
or
add
arpl
incl
add
adc
call
decl
das
dec
push
add
ljmp
add
and
jmp
add
enter
rolb
jnp
add
sbb
pop
cmp
incl
add
add
cmc
xor
incl
add
mov
pushl
decl
dec
popf
or
add
lret
add
sub
add
jae
fsts
fcomi
call
cmp
aas
mov
mov
add
add
in
mov
add
mov
xchg
fcoms
repz
add
mov
add
inc
add
mov
add
out
ds
fnstsw
jg
push
or
fdivrs
add
and
inc
add
aaa
inc
add
inc
add
sbb
mov
add
push
add
add
sti
add
jmp
cltd
jp
fwait
shlb
add
jne
mov
xor
inc
add
jge
scas
data16
jbe
movl
adc
inc
add
adc
call
inc
add
add
or
add
adc
add
mov
pop
or
lea
xchg
ret
add
loop
shrl
pushf
push
int
adc
jmp
add
aam
cmp
imul
cmp
out
cmc
sub
add
ret
add
and
or
add
add
add
add
adc
inc
add
inc
add
pop
add
out
pop
sbb
add
inc
add
add
inc
add
mov
or
push
fsubl
add
push
pop
sbb
cmpsb
add
xchg
filds
scas
dec
adc
or
jp
mov
shl
xchg
sbb
stc
mov
incl
dec
popa
add
sbb
addb
mov
add
jb
call
mov
fwait
mov
decl
in
add
add
jnp
add
scas
adc
inc
add
fstl
add
insl
fmull
inc
add
mov
lret
add
rolb
add
outsb
inc
add
out
push
in
int
add
aas
stos
add
decl
sbb
insl
jmp
add
add
xor
call
add
stos
into
xchg
int3
inc
add
jno
lcall
mov
add
out
ret
add
pop
jns
add
jp
add
adc
call
push
add
mov
jbe
pop
fcompl
add
rclb
daa
add
fidivl
lock
call
inc
add
ret
add
adc
jmp
add
mov
fsubr
sbb
jo
jmp
add
pushl
add
rcrl
cmp
add
dec
mov
inc
add
data16
mov
out
jae
jmp
ss
sub
add
adc
fisubl
sub
pop
nop
movsb
add
pop
add
add
mov
add
xor
incl
add
add
out
xchg
out
loope
pop
push
add
sbb
add
inc
add
mov
adc
out
xchg
scas
dec
mov
add
ud1
add
cmp
sub
int3
mov
add
and
lcall
mov
push
add
xor
and
xor
ljmp
ja
add
add
add
sub
ljmp
stos
mov
sbb
push
fcomp
add
call
xor
stc
dec
mov
push
add
hlt
arpl
jmp
add
addl
shrb
inc
add
cltd
push
add
setne
add
dec
clc
int3
xchg
loopne
xchg
mov
or
add
sub
addb
push
pop
mov
push
add
xchg
fdivl
adc
popa
add
out
rolb
mov
aaa
stc
push
pop
js
add
add
adc
inc
add
xor
call
add
cmpsl
add
outsb
pop
push
dec
rcr
int3
and
incl
push
add
pop
cmpsb
add
pushl
jnp
mov
inc
add
sbb
add
and
inc
add
adc
cld
ret
add
lret
movsl
add
add
mov
add
scas
lods
push
roll
leave
pop
adc
ljmp
jo
incl
or
add
add
mov
aad
add
dec
test
leave
dec
cmp
add
add
jo
clc
outsl
jmp
add
add
or
push
dec
and
incl
add
sarl
xchg
shlb
push
cmc
jbe
add
mov
xor
add
push
xchg
pop
cmp
add
dec
and
ljmp
mov
rol
add
pushl
aaa
mov
sub
add
insb
or
popf
jo
jmp
adc
push
xchg
xchg
repz
bound
js
insl
add
mov
push
fisubl
mov
ljmp
xor
mov
lcall
add
inc
add
decl
inc
add
xor
jmp
das
mov
add
push
sub
add
mov
add
and
mov
ret
add
add
movb
add
js
inc
add
pop
and
ljmp
xor
jge
push
stc
in
adc
jmp
add
add
mov
aas
popf
lods
inc
add
out
fidivrs
push
jnp
add
call
sbb
xchg
jo
jmp
add
adc
cmp
out
stos
xchg
stos
sub
add
and
push
add
add
lret
std
cmp
cli
pushf
mov
add
add
add
jns
test
xchg
ret
add
pop
jo
frstor
add
add
add
rcrb
roll
push
addr16
dec
cs
add
add
stos
rolb
add
or
dec
inc
add
repz
push
add
fcmovb
add
leave
add
decl
pop
loop
insl
aas
fidivrl
pop
sbb
ds
add
popa
add
scas
test
add
int
dec
xchg
into
inc
add
les
pop
xor
call
icebp
add
ljmp
add
decl
out
xor
fwait
pop
or
or
fstpt
add
adc
call
add
bound
call
add
xchg
cmp
mov
add
mov
mov
add
pop
testb
add
mov
mov
lcall
adc
xchg
ds
xor
jmp
imul
popa
add
insb
mov
mov
add
lds
lahf
roll
ja
out
or
add
ljmp
daa
add
into
cmp
cwtl
bound
lcall
and
pushl
cmp
fcmovb
add
cwtl
int3
fistl
addb
fidivrl
and
inc
add
daa
add
add
addl
movsl
add
dec
ds
in
dec
ret
add
add
pop
xor
incl
add
push
add
fdivs
outsb
jno
push
push
or
adc
lcall
xchg
cltd
lret
lds
jg
add
inc
add
outsb
fwait
or
add
push
es
pop
mov
in
insl
and
call
addb
clc
arpl
pushl
call
sbb
sub
or
js
add
cmpsl
add
mov
inc
add
add
lcall
push
add
lods
xor
jmp
sub
pushl
jmp
pushf
push
mov
mov
repnz
mov
cmpsb
add
add
push
leave
dec
adc
lcall
add
add
add
cmp
cwtl
fisubs
or
ljmp
add
movsb
add
cmpsb
add
out
pop
sbb
decl
cld
xchg
stos
stc
lds
lret
add
add
push
cltd
imul
adc
ljmp
sub
ss
add
jg
add
wbinvd
xor
mov
data16
add
out
cmp
add
jg
movsb
add
add
nop
adc
add
sbb
sahf
dec
mov
add
xchg
xor
lcall
add
fdivl
pop
mov
sub
mov
add
add
push
add
lock
mov
add
xchg
movsb
add
cmp
imul
add
test
test
popf
mov
cmp
insl
pop
mov
add
add
adc
incl
out
cmp
add
add
ljmp
add
push
nop
jecxz
dec
movsb
add
clc
lds
cmpsl
add
mov
push
add
mov
int
add
push
add
ret
add
repnz
mov
repnz
push
sbb
adc
jmp
arpl
aas
push
add
mov
add
decl
add
test
arpl
lcall
add
stos
push
mov
pop
pop
lcall
movb
dec
push
clc
mov
stos
insl
mov
add
pushl
add
pop
or
cli
test
add
pushl
call
cld
pop
jo
decl
in
roll
inc
add
data16
sub
inc
add
push
add
jb
jp
add
add
inc
add
mov
add
or
add
add
rclb
call
jmp
add
sub
pop
or
add
add
lock
incl
mov
sub
and
incl
out
fists
pushl
shr
push
roll
add
xrelease
pushl
call
or
add
call
and
pop
jb
jmp
mov
movsl
add
dec
xchg
mov
ja
add
icebp
in
xchg
aaa
xchg
push
or
jl
aam
adc
pushl
jecxz
lds
or
movsl
add
add
add
cmp
fiaddl
fsubrs
jmp
sub
add
popf
xor
pop
add
dec
pop
int
add
add
incl
add
insb
jge
add
jns
push
mov
leave
sbb
jmp
mov
pusha
add
push
icebp
inc
add
scas
loope
xlat
pop
mov
jg
call
add
add
inc
add
add
cmp
daa
add
xchg
add
lcall
pop
ficomps
mov
lret
incl
fs
add
call
mov
sahf
or
int3
push
rolb
mov
adc
pushl
xchg
or
add
mov
jmp
stos
and
jmp
add
insb
dec
xchg
pop
pop
dec
or
inc
add
adc
add
add
out
dec
add
mov
pop
pop
add
ljmp
pmulhuw
jecxz
in
das
out
mov
lret
testb
and
ljmp
lods
mov
xor
jmp
lcall
sbb
xor
jmp
add
dec
cld
mov
dec
stos
loop
mov
jnp
pop
jg
add
call
push
mov
cmpsb
add
add
add
mov
or
and
decl
add
xor
call
add
dec
je
rcll
add
mov
add
in
sbb
inc
add
add
xchg
movsl
add
add
dec
pop
xor
jmp
add
adc
cmp
sti
cld
dec
mov
add
insb
roll
imul
lds
xchg
idivl
bound
call
and
call
add
xchg
mov
inc
add
addl
add
mov
add
adc
cmp
mov
add
add
push
rclb
pop
repz
add
mov
test
jp
sbb
imul
outsb
imul
test
cmpsl
add
jmp
add
rcl
in
mov
add
inc
add
incl
js
add
cmp
add
outsl
pushf
sti
cltd
rolb
mov
pop
test
mov
lcall
rolb
push
add
pop
or
add
mov
mov
add
xor
lcall
ficoml
push
mov
mov
jg
mov
add
mov
mov
add
xlat
imul
xchg
jne
add
incl
jmp
add
add
decl
add
cmp
in
bound
pushl
pushl
jmp
add
movb
xchg
cmc
inc
add
dec
mov
sub
add
shlb
fldt
shrl
mov
mov
repz
add
enter
loope
mov
add
sub
scas
leave
inc
add
leave
mov
out
pushf
xor
ljmp
add
or
jns
mov
sub
dec
ud0
mov
fmul
int
add
push
int3
push
add
aas
fldcw
add
add
and
in
push
pop
sti
scas
jno
decl
out
int
mov
mov
loopne
repz
cmp
cmp
add
mov
fwait
ljmp
or
jnp
add
mov
mov
push
mov
adc
incl
lcall
add
xchg
jne
add
ja
aam
bound
call
out
adc
cmp
add
add
add
call
xor
call
push
add
test
fbstp
add
mov
cmp
add
clc
scas
mov
jmp
add
mov
add
les
lods
mov
call
add
jbe
cmpsl
add
aad
addl
add
mov
add
xchg
pushl
add
add
xchg
adc
lcall
add
test
add
or
adc
daa
add
lcall
xchg
mov
jmp
pop
dec
fidivrs
add
ss
add
jmp
lahf
jno,pn
decl
jnp
add
add
decb
stc
sarl
daa
add
inc
add
fwait
cmp
add
jmp
add
nop
mov
test
add
or
insb
sbb
mov
push
dec
shrl
xor
repz
sbb
mov
call
add
push
add
cmp
jnp
add
pop
and
xor
out
decb
fwait
xchg
jmp
sti
int
add
add
pop
addb
sub
divl
sbb
mul
add
push
add
adc
decl
fidivs
xor
add
les
sub
dec
pop
ds
add
dec
nop
add
rcrb
mov
inc
add
push
das
sub
fwait
sbb
mov
and
call
add
addb
daa
add
add
data16
int3
clc
ja
jp
out
test
fistl
dec
add
arpl
decl
adc
jmp
add
dec
daa
add
dec
movl
add
ror
pop
adc
pushl
call
or
jmp
add
add
scas
inc
add
fidivl
incl
add
push
fists
mov
bound
jmp
jmp
addl
add
call
mov
add
xor
jg
add
add
stos
xchg
pusha
add
fldenv
imul
add
bound
lcall
add
and
jmp
add
sub
xlat
adc
add
out
cltd
mov
stos
cmp
ljmp
pop
jecxz
sbb
add
fstps
cmp
out
js
ror
iret
xchg
das
sub
out
jno
call
incl
add
xchg
imul
call
add
add
add
adc
fdivl
dec
mov
pop
test
mov
push
inc
add
dec
xor
pushl
adc
lcall
mov
xor
push
adc
add
mov
in
cmp
adc
call
aas
shl
add
add
sbb
add
lcall
add
add
adc
xor
pushl
add
jle
add
and
xor
pushl
jmp
add
fstl
pop
xchg
jle
add
insb
psubb
inc
add
inc
add
cmp
mov
pop
cltd
clc
fsubl
ljmp
mov
dec
das
ja
test
jbe
adc
push
sbb
add
imul
fstl
pop
into
imul
add
add
sti
xchg
adc
mov
test
add
out
push
out
out
enter
push
fsub
add
xor
inc
add
xor
pushl
lea
rcrb
push
sub
call
add
xchg
jae
ljmp
add
push
mov
add
mov
add
add
mov
dec
jmp
fwait
cmc
outsb
add
aad
xchg
cmc
pop
test
daa
add
xor
add
xor
xor
decl
add
nop
test
pusha
add
daa
add
ljmp
bound
pushl
add
push
adc
ljmp
pop
inc
add
loope
ss
test
jb
ljmp
mov
mov
dec
adc
ljmp
mov
sbb
movb
stos
sbb
add
add
decl
push
add
add
popl
add
dec
clc
jb
jmp
add
push
add
imul
test
pushl
add
scas
rolb
int3
dec
pushf
je
add
addl
add
pop
in
push
sub
jno
lcall
push
cwtl
test
outsl
adc
call
add
dec
mov
pusha
add
in
test
fiadds
add
fstl
dec
dec
addl
cmp
push
or
add
sbb
add
pop
add
in
repz
jecxz
push
in
dec
das
cmp
add
jmp
add
into
xchg
pop
sahf
jp
add
psubq
add
cmp
ljmp
mov
fcoms
lcall
xchg
sbb
sbb
xlat
popf
sarl
push
add
xchg
add
imul
push
add
pop
mov
add
add
add
jne
sub
pushl
fsts
add
rolb
inc
add
or
jecxz
jl
add
and
std
lock
add
pop
aas
pop
out
inc
add
scas
lds
test
add
outsl
shrb
add
add
in
mov
add
mov
add
xor
call
add
bound
call
mov
jp
add
mov
and
ljmp
divb
add
movb
add
pop
xchg
mov
jmp
f2xm1
add
cmp
enter
jmp
lcall
mov
add
add
call
das
das
lret
push
add
jnp
add
cmp
jmp
add
lods
and
dec
jmp
stc
sbb
add
nop
or
add
add
cmp
fildll
add
ret
loope
pop
jns
shrb
aaa
aas
data16
dec
loope
pushf
jno
ljmp
add
pushf
cmp
push
add
cmp
dec
sbb
cmp
sbb
int3
sti
cwtl
mov
mov
cmp
test
arpl
dec
xchg
add
addb
jo
ljmp
repnz
add
lcall
decl
cmp
add
fdivs
add
cmp
add
xchg
inc
add
scas
addl
fsubr
movb
add
dec
imul
lcall
add
mov
bound
cmp
int3
shrl
mov
add
xchg
test
pop
xchg
xlat
roll
or
mov
add
js
cld
jo
jmp
jnp
dec
jne
and
xchg
and
cmp
cmp
add
add
clc
and
mov
mov
mov
cld
movb
sbb
test
pop
cld
das
into
inc
add
push
addb
enter
add
lods
inc
add
fistpll
add
mov
add
add
jne
pop
dec
inc
add
xchg
ret
add
pop
loope
and
cli
into
movsl
add
es
add
jbe
mov
aas
in
mov
adc
addb
add
push
add
sub
outsl
test
or
add
add
xor
dec
push
pop
cmp
and
mov
add
mov
jnp
fdiv
dec
data16
mov
add
test
lret
add
and
cmp
test
cmp
add
cmp
add
pusha
add
dec
insl
adc
add
lcall
and
jp
add
add
mov
jl
xchg
or
ljmp
add
xchg
pop
shl
add
mov
add
add
add
insb
pcmpeqw
pop
cli
hlt
mov
push
add
mov
scas
adc
stc
insb
arpl
incl
add
add
jmp
add
int
dec
repnz
ljmp
bound
jmp
add
loope
hlt
add
jmp
pushl
ficomps
pop
cmovge
data16
cmp
pop
xchg
mov
xchg
mov
or
add
fsub
add
cmpsb
add
jmp
add
sub
repz
mov
add
movsb
add
call
lock
dec
xchg
dec
lock
call
roll
add
lods
adc
or
call
fiaddl
call
add
test
push
fbstp
incl
jmp
add
lcall
movl
test
add
add
add
out
jg
add
insb
lea
icebp
mov
pop
xchg
mov
pop
jne
inc
add
in
jae
jmp
cmp
add
hlt
aad
add
dec
pop
xor
jmp
incl
mov
cltd
mov
mov
push
add
movb
or
lock
decl
dec
addb
jmp
sarl
cmp
xchg
hlt
repz
sti
cmc
cld
bound
pushl
incl
sbb
add
pop
jo
lcall
incl
scas
test
mov
lahf
mov
pushl
pop
add
add
add
bound
jmp
sahf
push
add
push
add
mov
pop
mov
dec
movsl
add
stc
cmp
and
decl
test
and
ljmp
add
add
inc
add
inc
add
add
ss
test
add
iret
sbb
jg
fbstp
push
scas
push
outsl
and
sbb
add
mov
mov
add
inc
add
inc
add
lahf
insb
loop
jmp
add
test
js
test
decl
lds
inc
add
ljmp
incl
add
inc
add
or
lahf
mov
clc
dec
pop
jbe
mov
add
icebp
mov
dec
lret
sti
adc
mov
cld
or
add
call
adc
sbb
sbb
cmpsl
add
sbb
add
sub
add
mov
movb
add
mov
inc
add
fbld
jmp
repnz
add
add
lcall
add
add
add
int3
sbb
scas
add
incl
cmc
add
mov
push
add
mov
add
int
add
addb
add
hlt
add
add
mov
xchg
mov
sbb
add
add
pusha
add
add
call
cli
movl
movsl
add
fwait
push
addl
in
jg
aad
add
add
mov
movsl
add
add
add
neg
es
xchg
adc
add
je
add
add
sub
add
in
rcl
or
movsb
add
push
add
add
sarb
mov
das
repz
add
add
clc
fucomi
cmp
int
lret
add
and
jecxz
xchg
roll
arpl
call
add
outsl
in
pop
addr16
mov
addl
add
mov
add
jae
lcall
pop
push
add
jge
add
push
cs
jns
pop
add
negb
xchg
ds
xchg
inc
add
addb
add
mov
jae
pushl
jle
add
add
lods
stc
mov
pop
and
push
addb
pop
mov
pop
jnp
incl
ljmp
movsb
add
rep
loopne
inc
add
lds
pop
lcall
add
nop
push
mov
add
dec
hlt
adc
pushl
ljmp
in
in
mov
pop
sub
clc
rcr
mov
add
cmpsb
add
add
iret
int3
push
cld
add
add
repnz
add
lds
dec
mov
inc
add
hlt
add
push
add
out
pop
mov
push
scas
imul
stos
sbb
hlt
add
lcall
dec
mov
sub
ds
fists
lods
fisubs
add
addb
add
loop
adc
call
ss
add
xchg
pop
mov
push
add
push
dec
jnp
adc
jmp
push
mov
inc
add
jo
incl
add
mov
add
xchg
mov
sbb
add
mov
icebp
insb
lea
add
push
fisttpl
add
leave
test
popa
add
push
add
xchg
adc
dec
xchg
popf
shlb
add
push
add
add
add
repz
add
mov
push
pop
or
sub
sub
cmp
movl
js
cmp
jle
test
and
fcmovne
and
jmp
add
out
loope
sbb
add
add
ret
addl
int
xor
lcall
cmp
add
addl
jnp
or
into
movsb
add
test
arpl
ljmp
add
add
loopne
imul
mov
or
add
in
adc
incl
in
jmp
sbb
rcrb
stos
mov
or
add
add
ljmp
cmc
pop
cld
aad
add
arpl
decl
cwtl
and
fsubl
sub
add
loope
pop
xchg
aad
pop
push
sub
mov
add
xchg
jmp
out
jl
or
gs
adc
mov
add
test
mov
add
mov
sbb
add
out
xlat
xchg
jle
jne
add
add
jo
fistpl
lcall
cld
std
notl
add
cmp
add
xchg
icebp
outsl
push
jne
add
in
testl
addb
aam
add
popa
add
add
jmp
rcll
js
add
jl
push
aam
jmp
shlb
std
test
add
insb
sub
add
hlt
rolb
add
mov
sbb
xor
dec
in
movb
les
negb
sbb
add
add
in
filds
insb
data16
xchg
dec
sub
icebp
xor
push
mov
out
enter
add
push
add
mov
bound
lcall
mov
lret
add
fsts
ss
jnp
add
jge
hlt
dec
sti
shlb
add
pushl
push
add
call
adc
add
cmpsl
add
add
and
push
add
xor
jmp
decl
pop
add
xor
cwtl
xor
dec
jns
add
mov
xchg
lcall
xchg
sub
rolb
fstpl
dec
cmp
add
fisttpll
add
out
cmc
pop
mov
add
bound
incl
xchg
add
incl
add
push
jbe
or
add
add
xor
les
fstpt
add
mulb
add
pop
mov
ljmp
aad
add
je
add
add
lods
cld
add
dec
jbe
mov
roll
mov
stos
dec
test
push
add
cmp
mov
aas
pop
sbb
add
leave
pusha
add
ret
add
add
cmpsb
add
add
or
add
fs
add
sub
pop
lods
mov
add
add
lea
test
lods
dec
add
mov
aas
leave
outsb
adc
jmp
cmp
pop
add
repz
jne
lods
sahf
or
into
add
incl
roll
add
roll
addl
jmp
add
dec
pop
mov
add
cmpsb
add
sub
add
lret
in
push
jns
into
jo,pn
inc
add
push
testl
call
push
add
jl
add
xor
pop
sbb
add
cmp
add
xchg
xchg
ds
fistpll
inc
add
popa
add
mov
add
movb
mov
addb
add
xor
scas
lcall
dec
mov
jb
jmp
adc
pushl
jmp
dec
mov
add
add
push
add
and
incl
aam
add
and
incl
cmp
repnz
add
sbb
mov
jmp
add
push
add
and
decl
dec
dec
or
add
ljmp
addl
sub
jp
pop
mov
cld
nop
test
sub
leave
out
push
cmp
scas
addl
or
add
and
jns
popa
add
outsl
fcomip
cs
ss
add
adc
mov
add
inc
add
clc
sbb
and
pushl
sbb
rolb
cmpsl
add
not
adc
incl
sbb
inc
add
imul
add
add
mov
or
push
add
lret
pop
pusha
add
repz
sub
xchg
call
divl
add
cmp
add
dec
enter
add
mov
and
push
aas
add
cld
ret
addl
inc
add
imul
test
and
call
outsl
jecxz
and
incl
add
addb
add
in
xlat
xor
add
mov
add
cmp
add
clc
xchg
test
dec
mov
pusha
add
data16
mov
out
fistpl
add
add
test
add
cmp
add
jg
push
pop
out
call
add
lret
and
pop
add
ret
add
add
jnp
sahf
add
add
roll
add
movl
pop
mov
add
ljmp
add
add
cmpsl
add
incl
add
add
inc
add
mov
notl
call
xor
push
sbb
loopne
jle
stc
pop
inc
add
add
addl
add
addl
add
add
xchg
into
mov
sahf
add
xor
cmp
aad
mov
jge
add
mov
in
fstpt
sbb
mov
jae
decl
ja
repnz
aam
add
addl
add
or
arpl
incl
lds
xchg
movsb
add
ret
add
add
and
lcall
test
dec
call
cmp
sub
sbb
and
addb
int3
addl
addl
add
mov
adc
ja
fisubl
call
adc
lcall
popa
add
sub
add
add
push
aas
out
xchg
and
push
push
adc
es
mov
test
out
into
cmp
mov
add
and
out
popa
add
ret
add
add
push
and
add
mov
mov
cmp
add
add
lock
lock
mov
cld
outsl
add
decl
dec
lret
add
xchg
out
inc
add
jmp
xlat
and
jmp
decl
ret
add
aam
add
and
lcall
push
pop
jb
ljmp
in
inc
add
add
les
or
in
daa
add
jmp
add
sbb
add
adc
ljmp
imul
aas
pop
cmpsb
add
push
add
rolb
add
and
incl
dec
nop
stos
scas
inc
add
test
lcall
fldenv
cmp
add
add
sub
add
call
out
inc
add
inc
add
add
les
cmp
aas
dec
in
mov
xor
call
fwait
lods
roll
in
sbb
add
in
sbb
rclb
fcmovnu
pusha
add
lea
add
and
xchg
in
cmp
add
or
add
aam
call
iret
pop
addl
mov
add
add
lcall
lods
test
dec
or
jmp
add
mov
add
add
jns
sub
add
jge
cmpsl
add
add
or
xor
pop
das
xchg
sbb
js
add
add
mov
or
insl
out
jae
lcall
inc
add
pop
push
add
cmp
add
shlb
fistps
clc
shrb
push
add
mov
add
pop
popf
int
es
add
add
add
call
incl
add
movl
sbb
pop
mov
mov
push
mov
add
add
aas
xlat
int3
cmp
mov
addb
cs
add
sbb
push
adc
xor
std
in
push
movsl
add
jo
jns
jmp
push
add
add
dec
pop
rorl
add
daa
add
mov
add
je
add
outsb
cld
cmp
or
and
call
mov
dec
xchg
aas
cli
lock
aas
fnsave
add
and
fnstsw
pushl
lods
sub
mov
jae
jmp
in
test
mov
add
xor
add
in
pop
ljmp
push
roll
jp
mov
add
loop
pop
push
add
add
xchg
pop
push
mov
add
add
out
sbb
int3
mov
add
call
ljmp
sbb
lcall
mov
add
cli
clc
adc
jmp
add
add
jbe
add
add
ja
add
add
test
insb
loope
xor
dec
push
pop
sti
rcrb
pop
jmp
add
mov
and
dec
inc
add
add
test
insb
sahf
loop
cmp
jmp
add
lcall
loopne
adc
push
mov
mov
pop
stc
loopne
xchg
sub
add
add
outsb
push
add
mov
add
mov
jmp
add
lcall
add
rcrl
int
jb
js
add
sub
inc
add
add
mov
addl
push
add
ljmp
cltd
adc
dec
adc
lahf
in
pop
lahf
jg
push
mov
add
cwtl
push
add
jge
fisubrl
lret
mov
ret
add
mov
mov
xchg
mov
lods
mov
mov
push
repnz
push
add
roll
add
add
pop
add
add
jmp
add
add
addb
out
das
test
xor
add
loop
jno
cmp
add
push
add
ficomps
add
outsl
insb
aad
dec
in
push
add
enter
add
jmp
add
inc
add
pop
and
incl
ljmp
add
ret
add
mov
add
mov
fildl
decl
add
mov
dec
fsubrp
dec
test
inc
add
call
test
negb
inc
add
arpl
decl
xchg
cmp
jbe
iret
aas
data16
lcall
scas
mov
or
add
add
jp
movlps
call
addl
push
call
add
add
icebp
loope
mov
xchg
xor
add
add
jge
push
loop
mov
add
iret
adc
incl
jecxz
mov
decl
add
sub
sub
add
iret
sti
lret
lcall
pop
ljmp
add
inc
add
add
in
ret
add
movl
enter
bound
decl
sub
mov
ljmp
sub
add
add
ret
add
pop
inc
add
call
negl
mov
incl
add
dec
sbb
cmp
push
add
insl
je
push
add
xchg
enter
jb
pushl
test
addb
sbb
incl
pushl
add
mov
stos
mov
sbb
add
xor
push
jae
lcall
popf
add
in
les
insl
stos
and
decl
sbb
jg
imul
sti
ds
xchg
jns
mov
inc
add
jbe
sub
call
jl
add
out
test
jl
adc
push
jge
or
jmp
add
data16
pusha
add
shll
add
scas
adc
inc
add
fidivl
cmp
jns
push
sti
cmc
sub
add
and
decl
add
add
add
inc
add
add
or
xchg
cld
lahf
xor
add
shll
xchg
pop
ljmp
add
xor
jmp
add
add
call
cmp
mov
add
test
add
jnp
call
add
jbe
add
enter
and
pushl
decl
jp
mov
mov
add
sbb
pushl
cmp
add
add
loopne
xchg
lahf
ljmp
add
dec
dec
test
cmp
add
out
lods
pusha
add
push
cmpsb
add
lret
push
test
je
mov
enter
in
and
incl
inc
add
add
jno
call
cld
or
call
lahf
insb
insl
push
add
add
add
ljmp
icebp
mov
xchg
cmp
stos
cli
aaa
ret
add
cli
sub
add
push
add
add
add
les
roll
lock
push
jmp
scas
cld
mov
mov
roll
add
call
add
pop
mov
add
cltd
inc
add
inc
add
dec
test
in
lea
fisubrl
add
adc
call
mov
jle
add
push
add
mov
add
decl
push
arpl
decl
push
add
add
in
ret
add
add
mov
add
mov
add
leave
or
pop
mov
add
sub
adc
ljmp
add
add
jge
push
fistps
mov
push
adc
cld
sub
adc
add
fnstsw
bound
decl
sub
add
or
and
add
add
add
outsl
jp
xchg
push
add
call
rolb
push
push
and
lcall
repnz
lcall
add
jbe
loopne
bound
in
in
test
push
add
mov
add
inc
add
mov
fistpl
jecxz
mov
in
bound
call
lahf
dec
aad
popf
push
std
fimuls
sti
cmp
repnz
add
inc
add
sub
outsl
aaa
insb
xlat
aam
jp
dec
or
jbe
sti
mov
push
gs
adc
incl
pushl
jmp
add
mov
lret
in
idiv
data16
adc
decl
lahf
das
push
cs
cmp
movb
je
add
push
addb
into
sub
add
sbb
shrd
pop
push
test
das
mov
aam
fdivs
xor
lcall
call
scas
ljmp
shrl
cltd
ja
xchg
mov
add
cltd
cmp
imul
push
jo
incl
inc
add
adc
incl
add
mov
ret
add
fcmovnu
inc
add
jg
rclb
hlt
and
cli
les
js
push
sahf
xchg
addl
repz
add
call
add
inc
add
xor
ljmp
and
ljmp
mov
push
add
add
call
add
mov
sub
mov
add
scas
aam
add
fmul
add
mov
aas
sub
data16
add
jns
rolb
add
mov
add
repz
loope
mov
add
dec
aad
pop
push
add
xchg
out
jo
mov
mov
pusha
add
lods
push
add
call
std
mov
dec
xor
jmp
dec
add
sub
lcall
jo
jmp
add
cld
insl
mov
jb
call
xchg
jne
movsb
add
add
mov
int
into
add
dec
ret
add
incl
add
mov
roll
jl
inc
add
lcall
xchg
pcmpgtb
movb
add
lret
lods
into
or
add
push
xchg
cmp
add
add
jmp
add
fists
pushl
add
movsb
add
push
fisttpll
add
rolb
add
xchg
jle
add
add
fnstenv
decl
bound
decl
add
je
fsubs
addb
je
mov
push
mov
int
add
pushl
lcall
xchg
pop
inc
add
xchg
in
fiadds
add
push
imul
das
mov
lahf
add
lcall
outsb
add
push
and
jmp
out
sbb
mov
add
lcall
add
add
sbb
adc
push
ljmp
mov
in
mov
xor
call
pop
shll
push
add
xor
jmp
aam
add
push
and
cmpsb
add
add
insl
push
add
add
pop
mov
dec
rolb
clc
xchg
aam
insb
add
arpl
ljmp
lahf
xor
dec
push
push
add
ljmp
js
push
add
aaa
addr16
pop
aas
jg
add
aad
movl
test
bound
jmp
add
push
add
xor
call
add
add
mov
mov
and
pushl
ljmp
add
pop
shr
mov
xor
lcall
add
imul
and
adc
lahf
dec
and
scas
mov
fwait
push
mov
lds
cs
xchg
xor
decl
push
add
pop
mov
mov
test
mov
adc
jmp
cs
add
pop
addl
xlat
jmp
add
cmp
add
mov
xchg
pop
not
add
mov
xor
decl
add
add
cmpsl
add
lods
stos
popf
mov
sbb
shlb
lcall
icebp
add
add
push
ret
mov
clc
in
daa
add
mov
pop
fidivl
cmp
add
movsl
add
add
je
dec
lods
sub
test
fwait
and
inc
add
add
repnz
faddl
dec
cltd
pop
add
clc
jg
add
out
fmull
imul
cmc
sub
jl
cmp
std
jge
out
pop
adc
decl
add
pop
pop
jnp
cmp
add
pusha
add
push
add
xchg
add
jmp
lcall
shrb
inc
add
add
mov
mov
mov
dec
outsb
or
pop
mov
add
push
sbb
push
add
mov
add
mov
push
add
rcrb
jecxz
adc
push
inc
add
repnz
add
mov
push
jo
ljmp
aaa
push
add
hlt
push
add
negl
loopne
xor
add
mov
cmp
mov
cmp
add
lcall
add
add
add
add
fwait
push
add
add
insb
mov
movl
dec
clc
and
dec
sbb
push
mov
inc
add
fimull
add
or
loopne
sub
sub
add
test
movsl
add
xchg
aad
test
mov
add
mov
cs
xchg
sub
adc
incl
idivl
push
lret
mov
jp
add
mov
add
lcall
add
pop
imulb
mov
call
in
and
call
ljmp
bound
inc
add
pop
stc
bound
pushl
push
mov
mov
sub
add
iret
outsb
aaa
mov
test
add
jge
sbb
adc
call
push
mov
jge
adc
ljmp
rolb
add
mov
push
shlb
push
add
lea
addl
lock
hlt
pusha
add
xchg
hlt
lock
lahf
sti
or
add
or
dec
xlat
mov
push
cmc
sbb
xor
decl
jbe
push
cmpsb
add
xchg
test
in
cmp
add
mov
sub
cmp
popa
add
cmp
add
sub
ficomps
popa
add
dec
sbb
add
ljmp
add
leave
out
insb
mov
pop
sbb
add
out
ja
push
lahf
popa
add
popa
add
mov
daa
add
jae
ljmp
mov
add
lds
dec
repnz
jmp
push
add
stos
arpl
pushl
ljmp
push
add
testl
mov
add
and
jmp
call
fnstsw
cwtl
pop
fisttpl
rorl
add
mov
mov
add
popf
mov
mov
sahf
jb
incl
lcall
cs
add
adc
pushl
add
add
pushl
mov
inc
add
mov
clc
inc
add
sahf
jl
cmp
lds
mov
pop
pop
mov
xchg
imulb
inc
add
sbb
and
movsl
add
imul
add
fs
rolb
jl
push
fidivrl
cmpsb
add
xchg
repz
dec
lods
push
add
cmp
add
shr
adc
cmp
cmp
add
rdtsc
add
in
and
ljmp
fisttpll
int3
jmp
iret
stos
test
dec
and
pushl
dec
fcmovnb
add
pop
add
add
lahf
cmp
cmp
ds
add
stos
add
cmpsb
add
and
inc
add
cmp
add
call
push
add
loop
push
add
mov
pop
sti
roll
add
add
add
mov
pop
dec
repnz
outsl
jno
call
or
dec
fistpl
aas
sbb
add
add
cmc
push
add
xor
addb
add
jns
daa
add
xchg
repnz
pop
sbb
das
rolb
lahf
repnz
mov
mov
push
add
pusha
add
insl
xchg
data16
inc
add
jge
sahf
loop
dec
xchg
cmp
lcall
xor
sbb
cmpsl
add
rolb
add
cmp
mov
add
movb
lds
addb
dec
addl
mov
int3
cld
loopne
stc
subps
roll
stos
xchg
add
incl
push
add
outsb
popf
jne
ja
add
inc
add
add
add
add
add
dec
out
xchg
bound
pushl
bound
pushl
add
push
movl
cmc
and
cmp
add
cmp
add
pop
add
and
dec
add
pushl
xor
jmp
jl
cmp
ljmp
call
pushl
scas
or
lock
add
call
cli
dec
data16
mov
add
loopne
pop
mov
mov
jne
add
add
std
loope
out
cmp
add
and
push
jl
ja
add
rcrb
add
xor
pop
fldenv
mov
mov
add
xor
dec
pop
jno
jmp
add
daa
add
add
jge
add
rolb
add
add
arpl
lcall
cmp
sub
add
add
jg
add
fidivs
add
sbb
jmp
mov
add
add
lahf
leave
je
add
add
xor
inc
add
jne
add
incl
pop
pop
mov
les
rorb
int
add
xor
decl
aam
pusha
add
rcrb
sbb
add
mov
jbe
inc
add
sbb
mov
add
mov
add
int
add
pop
in
cmp
push
add
mov
jnp
mov
dec
inc
add
inc
add
xchg
jge
arpl
decl
and
mov
cmc
jbe
lret
xor
loop
fwait
ret
add
and
ljmp
add
sti
rclb
sbb
addl
add
enter
hlt
lds
arpl
lcall
fwait
rolb
add
pushl
incl
jbe
pop
cmp
add
add
aad
and
incl
add
add
add
adc
mov
in
xchg
and
call
add
and
mov
or
aad
aaa
push
add
add
je
add
jl
add
addb
lds
adc
push
pop
push
stos
add
rolb
jg
add
add
xor
das
dec
addl
add
aaa
pop
in
or
cld
inc
add
adc
add
lcall
add
push
ret
int
je
imul
push
and
lcall
pop
push
add
fidivs
setae
repnz
add
add
movl
add
cli
ret
add
movsb
add
sub
outsb
jb
jmp
lcall
and
in
aad
add
add
add
js,pt
imul
add
and
lcall
test
add
xchg
lahf
or
dec
sub
loopne
mov
or
add
out
xchg
add
call
cmpsl
add
add
rolb
test
add
sbb
mov
fcomps
add
add
cs
add
sub
add
idivl
push
cmp
mov
sub
stos
imul
arpl
ljmp
int3
adc
ljmp
dec
and
pop
or
mov
pop
fstl
stc
sbb
dec
and
add
cmp
fnstsw
push
add
cld
bound
ljmp
jmp
sub
add
fsub
add
cmp
xor
pushl
add
roll
jmp
add
je
add
push
pop
arpl
call
add
sahf
jmp
mov
push
int3
add
cmp
add
add
add
rolb
mov
jl
xchg
bound
lcall
xchg
push
mov
cmp
add
or
jle
or
out
addl
sbb
add
out
push
or
inc
add
mov
xchg
out
out
fwait
add
add
add
add
add
xchg
scas
xchg
stos
bound
pushl
add
icebp
push
fs
add
dec
out
add
inc
add
rcrl
in
dec
mov
fcomps
jl
aas
mov
cvtdq2ps
add
add
lcall
roll
data16
add
adc
in
scas
hlt
mov
or
add
jg
pushf
xchg
pop
test
cmc
stc
lret
add
mov
mov
sti
and
jbe
stc
stos
cmc
push
xchg
push
add
add
jmp
cmp
int3
xchg
test
mov
add
add
sbb
inc
add
add
sahf
add
add
cmpsl
add
ss
cmp
add
loopne
es
mov
fimull
mov
insl
cmp
sbb
xor
lcall
cmp
addb
and
lcall
add
add
pop
dec
xchg
add
nop
adc
jg
dec
mov
add
or
add
cli
nop
int
movb
movl
and
jns
pop
sub
pop
add
pusha
add
cli
mov
loop
pop
add
repz
arpl
inc
add
jmp
cwtl
push
add
mov
add
adc
add
dec
imul
add
popa
add
pushf
popf
pop
mov
fstps
add
test
jnp
lods
popa
add
into
push
add
mov
mov
dec
in
div
addb
push
or
add
sub
add
jnp
mov
mov
add
cs
add
add
mov
add
add
ja
lcall
push
adc
xchg
js
adc
inc
add
mov
sub
add
fstps
lods
in
frstor
xor
ljmp
sbb
add
sub
mov
xor
sbb
add
rolb
add
add
or
mov
ljmp
xor
decl
fdivp
test
add
pushf
in
mov
loope
sbb
and
cmp
inc
add
scas
sbb
mov
add
cmpsl
add
add
mov
add
pop
add
pop
int
inc
add
mov
arpl
jmp
imul
adc
sti
and
ljmp
xlat
inc
add
call
loop
sbb
add
mov
mov
push
iret
mov
xlat
cmp
xchg
daa
add
add
lods
sbb
stos
test
push
add
jecxz
cs
and
lcall
sbb
add
mov
inc
add
pop
add
add
mov
lods
adc
decl
pushl
cltd
jns
add
dec
ret
and
pushl
add
in
enter
add
cmc
iret
addl
xchg
inc
add
add
mov
test
out
rorl
int
cwtl
pop
pusha
add
push
add
push
stos
roll
sbb
incl
add
movb
pusha
add
cmc
imul
and
call
add
je
sbb
add
add
imul
cli
cmp
addb
add
jo
incl
out
je
inc
add
xchg
int3
or
pop
and
lcall
fsubrs
add
sub
loopne
xor
incl
jge
or
pushf
lds
aaa
push
add
mov
aad
dec
adc
inc
add
push
add
mov
add
mov
xlat
jecxz
mov
fistps
rorb
push
add
sti
cmp
add
xchg
jno
ljmp
addb
fists
xchg
inc
add
push
add
pop
add
ljmp
fucom
add
mov
push
ds
addb
sbb
cmp
add
pushl
add
pop
aas
fdivr
xchg
cmp
call
add
add
mov
jmp
jl
mov
inc
add
add
call
and
mov
addl
sahf
push
add
ret
add
mov
insb
lcall
add
add
xchg
movl
cld
jns
cs
dec
or
push
loop
sbb
add
aaa
mov
push
add
arpl
call
ljmp
daa
add
jnp
lods
scas
inc
add
add
jecxz,pt
push
roll
insl
push
or
dec
lret
fidivs
call
add
jo
lcall
popf
outsl
jnp
add
int
cmpsl
add
call
ljmp
mov
add
mov
sti
bnd
add
scas
stos
int3
imul
mov
mov
mov
aam
sub
roll
mov
lods
push
xchg
sub
xlat
or
add
mov
add
xor
push
sub
add
xchg
and
inc
add
add
add
add
sbb
xchg
add
jl
into
cmpsl
add
mov
add
add
inc
add
aas
jle
add
and
pushl
add
mov
add
mov
es
enter
cli
js
add
cmp
lcall
test
pop
mov
add
add
inc
add
test
loope
stos
inc
add
movsl
add
cmc
enter
fdivr
dec
mov
divb
nop
inc
add
push
pop
add
add
sbb
idiv
stc
jns
add
jle
push
xchg
pop
loope
sahf
add
nop
fdivrl
sub
dec
das
xchg
bound
incl
mov
cmc
mov
fnsave
pop
mov
test
movl
fiaddl
sbb
lcall
cli
mov
jmp
mov
push
sbb
add
add
imul
clc
test
or
imul
add
pop
and
ljmp
push
xlat
phaddsw
call
inc
add
jo
call
mov
add
and
decl
dec
sbb
add
add
rolb
add
lcall
add
add
mov
out
sbb
xchg
xchg
mov
pushl
add
nop
xchg
and
or
out
cmp
data16
dec
movb
bound
incl
call
pushl
scas
scas
sub
lcall
pop
iret
stc
test
loopne
mov
sbb
or
add
aad
call
movsb
add
add
add
inc
add
call
add
pop
pop
adc
call
add
sbb
sti
movb
in
cltd
mov
add
mov
push
add
lds
fcoms
std
leave
outsl
out
sti
jle
repnz
cld
lds
aad
add
add
add
mov
sti
pop
nop
mov
sbb
add
int3
sbb
add
sbb
add
test
sbb
add
push
xchg
cmp
cs
add
roll
pop
hlt
dec
or
add
stos
cli
stc
or
lock
adc
inc
add
xchg
pop
jle
mov
scas
test
xor
jae
ljmp
pop
pusha
add
aad
add
or
add
sub
add
xchg
sbb
fs
in
fwait
scas
lods
add
mov
xchg
fs
add
out
loop
loope
mov
push
bound
call
add
lods
cmc
and
xchg
rorb
lahf
sbb
mov
add
rolb
inc
add
shl
xchg
lods
xchg
sbb
ret
add
add
js
mov
imul
jbe
insb
rolb
je
int
adc
lcall
enter
cli
out
stos
fucomip
rcrl
adc
decl
inc
add
cli
add
mov
add
pop
push
add
mov
incl
pushl
add
fistpl
mov
jnp
lds
enter
xchg
push
enter
loop
stc
jecxz
ljmp
add
stos
jg
add
adc
pushl
lcall
jle
add
fsubrl
inc
add
inc
add
call
adc
add
mov
imul
sbb
cld
xchg
add
decl
add
in
int3
sbb
add
ss
inc
add
and
dec
ljmp
pop
xchg
out
je
fnsave
adc
out
je
bswap
mov
add
inc
add
test
cltd
inc
add
rcrb
mov
xor
mov
pushl
add
jbe
add
mov
add
movb
test
test
sub
mov
add
xor
incl
jns
add
push
xor
pushl
jmp
incl
pushl
cmp
xchg
fadds
push
decl
lcall
inc
add
in
test
shlb
ljmp
pop
mov
and
pushl
lods
popf
pop
popf
fidivrl
add
lcall
xor
decl
aam
lret
or
jnp
add
inc
add
xor
dec
out
cmp
add
jg
jl
add
leave
and
lcall
mov
lcall
addb
push
add
add
loope
ja
bound
mov
add
push
add
scas
ds
push
add
add
push
add
addl
cld
push
test
add
add
add
add
add
test
mov
pop
insl
or
dec
sub
aam
mov
ljmp
iret
in
push
add
pop
test
add
adc
add
dec
std
and
mov
dec
sub
jno
call
inc
add
dec
test
add
pushl
add
rolb
mov
mov
into
hlt
pop
mov
fnsave
push
icebp
mov
add
scas
sbb
add
cwtl
sub
add
mov
mov
add
data16
incl
add
inc
add
add
add
add
pop
xchg
stc
mov
add
gs
jg
and
push
mov
dec
ret
fildll
lret
add
mov
cmp
add
cmp
cltd
rcrl
add
jmp
adc
add
decl
xor
add
adc
jnp
adc
inc
add
mov
add
incl
push
ret
add
sbb
add
push
add
dec
inc
add
aas
in
sub
add
icebp
insb
cltd
sbb
add
cmp
iret
movl
pop
add
out
aaa
int3
inc
add
dec
mov
pop
sahf
fnstsw
stos
add
add
in
mov
add
add
fstl
test
lods
arpl
fildll
in
inc
add
ja
add
cld
cltd
jo
call
ret
add
and
mov
movsl
add
daa
add
xlat
pop
pop
cmpsl
add
stos
dec
add
xchg
inc
add
int3
jmp
pop
add
add
add
mov
add
jecxz
inc
add
inc
add
data16
arpl
ljmp
inc
add
popa
add
xchg
pop
dec
nop
repz
pop
imul
pushl
add
jge
dec
sbb
push
xchg
stc
cmpsl
add
add
lcall
dec
int
add
cmp
or
inc
add
cmp
ficomps
add
ljmp
inc
add
add
add
addb
or
add
add
std
inc
add
push
add
mov
add
add
jg
and
dec
insb
rolb
fcoms
call
call
jp
add
stos
mov
into
stos
cli
jo
inc
add
in
in
pop
add
jp
xor
decl
rorl
add
adc
ljmp
jne
cwtl
cld
pop
push
add
out
ljmp
das
call
scas
and
call
mov
pushl
add
leave
test
add
dec
xchg
xchg
jno
call
push
mov
mov
add
add
push
mov
shlb
pop
inc
add
adc
lcall
icebp
pop
aaa
jno
lcall
add
and
pop
outsl
leave
pushf
imull
pop
sbb
loop
adc
jge
incb
add
popf
inc
add
jl
into
pop
mov
add
lock
pushl
arpl
call
add
iret
jae
ljmp
add
fdivrl
add
inc
add
fldl
add
repz
push
adc
pushl
add
testl
push
xor
add
pushl
add
roll
add
xor
nop
addb
xchg
ret
sbb
add
popf
ret
add
pushl
cmp
add
add
xchg
inc
add
in
addl
add
sub
decl
lock
scas
mov
mov
shlb
add
pop
xchg
cmp
add
ret
jne
add
dec
in
inc
add
arpl
jmp
add
adc
ljmp
scas
pop
shrl
cmp
icebp
arpl
jmp
add
loop
stos
add
xchg
sub
je
add
add
insb
sbb
lcall
addb
pop
pop
jge
pop
add
add
mov
add
add
and
and
ljmp
pushf
je
cmp
and
jmp
cmp
mov
or
xchg
lea
pushf
or
push
add
cmp
jp
shrb
sbb
add
test
push
add
mov
int3
adc
mov
push
add
int
add
in
stos
push
add
jae
sti
in
lahf
ds
adc
decl
test
std
or
xor
ljmp
mov
add
and
call
fnstcw
test
and
add
dec
xchg
inc
add
add
fnsave
or
add
add
ret
add
add
fidivs
decl
jmp
add
mov
add
sub
popf
mov
add
add
lahf
pop
jl
add
or
out
enter
or
shll
add
xor
incl
add
push
xor
and
decl
enter
pop
sbb
and
fistl
addb
out
pop
out
mov
pop
mov
add
add
push
mov
xor
cli
xor
pushl
rcr
add
call
ljmp
dec
out
add
cmp
rorb
mov
jp
enter
add
cld
cmpsb
add
xor
call
adc
incl
lcall
frstor
rolb
jmp
mov
inc
add
aad
pop
xor
xchg
and
pushl
adc
dec
je
add
add
add
mov
xchg
mov
cmp
push
push
add
clc
sbb
adc
ljmp
add
cmp
adc
lcall
aaa
cltd
pop
out
lahf
xchg
lret
push
add
test
add
mov
add
sahf
and
incl
mov
call
js
add
fcoml
add
add
push
add
movsb
add
push
add
push
add
dec
push
add
or
and
lcall
lcall
ljmp
jmp
ret
add
add
add
add
inc
add
popf
inc
add
int
add
pop
lock
add
addb
dec
test
lock
add
js
mov
add
adc
push
insb
rcl
push
aad
push
stos
sbb
jns
add
add
or
add
hlt
std
add
lcall
addl
imul
add
stos
lret
xor
pushl
incl
nop
inc
add
decl
int3
addb
xchg
fcomp
mov
add
daa
add
call
decl
loope
push
bnd
or
jno
jmp
add
into
sahf
dec
cmp
std
test
push
add
mov
inc
add
fisubrl
add
fidivl
sarl
add
fucomp
or
insb
push
add
cmc
lods
lcall
mov
sub
jle
mov
xchg
jno
decl
dec
dec
add
ljmp
fcoms
and
in
ret
add
xor
decl
test
scas
jmp
adc
out
inc
add
push
add
das
lods
xor
jmp
add
aaa
out
push
add
cmp
mov
bound
dec
xchg
ja
jecxz
sub
stc
outsb
mov
add
xchg
cmc
mov
mov
mov
inc
add
pusha
add
test
sti
lret
addb
lods
out
nop
cmp
jmp
add
pop
and
mov
ljmp
mov
inc
add
insl
into
ljmp
incl
add
fsubs
lret
roll
leave
pop
ret
add
in
cltd
rclb
movsl
add
or
sti
dec
mov
lcall
lods
sbb
add
jg
xchg
into
xor
incl
xchg
xchg
xchg
popa
add
in
pop
xchg
ljmp
imul
xchg
lcall
call
push
loopne
push
bound
lcall
ret
add
sti
repnz
cmp
add
sbb
cmp
push
sbb
leave
in
xor
incl
jbe
add
rcrb
in
add
jmp
fsts
sub
call
add
push
jbe
mov
xor
incl
pushf
testb
lret
pop
rolb
xor
call
add
repnz
ret
sub
jns
pop
push
lds
enter
and
lcall
mov
cmc
popa
add
dec
push
add
jg
add
jo
decl
add
mov
in
dec
imul
sbb
add
mov
out
cmp
add
in
popf
cmp
add
add
add
loop
out
inc
add
mov
add
enter
sahf
out
inc
add
sub
mov
decl
push
cmp
or
aam
add
add
and
jp
adc
clc
sti
jge
add
lock
mov
cld
int3
xchg
lea
div
test
outsb
mov
cmp
into
sub
xor
add
ret
add
or
add
arpl
jmp
ret
repnz
add
ljmp
mov
popf
mov
rcrl
jg
sbb
add
cmp
add
add
add
jl
push
add
insl
add
fisubs
int
add
add
xor
add
jmp
push
pushl
push
cmp
call
inc
add
add
and
ja
add
mov
add
add
jb
incl
add
inc
add
and
call
mov
movsl
add
fistpll
or
lret
loopne
addl
mov
loope
pop
rclb
add
nop
sub
add
dec
movsl
add
add
imul
std
rolb
add
test
add
cmp
add
js
add
sbb
mov
add
add
inc
add
adc
call
add
add
sti
mov
repnz
scas
lahf
mov
jecxz
inc
add
fdivl
pushl
sub
pushl
add
loope,pt
out
pop
ss
aaa
jmp
call
and
push
int
movsb
add
add
add
xor
jmp
add
xchg
dec
hlt
notl
add
mov
lret
ja
add
cmp
sbb
or
add
inc
add
pushf
sahf
push
xchg
int
mov
mov
adc
jmp
pcmpeqb
lcall
mov
push
in
dec
inc
add
inc
add
mov
push
shr
insl
stos
in
pop
mov
add
add
push
jge
lock
add
mov
inc
add
pop
and
xchg
mov
stos
sub
xchg
je
xor
jmp
icebp
lret
jne
jb
jmp
rolb
add
push
add
fisubrl
add
add
jae
pushl
lcall
ret
add
add
add
addr16
add
call
ret
pop
addb
adc
jmp
add
or
mov
mov
jbe
jno
incl
call
ljmp
push
addl
aam
add
test
add
clc
cmp
add
add
jmp
stos
icebp
cltd
and
aaa
mov
incb
add
repnz
add
addb
je
xor
incl
add
pop
test
xor
pushf
jb
call
jmp
add
push
add
ret
notl
add
jne
addl
test
scas
mov
jmp
add
add
addb
push
add
out
inc
add
sbb
add
xor
lcall
add
mov
or
insb
jl
add
cwtl
cmpsb
add
jbe
lcall
add
mov
mov
fcoms
int
fidivl
ljmp
cmp
add
push
mov
iret
inc
add
pop
mov
add
xchg
ljmp
mov
dec
add
pop
arpl
incl
push
add
push
add
incl
sub
jp
add
add
push
call
add
addb
add
arpl
decl
pop
stos
mov
mov
add
xchg
mov
pop
hlt
or
add
lahf
and
jmp
outsb
cltd
dec
cltd
or
pop
dec
and
add
push
add
add
xchg
sbb
xchg
dec
loope
push
add
scas
jns
sbb
add
pmulhuw
sub
out
add
fcmovnbe
pop
movsb
add
pop
cwtl
add
outsl
dec
pusha
add
addb
jle
add
scas
mov
and
lcall
mov
inc
add
aam
cs
into
fcompl
mov
lds
jo
jmp
add
popf
cmp
out
out
jge
xchg
sbb
adc
fildl
mov
jns
test
les
popa
add
add
push
cmpsl
add
dec
dec
int3
mov
add
loope
pop
mov
lds
in
ret
add
mov
push
loope
cmpsl
add
and
jle
pop
pop
jecxz
imul
out
mov
mov
add
clc
cmp
add
inc
add
push
add
adc
loope
pop
arpl
dec
test
movsl
add
add
aaa
cmp
mov
add
mov
add
stos
pop
mov
decl
mov
sbb
icebp
pop
pop
rcrb
xchg
popa
add
cmc
inc
add
dec
test
jae
decl
cmp
push
push
fisttps
add
add
int3
push
add
imul
lds
stos
sbb
mov
adc
cmpsb
add
xchg
jg
dec
pop
cld
pusha
add
jge
sti
jl
loope
mov
add
push
pop
push
add
mov
stc
mov
push
add
int
mov
add
add
incl
add
xor
stc
paddq
rorb
mov
in
jl
ljmp
sub
add
mov
mov
add
les
in
push
add
sahf
jp
pop
cmp
loop
in
push
add
notl
ljmp
add
arpl
pushl
add
out
testb
add
outsl
cmpsl
add
add
mov
add
shl
xor
jmp
add
add
scas
movsb
add
xor
add
jp
mov
mov
stc
fisttps
add
insl
dec
mull
lds
insb
fdivrs
leave
into
cmp
add
cmp
add
and
ljmp
pushf
mov
shll
add
lcall
and
call
repz
jl
push
iret
enter
cs
lret
add
fcomi
sub
pop
add
push
add
pop
nop
ret
add
add
mov
add
cmp
cmp
add
bound
lcall
movsl
add
lods
in
add
lcall
push
loop
bound
cli
pop
add
mov
mov
push
sub
add
mov
jbe
pop
pushf
sbb
lret
inc
add
push
add
pop
pop
ficoms
inc
add
sbb
in
shll
add
in
das
or
roll
test
leave
mov
add
lock
add
loope
xchg
push
add
xchg
cli
jne
in
hlt
inc
add
sti
cmpsb
add
add
js
push
add
sbb
lds
cmp
fadd
add
add
in
bound
ljmp
addb
add
test
dec
jle
add
cmp
add
add
loop
push
add
nop
addr16
mov
add
inc
add
add
mov
and
or
lods
fcoms
jecxz
lds
adc
mov
pop
arpl
lcall
xchg
xor
decl
roll
pusha
add
add
ljmp
mov
xchg
mov
pop
add
into
sbb
cwtl
fimuls
js
add
jno
ficomps
add
add
lret
push
ljmp
add
or
sub
call
repz
jle
sub
mov
dec
dec
addb
mov
pop
pop
rolb
mov
aas
decb
sbb
add
add
stos
pop
inc
add
daa
add
push
lret
mov
and
jmp
add
add
fisubs
add
mov
cmp
loopne
mov
cmpsl
add
je
nop
test
inc
add
push
add
fdivs
add
jmp
int
dec
sbb
mov
sub
lock
js
add
lea
dec
sub
add
and
js
test
cmp
pop
div
cmp
inc
add
xchg
movl
cmp
xor
mov
test
inc
add
sbb
inc
add
mov
arpl
jg
outsb
nop
je
mov
jae
call
iret
add
lcall
hlt
pop
call
add
call
sbb
aaa
mov
in
mov
add
add
jmp
out
mov
add
add
addb
xor
ljmp
add
dec
mov
lds
movsl
add
cmp
xchg
xchg
mov
adc
jmp
call
popa
add
std
pop
or
push
pop
xchg
add
shl
add
add
inc
add
ret
daa
add
lods
aaa
xchg
mov
decl
xchg
aaa
repnz
and
xchg
adc
jmp
add
divb
add
mov
loope
add
dec
push
and
ss
stos
daa
add
sbb
add
cmp
test
add
cwtl
xchg
arpl
jmp
dec
cmp
add
addb
scas
cld
cli
sahf
xchg
mov
add
nop
mov
ds
adc
call
add
mov
add
adc
cmp
add
call
xor
incl
add
scas
inc
add
push
add
jne
std
sub
das
ss
xor
call
add
repnz
add
mov
popf
fsubp
add
icebp
test
in
add
push
add
enter
and
js
add
bound
mov
add
aas
jnp
adc
add
mov
push
pop
testl
stos
push
add
push
jo
jmp
js
popa
add
outsb
cmp
or
insb
daa
add
pop
sub
add
popf
fisttps
xor
inc
add
mov
xchg
mull
xor
call
and
pop
addb
xchg
xlat
cmc
ljmp
jmp
fwait
push
sbb
sbb
add
mov
add
add
add
test
cmp
popf
sub
add
shr
jg
pop
sub
add
decl
jb
cmp
add
aas
lret
and
lcall
movb
add
shrl
add
loope
mov
xor
inc
add
test
push
jnp
add
lret
pop
add
add
aaa
test
pop
mov
enter
cs
add
and
pushl
add
test
insl
or
add
add
jmp
add
pop
adc
incl
jmp
add
inc
add
shll
shr
dec
imulb
add
jb
call
mov
add
add
rolb
mov
mov
jns
add
and
pop
mov
add
in
repnz
xor
incl
outsb
add
lcall
add
add
inc
add
inc
add
ljmp
inc
add
xchg
inc
add
cmp
mov
stos
dec
hlt
lea
addb
add
je
add
cmp
add
add
data16
xor
fdivs
jmp
add
add
xchg
sub
add
je
and
adc
decl
add
dec
push
add
push
repz
ds
dec
cmc
mov
mov
jl
and
out
arpl
decl
icebp
aam
add
decl
xor
incl
leave
sbb
dec
daa
add
push
add
incl
add
jl
xor
jp
mov
ret
jg
inc
add
pop
lock
fwait
mov
imul
add
roll
add
enter
cmp
das
mov
into
loop
movb
add
add
add
cmp
add
loop
idivl
adc
call
add
jle
call
push
add
sbb
pushl
out
mov
xchg
sbb
or
add
dec
mov
add
dec
push
pop
sahf
mov
popa
add
push
xchg
add
pushl
jmp
repnz
add
decl
adc
decl
lcall
mov
add
push
fbld
outsb
movsl
add
fldt
aaa
popa
add
or
or
dec
leave
xor
ja
aas
xor
std
xchg
lcall
add
jecxz
out
and
cli
xchg
inc
add
jge
stos
push
in
mov
add
add
dec
loope
xor
call
inc
add
mov
dec
mov
add
or
aas
outsb
rorb
mov
add
pop
fidivrl
mov
loop
xor
xchg
xchg
imul
lds
or
icebp
sub
dec
iret
pushf
mov
adc
xor
jmp
add
addl
or
add
add
or
add
push
in
mov
jno
call
into
jmp
mov
inc
add
cli
add
pushl
inc
add
and
add
add
repnz
mov
add
shlb
int
add
add
xchg
sub
add
cmpsb
add
adc
aas
rclb
push
add
adc
jmp
cld
jne
xchg
insb
sbb
inc
add
add
loop
add
jmp
add
jae
push
cs
leave
mov
pop
jmp
add
pop
lock
add
add
repz
addl
addl
jg
add
cs
jb
call
add
jb
jmp
decl
dec
or
push
add
ljmp
add
inc
add
add
addl
adc
incl
daa
add
jp
mov
mov
lds
pop
addb
add
jecxz
or
cmc
movl
inc
add
leave
in
jae
decl
add
mov
cmc
mov
call
and
jmp
decl
aad
xchg
rcll
ss
pop
into
int3
into
gs
mov
add
jp
movsl
add
decl
mov
jp
mov
fcmovb
add
add
mov
jmp
add
jo
incl
cmp
add
add
xchg
pop
fisubs
incl
add
cmp
add
inc
add
rolb
add
mov
add
add
iret
bound
lcall
pop
fwait
and
jmp
add
push
add
movb
add
movb
push
add
sbb
cmp
add
mov
add
int
add
call
shrl
adc
sbb
jno
decl
int3
rolb
adc
call
dec
fwait
aas
addb
add
sub
test
add
add
sub
add
cld
jle
bound
sti
sbb
add
push
add
sbb
and
decl
lods
out
addb
in
rolb
push
add
mov
add
icebp
mov
add
jle
push
add
movb
add
mov
sbb
jecxz
iret
and
add
push
add
push
push
xor
cmp
daa
add
aas
pop
xchg
cmp
sar
or
loope
jle
mov
xor
cld
cltd
mov
std
jge
aad
add
mov
mov
mov
cmp
jmp
xchg
mov
add
movl
pop
push
inc
add
jbe
add
add
cmp
clc
mov
cmp
xor
jmp
sbb
add
out
sub
movsl
add
arpl
incl
call
data16
adc
add
push
lahf
in
in
movb
add
incl
add
add
inc
add
push
stos
aad
and
xchg
scas
mov
sbb
add
lret
add
add
pusha
add
add
jmp
add
call
add
in
adc
incl
push
addb
add
mov
cmp
add
ljmp
inc
add
test
sub
add
jmp
test
add
add
negb
dec
jnp
or
rol
add
pushl
add
mov
add
add
add
cmc
addb
add
sbb
rcr
cmc
fdivs
add
xor
dec
aas
insb
jb
pushl
mov
xor
jmp
add
enter
inc
add
idivb
outsb
dec
jl
add
clc
adc
sbb
movsb
add
xlat
imul
roll
push
mov
sbb
aad
test
dec
cmp
incl
insb
mov
push
add
inc
add
cs
imul
cltd
fisttpll
add
dec
cmpsb
add
mov
test
sarl
add
add
sbb
hlt
mov
adc
iret
mov
add
mov
add
mov
push
out
or
mov
jmp
sub
pusha
add
push
add
add
or
xchg
lahf
mov
stc
jo
jmp
add
add
add
and
add
add
push
add
mov
imul
add
aas
mov
lods
pop
mov
in
int3
flds
pushl
add
sub
add
insl
aas
add
inc
add
add
fsubs
mov
jbe
mov
mov
xor
call
add
add
push
add
cmpsb
add
adc
incl
jmp
add
add
in
insb
outsl
addl
mov
cs
stc
add
incl
neg
add
lahf
dec
ret
sarl
mov
sti
divb
ss
add
call
mov
roll
fisttpl
xor
cmp
fisubrs
mov
movl
add
mov
xchg
out
movsb
add
cli
mov
out
xor
call
call
decl
shll
lods
lods
addb
or
cmp
inc
add
adc
push
insl
and
pushl
add
xor
aam
addb
and
push
jle
add
xchg
addl
sahf
jmp
repnz
jmp
add
lcall
test
mov
mov
bnd
lahf
push
add
add
jnp
add
pop
loopne
mov
cmpsl
add
shrl
jge
addb
or
mov
fisubs
add
dec
in
addl
add
fsts
add
xchg
int
lock
cmp
and
sbb
add
jmp
add
lret
mov
les
sub
add
decl
jbe
add
add
fsubl
add
fcmovnb
add
cmpsb
add
ja
add
jmp
add
popf
xlat
rclb
ljmp
lahf
pop
and
ds
je
add
roll
aaa
jl
sbb
rclb
xchg
gs
stos
adc
jmp
add
aad
bound
decl
outsl
pop
add
mov
mov
mov
lret
add
add
add
popa
add
enter
add
push
mov
ljmp
lds
xor
js
jmp
filds
add
cmp
imul
incl
fists
lea
mov
iret
mul
add
fmuls
out
push
add
xchg
mov
push
add
pop
cli
xchg
jbe
sub
ljmp
sbb
add
and
pushl
add
pminub
or
js
push
push
add
and
ret
out
popf
lahf
push
add
sub
pop
lds
jp
stos
adc
lcall
repz
stc
leave
outsl
jo
fidivrl
or
add
sub
es
lcall
add
adc
xchg
adc
mov
add
jge
mov
xchg
pop
mov
sub
add
icebp
jecxz
data16
jp
addb
add
aam
les
ds
stos
add
ljmp
add
add
sub
leave
jo
incl
fbstp
call
incl
dec
cmpsb
add
lret
or
aas
sti
push
add
call
das
out
aam
lahf
push
add
fldcw
sub
sarl
imul
xchg
stc
mov
mov
lcall
dec
cmp
pop
cmp
add
cltd
jnp
and
fs
pop
add
mov
fldt
mov
and
jmp
xchg
es
add
pop
push
jno
jmp
cwtl
addl
fcom
aam
push
aam
dec
add
dec
dec
pop
mov
movsl
add
dec
jo
call
add
addl
leave
cmpsb
add
add
fidivl
iret
frndint
dec
push
add
mov
sbb
add
xchg
add
pushl
add
xchg
popf
in
roll
add
jp
cmp
shlb
lcall
add
add
into
sub
movsb
add
ficoms
ljmp
add
lods
lock
jmp
add
pop
xchg
xchg
lcall
mov
addb
push
add
add
test
stos
jns
loop
cmpsb
add
rolb
or
addl
cmp
in
xor
jmp
add
test
push
add
xor
fisubl
add
push
jge
data16
int3
adc
call
and
dec
pop
jmp
stc
repz
incl
sub
xor
inc
add
add
dec
cmc
xchg
mov
or
stos
pop
xchg
cmp
add
push
add
add
call
je
daa
add
ja
hlt
adc
mov
add
sbb
sahf
clc
mov
mov
add
cld
cmp
and
adc
lods
push
add
leave
mov
add
or
sbb
cs
add
xchg
popf
inc
add
xor
fimull
and
ljmp
sbb
ljmp
add
pop
rolb
add
daa
add
stos
dec
fwait
aaa
dec
jns
push
fcompl
push
add
add
cld
ret
push
mov
rorb
add
mov
cmpsb
add
inc
add
add
hlt
pusha
add
inc
add
leave
cmp
dec
mov
or
xchg
adc
mov
inc
add
add
pop
lret
sbb
add
sbb
mov
outsl
push
add
cmp
sub
roll
and
movsb
add
arpl
call
add
leave
jg
movb
cmp
add
ljmp
mov
cmp
shll
add
imul
lret
repz
add
imul
add
mov
pushl
fcompl
out
stc
rolb
jecxz
outsl
or
pop
jl
add
rolb
addl
incl
lock
out
mov
adc
mov
sti
mov
add
add
aas
fucom
add
add
into
enter
repnz
movsl
add
add
xchg
aaa
in
mov
stos
lcall
add
pop
xor
decl
loop
aam
les
push
js
mov
mov
pop
inc
add
hlt
mov
pop
and
incl
int
add
add
aam
add
jp
mov
jmp
add
pop
push
push
add
mov
rolb
lods
and
lcall
add
imul
sub
add
fldcw
mov
pop
add
popa
add
xor
mov
add
mov
add
call
add
into
data16
sahf
sub
add
icebp
lahf
add
jmp
add
push
add
mov
add
or
add
xor
add
add
inc
add
add
sub
pop
adc
add
je
add
mov
clc
mov
add
in
sahf
dec
movl
and
lcall
adc
add
ud2
mov
add
adc
std
add
add
dec
pop
add
inc
add
jo
call
add
sub
push
add
mov
xor
add
stc
push
sub
bound
ljmp
and
ss
jo
call
int3
iret
sub
pop
clc
xor
std
mov
xor
mov
xchg
mov
push
mov
add
popa
add
mov
ret
test
sbb
mov
ljmp
add
add
push
push
add
outsl
call
push
add
xchg
xlat
fiaddl
add
cmp
and
add
lret
data16
out
ljmp
pop
add
add
jne
addl
nop
xchg
xlat
ds
sub
add
jmp
lcall
push
fwait
mov
movl
loope
dec
leave
clc
movsl
add
fimuls
and
ja
dec
jmp
xor
add
add
jmp
add
add
std
pusha
add
and
decl
add
sub
clc
jge
into
cltd
xor
movsl
add
push
add
jae
ljmp
out
mov
add
pop
mov
fdivp
fdivl
loop
jns
mov
sbb
add
pushl
cmp
lcall
stos
mov
popf
add
inc
add
add
add
hlt
pop
or
movsl
add
adc
out
pop
mov
mov
cmp
lcall
ds
sub
pop
ret
add
and
pop
xchg
or
add
xor
and
shlb
add
mov
outsb
addl
lock
mov
jecxz
cli
divb
fwait
mov
add
cmp
add
xor
scas
rolb
add
mov
add
lock
and
call
incl
inc
add
adc
lcall
std
and
cmp
ds
push
pop
rorb
out
push
dec
cmc
pusha
add
jae
decl
xchg
adc
call
rcrb
stc
pop
sub
add
lcall
add
cwtl
add
jmp
cld
mov
add
adc
pushl
jmp
ljmp
inc
add
daa
add
int3
mov
add
jle
add
inc
add
ficompl
add
lods
lcall
inc
add
or
jno
dec
xor
ljmp
inc
add
jg
inc
add
mov
add
rolb
inc
add
mov
add
pushl
add
adc
fimull
add
call
add
dec
sbb
dec
jns
in
cmp
mov
dec
cmp
mov
test
sbb
movsl
add
add
dec
ret
add
nopl
jmp
add
daa
add
add
add
incl
add
pop
imul
in
mov
and
popa
add
sub
mov
scas
add
imul
aaa
cmpsl
add
add
add
mov
call
ljmp
add
xor
lcall
mov
add
mov
add
mov
dec
dec
in
out
add
jmp
sti
test
sti
pop
mov
xor
add
lods
negl
notb
shr
sub
add
push
stc
jmp
loopne
xor
addl
mov
pop
adc
incl
add
jae
call
fcmovnbe
sbb
ss
and
call
add
imul
mov
pop
out
mov
inc
add
sti
insl
or
jle
mov
loope
and
ljmp
add
out
mov
notl
add
xlat
icebp
push
add
popf
jge
mov
sub
or
push
and
ljmp
and
call
out
dec
xchg
lods
add
fbstp
push
mov
pop
sbb
or
lock
nop
dec
in
push
add
stos
dec
jg
sub
add
sub
inc
add
push
add
bound
jmp
add
add
add
std
fistps
testb
pushl
pop
enter
lahf
mov
inc
add
imul
jmp
add
add
out
hlt
rolb
add
push
add
ds
fcmovu
call
enter
sahf
lret
push
sahf
inc
add
xchg
add
add
and
jmp
add
not
inc
add
push
mov
add
add
dec
xor
add
cmpsl
add
mov
add
adc
decl
add
decl
push
mov
lret
jmp
xor
cmp
aad
inc
add
fcmovnb
add
push
cli
sarb
add
int
add
lcall
push
add
cltd
loopne
stc
cmpsl
add
add
decl
and
jns
les
mov
cmpsl
add
or
test
sub
sub
add
mov
add
out
xchg
loopne
adc
call
or
stc
out
lods
outsl
mov
push
cli
in
jns
add
dec
and
ljmp
add
inc
add
and
ljmp
cmp
movl
add
sbb
xor
incl
add
add
xchg
adc
call
add
mov
arpl
decl
call
rolb
adc
jge
add
dec
in
sub
enter
repz
lock
add
lahf
gs
add
outsb
cmp
cmc
adc
call
dec
imul
mov
add
in
jno
lcall
jle
pop
sbb
addl
xor
pushl
xor
adc
dec
lods
jae
ljmp
in
les
adc
incl
pop
push
mov
xchg
fcmovnu
std
mov
call
adc
incl
mov
out
lods
pop
nop
fwait
popa
add
arpl
ljmp
push
ret
add
add
adc
add
incl
add
movsl
add
inc
add
sbb
add
mov
add
xchg
mov
pop
shll
outsb
nop
loope
addl
sub
lcall
jmp
notb
testl
and
stos
nop
mov
jae
pushl
nop
clc
push
add
lea
add
fisttps
outsb
jecxz
add
call
addb
sbb
add
sub
dec
or
xchg
adc
mov
incl
add
jmp
add
aam
add
inc
add
aaa
les
roll
or
add
add
incl
xor
fistl
incl
mov
ss
push
nop
dec
inc
add
add
push
pshufw
pop
test
xchg
dec
movl
addl
and
call
xchg
sub
decl
push
add
add
sbb
add
add
inc
add
pop
jl
add
dec
mov
add
pop
push
pop
movb
inc
add
add
lcall
push
add
sahf
push
add
jmp
push
fldt
aam
add
inc
add
sub
add
dec
dec
enter
ljmp
add
xor
ljmp
insl
sub
movd
xchg
aam
xchg
stos
or
sub
add
add
inc
add
cmove
pop
dec
addb
call
cmp
add
or
call
pop
pop
jnp
rol
add
dec
jecxz
inc
add
push
add
sbb
dec
push
insl
add
jnp
lahf
shrl
jmp
jmp
xchg
adc
test
movsl
add
add
add
pop
iret
xchg
insl
pop
or
adc
call
add
add
jge
ret
cmc
imul
rcrl
push
add
xor
push
mov
add
sub
movl
fucomip
jo
lcall
scas
pusha
add
mov
je
xchg
cmp
fisubrl
decl
fnsave
ljmp
add
xchg
addl
dec
mov
adc
jmp
add
add
sahf
popf
in
sub
jne
mov
scas
pop
aam
les
fsubr
fiaddl
or
jae
jmp
add
mov
pushl
mov
add
or
add
mov
enter
aas
loope
push
js
into
mov
add
daa
add
popa
add
mov
add
add
js
add
mov
inc
add
lret
faddl
incl
jmp
decl
cmpsb
add
ss
add
add
jmp
ljmp
inc
add
sub
add
inc
add
xchg
xchg
shll
mov
lds
fsubrs
stc
ret
add
add
and
call
ljmp
add
loop
iret
int3
inc
add
add
icebp
bound
call
lds
popa
add
sub
jmp
aad
xor
mov
ljmp
add
ss
push
iret
loop
aam
push
pop
fdivrs
add
add
jo
lcall
add
xlat
jmp
adc
incl
decl
add
add
dec
xchg
hlt
hlt
jns
jle
movl
and
cmp
jge
push
add
jge,pn
add
xchg
mov
int3
mov
add
mov
add
outsl
adc
add
and
mov
mov
push
cli
in
dec
and
call
adc
ljmp
add
fnstcw
push
xchg
mov
add
add
jno
lcall
std
pusha
add
inc
add
add
js
push
add
or
add
sbb
stos
sbb
pop
stos
mov
mov
add
in
roll
fistpll
popa
add
insl
adc
gs
sub
pushl
adc
incl
enter
sub
sahf
jmp
add
rolb
or
insl
fwait
cmpsb
add
jmp
add
lret
in
pop
rolb
add
sbb
add
lcall
decl
inc
add
add
jo
jmp
add
adc
lcall
xchg
push
mov
pushl
jmp
add
push
add
jno
call
adc
call
incl
add
inc
add
xlat
call
test
adc
sub
jae
jmp
add
lcall
add
lcall
repz
and
decl
add
add
add
lods
push
pop
lock
dec
inc
add
decl
mov
add
outsl
popa
add
jp
pop
push
in
pushf
in
addb
fistpll
or
add
loope
mov
stos
mov
add
jb
incl
lods
call
add
mov
lahf
movb
repz
xor
add
mov
std
xor
pushl
fcoml
add
jb
ljmp
inc
add
push
add
lods
mov
jecxz
out
ja
cmp
pusha
add
rcll
decl
cwtl
movsl
add
mov
jl
add
nop
into
outsl
jmp
add
add
dec
dec
add
call
incl
add
mov
arpl
cmp
in
add
call
jp
add
in
push
int3
mov
and
in
data16
fwait
clc
adc
aas
sti
inc
add
jmp
add
cmpsl
add
sub
add
add
fstpl
loopne
repz
movsb
add
add
jne
stos
addl
add
pop
xlat
sbb
pushl
jmp
add
ficoms
int
add
stos
stos
jae
jmp
add
mov
decl
mov
addr16
dec
aaa
imul
repnz
pushl
pop
js
xchg
pushf
out
and
incl
xchg
pop
test
scas
sbb
add
adc
push
add
int
mov
stos
pop
rolb
push
add
push
mov
add
sub
pushl
add
mov
aam
hlt
scas
push
add
fucomp
test
addl
out
test
mov
mov
cmovne
or
add
add
int
pop
aad
cmp
outsb
mov
insb
dec
mov
add
dec
or
cwtl
jl
ret
add
add
out
lods
ljmp
cld
cmp
lds
lret
mov
lock
in
fbstp
add
incl
push
in
mov
xchg
popf
dec
fdivs
xchg
xor
in
addb
and
pushl
add
addl
insl
addb
mov
incl
jmp
add
jbe
add
mov
cmp
dec
fsubrl
lea
call
cmp
addb
cmp
int3
aaa
xor
add
jae
fisubs
add
mov
call
add
insl
imul
add
pushl
jmp
cwtl
stc
sti
cs
addl
cmp
lods
pop
aaa
inc
add
add
add
frstor
call
add
or
pop
pop
outsb
cmp
xor
jle
inc
add
jns
add
adc
ljmp
sub
add
jmp
adc
pushl
xor
add
adc
cwtl
mov
test
int
mov
add
stos
lcall
xor
call
test
add
mov
pushl
cmp
or
fs
push
notrack
lret
pop
mov
decl
roll
add
ret
scas
popf
jmp
jmp
add
sub
ret
cmp
idivb
cmp
cmp
add
decl
incb
decl
mov
add
addb
shlb
dec
dec
cmp
xor
incl
negb
aad
add
enter
mov
aas
out
arpl
pushl
fldcw
jnp
add
add
bound
lcall
add
shr
add
cmp
add
rclb
add
enter
add
inc
add
add
mov
pushl
call
add
adc
rolb
add
mov
mov
aaa
into
xor
std
js
mov
lret
outsb
mov
add
fstps
ds
mov
or
xchg
push
add
lock
adc
push
call
push
and
call
mov
bound
call
mov
and
lcall
mov
movl
add
call
outsb
rcrb
pop
jge
lcall
pop
push
adc
cmp
xor
or
dec
push
decl
mov
jo
call
add
aas
xchg
inc
add
add
pop
inc
add
add
mov
add
add
mov
iret
dec
lcall
jp
jmp
add
adc
call
stc
mov
cs
hlt
cmp
int
or
jge
cmp
add
mov
rolb
add
call
decl
add
add
sub
or
pushf
lahf
cmp
push
xor
incl
incl
add
mov
nop
stc
or
out
jnp
add
add
cmpsb
add
add
add
cmpsl
add
jle
add
cmp
call
add
out
cld
pusha
add
dec
fsubs
xor
call
mov
and
jmp
lcall
fst
jo
push
jl
pop
push
xchg
js
push
popa
add
cmp
dec
imul
sbb
add
fstpt
or
mov
mov
repnz
data16
jns
mov
push
add
repz
lds
daa
add
sub
inc
add
shr
or
pop
movb
add
jge
data16
repz
xchg
pop
cmpsl
add
pushl
or
add
arpl
incl
roll
dec
dec
insb
aas
out
mov
jns
jnp
add
clc
lcall
pop
int3
jl
or
icebp
std
mov
sbb
clc
pop
addl
cmp
test
add
sbb
rcll
ljmp
loope
mov
imul
add
fsubl
add
mov
mov
mov
add
add
jp
int3
cs
ljmp
gs
and
mov
mov
roll
loopne
in
addb
mov
lods
call
pushl
lcall
push
je
jnp
outsl
shrb
data16
cmp
dec
test
or
ss
outsb
xchg
fwait
mov
add
inc
add
lods
outsb
push
rorb
add
repnz
pop
push
jge
into
roll
xlat
inc
add
stc
rolb
faddl
add
outsb
mov
in
js
add
jle
xor
jp
in
inc
add
push
xchg
iret
jg
or
add
jmp
inc
add
pop
cwtl
pop
add
in
leave
aaa
lret
ljmp
add
outsb
call
add
or
add
lret
fwait
add
lcall
jne
stc
or
pop
ds
popa
add
mov
add
jmp
push
or
add
add
aad
push
addr16
and
mov
add
out
daa
add
pop
pushf
xchg
mov
sbb
fnsave
aas
shl
hlt
lret
xrelease
xchg
push
xchg
inc
add
jecxz
pop
pusha
add
or
add
add
enter
add
pushf
addl
add
cltd
cld
out
fwait
adc
ljmp
add
add
add
and
lcall
inc
add
fwait
mov
add
addb
add
fistpl
ret
add
call
inc
add
xor
incl
decl
aam
outsb
dec
mov
cli
rolb
add
ss
pop
xor
lcall
je
std
or
jmp
shll
ljmp
add
inc
add
cs
lds
add
inc
add
push
or
add
mov
xor
add
pusha
add
dec
mov
jno
decl
mov
addb
add
mov
add
negb
push
jne
ja
popf
pop
into
jg
dec
hlt
stc
pop
ss
pushl
aam
and
sti
sbb
enter
jg
and
adc
ljmp
lods
or
ret
stos
mov
in
or
add
sbb
fidivs
add
lds
das
ss
lods
mov
add
roll
int
fwait
mov
add
add
fildl
incl
add
fsubp
add
add
mov
mov
test
inc
add
cmp
pop
loop
dec
jmp
dec
mov
in
test
or
incl
add
mov
dec
repnz
stc
push
add
jle
int
fisubrs
js
or
add
add
pushl
decl
add
cmp
add
outsb
or
test
test
add
add
sub
lahf
xchg
push
loope
mov
xchg
iret
in
loope
cltd
lock
scas
xor
clc
cld
pop
cmpsb
add
adc
inc
add
cli
loop
inc
add
fldt
add
add
call
and
pushl
add
fcompl
pop
add
lret
out
push
add
movl
add
add
loope
int3
pop
pushf
push
add
popa
add
inc
add
push
add
clc
enter
add
int
add
aad
or
push
enter
add
into
addb
jne
aaa
push
add
mov
cli
jecxz,pn
stos
mov
decl
xor
push
scas
mov
repz
add
dec
mov
and
lcall
fbstp
das
ja
add
adc
lahf
push
repnz
enter
inc
add
push
pop
sti
or
add
pop
xchg
add
add
sbb
mov
add
test
data16
xchg
push
add
inc
add
add
mov
add
xor
jecxz
test
add
add
add
out
add
ljmp
mov
add
sbb
pushf
and
pushl
mov
add
pushl
push
push
add
xchg
ret
add
dec
iret
xchg
dec
push
add
ljmp
pushl
decl
ja
ss
dec
inc
add
add
ljmp
add
addl
lea
jl
ljmp
lcall
add
in
cltd
mov
or
in
sub
data16
lcall
sbb
push
add
sub
push
add
lret
addl
add
lds
jb
call
out
pop
add
dec
xor
jle
mov
inc
add
popf
fidivrs
add
call
add
cwtl
cmc
dec
inc
add
pop
dec
test
popa
add
mov
or
add
das
movsl
add
and
mov
call
lods
push
add
jp
jbe
push
push
dec
and
incl
add
pop
sbb
sbb
mov
xor
jmp
add
in
or
xor
popf
adc
jmp
or
add
inc
add
inc
add
push
nop
cmp
xchg
add
out
test
mov
inc
add
add
xor
add
mov
add
add
movsl
add
mov
testl
lds
insl
arpl
sti
jl
or
pusha
add
pop
push
scas
cmc
das
cld
jmp
add
outsl
in
mov
incl
movsl
add
repnz
push
das
inc
add
in
adc
pushl
je
add
or
clc
xchg
movb
lods
pop
test
hlt
push
add
repz
cmc
push
add
cmp
fistl
and
ljmp
add
test
mov
loopne
rolb
cmp
cwtl
mov
out
insb
dec
adc
movb
xor
pushl
push
mov
lcall
mov
add
call
inc
add
leave
dec
fisubl
les
iret
int
add
add
addl
es
mov
in
insb
popf
jo
dec
aad
cmp
adc
decl
sbb
ljmp
sbb
pop
push
fldenv
xchg
dec
in
mov
sub
addl
add
jmp
and
lcall
lcall
add
add
jmp
aad
inc
add
test
enter
add
dec
nop
lods
je
add
dec
lret
fisubrl
aaa
add
ljmp
aad
add
inc
add
fbstp
outsl
or
mov
add
push
add
cmp
add
int
loopne
fwait
int3
mov
or
add
push
daa
add
jmp
std
add
incl
scas
stos
jl
pop
negb
movl
add
sbb
movb
into
mov
sub
test
stos
ljmp
add
xor
incl
decl
pusha
add
sbb
add
int
test
xchg
sar
testb
and
cmp
add
and
ljmp
mov
pop
xchg
inc
add
xadd
xor
lcall
ficoml
add
in
push
add
add
jmp
add
aas
call
rcr
add
jmp
add
pop
inc
add
jg
add
addb
test
and
jmp
aaa
and
cmp
jmp
pushl
add
push
push
adc
add
jge
add
insb
test
or
rcrl
push
imul
add
mov
cwtl
xor
add
add
jmp
hlt
push
add
sarl
or
pop
sbb
add
loope
nop
xor
jmp
adc
call
xchg
add
call
sub
xlat
pop
sti
jle
mov
lea
add
xchg
mov
bsf
popf
cmp
jnp
or
add
fstpt
outsl
jne
push
sbb
adc
add
dec
xor
sub
add
mov
icebp
test
push
add
leave
add
incl
mov
adc
call
dec
stos
adc
jmp
pop
sbb
dec
add
jecxz
outsb
lcall
cmc
pop
popf
jmp
cmp
test
test
jb
fsubrs
add
add
out
aas
fsts
in
test
mov
out
aam
or
add
in
sub
lods
je
ss
add
incl
add
inc
add
jle
cwtl
cmp
add
shrl
add
add
lret
les
dec
push
push
add
xchg
stc
jl
add
add
fildl
or
jo
call
pop
xchg
add
cli
pop
cmp
add
cwtl
mov
mov
pop
test
sbb
test
addr16
sbb
inc
add
add
jmp
jae
jns
outsl
xor
aad
rcrl
mov
jb
call
add
jmp
pop
jno
cmp
lcall
clc
mov
movsl
add
add
add
mov
fsts
das
in
test
adc
pushl
stc
aas
lods
mov
dec
adc
push
test
push
cmpsl
add
cmp
in
mov
aas
sub
enter
jne
add
ljmp
jmp
xchg
jne
xchg
pop
pop
lret
add
sti
test
xor
bound
lcall
xchg
pop
ljmp
cmp
iret
int
adc
sbb
add
roll
popf
mov
cwtl
std
adc
incl
ljmp
cmp
inc
add
xchg
clc
lahf
xor
data16
add
xchg
pop
add
addb
add
ljmp
dec
out
mov
ljmp
enter
add
add
mov
fistpll
pop
cltd
adc
jmp
jno
jmp
dec
xor
mov
outsb
lcall
add
add
add
add
stos
mov
mov
sbb
pushl
decl
outsl
imull
movsb
add
mov
add
sti
bound
decl
test
ja
add
addl
addb
add
repnz
incl
int3
and
incl
imul
xchg
lock
push
add
aas
call
cmpsl
add
mov
add
ljmp
xchg
leave
incb
jl
mov
add
mov
divb
mov
add
ljmp
lods
cmpsb
add
add
add
lods
sub
add
add
or
add
add
ja
hlt
xchg
adc
ljmp
push
add
clc
or
add
hlt
jo
jmp
add
or
add
mov
xor
dec
dec
scas
adc
call
add
pusha
add
xor
add
cwtl
std
cmpsb
add
xor
std
adc
call
loopne
aaa
pop
in
push
hlt
cli
sti
test
jnp
vpmacsdqh
mov
add
neg
mov
nop
push
add
jmp
add
fdivr
scas
sbb
js
fidivrs
lret
addb
add
inc
add
lods
out
sarb
dec
adc
pushl
mov
pop
and
add
fisubl
mov
repnz
loope
xor
mov
ljmp
inc
add
add
sub
mov
add
iret
sbb
test
pause
out
mov
je
add
add
hlt
xchg
xchg
dec
lret
add
call
enter
mov
add
cltd
rolb
add
int3
mov
add
add
mov
ljmp
cmp
addb
mov
add
sbb
dec
cmp
rolb
add
sub
je
push
add
jbe
cmp
add
jecxz
outsb
xchg
ja
insb
je
jg
and
decl
pop
rolb
loopne
cltd
movb
add
add
mov
popa
add
enter
mov
mov
or
pushl
or
add
aam
add
fists
cmp
cmp
mov
jae
ljmp
stos
pop
lcall
add
stos
or
pop
lea
jbe
add
add
rcl
imul
mov
add
mov
call
imul
movl
fldenv
pushl
pushl
adc
incl
imul
add
cli
xor
sahf
and
leave
lcall
bound
jmp
fisttps
adc
push
add
lcall
call
dec
and
lcall
push
das
sub
dec
aas
nop
mov
jge
add
movsl
add
fcomps
push
arpl
pushl
fmull
lret
push
add
xchg
pop
mov
ljmp
in
loopne
add
inc
add
add
add
std
out
cmp
mov
int3
roll
mov
jl
add
xchg
xchg
enter
outsb
std
jle
and
call
inc
add
add
roll
add
add
addr16
add
add
clc
cli
repnz
fnstenv
add
xchg
popf
sahf
rolb
add
aam
add
adc
decl
ljmp
mov
add
dec
mov
add
fdivl
incl
pushl
std
jo
mov
xor
scas
je
dec
adc
call
addl
outsb
push
add
add
dec
lock
mov
and
pop
mov
jb
incl
add
sbb
push
neg
mov
add
inc
add
add
add
add
add
call
ds
xor
decl
std
pop
add
add
add
or
add
negb
fbld
incl
add
movb
xchg
ror
push
ds
into
ret
add
ljmp
imul
iret
popa
add
scas
test
leave
addb
jl
add
push
jbe
rolb
adc
add
jle
add
mov
decl
add
add
decl
rol
add
loope
inc
add
arpl
call
xchg
or
lahf
mov
or
adc
push
imul
pop
mov
add
addb
add
cld
pop
movsb
add
lcall
add
pop
fiadds
mov
mov
inc
add
stc
add
call
jmp
add
mov
repz
lcall
add
mov
add
dec
inc
add
mov
pop
pop
shll
call
add
cmp
ja
and
pushl
add
addb
out
loop
mov
dec
xor
decl
jnp
add
sbb
add
stos
push
add
add
dec
aam
out
clc
jnp
lea
add
or
incl
add
cli
addb
add
sti
dec
xlat
loope
jecxz
popf
xor
fdivl
add
add
ljmp
add
ds
or
add
int
push
add
pop
dec
movl
push
add
incl
decl
pop
jge
add
arpl
ljmp
mov
mov
fidivrl
sbb
adc
jmp
call
xchg
jle
add
mov
aam
and
push
dec
movl
into
js
jmp
sub
add
add
arpl
jge
add
hlt
clc
lret
mov
push
les
addl
les
fmuls
lods
ret
add
jecxz
cmc
inc
add
roll
add
repz
ja
push
add
and
in
in
repz
add
sti
scas
imull
jo
ljmp
imul
add
out
mov
mov
int
mov
dec
pop
xor
mov
adc
decl
lea
xchg
aas
shlb
jl
addb
inc
add
scas
sbb
add
inc
add
xchg
mov
testl
mov
in
mov
jns
xchg
data16
addr16
dec
nop
cwtl
xor
add
fcomps
arpl
jmp
add
lahf
pop
movl
addb
push
lret
cmp
bound
decl
ficompl
fadd
add
add
and
ljmp
add
ljmp
in
sub
lods
std
cs
mov
test
inc
add
add
and
pushl
lods
mov
addb
add
add
inc
add
inc
add
add
lcall
mov
nop
les
cmc
push
xchg
mov
xor
jmp
add
add
jle
jno
jmp
lds
sti
shr
xor
dec
add
loop
or
add
sub
jl
ss
sbb
pop
addb
xchg
int
add
add
sub
add
lcall
call
out
add
and
jmp
std
lea
jae
ljmp
add
dec
sbb
shll
sub
add
add
push
add
fsubs
in
stc
outsb
call
sbb
imul
std
push
add
into
xchg
into
dec
adc
ljmp
add
out
sbb
jno
call
lock
add
add
push
add
rcrb
add
out
test
and
incl
add
test
sbb
xchg
fbld
xor
call
aas
jl
xor
pushl
add
dec
fnstenv
sbb
add
lods
sbb
rorl
sbb
sbb
add
add
dec
mov
aas
jle
adc
lcall
sbb
inc
add
inc
add
imul
insb
cmp
incl
mov
mov
inc
add
jp
jnp
add
add
cmc
xor
lcall
add
in
push
mov
cld
into
js
mov
sbb
je
add
xlat
jbe
lahf
movl
hlt
int
cmp
idivb
movsb
add
ss
jmp
add
push
add
movsb
add
imul
inc
add
lods
test
mov
int3
or
movl
mov
loop
jecxz
rorl
pusha
add
ja
add
jmp
add
mov
stos
loope
sub
dec
test
cld
pop
movb
ja
sbb
cli
pop
repnz
add
and
decl
xlat
lods
jnp
add
add
in
jl
inc
add
in
xlat
outsb
add
call
mov
add
pushf
jne
jp
mov
add
sbb
xchg
pusha
add
add
call
add
mov
aas
push
add
das
xchg
aaa
xchg
push
sub
add
pop
add
jmp
add
mov
scas
mov
popa
add
pop
mov
mov
jmp
add
fisubrl
add
repnz
add
add
mov
add
add
in
movb
add
dec
lock
xchg
addl
cmc
lea
push
sbb
add
pop
jns
or
movl
call
cli
inc
add
dec
push
add
popa
add
out
lret
jle
xor
incl
add
jmp
add
push
adc
cmp
push
mov
int
int3
and
incl
mull
incl
dec
push
mov
add
out
jl
sub
popf
mov
and
into
hlt
push
add
add
das
push
xor
ljmp
daa
add
lcall
gs
add
add
shll
add
mov
mov
test
daa
add
add
movb
add
sub
add
add
ja
add
cmp
mov
add
inc
add
jmp
movsb
add
out
daa
add
add
call
inc
add
leave
add
dec
mov
add
add
pushl
add
test
xchg
jmp
mov
add
call
jmp
lods
dec
cmp
pop
mov
notb
lods
adc
push
add
push
mov
add
cmpsb
add
mov
test
scas
inc
add
push
push
mov
push
add
fcomi
movl
outsb
movsl
add
add
cmp
xchg
in
or
jns
add
data16
jmp
loopne
stos
add
add
add
addl
popa
add
montmul
cmpsb
add
add
jg
fmuls
xchg
inc
add
jecxz
pop
addb
xlat
inc
add
sub
add
add
add
ret
add
add
in
add
decl
add
jmp
jmp
add
add
jl
ljmp
add
inc
add
mov
call
add
pop
and
movl
dec
jge
add
outsb
addl
cs
out
mov
add
mov
add
decb
push
mov
add
xchg
pop
sub
rolb
add
out
adc
pushl
add
cmp
rolb
stos
push
and
inc
add
or
cmp
aam
in
sbb
mov
shll
add
push
mov
pushl
add
push
jne
add
push
enter
cmp
jmp
add
inc
add
add
cmpsb
add
pop
add
add
cmp
call
outsl
iret
test
dec
call
imul
add
xchg
fsubrl
xchg
cmpsl
add
ljmp
or
in
sbb
xor
push
xchg
adc
ljmp
pusha
add
jle
adc
incl
int
fdivl
dec
sub
dec
aaa
push
add
add
ljmp
inc
add
add
addl
add
inc
add
das
out
arpl
incl
ljmp
out
adc
aas
lds
stc
test
bound
incl
shlb
add
jae
jmp
add
mov
add
out
sub
movb
cmpsl
add
inc
add
lea
movsl
add
mov
filds
push
xor
jp
cmc
in
fcomp
xlat
sub
add
add
add
insb
scas
cs
add
xchg
pop
lcall
add
jmp
add
add
add
lock
addb
daa
add
ss
mov
add
decl
imul
add
pop
sub
call
add
pop
mov
add
xchg
lock
add
lcall
add
fwait
js
add
add
stos
call
aaa
mov
jmp
inc
add
add
cmp
enter
push
test
adc
incl
add
pop
repz
xor
add
add
add
inc
add
push
add
mov
add
enter
push
fdivr
fisttpll
pop
and
incl
test
add
or
psubsb
mov
xlat
rcrl
inc
add
sbb
jl
dec
pushf
cmpsb
add
mov
add
mov
fisttpll
add
add
cmp
rolb
sbb
jl
add
repnz
xchg
inc
add
je
add
push
pop
push
add
bound
jmp
cmovp
fld
add
add
sub
fdivrl
add
add
and
cmp
decl
add
lret
add
stc
mov
add
mov
jmp
add
sbb
pop
add
rorl
add
lea
dec
stos
inc
add
add
call
add
xchg
pop
lods
loop
xor
ljmp
loopne
xchg
jnp
add
push
add
dec
leave
in
movb
mov
fadds
add
add
sub
add
adc
add
xchg
stos
mov
fnstsw
test
dec
hlt
pop
clc
jge
dec
mov
addb
sahf
pop
addr16
add
add
add
add
inc
add
adc
jmp
mov
add
dec
jp
lret
pop
aas
mov
xchg
loop
pop
mov
add
sbb
add
inc
add
int3
add
lret
jnp
fidivrl
fnstcw
add
add
cmp
add
call
inc
add
adc
pushl
add
sub
add
inc
add
jge
add
shlb
add
sub
add
jecxz
or
jmp
push
lret
sub
mov
push
sarb
in
aaa
push
mov
add
add
dec
sbb
mov
lcall
cwtl
lods
ss
imul
pop
ja
imul
pop
jo
lcall
fwait
insl
les
inc
add
rolb
imul
add
rcr
xchg
push
cmp
mov
addb
add
add
mov
addr16
stc
mov
test
pop
out
inc
add
incl
jg
mov
call
test
dec
test
pusha
add
sbb
insb
xchg
and
pushl
push
push
xor
decl
out
adc
jmp
add
mov
pop
pop
adc
lcall
nop
lret
out
inc
add
mov
add
sti
sbb
js
shll
or
add
pushl
lcall
addl
lret
add
int3
jae
jle
roll
imul
call
adc
fisubs
cli
cmpsb
add
add
ficoml
xor
call
add
stos
mov
add
pop
fsub
add
and
ja
or
rolb
lock
xchg
movsl
add
jne
add
mov
dec
inc
add
stc
push
adc
push
pusha
add
xchg
jo
jmp
xchg
ds
add
push
enter
add
insb
pslld
push
add
xchg
inc
add
rolb
add
dec
cmc
xchg
xor
jmp
in
sar
cmp
xchg
ret
push
xor
call
add
in
aad
fisubs
call
ljmp
dec
sbb
mov
fwait
sub
add
dec
lds
push
add
mov
add
enter
add
pushl
in
iret
jmp
cli
lock
out
pushf
inc
add
testl
mov
add
hlt
cwtl
insl
mov
popf
pop
push
add
mov
int
add
int3
xchg
mov
mov
add
mov
decl
mov
ljmp
mov
inc
add
clc
dec
sbb
jp
inc
add
flds
add
insl
ds
or
mov
pop
add
pop
add
bound
ljmp
sbb
mov
add
sbb
lcall
xchg
adc
add
addl
add
cmpsl
add
shrl
add
testb
inc
add
add
divb
jmp
lcall
cmp
fsub
add
jl
rolb
cmpsl
add
adc
lcall
add
fidivs
pusha
add
fnstenv
add
sub
cmp
test
add
inc
add
sub
clc
cmp
push
inc
add
mov
loope
mov
movb
cwtl
rolb
add
sub
int3
in
leave
pop
add
cmpsl
add
add
jbe
add
adc
ljmp
mov
inc
add
add
scas
shll
add
sub
xchg
jg
add
push
add
out
inc
add
push
add
shll
mov
dec
lahf
push
stos
aas
fsubs
add
scas
lret
push
add
push
jno
call
push
add
insb
sbb
jle
int3
adc
pushl
lcall
adc
cmpsb
add
ret
add
add
fistl
aas
add
inc
add
add
fadd
add
out
or
call
mov
add
pushl
mov
add
jp
movl
add
xor
ljmp
sub
ljmp
inc
add
ret
add
inc
add
bound
jmp
add
dec
push
movl
adc
decl
add
sbb
outsl
push
add
shl
jmp
add
add
jmp
add
call
add
mov
inc
add
jnp
push
add
cs
flds
jmp
xor
js
aas
das
dec
aam
add
hlt
or
push
sbb
mov
pop
dec
push
add
out
std
outsl
data16
jge
push
add
add
xchg
jg
in
call
dec
jle
notb
fnsave
sti
outsb
cwtl
lret
movsl
add
sbb
or
add
cmpsl
add
add
jg
add
loope
jb
jmp
add
jbe
imul
dec
lods
popa
add
sub
push
sub
flds
add
inc
add
repnz
inc
add
int
add
scas
out
outsl
int3
pop
aad
push
add
sub
mul
add
add
pop
aaa
add
push
or
ja
cmp
addb
add
sub
sbb
and
pushl
inc
add
cmp
jmp
inc
add
dec
movsl
add
add
ret
push
aaa
push
lds
lods
ljmp
add
call
test
test
jae
inc
add
adc
add
call
addl
stos
insl
sbb
add
shr
movsb
add
push
add
data16
sub
fistpll
add
jb
call
add
cmp
aam
xor
loopne
aam
roll
inc
add
incl
add
call
decl
add
incl
dec
std
les
add
hlt
or
cmp
popf
scas
fists
add
in
mov
sub
add
test
movsl
add
lcall
mov
jbe
mov
cmp
add
add
movb
add
mov
push
add
fldenv
add
add
add
mov
add
lods
pop
mov
dec
dec
add
ljmp
test
addr16
add
add
lret
lock
add
dec
push
pop
inc
add
ret
add
add
mov
decl
mov
add
lcall
addl
mov
mov
mov
dec
push
add
xor
and
call
sbb
add
movsb
add
xor
in
aas
dec
cltd
inc
add
push
in
fnstcw
xor
call
incl
decl
mov
add
fistpl
popf
dec
adc
lcall
pop
mov
incl
add
or
movb
add
test
inc
add
add
addb
inc
add
pop
sub
jae
push
aam
lock
in
pop
addr16
add
add
in
ficoml
add
jge
add
test
add
incl
add
outsb
xor
incl
add
add
xor
lcall
ljmp
addb
pop
dec
cli
xor
je
pusha
add
scas
lock
push
cmp
add
in
or
cmp
push
add
test
in
addb
pop
call
sbb
test
jo
lcall
movb
shr
inc
add
push
or
stos
inc
add
jae
lcall
scas
divl
add
mov
mov
setle
push
add
bound
cmp
mov
add
roll
add
jg
jae
ljmp
mov
incl
pushl
out
fstpt
pop
pusha
add
ss
add
movl
pop
loop
jnp
cmp
push
add
adc
fmuls
xlat
cmp
add
daa
add
cmp
mov
xchg
dec
ja
add
imul
xchg
shrb
insb
pop
scas
arpl
pushl
cmp
add
xchg
sub
out
jle
push
sbb
xor
ljmp
inc
add
stos
mov
shlb
lahf
xor
jmp
add
jae
aas
mov
sbb
std
xor
pushl
or
add
dec
add
int3
xor
incl
push
inc
add
sahf
lret
dec
rolb
sbb
jne
add
dec
outsl
mov
aaa
jns
test
jo
lcall
ds
popl
add
mov
in
mov
clc
and
and
decl
add
pusha
add
aam
add
add
decl
jns
incl
fmuls
addb
add
push
in
int3
stc
arpl
pushl
jns
sub
insb
dec
sub
call
mov
and
decl
add
call
call
jno
call
add
mov
jge
add
push
add
jo
decl
testb
inc
add
aas
jmp
bound
dec
xchg
outsl
leave
sub
mov
adc
mov
jne
sbb
add
jl
inc
add
mov
fnstsw
pop
push
add
lcall
add
fsubr
lea
into
outsb
inc
add
or
inc
add
in
addb
add
jno
call
add
xchg
cmc
pop
ret
add
sub
das
movl
repnz
call
in
nop
push
add
pop
add
ljmp
dec
jbe
add
adc
decl
icebp
mov
add
add
or
add
fists
add
ljmp
mov
inc
add
add
jge
add
call
pop
jp
pop
sti
xor
lcall
add
jmp
das
movl
and
pushl
lcall
mov
ljmp
cwtl
mov
xchg
arpl
pushl
pushl
add
bound
ljmp
xchg
xchg
sbb
inc
add
in
das
mov
push
add
inc
add
add
add
call
mov
add
or
negb
sbb
aas
jo
fsubp
add
jge
mov
ljmp
incl
cmpsb
add
add
add
mov
lea
in
js
xor
lcall
add
clc
sbb
mov
ljmp
push
movb
dec
insb
popa
add
adc
add
cltd
addl
insb
mov
add
or
roll
inc
add
mov
hlt
dec
lds
stos
jae
inc
add
add
notb
hlt
add
repnz
add
xor
decl
mov
add
pop
jmp
add
inc
add
mov
gs
add
stc
jne
add
sahf
jecxz
push
add
decl
inc
add
xchg
ds
add
mov
int
inc
add
add
add
add
xchg
xlat
mov
loop
lds
je
lods
test
inc
add
test
fbld
add
pop
and
fiaddl
mov
cwtl
movsb
add
add
add
ret
add
pop
inc
add
or
jbe
adc
jne
push
add
pop
inc
add
movsb
add
ret
add
add
insb
in
jae
jmp
js
add
mov
mov
lret
sti
mov
test
decb
stos
fldt
add
cmovle
popf
jmp
add
push
mov
daa
add
pusha
add
mov
test
add
mov
mov
mov
add
add
idivl
into
arpl
jmp
add
mov
ss
jmp
je
jne
cli
leave
or
fwait
stos
stos
test
insb
les
adc
lock
sti
rorb
xchg
mov
add
pop
adc
cmp
ss
sub
lds
out
leave
mov
adc
addb
scas
adc
in
mov
out
lds
jae
decl
mov
mov
and
decl
add
jmp
outsl
adc
fnstenv
add
pop
imul
xchg
cmp
hlt
lods
jo
in
pop
cmp
lret
mov
pushf
xchg
xchg
lret
lds
mov
add
add
insb
push
add
mov
lea
xchg
mov
add
add
add
push
movsl
add
push
nop
cmp
cltd
mov
leave
pop
inc
add
popa
add
es
mov
add
jge
lds
cltd
sbb
jae
lcall
add
add
cmpsl
add
call
incl
add
cmp
add
push
add
sub
add
in
cmp
pop
in
lcall
inc
add
stos
int
jl
fdivrl
fidivl
ret
add
pop
fcomps
pop
mov
loopne
xchg
pop
add
add
add
ljmp
jp
add
inc
add
and
jmp
ljmp
and
js
add
jge
add
add
add
inc
add
add
jo
decl
aaa
notl
std
stos
push
xchg
pop
or
and
jmp
xor
adc
mov
add
add
inc
add
decl
ffree
add
aaa
sti
xor
add
add
mov
adc
call
fsubrs
add
add
movsb
add
stos
mov
mov
je
add
xchg
xor
pushl
add
or
and
js
add
add
push
push
jb
jl
jo
mov
add
xchg
fwait
call
mov
add
les
lods
movb
cli
sbb
pop
data16
adc
inc
add
add
data16
push
add
je
xor
jmp
ljmp
mov
add
xlat
fdivr
pop
inc
add
mov
inc
add
inc
add
add
add
out
stc
add
sahf
or
cli
mov
call
mov
movl
add
push
and
incl
add
push
mov
les
stos
cmp
xor
call
pop
mov
cld
nop
insl
push
mov
add
add
add
add
js
ds
add
icebp
call
add
pop
cmp
sbb
jge
mov
dec
xchg
adc
pushl
add
mov
ljmp
add
test
hlt
stos
roll
add
sbb
jmp
movl
add
inc
add
mov
loopne
fldenv
loopne
movb
incb
add
mov
add
fdivr
ljmp
js
das
mov
add
and
pushl
jp
mov
add
stos
sub
cltd
movl
aaa
gs
add
aas
cmpsl
add
cmc
xchg
mov
mov
push
and
pushl
incl
add
add
sbb
push
add
out
out
std
cmp
pop
mov
adc
pushl
add
xor
jmp
icebp
jge
cmpsl
add
out
or
jo
push
cmpsl
add
add
jbe
into
fldt
push
mov
nop
cli
mov
add
jns
jae
push
popa
add
jnp
add
pushl
add
enter
add
lcall
ds
adc
cmp
add
data16
jmp
mov
mov
cmp
push
imul
add
ljmp
jge
mov
dec
xor
ljmp
xchg
xchg
jb
jmp
loop
mov
add
and
ljmp
xchg
sbb
pop
inc
add
mov
add
stos
fsubs
add
daa
add
aam
add
jnp
jmp
add
add
ljmp
mov
add
stos
or
dec
fidivrs
mov
aam
cmp
iret
test
jns
xor
fdivrs
add
xchg
add
mov
into
cli
xchg
test
and
push
add
add
add
scas
sub
add
movl
mov
or
add
push
nop
dec
clc
iret
xor
jmp
add
dec
outsb
dec
jmp
xchg
bound
incl
add
mov
pop
add
or
loope
insb
mov
xchg
ds
inc
add
add
mov
and
decl
das
xchg
jp
push
add
push
test
cmp
test
push
je
add
xor
lcall
std
addl
add
add
add
lock
cmc
add
xor
cmp
add
jle
jmp
mov
add
add
ljmp
ret
dec
add
inc
add
push
fsubrs
mov
insl
add
ljmp
xchg
push
add
jbe
add
add
insb
cwtl
stc
outsb
aad
add
call
add
sbb
add
ss
sub
add
mov
add
int
cltd
push
mov
lahf
mov
imul
add
push
call
js
in
daa
add
push
xor
lcall
add
push
cmp
add
xlat
dec
lods
mov
push
aas
lret
rolb
add
mov
mov
cmp
cltd
and
jmp
inc
add
xchg
aas
test
stos
xchg
sti
mov
cmp
add
icebp
rcrb
push
add
aam
lret
cmpsl
add
inc
add
sti
push
add
out
add
pushl
or
add
dec
cmp
stc
mov
insl
stc
popa
add
jae
inc
add
call
jmp
mov
add
add
ret
add
aam
fisubl
decl
decl
xchg
mov
dec
loop
arpl
jmp
incl
je
cmpsb
add
add
and
call
add
arpl
jmp
add
add
jb
cli
xor
and
fbstp
add
fdivr
ja
filds
fsts
roll
dec
mov
js
pop
dec
xor
pushl
shll
xchg
popa
add
pop
sub
add
pushl
out
xchg
adc
call
xor
incl
decl
mov
dec
loopne
in
fisttpll
jle
inc
add
fst
dec
mov
add
pusha
add
sbb
add
addb
jb
incl
and
pushl
incl
add
in
cld
jmp
inc
add
xlat
mov
mov
adc
add
roll
fbld
add
fsubs
decl
cmpsl
add
add
pushl
pop
inc
add
outsb
push
add
call
add
dec
sbb
push
xchg
fimull
push
add
jno
ljmp
movsl
add
push
lods
xlat
mov
add
add
push
add
xchg
stos
notl
cmp
add
call
mov
add
fnstcw
das
roll
add
addl
sub
jmp
aad
add
sbb
dec
add
pushl
pop
fmuls
add
movsl
add
jmp
jae
decl
dec
cmp
mov
imul
inc
add
push
xchg
sub
sub
add
xchg
clc
xchg
lods
dec
xor
cmp
add
insl
call
inc
add
jo
jmp
add
lods
ret
add
cld
add
ss
int
test
add
push
push
add
push
aad
add
pop
nop
fldl
add
jmp
cltd
jno
ljmp
push
add
push
add
insb
out
pop
mov
sbb
call
enter
add
push
addl
lret
lcall
add
xchg
roll
add
call
adc
add
aaa
or
sbb
add
stc
sbb
add
ds
sub
push
push
dec
pop
add
add
jne
add
add
scas
and
incl
pop
ficoml
add
aaa
add
lods
and
inc
add
adc
incl
add
loope
cmp
cli
jecxz
cmpsl
add
and
incl
add
cmp
rolb
dec
mov
cwtl
icebp
out
scas
and
jmp
add
pushl
cli
xchg
or
and
ljmp
adc
call
decl
xor
pushl
in
inc
add
add
dec
dec
test
jmp
or
fs
add
add
cmc
and
jle
mov
lret
mov
lea
jo
pushl
pop
xchg
in
packsswb
jmp
add
call
jmp
lods
pusha
add
ret
add
popf
fnsave
popa
add
cmpsl
add
pushl
xchg
inc
add
addl
in
in
sbb
add
add
call
add
dec
addb
and
imul
or
cmp
xchg
push
add
inc
add
roll
sub
repz
bound
ljmp
add
out
lds
add
ljmp
jo
incl
add
jo
ljmp
negb
push
fisttpll
fidivrl
push
sub
lret
push
push
pop
fnstsw
push
jg
jno
jmp
mov
add
repnz
ja
dec
jnp
cmc
imul
pop
fiadds
dec
add
jmp
pushl
or
add
push
and
push
add
adc
call
add
and
xor
pushl
pop
inc
add
pop
in
sbb
add
push
add
xchg
movb
cmpsb
add
jle
jge
add
inc
add
add
pop
pop
add
add
xor
lcall
add
add
dec
hlt
out
aam
bound
call
add
imul
pop
xchg
out
das
fldl
incl
add
aad
cmp
add
jmp
ds
add
mov
add
ljmp
lds
stos
and
lea
add
fldt
push
add
and
call
ljmp
sub
inc
add
ss
pop
fnsave
add
out
adc
jg
add
incl
jae
incl
mov
add
mov
dec
jp
add
and
loop
fldenv
push
cmp
add
xor
call
dec
xchg
lret
xor
incl
add
daa
add
xchg
jne
jle
mov
or
add
jns
xchg
ss
js
scas
cmpsb
add
add
movsl
add
xor
cltd
pop
dec
int3
and
pushf
data16
xchg
mov
xor
jmp
decl
or
ret
inc
add
or
aaa
jb
call
or
add
addb
out
mov
push
add
mov
mov
scas
and
stos
lods
das
xor
pushf
dec
std
ljmp
jle
add
add
mov
bound
jg
add
out
arpl
ljmp
jle
js
pop
sub
jle
cmpsb
add
inc
add
mov
add
jge
add
fdivr
cld
jns
mov
iret
sbb
add
ror
out
sub
mov
add
outsb
jns
jns
add
sub
lods
inc
add
jnp
adc
incl
ljmp
pusha
add
outsb
xchg
daa
add
out
imul
cld
int3
pop
sbb
shll
sbb
mov
add
mov
ljmp
fiaddl
jmp
add
add
add
je
add
or
hlt
aaa
dec
or
add
lret
imul
push
jl
add
shll
add
popa
add
movl
jbe
loop
inc
add
rcll
mov
aam
xchg
aam
adc
pushl
dec
pusha
add
jl
xchg
addb
jae
incl
add
mov
fisubl
cmp
mov
call
pop
add
pushl
add
add
pop
and
call
add
mov
cmp
xchg
jne
add
addl
xchg
decl
testl
add
mov
fsubrs
clc
dec
cld
cmp
add
xlat
mov
addb
mov
lahf
add
into
popa
add
ret
add
pop
sbb
pop
pushf
sti
xchg
lahf
mov
add
decl
add
data16
add
jmp
or
add
mov
bound
lcall
lret
ret
inc
add
inc
add
or
data16
mov
lds
enter
add
add
fildll
mov
inc
add
shr
js
add
xor
jmp
incl
and
lods
pusha
add
adc
incl
mov
inc
add
add
add
xchg
pop
mov
add
jnp
loope
repnz
pop
fstps
cli
mov
fiadds
add
sbb
add
bound
decl
leave
mov
shrb
or
sbb
add
movl
incl
push
add
pop
ret
add
das
sub
std
les
adc
add
shl
add
aam
das
xor
pushl
lds
mov
add
pusha
add
dec
loope
mov
mov
into
jl
add
mov
add
sbb
cmp
repz
pop
lock
pushl
mov
add
sbb
sub
cmp
in
pop
push
sub
adc
jp
cmc
clc
or
incl
pushl
add
push
add
sub
jb
dec
icebp
push
pop
ds
add
jmp
add
incl
add
pusha
add
jg
in
and
mov
loope
xor
inc
add
rcl
ss
add
push
inc
add
mov
into
jnp
add
add
sub
add
cmp
shlb
lcall
jbe
add
cwtl
movl
or
jle
pop
jo
incl
add
data16
sbb
xchg
clc
jge
ret
add
inc
add
mov
cltd
roll
clc
test
add
pop
data16
add
lahf
cmp
nop
jae
pushl
int3
xchg
mov
sub
xor
xor
push
inc
add
roll
lahf
sub
imul
js
xchg
lds
aad
fdivl
cmp
and
ljmp
fimull
add
add
lcall
daa
add
test
add
add
arpl
lcall
mov
xlat
sub
popf
mov
add
imul
sbb
pop
add
lods
pushf
jb
call
jns
push
cmp
add
adc
cmp
or
xchg
loopne
mov
mov
movb
add
mov
add
add
enter
add
daa
add
pop
xchg
xlat
out
sub
cmp
add
ficomps
pop
aas
shlb
add
jno
call
lret
jp
ss
sarl
xor
cld
out
xor
call
test
mov
push
add
mov
pop
daa
add
call
mov
push
divb
incl
movsb
add
adc
incl
jae
jmp
add
mov
arpl
clc
inc
add
push
add
in
jp
test
fwait
mov
cmp
ljmp
add
cmpsl
add
sbb
inc
add
add
push
jmp
add
lcall
push
int3
sub
fcom
mov
cmc
pop
cmpsb
add
add
jecxz
mov
mov
add
mov
xor
incl
add
add
and
call
add
aad
clc
jnp
dec
add
ljmp
add
rclb
insl
mov
add
add
fdivr
fmuls
mov
mov
cmc
mov
add
stc
lea
out
call
add
add
fdiv
xchg
mov
ljmp
mov
lahf
bound
jmp
push
add
sbb
repz
mov
fimuls
xor
ljmp
add
mov
mov
lods
lods
pushf
add
lcall
or
dec
mov
loopne
fsubs
pop
push
add
leave
cmp
