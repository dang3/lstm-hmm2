inc
add
add
js
add
cwtl
cmp
sub
in
cmp
jae
add
or
add
mov
jle
add
in
mov
push
les
lcall
cmp
jle
fs
test
test
add
add
push
jb
lret
lods
jmp
mov
push
adc
dec
and
fdivr
pusha
add
in
xor
push
leave
push
pushf
es
lcall
xor
lret
insl
jmp
mov
cltd
and
lds
ror
std
dec
pop
adc
stc
inc
add
add
mov
add
mov
add
aam
insb
es
mov
mov
jno
push
rolb
add
mov
icebp
sub
dec
leave
mov
cmp
cmc
out
adc
add
ret
mov
add
inc
add
fs
mov
add
sbb
loopne
add
and
lahf
cli
jp
adc
xchg
sub
or
adc
repz
mov
and
xor
loop
and
add
adc
in
das
outsb
sub
or
pop
pusha
add
add
and
add
add
scas
jb
add
add
dec
add
inc
add
sti
adc
add
aas
push
and
jnp
addr16
cld
pop
cmc
insl
adc
mov
dec
jne
lahf
sub
sbb
push
inc
add
xor
in
popf
pop
fucomp
das
mov
sub
ficoms
testl
push
in
xchg
cmp
sti
adc
add
lea
ror
xchg
les
xor
fistpl
cld
dec
jle
movsb
dec
cmp
addb
cmpsl
sub
add
or
movb
add
inc
add
outsb
xchg
int3
inc
add
das
jecxz
stos
mov
scas
daa
jbe
std
sarl
mov
add
shll
add
sahf
dec
loopne
shld
push
cltd
adc
repz
fnstenv
cmp
addb
outsl
mov
dec
ret
add
pop
jp
shrl
in
xchg
arpl
shll
movsb
xor
jecxz
addr16
addl
mov
pusha
add
add
xchg
mov
adc
mov
clc
xchg
cmpsb
outsb
push
lods
aam
jbe
dec
cli
dec
outsb
xor
lret
mov
push
cmp
adc
fstpl
add
pop
inc
add
add
sub
mov
movsl
into
pop
push
xor
mov
in
movb
imul
jb
fisubl
scas
jle
stos
ja
fldenv
add
inc
add
mov
push
dec
ffreep
add
mov
mov
add
dec
sub
lods
push
movsb
xor
xor
sub
cmc
pop
enter
push
cld
or
into
adc
mov
add
add
jmp
cwtl
incb
mov
in
mov
add
std
and
das
pushf
mov
ds
pop
dec
fisttpl
outsb
movsb
shr
mov
jbe
cwtl
popa
add
push
add
xor
ret
add
pop
roll
aam
push
test
movsb
inc
add
or
dec
inc
add
fbld
adc
pop
inc
add
loope
push
pop
adc
test
ljmp
negb
repz
cwtl
jle
bound
hlt
nop
mov
jl
dec
dec
mov
xchg
stos
add
sub
ljmp
add
ljmp
add
add
cmc
repnz
aad
inc
add
add
push
int
add
sub
add
nop
mov
sub
scas
out
jle
adc
mov
pop
call
cmp
add
cmp
stos
and
xor
pop
fnstsw
jo
jmp
jno
jne
add
into
cmp
in
add
add
cmpsb
std
lds
lds
test
ja
stos
inc
add
addl
gs
xchg
nop
and
add
sub
jnp
inc
add
sahf
filds
push
lcall
test
jne
imul
dec
cmc
cwtl
lret
mov
arpl
aaa
xor
loope
xor
cmp
push
cmp
jle
inc
add
mov
mov
aas
lods
cmovp
sahf
roll
les
rolb
xchg
mov
loope
cmp
in
stos
mov
add
outsb
into
repnz
cmc
lret
inc
add
lds
daa
repz
xor
add
pop
mov
push
insb
push
cmp
adc
add
test
aas
nop
mov
add
sub
bswap
ss
or
adc
mov
mov
add
mov
lahf
inc
add
pop
mov
pop
cmp
cmp
add
push
sub
aam
mov
fsts
xchg
dec
insb
cmp
jmp
push
pop
mov
add
sbb
adc
repnz
add
add
std
or
fists
jno
mov
add
add
adc
sbb
aam
cltd
jecxz
stos
cwtl
push
jno
flds
sub
movsb
addl
sahf
push
inc
add
inc
add
add
outsl
add
add
out
popa
add
inc
add
mov
sub
sub
mov
sti
pop
jg
cmpsb
gs
ss
add
add
loope
and
xor
add
dec
push
dec
ja
lds
out
mov
sbb
das
push
cltd
cmp
add
add
mov
inc
add
lret
dec
les
aam
adc
cwtl
push
lds
jle
sub
add
and
pop
adc
or
sarl
push
hlt
cmp
mov
shl
pop
jmp
jge
add
push
sbb
add
add
jae
add
pop
pop
mov
add
add
add
sysenter
icebp
sbb
lret
lea
das
fstps
iret
bnd
inc
add
fs
cmp
adc
ret
add
inc
add
push
sahf
pop
std
mov
dec
stc
ljmp
cmp
in
push
call
test
cmp
stos
mov
jg
xor
add
sbb
mov
add
roll
fs
pop
addl
popf
aam
cmp
cmp
sti
sbb
pushl
xchg
or
cmp
outsb
dec
xchg
lcall
add
stos
pop
stos
out
and
xchg
and
xor
or
repz
pushf
shrl
out
outsb
addl
add
mov
jg
push
insb
pop
add
sbb
xor
insb
pop
add
out
inc
add
lret
sbb
add
xor
sub
push
loope
inc
add
xor
les
movsb
xor
mov
add
fcmovne
pop
jo
aam
xchg
xor
add
jge
pop
jae
cmp
or
jecxz
mov
iret
sbb
pop
imul
xchg
sarb
cltd
popa
add
lds
les
lods
fxam
imul
add
jne
sub
mov
add
fiadds
dec
fstpt
fcoml
xor
adc
lcall
xor
mov
sub
xchg
jnp
add
add
sti
push
outsl
repnz
xor
pop
hlt
dec
movsl
imul
and
jg
add
ss
inc
add
addl
mov
adc
add
push
fmulp
sub
std
sbb
dec
jne
shl
repz
sbb
add
fstpt
mov
mov
ss
insb
push
repz
xlat
xor
sub
mov
clc
int3
aam
sarl
mov
icebp
and
and
rcr
iret
xchg
mov
hlt
test
xchg
lret
cmpsb
stos
mov
xor
mov
sbb
or
push
inc
add
outsb
mull
add
add
out
add
push
es
and
mov
std
lea
out
pop
mov
pop
mov
pop
mov
pushf
xor
xchg
fisubrl
and
jnp
add
push
addl
in
pop
stc
fwait
jp
jmp
add
lret
add
insb
bound
ss
jg
add
lods
mov
call
add
push
add
jns
adc
and
dec
push
add
jbe
add
sub
add
mov
add
sbb
pop
stos
and
test
add
pop
aaa
and
add
gs
mov
lea
jb
add
pop
movsb
fadds
jmp
test
xor
cmc
mov
lea
add
jge
sub
xchg
pop
push
xor
inc
add
out
jbe
jmp
add
cmp
mov
sub
in
sub
push
mov
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
push
call
push
jmp
ret
mov
cld
cs
lea
xchg
or
xchg
lea
repnz
jne
jmp
pop
add
es
cs
add
add
push
test
faddp
add
push
adc
movl
add
mov
ja
fistl
xchg
nop
push
outsl
mov
test
inc
add
les
dec
fwait
ja
test
jp
or
movl
mov
mov
push
dec
xlat
roll
call
dec
push
hlt
mov
xchg
lods
aaa
mov
inc
add
mov
push
lods
shlb
fwait
sbb
inc
add
jle
mov
in
inc
add
aad
push
lods
loopne
fsubs
sub
and
test
xor
repnz
inc
add
mov
movb
push
xlat
ret
xor
ss
mov
add
les
jl
push
mov
add
sub
add
call
add
add
sub
jbe
add
movl
add
add
push
addl
xchg
popf
push
gs
rdtsc
cwtl
xor
add
add
frstor
add
test
in
cmp
mov
nop
and
mov
test
cmp
adc
in
gs
jl
mov
jg
ss
pop
sub
iret
mov
mov
dec
xchg
movsb
loop,pn
sti
in
repnz
sub
aas
repnz
add
add
jno
xchg
dec
fistl
cld
add
jns
push
mov
movsl
es
cli
int3
jbe
mov
mov
mov
cmp
add
nop
adc
lea
mov
scas
bound
push
insl
aas
xchg
push
jl
addl
push
sahf
push
cmp
cld
inc
add
add
add
test
inc
add
popl
dec
mov
jecxz
lahf
mov
in
jae
xor
add
pop
inc
add
add
pop
mov
imul
add
xor
hlt
xchg
mov
in
and
rorl
mov
add
inc
add
mov
add
cmp
test
ds
or
std
cmpsb
xor
pop
and
es
dec
loopne
movb
or
repz
add
mov
shll
push
in
mov
fimull
pop
or
and
sub
add
add
cltd
call
sbb
out
add
ljmp
pop
data16
out
mov
gs
or
mov
leave
loopne
mov
int
xchg
push
lret
inc
add
xor
in
out
movsl
pushf
mov
push
add
sub
cld
data16
jae
cmp
in
mov
clc
push
sub
aaa
and
dec
pop
add
lods
pop
and
hlt
mov
jbe
scas
imul
pop
lods
movb
add
outsl
pop
or
cmp
pop
lret
mov
inc
add
add
mov
sbb
sub
add
push
imul
adc
jg
add
mov
movb
enter
rolb
add
jns
in
dec
aam
jae
sub
add
lea
and
xchg
int
out
dec
movsb
cmc
dec
roll
dec
movsb
scas
int
add
addl
shr
cwtl
cmp
leave
addl
adc
add
xlat
xor
sbb
push
add
out
fsubrl
fiadds
add
add
add
adc
add
adc
and
and
cmp
cwtl
mov
pop
inc
add
nop
jg
repz
and
insl
movsl
insw
mov
imulb
push
mov
push
insb
lea
fistpl
bound
in
push
mov
add
add
xor
les
inc
add
iret
push
add
insl
add
shlb
std
repnz
push
pop
adc
daa
cld
jge
add
mov
in
or
lcall
loopne
add
lea
pop
or
add
pushf
bound
sbb
pop
xchg
mov
hlt
cmp
add
iret
push
add
and
mov
imul
in
fstpt
addb
add
add
addr16
add
sarl
add
sti
jno
mov
xor
jp
mov
lcall
movsl
push
pop
jbe
add
stos
xchg
sbb
stos
jmp
add
aaa
push
sahf
fs
int3
rcrw
cmp
xor
add
sbb
sbb
into
and
jg
or
aam
sbb
repnz
int
shlb
in
mov
insl
ja
add
add
or
sahf
cmp
mov
ret
add
xor
sbb
lock
fcompl
add
cli
xor
stos
adc
cmp
sub
fsts
int
add
repnz
dec
xlat
stc
mov
add
xor
xchg
sub
ret
push
cltd
pop
push
les
adc
ljmp
add
add
sub
mov
nop
cmp
jmp
or
push
mov
add
add
add
add
cmc
cld
pop
mov
push
cmp
inc
add
mov
fstpl
push
ljmp
js
add
add
cmpsl
mov
sub
jb
add
cmpsb
dec
je
inc
add
add
out
dec
push
in
movsb
xchg
outsl
ja
aad
xor
aas
cmp
xchg
ljmp
dec
clc
pushf
js
add
add
mov
lret
add
rcr
out
mov
lds
insb
dec
hlt
sub
es
test
cltd
repz
test
jl
rcr
imul
in
mov
cmp
jbe
in
add
movsl
repz
pusha
add
dec
imull
add
addl
add
add
cmp
add
int
popa
add
and
cmp
rolb
or
mov
negl
or
outsb
mov
mov
int
cmp
cmp
cld
or
mov
int3
mov
ljmp
add
push
jbe
inc
add
adc
pusha
add
add
jo
sbb
add
fisubrs
fiaddl
sub
mov
out
lcall
es
lods
mov
adc
and
or
mov
add
mov
xor
mov
call
mov
ss
add
add
add
in
inc
add
xor
sub
fisubl
pop
mov
outsb
cmp
ljmp
into
or
sub
insb
and
add
repnz
js
or
pop
pop
in
mov
jno
dec
js
adc
add
test
sub
add
cmp
movb
movsl
inc
add
jp
add
mov
and
xor
mov
cmpsb
or
stc
fisubrl
push
or
scas
repz
shr
aas
pop
and
add
addl
jno
cmpsl
test
testb
call
push
les
cmp
aas
sahf
push
fldcw
pop
jo
add
add
jge
leave
ss
xchg
out
mov
cwtl
pop
jbe
push
mov
xchg
cmpsl
cmp
iret
jae
add
inc
add
add
jl
add
add
repnz
add
add
add
cmp
sub
inc
add
add
pop
ljmp
sub
movl
addl
mov
mov
add
sub
adc
ja
enter
xchg
adc
in
mov
xor
ds
xor
addl
push
add
cmp
adc
push
call
add
std
inc
add
fdivrs
dec
mov
rolb
pop
mov
loop
inc
add
shrl
add
add
pop
lcall
mov
les
movsb
or
cwtl
mov
add
sti
mov
insb
jne
notl
jns
add
add
mov
push
dec
or
push
jae
pop
sar
jne
add
add
xor
les
cmp
add
add
sbb
jg
pop
push
cmp
enter
dec
xchg
dec
xchg
lahf
mov
je
das
cwtl
jg
and
leave
std
test
fisttpl
cmp
mov
out
fnstsw
sbb
leave
pusha
add
mov
test
pop
jae
movsl
push
ret
aaa
daa
outsl
cmpsb
inc
add
sub
xchg
dec
xchg
push
add
pop
jge
lea
rorb
inc
add
xchg
jg
push
ret
add
pop
mov
cs
iret
push
je
lcall
les
or
add
mov
outsl
push
mov
dec
movb
add
outsl
push
jae
xchg
imul
es
insb
sbb
add
sub
mov
jg
inc
add
fs
mov
mov
add
stc
add
xor
mov
add
mov
sbb
add
push
add
add
pop
mov
inc
add
pop
cltd
and
sbb
in
pop
cmpsl
xor
xor
push
sti
sbb
lea
cld
test
divb
add
jbe
cmp
jmp
xor
mov
add
sub
iret
aam
adc
xor
add
pop
or
lock
and
call
lds
xchg
loope
movl
add
add
add
add
add
and
adc
mov
clc
mov
in
into
xchg
xchg
les
xor
adc
and
aad
add
insb
push
repnz
adc
push
push
imul
or
add
icebp
jo
cmp
add
pusha
add
add
or
add
insl
dec
jmp
mov
add
pop
fsubl
mov
mov
add
sbb
or
std
notl
mov
out
fstps
push
daa
jnp
push
mov
cmpsb
adc
add
sub
add
mov
inc
add
data16
add
sti
or
fisubs
lret
aad
or
xchg
in
add
mov
jbe
add
add
mov
cmp
or
iret
je
sbb
cmp
das
xchg
mov
cmp
add
push
ret
xchg
xor
lret
dec
and
jb
test
popf
jle
add
push
pop
xchg
popf
mov
dec
sub
icebp
dec
sub
add
movsl
push
or
pushf
aaa
add
or
mov
sbb
aad
call
jmp
icebp
cwtl
xor
push
push
popa
add
jb
mov
insl
adc
add
out
add
jmp
mov
and
leave
pop
cmp
jbe
fldcw
add
push
sbb
mov
cld
or
push
mov
loop
add
popa
add
xor
and
pop
iret
push
in
xchg
cld
stc
jbe
add
xor
xchg
cs
push
add
mov
add
sti
sarl
pop
dec
inc
add
addr16
dec
xor
das
or
add
ljmp
dec
push
cltd
ret
add
pop
loopne
add
and
jle
jnp
adc
add
arpl
loopne
outsl
sti
stc
sahf
addb
arpl
mov
int
add
hlt
ss
jb
out
lahf
xchg
xor
add
adc
ficompl
add
adc
jmp
hlt
cmpsl
cmp
add
mov
pop
and
mov
add
add
inc
add
sbb
cltd
cmp
icebp
and
call
ja
mov
xchg
jecxz
add
inc
add
cmp
call
fists
inc
add
test
add
add
and
add
imul
roll
push
mov
es
test
nop
add
addr16
icebp
cwtl
lods
push
adc
test
cmp
adc
iret
fadds
add
pop
loopne
mov
cmp
add
idivb
mov
sub
add
add
add
mov
add
cmp
or
and
lea
push
mov
pop
mov
and
add
cmpsl
mov
or
xchg
out
rolb
pop
inc
add
int3
mov
dec
sub
data16
out
ljmp
mov
push
aam
ret
add
pop
cltd
jne
call
sub
add
xchg
sbb
jmp
popf
pushf
cmp
loop
xchg
in
add
mov
lea
or
and
add
stos
pop
icebp
mov
sbb
add
sbb
mov
push
mov
mov
clc
cmc
addl
xchg
testb
addb
add
add
shlb
or
leave
pop
inc
add
push
in
sahf
pop
addb
add
insb
fsubrp
pushl
inc
add
pop
push
xchg
stos
fs
in
xor
and
xchg
mov
add
js
add
fmul
push
cmp
inc
add
mov
dec
jns
imul
add
aam
into
cmp
repnz
xchg
or
lods
mov
or
push
in
fsts
push
nop
adc
cld
mov
or
loop
insl
insl
add
into
cltd
sub
add
jno
out
pop
lea
add
add
fwait
cmp
add
repz
add
xor
dec
addb
insb
incb
std
lea
pop
sbb
lret
mov
add
mov
icebp
fisttpl
add
jbe
out
pop
pmulhuw
add
test
test
xlat
xor
xlat
mov
xchg
mov
pusha
add
inc
add
loop
lock
add
repnz
test
daa
push
pmuludq
push
pop
dec
dec
sbb
add
add
das
or
jle
sti
add
test
xor
jmp
add
sbb
xchg
call
or
mov
add
sbb
and
mov
sbb
add
add
shl
pop
add
sahf
and
loopne
test
mov
push
test
mov
pop
or
sub
lea
cmp
pushf
flds
add
add
sub
add
add
js
lcall
add
in
add
mov
cs
pop
cmp
xchg
stos
pop
movsb
jo
movb
add
pop
push
and
mov
pop
mov
add
add
aaa
and
in
or
push
add
xchg
out
in
cmovnp
hlt
sbb
dec
mov
jnp
xor
xor
rorb
out
pop
push
pop
and
xchg
rorl
xchg
leave
push
add
insl
fs
test
mov
das
loop
stos
popf
push
add
inc
add
mov
lret
inc
add
xor
jl
mov
mov
add
mov
add
add
add
shlb
add
cmp
push
addl
add
addl
inc
add
addl
add
out
xor
shlb
adc
mov
add
add
push
sbb
xchg
xlat
mov
add
add
push
in
bound
test
mov
add
xchg
outsl
lcall
add
pop
loopne
les
dec
and
fwait
or
add
cltd
xor
das
das
int3
fsub
jne
mov
xchg
mov
scas
jns,pn
or
flds
mov
xchg
ret
add
aas
fisttpll
pop
fisubl
mov
inc
add
lcall
gs
add
or
jno
mov
scas
and
aam
stos
or
adc
out
sti
push
addb
and
gs
jmp
addb
gs
add
out
xor
mov
int3
test
add
fbstp
js
xor
add
push
push
xchg
jecxz
lahf
sub
xchg
pop
sti
jb
fmuls
scas
pop
aas
push
mov
aaa
rorb
fs
test
pop
add
rcll
fdivs
adc
add
pusha
add
push
pop
nop
push
lock
sbb
add
lcall
dec
xchg
ret
mov
add
pop
sub
insl
mov
mov
movsb
jecxz,pt
sub
fnstenv
lcall
in
add
cltd
fnstsw
add
fldt
or
add
fists
scas
jecxz
add
pop
cwtl
sbb
out
mov
cwtl
jne
dec
out
aaa
stos
in
mov
out
mov
ja
out
inc
add
add
rolb
cmpsl
mov
outsb
faddl
test
add
add
push
push
mov
jnp
into
arpl
cld
fsub
pop
dec
mov
add
inc
add
jle
mov
add
inc
add
fsubl
cmp
add
add
mov
add
les
sub
aad
mov
cmpsb
dec
imull
add
mov
pop
cwtl
jmp
sti
icebp
or
rcr
test
dec
cli
adc
adc
push
insb
add
sbb
adc
les
insl
movsb
xor
dec
lsl
sbb
sbb
lret
hlt
add
aaa
xchg
inc
add
mov
call
xchg
sahf
xchg
cmp
dec
push
dec
xor
push
xchg
in
leave
xor
pusha
add
imull
pop
add
cwtl
mov
xchg
addl
rcrb
call
xchg
pop
lock
dec
xchg
das
mov
inc
add
pop
xchg
movsb
jne
xlat
add
push
sti
pop
cs
hlt
pop
fmul
int
mov
mov
add
das
or
mov
mov
gs
lds
cmp
inc
add
dec
dec
enter
add
fstpt
cmp
sub
cmc
adc
addl
movl
push
inc
add
xor
daa
push
loopne
movb
add
push
dec
mov
add
cwtl
daa
mov
stc
or
add
mov
pop
mov
aam
cmp
lock
out
imul
data16
lock
out
test
std
push
insl
jns
inc
add
test
out
inc
add
out
jne
lahf
addb
cmp
shrb
add
jo
or
jp
sahf
loopne
jne
pop
addb
mov
out
stos
shlb
outsb
dec
cli
adc
pop
or
push
addr16
out
shl
out
out
mov
rcl
jb
iret
icebp
cmp
add
insl
mov
imul
add
add
cmc
addb
movsb
jl
add
jns
and
push
xor
mov
add
sti
clc
addb
jle
xor
aad
stos
pop
aas
or
outsl
sti
jmp
hlt
or
pop
cwtl
push
dec
jno
mov
mov
imul
or
ds
or
mov
inc
add
lcall
pop
insb
sbb
add
in
sub
xor
pop
outsb
cmp
add
lods
inc
add
mov
rorb
inc
add
std
mov
jmp
add
sub
sbb
add
adc
inc
add
addl
adc
ja
dec
jl
inc
add
jnp
add
add
mov
mov
xor
nop
pop
loope
repz
sti
inc
add
xor
test
insl
lock
cmp
in
addl
push
jmp
frstor
lock
cmc
mov
jg
jb
sub
adc
jns
xor
cltd
js
out
pop
ja
es
mov
fs
add
addb
add
dec
out
movsl
mov
imul
add
and
lods
notl
xor
add
es
xchg
xchg
inc
add
add
add
push
ret
add
nop
mov
add
xor
cmpsb
adc
mov
mul
out
push
dec
sub
scas
pop
icebp
movl
xchg
xchg
fcmovb
add
neg
into
dec
in
loopne
add
add
add
push
xchg
imull
test
jg
add
adc
fstpt
out
das
mov
lahf
movb
mov
roll
add
add
push
outsl
mov
inc
add
aad
xor
nop
icebp
cmp
add
insl
push
cmp
xor
ds
ja
push
aaa
cs
xlat
cmp
add
std
out
pop
aaa
dec
mov
sub
add
mov
or
add
popf
movsl
mov
cmp
aaa
push
add
popa
add
add
in
add
mov
add
lret
push
fidivl
mov
jbe
mov
movl
add
push
pop
adc
insb
rolb
dec
jmp
and
mov
jae
adc
jl
add
negb
xchg
das
mov
gs
lods
jbe
inc
add
sbb
movsl
test
ret
inc
add
fsubl
xchg
iret
mov
jae
adc
jmp
add
pop
adc
jg
aas
repz
mov
xor
push
movl
add
add
lcall
pop
pop
mov
and
rcr
movsl
in
je
mov
dec
cmp
cmpsl
imul
mov
jo
xor
test
out
mov
mov
stos
flds
add
mov
push
test
adc
add
stos
fistps
in
jl
movl
push
xor
inc
add
movsb
add
popf
negb
enter
or
insb
mov
in
psadbw
pushf
cmc
sbb
xchg
pop
adc
fsubr
mov
xchg
xchg
insl
mov
in
jle
mov
adc
in
cmpsl
pop
cmp
add
add
inc
add
lret
sarl
aaa
cwtl
jl
aad
sub
xor
lea
or
movb
ja
pop
scas
xor
addl
add
sbb
sbb
adc
fnstcw
cmc
and
or
loopne
sbb
in
mov
jle
lods
rorb
add
pop
adc
xor
and
rolb
loop
xor
outsl
inc
add
jns
test
cmc
push
ror
adc
add
rolb
add
inc
add
xchg
pop
mov
push
mov
sldt
mov
adc
mov
dec
lahf
addl
adc
xchg
inc
add
pop
popa
add
out
add
into
daa
testl
push
hlt
or
das
mov
out
add
in
mov
stos
out
sti
fnstenv
lock
inc
add
add
dec
repnz
pop
xor
mov
add
xor
addb
js
in
dec
notb
mov
add
xor
add
and
xor
test
inc
add
lea
add
push
addb
addb
add
incb
loope
aaa
pop
loopne
out
mov
add
add
add
adc
xor
or
or
add
push
xor
or
pop
movsl
les
adc
idivb
decb
test
popf
out
repz
loope
xlat
xchg
pop
imul
add
add
into
or
mov
adc
add
daa
ja
and
mov
jl
mov
dec
sbb
loopne
add
enter
add
add
pop
xor
add
ljmp
lcall
icebp
lods
fcmovnbe
js
fs
cmp
or
inc
add
movl
cmp
repz
inc
add
xor
add
jne
mov
xchg
pusha
add
sbb
lods
dec
jle
add
outsb
pop
and
sub
in
arpl
mov
add
mov
icebp
stc
sarl
fstps
push
xchg
out
aas
sbb
jns
out
imul
sbb
cmp
add
push
xor
pop
sub
add
dec
pop
jb
loope
add
adc
les
lds
mov
in
stos
scas
test
push
sbb
je
add
sti
ljmp
add
push
outsl
clc
push
mov
shrl
xor
fiaddl
mov
add
les
jg
xchg
pop
loopne
push
js
repnz
xchg
or
add
lahf
imul
pop
idivb
test
fsubr
dec
aam
add
push
inc
add
enter
imul
loopne
cmp
or
imul
jno
adc
addl
outsl
lcall
pushf
inc
add
add
into
cmp
negl
stos
sub
ljmp
roll
hlt
mov
xchg
test
adc
xchg
ds
add
xchg
sbb
outsl
push
mov
inc
add
iret
and
test
add
xchg
and
pushl
add
ja
out
ja
pop
sub
loop
add
mov
add
sbb
iret
adc
lods
shlb
aas
scas
pop
mov
cmpsb
loop
add
add
imul
inc
add
add
cmpsl
xchg
dec
cwtl
mov
rorl
mov
add
add
pop
sub
or
ret
push
out
or
xchg
cmp
sbb
arpl
xrelease
xchg
cmp
add
add
es
or
testb
cmp
out
dec
int
int
add
jbe
add
and
xchg
add
in
xor
adc
movsl
or
jmp
aad
cli
fisttpl
clc
inc
add
push
test
xor
out
rorl
or
add
dec
dec
roll
jno
lcall
xor
add
add
sti
outsl
rclb
add
add
test
adc
mov
pop
cmp
addb
add
add
and
scas
fnstcw
xor
xor
push
clc
push
loop
jb
push
addl
add
mov
add
insb
inc
add
jg
add
lcall
cmp
lret
add
ja
add
sbb
and
push
test
jo
outsb
dec
mov
dec
lods
out
negl
add
or
out
add
cld
inc
add
mov
mov
out
daa
ds
adc
scas
aaa
add
sbb
mov
mov
mov
add
jmp
hlt
pusha
add
push
lahf
xchg
mov
dec
or
push
or
bound
shrl
inc
add
or
shlb
add
add
add
xlat
adc
add
imul
xchg
sbb
add
or
mov
or
add
das
aam
add
mov
xor
testb
or
dec
pop
mov
lods
bound
and
outsl
out
gs
ds
add
adc
dec
mov
push
add
in
mov
jne
add
movl
xor
out
xchg
jbe
jecxz
clc
mov
addl
mov
jl
add
sbb
outsb
aad
add
dec
mov
pop
add
lret
popf
sub
add
sti
scas
mov
std
push
je
add
inc
add
add
mov
or
xor
sub
add
aaa
cltd
roll
jge
add
and
loopne
xchg
ss
pop
or
xchg
mov
add
add
cwtl
mov
outsl
pop
icebp
out
pop
lds
int
addb
insl
mov
lret
add
jns
mov
add
mov
test
cmpsb
cmp
aam
and
cli
push
leave
inc
add
pop
fdivr
int3
sub
push
jae
or
int
add
data16
add
scas
fcompl
lret
pop
mov
inc
add
inc
add
pop
jp
cmp
outsl
push
ret
imul
add
in
in
ret
add
add
hlt
icebp
popf
dec
add
dec
and
es
cmc
jne
add
inc
add
xlat
dec
mov
fwait
mov
push
daa
inc
add
jecxz
jecxz
out
push
sub
scas
adc
add
mov
sub
push
and
adc
enter
mov
pop
inc
add
aaa
shll
pop
add
add
cmpsb
pop
test
pop
jae
mov
add
mov
or
das
fsubr
arpl
adc
add
push
leave
leave
jns
jae
jnp
bnd
int3
arpl
adc
add
and
nop
jo
mov
gs
add
add
or
in
gs
push
pop
mov
pop
jl
aaa
daa
movl
add
and
pop
dec
movsb
adc
and
pop
mov
mov
out
hlt
cmpsl
bound
sti
sbb
inc
add
in
add
sub
xchg
mov
fsubrp
clc
sbb
iret
cmp
enter
xlat
enter
mov
sub
cmp
add
ret
cmpsb
jge
pop
mov
add
popf
stc
sysenter
cld
icebp
std
sub
sahf
push
movsl
mov
call
mov
mov
add
jge
add
push
add
or
out
sbb
add
pusha
add
add
pop
lret
lcall
mov
add
sti
pop
mov
add
pop
incb
add
sub
loope
rolb
fnstcw
cmpsl
roll
out
add
jno
jb
in
push
movsl
cmc
adc
xchg
sbb
iret
push
mov
adc
add
jp
xor
or
push
pop
dec
mov
test
loope
pop
jb
or
add
lahf
fldenv
xor
and
pop
clc
push
add
push
leave
and
and
or
mov
aas
mov
push
nop
mov
daa
mov
mov
fdivl
jge
cmp
pusha
add
add
xchg
jmp
cwtl
lods
inc
add
addb
leave
dec
fwait
add
mov
cmpsl
jb
add
add
push
inc
add
add
add
popf
stos
adc
xor
fsubrs
addr16
xor
add
add
add
add
sub
aaa
push
jae,pn
add
pop
insl
ja
and
lahf
sbb
add
mov
test
dec
push
test
cmp
mov
mov
icebp
push
mov
add
mov
fwait
daa
xchg
das
shll
stos
fidivl
ss
push
clc
popa
add
xor
add
add
lock
mov
in
lret
mov
push
add
hlt
icebp
mov
std
xchg
divl
int
and
je
xchg
test
repnz
push
xchg
arpl
dec
and
or
jae
cmc
xchg
lds
jb
loop
mov
jmp
jge
cmpsb
pop
addb
mov
popl
nop
push
ds
add
mov
add
clc
insb
pop
in
and
adc
imul
addb
add
add
movl
sbb
cld
ret
loopne
add
pop
mov
add
add
cmp
mov
mov
outsl
stc
out
imul
add
mov
jns
cmp
push
out
mov
mov
mov
gs
cmpsl
and
dec
je
add
pop
add
cld
mov
je
lea
sub
shll
or
and
xor
mov
xor
jg
add
dec
add
xchg
xchg
xor
add
addl
fcom
stos
pop
adc
cwtl
mov
add
inc
add
add
loopne
add
mov
sbb
sbb
add
dec
test
cmp
scas
push
add
out
test
sub
adc
inc
add
mov
inc
add
or
out
rcrl
push
mov
add
sbb
mov
add
sub
out
in
adc
add
ljmp
xor
ret
add
stc
pop
add
push
stos
dec
jnp
lods
xchg
daa
dec
and
in
add
push
mov
cmp
clc
mov
sub
pop
scas
lds
xlat
lds
int
in
mov
movsl
outsl
addr16
jno
lahf
pop
stos
arpl
popf
or
popf
aam
pop
repz
pop
shl
xchg
lods
or
inc
add
enter
fsubr
jne
outsl
fiadds
add
or
pop
cltd
ret
add
scas
xor
push
addl
fwait
cmp
test
and
icebp
pop
nop
dec
fld
add
add
inc
add
xor
shlb
or
mov
add
rcll
aad
or
hlt
mov
sub
add
sub
ljmp
add
add
dec
aas
stos
fs
arpl
dec
lret
add
xor
popa
add
bound
mov
push
xchg
adc
mov
fsubs
roll
dec
mov
fisttpll
add
int
enter
loopne
sub
dec
xchg
loope
push
mov
je
sub
add
jne
out
mov
lods
mov
mov
mov
adc
add
pop
xchg
std
pop
inc
add
jnp
inc
add
cli
cmc
outsb
sbb
inc
add
add
add
test
mov
ljmp
lds
mov
jno
mulb
add
clc
adc
and
imul
add
fstl
cmp
fdivl
fisubrs
xchg
ljmp
add
icebp
movl
out
mov
cmp
mov
mov
add
or
in
add
push
loopne
inc
add
out
push
pop
add
test
loopne
ds
and
sub
stc
sbb
xchg
cmp
test
ja
lods
jo
inc
add
add
mov
lret
sub
push
repnz
ffree
add
and
inc
add
pop
into
push
out
sahf
fistpll
leave
inc
add
dec
idivb
push
mov
or
das
cmp
mov
xor
jnp
in
lock
xchg
or
add
add
movb
cmp
sub
add
add
loopne
add
lea
shlb
lret
sti
outsb
cvtdq2ps
lock
xchg
or
movsb
lods
rolb
pop
inc
add
inc
add
sbb
add
add
inc
add
add
cltd
call
sbb
dec
cmp
adc
lock
lods
je
lahf
push
add
movb
into
pop
mov
dec
aas
inc
add
cmpsb
cld
mov
jmp
pop
push
dec
pop
adc
add
jge
xor
leave
dec
int3
test
push
mov
cmc
in
aad
add
scas
xor
dec
stc
je
icebp
xchg
enter
insl
leave
jno
add
fcom
sub
xor
sarb
adc
push
out
dec
cmpsb
sub
fidivl
rolb
pop
lcall
mov
xchg
mov
stos
cmp
gs
and
fildl
add
xor
add
mov
arpl
xchg
out
cmp
mov
addb
les
loopne
mov
fiadds
add
pop
fists
scas
push
xor
pop
loop
add
mov
lods
loope
pop
add
mov
jmp
or
cmp
mov
jb
add
dec
sub
pop
faddp
add
sub
iret
xchg
imul
add
call
add
add
outsb
mov
out
fisubrs
insl
hlt
push
iret
mov
test
rolb
lret
daa
arpl
mov
scas
inc
add
xchg
popf
std
movsl
jnp
add
mov
inc
add
pop
mov
add
sbb
add
data16
mov
add
add
jmp
fbld
xchg
jne
cmp
add
repnz
push
aam
cmp
mov
out
dec
mov
mov
aam
div
fwait
mov
lods
adc
jmp
add
ja
cld
mov
dec
inc
add
add
add
xchg
dec
hlt
ss
insl
cmp
adc
test
cmp
push
jbe
and
insb
or
imul
ljmp
push
std
cmp
movl
add
test
xlat
cmp
add
add
pop
nop
dec
xchg
sbb
icebp
in
loopne
xor
inc
add
fistpl
dec
mov
xchg
decl
mov
les
loope
cmpsb
clc
ljmp
jge
and
sbb
jl
add
add
lahf
sub
call
add
loopne
add
inc
add
dec
mov
stc
sbb
mov
lret
adc
jae
dec
addl
sub
inc
add
out
xchg
in
add
or
and
call
xor
es
int
mov
add
dec
push
add
cwtl
ret
add
add
inc
add
pop
jnp
int3
cmp
add
mov
xor
popl
push
push
jge
push
add
mov
mov
mov
pop
xchg
pop
add
add
repz
mov
add
scas
rorl
sbb
sub
imul
push
fwait
xchg
rolb
dec
movb
adc
ja
push
xchg
inc
add
inc
add
repz
movl
bound
mov
mov
add
sub
fisttpll
sbb
and
cli
shl
push
xor
add
ret
add
and
aam
bound
out
pop
or
ja
adc
add
clc
cld
cmc
les
fiadds
add
add
cwtl
adc
push
xchg
mov
outsl
push
pop
xchg
cmp
add
dec
xchg
stos
ret
add
lret
add
xor
pop
jg
jno
xchg
jecxz
add
popl
jb
inc
add
add
cwtl
addb
lret
std
and
ljmp
clc
dec
cmp
pusha
add
ljmp
and
sub
gs
jbe
outsb
in
mov
movb
add
lods
cmpsb
xchg
add
mov
add
add
add
sbb
xor
adc
addb
aad
test
jbe
sbb
sbb
bound
pop
loopne
test
sbb
bound
shll
nop
inc
add
pusha
add
jnp
jecxz
out
outsb
adc
adc
add
xchg
xor
add
xchg
mov
add
in
pusha
add
mov
movb
add
scas
loop
das
or
sub
leave
js
pop
pop
mov
inc
add
add
push
add
xor
lret
mov
mov
push
cmpsb
insl
or
mov
sbb
call
sti
lret
movl
mov
nop
aad
mov
imul
jo
mov
daa
icebp
xlat
inc
add
xchg
lret
lds
xchg
mov
push
clc
lret
ds
xor
sub
lds
sti
jmp
jp
dec
push
lods
inc
add
mov
cld
aam
call
add
push
cmc
stc
sub
add
add
and
mov
pop
mov
push
sti
addb
pop
pop
add
fldenv
divb
jmp
add
add
fldl
sub
das
nop
push
fdivrl
leave
mov
add
inc
add
and
lahf
rolb
add
out
inc
add
ret
add
fsubr
pushf
pop
scas
cmc
arpl
aaa
adc
lds
jl
dec
sub
aam
lret
popa
add
add
and
ret
hlt
jnp
add
mov
mov
add
pop
add
mov
add
push
adc
jg
lds
ljmp
movsb
jae
xor
fmuls
out
add
push
pop
jp
leave
jle
push
lock
dec
gs
daa
xchg
sbb
lock
and
pop
push
dec
imul
aam
shll
icebp
add
mulb
daa
lods
mov
sub
scas
stos
ret
add
add
xchg
jo
fdivs
and
cmpsb
sbb
sub
aas
pop
dec
mov
push
iret
inc
add
arpl
or
xor
in
push
sub
mov
add
cmp
push
push
rolb
add
mov
cmpxchg
add
dec
call
add
inc
add
repz
loope
add
xchg
repz
les
push
addl
and
rcll
or
js
push
add
addl
icebp
test
mov
cmc
test
xor
adc
add
add
mov
add
and
or
add
dec
daa
pop
iret
dec
stc
int3
or
xchg
xor
mov
lret
add
movsb
sbb
push
lahf
push
iret
jmp
add
gs
into
js
cmp
add
clc
fdivrs
inc
add
push
roll
or
addl
cltd
faddl
push
push
sub
repnz
xchg
lods
adc
adc
add
fmul
and
pop
mov
mov
inc
add
test
std
inc
add
mov
out
f2xm1
ja
inc
add
out
dec
js
xchg
dec
or
sub
jge
mov
xchg
xchg
inc
add
adc
pop
ret
and
pop
sbb
loope
je
cmp
int3
jge
mov
adc
mov
add
mov
add
add
add
adc
mov
add
sub
mov
dec
lcall
xchg
pop
add
xchg
stos
enter
mov
pop
mov
dec
test
bound
adc
icebp
rorb
mov
roll
add
out
cmpsl
cmpsb
or
sbb
xor
ja
ljmp
add
sub
ljmp
mov
cs
add
cmp
add
xor
inc
add
addb
ret
jns
add
clc
sbb
add
add
je
sbb
lds
lahf
insl
dec
daa
addb
cmp
add
add
sub
add
les
lret
jo
jge
cmp
add
lret
add
int3
repz
or
mov
push
loopne
add
pop
in
add
mov
cli
mov
push
call
mov
inc
add
add
sti
and
jo
cs
loope
pushf
xor
cltd
clc
inc
add
pop
xor
xor
add
push
or
mov
cwtl
jle
pop
jmp
mov
rcr
push
add
cmp
xchg
xor
out
stos
inc
add
mov
pop
push
push
out
js
out
mov
adc
add
mov
cmp
ret
add
push
or
fsts
into
xchg
aas
pop
adc
add
out
xchg
daa
in
add
sbb
hlt
dec
sbb
addl
jbe
ljmp
jg
pop
pop
call
clc
ja
in
daa
je
pushf
adc
add
add
cmp
add
adc
jg
sbb
cmp
add
movl
imul
add
test
add
testb
pop
in
xchg
xor
pop
xchg
jb
and
lods
xor
and
rol
add
add
mov
jnp
in
fistps
add
fbstp
mov
popa
add
adc
test
negb
push
cltd
clc
add
cwtl
mov
movb
add
dec
push
lea
add
cmpsl
cmp
mov
push
jns
fcmove
push
ja
mov
add
insl
call
fidivrl
inc
add
push
cmp
dec
add
or
out
adc
add
sbb
lds
push
mov
stos
loopne
dec
xchg
into
xchg
or
rep
adc
repz
add
jbe
fucomp
pusha
add
daa
xor
ret
add
test
mov
inc
add
iret
inc
add
xchg
sub
cmp
mov
dec
lss
lcall
add
adc
cli
mov
xor
push
das
loope
lahf
aam
push
and
add
cmp
cmpsl
or
bnd
repnz
leave
cwtl
xor
xor
xor
xlat
or
cld
jne
mov
cltd
xchg
jle
or
gs
sbb
add
test
dec
inc
add
xlat
data16
inc
add
popf
aaa
loopne
scas
addl
cmpsb
arpl
lods
lahf
cmp
inc
add
lret
pusha
add
pop
push
je
dec
xor
add
or
repz
cmpsl
fwait
int3
mov
push
lahf
adc
scas
out
test
pop
inc
add
pop
pop
in
ds
clc
decb
add
add
mov
push
nop
push
outsl
test
sbb
nop
cltd
mov
mov
std
xchg
push
sbb
imul
stos
dec
popa
add
mov
pop
loope
and
movb
mov
ret
add
add
mov
jo
add
sbb
xchg
bound
pop
and
mov
add
push
add
xor
in
mov
outsb
pop
mov
ja
sub
outsl
mov
inc
add
adc
add
inc
add
jnp
data16
xor
xor
add
mov
outsb
cwtl
adc
data16
daa
aam
xchg
aad
add
loop
cmp
jmp
xor
outsl
inc
add
sub
imul
xor
add
gs
mov
inc
add
add
in
scas
mov
popf
mov
cmpsl
fisubl
or
bound
sar
push
std
push
push
js
xor
ss
inc
add
sub
add
mov
add
lods
addl
pop
jp
jge
test
dec
mov
cmp
add
mov
das
test
pushf
ret
add
xchg
jnp
movsb
lcall
xchg
addl
cltd
inc
add
dec
mov
in
decl
cmc
nop
cltd
insl
ficoms
stc
mov
lock
stc
test
mov
adc
outsb
std
cltd
sbb
or
add
jecxz
add
repz
inc
add
and
mov
add
add
add
adc
lea
negb
shrl
loopne
jmp
add
dec
jb
push
lret
add
add
daa
adc
add
add
add
mov
out
add
cmpsl
jns
je
int
stos
mov
rcll
add
outsb
push
ss
add
dec
insl
stos
pop
insb
popf
jle
pop
add
add
jge
jg
imul
leave
push
lock
pushf
stc
xor
add
pop
mull
insl
jne
jno
add
std
enter
sub
add
mov
add
test
add
mov
das
cld
enter
add
xchg
cli
adc
addb
lahf
mov
imul
xchg
pshufw
fadd
add
add
sub
mov
push
cld
sub
xor
add
mov
jecxz
dec
jae
das
fwait
inc
add
xchg
xchg
cmp
add
ljmp
imul
out
rorl
cmp
mov
inc
add
stos
and
mov
movl
scas
jmp
outsl
addl
add
inc
add
inc
add
push
testb
into
push
add
aad
aas
loopne
or
rcrl
stos
mov
cmc
addb
add
add
sub
add
lret
xchg
sbb
add
mov
inc
add
lcall
jnp
xchg
jg
dec
push
cmp
insl
sti
pop
push
push
mov
cltd
rcll
or
out
dec
jmp
mov
or
xchg
in
mov
xchg
lcall
add
jb
dec
testb
addb
and
pop
lods
in
cmp
aad
add
cmp
add
fsubs
add
pop
add
jae
jg
jbe
xor
jecxz
pop
insb
imul
pop
mov
mulb
gs
cld
mov
and
cmpsl
sarb
js
xchg
sbb
add
xor
pushl
sahf
push
inc
add
jmp
mov
pop
adc
aas
xlat
mov
icebp
sbb
inc
add
scas
pop
push
jecxz
fnstsw
in
jecxz
push
fsubrp
adc
mov
pusha
add
movsl
jg
mov
xlat
sub
dec
cmp
aam
addb
mov
lods
addl
shrb
mov
mov
cmp
imul
add
add
cmp
jae
add
push
or
add
pop
push
rcrl
leave
in
movl
xchg
lcall
stos
cld
push
cs
add
in
adc
aad
mov
adc
bound
sarl
das
push
test
and
dec
call
jno
cmpsl
inc
add
out
ljmp
push
adc
js
sub
lods
xor
clc
push
shlb
push
dec
hlt
inc
add
cwtl
movsb
roll
add
out
cmpsl
xor
fbstp
repz
add
mov
fdivl
add
jle
cmpsl
outsl
xchg
inc
add
jmp
sbb
add
mov
je
mov
test
stos
addr16
pop
sahf
pop
test
mov
add
sub
aad
sbb
test
xchg
pushf
fs
fcomps
cmp
add
lret
sub
and
and
add
xchg
lock
push
repz
ja
add
jg
dec
loop
out
xor
add
inc
add
push
ds
jne
int
add
sub
add
add
add
add
and
cltd
jmp
popa
add
out
ret
add
fs
pop
in
bound
sbb
jns
push
fistps
sbb
stos
push
add
inc
add
loopne
xchg
hlt
frstor
sbb
int3
int3
jnp
add
repnz
add
lcall
and
daa
or
addl
sub
mov
or
dec
loop
loopne
add
add
incl
jl
dec
dec
push
bound
out
cwtl
bound
fistpll
out
add
pop
xchg
das
push
add
xchg
into
push
push
add
mov
jge
icebp
jg
cmp
addb
roll
int
add
addb
imul
pop
mov
add
adc
gs
fstl
insl
push
add
cmp
pop
fcomp
cltd
lods
call
mov
and
addr16
push
or
hlt
bound
adc
icebp
cli
mov
ss
add
addb
rolb
test
inc
add
dec
lret
xor
divb
fidivs
add
les
ret
add
jp
shlb
or
add
jle
in
dec
movl
clc
cmpsb
call
cmp
add
loop
popf
repz
mov
rorl
add
pop
loopne
cltd
test
adc
fdivrs
pop
clc
sub
lret
pop
loopne
fsubr
and
adc
sarb
outsb
sub
xchg
xlat
jb
test
mov
pusha
add
lods
scas
add
ret
add
mov
sarl
mov
rcrl
test
lahf
cs
add
fwait
jge
xchg
addb
mov
aam
jp
pop
jle
add
add
add
add
iret
inc
add
mov
insl
loope
add
jns
mov
mov
dec
jmp
add
jg
adc
ja
sub
icebp
jne
inc
add
jmp
xlat
lret
xlat
xor
lret
dec
into
test
dec
push
popf
add
push
adc
sub
jbe
addl
mov
lds
add
ret
fcomps
loope
add
aaa
fistl
movl
bound
mov
and
push
push
leave
unpcklps
loop
test
addl
je
dec
adc
add
pop
mov
sbb
fst
aaa
test
daa
rcrl
add
inc
add
xor
shlb
pop
sbb
add
and
sbb
sbb
fisubs
mov
inc
add
pop
cs
mov
mov
add
insl
cmp
lock
mov
movl
jmp
push
test
mov
dec
data16
incb
xor
add
add
pop
cmpsl
out
lret
add
mov
xchg
roll
dec
cmp
xlat
cmp
shll
add
mov
mov
add
mov
enter
daa
mov
rcr
pop
fistl
fnstsw
push
arpl
pop
jns
add
mov
mov
cmpsb
inc
add
clc
cs
mov
rolb
leave
mov
inc
add
mov
xor
pusha
add
test
push
jno
jns
sub
jb
add
popl
add
xchg
jnp
ja
rcrb
out
cmpsl
xchg
mov
fsub
imul
push
lret
stos
xchg
xor
aaa
outsl
or
test
shrd
fwait
xor
mov
ljmp
add
mov
inc
add
bound
mov
fcomp
inc
add
add
out
xchg
add
test
push
mov
jmp
fldt
jnp
add
inc
add
adc
fcomp
movsl
pusha
add
loop
addl
mov
mov
jmp
rcrl
add
fistps
ja
add
lods
and
add
add
add
cs
add
add
in
fbstp
add
dec
sbb
ja
popf
fnsave
dec
shrl
nop
hlt
jae
dec
adc
pop
movsb
lcall
and
mov
push
adc
jp
lahf
mov
jge
repz
aad
mov
sub
and
test
cmp
mov
jge
add
push
addb
repz
inc
add
mov
sbb
inc
add
std
lods
incl
les
push
roll
add
sbb
hlt
cltd
fs
add
add
icebp
pop
pop
add
nop
jle
test
fldenv
out
add
ficoml
add
xchg
addb
add
stos
movsl
iret
xchg
bound
fdivrl
test
push
and
xchg
push
sub
ss
push
push
jge
sti
xlat
imul
les
testb
dec
mov
movl
cmp
adc
mov
and
fimull
stc
xor
cmc
adc
dec
and
add
aaa
mov
cmpsl
sub
add
mov
sarl
imul
cmpsl
dec
int
add
add
push
mov
adc
add
xchg
cltd
sbb
rcrb
shll
add
or
push
xchg
dec
push
push
mov
add
cmpsl
push
testb
dec
push
adc
pop
dec
xchg
mov
mov
lcall
int3
test
mov
and
jne
stos
push
cmp
mull
test
add
sti
add
ret
add
pop
push
jecxz
mov
sahf
stos
test
psrlq
add
movsl
test
addl
fsubrs
inc
add
fstp
in
mov
push
mov
inc
add
movsb
mov
sub
add
cmp
mov
out
bound
jae
arpl
loop
inc
add
add
cmp
add
popa
add
pop
fwait
xlat
xchg
shrb
jo
dec
adc
adc
add
add
outsl
inc
add
lret
or
dec
loop
sbb
aaa
push
lcall
fldt
lahf
sub
pop
pop
and
add
sbb
std
push
punpckhwd
xchg
xchg
nop
insb
jl
add
testl
notl
dec
add
lds
dec
ds
fimuls
outsl
xchg
mov
xchg
daa
leave
push
mov
xchg
jle
adc
or
add
add
cmp
pop
push
nop
or
fwait
pop
fnstsw
xchg
fldl
in
insb
stc
fadds
pusha
add
xor
aam
xchg
xchg
roll
mov
out
mov
add
dec
repnz
out
test
js
mov
cmp
dec
adc
mov
pop
ljmp
add
push
inc
add
add
stos
mov
lds
ds
das
jl
and
mov
xchg
mov
add
pop
sub
mov
mov
lods
and
ja
mov
imul
leave
fisttps
adc
lcall
mov
pop
cmp
mov
xor
mov
lock
push
mov
xchg
cmp
mov
add
pop
push
jp
add
and
in
push
mov
inc
add
dec
and
out
cltd
push
add
sub
add
mov
jb
or
or
add
sbb
ss
movsl
or
arpl
pop
ss
add
pop
ss
daa
dec
mov
sub
ljmp
rolb
inc
add
add
add
push
into
and
cmp
add
xor
out
xchg
mov
adc
lods
out
mov
sub
add
call
popa
add
lods
into
addb
ds
inc
add
jl
add
aad
nop
fildll
xchg
add
pop
or
lcall
addb
jmp
movl
add
addl
sbb
addr16
add
or
lret
adc
fsts
pop
add
lds
cwtl
addl
inc
add
add
mov
xchg
lret
xor
mov
add
add
popf
sub
clc
or
movsl
test
xor
pusha
add
add
enter
stc
in
outsb
imul
out
out
pop
mov
enter
lock
cmc
lcall
movsl
push
mov
popl
cmpsb
pop
push
jae
or
addr16
jo
add
or
aad
je
pop
in
shr
lahf
xchg
inc
add
xor
icebp
addb
addb
pop
nop
dec
daa
lods
loopne
jle
xchg
push
mov
mov
jmp
cmc
bswap
and
stos
xchg
rorb
add
mov
decl
xchg
test
xchg
imul
mov
mov
stc
mov
and
mov
stc
cwtl
pop
xor
add
sbb
add
add
add
add
push
add
sub
add
les
insb
divb
mov
lret
je
or
add
sbb
fs
int3
xor
adc
call
mov
pop
add
inc
add
add
add
in
sub
test
adc
sbb
pop
popa
add
adc
addl
or
jno
xchg
arpl
push
xchg
mov
cmp
in
jno
add
lea
inc
add
je
rolb
add
inc
add
and
lods
leave
inc
add
into
inc
add
out
jge
inc
add
jno
add
xor
add
add
and
add
out
jmp
pop
jl
add
pushf
or
enter
nop
clc
mull
or
jle
xchg
xchg
in
es
inc
add
xchg
xor
push
xchg
xor
pop
loope
outsb
fnstsw
fs
mov
rolb
add
jl
sti
lock
mov
add
arpl
fcomi
push
rorl
addl
or
jb
jle
or
inc
add
and
sub
add
loope
fildl
dec
sub
and
sahf
and
test
mov
inc
add
shll
jg
roll
out
insb
adc
sti
fildl
add
mov
add
add
roll
xchg
mov
pop
lods
mov
fsubl
push
lret
sbb
out
cmp
fwait
loopne
or
ljmp
jge
aam
lock
lods
push
pusha
add
aas
pushf
mov
mov
add
into
lods
mov
xor
mov
xor
pop
mov
cmp
insl
lcall
test
lret
lret
mov
pop
jmp
movb
mov
xor
add
sub
add
mov
jecxz
js
dec
int3
add
test
lret
addb
mov
je
pusha
add
mov
nop
insb
mov
and
pop
add
cltd
or
test
shl
ret
add
mov
test
ret
popa
add
jo
pop
cmp
or
xor
add
add
pop
add
lods
jge
dec
ljmp
inc
add
mov
aas
movsl
sbb
les
xchg
jp
or
lock
add
jmp
sub
mov
add
add
call
in
clc
mov
add
test
test
imul
xchg
addb
loop
repz
add
cmp
xchg
jns
jg
mov
ljmp
ljmp
xor
stos
mov
inc
add
mov
add
add
cld
sti
push
jmp
cld
or
lcall
cmp
add
rclb
pop
jmp
inc
add
and
stc
repnz
cmc
xlat
outsb
push
add
aam
repz
mov
daa
cmpsl
test
xor
xchg
fildl
bndstx
pop
sub
push
out
rolb
jecxz
sti
arpl
xrelease
xor
aam
dec
and
sbb
movsb
fnstcw
add
sub
hlt
and
repnz
push
mov
mov
dec
leave
jp
add
or
add
pop
add
push
xor
ret
add
and
ret
add
lret
std
aam
pop
or
test
pop
leave
adc
sub
adc
ja
mov
popa
add
add
add
lea
lret
mov
mov
add
xor
cltd
inc
add
jae,pn
lods
cmc
lret
popf
jns
inc
add
xchg
and
inc
add
movl
cli
loope
dec
pop
lea
jo
adc
push
mov
jmp
push
int3
sub
pushf
adc
lahf
pop
cmp
outsl
addl
movl
add
fwait
stos
movb
adc
mov
cmp
insb
in
or
add
inc
add
je
or
insb
test
add
nop
adc
add
push
loopne
adc
jae
loope
sub
add
pop
loope
add
push
push
fadd
add
inc
add
aas
lods
mov
and
dec
mov
xchg
addl
ja
pop
mov
data16
call
sub
xchg
js
roll
jle
jbe
add
push
movsl
stos
ds
add
mov
lods
pop
cltd
mov
pusha
add
ud1
fbstp
add
pop
out
add
fstps
scas
sub
mov
xchg
cmc
movl
pop
and
mov
and
xchg
sbb
jnp
add
popa
add
pop
iret
jns
ret
jae
add
add
int
addl
les
adc
jbe
mov
add
sbb
mov
or
sub
add
out
adc
dec
ja
fs
cs
inc
add
mov
lcall
xor
mov
add
xor
add
mov
mov
js
add
pop
sbb
addr16
add
jmp
lret
mov
xchg
addb
add
daa
hlt
xchg
hlt
cli
aam
add
dec
add
addl
xchg
jo
mov
mov
cmpsl
and
add
xor
sub
mov
and
mov
sub
enter
add
cmp
mov
mov
add
test
out
mov
add
inc
add
jne
add
jno
cltd
mov
int
mov
xchg
pop
add
int
mov
push
add
mov
mov
add
pusha
add
and
jge
mov
pop
pop
add
add
scas
xor
push
add
cmpsb
out
mov
xchg
das
popa
add
jne
out
addl
aaa
das
push
add
add
movb
add
les
mov
rcrb
aad
push
add
and
das
sbb
fld
add
packuswb
xchg
push
mov
lahf
pop
jns
mov
mov
mov
add
xchg
dec
imul
and
test
push
add
or
pop
add
das
mov
mov
push
loop
mov
mov
addb
adc
mov
mov
mov
adc
lds
and
in
cmp
add
cmp
inc
add
sub
jl
insb
nop
pop
out
add
dec
sub
shrl
and
dec
and
fdivrp
xor
in
bound
inc
add
bound
iret
sbb
push
fs
xor
cmp
mov
mov
cmp
jmp
cs
aam
add
bound
scas
shl
or
ds
add
fidivs
push
jl
jge
pop
test
aas
mov
jo
mov
rolb
decl
mov
mulb
in
lcall
adc
lret
add
fsubs
out
adc
adc
add
and
cwtl
jmp
add
push
push
sub
sbb
cmp
and
mov
addr16
mov
add
or
pop
jne
push
repz
push
or
incb
ljmp
add
push
cs
xor
add
add
dec
iret
cli
push
adc
mov
scas
cwtl
addb
jns
jno
sub
loopne
in
addb
jbe
add
mov
add
add
add
lahf
pop
fcmovu
sbb
gs
aas
fistpl
in
mov
dec
lret
push
add
inc
add
or
nop
xor
mov
sub
fnstcw
add
cmp
lahf
iret
or
sub
or
cmp
mov
add
sub
dec
mov
dec
mov
sub
xchg
repz
xchg
xor
in
ss
imul
dec
and
out
aad
xor
fldl
add
popa
add
lret
jmp
xlat
int3
pop
cmpsb
fmul
leave
push
pop
mov
addb
mov
jno
roll
cmpsl
pop
inc
add
hlt
dec
mov
mov
adc
outsl
xor
add
sbb
jno
add
sub
inc
add
xor
cmp
jecxz
or
divl
sub
sub
sub
and
imul
addl
push
jle
adc
lds
je
add
roll
push
rcrb
mov
xor
mov
adc
add
cmp
add
add
ror
adc
pop
ss
fs
xor
dec
rolb
mov
xchg
dec
push
jno
add
ret
mov
xchg
loope
outsb
pop
rclb
jae
pop
dec
pushf
pop
mov
pop
in
pop
sub
push
mov
add
xor
bound
out
dec
loope
out
pop
or
shlb
add
addl
stos
cmc
addb
push
xchg
and
cmp
add
mov
imul
or
in
notl
add
outsb
stos
xor
mov
and
dec
push
addb
addl
adc
or
inc
add
dec
sub
add
lods
xor
fwait
iret
les
in
add
add
testl
add
adc
enter
add
ficoml
pusha
add
add
xor
test
push
stos
push
sub
add
dec
xchg
sbb
cmc
mov
sub
sti
and
rclb
or
cmp
test
jno
and
pop
ja
dec
pop
loop
test
scas
jp
xchg
cwtl
mov
pop
rolb
test
pop
lret
loope
add
repz
add
and
and
popf
in
adc
jecxz
push
xor
xchg
push
mov
pop
addl
ss
pushf
loope
add
adc
pop
cli
faddp
add
add
add
in
sbb
add
mov
xor
add
pop
pop
pop
add
lds
arpl
mov
in
testb
add
add
lods
xor
push
call
mov
mov
xchg
push
pushf
xchg
push
mov
pop
aas
decb
xor
inc
add
pop
pop
out
cwtl
cmpsb
cmp
mov
je
ds
addb
ja
jmp
mov
adc
adc
adc
out
jl
int3
fistpl
pop
mov
add
les
repnz
add
jae
or
es
push
add
xchg
int3
xchg
loop
sub
add
shl
bound
sahf
xchg
pushf
int3
call
lcall
mov
add
cmpsl
pop
sub
mulb
add
gs
ret
add
add
sbb
mov
mov
pavgw
loope
mov
out
in
test
adc
gs
out
ret
add
in
ss
mov
xchg
fmuls
add
bound
out
mov
mov
loopne
add
cmp
add
jmpw
cs
add
add
add
in
add
pop
in
cmp
and
jne
jg
mov
mov
into
lret
sub
movsl
insl
ja
mov
adc
cmpsb
pop
jae
mov
jae
out
cmp
add
fwait
jmp
shlb
nop
mov
and
int3
lea
or
push
lds
mov
push
fs
sbb
or
pop
je
rcrl
repnz
ja
add
add
outsl
mov
xor
xor
xor
xchg
mov
add
ss
sbb
mov
dec
in
push
in
in
inc
add
or
mov
xor
add
jmp
stc
addb
mov
add
pop
scas
nop
mov
mov
inc
add
sub
movb
aad
jns
add
lock
lods
push
add
in
sbb
pop
add
cli
lods
data16
jg
xchg
test
push
add
push
add
xchg
xchg
mov
test
add
imul
add
xchg
jmp
pushf
pop
add
mov
mov
mov
jmp
pusha
add
imul
add
mov
fdivrl
jae
pop
and
and
addb
dec
and
xchg
int
loopne
add
jl
xor
pop
xor
jle
add
pop
mov
hlt
lds
jnp
aad
add
add
cltd
dec
lret
push
add
adc
xor
add
popf
out
mov
jp
add
pop
leave
xchg
xor
xor
lret
push
or
mov
add
mov
add
fwait
mov
cmp
jge
repnz
jl
push
data16
push
ljmp
int
mov
dec
pusha
add
test
dec
adc
enter
mov
insl
in
ret
add
cmc
popf
and
adc
mov
pushf
cs
clc
test
dec
adc
add
xor
iret
jmp
int3
jecxz
cmp
jo
dec
iret
push
mov
iret
test
and
test
sub
push
addl
xchg
push
mov
xchg
mov
push
insl
mov
sbb
mov
dec
lods
rcrb
inc
add
pushf
or
adc
and
xchg
frstor
add
scas
les
stc
push
cmc
fwait
and
and
mov
test
insl
push
adc
divl
add
add
add
ss
cmp
fidivl
movl
xor
scas
mov
add
nop
loopne
mov
inc
add
add
jmp
pop
pop
aaa
lret
inc
add
shll
imul
and
ss
add
insb
add
out
push
pop
lret
jl
iret
xchg
sub
mov
pop
mov
ret
add
xor
addl
lahf
pop
fwait
mov
add
int3
icebp
sub
lcall
dec
pushf
addl
add
xor
jl
mov
lea
add
nop
sub
adc
xchg
cmp
and
pop
add
add
add
bound
and
loope
dec
dec
dec
addb
push
outsl
mov
hlt
mov
rorb
mov
pop
lods
scas
lods
cmp
add
adc
addl
push
out
or
jns
add
es
xlat
movl
jb
dec
enter
add
pop
xchg
scas
push
fildl
ret
xor
pop
push
icebp
jae
push
cmpsb
xchg
jle
add
int3
add
xlat
js
stos
aam
push
mull
mov
inc
add
dec
and
stos
into
ljmp
add
jp
out
repnz
movl
stos
push
add
mov
inc
add
lret
negl
xor
out
add
daa
movsl
mov
add
into
pop
xchg
sub
or
sub
outsl
stos
xchg
hlt
mov
fwait
pop
pop
out
stc
mov
dec
sti
mov
test
sbb
add
cmpsb
dec
mov
add
add
test
insb
or
push
add
fidivs
scas
jae
mov
or
shlb
out
repnz
adc
pop
test
pop
add
pop
gs
jl
push
xchg
sub
pop
pushf
jp
dec
or
cmp
hlt
sbb
add
popf
stc
sub
inc
add
les
popa
add
xchg
mov
cmp
jb
add
xor
xchg
aam
roll
sbb
add
jnp
loopne
outsl
ds
daa
bound
xor
movsl
addl
sub
add
jmp
pop
add
dec
dec
push
out
cmp
cmp
cmp
jl
cmp
inc
add
jb
jle
fs
pop
pop
leave
sbb
mov
sub
add
sub
xor
pop
fdivs
out
test
add
mov
in
movb
addb
sbb
add
lock
or
arpl
popf
push
lock
aam
xor
add
mov
mov
aad
lahf
cli
push
add
jnp
ss
add
add
add
cwtl
pop
jge
in
and
add
jmp
int
pop
jb
fnstcw
fldt
inc
add
jl
add
cwtl
ljmp
icebp
divps
cs
pop
and
test
addb
add
mov
add
add
and
push
inc
add
add
test
out
add
fcoms
addb
add
cltd
addb
add
cmc
mov
jo
and
sub
add
push
pop
ljmp
add
add
xlat
inc
add
jp
insb
inc
add
add
jbe
xchg
xor
push
pushf
imul
add
inc
add
jae
xchg
pop
sbb
ja
mov
xor
xor
add
nop
out
stos
xchg
jmp
add
call
roll
movb
push
mov
insb
sbb
add
add
xor
sub
jmp
add
into
inc
add
push
sbb
ret
xor
cld
fsubrl
add
sti
in
daa
pop
xor
adc
lahf
test
add
xchg
leave
fcomip
mov
mov
sub
cmp
add
jmp
add
push
daa
lcall
sbb
adc
dec
nop
fcmovu
pop
cmp
inc
add
pop
mov
gs
add
lock
pop
inc
add
mov
ja
pop
xlat
jbe
add
add
cmp
inc
add
pop
sub
filds
jmp
inc
add
mov
push
sti
sbb
cmp
fs
je
idivb
push
mov
mov
pop
fdecstp
mov
out
es
add
xchg
decb
mov
add
fldenv
jb
pop
pop
repz
test
divl
or
adc
or
add
push
cmp
mov
or
enter
xchg
pop
sbb
xchg
insl
and
int
aad
add
jno
jge
in
cltd
push
idiv
ja
jbe
push
add
jae
imulb
arpl
mov
mov
and
sahf
cmp
into
test
mov
sti
dec
jmp
lock
sbb
xlat
out
scas
imul
inc
add
add
ss
or
repnz
or
pop
inc
add
lret
cmp
gs
add
push
std
into
aam
mov
xchg
outsb
push
imul
sbb
js
add
mov
icebp
mov
cld
mov
pop
insl
icebp
sti
daa
mov
roll
add
inc
add
add
ja
int3
mov
out
loopne
inc
add
rclb
das
outsl
push
sbb
rol
add
add
mov
rorl
sahf
jmp
cmp
add
add
dec
movl
imul
fcompl
bound
lods
or
daa
cmpsb
jecxz
addb
xchg
mov
or
fnstcw
pop
inc
add
repnz
xor
mov
imul
scas
cmc
cmp
pop
stc
xchg
or
mov
cmp
add
stos
leave
pop
into
stos
or
sbb
add
sbb
mov
dec
mov
add
ret
ljmp
lret
push
mov
adc
ret
mov
xor
pusha
add
sub
add
dec
xor
xchg
lock
sbb
sahf
inc
add
fwait
mov
add
js
mov
add
fcomi
pop
sub
add
hlt
lods
or
bnd
mov
fldenv
pop
push
xor
lock
aam
add
fs
xchg
and
addb
cmpsl
bnd
and
leave
movb
sbb
add
add
cs
push
mov
cmp
sub
dec
xor
sbb
imul
add
add
lahf
jg
xlat
sub
xchg
iret
sbb
das
dec
sbb
shlb
jns
cmpsl
addr16
rolb
stos
ja
add
movb
jp
xchg
adc
lods
mov
sbb
outsl
stc
ret
add
sub
jbe
ja
enter
js
adc
jp
addl
push
cmp
add
mov
add
jne
xor
inc
add
lock
movl
dec
cmp
xor
adc
popa
add
lahf
aas
pop
jnp
insl
and
add
lds
jmp
add
negb
add
xor
enter
mov
addb
pop
push
add
mov
scas
aas
in
add
jle
add
add
sub
sbb
cmp
sbb
add
sti
cmp
out
mov
add
sbb
sbb
loop
xchg
mov
out
dec
filds
adc
aam
add
push
aaa
cmp
rcrb
xor
sub
xchg
popl
lret
das
test
dec
and
sub
mov
pop
pop
adc
or
popa
add
add
roll
rolb
daa
aas
pushf
xchg
test
and
adc
das
xchg
or
add
jo
add
imul
addb
xchg
pop
pop
add
add
or
pop
neg
inc
add
ss
jo
jmp
push
jne
mov
push
and
pop
adc
or
lret
and
movsl
call
ljmp
or
lcall
lods
jns
add
rep
jmp
xor
pop
into
mov
add
xchg
adc
add
scas
and
dec
jmp
add
in
rcll
add
iret
xor
mov
je
stos
ret
add
rolb
add
xor
and
pusha
add
jo
lcall
or
scas
arpl
fcoml
sub
dec
cmp
out
inc
add
das
or
ret
std
addr16
and
in
aas
aas
mov
pop
mov
ss
movb
sbb
stc
xchg
mov
mov
push
sbb
add
add
pop
pop
adc
das
out
daa
mov
add
test
and
add
scas
jo
add
jb
lret
push
adc
dec
jecxz
mov
add
pushf
ss
ss
nop
sbb
int
pop
lds
imul
cmp
pop
ss
xor
std
movsl
lret
or
jbe
into
mov
pop
jp
cld
das
insl
sub
insb
fildl
and
addl
call
mov
add
imul
mov
in
mov
negb
sub
push
lock
fs
sti
lods
lret
push
arpl
daa
mov
roll
add
jecxz
outsb
mov
add
adc
add
mov
sbb
fstpl
xor
jo
mov
mov
add
add
push
add
push
add
in
add
test
sbb
pop
int
push
loope
add
ss
add
xchg
jne
clc
repz
xchg
adc
mov
add
add
add
push
mov
or
daa
addb
cwtl
push
into
push
add
jp
in
mov
arpl
into
shlb
ret
jae
daa
jns
loope
add
add
jge
frstor
aaa
test
in
add
jno
stos
je
adc
mov
stos
mov
xchg
test
shrb
mov
add
fistpll
fidivrl
rolb
or
pop
ljmp
sbb
or
push
or
out
xor
dec
lock
lret
add
cmp
movsl
and
inc
add
add
mov
mov
movb
push
mov
inc
add
pop
ret
movb
cmp
ret
add
and
stos
xor
mov
inc
add
scas
push
jmp
in
pop
shl
scas
icebp
roll
cmp
mov
cmpsb
aad
add
stos
xor
mov
iret
shl
fwait
sbb
outsb
cmp
xor
pop
add
fldenv
inc
add
stos
jb
ret
ljmp
push
rolb
add
xchg
pop
push
add
popf
mov
mov
add
xchg
mov
push
iret
out
fists
addb
add
leave
inc
add
roll
addl
jp
add
dec
mov
and
insl
aaa
xchg
addr16
out
pop
rolb
inc
add
pop
add
push
roll
inc
add
jecxz
outsb
addb
loope
push
jnp
fimull
enter
jbe
roll
stos
lea
pop
push
push
jle
out
jg
int
xor
sahf
movsb
pop
mov
lds
cmp
les
pop
movl
adc
add
add
mov
add
mov
add
test
sbb
add
mov
ss
inc
add
add
test
test
aad
jl
mov
mov
test
jae
out
add
or
push
add
scas
cmp
push
negl
mov
fists
adc
or
push
das
mov
mov
jb
jae
repz
in
testb
out
loop
add
leave
lods
pushf
adc
lahf
cmp
inc
add
and
leave
call
sub
add
add
movsb
xor
clc
xchg
push
les
movsl
xchg
mov
mov
bound
mov
cmpsb
xor
fsts
mull
sbb
int
movsb
and
add
ret
add
add
pop
or
sbb
stos
sbb
incl
add
aas
in
std
adc
add
pop
mov
or
add
gs
lods
in
std
xor
jae
repnz
rcl
jns
or
xchg
sbb
mov
mov
testl
pusha
add
cltd
mov
add
or
add
dec
or
push
add
add
jb
out
or
adc
in
or
xor
mov
pop
mov
test
mov
dec
jae
add
push
adc
cmpsb
or
add
add
addl
mov
add
out
jae
dec
push
mov
hlt
shrl
adc
pop
into
push
xchg
mov
push
fsts
dec
int
add
xchg
mov
into
and
movl
pop
jno
add
ret
add
dec
xchg
ss
inc
add
push
cmp
or
inc
add
or
mov
fidivrs
cmp
in
rcrl
js
add
lahf
jb
dec
movb
out
jno
mov
jmp
lret
shrb
test
insb
in
and
addb
add
push
inc
add
in
dec
test
scas
and
add
pushf
loop
mov
add
insl
mov
stc
jb
sub
add
inc
push
mov
xchg
ret
add
push
dec
xor
sub
add
add
stc
push
push
mov
xchg
ret
add
loopne
jle
stc
jb
sbb
add
push
mov
xchg
ret
jle
add
adc
add
test
jmp
mov
xor
cmp
ljmp
ret
dec
js
mov
pushl
stc
jb
dec
add
xor
movsb
push
mov
xchg
ret
push
add
cli
push
mov
adc
int3
jns
xor
out
pop
nop
jmp
adc
mov
lods
add
scas
lcall
jb
add
add
add
movb
jne
stc
jb
sbb
ja
add
add
stc
jb
or
out
jmp
add
stc
jb
movsb
dec
sub
jbe
add
dec
mov
nop
jmp
xchg
add
cld
xor
nop
mov
mov
nop
jmp
add
add
jmp
repz
sub
add
or
or
add
mov
add
add
mov
xchg
ret
out
sbb
add
pop
push
push
mov
xchg
ret
sbb
loope
add
add
push
nop
jmp
scas
sub
scas
add
add
add
lret
stc
jb
add
mov
sbb
stc
jb
add
add
sub
xchg
and
mov
stc
jb
dec
jbe
mov
add
add
push
mov
xchg
ret
or
add
jg
nop
jmp
add
mov
sbb
jmp
pop
add
xor
xchg
lods
add
jmp
add
add
xchg
cmp
fiadds
xchg
ret
or
add
xchg
repz
mov
stc
jb
lods
sub
ja
add
repnz
add
add
mov
push
mov
push
stc
jb
sbb
sub
push
mov
add
add
add
add
push
mov
rcl
sub
and
add
add
add
add
push
xchg
hlt
rorb
add
xchg
ret
add
mov
push
sub
stc
jb
out
ja
std
add
daa
mov
lea
nop
jmp
pop
sbb
or
cld
mov
stc
jb
add
add
adc
push
xchg
pop
pop
and
stc
jb
mov
stc
add
mov
inc
add
add
loopne
add
sub
pop
sldt
stc
jb
add
pop
add
stc
jb
rclb
mov
xor
dec
mov
stc
jb
add
adc
lea
inc
add
jmp
mov
add
add
add
sub
adc
pop
stc
jb
add
sub
les
jns
test
or
add
add
rolb
add
stc
jb
jbe
sbb
add
xorb
add
add
cmp
jae
jmp
loopne
add
add
mov
add
stc
jb
add
sbb
xor
add
stc
jb
xor
push
inc
incb
xchg
ret
loop
sbb
mov
stc
jb
push
add
add
add
lock
call
stc
jb
xor
add
nop
movsb
jno
movsb
jmp
push
push
add
stc
jb
cs
ret
add
addb
inc
stc
jb
mov
ja
add
xor
and
inc
add
mov
xor
sbbl
add
cwtl
add
in
xor
mov
stc
jb
add
rclb
add
stc
jb
add
mov
filds
sti
nop
jmp
add
mov
add
add
inc
add
mov
stc
jb
push
add
loopne
jge
sub
add
jb
xchg
add
mov
xchg
ret
add
lods
adc
add
stc
jb
add
add
add
mov
stc
jb
dec
out
add
add
insl
pop
stc
jb
mov
add
add
sbb
mov
stc
jb
scas
add
add
sar
jb
add
add
add
add
cld
js
add
add
sub
icebp
insb
mov
push
mov
xchg
ret
push
xchg
jmp
mov
push
xchg
and
sti
test
nop
jmp
add
pop
sbb
rclb
add
add
adc
loop
add
iret
or
inc
add
add
addb
mov
rolb
jb
lea
sub
jb
xchg
add
sbb
inc
and
jb
add
add
adc
and
mov
nop
jmp
add
add
add
pop
idivb
mov
sub
ret
rolb
add
stc
jb
or
add
pop
add
add
sbb
add
lods
pop
add
std
add
add
add
jb
mov
add
sti
mov
nop
jmp
xchg
xchg
movsb
add
fwait
mov
stc
jb
mov
add
fiadds
xchg
ret
rclb
push
add
jb
lret
add
out
mov
stc
jb
add
add
lods
out
int3
pop
push
mov
xchg
ret
pop
loop
xchg
dec
add
push
mov
xchg
ret
or
xor
jb
add
out
jle
jno
jae
pushl
stc
jb
add
add
sub
movl
call
stc
jb
add
icebp
aas
dec
je
stc
jb
add
mov
add
stc
jb
loopne
add
and
add
imul
xchg
clc
inc
add
add
sub
mov
xchg
ret
out
sbb
fisubs
jg
nop
jmp
add
sub
aas
cli
xor
stc
jb
jle
sub
adc
repz
icebp
nop
jmp
add
sub
lret
jmp
adc
aas
add
pop
add
add
ret
stc
jb
scas
add
pop
add
rolb
push
mov
mov
push
mov
dec
sbb
and
stc
jb
sbb
add
push
mov
xchg
ret
lret
sbb
aas
mov
stc
jb
add
add
add
xchg
in
mov
stc
jb
add
js
add
fmuls
mov
jb
add
sbb
addb
add
jle
ret
add
add
push
mov
xchg
ret
mov
sub
xlat
xchg
and
or
stc
jb
pop
add
cmp
mov
xchg
ret
dec
pop
add
add
stc
jb
push
add
mov
add
add
nop
jmp
add
add
loopne
stc
jb
add
push
movsl
incb
subb
dec
add
pop
test
push
mov
xchg
ret
add
jbe
out
mov
stc
jb
add
cld
jbe
inc
add
cmp
add
add
add
jae
mov
stc
jb
sbb
add
add
addb
mov
jb
add
add
add
mov
addb
loopne
addb
mov
stc
jb
add
add
push
pusha
stc
jb
icebp
xchg
push
mov
mov
addl
jb
sbb
add
mov
stc
jb
lods
push
lods
aas
add
cltd
mov
stc
jb
add
imul
xchg
ret
add
mov
sub
add
stc
jb
stc
lret
aad
adc
add
push
add
add
add
add
add
outsl
nop
jmp
scas
sarb
jae
dec
push
mov
add
pop
in
cmp
xchg
sub
mov
push
push
mov
xchg
ret
dec
add
add
loope
cwtl
push
push
mov
xchg
ret
pop
add
push
push
mov
xchg
ret
stc
add
add
je
stc
jb
add
mov
fisttpl
add
xor
add
add
add
sbb
lods
loopne
add
jbe
nop
mov
jb
add
sub
add
fldenv
popa
add
jb
mov
shrb
add
mov
stc
jb
add
add
aas
mov
add
stc
jb
add
scas
ja
mov
inc
sbb
add
add
add
insl
mov
stc
jb
out
sub
mov
mov
stc
jb
sbb
mov
adc
jb
xor
add
lods
mov
push
mov
xchg
ret
loopne
xor
imul
or
add
jb
xor
add
out
cs
stc
jb
xchg
shlb
add
add
sub
subb
add
add
add
add
test
pop
add
stc
jb
add
ret
and
stc
jb
lret
add
pop
push
fdivrs
stc
jb
pop
add
inc
add
and
nop
jmp
out
ja
scas
add
sbb
jb
add
sbb
add
stc
dec
nop
jmp
add
xor
dec
scas
add
into
dec
nop
jmp
sub
std
push
add
mov
pop
andnpd
es
add
jb
push
sahf
fldl
cmc
incl
add
push
loopne
sbb
scas
add
nop
jmp
add
pop
add
mov
mov
nop
jmp
add
dec
add
xor
add
inc
push
mov
xchg
ret
add
or
add
mov
stc
jb
add
add
add
sub
add
cmp
jb
stc
loop
lea
in
add
inc
add
add
insb
xor
into
add
push
mov
xchg
ret
add
add
call
lcall
mov
add
inc
add
add
fcoms
add
or
add
adc
xchg
add
mov
stc
jb
lret
jbe
mov
and
cmpsl
push
stc
jb
std
rolb
jle
or
movsb
je
cld
jmp
stc
jb
add
xor
jge
out
stc
jb
or
add
shlb
add
in
inc
add
sub
aas
js
stc
jb
xchg
add
sbb
scas
test
nop
jmp
sbb
mov
dec
cmp
jmp
jbe
lea
add
add
push
test
push
mov
xchg
ret
jle
add
add
pop
dec
push
mov
xchg
ret
dec
rolb
add
jb
rcrb
add
add
xor
cwtl
popa
stc
jb
sub
pop
pop
jns
ret
jb
push
out
mov
cmp
test
add
stc
jb
add
mov
mov
stc
jb
icebp
add
add
icebp
add
inc
add
and
stc
jb
mov
add
jbe
cmpl
nop
jmp
add
adc
xor
lods
sbb
sbb
add
stc
jb
rolb
cld
add
cmpl
nop
jmp
add
cmp
movsl
stc
jb
add
add
pop
or
inc
add
xor
stc
jb
loop
jle
add
mov
xor
add
add
add
sbb
int
push
mov
xchg
ret
std
sbb
mov
nop
jmp
add
dec
add
push
mov
xchg
ret
add
or
pop
xor
push
stc
jb
cld
add
xor
add
add
add
jb
add
add
inc
add
andb
add
rolb
test
push
mov
xchg
ret
add
jle
iret
mov
stc
jb
xchg
rol
add
or
mov
adc
jb
xchg
ret
sbb
and
jb
add
mov
xchg
test
orb
pop
loopne
sbb
or
mov
xchg
ret
scas
xchg
add
rcr
stc
jb
add
add
xor
add
push
movb
je
stc
jb
add
fists
add
jb
add
addb
movzwl
stc
jb
add
jbe
mov
mov
stc
jb
rcrb
xor
stc
jb
adc
xor
loope
add
jbe
add
add
lret
outsl
loopne
jb
lods
loopne
ret
push
dec
lea
stc
jb
mov
add
add
addb
mov
add
jb
add
pusha
nop
jmp
add
add
jmp
mov
add
jne
push
mov
xchg
ret
add
lds
ds
stc
jb
rolb
sbb
sbbb
add
xor
add
pop
push
mov
xchg
ret
add
push
stc
jb
pop
add
add
ret
popa
add
push
mulb
gs
push
nop
jmp
add
or
xchg
or
movsb
adc
imul
subb
add
jle
mov
add
cs
sub
mov
push
mov
xchg
ret
xor
mov
xchg
ret
add
mov
dec
add
stc
jb
ret
cmp
outsl
add
add
add
add
pop
add
scas
mov
stc
jb
add
sbb
push
nop
jmp
add
add
add
xor
push
mov
xchg
ret
add
sub
add
sbb
inc
stc
jb
xchg
add
add
push
add
lods
stc
jb
xor
sub
add
jle
add
test
add
add
jb
rolb
stos
rep
push
mov
xchg
ret
add
cs
fiadds
add
add
sub
add
push
test
stc
push
push
mov
xchg
ret
add
dec
push
mov
xchg
ret
add
add
add
jb
test
loop
jbe
add
enter
xorb
add
dec
add
add
mov
stc
jb
add
mov
dec
sub
push
mov
xchg
ret
add
add
mov
mov
stc
jb
pop
ret
push
sar
sub
incl
mov
ja
je
mov
rclb
out
add
add
xor
call
stc
jb
or
aas
pop
add
nop
jmp
lret
pop
add
add
repnz
stc
jb
jbe
xor
add
add
jb
add
xchg
or
add
jb
pop
add
mov
add
ret
mov
out
jmp
stc
jb
dec
sbb
add
push
stc
sub
stc
jb
add
add
add
sub
mov
add
sarb
sub
add
jmp
mov
nop
jmp
or
add
add
stc
jb
add
add
xor
ja
add
stc
jb
scas
cs
add
rolb
rcl
cmp
or
add
add
adc
add
ret
ret
stc
jb
pop
lret
lods
mov
inc
add
mov
mov
push
add
mov
add
add
stc
jb
cld
add
add
or
incl
dec
xor
add
shrb
mov
add
add
add
dec
adc
jb
add
sub
rorb
inc
sub
jb
pop
dec
add
add
sahf
xchg
stc
jb
xchg
jbe
xchg
lret
pop
stc
jb
sub
push
jmp
add
add
lcall
add
adc
jle
add
sbb
les
rolb
mov
stc
jb
add
add
add
xchg
xlat
mov
jmp
add
add
add
sub
clc
push
mov
xchg
ret
add
sub
jb
mov
adc
xchg
sbb
stos
lea
push
mov
xchg
ret
xchg
lods
mov
mov
stc
jb
add
xchg
add
jge
mov
sbb
add
add
add
add
and
stc
jb
pop
pop
add
jmp
add
add
add
push
nop
jmp
add
add
xchg
or
push
add
cmp
xorb
lcall
test
cld
or
clc
call
jmp
unpckhps
add
add
jbe
lods
jle
mov
jb
xor
cs
ret
sub
mov
stc
jb
add
add
add
repz
call
add
out
add
mov
stc
jb
dec
dec
loop
es
mov
nop
jmp
push
add
add
aas
add
arpl
call
add
xor
scas
rcrb
or
add
jb
sub
and
stc
jb
scas
add
shlb
mov
stc
jb
cld
shlb
or
jb
shrb
adc
stos
out
call
movsb
add
add
cmpsb
xor
popl
stc
jb
add
adc
sbb
push
mov
xchg
ret
add
xchg
jmp
xor
nop
jmp
mov
add
mov
stc
jb
add
jmp
in
sub
stc
jb
pop
loop
jae
mov
push
mov
xchg
ret
sbb
cmp
adc
add
push
add
mov
xor
push
push
mov
xchg
ret
add
add
add
jb
sbb
xorb
incl
add
jb
sbb
add
adc
inc
add
add
add
sbb
jb
mov
adc
jg
mov
lds
add
jg
mov
push
pusha
push
mov
xchg
ret
xchg
add
icebp
decb
xor
add
adc
add
add
loopne
jp
lret
push
or
add
add
add
jle
sbb
mov
inc
add
add
lea
shr
incl
xor
add
add
scas
enter
inc
idiv
jle
add
jbe
jne
stc
jb
add
add
xchg
push
mov
xchg
ret
add
or
add
mov
mov
or
add
mov
je
add
or
add
jb
mov
aas
sub
dec
fiadds
xchg
ret
add
push
adc
lea
nop
jmp
xor
out
mov
ret
outsb
and
mov
xchg
ret
add
stc
jnp
pushl
stc
jb
xor
add
add
xchg
or
sub
add
xchg
add
jmp
dec
add
out
add
sub
dec
push
stc
jb
add
add
push
sub
mov
in
adc
nop
jmp
pop
rolb
dec
sbb
xor
nop
jmp
add
cld
xor
mov
stc
jb
add
add
mov
stc
jb
add
arpl
sbb
orb
add
add
nop
jmp
add
add
mov
cmp
jb
xchg
add
push
addl
or
push
mov
xchg
ret
xchg
nop
scas
add
stc
jb
js
add
add
add
sub
test
add
stc
jb
xchg
adc
jmp
stc
jb
add
out
pop
xor
pop
add
stc
jb
push
add
out
add
mov
nop
jmp
dec
mov
icebp
sbb
aas
stc
jb
ja
add
add
lea
xchg
push
lods
shr
stc
jb
add
add
sub
jecxz
xor
push
mov
xchg
ret
add
shl
inc
add
decl
stc
jb
ret
add
mov
xchg
ret
add
add
mov
rclb
mov
inc
add
jle
add
in
xor
nop
jmp
std
add
dec
add
mov
dec
nop
jmp
cs
add
add
push
mov
xchg
ret
add
rcrl
adc
jmp
adc
lods
out
add
adcb
push
add
add
std
addl
push
push
mov
xchg
ret
add
add
imul
add
add
add
sbb
jb
aas
add
xchg
xchg
add
in
add
push
mov
xchg
ret
add
add
or
stc
jb
or
add
add
nop
jmp
sub
add
cs
bound
mov
mov
andb
jmp
scas
mov
ret
jo
nop
jmp
xchg
add
js
add
js
jle
add
pushl
add
add
stc
jb
add
out
js
pop
or
add
jb
sar
je
pop
stc
jb
dec
pop
pop
add
push
lods
add
xor
add
xor
std
jle
scas
ja
push
nop
addb
add
stc
jb
sub
pop
sub
rcrb
jne
stc
jb
add
jle
add
push
mov
add
cmp
add
lods
aad
add
or
stc
jb
sar
xor
and
push
mov
xchg
ret
add
push
movb
lods
mov
stc
jb
add
jbe
or
sub
call
incl
ret
lea
jno
es
xchg
stc
jb
scas
add
add
clc
stc
jb
add
pop
add
test
nop
jmp
add
lods
add
add
lea
nop
jmp
xchg
xchg
add
add
or
add
add
stc
jb
push
add
loop
add
das
mov
stc
jb
add
add
stc
jb
add
add
jbe
add
mov
stc
jb
js
add
add
adc
mov
pop
add
stc
jb
icebp
add
xor
pop
add
add
add
or
mov
andb
add
add
dec
mov
stc
jb
dec
mov
xor
call
stc
jb
add
add
jg
cmpl
add
add
add
add
stc
jb
cld
add
xchg
add
inc
add
divl
mov
stc
jb
add
sbb
dec
mov
push
mov
xchg
ret
pop
sub
add
stc
jb
ja
ret
test
stc
jb
or
test
inc
add
mov
stc
jb
sub
add
cld
add
add
push
mov
add
jmp
jno
lods
dec
pop
add
add
push
mov
xchg
ret
sbb
sar
jb
pop
add
add
lock
test
nop
jmp
loopne
xchg
xchg
add
shl
xor
repnz
stc
jb
xor
icebp
add
fists
in
add
ja
add
add
adc
cmpb
add
add
cld
jmp
stc
out
add
pop
call
orb
ljmp
pop
xchg
test
addr16
add
add
push
add
mov
cmp
jb
add
add
shl
cwtl
mov
stc
jb
add
lea
add
add
mov
xchg
ret
xor
add
jb
add
rolb
lret
inc
lock
mov
xchg
ret
add
lods
inc
add
add
stc
jb
jbe
shlb
lock
stc
jb
scas
add
sub
mov
push
mov
xchg
ret
mov
out
add
ja
pushl
push
mov
xchg
ret
add
add
mov
jnp
jne
push
mov
xchg
ret
adc
add
sbb
jb
add
jle
add
jp
stc
jb
add
add
or
std
sub
stc
jb
jbe
sbb
inc
add
and
loopne
inc
add
add
jmp
nop
jmp
xchg
ret
xchg
push
shl
pop
mov
stc
jb
add
or
add
int3
add
stc
jb
xchg
add
out
push
add
stc
jb
add
add
pop
add
movsl
jecxz
mov
stc
jb
std
push
movsb
xor
scas
add
jmp
repz
mov
xchg
ret
push
push
add
addb
adc
pop
jbe
stc
jb
xchg
add
add
jge
stc
jb
add
add
mov
sub
mov
xchg
ret
rclb
addb
add
xor
or
fwait
add
stc
jb
add
sbb
push
pop
jne
stc
jb
xor
xor
push
stc
jb
add
scas
pop
adc
scas
mov
adc
inc
add
std
sub
xchg
pop
pop
push
mov
xchg
ret
scas
xor
pop
ja
add
push
mov
xchg
ret
add
pop
add
nop
jmp
rorb
mov
add
nop
jmp
shr
add
add
dec
mov
stc
jb
add
adc
sbb
stc
jb
xor
add
sub
stos
stc
jb
sub
add
add
add
mov
stc
jb
js
add
mov
cmp
or
push
push
lcall
in
jno
add
add
cli
add
loope
mov
stc
jb
pop
add
adc
stc
sbb
clc
jmp
mov
add
test
add
add
jb
add
add
cmc
stc
jb
scas
movsb
loop
mov
sub
stc
jb
add
push
out
add
add
sti
add
add
add
xor
jbe
nop
jmp
adc
scas
mov
or
das
push
stc
jb
scas
sub
sbb
and
push
mov
xchg
ret
sbb
xchg
xchg
int3
xor
stc
jb
add
add
sub
add
lea
stc
jb
adc
mov
add
stc
jb
dec
add
rorb
jb
add
xor
add
or
into
add
stc
jb
adc
push
fisttps
and
stc
pop
xchg
add
push
mov
fildl
xchg
ret
add
add
adc
xor
inc
add
add
mov
dec
mov
stc
jb
dec
add
push
xchg
add
dec
sub
incl
add
add
scas
loope
push
cmp
jb
out
std
mov
add
jl
popa
push
mov
xchg
ret
add
xchg
pop
testl
nop
jmp
add
add
pop
mov
stc
jb
add
pop
lods
add
add
add
add
stc
jb
mov
add
dec
add
add
les
jb
add
add
add
iret
ret
add
loop
add
add
add
add
add
jb
stc
jb
scas
add
sbb
mov
xchg
ret
add
xchg
add
add
stc
jb
sub
add
add
jbe
inc
add
xor
stc
jb
add
add
ja
add
inc
add
icebp
rcrb
add
add
jb
or
add
dec
shr
nop
jmp
add
add
add
clc
call
inc
add
add
mov
adc
jb
std
lret
xchg
sub
addb
mov
add
negl
push
mov
xchg
ret
sub
je
stc
jb
push
add
ret
add
xor
stc
jb
add
jmp
loopne
add
add
idiv
decl
sbb
add
mov
jecxz
add
add
stc
jb
jbe
mov
mov
ss
ret
nop
jmp
pop
add
out
mov
push
mov
jbe
adc
test
insl
es
push
mov
xchg
ret
jmp
into
add
nop
jmp
sbb
push
pop
push
mov
xchg
ret
add
or
add
add
stc
jb
jle
out
add
push
mov
add
jmp
stc
jb
add
add
ret
add
add
jb
add
push
or
xchg
aas
pushf
xor
nop
jmp
sbb
xor
jb
add
sbb
pushf
mov
push
mov
xchg
ret
add
mov
jmp
nop
jmp
mov
mov
push
nop
jmp
xchg
pop
add
add
nop
add
add
jb
add
loopne
add
push
mov
xchg
ret
add
rorb
push
stc
jb
push
out
xchg
add
les
nop
jmp
add
add
add
in
push
inc
add
in
add
fldenv
stc
jb
scas
loop
pop
add
mov
mov
inc
add
add
mov
stc
jb
scas
cs
nop
jmp
or
mov
push
mov
sbb
rcr
inc
add
ja
inc
add
pop
mov
stc
jb
add
add
add
out
mov
stc
jb
add
push
add
lret
out
call
decl
mov
cmp
incl
add
loop
pop
pop
adc
jb
sbb
sub
dec
add
mov
xchg
ret
movsb
jmp
int
lret
push
mov
xchg
ret
icebp
pop
add
lahf
mov
stc
jb
add
pusha
push
mov
xchg
ret
add
add
sti
dec
push
mov
xchg
ret
mov
xchg
scas
add
add
mov
xchg
ret
add
test
cli
add
stc
jb
add
lea
dec
lods
stc
jb
add
add
pop
stc
jb
dec
lods
add
add
sbb
flds
enter
nop
out
incl
push
scas
xchg
rolb
xchg
mov
pop
icebp
inc
add
add
loopne
jb
add
sbb
popf
mov
stc
jb
sub
std
sub
add
add
stc
jb
add
add
add
jl
dec
adc
jb
sub
sbb
insb
inc
jb
stc
jb
push
add
nop
xor
and
nop
jmp
add
add
add
aas
mov
stc
jb
dec
cld
sbb
add
incl
add
add
test
jb
add
jne
jnp
cmp
nop
jmp
add
add
xor
add
add
stc
jb
movsb
mov
stc
jb
dec
xchg
xor
add
add
add
push
add
movsb
xchg
add
mov
and
incl
icebp
stc
jb
jmp
adc
xchg
jle
mov
add
sbbb
ja
add
js
push
mov
imul
add
js
add
stc
jb
pop
add
lea
add
add
jb
adc
ja
push
mov
ret
mov
add
add
lret
add
loope
add
nop
jmp
scas
add
xchg
out
add
and
lret
cld
push
mov
xchg
ret
add
sub
add
push
mov
xchg
ret
dec
movsb
jmp
addb
pop
nop
jmp
or
cld
add
scas
out
mov
push
mov
orb
pushl
or
add
lods
jne
nop
jmp
add
or
mov
cmpb
decl
add
mov
stc
jb
add
add
sbb
mov
xchg
ret
add
add
push
mov
xchg
ret
add
jb
add
sbb
roll
add
nop
jmp
add
xor
sbb
add
adc
stc
jb
ja
loopne
mov
rcll
testl
add
out
gs
jnp
stc
jb
add
add
add
ja
pop
stc
jb
add
ret
jle
rorl
icebp
ljmp
add
cs
sub
movsb
nop
jmp
movsb
mov
scas
out
test
icebp
stc
jb
scas
rolb
scas
jmp
cmp
popa
add
jb
loop
add
mov
stc
jb
xor
pop
xchg
bound
inc
add
jb
sbb
add
add
or
incl
add
pop
mov
jb
adc
add
add
add
out
and
nop
jmp
js
add
add
call
sbbb
lcall
add
fstpt
stc
jb
adc
add
jne
hlt
xor
shl
nop
jmp
js
pop
ret
sub
xor
mov
out
ljmp
inc
aaa
add
sub
jp
stc
jb
stc
ret
add
xchg
add
mov
stc
jb
mov
jbe
cmp
xor
add
stc
jb
cld
add
in
jne
stc
jb
lret
cmp
nop
jmp
adc
scas
pop
ja
movzwl
stc
jb
pop
push
dec
pop
add
push
push
mov
xchg
ret
or
aas
add
jae
jmp
sub
push
out
add
jb
or
add
lods
aas
or
fwait
push
stc
jb
push
pop
pop
add
xchg
adc
cmp
cwtl
jmp
add
adc
add
stc
jb
add
add
pop
jne
nop
jmp
add
mov
stc
jb
lea
jb
add
movsb
add
add
adc
es
inc
add
add
mov
mov
xchg
ret
jle
push
scas
push
mov
aas
add
mov
add
inc
std
in
add
jmp
out
add
add
sub
or
test
inc
add
mov
jbe
xor
push
mov
xchg
ret
sbb
jle
dec
outsl
popa
fs
jmp
add
scas
push
lods
push
lods
and
push
mov
xchg
ret
add
xchg
pusha
add
stc
jb
xor
adc
add
mov
stc
jb
mov
add
jb
add
add
or
add
out
add
xor
aas
pop
inc
add
mov
stc
jb
push
add
add
jge
stc
jb
icebp
add
lret
jne
nop
jmp
xchg
or
sub
movsb
fimull
test
call
incl
add
loopne
out
pop
nop
jmp
add
add
scas
add
mov
stc
jb
mov
scas
add
mov
xchg
ret
or
sub
in
push
icebp
mov
hlt
dec
add
lret
cmpl
subb
incl
add
pop
jmp
nop
jmp
pop
jbe
sbb
ret
mov
add
jp
movsb
nop
jmp
pop
scas
xor
xchg
loop
dec
xchg
adc
pop
push
mov
xchg
ret
xchg
out
sbb
dec
inc
push
mov
xchg
ret
rolb
add
icebp
push
addb
and
stc
jb
push
add
sbb
jmp
mov
cwtl
xorb
add
add
aas
std
xchg
mov
repz
jb
ja
out
dec
js
jg
mov
add
daa
push
add
sbb
add
mov
sbb
cs
pop
adc
fisubrs
add
nop
xor
sbb
add
flds
add
mov
jle
iret
sbb
mov
mov
lcall
clc
enter
into
pop
pop
and
cmc
insw
pop
ds
pop
sbb
out
in
in
addb
mov
je
xchg
repz
dec
jmp
inc
add
cmc
cmc
cmp
add
mov
xor
add
nop
fisttpll
pop
add
rorb
inc
add
outsl
mov
add
pusha
add
add
mov
jg
sub
sub
stos
fldl
push
add
mov
and
dec
mov
lcall
cs
add
add
enter
aam
int
mov
sar
addl
add
sbb
push
loope
pop
sub
add
or
cli
xor
add
or
xor
add
mov
fwait
mov
add
ret
add
add
dec
lret
pop
sahf
jne
add
fmul
pop
jge
mov
jp
fwait
inc
add
addb
adc
loope
push
jmp
sbb
mov
push
add
test
les
insl
push
add
rcr
add
mov
mov
test
and
mov
lcall
jo
lcall
xor
scas
jg
mov
cmp
sbb
leave
fwait
addl
inc
add
inc
add
out
fsubrl
fbld
adc
push
pop
add
call
movsb
js
and
and
fwait
dec
fadds
fs
and
outsb
loop
pop
adc
cwtl
jmp
dec
inc
add
mov
clc
rolb
fs
adc
pop
pusha
add
mov
jo
push
out
rcll
jbe
push
bound
inc
add
pop
aam
mov
dec
xor
add
jnp
add
mov
fadds
sub
sub
cmc
sbb
push
sbb
popa
add
and
add
out
sbb
add
xor
and
lret
rolb
mov
push
popf
daa
mov
sub
xor
dec
arpl
mov
mov
sub
pushl
xchg
cwtl
jmp
push
addl
aaa
mov
inc
add
out
cmp
or
adc
int
popf
cmp
mov
push
roll
loopne
add
inc
add
stc
shll
sub
push
dec
sti
cld
int3
movsb
xchg
dec
mov
xchg
xlat
xchg
out
es
testb
cmp
or
scas
xchg
ja
or
daa
push
xchg
repnz
and
loop
or
or
out
push
test
add
push
inc
add
dec
into
outsl
bound
nop
in
add
jle
std
mov
add
inc
add
dec
xchg
inc
add
mov
mov
xchg
mov
shrb
insb
fcoml
add
mov
lods
mov
cmp
pop
aas
int3
popf
repz
lods
inc
add
cmp
mov
add
add
mov
mov
xor
pop
mov
add
jg
sahf
test
add
filds
inc
add
popa
add
insl
inc
add
dec
sbb
aaa
xchg
xlat
arpl
cmp
loope
add
xchg
frstor
das
into
pusha
add
rorl
shrb
push
repz
addr16
mov
clc
mov
addl
mov
imul
add
add
jae
add
and
in
pop
mov
jl
mov
lea
dec
cmpsl
pusha
add
dec
imul
jle
inc
add
add
std
gs
test
jb
inc
add
xchg
or
dec
pusha
add
xchg
mov
mov
xor
sbb
jle
add
inc
add
dec
pushf
insl
inc
add
je
add
jnp
add
adc
sbb
lret
lds
mov
jl
in
fbstp
lcall
popa
add
inc
add
add
mov
shl
pushf
add
ljmp
enter
jp
xlat
stos
test
jno
arpl
inc
add
rol
add
or
add
add
mov
jb
addb
add
dec
icebp
xchg
push
cld
xor
in
rcrb
mov
adc
ss
movsb
jno
add
xchg
inc
add
and
mov
add
addr16
or
add
jmp
mov
movsl
jge
add
daa
fstl
add
add
push
or
mov
xor
dec
out
dec
les
jb
add
mov
es
or
iret
xlat
xchg
dec
rcrl
add
cmpsl
mov
push
mov
mulb
add
aad
xor
cmp
and
jo
and
sbb
mov
cwtl
jns
cmpsb
les
lret
cmp
sbb
addl
xchg
int3
mov
repnz
add
addr16
xchg
inc
add
add
add
sbb
sbb
loope
bnd
mov
insl
adc
repnz
add
xchg
lods
lds
cmp
stos
jg
add
add
jnp
decl
bound
into
push
mov
pop
inc
add
push
and
jge
inc
add
cli
xchg
pusha
add
mov
repz
add
addl
or
push
add
inc
add
mov
fdivl
xchg
dec
addb
pop
add
into
test
and
hlt
inc
add
cmp
push
add
mov
pop
mov
aad
fidivrl
repz
add
add
sbb
add
cmpsb
push
mov
push
pop
push
adc
and
cmc
fnstenv
pop
rolb
insl
mov
mov
jecxz
add
xor
push
fcomi
push
sbb
xchg
mov
inc
add
cs
add
push
add
add
adc
add
icebp
mov
inc
add
sbb
jle
inc
add
add
addb
das
pop
insl
xlat
push
push
scas
pop
les
aad
cmp
mov
das
pop
sbb
std
mov
les
imul
lret
and
popa
add
popf
pop
push
pop
push
std
push
jnp
fildll
sbb
enter
fdivs
shl
xlat
push
mov
and
mov
test
addl
add
pop
add
addl
inc
add
and
add
shll
icebp
xchg
sbb
or
jecxz
inc
add
inc
add
mov
add
sbb
sub
repz
jge
mov
sbb
ret
add
jl
inc
add
or
dec
dec
lock
add
fs
lret
push
aam
scas
aaa
bound
loope
add
jbe
cmp
xor
mov
add
sub
adc
mov
mov
lahf
xor
leave
add
mov
sub
ljmp
add
or
gs
add
cltd
xchg
pop
cld
rolb
add
pop
mov
or
mov
cs
adc
sbb
add
sti
in
cmp
bound
dec
es
cld
fcmovnu
cmp
loope
nop
mov
add
pop
mov
dec
push
in
add
roll
xchg
nop
icebp
lea
or
push
sbb
mov
cmp
mov
mov
add
add
jmp
rolb
mov
pop
mov
in
add
daa
sub
test
ret
movsl
sbb
lcall
lods
cmp
add
lret
jbe
shl
mulb
add
add
add
call
jge
mov
mov
inc
add
clc
add
add
ds
cltd
sbb
mov
scas
dec
xor
inc
add
adc
mov
movsl
push
cmp
or
cmp
ljmp
movsb
outsl
pop
sbb
mov
cltd
aad
push
sub
in
aam
push
xor
sub
sti
sub
fs
lods
jo
adc
pop
ficompl
addb
addb
adc
add
add
fdivr
or
add
inc
add
add
loopne
rolb
add
je
dec
sub
add
cs
add
mov
add
push
or
push
out
sbb
dec
shrl
in
xchg
pop
jbe
add
popf
xor
pop
add
popf
adc
adc
addb
or
popa
add
jnp
xchg
jmp
add
jnp
out
and
jge
hlt
jp
add
add
imul
into
lret
cmpsl
movl
mov
add
shlb
add
roll
addb
stos
add
test
rorl
addb
push
add
add
imul
mov
add
inc
add
add
mov
mov
jg
xor
xlat
jl
test
add
testl
movsb
mov
lds
addb
xchg
aad
jns
add
jle
mov
in
xchg
lret
sbb
xlat
jns
add
add
jp
xlat
stc
leave
push
stc
lret
imul
in
dec
mov
pop
jo
bound
in
aam
cmp
mov
jb
jge
pop
pop
cmpsl
inc
add
rcll
lahf
lcall
cmp
leave
out
fwait
ss
jo,pt
sbb
cs
adc
add
add
repz
inc
add
inc
add
xchg
mov
sub
sahf
stc
mov
dec
addl
and
scas
and
pop
call
pop
aam
mov
dec
cmp
mov
outsb
inc
add
add
lods
jp
outsl
ficompl
lret
mov
add
mov
addl
in
jg
insl
roll
loope
lods
cmp
ret
add
dec
call
sbb
bound
lahf
cmp
outsl
in
popf
leave
pushf
aad
sub
gs
push
in
ds
dec
mov
test
inc
add
addr16
push
mov
lock
popa
add
mov
insb
pop
add
add
jmp
mov
adc
mov
out
loopne
add
xchg
push
add
add
pop
add
pop
add
cmp
clc
das
enter
push
cmp
sub
add
roll
test
cwtl
or
add
addl
add
nop
jbe
nop
out
jle
pop
inc
add
fsubrs
mov
dec
out
xchg
lock
xchg
insl
in
shl
dec
out
push
xchg
mov
mov
movsl
mov
add
mov
add
pop
loopne
icebp
add
call
add
js
mov
dec
fcomp
addl
in
mov
mov
ja
mov
test
stc
bound
xor
test
dec
out
lods
dec
sbb
sub
jbe
sbb
out
jmp
xchg
sarl
ret
mov
mov
cmc
daa
mov
mov
iret
addl
jmp
add
adc
mov
push
icebp
pop
jecxz
add
cmc
dec
xchg
and
push
ficoms
pushf
adc
push
mov
sbb
in
mov
add
sub
sub
inc
add
mov
fnstsw
push
sub
add
pop
dec
inc
add
mov
xchg
loop
and
js
ja
cli
sub
add
add
rorl
fisubrl
testl
xchg
jae
pop
add
cmc
push
outsl
in
test
fimuls
add
lods
push
push
dec
push
add
pop
out
add
jl
xchg
mov
sbb
mov
fadd
add
mov
add
add
push
sbb
inc
add
mov
movsl
cwtl
repnz
add
add
fsubrp
cli
adc
movsl
mov
jmp
lods
dec
stc
clc
pop
cmp
pushf
std
adc
push
rolb
add
jbe
add
movd
test
pop
and
and
test
sbb
lahf
movsl
adc
add
xchg
or
stos
ljmp
add
rolb
add
add
and
push
lods
xchg
movb
es
add
pop
popa
add
sub
add
addl
xor
sub
jbe
add
add
add
cmp
and
insb
inc
add
lods
xchg
shll
add
les
repnz
mull
add
insl
outsl
sbb
enter
fwait
test
dec
add
add
xchg
stos
push
movsb
sub
cli
sbb
jnp
sbb
or
arpl
jns
stos
daa
cmp
add
push
lret
xor
add
push
lock
mov
and
in
mov
fimuls
jecxz
dec
movl
addb
jmp
sub
xchg
stos
into
and
or
bnd
mov
adc
lods
daa
mov
xchg
loop
movsb
out
iret
dec
cmp
dec
mov
add
std
mov
pop
scas
call
addl
test
and
aas
insl
pop
inc
add
push
add
inc
add
and
sbb
roll
mov
add
mov
xlat
sub
xchg
test
lahf
in
jns
add
data16
add
jp
add
pop
jae
repnz
add
add
aad
jbe
add
inc
add
push
push
scas
dec
jp
sbb
pushw
add
cmp
int3
outsl
push
out
add
mov
xor
add
jmp
add
mov
lds
xchg
rclb
loope
fsubp
push
inc
add
jmp
sub
mov
mov
mov
add
cmpsb
out
or
leave
or
dec
lock
pushf
lahf
sbb
clc
mov
mov
adc
adc
lea
sbb
roll
pop
jg
add
les
mov
outsl
in
ds
mov
add
sti
dec
wbinvd
in
out
add
cmp
jle
mov
addl
add
daa
push
pop
push
mov
inc
add
xchg
mov
xchg
push
imul
add
add
mov
add
and
popf
in
cmp
add
sub
dec
pop
movl
mov
cmp
cs
xchg
gs
add
and
xchg
adc
xchg
push
js
pop
jns
add
mov
mov
add
add
add
lods
movsl
mov
mov
out
jecxz
js
inc
add
movb
lds
loop
add
xchg
int3
and
add
mov
sbb
add
test
jo
sarl
add
test
inc
add
enter
and
lods
in
jp
or
add
iret
sbb
sub
and
out
dec
insl
cmc
movsb
or
gs
jg
filds
add
pop
out
fs
ja
pusha
add
dec
sahf
in
bound
in
pusha
add
imul
inc
add
jnp
xchg
mov
add
out
dec
pop
popf
nop
cmpsl
in
mov
add
add
push
das
addb
fstpl
clc
movb
je
fidivrs
sarl
dec
mov
add
in
sbb
xchg
addl
add
add
dec
jge
in
add
push
add
int3
fistps
mov
hlt
cmpsl
jge
add
push
out
lea
mov
add
add
cmc
mov
mov
add
add
icebp
movsl
shll
shrb
add
movsb
addr16
mov
pop
vmread
ret
add
repz
test
push
movb
arpl
cmp
std
repnz
negb
add
or
fistps
insb
mov
jmp
dec
addl
cmp
lds
pushf
mov
add
mov
stos
rcll
pop
inc
add
mov
nop
test
mov
jg
jae
insb
dec
mov
jecxz
nop
push
daa
lock
add
xor
imul
add
es
fwait
imulb
lds
out
add
sbb
fwait
push
add
and
movl
adc
add
jns
icebp
cmp
mov
add
mov
mov
jnp
push
xchg
push
mov
les
sub
add
push
jbe
add
pop
xlat
add
loopne
dec
mov
es
add
inc
add
push
int3
popa
add
add
jno
lds
repnz
add
cmpsb
add
jb
cmp
cmp
inc
add
add
add
jns
inc
add
shll
and
hlt
jle
fs
xchg
jecxz
sbb
in
and
pop
adc
or
sbb
lods
xchg
mov
inc
add
ljmp
lods
repz
mov
and
lods
xchg
xor
daa
sbb
popa
add
mov
insb
stos
loop
insl
mov
lock
inc
add
add
sub
popa
add
in
inc
add
sbb
hlt
pop
mov
std
bound
pop
add
sbb
jecxz
jo
sbb
cmp
out
mov
aaa
sbb
lock
imul
les
cmc
test
clc
dec
rcrl
mov
add
movsl
push
das
lods
test
add
addl
add
add
les
shrb
pop
add
sub
shl
sub
mov
or
mov
xor
pop
icebp
mov
add
push
cmp
add
mov
add
cmp
sub
cmc
ja
sbb
lods
lock
add
icebp
dec
stos
mov
xor
dec
lds
sbb
stos
or
xor
dec
push
les
mov
sub
mulb
sub
dec
push
pop
int
and
jnp
add
mov
roll
add
pop
xor
xchg
mov
out
movsl
dec
cmc
mov
pop
dec
jge
xor
jl
xor
rep
fstps
xor
add
mov
pop
pop
sbb
and
jle
xchg
jmp
inc
add
aaa
cmpsb
or
insl
dec
out
insl
lcall
mov
add
xchg
push
aam
mov
scas
rorb
iret
mov
add
jp
ds
xchg
lods
rcl
xchg
insb
in
and
outsl
in
test
jo
push
and
aam
ss
cmpsb
inc
add
push
xchg
mov
jns
jne
xchg
push
add
jle
bound
mov
cmp
inc
add
add
call
arpl
movb
xor
push
dec
ror
stos
movb
inc
add
daa
push
xchg
test
imul
add
add
add
cltd
daa
jl
xchg
dec
push
pop
adc
pop
add
pop
or
negl
jg
xor
add
mov
add
cmp
mov
add
or
add
add
add
push
sbb
int3
mov
aad
add
ljmp
cli
lahf
pop
arpl
sbb
inc
add
and
pop
loop
cmpsl
push
std
mov
je
out
jge
addb
int3
imul
scas
js
add
mov
jmp
mov
mov
or
cltd
mov
cmp
mov
cli
or
add
loop
jge
push
pop
addr16
xchg
xor
add
popf
xchg
jb
fcoml
lock
add
jbe
xor
add
addl
aad
adc
add
ss
mov
add
add
and
sub
inc
add
in
jecxz
add
movsb
push
rcl
lock
mov
add
add
xchg
std
lods
inc
add
movsl
cltd
jmp
popa
add
adc
inc
add
int3
fbld
add
dec
jns
add
add
or
xchg
movsb
or
cmp
and
sbb
addl
clc
lcall
mov
cmp
cli
pop
outsl
pop
cmp
mov
and
dec
lods
sahf
aaa
push
les
push
xchg
dec
pop
adc
add
push
jno
ret
lcall
xchg
and
rcll
sub
add
or
xlat
out
cwtl
iret
jns
inc
add
cli
mov
cmpsb
movsl
in
ja
add
pop
leave
jp
push
lds
push
mov
movb
add
les
icebp
cs
insb
mov
pop
pop
nop
aas
mov
jl
ret
int
add
je
nop
inc
add
enter
xor
in
jae
mov
cmp
xchg
sbb
add
push
mov
push
loop
lcall
lret
mov
or
inc
add
adc
f2xm1
adc
mov
lea
inc
add
pop
pop
jne
sti
xchg
test
push
aas
fnop
test
test
sub
add
push
clc
adc
mov
mov
add
sti
cmp
out
add
cli
and
mov
xchg
cmp
and
movsl
in
jno
add
cmp
dec
jp
pop
adc
and
cmpsl
or
mov
inc
add
xor
addb
and
ret
add
mov
data16
ja
cmp
inc
add
mov
rep
jecxz
arpl
push
negb
shlb
xlat
lea
popf
rolb
mov
mov
popf
cmp
aad
roll
lds
sub
cmc
push
pop
pop
popa
add
cmpsl
call
xchg
insl
das
cmpsl
roll
clc
xchg
pop
out
pop
cmp
add
add
adc
sub
pop
je
add
and
mov
mov
iret
pause
dec
ficompl
mov
pop
fcomps
add
sahf
add
addb
add
enter
jb
and
add
mov
out
cmp
xor
je
dec
bound
bound
mov
xchg
sbb
adc
add
mov
int3
fstps
mov
popf
push
pop
or
fs
and
pop
enter
gs
add
mov
lock
mov
fs
push
mov
movsl
les
dec
les
idivl
sub
jmp
das
xchg
out
test
rcl
sbb
or
xchg
lods
cmp
std
and
loopne
std
xchg
mov
mov
dec
add
mov
lds
gs
or
xor
outsl
into
pmaddwd
imull
and
lods
out
cmpsl
shll
add
add
push
pop
les
pop
addr16
add
add
pop
loopne
cmp
popf
pop
addl
add
mov
xchg
add
sbb
aad
pop
out
add
cmp
imul
cmp
mov
add
cmp
xor
jmp
add
fidivs
call
add
in
icebp
mov
add
dec
inc
add
or
xlat
pop
mov
push
test
push
add
or
jmp
pop
or
mov
pusha
add
add
int3
push
dec
cmp
inc
add
mov
sbb
aad
add
dec
mov
out
call
in
xor
clc
leave
and
lods
enter
mov
add
sub
mov
mov
add
add
jae
xchg
pop
jno
jno
push
mov
cwtl
mov
cli
mov
jne
jecxz
mov
push
cld
mov
xchg
sarl
enter
push
xor
xlat
mov
and
das
clc
mov
xchg
lea
pop
popa
add
pop
add
mov
inc
add
dec
inc
add
and
inc
add
cmpsl
mul
scas
dec
fnstenv
les
push
lock
dec
pop
les
pop
and
xor
js
cmp
addr16
add
add
add
mov
sbb
je
add
mov
pop
aad
nop
addl
pop
ret
cltd
mov
add
lds
pop
or
mov
jne
rcrb
sbb
outsb
sbb
and
dec
or
sub
add
and
fdivl
aam
out
mov
out
loopne
cmp
add
imul
xchg
or
mov
add
pop
dec
iret
daa
aam
sub
les
push
iret
iret
popa
add
add
es
add
mov
add
pushf
dec
daa
pusha
add
mov
popl
add
out
fdiv
fldt
ja
push
add
xorps
out
imul
mov
pop
inc
add
lock
movb
add
movsl
pop
cld
gs
rolb
add
mov
push
mov
add
out
out
mov
mov
ds
add
add
and
add
pop
cwtl
cmc
pushf
push
ret
push
jb
jbe
pop
dec
iret
add
sbb
add
add
push
add
add
test
in
inc
add
push
jo
and
pusha
add
add
or
clc
jp
add
pop
das
movsb
mov
add
leave
roll
cmc
daa
rolb
fstpt
addl
or
push
sti
cmpsb
pop
and
dec
jnp
ss
jbe
add
xor
add
jge
ret
ffreep
add
or
pop
hlt
mov
sub
jo
jecxz
add
inc
add
dec
xchg
push
arpl
jno
mov
in
add
cmp
or
or
mul
sub
scas
pop
mov
cltd
addl
outsb
xchg
fldcw
int
jae
and
lods
fdivrs
int3
xlat
fstpt
imul
lret
inc
add
dec
jnp
sub
mov
cwtl
movsb
xor
imul
frstor
inc
add
adc
push
dec
stos
lods
or
sbb
jae
scas
movl
lods
stc
loopne
fdivr
popa
add
mov
add
mov
addl
movb
cmp
cmc
or
add
enter
arpl
lcall
cltd
pop
fisubrs
push
mov
hlt
mov
inc
add
adc
leave
std
pop
in
clc
daa
cmp
enter
add
pop
add
mov
and
sub
add
sti
testl
inc
add
bound
jg
dec
inc
add
jnp
outsl
test
jecxz
bound
mov
xchg
mov
divb
lret
call
xchg
mov
push
fwait
pop
sub
test
mov
sub
mov
mov
add
jl
mov
push
outsl
movl
loopne
add
data16
xlat
notb
outsb
lods
inc
add
sub
jnp
movb
jle
ljmp
sahf
xchg
insb
mov
out
add
add
jb
mov
sub
sahf
lods
mov
mov
fwait
mov
cmp
adc
xlat
movb
jmp
sbb
pop
or
xchg
js
add
add
insl
inc
add
add
js
movl
je
cwtl
xor
add
js
xor
add
xlat
mov
add
add
sbb
add
xchg
mov
addl
add
ror
jnp
cmp
add
out
or
add
add
sbb
cwtl
dec
sub
jne
push
enter
mov
int3
lret
mov
add
movsl
rorb
mov
add
dec
das
aas
xor
icebp
xor
add
scas
jmp
stos
pushf
and
mov
mov
add
cld
insb
movlps
cli
add
dec
std
fisubl
stos
imul
pop
lods
movsl
or
mov
pushf
xchg
mov
cmp
mov
arpl
lods
fucomip
mov
add
dec
and
faddl
add
add
cmpsb
in
fdivrl
cltd
test
mov
push
add
fs
div
inc
add
insl
push
mov
test
outsl
mov
aas
sbb
add
pushf
fs
movsb
inc
add
adc
mov
in
mov
je
add
cltd
inc
add
mov
aaa
jno
cmp
add
mov
ds
and
call
cwtl
sbb
add
or
push
cmpsb
dec
aam
add
inc
add
insl
jbe
or
jge
mov
add
cmp
mov
add
in
or
lods
or
inc
add
add
mov
or
arpl
lods
int
add
sbb
mov
xor
adc
repz
imul
mov
add
in
movb
stc
arpl
mov
mov
clc
pop
int3
gs
out
lcall
sub
jmp
pop
adc
cmp
pop
xor
fwait
imul
adc
je
add
rolb
or
jmp
xchg
add
stc
popf
es
jle
add
add
sub
mov
fyl2xp1
or
stos
and
lods
push
ret
add
or
arpl
fptan
into
xchg
fmull
jb
mov
testl
sarb
fsts
mov
dec
adc
lods
out
push
loope
add
cmp
movl
arpl
and
ss
scas
hlt
fs
add
cli
dec
xchg
in
fs
dec
addr16
stc
push
mov
inc
add
pop
mov
movsl
or
iret
add
mov
pusha
add
inc
add
outsb
dec
mov
jg
ds
mov
add
add
xchg
dec
and
mov
fldl
add
or
adc
fs
pop
xor
icebp
lret
inc
add
push
mov
mov
dec
mov
sub
jg
ja
mov
jns
push
addl
sbb
add
or
add
push
xchg
jl
add
pcmpeqw
sub
das
mov
je
flds
add
aad
push
sub
mov
nop
dec
or
jmp
add
xchg
jge
dec
dec
nop
cwtl
into
or
add
out
mov
xor
stos
cli
push
dec
mov
mov
add
sbb
pop
xor
mov
jb
iret
or
fmul
cmp
popa
add
pop
cmpsl
sub
push
sbb
js
add
add
push
loopne
les
cli
cmpsl
out
add
mov
insb
movsl
xchg
popf
lock
inc
add
and
adc
arpl
xchg
decl
pop
cltd
add
stc
jo
cmp
shrl
jne
call
into
jp
stc
cltd
stos
pop
aad
iret
pop
xchg
jge
adc
movsl
ja
add
add
out
xchg
add
mov
push
fistpll
leave
inc
add
inc
add
sbb
or
iret
cmp
push
rcrb
add
movb
adc
ss
lock
arpl
add
jns
ljmp
pop
fwait
into
addr16
movl
add
jle
jle
inc
add
jl
jmp
add
pop
ds
push
xchg
pop
xor
fsubs
imul
pop
gs
or
add
dec
adc
add
movl
xchg
cwtl
lea
and
mov
in
xor
push
push
add
ret
add
ss
call
mov
dec
insb
cmp
add
test
mov
push
out
pop
ret
add
fiadds
add
cmp
rolb
push
lea
add
sbb
pop
adc
test
pop
fisubs
fiadds
mov
xchg
lods
cmpsb
xchg
lahf
jge
fstpt
add
add
fldenv
inc
add
mov
movsb
pop
xchg
stos
or
leave
daa
movb
add
roll
lahf
scas
movl
repnz
int
xchg
jl
addl
dec
jp
sbb
add
xor
inc
add
out
or
pop
mov
push
aas
add
scas
mov
ret
ret
add
inc
add
shlb
popa
add
shrl
fidivrs
pusha
add
cld
push
cmc
dec
sbb
xchg
push
add
lds
dec
dec
adc
add
mov
add
and
addr16
adc
cs
cmc
out
test
inc
add
and
sub
addl
add
pusha
add
les
cwtl
sbb
roll
out
pop
sbb
shll
add
dec
addb
out
dec
jg
add
addb
loope
add
test
sub
add
sub
jae
imul
push
int
push
dec
cmc
mov
inc
add
cmp
pop
sub
lret
add
int3
fcmovnu
test
movsl
cmc
push
push
adc
mov
ficoms
cmpsb
mov
lods
push
or
add
rolb
in
bound
lds
push
pop
test
ljmp
xchg
or
imul
xlat
stos
inc
add
cltd
pop
negl
mov
add
add
loop
ret
add
rolb
addb
int
sar
cmp
das
xchg
cmp
sub
imul
push
bound
cmp
add
add
div
mov
ljmp
lcall
push
adc
loopne
js
or
add
add
das
lods
inc
add
in
sbb
int3
sbb
out
add
sub
cmp
aam
dec
cmpsl
leave
and
or
cmp
sub
imul
es
imul
dec
cmc
push
imul
icebp
xor
bound
push
cmp
jle
addl
jmp
rol
add
jae
cltd
mov
push
cld
cmp
iret
jl
jl
xchg
push
adc
add
clc
or
sbb
xor
inc
add
adc
call
iret
jbe,pt
dec
add
inc
add
stos
fwait
paddb
add
mov
fsubs
pop
and
ret
add
sub
pushf
test
adc
jp
imul
loope
lret
popaw
add
ret
add
cmc
dec
sbb
add
movl
mov
aad
in
or
daa
jg
lods
ljmp
fsubs
push
pop
ljmp
lods
and
mov
push
mov
inc
add
add
jg
imul
jg
add
fcmovne
mov
cld
mov
sub
ret
add
sub
inc
add
mov
mov
inc
add
and
mov
pop
jno
sbb
xlat
adc
push
add
add
jne
jne
add
add
shlb
xor
add
mov
add
push
les
sbb
je
xor
pusha
add
add
push
ret
cltd
and
push
sbb
fnsave
outsl
out
push
jecxz
ret
jecxz
out
scas
add
test
jle
add
repz
mov
roll
jle
and
pop
test
mov
mov
mov
int
test
pop
cmp
roll
popf
pop
roll
cltd
adc
icebp
addl
insl
cmp
cli
or
nop
push
lods
jecxz
inc
add
add
lret
cmp
add
data16
sarl
addl
movsb
ds
lds
cld
mov
shrb
add
add
push
faddl
dec
aam
psadbw
add
jbe
add
cmp
add
sbb
xchg
jbe
nop
push
std
mov
add
mov
xchg
dec
mov
imul
push
scas
mov
mov
jp
lock
adc
cli
mov
push
lahf
xchg
pop
call
addl
xchg
out
jmp
jnp
cmp
push
mov
inc
add
loop
aad
in
add
imulb
jbe
sub
lcall
adc
add
jnp
inc
add
add
xchg
jl
xor
sarl
mov
dec
mov
jmp
add
into
addb
and
sbb
enter
sbb
add
add
in
lret
test
cli
or
aaa
fnstcw
sub
jo
add
movsb
cmp
outsl
icebp
add
fsubs
leave
inc
add
lret
pop
push
push
ljmp
sub
inc
add
cmp
push
jnp
jge
pop
jnp
cmp
aaa
mov
dec
in
jg
loopne
add
mov
add
and
arpl
cmp
sbb
mov
mov
mov
add
jne
pop
pop
push
add
xchg
jbe
movsb
push
mul
ret
sbb
add
xchg
mov
lds
imul
add
cmpsl
inc
add
adc
insb
add
ss
sbb
pop
add
loop
add
cmpsb
lret
loope
lcall
bound
cmp
aaa
dec
xchg
push
dec
ret
add
daa
pop
mov
add
xlat
mov
inc
add
push
pop
add
leave
fs
repnz
add
add
pop
sub
dec
jnp
xchg
cli
jno
add
sub
lcall
ss
xor
dec
mov
sub
xor
sub
add
loopne
aad
add
pop
add
aas
test
pop
add
jge
addb
movb
push
scas
sbb
add
pushf
cmc
xchg
mov
adc
and
or
mov
jns
pop
add
jmp
jp
xchg
mov
scas
hlt
push
mov
adc
jp
add
mov
pop
scas
out
cli
and
mov
pop
add
add
pop
inc
add
add
sbb
jp
addb
inc
add
arpl
xor
jp
xor
xchg
lds
nop
inc
add
add
jecxz
add
or
adc
inc
add
and
xchg
stos
rolb
add
add
add
inc
add
mov
sbb
les
enter
hlt
lock
xchg
cmp
cmp
add
jne
loopne
sbb
scas
add
das
sbb
fmulp
fwait
ret
add
test
in
cmpsb
aaa
mov
add
push
lret
push
inc
add
jle
in
and
sbb
shll
imul
pusha
add
add
push
add
lds
pop
push
mov
add
scas
inc
add
add
lret
add
sub
push
jecxz
leave
xlat
ficoms
xor
stos
pop
lret
movsl
mov
add
cmp
add
sub
add
jecxz
addl
sbb
shlb
gs
rcrl
lea
cmp
and
xor
sub
dec
sarb
adc
adc
imul
pop
inc
add
mov
scas
stos
hlt
inc
add
mov
add
dec
imul
add
push
jge
or
xlat
mov
push
jmp
cmp
ja
push
mov
and
ret
icebp
push
jnp
cmpsb
mulb
add
in
jg
add
mov
push
lahf
push
pop
mov
lret
push
dec
xor
fwait
xor
sbb
mov
push
xor
add
mov
fistl
shlb
add
mov
sbb
or
filds
add
pop
dec
sbb
add
add
call
scas
roll
ret
add
fwait
stos
pop
dec
outsl
add
fsubrs
daa
add
loop
jle
jg
repz
inc
add
rolb
data16
add
pop
outsl
mov
pop
and
jmp
mov
sub
pop
imul
add
sahf
js
ds
mov
pop
ret
add
add
or
sahf
or
add
popf
push
or
mov
mov
mov
jp
cmp
stos
dec
dec
jg
or
mov
mov
add
mov
or
mov
addl
add
repz
stos
jbe
aas
in
shr
or
mov
jbe
xchg
imul
sub
sti
push
and
enter
add
dec
xchg
femms
popf
inc
add
lret
jnp
mov
sbb
mov
addl
mov
fadd
add
or
adc
mov
out
int
insl
adc
cmp
lods
in
cmpsb
xchg
xchg
imul
test
inc
add
mov
cmpsb
and
je
loop
add
cmp
push
xchg
pop
pop
add
xchg
xchg
dec
xchg
int3
xchg
int
out
add
add
sbb
movsl
loop
add
inc
add
add
add
inc
add
or
add
xor
out
addr16
lds
or
add
fidivl
pop
sarl
daa
pop
lea
push
pop
sub
aaa
bound
pop
pusha
add
dec
mov
nop
sahf
lock
dec
cli
xchg
fsubl
add
dec
add
or
add
imul
scas
test
inc
add
xor
add
jae
inc
add
inc
add
add
xor
into
adc
out
lret
cltd
xlat
mov
add
lret
ja
add
jb
repnz
cmp
add
shll
add
mov
inc
add
dec
std
and
mov
movsl
pop
les
ss
iret
sub
and
add
jg
nop
push
mov
push
and
xchg
cmc
addr16
popf
sbb
stc
jp
les
xor
add
pop
mov
gs
add
push
xor
inc
add
sub
mov
add
or
xor
fwait
and
gs
adc
sbb
add
add
in
dec
addb
test
mov
stos
roll
data16
adc
flds
fs
lods
lods
roll
add
dec
lods
fsubl
push
addl
add
in
jbe
sub
dec
xlat
add
movl
or
jge
imul
adc
out
rolb
enter
nop
cmp
jge
push
lret
dec
das
xor
out
xchg
jae
and
rolb
mov
lock
cmp
in
les
cmp
fiadds
dec
sub
ret
cmpsl
dec
xor
in
jmp
cmp
jns
cmp
rolb
add
pushf
lret
xor
fwait
xlat
je
out
ljmp
cmpsl
in
jecxz
add
ret
add
pop
mov
jae
add
jg
dec
inc
add
inc
add
add
xor
ds
add
sub
aam
add
add
sbb
les
add
popf
mov
add
add
xor
outsl
fiaddl
jge
fs
mull
mov
cmpsl
xor
push
cmpsl
push
sbb
mov
add
add
dec
jmp
lret
add
cmp
add
aaa
movl
inc
add
xchg
mov
mov
add
or
cwtl
addl
and
ss
loope
cltd
jge
addr16
insb
cmp
push
add
add
xlat
or
test
lret
xchg
sub
and
jp
add
add
mov
out
pop
mov
sbb
into
negb
push
add
leave
cmpsl
adc
add
popa
add
mov
pop
add
add
popf
add
inc
add
and
addl
sub
add
loop
xchg
mov
ljmp
repnz
lock
sbb
mov
add
ss
ljmp
mov
ja
cmp
or
adc
inc
add
xlat
push
mov
lret
scas
fsts
pop
xor
add
movsb
pop
inc
add
inc
add
fimull
ja
addl
ja
aas
cltd
adc
in
add
add
lahf
pop
mov
and
stc
and
add
rclb
repz
adc
jecxz
push
push
jg
in
push
adc
push
cltd
inc
add
xchg
pusha
add
push
addb
mov
insb
push
push
jmp
add
aaa
mov
add
rolb
mov
cwtl
push
push
inc
add
popf
add
testb
repnz
xor
mov
addl
add
push
fisubrl
test
iret
mov
add
out
adc
add
dec
testb
mov
add
or
lds
mov
daa
mov
add
inc
add
jae
and
mov
addl
add
outsb
inc
add
add
pop
lock
add
add
xchg
or
call
pop
pop
add
dec
xor
pop
jne
add
add
add
sub
and
loop
inc
add
pop
add
mov
rcrb
cs
lret
push
add
dec
repz
cmp
enter
cmpsl
xchg
mov
add
pop
or
add
popa
add
or
mov
dec
push
add
add
loopne
jae
add
jle
repz
add
add
add
imul
adc
dec
pop
mov
mov
mov
pop
and
lret
mov
add
add
hlt
inc
add
fistpl
dec
inc
add
fisttps
add
mov
add
or
pop
ds
mov
add
dec
sbb
insb
inc
add
xchg
mov
add
imul
adc
sub
addr16
lret
mov
or
jbe
aam
sub
or
dec
inc
add
rcll
jl
add
push
push
into
jno
in
add
and
jno
adc
cmc
shl
lcall
mov
jl
push
adc
mov
repz
or
aam
jg
add
dec
sti
and
lods
mov
or
test
es
test
sahf
jg
xor
jnp
popf
iret
aaa
lret
and
dec
push
aad
jge
rolb
aaa
movl
add
cs
add
mov
addl
pop
enter
fninit
addb
add
sahf
and
sahf
sbb
or
test
inc
add
cwtl
in
add
dec
sub
add
sahf
jmp
add
jl
repz
add
pop
rcl
lcall
inc
add
addl
sub
add
repnz
mov
ss
xchg
call
jge
or
movl
jge
roll
add
pop
or
repz
jno
test
xor
mov
mov
in
add
add
ljmp
add
ss
xor
insb
das
aad
pop
cmpsl
or
xchg
popa
add
mov
scas
gs
lds
sbb
cs
add
into
mov
add
movb
jns
leave
cmp
sub
cmpsb
cld
mov
jbe
dec
bound
mov
sbb
pop
push
les
push
mov
push
jb
lret
sti
clc
movsb
stos
outsl
xchg
push
dec
or
xor
jno
add
push
fnsave
mov
les
or
add
insb
xor
push
ds
add
mov
add
lea
add
cmp
sbb
mov
inc
add
jp
and
leave
sub
ret
add
in
imul
mov
add
jmp
imul
je
jle
inc
add
push
and
xchg
add
sub
add
and
add
add
addr16
sub
or
mov
add
jae
ds
add
es
push
jne
dec
movb
add
add
mov
aad
add
adc
sub
imul
repnz
add
xchg
clc
call
xchg
mov
mov
inc
add
lahf
push
and
mov
add
push
dec
sbb
inc
add
add
lods
je
push
add
pop
repnz
sbb
push
dec
lret
push
cmpsb
das
aaa
lea
xchg
jg
arpl
lods
inc
add
ret
push
and
xchg
push
cmp
adc
pop
or
nopl
add
in
mov
cs
adc
add
lock
jns
lea
ljmp
mov
sub
push
ret
add
rolb
cmp
xor
leave
cmpsl
div
loope
cmc
xchg
rcl
or
ficoms
cmp
jnp
test
scas
add
lret
pop
dec
rcrb
xor
dec
dec
mov
add
ljmp
add
pop
movb
mov
arpl
inc
add
in
daa
xor
insl
adc
mov
cmpsb
push
popf
pop
lock
fstpl
dec
dec
scas
sbb
punpcklwd
ds
add
mov
bsf
add
addb
cmp
nop
sbb
ds
inc
add
out
mov
lret
pop
lock
sti
add
sbb
add
jecxz
call
dec
push
cmp
mov
mov
or
sbb
in
mov
rolb
stos
mov
test
pop
pop
push
out
mov
ss
ds
out
or
or
out
and
js
out
cli
mov
sahf
cmp
in
das
outsl
xor
inc
add
add
mov
xchg
mov
jno
adc
enter
push
inc
add
cli
xchg
movsb
push
into
lcall
sarl
add
call
sub
inc
add
loop
lcall
cld
sahf
pop
lahf
cltd
test
mov
push
xchg
pop
add
cmpsl
dec
xchg
dec
add
out
push
into
xor
cltd
addb
popa
add
jae
add
inc
add
push
mov
sub
lret
decb
push
rclb
gs
dec
stos
add
cmovg
movsl
mov
scas
imul
push
insb
or
fcoml
add
add
dec
stos
inc
add
add
add
xor
add
fsubrp
xchg
inc
add
xchg
cmp
mov
pusha
add
pop
add
push
mov
aam
roll
dec
pop
or
or
jno
cmpsb
xchg
stc
and
or
mov
inc
add
cld
es
das
test
cmp
fndisi(8087
bound
ss
sbb
add
jl
add
pop
and
inc
add
push
add
outsb
mov
sbb
add
je
xor
divl
gs
aas
xchg
mov
or
jno
dec
sbb
movsw
bnd
cmp
mov
cmpsl
sub
jbe
movb
add
test
fdivr
shll
xchg
fnstsw
xchg
enter
loopne
insb
lock
stc
and
clc
in
loop
mov
addb
sbb
push
ffree
add
cld
fidivs
add
jbe
jmp
add
es
cmpsl
jl
adc
xor
push
add
adc
nop
xchg
mov
add
repnz
add
add
or
mov
xor
test
aaa
add
jp
lods
push
mov
popf
cmp
sub
add
pop
xchg
cmp
xchg
push
daa
jecxz
popf
pusha
add
adc
add
add
sarl
xchg
jne
add
aas
dec
inc
add
mov
sbb
mov
add
add
and
sub
cli
mov
add
test
xor
lds
xchg
push
ret
jnp
dec
int3
sbb
jae
add
cmp
popa
add
jge
inc
add
mov
movb
dec
imul
jmp
add
lea
push
xor
das
idivl
addl
add
das
and
xchg
stos
push
cmp
ja
in
pop
jno
push
push
sbb
cmp
pop
add
and
imul
ja
cmp
jae
add
movsl
jecxz
dec
jle
add
test
adc
add
inc
add
addl
add
mov
xchg
sti
fiaddl
add
stos
push
cld
sub
in
cld
mov
sub
test
add
jp
insl
xor
dec
xor
rorb
mov
fsubs
add
mov
aam
outsb
fcomi
dec
sub
imul
je
push
arpl
jns
add
enter
add
test
sti
sub
test
mov
out
adc
or
inc
add
sub
ret
sub
add
jb
mov
scas
js
cmp
jl
dec
cli
jnp
addl
dec
xlat
inc
add
add
repz
push
lock
cltd
pusha
add
sbb
push
jmp
or
sub
add
pop
adc
and
mov
add
add
mov
fs
sub
sub
add
sub
push
mov
test
sub
es
jo
dec
jmp
jp
mov
add
mov
xor
mov
cmp
clc
push
das
lret
roll
fstpt
add
mov
add
add
aad
rolb
xchg
std
mov
pop
lret
rolb
mov
cld
xor
mov
and
pusha
add
lock
dec
pop
clc
popf
mov
lcall
sub
dec
pop
mov
fsubrl
pop
add
add
lods
mov
roll
add
cwtl
call
dec
clc
cmp
sbb
inc
add
push
mov
add
roll
sub
add
jne
add
dec
cli
jno
mov
and
xchg
push
xor
mov
add
pop
addb
add
je
push
add
add
mov
add
fwait
cld
push
mov
aad
add
adc
add
imul
inc
add
add
and
fidivrl
mov
xor
xor
cmp
push
into
xchg
stc
ja
loope
add
add
add
add
decl
inc
add
addb
xchg
mov
mov
into
xor
pop
lret
adc
push
mov
leave
cli
xchg
mov
add
add
mov
cs
aas
iret
sub
mov
mov
add
xchg
xchg
test
addl
add
add
dec
push
fsubp
fs
and
push
push
jge
enter
add
daa
rclb
xor
js
aas
addb
dec
lahf
push
add
add
and
mov
enter
sti
mov
xchg
jle
sub
mov
add
fimull
add
or
call
cmpsl
addb
sub
loop
outsl
lahf
test
in
addb
xchg
data16
dec
jo
or
mov
aas
data16
jg
cmc
add
add
aas
into
repz
ja
repz
add
adc
stos
mov
roll
sub
add
dec
xlat
xor
pop
bound
mov
roll
stc
cmp
imul
add
aad
cmc
daa
mov
push
fisubrs
filds
add
fstps
notl
aam
cmp
sar
mov
mov
div
pushf
scas
xor
jno
xor
ffree
add
add
fdivl
adc
std
lock
add
outsl
fwait
dec
push
pop
insl
ss
ffreep
add
add
dec
mov
fistpll
addb
pop
sbb
mov
enter
sbb
cmp
mov
xchg
addb
icebp
clc
xchg
xchg
jg
sbb
jp
mov
inc
add
add
add
jbe
add
mov
add
or
push
mov
mov
fsubl
mov
sub
push
addb
dec
push
push
mov
insb
mov
notl
cmc
les
int
das
adc
adc
repz
sbb
add
dec
loope
mov
inc
add
xor
pusha
add
and
fldz
mov
cld
dec
scas
push
add
hlt
inc
add
jo
dec
push
jg
sbb
push
xor
icebp
sub
sahf
inc
add
push
push
xor
xchg
sub
lds
pop
ret
xor
inc
add
pop
lret
xor
pop
pop
sbb
mov
dec
lret
aad
add
push
fwait
shrb
add
cmp
add
add
aaa
roll
inc
add
xlat
into
roll
jmp
sahf
addl
add
test
push
add
sub
mov
cmp
add
cmp
add
xchg
push
and
int3
mov
adc
jg
cmpsl
fsubrs
adc
push
pop
cmp
push
loop
fs
mov
std
cwtl
add
xor
rclb
fwait
adc
jmp
pop
pop
mov
jbe
cli
icebp
push
das
adc
sub
lcall
sub
add
sbb
imul
ret
add
and
and
sub
sub
in
ds
shll
enter
lcall
fdivr
test
repz
xor
jno
add
or
add
jge
insl
push
in
into
pop
stos
xor
out
out
rolb
or
shlb
imul
mov
mov
std
mov
loop
cwtl
addl
push
jno
push
push
push
addb
add
outsl
fstl
ror
jb
push
add
add
add
mov
cli
dec
das
sbb
and
pop
add
adc
sbb
ja
push
add
gs
sbb
jl
filds
dec
lahf
lods
mov
add
lea
loop
add
outsb
xchg
mov
arpl
jl
rorl
in
out
add
scas
and
insl
test
cld
add
call
and
ja
or
xchg
fdivl
dec
popf
js
pop
sarl
add
stos
aaa
inc
add
in
add
dec
dec
dec
pop
jmp
pop
dec
pop
mov
sbb
xchg
mov
pop
add
sarb
jbe
cwtl
fidivs
sub
stc
in
jo
push
jno
sub
aas
cmp
and
fstpt
ret
jl
and
ret
add
roll
add
imul
xchg
jg
jmp
xchg
loopne
add
xchg
test
scas
sbb
jae
add
jnp
and
fcmovbe
cmpsl
or
add
dec
push
and
notl
scas
xchg
dec
xlat
call
addl
aaa
pop
inc
add
add
or
cmp
and
xor
fwait
mov
mov
xchg
mov
mov
jae
dec
loop
test
and
add
lods
and
xor
and
scas
pop
nop
xchg
adc
xchg
cs
int3
inc
add
lock
add
pop
icebp
iret
ds
cltd
cmp
push
push
sahf
mov
push
imull
inc
add
and
add
push
aaa
mov
pop
add
mov
cmp
cmp
pop
adc
sub
pop
addl
add
push
sub
add
std
lds
xor
push
add
ja
mov
inc
add
jg
mov
dec
xchg
repz
cltd
or
add
cld
incl
add
add
add
and
in
jmp
ljmp
call
sahf
inc
add
add
add
fsubs
es
clc
inc
add
push
in
data16
mov
in
gs
sbb
add
add
in
bound
addb
dec
movsb
pusha
add
add
mov
pextrw
add
mov
movb
mov
in
jmp
mov
icebp
movsb
mov
sbb
add
repz
mov
add
lods
mov
push
xchg
out
popa
add
add
xchg
mov
jnp
addb
add
adc
dec
test
inc
add
xor
dec
dec
dec
cwtl
pop
aas
int3
aaa
jns
mov
test
jg
addr16
add
fsubrs
imul
das
int3
lea
ljmp
lret
in
data16
add
pop
jmp
movl
xchg
lods
rolb
in
call
xlat
adc
fisubrs
add
sub
jmp
popa
add
std
adc
mov
mov
adc
loope
roll
push
cmp
add
out
jae
add
inc
add
push
and
aad
add
lret
cmp
scas
pop
addb
popa
add
add
les
ret
add
loope
pop
fbstp
add
cltd
mov
add
imul
jle
xlat
sbb
or
mov
add
xor
push
mov
loope
test
sub
cmp
mov
mov
pop
cmp
out
or
push
mov
fmulp
inc
add
and
push
and
adc
test
cmp
add
daa
fistpll
icebp
loop
xchg
mov
add
xchg
shlb
in
jge
cld
push
js
adc
fwait
jb
movsb
lock
push
lock
push
jmp
pop
and
movb
add
mov
mov
add
test
not
inc
add
add
jmp
cmpsb
ret
add
add
pop
push
fimull
cld
and
daa
or
add
add
mov
or
add
addl
sbb
mov
dec
addr16
dec
outsb
fsub
pop
in
out
addb
shll
add
fwait
push
dec
sub
sti
insl
xlat
call
inc
add
and
call
or
js
inc
add
imul
enter
xlat
lock
add
mov
push
mov
lods
je
push
jo
add
stc
or
ds
add
in
jno
or
add
lahf
addl
add
pop
ds
add
fsts
dec
adc
in
outsl
stos
into
and
add
add
cmp
roll
sbb
add
add
pop
inc
add
lods
push
add
hlt
jp
nop
mov
aas
shrb
jge
lods
imul
inc
add
fwait
dec
lock
lret
xlat
mov
rorb
aaa
push
dec
add
ja
cmc
or
push
xor
mov
pop
mov
ret
add
fwait
es
pop
mov
fs
cmp
repnz
xchg
push
adc
pop
js
add
mov
test
ljmp
lds
adc
push
loope
ja
or
add
cmp
ret
loopne
call
dec
ljmp
push
jl
add
or
mov
addb
add
pop
lods
inc
add
shlb
cmp
cmpsb
mul
pop
adc
add
inc
add
bound
scas
pop
add
enter
aad
add
sbb
dec
fcomps
or
add
test
mov
movsb
sbb
imul
xchg
push
and
mov
mov
int3
insl
daa
std
popa
add
ljmp
sub
inc
add
push
jb
add
bound
addb
mov
lret
movb
enter
iret
testl
mov
push
jge
mov
loopne
mov
ret
add
inc
add
or
cld
sub
inc
add
add
clc
lds
outsl
sub
mov
add
addl
mov
jl
insl
push
lahf
xor
push
fildl
add
and
stos
mov
add
add
inc
add
inc
add
xchg
push
movsl
or
inc
add
add
mov
cltd
into
sti
in
aas
mov
add
repz
jo
popf
out
push
cmp
movsl
add
loope
add
addb
jno
add
loop
in
mov
add
pushl
xlat
loop
mov
je
add
adc
roll
mov
enter
push
and
imul
push
movb
add
data16
pop
mov
lret
mov
movsb
fimuls
and
test
pusha
add
cmp
push
les
pop
ror
push
inc
add
out
cmp
push
out
fdiv
cmpsl
mov
dec
dec
sub
xchg
sbb
insl
stos
rcll
int3
pusha
add
jl
mov
ja
adc
add
scas
outsl
out
dec
inc
add
add
sbb
ret
add
or
jo
popf
inc
add
imul
lods
cmpsl
hlt
xchg
fwait
adc
xor
scas
inc
add
or
push
addr16
fsubl
jg
add
mov
insl
ljmp
dec
fimull
add
add
ret
outsb
and
fsubr
or
adc
push
mov
add
movsl
mov
cmp
jbe
jo
xor
std
sub
lcall
sbb
dec
ret
add
ss
pop
jmp
cwtl
fidivl
xor
jne
mov
adc
and
and
fildl
add
movsl
pop
popf
stos
jno
xor
adc
mov
add
mov
pop
loop
add
add
mov
inc
add
repz
add
mov
push
mov
add
jle
dec
mov
mov
addb
cmpsb
jns
fs
es
out
fnop
hlt
jl
lods
cmpsl
cld
add
cmp
movb
add
mov
xor
cmp
add
xlat
and
fmuls
int3
fistl
mov
in
add
lds
arpl
pop
xor
js
inc
add
fldenv
add
jmp
aam
pop
lret
jl
stc
and
test
push
inc
add
add
icebp
sbb
add
add
and
imul
xchg
and
pop
jns
sbb
cmp
add
push
icebp
bound
sub
cmp
xor
sarl
lock
nop
ficompl
add
imul
and
push
add
bound
mov
xor
push
jbe
xor
je
add
int3
addl
mov
fcoms
data16
cmp
lods
iret
jns
adc
add
lret
mov
mov
sub
push
lret
add
or
cmp
mov
inc
add
inc
add
push
xchg
mov
lcall
add
rcll
jns
add
out
cmp
add
rcll
and
outsb
xchg
lods
addl
adc
out
sbb
add
fsub
dec
xor
xor
cmp
or
addb
addl
imul
add
test
or
mov
push
add
cltd
mov
sub
fldenv
outsb
or
sub
xchg
out
pop
stos
bound
aad
xchg
xor
lret
sub
out
test
add
test
mov
jae
data16
xchg
sbb
add
into
daa
iret
or
cmp
in
lods
scas
lods
call
sub
out
xor
cmp
adc
fists
push
add
jl
add
ret
mov
loopne
rolb
push
mov
icebp
jae
push
inc
add
add
pusha
add
adc
pop
addl
pop
add
xor
ss
xacquire
mov
inc
add
pop
dec
call
shrl
add
jle
add
push
sbb
lahf
pop
mov
add
pop
xchg
jne
movl
jmp
into
in
add
mov
sahf
imul
cmp
add
or
add
scas
push
pop
leave
push
pop
pop
xchg
inc
add
pop
icebp
mov
sbb
add
bound
addb
dec
and
in
loopne
mov
mov
inc
add
rolb
add
lock
add
add
push
addb
jmp
add
pop
mov
scas
sar
add
xor
lds
das
xchg
push
or
fildll
movsl
fimull
sub
add
das
insl
mov
sub
aas
in
fistps
fsubl
add
imul
pslld
in
xchg
js
mov
lret
xchg
pop
add
dec
push
push
xlat
jne
add
dec
fimull
movl
xor
push
sub
lods
arpl
lcall
push
loop
inc
add
inc
add
out
or
add
mov
xchg
or
in
add
sub
add
pmulhw
repnz
push
or
out
inc
add
add
in
addl
ficoml
add
pop
push
push
add
lret
out
lods
adc
loop
sbb
das
xor
loope
xchg
xlat
addl
mov
add
pcmpgtb
aam
sub
add
fstpl
mov
mov
add
xor
movsl
addr16
mov
sbb
sub
movsl
xor
mov
add
add
cmp
ja
add
addr16
push
fiadds
add
add
add
add
fwait
fwait
mov
loopne
add
xchg
mov
pop
add
add
ja
into
mov
add
cmp
add
sub
addl
sbb
aas
fildll
lret
add
rolb
dec
and
cli
mov
out
movsb
xor
and
ret
add
popf
and
les
push
xchg
outsb
out
repz
adc
add
in
xor
ficoml
in
cmc
out
pop
clc
inc
add
add
roll
shl
mov
enter
imul
sub
repnz
fs
int
sbb
rclb
dec
xor
sub
add
cli
and
xchg
les
dec
inc
add
stc
push
fstps
or
ficompl
push
wrmsr
addr16
dec
adc
popa
add
add
mov
sub
jo
add
add
jb
into
sbb
push
je
xchg
xchg
inc
add
sub
sub
dec
shr
das
sbb
inc
add
add
xor
sbb
daa
insl
cmp
add
not
jnp
out
cmovb
addb
icebp
inc
add
outsb
roll
mulb
int3
aam
addl
mov
scas
in
int
adc
repnz
add
push
add
rolb
addr16
mov
add
cmp
adc
xchg
jnp
adc
movl
incl
jo
scas
loopne
add
inc
add
call
rcrb
divl
in
sub
dec
int3
adc
out
add
sbb
fs
add
push
loope
pop
dec
roll
pushf
add
out
pop
mov
add
add
push
addb
loopne
jecxz
pop
enter
mov
push
repnz
out
cmp
in
xchg
in
cmp
test
ds
aam
lcall
sbb
and
es
or
ss
add
xor
test
cltd
mov
in
leave
adc
lods
mov
add
push
ss
or
add
mov
sti
cmp
add
add
dec
shl
les
out
mov
lret
call
jmp
addl
add
add
add
add
faddl
or
imul
cmp
fcomps
cmp
add
add
ljmp
addr16
xchg
pushf
xor
lcall
insl
xor
rcrb
xchg
jg
aaa
pop
daa
adc
add
mov
push
arpl
jo
rclb
pop
aam
push
xchg
fwait
les
push
push
dec
bndstx
or
adc
add
int
mov
std
test
xor
imul
mov
add
add
decb
fdivr
or
and
es
cmpsl
push
jbe
je
sub
imul
test
mov
add
add
addl
pushf
mov
push
addl
xchg
fnstenv
test
mov
aas
xchg
pop
in
lret
sbb
add
jb
xchg
push
add
add
leave
adc
cmc
rolb
xor
add
les
pop
mov
add
out
add
add
jecxz
xchg
xor
mov
jno
mov
dec
fstpt
add
clc
in
jle
add
sbb
call
add
mov
jecxz
clc
sti
outsl
sub
fidivl
out
push
sbb
add
push
lods
hlt
pop
outsl
dec
xchg
call
add
or
add
push
es
lret
pop
jecxz
add
xchg
and
ss
or
add
stc
in
into
jnp
std
pusha
add
fiaddl
test
mov
inc
add
stos
enter
xchg
call
pop
or
and
popf
and
jg
pop
out
xchg
jb
mov
out
rol
add
add
mov
inc
add
ficoml
rolb
insb
xchg
das
rcll
or
dec
xchg
or
das
pop
add
test
addl
cmpsb
into
inc
add
sbb
lret
inc
add
out
mov
and
inc
add
add
pop
popl
lcall
std
jecxz
popa
add
cltd
or
fidivs
outsb
inc
add
jmp
je
flds
lea
add
mov
add
arpl
fwait
and
add
mov
dec
sbb
mov
mov
xchg
fs
fisttpl
insl
xor
mov
sbb
add
or
or
add
mov
xor
add
jg
mov
sbb
xchg
pop
popf
cmp
fcos
popa
add
and
out
and
pop
mov
enter
add
clc
fistpll
mov
ss
test
cltd
push
in
inc
add
cmp
aas
xchg
sub
add
add
add
call
leave
in
cmova
cmp
addb
leave
xor
sub
add
sti
cmp
pop
jae
shrb
gs
add
and
test
sub
pushf
fmuls
stos
in
mov
fldl
inc
add
mov
das
cmpsb
addb
add
movsb
jp
push
push
and
mov
lcall
add
das
jno
cmp
incl
add
adc
test
rcrb
dec
mov
out
in
inc
add
pop
push
cmc
sbb
int3
in
sub
mov
xchg
and
xchg
stc
arpl
pop
mov
xchg
sbb
add
lahf
test
xchg
mov
add
jb
adc
or
jnp
add
bound
addb
mov
xlat
mov
push
add
roll
mov
xchg
xor
add
jbe
mov
push
das
out
divl
dec
dec
lods
aas
dec
out
cmp
push
ds
add
fbld
mov
push
or
fwait
ja
je
pop
mov
cmp
clc
test
data16
pusha
add
push
push
sub
test
addb
add
aaa
test
adc
shrl
icebp
xchg
sub
add
jns
xchg
jl
sbb
add
bound
adc
movsb
xchg
lcall
iret
inc
add
notl
add
ss
xchg
ficompl
add
dec
scas
loopne
enter
add
cmp
loop
jne,pt
test
ret
add
data16
addl
add
popa
add
icebp
pushf
dec
test
out
xchg
ret
stc
add
cmp
icebp
jns
add
sub
add
dec
mov
addl
mov
dec
mov
pop
leave
mov
pop
mov
bound
popa
add
pusha
add
push
fisubs
xlat
add
mov
stc
lock
jo
add
inc
add
push
and
add
sub
addb
push
iret
sbb
repnz
rorb
xchg
pushf
mov
cmp
addl
daa
ljmp
fistpl
inc
add
cmp
sub
int3
enter
xchg
push
add
or
add
aam
mov
inc
add
loope
add
cmc
mov
clc
push
and
int3
mull
fst
pop
push
addb
shll
fucomp
addr16
aam
add
ljmp
dec
iret
lahf
test
jbe
fstpl
sbb
dec
add
bound
lods
addr16
popf
mov
lret
or
xchg
adc
add
mov
fdivrl
jns
inc
add
lds
pushw
inc
add
add
nop
lahf
scas
aas
push
or
mov
movsb
or
shlb
add
sub
addb
jmp
xor
add
sbb
dec
mov
pop
sub
push
lret
jno
cli
pop
pop
and
mov
es
push
mov
jge
add
mov
xchg
dec
nop
or
dec
call
out
addb
scas
lahf
mov
in
cmp
loopne
jl
testl
mov
adc
ficoms
and
sbb
jp
push
dec
sbb
xor
addl
add
mov
cs
add
dec
mov
add
rolb
jno
add
aad
mov
sub
jmp
add
int
push
test
in
lcall
je
je
add
add
inc
add
dec
repnz
add
out
rorl
aaa
mov
hlt
dec
cmp
pop
add
fnstsw
inc
add
cmpsl
mov
dec
and
jnp
adc
ret
add
in
addl
inc
add
shl
push
add
pop
addr16
xchg
in
ret
add
xchg
rclb
pop
nop
mov
movl
repnz
add
sub
add
sbb
fists
jne
enter
hlt
in
add
lret
dec
cwtl
cmpsl
hlt
addb
add
pop
pushl
push
push
adc
lret
cmp
add
addr16
imul
add
ja
std
roll
hlt
and
jp
and
adc
in
add
mov
jae
inc
add
add
lds
movsl
xor
shl
sarl
xchg
scas
hlt
mov
out
add
rcrb
mov
mov
push
ret
cmpsl
push
pop
xchg
cs
lret
fcmovnb
add
jle
cmp
je
push
movsl
inc
add
sbb
cmc
hlt
aam
add
add
add
insl
mov
push
add
test
ljmp
shrb
lea
adc
push
adc
add
call
stos
cli
lahf
push
dec
addl
std
jmp
mov
mov
pop
inc
add
sbb
loope
pop
adc
push
sbb
add
ljmp
add
xor
loope
mov
add
jnp
fcomps
push
sbb
loopne
pop
xchg
hlt
and
mov
and
arpl
imul
adc
push
popl
mov
jl
add
add
mov
adc
xchg
dec
add
inc
add
add
pop
loop
dec
sub
stc
dec
jo
mov
imul
add
out
repnz
call
mov
lds
aaa
call
leave
sbb
icebp
cmpsl
addb
push
sub
popa
add
push
add
jg
dec
lods
in
bound
les
stos
sub
dec
decb
and
inc
add
add
mov
xor
add
or
push
sub
std
and
xor
fistl
aaa
mov
dec
mov
jb
xchg
jo
test
mov
and
and
xlat
cltd
and
lea
aaa
inc
add
sbb
daa
test
sub
out
sub
xor
js
ret
add
jnp
xlat
inc
add
sbb
hlt
bound
stos
arpl
sbb
seta
aad
xchg
roll
test
jae
add
gs
rolb
fsubrl
iret
push
jg
frstor
outsb
push
aas
and
scas
rcrl
add
push
pop
xor
int
imul
rolb
popa
add
and
adc
sbb
lea
stc
push
loop
call
je
push
mov
jno
dec
dec
int
sub
rcr
dec
cli
nop
ljmp
outsl
xchg
imul
jl
mov
cli
ja
push
int3
in
inc
add
ret
add
and
stos
sahf
mov
js
sbb
pop
bound
pop
pop
cli
ds
dec
and
in
mov
mov
pop
iret
call
insb
out
adc
mov
add
pop
mov
jg
sbb
add
add
mov
and
test
adc
ficomps
mov
push
cmc
push
fisubrs
jp
int
mov
add
in
push
pop
sti
cmp
jae
add
das
in
test
sti
mov
xor
add
sub
cmp
push
pop
or
add
hlt
out
mov
add
sub
scas
push
in
lods
in
adc
imul
mov
add
add
lods
mov
addl
add
aas
pop
addb
stc
mov
add
add
add
insb
ljmp
push
dec
rcrl
test
push
sarl
push
imul
into
xor
pop
push
jne
add
sub
in
add
and
pop
fcompl
or
pop
das
push
test
jle
sahf
push
mov
pop
mov
cwtl
fcompl
aad
cmc
stc
int3
movsl
cltd
int3
xor
xor
jge
addb
leave
in
push
pusha
add
jl
dec
mov
jmp
out
pop
jo
stos
xchg
sub
dec
imul
mov
paddusb
add
movb
aas
fsubrl
stos
mov
mov
ja
or
fwait
loopne
mov
mov
and
cmc
int
or
insl
pop
add
leave
xor
test
cmp
cmp
add
add
adc
mov
dec
enter
addb
pop
or
mov
add
adc
add
dec
push
xchg
mov
jne
inc
add
cmp
lock
add
repnz
xchg
sbb
or
idiv
xor
cltd
cmp
mulps
inc
add
mov
cmp
dec
push
jb
add
jge
cmp
mov
test
sbb
sbb
add
cmpsl
jmp
lock
shl
notl
sbb
inc
add
mov
cli
or
ja
dec
in
mov
xchg
bnd
add
jmp
inc
add
sbb
add
fsubs
lcall
arpl
jb
movl
push
dec
data16
mov
jae
sub
js
sbb
iret
lahf
stos
sti
cmp
jne
pop
in
sub
cs
add
xchg
jbe
mov
add
or
loopne
or
add
in
dec
sub
mov
add
sub
add
add
mov
icebp
push
rolb
mov
xor
jae
and
mov
jle
push
repnz
add
and
jmp
pop
push
mov
imul
scas
inc
add
in
mov
sti
shll
inc
add
jo
aaa
jp
lahf
xor
sbb
movb
fisubl
pop
mov
add
add
lcall
clc
movl
movb
add
int
int
lds
inc
add
add
icebp
mov
or
ret
jl
int
in
xchg
popa
add
clc
mov
mov
add
adc
add
or
das
xchg
and
ja
cmp
sbb
add
push
and
pusha
add
fisttpl
jo
mov
popa
add
add
mov
ljmp
insb
add
je
push
in
add
clc
pop
add
loope
in
push
add
addb
scas
jo
jnp
sbb
and
pop
je
insl
sbb
add
mov
add
mov
in
in
out
add
xor
add
inc
add
fsubs
out
test
imul
add
add
test
sahf
jmp
add
rolb
xchg
dec
mov
stos
adc
mov
add
adc
lcall
sub
mov
adc
sub
push
adc
xor
add
pop
fs
clc
sub
adc
mov
lret
addr16
pop
push
cld
pop
add
inc
add
jnp
dec
jg
push
ds
mov
add
mov
sub
mov
push
add
add
inc
add
adc
fs
and
pusha
add
add
out
fs
jle
pop
add
push
lds
das
addl
cmp
xchg
arpl
insl
mov
add
add
dec
lcall
roll
mov
in
adc
inc
add
stos
call
jg
add
lds
nop
fcmovb
add
nop
push
xchg
jb
fisttps
push
insl
das
push
arpl
jb
divl
mov
out
stos
addb
add
in
stos
loopne
nop
addl
in
shrl
mull
add
movsl
addb
shl
mov
pop
xchg
lods
dec
fidivrs
inc
add
add
pop
movsl
mov
ja
inc
add
add
mov
pop
out
ret
push
mov
addl
sti
sti
leave
fs
pop
lret
sbb
mov
ja
int
fiadds
lea
dec
push
shrl
test
js
addl
je
lods
xchg
addb
sub
add
xor
pop
push
in
adc
add
pop
fnsave
xor
aas
jg
repz
fwait
adc
outsb
xchg
aaa
dec
push
add
sbb
addr16
add
cltd
xchg
mov
add
xor
sub
pop
sub
leave
popa
add
mov
xor
jmp
jg
pop
cmp
add
clc
pop
adc
fdivl
or
dec
mov
add
shlb
add
sarb
adc
inc
add
cmp
mov
ret
xor
add
mov
int3
jg
fcoms
sub
add
xor
mov
in
mov
imul
rolb
inc
add
add
cmp
push
call
mov
add
ffree
add
inc
add
add
add
out
in
into
pop
in
mov
sbb
pop
movsl
jae
add
cmpsb
mov
es
les
or
enter
hlt
add
roll
add
adc
out
lock
mov
xor
xor
add
adc
shl
push
sbb
mov
dec
lret
xchg
enter
out
mov
add
lret
jp
push
popl
xchg
jmp
hlt
inc
add
mov
test
sub
in
xor
call
add
ret
add
ss
arpl
addl
add
cmp
lock
and
sbb
dec
push
push
pushf
sbb
scas
cli
cli
lcall
jb
fildl
add
or
insl
rolb
mov
aam
bound
push
cmp
push
sbb
mov
pusha
add
add
fsubrl
xchg
inc
add
repz
sub
lea
repz
jle
sti
scas
inc
add
mov
popf
xchg
mov
aaa
cli
mov
push
jecxz
rolb
mull
loopne
lds
jmp
nop
pop
in
pusha
add
loopne
lods
jne
jge
out
lcall
pop
mov
add
das
dec
sbb
out
fdivs
adc
xchg
jmp
jge
and
xchg
mov
mov
inc
add
xchg
sub
add
xchg
add
xor
repnz
cwtl
xchg
pop
rcrb
aad
xchg
hlt
dec
daa
cwtl
stos
mov
push
clc
out
icebp
push
cmp
push
add
addl
dec
mov
dec
xchg
aas
xchg
ds
movsl
mov
mov
imul
push
pushf
enter
push
aas
fcmovu
or
or
les
mov
mov
xchg
loopne
push
pop
add
mov
sub
xchg
mov
jbe
aas
fistpll
cmpsl
adc
mov
sbb
adc
add
fisubs
inc
add
lret
int
jae
add
add
jno
add
mov
cltd
add
mov
xchg
lahf
enter
mov
sub
nop
mov
xchg
sbb
sbb
shrb
add
into
lret
xchg
ds
jo
icebp
mov
cs
jmp
stc
mov
scas
test
roll
dec
xchg
mov
in
les
inc
add
dec
xor
repz
cmp
je
push
xchg
mov
fs
inc
add
notl
add
sub
test
jecxz
add
add
jle
loop
adc
jl
or
jg
out
or
xor
or
xchg
jo
add
bound
addb
stos
popf
inc
add
mov
push
jnp
push
es
add
lcall
frstor
add
movl
std
or
add
push
jb
pusha
add
je
roll
lret
sbb
sbb
add
pusha
add
add
cmp
add
int3
sub
jg
mov
mov
pop
dec
repnz
or
movl
rolb
mov
add
or
sub
add
rcrb
addr16
xor
add
mov
or
xchg
out
testb
inc
add
insl
pusha
add
mov
mov
add
mov
or
rolb
fwait
enter
mov
jbe
push
imul
fdivrl
loop
mov
push
inc
add
inc
add
movsb
sahf
or
pop
push
fwait
lret
push
movsl
mov
xchg
repz
mul
sub
push
add
insl
in
hlt
pop
shll
inc
add
add
xchg
nop
cmpsl
ret
add
or
shrl
lock
jbe
xor
add
decl
push
icebp
addb
add
sbb
adc
pop
mov
mov
add
popa
add
cmp
inc
add
mov
test
movl
movb
aam
mov
cmp
inc
add
packsswb
outsl
arpl
stos
sub
std
ds
mov
add
sub
clc
mov
jne
pop
bound
outsb
fisttps
fildl
sub
mov
add
add
xchg
aas
jo
add
add
mov
add
pushf
cmp
add
add
aaa
scas
pop
std
sub
in
and
bound
jo
add
pop
rcll
mov
sahf
xchg
ret
movl
add
pop
mov
mov
add
bound
insl
xchg
pop
sahf
out
add
pop
dec
mov
addl
add
cmpsb
jg
icebp
rolb
ljmp
aad
cmp
add
bound
pop
sbb
xor
xchg
add
inc
add
pop
xchg
mov
arpl
cmpsl
in
xor
lods
aas
xchg
xor
dec
push
xchg
lcall
lea
or
mov
aad
mov
movb
xchg
jl
lds
fistpl
jp
add
out
lret
scas
cwtl
popf
ss
adc
addl
hlt
add
outsb
push
add
insb
out
ret
add
pushf
dec
mov
addl
pop
addb
stos
cmp
add
cltd
mov
dec
test
hlt
addl
xor
mov
and
add
add
pushl
mov
adc
add
movb
stc
loop
mov
inc
add
add
arpl
pusha
add
or
jb
dec
test
mov
movl
mov
dec
inc
add
add
mov
int3
test
adc
add
test
jo
aaa
lcall
adc
outsb
mov
cmp
add
push
fcomps
test
pop
push
pop
negl
sub
movl
fwait
and
movb
add
mov
inc
add
movsb
pop
adc
mov
in
leave
and
sarl
cmp
hlt
adc
add
shl
pop
movb
push
dec
rep
sahf
adc
mov
addl
outsb
dec
lahf
xchg
lret
std
int3
jge
fsub
lcall
xchg
jecxz
xchg
ljmp
sub
add
mull
fadds
add
mov
add
mov
mov
add
or
jecxz
out
mov
outsb
aam
fcoms
cli
dec
sub
add
xor
fdivs
cmp
push
mov
add
or
inc
add
add
add
xchg
mov
movl
lahf
inc
add
cs
imul
cmc
aad
test
test
inc
add
mov
inc
add
mov
repnz
not
jno
jl
mov
add
or
in
stos
rolb
dec
or
das
or
addl
add
dec
dec
add
xchg
js
or
insl
ficoml
xchg
call
jp
mov
push
das
jbe
inc
add
movsl
mov
mov
ss
lds
aas
dec
dec
lret
cwtl
addl
out
sub
getsec
or
lods
or
and
arpl
daa
in
fcmovnb
add
movl
mov
bound
mov
and
fcom
in
add
sar
jbe
mov
push
dec
ret
add
push
int
dec
xchg
mov
aas
sbb
dec
sbb
dec
in
pop
leave
xchg
iret
or
jecxz
add
stos
pop
inc
add
cmp
pop
out
out
add
cmp
dec
out
arpl
jmp
add
add
jne
loop
xor
add
fwait
sbb
lods
jae
lcall
xchg
adc
mov
sbb
mov
add
out
das
sbb
les
cmp
jg
sbb
xor
mov
mov
dec
jb
add
ds
push
imul
xchg
cmp
sbb
or
or
pop
mov
adc
add
data16
add
add
cmpsb
cmpsl
shrb
adc
dec
jecxz
push
shlb
mov
add
sbb
dec
dec
insl
pop
enter
push
test
pop
mulb
lods
call
pop
add
mov
xchg
pop
dec
add
sbb
jne
sbb
les
push
push
inc
add
xor
stos
es
add
push
je
add
ljmp
fcomps
jecxz
or
jle
add
mov
sub
loop
jmp
push
hlt
mov
movl
inc
add
lds
dec
shlb
cmp
cmp
cmp
add
movl
add
pop
add
mov
add
sub
adc
push
jg
add
rolb
jmp
mov
scas
rep
jo
add
out
xchg
mov
dec
pop
inc
add
imul
mov
add
repnz
mov
add
jne
fsub
movsb
lock
add
mov
repz
push
fldt
div
mov
insl
xor
add
shll
xor
xor
adc
add
cmpsl
scas
jbe
inc
add
cwtl
call
aaa
xchg
mov
and
mov
add
sbb
add
ja
add
fnop
cmp
add
push
add
inc
add
xchg
loop
add
lcall
mov
lcall
addb
add
repz
add
lahf
es
das
inc
add
pop
pop
add
mov
in
addb
add
call
into
mov
sub
or
jbe
mov
fidivrl
fldt
push
test
xor
std
or
adc
test
icebp
add
sub
das
lock
aam
add
add
push
outsb
jbe
xor
pop
add
mov
add
repz
fisubl
pushf
mov
mov
not
dec
sbb
jns
data16
or
xor
mov
jmp
js
sbb
or
add
xchg
and
add
call
dec
gs
fcmovnbe
push
push
xchg
xchg
inc
add
into
mov
insb
jmp
add
insb
mov
xor
fcoml
add
data16
sub
cmp
xchg
pushf
pushf
sub
pop
je
fldt
add
stos
adc
pushf
xchg
add
cmp
in
add
sbb
mov
pop
icebp
iret
js
pop
mov
loopne
inc
add
add
push
enter
adc
add
mov
cmp
jmp
imul
add
mov
mov
inc
add
inc
add
popf
lret
mov
add
imul
arpl
lods
jbe
push
add
push
into
rolb
and
popf
sahf
cli
bound
movsl
sub
mov
out
sub
adc
or
and
xor
xchg
push
stos
pop
mov
inc
add
xchg
mov
aaa
loop
stc
nop
loopne
std
testb
or
jmp
bound
lahf
xor
mov
add
add
add
aam
cwtl
sbb
mov
and
jb
sti
fstpl
sub
sbb
addb
dec
pop
adc
mov
jno
push
je
add
jno
add
add
pusha
add
jle
xchg
insb
loope
mov
nop
frstor
add
add
cli
in
add
dec
cmp
push
xchg
xor
test
das
jge
add
loopne
dec
lret
mov
mov
lds
push
add
sub
add
or
xchg
xor
out
imul
add
push
lret
pop
mov
test
inc
add
xchg
call
enter
add
add
jae
add
sub
movsl
fstps
mov
mov
jnp
add
mov
jo
negb
pop
add
add
cmp
dec
dec
leave
dec
sbb
fistps
mov
add
add
jecxz
add
scas
adc
daa
into
leave
frstor
shl
addb
shlb
shll
jp
add
mov
jmp
stos
or
add
test
int3
loope
fsubp
add
push
addb
mov
mov
xchg
int3
negl
dec
call
pop
dec
xchg
mov
xor
cltd
hlt
movl
sbb
loopne
add
leave
les
jg
setae
gs
mov
push
sahf
mov
dec
lea
pusha
add
add
int3
xor
stc
mov
push
sub
dec
in
int
add
in
mov
jb
lahf
js
or
outsl
lock
jecxz
mov
mov
jno
adc
fdivrs
addl
add
lods
sbb
jne
push
dec
sar
jecxz
lret
jecxz
dec
lcall
add
mov
cmp
popa
add
adc
testb
jbe
lock
bnd
fwait
jmp
add
lret
mov
adc
imul
shrb
jo
out
adc
cltd
stos
push
pushf
rolb
and
addb
loopne
dec
pop
ja
mov
cld
test
xor
shlb
xchg
mov
test
jle
sbb
add
movsb
lods
loopne
pop
jns
stos
cmc
cmpsl
xchg
addr16
sub
repz
lret
pop
push
clc
imul
pop
sub
out
mov
sub
pop
mov
pop
cld
sub
xchg
dec
nop
cs
out
enter
stos
std
int3
popf
aad
jecxz
sahf
mov
add
in
repnz
enter
jecxz
pop
pushf
les
gs
or
xchg
insb
pop
scas
xor
adc
xor
mov
ss
add
push
mov
out
xchg
imul
add
jnp
or
pop
fstpl
add
testl
add
adc
jnp
add
mov
jmp
mov
push
dec
dec
idivb
pop
jns
dec
imul
mov
ret
add
xchg
xchg
xchg
stos
in
jle
daa
jp
add
add
fistpl
pop
and
push
jno
xchg
loop
jns
mov
xchg
push
pop
push
nop
loop
sahf
xchg
bound
pop
leave
cmp
cmp
je
push
add
scas
mov
xchg
mov
add
addb
add
add
int
add
add
add
shlb
pop
lods
imul
loope
inc
add
rclb
mov
xor
ucomiss
mov
test
call
lods
lea
inc
add
test
pop
std
idiv
enter
xor
jmp
test
xchg
and
repz
ja
pop
jl
push
jne
mov
sbb
or
xchg
aas
jne
push
add
outsl
sbb
pop
pop
fistl
mov
paddw
add
shll
add
add
pop
test
stc
sub
rcr
xchg
cmp
add
shlb
xchg
fs
test
push
push
fs
addr16
add
cli
and
push
pop
add
xchg
jg
dec
mov
jp
jp
jge
mov
xchg
pop
loopne
jmp
pop
scas
aad
add
add
push
insl
or
xchg
cltd
popf
add
aam
add
cmpps
mov
add
sub
in
adc
movsb
dec
mov
add
push
fstpt
add
push
out
daa
fstpt
lret
movl
add
jb
std
rcrl
repnz
add
enter
xchg
sub
je
mov
aaa
leave
addl
add
add
ret
popf
sbb
mov
stc
jae
das
mov
jl
aad
fisttps
xor
fiadds
add
cmp
jae
add
inc
add
sti
push
add
add
scas
mov
jno
arpl
mov
adc
pop
mov
cmp
sub
out
ja
imul
dec
cmp
std
scas
ljmp
ss
mov
cmpsl
jb
add
sahf
aam
jge
pop
fbld
dec
push
inc
add
jp
pop
in
inc
add
add
push
fistpll
add
ficoms
movl
xchg
pop
sbb
dec
addr16
scas
ss
jne
add
push
pop
cmpsl
cmp
das
bsf
hlt
mov
pop
cwtl
push
fildl
add
dec
mov
fiadds
fdivr
cmc
xchg
push
inc
add
hlt
cs
add
add
push
cmpsb
cmpsb
lahf
das
addl
mov
repnz
cmp
jno
addl
xchg
xchg
inc
add
xchg
lds
mov
lods
sub
inc
add
addb
cwtl
sub
gs
adc
push
add
jle
out
add
loope
xchg
add
mov
add
pop
pop
jg
in
stos
ret
add
mov
dec
or
ss
mov
push
dec
jnp
add
movsl
inc
add
dec
repnz
ret
sub
lods
inc
add
adc
jl
test
push
mov
shll
pushf
jnp
add
xchg
mov
add
mov
addb
push
mov
sub
popl
adc
adc
bound
aam
sub
jbe
in
out
xor
pop
out
add
dec
imul
movb
sub
add
and
pop
add
xor
add
add
fsubrs
gs
test
sbb
in
and
scas
or
movsb
push
sti
clc
mov
mov
dec
add
dec
inc
add
mov
imul
loopne
add
add
sbb
add
mov
jmp
add
mov
popf
fnstcw
jl
add
dec
xchg
addb
add
jg
scas
icebp
cltd
add
jne
cwtl
aas
hlt
std
xor
mov
add
add
add
mov
insl
movsl
in
jle
or
add
loop
shr
dec
lea
lock
add
cmpsl
imul
jge
add
fisubrl
repz
ss
xor
xchg
addr16
mov
add
out
data16
int
out
adc
lds
inc
add
fldl
sbb
xor
inc
add
fs
cmc
bound
leave
xlat
dec
mov
nop
cmpsl
jae
je
arpl
jl
sbb
pop
aad
adc
jne
add
add
jne
cmp
and
and
shlb
add
add
cs
mull
sub
repz
arpl
mov
divb
addb
aas
or
add
lret
sbb
sub
mov
daa
mov
adc
ss
daa
mov
pause
divl
add
sbb
add
sbb
add
fidivl
arpl
pop
jne
int3
dec
mov
addr16
add
or
add
add
mov
adc
inc
add
xchg
jge
add
xchg
iret
mov
pop
add
mov
pop
add
add
icebp
mov
lret
movl
out
xor
jo
fldenv
and
inc
add
xor
xor
xor
ljmp
cmp
aas
push
inc
add
das
sbb
dec
cwtl
idiv
les
mov
out
and
pop
sub
lret
cs
add
add
dec
fadds
jns
fimull
pusha
add
add
stc
mov
fldenv
adc
or
jb
add
out
add
lcall
jle,pt
aad
movsb
sub
iret
cli
add
insl
push
inc
add
adc
adc
jns
and
js
push
xchg
cmp
fcompl
xchg
adc
add
or
add
nop
addl
nop
adc
and
push
xor
add
inc
add
popa
add
scas
test
xchg
pop
jl
add
xor
add
mov
pop
jp
jg
mov
mov
rolb
add
mov
loope
aaa
mov
push
test
add
hlt
movl
outsb
addb
int3
mov
movsb
dec
popa
add
add
mov
add
add
dec
fidivrs
fsubr
les
lahf
jmp
add
jb
cmpsl
out
and
cmp
jl
jl
fldenv
xlat
in
movsb
dec
mov
pop
fmulp
addl
addl
sub
push
pop
cltd
dec
stos
jb
arpl
fsubr
std
add
in
mov
jl
dec
es
push
in
aad
call
add
xchg
adc
adc
add
fildl
lahf
pop
rorl
push
dec
jae
add
icebp
sub
sbb
or
insl
dec
sahf
xchg
roll
add
sub
xchg
cmp
adc
add
and
xor
add
add
imul
pop
loope
aaa
dec
and
out
loopne
add
push
int3
bound
ficompl
add
add
dec
pop
lds
into
fstp
test
sti
filds
cmpsb
jo
xor
add
test
mov
jp
sbb
cmp
pop
lock
add
and
dec
aas
gs
xor
fisubrl
add
xchg
outsb
mov
inc
add
add
cmp
add
and
cli
out
daa
mov
jne
cltd
in
sub
imul
shrb
pop
mov
xlat
jmp
add
stc
or
add
add
dec
mov
pop
popa
add
xor
pop
mov
or
lea
sub
add
fists
mov
nop
outsb
and
dec
and
sbb
inc
add
and
sub
pop
les
lret
push
dec
pop
lea
ljmp
jl
add
scas
ret
xor
in
je
add
add
mov
cmpsb
gs
add
out
lock
adc
daa
filds
add
push
fwait
jbe
add
xor
xchg
sub
and
stos
loop
adc
out
push
mov
add
jmp
repnz
add
mov
fsubrs
daa
dec
push
aad
mov
xor
add
add
cmp
add
pop
cmp
loopne
out
add
add
imul
cmp
add
jns
sub
mov
test
stos
mov
and
push
out
add
add
nop
and
sarb
adc
xchg
lea
mov
lret
adc
adc
add
out
push
mov
mov
je
pop
cmp
in
jb
cmp
pop
add
add
pop
pop
add
mov
mov
pop
add
js
mov
add
insb
or
lea
jns
push
xlat
mov
add
add
lods
sbb
mov
roll
pop
xchg
pop
add
loopne
outsl
pusha
add
into
sub
or
push
xor
inc
add
repz
sub
push
loope
sbb
mov
lock
pop
rcrl
mov
data16
add
mov
cmp
repnz
das
lcall
outsb
mov
sub
add
xchg
push
add
imul
incl
stc
push
cli
mov
sti
lea
pusha
add
add
jno
xor
roll
add
xor
ja
add
mul
push
fisubl
add
dec
movl
mov
scas
mov
in
shrl
or
lods
pushf
pusha
add
in
jecxz
mov
push
fmul
imul
stos
push
cld
xchg
and
daa
push
add
dec
mov
leave
xchg
bound
inc
add
add
pushw
cmp
add
mov
pop
pushf
add
xor
out
insl
in
in
mov
neg
push
mov
out
mov
mov
arpl
test
js
roll
inc
add
jmp
pop
mov
loopne
jb
ffree
add
and
mov
dec
pusha
add
add
sub
aas
dec
xchg
lahf
push
pop
aam
add
mov
mov
jge
xlat
insb
jno
pop
cmc
push
add
pop
ljmp
dec
adc
mov
pop
or
mov
add
add
add
add
push
test
pop
cmc
or
add
mov
add
adc
ds
pop
jl
and
ret
and
imul
lahf
arpl
adc
add
jb
xchg
imul
fmul
or
inc
add
mov
fwait
loope
dec
dec
or
fldt
push
add
add
insl
ds
mov
outsl
pop
dec
out
sti
cld
inc
add
and
sub
mov
sbb
adc
leave
mov
cmpsl
bound
push
in
mul
roll
cwtl
sub
mov
add
jmp
rolb
aad
xchg
and
nop
pop
xchg
and
js
inc
add
add
add
xchg
pushf
fwait
int3
pop
mov
movsb
dec
lock
into
xchg
enter
mov
aaa
jmp
add
test
mov
loop
add
pop
add
stc
scas
scas
mov
les
movsb
dec
js
cld
jle
push
out
push
sub
stos
addb
int3
hlt
cmc
rcr
aam
add
push
scas
pop
fisttps
jl
dec
lahf
call
mul
adc
testb
sbb
mov
add
iret
mov
mov
add
pop
fnstsw
sahf
mov
cmp
cmpsl
or
out
and
arpl
sti
shlb
les
inc
add
pushf
movb
inc
add
add
push
stos
lds
jnp
adc
lcall
loop
add
add
scas
shrb
aaa
or
stos
sbb
push
sti
fsubs
add
fiaddl
or
dec
fdivl
mov
push
xor
push
in
sbb
int
sbb
pop
and
xor
inc
add
add
mov
and
push
insl
xor
daa
stos
jno
sbb
xchg
push
mov
addl
mov
insl
inc
add
add
xchg
sub
add
add
add
out
cmp
add
test
adc
test
roll
int3
pop
sbb
into
pop
fnsave
sub
add
pop
add
add
daa
sbb
mov
add
cmp
sub
add
add
xchg
fists
xchg
ja
add
inc
add
addb
add
add
les
jns
in
cmp
mov
mov
push
sbb
or
call
lret
popf
rcr
pushl
xor
cmpsl
loop
mov
cli
add
pop
popa
add
test
jo
loop
fstpt
les
aam
xchg
test
loop
imul
cmpsb
dec
std
cmc
jmp
fs
cmp
sbb
add
jnp
sti
scas
xchg
roll
add
add
dec
scas
movsb
addb
sbb
mov
or
repz
pop
push
sub
mov
add
jmp
dec
hlt
fwait
dec
mov
mov
aas
loopne
or
add
leave
add
outsl
and
loope
and
stc
dec
jbe
movsl
pusha
add
pop
and
loop
ret
mov
jle
in
add
imul
dec
ror
bound
std
cmc
lods
test
insl
and
sub
mov
mov
xchg
das
divb
arpl
cmpsb
or
aas
test
movb
add
mov
test
aas
pop
mov
inc
add
push
das
pop
pop
and
loope
add
xchg
jecxz
add
and
cld
dec
outsl
data16
repz
add
sbb
loop
add
add
add
cli
clc
inc
add
aad
icebp
out
loopne
jecxz
sbb
arpl
movsl
mov
push
dec
push
push
mov
fidivl
xchg
ja
scas
cmc
insl
int
fstps
jno
mov
loopne
cmp
adc
repnz
push
inc
add
mov
into
jp
mov
es
xchg
push
scas
lods
jnp
add
add
js
rclb
pop
add
add
add
test
notl
xchg
out
repz
mov
aaa
lods
or
pop
adc
jnp
add
xlat
jecxz
rolb
in
or
push
neg
testb
add
add
cmpsb
push
addl
mov
adc
add
mov
insb
lock
test
loopne
push
movsb
fnstsw
jo
out
add
xchg
cld
mov
cli
add
mov
cmc
notb
ss
jl
pop
jo
mov
and
pop
mov
add
scas
add
sbb
cmpsl
roll
ljmp
xchg
jo
add
sub
push
addb
add
addl
in
sbb
ret
add
pop
add
and
inc
add
addb
pop
decb
imul
lea
pop
cwtl
xchg
lods
mov
addb
add
addr16
imul
jnp
sbb
pop
adc
mov
imul
and
pop
cmp
adc
jo
add
imul
add
pop
lea
pop
mov
data16
jl
call
iret
stos
test
arpl
aad
je
adc
cmp
mov
add
add
movsl
outsb
out
xor
add
loopne
outsb
mov
adc
inc
add
pop
xor
stos
pop
es
popf
adc
inc
add
push
ljmp
xchg
jae
movb
lahf
jg
dec
and
int3
stc
popf
cwtl
add
fisubrs
mov
add
xor
int3
sbb
add
push
and
roll
insb
cwtl
lds
mov
inc
add
add
or
add
add
xor
cmp
scas
arpl
cmpsl
pusha
add
lret
and
xchg
cwtl
je
in
jae
decl
stos
or
or
out
fsubrp
xchg
je
mov
sub
add
add
add
movb
std
int3
addb
or
mov
dec
popf
fildll
hlt
sbb
add
inc
add
add
pop
sarl
fildl
add
add
addr16
add
mov
add
test
add
xchg
cmp
add
jg
xchg
in
fstpl
mull
lock
add
cmp
sahf
dec
cmp
mov
jl
add
push
push
fs
enter
pop
ficomps
jne
xor
adc
inc
add
jb
add
psllq
mov
cmp
nop
jae
loop
dec
sbb
mov
pop
cmp
lret
arpl
cmc
fistps
sub
pop
add
cmp
and
add
pusha
add
pusha
add
jno
pop
add
pushl
adc
xchg
addr16
dec
sub
fstpl
add
cmpsb
lods
add
test
mov
add
insl
pushf
inc
add
mov
add
mov
mov
stos
and
add
je
cli
lea
mov
xchg
data16
pop
loopne
lds
xchg
rcll
ja
cmp
add
lcall
pushf
out
stos
je
add
mov
cmp
xchg
inc
add
imul
cmp
call
mov
lahf
rcll
add
cmpsb
rolb
add
nop
insb
or
pop
in
cli
out
ja
pop
jp
repz
dec
push
jecxz
add
mov
push
cmp
add
xor
aaa
sbb
adc
push
dec
jle
repnz
out
push
test
sub
cli
scas
sbb
add
add
in
adc
mov
push
cmp
add
sub
cmp
add
push
call
add
aad
add
add
add
add
fdivs
mov
add
shll
jae
add
int3
cmp
push
scas
cltd
pop
mov
add
cmp
add
add
dec
dec
cmpsb
and
incb
sbb
push
loop
add
and
xchg
inc
add
add
pop
fs
add
and
sahf
jge
add
daa
sub
fwait
jbe
adc
xor
pop
jnp
push
dec
loopne
mov
add
xchg
ficomps
clc
inc
add
add
jb
pop
add
mov
add
arpl
aaa
and
inc
add
add
addr16
dec
pop
cmpsl
repnz
mov
icebp
test
addb
mov
jmp
mov
pop
xchg
sbb
jmp
add
shll
mov
sbb
sbb
lret
jecxz
jns
jb
jl
jb
push
push
xchg
xchg
sub
jmp
and
xor
add
add
add
inc
add
push
movb
push
jo
sub
or
add
lret
sub
nop
cmpsl
mov
inc
add
xor
xor
mov
mov
xchg
cmp
add
lock
fists
adc
add
hlt
inc
add
pushf
rcl
xchg
imul
rolb
jae
loope
add
fcoms
out
add
rclb
push
xlat
addl
xchg
popa
add
movl
es
add
icebp
outsb
movsl
xchg
jb
mov
lahf
bound
icebp
mov
xchg
sub
out
mov
jecxz
into
mov
lret
aaa
xor
test
sub
pop
inc
add
and
add
sti
jg
dec
leave
xchg
fisubs
imulb
sbb
sbb
aad
xor
pop
jle
xchg
push
jecxz
add
add
xchg
mov
mov
add
roll
adc
push
jb
call
sahf
aad
inc
add
repnz
mov
add
or
jae
and
mov
jae
fsub
xor
or
mov
sbb
ja
jbe
mov
mov
testb
pop
jo
ror
sub
addl
push
mov
or
add
dec
mov
pop
fisubs
cmp
insb
xlat
sbb
xchg
jle
sbb
mov
jns
lret
mov
mov
xchg
imul
mov
ret
add
inc
add
or
inc
add
jg
add
add
adc
cld
mov
scas
sub
cmp
addl
addb
add
add
hlt
js
or
cmp
add
push
mov
and
sbb
xchg
call
dec
cmp
add
fsubs
fs
js
push
sti
sarb
dec
addr16
loop
xchg
dec
mov
sbb
add
addl
mov
add
stos
jmp
fwait
stos
add
sbb
mov
enter
and
mov
or
dec
push
mov
push
sbb
add
je
jge
lods
insb
cmc
das
jmp
dec
ret
xchg
push
cmp
imul
dec
dec
sbb
add
add
add
outsl
lret
ret
rcr
cmc
outsb
fstp
movsl
or
sti
aam
clc
cmp
ds
pusha
add
data16
jns
dec
jns
outsb
push
inc
add
cmp
fnop
test
push
je
add
je
clc
dec
mov
mov
add
movsb
jp
mov
pop
scas
insb
xchg
pop
push
stos
lcall
repz
cld
mov
inc
add
inc
add
add
incb
mov
dec
cs
add
aam
mov
xor
dec
hlt
stos
push
jmp
roll
xchg
jae
inc
add
insl
jb
add
add
add
sub
add
pop
fwait
shlb
add
or
insb
loope
add
pusha
add
sbb
dec
hlt
xchg
inc
add
xchg
add
xchg
into
push
scas
incl
bound
push
mov
push
mov
imul
addl
outsb
addr16
test
add
test
sbb
pop
push
cmp
shll
gs
xor
mov
cmp
add
jne
mulb
add
jne
test
mov
dec
mov
and
mulb
rcrb
daa
lahf
xchg
adc
pushl
inc
add
inc
add
and
ret
add
lods
ret
inc
add
add
sub
sarb
fwait
aaa
fmuls
ss
ja
xchg
jns
pop
sub
inc
add
ficoms
test
xchg
xlat
loopne
test
sub
and
push
or
add
cmp
out
shrb
add
or
add
sub
and
repz
movsb
add
cmp
movl
xor
sub
mov
jg
jp
lret
mov
mov
lock
xchg
mov
pop
jns
jae
add
push
cmc
mov
loopne
mov
int
sbb
mov
fbld
add
add
xor
add
mov
sahf
scas
ret
stos
mov
ljmp
lock
add
dec
fimull
fucom
imul
jge
pusha
add
and
xor
aad
sub
xor
jecxz
cli
mov
sub
movl
sub
cwtl
push
mov
mov
add
jne
outsl
pop
addb
adc
add
add
sub
clc
lcall
mov
or
sub
push
insl
xor
mov
or
fisubl
mov
and
popf
mov
adc
stos
imul
push
shll
leave
add
stos
addl
add
call
lds
adc
xchg
xor
cld
xchg
adc
cmp
xchg
add
mov
or
add
pop
repnz
in
mov
add
fsubr
dec
or
imul
or
add
cmp
roll
addl
popa
add
popl
jne
pop
dec
adc
das
sub
push
addb
xchg
and
sti
btr
xor
in
sahf
xchg
mov
mov
imul
sub
and
jbe
scas
test
inc
add
cmp
icebp
jle
insl
int
aas
sub
popa
add
xchg
ret
cmpsb
insb
xchg
xlat
lock
movb
in
addb
jbe
add
mov
das
add
daa
frstor
insb
jmp
jp
rcll
push
lcall
or
cltd
lods
leave
jmp
fdivrl
jbe
add
push
add
pop
or
lret
mov
outsw
or
add
bound
addl
test
fbld
movsl
ljmp
cld
fstpl
pop
ja
movsl
ss
iret
scas
ds
add
mull
add
add
fiadds
jg
sub
rorl
and
pop
add
sub
add
or
push
xchg
ja
aam
leave
fcoml
add
mov
add
push
pop
add
jmp
flds
popf
push
loopne
add
push
add
fsts
pop
adc
jne
arpl
aas
insb
lret
loope
roll
iret
sub
jb
aam
xor
add
add
push
mov
movb
add
add
les
addl
cmp
add
lds
sub
scas
out
aad
inc
add
adc
add
ljmp
jb
xchg
psubsw
ret
add
add
test
add
movb
ss
mov
movsl
ja
arpl
inc
add
stos
data16
add
out
lahf
xchg
fbld
sub
mov
imul
jecxz
xlat
inc
add
and
jne
lea
aaa
push
mov
lods
dec
es
ret
xchg
hlt
sub
sahf
mov
loope
arpl
inc
add
mov
adc
out
xor
mov
jno
mov
push
add
push
pop
les
mov
sbb
loope
aaa
pop
leave
ficoml
outsl
ds
movl
int3
and
add
dec
xchg
fwait
sub
test
cmp
add
lret
add
mov
ljmp
addl
enter
int3
insl
shl
xchg
mov
sahf
sub
mov
add
and
or
imul
add
sbb
and
mov
sarb
push
test
mov
mov
loope
jns
cmp
fwait
ljmp
jno
xchg
fsubrl
sbb
mov
in
mov
aaa
test
jo
sbb
cmp
sbb
add
add
cmpsb
xlat
nop
jecxz
push
mov
lret
xchg
adc
rorb
fnstenv
dec
push
cli
shrl
ljmp
in
add
sub
ret
add
imul
or
push
mov
addb
add
mov
rolb
add
jbe
xchg
cmpsl
xor
add
jl
gs
mov
bound
pop
xchg
stos
mov
jns
fistl
add
add
push
lahf
inc
add
push
add
add
in
rolb
mov
int3
mov
shl
cmp
add
aaa
cmp
lahf
mov
mov
sub
icebp
push
aaa
dec
cmpsb
and
int3
push
int
add
lods
xchg
nop
out
xchg
fimull
stc
or
push
cmp
fnstenv
xchg
cmpsl
aad
cwtl
or
add
xor
aad
mov
mov
aam
roll
xchg
xchg
ss
out
add
jl
mov
sbb
dec
add
dec
push
jno
lock
dec
enter
adc
cmp
aas
xchg
imul
sbb
inc
add
enter
sbb
ja
dec
xchg
ret
sbb
xor
xchg
in
sbb
jl
xchg
dec
sbb
jae
mov
add
repz
xlat
scas
pop
push
and
xor
sbb
test
loopne
sub
cmp
scas
mov
pop
mov
shrl
addl
pop
add
cs
add
repz
or
cmc
int
or
jge
add
ja
movnti
int3
test
rolb
loopne
iret
aas
into
xor
push
pushf
icebp
push
xchg
rcrb
cmc
push
icebp
mov
mov
add
add
mov
add
ret
movb
iret
inc
add
sub
mov
pop
arpl
addb
or
lds
push
add
ret
add
sti
repz
xchg
and
add
xchg
or
add
push
push
and
cmpsb
inc
add
xchg
and
stos
mov
add
lea
sub
sub
add
cld
cld
jnp
sub
imul
xor
mov
mov
jecxz
movl
add
add
fs
addb
push
out
sbb
scas
ret
add
es
roll
mov
inc
add
aas
cmp
jnp
fiaddl
stos
sub
movsl
mov
icebp
push
dec
aad
lcall
or
dec
jl
mov
adc
stos
mov
push
int3
scas
add
test
mov
cmc
popf
or
bound
addl
mov
out
in
xchg
je
fmull
jnp
loope
add
arpl
es
nop
pop
add
sub
or
loopne
out
mov
add
inc
add
add
jne
sbb
jnp
push
test
mov
add
inc
add
xor
jg
outsl
sbb
mov
repz
add
and
jne
fwait
addb
add
add
out
lods
sahf
insb
and
push
adc
in
repz
ja
add
fs
pop
and
lock
mov
mov
jge
loope
add
sub
or
addl
add
add
es
jp
and
xor
add
imul
std
fisttps
xor
aaa
hlt
inc
add
fnstcw
stc
mov
divl
cmp
xor
xchg
das
loopne
in
ss
pop
daa
dec
sbb
xor
dec
pop
mov
mov
test
cmp
push
aad
add
stos
in
pushf
imul
add
rolb
outsl
mov
loope
fwait
xchg
mov
js
add
addb
sub
push
addr16
add
movl
xor
dec
mov
ret
jg
dec
icebp
or
add
pop
xchg
jl
xchg
ret
add
add
in
fisttps
mov
test
mov
test
push
mov
les
sub
aad
insl
sbb
outsl
jle
loop
jl
inc
add
and
test
cld
xchg
addb
je
cmp
xchg
ljmp
je
dec
mov
push
add
mov
add
gs
add
cld
out
sub
dec
roll
inc
add
push
nop
and
jo
add
xchg
popa
add
das
inc
add
or
add
xlat
pop
push
add
adc
jb
sbb
mov
add
add
or
sbb
mov
push
xchg
test
arpl
xchg
pushf
mov
leave
fdivr
sti
mov
add
add
ret
add
cld
sbb
mov
divb
ret
inc
add
popa
add
bound
aas
cwtl
data16
add
pop
movsl
adc
add
arpl
push
push
push
and
pminub
and
push
mov
repnz
aad
inc
add
adc
add
ds
adc
xchg
addb
je
inc
add
inc
add
addb
ja
pop
add
je
lret
add
add
add
inc
add
lds
and
movsb
lea
insl
sub
fsubl
add
loopne
pushf
iret
add
push
lds
mov
in
outsl
and
movsb
cmp
add
pop
mov
mov
hlt
aas
enter
push
pop
push
and
xor
cmp
loope
inc
add
xchg
add
sub
mov
and
loopne
xchg
iret
aas
lahf
cmpsl
lcall
push
jb
dec
jmp
push
dec
pop
mov
mov
pop
loop
jl
fnstsw
into
and
push
test
add
cltd
addb
mov
jno
icebp
mov
jmp
jl
rcll
xchg
fldt
add
ror
int
add
enter
xchg
add
mov
adc
adc
and
addl
dec
sbb
lods
xor
scas
bound
cmp
cwtl
mov
lock
inc
add
inc
add
mov
nop
cmp
add
add
stos
imul
add
sbb
daa
stc
stos
les
or
je
ja
xlat
jmp
add
movsl
sbb
sbb
cmp
pop
mov
inc
add
xchg
mov
addb
jl
jne
add
cwtl
les
xchg
addl
fldt
pop
jne
fstpt
jl
mov
mov
and
movsl
das
sbb
das
fdivs
imul
add
cld
mov
adc
loop
bound
enter
rol
add
clc
jo
daa
mov
lods
or
push
mov
daa
test
enter
add
mov
add
push
push
rorl
fmuls
or
xchg
sub
sbb
add
and
test
push
ss
mov
add
aas
cs
add
ret
add
add
js
cltd
push
add
adc
cmp
add
cmp
insb
stc
test
inc
add
push
add
mov
and
cld
fidivrs
je
sub
mov
dec
xchg
std
dec
es
jle
mov
sub
ret
cmp
aad
add
xor
xchg
or
jecxz
aaa
push
pop
jmp
inc
add
mov
pusha
add
or
cmp
push
roll
add
and
jmp
mov
lret
sahf
xrelease
jno
jmp
add
loopne
insl
push
adc
add
add
adc
sbb
sub
xor
xor
mov
and
jl
addb
test
xor
ljmp
jmp
push
bound
js
loope
pop
stos
insb
out
test
das
push
cmp
inc
add
pop
and
and
jo
add
stc
add
xchg
outsb
lcall
add
xchg
lea
daa
xor
jge
gs
lahf
or
add
add
jge
adc
lds
inc
add
add
xor
fadds
add
in
mov
hlt
sbb
or
rorl
aas
in
push
int3
stos
scas
bound
int3
push
ret
add
ficompl
dec
jmp
sub
add
addb
xchg
addl
add
idiv
in
movb
dec
data16
cmp
push
mov
int3
mov
ss
loopne
lds
fchs
add
lods
imul
jg
cmp
gs
ret
ret
add
add
or
arpl
mov
add
popf
daa
mov
dec
stos
cmp
dec
loopne
loop
loop
mov
mov
jge
loope
in
dec
jns
gs
mov
and
in
add
pop
add
cs
add
add
dec
stos
sti
dec
cs
adc
add
fsubrl
js
pushf
sub
add
add
test
xor
or
add
add
lret
test
and
dec
sub
add
adc
rolb
adc
and
or
add
add
movsb
adc
jns
lcall
aaa
iret
ret
push
add
pop
fnstenv
cltd
inc
add
add
daa
ljmp
je
shll
sbb
addr16
xlat
xchg
js
fistl
add
push
outsb
ret
or
ja
pop
xor
cmc
xor
ret
xchg
jae
push
push
cltd
mov
add
add
mov
add
or
xchg
jbe
mov
in
imul
jns
lds
in
out
sti
test
push
fistl
clc
jle
add
pop
inc
add
enter
nop
lahf
fstpl
fs
pop
rorb
add
mov
add
imul
addr16
pop
aaa
cmp
addb
mov
xor
stos
or
sub
add
add
sbb
xchg
push
out
ret
mov
push
movsl
xchg
scas
add
scas
sbb
lods
mov
ss
add
inc
add
jle
sbb
mov
pop
fnstsw
fisttps
lds
xor
and
arpl
mov
add
out
and
push
push
sub
inc
add
imul
inc
add
add
lods
cmc
mov
inc
add
cli
mov
mov
cmp
push
ficoml
addb
add
push
sub
or
lods
insb
push
or
xchg
and
xchg
sub
push
push
inc
add
add
jns
push
add
pusha
add
lahf
jbe
add
ja
push
pushf
in
mov
xchg
xchg
popa
add
mov
mov
adc
roll
jecxz
xor
outsb
aam
lds
stc
xchg
inc
add
jle
push
es
aas
sub
add
in
outsb
jno
sub
cmp
popa
add
loop
sahf
inc
add
int
cmc
dec
inc
add
xor
imul
aas
inc
add
or
add
stc
aas
sbb
mov
idivb
movsb
and
out
add
add
imul
xchg
mov
dec
aaa
movl
add
add
mov
cmpsl
imul
repz
push
cmp
add
jbe
add
aam
sarb
add
mov
pop
sbb
add
add
movsb
xor
add
xchg
push
cmp
lds
nop
aam
sub
jns
xchg
pusha
add
push
add
xor
add
je
jns
jp
mov
pop
inc
add
jmp
sbb
lret
pop
push
inc
add
add
mov
add
sbb
push
add
push
stos
sahf
xlat
imul
add
loope
int3
xchg
sbb
pop
add
add
dec
lock
mov
rcrb
ficomps
daa
arpl
mov
jl
xor
movb
add
push
ss
cltd
xchg
jecxz
out
or
or
mov
into
jb
xor
rolb
cmp
out
xchg
jbe
sti
imul
cltd
std
nop
mov
mov
mov
js
movsl
jb
sar
and
pushf
xchg
js
mov
aaa
inc
add
sbb
dec
aam
mov
jno
addr16
xchg
mov
out
cltd
scas
les
xor
cmp
faddl
xchg
test
rolb
add
pop
xchg
jmp
xor
fwait
out
add
addr16
aad
add
push
frstor
jns
scas
lods
sub
inc
add
sub
pusha
add
popf
push
dec
frstor
and
sbb
add
fmuls
movl
add
dec
rcrb
adc
sub
or
add
addl
mov
and
lock
add
cmp
lds
mov
mov
add
jmp
add
lock
push
push
adc
add
stos
inc
add
jmp
mov
sti
and
mov
insl
arpl
scas
stc
fistps
adc
mov
bound
inc
add
sarl
aad
xor
and
test
push
addl
sbb
int3
and
in
push
xor
mov
add
jb
les
adc
inc
add
mov
test
or
lahf
dec
stos
inc
add
sbb
in
add
lods
out
xchg
aam
xor
mov
mov
and
and
jg
add
and
lods
xor
add
or
push
add
pop
ja
sbb
jne
fcomip
mulb
call
mov
add
std
repz
add
jnp
imul
jle
fnstcw
jl
mov
test
lock
push
add
sbb
icebp
mov
insb
or
pop
hlt
ret
insb
or
jne
repnz
dec
mov
flds
aas
ret
add
push
inc
add
mov
adc
add
add
pop
and
sub
jno
push
cmp
mov
add
sub
push
dec
fcmovb
add
add
pushl
in
add
cmpsl
sbb
aaa
jbe
daa
cld
dec
fisubs
fdivl
add
sub
push
inc
add
loope
jmp
pop
ljmp
add
add
dec
inc
add
add
mov
add
sub
add
aam
xor
mov
roll
add
sub
repz
dec
popf
mov
mov
xor
mov
jg
dec
mov
out
outsb
jo
add
cmp
roll
fmuls
or
and
pushf
pop
add
fcoms
add
add
add
add
enter
add
test
lcall
adc
imul
pop
or
add
pusha
add
js
imul
rcll
roll
fsubrs
loope
addb
pop
inc
add
hlt
cwtl
xchg
inc
add
sti
aaa
xor
fucomp
daa
sbb
dec
or
add
sahf
cs
mov
xchg
mov
out
mov
rolb
mov
add
aam
rcll
mov
outsl
xchg
jne
das
cwtl
cmp
add
xor
add
push
xlat
mov
xchg
rcll
xchg
movsl
out
popf
ret
add
sub
jae
xchg
xchg
call
popa
add
add
fdivrl
push
imul
call
inc
add
inc
add
or
adc
test
call
pusha
add
sub
fsts
repz
add
mov
in
dec
int3
inc
add
dec
in
test
sbb
hlt
mov
daa
jns
adc
mov
movl
out
jp
xchg
sarl
lret
and
pop
pop
rclb
adc
add
and
fdivs
add
pop
in
cmp
daa
out
jbe
add
pop
cmp
aaa
pushf
xlat
jl
push
js
add
add
add
add
or
mov
add
dec
mov
aam
pop
rolb
push
jmp
test
movsb
mov
add
stos
adc
add
xor
mov
mov
mov
jmp
repnz
push
add
pushf
ret
add
push
lret
mov
jp
add
insb
jne
cmpsl
cmp
xor
rclb
add
jl
insl
fs
add
sbb
add
mov
add
outsb
repnz
adc
or
mull
dec
loop
incb
jno
insl
imul
xchg
enter
mov
out
mov
cmp
and
pop
lock
pop
into
dec
in
or
js
add
shrl
jo
jle
icebp
or
add
test
mov
pop
push
cmp
add
repnz
ss
push
xchg
gs
xchg
movsb
scas
dec
adc
shl
adc
scas
mov
sub
push
jecxz
fldz
repz
pop
fbld
or
popf
insl
shrl
enter
add
nop
lcall
ud2
push
lret
inc
add
xor
add
add
in
or
in
fcompl
add
add
add
add
sti
push
add
add
xchg
mov
lret
sbb
in
sbb
add
in
cli
or
sub
movsb
xor
add
pusha
add
rorl
mov
pop
sbb
pop
mov
inc
add
cmp
or
loopne
lcall
jno
ss
push
xor
add
fdiv
pop
imul
lret
lods
in
aas
pop
add
xor
mov
call
mov
imul
sbb
lock
mov
add
cmp
gs
xchg
cmc
mov
push
mov
repz
icebp
icebp
dec
imul
test
fisttpll
push
add
popf
fsubl
addl
cmp
add
icebp
loope
mov
push
push
je
and
out
cmp
in
popf
mov
adc
lahf
lea
add
jb
imul
add
lea
cli
cmpsl
mov
jae
jo
or
push
adc
push
xchg
shlb
mov
into
addb
xchg
gs
sub
mov
mov
in
xlat
imul
stos
addb
cmpsl
inc
add
stos
pushf
fsubrl
cmp
repnz
test
xchg
ret
push
pop
jns
popf
xchg
scas
mov
rolb
cmp
imul
adc
repnz
jmp
fld1
mov
add
loopne
gs
fdivl
pop
push
add
sub
add
push
mov
sbb
add
add
mov
imul
aam
fldl2t
cmp
add
cmc
and
adc
add
insl
sub
add
out
xchg
jno
and
mov
shlb
insb
arpl
je
inc
add
hlt
daa
and
cli
mov
push
addb
pop
dec
and
insb
cmpsb
loope
mov
jb
inc
add
shll
icebp
lods
outsb
sbb
jle
ret
add
add
push
scas
or
into
mov
mov
mov
cmp
add
decb
addl
mov
mull
pop
add
dec
adc
xchg
push
lcall
add
icebp
push
jmp
in
ret
add
push
mov
ficomps
add
lret
mov
outsb
and
inc
add
cwtl
sbb
and
imul
addb
fwait
or
sub
popa
add
cmp
sub
cmpsb
test
enter
out
jmp
pop
loope
add
das
sarb
add
sub
pop
ffree
add
pop
adc
add
adc
push
mov
add
add
add
xor
xor
add
mov
xor
add
add
jecxz
add
stos
dec
int
lret
mov
push
in
mov
jbe
cmp
add
aam
xchg
popf
jne
les
mov
decl
roll
inc
add
lods
insb
mov
incl
jnp
mov
inc
add
imul
icebp
clc
addl
mov
push
outsb
in
add
pop
mov
loop
add
pusha
add
add
cmpsl
dec
push
fildl
push
mov
add
pop
xchg
inc
add
sub
add
xchg
shl
dec
loop
add
mov
aas
in
fstp
fnstcw
mov
mov
jnp
add
add
push
push
addb
and
repnz
stc
imul
inc
add
or
add
push
cli
into
push
cmc
jge
pushf
and
cmove
sbb
imulb
movsb
mov
popf
in
test
push
jns
or
loop
jo
fstpt
nop
iret
pop
xchg
adc
test
fsubp
out
loopne
daa
gs
rcll
sub
add
xor
jmp
jb
cmp
cmc
sub
movl
repnz
xor
lds
addb
sub
test
nop
dec
pop
adc
test
jae
and
add
jle
or
scas
dec
std
into
pop
out
or
sub
rorl
or
add
insb
adc
movsb
shrl
sbb
in
mov
add
or
pop
dec
repz
push
and
test
cltd
jp
dec
test
addb
inc
add
testb
int
sub
add
shlb
dec
out
cmp
fs
jle
cmp
push
add
and
dec
addl
cmp
add
jbe
fidivrs
lock
arpl
xor
pop
inc
add
push
addb
rorl
roll
sub
fcoms
lcall
jp
loope
jne
or
or
push
add
add
cld
fisubrl
daa
push
or
add
cmp
add
lret
adc
roll
hlt
aas
add
daa
into
inc
add
mov
cltd
or
test
jnp
addb
mov
mov
push
fstps
fdivp
and
pop
loop
loopne
dec
pop
or
add
cmp
jl
add
xchg
dec
insl
mov
mov
lea
add
add
jge
das
js
roll
out
add
call
push
dec
div
push
and
push
cli
in
jne
pushf
into
pop
add
mov
out
movsb
mov
add
lcall
jp
mov
test
ret
xor
jg
mov
jno
add
scas
addl
push
add
cwtl
and
aam
mov
add
pop
mov
push
push
pusha
add
add
sbb
pop
cmpsl
jo
je
cmp
add
dec
pop
lret
insb
rolb
sbb
jge
add
push
lret
daa
add
inc
add
push
lcall
sarl
add
shlb
add
or
test
mov
add
and
cmp
add
xor
jp
add
inc
add
aam
mov
faddl
push
mov
dec
gs
icebp
mov
add
pop
add
lcall
pop
js
push
mov
push
add
xor
data16
rcl
es
outsb
adc
add
add
lock
mov
rorb
mov
ljmp
xor
roll
mov
lcall
add
or
pop
mov
cltd
inc
add
cmp
lds
and
inc
add
xchg
call
add
and
addb
push
int3
test
jne
inc
add
or
outsb
jg
jle
push
cmpsl
loope
loopne
xor
arpl
dec
dec
test
xor
add
mov
sarb
jle
sub
add
add
or
add
shll
add
or
hlt
stc
int3
xchg
in
addb
add
mov
dec
mov
add
in
add
test
sub
add
pop
sbb
push
sub
add
addl
add
add
shr
ljmp
or
push
jo
add
push
sbb
push
popf
or
aam
rolb
pushf
lahf
push
test
xor
ja
push
add
sub
add
add
arpl
gs
fcoml
add
sub
add
cli
jb
add
sub
sub
movl
add
sbb
je
inc
add
add
jecxz
add
add
add
add
add
or
add
mov
and
jno
test
rolb
aaa
imulb
adc
push
punpckldq
ret
add
mov
roll
add
push
add
addl
repnz
rolb
in
lods
inc
add
loope
add
add
cmp
add
jbe
xchg
pop
and
scas
push
ret
pop
jp
roll
fstps
stc
addr16
cmp
add
add
fdivrs
adc
jno
daa
jmp
leave
lods
pop
sahf
aam
pop
int
add
add
imul
push
ljmp
add
test
xor
sbb
popa
add
lds
dec
cmc
jmp
popf
xchg
lahf
xor
mov
cld
cmp
jg
add
movl
dec
xor
and
xlat
xchg
jbe
add
push
sahf
mov
pop
popa
add
bound
sub
sahf
xchg
dec
mov
mov
fdiv
popa
add
movsb
cmp
cmp
in
inc
add
and
idivb
jae
mov
jl
test
outsl
imul
xchg
scas
sarb
pop
xor
add
aas
jae
loopne
rolb
bound
xchg
lret
adc
aas
ret
dec
add
repz
inc
add
dec
mov
mov
add
daa
push
sub
test
frstor
push
test
inc
add
movsl
mov
pop
iret
mov
call
fiadds
add
testb
sti
add
add
dec
and
add
fcoml
test
dec
inc
add
add
lret
jg
dec
mov
mov
rolb
mov
add
lahf
mov
into
movlps
loope,pt
add
mov
add
mov
inc
add
insl
xchg
fidivrl
add
or
int3
mov
sbb
and
mov
pop
rorb
add
dec
cmpsl
mov
xchg
imul
push
inc
add
mov
roll
pop
inc
add
xor
add
mov
add
add
fwait
jb
lret
push
das
inc
add
aaa
and
rolb
cmp
inc
add
sbb
push
imul
addr16
ret
add
pop
mov
mov
add
add
mov
mov
pusha
add
cs
out
in
pop
addl
and
pop
mov
add
add
lcall
inc
add
mov
dec
mov
jne
fwait
jmp
js
add
mov
ret
add
add
add
inc
add
xchg
lea
movsl
mov
cltd
jne
daa
addb
dec
or
mov
pop
scas
pop
and
rolb
cmpsb
mov
in
ds
inc
add
pop
mov
push
repz
addl
push
mov
frstor
xor
push
add
mov
shll
lock
cmp
cmp
jl
xor
ljmp
add
mov
test
push
add
sti
pop
add
add
lret
inc
add
in
add
es
jae
push
std
movsl
mov
cmp
pop
mov
mov
addr16
clc
mov
sub
cmpsb
xchg
push
jno
adc
add
gs
stos
dec
aad
add
ret
in
push
jbe
jle
add
in
mov
sahf
rcr
xchg
adc
jne
dec
outsl
dec
mov
or
cmc
into
push
push
sti
mov
add
add
aas
sahf
push
test
add
movsl
cltd
scas
dec
call
jns
xchg
push
clc
and
jo
add
addb
aad
add
test
add
test
cmc
cmc
lods
jge
or
rol
add
aam
addb
or
add
add
popf
xchg
lret
add
mov
stos
push
mov
sub
xlat
in
test
fists
out
daa
sub
imul
addb
mov
iret
xor
leave
pop
test
push
push
insl
mov
xor
outsb
in
daa
fnsave
add
movsl
pop
and
imul
add
pop
int
add
jbe
push
add
addl
clc
xchg
cmp
add
inc
add
sub
xor
add
pop
fwait
in
bound
xchg
lds
out
add
jge
add
out
lds
xchg
sahf
jmp
add
add
add
popw
add
pop
pop
hlt
dec
test
pop
mov
mov
fimuls
inc
add
mov
jnp
daa
movl
add
jg
mov
sti
fcomp
dec
in
or
das
dec
in
aas
pushf
fistl
jl
add
cmpsb
lods
daa
add
cmp
add
cmp
test
cpuid
lds
int3
push
aad
add
cmovp
pop
ljmp
or
mov
aaa
xchg
lds
pop
xchg
lahf
add
test
adc
cmp
xchg
mov
jg
or
jnp
xchg
and
lds
mov
add
add
mov
xor
lods
adc
mov
pushf
jl
std
out
out
repnz
inc
add
add
mov
addb
mov
das
test
inc
add
xchg
jns
mov
sub
sbb
and
push
aaa
das
jns
into
jl
ss
test
popa
add
jnp
addr16
add
push
movl
pop
jmp
add
push
cs
pop
mov
into
xor
xchg
femms
outsl
add
lahf
or
loopne
add
xchg
fwait
popf
sbb
jno
aaa
cltd
lock
xor
add
dec
cmp
and
add
