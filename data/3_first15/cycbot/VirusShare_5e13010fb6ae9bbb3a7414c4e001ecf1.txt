add
inc
add
and
or
add
add
add
add
or
add
adc
adc
pusha
adc
add
and
addb
add
xchg
or
test
push
add
add
push
and
and
add
add
inc
add
add
add
add
addb
sub
inc
mov
add
add
or
add
jo
mov
add
or
addb
or
add
add
add
or
and
add
push
add
add
nop
add
test
add
adcb
add
and
add
add
inc
add
inc
or
add
add
nop
add
mov
add
inc
add
inc
add
rorb
add
add
adc
or
add
add
or
or
inc
mov
addb
add
rolb
and
addb
add
add
mov
or
add
add
push
add
hlt
cli
mov
sub
or
fwait
in
cmpb
cli
sbb
cli
add
jmp
sub
cwtl
dec
shr
sbb
lods
dec
cltd
out
insl
fsqrt
pop
xchg
or
pop
mov
adc
test
fwait
pop
insb
das
pop
out
insl
sub
andb
adc
sbb
mov
fmull
mov
xchg
push
cmp
and
sti
jecxz
add
mov
add
lcall
insb
in
mov
movsl
test
push
lret
xor
pop
mov
test
push
pop
push
add
pop
mov
lret
rorb
addl
cmc
sbb
repnz
add
in
mov
jl
add
cli
rcrb
sbb
inc
lock
bound
test
lcall
addl
mov
stc
push
push
imul
ficoml
fmuls
shll
xorl
js
push
adc
imul
xchg
mov
mov
fnsave
jb
imul
adc
hlt
sbb
fsts
mov
jecxz
andl
sbb
dec
mov
arpl
mov
fistpl
addl
mov
loopne
fwait
loop
test
xchg
je
bound
cmpb
cli
andl
arpl
ret
xor
lds
jmp
cld
pusha
push
sbbb
cmp
jp
inc
andl
out
or
arpl
pop
adc
inc
pop
mov
pop
lea
fiaddl
popa
cwtl
mov
ret
push
hlt
mov
dec
addl
push
clc
push
int
je
xchg
inc
mov
imul
ljmp
push
jmp
lock
adc
in
mov
mov
ds
mov
inc
stos
ss
mov
cli
add
loope
and
adc
pop
addr16
jnp
sbb
repnz
andl
push
adc
js
adc
sbb
repz
gs
cld
sbb
ret
push
in
es
cld
sbb
dec
or
cmpl
subl
mov
or
xchg
cmp
cld
cli
push
repz
xchg
dec
fisttps
nop
mov
ja
cmp
xchg
mov
jno
stc
cld
sbb
push
lret
es
cld
lcall
je
sub
cld
sbb
pop
add
jbe
hlt
ficoml
push
fwait
in
in
arpl
dec
push
jbe
hlt
xchg
xchg
push
mov
imul
hlt
cmp
leave
in
andl
push
or
incl
ret
sar
jp
xorl
mov
sbb
adc
push
xor
mov
dec
into
lds
mov
mov
mov
lods
stc
loop
jno
fidivl
not
dec
arpl
pop
in
adc
push
lock
sbb
ljmp
loop
rcrl
aad
sbb
xchg
int3
jo
mov
in
adc
inc
repz
dec
ret
mov
hlt
repz
mov
popa
in
in
jnp
and
push
mov
mov
in
cli
xor
clc
mov
arpl
ficoml
ret
dec
call
add
out
sarb
inc
add
inc
and
inc
mov
mov
sbb
and
in
cmp
hlt
cli
add
leave
call
lds
inc
and
pop
xchg
loopne
dec
loop
add
sbb
mov
add
adc
mov
orb
aam
push
hlt
cli
jecxz
popa
fcomps
rorb
loop
clc
sti
loop
push
inc
or
cli
inc
outsb
movsl
arpl
adc
add
arpl
adc
fnclex
jns
pop
add
loop
jae
dec
or
popf
imul
jns
add
andl
add
add
add
ret
push
jmp
arpl
jp
sarl
adc
ret
push
pop
add
jmp
dec
lds
mov
jmp
fiaddl
es
insb
sbbb
jp
ret
vpunpckldq
push
in
call
arpl
ret
in
mov
fprem1
xor
cmp
mov
cli
mov
adc
out
mov
mov
hlt
sbb
jb
cld
mov
push
dec
mov
movsl
in
push
add
or
popa
push
insb
xchg
inc
mov
in
aam
mov
fyl2xp1
dec
fs
pop
nop
inc
lods
addl
jl
xchg
jp
dec
repz
std
xchg
inc
jne
cmp
jecxz
mov
ficoml
sub
add
mov
and
insl
xor
mov
sbb
xchg
cs
push
js
push
push
jl
testl
and
jno
faddl
and
dec
add
cmpsb
jne
jmp
bound
mov
bound
std
add
add
stc
add
or
mov
repz
push
sbb
jmp
push
mov
mov
jbe
mov
in
pop
repnz
pop
pop
mov
loop
pop
adcb
xchg
cmpl
loop
adc
sbb
aaa
shl
movsb
mov
popf
mov
sti
and
add
loop
jle
addr16
mov
xchg
js
gs
out
loop
jno
bound
inc
mov
cs
mov
inc
dec
jne
add
sub
bound
add
add
mov
lock
jb
mov
popf
dec
sti
pushl
mov
sti
leave
icebp
sbb
or
in
ljmp
imul
or
xlat
mov
or
mov
leave
out
cmc
fisubs
cmc
or
mov
cmpsb
lea
pop
gs
jge
decb
dec
mov
in
lea
xchg
add
cmpb
jne
jge
call
leave
mov
cmp
lods
add
mov
loope
cmpsl
gs
shlb
movb
out
push
cmp
pop
int3
test
mov
mov
push
and
mov
push
xor
add
shl
sub
cmp
and
xchg
xchg
in
mov
in
arpl
sbb
and
sub
in
jecxz
shl
mov
dec
lds
mov
push
add
cmc
loop
mov
sbb
test
jmp
mov
or
pop
inc
jp
adc
imul
mov
inc
sarl
insb
cld
inc
or
inc
scas
add
or
hlt
rclb
sti
sti
inc
rcrb
sbb
lea
lods
fsubp
mov
jmp
sub
nop
push
cmp
test
or
repz
movsl
in
xor
sti
sbb
imulb
mov
mov
adc
addr16
and
cmp
rcl
das
test
push
mov
add
repz
inc
inc
aaa
int3
stos
and
and
lds
or
mov
xchg
incb
sti
push
out
bnd
dec
sbb
orl
mov
in
aad
xor
aaa
add
out
mov
inc
xchg
imul
div
adc
and
jo
inc
repz
jle
aaa
lock
add
adc
mov
adc
push
outsl
test
sbb
adc
fwait
fwait
mov
and
xor
fistpll
test
add
xchg
ljmp
mov
sbb
inc
cmp
or
movsb
icebp
xchg
cmpsl
es
stos
or
sub
jmp
cli
lock
jmp
xor
inc
imul
dec
and
xor
fistpl
jb
icebp
jmp
test
cmpsb
push
popa
or
ja
into
inc
lret
push
lods
xchg
ret
arpl
mov
xlat
dec
mov
out
add
ja
mov
jb
pushf
jb
mov
ss
inc
jl
push
pop
dec
or
inc
inc
jg
testl
sub
jg
add
xchg
push
clc
bound
test
clc
loop
jl
addr16
cmp
adc
cmp
test
push
jo
pop
sub
mov
mov
or
dec
iret
push
movsl
xchg
enter
in
imul
mov
xor
jo
lock
jnp
nop
mov
int
push
mov
gs
and
and
push
mov
or
sti
mov
in
pop
add
adc
bnd
cmpsb
movsb
cmp
sbb
shll
dec
mov
lods
add
int
stos
mov
and
adc
and
jp
sarb
loop
xor
mov
gs
hlt
and
inc
mov
fmuls
call
stos
mov
lock
xchg
fsubl
fucomip
cmpsb
fimuls
cmp
adc
adcl
mov
mul
icebp
jl
popa
lods
call
mov
mov
daa
add
js
inc
sti
mov
cmpsl
das
lods
leave
inc
jp
xor
cmp
cmp
daa
les
outsb
xor
xchg
pop
test
ja
sub
fidivl
inc
jns
test
pop
mov
jbe
mov
xor
jl
movsb
mov
int
bound
sahf
loop
cmp
or
das
xchg
lret
pop
cmc
jbe
sub
in
mov
cld
or
xchg
in
add
fnstsw
mov
sub
pop
out
pop
xor
decl
ja
std
ficompl
scas
adc
into
cmc
add
xor
and
xor
dec
loop
pop
mov
mov
pop
jge
dec
push
add
jns
scas
jp
and
pusha
dec
inc
cmp
fstpt
addb
cmpsl
xor
mov
inc
xchg
jecxz
int3
cmp
daa
xor
sub
mov
jg
lret
clc
mov
negb
jns
cmp
lea
lock
je
in
test
mov
int3
aad
clc
cmp
mov
inc
sub
mov
in
popf
call
out
shrl
cmp
sarb
mov
pop
imul
jo
mov
ljmp
add
add
loopne
icebp
xor
iret
adc
std
jmp
or
push
cs
jae
jg
imul
jae
mov
out
cmc
cmc
jmp
pushf
ds
or
aad
insl
or
add
in
sahf
inc
add
fs
pop
lods
dec
cmp
in
dec
aas
add
repz
pusha
cmp
pop
mov
adc
push
gs
sub
jl
lds
jns
movsb
out
addr16
outsb
add
ret
roll
jg
lea
dec
jno
jecxz
scas
std
inc
lret
push
add
push
mov
into
pop
orl
add
scas
jecxz
es
stos
paddusw
cld
insb
js
call
xchg
lods
sbb
cmp
mov
push
xorb
inc
cld
xchg
cltd
fwait
sahf
paddb
insl
xchg
cltd
call
aad
add
test
test
std
fmull
cld
test
jge
sub
testb
xor
cwtl
outsb
out
adcl
lods
and
cmpb
cs
add
dec
dec
aas
sub
cmpsw
arpl
test
push
lret
push
mov
and
add
in
and
jno
in
push
stos
cmp
inc
sub
movsb
inc
rcll
loop
push
arpl
mov
xchg
and
repz
aas
scas
xchg
data16
aaa
enter
mov
out
testl
frstor
adc
push
add
add
insb
cmp
out
xchg
mov
dec
out
jae
in
out
mov
fs
fcomp
enter
pop
insl
es
xchg
addr16
addl
xor
cld
add
and
inc
or
test
or
sbb
xchg
cltd
sbb
repnz
fcoms
mov
jae
or
xchg
jno
and
aas
lea
imull
xchg
sub
lahf
or
shlb
int
mov
xorl
lds
lgs
push
add
ret
inc
push
ljmp
repz
dec
sbb
push
sub
orb
push
in
lea
outsb
mov
mov
lret
adc
icebp
stc
mov
mov
int3
sub
gs
push
roll
inc
mov
xchg
mov
test
mov
xchg
lock
jl
les
sub
ds
sbb
jp
push
movlps
cltd
and
int3
mov
or
movb
in
lds
sbb
xchg
adc
inc
sub
cmc
andl
cwtd
or
imul
or
js
cmpsl
pop
inc
dec
lods
loop
test
xor
aas
mov
aas
mov
testl
mov
std
in
sub
lret
enter
cld
in
ds
bt
mov
xchg
iret
xchg
arpl
cltd
push
push
jecxz
dec
lock
in
mov
jmp
imul
mov
pushf
pop
xchg
add
dec
fildl
out
fmull
pop
stc
inc
mov
daa
add
mov
out
in
lods
mov
test
jbe
insb
add
mov
cld
adc
jo
jg
in
mov
neg
loope
inc
and
imul
int3
jl
movsl
shrb
lock
jae
cmp
pop
mov
cld
pusha
in
add
xchg
scas
roll
in
test
adc
aam
and
ja
ds
das
test
in
gs
adc
sbb
jle
add
xchg
movsl
hlt
mov
popa
aam
pop
outsb
daa
in
lock
and
mov
repz
insl
imulb
adc
jae
jae
out
xchg
cmp
cmc
pop
jmp
add
jne
xor
movsl
or
push
jbe
cli
cmp
push
inc
stc
lods
ss
ljmp
xchg
sub
sbb
inc
insl
push
cwtl
mov
sar
imul
test
jb
lea
and
dec
in
fwait
icebp
jae
dec
add
dec
add
in
mov
out
cmp
cmc
jg
imulb
sub
push
addr16
or
nop
and
ljmp
sub
gs
popa
jg
rcll
and
ja
aad
and
sbb
negl
std
push
pop
stc
popf
outsb
fstpt
in
and
sbb
inc
mov
inc
callw
jb
pop
aam
divb
ljmp
xor
lret
sbb
jae
gs
stos
cmpsb
sbb
ja
sbb
flds
jecxz
dec
rcrl
cmc
mov
repz
jnp
add
addr16
sbb
mov
test
xor
scas
out
mov
mov
pop
out
fwait
mulb
mov
roll
push
dec
xor
popf
loopne
out
sbb
lea
int
xchg
int3
adc
shl
xor
jae
movsl
jb
jl
mov
pop
push
xchg
push
adc
dec
and
mov
ja
repnz
mov
dec
cmp
divb
jmp
jg
mov
mov
cmp
decl
add
mov
jo
daa
adc
cli
cmp
lret
cmp
scas
jmp
pop
scas
cmp
push
into
push
and
add
inc
xchg
lock
inc
je
test
mov
mov
test
fs
das
insl
sub
xchg
cmp
imul
add
jp
or
fs
ja
jnp
sub
outsb
out
jle
push
cli
loopne
push
mov
aas
rol
imul
cmp
add
out
inc
popf
sbb
adc
dec
movsb
mov
fcmovbe
aam
bound
xor
jnp
push
mov
adc
xor
testb
adc
cmpsb
xchg
mov
jns
mov
fmul
test
nop
inc
adc
push
addl
xchg
loope
icebp
sub
jle
decl
mov
xor
cmc
cmpsb
xchg
mov
jg
movsl
jl
rorl
stc
xor
sub
addl
test
js
mov
pop
aad
sbb
jle
neg
xchg
push
jmp
call
xchg
jae
imul
add
push
leave
add
int3
mov
in
je
mov
nop
sub
lea
fnsave
incb
sti
test
jne
xor
cmp
cmpsl
enterw
push
stc
cmp
pop
scas
out
in
xchg
scas
ds
outsl
movsl
cli
and
movsb
pop
cwtl
push
add
mov
movsb
jb
sbb
call
push
in
cld
push
lds
rorl
mov
cmc
mov
imul
popa
js
int3
hlt
in
cli
xchg
inc
jge
stos
lock
sbb
cld
jns
xchg
test
ret
mov
hlt
in
mov
cmpsl
push
mov
xor
cmp
dec
or
inc
shlb
out
addr16
in
mov
xor
cltd
inc
mov
push
hlt
pop
dec
xchg
in
insb
out
mov
lret
pushf
in
sub
sub
mov
jge
sub
inc
xor
and
dec
dec
pop
mov
xor
mov
repnz
fldl
pop
inc
movsb
cmpsl
je
clc
out
popf
rcrl
insl
mov
jnp
mov
jno
add
ljmp
jns
add
sarb
repz
xchg
ja
push
xor
loope
mov
push
jo
add
fs
jl
and
adc
aas
mov
mov
sbb
add
cmp
sbb
jb
out
jmp
jle
ja
std
dec
xchg
pushf
xchg
xchg
or
sub
int
xor
xlat
fistl
outsb
cmpsl
jnp
int
scas
pop
out
fwait
jae
ljmp
push
jmp
addr16
xchg
fidivrl
adc
push
test
jp
mov
adc
cmpsb
jl
mov
jbe
mov
push
mov
repnz
cmpsl
cmp
jne
pop
fsubl
hlt
out
mov
test
push
fiaddl
adc
and
xor
inc
mov
adc
sbbb
inc
cmp
stos
jbe
fists
sbb
bound
push
bnd
loop
add
movsl
nop
xchg
loopne
push
outsl
jecxz
ja
pop
inc
or
scas
adc
push
pop
inc
xchg
inc
xchg
cli
dec
pusha
mov
sahf
jb
fs
pop
fbld
adc
imulb
dec
sbb
daa
dec
pusha
inc
and
or
cs
sub
jle
enter
dec
jl
jmp
fidivrl
jne
xor
movsl
or
mov
or
jmp
or
in
pop
inc
iret
in
es
fistl
sti
pop
jmp
cld
mov
xor
cs
dec
sahf
pop
shl
lock
sbb
bound
push
dec
dec
jp
sub
repz
inc
mov
out
ja
jo
add
inc
sarl
orl
add
repnz
push
popa
or
fdivrl
dec
cmpb
jl
jmp
mov
cmc
fisttps
stos
aad
dec
push
leave
adc
lcall
gs
cmp
jnp
jge
pop
cmpl
sbb
sub
es
xlat
pop
addr16
nop
lret
out
and
rclb
and
negl
pop
xchg
mov
pop
dec
cmp
add
or
shrb
aad
xchg
mov
inc
movsl
pop
push
or
and
xor
stos
lock
xchg
pop
cli
mov
incl
and
fs
out
test
inc
aam
movsl
adc
je
test
cmp
cmpsb
pushf
or
mov
fstl
jnp
scas
jb
sub
push
and
pop
xorb
mov
push
and
sub
stos
inc
push
pop
mul
jmp
in
dec
xchg
push
es
or
mov
mov
sub
mov
rcrb
pop
loope
push
cmp
cli
cmpsl
in
mov
pop
mov
inc
sbb
repz
leave
cltd
rorb
nop
aad
lahf
inc
add
iret
adc
mov
fists
mov
lods
cmp
add
ljmp
xchg
mov
mull
mov
xchg
inc
mov
sub
pop
mov
into
out
fldt
in
out
gs
push
mov
sti
pop
push
les
outsb
fldt
push
addl
pusha
in
jno
clc
or
fimull
dec
push
icebp
daa
pop
mov
negb
lds
ret
cmp
or
fcomps
mov
into
push
andl
sahf
shlb
sub
movsb
mov
stos
adc
or
cmpsl
pushf
ret
push
test
adc
lret
insb
pushf
std
mov
mov
add
lock
lahf
jmp
jne
xchg
jbe
outsl
add
jp
gs
lahf
jb
push
aas
and
xlat
pushf
xchg
imul
push
inc
mov
xchg
xchg
mov
xchg
jmp
je
push
sub
scas
movsl
addr16
pop
dec
sub
lea
pop
scas
ss
inc
sub
lods
les
mov
addr16
mov
repnz
pop
test
lds
cmc
in
loop
mov
test
repnz
add
jg
cld
data16
ss
sti
dec
loope
jmp
cmc
mov
push
leave
or
dec
movsl
insl
ja
xor
sbb
sbb
idivl
sti
push
aas
adc
jmp
mov
mov
insb
lock
test
inc
jno
addl
popa
sub
sbb
jno
out
dec
stos
je
xor
sbb
in
push
xor
es
pop
fcompl
pop
ljmp
movsb
xor
or
pop
push
loope
data16
lds
cmp
test
insb
aas
jle
inc
loopne
xor
and
cmp
rol
jno
gs
push
adcb
lret
and
dec
pop
sbb
adc
scas
jecxz
xchg
inc
les
add
mov
mov
xor
adc
lock
add
ja
jmp
pop
xchg
lret
insl
stc
scas
add
mov
leave
sbb
movsl
mov
mov
xchg
in
orb
leave
cli
lahf
hlt
add
mov
xchg
f2xm1
xor
imul
lods
sbbl
xchg
lds
adc
inc
mov
enter
push
outsb
shll
dec
jge
je
incl
stc
test
je
and
jmp
lahf
and
movsl
mov
mov
mov
dec
cmpsl
or
cmc
repz
sti
jns
in
outsl
mov
mov
push
push
or
mov
lret
cmp
lret
es
adc
add
jae
aad
mov
scas
xorb
push
jmp
pop
sub
rcrb
es
fwait
test
or
es
add
shll
mov
jg
movsb
sahf
test
and
adc
ljmp
ja
xchg
cwtl
lds
xor
push
icebp
jecxz
lods
fnstsw
cmpsb
xor
pop
pop
and
xor
daa
push
adc
cwtl
xchg
mov
cmpsb
mov
jl
jae
adc
dec
cmp
push
adc
inc
jl
das
inc
mov
push
mov
jg
jg
push
pop
fistpl
push
pop
adcl
xor
fisttpll
punpckhwd
cld
push
add
jo
pop
jg
lock
bound
add
mov
jbe
mov
adc
push
aam
jg
sbb
mov
sub
daa
xchg
mov
jle
mov
int3
arpl
mov
lcall
sub
arpl
mov
add
mov
sbb
in
mov
jmp
add
clc
xchg
mov
scas
not
mov
xchg
imul
mov
test
sbb
dec
or
loop
imul
stos
mov
xchg
sbb
dec
sub
adc
daa
xor
or
jne
int
xor
xchg
orb
push
push
inc
push
jns
mov
out
ret
jo
call
imul
insb
in
movsb
movsl
dec
test
lcall
test
ljmp
and
mov
jle
adc
mov
xchg
sub
mov
je
pop
ja
jecxz
mov
push
xchg
mov
pop
in
add
push
icebp
mov
mov
pop
push
jbe
pop
iret
xor
and
jns
mov
stos
jno
out
cmp
or
jno
fsts
test
iret
jnp
xchg
lret
repnz
loop
cmpsl
in
xor
jbe
push
repz
fsubs
mov
lret
movsb
movsl
inc
insb
testb
scas
std
test
dec
gs
jp
and
test
in
data16
stc
jb
adc
stos
and
mov
cmp
inc
adc
jns
mov
xor
xchg
cmp
in
mov
test
sbb
es
or
jg
adc
loop
bound
adc
mov
int3
dec
jp
sbb
mov
pop
test
dec
pusha
push
dec
inc
pop
iret
cmp
ret
inc
fldl
push
aas
dec
repz
or
jae
scas
das
repnz
dec
gs
bound
pop
pop
xchg
xor
outsb
mov
pop
out
inc
cmpsb
rolb
cli
add
jnp
daa
mov
sti
fisttps
push
or
test
jae
cmp
cmp
mov
adc
dec
xorl
mov
jae
mov
push
push
pop
testl
mov
fwait
inc
out
loopne
sbb
test
test
cld
and
icebp
push
push
shll
adc
out
fs
loope
sub
cld
hlt
lods
push
push
adc
lea
jne
lods
test
and
test
dec
mov
repz
in
addb
movsl
push
inc
xchg
inc
push
push
test
push
and
ss
fsubrs
scas
imul
xchg
dec
jnp
push
in
sub
ret
out
xchg
hlt
sbb
mov
aaa
enter
fildl
inc
or
mov
insb
loopne
xchg
and
test
outsl
clc
movsb
adc
aaa
dec
xchg
jg
pop
test
hlt
dec
jl
imul
xor
lods
popa
int3
lods
lock
inc
mov
inc
or
xchg
or
sbb
in
shlb
jns
mov
stos
dec
dec
mov
sti
clc
fs
loopne
xchg
and
xchg
loope
pop
rorl
pop
jge
mov
sub
add
jle
mov
std
bound
xor
jbe
adc
and
lods
inc
adcb
dec
popl
jns
outsb
cmpsb
pop
cmp
adc
pop
cli
jnp
adcb
xchg
fistl
les
dec
lea
push
sbb
mov
repnz
dec
dec
aad
lea
cld
or
xor
lahf
adc
inc
cli
pop
pusha
inc
jne
and
jecxz
je
mov
ja
in
lods
jg
jl
inc
sar
das
mov
aaa
es
adc
movsl
iret
cmp
dec
jg
lock
or
jl
nop
or
dec
inc
addr16
sub
scas
inc
jg
aas
and
iret
jg
lret
xor
sarb
xchg
sub
fwait
add
outsb
push
or
les
push
adc
pop
in
xchg
gs
xchg
lahf
jae
jg
sbb
pop
mov
and
sub
incb
fnstsw
jmp
in
mov
xchg
dec
mov
hlt
adc
out
psadbw
pop
repz
loopne
push
sbb
cmp
fs
inc
push
mov
add
cmp
xor
or
cmc
and
or
dec
mov
int
dec
pcmpgtb
out
mov
movsb
adc
mov
les
out
aas
setl
into
decl
cmp
push
fistl
xchg
ret
xchg
mov
mov
clc
gs
add
mov
in
mov
jge
ljmp
cmp
jecxz
cmp
imul
dec
xor
cmp
or
inc
xor
dec
ja
mov
call
imul
or
jnp
int
stc
jmp
test
mov
pop
and
je
outsb
jge
mov
jmp
lds
add
push
and
out
sub
int
in
cmp
lock
mov
out
jno
adc
sub
add
testb
mov
in
sub
and
mov
or
outsl
es
jae
xchg
mov
lcall
jmp
add
dec
sbb
inc
repz
add
leave
movsl
adc
or
and
cmp
insb
rcr
push
jb
in
sbb
lret
and
adc
sti
ds
dec
loopne
imul
jne
fwait
addr16
and
mov
adc
mov
leave
shll
in
test
gs
ret
movsl
pop
jle
jg
dec
cs
push
icebp
jl
inc
jbe
and
in
sub
pop
add
jno
push
loopne
add
xor
xchg
loop
lock
test
fsubrp
into
xchg
imul
push
xchg
es
and
and
pop
mov
scas
ljmp
mov
mov
jne
pop
sahf
xchg
mov
and
add
xchg
pop
pop
add
sbb
xchg
jbe
aad
cmp
neg
jmp
mov
pop
mov
pusha
pop
lock
outsl
test
decb
jecxz
xlat
dec
jae
lret
xchg
push
lds
xchg
add
add
jp
in
subb
dec
ljmp
sbb
lock
ret
and
popf
push
mov
jnp
repnz
mov
and
int
add
andl
add
sbb
xor
mov
pop
pop
push
xchg
sub
pop
in
lret
and
testl
pushl
into
adc
push
lea
call
pop
cli
ret
in
cmp
mov
ljmp
jo
push
arpl
and
dec
fisttpll
mov
jmp
int
in
mulb
or
or
pop
stos
nopl
xchg
gs
outsb
add
jns
mov
fwait
xchg
mov
jb
or
mov
repnz
mov
mov
cli
jno
push
gs
push
insl
lea
mov
jge
dec
imul
lret
jg
mov
xor
mov
test
fidivs
iret
addr16
hlt
xchg
stc
mov
dec
dec
add
out
std
inc
and
inc
bnd
out
in
xor
ret
xchg
shlb
addr16
in
loop
mov
aad
movsb
xor
mov
lock
push
push
cmpsb
test
andb
push
inc
movsl
outsb
lock
mov
fstpt
cmpsl
cmpsl
mulb
les
stc
add
test
xchg
bound
jge
es
xchg
mov
xchg
and
and
add
inc
fwait
loop
or
pop
test
hlt
jmp
or
addr16
cld
negl
shll
test
jmp
out
xor
outsl
lds
or
pop
adc
pop
push
into
cltd
lock
fst
incl
or
lods
xchg
mov
push
lods
sbb
ret
movsl
imul
jmp
int
adc
cmp
push
aad
daa
ja
inc
imul
dec
jbe
lea
daa
push
adc
loop
test
in
and
jae
mov
xchg
call
mov
sbb
dec
sahf
hlt
fidivl
inc
lcall
ret
fsin
loop
jns
fdivs
jae
pop
js
icebp
lods
push
arpl
mov
cwtl
std
loop
jnp
inc
mov
fcomi
adc
enter
or
jge
aam
test
pop
je
push
jmp
and
bound
mov
popa
jno
cmp
loope
cld
mov
add
clc
stos
add
jl
outsb
xchg
jns
pusha
cli
and
and
or
hlt
xchg
push
mov
jo
xor
inc
jl
adc
jl
add
fbstp
fistps
push
aaa
test
clc
add
push
in
inc
dec
out
xchg
sbb
lcall
fisubrl
aaa
mov
fdivr
insl
fsubrs
xchg
fdivrl
sub
aam
clc
adcl
jg
js
repnz
or
fmull
and
or
and
ds
outsl
sbb
mov
in
sti
push
adc
mov
inc
sahf
mov
lds
inc
std
jmp
loopne
das
mov
std
insl
pop
jo
out
or
dec
je
loop
sub
cmpsl
lret
int
xchg
adc
scas
lahf
xchg
rclb
jb
inc
test
sti
adc
mov
pushf
outsl
int
aaa
xor
scas
pop
lock
sahf
xlat
in
xlat
lret
negl
mov
out
fldl
ds
xchg
aaa
fdivs
mov
fdivrl
jle
inc
insl
inc
push
push
jmp
cmpsl
jns
cmpb
in
std
loop
jmp
sti
cmp
adcb
push
inc
adc
jecxz
or
adc
push
mov
push
xchg
or
or
jne
lahf
scas
enter
rsqrtps
mov
sub
inc
xchg
dec
fidivs
outsb
cmc
daa
cmpps
adc
sub
cmpsb
sbb
orb
jmp
test
imul
lock
std
dec
cli
xchg
or
fs
data16
ds
pop
push
inc
cs
adc
fs
mov
popf
mov
pop
inc
mov
insb
out
xchg
dec
cld
test
out
inc
jp
jl
lahf
out
ljmp
xchg
je
jb
pusha
int3
dec
xor
stc
jl
les
mov
pop
lods
jl
insl
pushf
jno
mov
or
dec
cmp
xchg
push
fcmovb
mov
es
mov
test
inc
scas
in
out
addb
xor
int3
shl
test
and
pop
fldl
lods
daa
negl
test
mov
les
dec
xchg
sbb
movsb
xchg
cmpsl
cld
decb
mov
in
adc
add
push
jnp
xor
jae
and
ret
dec
mov
out
sub
fisubl
in
sub
out
sbb
cmp
push
push
add
addb
xor
mov
sbb
and
xor
dec
jecxz
adc
mov
jg
repnz
cmp
adc
mov
pop
or
ds
mov
mov
in
jb
pop
fcoms
orl
int3
jmp
cmp
outsb
sub
xchg
and
or
in
jge
xlat
cld
jg
and
inc
push
subb
shrl
mov
dec
movl
push
dec
fcoml
jne
push
inc
cli
ficoms
pop
les
jmp
lret
outsb
test
adc
dec
mov
push
and
xchg
ret
lock
out
sbb
xlat
call
jge
and
mov
add
int3
pop
mov
es
sub
cmp
lcall
pop
push
xor
enter
es
imul
pop
sbb
fs
mov
xor
testb
subl
lahf
scas
cs
ficoml
mov
popa
imul
aad
xor
and
insl
mov
arpl
inc
cmc
pop
mul
inc
int
out
fbstp
mov
aam
in
or
sub
and
repnz
sub
aaa
ja
rolb
jmp
pop
jno
cs
add
int3
push
arpl
xchg
in
cmp
fwait
adc
jle
xchg
mov
mov
pop
add
cmc
xlat
push
popf
cli
jge
and
mov
arpl
cmp
in
mov
lea
data16
and
xor
repnz
mov
pusha
adc
mov
movsl
push
xchg
gs
add
xchg
mov
pop
pop
push
daa
mov
movsb
sbb
mov
mov
pop
dec
popf
sub
pop
sub
rorb
ds
xchg
sti
dec
push
push
cmp
push
ja
pop
add
jae
shll
sub
or
adc
push
out
decb
fcompl
mov
cld
sti
inc
arpl
cmp
stos
test
jecxz
xor
pop
mov
xorb
sbbb
xor
test
icebp
lods
sbb
jae
dec
pusha
inc
mul
pushf
in
imul
mov
ret
lods
gs
fs
sbb
addr16
dec
pop
bound
xor
or
and
mov
xor
inc
push
or
push
ret
aas
aad
cmc
cmc
cmp
adc
das
fidivs
pop
mov
stos
sbb
pop
out
bound
aaa
jmp
sti
aad
and
add
mov
ljmp
mov
sub
jmp
adc
shl
dec
adc
hlt
lock
pushf
repz
daa
test
or
xchg
cmpsb
pop
push
jne
or
int
fnstenv
mov
nop
cli
xchg
fiaddl
inc
sbb
movsl
xor
idiv
add
jp
aad
add
loope
pop
shl
inc
jbe
ss
cmp
cmc
xorl
inc
pushf
jmp
in
adc
inc
movsl
xor
and
out
fwait
rcpps
call
loope
insb
enter
jbe
mov
jge
rcrb
divl
out
mov
lods
pop
xor
xor
xor
and
jo
sbb
in
jno
cmp
or
jecxz
mov
adc
mov
cld
xchg
inc
or
jae
outsl
sbb
cwtl
dec
scas
dec
lea
pop
loopne
sti
cwtl
cmp
leave
scas
xlat
dec
push
jbe
sti
mov
push
enter
jbe,pt
retw
dec
fs
in
adc
push
cmp
test
push
js
mov
jno
push
jge
pop
jg
adc
xorl
fs
ss
test
data16
fisttps
and
cmp
cwtl
in
jb
fdivs
mov
jmp
xor
std
dec
mov
xchg
mov
push
sub
in
test
das
add
and
sbb
cmp
mov
mov
adcl
pop
push
pop
cmp
ja
mov
lcall
push
dec
insl
out
mov
or
test
wrmsr
lahf
mov
gs
cmpsb
lods
cmp
pop
out
mov
sbbb
loopne
jbe
or
cltd
or
or
aas
movsb
sbb
cltd
in
add
jge
jo
sub
jo
mov
sub
insl
xchg
add
lods
scas
stos
repz
aad
js
xchg
pusha
or
sub
mov
mov
jecxz
mov
mov
xchg
ljmp
adc
add
dec
jl
xchg
xor
inc
mov
ret
pushf
fcomi
mov
enter
fsubp
adc
div
insb
loopne
lcall
inc
xor
push
call
dec
addr16
je
mov
adc
jmp
cmp
xchg
pop
mov
mov
xlat
jl
aam
and
popf
movsb
dec
push
xchg
les
popa
jp
clc
mov
pop
mov
mov
nop
bound
mov
je
sub
jo
mov
rorb
pusha
push
xchg
mov
cmp
jbe
shl
or
jmp
push
and
ret
or
cmc
sub
es
dec
lods
jo
mov
sub
cmc
dec
xor
mov
pop
mov
inc
add
out
addr16
mov
sti
xchg
add
popf
dec
or
cmp
fldl
or
adc
jb
dec
cltd
jae
adc
std
inc
mov
daa
lcall
pop
inc
fbstp
fdiv
sbb
movsb
cmp
lea
in
les
mov
adc
int3
imul
test
mov
add
push
pop
jne
lcall
es
sbb
cmp
insl
imul
aam
fs
xor
je
mov
mov
int
jb
pop
and
pop
mov
and
repz
sub
mov
adc
sub
stc
imul
data16
jecxz
push
in
insl
push
movsl
cld
adc
test
in
arpl
dec
je
std
mov
cmc
add
pop
pop
repnz
int
jb
jecxz
push
jp
add
xor
out
sbb
pushf
int3
and
xor
test
jne
cmp
and
jp
jb
mov
lret
jp
jl
repnz
sbb
ret
ja
and
stos
roll
test
shlb
loope
pop
jae
lds
popa
dec
sub
pop
out
jecxz
and
repz
clc
int
cmp
dec
jo
pop
lds
insb
jae
mov
shrb
addl
adc
xchg
frndint
adc
stos
xor
sub
or
mov
filds
add
xor
aaa
cmp
xchg
jle
push
imul
pushf
xorl
or
adc
and
test
mov
jmp
xor
adc
nop
push
in
mov
dec
pop
orl
adc
test
dec
in
aas
in
test
push
mov
pushf
mull
add
push
jmp
dec
xchg
sbb
mov
fdivl
xor
dec
push
cmp
aad
or
cmpsl
sub
mov
add
pop
test
xchg
sbb
dec
and
mov
pop
insl
jg
or
adc
int
movsl
je
in
or
mov
les
mov
xor
sub
jp
mov
inc
lret
lock
notl
xor
sub
and
scas
push
repz
bound
shll
push
in
dec
xchg
int
pop
fcoml
sahf
mov
cli
leave
sub
lea
sbb
xchg
or
out
inc
sub
jb
xchg
push
mov
ds
dec
gs
std
in
xchg
idiv
adc
icebp
xorb
jo
shl
adc
cmp
in
pop
add
clc
data16
cmc
cmp
xchg
sbb
add
adc
out
fnstcw
lahf
ret
repz
dec
and
and
js
jle
je
js
sbb
leave
cmpl
mul
in
pop
fucomip
test
pop
sarb
testl
out
jne
jmp
mov
loopne
mov
push
cmp
out
cld
and
pop
mov
stos
mov
inc
addr16
push
push
cmpsb
gs
nop
xchg
add
cmpsl
cmpb
lret
inc
inc
daa
jmp
adc
cmp
or
fimull
loopne
aaa
scas
shr
fstp
jae
mov
lea
out
mov
sub
push
jge
and
or
and
imul
and
cmovae
adc
jmp
pop
pop
jb
testb
push
mov
lds
inc
iret
je
jge
sbb
out
imul
in
cmp
int3
jns
lea
mov
loopne
mov
sarb
ja
dec
or
imul
dec
add
loope
imul
orb
jge
cmpsb
sahf
inc
mov
out
fwait
adc
cmp
mov
cmp
mov
mov
and
mov
push
lods
adc
insl
jecxz
cmpsl
aas
int
xchg
add
loope
jne
jo
into
and
jb
les
enter
sub
jmp
mov
mov
cmc
and
clc
and
and
jbe
adc
clc
clc
out
mov
and
mov
mov
in
andb
sahf
add
das
or
pop
inc
aaa
mov
cmpsb
lahf
push
popf
xchg
push
js
mov
movsl
xchg
xchg
stc
test
or
fldl2t
xor
cmp
mov
divb
imul
add
std
inc
pop
lock
sahf
xor
dec
adc
xchg
cmp
popf
leave
mov
mov
mov
notl
xchg
rcr
or
in
lods
jp
adc
in
test
in
scas
mov
lea
dec
in
xchg
and
loopne
orb
push
jno
fisubrl
jl
dec
ret
mov
bound
test
popa
add
insb
stc
inc
pop
fs
das
out
mov
ds
shlb
push
pop
sub
pusha
cmp
mov
jbe
sub
cmpsb
jge
xchg
xchg
xor
ja
ret
xchg
cmc
std
and
test
and
jl
add
out
jle
add
stos
inc
ret
lds
repnz
xlat
movsb
iret
ljmp
mov
nop
jmp
mov
inc
mov
inc
mov
outsl
jbe
inc
aam
scas
add
mov
loop
mov
call
mov
jbe
adc
xchg
add
or
adc
xor
gs
bound
jge
and
inc
xor
insb
xor
jo
mov
push
xchg
stos
movsb
fistpll
ror
xor
ss
stos
into
pop
or
cmpsb
call
push
mov
data16
int
leave
imul
push
into
sub
test
adc
add
mov
inc
and
jp
add
jp
push
popa
and
jmp
sahf
hlt
ds
xchg
dec
testb
inc
imul
or
imul
xor
mov
rcll
mov
rclb
sbb
das
and
add
loop
jo
push
push
enter
fildl
movsb
push
lret
int
mov
mov
ret
jecxz
imul
ja
jbe
lcall
ficoml
es
xchg
test
imul
fbld
xchg
push
movsl
stos
sbb
dec
mov
call
jno
aas
mov
sarl
inc
pop
sub
inc
cmp
dec
jno
out
mov
xchg
in
xlat
cs
in
sub
xor
clc
out
jns
add
cmp
jmp
jp
mov
xor
lcall
push
outsl
and
and
loop
mov
loope
mov
sbb
jl
mov
bound
jno
insl
mov
fucomip
cmc
ja
pushf
movsl
insb
int3
gs
add
into
cmpsb
nop
or
or
fbstp
pop
loop
jl
pop
sub
je
pop
lretw
xor
std
xchg
out
test
mov
test
xor
lock
and
push
stc
pop
inc
ret
imul
data16
aas
push
xor
mov
dec
ret
push
xor
rorb
push
jecxz
or
lret
jecxz
mov
arpl
jo
cmp
andb
ror
orb
int3
lcall
xchg
rolb
icebp
adc
pushf
mov
in
dec
nop
add
xor
insl
inc
push
jb
cmp
call
xor
pop
mov
mov
mov
in
je
dec
out
xor
sub
push
inc
fst
pop
mulb
sbb
mov
xor
jle
cmpsb
lods
aaa
imul
inc
or
mov
std
mov
sub
pop
sbb
ljmp
scas
mov
rcrb
xor
jp
jmp
cmpsb
push
ja
add
xchg
jns
ficompl
sbb
mov
sub
pop
pop
pop
mov
xchg
ret
adc
repnz
popw
add
xor
cmp
mov
push
enter
cld
xor
movsl
push
les
push
insb
mov
cmp
or
mov
pop
adc
jp
inc
push
xor
sub
adc
mov
xor
nop
outsb
sub
jle
fstl
push
sti
fstps
pop
mov
ljmp
or
movsb
mov
imul
push
lea
add
mov
jmp
sub
push
aam
aas
or
std
jmp
xchg
aas
mov
xchg
pop
push
mov
aam
add
mov
add
pop
mov
mov
jno
int
xor
leave
movsb
jle
movsb
out
addr16
mov
pusha
ljmp
mov
int
roll
mov
in
lea
add
mov
xor
cmp
out
sbb
mov
dec
les
jb
ljmp
cmp
or
mov
movsb
pop
mov
xchg
mov
fdivrs
sub
scas
int3
mov
lock
mov
shlb
arpl
cmp
insl
cli
mov
xor
and
js
jge
ror
ficoms
xchg
sti
mov
adc
cmp
xlat
pop
daa
push
fucomi
lcall
in
test
insl
jge
xor
movsb
cld
imul
mov
sbb
cld
xchg
orb
mov
hlt
repnz
ficompl
push
mulb
push
clc
mov
cmp
or
adc
jae
sub
outsb
sub
cmp
mov
movl
xor
pushf
or
negl
fldt
jnp
sti
scas
pop
scas
out
dec
and
dec
gs
add
ret
or
stc
xchg
int3
inc
dec
sub
gs
test
push
daa
mov
push
sbb
rcll
cmp
adc
and
mov
xor
enter
mov
stc
add
sti
andl
cmp
lods
adc
clc
sub
test
mov
stos
lds
lret
or
lds
pop
adc
dec
sub
add
bound
lret
aas
cmp
inc
ja
mov
out
sti
gs
sub
or
jl
subl
cmp
into
xchg
cmpsb
sahf
adc
popa
mov
xchg
pop
xor
sbb
adc
xchg
jg
or
scas
mov
data16
mov
scas
aam
loop
enter
sub
mov
mov
adc
jge
ret
in
pop
test
mov
push
popa
jnp
xor
leave
jge
lods
ljmp
jecxz
xchg
test
divb
jns
icebp
mov
cmpsb
or
sub
mov
outsb
jmp
sub
mov
inc
in
lods
and
enter
lahf
gs
sbb
jle
aaa
ljmp
daa
std
leave
sti
jmp
jno
repz
aad
dec
xor
cmpsb
xor
subb
rorb
cli
call
lea
xor
sbb
aam
mov
cld
jae
xor
or
jg
mov
cmc
jmp
lcall
outsb
sub
inc
mov
cmp
arpl
push
int3
lahf
adc
shll
cmp
les
out
mov
inc
fisttpl
fsubl
or
andb
sbb
movb
ljmp
sub
rol
mov
sbb
cld
stos
scas
xchg
iret
idivb
je
inc
in
test
jecxz
insb
cmp
outsb
mov
cs
jp
movsl
mov
dec
add
push
jbe
jbe
cmp
cmp
sti
sbbb
imul
out
fwait
inc
rorl
inc
push
rol
filds
mov
shrl
ljmp
push
movsl
nop
jge
cmpsl
add
int3
out
jbe
les
insb
jmp
add
std
fucom
je
hlt
add
and
fsubp
mull
jb
js
inc
pushl
int3
xchg
xchg
adc
movsb
jle
test
cmp
xchg
mov
loopne
sub
dec
repnz
mov
sbb
jge
xchg
mov
cmp
dec
daa
inc
cmc
das
enter
adc
push
pop
pop
lret
and
mov
stos
cmp
cmp
notb
popa
mov
pop
sub
jg
add
orb
sub
jmp
xor
and
pop
or
arpl
and
cmp
jecxz
push
test
imul
sub
mov
or
adc
and
xchg
mov
cmc
adc
pop
xchg
loopne
pop
mov
out
ja
or
mov
add
adc
lea
push
je
jge
jnp
push
insl
insb
and
sub
loopne
scas
iret
jg
sub
xor
loope
gs
lods
out
and
mov
ss
dec
icebp
push
fsubrs
mov
cmp
mov
ficomps
xchg
push
sti
jo
insb
mov
xchg
je
and
jb
push
andb
ja
jge
adc
lcall
sub
dec
inc
mov
mov
or
insb
in
dec
aad
jae
lods
cmp
imul
es
jge
data16
rcl
bound
imul
mov
out
push
or
aas
lock
cld
aam
xchg
cmp
or
jno
mov
insl
pop
outsl
fcmovb
rcr
add
xchg
pop
in
test
push
add
rorl
fs
dec
cwtl
push
or
inc
inc
fs
xor
inc
and
icebp
push
pop
daa
inc
mov
insb
inc
out
div
es
cmp
add
push
roll
ret
sbb
stos
cwtl
inc
sahf
sub
in
mov
dec
cmp
loope
out
mov
dec
push
xchg
cwtl
and
and
out
rorl
ss
stc
dec
and
mov
dec
mov
add
xchg
cmp
sbb
push
xchg
sbb
adc
notl
ljmp
gs
leave
scas
pop
mov
out
sbb
dec
mov
fisubs
jmp
scas
lods
test
jl
jp
adc
and
stos
jmp
jbe
aas
out
jp
cmc
pop
and
xchg
loopne
movsl
pusha
mov
adcl
roll
or
pusha
mov
jecxz
lahf
push
andb
pop
je
mov
jns,pn
add
jbe
out
aaa
and
orb
test
addb
adc
sbb
popf
pop
mov
inc
aaa
ds
jge
mov
aas
inc
push
pushf
cmpsl
icebp
mov
fs
pop
mov
lcall
test
aaa
hlt
in
cs
stos
or
sbb
repz
movsl
push
jl
add
adc
inc
xchg
leave
fisttpl
pop
adc
lret
lcall
test
cmp
pop
inc
popa
sarl
jno
sti
sbb
testb
push
sbb
pop
mov
lcall
std
mov
icebp
sbb
ljmp
xor
xchg
dec
aaa
sub
add
jge
inc
iret
and
test
in
jge,pt
push
cmc
aas
inc
xchg
push
inc
loope
lahf
sti
in
or
and
xchg
sbb
jb
pop
in
es
mov
in
test
pop
movsb
pop
push
sub
and
push
lea
mov
mov
lods
leave
xor
cwtl
cltd
adc
jl
gs
jae
jle
dec
xor
and
xchg
jge
or
imul
sahf
mov
sub
jmp
lock
cmpsb
in
test
mov
cs
xlat
mov
test
push
movsl
cmpb
mov
mov
or
enter
push
sub
push
ret
jns
repz
push
mov
cmpsb
mov
arpl
pushf
cmp
mov
stc
loope
pop
or
mov
mov
sub
test
js
add
cmpsl
push
loope
mov
push
mov
push
addr16
pop
fs
stc
out
jbe
push
cmc
and
in
mov
popa
fs
pop
jmp
int3
cmp
xor
xchg
andb
loop
out
aam
aad
mov
insl
push
adc
pop
cmp
fs
mov
sbb
nop
mulb
std
mov
or
test
nop
or
adc
mov
into
mov
pop
dec
stos
jno
pusha
adc
or
jge
sub
icebp
mov
imul
dec
lods
mov
cmpb
fstp
inc
fucompp
xor
or
dec
fisttpl
ds
fs
adc
xchg
xchg
test
pop
pop
xor
sti
subb
add
jne
test
xchg
jle
sub
jle
and
mov
orb
data16
inc
mov
rorb
push
in
jecxz
jb
pop
and
shr
sbb
xchg
das
mov
mov
shrl
jo
jno
std
jno
push
shll
repnz
je
jle
add
shrb
sti
adc
inc
imul
add
sahf
xor
in
int3
add
push
sbbl
gs
in
sbb
xor
push
mov
mov
or
mov
imul
cmp
jmp
cmp
cmp
in
inc
insb
cltd
push
pop
aas
mov
adc
mov
sbb
cld
sbb
es
xor
push
insl
or
mov
push
rep
inc
insb
fs
out
mov
or
out
inc
inc
idivl
push
outsl
sbb
test
jno
ljmp
inc
fisubl
cs
xchg
fnstenv
mov
xchg
jle
aad
inc
jecxz
pop
mov
xchg
pop
repz
adc
in
xlat
aas
sub
xchg
xchg
rol
ret
arpl
outsl
les
sub
mov
jb
inc
je
mov
test
repz
cmpb
scas
inc
in
jns
push
mov
push
outsb
cli
call
or
mov
in
int3
mov
mov
and
inc
iret
jecxz
push
clc
xor
imul
cmp
mov
dec
xchg
cld
mov
mov
fidivl
sbb
xchg
std
iret
mov
rcll
mov
mov
inc
sti
stos
xchg
jle
sub
out
push
cmp
mov
test
lahf
test
push
mov
inc
popf
pushf
incb
cmc
jno
insl
dec
addl
adc
decb
aas
fnstsw
pop
mov
inc
ret
sub
ljmp
cmp
imul
xchg
adc
test
in
test
jg
push
insb
pushf
or
jge
push
xor
inc
mov
add
cmp
pop
sbb
cmp
push
adc
movsb
nop
xor
mov
sub
ljmp
jle
or
xorb
and
jb
dec
inc
adc
adc
push
mov
jmp
xor
cmp
sbb
adc
cmp
xchg
test
bound
mov
sti
pop
cmc
sarb
add
mov
mov
adc
sub
daa
out
das
xor
shlb
lds
or
dec
mov
inc
jns
xchg
push
cmp
add
cmc
std
sub
xor
out
push
out
ret
jmp
lahf
cmp
inc
enter
bswap
adc
andb
add
sbb
sbb
fisttpll
lds
or
mov
mov
pop
dec
das
xor
out
inc
jno
dec
outsl
xor
pop
es
lea
jo
or
mov
dec
lock
iret
dec
xchg
add
addl
les
cmovle
or
mov
test
je
jg
adc
dec
inc
imul
push
cmpsb
sbb
fisubl
pop
jae
subb
mov
or
int3
add
xchg
push
jp
cmp
aad
es
and
add
imul
sbb
lods
dec
xchg
sub
xorl
mov
jne
sbb
repnz
lock
das
js
test
mov
add
mov
aam
fidivs
hlt
mov
adc
repz
addr16
lret
sti
xor
ss
aad
sub
jne
push
inc
rcll
test
in
out
jo
leave
inc
ret
inc
cmp
or
pop
push
gs
aad
sbb
test
test
jae
into
shrb
jne
daa
into
int
pop
mov
add
pushf
mov
mov
mov
dec
in
add
and
mov
xchg
imul
stos
ds
or
adc
or
jbe
pop
movsl
dec
adc
pop
movsb
push
shlb
popf
mov
mov
gs
cmp
sbb
inc
add
ror
in
cmp
or
js
xor
fldl
jno
lea
push
fisttpll
inc
xchg
xor
in
out
jno
rcrb
add
jp
pop
in
inc
jge
in
fs
scas
jb
clc
flds
sarl
lret
jmp
fdivr
mov
popf
dec
adc
push
cmpb
pop
les
imul
rcrb
or
xor
roll
sbb
lcall
jnp
or
mov
mov
ret
mov
jbe
leave
or
xor
mov
or
push
adc
dec
fidivl
in
in
mov
shlb
mov
pop
mov
mov
sub
sbb
mov
sbb
and
outsb
mov
cld
leave
scas
pop
roll
lcall
inc
add
sbb
add
or
xor
adc
pop
test
dec
pop
xchg
addr16
inc
pop
inc
adc
push
out
xchg
aaa
test
xchg
arpl
dec
jp
pop
push
push
das
fisttps
jo
cmpsl
call
and
fstpt
sbb
or
jmp
stc
and
enter
sbb
and
cmp
roll
mov
das
adc
movsl
mov
and
bound
test
int
sti
sub
adc
leave
daa
sbb
mov
or
cmp
adc
sub
mov
mov
repz
xor
das
mov
cmp
and
mov
mov
inc
adc
imul
icebp
pop
inc
inc
daa
sbbl
jb
push
ss
in
rol
pop
sti
sbb
incb
pushf
xchg
std
mov
lret
push
lds
jnp
inc
aaa
data16
push
stos
bound
xlat
push
sbb
pop
cmp
out
xchg
repnz
aas
cmpsb
and
and
sbb
add
sub
mov
adc
popa
lahf
inc
sbb
in
lea
popl
rolb
xor
xlat
fs
add
xchg
clc
mov
pushf
cmp
imul
cmp
movsl
and
fnstsw
lea
add
js
out
dec
and
lock
test
xor
jle
data16
xor
popf
add
cli
inc
inc
int3
push
inc
insl
xchg
jo
imul
push
mov
mov
xor
test
sub
aaa
sub
insl
or
mov
pop
inc
popf
repnz
cmp
imul
cmp
ds
gs
dec
or
xor
dec
adc
push
pop
add
mov
sbbl
push
mov
and
cmc
mov
pop
mov
imul
or
pop
pop
mov
ret
lahf
movsl
rcrb
cmp
and
mov
or
mov
lock
mov
hlt
movsl
out
std
add
xor
pop
enter
push
cs
fs
add
inc
ret
jmp
pop
gs
cmp
verw
jnp
pop
inc
test
movsl
inc
frstor
xor
js
xchg
in
data16
mov
mov
mov
neg
jl
dec
mov
fs
test
mov
shll
pushl
xor
push
mov
cmp
jo
in
in
cli
inc
std
pushf
jle
jno
out
fwait
orl
push
and
cwtl
mov
or
rolb
ss
mov
iret
push
push
out
xor
cmc
jo
inc
dec
inc
jmp
testb
jl
mov
outsl
xor
bound
inc
insb
push
popa
and
ret
aad
mov
dec
out
mul
rol
fs
cmpsl
jbe
cwtl
xchg
jb
push
and
mov
mov
js
pushf
les
in
mov
sbb
push
pop
stc
mov
adc
cmp
adc
or
adc
push
je
pop
mov
push
data16
jmp
insl
mov
sub
and
aad
push
shr
data16
dec
pop
jbe
jno
lods
es
jae
loop
mov
inc
push
sbb
and
jg
jge
xor
inc
jmp
lds
loope
sub
pop
test
loop
xchg
add
pop
in
aas
sbb
movsl
pop
xor
in
stc
in
push
fldenv
repz
mulb
int
sti
push
subb
aaa
mov
push
mov
inc
and
sbb
js
add
popf
loopne
xchg
pop
cmp
repz
adc
sub
leave
cwtl
pop
mov
test
xor
or
rcll
out
pop
arpl
popf
lret
fcoml
hlt
sub
sub
cmpb
int
out
test
testl
out
cld
mov
push
inc
and
cmpsb
in
sbb
aam
out
lock
sub
push
mov
pop
and
mov
and
or
gs
adc
sahf
mov
jmp
in
ja
testl
xor
adc
xchg
jo
ret
or
test
movsb
shl
test
jecxz
jno
je
loop
or
and
adc
or
jmp
mov
aam
in
lods
pusha
fistps
add
cmp
pop
mov
jle
jns
int
lods
xor
jp
xor
pop
aas
cmpsb
int3
or
mov
mov
mov
dec
sbb
sbb
loop
repnz
lea
in
and
popf
popf
sub
mov
cmpsb
mov
dec
test
jp
stc
push
pop
adc
fsubs
add
sub
pushf
jne
test
dec
aas
add
fs
xchg
sbb
mov
fbstp
dec
outsl
pop
dec
cltd
mov
and
cmp
in
jmp
dec
out
jns
test
cmp
sub
into
inc
test
aas
mov
out
sub
sub
dec
sub
into
lea
lahf
sti
cmc
cmp
lahf
gs
and
fs
mov
cltd
sbb
cmpsl
outsl
out
cmpsb
ret
sahf
iret
push
sbb
sub
mov
cwtl
dec
notb
movsl
fiadds
lcall
sub
shlb
add
sbb
test
push
mov
and
loopne
sbb
mull
lea
xchg
lods
or
mov
fwait
jnp
mov
xor
mov
jae
xor
cmpl
mov
mov
in
fcompl
cmc
mov
imul
das
js
aaa
xchg
std
mov
cmp
pop
push
or
insb
inc
and
stos
jne
cmp
insl
pop
nop
sbb
ds
push
jae
mov
xchg
loope
xor
imul
pop
adc
pop
adc
jmp
fistpl
ret
cmp
dec
aas
mov
add
or
jnp
inc
loop
mov
inc
inc
mov
dec
inc
pop
sti
mov
ficoml
or
cmp
jne
cs
imul
xor
and
call
sub
dec
mov
sbbb
loop
mov
je
jl
and
add
xchg
xchg
movsl
cmp
cmp
cs
dec
cmc
push
mov
cmp
mov
adc
mov
jnp
mov
loop
jecxz
pop
test
jp
xor
push
mov
testl
ret
test
and
jae
sti
pop
mov
fwait
push
lock
adc
xor
test
hlt
xchg
mov
mov
movsl
xor
mov
jle
mov
popf
fidivrs
movsb
lods
jmp
adc
inc
cmp
cmp
mov
repnz
xor
out
xchg
addb
or
xchg
push
cltd
std
or
aaa
pop
fs
xchg
lds
mov
xchg
in
in
push
or
imul
loope
daa
lds
lds
push
inc
cwtl
mov
add
int3
xor
mov
jb
inc
out
push
jmp
and
xchg
outsl
or
lock
mov
sbbb
sbb
cld
add
pop
xchg
sahf
adc
bound
mov
xchg
add
push
cmpsb
fdivl
cmp
ret
cmpsb
or
dec
mov
cmp
sti
test
nop
xchg
jmp
lock
jge
adc
loopne
pop
popf
sbb
mov
lds
xor
lods
inc
jl
outsb
push
cmpsb
add
inc
mov
ret
bound
in
adc
cmpl
mov
test
xor
in
repz
mov
inc
jg
or
xchg
data16
adc
dec
sbb
pop
sub
xchg
mov
icebp
lcall
test
fcompl
in
outsl
adc
jl
lea
pop
out
cmp
scas
test
xor
xor
lods
jns
js
in
mov
pop
shl
sub
pushw
and
add
sub
dec
fcoms
lock
and
push
repz
pushf
clc
mov
add
or
jp
shll
xchg
inc
lock
in
inc
imul
fisttpl
xchg
cmp
lods
inc
xor
shr
shll
call
dec
sbb
pop
jns
ss
and
mov
pop
jp
clc
into
stc
mov
rep
lcall
inc
pusha
pop
out
and
es
mov
cmpsl
xor
fisttpl
cmp
jmp
ficoml
jmp
cli
add
xchg
insl
and
inc
nop
adc
in
mov
push
es
push
icebp
sahf
aad
mov
xchg
jae
imul
xchg
lds
mov
ja,pt
lods
pushf
out
lds
pop
call
cli
ds
loop
jl
dec
in
adc
imul
sti
cmp
inc
lds
js
xor
aad
aaa
xchg
into
enter
scas
push
leave
dec
sub
cmp
inc
in
aaa
add
sti
in
inc
push
push
mov
pop
loopne
inc
or
mov
cmp
fwait
mov
sub
or
xchg
sub
xor
or
or
dec
jmp
pushf
scas
sub
les
ret
jle
sub
pop
adc
call
iret
repnz
insl
sbbb
jmp
movsb
mov
mov
lods
adc
fldenv
or
xor
jne
push
orl
iret
lea
popl
add
inc
lods
stc
orb
push
sub
sbb
lret
jns
fnstenv
cmc
aas
int3
enter
outsl
xlat
int
ret
rcrl
push
push
sbb
sbb
leave
adc
push
mov
push
mov
out
mov
jle
out
push
xor
jb
pop
cmp
pop
adc
mov
test
and
call
stos
pushf
shrb
insb
and
pushf
cmpsl
loop
xchg
adc
xlat
cmp
mov
ret
push
cld
pop
fbld
rolw
fwait
shll
fsubl
fldl
pushf
add
out
push
repnz
mov
out
adc
test
xchg
push
add
repnz
push
adc
out
pop
imul
fs
fs
dec
insl
bound
dec
adc
movsl
ret
mov
xor
test
adc
xchg
and
test
pop
je
clc
xchg
and
fdivrs
mov
and
push
int3
outsl
fwait
jo
mov
pop
icebp
dec
add
std
mov
fcomps
insb
and
xorl
mov
aam
fucom
fdivrl
ret
mov
push
cltd
adcb
push
bound
push
call
es
es
add
or
test
push
jp
sbb
ds
testl
sub
dec
ds
mov
cmc
js
add
je
add
js
pop
dec
pop
mov
in
xor
mov
sbbl
aam
cli
mov
jb
ret
es
mov
call
xchg
cmp
jb
dec
jae
repnz
ficompl
movsl
pop
cmp
xchg
inc
in
es
outsl
lds
xor
mov
sub
pop
mov
les
mov
repnz
ret
mov
lret
cmp
lock
mov
push
pop
icebp
dec
xor
fs
icebp
xor
fs
mov
repz
out
in
dec
scas
xchg
out
cmp
div
gs
icebp
stos
outsb
and
jg
sbb
ss
aad
aad
mov
pop
dec
fucomp
in
cmp
jg
xchg
sub
push
push
shlb
fwait
xlat
mov
sub
push
pop
inc
lods
xchg
dec
sbb
test
mov
testb
jbe
sub
dec
stos
ljmp
cmp
and
xchg
pusha
xor
pop
adc
add
scas
sub
sbb
pop
ret
sti
lret
lcall
sbb
bound
dec
lea
pushf
jo
cmc
ds
xchg
push
fcomps
sahf
imul
test
out
icebp
loop
mov
sbb
lods
and
fwait
and
inc
std
lds
lock
cmp
sub
mov
or
js
int
jge,pn
mov
out
mov
call
test
xor
and
and
push
fsubrl
push
cmp
mov
lock
xor
movsl
dec
insb
xlat
cmpsl
cmp
shrl
jns
loopne
jecxz
xlat
fbstp
mov
je
mov
mov
xor
es
ss
stos
je
dec
fbstp
aas
sti
pop
sbb
test
cli
cmc
lea
cmp
jge
aas
jle
cmp
dec
aam
fwait
sbb
push
mov
xlat
mov
mov
shlb
fisttps
push
xchg
lea
pop
jno
lods
mov
adc
int
mov
scas
ret
jb
lock
rsm
mov
inc
or
imul
js
add
mov
add
ds
cld
inc
imul
ret
or
or
push
in
shll
icebp
popf
imul
and
dec
xor
xor
insl
dec
fwait
icebp
jno
arpl
sbb
ss
in
adc
pop
iret
mov
or
dec
loopne
pusha
insl
das
int3
and
and
fsubrl
jp
lahf
idivl
pop
fwait
adc
jmp
in
jmp
out
lods
clc
add
mov
ret
lods
cmp
mov
inc
xlat
xor
pop
fs
sbb
outsb
fs
enter
sub
jnp
into
mov
xchg
mov
pushf
gs
add
bndldx
inc
mov
mov
push
lods
in
pop
jae
das
sbb
fs
in
enter
les
enter
movsl
je
rclb
sbb
and
outsl
xchg
cmp
arpl
mov
sub
dec
or
dec
dec
stos
xchg
jl
test
cmp
in
jmp
fnstsw
loope
mov
lea
adc
dec
in
cli
jecxz
insl
xchg
jns
xchg
test
insb
out
out
jno
test
test
push
or
in
daa
sbb
mov
and
ficomps
out
xor
jns
gs
or
gs
add
push
ss
stc
push
xor
dec
lods
cwtl
add
xchg
add
scas
stos
ja
xchg
in
mov
push
jmp
sub
lret
icebp
jns
aaa
ljmp
lret
adc
ljmp
shl
iret
cmpsb
addr16
mov
nop
int
outsl
test
push
aas
loop
sahf
cltd
pop
or
outsl
sub
out
fcmovne
cmp
pop
adc
dec
jbe
sub
inc
or
cmp
sarb
add
shll
arpl
mov
push
cli
add
stos
pcmpgtd
popa
imull
mov
sti
xchg
notb
dec
daa
mov
push
sbb
adc
roll
cwtl
add
mov
stc
pop
jne
cmpsl
mov
pusha
mov
push
lret
cmp
outsb
add
bound
jno
dec
out
push
mov
repnz
sti
aam
outsb
push
dec
dec
ret
mov
mov
aas
xchg
enter
cmp
push
push
dec
imul
dec
test
cwtl
jecxz
and
outsb
sarb
jmp
inc
xchg
ds
aas
test
and
insb
ss
add
push
sti
push
pop
movsb
repnz
add
out
loopne
fs
lahf
lods
mov
pop
pop
add
mov
cmp
test
jns
dec
les
int
insl
bswap
fnstcw
lret
adc
adc
cmpb
mov
push
dec
push
sbb
shlb
int3
ds
mov
and
mov
fadd
pop
fcmovnu
popa
jne
fsubrl
test
dec
js
cmpsw
cmp
sti
jno
popa
dec
out
lods
sti
or
stos
stos
into
fcmovnbe
test
lahf
enter
addr16
jg
loopne
add
push
ret
or
push
test
test
fcmovnu
cld
mov
sub
pop
push
std
pop
sub
fucomp
or
dec
push
jp
inc
rorb
add
xor
insl
insl
sub
xor
imul
mov
mov
out
jmp
push
dec
push
dec
jle
xchg
xchg
lret
xchg
jp
clc
test
mov
cmp
and
add
and
jno
dec
imul
outsl
daa
jo
xchg
or
add
mov
nop
popf
stos
mov
xor
jne
fdivr
mov
insl
fcompl
sahf
sub
andb
data16
dec
jo
sbb
mov
das
mov
dec
inc
mov
jg
or
pop
mov
or
sti
adc
xor
push
popf
mov
lock
cmp
inc
mov
jo
sub
pop
js
sbb
push
or
inc
pop
xor
mov
lds
mov
ret
iret
add
daa
mov
vmovddup
mov
jg
stos
jg
bound
repnz
mov
je
dec
aas
pusha
jne
adcl
sbb
sti
scas
xor
mov
dec
fsubr
ss
mov
pusha
mov
mov
or
aaa
mov
mov
std
cmpsl
mov
aam
pop
jo
jmp
rol
jnp
adc
mov
add
cwtl
cmp
stc
adc
mov
pop
mov
fs
inc
in
repnz
pop
out
mov
addr16
shlb
andb
mov
pop
dec
dec
or
sub
inc
mov
stc
cs
ljmp
lcall
jmp
scas
stos
mov
add
dec
hlt
xor
xor
xlat
aad
orl
cmp
mov
in
xchg
push
pop
jns
mov
adc
cmp
divb
out
xchg
jle
inc
jbe
adc
addr16
in
dec
std
sarl
mov
fmuls
push
fcomi
and
lret
dec
mov
fildl
adc
jge
aas
aam
jecxz
jge
mov
xchg
inc
or
sbb
mov
cmp
lea
pop
ss
mov
dec
test
sub
mov
lcall
andb
idiv
dec
mov
pop
xchg
jle
jbe
adc
ret
out
cli
xchg
out
or
sbb
stos
lods
fnstcw
pop
add
sbb
cmpl
out
incl
addr16
xchg
adc
jne
and
dec
mov
cld
and
arpl
lret
fadds
mov
sbb
stc
fistps
repnz
popa
adc
out
js
inc
lods
test
das
and
daa
inc
xchg
adc
xchg
shll
jmp
xchg
push
subl
pop
sub
ret
add
jl
and
popa
add
pop
jg
sti
adc
adc
push
mov
loope
jns
cmpsl
or
cmp
gs
aas
je
sbbb
ja
in
aaa
cmp
bound
xor
ret
sbb
or
pop
outsb
aam
pop
lcall
pop
cmpsb
dec
mov
add
stos
sarl
hlt
fadds
adc
push
in
es
pop
lret
jns
add
cmp
add
cmp
mov
xchg
fdivl
jecxz
and
lea
out
mov
xor
iret
xchg
jb
movsl
js
pop
xor
jmp
xchg
stos
add
mov
or
cmp
test
xorl
inc
inc
xchg
push
xor
jb
std
test
repz
in
test
add
sbb
mov
inc
aaa
cmc
lahf
xchg
mov
out
es
or
ret
jmp
test
inc
repz
xorb
mov
stc
sub
push
xor
add
out
lahf
mov
adc
icebp
jl
cmp
dec
jmp
jb
stos
xchg
cmp
ret
jmp
lock
cmp
sub
test
cmp
notb
xchg
inc
jb
lea
fadd
fsubp
jecxz
mov
mov
out
pop
and
sbb
jns
mov
sbb
sbb
cmp
ret
jne
popa
and
and
xor
rolb
fstpl
mov
daa
fdivrs
xor
jge
jle
aad
inc
mov
add
xorb
movb
sbb
shlb
sub
sub
add
xor
add
lds
jns
out
pushl
and
push
jp
jo
or
testb
or
mov
add
cmp
xchg
cmp
inc
sub
mov
cmp
or
xor
fsubrs
cltd
aad
push
ja
push
cs
std
in
pop
push
xchg
jno
mov
sub
cwtl
cmc
mov
outsb
xor
add
mov
cmpsl
movsl
out
pop
dec
repnz
xor
in
fisubl
in
int3
addr16
data16
jae
imul
je
cli
repnz
es
ret
repz
mov
bound
rclb
sahf
mov
out
scas
push
jo
add
or
mov
push
sbb
fisubrl
mov
push
test
pop
std
pusha
ljmp
pop
imul
loop
out
sbb
mov
cmp
sbb
add
dec
jnp
xor
jbe
mull
cmc
and
idivb
pusha
mov
jmp
test
mov
ret
lea
dec
insb
jmp
pop
mov
pop
daa
rcrb
mov
into
cmp
loop
pop
jmp
fistpl
xchg
pop
fcoml
cs
sub
shl
and
ret
movsb
or
mov
inc
fs
and
jle
inc
xchg
cmpsl
pusha
testb
jge
es
mov
addr16
call
mov
dec
insl
and
repz
inc
and
jge
lods
sbb
aaa
jl
out
adc
sbb
jne
cwtl
mov
mov
cmp
and
out
clc
pop
pop
push
std
inc
dec
lea
lods
jecxz
jge
nop
xchg
sbb
or
call
jle
addr16
sahf
std
sub
cmp
sub
pusha
sarl
and
sub
pop
cmove
jbe
push
test
rolb
orl
addl
ds
ljmp
pop
insb
pop
sbb
ds
pop
sub
push
fimuls
stos
or
jg
fsubl
or
repnz
add
inc
inc
adc
cmp
inc
mov
pop
in
testb
aaa
call
mov
mov
cmp
clc
add
jg
divb
add
cmc
mov
cli
mov
idiv
lcall
cmc
inc
jb
ss
push
mov
cs
iret
inc
adc
pushf
das
sub
xor
ss
cltd
dec
xlat
mov
sub
mov
cmp
dec
and
push
xor
mov
mov
cmpsl
inc
sub
mov
jmp
mov
daa
mov
mov
faddl
mov
xor
or
add
mov
daa
mov
fildll
arpl
and
mov
lret
jmp
sbb
mov
cmp
fwait
push
pop
push
inc
scas
xchg
or
out
adc
sub
dec
mov
popa
xor
mov
and
clc
push
jl
cli
into
push
loope
icebp
mov
adc
xor
in
xor
and
xchg
inc
xchg
and
or
gs
sbb
stos
jb
cmpsb
sti
orps
xor
xchg
dec
mov
hlt
jnp
icebp
repnz
shlb
xor
inc
out
xchg
test
inc
mov
push
mov
in
aas
add
int3
jp
test
mov
add
loopne
jecxz
lcall
iret
icebp
jmp
adc
lret
pusha
fwait
inc
jl
daa
cs
ljmp
add
popf
sahf
nop
xor
mov
xchg
pop
iret
mov
cmp
pop
jnp
or
mov
call
jmp
rdmsr
cmc
ficoml
add
and
dec
cmpsb
rolb
movsl
cmp
cmpsb
lcall
xor
jmp
out
lea
pusha
mov
imul
push
pop
cwtl
inc
jmp
out
pop
lcall
mov
loope
js
in
mov
in
mov
call
xchg
cmpsb
push
aam
subb
push
arpl
mov
and
gs
aam
dec
icebp
mov
dec
movsb
xor
scas
addr16
call
int
xor
repnz
mov
add
cli
out
lds
sub
adc
popf
aam
jae
push
add
cli
jge
sbb
sbb
loop
repz
cmp
push
into
fisubrs
incl
insb
and
cmp
insl
pop
add
idiv
aas
jno
add
lods
ja
jb
sub
add
xor
add
nop
cs
mov
adcb
jbe
es
cmp
aad
ljmp
adc
pop
push
jns
leave
es
imul
xlat
push
loop
stc
xor
and
xchg
pop
stos
leave
scas
fidivrl
jne
jns
cmp
jo
push
sub
out
fisttpll
bndldx
mov
sub
push
out
cltd
xlat
cmp
xor
cli
mov
cmpsl
outsb
add
jbe
loop
fistl
pusha
cmp
mov
xor
mov
or
sti
or
dec
mov
jecxz
dec
loopne
mov
aad
out
rcr
mov
push
sti
test
pop
sub
scas
mov
push
sbbl
test
fcmovnu
rolb
adc
pop
es
mov
or
dec
cltd
cmpsl
mov
testl
sub
xor
or
in
leave
sub
popl
jns
mov
jge
push
xor
repz
dec
stc
push
pop
hlt
push
jb
xchg
pop
add
add
shr
fcomi
out
mov
xor
sub
ds
or
add
inc
fldcw
shrl
jmp
or
insb
mov
dec
or
js
push
add
setno
fldenv
pop
inc
clc
pop
imul
jae
jge
and
cmc
test
insl
pop
adc
into
clc
ficomps
jbe
into
loop
call
fildl
out
sbb
mov
movsb
call
cmp
adc
std
mov
inc
outsb
ja
or
inc
imul
mov
dec
mov
nop
jmp
mov
lock
std
ljmp
or
adc
mov
ret
dec
pop
pop
jae
imul
loop
push
mov
lds
push
adc
stos
jp
in
cmp
rorl
and
test
lcall
loopne
jl
ret
xchg
add
jnp
cmp
cmpsl
sub
sub
repz
addb
push
fdivr
mov
mov
add
in
mov
insb
pushf
addr16
add
mov
nop
fstpl
inc
jo
mov
fbstp
movsb
push
xchg
cltd
jg
and
dec
add
and
repz
scas
insb
cmp
out
popa
mov
sub
test
hlt
sarb
mov
mov
jns
jmp
inc
fnsave
adc
xchg
mov
cmpsb
jle
cmp
shlb
mov
xchg
push
adc
push
js
and
repz
xor
out
cmp
sbb
ja
jmp
cmp
imul
filds
mov
shlb
jae
xchg
cltd
jle
jnp
mov
pop
mov
adc
insl
movsb
adc
js
popa
cmp
xor
jo
dec
pop
sbb
dec
jge
mov
lret
in
mov
fs
in
insl
mov
xchg
call
or
pop
lret
mov
push
xchg
out
inc
cmp
pop
cltd
dec
or
std
test
pop
out
push
add
cli
mov
sub
dec
test
dec
jne
loop
shlb
sub
dec
jmp
xchg
and
cmp
mov
cmp
ljmp
mov
test
sbb
jle
rorb
cltd
mov
aam
xor
pop
pushf
adc
mov
out
mov
lret
jae
out
jl
scas
andb
mov
fstpl
pop
shll
jns
or
imul
clc
imul
clc
movsl
jp
les
ds
add
ret
aaa
add
xchg
insl
push
mov
or
push
mov
mov
in
add
push
add
mov
mov
pop
xchg
inc
cmp
enter
idivb
call
mov
xchg
shr
call
pop
test
jmp
add
shlb
sub
in
stos
and
push
inc
into
pop
movsb
pusha
adc
stc
add
notb
les
sbb
ret
data16
mov
dec
outsb
xor
divl
sbb
jecxz
stc
mov
push
mov
inc
jns
dec
mov
inc
sbb
mov
mov
add
enter
sub
fmuls
sti
jbe
pop
lock
mov
dec
fdivs
add
loope
popa
push
or
movsl
mov
inc
cmp
jmp
mov
or
addr16
or
rol
jle
xchg
in
sar
mov
jp
jle
sbb
ljmp
and
mov
jo
fcompl
out
jmp
mov
mov
jecxz
xlat
subl
pop
testl
and
or
push
xchg
mov
fldt
xchg
clc
movsl
add
adc
pushf
enter
imull
fistpll
inc
push
inc
sbb
aaa
aad
mov
push
insb
data16
cmp
push
popf
inc
push
jae
lret
movsb
rcrl
dec
xchg
or
fisubrs
hlt
mov
ss
aaa
or
pop
adcl
ret
outsb
orl
jae
mov
movsb
cwtl
adc
test
aas
or
jge
movsb
mov
jg
jb
fs
cmpsl
hlt
adc
sub
and
sbb
fs
fsubp
adc
inc
mov
fnstenv
pushf
jne
sub
jae
add
mov
dec
dec
xor
ds
adc
in
cli
xchg
sbb
xorb
into
jp
xchg
sub
xor
or
pop
mov
and
pop
call
cmp
je
sub
xor
pop
inc
xchg
orl
nop
or
js
mull
jae
xor
lret
ret
mov
icebp
push
adc
sub
je
mov
in
dec
test
fmuls
fwait
inc
ds
cmc
and
cmpsl
fsubrl
dec
push
jg
mov
sti
sbb
jo
mov
mov
cmpsb
and
out
loop
pop
mov
jg
addr16
mov
sbb
add
xlat
out
mov
add
ret
lods
pop
xchg
pop
or
mov
rcll
mov
lcall
mov
push
add
aaa
adc
or
xor
pop
dec
jg
jl
xchg
and
out
stos
add
in
pop
inc
out
xchg
xchg
les
xchg
out
and
pusha
mov
in
mov
je
lahf
or
mov
or
push
jp
cld
mov
out
xchg
pusha
add
pop
sbb
xchg
xlat
inc
fbld
jmp
sub
pop
sub
jp
jne
test
mov
sub
sub
fadds
dec
je
int
lcall
gs
push
push
in
stos
insl
je
sahf
mov
push
clc
pusha
nop
xor
std
mov
int3
sti
cli
xorb
or
ds
out
scas
call
mov
cwtl
outsb
insb
jge
xchg
add
jo
dec
jl
sbb
pop
xor
xor
stos
jle
lret
mov
idivl
stos
sbb
aas
rorb
xchg
sub
in
addr16
or
cld
mov
adc
add
mov
leave
add
mov
cmp
ret
ljmp
mov
lret
cmc
ficomps
cmp
ds
iret
jge
cli
inc
in
je
sub
stos
add
push
adc
mov
push
std
cmc
fwait
sbb
iret
mov
adc
jne
mov
cmp
push
jg
test
stc
cmc
imul
cmp
cmp
push
mov
rorb
mov
inc
pusha
cmp
lcall
aam
xchg
mov
dec
cld
xchg
cmp
clc
ja
popf
and
sub
insb
stos
mov
pop
icebp
jge
mov
lds
inc
mov
lds
pop
jnp
sub
add
jle
out
sub
icebp
les
imul
and
xchg
cltd
shr
rcl
xchg
sbb
push
shl
mov
jb
push
pop
sub
out
pop
mov
inc
movsb
mov
xor
int3
adc
sub
fsub
add
inc
gs
repnz
insl
push
push
adc
mov
into
jge
sbb
jnp
or
jp
jae
popf
mov
shll
andl
lock
adc
xor
mov
movsl
pop
fstpt
cmp
adc
mov
pop
sub
jb
int
icebp
jge
cmpsl
xor
mov
aaa
int
fidivrs
pusha
les
imul
imul
stc
cwtl
fdivrs
mov
int
mov
sbb
fs
pop
sarb
pop
icebp
decb
pop
cmp
sahf
clc
jae
cwtl
insb
xor
inc
adcb
push
data16
xchg
out
push
jnp
lea
insb
and
hlt
xchg
jp
rcrb
pop
bound
jne
loopne
lret
jbe
data16
fdivr
xchg
pop
and
dec
arpl
and
xchg
push
inc
mov
int
ret
add
in
sbb
cmp
mov
mov
push
cmp
mov
or
gs
xor
jnp
in
mov
cld
gs
faddl
xchg
xlat
mov
movsl
pop
imul
mov
or
icebp
cmpsl
pop
mov
push
fistpll
inc
xor
jp
das
xchg
adc
add
or
iret
dec
in
mov
adc
mov
ret
stc
loop
ss
roll
mov
bound
subl
mov
mov
push
add
in
pop
andb
data16
popf
mov
xchg
or
push
jge
xorl
cltd
xlat
stos
sti
lea
jp
or
xor
loope
mov
jnp
xchg
notb
mov
mov
lahf
andb
jb
lcall
xor
mov
js
mov
jo
or
or
and
sub
fstpl
jbe
cmp
xchg
sbb
jp
pop
loop
ss
out
fstpt
and
or
inc
or
jmp
cmp
pushf
xchg
jl
sbb
bound
addr16
adc
push
cmp
sub
enter
xor
mov
or
mov
pcmpeqb
fdivl
je
dec
adc
fcoms
pusha
add
cmpsb
push
inc
push
xor
int
mov
jecxz
idiv
bound
rolb
pusha
lods
clc
nop
icebp
repnz
lods
cmp
push
cmp
cmp
push
repz
test
out
mov
mov
cwtl
xor
sub
repnz
mov
fistl
out
fcomp
dec
jnp
push
mov
cli
lock
and
adc
gs
adcb
inc
fnstcw
add
and
jno
sarb
cmc
xchg
xchg
cld
push
mov
pushf
xor
loop
jbe
cmpsb
hlt
sbb
jmp
int3
popl
out
inc
add
jmp
lret
or
add
insl
and
les
movsb
cltd
cmc
cmp
mov
push
mov
inc
inc
ss
imul
adc
sbbb
test
pop
cmp
cmc
mov
dec
sbb
xor
cmpsl
incl
mov
and
clc
and
adc
xchg
inc
sbb
packsswb
mov
dec
jno
sub
jle
mov
jl
icebp
jecxz
test
push
cmp
jle
add
add
popl
daa
sub
adc
fwait
pop
mov
or
mov
push
shlb
inc
inc
shlb
and
and
ror
or
dec
add
outsl
mov
test
test
fwait
sbb
push
and
cs
cmp
stos
idiv
insl
mov
cmpsb
repz
xchg
pop
mov
jb
punpckhwd
or
mov
add
or
ficoms
jl
leave
jecxz
xchg
lcall
loop
mov
cmp
call
push
daa
fildl
mov
sub
movsl
leave
out
mov
pushf
and
sub
or
inc
bound
mov
xchg
sbb
movsl
les
pop
sub
or
xor
mov
jmp
xchg
ffree
cmc
push
dec
sub
push
outsl
mov
xchg
xlat
add
cmp
std
xchg
push
dec
cmp
jbe
push
cmp
xchg
out
bound
movsb
incl
xor
add
xor
js
cmp
scas
in
lret
jno
sub
push
add
fnstsw
sub
out
jne
or
stc
daa
ljmp
push
jge
insb
ret
aam
sti
jo
jo
jp
add
jecxz
mov
int
shl
pushf
fiaddl
xchg
mov
gs
outsl
inc
cld
aad
ja
je
in
notl
lds
sub
inc
stc
adc
loope
popa
outsl
nop
dec
fistpl
icebp
ljmp
sub
adc
xchg
xchg
jnp
dec
cld
in
mov
mov
mov
lcall
pop
pop
add
stos
or
cmp
out
scas
cmp
pop
jne
add
adc
fwait
inc
xchg
xlat
pop
add
and
cwtl
push
and
add
xchg
sbb
sub
fdivrl
mov
lods
jnp
pop
sbb
jge
xor
mov
cwtl
mov
push
xchg
gs
and
mov
movsl
or
cmp
call
insb
inc
sti
dec
sahf
mov
mov
mulb
in
fwait
cmp
fbstp
xchg
or
dec
jmp
jle
mov
adc
lcall
in
xor
jmp
push
jo
imul
cmpsl
pop
out
movsl
ss
movsb
sbb
sbb
inc
add
jns
fdivl
push
stc
roll
pop
push
iret
stos
jnp
sbb
sbb
or
adc
jp
pop
push
mov
inc
mov
xchg
xor
jb
xor
push
xchg
test
aaa
stc
push
jge
int
jne
test
cmp
jne
pushf
fs
jns
add
stos
sub
mov
out
mov
sahf
nop
ljmp
jns
jg
mov
jb
rclb
ja
pop
call
push
fcomip
imull
inc
push
adc
adcb
xchg
xchg
push
inc
sub
mov
mov
mov
imul
call
sub
loop
or
dec
or
mov
mov
scas
loope
sahf
mov
sbb
pop
mov
mov
xchg
insl
call
pop
mov
sub
les
and
lock
mov
pop
cmpb
xchg
xor
div
adc
mov
push
cmpsl
pop
insb
or
dec
cli
in
int
push
insb
pop
ljmp
clc
lods
jge
or
push
mov
call
or
addr16
xchg
ror
fcmovnbe
sbb
sbb
inc
adc
jmp
insb
jmp
sub
rcrl
insl
in
xchg
jg
cmpsl
pop
test
enter
push
imul
jae
xlat
scas
xor
test
pop
hlt
sbb
inc
hlt
lds
pop
popa
cli
daa
mov
add
push
ret
sub
lods
mov
xchg
jge
fimull
test
shll
push
fnstenv
out
ljmp
add
sbb
push
dec
xor
inc
mov
adc
xlat
xchg
cmp
icebp
dec
repnz
cmp
addr16
in
pop
sub
sahf
not
pushl
imul
insl
out
call
cmc
dec
pop
pop
adc
cli
mov
movsl
mov
repnz
loop
lods
push
sub
movsl
aad
push
and
xor
mov
xorb
sti
int3
and
lods
out
pop
data16
xor
sti
adc
lahf
mov
lods
pop
inc
mov
adc
cmp
lahf
pusha
lds
dec
sub
mov
mov
add
mov
rolb
pop
ret
xor
push
push
outsl
push
leave
push
adc
mov
inc
loop
add
mov
adc
jmp
repnz
test
popa
and
inc
addb
mov
xchg
add
lods
nop
stc
inc
fs
pop
dec
je
scas
scas
mov
jbe
inc
mov
imul
or
aas
test
cmpsb
out
ret
in
movsl
incb
fs
fnsave
sarb
lods
insl
push
jg
movsb
cmc
push
jmp
sahf
loope
dec
jg
movl
stos
fs
mov
or
and
push
cltd
icebp
lods
bound
mov
shl
in
sbb
jne
or
pop
sti
push
xor
lock
out
jo
add
or
in
sbb
and
lods
inc
outsb
clc
hlt
or
jl
loop
cld
sti
bound
loope
out
addr16
in
jl
in
jmp
sti
jle
pop
subl
addr16
or
add
or
jmp
test
ja
cld
stos
lret
clc
or
je
cltd
pop
or
sti
shll
cmpsb
add
jg
cmp
shlb
push
nop
inc
push
outsl
aas
loope
cltd
inc
mov
sub
mov
add
xchg
dec
into
or
nop
xchg
inc
sub
jp
cmp
out
clc
push
mov
and
aam
sub
or
mov
push
imul
inc
sbb
jns
shrl
add
jp
xchg
icebp
xlat
pushf
movsb
test
cld
movsl
dec
lock
xchg
bound
jnp
push
popa
push
mov
jne
es
lock
nop
mov
and
jae
cld
or
daa
xor
jno
dec
je
inc
decb
push
dec
mov
ja
lea
imul
cmc
test
push
aam
repnz
andb
xchg
into
jge
mov
dec
enter
gs
sub
add
std
pop
std
cmpsl
lods
mov
test
into
aas
lcall
inc
xchg
iret
int3
mov
jbe
movsl
jb
push
hlt
flds
sub
xlat
jl
jp
jo
inc
jecxz
stos
imul
mov
gs
rolb
dec
fisttpll
and
call
jmp
cld
lods
mov
out
addr16
shlb
jg
xor
push
aas
in
push
rcll
imul
xchg
scas
pop
jle
xchg
addl
xorb
mov
push
xchg
add
and
xor
cmpsl
popa
mov
div
imul
test
jmp
decb
ds
mov
out
mov
orb
mov
cmp
cli
lcall
sbb
and
test
xor
ljmp
dec
mov
mov
xchg
cmp
sub
xor
adc
inc
xchg
aad
jbe
dec
jno
sbb
sahf
dec
test
sarb
sub
popa
pop
sbb
loopne
out
shll
mov
shll
mov
lret
cld
aaa
adc
roll
pusha
mov
lcall
inc
stc
insl
into
mov
stos
pop
pop
in
jp
xlat
cmp
outsb
icebp
pop
loopne
dec
jecxz
lcall
cmp
icebp
pop
xor
cmc
std
sub
or
outsl
aad
aam
jb
mov
or
and
loopne
mov
fs
lret
mov
clc
test
enter
nop
into
pop
imul
cmp
stos
add
subl
aam
xchg
pop
pusha
frstor
jp
mov
out
inc
dec
cld
mov
push
divb
mov
dec
fwait
scas
sbb
adc
sar
or
adc
ljmp
fs
mov
stos
imull
loop
inc
fdivrs
mov
jne
jg
iret
movsb
out
aas
push
fsub
dec
ficoms
pop
les
sbb
jns
pop
test
pop
popf
sbb
sbb
pop
push
jge
sub
xor
addr16
ja
aaa
lods
je
inc
push
inc
adc
test
adc
xor
push
in
cmc
mov
pop
pushf
imul
xchg
out
jecxz
es
adc
and
xchg
cld
pop
negb
mov
jae
out
inc
jb
sub
inc
shll
push
jb
push
fstpl
arpl
repz
call
push
dec
jg,pn
lods
test
ljmp
push
push
pop
adc
cld
push
cmp
push
jle
lods
dec
pop
push
shrb
movsb
jb
mov
jp
lds
shlb
clc
xchg
mov
and
or
adc
or
repz
inc
or
in
mov
fisttpll
cmp
mov
call
movsb
sbb
bound
lcall
pop
sbb
jne
sub
fiaddl
sub
inc
add
xchg
sarl
andl
adc
daa
cmp
gs
imul
push
dec
lea
popa
pop
jb
xor
dec
mov
lea
divb
mov
xor
add
enter
or
mov
daa
ret
bound
jae
add
dec
scas
fimuls
push
mov
pop
subl
cs
repz
cmp
push
cmp
pop
ljmp
push
cmp
or
pop
xchg
test
rcl
mov
mov
stos
andl
cmp
in
in
cs
mov
xorb
jb
mov
movsb
cmp
jb
jle
lahf
fcomps
xchg
fcomps
sbb
cmp
imul
in
outsl
in
pop
sbb
add
int3
jne
jg
fnstsw
outsl
fs
lret
mov
or
jmp
jmp
mov
jns
sar
sbb
sahf
mov
repz
mov
jl
and
pop
iret
aam
cmp
test
lods
push
mov
ljmp
mov
repz
mov
ss
push
jge
out
sbb
adc
andl
mov
clc
les
mov
fwait
cs
ljmp
fcoms
fnstsw
lret
rcr
push
adc
bound
insb
push
adc
arpl
push
inc
lret
push
insl
stos
jmp
inc
nop
aas
add
and
fimull
mov
repz
rcrl
shrb
out
inc
sbb
and
jne
test
mov
ret
mov
ds
add
scas
sbb
jns
jle
and
and
clc
addl
mov
and
jbe
sub
fimuls
leave
xchg
imul
or
lods
xchg
push
ds
outsl
mov
dec
mov
dec
or
mov
inc
pop
dec
sbb
fidivrl
cmp
lods
ljmp
cld
dec
pop
cltd
jmp
mov
into
mov
insl
inc
pop
adc
mov
adc
and
add
xor
in
jbe
icebp
test
sti
adc
lods
in
imul
rclb
and
js
add
popf
stos
push
jno
rolb
in
jbe
xchg
adc
sub
inc
enter
sahf
cmp
out
dec
aas
lea
std
frstor
sbb
cmp
pop
jnp
test
popf
lods
push
ljmp
ja
pop
lods
test
movsl
je
pop
push
repz
mov
dec
pushf
jb
jmp
repnz
and
xor
cs
inc
pop
in
add
aas
test
dec
out
add
sarb
add
mov
bound
adc
inc
mov
outsb
pop
out
add
in
or
pop
mov
rorb
pop
jmp
mov
xchg
cmpsb
dec
addb
outsl
xchg
les
mov
mov
jne
ds
ds
insl
dec
dec
daa
dec
sub
inc
inc
fnstenv
out
sahf
mov
add
ljmp
mov
sti
xchg
push
int
inc
xchg
push
in
rorb
xacquire
into
or
xchg
mov
and
mov
std
xchg
filds
mov
lahf
adc
add
mov
mov
mov
push
cmp
imul
in
jne
dec
pop
mov
mov
pop
push
movsl
sarl
gs
jecxz
bound
faddl
push
mov
sub
call
mov
dec
daa
lcallw
lods
cli
add
mov
data16
je,pt
xor
test
jl
adc
jae
sahf
adc
jae
dec
ret
sub
lods
pop
add
cli
xchg
jne
or
test
mov
or
or
out
insl
adc
push
or
cmpsb
mov
or
mov
push
sahf
inc
mov
add
in
jge
dec
movsl
cmc
inc
jg
aam
fidivl
push
imul
jb
aad
jno
mov
mov
adc
xorb
add
idivl
psubsb
arpl
sub
mov
jno
fucom
push
pop
in
xchg
xor
lock
cli
add
iretw
add
andb
inc
icebp
testl
out
or
ds
cltd
repnz
out
mov
sbb
sbb
dec
and
negl
pop
or
gs
mov
and
push
negl
sub
test
leave
sarl
pop
mov
push
pop
aad
adc
mov
leave
shrb
stos
and
in
pop
in
lods
xchg
sbb
test
jecxz
sbb
cmp
stos
xlat
cmp
xchg
jns
add
pop
and
imul
xchg
xchg
push
sbb
push
aad
std
pop
lods
enter
or
loope
ja
testl
pop
push
add
data16
adc
jmp
and
fnstsw
xchg
push
lods
mov
mov
or
insl
adc
lahf
outsb
sbb
sub
pop
mov
or
mov
icebp
movsl
in
and
pop
jmp
inc
dec
dec
cmp
ljmp
std
rcrl
mov
mov
cmpl
pop
or
cli
cmp
fcmovnbe
xor
gs
call
imul
std
and
gs
jg
mov
test
leave
pop
outsl
inc
lds
bound
jno
daa
ret
xor
je
adc
test
sub
test
inc
ss
and
callw
or
inc
testb
cmc
or
stc
imul
shrb
leave
and
out
sbb
dec
cmp
ret
pop
mov
js
and
decl
dec
rcr
jg
in
push
popa
mov
in
notb
jl
mov
inc
cmp
and
sbb
cmp
xchg
jo
pop
add
sub
mov
mov
or
add
lret
fs
xchg
loop
cld
push
push
ss
shll
adc
push
scas
push
cld
popa
ja
adc
addl
in
sub
ret
jo
jae
pop
iret
jb
add
ljmp
data16
push
xchg
sub
fs
cld
test
aam
or
outsb
cwtl
jl
loop
jmp
mov
mov
cmc
mov
jl
add
cmp
ret
xchg
popa
dec
clc
pop
xchg
jmp
das
sbbl
jbe
mov
std
and
mov
xchg
test
stos
in
stos
sub
jb
lcall
mov
jne
aad
rolb
or
in
xchg
inc
and
insb
clc
mov
adc
fisttpll
dec
xchg
or
mov
lret
cmpsl
xchg
addl
push
pusha
je
lods
push
pop
adc
and
or
inc
nop
movsl
addr16
push
int
mov
sarl
sbbb
test
and
or
pop
add
stos
jns
mov
orl
sub
and
mov
nop
jbe
ja
push
mov
and
loope
sub
sub
mov
sub
loope
cmp
or
push
xlat
mov
and
out
mov
outsl
dec
call
jae
jbe
inc
sbb
push
rcll
or
in
mov
dec
mov
add
xchg
adc
lock
push
jne
jg
push
fisttpl
lahf
add
and
xchg
mov
push
je
jo
sahf
xchg
jecxz
movsl
mov
imul
test
cmpsb
notl
lods
lods
jl
movsl
and
inc
dec
pop
lods
cld
imul
cmpsb
fs
mov
dec
sbb
std
jno
pop
push
gs
in
mov
cmp
into
cmpsb
sub
lcall
mov
sti
add
lahf
and
sbb
aaa
xor
push
icebp
mov
add
fisubrs
aad
stos
pop
dec
lods
and
mov
push
sbb
pop
sahf
dec
stos
inc
movsb
jl
jnp
cmp
cmp
lcall
cmp
or
cmpsb
adc
std
stos
lahf
test
cmpsl
and
aaa
mov
push
jg
sbb
je
test
xchg
fistps
inc
cmp
test
push
jp
not
imul
repz
sbb
cmpsl
orl
js
ljmp
cmpsl
gs
xchg
adc
popf
push
cld
ret
mov
call
div
ret
test
jne
mov
push
mov
xor
ds
sbb
jecxz
sub
cs
es
cs
fwait
or
clc
hlt
or
loopne
xlat
pop
mov
jae
repnz
lock
sub
mov
xor
es
es
xor
or
push
lahf
and
adc
pushf
cmp
jnp
and
sub
mov
inc
mov
cmp
xor
xorl
push
fisubl
xchg
adc
jg
jl
sub
lods
cli
sub
mov
fbld
ds
adc
jle
push
test
stos
xchg
mov
addr16
test
xchg
pop
add
cmp
or
leave
add
add
arpl
aad
mov
jmp
jecxz
or
filds
addl
and
xor
incl
in
inc
rcl
mov
iret
inc
hlt
mov
jp
jae
cmp
sub
mov
sbb
jo
sti
sbb
or
test
fwait
inc
mov
xor
or
sub
add
sbb
mov
cwtl
mov
pop
inc
cmpsl
mov
jnp
jp
and
xlat
mov
les
adc
mov
mov
aaa
cmc
aad
mov
repnz
popf
mov
idivb
imul
loop
adc
and
add
lahf
mov
pop
mov
clc
sbb
or
mull
mov
or
nop
fistpll
pop
mov
push
popa
loope
fbstp
sub
mov
cli
push
sbb
imul
out
xor
psrad
xchg
add
inc
sbb
repnz
pop
in
mov
cmp
or
mov
sub
mov
out
orb
fisttpl
cli
jnp
mov
lea
mov
or
repz
in
add
and
test
pop
push
push
pusha
add
push
mov
push
jmp
mov
and
pushf
test
test
gs
mov
add
insb
xchg
or
inc
inc
and
mov
cmp
in
pop
bound
jmp
scas
call
adcb
and
iret
jecxz
jb
dec
callw
call
push
xor
inc
pop
call
sub
push
push
mov
mov
cmp
bound
xor
test
andl
jle
stc
sub
int3
adc
mov
inc
xlat
insl
aaa
push
add
jne
xchg
xor
jmp
jge
cmp
sub
adcl
push
sub
mov
and
pop
xor
and
es
hlt
dec
data16
test
bound
pusha
data16
sub
mov
adc
scas
jae
and
or
call
outsl
jmp
push
mov
aas
sub
xor
cli
int3
adc
xor
loope
psubusw
sub
in
pushf
xchg
sub
jmp
mov
push
jle
test
dec
pop
stos
fdivrp
dec
pop
pushw
ffree
sbb
inc
addb
popf
aad
pop
repz
das
mov
sbb
lods
clc
sti
rcll
or
push
test
xor
je
fs
mov
cmp
xor
dec
in
sti
fyl2xp1
inc
or
lods
push
xchg
ja
mov
add
sub
adc
inc
ret
pop
test
mov
gs
lcall
add
jb
sub
mov
or
mov
cld
pop
or
xor
out
cs
add
pop
xor
cmc
das
push
mov
hlt
jae
ja
add
inc
fnstcw
and
cmp
mov
std
jbe
aam
xchg
dec
stos
das
daa
or
or
imul
std
lret
jno
or
ja
mov
cmpsl
mov
push
pop
inc
cld
xchg
cmpsl
pop
adc
mov
push
cwtl
mov
xor
jecxz
inc
movsb
sub
pushw
push
xor
inc
outsl
pushf
push
xchg
in
mov
mov
outsb
ficomps
xchg
bnd
push
and
add
push
lods
mov
mov
jbe
jb
or
xor
cmp
sbbl
popa
jb
adc
cmp
ret
repz
and
mov
lret
and
je
addr16
mov
xor
pop
fiadds
imul
mov
nop
xor
push
bound
gs
loopne
mov
jg
xchg
or
add
mov
dec
iret
out
nop
movsb
mov
pop
imul
cmp
imul
pushf
cli
mov
ljmp
adcb
sbb
or
xchg
cli
aas
mov
jne
pusha
dec
rorl
inc
adc
cs
in
inc
jp
push
lret
xlat
sbb
dec
lock
imul
add
aam
dec
sarl
mov
xchg
insl
rcr
rcll
lret
clc
inc
adc
add
in
mov
pusha
cld
cmpsb
sbb
rolb
je
cmpb
or
xchg
xchg
clc
and
inc
leave
fwait
pop
pop
lock
repnz
movl
ds
mov
xchg
cmp
xchg
inc
cmp
or
sub
xchg
jmp
ljmp
je
insl
sbb
outsb
inc
std
sub
push
div
imul
rorb
sbb
hlt
jle
arpl
push
mov
insb
inc
mov
and
or
in
dec
leave
stos
lods
icebp
jl
scas
mov
or
push
xchg
rorw
lea
repnz
xchg
outsl
call
dec
inc
stos
add
decb
outsl
mull
mov
adc
lods
bound
repz
loop
inc
movsl
mov
inc
lret
xchg
bnd
inc
inc
xor
daa
mov
or
test
js
sub
mov
xlat
add
sbb
or
xchg
es
mov
mov
sbb
rol
inc
push
sbb
repz
lock
mov
mov
insl
cmp
lds
ror
cmp
cmpsb
push
mov
jg
sub
outsl
das
mov
pushf
icebp
outsl
cwtl
sub
fld1
adc
shll
and
leave
fisttpl
clc
xchg
sahf
mov
les
shrb
out
mov
out
fcmovnu
gs
leave
sbb
mov
ficomps
and
test
daa
sbb
das
bound
jg
leave
and
sbb
lock
movsb
add
icebp
jns
insb
pop
adc
test
js
or
cmp
hlt
cld
push
cmp
push
inc
dec
jg
fs
fwait
gs
test
daa
in
add
aas
mov
sub
mov
repnz
cli
jae
lahf
jge
jge
pop
mov
cltd
in
mov
push
or
xchg
clc
rcll
cmc
scas
jae
mov
dec
test
movsl
push
ss
out
push
outsb
add
xchg
pusha
add
aaa
or
ret
cld
roll
dec
pop
add
pop
cs
or
imul
sub
lcall
lahf
lret
adc
pop
dec
cmp
sub
jecxz
mov
fstpt
and
cmp
dec
pop
minps
mov
inc
xorb
sti
pop
out
and
int
sbb
sbb
jl
mov
es
sbb
xor
add
aam
ss
loop
sbb
rcl
add
mov
dec
sbb
mov
or
add
jae
xor
cwtl
mov
popf
fs
mov
push
push
sar
push
icebp
dec
cmp
inc
call
xor
jo
andl
not
xor
mov
or
fwait
aas
ja
add
xchg
or
fisttpl
sbb
clc
loopne
mulb
stos
aas
call
lret
call
data16
test
ret
stos
sbb
ror
inc
fwait
xor
out
pop
std
mov
lahf
adc
inc
test
mov
cmp
movsb
outsl
ljmp
iret
xlat
mov
mov
sti
sub
and
adc
rcll
loope
sbb
jo
popa
push
in
pushw
mov
orl
sub
push
ret
shll
imul
push
mov
lcall
rcr
sub
xchg
xchg
sub
jmp
pop
out
dec
push
mov
inc
add
push
mov
sub
push
call
mov
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
rep
inc
cmp
jne
pop
pop
pop
mov
pop
ret
and
rolb
in
add
push
push
call
mov
push
push
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
test
je
push
call
mov
push
call
mov
push
pushl
call
mov
push
call
cmp
jne
cmp
jne
push
call
cmp
je
mov
push
call
push
call
cmp
je
push
call
push
call
push
call
mov
lea
push
push
push
call
add
mov
mov
push
call
mov
mov
mov
push
call
mov
subl
push
call
and
je
push
call
addl
push
call
mov
push
call
mov
call
mov
movl
push
call
pushl
push
call
cmp
je
mov
push
call
mov
pushl
push
call
mov
shrl
pushl
call
addl
call
test
adc
sub
add
adc
xor
or
add
mov
push
push
push
mov
mov
cmpl
je
decl
xor
add
rorl
addl
add
jmp
pop
pop
pop
mov
pop
ret
add
adc
xor
or
and
popa
add
add
test
add
test
add
add
add
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
ss
add
pusha
test
add
mov
add
movsb
test
add
ret
add
test
add
repnz
add
or
add
sbb
add
cmp
add
pusha
stos
add
jo
add
subb
add
stos
add
mov
stos
add
fsubrl
add
hlt
stos
add
or
add
and
add
dec
stos
add
pop
stos
add
fs
add
jbe
add
xchg
add
test
add
mov
stos
add
fsubrs
add
or
add
lods
add
lods
add
dec
lods
add
bound
add
add
xchg
add
lods
add
fisubrs
add
lods
add
adc
add
lods
add
push
lods
add
pop
lods
add
outsb
lods
add
jbe
add
mov
add
mov
lods
add
fsubrl
add
cld
lods
add
push
scas
add
and
add
inc
scas
add
pop
scas
add
jbe
add
subb
add
scas
add
les
add
loopne
add
repnz
add
add
add
sbb
add
push
scas
add
fs
add
jb
add
subb
add
scas
add
lret
add
scas
add
cli
scas
add
push
mov
add
add
xor
add
dec
mov
add
add
jbe
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jle
add
cwtl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
push
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
ss
add
add
add
add
add
add
xorb
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
add
push
mov
add
add
add
add
js
add
add
add
lcall
add
add
add
movsl
add
adc
add
movsl
add
sub
add
test
add
add
add
lods
mov
add
mov
add
ds
add
mov
add
aam
add
sbb
add
in
add
adc
add
sub
add
in
cmpsl
add
ss
add
add
cld
cmpsl
add
outsb
mov
add
add
add
mov
add
add
sub
add
dec
test
add
add
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
ss
add
pusha
test
add
mov
add
movsb
test
add
ret
add
test
add
repnz
add
or
add
sbb
add
cmp
add
pusha
stos
add
jo
add
subb
add
stos
add
mov
stos
add
fsubrl
add
hlt
stos
add
or
add
and
add
dec
stos
add
pop
stos
add
fs
add
jbe
add
xchg
add
test
add
mov
stos
add
fsubrs
add
or
add
lods
add
lods
add
dec
lods
add
bound
add
add
xchg
add
lods
add
fisubrs
add
lods
add
adc
add
lods
add
push
lods
add
pop
lods
add
outsb
lods
add
jbe
add
mov
add
mov
lods
add
fsubrl
add
cld
lods
add
push
scas
add
and
add
inc
scas
add
pop
scas
add
jbe
add
subb
add
scas
add
les
add
loopne
add
repnz
add
add
add
sbb
add
push
scas
add
fs
add
jb
add
subb
add
scas
add
lret
add
scas
add
cli
scas
add
push
mov
add
add
xor
add
dec
mov
add
add
jbe
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jle
add
cwtl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
push
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
ss
add
add
add
add
add
add
xorb
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
add
push
mov
add
add
add
add
js
add
add
add
lcall
add
add
add
inc
push
xor
cs
dec
dec
add
add
inc
imul
add
add
inc
gs
jns
je
insl
dec
gs
imul
inc
push
jo
jb
add
add
dec
gs
popa
addr16
outsl
js
add
add
fs
jne
jae
jb
add
add
je
jne
jae
jb
outsl
jae
add
add
je
imul
outsb
add
add
ja
jo
imul
add
push
imul
outsl
arpl
add
add
ja
fs
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
gs
imul
js
inc
add
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
add
push
outsb
jb
imul
popa
jae
inc
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
push
imul
outsl
outsl
imul
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
gs
outsl
outsb
jae
insb
gs
push
add
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
jo
outsb
inc
jbe
outsb
je
add
add
push
imul
jb
add
add
gs
je
inc
imul
gs
gs
imul
add
inc
js
je
jb
arpl
jae
add
push
outsb
insl
popa
jo
imul
insb
add
add
jae
insl
gs
push
add
add
dec
jo
outsb
dec
jne
gs
add
add
push
insb
jae
insb
insb
outsl
arpl
add
add
je
je
dec
popa
outsb
fs
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
popa
jo
je
imul
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
je
dec
popa
outsb
fs
add
add
push
jne
jb
inc
outsl
jae
gs
arpl
add
add
jo
imul
insb
add
add
gs
je
inc
jbe
outsb
je
add
add
dec
gs
jo
imul
insb
jae
jb
outsb
push
add
add
inc
outsl
jo
inc
imul
gs
outsl
fs
gs
imul
add
add
inc
imul
add
add
je
push
dec
outsb
outsw
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jns
je
insl
inc
imul
jns
add
add
je
push
push
jb
outsl
jb
je
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
imul
insb
gs
add
add
jb
outsb
inc
add
add
push
gs
imul
gs
add
add
imul
insb
gs
add
add
jb
insl
jo
inc
add
add
je
imul
bound
gs
add
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
push
imul
insb
insb
outsl
arpl
add
add
gs
push
imul
jne
push
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
jb
popa
je
dec
jne
gs
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
push
gs
imul
outsl
arpl
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
inc
push
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
push
gs
popa
insb
jne
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
jb
jo
inc
add
add
inc
gs
jne
jb
outsb
je
imul
jns
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
jns
je
insl
push
imul
insb
gs
imul
jae
jb
insl
jo
add
add
push
popa
imul
jo
imul
push
insb
gs
add
inc
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
imul
gs
arpl
add
add
push
gs
outsb
fs
inc
imul
outsl
insl
jo
jb
push
je
imul
add
popa
jo
je
imul
add
outsb
fs
gs
inc
imul
jae
popa
insb
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
jb
gs
imul
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
inc
gs
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
add
inc
outsl
jo
inc
imul
jb
popa
je
inc
imul
gs
gs
jo
popa
je
inc
add
add
push
gs
gs
jae
dec
jne
gs
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
insb
jae
jb
add
add
jb
popa
je
gs
popa
addr16
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
gs
jo
jb
popa
je
add
add
inc
js
je
push
add
add
insb
jae
jb
popa
je
add
add
push
gs
jb
outsl
jb
outsl
fs
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
inc
outsl
insl
jo
jb
push
je
imul
add
popa
jo
gs
insb
insb
outsl
arpl
add
push
jne
jae
inc
jbe
outsb
je
add
add
inc
gs
popa
insb
jne
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
imul
outsb
addr16
add
add
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
add
push
gs
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
push
popa
imul
insb
gs
bound
arpl
add
je
imul
add
inc
gs
jns
je
insl
push
imul
je
push
outsb
ja
outsb
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
popa
jo
jb
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
jb
je
inc
imul
gs
je
push
imul
jne
push
imul
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
gs
je
inc
imul
jns
add
add
push
gs
fs
imul
gs
imul
je
add
add
push
gs
js
gs
imul
gs
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
gs
je
push
jb
arpl
jae
add
add
inc
imul
inc
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
inc
jb
popa
je
push
push
add
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
outsb
fs
imul
gs
add
add
inc
imul
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
imul
add
add
inc
gs
gs
inc
imul
imul
outsl
dec
jne
je
inc
jns
add
add
imul
outsl
jne
arpl
add
add
je
je
imul
inc
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
imul
bound
gs
add
add
inc
gs
imul
add
push
gs
jbe
outsb
je
add
add
je
je
imul
push
add
add
inc
insb
jne
push
inc
jne
data16
add
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
inc
push
push
cs
dec
dec
add
add
pop
popa
insl
jae
pop
gs
je
add
add
outsl
outsb
je
outsl
insb
data16
add
add
addr16
popa
imul
add
pop
inc
js
push
push
js
gs
imul
pop
jo
jb
arpl
insb
add
add
outsb
imul
add
aas
xor
inc
push
inc
pop
dec
inc
pop
add
add
pop
gs
outsb
outsl
add
add
pop
jne
insb
outsl
arpl
add
pop
gs
je
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
gs
popa
insb
jne
inc
js
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
insb
outsl
jae
dec
gs
add
push
gs
jo
outsb
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
inc
xor
cs
dec
dec
add
add
push
outsb
imul
imul
inc
outsl
dec
outsb
imul
add
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
dec
dec
dec
inc
push
cs
dec
dec
add
add
je
jb
gs
gs
jo
imul
push
xor
xor
inc
dec
dec
add
add
addr16
fs
outsb
outsw
add
add
inc
push
outsl
arpl
je
add
add
data16
gs
fs
outsb
outsw
add
inc
inc
dec
push
dec
cs
dec
dec
add
add
gs
je
push
arpl
imul
add
inc
dec
dec
xor
cs
dec
dec
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
inc
gs
outsl
insb
fs
popa
je
inc
