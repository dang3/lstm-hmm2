movsb
mov
loopne
outsl
movsl
loopne
cld
mov
loopne
bound
mov
mov
loopne
aas
cmpsl
loopne
out
loopne
sbb
loopne
cmp
loopne
or
loopne
cltd
test
mov
movsb
loopne
push
cmpsl
loopne
shlb
loopne
ret
mov
movsl
loopne
shlb
mov
movsl
loopne
dec
mov
loopne
dec
test
mov
mov
loopne
adc
loopne
lret
movsb
loopne
movsl
loopne
shlb
loopne
out
loopne
into
test
mov
mov
loopne
cmp
loopne
push
test
mov
movsl
loopne
insb
cmpsl
loopne
adc
mov
movsl
loopne
insl
cmpsl
loopne
pop
test
loopne
jno
loopne
jo
loopne
in
mov
loopne
dec
cmpsb
loopne
xor
loopne
loop
loopne
cwtl
mov
loopne
mov
loopne
jle
loopne
das
test
mov
mov
loopne
pop
test
mov
mov
loopne
xchg
loopne
jno
loopne
mov
loopne
stos
mov
loopne
loopne
loopne
xchg
movsl
loopne
lods
mov
loopne
lds
loopne
push
mov
loopne
mov
loopne
cmp
loopne
and
mov
movsb
loopne
pop
mov
loopne
dec
test
mov
mov
loopne
aas
movsl
loopne
cmpsl
loopne
or
loopne
arpl
loopne
ja
loopne
out
loopne
jmp
mov
loopne
popf
mov
loopne
add
loopne
mov
mov
mov
loopne
jp
loopne
push
cmpsb
loopne
mulb
loopne
movsl
mov
loopne
jno
loopne
shlb
loopne
adc
loopne
sbb
loopne
mov
movsl
loopne
stos
test
mov
mov
loopne
pop
cmpsb
loopne
xchg
mov
loopne
dec
mov
loopne
cmp
mov
test
mov
mov
loopne
xchg
mov
loopne
cmp
loopne
out
movsb
loopne
mov
loopne
iret
cmpsl
loopne
mov
loopne
adc
loopne
ret
movsl
loopne
movsw
loopne
fldenv
loopne
test
loopne
out
mov
loopne
call
mov
loopne
dec
test
loopne
andl
mov
cmpsl
loopne
mov
mov
test
mov
mov
loopne
sub
loopne
lods
mov
loopne
push
movsl
loopne
xchg
mov
loopne
jnp
loopne
cwtl
mov
loopne
outsb
movsl
loopne
inc
mov
loopne
mov
movsb
loopne
and
loopne
fsubs
mov
test
mov
movsl
loopne
cwtl
test
mov
mov
loopne
ret
mov
loopne
add
mov
loopne
pop
cmpsl
loopne
xchg
cmpsb
loopne
cmp
mov
test
mov
mov
loopne
cmp
loopne
mov
loopne
stc
cmpsl
loopne
mov
loopne
popf
mov
loopne
fisubs
loopne
add
loopne
mov
loopne
xchg
mov
test
mov
cmpsl
loopne
push
movsl
loopne
shll
mov
test
mov
cmpsb
loopne
cwtl
mov
loopne
cmpsb
movsb
loopne
or
loopne
dec
movsb
loopne
shlb
mov
mov
loopne
daa
cmpsl
loopne
shll
loopne
aaa
mov
loopne
cltd
mov
loopne
mov
loopne
mov
loopne
sub
loopne
add
loopne
or
loopne
cmpsl
mov
loopne
scas
test
mov
cmpsl
loopne
fwait
mov
loopne
movsl
loopne
cltd
mov
loopne
sbb
loopne
pushf
mov
loopne
or
loopne
ja
loopne
sub
loopne
add
loopne
clc
movsl
loopne
inc
movsb
loopne
and
loopne
pop
cmpsl
loopne
andb
mov
mov
loopne
fsubs
mov
movsl
loopne
jecxz
loopne
popf
mov
loopne
and
loopne
jns
loopne
test
loopne
test
loopne
lods
mov
loopne
andl
mov
mov
loopne
push
movsl
loopne
pop
mov
loopne
push
cmpsl
loopne
sti
test
mov
mov
loopne
inc
mov
loopne
cpuid
loopne
xor
mov
cmpsl
loopne
mov
loopne
stc
mov
loopne
fsubl
loopne
cltd
mov
loopne
data16
mov
cmpsl
loopne
les
loopne
int3
test
mov
movsl
loopne
cmpsb
loopne
insb
test
mov
mov
loopne
jge
loopne
outsl
mov
loopne
cmc
test
mov
mov
loopne
repnz
loopne
out
loopne
dec
test
mov
test
mov
mov
loopne
jmp
mov
loopne
sub
loopne
pop
mov
loopne
movsb
loopne
sub
loopne
jno
loopne
and
loopne
jo
loopne
push
movsb
loopne
inc
movsb
loopne
pusha
cmpsl
loopne
mov
loopne
inc
test
loopne
frstor
mov
movsl
loopne
dec
test
loopne
xor
loopne
sbb
cmpsl
loopne
xchg
movsb
loopne
lods
cmpsb
loopne
cmp
loopne
test
cmpsb
loopne
inc
movsl
loopne
xchg
movsb
loopne
mov
cmpsl
loopne
cltd
mov
loopne
test
mov
mov
loopne
or
test
mov
test
loopne
popa
cmpsb
loopne
bound
mov
mov
loopne
sub
loopne
mov
cmpsl
loopne
add
loopne
andb
mov
mov
loopne
jmp
loopne
bound
loopne
stc
movsb
loopne
sbb
loopne
repnz
loopne
das
cmpsb
loopne
stos
cmpsb
loopne
repnz
loopne
das
movsl
loopne
push
mov
loopne
sbb
cmpsb
loopne
mov
movsb
loopne
pop
mov
loopne
pop
movsb
loopne
add
mov
cmpsl
loopne
mov
loopne
cmc
movsb
loopne
movsb
loopne
push
movsb
loopne
mov
mov
loopne
mov
mov
loopne
sbb
mov
loopne
jmp
loopne
xor
loopne
jp
loopne
fsubl
loopne
add
loopne
test
loopne
aaa
test
mov
mov
loopne
dec
mov
loopne
xor
loopne
jnp
loopne
movsb
test
mov
mov
loopne
pop
test
mov
cmpsl
loopne
movsb
loopne
cmpsb
mov
loopne
mov
loopne
stos
mov
loopne
jbe
loopne
lds
mov
cmpsl
loopne
ljmp
mov
cmpsb
loopne
mov
loopne
in
loopne
stos
mov
loopne
jbe
loopne
pop
cmpsl
loopne
cld
cmpsl
loopne
cmpsl
loopne
mov
loopne
adc
loopne
repnz
loopne
mov
loopne
and
loopne
jmp
loopne
dec
movsb
loopne
into
movsl
loopne
adc
loopne
or
mov
loopne
int3
movsl
loopne
xor
loopne
jb
loopne
mov
mov
loopne
mov
loopne
cmpsb
test
mov
mov
loopne
sub
loopne
lea
loopne
sub
loopne
add
loopne
mov
mov
loopne
test
loopne
push
loopne
scas
test
mov
mov
loopne
cmp
loopne
popf
test
mov
cmpsl
loopne
out
loopne
xchg
movsb
loopne
les
loopne
popf
cmpsl
loopne
inc
mov
loopne
ret
movsl
loopne
shll
loopne
mov
cmpsb
loopne
jno
loopne
test
mov
cmpsb
loopne
aam
loopne
xor
loopne
cmp
loopne
inc
test
mov
test
mov
cmpsb
loopne
push
test
mov
movsb
loopne
fs
mov
movsb
loopne
add
loopne
jns
loopne
jb
loopne
sub
loopne
mov
loopne
add
loopne
repnz
loopne
daa
test
mov
test
mov
cmpsb
loopne
cmpsl
loopne
xor
cmpsb
loopne
lods
movsb
loopne
xchg
mov
movsb
loopne
leave
mov
loopne
lods
cmpsb
loopne
popa
cmpsb
loopne
cli
movsb
loopne
ret
mov
movsb
loopne
xchg
mov
loopne
cmp
loopne
mov
movsl
loopne
fbld
loopne
frstor
mov
cmpsl
loopne
cmpsl
mov
loopne
leave
mov
loopne
jae
loopne
xchg
mov
movsb
loopne
sti
mov
loopne
push
cmpsb
loopne
stc
mov
loopne
lret
movsl
loopne
add
loopne
sub
mov
loopne
push
test
loopne
out
loopne
mov
test
mov
test
loopne
pop
mov
loopne
mov
cmpsl
loopne
sub
loopne
out
loopne
movsb
mov
loopne
jmp
mov
test
mov
mov
loopne
int3
mov
loopne
imull
loopne
fsubs
loopne
mov
loopne
inc
cmpsl
loopne
adc
loopne
cmp
loopne
outsb
cmpsl
loopne
pop
test
mov
movsb
loopne
mov
test
loopne
inc
test
loopne
xor
loopne
jle
loopne
icebp
test
mov
mov
loopne
lret
mov
cmpsl
loopne
jmp
cmpsl
loopne
in
loopne
mov
movsb
loopne
insl
movsl
loopne
leave
movsb
loopne
add
loopne
dec
movsl
loopne
in
loopne
fisubl
mov
mov
loopne
gs
mov
movsb
loopne
mov
cmpsl
loopne
xchg
movsb
loopne
mov
loopne
out
movsb
loopne
loopne
scas
mov
loopne
inc
test
mov
movsb
loopne
dec
cmpsl
loopne
xchg
mov
loopne
fisubl
loopne
movsl
mov
loopne
loopne
loopne
adc
loopne
pop
cmpsb
loopne
or
loopne
imul
loopne
cltd
cmpsb
loopne
pusha
mov
loopne
pop
movsb
loopne
bound
mov
test
mov
mov
loopne
or
loopne
mov
loopne
jb
loopne
mov
loopne
in
test
mov
test
mov
cmpsb
loopne
cmpsl
loopne
and
loopne
add
loopne
sbb
movsb
loopne
test
loopne
outsb
mov
loopne
jnp
loopne
adc
loopne
sbb
loopne
add
loopne
mov
loopne
pusha
test
mov
mov
loopne
xchg
mov
loopne
loope
loopne
add
loopne
shll
jmp
loopne
enter
ret
mov
loopne
ret
mov
mov
loopne
js
loopne
aas
cmpsl
loopne
mov
loopne
add
loopne
pop
movsl
loopne
sub
loopne
adc
loopne
test
loopne
mov
loopne
push
movsl
loopne
mov
cmpsb
loopne
sbb
loopne
inc
mov
loopne
pushf
movsl
loopne
scas
mov
loopne
cs
mov
movsb
loopne
adc
loopne
dec
test
mov
mov
loopne
adc
loopne
pop
movsl
loopne
das
mov
loopne
jbe
loopne
sub
loopne
push
cmpsl
loopne
pushf
cmpsl
loopne
test
loopne
repnz
loopne
test
loopne
and
movsl
loopne
sub
loopne
dec
cmpsb
loopne
xor
cmpsb
loopne
dec
cmpsb
loopne
lret
mov
loopne
mov
mov
loopne
pop
movsb
loopne
mov
loopne
add
loopne
sub
loopne
push
cmpsb
loopne
sub
loopne
int
loopne
loope
loopne
push
cmpsb
loopne
cmp
loopne
xor
loopne
adc
mov
movsb
loopne
adc
loopne
hlt
mov
loopne
push
test
loopne
jp
loopne
adc
mov
cmpsb
loopne
pop
mov
loopne
push
test
loopne
mov
loopne
xor
loopne
pop
mov
loopne
loope
loopne
cltd
mov
loopne
scas
cmpsb
loopne
cmp
loopne
sub
loopne
test
cmpsb
loopne
stos
movsl
loopne
mov
mov
loopne
mulb
loopne
adc
mov
loopne
loop
loopne
clc
movsb
loopne
mov
loopne
cmp
loopne
push
movsl
loopne
cmp
loopne
xor
loopne
in
loopne
cmp
loopne
loop
loopne
mov
loopne
xor
mov
cmpsl
loopne
aad
loopne
insl
movsl
loopne
mov
test
mov
movsl
loopne
and
loopne
lods
cmpsb
loopne
mov
loopne
ret
mov
test
loopne
or
loopne
push
cmpsb
loopne
jle
loopne
das
movsb
loopne
inc
cmpsb
loopne
jle
loopne
xchg
mov
loopne
and
loopne
jp
loopne
in
cmpsl
loopne
outsl
movsb
loopne
dec
mov
loopne
frstor
mov
mov
loopne
pop
mov
loopne
cmpsl
loopne
out
movsb
loopne
movsl
loopne
xchg
loopne
pop
test
mov
mov
loopne
loop
loopne
outsl
mov
loopne
shll
loopne
dec
mov
loopne
cmpsb
mov
loopne
out
movsl
loopne
lea
loopne
aaa
test
mov
cmpsl
loopne
jns
loopne
cmpsl
mov
loopne
sub
mov
loopne
imulb
loopne
add
loopne
sbb
loopne
adc
loopne
mov
mov
loopne
or
loopne
in
loopne
leave
mov
loopne
aam
loopne
shll
loopne
jecxz
loopne
xchg
mov
loopne
andl
loopne
mov
loopne
icebp
cmpsl
loopne
fisubl
loopne
push
mov
loopne
aam
loopne
dec
mov
loopne
jmp
loopne
arpl
loopne
fsubs
loopne
stos
movsl
loopne
xchg
cmpsb
loopne
sbb
loopne
jmp
mov
loopne
xor
loopne
xor
loopne
pusha
movsl
loopne
stc
cmpsb
loopne
mov
loopne
pop
mov
loopne
pusha
mov
loopne
inc
test
mov
cmpsb
loopne
je
loopne
inc
movsb
loopne
cmp
loopne
and
loopne
sub
loopne
scas
test
mov
movsb
loopne
bound
loopne
xchg
loopne
mov
loopne
jo
loopne
aad
loopne
js
loopne
lea
loopne
andb
mov
movsl
loopne
xchg
loopne
outsl
mov
loopne
andl
mov
mov
loopne
pusha
mov
loopne
xor
loopne
pop
movsb
loopne
sub
loopne
jo
loopne
shll
loopne
xor
loopne
mov
loopne
cmp
loopne
xchg
cmpsl
loopne
mov
movsl
loopne
in
loopne
sbb
mov
loopne
jo
loopne
mov
movsb
loopne
inc
test
loopne
xlat
cmpsl
loopne
mov
cmpsl
loopne
in
loopne
push
cmpsl
loopne
xor
loopne
push
loopne
cwtl
mov
loopne
mov
loopne
mov
cmpsl
loopne
jb
loopne
mov
loopne
out
loopne
pop
movsl
loopne
mulb
loopne
xor
loopne
dec
cmpsl
loopne
xchg
movsl
loopne
outsb
mov
loopne
push
movsb
loopne
and
loopne
outsb
cmpsl
loopne
fisubs
loopne
andl
loopne
cmp
loopne
cli
mov
loopne
and
mov
loopne
jl
loopne
jne
loopne
cli
cmpsl
loopne
int3
movsb
loopne
sub
loopne
inc
movsb
loopne
xchg
loopne
xchg
mov
test
mov
mov
loopne
test
test
mov
mov
loopne
mov
cmpsl
loopne
add
loopne
aad
loopne
xor
mov
loopne
add
loopne
mov
cmpsb
loopne
js
loopne
adc
loopne
pop
mov
loopne
push
cmpsb
loopne
jne
loopne
sub
loopne
mov
test
mov
mov
loopne
nop
movsl
loopne
and
loopne
and
test
mov
movsb
loopne
js
loopne
jae
loopne
fisubl
loopne
in
loopne
hlt
cmpsl
loopne
inc
movsb
loopne
mov
test
loopne
add
loopne
out
loopne
inc
mov
loopne
shld
into
cmpsb
loopne
mov
movsb
loopne
jno
loopne
dec
mov
loopne
sub
movsb
loopne
mov
movsb
loopne
push
mov
loopne
aam
loopne
adc
loopne
jmp
movsb
loopne
push
cmpsb
loopne
movsl
loopne
inc
mov
loopne
movsb
loopne
inc
cmpsl
loopne
addr16
mov
movsb
loopne
xchg
cmpsb
loopne
xor
loopne
sbb
loopne
pop
cmpsb
loopne
in
loopne
aaa
movsb
loopne
enter
mov
loopne
aam
loopne
inc
cmpsb
loopne
add
loopne
mov
loopne
pop
mov
loopne
inc
test
loopne
js
loopne
fldenv
loopne
adc
loopne
sub
loopne
or
loopne
fsubs
loopne
sub
mov
loopne
lret
mov
mov
loopne
mov
loopne
xchg
cmpsb
loopne
mov
loopne
and
loopne
cli
movsl
loopne
test
mov
mov
loopne
and
loopne
push
mov
loopne
mov
loopne
mov
mov
loopne
jne
loopne
stc
cmpsb
loopne
and
loopne
pop
mov
loopne
movsl
loopne
in
mov
loopne
inc
test
loopne
repz
loopne
adc
loopne
data16
loopne
mov
cmpsb
loopne
push
mov
loopne
fldenv
loopne
iret
movsb
loopne
cmpsl
mov
loopne
mov
loopne
and
loopne
and
loopne
mov
loopne
shll
loopne
adc
mov
loopne
movsb
loopne
dec
movsb
loopne
repz
loopne
imul
mov
mov
loopne
push
mov
loopne
shll
loopne
dec
cmpsl
loopne
repnz
loopne
inc
movsl
loopne
out
movsb
loopne
mov
loopne
or
loopne
pop
test
mov
mov
loopne
jmp
loopne
mov
test
mov
cmpsb
loopne
cmp
loopne
aam
loopne
jae
loopne
push
mov
loopne
icebp
movsl
loopne
sahf
test
mov
mov
loopne
je
loopne
movsl
loopne
mov
loopne
lea
loopne
shlb
inc
movsb
loopne
daa
cmpsl
loopne
pop
mov
loopne
les
loopne
ja
loopne
nop
mov
loopne
inc
cmpsl
loopne
bound
loopne
jle
loopne
shll
loopne
std
mov
loopne
add
loopne
outsl
mov
loopne
fsubs
loopne
mov
loopne
pop
mov
loopne
push
cmpsl
loopne
shlb
loopne
and
loopne
jg
loopne
mov
loopne
jmp
test
mov
cmpsb
loopne
fisubs
loopne
fsubl
mov
test
mov
mov
loopne
popa
mov
loopne
xor
loopne
popf
mov
loopne
repnz
mov
movsb
loopne
lret
movsb
loopne
leave
test
mov
movsb
loopne
add
loopne
push
cmpsb
loopne
push
loopne
add
loopne
add
mov
cmpsl
loopne
push
movsl
loopne
inc
movsl
loopne
jnp
loopne
aas
mov
loopne
movsb
loopne
jae
loopne
add
loopne
imul
loopne
pusha
movsl
loopne
mov
movsb
loopne
mov
test
mov
mov
loopne
jns
loopne
xchg
movsb
loopne
dec
test
loopne
aam
loopne
lcall
mov
test
mov
mov
loopne
aaa
test
loopne
cmp
loopne
add
loopne
shll
loopne
pop
test
mov
mov
loopne
adc
loopne
push
cmpsl
loopne
jecxz
loopne
shll
mov
mov
loopne
sbb
movsb
loopne
andb
mov
mov
loopne
push
test
loopne
aad
loopne
mov
cmpsb
loopne
cmp
loopne
andl
loopne
hlt
mov
loopne
test
mov
mov
loopne
jne
loopne
mov
loopne
movsb
cmpsl
loopne
inc
mov
loopne
shlb
loopne
es
mov
movsl
loopne
adc
loopne
jl
loopne
icebp
mov
loopne
jl
loopne
sub
loopne
test
loopne
mov
movsb
loopne
jmp
loopne
cmpsb
loopne
cmp
loopne
mov
cmpsl
loopne
and
movsb
loopne
bound
loopne
test
loopne
push
movsl
loopne
leave
mov
loopne
aas
test
mov
test
loopne
dec
movsb
loopne
popa
cmpsl
loopne
pop
mov
loopne
sti
mov
loopne
pop
mov
loopne
in
loopne
xchg
mov
loopne
cmc
movsb
loopne
enter
or
loopne
out
test
mov
int
clc
push
add
jle
clc
mov
or
add
enter
sbb
add
cli
test
dec
dec
insl
add
add
ud0
mov
adc
add
pop
popl
add
adc
in
loopne
in
adc
add
clc
mov
push
add
xchg
fiaddl
add
add
into
loope
xchg
sub
push
clc
pop
add
add
fdivrl
lret
mov
clc
addr16
add
add
add
in
arpl
add
clc
dec
xor
add
data16
pop
jecxz
push
add
ret
loope
imul
cwtl
aaa
in
rcl
sub
push
mov
push
sub
push
push
push
push
push
push
call
and
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
call
out
fadds
cmpsb
clc
cmp
or
push
in
add
add
clc
push
rcrl
das
cs
clc
pusha
add
or
xor
add
mov
sbb
add
and
sbb
mov
mov
scas
adc
clc
push
xor
add
dec
cltd
sti
xabort
fiadds
xor
add
pop
inc
add
jmp
clc
sub
ja
inc
add
xchg
lret
add
add
add
jge
cmp
pusha
add
sbb
shlb
and
add
cli
fdivr
lret
cmp
add
jnp
xor
push
add
add
add
add
add
outsl
mov
add
add
and
add
add
lret
iret
fsubrl
lods
pusha
add
jecxz
sub
cs
xchg
jl
fcoms
add
stos
cmp
add
mov
push
add
xchg
pop
jg
push
dec
test
data16
data16
pop
pop
pop
mov
clc
ja
add
mov
clc
jg
add
bound
add
xchg
inc
clc
pop
mov
aam
cmp
jl
cs
lret
xlat
jp
popf
or
ljmp
add
mov
add
aam
test
ss
add
push
add
and
add
clc
loop
push
add
iret
inc
add
cmp
mov
pop
fs
mov
dec
inc
clc
inc
add
cwtl
jmp
add
adc
add
icebp
or
scas
pop
adc
add
pop
lahf
mov
scas
in
mov
clc
cmc
inc
add
push
add
add
mov
cltd
mov
pop
pop
clc
and
add
jg
ret
clc
ss
jmp
jmp
clc
loop
jmp
mov
add
add
add
cmpsl
clc
sbb
push
add
insl
adc
add
inc
clc
call
push
test
dec
add
add
jecxz
and
add
mov
jno
add
clc
mov
jecxz
mov
clc
daa
clc
sub
call
clc
lahf
jg
mov
mov
jno
add
xchg
push
clc
sbb
clc
push
clc
cmp
and
add
add
outsb
mov
pop
xchg
adc
add
add
add
clc
mov
clc
nop
test
clc
jmp
mov
std
sbb
dec
std
inc
clc
aad
cwtl
stos
cli
clc
add
add
clc
out
mov
add
xor
add
dec
call
in
xor
inc
clc
cmp
clc
scas
sub
add
clc
movsb
clc
outsl
loop
mov
mov
push
clc
bound
add
push
clc
roll
add
add
int3
test
in
int
dec
imul
lock
pushf
into
mov
add
movzwl
jp
clc
inc
clc
fldt
in
loop
and
add
hlt
imul
mov
aas
rcrl
ss
jmp
add
xbegin
or
iret
test
xor
add
clc
stc
cwtl
mov
movsl
clc
test
lods
push
ja
clc
xbegin
mov
mov
insl
icebp
xor
add
test
mov
pop
inc
add
fstpl
bound
add
push
clc
push
cmp
outsb
loope
decl
add
push
add
mov
movsl
clc
jb
add
mov
jle
clc
jmp
outsl
pop
sbb
clc
in
jb
add
pop
mov
push
sahf
xor
add
xor
add
clc
sub
fucomip
stc
jp
pushf
push
clc
or
clc
ljmp
cmpsl
clc
xor
add
add
add
int
clc
gs
ret
clc
bound
add
and
add
dec
mov
add
xchg
rcl
sub
jge
add
add
inc
add
inc
clc
xor
add
sbb
or
test
repz
add
jbe
cmp
pop
pushf
push
add
lahf
jbe
test
es
mov
push
add
dec
dec
loopne
jmp
lock
push
xchg
cmp
testl
cmc
cmp
push
mov
add
cmpsl
clc
test
xbegin
add
push
add
daa
clc
aas
or
add
adc
add
push
push
aad
add
stos
mov
std
in
ss
sti
pop
clc
cmp
cmp
jge
mov
je
add
ja
add
add
clc
cmp
add
fcomi
sub
popa
add
push
arpl
add
add
dec
cmp
clc
iret
pop
fmul
adc
add
scas
lahf
mov
mov
add
pop
xchg
cmp
push
xor
add
mov
pop
clc
cld
pop
sub
je
push
add
nop
cmp
clc
and
cmpsb
clc
xchg
lret
xor
xor
add
movsl
clc
scas
adc
sar
add
cwtl
xabort
jmp
sub
pop
lock
jns
dec
cmp
clc
pop
xor
add
jecxz
push
idiv
cmp
sub
pop
and
add
std
sbb
clc
out
jecxz
testl
add
add
sbb
mov
adc
add
add
xchg
loope
je
bswap
jb
add
mov
add
inc
clc
and
add
xor
add
dec
icebp
pop
dec
aaa
push
sti
repnz
add
out
ds
clc
mov
add
mov
clc
mov
add
lock
or
cmp
out
pop
dec
shlb
add
xchg
cmp
push
cmp
dec
xrelease
aaa
inc
add
push
cmp
add
out
data16
dec
std
lods
push
jae
add
clc
in
cld
xchg
cmp
mov
add
mov
add
js
clc
sub
clc
push
add
aaa
cltd
mov
icebp
lods
outsb
and
add
add
add
add
xabort
adc
add
pop
cmp
imul
clc
mov
div
and
clc
mov
mov
clc
movsb
clc
jae
add
mov
add
test
ds
adc
add
data16
dec
cmp
pop
clc
cwtl
push
push
add
pop
add
add
out
lods
fcomip
ljmp
add
add
aas
mov
add
dec
or
jb
add
scas
clts
clc
jecxz
mov
clc
inc
clc
push
add
mov
in
stc
xor
stos
pusha
add
into
mov
clc
test
add
add
clc
das
lcall
push
jge
add
cmc
cmpsb
clc
or
clc
js
sar
clc
mov
add
adc
cld
add
add
loop
aad
aad
cmp
add
jne
vandps
xchg
adc
add
jnp
add
ret
clc
jb
add
add
pop
xlat
and
add
mov
clc
adc
add
jno
add
clc
cmp
add
or
pop
inc
clc
sbb
add
clc
and
add
ret
mov
add
cmp
sahf
loope
loop
xchg
sbb
fsubl
in
and
add
test
repz
clc
dec
movsb
clc
loope
inc
clc
loopne,pt
dec
push
add
cmp
add
add
clc
jmp
clc
xor
xchg
test
clc
sar
add
fwait
inc
clc
shlb
clc
jmp
add
add
add
jo
add
mov
add
imul
inc
clc
dec
cmp
add
js
add
enter
xchg
imul
cs
clc
outsb
push
iret
ljmp
add
pop
sub
mov
pop
mov
test
mov
insb
sbb
jo
add
pusha
add
xor
add
inc
add
cmp
hlt
fcmovb
clc
outsb
xor
add
add
imul
add
loope
imull
cmp
sarb
cmpsb
clc
shll
add
dec
sbb
fnstcw
xchg
xchg
mov
push
clc
lea
pop
bound
add
push
push
stos
insb
clc
shl
clc
dec
enter
add
rorl
std
aaa
xor
add
xchg
or
or
inc
clc
add
push
add
mov
add
ret
cmp
out
inc
clc
sbb
data16
loop
pop
loop
sub
ret
clc
xor
add
add
nop
pop
jbe
clc
jp
xor
add
mov
movsb
clc
mov
pop
clc
pop
sub
mov
add
sub
xchg
mov
xchg
pop
out
pop
sbb
jnp
add
ds
jl
clc
loope
dec
inc
clc
sub
add
jp
clc
sysexit
iret
pop
sbb
clc
push
mov
add
repnz
mov
nopl
repz
shufps
loopne
ss
push
nop
popa
add
call
add
js
push
add
jmp
dec
ffreep
clc
inc
add
adc
add
test
adc
add
insl
jne
sbb
add
cmp
clc
adc
add
add
add
sub
xor
ja
add
cmp
add
add
clc
push
or
ljmp
clc
out
bound
add
add
xchg
cmp
or
add
mov
addr16
xor
add
mov
out
jbe
clc
jb
add
int
or
fnstsw
enter
out
or
out
cmp
sarl
xor
add
add
jp
mov
add
int
add
add
clc
nop
arpl
add
add
push
jecxz
xchg
dec
out
daa
clc
push
mov
bound
add
clc
cli
xchg
mov
sti
pop
xchg
pop
in
lock
gs
or
jmp
adc
add
icebp
inc
clc
sahf
repnz
gs
das
xchg
std
sarl
ljmp
sbb
hlt
inc
add
inc
add
fwait
cmp
add
cltd
lahf
push
mov
cld
jl
sub
sar
mov
clc
fimuls
pop
fisubl
jge
add
sub
cs
xabort
xabort
push
add
fcomps
in
xor
add
mov
insl
pop
pop
cmp
sar
clc
scas
hlt
mov
xchg
js
mov
adc
add
pop
ficomps
clc
add
add
loopne
gs
xor
add
add
add
xchg
clc
fldenv
and
add
xchg
call
iret
pop
mov
pop
clc
rorb
dec
sahf
adc
add
add
hlt
movsl
clc
adc
add
cmpsb
clc
fimuls
add
and
mov
sub
enter
push
xchg
mov
mov
adc
in
mov
add
fidivs
in
imul
push
xor
add
clc
negl
xor
add
add
dec
cmp
jp
mov
icebp
cmp
clc
int
add
cmpsl
clc
leave
outsl
xor
dec
xor
aad
fwait
xchg
xor
negb
mov
cmc
ljmp
fwait
add
add
outsb
movsb
clc
add
mov
push
add
sub
or
gs
fistpl
icebp
sub
add
clc
push
clc
cmp
add
push
jl
clc
mov
pop
clc
mov
push
add
jae
add
add
mov
negl
clc
movsl
clc
xor
add
outsl
leave
cs
clc
popf
sub
adc
add
xchg
loop
popf
sub
clc
test
push
leave
in
mov
lahf
dec
aam
add
jle
push
lock
leave
dec
mov
faddl
add
jecxz
xchg
cmp
jmp
push
add
outsb
out
cmc
mov
mov
sbb
add
adc
inc
clc
and
add
add
clc
clc
sub
aad
sub
xchg
pusha
add
sbb
cmp
clc
fdecstp
incb
fbld
jne
push
fmul
out
fs
dec
push
add
sar
add
data16
add
add
popa
add
rcr
hlt
mov
xabort
in
aam
mov
jl
mov
jae
add
cwtl
xchg
jge
mov
testl
add
in
outsl
xbegin
clc
repnz
dec
inc
add
sar
push
pop
out
add
add
clc
sub
test
insl
cmp
add
fcomps
inc
add
push
add
push
outsl
outsb
clc
add
add
xchg
cmp
cmp
lret
lock
mov
add
inc
add
dec
data16
mov
sub
clc
out
push
add
outsb
jnp
mov
jno
add
push
add
pop
mov
add
dec
mov
add
or
add
mov
dec
push
add
adc
add
cmpsl
clc
mov
clc
dec
mov
sub
in
mov
ds
mov
inc
add
add
inc
clc
push
clc
test
add
fstps
add
icebp
cmpsl
clc
mov
clc
add
add
pushf
lods
fnsave
add
jbe
clc
ret
clc
pop
addr16
inc
add
or
test
pop
call
or
iret
test
mov
es
scas
sbb
inc
add
mov
fisubrs
jp
clc
bt
pop
xor
jecxz
shlb
add
ljmp
add
stos
test
mov
clc
push
sbb
cmp
and
mov
add
cltd
add
iret
and
jg
xor
add
hlt
fidivs
add
inc
add
jecxz
mov
add
lret
mov
testb
clc
int3
mov
adc
cmp
icebp
push
add
xchg
mov
add
add
jne
or
dec
jmp
clc
stc
mov
cmc
jne
mov
cmp
repz
clc
das
and
add
dec
pushf
inc
clc
fcoml
ds
mov
clc
ret
enter
add
ret
add
inc
clc
sbb
add
ja
lret
sub
mov
add
inc
clc
mov
jno
add
clc
xor
add
cmpsb
clc
dec
repnz
jb
add
xchg
inc
add
inc
add
inc
add
hlt
or
dec
cmp
xchg
sub
imul
stos
mov
scas
es
or
inc
add
fnstcw
xchg
cmp
jnp
pop
mov
clc
push
push
add
loop
sbb
pop
pop
clc
test
in
dec
adc
clc
xor
cmp
cmpsb
clc
inc
clc
cmp
mov
add
jecxz
mov
mov
lods
mov
test
call
add
lahf
stos
inc
add
add
add
clc
xchg
mov
repz
clc
nop
and
add
in
outsl
mov
add
shrb
add
mov
movsb
clc
cs
call
clc
and
xchg
cmp
push
in
xchg
jp
clc
aad
clc
cld
jo
add
jl
pop
xor
add
add
cmp
jbe
add
test
cmp
inc
add
cmpsb
clc
aam
cwtl
lret
fsubrs
sbb
clc
fimuls
add
lea
ja
add
inc
clc
and
add
add
negl
das
fwait
clc
bound
add
addr16
push
stc
pusha
add
fldl
or
jmp
add
out
cwtl
xor
clc
pop
pop
fistpl
clc
mov
mov
or
pop
add
add
add
sub
or
popf
stos
adc
add
add
pop
dec
int3
mov
add
das
fsubs
inc
clc
nop
cmp
mov
add
int
clc
and
add
clc
jl
push
add
fadds
add
add
fstl
add
add
add
dec
mov
mov
clc
sar
btr
mov
add
lock
pusha
add
mov
in
mov
clc
adc
add
sub
popa
add
jne
clc
call
xchg
cmc
ds
add
pop
clc
dec
adc
add
add
insb
arpl
add
mov
cmp
clc
lea
pop
jl,pt
icebp
or
dec
add
add
addr16
xchg
cmp
clc
cmp
clc
push
mov
clc
push
inc
add
loop
imul
mov
add
jmp
clc
repnz
jg
cmp
add
adc
add
clc
fistps
push
clc
enter
outsl
fldcw
insl
or
clc
dec
sar
or
mov
mov
clc
mov
add
sbb
mov
sbb
add
clc
mov
clc
push
int
add
loopne
lcall
fistps
out
add
add
add
xchg
or
inc
clc
sbb
enter
das
loop
cwtl
popa
add
imul
clc
mov
adc
add
into
mov
add
js
in
ja
mov
clc
sub
add
mov
add
push
std
cmp
add
add
add
mov
pop
xor
add
add
xchg
fcomps
add
mov
push
clc
repnz
negb
pusha
add
in
negb
add
loop
mov
imul
inc
clc
adc
add
out
sarl
adc
add
mov
xor
add
sub
clc
loopne
dec
cmp
xchg
add
add
popa
add
rolb
clc
lret
inc
clc
cli
popa
add
test
dec
xchg
add
loope
mov
mov
add
xchg
jge
clc
jge
xabort
push
add
pop
xchg
stos
fidivrl
inc
clc
jb
add
mov
ss
sbb
cli
insb
dec
push
xor
add
sub
ss
aaa
xchg
aad
mov
out
push
adc
add
ja
inc
add
push
clc
mov
clc
mov
or
popa
add
mov
mov
add
je
clc
push
loopne
mov
mov
add
clc
cmp
add
or
push
mov
call
lcall
push
clc
aam
mov
icebp
pop
mov
filds
add
xchg
jmp
cmp
add
add
inc
add
cmp
clc
mov
add
clc
jmp
add
fldenv
clc
arpl
add
and
add
dec
mov
or
clc
call
shlb
adc
add
ja
lret
test
pop
mov
clc
test
inc
add
ja
clc
aam
add
fs
testl
add
sti
sub
in
cltd
xor
add
outsl
and
add
clc
in
hlt
xor
fcompl
xchg
fildll
clc
lea
sub
clc
stos
dec
inc
add
stos
jne
add
lods
cmp
cmp
insl
lods
adc
jl
clc
jns
clc
mov
int
clc
jae
add
add
cmp
adc
add
sub
xchg
stc
cltd
cmpsl
clc
pushl
lahf
jb
add
add
sub
test
mov
clc
xbegin
clc
mov
sbb
clc
and
cmp
scas
cmp
adc
clc
mov
add
ljmp
add
inc
clc
pop
sub
out
mov
clc
pop
sar
jae
add
testb
add
add
and
add
clc
lcall
mov
push
sbb
or
mov
add
add
test
mov
adc
add
xchg
sar
jbe
test
add
jb
add
clc
jle
clc
pop
aas
in
lods
sar
clc
adc
add
clc
ret
clc
inc
add
adc
add
sub
clc
fs
ja
and
loope
mov
lcall
mov
adc
clc
mov
xor
lock
clc
mov
pop
mov
lea
add
out
clc
std
cmp
or
clc
pop
mov
call
sti
cmp
add
mov
inc
add
movsb
clc
iret
repnz
insb
add
add
fnstcw
xor
add
cmp
push
mov
push
add
fcompl
xchg
lret
je
sbb
add
cli
adc
sub
mov
insb
or
adc
add
jne
add
and
add
mov
clc
mov
mov
movsl
clc
mov
xor
add
out
push
adc
add
clc
cmp
clc
enter
mov
jge
adc
add
enter
pop
fwait
push
lcall
fcomip
xchg
out
pop
testl
sbb
shll
fmull
mov
clc
jge
int
xchg
sbb
popa
add
imul
stos
pop
aas
adc
insb
fldt
dec
dec
adc
add
aas
out
outsl
clc
cmp
add
repz
mov
jb
add
clc
arpl
add
clc
sbb
aas
lods
mov
scas
jg
fwait
bswap
out
sbb
dec
ret
clc
lods
mov
or
ficoms
fld
clc
dec
and
add
clc
js
clc
sub
add
clc
cwtl
xchg
mov
std
ficompl
bound
add
add
hlt
int3
lea
add
xor
add
push
xor
add
add
je
cld
mov
clc
xor
add
clc
test
mov
clc
fscale
push
stos
mov
daa
clc
mov
add
inc
add
sbb
add
fsubl
clc
xor
add
sub
xor
add
add
fildll
lock
or
add
cmp
jl
xor
add
xchg
in
push
fs
pop
and
add
mov
cmp
setb
pusha
add
pop
jg
clc
sbb
adc
add
mov
arpl
add
sub
mov
lods
jp
pushf
in
cmp
clc
ds
inc
add
ja
loop
addr16
cmp
add
add
cmp
clc
pop
sahf
or
xor
add
clc
scas
sub
clc
cmp
insl
adc
add
add
mov
push
xchg
in
test
inc
clc
mov
clc
out
cmpsb
clc
inc
clc
push
xchg
sbb
clc
xor
arpl
add
add
inc
add
mov
add
cltd
dec
xchg
cmp
sbb
jo
add
clc
xor
add
clc
sbb
clc
or
or
scas
outsl
daa
clc
mov
clc
ja
leave
adc
add
stc
xchg
std
sub
clc
push
add
adc
add
sbb
add
push
xabort
clc
int
add
push
add
push
repz
add
mov
repz
rorl
repz
sub
popf
jnp
iret
jecxz
insb
in
jg
test
jo
add
push
sar
lret
pop
scas
inc
add
cltd
lret
popf
or
jbe
add
cwtl
mov
clc
loopne
jns
sar
add
mov
test
xor
cwtl
ret
clc
and
add
add
inc
add
addr16
test
cmpsb
clc
fcompl
adc
clc
inc
clc
gs
or
inc
clc
pop
and
adc
add
clc
sub
add
mov
add
add
xchg
cmp
add
xor
or
cmp
clc
pop
push
lock
inc
clc
popf
icebp
and
add
clc
inc
clc
dec
jns
clc
pop
daa
clc
pop
and
add
add
xabort
add
test
xor
add
clc
int
clc
adc
add
sbb
clc
or
lods
int3
mov
cmpsl
clc
aas
push
add
lret
fisubs
and
clc
sar
mov
cmc
gs
fisttps
pusha
add
mov
aaa
dec
dec
mov
lret
sub
rorl
imul
jnp
fidivs
add
push
clc
cmc
xabort
in
cs
roll
add
xchg
and
xchg
xchg
aad
sub
cmp
add
and
add
clc
dec
pop
shl
clc
sbb
clc
pop
clc
std
pusha
add
icebp
sbb
int3
stos
xor
add
adc
add
clc
xchg
adc
sbb
dec
cs
or
jmp
add
clc
mov
sub
add
add
clc
xor
dec
mov
fst
test
add
xor
add
jle
sbb
inc
clc
in
shr
adc
adc
add
clc
test
ret
add
mov
stos
push
jecxz
sar
call
arpl
add
clc
test
push
nop
in
mov
jp
clc
push
add
cmp
pop
xor
add
cmp
aaa
add
add
and
pop
cli
shl
clc
push
pop
hlt
lahf
mov
jo
add
and
add
add
mov
loop
mov
clc
push
add
scas
lcall
mov
xor
aaa
or
add
add
add
in
incb
outsl
das
mov
mov
roll
add
adc
add
aam
clc
rolb
add
sbb
mov
cmpsb
clc
imul
das
insb
sbb
lret
sbb
add
sahf
push
add
xchg
outsl
aas
test
push
push
loopne
push
fidivrs
jle
fdivrs
clc
mov
mov
clc
xchg
fstpt
inc
add
lahf
aam
clc
cmp
or
test
mov
clc
sbb
imul
add
scas
mov
gs
sub
clc
fldcw
jnp
addr16
clc
mov
add
push
add
fidivs
add
cmpsb
clc
sahf
adc
add
dec
mov
fstps
add
cli
inc
add
jle
out
testb
add
movsl
clc
sub
mov
clc
push
cmp
dec
dec
outsl
not
fsubl
add
xor
add
bound
add
ret
push
out
aaa
adc
add
xchg
pusha
add
pop
sti
xchg
mov
ds
outsl
popa
add
add
add
clc
cltd
out
ret
add
adc
add
sahf
push
incb
data16
sub
or
inc
add
mov
aaa
or
test
ljmp
add
fisttps
add
mov
add
add
clc
lods
ss
loope
insl
shlb
lods
sub
add
cli
leave
sub
inc
clc
arpl
add
add
call
adc
add
sub
mov
cmp
add
sub
rcr
in
test
fwait
mov
xor
add
cmp
mov
scas
sub
clc
stos
lahf
loope
daa
clc
mov
clc
mov
clc
cltd
mov
js
stos
pop
xchg
xor
add
repz
sub
add
mov
fstpl
mov
popa
add
movsl
clc
lret
pop
stc
clc
pop
pushf
and
add
lea
add
adc
add
jg
xor
clc
into
gs
mov
add
add
clc
push
inc
add
jl
ret
clc
lret
inc
add
cmp
pop
roll
sub
mov
fldl
clc
or
add
iret
add
add
clc
popf
dec
es
mov
fisubs
add
lret
jb
add
dec
mov
add
outsb
std
aaa
push
cmp
clc
dec
dec
mov
add
out
pop
pusha
add
std
rol
clc
lea
add
dec
sub
clc
mov
xor
add
clc
sub
frstor
inc
clc
push
sbb
add
jecxz
cmp
add
add
cmp
clc
jne
mov
add
add
xbegin
cmp
and
add
jp
dec
ret
clc
jl
cmpsl
clc
inc
add
mov
clc
mov
sahf
iret
inc
add
sub
clc
inc
add
bound
add
add
in
cmp
mov
dec
mov
out
test
sub
cltd
and
add
jns
int
add
mov
jae
add
add
add
mov
cli
add
add
add
jl
add
push
stc
pop
clc
outsl
sbb
xchg
cmp
loop
fnstenv
add
sub
sub
insb
cmp
lret
nop
or
and
add
add
dec
and
add
add
movsb
clc
out
push
aam
add
or
aas
pop
hlt
pop
clc
clc
adc
add
mov
stos
adc
add
pop
icebp
mov
notb
jo
add
add
or
add
add
jge
clc
xor
add
add
pop
gs
add
add
or
lea
add
in
mov
lods
into
aad
add
add
add
add
cmp
inc
add
adc
add
clc
mov
mov
xor
aaa
cld
adc
add
cmp
dec
cmpsl
clc
push
add
or
mov
adc
add
clc
ss
lret
push
adc
add
clc
loop
mov
clc
add
add
clc
int
and
sbb
clc
scas
or
add
fldpi
sub
mov
ljmp
mov
sub
clc
push
add
outsl
ljmp
stc
mov
clc
jno
add
clc
hlt
pop
jno
add
aam
clc
cmp
clc
iret
lods
mov
clc
mov
add
pop
mov
fldenv
add
add
or
cld
dec
xor
push
jb
add
push
cltd
inc
clc
in
pop
sbb
add
js
call
sub
rorl
mov
xor
add
in
jbe
add
ja
mov
sbb
add
lea
xbegin
jae
add
filds
lret
fwait
stc
rcrb
dec
and
add
add
lods
sbb
add
clc
push
add
jns
icebp
mov
add
clc
or
lea
add
dec
cmp
sub
add
jg
cmp
test
fisubrl
add
es
push
clc
pop
lock
xor
add
mov
dec
jle
fldl
xchg
xor
add
sar
add
sbb
add
dec
outsl
fstl
test
clc
cmp
clc
jle
mov
add
out
xlat
stc
clc
sbb
clc
outsl
lcall
add
rcrb
jle
out
hlt
mov
xchg
lret
dec
inc
clc
xchg
push
mov
pop
pop
sahf
xchg
adc
add
add
int
clc
mov
push
add
popa
add
ret
clc
push
loope
sub
add
int
clc
in
sbb
clc
and
add
clc
fimuls
add
jge
imul
in
test
call
cmp
pop
ds
movsb
clc
cmpsl
clc
xbegin
sub
cmpsl
clc
sbb
add
leave
xchg
fcmovu
stos
pop
xor
add
xor
jl
add
icebp
test
adc
add
push
xchg
out
jmp
popa
add
sbb
clc
dec
out
insb
insb
and
add
adc
add
jge
ret
pusha
add
mov
push
add
fnstsw
clc
mov
clc
cmc
aaa
and
add
push
add
xabort
mov
add
gs
sar
loop
mov
pop
clc
cwtl
sub
aad
pusha
add
cs
add
add
clc
push
mov
add
sub
scas
xchg
cs
cmp
xor
add
xlat
push
cmp
push
add
sti
adc
dec
jno
add
clc
mov
inc
clc
jl
add
gs
mov
paddd
clc
cmp
in
lock
sub
add
pushf
es
mov
sub
loop
dec
mov
movsb
clc
add
add
das
mov
jae
add
push
adc
add
fwait
call
movsl
clc
sub
std
lock
adc
add
mov
add
loopne
push
cmp
clc
sbb
fwait
inc
clc
hlt
fsts
es
insb
pop
jo
add
add
mov
popa
add
sti
inc
add
pop
cmp
sti
into
lret
ja
popf
or
cmp
clc
mov
in
cmc
lret
push
adc
add
add
sar
clc
and
pop
cwtl
testl
add
sub
pop
xor
dec
repz
int3
xor
add
xchg
xor
add
es
gs
sbb
xabort
clc
jg
pop
std
jne
add
push
clc
cmc
xor
add
test
jle
clc
frstor
cmp
pusha
add
xchg
push
fucom
clc
cmp
out
add
add
add
adc
ss
pushf
outsl
in
jb
add
clc
and
add
clc
push
add
push
in
push
add
dec
jb
add
mov
leave
or
cmpsb
clc
into
in
sti
add
add
add
outsb
cmpsb
clc
xlat
xchg
repnz
jae
add
sahf
cmp
dec
loopne
fistps
mov
add
faddl
add
call
cwtl
sub
clc
add
lods
clc
int
das
rcl
es
xchg
in
test
negl
sti
sbb
add
movsb
clc
push
je
inc
clc
or
clc
adc
add
sbb
xchg
mov
mov
popa
add
stc
inc
add
loop
test
cltd
xlat
or
add
dec
pop
je
push
ja
scas
cmpsb
clc
push
add
sar
clc
fs
pop
ret
clc
pop
fwait
aas
decb
loopne
xlat
fiaddl
push
mov
dec
rcrl
mov
cmpsb
clc
xabort
push
add
mov
clc
mov
repnz
clc
sahf
cltd
aaa
mov
out
inc
add
xchg
in
push
je
cmp
stos
and
add
add
add
inc
clc
imul
mov
mov
adc
add
add
add
in
jp
inc
clc
xchg
popl
clc
add
add
lret
sub
mov
jmp
cmp
xchg
add
add
sbb
leave
xchg
sbb
rcrl
fstps
add
aam
gs
aas
mov
sub
clc
ret
clc
data16
cwtl
pop
mov
test
fmull
clc
pop
clc
mov
clc
dec
in
dec
xchg
cmp
lock
stc
mov
push
imull
jecxz
repnz
aad
pop
shl
clc
ret
in
mov
mov
add
pusha
add
dec
ret
cmpsl
clc
xchg
xor
add
popa
add
iret
ss
out
inc
add
in
notl
adc
lods
insb
cmp
fucomip
idivl
clc
movsb
clc
pop
rep
xchg
jge
cmp
leave
mov
pop
or
add
add
in
cwtl
push
dec
mov
pop
sarl
clc
shll
add
stos
icebp
lods
inc
clc
jmp
loope
jb
add
add
std
jne
push
and
insl
mov
sbb
ljmp
sbb
add
add
hlt
mov
pop
fisttps
mov
clc
jp
clc
cmc
ret
clc
lret
add
add
out
gs
ss
inc
clc
sti
cmp
and
add
add
jecxz
xor
add
clc
sti
push
loop
pop
mov
clc
or
add
sbb
add
cltd
sarl
push
dec
or
jne
mov
and
add
mov
and
add
add
add
not
add
add
add
add
mov
mov
clc
addr16
enter
add
xlat
push
add
push
inc
clc
test
insl
int
clc
cmpsl
clc
xbegin
add
cmp
add
add
inc
add
sub
add
pop
mov
pop
cld
mov
add
dec
xabort
add
jg
dec
xor
add
in
mov
iret
mov
xor
add
pop
inc
add
dec
jb
add
pop
leave
sub
das
xor
add
in
movsb
clc
mov
cli
nop
ret
clc
add
add
aad
aas
jl
lods
or
pop
and
pop
clc
jl
cmp
cmp
add
stos
fs
or
clc
loopne
test
add
fwait
xor
add
stos
das
adc
add
outsb
and
add
dec
mov
clc
push
xchg
stc
ficompl
shrl
clc
shll
mov
clc
cmp
notb
pop
clc
adc
add
add
sub
inc
clc
pop
sub
push
adc
clc
jbe
cmp
clc
notb
movsb
clc
and
add
sahf
fcoml
jmp
add
add
cmp
clc
clc
nop
mov
insl
fimull
jne
clc
mov
jmp
js
xchg
or
sti
out
incb
jb
add
mov
mov
sahf
xlat
dec
bound
add
clc
enter
in
fld
clc
test
cmpsl
clc
cmp
int
add
dec
bound
add
clc
ret
clc
mov
add
sbb
lods
xor
add
pop
rcl
dec
in
inc
clc
xor
add
add
add
add
fldt
add
in
pop
and
and
add
or
lods
push
clc
test
jmp
add
mov
out
mov
lahf
jne
add
and
out
pop
cltd
fbld
inc
clc
in
cmp
ret
add
add
adc
cmp
inc
clc
cltd
cmp
or
clc
cmc
jg
dec
add
add
imul
cmp
xor
add
push
add
mov
add
add
hlt
sub
ja,pt
out
add
add
clc
push
add
bound
add
int
pop
stc
xlat
xchg
test
js
mov
clc
dec
js
clc
adc
add
add
not
dec
ljmp
clc
shlb
add
or
add
insb
adc
add
add
pop
scas
in
imul
add
mov
bound
add
add
es
sub
mov
int
add
adc
add
pop
inc
clc
data16
out
idivb
aad
cmp
add
clc
fisttpl
call
in
imul
add
scas
sbb
clc
cmpsl
clc
adc
add
add
add
decb
in
fbld
add
shrb
lcall
mov
add
push
add
cmp
adc
add
sbb
clc
aam
mov
insb
clc
mov
data16
fisubl
clc
mov
add
mov
clc
inc
clc
mov
inc
add
xor
add
clc
lret
sub
aad
movsl
clc
mov
add
sarb
shl
clc
xchg
insb
icebp
in
push
add
add
add
sbb
add
add
mov
add
adc
add
sahf
jmp
add
inc
clc
jbe
mov
mov
call
dec
sub
clc
aas
mov
sub
add
or
addr16
ja
clc
test
xor
add
add
ret
clc
push
in
and
add
mov
add
sub
cli
mov
jmp
add
outsb
call
lret
cltd
call
insb
int3
mov
add
scas
out
push
clc
faddl
addr16
mov
clc
jne
out
xchg
cmc
push
add
loopne
icebp
repnz
hlt
xbegin
pushl
cmpsl
clc
mov
test
mov
sbb
in
push
clc
cmpsl
clc
clc
cmpsb
clc
xchg
mov
add
jp
sub
icebp
jmp
cmp
call
xchg
push
clc
pop
mov
lods
icebp
jl
mov
rclb
xor
add
inc
add
call
clc
jg
cwtl
dec
out
and
add
cmp
inc
add
jge
sti
js
cmpsl
clc
adc
add
add
xchg
push
add
pop
je
in
stos
pop
push
lret
add
push
add
fwait
mov
idivb
clc
inc
add
jne
mov
dec
daa
clc
sbb
dec
mov
out
repnz
add
add
mov
loope,pt
inc
add
out
and
cs
push
popf
test
adc
add
push
xor
sbb
clc
adc
clc
and
add
add
inc
add
in
push
clc
fsubr
cmpsb
clc
pop
mov
clc
adc
add
cmp
add
imul
dec
mov
loope
mov
add
sub
add
clc
test
clc
push
add
jecxz
jg
push
add
or
adc
xabort
dec
outsb
jo,pt
add
test
inc
add
enter
add
add
cmovo
add
mov
add
ja
dec
ja
add
push
jmp
add
repnz
clc
sar
bound
add
addr16
mov
xchg
mov
fisubrs
clc
das
fucomip
repz
add
out
and
add
add
xchg
and
add
inc
clc
fld
clc
push
add
pop
ret
leave
push
clc
and
insl
call
popf
pop
je
fldenv
add
shll
add
inc
clc
cmp
and
cmpsb
clc
dec
movsb
clc
add
add
clc
fidivl
add
jo
add
add
clc
pop
add
add
add
add
in
sbb
add
cmp
add
jno
add
nop
aaa
pop
call
add
inc
add
xlat
xchg
je
xor
cmc
pop
pop
clc
adc
add
adc
add
mov
or
vshufps
dec
enter
jge
clc
lea
movsl
clc
jmp
cltd
adc
clc
and
add
add
add
pop
add
enter
js
add
sti
sub
clc
mov
add
in
lcall
mov
pushf
out
ljmp
inc
add
sbb
test
jb
add
dec
stos
adc
add
push
clc
loop
fsts
inc
clc
cltd
xor
add
ret
std
push
xlat
jle
add
cmpsb
clc
out
jmp
loope
push
scas
mov
add
and
add
cli
mov
xor
sar
inc
clc
mov
addr16
push
aad
repz
add
push
cmpsl
clc
jl
loope
call
imul
inc
add
jno
add
xor
inc
clc
xchg
inc
add
popa
add
xchg
push
add
inc
clc
sahf
arpl
add
add
xchg
lahf
inc
clc
cli
cwtl
add
add
add
mov
incl
mov
xchg
inc
add
mov
add
mov
int3
jb
add
inc
add
sub
adc
add
push
add
shlb
xbegin
xchg
jo
add
push
add
jl
clc
rcr
sar
fucom
clc
sbb
aas
bound
add
add
add
clc
jns
and
add
dec
outsb
int3
lods
cmp
cmp
notb
add
fwait
hlt
mov
pop
cmpsl
clc
add
push
cmpsb
clc
fadd
clc
ss
clc
or
jno
add
aam
clc
or
fcmovnbe
push
add
dec
stos
adc
sub
mov
xchg
mov
jg
data16
shrb
push
or
cmp
clc
mov
cmp
clc
adc
push
shlb
data16
lock
jno
add
popf
sbb
jmp
add
clc
jl
or
fistl
add
jb
add
clc
dec
outsb
je
xchg
lcall
clc
icebp
push
clc
rcrb
inc
add
inc
add
mov
mov
push
add
cmc
hlt
mov
imul
add
add
and
add
sti
cld
aad
cld
fs
cltd
cmp
sarb
ja
add
into
ret
clc
imul
add
bound
add
xor
add
fimuls
arpl
add
clc
or
clc
stos
jnp
push
sub
add
clc
xchg
dec
sbb
idivl
lock
cmp
lods
xbegin
mov
mov
jnp
cmp
clc
mov
jnp
ret
xor
add
add
or
clc
cmpsl
clc
pop
jecxz
insl
jae
add
pop
outsl
fucomp
call
add
cmp
mov
add
xabort
add
add
sbb
add
cmp
clc
cmp
int
jg
pop
cmp
cmp
sub
and
add
add
ss
cmpsb
clc
clc
cmp
dec
ret
mov
adc
add
enter
clc
lods
sar
push
inc
add
push
lods
lods
inc
add
push
mov
clc
fidivs
pop
mov
ja
insl
jle
movsb
clc
pop
pop
pop
add
add
jno
add
mov
xchg
xchg
sbb
aam
push
add
mov
loop
fadds
add
add
add
aaa
sti
cmpsb
clc
jl
jo
add
movsb
clc
mov
inc
clc
or
ss
clc
cs
cmp
or
clc
pop
dec
jmp
add
hlt
insb
out
jg
dec
cltd
out
ret
ret
clc
and
add
popf
jmp
clc
ret
clc
dec
mov
pop
fstl
clc
scas
mov
or
shrl
push
hlt
mov
mov
cmc
sbb
dec
xlat
dec
iret
xchg
xabort
add
push
push
mov
clc
jecxz
sbb
pop
push
xlat
sbb
add
add
add
add
xor
add
mov
dec
jbe
add
add
lret
jp
inc
add
aad
clc
in
mov
cltd
cmp
clc
jb
add
gs
push
or
nop
fwait
and
adc
fisttpl
loope
std
fistps
clc
pop
leave
and
add
mov
add
aaa
fcos
xabort
clc
ret
clc
sbb
pop
pmovmskb
jle
add
outsl
pop
clc
fmull
psubq
clc
cmp
and
add
add
xor
je
add
jl
clc
movsl
clc
out
xor
add
jle
add
clc
fdivp
or
xchg
push
mov
in
popa
add
add
add
add
das
xor
add
add
in
cmp
push
sbb
cmp
clc
cmpsl
clc
loope
jg
add
insl
sti
sahf
int
and
movsl
clc
cmp
ljmp
xbegin
sbb
mov
xchg
jnp
mov
mov
add
ficoms
add
mov
clc
pop
push
xchg
call
add
dec
loope
sbb
jmp
and
add
add
jo
add
add
push
out
jae
add
add
xor
add
int3
pop
addr16
aas
fidivrl
and
add
clc
dec
xchg
pop
stos
and
add
add
sar
mov
sar
mov
push
xor
outsl
fstp
ds
movq
push
cmp
jno
add
add
in
mov
clc
aas
ss
add
pusha
add
xchg
mov
xlat
and
add
add
jbe
sbb
fildll
add
mov
clc
jae
add
adc
add
add
cmp
clc
sub
jle
jl
add
movsb
clc
mov
add
sub
clc
cmp
add
fidivl
add
pop
test
ss
add
push
cs
xchg
sub
test
and
add
clc
imul
or
cmc
outsb
test
clc
mov
clc
lock
movsb
clc
test
jecxz
in
arpl
add
inc
add
jecxz
pop
mov
add
push
fs
inc
clc
sar
clc
sbb
cmp
out
repnz
mov
out
out
popa
add
cmpsb
clc
push
add
dec
sub
in
jns
mov
inc
add
into
mov
clc
jp
xor
add
hlt
add
add
clc
xor
icebp
add
add
adc
push
lods
adc
add
add
push
add
sar
mov
test
insb
and
add
clc
push
add
std
cmp
cmp
pushf
jge
sub
aam
repz
fistpl
clc
pushf
shl
mov
push
or
sbb
clc
movsl
clc
inc
clc
jbe
mov
outsb
test
pushf
mov
loopne
repz
imul
add
lock
clc
cmc
gs
data16
in
mov
add
jno
add
outsl
inc
add
js
or
clc
ja
xabort
clc
dec
mov
add
inc
clc
mov
lods
push
add
ja
sub
cltd
mov
add
stos
stos
data16
repz
jae
add
xor
add
out
test
mov
ret
jle
sbb
add
pusha
add
dec
xchg
mov
add
fxam
clc
popf
test
nop
ret
clc
sahf
adc
pop
insl
fiaddl
add
aas
into
inc
clc
in
or
add
or
arpl
add
movsb
clc
test
xor
add
inc
add
aas
mov
clc
aaa
aad
add
inc
clc
cmp
dec
pop
jns
cmc
int3
cmpsb
clc
push
add
ss
add
push
clc
inc
add
mov
imul
aas
xor
add
add
cld
fidivl
leave
rorb
push
add
out
lret
hlt
lock
xor
add
add
pop
push
xor
add
xchg
aas
pop
stos
sub
popl
add
mov
and
add
clc
dec
xchg
push
loope
sbb
insb
xbegin
fimull
clc
loopne
inc
clc
mov
xchg
mov
and
add
add
xchg
leave
xor
testb
add
rolb
bound
add
add
adc
add
clc
xchg
pushf
test
dec
loopne
ja
xor
add
adc
pop
clc
jnp
add
cld
call
lods
dec
test
cwtl
xor
add
mov
clc
cmp
pop
leave
loope
cmp
push
push
mov
clc
cltd
iret
xchg
push
cmp
add
add
ret
add
pop
clc
push
fwait
pop
clc
cmc
fs
sub
dec
cmp
add
push
fadds
add
stos
mov
or
push
add
jle
adc
add
js
add
inc
add
jnp
ret
adc
add
add
xlat
cmp
sbb
jl
addr16
cs
knotw
aam
mov
jne
js
jecxz
dec
add
add
xor
mov
outsb
and
fisttps
pop
lcall
clc
push
add
rcll
stc
popf
add
add
lods
notb
inc
clc
mov
or
cmc
jns
clc
lret
pop
js
add
and
add
dec
adc
add
push
add
and
add
add
and
add
in
divl
push
clc
dec
mov
cmp
jp
push
add
ss
int3
in
mov
jnp
mov
cld
in
push
test
clc
jge
clc
sbb
xchg
mov
loop
pop
clc
popa
add
into
mov
outsl
jmp
pop
fs
scas
mov
mov
outsl
adc
add
arpl
add
jae
add
push
add
clc
loopne
cwtl
xabort
test
jno
add
aam
add
mov
push
add
bound
add
add
dec
addr16
mov
clc
repz
add
clc
adc
add
add
xchg
shlb
insl
nop
lret
inc
clc
and
call
push
fcompl
inc
clc
imul
jnp
clc
mov
clc
push
test
dec
inc
add
dec
pop
inc
add
adc
add
add
icebp
bound
add
push
cmp
add
clc
iret
repz
clc
mov
testb
add
push
add
incb
xchg
and
add
add
sar
clc
popa
add
ljmp
clc
cmp
clc
pop
mov
clc
out
test
rclb
popa
add
jo
add
add
mov
add
add
dec
leave
jle
clc
pop
int3
xor
add
add
clc
sbb
and
add
mov
clc
push
and
inc
add
or
ss
xchg
mov
add
cmp
lods
push
sbb
bound
add
mov
dec
adc
add
adc
add
aam
sub
divb
sbb
clc
add
data16
mov
jo
add
add
jp
hlt
cmp
add
jecxz
in
call
add
daa
clc
addr16
sub
push
or
add
add
adc
call
mov
add
add
push
add
loope
ss
clc
add
add
add
pop
lock
xor
add
jg
add
js
add
stos
add
add
push
push
clc
scas
add
cltd
mov
repnz
clc
xbegin
and
cmpsb
clc
xchg
adc
add
clc
aaa
dec
mov
addr16
in
data16
jnp
mov
add
inc
clc
inc
clc
sbb
pop
stos
repz
add
cmp
clc
test
xchg
es
xor
add
mov
movsb
clc
mov
add
out
imul
xor
add
add
mov
add
add
clc
popa
add
sbb
clc
pop
push
insl
addr16
adc
add
and
add
add
je
cmp
mov
loop
adc
add
mov
clc
stos
jl
data16
sarl
push
clc
cmp
jg
cmp
xchg
loopne
int3
clc
ret
add
cli
xchg
out
std
inc
clc
popf
loopne
xabort
popf
mov
add
dec
cli
not
xchg
jmp
clc
dec
xchg
pop
and
cld
inc
clc
sbb
clc
fcompl
cli
sub
add
adc
add
jge
xbegin
clc
rolb
clc
je
rcl
push
add
sub
clc
sbb
add
add
dec
fs
jmp
add
jl
movsl
clc
gs
dec
cmc
inc
clc
rolb
aam
add
cmp
enter
add
imull
mov
fcompl
bsr
sub
add
lock
push
add
adc
add
add
mov
fimull
xchg
iret
into
xlat
dec
mov
lock
add
jge
and
add
jo
add
sub
clc
sbb
or
fcoms
add
stos
xchg
or
add
jae
add
clc
ja
push
add
fisttpll
pop
insl
and
add
clc
push
lods
inc
add
fnstenv
movsb
clc
mov
add
shlb
add
mov
clc
pusha
add
lahf
xor
add
cmc
popa
add
sbb
inc
add
mov
xchg
push
vmovntps
add
lods
sub
nopl
inc
add
push
test
gs
xbegin
add
in
jle
clc
adc
add
add
add
pusha
add
fs
stos
ja
pop
hlt
xbegin
clc
insb
sti
xor
add
add
xor
add
clc
ljmp
add
cmp
aas
jecxz
sbb
mov
loope
rcrl
push
xor
add
add
push
mov
popa
add
sub
clc
clc
movsb
clc
dec
call
test
incb
add
cmp
clc
stc
call
clc
outsl
aad
add
xchg
or
adc
add
add
add
int3
pop
loopne
push
clc
and
jbe
cmp
clc
xor
add
mov
add
or
or
add
clc
outsl
cmpsb
clc
xabort
clc
mov
dec
push
add
mov
clc
mov
stc
testl
clc
in
push
sbb
xor
add
push
insb
jns
ljmp
pop
clc
bound
add
scas
add
add
jmp
int3
sbb
mov
clc
inc
clc
jge
mov
rcr
aaa
pop
out
into
fsubrs
mov
cmpsb
clc
mov
push
jns
movsl
clc
cmp
scas
and
add
fstpt
clc
add
add
add
mov
je
clc
aam
add
push
and
xabort
gs
xchg
push
pop
push
clc
push
add
stos
lock
add
cmp
jmp
mov
add
bound
add
add
addr16
lahf
stc
mov
addr16
mov
add
add
xchg
cltd
sbb
inc
add
jnp
pop
gs
clc
jmp
cs
pop
inc
add
xbegin
push
add
lret
clc
stos
mov
add
adc
add
add
test
movsb
clc
cli
test
imul
test
enter
fistpl
rorb
add
mov
sbb
add
dec
and
add
into
scas
leave
enter
add
inc
clc
mov
sahf
xor
add
add
xchg
imul
add
stc
outsl
aad
arpl
add
xor
add
xlat
testb
push
imul
add
push
fwait
repz
add
add
add
xchg
inc
add
and
add
aas
rcrl
fstpt
imul
fs
inc
clc
jle
pop
add
add
ret
jecxz
fsubl
clc
sbb
mov
je
clc
xchg
mov
jo
add
add
cmp
sbb
sub
push
add
scas
mov
push
add
in
sar
xor
add
mov
clc
add
add
pop
inc
clc
mov
add
xchg
jmp
enter
out
xchg
mov
clc
cmpsb
clc
xbegin
add
clc
mov
clc
fidivs
xchg
adc
add
popf
mov
in
fisubl
add
outsl
cwtl
ret
mov
add
pop
call
mov
push
mov
add
stos
dec
repz
out
inc
add
cmp
call
sub
mov
repz
mov
repz
add
test
bound
add
jo
add
add
mov
add
fsubp
clc
imul
clc
inc
clc
cld
jmp
add
add
xbegin
in
jb
add
push
add
js
stc
rclb
out
daa
clc
xbegin
add
mov
scas
int3
dec
popa
add
push
clc
ja
cmp
inc
clc
dec
cld
mov
jp
dec
or
xor
or
clc
mov
icebp
and
add
xor
add
repnz
lret
nop
decb
mov
add
fmull
add
cwtl
aas
pop
or
int3
pop
or
sbb
add
mov
add
inc
clc
cmp
xlat
dec
int
fisubs
or
pop
push
add
or
clc
push
and
add
sar
mov
pop
clc
icebp
cmp
mov
clc
imul
mov
xor
add
xchg
icebp
or
clc
add
fwait
scas
mov
jae
add
dec
call
push
inc
add
or
out
jmp
fcomi
xchg
adc
add
add
popf
mov
xor
add
add
sub
jno
add
dec
js
fs
jno
add
pop
daa
clc
sarl
push
add
add
mov
jp
psrld
fsubp
clc
in
test
clc
cmp
cmp
fmuls
mov
stos
pop
cmpsb
clc
jmp
xchg
push
testl
fwait
sti
cmp
pop
push
pop
or
jge
jp
clc
fdivrp
data16
and
lret
add
je
xor
clc
pop
clc
and
or
mov
add
add
inc
clc
shl
addr16
pop
mulb
outsb
inc
add
sbb
stos
adc
add
fsubrp
iret
int3
in
cmp
add
inc
clc
jae
add
clc
add
add
mov
mov
scas
jmp
clc
loopne
jo
add
inc
clc
stos
arpl
add
clc
cmp
xor
add
add
adc
add
dec
std
popa
add
je
clc
sub
lret
or
clc
or
mov
add
jecxz
cmp
clc
out
mov
clc
cmp
clc
stos
or
push
clc
pop
cmpsb
clc
push
lahf
dec
cmp
dec
and
jge
add
cmpsb
clc
dec
icebp
and
mov
out
out
cmp
clc
mov
push
lock
mov
clc
hlt
sbb
sub
int3
jecxz
lahf
jns
inc
add
sbb
add
mov
inc
clc
in
cmp
add
cs
shll
clc
dec
addr16
icebp
cmp
clc
push
jne
clc
dec
mov
add
xor
add
clc
pop
jns
addr16
jle
notl
add
or
clc
or
clc
inc
clc
imul
stos
mov
mov
ret
add
xchg
mov
or
stc
das
mov
inc
clc
mov
out
xchg
test
mov
lret
cmpsb
clc
and
add
add
ja
push
push
add
popa
add
test
scas
mov
lcall
inc
add
push
add
mov
dec
jge
clc
aad
add
lcall
mov
cmp
push
stos
sub
add
push
addr16
xbegin
xchg
push
ret
clc
scas
hlt
lret
scas
xchg
pusha
add
jmp
xchg
insl
sar
ret
clc
cmp
imul
sbb
pop
mov
jmp
in
scas
mov
pop
or
jne
adc
add
dec
in
stos
add
add
data16
sbb
add
inc
add
cs
pop
cmpsb
clc
lods
ret
clc
mov
data16
mov
je
roll
dec
imul
mov
ljmp
xlat
push
xor
add
add
clc
jno
add
add
cmp
add
into
int3
dec
sub
clc
jo
add
jae
add
loopne
ja
add
and
add
clc
das
ja
clc
ljmp
clc
nop
clc
fcmovu
mov
call
push
aam
aam
clc
shrb
fidivl
add
icebp
cmc
mov
cmc
or
iret
fldcw
xor
add
clc
test
mov
sub
clc
jl
mov
add
js
loope
pushf
pusha
add
mov
dec
dec
fs
and
add
dec
leave
out
xchg
imul
aaa
xor
add
inc
add
movsl
clc
and
add
clc
push
or
add
inc
add
dec
xor
add
add
stos
negb
stc
std
mov
jecxz
movsl
clc
in
mov
push
inc
add
adc
add
pop
push
add
test
hlt
sar
addr16
out
push
pop
inc
clc
int3
mov
clc
mov
add
insb
pop
clc
jnp
sar
bound
add
mov
ss
push
add
cmp
xbegin
mov
fwait
mov
add
out
fimull
int3
or
clc
test
lret
lahf
call
sub
add
pop
test
clc
pushf
idivl
xchg
mov
clc
or
clc
sar
out
add
add
pop
sub
cmp
mov
clc
enter
jle
push
jle
mov
jmp
jmp
clc
inc
add
cmp
add
pop
in
fstl
add
ds
pop
pop
sar
clc
or
aad
clc
loop
sbb
ja
clc
dec
imul
clc
push
inc
add
std
fiadds
insb
sub
add
in
ljmp
int3
mov
add
add
sub
add
lahf
inc
add
test
add
cmp
clc
jns
clc
or
mov
stos
push
jo
add
add
imull
clc
lods
adc
add
clc
jge
adc
clc
sub
xchg
mov
inc
add
into
cmp
sbb
mov
clc
gs
mov
clc
rorb
test
clc
push
add
push
out
aad
inc
add
cld
inc
add
pop
push
add
je
stc
mov
clc
bound
add
test
sbb
clc
push
clc
jns
or
cmp
add
cmp
clc
pop
lock
sar
ljmp
add
or
shlb
pop
dec
popa
add
es
cmc
insb
sbb
add
and
add
clc
movsl
clc
or
sub
lock
add
clc
imul
or
add
movsl
clc
sub
loopne
mov
add
mov
cmp
dec
mov
mov
sub
adc
add
ret
clc
inc
clc
sbb
mov
pop
xabort
add
xchg
adc
add
clc
sti
pop
xchg
sbb
std
pop
or
and
xchg
mov
sar
add
add
add
dec
or
test
clc
inc
add
and
add
add
into
add
add
sahf
shl
clc
or
dec
inc
clc
xor
add
add
incl
dec
sub
clc
mov
adc
clc
adc
add
clc
push
add
rolb
clc
popa
add
fdivr
mov
out
loope
push
gs
clc
mov
clc
xchg
sahf
push
add
lock
add
adc
clc
xchg
adc
add
add
and
add
add
clc
out
inc
clc
jns
clc
adc
add
mov
lret
lahf
pop
nop
dec
push
add
jg
pusha
add
sbb
inc
clc
mov
ljmp
xor
clc
or
mov
mov
mov
cmp
lret
loopne
fsts
popa
add
jge
adc
add
outsl
inc
add
fwait
push
loopne
pop
es
pop
mov
cwtl
into
out
push
lret
add
lahf
es
xor
add
movsb
clc
jno
add
clc
std
stos
adc
add
sar
add
outsb
leave
aam
inc
add
movsb
clc
test
inc
add
fsubl
add
inc
clc
mov
clc
out
jae
add
pop
mov
ja
jmp
add
add
clc
bound
add
lea
mov
clc
sub
in
repnz
lods
xbegin
cmp
pusha
add
mov
dec
loopne
int3
addr16
push
add
fs
sbb
clc
push
push
sub
add
cmc
push
loopne
fcoms
clc
cmp
push
add
ret
imul
fcompl
scas
fdivrp
cmp
clc
mov
sbb
clc
sub
dec
popf
xchg
std
dec
xor
add
clc
jbe
mov
add
dec
cmpsl
clc
or
nop
lret
movsb
clc
mov
add
mov
clc
out
pop
rcll
add
shr
std
jo
add
outsl
sbb
xlat
fdivrs
and
add
add
add
add
pop
mov
push
cmpsl
clc
or
mov
xchg
sub
add
add
int
rorl
add
add
sar
loope
xchg
xchg
addr16
pop
hlt
sub
jg
clc
cmp
sub
clc
and
add
into
cmp
jno
add
xor
mov
clc
mov
add
add
clc
xor
add
clc
test
cmp
stos
add
add
mov
or
clc
test
sahf
std
mov
xor
add
int
mov
lea
add
sub
stos
or
jnp
add
jmp
pushf
push
add
jge
clc
adc
add
inc
clc
pop
clc
inc
clc
insl
movsl
clc
or
add
add
popl
dec
imul
jmp
cltd
inc
add
cmp
leave
inc
clc
adc
add
fsubr
mov
sahf
cmp
popf
fstps
jo
add
clc
sub
add
or
cltd
aam
xchg
inc
add
sar
in
test
repnz
xlat
xchg
sarb
mov
ljmp
imulb
cmp
aad
dec
or
jge
icebp
jmp
clc
in
dec
adc
mov
xlat
loope
lret
adc
add
adc
add
add
add
mov
add
add
lret
cmp
adc
clc
addr16
leave
add
add
add
leave
xor
clc
dec
scas
lods
nop
mov
mov
dec
add
add
mov
jl
cmp
add
add
clc
shll
test
cli
stos
sub
cmp
data16
jne
lock
sub
clc
xchg
addr16
aas
in
dec
in
xbegin
cmpsb
clc
fcmovu
pop
xchg
or
xor
add
clc
cmp
mov
clc
in
das
inc
add
sbb
mov
cmpsb
clc
cmp
ljmp
add
insl
fbstp
jae
add
jnp
sub
outsl
push
repz
into
cld
das
pop
dec
inc
add
ficoms
add
por
mov
clc
inc
clc
jmp
cmp
in
sbb
mov
insb
ss
cmpsb
clc
add
add
add
and
jle
mov
mov
pop
dec
sbb
das
shrl
movsb
clc
cmp
cmp
gs
jns
pushf
ret
clc
jns
inc
add
sub
dec
mov
add
std
mov
add
jb
add
add
add
push
fs
hlt
adc
add
clc
sti
cmp
add
clc
fcmovnb
clc
popa
add
xor
clc
nop
int3
popf
pop
call
clc
and
add
clc
jbe
lret
daa
clc
pop
adc
add
enter
and
push
cmp
clc
pop
dec
iret
push
inc
add
mov
mov
add
sar
out
sub
clc
stos
bswap
jnp
clc
bound
add
add
push
in
add
add
lcall
add
stos
pushl
lret
xchg
ja
fmuls
clc
mov
aam
clc
bound
add
jmp
add
decb
pop
es
loope
out
int
inc
add
mov
push
add
dec
push
and
add
cmp
add
mov
pop
jnp
stos
xchg
test
pop
sar
test
cmp
scas
iret
cmc
add
add
cmp
mov
clc
sahf
jb
add
clc
imulb
jg
pop
mov
mov
add
mov
push
add
sub
and
mov
inc
add
xbegin
add
sub
inc
add
push
clc
repz
scas
add
rolb
mov
xchg
mov
add
inc
add
es
inc
clc
sub
push
clc
loopne
push
sub
clc
sub
xchg
outsl
mov
clc
sub
or
lahf
xchg
jno
add
add
add
add
add
inc
clc
mov
clc
lods
sar
mov
cmovg
add
inc
clc
stc
ljmp
cmp
add
dec
sub
arpl
add
sub
jae
add
sahf
cld
in
sub
add
xchg
mov
sub
add
jne
clc
imul
add
add
add
add
test
jg
jle
lahf
in
sbb
add
mov
jp
clc
pop
clc
popa
add
out
cld
repnz
insb
jge
cs
add
add
enter
clc
lret
xor
inc
clc
aaa
call
clc
daa
clc
xchg
xlat
lahf
jae
add
dec
mov
lods
pop
push
push
clc
mov
xbegin
mov
add
cmc
das
ret
clc
push
clc
jecxz
in
loopne
std
cmp
clc
jge
sub
test
lret
cmp
clc
in
mov
add
add
mov
clc
sub
sbb
add
out
ret
clc
hlt
jge
xchg
scas
jnp
push
test
xor
add
ret
clc
int
iret
pushf
sub
mov
sub
clc
cmp
mov
stos
pop
bnd
add
lea
add
xabort
add
test
into
sub
mov
pop
addr16
mov
add
add
add
aad
clc
movsb
clc
push
clc
pop
fistpl
and
add
xor
add
mov
clc
dec
cld
rorl
add
clc
push
adc
shlb
dec
push
pop
and
mov
add
jle
jo
add
rorl
jns
repz
mov
in
fs
cmpsl
clc
lock
or
movsl
clc
cld
or
cmp
sbb
add
push
add
mov
jb
add
lea
mov
push
add
aam
es
or
xchg
sar
clc
add
add
lret
arpl
add
jb
add
sbb
clc
xbegin
imul
jl
clc
jp
pop
cmp
lea
adc
add
lcall
mov
sub
inc
add
add
add
sbb
aam
or
pop
fcomps
cmp
push
loope
mov
clc
push
add
fstl
add
xchg
ljmp
adc
xor
add
int3
fistpl
sbb
fbld
xchg
mov
clc
jno
add
clc
movsl
clc
or
add
mov
cwtl
fisubs
clc
lods
sub
cltd
cmp
add
fdivr
es
sbb
push
clc
dec
xchg
cmp
dec
lods
inc
clc
cmpsl
clc
cmp
add
sarl
movsb
clc
jb
add
movsb
clc
inc
clc
mov
ljmp
sahf
inc
add
ljmp
divl
out
dec
mov
lea
sbb
in
es
pop
cmp
jnp
adc
add
dec
ss
mov
add
mov
add
out
mov
clc
cmp
xabort
clc
push
mov
aas
ret
clc
cmp
jnp
clc
jbe
pop
mov
rorb
xabort
clc
and
add
jb
add
into
jnp
add
add
clc
rcrb
imul
mov
movsb
clc
std
jae
add
mov
daa
clc
pop
out
inc
add
cltd
dec
pop
std
jg
add
in
cmp
clc
push
add
lods
mov
int3
enter
mov
test
add
mov
sub
std
cmp
add
test
xchg
or
aas
adc
xor
adc
add
add
add
xchg
mov
sub
push
dec
loopne
loopne
pusha
add
adc
add
add
clc
xchg
jnp
das
jmp
add
clc
sbb
out
je
xor
add
into
mov
cmpsb
clc
pop
sbb
jl
clc
cmp
lods
test
cmp
pop
xabort
mov
cwtl
cs
fidivs
add
iret
in
sbb
fwait
outsl
mov
inc
clc
jae
add
clc
mov
pop
insb
cmp
or
sub
add
rcl
jne
adc
add
add
jae
add
clc
cmp
add
mov
add
stc
inc
clc
clc
loop
cmp
sbb
test
mov
in
into
enter
add
pop
data16
sbb
cwtl
push
dec
pop
xchg
lea
or
insl
fnstcw
rcrb
sbb
clc
in
repz
in
push
add
push
stos
imul
loop
pop
xor
add
clc
lods
dec
xor
add
add
fs
xchg
ffreep
clc
cmp
lret
in
pop
aam
inc
add
pop
xor
sbb
add
add
or
add
jge,pt
clc
adc
add
inc
clc
lahf
mov
js
clc
out
mov
add
mov
jp
add
clc
lcall
fidivrs
clc
jmp
clc
pop
mov
es
mov
add
xor
add
clc
fst
testl
inc
clc
dec
fadds
clc
and
add
ret
clc
cmc
movsl
clc
xabort
mov
ret
clc
into
lret
ja
mov
pop
inc
add
dec
es
mov
or
or
add
mov
imul
cld
push
ret
jg
or
bnd
add
in
jl
cs
add
adc
clc
addr16
fisubl
clc
pop
jg
add
lret
inc
clc
mov
clc
ljmp
jg
pusha
add
xchg
add
mov
add
add
add
clc
jmp
ficoms
push
lcall
clc
data16
scas
lcall
clc
mov
add
pop
clc
xlat
fmul
dec
lock
clc
psubusb
clc
cmpsb
clc
std
jp
clc
into
sbb
inc
clc
aam
mov
gs
push
clc
cmp
add
movsl
clc
xbegin
clc
push
lret
aaa
push
sub
popf
cltd
xor
add
rep
fwait
jmp
scas
fwait
sub
ds
inc
add
jnp
enter
imul
mov
or
jne
loopne
pop
mov
add
stos
enter
clc
xchg
and
add
ljmp
arpl
add
add
add
add
add
bound
add
or
aaa
aam
add
add
mov
nop
notl
cmp
add
dec
pop
mov
dec
in
xchg
cmp
test
inc
clc
xlat
repnz
shrb
cmpsb
clc
addr16
loop
or
clc
and
add
and
add
jg
in
xchg
movsl
clc
insb
add
xor
add
clc
xchg
pop
inc
add
and
add
add
xchg
mov
addr16
imull
push
add
jg
daa
clc
or
int3
es
sub
clc
inc
clc
in
mov
pop
clc
mov
clc
imul
shlb
dec
mov
ret
clc
clc
mov
clc
call
fwait
jmp
movsl
clc
lods
xor
add
outsb
dec
xchg
fs
mov
push
xor
cwtl
inc
clc
inc
clc
ss
mov
xchg
pushf
outsb
xor
or
clc
jo
add
push
pop
or
add
sub
cmp
out
enter
sti
mov
add
sbb
lcall
pusha
add
cmp
jno
add
mov
sbb
push
ret
mov
and
imul
add
clc
loope
loope
lcall
or
clc
fsubl
add
cmp
add
aas
xchg
jo
add
inc
add
xchg
gs
add
cmp
sahf
inc
clc
inc
add
sbb
jge
sahf
inc
add
bound
add
std
arpl
add
add
test
data16
dec
adc
add
add
sub
sbb
adc
clc
push
add
xabort
scas
xchg
sub
mov
clc
movsb
clc
stos
aas
lret
fs
xchg
std
cwtl
sbb
clc
inc
clc
out
xchg
es
aas
call
in
xor
add
pushf
js
xor
add
xor
add
push
dec
add
add
fstps
fisubl
das
sbb
xor
add
shlb
add
pop
ds
dec
add
add
ss
sbb
lahf
xor
add
pop
adc
sbb
clc
mov
jb
add
add
je
add
adc
add
cli
fwait
sub
bound
add
add
push
mov
mov
clc
fs
ss
test
push
sbb
push
ret
test
cmpsb
or
clc
cs
out
in
decl
jmp
push
jp
xor
add
adc
add
add
cmp
add
add
ret
clc
sarl
add
push
push
ret
test
sahf
int
mov
add
stos
cmp
mov
push
insb
cmp
clc
enter
add
clc
pop
movsb
clc
inc
clc
enter
jo
add
sub
sub
or
cmp
int
clc
mov
add
rol
clc
xor
add
dec
adc
pushf
inc
clc
xchg
in
xor
add
cli
loope
pop
fwait
insb
das
push
gs
aad
push
add
loopne
fsubl
clc
or
mov
mov
pop
pop
add
and
clc
rcrb
out
xchg
js
adc
add
mov
jmp
sub
xor
stos
mov
clc
xor
add
jne
add
ss
sar
in
mov
add
mov
jo
add
clc
insl
cmp
clc
mov
xor
add
xchg
pop
mov
add
gs
push
clc
dec
inc
add
or
sti
cmp
add
cs
imul
push
jbe
test
mov
add
push
enter
add
jge
mov
fwait
jmp
outsl
in
push
add
das
in
xbegin
push
fs
in
jb
add
cmpsb
clc
pushf
inc
clc
xchg
scas
insb
aam
lret
sbb
mov
pop
or
out
hlt
mov
push
add
inc
clc
push
pop
data16
aam
clc
aaa
jns
clc
jge
rol
clc
and
dec
lret
sbb
add
lock
ret
xor
add
xor
add
xor
add
push
cmp
repz
add
fwait
jmp
add
mov
clc
out
imul
clc
out
jb
add
sbb
pusha
add
cmp
mov
jae
add
aaa
out
xor
clc
imul
add
insb
out
adc
add
add
adc
add
in
push
pop
fwait
jmp
dec
insb
fwait
add
push
add
arpl
add
mov
sbb
push
ret
jp
sub
loope
lret
ret
movsb
clc
mov
clc
cmp
add
mov
clc
inc
clc
mov
xor
add
xchg
add
add
cld
xor
add
add
xchg
inc
add
xchg
ret
clc
hlt
inc
clc
or
sar
clc
cld
stos
xchg
aam
add
jle
clc
sar
jge
cmp
add
mov
push
sbb
test
mov
add
add
add
in
xabort
add
movsb
clc
cmp
xchg
inc
add
mov
cmp
add
mov
or
add
mov
cld
push
ret
outsl
nop
enter
add
clc
mov
fs
leave
scas
data16
imul
clc
pop
xlat
mov
clc
and
add
arpl
add
sar
mov
xchg
jns
mov
add
add
add
fwait
jmp
sahf
and
mov
sbb
xchg
fsubl
add
xchg
fwait
mov
mov
clc
stos
aaa
push
xor
add
cmc
out
stos
or
out
ljmp
test
xchg
pop
pushf
jbe
leave
cmpsl
clc
xor
add
add
fs
stos
int3
jle
clc
lods
push
add
jne
clc
mov
clc
inc
add
ds
clc
xor
add
or
hlt
cld
imul
and
gs
inc
clc
cmp
add
dec
mov
mov
clc
or
inc
add
push
pushf
or
pop
push
mov
push
xchg
lahf
outsl
adc
add
cltd
push
jmp
inc
clc
xlat
pavgb
pop
dec
push
mov
aas
add
push
ret
sub
fs
add
popf
clc
mov
cmp
clc
pop
rcr
gs
or
mov
add
insl
cmp
jg
testl
clc
mov
loopne
sub
jl
in
pop
out
pusha
add
cmc
jge
add
insl
pushf
jbe
test
xchg
push
add
mov
sub
fwait
jmp
sub
aaa
scas
push
movzwl
fwait
jmp
insb
subb
push
dec
xor
add
mov
xbegin
clc
cmp
clc
decl
mov
adc
jmp
cmp
imul
iret
clc
mov
add
and
dec
cmp
sbb
dec
add
jo
add
fidivrl
imul
pop
shll
clc
js
dec
std
dec
mov
outsb
int
clc
scas
xor
add
loop
sti
pop
push
jo
add
outsl
shll
mov
add
pop
push
call
push
jmp
cmpsb
clc
popa
add
mov
lcall
xchg
fxtract
daa
clc
cwtl
xchg
xchg
jmp
pusha
add
inc
add
mov
add
bound
add
add
scas
test
push
inc
clc
dec
mov
jle
clc
jns
jp
scas
popf
ds
and
add
push
fwait
jmp
fwait
es
cmp
fimull
add
paddw
add
pop
push
add
sub
add
sbb
lock
and
add
add
clc
in
push
add
clc
xabort
adc
add
add
aad
add
sahf
cmp
clc
pop
mov
pop
inc
clc
cmp
push
add
fwait
jmp
pop
sti
dec
cltd
pop
sub
cmp
clc
push
sub
adc
add
clc
aam
xor
stos
mulb
add
clc
cmp
leave
push
lahf
rclb
stos
mov
mov
add
mov
add
sahf
push
iret
cmp
es
jne
push
add
jecxz
jae
add
add
add
add
inc
clc
inc
clc
stc
xchg
sub
add
jne
add
cmpsb
or
dec
out
add
add
mov
cmp
pushf
hlt
jno
add
adc
add
clc
mov
rcrl
fs
push
adc
add
jbe
data16
xchg
movsl
clc
mov
fscale
cmpps
add
dec
daa
clc
cmpsb
clc
xchg
mov
clc
adc
add
add
mov
add
add
add
push
add
fs
and
ja
imul
mov
fwait
jmp
jp
sbb
inc
clc
xlat
loop
sbb
cmpsl
clc
inc
add
pushf
mov
lods
sbb
jmp
lea
ja
sub
mov
clc
rorl
add
cld
push
ret
and
add
add
cmpsl
clc
gs
push
clc
and
add
add
pop
pop
cli
jae
add
mov
clc
sahf
mov
xor
fwait
jmp
add
fsubr
in
and
add
push
add
inc
add
idivl
icebp
test
add
sbb
movsl
clc
dec
xlat
pop
push
sbb
movntq
out
push
insb
in
std
das
sar
leave
loop
pop
clc
xor
add
ret
clc
fmulp
clc
fisubrs
jle
dec
pop
out
dec
sub
daa
clc
mov
add
fwait
jmp
lock
lcall
jae
add
incl
inc
clc
lcall
add
pop
and
add
sbb
pop
lcall
add
test
inc
add
fwait
jmp
sub
and
add
adc
add
and
add
into
add
add
shll
sub
add
or
data16
dec
adc
add
clc
push
add
push
sub
add
stos
pop
mov
clc
fcomip
lret
mov
fisubrs
add
popf
xchg
js
clc
js
dec
and
add
clc
cmp
cmp
push
mov
cld
push
ret
sbb
inc
insb
insb
fwait
jmp
cmpsb
xchg
jecxz
jge
or
mov
clc
xchg
sbb
mov
push
fwait
jmp
xchg
or
ljmp
cld
push
ret
test
add
jo
add
xchg
bound
add
add
inc
add
mov
pop
cwtl
lock
adc
add
clc
inc
clc
sub
js
cmp
xor
add
jne
add
cmc
sahf
dec
sar
push
sub
mov
pop
cmp
add
or
clc
pop
in
jno
add
mov
cmp
add
add
push
pop
cmp
jg
sahf
repnz
rclb
add
cmp
add
mov
aad
clc
push
fisubl
push
add
icebp
call
xchg
fst
sub
xor
add
add
sub
outsb
mov
aad
push
mov
inc
add
jmp
add
xabort
clc
movsl
clc
mov
xchg
cmp
mov
add
clc
rcrb
adc
add
int3
push
call
add
imul
lods
in
in
cmp
dec
cmp
clc
dec
enter
add
fldl
add
cwtl
aam
sub
clc
add
add
add
add
sti
fidivl
or
pop
jge
dec
dec
xchg
mov
pop
sti
hlt
scas
xchg
jecxz
daa
clc
jecxz
push
add
sbb
add
mov
add
pop
mov
mov
push
sub
test
sub
push
cli
clc
pushf
xchg
mov
jne
insb
inc
clc
test
aad
jg
xor
add
push
fwait
jmp
test
sarb
sub
clc
fstpl
add
js
dec
dec
aas
pop
or
jnp
movsl
clc
cli
std
movsl
clc
mov
shlb
add
movd
dec
int3
insb
or
jg
xbegin
clc
xchg
insb
cmc
clc
fisttpl
mov
add
xor
add
cmpsl
clc
mov
vshufps
push
cld
push
ret
sub
fwait
call
sar
out
inc
add
and
add
clc
inc
clc
mov
pusha
add
inc
add
popf
test
cmp
push
add
lock
mov
add
add
add
add
cmp
fwait
jmp
sub
cmp
nop
stos
add
xchg
push
je
fwait
inc
add
push
fmul
lods
sbb
shrl
les
push
ret
xor
fistpl
lods
xchg
lret
xor
add
fwait
ja
dec
stc
movsl
clc
aaa
fistl
add
aam
movsl
clc
data16
sar
mov
sbb
add
inc
add
inc
clc
mov
add
pop
sti
outsl
jae
add
fwait
inc
add
pop
push
add
add
push
clc
push
add
pop
fcoms
add
imul
clc
inc
add
cmpsl
clc
mov
sub
clc
pop
cmp
sti
ret
clc
icebp
mov
aam
xor
add
clc
fisttpll
cld
and
add
pop
scas
sub
fcomps
clc
mov
add
add
clc
mull
add
clc
sbb
clc
sar
and
add
add
jecxz
sbb
test
lea
add
add
add
xbegin
dec
push
add
dec
xchg
push
dec
xabort
xchg
leave
arpl
add
add
add
sub
add
loopne
pop
cltd
dec
sar
clc
dec
xor
add
add
cmp
fwait
jae
add
add
clc
fcomi
dec
ss
clc
cmp
add
add
xchg
ficoms
add
mov
clc
mov
clc
push
loop
pop
sub
add
xchg
es
push
push
cld
push
ret
sub
sahf
push
rcl
fwait
insl
jae
add
data16
mov
add
stos
push
inc
clc
in
ffree
clc
sahf
cwtl
repnz
and
add
dec
popf
es
push
xbegin
add
loopne
add
cmp
cmpsb
clc
cwtl
scas
aad
add
fwait
jmp
test
test
push
add
fwait
jmp
cli
dec
out
inc
clc
lods
imul
and
mov
outsl
adc
add
in
pop
mov
inc
add
mov
out
mov
clc
pop
in
ja
gs
daa
clc
vcvtdq2ps
mov
add
sbb
clc
popf
aad
add
push
add
mov
push
add
aaa
push
dec
mov
cmp
mov
add
iret
push
xabort
dec
das
sbb
mov
clc
push
dec
sbb
scas
out
in
adc
add
data16
cmp
and
sbb
pop
fwait
jmp
inc
sub
jg
shll
decl
inc
add
sub
nop
mov
jb
add
add
out
xor
add
mov
sar
push
add
inc
add
inc
clc
clc
add
mov
loopne
xabort
in
inc
clc
sub
push
jge
add
sub
shrb
mov
or
clc
mov
sahf
sar
mov
jg
ret
mov
add
mov
add
dec
movsb
clc
adc
add
jle
add
add
das
stos
mov
ret
clc
and
add
pop
clc
stos
and
add
clc
mov
les
fwait
jmp
dec
dec
stos
cmp
xchg
cmp
mov
mov
add
push
add
in
fs
or
sub
lret
flds
mov
push
push
add
sbb
add
sub
add
jg
dec
sub
clc
test
pop
lock
add
clc
daa
clc
enter
test
xchg
cmp
imul
clc
pop
data16
cmp
shlb
clc
mov
add
add
std
cmp
arpl
add
clc
push
push
jg
sbb
fwait
jmp
dec
out
dec
jne
add
mov
add
ja
clc
and
add
xor
add
imul
frstor
out
sub
jbe
clc
dec
lods
add
add
jnp
mov
and
pushf
mov
add
sysenter
cmp
jl
sub
sti
test
sbb
das
nop
mov
clc
addr16
xabort
insl
mov
clc
jno
add
add
clc
sub
clc
add
add
clc
mov
add
stc
sub
clc
jo
add
lcall
aam
push
add
add
fwait
dec
cmp
add
jns
add
jbe
sub
add
lock
sbb
mov
inc
add
sub
cmpsl
clc
in
xabort
dec
outsb
sub
add
jg
add
pop
or
push
add
xor
add
pop
push
add
dec
mov
bound
add
iret
roll
clc
int3
daa
clc
sub
lock
add
push
aas
or
and
add
mov
clc
arpl
add
ja
aam
jge
clc
jmp
add
jmp
add
cmp
clc
test
mov
add
test
movsb
clc
and
add
inc
clc
add
add
add
mov
lret
pop
inc
clc
pop
and
add
rolb
add
push
mull
inc
add
sub
and
add
add
stos
sub
lock
clc
sbb
add
adc
add
inc
clc
xchg
shll
pop
xchg
stc
sub
add
fisttps
aaa
pop
sub
shll
cli
enter
call
fwait
jmp
dec
pop
push
add
xchg
into
push
jmp
fwait
jmp
inc
loope
xor
cmp
add
add
test
insl
and
add
jb
add
shl
clc
in
ljmp
clc
sbb
add
sub
lahf
sar
clc
imul
daa
clc
mov
dec
mov
mov
add
aam
out
sub
das
push
add
adc
cmpsb
clc
pusha
add
bnd
mov
sbb
clc
dec
mov
clc
and
fwait
pop
into
fmuls
cmp
aad
and
clc
incb
in
aaa
jmp
cmp
add
mov
add
pusha
add
cmp
mov
clc
push
add
scas
fstl
mov
movsl
clc
lods
cmpsl
clc
int
and
add
das
or
loope
cmp
clc
pop
push
clc
mov
mov
lahf
push
bound
add
scas
lods
fsubrs
jbe
fwait
jmp
inc
or
in
enter
jmp
je
clc
adc
add
sub
stos
cltd
aas
out
xor
add
das
xchg
pusha
add
cld
xbegin
ss
add
aad
add
test
mov
clc
cmp
fisubrl
enter
and
add
mov
add
loopne
into
inc
add
dec
rcrb
inc
clc
push
popa
add
icebp
int3
mov
clc
push
xlat
or
leave
adc
add
add
push
cmp
clc
jo
add
mov
pop
or
jmp
pop
xchg
sbb
dec
jns
movsl
clc
or
push
and
add
clc
movsb
clc
rolb
mov
mov
add
inc
clc
cmp
jl
xchg
aaa
xor
add
xchg
mov
clc
jecxz
cmp
arpl
add
and
mov
jne
add
jb
add
add
add
add
add
add
add
pop
clc
cs
cwtl
adc
clc
ret
clc
in
mov
clc
inc
clc
xabort
clc
pop
mov
mov
clc
cs
or
add
cmp
clc
sub
clc
add
add
out
lahf
adc
add
fdivr
pop
mov
cmp
clc
add
xchg
out
mov
push
mov
fdivrl
loope
es
test
clc
sbb
clc
clc
insb
out
and
push
clc
pop
ret
clc
lahf
adc
add
rorb
or
add
clc
inc
add
mov
push
sbb
hlt
js
xchg
jae
add
test
adc
add
add
repnz
fnstsw
xchg
test
repnz
or
scas
cmp
add
xchg
xchg
pop
call
stos
mov
add
or
mov
push
add
add
ret
add
lahf
pop
jle
cmp
pop
pop
jne
rorl
clc
adc
add
notb
adc
add
clc
xor
add
icebp
test
jo
add
add
ret
clc
out
jb
add
fwait
dec
clc
stc
dec
bnd
add
add
mov
clc
mov
add
fwait
jmp
mov
arpl
add
mov
cmp
dec
into
jge
clc
fildl
add
add
icebp
mov
out
nop
test
jmp
clc
pop
movsb
clc
aad
clc
dec
sti
mov
add
stos
push
in
xbegin
add
stc
sub
jmp
xchg
sbb
adc
add
cwtl
or
cmp
push
je
cmp
add
push
add
xor
add
add
push
mov
add
add
add
in
dec
pop
test
cli
and
addr16
mov
sub
clc
pushf
fdivr
pop
or
add
clc
push
dec
jo
add
add
inc
clc
insb
test
rcrb
pop
clc
sbb
push
fwait
jmp
test
clc
mov
clc
fdivrl
js
jmp
inc
add
decb
scas
jbe
clc
add
add
push
adc
add
jp
add
jb
add
clc
jmp
sub
cmpsb
clc
add
data16
push
inc
add
add
add
add
lea
jle
mov
daa
clc
adc
add
popa
add
out
jl
cmp
jne
clc
or
in
imull
cmpsb
clc
lods
jle
icebp
xor
add
cmpsl
clc
mov
loope
or
add
fwait
lret
add
add
je
fwait
jmp
cmc
mov
dec
dec
cmp
clc
inc
clc
notl
add
lcall
push
adc
jnp
dec
pop
ret
clc
je
add
mov
fwait
stc
mov
sar
clc
jne
push
add
add
clc
imul
hlt
dec
cmp
push
or
jmp
sub
dec
call
in
pusha
add
popf
xor
add
jo
add
xor
pop
xchg
push
add
shrb
dec
xchg
add
mov
add
add
ret
clc
test
test
sbb
sub
clc
push
sub
clc
outsl
fisttpll
aaa
pop
daa
clc
lods
mov
mov
icebp
or
rorb
fnsave
add
int
insl
pop
addr16
xbegin
add
in
sbb
or
clc
js
insb
mov
dec
add
sub
xor
sub
add
add
add
inc
add
inc
add
inc
clc
xor
add
clc
out
inc
add
arpl
add
clc
push
jmp
fwait
jmp
and
call
int
fiadds
addr16
mov
or
dec
loopne
adc
push
mov
clc
and
shl
cli
lcall
xbegin
add
stos
push
add
sar
jns
test
sub
xchg
xabort
out
cmpsl
clc
std
sub
add
adc
add
clc
ja
leave
scas
popa
add
notb
add
add
int3
sub
push
add
testb
xabort
and
mov
add
aas
insb
cmp
mov
adc
add
test
jmp
ljmp
jle
jmp
adc
add
clc
mov
pop
push
mov
cld
push
ret
das
insb
xor
add
add
js
clc
xbegin
pop
int
xchg
dec
int
movsl
clc
sbb
inc
add
xchg
pop
push
add
fwait
jmp
sub
cmp
adc
add
clc
mov
clc
sti
cld
loop
add
add
push
add
cmp
pop
push
add
jae
add
add
clc
cwtl
xchg
push
add
dec
sbb
test
lcall
ljmp
adc
add
add
mov
add
jbe
clc
or
jl
popf
loop
inc
add
mov
pop
rclb
add
aad
pop
xor
add
pop
test
cmp
mov
jno
add
add
lea
cmp
js
add
inc
clc
leave
incl
and
add
add
ret
add
ljmp
icebp
inc
add
push
clc
test
in
popf
add
add
xor
jne
clc
sbb
pop
in
mov
clc
adc
add
clc
mov
add
push
gs
cld
and
add
add
pop
jl
add
push
mov
jg
cmpsb
es
cmc
and
daa
clc
xchg
mov
add
inc
add
xor
add
add
popa
add
sub
clc
bound
add
add
ret
clc
sbb
add
pmulhw
pop
cwtl
push
into
adc
add
add
mov
mov
mov
fmuls
test
aad
je
lahf
imul
mov
clc
sbb
add
fs
aam
xor
add
cmp
call
inc
clc
pop
mov
fwait
sarl
lock
jmp
imul
repz
jmp
mov
cld
incl
jmp
ja
sub
mov
jmp
adc
xbegin
jp
add
add
cmp
aam
add
add
add
enter
clc
xchg
cld
adc
mov
add
xor
add
clc
mov
adc
add
clc
fistpll
pusha
add
ss
iret
add
add
add
mov
sub
clc
in
and
mov
movsb
clc
dec
jge
clc
cmp
clc
cld
imul
jp
mov
xchg
xor
add
clc
xchg
daa
clc
xor
add
add
frstor
add
cs
test
xbegin
mov
push
nop
cmp
lret
add
pop
cmp
clc
dec
bound
add
xchg
inc
clc
push
data16
xchg
cld
movsb
clc
data16
cmpsb
clc
in
inc
clc
jecxz
add
mull
add
ds
scas
mov
in
and
add
pause
mov
dec
popf
mov
add
push
add
mov
add
sub
clc
aas
rorl
clc
loopne
mov
cwtl
add
add
add
testb
add
test
in
jno
add
dec
xchg
insl
into
dec
jnp
test
push
in
or
lret
clc
test
jl
add
add
cmp
adc
add
clc
xchg
in
push
or
stc
clc
add
add
xor
add
clc
xchg
stos
xor
add
ljmp
clc
fwait
or
and
add
adc
add
add
movsl
clc
icebp
pop
loop
lea
xchg
mov
mov
xor
add
jns
inc
clc
jo
add
loop
psllw
add
dec
cmp
clc
xchg
mov
je
clc
and
add
clc
sub
mov
lret
sar
add
cwtl
fstpl
lea
add
pop
jbe
loope
lahf
mov
clc
ret
clc
insb
fadds
ret
clc
cmp
cmp
cmp
add
jle
test
stos
testb
add
inc
clc
aam
clc
fwait
bound
add
mov
xchg
in
jbe
popa
add
add
add
sub
test
pop
bound
add
or
rcrl
inc
add
xor
outsb
pop
imul
add
clc
sarb
xor
fildl
and
add
or
inc
clc
outsb
xor
add
mov
cld
push
ret
insb
test
mov
push
fwait
jmp
sub
insb
sub
int
and
add
clc
xor
add
add
clc
mov
add
add
jmp
jmp
aas
inc
adc
jmp
xchg
push
add
lock
add
clc
jl
mov
mov
inc
add
popa
add
data16
dec
push
sbb
ret
push
xchg
lea
push
mov
fwait
jmp
sub
aaa
inc
sbb
test
pushf
jbe
mov
fwait
jmp
and
jno
test
add
scas
sub
std
gs
mov
xchg
pop
rorl
mov
addr16
out
dec
in
and
imul
pusha
add
test
inc
xchg
inc
add
scas
push
es
std
sub
or
add
loope
insb
mov
pop
inc
clc
push
mov
icebp
cli
icebp
es
das
pop
notb
push
clc
ret
clc
inc
add
arpl
add
jmp
jg
add
ljmp
into
push
add
int
jmp
fwait
jmp
cwtl
fisttpll
xchg
mov
adc
add
clc
inc
add
pop
mov
clc
repz
negl
add
xchg
data16
cmp
movsb
clc
xor
add
clc
dec
call
mov
sub
jmp
sub
cmp
or
dec
jb
add
clc
mov
ja
fadds
add
out
cltd
pop
clc
mov
loope
mov
push
clc
movsb
clc
push
ss
or
add
out
mov
clc
and
add
mov
push
add
mov
cmp
lods
mov
clc
ss
mov
daa
clc
adc
add
adc
add
adc
add
add
clc
jno
add
clc
sbb
add
jecxz
push
clc
scas
or
xchg
lods
test
repz
int3
std
test
fcoml
cmp
fs
inc
add
mov
clc
std
xor
add
clc
pop
sbb
or
pop
lret
jmp
or
add
jnp
mov
jge
clc
adc
add
mov
push
push
cld
push
ret
push
add
sub
add
add
add
clc
sbb
std
int
clc
icebp
cmp
add
or
mov
lahf
in
lret
add
xchg
leave
lret
clc
sbb
fwait
jmp
sub
aaa
nop
sarb
or
add
add
push
mov
sub
stos
add
add
dec
cmp
or
clc
pop
ljmp
pop
es
sub
divl
add
test
sbb
aaa
sbb
cwtl
cmpsl
clc
aas
cmp
jae
add
inc
add
data16
fiaddl
out
jmp
call
clc
push
clc
in
cmp
ror
lock
dec
outsl
sbb
add
outsl
mov
inc
add
xor
xor
clc
pop
fnsave
or
add
mov
add
mov
sub
clc
xor
adc
add
mov
add
cmp
lea
ror
cld
push
ret
add
mov
mov
add
mov
xor
dec
into
mov
mov
sbb
dec
adc
push
ret
test
clc
fimuls
clc
popa
add
and
add
ljmp
dec
push
stc
test
push
ret
sbb
movsb
sub
clc
xchg
push
clc
in
xor
mov
clc
or
clc
fnsave
divb
add
int
shlb
popa
add
cmp
sbb
xor
add
mov
iret
popl
add
or
pop
scas
inc
fwait
jmp
insb
mov
cmp
add
push
add
lock
clc
push
pop
clc
adc
add
add
out
iret
push
add
and
add
jge
insb
cmp
add
cmp
mov
clc
dec
test
adc
addr16
cmp
clc
sbb
notb
clc
jp
fdivp
xor
push
add
or
fbld
add
test
es
in
arpl
add
mov
std
addr16
xchg
js
add
insl
in
imull
add
xlat
jle
mov
js
enter
clc
fisubs
clc
xchg
or
jg
clc
pop
arpl
add
clc
add
cmp
scas
mov
ds
mov
fbld
data16
push
pop
or
add
sbb
push
or
add
movsb
jg
bswap
dec
popa
add
lock
add
ret
clc
cmp
out
or
add
add
add
enter
mov
sarb
and
add
std
mov
adc
add
out
push
xchg
cld
ljmp
cltd
shrl
in
or
mov
fwait
jmp
insb
es
dec
popa
add
fdivp
notb
add
jae
add
add
add
mov
add
pop
aam
xor
add
dec
jo
add
fbld
add
adc
add
dec
fdivrs
xor
outsl
jno
add
out
inc
add
sar
stos
repz
add
repz
add
or
inc
clc
and
add
cmp
add
xor
add
lret
cmp
pushf
fisubl
clc
test
mov
add
gs
lret
add
out
dec
xor
add
add
jae
add
clc
push
mov
clc
push
clc
jae
add
pop
cmp
xchg
push
add
push
mov
fwait
jmp
sub
sub
push
jmp
sub
ja
pushf
int
or
fwait
pop
sbb
loop
dec
dec
fidivrl
add
sub
xchg
imul
popf
in
je
jae
add
mov
fwait
jmp
movsb
nop
lods
insb
mov
jo
add
lock
add
sbb
fwait
jmp
adc
add
fwait
jmp
sbb
add
clc
sub
das
mov
clc
xchg
inc
clc
mov
sbb
add
insb
add
xor
xor
add
pop
adc
clc
clc
mov
clc
push
ret
clc
jb
add
clc
mov
add
sub
clc
mov
clc
pushf
loopne
fisubl
jecxz
sub
fcmovu
notb
add
neg
mov
add
mov
in
push
push
cld
push
ret
sbb
jno
adc
add
add
pop
jns
clc
mov
addr16
mov
jne
call
clc
or
dec
xor
sub
or
add
cmp
add
dec
xor
mov
clc
lahf
sbb
hlt
lahf
inc
clc
aad
pusha
add
dec
pop
cli
cmp
add
pop
mov
pop
das
jo
add
jns
pop
mov
clc
rclb
add
xor
add
adc
add
jmp
push
ret
sub
das
sub
jmp
xor
add
mov
add
scas
mov
int
clc
insl
jbe
mov
fwait
jmp
cmp
jg
js
mov
cmp
add
xor
into
filds
clc
repz
outsl
aam
add
cltd
sbb
jmp
dec
add
jp
sbb
clc
leave
cmp
sahf
jnp
stc
test
and
add
sub
push
ret
jg
xchg
xor
loopne
jnp
lods
mov
clc
cwtl
sbb
adc
add
movsb
clc
mov
or
fs
cmp
movzwl
cld
push
ret
jp
shlb
jp
pusha
add
cwtl
aaa
or
popf
adc
add
mov
pushf
mov
fildl
and
push
ret
jno
test
add
and
add
lret
xchg
jmp
add
in
es
jmp
dec
mov
mov
clc
aam
clc
mov
imul
clc
xor
add
lahf
jnp
push
add
loopne
adc
add
add
clc
test
cmp
sbb
mov
dec
ds
mov
cld
push
ret
xchg
sub
adc
add
add
clc
sub
add
icebp
or
add
dec
dec
decl
test
jmp
stos
js
jmp
popf
sbb
add
clc
std
xor
add
inc
clc
into
lcall
or
pop
mov
xchg
lods
push
add
sbb
mov
add
imul
clc
add
add
push
jg
push
cld
push
ret
imul
clc
popa
add
dec
movsb
clc
mov
leave
dec
mov
add
add
xor
add
stos
shr
or
loop
mov
sub
push
clc
mov
mov
clc
dec
out
dec
gs
int3
xchg
es
add
add
push
movsb
clc
lock
mulb
stc
lahf
repnz
cmp
call
fwait
jmp
imul
xchg
mov
and
xchg
xchg
int3
mov
filds
clc
adc
add
loopne
lods
fistps
mov
clc
stos
rolb
fstpl
or
pop
add
mov
lret
sbb
clc
push
dec
or
data16
cmpsb
clc
ret
and
add
ja
add
jae
add
sub
clc
outsl
xor
add
add
add
cmp
nop
push
decl
test
lcall
add
clc
dec
aaa
jge
clc
mov
xlat
call
xchg
cmc
cmp
push
fwait
jmp
mov
inc
insb
stc
add
add
clc
std
push
sbbb
add
mov
add
adc
add
fs
mov
clc
shl
clc
test
outsl
inc
add
negl
xbegin
xlat
fiaddl
and
add
clc
lods
cmp
aas
or
push
clc
jge
cld
call
fwait
jmp
mov
sub
clc
jle
add
mov
scas
push
jmp
sbb
xchg
and
rol
clc
fs
fistl
push
add
add
add
cmp
inc
clc
dec
adc
add
sub
add
adc
push
sub
add
arpl
add
inc
add
push
sub
fwait
jmp
jge
fwait
outsl
cs
dec
adc
add
add
cmc
push
and
inc
clc
divl
divl
add
add
clc
push
add
int
clc
inc
add
mov
stc
mov
add
clc
or
clc
mov
cs
add
inc
clc
lcall
mov
fwait
inc
add
inc
dec
jge
push
in
ljmp
movsl
clc
xchg
loop
mov
js
sub
clc
mov
arpl
ljmp
push
inc
add
test
add
and
movsl
clc
flds
jo
add
add
lock
out
mov
addr16
mov
mov
or
clc
pop
and
add
mov
clc
cmp
aad
nop
sub
add
sbb
clc
fcmove
inc
clc
das
cmp
cmp
sub
add
hlt
mov
adc
add
clc
fwait
or
add
and
add
xor
fimull
clc
sahf
sub
iret
ret
push
clc
sar
clc
jbe
sahf
fisubs
add
sub
add
sub
add
push
add
lret
pop
push
add
cmp
cmp
push
mov
daa
clc
sbb
pop
cmp
clc
dec
mov
add
jne
fs
and
add
add
bound
add
mov
jmp
vorps
test
mov
add
and
add
clc
mov
pop
and
add
mov
clc
cli
xbegin
add
add
inc
clc
cmp
add
cmp
add
popa
add
es
mov
push
ret
push
sbb
aaa
sbb
pop
pop
in
fmull
jb
add
clc
out
push
jmp
add
fdivrl
clc
mov
test
cmp
inc
add
sub
clc
gs
sar
clc
jnp
jecxz
cs
add
add
xor
sub
addr16
mov
outsb
xadd
jns
pop
stos
je
repz
xor
add
in
mov
clc
lret
es
sti
loop
data16
xor
mov
add
cltd
mov
and
clc
mov
add
sar
clc
or
clc
mov
or
clc
pop
hlt
push
push
fwait
jmp
push
push
nop
sub
popf
aas
cmpsl
clc
xchg
nop
out
lret
and
lcall
push
je
and
add
das
daa
clc
loop
imulb
aam
sub
mov
clc
mov
pop
mov
mov
jb
add
clc
fildl
add
fbld
mov
add
lea
dec
or
clc
call
fwait
jmp
aaa
cmp
add
ds
push
clc
dec
into
add
add
add
inc
add
fs
lods
and
repz
mov
in
dec
enter
adc
add
clc
lret
popa
add
arpl
add
clc
es
mov
negb
sbb
sar
inc
clc
pop
cltd
pop
scas
call
pop
sub
jne
clc
or
adc
add
arpl
add
loope
into
push
inc
clc
stc
add
add
in
sbb
add
add
push
add
jmp
test
clc
negl
add
add
add
inc
clc
frstpm(287
clc
lret
add
add
add
push
add
xchg
push
push
popa
fwait
jmp
add
ja
clc
pop
dec
das
push
add
cmc
fisttpll
add
xchg
stc
data16
in
cmp
add
xchg
pushf
fistl
in
add
fwait
jmp
push
test
ret
sahf
sub
jo
add
inc
add
out
fcmovnu
fists
add
add
ret
clc
cltd
enter
outsb
add
add
jge
add
cmp
sbb
push
ret
sub
jg
push
add
cli
scas
out
mov
pop
inc
add
stc
add
add
fs
cmp
jmp
rcll
add
repnz
sbb
jmp
and
cmp
test
xor
filds
add
mov
cmpsl
clc
enter
clc
fstl
add
aam
pusha
add
lcall
add
xchg
dec
adc
add
loope
imul
push
add
fwait
jmp
int
xor
add
cli
pop
dec
push
add
add
add
add
push
mov
pushf
fistpll
cmp
xchg
mov
inc
clc
std
aam
popf
sar
push
stos
or
add
sub
add
add
ret
add
xchg
cmp
rolb
add
jnp
add
sbb
add
outsb
cmp
ret
clc
frstor
xlat
rcrb
in
cmp
clc
call
xchg
sbb
clc
and
add
clc
out
add
cli
imul
add
inc
clc
js
jbe
push
inc
add
dec
xor
clc
in
cmp
mov
add
add
outsl
test
sbb
mov
add
clc
fdivrs
clc
push
add
jb
add
clc
test
sub
jnp
xchg
int
add
js
and
add
inc
add
stos
adc
pop
clc
jnp
clc
in
scas
sub
and
add
jne
mov
rcrb
add
clc
mov
jecxz
and
add
call
add
xor
add
sbb
add
clc
sbb
add
xchg
add
stos
jb
add
cmp
push
clc
nop
adc
clc
and
add
clc
and
add
dec
out
xchg
push
add
adc
add
jmp
clc
fwait
adc
add
mov
xchg
lods
loop
repz
add
stc
adc
add
add
call
add
adc
add
sahf
add
add
add
xor
fwait
jecxz
sbb
add
and
add
clc
sbb
cmc
pop
add
dec
jge
xor
add
add
add
and
push
in
ss
gs
out
fbstp
add
mov
xbegin
hlt
pop
clc
mov
clc
test
pop
int3
lret
xor
add
cmpsl
clc
xchg
push
add
scas
ficoml
jmp
sub
xchg
sub
add
aam
cmp
clc
and
add
nop
pop
jp
cmc
dec
push
add
in
sub
fcoms
add
adc
or
xbegin
clc
incl
clc
fwait
jmp
sub
test
in
idiv
pushf
lock
popf
inc
clc
das
xlat
or
rorb
sar
add
loope
pop
clc
inc
add
enter
sbb
clc
aad
ret
adc
add
ror
sub
faddl
and
add
add
sahf
mov
daa
clc
lods
loopne
add
add
jmp
add
dec
ss
add
push
mov
cld
push
ret
add
xor
add
mov
cmp
outsl
popa
add
negl
mov
push
jmp
cmp
xor
add
push
clc
sub
out
inc
add
cs
ljmp
push
add
sub
fimull
outsl
out
jl
fsts
add
add
addr16
fcompl
xchg
pushf
enter
pop
clc
sahf
dec
es
frstor
ljmp
add
pop
shll
movsl
clc
inc
add
cmc
sbb
clc
and
inc
clc
mov
lods
jnp
mov
std
pop
dec
push
clc
jae
add
add
lcall
add
xchg
nop
jg
mov
cli
jne
add
fbstp
add
jl
stos
cmc
cld
mov
jmp
push
xbegin
clc
lods
pop
mov
add
das
or
es
sub
clc
pop
push
fists
add
and
cld
push
ret
sub
clc
out
mov
ljmp
test
cs
adc
add
lcall
clc
inc
add
stc
cmp
call
rcrl
insl
or
sahf
mov
int3
stos
dec
or
pop
mov
add
clc
ljmp
add
add
add
adc
push
sub
fwait
dec
movsl
clc
adc
add
jle
xchg
fcomps
push
add
insb
insb
leave
pop
jg
xchg
mov
ret
fldenv
add
pop
sbb
inc
cld
push
ret
cmpb
test
add
inc
add
jne
sub
add
mov
add
dec
or
mull
add
popa
add
dec
inc
clc
mov
clc
inc
clc
fldz
xor
add
sar
clc
and
add
fwait
jmp
inc
pop
insb
xor
cltd
jle
mov
clc
cmpsl
clc
outsb
ja
shll
lea
add
sti
cld
out
xlat
xor
mov
inc
add
and
add
clc
lock
enter
add
and
add
mov
mov
mov
js
mov
clc
lock
fmull
mov
mov
cmp
movsb
clc
jmp
xor
add
add
sar
clc
enter
xor
add
add
aam
add
scas
xchg
sub
clc
scas
xchg
sarb
jmp
sub
ds
in
push
add
pop
clc
jp
scas
int
clc
ret
xor
add
add
iret
cld
inc
clc
in
fcompl
sub
data16
or
push
push
jmp
inc
clc
scas
pop
pop
inc
add
inc
add
and
add
clc
sbb
mov
push
sbb
clc
scas
sahf
xchg
pop
cmp
fwait
xor
pop
fcmovne
push
cmpsb
clc
sbb
or
cld
push
ret
push
sub
clc
jle
jae
add
sub
add
hlt
flds
insl
dec
push
and
add
clc
popf
or
out
insl
and
add
add
scas
fidivs
add
mov
xchg
cmp
insb
xchg
mov
dec
stos
jg
int
clc
stc
dec
mov
mov
clc
inc
add
add
add
add
out
xchg
xchg
pop
sbb
stos
xchg
inc
add
xor
xchg
arpl
add
add
add
mov
cmp
ds
and
lea
scas
jl
imul
fwait
jmp
outsl
sub
test
clc
push
add
mov
decl
data16
ja
dec
das
jl
jnp
add
add
add
test
outsl
lcall
jg
mov
jle
sub
clc
call
jmp
jg
xchg
fs
mov
pusha
add
push
push
aad
mov
jns
xchg
out
cmp
inc
clc
sbb
add
fsts
cmpsb
clc
mov
sub
xor
add
jb
add
push
ja
add
pop
stos
push
iret
pusha
add
test
ljmp
mov
popl
add
add
testb
jb
add
add
jnp
clc
mov
dec
jmp
cs
sbb
test
loope
lcall
pushl
add
add
jl
push
cmp
enter
dec
fnstenv
add
iret
loop
fistpl
xbegin
cli
inc
add
mov
lock
test
jmp
aad
add
hlt
call
xchg
lcall
add
sub
loope
mov
adc
add
es
mov
add
mov
clc
xchg
jmp
add
je
sub
mul
clc
jmp
ss
add
dec
int3
and
mov
aas
stc
loop
cmpsl
clc
jg
cmp
mov
add
pusha
add
fldt
ret
clc
mov
add
add
jg
clc
mov
shrb
test
mov
clc
mov
jmp
sbb
ljmp
sub
add
clc
mov
add
jb
add
add
mov
jno
add
sti
clc
loope
movsl
clc
and
sbb
mov
xbegin
pusha
add
das
jge
sti
out
iret
jae
add
pop
sub
add
xchg
in
pushf
test
dec
xchg
and
je
adc
add
add
or
xchg
lret
inc
clc
icebp
jbe
add
dec
xchg
push
xchg
aad
clc
fprem1
mov
add
cmp
fstpt
pop
gs
sbb
bound
add
clc
pop
ja
mov
cwtl
es
leave
or
pop
jbe
imul
int3
pop
push
add
add
add
clc
dec
sbb
mov
ret
clc
fwait
push
jno
add
sar
add
sbb
lcall
addr16
cltd
sbb
lock
clc
lret
xor
add
sub
add
inc
clc
repnz
test
or
add
mov
arpl
add
add
add
add
add
sub
call
adc
add
imul
fsubrs
clc
in
push
add
or
xor
add
xchg
xchg
mov
pop
jns
rep
fwait
jmp
sub
clc
mov
xchg
roll
or
cs
test
cmp
add
aam
jle
push
cmp
adc
add
add
movsb
clc
imul
clc
int
mov
clc
or
or
add
sbb
and
add
fwait
mov
add
cmp
clc
loop
push
pushf
loope
insl
lcall
movsb
clc
and
leave
aad
movsb
clc
sbb
lcall
imul
push
add
fwait
jmp
xchg
gs
inc
clc
repnz
clc
push
add
push
add
cmc
xlat
in
push
add
pop
lods
fwait
sbb
mov
fwait
jmp
sub
test
mov
clc
popf
cmp
clc
push
push
clc
outsl
aas
pop
clc
aas
cld
cli
ljmp
std
cmp
add
add
add
add
out
pop
jb
add
add
add
imul
push
push
test
or
add
mov
add
jae
add
clc
call
jmp
cmp
cmp
mov
and
add
fdivrl
mov
cld
push
ret
imul
pop
jmp
clc
int3
push
clc
xchg
inc
add
pop
and
dec
enter
and
add
clc
mov
ds
adc
add
xabort
lret
and
lods
push
clc
jne
adc
add
sub
popf
into
ret
clc
jne
cmc
out
and
add
clc
out
movsl
clc
adc
add
add
cmp
jmp
out
cmp
clc
iret
test
xor
add
xlat
mov
mov
es
sub
test
out
in
dec
sarl
xchg
mov
add
add
sub
add
add
repnz
cmpsb
clc
xor
clc
mov
sar
clc
jb
add
dec
out
push
out
add
pop
test
call
add
out
push
add
add
or
or
lods
adc
add
push
scas
mov
adc
add
fsubrs
cld
push
ret
test
cmpsb
adc
add
rep
fwait
jmp
inc
sub
mov
mov
sar
clc
shrb
fcmovnb
clc
adc
add
add
inc
add
xchg
and
add
mov
sar
mull
add
add
imul
lret
je
cltd
xlat
adc
add
jnp
clc
out
movsl
clc
mov
inc
clc
out
mov
add
leave
es
std
testb
lock
add
or
sarl
clc
cli
jae
add
add
dec
and
jmp
clc
mov
clc
in
sbb
data16
test
cld
ljmp
test
fsub
clc
adc
add
movsb
fwait
jmp
add
repnz
fwait
das
dec
std
xor
pop
clc
adc
add
addr16
icebp
inc
add
push
clc
fistpll
clc
push
clc
sbb
clc
movsl
clc
cmp
ljmp
imul
push
fwait
jmp
dec
or
lods
cld
push
ret
movsb
sbb
push
mov
jg
push
add
sub
inc
add
outsl
lcall
repnz
add
or
xchg
push
clc
idivb
mov
popf
cmpsl
clc
pushf
inc
add
nop
sbb
jmp
add
std
and
add
cmp
mov
clc
push
add
stos
xchg
or
add
push
add
aaa
fdivs
add
clc
add
add
inc
add
dec
test
fidivrs
add
ret
pop
inc
clc
je
clc
mov
test
lcall
add
sti
xchg
ffree
clc
mov
aas
add
fwait
jmp
mov
clc
je
sub
add
aam
enter
mov
add
pop
adc
call
jmp
sbb
add
xor
add
jb
add
add
mov
push
add
cmp
clc
popf
cwtl
dec
push
clc
and
add
loope
mov
add
and
add
cmp
dec
repz
add
add
clc
test
push
clc
mov
fdiv
xor
clc
mov
add
add
cwtl
xor
add
push
ret
clc
decl
out
pop
add
sub
nop
mov
imul
jle
fucom
clc
cmc
adc
add
fwait
jmp
sub
adc
imul
xor
add
mov
sbb
clc
pop
mov
add
add
dec
es
aas
inc
clc
cmp
sti
jge
add
xlat
push
add
inc
clc
cltd
popa
add
ljmp
dec
aam
or
stos
mov
fs
mov
sti
sbb
ret
push
push
dec
adc
add
pop
clc
out
dec
out
ljmp
jno
add
xchg
lods
xabort
call
clc
call
clc
xchg
jp
mov
add
arpl
add
clc
out
sbb
add
insl
out
popa
add
dec
ret
clc
sub
roll
pop
adc
addr16
sbb
jbe
sbb
add
clc
dec
lods
clc
dec
jne
out
mov
test
jno
add
clc
ja
clc
js
imulb
lret
clc
cmp
add
and
mov
mov
inc
add
add
add
add
iret
dec
cmpsb
clc
mov
add
mov
sar
add
push
clc
add
sarb
arpl
add
clc
dec
push
lahf
inc
clc
fsubl
imul
sub
clc
mov
repz
pop
lret
xchg
int3
insl
fcoml
add
inc
clc
jbe
add
add
dec
pop
jo
add
add
xchg
jnp
loopne
add
adc
inc
clc
pop
mov
bound
add
push
pop
pop
xor
add
add
cld
jae
add
in
gs
test
aam
in
jbe
add
mov
xbegin
out
pop
xbegin
clc
and
add
clc
das
data16
inc
clc
push
and
add
sar
es
push
and
add
clc
mov
repz
gs
cmp
mov
clc
add
repz
add
or
inc
add
jle
outsl
call
enter
add
flds
add
jl
add
dec
ljmp
ja
test
ret
in
push
clc
mov
divl
clc
rcl
dec
ret
clc
add
add
mov
lock
js
fsubs
add
iret
mov
mov
mov
clc
pop
mov
mov
add
lods
or
xchg
hlt
mov
pop
clc
adc
add
add
add
mov
sbb
push
cld
push
ret
sub
xchg
js
add
xchg
int3
or
stos
cmp
clc
or
cmp
dec
sub
clc
or
clc
push
sbb
idivb
and
add
sahf
mov
outsb
xor
add
test
add
add
add
clc
push
add
adc
add
cmp
test
ffree
clc
aaa
cli
mov
and
jmp
fwait
jmp
and
clc
or
fcmovnbe
icebp
mov
mov
addr16
jmp
mov
xchg
xor
fs
cmp
fnstenv
add
addr16
int
test
iret
test
mov
cmp
push
add
add
or
mov
and
add
add
iret
inc
add
push
clc
sar
add
pusha
add
outsl
jg
clc
decl
jmp
mov
jae
add
add
clc
arpl
add
add
pop
js
into
sar
daa
clc
mov
jmp
push
cmpsb
sub
sub
xor
add
clc
lea
roll
add
test
add
xchg
inc
add
paddb
lea
add
in
loop
add
add
or
int3
in
clc
sbb
push
ret
push
sub
ficoml
test
adc
add
test
imul
fwait
jmp
cmp
ss
push
add
cld
push
ret
push
sub
ja
mov
add
jg
sar
mov
cmc
ljmp
push
and
adc
add
sub
add
push
add
add
sub
scas
jge
fs
fstp
scas
jb
add
clc
dec
cmp
xchg
xor
add
clc
xchg
sahf
inc
add
divb
add
push
fwait
jmp
sub
pop
data16
mov
test
fldenv
add
and
add
add
add
mov
clc
sub
clc
aas
cs
in
in
adc
add
add
cwtl
push
or
mov
pop
sar
outsb
dec
mov
popf
mov
and
add
add
add
add
inc
clc
add
adc
add
add
pop
bound
add
fidivrs
push
clc
scas
out
add
in
mov
in
sub
add
push
add
ja
mov
cli
cmp
clc
inc
clc
jns
adc
add
jmp
dec
cmp
scas
sub
clc
jnp
es
mov
mov
push
add
adc
clc
aam
clc
sbb
icebp
mov
sub
inc
clc
inc
add
adc
add
push
add
xchg
sub
cmp
mov
push
sub
sub
clc
jo
add
clc
push
and
aam
xor
add
inc
add
daa
clc
xlat
repnz
add
lods
es
dec
enter
rol
clc
outsl
hlt
push
stos
sar
stos
mov
clc
adc
add
jecxz
flds
add
adc
add
xchg
div
iret
push
add
insb
or
clc
bound
add
add
stos
jns
mov
lret
addb
fwait
jmp
test
clc
sbb
mov
sahf
or
lcall
ja
inc
clc
clc
stos
pusha
add
cmp
push
clc
mov
clc
xchg
loope
inc
add
rcrb
and
pop
call
fwait
jmp
imul
movsb
clc
popf
add
dec
mov
add
jecxz
scas
stos
mov
clc
inc
add
dec
int3
push
in
jle
clc
mov
mov
push
add
int3
or
inc
add
cmp
clc
cmp
clc
lret
mov
fs
gs
shlb
clc
pushf
pop
mov
add
mov
int3
cltd
rcrb
adc
leave
loope
mov
or
push
add
add
xchg
inc
clc
leave
pop
enter
mov
add
pop
pop
xabort
xchg
adc
add
test
aam
lcall
add
clc
out
insl
call
rcrb
push
dec
sub
decl
push
ret
subb
cmp
or
xor
add
push
fstpl
mov
add
fwait
jmp
test
mov
ret
in
clc
addr16
jae
add
add
mov
out
push
clc
add
addr16
fwait
ret
clc
add
or
clc
stos
mov
jge
mov
faddp
clc
stc
mov
sub
mov
dec
or
cmc
icebp
daa
clc
xor
push
fwait
jmp
test
std
arpl
add
sbb
lods
fs
sub
cmp
dec
dec
mov
push
clc
push
add
sahf
sbb
add
add
sub
inc
add
aam
jecxz
sub
in
inc
add
imul
rcll
add
add
add
pop
sub
clc
push
xor
fwait
jmp
pop
sub
clc
in
mov
dec
mov
scas
dec
lods
icebp
or
clc
xchg
add
add
add
int3
popa
add
push
add
fwait
jmp
es
jbe
push
add
sahf
lret
out
cmpsb
clc
sbb
bound
add
add
jne
cltd
adc
add
aad
clc
cmp
mov
popa
add
sahf
ret
clc
arpl
add
in
pop
movsb
clc
daa
clc
mov
test
jo
add
add
daa
clc
dec
sub
add
dec
movsl
clc
pop
clc
cmp
stc
ret
clc
repz
and
add
xor
add
add
iret
xor
add
lea
clc
jmp
out
cmp
bound
add
gs
cld
jne
clc
imul
add
clc
and
add
lret
outsb
push
xchg
fwait
jmp
dec
sub
add
mov
push
ret
cmp
fwait
jmp
jg
sub
sahf
clc
mov
dec
mov
jp
clc
pop
in
xor
add
clc
ljmp
jmp
in
clc
jo
add
jae
add
clc
decl
add
add
iret
jg
mov
jp
data16
test
mov
add
movsl
clc
inc
add
out
aad
xor
mov
and
fwait
jmp
sub
pop
clc
mov
xor
ljmp
dec
loop
dec
inc
clc
xchg
or
in
push
std
popf
jmp
add
aam
cs
push
cltd
and
aas
in
jl
sahf
fsubrp
mov
adc
clc
cmp
sbb
pop
into
push
and
inc
add
aas
or
add
sar
cs
imul
fwait
jmp
jge
xor
sub
add
add
add
clc
push
cmp
cwtl
cmpsb
clc
dec
xor
and
add
mov
sbb
out
pusha
add
aad
pop
mov
add
jne
add
mov
jb
add
sbb
sub
add
sub
add
add
cmp
call
bndldx
or
pop
add
or
push
add
push
add
xor
push
add
xchg
cmp
clc
mov
clc
imulb
popa
add
cld
in
stc
outsb
in
icebp
es
xchg
push
clc
xabort
add
add
add
push
sti
jg
outsl
jle
mov
aaa
push
rcrl
sub
scas
faddl
add
jnp
dec
add
cmp
fsubrp
pop
pusha
add
jo
add
add
or
repnz
imulb
mov
clc
xchg
inc
add
cmp
add
add
add
bound
add
add
test
fdivrs
clc
add
push
inc
clc
push
add
ds
dec
out
dec
jns
push
add
push
clc
xor
add
clc
int3
scas
mov
call
mov
clc
mull
add
sbb
daa
clc
movsl
clc
movsl
clc
cmpsl
clc
pop
sub
add
add
clc
or
pop
push
add
mov
xchg
inc
add
mov
clc
jo
add
pusha
add
lret
dec
dec
dec
addr16
dec
das
scas
jle
mov
xor
add
imul
lea
add
mov
clc
scas
das
mov
add
cmp
add
xchg
pop
fdivp
lahf
hlt
lock
in
pop
add
add
lret
xchg
push
mov
and
js
cs
jg
clc
inc
clc
lret
mov
add
outsb
mov
flds
add
shll
add
ljmp
add
push
clc
popf
lock
and
add
add
push
add
mov
add
mov
push
add
xchg
incl
test
insb
jp
jg
cmc
imul
addr16
sbb
add
mov
loopne
fwait
jmp
dec
int3
add
add
clc
cmp
adc
jmp
nop
lods
or
add
repz
add
mov
out
add
add
clc
into
sbb
fsub
clc
iret
xchg
xlat
inc
clc
lock
add
ds
adc
add
cld
push
ret
sub
or
xchg
pusha
add
dec
testb
cmp
sbb
mov
clc
xchg
ss
sub
xchg
dec
xabort
cmp
mov
inc
add
cmp
popf
int3
add
or
mov
xor
add
or
cmc
outsl
sbb
clc
jmp
push
ret
sub
dec
and
adc
inc
clc
in
outsl
fsubrl
xchg
insb
loop
test
mov
lods
and
imul
push
sar
jle
add
filds
stos
adc
add
incl
jge
fwait
jmp
mov
xchg
inc
add
cli
sbb
pop
clc
jns
lods
adc
add
clc
jb
add
clc
adc
adc
add
dec
mov
fwait
mov
add
mov
xabort
fisttpl
daa
clc
cmovge
call
dec
jbe
add
sarb
pop
xchg
cs
lock
ss
mov
mov
testl
add
fsubl
stos
and
add
add
pop
mov
jmp
add
or
add
clc
jecxz
out
dec
pop
clc
mov
clc
in
xchg
imul
fwait
jmp
das
sub
clc
gs
sbb
cmp
push
fwait
jmp
or
mov
adc
add
fiadds
clc
rclb
xor
add
int3
cwtl
pop
pusha
add
popf
xchg
push
sbb
push
in
ljmp
sub
push
daa
clc
jmp
cmpsb
sub
fisubs
fimuls
clc
cmp
add
mov
add
clc
gs
adc
add
fstpt
daa
clc
scas
sti
lea
xbegin
loop
or
xabort
clc
sahf
cmp
add
add
xor
add
inc
add
sar
clc
shlb
add
leave
decl
test
jecxz
lcall
jg
loope
cmp
dec
dec
popf
and
add
stos
out
nop
nop
testl
mov
add
mov
popa
add
pop
xor
add
push
add
inc
add
inc
add
lock
xor
clc
or
mov
fwait
jmp
nop
and
jb
add
clc
aaa
xor
add
cmp
jmp
mov
incb
add
into
xor
add
xor
cmpsl
clc
lret
addr16
fbstp
mov
inc
clc
out
sahf
or
clc
fdivrs
repnz
push
jmp
sub
jmp
or
clc
jmp
cmp
int
jmp
movsb
clc
mov
add
call
aad
or
jp
mov
adc
add
jecxz
pop
clc
xchg
push
aam
lcall
into
daa
clc
cld
jo
add
clc
lret
mov
pop
jae
add
popa
add
sub
arpl
add
xchg
adc
clc
out
data16
mov
pop
cld
ret
clc
xchg
adc
mov
clc
jb
add
push
decl
fwait
jmp
popa
inc
sub
fabs
clc
int
clc
mov
ds
jle
xor
js
mov
dec
mov
adc
add
add
je
clc
lock
fbstp
add
lods
or
pop
push
mov
loop
out
ss
clc
out
jg
add
scas
test
or
cmp
push
push
fwait
jmp
sub
cmp
in
inc
clc
xchg
mov
leave
jle
add
add
clc
add
add
add
add
shr
mov
adc
add
add
ljmp
add
jl
mov
fwait
jmp
data16
xor
add
sub
enter
clc
dec
jge
out
stos
sbb
jnp
add
jb
add
mov
jae
add
dec
mov
clc
fldcw
aas
cwtl
add
fcmovnu
nop
adc
add
insl
pusha
add
iret
mov
outsl
out
rcrl
xchg
xor
imul
test
pop
fsubrl
push
xchg
xor
add
jge
add
pop
lret
mov
dec
fwait
jmp
pop
adc
or
and
add
je
fwait
jmp
mov
xchg
enter
lahf
push
jb
add
pop
and
popa
add
xor
add
xbegin
mov
xchg
bound
add
int3
fsts
jmp
cmpsb
xchg
push
xchg
sub
sub
xor
add
inc
push
add
and
dec
fidivrs
mov
adc
add
ja
clc
sbb
push
int3
in
or
sub
jmp
cld
push
ret
lea
clc
clc
cmp
clc
xabort
xchg
jae
add
or
add
mov
hlt
rcrl
test
cld
push
ret
dec
test
adc
jmp
dec
sbb
clc
gs
aam
xchg
insl
mov
adc
add
add
lock
add
add
add
xchg
push
sbb
clc
clc
stos
outsb
jne
addr16
pop
inc
clc
add
add
movsb
clc
movsb
clc
xor
cmp
or
inc
clc
clc
or
add
add
add
arpl
add
fwait
jmp
sub
sub
add
add
fwait
jmp
sahf
aaa
out
mov
mov
or
add
inc
clc
out
ret
clc
fnstcw
cmp
fwait
jmp
sub
int
xchg
cld
push
ret
insb
dec
imul
push
mov
inc
add
fidivrl
int3
mov
test
repz
cmp
cmp
out
add
add
clc
lods
push
mov
cld
push
ret
dec
nop
push
cmpsl
clc
inc
add
jp
clc
mov
add
aam
add
add
clc
decl
mov
jmp
xchg
inc
add
mov
clc
add
add
add
push
adc
add
add
clc
aas
cltd
nop
cmpsb
clc
pop
data16
sbb
lret
aad
add
scas
sub
add
clc
fcoml
add
movsb
clc
cmp
add
and
fdivrs
fwait
jmp
push
test
clc
xor
add
jle
clc
arpl
add
gs
and
add
clc
std
and
clc
lods
cmp
clc
push
inc
add
pop
inc
add
imulb
clc
lods
std
sbb
or
cmp
pop
mov
mov
pop
xchg
lock
add
addr16
mov
add
add
mov
fwait
jmp
or
inc
add
xor
add
lret
clc
scas
sar
cmp
clc
sbb
cmp
pop
clc
in
adc
inc
clc
mov
or
add
jmp
pop
jl
xchg
xbegin
addr16
xchg
jecxz
out
iret
xchg
bound
add
popa
add
dec
imul
iret
mov
add
add
clc
sar
clc
mov
fcmove
testb
dec
mov
test
add
push
imul
xor
add
xor
add
push
mov
fwait
jmp
aaa
leave
ror
movsb
clc
daa
clc
inc
clc
cmp
loop
pusha
add
add
add
add
clc
sbb
add
mov
push
roll
add
aas
popf
add
add
add
add
sbb
sahf
decl
sub
add
sub
test
clc
and
add
fnstsw
negb
add
rorl
dec
fwait
jmp
pop
add
movsb
je
or
sbb
loope
pop
frstor
add
and
add
add
jmp
push
clc
pop
clc
jo
add
inc
clc
inc
clc
mov
clc
ljmp
dec
aas
push
add
lods
mov
aas
mov
xchg
sar
clc
ljmp
jl
bound
add
test
daa
clc
nop
xor
add
clc
fwait
xlat
psrad
push
and
add
jecxz
inc
clc
xor
mov
adc
add
arpl
add
add
pop
add
add
add
mov
mov
cld
push
ret
dec
insb
xor
ljmp
xchg
cmp
cwtl
int
mov
dec
adc
in
lahf
dec
cmp
jnp
clc
pushf
sub
sbb
psrlq
jp
sub
or
test
clc
pop
add
ret
lret
xor
add
jecxz
lods
repnz
std
clc
and
add
add
lock
mov
jae
add
inc
add
clc
outsb
loopne
dec
xor
add
int3
ds
test
cs
pop
test
addr16
inc
clc
nop
sar
cmpsl
clc
xchg
and
add
in
mov
clc
adc
add
add
push
jecxz
cmp
sarl
adc
add
add
cmp
xor
add
clc
or
ss
xor
add
add
and
add
loopne
or
loope
loopne
lock
clc
or
mov
loop
xchg
scas
sub
ret
cwtl
insl
iret
js
xbegin
inc
clc
mov
adc
inc
clc
sub
popl
cmp
clc
jo
add
fcoms
add
notb
add
cwtl
push
add
js
push
mov
fwait
jmp
nop
or
mov
mov
mov
repz
clc
insl
leave
in
inc
add
cmpsl
clc
mov
ss
mov
jl
mov
add
add
loop
out
xor
add
mov
xchg
aam
mov
cs
outsl
cli
repz
clc
or
add
adc
add
insl
data16
mov
mov
xchg
jbe
clc
loope
pop
aad
dec
jecxz
sar
bts
popf
and
add
add
clc
scas
dec
push
push
add
fs
out
in
sahf
lods
icebp
ja
xchg
mov
stos
or
jecxz
pop
daa
clc
sar
clc
mov
clc
add
mov
add
xabort
add
add
imul
clc
popa
add
cmp
outsl
and
pop
jae
add
ret
clc
stos
jmp
sub
xor
add
fwait
jmp
scas
lea
clc
repnz
sub
mov
popa
add
ljmp
clc
int3
call
add
clc
add
add
jg
jno
add
mov
test
or
clc
nop
negl
add
cmp
clc
jo
add
clc
mov
add
icebp
div
ss
xchg
lods
push
pop
sub
add
enter
clc
cs
clc
aad
jns
inc
clc
lret
dec
mov
clc
insl
imull
clc
and
clc
jg
clc
pop
clc
out
jmp
add
ss
outsb
js
clc
pop
clc
xor
adc
cltd
sub
cmp
test
gs
out
pop
or
add
cmpw
fwait
jmp
push
mov
ds
aam
clc
lahf
add
clc
mov
insl
fwait
inc
add
sub
insb
sahf
cmp
push
aaa
clc
sar
clc
pop
dec
fwait
mov
mov
cmc
and
rcll
fisubrs
pop
rdpmc
add
and
add
add
xlat
jae
add
or
cmp
mov
add
add
add
add
cmp
fstps
cs
out
lock
add
mov
push
ret
sub
push
add
jmp
cmp
rorb
daa
clc
jl
enter
sarl
sbb
cmpsb
clc
mov
gs
scas
lods
into
mov
clc
fnstenv
mov
call
clc
lods
lods
xchg
mov
adc
add
scas
es
fstpl
sbb
inc
clc
sahf
jmp
cmp
stos
mov
clc
enter
jp
cmp
enter
clc
dec
std
push
mov
cld
push
ret
sbb
push
cli
inc
add
mov
and
lret
xor
add
clc
cmpsl
clc
ficoml
cmp
icebp
push
nop
cmp
add
test
dec
shrl
icebp
out
sar
clc
mov
xchg
lods
movsb
clc
stos
mov
clc
outsb
sbb
jmp
out
mov
mov
lret
rcll
clc
cmp
scas
ficoms
add
dec
and
add
clc
not
or
mov
lret
add
add
inc
cld
push
ret
inc
jno
sub
mov
add
clc
mov
jb
add
ds
outsl
push
add
jnp
pop
rorb
ss
jbe
add
mov
add
add
clc
lock
stos
sbb
mov
clc
adc
add
clc
lock
clc
xchg
cmp
inc
add
decb
add
add
push
imul
adc
movsb
clc
cmp
add
xor
mov
mov
xor
clc
ljmp
push
cld
movsl
clc
inc
add
and
add
stos
fcompl
lret
adc
clc
jg
mov
add
pop
and
lock
aam
inc
clc
push
add
sub
mulb
cwtl
push
jmp
sub
add
cwtl
xor
add
push
imul
add
test
test
int
mov
clc
pop
adc
add
clc
push
movsl
clc
leave
lcall
sar
jg
add
mov
testl
rcrl
cmp
add
test
roll
add
mov
into
adc
add
loope
imul
add
in
into
xchg
repz
add
iret
xchg
fs
mov
clc
pop
repnz
add
xchg
xor
add
add
clc
dec
xchg
jo
add
add
dec
xchg
cmp
xchg
cmc
in
hlt
xlat
cld
ret
clc
repz
icebp
fidivl
cmp
add
xor
add
cmp
fcmovnbe
pop
and
jne
push
xor
add
mov
mov
add
lock
add
mov
pop
add
add
xchg
lea
mov
je
and
fimuls
mov
clc
in
jbe
hlt
mov
hlt
mov
lahf
popf
mov
adc
add
add
mov
dec
xchg
lcall
call
add
insb
je
clc
xor
mov
push
cld
push
ret
sub
outsl
xchg
lea
clc
push
sbb
jmp
push
and
movsb
sub
icebp
fwait
jmp
sub
add
cmp
clc
rorb
cmp
dec
xchg
mov
add
adc
add
divb
add
xchg
fwait
or
cmp
shll
mov
mov
clc
ror
dec
jecxz
sti
popa
add
dec
das
adc
icebp
push
add
xchg
popf
and
ret
clc
xlat
mov
in
push
add
sahf
mov
mov
inc
clc
icebp
add
add
push
xchg
rorb
gs
addr16
pusha
add
data16
imulb
aam
clc
sar
fs
js
xabort
clc
sbb
cld
push
ret
pop
cmp
mov
add
push
jb
add
ss
pop
enter
mov
lea
cld
push
ret
or
mov
cmp
clc
xor
or
cmp
xor
add
and
push
mov
shl
inc
add
jg
push
clc
cmp
clc
mov
xor
add
stc
out
jg
sbb
clc
gs
aas
add
clc
mov
pop
fwait
jmp
xor
das
sbb
cwtl
leave
insb
adc
add
lcall
mov
add
add
add
push
ret
xchg
sahf
inc
ret
clc
mov
cmpsl
clc
std
pop
push
add
ret
xchg
jae
add
mov
jle
pop
mov
loop
xchg
jb
add
inc
add
add
clc
add
sub
clc
push
ds
iret
or
sti
add
add
pop
push
sbb
xor
imull
clc
cmp
add
sar
lock
add
xabort
xbegin
add
mov
push
fwait
jmp
adcb
ror
jge
sti
addr16
repnz
add
test
clc
stos
outsl
lods
add
pop
test
push
xlat
jns
add
clc
jne
test
in
gs
or
jmp
enter
arpl
add
inc
add
hlt
dec
fstpt
leave
lahf
lret
pusha
add
imul
clc
sbb
data16
clc
cli
int
mov
add
adc
add
add
clc
push
add
push
add
mov
loop
adc
add
or
cmp
fs
inc
add
jns
add
xchg
bound
add
mov
fwait
jmp
or
das
sub
rcrl
add
or
clc
pop
out
pop
test
xchg
sbb
mov
sub
inc
add
add
add
clc
mov
cmp
jns
add
into
stos
cmp
inc
add
call
pop
xchg
fstps
mov
scas
fwait
loopne
in
mov
clc
call
clc
adc
add
cld
push
ret
push
push
mov
out
lret
shll
add
mov
add
cld
push
ret
movsb
dec
sahf
mov
pop
clc
je
add
cmp
adc
clc
enter
add
mov
add
dec
sub
out
cmp
clc
insb
mov
pop
dec
divb
add
xlat
aas
mov
push
xchg
int
clc
pusha
add
pop
js
clc
ret
clc
cmp
es
dec
das
fwait
ja
add
jp
cmp
sbb
clc
or
adc
add
push
add
and
add
sbb
pop
gs
jbe
xchg
jns
mov
test
pop
cld
sbb
imul
add
push
jmp
add
add
clc
clc
pushf
negb
sahf
xchg
aam
clc
ljmp
jmp
sub
or
xor
add
cmp
aam
dec
daa
clc
xchg
dec
lock
push
add
sub
clc
and
add
jae
add
clc
aad
dec
data16
push
mov
fwait
jmp
lods
aam
cli
repnz
or
jg
ret
xor
aaa
sarb
fldcw
jl
xchg
dec
xchg
push
add
mov
clc
pop
push
add
xchg
ss
add
faddp
clc
mov
jno
add
cmp
adc
add
clc
loope
icebp
aam
lods
sbb
std
push
add
mov
mov
jp
insb
stos
mov
sahf
fstps
push
cltd
dec
out
popa
add
test
imul
jo
add
cmpsb
clc
lret
dec
xor
nop
cli
push
clc
out
lret
sbb
loopne
jmp
aam
jae
add
clc
aas
lea
push
add
and
add
clc
call
jo
add
fidivrs
add
mov
in
inc
add
or
je
cmp
xabort
mov
mov
gs
sahf
mov
xor
add
add
add
clc
fdivrl
in
adc
add
xor
fwait
jmp
aaa
mov
in
cmp
xor
add
das
int
xor
add
sbb
sub
clc
scas
cld
data16
jecxz
xchg
jne
cmpsl
clc
sti
cmpsb
clc
addr16
jae
add
fiadds
rclb
add
movsb
clc
dec
cltd
mov
lret
bound
add
pusha
add
pusha
add
mov
xlat
push
clc
xor
add
add
clc
lock
clc
movsl
clc
sub
sbb
push
in
jmp
jno
aaa
dec
sar
add
out
outsb
sub
clc
fmull
mov
add
gs
js
mov
fwait
jmp
xor
pop
cmp
add
sub
mov
clc
es
pop
enter
push
hlt
sub
clc
and
add
push
jmp
push
sub
je
mov
add
sarl
imull
clc
stos
call
in
fwait
add
aam
out
add
outsb
js
jg
push
mul
clc
int3
mov
add
mov
test
mov
aas
in
inc
add
call
clc
out
imul
loope
cld
push
add
jg
and
add
mov
cmp
add
or
clc
and
add
clc
pusha
add
repz
sbb
mov
xchg
ret
fstpt
scas
dec
out
aas
in
dec
ja
sbb
and
add
mov
clc
in
mov
fnstcw
iret
and
add
clc
call
jbe
jo
add
add
stos
mov
add
jmp
sarb
cltd
pop
fwait
js
add
je
sbb
clc
cld
cmp
clc
je
clc
lret
enter
and
add
mov
into
jmp
enter
loope
or
add
fwait
jmp
popa
or
std
cmp
movsl
clc
jp
add
add
xor
add
add
push
pop
sbb
or
and
xor
mov
jg
add
inc
add
cli
test
scas
mov
cltd
xor
test
pop
clc
pusha
add
xchg
aas
jmp
inc
add
gs
cmp
ret
clc
sbb
xor
add
fs
mov
sar
outsb
das
jbe
xabort
clc
imul
dec
clc
scas
and
add
pop
xchg
dec
adc
ret
mov
mov
daa
clc
cmpsl
clc
mov
mov
pop
and
add
sub
pop
stos
cmp
frstor
sbb
clc
cmp
inc
add
xor
add
add
outsl
cmp
test
std
inc
clc
inc
clc
dec
mov
test
push
clc
cmp
clc
jno
add
cmp
clc
jp
sti
lahf
mov
push
jmp
fwait
jmp
aas
test
lahf
sbb
push
push
mov
and
add
adc
add
xchg
mov
clc
add
add
mov
movsb
clc
adc
add
add
sub
insb
mov
clc
sub
fmull
jns
roll
and
cmp
clc
xchg
mov
add
mov
push
or
sub
clc
mov
call
clc
pop
cmp
sub
sbb
xor
add
add
js
xor
add
pop
ss
clc
call
test
lods
cmp
add
not
fwait
jmp
imul
add
test
mov
xor
add
or
das
fwait
ret
clc
sbb
clc
icebp
popl
add
sbb
add
jb
add
cmpsb
clc
sub
add
mov
loope
ljmp
outsl
and
add
clc
mov
adc
add
clc
xabort
add
mov
dec
mov
or
clc
push
mov
clc
out
mov
or
inc
pop
pop
iret
mov
arpl
add
hlt
xchg
xor
add
mov
add
sub
clc
inc
clc
sbb
clc
adc
add
clc
sar
or
mov
in
add
add
add
add
stos
mov
sub
sbb
jmp
xor
out
scas
test
aaa
gs
sub
jp
inc
add
lcall
clc
ds
mov
push
ds
clc
das
fcomps
clc
push
test
pop
pop
fucomi
aaa
pop
xor
add
jno
add
clc
inc
add
cmp
fcomps
jno
add
add
xor
add
fildll
aas
adc
mov
adc
and
add
add
test
inc
add
cmp
add
add
add
cmp
add
loop
dec
fsub
clc
out
loop
or
icebp
mov
test
add
cld
push
ret
insb
popa
int
add
insb
cmpsl
clc
cmc
adc
add
shll
movsb
clc
lret
clc
outsl
sti
pop
fwait
aad
xlat
mov
clc
dec
std
shlb
dec
cmp
xchg
dec
lea
rorb
jge
add
and
add
pop
clc
or
out
mov
iret
pop
in
cmp
das
and
add
dec
repnz
sub
mov
das
arpl
add
lcall
or
add
sub
xor
add
inc
add
lret
add
into
pop
mov
inc
add
and
add
je
or
pusha
add
sbb
std
ljmp
cmp
push
aad
clc
repnz
ja
lock
clc
jmp
add
adc
add
mov
add
add
mov
clc
push
add
xchg
and
add
out
fcompl
xchg
push
push
xabort
rcrb
xchg
jno
add
scas
cmp
xabort
add
xbegin
add
clc
push
clc
sub
clc
pop
mov
add
shrl
jbe
aam
clc
mov
hlt
add
add
clc
dec
das
mov
clc
xchg
xchg
popa
add
push
dec
clc
into
hlt
pusha
add
sbb
jmp
and
sub
inc
clc
adc
clc
sbb
add
add
ret
clc
lea
add
movsb
clc
pop
mov
into
push
push
add
dec
adc
add
ja
clc
loop
pop
adc
sub
add
mov
sar
stos
push
add
lahf
dec
mov
jp
jge
xchg
pop
std
sar
std
repnz
mov
add
clc
inc
clc
aaa
jno
add
clc
sbb
aas
add
sub
movsl
clc
mov
xchg
shl
clc
mov
add
insb
lret
xor
add
clc
pop
sbb
push
clc
int3
jge
add
add
into
sub
mov
xor
add
and
mov
add
in
popa
add
push
clc
mov
mov
xor
add
pop
je
clc
or
clc
mov
xor
cmp
xlat
sbb
add
add
setno
xchg
and
add
pop
mov
push
pushf
testb
fs
pop
imul
lret
sub
cld
push
ret
or
out
lcall
clc
cwtl
imul
add
pop
sbb
add
scas
in
out
cmp
das
push
inc
clc
arpl
add
add
cmovnp
mov
fwait
jmp
push
and
sub
clc
out
das
scas
xor
mov
mov
in
adc
add
add
ret
clc
mov
jmp
pop
xor
add
not
add
add
jmp
bound
add
out
mov
lea
add
cmp
out
aas
test
pop
jb
add
adc
add
add
hlt
pushf
cmp
push
xabort
clc
sbb
add
js
clc
sbb
and
add
xor
add
add
lock
add
xbegin
lret
movsb
clc
jno
add
lods
sti
jle
rcrl
jbe
fwait
jmp
ds
add
cmp
loop
bound
add
jle
xchg
ss
cmp
adc
add
mov
mov
movsl
clc
testb
add
lcall
add
push
add
push
jg
inc
add
mov
addr16
or
push
add
cmp
add
add
add
pop
cld
lods
push
add
add
add
mov
add
outsl
test
dec
add
mull
inc
add
addr16
cmp
sbb
ds
add
adc
int
out
lods
repz
cmp
xchg
mov
fwait
int
sbb
push
ret
jg
lods
add
inc
add
mov
jp
cmp
cltd
in
in
xor
add
sub
clc
mov
clc
fs
cmp
clc
dec
and
popa
add
pop
add
add
inc
clc
xor
push
add
test
ja
out
lods
imul
je
in
outsb
sub
clc
mov
add
stc
popf
sbb
dec
cli
cmp
push
add
stos
inc
add
bound
add
data16
xor
add
add
xchg
jle
xor
add
arpl
add
adc
add
mov
clc
push
add
icebp
aam
xchg
fs
sti
push
jae
add
add
add
cmp
clc
and
mov
mov
add
in
iret
pushf
xor
add
add
mov
clc
xchg
out
lcall
sbb
loope
rol
clc
in
inc
clc
cltd
mov
pop
repz
repz
add
stos
out
dec
fistps
add
fwait
jmp
insb
sub
insb
sbb
jbe
add
sub
mov
sub
clc
pop
jp
sbb
and
or
fwait
jmp
test
push
xor
add
je
clc
add
add
clc
loopne
aad
clc
cmp
push
lea
clc
adc
clc
insb
adc
add
sbb
add
adc
add
clc
arpl
add
cmp
add
jb
add
pop
mov
adc
add
add
lcall
out
cmc
push
clc
pop
lret
popl
clc
pushf
xchg
test
inc
add
idivl
add
pop
add
add
clc
mov
clc
pop
jnp
leave
push
or
mov
jae
add
clc
jg
mov
add
jbe
ss
xor
add
inc
add
pop
test
js
or
sahf
insl
ja
mov
cs
clc
jge
cli
jo
add
test
jnp
clc
mov
add
push
add
and
sbb
jle
das
pop
aas
pop
push
mov
jg
push
add
rcr
mov
sbb
add
or
and
add
fwait
jmp
es
imul
add
pop
or
clc
scas
jns
cmp
cs
add
in
push
clc
mov
add
xor
add
ret
clc
ljmp
in
mov
data16
add
push
mov
add
add
add
add
add
fisubs
ss
clc
in
mov
out
lret
add
clc
dec
jnp
cmp
nop
fistl
js
mov
cld
stc
dec
cmp
mov
clc
adc
push
add
dec
cmp
sahf
mov
push
jmp
and
dec
mov
inc
clc
xchg
pop
mov
pop
aas
push
jg
add
pop
popf
xor
mov
lahf
sub
clc
jp
sbb
add
shlb
mov
add
shlb
mov
adc
add
es
pushf
daa
clc
jmp
add
imul
test
call
nop
mov
sub
loop
xlat
idivb
stos
into
pslld
mov
jecxz
pushl
sub
mov
clc
scas
lret
push
clc
xlat
and
add
clc
pop
test
sbb
popf
pop
xor
add
dec
iret
pop
mov
add
je
clc
sbb
xor
add
scas
xchg
jl
clc
or
clc
xchg
adc
add
cltd
lret
adc
call
or
aad
add
sti
das
jb
add
clc
cmp
sub
aas
add
add
add
mov
mov
inc
add
aaa
pop
pop
jns
arpl
add
adc
add
add
lret
xor
add
xor
add
clc
sbb
mov
jae
jmp
xor
add
mov
mov
adc
add
jp
dec
ret
clc
inc
add
mov
dec
jge
cmp
test
test
inc
add
lock
dec
fmull
clc
mov
jb
add
add
ja
add
inc
add
pop
arpl
add
mov
clc
cmp
ds
pop
mov
fs
xor
add
cwtl
je
fldt
lods
and
cmpsl
clc
lret
jecxz
push
mov
movsb
clc
add
add
push
sbb
es
fwait
jbe
stos
scas
dec
jg
add
cmp
jb
add
push
sbb
sub
add
neg
inc
clc
shl
mov
add
clc
push
cli
jmp
add
std
xchg
popa
add
cmp
add
add
mov
lods
adc
add
nop
sbb
or
fwait
jmp
nop
outsl
mov
xchg
jge
add
out
jnp
out
pop
dec
pop
xor
mov
movsb
clc
and
add
add
clc
insl
repz
clc
icebp
mov
cmp
add
clc
xchg
mov
jmp
clc
pop
clc
mov
jns
stc
cmp
clc
dec
popa
add
pop
clc
je
shr
xchg
xbegin
clc
add
add
sbb
gs
push
aaa
adc
cmp
clc
push
add
fists
add
add
pop
cmp
pop
je
jae
add
data16
cmp
cld
push
ret
scas
das
xor
inc
add
repnz
mov
imul
cmp
into
aas
test
fimull
sar
mov
or
clc
or
clc
rolb
clc
sub
xor
add
clc
frstor
push
call
cld
push
ret
push
cmpsb
insb
jnp
adc
add
jbe
clc
xchg
sbb
clc
mov
lret
aas
test
rolb
clc
cmp
push
out
jns
adc
add
mov
mov
add
clc
mov
clc
fcmovbe
call
clc
cwtl
mov
push
push
add
or
add
add
roll
push
push
fwait
jmp
lods
push
dec
addb
add
push
add
and
pop
aaa
es
cmp
clc
xchg
test
clc
loopne
cltd
xchg
pop
fdivrl
lret
jge
xchg
cmp
add
push
clc
das
lret
and
add
fsubrp
xor
add
into
adc
add
pop
mov
clc
mov
ffree
clc
hlt
xchg
jmp
out
push
clc
js
clc
xor
aas
jne
clc
sub
push
mov
clc
movsb
clc
popf
nop
jecxz
fs
mov
or
sar
clc
xor
add
or
sub
clc
xor
push
clc
pop
xchg
addr16
mov
pop
pushf
test
fldt
jb
add
cmp
clc
lods
jne
add
pop
mov
clc
ret
clc
test
cmpsb
clc
xchg
jge
cmp
repnz
frstor
add
outsb
cmp
add
add
frstor
add
out
stos
xor
add
xlat
movsb
clc
xchg
push
add
or
mov
sub
sub
xchg
xor
add
add
scas
shll
add
add
addr16
call
fs
shll
clc
mov
and
add
clc
out
out
clc
pop
pop
push
lret
lret
push
add
add
clc
cmpsl
clc
ljmp
clc
cmpsl
clc
lods
cmp
pop
clc
scas
cmpsl
clc
dec
scas
out
push
mov
xor
nop
xor
add
fisubl
add
fbld
clc
pop
push
push
add
push
adc
xchg
add
add
clc
ss
dec
pop
xor
outsl
insl
fnstsw
clc
sbb
add
roll
or
mov
add
add
mov
push
ret
xchg
je
mov
add
mov
mov
push
cmp
add
lods
es
clc
sub
add
clc
push
popa
fwait
jmp
movsb
scas
sub
or
clc
xchg
sub
out
movsb
clc
or
pop
fbld
jns
add
fwait
jmp
pop
dec
sub
clc
jns
cmpsb
clc
add
add
push
add
pushf
jl
sbb
xor
add
add
adc
add
push
add
insb
out
cmp
add
mov
add
clc
dec
gs
cmp
add
jge
cmpw
fwait
jmp
insb
cmp
rcl
xlat
xbegin
add
adc
add
scas
daa
clc
jmp
adc
gs
mov
sub
sub
fwait
jmp
lea
xchg
xchg
xchg
imul
adc
mov
repnz
jg
add
adc
add
sub
add
int3
incl
add
add
pop
dec
test
cmp
pop
iret
xchg
cmp
outsl
mov
clc
cmp
or
clc
lret
xor
add
mov
cltd
mov
pop
mull
mov
fwait
jmp
sub
sahf
sbb
sub
in
cmp
clc
jnp
decb
add
add
mov
notb
add
mov
add
adc
add
add
dec
xor
add
and
add
pop
cwtl
adc
clc
cmc
mov
push
daa
clc
push
push
cld
push
ret
sub
jp
mov
int
mov
lcall
fwait
xchg
pushf
pop
in
cmp
cmp
add
add
add
aam
inc
add
dec
bound
add
mov
sbb
add
clc
mov
add
and
add
clc
es
lret
cwtl
inc
clc
and
add
xchg
jno
add
and
add
adc
aam
pop
stos
aas
dec
xchg
and
add
test
jb
add
clc
pusha
add
sub
clc
mov
push
clc
std
lret
mov
adc
clc
jmp
stos
sub
dec
add
repnz
adc
pop
rclb
add
pop
xchg
jne
sar
add
mov
cld
push
ret
sub
add
outsb
scas
add
add
add
rep
out
arpl
add
add
add
or
clc
pop
clc
mov
mov
add
cmp
pop
int3
cmp
add
or
add
cld
xchg
jae
add
clc
xor
cmp
push
ret
jp
lock
clc
movsb
clc
fisttps
push
sbb
xor
fwait
jmp
sahf
es
mov
push
popf
mov
or
fcompp
out
mov
cmp
shll
add
add
nop
cmpsl
clc
pushf
addr16
cmpsb
clc
lret
xchg
out
gs
in
jge
sti
ret
add
lods
das
notb
psubsw
add
fdivrs
out
sub
add
add
jns
clc
adc
in
icebp
cmp
xbegin
loope
jbe
clc
pop
clc
jns
daa
clc
loop
repz
clc
sbb
fwait
jmp
and
nop
push
das
inc
add
out
push
pop
fwait
jmp
sub
outsl
movsb
pop
jl
cmp
data16
xchg
or
clc
push
add
dec
movsb
clc
xor
stc
int
and
add
clc
inc
clc
or
jnp
adc
add
add
jno
add
clc
hlt
or
sbb
cmp
add
adc
clc
push
clc
mov
movsl
fwait
jmp
push
xchg
xchg
and
add
add
out
dec
pop
inc
add
sub
jnp
clc
jle
mov
pop
clc
pop
xchg
dec
sub
adc
mov
jo
add
add
xchg
add
add
and
jne
pop
lret
pop
clc
lock
xor
sahf
mov
add
popa
add
shrb
push
clc
push
add
jl
clc
and
fwait
jmp
xchg
aas
nop
adc
add
add
inc
clc
int
and
add
jl
clc
xchg
pushf
and
rorb
mov
mov
add
mov
and
gs
mov
scas
dec
int3
add
add
dec
push
xor
fwait
jmp
sub
push
inc
add
mov
add
add
jp
add
or
cmp
or
jg
add
cmp
das
iret
out
popa
add
push
icebp
ljmp
data16
sub
imul
dec
and
add
sahf
popf
in
add
add
push
add
cmp
pop
cmp
testl
add
mov
stos
fwait
jmp
push
insb
cmp
add
lock
mov
ret
xor
add
clc
jns
mov
dec
clc
aam
push
add
sub
dec
mov
fwait
jmp
nop
sub
int
rorl
out
jge
inc
add
gs
bound
add
add
stos
jl
out
push
add
fwait
jmp
inc
sub
mov
xchg
or
and
add
xchg
scas
pop
fwait
loopne
and
in
pop
clc
cmp
fsubrl
fcmovu
nop
sub
push
jmp
fwait
jmp
push
add
add
jmp
add
clc
int3
mov
add
nop
fisubs
pop
jae
add
clc
push
ror
fwait
jmp
push
or
add
mov
daa
clc
pop
into
sbb
sbb
lea
add
ds
clc
fs
nop
mov
add
dec
push
add
pop
inc
clc
inc
clc
sub
add
inc
add
cmp
dec
dec
sbb
clc
xchg
mov
dec
bound
add
mov
xchg
push
xbegin
fs
fisubl
insb
sbb
cmp
add
dec
sub
mov
xlat
or
add
mov
clc
cmp
neg
sar
clc
xor
add
clc
push
mov
clc
mull
int3
mov
cwtl
sti
dec
dec
add
add
cmp
rorb
add
and
dec
sub
jecxz
jbe
lea
add
add
mov
cld
clc
fs
test
sbb
add
addr16
lret
add
sub
clc
outsb
push
cld
mov
jp
dec
lock
stos
fldenv
push
clc
nop
hlt
xchg
mov
decl
inc
add
sub
and
mov
and
add
jge
push
cmp
add
adc
add
push
jnp
sar
sub
xchg
cmp
add
add
xlat
call
add
inc
clc
sbb
add
sub
lret
xchg
ja
xchg
dec
scas
and
push
sub
ret
mov
clc
inc
clc
out
loope
sbb
lret
lods
adc
add
or
push
jmp
fcom
outsl
shlb
imul
iret
and
add
add
cmp
aam
sub
add
rcr
sub
pusha
add
movsb
clc
ret
jae
add
mov
xchg
pop
clc
and
add
sbb
adc
pop
clc
test
inc
clc
jne
mov
clc
mov
stos
mov
pop
and
add
pushf
arpl
add
add
sbb
dec
ret
popf
mov
movsl
clc
jge
clc
pop
scas
cmp
clc
aaa
std
bound
add
xchg
and
add
fstpt
imul
clc
inc
add
dec
ret
pop
or
mov
cmp
add
sub
fnstsw
push
adc
add
sar
fs
push
add
xchg
mov
push
and
add
fisubrs
dec
and
pop
push
push
into
pushl
add
add
inc
add
enter
fidivrl
ret
clc
xchg
data16
push
add
ds
jae
add
mov
out
insb
and
add
or
clc
lahf
jbe
out
clc
insb
mov
mov
fwait
jmp
and
sub
add
clc
or
xor
add
sar
mov
loope
out
fs
icebp
adc
add
add
in
cmp
add
cli
add
add
sub
ret
add
jg
outsb
add
aad
int
xchg
or
clc
lret
fnstsw
and
cmp
aas
push
inc
add
lcall
test
imul
or
clc
push
inc
add
sub
inc
scas
sub
add
mov
clc
mov
fwait
jmp
fwait
fs
adc
add
sub
inc
clc
dec
xchg
pop
cmp
in
pop
data16
push
xlat
mov
pusha
add
xlat
sbb
jo
fwait
jmp
dec
jge
inc
clc
or
cmp
out
mov
push
stc
jnp
clc
std
and
add
add
push
add
inc
add
fsubl
jbe
mov
clc
xchg
mov
sbb
fwait
jmp
jge
scas
sub
mov
cld
push
ret
popa
push
add
pop
push
clc
data16
and
pop
in
adc
add
cs
xor
jmp
dec
or
mov
and
or
mov
daa
clc
test
data16
jno
add
add
jbe
clc
jmp
mov
adc
add
sahf
fs
jae
add
add
ja
je
es
sub
add
leave
ja
clc
push
add
adc
add
outsb
bound
add
outsl
or
cmpsb
clc
sub
inc
add
gs
insb
inc
add
mov
add
xchg
data16
pop
repnz
jns
mov
add
add
and
add
mov
js
mov
inc
clc
call
clc
cmp
ret
add
add
mov
in
push
clc
test
add
mov
imul
adc
add
xchg
fidivrl
add
ljmp
mov
add
dec
pop
lret
arpl
add
add
add
cli
repnz
clc
jmp
ss
mov
add
cmp
pop
fwait
jmp
sub
add
notl
add
cmp
xabort
clc
aad
add
outsl
mov
add
dec
cltd
add
mov
jo
add
jg
dec
mov
rorb
inc
add
sar
mov
fwait
jmp
sbb
fistpll
dec
jmp
fwait
jmp
das
sub
in
arpl
add
push
movsl
clc
jbe
in
or
cmp
add
clc
into
lea
add
mov
clc
sbb
dec
cwtl
lods
sbb
mov
out
jne
add
fwait
jmp
dec
mov
mov
inc
clc
pushf
push
clc
add
add
add
out
mov
add
pop
inc
add
clc
fwait
cmp
clc
xchg
decl
push
ret
xor
sub
shlb
add
call
aas
mov
lcall
call
xchg
xor
add
sub
add
add
pop
int
add
mov
add
clc
mov
jae
add
lock
add
xor
add
clc
ss
add
push
push
shlb
add
mov
fwait
jmp
jno
pop
pop
aad
mov
sub
xchg
inc
clc
mov
add
pop
pop
bound
add
out
and
add
clc
aam
fldcw
gs
cwtl
fistl
mov
clc
xor
add
clc
jne
dec
push
add
faddl
clc
and
outsl
out
bound
add
add
add
and
mov
xchg
ds
cmc
cmp
clc
adc
add
clc
je
push
xchg
adc
add
mov
add
into
xchg
or
cmp
add
xbegin
ret
clc
call
cmp
add
clc
xor
add
mov
mov
jmp
fwait
jmp
sbb
clc
mov
fldenv
xchg
adc
add
sar
shr
mov
sub
xor
sbb
cmp
fwait
add
add
add
stos
push
out
push
lret
inc
clc
mov
mov
sub
into
xabort
mov
mov
mov
add
jmp
test
add
lahf
cmp
hlt
inc
clc
iret
int3
jo
add
icebp
jle
clc
ja
xchg
and
mov
add
jnp
clc
mov
inc
clc
cmp
imul
jae
add
hlt
nop
scas
fisubrl
jl
sbb
jmp
xchg
sub
clc
ret
xbegin
and
push
ret
sbb
add
sahf
mov
mov
add
add
and
iret
jp
pop
imul
clc
hlt
movsl
clc
mov
push
ret
sahf
sub
push
add
inc
clc
imul
clc
jecxz
decb
xor
inc
clc
jmp
aaa
mulb
add
add
mov
jns
insl
repz
loope
inc
add
int3
call
imul
ljmp
jno
add
mov
test
add
xor
add
push
lods
fs
xchg
mov
loopne
sar
clc
daa
clc
xchg
mov
fwait
lahf
cmpsb
clc
test
add
pop
cwtl
jno
add
add
filds
add
jmp
fwait
jmp
cmpsb
lahf
hlt
push
hlt
push
add
sub
add
insl
mov
adc
cmp
clc
sbb
jecxz
mov
xbegin
clc
loope
ret
clc
mov
add
add
add
pop
enter
in
push
and
add
inc
add
xbegin
and
and
scas
aad
add
add
xbegin
pop
fs
lea
add
bound
add
mov
mov
clc
adc
add
in
data16
push
add
push
jg
add
pop
das
xchg
dec
aaa
add
add
mov
fwait
jmp
dec
push
jg
add
add
push
data16
aas
sub
clc
jecxz
or
data16
ja
loop
jbe
in
xchg
lcall
lcall
clc
mov
mov
add
inc
clc
je
gs
js
push
add
dec
mov
in
scas
adc
lcall
outsb
xlat
test
out
add
add
or
xchg
ss
xbegin
add
clc
popa
add
adc
add
add
dec
xchg
pop
iret
push
add
ds
clc
scas
pop
repz
mov
add
add
clc
decl
jmp
sub
add
add
add
add
test
dec
frstor
stos
mov
jns
clc
xbegin
popf
pop
clc
and
add
clc
movsl
clc
dec
sti
sarb
movsb
clc
and
add
cmp
push
aam
inc
clc
sbb
inc
clc
push
clc
jne
push
add
adc
movsl
clc
dec
pushf
xchg
dec
inc
add
psrad
insl
cmp
into
mov
adc
add
and
add
jne
call
add
rcl
push
stos
mov
xbegin
out
sbb
push
push
add
pop
push
pop
cmp
mov
clc
mov
pop
sub
cmp
out
jns
clc
fs
mov
add
clc
or
adc
add
clc
and
das
and
int
clc
inc
clc
mov
and
loope
jl
add
add
es
dec
or
clc
sub
add
add
test
pop
pop
das
sbb
xchg
xor
add
icebp
xor
testl
out
pushf
xabort
out
mov
das
push
cwtl
jae
add
cmp
xchg
cmc
jp
pop
dec
inc
add
fisttpll
fisttpll
sbb
push
xchg
cmp
add
popa
add
adc
add
clc
dec
daa
clc
insb
xchg
mov
jmp
jg
sub
add
clc
outsb
fsubrs
in
nop
jmp
clc
aas
inc
add
add
add
add
fcoml
add
cli
or
inc
add
repz
add
ja
jmp
mov
outsb
sbb
clc
fs
repz
mov
pushl
es
sbb
clc
int3
add
add
add
clc
sub
sbb
call
aas
adc
aas
push
fwait
xor
add
and
add
add
insb
sbb
add
add
add
add
add
clc
cmp
cmp
cmp
add
clc
pop
aaa
test
gs
and
add
pop
adc
add
clc
loop
mov
jmp
sbb
scas
enter
out
jmp
cmp
add
enter
mov
clc
loope
mov
fistps
sub
fwait
jmp
cmpsb
jno
nop
imul
add
inc
add
jno
add
xchg
or
mov
in
dec
push
nop
int
and
add
push
add
repz
mov
sub
ds
insl
mov
popl
clc
xchg
dec
lret
cli
jle
add
add
in
jns
clc
in
or
cwtl
mov
inc
clc
ss
add
jl
add
addr16
imul
decl
fwait
jmp
sub
sub
clc
das
mov
sub
jno
add
arpl
add
clc
cli
fimuls
sbb
fwait
jmp
sub
ja
sub
clc
lods
mov
jo
add
cwtl
push
in
pop
lods
mov
mov
clc
sub
jg
pop
popa
add
push
roll
add
mov
aad
out
js
adc
add
add
mov
clc
xbegin
stos
aaa
or
adc
add
setnp
add
dec
sub
add
add
add
cmp
lahf
jae
add
or
mov
push
incl
aad
pop
dec
push
add
fwait
mov
add
add
clc
pop
clc
ror
jle
jnp
data16
je
xchg
int3
fcmovnbe
repnz
add
add
add
sti
movsb
clc
stos
jle
fildl
add
int
clc
lret
pop
dec
and
add
add
cmp
and
addr16
into
je
clc
nop
xlat
aas
jbe
mov
clc
outsb
xchg
ss
pop
ret
clc
out
ret
nop
mov
sar
repnz
mov
clc
repz
ss
add
mov
and
add
insb
dec
out
or
stc
jns
out
scas
dec
dec
or
xbegin
dec
and
add
dec
call
bound
add
add
sub
clc
sub
mov
and
in
sbb
loop
cmp
inc
clc
mov
mov
mov
cmp
clc
mov
nop
cmp
add
push
add
mov
jnp
xor
xchg
jns
pop
jmp
aam
out
sbb
jbe
fwait
jmp
add
xor
pop
cmp
mov
insb
std
rorb
add
add
and
jne
add
in
add
add
icebp
fwait
jmp
dec
inc
and
push
add
sub
dec
ret
add
xor
gs
pusha
add
jmp
jecxz
jnp
xor
add
iret
sti
fstps
or
mov
jmp
xchg
sub
add
add
push
cwtl
pop
popf
lret
loop
pop
sbb
mov
add
outsb
gs
pop
clc
arpl
add
mov
sub
add
add
out
jbe
clc
es
cmpsb
clc
cmp
clc
jg
add
inc
clc
or
clc
mov
add
int3
cmp
fincstp
testb
or
int
and
add
clc
ja
clc
out
mov
or
sar
and
push
rcrb
xor
clc
sbb
cmp
in
jae
add
clc
cltd
sub
pop
mov
add
jns
pop
out
or
mov
add
cld
std
dec
xchg
aaa
cmpsl
clc
lret
mov
clc
xchg
pop
add
add
add
add
add
es
xor
add
clc
sub
push
push
clc
loope
add
add
and
add
clc
jo
add
push
jmp
nop
jno
and
cltd
lcall
jmp
sub
nop
inc
mov
in
sbb
clc
aad
xchg
mov
mov
inc
clc
push
clc
fildll
adc
js
std
dec
add
add
add
clc
push
add
sbb
clc
xor
fidivrl
add
test
jbe
and
cmp
mov
pop
xor
clc
loop
das
jmp
std
repz
clc
push
add
add
add
cld
xbegin
jo
add
clc
mov
dec
xabort
and
add
mov
rorl
cltd
inc
add
pusha
add
mov
jae
add
or
add
add
repnz
clc
pushf
or
cmp
clc
pop
leave
dec
xor
add
clc
loope
xchg
or
xchg
push
jmp
xchg
sub
mov
add
push
add
fucomi
ljmp
repnz
stc
shrb
jle
clc
add
add
aam
clc
testb
scas
sar
add
sbb
adc
add
add
daa
clc
lahf
cmp
int3
outsl
dec
rcrl
add
push
add
pop
mov
pop
and
loopne
pushl
rcrb
dec
dec
sub
cld
nop
xchg
add
add
add
push
ret
sub
sti
stos
sbb
clc
add
add
add
add
add
mov
clc
bound
add
xor
add
add
inc
add
mov
fistps
arpl
add
add
push
clc
out
ja
dec
int3
fidivrl
lock
xchg
loope
or
or
add
xchg
test
int3
clc
adc
add
jl
gs
pusha
add
leave
add
add
js
rep
test
mov
mov
add
outsl
mov
mov
add
enter
mov
clc
jbe
add
out
jne
add
loopne
sbb
sar
add
vsqrtps
add
out
mov
icebp
mov
clc
popa
add
sahf
sub
aas
jge
push
lcall
add
sti
xchg
cmp
fnop
clc
xbegin
clc
scas
arpl
add
clc
outsb
jp
bound
add
add
mov
add
ss
pop
jnp
mov
dec
adc
clc
mov
int3
hlt
fmuls
das
and
add
cmp
divb
add
sub
add
ss
cmp
dec
push
cmp
add
repnz
pop
push
fs
xor
data16
inc
clc
or
push
jne
clc
sub
aaa
push
scas
insb
gs
adc
clc
xchg
scas
loope
mov
inc
add
inc
add
push
add
sub
js
pusha
add
lods
data16
lea
jns
add
test
roll
cmp
clc
push
movsb
fwait
jmp
sbb
lods
xabort
xlat
xlat
fs
lcall
clc
clc
fldcw
add
jae
add
clc
and
add
mov
inc
add
xchg
sbb
adc
add
add
inc
clc
xchg
ffree
clc
sbb
add
jge
jle
dec
jne
imul
test
hlt
pop
imul
mov
add
mov
sar
lret
xchg
xor
add
clc
adc
arpl
add
mov
inc
add
jecxz
fucomp
lret
and
add
dec
js
mov
das
xchg
into
xchg
insb
cmp
or
fwait
jmp
sub
sub
add
mov
scas
lock
inc
clc
je
clc
push
clc
xbegin
fs
clc
sahf
out
sub
mov
clc
and
add
add
ds
sub
push
add
jbe
clc
pushl
idiv
push
ret
xchg
sub
xchg
es
bound
add
clc
xor
add
stc
leave
adc
add
test
push
cmpsb
clc
repz
clc
adc
add
add
add
add
dec
enter
push
call
fwait
jmp
pop
and
in
data16
xor
cmp
dec
add
add
add
jmp
dec
ds
mov
push
add
xor
fwait
jmp
cmp
stos
pop
scas
mov
ja
inc
add
xor
push
sahf
xchg
push
add
push
sbb
fldcw
add
add
add
dec
leave
loop
fwait
cmp
add
add
jns
jle
sbb
add
mov
add
cld
imul
mov
pop
sbb
icebp
push
clc
xor
add
add
hlt
sbb
lods
and
add
and
add
or
popl
and
sar
sbb
adc
add
push
ja
add
loop
movlps
add
dec
push
add
out
movsl
clc
xchg
call
add
jb
add
inc
clc
or
clc
dec
mov
add
lods
push
cmp
sbb
imul
popa
add
inc
clc
inc
clc
mov
out
inc
add
sub
aas
mov
add
shlb
clc
dec
outsl
popa
add
xabort
mov
push
ret
adc
int3
cmp
fwait
push
clc
js
popa
add
cwtl
aam
out
loopne
adc
add
add
xchg
adc
add
add
sar
test
pop
clc
mov
add
or
or
add
bound
add
clc
data16
hlt
aaa
mov
clc
mov
and
fwait
jmp
jg
xor
push
add
sbb
pusha
cld
push
ret
xor
sub
add
cmp
mov
clc
lahf
xchg
test
scas
lock
clc
out
mov
mov
xor
add
add
or
jne
insl
jae
add
add
gs
push
push
fwait
jmp
cmpsb
leave
clc
and
add
add
clc
popf
add
sahf
xchg
jb
add
clc
inc
clc
jnp
movsl
clc
sub
iret
mov
adc
sub
add
ljmp
inc
add
adc
add
fs
pop
xlat
xchg
mov
mov
cmp
dec
fimuls
add
jne
hlt
dec
sub
xchg
sub
clc
sbb
add
loope
mov
enter
cmp
daa
clc
jo
add
add
call
add
xor
clc
push
mov
clc
pop
clc
cs
push
clc
out
and
out
clc
stos
adc
clc
aas
xchg
pop
push
add
fwait
jmp
and
add
add
clc
sub
add
clc
mov
and
add
ret
cmp
nop
adc
add
das
cmc
xchg
movsb
clc
data16
dec
mov
pop
sbb
clc
sbb
xchg
pop
mov
add
add
xor
add
add
ds
mov
jecxz
and
scas
rolb
lock
clc
iret
jnp
sar
clc
cmc
mov
jo
add
testb
add
add
pop
into
pop
adc
add
lods
test
insb
inc
add
lock
pop
movsl
clc
or
clc
data16
imul
add
clc
mov
add
lock
repnz
add
mov
stc
xor
add
add
sub
aad
data16
jecxz
cmp
add
repnz
clc
cmp
clc
int3
mov
inc
add
sbb
clc
mov
clc
aaa
arpl
add
add
pop
push
add
xor
add
or
add
adc
add
add
add
add
out
cmp
add
int
clc
cmp
clc
out
sahf
cs
add
add
sub
ja
add
mov
sub
add
or
sbb
add
in
xchg
sbb
mov
clc
cmp
stc
call
add
sar
clc
or
mov
jmp
xchg
movsb
cmpsb
ds
cmp
add
popa
add
jb
add
jno
add
mov
clc
fdivrs
add
add
inc
add
ljmp
jge
shr
xchg
jno
add
jns
fsubs
clc
sar
pop
sub
adc
pusha
add
push
add
in
ds
arpl
add
add
xlat
and
jo
add
and
add
outsl
aaa
jl
clc
cmpsl
clc
push
add
shll
add
aam
add
sub
idivl
push
outsb
add
add
xchg
add
or
add
dec
inc
add
adc
add
dec
xchg
sar
clc
adc
add
repnz
fimull
cmp
cltd
jg
clc
push
add
ss
add
fwait
jmp
jno
clc
sub
pop
xor
mov
mov
clc
test
bndstx
sbb
into
lret
add
cld
push
ret
or
add
add
test
pop
pop
bound
add
add
add
push
sub
mov
lret
inc
clc
sub
in
fs
nop
add
fisttpl
inc
add
mov
popl
clc
adc
add
addr16
inc
clc
jo
add
clc
sub
and
add
clc
sbb
sub
add
lea
pop
mov
inc
clc
std
cli
sub
clc
xlat
mov
and
add
add
adc
test
inc
clc
cmp
add
mov
sti
mov
dec
push
add
rcrb
clc
cmc
jl
clc
fdiv
push
pop
inc
clc
dec
pop
clc
or
push
shl
fwait
jmp
test
or
cmpsb
clc
mov
clc
popa
add
mov
or
cs
lock
add
add
jg
sub
repnz
push
or
pushf
fstl
leave
out
shr
ja
out
xor
add
shl
fwait
jmp
sbb
push
jp
outsl
ja
and
add
mov
fwait
jmp
aas
sbb
add
popa
add
dec
sbb
lock
and
add
cmp
add
mov
add
lods
daa
clc
stos
pop
cmpsl
clc
sub
ffree
clc
push
jmp
add
xor
clc
jle
add
push
mov
fwait
jmp
and
stos
mov
fadd
clc
je
add
ror
dec
or
test
popf
pop
lret
clc
sub
fldenv
add
rorb
cmp
add
push
add
jb
add
aam
cmp
add
sti
push
add
test
add
scas
mov
or
xor
add
xchg
movsb
clc
cld
xor
adc
add
mov
stos
cmpsl
clc
iret
inc
clc
cmp
cmp
inc
add
ficoml
add
or
add
inc
add
xbegin
sbb
clc
mov
clc
jle
jo
add
push
add
sbb
inc
clc
dec
add
xlat
inc
add
push
sub
sub
sbb
fcompl
add
add
mov
clc
data16
insb
pop
xor
add
xor
add
add
clc
sar
clc
mov
sbb
add
and
add
add
lea
add
jae
add
ret
clc
outsl
fstpl
pop
mov
mov
add
inc
add
loopne
push
jecxz
or
clc
mov
cmp
test
add
mov
add
cmp
pop
cvtps2pd
in
clc
push
js
clc
out
cmp
clc
aam
add
fistpll
decl
mov
ljmp
lea
test
add
add
add
inc
clc
gs
jb
add
sub
pop
fsubr
mov
mov
inc
clc
insb
sub
clc
sub
psubw
out
icebp
jg
clc
sbb
into
ds
data16
sub
pushl
fwait
jmp
or
xchg
mov
clc
aaa
out
push
and
jmp
test
hlt
fldcw
shll
mov
aaa
mov
ret
cmpsb
clc
iret
fwait
inc
clc
inc
add
jmp
clc
clc
ret
pop
clc
push
add
fisttps
pop
clc
sub
xor
add
sub
outsb
popa
add
lret
push
addr16
hlt
jb
add
pop
mov
clc
adc
add
dec
mov
cmp
clc
xchg
inc
clc
shrl
es
stc
cmc
cmp
inc
add
fistpl
popa
add
pop
cmp
sbb
dec
rcrl
jle
mov
add
add
bound
add
sahf
scas
inc
clc
mov
add
aaa
inc
add
inc
add
sbb
dec
inc
clc
and
add
or
xchg
decb
ret
clc
lahf
sbb
fwait
jmp
sub
pop
mov
add
cmp
rorb
add
jmp
fcompl
clc
push
add
cmp
mov
clc
das
call
or
jae
add
add
add
sub
out
inc
clc
sub
jno
add
sbb
addr16
fimull
pusha
add
aas
pushf
and
add
pop
add
add
add
clc
mov
lock
jo
add
add
add
clc
mov
or
cld
stc
inc
clc
stc
or
mov
mov
push
dec
pop
pop
cmp
pop
lods
sahf
cmp
add
loop
cltd
dec
ret
lock
mov
test
cmp
add
mov
xor
and
add
cmp
jg
in
jb
add
jle
push
fwait
jmp
nop
pop
sbb
leave
push
clc
mov
cmc
sti
xchg
lret
jmp
sbb
fwait
jmp
push
and
add
clc
cmp
xchg
fcmovnu
mov
mov
mov
pop
testb
clc
out
ja
clc
or
jp
clc
mov
add
imul
add
xchg
push
adc
add
add
add
fwait
jmp
pop
sub
sbb
mov
imul
scas
test
and
add
mov
add
mov
xchg
push
lds
ret
aas
push
jg
add
add
out
adc
mov
pop
cmpsl
clc
fwait
aas
adc
iret
push
incl
and
sub
popf
inc
add
inc
add
pop
xchg
arpl
add
clc
in
pop
fsubl
add
push
add
fcomps
lods
cld
push
ret
addb
stc
fistpl
iret
pusha
add
iret
mov
jno
add
outsb
jmp
jg
fwait
jmp
subb
cld
and
xbegin
repnz
sbb
push
adc
add
mov
cld
push
ret
cmp
pop
out
xor
clc
insl
std
sub
clc
out
add
scas
test
sub
jmp
cmc
loopne
jns
cmp
add
add
xchg
lea
cmp
add
aaa
pop
clc
cmp
lods
sbb
add
add
sub
loope
ja
popa
add
pop
cmp
add
mov
mov
clc
sbb
imull
push
dec
jbe
clc
imul
add
mov
or
add
cmp
sar
mov
jbe
sar
add
sbb
push
adc
jmp
test
pop
cld
push
ret
jge
scas
cmp
jne
fwait
jmp
aaa
jg
jo
add
enter
clc
aas
and
add
add
clc
sar
inc
clc
aam
ret
mov
fs
in
dec
pop
ret
add
cmpsl
clc
sub
into
insl
jmp
jge
add
add
clc
add
clc
lods
or
add
lahf
or
add
add
pushf
fs
dec
pop
and
add
mov
cmp
clc
pop
fwait
js
es
fnstenv
mov
inc
add
mov
adc
add
lcall
clc
inc
clc
pushf
pop
mov
clc
xchg
rclb
outsl
or
stos
bound
add
hlt
add
add
xchg
mov
inc
fwait
jmp
mov
lea
add
cmp
out
push
clc
int
int3
lcall
mov
clc
mov
push
inc
clc
or
add
jae
add
test
adc
add
add
fsubs
add
jae
add
clc
cmpsl
clc
mov
add
add
add
movsl
clc
daa
clc
mov
insl
add
add
xchg
xor
add
clc
adc
add
sti
mov
fwait
jmp
mov
nop
sub
in
popf
adc
sub
add
std
in
insb
jo
add
sar
fsubl
add
clc
dec
jb
add
cmp
test
mov
addr16
mov
add
mov
clc
scas
cmpsb
clc
cmpsl
clc
jno
add
clc
sbb
dec
adc
add
xchg
xchg
fadds
add
lea
clc
sub
xchg
xor
add
push
sub
mov
das
sahf
xor
sub
push
add
shlb
clc
fimull
add
add
mov
repz
loop
adc
add
and
add
and
add
add
mov
cmp
jne
fwait
jmp
clc
adc
add
clc
test
cmp
clc
inc
add
adc
add
xadd
outsl
and
add
clc
pop
decb
pop
bound
add
rclb
inc
add
movsl
clc
shrl
cmp
cld
push
ret
sbb
xlat
neg
aaa
cmp
repz
loope
jno
add
add
js
fdivrs
cmp
repnz
outsl
or
xchg
dec
fmuls
cmp
add
sub
add
adc
add
mov
out
loop
jge
mov
clc
mov
add
fwait
jmp
imul
mov
test
outsl
cmpsb
clc
mov
clc
cmp
in
sbb
add
sbb
fprem1
rcll
int
clc
push
dec
mov
xchg
cltd
stos
mov
dec
into
cli
xchg
or
xchg
pop
call
add
data16
fstl
add
xabort
jg
clc
ss
add
add
push
fidivrs
mov
xor
add
adc
add
into
fsubrs
pop
incl
jmp
jge
sub
dec
sub
xor
xchg
sahf
stos
js
mov
clc
or
das
sbb
add
data16
movsb
clc
jbe
insb
out
sbb
add
popf
fwait
jmp
jg
popa
push
pop
xchg
in
jecxz
cmpsl
clc
leave
lahf
sub
clc
push
loopne
cmc
cli
enter
and
add
or
repz
sarb
or
clc
push
sub
decl
inc
add
insb
sbb
sbb
cld
test
test
push
inc
add
lcall
or
add
add
movsb
clc
jecxz
dec
pop
sbb
movsl
js
lcall
jmp
fwait
jmp
sub
xor
clc
fisubrl
fsubrp
lea
mov
fwait
jmp
push
scas
push
mov
add
lcall
clc
lret
pop
xor
add
and
aad
or
add
out
popf
xor
add
clc
and
add
clc
push
add
std
xor
mov
mov
add
stos
cltd
decl
aas
adcb
into
and
add
sub
clc
stc
cmp
mov
mov
pop
sub
mov
pushl
add
fwait
jmp
insb
or
add
fwait
add
add
add
xchg
cmp
clc
je
mov
push
sar
sub
add
clc
jo
add
add
inc
add
push
clc
in
jbe
add
add
push
cmp
in
xlat
push
mov
push
add
add
pop
pop
clc
cltd
dec
fnstenv
add
clc
lret
add
xchg
out
cmp
sahf
add
sar
dec
ds
cli
or
mov
clc
dec
imull
sar
clc
fidivrl
int3
mov
fsub
clc
sub
clc
sbb
ret
clc
dec
and
push
clc
test
ret
jmp
xchg
scas
jge
paddw
add
dec
jecxz
clc
clc
adc
mov
dec
mov
lods
mov
add
je
clc
fcomps
cmp
repnz
clc
adc
clc
or
jmp
add
add
mov
dec
xlat
gs
repnz
mov
add
inc
add
ja
fstp
sub
pop
and
dec
ljmp
in
pop
xor
add
mov
jmp
lods
sub
add
mov
mov
add
ja
clc
add
inc
call
subb
jb
add
shll
add
in
daa
clc
in
push
mov
cld
push
ret
sahf
sub
testl
add
jbe
dec
dec
adc
sti
fwait
jmp
add
clc
sub
cmp
pop
popf
pop
cmp
pop
aas
in
jg
xchg
add
push
add
pop
addr16
add
jle
mov
push
jns
xor
mov
pop
xor
jmp
pop
clc
cli
mov
xchg
mov
out
outsb
adc
add
jmp
test
fcoml
imul
sbb
xor
mov
add
push
mov
fwait
jmp
and
pop
movsb
mov
push
jmp
jge
sub
clc
xchg
das
push
jne
call
push
bound
add
clc
mov
fisubl
dec
sub
cmpsb
clc
and
add
pusha
add
push
loope
imul
popa
add
push
clc
cwtl
mov
jmp
adc
dec
xchg
out
add
add
xabort
dec
mov
hlt
cwtl
xchg
xchg
jmp
jnp
sar
cmp
clc
pop
xor
add
mov
clc
out
jecxz
clc
iret
inc
add
icebp
in
xor
add
add
mov
sbb
pop
daa
clc
cmp
clc
fidivl
push
cld
push
ret
jno
jg
or
sbb
clc
fisubl
add
mov
fwait
jmp
jge
sbb
add
add
add
sub
pop
stc
icebp
cmp
add
push
lcall
clc
imul
jg
xor
add
add
xchg
push
add
mov
ljmp
sub
arpl
add
dec
into
dec
xor
add
clc
pop
push
pop
jmp
je
clc
daa
clc
rorl
add
bound
add
pop
cmp
dec
adc
add
clc
xchg
mov
loope
dec
and
cmp
pushf
sbb
mov
add
jmp
jp
or
add
test
nop
mov
mov
clc
int3
jno
add
push
add
out
gs
shl
clc
pop
jo
add
das
ss
clc
fistpll
clc
push
clc
cmp
pop
in
data16
ss
movsb
clc
hlt
out
clc
mov
clc
cmp
insb
inc
clc
mov
mov
clc
mov
loop
lods
or
sbb
clc
scas
cmpsb
clc
mov
push
cwtl
pop
sahf
int3
sub
cld
push
ret
imul
ret
clc
and
jmp
fdivrs
jb
add
or
add
and
in
in
repnz
clc
ret
clc
scas
pop
mov
bound
add
clc
je
clc
pop
or
add
or
clc
dec
call
jmp
outsl
xor
in
dec
jmp
clc
and
add
outsl
add
add
out
xchg
sbb
add
xor
add
jmp
testl
in
fwait
incl
dec
adc
ret
mov
jl
cmp
jns
xor
add
jne
xchg
adc
add
clc
arpl
add
add
jmp
lcall
cld
push
ret
insb
and
cwtl
jne
lret
adc
inc
clc
xabort
cmp
dec
or
jbe
cmp
clc
iret
xor
add
pop
xchg
cmp
loope
lcall
add
push
ja
xor
lahf
fiaddl
add
in
add
add
add
mov
add
add
int3
cmp
aam
add
fdivrs
xchg
aam
push
jns
mov
or
clc
cmp
clc
dec
sbb
out
int
clc
insb
push
add
xchg
shlb
or
pop
in
cmpsl
clc
lock
clc
mov
add
sbb
and
xor
push
xabort
clc
and
add
add
push
clc
inc
add
cmpsb
clc
pop
and
add
xbegin
clc
sbb
add
jb
add
int
clc
enter
std
repnz
or
clc
shll
mov
cmp
clc
jnp
pop
inc
add
cmp
clc
cmp
dec
add
add
add
in
negl
ss
pop
push
add
inc
clc
or
bound
add
push
popf
scas
idivl
sub
xor
cld
push
ret
jno
sub
add
lcall
add
inc
add
xor
add
xchg
pop
insl
push
jnp
clc
xchg
insl
pop
clc
aaa
mov
mov
stc
icebp
out
mov
and
fwait
jmp
xchg
dec
insb
mov
das
lahf
shll
clc
lock
jl
clc
test
xbegin
fwait
jmp
das
dec
ja
push
add
add
add
jge
clc
lods
lods
in
mov
out
aas
xlat
mov
outsb
inc
clc
pop
xlat
scas
adc
add
cmp
mov
add
add
mov
clc
and
add
jne
inc
add
mov
data16
jns
fcmovnb
clc
addr16
mov
cmp
je
repz
add
add
jns
cmp
clc
xor
lock
mov
mov
fwait
jmp
mov
stc
push
add
repz
popf
repz
add
fcomps
jbe
cli
imul
imul
jmp
data16
mov
ret
clc
push
add
jns
clc
sbb
push
fwait
jmp
dec
xchg
dec
dec
pop
add
add
jns
lock
add
sti
shr
pop
iret
lods
adc
push
add
jl
cmp
clc
push
dec
cmp
cmp
add
inc
add
xor
aaa
rorb
add
dec
testl
into
imul
add
cmp
xchg
cmp
sar
add
and
add
cmpsb
clc
pop
stos
mov
sbbb
je
or
add
mov
add
xor
add
jne
add
lahf
stc
or
repnz
xor
xor
dec
xchg
cltd
or
dec
mov
add
sti
push
xlat
inc
clc
mov
clc
pop
aaa
dec
in
pop
stos
in
mov
sar
push
ret
add
add
fs
cmp
sub
sbb
clc
scas
bound
add
add
jmp
fndisi(8087
clc
add
out
jnp
arpl
add
in
push
mov
add
sub
inc
clc
cmp
clc
imul
and
add
sahf
sbb
push
push
popa
add
inc
add
add
fcmove
cmp
mov
fld
clc
jp
clc
cmp
clc
inc
add
inc
add
sar
cmp
push
inc
add
ss
mov
and
jmp
sub
repnz
jge
clc
imul
add
jnp
cmp
mov
clc
jmp
clc
mov
add
push
add
sbb
and
add
add
jp
pop
cwtl
push
add
mov
jmp
sub
cmp
xor
add
sub
lret
add
dec
lret
enter
jns
fcomp
inc
clc
push
cmpsb
clc
sbb
clc
sar
notl
cmp
int
clc
inc
clc
cli
jle
clc
fsts
or
outsb
pop
xchg
mov
cmpsb
clc
cmp
adc
add
clc
fsubrp
mov
clc
or
pop
clc
jmp
ficomps
dec
pop
sti
cmp
shlb
xor
add
in
push
cmpsl
clc
inc
clc
test
add
ret
adc
add
dec
adc
add
add
aad
clc
dec
gs
dec
mov
clc
jl
jge
into
mov
pop
das
fwait
aaa
out
cmp
mov
ljmp
lahf
cs
sarl
dec
je
loopne
or
fucomi
das
adc
add
add
clc
mov
clc
js
push
xchg
loope
clc
inc
add
data16
push
mov
add
clc
sub
clc
ficoms
inc
clc
adc
add
push
clc
out
jae
add
icebp
sub
inc
add
fs
enter
sbb
add
lea
cmp
push
add
sti
cltd
in
jmp
cmp
add
ja
jbe
add
jp
je
je
clc
inc
clc
das
and
add
jg
xor
add
aaa
and
add
enter
xchg
cmp
add
icebp
and
add
mov
clc
jg
lods
incl
or
ljmp
movsb
cmpsb
add
add
movsl
clc
xchg
lret
hlt
repz
clc
cmp
and
add
gs
sbb
dec
adc
fs
pop
cwtl
jbe
loope
cmp
call
xor
add
sub
add
add
push
stos
popl
ffree
clc
bound
add
insb
cltd
xchg
ds
scas
imul
add
add
cmpsb
clc
pusha
add
addr16
jbe
sbb
gs
mov
in
fisttps
or
pop
mov
push
pop
jo
add
test
mov
add
push
lahf
lahf
pop
adc
jo
add
js
clc
xor
fcmove
push
add
inc
add
sar
clc
xchg
and
pop
xor
add
fwait
inc
add
cwtl
sbb
clc
mov
clc
std
cmc
int
sar
jg
pop
cmp
mov
clc
sub
jle
insb
call
clc
xor
clc
repnz
mov
clc
mov
add
enter
add
test
movsb
clc
xchg
dec
fldcw
jle
clc
imull
fwait
jmp
adc
mov
mov
add
in
into
inc
add
adc
add
outsl
xchg
lods
cmpsl
clc
rorb
and
add
scas
xchg
fisubrl
call
ret
stos
sbb
clc
add
add
xor
add
add
js
dec
mov
test
jl
addr16
sub
add
clc
mov
pop
clc
stos
pushf
test
add
jp
mov
daa
clc
ss
add
sub
int
add
or
mov
sar
inc
clc
sbb
mov
pop
stc
faddl
push
cld
push
ret
lods
cmp
out
js
xchg
lods
push
add
jmp
add
pusha
add
lods
out
pop
and
add
fcompl
jns
test
jl
push
add
inc
clc
in
addr16
divl
add
add
dec
jp
clc
mov
clc
dec
lret
daa
clc
outsb
push
xchg
mov
inc
clc
adc
add
imul
cmp
sar
add
mov
or
clc
jge
inc
clc
push
ljmp
cmp
clc
insb
lods
mov
jbe
cmpsl
clc
push
add
sarl
ja
adc
add
fbstp
add
clc
and
add
dec
frstor
clc
cmp
lods
hlt
hlt
popf
adc
mov
fwait
jmp
sub
dec
mov
xchg
fwait
jmp
pop
lea
and
cmp
jmp
jg
sub
mov
icebp
mov
pusha
add
cmp
clc
xor
add
add
rorl
loopne
mov
clc
sar
dec
mov
lcall
push
mov
add
clc
ficoms
lret
scas
push
call
cld
push
ret
jno
cmp
cmp
call
outsl
clc
jl
jmp
mov
xor
fwait
jmp
and
add
clc
call
push
ret
xchg
outsl
pop
insb
popl
add
add
clc
jbe
clc
fwait
cld
sub
inc
clc
gs
out
sub
clc
leave
imul
jns
or
clc
mov
clc
inc
clc
jne
flds
or
jmp
or
sub
out
pop
xor
add
xor
add
pop
mov
mov
mov
lcall
pushl
fwait
and
add
clc
stos
leave
test
xchg
sbb
gs
in
cs
cmp
mov
xchg
jmp
clc
jae
add
clc
lcall
clc
testb
add
clc
idivb
outsl
mov
cmp
adc
jle
add
lcall
and
add
add
lods
dec
int3
push
clc
push
clc
jae
add
mov
testl
add
clc
cmc
inc
add
adc
mov
mov
cmp
add
jl
dec
dec
int3
leave
ja
fisubrl
fwait
jmp
insb
xchg
or
add
adc
add
clc
int3
add
pushf
cmp
add
jbe
mov
cmp
aad
jne
clc
xchg
cmpsb
clc
arpl
add
lret
xor
add
jne
fwait
jmp
int
test
lcall
add
lock
sti
lahf
es
lahf
fists
add
sbb
clc
xabort
pop
push
cmp
int
clc
aaa
sbb
lahf
adc
add
shll
mov
pop
inc
add
pop
jne
and
add
loop
loope
lods
xchg
dec
sub
dec
dec
mov
add
mov
fistl
cmpsb
inc
dec
lcall
jmp
pop
push
pop
pop
test
add
mov
clc
cmp
add
cmp
outsl
xchg
cmc
jbe
cmpsl
clc
cli
cltd
enter
and
cld
push
ret
ja
dec
mov
add
inc
add
iret
push
add
out
push
add
fs
icebp
inc
clc
jns
xchg
fisttpll
or
pop
mov
int
into
mov
add
out
sti
jne
jle
clc
notb
add
ret
clc
stos
mov
sub
or
xchg
insb
inc
add
and
add
push
add
xor
movsl
clc
ret
clc
test
inc
clc
call
add
mov
scas
add
add
add
fwait
jmp
je
push
dec
insl
sub
mov
xor
add
or
icebp
cmp
clc
inc
clc
popa
add
in
lods
xchg
pop
xchg
jb
add
jle
test
gs
ljmp
dec
cmp
outsb
mov
bound
add
sbb
insb
in
ljmp
cmp
clc
jecxz
push
sub
sub
clc
mov
or
jp
data16
jns
sub
jl
adc
add
add
xbegin
stos
sub
or
add
clc
pop
adc
gs
pop
ficompl
xchg
cmp
aam
and
add
xabort
repz
in
pushl
push
ja
push
add
or
inc
clc
aam
add
sbb
clc
addr16
ja
add
jns
push
mov
shr
push
clc
cmp
xchg
sub
add
add
mov
call
int
repz
pusha
fwait
jmp
dec
and
or
add
cmc
mov
inc
add
icebp
and
add
arpl
add
add
daa
clc
adc
add
loopne
out
cli
sub
mov
xchg
xor
add
sar
scas
or
imul
mov
add
in
fidivrl
clc
scas
push
push
cld
push
ret
sub
movsb
cmp
add
aaa
mov
add
add
sbb
mov
fwait
jmp
sub
in
inc
add
stos
cwtl
movsb
clc
repnz
clc
out
dec
ret
clc
pop
mov
fisubl
add
cmp
mov
leave
push
xchg
push
add
inc
add
mov
clc
and
add
clc
sar
lret
out
dec
ss
or
mov
clc
sbb
clc
rcll
sti
aam
fimull
cmp
jns
xor
ds
inc
add
sti
sub
lret
jno
add
sar
push
clc
aam
mov
push
jns
and
add
and
add
or
xchg
fnstsw
pop
ror
dec
xor
add
add
notb
clc
mov
push
mov
fwait
jmp
push
insb
insb
je
mov
fdivrl
clc
lock
jo
add
add
inc
add
adc
add
clc
jo
add
clc
xchg
cmp
xabort
fs
adc
add
mov
cmp
cmp
jmp
or
clc
mul
clc
popa
add
cmc
pop
xor
add
add
or
mov
test
sar
clc
sbb
test
jmp
xchg
push
and
add
push
roll
add
xor
add
and
add
or
out
cmp
clc
mov
into
mull
add
jecxz
inc
add
std
mov
clc
lods
mov
movsb
clc
cmp
imul
xchg
mov
ss
movsl
clc
inc
add
in
or
add
sbb
mov
lods
lea
imul
sbb
mov
test
and
add
xor
add
add
push
xchg
imul
bound
add
add
sar
clc
divl
add
pop
aaa
push
push
rep
fwait
jmp
movsb
and
sbb
add
clc
movsb
clc
adc
add
add
clc
push
mov
jno
loope
mov
push
sub
sub
jle
lret
add
add
call
add
leave
data16
pop
pop
inc
clc
iret
lea
pop
clc
jecxz
pop
clc
dec
shl
dec
sub
int3
jnp
add
outsl
cmp
scas
add
add
add
fs
imull
push
mov
lock
add
xor
add
add
pop
clc
cmovg
add
stos
push
jmp
sahf
cmpb
xor
pop
negl
clc
cmp
int
and
pop
inc
add
xchg
addr16
je
dec
pop
clc
enter
clc
mov
rcrb
cli
scas
inc
add
dec
pop
push
add
xor
add
fucomi
dec
jno
add
cld
leave
dec
aad
clc
push
clc
nop
cmpsb
clc
xlat
cmpsl
clc
xchg
cmc
test
add
cli
dec
clc
pop
dec
pushf
or
clc
cmp
gs
push
push
ret
cmp
imull
pop
stc
jle
cld
js
fs
mov
xchg
iret
dec
add
pop
sbb
add
into
mov
jg
add
push
add
pop
into
and
add
fnstenv
fs
iret
pop
scas
rcr
incl
movsl
mov
sub
mov
popf
add
add
icebp
pop
mov
sub
clc
jo
add
loope
out
out
mov
xchg
pop
out
dec
aad
clc
and
add
clc
cmc
sub
clc
roll
jns
clc
bt
add
add
es
add
add
ds
sub
loopne
add
add
add
fwait
jmp
test
add
add
lods
push
add
clc
shrb
inc
clc
hlt
push
mov
cld
push
ret
insb
sub
clc
cld
inc
clc
inc
clc
cmc
mov
dec
arpl
add
ret
add
add
add
add
add
mov
mov
fs
xabort
xor
add
add
lea
sbb
cld
push
ret
push
xchg
and
xabort
clc
inc
add
sar
add
insl
xor
add
fsubr
ret
clc
cmp
loope
pop
ret
clc
add
add
inc
add
xor
add
stos
es
addr16
fnstcw
xchg
popa
add
jno
add
add
add
sbb
rcrb
jmp
jbe
fdiv
ret
add
xor
clc
bound
add
cmpsb
clc
push
dec
add
sarb
add
fwait
jmp
das
push
ja
add
incb
clc
dec
pop
dec
ljmp
aas
test
clc
daa
clc
fldl
clc
mov
add
loope
popa
add
push
mov
fwait
jmp
jae
add
add
clc
aam
mov
jmp
cmovs
sahf
push
and
mov
fwait
jmp
sbb
add
inc
clc
adc
add
clc
pop
imul
test
clc
xchg
xor
add
add
jmp
push
cmp
push
cmp
clc
mov
loopne
pop
and
add
dec
xor
add
sub
add
and
add
lret
ds
clc
cmp
clc
out
xchg
dec
divb
add
xchg
pop
add
add
sub
mov
cld
push
ret
add
sub
add
xabort
add
sar
leave
sub
add
add
mov
clc
pop
jmp
add
scas
pop
pop
fwait
xlat
in
cld
negb
icebp
outsl
aas
sbb
lret
xchg
arpl
add
pop
add
add
xor
add
push
add
js
movsb
clc
sub
pop
mov
add
sbb
jnp
stos
or
addr16
dec
fs
cltd
fcompp
jbe
xor
push
into
and
add
clc
cmp
push
add
jo
add
mov
xor
add
push
lret
enter
mov
scas
sar
xbegin
push
jne
pop
cld
push
ret
popa
sub
sub
sub
jb
add
clc
xchg
out
popa
add
adc
add
add
dec
scas
jne
adc
mov
clc
cmp
add
add
push
add
jp
clc
pop
mov
icebp
int3
in
pop
fists
xchg
sbb
in
sub
add
loope
lods
adc
clc
mov
jecxz
fcmovne
jbe
add
jp
add
cmc
mov
leave
mov
mov
add
enter
add
sbb
lods
sbb
inc
add
sbb
add
mov
clc
test
xchg
adc
add
lret
clc
jmp
cmp
clc
sbb
dec
jecxz
and
sar
aas
stc
xor
xor
fwait
jmp
mov
jne
inc
add
mov
mov
dec
jnp
xchg
mov
push
ret
or
stos
xchg
adc
outsl
rcl
mov
call
xor
fwait
jmp
add
shll
add
cmp
cmp
add
mov
xor
add
push
ret
clc
es
adc
add
push
test
add
add
xchg
es
inc
clc
fbld
jl
clc
sub
dec
sbb
popf
fs
daa
clc
push
mov
or
push
jmp
sub
aaa
ljmp
ja
clc
cmp
sti
dec
sahf
jae
add
add
outsl
outsl
dec
lret
sub
clc
sbb
leave
or
lcall
sub
lcall
imul
xor
pop
clc
test
inc
add
push
push
ret
jge
repz
xor
add
add
jle
cmpsb
clc
cld
cwtl
xor
add
add
pop
outsb
mov
pop
fldcw
ja
clc
jns
test
fisubl
add
dec
ja
clc
shlb
inc
add
mov
cmp
outsl
jmp
jecxz
sub
popf
jg
cmpsl
clc
xchg
test
mov
fs
stos
leave
and
add
fwait
jmp
cmp
ja
add
fstl
add
clc
pop
jl,pt
shll
or
incl
out
ljmp
sub
loope
cmovnp
clc
and
add
mov
ds
imul
clc
out
xchg
clc
sub
fwait
jmp
pop
lea
clc
xchg
daa
clc
mov
mov
add
arpl
add
push
imul
das
jne
inc
clc
dec
mulb
and
add
fisttpl
daa
clc
cmp
add
add
jmp
fwait
jmp
scas
ds
popa
add
pop
icebp
jecxz
ss
ret
clc
mov
add
out
je
gs
pop
fldcw
push
mov
je
enter
lock
clc
aaa
pop
pop
lods
test
fs
mov
hlt
push
add
push
push
cld
push
ret
sub
or
sar
pop
dec
xor
add
add
incl
fwait
jmp
xor
add
or
add
icebp
xor
add
cmp
fs
ljmp
clc
sbb
inc
add
pop
imul
add
adc
clc
clc
pop
bound
add
lock
pop
fcomi
add
add
jae
add
add
js
add
sti
sub
aad
clc
xchg
jnp
clc
jnp
push
jmp
pop
clc
mov
clc
lahf
movsb
clc
stc
mov
test
cld
or
aas
stos
xchg
mov
out
das
rorb
xchg
pop
inc
clc
cwtl
pop
lahf
push
pop
daa
clc
rcl
and
push
add
adc
add
add
aas
cltd
daa
clc
mov
add
rcl
cmpsb
clc
sub
std
rcll
xchg
inc
add
addr16
addr16
scas
int3
cld
or
push
xor
xchg
cmp
insb
push
mov
sbb
clc
dec
mov
or
dec
push
add
jl
clc
scas
jne
clc
stos
fcompl
daa
clc
push
jo
add
cmc
call
and
add
cmpsl
clc
dec
cmp
dec
push
add
xchg
call
cmpsb
clc
or
jbe
jae
add
jmp
std
outsb
lahf
data16
sub
xabort
lret
xor
add
and
push
add
aad
add
movsl
clc
sbb
cmp
aaa
out
gs
push
lcall
decl
cmp
pop
add
add
jmp
dec
cmp
jmp
and
sub
leave
cltd
jmp
aam
clc
jmp
add
inc
clc
mov
add
cs
jmp
add
inc
add
cmp
inc
add
aam
add
mov
clc
pop
mov
sub
mov
xchg
sub
mov
sbb
add
movsb
clc
cwtl
mov
cmpsb
clc
hlt
add
add
lret
enter
sbb
mov
add
add
adc
add
add
hlt
cltd
mov
clc
sbb
xchg
jg
or
je
jnp
mov
mov
clc
lea
add
mov
in
repz
clc
sbb
add
lods
mov
clc
sbb
mov
add
or
clc
add
add
sbb
pop
pop
in
add
add
add
xchg
mov
clc
cmc
lahf
and
clc
lods
inc
clc
repz
fistpl
or
mov
add
sar
add
cmpsl
clc
insl
sub
scas
and
add
and
add
lea
fwait
jmp
push
pop
dec
outsb
pop
cmp
add
jle
adc
push
call
add
add
in
inc
clc
mov
out
lods
cli
add
add
clc
jns
ja
sub
ret
int
clc
xor
pushf
and
add
clc
fadds
add
sub
add
pop
pop
xchg
and
add
add
xchg
js
cmp
mov
dec
adc
add
loope
dec
inc
add
mov
clc
sahf
ja
xor
std
add
add
fbld
add
clc
std
test
jecxz
fs
push
inc
add
clc
sbb
sbb
jno
add
inc
add
jl
cmp
mov
clc
cmp
clc
xchg
pop
push
sub
fwait
jmp
sub
cltd
fs
sub
clc
stc
cmp
fwait
jmp
andb
add
aad
add
inc
clc
call
pop
add
add
clc
push
out
incl
push
ja
inc
clc
push
lcall
decl
fstp
xor
add
clc
lods
scas
pop
xor
add
add
outsb
arpl
add
outsb
mov
fwait
jmp
cmp
mov
fs
jmp
nop
dec
xor
add
cs
test
imul
add
fld
clc
fsubrs
pop
and
mov
pop
dec
cmc
in
sub
xlat
mov
push
fwait
jmp
outsl
inc
add
rolb
add
aaa
cmp
clc
xor
add
call
repz
push
mov
fwait
jmp
insb
cmp
cmp
sub
gs
sub
add
and
jl
pop
in
mov
add
jnp
sub
iret
cmp
clc
shrl
add
lods
repnz
repnz
cmpsl
clc
pop
xchg
movsl
clc
sbb
add
mov
sub
mov
jg
fwait
jmp
or
and
add
es
inc
clc
mov
in
out
push
clc
fdivrs
add
push
add
and
add
mov
inc
clc
xchg
pop
pop
neg
mov
scas
and
add
sub
cs
fwait
jmp
sub
dec
stos
dec
fldt
lret
scas
sbb
test
lcall
jmp
add
push
je
fwait
jmp
mov
clc
xchg
sar
add
mov
add
inc
clc
xchg
cwtl
outsl
pcmpeqw
add
mov
push
add
dec
mov
pop
mov
add
dec
push
xchg
pop
loope
cltd
popa
add
push
fwait
lock
push
sahf
lea
frstor
mov
dec
jns
clc
pop
adc
add
add
push
jecxz
pop
outsb
xchg
mov
push
cmp
nop
jb
add
add
add
add
dec
shlb
js
sbb
mov
aaa
xor
add
fdivs
clc
adc
add
into
push
test
xchg
insl
outsb
hlt
xor
add
je
inc
add
or
cwtl
bound
add
mov
lret
ret
clc
ds
clc
shl
sub
je
add
inc
clc
sub
add
add
fwait
jmp
aad
dec
fwait
jmp
pop
adc
pushw
jge
clc
movzwl
xchg
push
add
sbb
jg
sar
add
add
fwait
jmp
xor
clc
outsl
push
adc
add
add
add
cld
fs
jo
add
fcomps
test
fwait
jmp
add
js
dec
lret
add
faddp
clc
sbb
clc
jnp
add
std
mov
clc
mov
clc
or
sti
add
xor
add
loope
in
lret
gs
dec
or
add
pop
out
cmp
js
clc
add
cmp
cmp
cmp
adc
clc
mov
jmp
pop
or
out
cmp
dec
sub
test
mov
aam
clc
mov
shl
pushl
pop
es
hlt
mov
std
jnp
pop
cld
push
ret
or
cmp
aaa
psrlq
clc
xchg
repnz
ss
push
add
sbb
sub
scas
out
jg
fldcw
imul
clc
int
clc
mov
jle
jb
add
test
xchg
dec
inc
clc
fisubrs
add
clc
sbb
push
xchg
nop
pop
stos
adc
add
mov
aas
mov
add
ljmp
dec
or
add
mov
add
dec
xchg
hlt
pop
xor
add
add
add
jmp
jge
add
mov
fwait
jmp
dec
daa
clc
addr16
movsb
clc
ljmp
jbe
mov
add
popa
add
sbb
repnz
fs
clc
nop
nop
add
add
ss
loope
sti
push
add
pop
js
sbb
imul
cs
clc
insb
cmp
sbb
pushf
xor
add
clc
jg
clc
push
fwait
jmp
sub
out
xor
add
mov
jne
mov
jle
clc
repz
add
cmp
clc
adc
inc
add
fwait
push
clc
data16
dec
addr16
push
add
lret
add
fstl
imul
insb
popa
add
inc
clc
ficoms
inc
add
aam
add
aam
testb
add
clc
dec
xchg
or
add
sbb
popf
cltd
pop
fsts
add
shl
clc
out
clc
adc
clc
or
icebp
leave
mov
mov
fwait
out
call
xor
add
jecxz
xchg
into
xchg
xor
add
xor
add
adc
cmp
out
repz
loop
xchg
xchg
cltd
enter
inc
clc
lret
insl
add
outsl
sub
adc
add
pop
jl
add
clc
addr16
int
or
dec
xchg
mov
or
clc
dec
ljmp
clc
add
popl
insb
lret
add
mov
add
cvttps2pi
clc
pop
inc
add
mulb
roll
clc
jp
add
das
pop
cmpsl
clc
mov
fwait
jmp
cwtl
cwtl
or
pop
sbb
decl
dec
adc
add
fwait
jmp
sub
add
jns
clc
mov
lock
add
add
inc
add
xchg
jl
add
pop
ss
pop
pop
dec
pop
clc
sahf
loope
mov
cld
sbb
clc
loope
sti
mov
mov
clc
xchg
fisubl
clc
pop
mov
cwtl
jbe
clc
aam
pusha
add
imul
or
clc
push
sbb
add
clc
je
cmp
popa
add
ljmp
jl
jp
cmc
jp
rcrl
int3
cwtl
xchg
es
push
enter
add
jp
repnz
addr16
rcrb
xchg
bound
add
insb
test
cmp
clc
jns
or
add
clc
add
add
cmp
inc
add
cmp
out
xbegin
push
adc
add
ljmp
and
test
clc
fnstsw
inc
clc
js
sbb
rclb
xor
inc
add
xor
fisttpl
repz
push
add
clc
jno
add
lock
clc
popa
add
lcall
incl
sbb
jg
sub
cmp
jecxz
nop
cmp
dec
or
add
sub
push
jmp
jg
outsl
in
in
push
add
sysenter
in
rcll
sahf
pop
dec
jns
clc
pop
clc
mov
and
call
fwait
jmp
fs
adc
add
mov
sbb
mov
adc
jmp
push
test
clc
incl
pop
and
jmp
sbb
es
cmpsl
clc
loope
cli
pop
addr16
scas
imul
clc
movsb
clc
call
movsb
clc
sbb
clc
pop
inc
clc
push
push
add
insb
add
add
loop
jno
add
cltd
cmp
mov
clc
lea
add
sub
push
maxps
add
sar
lea
fwait
jmp
xchg
sub
ss
arpl
ljmp
ds
scas
sub
sub
leave
cli
pushf
sti
arpl
add
clc
jbe
add
negb
repz
add
out
jb
add
jne
fwait
jmp
out
pop
repnz
clc
sub
cmc
and
add
xchg
test
sub
pop
xbegin
sub
sub
clc
adc
add
clc
xor
add
add
aad
leave
jp
out
data16
inc
clc
dec
lret
add
mov
lcall
incl
jne
clc
jo
add
mov
fwait
jmp
pop
aad
xchg
insb
cmp
mov
add
add
imul
clc
and
add
push
push
mov
add
add
add
add
sbb
add
out
dec
gs
mov
imul
clc
loope
and
add
add
jns
jae
add
clc
mov
add
iret
push
add
adc
add
mov
mov
push
and
add
add
xchg
sar
and
add
add
dec
inc
add
push
outsl
dec
arpl
add
add
int
add
inc
add
add
add
clc
sti
add
add
add
push
add
xor
add
cmc
ss
fstpt
clc
sar
clc
inc
clc
mov
add
xor
out
insl
test
add
add
or
mov
add
push
add
movsb
clc
in
mov
test
stos
stos
ficompl
sar
clc
mov
into
loope
jle
or
add
push
clc
ja
push
in
push
clc
mov
add
out
ficoml
inc
clc
cwtl
loopne
or
clc
inc
add
mov
mov
clc
outsl
jne
clc
cmp
add
hlt
mov
xchg
push
push
add
push
clc
jno
add
clc
xchg
sub
push
xchg
fmul
clc
fiaddl
add
clc
in
jge
add
sbb
mov
cmp
adc
add
add
add
xor
add
jmp
pusha
add
adc
clc
mov
clc
mov
add
test
sbb
clc
lret
fldt
cmpsl
clc
push
add
aaa
fsubrs
add
dec
jae
add
mov
fldt
xor
add
test
add
add
stos
rorb
clc
sub
imul
mov
mov
je
clc
lret
pop
ret
sbb
ret
add
cmp
clc
mov
dec
cld
xor
add
fdiv
es
mov
pop
jns
clc
fmuls
aaa
jo
add
jo
add
aas
mov
clc
rcrl
std
sti
or
repz
add
add
clc
sbb
add
dec
pusha
add
or
shll
add
insl
icebp
rorl
pushf
stc
in
mov
add
clc
cmpsl
clc
int3
xchg
scas
dec
sbb
stc
jnp
xchg
imul
clc
aas
cmp
add
inc
add
pop
xor
add
push
adc
add
aam
ds
clc
cmp
mov
movsl
clc
xor
add
adc
clc
repz
add
add
clc
cmp
pop
jmp
clc
push
add
push
mov
clc
cmp
sub
clc
insb
cmp
add
cmp
add
xchg
ror
xor
clc
clc
lret
cld
jecxz
xchg
mov
add
repnz
clc
jmp
clc
sub
bound
add
xor
add
pop
clc
jbe
icebp
loope
cmp
cmp
clc
pop
cmp
clc
sbb
clc
incb
cmp
rolb
jb
add
xchg
push
add
inc
clc
clc
jmp
add
mov
stc
cmc
or
pop
fwait
imul
push
add
pop
imul
cli
ss
iret
cs
clc
inc
add
lods
jns
add
insl
sti
mov
jne
cmp
cmp
add
outsl
pushf
cmp
clc
sbb
cld
dec
mov
add
add
pop
cwtl
movsl
clc
and
add
ja
sub
clc
inc
clc
cli
mov
or
cmp
clc
out
neg
inc
add
jne
clc
mov
clc
xchg
cmp
clc
daa
clc
stos
inc
add
inc
clc
test
outsb
pop
pushf
prefetchwt1
and
cmp
add
fbstp
add
clc
sub
clc
xor
add
cmp
clc
nop
loope
fldln2
cmp
mov
mov
cmp
in
sar
add
pop
xchg
adc
add
test
dec
sub
bound
add
xchg
add
ja
push
mov
add
add
gs
repnz
push
mov
jg
aam
popa
add
movsb
clc
sahf
push
add
insl
lret
or
addr16
sub
shrl
popf
push
leave
cmp
stos
pop
or
pushf
arpl
add
add
out
addr16
jp
clc
in
sbb
add
xor
add
clc
mov
clc
lahf
xchg
adc
add
sar
clc
push
add
std
adc
repz
test
gs
lock
mul
clc
cmp
cld
daa
clc
gs
repz
lret
add
jge
lcall
clc
jmp
push
cmpsb
clc
pop
sbb
and
add
jecxz
mov
lcall
clc
fcomi
xchg
lret
and
add
and
add
clc
clc
xor
add
sub
fisubl
add
nop
mov
ss
inc
add
pop
sub
sub
leave
add
pushf
sub
ds
ror
ja
inc
clc
pop
sub
clc
xor
add
nop
xchg
and
add
clc
cld
fs
cmpsb
clc
mov
add
loop
lret
adc
add
add
xlat
jg
xbegin
clc
cmp
cmp
push
add
fs
push
inc
add
lahf
push
push
shrd
clc
mov
adc
add
add
shr
sbb
add
add
clc
mov
clc
mov
jecxz
iret
jbe
sarl
clc
ret
add
data16
dec
push
add
adc
add
hlt
data16
cmp
jnp
mov
add
xor
push
sub
jne
clc
cmp
clc
mov
adc
add
add
fsubp
clc
xor
add
inc
clc
push
mov
ja
out
mov
clc
mov
xchg
adc
jno
add
pop
insl
xchg
and
clc
stos
pusha
add
push
add
aad
dec
mov
out
test
inc
add
test
lock
xchg
pop
adc
add
jns
jno
add
cwtl
jnp
add
sar
add
out
clc
test
mov
add
inc
add
cmp
push
jmp
repnz
ret
test
add
push
enter
pop
aad
es
adc
add
out
daa
clc
xchg
mov
popf
push
dec
dec
arpl
add
mov
clc
filds
pusha
add
add
add
and
add
ljmp
daa
clc
cltd
cmp
fcmovnu
bound
add
add
inc
clc
add
add
push
ret
clc
fstpl
adc
add
jb
add
clc
cmpsl
clc
cmpsl
clc
or
xor
clc
ds
mov
add
add
clc
test
xchg
nop
fnstcw
inc
add
xchg
shrb
clc
mov
xlat
scas
aaa
test
add
clc
jo
add
clc
push
sar
inc
clc
xor
add
jl
sbb
push
clc
jge
and
add
add
inc
clc
imul
stos
adc
add
mov
clc
jns
clc
push
mov
add
mov
add
and
add
clc
adc
add
bound
add
sub
frstor
add
add
clc
cld
pop
push
pop
call
movsl
clc
jne
rcl
jnp
clc
inc
clc
and
add
mov
cs
mov
std
clc
and
pop
clc
nop
mov
xchg
mov
xchg
mov
clc
ret
clc
int3
outsl
ficompl
out
lcall
clc
dec
in
lret
push
add
test
add
bound
add
add
push
add
mov
add
nop
xabort
out
mov
push
mov
clc
sub
clc
iret
rcll
add
add
mov
and
clc
lret
ljmp
push
sub
sar
sbb
mov
loop
popa
add
loopne
out
int
clc
iret
and
add
clc
popa
add
push
jno
add
clc
push
clc
push
add
dec
movsl
clc
mov
mov
or
addr16
mov
jp
mov
clc
sbb
inc
add
xchg
sub
ljmp
xor
add
xchg
inc
clc
cmc
cmp
ret
clc
push
out
fistpl
mov
lret
roll
cmp
xchg
lods
lods
xchg
or
xchg
sub
xor
add
clc
adc
insl
pop
cmp
or
vcmpps
imul
xchg
repnz
xbegin
add
ret
clc
push
pop
pop
ds
pusha
add
cwtl
sbb
out
cwtl
mov
pop
pop
sub
clc
dec
pop
add
inc
clc
test
movsb
clc
pop
call
mov
out
push
jmp
cmp
sar
add
jp
sbb
pop
clc
stos
cmp
sub
shl
cmp
sbb
pusha
add
ja
add
lret
lret
cmp
clc
fisubrs
cmp
push
fs
fcomp
sub
clc
bound
add
add
add
jmp
add
pop
inc
add
jle
cmp
loopne
jo
add
out
inc
add
outsl
dec
data16
fnsave
add
lret
and
add
add
gs
xor
add
add
jo
add
add
xabort
add
outsb
ds
jge
shlb
add
sbb
add
mov
add
aam
fcomip
frstor
add
mov
and
sub
xbegin
add
add
push
xor
add
js
clc
sub
mov
add
loope
add
add
add
in
in
dec
jnp
clc
out
scas
test
cmp
mov
clc
rorb
mov
pop
icebp
es
xor
sub
sub
add
cmp
add
mov
push
clc
jbe
icebp
pushf
cmp
push
add
jecxz
fstps
clc
jae
add
jne
xchg
cmp
pop
lret
jmp
inc
add
mov
pusha
add
stc
fiadds
aas
inc
add
negb
mov
loop
test
sar
mov
add
clc
sub
clc
in
inc
add
adc
xchg
popa
add
mov
sarl
es
dec
mov
clc
jmp
stos
mov
inc
clc
in
ret
clc
jecxz
xor
add
clc
call
add
clc
jo
add
add
int
ficomps
enter
into
jge
scas
xor
add
or
add
cmp
inc
clc
jae
add
add
xchg
imul
and
add
jp
mov
clc
xchg
pop
flds
add
xbegin
sar
js
daa
clc
clc
jmp
add
add
mov
adc
add
fisttpll
clc
xchg
cmp
clc
into
xor
add
clc
push
fdiv
xor
mov
mov
dec
and
add
add
and
add
daa
clc
in
sbb
sar
pop
je
xchg
xabort
add
add
clc
inc
clc
and
stos
and
add
clc
iret
push
clc
and
add
test
lcall
pop
js
clc
sbb
in
add
push
out
dec
cmp
clc
sub
clc
or
call
xor
jp
and
jne
ret
cmp
clc
outsb
ret
adc
mov
clc
adc
dec
xchg
dec
inc
clc
gs
xor
into
xchg
mov
and
add
mov
js
clc
ja
clc
ja
jge
clc
push
add
mov
insl
adc
mov
in
inc
clc
hlt
fwait
mov
clc
iret
scas
lret
mov
shrb
rcrl
clc
pop
in
scas
adc
clc
sub
add
sbb
jno
add
add
test
jo
add
lock
iret
iret
loop
mov
inc
add
dec
and
add
xchg
lock
add
stos
or
xchg
pop
ljmp
and
add
mov
add
dec
or
pop
sub
add
add
push
add
sbb
mov
push
jle
clc
jg
xlat
and
add
add
inc
clc
and
add
lret
aad
notb
add
clc
xabort
movsl
clc
and
add
clc
push
and
inc
clc
jnp
iret
jno
add
clc
dec
std
and
add
clc
sbb
add
imul
clc
mov
add
ret
push
add
outsb
adc
dec
pop
daa
clc
inc
add
mov
adc
clc
mov
cmp
clc
mov
add
sub
mov
mov
pop
divl
pop
ss
cmp
clc
cmp
clc
mov
inc
add
push
rol
clc
xor
dec
ret
clc
cmp
add
inc
add
or
bound
add
clc
jge
ficomps
clc
dec
push
add
pop
sub
clc
mov
sub
add
lock
sti
scas
repz
add
clc
mov
add
fs
sub
clc
ja
or
or
sar
pop
invd
inc
add
movsl
clc
mov
add
enter
add
or
fnsetpm(287
clc
xchg
jl
cmp
stc
dec
mov
push
clc
imul
into
push
add
jmp
add
lods
inc
clc
xabort
or
add
clc
in
mov
add
mov
clc
es
lea
hlt
jg
pop
int3
call
stos
jl
clc
push
clc
ret
jb
add
clc
jo
add
clc
xchg
cmp
add
inc
add
and
add
je
sahf
icebp
cmp
pop
clc
xor
add
data16
pop
cld
outsb
addr16
push
push
loopne
js
dec
rorb
iret
int
inc
add
jmp
clc
cli
shl
and
add
push
fiaddl
dec
pop
fdivrs
push
and
add
mov
mov
clc
xor
add
add
bound
add
clc
cld
push
add
dec
dec
dec
xbegin
add
rolb
or
rcr
in
idivb
cmpsb
clc
daa
clc
inc
add
cmp
clc
test
add
add
clc
xchg
push
add
push
clc
fists
jg
mov
fcomip
and
pop
mov
jge
clc
test
es
loopne
outsl
data16
sti
add
mov
add
sbb
sub
clc
pop
lahf
sar
lock
add
in
cli
ljmp
cmp
push
clc
mov
add
lods
push
mov
jns
push
add
mov
add
jmp
clc
fsubrp
and
add
add
clc
sub
add
add
shl
bound
add
clc
mov
xor
in
jbe
add
bound
add
add
clc
jb
add
dec
jecxz
xor
add
adc
add
fiadds
mov
add
clc
and
add
or
jno
add
int
xchg
lock
clc
pusha
add
ret
clc
loop
pop
sar
dec
pushf
mov
push
clc
shr
cmp
pushf
icebp
sets
clc
in
pop
insb
add
dec
pop
dec
jecxz
outsl
jbe
add
pushf
sbb
xchg
test
add
add
add
adc
add
mov
add
jnp
add
add
add
add
or
jmp
sbb
clc
inc
add
jno
add
clc
bound
add
add
pusha
add
lods
int
cmc
xchg
or
cmp
test
clc
push
sbb
add
push
add
xor
add
add
add
add
add
clc
sbb
add
shll
add
fwait
jl
add
jns
clc
push
add
int
clc
jne
adc
add
jne
clc
sub
js
loopne
or
clc
clc
add
add
add
adc
add
clc
adc
xlat
sbb
sub
clc
fnstsw
add
das
adc
add
aad
push
aad
add
and
add
clc
addr16
scas
fs
out
ror
mov
scas
push
push
add
mov
imul
popf
ds
xchg
lahf
xchg
rorb
roll
add
pop
test
xlat
mov
push
add
das
adc
add
cmp
add
addr16
frstor
icebp
dec
aad
clc
xor
add
clc
xchg
xchg
ret
addr16
sub
jl
lret
ljmp
xchg
mov
and
add
clc
insb
ror
es
movsb
clc
shll
add
add
dec
mov
add
lcall
add
clc
pop
rcrb
js
cmp
add
jp
add
repnz
loope
dec
addr16
cs
aas
data16
mov
popf
test
out
movsl
clc
out
inc
clc
jge
sub
pop
and
add
add
out
xor
clc
jecxz
xor
add
cmp
clc
sub
add
mov
mov
loope
aam
ret
jg
rcll
fnstcw
inc
add
addr16
nop
add
add
xor
add
movsl
clc
gs
sub
add
movsb
clc
push
fwait
out
adc
add
mov
js
movsb
clc
popf
lret
inc
clc
testl
add
dec
dec
sub
dec
sbb
push
fcmovnb
clc
xor
add
clc
cmp
fsub
clc
push
add
test
and
jge
clc
and
add
push
clc
mov
add
add
mov
iret
xor
add
mov
sti
xchg
sub
or
add
inc
clc
outsb
cmp
jg
mov
cmp
data16
repnz
mov
data16
js
clc
inc
add
popa
add
stos
mov
clc
jge
clc
cmpsb
clc
lcall
clc
outsl
add
add
jmp
xor
add
test
test
dec
mov
add
add
fwait
push
sahf
clc
mov
jnp
clc
xchg
mov
lods
xchg
pop
push
add
out
lahf
mov
add
add
imul
cld
cmp
sbb
add
shll
out
mov
add
inc
add
xchg
mov
cs
add
aad
mov
push
sub
clc
imul
ss
pushf
mov
and
add
add
imul
outsl
mov
fdivrs
add
jo
add
arpl
add
outsb
daa
clc
test
popa
add
xchg
jl
clc
or
add
push
dec
push
push
cmp
iret
dec
mov
push
popa
add
in
xchg
sbb
xlat
or
cmp
add
xbegin
ficompl
insl
jl
test
add
and
push
mov
add
adc
push
push
in
push
mov
mov
add
or
add
pusha
add
jp
xchg
lahf
mov
xor
add
push
add
jae
add
cmpsb
clc
lock
stos
dec
jle
push
and
add
sub
add
jp
adc
add
clc
fadd
clc
or
pusha
add
cld
or
sbb
fs
mov
ret
aad
dec
cli
ret
clc
and
add
add
call
add
setge
lcall
xlat
out
mov
xchg
into
out
xchg
insb
out
pop
mov
into
sar
iret
div
int3
lret
mov
clc
mov
clc
xabort
mov
add
mov
clc
iret
dec
js
xlat
ja
scas
leave
sub
clc
aad
lods
mov
add
cmp
clc
test
clc
jbe
clc
add
add
ds
lock
add
bound
add
or
push
mov
icebp
sub
out
xchg
jecxz
mov
clc
adc
pop
nop
add
repnz
bound
add
add
mov
fs
sub
divb
add
scas
out
mov
jg
sub
ljmp
je
outsl
jl
add
and
add
imul
or
das
adc
add
popa
add
xchg
mov
out
push
clc
push
clc
stc
int
clc
or
mov
add
sbb
xor
add
cmc
pop
clc
or
push
dec
push
and
add
inc
add
add
add
bound
add
out
or
xchg
cmp
clc
pop
js
in
leave
push
clc
push
cmp
or
imul
imul
test
nop
lret
out
and
add
push
and
add
leave
pop
clc
popf
fwait
das
mov
clc
icebp
jmp
cmp
mov
insb
push
int
clc
cmp
repnz
int
leave
stc
add
add
lods
icebp
mov
mov
add
fwait
add
add
cmp
jl
clc
xchg
xor
in
mov
clc
test
cmp
adc
clc
in
mov
clc
daa
clc
cmp
clc
lods
out
sbb
jge
daa
clc
or
add
bound
add
clc
pop
nop
cltd
div
pop
mov
xor
clc
cmp
pop
aad
test
ret
clc
inc
add
arpl
add
clc
addr16
cmp
mov
cmp
mov
pop
or
xor
clc
iret
xor
add
mov
xchg
lret
fbld
lock
add
xchg
aam
arpl
add
clc
fld
clc
and
add
add
out
adc
add
xchg
fwait
mov
or
cmp
clc
cmp
clc
dec
sub
clc
jb
add
clc
sar
add
enter
add
cmp
add
jecxz
pop
pop
and
add
jge
add
pop
cli
mov
clc
jmp
std
sti
mov
clc
jae
add
or
add
or
cmp
mov
xchg
sbb
clc
inc
clc
ror
aaa
mov
sar
add
loope
repz
icebp
mov
mov
and
add
add
inc
add
test
xor
add
call
div
sbb
test
and
jp
clc
sti
and
add
add
enter
sti
inc
add
out
xchg
sti
jmp
jge
add
sti
mov
add
fs
inc
clc
fs
ljmp
xchg
stos
jno
add
gs
loope
and
add
cld
dec
lea
add
and
add
mov
pop
xchg
es
or
shr
jns
jmp
add
sbb
add
ret
mov
clc
rcpps
add
clc
xchg
test
adc
add
in
pop
pop
pop
outsb
jbe
mov
clc
cmp
clc
cmp
clc
push
add
pop
clc
adc
add
mov
add
lcall
adc
add
add
daa
clc
lcall
mov
jne
push
jae
add
xor
add
mov
sti
outsl
sbb
xchg
pop
clc
pop
cwtl
cmp
add
arpl
add
jb
add
clc
ror
daa
clc
into
popa
add
add
add
out
loopne
clc
mov
add
fisubrl
cmp
xchg
pop
daa
clc
into
pop
push
and
add
dec
dec
je
sbb
and
add
add
clc
jns
and
add
ja
test
add
sub
xchg
pop
dec
movsb
clc
inc
add
sub
mov
ja
cmp
clc
push
cs
ret
clc
je
add
data16
stos
cmp
shll
xchg
push
in
sar
clc
cwtl
cmp
mov
fisubs
push
add
jns
pop
sbb
or
dec
mov
clc
sar
insl
lret
or
add
clc
jecxz
pop
inc
add
jmp
add
jae
add
fsubrs
xabort
mov
jo
add
add
xchg
lcall
and
add
add
clc
lahf
enter
pop
inc
clc
push
stos
mov
mov
clc
mov
clc
std
add
add
or
fstpt
out
jmp
add
popa
add
xchg
push
push
fwait
cmp
add
sbb
clc
ret
add
stc
and
add
insb
test
repz
dec
lahf
or
outsb
add
add
mov
clc
out
jo,pn
add
lock
mov
xor
add
sbb
repz
dec
clc
mov
clc
xchg
sub
in
test
push
add
fidivrs
sahf
jnp
clc
mov
add
fisttpl
add
add
add
mov
inc
clc
add
ret
clc
mov
and
add
sar
clc
stc
movsl
clc
pop
stos
mov
xor
call
mov
clc
mov
add
add
clc
loopne
mov
pop
clc
pusha
add
add
add
add
shll
mov
cmp
adc
add
add
add
add
inc
clc
add
push
addr16
out
jbe
clc
stos
cmp
mov
add
push
jecxz
push
sar
bound
add
repz
idiv
rorl
xor
es
xchg
cli
lret
addr16
push
clc
pushf
fdivr
xchg
or
pop
push
or
popf
add
add
push
pop
in
xabort
jecxz
mov
clc
imul
stos
xor
out
mov
cld
sbb
arpl
add
test
cmp
add
leave
or
clc
sar
clc
cmp
pop
aad
sbb
add
push
clc
cmp
call
data16
icebp
call
addr16
dec
push
add
dec
mov
jecxz
shlb
add
xbegin
test
call
clc
xor
add
cmp
add
add
mov
add
cmp
clc
push
and
add
jae
add
clc
daa
clc
dec
je
clc
cmp
ja
clc
adc
add
clc
mov
clc
test
loop
and
add
add
in
adc
add
shlb
clc
jmp
dec
cmp
daa
clc
ds
xchg
stc
push
mov
stc
not
out
push
add
mov
leave
mov
clc
test
xbegin
scas
mov
clc
idivl
add
clc
add
add
add
int
or
out
jno
add
clc
test
push
add
mov
jae
add
cmc
sub
shrl
mov
cmp
xor
add
inc
clc
jmp
dec
and
add
mov
push
add
bound
add
adc
add
add
mov
mov
xbegin
pop
mov
loope
loopne
popf
movsl
clc
add
add
add
scas
pusha
add
stos
cmp
add
mov
fdivrs
out
push
add
je
xor
add
sbb
add
lods
js
stos
shll
add
mov
xor
add
jne
clc
pop
sti
mov
jo
add
popf
out
pop
pop
arpl
add
clc
inc
add
in
call
add
fwait
inc
add
dec
jo
add
mov
pop
decb
lcall
mov
adc
add
cmp
call
clc
sub
clc
stos
idivb
test
dec
test
clc
sbb
popf
sar
add
dec
pop
mov
clc
std
sar
and
add
xchg
xchg
aad
out
test
push
xlat
cmp
cmpsb
clc
adc
sbb
xchg
sub
test
leave
lret
dec
mov
add
push
cmpsl
clc
xchg
xchg
mov
testl
mov
clc
and
add
clc
inc
add
gs
xchg
xchg
bound
add
push
shlb
cmp
lock
clc
cltd
jbe
insb
xchg
inc
add
cmpsb
clc
push
add
inc
add
dec
dec
aad
mov
push
scas
push
sub
clc
scas
in
jbe
clc
cli
mov
jp
stos
aad
add
add
add
in
data16
mov
test
jl
clc
in
cmc
pop
mov
sbb
mov
daa
clc
dec
insl
xchg
mov
loop
idivl
push
add
xchg
std
cmp
add
dec
mov
std
adc
sbb
test
clc
popa
add
mov
push
add
out
outsl
and
add
and
iret
cmp
pop
sub
clc
cmp
adc
dec
pop
rcrl
jg
push
pop
xchg
loopne
add
clc
rcrb
push
aad
mov
add
fdivrl
dec
out
lock
clc
aam
clc
jne
es
mov
add
add
test
hlt
lods
mov
mov
clc
mov
lock
clc
inc
add
add
add
xchg
out
inc
add
movsb
clc
mov
add
mov
clc
ficoms
add
dec
xor
add
dec
mov
clc
lret
pop
enter
clc
rcr
cmp
and
add
clc
dec
aaa
dec
mov
clc
fcoms
aaa
pop
hlt
jne
add
jle
clc
clc
dec
out
jecxz
adc
push
add
mov
test
shll
sbb
cs
shlb
test
pop
push
or
mov
clc
pop
mov
shll
mov
add
or
cli
pop
cmovle
xor
clc
cmc
cli
out
or
add
ja
pop
mov
clc
cld
add
stos
movsb
clc
mov
clc
sarb
cmp
add
clc
shl
clc
cmp
mov
mov
jnp
xchg
pop
cmp
cmp
outsb
and
add
out
clc
push
stc
in
pop
ljmp
arpl
add
add
jne
clc
rcrb
int3
ret
fdivl
xchg
xchg
mov
mov
jno
add
xor
roll
inc
add
mov
insl
cli
and
cmp
and
add
rcrb
out
test
clc
jne
clc
or
mov
inc
clc
in
xor
pusha
add
xor
add
inc
add
test
clc
xor
add
add
enter
add
sbb
clc
mov
scas
mov
cmp
add
add
add
clc
jo
add
mov
cwtl
mov
loopne
add
sbb
hlt
pop
out
out
push
data16
test
test
add
clc
mov
add
pop
clc
mov
mov
cmp
add
push
in
pop
frstor
mov
and
add
xor
mov
clc
scas
aas
sub
push
inc
clc
lods
inc
clc
xchg
xchg
pushf
lods
dec
inc
add
ret
lret
rsqrtps
add
cmpsb
clc
imul
clc
cli
xor
div
repnz
pop
loop
or
push
sbb
fsubl
add
cmp
add
dec
je
cwtl
pop
clc
xchg
or
add
pushf
and
enter
clc
adc
or
add
repz
rcl
popl
sbb
mov
clc
cmpsl
clc
cmp
add
dec
ljmp
pop
lahf
push
cltd
sbb
sub
add
data16
or
pop
clc
mov
es
push
add
mov
jecxz
iret
bound
add
clc
fisttps
mov
clc
or
lods
pop
fs
mov
add
sar
clc
cmp
clc
in
mov
faddl
clc
icebp
xchg
dec
pop
scas
outsb
cmp
clc
daa
clc
jae
add
or
push
clc
mov
cld
cld
lea
leave
pop
lahf
xchg
data16
pop
pop
jne
clc
mov
das
ds
adc
add
ja
push
mov
clc
or
inc
clc
pop
add
add
add
add
in
push
push
clc
shl
cmp
jp
out
mov
loop
popf
inc
clc
fildl
clc
daa
clc
mov
adc
add
clc
jne
mov
clc
in
lea
out
jmp
jne
clc
or
clc
js
cmp
mov
pop
inc
add
inc
add
push
lret
std
ds
outsb
sar
cmp
mov
clc
es
inc
add
pop
divl
enter
clc
cmp
pop
xchg
das
cmp
cltd
mov
clc
dec
jne
out
xlat
jecxz
jmp
clc
pop
jecxz
push
dec
mov
cs
clc
ljmp
sti
cmp
jns
enter
mov
addr16
loop
pop
sub
clc
addr16
push
pop
jl
out
cmp
rol
clc
fs
push
fistpll
add
fprem1
push
clc
push
add
sbb
add
leave
pop
clc
gs
push
add
cmp
hlt
cltd
mov
sar
jmp
and
pop
icebp
mov
clc
fcoms
xor
add
clc
adc
add
mov
jo
add
dec
ret
dec
jae
add
clc
xchg
lods
xchg
mov
fcom
add
add
lret
push
dec
fcmove
fs
sbb
aas
cmp
clc
jp
xor
loop
aad
jecxz
add
add
xor
add
clc
test
and
dec
nop
jb
add
mov
or
add
dec
imul
clc
dec
xchg
cmp
clc
dec
add
add
add
clc
aam
clc
jmp
inc
clc
jns
cltd
jecxz
jns
push
xlat
sbb
addr16
test
and
pop
cmc
imul
loop
lods
sbb
sbb
clc
cmp
daa
clc
insl
enter
sbb
insb
popf
out
xor
add
add
imul
mov
clc
repnz
clc
iret
xchg
adc
add
leave
sub
icebp
into
ficomps
push
mov
cmc
insb
xlat
mov
scas
xor
add
jae
add
or
stos
dec
push
jnp
ffreep
clc
aaa
aas
sbb
add
mov
in
sub
clc
leave
sbb
sub
clc
mov
imulb
dec
ror
notl
nop
jl
mov
add
fs
mov
add
sbb
pop
jne
mov
mov
xor
add
push
add
insl
dec
test
hlt
push
push
setnp
clc
sar
sarb
mov
xchg
jl
inc
clc
xor
add
clc
cmp
and
add
add
clc
stos
ja
clc
mov
xor
add
add
inc
add
jmp
pop
aam
clc
jae
add
test
repnz
sbb
jecxz
sbb
mov
jge
add
iret
clc
pushf
mov
clc
dec
pop
cmp
out
cmp
sahf
mov
cmpsl
clc
push
add
xor
add
push
or
clc
rcrb
clc
dec
or
push
mov
addr16
insb
das
in
loop
cmp
pusha
add
xor
add
fwait
cmp
add
mov
xabort
ljmp
add
add
and
add
sbb
sar
cli
stos
imul
push
add
push
mov
jg
mov
pop
adc
add
clc
xor
jae
add
add
cmp
daa
clc
inc
clc
mov
ljmp
clc
mov
clc
cmpsb
clc
jns
out
xchg
mov
outsl
and
pop
in
dec
mov
pop
and
clc
xor
cmp
add
out
mov
add
shrl
clc
leave
mov
clc
scas
dec
pusha
add
sbb
clc
dec
jmp
push
add
in
int3
aam
cmp
add
push
sti
jb
add
clc
add
add
jae
add
movups
add
mov
sub
dec
cmp
inc
add
mov
dec
popa
add
inc
add
mov
jne
inc
clc
test
cmp
clc
jmp
or
add
clc
popa
add
repnz
xlat
cmp
xchg
cltd
and
clc
fmuls
insb
mov
pop
pop
pop
push
add
push
pop
push
clc
outsl
push
add
inc
add
or
add
inc
add
xor
add
popf
xor
add
imul
mov
jae
add
xchg
push
ficoml
sub
add
clc
ja
ret
jno
add
clc
call
mov
dec
arpl
add
xchg
pop
xchg
mov
add
aas
xor
call
movsb
clc
jbe
cwtl
sbb
negl
push
stc
cmp
jg
sbb
add
ja
out
adc
add
add
add
lahf
sarb
clc
into
clc
pushf
clc
mul
clc
mov
sbb
test
cmpsl
clc
repnz
clc
xchg
icebp
stc
aam
or
dec
hlt
mov
sub
fcomps
nop
xor
call
add
push
cli
sbb
jns
clc
mov
or
clc
sbb
add
mov
add
xchg
clc
cli
ret
clc
popf
call
out
fcmove
mov
cmp
fdivs
test
bound
add
jns
clc
outsl
inc
clc
mov
bound
add
pop
bound
add
stos
fcoml
clc
enter
add
sar
imul
fisubl
clc
test
jne
add
add
ret
cwtl
leave
pushf
mov
dec
nop
mov
pop
push
clc
add
add
stc
dec
sar
ret
clc
cmp
sub
rclb
add
mov
add
fidivrl
es
pushf
jl
xor
add
in
xor
sbb
clc
scas
test
cmp
sar
mov
xchg
popa
add
mov
inc
clc
cmc
sahf
pop
test
push
add
das
jnp
or
add
cltd
jbe
mov
insb
enter
ret
clc
sahf
xchg
adc
clc
es
sbb
lods
loope
in
popa
add
cmp
mov
jne
add
push
int3
mov
add
mov
jmp
sar
dec
fs
aas
int3
jecxz
arpl
add
add
mov
sub
add
inc
clc
aas
popf
divl
add
cmpsl
clc
pop
sub
add
idiv
arpl
add
clc
mov
add
inc
add
xor
sub
pop
jl
add
mov
insl
push
jbe
clc
pusha
add
knotw
xchg
dec
xchg
bound
add
into
sub
fisubrs
aad
clc
fucomp
sub
clc
or
out
leave
outsl
add
add
add
lods
or
movq
add
clc
stos
and
add
ljmp
clc
mov
xor
add
mov
add
jmp
rorl
test
clc
int
and
add
testl
push
imul
repnz
pop
mov
clc
loope
pop
dec
mov
add
test
out
and
add
fmull
popf
add
add
inc
clc
and
add
clc
imul
xbegin
clc
repnz
out
xor
add
cmpsl
clc
cmp
ret
clc
je
mov
clc
es
mov
mov
mov
mov
or
add
pop
sub
clc
pop
dec
jo
add
bound
add
cmp
xchg
dec
or
clc
inc
clc
repz
addr16
mov
sbb
jbe
clc
jmp
and
add
in
or
cmp
jbe
cmpsb
clc
jecxz
push
insl
xbegin
pop
clc
or
in
push
hlt
lods
aas
cmpsb
clc
mov
mov
movsl
clc
enter
add
push
clc
or
dec
bswap
jmp
mov
push
clc
in
es
dec
leave
push
add
pop
and
fsubrp
jo
add
add
jne
jbe
push
mov
push
inc
add
jge
add
nop
cmp
clc
jb
add
jno
add
clc
inc
clc
sar
lea
jle
mov
clc
cli
sub
insb
fadds
add
inc
clc
ret
clc
xor
add
adc
add
int
clc
insl
hlt
data16
daa
clc
cmc
jb
add
add
cmc
or
push
add
jmp
sub
dec
jno
add
jmp
popa
add
pusha
add
mov
jns
lcall
out
push
clc
xabort
pop
sub
int
test
or
add
pop
xchg
scas
clc
push
clc
sar
push
push
add
aam
in
mov
add
cmp
jge
clc
leave
cmp
add
ss
mov
inc
clc
xchg
es
cmp
and
add
mov
clc
stos
adc
add
push
int3
pusha
add
call
inc
clc
repz
adc
add
ds
loope
pop
xchg
mov
in
cmp
dec
inc
clc
add
add
fistl
cmp
clc
call
add
jmp
mov
test
rolb
add
repz
pop
fldt
xchg
mov
popf
cmp
incb
je
aam
jmp
aam
inc
clc
scas
cmp
and
add
int3
cmp
out
or
inc
add
mov
std
jge
inc
clc
mov
dec
imul
scas
and
push
push
and
add
push
clc
fcmovbe
shlb
add
out
fs
repnz
sbb
cmp
clc
and
add
push
add
pop
lret
push
mul
clc
dec
xbegin
add
add
repz
add
jmp
jmp
clc
jne
and
add
push
push
add
ret
clc
add
add
mov
mov
in
cs
pusha
add
sahf
xchg
sarb
pop
clc
roll
sub
nop
mov
stos
jg
lret
mov
sub
ljmp
xchg
clc
lea
repnz
int
test
cmp
pop
fidivrs
ljmp
mov
add
add
btc
jns
jle
clc
push
add
xchg
inc
clc
mov
mov
and
clc
and
add
bswap
movsl
clc
sub
data16
nop
jb
add
add
add
shrl
clc
inc
clc
aaa
mov
add
into
bound
add
add
sub
add
out
xchg
cmp
inc
clc
adc
adc
add
clc
gs
mov
nop
sbb
sub
add
pop
cmp
fs
cld
sub
add
mov
dec
cmp
sti
mov
scas
mov
add
add
xchg
call
dec
xor
jb
add
or
mov
clc
mov
clc
xor
add
xchg
sub
pop
jns
clc
sub
add
add
clc
sar
push
mov
loope
fcom
or
notb
push
adc
add
mov
clc
sub
xlat
cld
aas
testb
clc
jg
add
xbegin
ljmp
in
add
add
dec
aad
fbld
clc
pop
mov
add
clc
xchg
and
add
sbb
fidivs
clc
xor
add
cmp
add
ss
inc
add
sar
jge
clc
cwtl
push
clc
pop
cmp
cmp
movsl
clc
cmp
dec
ss
rcrl
cmp
rcrb
sbb
add
addr16
lcall
inc
clc
push
gs
fs
clc
movsl
clc
xor
clc
cmp
jns
add
iret
insb
lea
cmp
add
mov
jecxz
into
loope
xlat
ds
dec
push
add
cld
sub
add
cmp
add
push
add
sub
mov
cmp
clc
pop
lcall
sbb
imull
sub
add
fsubl
add
xchg
mov
clc
movsb
clc
mov
mov
add
or
push
clc
data16
xchg
in
cltd
jb
add
dec
mov
or
call
and
add
add
add
sub
outsb
inc
clc
mov
jns
clc
nop
fimuls
jl
std
out
mov
idiv
adc
dec
clc
clc
jmp
lods
sbb
add
adc
add
pushf
test
sar
rolb
add
out
pop
or
push
add
add
xor
add
mov
jg
outsl
nop
xabort
adc
add
mov
pop
fdivp
loopne
and
add
je
clc
aaa
sub
in
data16
inc
add
add
sub
xor
cs
mov
add
mov
push
add
arpl
add
clc
clc
scas
aaa
inc
add
xor
add
adc
add
add
clc
or
fisttpll
jbe
popf
cltd
and
pop
push
add
into
dec
pop
arpl
add
add
jns
xchg
xchg
or
insb
fldt
xbegin
xor
or
pop
clc
inc
add
insb
iret
cmp
fldcw
xor
add
fistl
or
ljmp
clc
push
pop
and
add
cmp
loop
xor
repz
clc
xabort
xchg
popf
jge
add
out
test
add
cli
repz
push
add
sahf
hlt
mov
leave
stos
out
addr16
push
pop
cmpsb
clc
xchg
popf
xlat
movsl
clc
hlt
lea
add
xchg
xchg
jge
clc
mov
adc
imul
jg
clc
cmp
xchg
mov
lods
xchg
mov
xchg
ror
push
push
enter
mov
jle
ja
es
cs
bound
add
pop
mov
clc
scas
movsb
clc
jp
push
adc
add
push
call
in
ret
clc
fbld
add
cmc
cwtl
push
clc
push
pop
pop
jle
push
inc
clc
mov
adc
add
clc
data16
inc
clc
and
jae
add
in
cld
outsb
movsb
clc
pushl
add
xchg
pusha
add
adc
add
cmp
clc
fs
pop
pop
gs
ss
out
sub
xor
add
in
pushl
loopne
jp
add
jp
clc
test
xchg
lret
insb
adc
fsubl
mov
mov
push
add
fstl
test
xchg
fstpl
add
inc
clc
mov
clc
cs
adc
add
add
add
stos
mov
mov
fbstp
add
adc
mov
add
mov
lahf
cmpsb
clc
add
and
add
in
mov
add
mov
xor
clc
or
jnp
daa
clc
scas
mov
adc
test
sar
pop
sub
clc
out
test
add
add
add
jbe
clc
lods
sub
add
xor
jmp
clc
add
add
add
and
add
cmp
sar
xchg
fisttpll
lock
add
lahf
fstl
gs
mov
jg
clc
lods
adc
add
pushf
fmull
add
aad
sbb
or
add
es
mov
cs
pop
out
lret
inc
clc
pushf
cmp
sbb
or
mov
jmp
iret
inc
add
in
sub
jo
add
es
adc
add
jb
add
xabort
add
std
mov
fs
jl
sub
or
clc
je
outsb
out
xchg
data16
inc
add
sahf
mov
mov
xor
add
add
addr16
xlat
jle
sbb
pop
ror
jns
add
push
pusha
add
pop
loope
lock
mov
clc
incb
add
pop
in
paddb
clc
sbb
shrl
mov
add
daa
clc
in
push
clc
ja
inc
clc
std
xor
add
xchg
leave
clc
push
imul
add
pop
fcompl
clc
mov
sbb
clc
jg
clc
mov
add
push
add
cmpsb
clc
cmp
cmp
ret
mov
add
cmp
clc
fmul
mov
gs
mov
clc
loope
inc
add
xor
clc
fdivl
clc
jle
pop
fldl
add
stos
push
add
push
inc
add
dec
pop
pinsrw
clc
sar
leave
popf
sub
lock
clc
in
pcmpeqd
and
mov
pop
mov
add
ljmp
stos
lods
into
push
out
sub
add
inc
clc
rcll
add
in
jg
or
shll
clc
lret
notb
add
mov
add
mov
add
dec
dec
pop
ss
loopne
es
push
clc
dec
or
shr
sub
add
jp
rorl
push
add
jne
clc
cmp
sbb
clc
xor
add
jnp
mov
push
daa
clc
sar
push
mov
add
cmp
sub
adc
out
mov
clc
addr16
outsb
rep
jne
push
adc
add
add
js
add
adc
add
add
gs
aam
push
out
pushf
inc
add
push
lods
mov
repz
add
push
pop
clc
movsl
clc
xor
add
add
mov
aaa
out
out
push
jg
clc
xor
add
add
cmpsl
clc
loopne
in
bound
add
clc
or
adc
add
clc
xchg
loopne
xor
add
cwtl
sar
clc
popa
add
sub
sub
xchg
mov
cmp
pusha
add
test
data16
xor
add
cmp
add
and
add
lods
add
jle
mov
icebp
out
aas
cmp
add
cmp
mov
push
jno
add
add
fs
inc
add
sbb
add
sub
clc
add
add
push
add
mov
mov
clc
xor
mov
clc
or
mov
clc
test
pop
cmc
mov
cmp
clc
jg
jle
pop
in
mov
sbb
add
mov
clc
cmpsb
clc
mov
clc
dec
mov
ss
clc
enter
add
jecxz
bound
add
aaa
cli
sub
add
loope
sub
jp
add
dec
push
std
insl
sbb
mov
add
add
xchg
add
add
mov
je
jl
lods
cmp
shlb
inc
clc
hlt
scas
out
test
clc
jne
in
jne
sub
mov
xchg
pusha
add
fs
into
jmp
push
mov
jns
xchg
or
add
add
add
add
add
inc
add
mov
add
xchg
fsubrl
xor
clc
push
push
clc
scas
and
add
clc
insb
inc
clc
jecxz
stos
es
sub
add
sar
add
jge
out
iret
pop
clc
mov
add
outsl
push
add
sahf
sti
push
mov
clc
mov
clc
and
add
int
xchg
iret
data16
mov
mov
push
add
mov
jb
add
add
add
mov
clc
jb
add
add
sar
push
aaa
jbe
icebp
lock
sub
clc
pop
out
xchg
add
add
leave
or
add
lcall
clc
cmp
add
sub
add
inc
add
cs
mov
adc
jno
add
clc
stos
push
mov
add
clc
mov
sub
add
pop
arpl
add
repnz
adc
add
clc
rcr
lret
and
mov
mov
cwtl
es
clc
mov
add
push
add
pop
movsl
clc
add
pop
bound
add
add
add
add
outsl
in
lret
mov
clc
mov
lods
test
mov
fcmovne
add
and
cmpsl
clc
out
push
clc
lock
xchg
pushl
sar
mov
rorb
in
jnp
out
xchg
and
iret
sbb
insb
cmpsb
clc
mov
jmp
pop
clc
push
and
add
add
mov
fcomi
adc
add
clc
lahf
sub
inc
add
fs
movsb
clc
mov
push
hlt
test
clc
fcoml
or
sub
outsl
dec
cmpsl
clc
add
add
fwait
push
and
sub
clc
lods
repnz
fs
clc
pop
mov
add
push
xchg
mov
clc
cmp
mov
push
add
movsb
clc
and
add
call
jl
add
imul
loop
inc
clc
dec
cmp
adc
add
push
jecxz
ja
add
push
ljmp
cmp
mov
adc
add
clc
xbegin
push
icebp
imul
jns
mov
xabort
add
shll
clc
es
shlb
add
push
cltd
test
xor
add
or
cli
pop
test
aam
clc
fisubrl
clc
nop
jo
add
fwait
jmp
scas
mov
cmpsl
clc
and
add
cld
divl
add
dec
sar
sbb
push
add
imul
pavgw
icebp
gs
jge
cmp
clc
and
add
add
pop
xabort
test
mov
pop
sbb
clc
popa
add
daa
clc
imul
imul
add
adc
add
push
insb
cmp
add
shlb
push
jnp
add
add
negl
pop
xbegin
clc
data16
add
or
icebp
lret
dec
add
adc
add
aas
sbb
cmpsl
clc
jns
add
enter
hlt
mov
jnp
in
or
aam
clc
div
mov
int
fildl
cmp
xlat
lods
lea
add
xabort
pop
clc
data16
adc
sti
je
cmpsb
clc
adc
add
mov
std
mov
add
es
adc
add
jno
add
mov
inc
add
mov
je
shrb
or
push
inc
clc
xchg
add
add
xchg
xabort
call
xchg
ljmp
clc
aam
inc
add
insl
bound
add
outsl
rcrl
add
clc
push
add
sbb
add
add
mov
pop
or
test
mov
rcrb
mov
outsl
imul
push
add
dec
popa
add
mov
add
sbb
aam
add
jns
cmp
out
stc
or
clc
xor
add
xor
add
ret
clc
cmp
add
sub
test
cmp
test
clc
push
add
and
add
sbb
clc
xor
add
add
clc
test
incb
add
add
scas
js
jae
add
push
clc
hlt
and
mov
inc
add
cltd
jmp
bound
add
add
shlb
clc
btc
inc
clc
icebp
or
cmp
xchg
int
fwait
loopne
mov
clc
fwait
dec
sar
add
push
clc
imul
fisttpll
clc
int
insl
xchg
out
mov
mov
leave
sar
pop
xor
add
loop
sbb
clc
or
add
sub
cld
pop
rcrl
adc
add
sub
loop
popf
pushf
jmp
mov
mov
in
cmp
stc
lea
hlt
daa
clc
mov
add
out
fcmovu
mov
xlat
xbegin
add
push
add
lret
or
clc
add
add
in
out
pop
pop
mov
dec
inc
clc
cmp
loopne
dec
or
clc
jb
add
imul
dec
aaa
imul
clc
ret
clc
fdivl
add
pop
clc
xor
add
adc
add
jp
clc
dec
arpl
add
mov
leave
xor
add
cmp
push
clc
std
popf
jne
clc
and
add
add
mov
in
shrl
push
aam
clc
data16
add
add
xchg
jb
add
arpl
add
xor
bound
add
add
mov
fwait
adc
clc
xchg
and
add
sub
clc
mov
jle
clc
xchg
adc
add
pop
js
add
fcompl
add
add
add
xchg
jge
sub
jmp
es
or
test
inc
clc
xchg
sub
push
add
mov
pop
clc
mov
add
xor
add
aam
out
jge
add
xchg
ss
mov
pop
ss
sti
xor
add
lcall
add
daa
clc
dec
inc
clc
ret
mov
or
xabort
sub
add
jl
std
int3
add
test
clc
cmpsb
clc
add
cltd
bound
add
clc
fldenv
clc
inc
clc
jge
clc
insl
outsb
adc
cwtl
imul
adc
jns
fists
add
sbb
dec
ljmp
mov
clc
jae
add
clc
int3
rorb
call
loope
mov
clc
add
add
xor
add
stos
sbb
pushf
sbb
clc
and
add
add
add
sub
mov
add
add
daa
clc
jb
add
sahf
jle
or
add
fimuls
imul
add
clc
push
cld
fs
ds
add
movsl
clc
outsl
cwtl
movsb
clc
clc
rep
xchg
mov
jecxz
add
and
or
fistps
add
in
xchg
add
sar
clc
pusha
add
sti
mov
rcll
aam
stos
lret
sti
pop
pop
es
cmp
add
out
out
xabort
clc
imul
xchg
int
movsl
clc
add
add
add
call
mov
mov
sub
cmp
adc
add
jnp
es
jno
add
pavgb
xor
add
clc
loopne
cmp
add
add
jle
insb
cmp
inc
add
jg
clc
inc
add
mov
pop
in
test
push
clc
pop
clc
sub
sub
mov
fmull
inc
add
cld
mov
or
jge
clc
jecxz
arpl
add
sahf
sbb
clc
ret
clc
stc
lods
cli
jnp
pop
sbb
adc
cmp
das
sbb
add
push
cmp
aaa
cwtl
and
add
push
outsb
sbb
add
cmp
enter
stc
pop
push
cmp
fsubrp
rorl
mov
aad
add
lret
xchg
adc
add
mov
adc
arpl
add
lret
mov
add
out
bound
add
sub
xchg
jbe
clc
mov
and
add
add
ror
jl
mov
mov
and
add
adc
adc
lods
jge
mov
add
cmp
lea
mov
in
adc
add
jg
clc
fwait
xabort
clc
imulb
clc
adc
add
clc
pop
clc
hlt
jnp
clc
repnz
clc
sbb
stos
cmp
add
movsb
clc
add
add
stos
dec
xchg
mov
ret
clc
jae
add
clc
push
clc
pop
xor
add
add
xchg
dec
mov
xor
add
mov
jp
clc
adc
cmp
clc
sbb
scas
js
pop
lock
aam
in
xabort
clc
stc
mov
ds
mov
jg
add
lcall
add
add
add
xor
clc
test
pop
push
add
lret
cmp
fbstp
push
stc
gs
push
aad
stos
or
push
addr16
inc
clc
xchg
jecxz
xor
add
lods
int
clc
and
ret
movsb
clc
push
add
and
cli
sub
gs
push
add
mov
adc
add
test
add
inc
clc
lret
lods
and
add
data16
xbegin
jns
clc
mov
lods
cmp
add
clc
xchg
push
into
ret
clc
lea
hlt
cli
inc
add
push
mov
and
add
clc
xchg
xchg
mov
out
lods
pop
clc
sub
inc
add
lods
stos
xabort
jg
push
add
add
clc
mov
pop
pusha
add
lods
std
daa
clc
xchg
leave
sar
dec
cmp
ja
mov
add
adc
add
clc
out
xor
add
and
add
dec
dec
cmc
inc
add
test
push
mov
sub
cld
push
lea
data16
repz
or
ret
clc
fnstsw
jge
add
fisubrl
movaps
sbb
clc
movsl
clc
outsl
aam
clc
push
xor
add
clc
push
add
cmp
or
pop
lret
out
adc
add
inc
clc
jae
add
lret
clc
xchg
leave
mov
add
clc
icebp
movsl
clc
xchg
dec
enter
dec
mov
mov
clc
out
inc
add
mov
push
aaa
gs
and
add
clc
dec
imul
clc
out
stos
sub
add
add
inc
add
sbb
pop
shrl
push
dec
das
sbb
dec
shll
add
adc
add
outsl
sti
and
add
jae
add
inc
clc
inc
add
pop
into
or
cltd
xlat
or
push
add
fdivr
adc
add
mov
cmp
out
clc
sub
bound
add
inc
clc
jmp
cmp
add
lods
xor
add
inc
clc
sbb
clc
repz
jge
cs
mov
divl
clc
out
call
clc
aam
add
pop
popa
add
inc
clc
xor
add
clc
cmp
or
add
clc
fisubrs
ret
clc
imull
clc
lock
lods
xlat
addr16
lahf
pop
dec
in
inc
add
fists
add
test
mov
aam
clc
call
cld
arpl
add
scas
adc
xchg
push
out
mov
clc
out
lock
jle
push
lret
dec
mov
cmc
sub
fisttps
idiv
push
add
rcr
cmp
xchg
outsb
dec
push
call
mov
push
cwtl
or
test
inc
add
cmp
inc
clc
mov
mov
and
add
inc
clc
jns
clc
mov
push
in
sbb
add
mov
arpl
add
ret
clc
movsl
clc
xor
add
adc
dec
dec
fildll
dec
repz
add
or
add
clc
xabort
scas
aas
and
add
add
inc
clc
gs
cmc
popa
add
mov
add
mov
add
mov
and
push
add
jne
lahf
outsl
ss
dec
cmp
addr16
dec
test
pop
clc
xchg
xabort
sbb
sahf
push
clc
in
lock
clc
dec
mov
clc
cmp
hlt
loopne
in
inc
clc
sahf
mov
popf
xlat
add
add
mov
add
mov
aaa
mov
or
cld
jl
add
pop
and
and
add
xchg
popf
movsb
clc
adc
add
repnz
add
movsl
clc
mov
clc
sbb
clc
cs
fdivs
mov
clc
add
add
popf
pop
xchg
inc
add
in
sbb
cmp
int
pop
add
add
or
not
and
clc
lods
sahf
mov
fst
push
jns
inc
add
and
sub
add
imull
cmp
jno
add
enter
shlb
add
mov
aaa
repz
xchg
js
arpl
add
add
xchg
imul
fists
test
cmc
test
arpl
add
add
add
add
pop
lods
mov
add
jnp
in
xor
add
add
addr16
cmp
clc
pop
xabort
clc
sarl
mov
call
xor
mov
or
mov
mov
lcall
xchg
jno
add
cmp
fwait
addr16
push
add
int3
sar
and
add
clc
sbb
add
add
add
testb
xor
cmp
add
cli
cwtl
sti
cwtl
inc
clc
add
clc
dec
mov
daa
clc
mov
clc
clc
divl
add
add
add
je
pop
xchg
or
clc
roll
jnp
clc
std
xchg
inc
add
lods
in
hlt
ret
xchg
lods
mov
cli
dec
push
add
mov
clc
test
lcall
adc
clc
sbb
cmp
push
add
das
push
inc
add
adc
add
add
xabort
and
in
ret
clc
mov
mov
push
jns
pusha
add
imul
xchg
insl
cmpsl
clc
cmpsl
clc
xchg
lret
pop
jecxz
fisttpll
call
add
mov
mov
add
ret
clc
sbb
pop
test
emms
mov
add
add
js
mov
sar
mov
cmp
lret
adc
add
and
add
add
data16
jp
pop
and
add
push
stc
jne
insl
mov
enter
out
ficompl
clc
inc
add
imul
pop
clc
insb
push
add
clc
scas
jnp
add
insb
sub
mov
leave
arpl
add
add
test
push
mov
pop
pop
and
add
add
clc
jnp
ss
add
add
mov
add
push
add
das
outsb
inc
clc
inc
clc
and
add
inc
clc
test
add
adc
add
mov
clc
insl
mov
sbb
clc
push
add
cmp
mov
push
ja
xchg
xchg
or
cld
into
and
add
out
insb
aaa
xor
mov
mov
popf
inc
clc
ficompl
add
or
add
add
pushf
and
add
add
pop
dec
adc
add
add
add
xor
add
into
add
pop
jns
test
xor
add
add
pop
inc
clc
repnz
outsl
or
clc
loop
pop
mov
jo
add
dec
sar
xchg
in
daa
clc
sti
pop
outsb
mov
clc
xchg
clc
fcomp
and
add
mov
in
add
add
add
nop
adc
add
clc
push
popf
lret
and
add
jne
fdivs
add
xor
add
loope
xbegin
add
dec
cmp
add
add
xor
add
clc
add
add
xchg
xlat
adc
fwait
or
push
add
in
xchg
mov
pop
fdivrs
clc
xor
cmp
add
pop
jno
add
and
add
mov
clc
xchg
mov
clc
jl
loopne
inc
add
push
int
xor
add
add
clc
inc
clc
xor
add
mov
js
add
mov
pop
cmp
add
add
test
xor
add
out
dec
loop
insb
pop
jp
add
ss
jns
mov
clc
in
rclb
xabort
cmp
push
add
mov
cmp
insl
pop
xchg
jg
clc
fstpl
add
sbb
push
pop
mov
add
repz
mov
mov
clc
aad
imul
add
out
mov
mov
mov
xchg
xlat
cmp
clc
sbb
sar
add
mov
cmp
push
outsb
sub
push
push
into
movsl
clc
into
push
clc
and
xchg
lods
inc
clc
mov
insb
ja
add
push
add
cmp
clc
repnz
add
dec
addr16
ljmp
clc
xchg
fs
adc
add
insl
push
mov
clc
test
lcall
in
outsb
sub
insb
or
xchg
cmp
addr16
mov
adc
add
dec
mov
add
ljmp
xor
add
add
add
nop
cmp
clc
lcall
mov
pop
icebp
dec
inc
add
fisubrl
add
add
add
cmpsl
clc
jno
add
lcall
testl
mov
clc
pop
aam
clc
addr16
mov
imul
xchg
jbe
push
loopne
mov
clc
and
add
mov
add
clc
mov
clc
pop
sar
clc
pop
test
adc
or
add
add
into
mov
clc
adc
and
add
dec
outsb
push
cmp
in
lods
jbe
clc
or
add
jg
clc
cmpsl
clc
fs
pop
iret
das
mov
call
add
push
add
cmp
fiaddl
add
push
test
push
out
frstpm(287
clc
lea
sbb
hlt
mov
outsl
insb
sub
add
adc
add
clc
xor
add
adc
add
stos
pushf
jne
jbe
enter
aam
add
sub
idivl
add
hlt
pop
clc
lret
scas
push
xchg
adc
cltd
cwtl
push
clc
sbb
push
add
popf
out
sub
popa
add
push
add
add
daa
clc
sub
jmp
dec
imul
jnp
cmp
clc
js
add
pusha
add
fbld
dec
imul
popf
outsb
sbb
hlt
imul
arpl
add
cmp
clc
into
cmp
mov
clc
mov
iret
mov
clc
push
test
clc
dec
xchg
mov
mov
clc
in
icebp
mov
add
add
mov
clc
outsb
fisubrs
and
data16
adc
add
clc
xchg
sahf
out
push
sbb
xchg
xchg
xchg
imul
jo
add
add
fs
or
cmp
xchg
sarl
push
xchg
push
inc
clc
adc
add
clc
cmp
ss
jnp
add
std
jbe
dec
xor
add
mov
lahf
pushf
test
fldcw
pop
pop
cmp
clc
lahf
inc
add
shlb
add
mov
add
mov
scas
cmpsb
clc
inc
add
int3
pop
mov
aad
outsb
push
push
add
iret
es
loopne
int
cli
jns
stc
call
jbe
clc
call
cmp
scas
shlb
add
mov
clc
mov
mov
mov
add
hlt
fstpt
into
or
xor
add
add
add
jbe
mov
add
add
mov
clc
xchg
test
ds
aaa
dec
inc
clc
bound
add
loope
inc
clc
cmpsl
clc
sbb
clc
cmpsb
clc
add
aaa
inc
add
lcall
lods
mov
clc
xor
add
push
cli
mov
mov
lea
rorl
jecxz
iret
xbegin
gs
xchg
das
xchg
or
sub
mov
enter
jp
lcall
add
dec
addr16
or
pop
jbe
add
or
mov
cmp
xchg
jl
clc
dec
xor
add
sub
inc
add
xchg
sbb
clc
es
test
jle
or
sub
add
clc
add
aam
clc
or
clc
or
adc
clc
pusha
add
test
mov
or
cmpsl
clc
shlb
imul
xor
add
mov
add
lea
mov
sbb
clc
and
adc
add
add
xchg
xchg
add
add
add
xchg
popf
jns
addr16
leave
psrlw
adc
add
add
scas
pop
push
insb
jae
add
add
mov
mov
clc
cmp
add
inc
clc
loope
add
clc
push
int3
vaddps
inc
add
mov
jb
add
stc
mov
clc
xabort
in
mov
mov
lret
cmc
pop
jo
add
in
xchg
shrb
add
add
xchg
sar
clc
testl
xor
add
pop
mov
add
sub
push
pop
stos
mov
clc
jmp
out
cltd
fwait
test
clc
mov
clc
or
clc
in
cmpsl
clc
mov
add
clc
inc
clc
mov
add
cltd
inc
clc
add
add
call
xchg
data16
xchg
ret
add
xor
add
push
add
cmp
add
roll
mov
xchg
xchg
push
sub
xchg
push
clc
mov
jns
pop
cmp
mov
mov
cwtl
divb
repz
inc
add
ds
clc
repnz
push
icebp
mov
mov
or
loop
clc
inc
add
jns
cmp
sub
cmp
xchg
lret
jb
add
push
mov
clc
jg
notl
fildll
lods
mov
clc
pop
jo
add
scas
cmpsl
clc
jge
fisubl
dec
dec
addr16
push
mov
add
jne
clc
xchg
pop
clc
enter
mov
add
mov
fmuls
push
repnz
adc
add
xlat
cmp
xchg
in
push
add
aaa
xchg
loopne
pop
rcrb
fisttpl
cmp
clc
cmpsl
clc
scas
cli
into
jbe
mov
clc
push
add
std
insb
cwtl
pop
movsl
clc
movsl
clc
mov
mov
pop
push
cmp
add
es
xor
cld
clc
mov
adc
add
clc
inc
clc
data16
mov
ds
ds
and
add
sub
mov
adc
clc
in
and
add
pop
pop
std
dec
movsl
clc
xchg
insb
clc
jnp
js
adc
mov
push
stos
cs
cmp
ljmp
jae
add
xchg
cmp
clc
cmpsl
clc
add
add
pop
in
push
pushf
or
or
add
add
sbb
in
jnp
sub
aad
xchg
cmp
dec
adc
add
and
add
mov
clc
sar
fs
xor
add
inc
add
mov
or
add
inc
clc
sub
scas
push
lock
add
cmp
add
clc
mov
cmp
clc
insb
dec
jmp
add
push
clc
test
shll
fsubrs
loopne
aam
push
or
out
test
xabort
test
stc
jae
add
add
cmp
clc
clc
or
add
lods
aad
add
js
call
dec
es
leave
int
xor
add
clc
addr16
lret
push
repz
jg
mov
dec
push
leave
xchg
xabort
add
add
add
add
add
add
mov
fcomip
stc
push
clc
xor
add
add
add
or
sub
sub
das
test
xlat
ja
cmpsl
clc
flds
mov
lods
mov
clc
xchg
and
add
push
data16
jae
add
add
mov
add
insl
pop
clc
dec
repnz
clc
lret
mov
in
icebp
arpl
add
sub
clc
cmp
pop
sub
jb
add
add
inc
add
repnz
and
inc
clc
xchg
rcrb
addr16
mov
filds
clc
icebp
addr16
xchg
repz
adc
clc
mov
and
add
clc
sub
clc
dec
aad
add
add
popf
out
mov
bound
add
add
jle
lahf
xchg
cltd
jns
add
mov
and
clc
in
jmp
testb
enter
xabort
sar
or
clc
loop
sub
add
stc
test
je
aam
dec
insb
out
mov
sbb
pop
outsl
xchg
xlat
and
add
movsl
clc
aas
js
add
lret
adc
clc
inc
clc
cmp
fisubl
lcall
shl
clc
int3
xlat
mov
sub
inc
add
inc
clc
inc
add
jp
sub
xor
add
insl
aad
xbegin
clc
mov
aam
mov
pushf
insl
jmp
add
pusha
add
outsl
mov
clc
sbb
add
nop
and
aam
clc
test
nop
das
xchg
mov
add
scas
mov
add
jl
dec
testl
clc
cwtl
mov
add
pop
jmp
xor
add
adc
add
std
sbb
clc
fnstcw
scas
loope
bound
add
add
insl
pop
mov
add
fisubrl
clc
icebp
fsts
add
mov
shl
das
xchg
jae
add
test
pop
pop
sbb
pop
in
fstpl
in
int3
xlat
add
jno
add
mov
clc
jno
add
add
lock
sti
or
lcall
int
add
or
cwtl
or
in
pop
xbegin
push
add
add
lret
inc
clc
inc
clc
sub
jl
sahf
decl
mov
clc
in
divb
add
xchg
roll
out
arpl
add
cltd
and
add
outsb
xchg
and
pop
push
clc
cwtl
mov
clc
dec
jp
add
add
add
cmp
add
dec
adc
add
clc
aas
adc
add
clc
mov
xchg
mov
stos
popf
stc
ds
clc
mov
ss
test
clc
jg
lcall
lcall
ja
mov
out
cwtl
add
add
jns
clc
jmp
clc
outsb
and
add
pop
lret
bound
add
mov
add
add
pop
cmc
inc
clc
js
mov
pop
idivl
pop
jne
mov
jge
ret
clc
xor
add
push
add
cmpsb
clc
gs
mov
cmp
test
cmp
clc
arpl
add
pop
addr16
int
xchg
cmpsl
clc
xor
add
sbb
add
repz
add
fidivrs
rcrl
clc
data16
jp
xor
add
add
clc
js
mov
psubq
mov
fadds
add
fyl2xp1
sti
or
add
dec
adc
add
adc
add
push
add
insl
jo
add
clc
pop
fidivl
jmp
out
shll
add
add
cwtl
pop
jge
or
out
sahf
pop
inc
clc
lods
aas
inc
add
loop
aas
xlat
movsb
clc
cmp
aaa
cmp
push
add
lahf
dec
out
dec
push
mov
add
out
xchg
js
movsl
clc
sub
test
add
repz
cmp
dec
mov
sti
fisttps
imul
in
stc
cmp
pushf
mov
sub
mov
add
xchg
add
pop
push
add
in
sub
clc
fs
pop
popf
push
add
mov
clc
leave
into
test
lods
and
add
mov
cmc
mov
aam
clc
loopne
lret
scas
mov
clc
and
add
add
cs
add
xbegin
aam
xor
add
clc
rcl
ret
clc
push
add
rcl
sbb
add
jp
lods
test
popf
loopne
sub
out
pop
ret
clc
mov
xchg
sub
xchg
push
mov
push
clc
xchg
out
adc
cmp
mov
out
addr16
jo
add
pop
and
add
ret
or
or
jbe
jb
add
push
dec
lahf
and
add
jb
add
jl
clc
mov
add
and
add
xabort
add
notl
add
loop
mov
clc
jns
inc
add
sahf
xor
add
xchg
jno
add
sti
mov
mov
clc
lahf
ljmp
daa
clc
or
clc
and
add
movsl
clc
arpl
add
add
pusha
add
push
or
add
mov
xchg
cmp
push
add
xchg
push
mov
sub
mov
push
hlt
jae
add
jmp
push
in
xor
cmp
clc
mov
cmp
cmp
add
cmp
and
in
inc
clc
sahf
pop
clc
int3
hlt
into
je
pop
outsl
mov
add
mov
add
mov
clc
push
clc
test
add
inc
add
enter
into
or
add
sub
lcall
nop
inc
add
dec
dec
adc
add
clc
pop
clc
cmp
out
clc
mov
clc
mov
clc
into
push
add
pop
clc
xchg
out
lret
mov
inc
clc
inc
add
adc
add
add
ljmp
clc
out
loope
sbb
cmp
in
pushf
cmc
cld
jmp
xbegin
clc
xchg
jne
or
add
int3
imul
or
dec
push
and
add
add
jmp
xchg
sbb
add
test
clc
in
push
aaa
or
add
loop
jne
add
add
add
clc
cmp
clc
or
clc
mov
bound
add
add
mov
lods
rep
clc
dec
cmp
xchg
push
xchg
je
add
push
stos
pop
clc
and
add
add
xchg
sbb
lods
xor
add
xchg
mov
clc
in
int3
movsl
clc
leave
jo
add
test
add
clc
stos
xlat
fs
or
push
xbegin
clc
mov
dec
sub
add
scas
adc
add
pop
and
add
mov
mov
insb
mov
add
clc
aad
push
cmp
clc
fisubrl
aas
mov
or
insl
in
out
mov
clc
cmp
popf
popf
add
add
or
clc
insl
cmp
mov
cs
clc
or
cmp
add
clc
sar
add
mov
add
pop
js
je
clc
mov
pop
dec
pusha
add
push
test
mov
outsb
out
xor
add
clc
xor
loope
add
add
add
loopne
and
add
out
xor
add
sub
lods
mov
add
mov
add
repnz
add
add
sub
add
cli
sbb
shlb
lcall
iret
sar
and
add
mov
add
out
movsb
clc
inc
clc
cmc
aam
lock
or
sbb
fidivrl
add
dec
and
add
clc
movsl
clc
in
stc
fwait
sbb
add
js
add
cli
hlt
fs
push
clc
xchg
dec
cmp
add
int3
or
push
add
loope
pop
clc
lcall
clc
xchg
xchg
adc
clc
ljmp
push
fildll
ds
hlt
push
xchg
push
add
jne
inc
clc
in
out
insb
scas
push
lret
sti
push
pop
lock
adc
clc
es
sahf
stos
jbe
or
mov
add
out
mov
sbb
add
sub
movsb
clc
insb
xchg
enter
add
ljmp
push
clc
and
imul
lea
mov
clc
xchg
add
fisubs
adc
add
or
clc
sub
add
ds
jl
add
sub
add
clc
int3
jmp
mov
xchg
pushf
stc
jo
add
outsb
adc
add
mov
mov
clc
dec
lahf
pop
clc
xchg
inc
clc
sbb
ja
clc
mov
dec
lods
fcmove
ss
call
add
xor
add
mov
hlt
mov
add
into
xor
adc
add
in
adc
add
add
push
jo
add
add
rorl
fdivr
pop
dec
cmp
pop
sub
xchg
mov
sub
add
scas
mov
jne
jb,pn
add
clc
adc
adc
add
cs
clc
jg
mov
xor
add
xchg
insb
xchg
mov
clc
mov
push
or
add
js
mov
pop
adc
add
data16
aam
add
push
clc
cmp
sar
add
aam
scas
cmp
mov
shll
add
push
arpl
add
cmp
clc
add
stos
ret
clc
xlat
int
add
mov
cmc
push
mov
adc
aas
mov
jl
adc
add
push
jp
add
mov
jno
add
clc
faddl
add
xchg
mov
add
add
aaa
mov
push
xor
add
add
cmp
fadd
clc
cld
jb
add
clc
mov
add
jb
add
std
xchg
es
xchg
and
add
adc
add
add
ljmp
push
add
pop
or
mov
clc
cmp
xchg
stc
outsl
pop
insb
clc
push
mov
stos
inc
clc
out
bound
add
sub
adc
add
stc
or
push
cmp
jge
clc
stos
rcrl
add
add
add
out
sbb
int
test
leave
jecxz
add
add
add
adc
add
pusha
add
pop
pop
imul
xchg
dec
add
xchg
sub
nop
lods
movsl
clc
popa
add
lret
add
scas
or
aad
add
xabort
adc
add
lahf
inc
add
fcoms
clc
jno
add
enter
adc
add
add
mov
clc
fisubrl
add
add
inc
add
in
das
sub
xchg
test
pop
push
pop
sar
push
ljmp
add
push
add
add
add
clc
push
add
lods
in
or
arpl
add
mov
mov
jecxz
sti
lods
data16
clc
mov
clc
and
cwtl
xchg
or
xor
inc
add
popa
add
test
jl
add
add
add
ljmp
add
loope
cmp
repnz
xor
test
add
xor
add
sar
add
inc
add
out
ljmp
inc
clc
jno
add
add
repz
add
clc
int3
mov
clc
scas
push
pushf
cmp
push
mull
test
sar
and
add
add
add
add
dec
mov
add
scas
push
add
mov
add
add
push
add
jns
add
in
clc
adc
add
clc
jmp
add
clc
inc
add
cmc
lods
lret
aam
dec
xor
add
add
add
clc
adc
add
jae
add
add
scas
aad
add
cmp
add
clc
ljmp
add
je
clc
cli
icebp
addr16
xor
add
add
lods
addr16
mov
add
clc
outsb
daa
clc
jne
push
add
push
clc
sbb
pushf
lods
outsl
loope
mov
addr16
rcrl
sub
clc
xchg
shlb
add
cld
xchg
push
add
clc
push
mov
fwait
push
add
add
sub
clc
ret
leave
add
add
test
clc
sub
clc
test
mov
add
xlat
fdivs
xor
movsl
clc
push
adc
clc
testb
clc
push
add
pop
jge
xlat
lods
sub
xchg
and
add
xchg
ffreep
clc
fwait
pop
je
mov
cmp
xchg
add
stos
in
cmpsl
clc
xchg
xchg
inc
clc
es
pop
inc
clc
add
add
add
or
cmp
fstpt
pop
imul
pushf
xor
add
add
and
add
clc
pop
and
add
add
leave
sbb
add
std
clc
xabort
movsl
clc
popf
aam
adc
add
add
fbld
add
jle
clc
xor
add
xor
add
aad
inc
clc
adc
add
or
push
clc
push
mov
add
fmull
add
lea
add
clc
xchg
jge
clc
inc
add
or
mov
clc
dec
clc
mov
add
mov
inc
add
inc
clc
xchg
test
pop
push
lods
xchg
add
add
add
xchg
arpl
add
pop
mov
clc
dec
sbb
xchg
fldcw
inc
add
xchg
push
add
fs
dec
dec
fiadds
add
popf
or
add
sbb
insb
mov
sti
ja
lcall
pop
clc
sar
clc
lods
push
gs
cmpsl
clc
sbb
inc
clc
cmp
js
sub
jl
inc
clc
int
xchg
mov
add
mov
add
add
add
aam
movsl
clc
not
ret
lods
xor
add
stos
das
adc
add
mov
dec
push
mov
or
dec
push
add
out
mov
clc
scas
jns
push
xchg
pusha
add
lock
push
add
clc
cmc
sahf
xchg
jg
clc
stc
and
cmp
clc
cmp
add
add
push
and
add
decb
lock
or
sar
dec
push
add
ds
xchg
mov
mov
add
ja
add
add
loopne
rolb
add
adc
std
adc
add
repz
clc
loop
cmpsb
clc
or
add
addr16
insl
test
ss
cmp
clc
test
xchg
ret
clc
push
fsubr
jbe
add
in
sub
or
xchg
mov
out
je
clc
test
push
push
add
loop
shl
call
inc
clc
fidivl
add
add
loopne
mov
clc
jb
add
add
and
add
iret
data16
xor
add
stc
out
and
add
sbb
dec
or
add
leave
aam
clc
mov
add
mov
mov
sbb
ss
dec
jle
jge
clc
aad
mov
into
cli
pop
mov
cmp
scas
movsl
clc
imul
fmuls
mov
clc
sub
bnd
jae
add
or
add
ds
inc
clc
icebp
push
xchg
inc
add
aad
clc
js
jge
clc
adc
clc
sub
clc
or
dec
inc
add
xchg
das
outsl
pop
std
cmp
clc
negb
sbb
and
add
add
jns
cmp
xlat
cmp
loope
fwait
pop
adc
push
aas
pop
adc
add
pop
clc
jle
out
stc
imul
xchg
add
add
add
into
pushf
cmp
push
pop
mov
fcmovnbe
movsb
clc
pop
xchg
lret
sbb
clc
pop
in
cmp
cmpsb
clc
or
add
jge
pop
mov
in
sbb
rcll
and
scas
repz
add
popa
add
jl
out
iret
repz
add
mov
clc
es
mov
jmp
clc
ljmp
or
add
fdiv
data16
or
outsb
xchg
inc
clc
rcrl
adc
and
add
pop
mov
mov
clc
pop
cmp
ds
cmp
das
and
add
mov
cmp
add
add
sub
clc
test
add
cli
cmp
enter
loopne
mov
inc
clc
cmp
data16
call
jmp
clc
inc
add
sub
add
and
add
adc
add
add
add
add
add
add
jl
fwait
dec
sbb
dec
sti
popa
add
ficoml
out
xchg
adc
add
sub
ret
clc
pop
dec
push
mov
jl
add
and
add
clc
mov
xchg
add
add
clc
push
inc
clc
cld
jne
outsl
xchg
jne
dec
cmp
add
sub
lea
add
fs
push
ljmp
add
dec
in
jmp
jp
clc
mov
clc
sub
pop
movsb
clc
fwait
xlat
shlb
or
xabort
add
cmp
pusha
add
cld
and
add
cmp
jp
inc
clc
daa
clc
and
add
nop
mov
add
mov
push
clc
pop
mov
int3
bound
add
fstpt
xor
xor
addr16
jg
js
and
add
clc
scas
adc
add
das
or
push
add
popa
add
adc
add
sub
mov
add
inc
clc
jno
add
imul
clc
scas
or
xchg
addr16
mov
icebp
mov
xchg
int
test
lcall
push
clc
shlb
add
imul
call
pusha
add
xchg
mov
scas
sub
push
add
dec
jne
add
into
cmp
add
mov
clc
mov
mov
add
clc
mov
add
jo
add
out
fists
loopne
xchg
data16
dec
inc
add
or
aaa
testl
xor
adc
clc
push
add
rcll
outsl
add
ljmp
jecxz
mov
add
test
dec
mov
add
jnp
clc
sti
pop
jnp
pop
aas
pop
inc
clc
sti
jp
lock
add
popa
add
sar
shll
clc
jl
sbb
leave
mov
stc
sbb
mov
pop
fcoml
imul
add
insb
sub
clc
cmp
clc
popf
leave
sbb
add
lea
ljmp
fs
adc
add
add
in
sub
add
add
insl
jp
add
xchg
call
or
clc
or
sub
lret
add
sbb
add
pop
or
sub
clc
cltd
outsb
addr16
adc
add
movsb
clc
jmp
add
push
shlb
add
or
add
inc
add
into
lea
add
leave
imul
push
aam
clc
dec
adc
add
fcomps
clc
inc
clc
inc
clc
xchg
cld
jns
clc
xlat
push
aad
dec
insl
push
jnp
mov
sub
add
push
clc
sub
add
jbe
clc
push
add
imul
add
add
jae
add
clc
es
sub
sub
mov
stc
dec
inc
add
sahf
pop
xchg
fwait
out
cmc
out
test
cltd
fisttpl
stos
jl
clc
adc
popf
cwtl
adc
add
pop
movsl
clc
adc
add
jl
ds
mov
add
arpl
add
std
xor
add
clc
and
pushf
mov
and
rcl
movsl
clc
scas
ss
fisttpl
or
clc
pop
sbb
add
add
clc
mov
clc
lcall
lock
clc
lcall
sbb
clc
ds
clc
xlat
pop
and
out
bound
add
add
repnz
xchg
dec
mov
jecxz
movsb
clc
lret
clc
fbld
add
clc
xor
add
dec
int
clc
aad
clc
imul
js
out
jg
clc
or
push
add
gs
sbb
mov
clc
push
xlat
pop
adc
mov
xchg
or
mov
pop
rorb
es
outsb
xabort
rol
clc
xchg
xchg
jbe
mov
mov
mov
push
add
xabort
and
add
clc
mov
clc
add
add
stos
leave
xchg
aaa
inc
clc
inc
clc
pop
shrl
pop
inc
add
xor
add
stos
lods
push
popf
push
ja
outsl
cmp
or
sbb
push
imul
mov
clc
jmp
xor
add
mov
sbb
and
clc
shll
add
ret
clc
dec
mov
addr16
out
mov
add
ljmp
dec
cli
rclb
mov
clc
outsb
adc
add
in
xchg
int
inc
add
gs
jae
add
ja
dec
inc
add
mov
add
mov
sub
mov
clc
movsb
clc
aam
add
sbb
ficomps
adc
add
into
dec
adc
add
mov
out
cmp
inc
clc
je
adc
in
call
add
mov
add
mov
clc
popf
add
sub
jae
add
ljmp
sub
clc
ljmp
xchg
lods
sbb
lods
xor
adc
add
sub
lods
push
xchg
aam
pop
arpl
add
jle
clc
fldt
add
add
xchg
aas
mov
add
mov
in
push
pop
mov
clc
mov
clc
mov
mov
out
xor
add
add
or
lret
clc
pop
vsubps
cltd
mov
jbe
cmp
pop
clc
or
xor
add
std
or
icebp
and
add
xabort
xchg
add
nop
xchg
mov
clc
lea
pop
pop
mov
fwait
out
or
pop
in
std
inc
add
sbb
in
pushf
push
add
movsb
clc
add
add
xor
dec
mov
clc
outsb
jns,pt
mov
xchg
fwait
je
push
clc
adc
add
es
in
in
jne
roll
add
dec
mov
mov
cmpsb
clc
je
mov
sub
clc
ret
sar
add
cmp
add
js
xchg
xbegin
jns
adc
add
clc
and
add
add
call
movsb
clc
mov
out
lret
and
add
clc
test
repnz
clc
lods
daa
clc
lret
out
ficoms
add
mov
xor
jmp
clc
pushf
jecxz
cmp
cmp
fisubrl
jb
add
jg
jl
clc
jbe
clc
negl
or
clc
cld
xchg
mov
fmul
cmp
shl
cmp
clc
push
add
sti
cltd
add
add
mov
add
cmp
xbegin
pop
jle
sbb
xchg
dec
mov
mov
clc
sbb
clc
mov
push
add
add
add
jns
ja
sub
jmp
clc
mov
clc
jle
mov
add
test
dec
cmp
cld
cltd
xor
add
push
clc
jmp
mov
dec
into
dec
push
add
mov
cmpsl
clc
fildl
scas
cmp
add
and
jl
jg
xor
add
add
cwtl
jp
add
ret
clc
ja
lock
cmp
jae
add
ss
mov
icebp
cmp
dec
xor
add
jnp
inc
add
popf
and
add
mov
test
pusha
add
xor
add
clc
adc
push
add
xchg
fwait
push
lret
insl
and
add
loopne
sub
add
push
inc
clc
mov
add
clc
pop
into
shl
clc
xchg
xchg
test
pop
push
mov
inc
clc
add
add
clc
dec
test
outsb
sbb
scas
sub
mov
test
cmp
ss
xor
add
popf
hlt
or
and
leave
xchg
lret
add
add
push
fcom
es
mov
add
add
cmpsb
clc
sub
bound
add
clc
mov
dec
xor
add
add
je
clc
inc
clc
fsubr
pop
or
rclb
clc
sub
lret
push
add
jae
add
arpl
add
mov
mov
adc
sbb
add
adc
add
stc
xor
mov
clc
mov
add
shrb
cmp
loope
int3
in
testb
and
add
clc
sbb
sub
icebp
push
add
push
mov
dec
sbb
lret
push
push
cmp
mov
mov
add
add
push
dec
and
add
push
add
add
add
or
sbb
lea
add
mov
mov
add
add
clc
dec
in
fisttpl
fs
inc
add
xor
clc
adc
add
add
idiv
scas
inc
clc
sar
bound
add
clc
clc
rcrb
fnstsw
mov
and
mov
imul
add
add
add
lahf
mov
sbb
imul
cld
mov
mov
add
fsubl
xbegin
pop
pop
clc
lea
mov
xchg
add
add
clc
adc
jecxz
xchg
scas
test
mov
cs
sbb
add
outsl
cld
add
add
clc
dec
stos
pop
enter
ret
clc
xchg
mov
icebp
mov
pop
clc
lret
bound
add
clc
add
cwtl
jae
add
add
decb
clc
pop
mov
std
shl
clc
dec
jp
xor
add
dec
movsl
clc
adc
clc
xchg
sbb
clc
in
pusha
add
xor
divl
add
push
add
pop
clc
cmp
sub
icebp
xor
add
xor
add
mov
imul
jb
add
add
cmpsl
clc
inc
add
xchg
and
push
inc
add
dec
inc
clc
loope
pushf
mov
xchg
or
add
lea
ficoml
add
rol
clc
jb
add
es
mov
or
add
sbb
outsl
inc
clc
xor
add
mov
testb
cmp
cmp
cwtl
jb
add
clc
fwait
or
add
fdivrp
iret
out
push
hlt
imul
rcrb
adc
add
add
cld
lahf
xchg
xchg
jecxz
push
add
loopne
mov
jb
add
js
pop
jle
add
push
or
clc
jle
clc
sar
int
clc
dec
cmp
clc
push
adc
add
bound
add
out
pop
mov
pop
fidivl
add
js
add
mov
jl
cwtl
inc
clc
outsb
cmpsl
clc
cmp
clc
stos
ret
clc
pop
sti
bound
add
add
inc
clc
jo,pt
add
leave
sar
mov
clc
mov
add
mov
inc
add
pop
jne
pop
xor
add
cmpsb
clc
mov
into
sti
push
xchg
xor
bound
add
pop
in
outsb
sbb
cwtl
jecxz
in
and
mov
fists
scas
jno
add
fsubrs
bound
add
add
mov
mov
xchg
ja
int3
sar
sub
out
negl
roll
clc
icebp
push
add
test
push
add
pop
xchg
mov
jne
clc
cli
xbegin
push
clc
jle
clc
mov
sbb
mov
cwtl
aam
clc
insb
clc
ret
clc
jne
negl
fbstp
clc
fidivs
insl
xchg
movsb
clc
lret
lea
fisubl
cmc
clc
cld
repnz
data16
or
stos
movsl
clc
dec
jb
add
clc
cmp
xor
add
clc
sub
lcall
lcall
popf
xchg
mov
pop
scas
loop
and
add
cmpsb
clc
ds
mov
out
popf
addr16
xchg
add
add
inc
add
insl
stc
pop
icebp
int
imul
clc
fsubs
stos
leave
cmp
clc
jp
cs
cwtl
push
sar
mov
cmpsl
clc
out
rclb
xchg
lcall
add
dec
bound
add
mov
mov
jg
fisttpl
dec
and
add
jl
xbegin
cmpsl
clc
pop
clc
cmp
clc
dec
clc
jns
fs
mov
call
nop
mov
clc
fxch
std
push
add
loopne
rcl
or
es
push
add
fwait
cmp
popa
add
cmp
sbb
leave
cli
clc
or
stc
popa
add
xchg
adc
add
cwtl
rcrb
shrl
add
mov
clc
jle
add
xor
add
mov
fdivl
add
into
aam
inc
clc
and
add
nop
ret
clc
gs
xlat
cli
call
std
out
mov
and
add
stos
jb
add
clc
add
add
add
and
add
mov
add
or
arpl
add
cwtl
adc
clc
ds
cld
dec
fistps
dec
jmp
add
mov
sahf
push
clc
jo
add
das
sub
cmp
add
add
stos
cltd
add
add
in
and
add
add
fldcw
xchg
lock
clc
pop
clc
and
add
clc
scas
test
stc
ljmp
loopne
ret
clc
jmp
push
add
ja
mov
clc
add
cmp
cli
or
add
push
sbb
jo
add
fdivl
add
cmc
jns
clc
in
cmp
fcomps
aad
dec
leave
sbb
clc
cli
or
add
add
lods
cmp
add
test
cmp
add
xchg
ret
mov
clc
int
add
pop
sti
cmp
stos
pop
jne
loopne
cmp
dec
cmp
ljmp
pop
insb
inc
add
or
add
out
icebp
fnsave
add
clc
inc
add
bound
add
clc
fcmovnbe
mov
je
push
inc
add
test
xor
clc
add
add
enter
into
faddp
clc
mov
repnz
add
lea
add
and
add
fildll
movsl
clc
ret
pop
jae
add
mov
sbb
clc
push
jb
add
clc
ficomps
mov
add
add
loope
dec
dec
or
jnp
push
adc
clc
pop
clc
xabort
jbe
lcall
mov
cmp
hlt
lods
sub
sahf
mov
lods
cwtl
and
add
jg
add
add
clc
lret
pop
add
cltd
pop
testb
sub
or
popf
fimull
jnp
in
daa
clc
bound
add
add
loop
sar
cmp
dec
adc
add
clc
and
add
mov
ja
add
jne
pop
clc
and
add
add
xchg
xchg
out
pushf
jno
add
pop
test
jbe
jge
add
cmp
add
pushf
fstps
dec
ret
clc
jo
add
add
scas
push
mov
push
sar
add
popf
jae
add
fisubrl
add
mov
aaa
mov
xchg
out
pop
xor
jg
repnz
pop
dec
in
fs
or
add
adc
add
clc
dec
fstpt
xor
add
xchg
mov
inc
add
cltd
sar
add
dec
gs
out
sar
mov
clc
fdivl
add
add
dec
mov
in
dec
push
inc
add
mov
cmp
add
xabort
add
insl
fs
sbb
clc
dec
mov
inc
clc
mov
mov
add
xchg
sbb
pop
in
int
je
fdiv
loopne
mov
xor
add
add
sar
mov
inc
clc
pop
push
add
aad
xor
add
and
mov
add
cmp
cs
dec
push
clc
das
dec
ljmp
cmp
jne
insb
arpl
add
aad
adc
int3
pop
pop
xchg
jne
ret
clc
inc
clc
adc
add
data16
or
lea
cmpsb
clc
add
add
sub
add
sbb
sub
add
and
pop
sti
dec
icebp
push
sbb
sbb
clc
inc
clc
ret
in
xchg
xchg
adc
add
add
add
clc
aad
inc
clc
leave
xor
add
add
ret
jno
add
xchg
mov
repz
data16
or
add
xor
add
movsl
clc
mov
into
testb
xor
add
into
and
mov
clc
fstpt
rorb
call
add
add
sub
clc
jb
add
add
or
fistpl
add
pop
sbb
clc
ja
aas
out
pop
or
xor
add
cmpsb
clc
add
add
add
out
mov
add
es
cmp
ss
test
clc
idivl
mov
cmp
xchg
insl
pop
ljmp
leave
jg
jbe
mov
clc
mov
aam
pop
xchg
outsb
stos
inc
clc
xor
add
xchg
adc
mov
int3
or
add
sbb
push
cmc
stos
sarb
add
in
scas
lcall
clc
movsl
clc
rcrb
mov
jl
clc
jnp
inc
add
mov
cmp
add
push
add
mov
rol
clc
icebp
mov
lcall
rol
clc
fs
xchg
pop
dec
sar
jnp
add
into
add
add
insl
push
inc
clc
inc
clc
imul
jo
add
mov
cs
xor
cmp
js
gs
enter
add
aam
clc
call
clc
xor
add
add
sbb
add
add
icebp
in
cld
mov
sar
and
and
add
loope
xor
clc
dec
adc
mov
pusha
add
mov
push
imul
inc
add
mov
notl
add
rorl
stos
dec
jno
add
xchg
and
add
ja
movaps
and
add
or
fdivr
ljmp
addr16
sar
clc
sbb
xchg
xchg
mov
icebp
mov
add
adc
add
clc
xchg
in
xor
add
jns
clc
outsl
shlb
add
data16
mov
jo
add
add
push
or
add
sub
or
add
or
int
lret
outsl
xor
add
ret
clc
ljmp
sub
add
mov
fistps
mov
add
add
shlb
daa
clc
inc
add
mov
add
xchg
addr16
push
add
clc
lea
add
clc
push
add
fdivp
xchg
lcall
add
sub
clc
roll
test
push
mov
jp
add
push
add
pusha
add
ficomps
lcall
mov
in
add
in
xor
add
add
add
inc
add
inc
add
ret
clc
in
dec
nop
ja
int3
xor
add
add
lea
add
pusha
add
mov
mov
pop
dec
pop
and
add
jnp
add
aad
stos
cmp
mov
add
clc
lods
xchg
xchg
push
jb
add
add
int
jmp
gs
test
pop
clc
mov
add
add
mov
or
dec
xchg
xor
outsb
xchg
push
add
mov
pop
std
clc
out
setb
pop
xchg
mov
pop
test
jo
add
sti
lahf
shrb
inc
clc
bound
add
gs
pop
das
and
add
sub
in
stos
adc
ss
add
popa
add
sar
xabort
mov
add
repz
clc
mov
clc
mov
xor
add
xor
mov
inc
clc
into
sldt
add
add
cmp
gs
sbb
daa
clc
jb
add
clc
dec
mull
clc
dec
sub
add
add
pop
xchg
add
add
clc
lret
jmp
push
aad
je
clc
jl
dec
clc
es
mov
jns
clc
in
ret
jae
add
jl
xlat
mov
in
in
lea
mov
aas
sbb
data16
icebp
popf
adc
add
adc
add
sbb
clc
mov
clc
sub
sub
clc
aad
sub
or
push
xchg
pop
cli
mov
dec
into
popa
add
sbb
cltd
in
push
imul
clc
cmp
icebp
ds
clc
adc
add
and
out
rorb
loop
cmpsl
clc
cli
xchg
cmp
lods
mov
clc
adc
add
xchg
psllq
loop
pushf
in
add
add
add
int3
insb
sahf
ds
clc
jns
push
clc
inc
clc
xor
push
add
ret
dec
out
out
push
xor
add
pop
lret
add
clc
lea
sarb
popf
mov
pop
mov
jne
je
clc
shl
clc
repnz
sub
lea
clc
scas
lods
jl
divb
xchg
push
cmp
leave
fsts
add
outsb
pop
clc
pop
clc
ret
lret
push
add
push
jb
add
fsubr
int3
mov
sbb
adc
add
add
add
clc
add
add
rcrb
int
insl
xabort
add
cmp
clc
stos
inc
add
push
add
jnp
xchg
popa
add
out
jp
sar
mov
or
add
add
ss
add
add
ss
xlat
aam
jl
add
arpl
add
add
je
data16
das
into
mov
arpl
add
clc
lods
arpl
add
add
cmp
add
sbb
mov
and
add
add
mov
xchg
or
clc
movsb
clc
inc
clc
aaa
popa
add
iret
jl
clc
push
and
add
adc
add
sub
add
xchg
outsb
cs
add
mov
daa
clc
inc
clc
movsb
clc
dec
test
sar
push
sub
repnz
cmpsl
clc
inc
add
mov
test
xchg
cmp
cmp
add
ds
jg
mov
add
cmp
loopne
dec
mov
clc
push
jb
add
pop
cmp
clc
xabort
in
outsl
pusha
add
mov
add
fldt
add
ljmp
clc
movsb
clc
cli
sub
mov
dec
add
add
jb
add
lcall
mov
movsl
clc
adc
add
push
add
adc
add
and
add
mov
xchg
mov
add
clc
out
imul
std
cmp
clc
cmp
in
ret
inc
add
out
pop
push
xor
add
jb
add
mulb
jne
pop
std
and
add
cmp
clc
sar
jbe
push
push
add
enter
mov
inc
clc
adc
add
push
mov
pop
fdivs
add
push
xbegin
ja
cmp
mov
jmp
testb
mov
clc
dec
ljmp
add
icebp
xchg
out
ds
sbb
push
add
add
aas
or
clc
clc
adc
push
clc
imul
addr16
scas
or
jb
add
pop
fcoms
sub
cld
xchg
or
sbb
sbb
xchg
test
bound
add
lock
clc
inc
clc
xor
add
xor
mov
inc
clc
sub
clc
pop
sub
add
loope
sar
clc
es
or
stc
lods
push
add
js
clc
addr16
mov
sti
mov
add
add
clc
mov
outsl
lret
clc
dec
push
pop
ja
clc
jno
add
clc
in
das
jl
ljmp
inc
clc
rcrl
push
add
int
add
cmp
add
enter
push
xor
add
clc
push
movsb
clc
cmp
stos
call
mov
fistpl
add
data16
add
test
lret
movsl
clc
and
add
clc
loop
repz
add
add
mov
je
clc
push
cld
pop
fdivl
mov
mov
add
cmpsl
clc
jne
mov
add
push
clc
loop
test
push
add
jp
mov
imul
add
pop
xchg
popf
call
add
xchg
add
add
clc
gs
imul
add
add
cmc
loop
ret
clc
pop
clc
int3
pop
popf
lods
out
in
jg
add
inc
clc
cmp
inc
clc
int
clc
shrb
push
mov
iret
mov
lcall
add
cmp
or
or
in
cmc
add
jmp
sub
push
cmpsl
clc
sar
add
push
pop
test
fisubl
clc
pushf
in
xor
rcrl
add
add
add
sbb
clc
ret
in
sbb
das
lods
jecxz
mov
pop
xor
stos
loop
mov
mov
xor
add
imul
lahf
add
add
add
xor
add
and
add
xchg
flds
add
mov
push
add
loop
pusha
add
jl
clc
sar
add
add
leave
cmp
dec
and
add
and
add
fs
mov
sub
fnsave
pop
lods
punpckhdq
add
call
stos
jl
add
cmp
clc
data16
stc
jns
pop
sbb
add
mov
stos
aam
das
scas
sbb
add
mov
clc
data16
add
clc
mov
pop
push
nop
popf
xor
add
js
cmp
std
mov
inc
clc
sub
add
and
add
sti
cli
cs
clc
test
cs
cld
sub
icebp
xbegin
add
cmp
pop
iret
mov
pushf
loope
xchg
addr16
repnz
sbb
add
es
icebp
jbe
add
xchg
and
idivb
iret
dec
cmp
clc
inc
clc
or
inc
add
out
lahf
xchg
cmp
add
fsubrp
dec
cmc
jno
add
clc
pop
jge
add
pop
xor
add
dec
stos
fldenv
push
add
sub
clc
stc
bound
add
push
jp
mov
mov
mov
clc
add
add
mov
and
push
add
loope
add
pushf
jno
add
xchg
inc
add
inc
clc
movsb
clc
aad
mov
xchg
dec
sar
imul
lea
mov
clc
or
lahf
cmp
add
sub
gs
bound
add
clc
jg
decb
add
fnsave
sahf
sub
rcrb
fcompl
and
add
clc
dec
imul
aam
sub
sub
and
add
clc
add
add
adc
add
mov
gs
fstpt
add
out
dec
xchg
xor
add
fimull
mov
sarb
daa
clc
rol
clc
or
add
sub
clc
push
add
lods
rcll
clc
cmp
pop
mov
stos
loope
add
add
add
cwtl
sub
add
or
inc
clc
mov
pop
popf
push
gs
bound
add
add
test
ss
out
inc
add
testb
add
cmp
jae
add
clc
imul
clc
je
add
call
add
add
lock
je
or
clc
pop
lods
mov
pop
cmp
test
mov
clc
int
add
fdiv
dec
mov
clc
shrl
push
adc
clc
clc
mov
pop
ss
add
das
test
mov
clc
add
adc
jp
cltd
in
pushf
xbegin
jbe
clc
test
clc
in
push
sbb
and
add
and
add
clc
sub
clc
scas
fwait
sar
iret
cwtl
ja
sahf
dec
icebp
cmp
test
clc
cmp
dec
stc
cmpsl
clc
add
add
clc
jb
add
je
clc
or
or
mov
add
sub
jnp
mov
lods
inc
clc
xor
mov
sub
or
sar
inc
add
aaa
jle
clc
sbb
add
adc
add
cli
and
add
push
add
xbegin
xchg
mov
inc
clc
jne
aam
xchg
cltd
xabort
push
cs
mov
data16
insb
sbb
add
dec
inc
clc
lock
mov
clc
and
add
cwtl
jp
dec
ss
add
sahf
mov
add
movsb
clc
push
in
fistps
popa
add
jnp
add
dec
sar
clc
cmp
dec
and
add
clc
ffree
clc
adc
add
jl
enter
clc
mov
add
notl
add
add
and
add
inc
add
cmp
add
sub
clc
add
lods
xchg
fisttps
ss
add
push
dec
scas
das
adc
movsb
clc
xor
add
out
push
xchg
jo
add
clc
fildll
clc
mov
or
pushf
pusha
add
mov
clc
mov
pushl
add
jecxz
xchg
test
push
pop
clc
adc
add
add
add
and
add
testb
xbegin
test
idivb
add
test
out
idiv
pop
clc
or
clc
mov
mov
add
cmp
aas
mov
je
clc
sti
sub
ljmp
pusha
add
rcll
adc
add
add
clc
in
push
clc
imulb
push
add
dec
stos
shlb
add
je
clc
lods
push
cmc
or
add
mov
clc
jns
mov
sub
jno
add
clc
fisubrl
data16
pop
push
add
faddl
clc
push
push
add
mov
add
mov
xchg
stos
dec
adc
add
jmp
enter
xor
add
dec
cmp
int3
dec
outsl
mov
clc
aas
ja
clc
imul
fs
mov
xor
insb
adc
dec
loopne
cld
sbb
clc
and
add
add
adc
add
add
jns
lods
dec
gs
test
hlt
in
ss
pop
bound
add
adc
add
jns
cmpsb
clc
dec
sar
jno
add
sub
add
bound
add
mul
clc
pop
mov
pop
mov
inc
add
mov
add
add
push
add
in
inc
add
mov
neg
iret
push
add
inc
clc
loopne
fisubs
add
and
add
scas
test
add
jbe
cmp
clc
mov
pop
fistpll
add
addr16
sbb
add
mov
cmp
jns
clc
loopne
cli
jns
int3
loopne
int
popa
add
xchg
outsl
xbegin
jmp
xlat
dec
mov
pusha
add
adc
add
push
add
add
push
loope
pop
and
jo
add
pop
pop
iret
jmp
clc
dec
push
add
cmp
jmp
push
jecxz
fs
mov
clc
cli
cmpsl
clc
movsl
clc
inc
add
mov
ret
out
inc
add
out
pop
test
dec
movsb
clc
sbb
mov
enter
imul
jo
add
adc
add
adc
add
xchg
sub
mov
fisubl
jmp
clc
hlt
cli
fidivrs
sbb
jle
clc
outsl
gs
cmp
add
add
in
xor
add
clc
adc
add
mov
add
add
popf
daa
clc
or
clc
cmp
imul
stos
adc
out
shlb
iret
stc
inc
clc
arpl
add
add
decl
pushf
sbb
or
cmp
add
mov
and
mov
push
add
mov
mov
clc
clc
push
add
pop
out
es
sbb
xor
add
add
clc
pop
clc
lret
gs
jnp
ret
mov
xlat
addr16
lret
mov
mov
clc
rorb
clc
imul
add
or
add
add
clc
call
inc
add
das
imul
out
cli
cli
or
xchg
loope
lcall
clc
mov
mov
pop
sar
push
xor
add
mov
icebp
xchg
cmp
clc
es
cmp
loope
rcrl
cwtl
cmpsl
clc
or
add
clc
faddl
clc
into
test
xor
add
add
mov
cwtl
lret
pop
or
push
out
adc
add
clc
jb
add
icebp
cmp
clc
push
jne
pop
cmp
mov
lods
add
add
add
add
pop
xchg
jl
lahf
mov
dec
loope
jo
add
add
jmp
push
add
push
push
mov
inc
add
cmp
xor
add
dec
cwtl
mov
clc
lods
cwtl
loop
mov
clc
aad
sbb
push
add
adc
add
stos
popf
shlb
add
outsb
enter
and
mov
mov
sbb
enter
add
or
clc
sbb
clc
pop
clc
inc
clc
cmp
jnp
cmp
clc
sbb
pop
sub
gs
sub
push
test
int3
add
add
xlat
test
jb
add
clc
daa
clc
sub
fidivrs
sar
and
pushf
jp
xor
add
clc
popf
mov
imul
add
movsb
clc
add
xor
add
sub
clc
and
add
clc
or
jne
add
jle
add
and
add
add
push
stc
jp
clc
clc
imul
add
fimuls
pop
xabort
add
xchg
int3
shrb
mov
in
loop
rorb
sti
mov
clc
mov
aaa
imul
jb
add
add
jno
add
clc
lcall
mov
and
add
add
dec
or
add
mov
clc
xabort
pop
mov
js
stos
adc
add
out
jb
add
xchg
push
add
std
sarb
fisubs
cs
or
incb
clc
sub
clc
xchg
pop
and
add
add
inc
add
dec
xabort
in
aad
das
rorb
push
mov
sahf
inc
add
cs
xchg
scas
add
add
mov
enter
pop
ss
clc
xchg
test
pop
sub
test
mov
clc
mov
clc
jle
enter
sbb
mov
add
clc
xchg
mull
clc
add
add
add
cltd
push
das
and
add
out
add
inc
add
ljmp
clc
or
clc
push
and
sahf
push
add
xchg
push
xor
add
add
and
dec
insl
sub
xchg
inc
clc
out
adc
mov
jo
add
push
add
decl
hlt
or
add
add
add
insb
xor
inc
add
hlt
pusha
add
xchg
movsb
clc
popa
add
dec
cmp
clc
cmpsb
clc
xchg
imul
mov
mov
cmp
paddq
add
aam
clc
sbb
inc
clc
lahf
mov
add
clc
and
add
adc
add
ds
clc
cwtl
fs
dec
std
fdecstp
std
cmp
sub
clc
adc
add
sbb
mov
clc
enter
ret
clc
sbb
add
add
xchg
arpl
add
and
add
daa
clc
or
jb
add
jecxz
push
mov
shll
adc
fs
sar
inc
add
mov
push
pop
clc
push
add
jo
add
clc
sbb
clc
je
xor
add
mov
mov
hlt
pop
push
push
clc
lea
dec
jae
add
or
in
enter
notb
push
add
push
mov
clc
mov
clc
std
push
add
mov
mov
clc
scas
xor
add
dec
cmpsb
clc
push
inc
clc
xchg
inc
add
adc
add
dec
jp
cmp
push
fsubrl
clc
push
add
jmp
clc
icebp
xor
add
es
clc
imul
clc
mov
add
pop
clc
pop
clc
mov
clc
out
stos
add
xabort
lret
push
pop
ds
add
out
setp
add
stos
movsl
clc
enter
imul
add
rcrl
pop
sub
cmp
mov
hlt
movsb
clc
jbe
dec
jnp
clc
push
fmul
push
movntq
out
or
lock
sub
clc
adc
add
add
rclb
add
xchg
sub
jg
clc
lods
push
add
int3
fmuls
mov
clc
cmp
test
inc
clc
and
add
enter
addr16
jmp
ds
repz
pop
fsubs
cmp
out
out
std
dec
mov
adc
add
add
cli
lock
add
sti
js
clc
add
add
add
add
aad
mov
clc
mov
add
mov
clc
lcall
add
add
mov
es
jne
gs
dec
xor
add
std
cltd
or
outsb
enter
clc
pop
or
add
dec
imul
gs
dec
jns
popf
ds
clc
mov
add
ret
clc
push
push
inc
add
push
in
popf
bound
add
xlat
inc
add
and
inc
add
inc
clc
xchg
nop
scas
fcoms
add
mov
mov
add
and
xchg
ret
clc
xchg
jbe
ss
add
add
mov
sbb
flds
add
and
jle
clc
cmp
add
add
clc
mov
pop
paddb
add
clc
aas
ds
mov
add
add
add
add
clc
mov
add
and
add
clc
mov
cs
enter
pop
movsb
clc
aaa
cmp
pusha
add
stos
insl
and
loopne
popa
add
and
add
add
and
add
add
dec
cmp
sub
adc
add
xor
add
pop
jg
clc
imul
add
add
add
cmp
add
gs
addr16
imul
mov
clc
dec
frstor
xor
add
jno
add
mov
lock
in
add
mov
gs
dec
cmpsb
clc
lea
pop
clc
xchg
pop
out
es
and
add
sar
add
push
jno
add
add
add
add
sarb
cmp
xlat
test
mov
dec
mov
cmp
clc
loop
and
add
xchg
stc
pop
xor
cmp
inc
clc
or
mov
pop
sbb
clc
cmp
and
mov
stc
test
loope
clc
hlt
mov
sub
jle
xchg
in
cli
stos
lods
rcll
add
int3
push
pop
push
inc
clc
jbe
popa
add
jb
add
cs
clc
xor
add
mov
clc
stc
xor
add
add
ss
add
iret
outsl
mov
and
add
clc
mov
int3
enter
es
push
outsl
add
add
clc
popf
insb
mov
add
xabort
add
insl
insl
xbegin
clc
mov
scas
rolb
popa
add
fwait
dec
pop
xor
add
fisttps
add
sbb
mov
or
clc
test
cltd
mov
scas
or
cmp
aas
into
aad
xor
add
ss
daa
clc
gs
adc
add
jle
add
jle
dec
cmp
xchg
cmp
pop
daa
clc
sbb
inc
clc
repz
mov
ret
jnp
data16
es
xlat
mov
outsl
add
add
add
push
add
sub
ret
clc
sahf
cmp
imul
sub
add
add
add
pop
leave
repnz
addr16
arpl
add
add
jbe
cs
pop
mov
xor
add
clc
data16
xor
and
add
add
xchg
dec
push
mov
pop
rcll
clc
imul
clc
xor
add
add
add
imul
xchg
push
add
aad
lock
adc
add
stc
pop
in
lods
add
xchg
and
jbe
inc
add
push
add
mov
push
add
fdivr
jle
aaa
push
clc
and
add
loop
nop
nop
lahf
mov
repnz
add
mov
aas
in
jg
lret
push
sub
je
sub
add
roll
dec
ja
enter
add
aam
mov
cwtl
jg
add
xchg
sub
std
xor
add
scas
jne
mov
clc
inc
clc
push
stc
call
clc
jne
sub
sbb
push
cmpsb
clc
cmp
scas
fwait
sbb
add
mov
xlat
fcmove
dec
dec
mov
insl
and
popa
add
sar
ficoms
movsb
clc
lea
clc
leave
xabort
add
add
ljmp
bound
add
clc
cld
push
mov
ja
mov
clc
adc
fsubl
add
add
and
add
add
sub
jns
clc
leave
adc
clc
pop
ret
clc
or
add
mov
clc
daa
clc
insb
mov
clc
or
add
aam
clc
out
sar
js
lods
cmp
clc
hlt
adc
jnp
inc
clc
mov
pop
clc
push
add
push
add
movsl
clc
pop
push
adc
add
clc
or
dec
dec
fs
push
add
inc
clc
aad
clc
incl
mov
or
mov
add
fs
pop
sbb
cmp
push
dec
shl
mov
adc
add
clc
fwait
lret
add
xchg
mov
lcall
add
clc
movsl
clc
xchg
cmp
add
ss
lret
add
mov
pop
movsl
clc
popa
add
pop
mov
clc
je
sbb
fidivrl
xbegin
add
xchg
pop
out
push
and
sar
ss
clc
in
mov
clc
xor
clc
sar
clc
cmc
push
add
clc
mov
clc
in
in
mov
dec
scas
insl
add
add
clc
jnp
inc
clc
push
jmp
adc
add
clc
mov
shlb
add
inc
clc
test
cmp
add
add
and
pusha
add
mov
add
adc
add
stc
icebp
cltd
push
clc
loopne
inc
add
push
scas
ret
clc
push
filds
test
mov
inc
clc
jbe
in
loopne
sti
cmp
clc
sub
mov
add
out
push
ja
clc
daa
clc
mov
add
add
jne
clc
rolb
add
clc
lahf
cmp
mov
xor
add
ljmp
clc
adc
add
stos
aad
xchg
cmpsl
clc
push
add
arpl
add
mov
imul
or
add
push
mov
popa
add
insl
add
add
sub
clc
mov
out
fxtract
nop
stos
js
mov
add
pop
push
pushl
add
repz
addr16
das
xbegin
add
inc
add
sti
and
and
add
add
jg
add
or
add
inc
clc
enter
cmpsl
clc
sahf
xchg
add
add
clc
xor
add
ficompl
clc
int
xchg
scas
adc
add
pushl
ljmp
and
add
clc
test
das
hlt
mov
add
xor
fists
add
clc
pushf
pop
pop
jo
add
add
lcall
pushf
or
sar
mov
add
add
mov
add
pop
sbb
je
clc
jnp
int
aas
push
add
pop
cltd
outsb
mov
clc
pop
bswap
jl
movsl
clc
and
add
test
add
es
and
clc
aaa
stc
jle
cld
cld
cmp
lods
sar
inc
add
call
mov
xchg
insb
cmp
add
mov
jne
fildl
add
scas
aaa
sar
push
stos
cmp
lock
and
ljmp
add
lods
adc
add
cwtl
shl
jp
sub
clc
push
call
out
mov
push
popa
add
fdivrs
clc
int3
daa
clc
popf
xor
add
add
out
xor
add
clc
repz
dec
push
add
dec
push
add
jp
add
popa
add
mov
add
scas
mov
clc
push
dec
jge
dec
mov
mov
push
sub
ss
clc
jbe
aas
enter
clc
fstpt
add
and
test
imul
clc
sahf
test
add
add
dec
jb
add
add
mov
clc
jge
add
or
testb
add
sbb
enter
clc
rcl
loopne
cltd
loopne
sub
popf
lock
clc
xlat
add
add
add
xchg
inc
clc
fmul
cmp
cmp
push
add
out
push
add
or
shll
clc
add
add
add
add
out
in
test
push
add
out
mov
outsl
loop
pop
repnz
cli
icebp
insb
repnz
dec
mov
movsl
clc
xor
add
add
sbb
imul
add
lods
mov
jecxz
cmp
push
xor
add
dec
push
pop
das
pop
clc
fidivrl
adc
add
add
out
adc
add
clc
sahf
cmp
clc
cmp
data16
inc
clc
fs
clc
cmp
clc
scas
fnsave
and
add
data16
push
jnp
or
pop
xor
add
sar
clc
cmpsl
clc
mov
fcomps
xchg
jge
jecxz
mov
jno
add
add
cmp
add
lods
div
enter
popf
aaa
test
sar
add
ret
cmpsb
clc
xchg
jb
add
add
adc
add
add
jp
inc
add
out
or
dec
cmpsb
clc
pop
ret
clc
adc
add
lret
ljmp
pusha
add
sub
add
add
jns
sahf
xor
clc
or
add
add
add
lock
jge
add
add
xchg
in
inc
add
fimull
daa
clc
lods
ds
add
pop
clc
lahf
into
mov
mov
add
movsb
clc
cmp
adc
add
xor
push
cmp
push
add
addr16
movsb
clc
or
push
jne
clc
or
mov
jo
add
add
inc
add
add
jecxz
and
mov
dec
push
add
pop
xchg
mov
enter
pop
ss
movsb
clc
and
add
mov
clc
loopne
cmc
fs
sub
add
add
hlt
and
add
xchg
fnsave
add
dec
and
add
gs
inc
add
insb
jnp
and
add
clc
cs
add
outsl
inc
clc
or
leave
addr16
sbb
sbb
add
mov
xchg
inc
clc
xchg
test
clc
push
clc
add
add
mov
clc
inc
add
pop
fucomp
iret
adc
add
cmp
clc
movsl
clc
xor
mov
lods
jg
add
pop
hlt
xchg
jne
cmp
inc
clc
xlat
int3
out
sar
adc
add
clc
loope
mov
mov
add
add
cmp
clc
lcall
adc
add
es
cmp
push
clc
sar
mov
cmp
fistpl
outsl
mov
add
clc
sarb
xor
add
add
frstor
loop
jp
clc
or
add
lret
cmp
lock
clc
int
push
add
fs
lods
mov
add
add
clc
shl
clc
jno
add
clc
fidivl
add
mov
data16
fldenv
add
cmp
iret
stos
sbb
inc
add
out
and
add
icebp
add
add
scas
xchg
ret
add
pop
or
aas
xor
add
cmpsl
clc
and
add
popa
add
push
sbb
cmp
add
addr16
cmp
add
jp
clc
fsubrp
scas
mov
add
popf
clc
imul
sbb
clc
aam
jecxz
adc
add
add
fwait
pusha
add
sub
lock
outsl
das
stos
push
loopne
js
or
or
and
add
xchg
mov
sub
push
rclb
add
add
scas
loop
sti
jne
clc
sbb
sar
sbb
pop
jp
add
xchg
cld
imul
sahf
xchg
in
jmp
insl
xchg
pop
jnp
add
fcmovnb
clc
jge
clc
add
add
sbb
outsl
sar
and
add
out
sub
dec
xchg
adc
add
cmp
ficoml
add
fwait
iret
pop
clc
outsb
dec
ret
clc
aam
ret
clc
pop
mov
add
hlt
sar
dec
insb
mov
sti
dec
adc
add
insb
jecxz,pn
cmpsl
clc
xchg
inc
clc
fstps
mov
ficoml
add
pushl
add
clc
lahf
loope
add
mov
clc
dec
dec
test
add
add
add
clc
mov
mov
loope
fisubrl
adc
clc
push
add
scas
arpl
add
clc
lods
jle
ss
xchg
dec
inc
add
xor
add
popf
scas
pop
sar
push
add
pop
je
jmp
push
add
mov
clc
dec
lret
aaa
test
or
add
bound
add
fdecstp
push
cmp
add
mov
mov
adc
add
repnz
xchg
xor
add
cmp
inc
add
and
add
fdivs
push
add
push
sub
add
clc
clc
iret
mov
mov
cs
push
clc
sbb
add
loop
sub
or
imul
das
mov
jmp
clc
rolb
add
fs
addr16
inc
add
clc
push
add
or
pop
mov
clc
vcvtdq2ps
push
add
lods
sub
test
add
add
xchg
daa
clc
movlps
add
scas
fdivr
xchg
ds
rclb
add
jl
cmp
add
add
mov
push
push
out
cmp
mov
data16
push
add
dec
repz
push
or
add
sbb
or
inc
clc
into
pop
sbb
and
add
cmp
clc
pop
xchg
or
push
add
jg
xchg
pop
dec
jge
cli
add
add
add
add
push
cmp
ficompl
clc
arpl
add
fdivs
or
clc
adc
xor
clc
scas
pop
mov
stos
scas
int3
sbb
jb
add
data16
adc
add
cmc
and
add
clc
sbb
clc
cmp
rcrl
pushf
cmp
jb,pn
add
loopne
pop
mov
clc
addr16
nop
ljmp
xchg
dec
dec
inc
add
ja
cmc
jbe
ljmp
jge
sub
add
mull
clc
aam
clc
or
add
lods
addr16
or
inc
clc
lcall
push
adc
add
fwait
pop
jp
add
pop
clc
dec
clc
gs
or
clc
dec
jecxz
inc
clc
adc
fstpl
clc
pop
outsb
bound
add
add
loope
sub
repnz
clc
push
add
xabort
cmp
clc
das
inc
clc
ret
clc
loopne
or
jbe
clc
pop
xor
add
clc
or
clc
mov
add
push
cltd
or
adc
add
js
clc
filds
ret
jbe
daa
clc
inc
add
cmp
pop
ror
inc
add
repz
and
add
rcrb
sub
dec
fidivrs
add
call
mov
jmp
add
outsb
scas
test
xbegin
add
aas
xchg
mov
add
popa
add
push
clc
cmp
push
add
sub
and
bound
add
pop
xchg
loope
dec
cmp
fmuls
or
cmp
and
pushf
sub
clc
fs
ret
clc
inc
add
pop
clc
sbb
clc
mov
and
jns
in
arpl
add
add
test
jbe
clc
xchg
dec
mov
lods
adc
add
or
add
xor
add
clc
adc
add
pop
imul
fsubrl
inc
clc
jae
add
xchg
dec
jp
fwait
aaa
movsl
clc
pop
testb
adc
clc
xbegin
push
mov
sbb
add
clc
or
pusha
add
ljmp
jg
add
mov
int
movsb
clc
int3
jbe
xchg
xchg
mov
lret
int
inc
clc
push
mov
add
fisubs
repz
negl
and
add
clc
mov
inc
clc
and
add
mov
roll
add
lahf
mov
and
add
clc
adc
mov
sub
pop
icebp
aaa
vucomiss
clc
testl
add
gs
std
mov
add
add
mov
add
cmpsl
clc
jb
add
add
clc
push
or
fisttps
mov
f2xm1
mov
inc
add
jg
pop
and
add
xchg
daa
clc
xchg
pop
clc
mov
dec
in
dec
xor
clc
jb
add
add
loope
xor
clc
sar
fldt
mov
push
mov
fldcw
add
outsb
cli
sahf
cmp
jo
add
mov
mov
cmp
cmp
pusha
add
cmp
add
jge
push
add
xchg
add
add
add
xor
add
outsl
repnz
iret
jo
add
lea
add
push
add
inc
add
out
ficoms
add
das
pop
sbb
add
lods
push
add
xabort
hlt
sar
pop
sub
mov
das
fldcw
cmp
clc
mov
lea
fcoml
add
dec
lahf
inc
clc
cmp
or
jo
add
sub
jno
add
sbb
add
in
jl
dec
cmp
sbb
jnp
sbb
pushl
cmp
add
into
popa
add
pop
mov
xbegin
adc
add
mov
jle
icebp
jbe
outsb
addr16
pop
ret
clc
cmp
add
repnz
sub
xor
add
add
add
stos
push
add
adc
add
pop
fdivs
add
scas
cli
mov
add
add
xchg
pop
clc
data16
xor
add
cld
test
clc
data16
sbb
xchg
mov
mov
clc
sahf
pop
dec
mov
mov
mov
lods
and
add
xor
add
movsb
clc
insb
mov
add
add
pop
outsl
cs
xor
add
and
add
clc
in
shrb
add
add
jb
add
insb
jne
add
mov
daa
clc
clc
jp
clc
inc
clc
pusha
add
dec
setb
clc
mov
clc
sub
clc
or
mov
jmp
sub
add
inc
add
and
add
fisttps
jo
add
add
pop
pop
push
clc
add
add
add
inc
add
lods
into
mov
add
sub
fwait
sbb
cld
jl
mov
clc
sub
outsl
iret
jne
sbb
mov
clc
mov
lahf
push
daa
clc
pusha
add
fsqrt
pop
clc
insl
inc
clc
push
jne
clc
cmp
inc
add
sar
jp
clc
sahf
mov
clc
test
cmp
pop
sbb
clc
popa
add
mov
inc
add
cmp
clc
jmp
addr16
add
add
add
cmpsl
clc
cmp
out
mov
add
jp
xor
mov
pusha
add
cmp
add
out
cmpsl
clc
ja
add
cmp
cmc
scas
cmp
jle
clc
incl
clc
out
pop
movsb
clc
dec
jbe
clc
dec
lods
lret
pop
push
pop
iret
adc
add
clc
repz
sti
add
jne
clc
jle
fdivrs
push
mulb
dec
fdivrl
sbb
das
mov
clc
sar
jae
add
add
adc
add
sub
clc
xchg
lcall
add
sub
aam
cmp
pusha
add
xabort
mov
clc
adc
test
loop
mov
jg
add
xchg
mov
add
add
mov
sub
clc
mov
clc
nop
sub
cld
mov
aam
out
insb
sbb
add
xchg
outsb
or
or
daa
clc
xchg
insb
cmpsb
clc
dec
loopne
jbe
xabort
jmp
add
fsubrl
clc
jecxz
arpl
add
xor
clc
lods
adc
xchg
cltd
and
mov
push
clc
aas
je
clc
lahf
xor
add
add
cmp
clc
mov
icebp
sahf
push
push
pop
or
push
xor
add
bound
add
clc
sub
dec
xchg
cltd
es
mov
add
mov
div
jno
add
add
mov
add
add
pop
clc
loope
mov
mov
add
jg
clc
ds
sbb
and
add
lcall
or
add
clc
loop
mov
pop
xor
add
shrl
pop
dec
cmp
mov
clc
pop
clc
xor
add
lock
xchg
movsb
clc
push
clc
lock
add
pop
pop
adc
add
insb
sahf
sti
rcll
add
add
add
popf
push
loop
dec
fldcw
clc
mov
add
addr16
add
add
repnz
daa
clc
jns
sbb
clc
jp
add
pop
pop
sar
push
clc
dec
sbb
add
jo
add
push
add
mov
int
push
sti
fistpl
cltd
sbb
clc
divb
add
icebp
sub
add
pop
movsb
clc
shrb
insl
sti
fcmovne
sub
clc
mov
stos
sbb
push
add
loope
ds
rcrl
js
loopne
stos
cltd
inc
add
mov
add
nop
sub
shr
lcall
pop
pop
xchg
js
test
add
stc
aad
aaa
mov
add
mov
clc
inc
clc
sub
frstor
jl
test
push
sar
xbegin
cmp
clc
cmp
clc
dec
pop
inc
clc
lcall
push
cmp
clc
vunpcklps
out
in
jp
clc
or
add
add
adc
add
clc
pop
dec
dec
add
add
clc
pop
clc
call
xlat
ss
cmp
clc
lods
inc
clc
push
clc
leave
push
add
mov
pop
sbb
sar
clc
scas
dec
hlt
and
icebp
pusha
add
jne
and
add
jno
add
dec
and
cltd
leave
or
cli
std
mov
test
clc
lcall
xchg
xabort
add
js
shl
cwtl
and
add
mov
fcompl
out
cld
cmp
repz
inc
clc
xchg
mov
mov
add
add
push
jg
jno
add
stos
mov
clc
ljmp
cltd
int
in
scas
mov
add
mov
add
push
sahf
mov
dec
sahf
push
lret
mov
sub
cmp
add
loop
insl
push
clc
ljmp
mov
add
ljmp
xchg
mov
mov
out
loope
and
add
add
clc
bound
add
xor
add
add
fdivp
call
mov
clc
dec
fdivr
cmp
clc
lcall
jp
movsl
clc
ficoms
sub
adc
outsl
sbb
stos
stc
lods
jne
add
mov
add
add
je
dec
adc
clc
nop
xchg
sbb
lahf
fsubs
add
clc
pop
mov
aaa
sub
mov
xchg
insl
push
add
incl
or
add
jno
add
xor
add
clc
xchg
fs
sub
clc
iret
add
add
add
rclb
add
lahf
cmc
jnp
clc
out
test
jecxz
outsb
cmp
push
out
outsb
je
cltd
out
sub
adc
xchg
fcompl
pop
ds
clc
dec
loopne
jl
jmp
clc
movsl
clc
outsl
popl
clc
or
gs
pop
pop
xchg
mov
mov
add
pop
mov
add
add
clc
adc
add
sbb
fdivrl
add
imul
inc
clc
scas
cld
aas
enter
add
push
add
das
test
data16
in
js
clc
dec
test
add
add
mov
push
add
sbb
clc
mov
cmp
add
es
jns
clc
mov
leave
cld
push
add
popa
add
pop
jecxz
lret
je
out
add
add
add
clc
imul
jne
sar
clc
push
add
xchg
mov
add
mov
add
pop
sub
jae
add
add
scas
lea
add
pusha
add
mov
xor
add
in
lock
mov
add
outsl
fisubs
arpl
add
cmp
clc
cmp
clc
add
add
repnz
stc
js
xchg
ss
clc
sub
xchg
push
dec
mov
xor
add
lea
add
mov
clc
int3
mov
test
jne
add
cwtl
adc
sub
sahf
inc
add
xchg
dec
jae
add
xchg
adc
add
add
dec
sar
or
sub
aaa
lret
pop
loop
mov
lret
inc
clc
cmp
clc
in
cmp
clc
mov
int
add
xor
add
dec
daa
clc
sbb
sbb
ds
out
jbe
scas
arpl
add
test
xchg
adc
add
ss
clc
or
jo
add
ss
data16
imul
dec
sahf
in
popf
pop
data16
mov
ljmp
insb
fisubs
inc
add
clc
lahf
and
add
cs
popa
add
jl
sub
clc
mov
add
popf
adc
add
shll
sub
mov
add
jecxz
pop
mov
sar
jns
clc
mov
xlat
and
add
adc
add
add
in
cmpsl
clc
add
add
std
out
lods
lret
pop
jge
add
mov
jne
push
add
cmp
sbb
int
and
add
add
std
js
ljmp
out
dec
push
add
dec
fs
xrelease
mov
testb
adc
add
add
add
add
cmp
mov
jle
xor
add
aaa
mov
fidivl
aas
in
cmpsb
clc
jno
add
push
add
out
push
add
cs
clc
mov
dec
xchg
pop
lea
clc
jbe
sub
lcall
xor
into
add
arpl
add
add
test
aam
mov
cs
jp
jb
add
sbb
cwtl
xlat
imul
add
add
pop
clc
xor
pushf
fcomip
int3
out
xchg
jp
ret
xchg
aaa
dec
cld
or
loopne
lods
push
add
xbegin
clc
loope,pt
add
add
fs
or
clc
xchg
jb
add
clc
lret
jecxz
testb
push
jne
add
mov
pop
aaa
dec
add
add
clc
ret
mov
and
mov
clc
sub
jae
add
jp
mov
cmp
cmp
mov
clc
stos
push
clc
or
clc
in
push
leave
push
dec
xor
add
fwait
cli
add
push
lods
loope
jnp
mov
mov
clc
xor
jae
add
add
add
data16
mov
push
mov
xor
add
add
or
jns
clc
add
add
clc
mov
clc
xabort
out
mov
or
cltd
in
add
add
clc
es
je
sbb
dec
push
clc
sbb
clc
addr16
dec
lret
clc
in
es
mov
dec
push
add
inc
clc
icebp
out
out
and
mov
add
ds
jg
mov
fdivrl
pop
notl
add
push
jg
cmc
in
push
lret
add
add
add
xchg
loopne
mov
mov
fs
sub
aas
jbe
jmp
insb
in
stc
jp
jl
or
clc
sbb
das
sub
clc
popf
inc
add
cmp
or
clc
jbe
vcvtps2pd
shlb
add
filds
in
jmp
mov
das
jle
clc
or
dec
push
mov
clc
movsl
clc
inc
clc
aam
imul
mov
add
jae
add
add
in
inc
clc
jge
clc
jmp
dec
push
and
dec
xor
mov
sub
xbegin
clc
pop
je
roll
jo
add
xchg
xor
add
add
pop
mov
testb
arpl
add
clc
fsubl
add
fwait
in
inc
add
aaa
inc
clc
iret
scas
add
add
push
add
pop
decl
mov
cmp
scas
scas
inc
add
jle
jo
add
or
add
pop
cmpsl
clc
xchg
jno
add
xchg
sbb
add
loopne
or
int3
ja
cmp
xchg
mov
cmp
clc
in
jno
add
add
fstl
push
xchg
in
lret
mov
add
adc
lock
nop
push
push
pop
xchg
mov
js
add
loopne
cmp
mov
clc
mov
push
lahf
in
pop
cld
mov
add
rcr
divl
mov
push
add
popf
mov
clc
mov
xor
add
bound
add
clc
push
cmpsl
clc
or
clc
and
add
clc
mov
push
xor
add
clc
pop
clc
xor
sar
sbb
mov
sbb
or
repnz
pop
test
inc
add
adc
mov
pop
sub
add
je
mov
out
xor
add
sbb
xchg
mov
and
and
add
pusha
add
es
pop
cmp
cld
xchg
adc
push
dec
pop
jbe
cmc
outsl
jp
inc
clc
bound
add
add
push
xor
add
cmp
clc
gs
pop
add
xchg
mov
and
clc
cmp
iret
div
or
mov
push
add
lret
pushf
mov
std
lods
in
or
clc
cltd
jmp
jns
pushf
aas
mov
out
mov
fwait
pop
mov
add
lods
ljmp
xchg
inc
clc
mov
fcmovnu
xchg
aas
lock
pop
imul
mov
add
arpl
add
clc
sahf
add
fidivrl
mov
or
mov
ja
fsubrp
pushf
push
add
sbb
pop
shll
add
mov
clc
xor
add
ret
add
add
add
mov
push
pop
test
jge
add
xor
add
jne
or
aad
add
std
divps
add
inc
clc
and
add
hlt
mov
es
pushf
data16
xbegin
lahf
lret
pop
inc
add
mov
add
pop
clc
jne
inc
clc
lret
add
test
jno
add
add
adc
add
add
add
insb
inc
clc
out
rcll
add
cmp
in
inc
add
mov
clc
ret
out
cmp
clc
sub
add
mov
clc
pop
clc
add
add
dec
fwait
stos
pop
test
mov
pop
dec
mov
jmp
add
int
mov
in
add
push
add
enter
out
and
add
es
std
lret
sub
xor
add
addr16
cmpsb
clc
mov
lcall
clc
inc
clc
ljmp
clc
aam
fiaddl
iret
cmp
clc
test
add
and
add
clc
sbb
add
push
or
add
cli
xchg
addr16
pushf
lahf
sub
jne
ret
clc
pop
mov
es
insl
push
xchg
popf
adc
mov
add
sbb
cmp
add
sub
outsl
mov
add
stos
leave
jmp
add
fwait
add
add
lock
sub
clc
test
jge
push
mov
add
jnp
clc
inc
clc
popf
test
jnp
add
add
std
insb
aaa
hlt
lret
jg
lahf
lods
rcrb
leave
mov
mov
enter
and
add
clc
mov
add
clc
pop
jecxz
inc
clc
jno
add
sti
fcoms
mov
dec
in
sbb
ds
nop
insl
dec
call
clc
lods
int3
mov
loop
clc
mov
or
clc
in
rorl
clc
pop
sbb
out
xor
add
mov
clc
xchg
jnp
xlat
push
insb
lock
add
adc
pop
repz
adc
add
jbe
clc
cli
mov
inc
add
shll
clc
in
pextrw
clc
pop
sti
mov
jecxz
pop
dec
aaa
outsl
mov
out
ljmp
aam
mov
clc
dec
js
xchg
adc
mov
mov
or
icebp
addr16
xabort
aad
clc
sub
push
sub
jg
sbb
add
clc
mov
jo
add
sub
gs
xor
mov
add
push
add
adc
cmp
add
dec
mov
mov
repnz
and
dec
jno
add
push
add
xchg
repz
add
mov
xchg
ret
clc
movsb
clc
fptan
rcl
js
enter
xchg
in
mov
add
add
adc
xchg
rclb
add
add
jge
icebp
repnz
clc
ss
inc
clc
fucomi
pop
clc
repnz
cmp
and
add
mov
rdpmc
add
mov
add
pop
cwtl
into
xchg
pop
inc
clc
push
pop
xlat
lock
add
pop
sub
int3
dec
push
mov
cmp
clc
xchg
xchg
jns
pop
addr16
test
clc
xchg
int3
sar
clc
call
add
ljmp
cmp
clc
fldenv
add
ds
add
xchg
mov
add
sbb
xlat
dec
mov
jbe
std
pop
jns
cmp
add
in
mov
bound
add
add
or
clc
int3
jbe
clc
int
dec
sub
int
popa
add
cmp
add
cmp
fneni(8087
clc
xlat
repz
add
or
clc
test
add
add
movsl
clc
es
gs
jb
add
imul
add
movsl
clc
in
outsl
decb
jb
add
pop
mov
add
add
add
dec
lahf
loopne
push
clc
imul
fwait
push
add
xbegin
insl
add
add
je
outsl
mov
jb
add
loop
adc
clc
test
push
repz
sub
lock
cmp
add
ret
clc
mov
mov
stos
cmpsb
clc
cli
scas
lods
cli
add
add
add
mov
inc
add
lcall
add
mov
nop
cmp
add
dec
cmp
clc
out
pusha
add
sbb
pushf
dec
sarl
add
pop
and
add
out
ret
clc
nop
cmp
clc
add
jnp
clc
push
mov
jne
and
aas
lea
add
add
mov
nop
ljmp
xchg
pop
cmp
or
clc
out
or
clc
jb
add
add
mov
je
lret
push
push
mov
add
mov
ds
add
push
sub
add
mov
add
fcoms
add
mov
cmp
sub
pusha
add
inc
clc
inc
clc
or
add
popa
add
push
add
hlt
call
jecxz
jb
add
mov
mov
clc
dec
fs
lret
jb
add
lods
sub
lods
fcompl
clc
sbb
xchg
sub
dec
or
xor
add
es
fldenv
clc
adc
add
clc
jmp
add
add
es
popf
cmp
aaa
pusha
add
mov
add
push
cwtl
xor
xchg
xchg
or
aad
sarl
iret
lahf
stos
fcompl
or
cmp
mov
lret
add
mov
pop
sbb
sar
add
popa
add
cmp
jge
mov
add
cmp
push
sbb
adc
push
xlat
jmp
jns
add
xchg
sar
loope
popa
add
dec
popf
pushf
lahf
cmp
clc
into
mov
add
clc
xchg
pop
sbb
push
aad
shrb
push
add
cwtl
cmpsl
clc
pop
dec
mov
imul
add
daa
clc
pop
push
add
pusha
add
mov
insb
aas
sub
clc
or
test
add
hlt
lods
mov
sbb
add
clc
int3
xabort
push
and
add
add
cmp
clc
inc
add
iret
repnz
and
add
or
addr16
fwait
ret
add
adc
add
add
jno
add
fsts
or
test
add
add
bound
add
cmp
clc
sti
out
sbb
inc
clc
data16
sti
jp
int3
mov
bsf
dec
sbb
and
add
jbe
stos
out
sub
sbb
add
and
pop
mov
cmp
popf
movsl
clc
adc
add
clc
pop
fbstp
and
add
xor
add
fcomp
repnz
movsl
clc
sbb
clc
mov
add
test
clc
addr16
mov
add
test
cmp
push
lret
stos
in
repnz
add
or
mov
clc
cmp
add
xbegin
clc
xor
clc
pop
clc
in
adc
add
ret
clc
cltd
cmpsl
clc
sar
add
xbegin
add
movsl
clc
mov
add
sar
out
pushf
cmp
clc
cmp
iret
scas
stc
ss
cmp
iret
es
stc
cmp
ret
clc
hlt
sar
jno
add
clc
int
bound
add
add
add
add
add
clc
xabort
rolb
clc
jnp
cli
dec
movsl
clc
cwtl
xor
add
clc
sbb
push
add
add
or
cmp
add
negl
push
mov
repnz
out
sbb
fidivs
or
jecxz
sbb
clc
test
add
push
sub
cmp
rclb
inc
clc
mov
add
jge
sbb
clc
mov
add
dec
stos
jne
xor
add
xabort
add
cli
cmp
clc
dec
inc
add
push
clc
stos
mov
clc
imul
clc
lcall
fs
out
inc
add
push
add
and
add
clc
ret
clc
cmp
add
add
xchg
gs
flds
int3
lret
add
ret
clc
movsl
clc
fnstcw
in
jnp
mov
pop
cmp
in
in
call
fisubrs
jl
add
cmp
jae
add
xor
add
pop
inc
clc
ret
clc
test
xchg
push
add
adc
add
add
ljmp
add
mov
sbb
clc
fcomps
add
lea
insl
push
clc
add
lahf
cmpsb
clc
adc
add
jg
test
clc
mov
add
pop
xchg
sbb
clc
ss
add
clc
add
add
mov
xor
addr16
ja
stos
iret
aas
data16
cld
cld
cmp
add
mov
cli
int3
mov
clc
scas
xor
clc
fwait
push
hlt
cltd
mov
or
cmp
in
loopne
aaa
loopne
shlb
add
or
lock
in
jo
add
jge
imul
pop
enter
dec
imul
clc
or
add
inc
add
daa
clc
and
add
stc
outsb
add
add
xchg
jmp
xor
add
push
clc
adc
add
mov
add
clc
push
clc
xor
mov
leave
jmp
clc
pop
mov
fidivs
add
push
cmp
add
inc
clc
repnz
xlat
stos
sbb
enter
lahf
cmpsb
clc
jecxz
into
push
call
and
add
xchg
insl
jne
clc
ljmp
pop
dec
pop
push
ret
clc
loope
push
add
xchg
into
test
mov
jns
or
sti
out
xbegin
mov
clc
ficomps
lret
mov
inc
clc
or
xor
add
bound
add
cmpsl
clc
push
cmpsb
clc
sub
repz
add
add
xor
add
mov
jae
add
loopne
pop
imull
xabort
add
out
cmp
add
bound
add
xor
arpl
add
clc
push
fwait
mov
xabort
movsb
clc
outsl
push
ljmp
dec
dec
int
dec
dec
cli
mov
mov
or
xchg
push
int3
jge
sbb
xbegin
sub
clc
ret
add
mov
clc
sub
mulb
cld
xlat
cmp
add
cmp
clc
arpl
add
add
shr
sbb
add
or
add
inc
add
push
add
pop
test
push
fwait
pop
xor
mov
mov
pop
clc
fs
mov
repnz
or
jb
add
mov
add
add
xchg
xor
add
clc
lock
pushf
lret
add
xchg
je
jne
daa
clc
loope
fs
repz
fstpt
inc
add
gs
rorb
inc
clc
into
xabort
js
xchg
sbb
loope
inc
add
fcomps
rcr
inc
add
cmp
add
clc
mov
ret
clc
ljmp
frstor
add
sub
clc
sbb
adc
add
add
clc
in
sbb
ret
scas
inc
add
data16
lods
mov
and
add
clc
in
loopne
fldenv
add
ljmp
add
testb
cmp
sub
out
xor
add
insl
and
add
add
ucomiss
mov
jb
add
add
imul
pop
pop
insb
insl
pushf
scas
add
xor
add
clc
repnz
gs
dec
mov
xchg
push
clc
dec
sub
js
push
clc
ja
cmp
mov
xchg
aas
fmul
clc
movsl
clc
mov
mov
xchg
sbb
add
imul
cmp
fwait
push
sar
clc
push
add
mov
loop
pop
clc
sbb
add
push
mov
cwtl
xor
add
fs
pop
sub
add
fisubs
add
xlat
sbb
enter
add
adc
add
cmp
push
add
outsb
divl
scas
xchg
xor
add
lea
push
add
int
cmp
add
add
add
je
clc
fstpl
xor
cmp
mov
pop
mov
add
shll
add
mov
mov
jno
add
push
hlt
xor
add
xor
add
popf
insb
cwtl
das
xor
add
jb
add
inc
clc
lcall
clc
mov
clc
jg,pn
clc
jmp
xchg
mov
add
dec
xlat
outsb
fnsave
pop
testb
imul
and
pop
mov
push
add
add
das
pop
or
ja
clc
pop
xabort
xor
add
xor
add
xchg
inc
clc
cmp
icebp
repnz
add
push
cmpsl
clc
push
cltd
xchg
inc
clc
sub
mov
jle
fisubrl
mov
inc
clc
je
mov
jae
add
clc
cltd
xchg
mov
clc
repnz
clc
dec
call
out
sahf
add
add
adc
add
or
add
jg
cld
jae
add
push
add
sbb
mov
add
add
frstor
inc
clc
jle
mov
and
add
jo
add
clc
fcmovu
add
add
xbegin
pop
clc
mov
mov
clc
cmp
clc
add
add
mov
push
dec
sub
add
mov
imul
clc
repz
clc
xchg
int
jecxz
push
hlt
in
in
clc
pusha
add
mov
stc
ss
hlt
int
add
dec
push
cmp
add
daa
clc
inc
add
xabort
ljmp
cmp
xchg
cmp
test
scas
js
clc
sbb
cmc
jb
add
lret
bound
add
aas
or
clc
dec
add
add
cmp
adc
clc
mov
fistpl
lahf
add
add
arpl
add
jmp
clc
int3
test
adc
add
add
fwait
push
add
inc
clc
inc
clc
in
cli
lret
ja
add
dec
or
xbegin
add
fcoms
clc
mov
mov
inc
clc
adc
add
add
cmp
repz
daa
clc
xlat
mov
add
shl
add
add
add
clc
cmp
clc
jbe
cmp
clc
xor
add
data16
aaa
push
xor
add
add
clc
sbb
cmp
add
fistl
add
idivb
inc
clc
sbb
clc
mov
add
popa
add
pop
clc
popa
add
dec
jnp
clc
cmpsl
clc
xor
add
add
add
clc
inc
clc
idivb
clc
test
repnz
incl
add
ja
clc
fmuls
into
inc
clc
xchg
adc
add
jb
add
add
cmp
ljmp
cmp
cmc
fadds
add
mov
sbb
add
add
add
repnz
cmp
clc
add
add
add
sub
nop
push
add
xor
cmp
jmp
clc
cmp
ja
fiaddl
inc
add
addr16
inc
clc
and
xor
add
inc
add
cmp
add
adc
add
imulb
shll
pcmpeqb
adc
add
pop
fldenv
clc
scas
int
xabort
jbe
add
add
add
pop
inc
add
pop
clc
popf
xor
clc
fidivrs
add
jl
ret
clc
hlt
std
sub
xabort
dec
shr
test
jne
hlt
xor
add
aas
jmp
clc
jbe
add
inc
add
popa
add
mov
clc
pop
mov
es
cmp
jle
clc
faddp
clc
pop
push
add
xor
add
dec
cmp
shll
clc
adc
add
clc
sub
aam
adc
or
adc
add
sahf
pop
sub
add
inc
clc
in
mov
cmp
xchg
test
test
bound
add
add
addr16
and
add
std
or
inc
clc
mov
clc
scas
push
leave
jbe
enter
xor
shrb
inc
clc
sbb
add
dec
int3
movsb
clc
loop
dec
mov
or
sar
shr
dec
jl
and
add
pop
iret
pushf
sbb
clc
sarl
mov
movsb
clc
pop
xor
add
inc
add
jle
clc
lahf
sahf
dec
insb
sub
sub
push
lret
clc
sbb
push
lock
movsb
clc
pop
cmp
add
outsl
loope
lret
out
xor
add
xchg
add
add
xchg
das
jae
add
add
pop
push
add
sbb
add
mov
add
mov
out
pop
inc
clc
popa
add
push
jp
add
clc
out
xchg
jmp
add
hlt
add
add
mov
clc
int3
xor
add
pusha
add
mov
clc
pop
or
add
std
mul
clc
shll
add
add
push
gs
jmp
jae
add
add
jl
clc
push
clc
test
cmp
add
pop
xchg
xchg
lret
inc
clc
push
add
cmp
add
sar
aas
pushf
sbb
push
add
inc
add
stos
adc
add
lret
adc
dec
mov
cmp
and
dec
mov
addr16
cmpsb
clc
fwait
pop
clc
sub
cmp
aam
jns
xor
or
in
clc
xor
add
or
add
bnd
clc
sub
in
jnp
push
add
add
fstl
pop
add
add
imul
add
add
xor
lret
sbb
clc
testb
stos
sarb
sbb
clc
fadd
clc
into
fs
push
outsl
push
std
in
testl
gs
mov
clc
cmc
es
dec
je
clc
and
add
clc
idivl
aaa
cmp
lock
js
add
push
imul
je,pt
clc
into
sub
clc
jg
ficoml
test
pop
clc
xabort
mov
clc
sbb
insb
cltd
imul
xor
add
sbb
add
movsb
clc
mov
pop
test
bound
add
pop
sub
data16
push
mov
clc
add
add
jo
add
into
and
clc
scas
jl
mov
push
push
clc
arpl
add
test
sub
xchg
pusha
add
daa
clc
fidivrl
imul
cmp
and
add
add
bound
add
std
pop
stc
sub
aam
pop
out
xor
into
ficoms
mov
xor
cwtl
xor
add
test
mov
dec
and
add
clc
cmp
lcall
clc
js
dec
mov
mov
jecxz
lret
and
add
add
jne
loopne
xbegin
clc
negl
lahf
iret
aam
pop
push
cmp
aad
clc
inc
clc
xor
add
nop
je
ljmp
pop
mov
clc
jbe
out
adc
clc
xchg
sub
jne
cmp
outsl
mov
clc
xchg
vunpckhps
sbb
pop
sub
inc
add
xchg
repz
sbb
fs
outsb
mov
add
add
ja
mov
xchg
in
xlat
mov
clc
push
add
or
add
fs
add
clc
jae
add
pop
inc
add
jnp
push
clc
jl
add
jecxz
mov
add
add
add
jne
add
pmaddwd
add
jl
call
sub
add
sbb
mov
int
int
add
mov
fstpt
clc
xchg
jl
jb
add
into
lods
dec
cmpsb
clc
xor
and
add
add
out
push
mov
add
mov
add
mov
mov
clc
adc
loopne
mov
add
je
rcrl
adc
add
mov
inc
add
imul
lock
cmp
dec
mov
mov
push
add
sbb
clc
jle
clc
test
sahf
cmpsl
clc
pusha
add
out
push
add
inc
clc
mov
jae
add
out
stos
inc
add
dec
sbb
clc
push
cmp
clc
inc
clc
loope
rorb
std
das
jnp
clc
js
mov
mov
pop
adc
add
sub
add
add
int3
sar
sbb
pop
jmp
mov
ds
add
mulb
and
inc
add
fildll
mov
dec
fwait
cmp
xor
add
xabort
add
insl
or
cwtl
mov
clc
adc
add
add
inc
add
or
and
push
add
je
adc
add
xchg
je
fldenv
imull
mov
add
mov
mov
sub
add
rorb
ret
fstpl
or
add
mov
push
add
push
or
add
nop
mov
add
add
repz
add
sub
clc
jbe
inc
add
xchg
out
xor
add
xchg
mov
clc
and
add
out
mov
mov
addr16
inc
clc
pop
jns
add
sar
add
add
add
clc
mov
clc
sti
shrb
add
in
mov
add
add
add
mov
mov
or
add
add
add
cwtl
and
enter
push
cmp
clc
sub
insl
cs
iret
bound
add
mov
add
jo
add
add
fiadds
pop
clc
ljmp
clc
adc
add
data16
push
jb
add
inc
add
cmpsb
clc
add
add
add
adc
add
inc
add
pop
ss
clc
daa
clc
ret
clc
xchg
push
clc
iret
test
in
out
adc
add
add
dec
mov
add
add
mov
mull
idivl
data16
and
sub
jno
add
add
and
add
add
popa
add
cmp
lods
dec
sbb
xchg
aad
shll
mov
clc
lock
mov
sar
clc
jl
lods
xchg
fidivs
in
das
das
es
dec
nop
sbb
add
mov
clc
cmp
sbb
clc
sub
clc
mov
clc
push
mov
popl
decb
add
add
add
cmp
push
shlb
push
repnz
fwait
add
popa
add
pop
push
test
clc
pop
clc
pop
push
add
add
add
pop
and
add
aaa
mov
fmuls
sbb
add
clc
int3
pop
repnz
mov
clc
sti
push
add
adc
add
add
sub
mov
clc
fcomi
or
push
mov
lock
clc
mov
int
add
mov
clc
sub
adc
lcall
add
sti
mov
add
xor
add
clc
jns
dec
test
sbb
add
test
add
test
or
inc
add
cli
fnstsw
ret
clc
out
idivb
aas
mov
outsl
ret
mov
clc
bnd
xchg
testb
xor
add
inc
clc
prefetch
or
or
clc
mov
fbstp
add
adc
sahf
dec
xchg
js
inc
add
test
push
add
add
mov
add
adc
in
das
cmp
push
inc
clc
out
scas
enter
std
xor
test
dec
or
mov
or
add
and
add
or
add
mov
xchg
mov
inc
add
inc
add
sar
xlat
dec
dec
sub
imul
adc
add
xchg
fmull
add
cmp
clc
push
nop
push
mov
clc
das
out
cmp
cmpsl
clc
fstpl
ja
clc
repz
sub
sub
scas
sar
out
adc
add
jae
add
sti
and
sbb
clc
fwait
int
add
test
clc
repnz
xchg
fs
jb
add
sarl
clc
js
fldenv
add
pushf
shrb
xor
xchg
loope
add
add
leave
and
add
xabort
pusha
add
out
das
dec
mov
cmc
push
inc
add
mov
cs
std
cwtl
and
shll
iret
dec
nop
sbb
into
pop
inc
add
movsl
clc
int3
lret
sahf
xbegin
cmp
clc
dec
dec
cmp
xchg
dec
mov
clc
sub
dec
movsl
clc
out
mov
imul
adc
stos
fcoml
add
pop
sar
add
data16
stc
push
pop
insl
cmp
inc
clc
jbe
clc
add
add
mov
add
inc
add
enter
fidivrl
jo
add
std
cwtl
push
cmp
adc
add
fcoms
jmp
test
aaa
aas
cmp
lret
pop
shlb
add
inc
add
jg
cmp
clc
mov
testb
popa
add
jns
and
add
clc
jnp
clc
sbb
call
add
jns
hlt
cmpsl
clc
sbb
or
das
pop
lods
das
jns
cmp
int3
jno
add
cmp
int3
movsl
clc
mov
inc
add
fdivp
add
add
xchg
fdivs
repnz
add
addr16
pop
pop
imul
add
bound
add
and
mov
and
leave
dec
adc
clc
xor
add
add
add
xchg
es
lods
movsl
clc
jns
pop
cwtl
pop
jne
adc
shrl
mov
clc
inc
clc
xor
add
mov
jmp
add
add
add
cmpsl
clc
pop
pop
clc
es
and
add
push
clc
enter
inc
clc
inc
add
cmp
cmpsl
clc
xchg
fldenv
in
std
xor
gs
ret
clc
pushf
mov
jmp
add
lods
dec
and
add
stc
or
add
addr16
popa
add
or
jo
add
rcrb
or
cmp
loop
adc
mov
cwtl
mov
push
add
cmpsb
clc
mov
bound
add
xlat
test
add
add
jl
mov
pop
add
add
icebp
cmp
test
data16
movsb
clc
cmp
lea
xchg
aad
pop
sub
add
stos
sbb
inc
clc
sbb
cld
fs
cltd
add
add
push
lcall
xor
add
and
insl
sti
ret
dec
dec
add
add
clc
cmp
jb
add
add
shl
clc
adc
add
clc
dec
in
dec
sbb
dec
and
add
clc
mov
xor
add
or
negb
adc
shll
js
fsubl
es
lcall
fst
roll
clc
adc
add
clc
mov
clc
leave
jmp
add
clc
mov
lods
test
in
sar
add
pop
imul
sub
add
cmp
mov
xchg
xor
add
xchg
rcr
adc
add
clc
xor
jmp
cmp
ss
dec
sbb
add
stos
push
inc
clc
adc
popa
add
mov
sti
repnz
insl
ja
cmp
or
enter
add
insb
rolb
test
or
add
add
clc
jo
add
dec
add
add
xchg
pop
sbb
dec
notb
clc
push
dec
aam
lcall
push
pop
jb
add
jg
test
pushf
push
push
jl
ja
pop
das
pop
lcall
dec
test
or
clc
jmp
negl
mul
clc
mov
aaa
test
inc
add
stc
add
add
loope
fucom
clc
mov
clc
adc
add
add
shll
loop
sbb
movsl
clc
outsl
jo
add
clc
mov
pop
test
testl
dec
into
cltd
int3
mov
clc
aaa
mov
data16
sar
xchg
popf
daa
clc
in
sbb
test
add
cwtl
or
clc
mov
pushf
mov
mov
clc
xor
clc
inc
add
cmp
inc
add
cmpsb
clc
inc
add
js
jp
xor
add
jmp
add
sbb
mov
dec
and
add
cmp
sbb
mov
fsubrs
testb
loopne
nop
clc
jmp
cli
hlt
dec
sbb
aas
inc
clc
push
lcall
ret
clc
or
mov
mov
add
add
add
je
clc
hlt
cli
sar
aad
test
cwtl
or
xchg
cwtl
and
add
jle
add
mov
sbb
inc
add
mov
inc
add
add
inc
add
in
scas
or
clc
ds
in
mov
ljmp
outsb
dec
xchg
add
add
mov
sbb
or
clc
fdivrs
insb
lods
jmp
add
enter
cld
loop
or
add
lods
cmpsb
clc
sbb
add
fbstp
add
xchg
push
add
cmp
xor
add
inc
add
pxor
add
add
add
clc
jecxz
cmp
insl
and
add
clc
fcoml
add
xor
add
clc
lahf
iret
imul
fs
pop
enter
push
clc
jo
add
sahf
lcall
adc
add
movsbl
iret
fstpt
add
add
ret
clc
adc
add
jns,pt
sbb
jae
add
add
ljmp
in
mov
loopne
inc
add
bound
add
xchg
cmp
add
mov
mov
ds
xchg
icebp
and
add
shld
or
add
call
mov
jmp
clc
sar
mov
push
add
push
sub
add
add
xlat
mov
mov
pop
int
mov
fldenv
add
icebp
incb
add
cltd
sbb
clc
pop
clc
das
cmp
imul
dec
dec
push
cs
outsb
mov
adc
add
xchg
cwtl
fwait
es
cmp
add
jge
add
mov
test
xchg
xchg
rcl
jnp
in
lcall
or
push
adc
add
mov
popf
push
add
cltd
mov
add
dec
insl
pop
push
add
icebp
shrb
leave
sbb
cld
xor
add
xor
add
push
mulb
add
sub
movsb
clc
adc
insl
out
push
push
cmp
xchg
or
or
clc
cmp
jg
stc
adc
add
xlat
pop
push
lahf
ret
clc
xabort
gs
pushl
clc
in
push
fcompl
add
or
add
xchg
shl
clc
scas
cmp
aaa
dec
es
adc
int
sbb
xor
add
push
aam
negl
push
lods
addr16
fnstcw
lcall
and
add
clc
and
add
clc
cs
clc
sar
jns
jecxz
sub
xor
add
add
add
add
add
mov
clc
adc
add
add
mov
clc
fmuls
in
and
xor
add
add
cmpsb
clc
push
into
notb
cmp
leave
inc
add
in
jmp
clc
add
cmp
clc
push
xchg
nop
mov
add
test
pop
push
clc
and
add
clc
pop
fnstenv
add
inc
add
fs
mov
out
out
stos
hlt
enter
jae
add
sbb
jns
mov
pop
push
mov
clc
push
sub
mov
push
pop
inc
add
inc
clc
loope
stc
daa
clc
pusha
add
xchg
test
mov
and
add
adc
or
add
clc
rolb
clc
adc
add
in
pop
dec
xor
add
clc
cmc
mov
pop
mov
cmp
and
adc
sbb
push
add
pop
lahf
dec
mov
fisubl
add
add
mov
push
add
push
add
mov
push
mov
jnp
jmp
sub
sbb
rcrl
js
imul
sub
add
or
clc
xor
add
dec
out
push
clc
sahf
cld
or
loop
lahf
mov
iret
mov
and
std
xor
jo
add
xor
test
xor
add
and
add
pop
pop
lods
jb
add
mov
adc
add
clc
or
cwtl
pop
xor
jmp
add
inc
clc
cmpsl
clc
xchg
loope
push
add
aad
sbb
adc
clc
call
add
rclb
scas
sbb
jecxz
xor
sbb
mov
clc
in
sbb
add
add
adc
add
clc
mov
lret
xor
add
clc
fs
adc
add
add
xlat
push
add
dec
cwtl
in
xchg
in
in
and
jo
add
dec
dec
pop
mov
cld
in
inc
clc
jle
sub
add
add
cld
dec
mov
add
add
or
sbb
clc
jne
imul
inc
add
push
mov
clc
mov
clc
test
mov
inc
clc
pop
pop
pop
and
add
add
fadds
clc
pusha
add
addr16
dec
jo
add
sub
pop
repnz
jecxz
push
push
aas
xchg
xchg
das
mull
jl
mov
sar
add
mov
or
pop
dec
lods
sbb
cmpsl
clc
in
in
mov
or
add
pop
clc
mov
data16
lahf
push
clc
xbegin
jo
add
push
and
mov
dec
push
add
add
cltd
ficoms
xchg
add
add
xchg
sub
mov
mov
clc
aam
lret
enter
mov
clc
ret
add
sbb
clc
xor
add
aas
pop
or
rcll
add
add
outsb
dec
mov
clc
xor
clc
xchg
and
add
add
movsb
clc
xchg
xbegin
sar
add
inc
clc
xchg
in
loope
mov
add
mov
inc
add
jbe
add
inc
clc
and
std
mov
stos
nop
in
jnp
adc
add
clc
dec
ret
in
cmp
clc
je
inc
add
cs
and
add
add
loope
movsb
clc
dec
lret
jle
jge
clc
loopne
adc
add
ja
sub
popf
lods
in
daa
clc
adc
add
clc
daa
clc
loope
and
add
clc
cmp
add
push
add
mov
add
add
clc
xchg
dec
mov
fs
repz
add
clc
push
clc
inc
add
or
add
test
je
clc
js
pop
clc
xor
add
lods
adc
add
movsl
clc
shlb
mov
aam
add
add
add
mov
clc
sbb
clc
mov
clc
jg
int
clc
jl
mov
mov
lcall
clc
inc
add
sub
clc
fwait
xor
add
mov
sbb
cmp
jmp
sub
iret
enter
jmp
pop
jb
add
clc
sub
clc
stc
leave
adc
add
jns
lahf
and
add
add
sbb
clc
mov
sar
add
cwtl
mov
dec
xchg
insb
and
add
add
sti
adc
add
add
sbb
add
jmp
add
call
xor
add
pop
push
jne
icebp
out
leave
or
clc
fs
mov
add
test
jp
jle
add
xor
clc
in
push
mov
sahf
sub
clc
jns
xor
add
in
jo
add
mov
clc
dec
int
clc
shlb
add
pusha
add
sbb
xlat
je
mov
cmc
fs
add
add
xabort
jne
clc
inc
add
xchg
sahf
hlt
adc
add
clc
cmp
loopne
loopne
jae
add
cmp
stos
notl
add
or
mov
clc
fadds
add
out
mov
add
jecxz
cmp
and
add
mov
clc
repz
clc
out
nop
test
add
mov
mov
jl
cmc
ja
xchg
out
movsl
clc
jmp
xor
addr16
mov
insl
out
sbb
clc
nop
jno
add
clc
or
lods
enter
mov
pop
sub
pop
daa
clc
mov
fisttpll
insb
mov
clc
adc
add
sar
clc
push
add
testl
cmpsb
clc
or
into
and
cwtl
sub
clc
add
xchg
pop
or
outsl
inc
clc
pop
inc
clc
dec
mov
clc
bound
add
xor
add
sar
xor
ljmp
clc
outsb
fcmovb
clc
icebp
pop
dec
mov
clc
mov
xchg
nop
cmp
adc
adc
add
add
xbegin
test
fstpt
add
add
clc
adc
add
aaa
pop
loop
xchg
sar
add
xor
sub
cmp
pop
int
enter
rcrl
jb
add
clc
pop
add
loop
jge
lret
adc
add
inc
add
or
add
add
clc
pop
add
xor
add
hlt
addr16
inc
clc
pop
mov
clc
mov
mov
cmp
lods
xor
add
sahf
mov
stos
fisttpll
daa
clc
shl
xbegin
mov
sar
ret
xchg
jae
add
add
cmp
push
dec
leave
xchg
xchg
movsl
clc
pop
inc
clc
ss
lahf
pop
rolb
pop
sar
add
in
and
add
adc
add
gs
mov
push
xchg
cmp
mov
add
sbb
pop
add
das
xchg
jle
sbb
clc
scas
into
stos
pop
and
add
dec
push
add
mov
clc
adc
xor
add
cmpsb
clc
dec
sar
js
add
jno
add
add
push
add
pop
data16
addr16
mov
lea
add
pushf
dec
test
push
xchg
fwait
inc
add
lods
test
xor
add
add
out
cs
add
jmp
clc
xor
add
clc
stos
mov
dec
into
lock
add
aas
lods
stos
cmp
cwtl
cmp
mov
cltd
adc
lret
clc
fwait
daa
clc
push
clc
in
sub
add
inc
clc
test
add
mov
sar
push
cmp
clc
mov
add
pop
clc
jge
xbegin
and
mov
push
push
sbb
clc
iret
punpcklbw
add
xchg
mov
in
ja
adc
add
add
pusha
add
push
dec
xchg
setno
add
clc
mov
xchg
ret
inc
add
test
jae
add
clc
xchg
lods
scas
or
lods
pop
push
add
add
add
mulb
add
push
add
cmp
add
in
insb
dec
push
add
add
clc
jns
or
das
sub
sub
add
dec
sbb
add
or
xor
add
sub
cmc
popa
add
ret
clc
cmp
cmp
aaa
inc
add
mov
add
add
add
lock
insb
sub
inc
add
fdivrl
icebp
test
icebp
fmull
clc
mov
xbegin
clc
inc
add
adc
add
clc
adc
sbb
clc
fcompp
pop
stos
insb
js
clc
pop
fs
addr16
adc
xbegin
shlb
add
mov
add
cmp
sbb
dec
mov
pop
clc
lods
lahf
aad
sbb
push
push
sub
mov
incl
mov
clc
bound
add
or
and
add
add
add
or
push
add
sbb
clc
lret
fidivrl
xor
add
clc
xchg
ss
push
and
add
into
std
cmp
clc
xchg
push
dec
es
inc
add
loop
xor
add
add
add
pop
js
add
pusha
add
cmp
incl
xchg
xor
add
nop
aam
hlt
pop
sub
je
add
aad
add
xlat
popa
add
outsl
mov
fdivl
push
dec
divb
add
test
mov
adc
add
sub
ja
adc
add
clc
pushf
cmp
add
sar
clc
cmp
sar
cli
fs
aad
mov
clc
ds
clc
inc
clc
imul
std
dec
rol
clc
ds
add
stc
push
pushf
insl
xor
add
add
and
add
cmp
mov
clc
jae
add
clc
push
lea
add
mov
add
add
add
adc
clc
xchg
xor
in
cmp
sarl
add
add
jecxz
data16
ja
clc
frstor
clc
gs
inc
clc
mov
add
aas
jnp
cltd
push
clc
js
daa
clc
shlb
pusha
add
xchg
jecxz
jbe
negb
call
clc
repnz
repnz
clc
lret
pushf
push
lret
sbb
add
inc
clc
pop
push
add
int3
out
pop
cmp
lret
fnstenv
add
js
leave
inc
clc
ss
dec
cwtl
dec
clc
xchg
mov
clc
cmc
clc
aam
clc
mov
aaa
cmp
fiadds
add
xor
add
adc
mov
rclb
sar
js
sub
lahf
clc
xbegin
cmp
clc
push
sahf
fwait
jl
sub
clc
out
ret
clc
aad
mov
and
add
add
jle
push
ret
lcall
sub
test
sub
fs
fisubs
add
cmp
clc
sbb
clc
out
enter
cmp
clc
out
sbb
add
stc
ret
clc
and
add
inc
add
xor
add
push
add
dec
sbb
mov
test
push
add
cmp
or
fwait
pop
stos
popa
add
dec
jno
add
clc
push
int3
mov
clc
mov
ja
add
call
call
stc
mov
mov
test
xor
add
add
jne
or
out
ret
jno
add
sar
add
xor
add
add
add
mov
xchg
xchg
ror
das
push
xor
add
add
arpl
add
add
add
out
sub
mov
sar
test
in
or
pop
es
popa
add
js
add
inc
clc
pusha
add
nop
aas
iret
movsl
clc
mov
sbb
mov
ja
clc
dec
adc
add
lock
cmp
fstpl
clc
xchg
xchg
add
add
add
test
imul
adc
add
add
inc
clc
in
cmp
pusha
add
vminps
clc
jnp
clc
push
pop
popf
sub
add
gs
testl
clc
fnsave
inc
add
stos
pcmpgtd
lahf
mov
mov
push
add
out
cmp
add
xchg
mov
push
sbb
sub
add
int
je
int
adc
add
add
sub
add
pop
mov
add
mov
call
push
pushf
lods
leave
jne
sub
leave
cltd
xbegin
clc
pusha
add
sub
mov
cld
jae
add
negl
add
and
add
mov
addr16
lcall
dec
fistpll
cli
mov
clc
lahf
xchg
and
in
cmpsb
clc
ficoml
add
mov
xor
add
sub
jl
or
add
push
fsubrs
adc
sub
fnstsw
push
add
ret
clc
push
pcmpeqb
add
lret
sub
popa
add
lret
es
lods
loop,pt
jb
add
mov
adc
clc
jmp
add
nop
dec
jmp
mov
add
sbb
fcmovnb
clc
rclb
add
jno
add
arpl
add
clc
push
mov
int
push
inc
add
out
xor
add
push
out
xbegin
push
inc
add
pop
and
dec
inc
clc
aas
test
test
xchg
insl
sbb
jns
cmp
stos
enter
xchg
jns
clc
stos
pop
xchg
inc
add
push
add
xlat
clc
push
cwtl
pop
std
insl
lret
repz
add
sbb
xor
add
add
jl
into
cmc
sbb
xor
add
add
pop
data16
lahf
push
adc
add
lods
add
mov
clc
pusha
add
sbb
clc
push
clc
mov
clc
ret
clc
fwait
xor
add
push
add
xchg
or
add
cs
fisttps
clc
jp
clc
lock
add
icebp
mov
cli
pop
lret
pusha
add
push
ret
fdivrl
adc
clc
add
add
add
xchg
mov
clc
mov
clc
dec
sahf
mov
mov
cmp
jbe
stos
movsb
clc
scas
cmp
or
add
lahf
mov
clc
nop
pop
loop
cmp
and
clc
xchg
xchg
jb
add
add
add
ja
clc
jp
clc
sbb
clc
cmp
imul
mov
pop
fildl
inc
add
shld
rolb
repz
je
cmovp
xor
add
clc
arpl
add
add
scas
jmp
fisubs
aas
in
leave
ljmp
mov
add
push
add
ss
or
ds
add
xchg
xlat
push
add
addr16
push
add
mov
stos
sub
dec
pop
and
dec
pop
lcall
dec
mov
clc
sbb
xchg
xchg
dec
push
clc
clc
sar
arpl
add
jp
add
add
cmp
push
xchg
loopne
in
mov
popf
mov
add
jl
stos
ja
pop
inc
clc
or
add
pop
leave
test
add
add
adc
pop
lods
pop
clc
iret
add
pop
rcll
loop
add
lahf
out
push
aam
mov
add
lcall
inc
add
mov
jecxz
mov
jnp
dec
jmp
push
push
sbb
stos
pop
push
hlt
or
outsb
lods
cmpsl
clc
or
mov
clc
jb
add
add
add
outsl
inc
clc
test
inc
add
data16
cld
stc
pop
xchg
ds
add
ret
clc
adc
divps
ds
push
sub
xor
add
pop
enter
clc
dec
or
push
add
bound
add
lock
add
int3
rcrl
lret
not
std
iret
sub
ficomps
and
add
aad
clc
pop
and
add
mov
movsl
clc
mov
addr16
jg
sub
add
fnstcw
out
sub
sub
add
cmp
add
icebp
pop
xchg
jmp
jg
sar
insb
adc
add
sarl
inc
add
cmp
add
cli
cltd
sub
ret
or
clc
dec
fstl
add
add
xchg
stos
jp
clc
and
add
cmp
add
sbb
clc
inc
add
sbb
clc
sar
clc
push
add
fstpl
push
inc
clc
push
sbb
add
out
movsb
clc
mov
clc
inc
add
stos
sbb
cld
or
mov
clc
cli
outsb
gs
mov
add
add
icebp
adc
add
jb
add
add
mov
icebp
outsb
mov
mov
add
add
xor
std
icebp
pop
cmp
in
add
dec
cmp
inc
clc
das
lock
lods
aam
cmp
mov
add
data16
inc
add
dec
mov
stc
or
xchg
push
es
lret
clc
fbld
clc
in
sbb
clc
ficompl
cmp
std
mov
adc
push
clc
data16
jnp
ss
insl
mov
in
call
stos
mov
sub
int
clc
aad
cmp
mov
clc
or
mov
sub
data16
add
out
and
add
int
sub
mov
popa
add
jl
lods
icebp
push
cld
fists
add
enter
in
mov
out
lods
pop
ret
clc
sub
movsl
clc
hlt
or
daa
clc
adc
clc
jecxz
push
add
mov
mov
or
mov
add
xchg
mov
dec
pop
cli
das
cmp
add
ret
clc
mov
add
clc
out
in
xchg
fld
clc
jns
clc
pop
xabort
sbb
add
sbb
cmpsl
clc
jno
add
or
clc
insl
push
add
pop
adc
add
add
jg
outsb
mov
add
mov
clc
and
add
mov
add
mov
repz
bnd
loope
mov
clc
addr16
out
adc
add
add
insl
icebp
loope
xbegin
add
cmovl
jns
stc
cmp
add
clc
popf
cmp
pusha
add
push
add
push
xchg
in
xabort
fstps
sub
add
scas
jne
mov
clc
dec
aaa
data16
xor
add
mov
xchg
addr16
xchg
push
add
xor
pop
pop
bound
add
add
mov
loop
enter
enter
std
test
add
pop
inc
clc
sbb
add
mov
arpl
add
loopne
gs
cmp
outsl
ja
inc
clc
in
ror
mov
imul
jl
jns
clc
stos
xchg
test
add
mov
jp
cmc
int
arpl
add
sub
clc
pop
fists
clc
cmovp
add
and
add
add
js
clc
sbb
dec
xor
add
clc
inc
add
dec
dec
bound
add
xor
add
add
inc
add
or
fs
jmp
movsl
clc
push
mov
cmp
sti
inc
add
jl
mov
out
divb
loop
cmp
nop
outsb
test
imul
clc
xbegin
cmpsb
clc
scas
adc
add
mov
mov
imul
clc
pop
repnz
jbe
add
movsb
clc
enter
test
cmp
pusha
add
pop
notb
into
leave
xchg
push
shll
add
clc
push
mov
add
clc
adc
add
test
lods
clc
lods
push
add
inc
add
xchg
notb
test
cmc
pop
clc
mov
add
daa
clc
out
stos
mov
add
add
add
in
jno
add
push
add
sahf
dec
loope
leave
add
add
insl
jl
add
insl
cs
cmp
clc
inc
clc
cmp
fstp
cmp
clc
gs
sub
dec
xchg
inc
add
push
xor
add
clc
xchg
fldenv
add
lcall
clc
out
fsubrl
outsb
addr16
aaa
and
loope
sbb
scas
je
imul
adc
add
clc
sbb
jae
add
push
add
xabort
pop
sub
clc
xchg
testl
icebp
pop
sub
ja
bound
add
jg
jae
add
xchg
dec
pop
mov
xchg
out
adc
add
clc
mov
add
push
mov
push
fmuls
pop
fnstenv
roll
add
add
mov
testb
add
aad
cmp
clc
mov
bound
add
seta
fsubrs
pop
outsl
movsb
clc
cmpsl
clc
cmp
add
jg
mov
clc
jecxz
cmc
lods
cmp
test
mov
add
mov
add
add
je
add
push
add
popa
add
aaa
ss
mov
add
std
fsubs
jmp
push
ljmp
add
mov
mov
xchg
loop
outsl
test
mov
rorb
repnz
jns
clc
xor
add
cs
push
out
arpl
add
je
or
cmp
inc
clc
inc
clc
adc
in
adc
add
clc
cmpsl
clc
xchg
and
add
add
clc
out
xor
add
jb
add
clc
sub
popa
add
repz
clc
and
add
clc
ret
popa
add
lcall
clc
jecxz
jae
add
mov
clc
mov
dec
pusha
add
out
push
imul
clc
xor
add
mov
lret
xabort
out
into
or
add
cmp
aad
clc
push
loope
cmp
pop
cmp
loopne
cmpsl
clc
lods
hlt
mov
cmp
clc
xabort
jp
add
push
pushl
add
cwtl
nop
clc
inc
clc
mov
in
xchg
cmp
inc
clc
push
add
ljmp
sub
pushf
test
or
clc
fs
loop
inc
clc
xor
cmp
add
mov
add
mov
inc
add
outsb
pop
cwtl
out
jecxz
jmp
test
mov
lcall
ss
cmc
out
stc
ret
clc
bound
add
add
cmpsl
clc
js
sbb
mov
nop
js
clc
mov
jno
add
inc
add
cmp
in
mov
add
add
out
xbegin
mov
or
push
add
ds
clc
shlb
shlb
add
in
dec
xabort
je
rcrb
out
or
add
stc
xor
add
enter
add
add
cli
push
cmp
fsubl
add
add
pushf
daa
clc
frstor
clc
ret
in
aam
clc
loopne
jae
add
add
add
clc
jne
xchg
sub
add
mov
clc
test
bound
add
clc
push
xor
add
add
mov
iret
push
or
fnstcw
pop
mov
adc
add
lock
push
jg
inc
add
xchg
cld
movsb
clc
rolb
clc
dec
sub
das
aas
inc
add
rcl
icebp
mov
add
add
add
cltd
mov
call
add
pop
ret
lcall
add
mov
clc
jnp
into
xchg
call
sbb
add
insb
cmp
cmp
jbe
xor
add
stc
lahf
cmpsb
clc
xchg
cli
and
add
add
incl
sbb
pushf
inc
add
jge
xchg
jne
push
stos
push
clc
imul
jmp
clc
xchg
xchg
das
nop
push
in
mov
jnp
out
addr16
dec
dec
lea
pop
bound
add
sar
clc
dec
cmp
clc
js
clc
das
pop
lods
jp
clc
inc
clc
xchg
push
push
add
movsl
clc
mov
clc
fidivrs
repnz
daa
clc
mulb
push
add
push
out
lcall
sar
call
pusha
add
call
clc
test
add
add
mov
clc
inc
clc
inc
clc
lcall
add
cli
add
pushf
es
sbb
arpl
add
clc
xchg
xchg
sub
push
add
add
lea
add
add
add
clc
sahf
rclb
add
clc
dec
scas
xchg
test
dec
jns
sbb
sbb
add
into
lods
movsl
clc
pusha
add
and
add
cmp
mov
lcall
lret
cmp
clc
jp
pop
and
fnsave
clc
out
dec
aam
clc
add
add
inc
add
inc
add
fcoml
add
loop
cwtl
ret
clc
jnp
dec
sldt
add
fisubrl
jg
mov
inc
add
aaa
xor
add
movsb
clc
inc
clc
jns
add
sbb
sbb
pop
xchg
mov
add
pop
sub
test
add
add
pop
cmp
or
mov
and
add
dec
ja
mov
leave
or
add
ljmp
movsl
clc
pop
or
add
adc
add
add
enter
mov
or
mov
add
gs
scas
lods
sbb
mov
add
xor
add
xchg
mov
clc
clc
xor
add
cmovp
cmp
fsts
ficompl
clc
das
pop
push
add
cmp
test
fwait
xabort
dec
jmp
fwait
lret
add
arpl
add
add
adc
add
add
xlat
jbe
lret
clc
in
jb
add
test
sub
mov
xchg
mov
add
pop
data16
fisubl
add
mov
add
cli
xor
add
or
xchg
pop
dec
fs
mov
fildll
xchg
dec
mov
dec
cwtl
stos
ljmp
push
xchg
jo
add
clc
jle
cld
in
es
pop
xor
add
inc
add
mov
jbe
gs
cltd
mov
add
inc
add
stos
cmpsl
clc
ret
clc
mov
xchg
push
jae
add
add
dec
inc
add
push
pop
clc
xor
add
int
mov
add
inc
add
mov
iret
mov
jp
clc
hlt
xor
add
add
clc
pop
repz
mov
icebp
sub
or
ficoms
add
std
lods
xor
clc
pop
int3
das
xchg
jae
add
mov
add
fwait
imulb
xlat
int
and
add
cmpsl
clc
xchg
mov
push
mov
inc
clc
cli
push
add
enter
cmpsl
clc
or
inc
clc
mov
repnz
clc
lock
cmp
clc
arpl
add
es
pop
lret
add
pcmpeqd
jecxz
inc
clc
dec
imulb
mov
mov
sar
push
lods
cmp
inc
add
das
inc
clc
jne
add
jmp
inc
clc
xor
add
fldt
cmp
clc
mov
add
clc
push
roll
or
clc
cmp
clc
adc
add
cmp
push
or
add
sar
ja
mov
clc
push
xchg
scas
ret
fnsave
fcomip
add
add
test
divb
clc
cwtl
aaa
jge
clc
icebp
jae
add
movsl
clc
xchg
jle
add
push
clc
or
lea
in
inc
add
ljmp
clc
and
add
push
add
test
test
clc
sub
adc
dec
jns
clc
loope
xbegin
mov
clc
jge
clc
insb
or
pop
dec
push
add
in
xor
inc
clc
jecxz
mov
clc
mov
clc
call
frstor
add
xor
xchg
bound
add
and
add
mov
cltd
gs
fbstp
clc
jmp
testb
mov
mov
sbb
add
shll
add
clc
jge
inc
clc
jle
clc
imul
stc
sbb
clc
clc
adc
add
clc
fnstenv
jae
add
pop
divl
or
xchg
aam
pop
cmp
sti
lock
inc
clc
mov
clc
adc
add
add
and
add
lret
pushf
mov
ficoml
add
add
pop
repz
lret
add
xchg
jo
add
mov
add
add
xor
sub
add
dec
pop
jbe
test
jp
add
add
add
jae
add
psrld
add
pop
push
clc
cs
jp
clc
jmp
mov
add
add
sub
filds
data16
push
cltd
fadds
jle
data16
clc
fwait
mov
data16
and
dec
mov
add
pushf
imul
add
stos
lret
popa
add
frstor
add
out
adc
add
inc
clc
test
cmp
xchg
inc
clc
ds
add
or
cmp
js
nop
pop
mov
stc
sbb
stos
cmpsl
clc
inc
clc
mov
add
dec
xor
add
add
xor
add
in
idivb
je
sub
clc
out
repnz
cs
add
rcrb
cwtl
dec
adc
add
repz
add
mov
clc
pop
ljmp
aam
imul
clc
out
in
pop
lods
add
add
pop
fisubrs
xor
add
out
mov
sti
jg
es
cmpsl
clc
repnz
add
test
add
loope
jmp
lods
pop
xchg
roll
int
push
clc
push
add
push
add
dec
add
add
add
out
pop
inc
clc
mov
insl
in
push
add
outsl
mov
add
cmp
sar
add
jmp
mov
cld
adc
add
clc
ret
pop
out
cmp
clc
nop
jecxz
repnz
clc
cmp
add
aaa
xchg
jne
into
jecxz
jnp
clc
insl
xor
add
add
ret
push
add
mov
clc
out
mov
mov
icebp
jae
add
pop
test
lret
sbb
mov
clc
add
in
shll
clc
lock
test
or
jnp
sti
ret
add
add
clc
sub
xchg
push
enter
add
das
sub
pop
and
add
add
add
sahf
clc
pop
cmpsl
clc
xchg
sbb
imul
add
pusha
add
aas
xchg
cmp
xchg
mov
mov
add
in
sub
add
jmp
ja
xchg
add
imulb
sbb
add
add
add
movsb
clc
jbe
clc
imul
flds
add
popa
add
push
add
lret
popf
movsb
clc
ret
clc
inc
add
push
add
sar
bound
add
mov
sarb
call
mov
and
add
sbb
lods
dec
icebp
addr16
leave
int
clc
mov
xchg
mov
pop
pop
push
clc
in
aam
add
add
cmpsl
clc
mov
cmp
fidivrl
adc
mov
add
cmp
add
xchg
shl
clc
xchg
cmp
push
pop
scas
jno
add
clc
mov
cmp
call
mov
xchg
shlb
clc
in
adc
add
adc
add
imul
adc
add
jae
add
fstpt
xor
add
add
or
clc
pop
sbb
pop
add
add
aam
cld
mov
inc
clc
testb
add
xor
add
clc
in
jp
inc
add
xor
add
cmp
mov
clc
dec
das
add
add
clc
xor
stos
push
fstps
gs
gs
xchg
push
clc
int3
ss
push
daa
clc
inc
add
lahf
adc
clc
fcmovnu
clc
repz
dec
scas
jp
fdivrs
cmpsl
clc
ljmp
add
jo
add
clc
fildl
sbb
xchg
jns
movsl
clc
jmp
add
add
dec
mov
repz
cmp
sbb
clc
xor
clc
push
add
bound
add
clc
test
fidivs
add
add
cs
xor
mov
lahf
or
out
adc
add
mov
nop
or
clc
jle
xchg
mov
add
clc
push
add
out
test
add
mov
inc
clc
sbb
aas
inc
add
in
push
add
xchg
jnp
dec
adc
add
sub
add
add
cwtl
push
add
and
add
clc
clc
shrl
jge
and
add
dec
pop
stc
add
scas
sub
inc
add
nop
clc
adc
add
add
out
fbstp
add
cmp
add
out
out
popf
xor
add
and
add
mov
lss
add
test
cmc
adc
and
add
insl
push
add
xabort
fistpll
icebp
xchg
loope
xchg
clc
ja
add
clc
xbegin
data16
mov
mov
mull
and
add
mov
mov
movsl
clc
leave
jge
loope
out
fists
lret
loopne
test
or
add
fidivs
sbb
bound
add
clc
cmp
pop
and
add
add
loope
jmp
fmulp
adc
push
es
mov
sahf
mov
adc
add
add
in
add
leave
cmpxchg
je
clc
int3
and
add
cltd
loope
push
std
test
mov
xchg
pushf
scas
mov
lods
push
mov
mov
add
bound
add
push
into
mov
xor
add
lock
int3
xchg
xlat
aad
fildll
xor
add
jl
es
stos
xchg
cmc
cmp
clc
loopne
inc
add
shlb
clc
mov
clc
std
sbb
clc
cmp
bound
add
mov
clc
jnp
mov
lret
sbb
add
mov
sub
jl
add
scas
and
add
clc
dec
outsl
loop
cmp
pop
xor
add
lods
sub
add
cltd
loopne
or
add
pop
cld
arpl
add
clc
popf
jbe
clc
scas
sbb
shlb
add
clc
es
adc
add
repz
clc
insl
add
into
hlt
and
add
push
push
add
xchg
cmp
jmp
add
dec
jl
adc
add
clc
cmp
je
test
lahf
test
sbb
mov
mov
pop
xchg
lock
cmpsl
clc
xor
add
pop
adc
add
or
cld
out
jbe
or
and
add
push
clc
cmp
enter
mov
pop
xor
add
add
ret
add
pop
popa
add
repz
add
add
add
add
in
cwtl
pop
jno
add
clc
test
in
out
ja
xchg
sub
nop
stc
out
dec
and
add
int
ljmp
test
movsl
clc
and
add
mov
loop
decb
mov
in
lcall
lret
icebp
mov
mov
popa
add
or
mov
hlt
and
mov
mov
sar
clc
xabort
add
pop
into
mov
sti
fimull
es
sub
add
mov
add
loope
enter
clc
xor
add
push
imul
fstpl
ss
push
clc
fcompl
pop
dec
adc
add
loop
or
inc
add
stos
fldl
lret
mov
int3
lret
inc
add
imul
jmp
clc
loop
xor
add
mov
insb
and
clc
jbe
xchg
sti
cmp
mov
xlat
jbe
clc
das
mov
add
clc
in
ljmp
pop
faddl
scas
push
insb
jg
jbe
add
add
dec
or
pop
adc
add
cs
ljmp
clc
and
add
clc
sbb
cmp
xchg
sub
add
dec
lcall
add
adc
call
mov
xabort
ja
pop
xbegin
clc
push
inc
add
mov
push
clc
test
shlb
jmp
sbb
add
clc
repz
sbb
out
arpl
add
add
add
add
scas
mov
xbegin
int
mov
push
sar
add
ss
pop
test
clc
mulb
add
cwtl
fs
dec
test
sbb
adc
push
push
adc
add
pop
and
push
loope
cli
sub
fnstsw
cmp
clc
inc
clc
mov
add
cli
arpl
add
mov
add
fiadds
out
push
add
imul
clc
jnp
push
and
clc
test
push
clc
mov
fstl
add
sbb
jns
call
gs
and
mov
clc
mov
clc
ds
fiaddl
add
cli
jb
add
clc
and
jle
ret
clc
js
test
add
mov
clc
jns
add
ljmp
xor
add
add
sub
pop
out
jne
daa
clc
bound
add
mov
lods
iret
out
ja
into
sbb
inc
clc
ja
cmp
das
lcall
clc
clc
scas
cmp
clc
cmp
clc
sbb
dec
jnp
test
xor
clc
clc
xlat
stos
repnz
clc
inc
clc
adc
add
add
add
dec
xlat
mov
hlt
xchg
stos
sar
and
add
clc
cmp
adc
add
add
add
clc
mov
sub
add
aam
lahf
sbb
mov
cmpsb
clc
icebp
mov
xchg
jo
add
clc
in
adc
clc
popa
add
sahf
test
dec
xchg
lods
data16
inc
add
xbegin
clc
mov
add
add
add
clc
pop
div
ret
clc
loopne
xchg
add
add
sbb
in
jbe
mov
push
enter
and
add
push
push
loope
xlat
clc
adc
add
jle
lcall
sar
clc
sbb
scas
out
adc
add
leave
cmpsb
clc
cmp
rolb
xbegin
jo
add
adc
add
pop
clc
mov
add
outsl
cmp
je
clc
or
and
stc
pop
adc
add
add
dec
ss
js
add
mov
loopne
cmp
sub
adc
add
add
aam
and
add
fs
clc
jo
add
clc
xor
add
clc
cmpsb
clc
cmp
clc
mov
add
pop
xchg
popa
add
jp
clc
ret
clc
dec
cmpsl
clc
scas
and
add
insl
xbegin
push
test
ss
outsl
and
add
pop
or
mov
cmp
pop
rol
clc
data16
loopne
cld
xchg
jbe
add
inc
clc
push
add
pop
insb
jl
dec
sar
add
lahf
je
pop
out
sar
mov
jbe
cmpsb
clc
pusha
add
mov
sbb
jae
add
imul
fcmovne
pop
dec
adc
add
xor
add
clc
sbb
cmp
add
mov
clc
add
add
add
add
xchg
sar
clc
push
pop
loope
jecxz
cli
and
add
add
mov
clc
es
push
add
scas
dec
or
add
mov
clc
cmpsb
clc
inc
add
xchg
enter
out
push
adc
add
jecxz
xchg
xlat
mov
mov
gs
xchg
in
pop
or
push
add
xbegin
cmc
add
add
stos
add
add
inc
clc
xchg
inc
add
add
clc
repz
add
add
add
add
push
add
clc
cmp
rcrb
outsb
cmpsl
clc
mov
cmp
inc
add
call
mov
mov
sar
clc
xlat
jne
pop
pop
sbb
add
lea
add
lods
cli
mov
pop
fnsave
cwtl
jo
add
sti
data16
mov
push
mov
add
dec
leave
push
sub
clc
mov
popa
add
mov
das
inc
clc
xor
add
repnz
or
pop
insb
mov
add
or
clc
push
add
add
pop
in
std
push
add
ja
stos
jo
add
movsl
clc
lods
out
mov
clc
sbb
imul
add
add
out
push
pushf
pop
mov
clc
mov
clc
data16
jne
add
aad
mov
clc
add
add
add
sub
movsl
clc
out
ljmp
arpl
add
add
or
xchg
jno
add
ret
mov
mov
clc
out
roll
add
adc
add
aad
clc
push
add
jns
in
pop
mov
clc
pop
sub
lea
dec
stc
push
add
ror
mov
mov
out
rol
clc
aam
dec
adc
add
add
mov
imul
pop
test
sub
movsl
clc
jo
add
daa
clc
pop
into
lret
int3
inc
clc
add
add
dec
cmpsl
clc
ret
clc
dec
test
ss
add
pop
cmp
cs
clc
stos
xchg
jp
add
leave
mov
xor
add
add
add
stc
pop
clc
insb
lea
pushf
jno
add
sub
stos
adc
add
pop
aam
push
add
cltd
ljmp
add
add
mov
clc
pushf
and
call
add
clc
insb
pop
sar
sbb
add
cmp
push
lock
stos
push
adc
add
add
adc
add
add
bound
add
ja
clc
addr16
dec
inc
add
push
iret
jecxz
clc
stos
or
add
sbb
add
add
clc
fsubs
clc
mov
add
add
clc
xchg
xchg
push
add
in
loopne
sar
clc
dec
scas
in
jl
fstpt
sub
mov
jbe
mov
push
ds
add
lret
jbe
int3
mov
add
ret
mov
cltd
hlt
or
fwait
mov
mov
test
add
clc
mov
lret
clc
xor
add
lahf
neg
sub
popa
add
out
loope
mov
sbb
clc
ret
push
add
lods
or
lret
add
mov
icebp
mov
or
sub
add
dec
test
cmp
clc
imul
add
fs
lods
jb
add
mov
add
cmp
clc
sub
mov
dec
cmpsb
clc
leave
mov
clc
cmp
push
aam
xlat
fstpl
jno
add
add
fnstsw
add
add
sub
mov
mov
shrl
mov
clc
in
not
mov
add
adc
add
add
add
add
ret
clc
cmp
jp
or
sub
push
popa
add
cmp
cmp
imul
into
cmp
movsb
clc
adc
add
adc
mov
add
ds
clc
das
mov
clc
out
push
add
mov
pop
clc
fildll
add
fwait
inc
add
or
add
icebp
fs
addr16
adc
add
push
mov
push
jge
out
jge
jo
add
mov
add
xbegin
fucom
clc
outsb
cs
clc
push
add
inc
add
cmc
and
add
fxch
test
xchg
sbb
adc
add
hlt
sub
push
add
cmp
jb
add
pop
ds
sar
psrad
sbb
js
push
add
in
add
add
pop
pop
clc
jg
add
add
icebp
or
pop
push
cmp
push
add
push
in
hlt
movsb
clc
push
sti
dec
aad
insl
xchg
dec
das
dec
xchg
sbb
cli
xor
jb
add
add
xor
add
lods
dec
add
add
adc
add
push
add
xchg
adc
add
or
add
loop
out
add
add
jl
clc
pushf
cmpsl
clc
add
add
jge
clc
fs
fcoml
add
add
pop
or
xor
add
clc
push
out
leave
dec
es
adc
add
add
add
add
xbegin
add
sub
clc
push
mov
nop
xbegin
or
repnz
adc
add
add
cli
xbegin
sar
xchg
loop
adc
add
cmp
adc
lret
sub
push
jle
clc
mov
xchg
bound
add
sbb
push
add
push
mov
add
mov
xchg
or
arpl
add
clc
jns
add
or
xchg
or
mov
sbb
inc
add
loop
lods
cmp
lock
add
test
push
add
lods
jbe
mov
clc
dec
movsl
clc
pop
es
push
add
inc
add
mov
mov
add
and
es
sar
clc
fwait
js
add
mov
add
shr
pop
pop
xchg
xor
add
jg
push
and
add
add
add
sub
test
add
enter
add
shr
mov
add
lahf
in
and
add
clc
mov
lods
inc
add
and
xor
add
sbb
add
sub
outsl
or
into
pop
clc
cli
arpl
add
or
mov
push
jno
add
in
push
sub
add
sub
add
mov
fs
out
xchg
and
add
mov
gs
jg
push
sub
sar
add
fcomps
ljmp
aaa
jge
cmp
jnp
clc
xbegin
clc
sti
push
rcrb
loopne
cmp
mov
sbb
bound
add
cli
ficomps
mov
clc
add
push
add
test
in
int
fmull
fwait
pop
clc
in
stos
outsl
xchg
and
add
add
lcall
clc
xor
push
add
sub
mov
mov
push
add
lea
clc
bound
add
clc
xor
add
sub
add
int
jbe
clc
inc
add
push
mov
add
clc
dec
out
xabort
cmp
add
add
add
add
add
xchg
cmp
clc
pushf
data16
notl
ret
clc
insb
or
lcall
mov
add
cmp
pusha
add
inc
clc
add
add
clc
jg
fwait
pop
clc
mov
push
inc
clc
or
push
jne
push
add
es
in
dec
mov
dec
pop
js
pop
lcall
mov
clc
and
add
scas
out
leave
call
clc
pop
sbb
clc
imul
sbb
add
pop
clc
incl
clc
test
shlb
add
cmp
data16
and
add
in
lods
cmp
add
inc
clc
xor
add
xchg
dec
pop
mov
lods
imul
mov
add
mov
add
ja
xor
add
add
sub
xor
add
clc
pop
push
es
test
sbb
mov
add
inc
clc
dec
leave
nop
loopne
ljmp
dec
loop
push
ds
clc
cmp
add
sahf
inc
add
loope
aas
or
roll
add
aad
xbegin
add
mov
add
add
scas
and
push
cmp
and
add
scas
pop
out
int
vcmpps
cmpsl
clc
xor
jg
cmp
movsb
clc
sub
pop
adc
add
xbegin
clc
clc
adc
add
lahf
in
push
add
mov
add
fcompl
clc
xchg
add
adc
es
and
add
add
push
clc
ficoms
jo
add
stos
inc
add
sub
clc
sub
add
jae
add
das
cmp
cmp
clc
xchg
imul
cmp
pusha
add
inc
add
jle
clc
jl
sar
jle
mov
and
mov
clc
mov
test
dec
jg
mov
mov
jecxz
cmp
add
mov
clc
inc
add
daa
clc
xchg
filds
testb
add
inc
clc
dec
push
popf
mov
xchg
mov
clc
cmp
clc
or
add
add
add
outsl
into
sub
clc
or
cmp
clc
or
xchg
aaa
iret
sbb
movsl
clc
mov
cmp
add
clc
lahf
shlb
nop
lods
bound
add
clc
jle
mov
add
lret
push
xor
add
add
sub
sbb
pop
jle
clc
cmp
or
mov
dec
add
xchg
leave
push
test
xor
add
clc
mov
clc
shrl
clc
adc
add
and
notl
jnp
mov
cmpsb
clc
pop
fnstenv
pushf
xor
mov
sbb
out
add
xor
jle
pusha
add
sbb
movsl
clc
sarl
clc
dec
aaa
add
add
jge
clc
dec
cs
cmp
add
dec
mov
jb
add
dec
test
out
or
add
lret
dec
or
push
clc
jl
cld
pop
rorb
mov
in
pop
clc
jle
clc
test
add
psraw
fbld
clc
out
notl
add
mov
jp
push
imulb
dec
pop
jo
add
inc
clc
test
add
inc
clc
mov
xor
add
add
pop
rcrb
pop
in
out
mov
gs
jo
add
jg
add
and
add
clc
xabort
clc
mov
ret
clc
push
add
mov
lcall
dec
fldl
add
arpl
add
add
jecxz
inc
add
inc
clc
test
dec
pusha
add
into
pop
clc
scas
xchg
push
into
pusha
add
or
add
or
and
xor
cmp
clc
jecxz
mov
es
dec
sar
mov
mov
add
add
pop
addr16
sub
add
fistpl
pushf
jle
or
sbb
es
mov
loop
inc
add
inc
add
sub
adc
add
add
mov
push
data16
jb
add
dec
pushl
add
jg
sbb
push
sahf
call
add
mov
add
pop
xbegin
add
jbe
clc
inc
add
jecxz
push
add
push
sbb
clc
sub
repz
lret
xchg
bound
add
ficoms
fsubrl
or
xor
add
push
or
push
bound
add
add
popf
std
in
jecxz
xbegin
out
push
push
add
dec
xchg
pop
add
add
mov
inc
add
cmp
fmull
test
xchg
dec
icebp
push
add
sub
and
add
add
sub
add
or
jns
pop
push
clc
inc
clc
pop
clc
jne
clc
scas
ds
dec
mov
add
ficoms
push
clc
clc
cmp
fmull
clc
das
add
imul
xchg
fildll
clc
dec
ja
clc
xchg
sahf
addr16
dec
pusha
add
jnp
clc
loop
or
pop
add
in
or
add
out
loope
cltd
inc
clc
into
std
push
aam
add
pop
and
call
push
add
add
add
imul
xchg
dec
movsb
clc
cmp
test
aas
dec
lods
sbb
pop
push
add
adc
std
adc
jge
repnz
add
add
clc
ds
stos
or
sub
loop
ss
je
pop
int
lahf
push
add
mov
clc
cmp
xor
add
add
or
clc
inc
clc
xor
clc
unpcklps
add
lea
repz
lods
jecxz
sbb
add
mov
mov
jl
add
fidivrl
clc
cli
dec
fmuls
jne
clc
fcos
lcall
fsubs
clc
cmpsb
clc
mov
into
sar
dec
nop
sar
insb
cmp
lahf
push
add
dec
dec
fyl2xp1
cmp
addr16
mov
clc
rolb
sar
or
fcomps
jae
add
das
mov
int3
xchg
into
inc
add
adc
add
add
and
add
dec
lret
aaa
call
inc
clc
add
push
add
movsl
clc
aaa
xchg
sub
and
add
data16
popf
lock
add
bound
add
fisubrl
add
add
add
sahf
xchg
lcall
clc
addr16
sub
clc
and
add
add
cwtl
push
xchg
pop
cmp
add
inc
add
mov
pushf
cmc
mov
stos
addr16
xchg
xchg
ss
clc
fs
and
add
es
sub
jae
add
paddq
mov
jae
add
add
add
cli
cmp
add
dec
push
add
aaa
mov
aas
jns
adc
add
xabort
clc
add
add
add
cs
or
jge
loope
mov
clc
cli
xchg
dec
sub
pop
sub
dec
dec
mov
hlt
inc
clc
ds
clc
ret
or
pop
shlb
inc
clc
cs
fbld
add
adc
add
add
cmp
clc
popf
test
cmp
clc
scas
cmp
mov
add
add
xor
add
nop
or
add
inc
add
ret
clc
mov
push
insl
mov
das
sbb
popf
pushf
xor
add
das
imul
clc
xchg
mov
clc
push
test
or
stc
sti
into
xor
add
daa
clc
imul
clc
fstpt
sti
std
jnp
adc
add
pop
clc
push
or
sahf
imul
cmp
add
mov
out
repz
aas
ja
pushf
scas
cmp
inc
clc
in
icebp
into
inc
add
cmp
clc
xchg
insb
mov
add
std
xor
add
cmpsb
clc
stc
or
clc
ss
push
add
mov
sti
mov
add
and
add
and
add
or
clc
pop
clc
jns
test
arpl
add
clc
xor
cmp
clc
ss
and
mov
xchg
mov
and
lea
jns
fs
jge
cmp
ficomps
add
and
add
mov
stc
loopne
inc
clc
setae
push
cmp
clc
popa
add
pop
cmp
add
add
add
lods
push
jo
add
insl
cmpsb
clc
fidivs
add
add
sub
clc
ljmp
lret
pop
lods
pop
clc
pop
sub
add
inc
add
test
push
fnstenv
add
push
add
add
clc
sbb
adc
add
clc
loop
scas
sub
add
adc
clc
jns
add
test
out
lcall
shr
sub
cmp
add
lea
add
lcall
clc
cli
cmp
sub
pop
clc
add
add
clc
cmpsb
clc
sbb
clc
cmc
add
add
in
clc
xchg
scas
cmp
dec
ljmp
sub
mov
mov
fwait
jno,pn
add
add
add
adc
test
adc
add
or
clc
clc
xor
clc
or
sti
rcrl
or
dec
pusha
add
dec
cmp
out
repz
xor
add
pop
clc
jnp
add
rorb
jge
sbb
js
jno
add
add
xchg
out
dec
cli
scas
cmp
add
pop
in
outsb
into
add
cmpsb
clc
xor
add
clc
popf
mov
add
inc
add
test
push
call
dec
xchg
mov
sub
add
mov
mov
pop
cmp
lahf
notl
pop
clc
jle
add
inc
add
jne
clc
lock
inc
add
jns
adc
add
int3
add
add
loop
xchg
ficoms
add
push
push
es
es
mov
xchg
sub
add
adc
add
add
mov
bound
add
int
and
add
cmc
fdivs
dec
lret
sbb
fcmove
jb
add
add
scas
push
sti
loop
fs
add
add
into
sahf
dec
mov
lods
add
add
add
xchg
out
jns
mov
clc
cmp
clc
loope
mov
cld
dec
add
add
jnp
rolb
pop
clc
dec
inc
clc
js
mov
add
mov
add
or
clc
inc
add
push
ret
cmp
mov
add
lahf
mov
pusha
add
dec
mov
add
iret
pop
lea
sub
mov
sarb
sar
stc
shlb
add
push
clc
and
add
add
fsubl
add
pop
clc
daa
clc
ret
clc
adc
add
cmp
addr16
test
xchg
out
cmpsl
clc
and
add
push
add
adc
add
mov
xabort
dec
mov
dec
xchg
cmc
pushf
xchg
fidivrs
jle
mov
pop
pop
cld
lahf
int3
xchg
scas
push
mov
das
test
push
xbegin
xchg
push
clc
cmp
call
cmp
mov
bnd
add
insl
test
imul
pop
sbb
dec
es
xchg
mov
add
into
mov
clc
loope
mov
cmp
or
clc
hlt
cmp
mov
add
fsubl
clc
jp
sbb
fs
dec
daa
clc
push
adc
add
xbegin
lret
outsb
sub
add
add
push
add
cmpsb
clc
or
push
mov
jp
dec
insb
out
bound
add
sub
add
mov
daa
clc
lods
mov
mov
ljmp
clc
repnz
add
xchg
insl
mov
and
add
add
add
clc
mov
add
adc
xor
add
aam
adc
add
pop
mov
clc
pop
sbb
mov
clc
gs
adc
xchg
movlps
add
xor
add
lret
mov
pushl
add
inc
clc
pusha
add
jmp
xchg
jecxz,pn
insb
sub
add
xor
add
add
mov
inc
add
xor
sub
clc
data16
jle
std
pop
clc
stc
push
add
mov
add
cmp
outsb
lea
pushf
add
add
lcall
mov
push
add
das
es
cmp
clc
data16
aam
clc
mov
add
data16
stos
push
add
jo
add
adc
clc
popf
jl
mov
in
push
out
js
clc
fs
mov
jo
add
clc
push
clc
and
movsl
clc
add
or
clc
in
push
jp
cmp
mov
add
add
mov
add
add
or
adc
add
ret
aad
mov
nop
jp
stos
scas
push
xchg
outsl
sub
mov
add
mov
ja
add
lods
add
add
cwtl
or
adc
add
clc
cmp
xchg
divb
add
cmp
adc
clc
fsts
add
dec
setns
imul
jne
add
pushf
lret
mov
clc
cld
pusha
add
inc
add
cmpsl
clc
test
sbb
push
clc
xor
add
call
dec
add
outsl
mov
add
add
popa
add
sub
clc
mov
test
sgdtl
add
add
jg
arpl
add
mov
imul
and
clc
std
sub
sub
dec
int3
jnp
jl
xor
add
xchg
or
mov
lods
adc
add
add
add
mov
push
clc
sbb
popf
pop
data16
sub
clc
mov
shrl
dec
xchg
out
test
mov
mull
mov
jnp
arpl
add
add
sar
mov
push
add
dec
int
add
pop
push
ljmp
lock
add
popf
xor
add
test
push
cmp
add
rcll
add
movsl
clc
arpl
add
fcomi
pusha
add
pop
pop
add
add
fildl
clc
sbb
sbb
clc
inc
clc
imul
mov
clc
shr
xchg
aaa
lock
xor
pushf
add
add
clc
adc
add
clc
adc
add
jo,pt
add
clc
mov
dec
dec
into
inc
add
xchg
cmp
dec
add
add
push
pop
in
inc
clc
cmp
clc
fistpll
sysenter
arpl
add
bound
add
xlat
pop
ja
scas
adc
adc
add
add
or
fwait
cmpsb
clc
or
cmp
data16
icebp
mov
jns
lcall
add
add
clc
sbb
add
repnz
addr16
mov
add
jne
lret
gs
xbegin
dec
rcll
add
add
movsb
clc
scas
and
add
sbb
xchg
pop
in
or
test
clc
cmp
dec
rcrb
bound
add
clc
pop
or
in
hlt
xchg
dec
push
je
rcrb
clc
pop
inc
clc
sub
add
xchg
push
aam
add
push
int3
mov
jecxz
movsb
clc
idiv
repnz
dec
push
mov
arpl
add
cmc
xor
aaa
xor
clc
sbb
jo
add
push
cmp
add
add
clc
pop
pop
loop
call
add
inc
add
xchg
imul
clc
pop
clc
mov
test
inc
clc
sub
mov
add
add
xor
add
imul
xchg
and
ljmp
int
clc
jb
add
pop
mov
loop
inc
clc
jno
add
add
jo
add
clc
or
xor
add
add
add
jae
add
cwtl
insb
push
out
mov
mov
addr16
and
add
push
sbb
dec
xor
add
sbb
add
add
mov
cmp
xor
add
cmp
inc
add
or
jmp
ja
clc
das
dec
mov
jae
add
outsl
test
clc
mov
gs
stos
insb
sti
imul
mov
push
inc
clc
adc
add
add
add
in
jmp
clc
adc
int3
xor
add
add
and
add
push
add
mov
sti
pop
jnp
in
shrb
es
pop
push
clc
sti
push
push
add
or
test
mov
jg
insl
cmp
lahf
scas
sbb
jo
add
clc
stos
inc
add
clc
mov
add
bound
add
add
stos
iret
dec
dec
sar
add
add
add
movsb
clc
sbb
mov
roll
clc
inc
add
push
xbegin
lods
enter
jge
cwtl
or
add
mull
aas
xor
add
sbb
push
add
js
clc
shll
and
mov
add
idiv
fldl
sub
add
add
outsl
sbb
xor
add
fld
clc
iret
cmp
out
fs
fistpl
xchg
popa
add
push
out
xchg
lods
jnp
clc
lods
pop
shll
add
fwait
sar
clc
pop
inc
clc
pop
mov
mov
cltd
jmp
clc
loopne
cli
dec
lods
clc
sub
aad
clc
ret
mov
add
jb
add
aam
pushf
push
add
and
add
add
fistpl
mov
mov
inc
add
in
stos
push
int
or
add
jae
add
add
cmp
clc
sar
mov
sbb
bound
add
add
pop
jns
clc
xbegin
add
aas
add
add
adc
clc
xchg
push
std
sar
clc
fldl
clc
inc
add
inc
clc
push
jmp
jle
clc
int
clc
ret
clc
jecxz
cmp
or
clc
push
lea
sbb
pop
jae
add
add
daa
clc
jg
sbb
int3
loopne
add
inc
add
add
add
fimull
cltd
addr16
xor
add
add
int
add
int3
cmp
jle
and
add
fsts
mov
add
cld
dec
imul
jo
add
add
dec
fadds
add
cmp
mov
add
sub
adc
add
mov
pusha
add
push
es
xor
add
jmp
clc
push
jle
cmp
iret
inc
clc
loopne
and
add
add
adc
dec
sbb
imul
xor
ret
clc
cmc
sarb
aad
ret
clc
inc
clc
cmp
sbb
jmp
clc
dec
mov
mov
jbe
lods
mov
add
add
and
add
inc
clc
push
mov
push
sub
xchg
hlt
ret
xchg
shrb
and
add
inc
add
insb
cwtl
repnz
test
fstpl
add
add
and
add
xor
add
outsl
call
xabort
add
popf
push
add
xchg
lock
clc
dec
or
clc
inc
add
and
adc
add
sub
add
clc
cmp
clc
dec
aad
clc
insb
and
add
push
dec
add
add
push
add
cli
jecxz
cmp
add
xbegin
in
mov
leave
add
add
lret
mov
add
jb
add
fistpl
push
pop
jle
push
lret
jp
aas
lret
in
push
test
push
movsl
clc
lcall
dec
mov
inc
clc
dec
and
add
sbb
add
xchg
leave
or
push
clc
imull
bound
add
add
xchg
arpl
add
push
clc
lods
inc
clc
cmp
adc
add
scas
pop
clc
mov
outsb
or
clc
and
add
add
sbb
clc
sub
mov
movsb
clc
xchg
pop
dec
inc
clc
int3
es
ja
cld
push
test
popf
dec
hlt
xbegin
add
add
add
xor
add
inc
clc
dec
mov
insl
push
cmp
xor
inc
clc
push
add
xor
add
add
mov
jae
add
ret
clc
insb
inc
add
mov
adc
or
in
push
mov
jns
mov
clc
aad
add
xor
jb
add
mov
mov
add
clc
sbb
add
xchg
sti
add
add
add
or
insl
push
dec
mov
in
iret
icebp
test
out
adc
add
lret
test
pop
pop
fwait
clc
decb
notb
sub
add
push
add
mov
ret
clc
xor
add
clc
je
pushf
xchg
mov
lahf
fnsave
add
add
sub
add
lcall
loop
sar
pop
xor
out
mov
sahf
cmp
mov
mov
sar
add
mov
sbb
dec
int
xor
mov
lahf
aas
shll
xchg
cmp
dec
xchg
js
jmp
clc
push
add
and
add
repz
clc
adc
add
and
aam
scas
mov
add
ret
clc
mov
cltd
xor
add
and
add
add
sbb
push
mov
add
sub
mov
fstpl
mov
clc
push
add
mov
leave
xchg
xchg
ss
cmpsb
clc
jnp
pop
bound
add
dec
xor
repnz
int
cld
rorl
inc
add
sahf
mov
mov
add
add
push
inc
clc
cmp
add
mov
add
sbb
test
adc
jnp
lods
xor
add
add
xbegin
aam
add
lcall
daa
clc
dec
push
adc
add
cli
lahf
cmp
clc
inc
clc
push
cltd
cmp
add
addr16
xchg
fmuls
cmp
xor
add
add
outsl
or
clc
mov
mov
pushf
fistl
pop
inc
clc
lret
std
cmp
cmpsl
clc
lret
add
clc
mov
add
faddl
data16
add
add
and
add
add
add
pop
fdivrs
or
mov
and
add
lock
add
add
test
stc
cmpsl
clc
stos
push
add
fisttpl
add
or
add
and
add
add
pop
jecxz
dec
fisubs
stc
shrl
clc
je
and
add
fcomi
add
sar
clc
imul
add
add
and
add
cwtl
insb
mov
dec
testb
inc
clc
mov
or
and
add
clc
aas
sbb
clc
add
lods
repz
push
fsubrs
loopne,pt
or
in
in
add
add
jp
jp
clc
jle
adc
add
sub
add
clc
mov
mov
add
jecxz
into
adc
add
add
pop
repz
add
xchg
rorl
jo
add
jbe
mov
jb
add
clc
bound
add
add
add
outsb
push
add
xchg
stos
cmp
clc
out
movsb
clc
mov
rorl
dec
jno,pn
add
clc
push
clc
movsb
clc
mov
pop
inc
clc
dec
or
out
dec
aaa
push
add
inc
add
xchg
dec
movsb
clc
add
add
clc
inc
add
test
or
loopne
bswap
das
loope
ret
clc
das
jle
mov
clc
sbb
mov
clc
outsl
push
clc
or
clc
pop
sti
mov
sti
cmp
testl
clc
mov
push
add
push
push
add
pop
insb
pop
mov
adc
clc
xlat
jae
add
sbb
push
clc
jecxz
mov
mov
hlt
lods
stc
cmp
cmp
add
shlb
into
bound
add
clc
push
add
in
push
clc
jns
clc
inc
add
xchg
push
pop
jecxz
addr16
loopne
mov
fisttpll
sub
sar
add
adc
mov
sahf
pushf
cmp
add
dec
test
mov
clc
mov
pop
or
clc
lods
fcom
repnz
add
fs
adc
mov
mov
xabort
push
cs
xchg
fstl
add
push
and
add
and
add
push
clc
lods
cld
in
inc
clc
scas
cmc
pusha
add
outsb
cmpsl
clc
mov
clc
add
add
xor
add
add
cmp
clc
es
inc
add
in
je
xor
mov
clc
imul
pushf
or
clc
clc
push
hlt
ljmp
fldl
add
add
add
and
add
add
add
clc
push
add
adc
lcall
or
add
add
add
add
popf
jnp
lret
cmp
repz
add
add
clc
mov
shrl
clc
clc
lock
xchg
repnz
push
pushf
adc
add
cmpsb
clc
sbb
add
cmp
clc
insb
int3
cmp
pop
xlat
fistl
lret
ljmp
dec
jb
add
push
adc
add
push
mov
in
jecxz
xor
add
or
clc
xor
add
leave
icebp
xor
into
into
mov
clc
ret
mov
mov
aad
dec
pop
clc
setne
add
pcmpgtb
sub
pushf
stc
xabort
clc
or
aad
clc
aam
nop
dec
mov
add
sahf
xchg
push
sbb
xor
add
clc
nop
cmp
and
inc
clc
push
add
js
sub
clc
xchg
inc
clc
dec
rcr
into
jbe
clc
mov
jle
je
add
imul
add
add
add
lcall
lahf
xchg
mov
push
cmp
dec
cli
cmp
add
fcoml
sar
fnstcw
iret
fimull
mov
lods
add
add
add
mov
xchg
push
add
mov
in
into
jne
lcall
and
add
add
jmp
clc
cmp
add
loopne
lret
sub
add
sbb
sbb
add
mov
add
add
addr16
push
cli
or
add
sub
clc
pop
adc
add
call
or
icebp
loopne
sub
pop
push
add
cmp
fistpl
or
sub
add
and
add
mov
lret
clc
faddl
clc
sbb
clc
xor
add
add
cmp
or
add
mov
add
cmp
in
loop
test
test
add
add
shlb
gs
clc
jle
xchg
testb
cmp
clc
loope
mov
enter
roll
clc
jo
add
insl
shll
cmp
ss
clc
or
push
add
fwait
dec
and
int
add
xchg
jae
enter
xchg
iret
jb
add
jg
clc
push
dec
cmp
fs
ret
add
dec
sti
mull
xchg
mov
aas
cmpsb
clc
cmpsb
clc
fs
aas
push
add
lcall
clc
jmp
insb
mov
sub
clc
cmp
mov
loop
mov
inc
clc
or
add
sub
adc
add
add
add
repnz
daa
clc
fsqrt
clc
ljmp
xchg
bnd
inc
clc
das
dec
lea
sar
add
add
add
add
js
clc
and
xchg
sub
jg
clc
lock
add
push
cwtl
inc
add
out
and
adc
add
clc
mov
clc
scas
xor
add
clc
add
imul
in
xchg
pop
xor
add
xchg
xlat
inc
clc
add
mov
adc
add
xabort
pop
pop
pop
xor
add
or
in
imul
out
push
jae
add
clc
fs
lods
lea
add
add
jns
clc
sbb
add
add
adc
add
cwtl
mov
std
ret
clc
cmp
clc
sub
add
inc
clc
addr16
push
dec
cmp
add
jge
clc
inc
clc
stos
xchg
xor
add
cmp
rcll
add
movsb
clc
mov
out
xchg
inc
clc
ja
mov
dec
cld
ss
pop
push
cmpsl
clc
cmp
mov
add
clc
movsb
clc
cmc
jae
add
adc
add
clc
popa
add
add
mov
add
mov
sbb
scas
pop
es
arpl
add
cwtl
add
add
add
mov
add
push
out
hlt
test
mov
lahf
cmc
mov
pop
stc
dec
test
clc
lahf
mov
add
adc
add
int
clc
leave
xor
add
add
scas
adc
add
js
add
fnstsw
cld
sahf
cmp
add
cmp
clc
imul
bound
add
dec
in
outsl
mov
enter
add
jae
add
clc
sub
xlat
add
add
or
add
sbb
in
or
dec
and
add
mov
xor
add
clc
mov
stc
jge
lahf
pop
xchg
inc
clc
outsl
sbb
rcl
shlb
sub
dec
jmp
add
pcmpeqw
sbb
bnd
clc
dec
movsl
clc
aaa
push
jno
add
fcmovnb
clc
jb
add
add
cmp
mov
ja
sbb
mov
mov
lods
imul
fldt
add
cmp
dec
test
add
arpl
add
and
clc
mov
clc
cwtl
nop
sub
add
sahf
xor
sbb
movsl
clc
daa
clc
fimuls
mov
dec
pushf
jbe
add
sbb
sti
cmp
add
cmpsl
clc
test
add
jae
add
icebp
es
mov
es
repnz
clc
gs
movsl
clc
cmp
add
add
cmp
adc
add
mov
mov
xchg
and
add
add
jl
mov
clc
loopne
sub
test
sub
dec
push
sub
fs
sbb
add
jecxz
push
clc
lret
popa
add
data16
push
add
sub
clc
aam
fmuls
out
xchg
insl
sub
mov
clc
lea
loop
jae
add
add
mov
clc
push
pop
jne
cmp
ds
xor
add
jo
add
aaa
dec
mov
stc
add
sbb
adc
add
ja
sar
fcompl
add
std
and
add
paddusw
add
ja
sar
and
add
or
sub
bound
add
out
movsl
clc
fcmovu
inc
clc
loopne
push
aaa
rclb
add
fdivrs
insb
push
add
add
add
add
outsl
test
sub
cmp
int
pop
out
push
out
shll
or
adc
pushf
dec
scas
sbb
arpl
add
call
sbb
clc
push
jns
pop
inc
add
pusha
add
jne
jb
add
add
loopne
inc
clc
dec
enter
jecxz
xor
add
cmp
clc
roll
clc
dec
dec
daa
clc
icebp
push
add
lods
inc
clc
lahf
mov
clc
int3
adc
jo
add
add
clc
add
add
add
leave
mov
es
cs
add
ficoms
add
pusha
add
jmp
loopne
inc
add
in
gs
xchg
jg
clc
cmp
and
sub
inc
clc
js
push
add
cmp
sar
jbe
xchg
push
add
dec
out
fwait
add
add
mov
add
or
pusha
add
mov
cmp
cld
leave
sub
mov
lods
popa
add
sbb
int3
stos
cli
add
add
pusha
add
pop
cmp
mov
add
xchg
jecxz
loope
mov
clc
and
xchg
add
xchg
add
add
loope
cmc
lea
add
add
add
clc
push
add
jb
add
add
aam
pop
clc
es
movsb
clc
mov
sbb
mov
pusha
add
cmp
outsb
add
add
shrl
jnp
add
push
add
push
add
and
add
sub
add
fadds
add
add
lock
add
pop
xchg
mov
jecxz
xchg
fwait
ret
clc
outsl
loop
inc
add
in
xchg
cmp
pop
nop
xlat
mov
dec
dec
mov
dec
jmp
inc
clc
and
add
add
clc
mov
mov
add
in
loope
int
loopne
popf
xchg
hlt
insl
mov
clc
aam
pop
sub
add
xchg
mov
je
add
add
or
push
jno
add
clc
jno
add
xor
add
sbb
stos
cmp
lahf
frstor
push
add
repnz
dec
cli
cmp
add
add
loope
in
data16
sub
jp
lret
xchg
jmp
stos
cmp
clc
mov
add
out
call
add
adc
clc
popa
add
add
add
imul
mov
cmp
add
add
inc
clc
int
add
insb
in
call
cld
sub
clc
lret
iret
cmp
fsubl
add
fs
lock
add
clc
pop
into
jbe
enter
pop
pop
jns
push
sbb
add
out
push
or
xor
add
sub
clc
cwtl
lock
xchg
xchg
ss
dec
mov
out
loope
xchg
dec
add
add
test
sbb
mov
clc
arpl
add
clc
dec
or
add
loopne
movsl
clc
sti
push
lea
cltd
jae
add
inc
add
mov
mov
pop
mov
std
cli
xor
add
sbb
outsb
xor
add
cli
cmp
cwtl
push
sbb
clc
inc
clc
pushf
negl
clc
and
data16
or
add
add
clc
push
mov
jo
add
jnp
clc
sti
js
add
push
add
ret
mov
add
scas
xor
fwait
sub
int
clc
add
pushf
dec
sub
add
cmp
xchg
push
pop
pop
mov
ss
pop
sbb
clc
fwait
cmp
pop
sub
add
aad
insb
or
clc
popa
add
jb
add
and
aaa
sti
int
clc
or
add
adc
add
mov
ja
lret
mov
jns
sbb
clc
xbegin
mov
clc
and
add
es
inc
clc
add
add
clc
nop
jg
add
scas
dec
jg
and
shll
add
iret
out
pop
fs
add
cmp
and
add
and
add
or
xchg
pop
out
mov
add
pop
ret
add
cmp
add
pop
cmpsb
clc
pop
sub
xchg
das
mov
cmp
leave
mov
dec
inc
clc
jne
push
repnz
clc
sbb
clc
sbb
add
cmpsb
clc
fstpl
add
xchg
sub
add
rcl
daa
clc
dec
inc
add
sub
add
lods
cmpsb
clc
push
add
shl
cmp
insl
push
dec
icebp
shlb
sahf
mov
sbb
clc
cmp
wrmsr
add
sti
lahf
jno
add
add
test
xchg
test
movsl
clc
jp
xlat
or
add
add
sub
add
sar
add
mov
or
icebp
and
leave
scas
psrlw
add
push
int3
aad
testb
push
add
or
in
pop
dec
gs
mov
and
add
mov
std
mul
clc
xchg
sub
add
cmp
int
movsl
clc
push
clc
insb
into
mov
popf
hlt
xbegin
cmp
sti
mov
push
clc
push
sub
clc
cmp
push
cmpsb
clc
pushf
decb
dec
pusha
add
imul
clc
push
lahf
xor
add
add
clc
push
clc
mov
js
cltd
pop
data16
push
push
mov
sbb
je
insb
inc
clc
adc
add
clc
jge
mov
in
gs
lahf
sub
cmp
dec
int3
add
add
mov
xchg
pusha
add
dec
clc
push
push
sti
add
dec
push
add
inc
add
mov
xlat
lods
mov
clc
bnd
movsb
clc
daa
clc
or
nop
icebp
aas
jle
xchg
jl
mov
clc
out
mov
add
insl
test
sbb
sub
imul
xbegin
in
into
jge
pop
cmc
and
add
mov
sahf
aas
dec
inc
clc
cmp
mov
xchg
inc
add
std
cs
xor
add
dec
loopne
adc
clc
inc
clc
loope
popf
sti
pop
push
in
inc
add
cmp
lods
inc
clc
out
ss
jb
add
mov
clc
cmp
addr16
xchg
outsl
gs
int3
xor
inc
clc
clc
jnp
clc
das
adc
add
inc
clc
stos
arpl
add
popf
cmp
lcall
imul
imul
rcll
mov
mov
mov
clc
roll
clc
iret
inc
add
imul
add
jl
insb
jae
add
bound
add
mov
xor
add
cmp
clc
dec
adc
add
add
add
shlb
add
add
sar
add
test
add
add
clc
xchg
cmp
cmp
add
out
cltd
mov
push
sti
push
aad
adc
fwait
dec
xchg
or
add
cmp
loopne
jno
add
mov
dec
xlat
mov
std
sbb
pop
sub
inc
add
pusha
add
mov
pop
cmpsl
clc
loopne
pop
fs
data16
fadds
clc
sahf
lret
inc
add
aam
mov
clc
dec
and
add
pop
repz
mov
dec
pop
add
add
add
sbb
jecxz
in
inc
add
fdivr
bnd
adc
add
pop
clc
mov
and
add
dec
mov
add
fdivs
add
jne
add
popa
add
cmc
pushf
mov
int3
cmp
mov
xchg
mov
daa
clc
xchg
xchg
mov
clc
imul
push
add
repnz
movsb
clc
jmp
xor
es
pusha
add
lods
fsts
add
cmpsl
clc
cld
inc
clc
mov
mov
jns
loope
xor
fcoml
lock
add
add
add
sbb
cmc
cmpsl
clc
dec
sub
cmp
push
add
outsb
inc
clc
mov
pop
daa
clc
inc
add
pop
jmp
aas
mov
repz
add
pop
imul
push
add
sti
sar
lcall
test
xor
add
shrl
xabort
ret
clc
enter
xchg
cs
mov
pop
pop
lcall
js
add
dec
fidivl
aad
add
cmp
pop
mov
int
ficoms
add
add
push
ds
pop
test
add
or
mov
popf
lock
cmc
jae
add
adc
ret
clc
int3
xor
add
shl
cmp
add
push
xchg
fdivrl
mov
jl
push
xor
add
aaa
hlt
stc
lcall
fcmovu
jle
xor
clc
fs
sub
add
stc
sar
mov
clc
adc
add
jo
add
popf
push
clc
xchg
in
or
sub
and
arpl
add
sbb
clc
sbb
clc
cmp
clc
xor
add
clc
xchg
xor
add
clc
cmp
clc
mov
xlat
inc
clc
insl
arpl
add
add
mov
and
jbe
repz
sub
cmp
aas
xchg
enter
loop
add
jne
aas
fdivl
add
mov
clc
movsb
clc
insl
into
sbb
add
push
enter
or
js
lcall
cltd
and
add
clc
cmp
add
push
add
pop
daa
clc
mov
adc
add
mov
clc
adc
add
mov
add
in
adc
clc
sbb
mov
shrb
clc
or
mov
clc
pop
popa
add
in
hlt
pop
adc
loop
pop
jnp
repz
pushf
mov
clc
ljmp
mov
loopne
inc
clc
icebp
jno
add
clc
add
add
pop
movsl
clc
sub
imul
xor
add
or
adc
add
or
in
js
add
add
nop
arpl
add
scas
ret
clc
icebp
and
add
add
add
clc
out
and
add
jecxz
mov
test
xchg
hlt
dec
pop
aaa
mov
mov
clc
mov
add
add
jbe
das
jo
add
dec
cwtl
or
clc
and
add
add
je
add
sbb
repz
sbb
add
add
clc
insl
int3
adc
and
add
mov
xchg
xchg
xchg
icebp
call
es
fimull
add
insl
push
add
xchg
test
pusha
add
bound
add
mov
jbe
pop
clc
sar
repnz
repz
add
and
add
pop
mov
addr16
adc
add
ds
sub
jns
outsl
mov
inc
clc
loope
std
movhps
xor
add
adc
add
clc
cmp
lcall
dec
and
dec
sar
in
push
fimuls
or
clc
in
and
add
clc
mov
clc
pop
stos
into
xchg
pop
into
sbb
movsb
clc
clc
dec
sub
and
add
mov
loop
jg
add
bound
add
sbb
outsl
and
add
mov
cmp
add
sti
push
add
or
pushf
cmp
sbb
inc
clc
jp
jb
add
add
pushf
xor
add
mov
mov
shll
xchg
ljmp
inc
clc
mov
jo
add
xor
add
movsl
clc
sub
outsb
push
add
movsb
clc
mov
dec
jns
sub
fdiv
or
add
or
imul
xchg
enter
aas
mov
add
cmp
cld
jnp
xabort
clc
in
cltd
test
add
xchg
incl
add
xbegin
add
xor
test
xchg
int3
pop
cli
jno
add
sub
and
pop
in
jl
clc
lret
add
add
and
add
hlt
mov
push
bound
add
add
or
add
sbb
divl
rcl
cmpsb
clc
pop
push
addr16
adc
mov
add
test
cmp
clc
or
push
mov
xbegin
sar
jg
pop
or
jne
clc
xchg
sub
clc
notb
add
jp
push
add
mov
clc
push
inc
clc
into
mov
xor
add
xor
add
pusha
add
cmp
mov
sub
add
ret
clc
hlt
and
add
clc
push
lods
sahf
inc
clc
xchg
shl
out
mov
pop
push
inc
add
jno
add
cmp
mov
mov
sarl
add
dec
cmp
clc
adc
aas
add
add
add
clc
sar
dec
or
notl
add
pop
lods
fs
add
cli
cmp
add
cld
pop
add
add
add
in
push
test
movsb
clc
sbb
div
push
daa
clc
loope
call
push
jge
or
add
fistl
lods
mov
or
aaa
aaa
js
kmovw
adc
add
test
dec
push
add
cmp
incl
imul
clc
rcrb
fwait
adc
add
xor
cld
lret
add
add
xor
add
inc
clc
inc
add
and
xor
add
jbe
sub
push
add
jb
add
add
lea
in
out
sub
nop
xchg
enter
or
add
lea
xor
add
dec
pop
and
add
add
pop
add
add
clc
std
lods
ffreep
clc
adc
add
push
sahf
jmp
add
movsl
clc
mov
dec
jle
pop
xchg
cmp
jecxz
xbegin
test
push
into
sbb
addr16
push
add
test
scas
jmp
clc
sbb
xlat
add
add
imul
dec
test
pop
popa
add
jl
and
add
add
push
mov
imul
iret
jge
mov
sbb
or
clc
or
cs
cmpsl
clc
cmpsb
clc
mov
jp
clc
data16
cwtl
js
gs
outsb
fldl
bound
add
scas
cmc
aaa
jnp
add
in
loope
mul
clc
cltd
mov
in
mov
xor
add
lods
outsl
cmp
xchg
in
cmp
clc
dec
cmc
in
pop
bound
add
enter
clc
mov
rcrb
add
add
clc
add
add
clc
insl
iret
adc
add
sbb
push
add
jp
sbb
or
sarb
pop
xabort
clc
sub
mov
mov
add
clc
adc
clc
daa
clc
mov
clc
sbb
loopne
jmp
add
cmp
add
add
add
mov
clc
mov
mov
clc
mov
clc
push
add
movsl
clc
xbegin
sti
and
add
adc
xabort
leave
sar
hlt
stos
or
clc
aaa
mull
clc
mov
mov
jecxz
mov
clc
fcompl
add
lret
loope
mov
cwtl
inc
add
insl
push
xchg
mov
add
inc
clc
mov
clc
gs
js
lret
add
cli
stc
lret
lock
add
clc
cli
and
add
cmp
clc
repnz
jno
add
dec
rorl
add
mov
cmp
icebp
jle
ja
mov
adc
add
ds
shrb
into
leave
cs
cli
cli
push
jo
add
repz
clc
fadd
clc
leave
js
add
xbegin
clc
pop
gs
adc
add
add
xchg
fwait
sub
add
mov
jge
dec
pop
outsl
mov
or
dec
sarl
and
add
clc
and
adc
add
add
clc
popa
add
and
add
and
add
jae
add
pop
adc
add
push
cmpsl
clc
and
add
add
push
cmp
add
icebp
aaa
xor
add
iret
dec
ret
clc
insb
mov
clc
scas
lea
add
sub
clc
jp
add
add
clc
cmp
xor
cmp
add
mov
pop
int
jg
pop
inc
clc
cmp
add
or
ret
add
mov
inc
clc
cmc
adc
ja
inc
add
xbegin
das
mov
push
or
lret
clc
stos
test
clc
sub
clc
inc
clc
out
or
nop
ja
mov
clc
sub
bound
add
mov
add
jnp
mov
jl
clc
mov
add
push
insl
fisttps
mov
push
imul
mov
inc
clc
fcoms
add
stos
mov
add
daa
clc
xchg
add
add
cmp
pop
pop
xchg
mov
clc
inc
add
dec
inc
add
fucomp
pop
pop
fxtract
clc
jae
add
add
out
fwait
idiv
roll
sbb
cld
cmp
xchg
and
add
push
pop
pop
sar
jbe
clc
jg
daa
clc
or
cmp
clc
das
xor
push
xchg
push
loopne
adc
clc
test
aad
mov
mov
pop
test
in
sbb
clc
push
push
add
pop
mov
clc
push
scas
sub
add
clc
fs
test
clc
fcoml
clc
popf
mov
add
add
sub
clc
ret
bound
add
inc
add
aam
mov
mov
mov
xchg
sti
lock
or
clc
add
add
mov
clc
pop
and
lea
add
imul
in
or
push
xchg
cwtl
lods
out
xor
sbb
xchg
pop
out
sbb
or
and
add
loopne
cmp
mov
add
add
pop
jno
add
jae
add
ja
jge
clc
sarl
inc
add
xor
add
push
jae
add
out
xchg
cmp
xlat
push
mov
pop
je
clc
jge
xchg
xbegin
and
add
add
std
add
add
jmp
clc
addr16
ds
fldenv
add
push
sub
out
jb
add
xchg
sar
clc
enter
add
pop
or
clc
lods
cmp
push
inc
add
inc
clc
ficomps
jns
cmp
into
fldl
add
push
lret
mov
clc
repz
leave
pop
push
js
test
out
sar
clc
xchg
je
or
fiaddl
clc
int
insb
mov
adc
add
clc
rol
clc
mov
mov
add
sbb
dec
popf
cmp
sub
imul
cmp
cwtl
xabort
imul
leave
fbstp
mov
adc
xchg
lahf
insb
dec
ret
imull
mov
add
fstl
je
sbb
mov
add
loop
cmp
mov
shl
mov
add
cli
xchg
outsb
cmp
add
sar
shlb
clc
incl
and
cmp
mov
sub
pop
stos
or
add
adc
add
add
pop
push
sbb
add
sub
insl
mov
test
fwait
dec
xchg
xlat
aam
add
lods
xchg
enter
add
sahf
push
adc
add
ja
clc
xor
cmp
add
mov
fstl
clc
dec
gs
or
mov
add
mov
mov
fwait
jg
clc
dec
push
cmp
out
pop
repnz
das
and
add
cmc
daa
clc
jg
stc
lods
cs
or
dec
int3
mov
add
clc
xchg
div
test
aam
jmp
mov
cld
push
in
test
ret
clc
lock
inc
add
and
add
and
pop
push
add
fwait
jo
add
dec
jns
in
mov
lock
data16
mov
clc
mov
jne
pop
clc
clc
roll
add
ljmp
stc
inc
clc
lcall
clc
movsb
clc
mov
clc
pop
imul
add
mov
push
cmp
ret
clc
push
push
add
test
and
flds
add
add
add
and
add
or
add
rorb
sar
xor
add
cmp
popa
add
add
dec
inc
add
xchg
adc
add
stc
adc
add
dec
ja
add
lods
test
cmc
mov
lods
xor
add
ret
ret
push
shl
xchg
test
cmp
cmp
ds
out
loope
mov
or
add
add
je
add
jmp
bound
add
clc
mov
sbb
ljmp
dec
mov
push
xor
clc
and
add
mov
add
mov
push
fmuls
add
int3
pop
adc
add
or
outsb
pop
inc
clc
icebp
jge
in
mov
ds
clc
pusha
add
jb
add
clc
sbb
clc
add
add
clc
imul
es
je
jmp
stos
je
clc
sti
mov
jecxz
xchg
xchg
outsl
test
mov
xchg
divb
idiv
and
add
add
xchg
sbb
int
lahf
popf
adc
add
cmp
clc
sahf
aad
shlb
mov
adc
add
add
lods
repnz
mov
repnz
clc
xor
add
inc
add
das
je
clc
lahf
iret
outsb
cld
lahf
pop
test
and
aas
add
leave
ret
clc
inc
add
sub
add
xabort
ljmp
cld
das
fldenv
add
or
aaa
cmp
push
clc
insb
inc
add
sbb
clc
and
add
insl
outsb
mov
add
and
outsl
dec
arpl
add
and
fsubr
int
out
and
add
add
push
jmp
cwtl
xor
add
clc
inc
clc
ret
addr16
sahf
fstl
add
add
test
mov
jne
clc
xchg
fnstcw
inc
clc
xchg
inc
clc
push
add
xchg
push
add
rorb
add
mov
push
ja
into
pop
inc
add
ss
imul
clc
push
sbb
clc
data16
mov
sar
daa
clc
das
fs
ffreep
clc
enter
pop
pop
sub
pop
lret
fisttpl
mov
imul
clc
sar
aas
ss
push
pop
out
repnz
clc
mov
clc
test
add
dec
sub
aam
clc
push
cmc
test
jbe
scas
pop
mov
add
mov
pushf
mov
add
fsubs
xchg
js
add
cmp
clc
andnps
fsub
clc
rol
clc
dec
test
add
lods
add
add
add
dec
and
jge
or
ret
fs
rcrb
pop
jb
add
dec
sub
jae
add
add
xor
ja
cld
add
add
dec
stos
filds
clc
jecxz
bound
add
add
clc
mov
clc
sub
and
add
das
xor
add
add
jbe
fs
int3
xor
add
add
mov
clc
mov
xor
add
add
clc
mov
clc
xor
ret
test
lret
jmp
add
mov
clc
adc
add
add
enter
daa
clc
inc
add
popf
cmpsb
clc
sub
pop
jle
loop
add
and
das
or
inc
add
lahf
add
add
pop
add
add
xchg
lods
lret
ret
add
mov
dec
jge
pop
dec
in
inc
add
jo
add
test
es
movsl
clc
hlt
mov
add
pop
cmp
add
or
add
xor
add
inc
add
inc
clc
mov
sbb
inc
add
add
in
jl
sahf
data16
cmp
pusha
add
inc
add
xchg
sbb
sub
scas
bound
add
add
add
rol
clc
xchg
dec
mov
lea
xor
add
mov
mov
scas
and
add
bound
add
or
dec
enter
ds
add
cmpsl
clc
pop
jmp
sbb
add
jno
add
sub
pop
in
shld
mov
add
test
cmp
adc
add
cmp
clc
movsb
clc
inc
clc
loopne
xchg
mov
enter
cmp
cmp
notl
push
clc
sbb
add
outsb
fnstsw
flds
add
bound
add
clc
jb
add
addr16
cld
mov
clc
adc
cmp
add
push
add
xabort
imul
add
fldcw
bound
add
fdivrs
scas
jg
clc
inc
add
mov
aaa
loop
cltd
mov
jecxz
mov
inc
add
xchg
xor
add
clc
adc
add
sar
add
in
out
cmp
add
es
fnstsw
clc
dec
inc
add
jecxz
xor
cmp
fcoml
add
xchg
cmp
add
mov
in
and
and
add
add
cmp
mov
add
jnp
jbe
clc
movsb
clc
mov
mov
popa
add
dec
cmp
clc
in
cmpsb
clc
push
add
jmp
pop
mov
and
jl
fs
cmc
mov
clc
pop
in
sub
clc
loope
xbegin
jmp
pop
jmp
pushf
rcrb
jnp
clc
lea
in
in
pop
aam
or
fwait
cld
or
and
data16
mov
add
imul
movsb
clc
inc
clc
data16
test
out
cs
fwait
pushl
clc
pop
inc
add
xchg
push
cmc
cmc
scas
cmp
jmp
lods
mov
xor
add
jbe
fnstsw
clc
jno
add
push
cmpsl
clc
pushf
sbb
clc
add
add
loopne
sbb
clc
out
xchg
fs
fisubl
sub
aaa
fnsave
mov
push
jo
add
clc
popf
mov
mov
bound
add
xor
add
sti
test
push
inc
add
ret
clc
iret
inc
clc
pop
mov
clc
sar
clc
mov
and
add
add
add
adc
add
bound
add
add
or
aam
clc
outsb
inc
add
dec
and
add
negb
add
cmp
clc
outsl
popa
add
lods
and
add
push
add
loopne
xchg
jg
mov
add
xchg
popa
add
dec
add
add
add
clc
int
pop
push
add
loop
pop
sbb
hlt
sbb
stos
or
loope
ficompl
sub
clc
adc
stos
aad
or
add
clc
jmp
call
ret
clc
stos
cld
add
add
pusha
add
mov
clc
xor
add
fcomip
insb
mov
sbb
clc
dec
sub
adc
lahf
cmp
popa
add
sbb
clc
cmp
add
ja
fwait
int
add
lock
mov
jecxz
scas
mov
clc
adc
add
mov
add
add
rcll
add
jo
add
add
adc
fnstenv
push
sarb
jg
clc
mov
jge
clc
addr16
inc
add
mov
clc
xor
add
clc
inc
clc
mov
gs
scas
pop
or
in
into
xor
add
cmpsb
clc
fcoml
add
ja
clc
mov
icebp
adc
add
adc
clc
or
adc
add
mov
clc
push
clc
sbb
out
jl
imul
push
jmp
add
arpl
add
add
clc
pusha
add
cmp
inc
clc
xchg
mov
pushf
cli
call
adc
add
loopne
mov
add
adc
sub
jl
mov
fsubrl
push
add
repnz
cwtl
pusha
add
adc
add
inc
add
xchg
sub
std
or
add
add
std
sub
clc
adc
add
inc
add
xbegin
add
addr16
fs
xor
add
add
jne
add
sub
add
mov
push
add
jle
mov
int3
push
sub
xor
add
add
in
jae
add
mov
adc
add
dec
cld
stc
fisttpll
inc
clc
in
add
add
clc
loopne
mov
cmpsb
clc
addr16
mov
dec
xchg
adc
add
pop
arpl
add
ret
clc
test
mulb
adc
add
clc
sar
add
movsl
clc
test
clc
jmp
add
push
insl
xchg
and
add
add
jnp
clc
test
repnz
pop
out
lahf
and
add
mov
sub
cmp
ja
popa
add
enter
add
clc
hlt
push
and
nop
adc
add
add
hlt
out
mov
loop
lcall
call
push
add
pop
xor
add
cmp
ljmp
add
ret
clc
mov
add
mov
aam
stc
dec
jl
clc
mov
cmpsl
clc
xor
jecxz
xor
add
clc
cvttps2pi
add
add
cmp
call
iret
aam
mov
mov
xor
add
and
imul
dec
jne
clc
test
mov
fbstp
add
push
loopne
jle
clc
xbegin
pop
adc
add
cmp
neg
movsb
clc
test
fwait
push
add
inc
add
pop
jbe
clc
jns
hlt
cmc
mov
cmp
sar
add
add
jmp
add
xchg
xchg
lock
xor
add
add
arpl
add
ficoml
add
test
adc
add
clc
lock
enter
xchg
dec
out
inc
clc
add
xchg
dec
outsb
jbe
jle
xchg
fidivs
add
jae
add
add
rorl
addr16
ret
clc
fldpi
int3
cli
sub
outsl
adc
add
clc
xchg
push
test
sub
imul
clc
jecxz
cmp
add
pop
imul
add
out
sub
aad
add
dec
and
add
add
leave
push
add
out
repnz
fwait
cmp
in
imulb
inc
clc
push
add
mov
in
add
add
sbb
addr16
pop
mov
sbb
cmp
clc
jp
clc
nop
lea
dec
pop
and
add
add
pop
jo
add
sar
clc
fs
cmp
sar
clc
adc
add
add
in
in
push
pop
enter
add
rcl
loopne
je
cld
pop
sub
and
add
shrb
pop
clc
xor
mov
clc
mov
add
add
xchg
xor
clc
das
jmp
clc
sub
add
add
add
xchg
pop
pop
xor
add
add
movsl
clc
inc
add
call
lahf
pop
es
movsb
clc
movsb
clc
fildll
clc
leave
xchg
xchg
cltd
xor
add
push
rcrb
daa
clc
xchg
mov
add
dec
sub
mov
pop
clc
cmp
adc
add
mov
clc
test
fcmovb
clc
mov
mov
clc
and
add
or
clc
fwait
sub
aaa
mov
repz
clc
neg
xchg
pop
add
add
clc
push
hlt
push
add
dec
lret
dec
add
jl
mov
and
add
mov
inc
clc
ret
pop
test
add
insl
xchg
clc
mov
push
add
push
add
and
add
cmp
out
pop
clc
cmp
jb
add
clc
enter
add
add
push
stos
mov
add
xchg
fsts
xabort
add
jbe
fs
in
cmp
add
cli
cs
inc
add
add
add
cs
xchg
mov
fidivl
mov
test
inc
clc
push
bound
add
add
test
add
sar
dec
push
add
movsl
clc
xchg
jbe
arpl
add
ret
clc
pop
ja
sub
aam
add
ret
sub
mov
add
cmp
add
bound
add
fstpl
imul
lods
es
sbb
jno
add
clc
jecxz
sbb
cmp
clc
decb
add
pop
iret
loope
mov
inc
add
jno
add
dec
jne
clc
cs
call
icebp
movsl
clc
cmp
xchg
aam
add
lock
inc
clc
push
add
or
clc
lret
cmp
xlat
push
add
add
add
dec
cmp
xor
add
add
dec
pushl
sbb
popf
xor
add
pop
jbe
pop
aaa
in
xor
add
add
cmp
clc
iret
iret
fnstenv
add
clc
out
jge,pn
jo
add
ficoms
out
xor
add
pop
pop
movsb
clc
and
lea
push
repz
es
xchg
push
dec
addr16
xbegin
xchg
sub
cmp
clc
insl
pusha
add
ljmp
push
lea
loope
inc
clc
mov
clc
cltd
add
add
add
and
cmp
mov
sti
mov
clc
stc
push
clc
in
imul
adc
repz
and
aam
sarb
call
clc
popa
add
aas
fs
dec
ret
sub
add
inc
add
scas
insl
fcmove
sar
js
clc
aas
outsb
lret
sub
clc
addr16
and
add
sar
imul
add
jo
add
js
lods
out
gs
incb
add
sub
dec
int3
es
je
clc
out
mov
clc
lock
clc
push
add
out
mov
xchg
rol
clc
cmp
mov
cltd
testb
dec
cmp
pop
lret
and
add
add
daa
clc
cmpsb
clc
and
add
mov
add
cmp
lahf
mov
cs
xor
clc
insl
or
clc
push
clc
and
clc
mov
mov
sub
push
cltd
cmp
add
insb
mov
or
test
adc
add
lret
loop
pusha
add
pop
push
out
cmp
mov
fsts
add
adc
call
add
stos
movsb
clc
in
loopne
sti
cli
dec
negb
push
and
add
dec
neg
sahf
pop
inc
clc
outsl
cmp
clc
lcall
data16
div
fbstp
pop
sub
lea
add
bound
add
jmp
clc
mov
or
pop
or
jge
add
sar
cmp
add
in
pop
mov
dec
ja
dec
cmp
loope
and
add
add
pop
div
push
mov
mov
add
cmpsb
clc
and
dec
dec
call
or
xor
add
add
add
std
insb
cmpsl
clc
loopne
aam
nop
sub
sbb
sub
dec
adc
add
fisubrs
add
mov
leave
jge
call
or
inc
add
fimull
clc
and
add
sbb
clc
jbe
push
adc
add
add
add
sti
imul
add
stos
push
adc
add
jle
loopne
push
arpl
add
add
or
add
inc
add
dec
mov
clc
xchg
mov
push
clc
mov
push
in
jl
mov
cwtl
cli
xor
add
das
cli
loop
mov
pop
add
add
mov
clc
cmp
and
add
jae
add
xchg
loopne
cs
gs
or
jle
insl
sbb
jns
in
stc
outsl
ds
pop
leave
sbb
push
and
add
adc
add
adc
cmp
pop
pop
push
add
mov
clc
or
push
add
dec
cs
in
mov
scas
mov
js
xchg
icebp
dec
lods
fcmove
or
decl
push
add
jmp
add
add
cmp
dec
cmovg
xor
clc
fucomip
mov
add
scas
jo
add
clc
repnz
into
jmp
fcmovb
clc
int3
ret
fbld
add
int
cmp
add
add
clc
daa
clc
cmp
jmp
clc
push
jmp
es
jge
clc
sbb
bound
add
cmp
loope
inc
clc
testl
dec
mov
add
push
daa
clc
nop
out
push
add
fnstsw
xchg
add
add
dec
test
lret
sar
add
xchg
cmp
loopne
sbb
add
repz
add
in
cmp
cmp
inc
add
jmp
out
push
clc
aaa
push
sti
mov
clc
dec
and
add
inc
add
jo
add
push
sti
sar
push
add
ret
or
dec
sbb
in
mov
lods
dec
adc
mov
ret
clc
movsb
clc
mov
pop
push
pop
loope
ss
push
shrb
negb
iret
data16
adc
add
add
add
pusha
add
idivl
adc
add
mov
leave
inc
clc
push
mov
adc
mov
pop
and
add
icebp
sti
inc
add
inc
add
mov
add
pop
dec
xchg
dec
aam
mov
lahf
add
add
inc
clc
mov
clc
gs
cmp
arpl
add
addr16
pop
cmp
insl
jo
add
clc
mov
cmp
outsb
jl
inc
clc
enter
or
pusha
add
sub
sbb
add
sbb
add
clc
repz
mov
ret
clc
jbe
and
add
clc
pop
sbb
and
add
add
xor
xor
add
cmp
clc
sub
or
add
dec
push
add
sub
cmp
das
rolb
dec
push
imul
and
add
in
push
jbe
mov
aad
out
and
add
add
pop
clc
sti
aas
add
add
repz
mov
aad
clc
popl
inc
add
imul
sar
clc
mov
mov
sbb
add
fs
arpl
add
add
cmpsb
clc
loope
cmp
test
inc
add
stos
js
popf
dec
sbb
into
pop
push
aad
in
pop
iret
popf
test
stos
pop
pop
fsubl
add
add
push
cwtl
pop
pop
data16
in
lods
addr16
inc
clc
iret
inc
clc
add
add
xchg
ret
clc
lret
daa
clc
fldl
clc
pop
rclb
add
aam
mov
and
jbe
movsb
clc
test
fdivl
add
dec
jmp
push
mov
es
lods
inc
add
jmp
mov
shll
clc
xor
add
add
cmp
sbb
add
aaa
stc
cmp
stc
in
lock
clc
push
inc
clc
pop
adc
add
clc
lods
inc
clc
xchg
cs
int
cmp
clc
scas
and
add
jno
add
xor
clc
or
add
mov
clc
xor
add
in
daa
clc
test
sub
es
in
in
lea
stos
inc
add
pushf
nop
or
dec
mov
mov
clc
fstps
add
ficoms
pushl
add
or
mov
add
pop
push
int3
xbegin
jle
jecxz,pt
dec
mov
xchg
lahf
neg
push
mov
add
clc
test
mov
jb
add
or
clc
ficomps
inc
clc
mov
xabort
add
mov
clc
ds
and
add
add
outsb
lahf
cmc
pop
inc
add
stos
insb
push
clc
sar
add
pop
mov
add
leave
lock
add
add
add
dec
out
enter
pushf
mov
lcall
clc
dec
adc
add
frstor
add
fdivrs
into
int
xchg
jmp
clc
hlt
mov
mov
lret
jnp
push
mov
add
cmp
jg
add
lret
and
add
add
test
push
adc
clc
int3
inc
clc
cmc
pushf
cmpsb
clc
out
in
adc
add
scas
jnp
push
add
rolb
clc
icebp
mov
add
add
add
ja
rorb
clc
jl
add
fistpll
jmp
clc
pop
clc
and
test
imul
add
cmp
sar
bound
add
sbb
pushf
push
pop
xchg
sbb
inc
add
cmp
add
gs
cmp
add
cmp
add
xchg
data16
mov
sbb
add
clc
add
inc
clc
add
add
adc
adc
add
clc
out
outsl
lea
add
lods
pop
cmp
ss
jae
add
sub
negl
ret
clc
mov
in
xchg
ret
clc
adc
add
pushl
add
scas
push
push
add
pop
push
add
das
das
lods
leave
mov
arpl
add
jne
add
xchg
cmp
into
cmp
jle
lods
mov
xor
add
jae
add
jle
add
jg
mov
add
add
cmc
scas
jmp
insb
aaa
pop
clc
bnd
add
add
xchg
adc
stc
and
aaa
pop
ss
clc
mov
add
clc
lahf
lock
add
gs
lret
insl
mov
aaa
mov
clc
xlat
cld
movsb
clc
aas
push
add
popa
add
mov
cmp
xor
add
xabort
clc
or
add
adc
add
stc
or
push
clc
nop
pusha
add
or
jmp
lret
adc
jnp
jno
add
xchg
mov
aaa
inc
add
sbb
call
imul
jp
xor
add
add
lcall
cmp
mulb
add
es
sbb
add
add
push
add
add
lock
clc
mov
add
xlat
insl
cmp
add
lahf
test
cmpsl
clc
int3
mov
clc
and
jnp
mov
clc
add
clc
nop
and
add
add
add
in
fiadds
add
data16
lods
push
pop
clc
mov
dec
and
clc
cmp
rcrb
add
iret
push
sub
loopne
sbb
aas
cwtl
lods
jl
add
and
add
ss
ljmp
add
jle
add
add
cmp
push
rcll
jmp
push
add
add
add
add
add
add
xchg
cwtl
xor
push
dec
or
in
cli
cmp
test
jle
cli
push
int
jle
out
xor
add
clc
xor
add
add
imul
bound
add
pop
mov
add
inc
clc
ret
clc
or
clc
pusha
add
loope
in
