int3
test
dec
lahf
loopne
test
xchg
loope
pop
movsl
dec
pop
out
add
pop
cmp
sbb
add
inc
pop
cmp
sub
scas
rolb
filds
ds
lds
adc
pusha
add
rcr
frstor
fdiv
aas
xor
push
cmp
inc
fcoms
cld
addr16
leave
lea
imul
clc
test
cmp
xchg
addr16
or
aam
xor
nop
fstpt
mov
fisubl
dec
lahf
inc
push
ret
sti
insl
arpl
pop
sub
in
sbb
jns
mov
add
add
shll
inc
test
and
je
mov
ja
lods
dec
iret
or
fdivr
push
cmp
mov
pop
xchg
mov
push
daa
and
sub
mov
xor
inc
add
fiadds
add
fsub
xor
pop
mov
mov
data16
add
mov
outsb
inc
xchg
stos
xchg
bound
aaa
ret
enter
add
mov
push
pusha
add
add
cwtl
jo
or
xchg
aaa
cmp
cmp
addr16
sti
lcall
sub
adc
lock
repnz
add
lahf
jp
les
stos
pop
cwtl
cltd
pop
push
push
mov
rcll
lret
xchg
mov
add
pop
lcall
insl
outsl
mov
jnp
or
mov
scas
addb
fcoms
cmp
add
add
idivl
lret
lahf
ja
mov
and
dec
addb
or
pop
mov
xor
add
test
enter
add
pop
or
das
lds
mov
cmp
out
pop
rcr
movb
xchg
mov
mov
add
adc
lds
ja
add
mov
test
xchg
adc
jo
lret
jp
mov
cmpsb
sahf
inc
add
and
movntq
cmp
dec
leave
push
and
xor
lret
cmp
add
xchg
add
enter
sub
hlt
xchg
jae
pop
xlat
xlat
outsl
sub
jecxz
test
pushf
xor
mov
pusha
add
int
push
xlat
sti
into
adc
movb
cmpl
or
sbb
mov
push
dec
dec
movb
pop
dec
jmp
xchg
sti
cmc
lods
ret
int3
jno
lea
inc
add
mov
mov
mov
push
jge
paddusw
sub
adc
filds
fs
dec
jbe
add
push
push
aas
xor
movb
and
lahf
out
push
cmp
movsl
xchg
jno
add
loop
jp
jmp
xchg
out
xor
aaa
ficoms
sub
adc
shrb
add
rorl
out
add
rcrl
sub
sbb
mov
add
adc
fs
dec
mov
inc
or
inc
mov
repz
inc
add
jp
dec
movsb
test
cmc
insl
cmp
dec
outsl
addb
movsl
divl
repz
xchg
dec
mov
push
add
pop
cmpsb
pop
and
and
jnp
add
add
faddl
addl
shll
inc
adc
out
add
jno
data16
outsb
ficomps
sti
cwtd
je
add
add
call
lret
pop
jge
insl
dec
pop
lds
sub
jno
add
cmp
sbb
nop
jmp
aas
push
add
add
xchg
sub
cmpsl
push
push
daa
xchg
arpl
mov
cmp
jmp
pusha
add
cmp
ljmp
test
ja
cwtl
cmp
sub
in
outsb
int3
lods
push
dec
add
cmp
fsubrp
lds
xlat
int3
ljmp
dec
mov
add
gs
inc
dec
enter
in
xchg
or
inc
out
dec
mov
add
mov
cltd
sub
insb
fldl
add
aas
int
aad
add
ret
push
cltd
mov
hlt
xor
sbb
out
cs
cmp
or
add
je
test
scas
xor
xchg
pop
jle
popf
ja
sar
cs
jae
jge
add
dec
fbld
cltd
stos
loope
mov
push
ljmp
adc
movb
test
xor
mov
sahf
xchg
int3
lock
imul
push
inc
add
bound
loope
addl
test
push
cmp
add
enter
les
xor
clc
sbb
icebp
aaa
movsb
jbe
pop
fldcw
stos
add
out
call
xlat
xor
cmp
mov
push
out
fistpll
in
aas
addb
mov
and
mov
mov
push
or
mov
push
xchg
jns
imul
testl
add
push
sarb
mov
mov
mov
add
mov
sbb
cmc
and
mov
lcall
pushl
xlat
mov
icebp
sahf
lcall
jmp
std
push
inc
jno
mov
add
int3
pop
pop
cmp
push
arpl
mov
xor
es
call
pop
stc
insl
adc
and
nop
pop
in
loopne
add
mov
jb
mov
loopne
xchg
fcoml
or
mov
jbe
push
cld
dec
int3
xchg
adcl
cli
je
jmp
test
add
pop
sub
adc
int
pop
xchg
ja
outsl
mov
dec
xchg
dec
add
pop
shrb
or
mov
jb
add
lds
out
mov
add
loope
cmp
in
sbb
inc
add
dec
aaa
ss
push
mov
cmp
leave
push
fdiv
and
mov
shrl
add
jb
add
out
movsb
sbb
push
hlt
int
inc
js
ljmp
jb
inc
add
push
in
dec
push
add
int3
xor
add
jecxz
repz
stc
outsl
jnp
nop
jnp
and
test
mov
push
loope
pop
in
add
jns
out
test
fisttpl
je
push
lods
adc
add
int3
lret
xor
or
pop
mov
cmp
in
mov
outsb
jae
ja
push
popa
in
aas
and
aaa
add
cmpsl
push
mov
jno
enter
mov
hlt
in
enter
mov
add
fwait
stos
punpckldq
pop
lea
cmp
ljmp
add
test
aad
stos
and
ficomps
mov
mov
adc
cltd
mov
mov
bound
rcl
xlat
les
fiaddl
les
and
and
inc
bound
and
sub
fmulp
or
add
cmp
pop
mov
pop
xchg
and
xchg
iret
dec
sar
repnz
ljmp
push
xchg
jo
xchg
push
aam
add
add
mov
and
add
inc
add
loopne
clc
add
lret
pop
movsl
sbb
iret
fiaddl
mov
es
add
cmp
sbb
popf
dec
and
mov
insl
test
lret
scas
and
out
int
lahf
shll
mov
pop
movsb
push
sbb
inc
repnz
into
lds
test
xchg
shlb
fisubrl
adc
adc
or
cmp
jb
inc
add
mov
das
fwait
scas
int3
lds
adc
or
popa
fidivs
dec
ficoml
outsb
xchg
xor
clc
push
xor
fmuls
push
mov
sub
je
push
int
add
sti
addb
dec
jno
pop
addb
cmp
stos
lahf
mov
daa
es
mov
sub
cs
sub
push
xchg
bound
clc
and
add
cmp
add
addb
dec
inc
add
or
movsl
cmp
xor
jl
insb
dec
mov
sbb
jl
adc
into
push
pop
mov
enter
mov
dec
xchg
ret
pop
pop
pop
jge
movsl
shrb
pop
lret
dec
out
jp
xchg
dec
fcmovnbe
sub
mov
jmp
jb
xchg
out
inc
xor
daa
xchg
lcall
mov
add
lret
jbe
jmp
out
stos
lea
push
push
dec
jo
das
cmpsb
xor
add
or
rclb
mov
add
add
popf
mov
add
add
sbb
sub
add
pushf
sbb
test
mov
loopne
mov
fisubrl
inc
add
sub
or
fdivs
mov
shll
inc
add
scas
cld
add
lock
dec
mov
jno
mov
push
xchg
pop
pop
mov
lea
lahf
sbb
and
lock
inc
adc
sbb
jge
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
sub
mov
cs
push
push
lret
jmp
add
add
imul
pop
je
int3
les
pop
mov
js
mov
pop
lahf
mov
lret
push
pop
lea
add
mov
adc
pop
add
js
lods
mov
rorb
mov
mov
add
test
adc
sub
push
add
repz
pop
mov
add
test
icebp
repz
pop
or
sti
mov
int
add
ja
or
mov
add
cmp
pop
and
inc
sbb
mov
popf
mov
pop
add
cmp
rcll
push
adc
inc
add
push
fdiv
shrl
repnz
mov
mov
push
nop
push
add
pop
loopne
pop
imul
jl
push
jae
and
cmp
xlat
mov
stos
dec
sahf
or
jle
add
add
jns
movb
sahf
stos
push
dec
imul
repz
or
scas
in
add
movsl
xor
cmc
icebp
mov
shrl
xchg
adc
sub
popa
xchg
or
and
insl
test
push
fdivp
int
cmp
clc
imul
ss
mov
movsb
add
mov
or
pop
cmp
fs
bound
jp
add
and
inc
test
sti
inc
and
movsl
jge
test
inc
add
shlb
iret
jmp
cmpsb
lahf
in
call
add
mov
outsb
fcom
cwtl
stc
aam
cmp
mov
xchg
xor
in
sub
add
test
or
or
ret
stos
sahf
scas
testl
cmp
je
add
sub
xor
jmp
imull
push
push
scas
lret
fsubrl
xchg
loopne
mov
stc
cmpsb
cmovg
add
mov
inc
add
dec
mov
add
mov
mov
sbb
insb
insl
xchg
mov
call
mov
mov
jae
push
mov
rclb
xchg
std
sbb
pop
dec
push
cmp
fists
sub
in
movsl
or
xor
mov
push
dec
adc
mov
cmpsl
jnp
lods
push
mov
cli
iret
ja
call
sbb
nop
clc
pushf
les
aam
or
and
pop
test
sub
jb
dec
aad
iret
push
cmp
dec
xchg
pop
ljmp
xchg
ss
and
call
idivb
mov
aaa
ficoml
xchg
pop
or
inc
add
fcoms
lods
arpl
popa
xchg
iret
dec
int
pop
push
and
push
sub
popa
dec
sub
add
jg
add
inc
add
mov
and
sti
std
sbb
lcall
xor
or
mov
pop
dec
mov
cmp
pop
cld
inc
mov
or
imul
push
jg
test
cmpsb
stos
imul
push
jl
cld
pop
jbe
arpl
jae
rolb
pop
push
out
or
ljmp
insb
outsb
addb
test
fwait
or
fsubrp
xchg
mov
cmpsl
outsl
les
dec
jo
cli
outsl
mov
dec
cmpsb
jecxz
das
or
xchg
mov
xor
add
add
js
jae
addb
add
and
jmp
add
sub
add
add
jle
push
cli
lods
and
fldt
inc
faddl
fstps
add
inc
mov
jp
xchg
ret
mov
cmp
dec
mov
cmp
push
ret
sbb
mov
dec
scas
push
add
jb
jae
push
cmpsl
dec
rorb
cli
push
mov
in
sti
outsl
rorb
lock
mov
ds
mov
mov
sub
mov
jnp
and
cmp
loope
dec
push
cli
std
fs
repnz
dec
cltd
sbb
push
enter
pop
mov
ljmp
hlt
mov
mov
out
or
dec
dec
arpl
dec
adc
and
pop
aas
out
into
sbb
xor
mov
daa
pushf
add
rol
push
push
xchg
jns
mov
int3
add
enter
add
xchg
pushf
inc
add
xchg
push
cmc
stc
jl
mov
mov
fiadds
pop
arpl
or
cmp
xor
sub
inc
add
mov
push
mov
in
push
cmc
cs
sbb
out
mov
fs
rolb
leave
xchg
xchg
sbb
jae
fs
mov
lret
mov
adc
aas
add
filds
daa
pusha
add
cltd
aaa
sbb
lea
fisttps
mov
cmp
add
sub
repnz
mov
inc
add
dec
mov
push
leave
sahf
push
or
inc
add
adc
push
mov
icebp
mov
add
data16
adc
test
add
scas
cmpsl
xor
ret
sub
imul
cmp
xlat
inc
dec
xchg
xchg
inc
add
lea
lret
mov
sbb
inc
add
sub
inc
mov
inc
divb
andl
xchg
hlt
pop
jno
inc
add
rolb
mov
push
mov
adc
dec
cmp
loope
aaa
inc
loope
mov
dec
test
mov
xchg
lea
add
bound
or
add
and
add
mov
mov
or
jns
adc
xchg
gs
lds
icebp
pop
push
dec
movb
fsubrs
add
lock
adc
jecxz
add
sbb
jmp
ficomps
xchg
mov
mov
adc
push
aas
jno
adc
jl
xor
mov
jg
cmp
scas
mov
jge
and
mov
insl
mov
idivb
or
imul
addb
xchg
xor
addb
push
inc
mov
lcall
outsb
dec
out
jge
mov
pop
mov
imul
fs
mov
faddl
add
cltd
fwait
and
or
stc
pop
push
pop
xchg
mov
repnz
jmp
sti
fwait
das
bound
rorl
imul
mul
or
adc
pop
add
pop
sar
lock
pusha
add
push
addr16
cli
adc
decl
outsl
inc
add
rcl
jo
aam
pop
imul
divb
clc
or
jne
add
add
adc
sub
les
out
aas
and
test
xchg
lods
pushf
repz
or
or
test
int
fwait
cmp
stos
in
push
add
stc
dec
sahf
test
imul
dec
dec
push
mov
out
xor
push
sbb
ss
mov
or
jb
movsb
arpl
bsr
sahf
aaa
mov
daa
add
les
push
push
add
adc
sub
sub
and
rorl
add
movb
sti
cwtl
push
jmp
dec
aam
lret
jno
aaa
insb
sub
add
lret
sub
fcoml
fsubp
clc
push
dec
ret
popa
outsl
adc
addr16
jecxz
mov
fs
pop
sahf
jecxz
ret
int
add
ret
push
add
iret
inc
sar
leave
push
orl
rolb
sbb
iret
mov
cld
movb
push
fsubl
add
movb
test
pop
xor
inc
add
fs
or
out
add
xrelease
mov
adc
sbb
fwait
and
mov
iret
sti
mov
add
sub
aas
cld
insb
sbb
fst
cmp
jecxz
popa
adc
and
mov
add
fsts
adc
pop
cmp
and
sti
gs
xchg
loope
test
jnp
xor
add
cwtl
mov
call
mull
arpl
xchg
lock
fsubs
mov
pop
nop
dec
rol
add
iret
scas
test
add
jl
cmp
mov
mov
add
fildl
push
mov
xchg
mov
add
xchg
ret
outsb
leave
ss
loop
sbb
test
hlt
cltd
aam
repz
mov
mov
js
loopw
pop
lret
movsl
mov
push
imul
or
and
out
jp
and
add
lret
ret
aas
sub
movsl
lods
bound
or
call
fwait
addb
fstpl
in
and
fbstp
push
dec
xlat
das
inc
add
scas
mov
hlt
jl
lds
and
jge
cmp
stos
cmc
pop
stos
sti
fcmovnb
add
loope
or
add
sub
divl
mov
imul
xchg
sahf
mov
xchg
outsb
cmp
lret
clc
inc
pop
sbb
push
and
add
cmp
roll
jmp
pop
into
aaa
cmp
roll
jmp
inc
mov
add
ss
imul
cmp
repz
dec
ljmp
out
mov
inc
add
mov
pushf
push
mov
ret
rcr
rcll
pop
cltd
clc
adc
testl
cmp
mov
shll
in
cmp
jge
shll
mov
cmpsl
push
xchg
movb
mov
mov
push
and
daa
popf
sbb
sbb
pop
inc
add
adc
shlb
imul
outsl
loop
popf
push
jg
and
add
push
xchg
in
dec
push
sbb
push
cs
or
xchg
out
jo
hlt
cmp
adc
mov
pop
ja
mov
lods
mov
call
cmpsb
sbb
jecxz
adc
out
mov
or
std
ja
lods
pop
adc
hlt
add
adc
xchg
test
dec
push
fldl
add
repnz
lock
push
lret
cmpsb
fwait
jge
push
and
push
add
imul
xlat
testb
or
int
stos
rolb
bound
jno
mov
add
adc
imul
push
jge
je
vcomisd
mov
add
adc
push
pusha
add
pop
out
pop
ljmp
and
sbb
test
pop
mov
and
or
push
mov
adc
push
repz
add
push
mul
dec
outsl
loope
push
stc
stos
stc
int3
call
mov
ret
adc
jl
jge
add
pop
cli
mov
sbb
fcmovbe
test
ret
faddl
rolb
sti
leave
jle
and
icebp
js
add
xchg
add
std
pop
sbb
push
pusha
add
out
repnz
inc
add
add
add
jmp
cmpsb
pop
xor
cwtl
movsl
jnp
in
sub
jle
add
mov
imul
add
pop
dec
arpl
andl
mov
leave
insl
mov
leave
mov
jmp
sbb
lret
push
add
in
mov
ss
add
out
fsubrl
lods
pusha
add
jmp
jecxz
pop
mov
mov
test
aaa
enter
jns
rep
lahf
push
mov
mov
dec
and
inc
add
mov
jp
add
or
add
add
daa
call
mov
jno
fbstp
xchg
test
fcmovnb
add
movsl
jge
mov
enter
add
inc
add
icebp
add
call
mov
pop
xchg
movsl
push
sbb
jl
push
push
shr
std
jne
add
pushf
js
cmp
jge
sahf
mov
addb
les
cmp
dec
push
add
inc
add
add
fdivrl
xor
push
repnz
scas
popa
jno
test
add
and
shrl
stc
lahf
test
cmc
call
negb
add
ss
fsubl
movsl
sahf
inc
add
cmp
add
xor
sub
data16
jo
push
inc
mov
sub
ds
aam
in
add
xor
dec
pop
lods
mov
ficompl
jg
pusha
add
into
dec
popf
pop
or
add
out
cmc
xchg
inc
add
jbe
add
cltd
jne
addb
dec
loop
popf
xor
add
test
inc
dec
mov
outsl
pop
sti
mov
jnp
les
sbb
mov
add
jo
xchg
xchg
std
stc
add
push
xchg
das
into
lret
cmp
xchg
inc
dec
jbe
sub
mov
nop
jl
xchg
loop
sbb
and
test
lahf
mov
ja
les
pusha
add
add
pop
mov
add
inc
add
aaa
add
test
push
mov
xlat
mov
xchg
jl
das
shrl
inc
xchg
call
push
in
sub
hlt
inc
jnp
add
fcomps
sub
les
mov
xchg
data16
dec
sahf
and
lock
lods
xor
adc
jb
lods
inc
add
add
cli
lods
imul
clc
dec
jmp
scas
pop
pop
and
pushf
cmp
cmp
and
jb
cmp
add
cmpsb
sahf
hlt
std
mov
mov
fscale
fdiv
popf
pusha
add
inc
add
xor
add
rolb
pushf
gs
sahf
jmp
jmp
pop
pop
or
push
fwait
xor
sub
in
addb
fnstcw
add
ret
rclb
or
ret
mov
push
jo
inc
add
aaa
add
enter
xchg
test
jo
lods
and
xor
add
cmp
pop
roll
add
mov
imul
adc
fwait
loope
mov
add
test
jge
push
push
add
add
and
shll
sahf
das
jecxz
sub
add
aad
add
repz
test
jecxz
test
out
inc
add
repz
and
ret
mov
inc
add
mov
cltd
inc
add
pop
mov
push
push
sbb
cmp
ret
out
cmp
pop
dec
out
fdivl
xchg
pop
shl
mov
lods
cmp
cmp
out
jle
mov
cmp
fldcw
out
add
push
je
pop
ds
jae
cltd
fadd
pop
mov
inc
add
out
aam
mov
dec
or
jl
add
and
add
push
inc
js
das
sbb
push
lds
add
jnp
jl
cmp
ds
cmp
sbb
push
mov
lods
pop
cmp
call
cltd
js
pop
cmpl
sub
add
in
outsl
stos
data16
ljmp
push
out
mov
mov
mov
lock
repz
and
lret
movb
jmp
cli
jno
rolb
xor
sub
add
add
cs
fsubr
rolb
cmp
xchg
stc
mov
mov
rclb
stc
jo
les
jmp
mov
shll
cmp
push
jge
add
push
loope
push
fsubrl
or
adc
xlat
repnz
addb
inc
xchg
repnz
test
cmp
push
xor
test
sbb
cmpsl
mov
mov
sbb
cltd
and
xor
add
daa
nop
pushf
lods
jb
pop
hlt
dec
inc
stos
inc
add
nop
data16
stc
in
mov
jae
dec
mov
pop
call
xor
ret
xor
out
fcomi
jl
mov
jbe
add
mov
or
pushf
adc
add
mov
add
out
imul
test
sbb
repnz
cmp
scas
add
lea
repnz
cli
xor
jne
push
mov
pop
cmc
sar
les
adc
sub
mov
push
repz
pop
rolb
cmpsb
jne
lahf
and
int
outsl
adc
nop
pop
sti
lds
push
xlat
ja
cwtl
xchg
push
imul
sub
mov
pop
mov
fnstsw
das
pop
sti
mov
add
stc
mov
push
cmpsl
test
ds
cld
jl
mov
imul
lcall
jne
push
push
outsb
mov
in
addb
sbb
mov
sub
js
or
mov
je
testb
cmc
add
je
add
add
pusha
add
push
dec
push
pop
nop
pop
in
mov
or
add
mov
aad
pop
add
adc
add
add
add
rorl
adc
add
cmpsl
subl
push
notl
test
cltd
pop
and
insl
std
lcall
cmp
outsl
lret
das
xchg
cmpsl
pusha
add
ss
stos
icebp
and
push
gs
test
stc
insb
xor
add
mov
popa
mov
add
lret
cmp
in
mov
add
and
sbbl
xchg
adc
fldcw
adc
xor
call
cltd
sub
lcall
push
inc
scas
sub
inc
add
in
mov
shrl
sub
out
and
mov
aas
inc
add
icebp
test
stos
stc
scas
pusha
add
xor
test
pop
decl
sbb
mov
and
rclb
push
add
lret
stos
cmp
insl
or
jne
shl
out
jge
adc
jl
cmp
jne
dec
cmp
aam
adc
imul
push
pop
insl
test
push
rcl
das
pop
jg
test
jns
inc
iret
xor
pop
sub
das
cmpsb
addr16
jmp
sub
add
out
jecxz
shlb
icebp
addb
aad
dec
in
call
lret
pop
call
ret
rolb
ss
lahf
cltd
gs
fimuls
lods
inc
fs
sbb
mov
sub
scas
leave
rcrl
loope
fsubrs
lods
and
repz
push
fsubrs
in
call
rolb
in
cwtl
push
test
bound
fcomip
adc
jge
dec
inc
cmp
mov
mov
add
inc
shlb
jg
xor
add
ja
pop
inc
add
iret
and
adc
scas
addb
xchg
vmwrite
js
and
mulb
addr16
mov
fidivrl
xor
mov
imul
push
add
add
xor
jge
jne
mov
pop
addr16
std
pop
dec
xor
adc
icebp
sti
jns
sbb
lahf
push
jns
inc
add
mov
sahf
dec
mov
sbb
adc
add
add
mov
pop
popf
dec
sub
lods
aaa
repnz
dec
mov
push
addb
stos
insb
push
ror
push
lahf
xchg
sub
or
ficoms
and
adc
cmp
xor
pop
or
fcomps
in
lock
out
mov
cmp
rolb
add
dec
inc
add
adc
lods
xchg
nop
push
insl
cmp
xchg
fmul
ljmp
stc
add
scas
pop
aas
or
mov
fcmove
cmp
jne
lds
jg
dec
shr
xchg
mov
push
mov
pop
int
add
repz
xchg
stc
lods
les
loope
inc
test
ror
dec
push
loopne
adc
pop
and
mov
adc
lcall
shrl
test
mov
mov
test
add
fucomip
push
loop
jbe
and
les
popl
repz
xchg
dec
call
dec
daa
lock
add
fldcw
into
outsb
xchg
aad
add
add
rorl
add
dec
call
cmpsb
sbb
je
add
dec
xor
inc
sub
mov
pop
pop
test
sbb
out
xor
jb
mov
jne
leave
mov
das
adc
add
scas
sub
or
movsl
idiv
inc
add
mov
les
hlt
and
add
sbb
jecxz
cs
les
or
mov
push
sahf
push
dec
jmp
popa
and
fistps
sbb
lock
sub
add
rdpmc
ljmp
or
iret
js
sbb
test
lods
adc
lods
scas
andl
push
stos
ss
lahf
mov
adc
mov
push
jae
arpl
pop
js
mov
inc
pop
mov
cmp
bound
push
jmp
pop
mov
add
jl
addb
repnz
sahf
pop
pop
das
scas
mov
or
add
push
and
adc
icebp
insb
cmp
repnz
inc
lcall
movsl
shll
and
hlt
push
hlt
outsb
outsb
mov
cltd
jo
fcomps
add
adc
addb
pop
ficomps
inc
add
fwait
lret
add
fwait
pop
enter
inc
addr16
or
mov
mov
cwtl
dec
dec
sbb
dec
aam
ret
push
lret
dec
out
and
mov
adc
jecxz
iret
add
addb
cmp
sbb
mov
cmpsl
xor
repz
addb
int3
rolb
dec
cmpsl
push
aam
jb
rclb
rcl
rolb
mov
jns
rolb
lea
dec
xchg
jbe
cmpsl
mov
cltd
push
inc
fnstenv
mov
testl
push
loope
xchg
mov
call
adc
mov
dec
std
enter
pop
sub
dec
loopne
ljmp
je
cmp
call
into
adc
or
mov
jle
sbb
inc
add
loope
add
insl
dec
jbe
in
ljmp
inc
add
add
xchg
subl
push
addr16
cmp
push
addr16
sbbl
xchg
xor
cli
mov
lods
les
aas
hlt
cmp
dec
je
movb
mov
sub
jmp
pop
aad
inc
add
xor
jp
dec
pop
inc
add
push
bound
xorl
clc
jp
cmpsl
adc
out
rolb
sbb
out
shrb
lock
enter
call
pop
aaa
pop
mov
pop
stc
sbbl
mov
add
pop
scas
loopne
xchg
outsb
pop
mov
je
bound
push
scas
in
pusha
add
icebp
mov
add
loopne
addr16
cmp
lcall
jl
cwtl
mov
xor
dec
push
cmpsl
add
stc
rcrb
pop
data16
dec
and
pushf
add
sbb
mov
push
fmuls
imul
inc
jle
cmpsl
xor
lret
imul
cmpsl
loop
out
negb
xor
inc
fildl
pop
pushf
xor
mov
dec
popf
mov
lds
imul
dec
test
loop
lock
adc
ds
cwtl
scas
movsl
in
mov
movsl
mov
ja
cmp
fwait
cmp
addb
add
and
les
dec
jle
mov
mov
pop
sbb
les
mov
push
push
lahf
stos
push
test
rcl
fidivrl
pop
or
jp
leave
fsubrp
sub
add
test
add
jo
push
sub
jb
test
rolb
incb
cli
out
dec
xchg
cld
pusha
add
push
call
out
or
inc
add
addb
enter
mov
fmuls
hlt
es
rcrl
add
stos
inc
lds
es
daa
jnp
xchg
test
jge
inc
add
jecxz
jno
or
pop
daa
and
mov
outsl
sub
int
pusha
add
xor
push
dec
nop
or
aas
and
jb
mov
lcall
and
push
cltd
jne
add
shlb
repz
push
jo
jno
xchg
mov
inc
js
cmpsb
xor
movl
imulb
dec
jl
push
or
adc
fnstcw
sbb
mov
or
cmp
aas
jge
xchg
lcall
arpl
and
jecxz
sbb
mov
das
cmpsb
pusha
add
rcrl
cmpsb
fs
loope
xchg
outsb
jp
ret
loopne
add
sbb
jle
out
les
mov
adc
push
xor
xchg
das
rcr
adc
or
mov
out
popf
pop
or
push
and
imul
dec
inc
add
push
cli
jmp
pushf
into
inc
add
out
adc
sbb
ret
xor
inc
gs
xchg
and
rorl
mov
xchg
jg
add
pushf
sub
add
ja
cwtl
push
negb
repz
push
stc
ret
popf
xchg
mov
adcl
lret
dec
add
sub
nop
aad
cltd
sub
cwtl
xchg
xchg
insl
fisubrs
loope
stc
call
add
pop
imul
cvtps2pd
addr16
sub
inc
rcll
daa
hlt
or
add
rcrl
dec
cmp
add
addl
mov
mov
repz
adc
mov
xlat
push
dec
mov
cwtl
sub
mov
xchg
rolb
sub
dec
mulb
xchg
cli
stos
out
jo
cmp
adc
jmp
cmpsl
out
loopne
pushf
inc
and
mov
add
add
js
es
cmc
sub
or
mov
add
daa
lea
sbb
push
add
mov
add
mov
aad
pop
lea
loopne
popf
push
addr16
and
xchg
jle
mov
and
aas
shr
stc
mov
das
add
push
loope
mov
cmpsl
std
dec
push
pop
sbb
int
sbb
std
mov
lods
add
push
mov
xchg
ficomps
es
rcr
mov
mov
gs
call
insl
insl
push
jmp
add
add
dec
es
pop
arpl
maxps
test
adc
repnz
sbb
xor
add
mov
out
sbb
loop
add
inc
add
aaa
sbb
pop
mov
fldcw
movsl
lods
enter
aas
pop
xchg
mov
aaa
les
outsl
cmp
pop
shr
sbb
add
add
lods
in
mov
push
xchg
inc
add
lods
push
enter
add
pop
mov
iret
cmc
mov
add
inc
add
push
dec
in
pop
jecxz
sbb
sbb
hlt
pushf
outsl
jge
adc
jbe
rolb
sub
lret
popa
inc
add
sub
and
scas
pop
bound
ds
mov
mov
ss
andl
stos
les
xchg
nop
loope
test
in
jne
xchg
sub
in
gs
mov
loope
add
mov
mov
jmp
sbb
cmp
shrb
rcl
pop
bound
mov
jo
inc
inc
add
sti
movsl
sub
addb
mov
int
pop
bnd
adc
stos
sub
xchg
lods
mov
dec
jns
sti
dec
sbb
cmp
cmpsb
ret
add
pushf
sahf
popf
fisubl
add
dec
push
jno
add
cmc
leave
daa
cli
jecxz
cld
popa
add
jle
jmp
fildl
cmpl
add
add
shr
xchg
std
ret
cmpsb
push
insl
sbb
inc
add
pop
jg
cmp
dec
div
pop
rcrb
cmp
and
jb
add
mov
mov
fsubl
mov
push
lock
loop
push
clc
feni(8087
mov
cmp
fistl
xlat
mov
insl
mull
jne
inc
sub
sbb
inc
xchg
mov
add
js
cmpsl
roll
dec
pop
scas
addb
jb
cs
ret
or
sbb
mov
xor
and
fisubrs
scas
addb
pop
cmc
imul
cltd
movsl
mov
insl
das
jge
mov
inc
das
int3
pushf
push
xor
ret
xor
inc
add
pop
mov
add
icebp
adc
sbb
js
insb
sub
ret
call
mov
cs
push
les
adc
xor
dec
aaa
repnz
out
fs
mov
sti
push
add
aas
xor
xchg
sub
xchg
mov
fnstsw
sub
and
outsb
clc
lea
sbbl
les
dec
add
cld
jb
push
cmpsl
fwait
and
push
or
cmpsl
pop
sub
and
pop
fsubrl
push
push
xor
sbb
sahf
mov
dec
sarl
pushf
adc
add
pusha
add
loope
add
cmp
out
jbe
xorl
pop
addb
cld
jb
and
int3
xor
xchg
addl
addb
rorl
enter
inc
add
lcall
es
add
push
mov
push
jge
mov
insl
adc
sbb
stc
jmp
add
in
fsubrl
mov
mov
mov
dec
or
xchg
cmp
adc
fldt
adc
roll
std
popa
xchg
cwtl
mov
xor
pop
je
or
sub
add
pop
sbb
stos
pop
push
mulb
add
inc
add
pop
aam
lds
in
insb
les
aaa
pop
pop
pop
inc
aaa
int
add
xchg
std
lret
xchg
adc
addb
xchg
inc
loope
add
cmp
call
addr16
les
sti
loopne
mov
add
add
sub
jno
mov
loop
xor
rcrl
sti
fsubs
fs
repnz
out
and
inc
add
push
sub
add
shlb
or
or
and
cmp
insl
add
mov
shrl
pop
inc
ljmp
inc
mov
push
fnstenv
mov
sbb
mov
lahf
shll
sub
add
cmp
ljmp
add
adc
ficomps
call
test
sub
lret
mov
pop
push
jge
ljmp
add
stos
repnz
mov
add
pop
mov
xchg
adc
addb
jns
les
jl
xchg
ret
sti
subl
jae
aad
add
add
in
sahf
adc
arpl
push
mov
jo
test
add
icebp
mov
loope
jmp
mov
add
hlt
or
ja
into
cld
cwtl
aaa
subl
in
lea
fstpt
popa
cwtl
into
pop
push
or
pop
mov
xchg
div
stos
sub
btc
xor
cmpsb
std
das
pop
test
cld
repnz
or
sbb
and
fldl
arpl
fadds
dec
xchg
mov
cmp
lds
shufps
cmp
std
test
pop
hlt
insb
outsl
pop
cmpsl
js
fisubl
push
sbb
into
pop
jp
mov
pop
shlb
push
add
das
inc
add
mov
jge
seto
inc
std
xor
jmp
aam
adc
inc
add
dec
jle
imul
add
push
pop
jmp
jp
je
add
movb
add
jb
dec
mov
mov
lahf
sbb
add
repnz
faddl
jle
divl
xchg
pop
fldl
pop
add
jnp
ret
dec
push
xchg
mov
rcll
lahf
in
inc
add
stos
fnstsw
sub
movl
or
pusha
add
jae
outsl
jns
jnp
push
mov
pop
cwtl
stc
addb
sub
jo
movb
out
out
xor
xchg
sbb
jo
dec
fnstsw
push
aam
or
shlb
mov
xchg
roll
sbb
push
cli
fnstcw
outsl
mov
mov
pop
aad
jo
aam
je
jl
stos
sub
inc
push
xor
jg
adc
xchg
test
ss
in
add
dec
imul
add
mov
in
hlt
into
ss
in
ja
inc
add
xor
push
jns
add
dec
or
mov
or
es
test
or
or
in
mov
jnp
fcompl
outsl
adc
mov
mov
cs
jno
imul
out
push
adc
add
mov
pop
stc
cmpsb
jnp
push
jle
fst
imul
in
jbe
sbb
sbb
jle
arpl
mov
ds
je,pt
in
add
push
mov
xchg
sbb
add
or
add
cmp
cltd
aaa
pop
in
or
daa
fsubl
subl
les
xchg
and
enter
stos
cmp
std
xchg
mov
ret
mov
adc
sbb
rorb
jmp
mov
inc
jb
sbb
mov
std
mov
mov
stos
inc
mov
sbb
sbb
inc
add
in
jmp
dec
push
add
jg
lret
cmp
mov
jge
add
dec
mov
stc
sub
jbe
lcall
push
repnz
inc
movsb
loope
lods
ss
pop
mov
testb
push
inc
xor
sub
and
or
mov
lret
fidivrl
movsl
or
lret
pop
dec
in
int
outsb
arpl
sub
or
aad
outsl
cmpsb
inc
lret
or
jnp
pop
xchg
sub
add
movsb
lahf
sub
cmp
pusha
add
or
cli
xor
popf
vhsubps
fists
test
push
clc
in
sti
xchg
dec
jmp
dec
testb
jecxz
jle
outsb
aaa
sahf
xor
add
sbb
lahf
cmp
insb
outsb
sti
negl
int3
std
stos
mov
mov
push
pop
pop
stos
aad
xchg
sbb
repnz
add
pop
pop
cmc
xchg
mov
loop
xchg
sarb
jns
or
movsb
sbbl
cmpsl
push
jb
or
mov
in
movb
ret
jp
dec
je
leave
fisubs
ljmp
mov
jnp
mov
jnp
mov
jmp
and
inc
mov
addb
add
jno
push
add
nop
xor
rcr
into
in
or
ljmp
fidivl
or
or
add
ffree
es
dec
fs
add
iret
inc
add
scas
sub
sub
push
aad
stos
inc
add
sbb
push
pop
fwait
std
ret
add
fildl
sbb
jbe
mov
mov
xchg
mov
out
cmpsl
sub
shll
fnsave
fidivs
test
mov
fwait
mov
loopne
mov
sub
xor
and
test
add
fsubl
pop
insl
fimuls
cltd
push
jbe
popf
pop
data16
add
add
jg
fdivl
xor
fdivrl
adc
lds
into
int3
jb
mov
mov
jmp
mov
add
pop
cmp
rcrl
and
fcom
inc
add
mov
scas
pop
mov
lret
jmp
sub
dec
cmp
mov
jbe
add
cmp
dec
scas
mov
lret
adc
not
pop
pop
fcmovbe
sti
mov
mov
js
push
push
sbb
enter
mov
stos
pop
fists
cmp
sub
adc
jb
jge
repz
or
mov
imulb
data16
pushf
mov
mov
xor
mov
addb
mov
jnp
in
out
int3
nop
int
stos
repz
cmpsb
pusha
add
mov
jo
add
out
inc
add
jbe
fsubs
push
das
call
add
mov
or
stc
xchg
int3
ja
mov
sbb
repz
fcmovu
loope
jo
fmul
adc
pop
mov
cmp
or
testb
mov
stc
or
add
sbb
pushf
cmp
push
mov
xor
mov
pusha
add
jmp
jg
add
mov
fnstsw
inc
add
push
mov
pushl
inc
add
and
and
jae
stc
les
sbb
ret
sbb
xchg
mov
mov
mov
xchg
jne
cwtl
les
jle
xchg
add
lret
addb
aaa
addb
decb
sub
jnp
cmp
loopne
mov
jns
add
xor
add
test
fstl
and
and
mov
sub
sub
or
and
lods
adc
pop
lock
test
mov
sub
add
and
mov
movb
xlat
cmc
inc
add
lds
inc
scas
mov
jno
out
dec
in
out
ret
outsb
dec
shl
sub
push
pusha
add
adc
scas
fwait
enter
pop
testl
add
gs
or
cmpl
sub
add
fucomip
push
lahf
call
out
dec
xor
ret
push
and
pop
enter
jecxz
daa
push
xor
sbb
push
pop
push
std
push
or
pop
xchg
inc
inc
add
das
cmp
pop
dec
idiv
fidivs
movb
adc
jle
test
push
decb
or
movsl
and
arpl
add
dec
pop
push
les
cltd
and
xchg
fimuls
mov
push
movb
stos
aaa
and
add
inc
or
inc
add
test
add
pusha
add
xlat
adcl
les
mov
pushf
and
pusha
add
loop
sub
js
inc
xor
icebp
mov
out
rcrb
lret
xchg
aad
jle
add
cmp
jle
out
sub
dec
cmp
cmp
test
and
or
add
inc
ds
movsl
bound
loop
les
add
push
dec
aaa
push
inc
ror
pop
mov
insb
xorl
rcrb
add
mov
in
arpl
jg
jle
inc
jg
ss
add
cmpsb
orl
inc
add
pop
cmp
out
push
int3
loop
add
add
xchg
cmpl
push
call
popf
add
jle
ss
lahf
lea
xlat
ja
add
ja
push
inc
add
fs
dec
je
push
push
push
stos
mov
inc
add
scas
mov
imull
fistpll
iret
ljmp
inc
add
sbb
scas
jmp
ljmp
test
jnp
pop
sbb
lret
add
or
or
add
incb
dec
fmulp
test
call
jge
loopne
mov
clc
test
cld
mov
in
adc
add
cs
cmc
jl
arpl
scas
jp
fstps
adc
or
jmp
xchg
fildl
lret
pop
outsb
mov
jns
pop
push
popa
push
scas
sahf
test
push
ljmp
and
cmp
adc
xor
cld
adc
mov
fmull
add
xchg
sub
add
cmpsl
jl
das
xor
test
add
push
xor
xlat
add
sbb
dec
ret
mov
add
lret
add
xchg
sbb
pop
sub
stc
xchg
outsl
and
stos
jmp
add
aad
faddl
mov
push
mov
cmpsb
testb
sbb
mov
push
enter
add
testl
fldcw
or
inc
cmp
movsb
clc
test
in
mov
add
jmp
push
jo
xchg
pushf
fmulp
and
ljmp
pushf
lret
cmpl
orl
sub
outsb
sub
mov
xchg
push
xchg
sub
aad
dec
ror
jbe
clc
mov
daa
xor
popa
lods
daa
inc
add
and
push
imul
jo
add
xor
pushf
insb
cli
jno
in
fxch
ja
outsl
xchg
lahf
mov
test
fnstcw
add
std
add
add
mov
mov
sub
sbb
fnsave
lret
dec
mov
adc
jmp
shrb
add
jno
mov
push
add
es
cmc
cmp
mov
mov
in
dec
xor
rcr
popf
pop
inc
add
add
add
inc
xorl
cmpsb
xchg
fiadds
nop
and
and
pusha
add
xor
in
and
sarl
ja
mov
leave
mov
pushf
inc
mov
out
jl
add
loope
adc
add
dec
idivb
jg
sbb
popa
cmp
pop
flds
dec
jo
mov
xor
popa
fistpll
adc
xor
and
cmp
jmp
incb
pop
push
mov
lcall
sub
jb
xor
inc
add
sbb
push
mov
sbb
std
sti
nop
dec
mov
xchg
adc
jo
cli
mov
call
mov
mov
addl
pop
jno
sbb
xchg
inc
je
add
cmp
sub
and
push
jne
cmpsl
xor
stc
sub
pop
lods
repz
jne
mov
and
iret
loopne
dec
enter
ja
jno
out
fdivrs
dec
mov
in
pop
loop
jae
loope
arpl
test
imull
lea
outsb
inc
add
clc
in
mov
outsb
sbb
push
addb
sub
fnsave
lock
add
lahf
call
add
imul
pop
and
adc
int
add
push
cli
mov
add
inc
add
mov
adc
fldt
xchg
push
mov
pushf
push
mov
xchg
xchg
aaa
pop
xor
stos
xrelease
in
vfrczps
data16
popa
cld
cltd
stos
cmp
xor
adc
out
je
jae
or
lds
xchg
or
inc
mov
add
loope
fsts
cmpsl
insb
mov
jle
cmp
jg
add
cld
loopne
in
dec
sbb
ret
fildl
sub
mov
idivl
ficoml
movsl
mov
dec
addr16
mov
push
cmp
outsb
pop
ror
mov
mov
mov
call
push
push
sub
mov
fidivrl
fcmove
les
mov
test
sub
scas
int3
cmpsb
movsb
cld
aam
fsin
int
stc
mov
mov
add
es
dec
adc
push
out
adc
xchg
push
add
into
inc
mov
push
add
cmp
add
jno
mov
fnstenv
add
out
repnz
hlt
cld
cwtl
or
xor
pushf
or
add
dec
jmp
in
pop
sbb
fidivrs
lret
cld
rcr
rcrl
adc
test
out
adc
daa
std
out
add
or
xchg
mov
jmp
sbb
or
lret
dec
sub
mov
lret
push
jb
xchg
js
add
inc
pop
jne
test
orl
add
sub
cwtl
sub
ja
shl
push
pop
addr16
dec
pusha
add
lock
add
or
dec
mov
add
addr16
clc
add
inc
add
addb
and
or
jne
sub
aad
pusha
add
test
outsl
dec
xor
sbb
inc
add
push
in
jnp
inc
mov
add
push
out
jmp
sbb
punpcklbw
mov
jb
xchg
lock
in
fdiv
stc
shrl
push
movb
pop
pop
sub
cmpsb
pop
faddl
sub
xor
cli
pop
addb
and
ja
push
lea
mov
out
and
push
add
sub
cmp
add
xor
addb
aam
fcoml
push
hlt
push
jae
pop
iret
sub
out
faddp
add
push
insl
test
add
les
inc
add
in
inc
dec
push
xchg
ljmp
add
fwait
repz
inc
jns
bound
pop
push
inc
jo
add
xchg
test
fsub
push
call
std
cmc
mov
bnd
fiadds
cmpsl
adc
aas
push
out
cwtl
or
std
push
sub
mov
sbb
xchg
fisttpll
icebp
sub
jmp
lods
aaa
movsb
inc
add
add
add
or
repz
jmp
outsl
sbb
js
cmp
gs
sub
cmp
inc
add
hlt
mov
std
inc
sub
fstpt
lods
or
in
pop
xchg
cmp
sti
jl
outsl
or
repz
mov
adc
add
or
ja
jg
adc
cmc
mov
xlat
jl
and
std
in
mov
out
cmp
inc
add
bt
or
das
fildll
xchg
mov
repnz
add
dec
movb
sbb
add
jecxz
push
mov
xchg
testl
cmp
cmpsl
mov
pop
aam
cltd
jbe
std
jne
sub
dec
mov
adc
jns
jecxz
in
arpl
pop
push
mov
rcrb
or
inc
mov
sub
loopne
add
into
or
mov
les
pop
in
rcrb
dec
sbb
addb
mov
dec
xor
lods
xchg
stos
adc
and
sub
orl
leave
push
lods
movb
push
mov
rcl
pop
add
rcll
pop
hlt
in
pushf
xchg
aam
and
and
adc
mov
xchg
jle
pop
cmp
ljmp
imul
jmp
mov
add
xchg
push
cld
sbb
insl
jg
icebp
lods
push
stos
mov
inc
add
add
add
ret
pop
movsl
enter
cs
jp
inc
lock
and
out
mov
aaa
addb
popa
bound
es
push
aam
add
fisttpll
xchg
mov
cld
cmp
dec
sub
inc
add
mov
addr16
into
or
into
jae
add
scas
push
stos
insb
cmpsb
push
popf
scas
jp
adc
add
mov
add
cmp
add
pop
lret
dec
adc
in
inc
add
stos
ja
popa
mov
mov
add
mov
ljmp
sbb
cmp
mov
dec
inc
add
mov
dec
test
mov
jne
xor
mov
ret
mov
sub
jne
add
stc
inc
add
in
fdivrs
pusha
add
push
mov
mov
mov
stos
mov
xchg
test
sub
pop
mov
mov
mov
mov
movsb
js
sub
mov
and
mov
loopne
mov
repnz
push
movsb
push
add
addb
add
rolb
xchg
insl
movb
fadds
add
idivb
addb
add
xchg
js
clc
or
lcall
cmpsb
clc
jmp
sbb
xchg
pop
jle
cmp
add
add
lahf
nop
aam
pop
enter
mov
mov
adc
pop
mov
lea
mov
inc
xchg
sub
xor
inc
add
jle
push
jecxz
cmp
push
ret
xor
fwait
mov
arpl
adc
decb
sbb
aad
nop
movb
inc
add
mov
add
mov
lds
inc
sbb
add
mov
shl
mov
mov
mov
sbb
mov
or
jnp
lret
xchg
insl
mov
add
mov
add
mov
je
dec
or
addb
inc
add
mov
outsl
sbb
daa
fs
shrl
sbb
in
clc
ret
push
pop
mov
cld
jecxz
scas
enter
and
jnp
sti
mov
addb
dec
shl
inc
add
push
sbb
add
xor
addb
add
icebp
or
push
or
sahf
mull
retw
jp
pop
sub
add
test
xchg
out
ret
mov
sub
testb
sti
cmp
add
xchg
dec
addb
fiaddl
or
adc
xchg
push
or
add
mov
inc
add
fmull
insl
xor
rep
jge
mov
add
shll
iret
adcl
and
dec
push
or
and
stc
lods
pusha
add
lret
add
subl
inc
add
sbb
jge
mov
dec
pushf
push
inc
lods
sti
pusha
add
enter
add
xchg
inc
jecxz
rorb
push
add
rorb
jl
cmc
popa
incb
add
insb
or
in
fimull
sti
pop
xor
or
add
add
push
scas
dec
jns
cwtl
pop
imulb
mov
jno
in
pop
loopne
lret
cmp
test
cmp
push
mov
aaa
sub
aam
int3
ljmp
mov
sbb
repz
or
cmp
test
sub
dec
push
inc
add
hlt
js
pop
pop
popf
lret
sbb
sbb
or
es
mov
pop
mov
inc
adc
inc
push
mov
ja
dec
repz
aad
inc
dec
push
push
movsb
lahf
push
and
jne
pop
sbb
pop
jno
mov
add
iret
insb
cs
pop
push
add
mov
fs
into
nop
xchg
xchg
aad
dec
mov
std
cltd
jnp
push
mov
lret
pop
push
mov
mov
dec
or
mov
aam
adc
in
sub
std
les
inc
adc
cmp
push
sbb
xchg
mov
mov
adc
xchg
inc
add
pop
add
or
popa
sub
in
xchg
nop
inc
add
or
adc
add
inc
or
pop
call
add
add
dec
dec
jae
adc
rcrl
js
sbb
adc
add
stos
sub
jg
jge
cmp
or
and
fildll
add
int3
xor
js
scas
or
add
or
cmp
or
sarl
rcll
adc
and
enter
movsl
push
xor
or
xor
and
addr16
add
mov
lret
stos
addb
add
xchg
xor
pop
mov
or
inc
jb
push
mov
xchg
sbbl
xchg
repz
popa
test
shlb
add
xlat
lea
adc
jo
mov
lock
jle
daa
sbb
mov
cli
sbb
in
inc
add
inc
setle
ficoml
push
js
mov
cmp
pusha
add
xlat
pop
or
fldl
add
mov
icebp
mov
inc
xor
in
mov
cs
fbld
add
fimuls
sub
std
and
mov
pop
int3
xchg
mov
iret
xchg
bound
mov
clc
sbbl
mov
pop
jne
call
arpl
add
add
neg
jne
cmp
mov
fstl
xchg
or
add
imul
adc
mov
push
mov
out
cmpsb
sbb
ljmp
fstpt
dec
and
stos
iret
fmull
add
mov
pop
push
cmp
add
mull
jecxz
cmpsl
cs
cmp
dec
mov
jnp
and
bound
loop
mov
push
add
into
jne
clc
dec
and
fs
mov
in
js
popa
rolb
adc
xchg
pop
aam
sbb
add
jne
cmp
and
xor
mov
sub
adc
add
fldenv
movb
aaa
icebp
mov
pop
addr16
lahf
lods
cmp
add
add
lods
mov
pop
arpl
add
adc
enter
inc
pop
jl
js
push
cmp
mov
aas
fiaddl
fwait
mov
movsl
xor
test
cmp
test
xor
aaa
sub
jb
mov
dec
ret
xchg
mov
outsl
cli
or
xor
int
xchg
ljmp
fbstp
inc
clc
rcr
loopne
push
jle
enter
add
movsb
sub
addb
cmp
xor
adc
inc
add
mov
ret
sub
pop
adc
adc
mov
repz
jb
sbb
push
mov
inc
incb
in
outsb
ret
cmpl
inc
cmp
insl
addb
pop
sbb
xor
ret
mov
lret
bound
add
std
xchg
test
scas
and
push
movb
out
lcall
and
mov
add
mov
jno
push
test
mov
xchg
jl
mov
movsl
mov
sub
out
dec
sbb
inc
sub
cmp
sti
mov
addb
bound
adc
movsb
or
rolb
aas
inc
add
xor
sbb
and
add
dec
fiadds
xlat
lret
jns
sahf
into
fmul
pusha
add
sbb
mov
and
ds
push
clc
loopne
dec
and
sub
dec
pop
shl
xlat
daa
jnp
sub
mov
iret
inc
add
int
fnstcw
and
xor
sub
jp
push
pushf
aas
lret
cmp
add
pop
das
loope
es
je
aaa
lods
stc
push
shl
lea
ds
aam
sbb
nop
lret
push
cwtl
out
pop
push
lea
add
and
push
cmp
mov
loope
add
sbb
fiaddl
and
xchg
lret
movsl
pop
rcr
in
inc
add
mov
cmp
shll
inc
inc
add
inc
add
xor
jnp
or
adc
and
adc
add
add
add
xchg
mov
movsb
rcrb
insb
adc
pushf
cwtl
sahf
int3
mov
jecxz
ss
adc
into
mov
clc
add
dec
les
sbbl
dec
or
mov
jecxz
in
lret
or
jne
outsl
ds
pop
push
sub
dec
push
add
je
bnd
jge,pt
fidivs
lret
xor
test
sbb
fsubrs
rorb
adc
jnp
add
sti
push
xor
add
sti
mov
add
int
xor
xchg
dec
les
mov
add
mov
popf
nop
sbb
push
sub
jmp
xlat
int
mov
mov
dec
xchg
jg
sbb
out
push
aas
xor
test
mov
ret
cmpsb
outsb
dec
xor
in
divb
push
sbb
add
pusha
add
pop
lahf
add
in
jmp
fisubrs
and
add
push
fndisi(8087
mov
mov
adc
jle
in
xor
les
das
jno
out
in
sub
loope
nop
mov
sbb
add
xlat
ds
and
push
jne
or
push
mov
fs
test
std
popf
repnz
sahf
fstps
mov
in
jle
xor
aam
adc
add
add
sub
mov
mov
add
sbb
inc
add
dec
mov
mov
sub
shlb
sub
pushf
in
sub
cmpsb
jne
jg
sahf
push
fsubs
sub
or
mov
cmp
pop
push
or
popa
sbb
add
adc
xlat
loop
push
push
dec
test
je
loope
inc
add
jae
das
loopne
dec
xor
dec
lahf
mov
or
sub
jmp
int
xlat
push
mov
xchg
nop
or
xor
add
cmp
cwtl
leave
mov
mov
fwait
mov
ret
jmp
outsb
or
mov
add
icebp
addb
movb
xchg
xchg
and
into
mov
add
mov
test
ret
ljmp
outsl
lret
popf
add
xor
mov
add
add
sbb
add
sti
xor
mov
xor
insb
inc
add
insl
fmuls
add
and
loop
divb
sub
loopne
stos
xor
adc
loop
pop
mov
push
mov
xchg
cmpsl
out
icebp
es
movsl
adc
jno
int3
dec
push
pop
mov
fsubl
inc
mov
xchg
adc
popa
jo
add
and
addb
mov
ljmp
addb
mov
mov
pop
enter
or
addr16
lret
js
shrb
push
fwait
aam
into
sub
data16
xor
xor
add
movsb
pop
jno
jecxz
mov
inc
add
sbb
rolb
push
aad
stos
jne
or
ret
stos
xchg
push
rcl
clc
jge
or
cs
clc
bound
sti
fildll
outsl
test
push
add
xchg
lods
push
sub
dec
push
enter
mov
inc
add
movsb
pop
je
push
arpl
ljmp
xchg
cmpsl
cmp
fsubs
lds
out
lods
push
push
dec
xlat
mov
mov
movb
add
mov
call
ficoms
and
incb
and
scas
pop
outsb
lds
mov
mov
sub
pop
aas
mov
mov
or
dec
mov
pop
dec
cmp
outsb
push
decb
mov
popf
push
in
xchg
fcoml
jmp
pop
pushf
xchg
dec
cld
mov
mov
adc
and
inc
add
xchg
add
sahf
fisttpll
or
insb
pushl
lcall
xor
gs
mov
add
xor
test
jp
andl
lea
movb
call
incl
push
or
cmpsb
mov
xchg
push
push
or
inc
add
add
and
jne
popf
push
jle
adc
fiadds
mov
mov
xchg
in
adc
mov
lea
pop
test
mov
pusha
add
cmp
dec
xor
lods
jp
xchg
call
nop
ljmp
add
and
mov
shrb
movb
pusha
add
insl
cwtl
data16
jecxz
cmpsb
or
lea
repnz
andl
sbb
add
fadds
dec
pop
cmp
dec
push
push
iret
inc
lock
pop
sub
pop
and
call
adc
int3
nop
pusha
add
addr16
ret
push
and
pop
adc
and
mov
jecxz
sbb
popa
lahf
les
test
icebp
add
sub
add
daa
ret
pop
jae
ret
ficoms
jns
iret
dec
scas
sbb
ja
pop
sbb
add
das
or
add
mov
sub
push
ds
rolb
fwait
lahf
jge
pop
mov
ret
cmpsb
gs
xchg
and
xchg
in
movb
insl
lds
rcrb
ret
clc
movb
push
test
xchg
sbb
jae
mov
push
rolb
or
xor
jns
or
mov
push
fucomip
push
add
add
call
scas
pusha
add
jb
add
xlat
es
push
movb
sub
cmp
rclb
adc
pop
pusha
add
in
mov
pop
movsb
fsub
lret
insb
sti
adc
add
xchg
dec
push
mov
adc
out
jns
push
mov
mov
push
stos
bound
fwait
add
popl
dec
insl
ret
insb
sub
xchg
arpl
sti
cmp
loopne
fwait
mov
iret
jb
bound
fdivrl
add
add
adc
add
add
push
dec
psllw
mov
test
mov
mov
es
mov
mov
mov
xor
add
xor
stc
testb
mov
cmpl
xchg
push
xchg
lods
test
dec
les
int
stos
addb
fidivrs
movsl
or
mov
add
or
adc
mov
or
mov
mov
inc
add
dec
push
insb
clc
rcr
xchg
movsl
jg
add
dec
aaa
xchg
outsb
push
jbe
mov
frstor
push
test
sub
scas
popf
pop
mov
test
test
push
mov
enter
or
jmp
push
sub
repz
das
flds
adc
mov
fs
add
addb
add
inc
inc
and
mov
imul
cmp
into
dec
loopne
lods
dec
test
hlt
rolb
jno
jmp
cld
rcr
adc
inc
add
xor
popl
add
addb
les
pop
jnp
insl
cmp
add
popf
loopne
pop
mov
ja
push
jno
sbb
push
jmp
out
out
scas
int3
out
outsl
repz
cwtl
shrl
jno
icebp
js
sahf
mov
mov
xchg
sub
dec
test
sbb
add
aam
mov
xor
repz
mov
cmp
jg
in
outsb
lahf
fwait
push
sub
lds
add
test
add
mov
cmp
adc
insb
xor
cmp
add
cltd
push
mov
idivl
scas
mov
icebp
inc
mov
shlb
sub
sbb
sbbl
mov
cmp
inc
je
pop
xor
add
push
xor
add
testl
ret
leave
lret
in
inc
xor
sbb
mov
add
aas
xor
sub
js
inc
add
xor
adc
add
add
cmc
cmp
hlt
loopne
pop
xchg
add
test
add
test
inc
aas
std
jle
add
cmpsb
mov
add
std
sub
rcr
xor
xchg
outsl
lea
fwait
and
sbb
out
aad
outsl
repnz
push
sub
filds
add
stos
fstps
and
imul
cld
cmp
jne
or
mov
insb
mov
or
lods
ss
sar
mov
dec
lea
psrlw
std
aaa
push
sbb
inc
pop
stc
add
sarl
js
inc
orl
push
add
jmp
fsubrs
sub
add
mov
out
jle
add
stc
and
int
inc
out
jle
int3
pop
leave
inc
add
loop
daa
jne
ljmp
arpl
add
mov
divb
adc
xlat
mov
addb
push
test
icebp
aam
adc
xor
dec
add
fidivrs
jecxz
xor
add
lea
loopne
popf
aaa
loope
into
mov
iret
cmp
outsl
cmp
nop
mov
imul
in
and
inc
cmp
xchg
ds
bound
test
lret
out
cli
ds
mov
cltd
push
cmp
and
pop
mov
inc
pop
pop
adc
cmc
and
dec
xchg
cmp
mov
fs
movb
mov
je
test
sbb
add
jo
or
jne
mov
das
cwtl
int3
shll
sub
nop
imul
das
pushf
in
gs
xchg
inc
add
movsb
addb
mov
jl
sub
loopne
jnp
xchg
jecxz
cmc
push
popf
sub
adc
pop
xor
adc
test
mull
xor
pushf
rolb
pop
ljmp
dec
mov
ds
jg
add
and
xchg
mov
fcomp
inc
add
aas
sbb
mov
frstor
movsb
sub
dec
add
inc
loop
inc
imull
cmp
inc
add
mov
xor
inc
jmp
lahf
notb
push
xor
popa
xchg
cmc
mov
add
inc
ret
adc
popa
sbb
pop
fwait
jecxz
pop
sub
mov
loopne
sbb
add
add
gs
mov
ds
cmp
push
testb
inc
add
or
outsl
int
mov
fildl
push
pop
mov
icebp
mov
push
add
lods
mov
and
in
add
in
movb
addr16
add
ja
es
mov
out
les
sub
add
jnp,pn
arpl
mov
imul
imul
mull
xchg
lea
adc
lock
movsb
pop
adc
shll
push
les
pop
lock
xchg
outsb
mov
cltd
dec
adc
fidivl
and
js
jg
add
adc
add
addb
cmc
in
andl
addb
add
jnp
mov
inc
add
pop
mov
jne
mov
dec
dec
ljmp
das
out
jle
add
call
or
and
add
jp
push
or
xor
and
lret
rolb
mov
xchg
addb
add
push
icebp
jo
add
xacquire
mov
sbb
jb
fsubrl
mov
cs
lret
mov
movsl
xor
inc
cmp
add
adc
adc
push
xchg
adc
xor
in
xchg
imul
add
mov
fbld
mov
add
jecxz
mov
out
xor
icebp
mov
inc
pop
bound
and
hlt
imul
mov
inc
mov
mov
lods
adc
sub
addb
add
out
mov
xor
outsb
mov
leave
sub
inc
fwait
insl
pop
or
popf
mov
jmp
les
push
lods
pop
pop
inc
add
and
mov
xchg
xchg
and
iret
mov
jge
jecxz
and
add
dec
addr16
push
and
jp
movb
sub
mov
aad
negb
mov
xlat
jmp
sbb
mov
push
push
jecxz
mov
mov
cld
rorl
xchg
shl
lods
push
jmp
sbb
add
xchg
popa
jmp
inc
add
cmpsb
dec
enter
test
add
subl
sarb
xchg
scas
lock
xchg
mov
push
enter
int
sti
repnz
cmp
clc
ja
dec
ss
jmp
mov
jno
jle
jae
add
cmp
pop
push
push
push
or
cmpsl
scas
icebp
cmpsb
push
pop
xor
shll
inc
add
xchg
mov
mov
loope
into
xor
movsl
pop
jno
es
add
in
fimuls
bound
arpl
outsb
push
jo
dec
repnz
sbb
ror
das
lea
int
inc
mov
ljmp
push
xor
enter
daa
dec
add
mov
and
push
mov
sbb
add
imul
xor
addb
sbb
add
mov
jbe
daa
cmp
mov
jbe
arpl
or
jbe
push
das
in
cmp
dec
sarb
adc
fsts
dec
inc
add
js
or
in
jne
and
pop
adc
cmp
push
mov
mov
movsb
imul
add
pop
jae
dec
sub
addb
cs
js
inc
add
add
pop
mov
push
add
loop
xor
adc
add
cmp
add
jp
sub
mov
jne
pop
aaa
jae
sbb
dec
arpl
mov
dec
repnz
sbb
adc
sbb
lea
data16
xchg
add
std
pop
xrelease
sahf
ret
test
in
sahf
clc
jle
dec
xchg
bnd
add
lret
mov
loop
adc
pop
bound
outsb
test
cmc
call
dec
lret
mov
es
fiadds
iret
jle
outsb
outsb
jns
pop
inc
movb
notl
push
jmp
ljmp
cwtl
jle
xchg
mov
mov
add
imul
sahf
shr
and
inc
sbb
dec
pushf
pop
shl
jne
shlb
les
iret
jp
xchg
aaa
inc
add
imul
fsubl
mov
seta
mov
push
leave
jbe
mov
nop
fldt
je
push
addb
js
pop
sbb
fldcw
movb
leave
mov
cmp
add
stc
sbb
imul
sbb
push
loope
and
xor
out
sti
cmp
ljmp
cmp
cmpsb
test
sbb
xchg
mov
add
pop
mov
add
mov
dec
idivb
out
pop
popa
addb
push
shl
jo
out
mov
iret
adc
jl
add
dec
jle
addb
test
sub
xchg
sbb
xor
push
sub
cld
les
rolb
xor
int
and
cmp
cltd
sbb
insb
mov
sub
pop
jecxz
push
push
inc
push
popf
nop
jmp
arpl
push
lds
sub
nop
xchg
jb
fisttps
dec
call
insb
adc
and
rolb
insl
int
xor
aaa
pop
xlat
popl
xchg
out
stos
repz
popf
repnz
addr16
cmp
jne
nop
aaa
mov
xchg
inc
add
jno
sub
cld
pop
dec
outsl
cmpsb
dec
mov
fcomps
xor
mov
fsub
jns
mov
sbb
add
mov
jge
push
bound
fcmove
mov
push
lods
inc
push
jb
add
push
pop
das
shll
movb
pop
stos
add
scas
or
mov
iret
and
jp
mov
fcomps
mov
cmp
jo
cs
mov
add
bts
mov
or
test
pushf
hlt
add
hlt
int
addb
into
xor
rep
mov
loope
mov
out
mov
sub
add
out
pop
mov
dec
add
sub
jns
and
mov
mov
sahf
xchg
and
rolb
mov
insb
xor
mov
fwait
add
lds
cmp
pop
inc
pushf
je
pop
fstpt
jo
sbb
faddl
addr16
ja
stos
pop
dec
imul
out
mov
into
addb
and
insl
rcr
lds
gs
fildl
sbb
ds
mov
mov
test
loop
jnp
and
repz
cld
mov
mov
add
nop
sbb
or
jmp
jg
lods
cwtl
mov
clc
test
scas
adc
inc
popa
mov
mov
push
add
inc
add
add
inc
add
xchg
aam
jmp
dec
xchg
mov
sub
fwait
mov
cmpsl
or
adc
clc
ds
add
aam
jle
js
inc
ret
dec
jmp
testb
scas
shr
scas
jb
nop
mov
or
out
out
dec
fimuls
pop
adc
ds
add
out
aad
sub
inc
add
loope
sbbl
aas
add
out
les
cmp
sub
dec
adc
int
adc
add
push
jp
mov
add
rolb
pop
lret
mov
les
in
pop
mov
aaa
sub
mov
icebp
or
add
mov
sub
add
jmp
jmp
bound
cltd
xchg
jb
xor
negb
adc
data16
jge
outsl
stc
scas
shl
inc
add
insl
std
jns
mov
jg
outsl
mov
bound
adc
int3
mov
ret
add
movzwl
add
push
add
lret
out
mov
cmp
jae
mov
add
insl
inc
add
push
push
sbb
loop
mov
mov
addb
xor
mov
sub
xchg
push
jmp
orl
add
dec
mov
repz
les
stos
mov
mov
add
into
int3
inc
add
or
daa
mov
cli
mov
mov
out
and
ficoms
sarb
xchg
cmp
add
or
push
das
iret
pop
and
add
movsl
cld
std
cli
sbb
push
inc
and
push
lds
cmp
pop
sbb
add
mov
jmp
add
daa
xchg
or
lods
out
push
add
add
xchg
xor
icebp
mov
lods
addb
lcall
popa
ss
jnp
add
jg
inc
xchg
xlat
repz
stos
ret
mov
into
mov
or
xlat
in
inc
pop
shrl
and
push
xchg
dec
dec
jns
pop
sbb
push
mov
adc
movl
ljmp
xlat
jne
push
adc
rorl
sub
add
or
incb
add
add
je
std
adc
pop
faddl
push
icebp
inc
add
sub
sbb
sbb
fbstp
addb
dec
pusha
add
mov
insl
es
pop
es
inc
add
daa
fdivrs
sahf
xchg
shrl
xchg
pop
push
bound
scas
and
xor
or
push
mov
jbe
lods
lods
lcall
ja
loope
adc
xor
jmp
add
mov
jne
loop
fld
roll
bound
mov
push
dec
gs
jl
into
call
jae
jbe
cmp
add
push
pop
insb
push
add
lcall
popf
movsl
negl
or
dec
add
out
addb
add
push
stc
fidivl
out
jecxz
mov
push
icebp
frstor
xor
push
xchg
je
outsb
lods
lret
popa
loop
jbe
cmp
test
aad
inc
add
mov
std
pop
xor
iret
nop
or
or
and
mov
add
push
mov
bound
adc
test
jle
addb
add
pop
lds
and
faddp
xchg
insl
out
jne
mov
mov
pusha
add
fisubrl
stos
outsb
ljmp
inc
add
add
mov
inc
dec
test
mov
xchg
push
jp
loop
loope
pop
outsl
jmp
dec
sub
pushf
nop
leave
test
add
movb
imul
out
push
cmp
outsl
mov
jl
and
clc
inc
add
adc
out
rcrb
mov
fs
xor
sub
pop
mov
xor
lods
mov
jmp
cmp
mov
incl
out
xor
test
jp
sbb
out
adc
hlt
cmp
xchg
jb
mov
inc
add
repnz
js
mov
les
xchg
jp
mov
outsb
sbb
scas
cmc
fimuls
add
jns
push
jmp
xchg
and
and
adc
cmp
mov
jbe
sbb
repz
jno
or
cwtl
mov
sbb
lock
clc
lods
and
inc
addb
adc
add
sub
repnz
and
xor
sbb
adc
adc
rorl
pop
hlt
aaa
in
repnz
jae
fwait
sub
add
xor
scas
shlb
fs
ss
lods
mov
and
xlat
decl
pop
adc
mov
idiv
xor
pushf
sti
rolb
test
add
dec
sbb
jmp
mov
inc
psrad
loope
and
add
mov
pushl
shl
shrl
mov
jge
out
enter
rcrl
outsb
sbb
enter
mov
xchg
icebp
and
xchg
addl
ss
cmc
and
ljmp
push
mov
test
mov
sbb
sub
or
cld
xchg
lret
adc
inc
add
jl
ljmp
push
cmp
and
out
int3
adc
test
lods
push
imul
lret
inc
inc
add
mov
add
pusha
add
mov
pushf
cmp
cmp
adc
push
roll
add
mov
xchg
mov
aas
jns
mov
loop
mov
add
and
ja
jmp
jb
jmp
out
adc
cmp
les
mov
jecxz
lcall
fnstsw
cmpsl
pop
mov
cmpsb
gs
push
mov
sub
jmp
and
add
js
imul
add
test
lret
push
outsb
imul
loop
mov
mov
cmpsb
outsl
mov
xor
aam
jno
call
jbe
stc
shr
pop
daa
loopne
or
mov
mov
add
jno
xchg
adc
add
sbb
xchg
jecxz
jne
rolb
add
lahf
imull
jge
jp
out
sub
sub
sub
xchg
imul
lock
add
mov
mov
jne
add
mov
sub
enter
mov
mov
and
mov
dec
arpl
push
xor
movsl
cld
lret
frstor
add
push
pop
out
lahf
dec
jg
xor
aaa
aam
xchg
inc
add
add
xor
in
sbb
mov
rorb
jnp
add
adc
add
xlat
push
jne
lods
movsb
cmp
cmp
dec
pop
mov
dec
lcall
mov
das
cwtl
test
adc
rorl
push
scas
loopne
add
push
add
bound
ficompl
loop
sbb
push
sub
ds
enter
mov
push
and
mov
mov
xor
ljmp
mov
popa
ja
loope
addr16
mov
xchg
aad
pop
stos
jmp
jmp
and
add
mov
lds
jno
push
cmp
out
adc
dec
inc
add
les
fs
mov
adc
test
repnz
loop
sub
in
outsb
pop
mov
lock
jle
mov
notb
adc
add
pushf
push
add
outsl
xchg
lret
in
jg
jp
in
repz
mov
cld
addb
dec
dec
add
arpl
xchg
jp
imul
or
shll
hlt
sub
or
add
pop
lahf
cli
in
inc
add
push
add
out
ret
pop
rolb
push
stos
or
mov
xor
add
shl
pop
dec
pop
mov
add
push
mov
sbbl
in
mov
ds
and
mov
cmp
adc
xchg
xchg
in
and
pop
adc
movsb
adc
xchg
adcl
mov
add
icebp
mov
jae
add
push
adc
add
jne
ljmp
push
lret
clc
sbbl
pop
mov
dec
shrl
pop
mov
int
dec
jp
dec
pop
sbb
cli
xor
icebp
pop
stos
jns
sbb
add
mov
aas
sarl
ss
sahf
sarl
sbb
test
cltd
and
add
stc
rcrl
and
subl
mov
rolb
add
lret
xlat
cmp
shll
daa
lods
pop
and
push
shl
jge
mov
jno
xor
stos
hlt
mov
xor
mov
mov
inc
xlat
outsb
mov
fstpl
add
jo
add
xor
ret
xchg
jg
xor
mov
movsl
inc
add
xchg
cmp
pop
movd
loope
pop
mov
adc
test
mov
jecxz
lea
add
cmc
arpl
lods
sbb
push
int3
inc
add
ficoml
je
ds
add
xchg
lahf
sbb
add
add
dec
and
lcall
xchg
xor
mov
add
xchg
push
idivb
jg
shl
sub
push
outsl
popf
into
jns
add
addb
fcmovu
pop
mov
movsl
xchg
push
jne
mov
add
add
mov
adc
divb
out
dec
repz
cmp
add
cmp
ret
sub
mov
add
add
add
mov
lahf
loop
in
test
fsub
divl
sahf
and
int3
jge
mov
enter
mov
xchg
dec
sub
lods
out
fs
dec
mov
mov
nop
int
lods
pop
xlat
pop
push
inc
mov
sti
sub
jecxz
mov
nop
mov
outsb
jge
cwtl
std
daa
jle
jb
loope
add
call
mov
dec
cmc
sahf
dec
pop
test
je
xor
jbe
jge
cltd
js
sahf
cmpsb
mov
out
add
out
mov
inc
add
cwtd
rcpps
ss
lock
jnp
test
rol
add
pop
pop
mov
jo
ja
pop
ss
mov
aam
pop
repz
aas
and
push
adc
inc
imul
enter
mov
imul
ret
or
in
in
mov
xor
loope
and
jp
cmp
fucomip
lock
scas
leave
push
test
pop
loopne
push
daa
mov
cmp
inc
or
xor
sub
sbb
bnd
iret
gs
lahf
mov
jecxz
mov
mov
jne
movsb
xchg
js
cwtd
xor
mov
pop
jb
outsb
ljmp
pop
push
push
fdiv
pusha
add
xlat
aam
ret
add
add
dec
aad
add
push
ja
and
popa
in
push
or
mov
adc
and
dec
dec
cmp
sbb
mov
fstps
loopne
popf
pop
cmc
test
xchg
mov
clc
adc
outsb
cmc
bound
cmc
ja
out
aas
sbb
adc
pop
test
addr16
shl
popa
adc
adc
dec
xchg
rolb
test
js
pop
dec
sub
push
outsl
sub
fdivp
push
add
mov
and
sub
cwtl
inc
mov
sbb
in
jge
push
xchg
in
add
adc
add
call
add
jns
sub
cmpsl
icebp
je
cli
sti
out
cmpsl
or
outsb
scas
adc
cmc
ficomps
add
int3
pusha
add
das
xchg
xchg
test
mov
adc
or
adc
jae
pop
push
fucomip
addb
and
inc
add
dec
dec
scas
and
in
xchg
daa
pushl
pop
repz
in
int
lods
dec
subl
orl
fdivl
addb
push
cmp
imulb
push
mov
and
add
xchg
dec
sti
lret
gs
mov
add
cmp
fdivrs
add
cmpsl
cmp
jge
cltd
mov
add
fisubs
or
dec
flds
add
mov
ror
repnz
or
hlt
jnp
jnp
cmp
sub
dec
lahf
mov
push
cld
scas
sarb
jge
mov
ja
xchg
add
incb
test
or
push
iret
mov
test
jp
iret
out
sbb
fsubrs
jecxz
cmp
pop
repz
popa
lahf
add
add
sbb
sub
nop
jle
stos
adc
lret
push
pop
mov
jge
loopne
mov
dec
push
mov
sub
sbb
lds
inc
add
out
or
call
jecxz
out
mov
cmp
jb
lcall
cmp
enter
cs
xchg
inc
cltd
ja
stc
in
inc
add
push
add
jbe
add
sbb
add
and
push
adc
dec
cld
sbb
stc
push
sub
movsb
out
xchg
jbe
dec
mov
add
in
aaa
mov
add
pushf
xchg
cmpsl
pop
ficoms
mov
lock
outsb
mov
sbb
xor
dec
hlt
aas
jo,pt
jnp
inc
add
ret
rolb
daa
shrb
insb
adc
cmc
xlat
lods
xor
and
add
fwait
shrl
imul
mov
mov
mov
repz
xchg
push
xor
sbb
adc
fsub
cmpsl
and
sub
rolb
add
fcmovu
incb
sub
adc
aad
jb
lea
out
xchg
dec
dec
or
movb
add
loope
push
icebp
sub
push
lods
adcl
mov
or
shll
les
sbb
dec
fmul
adc
out
into
xor
leave
mov
mov
dec
mov
jbe
mov
fmulp
mov
cli
jns
dec
bound
pop
sbb
decl
jne
mov
sbb
inc
add
add
add
sub
pop
in
arpl
add
jg
cmc
iret
pop
xchg
add
xchg
mov
add
enter
mov
popf
pusha
add
and
imul
add
mov
into
push
in
daa
cmpsb
fiadds
cs
in
mov
mov
push
mulb
mov
mov
repnz
lds
es
or
fsubrl
jmp
movsb
cmp
push
pop
mov
mov
add
shl
scas
imul
mov
add
sbb
mov
add
data16
mov
xchg
shll
lds
pop
pop
into
in
and
inc
loop
dec
outsl
xchg
adc
mov
sti
sets
fisubrs
cmpsl
call
mov
cltd
pop
push
leave
int
add
jns
cmp
or
pop
enter
dec
xchg
lock
pop
shlb
push
mov
movsb
jb
add
xor
pop
push
add
push
icebp
mov
xor
arpl
xchg
imul
mov
jmp
scas
mov
test
mov
jne
xor
imul
sub
add
push
pop
ss
mov
add
jecxz
movsl
push
pop
nop
dec
scas
mov
fimull
in
outsb
stos
imul
jg
stos
pop
mov
add
add
mov
add
add
inc
inc
in
mov
add
mov
push
add
jmp
xchg
jge
mov
testb
int
add
pop
ss
and
ret
add
std
inc
cld
test
es
sbb
fbld
add
imul
push
jbe
movb
add
dec
cmp
fwait
lods
mov
ja
add
ss
movsb
dec
fs
and
data16
dec
jmp
add
in
icebp
push
xor
mov
sbb
lret
mov
sub
lds
js
jo
arpl
mov
adc
outsl
imul
inc
add
sbb
stc
nop
jb
add
xchg
stc
nop
jb
iret
bound
addb
add
add
stc
nop
jb
icebp
cli
add
out
jl
dec
or
nop
jb
ljmp
mov
adc
nop
jb
add
stc
nop
jb
inc
add
ljmp
ja
out
push
stc
nop
jb
xchg
ljmp
loop
stc
nop
jb
bound
mov
dec
add
stc
nop
jb
ds
xchg
dec
fs
rep
stc
nop
jb
mov
add
add
push
mov
xchg
ret
jbe
add
imulb
enter
jb
mov
scas
add
test
add
stc
nop
jb
jae
mov
cmc
inc
add
pop
mov
call
stc
nop
jb
add
add
nop
jb
jnp
sub
jne
stc
nop
jb
incb
out
out
pop
stc
nop
jb
and
dec
add
add
push
stc
nop
jb
add
stos
hlt
ljmp
mov
xchg
ret
add
dec
add
mov
xchg
ret
add
jb
mov
cld
jmp
add
add
add
mov
inc
stc
nop
jb
xor
push
push
sahf
mov
stc
nop
jb
add
fildl
add
and
lods
pop
stc
nop
jb
pop
bound
mov
mov
stc
nop
jb
add
or
push
mov
xchg
ret
add
add
add
adc
jle
inc
add
add
mov
push
mov
cmp
sbb
add
add
add
nop
jb
xor
ljmp
loopne
cld
jmp
push
add
xchg
jb
add
adc
add
add
stc
nop
jb
add
jp
add
clc
sti
inc
add
add
xorb
add
stc
nop
jb
add
shlb
push
mov
xchg
ret
add
adcb
pop
dec
push
push
mov
xchg
ret
mov
push
push
mov
xchg
ret
add
hlt
cli
and
stos
push
mov
xchg
ret
add
sbb
add
lahf
add
stc
nop
jb
add
mov
add
nop
jb
xor
fwait
leave
mov
stc
nop
jb
inc
faddl
scas
push
add
jb
add
add
jmp
stc
nop
jb
jl
add
ret
stc
nop
jb
push
add
mov
stc
nop
jb
icebp
mov
add
xchg
inc
add
fimull
nop
jb
add
test
sldt
stc
nop
jb
add
mov
add
nop
jb
add
add
add
cld
jmp
add
repz
insb
mov
nop
cld
jmp
push
add
pop
push
mov
xchg
ret
add
add
mov
jb
jbe
add
jae
add
nop
jb
jbe
bound
and
mov
stc
nop
jb
add
add
rolb
movswl
stc
nop
jb
push
add
push
mov
aas
or
add
nop
jb
mov
dec
add
nop
jb
add
mov
stc
nop
jb
add
bound
popa
add
nop
jb
xchg
ljmp
jb
add
add
shlb
add
cld
ljmp
pop
stc
nop
jb
add
fwait
add
adc
nop
jb
mov
sub
xor
nop
cld
jmp
ds
push
inc
pop
insl
call
stc
nop
jb
add
add
pushl
push
mov
xchg
ret
sub
call
nop
cld
jmp
iret
xchg
lea
nop
jb
add
add
mov
imul
cld
incl
and
nop
cld
jmp
bound
icebp
add
sbb
cmp
movsl
add
add
mov
and
push
push
mov
xchg
ret
bound
add
xchg
loop
mov
stc
nop
jb
add
add
stc
nop
jb
mov
test
mov
xor
push
mov
xchg
ret
add
dec
bound
test
or
add
add
add
jb
inc
add
cs
stc
nop
jb
call
add
mov
xchg
ret
inc
add
hlt
and
cmp
nop
cld
jmp
add
push
mov
nop
cld
jmp
icebp
out
add
jb
add
add
cmp
stc
nop
jb
xchg
add
aam
call
stc
nop
jb
dec
add
nop
jb
fwait
and
add
addb
and
xor
loop
mov
stc
nop
jb
bound
add
adc
lds
insb
imul
stc
nop
jb
jb
mov
add
jnp
inc
add
add
sub
or
jb
fildl
jnp
add
mov
stc
nop
jb
push
add
inc
sbb
out
inc
add
jnp
scas
push
jb
shl
stc
nop
jb
add
add
add
cmp
jb
add
add
fwait
gs
add
stc
nop
jb
add
dec
add
add
stc
nop
jb
mov
adc
ljmp
add
stc
nop
jb
dec
add
mov
nop
jb
jl
add
add
lea
stc
nop
jb
add
sub
push
mov
xchg
ret
jae
add
inc
sub
nop
jb
add
add
add
subb
add
xchg
mov
nop
jb
add
add
mov
stc
nop
jb
sub
adc
mov
push
mov
xchg
ret
add
add
jb
add
add
add
jne
stc
nop
jb
test
inc
add
shr
nop
cld
jmp
dec
add
test
shr
stc
nop
jb
dec
add
add
sub
xchg
call
and
add
scas
decl
sub
add
add
inc
add
push
mov
xchg
ret
out
sub
add
stc
nop
jb
add
xchg
test
shlb
lock
fldt
hlt
inc
add
jl
fistpl
dec
and
stc
nop
jb
and
shr
nop
cld
jmp
mov
dec
adc
pop
arpl
les
mov
xchg
ret
faddl
add
add
nop
cld
jmp
mov
add
xor
push
mov
xchg
ret
xchg
scas
sbb
add
add
stc
nop
jb
add
jb
sbb
nop
jb
add
out
add
sbb
push
xor
andb
add
xor
mov
stc
nop
jb
add
add
hlt
scas
add
push
mov
xchg
ret
call
jne
stc
nop
jb
add
int3
push
push
mov
xchg
ret
dec
add
add
dec
xor
stc
nop
jb
lds
push
xchg
stc
nop
jb
add
add
add
and
enter
and
add
add
jb
add
stos
push
nop
cld
jmp
out
mov
sub
call
add
out
add
mov
stc
nop
jb
add
jl
add
cmp
nop
jb
add
xchg
add
push
je
stc
nop
jb
add
dec
add
nop
jb
xchg
add
nop
jb
add
add
mov
stc
nop
jb
jl
out
add
lods
nop
cld
jmp
add
sub
mov
jne
nop
cld
jmp
add
mov
outsb
and
nop
jb
jbe
add
pop
inc
add
leave
nop
cld
jmp
ljmp
ret
inc
addb
imul
nop
cld
jmp
incb
mov
dec
mov
stc
nop
jb
add
push
stc
nop
jb
add
add
jmp
stc
nop
jb
adc
add
je
stc
nop
jb
add
jb
stos
add
test
xchg
enter
nop
jb
call
rolb
add
add
nop
jb
add
cli
jecxz
and
push
mov
xchg
ret
out
jae
aam
mov
xor
add
stc
nop
jb
dec
dec
pop
stc
nop
jb
add
add
add
cmp
nop
cld
jmp
add
add
add
cmpb
add
add
jb
add
push
insb
pusha
push
mov
xchg
ret
dec
cli
add
add
mov
stc
nop
jb
adc
ljmp
lods
stc
nop
jb
pop
add
sub
push
push
mov
xchg
ret
push
add
add
nop
jb
hlt
jae
fsubr
xor
loope
and
add
push
mov
xchg
ret
add
into
mov
stc
nop
jb
add
inc
add
stos
or
jb
add
nop
cld
jmp
add
add
push
push
mov
xchg
ret
stos
lds
add
imul
sbb
add
jl
jmp
nop
jb
scas
add
icebp
rep
stc
nop
jb
add
scas
add
add
stos
push
mov
xchg
ret
incb
push
mov
jb
add
add
push
loopne
nop
jb
add
push
gs
sub
nop
cld
jmp
mov
add
stc
nop
jb
incb
jb
hlt
insl
xor
stc
nop
jb
iret
add
jbe
add
push
push
mov
xchg
ret
add
inc
lock
nop
jb
hlt
es
mov
andb
add
out
add
xorl
stc
nop
jb
xor
scas
add
cmp
mov
jb
cmp
cmpb
jb
push
add
inc
add
add
stc
nop
jb
add
sub
nop
cld
jmp
adc
sub
add
nop
jb
add
lds
ljmp
add
decl
add
nop
jb
sub
add
xchg
jle
rorl
add
stc
nop
jb
push
push
add
aas
in
add
add
call
stc
nop
jb
test
add
add
and
adc
nop
jb
push
add
add
adcl
rclb
add
add
xchg
cmp
mov
xchg
ret
mov
mov
add
nop
jb
stos
jl
bound
test
nop
jb
cmp
sbb
nop
cld
jmp
fstpt
iret
or
repz
incl
jnp
out
xor
add
jb
xchg
add
xor
popa
add
mov
xchg
ret
add
add
cmc
decl
jb
sub
idiv
stc
nop
jb
xchg
addb
movsl
gs
in
inc
stc
nop
jb
xchg
add
andb
stc
nop
jb
scas
add
dec
xor
nop
cld
jmp
add
mov
jne
push
mov
xchg
ret
add
bound
jmp
add
add
jb
add
pop
add
xor
clc
je
stc
nop
jb
jae
jbe
mov
nop
cld
jmp
add
xchg
call
lcall
loope
add
add
in
jne
stc
nop
jb
add
rcr
mov
push
mov
xchg
ret
out
lds
mov
stc
nop
jb
fwait
mov
add
imul
add
daa
loope
add
add
push
push
mov
xchg
ret
add
fcoml
mov
push
mov
xchg
ret
mov
enter
xor
inc
add
xor
mov
arpl
cld
jmp
add
hlt
push
insl
call
nop
cld
jmp
xchg
test
shlb
push
loope
nop
jb
iret
dec
add
inc
add
stc
nop
jb
dec
mov
mov
call
stc
nop
jb
add
jb
push
add
decb
insl
testb
cmp
ret
and
clc
stc
nop
jb
iret
and
in
lcall
incl
add
stos
cli
stos
xchg
add
scas
push
nop
cld
jmp
add
add
add
mov
ficomps
mov
xchg
ret
ljmp
rclb
fdiv
add
out
fsubl
push
mov
xchg
ret
es
push
mov
add
add
adc
and
cmc
inc
add
jbe
stc
nop
jb
sbb
rolb
cld
jmp
dec
out
add
add
jae
jmp
mov
xchg
ret
rolb
mov
mov
xchg
ret
add
add
or
nop
jb
add
imul
mov
stc
nop
jb
add
pop
mov
add
stc
nop
jb
dec
add
fwait
inc
out
subl
stc
nop
jb
add
add
jb
stc
nop
jb
adc
std
add
stc
nop
jb
jnp
jb
add
repnz
add
inc
add
push
sub
xor
cmp
ret
ljmp
xor
stc
nop
jb
mov
or
stc
nop
jb
add
add
add
mov
sub
nop
cld
jmp
add
add
stc
nop
jb
mov
inc
popf
test
nop
cld
jmp
add
sub
mov
sub
nop
jb
dec
add
push
push
mov
xchg
ret
add
add
cmp
movsb
push
mov
xchg
ret
and
push
stc
nop
jb
lds
add
add
sbb
add
nop
jb
jnp
hlt
xchg
mov
nop
jb
xchg
add
push
out
inc
add
stc
nop
jb
xchg
add
add
cmpsl
fstpt
stc
nop
jb
bound
sbb
jb
mov
jb
add
sbb
ret
rep
stc
nop
jb
xchg
push
add
nop
jb
inc
add
add
and
incl
add
stc
nop
jb
add
lahf
inc
stc
nop
jb
pop
faddl
bound
add
pusha
stc
nop
jb
add
add
push
mov
xchg
ret
mov
stc
nop
jb
add
xchg
add
stos
movzwl
stc
nop
jb
add
add
sahf
stc
stc
nop
jb
xchg
out
nop
nop
cld
jmp
push
add
cmp
xchg
nop
jb
add
and
fsubrl
outsl
insl
jae
nop
jb
add
add
mov
xchg
ret
add
add
mov
stc
nop
jb
add
incb
lret
adc
jmp
add
jl
fimuls
orb
decl
iret
add
test
pop
add
stc
nop
jb
call
rolb
nop
cld
jmp
bound
hlt
mov
add
nop
jb
xchg
pop
mov
stc
nop
jb
add
add
xor
push
mov
xchg
ret
dec
mov
push
xor
mov
stc
nop
jb
push
cli
xchg
xchg
fisubs
xor
add
stc
nop
jb
add
add
out
push
stc
nop
jb
sub
dec
call
repnz
nop
jb
add
add
in
movb
mov
add
lock
add
and
dec
nop
cld
jmp
add
cli
add
add
dec
sub
stc
nop
jb
and
dec
nop
cld
jmp
faddl
xchg
mov
pop
jbe
movzwl
stc
nop
jb
push
sbb
cli
mov
stc
nop
jb
fildl
adc
add
pop
loop
add
add
xchg
cli
cmpw
nop
cld
jmp
faddl
test
stc
nop
jb
add
nop
jb
sbb
pushl
stc
nop
jb
add
mov
cmp
jb
scas
shlb
add
push
mov
xchg
ret
dec
add
push
sar
jb
xor
dec
add
mov
stc
nop
jb
fdiv
add
add
addb
aad
mov
push
mov
xchg
ret
add
sub
adcb
mov
mov
stc
nop
jb
es
hlt
add
or
nop
jb
add
add
imul
stc
nop
jb
xchg
add
cmp
add
add
nop
jb
sub
and
mov
xchg
ret
hlt
add
scas
add
nop
cld
jmp
cmp
mov
or
nop
jb
jbe
mov
stc
nop
jb
add
add
stc
nop
jb
add
add
loop
pop
stc
nop
jb
out
bound
add
mov
cld
jmp
add
add
stos
and
nop
cld
jmp
addb
incb
xchg
and
stc
nop
jb
add
add
scas
je
stc
nop
jb
add
add
addb
add
mov
nop
cld
jmp
jbe
mov
mov
stc
nop
jb
add
add
add
push
push
mov
xchg
ret
jl
add
adc
mov
in
pop
inc
cmpsl
add
add
add
mov
lcall
faddl
mov
add
jbe
jge
mov
stc
nop
jb
add
mov
mov
stc
nop
jb
add
xlat
cli
mov
stc
nop
jb
add
mov
adc
movzwl
stc
nop
jb
incb
add
ret
sbb
cli
ljmp
mov
push
mov
xchg
ret
add
add
sub
push
mov
xchg
ret
stos
mov
mov
stc
nop
jb
add
hlt
add
xchg
pop
ljmp
add
add
push
stc
nop
jb
decb
inc
hlt
iret
ljmp
jb
add
add
xchg
xor
push
stc
nop
jb
mov
sbb
mov
xchg
ret
fcoml
dec
add
nop
jb
sub
add
push
pop
mov
stc
nop
jb
add
add
jl
mov
stc
nop
jb
add
incb
jl
xor
push
mov
xchg
ret
add
add
push
xorb
add
test
rolb
add
in
pop
push
mov
xchg
ret
lds
xor
push
mov
xchg
ret
add
mov
dec
cmp
nop
cld
jmp
fistpl
inc
and
push
pop
add
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
xor
push
mov
xchg
ret
add
cwtl
push
mov
add
outsb
add
hlt
addr16
and
mov
imul
jmp
dec
and
push
inc
add
add
cmpsl
mov
cld
jmp
add
add
add
add
or
stc
nop
jb
inc
or
mov
xchg
ret
add
bound
push
mov
xchg
ret
add
ror
cmp
cld
jmp
mov
xchg
fwait
test
sub
lock
call
pushl
add
inc
or
mov
nop
cld
jmp
ljmp
call
incl
add
incl
nop
cld
jmp
fdivl
add
repz
nop
jb
add
add
call
cwtl
and
push
mov
xchg
ret
rolb
jmp
fildl
add
xchg
xchg
add
stc
nop
jb
add
test
icebp
xchg
adc
mov
push
mov
xchg
ret
faddl
mov
addr16
imul
add
add
xorb
mov
inc
add
dec
xchg
add
cmp
cld
jmp
ds
es
jmp
jae
out
add
jnp
mov
stc
nop
jb
out
xchg
add
and
stc
nop
jb
iret
out
xchg
jne
stc
nop
jb
xor
or
stc
nop
jb
icebp
pop
add
sub
add
lea
push
mov
xchg
ret
ds
nop
jb
and
add
cld
jmp
add
jl
add
inc
and
stc
nop
jb
mov
push
mov
xchg
ret
jae
mov
push
mov
xchg
ret
fwait
out
dec
fiadds
jo
nop
cld
jmp
and
adc
mov
sub
add
or
inc
add
add
je
stc
nop
jb
mov
xchg
stc
nop
jb
add
iret
fdivrl
inc
adc
nop
jb
call
ret
icebp
insl
jne
stc
nop
jb
xchg
push
add
stc
nop
jb
inc
sub
mov
stc
nop
jb
add
outsl
and
push
mov
xchg
ret
add
add
subb
jnp
rolb
lcall
stc
nop
jb
add
rcll
pushf
movzwl
push
mov
xchg
ret
xchg
add
xor
stc
nop
jb
scas
jbe
add
add
and
mov
push
mov
xchg
ret
add
mov
nop
cld
jmp
add
incb
xchg
scas
movb
movb
add
push
mov
xchg
ret
and
mov
stc
nop
jb
xor
jb
in
jecxz
add
stc
nop
jb
add
icebp
stos
add
jmp
subb
add
popa
add
nop
jb
add
ljmp
jb
add
add
call
repz
stc
nop
jb
add
fcmovne
mov
stc
nop
jb
test
bound
incb
fs
insb
add
nop
jb
test
nop
jb
add
sub
cmp
mov
xchg
ret
inc
fwait
mov
inc
in
cld
jmp
stos
add
xchg
xchg
repz
stc
nop
jb
sub
xor
nop
jb
add
add
xor
jg
push
mov
xchg
ret
bound
lock
into
sub
stc
nop
jb
mov
add
add
nop
cld
jmp
add
add
jle
push
mov
xchg
ret
call
fiadds
jmp
inc
add
add
add
push
imul
add
push
hlt
dec
xor
lds
or
add
nop
jb
call
stc
nop
jb
add
add
sub
fmuls
cld
jmp
faddl
add
mov
pop
push
mov
xchg
ret
xchg
xchg
mov
mov
hlt
imul
add
outsl
adc
and
mov
xchg
ret
add
cmpl
nop
cld
jmp
add
add
mov
outsl
popa
fs
nop
jb
call
rep
stc
nop
jb
add
cmpl
nop
cld
jmp
adc
mov
add
stc
nop
jb
add
xchg
add
stc
nop
jb
add
xor
loop
push
push
mov
xchg
ret
add
bound
out
jne
stc
nop
jb
jl
xor
mov
lret
add
cmp
xchg
inc
xchg
bound
sub
jmp
shlb
add
adc
inc
stc
nop
jb
add
add
jbe
pop
push
stc
nop
jb
add
movb
notb
add
out
sub
out
add
xchg
mov
stc
nop
jb
xchg
sbb
nop
jb
add
mov
inc
adc
nop
jb
and
xchg
add
stc
nop
jb
jbe
dec
jne
stc
nop
jb
incb
jmp
stc
nop
jb
test
iret
push
adc
add
adc
mov
out
add
jl
add
sti
add
stc
nop
jb
sub
and
push
push
mov
xchg
ret
add
sbb
nop
jb
add
xor
push
xor
test
add
rclb
sti
inc
add
rcrb
push
stc
nop
jb
add
add
mov
nop
jb
mov
xchg
pop
push
stc
nop
jb
add
add
int
pop
jae
nop
jb
xchg
cli
push
enter
stc
nop
jb
test
add
daa
mov
add
stc
nop
jb
call
ljmp
stc
nop
jb
inc
add
jnp
inc
dec
out
push
stc
nop
jb
add
dec
sub
add
vprotb
orb
and
add
movsl
mov
mov
stc
nop
jb
scas
jl
jecxz
add
icebp
stc
nop
jb
xchg
iret
add
xchg
sti
mov
nop
cld
jmp
and
sbbb
stc
nop
jb
add
and
stc
nop
jb
xchg
ljmp
or
nop
jb
add
fdivrl
nop
cld
jmp
add
mov
call
jl
jbe
cmp
dec
or
inc
inc
add
call
inc
inc
add
nop
jb
sub
dec
add
inc
insb
insb
stc
nop
jb
add
sub
or
nop
jb
add
jno
inc
nop
cld
jmp
add
add
es
stc
nop
jb
push
add
push
mov
xchg
ret
jbe
add
pop
nop
cld
jmp
add
add
add
inc
or
nop
jb
mov
push
pushf
mov
push
mov
xchg
ret
jbe
jae
mov
stc
nop
jb
fcoml
in
add
into
add
add
fsubr
mov
nop
cld
jmp
icebp
incb
bound
add
nop
jb
add
add
xor
add
stc
nop
jb
add
movsl
add
xchg
ret
add
in
dec
add
add
loope
add
mov
stc
nop
jb
add
add
push
stc
nop
jb
mov
repnz
ret
push
mov
xchg
ret
add
data16
icebp
stc
nop
jb
bound
cli
add
add
cmp
add
nop
jb
and
stc
test
nop
cld
jmp
sub
jae
sarl
xchg
out
call
jae
add
mov
xchg
ret
xchg
jbe
add
cld
jmp
add
mov
aas
add
stc
nop
jb
sub
add
push
stc
nop
jb
add
adc
stc
nop
jb
add
xchg
xor
ss
mov
stc
nop
jb
jl
sahf
imul
nop
cld
jmp
add
iret
bound
in
add
add
clc
add
das
out
add
push
pop
sarl
adc
nop
jb
mov
ljmp
add
add
add
push
mov
xchg
ret
jae
pop
mov
push
mov
xchg
ret
addb
push
stc
nop
jb
cmp
jb
xchg
nop
jb
call
jl
jmp
stc
nop
jb
add
cmp
nop
jb
jbe
xchg
and
add
jb
add
stc
push
stc
nop
jb
add
add
mov
stc
nop
jb
mov
test
lock
stc
nop
jb
add
pop
push
push
mov
xchg
ret
add
mov
xor
stc
nop
jb
mov
cmp
nop
cld
jmp
add
faddl
add
les
stc
nop
jb
faddl
add
insb
mov
stc
nop
jb
adc
inc
jbe
insl
dec
nop
cld
jmp
test
icebp
cli
mov
in
pop
stc
nop
jb
sub
xchg
xchg
mov
inc
and
nop
cld
jmp
add
adc
push
push
mov
xchg
ret
inc
dec
ljmp
stc
stc
nop
jb
add
loope
loopne
lcall
nop
cld
jmp
xchg
outsl
dec
nop
cld
jmp
scas
add
add
add
push
and
jne
stc
nop
jb
cli
bound
shrb
mov
xchg
ret
xchg
fwait
mov
in
sub
mov
push
hlt
add
mov
nop
cld
jmp
add
out
add
stc
nop
jb
incb
xchg
mov
jmp
mov
add
pop
cmpl
nop
cld
jmp
add
mov
stc
nop
jb
xor
add
nop
jb
call
add
dec
jmp
stc
nop
jb
inc
bound
cmpsl
mov
nop
cld
jmp
mov
out
mov
or
clc
stc
nop
jb
mov
faddl
faddl
ljmp
loope
pushl
add
add
jmp
nop
cld
jmp
add
jnp
aas
decl
stc
nop
jb
add
sub
or
nop
jb
scas
inc
sub
add
dec
movzwl
stc
nop
jb
add
add
nop
cld
jmp
es
add
mov
nop
cld
jmp
pop
xchg
xchg
or
inc
xor
stc
nop
jb
jae
add
js
stc
nop
jb
add
and
popf
pop
push
mov
xchg
ret
mov
lcall
add
xchg
ret
add
push
repz
nop
jb
dec
pop
decl
push
mov
xchg
ret
mov
stc
nop
jb
call
jnp
in
or
stc
nop
jb
ds
jb
add
add
arpl
stc
nop
jb
add
repz
nop
jb
ljmp
cmpl
nop
cld
jmp
mov
cmp
push
jmp
jb
add
add
push
push
dec
push
stc
nop
jb
mov
add
push
mov
cld
jmp
scas
inc
ljmp
in
stc
nop
jb
and
hlt
xchg
call
stc
nop
jb
ds
xchg
mov
nop
cld
jmp
sub
pop
sub
stc
nop
jb
add
rcrl
nop
cld
jmp
iret
adc
add
and
mov
xchg
ret
fwait
out
cmpsl
xchg
addl
nop
jb
add
jb
add
repz
add
jl
jl
inc
filds
jge
nop
cld
jmp
add
add
cld
or
mov
incl
test
jmp
add
mov
mov
mov
nop
jb
push
add
push
mov
xchg
ret
add
add
jb
xchg
out
and
push
mov
xchg
ret
add
sar
nop
jb
and
mov
mov
xchg
ret
add
push
add
stc
nop
jb
lds
mov
mov
cli
stc
nop
jb
xchg
add
add
rep
stc
nop
jb
xchg
add
mov
bound
movsb
add
stc
nop
jb
ds
aam
bound
sub
nop
jb
add
ljmp
or
test
nop
jb
add
jmp
jb
stc
nop
jb
inc
mov
js
nop
cld
jmp
mov
xchg
lods
lods
stc
nop
jb
jl
push
sub
out
movzwl
stc
nop
jb
cmp
push
add
stc
nop
jb
add
dec
ljmp
push
mov
xchg
ret
xchg
fistl
mov
cmp
ret
add
adc
push
dec
cmp
cld
jmp
shlb
add
add
nop
cld
jmp
pop
adc
scas
add
fwait
nop
popl
nop
cld
jmp
add
add
fsubl
mov
stc
nop
jb
add
ljmp
ret
stc
nop
jb
pop
lds
adc
add
xor
stc
nop
jb
xor
add
pop
push
sbb
out
testl
mov
add
loop
cld
jmp
add
add
iret
mov
nop
jb
add
mov
inc
ljmp
jb
test
add
add
jl
mov
stc
nop
jb
add
add
stc
nop
jb
jbe
add
inc
std
mov
nop
cld
jmp
sub
add
clc
push
push
mov
xchg
ret
add
ljmp
nop
jb
add
and
jl
push
push
mov
xchg
ret
add
push
stc
nop
jb
add
add
ljmp
mov
xchg
ret
xchg
add
nop
cld
jmp
jnp
fildl
jl
adc
adc
add
stc
nop
jb
test
mov
jne
stc
nop
jb
sub
lret
mov
push
mov
xchg
ret
cmp
faddl
data16
mov
nop
cld
jmp
fwait
jae
iret
sub
test
cld
jmp
cmp
dec
sbb
addb
dec
jl
adc
push
stc
nop
jb
xor
bound
in
inc
add
mov
push
jg
rclb
jp
inc
add
push
add
xchg
imul
incl
fucomi
ljmp
nop
jb
add
mov
stc
nop
jb
add
jae
lret
in
int3
add
addb
roll
xor
out
shr
push
push
push
or
popa
sbb
jle
movsl
pop
dec
sub
sub
sbb
push
cli
sub
or
mov
push
mov
pop
mov
sbb
jp
hlt
stos
in
aaa
sbb
imul
pop
rorb
pop
push
cmp
and
testl
xchg
ret
addb
xchg
pop
sarl
in
add
dec
jnp,pn
filds
mov
mov
lock
or
hlt
arpl
cs
add
ret
pop
outsl
mov
sub
dec
movaps
movb
movsb
xor
add
sub
jne
ja
pop
cmpsb
jne
or
or
int
dec
loop
adc
xchg
sbb
xchg
dec
in
call
or
notl
jbe
int
xchg
neg
insl
repz
fistpl
xor
lahf
mov
dec
or
dec
mov
add
bound
mov
imul
pop
std
mov
aas
sbb
and
push
add
dec
mov
inc
add
xor
aaa
mov
jecxz,pn
js
push
movsb
aas
repnz
push
fdiv
xchg
enter
test
add
lahf
dec
sahf
adc
fiadds
adc
dec
dec
push
lods
rcrl
into
mov
dec
jmp
mov
ja
and
fcmovnbe
mov
or
lahf
xor
xchg
dec
mov
add
mov
das
xchg
mov
inc
pop
dec
sbbl
outsl
mov
imul
push
xchg
int
or
cmc
bound
pop
imul
out
pop
push
mov
rolb
mov
std
cmp
or
out
add
jbe,pt
add
jmp
dec
push
addb
fisubrs
xlat
adc
sbb
dec
out
jmp
or
mov
clc
xor
xor
sti
rolb
add
push
jg
aaa
mov
cwtl
repnz
dec
sarl
rolb
pop
repz
aad
icebp
or
add
or
xor
test
lret
mov
jmp
dec
and
mov
mov
xchg
mov
sbb
cmp
cmp
fildll
sbb
add
lcall
aaa
cwtl
sahf
cmp
or
popl
or
xchg
cmpsb
dec
lds
scas
xchg
pop
cwtl
aad
pop
push
cmp
aaa
push
add
test
sub
xor
mov
pop
les
or
loopne
add
bound
loopne
and
test
stos
push
ds
lret
stc
and
fdivrl
sbb
jecxz
rcr
mov
xor
pop
and
stos
out
push
add
mov
mov
and
out
jecxz
loopne
add
fsubrs
xchg
repz
movsb
out
std
sbb
call
push
xchg
pop
dec
pop
cmp
iret
push
mov
clc
lret
addb
addb
repz
sbb
out
xchg
xchg
inc
mov
push
push
mov
xor
adc
mov
cmp
ret
xor
add
dec
sub
stos
mov
jmp
mov
cli
sbb
addb
jo
add
inc
add
add
hlt
out
sbb
pop
jle
jbe
add
addb
loop
cmpsl
gs
pop
nop
movsl
mov
int3
mov
xchg
mov
repz
lods
ret
cmp
rcrl
xor
dec
sbb
add
fstpl
pop
mov
cmpsb
jbe
add
fnstenv
por
test
add
adc
xsave
add
add
inc
jne
pop
not
test
flds
ljmp
ret
out
and
add
inc
add
insl
iret
mov
or
mov
pop
out
pop
out
add
jno
loope
stc
pop
aaa
or
mov
lods
repz
imul
das
and
dec
sbb
jbe
pop
lret
lahf
sub
andl
xor
inc
add
add
xor
call
testl
add
or
int3
ja
mov
mov
lret
pop
addr16
push
fstpt
push
inc
out
dec
loope
push
mov
clc
pop
push
add
in
nop
add
imul
repz
sbb
xor
fcompl
arpl
int
xor
add
and
and
cmp
clc
pusha
add
cmpsl
pop
jo
add
int3
data16
fistps
addr16
lea
xchg
std
xor
lret
jb
in
imul
jb
scas
fwait
enter
inc
leave
mov
xlat
mov
pop
leave
lods
push
lret
xor
add
mov
in
inc
add
ficoml
into
loope
movsb
xor
cmp
and
addb
out
xchg
pusha
add
test
and
lret
xlat
adcl
jnp
fidivl
addb
adc
xchg
scas
inc
add
addb
xchg
push
movsl
push
ja
cli
and
movb
mov
inc
add
xor
and
sub
dec
cmp
xchg
decb
loopne
rorl
mov
sub
xchg
add
cmp
outsb
jns
ljmp
mov
dec
mov
in
daa
sub
adc
add
mov
xchg
popa
pop
inc
xchg
add
or
sub
cmpsb
jo
stc
js
pop
xor
adc
add
test
lret
sbb
imulb
std
test
push
add
mov
nop
xor
aas
pop
dec
lds
insl
out
sub
add
add
xor
imul
jmp
mov
enter
fdivrl
jbe
push
mov
outsb
les
mov
movsl
mov
xchg
mov
js
das
pop
xlat
sub
sub
xlat
pop
movsb
sbb
enter
imul
ja
or
dec
adc
scas
add
das
test
dec
dec
dec
repz
jg
push
jg
jne
xchg
ja
cmpsb
mov
std
loope
sub
and
lret
std
pop
cmp
movb
ss
je
gs
fisubs
add
out
lock
lock
add
in
pop
pop
xchg
cs
add
add
mov
cwtl
ja
inc
jns
pop
mov
movb
xchg
jae
rorl
hlt
insb
fdivs
adc
push
pop
jecxz
push
jge
jne
frstor
scas
push
addb
sub
lods
xor
mov
lret
rolb
add
inc
add
aas
fcmovu
xchg
cmp
loopne
cmp
mov
add
mov
add
in
push
jae
push
arpl
popf
clc
lock
jmp
dec
stos
sbb
ljmp
std
mov
dec
jo
mov
sub
mov
xchg
jo
cmc
cmc
fs
outsl
js
adc
imul
fiaddl
mov
xor
jle
sbb
push
test
sahf
popf
xchg
xchg
fcmovnb
popa
mov
add
push
call
lock
jne
rcr
sbb
pushf
popf
movsb
and
add
sub
in
daa
daa
sbb
rorl
insb
xor
shll
jmp
test
lods
pop
movsb
inc
gs
add
jmp
add
adc
add
dec
fistpll
call
jnp
outsb
or
xor
outsb
sub
mov
fcom
mov
das
bound
jp
and
and
mov
rorl
repnz
fcoml
sub
jne
les
inc
xchg
clc
sahf
outsb
mov
fcoml
jbe
push
lock
cmp
fs
sub
mov
pop
sub
lahf
inc
add
cmc
sbb
insl
out
or
xor
sub
inc
add
mov
dec
cli
lods
push
mov
and
popf
jecxz
mov
push
aam
movsl
mov
adc
push
add
call
enter
test
xchg
stos
out
fcomps
add
testl
pushf
scas
add
imul
or
add
ret
mov
pop
iret
rorl
int
lods
in
adc
jg
pop
push
imul
pop
xchg
and
adc
test
mov
cld
out
xor
ja
ret
addl
push
sub
scas
sub
push
xchg
and
int
fs
int
add
mov
mov
or
inc
es
aas
ds
and
or
add
call
sub
push
push
nop
fisttpll
add
inc
out
jns
popf
jmp
lock
jg
mov
bound
jae
roll
mov
stos
idiv
mov
cmpsb
mov
test
jecxz
xor
add
push
in
shll
lret
cld
add
mov
mov
or
xor
stos
mov
movb
ficompl
add
iret
cmp
aas
aad
popf
inc
add
push
inc
sub
dec
insb
or
pop
jbe
xor
pop
movq
jnp
add
or
or
push
push
fsts
xchg
les
lods
leave
into
xchg
or
ds
imul
mov
push
frstor
testb
into
ret
movsl
aaa
out
jbe
roll
rolb
std
push
das
in
adc
mov
mov
mov
sub
add
inc
xchg
fstl
ret
in
dec
lret
movsl
push
inc
add
lahf
movb
imul
pcmpeqb
cmc
sti
pop
clc
add
mov
cmp
and
lds
pop
xchg
sbb
mov
jne
ret
mov
or
xchg
movb
cmp
bound
jnp
adc
ss
xor
pop
cmp
and
mov
les
fcomps
mov
dec
cld
mov
inc
in
jbe
lods
dec
xchg
dec
pusha
add
jno
in
sbb
addb
jmp
inc
push
push
dec
lret
movb
pushf
xor
mov
push
jmp
das
jl
test
fs
push
sbb
jbe
scas
mov
mov
dec
es
loope
cmpsl
mov
dec
enter
inc
sbb
push
in
ds
fimuls
or
insb
mov
iret
jg
lcall
jbe
shlb
add
push
bound
xchg
ljmp
addb
sbb
mov
add
ljmp
push
sub
in
mov
mov
add
pop
sub
lods
ss
outsb
jno
pop
xchg
add
xor
inc
pop
aaa
sub
aam
push
add
add
ljmp
addb
adc
and
stos
outsl
fdivrs
adc
dec
lcall
pop
cmpsb
scas
hlt
into
sbb
jnp,pn
mov
dec
jns
jae
push
sub
in
push
cmp
xchg
push
ljmp
int
mov
js
popf
lods
pop
test
sub
push
or
fadds
rolb
xchg
add
mov
cs
lcall
fnsave
dec
pop
std
cli
sub
or
pop
enter
jno
inc
add
add
jg
xlat
xor
and
movsb
ss
adcl
imul
mov
sbb
loopne
mov
adc
inc
add
mov
pop
xchg
in
test
and
jno
imul
push
xchg
mov
cmp
jp
mov
repz
addr16
popf
idivl
stos
cmp
ret
mov
xor
inc
add
sub
xchg
mov
jae
lahf
jle
daa
roll
pop
mov
add
pop
mov
push
ss
adc
mov
std
sbb
repnz
adc
ljmp
neg
jmp
push
jge
cmpsl
sub
loope
bound
mov
inc
add
popa
and
dec
dec
xchg
or
cmc
jae
mov
das
imul
mov
add
movsl
mov
push
mov
add
and
cld
leave
lret
outsb
sahf
mov
add
dec
lods
cvtps2pd
pop
inc
add
sub
and
or
sub
cli
cmp
in
loopne
das
adc
outsb
jae
sub
roll
mov
cmp
mov
ljmp
inc
add
adc
fldcw
and
hlt
xor
icebp
aas
stc
jae
pop
cmp
es
lock
dec
push
pop
ljmp
dec
sbb
das
pushf
in
mov
add
and
xchg
mov
cltd
hlt
adc
add
js
lret
or
mov
add
pusha
add
outsb
jge,pt
inc
add
jnp
inc
add
sbb
inc
xor
dec
adc
rcll
lock
aas
cmp
movsb
push
stos
or
repz
mov
sarl
lahf
pop
sub
popf
out
adc
fdivs
xchg
sbb
sub
pop
dec
add
xchg
sub
test
xchg
outsl
or
add
arpl
add
pop
pop
inc
add
add
cld
push
leave
faddl
jp
xor
push
xor
pop
int3
jp
mov
add
add
mov
pop
pop
fcoms
rol
rol
add
andl
mov
ss
arpl
add
xor
aaa
test
sti
or
jle
cmp
mov
stos
rorl
add
fiaddl
add
pop
shl
pop
ficoml
adcl
mov
jo
pop
in
sub
sti
push
mov
inc
add
sti
sbb
int
and
push
cmpsl
ret
jl
loopne
mov
push
sbb
push
jl
add
adc
add
js
add
sbb
std
dec
ret
add
loop
mov
ljmp
and
sub
and
dec
cld
add
clc
test
pushf
scas
xor
clc
xchg
fsubl
pop
daa
lods
popf
xchg
xor
and
mov
xchg
insl
push
imul
idivl
cmpsl
dec
testl
jne
sub
sub
xchg
aad
push
push
xchg
jle
or
sub
out
add
das
out
add
and
mov
add
push
dec
jnp
mov
insb
xor
dec
or
xchg
enter
pop
nop
or
mov
or
sbb
cmp
cmp
das
xchg
rolb
mov
leave
leave
inc
add
testl
add
ret
mov
jo
or
in
cmp
and
popf
repz
nop
dec
stos
and
add
leave
ljmp
lock
mov
add
sti
adc
jp
fsubs
jbe
cmpsl
cmc
in
inc
outsl
xchg
mov
push
mov
dec
test
mov
push
push
shl
data16
add
cmp
add
xchg
and
daa
les
sub
fcomi
js
pop
lcall
movsb
cmpsb
inc
xchg
lret
pop
fistl
rolb
add
test
addb
test
xchg
ficoml
add
iret
cmpsl
add
mov
stos
xchg
stos
fs
int3
xor
xor
xchg
pop
sub
popa
ljmp
divl
mov
jnp
jp
mov
aad
mov
jge
test
dec
add
cmp
add
int3
ficoms
mov
pop
inc
mov
aad
mov
xchg
and
cmpsb
lret
scas
jge
dec
xor
icebp
mov
mov
sub
add
or
inc
jno
divl
das
adc
loopne
xchg
xor
cmp
nop
dec
imul
pusha
add
je
imulb
ds
sbb
mov
push
les
push
sbb
popa
and
rorl
mov
sub
out
push
and
inc
add
push
mov
pop
ja
pop
in
scas
clc
cltd
xlat
mov
jmp
sub
test
xor
mov
stc
jns
movb
ja
add
mov
aaa
pushf
sbb
sahf
cmp
jecxz
test
or
aaa
jb
test
mov
addb
push
movsb
popl
or
ret
add
cmp
add
add
mov
jnp
pop
adcl
xchg
pop
fbstp
sub
sub
add
mov
fcomps
enter
xchg
sahf
push
push
scas
sti
mov
mov
sub
push
xor
movsl
cmovae
xchg
arpl
sbb
mov
mov
icebp
sub
stos
lret
push
scas
cwtl
fists
sub
inc
adc
call
push
ficompl
stos
jle
aaa
icebp
aam
add
adc
jecxz
cld
out
in
loopne
mov
mov
dec
mov
xor
add
stc
jno
incb
cmpsb
adc
cmp
repnz
nop
inc
add
sub
fs
adc
adc
push
push
mov
into
loop
or
imul
int3
stos
dec
cmpsl
sahf
popf
dec
mov
mov
xchg
push
stc
inc
jbe
sti
pop
pop
bound
jge
test
pusha
add
mov
dec
enter
fsubl
xchg
sbb
pop
out
adc
sub
jle
clc
inc
add
mov
jns
stos
dec
mov
hlt
and
popa
aam
stos
pop
xchg
rcr
jb
repz
stc
inc
ret
jp
jg
je
or
repz
cli
aas
pop
push
cld
and
out
decb
lods
xchg
imul
movsl
data16
pop
repnz
insl
cltd
add
das
jno
add
adc
xor
rorl
and
jecxz
stc
idivl
int
add
add
cmp
in
xchg
std
or
and
icebp
lea
loopne
xlat
mov
cmp
aaa
pop
in
xchg
ret
jecxz
xchg
sti
sbb
out
jno
mov
inc
std
popf
rcrb
and
jbe
iret
scas
xor
arpl
push
jo
dec
pusha
add
int3
cmp
jge
mov
or
bound
adc
add
add
adc
or
lahf
pop
adc
ret
fcomip
inc
add
lahf
pop
xor
add
iret
lds
push
rclb
fdivrs
and
adc
int3
aas
xchg
lret
adc
jge
jae
addb
mov
mov
push
and
test
cmp
lcall
xchg
mov
adc
add
inc
add
add
cmp
sub
out
jo
mov
test
stos
clc
aad
pop
lret
stos
iret
lock
popa
cmp
jae
fnstenv
push
push
add
dec
add
mov
pop
lock
clc
call
bound
adc
push
mov
inc
jge
clc
pop
imul
es
ds
add
sti
into
xchg
fdivrs
or
mov
mov
mov
mov
push
adc
aas
loopne
test
loopne
cmp
out
lds
popf
addb
arpl
popf
rolb
fwait
aas
push
jae
gs
fmulp
xchg
pop
movsl
add
add
dec
scas
leave
jl
ds
mov
sub
mov
mov
mov
int3
jmp
and
mov
leave
or
test
mov
sub
or
loope
mov
mov
jo
fildll
cmp
fisubs
pop
out
lahf
dec
mov
push
add
jne
xchg
inc
adc
mov
xchg
jbe
xor
xchg
test
add
sahf
inc
dec
aam
pop
mov
outsl
fimuls
fidivl
cmp
jbe
push
loope
add
adc
jg
mov
mov
push
push
fdiv
sbbl
gs
inc
add
add
cmp
jge
pop
jle
jae
fucomip
sbb
mov
imul
sub
ds
or
mov
jg
pop
fidivrs
cmp
and
cwtl
lea
fsubrs
mov
adc
nop
push
mov
and
xchg
inc
mov
adc
scas
sbb
in
xor
cmpsb
jmp
add
repz
pop
mov
mov
pop
and
and
push
out
or
jnp
fsincos
and
push
loopne
cmp
xchg
fistl
pusha
add
add
sbb
pop
call
into
ss
bound
pop
mov
lcall
add
scas
pop
in
jmp
dec
test
lock
mov
pop
fildll
sub
test
dec
rorb
jns
cmpsl
sub
mov
jg
aas
jae
adc
les
mov
dec
addr16
popa
enter
add
push
mulb
add
cmp
xchg
mov
pop
inc
xchg
jbe
fidivrs
sbb
aad
out
pop
ret
jb
pop
add
push
aas
sub
pop
or
sbb
mov
xchg
ficoms
mov
out
lahf
repnz
and
or
xchg
ret
mov
ja
pop
xor
xor
sub
scas
hlt
stos
test
mov
mov
mov
out
xchg
sahf
fdivrs
mov
in
add
sub
inc
or
add
xchg
xchg
test
pop
test
fsubrs
mov
jnp
push
enter
and
push
sbb
icebp
xor
pop
mov
cmpsb
xor
cltd
push
sbb
and
sbb
je
push
add
push
push
xor
stos
stos
inc
add
sub
pop
cmp
jl
and
les
movsl
jecxz,pt
push
cs
sub
inc
add
mov
aaa
jecxz
xlat
loope
outsl
cmp
add
inc
add
mov
xchg
imul
push
cld
mov
add
ds
mov
stos
sbb
add
push
mov
js
push
cmp
mov
lds
add
insb
in
cmp
jns
scas
addb
add
add
ret
jle
scas
jne
cld
movb
outsl
cs
into
leave
out
mov
pop
xchg
mov
dec
popa
lods
mov
pop
xor
movb
pop
mov
jg
xor
shlb
xor
adc
mov
ja
inc
add
jmp
rclb
stos
and
mov
aas
xchg
in
stos
xchg
dec
push
pushf
xchg
cmp
adc
cmp
add
sbb
cmp
bound
inc
or
stc
inc
or
adc
fdivrs
daa
xchg
pop
rcl
int3
int3
push
stos
rolb
pop
cmp
mov
ret
int
int3
inc
add
and
xor
clc
out
push
or
fimull
xor
lret
add
mov
and
out
mov
mov
push
popa
jno
cltd
mov
add
loop
jbe
clc
enter
or
add
xchg
aas
xchg
loop
add
test
popf
and
add
or
dec
or
jle
sti
insb
add
cmp
jo
push
jge
add
add
test
mov
and
sbb
add
stos
call
mov
cwtl
loope
movsb
pop
sbbl
xchg
add
fsubrs
lcall
pop
inc
add
popa
fsubr
nop
xchg
xchg
jl
dec
push
xchg
mov
add
add
pop
mov
add
inc
jae
in
jl
lods
mov
sbb
js
daa
in
cmp
add
mov
popa
hlt
pushf
and
sub
add
jne
inc
lahf
shll
sbb
mov
xchg
mov
cld
mov
test
into
xchg
push
mov
cmp
sbb
push
cmpl
rcr
jmp
add
or
jecxz
xchg
je
int
popf
inc
add
ss
adc
jae
ja
aad
lock
mov
cmp
cli
push
mov
jecxz
aad
cltd
pusha
add
mov
stos
sti
iret
xor
test
jns
leave
mov
inc
jmp
add
cmp
cli
das
ja
movsl
aad
mov
jb
cwtl
ds
dec
cmp
xchg
das
sbb
mov
xchg
or
add
es
inc
add
pop
aas
xchg
add
sbb
shl
sub
outsb
stc
mov
jb
outsb
mov
cmp
cmp
mov
jp
lea
lds
mov
mov
jg
fldenv
inc
mov
mov
cmp
adc
mov
mov
popf
mov
cmp
or
movsb
xor
int3
cmp
pop
test
mov
data16
inc
add
dec
ficoml
xchg
xor
ja
addb
add
jo
les
inc
add
movsb
imul
push
inc
es
nop
ret
in
xchg
bound
inc
add
xchg
sub
mov
add
push
push
dec
out
sbb
mov
hlt
in
mov
dec
sbb
fidivl
lret
out
test
fnstenv
add
add
fcomp
xchg
jo
inc
das
xchg
push
jo
mul
adc
scas
in
bswap
loopne
lahf
sub
xchg
and
mov
or
xor
testb
imul
inc
add
sbb
bound
addl
sub
mov
xchg
mov
mov
dec
rcrl
sbb
sbb
insb
aaa
mov
jg
js
add
fwait
enter
jne
mov
add
jb
sti
ljmp
pop
pop
and
pop
pop
cmp
rcr
sbb
inc
add
in
add
push
popl
and
in
movsb
das
into
fcomp
xor
rolb
aad
add
mov
test
movsb
int3
add
cmp
jmp
cmpsb
sti
xor
push
inc
add
fildll
ds
fdivrs
inc
add
cmp
loop
cmp
bound
vandpd
pop
push
dec
mov
jnp
cmp
loop
inc
add
rcr
popa
in
mov
mov
mov
add
add
into
pusha
add
adc
lods
scas
test
adc
mov
fwait
in
cmp
sub
jns
aad
mov
mov
adc
call
movb
pop
insl
in
frstor
or
dec
in
cmp
imul
mov
sub
add
dec
cs
icebp
cltd
out
dec
and
arpl
jl
addb
jecxz
add
movsl
push
lods
out
xor
clc
mov
jp
mov
add
xchg
adc
ficomps
js
add
cmp
ss
lods
inc
pushf
xor
mov
fildll
pushf
push
or
daa
js
mov
fiadds
out
pop
mov
popa
outsb
addb
sbb
add
mov
jno
add
das
and
dec
hlt
or
mov
xchg
shl
xor
sub
add
jae
add
rolb
pop
fidivrl
xchg
aas
fisubl
add
dec
mov
insl
pop
fs
divb
jb
test
out
jp
popf
or
shlb
scas
mov
push
or
lcall
fs
hlt
scas
jae
mov
dec
testl
add
fldt
enter
inc
add
cmpsl
shrb
cmp
repnz
or
mov
xchg
sbb
sub
xchg
sub
add
xor
pop
inc
add
add
and
mov
or
cwtl
inc
lods
add
adc
cltd
xor
push
jno
std
and
call
lret
sub
imul
aad
mov
mov
xchg
mov
aam
aam
insl
push
dec
jo
cs
xchg
in
sub
adc
add
push
gs
or
inc
std
xor
mov
pop
cltd
movsl
jmp
jne
xor
mov
in
stos
scas
add
and
jb
shll
in
sub
inc
add
xor
mov
insl
pop
out
push
add
mov
fucomip
xlat
ret
xchg
incb
lret
sbb
lahf
jne
xchg
ss
push
or
xchg
sub
xlat
test
add
aad
shll
aas
addb
fcoml
push
add
adc
sarl
jge
cmp
lahf
fimuls
popa
movb
add
sti
icebp
xor
sub
mov
je
fists
daa
cmp
test
test
cltd
lret
xchg
xchg
mov
add
push
jmp
mov
fst
jb
mov
xchg
xchg
xchg
cmp
out
es
std
scas
mov
xor
sar
add
loop
mov
xchg
inc
add
rolb
mov
mov
sbb
add
adc
fisttpl
jmp
mov
push
mov
sti
adc
stos
push
rol
ljmp
mov
dec
pop
sub
mov
jb
push
dec
loop
or
sub
jmp
adc
mov
mov
jno
push
mov
xor
add
mov
inc
add
ret
xor
xor
std
clc
cmp
and
add
dec
push
dec
fistpll
push
les
and
adc
out
and
dec
dec
push
lock
fnstsw
jne
xchg
cmp
push
out
iret
gs
inc
push
dec
in
test
bound
sarl
adc
les
sti
rclb
aad
fnsave
xor
push
in
mov
insl
aad
add
adc
xchg
dec
inc
add
xor
cmp
sbb
jne
test
ret
in
mov
pop
popa
push
adc
cwtl
sbb
aam
jne
jl
sub
inc
xchg
nop
bound
test
movsb
or
xchg
cmpsl
in
movsl
mov
jg
cld
add
jmp
or
or
fstl
cmp
add
mov
lcall
inc
and
ds
mov
mov
adc
mov
fisttpl
inc
add
sub
mov
add
sti
imulb
out
sbb
pop
ds
popf
out
cltd
mov
push
sti
pop
shll
jecxz
add
loope
pop
mov
addb
mov
push
mov
cli
cmp
lret
and
jle
pop
das
sub
sub
stos
jle
lahf
inc
bound
pop
out
mov
push
pop
jno
test
xor
xchg
add
loop
push
cmp
lcall
jle
push
sub
inc
add
sub
in
jno
js
out
les
pop
loop
neg
xchg
or
add
dec
push
sub
dec
xor
sub
jno
cmp
xlat
jl
rolb
sbb
xchg
mov
push
aam
push
addb
cwtl
loopne
mov
sub
in
mov
insb
cld
data16
movsb
inc
fistps
dec
stc
or
mov
jbe
pop
jae
push
pop
lret
lods
add
cmpl
xchg
popf
sbb
or
mov
out
add
mov
pop
inc
add
shl
push
xchg
mov
dec
ja
insb
lahf
movsb
or
cmp
push
lock
pop
push
mov
icebp
lds
add
adc
je
adc
mov
adc
test
push
loopne
sub
jno
mov
out
icebp
inc
add
std
out
pusha
add
fwait
mov
inc
add
ds
lahf
pushf
div
xor
inc
add
jecxz
mov
fwait
and
mov
add
lret
pop
sbb
add
mov
aas
sub
mov
out
pushf
fistl
ret
xchg
cmc
jl
aam
in
int
dec
insb
std
scas
pop
insb
push
call
in
lods
mov
and
enter
xchg
cmp
leave
adc
mov
jmp
push
sbb
xlat
addb
sbb
mov
xor
loop
inc
mov
ljmp
add
jb
mov
mov
insl
stos
inc
daa
jp
cli
pop
push
add
mov
push
flds
push
mov
fmuls
adc
lcall
movsl
jns
cwtl
xor
add
sbb
or
sarl
cmp
push
or
aam
inc
fisubl
imul
gs
js
ds
xchg
fsubs
test
aas
mov
les
lods
xchg
insl
rolb
cmp
xor
imull
push
or
xor
add
pop
mov
cmp
fucomip
xchg
test
pop
pushf
xchg
ds
in
pop
inc
fcmovbe
jmp
xchg
in
jae
dec
adc
rol
mov
pop
mov
into
sbb
clc
in
or
dec
mov
adc
push
cmpsl
xor
ljmp
lock
jl
mov
dec
jo
add
into
jmp
pop
sub
test
mov
int3
jl
jmp
out
bound
hlt
imul
jno
std
fldl
pop
fcmovb
mov
lds
xchg
adc
imul
sbb
pop
mov
shl
mov
add
ds
jns,pn
lock
dec
push
out
out
inc
sub
ja
jne
push
add
cmp
movb
icebp
rorb
icebp
cmpl
jp
shr
lds
add
add
and
cmp
jle
pop
lds
xor
rcrl
push
aaa
push
js
es
sbb
cmp
add
shrb
imul
dec
push
cmpsb
pop
mov
fucom
mov
ret
cli
xchg
jle
mov
xchg
cmp
outsb
push
in
les
ja
xchg
std
sbb
jne
stos
cmp
cmp
or
cmpsb
or
addb
nop
and
add
add
rolb
jns
addr16
in
cmp
fnstenv
outsl
pop
call
cmpsl
xor
pop
mov
cs
shlb
es
jb
out
mov
pop
jnp
je
xor
mov
add
inc
add
in
sarb
lret
fstpl
sub
or
insb
out
fwait
xor
ds
and
and
add
pop
je
xchg
ja
dec
pop
and
pop
rorl
out
bound
pop
push
add
loop
xchg
and
ret
adc
adc
dec
inc
add
cs
cltd
aam
add
lods
leave
imul
jmp
cli
jg
stc
xor
jecxz
add
inc
add
jg
loopne
and
pop
inc
add
lret
push
push
cwtl
jbe
movsb
icebp
or
sub
xchg
dec
mov
sbb
stos
push
rolb
xchg
jp
or
pop
pop
adc
push
and
jno
sbb
xchg
ud0
mov
cmp
mov
sub
xor
loopne
add
mov
cwtl
mov
lret
rcl
movsl
sub
fwait
roll
scas
mov
lcall
mov
mov
sbb
lret
push
lret
out
add
mov
ds
sub
addr16
das
das
sub
scas
add
repnz
sbb
stos
jnp
push
loope
mov
movsb
xchg
test
pop
clc
je
pop
xchg
cmp
or
inc
add
mov
lret
add
jle
lcall
and
pusha
add
popf
adc
lahf
and
push
imul
add
push
outsl
in
xor
cld
daa
dec
rcrl
or
push
mov
dec
cmp
leave
jns
and
out
pop
mov
add
movsl
jecxz
rolb
flds
add
fcoml
xor
mov
clc
insb
pop
cmp
cmp
adc
mov
sahf
nop
sbb
je
int3
inc
add
add
fwait
xchg
dec
push
or
daa
jge
out
push
add
add
adc
sub
testb
daa
sbb
xchg
push
ss
int3
aad
jne
adc
jecxz
mov
jmp
imul
repz
icebp
call
leave
mov
and
xchg
mov
test
rolb
add
shlb
and
add
add
fcoml
fpatan
adc
xchg
dec
sahf
sbb
lret
mov
lock
out
adc
add
rsqrtps
test
sti
fidivrs
push
fs
pop
xchg
lock
test
ljmp
sub
cli
or
add
in
mov
sub
scas
daa
repz
jnp
lret
add
addr16
je
shrb
sub
daa
cmpsb
pop
inc
add
push
jp
shrl
sub
cmc
movsl
rol
add
add
inc
add
add
add
push
inc
add
adc
mov
add
jo
fistl
inc
sbb
sbb
loop
repz
or
or
inc
add
add
jle
or
fmul
loop
adc
lret
or
mov
xor
iret
shl
add
add
scas
inc
add
lcall
fidivl
ja
popa
sti
stos
push
xbegin
xchg
pop
out
lahf
jo
cmp
out
pop
add
inc
add
aas
call
adc
push
cmpsl
add
push
add
add
leave
push
mov
iret
dec
and
nop
arpl
stc
mov
testb
ret
cld
mov
aas
jmp
jecxz
mov
push
out
cld
jo
stos
lods
mov
addr16
bound
cmc
fldl
sub
clc
aas
repnz
add
movb
mov
stc
mov
xchg
lods
mov
add
stos
xlat
loop
mov
sbb
lret
popa
int
test
call
mov
out
arpl
inc
add
loop
pop
addb
push
push
rorl
xchg
sub
ret
or
icebp
daa
xor
xchg
imul
inc
add
and
movsl
mov
andl
push
es
mov
and
and
add
dec
loope
dec
cmpsl
fs
out
loope
shlb
xchg
pop
lahf
or
cmc
pop
cs
lret
out
push
mov
mov
imul
add
fnsetpm(287
adc
add
test
and
sti
mov
ja
setb
sahf
icebp
xor
adc
and
dec
and
lods
cmpsl
or
add
ds
and
push
add
or
jb
xchg
jne
adc
pop
aad
or
pop
push
aaa
xlat
call
jecxz
xchg
dec
int3
dec
fsubr
sbb
sub
add
dec
test
out
cwtl
and
jnp
bndstx
adc
pop
push
stos
enter
lock
data16
leave
ds
add
mov
aaa
push
add
pop
pop
push
mov
inc
add
cli
or
rolb
pop
shll
mov
insl
ss
stc
push
mov
add
lahf
and
mov
sbb
jb
std
push
adc
cmc
sub
test
dec
push
pop
int3
sbb
dec
les
jl
cmp
icebp
lret
xor
lds
scas
lret
out
pop
jb
lock
mov
and
mulps
push
add
mov
lret
pushf
or
fidivs
movsl
mov
add
jb
and
cmp
stos
and
aad
aaa
std
mov
adc
mov
mov
cs
and
out
std
outsl
mov
aam
or
add
test
cmp
mov
adc
fstpl
mov
add
push
or
add
add
ss
fstps
js
pop
xchg
push
pop
or
or
fsubl
cltd
test
popa
xchg
rolb
call
cld
xchg
fwait
ds
lret
flds
sbb
inc
outsl
loope
cmpsl
mov
sarb
mov
add
xchg
imull
dec
pop
fs
xchg
aad
pop
clc
push
sbb
lea
xchg
sub
push
push
dec
adc
xchg
or
add
add
add
push
mov
jle
daa
sub
outsl
daa
aaa
mov
shl
dec
pop
mov
add
movsb
adc
xlat
pushf
je
cmpsl
ret
testl
cwtl
clc
dec
add
mov
push
fnstsw
cmp
add
adc
cmp
sbb
push
bound
ja
add
fdivs
out
or
addb
insb
mov
xor
mov
add
and
add
cwtl
jae
jae
subl
add
sbb
xor
dec
call
xchg
sub
sbb
mov
popa
and
jmp
je
xchg
cmpsl
mov
popf
and
rolb
shll
add
mov
jmp
cmp
scas
pop
sub
call
dec
lahf
xlat
add
shl
sahf
cmpsb
sbb
and
fucomi
pop
enter
adc
or
jne
test
lret
adc
cmp
outsb
mov
push
cmp
lock
les
pop
and
stos
mov
je
sbb
push
int
test
inc
push
mov
rclb
mov
inc
add
adc
in
imul
cmp
adc
push
and
bnd
ret
mov
sbb
pop
xchg
adc
mov
jo
push
ud0
imul
pop
inc
add
int3
jp
add
mov
addb
mov
xchg
push
popa
nop
mov
adc
cwtl
pusha
add
pop
inc
rolb
aad
push
jge
mov
mov
xchg
aam
addb
add
add
ret
fldl
outsb
in
bound
xor
mov
jmp
test
js
jbe
add
add
cmc
mov
mov
ljmp
scas
mov
jns
dec
fists
or
scas
mov
cmp
cmp
mov
mov
call
adc
jp
pop
or
js
aaa
cmp
in
mov
ljmp
scas
push
mov
outsb
sub
arpl
xor
cli
stos
nop
xchg
inc
xrelease
pop
add
lods
dec
add
pop
ja
inc
add
xchg
mov
xchg
xchg
dec
outsb
jle
push
xchg
test
int
aas
stos
mov
cmpsb
pop
cmp
or
stc
test
jg
add
iretw
out
inc
mov
or
stos
imul
ror
xchg
sub
dec
call
imul
int3
jbe
cmp
mov
xchg
mov
rolb
mov
add
faddl
pusha
add
pop
inc
add
xor
push
pop
cltd
pop
movsb
retw
xor
add
mov
add
mov
sbb
std
push
clc
clc
cmp
sti
out
fstp
cmp
inc
test
fisttpll
outsb
mov
insb
and
fwait
stc
inc
movsb
xor
repnz
roll
dec
or
pop
addr16
push
push
push
les
sbb
ja
xlat
fcoml
aad
out
add
test
movsl
jo
pop
adc
inc
loope
dec
or
arpl
aaa
inc
add
psllq
movsb
popw
in
sahf
pop
jmp
scas
mov
sahf
mov
and
movsl
gs
mov
and
cmpsl
xchg
sub
jne
lcall
sub
jo
inc
add
sbb
and
divl
jae
pop
inc
mov
loop
jb
xchg
pop
rcll
clc
je
movsl
jns
push
pop
add
inc
add
imul
lods
sub
mov
add
arpl
stos
push
jno
popa
sub
in
jo
cmp
xor
sub
mov
into
cld
cmp
sub
sub
mov
and
adc
xchg
sub
cmpsb
shlb
mov
mov
outsl
push
push
mov
add
lods
in
lock
jl
xchg
andl
fmul
adc
sub
inc
add
cmc
cld
cmp
mov
jl
cltd
shrl
es
and
dec
fnstsw
add
test
push
mov
dec
sub
sbb
cmp
or
and
mov
mov
add
xchg
cmpsb
aam
xchg
push
mov
xor
lods
pushf
sarl
pop
push
cwtl
mov
aas
mov
stos
add
sub
outsb
addr16
jp
add
mov
jle
add
es
out
xchg
in
into
mov
or
addr16
pop
mov
xor
jmp
jg
test
mov
loope
jle
pop
nop
lahf
xor
cltd
mov
iret
inc
push
out
enter
aas
or
add
xor
repz
rorb
aam
jbe
xor
xchg
test
add
jecxz
ss
aam
lds
pop
clc
inc
xchg
and
in
test
sbb
inc
xor
sub
push
xchg
lea
xor
sbb
xchg
mov
dec
loope
mov
mov
mov
les
into
jnp
pop
ja
sti
es
pop
mov
lods
dec
loopne
imul
and
push
push
mov
repz
pop
xor
fidivrs
dec
adc
aas
or
cmp
pop
jp
push
jp
add
mov
out
add
sbb
fidivrs
sub
inc
jle
ljmp
rolb
adc
push
jle
fidivrs
ljmp
or
add
xchg
outsl
lods
out
jp
push
pop
nop
lock
enter
push
mov
shll
insl
ss
sbb
in
ret
pop
ret
std
cld
and
mov
cmp
xlat
xchg
push
mov
rolb
pop
pop
xchg
nop
mov
push
add
inc
cmpsb
fsubp
mov
flds
in
rclb
sub
push
sub
add
push
cmpsl
in
xor
test
enter
subl
mulb
add
mov
jl
push
jnp
cmp
fistps
jnp
jl
mov
aas
mov
fcmovnbe
mov
lcall
mov
sub
push
cmp
arpl
cltd
not
movb
outsb
dec
or
addb
sbb
stc
fcoml
pop
mov
imul
jns
pop
sbb
sub
add
lahf
xor
loope
adc
pop
in
jle
addb
xchg
xor
jbe
repz
ret
xchg
les
jmp
xchg
popa
mov
stos
xchg
addb
adc
add
clc
pop
in
xchg
sbbl
add
addb
jp
pop
lds
out
mov
fwait
outsl
addr16
sbb
mov
mov
leave
fsubl
inc
jle
mov
jnp
in
ds
mov
jl
inc
pop
and
dec
subl
aaa
mov
lods
push
mov
xchg
mov
fildl
add
jae
add
shrl
push
add
xchg
jbe
shl
cmp
add
adc
pop
jno
es
cmp
out
hlt
mov
inc
add
jb
fsubrp
dec
mov
push
leave
out
imul
add
or
add
cli
jnp
jae
iret
mov
pop
mov
add
ss
mov
addb
loope
mov
dec
movsb
sahf
stos
inc
cld
xchg
stc
or
mov
mov
lcall
jmp
mov
xchg
add
fisttpll
xchg
pop
pop
hlt
and
stos
lahf
mov
jbe
cli
movsb
mov
inc
lahf
loopne
lds
and
aad
in
inc
push
jmp
add
lahf
sahf
cmp
out
cmp
mov
jecxz
add
fdiv
imull
lret
jge
add
dec
adcl
insl
inc
sbb
mov
pop
daa
clc
icebp
scas
sbb
xchg
xchg
push
inc
iret
imulb
jno
add
add
pop
and
pop
jno
add
xchg
push
mov
push
adc
mov
mov
add
out
add
mov
and
mov
jbe
sub
inc
add
fidivrl
push
jb
or
jg
fnstsw
xchg
mov
daa
jg
stos
push
add
lea
mov
xor
add
or
sbb
push
dec
stos
push
pusha
add
sbb
cmp
popf
aad
add
inc
add
xor
dec
jecxz
sahf
iret
jne
fwait
imul
mov
cs
push
aam
mov
fstp
inc
adc
push
mov
mov
cmp
mov
cwtl
sahf
rolb
sti
test
pop
sub
xor
push
shlb
dec
int3
icebp
adc
sbb
bound
cli
cltd
popf
in
pop
and
pop
imul
add
jl
insl
fidivs
pushf
cmp
fidivl
movb
sarl
push
loope
pushl
call
add
jge
mov
les
sbb
mov
pop
mov
int
test
xlat
cmpsb
movsb
xor
loop
adc
jmp
mov
pop
xchg
push
sahf
pop
fisubs
mov
sub
fwait
pop
rolb
mov
xchg
add
dec
sbb
add
sarl
pop
add
dec
inc
add
fcom
or
fwait
stc
dec
rclb
insl
imul
pop
stos
mov
or
push
dec
jge
xchg
out
inc
push
mov
aas
out
jp
jl
pop
jbe
add
or
addb
xor
fistl
mov
add
mov
adc
cmc
pop
mov
test
stos
push
sub
outsl
mov
add
mov
addr16
add
addb
push
sbb
cmpsl
sarb
movsl
push
add
or
push
xchg
inc
sbb
add
cwtl
ffreep
add
xchg
cmp
jecxz
outsb
aad
pop
mov
dec
nop
cmpl
dec
xor
movsb
xchg
pop
movsb
sbb
push
in
fucom
andl
fisubs
xchg
inc
push
test
ret
out
test
in
inc
add
add
das
testb
fbstp
cmc
leave
ja
xor
jmp
inc
add
out
xor
shll
adc
inc
push
lods
ljmp
mov
add
xor
or
stos
ds
hlt
pop
arpl
pop
loope
pop
jno
add
lret
push
adc
sub
dec
mov
lret
dec
mov
xchg
ljmp
sbb
add
repnz
pop
aam
jp
out
push
push
cmp
or
adc
lahf
je
jnp
sbb
out
jge
inc
add
cwtl
xor
inc
add
push
fiaddl
mov
test
lret
lcall
mov
push
aad
lock
pop
int
cmpsl
addb
jge
add
ret
xchg
pop
add
mov
lahf
out
sarb
es
mov
test
addr16
lods
out
imul
out
push
jecxz
notl
push
ret
pop
or
inc
mov
in
ds
addr16
les
dec
inc
add
addb
xchg
imul
push
xor
dec
push
pop
sahf
add
repnz
and
mov
pop
and
movb
adc
jge
xor
add
mov
adc
sbb
ret
and
aaa
in
lret
xchg
lcall
pop
out
inc
add
lea
cld
shll
loopne
push
leave
stos
or
daa
arpl
sbb
pop
pop
lea
mov
jecxz
addb
cmpsl
test
and
xorl
in
cwtl
nop
xchg
mov
add
jmp
leave
pushf
or
push
imul
mov
and
aaa
mov
arpl
out
stos
je
mov
inc
int
sub
push
jp
stc
data16
add
fistpl
call
cmpsb
ror
fsts
insb
shll
movb
add
cmp
dec
or
test
jmp
mov
mov
push
cmp
pop
cwtl
cwtl
std
rolb
add
mov
dec
out
addb
add
out
sti
loop
add
std
fsub
out
les
adc
popf
xchg
jno
test
hlt
sub
adc
les
jmp
faddl
pushf
aas
das
jne
xor
cwtl
cmp
add
add
sub
xchg
sbb
add
faddl
rolb
dec
cmc
mov
lcall
push
pop
int
pusha
add
adc
int
push
pop
lret
push
dec
jns
cli
lret
dec
sbb
or
adc
pop
inc
add
ja
add
icebp
mov
je
inc
add
std
cmpsb
ret
mov
push
test
add
out
adc
sub
movsb
fists
es
pop
dec
cmc
iret
cmc
xchg
and
mov
cmp
call
aaa
sbb
cs
js
fsubp
scas
imul
popf
daa
mov
inc
and
mov
adc
xchg
cmp
and
add
push
add
sbb
shl
push
mov
or
andl
xchg
sub
je
movsl
pop
xor
xchg
scas
outsl
cmpsb
adc
fisttpl
cmpl
jno
cmp
fimull
add
inc
cmpsb
sbb
push
jle
stos
mov
and
xlat
adc
cmc
fwait
lret
les
mov
mov
mov
roll
das
cmc
pop
clc
pop
cmc
imul
add
xchg
scas
movb
enter
push
add
sti
cld
mov
lods
and
cmp
xor
push
fwait
pop
add
add
dec
mov
out
sbb
call
sub
fidivrs
cmp
push
sub
pop
add
sub
push
xchg
sbb
adc
lret
cmpsb
stos
xor
loopne
in
les
cvtps2pi
mov
sub
pop
adc
xor
mov
jno
dec
mov
icebp
mov
dec
pop
rolb
ds
aaa
sbb
adc
push
rcrb
stos
pop
xchg
sub
inc
mov
xchg
push
fcmovbe
mov
pop
pop
imul
sub
pop
xchg
xor
mov
add
add
push
push
pop
pop
mov
dec
add
lock
nop
loope
lds
pop
push
jge
pop
adc
dec
mov
add
mov
ficoms
bound
pop
repnz
imul
sub
insl
xor
dec
popf
cltd
lahf
cmp
add
or
mov
or
jae
inc
add
lret
or
divb
adc
mov
lds
loope
dec
daa
dec
jnp
fndisi(8087
jo
xchg
rclb
mov
push
push
inc
dec
mov
int3
jae
and
xchg
test
sub
dec
lahf
aas
movsl
dec
or
inc
add
js
mov
xchg
dec
mov
push
int
adc
cmp
xchg
in
add
inc
test
jl
add
in
fldenv
rcrb
clc
dec
sub
or
add
add
test
loope
xchg
shll
aaa
xor
mov
mov
mov
shl
imul
add
add
cmp
sbb
jo
mov
stos
xlat
and
mov
add
mov
dec
mov
out
fldcw
dec
not
sub
enter
rcrl
and
and
and
mov
repz
jae
hlt
out
mov
rolb
cmp
jp
add
fcoms
ffreep
insb
mov
notb
add
add
jb
mov
les
call
add
mov
pop
call
mov
sahf
pop
sbb
xlat
jbe
in
out
adc
aaa
xchg
rcrb
insl
leave
ficompl
sbb
sarl
idivb
fdiv
mov
fldl
add
mov
rcll
mov
jbe
rcll
fsts
pushf
flds
ljmp
jl
dec
inc
jbe
add
inc
add
cmp
out
add
dec
rolb
sbb
mov
add
imul
mov
stos
loopne
xor
adc
aad
repz
pop
jecxz
push
call
pop
pop
cli
xor
ljmp
jb
adc
sbb
cmp
mov
pushf
jb
cmpsl
xchg
push
and
push
jge
cs
push
dec
pop
lods
dec
adc
or
cmp
ljmp
add
cli
lods
sbb
dec
dec
cltd
pushf
or
sub
add
nop
movsl
addl
dec
rolb
adc
add
mov
scas
repnz
cld
mov
add
divb
push
icebp
mov
mov
inc
add
jl
repnz
bound
pop
int
xchg
add
ljmp
in
je
or
pop
adc
fdiv
das
mov
loopne
outsb
outsl
jecxz
jge
ret
das
jge
push
cs
not
lcall
mov
enter
in
jne
adc
jl
jecxz
sbb
jns
add
dec
push
stos
mov
adc
inc
sbb
aad
and
or
aad
add
inc
xchg
clc
push
daa
add
add
xchg
loop
jb
mov
inc
add
adc
cwtl
and
insl
push
scas
and
cltd
shrb
ss
hlt
cs
pop
push
xchg
test
jne
mov
jge
jns
mov
fdiv
and
mov
add
mov
add
and
iret
testb
inc
add
ds
pop
cli
test
das
mov
cmp
fldenv
add
cmp
cmp
scas
or
add
mov
adc
mov
fimuls
mov
je
and
into
popa
pop
push
dec
sub
fsub
and
addb
bound
pop
xor
or
add
cmp
pop
and
push
bound
add
xchg
jg
add
cmp
stos
jae
in
imul
addr16
push
adc
mov
addb
hlt
sahf
and
push
xchg
push
movb
sub
cmpsb
ja
xchg
orl
xchg
sub
push
add
sti
mov
lahf
cltd
cmp
outsb
adc
mov
jmp
mov
jle
add
add
mov
in
fistps
pusha
add
dec
ljmp
jo
scas
fs
jl
or
cld
ret
ja
daa
xor
int3
add
lcall
lret
ja
scas
ret
lfs
pop
ret
movsl
inc
pop
sub
add
rolb
mov
push
outsb
leave
jmp
mov
addb
and
push
mov
sbb
mov
add
xlat
aas
cmp
ret
or
icebp
mov
andl
dec
insb
repz
jecxz
mov
sbbl
mov
push
in
adc
dec
mov
xor
jno
insb
cmpsb
push
mov
cmp
sub
push
pusha
add
or
pop
push
pop
loope
clc
scas
ljmp
test
xchg
xchg
dec
cmp
push
add
dec
mov
cmc
sbb
dec
mov
fs
push
adc
rolb
aaa
jno
add
pop
pop
cltd
sbb
jge
mov
mov
dec
addr16
shrl
sbb
jno
cmp
faddl
loope
shrl
pushfw
push
jae
or
or
lea
xor
pusha
add
add
rolb
decb
add
push
jno
pop
or
movsb
jae
cmpsl
jmp
insl
popa
xor
leave
scas
adc
ret
jbe
pop
sub
outsb
mov
in
out
mov
sbb
add
fistl
pop
lea
pop
movsb
pop
jno
pop
cmp
pushf
pop
or
mov
inc
add
mov
add
aas
les
shll
fdivs
mov
or
addb
sbb
pop
clc
mov
mov
loopne
js
add
sub
add
addb
add
popf
aad
jo
jne
mov
xchg
sbb
cld
ret
add
test
inc
adc
dec
aas
leave
mov
test
inc
add
pop
js
dec
xor
dec
xlat
xchg
ss
fadd
add
cs
push
insb
outsb
fcompl
in
jmp
adc
test
nop
push
jns
mov
addb
mov
lret
fs
sub
xchg
lret
mov
test
add
rolb
mov
rolb
ljmp
scas
lock
mov
xor
dec
dec
lret
movsl
ds
sbb
lret
js
mov
or
push
mov
pop
leave
out
stos
mov
adc
pusha
add
add
test
xor
cmc
sbb
sar
ret
es
pusha
add
add
mov
jmp
lock
lret
pop
jno
repnz
int3
shrw
sbb
add
push
sub
sub
ja
pop
loopne
jg
adc
add
jnp
sub
test
jmp
sub
push
adc
add
lret
or
push
or
jb
adc
ds
pop
mov
dec
lea
push
leave
testb
jle
jo
sub
sahf
mov
subl
fwait
call
pop
mov
test
xchg
inc
add
bswap
add
fnop
into
rolb
rolb
pop
mull
mov
data16
fwait
mov
nop
in
loop
xchg
add
inc
cwtl
fsubrl
push
out
aas
push
cli
ljmp
xor
inc
jo
fcompl
fmuls
push
inc
adc
es
push
nop
xor
adc
xchg
cmp
int
and
leave
mov
add
sbb
add
sub
hlt
scas
bound
xchg
popf
out
push
dec
pop
jge
or
add
add
popf
mov
inc
in
pop
les
and
cs
shlb
mov
push
in
sbb
incl
mov
xchg
pop
shl
aad
sbb
add
lret
cmp
add
sub
push
pop
ja
jmp
inc
imul
mov
fs
xor
insl
popa
mov
ret
cld
les
and
pop
adc
sti
in
mov
xlat
je
add
andl
hlt
fidivrl
mov
sbb
cmp
adc
stos
push
xor
das
add
mov
sar
inc
sahf
or
dec
mov
bound
rolb
mov
jo
pushf
cmpsl
inc
add
cs
pop
je
sub
imul
mov
int3
sahf
addb
add
pop
adc
xchg
int3
jae
mov
rorl
fs
out
je
addb
mov
xchg
add
xchg
mov
pop
dec
cmc
adc
insb
sbb
jbe
cmp
add
add
jge
into
test
outsb
adc
in
into
repz
add
mov
sbb
xor
jns
popa
js
adc
push
in
fs
jmp
adc
lock
fidivl
mov
xchg
fsubs
je
test
repnz
loopne
insl
dec
dec
out
addb
inc
add
inc
add
or
scas
loop
add
aad
test
movl
push
inc
push
imulb
int
daa
dec
fucomp
addb
lods
sbbl
addb
mov
data16
xchg
rol
add
test
add
clc
mov
lods
jo
ret
pusha
add
mov
fcomi
dec
notl
add
add
cmpl
cmp
ds
add
lds
das
sub
ljmp
ss
fcoml
mov
xchg
leave
jmp
add
pushf
fsubs
test
movsb
sbb
stos
or
cld
sti
fadd
add
mov
mov
scas
outsl
stos
push
lret
stc
xchg
xlat
aad
loop
test
jl
sahf
fwait
mov
cs
aad
sbb
add
inc
add
jb
fsubs
insb
xlat
pop
cs
sub
mov
lock
aam
cmp
cmpsb
cmp
pop
cmp
add
push
fsubs
arpl
addr16
mov
add
mov
mov
arpl
cmp
push
add
stc
cwtl
inc
mov
lods
xchg
dec
sub
add
push
lods
js
add
pop
and
jns
call
aam
or
clc
outsb
gs
divl
mov
movsb
in
mov
mov
sub
add
lds
movb
add
outsl
fs
jo
test
arpl
stos
jne
jp
sub
out
std
xor
icebp
daa
push
jle
add
push
mov
ror
movsb
xchg
and
xchg
stos
out
sbb
jmp
cli
stc
jg
add
pop
pop
les
in
rolb
sbb
cwtl
rolb
ret
mulps
xchg
pop
fwait
mov
push
mov
xchg
push
dec
xchg
pop
xor
cmp
inc
add
sbb
lods
mov
xor
call
and
jns
enter
mov
int
pop
int3
lods
push
mov
popl
insl
mov
sbb
dec
std
push
or
ja
sub
mov
cmp
test
xchg
fidivs
add
repnz
fiadds
add
push
sub
movsl
xchg
orl
adc
hlt
mov
push
lret
mov
push
xor
imul
outsl
or
add
jmp
add
push
pushf
out
js
rdmsr
out
inc
add
addb
sub
mov
add
lret
add
ds
bnd
xor
jmp
inc
add
jae
ss
imul
cs
mov
push
aaa
or
jbe
mov
mov
add
jmp
push
pop
lret
imull
push
stos
and
add
cli
jp
and
mov
cmp
imul
enter
adc
test
enter
mov
jnp
stos
add
sbb
add
inc
push
movsl
mov
jl
loopne
mov
mov
ret
or
fcomps
call
out
jmp
cmp
sarl
add
push
pop
iret
add
and
sub
add
fs
cmp
pop
ja
shrb
test
sbb
and
or
inc
add
ss
sub
and
inc
mov
out
hlt
xor
sub
imul
fdiv
lcall
xchg
lods
jle
xchg
cmpl
das
icebp
arpl
daa
das
out
out
or
cs
jmp
adc
fistl
repnz
jmp
addb
and
mov
dec
add
mov
je
imul
lods
or
adc
arpl
daa
xchg
mov
add
fistpll
sub
xchg
in
std
scas
push
jns
outsl
dec
push
add
jbe
out
fstps
outsb
pop
and
ficoms
add
xchg
lods
mov
push
pop
add
fnstenv
and
iret
lock
ret
push
nop
aaa
sbb
insb
or
mov
cwtl
icebp
sarb
in
or
in
rolb
add
jns
das
xchg
jo
int3
inc
add
mov
dec
into
cwtl
mov
cmp
jmp
inc
pushf
ljmp
rcrb
aad
mov
and
ret
adc
cmp
xchg
jecxz
or
loope
sub
pop
fldcw
fdiv
decl
push
arpl
add
jno
dec
pop
dec
data16
add
add
sub
mov
add
cs
addb
lret
mov
mov
lea
sub
xor
lret
shl
add
jns
mov
and
lock
lds
mov
xor
js
cltd
mov
push
sub
cmp
icebp
and
addb
out
add
shll
mov
pop
push
popf
mov
mov
sti
out
xchg
xchg
add
sub
out
adc
push
rolb
mov
mov
cld
and
push
xchg
fsubs
sub
outsb
dec
stc
and
add
in
pop
popf
mov
xor
mov
jns
xor
sub
loop
lock
sbb
mov
or
in
mov
add
fcoml
rcrl
and
mov
push
lahf
insb
mov
imul
je
scas
sbb
sub
in
cmpsb
push
mov
push
push
mov
add
loop
movb
sbb
lds
faddl
cmp
add
xchg
fcmovbe
mov
aaa
decb
xchg
cli
push
aad
scas
lds
mov
cmc
gs
add
mov
daa
push
and
dec
imul
and
push
cwtl
pop
inc
les
sub
dec
xchg
leave
pop
or
pop
jmp
out
into
lahf
cmp
mov
loope
daa
pop
lea
bound
push
imul
pop
cmp
add
aas
jl
inc
add
imul
mov
in
movsl
cmp
je
sbbl
push
ret
mov
rolb
or
mov
mov
adc
nop
mov
add
add
dec
lahf
push
xchg
inc
add
imul
mov
or
pop
loop
push
add
clc
inc
stos
sub
add
in
mov
aad
add
insb
or
lods
loope
add
and
push
mov
outsl
loop
add
add
shl
in
mov
xchg
fs
testb
sub
push
popa
or
in
adc
mov
daa
jae
iret
sub
outsl
adcl
add
pop
push
adc
mov
outsl
mov
rcll
pusha
add
add
add
cmp
xor
adc
sub
aad
pop
inc
mov
or
add
pushf
cmp
jnp
mov
adc
cwtl
and
and
add
bound
test
dec
mov
in
lcall
add
add
jne
insl
mov
pop
jb
test
inc
add
bound
movsb
sbb
inc
insb
je
adc
inc
add
push
mov
call
les
cmp
push
lods
and
sub
xchg
jp
mov
xlat
lock
lods
lods
cwtl
ret
jge
add
sti
jbe
les
popf
sbb
push
cmpsb
in
inc
sub
mov
or
lods
jae
jmp
in
inc
add
mov
mov
mov
push
add
mov
mov
loopne
or
or
dec
mov
stos
imul
add
push
cmp
inc
add
out
les
call
popf
dec
mov
outsl
push
movsb
mov
xor
dec
inc
add
add
pop
lock
andl
hlt
ret
adc
mov
add
rcrb
and
xchg
out
xchg
mov
push
cld
push
dec
mov
movsb
pop
fmuls
sbb
inc
dec
adc
inc
add
int
out
and
popf
aas
icebp
xor
add
aam
out
in
jl
cmp
mov
in
mov
mov
add
imul
pop
dec
aam
in
movsl
push
jo
je
rol
add
sti
and
pop
shll
and
shlb
out
int3
shll
cmp
push
mov
sub
jg
ret
push
jg
mov
or
pop
mov
enter
cmpsb
stc
pusha
add
outsl
mov
inc
add
xlat
xor
lcall
add
mov
rcr
rcll
add
lods
enter
jne
out
xchg
cmp
sarb
xor
mov
xor
mov
and
and
lods
push
mov
add
adc
fstpt
imul
mov
mov
popf
push
xchg
and
outsl
icebp
push
lret
inc
les
ret
mov
cwtl
jle
gs
inc
add
test
jne
sub
and
fsubrs
in
jb
cmp
inc
movsl
xor
add
cld
mov
jge
mov
js
stc
ret
add
imul
mov
push
add
nop
faddl
cmc
cld
jge
push
pop
enter
add
scas
scas
fidivrl
add
or
add
add
jp
fldt
xchg
insb
xchg
lods
push
popf
mov
xlat
sub
or
hlt
ljmp
add
xchg
jge
ja
or
pusha
add
jg
in
add
in
mov
add
fchs
pop
fadds
adc
sub
add
pushf
mov
xor
or
sub
dec
push
into
jmp
cmp
push
mov
aas
in
mov
xlat
mov
xchg
popa
in
add
icebp
cmpsl
pop
roll
add
movsb
addr16
add
pop
aaa
push
adc
mov
loopne
in
xor
pop
aam
movl
or
dec
mov
sbb
movb
and
dec
dec
mov
jecxz
cmp
add
pop
sbb
xchg
dec
sahf
mov
outsl
push
add
out
enter
loopne
push
mov
out
adc
jg
outsb
jmp
dec
pop
jbe
sbbl
mov
dec
test
mov
loope
add
xor
sub
imull
and
xchg
test
mov
mov
shrl
xor
inc
add
pop
push
faddl
scas
fwait
mov
jnp
es
dec
arpl
mov
jmp
sub
xchg
sbb
fwait
and
xchg
fistps
adc
adc
inc
add
mov
mov
js
movb
stos
push
vunpcklps
cltd
add
cmp
add
das
jp
xchg
adc
pushf
dec
fcomps
push
aam
pop
or
fmull
pop
pusha
add
mov
test
rol
adc
hlt
incl
stos
es
add
add
hlt
addb
sbb
into
mov
add
aaa
mov
adc
lods
xchg
xchg
test
add
mov
add
clc
icebp
test
xchg
movsl
push
xor
or
xor
lea
notl
adcl
jbe
push
std
in
addb
sbb
adc
sub
push
or
mov
leave
inc
push
inc
ret
sbb
iret
imul
adc
call
sbb
xchg
sub
ljmp
mov
lahf
in
decl
in
imull
sbb
push
push
pop
addb
mov
scas
cld
mov
data16
movsb
sub
movb
jns
imulb
ja
es
add
add
pop
push
push
add
mov
sti
mov
addb
push
and
sub
inc
add
or
enter
call
add
iret
mov
or
mov
fdivp
inc
add
jg
cmp
test
jbe
loopne
iret
loop
push
popa
lea
add
clc
mov
das
out
mov
sub
cmpsb
mov
cld
test
push
sub
ret
das
pop
filds
mov
testl
mov
inc
add
inc
add
push
shll
add
das
dec
mov
lret
and
push
or
ret
cmp
cmp
mov
test
outsb
fists
cmpsb
push
and
adc
outsl
test
push
pushf
push
xor
xor
add
fldcw
das
dec
push
nop
mov
sbb
adc
les
sbb
mov
lret
dec
addr16
addr16
push
insl
out
inc
add
scas
dec
push
and
mov
add
push
or
fdivl
repnz
dec
mov
fisubrs
pushf
pop
dec
push
jnp
lods
clc
jbe
push
mov
je
jg
arpl
adc
mov
push
adc
fdivr
add
jecxz
pop
mov
es
add
aam
bound
clc
mov
jno
sub
add
xchg
popa
and
and
aas
enter
das
stos
jl
add
stos
dec
push
dec
leave
xchg
rcl
and
movsb
jne
xchg
lcall
hlt
adc
add
mov
push
in
inc
fisubrl
xchg
in
les
loop
add
pop
add
stos
mov
adc
push
rcll
int3
pop
imul
add
mov
inc
add
and
xor
icebp
data16
mov
fnsave
mov
xchg
outsl
mov
jnp
add
mov
clc
pop
insb
bound
leave
loopne
sti
mov
xor
sbb
incl
mov
stos
pop
jg
pop
dec
mov
loop
mov
pop
leave
xor
mov
es
int
test
xchg
les
mov
imulb
inc
sbb
mov
mov
mov
add
add
imul
addb
out
iret
mov
nop
mov
jg
xor
test
bound
sub
mov
jne
cwtl
shll
add
leave
adc
daa
das
mov
lahf
notl
push
ret
imul
rolb
mov
inc
add
mov
add
test
dec
add
dec
dec
cld
call
push
mov
fildl
cmc
ffree
adc
adc
cmp
jne
mov
ljmp
lds
add
xchg
stc
jb
out
jmp
sub
lods
movb
mov
rclb
mov
add
sbb
adc
imul
lcall
cld
inc
add
xorl
or
lods
test
stos
push
pop
rolb
insb
sbb
ss
sbb
testb
out
mov
add
add
cmp
cmpsl
lods
sbb
daa
pop
pushl
addb
pop
ja
popa
jle
scas
sbb
add
adc
movq
test
push
jb
or
jae
sbb
in
inc
add
jnp
jns
lods
cmp
xchg
repz
xlat
jmp
add
adc
push
push
cmp
icebp
int3
popa
cltd
jo
loope
movb
pop
addb
fldenv
out
add
jle
push
shl
fmull
cmpsl
out
sbb
adc
addb
or
sti
or
loope
sbb
add
and
jne
in
rorb
add
xchg
aaa
test
mov
cmp
pop
std
mov
add
cmp
test
add
not
pop
leave
mov
pop
cld
das
int3
xchg
sbbl
xchg
pusha
add
dec
cwtl
gs
mov
xchg
pushl
mov
cmp
ja
add
sbb
pop
sub
movsl
push
clc
jl
add
cmp
jmp
add
out
xchg
popa
xor
add
add
sbb
push
test
pop
in
xchg
clc
jno
adc
xlat
aad
cli
shll
lea
loopne
xor
mov
and
das
cmpsl
dec
roll
out
xchg
add
outsb
addb
insb
jbe
stc
mov
or
call
outsl
mov
xor
xchg
frstor
add
movsl
push
mov
adc
add
adc
int3
mov
out
sbb
pop
sbb
mov
add
cmc
lret
cmp
les
gs
push
popf
ret
cmpsb
loop
jb
ret
jne
mov
sbb
dec
das
test
decb
out
pushf
jp
out
mov
dec
fwait
addr16
lcall
aas
addb
cltd
les
mov
inc
add
add
mov
add
jecxz
pop
push
cmp
mov
ficompl
mov
mov
in
push
loope
add
fstpl
out
add
rolb
pop
pop
fwait
pop
xchg
adc
pop
jmp
iret
in
stc
inc
add
imull
sbb
mov
mov
andl
lret
dec
fnstsw
jae
push
add
inc
sub
jnp
daa
add
xchg
iret
jecxz
test
shl
pop
jnp
lret
add
repz
adc
or
dec
mov
push
outsl
aam
loop
clc
adc
xor
aas
popf
jne
add
je
add
in
sub
pusha
add
mov
jmp
out
notl
mov
insb
jno
mov
vmovsldup
add
les
outsb
insl
les
enter
adc
mov
or
rcr
adc
movd
fisubrl
sbb
push
lret
mov
cmove
inc
add
jno
out
ret
cli
sbb
test
cmpsl
push
push
adc
scas
sub
ss
iret
lods
xchg
in
test
push
sti
xchg
in
mov
pop
or
jp
adc
pop
inc
add
popa
repnz
xchg
icebp
mov
cltd
mov
ror
cmp
icebp
outsl
sbb
call
mov
adc
movsl
sbb
fisubs
bound
jne
lahf
xor
ficoml
or
jne
mov
mov
push
or
into
aam
xlat
ljmp
into
xor
inc
add
pop
pop
sbb
addb
sbb
test
sub
ret
add
cld
dec
lods
int
fsubs
add
sarl
jp
and
gs
fistpl
ficoms
push
test
mov
xor
int
add
mov
iret
push
ss
add
jge
rolb
rolb
cwtl
dec
roll
dec
mov
mov
inc
test
ss
jle
addb
pavgb
pop
je
sti
fmuls
sub
pop
sub
jecxz
add
sub
sub
mov
add
addr16
add
jmp
in
add
add
or
movb
cli
xchg
outsb
adc
into
mov
inc
adc
push
das
stos
push
shll
inc
add
jbe
dec
lahf
jg
in
fisttpl
jle
fwait
mulb
arpl
mov
or
fldcw
ss
sub
add
js
push
add
dec
push
mov
test
inc
add
es
dec
mov
jno
adc
fsts
ret
or
add
add
cltd
mov
mov
dec
je
jg
popf
xor
fists
addb
loopne
add
imul
inc
jnp
dec
pop
aam
repz
add
test
bnd
pop
movsl
sbb
popa
xchg
xchg
cmp
jp
add
add
pop
jbe
and
xlat
mov
sbbl
add
adc
pop
std
push
cs
dec
ljmp
xchg
cld
xchg
jnp
sti
int3
push
push
mov
add
stos
flds
or
or
mov
add
dec
repnz
imul
adc
cmp
out
shll
mov
mov
addb
mov
out
add
jnp
push
xor
jnp
loope
lret
ret
or
jp
add
int
jge
lret
mov
pusha
add
fisubs
hlt
pop
cmp
and
add
addr16
xor
out
das
into
xchg
xor
icebp
outsb
rorb
jmp
xor
ret
dec
xorl
mull
or
movsb
push
mov
sbb
push
mov
adc
rcl
mov
xchg
lea
add
jnp
sbb
shrb
insl
push
mov
mov
cmp
sub
add
sti
fmull
outsl
mov
dec
movsb
rolb
addb
mov
pop
repnz
shrl
mov
fisubrs
pop
outsb
inc
add
into
outsl
jb
mov
jle
mov
popa
loop
addb
neg
imul
or
add
and
push
pop
or
rolb
pop
test
popa
pushl
out
mov
fxch
maskmovq
notl
andl
inc
add
movb
add
in
stos
sub
sbb
xor
jmp
ret
stc
jmp
add
jp
xchg
dec
mov
sbb
adc
jae,pt
jg
sub
jne
bound
sbb
cwtl
sarb
add
test
and
jle
sahf
cmc
xchg
mov
add
js
aam
mov
fcompl
out
push
xchg
mov
push
adc
cmpl
push
cld
lcall
sbb
lahf
add
decl
add
and
test
mov
nop
leave
xor
movsb
jno
sbb
pushf
mov
sub
dec
pushf
fcompl
ds
flds
repz
sbb
mov
jnp
dec
sub
das
xchg
or
xlat
adcl
daa
out
push
add
dec
inc
or
rorl
mov
lahf
xor
scas
in
cmp
outsb
rcll
out
xor
outsl
out
xor
fmul
mov
and
stc
mov
dec
pop
cmp
ja
and
sub
rolb
les
mov
pop
push
pop
pop
aam
out
jne
sahf
lods
ja
sbb
pop
xor
or
enter
xor
mov
jo
push
add
xlat
adc
lods
mov
mov
popf
pop
inc
mov
xchg
scas
mov
mov
rcll
call
inc
xchg
int3
sbb
jnp
outsl
and
cli
cmp
es
and
jecxz
mov
bound
pop
loope
loop
add
inc
jp
dec
repnz
clc
outsb
push
in
sbb
popf
or
insl
mov
add
in
mov
test
fidivrl
repz
sub
jge
imul
sahf
or
and
jp
ret
sbb
add
sub
push
lret
add
inc
popf
xor
popf
xchg
mov
movb
aad
dec
addr16
add
xchg
push
mov
dec
add
mov
and
mov
mov
add
sbb
jns
fisubrs
adc
hlt
mov
shlb
fists
fmul
or
shll
add
cmp
dec
loop
sub
and
lahf
dec
addb
daa
into
inc
addb
psubb
cmp
cltd
mov
fiaddl
hlt
std
repz
ret
push
mov
jns
add
in
shrb
mov
cwtl
mov
xor
jbe
iret
mov
add
xchg
loopne
cmp
sbb
aad
cmp
add
dec
lods
add
sti
in
popf
add
das
sarl
mov
xor
or
idivb
popa
jge
insl
out
push
push
sbb
mov
cmp
repnz
das
clc
popa
jmp
lock
in
add
daa
ret
dec
pop
sbb
insl
add
inc
fildl
mov
cwtl
dec
mov
rcll
ss
clc
fldl2e
add
mov
xchg
xor
leave
fldt
mov
add
roll
jnp
and
iret
push
pop
mov
xorl
mov
adc
std
pop
mov
add
lock
cmp
rcrb
add
sub
das
mov
jne
icebp
inc
movb
popa
and
jmp
out
mov
mov
xchg
fdivrs
nop
and
sbb
movsb
mov
movsb
inc
add
out
cmpsl
xchg
and
loopne
add
xchg
pop
jb
jmp
jp
mov
aad
add
into
mov
or
roll
cmp
add
ds
inc
inc
add
and
int3
rcrl
lahf
mov
pop
inc
add
popa
cwtl
xchg
das
lds
enter
loopne
xor
fwait
lret
mov
fsubrp
jl
mov
out
out
mov
inc
add
loope
push
je
les
inc
add
add
add
in
fistpl
push
mov
pop
mov
stos
dec
jbe
out
enter
add
xchg
icebp
sbb
lods
xor
or
add
in
icebp
mov
mov
inc
xor
mov
mov
push
dec
xor
ret
test
xor
popa
loop
sbb
add
aad
in
ljmp
nop
add
and
add
mov
jp
pop
rcll
mov
stos
aas
and
inc
jb
movsb
dec
daa
aad
mov
inc
pop
cmp
mov
sub
lea
push
dec
imulb
loope
inc
xor
out
jae
add
and
loop
addb
add
loopne
std
ja
cwtl
fdiv
addb
cmp
and
push
sbb
inc
add
cmp
mov
push
iret
ds
sahf
mov
cli
sbb
fdivs
pop
test
inc
add
out
mov
mov
push
add
add
add
out
out
cld
lea
inc
add
out
cmp
push
rep
test
add
lds
cmp
test
dec
fwait
movsb
inc
dec
stos
jmp
loop
fsubrl
add
rolb
sahf
cmc
insb
js
cmp
add
leave
rolb
inc
add
bound
jl
dec
cmp
dec
lahf
dec
sbb
jl
ficoms
ret
les
imul
loopne
arpl
outsw
pop
movb
pop
and
or
in
idivb
mov
test
int3
xchg
pop
push
pop
dec
jmp
rolb
std
mov
neg
imul
xlat
test
dec
pop
jmp
mov
scas
push
push
xor
bound
addb
mov
orl
xchg
mov
and
xor
das
xchg
mov
dec
ss
xor
outsb
cli
push
push
rolb
push
fmull
xchg
xchg
daa
sub
sar
mov
add
in
jge
add
aaa
int3
or
add
mov
or
imul
addb
add
xlat
enter
push
mov
adc
lds
jecxz
add
mov
movsl
scas
jg
leave
imul
dec
xchg
repz
push
push
sub
loope
add
shr
jo
push
popa
aad
leave
leave
pop
bound
jp
imul
lret
mov
inc
add
out
adc
movb
add
mov
xchg
push
adc
repnz
pop
ffreep
add
push
and
pop
inc
add
lods
cmp
or
push
mov
les
addb
cmpsl
xlat
fiaddl
lds
mov
aas
idivl
sub
ficomps
out
mov
add
mov
test
xadd
imul
inc
sahf
cmp
jno
add
cld
addl
add
push
fsts
sbb
movsb
idivb
rolb
pushf
jl
mov
mov
mov
loopne
xchg
or
rcrb
les
inc
add
jne
sbb
add
pusha
add
push
xor
hlt
and
add
add
and
inc
add
shll
add
into
mov
push
bound
jne
adc
aam
lea
push
je
rcrl
jae
sahf
loop
or
sub
insl
out
pop
test
sub
xchg
out
dec
pop
aam
xchg
inc
add
imul
jecxz
mov
jl
nop
lea
rorl
lods
mov
xchg
aam
add
add
or
dec
cmp
pop
inc
add
outsb
pop
fsubr
addr16
mov
aad
bnd
fisubl
adcl
aas
mov
sbb
cmpsl
imul
mov
fistpl
dec
pop
mov
shlb
iret
hlt
sub
add
js
cmp
add
test
mov
lds
push
push
inc
add
adc
mov
lret
add
pop
sbb
jge
inc
add
pusha
add
data16
std
insb
daa
adc
lret
outsb
push
das
or
push
mov
movsb
inc
dec
pop
fcmovb
ds
lea
jne
xchg
dec
jno
cmovb
inc
add
cmpsb
mov
sbb
and
rcll
stc
fdivrs
add
adc
mov
xor
int3
je
enter
mov
sbb
and
add
data16
inc
add
sub
stc
add
adc
add
inc
fimuls
out
bound
or
add
addb
jnp
add
lret
dec
or
in
xchg
adc
jp
movb
add
ja
sti
sub
add
bnd
lock
jnp
addb
add
push
xor
jp
out
add
xchg
out
insl
rolb
dec
icebp
xor
sbb
pop
mov
addb
loop
std
in
daa
mov
dec
and
ret
jecxz
sub
ret
je
aas
rolb
jmp
mov
sub
iret
dec
cwtl
pop
bound
mov
add
hlt
inc
add
in
lcall
je
cmp
test
jg
dec
jge
rclb
and
add
xchg
xchg
mov
and
bsr
mov
lock
push
and
adc
insl
repnz
jecxz
je
cli
fstl
cmp
call
dec
push
loope
ljmp
xchg
int3
and
popa
shrl
cs
inc
pop
and
subl
add
arpl
xchg
scas
aam
xor
mov
lods
add
stos
hlt
test
stc
std
and
cwtl
pop
jg
addr16
test
rclb
add
push
daa
pusha
add
cmp
xchg
inc
ret
and
fwait
rolb
push
cltd
push
add
add
xchg
push
add
pop
addb
xor
lcall
pop
mov
and
fwait
mov
cmc
and
popa
movb
add
mov
or
xchg
jl
push
or
xchg
les
addb
inc
add
xor
dec
cmp
jno
dec
aam
push
lods
ss
fwait
jbe
lret
imul
sub
add
mov
jo
daa
int
stc
mov
mov
cs
sbb
sbb
push
jmp
add
inc
add
rolb
sub
rolb
in
fsubr
dec
pop
xchg
lds
dec
bound
cwtl
sahf
out
mov
sti
movsb
jno
imul
test
jno
add
inc
pushf
dec
pop
jnp
test
xor
push
mov
and
mov
xor
call
into
scas
mov
push
loop
mov
xor
or
data16
stc
push
loop
add
sub
mov
cmp
pop
out
pop
sahf
sbb
aam
xor
pop
and
cwtl
mov
daa
cmc
das
pop
mov
jbe
addb
mov
adc
add
data16
xchg
test
je
jno
push
aam
fwait
scas
mov
js
lret
mov
cli
push
mov
mov
sbb
movsl
inc
pushf
ret
adc
xchg
in
dec
jmp
mov
repz
std
inc
add
add
lret
cs
inc
add
outsb
lea
mov
dec
mov
add
and
insl
test
xchg
mov
cld
sarl
or
jge
xchg
shr
addb
dec
xor
movsl
lahf
xchg
fdivr
daa
sub
xchg
stos
or
popf
xchg
add
pop
lea
add
push
push
sub
subl
xor
add
test
fstpl
fmul
adcl
aas
cmp
jmp
and
add
adc
out
mov
add
push
xchg
stos
mov
roll
dec
add
mov
neg
test
xchg
insl
jmp
data16
pop
mov
hlt
fimuls
das
sub
mov
xor
lods
addr16
pop
aaa
flds
add
jl
sub
inc
xor
movlps
add
dec
xchg
arpl
aas
mov
push
jne
push
dec
movsl
and
mov
mov
insl
mov
testl
popa
rcll
add
xor
add
popa
xchg
xchg
scas
ljmp
inc
add
add
xchg
jo
adc
hlt
imul
xchg
sub
xchg
iret
xchg
xchg
mov
movsl
mov
fsubrl
pop
test
and
loope
add
nop
adc
ss
or
fbld
xchg
arpl
cs
in
pop
mov
cmpsb
pop
sbb
lret
shll
cmp
lcall
inc
jns
cltd
loope
cmp
in
mov
in
inc
pop
repz
filds
movb
inc
imul
fwait
adc
aaa
fdivrl
push
jp
popf
fnstenv
loope
testl
add
movsl
ja
fwait
xchg
mov
jno
cmp
xchg
cwtl
test
xchg
negb
ret
mov
add
add
sbbl
sarl
pop
sbbl
sub
push
btr
jle
mov
jns
mov
fidivrs
jge
jle
xchg
data16
lods
ret
xorl
enter
push
out
and
mov
mov
and
das
rep
movsl
sbb
std
stos
inc
int
pop
pusha
add
shll
jbe
lods
sahf
mov
mov
push
push
fidivrl
jb
push
add
call
mov
push
or
add
out
popa
jg
fsts
into
shl
xchg
js
sbb
test
ret
cwtl
mov
fmul
cmpsb
enter
imul
addb
stos
outsb
in
int
dec
add
inc
add
jnp
pop
pop
sbb
mov
sub
or
fwait
mov
xor
add
fndisi(8087
popa
outsb
pop
lods
fdivl
mov
mov
push
xor
mov
mov
into
and
push
scas
cmp
dec
xchg
iret
ficoml
lcall
dec
adc
xlat
adc
sub
scas
cmp
sub
or
cmp
add
negl
nop
ret
lahf
pop
mov
dec
movsb
jge
lods
ret
mov
shrl
lret
jno
rcrl
shrl
mov
adc
inc
add
sub
cmp
jge
sub
inc
add
fidivrs
lods
jge
mov
es
or
enter
call
xor
ret
push
pop
dec
leave
outsl
out
mov
push
outsl
inc
outsl
xor
cmp
pop
push
fnstsw
dec
pop
and
aad
addl
imul
sbbl
out
lahf
cmpsb
or
pop
jo
xchg
lods
fwait
jmp
mov
stos
cmp
mov
mov
add
bound
shlb
gs
xchg
imul
stc
adc
incl
fdivl
roll
push
fcomi
popf
pop
gs
test
adc
sub
and
fcmovnb
add
addb
jne
lret
data16
xchg
movb
jmp
and
xchg
add
and
add
leave
mov
incb
or
mov
sbb
repz
xor
push
jmp
add
repz
xchg
movsb
les
imul
mov
loop
addr16
pop
push
mov
mov
jecxz
inc
add
mov
sbb
and
fs
hlt
xor
sbb
movsb
sbb
sub
xchg
lret
movb
mov
pop
leave
pop
xchg
test
push
fucomi
out
jb
sti
aas
add
jl
pop
out
and
mov
sarl
mov
scas
mov
xor
cs
les
lods
lret
bound
les
inc
add
push
xor
notb
rol
outsl
mov
add
sub
int
out
mov
jle
mov
popa
adc
push
pop
sub
cmp
mov
test
popf
rolb
dec
mov
mov
ljmp
outsl
cs
push
repnz
sti
dec
inc
add
decl
or
push
jmp
push
ds
cmp
sbb
faddl
sbb
push
jb
stc
mov
mov
divl
add
es
out
sub
arpl
mov
mov
sub
lods
sbb
aas
iret
mov
adc
aas
mov
add
lock
add
adc
xchg
inc
bound
inc
add
cmp
je
ljmp
add
lods
jae
ss
movl
lods
mov
out
xor
lea
xchg
das
inc
into
outsb
lret
shll
idivl
inc
lret
adc
fwait
inc
adc
dec
push
mov
fstpt
add
push
stos
cmpsl
adc
add
adc
outsb
out
test
push
insb
inc
add
dec
scas
or
add
mov
scas
and
push
xchg
mov
or
out
xchg
xor
pushf
std
sub
xlat
inc
add
add
aad
in
dec
or
aas
cmp
or
sti
push
lods
nop
xchg
in
les
cmp
or
fisubl
add
xor
test
mov
stos
ficoml
loope
adc
cwtl
int
and
stos
daa
xor
faddl
mov
add
xchg
imul
addb
movb
xchg
cmp
mov
or
sbb
xchg
mov
enter
or
mov
test
imulb
xchg
movsl
jnp
adc
xchg
and
jg
int
pop
cmpsl
add
lods
pop
adc
dec
scas
xlat
test
jmp
xor
adc
gs
inc
add
lds
sahf
pop
ret
pop
sbb
ficoml
xor
mov
daa
sub
push
les
aas
scas
ret
mov
adc
jp
add
daa
lahf
cltd
mov
addr16
leave
jp
mov
fwait
pop
arpl
and
dec
clc
in
mov
jp
shrl
imul
daa
adc
in
sahf
cli
or
jbe
stos
jo
sbb
xor
aaa
xchg
jecxz
ds
mov
push
into
pop
or
adc
jnp
stos
push
cmp
mov
dec
mov
and
popf
test
push
xchg
imull
out
mov
subl
sti
fsubp
orl
adc
stos
push
pop
adc
or
xchg
jmp
mov
call
jecxz
inc
fdivrl
jle
imul
int3
mov
fstpl
adc
and
jmp
hlt
rorl
out
clc
push
movsb
imul
add
ds
add
add
inc
es
jae
mov
xor
xor
movb
pusha
add
leave
adc
add
adc
jecxz
inc
add
inc
add
mov
dec
mov
inc
push
mov
jle
ficoms
add
stc
cmp
cld
xchg
pop
hlt
test
dec
mov
mov
das
adc
mov
outsl
mov
mov
push
js
adc
les
push
test
xchg
mov
jle
lods
lock
add
push
jp
push
addb
push
out
test
pop
outsl
jmp
pop
push
je
cmpsl
cmpsb
movhps
mov
orl
movsb
adc
cmp
jl
jae
fstpt
sti
pop
js
jmp
and
add
add
xchg
in
mov
xlat
fistpll
aam
add
inc
add
popf
jae
cwtl
and
push
gs
hlt
leave
xchg
adc
inc
movsl
mov
repz
mov
mov
add
sub
mov
sub
sub
sti
push
add
roll
pop
mov
pop
inc
add
lret
imul
fdivs
inc
add
out
push
inc
add
add
jle
xchg
aad
add
jo
xchg
iret
push
sub
lock
pusha
add
pusha
add
add
xchg
push
add
imul
dec
mov
fidivs
add
pop
mov
out
mov
arpl
add
test
xchg
dec
rolb
push
cld
inc
add
add
test
rolb
mov
cli
cwtl
clc
pop
push
push
add
cli
jp
inc
pusha
add
jno
sbbl
jne
test
lock
mov
add
insl
add
push
inc
cmpl
fidivrl
in
add
push
je
data16
shll
and
push
sar
jecxz
cmpsb
pushf
lea
fwait
cwtl
movsb
cli
sub
add
pop
xchg
fcomps
pop
bound
imul
dec
mov
popf
mov
cs
into
lcall
mov
mov
add
cmp
les
lods
lret
adc
xchg
bound
div
xchg
pop
inc
movb
mov
add
ss
call
andl
addb
hlt
push
into
stos
cmp
mov
xlat
xor
daa
out
ds
add
cmp
mov
icebp
mov
std
adc
inc
cli
negl
push
call
mov
loop
outsb
jmp
in
ja
lret
call
inc
add
je
jge
sbb
xchg
les
mov
addr16
add
and
xchg
jb
sub
inc
in
jle
inc
test
jp
stos
jne
in
push
call
xor
jnp
shl
push
mov
rclb
push
push
loope
sbb
loope
adc
dec
movsb
sbb
in
fwait
ss
mov
add
dec
clc
arpl
mov
cmpsb
pop
std
mov
sbb
adc
imulb
cmp
outsb
ja
mov
adc
dec
loop
fwait
shrb
mov
cs
push
sbb
add
push
jo
fmul
and
push
fs
orw
mov
mov
sbb
fmulp
adc
andl
ljmp
xchg
mov
add
or
pusha
add
sbb
jmp
add
test
add
or
push
aas
xor
mov
test
or
add
mov
aam
imul
xchg
rolb
mov
nop
xchg
jl
lcall
lcall
dec
cmp
fisubl
xchg
xor
outsl
fistps
push
add
movsl
mov
scas
push
movsl
pop
addb
pop
sbb
call
sub
mov
add
add
shll
nop
addb
scas
js
shll
or
pop
add
in
bound
jge
xchg
aas
and
jecxz
mov
and
mov
cli
lea
jmp
inc
add
mov
dec
imulb
fldl
das
lea
stos
outsb
ljmp
sbb
push
mov
out
dec
inc
add
repz
sahf
cmc
push
jo
cmp
jl
lock
leave
pusha
add
addr16
xchg
out
push
fldenv
and
push
add
pop
xchg
push
or
sub
mov
ds
jp
scas
inc
add
in
fdivl
lahf
pushf
dec
mov
xchg
daa
fsubs
mov
add
jg,pn
push
or
jne
je
push
stos
out
pop
cmp
and
jmp
sub
mov
push
std
jo
aad
ffree
add
jne
add
add
lock
add
cwtl
ljmp
aaa
in
lods
pop
push
mov
mov
sahf
aam
mov
out
push
xorps
fs
jg
shl
and
gs
insl
jnp
jle
add
xchg
movb
xchg
out
out
sahf
jle
inc
add
mov
enter
mov
mov
add
arpl
dec
mov
pop
cmp
inc
sti
push
dec
or
stc
notl
cmp
add
jl
out
cmp
out
push
lds
add
test
cmp
or
pop
sbb
mov
add
jp
js
mov
les
stos
or
xchg
jg
ss
xor
sbb
in
out
mov
mov
xchg
lea
mov
pop
mov
sbb
xchg
xor
pmulhw
cmp
daa
es
pop
shll
arpl
stos
out
mov
jge
jns
iret
mull
sahf
xchg
adc
mov
loope
push
sbb
fwait
pop
dec
push
bound
scas
sub
mov
rclb
add
popa
mov
sti
cmp
or
jmp
push
mov
stos
iret
mov
pop
aam
add
push
rolb
add
dec
xor
cmp
outsl
daa
pop
and
add
test
ja
hlt
and
imull
outsl
xor
in
mov
les
jno
repnz
arpl
xchg
int3
and
loop
push
mov
lds
mov
in
call
aas
mov
xchg
shrl
sbb
mov
lahf
inc
add
ret
sbb
mov
pop
push
pop
jp
int3
push
push
rolb
pop
jmp
xchg
adc
pop
fdivrs
or
stc
xor
xor
xchg
movsl
push
dec
jo
pushf
push
push
xchg
shrl
rolb
es
int
sbb
push
and
mov
imul
shrl
add
adc
cmp
ror
jo
push
scas
push
addb
clc
popa
xchg
sub
rcrb
into
dec
scas
icebp
insl
xor
add
dec
xchg
inc
rcl
and
mov
dec
cwtl
rolb
add
add
cltd
movsb
pop
js
pushf
adc
sub
adc
and
jno
sub
ret
outsb
cwtl
jle
nop
push
pushf
mov
push
loopne
dec
mov
add
mov
sub
pop
mov
aad
lds
shr
add
rep
stc
inc
add
popl
in
pusha
add
add
test
mov
lahf
xchg
pop
sub
lds
push
lret
mov
leave
loop
jecxz
adc
lds
call
leave
pop
je
add
xor
or
push
mov
mov
call
inc
lcall
movsb
inc
mov
mov
or
add
add
adc
movsl
push
dec
xchg
test
popa
mov
sub
pop
pushl
jle
fwait
and
loope
add
ret
add
sbb
add
jmp
dec
lea
shll
dec
mov
add
push
into
xchg
dec
sub
push
fwait
adc
pusha
add
call
js
sub
sbb
lock
loop
xchg
ret
shrl
gs
and
push
jne
test
push
inc
dec
add
lds
push
arpl
iret
or
iret
es
dec
ret
xchg
sbb
cltd
sub
dec
jne
add
push
imul
jns
cli
popf
add
pop
jnp
gs
into
and
push
dec
push
add
lea
add
xchg
addb
add
xor
adc
pop
das
mov
adc
sub
pusha
add
out
mov
mov
and
pop
int3
cmp
mov
cli
shl
call
push
and
in
sub
jo
sbb
pop
cwtl
negl
cmp
fists
inc
mov
call
pusha
add
adc
fstpt
and
cmp
lret
inc
add
int
movsb
jl
fisubl
add
mov
mov
cmp
push
add
cltd
jns
pop
dec
fstpl
mov
std
popf
pop
cmc
test
pop
push
add
xchg
adc
dec
xchg
mov
sbbl
mov
xor
getsec
jbe
aas
and
push
addb
mov
xlat
jecxz
add
or
xchg
xor
fmul
ret
enter
adc
push
aad
movsl
inc
and
dec
jmp
enter
xlat
insl
scas
outsb
xor
push
xchg
out
cmp
fistps
dec
imul
lcall
jl
adc
lock
mov
pop
hlt
xchg
pop
addr16
mov
aaa
outsb
test
dec
and
stos
dec
aad
jne
sub
add
in
add
jg
shlb
sti
lret
add
cwtl
cmp
addb
addb
inc
add
or
idivb
and
dec
adc
fstpl
call
nop
xchg
xstore-rng
cmpsl
inc
adc
push
loop
jnp
jle
xor
and
lods
rcll
add
add
sub
pmaddwd
inc
lahf
dec
popf
jecxz
lea
outsl
ja
in
les
mov
jg
out
aad
jbe
cwtl
push
aad
inc
add
clc
or
int3
ja
loopne
mov
add
mov
mov
xor
testl
push
inc
add
xor
xlat
push
cltd
fadd
iret
add
shll
icebp
xchg
mov
loope
and
mov
iret
dec
mov
sub
ffreep
add
btc
lock
add
add
mov
movb
add
popf
rolb
inc
addb
push
cmc
cs
add
mov
pop
pop
leave
cmpsl
cmc
aaa
mov
xchg
push
adc
mov
clc
cmpsb
adc
insl
sti
mov
sbb
jne
xchg
sub
shll
enter
std
fsub
mov
dec
lds
cmpsl
pusha
add
and
addb
jg
mov
repnz
pop
fbld
and
outsb
rcrb
fstpl
sub
dec
inc
add
out
fisttpll
mov
sarb
jl
hlt
xchg
cwtl
xor
and
lods
or
in
xchg
mov
das
ficoml
inc
jp
xchg
fildl
lret
mov
add
insb
pop
push
jno
pusha
add
pop
stos
mov
xchg
mov
addb
xchg
js
mov
add
lds
hlt
movb
mov
data16
loope
adc
add
mov
sub
add
in
pop
jae
add
xchg
pop
cmp
sbb
ss
pop
addl
mov
rcrl
add
pop
sbb
loope
jbe
pop
xor
or
push
mov
push
and
add
sub
fistpll
adc
add
mov
push
xor
xor
jmp
mov
sub
xor
jg
add
incl
popa
dec
cld
sub
std
lret
or
push
ret
rcl
mov
in
sub
xchg
testl
icebp
sub
sub
sarb
and
pop
mov
lods
xchg
pushf
pop
test
xor
out
pop
icebp
jmp
pop
xor
xchg
mov
pop
pusha
add
add
jo
sahf
or
and
dec
je
add
jo
add
mov
adc
add
jb
out
mov
rorl
mov
add
adc
repz
push
stos
movb
divl
cmp
pop
xlat
xchg
int
sub
fisttpll
stc
xlat
ja
cmp
rcl
mov
pop
mov
add
in
jb
mov
and
test
or
dec
or
icebp
mov
adc
push
jg
mov
rcll
pushf
rolb
out
gs
jns
pop
pop
fildll
add
addb
mov
mov
mov
mov
mov
sub
repnz
hlt
les
or
inc
add
push
clc
and
mov
or
jmp
daa
xor
xor
push
pop
jae
cmp
mov
add
inc
add
pop
pop
popa
movsl
data16
scas
jbe
cmp
add
cs
rol
repnz
popf
and
cmp
lds
xchg
repnz
jg
loopne
repnz
jns
dec
fldcw
xor
icebp
mov
rolb
enter
lea
cmc
pop
or
xchg
sahf
je
add
mov
pop
arpl
sahf
leave
scas
clc
push
xchg
imul
sbb
cli
addb
stos
lahf
or
scas
mov
add
ficompl
cwtl
sub
or
out
or
daa
jle
dec
add
add
jbe
pop
and
sbb
lcall
add
mov
addr16
mov
int
inc
add
fnstsw
xchg
hlt
sarb
fstps
cmpl
adc
lret
xlat
test
test
clc
imul
mov
test
xchg
test
mov
push
add
pop
rol
add
push
in
add
cwtl
lahf
stos
mov
pop
ret
loopne
fistl
sub
es
inc
ljmp
mov
scas
add
or
add
adc
in
scas
add
xor
fbstp
jae
lret
inc
add
jp
pop
out
addb
xlat
mov
mov
in
and
jno
mov
add
pop
xlat
es
pop
sti
movb
insb
sub
adc
stc
mov
inc
add
out
add
in
rolb
repnz
scas
aam
mov
and
rcl
out
or
shl
cli
mov
xor
add
in
mov
add
xlat
movsb
daa
in
frstor
dec
xor
mov
scas
lods
pusha
add
mov
lret
mov
js
cmpsl
out
add
add
mull
and
push
dec
add
xor
cld
neg
push
rorl
mov
call
push
xor
inc
add
add
jnp
adc
pop
adc
mov
dec
mov
lods
push
fmuls
xlat
imul
inc
sub
in
stc
movl
jp
ffree
repnz
add
mov
lock
stos
xor
sbb
fstpl
rorl
mov
mov
ffree
add
sub
scas
movsb
ja
addb
add
mov
xchg
or
test
lea
sub
add
xchg
jl
movb
rolb
cmp
mov
add
add
and
lods
xlat
addb
adc
int
sbb
nop
rolb
mov
test
mov
pop
mov
add
adc
pop
sahf
jb
es
mov
mov
scas
adc
add
add
xchg
sub
cs
cmp
push
aas
xchg
scas
xchg
jecxz
xchg
ret
loop
mov
add
mov
xchg
ds
ret
cmc
sti
pushl
test
adc
leave
les
hlt
inc
add
shl
and
jle
jge
sub
inc
add
call
and
add
rcll
push
inc
add
add
xchg
out
les
xor
fisubl
out
and
push
lock
add
mov
sti
insl
dec
cmp
dec
cmpsl
dec
jl
xor
ljmp
sti
addr16
mov
dec
out
shlb
push
cmc
add
rcrb
or
pop
jmp
and
cmc
mov
mov
cmp
add
sbb
sbb
jge
xor
cwtl
test
js
fisubl
add
decb
adc
ret
jb
lcall
and
push
xchg
cmp
mov
push
xchg
mov
jg
jb
or
sub
lret
cmp
jmp
mov
mov
xor
stos
jle
sub
add
add
add
roll
add
aaa
test
push
and
sub
jmp
jb
lds
cmp
pusha
add
or
mov
cmp
pop
rolb
das
loopne
leave
in
enter
xchg
xlat
lea
mov
aas
push
repnz
or
mov
sbb
xor
movsb
jl
les
push
addl
in
lret
xlat
mov
inc
add
inc
ja
mov
imul
pop
and
ja
mov
mov
add
movb
lods
popf
inc
xchg
fbld
jg
out
add
aas
sub
add
jbe
addr16
mov
sbb
cmpsl
cmp
test
sub
loope
pop
rcrl
mov
iret
cmp
xor
in
lahf
enter
ret
mov
shufps
insl
mov
movb
dec
stc
xchg
adc
cmp
cli
xchg
das
addb
ret
dec
jae
dec
pop
mov
lcall
aas
pop
mov
lock
jl
inc
add
loope
std
lea
into
pushf
sub
test
mov
test
jle
pop
or
jno
inc
and
xor
pop
lods
pop
mov
mov
addr16
fwait
out
outsb
fwait
out
cmp
outsl
jae
add
sub
fisttpl
leave
add
sbb
rcpps
inc
pop
outsb
lods
iret
add
jle
xor
mov
add
jg
jae
lret
inc
add
or
arpl
jbe
insl
mov
fisubs
push
cmpsl
xchg
jo
pop
xchg
into
stos
xchg
push
popa
loope
xchg
addl
mov
outsb
lahf
sbb
outsl
push
addr16
mov
call
cmpsl
addb
cmp
jbe
enter
adc
and
les
mov
cld
sti
dec
and
jp
add
insb
adc
inc
sbb
sti
sub
dec
cmp
add
add
mov
test
lds
movsb
cli
loop
pop
mov
pop
jo
pop
xor
outsl
mov
into
dec
cld
jae
push
mov
push
fistpll
shrb
inc
pop
data16
pop
jl
or
call
lcall
lret
cmp
cwtl
loope
cmp
das
push
push
rolb
adc
inc
add
add
pop
fstl
xlat
push
jecxz
outsl
lock
icebp
mov
gs
mov
mov
mov
mov
sahf
dec
pop
push
mov
negl
push
aad
add
int
out
je
in
xchg
out
and
ffreep
cmp
or
sahf
or
sahf
cmp
mov
xor
pop
imul
inc
dec
and
cwtl
sub
jne
push
lahf
jle
lds
negl
sub
push
jmp
iret
jo
xor
fld
add
cmp
inc
add
ss
dec
movb
sub
or
push
cmpsb
jnp
loopne
pop
rcrl
movb
add
add
enter
xchg
aaa
jo
ja
adc
inc
add
pop
adc
mov
or
jno
iret
pop
push
fwait
xchg
push
shll
addb
jl
in
sti
pusha
add
dec
dec
ret
testl
and
lds
fimull
icebp
sar
jnp
cwtl
lds
mov
lret
cltd
cmp
or
add
mov
xor
adc
incb
dec
jno
jge
scas
adc
mov
fs
int
lock
jno
add
sbb
mov
add
dec
pop
dec
or
cmc
xchg
mov
add
mov
repnz
jno
sub
sbb
mov
or
stc
out
inc
add
adc
fldt
aas
cmc
fmuls
sub
mov
mov
out
lock
add
inc
aam
test
insb
test
sub
add
jo
cltd
mov
adc
xor
jle
mov
or
scas
push
nop
adc
mov
push
add
jnp
adc
inc
add
add
push
xchg
pop
add
push
push
std
sub
pop
out
clc
lret
scas
sub
pop
movsb
shll
addb
or
or
adc
sub
xchg
scas
jns
or
addb
and
push
leave
mov
outsb
loope
add
aad
ret
dec
pushf
mov
jl
sub
add
emms
std
dec
push
xchg
and
sti
stos
cwtl
jmp
mov
int3
lret
sbb
ds
cmp
sub
jp
inc
add
mov
xchg
cmp
mov
jnp
add
or
sbb
dec
je
addr16
icebp
lret
adc
popa
aas
or
sub
fisubrs
mov
mov
mov
cmp
cmp
jb
mov
movsb
fwait
sti
or
add
xor
add
lahf
scas
es
inc
add
mov
mov
call
in
xor
test
iret
sti
push
push
add
xlat
outsb
adc
gs
mov
add
dec
call
cmc
add
stc
inc
pop
cmp
pop
adc
sti
icebp
gs
xchg
pop
jmp
pushf
pop
mov
xchg
mov
int3
cli
push
add
mov
pop
pushf
cmpsl
dec
les
jb
xor
or
pop
inc
gs
mov
mov
mov
jne
add
and
rcr
add
in
inc
mov
sub
addb
add
pop
push
lcall
loopne
mov
pusha
add
pop
sub
jmp
xchg
and
int3
dec
push
push
sarb
xchg
aam
data16
push
add
pop
xlat
imul
lcall
lret
imul
icebp
bound
test
sub
mov
stos
lods
pop
push
or
jecxz
adc
imull
push
inc
add
inc
jne
push
jns
test
fmull
jg
xchg
cwtl
shlb
or
add
push
fsts
xchg
cmp
daa
aam
mov
cwtl
ja
add
cmp
fisubs
scas
mov
fwait
lret
jnp
or
sbb
pop
rcr
mov
dec
dec
dec
int3
das
das
mov
push
outsl
or
ss
add
cmpsl
movsb
js
je
xchg
js
insb
sarl
repnz
pop
sub
jmp
sbbl
jge
inc
add
mov
add
inc
add
xor
rolb
add
inc
mov
ds
pushf
sbb
call
push
mov
fld
add
movb
dec
jecxz
sub
in
xor
int
sub
cmp
mov
das
fidivl
sub
mov
add
sub
addb
and
add
insb
test
mov
jno
call
jne
sahf
addl
sub
pushf
sahf
mov
sbb
sub
popf
adc
add
pop
rolb
iret
movsl
cwtl
cwtl
mov
xchg
lret
filds
in
lods
das
jge
les
loop
stos
std
daa
out
cwtl
in
addr16
add
popa
adc
sbb
and
fimuls
sub
cmp
sub
repz
xor
aaa
mov
or
ret
in
cld
mov
mov
test
into
loopne
adc
xor
dec
enter
adc
mov
loop
outsb
or
test
mov
jnp
mov
lods
pop
adc
test
mov
sbb
mov
add
xchg
int
or
mov
lock
into
loopne
cmp
add
jns
xchg
stos
lret
out
jae
call
add
frstor
add
into
orl
pop
adc
js
pop
jle
sti
add
fwait
cli
jo
sahf
or
data16
outsl
pop
jg
or
xchg
and
mov
cmp
lock
or
sub
enter
sub
cmp
bound
daa
ds
add
pop
sub
je
push
inc
add
add
fidivs
add
add
imul
jns
dec
sub
xchg
dec
and
in
push
in
adc
adc
adc
sub
dec
outsb
cmp
cmp
ja
movsl
stos
cwtl
sbb
sub
mov
or
push
icebp
inc
add
cltd
ljmp
out
cld
sub
sbb
into
roll
push
sbb
int3
ficoml
add
lods
xlat
sub
jb
mov
sub
mov
cs
jecxz
cmp
mov
xchg
repnz
pop
hlt
sub
rolb
stc
adc
mov
push
inc
pop
mov
add
push
loopne
add
out
add
jmp
out
fisubrs
add
rolb
sbb
jns
out
push
mov
inc
add
jo
pop
enter
add
push
mov
pop
pop
jb
mov
mov
fildll
mov
add
add
movsb
push
push
pop
rolb
stos
ljmp
xchg
loope
addr16
nop
cmpsl
dec
scas
test
jne
push
enter
pop
scas
dec
fs
iret
insb
adc
cltd
and
pop
jp
mov
sub
in
clc
dec
mov
and
jg
mov
fsubrs
xor
aas
and
vmread
cmc
call
test
negb
sub
jg
mov
add
dec
dec
notb
les
xchg
sub
shlb
push
inc
add
lds
loopne
xchg
in
sbb
push
push
xchg
adc
cmp
lock
ret
inc
add
add
add
lea
mov
sub
js
stc
js
flds
cmp
outsb
icebp
js
cmc
in
repz
std
cltd
jo
lret
mov
aam
jbe
pop
mov
inc
data16
ja
adc
fadd
add
inc
add
sti
push
int
lret
cld
divb
sub
les
repz
cld
pop
int3
fistpll
mov
push
lods
lea
add
cltd
add
or
test
jno
loopne
add
inc
dec
dec
mov
mov
mov
repz
iret
add
icebp
xchg
or
xor
xchg
mov
jl
adc
xchg
push
test
clc
sub
adc
in
les
pop
cltd
fcoml
sub
push
cmp
mov
repnz
add
or
popf
aam
jae
dec
pop
pop
inc
ficoms
xor
rolb
mov
inc
pop
cmp
cmpsb
popa
addr16
sub
mov
mov
fldl
movsb
xchg
mov
mov
scas
aad
lods
and
pop
test
push
mov
push
add
cwtl
test
mov
pusha
add
or
bound
stc
ja
mov
and
imul
add
mov
iret
pop
sbb
shll
mov
add
sub
hlt
call
push
and
das
jb
test
sub
add
sbb
add
test
xchg
imul
and
mov
push
cmpl
gs
mov
movsl
mov
sahf
jae
xor
jne
test
stc
push
addb
xchg
sub
add
leave
and
add
sub
sbb
outsl
xchg
jp
add
std
fcoml
and
dec
mov
jg
loop
mov
mov
out
push
dec
das
daa
in
pusha
add
push
add
loope
add
and
dec
jl
idivb
sbb
pop
ss
mov
outsl
sub
jb
push
add
xchg
icebp
inc
push
adc
pop
lcall
test
ds
lock
fisubrs
mov
mov
sqrtps
mov
adc
cmpsb
xchg
cmc
addb
roll
in
jno
add
add
imul
clc
pushf
inc
iret
sti
addb
jbe
cmpsl
notb
cmp
cmp
sbb
sbb
add
add
inc
add
mov
cmp
pop
ljmp
cmc
ds
pop
push
fwait
or
popa
xchg
pushf
inc
movsl
inc
add
not
movsl
push
sub
adc
xor
cmpsb
jb
test
sar
jbe
sub
repnz
roll
add
add
ret
push
adc
das
sub
sub
pop
add
dec
or
out
xchg
xor
cmp
sbb
js
ret
push
push
fsts
add
fwait
add
movsb
push
ja
mov
icebp
imul
dec
movb
push
lods
xor
mov
pop
test
stos
add
mov
testb
sbb
dec
mov
pop
pop
cmpl
mov
loopne
sbb
stc
sub
sub
push
inc
call
add
dec
ljmp
push
xor
arpl
rorl
fs
or
add
mov
aad
mov
call
add
push
jno
cs
stos
gs
int
popf
or
jne
add
pushf
cs
fsts
jns
push
add
jge
cmpl
mov
out
scas
sub
and
pop
and
mov
aas
push
or
mov
push
mov
xor
test
jnp
sbb
inc
add
jne
jns
gs
or
out
test
mov
iret
test
pop
mov
enter
jmp
mov
mov
or
mov
add
lret
adc
add
dec
or
insb
ja
mov
inc
xchg
cli
in
out
add
adc
gs
add
cwtl
jne
stos
push
punpckhbw
lods
js
add
sbb
das
sarl
pop
inc
add
ret
or
js
jno
addr16
jecxz
add
cli
loop
scas
outsb
cwtl
fcoml
divl
lea
pop
push
sahf
sub
loopne
jns
cmp
sub
rclb
movups
lcall
xchg
enter
in
xor
push
add
inc
sub
mov
jecxz
adc
adc
push
mov
sub
mov
lods
mov
xor
pop
aaa
hlt
adc
lods
in
xor
mov
add
ds
pop
mov
mov
or
sub
jne
jmp
insb
scas
sbb
das
add
push
jnp
mov
xchg
and
test
push
rcl
aas
jmp
add
cmp
aam
jle
pop
add
arpl
shll
fs
leave
jge
adc
mov
sbb
pushf
or
cmp
into
rol
dec
insl
outsl
adc
push
es
add
imulb
xor
insb
pusha
add
add
shl
into
or
jb
add
adc
add
add
add
pop
xchg
push
mov
jb
lea
iret
pop
dec
lods
das
test
pop
daa
jmp
inc
xchg
das
and
scas
movsl
jbe
test
xchg
sub
push
sub
outsl
inc
add
xchg
add
add
lock
xchg
and
clc
movsb
push
jae
jns
mov
mov
mov
movsl
cmp
mov
push
cmp
mov
add
cli
pop
js
mov
dec
jp
cmp
adcl
sbb
iret
addr16
movb
add
push
add
xchg
sbb
ss
cmp
out
jae
push
push
xchg
inc
add
push
dec
mov
aam
rcrb
mov
in
ljmp
push
adc
add
fadds
jle
jae
ljmp
add
jp
sahf
cld
add
mov
addb
test
fidivs
bound
jno
les
out
stc
lahf
jbe
pushf
mov
dec
mov
aam
loop
xchg
add
dec
addl
and
add
lcall
sbb
sahf
out
test
add
fs
cmc
cmp
adc
xor
test
xchg
add
in
std
cmp
test
aaa
cli
cmp
jae
mov
inc
add
in
mov
ret
push
clc
arpl
hlt
and
rolb
push
add
mov
aaa
enter
repz
es
xchg
nop
insl
pop
xor
into
pushf
clc
and
dec
popf
jecxz
sbb
movsw
xor
mov
lea
pop
sub
pushf
rcr
mov
rolb
aad
mov
jo
mov
int
aam
negb
lcall
and
scas
jmp
add
inc
add
add
push
pushf
mov
and
jo
add
add
popf
outsl
mov
sub
out
mov
jnp
dec
stc
sub
fistps
add
inc
pusha
add
les
in
mov
mov
imul
dec
daa
mov
addb
insb
mov
nop
xchg
xchg
int3
das
add
inc
mov
std
shlb
aad
pushf
dec
xchg
int3
addb
adc
add
jno
dec
sar
push
jbe
add
add
push
adc
inc
rcrb
dec
iret
xchg
enter
push
cmp
sar
js
add
ljmp
and
add
pop
divb
dec
jae
xchg
adc
push
jmp
cmp
mov
xchg
push
xor
push
addb
aam
imul
sti
xacquire
pusha
add
lcall
cmp
insb
push
sub
mov
xchg
push
sbb
add
out
movb
fcmovnb
adc
pop
stos
mov
mov
add
mov
pop
pop
rorl
push
sub
push
adc
pop
dec
ja
sbb
add
call
aad
lahf
jb
add
in
out
cmc
cmp
add
adc
mov
in
popa
stos
pushl
icebp
sti
lds
push
adc
hlt
pop
sbb
mov
dec
mov
pop
mov
push
xlat
mov
aaa
repz
dec
imul
test
test
jb
loopne
cs
pop
adc
and
call
inc
lahf
sbb
fildl
add
stos
cld
ret
push
stos
rorl
inc
add
faddl
mov
nop
sub
xor
test
add
lods
sbb
jge
mov
ret
mov
lea
cmpsb
std
pop
xchg
pop
sub
or
pushf
mov
pushl
cwtl
stos
lret
mov
mov
dec
push
test
dec
test
add
jb
mov
fwait
aad
roll
add
into
push
cmpsl
addb
fstpl
call
add
movsb
cmp
xchg
or
mull
incb
add
jae
pop
dec
movsl
movsb
cmp
add
or
adc
or
cmp
jmp
mov
xchg
iret
pusha
add
add
pop
in
inc
add
aaa
xor
psubd
adc
mov
call
iret
pushf
call
add
cmp
mov
sarl
or
or
hlt
sti
mov
xor
out
mov
dec
insl
pop
leave
inc
add
into
addb
aaa
inc
add
fs
int3
sub
das
bswap
iret
stc
sbb
jmp
push
bound
inc
add
popa
push
hlt
je
xor
mov
xchg
dec
shrl
mov
sub
sub
xchg
cmp
jbe
fwait
sub
add
add
add
push
lods
push
add
add
mov
push
arpl
add
and
adc
movsl
ds
fidivs
jg
and
xchg
in
hlt
xchg
pop
pop
push
add
pushl
and
cmc
nop
jecxz
jle
ror
dec
das
int3
shl
frstor
dec
push
xchg
mov
add
in
cmpsb
addb
out
jmp
les
and
pop
mov
inc
add
xlat
dec
int3
movsb
test
pushf
fs
jo
loopne
xchg
lds
mov
pop
jecxz
add
push
popf
pop
sbb
sub
push
sub
adc
add
ret
data16
add
or
pop
js
mov
in
jnp
add
shll
clc
push
and
testl
pop
aam
pop
pop
lods
decb
rol
mov
mov
xchg
dec
call
cmp
sti
pop
out
lods
lods
fdivrs
adc
fisttpll
dec
jbe
add
hlt
xchg
inc
add
add
push
repz
aas
addb
movsl
dec
jmp
push
xchg
rorb
imul
dec
mov
lcall
idiv
jne
ret
add
das
push
push
jg
lock
cmp
add
mov
inc
or
leave
dec
cs
cmpsb
movb
sbb
fwait
call
xchg
lods
push
push
test
push
add
mov
shrl
outsl
jecxz
pusha
add
cmp
push
pop
pop
jbe
out
cli
xor
jge
std
push
add
xlat
stos
aaa
dec
jp
xchg
xor
aaa
and
outsb
push
pop
repnz
sub
mov
pushf
xchg
les
jp
mov
cs
push
add
add
mov
and
mov
xchg
paddq
pop
cmp
add
inc
ss
adc
mov
pop
or
cmpsl
loopne
mov
mov
cmpsb
xor
test
push
add
stos
and
cmp
push
or
scas
mov
stos
inc
add
lahf
sub
cmpsb
jnp
pop
insb
jp
inc
add
dec
std
maxps
ja
pop
add
add
push
ret
addb
lcall
xchg
add
nop
ss
inc
add
xchg
mov
sbb
pop
dec
xchg
int3
je
mov
push
and
mov
arpl
add
addl
out
in
jecxz
add
jns
fdivr
fidivs
iret
ficompl
jecxz
and
mov
aaa
outsb
cmp
mov
and
fnstenv
xor
sub
xchg
sbb
sbb
push
loopne
cmpsb
in
push
inc
add
ret
dec
mov
mov
in
add
and
add
imul
cmp
movsl
outsb
imul
enter
pop
fidivs
sbb
xor
sbb
icebp
adc
add
xor
fmuls
sbb
sbb
xlat
or
jne
daa
fcoml
hlt
in
shll
pop
out
mov
and
fwait
or
mov
dec
loope
jmp
mov
add
clc
jl
add
mov
pop
jae
fidivrl
sbb
or
jo
dec
shl
push
loope
lcall
subl
fs
je
ljmp
call
sarl
xchg
mov
daa
pop
imul
and
icebp
or
out
add
jb
enter
das
sub
xor
les
push
or
pop
rcrl
icebp
pop
jne
lock
dec
mov
dec
push
cmp
xchg
sti
imul
cmp
add
add
fs
cwtl
jne
add
mov
jg
addb
popf
in
push
jp
cs
jge
hlt
out
or
jno
insl
outsl
loopne
lods
ljmp
mov
pop
jle
loope
js
xchg
adc
leave
sbb
popf
xor
or
sub
popa
push
js
bound
pop
nop
inc
sti
adc
pop
jl
movsb
shll
adc
push
cltd
nop
outsb
sbb
jmp
sub
loopne
pusha
add
fdivrp
rclb
cs
add
js
imul
ret
aam
lea
jnp
jnp
pusha
add
jg
data16
cmp
call
movsb
push
add
mov
movhps
cmpsl
push
cli
dec
lcall
aaa
mov
and
push
mov
push
add
iret
mov
push
jle
aad
movb
filds
add
push
insl
pop
mov
push
add
ds
pop
pop
adc
hlt
mov
enter
mov
xchg
pop
jnp
push
xor
fadd
xchg
lret
or
xchg
std
pop
hlt
aas
stos
add
mov
arpl
add
pusha
add
dec
popf
faddl
inc
add
adc
cltd
cld
dec
faddl
shr
cmpsl
mov
add
jmp
dec
sub
faddl
mov
mov
add
mov
mov
pop
leave
xor
mov
xchg
lahf
mov
cmp
test
fwait
mov
test
movsl
dec
or
sbb
fdivrs
dec
fxch
pop
push
xor
or
sbb
hlt
mov
sbb
jb
sbb
cmp
cmpsb
in
cld
ja
push
call
les
mov
loop
or
cld
mov
adc
add
ret
add
push
fisubs
and
sub
add
jle
add
lcall
gs
add
