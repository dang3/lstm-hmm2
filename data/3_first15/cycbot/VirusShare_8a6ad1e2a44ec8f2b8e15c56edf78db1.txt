clc
sahf
xchg
or
push
add
xchg
mov
add
adc
scas
repnz
insl
shlb
mov
cli
pop
jle
pop
inc
add
in
dec
call
sbb
mov
add
ljmp
or
addb
fidivrs
add
scas
loop
pop
adc
mov
push
ds
add
js
int
xor
xor
add
dec
add
lds
loopne
jns
leave
rolb
add
bound
ja
mov
pop
leave
sbb
fwait
mov
add
add
push
add
aaa
out
in
fcmovbe
mov
in
loopne
mov
or
pop
or
ss
mov
imul
sbb
mov
xchg
add
xchg
dec
stc
shll
add
xchg
aad
cmp
repz
sub
lret
lahf
inc
add
es
jg
jmp
jmp
lcall
fiadds
outsb
fwait
and
movb
movsl
test
xchg
out
inc
cs
ss
add
add
aas
pop
ja
sub
ja
aas
or
xchg
outsl
sub
xor
sbb
cmpsl
fucompp
popl
mov
jne
inc
pop
xchg
sbb
cwtl
outsl
xlat
xlat
popf
popf
ficoms
in
mov
mov
add
cmp
subl
clc
jb
push
jae
scas
xor
add
mov
add
add
fistpll
xchg
xchg
rolb
mov
xchg
cltd
xor
cld
mov
and
int
loop
xor
fisubrl
pusha
add
add
test
xor
mov
cwtl
cmp
mov
lods
popa
push
imul
cmp
pusha
add
iret
mov
add
add
bound
das
sbb
push
icebp
cwtl
je
jae
les
cmp
cmp
dec
pop
dec
pop
push
dec
xlat
pop
lea
inc
add
add
repnz
sub
gs
inc
inc
add
out
jmp
jl
dec
pop
lret
add
enter
test
inc
cld
lods
imul
add
mul
fldt
sti
insl
cwtl
jg
fildl
lcall
pop
mov
stos
aaa
movsb
inc
add
cwtl
in
stos
pop
adc
push
cmp
popa
sbb
lret
fwait
mov
push
es
cmp
xorl
fnsave
jg
sti
inc
mov
jae
sub
test
lods
cmpsb
mov
outsl
cmp
enter
xor
test
roll
add
insl
arpl
push
je
scas
pop
lret
je
jmp
pop
jne
addb
add
xchg
call
dec
ret
movb
adc
shr
pusha
add
lods
hlt
mov
push
aas
cmc
into
cwtl
mov
loop
xchg
mov
fnsave
cmpsl
xor
ficoml
mov
and
inc
add
cmp
xchg
push
xlat
pop
loope
xchg
cmp
lcall
or
push
test
fistps
addr16
negl
sbb
jl
in
xlat
lock
push
xchg
adc
sarl
inc
add
lds
inc
add
inc
add
test
std
out
aas
out
dec
xor
sub
jle
push
mov
sub
jae
scas
bound
in
add
pop
mov
mov
lahf
push
adc
inc
add
and
fistpl
mov
xchg
dec
pavgb
dec
dec
cmp
ljmp
jns
cwtl
pop
sti
icebp
add
or
movsb
outsl
int3
lcall
push
out
push
add
mov
ret
mov
push
pop
inc
mov
ja
xor
inc
add
lcall
and
sub
fwait
shl
fistl
add
repz
movsb
mov
aam
scas
sbb
add
cmpsb
sub
cmpsb
xor
dec
xlat
fs
add
and
mov
xchg
xchg
push
add
mov
ret
outsb
cmp
sub
xlat
jb
dec
adc
inc
add
push
loop
pop
les
stc
lock
jae
or
movb
mov
and
mov
lds
xor
sbb
sti
imul
imul
add
cmp
jg
aaa
mov
add
subl
js
push
jbe
hlt
scas
hlt
in
or
int
out
lods
cmp
sbb
ss
lods
fmuls
mov
cwtl
cmpsl
ret
notb
pop
xor
mov
mov
clc
divb
add
jo
jo
or
add
pop
mov
icebp
sti
or
mov
loop
popa
mov
pop
clc
sahf
bound
xorl
mov
dec
pop
jmp
sub
and
dec
push
and
mov
add
add
fsubl
add
add
mov
sbb
repz
xchg
cmp
sub
pop
mov
ret
and
dec
mov
jnp
pop
add
push
add
movb
adc
push
cmp
out
icebp
or
add
das
sub
or
add
aaa
lods
fs
adc
push
cwtl
cmp
xor
push
adc
xchg
enter
dec
in
push
cmp
sbb
flds
sbb
and
stc
sahf
push
or
push
pop
icebp
f2xm1
out
sti
int3
sti
movb
out
adc
lret
cmp
jbe
fldl2t
dec
rorb
lds
imul
pop
mov
push
add
in
jge
mov
jl
test
cwtl
shl
mov
xor
sub
add
inc
ret
pusha
add
jge
cmp
mov
lret
fs
cmp
jp
movsl
imul
je
add
add
in
in
imul
popf
mov
push
xor
pop
je
add
cmp
xchg
pop
add
test
jne
cmp
das
roll
add
push
mov
and
cmp
push
add
mov
jb
mov
fs
pop
shll
xchg
aas
mov
dec
gs
mov
jecxz
daa
dec
pop
loopne
jl
sbb
mov
adc
popl
mov
mov
rcl
mov
gs
andl
push
jne
jne
or
lock
xor
sbb
push
insl
adc
sub
push
rolb
lcall
add
xchg
loop
popf
test
jb
mov
imul
leave
pop
mov
loop
in
dec
inc
add
sbb
int
sbb
cld
gs
in
loope
xchg
xchg
cltd
pop
xor
xchg
jecxz
xor
xchg
hlt
mov
fstl
xchg
insl
adc
cmp
cwtl
test
test
arpl
rolb
push
mov
pop
mov
mov
sub
mov
add
out
rol
mov
inc
inc
add
and
push
mov
lods
insb
adc
sti
aam
pop
push
movsl
inc
icebp
repnz
dec
repz
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
test
add
jo
mulb
xchg
pop
cwtl
into
imul
sti
arpl
push
dec
inc
add
sbb
adc
leave
fcompl
test
pop
pop
stos
outsl
dec
jno
add
addr16
popl
inc
add
jl
inc
add
out
sub
aas
adc
lret
and
iret
mov
stc
inc
add
adc
mov
ret
jp
xchg
scas
jns
mov
add
add
cmovbe
sub
aad
cld
xor
jmp
pop
je
add
mov
mov
jnp
push
jle
mov
pop
xchg
add
and
mov
iret
popa
in
lcall
bound
inc
add
cmc
idivl
push
stos
pusha
add
mov
mov
in
cld
fistpll
outsb
sub
sub
mov
clc
gs
jno
imul
sarl
scas
mov
out
add
add
pop
add
xchg
fwait
call
add
add
dec
stc
inc
add
and
f2xm1
cmp
scas
cmp
xchg
std
xchg
xchg
mov
rolb
push
mov
add
addb
out
jge
xor
push
lds
mov
clc
lods
fistpl
repnz
jg
aad
jae
or
pusha
add
push
pop
lods
repz
add
pop
inc
add
rorb
push
add
hlt
xor
js
and
xor
adc
xchg
iret
pop
push
test
xchg
sti
mov
out
pop
stos
push
xchg
adc
xchg
aas
rolb
js
das
add
fcoml
add
fucomip
movsb
and
mov
fcomps
inc
add
jno
mov
fucomip
jg
imul
jns
jle
movsl
xor
shl
adc
in
cmp
mov
movsb
movsb
xorl
scas
mov
push
add
dec
ja
outsb
rcrl
out
cmp
jg
sbb
ret
nop
mov
xor
inc
add
mov
pop
sub
xlat
repnz
inc
add
aad
or
jbe
mov
fcoms
out
aam
and
adc
jg
js
push
cmpsb
dec
sbb
add
adc
test
dec
loop
add
mov
popf
xchg
sbb
add
cltd
fimull
sub
out
test
or
inc
add
enter
push
sti
imul
imul
test
mov
repz
add
fs
enter
cltd
add
mov
push
stc
inc
add
add
sub
dec
aas
mov
js
dec
movb
gs
orl
mov
out
add
test
sub
addb
pop
mov
jge
dec
xor
fsubrs
bound
or
mov
aas
lock
push
push
clc
jns
mov
push
lretw
mov
daa
adc
clc
jp
adc
pop
insb
into
cmp
dec
jno
and
or
sbb
jnp
mov
fadds
cld
or
xor
mov
sub
or
iret
dec
sbb
jns
push
in
mov
rolb
sub
add
fists
pop
mov
jmp
adc
add
xchg
mov
jecxz
mov
clc
inc
cmp
sub
arpl
movsb
outsl
add
outsl
mov
ds
or
stos
jbe
fdivl
movsb
xchg
jnp
add
push
add
jge
loope
fwait
xchg
add
cwtl
sbb
add
stos
mov
xchg
xchg
fdivl
pop
jno
add
ficoms
stos
icebp
in
adc
inc
xchg
shl
mov
mov
mov
sbb
lcall
cmp
or
popf
inc
add
addr16
cmp
sub
pop
cmpsl
pop
loope
call
ljmp
mov
pop
pop
mov
arpl
xor
hlt
adc
mov
and
arpl
test
lods
rcrl
jg
aaa
cld
andl
add
add
cli
das
test
mov
add
cmp
xchg
pop
addr16
sbb
imul
sar
popf
les
mov
or
stc
sti
outsb
stos
cli
mov
pop
enter
in
add
icebp
shl
dec
fildll
push
call
xor
and
push
inc
psubd
jmp
in
inc
xchg
pop
shlb
mov
mov
push
lahf
dec
scas
dec
adc
push
add
fimull
dec
mov
xor
xor
add
mov
xchg
lcall
push
add
inc
lret
lret
in
in
mov
cmp
xor
pop
outsl
mov
aas
pop
addr16
mov
subl
jbe
dec
push
imul
sub
mov
inc
dec
das
addb
cmpl
mov
jg
mov
addb
sbb
sub
addr16
ljmp
mov
add
mov
jle
imul
jns
add
movb
fsubl
in
jae
cmc
pushf
lds
or
pop
cld
push
rsm
cmp
jne
ss
pusha
add
jo
nop
push
popa
or
add
jo
scas
jns
mov
add
cmp
pop
push
mov
cmp
sbb
dec
test
cmp
add
out
mov
mov
add
dec
into
xchg
es
push
inc
and
adc
cmp
iret
inc
jmp
fstpl
add
cmp
sti
pop
leave
inc
and
xchg
mov
std
mov
out
repz
repz
loopne
stos
or
mov
mov
inc
add
test
inc
jge
lahf
sahf
cltd
arpl
xor
mov
push
add
stos
inc
loope
mov
add
add
cmpsl
add
mov
sub
pop
enter
clc
rcrl
lret
jmp
cmpsl
ret
out
call
lock
minps
sbb
adc
jnp
xchg
xchg
cmp
aad
mov
jl
int3
and
aaa
pop
lods
test
mov
add
ljmp
mov
add
test
push
add
insl
std
fstpt
movl
fcompl
jle
pop
push
repz
lods
sbb
mov
jb
roll
aad
xor
pop
in
sub
mov
test
mov
cmp
stos
push
std
in
jo
addr16
fnsave
cmp
add
mov
dec
outsl
jge
sbb
cmp
in
inc
add
stos
loopne
push
popl
cmpsb
daa
arpl
push
xlat
mov
pusha
add
dec
arpl
aaa
cmp
jp
fistl
ret
mov
add
or
mov
dec
xchg
stos
fists
leave
adc
mov
mov
xchg
sub
movsb
repnz
and
sti
push
add
test
out
dec
mov
add
fs
pop
push
and
repnz
push
pop
mov
out
adc
pop
mov
add
jne
push
add
pop
pcmpgtb
push
aam
jle
sbb
mov
add
imul
sub
jne
mull
pop
jl
rcrl
cmp
cwtl
pop
insl
mov
fisubrl
add
lret
add
mov
popa
fistpll
push
push
sub
mov
push
add
addb
fisubs
mov
add
rolb
movb
insl
pop
scas
jbe
cmpsl
add
test
add
add
xor
xchg
xchg
pop
aas
sub
jl
andl
cmpsl
notb
add
sub
add
mov
rolb
insl
push
pop
mov
lea
xor
jns
lret
mov
and
leave
popa
sub
fdivrl
jbe
mov
outsb
mov
leave
mov
mov
lret
popf
cwtl
dec
xchg
push
add
add
pop
xchg
xor
gs
test
xchg
addb
aam
add
pop
leave
out
add
nop
xor
sub
or
sbb
add
fldt
loop
or
lds
clc
imul
jbe
repz
mov
int3
icebp
movb
jecxz
mov
int
xchg
pop
sti
movsb
cmpsl
cmpsl
sub
movb
xor
and
lret
cmp
dec
scas
jo
or
hlt
dec
jo
xchg
ds
fsubl
xchg
daa
xchg
sbb
out
sub
out
add
enter
lods
inc
or
decl
hlt
pop
and
push
lods
dec
cli
es
xor
loopne
xchg
mov
pop
or
inc
add
fcoml
mov
add
add
add
lock
add
dec
pop
aas
or
xchg
add
test
pushf
jno
das
jbe
push
pop
sub
ljmp
cmpsl
add
int3
pop
addb
outsl
ja
sbb
pop
jne
ja
mov
pushf
or
jecxz
add
pop
sbbl
cmp
inc
mov
out
ljmp
lret
xor
test
mov
pop
mov
js
movb
jno
cmp
insl
push
and
repnz
lcall
pushf
mov
addr16
inc
loop
xor
insl
ret
push
or
xor
call
push
dec
push
jnp
add
xchg
xor
rolb
pop
sbb
fidivrl
lcall
mov
or
mov
mov
dec
mov
push
and
push
mov
sbb
sub
inc
add
leave
sbb
jnp
or
jecxz
sub
je
push
or
add
lahf
inc
pop
gs
xchg
nop
sarb
clc
fldt
push
pop
push
les
or
jne
push
dec
and
pusha
add
dec
and
mov
jp
mov
adc
add
push
movsl
out
stc
rcrl
test
xchg
daa
rolb
mov
mov
pop
mov
adcl
fcomip
push
xor
sub
daa
outsl
mov
xor
mov
mov
popf
mov
push
sar
xchg
jge
add
lock
or
data16
add
mov
xor
data16
or
push
cmpsb
mov
add
sahf
ss
push
inc
rorb
pop
add
push
lea
jo
scas
jp
and
and
pop
fdivr
out
stc
cmpsl
push
into
inc
adc
add
xchg
fiadds
jge
dec
xor
add
imulb
add
rolb
xor
push
mov
je
lods
stos
mov
mov
mov
xchg
cld
pop
in
jae
sbb
ds
lcall
jae
mov
mov
gs
lock
mov
xor
add
bound
rolb
jno
sbb
bound
dec
xor
add
inc
add
cli
mov
xchg
cld
repnz
loope
std
xchg
popl
rolb
repnz
enter
add
dec
mov
imul
add
in
pop
or
hlt
add
adcl
xchg
xlat
and
xor
dec
pop
cwtl
ss
add
jg
or
test
pop
pushf
mov
stos
sbb
imul
add
xchg
filds
sub
mov
pushf
pusha
add
jo
sub
xlat
shr
ljmp
jle
addb
lds
add
mov
inc
add
pusha
add
andl
sbb
xchg
mov
mov
lods
xlat
mov
dec
scas
xchg
and
rolb
lahf
xor
dec
mov
sub
adc
push
jnp
stos
outsb
je
imul
dec
daa
cmp
pushf
rolb
outsb
or
mov
iret
cmp
nop
pop
sub
ficoms
imul
xor
mov
add
addb
mov
inc
add
mov
notl
inc
pop
gs
push
adc
and
jg,pn
mov
jne
dec
mov
pop
mov
mov
cld
stc
mov
ret
cmp
jmp
add
xchg
and
push
call
bound
test
dec
stos
adc
lret
dec
and
dec
cmp
repnz
add
or
cmp
call
cmc
call
addb
decl
jecxz
xchg
out
je
lock
mov
test
ss
fidivrs
push
loop
pop
dec
mov
pushf
push
mov
inc
mov
cmp
out
sub
or
xchg
cmp
sbb
ss
movsb
push
add
ret
dec
sub
cld
cmpsb
dec
adc
cmpsl
xchg
negb
xor
bound
stc
imul
add
or
das
das
mov
xchg
loop
xchg
mov
outsl
in
push
add
sahf
mov
inc
add
add
mov
addb
popf
cmp
mov
out
movsb
jp
mov
lahf
and
movb
xchg
mov
fwait
cmp
es
insl
dec
in
mov
add
mov
sub
or
add
scas
jecxz
pop
es
repz
movsl
ret
gs
arpl
mov
mov
add
push
out
adc
cwtl
inc
add
cs
sbb
jnp
and
stos
iret
mov
addr16
icebp
mov
subl
add
add
add
mov
xchg
dec
outsb
test
sub
movb
fs
in
cmovb
cmp
add
imul
jle
add
push
aad
fsubrs
and
enter
pop
mov
js
cli
add
adc
es
push
adc
or
cmpsb
popa
std
bound
sub
add
add
mov
add
mov
out
mov
xor
sub
jecxz
scas
clc
mov
push
addb
imul
jae
add
inc
jno
sub
test
out
xchg
xchg
and
sub
pop
mulb
jge
fldenv
enter
fwait
jns
pop
mov
jns
lahf
out
lret
xchg
int3
push
mov
mov
push
push
mov
pop
mov
ss
jno
flds
add
xchg
jmp
jmp
sarl
bound
fcompl
es
mov
sahf
movsl
push
add
nop
jae
into
or
fstl
pushf
jp
sub
add
es
or
xor
cmpsb
lods
or
leave
sbb
enter
lea
fs
add
addb
mov
dec
fisttpll
xchg
or
mov
in
insl
jae
xor
dec
sbb
or
and
xlat
mov
add
mov
jnp
ljmp
push
aam
inc
and
sub
lods
dec
test
dec
add
dec
or
add
lret
cmp
fwait
stos
cmp
into
xlat
ljmp
mov
push
popf
add
pusha
add
pop
movb
dec
mov
jb
lock
addb
mulb
cld
int
mov
int3
nop
outsl
bound
jb
xor
orl
jb
dec
test
add
dec
cmp
cmc
or
mov
gs
xchg
imul
xor
fld
xor
jae
cwtl
mov
test
les
xchg
rclb
das
push
jecxz
mov
pop
inc
or
shrb
jmp
inc
jae
in
jo
sbb
sbb
xor
adc
jmp
arpl
sbb
ja
or
repnz
and
push
insb
es
aad
inc
add
adc
push
fwait
test
out
insl
ja
add
movsb
push
hlt
pop
fcmovnbe
push
add
push
pop
pop
pushf
pusha
add
add
and
pop
fildl
shlb
jnp
sahf
test
cli
xor
sarb
outsl
cmpsb
mov
sti
fwait
enter
outsl
dec
rolb
mov
mov
bound
mov
jns
out
pop
lds
cmc
inc
add
xrelease
test
hlt
stos
mov
cmpsb
test
mov
xor
hlt
outsl
mov
addr16
sahf
fisubrl
pop
loopne
push
mov
inc
movsl
js
lock
push
pcmpgtd
push
add
pop
inc
sbb
ffreep
inc
pop
mov
lods
stos
addr16
xchg
xchg
call
push
add
addb
cltd
pop
push
jmp
movb
add
fimull
mov
out
into
push
test
inc
mov
push
push
imul
cmpsb
fstpl
movb
lock
std
xor
jmp
das
jae
inc
add
push
aam
es
mov
add
or
out
nop
mov
mov
push
sub
mov
jp
imul
aas
sbb
fwait
test
mov
jg
mov
sti
cmc
sahf
and
movb
sbb
push
mov
push
test
add
cmp
xchg
push
inc
jbe
aaa
or
mov
addb
add
add
je
outsb
dec
pop
mov
dec
push
test
ret
add
fs
inc
sbb
shll
gs
xor
xor
adc
adc
cmp
add
add
addb
cmp
lret
xchg
jge
cmpsb
mov
adc
add
adc
roll
add
fcomi
in
xchg
mov
cmp
mov
mov
sbb
add
add
jne
add
test
mov
enter
repnz
js
pop
push
sub
sbb
addb
popf
sbb
ret
out
lock
mov
rcr
pmuludq
jge
xchg
adc
test
iret
cli
xor
push
notb
mov
mov
xchg
push
xor
mov
mov
add
mov
jo
xchg
xchg
dec
and
lret
out
push
jns
nop
inc
and
cmpsb
dec
add
pop
adc
sbb
or
xor
inc
add
push
nop
int
loope
jmp
jmp
and
arpl
ret
cmpsl
popa
inc
mov
out
mov
js
inc
add
add
fiadds
dec
mov
inc
add
cli
addr16
jp
or
and
cld
pop
and
das
test
add
sub
add
lds
xchg
call
outsl
pop
xor
pop
push
sti
add
mov
rorl
nop
in
lret
or
lds
nop
stos
dec
test
sbbl
xchg
loope
hlt
push
mov
jnp
pop
push
movsb
mov
mov
add
popa
mov
jge
cltd
ret
add
jne
pop
test
xor
push
call
mov
std
push
add
mov
nop
mov
add
mov
sbb
hlt
leave
xchg
push
add
or
dec
fidivrl
nop
xchg
lret
cmp
pop
cmp
jno
fnstenv
popf
push
insb
movsl
cmp
out
test
inc
add
xchg
add
les
push
add
popf
mov
rcrb
aam
addb
add
ss
cmp
mov
sbb
jnp
push
xchg
addr16
bound
xchg
gs
fmul
insb
rcll
pop
iret
sahf
repz
das
add
rolb
dec
fbld
or
xchg
mov
and
add
push
imul
test
enter
push
mov
xor
and
fistl
rolb
lock
mov
sahf
sbb
mov
dec
sub
sahf
and
fcoml
test
dec
pop
push
movb
cwtl
jno
inc
shl
cmp
leave
scas
inc
add
sub
push
enter
repnz
mov
mov
or
add
and
mov
cmp
jbe
add
mov
inc
cmpsl
test
popf
test
mov
shr
fcmovne
pop
mov
add
push
add
ja
fs
dec
xchg
mov
pop
int3
or
sbb
iret
fs
sbb
mov
push
insb
cs
pop
pusha
add
int3
jle
out
call
mov
cmp
test
sahf
sub
inc
leave
shrl
mov
add
push
add
int3
push
push
mov
jg
jae
mov
mov
test
cltd
push
and
das
xchg
dec
jb
add
imul
add
lods
test
dec
fst
mov
push
mov
shlb
sbb
dec
pusha
add
pop
cmp
stc
mov
add
add
inc
add
inc
test
pop
daa
in
outsb
ds
cmc
das
jnp
inc
add
push
or
fists
icebp
repnz
add
sub
mov
add
adc
cmpsb
dec
popf
dec
fwait
pop
dec
and
mov
out
xor
outsl
cmpsl
fsubrl
xlat
mov
popa
pop
cld
push
jp
popl
fsubl
out
sbb
mov
scas
cs
mov
jge
add
repz
lods
pop
ror
sub
add
mov
call
inc
add
inc
cmp
add
mov
in
sbb
mov
inc
adc
add
rclb
ret
dec
jae
in
sub
add
jb
adc
imul
lcall
hlt
push
xchg
add
mov
cld
dec
mov
lret
rcrl
inc
add
int
imul
repnz
loope
sub
lret
in
insb
dec
mov
pushf
sbb
jmp
jle
faddl
jne
pop
int
repnz
sahf
dec
inc
add
lods
pushf
pop
lock
repz
push
xor
add
lahf
xchg
iret
sbb
push
cmp
xchg
das
into
imul
mov
adc
or
shl
mov
cld
or
ja
xchg
mov
pop
imul
mov
mov
xchg
jns
rcl
int3
test
mov
rclb
pusha
add
inc
add
les
decw
mov
fcomps
fildll
test
outsl
leave
adc
add
jp
lods
jns
rolb
fsub
test
bound
pusha
add
bnd
lea
movsl
mov
pop
mov
mov
add
xchg
inc
add
mov
hlt
xor
add
dec
pushf
dec
std
popa
xchg
jae
cmc
sub
sub
add
and
jecxz
mov
outsb
jmp
in
xchg
cmp
dec
jb
jbe
and
push
fisttpl
out
jmp
movsl
mov
and
es
jl
insb
or
jbe
xchg
jge
adc
cs
cmp
ret
push
test
mov
je
mov
pop
cwtl
cmc
mov
stc
addb
sbb
sti
repnz
dec
mov
lods
sub
outsl
inc
add
inc
add
mov
adc
dec
dec
outsb
test
sub
jl
xor
sub
adc
push
add
imul
jmp
xchg
leave
test
inc
add
das
push
add
add
or
cs
jp
jne
adc
push
mov
mov
or
mov
add
out
mov
into
mov
adc
orl
or
sub
js
xchg
mov
mov
cmp
rclb
lahf
addl
sti
mov
pop
lahf
inc
add
iret
cmp
mov
xchg
sub
mov
fldl
pop
out
mov
iret
mov
pop
sub
pusha
add
mov
dec
js
mov
cmp
inc
add
sbb
icebp
mov
fcomps
pop
jb
rolb
adc
mov
pusha
add
jno
push
inc
or
mov
lcall
sub
add
imul
ret
lret
pop
pop
ret
jo
rcrl
add
loopne
xorl
add
mov
fmuls
add
mov
cmc
or
dec
std
jbe
add
fmul
movsl
popf
pop
cmp
mov
adc
adc
addb
out
test
mov
int3
repz
adc
mov
pop
add
pop
shlb
jmp
pushf
loop
cmp
inc
inc
jae
dec
add
test
push
js
add
mov
mov
jno
nop
adc
test
or
cltd
xchg
cmp
movsl
mov
data16
rclb
sub
pop
push
rolb
push
dec
aas
idiv
mov
test
pop
lods
push
xchg
daa
pop
neg
movb
cmp
jmp
cltd
ljmp
mov
push
adc
sub
add
loope
xchg
pop
aas
jge
push
xchg
sti
mov
push
lods
pop
sbb
ss
adc
or
add
insl
fsts
xchg
sub
adc
xchg
push
mov
fmul
shl
les
mov
push
sub
cld
cmc
dec
js
mov
iret
lock
push
mov
and
cld
cs
cmp
adc
push
push
jne
xchg
xor
mov
rolb
xor
out
inc
add
xchg
rcl
inc
add
daa
dec
mov
lret
adc
cwtl
icebp
hlt
mov
lea
or
pushf
loop
cmp
lods
testl
mov
test
movsl
in
loope
add
mov
add
repnz
sub
mov
add
dec
add
inc
mov
add
insb
sub
sub
lods
imul
mov
xchg
sbb
xor
mov
lds
loop
jle
arpl
add
inc
add
and
xchg
aad
ss
call
loope
stos
adc
add
adc
lret
cli
cmp
xorl
add
adc
cmp
in
jle
loope
lods
or
add
add
je
push
dec
mov
movsl
out
je
test
push
add
pop
pop
pop
cmp
mov
stos
movsl
xor
add
inc
add
xor
pop
ja
or
jns
add
push
lret
sti
movb
dec
xchg
dec
xchg
xchg
movsb
fadds
push
dec
inc
add
jne
add
mov
cmc
test
and
pop
xchg
sbb
or
dec
loope
or
push
outsb
out
notb
mov
mov
aaa
andl
movb
ret
daa
jnp
adc
mov
adc
dec
and
dec
das
fisubs
fs
ret
xor
cmp
les
add
push
ret
adc
ss
rorl
cmp
shl
fildll
push
mov
xchg
push
dec
out
mov
pop
xchg
lahf
not
xchg
adc
scas
pop
xor
shlb
shrl
sub
sub
cwtl
add
add
test
movsb
sub
outsl
mov
int
add
add
mov
and
pusha
add
repnz
add
add
sbb
aas
mov
repnz
insl
loope
fcoml
and
add
cmp
out
inc
add
push
dec
in
ret
daa
addb
lret
scas
lahf
xchg
dec
jnp
out
jae
loopne
add
call
insb
movb
pop
cmp
fs
and
fwait
dec
mov
call
cld
cmp
sub
xchg
adc
mov
adc
or
add
pop
xor
xchg
lret
dec
dec
mov
loope
mov
dec
inc
add
adc
cmp
mov
lds
cmpsb
loop
push
or
add
pop
lds
pop
popa
insl
cltd
ljmp
pop
mov
lcall
mov
sarl
aad
cmp
jo
adc
xchg
das
add
fiaddl
adc
cmc
adcl
add
or
cmp
js
insl
cld
gs
mov
adc
add
fxch
or
imul
subl
dec
push
xor
xlat
pop
pop
andl
test
and
popa
nop
das
ja
mov
jle
add
dec
pop
xchg
insl
xor
add
xor
cmp
sub
loope
pop
aas
mov
inc
add
cmc
sub
sbb
and
push
adc
cmp
add
movb
jg
jg
idiv
int3
outsl
into
lock
add
jl
pop
add
and
mov
fwait
sub
repnz
xchg
test
add
or
add
stos
sarl
sub
and
insb
stos
mov
add
xchg
cmp
adc
leave
push
xlat
lcall
outsb
inc
icebp
jp
loop
cli
xchg
add
push
insb
sti
jae
in
lcall
inc
arpl
lahf
jmp
add
fistpll
test
dec
mov
iret
pusha
add
pop
adc
sbb
mov
aaa
jp
sbb
shl
leave
jl
xorl
ret
std
fidivs
int3
adc
xlat
ret
and
or
dec
pop
push
sub
add
movsb
dec
je
stos
cld
mov
mov
out
stos
rolb
push
fucomp
test
pop
cmp
sarb
add
rolb
jbe
imul
sti
jge
xor
clc
cltd
sbb
jo
cmc
insb
divps
out
out
filds
cmp
jl
scas
lret
jbe
lods
xor
cmpsb
in
cli
sahf
aaa
fyl2x
jecxz
adc
in
stos
cmpsb
addb
movb
add
mov
fadd
add
add
lds
push
adc
mov
fcoml
pop
xchg
loop
dec
and
ss
nop
xchg
cwtl
push
dec
mov
xchg
mov
call
sahf
cmp
jne
or
mov
mov
fstpt
cmp
lock
aam
add
cmp
push
lods
dec
movsb
cli
xchg
movsb
or
fsub
sub
add
aas
out
inc
add
add
mov
dec
inc
add
cld
test
aad
repnz
add
add
mov
pusha
add
out
arpl
out
loop
adc
add
js
cmp
pop
fstl
jg
fistps
repnz
cmp
loopne
fisubrl
pop
cmpsl
xor
push
adc
aaa
mov
xchg
mov
subl
pop
pop
rorl
sbb
mov
cmp
stos
sbb
testb
sbb
cmp
pop
fsubl
fidivrl
loopne
scas
insl
je
add
and
add
repnz
stc
jae
popf
insl
sarb
popa
or
xor
mov
pop
rclb
pop
pop
movb
ja
scas
pop
lcall
and
es
or
jae
jb
inc
add
cmp
and
add
and
inc
push
sub
mov
in
out
inc
add
in
ss
pop
sbb
or
arpl
jno
rol
dec
cmp
xchg
mov
pop
pop
sbb
jg
add
sub
mov
cmp
add
mov
movsl
out
fs
xor
add
xchg
or
mov
popf
sets
sub
loope
lret
inc
pop
ficomps
sbb
call
mov
or
mov
ja
arpl
cmp
out
jns
ret
js
cli
add
pop
add
popa
cwtl
sub
adc
enter
insl
xor
sbb
add
loope
add
dec
fucomp
aam
in
aaa
pop
jno
jne
push
addb
pop
shlb
ss
push
imul
aam
mov
push
in
movb
push
adc
pop
jns
pop
movsb
xchg
mov
sbb
dec
outsb
lock
scas
pop
inc
add
dec
inc
add
mov
pop
int
int
nop
mov
sub
mov
lock
sbb
inc
or
adc
inc
or
inc
add
or
sarb
pop
popa
popa
mov
ret
mulb
jne
push
adc
inc
fidivrs
movb
sbb
mov
js
xchg
push
mov
sbb
add
add
repz
pop
jle
mov
sbb
stos
mov
add
xchg
and
stos
inc
add
xchg
jb
addb
fnstenv
xchg
das
test
or
or
fbld
and
cmp
push
mov
jecxz
push
add
jle
pop
iret
imul
jne
or
xchg
icebp
rcr
add
sarl
push
sbb
jno
xchg
push
jmp
mov
daa
testl
je
jl
add
pop
adcl
out
inc
add
mull
add
sbb
cmp
cmp
add
push
into
and
xor
xchg
mov
or
stos
ss
fwait
iret
fstl
dec
push
add
and
push
out
cli
jle
and
adc
test
mov
lods
inc
cmp
mov
shll
push
lahf
testl
popf
loopne
pop
outsl
cld
lahf
nop
jmp
stc
cs
sub
cmp
dec
xchg
pop
sbb
cmpsl
movb
pop
js
lcall
inc
notb
loopne
dec
test
mov
scas
jg
dec
and
nop
test
jecxz
out
dec
bound
fadds
jle
lcall
add
cltd
mov
adc
mull
mov
mov
and
sarb
mov
shll
jno
inc
cmp
adc
dec
jo
bound
xor
leave
push
int
fldl
lods
sub
frndint
test
inc
add
push
adc
nop
in
pop
jbe
push
sbb
or
add
outsb
test
bnd
jne
jge
and
fsubrl
imul
lods
push
outsl
shll
inc
aaa
les
adc
pusha
add
outsb
test
add
sbb
and
lret
and
rolb
mov
not
inc
add
add
insl
lcall
repz
js
or
or
dec
jno
mov
sahf
xchg
xor
arpl
jne
push
int
dec
and
sub
sbbl
loopne
add
xchg
mov
in
pop
loop
inc
add
outsb
mov
into
lds
lods
xchg
fs
lret
into
mov
lock
js
mov
xor
scas
jbe
sub
push
adc
fnstsw
mov
cmc
pop
mov
xor
pop
sbb
les
pop
addr16
add
ror
pop
daa
fstps
add
pop
mov
or
aas
xchg
icebp
popf
xlat
pushf
xchg
lea
jecxz
add
addb
out
add
out
imul
cmpsb
pop
mov
out
addr16
cmp
lea
mov
cmp
sub
pop
xor
pop
rcr
sub
push
fcmove
jmp
push
push
jae
cmp
add
addb
not
jmp
mov
adc
and
popl
aad
sahf
das
mov
push
es
repz
bnd
mov
call
popa
roll
add
aas
ljmp
imul
idivb
push
cwtl
jmp
add
cmp
aaa
pushf
in
mov
and
xor
in
add
or
subl
mov
or
cmp
mov
ficomps
aas
fcomi
decb
pop
sub
insl
lret
jno
addr16
add
loopne
fwait
jns
mov
jge
and
or
outsb
pop
int
cmc
mov
xor
aaa
cmp
fistps
push
jae
adc
sub
loop
lcall
lret
mov
loope
mov
mov
add
sahf
and
icebp
in
add
mov
out
test
int3
fiadds
fadd
push
stos
out
add
add
stc
or
repz
or
and
jp
inc
add
sbb
ds
inc
add
mov
inc
add
in
and
lret
imul
xlat
outsb
jp
or
mov
pushf
mov
inc
jns
add
icebp
pop
rcrl
rcll
cs
jbe
add
xor
and
movl
or
push
dec
or
dec
in
dec
sub
cmp
ds
jle
add
in
add
jns
lea
push
test
les
cli
scas
enter
xchg
and
or
xchg
pop
mov
xor
and
and
cmp
jp
sbb
flds
push
out
and
pop
rcrl
inc
jg
add
faddl
pop
dec
push
outsl
dec
jecxz
dec
pop
dec
hlt
adc
add
das
adc
cli
punpcklbw
xor
jp
pop
add
pop
push
cmp
mov
lret
sbb
rcll
js
cmp
scas
add
fstps
or
ret
xor
lock
add
add
dec
add
fwait
stos
dec
push
add
xchg
fisubrs
pushf
mov
push
or
jns
and
mov
into
shlb
in
sbb
cwtl
mov
adc
scas
cmc
add
add
sub
add
add
add
addb
add
repnz
cmp
inc
add
mov
rcrl
in
jbe
pop
inc
add
adc
outsl
mov
loopne
mov
mov
test
jo
dec
jl
std
icebp
mov
dec
or
add
popl
mov
adc
icebp
fcomi
jns
ljmp
loop
scas
dec
and
insb
dec
inc
sbb
and
loop
insb
nop
cs
clc
adc
pop
and
push
out
nop
insb
fnstenv
hlt
xchg
push
push
cmp
out
and
adc
inc
add
test
outsl
insb
xor
sub
sbb
add
negb
addb
or
inc
xchg
das
mov
loope
xor
arpl
addb
push
rorb
mov
int
xor
addb
inc
add
jno
mov
aaa
xchg
adc
add
cmc
shrl
mov
jmp
enter
mov
divl
dec
cwtl
out
dec
mov
rorl
mov
dec
mov
iret
scas
repz
fstps
mov
movb
pop
pandn
add
lds
add
aad
pop
sbbl
and
pop
xchg
pop
and
jae
add
loopne
icebp
cmpsl
pop
sbb
jo
imul
lods
in
popf
lcall
sbb
mov
lret
add
dec
rcl
or
loop
add
insl
lods
push
add
adc
dec
frstor
int3
imul
mov
cmc
push
in
mov
mov
jl
pushf
hlt
push
dec
and
rcll
xor
out
fdivrs
mov
lods
movlps
dec
out
and
filds
sub
ret
add
and
push
lret
aas
mov
dec
or
push
lcall
test
mov
pop
sti
clc
je
push
pop
ljmp
xor
lods
pop
out
mov
mov
or
fldl
and
cld
pop
call
fs
cmp
push
test
sbb
mov
insl
xchg
lods
fisubl
mov
notl
ja
mov
addb
add
pushf
stos
cli
dec
test
xor
imul
cli
into
xchg
mov
add
stos
dec
jne
stos
xor
dec
inc
mov
pusha
add
jg
add
pop
sbb
mov
add
repz
adc
aad
fwait
push
jno
in
ss
add
add
std
push
push
mov
push
add
dec
loope
das
sahf
je
xchg
pop
mov
test
clc
in
inc
add
mov
loope
sti
nop
mov
lret
mov
pop
clc
scas
or
scas
mov
sbb
and
sbb
dec
vandps
cli
mov
jp
loope
mov
cmpsb
xor
adc
add
data16
mov
dec
incb
fistpll
add
or
cmpsl
push
das
mov
jbe
movsb
fxam
pushf
and
enter
cs
into
lahf
out
cmp
outsl
jb
mov
sbb
fisubs
popa
mov
outsb
in
mov
mov
mov
sub
mov
add
int3
inc
repz
idivl
aam
add
ds
xchg
pusha
add
pop
inc
pop
xor
mov
loopne
mov
add
xor
mov
popa
lds
or
mov
sarl
sbb
bound
pop
jno
xchg
mov
mov
xor
mov
imul
xchg
push
dec
les
dec
adc
enter
bound
and
or
add
xor
jnp
pop
sbb
mov
in
jo
add
push
or
sbb
mov
sub
rcrl
and
inc
add
imul
or
jb
aas
fsubl
fmuls
in
jecxz
add
aaa
stc
sbb
mov
cmpsl
lods
bound
inc
jg
add
inc
lahf
test
xor
push
pop
lods
sbb
dec
jge
imul
sub
xor
lea
push
inc
push
cmp
lods
notb
push
inc
int3
bound
pop
cmp
cwtl
mov
xor
or
call
cmpsb
xchg
inc
divl
cmp
in
jno
stos
jl
movzbl
cmp
xlat
ret
push
or
out
mov
pop
test
in
lahf
mov
fldenv
push
xchg
cmp
mov
incl
out
loopne
push
aaa
dec
aam
fwait
mov
sub
add
jo
dec
out
sub
leave
inc
add
dec
and
xor
lock
pop
add
pop
addb
ljmp
pop
push
movsb
mov
lret
into
sbb
pop
lock
lahf
daa
popa
int
cmp
test
push
sub
cs
cmp
pusha
add
inc
add
add
add
add
clc
cmpsb
push
pop
rorl
mov
add
cs
or
sti
loopne
bound
int
or
fisubrs
push
mov
inc
pop
mov
movsb
ret
and
adc
add
fisubrl
orl
jnp
pop
sub
sbb
bound
outsb
jo
and
xchg
sub
push
xchg
mov
push
test
cmpsb
ds
stos
mov
les
gs
sbb
iret
mov
pop
fwait
leave
cmp
add
out
mov
push
dec
adc
or
sbb
sbb
addb
js
cmp
sbb
loop
imul
mov
sub
in
dec
sbb
call
push
cmp
pop
mov
add
loop
pop
pop
pop
test
mov
xchg
test
cmp
push
out
jge
rcrb
add
cmc
sahf
dec
xchg
out
and
int3
cli
dec
push
sti
xchg
sbb
sbb
push
or
imul
jnp
adc
and
bound
stos
aad
mov
pop
test
adc
or
rolb
rorl
aas
inc
mov
adc
sub
add
loopne
mov
pusha
add
pushf
xchg
jne
xor
loop
shr
jmp
adc
or
inc
xor
mov
loop
sub
jp
cmp
or
cmc
imul
frndint
pop
and
sub
js
imull
scas
call
test
pop
imul
es
add
push
addr16
mov
add
xor
mov
mov
subl
mov
ja
mov
add
mov
out
addb
xchg
inc
add
add
jg
aad
push
mov
sub
addb
test
in
push
pusha
add
out
pop
sub
inc
ljmp
push
into
cmp
das
popa
pop
xor
mov
inc
add
add
inc
lret
push
add
push
dec
pop
and
rcrl
xchg
cmpsb
out
inc
add
add
push
mov
inc
loopne
sbb
sub
jae
je
je
iret
xor
shlb
mov
cmp
fiaddl
pusha
add
adc
mov
mov
cmp
ret
push
fwait
mov
xor
jp
aam
in
inc
add
and
inc
loope
and
je
cmp
add
mov
cmpsl
mov
les
imul
lahf
loop
jmp
xchg
aas
xchg
arpl
test
daa
es
call
cmp
push
and
push
ret
push
mov
test
push
lock
loopne
shlb
sub
iret
push
out
inc
jo
ret
cs
leave
sbb
push
jecxz
sahf
dec
sbb
paddw
addl
pop
dec
sub
in
popl
add
jnp
xchg
dec
mov
gs
leave
cmc
xchg
scas
ds
or
mov
repnz
add
mov
sub
jg
insb
or
and
es
cld
cmp
mov
movsl
pushf
in
push
add
add
popf
mov
mov
mov
pop
mov
insl
jecxz
sahf
loopne
sub
mov
cmpsl
xlat
jg
stos
subl
pop
xchg
pop
xor
dec
stc
cmp
xlat
in
add
addb
mov
adc
not
fisttpl
inc
movsl
mov
das
jns
sub
cmpsl
push
and
in
nop
cld
test
push
mov
mov
aaa
and
mov
and
mov
ror
js
or
push
pop
cli
or
sub
push
push
or
mov
ret
push
les
into
xor
inc
clc
mov
in
sahf
adc
enter
add
addb
shll
pop
inc
add
fildl
int3
addb
in
gs
addb
and
shl
movsb
icebp
clc
scas
cmp
stos
add
add
sbb
pop
jne
imul
fsubrs
shlb
pop
and
and
das
aaa
addr16
out
add
dec
lock
adc
mov
mov
inc
add
sbbl
lods
and
out
add
mov
in
xchg
mov
scas
cmp
dec
addr16
jl
outsb
in
lds
fcmove
xchg
adc
and
push
sbb
ja
xchg
fstps
dec
xor
inc
add
fisttps
mov
imul
rolb
adc
fldl
add
push
sar
add
xor
pop
cmp
sub
push
cli
push
ds
jns
pushf
mov
daa
sub
imul
outsl
mov
adc
jg
stos
in
aas
scas
mov
jl
add
and
inc
test
mov
pop
jns
cmp
mov
jne
xlat
hlt
jp
mov
clc
hlt
xchg
je
pop
pop
xor
out
sub
cmpsl
mov
lahf
mov
sub
adc
and
inc
add
mov
and
sub
in
ljmp
rolb
cli
mov
js
frstor
shrl
adc
psrad
and
js
test
iret
aas
push
add
jmp
out
fld
lret
out
push
shlb
ret
xor
sub
nop
jp
xchg
fcoml
mov
cwtl
mov
sub
cmp
xor
sbb
push
pushf
push
fisttpl
in
pushf
xor
and
xor
mov
je
out
ret
aad
add
cmpsb
inc
add
mov
shrl
sahf
xor
les
lret
cmp
lcall
cmp
leave
sbb
add
adc
add
pop
inc
cmc
dec
dec
es
jle
dec
cmp
jecxz
inc
add
add
imul
add
mov
pop
add
scas
mov
add
pop
ret
addb
add
pusha
add
mov
sbb
dec
push
adc
add
test
stc
xlat
push
add
add
insb
mov
xor
xor
daa
sub
cmp
dec
clc
cs
push
pop
and
inc
push
add
icebp
xlat
ja
add
or
ljmp
aas
jo
sbb
adc
adc
push
add
add
xor
inc
add
std
in
lods
cwtl
lcall
mov
mov
cltd
data16
and
xor
orl
adc
subl
cmp
aam
inc
cmc
mov
pop
sarb
sbb
flds
adc
mov
shll
test
movb
cmp
cmp
roll
add
enter
cmp
cmpsb
mov
add
inc
add
repnz
dec
icebp
xchg
xchg
push
mov
add
push
add
pop
or
arpl
push
add
lds
loope
mov
sarl
andl
bound
shlb
add
mov
add
leave
repz
jbe
les
aad
pop
jo
outsl
in
cmp
lret
movsl
cmp
in
push
mov
pop
iret
push
popf
push
add
jg
xchg
push
jns
dec
xchg
insl
pusha
add
sub
add
add
inc
add
pop
loop
push
xor
in
jae
add
mov
add
sbb
cmp
inc
fiadds
sbb
sbb
out
ds
or
lahf
imul
rolb
aam
jae
adc
icebp
inc
ficoml
and
pushf
jnp
xchg
push
out
mov
add
push
ja
lcall
xchg
jecxz
aad
add
arpl
mov
fimuls
xor
lock
nop
pop
mov
int
xor
push
mov
mov
orl
dec
js
add
mov
rolb
jmp
daa
inc
jge
dec
push
arpl
inc
mov
idivl
jp
dec
sub
jmp
cmc
fimull
or
sti
pop
mov
sbb
mov
cmp
xchg
mov
testb
pop
pop
aam
call
cltd
rolb
add
and
push
push
jno
stos
and
xchg
sbbl
push
addb
outsl
loopne
xchg
pop
mov
dec
sub
mov
push
jge
cmp
inc
add
or
call
pop
inc
add
or
jne
inc
mov
mov
ds
test
les
int3
test
clc
pop
fdivrs
rcrl
es
mov
push
push
cmp
add
stos
in
sbb
inc
std
cmc
stos
jg
push
mov
stos
mov
push
add
jbe
imul
pop
dec
xchg
add
mov
mov
xor
movsl
mov
ret
mov
movb
sbb
jne
push
jbe
insl
clc
or
and
pop
into
js
leave
aaa
pop
add
sub
rcr
jnp
add
add
test
pop
aas
inc
add
ret
imul
mov
out
xchg
nop
data16
jo
push
arpl
outsb
addb
pop
pop
add
out
jne
sti
adc
ficompl
data16
inc
sahf
jmp
cmp
push
pop
in
pop
pop
mov
aaa
push
sbb
jp
fucomi
ret
push
les
inc
or
mov
out
inc
sbb
inc
add
mov
add
add
loop
mov
add
mov
fwait
scas
mov
mov
sahf
cmp
dec
sub
ljmp
pop
mov
loopne
adc
js
popf
les
es
rorb
movb
cmp
add
in
lret
insl
out
dec
sti
xor
push
xchg
xchg
addl
add
xchg
fnsave
add
jmp
add
xchg
call
pop
ret
bound
and
popa
pop
clc
push
fistl
into
arpl
mov
inc
rcll
sub
sbb
mov
lcall
add
js
ret
or
pop
movsl
sub
xorl
push
jbe
gs
iret
and
xchg
add
sub
push
lds
jae
push
xchg
xlat
int
notb
mov
popa
add
pop
movsl
and
mov
mov
cmp
or
cmp
mov
add
pop
mov
fwait
pop
adc
add
xchg
pop
or
push
xor
je
pusha
add
dec
jb
cltd
fisubl
add
ja
adc
mov
add
xchg
mov
nop
sahf
mov
add
add
das
cli
mov
add
inc
mov
mov
fwait
outsl
and
pop
adc
adc
test
pop
cmc
btr
mov
test
mov
loope
mov
leave
push
stos
sbb
aam
aam
mov
out
jg
xor
or
adc
cmp
ljmp
into
sub
jge
add
add
test
push
ret
add
lahf
es
bound
adc
mov
add
out
cs
shrb
xchg
out
sbb
daa
cmpsl
inc
cwtl
fldt
repnz
insl
sbb
pop
out
ret
inc
add
push
mov
jmp
mov
add
lods
inc
mov
mov
ja
mov
fildll
inc
xchg
or
inc
add
jp
andl
data16
dec
call
push
jbe
jo
icebp
or
int
and
push
cmpsb
mov
add
fwait
cmp
in
lret
cld
pop
into
insl
out
movsb
cli
insb
sbb
dec
fisttps
mov
jbe
mov
xor
sbb
push
in
jl
push
test
xor
jb
mov
dec
dec
mov
clc
add
mov
cmc
xchg
adc
mov
push
xchg
not
dec
cmpsb
or
push
add
dec
push
sub
mov
push
or
add
and
jo
push
mov
push
lds
nop
xor
lods
and
addb
bound
mov
dec
add
outsb
bound
mov
imul
movsb
nop
test
enter
xor
push
push
mov
clc
jg
pop
rolb
cmpxchg
in
mov
popa
dec
adcl
stos
scas
cmp
add
mov
sbb
push
fsubrs
fs
mov
add
mov
xchg
xchg
sbb
lea
pop
cmc
fs
adc
call
push
int3
ja
into
in
testl
add
rorb
das
pop
scas
das
dec
js
mov
jmp
imul
dec
cmp
jno
into
pusha
add
add
es
shll
mov
cmp
shrl
movsl
aam
jb
rcr
add
int3
fists
jns
scas
test
sub
cmp
mov
fwait
sarl
ss
aas
shll
push
inc
test
lods
inc
add
sbb
add
ret
inc
inc
add
nop
les
cmpsl
sub
xchg
scas
mov
push
or
xor
mov
pushf
jne
aas
sub
and
jnp
mov
fdivrs
mov
bound
xor
aam
add
dec
bound
add
inc
add
xchg
rolb
data16
ret
jne
xor
add
in
ret
add
jp
jns
clc
in
in
cld
mov
lods
jl
fistl
mov
push
jno
mov
add
push
dec
insb
les
push
cld
or
addr16
pop
adc
scas
es
mov
dec
shlb
add
mov
pop
idivl
fidivl
push
sbb
test
xor
inc
add
out
sub
outsb
xor
mov
repnz
inc
outsb
xchg
xlat
lahf
jbe
fldcw
fwait
add
pop
xor
or
sahf
mov
pop
loopne
sbb
aaa
mov
popf
inc
add
pop
mov
add
push
fdivs
add
addb
mov
sub
stos
and
out
icebp
mov
add
sbb
adc
mov
out
ljmp
shr
idivl
cmc
xor
lods
arpl
movsb
out
adc
mov
repz
add
mov
dec
lea
sub
mov
loope
sub
pushf
jge
cmp
enter
add
loope
add
lahf
push
xchg
pop
sbb
aaa
xchg
xor
outsb
mov
inc
mov
out
fidivs
pop
jae
lcall
pop
push
lods
scas
cmp
xchg
xchg
xchg
sarl
movb
cmp
jb
and
ret
bsf
cmp
xor
sub
xlat
cmpsl
dec
insb
adc
add
cmp
mov
lods
lcall
int3
dec
lret
outsl
xchg
ss
ss
and
push
mov
jl
cli
inc
push
mov
add
push
lods
xor
out
add
mov
mov
fnstsw
dec
xlat
daa
jae
add
adcl
jae
lcall
daa
inc
sbb
pop
xchg
sbb
push
sub
ss
mov
js
xchg
pop
data16
xchg
rolb
sub
fisttpl
mov
add
xchg
xor
add
fs
in
imul
mov
int3
xchg
sbb
call
stos
nop
orl
push
mov
out
adc
fldenv
ucomiss
rcll
das
mov
leave
xchg
push
ret
mov
mov
inc
add
mov
xchg
mov
mov
cld
mov
pop
popa
xchg
sbb
fsubrs
sahf
and
mov
add
mov
outsl
les
mov
push
push
data16
xor
popf
or
scas
daa
cmc
daa
adc
pop
rcr
mov
scas
sub
xor
pop
sbb
xchg
pop
int3
ret
add
add
inc
stos
mov
cmp
stos
movb
xchg
out
adc
out
inc
add
leave
loopne
or
jle
sub
cltd
jge
das
add
sub
cld
lret
pxor
lods
sarl
ret
mov
jno
dec
and
cmp
pop
mov
xchg
cmpsb
dec
jae
popa
mov
je
dec
sub
xchg
mov
pop
add
lret
imul
in
mov
loope
or
js
movsl
out
insl
mov
xor
mov
test
out
lcall
xchg
cmpsl
cltd
mov
fistpll
add
addr16
popf
and
popf
dec
mull
or
inc
xlat
nop
jmp
out
push
cmp
sub
fisubl
mov
nop
add
sub
inc
add
jp
jo
or
les
add
mov
cli
ret
mov
inc
test
push
addr16
cmp
pop
add
shl
bswap
mov
sahf
jno
push
adc
sbb
push
je
mov
std
push
jo
jb
cmpsb
test
popa
sbb
adc
push
adc
call
fucomp
dec
or
add
mov
pop
mov
ror
imul
mov
add
or
insl
fbstp
add
sub
lock
mov
jns
notl
jmp
dec
push
mov
in
arpl
adc
cs
add
jno
mov
shr
roll
mov
sub
decb
cmp
pop
xchg
xor
cmp
or
addb
mov
outsb
addr16
fmuls
xrelease
cltd
lahf
dec
ja
xchg
or
mov
add
cwtl
dec
adc
cmp
mov
lods
std
sub
imul
aam
add
add
adc
pop
mov
cmp
bound
aam
jl
and
add
mov
pushf
sub
dec
in
add
xchg
sbb
pop
xor
dec
xor
sti
fsubs
mov
cmp
loope
mov
xchg
out
fildll
cs
mov
popf
arpl
pop
sti
dec
subl
dec
or
aad
lock
pop
pushf
loop
faddp
add
clc
mov
mov
push
lcall
add
lods
and
and
adc
lret
movsb
loope
add
xchg
test
ret
or
filds
add
push
and
rolb
daa
push
push
js
fidivs
jp
mov
lock
push
call
loop
cmpsl
push
repz
scas
add
mov
icebp
cmp
cmc
lahf
in
inc
push
inc
mov
dec
xchg
adc
add
push
add
mov
xor
rcll
jns
imul
les
sub
pop
rcrl
lret
add
and
or
or
fnstenv
sahf
fiadds
add
jmp
add
sti
xchg
xchg
aad
call
js
inc
add
lds
jbe
cmp
dec
cmp
notl
je
add
add
std
repnz
dec
add
xor
addl
push
push
cmp
out
stc
lret
adc
inc
flds
add
sbb
bound
rclb
mov
sub
mov
sub
pop
movsb
es
pop
dec
addr16
mov
xchg
sbb
ss
pushf
mov
jo
push
das
xor
jne
sbb
add
dec
addb
mov
mov
jne
mov
jmp
sbb
dec
insl
mov
push
jmp
pusha
add
mov
mov
add
xlat
push
cwtl
adcl
or
and
in
push
adc
cmpsb
rclb
fucomip
lahf
inc
add
pop
mov
jecxz
adc
fldcw
in
into
ja
in
and
or
inc
add
add
nop
movsb
clc
sbb
fisubs
and
add
jle
sbb
add
in
fwait
mov
push
add
int3
std
sub
inc
and
xor
add
push
add
jmp
std
pop
mov
out
add
fidivs
cld
inc
add
inc
and
pusha
add
test
xchg
bound
test
cli
dec
xor
add
dec
push
sbb
add
cwtl
cmpsl
add
jmp
cwtl
mov
mov
pop
enter
push
xchg
jb
cmpsl
lret
in
insb
loope
mov
cli
xchg
pushf
jg
inc
add
inc
and
nop
cmpsl
hlt
test
add
mov
jns
jns
sarl
fistps
adc
pop
leave
ljmp
pop
push
shll
push
xor
out
sbb
mov
jo
mov
sbb
jecxz
add
cmp
loope
xchg
shlb
negl
fbld
je
add
dec
repnz
inc
add
test
add
pop
and
bound
sbb
fistps
xchg
daa
mov
add
add
jno
dec
adc
mov
addb
push
jnp
imul
fnstcw
add
push
lahf
mov
in
cmp
push
pushf
inc
icebp
mov
push
addl
ret
push
dec
inc
add
notb
test
mov
xchg
cmpl
jb
stos
mov
scas
popf
scas
stos
mov
pushf
aas
jne
outsl
test
pop
pop
jmp
add
xchg
clc
xchg
insl
adc
cld
push
arpl
adc
in
adc
push
iret
loope
stos
add
notb
xlat
cwtl
adc
pop
jnp
shlb
ljmp
in
add
sbb
iret
mov
incl
push
in
loop
push
mov
dec
cmp
dec
fmul
push
mov
call
pop
rcrl
in
push
pop
jns
add
push
addb
push
loopne
add
test
mov
jl
aad
xchg
mov
popa
mov
ss
pop
ffreep
into
mov
mov
jnp
adc
rcrl
add
and
push
test
hlt
lcall
push
mov
sub
push
sbb
insb
xchg
fimull
iret
dec
xlat
pop
bound
sahf
lahf
pop
out
add
add
movb
fwait
cmp
adc
inc
outsl
jg
cmp
aaa
sbb
or
jle
scas
scas
movsl
inc
dec
mov
icebp
les
test
pusha
add
xchg
frstor
cmc
jnp
sub
and
gs
add
jae
and
notl
jl
jo
in
cmc
xchg
imul
js
mov
sbb
addl
lock
mov
sbbl
repnz
add
pop
rorl
leave
inc
add
testb
xor
push
mov
imul
mov
ss
out
inc
add
pop
fistps
ljmp
mov
arpl
lock
mov
push
sahf
enter
xchg
lret
jae
out
and
inc
fucomp
lds
mov
sub
mov
rcll
mov
add
leave
mov
inc
add
popf
aaa
jb
pop
xchg
cmp
mov
sub
and
inc
pop
lcall
dec
jge
xor
jle
add
fiadds
push
cwtl
shll
push
jb,pt
mov
pop
cmp
xchg
add
pop
mov
xchg
inc
add
add
rol
lret
inc
add
cmp
add
sbb
mov
add
sub
jg
mov
pop
out
xchg
rolb
rolb
js
cmp
in
xlat
jle
cmc
pushl
add
pushf
imul
lods
mov
js
aad
xchg
sbb
js
movsb
sbb
add
addb
mov
shll
inc
add
mov
mov
in
jle
and
scas
jne
outsl
movb
popf
inc
add
pop
fidivrl
push
mov
mov
das
add
mov
jbe
outsl
addr16
test
add
mov
test
fsubs
cmpsl
mov
dec
stos
int
jmp
jl
das
test
inc
sub
add
jb
jb
stos
dec
clc
mov
jo
sub
mov
out
sbb
insl
push
subl
nop
inc
add
lods
jp
jecxz
add
pusha
add
aad
pavgw
ror
addb
addb
inc
dec
add
je
adcl
sub
cmp
imul
sti
lea
cmp
mov
sub
into
and
add
adc
rolb
pop
cs
lret
loopne
movl
cmpsb
jle
push
xor
pop
dec
sub
imull
sub
add
mov
jle
add
add
adc
xor
mov
mov
fistpll
lods
je
or
dec
mov
shr
cld
lock
jae
lock
sbb
addb
cmc
push
out
pop
xchg
pop
enter
out
hlt
shll
xchg
mov
ds
loop
xchg
cld
jmp
inc
add
or
add
mov
pop
adc
addb
int
rolb
dec
fbstp
mov
rcl
pop
mov
pop
aas
xchg
or
cmpsl
inc
mov
mov
dec
push
fwait
adc
push
stos
push
xor
fsub
xchg
fsubrl
cli
lret
sbb
pusha
add
leave
xor
daa
bound
hlt
js
inc
add
add
das
mov
ret
loope
push
dec
repz
mov
cmp
jcxz
addb
sbb
lret
sbb
mov
or
jecxz
xchg
out
add
sub
add
icebp
imul
sub
cmp
xor
subl
addb
pop
and
icebp
sbb
and
jnp
jne
mov
ds
add
andps
add
nop
jmp
cltd
xor
loope
in
add
lock
adc
std
xchg
xchg
movsl
jnp
neg
and
dec
insb
repz
lods
aas
jae
gs
add
movb
mov
xlat
mov
add
mov
add
xor
imul
addb
repnz
add
pop
in
mov
adc
in
test
rolb
push
mov
fidivrl
test
cmp
cmpsb
pop
dec
scas
fistpll
xchg
aas
and
mov
shrl
add
sub
push
mov
add
dec
mov
fucomi
add
mov
aas
xor
add
cmp
push
mov
cmp
enter
mov
xchg
xchg
loop
mov
ljmp
dec
pusha
add
lahf
ja
mov
adc
push
es
add
cmp
out
mov
lock
mov
int3
lds
les
push
or
mov
sub
aas
dec
hlt
mov
push
ss
add
xor
fsubp
cld
xchg
data16
cli
rolb
jns
inc
inc
add
add
adc
test
xchg
push
gs
sub
add
inc
sbb
gs
cmpsb
push
imul
pushf
test
lock
push
adc
jo
mov
cmp
iret
sub
adc
inc
add
push
mov
mov
add
mov
push
pop
and
cmpsl
mov
out
xchg
jns
ds
ret
gs
test
data16
xchg
test
pop
mov
pop
add
push
add
jnp
cmp
mov
sbb
add
pop
adc
test
mul
xchg
arpl
paddsb
adc
or
add
inc
add
dec
mov
lea
mov
add
movsl
push
mov
jecxz
cmp
or
mov
fildl
add
orl
mov
mov
js
add
int3
aaa
fs
lods
and
nop
adc
test
call
fmull
xchg
cmp
cmp
in
add
inc
movsb
nop
in
hlt
dec
adc
mov
jbe
out
xchg
xor
push
inc
xor
nop
xchg
and
sub
lods
dec
jo
xor
shlb
push
add
cwtl
push
aaa
pop
lds
sbb
mov
int
jns
add
mov
sub
xor
vmread
lock
add
mov
or
push
add
xchg
sbb
xor
fsubs
mov
subl
add
add
xlat
add
stos
inc
add
movsb
jmp
xchg
mov
subl
imul
stos
mov
xor
pop
or
dec
pop
mov
mov
stos
addb
add
add
or
push
add
xor
xor
repz
repz
lahf
movsl
ja
push
jp
dec
out
ljmp
gs
loop
adc
inc
mov
jmp
sbb
jns
mov
outsl
mov
loopne
jo
es
cld
test
addb
dec
mov
inc
add
xor
pop
outsl
pop
sarb
sub
push
pop
mov
cmp
cli
test
mov
es
pop
or
or
stos
pop
test
inc
mov
shrl
xor
sub
dec
jmp
lret
mov
fcompl
cmpsb
insl
mov
mov
lahf
in
xchg
in
mov
mov
add
jbe
imul
or
movb
xchg
mul
pop
lods
fcmovbe
jg
std
sub
sbb
jbe
push
dec
icebp
loop
fists
pushf
pusha
add
rolb
cld
rcl
scas
addb
cmp
add
stos
xchg
sbb
lea
imul
testb
push
mov
xchg
out
and
test
ficoms
cmc
mov
loopne
mov
popa
sbb
lret
scas
dec
lea
add
mov
lock
fwait
sbb
cmp
lods
popa
ljmp
test
add
imul
push
add
inc
jecxz
rclb
in
mov
mov
dec
cltd
fisubrl
sti
in
test
popa
lds
movsb
dec
scas
xor
and
repnz
cmpsb
lcall
add
jl
add
sbbl
test
pop
arpl
ja
mov
mov
int
lods
test
fdivrp
jp
prefetcht2
sub
fcmovnb
add
fdivrs
aad
adc
insl
pop
pop
or
or
xor
test
mov
mov
bound
addr16
aam
push
lods
es
cmpsb
cmpsb
pop
push
sbb
mov
shll
pop
cmp
add
push
fnstenv
push
inc
add
std
fdivrp
mov
mov
adc
sahf
movsb
ja
pop
jo
das
in
push
mov
pushf
or
xchg
mov
fiadds
enter
cmc
int
xchg
xor
xor
imul
cltd
outsl
ss
cmp
jge
and
stos
fsubrs
inc
jb
adc
aam
cli
std
cmpsl
ret
cli
mov
cs
jp
add
add
in
adc
or
sub
stc
jmp
mov
xchg
or
jge
pop
insb
jnp
xchg
out
mov
adc
jge
sub
sub
xchg
push
adc
addr16
das
xchg
xor
out
add
scas
add
jae
dec
movsl
icebp
push
push
cltd
and
enter
cmp
add
mov
push
add
add
test
mov
cmp
push
jle
movsb
fidivrs
sbb
sub
les
sub
cmp
in
xor
incl
add
stos
mov
fadd
add
adc
divl
mov
dec
push
out
xchg
jnp
dec
cmp
mov
xor
ljmp
insl
push
cli
or
jo
in
pop
bound
movsl
mov
and
sahf
jg
or
push
mov
inc
add
out
rolb
add
aaa
cmp
jae
inc
add
or
xor
or
jb
divl
mov
mov
test
ret
add
scas
mov
aam
frstor
pop
mov
enter
adc
add
and
push
mov
xor
je
add
mov
mov
add
push
adc
jmp
lret
dec
lds
fldcw
pop
push
imul
movntq
add
add
sbb
inc
lock
mov
push
sub
leave
mov
sbb
outsb
push
and
imul
xchg
mov
jbe
in
dec
cmp
push
out
mov
call
push
jnp
mov
imul
push
xchg
lock
imul
ljmp
add
mov
add
and
mov
cwtl
movsl
mov
xor
mov
call
add
mov
lret
ss
sbb
lea
and
lds
cmc
lret
or
aad
add
data16
ja
adc
dec
sub
add
sbb
cmp
add
es
jle
push
or
dec
jno
xchg
lahf
test
ja
decl
pushf
mov
sub
cmpsl
cmpsl
and
sub
sub
xchg
jns
pop
jbe
add
and
repnz
push
or
pop
test
sub
adc
scas
mov
scas
inc
and
mov
xchg
jae
adc
pusha
add
lods
sbb
int
mov
inc
add
mov
ds
ja
add
negl
sbb
lret
sub
addb
jns
daa
addb
add
fiaddl
add
add
test
dec
cmpsl
stos
sbb
mov
mov
cli
inc
add
das
jo
push
movsl
ror
test
sbb
pop
lods
push
lahf
mov
add
rolb
std
imul
lret
xor
daa
pop
cmp
pop
iret
jae
lock
mov
or
jmp
test
mov
sbb
add
mov
add
or
cmc
and
aas
xchg
cmpsb
fs
cmp
lds
push
shrb
sbb
jge
dec
aas
and
or
ret
push
push
push
js
or
jbe
insl
mov
adc
push
add
and
sbb
push
add
add
cli
inc
cmpsb
enter
adc
sti
xchg
ret
lret
mov
mov
and
int
daa
test
ds
lahf
xor
push
mov
adc
jle
jg
outsl
or
and
arpl
xor
fidivrl
aad
add
es
mov
pop
sbb
xor
or
xchg
mov
arpl
xchg
cmp
xor
mov
fdivs
xor
cmpsb
les
sbb
or
test
movsb
movsl
mov
and
movsb
jle
mov
and
mov
adc
pusha
add
dec
cmpsb
imul
fdivrs
sbb
cmc
xchg
sbb
jge
mov
pusha
add
and
xor
jae
add
add
add
xchg
std
adc
inc
cs
mov
push
cmp
testb
and
xlat
lea
lock
in
add
push
pop
cmp
and
movlps
mov
jnp
add
fdivrl
ljmp
hlt
mov
call
jmp
int3
lods
push
cmp
jb
adc
insb
flds
add
pop
cmp
inc
add
dec
push
pop
pusha
add
mov
mov
add
aam
mov
jp
cmp
add
loop
jmp
fcom
mov
adc
stc
add
shrl
out
int3
popf
xchg
test
sub
push
fwait
push
movsl
mov
ficomps
cli
test
xchg
aam
ret
inc
shl
xor
cmp
scas
or
jno
sub
div
xlat
push
test
mov
jp
insl
out
adc
nop
or
and
and
and
lcall
adc
inc
mov
xor
rep
mov
in
or
insb
das
f2xm1
decb
fmull
inc
jmp
add
out
mov
add
push
xchg
fsts
sub
mov
add
mov
pop
xlat
and
push
and
adc
scas
js
lods
xor
jno
outsl
cld
adc
dec
bound
push
add
jmp
cwtl
and
dec
fsubs
add
mov
loope
jne
push
enter
ret
push
xor
ret
dec
push
mov
adc
shlb
loop
adc
lock
sbb
sahf
inc
add
ret
pop
jnp
or
and
mov
xchg
loop
cmpsb
loope
jne
xchg
out
or
push
ret
mov
xor
inc
imul
shr
int3
pop
mov
dec
js
sbb
stos
js
mov
imul
or
mov
jne
push
rolb
push
push
fcoml
push
adc
int
jb
inc
sub
jg
jecxz
inc
add
in
mov
mov
jp
cld
add
mov
fwait
and
jbe
jmp
push
add
fldcw
pop
rol
add
mov
aam
fcmovb
add
cmp
inc
push
add
push
cmc
cmpsb
and
add
jmp
and
push
add
mov
mov
ljmp
jp
ret
or
adc
loope
mov
fimull
jmp
jne
aas
addb
sbb
add
cmp
iret
test
xor
lahf
rolb
sar
sbb
add
in
cs
in
lods
hlt
leave
jg
mov
fwait
rclb
jbe
sbb
cs
mov
and
mov
or
out
add
and
movb
popa
mov
dec
xchg
jae
xchg
mov
mov
add
add
adc
sysret
jno
dec
inc
jns
into
xlat
push
in
xchg
jge
ds
mov
add
movsl
hlt
and
imul
push
es
dec
add
adc
insb
es
jp
aad
test
stos
or
sbb
mov
cmp
je
mov
add
mov
add
stc
and
mov
sub
addb
add
add
cmp
sbb
add
scas
loopne
cmp
add
push
jle
xchg
xor
outsl
pop
inc
add
divl
fiaddl
push
cli
fs
inc
add
scas
jp
dec
aas
fnstsw
mov
cmp
or
movlps
jnp
mull
xor
in
xchg
int3
movl
push
pop
pop
divb
adc
addl
hlt
outsb
pop
jp
inc
add
add
test
pop
jmp
int3
stos
mov
mov
out
cltd
jbe
add
sbb
out
mov
mov
or
mov
outsl
mov
xor
lahf
inc
add
repnz
jb
mov
je
fucomip
push
aam
fisttpll
sahf
pop
cwtl
mov
dec
cmpsl
mov
fisttps
sub
lret
adc
lret
lods
popf
or
testb
aam
daa
inc
mov
int3
push
mov
sbb
add
mov
inc
add
fdiv
in
cltd
fsubrs
fs
push
mov
add
test
jnp
shl
mov
ficoms
push
jne
in
imul
add
add
add
mov
mov
cld
stos
mov
cmp
stc
sub
mov
enter
addr16
mov
lcall
popa
cmp
addb
sahf
cmp
push
add
cmp
inc
add
mov
jle
dec
or
xchg
sub
scas
pop
xor
add
icebp
adc
mov
out
pop
add
es
mov
int
fstl
mov
add
hlt
jle
sbb
out
jecxz
add
bound
ret
call
ljmp
cld
pop
xor
mov
add
adc
push
loope
fldl
add
jl
lds
sti
fs
dec
and
add
lods
xchg
jbe
jbe
lcall
pop
xor
lret
xchg
dec
pop
mov
test
mov
add
add
add
mov
push
aaa
adc
outsl
push
aas
das
sbb
loope
loop
lds
loope
jo
sub
jge
add
rolb
test
das
in
sub
test
xor
sahf
adc
inc
add
imul
inc
out
daa
popa
push
xchg
in
cmc
lock
shll
lods
pop
jb
xchg
call
mov
aam
cltd
cmpsb
addl
xor
xchg
sti
mov
add
xor
loopne
cmovo
mov
rcrl
inc
add
push
pop
sbb
fcmovnu
std
loopne
add
pop
jnp
xor
jmp
add
jbe
fs
xchg
mov
rorl
out
xor
jae
push
adc
add
scas
pop
loope
insl
jnp
push
add
stos
pop
cwtl
mov
add
aas
jmp
mov
add
mov
iret
pop
lods
adc
and
dec
leave
lret
mov
nop
push
jl
arpl
inc
fcompp
roll
push
mov
xchg
bound
xlat
push
fstpl
mov
xchg
mov
rolb
push
push
leave
or
add
rcl
adc
test
pop
repnz
loopne
clc
push
adc
loopne
xlat
int3
cmpsl
addb
filds
add
xchg
and
fstp
aaa
into
push
lods
int3
mov
push
jmp
shl
js
add
dec
aas
cmpsl
lods
imul
xchg
xor
pop
dec
sub
add
fiaddl
repnz
dec
add
mov
jbe
lock
addb
add
das
push
mov
std
loope
jnp
daa
test
xor
lods
pop
inc
cli
js
lcall
inc
out
push
fistpll
mov
stos
pop
cmp
fxch
lcall
add
ss
adc
iret
fwait
xor
cltd
jns
hlt
addb
decb
insl
push
ja
adc
add
sarb
movsb
fldl
int3
insb
inc
imul
sbb
add
lods
shll
sahf
int3
add
vminsd
and
fincstp
sahf
push
add
add
add
fimuls
lods
pop
rorb
xor
cltd
icebp
and
addb
fs
mov
je
push
cmp
mov
pushf
ljmp
jb
jbe
mov
loopne
inc
adc
sti
jno
sub
loopne
movsl
les
icebp
pusha
add
fsts
add
call
jl
inc
add
test
cmp
and
int
pop
loope
stc
inc
imul
divb
hlt
lods
sarb
cmc
pop
push
add
daa
sub
iret
mov
je
mov
and
push
add
add
ficoml
or
ficomps
enter
pop
inc
add
mov
icebp
inc
add
pop
inc
add
mov
add
in
adc
cli
xor
adc
imul
mov
fsubrl
pop
adc
ret
int3
xchg
repz
sbb
add
repz
lahf
nop
pop
sbb
mov
insb
lahf
push
xor
cmp
roll
fcompl
push
push
jbe
inc
xchg
shl
lret
mov
call
add
cmp
xchg
mov
add
loop
jae
aad
insl
adc
add
adc
scas
xor
aam
mov
stc
jb
mov
dec
pusha
sahf
push
stc
jb
out
dec
cli
ljmp
jmp
add
dec
sbb
add
insb
rcrl
jb
ljmp
call
stc
jb
cwtl
add
push
add
dec
add
dec
incb
xchg
ret
add
mov
stc
jb
add
cli
jo
mov
cmp
sbb
add
mov
pop
add
inc
inc
mov
nop
jmp
sbb
add
ljmp
push
mov
push
mov
mov
add
sub
sbb
test
and
add
jb
ljmp
stc
jb
add
fldl
add
test
push
mov
xchg
ret
hlt
sarl
cli
mov
mov
xchg
ret
add
add
push
mov
xchg
ret
add
loop
pop
stc
jb
add
mov
jl
lea
stc
jb
dec
add
sub
or
jbe
stc
jb
cli
sbb
mov
mov
stc
jb
fstpl
adcl
subb
incl
jae
dec
mov
adc
add
jb
add
push
pop
mov
stc
jb
sub
sbb
xchg
add
addb
mov
je
stc
jb
add
mov
ss
add
dec
add
int3
push
push
mov
xchg
ret
ljmp
mov
nop
jmp
add
jns
rep
nop
jmp
rcll
sbb
add
stc
jb
test
jecxz
cmp
sbb
push
mov
xchg
ret
mov
add
insb
and
xchg
add
sbbb
hlt
mov
xor
push
sub
inc
add
xchg
ret
outsb
add
movb
mov
stc
jb
add
or
sbb
shrb
add
jb
fiadds
add
add
sbb
add
ljmp
stc
jb
add
mov
loope
add
mov
add
popa
popa
mov
dec
add
cmpsl
hlt
sub
jb
add
xchg
add
outsb
add
sub
jmp
inc
sbb
add
add
cltd
mov
nop
jmp
add
add
sbb
or
stc
jb
dec
add
enter
add
push
stc
jb
add
add
jecxz
add
push
stc
jb
mov
sar
pusha
stc
jb
cld
jl
jecxz
jns
pusha
ja
add
add
imul
mov
xchg
ret
pusha
add
imul
jb
sbb
pushl
nop
jmp
dec
dec
jl
hlt
push
hlt
repnz
call
stc
jb
mov
imul
nop
jmp
xor
dec
add
sbb
mov
decl
nop
jmp
cld
add
xchg
add
insb
jbe
push
stc
jb
roll
add
pop
in
push
mov
xorb
add
enter
cmp
fs
or
mov
xchg
ret
sub
add
add
icebp
nop
jmp
inc
sbb
add
in
mov
cmp
add
inc
xchg
add
add
add
popa
add
mov
xchg
ret
xchg
add
push
lahf
add
stc
jb
cmp
cmp
add
mov
nop
jmp
add
add
push
stc
jb
add
add
add
stc
jb
shrl
inc
hlt
add
jae
sbb
add
jae
add
cmpl
jmp
dec
add
add
rep
nop
jmp
mov
add
inc
add
sahf
xor
nop
jmp
add
ljmp
mov
xchg
ret
cwtl
add
call
push
mov
xchg
ret
orb
xor
push
push
stc
jb
add
pop
pushl
stc
jb
addb
dec
add
sbbl
leave
push
mov
xchg
ret
jne
dec
inc
pop
mov
stc
jb
xor
and
push
stc
jb
add
xchg
out
push
jne
addr16
je
stc
jb
add
cmpl
and
add
ljmp
ret
stc
jb
add
fs
add
arpl
jb
sub
xchg
add
sbb
push
adc
add
jb
jns
loop
lret
cmpw
nop
jmp
in
loop
add
bound
xchg
test
add
sub
stc
jb
pop
pop
dec
add
push
add
stos
shr
push
mov
xchg
ret
dec
add
add
add
and
push
mov
xchg
ret
fiadds
insb
int3
jmp
nop
jmp
add
xchg
dec
add
add
mov
mov
nop
jmp
jns
jne
add
jb
add
enter
add
stc
jb
fs
pop
push
inc
push
enter
push
add
add
pop
add
add
push
add
and
mov
stc
jb
dec
cli
in
add
stc
jb
sbb
xchg
and
arpl
popa
add
mov
xchg
ret
add
adc
pause
jmp
sbb
fiadds
add
add
sub
inc
sbb
add
add
add
ljmp
or
add
add
add
jae
pop
mov
stc
jb
add
mov
stc
jb
jae
xchg
rcrl
stc
jb
add
pop
push
mov
xchg
ret
add
aam
cmpw
stc
jb
addl
cmp
hlt
sldt
dec
jl
add
lret
push
stc
jb
outsb
cli
add
add
cmp
and
cli
add
xchg
add
inc
fs
jae
jb
stc
jb
sub
test
push
push
mov
xchg
ret
add
pop
push
mov
xchg
ret
xchg
add
add
push
nop
jmp
fldl
jne
xor
mov
mov
nop
jmp
add
add
add
add
mov
jb
or
imul
movsb
sub
add
add
sbb
imul
mov
xchg
ret
jl
enter
ret
push
mov
xchg
ret
hlt
jae
mov
jl
dec
sub
add
inc
add
mov
lock
mov
stos
stc
jb
push
fsubrs
xchg
add
bound
insl
xor
stc
jb
add
ljmp
mov
xchg
ret
cli
xor
add
je
sub
pop
loop
add
push
jns
popa
add
mov
xchg
ret
cwtl
add
pop
nop
jmp
loop
sub
mov
adc
jb
cmp
subb
out
mov
stc
jb
dec
push
jl
add
stc
jb
test
pop
pop
add
sub
mov
xchg
ret
add
fiadds
dec
imul
nop
jmp
dec
loop
jne
add
shl
or
mov
xchg
ret
cmp
add
nop
jmp
pop
cmp
jo
pop
add
xor
stos
push
stc
jb
add
add
add
and
mov
xchg
ret
insb
jns
add
inc
pop
adc
add
adcb
pusha
outsb
lods
mov
nop
jmp
dec
add
add
lahf
xchg
nop
jmp
loop
add
or
jb
push
add
add
jle
push
mov
xchg
ret
add
dec
xchg
dec
push
push
mov
xchg
ret
jo
add
add
nop
jmp
out
add
xor
add
in
mov
stc
jb
add
enter
sub
push
jb
add
cwtl
add
inc
loopne
jmp
add
sbb
add
incb
dec
cmp
jb
sbb
cwtl
jo
sarl
test
jmp
fs
inc
outsb
sti
push
push
mov
xchg
ret
jne
loop
cld
sbb
stc
stc
jb
pop
fiadds
add
add
call
nop
jmp
pop
add
add
add
stc
jb
add
pop
mov
push
mov
xchg
ret
add
add
ret
push
mov
xchg
ret
sub
add
sbb
add
sub
stc
jb
cld
sub
add
xchg
call
call
pushl
psubsb
jb
add
add
inc
cli
mov
push
mov
xchg
ret
sbb
add
push
sub
jge
stc
jb
add
xchg
add
loop
cmp
stc
jb
fisttpll
lret
stc
jb
sub
hlt
add
add
das
add
stc
jb
or
add
or
add
and
incl
sbb
xor
das
je
stc
jb
sub
mov
xchg
ret
xchg
xchg
add
add
test
stc
jb
mov
pop
mov
imul
and
sbb
add
addb
addl
mov
xchg
ret
mov
lret
mov
xchg
ret
cli
test
icebp
mov
add
stc
jb
inc
mov
negb
in
add
add
add
or
pause
jmp
add
add
add
push
nop
jmp
add
inc
add
stc
jb
sbb
fnstsw
add
ret
lods
push
stc
jb
inc
jo
cmp
cmp
add
push
mov
stc
jb
add
aas
lea
stc
jb
inc
add
add
dec
add
stc
jb
jae
add
mov
stc
jb
ljmp
lea
push
mov
xchg
ret
add
test
add
stc
jb
cmp
add
aad
cmp
push
mov
xchg
ret
jae
mov
dec
and
push
mov
xchg
ret
cld
add
leave
mov
stc
jb
add
add
xor
xor
add
stc
jb
enter
xor
add
stc
jb
add
jecxz
mov
jmp
add
inc
add
outsb
ljmp
add
jb
pusha
add
lret
jb
add
add
or
jmp
add
addb
mov
stc
jb
add
insl
inc
stc
jb
cmp
cld
add
add
push
add
push
mov
xchg
ret
add
xor
add
stc
jb
add
jne
add
fdivrp
jb
add
jl
addb
ret
stc
jb
add
mov
add
add
or
lcall
fcomp
add
xchg
sbb
sub
sbbb
push
add
add
mov
loopne
stc
jb
pop
push
test
add
jb
add
mov
divl
jmp
rclb
out
inc
add
add
cwtl
insl
jne
stc
jb
inc
addb
jmp
stc
jb
add
jb
mov
add
jb
orl
clc
dec
inc
stc
jb
insb
add
cwtl
popf
and
stc
jb
add
sub
in
loop
stos
push
push
mov
xchg
ret
dec
add
add
lea
sbb
dec
in
add
add
add
add
or
add
add
mov
nop
jmp
add
add
add
and
add
add
mov
stc
jb
dec
xorl
and
push
mov
xchg
ret
add
add
mov
xchg
ret
add
fimuls
xchg
stc
jb
roll
add
add
add
or
jb
add
enter
lea
push
mov
xchg
ret
add
add
push
loope
jb
xchg
push
add
add
add
sti
add
add
add
add
into
add
stc
jb
add
sbb
enter
ljmp
add
xchg
sub
add
cmp
xor
push
mov
xchg
ret
add
pop
add
add
add
jns
pop
call
add
add
adc
repnz
add
sbb
xchg
sbb
mov
xchg
ret
add
add
add
stc
jb
imul
popa
adc
jmp
stc
jb
insb
addb
pop
add
stc
jb
add
add
mov
stc
jb
add
stc
jb
add
hlt
mov
push
pop
add
stc
jb
cmp
outsb
add
dec
adc
push
stc
jb
add
add
cmp
push
sbb
andb
add
nop
mov
data16
stc
jb
out
cli
dec
add
nop
jmp
add
cwtl
dec
add
popl
cmpb
cld
dec
add
ja
adc
mov
cmc
incl
xchg
add
outsb
add
sbb
stc
jb
cwtl
add
pop
add
cld
cmc
test
mov
add
pop
jae
sbb
add
fstpl
subb
inc
dec
add
pop
dec
nop
jmp
add
push
add
add
mov
jns
andl
adc
add
dec
or
dec
pop
push
stc
jb
push
dec
add
xchg
nop
jmp
inc
ljmp
loop
mov
stc
jb
add
cmp
fidivs
sbb
jb
add
shrl
mov
jbe
nop
jmp
enter
push
fisubrs
add
mov
sub
ds
add
sbb
shrl
arpl
stc
jb
hlt
add
add
add
das
out
mov
push
cmpsl
add
mov
add
add
cli
jns
xor
add
stc
jb
add
sub
cld
lcall
cmp
add
mov
mov
xchg
ret
add
out
hlt
call
jb
add
roll
add
stos
push
push
mov
xchg
ret
add
add
loopne
mov
stc
jb
incl
ljmp
inc
add
jae
ljmp
cli
adc
fadds
fiadds
mov
loope
je
mov
mov
xchg
ret
sub
add
fst
cmp
mov
add
decl
jb
add
test
nop
jmp
loop
dec
sbb
ljmp
jb
mov
add
filds
dec
add
add
mov
jmp
add
add
add
or
pop
stc
jb
dec
add
xchg
cwtl
sbbb
mov
stc
jb
add
mov
push
mov
xchg
ret
add
ljmp
call
add
fisttpll
addb
call
add
inc
add
sbb
mov
adc
jb
add
addb
test
add
stc
jb
cmp
dec
jmp
stc
jb
add
fs
add
jl
mov
and
add
dec
mov
fstl
ja
jmp
stc
jb
add
add
push
mov
xchg
ret
jne
xchg
icebp
pop
xor
stc
jb
add
out
mov
mov
stc
jb
xor
fadds
ljmp
push
mov
incl
add
sbb
add
add
push
mov
xchg
ret
add
mov
nop
jmp
add
add
iret
je
stc
jb
dec
addb
movsb
push
test
in
call
add
add
push
mov
xchg
ret
enter
cmpsb
xchg
jne
pop
stc
jb
dec
sub
add
pop
or
jb
inc
add
mov
stc
jb
add
ljmp
nop
jmp
hlt
add
dec
add
ljmp
jno
jmp
add
sbb
lea
stc
jb
jae
jo
or
hlt
push
add
stc
jb
add
mov
pop
add
push
push
mov
xchg
ret
add
add
scas
jne
stc
jb
add
pop
cmpsl
pop
add
nop
jmp
sbb
fadds
pushf
pusha
stc
jb
add
roll
push
pop
stc
jb
mov
add
ljmp
nop
jmp
cmp
add
mov
cwtl
pop
mov
nop
jmp
dec
jae
inc
sbb
ljmp
mov
xchg
ret
test
jl
dec
or
mov
xchg
ret
test
fcoml
clc
incl
loop
add
add
add
stc
jb
pop
cwtl
enter
or
add
nop
jmp
add
fiadds
add
xchg
push
daa
xchg
jge
push
mov
xchg
ret
imul
popa
stc
jb
add
add
stc
jb
add
add
add
jmp
mov
xchg
ret
add
add
push
es
push
mov
xchg
ret
mov
jmp
stc
jb
mov
sbbb
add
mov
push
mov
xchg
ret
add
outsb
add
stc
jb
fs
add
pop
ret
outsb
add
fstpl
add
insb
add
add
pop
inc
add
cwtl
mov
push
mov
xchg
ret
add
add
repz
stc
jb
inc
add
dec
rep
push
mov
xchg
ret
cwtl
add
add
add
stc
jb
sbb
test
dec
cmp
jmp
enter
add
cmp
adcb
add
dec
dec
bound
in
push
stc
jb
sbb
mov
xorb
inc
add
test
nop
jmp
add
add
push
cmp
add
push
mov
xchg
ret
add
stc
mov
stc
jb
add
jp
popa
add
jb
add
addb
add
mov
icebp
sti
popa
stc
jb
add
hlt
enter
dec
inc
add
enter
jb
xorb
iret
and
nop
jmp
add
fadds
popf
nop
jmp
push
dec
dec
out
add
add
mov
stc
jb
add
add
mov
mov
mov
xchg
ret
add
cli
or
pop
cs
stc
jb
fadds
dec
add
add
not
push
mov
xchg
ret
xchg
in
push
dec
jne
stc
jb
cmp
xchg
jb
pop
add
add
mov
push
mov
xchg
ret
add
add
pusha
push
mov
xchg
ret
cli
add
sbb
je
push
push
mov
xchg
ret
inc
dec
add
mov
stc
jb
xchg
add
shr
inc
stc
jb
cmp
sub
add
shll
push
push
mov
xchg
ret
jecxz
add
add
andl
stos
ljmp
inc
add
xchg
add
xchg
ret
add
push
cmpsb
cmc
repz
and
stc
jb
add
fldl
cli
add
add
xchg
mov
je
stc
jb
incl
add
add
stc
jb
dec
cmpb
incl
jo
nop
jmp
loop
sbb
add
dec
mov
cmp
fiadds
dec
add
add
test
cmp
dec
fiadds
cmc
sbb
add
mov
aam
popa
mov
mov
add
add
jb
add
scas
jmp
stc
jb
fiadds
fadds
add
dec
push
mov
xchg
ret
add
add
add
jb
add
push
ljmp
out
lret
cmp
nop
jmp
dec
pusha
fstp
sbb
xchg
sbb
mul
inc
add
outsb
add
add
test
add
subb
insb
stos
pop
push
mov
xchg
ret
add
add
sbb
test
stc
jb
cwtl
ljmp
add
add
pusha
add
cmp
jb
sub
push
cli
add
add
mov
push
mov
xchg
ret
mov
push
or
jb
mov
sub
out
mov
push
mov
xchg
ret
add
mov
jge
ljmp
insb
imul
aas
mov
stc
jb
add
mov
pop
push
mov
xchg
ret
dec
add
add
push
sub
inc
and
jb
add
add
xchg
add
xchg
cmpl
cld
incl
xchg
sbb
bound
jae
mov
mov
lcall
jo
add
add
aaa
inc
iret
movswl
stc
jb
test
cwtl
xchg
sub
les
jb
add
dec
cmp
cwtl
subl
inc
in
inc
add
hlt
sub
add
test
push
mov
xchg
ret
imul
push
cmpl
nop
jmp
add
cli
test
fwait
add
stc
jb
push
in
add
add
xchg
inc
add
push
sub
stc
jb
add
sub
jecxz
cmp
nop
jmp
pop
incl
jecxz
mov
fmull
add
jb
add
jbe
add
xchg
and
or
popa
add
jb
add
fsubrs
add
ret
stc
jb
xchg
mov
push
pop
pop
cli
xchg
outsl
mov
push
mov
xchg
ret
add
nop
jmp
add
mov
cli
add
or
test
stc
jb
sbb
add
les
add
add
mov
fiaddl
xchg
ret
add
mov
push
push
push
test
mov
xchg
ret
inc
hlt
sbb
inc
call
ljmp
nop
inc
mov
sar
cmpb
pushl
add
add
add
add
stc
jb
add
add
add
push
rep
stc
jb
ljmp
inc
jae
mov
stc
jb
pop
add
jecxz
mov
stc
jb
push
add
add
mov
jae
jb
mov
xchg
jae
push
stc
jb
add
add
js
nop
jmp
add
add
add
mov
jb
inc
dec
dec
add
mov
xchg
ret
xchg
ljmp
jb
pop
in
add
add
inc
add
mov
xchg
ret
add
add
and
pop
push
mov
xchg
ret
inc
jecxz
xchg
adc
stc
jb
add
hlt
fstpl
shrl
jmp
addl
or
nop
jmp
add
add
adc
mov
stc
jb
add
subl
stc
jb
jo
jo
mov
sbb
incl
addb
sub
xlat
jae
pushl
push
mov
xchg
ret
test
cli
jne
nop
jmp
add
xchg
pop
push
stc
jb
add
add
push
cmc
data16
adc
shl
inc
add
in
add
add
inc
add
int
clc
stc
jb
pop
enter
fs
lret
and
stc
jb
ljmp
movsl
lret
pusha
stc
jb
pusha
sbb
add
incl
into
jne
stc
jb
pop
sbb
xor
add
mov
stc
jb
roll
add
mov
imul
add
add
sub
add
bound
adc
nop
jmp
add
add
sub
imul
popa
fs
jmp
dec
add
add
xor
mov
push
mov
xchg
ret
add
add
inc
pop
push
stc
jb
add
lcall
pop
decl
jmp
test
jb
jns
add
mov
xor
dec
nop
jmp
fdivs
imul
add
call
add
jb
xor
mov
stc
jb
add
xchg
repz
addb
test
jmp
mov
pop
xchg
push
add
jb
sbb
add
popa
stc
jb
add
add
fadds
sub
push
nop
jmp
or
xchg
sbb
dec
or
mov
stc
jb
add
stc
jb
add
dec
fstl
jg
stc
jb
sbb
push
stc
jb
dec
xchg
add
push
loop
add
cmc
adc
jb
add
add
inc
add
loop
incl
add
add
add
stc
jb
add
add
push
mov
xchg
ret
add
add
jmp
pop
or
test
jae
test
nop
jmp
add
jmp
stc
jb
pusha
add
cmpsl
push
sbb
mov
xchg
ret
add
add
adc
add
stc
jb
enter
add
add
add
jb
add
pop
mov
stc
jb
roll
loop
roll
test
std
add
stc
jb
sbb
sbb
mov
jb
add
mov
out
stc
jb
pop
cld
add
add
jne
stc
jb
add
nop
mov
cmpb
jmp
add
add
sub
mov
nop
jmp
inc
outsb
jns
add
add
mov
push
mov
xchg
ret
fiadds
add
pop
nop
jmp
add
fs
add
add
push
mov
stc
jb
dec
xchg
jne
add
imul
sub
add
mov
stc
jb
add
add
call
stc
jb
pusha
add
add
mov
stc
jb
dec
fidivs
sub
jb
push
xchg
add
add
add
nop
jmp
jecxz
add
dec
ljmp
mov
xchg
ret
fdivrs
jb
sbb
add
mov
sbb
stc
jb
add
imul
or
stc
jb
add
add
stc
jb
loop
add
imul
xorb
incl
imul
jb
add
roll
add
mov
cmp
ret
mov
xchg
ret
outsb
imul
ret
adc
aas
call
stc
jb
or
roll
inc
dec
movzwl
stc
jb
loop
xchg
cld
and
sub
adc
mov
add
sbb
test
decl
add
sbb
enter
push
mov
loope
fldenv
and
add
xchg
lods
mov
stc
jb
out
fucom
int
stc
jb
add
add
out
add
shll
pop
nop
jmp
add
hlt
push
loop
pusha
add
push
nop
jmp
add
mov
mov
stc
jb
push
pop
roll
mov
push
call
mov
xchg
ret
cmp
mov
add
add
push
mov
xchg
ret
fisttpll
ret
mov
subb
add
xchg
xchg
dec
jecxz
mov
nop
jmp
adcl
int
pop
jae
jb
add
add
mov
stc
jb
xchg
ljmp
and
mov
xchg
ret
ljmp
xchg
mov
push
mov
xchg
ret
hlt
add
inc
add
bound
jb
hlt
add
add
push
inc
add
call
nop
jmp
pop
add
bnd
jmp
pop
add
add
jb
add
imul
xor
incl
add
jo
jns
add
aad
je
nop
jmp
mov
and
push
mov
xchg
ret
out
mov
cmpb
add
dec
dec
add
jo
sbb
mov
push
in
mov
test
add
dec
cmp
jb
add
add
add
ret
sbb
or
stc
jb
jae
outsb
add
fs
leave
stc
jb
add
add
xchg
jo
mov
adc
stc
jb
add
add
movsl
push
clc
repz
decl
out
frstor
sbbb
pop
mov
out
add
stc
jb
add
sbb
add
stc
jb
dec
add
dec
add
das
call
stc
jb
xchg
add
cmp
rclb
fiaddl
xchg
ret
pusha
imul
stc
jb
add
cwtl
add
dec
add
stc
jb
xchg
dec
xchg
jecxz
add
jmp
add
add
dec
add
pop
pop
stc
jb
jns
dec
add
hlt
loop
push
stc
jb
cmpb
fadds
pop
out
mov
push
mov
xchg
ret
shll
inc
add
stc
jb
add
add
add
stc
jb
imul
sub
loop
mov
xchg
ret
fnstsw
xchg
add
and
dec
push
mov
xchg
ret
insb
ljmp
gs
je
stc
jb
mov
push
stc
jb
cmp
add
out
insb
add
pop
add
add
dec
cld
mov
add
sbb
incb
xchg
ret
enter
sbb
pop
and
jb
add
add
cld
pop
mov
mov
add
repnz
adc
stc
jb
add
cli
mov
jne
sarl
dec
add
mov
xchg
ret
pop
mov
cli
mov
stc
jb
or
add
push
nop
jmp
xchg
add
add
add
sbb
jo
call
test
nop
jmp
add
add
dec
xchg
cld
ds
stc
jb
cwtl
add
add
add
cmp
inc
sbb
jb
sub
add
xor
call
in
incl
add
add
cmpsb
pop
mov
stc
jb
xor
dec
cld
call
stc
jb
add
insb
add
push
mov
xchg
ret
fldl
dec
add
add
call
jmp
add
add
pop
lret
jmp
dec
add
dec
dec
add
mov
stc
jb
dec
addl
add
push
inc
add
dec
push
and
cmpb
jmp
loop
in
fs
sub
incl
add
add
jb
xor
add
add
add
stc
jb
outsb
jl
add
cld
add
popa
cmp
cmpb
cmp
add
xchg
mov
mov
jb
cmp
add
add
mov
stc
jb
cwtl
add
add
addb
mov
nop
jmp
sbb
out
loop
add
jmp
mov
or
add
popf
mov
stc
jb
add
ljmp
push
mov
xchg
ret
or
xchg
cli
mov
ja
int3
mov
nop
jmp
add
add
add
mov
jb
add
in
push
shll
jmp
add
push
mov
inc
xor
jne
stc
jb
dec
cli
enter
mov
call
ljmp
ljmp
mov
stc
jb
mov
xchg
jnp
jl
sbb
jb
sbb
mov
jb
cltd
rep
push
mov
xchg
ret
add
add
ljmp
jmp
pop
insb
inc
sbb
jl
jb
sbb
add
dec
add
add
push
stc
jb
add
add
add
cmp
mov
stc
jb
outsb
xchg
add
add
les
push
mov
xchg
ret
add
mov
pop
stc
jb
sub
test
sbb
shl
and
lret
nop
jmp
add
add
add
jp
and
jb
loop
add
sbb
xchg
adc
mov
jb
add
sahf
push
stc
jb
add
add
add
add
xorb
cmp
inc
add
mov
xchg
mov
nop
jmp
add
add
les
jo
push
push
mov
xchg
ret
xor
add
mov
stc
jb
jo
add
movsl
stc
jb
cli
sbb
sbb
add
cld
push
stc
jb
outsb
incl
fiadds
cmp
roll
leave
sub
jb
pop
mov
cmp
nop
jmp
add
add
pop
pop
dec
stc
jb
fadds
add
rcrl
xchg
stc
jb
xchg
jo
add
fadds
hlt
add
mov
xchg
ret
jecxz
cmp
xchg
push
bound
insl
stos
push
mov
xchg
ret
inc
mov
addb
rep
push
mov
xchg
ret
add
push
add
push
push
mov
xchg
ret
dec
add
fistl
mov
xchg
ret
fldl
add
jo
add
fildl
xchg
ret
cmp
add
pop
mov
jmp
add
add
add
mov
and
stc
jb
add
add
add
addb
sub
stc
jb
cld
xchg
add
adc
jb
out
add
jb
call
add
stc
jb
mov
add
test
stc
call
incl
add
test
hlt
out
push
stc
jb
rcrl
add
add
add
call
stc
jb
fs
add
sar
jb
add
add
add
sub
jmp
add
push
add
movsb
in
mov
stc
jb
add
rcrl
add
test
jae
test
nop
jmp
enter
ljmp
push
inc
dec
xor
push
mov
xchg
ret
out
add
scas
mov
stc
jb
in
add
sahf
xor
stc
jb
ljmp
cltd
je
nop
jmp
add
xchg
xchg
adc
xor
stc
jb
add
add
add
cmp
stc
jb
inc
mov
jb
mov
xchg
add
outsl
shr
nop
jmp
add
add
mov
add
pop
in
pushl
add
add
add
insb
push
rclb
out
inc
add
add
lcall
adc
sub
ret
mov
sar
jb
rorl
or
add
add
dec
add
mov
xchg
ret
add
fdivr
call
stc
jb
sbb
mov
jb
add
push
jns
sub
stc
jb
cwtl
xchg
add
xor
xor
stc
jb
add
add
dec
nop
jmp
dec
out
add
mov
ret
or
push
in
call
incl
mov
and
push
mov
xchg
ret
xchg
add
addb
jo
pushl
nop
jmp
add
add
mov
jmp
push
leave
lock
ljmp
pop
mov
insb
push
mov
push
add
loopne
add
add
add
xchg
pop
pop
mov
inc
xor
xchg
jns
add
rolb
addb
icebp
enter
cmc
or
add
mov
gs
pop
das
push
mov
add
cld
addb
add
add
movsl
rolb
fsubrs
cmpsl
mov
mov
sysenter
mov
cmp
lock
fmuls
or
jno
or
aas
push
or
rcrb
push
add
cmp
push
add
inc
cmp
repz
fldenv
push
xor
jl
gs
cwtl
xor
daa
in
mov
ror
insl
cltd
movsb
enter
ljmp
dec
sbb
xor
add
sbb
rolb
addb
add
and
jns
ss
into
int
mov
sti
jnp
add
sbb
call
add
movsb
jne
jnp
mov
xchg
stos
ret
es
xchg
mov
fwait
push
dec
and
fwait
pop
js
test
xchg
cltd
fsubl
dec
out
pop
out
cmp
fiadds
fs
add
bound
mov
pushf
mov
mov
in
ja
mov
xchg
ljmp
fdivs
aad
xor
dec
insb
das
jns
call
add
fmul
adc
shll
jb
mov
insl
test
adcl
pop
adc
cmp
mov
wrmsr
xor
or
adc
inc
add
sysexit
fildll
push
sub
scas
pop
xor
pop
scas
into
lods
lods
dec
enter
icebp
sbb
add
add
sti
push
jecxz
cs
dec
xchg
mov
mov
mov
movsb
and
lahf
nop
outsl
rcr
cmp
fdivp
outsl
jne
popa
mov
mov
mov
lods
xor
mov
mov
es
add
dec
mov
fnsave
add
inc
add
push
sbb
ret
sub
add
pop
adc
sbb
insb
xchg
loop
or
xor
clc
in
idivl
xor
arpl
shlb
inc
leave
int3
mov
xchg
or
int3
and
shr
in
sarl
add
add
movsb
jl
add
or
add
leave
or
and
push
imul
stc
xchg
jnp
int3
dec
xor
in
ja
add
or
push
xchg
pop
mov
xor
sbb
sbb
inc
add
fdivs
add
add
addl
xor
dec
cs
sbb
sbb
add
xlat
dec
and
inc
add
jnp
pop
minps
xchg
adc
add
lret
stos
jle
gs
mov
mov
push
add
fiadds
or
adc
mov
out
testl
mov
mov
add
movaps
call
popf
testb
rcrb
fwait
bound
fdivrl
shrb
and
jmp
cs
mov
adc
mov
push
jl
mov
add
pop
sub
xor
imul
pop
push
decl
xchg
add
addb
andl
shl
loope
lods
xchg
add
scas
add
jl
add
test
ret
out
movsb
mov
fs
push
cmp
pop
sahf
test
jg
stc
je
popa
push
gs
add
or
inc
add
in
pusha
add
fistpll
cmpsl
lcall
adc
push
addb
add
jle
mov
mov
add
daa
inc
add
jns
inc
cwtl
push
rcrb
jge
mov
ss
ret
push
out
pop
scas
movl
imul
outsl
je
and
out
mov
gs
imul
mov
add
jbe
imul
or
mov
mov
repnz
ds
fsubrs
test
pop
aaa
cmp
xlat
inc
add
add
dec
aaa
popf
and
xor
jl
add
js
add
mov
cwtl
fcoml
xor
outsb
pop
js
insl
mov
inc
add
add
push
xchg
test
bound
stc
cltd
fdivl
in
lret
xchg
sbb
fcoms
mov
xor
popl
in
fildll
mov
or
xchg
out
ljmp
bound
cmp
rolb
stos
int
or
add
mov
and
stc
mov
daa
push
pop
xor
pop
popf
push
pop
enter
das
xchg
fwait
sub
ljmp
xor
imul
xor
sub
push
lret
add
push
loop
sub
lahf
cmp
addb
push
adc
mov
sub
inc
lds
mov
clc
imul
aad
push
insl
sbb
int3
sarb
stos
pop
shrb
xlat
test
movb
inc
dec
mov
push
in
scas
shrl
mov
or
std
cmp
jb
mov
push
xchg
cmpsl
pushf
enter
xchg
pop
nop
lods
jl
int3
mov
jno
lret
orl
add
add
repz
js
add
dec
out
push
lahf
test
dec
push
addb
es
lods
std
and
lods
pop
roll
add
dec
shrl
leave
adc
add
int3
into
push
repz
ret
jg
push
imul
pop
jecxz
push
addb
rcrb
mov
sahf
imul
aam
add
loop
testl
push
jae
bound
and
out
jne
add
js
shl
jo
int
ja
fcoms
cld
jnp
lock
dec
lds
sub
or
inc
add
sbb
push
imul
into
aas
test
rorl
dec
les
mov
imul
clc
mov
add
inc
inc
add
mov
rolb
dec
add
xchg
outsb
sub
jl
jo
scas
ljmp
arpl
pop
imul
add
dec
movsb
ss
add
cmp
clc
inc
add
jmp
xchg
jmp
ret
repz
add
sub
sbb
jmp
mov
cli
push
pop
sarb
jge
popa
pusha
add
call
iret
sahf
gs
out
repz
repz
lcall
adc
adc
pop
cwtl
push
fidivrs
xor
cmp
repz
jmp
and
mov
cltd
fdivrl
cmpsb
push
rcrl
popf
pop
stos
mov
nop
mov
pop
mov
nop
jl
xchg
scas
jg
dec
test
into
xor
add
add
cwtl
sbb
scas
mov
add
mov
or
lock
les
fistpl
mov
jmp
add
push
loop
rcll
mov
addr16
inc
add
dec
adc
sub
icebp
and
adc
cli
leave
cmp
xor
out
fsubl
call
pop
test
jnp
xchg
xchg
inc
xchg
stos
sub
pop
or
cmp
dec
fldt
adc
outsl
test
ret
mov
xorl
out
xchg
daa
jecxz
leave
add
and
pop
xchg
repnz
jbe
movsb
xchg
das
int3
push
ret
repz
das
xchg
daa
lret
xor
insl
cmc
iret
mov
mov
stc
jns
in
cli
or
insl
push
std
push
add
lret
inc
add
xor
cmp
add
pusha
add
add
movsl
repz
in
cmpsl
mov
popf
adc
mov
cwtl
fmull
mov
or
adc
into
cmc
mov
xchg
iret
pop
cmp
cmp
sub
xchg
outsb
push
movb
or
add
cmpsb
test
sbb
mov
pop
js
jbe
idivl
cli
mov
jge
arpl
add
cmp
dec
mov
inc
adc
cmp
mov
mov
jno
lcall
jge
stc
ja
lea
add
and
push
mov
adc
xor
rclb
push
mov
xchg
and
or
pop
icebp
mov
ror
and
jbe
mov
icebp
xchg
mov
addb
dec
inc
add
push
movb
inc
and
mov
movsb
sbb
add
test
aad
jb
inc
rep
lods
dec
xor
test
adc
push
pop
mov
divl
mov
rorl
add
pop
jnp
fcoms
movl
mov
add
jo
add
jmp
das
lahf
inc
int3
push
jb
loope
and
and
lret
dec
js
mov
je
hlt
sbb
add
mov
jne
icebp
insl
mov
cmp
add
xor
ret
dec
out
xor
xor
notl
gs
push
add
sbb
es
aam
ss
idivb
dec
popa
pushf
cmpsb
fsubp
jb,pn
mov
pushf
cmp
outsb
push
das
cmpsb
ljmp
add
mov
ds
add
sub
add
push
cmp
rcr
inc
add
aad
push
xchg
test
repz
loopne
add
xchg
xchg
sbb
repnz
test
dec
fsubs
dec
xlat
in
jmp
lds
mov
xchg
lock
and
bound
std
add
ja
inc
add
and
xchg
and
jbe
adc
mov
add
lea
sbb
add
xchg
add
sub
mov
add
fnstsw
fwait
mov
add
in
cld
ljmp
xchg
cmpsb
inc
add
cltd
les
add
aaa
xchg
cld
sbb
mov
jb
pop
mov
xchg
cmpsb
mov
das
pop
lods
push
sbb
pop
jp
cmpsb
mov
add
cmp
mov
jne
shll
dec
and
mov
mov
cmpsb
jg
inc
add
mov
ret
cmp
cmp
pushf
or
fsubr
outsb
xchg
mov
outsb
les
movb
outsb
arpl
shlb
jne
test
add
in
fwait
clc
jb
mov
es
xchg
lcall
call
dec
mov
xchg
icebp
push
or
jmp
inc
push
fdivr
cld
dec
push
and
lock
sub
shr
pushf
orl
rcrl
adc
add
sub
xchg
pop
aad
xor
add
imul
pop
sbb
jb
addb
jo
repz
out
pop
and
lock
insl
jl
cs
aam
and
addb
aas
cmovs
movb
and
pop
movsl
mov
out
loopne
loopne
dec
jle
push
inc
add
jne
int3
test
mov
fs
adcl
xchg
jecxz
xchg
test
sub
js
cs
pushf
cwtl
cs
into
pop
xor
mov
iret
cmp
xlat
pop
push
and
lea
xchg
inc
fimull
stos
inc
add
xchg
das
xor
xchg
or
and
xor
pop
cmp
arpl
xor
popf
lods
push
sub
cs
cmp
push
fcmovnu
jl
bound
mov
daa
mov
pushf
and
or
in
mov
jp
push
out
aaa
or
out
negl
xchg
lds
gs
xor
sbb
pop
mov
bswap
xor
scas
mov
push
xchg
push
jge
insl
pop
repz
hlt
shlb
cwtl
ss
and
xchg
push
bound
inc
push
sbb
je
pop
lret
push
push
fcoms
push
test
pusha
add
lock
aaa
jp
loope
sbb
into
movzwl
cld
pop
cmp
das
or
jecxz
jmp
lret
repz
movsb
jne
test
imul
push
popf
pop
jbe
xchg
jl
inc
test
loop
add
inc
mov
negb
xlat
outsb
in
push
push
cmc
jmp
push
insl
xchg
jo
into
xchg
es
sub
xchg
out
fistps
lea
sub
test
mov
sub
sub
aad
bound
mov
xor
and
pop
movb
sbb
fs
xorl
sti
out
pop
sub
mov
mov
dec
jbe
gs
mov
add
idiv
cmp
add
lret
xchg
lret
xor
cmp
sbb
jo
mov
jno
roll
push
mov
imul
dec
push
mov
test
insb
jle
pop
mov
mov
ficompl
insb
push
repnz
xlat
pusha
add
xor
cmp
and
outsl
add
fistpll
add
mov
mov
dec
pop
shrl
jge
rolb
push
or
les
in
es
pop
enter
mov
cld
cmp
sbb
mov
jae
mov
and
add
mov
inc
sahf
aaa
xor
fimuls
jno
lahf
testl
mov
lret
test
dec
in
mov
mov
xchg
leave
cs
das
rolb
add
jle
loopne
and
jne
pusha
add
sbb
leave
mov
js
pushf
in
dec
lock
push
mov
add
pop
jbe
cmp
xor
mov
cmp
mov
and
add
sbb
adc
sub
lcall
mov
aaa
or
push
add
loopne
int
and
sub
push
repnz
daa
pop
rolb
jbe
iret
aad
add
jbe
out
adc
cmpsb
dec
jae
dec
push
sub
mov
xor
shr
int3
mov
and
out
arpl
xchg
mov
mov
inc
dec
loop
add
mov
ja
fs
mov
repz
aam
mov
adc
sub
fsub
incb
mov
mul
arpl
add
jmp
lods
or
test
daa
int
push
inc
pushf
std
xor
cmp
inc
add
xchg
fstpl
pop
ret
cld
rcrl
xor
pop
dec
je
fwait
je
imul
aad
outsl
xor
iret
jbe
jecxz
lret
aaa
and
stos
lods
sub
push
and
inc
cli
pop
pop
rol
in
mov
scas
pop
movb
xor
lods
lods
dec
jge
add
inc
jo
xor
call
aaa
adc
test
mov
add
mov
dec
icebp
lods
fcoml
jns
aad
fcompl
fidivrs
mov
xor
and
xchg
xor
sbb
xor
hlt
or
mov
and
lock
stc
rorb
addb
in
mov
inc
add
sbb
cmpsl
mov
add
add
psubd
cmp
fcmovb
sarb
fisttps
add
in
pop
shrb
fidivs
dec
mov
and
sub
mov
and
cli
push
mov
mov
push
aaa
dec
cmc
or
xor
mov
xchg
dec
mov
add
mov
push
inc
leave
test
sbb
je
push
lds
adc
push
mov
sarl
xor
mov
mov
pop
sti
xchg
in
push
or
push
pushf
dec
xchg
lahf
lret
push
xchg
push
popa
js
imul
jge
mov
pop
sub
push
add
aas
mov
jne
insb
loop
add
into
call
scas
or
ret
fisubrs
repnz
add
mov
adc
add
mov
inc
pop
add
ds
cmc
repz
push
rolb
fcompl
mov
mov
testl
popf
dec
cmpsb
mov
add
xchg
in
cmp
lods
aas
es
int
jns
jb
or
bswap
mov
add
xor
or
adc
inc
shl
mov
add
outsb
movb
mov
add
pop
jo
fwait
outsl
pushf
cmp
aad
jno
repz
sbb
mov
dec
mov
cs
imul
xor
adc
jmp
dec
inc
add
dec
pop
dec
loope
xchg
aaa
xchg
out
addb
scas
mov
test
mov
xchg
movsl
ljmp
pushf
inc
mov
xchg
popa
shll
add
xchg
in
and
movb
lods
sahf
mov
add
and
arpl
add
mov
add
aad
xlat
pop
cmp
add
push
sub
lret
fisubrs
lcall
cmp
out
out
sbb
inc
push
add
cli
out
jno
mov
lods
ljmp
daa
data16
out
addr16
in
jae
mov
sub
add
push
pop
jmp
ljmp
repnz
out
xor
lea
bound
push
mov
in
mov
add
add
add
jp
xchg
xor
in
scas
cs
lret
mov
dec
sbb
add
add
call
xlat
inc
add
sbb
and
nop
inc
fucomip
roll
clc
scas
push
sbb
add
cs
daa
adc
or
fs
sbb
xchg
stc
dec
clc
sub
pop
sub
add
jle
out
cltd
push
xor
adc
add
fistps
out
clc
in
clc
mov
lret
idiv
sbb
in
adc
push
sahf
mov
sub
pop
mov
sub
inc
add
add
les
pop
in
cmp
ret
mov
add
cld
push
mov
addl
jp
fnstcw
movsl
testl
adc
adc
arpl
dec
movsb
addb
add
dec
rcl
cmpsl
icebp
loop
int
pop
sarl
dec
int3
pop
roll
xchg
lea
mov
mov
push
mov
add
cmpsb
push
pop
push
inc
push
adc
cmp
mov
sbb
ret
in
mov
gs
push
rcll
mov
sbb
movsl
push
push
mov
insb
divl
rolb
enter
popa
mov
out
jl
loope
dec
or
jne
add
mov
fcomip
cltd
pop
push
int
scas
xchg
add
xchg
or
out
pop
addb
xchg
fwait
dec
lret
cli
and
push
dec
mov
inc
add
xchg
test
insb
gs
push
jp
add
icebp
dec
push
sti
lahf
jl
movsb
in
jecxz
insb
lea
fidivrl
push
adc
popf
movb
or
out
jp
mov
in
stos
fistpll
out
push
ret
pop
loope
jbe
push
pop
lret
pop
inc
add
xor
jl
std
ljmp
push
xor
mov
jmp
shrl
movsl
test
add
mov
add
add
rol
add
pop
jp
mov
mov
xchg
mov
add
push
lcall
fldl
add
js
add
pop
jns
test
mov
imul
stos
push
aad
ret
pop
daa
stos
cwtl
in
cltd
pushf
push
inc
negl
inc
add
xor
sbb
mov
jecxz
loop
popa
movb
aam
add
add
nop
adc
subl
test
lods
sarl
jmp
aad
mov
ss
imul
test
adc
xor
cmpsb
pop
icebp
jne
loopne
adc
scas
popf
stc
iret
pushl
push
add
cmpsb
mov
lret
cmp
mov
mov
fists
cmp
xchg
mov
stc
or
jnp
jle
and
ja
or
dec
sub
call
dec
push
jne
dec
jbe
mov
jecxz
add
xlat
inc
add
jecxz
sub
xchg
cmp
inc
xor
sub
xchg
jne
test
sbb
cmp
imul
pop
aam
or
jno
in
inc
add
sub
push
jnp
vaddsubpd
fadds
std
outsl
lods
cmp
or
repz
dec
adc
mov
out
in
push
fldt
lret
ss
fwait
icebp
inc
add
addb
jbe
bound
xor
pop
cli
lret
lret
call
jb
mov
xchg
mov
mov
fcomps
cmp
lock
mov
pop
jo
divl
jge
cli
imul
or
xchg
andl
movsl
pop
out
pop
and
add
imul
ss
add
jnp
xor
mov
cmpsl
push
pop
movsl
aas
lock
adc
pop
cld
imul
xor
push
push
adc
subl
adc
mov
dec
jecxz
dec
shrl
out
adc
inc
add
and
cmp
int
mov
addb
shlb
jbe
jmp
daa
cld
sbb
clc
pop
and
cmp
mov
adc
imul
inc
add
popl
mov
add
outsb
in
add
mov
jg
in
add
jle
outsb
fwait
dec
jne
xor
nop
ljmp
jno
cmpsl
leave
frstor
cmovbe
cmp
int
je
add
add
and
mov
jno
sti
add
push
fiadds
add
pop
mov
add
jo
add
or
pop
inc
dec
mov
sub
and
loopne
popf
and
and
fstpl
jo
call
ret
and
and
pop
test
addr16
psubd
data16
mov
leave
mov
add
xlat
push
cmp
sbb
scas
pop
pushf
xor
push
cmp
dec
dec
and
push
mov
stc
aad
xchg
jmp
xor
xor
out
and
mov
cmp
cmp
adc
adc
push
and
dec
mov
stc
insl
xchg
add
lods
cmp
scas
mov
cmpsb
dec
ffree
ss
and
pop
inc
ljmp
or
repz
pop
cmp
scas
fisubrs
sbb
add
xor
add
xor
scas
and
dec
adc
jp
add
sbb
enter
scas
sub
mov
fsts
add
hlt
aam
add
xor
xchg
sub
adc
add
xor
orl
mov
cmp
xchg
inc
add
push
insl
mov
push
bnd
and
cwtl
test
xchg
adc
jbe
test
pop
adc
ret
dec
testl
sahf
ss
cmp
shlb
scas
out
pushl
shll
mov
jo
xor
outsl
and
test
into
das
and
add
mov
cmpsb
faddp
adc
lods
sub
or
sub
mov
lcall
sbb
popa
cmp
push
mov
lods
test
out
mov
jbe
xchg
xchg
or
push
cli
inc
js
mov
js
push
add
icebp
ds
add
test
add
sub
cmp
push
int
pop
mov
aam
movb
pushl
movq
fisttpll
mov
push
mulb
xchg
mov
hlt
xchg
jge
std
xor
pop
call
sub
push
push
jno
ja
add
nop
inc
add
and
fcomip
xor
frstor
out
outsb
jl
and
xor
and
in
clc
jmp
sub
dec
adc
add
dec
int3
or
mov
pop
push
add
enter
jns
add
hlt
xlat
insl
fcomi
loop
mov
pop
int
sbb
ror
rcl
sahf
add
scas
clc
faddl
inc
add
adc
jmp
lods
push
std
leave
adc
roll
in
out
jmp
adc
add
cmp
sahf
icebp
jno
xchg
or
sbb
mov
or
add
inc
add
stos
outsb
loopne
addr16
jno
ret
iretw
xor
add
stos
pop
mov
arpl
mov
cmp
push
and
add
int
ret
xor
pop
jo
push
sub
addl
aad
dec
gs
leave
jecxz
fisubrs
inc
add
arpl
aaa
add
stos
es
pushf
fdivl
and
xor
pop
lds
push
inc
add
sbb
sbb
mov
mov
jne
add
push
movsb
pop
inc
in
popa
jmp
mov
and
mov
sbb
cmp
mov
mov
int
mov
aas
push
inc
mov
and
popa
add
inc
add
lods
in
outsl
jl
pop
mov
ret
addb
outsl
inc
testb
aad
out
in
scas
lods
xchg
xchg
push
inc
add
or
or
fiadds
add
xchg
xor
insb
xchg
mull
pop
push
add
add
or
sti
shll
mov
xlat
xor
in
je
mov
xor
jno
ja
mov
or
test
loopne
les
add
jge
les
xchg
aad
pop
push
xor
add
push
adc
adc
and
xchg
mov
cwtl
or
mov
out
pop
mov
in
test
insb
or
ret
dec
dec
outsl
out
jb
lcall
cld
inc
aaa
test
lret
xor
mov
sbb
mov
mov
negl
cmp
xor
enter
popf
lods
adc
dec
rolb
lds
adc
test
xchg
xchg
dec
dec
jb
ljmp
lret
test
dec
jns
adc
nop
cmp
insb
adc
loope
std
addb
daa
dec
xchg
sbb
gs
fldenv
push
push
pusha
add
xchg
clc
aad
jae
add
mov
mov
arpl
cmp
lret
sub
push
jl
shll
jge
fistps
mov
sub
add
cld
jnp
rcll
cmove
insb
fisubrs
and
shrl
push
sbb
xchg
fstpt
rol
add
fildl
push
stos
fstpt
std
add
cmpsb
push
add
add
xor
xlat
scas
popa
hlt
sti
and
adc
push
push
gs
gs
mov
adc
addb
push
insl
xor
push
push
int
sarb
and
xchg
cmp
sbb
shl
mov
popf
fildl
jbe
mov
push
add
or
pop
mov
cwtl
xchg
out
scas
xor
inc
add
xchg
and
xor
add
add
add
push
fnstenv
ss
rorl
cmpsl
pop
push
dec
loop
sub
aaa
jle
scas
or
leave
and
lods
mov
pusha
add
fdivrs
scas
cmp
data16
imul
movsb
mov
dec
icebp
jl
xchg
mov
push
add
sub
movsb
in
outsl
lods
xor
data16
pusha
add
dec
rcrb
dec
inc
sub
xor
xor
lock
add
mov
pusha
add
data16
inc
addb
mov
lds
add
push
outsl
push
testl
scas
sub
push
addr16
cltd
push
out
xchg
or
lods
adcl
jp
idivl
xchg
or
cmp
or
mov
nop
cmp
dec
pushf
mov
shl
mov
enter
add
or
jge
add
nop
xchg
sti
pop
mov
ja
xchg
xchg
test
popf
pop
pop
arpl
push
add
jb
jnp
cmp
fidivrl
or
sbb
mov
mov
bound
leave
lods
jecxz
notl
sarl
jnp
out
jae
add
mov
ljmp
cli
adc
and
push
test
les
add
inc
addr16
jb
shlb
jecxz
sub
and
inc
add
lret
or
lods
out
pop
addb
pushf
add
mov
jbe
movsl
sahf
jae
mov
jb
jnp
imul
lcall
xchg
movsb
imul
imul
jno
mov
add
sahf
arpl
paddd
inc
xlat
sub
dec
jo
mov
int3
ret
je
int
add
xchg
stc
icebp
inc
add
xchg
mov
xchg
cmp
js
mov
repnz
cmp
push
push
dec
sbb
mov
faddl
add
js
sti
mov
in
dec
ret
test
out
add
mov
les
outsb
in
roll
xchg
dec
add
mov
jo
divl
cmp
test
sti
xchg
mov
movsb
popf
in
add
dec
out
jo
mov
cmpsl
popf
int3
ds
cmpsb
addl
movsl
mov
and
ljmp
repz
add
add
out
scas
xlat
mov
push
jne
into
movl
push
stc
push
fidivs
fadds
ss
add
out
jl
add
dec
test
mov
inc
add
inc
mov
add
add
xlat
mov
jl
gs
dec
cmc
dec
xlat
add
daa
jae
sub
mov
cmc
xor
xor
addl
or
sub
stos
stos
add
cs
add
pop
scas
clc
or
and
add
push
insl
push
inc
add
inc
mov
and
stos
push
jmp
jo
test
bound
jmp
xchg
xchg
push
andl
rcrb
ror
or
mov
sub
movsb
popa
stos
cmp
jmp
inc
scas
test
aad
cltd
outsl
cmp
imul
inc
add
loope
shr
std
mov
mov
cmp
sub
push
push
jmp
clc
sysret
movsb
cmp
push
bound
out
xchg
aad
fstpl
jge
xchg
jo
jle
addb
daa
testb
sbb
shrl
mov
and
movsb
push
add
push
push
test
inc
add
add
jg
addb
inc
popa
rcr
mov
sub
ja
imul
dec
cmp
xchg
xor
les
or
sahf
inc
dec
lcall
add
stc
ret
out
addb
mov
dec
mov
inc
add
pop
sbb
xor
cmp
and
stc
mov
movb
scas
sub
dec
call
adc
mov
and
pushf
lret
cld
testb
fcoml
mov
xchg
inc
add
leave
scas
enter
add
out
outsb
mov
xchg
ja
int
mov
scas
pushf
add
inc
add
in
jge
add
call
add
push
rolb
stos
add
mov
jbe
fwait
je
lret
add
lret
jnp
add
or
imulb
add
inc
add
mov
adc
cmc
out
arpl
add
sub
loop
xchg
lds
or
or
sub
push
xorl
int3
jns
xchg
fsubrl
nop
rcrl
mov
sbb
jp
add
andl
xlat
loopne
xor
cmp
cmp
cmp
adc
adc
jo
add
add
ja
jns
sbb
andl
je
mov
enter
sub
sbb
sbb
push
mov
add
or
mov
mov
popf
xor
sub
add
int3
push
xor
mov
xor
add
popa
jmp
mov
add
jb
jno
sbb
jp
aad
es
mul
dec
push
cmc
daa
dec
ret
dec
mov
andl
adc
inc
and
test
mov
lds
fsubrp
and
sti
in
jge
push
repnz
add
xchg
cld
shrl
sahf
dec
push
mov
int3
inc
add
movups
xchg
loopne
out
mov
pop
mov
or
dec
sub
adc
clc
pop
inc
add
addb
daa
insb
xchg
fwait
pop
pop
or
sbb
cltd
fsubrl
inc
fsubs
mov
jmp
jo
sbb
add
ret
daa
adc
in
push
add
mov
jo
cwtl
or
xchg
adc
add
nop
faddl
cmp
jno
inc
jo
cmp
mov
add
insl
cltd
sbb
addb
lret
jb
add
mov
dec
inc
stc
push
add
xor
adc
ficomps
negl
or
movsb
cmc
loopne
push
jb
add
mov
sub
mov
lock
add
mulb
mov
xchg
push
adc
lea
inc
popa
lret
arpl
mov
dec
or
xor
xor
andl
jle
cmp
test
cwtl
add
mov
pop
pop
mov
push
and
popf
jecxz
cld
inc
inc
out
mov
add
sahf
and
ds
dec
lret
mov
dec
mov
pop
imul
and
xlat
mov
les
pop
or
add
lds
and
cwtd
arpl
and
jo
les
out
add
xchg
ret
sub
dec
aad
cmp
xchg
or
adc
lds
cltd
push
add
faddp
sbb
popf
out
jmp
add
add
pop
popf
push
notb
jp
jb
loope
aam
leave
outsb
add
inc
cmpsl
sub
ret
jns
mov
das
push
jp
cmp
add
sbb
vandps
sub
jne
fsubrl
ljmp
lret
nop
cmpsl
or
add
pop
ds
inc
add
dec
and
xor
xchg
addb
dec
push
sahf
rolb
lahf
into
cmc
sbb
pop
add
xor
and
cs
jb
rcrl
jge
test
or
ljmp
or
addb
out
lods
mov
add
pop
xchg
xchg
aaa
insb
movsl
pop
push
mov
ds
cmpsl
dec
xchg
scas
adc
sub
jo
mov
push
cld
pop
out
test
jge
aam
add
push
pshufw
outsl
outsl
mov
daa
and
shrl
mov
imul
nop
or
lea
out
dec
add
addl
jae
and
int
es
movsb
stos
ret
cli
mov
add
xchg
cmp
sub
in
xor
inc
jp
mov
and
or
jne
movsb
jns
add
inc
xor
inc
mov
cvtpi2ps
jl
xorl
mov
add
shrl
dec
sub
movb
jl
xor
das
pop
mov
xor
or
andl
mov
dec
mov
add
icebp
fdivl
loope
nop
fdivl
dec
pop
fimuls
add
pusha
add
dec
or
shl
lods
rcrl
imul
push
gs
xor
add
ret
add
and
sub
fcmovbe
mov
std
xchg
lcall
lcall
or
rorl
add
mov
fwait
pop
call
lds
out
and
cmp
mov
ds
sub
add
jae
imul
push
xor
lock
nop
ss
fadd
add
mov
lcall
negl
add
xor
mov
test
xchg
test
add
add
push
repz
sub
inc
in
aaa
inc
add
mov
xchg
xor
inc
add
sarb
mov
or
insb
addb
pop
add
fs
dec
lahf
rcl
mov
rorb
xor
add
cmpsl
xchg
xor
or
cmp
jo
mov
add
rolb
lahf
inc
add
xchg
inc
add
cmp
mov
add
add
sub
xor
or
es
mov
dec
mov
xchg
mov
cmp
in
popf
test
push
dec
cmp
add
shrb
and
add
test
aam
pop
jbe
and
call
push
mov
mov
cmpsb
xor
mulb
lds
jae
adc
test
adc
pop
pop
pop
test
pop
or
cmp
shlb
orl
js
and
or
push
adc
cmp
insl
paddd
pop
insb
daa
sub
mov
cmpsb
adc
fdivs
dec
dec
fdivrp
mov
jle
cwtl
xchg
movsb
pop
jae
mov
cli
popf
xor
push
lret
mov
std
and
add
add
out
test
fisttpl
popf
and
xor
lcall
shlb
mov
mov
pop
pop
jg
clc
addb
ja
cmp
pop
push
jle
mov
add
add
inc
add
add
xchg
sti
mov
inc
xor
mov
cmpsl
or
movsb
loop
add
cmp
xchg
mov
test
in
pop
ffree
add
dec
or
sbb
add
add
dec
mov
fcompl
pop
inc
add
jle
iret
mov
mov
and
addl
ds
repz
frstor
xchg
add
gs
ja
rolb
mov
jne,pn
add
ret
in
dec
lret
js
sub
imul
stos
xor
loope
bound
stos
pop
out
iret
test
sub
prefetch
inc
push
push
mov
cmp
adc
add
scas
cld
pop
push
inc
add
iret
cmpsl
xchg
mov
cmpsl
aas
push
mov
push
mov
jge
negl
daa
jp
cmp
push
test
jp
pop
repnz
fyl2xp1
jo
repnz
mulb
add
mov
push
mov
call
jle
or
movsl
addb
push
outsl
jp
sub
lret
cli
push
add
or
fildl
fucomi
mov
lds
cmpsl
data16
sub
pop
sbb
addb
bound
rolb
inc
jle
add
gs
mov
insl
xchg
rolb
sahf
cmpsl
mov
add
add
jo
sbb
cld
rol
xor
js
pop
xor
mov
pop
arpl
jg
test
std
fwait
jp
mov
mov
sbb
xchg
xchg
int
loope
sbb
mov
int
insb
fs
cmc
inc
add
cwtl
stc
pop
out
stc
cmp
inc
outsl
inc
add
lahf
push
sbb
cmc
xor
xchg
cli
push
add
sub
stos
fcompl
add
mov
movb
hlt
dec
mov
in
int
pusha
add
jno
pop
mov
mov
fucomp
cmc
pop
and
add
arpl
mov
imul
sbb
pop
fwait
aad
pop
pop
dec
outsl
lods
mov
fsubrp
sub
add
mov
mov
movb
outsl
pop
lods
add
push
sbbl
xchg
orl
enter
dec
rcll
lret
mov
shll
decl
xchg
pop
sbb
fwait
xor
lds
or
call
sub
inc
add
add
mov
fcompl
call
push
or
outsl
sbb
lret
add
add
in
enter
and
add
sbb
sbbl
xchg
lret
push
adc
je
mov
fildl
cmp
inc
add
or
inc
loope
ljmp
add
das
pop
arpl
jecxz
fwait
inc
scas
ds
addl
add
add
pop
xchg
adc
insl
mov
sub
inc
push
cmp
push
repz
lea
fwait
cmp
push
xchg
pushf
mov
or
adc
testb
in
and
xchg
sbb
scas
sub
jmp
xor
jecxz
rorb
std
xor
jp
xchg
and
fadds
mov
adc
roll
xor
data16
add
cmc
or
cmp
popf
cmc
mov
popf
cmp
popa
and
push
pop
mov
roll
cmp
aam
jge
std
mov
dec
dec
xchg
xchg
test
lahf
out
sub
xchg
imul
aaa
inc
add
and
mov
sbb
hlt
addb
mov
pushf
negl
pop
ret
mov
imul
adc
mov
pop
ret
cmpsb
movsb
lcall
push
movb
lods
and
mov
mov
fwait
jb
roll
add
jmp
aaa
fwait
jno
inc
cmpsl
ds
sub
int
scas
movsl
mov
mov
ljmp
frstor
icebp
lea
mov
aad
and
cmp
push
dec
enter
pop
and
fistpl
add
jns
sti
adc
addb
adc
sbb
add
test
add
lods
pop
int3
cmp
push
pop
popl
ret
adc
mov
mov
fidivl
cmp
ficoml
sahf
aaa
or
loope
xchg
dec
ficoms
cs
dec
fisttpl
sbb
xchg
popf
adc
jp
ds
add
jmp
lea
inc
rcrb
push
es
mov
les
fidivrs
lods
lcall
cltd
dec
cmp
dec
stc
cmpsb
lods
push
add
cld
jbe
cld
cltd
sbb
dec
and
popf
add
rcrl
xchg
rol
inc
add
sub
jecxz
lods
mov
sub
add
xchg
pushf
ljmp
cmp
push
cs
pop
outsl
popl
xor
mov
inc
add
pmaddwd
and
pop
mov
movb
cmpsl
mov
add
jl
push
dec
fisttpl
jo
mov
xchg
les
outsb
insb
mov
lea
stos
mov
fcoml
in
sub
dec
dec
rol
pushf
jl
mov
aad
jno
jl
pushf
pop
cwtl
or
pop
fwait
mov
pop
leave
mov
repz
rcll
dec
mov
cmpsl
lods
call
fdivrp
sub
pop
xor
popf
sarl
int3
cmp
outsl
fsubl
cmp
dec
and
bound
cmp
pop
push
dec
rolb
add
ljmp
jns
cli
push
ret
dec
clc
jno
xor
icebp
iret
cli
sbb
test
cmp
sub
sub
mov
jge
add
sub
pop
out
mov
rcr
cmpl
sub
adc
pop
xchg
cwtl
mov
cmp
cltd
or
mov
pop
shll
jae
dec
lock
push
sbb
and
out
add
sub
icebp
adc
inc
movb
das
fcmovbe
outsl
push
mov
sarb
clc
push
fprem
cmc
in
mov
push
adc
scas
add
dec
and
not
mov
xchg
aam
jecxz
sub
mov
orl
inc
add
lret
pop
cmp
or
sbb
and
pop
cmp
push
pop
rolb
loopne
mov
mov
push
enter
loope
in
adc
movsb
es
dec
je
adc
push
daa
cmp
insl
ret
jno
add
das
enter
add
sub
sti
or
add
pop
repnz
adc
add
jb
jb
pop
mov
and
sbb
xchg
lock
and
popa
test
mov
test
sbb
in
xor
lret
jno
aam
inc
addb
pop
movsl
imul
enter
pop
jp
cs
mov
and
cltd
lods
mov
dec
mov
mov
cwtl
sub
sub
cmpsl
mov
fs
cli
jns
iret
shrl
add
sub
mov
xchg
mov
inc
lret
clc
pop
cmp
dec
stc
sahf
and
push
leave
sub
arpl
imul
xlat
test
lcall
loop
pop
sub
and
xor
push
jns
aad
sbb
pop
sub
cmp
out
fld
xor
pop
mov
adc
jbe
jae
clc
jmp
xlat
pop
in
scas
test
mov
roll
cmp
sub
push
xor
xchg
fbstp
and
mov
call
and
sub
test
sub
mov
mov
xlat
iret
addr16
adc
int
jmp
ljmp
adc
add
add
aas
adc
into
stc
pop
mov
jl
inc
add
ret
int
adc
push
repnz
mov
add
add
push
adc
adc
jp
xchg
dec
pusha
add
fistpll
in
popf
pop
lret
add
pushf
mov
add
pop
test
nop
idivb
mov
in
xlat
addb
xor
inc
fisubrs
or
pop
mov
loop
js
inc
jne
jno
pop
xorps
add
jo
add
dec
sbb
sub
shll
orl
jl
cltd
bnd
cmp
out
lcall
jne
xchg
and
push
mov
add
int
negb
int
dec
add
jnp
or
xchg
mov
cmp
dec
jo
stos
loope
sub
rolb
hlt
ja
adc
leave
lahf
push
insb
outsb
repz
xlat
or
xor
push
outsb
mov
ret
push
jle
sub
pop
pop
movsl
adc
movzbl
add
push
add
mov
push
inc
jo
sub
mov
cmpsb
jnp
sti
fidivrl
bound
jnp
cmp
cmpsl
sbb
fldt
mov
mov
add
pop
or
jno
sub
add
xor
out
lret
sbb
icebp
lock
pop
mov
int
jmp
out
cltd
les
arpl
push
xor
add
outsb
outsl
cwtl
movsl
lods
hlt
push
sub
out
imul
test
mov
xor
xchg
imul
lret
push
add
mov
jecxz
cmp
lods
fs
xchg
in
test
addb
mov
leave
int
mov
fimull
cli
inc
mov
xor
in
ss
and
rcl
mov
mov
movb
fists
add
jl
lds
jmp
pop
pusha
add
adc
sbbl
sub
adc
out
addr16
or
add
xor
add
iret
jne
push
mov
int3
dec
jns
xor
fs
pop
sbb
pop
pop
xrelease
push
add
pop
or
pop
pop
popf
lock
push
sbbl
xor
jnp
and
arpl
in
add
imul
inc
add
push
jecxz
sbb
pop
adc
sbb
adc
addr16
push
loope
dec
cs
pop
xchg
in
add
outsl
mov
add
add
test
jne
negl
mov
js
cmp
imul
loopne
push
int
in
ljmp
dec
xlat
loop
test
pop
rclb
push
add
cmp
jecxz
out
outsl
shlb
leave
int3
stc
rorl
jbe
inc
add
mov
add
loopne,pn
lcall
or
sub
add
in
cmc
and
fs
outsl
sar
arpl
loop
mov
add
pop
mov
sbb
mov
add
adc
in
dec
popl
add
daa
shrl
pop
cmp
nop
in
add
push
mov
aam
add
mov
out
test
hlt
movsl
out
mov
and
bound
and
xchg
dec
fisttps
or
or
call
sti
jl
adc
xor
jp
jnp
and
repnz
insb
adc
xchg
shll
call
push
fisttps
push
mov
pop
inc
add
adc
jl
pop
pusha
add
out
add
inc
push
ds
adc
add
in
dec
fdivrs
cmp
dec
mov
jnp
shll
hlt
decb
and
add
lock
mov
divl
adc
es
dec
push
jmp
clc
negl
aam
popf
addb
adc
sti
push
int
cmp
nop
sub
rcrl
add
aas
sub
xor
add
jmp
or
jbe
mov
addr16
sarl
addl
mov
mov
sarl
cmpsb
in
aaa
cmpsl
mov
sub
cmpsl
lods
xchg
inc
aam
adc
push
pop
adc
lcall
xchg
or
sahf
das
mov
jle
sbb
add
jle
pushf
call
int
add
out
add
sbb
or
movsb
jne
mov
push
pop
dec
js
cmp
dec
fisttps
repz
and
shll
ds
and
neg
addb
addb
cltd
imul
pop
in
add
enter
cmp
adc
cmp
mov
out
jg
add
pop
cwtl
push
jmp
sub
jecxz
jne
and
lahf
nop
xchg
mov
xchg
push
push
inc
add
lahf
and
pop
sub
and
insl
les
add
cwtl
mov
ficoml
xor
sbb
arpl
xchg
movb
mov
add
jns
test
aam
add
mov
push
clc
mov
pop
mulb
jp
into
pop
push
in
xchg
mov
lods
pusha
add
sbb
out
gs
cmp
pop
lahf
jecxz
push
mov
adc
add
jl
pop
adc
dec
sbb
es
adc
fnstsw
jo
or
movsb
rolb
negb
jecxz
cmp
lea
pop
jg
loopne
cmp
fnstsw
add
das
mov
fidivl
xor
clc
mov
add
jmp
dec
pop
repz
cmp
inc
int
in
ljmp
cmp
sub
push
sarb
inc
add
dec
mov
test
mov
add
add
lods
shrl
sysenter
mov
or
lret
std
fcmovbe
fwait
jmp
testb
jnp
insb
aam
adc
loopne
jmp
inc
add
fxch
test
stc
add
mov
jmp
leave
out
stos
or
loopne
add
pushf
pop
mov
mov
jb
add
or
add
add
lock
les
jo
aaa
mov
add
dec
inc
fs
xor
pop
loope
adc
and
mov
adc
cmp
jmp
addb
xchg
xor
add
addr16
or
pop
adc
mov
hlt
cmpsl
sti
sbb
pop
cmp
inc
lds
fadd
add
mov
add
insl
fwait
out
rorb
int3
enter
pushf
out
inc
mov
sbb
cmpsb
fwait
xor
mov
cmp
dec
in
inc
add
sahf
out
dec
outsb
xor
enter
cmp
dec
mov
ds
maxps
sub
cmp
or
add
add
adc
les
sbb
je
js
orl
xchg
add
pop
pop
sbb
mov
adc
insb
js
aaa
cmp
adc
adc
stc
jmp
adc
pop
fdivr
jmp
xor
sub
popf
aaa
data16
subl
jg
icebp
or
ret
repnz
in
fidivs
inc
mov
nop
insb
pop
div
mov
push
adc
jo
cmpsb
pop
nop
sub
add
cmp
movsb
je
xchg
lds
mov
jg
loop
insl
hlt
push
out
mov
leave
mov
sub
mov
mov
outsl
int3
inc
ret
add
pop
icebp
int
and
insb
icebp
mov
pop
push
icebp
addb
push
sub
adc
dec
xchg
clc
jb
push
test
fwait
lods
xchg
lock
push
push
xchg
ret
adc
sarb
dec
out
mov
ret
enter
jo
xchg
inc
pop
imul
mov
lds
call
mov
cwtl
int3
sti
mov
lods
push
pop
int
lods
xorl
outsl
test
aad
mov
arpl
jmp
or
fimull
popf
fwait
push
inc
add
dec
sub
in
stos
outsl
jo
dec
movsl
iret
pop
xchg
xor
add
jno,pt
rcl
loopne
movsb
stos
xchg
mov
cmp
int
add
jp
mov
dec
cmp
out
inc
icebp
jb
add
add
daa
inc
pusha
add
jg
mov
add
movsl
cli
push
cli
jae
les
cmp
std
out
xchg
aad
cmp
roll
enter
aam
call
add
push
xchg
adc
and
xchg
mov
xchg
movb
pop
dec
fwait
orl
add
test
popa
inc
add
mov
add
pop
xor
clc
push
xchg
mov
inc
cmc
cmp
clc
mov
pop
mov
add
add
pop
adc
js
adc
add
arpl
sub
pop
xor
push
and
sub
mov
jbe
cmp
and
mov
add
scas
imull
sti
mov
pop
xchg
in
aaa
insb
mov
pop
pop
movlps
loop
fists
popf
add
xchg
or
and
dec
pop
ret
pop
notl
jecxz
mov
push
jno
mov
push
add
daa
xlat
dec
gs
aaa
cmpsl
clc
or
mov
pop
push
add
lret
add
sti
inc
jnp
test
hlt
mov
fbld
xor
xchg
add
inc
or
fsubp
test
sarl
loopnew
add
notl
das
les
xchg
cs
in
adc
dec
mov
pop
mov
inc
add
xor
push
mov
adc
enter
xchg
out
ja
roll
divl
mov
arpl
cmp
add
sarb
adc
inc
insl
call
out
ds
jp
lahf
icebp
mov
push
cmpsl
mov
stos
les
sbb
cli
insl
dec
jns
xchg
movsb
movb
mov
xchg
pop
in
dec
sub
mov
fs
outsb
mov
sbb
test
insb
mov
push
and
jae
xlat
loopne
fsub
stos
leave
mov
das
adc
dec
pop
dec
dec
xor
icebp
dec
sub
cmp
bnd
lahf
aam
das
cwtl
aas
sarl
sub
pop
add
ss
xorps
add
push
lock
mov
aam
sbb
scas
mov
add
mov
fldenv
sub
shll
loop
push
jecxz
sbb
cmp
insb
cmpsl
xor
std
mov
add
movb
or
pushf
dec
inc
fstpl
outsb
or
aad
movb
lcall
lds
inc
outsb
lcall
test
or
inc
dec
xor
movb
add
add
insb
pop
inc
add
daa
cmovo
xchg
push
in
sbb
add
in
xlat
fldt
loopne
or
test
add
add
sti
mov
pop
cmpsb
out
mov
adc
fildll
sub
std
pop
push
push
pop
sarl
iret
lret
addb
loopne
inc
incb
add
mov
icebp
ret
push
jne
scas
sub
inc
sbb
bound
icebp
imul
orps
xor
xor
or
add
stc
ja
loop
cmp
push
shlb
add
push
push
jp
add
lods
jne
fwait
jno
inc
add
sub
mov
inc
dec
xchg
inc
add
aad
cmp
xchg
pop
add
adc
pusha
add
enter
dec
mov
sti
xor
addb
in
pop
xor
add
in
lds
fidivs
daa
mov
rcl
out
jmp
ds
push
push
add
jne
rclb
aas
sbb
and
inc
add
push
je
inc
mov
rclb
ficoml
add
mov
insl
ficoml
in
iret
int3
testl
add
mov
fistl
aaa
mov
mov
sbb
mov
fimuls
mov
imulb
arpl
jae
les
scas
pop
mov
add
push
leave
cwtl
stos
dec
pop
addb
lods
sarb
lds
jmp
test
incb
cmp
pop
mov
std
or
adc
out
xchg
sub
add
xchg
ljmp
test
jns
sub
mov
add
sti
sub
sbb
pop
popa
mov
enter
das
push
addr16
in
add
add
mov
retw
xor
inc
push
xor
or
cmp
xor
jne
add
mov
and
repnz
shll
cli
dec
mov
mov
add
loop
inc
add
add
adc
mov
mov
push
test
add
adc
and
jl
rcll
add
mov
pop
ljmp
fiaddl
popf
xchg
roll
mov
pop
pop
lods
lahf
or
cmp
repz
mov
aam
loopne
push
std
or
add
rolb
cmp
stc
data16
arpl
mov
xorl
jmp
mov
jecxz
jns
flds
or
and
pop
fistl
cmp
stos
loopne
dec
out
cmp
and
mov
in
adc
loop
add
xchg
mov
add
sub
insb
mov
xlat
xchg
insl
in
movsl
rolb
or
add
es
mov
add
enter
add
pop
mov
std
ljmp
sub
mov
xchg
scas
push
ss
and
adc
pop
addb
dec
scas
xor
xchg
gs
sbb
mov
cs
into
mov
xchg
push
jg
jmp
inc
mov
pop
cmpsb
fisttpll
out
mov
leave
jbe
inc
inc
stos
nop
inc
iret
xor
mov
repnz
movb
cmp
add
push
sub
iret
insl
das
sahf
sbb
aas
scas
mov
or
xor
sub
cwtl
xor
fldl
imul
mov
cmpsl
pop
inc
adc
xor
jnp
in
adc
push
hlt
pop
xor
out
leave
out
adc
jge
add
movb
shr
loope
or
adc
mov
sbb
push
push
sbb
mov
add
mov
pop
addb
popa
daa
xor
add
pop
cmpsb
mov
xchg
popa
ljmp
popa
lret
adc
pop
push
sub
faddp
add
add
mov
addb
cwtl
mov
push
push
out
inc
add
add
in
dec
cs
lods
outsl
and
mov
jbe
fwait
add
cmp
sbb
hlt
lock
daa
out
mov
mov
in
and
orl
lahf
addr16
fidivrs
lods
shlb
lret
lahf
jae
xor
popa
inc
add
xchg
and
pop
test
push
xor
call
shl
cmp
fdivrs
rolb
testb
into
xchg
push
bound
sub
cmp
scas
testb
xor
dec
bound
jns
mov
adc
movsb
or
les
movsb
mov
mov
into
cmp
or
sub
add
xor
or
insb
push
das
cli
rolb
inc
add
dec
mov
pop
call
add
mov
mov
imul
sbb
ss
int3
lcall
movsl
imul
mov
dec
mov
inc
add
aam
ficoml
iret
popa
mov
pop
inc
mov
hlt
push
les
or
sub
jle
push
pushf
pushf
inc
push
add
pop
mov
push
or
cmp
inc
imul
imul
popa
add
mov
in
mov
sbb
outsb
cmp
mov
icebp
fldenv
inc
push
filds
cmpsb
pop
sbb
or
jno
divl
inc
xor
mov
pusha
add
push
aas
je
or
jo
xchg
cmpsl
mov
and
rolb
popf
movsl
mov
fadds
jns
popl
pushf
jge
cmpsb
or
add
sahf
leave
aaa
jnp
ret
adc
addb
dec
and
or
lcall
dec
add
mov
xchg
lods
int3
ljmp
mov
xor
add
dec
dec
sub
sbb
cmp
pop
pop
sti
fisttpll
mov
ret
mov
mov
add
data16
pop
xor
sbb
out
arpl
push
mov
mov
iret
jg
or
imul
mov
add
dec
into
shl
ficoms
in
pushf
mov
cmp
dec
js
aad
in
daa
pop
data16
arpl
sub
stos
ret
push
xchg
jle
push
add
cmp
pop
outsl
gs
inc
push
andl
sar
and
jno
push
sarw
repnz
in
ljmp
repnz
add
jbe
test
xchg
cmpsl
addb
or
sub
add
aam
sub
cmc
nop
mov
add
repz
and
mov
adc
mov
push
iret
rcrl
rclb
stos
pop
or
ss
and
push
out
outsb
inc
mov
frstor
dec
fs
inc
add
sti
fistps
adc
jmp
pop
push
js
add
ret
jno
sub
loope
jg
add
add
dec
cmp
int
fidivrs
loopne
test
jg
shlb
rcll
jl
jno
repnz
bnd
add
add
cli
test
fwait
out
icebp
repnz
jo
fdivrs
cmp
out
cmpsl
jmp
xor
add
add
inc
add
shrb
popf
aam
dec
mov
adc
insl
jmp
and
enter
add
sarl
lret
xor
lds
sub
cmpsl
jle
inc
sbb
mov
dec
push
adc
jae
push
cmpsb
xchg
cmp
pop
jnp
xlat
xor
inc
sub
loope
es
pop
cmp
inc
jl
add
mov
mov
outsl
clc
jecxz
mov
dec
xor
outsl
into
cli
loop
push
and
and
sbb
add
clc
sahf
inc
push
jne
add
mov
pop
cmp
aam
iret
jae
je
pop
adc
in
mov
xor
ret
je
pop
loop
add
xor
loopne
in
jns
add
jge
or
lods
lahf
cmp
subl
jmp
sbb
ret
gs
add
lret
ret
dec
test
inc
add
push
and
mov
jne
xor
bound
ljmp
mov
xor
push
rcl
stos
sub
aaa
daa
sub
popf
stos
push
jb
cmp
cmpsl
push
icebp
and
inc
add
add
sub
sbb
or
mov
bound
call
and
or
out
add
das
pushf
and
sbb
adc
add
insb
or
in
xor
sbb
lahf
dec
cmp
ss
push
rolb
and
xor
lea
bound
out
mov
push
ja
xchg
inc
pop
mov
sbbl
cmp
add
pop
ljmp
and
stos
pop
cmp
insb
popf
int3
mov
fnsave
aaa
shll
notl
mov
or
push
add
lds
fsubs
pushf
mov
repnz
xchg
lret
scas
int
and
add
outsb
mov
sarb
fs
add
add
enter
adc
and
movsb
inc
add
mov
int3
jnp
push
icebp
bound
and
repz
dec
push
into
lret
rcl
inc
xchg
inc
jp
andl
pop
inc
cwtl
arpl
add
fsincos
repnz
dec
pop
dec
add
jbe
mov
add
pushf
movsb
insl
cwtl
rcll
fdivs
jmp
enter
les
repnz
xchg
or
mov
call
aad
dec
std
pop
cwtl
inc
add
add
add
sub
addb
sbb
xor
add
xchg
add
mov
and
cmp
sarl
mov
nop
lret
repz
pushf
add
dec
push
jne
adc
add
mov
adc
mov
xchg
xchg
pop
jb
mov
xchg
clc
cmpsb
into
fldl
jo
add
pop
enter
cmp
adc
leave
sub
in
jle
xchg
sarl
into
imul
mov
sbb
add
and
repnz
insl
mov
sbb
pop
into
and
scas
shll
mov
mull
cwtl
lahf
or
jno
and
movsb
inc
add
fs
ja
mov
and
jno
je
add
or
fstl
jbe
pop
sbb
push
sub
sub
leave
fistpl
mov
sbb
enter
jo
cmp
xchg
mov
mov
xor
gs
sti
test
inc
or
sti
sub
push
inc
add
cmp
cmc
mov
cld
push
jecxz
pop
mov
xchg
sbb
add
add
jb
sub
jmp
pop
pop
xor
rorl
arpl
or
xor
pop
mov
call
jecxz
out
jp
add
add
sbb
xor
lea
sbb
push
test
ficompl
mov
mulb
dec
das
mov
insl
stc
mov
lock
add
out
cmp
jge
pusha
add
js
add
and
inc
mov
sub
mov
mov
cmp
add
movsb
lahf
cltd
xchg
push
jb
sub
in
mov
repz
in
push
cmp
cld
ljmp
fiadds
add
fcmovu
ljmp
push
xchg
lds
jle
or
imul
cli
mov
or
imul
out
mov
call
or
in
pop
sub
in
in
ds
ret
idivb
idivb
sti
push
or
mov
inc
add
xchg
lods
mov
notb
aas
or
cli
pop
into
pop
push
add
pop
nop
cli
sub
addb
cmp
arpl
sbb
jle
fmuls
out
stos
mov
addr16
cli
jle
pop
sbb
xor
push
pop
mov
mov
or
add
dec
ljmp
out
fldcw
xor
xor
sub
add
dec
sub
add
fsubl
dec
mov
lods
rolb
inc
add
nop
ss
out
lret
cmp
jmp
xor
pmullw
add
and
out
mov
cmova
jbe
inc
sbb
mov
jp
rcll
in
mov
fldl
aad
adc
adc
popf
cmpsl
aam
sahf
mov
mov
popa
mov
and
jge
cld
aas
sub
popa
xor
add
aaa
test
gs
in
dec
daa
jns
dec
mov
add
push
or
out
push
mov
mov
jmp
dec
add
jecxz
out
add
jmp
ds
movsl
ss
cmp
leave
pop
movsb
pop
fwait
or
or
pop
addb
daa
dec
in
scas
mov
loop
fsubrs
or
mov
mov
cmp
mov
je
insb
sarb
hlt
push
lods
add
mov
jl
lods
subl
jl
inc
add
mov
sbb
pushf
setle
data16
call
mov
mov
add
movsl
mov
push
dec
push
imul
test
cltd
sub
loopne
push
rolb
add
test
lods
aaa
test
lods
xor
add
bound
rcl
hlt
adc
add
jge
lods
aas
and
in
negb
lods
cwtl
inc
lret
fstps
jns
pop
mov
cs
fdivr
pop
enter
xor
notb
add
jmp
fstp
mov
add
cmp
jl
repz
fidivl
inc
mov
mov
push
gs
daa
sarl
out
xor
outsb
jl
out
sbb
iret
out
cmpsb
dec
pop
sub
pop
mov
add
outsl
lret
dec
sub
rolb
out
push
mov
add
sti
scas
or
mov
popf
mov
repnz
sub
add
inc
mov
or
addl
fildl
add
adc
mov
inc
ljmp
add
ret
push
push
shlb
bound
hlt
jb
out
mov
sub
cwtl
or
jecxz
fimuls
daa
sahf
mov
add
sti
or
addb
push
add
and
xchg
sbb
add
inc
shrl
ficomps
mov
push
daa
outsl
andl
fmull
jb
add
cmp
imul
xchg
mov
fsubs
push
shlb
add
dec
lods
lds
pop
sbb
inc
add
pop
sub
fcompl
out
push
push
in
out
push
add
rolb
jmp
shrb
sub
dec
jne
addr16
adc
xchg
shll
lods
loop
push
jo
das
leave
loopne
pop
inc
add
jmp
iret
jns
test
paddsb
addb
rcrb
icebp
mov
mov
lcall
jb
or
mov
imul
xor
pop
mov
mov
stc
imul
stos
je
aam
add
sahf
scas
add
push
popf
xor
popf
and
push
lahf
shlb
mov
push
loop
call
testl
lret
push
add
into
imulb
and
int3
inc
add
outsl
push
addb
pop
dec
jp
and
push
in
in
push
enter
fimuls
fmuls
lods
cmp
and
and
test
jg
lods
dec
pop
out
jno
in
cmp
je
add
sbb
dec
xor
insl
cmp
pop
xor
test
outsb
adcl
add
jg
fsincos
pop
add
dec
mov
rolb
not
ljmp
pop
rorb
mov
aaa
pop
jnp
xchg
lcall
add
pop
mov
ret
or
out
std
cvttps2pi
jns
sub
lea
int
add
lock
sbb
into
addl
outsb
mov
aad
lods
aas
imul
movsb
xchg
ljmp
dec
enter
adc
repz
cmpsb
rcpps
pop
test
lret
add
xor
jnp
sub
aam
add
lods
test
in
fsubl
add
add
loop
es
add
push
mov
sbb
mov
aaa
mov
stc
cli
fists
sub
lret
outsl
push
push
xchg
fcomi
push
aaa
inc
mov
sbb
push
pushf
inc
test
mov
fists
call
inc
or
jns
iret
ss
mov
jnp
mov
mov
pop
mov
cmp
jg
or
outsl
cmpsb
mov
lea
mov
mov
and
and
leave
in
call
cmc
lcall
xchg
xor
add
sub
ljmp
push
aaa
jg
out
test
loop
insb
inc
gs
addb
add
mov
mov
into
lods
je
ret
ja
stos
mov
xchg
daa
pop
aad
lret
push
add
xchg
mov
mov
or
pop
int
and
jb
bound
jl
push
sub
ret
aas
test
popa
pop
sub
add
jl
mov
jno
lods
in
out
mov
and
rorl
pop
inc
mov
inc
add
mov
and
jo
pop
sub
cmc
js
mov
outsl
shl
cmpsl
ret
jo
paddw
push
add
xchg
mov
mov
je
mov
add
sbb
cmp
fisttpl
test
scas
les
xor
add
mov
lret
arpl
mov
jno
outsb
push
and
fidivs
scas
mov
cltd
pop
xchg
mov
aaa
loope
pop
adc
loop
pop
and
sbb
test
dec
mov
and
out
repz
sbb
shl
clc
add
mov
mov
ja
xchg
push
rclb
ja
clc
je
mov
add
ss
and
jg
scas
hlt
in
and
shll
pushf
xchg
ret
negl
mov
mov
movsb
hlt
cmp
or
mov
and
add
xor
fbstp
in
cmp
jb
aam
mov
outsb
mov
lods
or
scas
jg
cli
inc
pushf
sti
mov
aaa
push
adc
loopne
push
clc
scas
sub
jbe
jp
pushf
es
mov
xchg
mov
movb
jne
and
popl
stos
jge
fcom
in
mov
xor
mov
lahf
dec
repz
cltd
dec
add
repz
push
dec
adc
add
mov
mov
sbb
aad
cltd
shrl
jmp
push
incl
popa
mov
jecxz
lret
push
lods
push
xor
push
mov
push
sbb
jge,pt
loope
add
jno
lds
mov
js
dec
scas
push
daa
call
call
mov
add
iret
dec
test
test
inc
add
mov
iret
call
insl
xor
addr16
pop
cmp
cld
adc
clc
push
and
mov
mov
add
stos
push
add
lods
sub
pusha
add
and
test
push
jbe
pop
out
sub
nop
je
push
inc
add
fld
add
jae
jl
mov
or
cmp
cmp
add
int
in
jae
jne
in
int
les
xor
in
mov
loopne
mov
mov
lcall
cmp
lods
push
aam
cvtdq2ps
fsts
arpl
xlat
call
xchg
rolb
adcl
inc
add
dec
push
mov
in
int3
pop
loop
mov
sub
or
lock
add
add
cmp
cmp
mov
jns
add
lock
lahf
push
add
in
out
or
daa
or
and
push
cmp
jle
add
mov
es
les
orl
fiaddl
add
arpl
push
push
stos
jmp
and
fstl
repnz
in
aam
loope
jae
inc
add
dec
lock
jne
sahf
enter
jno
jl
mov
insl
mov
dec
push
push
pushf
inc
inc
add
addb
into
cmp
test
mov
xor
inc
mov
test
inc
push
push
adc
fdivl
sbb
push
mov
test
int3
pop
cmp
pop
les
cmp
and
adc
jl
pop
nop
mov
lcall
pop
add
leave
fcompl
push
jno
shll
push
push
into
outsl
rorl
pop
or
in
add
pop
inc
add
jg
and
add
in
push
cltd
fdivrs
les
aad
insb
mov
add
outsl
in
jnp
and
xor
sub
pop
out
les
sbb
mov
mov
arpl
psubsw
sub
add
add
cmc
pop
inc
mov
in
je
push
jbe
in
mov
repnz
mov
cmp
push
scas
sub
jg
xor
sarl
lret
mov
mov
xor
sbb
mov
sub
add
std
sub
push
jnp
add
inc
add
lcall
inc
dec
mov
push
call
rclb
fmull
dec
inc
and
clc
push
clc
add
mov
loope
cmpsb
cltd
lahf
icebp
mov
sbb
lea
fisttps
data16
push
push
xchg
bound
add
lret
scas
jge
xchg
cmp
das
daa
out
mov
movb
adc
add
leave
decl
insb
out
or
jbe
mov
nop
popf
sub
repz
xlat
inc
pop
push
jecxz
pop
pusha
add
add
fldl
xor
cmp
sub
out
sub
divb
inc
sarl
stos
mov
in
bound
imul
ss
add
out
mov
jno
xchg
adc
pop
add
xor
xchg
cmpsb
in
sub
push
adc
aaa
sbb
push
cli
adc
jne
std
pop
inc
add
xchg
clc
repz
add
daa
cwtl
and
jmp
imul
jecxz
mov
add
movsl
movb
sub
cmp
cmp
sahf
ret
sub
mov
mov
pop
sbb
add
iret
out
mov
bts
mov
js
cs
cmp
inc
adc
mov
popf
ljmp
mov
mov
mov
ret
mov
nop
inc
adc
leave
and
outsb
mov
sbb
mov
ret
mov
push
sub
add
mov
out
stc
leave
push
mov
stos
into
lods
std
rolb
adc
or
stc
cmpsb
scas
mov
add
movsb
mov
call
fucomip
pop
and
mov
mov
add
mov
negl
add
insb
popf
out
xor
add
or
add
popa
xchg
pop
jno
ret
cmpsb
jb
aaa
sbb
iret
loop
add
push
loope
xor
repnz
sbb
fcmovbe
xor
arpl
add
fstps
sarb
ret
or
fidivs
cmp
push
sbb
xchg
mov
shlb
imul
enter
loope
or
je
jg
xor
lock
js
xchg
mov
mov
das
adc
test
lds
mov
add
into
sub
aaa
mov
mov
add
cwtl
enter
cwtl
and
mov
xor
pop
xchg
xchg
sub
add
lock
add
jne
xchg
mov
lea
cltd
fistl
cli
adc
push
dec
and
and
xchg
mov
mov
cmp
dec
test
or
mov
xlat
jnp
inc
add
andl
sub
frstor
xlat
jge
ljmp
inc
sbb
xchg
jb
add
fdivs
push
xor
sarl
outsl
cmp
popa
movb
adc
or
and
ja
add
outsl
push
inc
add
cli
pop
in
mov
stc
outsb
scas
mov
sub
push
or
out
repz
add
mov
popf
jno
add
mov
es
add
jns
mov
enter
cmp
adc
dec
and
inc
adc
xor
inc
add
stos
inc
add
sbb
xchg
mov
popf
addb
mov
movsb
pop
xor
dec
je
push
inc
add
xchg
push
add
pushl
jl
loope
test
rolb
push
stos
mov
sbb
push
cltd
loope
sahf
leave
jle
mov
loope
scas
xchg
xor
ret
jne
mov
fwait
js
or
xchg
aas
add
pop
out
ljmp
lods
cmp
sbb
outsl
add
pop
in
leave
push
out
out
lret
aaa
xor
xor
xchg
hlt
xchg
cmp
cmp
xlat
sbb
dec
daa
mov
mov
dec
pop
out
dec
cmp
hlt
lods
mov
add
repnz
mov
dec
or
add
cltd
in
cltd
mov
mov
scas
fildll
mov
addb
sahf
jmp
fisubl
je
add
add
enter
lret
into
imul
subl
insb
xchg
mov
popa
repz
imul
outsb
pop
out
in
add
lcall
out
mov
dec
jecxz
hlt
cmpsb
and
int3
mov
add
mov
dec
stc
or
push
cmp
xlat
push
add
sbb
xchg
test
bound
fs
mov
out
rorb
gs
add
stos
jb
in
dec
mov
mov
pop
xor
les
ljmp
mov
jnp
sbb
mov
stos
rolb
scas
pop
sub
add
jmp
aam
inc
add
add
sub
movsl
cmp
shlb
aas
jns
sub
push
push
in
cmp
dec
fwait
mov
add
and
push
xor
xor
mov
je
and
push
mov
fnstenv
lcall
push
mov
movsb
sbb
shll
daa
dec
and
iret
sbb
sbb
jg
popa
add
sbb
data16
cmp
add
add
inc
add
and
les
rcll
add
pusha
add
push
rol
into
jne
and
cmpsl
or
loop
inc
add
xor
xchg
mov
hlt
mov
dec
add
sbb
and
add
jo
daa
roll
fdivs
das
xchg
fnsetpm(287
mov
les
add
add
fs
rorb
push
adc
mov
sti
inc
stc
dec
leave
push
lea
xchg
rcrb
lods
mov
testb
mov
inc
add
or
test
mov
enter
ss
imul
add
lea
push
out
insl
dec
jecxz
call
lcall
mov
enter
pop
int
jns
jns
cmpsl
adc
in
inc
pop
test
lods
ljmp
add
ret
jecxz
push
mov
dec
imul
in
pop
push
dec
inc
dec
jle
fiadds
aam
or
or
add
add
xchg
cmpsb
xchg
popa
mov
pop
adc
and
jmp
mov
add
dec
jae
repz
int3
jno
ja
ret
js
add
add
popa
or
ljmp
add
pop
int
aaa
ds
add
mov
test
test
lock
xor
add
pop
or
push
pusha
add
mov
inc
add
push
test
iret
xor
or
fidivl
inc
popw
pop
lods
sub
add
add
add
ljmp
add
fistl
xor
dec
icebp
xchg
leave
iret
hlt
mov
stos
mov
xor
test
and
or
push
mov
jg
out
inc
add
add
jg
js
xchg
out
hlt
fsubp
fnsave
add
subl
mov
pusha
add
pop
in
jp
dec
test
out
xor
loope
or
enter
add
leave
movsb
fcmovbe
pop
or
add
mov
movlhps
imul
sti
xchg
pop
nop
int3
test
jbe
loopne
jecxz
push
imul
adc
pusha
add
mov
cli
outsl
ficomps
lods
bound
scas
sahf
lcall
popa
rolb
aas
out
add
mov
mov
jne
movsl
cmp
jae
fadd
add
add
mov
add
fs
ds
mov
sbb
xchg
leave
shlb
xchg
out
jg
popf
push
add
xchg
jbe
sbb
lds
add
fildl
fmull
movsb
sarb
outsl
inc
in
pop
je
add
jo
jno
sbb
push
sub
mov
or
mov
mov
lds
inc
add
pushf
insl
xor
adc
add
std
sub
scas
popf
cld
cmp
mov
cltd
movsl
addb
xchg
scas
mov
sahf
mov
add
mov
push
add
add
adc
pop
mov
xor
mov
push
test
add
std
scas
cld
cltd
outsl
rolb
sub
add
faddl
pop
inc
mov
jne
ja
cmpsl
in
int
nop
pop
mov
lock
pop
inc
add
sbb
pop
or
and
rcrl
sarl
mov
insb
mov
inc
add
mov
hlt
mov
adc
jno
divl
addb
or
sahf
in
in
outsl
push
add
lock
sti
idivb
or
iret
dec
enter
sahf
sarl
cmp
xor
mov
mov
push
push
cmp
mov
xchg
in
and
jmp
and
add
aas
ret
ljmp
add
sub
loope
inc
rcll
mov
lea
add
adc
cmc
sub
pop
mov
addb
mov
and
pop
outsl
es
int
rcrl
add
and
adc
aas
std
cmp
jg
pop
jmp
lcall
add
sbb
cmp
add
cs
lcall
pop
cld
mov
les
jp
int
nop
popa
insb
add
andl
mov
or
inc
add
pop
mov
pop
xchg
sub
sbb
cmp
jbe
in
adc
pop
add
mov
lods
je
das
dec
fs
cld
mov
pop
test
add
dec
stc
inc
sahf
test
fwait
mov
pop
fcomps
add
xor
mov
push
mov
pop
rorl
and
in
add
add
jno
or
call
mov
inc
add
cs
loopne
test
rorb
mov
fdivl
int3
ror
fmuls
jle
push
dec
mov
inc
add
cmp
fcmovbe
xor
into
mov
inc
push
lret
jae
add
rcrl
dec
or
cltd
inc
or
cmpsb
mov
dec
pop
addr16
inc
fprem
out
enter
pop
or
mov
pop
mov
fsts
movsb
jmp
mov
jne,pt
add
pop
add
rcl
in
adc
jg
movb
add
lret
ja
add
sbb
adc
test
or
xchg
int3
jecxz
loop
add
or
jnp
push
pop
bound
clc
jge
pop
loopne
inc
add
push
cli
inc
scas
fwait
pop
add
inc
add
jno
xchg
fists
push
xor
inc
xchg
mov
jmp
call
pop
jge
push
add
pop
adc
add
popa
inc
xor
insb
iret
iret
sbb
icebp
cmp
add
daa
lods
repz
test
mov
or
inc
mov
scas
adc
scas
dec
xchg
lods
cmp
adc
fnstsw
rcrb
mov
push
adc
add
pusha
add
in
sub
mov
aas
jl
add
lret
lock
mov
fsub
outsl
aad
xchg
sub
cmpsb
or
and
and
sbb
xchg
pop
xor
sbb
jno
daa
cli
mov
pop
shll
std
orl
mov
mov
sub
mov
insb
andl
cli
xor
pop
jae
pop
pushf
dec
repnz
jp
pop
push
mov
add
mov
mov
add
xor
mov
icebp
outsb
aas
stos
repz
or
sbb
lret
mov
mov
push
inc
pop
or
nop
mov
add
push
pusha
add
mov
pop
sub
fiaddl
mov
into
into
jae
gs
out
add
dec
stos
pop
cwtl
shll
add
add
test
int3
repz
fnstenv
push
mov
movb
or
add
add
or
add
push
xor
out
aam
add
roll
pop
adc
add
fnstsw
xchg
fiadds
mov
xchg
sbb
pop
xor
pop
shl
pop
add
call
lcall
out
xchg
xchg
push
push
mov
push
movb
je
jnp
bound
adc
aam
dec
sub
add
ret
pusha
add
mov
or
mov
add
loope
xchg
push
xchg
fistpl
xor
ja
insl
add
nop
adc
cmp
cmpsl
ja
pop
jae
mov
add
xchg
push
pop
inc
add
iret
jmp
das
ret
dec
lahf
fdivrl
cmp
lret
sti
rcr
mov
fwait
out
loop
mov
cmc
stos
xchg
cld
aam
cmpsb
stos
inc
lea
cmpsl
xchg
pop
je
jmp
and
jbe
add
or
mov
add
or
in
fiaddl
aas
rolb
lds
push
add
scas
daa
hlt
daa
xlat
lret
idivl
sbb
rcrl
mov
rcrl
mov
js
add
or
pop
push
add
mov
and
inc
add
add
nop
addb
add
stos
popf
out
leave
out
js
fnsave
imulb
sbb
fistpll
mov
push
add
mov
jne
fs
repnz
xchg
pop
cmpsb
jp
jno
mov
int3
mov
icebp
push
dec
inc
add
inc
cmpsl
xchg
leave
push
jns
pushf
aam
xchg
jo
cmp
outsb
mov
scas
xchg
loopne
mov
aam
xor
cmpsb
bound
sbb
sbb
outsl
jo
xrelease
and
sarl
sub
mov
in
cmp
mov
add
sbb
aas
out
je
into
xchg
pop
test
lret
out
add
ja
add
adc
andl
add
and
jge
bound
movb
cmp
jbe
mov
adcl
jno
out
or
cmp
pusha
add
adc
or
stc
dec
in
inc
xlat
sbb
add
movd
ljmp
pop
hlt
pop
adc
mov
or
gs
lods
out
cmpl
cld
add
push
aaa
mov
sub
fucomip
add
push
lcall
movb
mov
adc
add
testb
dec
jb
xor
and
call
int
jno
repz
jl
inc
add
out
in
xor
cmp
out
rolb
sbb
add
js
addr16
inc
add
mov
ret
test
mov
push
fwait
jns
pop
pop
stc
jne
fisttps
pop
ljmp
cmp
cmp
mov
fldenv
cmp
fimull
push
test
loope
stos
ljmp
xor
jge
rorl
dec
movsb
jnp
rcr
xchg
movsl
insl
mov
xor
push
hlt
ret
jmp
jne
mov
jnp
push
enter
sqrtps
jg
pop
fdivrs
lret
inc
add
and
scas
roll
and
loope
addr16
or
aam
lods
add
loopne
cltd
jmp
push
fwait
push
inc
and
ret
sbb
lods
jp
inc
or
jo
mov
fsubs
jno
pop
enter
add
jmp
xor
add
ljmp
sub
add
stos
sub
add
cmp
sub
mov
xor
xchg
sti
cltd
and
cmp
jmp
lret
std
data16
push
push
and
cmc
bound
iret
xadd
aad
icebp
call
mov
js
push
jge
sub
mov
je
inc
lahf
push
add
add
add
and
clc
roll
popf
test
mov
sahf
es
test
jg
jns
pusha
add
jne
fld
xchg
adc
xlat
push
pop
js
cltd
inc
add
fnsave
test
popa
aad
test
imul
lds
lods
jp
mov
pop
inc
popl
mov
in
add
add
xchg
test
add
das
insl
dec
int3
int3
insb
insb
sbb
mov
sbb
mov
into
popf
ds
jecxz
mov
and
add
sub
jmp
lret
xchg
push
ja
xorl
cmp
ljmp
inc
dec
andl
mov
lret
xchg
jl
mov
je
rcrb
add
push
test
loope
imul
nop
sub
mov
fdivl
in
aam
jmp
cmp
and
fwait
or
xlat
mov
jle
xchg
cmp
adc
pop
mov
dec
xor
enter
adc
lcall
bound
adc
rolb
add
jle
push
dec
std
xor
sbb
push
pop
popf
adc
add
mov
pop
mov
jl
je
mov
les
out
xor
les
xor
mov
out
es
cmpsl
sub
rolb
xor
add
jp
pop
mov
gs
aad
push
lds
mov
push
repnz
add
add
push
ficoml
call
add
adc
mov
inc
add
dec
jg
inc
sbb
xor
add
pusha
add
inc
dec
dec
pop
cmpsb
cmp
add
jge
dec
jbe
imul
mov
mov
ret
pushf
mov
inc
add
pop
jecxz
pop
hlt
aam
movsl
shlb
lods
inc
fnsave
out
mov
xchg
jae
bound
pop
rorb
push
mov
jo
les
sub
fdivs
xchg
or
xchg
pop
add
sbb
call
pop
lret
jb
and
add
inc
add
in
add
push
int3
out
mov
std
imul
or
icebp
divb
mov
je
pop
insl
fsub
in
jns
sub
pop
adc
push
jg
nop
add
dec
mov
fidivrs
sub
xchg
dec
aas
pop
movsl
jecxz
pop
cmp
push
xlat
jb
pop
repnz
xlat
xor
mov
insb
in
stc
outsl
stos
outsl
adc
add
add
push
sbb
lods
push
movb
int
jle
aad
xor
xchg
sarb
and
out
pop
lahf
and
add
mov
jae
mov
pushl
jne
out
and
sbb
pop
nop
adc
pop
push
dec
xchg
jo
gs
gs
movsl
jne
add
inc
lret
pushaw
add
mov
and
and
mov
pusha
add
enter
mov
mov
lock
jl
cmpsb
xchg
adc
lods
cli
mov
mov
or
shl
pop
jmp
lea
add
ja
xor
adc
nop
sub
mov
rclb
popa
xor
jl
call
fsubrl
jl
scas
sbb
lods
std
lods
xchg
test
adcl
or
scas
jno
jb
bound
push
mov
ror
mov
stc
and
out
mov
jl
xchg
cmp
test
mov
mov
xchg
test
dec
mov
cmp
push
call
jmp
xchg
mov
adc
sub
mov
in
aam
imul
dec
cmp
stos
cmpsb
in
in
mov
cmpl
xchg
imul
std
test
adc
inc
add
jmp
lret
ret
addb
jae
dec
inc
add
lea
mov
movsl
imul
add
mov
push
dec
fdivl
xor
mov
jne
add
add
add
adc
add
xor
add
jns
repz
adc
nop
enter
bound
iret
icebp
jns
jnp
add
rcl
push
mov
xor
mov
add
ficompl
movb
mov
adc
cmc
sub
add
or
mov
insb
addb
pop
les
cmp
jbe
lods
or
mov
jbe
add
loop
imulb
jmp
pop
fldt
dec
push
sarl
sbb
into
xor
pop
jnp
sbb
jno
or
mov
shll
adc
rcl
or
movsb
add
xchg
adc
ret
xchg
and
lods
hlt
push
imulb
pop
inc
rolb
scas
pop
push
lahf
dec
or
fwait
pop
decb
mov
outsb
negl
cmpsl
roll
adc
xor
mov
idivl
mov
adc
cmp
sub
lods
addr16
push
fs
push
inc
add
add
pop
in
out
add
cmpsb
movb
mov
push
and
repz
lods
xchg
xor
jnp
imul
out
fistps
jae
jbe
mov
imul
mov
sub
xchg
mov
or
add
ds
add
pushf
int
push
dec
scas
cmp
das
cmp
shll
sub
loop
mov
in
sub
mov
inc
mov
std
adc
add
leave
test
gs
addb
in
idivl
add
jmp
aam
inc
add
xchg
push
loop
pushf
dec
out
or
mov
push
loop
push
lds
fs
sub
inc
sarl
cmp
cwtl
fnstsw
addb
xor
push
add
add
shrl
clc
pop
imul
cltd
out
push
mov
mov
xchg
adc
pop
push
das
in
sbb
mov
add
xor
add
popf
ds
adc
daa
fldt
jp
loop
aaa
leave
add
or
add
or
xor
xchg
push
add
test
ret
push
dec
jbe
inc
fdiv
mov
out
and
rcrb
pop
jae
loope
ds
mov
fs
jmp
nop
sub
cli
in
cmpl
mov
lret
jnp
outsl
and
dec
je
cmp
adc
inc
add
scas
addb
imul
fucomi
lds
icebp
movsl
jg
jmp
jne
add
addr16
aaa
rolb
pusha
add
add
jns
inc
add
sub
dec
and
jp
pop
inc
add
add
int3
loop
add
push
addr16
pop
cli
dec
pop
aas
sarb
out
ret
jle
pop
dec
xor
lods
dec
fnstenv
push
in
pop
fisubrs
or
mov
jb
and
adc
stc
pop
fnstenv
push
jne
scas
or
inc
add
mov
int3
inc
add
pushf
inc
add
test
out
scas
movsl
movsb
lahf
sbb
inc
add
mov
push
mov
jno
adc
loop
scas
push
lock
rorb
or
test
jge
add
xchg
mov
mov
adc
add
jecxz
arpl
cmp
int
cmp
test
loop
fucomp
xor
shlb
je
push
xchg
hlt
adc
cld
mov
add
jl
inc
add
cmp
sub
shl
mov
sub
add
jecxz
pop
xchg
mov
arpl
stos
scas
xchg
test
mov
add
push
mov
ljmp
outsb
mov
mov
jbe
out
mov
addr16
lret
das
addl
test
into
shll
mov
int3
mov
push
fidivl
adc
sub
adc
add
jne
into
cli
arpl
adc
or
dec
and
into
stos
xor
and
adc
stc
mov
sub
push
lea
and
mov
or
xchg
imul
repz
enter
bound
mov
iret
ficompl
inc
add
mov
push
rcll
jle
iret
fimull
jecxz
cmp
add
adc
aad
scas
push
fwait
mov
push
add
add
pop
mov
stos
xlat
mov
mov
cmpsb
cmp
shlb
xor
lcall
push
or
add
and
xchg
adc
cmp
xor
mov
pop
dec
pop
enter
movl
sub
add
pop
fsubrp
repnz
shll
add
and
loopne
push
pop
xchg
in
sbb
fsub
sbb
fildl
fcomip
stos
jmp
add
sbb
sub
incw
add
addb
ror
in
mov
add
and
cli
sarb
and
mov
inc
add
jmp
sbb
add
stos
mov
dec
push
sbb
add
push
popa
jbe
pop
clc
and
lea
xchg
loopne
cld
outsl
sahf
jnp
dec
in
mov
jae
pop
jae
add
sub
out
sub
dec
push
push
or
ret
add
pushf
add
arpl
xchg
enter
add
icebp
hlt
push
jmp
add
pop
shll
in
mov
hlt
push
pop
dec
dec
xchg
outsb
aas
cld
rorl
push
sti
xor
add
mov
iret
mov
add
movb
adc
test
add
pop
cmpl
mov
scas
scas
aam
lret
mov
bound
test
sahf
add
dec
inc
mov
shrb
add
sub
mov
adc
ror
pusha
add
add
xor
jno
scas
xchg
pop
loopne
pop
stos
dec
pop
bound
stos
sahf
ss
loop
push
add
sub
xchg
loop
sbb
or
in
movsb
call
adc
jg
pop
mov
mov
add
ror
cmc
lcall
inc
add
test
jno
pushf
mov
enter
add
add
mov
jo
add
imul
push
add
add
jg
jge
in
out
fldt
xchg
push
inc
add
or
push
or
in
pop
out
leave
out
daa
rcl
mov
sub
add
add
xchg
push
push
movsb
and
into
inc
add
lods
sub
jns
bound
int
aad
out
imul
sbb
das
push
and
ds
xor
add
push
jp
aaa
dec
mov
fistl
mov
xor
test
add
fneni(8087
sbb
testl
pop
dec
inc
add
test
dec
xorl
les
adc
shlb
add
pop
addb
adc
xchg
aam
pop
mov
add
mov
cmp
pop
in
js
iret
gs
ljmp
bound
clc
pop
lock
add
mov
aas
lock
popa
xchg
shrb
jecxz
popf
jb
xor
mov
repnz
add
data16
ficomps
and
cltd
outsl
mov
leave
std
aaa
push
or
push
dec
jno
sub
push
outsl
cmp
or
sub
decl
aam
arpl
pop
lock
cmp
add
js
jmp
xchg
rcrl
inc
xchg
fistl
repz
adc
mov
divb
cltd
dec
mov
sbb
mov
and
fdiv
pop
adc
mov
jo
idivl
in
daa
or
insl
inc
add
dec
lret
add
xchg
push
mov
mov
push
mov
aam
repnz
sub
out
sbb
mov
cmp
adc
cli
fisubl
add
lock
lret
arpl
icebp
inc
xchg
movsl
mov
jns
add
lods
adc
bnd
dec
inc
cmp
or
dec
sub
dec
pop
mov
xchg
add
add
sbb
sbb
iret
sbb
mov
fs
addb
xchg
jle
jae
out
mov
xor
ds
mov
sub
jno
subl
movb
rcr
mov
cmc
jge
aaa
mov
addr16
pop
cmc
addl
jne
ret
sbb
jecxz
out
rorl
stc
cld
js
add
mov
mov
cmc
icebp
test
jnp
xchg
mov
insb
push
imul
xchg
dec
xor
dec
stc
xor
cmp
out
fsub
aaa
add
gs
rorl
sbb
push
cs
idivl
fisubs
add
sub
test
or
jle
add
addr16
pop
push
repz
xor
lods
fwait
dec
sbb
ja
sbb
divb
mov
add
jb
add
stos
mov
les
loope
int
jp
adc
add
jo
mov
add
push
inc
add
xchg
sbb
jmp
lds
addb
add
jp
dec
mov
ret
mov
insb
adc
out
xchg
fs
and
rorl
cmp
mov
notb
or
add
xor
ljmp
arpl
add
and
fucom
mov
fidivl
or
and
rcrl
ret
hlt
loopne
mov
addb
inc
jge
movb
add
aaa
mov
and
jne
and
lds
mov
add
aaa
xor
pop
mov
add
mov
into
in
sbbl
mov
xchg
lahf
push
pop
dec
push
push
sbb
stc
sti
iret
push
or
loopne
addb
add
mov
add
fdivrs
and
xchg
jbe
mov
test
inc
add
add
jno
mov
adc
enter
and
add
jl
hlt
cld
inc
add
lahf
inc
jnp
sbb
ret
and
insl
aas
stos
rcrl
fstps
jno
push
lds
adc
rcll
out
mov
add
dec
dec
mov
push
xor
pop
cmp
mov
je
daa
je
inc
push
add
dec
jo
mov
sub
in
xor
xor
ljmp
movsl
mov
gs
add
push
xchg
icebp
mov
and
xchg
dec
dec
js
pop
outsb
adc
ficoms
ret
push
int3
pop
cmp
ret
jae
jnp
aas
jg
into
addb
xlat
mov
out
jge
cmp
sub
sbb
add
lret
push
ja
insb
mov
xchg
push
pop
sub
es
dec
ret
inc
cwtl
test
sbb
pushf
or
pop
jns
ret
add
adc
xchg
mov
sbb
push
ret
jl
stos
lods
jo
and
mov
lds
push
push
mov
and
ss
add
popf
or
xchg
adc
jmp
push
jb
mov
jecxz
add
xor
add
xor
sub
push
dec
sub
mov
fbstp
je
jmp
sub
rolb
nop
icebp
adc
popf
lds
adc
sbb
add
bound
fdivrs
arpl
sbb
jae
add
add
repnz
cmp
pop
xchg
pop
leave
xchg
mov
mov
cmpsb
ja
jo
push
and
push
and
cmpsl
push
dec
cmp
ret
and
jp
in
insl
mov
cmp
jle
hlt
addb
aad
jbe
gs
and
ja
mov
dec
jge
add
loopne
cmc
mov
xchg
fs
push
cmpsb
call
mov
dec
and
hlt
lea
je
enter
out
pop
popf
jne
mov
pop
xor
cld
call
add
push
add
fmull
leave
sub
pop
ret
sti
dec
push
stos
sahf
inc
add
movl
add
lahf
out
in
jp
enter
imul
xchg
stos
mov
jmp
add
jne
mov
imul
loop
jo,pt
xchg
ljmp
pop
sub
add
cmp
lea
push
out
inc
mov
out
cld
std
sbb
add
mov
mov
jg
scas
rcrl
loope
xor
negl
das
push
lret
and
add
stos
scas
push
or
test
stc
cwtl
pop
jo
or
insl
fwait
pop
pop
xchg
jns
insl
test
dec
inc
add
aam
popf
enter
jecxz
in
in
leave
jb
sbb
add
add
movb
ficoms
leave
insb
test
add
mov
fs
ja
sbb
and
jae
rolb
fs
add
pop
xchg
sub
or
loopne
testl
dec
les
push
scas
xchg
or
outsl
push
xadd
and
mov
add
push
cvtps2pd
idivl
fptan
adc
add
add
xchg
sub
add
add
add
jle
cltd
stc
push
pop
test
pop
fdiv
push
add
mov
clc
test
or
xchg
je
cld
sub
cmpsb
or
stc
cmp
and
mov
and
add
cs
push
ja
xchg
xchg
pop
cld
outsb
iret
aas
shll
stos
fstp
mov
and
into
lods
repz
dec
jnp
jmp
add
inc
cmp
addr16
xchg
fcmove
pop
push
mov
cli
add
stos
sub
mov
or
pop
mov
cld
insl
in
jo
mov
mov
aad
int3
inc
testl
fiadds
flds
nop
sub
push
inc
mov
add
sub
mov
sbb
and
out
add
call
dec
cltd
fcmovb
inc
add
jg
xchg
cwtl
enter
stos
mov
in
pop
xor
stc
fcmovnbe
ret
aaa
jnp
add
sub
mov
aaa
adc
or
andl
fisubs
dec
jns
lods
sar
dec
test
jl
sub
arpl
mov
scas
add
jecxz
and
push
sub
dec
or
hlt
arpl
in
ljmp
xchg
inc
stc
pop
sub
push
clc
xchg
or
add
push
cmpl
xor
hlt
hlt
sub
fnstsw
test
add
mov
and
testb
inc
scas
xor
mov
cmc
shr
notb
fwait
cmp
add
decl
dec
test
jmp
xlat
adc
pop
adc
imul
dec
or
mov
push
in
lods
in
ljmp
add
or
addb
gs
inc
in
mov
insl
out
dec
cmp
test
xchg
push
push
dec
cmp
test
popf
mov
pop
sbbl
daa
push
cmp
out
add
leave
mov
out
out
jg
add
and
aam
mov
add
pop
das
imul
mov
std
sbb
or
sub
iret
ret
cmp
jp
add
ret
sbb
dec
xchg
mov
jmp
fwait
cltd
xchg
lcall
push
xor
in
outsl
pop
movsl
xchg
pop
ljmp
xor
test
add
cld
pop
rolb
lods
stc
movsb
std
xchg
dec
inc
xor
sub
adc
stos
xor
inc
and
sub
mov
daa
xor
add
adc
jae
ficoms
xor
bound
std
shlb
add
cmp
xor
cmpsl
imul
and
or
test
iret
insl
aam
add
pop
lods
stc
or
outsb
add
sti
shll
es
or
add
mov
mov
outsl
repz
popf
jno
mov
sub
jecxz
test
les
add
push
add
or
or
movsl
addb
test
mov
cld
bound
loope
into
rcrl
pop
cmp
or
xchg
fists
dec
and
push
mov
cltd
js
or
loop
adc
and
dec
loope
add
repz
and
std
mov
movl
fldt
rorl
sub
xor
pop
adc
addb
das
pushl
pop
and
mov
inc
add
add
lcall
and
add
shll
push
mov
add
scas
add
jno
cmp
mov
idivl
cmpsl
negl
push
or
fsubrl
push
fistps
mov
mov
mov
lahf
mov
jg
xchg
sbb
lret
in
ret
repz
add
out
and
inc
add
xor
les
sub
aad
movsb
jp
add
out
xchg
test
sar
or
push
dec
mov
mov
sub
enter
add
xorl
mull
ret
sti
xchg
dec
push
add
xchg
mov
mov
sub
xor
cmpsb
je
cmp
mov
int
pop
inc
add
cmp
add
test
out
push
call
imul
add
pop
sti
jp
jl
jge
xlat
adc
add
xchg
jmp
daa
aad
rolb
or
scas
pusha
add
and
or
ljmp
ds
lea
int3
inc
inc
add
add
and
or
fsubp
jg
jecxz
pushf
cld
in
adc
ss
mov
lahf
scas
mov
mov
xchg
adc
stc
add
std
test
inc
cmpsb
jae
in
pop
mov
add
repnz
add
xor
pop
mov
pop
testb
aam
sub
push
notb
dec
sbb
cmp
xchg
jns
xor
imul
or
xchg
into
sbb
push
and
mov
add
pop
stc
mov
add
stos
fmull
fcompl
xchg
ret
rcrb
popa
lahf
xor
inc
hlt
add
sbb
sti
push
outsb
adc
cli
mov
loope
js
out
push
aaa
sub
dec
xchg
sbb
in
mov
or
leave
lds
mov
scas
jb
cmp
icebp
inc
add
rcr
popl
insl
out
xchg
dec
into
push
mov
cmc
xchg
push
adc
sahf
fists
pop
jbe
shr
pop
add
aaa
sbb
into
pop
out
int3
push
jl
jl
in
dec
push
xchg
loopne
or
cltd
std
aaa
sbb
sub
xchg
sarl
pop
daa
std
mov
push
or
or
xor
adc
xor
add
addr16
sahf
sahf
xor
add
std
cmc
xchg
dec
adc
lcall
add
add
add
sbb
test
mov
stos
mov
mov
mov
fstpt
scas
cmp
push
add
add
add
mov
sub
lods
addb
sub
push
cli
mov
add
jno
mov
movsb
les
fiadds
add
sub
mov
sbb
and
lret
mov
inc
add
fildll
mov
sub
scas
insl
icebp
mov
mov
push
push
sahf
mov
icebp
mov
or
add
cwtl
negl
or
cmc
pop
jge
pop
pop
mov
cmc
cmp
inc
add
mov
mov
dec
stos
adc
cmp
in
inc
addb
sub
and
imul
sub
xchg
in
negb
pop
xor
add
and
addb
fistl
and
loopne
sbb
fmul
icebp
and
dec
cltd
movsl
or
ret
add
inc
adc
clc
cmp
fiaddl
add
add
add
fwait
cld
mov
es
dec
or
adc
xor
add
roll
movb
mov
mov
xor
cmp
int3
pop
es
cmc
out
shrb
push
push
inc
xchg
movsl
les
in
jne
push
mov
scas
aam
mov
cmpl
arpl
cmc
cmc
in
push
jo
shr
int3
rcl
std
cld
jb
adc
mov
out
adc
sbb
mov
fstpt
loop
in
sub
xchg
jns
aam
pop
xchg
push
popf
inc
add
cltd
push
xchg
jle
push
add
movsb
or
popf
inc
add
jge
jmp
pop
popf
or
aam
add
add
and
hlt
lods
inc
add
mov
ja
or
cld
fwait
inc
add
adc
mov
sbb
add
jne
xor
or
mov
add
push
ljmp
mov
nop
es
rorl
nop
push
test
jmp
nop
cwtl
ficomps
jmp
add
lea
mov
sbbl
dec
jp
pop
hlt
xchg
mov
sbb
cmc
mulb
aad
add
ljmp
loop
add
add
sbb
ljmp
stc
ljmp
adc
iret
out
jl
mov
insb
inc
mov
out
jmp
in
xor
rcll
mov
mov
rorl
add
xchg
sbb
addr16
add
mov
mov
sub
inc
lods
push
fcoml
sbb
and
cmp
sbb
cmp
pop
jg
push
cltd
out
jb
cmpsb
mov
add
fldcw
loopne
mov
sub
push
push
data16
enter
pop
pusha
add
xor
jo
inc
jmp
aam
sahf
sbb
out
xor
push
lods
addr16
pusha
add
mov
add
lods
push
cmp
mov
jnp
xor
or
add
add
das
mov
stos
cltd
test
sbb
movsb
lods
jmp
sub
aad
loopne
or
movsl
pop
pusha
add
fisttpll
xchg
les
addr16
std
out
xchg
and
cs
mov
cmc
imul
into
loope
pop
bound
mov
add
or
mov
stos
int
mov
add
sub
add
out
imul
push
add
popa
addb
dec
or
or
cli
imul
lahf
mov
adc
or
imul
jl
das
lods
daa
cmp
adc
ja
xor
jecxz
mov
scas
push
add
mov
xchg
mov
add
pop
mov
adc
cmp
jmp
inc
aaa
or
add
ja
mov
sar
adc
mov
test
mov
xchg
xor
add
add
sub
pop
sbb
add
out
mov
jecxz
divl
aas
mov
push
pushf
scas
imul
in
xchg
cmp
push
pop
in
cmp
mov
loopne
xor
cld
inc
loopne
mov
gs
lds
add
mov
cwtl
push
bound
sti
movsb
cmp
filds
push
adc
scas
push
fdiv
xchg
and
or
push
add
scas
fsts
insb
xor
jle
imul
test
icebp
pop
mov
ss
add
xor
je
dec
daa
das
dec
add
dec
jp
or
or
inc
add
testl
fildl
mov
lret
outsl
xor
xor
xlat
es
xchg
and
add
cmp
mov
je
in
cmpsb
out
dec
add
cmpsb
push
cmp
cld
cwtl
lss
and
adc
pop
mov
add
mov
jg
pop
push
int
fistps
lret
lahf
popa
js
bound
jno
jnp
dec
mov
imul
xlat
add
pusha
add
add
add
dec
and
jle
or
or
jno
cmpsl
adc
push
roll
adc
sbb
cltd
fstpt
dec
test
add
mov
jmp
or
xor
mov
push
cmp
lds
push
pop
add
push
js
jmp
pop
aas
xor
add
mov
fistl
out
jl
cld
dec
push
add
pop
adc
sub
loop
jle
add
sti
cli
and
repz
sub
pop
or
xchg
xchg
jecxz
cmp
and
test
sti
push
adc
and
popa
js
data16
shr
cmpl
push
int
cmp
loope
or
and
cli
mov
fcompl
ja
les
sbb
mov
or
imul
inc
add
filds
pop
addb
sbb
lret
in
jmp
push
adc
fadds
add
pop
fstpt
add
xor
lahf
xor
add
jle
xchg
xor
xor
dec
cli
sbb
sbb
add
or
adc
repz
mov
pop
xor
push
xchg
roll
call
addb
jo
inc
pop
xchg
xlat
push
sbb
ffreep
add
add
imul
add
xor
jno
aad
and
js
and
adc
test
add
xchg
je
or
xchg
adc
mov
mov
pusha
add
into
in
and
loop
mov
repz
dec
sbb
aaa
mov
cwtl
xchg
push
data16
icebp
sbb
mov
je
sub
add
xor
sub
roll
mov
pop
dec
dec
or
cs
cld
aaa
mov
lods
jb
mov
lahf
stos
push
xor
xor
xor
jne
hlt
sahf
and
fdivrs
outsl
xor
cli
inc
add
sbb
mov
pop
ljmp
mov
mov
xor
and
mov
add
rol
and
enter
mov
jle
pushf
and
test
add
cmp
mov
jb
add
test
addb
negl
pop
or
and
mov
cli
nop
mov
ja
mov
jge
add
es
or
inc
add
sub
add
fs
xchg
pop
add
cs
mov
fldenv
inc
or
test
xchg
cmp
movb
js
xchg
out
out
jmp
gs
mov
out
ja
mov
movb
add
add
mov
cmp
mov
jnp
add
lods
cld
jp
nop
mov
loop
js
cmp
mov
dec
sahf
rcr
into
arpl
or
xchg
lock
inc
add
sub
xchg
cmp
movsb
lcall
adc
pop
and
pop
fistpll
add
push
push
add
add
leave
hlt
repnz
xor
adc
scas
dec
add
push
sbb
dec
jbe
xchg
jo
aaa
cmp
adc
and
xor
sub
add
enter
add
cli
fmull
adc
jp
insb
add
cmpsb
jp
cmpsl
adc
int3
push
jno
lcall
aas
jne
add
mov
xor
iret
push
xchg
push
sub
daa
push
xor
xchg
sub
push
inc
add
mov
jle
shrl
out
push
vmwrite
fcmovb
insl
dec
out
mov
xchg
sbb
jge
es
leave
mov
ftst
mov
add
gs
ss
cmp
push
scas
xchg
push
jecxz
rcl
out
inc
xor
popa
lea
push
xchg
es
lcall
insl
push
ds
adc
xchg
add
jae
jge
rcrl
sbb
pop
dec
cs
push
ret
popf
fisubs
pop
lcall
push
mov
push
insb
call
mov
inc
pop
shr
adc
mov
test
inc
add
inc
add
shll
scas
outsl
in
bound
rcl
add
into
dec
inc
sbb
xchg
sub
stos
jge
lret
push
into
lahf
push
leave
mov
pop
push
aad
cmp
mov
loop
rorl
mov
cmpsl
adc
or
jecxz
jp
xchg
test
lret
sahf
rolb
arpl
sti
dec
adc
in
dec
into
movsb
jge
out
mov
int3
stc
add
xor
in
pop
sub
dec
push
pop
inc
and
fidivl
popa
push
mov
or
cltd
enter
mov
scas
sbb
mov
cmp
and
rolb
cmp
fcompl
dec
std
xchg
pop
pushf
sub
xchg
enter
cmp
cmp
lds
lret
mov
rcrl
sub
jbe
add
mov
sbb
push
add
call
jne
test
jne
hlt
scas
imul
pusha
add
mov
mov
bound
xchg
fnstenv
mov
lret
adc
or
out
jge
lret
xor
push
add
imul
daa
push
push
mov
sbb
rolb
iret
scas
ljmp
add
dec
mov
mov
jg
dec
dec
lds
mov
jae
mov
sub
test
push
mov
lret
pop
hlt
sub
mov
scas
jno
test
iret
inc
add
lods
aaa
out
cmp
clc
adc
mov
cli
lsl
lret
xchg
mov
cld
daa
jo
pop
jp
xor
rolb
push
nop
mov
or
imul
jle
jae
int
dec
push
and
loope
imul
xor
dec
lcall
pop
push
into
lret
sbb
mov
popf
ljmp
mov
pop
cmpsb
inc
add
enter
neg
mov
lock
stc
aas
mov
dec
cld
pop
xchg
push
push
ficomps
push
mov
cmp
sbb
enter
push
mov
insl
push
leave
movsl
addb
rolb
cmc
mov
das
outsb
dec
ss
dec
cmpsb
pop
pop
mov
mov
fs
push
movb
push
mov
push
mov
cmp
data16
mov
xchg
pop
bound
xchg
adc
je
les
out
addb
sub
test
dec
xchg
pushf
push
stos
lea
pusha
add
xchg
loope
add
mov
gs
xor
imul
add
fneni(8087
lret
mov
aam
shll
mov
sbb
or
pusha
add
and
jge
xor
outsb
stos
add
mov
test
cwtl
movb
jecxz
xchg
mov
mull
daa
fwait
adc
insl
xchg
daa
sbb
push
cwtl
outsb
scas
inc
jne
idivb
hlt
jmp
adc
sbb
push
jae
sbb
mov
fcoml
jle
xchg
xor
mov
in
test
jl
cmp
mov
lret
std
aaa
sahf
insb
jp
cmp
jecxz
cmpsl
imul
addb
or
pusha
add
mov
push
fidivs
push
inc
popa
and
les
jne
push
movsb
xchg
fdivr
scas
xchg
scas
addb
jp
rolb
rcr
in
pop
loop
adc
cmp
cmp
test
or
ret
add
add
sbb
mov
adc
add
sti
or
add
add
jl
push
add
push
pushf
push
sti
xchg
push
arpl
add
cltd
imul
cmc
mov
xchg
jo
add
and
pop
insl
test
push
mov
xchg
adc
add
xor
aaa
lea
popf
pop
lret
sti
jbe,pn
lock
push
gs
iret
sub
outsl
outsl
cmp
pop
mov
xchg
mov
pop
aam
push
leave
fucompp
sar
sbb
xchg
add
imul
loopne
out
mov
sub
adc
mov
pop
inc
add
sub
inc
add
stos
paddsb
idivb
cltd
fs
pop
dec
xor
lea
xchg
xchg
iret
jnp
adc
mov
push
and
add
int
dec
push
clc
sarb
lea
or
sub
xchg
fs
bound
outsb
inc
pop
repz
and
movsl
das
sub
rol
sub
shl
cli
mov
jge
push
ss
push
test
dec
adc
jbe
scas
push
add
jnp
xor
mov
sbb
jecxz
cli
jae
je
pop
repnz
add
jo
les
mov
cmpsb
out
popa
enter
jmp
mov
shll
jae
jmp
xor
cmpsl
mov
dec
adc
push
jb
mov
fs
dec
sbb
addb
mov
addb
mov
adc
adc
int3
mov
scas
lcall
out
mov
les
pop
and
add
lret
imul
inc
add
mov
imul
inc
add
std
and
aam
dec
pop
inc
add
push
int
mov
or
lock
add
push
stos
cld
pop
add
lock
insb
sub
insl
mov
icebp
mov
idiv
fidivs
fsubr
pop
inc
xor
mov
je
add
dec
popa
inc
add
scas
mov
add
rolb
arpl
mov
popa
mov
mov
int
jp
imul
pop
xchg
mov
cmpsb
test
and
xchg
lret
test
cmp
movb
inc
add
lret
push
mov
mov
or
add
aaa
fistpl
inc
add
xlat
hlt
xchg
xchg
ss
mov
stos
ljmp
je
int
push
nop
sub
cltd
xor
sub
pusha
add
push
dec
cmp
xchg
sbb
sbb
outsb
mov
add
adc
shll
and
outsl
sbb
adc
in
hlt
in
out
xor
popa
int3
sub
cmp
out
mov
or
in
loopne
pop
mov
pusha
add
xchg
das
leave
cmpsb
push
add
dec
cmp
addb
inc
cmovle
rolb
js
js
add
cmp
add
call
shlb
aam
mov
bound
xor
add
mov
out
xor
daa
imul
scas
push
dec
mov
add
popf
out
imul
add
sbb
adc
mov
jle
and
scas
jmp
and
clc
icebp
mov
test
cmp
xchg
inc
fisttpll
jbe
add
aaa
inc
add
sbb
out
add
pop
push
pop
cmp
add
sub
out
add
ret
repnz
or
sti
push
add
fildl
sbb
aad
mov
sub
sub
in
fwait
push
add
mov
ljmp
add
xchg
cmp
jcxz
andl
dec
out
push
pop
inc
cmc
les
mov
aam
push
insb
xchg
int
add
and
repz
outsl
add
mov
adc
popf
xor
push
stc
pop
repnz
push
mov
add
aam
mov
cmp
mov
dec
icebp
mov
pop
fsubrp
xor
imul
pop
jmp
pop
movsl
test
add
sub
push
fwait
imul
arpl
out
outsl
dec
mov
adc
lock
add
dec
xchg
out
enter
nop
fcmovu
xor
stos
pop
lock
mov
pop
outsl
xor
xor
jg
aaa
add
out
fisttps
jno
sub
xlat
push
xchg
xchg
orl
mov
xchg
fiaddl
add
jne
xchg
and
xchg
movsb
adc
and
insb
mov
jno
lock
xor
jo
sbb
cltd
sub
add
pop
xor
pop
or
push
in
mov
das
add
fs
insl
and
xchg
xchg
and
in
mov
sbb
and
add
addr16
jmp
pushf
jno
mov
aaa
sbb
popf
setnp
movsl
aam
movsl
shlb
call
cs
dec
pop
sbb
sub
and
add
mov
mov
mov
or
movb
xor
inc
mov
cmp
cltd
pop
cmp
or
sub
lcall
add
mov
xor
pop
std
push
adc
imul
xchg
mov
push
repz
cmp
dec
leave
sub
mov
mov
leave
jnp
pop
and
in
ret
add
cmp
mov
js
pop
cmp
cltd
or
pop
cmc
in
insl
js
and
xlat
lods
or
and
push
xlat
jnp
pop
scas
and
add
test
ljmp
mov
mov
inc
add
ljmp
xor
cmc
mov
jnp
icebp
and
cld
imul
push
rcll
data16
addb
pop
lock
pop
enter
xchg
insl
pop
daa
in
in
sub
adc
and
flds
fs
push
pushf
cwtl
ficomps
addr16
bsf
push
add
repnz
repz
or
push
rolb
add
shrb
and
fmulp
mov
xchg
pop
ficompl
in
jne
ja
sub
pop
es
add
add
dec
out
sbb
movb
pop
and
mov
xor
mov
add
mov
js
rcrb
add
leave
adc
leave
call
stos
jae
shl
rolb
xor
or
js
pop
jecxz
movsl
cli
nop
mov
push
push
push
xchg
add
cmc
xchg
lcall
bound
or
push
pop
lds
scas
or
test
jo
ss
add
or
jbe
and
es
orps
mov
add
movb
adc
sbb
adc
cmpsl
or
mov
dec
pop
outsl
sub
push
call
mov
xchg
cltd
stos
sub
add
mull
mov
lret
rcrb
aaa
leave
adc
add
mov
cld
xchg
sub
sbb
aas
sub
inc
add
call
adc
cmp
sbb
cld
inc
insl
xchg
cmp
jbe
les
jb
std
push
dec
adc
daa
mov
pop
add
test
add
sbbl
movsb
push
stos
cld
pop
pop
sub
hlt
xchg
pusha
add
pop
in
mov
repz
popf
add
mov
jbe
jecxz
add
pop
scas
lods
insb
movsb
fnsave
jae
fsubrs
mov
rcr
cltd
stc
hlt
orl
dec
inc
ja
movsl
pop
mov
xor
xchg
repz
test
or
call
pop
pop
add
pop
insl
bound
and
mov
push
pop
jae
fwait
push
pop
in
pop
jne
inc
add
cmp
in
das
push
pop
or
repnz
pop
add
mov
iret
add
jbe
jl
movsb
and
cwtl
nop
stc
add
or
pop
pop
mov
fimull
pop
les
jns
in
outsb
mov
sub
icebp
jae
in
aam
ljmp
mov
out
out
lret
add
sahf
dec
jno
aad
addb
mov
imul
jne
test
ret
test
add
pop
outsb
sub
xchg
clc
ja
xorl
lahf
icebp
add
lret
push
cmp
lock
add
add
jo
add
mov
icebp
sub
add
xchg
lret
pop
fwait
inc
jp
outsb
into
fcompl
out
pop
push
mov
mov
nop
or
pop
movsl
stc
loope
dec
add
inc
add
repnz
mov
addl
xchg
je
in
pushf
adc
mov
dec
daa
loop
outsl
clc
push
add
orl
je
xchg
jbe
add
mov
add
sbb
call
rcl
shrl
push
add
add
bound
lahf
sbb
sub
cwtl
jnp
jns
jge
adc
push
mov
or
mov
add
in
pop
jp
add
lods
jae
mov
repnz
add
or
fwait
dec
mov
jno
mov
inc
add
pop
jae
sbb
mov
xor
lret
cmpsl
xchg
mov
test
or
popf
add
pop
pop
gs
lods
mov
add
das
and
test
movb
inc
add
test
addb
jmp
adc
mov
cltd
repnz
add
add
jecxz
popa
mov
es
mov
lret
std
jae
pushf
stc
test
push
cmp
fistpll
mov
rcrb
sbb
test
icebp
sub
frstor
jbe
inc
sbb
sbb
adc
sbb
ds
test
push
cmp
insb
shrb
rorl
shll
adc
add
mov
test
hlt
pop
icebp
pop
xchg
dec
lea
cmp
mov
sub
pop
jne
pop
iret
mov
add
inc
add
sub
test
rcl
jg
add
sub
or
lock
fs
fisttpl
js
add
fiadds
mov
pop
sbb
mov
adc
push
test
mov
and
pop
jnp
dec
cmp
leave
pop
mov
add
push
xchg
adc
add
subl
add
cltd
sbb
sbb
ss
inc
dec
cmc
jp
xchg
out
adc
into
stos
rcr
sahf
nop
sbb
mov
decl
jb
add
xor
cmc
test
ss
iret
mov
mov
pop
cmpsb
pop
inc
mov
mov
js
add
add
scas
add
mov
dec
lea
add
push
imul
xchg
pop
ret
mov
mov
xchg
pop
xor
cmpsl
sub
add
push
push
pop
push
mov
ret
stos
pop
push
add
movsl
cmovne
scas
xchg
mov
pop
mov
jne
or
pushf
or
imul
adc
jp
repz
add
xchg
dec
mov
sub
push
fcmovbe
pop
pop
jl
mov
loope
mov
mov
sub
addb
fsubl
add
stos
push
add
out
jno
scas
outsl
mov
inc
repz
lahf
icebp
imul
add
outsl
push
jno
push
xor
and
pop
mov
adc
in
pop
cmp
xchg
jle
out
bound
xchg
mov
js
xchg
jno
xchg
push
ss
cmp
add
rolb
loope
rol
insl
push
add
lds
xlat
mov
dec
addb
outsb
jne
lret
movsl
movsb
ss
stos
mov
jno
lcall
mov
hlt
sbb
dec
test
xor
jno
mov
negb
add
inc
push
mov
push
ljmp
adc
rcrb
and
and
jmp
jl
insb
scas
movsb
leave
push
insl
shrl
mov
clc
mov
pop
rorb
ret
shll
in
das
sahf
mov
rclb
dec
in
fisubrs
fdivs
push
mov
repnz
add
jne
shlb
xchg
cmp
add
cmp
mov
mov
popf
inc
and
mov
pusha
add
add
ret
pop
xchg
push
and
add
mov
mov
add
imulb
add
mov
jg
sahf
sbb
or
xor
xchg
test
es
push
mov
shlb
pop
push
adc
lret
mov
lods
inc
add
jo
push
dec
hlt
arpl
pop
xor
add
mov
je
xor
push
clc
mov
call
jno
mov
fs
cmp
ficoml
pop
pop
roll
and
mulb
add
repz
add
xor
mov
gs
fistpl
add
jg
movsb
or
and
and
lahf
push
pop
out
mov
jp
xchg
fldenv
xchg
and
imul
in
xor
jbe
xchg
and
mov
sub
add
fs
pop
cwtl
shrb
push
jge
cmp
push
addb
sbbl
fcmovnbe
pop
mov
mov
mov
add
sub
push
cwtl
test
mov
and
sbb
push
adc
xor
stc
fidivrs
and
fldt
pushf
cld
neg
or
cld
or
es
bound
mov
add
and
add
add
arpl
add
cli
lcall
add
movb
xor
jp
add
add
pop
jne
add
pushf
cmp
sbb
clc
jb
push
loopne
jo
movsb
inc
add
arpl
pop
iret
loop
les
fwait
mov
fs
ret
les
adc
leave
pop
xor
cmp
add
mov
fidivs
sbb
insl
cmp
and
and
xchg
loop
inc
add
xchg
xlat
inc
add
and
and
cmp
mov
add
movsl
setnp
sbb
xchg
pop
dec
jb
jle
mov
sti
mov
xchg
add
testl
cs
mov
test
add
pop
sub
cmp
fs
xor
mov
xor
xchg
repnz
mov
add
imul
shl
in
test
jns
sbb
add
addb
subl
and
mov
gs
addb
jl
test
pusha
add
pop
dec
movb
push
push
call
xchg
fbld
ficompl
sti
mov
xor
dec
sti
jmp
ja
loop
je
xor
add
out
call
jmp
cmp
dec
out
jnp
mov
cmpsb
inc
stos
fsub
pusha
add
jmp
add
test
inc
add
add
addb
inc
add
inc
or
je
cmpsb
daa
jae
sub
add
lods
jp
mov
stos
int
ja
add
dec
mov
ffreep
in
in
cmpl
jbe
add
addb
xor
je
lret
sahf
aaa
pop
imul
or
push
fwait
aas
stos
pusha
add
add
fwait
lock
fchs
mov
lret
pop
cmpsb
icebp
push
addr16
sub
mov
insb
add
arpl
jl
addb
insb
sbb
ret
pop
pop
aam
mov
fldenv
add
popf
scas
mov
mov
inc
add
bswap
mov
pop
aas
mov
gs
push
adc
addb
icebp
out
call
mov
mov
or
inc
rcrl
xor
or
cmpsl
pushf
out
xchg
jae
iret
aam
notb
js
or
addr16
cmp
lds
lret
xchg
push
stos
sbb
jle
sbb
stos
ja
push
add
in
sbb
add
add
fisubrl
hlt
lea
rolb
cmp
push
inc
cmc
or
leave
add
clc
sysexit
test
push
mov
fisubl
dec
push
popf
lahf
jae
js
and
jecxz
adc
test
cmp
cmp
pop
fistl
cmpsb
and
les
xchg
scas
cmpsb
imul
add
dec
stos
xchg
scas
mov
fidivrl
xchg
enter
sbb
loop
add
test
jo
pop
lret
push
xchg
test
mov
dec
aaa
xchg
arpl
push
cmp
dec
or
inc
add
scas
in
sub
mov
inc
add
es
idivb
push
dec
add
fsubrs
lods
mov
jae
add
mov
hlt
lret
popf
xchg
or
add
stc
les
and
pop
loope
xchg
inc
pop
test
dec
add
xchg
dec
scas
in
inc
add
mov
inc
add
or
rorb
movsl
inc
mov
add
orl
lret
addb
aam
xchg
out
into
sbb
ja
ret
lcall
mov
aaa
jg
push
add
fwait
jle
addr16
test
inc
add
add
mov
add
adc
push
inc
and
pushf
mov
sub
add
imul
mov
lds
outsl
stc
jge
pusha
add
jge
and
inc
push
arpl
mov
xchg
inc
lea
jae
xchg
xchg
aad
or
push
add
sbb
push
mov
in
cmp
add
fwait
mov
insb
xor
mov
cmp
movb
out
call
jp
iret
mov
or
addr16
das
jp
popf
shr
repnz
ret
imul
fadds
cmc
pop
jo
repz
add
fimuls
mov
cmpsb
inc
add
popa
mov
ss
cltd
int
xchg
call
in
movsb
inc
add
out
imul
sub
out
js
jg
dec
hlt
rolb
mov
cwtl
mov
jo
lret
push
push
add
add
movsb
mov
sub
add
xor
pop
cmc
jecxz
stos
inc
sbb
xchg
mov
mov
and
xchg
movsl
sbb
fadds
add
lods
aam
sub
mov
addr16
adc
sbb
loop
sbb
movsl
push
push
mov
dec
out
jl
stos
sub
cld
xlat
push
rcll
cli
jge
add
pop
pop
jbe
aaa
adc
ja
repnz
or
stos
or
cmp
sub
sti
loope
jle
insl
jns
imul
gs
xlat
in
push
push
pop
push
pop
push
jbe
mov
lds
cmpl
fsubrl
orl
lahf
stc
mov
ret
or
add
dec
xchg
in
cld
fidivrs
inc
add
movb
outsb
or
mov
xor
xor
dec
repz
hlt
imul
mov
xchg
shlb
sbb
bound
daa
inc
add
stos
pop
shrl
arpl
add
mov
rcrb
jbe
test
adc
jno
mov
cmp
hlt
pop
jg
fnsave
jg
add
adc
dec
adc
loop
call
dec
test
push
mov
cmpsl
jns
mov
shl
iret
sbb
packuswb
add
ret
push
xchg
xchg
xchg
mov
add
int3
das
adc
dec
push
jg
mov
sbb
add
cmp
test
dec
mov
sub
xchg
repnz
out
xchg
add
cmp
dec
ret
xor
addr16
or
mov
cmp
add
mov
inc
rolb
mov
rolb
pop
aas
pop
arpl
outsl
push
aam
cmp
sub
mov
inc
push
mov
lock
jg
add
add
and
scas
mov
add
push
in
adc
xchg
inc
adc
sti
mov
dec
cmp
cmp
ljmp
arpl
cld
jge
cmp
imul
add
fs
xor
outsb
xchg
xchg
out
push
data16
jbe
iret
inc
add
movsb
daa
in
sarl
cmpl
fcomi
xchg
lock
add
push
hlt
inc
add
jns
push
hlt
inc
add
imul
rcll
popf
js
out
mov
adc
jecxz
ret
mov
cmp
add
mov
or
pop
and
add
aas
inc
add
dec
outsb
sub
in
add
mov
inc
xchg
add
or
add
icebp
mov
mov
aad
or
pop
mov
fcoms
ss
aad
pop
dec
dec
fs
dec
mov
hlt
sub
add
xor
dec
or
in
rorl
add
cmp
mov
mov
mov
mov
inc
in
in
sbb
add
out
inc
add
sbb
fildl
lahf
sti
and
jp
and
mov
jg
xlat
rolb
push
mov
add
dec
cmp
mov
push
push
rclb
flds
sub
push
sub
add
dec
ss
add
loopne
scas
pop
jnp
test
addb
jnp
mov
sbb
push
push
inc
cld
cmp
jne
xor
cld
xor
and
outsl
dec
xorl
ja
movsb
cltd
xchg
push
scas
fucomip
cmpl
sub
les
daa
out
mov
rolb
les
mov
inc
jg
outsb
inc
add
cld
sub
int
pop
sbb
jns
jnp
jge
jae
xor
pop
pop
pop
test
addr16
cmp
mov
add
pop
mov
fsubp
cmp
stc
push
xor
push
test
pop
ljmp
rcrl
lods
notb
movb
cmp
scas
in
jns
clc
mov
or
nop
and
sbb
and
leave
call
sbb
jmp
ja
sbb
xchg
addr16
or
dec
xor
inc
add
lahf
pop
xor
jne
sub
sbb
add
pop
jae
fldt
out
adc
addb
sti
xor
lahf
ret
sbb
mov
mov
rolb
sub
or
stos
je
shrl
loop
movsl
cmp
and
xchg
mov
in
repnz
pop
push
insl
lcall
and
addr16
js
sbb
push
scas
fcoml
jns
rcrl
stos
popa
adc
or
sub
add
jb
lods
movsb
cmpsb
or
push
add
push
and
push
or
bound
jg
jb
jl
add
pop
jo
add
adc
jecxz
pushw
mull
lahf
or
sub
enter
or
sub
sbb
ds
and
mov
or
movsl
cmp
out
inc
add
loop
stos
inc
jmp
sbb
jne
into
jbe
nop
out
push
insl
xchg
gs
sbb
xor
ja
popa
jo
add
add
leave
inc
jl
inc
mov
repz
aam
add
into
popf
fldl
flds
cmp
fucomi
cmp
aad
outsb
out
pop
or
out
pop
xchg
or
ljmp
insb
sub
pop
les
mov
jge
jmp
es
in
rcpps
out
test
aaa
rcrb
add
clc
and
movsbl
int3
dec
clc
or
not
js
mov
xchg
pop
aam
add
jae
fwait
or
dec
mov
dec
xor
lds
sbb
imul
test
insl
add
push
cmpsl
popf
xor
ljmp
xchg
into
or
pusha
add
or
rcl
and
sar
push
mov
xorl
mov
jecxz
mov
inc
add
add
add
adc
sub
cmc
inc
fsubr
lock
in
mov
and
mov
inc
xlat
jg
cmp
mov
jle
or
mov
pop
repnz
arpl
sub
pop
xor
movb
cmp
mov
mov
nop
out
cmp
ljmp
mov
daa
out
rolb
xlat
cld
int
fstpl
jnp
sub
jnp
daa
orl
cmp
or
cmp
mov
cmp
xchg
pop
xchg
jns
push
pop
dec
push
outsb
pop
test
cwtl
ss
sti
pop
ret
int3
and
dec
fldt
cmc
pop
jle
pop
sbb
sbb
add
rcr
ss
add
sbbl
push
outsl
and
push
in
mov
or
inc
test
jo
and
adc
sub
lret
ljmp
mov
std
jne
in
pop
sub
add
in
mov
notb
popf
xor
scas
inc
add
mov
cmc
mov
insl
inc
add
xchg
pop
out
lds
repnz
xor
xchg
xchg
call
popf
rcl
popf
aas
sti
sub
insb
dec
push
or
mov
mov
rdtsc
pop
scas
xchg
push
add
insb
dec
cmp
add
xchg
cmpsb
mov
stos
xchg
nop
rcl
movsl
xchg
lods
test
jns
jns
jb
push
mov
xchg
ja
add
popa
arpl
lock
addr16
push
jne
cmp
add
inc
add
repnz
add
test
cli
sbbl
or
insl
scas
jecxz
cmp
out
add
xor
pop
bound
mov
imul
and
repnz
push
mov
jb
imulb
cmp
mov
add
mov
pusha
add
rcrb
ret
js
je
sub
jecxz
mov
int3
in
rolb
jmp
add
add
mov
enter
and
push
dec
test
hlt
dec
outsl
outsl
loop
inc
add
mov
ret
stos
nop
lock
das
mov
sbb
out
adc
fistpll
movsl
mov
lret
add
jp
loopne
mov
in
scas
push
sbb
mov
mov
lahf
mov
lea
stos
pop
push
aad
add
movb
out
arpl
testb
enter
add
add
push
add
add
pop
loop
addb
insb
dec
or
dec
in
rorl
mov
mov
repz
jae
jge
sarl
fcmovne
enter
jl
fildll
fmull
xor
add
aad
mov
jg
in
and
insb
hlt
pop
repz
sub
mov
shrl
jns
fistl
cwtl
adc
inc
add
jae
faddp
add
jo
out
mov
add
aas
adcl
adc
push
adc
inc
add
inc
mov
push
jmp
xchg
or
adc
and
cs
add
add
