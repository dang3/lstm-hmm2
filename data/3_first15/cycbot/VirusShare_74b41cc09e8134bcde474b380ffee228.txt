mov
add
jns
mov
mov
mov
addb
call
clc
cmp
mov
fstps
inc
or
pop
sub
dec
lods
out
mov
add
cld
xchg
in
lcall
mov
fnstsw
adc
pushf
xor
mov
repz
dec
jmp
cwtl
test
and
arpl
cmpsl
lods
lds
adc
mov
ds
mov
jecxz
ret
lods
out
xor
mov
repz
rcrl
outsl
dec
xor
push
mov
sub
mov
add
sti
sub
mov
addb
mov
mov
mov
cmp
insb
push
mov
sub
xor
mov
inc
mov
jg
dec
test
or
add
inc
pusha
add
popl
std
addb
inc
leave
mov
fisubl
mov
xor
jge
insl
int
imull
pop
es
popa
pop
iret
mov
add
mov
mov
pop
inc
and
mov
add
out
push
cs
in
dec
stc
push
and
bound
mov
xor
js
lock
pop
adc
ljmp
sub
add
add
mov
add
fcmovne
jg
je
xor
lcall
popa
sbb
adcl
add
push
lods
lods
nop
add
ss
inc
push
sahf
das
cmp
push
add
lahf
rcrl
rolb
add
mov
movsb
pushf
dec
mov
test
sub
add
mov
lcall
in
xor
arpl
add
add
mov
aad
into
pushf
lret
xchg
mov
add
mov
test
fldenv
push
fnstenv
dec
mov
ds
icebp
xlat
les
mov
es
cltd
out
mov
sub
add
mov
add
mov
loopne
mov
rorl
add
pop
imul
cmp
fs
cmpl
inc
lods
sbb
test
outsl
push
lock
testb
mov
test
in
sbb
in
push
xchg
pusha
add
add
iret
les
mov
rolb
or
popf
jns
das
das
sbb
add
insl
jb
mov
cwtl
imul
fcomps
add
xor
mov
mov
add
aam
enter
pop
mov
mov
scas
sbb
and
push
add
add
lock
mov
stos
js
inc
mov
adc
push
add
mov
inc
adc
cmpsb
or
mov
cmp
jmp
add
ret
sbb
sub
mov
lock
sbb
mov
mov
jg
xchg
mov
or
add
fimull
mov
add
push
push
xchg
dec
mov
inc
add
adc
addb
jg
stos
aas
push
addb
or
movsl
fmul
mov
and
mov
dec
test
pop
inc
add
mov
adc
mov
ss
ffreep
or
add
testl
xlat
dec
or
or
lret
call
mov
add
push
add
push
int
int3
jns
xchg
mov
add
mov
xchg
repnz
cmc
adc
dec
imul
add
lret
pop
cmp
or
lret
dec
dec
aam
nop
add
bswap
mov
cmp
orl
test
test
add
push
xor
mov
or
sbb
test
mov
ljmp
sub
add
xor
inc
das
xor
sub
data16
call
mov
xchg
cmp
mov
je
add
add
push
xor
movsl
inc
add
jp
addb
xlat
cs
divb
sbb
pop
sbb
popf
pushf
adc
movsb
cmc
or
mov
push
inc
add
xor
fistpl
inc
adc
pop
push
in
fldl
mov
mov
movsb
fnstcw
pop
dec
push
test
pop
imul
add
add
mov
mov
data16
lahf
mov
push
adc
jno
hlt
rcll
mov
push
xor
mov
mov
insb
mov
scas
pop
inc
add
mov
mov
addl
mov
aas
data16
movsl
xchg
pop
xchg
add
add
dec
jbe
sub
fsubrs
push
jg
xorl
add
std
cli
inc
outsb
and
xchg
insl
sub
mov
xor
mov
adc
mov
out
or
add
cmp
hlt
lret
scas
and
mov
mov
mov
and
add
mov
jecxz
add
add
das
adc
push
cmpsb
lcall
adc
mov
add
mov
mov
imul
sub
out
pop
cltd
sbb
add
mov
xchg
out
push
rcr
add
add
jl
push
insb
imulb
dec
je
mov
mov
mov
push
out
loopne
mov
lcall
mov
jp
push
lcall
imul
xchg
rolb
mov
insb
add
pop
xchg
fstpt
popf
nop
add
mov
xchg
mov
pop
aas
push
xor
mov
sbb
mov
bound
mov
xor
mov
mov
ljmp
stos
push
in
add
dec
or
mov
add
cmc
xchg
stos
and
mov
add
movsb
sub
push
imul
push
dec
mov
rcl
jae
add
add
mov
or
mov
xchg
cmpsl
mov
mov
std
dec
jns
and
xor
ds
inc
add
cmp
jmp
cld
jp
push
movsl
cmp
addl
jo
mov
inc
push
loope
sbb
pop
stos
or
xchg
rolb
mov
insb
loopne
mov
iret
inc
mov
mov
ljmp
add
add
jns
pop
and
inc
pinsrw
mov
insb
dec
cld
mov
cmc
push
mov
nop
add
lea
mov
aaa
lods
fisubl
xor
mov
or
bound
mov
mov
cmp
fisubs
out
popa
mov
add
cmpsb
bound
mov
push
or
sub
add
sub
mov
movsl
outsl
add
stc
and
jo
mov
loop
mov
jo
mov
xor
mov
inc
lret
test
mov
bound
mov
inc
add
fstpt
inc
insb
jb
mov
inc
mov
push
subl
ds
cmpsb
pop
inc
add
sbb
jl
jo
mov
fsubl
and
mov
clc
jbe
loope
stos
loope
and
jno
and
mov
mov
mov
mov
xchg
lret
dec
rolb
mov
dec
mov
cmp
cwtl
mov
mov
clc
ret
rolb
mov
mov
add
sbb
lcall
add
loop
mov
and
mov
mov
mov
mov
dec
inc
add
adc
add
out
movsl
fwait
xchg
js
andl
rolb
mov
cmp
mov
xor
mov
mov
mov
push
ss
das
jno
jns
into
lret
outsl
add
inc
push
dec
and
inc
cltd
jecxz
iret
xrelease
push
fistl
fxch
daa
loopne
mov
daa
add
loop
mov
and
mov
and
mov
decl
insb
or
cmpsb
scas
aas
mov
add
mov
and
mov
mov
add
and
mov
lea
push
mov
push
add
inc
add
lret
test
rolb
mov
cwtd
mov
pusha
add
dec
stos
push
add
icebp
or
or
add
mov
mov
fsubrp
pop
jns
push
cmp
popa
cmovbe
xchg
sbb
adc
add
pop
icebp
cltd
push
push
int3
push
adc
mov
mov
dec
jnp
insl
ffreep
jae
psrld
mov
xchg
pusha
add
jnp
fstps
add
and
mov
mov
mov
add
mov
cltd
rolb
dec
ret
repz
lds
loopne
mov
mov
dec
mov
and
mov
mov
jns
and
mov
push
dec
pop
sub
add
xor
ds
stos
lahf
sub
insb
insl
aas
xchg
fnstsw
lahf
hlt
inc
add
add
push
sub
ja
repz
pop
cmp
sub
scas
mov
mov
add
jecxz
fildl
mov
faddl
arpl
rcr
add
mov
xchg
pop
inc
lret
movsb
cmp
add
pop
std
jne
add
lcall
mov
rcrl
call
add
add
xor
add
mov
cli
popf
arpl
mov
jl
mov
mov
add
inc
nop
add
add
addb
cmp
outsb
or
dec
hlt
aas
mov
mov
xor
mov
add
pop
sbbw
push
pop
dec
cmc
mov
sub
call
inc
sbb
mov
mov
fwait
xor
mov
sub
add
mov
cmc
push
mov
xchg
add
aam
fsubs
cmp
xor
mov
sbb
test
and
add
or
dec
jl
sbb
pop
inc
push
push
bound
mov
add
mov
cmp
sarl
movsl
les
add
imulb
loop
add
in
movsb
add
add
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
fadds
dec
lea
jle
cli
hlt
push
adc
mov
int3
and
mov
mov
sbb
add
cmp
pop
and
jae
add
jle
push
jmp
je
out
mov
push
addr16
mov
add
jno
repnz
push
fs
mov
xchg
outsb
in
mov
xor
add
mov
mov
mov
add
mov
mov
add
sub
add
rolb
mov
add
push
adc
mov
fcomip
add
and
mov
in
lds
dec
pop
lea
sub
mov
cmp
mov
rolb
jmp
add
add
call
sbb
outsl
stc
scas
insl
jp
push
dec
ss
add
jne
repz
add
mov
mov
daa
out
pmuludq
add
xor
mov
add
add
add
loopne
mov
and
mov
add
mov
inc
pop
lods
sbb
leave
xor
mov
xchg
push
shr
inc
jb
mov
lds
sub
mov
imul
rolb
mov
je
mov
gs
test
test
inc
bound
mov
arpl
fisubrs
js
in
in
mov
xchg
add
dec
aaa
push
add
jns
aas
jge
inc
add
mov
lcall
xchg
lcall
xchg
test
jp
add
lods
dec
ret
dec
repz
test
ljmp
adc
and
mov
add
lret
add
adc
cmp
bound
mov
mov
add
mov
or
mov
add
mov
int3
jmp
add
mov
add
mov
jmp
add
pop
shll
add
mov
adc
mov
add
fmul
sub
add
rolb
sbb
add
add
loop
mov
sub
or
push
add
mov
mov
test
pusha
add
xchg
mov
add
mov
lock
mov
rolb
mov
lea
inc
pusha
add
adc
jns
inc
mov
mov
push
addb
mov
mov
scas
das
xchg
aad
dec
arpl
js
aad
out
into
int
nop
add
inc
fdiv
aad
insl
fwait
jae
sbb
inc
repz
xor
jmp
bound
mov
vmread
clc
sub
movsb
cmp
push
add
mov
add
mov
mov
add
and
addr16
jno
adc
inc
cmp
mov
data16
add
lds
sub
add
inc
test
fdiv
pop
cmp
xor
mov
sbb
lcall
adc
mov
xor
into
addb
mov
mov
mov
inc
add
movsl
and
mov
mov
ret
push
xchg
mov
or
jno
daa
jge
add
inc
jae
and
dec
andl
inc
xchg
mov
mov
adc
adc
mov
mov
daa
dec
addb
into
sbb
jb
pop
test
imull
repz
xchg
add
test
add
rcll
mov
insl
mov
fstl
xchg
clc
mov
push
push
add
add
lds
or
jns
lret
repnz
mov
pop
test
mov
mov
add
adc
mov
add
mov
mov
in
mov
mov
sahf
cmpsb
fadds
add
rorl
arpl
sub
sub
sbb
in
add
mov
mov
mov
addr16
leave
cmp
insb
jp
pusha
add
cmp
add
or
sub
add
loop
mov
repz
in
leave
push
mov
test
inc
mov
add
push
je
daa
and
dec
fldt
cld
adc
mov
sub
inc
add
xchg
jo
mov
arpl
and
jecxz
repz
add
inc
add
mov
sbb
mov
mov
sbb
fistl
lds
add
lahf
mov
mov
scas
xor
mov
cwtl
fstpl
add
loop
mov
gs
mov
inc
stos
addr16
dec
mov
add
pop
repnz
ds
leave
pushf
push
sbb
cmova
sub
or
adc
mov
cli
into
add
or
int3
pop
ss
loop
mov
ret
stos
dec
mov
dec
ljmp
mov
dec
cs
add
mov
add
mov
shrl
cli
mov
aaa
jne,pn
dec
dec
test
add
adc
mov
add
add
mov
jg
add
mov
fsubl
add
add
or
and
mov
orl
add
mov
add
lret
lds
add
int
loop
mov
mov
mov
jno
push
sbb
inc
adc
scas
cmp
jg
push
inc
add
fxch
nop
add
xor
inc
lahf
faddl
add
cmc
xor
mov
xchg
arpl
rolb
mov
es
idivl
mov
pop
cmpsb
inc
inc
enter
popa
scas
push
sub
ret
cmp
pop
inc
add
mov
mov
mov
cld
add
fnsave
add
loop
mov
mov
inc
cmp
add
add
and
mov
and
pop
arpl
add
add
mov
fcomip
xor
mov
fldl
pop
push
add
dec
sbb
movsb
jecxz
sub
fisttpl
jecxz
and
mov
movsb
mov
mov
ret
arpl
and
add
fbld
int3
dec
imul
rolb
or
xor
mov
cmpl
pusha
add
dec
pop
cmpsb
sbb
add
mov
add
mov
jecxz
fdiv
es
out
cltd
pusha
add
hlt
mov
mov
mov
add
mov
outsl
dec
mov
add
mov
cmp
add
dec
xchg
in
xor
mov
xchg
or
mov
popa
cld
push
mov
fistps
push
sub
dec
jo
mov
out
out
push
sbb
adc
mov
and
lcall
add
or
mov
in
ss
add
mov
aad
por
adc
jno
add
jne
add
add
add
insl
std
cmp
sbb
push
add
inc
pop
jle
addb
jo
mov
frstor
out
std
lret
and
lret
pushw
sbb
xor
jno
xchg
push
in
jle
push
rolb
rcrl
enter
mov
lock
adc
lret
xchg
adc
mov
mov
inc
add
popa
mov
lahf
xchg
mov
jne
mov
sbb
shrl
dec
popf
notl
addb
repz
pop
xchg
ficompl
mov
arpl
pop
push
add
in
or
pop
jbe
mov
mov
mov
js
fs
fstpl
leave
aad
clc
aas
pop
jmp
std
push
pop
jge
cltd
or
mov
cli
inc
add
mov
pop
sub
pop
cmp
add
inc
sub
int
ljmp
add
jecxz
movsl
lods
xchg
or
mov
mov
add
sub
xor
add
out
pop
movsb
jg
add
jo
mov
xchg
pop
enter
lahf
jno
adc
js
popa
sub
dec
movsb
shll
adc
mov
pop
mov
mov
or
add
dec
mov
or
cmpsb
movsl
xor
fwait
pop
inc
xorl
mov
mov
add
jge
daa
xchg
pushf
push
inc
out
xor
cmpsb
inc
add
je
enter
nop
add
add
adc
mov
mov
xchg
add
mov
add
pop
sti
int
cmp
ficoms
in
add
add
mov
xchg
mov
fwait
and
mov
inc
add
sub
popa
lock
dec
test
mov
mov
add
and
add
inc
rolb
mov
add
pop
push
jno
cmp
hlt
xchg
push
add
add
out
inc
add
mov
mov
out
mov
add
mov
push
fiadds
int3
dec
push
pushf
aaa
outsb
push
mov
loope
xchg
cmp
add
cmp
dec
add
mov
popf
jns
into
xchg
jg
xor
pop
jbe
push
add
mov
xchg
pop
aas
cli
rolb
xor
mov
jge
sbb
mov
push
into
push
mov
rolb
fcoml
outsb
sub
and
clc
movsl
xor
inc
add
push
loopne
mov
bound
mov
mov
fisubl
movsb
sahf
push
cmpsl
xor
mov
sub
add
mov
sbb
sbb
push
push
dec
mov
xchg
jg
inc
add
nop
add
xchg
add
push
dec
adc
in
push
les
xor
lahf
inc
mov
ret
and
mov
dec
jle
inc
add
mov
bound
mov
stos
push
je
adc
push
add
add
bound
mov
addb
das
sub
out
push
add
ss
sti
outsb
bound
mov
rolb
mov
bound
mov
add
add
sti
rolb
mov
punpcklbw
mov
add
movsb
mov
mov
add
adc
sbb
push
rcr
mov
mov
add
jnp
sub
pop
inc
pop
fs
out
mov
jno
rolb
mov
enter
cmp
popa
xor
cli
mov
add
sbb
icebp
cld
in
lock
fistpll
add
dec
notb
int3
pop
or
inc
fcoms
add
loope
add
imul
je
mov
mov
or
mov
mov
cmc
pushf
stos
call
push
out
and
mov
mov
cmp
add
pop
mov
sti
xor
loop
mov
imul
or
pop
sub
out
add
mov
sti
xchg
cltd
int3
push
std
pop
mov
ret
mov
sub
insl
or
or
lret
dec
jae
sub
pop
fistpl
jge
mov
xor
mov
setle
mov
sub
aas
jb
mov
push
add
push
mov
mov
loop
mov
push
hlt
mov
mov
cmp
push
inc
lods
mov
add
add
cmp
sub
jae
repnz
xor
mov
push
cltd
test
int3
xchg
cmp
push
add
lcall
mov
lahf
addb
dec
cmp
dec
push
mov
jne
add
mov
out
dec
in
pop
ja
xchg
int3
xchg
or
adc
add
lret
mov
cmp
popl
rolb
popa
pop
push
and
push
or
mov
adc
xchg
sahf
mov
adc
mov
add
mov
int3
cwtl
out
add
mov
call
mov
into
pop
into
xchg
add
outsb
sahf
aad
xchg
push
sub
dec
or
mov
mov
int3
insb
mov
mov
inc
xchg
rolb
mov
jmp
sbb
pop
sub
add
inc
hlt
out
lea
mov
add
dec
jns
stc
cmp
test
mov
mov
and
push
cld
inc
add
fnsave
xor
lret
stos
stc
gs
add
add
clc
pop
hlt
dec
sbb
fdiv
add
iret
sti
sub
sub
cmp
add
jno
jmp
add
add
outsb
pop
hlt
jl
lcall
cs
xor
pop
add
mov
insl
inc
xchg
pop
mov
add
cwtl
test
scas
pop
cwtl
cmp
add
add
push
add
in
and
mov
repnz
mov
xor
mov
add
fdivl
jne
add
arpl
xchg
push
loopne
mov
dec
fdecstp
or
add
sbb
and
fmul
cld
pushf
lods
loopne
mov
and
cmp
xor
mov
sbb
xchg
mov
pop
inc
jo
mov
negb
test
mov
adc
mov
into
mov
add
mov
jne
sbb
stos
faddp
add
push
std
push
or
push
add
dec
fildl
std
addb
jl
loopne
mov
sub
add
imul
add
call
or
in
fcmovnu
cli
leave
rcll
leave
test
mov
popa
rcll
mov
mov
jno
leave
fs
out
in
clc
xchg
cmp
xchg
inc
add
bound
mov
cmp
add
sbb
add
add
pop
cmp
cmpsl
dec
pop
mov
pusha
add
add
iret
lock
and
dec
cld
jp
stos
sub
div
aam
add
repnz
mov
aaa
jmp
sub
mov
add
add
bound
mov
xchg
cmp
loope
push
inc
add
add
mov
mov
inc
repz
pop
mov
mov
loope
or
push
add
mov
ljmp
lcall
add
sub
and
add
mov
push
push
pop
and
cs
mov
add
and
int
push
add
dec
inc
repnz
in
idivb
cmpsb
push
add
stos
out
sub
sahf
lcall
ljmp
mov
sub
add
add
xor
mov
dec
mov
mov
aad
data16
mov
add
mov
aas
push
add
adc
mov
mov
mov
ds
test
mov
mov
push
sbb
mov
jbe
ljmp
push
cltd
jle
xor
push
mov
scas
mul
es
add
add
sub
xchg
add
adc
pop
inc
mov
xchg
inc
push
mov
mov
xor
mov
add
popf
pop
loop
mov
les
inc
jne
std
cmc
cli
jp
sub
push
xchg
pop
nop
add
push
inc
aam
scas
and
push
rolb
mov
les
sbb
shll
jmp
sub
lods
aas
cmp
jns
outsl
cmpsb
xlat
mov
push
add
adc
add
and
lock
rolb
mov
ja
inc
add
mov
jb
mov
mov
aas
mov
adc
mov
xchg
pop
push
pop
cmp
iret
jmp
add
sub
xor
mov
mov
mov
nop
add
xchg
mov
mov
mov
dec
sub
add
in
ds
pushf
mov
mov
sub
mov
inc
mov
ret
sahf
sub
fistps
push
movsl
xlat
rolb
mov
es
and
dec
addb
pop
push
fsts
jo
mov
lock
ljmp
add
add
jge
mov
add
mov
cmp
fdivrs
sub
pop
pop
leave
or
cmp
add
mov
and
mov
bound
mov
mov
mov
mov
addr16
nop
add
decl
inc
add
add
cmpsl
mov
mov
addb
jo
mov
outsb
rolb
mov
scas
cmpsl
dec
xchg
xchg
repz
cs
addb
fcoms
into
addr16
popf
jmp
and
lds
push
and
push
or
lds
cmp
push
loop
mov
xchg
jae
xchg
mov
inc
cmp
cmp
xor
mov
mov
fistpl
inc
movsl
mov
jb
mov
outsb
mov
inc
push
icebp
aas
fdivrs
mov
xchg
aaa
and
aad
cwtl
jecxz
rolb
and
mov
mov
into
jmp
xchg
enter
dec
pop
push
jge
into
ret
cmp
inc
nop
add
mov
push
push
fistps
cwtl
jb
mov
fwait
fwait
or
cmp
mov
mov
push
or
mov
lea
ja
ljmp
add
cwtl
lods
inc
xlat
lcall
add
adc
test
add
add
call
or
dec
rolb
mov
jle
add
inc
add
sub
cmp
add
pop
xlat
sbb
ret
or
push
cmpsb
sub
dec
mov
mov
pop
cmpsb
add
add
fimuls
into
outsl
push
repz
out
mov
rcl
jg
mov
dec
mov
les
add
mov
inc
add
mov
add
stos
sbb
push
imul
test
int
push
jecxz
adc
clc
sub
movsb
mov
add
mov
mov
cwtl
xchg
les
mov
fabs
cmpsl
dec
add
lret
add
mov
xchg
dec
js
sub
add
adc
mov
add
adc
mov
and
nop
add
pushf
mov
fsts
mov
xchg
pop
outsl
lret
mov
jmp
in
and
mov
jecxz
add
out
out
sbb
dec
repz
add
dec
popa
cmc
jbe
icebp
xchg
pop
test
arpl
mov
call
xchg
lret
push
rolb
mov
ja
rolb
mov
jmp
inc
sbb
mov
xchg
xchg
pop
push
bound
mov
and
jae
addr16
add
dec
decl
xchg
scas
or
testl
rolb
int
sbb
mov
rolb
or
add
mov
inc
push
sub
or
push
lock
cmc
das
pop
sub
and
add
push
add
mov
mov
rolb
mov
bound
mov
leave
ret
dec
setbe
popa
imul
sub
mov
xchg
lods
cmp
mov
xchg
xchg
inc
xor
xor
xchg
add
ret
add
mov
fcomps
rolb
mov
add
call
add
push
dec
and
mov
add
mov
or
int
sub
or
idivb
pop
rorl
les
movsb
jae
dec
mov
mov
jp
out
add
mov
fdivr
insb
or
pop
or
sbb
add
push
mov
add
inc
add
sbb
cmpsb
ljmp
adc
inc
sbb
add
dec
dec
cmp
dec
les
xchg
loope
cmpsb
sbb
add
add
mov
hlt
aam
mov
jg
lods
scas
jl
xor
popa
dec
pop
adcl
or
mov
test
fwait
sub
add
fld
add
mov
std
dec
and
mov
or
xchg
adc
mov
add
mov
roll
add
cmp
sbb
mov
bound
mov
add
add
dec
aas
aas
adc
add
xor
mov
add
or
test
out
imul
in
es
push
fisttps
lock
pop
mov
das
daa
pop
and
addr16
clc
lret
fildl
and
sbb
adc
imul
mov
mov
arpl
add
pop
js
push
and
add
jnp
fsub
push
push
dec
outsb
rolb
mov
test
push
movsl
loop
mov
sub
xlat
mov
add
sub
add
mov
mov
outsl
mov
pop
push
mov
add
mov
into
hlt
clc
pop
xchg
add
mov
sbb
add
es
fld
adc
cmp
push
add
dec
fwait
test
hlt
mov
out
jb
mov
add
sbb
aaa
test
adc
test
xor
inc
jne
out
not
ret
ja
pop
dec
pop
lcall
mov
add
mov
cmp
and
mov
mov
mull
mov
or
dec
addb
mov
add
scas
mov
pop
mov
jb
mov
add
mov
decb
and
sub
lock
add
jne
mov
sub
or
cmp
add
mov
aam
mov
mov
mov
cmp
add
xor
mov
add
push
orl
fmulp
push
add
ja
ret
jbe
inc
aad
mov
mov
add
imul
add
jns
add
sbb
jne
gs
mov
mov
add
xor
mov
dec
popf
adc
int
movsl
out
pop
push
sbb
pop
aam
inc
adc
mov
push
fsubp
push
ret
test
xor
daa
rolb
mov
add
cmc
es
mov
inc
push
mov
lds
push
out
out
lret
add
mov
mov
dec
jo
mov
cli
add
mov
add
cmpsb
lods
push
fimull
jp
push
rep
fbstp
jbe
les
dec
mov
int3
pop
add
gs
add
das
jb
mov
jl
and
mov
int
rolb
mov
stos
out
lock
pop
jp
mov
in
mov
shll
and
xor
pushf
adc
mov
int3
pop
adc
mov
fdivrp
pop
fdivrs
ljmp
add
out
push
add
mov
or
add
and
add
stos
mov
xor
and
hlt
cmp
add
scas
xchg
mov
arpl
into
les
xchg
sar
sbb
out
add
mov
outsb
cmp
add
xlat
jp
repnz
pop
sbb
mov
dec
cmp
sbb
xor
mov
popl
jge
leave
ret
mov
push
xchg
add
add
sub
sbb
mov
xlat
xchg
or
stos
popa
scas
mov
repz
add
test
add
push
add
mov
arpl
add
add
cwtl
xchg
rcrl
in
add
push
ja
test
test
sub
mov
fnstenv
mov
add
add
add
add
xchg
cli
push
call
mov
xchg
add
in
jo
mov
add
daa
or
xchg
add
movb
clc
and
mov
sahf
or
loopne
mov
add
adc
add
sbb
mov
and
push
imul
stc
popa
add
xor
add
lods
add
mov
test
loop
mov
dec
mov
and
xor
xchg
inc
addr16
xor
rcrl
add
mov
mov
rolb
ss
icebp
inc
cmpsb
stos
stc
mov
mov
dec
pop
test
add
ficoms
add
sbb
mov
loop
mov
aad
add
or
loopne
mov
xchg
arpl
add
mov
mov
mov
sub
rolb
mov
add
jbe
rolb
mov
sbb
sbb
and
leave
xlat
and
mov
mov
push
popa
jno
clc
mov
add
mov
mov
repnz
xor
adcl
mov
les
in
add
repz
add
mov
fiadds
mov
add
xchg
mov
add
jae
add
push
jmp
insb
cmp
aad
inc
mov
mov
pusha
add
mov
add
mov
rolb
ret
ja
dec
fwait
daa
xor
mov
mov
push
add
adc
mov
jnp
leave
pushf
rolb
mov
fldenv
cmp
xchg
lret
sahf
repnz
out
add
add
add
stos
adc
mov
add
mov
in
cmc
inc
stc
into
adc
cmp
mov
inc
aas
dec
les
push
cmp
bound
mov
cli
adc
mov
mov
mov
jg
pop
call
mov
out
add
mov
jp
popa
sbb
movb
ret
jne
push
push
add
lea
mov
adc
pop
mov
outsl
pop
lock
cmpsl
push
rolb
dec
icebp
jb
mov
add
jle
mov
pop
cmp
out
pop
dec
mov
add
addb
sti
inc
sahf
xor
mov
std
test
outsb
dec
test
add
pop
jns
push
and
pop
and
mov
imull
add
mov
daa
sub
fcomps
test
mov
xor
mov
bound
mov
mov
add
mov
jecxz
loop
mov
pop
es
add
mov
ss
dec
test
push
cld
ds
test
ds
mov
sbb
add
add
insl
jecxz
faddp
sub
fists
add
add
mov
add
sbb
mov
adc
mov
dec
mov
sub
sub
xor
mov
mov
loopne
mov
pop
fisttps
sub
ds
arpl
mov
fbstp
mov
xchg
pop
jecxz
mov
add
pop
loope
in
xchg
dec
jne
addb
cltd
push
or
add
push
push
shrl
sbb
xchg
sbb
cmp
mov
pop
mov
mov
push
je
push
add
jb
mov
add
jl
nop
add
pop
dec
pop
and
mov
inc
test
mov
sbbl
mov
sub
push
add
jae
testb
mov
xor
es
mov
xchg
or
mov
xor
push
out
data16
mov
imul
pusha
add
jno
and
xchg
movsl
push
nop
add
add
mov
mov
push
xor
mov
mov
cld
in
pop
push
xor
out
out
arpl
rolb
mov
movl
out
xchg
add
cld
push
test
cmp
push
add
test
insb
push
pop
loop
mov
xor
push
pop
xchg
add
js
mov
add
push
add
jne
xor
sub
add
nop
add
jnp
js
add
cmp
push
fdivs
dec
int3
arpl
cmp
jne
mov
and
mov
mov
inc
popf
mov
int3
fldl
pop
push
add
and
sbb
mov
sub
add
and
mov
push
dec
scas
sbb
out
jl
loope
add
aaa
or
shrl
pop
popa
mulb
fisttpll
xor
mov
je
add
jle
add
mov
jecxz
jb
mov
jp
cmpsl
gs
ss
out
add
pop
inc
mov
mov
push
mov
fadd
pop
in
outsl
lea
sti
lea
add
push
add
mov
jbe
sub
xchg
ss
or
insb
xchg
add
cld
test
fnstcw
cld
push
inc
shll
daa
pop
push
sub
mov
arpl
mov
scas
xor
and
mov
add
mov
mov
cmp
xchg
pop
and
cmp
lods
int3
cwtl
scas
dec
mov
test
sub
nop
add
call
fsubr
repz
jno
push
xchg
dec
es
add
jp
push
cmp
add
add
add
ja
cmpl
mov
mov
hlt
adc
lods
pop
in
and
mov
mov
or
aam
jbe
repz
dec
push
addb
dec
ss
jmp
add
add
xor
inc
dec
mov
pushf
sbb
std
sbb
push
add
scas
lock
arpl
add
lds
mov
push
mov
gs
mov
mov
jl
add
jno
add
and
ljmp
pop
pop
stc
cmpl
push
add
adc
mov
movsb
addr16
add
sahf
xchg
in
jg
rolb
mov
dec
loope
bound
mov
addb
mov
mov
imul
adc
dec
xchg
add
lret
in
push
add
cs
out
push
fstl
stc
es
add
mov
mov
outsb
je
js
mov
frstor
pushf
mov
add
call
js
jns
mov
mov
sahf
adc
inc
inc
iret
fsubrs
inc
add
mov
add
mov
add
mov
loop
mov
int3
mov
mov
fistps
mov
push
aaa
inc
mov
lcall
mov
fimuls
ljmp
cmp
sbb
je
mov
gs
xlat
clc
add
mov
add
sub
cmp
add
add
xor
mov
clc
cs
mov
or
cltd
pop
fwait
pop
sbb
add
and
cltd
xor
mov
addb
xor
push
and
mov
scas
dec
jp
pop
push
je
xor
movl
ss
add
leave
inc
pop
lcall
ds
xchg
test
cmp
inc
mov
dec
imul
add
data16
pop
int
ljmp
dec
adc
js
push
xor
lds
rolb
mov
xor
mov
mov
add
jne
add
xchg
pusha
add
aad
mov
filds
and
shll
or
mov
rolb
das
sub
xchg
add
xchg
rep
jmp
xlat
fidivs
mov
cld
xchg
add
enter
mov
xor
sahf
push
add
add
mov
adc
gs
dec
out
mov
cmp
mov
movsb
daa
addb
adc
jmp
lahf
xor
xchg
add
nop
add
inc
add
test
jb
mov
shl
mov
add
dec
cmp
mov
push
inc
add
push
push
push
in
mov
mov
add
add
fistl
mov
inc
addb
adc
xchg
ret
int
push
add
lahf
std
cmp
movsb
lock
gs
mov
in
pop
mov
lea
dec
cwtl
jne
xchg
add
adc
leave
or
jae
fxch
or
push
std
lds
cmp
std
sbb
out
jp
les
mov
or
popa
lcall
push
add
jecxz
mov
add
xor
mov
sti
push
and
sub
cmp
add
insl
jmp
mov
mov
stos
test
push
fwait
out
lret
push
fisttpl
decl
and
mov
mov
sahf
xor
dec
jecxz
lahf
push
stos
pop
inc
mov
into
int
das
daa
pop
js
add
mov
imul
sub
into
xchg
pop
cmpl
push
add
stc
rorl
fbld
add
xor
call
xchg
addb
adc
mov
push
adc
movsb
cwtl
fidivrs
mov
mov
push
mov
mov
mov
or
mov
mov
jb
mov
push
cld
rolb
mov
add
mov
hlt
and
mov
js
xchg
mov
mov
mov
idivl
add
mov
in
xchg
sti
int3
push
cli
cwtl
test
out
xchg
cmpl
sub
inc
xlat
jecxz
mov
adc
add
popf
pop
stos
imul
outsl
insb
inc
out
fdivrl
xchg
and
outsl
push
lret
add
pop
push
stc
pop
rolb
mov
add
mov
mov
push
or
add
test
mov
xchg
bound
mov
jne
lcall
mov
mov
jb
mov
mov
mov
add
mov
jbe
inc
pop
mov
frstors
xor
aas
mov
sub
add
leave
mov
mov
sbb
cmp
scas
ss
sub
cmpxchg
mov
imul
dec
sbb
mov
push
add
add
adc
sti
cmp
sub
bound
mov
fcmovb
outsb
lods
or
pop
jno
lahf
lods
decb
push
push
loopne
mov
add
add
loope
rolb
mov
movsb
jl
or
rolb
mov
pop
mov
cltd
adc
jl
add
xchg
sbb
repnz
jg
xlat
and
mov
add
pop
cmp
mov
or
sbb
addr16
fdivrl
scas
dec
mov
sub
dec
loope
add
cmp
repz
ficomps
sbb
add
jne
cli
pushf
inc
cwtl
test
sbb
mov
dec
mov
mov
push
xchg
fisttps
mov
in
cmp
add
and
sub
lahf
dec
scas
push
icebp
rolb
mov
cmpsb
mov
out
js
jnp
pop
test
push
lds
sbb
dec
or
push
mov
mov
add
insl
mov
and
and
sbb
and
and
push
jns
loop
mov
and
dec
ret
xor
pop
or
jo
mov
mov
jl
adc
mov
cmp
add
lods
sbb
inc
lock
incb
xor
hlt
jg
xor
push
mov
cltd
push
mov
push
std
cmpsb
icebp
mov
xchg
movb
mov
fs
jle
add
sahf
gs
xlat
jnp
pop
pusha
add
icebp
cmc
xchg
add
mov
dec
adc
adc
loope
sbb
pop
out
loop
mov
sub
push
in
pop
add
inc
fsubl
add
mov
and
int3
fnstsw
mov
mov
das
sub
add
test
add
andl
mov
mov
and
iret
ret
jg
popa
inc
dec
fs
xlat
mov
add
add
out
add
ja
pusha
add
mov
mov
mov
mov
mov
push
mov
mov
xchg
and
adc
pop
int3
icebp
dec
push
pop
lods
mov
mov
jo
mov
mov
add
mov
cmc
xlat
adc
mov
js
push
add
or
add
mov
gs
add
mov
push
test
into
inc
negl
mov
mov
add
and
mov
or
add
nop/reserved
mov
addb
xor
test
and
mov
fcmovu
cs
aam
xlat
cmp
lods
push
aam
rorl
add
ss
xor
fidivrl
and
mov
mov
add
add
mov
add
pop
dec
sti
cmp
sbb
mov
add
mov
aad
add
ljmp
and
dec
mov
add
push
ds
rcrl
iret
je
sbb
xor
popf
pop
or
sub
add
add
add
add
mov
loope
jp
xchg
push
xrelease
inc
sub
adc
icebp
stc
in
movsb
xchg
add
add
pop
rolb
push
xor
push
add
int
mov
ficoml
and
jne
mov
popa
out
jp
add
stos
fsubrl
mov
add
add
fstps
fs
ljmp
add
insl
sbb
and
mov
out
xlat
and
push
loope
add
push
sahf
out
add
mov
jle
mov
add
add
in
xor
mov
icebp
out
mov
mov
xchg
sbb
mov
mov
inc
in
dec
repz
pushf
repz
and
daa
jecxz
fidivs
mov
mov
vmovss
adc
mov
add
add
mov
jbe
out
iret
stc
add
mov
xchg
xchg
movsb
push
dec
pop
int3
fcomps
pop
fbstp
testl
imul
add
add
and
mov
add
mov
add
sbb
xchg
add
lods
mov
mov
test
push
cmp
mov
hlt
mov
jge
js
fidivs
push
and
add
loopne
mov
fimuls
pusha
add
mov
adc
add
lds
push
xor
mov
addb
push
push
cmp
mov
scas
pop
sub
jecxz
ds
jb
mov
cmp
aas
jl
add
mov
fildll
pop
and
and
pop
inc
movl
jle
adc
xchg
sti
pop
loop
mov
xchg
push
loop
mov
leave
aaa
fsub
add
imul
cmc
mov
lahf
movsb
adc
and
mov
sbb
jae
insb
mov
push
add
mov
add
mov
fwait
test
frstor
dec
fldl
add
fidivl
gs
scas
cmpsl
dec
cmp
outsl
dec
xchg
rolb
mov
sbb
mov
adc
inc
dec
enter
sahf
xchg
fisttpll
inc
fstpl
sbb
add
mov
leave
enter
mov
sub
test
sbb
mov
setle
add
mov
mov
jge
imul
je
bound
mov
xchg
adc
dec
adc
fucomip
adc
add
add
lcall
js
add
add
push
jns
mov
push
adc
pop
fisttps
mov
mov
jnp
cs
add
js
add
and
mov
test
mov
jne
out
xchg
xor
mov
addr16
mov
mov
push
adc
mov
jb
mov
test
popl
pop
inc
idiv
mull
addr16
mov
push
adc
push
popf
sahf
mov
addr16
fs
add
pop
cwtl
lret
mov
jmp
add
mov
mov
sbb
mov
out
lret
mov
ds
dec
insl
nop
add
and
test
add
mov
add
sub
in
addr16
cmc
faddp
push
in
pop
push
jmp
add
lret
negl
xor
daa
js
iret
mov
fwait
lock
add
iret
xor
push
fistps
xchg
xor
mov
sahf
push
inc
add
cs
add
sub
sbb
lahf
dec
dec
fimuls
fidivrl
rolb
mov
fcoms
mov
sub
adc
mov
jbe
pop
cmp
mov
mov
mov
jmp
lcall
aaa
lret
aam
not
add
jns
add
add
adc
mov
dec
test
dec
in
add
scas
mov
arpl
sahf
icebp
sbb
add
jns
push
dec
inc
add
mov
adc
rolb
mov
adc
mov
jne
test
mov
mov
ljmp
or
pop
in
icebp
daa
adc
lcall
addb
iret
inc
in
stos
push
mov
dec
decb
hlt
aam
cmp
jo
mov
lock
mov
mov
dec
push
inc
pop
jp
cli
jmp
fwait
sbb
mov
inc
add
mov
in
cmp
jmp
repnz
sahf
shl
add
scas
inc
pop
rolb
imul
ss
jb
mov
pop
test
out
sahf
xor
mov
nop
add
les
add
mov
push
fiaddl
pop
add
mov
add
stc
add
mov
mov
and
or
mov
adc
mov
jl
add
mov
nop
add
mov
add
mov
or
adc
mov
adc
jmp
mov
pop
jne
sbb
add
mov
cmpl
loop
mov
movsb
and
cwtl
pushf
pop
icebp
ja
lea
lods
jmp
cmpsb
xlat
xchg
inc
mov
jo
mov
jb
mov
cmp
dec
rolb
inc
adc
or
cmpsl
mov
jns
add
push
xor
push
aas
mov
add
xor
add
pop
aad
add
out
into
jl
mov
movsl
inc
add
ja
inc
add
mov
cmp
pop
rolb
mov
sbb
pushf
testl
insl
repnz
mov
bound
mov
lea
out
add
mov
cmpsb
and
cltd
div
shl
bound
mov
xchg
xchg
pop
insl
and
cs
cwtl
addr16
cmpsb
lret
mov
inc
add
mov
addb
pop
js
imulb
aam
fwait
lret
add
mov
hlt
addr16
fsubs
stos
sub
add
jb
mov
adc
mov
std
bound
mov
push
adc
mov
fs
aad
fwait
sub
cld
nop
add
add
fidivs
pop
rolb
mov
mov
mov
mov
jne
stos
lea
pop
cmp
scas
adc
mov
mov
cmp
addb
sbb
out
xor
aaa
arpl
sbb
pop
imul
push
add
clc
movsl
insb
jmp
fdiv
push
pushf
insb
xor
mov
je
mov
daa
jecxz
addr16
mov
pop
sbb
psubusb
mov
adc
mov
add
cmp
arpl
pop
lret
sahf
addr16
ret
pop
cmp
push
mov
mov
mov
rolb
jl
xsaves
sub
add
dec
imul
xorl
ja
clc
adc
add
add
movb
lock
add
cmc
or
cltd
fdivrs
testl
add
pop
cld
cmc
in
xchg
add
imul
mov
mov
in
push
pop
xchg
call
sub
cwtl
popa
and
add
gs
fs
mov
mov
inc
xchg
mov
aam
mov
addb
cmp
xor
xchg
cmpsl
enter
out
fs
mov
divl
add
add
add
test
inc
addb
inc
jno
add
ja
pop
aad
push
mov
pop
rolb
mov
popf
push
pop
mov
push
add
adc
mov
push
mov
add
mov
inc
add
pop
roll
bound
mov
and
gs
xor
jnp
add
arpl
sbb
fucom
xor
addb
cmp
sbb
add
mov
dec
xor
adc
fisubl
aam
lahf
scas
mov
adc
mov
inc
daa
mov
or
xchg
shll
push
add
aad
add
add
xlat
mov
mov
test
add
mov
mov
movsl
and
mov
mov
dec
sub
add
enter
out
hlt
mov
mov
sub
mov
out
fidivs
add
sub
add
cs
cs
sbb
push
lret
sbb
mov
rolb
or
call
mov
lret
sub
imul
mov
add
aas
sub
ret
dec
and
add
repnz
clc
jp
fstpt
and
mov
add
add
das
testl
add
mov
ret
pusha
add
mov
jne
jae
mulb
add
lret
mov
jmp
roll
int
pop
test
les
les
xor
lret
loop
mov
mov
add
add
cmp
es
mov
jne
push
addr16
inc
add
dec
jmp
xchg
mov
add
pop
push
loopne
mov
test
jge
adc
pop
lahf
cli
mov
add
popa
mov
and
jae
add
mov
pop
ds
outsb
lret
add
out
mov
mov
cmp
add
push
pop
push
xchg
add
mov
addr16
fbld
jo
mov
xchg
stos
jbe
cmp
add
pop
cmp
jmp
jge
add
pop
outsb
out
ds
adc
xchg
out
out
inc
add
mov
xchg
dec
fwait
bound
mov
pop
outsb
mov
mov
sbb
mov
cs
add
call
pop
in
mov
jecxz
addb
scas
cmp
mov
mov
push
nop
add
add
shl
sbb
and
mov
fs
add
jae
jb
mov
dec
jo
mov
fcoms
inc
jns
xor
adc
sti
enter
mov
cmp
push
icebp
push
sub
mov
jae
jnp
nop
add
or
cmp
stc
subl
cmpsb
or
add
mov
in
mov
add
mov
int3
je
test
cmp
add
add
or
mov
je
cmp
mov
cmp
inc
add
xchg
cmp
mov
xor
in
add
add
test
jle
add
mov
mov
test
imul
add
cmpsb
add
sbb
mov
cld
imul
add
mov
test
mov
adc
mov
xor
mov
mov
stos
sbb
dec
fsubs
mov
mov
mov
mov
jo
mov
mov
mov
mov
mov
mov
mov
arpl
ret
in
cwtl
sbb
mov
lea
scas
xchg
cmp
outsb
dec
mov
mov
mov
fmulp
lds
pusha
add
into
mov
jmp
lahf
jae
adc
mov
xor
sbb
popf
test
add
fmulp
mov
mov
mov
cmp
mov
loope
aas
jge
mov
mov
clc
dec
call
mov
add
cltd
mov
ja
push
add
fs
add
mov
sbb
jb
mov
xchg
movsl
mov
mov
add
mov
mov
stos
clc
rolb
jecxz
or
jecxz
push
add
add
test
push
add
cmpsl
cwtl
daa
cs
add
jg
xchg
mov
shr
lock
std
and
es
xchg
rolb
mov
xor
mov
sbb
sub
sbb
or
add
add
fs
xor
mov
add
jno
fldenv
inc
mov
mov
int3
and
mov
repnz
arpl
mov
push
mov
adc
mov
and
std
push
jb
mov
mov
mov
add
jle
and
mov
repz
sub
out
jno
add
daa
scas
lock
xchg
mov
add
fadd
repz
and
fists
mov
dec
mov
test
mov
mov
xor
mov
pop
sbb
xor
mov
or
jnp
loopne
mov
add
jbe
cmp
mov
movswl
mov
sarl
push
mov
imul
add
push
push
idivb
mov
sbb
popf
xchg
pop
and
dec
sub
add
push
movsb
push
leave
xchg
adc
mov
push
add
sub
add
sahf
loopne
mov
add
mov
inc
cld
in
stos
xor
lea
pop
mov
popf
xchg
rolb
call
outsl
ds
push
fwait
stc
xchg
push
decb
ja
jl
xor
mov
mov
in
adc
jnp
fwait
jle
xor
fisubs
mov
movaps
and
mov
add
push
add
add
ret
bound
mov
inc
lret
push
mov
adcl
mov
stos
xor
xchg
mov
cmp
pop
sub
lods
vzeroall
fwait
mov
mov
addb
and
add
add
popf
sub
inc
repz
mov
addb
testl
aad
xchg
add
imul
pushf
call
add
mov
sub
add
mov
fdivp
and
mov
mov
mov
add
and
mov
jns
dec
ret
inc
add
loopne
mov
mov
inc
add
mov
mov
add
mov
shrl
int
lea
dec
loop
mov
xor
mov
adc
fisttps
stc
outsl
jne
icebp
push
add
scas
std
call
xor
mov
in
std
imul
xor
rolb
mov
jmp
add
sahf
out
or
fmulp
pop
int
js
insb
or
cs
mov
mov
aam
into
imul
jne
jae
push
pusha
add
daa
call
shrl
sahf
fwait
lods
push
int
out
out
scas
pop
lods
dec
mov
cwtl
aad
inc
addb
aam
inc
add
add
add
adc
mov
or
jecxz
aam
pop
fwait
iret
mov
mov
cwtl
lods
pop
lock
add
mov
push
add
mov
mov
jg
lret
add
mov
mov
test
add
push
add
jb
mov
mov
add
mov
mov
jecxz
jmp
mov
inc
pop
cmp
lods
into
js
xchg
add
decl
add
imul
add
cld
xor
test
int3
mov
cmp
add
jge
imull
pop
adc
mov
cli
inc
fwait
aas
enter
xor
mov
and
or
in
pop
scas
outsl
fcomps
popa
jl
cmpsb
push
mov
scas
cmpsl
push
std
adcl
pusha
add
jbe
cli
mov
inc
sub
push
xor
ljmp
mov
push
in
hlt
jno
sbb
lods
mov
dec
mov
sub
add
adc
xchg
push
icebp
outsl
mov
xchg
xor
rolb
mov
add
mov
and
dec
cmp
add
mov
sahf
es
and
mov
jbe
adc
mov
mov
loop
mov
inc
mov
movb
push
shl
dec
div
xor
mov
add
push
or
ret
stos
and
mov
mov
jl
cmc
clc
mov
add
add
bound
mov
dec
mov
and
mov
imul
inc
and
mov
pop
cmp
sbb
add
in
shll
add
mov
mov
mov
cld
rolb
mov
mov
push
mov
divb
mov
idiv
push
test
testb
jl
sub
jno
mov
lea
rolb
mov
or
aas
fnsave
stos
cmpsl
push
aas
cmp
xchg
nop
add
les
out
dec
aam
add
orl
add
loopne
mov
cmpl
sbb
lods
mov
ficoml
mov
fisubrs
mov
mov
add
xor
mov
mov
adc
and
mov
add
mov
mov
mov
adc
mov
jnp
in
adc
sub
mov
loop
mov
outsb
xchg
out
push
dec
inc
add
xchg
add
push
jne
rol
mov
mov
movsl
mov
mov
mov
not
movsb
adc
mov
rolb
xor
dec
xor
jae
inc
mov
xor
mov
mov
lea
sti
add
mov
or
mov
iret
pop
dec
adc
hlt
ds
dec
test
xor
mov
add
add
push
xor
push
sub
ss
dec
inc
pop
mov
sub
rolb
or
add
mov
and
add
cmp
add
lods
adc
pop
lds
pop
dec
push
jns
ljmp
addl
sbb
add
sub
arpl
test
pusha
add
sub
sbb
bound
mov
sub
xor
inc
pop
sub
in
rcrl
rolb
dec
pop
cli
sbb
jno
mov
les
xor
adc
mov
mov
js
clc
add
jno
dec
out
mov
mov
fcomp
stos
sbb
cwtl
jmp
xorl
mov
adc
pop
dec
popf
mov
test
push
or
nop
add
and
add
push
mov
sub
fnsave
mov
xorl
rolb
fcmovb
add
aam
cltd
add
mov
lcall
add
les
fcmovnbe
add
mov
mov
mov
aam
add
push
mov
rcrl
mov
ljmp
dec
sub
add
ret
jmp
pop
cmp
pop
lret
or
or
movsl
lret
jle
dec
or
jbe
inc
add
push
jle
xchg
outsl
lods
xchg
mov
cwtl
jnp
ret
adc
adc
mov
or
insl
xchg
pop
sub
add
mov
cs
jp
xchg
cmp
jp
addb
ja
inc
sbb
rcrl
rolb
mov
add
clc
cmp
ret
or
sbb
push
mov
je
movsl
mov
push
andl
inc
fwait
mov
imul
ud1
jne
cs
out
dec
fiadds
and
mov
mov
int
dec
ret
repnz
repz
mov
mov
lcall
inc
int3
push
aad
bndldx
push
cli
jp
xchg
sbb
rolb
mov
add
mov
mov
jge
or
iret
loop
mov
daa
ja
ficoml
or
nop
add
lds
adc
hlt
call
mov
mov
cld
mov
nop
add
add
loop
mov
add
pop
icebp
mov
addb
add
int3
cmpsl
mov
das
adc
add
push
lds
mov
cmpsl
fimull
jl
pop
outsb
test
rolb
jo
mov
mov
and
inc
jge
sub
push
dec
add
mov
mulb
mov
mov
mov
pop
sbb
push
in
daa
lock
out
add
mov
jle
cld
sbb
sbb
adc
sbb
jae
mov
mov
mov
aas
nop
add
bound
mov
xchg
rcrl
mov
or
sbb
hlt
xchg
ljmp
roll
fs
jge
sti
movsb
cld
xchg
push
push
push
addr16
fisubs
or
clc
xchg
add
mov
mov
push
loop
mov
adc
jg
nop
add
iret
add
call
js
adc
mov
popa
in
inc
imul
mov
je
int
nop
add
xor
add
add
out
out
sbbl
mov
mov
add
push
inc
fdivs
fisubrl
leave
arpl
jns
imul
cli
in
jb
mov
mov
mov
sbb
add
sub
push
add
cmp
imul
stos
pop
loopne
mov
add
sahf
enter
enter
add
mov
mov
dec
fsts
add
dec
imul
pusha
add
out
jge
ret
push
sub
sub
sub
ss
xlat
popf
dec
sbb
add
sub
jbe
cmp
push
pop
pop
and
mov
cld
popa
stos
adcl
sub
or
imul
add
add
pushf
mov
add
aam
adc
cli
add
add
out
ja
daa
enter
std
pop
shl
xor
pop
enter
mov
addl
mov
mov
add
mov
add
fadds
mov
cmp
loop
mov
ss
add
mov
jno
add
xor
mov
xchg
mov
add
mov
mov
orl
add
bswap
scas
fldl2e
lods
out
popf
or
jnp
das
inc
dec
cld
and
add
mov
addb
jmp
fnstcw
addl
stos
push
push
cmc
lcall
push
bound
mov
lret
xor
mov
mov
aad
add
test
dec
pushf
dec
test
and
rolb
cmc
out
mov
inc
add
loopne
mov
add
and
mov
jns
jmp
sub
int3
xchg
in
pushf
xor
insl
loop
mov
add
scas
rolb
dec
adc
outsb
test
cmp
stos
jg
lret
mov
pop
push
sub
test
inc
test
inc
cmp
fwait
adcl
pop
adcl
add
fstl
int
add
lea
add
or
sbb
pop
fldenv
mov
das
cld
push
add
add
out
lcall
inc
sti
and
mov
jnp
push
sbb
je
repnz
add
add
cmp
fdivl
mov
xor
mov
or
jne
icebp
and
mov
std
mov
rolb
mov
lds
mov
mov
add
cmp
dec
cmp
sahf
aad
divb
add
push
pop
lahf
adc
mov
jg
ja
lret
into
repz
and
mov
mov
fidivrl
push
mov
in
sbb
add
pop
lock
add
xor
mov
movsl
std
cli
loope
mov
pop
mov
jnp
jb
mov
jg
enter
inc
add
rorl
or
addb
xor
mov
orl
dec
repz
sahf
leave
xchg
add
xor
mov
fsubr
sub
fistpll
mov
lcall
sub
add
sbb
mov
cmpsb
cwtl
int3
jge
ja
dec
aaa
adc
cltd
pop
outsl
xchg
cli
hlt
inc
add
test
pop
lahf
and
mov
mov
add
mov
add
mov
movsb
and
or
mov
or
mov
xor
mov
sbb
add
rolb
push
add
popf
add
add
or
dec
fisttps
mov
sub
bound
mov
pop
xor
mov
add
mov
push
adc
mov
insb
cld
mov
cmpsl
pop
dec
rolb
fisubs
test
mov
xor
mov
call
repnz
stc
nop
add
add
mov
add
mov
inc
sbb
fisttpl
arpl
add
bound
mov
mov
push
xor
mov
dec
sub
insb
and
test
adc
mov
add
enter
mov
xchg
mov
mov
pop
mov
loop
mov
ljmp
cmpsl
jl
mov
add
mov
fisubl
mov
inc
jmp
cmp
mov
mov
or
adc
notb
mov
in
mov
mov
add
sbb
add
filds
imul
mov
inc
lea
aad
out
add
inc
mov
mov
pop
cmp
xor
mov
sbb
jae
cmp
mov
add
add
add
mov
ret
loope
sub
xor
mov
mov
mov
mov
or
inc
nop
add
into
mov
push
ret
dec
daa
cmpl
inc
ds
jns
sub
repnz
jb
mov
cli
push
pushf
rcll
ret
xchg
and
data16
cmpsb
mov
mov
xlat
repz
xchg
add
mov
pop
push
stos
jl
add
lock
shll
dec
mov
mov
mov
aas
sbb
jb
mov
mov
adc
mov
pop
sbb
xchg
add
add
xchg
mov
sub
add
daa
mov
adc
mov
add
push
cmp
imul
mov
add
push
xor
add
mov
mov
mov
sub
ret
loopne
mov
add
call
mov
mov
sbb
add
test
dec
clc
insl
stos
push
add
mov
xrelease
add
lcall
loopne
mov
andl
jbe
loope
popa
mov
mov
call
xchg
jns
push
ljmp
pop
js
xchg
mov
mov
add
mov
scas
jle
or
mov
mov
lods
pusha
add
sbb
xchg
sub
add
add
lcall
mov
mov
sub
mov
test
lock
push
add
jns
mov
repnz
mov
sub
and
xchg
aad
pushf
push
add
mov
adc
add
jb
mov
std
leave
dec
lcall
mov
movsb
inc
and
add
mov
aad
mov
mov
icebp
dec
xor
add
fnstsw
xchg
add
sub
add
test
out
fldt
mov
fwait
mov
and
jge
test
add
repnz
mov
mov
jnp
mov
repz
repnz
add
leave
lret
mov
dec
mov
mov
test
mov
ljmp
mov
jmp
sub
xchg
retw
push
mov
push
loop
mov
mov
cmpsb
mov
popf
inc
jae
lret
cmp
nop
add
lahf
mov
add
lods
dec
mov
mov
add
fstl
mov
icebp
and
mov
daa
fcomps
add
stos
insb
adc
mov
aam
arpl
sub
fmul
jge
das
movsl
leave
jmp
cmp
mov
cmpsl
jnp
pop
and
enter
cmpsl
and
mov
sub
inc
sbbl
mov
imul
stc
dec
je
add
dec
clc
adc
mov
dec
sbb
xchg
push
or
fdivrs
fwait
add
mov
movl
mov
fmul
push
scas
jne
or
mov
mov
pop
push
and
add
add
sub
mov
mov
add
pop
aad
add
mov
lcall
push
add
add
jg
mull
fwait
dec
adc
mov
mov
js
dec
dec
scas
pop
sub
xor
stc
out
mov
mov
sub
fsubrp
pop
xor
fildl
xchg
cmp
addb
jb
mov
not
sbb
testl
addb
jge
insl
cmp
pop
insb
or
addb
es
push
mov
out
pop
add
mov
rolb
mov
sub
rcl
mov
or
lahf
xchg
push
xor
mov
and
mov
lock
mov
pushf
mov
and
push
insb
inc
cmp
mov
push
add
into
insb
imul
push
in
ret
cmp
dec
aaa
pcmpgtd
add
cmp
and
mov
pop
jmp
jmp
xor
dec
mov
shll
in
pop
xor
test
mov
out
jl
xchg
pop
inc
mov
mov
mov
push
add
cs
pushf
fldcw
add
mov
add
pushf
add
mov
mov
repz
sbb
pop
mov
mov
pop
push
movsl
ds
dec
cmp
lahf
nop
add
in
int
dec
jbe
add
xchg
pop
mov
mov
add
lods
pop
and
mov
jno
sbb
lcall
xchg
pusha
add
inc
sub
dec
loop
mov
fldenv
push
mov
sbb
mov
lea
lret
bound
mov
xchg
add
mov
sbb
sti
out
mov
push
adc
test
sti
fs
jne
shll
or
mov
mov
xor
mov
aam
push
xchg
add
xchg
aas
int
dec
push
sbb
lds
xchg
loopne
mov
add
and
mov
add
cmp
cmp
loopne
mov
outsb
jo
mov
add
rolb
mov
add
and
jbe
pop
enter
loopne
mov
das
sbb
inc
push
inc
jle
pop
lcall
pop
mov
insl
repnz
add
js
mov
jp
push
mov
stos
lret
out
jbe
push
dec
push
ret
mov
rolb
mov
cmp
sub
xchg
in
out
add
out
push
xchg
add
stos
enter
adc
mov
data16
cmp
mov
loope
pop
pop
aad
adc
push
les
mov
rolb
mov
mov
mov
mov
pusha
add
mov
mov
dec
inc
push
inc
dec
in
add
leave
sub
mov
xor
mov
add
ja
xor
mov
dec
cmp
mov
mov
add
pushf
push
add
cmp
aam
cltd
insb
adc
add
mov
incb
add
mov
mov
mov
mov
inc
pop
rolb
jl
add
add
stos
pusha
add
cmp
mov
cli
pop
and
aas
jle
mov
call
into
dec
aaa
or
mov
add
mov
stos
lea
mov
sub
cmp
cmpsb
out
int
add
mov
jno
jae
cmp
push
int3
mov
and
mov
inc
rolb
mov
xchg
add
add
mov
hlt
fdivs
add
add
mov
add
repnz
and
xchg
inc
or
mov
mov
add
xchg
int3
js
add
out
cmc
inc
xchg
jno
test
cltd
mov
bound
mov
cmp
add
movsb
call
cmp
enter
test
add
xchg
mov
in
or
mov
add
mov
popa
push
add
pop
xor
mov
popf
pshufw
leave
push
fsubrs
add
or
add
loop
mov
aaa
mov
cmp
add
mov
pushf
mov
cltd
push
add
dec
ljmp
add
xchg
insb
outsb
sti
xchg
shl
add
call
cltd
dec
call
pop
clc
fcoms
adc
sbb
mov
mov
in
xchg
bound
mov
mov
lods
jl
jg
lcall
rolb
sbb
pop
rolb
mov
inc
enter
es
add
inc
jp
addb
sub
cmp
pushf
into
dec
fcompl
outsl
xchg
pop
adc
popa
and
mov
movsb
xchg
dec
cmp
mov
cltd
dec
xchg
fcmovu
xor
mov
jo
mov
int3
leave
cmp
fistpll
scas
jns
out
jp
and
out
or
popa
dec
inc
mov
rolb
cmp
in
sbb
jp
dec
sti
sub
and
in
divb
mov
pop
stos
data16
mov
add
daa
adc
negl
add
mov
mov
inc
outsl
fs
cwtl
pop
ja
and
pop
in
rolb
negb
mov
add
dec
cltd
and
mov
imul
icebp
add
test
sbb
sahf
or
mov
iret
inc
test
add
pop
out
add
mov
xchg
jbe
addr16
repz
stos
xlat
inc
cmp
sbb
imul
sbb
cltd
sbb
lcall
jmp
mov
jae
cmc
stos
data16
lea
cs
dec
push
cmc
ja
mov
dec
ss
add
int3
jecxz
jae
xchg
les
popf
std
xor
mov
xchg
outsb
imul
movsl
cs
lock
cmc
mov
cmp
mov
loope
sbb
sub
add
xchg
test
roll
repz
mov
lds
mov
mov
mov
fldl
lahf
adc
add
pop
daa
adc
mov
add
mov
mov
xchg
aad
addb
int
jg
cs
rolb
mov
addr16
test
sbb
xchg
imul
fidivrl
mov
sahf
leave
mov
fldenv
add
fisttpll
mov
or
mov
lret
dec
cmc
fsts
push
cli
rolb
mov
or
xlat
add
in
xlat
outsl
test
lods
jl
jae
add
xor
mov
mov
mov
loop
mov
mov
cmp
add
add
mov
or
das
xchg
fisubrs
sbb
in
lret
cmp
cmp
dec
loope
sub
or
mov
add
out
add
adc
insb
jg
pop
loop
mov
push
add
mov
bound
mov
xor
mov
add
jns
xchg
pop
dec
xchg
out
xor
mov
test
mov
add
sahf
mov
scas
cmp
xchg
cmpsl
fwait
inc
outsl
sbb
shrl
cmp
sbb
xchg
cmp
mov
js,pn
inc
jg
addb
imul
and
xchg
sbb
adc
mov
mov
adc
int
add
add
testb
stc
lds
inc
add
in
popf
addr16
aad
pusha
add
or
testl
add
adc
outsb
ror
jae
add
mov
or
ds
fcmovb
fcomps
iret
push
add
mov
xchg
push
push
jae
clc
jecxz
add
in
push
enter
sub
jmp
add
cmp
inc
add
mov
cwtl
subl
test
adc
xor
fwait
cmp
adcl
xchg
xor
mov
cmp
mov
mov
mov
mov
mov
dec
sbb
xchg
stos
jnp
adc
mov
add
enter
add
and
addl
mov
add
int
outsl
das
test
leave
popf
pop
std
notb
test
mov
ljmp
fisubs
cmp
mov
add
cmpsl
in
add
jno
ret
mov
fnsave
das
inc
jmp
add
cs
mov
add
mov
or
xlat
hlt
enter
push
fs
add
lea
mov
test
xor
mov
mov
mov
adc
add
jp
daa
into
mov
andl
insb
pop
outsb
hlt
adc
or
xor
mov
fimuls
jmp
leave
cmp
add
test
add
iret
mov
and
pop
push
rolb
les
mov
in
cmp
dec
insb
insb
or
lea
loop
mov
mov
jge
dec
or
inc
lods
das
fs
xor
pop
pop
popa
cmp
push
in
sub
pop
gs
add
jno
in
test
mov
stos
xchg
add
out
aaa
addb
jb
mov
mov
icebp
fwait
dec
shl
pop
push
add
and
add
add
jb
mov
mov
mov
add
repnz
mov
mov
mov
add
fsubrs
test
fistl
sbb
subl
stos
sub
push
add
jno
loope
ss
andl
std
add
add
icebp
iret
sub
rolb
xchg
jb
mov
test
mov
push
daa
xor
mov
aaa
mov
push
fnstsw
lods
sarl
mov
pop
negb
xchg
sub
or
jle
xchg
xor
mov
stos
bound
mov
push
cld
mov
mov
add
pop
inc
and
mov
in
jb
mov
cmp
xor
cmp
jbe
mov
mov
xchg
add
arpl
xor
mov
add
daa
sub
mov
add
add
mov
xchg
cltd
psubusb
push
add
inc
mov
cmp
and
mov
cltd
jbe
xor
mov
test
imul
mov
sti
sbb
mov
inc
lcall
fildll
sbb
xor
sbb
addb
sbb
testb
mov
dec
xor
js
pop
push
jge
and
dec
mov
fistl
orl
repnz
data16
mov
jb
mov
fdivrs
inc
add
mov
lahf
in
mulb
add
mov
mov
add
mov
lret
sub
icebp
rolb
mov
dec
push
add
in
out
mov
jo
mov
add
std
daa
movsl
push
mov
in
ficoml
add
ja
mov
in
xor
ljmp
xchg
pop
rcr
pusha
add
sub
aas
jecxz
cmp
sbb
jns
mov
adc
mov
je
and
mov
lds
stos
add
aam
push
mov
adc
lds
push
cmp
sub
xor
and
xchg
add
ja
fsubs
inc
add
mov
cmp
lods
mov
pop
dec
mov
pop
in
sub
push
push
and
or
insl
cmc
into
sub
xchg
xor
fwait
hlt
out
scas
stos
and
int
push
push
pop
sub
jge
jg
rol
nop
add
jns
sahf
or
adc
cmp
or
mov
add
adc
fucom
add
jo
mov
mov
mov
pop
out
mov
dec
push
add
inc
outsl
cmp
add
mov
adc
cmp
cmp
add
sub
cmpsl
out
and
popf
pop
sub
xor
icebp
inc
add
mov
add
mov
fistps
xadd
cmp
imul
rcrl
imul
push
mov
cmp
xchg
jle
xchg
sahf
xor
ret
and
inc
add
xchg
or
xchg
add
add
adc
mov
lcall
andl
or
repz
add
cmp
ret
rolb
mov
adc
mov
out
outsb
insb
out
in
add
lods
jno
sbb
adc
mov
bound
mov
call
inc
or
or
sub
mov
cmc
jmp
nop
add
mov
push
sbb
pop
int3
out
je
add
add
ljmp
add
add
sysret
scas
cltd
xchg
sbb
popf
imul
inc
xchg
or
icebp
xchg
sbb
mov
add
jmp
pop
ret
sbb
cmc
fsqrt
adc
aam
lods
stos
arpl
shll
ja
add
ds
lret
add
iret
cmpsl
push
add
push
clc
fbld
adc
mov
sbb
outsw
jbe
sbb
pop
and
jno
cmp
add
adc
mov
inc
ljmp
mov
xlat
xlat
xor
mov
xor
jns
and
mov
insl
pushf
xchg
data16
add
adc
mov
add
jge
xchg
in
iret
insl
divb
dec
stos
cmpsl
pop
loopne
mov
stos
test
mov
popf
sbb
push
add
nop
add
or
add
add
clc
repnz
nop
cld
jae
test
enter
adc
repnz
nop
cld
jae
hlt
add
add
add
mov
add
nop
nop
cld
jae
jle
sldt
add
and
repnz
nop
cld
jae
add
hlt
push
cmp
repnz
nop
cld
jae
dec
add
sbb
js
sub
repnz
nop
cld
jae
fadds
dec
add
add
repnz
nop
cld
jae
push
aaa
add
mov
push
mov
xchg
ret
add
add
stos
push
push
mov
xchg
ret
add
dec
test
add
push
xor
repnz
nop
cld
jae
add
add
add
bound
mov
mov
pop
clc
repnz
nop
cld
jae
js
add
add
add
and
mov
jle
je
sub
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
dec
mov
jne
xchg
sbb
imul
and
add
int
add
cmp
sti
add
add
in
nop
leave
jmp
int
js
aam
sbb
push
mov
nop
leave
jmp
add
mov
add
clc
repnz
nop
cld
jae
arpl
cmp
add
or
mov
xchg
ret
push
add
add
add
add
cmp
stos
clc
repnz
nop
cld
jae
lock
inc
jo
mov
add
push
add
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
add
pop
out
jo
pop
add
push
mov
xchg
ret
pop
mov
add
clc
repnz
nop
cld
jae
add
int
sysenter
addb
repnz
clc
repnz
nop
cld
jae
loop
add
xor
push
mov
xchg
ret
add
mov
mov
xor
push
mov
nop
leave
jmp
add
add
loop
add
in
nop
leave
jmp
add
lock
lock
and
mov
inc
cld
add
clc
repnz
nop
cld
jae
add
je
shll
fstpt
lret
in
nop
leave
jmp
jne
loop
loop
int
push
xchg
clc
repnz
nop
cld
jae
mov
add
mov
add
add
push
mov
mov
add
add
jnp
sub
repnz
nop
cld
jae
push
jb
inc
xchg
add
sbb
mov
nop
leave
jmp
loop
xchg
add
inc
es
push
add
clc
repnz
nop
cld
jae
xchg
js
add
add
push
push
mov
xchg
ret
adc
int
mov
sub
dec
cmp
mov
nop
leave
jmp
push
mov
add
mov
clc
repnz
nop
cld
jae
add
jne
dec
add
add
add
in
nop
leave
jmp
jmp
or
test
add
clc
repnz
nop
cld
jae
cmc
add
repnz
nop
nop
cld
jae
hlt
jmp
es
mov
push
mov
xchg
ret
dec
xchg
pop
add
add
loop
push
push
mov
xchg
ret
add
pop
add
inc
mov
nop
cld
jae
out
xor
add
clc
repnz
nop
cld
jae
mov
pop
inc
test
sbb
add
clc
repnz
nop
cld
jae
add
add
cmp
jne
clc
repnz
nop
cld
jae
mov
push
push
mov
nop
leave
jmp
dec
mov
inc
add
push
push
mov
xchg
ret
dec
add
xor
add
inc
shrl
mov
clc
repnz
nop
cld
jae
ret
push
sbb
nop
nop
cld
jae
add
adc
add
cmp
mov
nop
leave
jmp
add
add
loop
push
add
push
add
add
clc
repnz
nop
cld
jae
add
add
mov
in
nop
leave
jmp
push
add
xchg
je
xor
add
add
xchg
push
add
sbb
cmc
jmp
fsubrs
push
mov
xchg
ret
mov
add
mov
nop
nop
cld
jae
add
push
ret
sub
mov
inc
add
add
add
xor
movzwl
clc
repnz
nop
cld
jae
out
out
lahf
cld
add
clc
repnz
nop
cld
jae
xor
push
add
add
movsb
stos
sub
push
mov
nop
leave
jmp
add
add
mov
add
clc
repnz
nop
cld
jae
int3
js
cmpsb
aas
xor
clc
repnz
nop
cld
jae
arpl
xchg
cmp
nop
nop
cld
jae
mov
add
adc
mov
push
mov
nop
leave
jmp
add
add
cmc
adc
stos
clc
repnz
nop
cld
jae
lahf
add
add
add
call
clc
repnz
nop
cld
jae
pop
add
xor
add
clc
repnz
nop
cld
jae
je
mov
mov
push
mov
nop
leave
jmp
int3
add
mov
clc
repnz
nop
cld
jae
js
sub
add
dec
mov
push
mov
xchg
ret
inc
mov
mov
mov
dec
shr
clc
repnz
nop
cld
jae
jo
hlt
lock
dec
push
clc
repnz
nop
cld
jae
mov
lock
mov
clc
repnz
nop
cld
jae
dec
add
inc
add
lods
add
clc
repnz
nop
cld
jae
js
add
push
mov
nop
leave
jmp
inc
add
add
push
push
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
int3
arpl
clc
repnz
nop
cld
jae
loope
xchg
ficoml
in
add
add
movsl
add
add
js
pop
add
push
mov
add
fildl
add
stos
mov
add
add
pop
pop
push
mov
xchg
ret
cmp
add
add
add
add
add
repnz
nop
cld
jae
add
lock
leave
jmp
dec
cmc
xor
add
add
pop
add
push
mov
xchg
ret
add
add
add
and
repnz
nop
cld
jae
jne
add
sbb
pop
call
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
lahf
push
mov
test
repnz
nop
cld
jae
add
add
les
clc
repnz
nop
cld
jae
dec
fmul
loope
xchg
mov
mov
add
mov
test
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
push
add
mov
cld
push
clc
repnz
nop
cld
jae
pop
test
add
add
enter
nop
nop
cld
jae
xor
add
addr16
adc
mov
add
add
add
dec
add
add
add
inc
add
decl
add
add
sbb
add
cmp
repnz
nop
cld
jae
xor
add
inc
mov
nop
cld
jae
jb
mov
add
push
repnz
add
clc
repnz
nop
cld
jae
add
aaa
jle
inc
movsb
mov
push
mov
nop
leave
jmp
add
add
push
mov
nop
leave
jmp
add
add
mov
xor
push
mov
xchg
ret
add
add
out
xchg
add
mov
mov
adc
repnz
nop
cld
jae
jne
mov
push
push
mov
xchg
ret
jle
add
inc
add
cs
push
mov
xchg
ret
add
add
jmp
clc
repnz
nop
cld
jae
add
mov
call
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
add
loope
je
dec
lea
push
mov
xchg
ret
add
jne
sub
lahf
jg
mov
add
in
nop
leave
jmp
mov
ja
call
aad
add
add
adc
dec
add
fimuls
test
and
add
repnz
nop
cld
jae
loop
inc
or
nop
cld
jae
add
mov
mov
xchg
ret
add
lahf
ss
add
add
repnz
nop
cld
jae
add
mov
mov
add
and
nop
nop
cld
jae
arpl
xchg
mov
mov
xchg
ret
add
int
pop
cmpw
push
mov
nop
leave
jmp
inc
inc
add
adc
add
pop
jae
repnz
nop
cld
jae
je
add
addl
repnz
nop
cld
jae
add
jle
add
data16
lret
mov
xchg
ret
inc
add
add
insb
add
push
mov
nop
leave
jmp
add
pop
add
add
insl
add
clc
repnz
nop
cld
jae
push
hlt
push
push
bound
mov
push
mov
nop
leave
jmp
dec
add
cmp
push
push
mov
xchg
ret
add
add
lock
mov
mov
mov
clc
repnz
nop
cld
jae
jle
add
xchg
xor
call
clc
repnz
nop
cld
jae
dec
add
xchg
jo
xlat
leave
mov
clc
repnz
nop
cld
jae
sbb
add
jl
mov
push
clc
repnz
nop
cld
jae
add
add
pop
dec
push
mov
xchg
ret
add
cmc
pop
jne
xor
xor
test
mov
xchg
ret
mov
fcoms
push
push
mov
nop
leave
jmp
mov
add
cmp
in
nop
leave
jmp
add
dec
inc
bound
jmp
int3
roll
xor
add
inc
adc
arpl
mov
push
mov
nop
leave
jmp
add
add
add
pop
or
repnz
nop
cld
jae
mov
add
int
popa
fwait
xor
clc
repnz
nop
cld
jae
add
mov
add
jne
mov
clc
repnz
nop
cld
jae
add
ret
add
mov
add
clc
repnz
nop
cld
jae
add
cmpsb
lock
add
jmp
add
add
mov
stos
clc
repnz
nop
cld
jae
add
add
out
call
push
mov
nop
leave
jmp
add
jmp
nop
cld
jae
mov
xchg
mov
std
incl
add
add
mov
xor
add
gs
clc
repnz
nop
cld
jae
add
add
add
push
xchg
dec
mov
clc
repnz
nop
cld
jae
pop
add
add
repnz
nop
cld
jae
add
int3
add
add
pushl
sar
repnz
nop
cld
jae
sldt
add
ficoms
xchg
sub
popa
add
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
test
add
add
push
mov
xchg
ret
pop
add
add
lds
mov
jmp
add
push
lahf
add
mov
dec
cmp
mov
cmp
in
nop
leave
jmp
inc
add
jb
dec
push
clc
repnz
nop
cld
jae
mov
dec
add
shr
clc
repnz
nop
cld
jae
jne
ret
inc
pop
jmp
mov
xchg
ret
add
xor
add
stc
add
clc
repnz
nop
cld
jae
lahf
inc
add
mov
add
add
mov
xchg
ret
add
add
movzwl
clc
repnz
nop
cld
jae
add
add
inc
and
mov
je
push
mov
nop
leave
jmp
add
and
push
mov
nop
leave
jmp
jb
loop
inc
add
add
clc
repnz
nop
cld
jae
jne
add
jb
mov
lds
push
mov
nop
leave
jmp
lahf
add
add
loope
je
pop
pusha
push
mov
xchg
ret
add
push
push
add
jb
rcrl
adc
repnz
nop
cld
jae
add
add
ret
movsl
or
add
repnz
nop
cld
jae
mov
pop
clc
repnz
nop
cld
jae
add
mov
loop
add
pop
pop
push
mov
xchg
ret
arpl
add
inc
lock
add
push
mov
nop
leave
jmp
adc
add
add
lock
clc
repnz
nop
cld
jae
push
add
add
push
aad
out
mov
clc
repnz
nop
cld
jae
dec
add
jne
div
clc
repnz
nop
cld
jae
push
add
add
nop
nop
cld
jae
mov
dec
add
add
add
repnz
nop
cld
jae
add
add
cmpl
push
mov
nop
leave
jmp
add
push
add
push
xchg
mov
in
nop
leave
jmp
add
cmp
int3
mov
clc
repnz
nop
cld
jae
jo
js
jne
add
mov
scas
mov
push
mov
xchg
ret
inc
add
dec
add
sbb
popa
add
out
add
xchg
add
cmp
add
add
ret
sbb
cld
jae
add
add
add
aam
inc
add
arpl
pop
jle
mov
add
test
inc
add
bound
lock
lock
mov
clc
repnz
nop
cld
jae
jo
loope
push
push
add
add
repnz
nop
cld
jae
mov
xchg
xchg
cmp
in
nop
leave
jmp
int3
int
add
lock
cltd
and
clc
repnz
nop
cld
jae
add
push
ja
add
push
mov
xchg
ret
add
add
push
add
ret
enter
or
repnz
nop
cld
jae
add
roll
inc
lret
jne
clc
repnz
nop
cld
jae
jb
dec
sbb
nop
cld
jae
jle
add
mov
repnz
nop
cld
jae
fiadds
add
ss
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
mov
add
add
scas
push
push
mov
xchg
ret
cmc
add
add
cmc
add
std
mov
clc
repnz
nop
cld
jae
add
mov
stos
clc
repnz
nop
cld
jae
mov
mov
stos
xor
clc
repnz
nop
cld
jae
xchg
add
sub
xor
ds
clc
repnz
nop
cld
jae
add
loope
cmp
add
inc
clc
repnz
nop
cld
jae
push
pop
mov
add
push
lahf
pusha
clc
repnz
nop
cld
jae
arpl
pcmpeqb
add
adc
pcmpgtd
mov
nop
leave
jmp
add
pop
cmp
and
add
jmp
add
ss
add
xchg
add
add
cmp
nop
cld
jae
mov
add
jmp
clc
repnz
nop
cld
jae
add
lahf
jb
mov
clc
repnz
nop
cld
jae
mov
hlt
lock
dec
mov
clc
repnz
nop
cld
jae
jb
mov
mov
clc
repnz
nop
cld
jae
add
inc
add
les
mov
clc
repnz
nop
cld
jae
dec
inc
mov
inc
add
push
mov
nop
leave
jmp
jne
xor
mov
add
xchg
cli
and
push
mov
xchg
ret
aaa
push
add
pop
int3
loop
add
push
mov
xchg
ret
add
add
add
aam
sub
repnz
nop
cld
jae
add
xchg
add
add
mov
add
pop
push
clc
repnz
nop
cld
jae
xor
fcomp
cmp
add
dec
pushl
push
mov
xchg
ret
sub
int3
add
cmp
add
mov
xchg
ret
cmp
add
add
adc
inc
loopne
repnz
nop
cld
jae
add
test
mov
nop
leave
jmp
add
add
ret
add
push
push
mov
nop
leave
jmp
mov
push
cmovne
add
add
sub
push
mov
nop
leave
jmp
add
add
rolb
dec
je
push
mov
nop
leave
jmp
rcll
cmp
incb
xchg
ret
xor
mov
dec
mov
repnz
nop
cld
jae
mov
add
lock
add
adc
cmpsl
adc
in
nop
leave
jmp
jne
mov
add
xor
clc
repnz
nop
cld
jae
ret
add
push
add
loopne
mov
mov
nop
leave
jmp
add
inc
mov
clc
repnz
nop
cld
jae
add
loop
lock
lahf
ljmp
jae
add
inc
add
add
jo
add
add
repnz
nop
cld
jae
add
addr16
shrl
add
cmp
popa
add
add
add
inc
adcl
nop
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
add
jb
add
xchg
icebp
inc
add
push
add
mov
add
incl
fadds
add
add
add
dec
add
movd
add
mov
xchg
ret
out
add
js
inc
jle
cmp
push
mov
xchg
ret
add
mov
add
mov
repnz
nop
cld
jae
sldt
loop
lahf
es
les
mov
mov
je
sti
je
clc
repnz
nop
cld
jae
pop
ret
lock
mov
incl
push
jmp
dec
out
inc
es
lock
std
inc
add
add
lock
add
mov
rolb
pop
push
mov
add
sub
fwait
add
add
test
test
add
add
clc
repnz
nop
cld
jae
mov
pop
inc
scas
mov
clc
repnz
nop
cld
jae
add
add
add
addb
jge
jne
push
mov
xchg
ret
mov
dec
xchg
clc
repnz
nop
cld
jae
push
inc
add
sub
mov
xchg
ret
jb
add
add
add
pop
mov
clc
repnz
nop
cld
jae
mov
add
arpl
add
add
add
ficoms
bound
mov
popa
xchg
sbb
clc
repnz
nop
cld
jae
adc
jo
out
test
nop
nop
cld
jae
add
jne
lea
test
repnz
nop
cld
jae
adc
mov
adcl
jmp
pop
lahf
add
dec
aaa
mov
push
mov
xchg
ret
loop
loop
js
add
mov
add
lcall
mov
nop
leave
jmp
add
js
and
lea
clc
repnz
nop
cld
jae
add
push
xor
add
push
mov
nop
leave
jmp
jmp
cmp
pop
cmp
mov
nop
leave
jmp
inc
add
int
add
push
add
mov
adc
repnz
nop
cld
jae
add
dec
aaa
xor
add
dec
push
mov
nop
leave
jmp
add
ret
add
add
mov
repnz
nop
cld
jae
add
xchg
add
add
movsl
xchg
popf
add
clc
repnz
nop
cld
jae
jne
push
loop
add
rol
clc
repnz
nop
cld
jae
hlt
fcomps
add
cmp
inc
push
mov
xchg
ret
add
add
lock
fimuls
in
nop
leave
jmp
lock
add
cmp
nop
cld
jae
mov
add
add
stc
clc
repnz
nop
cld
jae
add
test
jle
je
pusha
add
xchg
push
mov
xchg
ret
add
xor
add
clc
repnz
nop
cld
jae
bound
rep
clc
repnz
nop
cld
jae
add
roll
fsubs
sbb
nop
nop
cld
jae
dec
jo
jmp
clc
repnz
nop
cld
jae
jo
add
xor
adc
mov
nop
leave
jmp
add
cmp
add
xchg
fwait
mov
push
mov
nop
leave
jmp
mov
sbb
pop
push
clc
repnz
nop
cld
jae
cmc
jle
add
add
add
stc
clc
repnz
nop
cld
jae
pop
add
sbb
dec
out
inc
add
pop
hlt
add
add
xor
push
mov
nop
leave
jmp
sub
add
xchg
outsl
mov
clc
repnz
nop
cld
jae
add
dec
mov
test
nop
cld
jae
jne
jb
push
jne
add
repnz
nop
cld
jae
add
bound
push
dec
dec
mov
clc
repnz
nop
cld
jae
inc
bound
cmp
mov
push
mov
xchg
ret
aaa
add
jmp
and
stos
pop
clc
repnz
nop
cld
jae
add
add
arpl
sbb
jl
inc
add
add
cmpsl
and
inc
push
mov
nop
leave
jmp
int
inc
add
jae
rep
push
mov
xchg
ret
mov
dec
dec
add
lock
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
jmp
rcrl
ret
add
mov
inc
add
mov
add
hlt
cmp
sar
repnz
nop
cld
jae
fadds
add
repz
repnz
nop
cld
jae
es
xlat
ss
movl
add
rorl
cmp
xchg
out
clc
repnz
nop
cld
jae
xor
orb
add
clc
repnz
nop
cld
jae
out
add
mov
add
add
cltd
cld
repz
shll
les
add
fiaddl
xchg
ret
jo
add
add
adc
repnz
nop
cld
jae
mov
add
cmp
adc
mov
nop
leave
jmp
add
push
lock
add
cmp
inc
add
cmp
inc
mov
add
mov
clc
repnz
nop
cld
jae
xor
jo
lahf
mov
push
mov
xchg
ret
add
add
mov
incl
add
jo
loop
lock
add
jmp
add
mov
add
mov
lock
int
or
test
add
clc
repnz
nop
cld
jae
lahf
mov
xchg
mov
outsl
call
clc
repnz
nop
cld
jae
add
add
in
add
add
int
add
add
fbstp
clc
repnz
nop
cld
jae
pop
add
cltd
rep
clc
repnz
nop
cld
jae
jne
add
fadds
out
and
mov
push
add
shl
clc
repnz
nop
cld
jae
inc
lahf
js
adc
addb
inc
and
mov
clc
repnz
nop
cld
jae
add
dec
out
add
or
pop
and
repnz
nop
cld
jae
add
roll
add
add
push
mov
nop
leave
jmp
add
sub
mov
clc
repnz
nop
cld
jae
adc
mov
incl
add
sldt
int3
add
jb
roll
lock
pusha
push
mov
nop
leave
jmp
add
inc
add
out
mov
shr
clc
repnz
nop
cld
jae
cmp
aaa
add
ficomps
pop
adc
add
add
pop
cmc
add
add
bound
enter
nop
nop
cld
jae
fadds
cmp
xchg
int
add
clc
repnz
nop
cld
jae
add
js
lock
mov
in
mov
roll
add
add
or
add
movsl
rcrl
nop
cld
jae
jb
inc
pop
add
add
nop
add
nop
nop
cld
jae
add
inc
add
mov
push
test
add
mov
push
mov
xchg
ret
push
add
roll
rorl
mov
mov
add
add
leave
jmp
mov
sub
add
clc
repnz
nop
cld
jae
add
js
add
xor
popl
clc
repnz
nop
cld
jae
add
lock
add
mov
push
mov
nop
leave
jmp
cmc
add
int3
jb
es
and
clc
repnz
nop
cld
jae
lahf
int3
add
aaa
bound
test
repnz
nop
cld
jae
xchg
mov
jae
add
clc
repnz
nop
cld
jae
push
add
xor
inc
in
mov
xchg
ret
cmp
add
add
int3
pop
add
push
mov
xchg
ret
add
add
pop
lock
push
nop
cld
jae
dec
loop
add
mov
push
mov
xchg
ret
add
js
mov
add
in
push
push
mov
xchg
ret
push
add
es
add
imul
add
add
repnz
nop
cld
jae
jmp
mov
nop
leave
jmp
mov
add
imul
mov
clc
repnz
nop
cld
jae
xor
lock
add
mov
mov
mov
push
mov
xchg
ret
mov
mov
jmp
cld
jae
aaa
add
xor
push
push
mov
xchg
ret
int3
dec
add
add
movzwl
push
mov
nop
leave
jmp
add
mov
mov
push
mov
xchg
ret
fadds
dec
cmc
add
push
mov
cmpl
jae
xor
add
in
mov
push
mov
xchg
ret
add
add
mov
xchg
push
pop
test
push
mov
xchg
ret
add
mov
dec
cmp
mov
nop
leave
jmp
js
es
add
jo
pop
clc
repnz
nop
cld
jae
sbb
mov
out
mov
clc
repnz
nop
cld
jae
dec
mov
repnz
or
jmp
add
push
inc
add
setg
push
add
loopne
add
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
add
xor
and
clc
repnz
nop
cld
jae
js
add
add
cmp
push
mov
xchg
ret
mov
cmc
xor
add
add
repnz
nop
cld
jae
out
add
add
add
dec
or
repnz
nop
cld
jae
mov
add
push
mov
nop
leave
jmp
lahf
add
dec
add
add
jbe
clc
repnz
nop
cld
jae
push
add
add
mov
add
clc
repnz
nop
cld
jae
sbb
insb
mov
push
mov
nop
leave
jmp
mov
add
dec
xor
push
mov
xchg
ret
add
mov
add
or
nop
cld
jae
add
add
add
pop
jne
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
div
push
mov
nop
leave
jmp
dec
adc
add
arpl
push
push
mov
xchg
ret
add
lock
jb
and
push
mov
nop
leave
jmp
add
add
inc
jne
movb
pop
mov
clc
repnz
nop
cld
jae
add
dec
push
push
mov
xchg
ret
add
add
pop
test
push
mov
nop
leave
jmp
int3
add
dec
jmp
nop
nop
cld
jae
add
add
inc
je
xorl
clc
repnz
nop
cld
jae
xchg
add
mov
repz
add
add
push
mov
lds
test
repnz
nop
cld
jae
add
push
pop
xor
clc
repnz
nop
cld
jae
test
add
mov
add
sar
nop
nop
cld
jae
sbb
cmp
es
jle
add
push
mov
xchg
ret
cmp
out
jne
jne
cmp
xor
add
clc
repnz
nop
cld
jae
add
lea
clc
repnz
nop
cld
jae
cmp
add
mov
dec
outsl
popa
fs
repnz
nop
cld
jae
mov
add
cmp
clc
repnz
nop
cld
jae
add
add
and
loop
mov
add
repnz
nop
cld
jae
add
push
push
jo
mov
leave
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
add
add
add
xchg
cli
shl
clc
repnz
nop
cld
jae
add
add
loop
mov
aas
push
clc
repnz
nop
cld
jae
xor
add
mov
clc
repnz
nop
cld
jae
mov
and
mov
shl
push
mov
xchg
ret
adc
jne
mov
add
add
mov
cmp
test
add
loop
repnz
nop
cld
jae
jne
mov
js
popa
add
mov
xchg
ret
add
add
test
clc
push
clc
repnz
nop
cld
jae
cmp
add
add
fwait
pop
push
mov
xchg
ret
add
bound
add
jne
add
mov
clc
repnz
nop
cld
jae
add
add
adc
into
sub
push
mov
nop
leave
jmp
add
dec
push
clc
repnz
nop
cld
jae
push
hlt
dec
add
push
add
sbb
dec
sub
xchg
in
add
mov
mov
push
mov
nop
leave
jmp
add
add
cmp
add
pushf
and
clc
repnz
nop
cld
jae
add
add
jo
push
clc
repnz
nop
cld
jae
add
dec
adc
mov
push
clc
repnz
nop
cld
jae
fadds
mov
mov
push
mov
nop
leave
jmp
add
out
mov
and
mov
sbb
repnz
nop
cld
jae
add
ret
ret
inc
or
jecxz
add
loop
mov
xor
rolb
outsl
subl
push
mov
xchg
ret
inc
adc
rcll
dec
cmp
mov
nop
leave
jmp
add
fiadds
mov
jnp
movsb
clc
repnz
nop
cld
jae
arpl
bound
lahf
dec
jle
add
add
repnz
nop
cld
jae
mov
hlt
fiadds
std
mov
push
mov
xchg
ret
je
add
add
cli
call
in
nop
leave
jmp
ret
loope
loop
lea
push
mov
xchg
ret
mov
ret
loop
mov
addb
push
add
push
clc
repnz
nop
cld
jae
add
push
add
push
cmp
mov
nop
leave
jmp
jb
jle
add
push
clc
repnz
nop
cld
jae
inc
add
add
add
repnz
nop
cld
jae
add
add
ret
clc
repnz
nop
cld
jae
add
cmc
cmp
lock
mov
add
add
repnz
nop
cld
jae
jle
jo
dec
add
push
mov
xchg
ret
fiadds
add
add
add
repnz
nop
cld
jae
add
fcomps
repnz
nop
cld
jae
jmp
add
push
shll
or
movsb
push
mov
xchg
ret
add
pop
js
ss
add
nop
leave
jmp
add
add
shl
mov
sub
clc
repnz
nop
cld
jae
int
xchg
add
xor
repnz
push
mov
xchg
ret
int3
add
out
add
jne
push
clc
repnz
nop
cld
jae
add
add
add
cmp
repnz
nop
cld
jae
add
loope
add
xchg
xchg
dec
mov
push
mov
xchg
ret
push
add
add
arpl
sub
iret
or
leave
jmp
adc
aaa
inc
dec
xchg
clc
repnz
nop
cld
jae
mov
add
add
or
in
nop
leave
jmp
add
push
add
add
ret
fcoms
mov
xchg
ret
add
test
or
cmp
add
clc
repnz
nop
cld
jae
add
add
cmpl
nop
nop
cld
jae
add
pop
sbb
mov
sub
repnz
nop
cld
jae
jo
add
inc
add
repnz
nop
cld
jae
xor
loope
add
push
mov
xchg
ret
add
add
dec
mov
push
add
push
fs
repnz
nop
cld
jae
xchg
inc
add
out
mov
push
mov
xchg
ret
jne
add
add
mov
clc
repnz
nop
cld
jae
rcll
xchg
test
popa
add
mov
nop
leave
jmp
bound
pop
add
add
add
clc
repnz
nop
cld
jae
add
sub
inc
and
repnz
nop
cld
jae
add
add
add
call
clc
repnz
nop
cld
jae
add
add
shll
add
clc
repnz
nop
cld
jae
add
add
jne
lahf
push
clc
repnz
nop
cld
jae
bound
xor
jo
add
sub
nop
nop
cld
jae
jle
jo
je
out
push
clc
repnz
nop
cld
jae
mov
add
mov
mov
clc
repnz
nop
cld
jae
add
and
rolb
mov
mov
mov
inc
mov
mov
pop
push
push
mov
xchg
ret
sbb
lock
inc
add
mov
cwtl
and
push
mov
xchg
ret
mov
push
add
cmpsl
adc
mov
add
clc
repnz
nop
cld
jae
add
add
add
mul
mov
add
clc
repnz
nop
cld
jae
sbb
and
mov
push
add
repnz
nop
cld
jae
fisubs
lock
jp
push
mov
nop
leave
jmp
xor
fcoml
repnz
nop
cld
jae
pop
add
lods
dec
push
mov
nop
leave
jmp
cmp
add
adc
add
add
xchg
or
mov
adc
std
je
push
mov
nop
leave
jmp
jo
add
call
ja
inc
add
xor
mov
add
add
sbb
repnz
nop
cld
jae
add
xor
add
pop
mov
clc
repnz
nop
cld
jae
add
push
add
dec
add
repnz
nop
cld
jae
add
cmp
scas
enter
nop
cld
jae
jne
loope
loope
pushf
test
push
mov
nop
leave
jmp
aaa
dec
xchg
mov
add
add
repnz
nop
cld
jae
pop
add
adc
repnz
nop
cld
jae
add
add
int
cmc
aas
call
clc
repnz
nop
cld
jae
add
adc
loopne
mov
in
nop
leave
jmp
dec
mov
ret
xor
pusha
add
ss
mov
nop
leave
jmp
add
fimuls
lahf
popa
push
mov
xchg
ret
arpl
fadds
add
add
cmc
sub
push
mov
xchg
ret
mov
add
add
xor
mov
push
mov
xchg
ret
add
add
comiss
mov
xchg
ret
hlt
add
pop
loope
arpl
repnz
nop
cld
jae
add
pop
xor
add
dec
sub
mov
nop
leave
jmp
bound
add
dec
data16
add
add
repnz
nop
cld
jae
js
add
jl
inc
and
clc
repnz
nop
cld
jae
pop
xor
mov
int
lcall
nop
leave
jmp
jmp
imul
mov
inc
add
add
int3
add
sbb
mov
add
repnz
nop
cld
jae
add
add
mov
xchg
ret
lock
ret
xchg
jp
movb
add
clc
repnz
nop
cld
jae
add
add
pop
push
mov
nop
leave
jmp
dec
jne
jne
loop
mov
rclb
aad
inc
add
inc
int3
add
add
pop
add
mov
clc
repnz
nop
cld
jae
add
xchg
sbb
sub
sub
repnz
nop
cld
jae
aaa
inc
add
sar
repnz
nop
cld
jae
add
cmc
add
inc
jae
mov
clc
repnz
nop
cld
jae
add
lock
sbb
jae
clc
repnz
nop
cld
jae
add
inc
add
mov
repnz
nop
cld
jae
mov
add
call
clc
repnz
nop
cld
jae
add
add
test
lret
add
mov
pop
jle
rcrl
nop
nop
cld
jae
mov
je
add
add
mov
nop
nop
cld
jae
add
lahf
roll
mov
mov
add
mov
clc
repnz
nop
cld
jae
dec
dec
add
mov
lea
clc
repnz
nop
cld
jae
int
xor
dec
arpl
add
push
mov
nop
leave
jmp
add
cmc
loope
add
add
push
mov
xchg
ret
add
add
aaa
sbb
mov
xchg
ret
inc
dec
cmp
sbb
inc
cli
test
push
mov
nop
leave
jmp
ret
add
add
add
lock
add
test
test
clc
repnz
nop
cld
jae
xor
clc
repnz
nop
cld
jae
add
add
sahf
push
clc
repnz
nop
cld
jae
mov
add
pop
add
rolb
mov
mov
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
xchg
ret
hlt
dec
add
pcmpeqb
ret
mov
pusha
push
mov
xchg
ret
add
inc
sub
push
add
mov
nop
leave
jmp
js
add
add
mov
lea
clc
repnz
nop
cld
jae
add
add
addb
cmp
clc
repnz
nop
cld
jae
add
int3
js
push
rdmsr
loopne
mov
push
mov
lahf
movsb
inc
add
add
add
add
xchg
add
add
add
stc
out
inc
add
dec
add
arpl
push
mov
nop
nop
cld
jae
cmp
add
clc
repnz
nop
cld
jae
adc
mov
int3
je
push
mov
nop
leave
jmp
pop
add
add
in
nop
leave
jmp
xor
dec
add
add
mov
add
mov
nop
leave
jmp
arpl
add
sti
call
in
nop
leave
jmp
xchg
jmp
add
fstl
mov
xchg
ret
add
add
add
cmp
mov
clc
repnz
nop
cld
jae
mov
mov
adc
add
push
mov
nop
leave
jmp
mov
add
dec
mov
clc
repnz
nop
cld
jae
mov
add
ja
pop
clc
repnz
nop
cld
jae
jne
add
inc
add
add
es
add
in
nop
leave
jmp
add
cmp
jne
add
js
ret
push
mov
nop
leave
jmp
pop
sub
push
xor
mov
sub
nop
nop
cld
jae
add
jne
add
sahf
mov
clc
repnz
nop
cld
jae
pop
inc
lahf
xor
push
mov
nop
leave
jmp
loope
ret
ss
add
sub
repnz
nop
cld
jae
add
jmp
sbb
add
repnz
nop
cld
jae
add
add
fidivs
sar
nop
nop
cld
jae
add
xchg
add
add
cmc
inc
xchg
lock
mov
xchg
ret
add
test
int3
ret
int
dec
add
push
mov
xchg
ret
push
add
aaa
add
lret
mov
push
mov
nop
leave
jmp
add
add
ret
push
mov
xchg
ret
pop
loop
add
hlt
add
cmp
cld
or
nop
leave
jmp
jle
add
mov
mov
adc
repnz
nop
cld
jae
add
loop
inc
aaa
call
clc
repnz
nop
cld
jae
add
mov
pop
call
in
nop
leave
jmp
adc
mov
push
mov
nop
leave
jmp
add
add
std
mov
clc
repnz
nop
cld
jae
add
mov
popw
data16
add
clc
repnz
nop
cld
jae
add
lahf
psrlw
mov
clc
repnz
nop
cld
jae
jne
scas
push
clc
repnz
nop
cld
jae
dec
fadds
mov
mov
xchg
addl
add
add
clc
repnz
nop
cld
jae
cmp
jo
sbb
in
add
in
cmp
cmpsb
ficompl
and
enter
nop
nop
cld
jae
add
int3
mov
dec
pop
clc
repnz
nop
cld
jae
dec
jmp
inc
ret
mov
mov
xchg
ret
add
es
lock
lret
repnz
nop
cld
jae
add
dec
add
add
popf
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
test
jne
loop
lock
or
clc
repnz
nop
cld
jae
inc
out
add
dec
xor
repnz
nop
cld
jae
dec
dec
add
dec
xor
mov
nop
cld
jae
add
add
mov
jne
inc
push
xchg
mov
add
push
out
push
sbb
mov
add
cmp
add
push
nop
add
fimull
in
add
bound
add
mov
push
clc
repnz
nop
cld
jae
rorl
add
add
int
lea
clc
repnz
nop
cld
jae
aaa
loop
mov
mov
push
mov
sbb
es
pop
xchg
add
sub
out
mov
clc
repnz
nop
cld
jae
inc
add
add
xchg
cmpl
cld
jae
loop
add
mov
push
mov
xchg
ret
add
mov
stc
mov
clc
repnz
nop
cld
jae
mov
arpl
mov
mov
nop
leave
jmp
fdivs
add
out
pop
add
push
mov
xchg
ret
add
add
mov
and
clc
repnz
nop
cld
jae
add
aad
add
ret
rolb
xchg
ret
inc
fidivs
adc
add
xor
clc
repnz
nop
cld
jae
ret
int
add
dec
push
fcoml
mov
xchg
ret
lahf
add
jmp
aaa
leave
mov
clc
repnz
nop
cld
jae
dec
loop
add
push
mov
nop
leave
jmp
inc
cmp
add
cmc
iret
add
clc
repnz
nop
cld
jae
loop
arpl
test
negb
push
mov
xchg
ret
mov
out
add
insb
mov
push
mov
nop
leave
jmp
add
xchg
bound
jg
clc
repnz
nop
cld
jae
mov
add
add
dec
push
clc
repnz
nop
cld
jae
add
add
add
and
mov
inc
inc
and
add
clc
repnz
nop
cld
jae
xor
add
sar
clc
repnz
nop
cld
jae
add
ret
das
pop
clc
repnz
nop
cld
jae
pop
add
add
lahf
add
push
jecxz
push
mov
mov
cmpsl
fwait
push
test
test
and
mov
mov
xor
clc
repnz
nop
cld
jae
mov
dec
xor
clc
repnz
nop
cld
jae
mov
adc
push
mov
jb
out
add
add
imul
mov
add
jne
push
mov
xchg
ret
add
inc
mov
add
imul
loopne
add
add
add
cmp
arpl
push
mov
xchg
ret
add
add
add
add
inc
add
clc
repnz
nop
cld
jae
pop
inc
add
jne
fstpl
mov
nop
leave
jmp
jo
mov
hlt
push
mov
stos
sub
clc
repnz
nop
cld
jae
fiadds
add
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
dec
adc
push
loope
cs
dec
sbb
add
add
mov
add
add
repnz
nop
cld
jae
int
je
sbbl
xorl
incl
jge
jne
push
mov
nop
leave
jmp
jb
cmc
xor
es
mov
rclb
in
nop
leave
jmp
jo
hlt
add
add
rolb
mov
jne
clc
repnz
nop
cld
jae
add
add
js
add
xor
mov
cmpl
push
mov
nop
leave
jmp
add
in
loopne
mov
add
repnz
nop
cld
jae
pop
mov
mov
dec
push
mov
xchg
ret
add
lock
mov
mov
clc
repnz
nop
cld
jae
add
loop
scas
add
clc
repnz
nop
cld
jae
add
push
add
add
test
push
mov
nop
leave
jmp
cmp
add
lahf
add
aaa
jae
add
inc
add
add
flds
xor
sahf
cmp
popa
testl
add
adc
add
cmpsb
mov
add
mov
ret
mov
loopne
mov
mov
add
add
and
mov
mov
jb
mov
add
mov
add
fwait
cmp
enter
cmp
mov
add
mov
mov
in
cmp
mov
or
pop
aaa
notl
pop
test
mov
loope
adc
mov
ss
scas
or
dec
lahf
jmp
mov
jecxz
add
jmp
and
mov
das
cmc
fucomi
aas
ret
mov
add
rolb
mov
mov
hlt
sub
add
add
in
mov
scas
test
imull
es
add
pop
jle
repz
jnp
imul
mov
int
cwtl
addr16
mov
mov
mov
mov
movsb
mov
scas
dec
call
push
mov
xor
popf
fldcw
cld
pop
insl
xchg
fwait
loopne
mov
mov
mov
push
mov
aam
sti
sub
add
stos
xchg
int3
in
jb
mov
push
mov
loop
mov
mov
fistl
jle
and
mov
add
lock
popa
xor
inc
jg
jbe
push
add
and
xchg
fwait
cmp
add
push
mov
stos
fbstp
add
push
or
add
add
push
cmpl
add
and
sti
aas
insl
call
mov
mov
pop
mov
add
mov
imul
test
inc
jnp
push
or
test
mov
adc
mov
stc
cmp
push
add
das
cmc
push
mov
cltd
xchg
decl
add
pop
jbe
sub
mov
inc
add
addb
or
cwtl
sub
add
es
mov
mov
add
sbb
pop
test
or
add
or
pop
sub
cmp
adc
mov
xchg
pop
dec
sbb
mov
enter
cmp
mov
aam
add
or
popf
and
mov
xchg
mov
mov
out
scas
inc
add
mov
jg
xor
pop
push
sub
mov
mov
jecxz
jae
scas
mov
xchg
out
imul
clc
sbb
or
inc
xchg
lcall
add
add
int3
xchg
add
clc
and
lds
xlat
xchg
push
add
imul
lret
movsl
repz
cli
jns
stc
jo
mov
add
mov
rorl
mov
inc
mov
insb
fdivs
push
add
mov
jo
mov
shrl
out
mov
xorl
mov
or
pop
dec
fcom
outsl
mov
addb
pop
test
cmp
cmp
and
les
mov
popf
mov
pop
lret
and
mov
jno
jge
or
fdivrs
or
pop
dec
jl
into
mov
add
add
push
add
ljmp
shll
mov
leave
and
add
cltd
xor
in
mov
cli
push
out
or
adc
adcl
inc
add
sbb
mov
add
je
into
push
pop
add
add
mov
sbb
mov
mov
mov
pop
mov
add
test
inc
xorl
insb
cmp
js
dec
cltd
pop
xchg
or
cwtl
es
mov
lret
loop
mov
bound
mov
add
aad
push
add
add
mov
add
dec
repnz
lods
mov
orl
lcall
testb
test
mov
pop
and
mov
xor
mov
push
pop
xchg
lret
pop
daa
lods
push
add
loop
mov
add
mov
and
cwtl
and
mov
jecxz
push
mov
mov
fistpll
pop
mov
add
add
sbb
jb
mov
push
pop
lret
push
fisttpll
fs
mov
jl
rcll
pop
fnstenv
jo
mov
push
xchg
mov
mov
into
cmpsb
dec
addb
xchg
cwtl
sbb
push
xchg
insl
inc
sbb
add
imul
test
mov
adc
in
daa
je
sub
sub
lods
adc
inc
rolb
pop
dec
jmp
pop
mov
push
adc
mov
xor
push
fildll
repnz
call
mov
imul
dec
xchg
scas
push
mov
insl
insb
mov
aas
xchg
add
out
dec
lods
or
aaa
popa
inc
mov
mov
sub
push
iret
dec
stos
push
and
pushf
cmp
xchg
in
fwait
stos
bound
mov
mov
ja
mov
or
pop
mov
out
push
rolb
mov
test
sbb
sbb
cli
cwtl
add
push
inc
stos
sub
add
jge
add
xor
mov
push
xchg
xor
mov
add
add
push
jge
movsl
cmp
enter
dec
rorl
addr16
mov
and
mov
inc
lcall
push
add
mov
xchg
inc
add
push
out
inc
lret
mov
movb
mov
xchg
sbb
jmp
inc
xor
fnsave
mov
jmp
rorl
rcll
inc
icebp
mov
add
lock
addb
pop
int3
jno
pop
loopne
mov
rcl
add
loope
adc
test
jo
mov
xchg
jae
sub
mov
stc
cmp
sti
cli
xchg
popf
mov
add
add
sub
ror
push
adc
dec
xchg
add
add
int3
xor
mov
fs
sbb
subl
add
out
adc
mov
mov
cmp
dec
mov
addb
and
adc
add
push
inc
add
dec
insl
mov
inc
add
addb
cmp
ret
lea
out
sbb
or
mov
xlat
daa
pop
bound
mov
dec
into
or
inc
and
mov
add
add
add
add
inc
xor
mov
dec
dec
dec
and
cltd
push
and
std
sub
icebp
mov
out
pop
mov
mov
mov
jb
mov
adc
mov
call
into
adc
bound
mov
lea
jnp
add
adc
add
addr16
add
mov
cwtl
mov
mov
mov
test
gs
add
mov
inc
sbb
xchg
adc
adc
rcr
cmpsl
scas
mov
addb
xor
movsl
scas
jmp
js
dec
sti
lods
mov
mov
mov
mov
or
pop
mov
inc
into
popa
test
xchg
pushf
stos
test
int
push
pushf
in
pusha
add
mov
add
pop
loop
mov
cmpsb
js
inc
add
adc
mov
fs
inc
push
push
add
mov
dec
push
lds
xchg
dec
inc
lahf
in
pop
dec
pop
mov
xchg
jle
or
cwtl
cli
repz
add
shll
cld
jmp
push
add
sbb
add
fs
scas
inc
xchg
add
mov
lods
insb
xchg
xor
xor
mov
cltd
ret
les
popf
outsb
lds
cmc
in
or
stos
mov
rolb
mov
loope
popa
sbb
repnz
sbb
push
jbe
add
and
mov
or
add
fstl
add
mov
jge
add
sub
dec
pop
cld
mul
stc
mov
cmpl
add
mov
mov
cmp
push
jg
negb
xor
mov
add
push
add
stos
out
inc
lcall
mov
dec
fidivl
mov
mov
mov
add
jge
ret
add
data16
cmpsb
flds
mov
mov
lret
cmpsl
xchg
leave
mov
mov
mov
push
cwtl
inc
add
mov
mov
xsha1
cmpsb
dec
mov
and
pop
push
addr16
mov
pop
fcompl
mov
mov
pop
cld
ret
into
pop
lods
mov
imul
popf
dec
inc
and
push
mov
jb
mov
dec
ss
aaa
ljmp
add
rolb
cld
mov
add
dec
lret
test
stos
pop
cmpsl
mov
pop
cmp
out
push
arpl
add
scas
jne
xor
dec
xor
ja
test
mov
mov
mov
ja
or
cs
arpl
dec
pop
cmp
loopne
mov
add
popf
out
loope
or
mull
jns
rolb
mov
push
add
add
add
mov
sti
dec
cli
int3
pop
pop
mov
mov
push
pop
push
repz
cmp
add
gs
cli
inc
add
sub
das
imul
mov
jae
test
dec
cli
cld
dec
push
mov
add
jmp
mov
fisubrl
dec
lret
jl
testb
jmp
xor
addr16
dec
xor
xor
adc
or
es
sbb
enter
adc
pushf
int3
xor
das
pop
jg
popa
jo
mov
mov
adc
aam
gs
sbb
add
mov
dec
jmp
sub
add
scas
cmp
ja
nop
add
sub
add
mov
sub
mov
repnz
addb
inc
bound
mov
popa
cmp
test
add
stos
cmpsb
cmp
push
add
std
sahf
adc
mov
mov
stos
mov
lcall
ret
enter
add
int
sub
cmp
add
cmpps
push
sbb
cmp
aaa
and
mov
xor
mov
add
xor
push
inc
test
lds
mov
and
in
pop
sbb
mov
add
in
cmp
mov
les
aam
add
cld
jns
sub
add
stos
jl
les
hlt
cli
mov
mov
mov
ret
stos
pop
inc
into
push
pusha
add
mov
fildll
notl
arpl
add
jmp
mov
das
xchg
stos
cltd
inc
repz
mov
js
leave
mov
inc
lods
mov
cwtl
leave
insb
lods
xchg
mov
pop
les
cmpsl
in
lock
clc
xchg
rolb
mov
mov
push
add
outsl
shrl
add
push
ret
adc
mov
fsubrl
lcall
adc
mov
add
xchg
adc
xchg
push
add
hlt
push
push
add
shll
ret
inc
sbb
fildl
mov
inc
dec
dec
decl
jb
mov
psubusb
xor
lret
loopne
mov
popf
cmp
add
add
outsb
stc
les
imul
pop
jle
in
sbb
sub
add
add
mov
mov
xchg
into
rolb
mov
mov
and
mov
add
out
add
cmp
add
addb
xor
mov
adc
clc
or
mov
mov
xor
mov
add
sub
add
push
mov
push
je
or
mov
mov
add
mov
add
das
leave
push
aad
mov
js
jmp
add
sti
sbb
das
adc
mov
xchg
sti
sbb
mov
and
and
jg
cmpsb
icebp
cli
test
inc
sub
add
sub
push
in
sbbl
pop
fistpll
fstps
aaa
imul
mov
pushl
dec
cmpsl
mov
mov
imul
mov
outsl
xchg
cmp
mov
lcall
push
jno
popf
sbb
xchg
push
add
add
mov
out
add
aas
popa
lret
push
xor
mov
push
lock
mov
mov
cltd
sub
or
mov
adc
push
rolb
ss
cmp
xchg
mov
out
add
mov
or
add
dec
sbbl
add
push
sbb
out
subl
daa
nop
add
adc
popa
push
outsl
movsl
outsb
scas
in
lock
add
xchg
movsl
jb
mov
mov
mov
sbb
mov
add
faddp
add
jo
mov
mulb
fsts
lret
jecxz
lods
in
jmp
fcmovnbe
add
add
mov
xor
mov
add
inc
push
sub
std
lods
data16
pop
imul
push
sarl
scas
adc
mov
dec
jl
add
mov
push
inc
add
add
fdivs
mov
inc
and
add
mov
xchg
adc
push
mov
insb
inc
clc
stos
jb
mov
pop
imul
add
cmp
into
mov
sti
jnp
add
les
jno
mov
jmp
add
and
mov
cmp
rolb
mov
push
add
mov
repz
cmova
fwait
inc
dec
push
test
push
in
jnp
lock
aad
dec
in
pop
jg
enter
adc
mov
pop
cs
mov
or
jl
add
mov
inc
add
shll
lock
mov
or
push
add
insl
sbb
or
lahf
jbe
xchg
sub
push
push
jge
fisubrl
loopne
mov
sub
sbb
lahf
push
hlt
in
test
ja
es
lcall
je
dec
div
add
mov
jmp
aad
jo
mov
jge
jmp
mov
sti
xchg
mov
dec
dec
repz
jge
dec
push
mov
les
or
xor
mov
xlat
inc
fiaddl
dec
lahf
sbb
mov
add
cltd
sti
add
jns
sub
leave
or
addb
in
inc
add
jecxz
add
add
mov
addb
testb
mov
aad
lods
inc
cmp
add
mov
lods
jecxz
fsts
out
adc
mov
add
jmp
ljmp
sbb
xchg
insl
or
add
add
mov
add
mov
sbb
xor
movsb
mov
jae
jle
fimuls
sbb
mov
cmpsb
js
dec
sbb
je
movsb
das
rolb
push
add
scas
hlt
fcmovb
add
add
repnz
mov
mov
xchg
add
mov
cli
iret
jo
mov
add
negb
mov
cmc
mov
xor
aad
repz
mov
add
sarl
testb
mov
movsb
inc
mull
ja
ljmp
stos
js
and
aas
push
pushf
cli
mov
and
lea
aad
xor
sbb
imul
mov
add
add
inc
dec
pop
test
fnstcw
out
mov
ja
xor
scas
scas
add
mov
xor
add
fwait
jne
add
lahf
sub
stos
mov
xchg
push
adc
mov
add
es
cmp
test
add
es
addb
and
mov
imul
loope
push
test
mov
xchg
xchg
add
push
add
imull
xchg
add
mov
popa
and
stos
add
int
xchg
lods
inc
add
mov
and
mov
and
add
jbe
fmull
sub
mul
jecxz
call
cmp
mov
mov
or
data16
sbb
lock
mov
in
xchg
jl
addb
cli
jno
add
jb
mov
sti
pop
psrad
mov
in
and
mov
mov
add
in
enter
cmpsl
hlt
rolb
mov
jmp
or
add
aas
jg
sub
sub
adc
addr16
data16
or
pminub
xchg
inc
add
add
add
icebp
mov
scas
mov
mov
and
out
jg
add
orl
repnz
mov
push
fwait
int3
int
aas
and
inc
fwait
ja
add
cs
popa
dec
in
sub
lahf
arpl
pop
into
inc
adc
push
addb
daa
ret
rolb
mov
dec
inc
jp
push
add
outsb
adc
mov
das
lahf
cwtl
and
test
mov
sti
clc
and
cltd
std
out
adcl
pop
mov
mov
mov
ljmp
xor
call
ds
cmp
mov
popa
or
fwait
push
insb
sub
jae
sbb
mov
dec
ja
add
fstl
cmp
fld
add
push
es
fwait
mov
xor
sub
pusha
add
shl
pop
mov
mov
stos
gs
adc
add
mov
adc
fyl2x
jle,pn
pop
mulb
leave
pop
pop
movsb
jecxz
outsl
cmpl
fists
sahf
adc
loope
push
mov
mov
mov
jns
fisttpl
mov
xor
jmp
fnstenv
adc
insb
mov
xor
arpl
mov
push
sahf
outsb
outsl
mov
pop
mov
xchg
push
mov
fucomip
dec
daa
out
popl
lret
add
jl
fs
arpl
xchg
sub
cwtl
mov
add
les
jns
xlat
sub
into
call
mov
mov
mov
mov
mov
sub
mov
fcompl
jge
int3
cmp
cwtl
cli
xor
fs
aam
jle
add
adc
mov
adc
mov
add
push
jno
in
sbb
jle
push
out
nop
add
cs
sub
or
fdivs
mov
sbb
add
add
jge
jle
sti
xchg
jbe
add
leave
dec
sub
sub
mov
xchg
xchg
xor
add
test
push
loop
mov
aaa
aaa
or
ljmp
dec
mov
cltd
jmp
inc
loopne
mov
xlat
gs
mov
dec
pop
push
add
les
add
xlat
subps
mov
in
pop
mov
mov
add
sub
adc
mov
mov
cmpsl
push
mov
ja
dec
mov
mov
add
dec
xchg
jle
and
mov
inc
add
cli
pop
int3
cmp
mov
xor
mov
pop
lret
xor
mov
cld
mov
rolb
mov
mov
scas
addb
fistps
lds
lahf
ja
add
jle
lods
cmp
jmp
dec
ret
ljmp
mov
popa
mov
aaa
and
in
and
mov
cmp
mov
mov
mov
dec
dec
stc
adc
aam
mov
or
leave
fsub
add
rcrl
ffreep
inc
mov
mov
inc
push
pushl
std
jnp
and
mov
pop
nop
add
and
mov
aaa
addb
adc
mov
and
mov
das
imul
mov
fwait
mov
add
out
lcall
dec
rolb
mov
mov
dec
mov
or
jbe
mov
xchg
add
fmulp
scas
shll
xorl
push
jmp
xor
add
and
xchg
add
add
cmp
xor
jp
addb
gs
outsl
xchg
pop
lahf
mov
push
pop
aad
fsts
mov
out
pop
loope
and
dec
imul
push
xchg
add
adc
cwtl
lock
add
cmp
mov
setp
in
idivl
dec
sub
jbe
jnp
cmp
add
add
popa
loop
mov
push
in
jge
xor
mov
mov
mov
ret
cli
fs
movsl
cmc
mov
mov
test
inc
test
add
add
mov
pop
lods
sahf
cmp
int
cmp
add
ret
ljmp
mov
sbb
push
scas
clc
iret
push
aas
adc
add
lahf
insl
xchg
add
mov
es
loop
mov
push
es
lret
cltd
cltd
fstl
add
int3
mov
mov
xchg
push
out
lods
sub
out
xor
lods
inc
in
je
enter
push
and
xor
mov
mov
mov
mov
outsl
int3
dec
dec
mov
add
mov
add
inc
mov
add
xchg
pop
dec
daa
es
mov
xchg
add
mov
cmp
addr16
test
rolb
mov
inc
daa
clc
cs
push
add
hlt
andl
cmp
mov
or
jg
add
add
sub
lods
xorl
add
lcall
dec
iret
cmp
add
mov
dec
mov
mov
add
add
add
pop
sahf
xor
mov
fbld
sub
repz
pop
push
hlt
and
cld
inc
int
mov
jp
add
mov
data16
mov
cmc
sub
xor
inc
add
std
pop
sub
xchg
incl
xor
xor
xchg
pop
lods
je
push
arpl
xchg
mov
mov
roll
lods
sbb
mov
xor
dec
xlat
mov
add
add
jg
add
mov
repz
ja
push
xchg
xor
add
fnsave
mov
mov
mov
jnp
add
sub
push
push
addr16
push
sarl
cmp
mov
mov
add
adc
add
lods
lahf
pushf
je
clc
xchg
ds
xchg
outsb
cltd
inc
aam
jbe
repz
out
je
fld
mov
mov
mov
inc
out
fstl
mov
std
into
lock
pop
repz
xchg
adc
mov
in
push
ljmp
fildll
push
add
push
add
out
inc
lods
repz
shrl
icebp
mov
nop
add
or
add
dec
notl
adc
inc
dec
jnp
enter
add
sub
push
add
outsb
cs
adc
xchg
add
ljmp
and
mov
push
fdivrs
ljmp
aad
mov
dec
add
add
mov
xchg
add
std
xchg
imul
mov
add
or
in
fidivs
addb
add
mov
dec
arpl
push
mov
inc
xchg
fs
jge
cmc
addb
test
js
mov
xor
pusha
add
mov
movsb
scas
sub
dec
xchg
add
mov
mov
dec
inc
add
add
push
out
in
fmuls
mov
jmp
mov
pop
mov
add
xchg
stos
cmp
fildll
mov
mov
pushf
movsb
lret
aad
xor
mov
jge
addb
or
add
lret
arpl
aaa
push
or
xor
mov
mov
rorl
test
clc
rolb
jae
xor
mov
add
in
push
xchg
fisubrl
mov
mov
mov
les
shufps
sbbl
jmp
add
mov
add
fs
and
dec
mov
cli
dec
mov
xchg
mov
fstl
mov
push
add
or
shrl
sub
test
add
inc
add
lock
inc
or
jecxz
sub
mov
jbe
mov
add
or
jae
fnstcw
sub
in
cmp
sbb
out
out
adc
out
xor
push
aad
inc
add
mov
pop
aas
nop
add
fstpl
fsubs
add
in
test
pop
mov
lods
fisttpl
loope
or
jmp
stc
cmp
sub
mov
lret
xorl
add
mov
mov
and
jo
mov
add
js
push
mov
sub
data16
inc
add
jp
out
popa
nop
add
pusha
add
add
xor
outsb
sub
mov
or
test
add
add
mov
cmp
fcomip
add
inc
add
bound
mov
fadd
add
movb
push
ss
mov
jl
test
pop
arpl
push
sub
xor
mov
add
mov
mov
mov
sti
sbb
add
pop
sbb
push
and
mov
adc
add
hlt
rolb
mov
sbb
mov
mov
mov
jge
jmp
cld
or
fdivrp
xor
jne
mov
or
pop
test
addb
lret
xchg
push
rolb
mov
cli
mov
mov
xchg
xchg
test
add
mov
or
add
xchg
mov
addb
or
pminub
jg
ret
inc
mov
dec
dec
insl
imul
adc
sub
mov
popa
enter
mov
dec
sti
fnstcw
mov
jge
int
mov
ljmp
mov
scas
mov
pushf
sub
lock
sbb
filds
mov
push
xchg
js
popa
mov
fwait
outsl
pop
fwait
insb
inc
pushf
test
lahf
daa
sti
lock
add
imul
fstl
addr16
add
mov
push
out
push
add
sarl
dec
int
aaa
lea
lods
loop
mov
add
vpmulhw
xchg
dec
mov
cmpsb
xchg
mov
ficoml
leave
into
mov
mov
mov
lods
sub
cmp
sub
cmp
mov
adc
and
mov
or
add
or
dec
fsubrl
sahf
mov
test
aam
mov
imul
jp
call
inc
sbb
roll
popf
pop
adc
add
sbb
rolb
mov
add
add
mov
or
xchg
cltd
and
push
dec
ret
mov
mov
push
cs
out
jb
mov
push
jo
mov
mov
jb
mov
push
adc
icebp
aam
cmp
cmp
das
sub
setae
pop
arpl
cmp
add
adc
jle
cmp
inc
add
addb
int
dec
into
ja
add
jo
mov
cmpsb
xor
pusha
add
cmpl
out
sub
dec
popa
mov
add
inc
add
into
cmp
fidivs
daa
mov
sahf
jp
and
dec
mov
test
dec
cwtl
mov
xor
add
add
ret
and
fwait
mov
mov
xchg
popa
repz
pushf
adc
cli
inc
ret
jo
mov
jne
leave
icebp
daa
stc
cmp
xchg
dec
jo
mov
fistpl
loopne
mov
loop
mov
pop
add
adc
mov
mov
addb
jmp
mov
jb
mov
xchg
clc
or
add
mov
xor
lock
and
hlt
cmp
addr16
add
inc
xchg
push
repnz
inc
lahf
test
mov
shrl
leave
sub
shrl
and
loope
daa
scas
cmp
adc
mov
orl
int3
rolb
mov
or
and
xor
jge
scas
fwait
mov
mov
xchg
scas
push
inc
popa
push
pushf
sbb
popa
or
mov
mov
iret
addb
sahf
adc
mov
es
mov
add
rolb
mov
push
pop
js
sub
mov
xchg
push
mov
mov
in
inc
add
mov
cmp
mov
in
lea
in
jne
sahf
inc
sub
xor
je
arpl
movsl
adc
xor
add
add
mov
xchg
fcomps
inc
lahf
adc
mov
scas
in
lret
aad
sub
sub
js
push
jbe
jmp
mov
inc
add
jle
cmpsl
add
mov
mov
iret
pop
daa
jne
push
leave
fs
push
mov
pop
test
fs
jmp
out
pusha
add
nop
add
push
divb
scas
add
testb
xchg
addb
cmc
xchg
mov
add
mov
push
adc
mov
xor
add
add
mov
add
pop
xchg
sub
mov
push
add
and
jmp
pop
mov
setle
loopne
mov
xor
inc
mov
xchg
test
add
mov
and
mov
xchg
push
jno
mov
adc
dec
pop
push
inc
aas
cmp
sub
add
mov
dec
mov
add
fstpt
push
jmp
icebp
sub
dec
enter
mov
add
rolb
or
push
fistps
pusha
add
insb
movsb
push
add
mov
xchg
outsb
hlt
aam
pop
shll
add
or
add
insb
push
xor
call
mov
xor
mov
and
jle
int
clc
add
outsl
ds
sub
add
shrl
ja
inc
test
cli
addb
cmp
mov
mov
sbb
and
ja
test
push
push
sub
jge
aas
scas
rolb
mov
push
sub
sarl
xchg
push
add
in
xchg
mov
scas
leave
or
mov
outsb
pusha
add
or
popa
adc
addb
xchg
int
ja
add
cs
movsl
jae
ficompl
test
pushf
pop
mov
inc
pusha
add
push
add
add
push
jmp
ret
mov
cmpsb
fwait
repnz
sti
pop
pusha
add
pop
imul
add
addr16
iret
pop
inc
add
mov
and
mov
mov
or
inc
les
xor
sub
push
add
sahf
inc
add
daa
push
and
mov
add
aas
mov
xor
sarl
add
dec
repz
mov
jnp
fdivl
add
cmp
cmpsl
sti
enter
jp
stc
sub
mov
mov
imul
mov
fstpt
mov
aad
mov
xchg
add
movb
mov
arpl
rolb
mov
outsl
mov
es
add
xor
jge
lret
push
add
dec
cli
mov
jne
add
or
and
test
add
stos
fidivs
xchg
add
jle
arpl
dec
aad
leave
ss
aaa
and
mov
pushf
pop
repz
add
add
and
mov
idivb
or
add
je
ficoml
leave
sub
add
dec
ds
aas
ret
cwtl
push
mov
mov
inc
add
mov
or
mov
test
sub
add
icebp
fmul
push
loopne
mov
mov
hlt
cli
jl
cmp
aad
rcr
adc
mov
add
movsl
das
xlat
int
sti
jg
scas
inc
mov
fimuls
fstps
mull
pusha
add
sbb
add
mov
mov
mov
mov
mov
mov
pushf
imul
test
jmp
jp
ret
hlt
rolb
mov
xchg
repz
pop
pop
cmc
inc
add
push
fsubr
cld
ja
xor
jo
mov
addb
mov
lods
xchg
test
mov
rorl
fs
loop
mov
adc
mov
add
sti
dec
ljmp
push
ds
in
cli
mov
repz
call
repz
into
repnz
add
shll
mov
nop
add
int3
inc
cltd
push
imul
mov
mov
cmp
xlat
mov
and
sub
in
std
mov
add
gs
mov
popa
sbb
or
and
cmp
xchg
je
push
ds
add
jg
cli
push
or
add
add
cmp
pop
call
addb
or
dec
sub
or
cmp
push
add
and
mov
out
hlt
mov
jbe
mov
addb
imul
mov
add
mov
mov
iret
aaa
addb
jp
inc
add
mov
rolb
mov
lea
add
jo
mov
loope
daa
out
add
test
add
stos
and
mov
pop
dec
fistpl
cmp
mov
push
rolb
sub
mov
test
add
pop
imul
clc
cli
mov
or
xchg
add
push
and
mov
insb
push
add
mov
lcall
mov
cli
mov
mov
jmp
cltd
nop
add
add
loop
mov
das
sbb
add
pop
aam
sbb
add
mov
pop
fstpt
xchg
insl
jmp
aam
add
mov
push
jl
test
in
adc
mov
add
mov
mov
xchg
loope
xchg
mov
jg
ds
cli
push
das
mov
sub
repz
rolb
mov
add
jmp
or
nop
add
mov
movsl
push
cmp
inc
in
mov
or
mov
add
cmp
xchg
sarl
lock
cmp
pop
mov
mov
add
mov
pop
sbb
push
add
stos
loop
mov
add
imul
add
fdivl
out
add
jae
inc
nop
add
and
in
lret
and
addb
movsb
clc
pop
fstpl
mov
test
popf
je
fwait
dec
iret
cmp
pop
mov
je
jmp
cmp
mov
pop
jl
pop
xchg
xchg
repnz
scas
cmp
rolb
inc
unpckhps
or
mov
or
mov
out
add
jno
outsb
cmp
fldl
lcall
cli
pop
lahf
ret
je
mov
mov
lea
add
inc
fcmovb
in
jmp
mov
js
cltd
jge
adc
mov
mov
aas
loop
mov
dec
sbb
jno
push
sub
loopne
mov
cmovnp
mov
aam
mov
xor
iret
mov
stc
imul
movsb
pop
pop
jae
xchg
add
or
xor
mov
add
jbe
cwtl
out
fisttpl
or
cmp
xchg
inc
or
adc
add
pop
pop
addb
sti
mov
add
jb
mov
add
bound
mov
lret
mov
popa
mull
mov
cmp
icebp
cmp
mov
pop
push
add
pop
jecxz
sub
aam
add
cmp
lahf
les
fwait
sub
scas
js
je
or
cmp
test
jns
dec
push
add
scas
or
jns
enter
sub
movsb
sbb
add
push
cmp
jns
add
and
callw
add
add
ret
mov
pop
cmp
hlt
mov
or
fldenv
gs
into
mov
stc
subl
or
or
pop
dec
xchg
std
cmp
cmp
mov
mov
add
ret
jle
leave
mov
push
push
xor
mov
inc
loopne
mov
add
jae
add
add
pop
leave
xor
mov
xor
inc
inc
add
mov
add
sti
inc
xchg
add
insb
push
scas
mov
add
add
psubd
dec
sbb
cmp
pop
pop
sbb
add
mov
das
jg,pn
fwait
ja
shrl
mov
aad
cltd
rolb
mov
add
in
rolb
mov
js
add
aaa
jge
sub
jp
fstps
test
pop
test
inc
mov
xchg
sbb
xor
or
loope
xlat
fnstsw
xchg
repz
add
mov
inc
mov
into
xor
mov
add
repnz
xchg
mov
inc
add
data16
sbb
push
lret
xor
mov
mov
rolb
mov
add
cmp
fdivrs
add
add
ret
or
jbe
mov
pop
fidivl
mov
ret
sbb
mov
addb
lods
adc
mov
fnsetpm(287
cmp
mov
jmp
add
in
cmp
xchg
cmp
pop
fisubrs
jb
mov
dec
dec
push
aam
enter
mov
adc
mov
ret
sub
jnp
mov
cltd
add
mov
mov
pop
outsb
xchg
add
cltd
jecxz
fistpl
push
add
ja
jbe
loope
fdivs
and
imul
lods
mov
bound
mov
push
icebp
sub
popa
insb
xor
mov
notl
add
andl
popf
mov
pop
push
mov
mov
mov
jae
out
pop
mov
lcall
mov
into
aam
adc
dec
push
stos
ljmp
addb
icebp
into
mov
es
rolb
mov
out
stos
mov
and
mov
sbb
add
fldl
jmp
or
lcall
icebp
or
mov
fnstcw
add
push
xchg
scas
aas
and
mov
out
cli
xor
jecxz
icebp
in
sbb
jmp
filds
mov
adc
add
pop
lea
sub
push
jo
mov
mov
add
jb
mov
imul
outsl
jl
fsubs
lcall
mov
loope
icebp
xchg
sub
addr16
hlt
out
mov
mov
icebp
cmp
add
mov
fs
adc
arpl
jecxz
add
push
add
dec
mov
adc
insb
icebp
sbb
jge
jbe
or
add
mov
mov
pop
xor
mov
inc
push
dec
out
arpl
mov
dec
sub
lods
ja
add
iret
fldcw
mov
mov
mov
mov
add
push
mov
add
and
in
adc
shrl
or
lods
sti
sbb
mov
adc
add
mov
aaa
xchg
push
pusha
add
and
mov
daa
pop
push
jb
mov
ret
mov
rcrl
xor
mov
imul
adc
add
add
sub
add
aad
inc
rcll
cmp
inc
mov
je
add
cmpsb
add
push
add
add
mov
dec
add
mov
mov
insb
adc
aam
pop
adc
daa
dec
mov
stc
mov
cwtl
push
add
add
inc
add
xchg
mov
jbe
test
mov
mov
je
xor
jle
ljmp
imul
mov
orl
fstpt
les
stos
pop
push
dec
fistpll
or
mov
adc
testb
fcomps
add
add
je
xor
mov
rolb
cmp
test
adc
aaa
gs
les
mov
roll
sub
rcrl
dec
xor
mov
imul
dec
lret
xchg
adc
mov
rorl
add
aas
addb
sub
data16
mov
ja
lret
adc
xchg
xor
mov
mov
add
mov
add
cmpsb
es
or
add
ret
daa
jp
add
mov
add
addb
push
add
xor
mov
cmpsl
xor
sbb
mov
mov
mov
and
mov
dec
rolb
mov
sbb
lods
or
repnz
ret
rolb
mov
sub
mov
mov
add
fnsave
xlat
xor
mov
jbe
adc
mov
add
sub
jnp
xor
mov
mov
add
add
mov
sub
pop
cmp
negl
mov
push
loop
mov
adc
and
mov
add
cs
sbb
mov
add
into
je
fcompl
or
int3
jmp
inc
push
mov
mov
mov
jb
mov
popf
scas
push
xchg
or
add
adc
popf
or
push
lds
push
adc
mov
jno
adc
mov
mov
push
add
mov
aas
outsl
cmp
pop
xchg
add
repz
mov
add
negb
popl
insl
shl
mov
add
push
mov
pop
les
fistpl
out
enter
and
iret
stos
xor
add
mov
and
add
pop
cmpsb
flds
insb
faddp
and
test
roll
add
fisubrs
xor
xorl
jl
in
jp
cld
mov
data16
mov
xchg
xchg
adc
or
repz
mov
add
and
mov
add
mov
sub
push
jecxz
xchg
arpl
add
hlt
pop
or
add
mov
cmp
add
add
mov
add
mov
ss
or
xor
add
cwtl
ja
or
roll
adc
mov
insl
cli
std
inc
jl
pop
mov
add
mov
mov
ret
adcl
leave
xchg
pop
mov
mov
faddl
mov
pop
pusha
add
lret
pop
sbb
lods
pop
mov
aam
mov
adc
mov
dec
inc
jge
out
add
sbb
add
ret
mov
dec
mov
add
mov
lret
daa
ljmp
jbe
or
push
add
inc
ds
stos
in
dec
test
addr16
add
movsb
mov
mov
dec
test
js
inc
add
or
add
mov
pop
rolb
mov
cmp
or
rolb
mov
pop
rolb
mov
rolb
mov
mov
addb
int3
pop
push
jl
popf
mov
dec
les
stos
fcoml
add
pushf
cmpsb
movsl
cmpsb
addb
inc
add
addb
addb
or
cmpsl
pop
nop
add
imul
or
inc
mov
add
add
lcall
hlt
or
sbb
adc
mov
dec
bound
mov
ret
loope
outsb
ljmp
pop
stos
mov
xchg
push
and
stos
adc
mov
repnz
dec
and
add
nop
add
pop
mov
cmp
popa
mov
add
paddq
nop
add
outsb
int
mov
xchg
jg
add
fldcw
add
mov
mov
mov
mov
add
cmp
mov
mov
mulb
ja
fisttps
mov
mov
sbb
addb
xor
cmp
add
mov
pop
enter
xchg
sbbl
mov
inc
jo
mov
mov
rolb
mov
mov
add
mov
mov
insl
out
pop
leave
aad
mov
sub
lock
push
loope
test
imul
js
aad
add
jno
jecxz
xor
mov
inc
imulb
jg
jl
push
mov
add
and
in
shll
pop
rolb
adc
ret
sbb
push
mov
push
les
hlt
fs
sub
pop
pop
and
push
movsb
pop
dec
inc
arpl
xor
mov
shrl
or
addl
shl
xchg
add
repz
xor
add
stos
js
mov
add
xchg
add
push
nop
add
out
cmc
xchg
mov
fwait
cltd
xchg
add
or
lods
icebp
xchg
lahf
rolb
mov
iret
xor
dec
fidivrs
inc
in
adc
call
push
ds
mov
mov
mov
aaa
push
cmc
mov
xor
mov
add
mov
add
cld
add
mov
fwait
mov
jnp
jl
je
jp
cmpsl
loop
mov
sub
int
aaa
jns
cmp
ljmp
imul
cwtl
pop
ret
movsl
pop
sbb
jno
in
pop
xchg
mov
pop
xor
popl
mov
inc
int3
repz
ret
aam
rolb
mov
add
addb
xor
add
mov
or
xchg
jecxz
ja
adc
mov
gs
add
mov
mov
data16
jge
add
add
push
test
jecxz
or
scas
sahf
xor
rcr
inc
pop
or
stc
pushf
push
push
sbb
push
push
add
test
jnp
imul
xchg
add
add
cwtl
xor
icebp
mov
inc
fsubrl
pop
and
incl
lahf
pop
das
and
mov
mov
add
mov
dec
and
mov
mov
adc
push
outsl
inc
push
pop
push
mov
add
sbb
ds
and
fbld
cmp
xchg
add
add
mov
out
and
mov
decl
icebp
jle
in
test
or
frstor
arpl
dec
jge
cmp
and
test
xchg
cmp
add
mov
adc
inc
push
dec
addr16
mov
push
add
movsb
sub
pop
outsl
in
or
stos
sub
sbb
xchg
lahf
cltd
adc
mov
inc
add
or
sti
mov
mov
mov
pop
outsl
mov
pop
or
add
je
add
adc
add
pop
ja
lea
shll
mov
and
mov
push
test
call
ljmp
outsl
xchg
push
add
dec
nop
add
and
lods
movsl
cmpsl
int
lods
pop
pop
push
add
scas
and
mov
inc
hlt
xchg
mov
dec
push
dec
scas
push
xchg
movsb
dec
leave
cld
mov
adc
dec
mov
dec
push
cltd
push
stos
lock
mov
mov
jl
sub
es
add
mov
dec
test
add
xchg
js
and
mov
pop
leave
mov
xchg
test
or
push
pop
out
fcoml
dec
sub
add
xchg
push
mov
push
add
jo
mov
out
add
cmpsb
xchg
xchg
push
mov
add
push
or
fistps
adc
adc
fmull
faddp
add
imul
and
cmc
push
mov
inc
outsb
jp
int
adc
jne
scas
out
cmp
push
mov
lret
mov
push
pop
fldcw
jo
mov
inc
inc
fmull
add
hlt
xor
mov
add
or
add
repnz
addb
test
mov
movsl
adc
sbb
or
add
into
pop
xor
mov
daa
ret
push
and
mov
add
gs
add
xchg
jg
add
mov
add
sub
xchg
enter
mov
notl
add
jecxz
add
mov
push
and
pop
sarl
icebp
scas
lock
add
out
iret
iret
mov
mov
sbb
mov
xchg
push
jge
cwtl
pop
in
xor
mov
mov
inc
jmp
fnstenv
cmp
popa
out
aam
dec
push
addb
xor
mov
mov
pusha
add
mov
mov
fdivs
mov
and
add
mov
mov
inc
add
xor
mov
out
adc
xchg
xor
mov
sti
or
jns
sti
insl
push
mov
adc
mov
pop
aaa
aas
lds
pop
push
mov
cmp
add
xchg
mov
add
into
add
push
nop
add
into
cmp
mov
push
add
sbb
sub
adc
mov
sub
das
sub
insb
lret
push
add
lods
lcall
fs
out
dec
xor
add
mov
sub
add
xchg
scas
push
sub
aas
sbb
ret
dec
add
mov
xchg
fcomp
je
xchg
into
cwtl
jg
inc
loopne
mov
aaa
nop
add
push
loopne
mov
pop
sbb
jp
adc
outsb
outsl
mov
pop
and
mov
ss
xor
mov
sbb
arpl
xor
add
add
jbe
sub
lods
scas
xlat
dec
cs
into
xchg
add
dec
sub
fiaddl
aaa
rolb
test
adc
imul
mov
rolb
mov
add
or
xchg
add
cs
fisttpll
xchg
add
mov
sub
insl
in
xchg
out
sbb
dec
xchg
mov
ds
lcall
or
clc
cmp
sbb
add
stos
pop
out
jg
lret
dec
repz
rolb
mov
inc
add
mov
cld
cld
mov
sub
cmp
cli
adc
mov
adc
mov
stc
mov
pop
pusha
add
mov
adc
mov
cli
sub
cmp
call
stos
hlt
push
mov
imul
das
jl
jecxz
pop
scas
xchg
insl
pop
aaa
aaa
ret
lret
loopne
mov
push
aaa
mov
add
int3
cmpsl
data16
cld
sub
or
mov
mov
mov
mov
adc
das
mov
icebp
stos
andl
cmp
pop
in
sbb
test
popa
aaa
adc
add
mov
or
adc
mov
cld
xchg
jmp
or
mov
ljmp
sub
fisubs
push
mov
add
mov
add
mov
addr16
add
scas
movsl
out
hlt
push
push
test
lods
or
add
add
mov
ljmp
add
jge
aaa
lcall
jle
mov
add
and
leave
ljmp
push
add
mov
mov
add
mov
sbbl
in
lahf
push
out
adcl
add
pushf
cmp
cltd
jno
lcall
mov
mov
in
xchg
mov
ror
sub
call
mov
ret
scas
mov
aaa
adc
sahf
clc
mov
add
add
in
cmpsl
push
pop
sti
sti
fldt
add
xchg
sub
test
out
add
add
shll
addl
mov
add
cmp
add
add
mov
insb
sbb
push
xchg
test
mov
adc
sbb
add
xchg
add
sti
inc
lret
imul
pop
xor
mov
insb
xlat
mov
add
mov
xor
clc
lcall
clc
int
popf
or
aaa
insl
adc
dec
push
sbb
in
adc
scas
push
mov
and
ret
js
add
mov
add
cmp
adc
mov
jb
mov
inc
xor
mov
xchg
push
jno
and
mov
sub
add
jmp
sub
fsubrs
cmpsb
pop
adc
imul
dec
sub
icebp
imul
push
add
loop
mov
jmp
jl
push
mov
mov
jb
mov
xchg
pop
mov
pop
jecxz
pop
and
mov
push
enter
cmc
into
jbe
rolb
add
mov
inc
pop
inc
or
aas
lock
add
addb
inc
dec
dec
lret
mov
lret
out
movsl
das
repnz
loope
je
cmpsb
xor
mov
add
sbb
and
mov
add
nop
add
push
jns
xchg
inc
ret
rorl
jmp
and
mov
mov
call
out
sub
daa
pushf
jecxz
cltd
out
and
add
inc
out
xor
stos
push
add
mov
fwait
inc
push
imul
inc
add
insl
and
adc
pop
cmp
sub
inc
daa
fwait
lock
mov
mov
in
mov
add
jmp
push
enter
sub
jle
jle
adc
mov
add
ficompl
or
jl
lock
sbb
sub
out
mov
sbb
stos
pop
lea
in
nop
add
xchg
add
sahf
push
xlat
out
push
imul
mov
fcomps
cmp
add
add
add
mov
mov
inc
lea
jl
imul
test
dec
les
aad
add
xchg
add
add
add
loop
mov
mov
sub
stos
fidivrl
pop
fwait
clc
scas
push
inc
clc
fidivrl
xchg
inc
sbb
add
aas
cmp
jns
mov
lret
add
xchg
call
cmc
sbb
loopne
mov
clc
or
add
mov
fisubs
bound
mov
nop
add
adc
mov
daa
out
add
loop
mov
lock
clc
insb
mov
in
pop
adc
test
xchg
add
into
or
push
mov
pop
sbb
sub
popf
roll
in
xlat
addb
loope
add
addb
add
mov
cli
dec
lds
mov
pop
mov
int3
push
fwait
jbe
or
mov
mov
movsb
out
add
pop
cltd
fnstsw
fwait
push
jge
add
cmp
mov
test
ds
dec
xor
sub
pop
pop
lcall
int3
test
push
push
scas
push
rolb
loope
add
mov
add
xchg
pop
dec
fwait
jge
push
xor
addr16
add
pop
cmp
idiv
pop
or
add
add
repz
imul
add
mov
out
xchg
ds
inc
mov
addb
pop
cmp
insl
out
or
add
pusha
add
mov
push
cs
addr16
cwtl
leave
push
push
dec
roll
mov
push
xchg
hlt
in
ja
xchg
push
lods
xchg
xchg
mov
mov
add
push
std
imul
rolb
push
lods
loopne
mov
jmp
jae
add
jne
sbb
movsb
sbb
mov
dec
mov
hlt
lods
xchg
cmp
sub
add
add
mov
loopne
mov
adc
xor
in
push
dec
xchg
cld
lds
pop
mov
push
test
dec
mov
rolb
mov
pop
repnz
xchg
pop
inc
add
mov
mov
add
add
or
push
jmp
lods
inc
jecxz
sbb
xor
clc
xchg
fdivl
shll
add
mov
inc
add
daa
sub
cld
sbb
imul
inc
or
scas
negb
or
hlt
dec
stos
xor
mov
and
xchg
and
pop
daa
sbb
add
das
movlps
mov
add
lahf
in
dec
xor
mov
repnz
aaa
jo
mov
bswap
jne
ret
sbb
push
fwait
xchg
fimuls
dec
fldenv
add
in
cwtl
mov
pop
and
mov
sti
inc
fidivs
rolb
mov
xchg
jp
add
aam
repnz
xchg
add
fwait
adc
sbb
and
mov
mov
xchg
mov
mov
movsl
fnsave
in
scas
dec
pop
and
mov
and
stos
loop
mov
push
fldln2
test
mov
fs
push
xor
mov
sub
mov
or
shll
das
out
jg
lret
dec
or
mov
mov
daa
sahf
xor
mov
mov
inc
push
mov
sahf
inc
repz
mov
ljmp
rolb
mov
lcall
sbb
stos
test
mov
mov
pushl
inc
dec
pushf
popa
shr
jle
add
mov
test
sub
pop
hlt
rorl
sub
mov
and
lds
ja
add
pop
testl
dec
cmp
mov
push
test
outsb
xor
mov
add
test
inc
sub
pop
pusha
add
mov
jge
add
mov
stos
repnz
push
and
adc
mov
ficoms
cld
push
mov
addb
and
mov
jecxz
cmp
mov
mov
and
jl
repz
dec
and
pop
rolb
mov
sub
dec
mov
mov
add
add
cmp
adc
mov
ffreep
push
popf
xor
sbb
mov
sub
add
dec
clc
dec
fwait
pop
in
cli
jge
cs
hlt
xchg
dec
or
push
call
cltd
dec
addr16
fisubs
pop
push
insl
and
mov
rorl
lea
test
lock
add
jne
in
out
rolb
cmp
je
cmpsl
mov
push
xlat
les
cwtl
inc
add
add
mov
scas
add
ret
push
add
adc
mov
daa
jns
movsl
or
add
add
or
dec
daa
addb
mov
fsub
fstpl
sbb
and
fcoml
stc
sarl
dec
push
testl
push
mov
rolb
mov
jae
mov
in
ss
test
xchg
mov
call
pop
daa
repz
and
mov
jle
add
lock
add
aaa
mov
push
cmp
and
add
paddusw
add
xor
add
mov
mov
lret
aad
aam
stc
out
add
push
add
fcoms
add
xchg
dec
mov
add
mov
repz
add
dec
xor
mov
cwtl
dec
push
addb
outsb
or
lret
rolb
mov
addb
jb
mov
and
mov
add
xor
lcall
insl
xchg
add
icebp
xor
dec
imul
mov
js
xchg
add
mov
xchg
adc
leave
lret
cmp
dec
lds
jmp
insb
xor
ret
or
xchg
add
divl
mov
lds
negb
in
rolb
mov
fs
pop
test
pushf
cmp
add
stc
xchg
dec
push
add
sub
jge
sub
aas
std
jmp
sbb
movsl
mov
mov
adc
mov
aas
jecxz
ret
pop
rolb
xchg
test
xchg
add
sti
xchg
in
or
pop
and
mov
add
mov
lret
push
cmp
imul
mull
adc
add
loope
mov
js
xchg
adc
loope
add
mov
mov
test
pusha
add
pop
jb
mov
mov
add
mov
sbb
xchg
add
scas
pop
fs
mov
add
mov
add
pop
in
in
mov
mov
lret
mov
cmc
in
xchg
sub
imul
fistl
mov
add
sbb
mov
cmp
cmpsb
xchg
js
hlt
frstor
iret
insb
fsubrl
sub
add
adc
mov
or
shll
push
cwtl
ljmp
pusha
add
in
inc
sub
adc
cmp
mov
outsb
xchg
mov
mov
fcmovnbe
add
dec
cli
pop
pop
lock
into
lds
cmpsb
test
sbb
arpl
ja
mov
pop
aaa
addb
dec
sbb
jl
xchg
les
mov
add
aam
rolb
mov
mov
negl
jmp
add
dec
or
movsb
lock
dec
xchg
repnz
pop
dec
sbb
mov
loope
add
mov
imull
inc
adc
out
fwait
mov
mov
and
jmp
insb
push
aad
cwtl
insb
addb
mov
add
jb
mov
add
gs
pop
test
int
cmp
push
add
add
add
subl
arpl
pop
jecxz
mov
mov
add
sub
jg
dec
fs
add
enter
popf
adc
fcmovne
hlt
aaa
outsb
out
jge
inc
lods
mov
dec
scas
mov
mov
mov
add
mov
lds
cmovb
mov
fbstp
mov
mov
mov
add
mov
sub
jns
sbb
dec
addb
add
add
xor
add
jnp
add
push
dec
fstpl
lcall
into
or
stc
lret
aad
ja
mov
mov
add
mov
add
add
aam
mov
mov
div
add
test
add
dec
and
mov
add
add
mov
add
mov
scas
lahf
and
cmp
push
inc
adc
mov
cmpsl
or
fimull
mov
inc
pop
pop
imul
mov
and
mov
pop
ja
ret
insl
sub
cmpsb
fnstenv
mov
mov
sahf
addb
fistl
mov
cmovs
cmp
add
adc
cmp
push
sbb
mov
leave
imul
add
mov
mov
sub
sti
loope
and
xchg
add
inc
pop
rolb
mov
test
jecxz
mov
jb
mov
insb
jae
pop
cmpsl
lret
xchg
ret
ret
stos
loop
mov
cmpsl
popa
jle
rorl
add
dec
aas
inc
mov
data16
daa
xor
mov
add
xor
sar
sbb
add
mov
data16
sub
adc
mov
mov
jne
ret
add
dec
loope
mov
data16
loopne
mov
mov
addb
das
sub
insl
inc
add
sbb
mov
adc
dec
jbe
pop
daa
sbb
sbb
out
xchg
out
ss
stc
movsl
cmp
adc
dec
push
dec
mov
or
mov
mov
inc
jmp
out
test
mov
jl
xchg
iret
dec
or
mov
push
add
jp
inc
enter
add
fidivrl
xor
icebp
xchg
ds
rolb
mov
add
lret
sbb
sub
mov
mov
push
test
ljmp
lret
lcall
pop
in
icebp
jge
cltd
xor
cmc
and
mov
cmp
jae
xchg
in
ret
hlt
cmc
cld
aaa
lret
jmp
hlt
rolb
mov
mov
sbb
loop
mov
int
mov
mov
ja
out
add
mov
loopne
mov
push
std
or
xchg
mov
add
mov
pusha
add
repnz
mov
sbb
cmpsl
dec
dec
sbb
xchg
daa
scas
mov
test
add
loope
dec
stos
xchg
mov
ja
cltd
leave
lcall
lock
jbe
cmp
clc
pop
add
add
pop
mov
testb
sbb
mov
mov
in
pop
retw
push
pop
add
sub
addr16
test
inc
add
pop
cltd
or
repz
hlt
xchg
js
sahf
adc
std
mov
nop
add
pop
movsb
in
mov
dec
movsl
fistpll
cmp
pop
add
xchg
add
mov
loope
insb
jp
lret
sbb
or
jne
add
insb
ret
mov
scas
xchg
test
rolb
mov
add
add
cltd
push
jb
mov
sbb
add
and
mov
mov
add
dec
js
lret
mov
add
mov
sarl
ret
pop
cmp
js
sub
jbe
iret
or
or
dec
jle
pop
mov
and
ret
pop
in
jg
mov
add
or
inc
add
sti
outsw
and
add
mov
cltd
fisubl
mov
mov
sahf
in
fstps
push
imul
xchg
and
out
test
add
jne
test
pusha
add
pop
rcrl
in
out
les
sub
arpl
mov
loope
addr16
int3
xchg
loop
mov
lret
cmp
jl
addr16
outsl
ljmp
xchg
dec
dec
mov
add
jp
xor
xor
loope
mov
push
cltd
add
lcall
mov
add
or
pop
xor
mov
ss
cmp
mov
lcall
cwtl
add
movsb
push
insl
sahf
adc
push
imul
cmpsl
adc
fisubl
inc
lods
sbb
aas
mov
mov
add
sbb
es
cmc
stos
mov
add
push
push
add
xor
mov
cmp
stc
push
pop
data16
rol
cmpl
rolb
cmp
add
jo
mov
fwait
and
stc
lods
test
pop
and
mov
outsl
adc
scas
dec
rolb
mov
xor
mov
jp
lock
std
enter
and
mov
ror
mov
pop
mov
mov
add
icebp
push
push
je
and
enter
mov
lods
xchg
jbe
push
jnp
cmp
mov
repz
mov
mov
or
or
fnsave
fisubrl
push
jp
xor
mov
add
mov
scas
or
out
cmp
or
xor
add
and
idiv
sbb
mov
add
mov
jne
les
add
dec
pushf
dec
add
or
sbb
mov
jae
loop
mov
sbb
shll
mov
addb
fdivl
mov
cld
les
xor
pop
dec
xor
imulb
fisttpll
add
push
push
add
mov
mov
cs
sbb
daa
cltd
xchg
inc
jb
mov
pop
push
push
add
sub
pop
idivb
mov
mov
sti
iret
das
ret
push
add
and
pop
inc
add
sub
pushf
pop
inc
jg
add
adcl
mov
and
test
add
and
fcoms
fdivl
mov
iret
test
mov
xchg
dec
pop
xchg
daa
test
ds
or
js
pop
adcl
call
sbb
add
mov
mov
sbb
fildl
mov
mov
cld
fnstenv
mov
scas
enter
xor
enter
addb
mov
add
push
jge
mov
mov
pusha
add
mov
add
insb
xor
loopne
mov
mov
mov
or
out
ds
lret
ficoms
mov
mov
fs
add
pop
repz
fdivs
sub
mov
pop
test
mov
dec
mov
pop
cwtl
mov
mov
mov
add
add
add
enterw
stos
dec
cmpsl
xor
dec
fldenv
pop
push
pop
cld
fs
xchg
inc
cmp
addb
and
or
sbb
xor
inc
ja
sahf
stos
repz
add
push
faddl
fwait
lods
inc
test
inc
add
mov
or
mov
pushl
popa
rolb
mov
pop
xor
adc
mov
int
add
pop
push
cmpsb
push
pop
adc
mov
adc
loope
xchg
mov
add
add
rorl
lret
test
add
and
out
int3
je
cmp
add
mov
movsb
sub
mov
mov
xchg
add
or
and
mov
loop
mov
add
and
mov
add
repz
inc
jb
mov
mov
dec
push
dec
cmpsl
gs
add
mov
js
into
push
add
mov
add
mov
cld
jge
fistps
mov
xchg
pop
inc
mov
testl
fcoml
xor
stc
sbb
out
xlat
jo
mov
into
push
shll
add
add
add
add
mov
pushf
gs
dec
pusha
add
jp
mov
aam
cmp
outsl
cs
mov
mov
mov
cld
or
xchg
testb
mov
cltd
dec
enter
fdivr
movsl
add
mov
add
mov
sbb
push
add
mov
add
loopne
mov
add
mov
inc
fwait
xchg
jns
loopne
mov
or
dec
arpl
jecxz
fistpl
push
cwtl
sub
add
subl
push
cmp
push
dec
pop
xchg
mov
add
push
jnp
sub
jbe
dec
pop
dec
sbb
cli
enter
addb
dec
pop
jbe
inc
add
cmp
scas
cmp
mov
or
sub
mov
pop
outsb
scas
rolb
ret
lea
sub
push
mov
adcl
or
jns
lea
add
sbb
cmpsl
arpl
repz
push
mov
or
pop
cmp
cmp
fsubrl
add
pop
fs
or
and
add
add
jge
mov
inc
decb
cmpsb
mov
lea
cmc
adc
push
push
stos
sbb
das
lahf
jbe
push
psrlq
or
add
inc
add
push
mov
push
add
sahf
fstpl
lcall
mov
mov
mov
push
xchg
mov
xchg
add
push
insl
lcall
sub
sbb
add
lods
into
or
idiv
out
adc
add
int
das
and
mov
les
repz
cmp
std
cli
dec
daa
ret
cld
jnp
sub
mov
sub
push
or
stc
add
mov
in
ret
pusha
add
mov
fsubl
add
mov
mov
pop
xor
add
movsl
cmp
stc
sbb
add
leave
push
jne
je
push
dec
fstl
adc
mov
pop
pop
jmp
je
add
rolb
mov
mov
lods
sub
pop
or
push
mov
mov
push
das
mov
bound
mov
add
hlt
add
mov
fnstenv
push
add
daa
jnp
add
cmp
idivl
fdivs
add
mov
sub
xor
mov
lods
arpl
lret
xchg
or
jp
shll
inc
add
cmp
nop
add
jle
add
add
jbe
xchg
bound
mov
outsb
fwait
lret
repz
add
inc
xchg
add
jle
fsubl
or
push
insl
cmp
push
dec
dec
mov
sarl
inc
add
add
into
fs
mov
add
xchg
repnz
es
lret
lods
mov
or
xchg
rorl
inc
mov
aam
pusha
add
mov
xchg
rolb
mov
jl
lret
xchg
cs
pop
lea
mov
add
mov
push
in
pop
js
or
add
call
add
js
fs
add
or
outsb
adc
mov
sub
addb
push
xor
mov
movsb
enter
add
xchg
jo
mov
sub
ljmp
mov
cmp
mov
mov
sub
add
xchg
scas
or
hlt
bswap
fsubs
add
testl
arpl
test
test
xchg
xchg
outsb
fnstenv
add
rolb
cld
dec
rolb
mov
sub
and
mov
pushf
out
mov
or
popa
xchg
push
xor
add
insb
mov
int3
cmc
mov
add
test
sub
into
ds
add
mov
andnps
add
int
stos
lret
pop
or
push
push
jg
jge
pusha
add
dec
push
cmp
ror
mov
mov
mov
loope
sbbl
add
icebp
or
dec
dec
fiadds
add
iret
repnz
sbb
mov
out
into
and
mov
add
mov
mov
dec
inc
add
mov
add
mov
xor
mov
int3
sub
int3
xchg
xchg
fidivrl
push
and
lods
push
jmp
add
daa
les
mov
inc
add
adc
add
cltd
enter
adc
mov
test
add
add
and
and
mov
push
popa
dec
adc
mov
add
pop
mov
movsb
test
add
dec
test
ljmp
jne
add
adc
sub
leave
pushf
lods
mov
fidivrl
dec
xchg
clc
inc
in
gs
xchg
js
jle
dec
push
sub
bound
mov
adc
add
or
movsl
dec
sub
mov
mov
add
dec
fs
xchg
addb
push
vcmpss
add
sbb
mov
add
or
and
mov
adc
mov
mov
test
bound
mov
test
pop
pop
cld
mov
imul
incb
pop
xchg
add
idivl
mov
pop
jo
mov
dec
in
ds
add
leave
mov
and
xlat
andl
add
jge
cld
jmp
xchg
dec
mov
in
xchg
xor
mov
and
aam
adc
add
dec
ficomps
cwtl
xchg
mov
imull
out
add
mov
fisubrl
out
push
outsl
mov
enter
jae
lret
pop
mov
lock
hlt
ss
add
mov
cmp
add
sub
push
cmp
push
jo
mov
mov
mov
xlat
inc
add
fs
mov
add
pop
adc
aam
add
add
xor
mov
cmp
sahf
cmc
icebp
movsl
fstpl
mov
ret
fnstsw
adc
ret
xchg
pop
inc
mov
es
and
mov
add
call
add
mov
movsb
xor
dec
outsl
lret
mov
mov
jno
sbb
pop
in
or
add
add
xor
add
cs
movsb
mov
adc
sbb
xlat
xchg
rol
add
pop
jno
adc
mov
jmp
xchg
hlt
cltd
or
jg
add
cld
dec
adc
mov
out
mov
mov
mov
mov
jae
mov
sub
xchg
sub
loopne
mov
repnz
cltd
test
pop
dec
addb
ds
mov
rolb
adc
mov
movsb
or
and
mov
sar
jb
mov
lahf
jp
scas
mov
or
xor
add
mov
xor
mov
and
jle
add
movsb
jg
sub
sti
imul
fbstp
mov
inc
or
add
cmp
jo
mov
sub
mov
test
mov
hlt
out
test
add
stos
inc
add
fisubrl
add
addb
pop
imul
cmp
mov
stc
data16
mov
dec
adc
cwtl
sub
push
pop
pop
nop
add
stos
add
mov
outsb
mov
pop
cmpsl
leave
and
flds
mov
mov
fiaddl
xchg
or
mov
cmp
adc
sbbl
xor
add
pop
dec
rolb
mov
cmp
mov
jno
add
les
stos
push
cli
xor
and
mov
aam
es
pusha
add
add
jmp
add
mov
pop
jl
pop
jl
movb
fwait
mov
mov
dec
test
adc
adc
sub
mov
add
mov
mov
mov
fistl
fcmovu
insl
sub
fsubrp
cld
pop
mov
inc
add
sarl
cli
pop
mov
cmpsb
push
sbb
ds
mov
jl
add
fstpt
inc
or
and
mov
add
mov
add
mov
jbe
in
repnz
push
stc
ret
mov
mov
cmp
mov
lahf
xlat
sub
xchg
lahf
pop
dec
cmp
xchg
adc
mov
mov
jae
add
in
and
mov
aam
sbb
add
je
aas
or
add
pop
addr16
ret
nop
add
mov
add
dec
mov
mov
sub
add
and
mov
add
pop
or
mov
mov
pop
xor
sbb
mov
out
scas
and
ret
lods
mov
mov
mov
add
fwait
cli
mov
rolb
test
sub
push
add
ja
iret
sub
int
mov
inc
add
shrl
add
addb
imull
adc
push
lret
add
mov
addb
mov
pop
mull
xchg
or
mov
pop
test
add
insb
and
inc
and
jb
mov
iret
in
add
add
add
mov
push
pop
loop
mov
into
notb
cmp
add
push
ljmp
and
mov
mov
and
add
add
sahf
in
imull
mov
lds
ret
fdivs
mov
add
lcall
js
push
rolb
popa
lock
sahf
gs
lcall
mov
or
cmp
mov
outsb
or
add
xchg
cmp
imul
testb
jmp
mov
xor
mov
sti
lods
mov
or
iret
push
xchg
add
ja
xlat
inc
sbb
push
sbb
jno
adc
addl
mov
add
push
arpl
ret
lds
pop
cmc
add
mov
sub
push
jb
mov
add
push
cli
inc
add
xor
mov
mov
mov
add
add
popa
xor
js
test
xchg
sub
or
sbb
notl
sub
dec
pushf
mov
mov
scas
add
es
mov
xor
push
add
cmpsb
jp
jno
ret
xor
xor
call
pop
in
imulb
lret
push
pushf
xor
pop
push
xor
pop
clc
decb
pop
into
push
in
cmp
inc
shll
add
adc
mov
ret
xchg
jle
adc
mov
push
jp
mov
clc
dec
jecxz
add
sbb
mov
jmp
into
and
pop
push
push
jge
rcll
in
push
stc
jmp
jmp
inc
arpl
xchg
mov
dec
mov
add
mov
xchg
scas
mov
mov
push
dec
sub
push
shl
add
xchg
add
mov
xchg
je
cwtl
push
repnz
push
dec
aad
add
insl
aad
int3
mov
repz
fiadds
mov
lret
ljmp
cmpsl
cltd
push
cwtl
adc
inc
sbb
popf
adc
add
fsubr
daa
fmuls
dec
jo
mov
add
sub
loopne
mov
lahf
jmp
inc
popa
mov
mov
push
mov
xor
rcr
cmp
shll
leave
call
fcompl
jne
add
or
shrl
hlt
xor
stos
adc
or
in
xchg
jbe
dec
popa
je
push
add
cwtl
and
pop
pop
mov
add
movsb
xor
mov
mov
add
ret
pop
hlt
cmp
xor
lods
xor
and
adc
mov
jp
add
mov
mov
roll
in
jg
mov
inc
add
push
mov
mov
mov
xchg
mov
push
arpl
stos
addb
loope
lock
call
jle
test
mov
fadd
or
dec
xor
jne
icebp
fsubrl
mov
or
pop
cmp
fnstsw
pusha
add
add
jo
mov
or
push
aaa
sub
ja
mov
add
push
hlt
out
ds
clc
inc
add
pop
push
rcl
jmp
mov
add
ljmp
ret
inc
pop
push
cs
add
mov
pop
ret
adc
mov
pushf
sbb
add
mov
add
pop
xchg
or
jo
mov
out
jle
mov
in
push
clc
xchg
out
je
rol
inc
outsb
xchg
mov
mov
stos
adc
mov
clc
vpaddusb
pop
xchg
inc
cli
movsl
sbb
imul
mov
pop
cmp
cmpsl
and
mov
popa
stos
sti
jge
add
add
fwait
int3
idiv
xchg
push
in
lock
arpl
dec
stc
mov
out
popa
mov
cli
js
movsl
cmp
xchg
push
add
fldt
in
loop
mov
add
jg
loope
add
out
sub
jecxz
je
add
jmp
sti
in
enter
mov
jg
cmp
dec
mov
mov
push
test
adc
mov
mov
fistl
sti
rolb
cmp
fwait
fwait
xor
mov
jg
test
sbb
add
mov
jo
mov
mov
cmp
adc
mov
add
imul
mov
push
adc
mov
sbb
into
in
jns
add
ljmp
sub
mov
imulb
mov
mov
and
mov
xchg
jo
mov
and
mov
pop
adc
loopne
mov
je
sti
pop
jns
movsb
inc
adc
je
sub
ljmp
in
in
adc
mov
fyl2x
and
inc
push
dec
rcll
adc
mov
fists
loopne
mov
mov
mov
xor
mov
mov
jne
cmc
cmp
inc
out
pop
repnz
icebp
fadds
pop
sub
adc
pop
jns
icebp
gs
mov
bound
mov
stc
sub
cmp
rolb
mov
fld
cmp
orl
adc
add
fs
and
mov
out
lahf
rolb
mov
in
dec
push
xchg
shll
add
add
jnp
icebp
clc
sbb
and
mov
test
xchg
frstor
mov
pusha
add
add
aad
push
mov
leave
aaa
xlat
push
lds
inc
sbb
jae
jmp
cmp
mov
rolb
mov
and
add
jne
add
adcl
lahf
jp
add
mov
out
inc
dec
divb
out
pop
hlt
xchg
jo
mov
or
dec
lods
push
xchg
add
mov
sbb
cmp
add
inc
lds
cmc
insb
arpl
push
repnz
xor
mov
xor
mov
or
add
mov
add
in
dec
lret
fcmovnu
mov
in
repz
mov
ret
rolb
mov
mov
ss
in
add
and
and
sbb
movsl
push
addb
movsb
push
or
mov
mov
jb
mov
mov
mov
out
addb
lahf
sahf
mov
and
mov
jmp
cmp
mov
add
add
add
add
add
cmp
call
and
mov
jb
mov
movsb
xor
mov
xchg
shll
popa
rolb
mov
add
out
loopne
mov
sbb
and
jnp
sbb
aas
lods
in
add
popl
sub
pop
bound
mov
and
subl
sub
rolb
mov
add
push
out
xlat
fldcw
cli
pop
xor
add
in
cmp
popa
sbb
mov
adc
fiaddl
mov
mov
movsl
xor
mov
pop
rolb
mov
mov
fldcw
cmp
loopne
mov
fwait
and
mov
hlt
push
lods
sbb
ficomps
outsl
jbe
dec
jge
xor
aam
and
mov
jae
mov
adc
pop
int
pop
pop
jns
sti
cwtl
lock
out
addb
sub
movsl
in
nop
add
clc
sbb
mov
mov
cs
test
cmp
xor
mov
scas
xor
mov
jo
mov
jg
push
add
mov
mov
out
pushf
lret
jo
mov
jp
dec
into
xorl
mov
sub
xchg
mov
decl
mov
push
add
mov
fdiv
mov
jne
bound
mov
add
jp
cld
push
jnp
inc
mov
dec
cmpsb
call
push
pop
inc
add
fstp
rcrl
ud2
mov
add
or
mov
inc
test
fadd
cmp
add
sbb
int3
insl
cmpl
mov
mov
dec
cmc
xor
or
push
fwait
inc
ss
add
mov
and
add
mov
add
sub
or
sbb
push
ss
std
mov
mov
add
push
mov
out
popf
or
pop
xor
jns
inc
or
pop
fdivl
add
add
mov
mov
les
or
bound
mov
inc
cmp
movsb
shr
xchg
ljmp
sbb
add
cmpsb
repnz
dec
pop
daa
jge
dec
inc
dec
mov
jp
sbb
add
inc
add
mov
and
enter
add
mov
idiv
xchg
int3
loop
mov
mov
fistpll
add
mov
fwait
add
mov
mov
mov
addr16
loopne
mov
lret
push
pop
imul
lret
jae
add
push
adc
pop
imul
add
and
mov
pusha
add
in
xchg
pop
sti
int3
inc
or
jg
push
cwtl
or
dec
inc
aam
jns
add
push
outsb
loop
mov
jl
add
pop
mov
mov
inc
push
dec
jo
mov
pop
xor
mov
cmp
add
sub
aad
pop
aas
ret
movsl
ret
outsb
aas
in
add
push
add
dec
cmc
adc
mov
push
add
jns
loopne
mov
sbb
dec
ss
lret
jge
lds
add
mov
xor
adc
pop
dec
dec
cmpsb
dec
cmpsl
addr16
int
cmc
mov
int
push
add
mov
scas
or
insb
cmp
rolb
mov
add
adc
ljmp
mov
mov
push
and
mov
adc
fisubrl
cwtl
out
add
mov
jmp
add
pop
aas
jl
cwtl
cmp
fwait
popf
xor
add
in
cmpsb
int3
and
mov
push
pop
test
push
icebp
jmp
mov
mov
mov
in
jmp
addr16
dec
mov
add
add
ljmp
clc
jnp
jns
dec
rorl
inc
icebp
inc
test
scas
or
sub
mov
push
add
add
xchg
popa
sbb
adc
mov
dec
mov
frstor
stos
out
mov
xor
adc
pushf
pusha
add
and
sbb
cmp
aam
lret
mov
add
xchg
aam
sub
out
mov
leave
ds
outsb
jae
addb
sbb
push
push
out
xor
ret
jnp
ret
xor
mov
mov
mov
mov
add
lcall
pop
aas
test
bound
mov
sahf
xchg
mov
or
jle
movb
push
add
mov
sahf
mov
xchg
lods
add
mov
repnz
mov
sbb
cmp
mov
xor
repz
nop
add
pop
cmp
cmp
ja
ss
into
push
in
sti
xchg
imul
std
mov
add
add
add
popf
pop
notb
mov
mov
inc
mov
jb
mov
in
mov
jge
addb
sti
inc
push
aas
mov
add
fnstenv
call
call
mov
jnp
outsb
rcl
stos
jb
mov
sbb
pop
stos
movsb
mov
add
int
mov
addr16
rolb
mov
rolb
mov
fs
xor
cmp
mov
mov
mov
into
mov
mov
and
or
mov
jbe
mov
add
or
out
add
adc
mov
push
jnp
xor
mov
mov
add
push
add
cmp
ret
add
mov
add
sub
cvtps2pd
add
out
js
les
out
xor
add
cmp
mov
cmp
mov
and
js
ss
nop
add
int3
xchg
pop
outsl
rolb
mov
in
dec
repz
mov
jns
add
movb
xchg
push
jo
mov
add
adc
pushf
loop
mov
out
add
adc
adc
mov
push
rolb
jnp
jl
mov
lcall
jb
mov
add
test
mov
adc
mov
movsb
scas
cmp
jo
mov
or
mov
dec
sub
xchg
add
es
add
add
sbb
adcl
std
mov
xchg
imul
lea
push
add
add
stos
add
adc
add
add
mov
push
jo
mov
clc
add
mov
pop
mov
add
fst
add
pop
mov
push
dec
lret
adcl
lret
jnp
ja
or
push
or
cltd
pop
xchg
add
gs
pop
sbb
jmp
mov
fiaddl
call
test
adc
lods
in
in
push
add
es
adc
rolb
mov
or
mov
lods
data16
adc
sbb
dec
addb
les
mov
fwait
add
fs
dec
nop
add
aaa
add
sub
mov
out
push
add
hlt
mov
mov
test
push
dec
pop
add
add
std
cmp
test
je
cmp
cmp
loopne
mov
add
sbb
sbb
fldenv
mov
mov
lods
cwtl
es
fisubrs
cltd
sub
icebp
sbb
dec
push
call
das
mov
jnp
add
rolb
mov
add
mov
mov
bound
mov
push
pop
dec
mov
aas
test
xlat
imul
fbstp
cmp
mov
add
add
add
loope
fdivrp
icebp
popw
int3
adc
mov
dec
cs
jecxz
insl
sub
mov
sbb
addr16
adc
add
mov
mulb
adc
mov
pop
push
xor
scas
xchg
add
xor
mov
mov
lods
mov
mov
pop
or
into
xchg
ljmp
repnz
and
ljmp
mov
int3
pcmpgtb
and
mov
fdivrl
or
and
mov
dec
in
mov
mov
inc
add
dec
cmp
idivb
popf
insb
and
mov
xchg
scas
jge
lock
add
and
mov
add
mov
add
addb
mov
dec
pop
mov
cld
pop
pop
jnp
xor
add
clc
adc
and
pop
inc
add
add
adc
gs
insl
cwtl
or
dec
push
add
mov
add
jle
jae
cmpsl
jp,pn
es
les
cltd
dec
sbb
call
sahf
das
outsb
add
mov
add
mov
cwtl
jne
mov
pop
jge
mov
clc
pop
xchg
push
int3
fdivrs
add
or
adc
mov
pop
add
out
cmpsl
sbb
stos
xchg
add
mov
mov
iret
out
mov
outsl
and
bound
mov
adc
mov
and
out
or
adc
lds
add
lret
mov
shll
mov
bound
mov
inc
xlat
bound
mov
pop
inc
push
push
aaa
add
mov
or
mov
ret
cmpsl
ja
dec
jg
in
cmpl
mov
lods
aad
cmpsb
mov
mov
dec
cmp
or
addb
mov
add
add
add
jne
insl
arpl
mov
add
add
mov
pop
add
cmp
stos
fidivrl
mov
mov
jecxz
dec
xor
xchg
popf
mov
fmull
clc
into
add
mov
aad
cmpsb
fcoms
push
loopne
mov
hlt
loopne
mov
icebp
push
inc
fstpt
cwtl
sti
leave
std
xchg
or
icebp
je
xor
mov
push
add
pop
ret
movsb
lods
addb
fcomps
mov
lahf
and
inc
push
jle
ja
inc
dec
inc
pop
adc
jg
test
push
push
sbb
xlat
push
stos
fldt
pop
lods
imul
imul
add
cmp
mov
mov
lcall
cltd
addb
and
scas
sub
lods
out
adc
mov
sub
imul
fstps
add
pusha
add
fs
jnp
icebp
xor
repz
test
inc
cmpsb
ljmp
insb
push
add
or
mov
mov
data16
int3
mov
out
sti
cmc
fwait
shll
mov
popa
jb
mov
add
lret
add
stc
insl
xchg
xchg
scas
mov
add
nop
add
adc
push
loop
mov
cs
pop
add
mov
add
loop
mov
jecxz
mov
cmp
notb
add
and
ret
popf
jnp
sub
pop
mov
xchg
rolb
mov
or
leave
rolb
mov
repz
sub
mov
cwtl
sbb
scas
outsl
push
bound
mov
js
pop
imul
enter
inc
lods
dec
jle
add
xchg
mov
cwtl
scas
pop
mov
mov
loopne
mov
mov
fmull
fistpll
add
add
mov
mov
call
dec
jmp
mov
add
mov
add
adc
add
hlt
aas
or
cmp
mov
push
dec
mov
add
hlt
hlt
cmp
in
insl
push
add
cmp
pop
jge
cld
enter
xchg
add
add
mov
addr16
andl
sub
lcall
mov
mov
jg
pop
popa
sub
add
xor
pop
pop
mov
mov
in
xor
xchg
and
mov
pusha
add
lret
lcall
inc
sub
mov
mov
rcrl
loope
in
xchg
mov
lahf
jae
add
mov
mov
enter
xor
and
add
sahf
cs
cmp
xchg
imul
decl
movb
jbe
je
jg
bound
mov
fadds
aas
mov
mov
out
push
test
mov
mov
xor
mov
mov
ficoms
pop
push
add
xor
mov
mov
lcall
arpl
ja
mov
mov
es
jne
pop
addb
inc
cmp
ret
adc
in
jl
leave
xor
mov
mov
roll
mul
jp
jns
push
aad
jp
call
mov
mov
mov
cmp
add
pop
movsl
xor
push
scas
dec
add
and
leave
sub
call
sbb
adc
push
xor
mov
hlt
test
inc
xor
mov
mov
test
cmpl
enter
test
aam
pop
popa
std
inc
cmc
xor
add
jo
mov
bound
mov
fcompl
shr
sub
add
xchg
mov
add
in
push
add
imul
push
sahf
ret
insl
or
add
pop
into
xor
and
mov
mov
add
imul
add
daa
dec
inc
add
and
stos
call
nop
add
jl
xor
out
ret
mov
test
mov
push
daa
cmp
sbb
add
fdiv
fnstenv
push
cmp
fs
cmp
mov
dec
cli
popf
rolb
mov
pushf
mov
lods
pop
cltd
addb
xor
dec
mov
cwtl
outsb
add
mov
mov
mov
scas
jp
cmp
ret
rolb
mov
lcall
mov
pushf
mov
jno
rolb
adc
mov
addb
sub
fnsave
lds
add
mov
inc
mov
repz
enter
jle
mov
mov
xchg
int3
fwait
mov
lcall
inc
add
add
mov
mov
roll
sahf
cmp
mov
iret
leave
add
mov
js
scas
sbb
mov
mov
stos
mov
cld
out
bound
mov
inc
and
xchg
leave
jge
sub
arpl
mov
insl
adc
rcll
jbe
sbb
inc
add
add
add
mov
loopne
mov
out
push
aam
loop
mov
add
repnz
or
dec
out
adc
in
mov
jne
mov
mov
add
cld
push
int
add
fadd
mov
cmp
and
mov
jge
dec
push
mov
pop
mov
outsl
jbe
sbb
pop
push
inc
sub
jo
mov
cmp
add
add
add
mov
shrl
stos
cli
xor
shrl
pop
mov
cwtl
sub
xor
sahf
movsl
out
add
int
jl
add
icebp
xchg
sub
add
mov
rolb
cli
outsl
enter
aaa
dec
out
sub
ja
gs
stc
movsl
sahf
in
insl
adc
jne
pop
ljmp
add
cmp
sub
mov
push
or
dec
lods
outsl
mov
add
jo
mov
rcr
adcl
loopne
mov
insl
push
mov
cld
lea
pop
test
jb
mov
adc
mov
mov
sbb
inc
enter
mov
xor
js
cmp
scas
pusha
add
arpl
dec
jb
mov
jae
add
mov
xor
mov
xchg
xor
mov
add
xor
shrl
xor
mov
adc
cltd
dec
mov
xchg
lods
mov
pop
cmpl
mov
pop
xor
bound
mov
push
push
lcall
mov
add
scas
xchg
xor
mov
in
in
ja
add
push
stos
stc
xor
mov
add
out
test
pop
mov
inc
bound
mov
das
lahf
loope
xchg
push
add
add
pushf
pop
push
xchg
push
add
cmpsb
je
xchg
sahf
movsb
lahf
cmpsb
add
mov
cmp
aas
ja
add
mov
fstl
aam
xor
mov
cmp
mov
adc
mov
cwtl
cmc
push
add
dec
mov
ret
shl
xor
mov
inc
insl
jle
data16
lcall
mov
jo
mov
push
push
add
mov
adc
bound
mov
dec
mov
mov
lss
mov
inc
push
inc
add
jmp
add
add
inc
add
mov
add
bound
mov
add
arpl
movsb
inc
sub
xchg
sub
test
mov
mov
xchg
aaa
out
push
test
mov
test
add
inc
jb
mov
mov
cmp
xchg
icebp
aam
ds
and
mov
pop
mov
jno
mov
test
add
rolb
xor
xor
movsl
and
mov
lahf
inc
inc
shll
sbb
push
test
add
lret
add
mov
add
add
adcl
mov
call
test
repz
scas
addr16
xor
stos
cmpsl
into
movsl
and
mov
mov
add
mov
adc
lock
add
pop
cmp
or
sbb
in
adc
in
sub
mov
rolb
jno
jns
cmc
and
add
jae
ja
jge
push
add
sub
imul
arpl
pop
xchg
jge
sub
fisttps
xchg
int
dec
call
shll
mov
xchg
add
icebp
xchg
add
add
mov
outsl
dec
nop
add
mov
xor
mov
add
iret
sbb
leave
pop
mov
mov
pop
add
cmpl
js
sahf
je
jb
mov
add
add
mov
lock
add
in
pushf
mov
cltd
insb
xchg
pop
adc
in
out
xor
mov
mov
addr16
xchg
add
es
dec
jecxz
adc
mov
sub
fldcw
sbb
xchg
scas
into
rolb
mov
xchg
cmp
pushf
cwtl
xor
push
add
push
mov
pop
push
insb
nop
add
push
mov
loopne
mov
ficomps
movsb
ret
popa
mov
mov
sub
xchg
dec
mov
mov
test
nop
add
push
add
es
out
mov
mov
mov
mov
or
addb
stos
sti
push
insb
xchg
add
push
sbb
dec
hlt
and
xchg
in
cltd
sub
cmpsb
loope
call
add
or
outsb
outsl
adc
jns
scas
xchg
add
and
mov
push
push
add
mov
cmp
jae
cs
xor
cmp
add
xor
stos
xchg
out
outsl
aas
dec
mov
push
add
jno
testb
movsl
ja
and
push
addr16
aaa
or
daa
mov
out
xor
mov
loop
mov
add
add
fistps
pop
dec
xchg
ljmp
jns
popl
add
push
add
imul
xor
add
das
cli
xchg
sub
lods
sub
add
mov
lds
mov
jg
cmp
xchg
add
and
push
insl
dec
lods
out
js
pusha
add
in
mov
aas
stos
pop
clc
jg
jmp
dec
dec
sub
dec
out
cwtl
mov
mov
mov
or
fistpll
cwtl
and
mov
add
mov
ret
sub
sahf
inc
add
jno
add
in
loope
pop
pop
scas
xchg
xchg
imul
mov
xlat
adc
mov
mov
adc
lcall
repz
pop
push
mov
mov
jbe
outsl
and
popa
mov
add
mov
cmp
rcrl
pop
cli
sub
push
add
iret
fwait
sub
rolb
mov
add
pop
rcr
pop
push
popf
add
jne
aam
dec
mov
xchg
in
add
addr16
add
mov
sbb
addb
sbb
hlt
pop
pop
inc
add
outsl
ljmp
dec
testb
outsb
inc
movsb
test
add
mov
xchg
imul
pop
cmpsb
hlt
xlat
ret
imul
cmp
mov
pop
sbb
mov
mov
lea
mov
cmp
hlt
xor
fwait
add
sub
adc
cltd
jae
cmpsb
bswap
rolb
mov
fstpl
jno
decl
adc
rcll
inc
add
mov
cld
fs
jmp
dec
imul
and
jl
add
fisttpll
xor
mov
scas
cwtl
mov
idivl
mov
fs
push
jae
xor
lea
push
rorl
add
or
stc
outsb
idivl
mov
add
add
add
out
movsb
jmp
jmp
inc
inc
add
sub
pop
ja
out
jl
rol
pop
inc
cmp
xor
push
sub
mov
add
mov
mov
aaa
in
mov
push
jp
pusha
add
or
int
fdivl
sbb
xchg
xor
add
lods
mov
sub
or
pusha
add
mov
add
aas
push
lret
xor
mov
fidivrs
push
inc
add
xchg
outsl
scas
xchg
inc
add
mov
pop
popf
sbb
add
mov
xlat
xchg
jecxz
pop
add
mov
pop
xor
dec
and
add
add
add
das
mov
sbb
in
jg
orl
pop
sbb
dec
cmp
js
jg
icebp
cmp
jae
lock
or
imul
pop
pop
mov
xlat
scas
dec
cmp
sahf
and
mov
adc
popf
movsb
push
xor
xchg
mov
aas
out
add
sub
sub
test
add
jmp
cli
mov
aam
xchg
popa
sub
in
lods
dec
mov
sbb
cmpsl
insl
out
sub
sete
add
inc
int
int3
mov
and
jnp
sub
pop
push
add
and
mov
and
mov
dec
fisubs
out
xchg
or
or
test
push
add
mov
mov
leave
xchg
cmp
subl
pop
mov
loop
mov
dec
lock
lods
xchg
pop
fcmovu
hlt
rep
pusha
add
add
mov
enter
call
xchg
rolb
dec
insb
push
fwait
jnp
push
add
das
pop
aas
sub
or
fisttpll
pop
mov
std
das
test
pushf
out
test
add
dec
mov
push
ret
mov
mov
lahf
inc
ret
inc
xor
mov
or
fsubrl
mov
mov
adc
fs
pop
jbe
bound
mov
sub
mov
ret
push
jle
and
mov
adc
mov
clc
popf
test
sub
pusha
add
add
fwait
inc
add
lahf
jmp
in
pop
or
int3
jl
lret
xchg
test
rolb
mov
add
pop
and
mov
sbb
out
jg
cmpsb
mov
add
dec
xchg
add
scas
out
inc
xor
into
mov
les
pop
xchg
stos
and
mov
call
addb
xor
aad
mov
add
icebp
in
data16
mov
cmp
inc
add
pop
out
test
dec
or
add
testb
or
loopne
mov
pop
mov
pop
jg
cmp
cwtl
push
daa
dec
mov
mov
iret
pushf
jo
mov
cmp
push
jmp
iret
stos
xlat
call
sub
rolb
mov
idivl
test
xor
add
psubusb
lea
mov
jb
mov
xor
lret
mov
stc
dec
rol
xchg
imul
add
cmp
sub
dec
loop
mov
divl
and
cmp
mov
mov
push
scas
add
mov
pop
aam
pop
pop
mov
inc
inc
xchg
out
cmp
add
jbe
icebp
mov
mov
sub
sbb
mov
cmp
add
sub
lahf
addb
mov
in
jecxz
pop
jb
mov
jnp
mov
mov
mov
cmc
ficompl
daa
fildll
add
lods
insb
fsts
xor
add
mov
mov
add
jbe,pn
pop
outsb
jp
fcom
sbb
add
cmpsb
mov
lahf
sub
test
rolb
push
das
jne
stc
or
loop
mov
fcmovb
repnz
lcall
arpl
jns,pt
icebp
ja
pop
hlt
fldcw
mov
lcall
sahf
out
sub
dec
dec
push
das
fbstp
fisubs
add
dec
arpl
xchg
dec
fcmovne
jne
jbe
dec
push
xor
sbb
packsswb
dec
iret
cmp
cmpsb
pop
xlat
inc
das
jnp
int
popa
lods
fs
jge
mov
or
mov
add
rolb
mov
mov
leave
inc
mov
cmpsl
jl
in
mov
mov
or
add
pop
jmp
jp
test
mov
gs
mov
mov
add
adc
mov
mov
nop
add
pop
mov
mov
mov
jne
repz
out
mov
mov
mov
aad
add
sbb
mov
std
add
mov
insl
mov
xlat
jmp
dec
aas
fimuls
pop
cli
scas
mov
testb
mov
add
mov
jno
mov
mov
lods
adc
mov
mov
iret
int
testb
mov
mov
add
mov
aad
or
add
mov
bound
mov
outsl
push
add
xor
ss
stos
aam
dec
mov
cli
andl
xor
mov
lahf
sbb
test
add
add
rorl
das
lods
jmp
sbb
loop
mov
push
sbb
add
xchg
inc
push
fldenv
jl
inc
xor
add
test
mov
pop
into
add
push
popf
pop
loop
mov
add
imul
mov
lcall
pop
or
std
pop
jns
cmc
pushf
cmp
sbbl
add
test
jno
icebp
imul
pop
sub
xor
movlps
mov
mov
xchg
mov
inc
sub
push
or
pop
cmc
shrl
fdivrs
or
loop
mov
enter
mov
std
stos
rolb
mov
xor
mov
adc
mov
push
mov
ljmp
jmp
cmpsl
pop
xlat
sbb
cmpsl
mov
jno
pop
jb
mov
xor
mov
add
cld
adc
clc
mov
jb
mov
rolb
mov
clc
sahf
scas
imul
addr16
lcall
pop
pop
icebp
mov
push
idivl
inc
add
fistpl
jo
mov
lds
adc
mov
mov
sbb
or
mov
ds
es
mov
mov
mov
adc
lods
sbb
inc
mov
inc
push
repnz
andl
or
sbb
jmp
jae
test
cwtl
les
mov
outsl
xchg
xor
mov
stc
sarl
scas
ss
repnz
mov
add
add
mov
mov
jae
lods
js
das
fcmove
and
sbb
fdivrl
add
mov
ret
jg
or
xchg
add
cmc
shl
or
aas
push
sahf
js
add
mov
sub
jb
mov
cwtl
mov
ret
jbe
inc
push
add
fs
and
add
shrl
into
and
mov
add
cwtl
and
add
xchg
lret
test
sub
mov
add
mov
clc
repz
mov
add
add
jbe
int
fwait
ss
inc
add
add
mov
push
xchg
jecxz
jae
lret
mov
add
mov
in
dec
rcll
jo
mov
dec
jecxz
stc
out
fcoml
add
lods
lds
lcall
test
add
add
cmc
rolb
mov
dec
outsl
inc
push
test
sub
fucomp
aad
cmpsl
push
addb
push
xchg
pop
test
jle
cmp
or
lods
popa
sub
rolb
mov
cmp
das
and
rolb
mov
sahf
mov
mov
jne
aam
push
test
xor
mov
mov
adc
cmp
pushf
pop
sub
jns
add
fsubl
out
pop
nop
add
mov
jl
js
add
jecxz
lods
pushf
sbb
fistpll
roll
mov
mov
mov
push
out
jmp
push
add
dec
dec
fbld
cli
outsl
popf
pop
cli
inc
add
lods
dec
je
add
mov
outsb
mov
hlt
jl
fucomp
xor
xchg
mov
add
push
sti
jg
add
dec
hlt
xchg
out
add
mov
or
add
add
clc
mov
mov
daa
xchg
iret
or
data16
mov
sub
add
pop
xor
add
sub
mov
sub
mov
xor
mov
jne
add
rolb
mov
mov
iret
lahf
adc
fldl
jge
adc
add
out
lret
sbb
mov
pop
inc
add
in
xor
std
inc
push
int3
adc
outsl
and
push
inc
dec
out
adc
add
xchg
stos
pop
ljmp
rolb
mov
pop
daa
enter
add
je
lods
push
test
dec
mov
clc
jp
cli
les
daa
jge
imul
insl
add
icebp
rcrl
fcmovu
lahf
imull
mov
add
ss
mov
rolb
mov
jmp
mov
leave
test
inc
xor
pop
sub
add
sbb
imul
and
mov
or
fwait
cs
popa
ret
clc
aas
out
aam
mov
pop
ja
pop
jg
out
jno
or
icebp
sbb
mov
adc
inc
xchg
mov
adc
jb
mov
mov
mov
mov
and
mov
mov
cmp
arpl
loop
mov
lahf
add
cmc
push
cmp
mov
add
add
and
mov
add
push
enter
pop
adc
mov
mov
xor
movsl
jae
pop
push
jns
adc
mov
pop
pop
jns
addr16
sbb
pop
mov
mov
sub
add
push
inc
sbb
into
clc
sysenter
aam
add
pop
pop
dec
add
scas
not
add
mov
lret
add
lds
xor
xlat
sub
jns
dec
and
jmp
pop
inc
mov
mov
push
jbe
dec
test
and
mov
aaa
into
xchg
jns
and
test
add
sub
mov
mov
add
mov
mov
mov
inc
jmp
adc
mov
std
push
or
add
xor
add
mov
in
xchg
dec
dec
lret
jp
insb
imul
add
sar
push
add
add
sbb
xor
mov
push
dec
notl
arpl
xlat
cmp
dec
stos
and
mov
add
add
pop
sub
xor
mov
mov
cmp
add
mov
xchg
add
enter
inc
add
fcmovb
cmp
inc
cltd
adc
sub
jmp
fiaddl
xchg
push
cmpsl
push
inc
pop
push
mov
std
sbb
jno
out
lcall
mov
outsl
loop
mov
clc
popf
mov
add
push
sbb
sahf
aam
pushf
imul
pop
filds
add
dec
mov
aad
mov
jle
jae
lret
mov
imul
mov
push
mov
push
push
leave
xlat
cmp
mov
xchg
sbb
iret
rolb
mov
lret
jns
cmp
push
add
addb
mov
mov
mov
pop
les
mov
popa
push
std
or
mov
fidivrl
mov
mov
mov
mov
mov
aam
mov
pop
jae
aas
inc
add
or
rol
add
lcall
imul
pop
or
mov
jge
scas
insb
sub
add
add
in
enter
mov
outsb
ja
sub
mov
jge
pushf
sub
jns
pop
xchg
rolb
sti
out
pop
inc
testl
imul
cmpsl
clc
decb
ret
mov
sub
pop
lret
pushf
orl
cmp
daa
fisttpl
dec
adc
mov
add
iret
mov
push
or
pop
dec
shll
push
inc
arpl
movsb
xchg
dec
xor
mov
pop
mov
mov
dec
stos
loope
add
mov
pop
lock
mov
cmpsl
fmuls
ficoms
mov
add
aad
pop
inc
addr16
inc
jae
mov
mov
div
add
mov
sub
add
mov
add
pop
addl
icebp
and
mov
add
clc
mov
lret
stos
lods
fcompl
or
imul
mov
ficoml
add
loope
add
loopne
mov
add
rcrl
mov
icebp
cli
fnstcw
cwtl
lock
out
clc
xchg
push
push
pushf
loope
mov
xor
mov
push
cmp
mov
aas
pop
es
mov
add
pushf
push
add
daa
sub
fidivrs
cwtl
and
mov
dec
ds
fbstp
cmp
inc
xchg
ret
scas
adc
mov
cltd
test
fnstenv
push
add
test
jmp
mov
xor
add
out
dec
outsl
test
ret
dec
addr16
mov
mov
and
lret
mov
dec
dec
sti
mov
dec
lret
mov
les
sbb
mov
rolb
das
scas
fsubrl
adc
dec
mov
sbb
add
or
loop
mov
push
pusha
add
sub
pop
sbb
adc
popa
adc
clc
fbstp
lea
add
aam
fdivs
loop
mov
mov
test
xorl
jmp
mov
into
icebp
jo
mov
mov
xor
cmp
lahf
out
jecxz
inc
btr
mov
cmp
bound
mov
gs
and
cmp
add
lock
adcl
aas
testb
cmc
icebp
mov
add
aad
nop
add
mov
shr
shll
into
mov
add
mov
inc
xchg
or
decl
add
mov
and
mov
in
add
mov
xchg
mov
add
add
inc
and
mov
cmp
push
or
pop
data16
push
sbb
mov
mov
inc
push
inc
mov
dec
mov
adc
iret
cld
movsl
je
dec
js
into
inc
imul
mov
pop
std
jmp
sbb
mov
add
mov
jmp
neg
cmp
mov
add
adc
xor
mov
mov
cmova
mov
sbb
push
movsl
sbb
dec
push
add
add
sahf
pop
repnz
mov
shll
mov
mov
sub
mov
mov
sbb
arpl
ljmp
add
mov
test
push
fsubs
jmp
cmpsl
into
xor
ljmp
push
mov
nop
add
out
test
iret
push
outsl
mov
inc
add
or
adc
mov
out
or
hlt
pop
out
icebp
aas
jmp
push
repnz
add
push
cwtl
sbb
jns
hlt
xchg
addb
jae
pcmpeqd
bound
mov
sti
pop
lcall
mov
loop
mov
fcomps
add
addb
out
xor
adc
add
ret
mov
mov
xchg
rolb
mov
jle
mov
imul
inc
imul
scas
outsb
aas
adc
mov
stos
clc
lods
dec
jle
push
add
mov
in
pop
jp
add
loop
mov
add
mov
add
lahf
jecxz
lods
clc
xor
add
and
es
cmp
daa
xor
mov
xchg
xor
mov
add
in
or
dec
jle
sbb
std
push
test
sub
in
jl
fldt
out
xor
es
xor
mov
or
subl
mov
push
mov
mov
add
scas
fsubl
jl
xchg
testb
jecxz
add
sbb
mov
bound
mov
or
cmp
les
push
aaa
lret
cmpsl
or
pop
das
push
mov
adc
or
lret
xor
loopne
mov
add
aas
sbb
sbb
loopne
mov
sbb
nop
add
sbb
mov
push
mov
cmpl
mov
add
mov
mov
pop
repz
insl
ljmp
cmp
test
mov
dec
add
mov
out
scas
jmp
scas
sub
test
mov
dec
pop
mov
add
sub
in
add
mov
dec
cs
lret
push
add
mov
iret
sbb
add
add
cmpsb
mov
mov
std
movsb
call
mov
mov
in
add
fisubrl
pop
and
xchg
addb
push
pop
xchg
addb
subl
enter
jns
mov
mov
xchg
add
inc
ret
lock
rolb
data16
inc
push
lret
test
add
mov
repz
repz
mov
cli
mov
mov
push
mov
mov
insb
adc
mov
add
add
cwtl
pop
ret
fadds
mov
cmp
pop
pop
inc
add
imul
add
pop
fs
mov
push
add
add
cmp
mov
fcompl
test
hlt
sbb
add
mov
jns
mov
cltd
arpl
and
mov
fs
mov
mov
sbb
imul
ja
rolb
mov
push
add
mov
add
add
divl
add
push
mov
add
xor
pop
push
in
sbb
push
add
inc
call
mov
enter
add
pop
loopne
mov
mov
mov
mov
insl
pop
popf
fiadds
dec
test
pop
pushf
or
mov
jbe
addb
mov
mov
mov
aad
add
imul
mov
xchg
sub
je
add
mov
adc
mov
ds
jno
pop
jmp
adc
mov
jg
or
mov
pop
jp
lock
pop
add
push
in
dec
sub
sbb
mov
xor
mov
outsl
jp
aas
sub
out
addb
scas
popa
hlt
mov
sahf
in
lods
insb
dec
iret
insb
pushf
sbb
outsl
cmpsb
rolb
mov
xor
mov
mov
pushf
dec
jae
adc
mov
xor
imul
jp
je
add
add
xchg
outsl
jg
in
inc
cmpl
enter
mov
sbb
mov
jge
add
call
in
sub
xchg
push
mov
mov
add
mov
add
and
inc
jp
scas
add
push
into
xchg
push
mov
lods
mov
xor
mov
es
aam
add
jmp
mov
in
sbb
addb
mov
mov
mov
out
adc
mov
mov
jle
dec
adc
mov
push
mov
or
lcall
add
nop
add
inc
add
mov
mov
pop
xchg
mov
cmp
adc
scas
test
add
or
les
mov
dec
mov
call
inc
add
outsl
lock
cmp
add
popf
aas
div
fistl
mov
mov
fstpt
out
jae
add
fwait
mov
in
in
mov
adc
mov
jo
mov
lcall
jmp
cmp
adc
mov
mov
add
out
fmul
jmp
lret
aas
and
mov
inc
mov
xor
add
inc
add
mov
cs
add
hlt
push
pop
fwait
cmpsl
xchg
add
jp
jbe
rolb
mov
push
dec
push
nop
add
aam
popf
bound
mov
xor
outsb
and
mov
mov
inc
addr16
xor
push
push
mov
mov
xor
mov
mov
mov
mov
jmp
movsl
xchg
inc
dec
mov
mov
mov
cmpsl
ret
addr16
add
add
mov
mov
leave
adc
ret
cmp
call
adc
mov
lret
mul
shl
add
sbb
xchg
xor
mov
sbb
jne
mov
mov
mov
jbe
lds
loopne
mov
push
test
xlat
imul
ret
xor
or
pop
hlt
xchg
into
leave
and
mov
mov
cmp
pop
pop
pop
adc
sub
imul
pop
sbb
sbb
pop
dec
inc
lods
xor
mov
popa
iret
popf
dec
es
rolb
mov
mov
add
sbb
dec
aaa
lret
test
nopl
mov
mov
dec
xchg
test
rolb
mov
cmc
in
cmp
rolb
mov
xor
outsb
aam
xchg
xor
test
and
pop
jp
or
add
mov
inc
dec
inc
xchg
cli
mov
sub
fcmovnb
sub
repz
add
mov
sbb
aam
sub
dec
add
mov
icebp
rolb
mov
cmp
and
add
pusha
add
push
add
ret
dec
out
sub
je
add
cmp
test
mov
and
mov
add
pusha
add
xor
leave
mov
out
cmp
adc
cmp
sub
pop
ljmp
pop
xchg
sbb
add
or
sub
rolb
std
pop
cltd
lea
add
mov
mov
shll
repz
js
sbb
mov
dec
sbb
cs
cmp
xlat
inc
jmp
call
insl
lret
cs
xorl
jge
add
test
jbe
bound
mov
clc
mov
js
bound
mov
jno
sub
xor
adc
ja
pop
mov
pop
cwtl
jmp
cmp
aam
add
push
out
xchg
add
ret
in
add
jge
add
data16
pop
shll
fldenv
sub
or
outsl
fisubrl
mov
and
mov
popf
pop
or
add
jnp
push
add
push
ja
repnz
popa
mov
add
dec
or
push
orl
pop
movsb
or
aad
in
add
add
mov
not
add
mov
aam
lahf
dec
push
rolb
mov
pop
subl
dec
xchg
dec
out
jle
jl
inc
mov
out
adc
rolb
pop
lcall
mov
in
jg
aaa
lods
push
fidivrl
testb
addb
lods
in
cmc
rorl
xchg
dec
lret
leave
xchg
divl
nop
add
fimuls
push
in
pusha
add
push
jg
jb
mov
mov
add
jecxz
test
in
sub
lret
fsub
out
repnz
mov
je
jecxz
add
repz
push
mov
xor
mov
stos
hlt
push
pop
loopne
mov
loop
mov
add
push
mov
xchg
push
test
dec
or
add
lods
cwtl
pop
in
add
dec
jle
cltd
cmpsl
pop
or
adc
out
addb
xor
movsl
jo
mov
popf
cltd
push
mov
repz
mov
fldenv
loope
cmpsl
adc
fs
add
mov
mov
mov
push
cltd
movsl
leave
pop
js
xor
push
add
out
sub
loopne
mov
repz
push
cmp
leave
aas
call
and
or
aam
std
sahf
jne
scas
pusha
add
cmp
cmpsb
inc
add
out
sub
cmp
mov
adc
jmp
cltd
push
test
dec
orl
add
inc
sub
pushf
add
mov
rolb
mov
lods
jnp
jmp
push
ljmp
fs
dec
jno
jle
inc
push
xchg
sub
pop
xchg
add
js
addb
dec
repz
scas
insl
call
inc
or
add
sti
test
add
mov
xchg
pop
or
jne
mov
mov
cmpsb
inc
pop
fabs
sub
jl
dec
xchg
mov
add
mov
orl
cmpsb
xchg
cmc
lods
icebp
jl
popa
pusha
add
add
icebp
ffree
add
rorl
add
add
add
mov
mov
scas
mov
mov
clc
test
xlat
mov
fstl
mov
add
mov
enter
gs
mov
push
inc
fistpll
out
dec
std
lock
inc
push
jns
jae
mov
movsl
hlt
cld
jnp
add
jo
mov
add
insb
and
mov
mov
fwait
dec
sub
cltd
cmp
adc
out
push
add
add
or
orl
cmpsb
repz
mov
mov
add
mov
es
adc
add
pop
sahf
stos
pop
jle
push
cltd
bound
mov
je
pop
mov
sub
push
add
mov
mov
mov
adc
cmp
jmp
add
mov
stos
cmc
push
inc
femms
or
lods
mov
cmpsb
arpl
call
push
fisttpll
mov
mov
xor
movsb
iret
ds
pop
sub
sub
pusha
add
add
cmp
rolb
mov
mov
test
inc
xchg
clc
mov
mov
mov
add
fldl
pop
stos
push
mov
mov
mov
add
add
fldt
repnz
add
lcall
mov
mov
das
or
rcrl
or
aaa
adc
andl
les
ret
fiaddl
and
mov
push
call
movb
aaa
cs
inc
mov
dec
enter
ss
cmp
test
mov
in
cwtl
adc
inc
xlat
mov
cmp
mov
test
mov
in
outsl
sub
popa
inc
cmp
push
push
jns
in
in
bound
mov
mov
mov
inc
jmp
repnz
cmp
or
sub
or
pop
push
jbe
mov
or
add
jae
add
jb
mov
push
mov
adc
mov
xlat
call
sar
sahf
nop
add
cmc
loop
mov
mov
test
cmpsb
pusha
add
jg
call
xor
clc
int3
in
mov
jnp
push
add
inc
inc
sbb
sbb
testb
loopne
mov
sub
cs
add
enter
ds
mov
mov
mov
sar
clc
pop
aad
fnsave
mov
xchg
mov
fmul
xchg
ss
bound
mov
divl
repz
push
add
out
dec
ljmp
imulb
mov
sbb
lock
mov
arpl
add
jle
lret
mov
jo
mov
add
add
xchg
mov
adc
add
out
cmp
addr16
push
add
out
xlat
and
mov
fsin
push
adc
xor
cs
leave
push
xchg
xor
mov
imul
add
jns
add
outsb
inc
rolb
push
jnp
mov
mov
mov
xor
mov
ja
jmp
js
add
std
sub
add
mov
jb
mov
add
push
and
mov
mov
add
arpl
ret
mov
mov
or
cmovb
mov
add
addb
call
add
fcoml
in
and
cmpl
mov
add
add
mov
lcall
repnz
nop
add
add
jnp
fwait
enter
xor
add
mov
stc
stos
imull
in
bound
mov
add
add
mov
icebp
and
add
int3
push
dec
mov
mov
testb
cs
ret
pop
xchg
cmp
sbb
iret
mov
sub
push
add
loop
mov
test
imul
dec
rolb
mov
sbb
adc
add
jg
sub
aam
int3
scas
pop
sbb
push
xor
mov
mov
repnz
jle
push
jp
xchg
mov
jmp
xor
xor
sub
fsubs
mov
sbb
lret
lods
and
mov
les
out
mov
test
cmpsl
daa
xor
fisubs
mov
push
js
mov
fwait
test
fnstsw
xor
enter
add
mov
mov
add
mov
sub
fs
add
xchg
sti
roll
add
int
lahf
mov
add
lock
mov
je,pn
xor
mov
cltd
lcall
mov
sbb
jae
test
push
add
sub
rolb
mov
mov
std
loop
mov
add
xor
mov
push
add
scas
lret
aas
xchg
mov
push
cs
dec
imul
insb
cmp
mov
add
test
and
mov
out
stc
push
ficompl
cmp
mov
dec
sub
add
les
ret
hlt
cs
in
cs
push
pop
xchg
cmp
sti
push
jmp
add
mov
add
mov
and
ret
aad
adc
mov
ret
jo
mov
mov
push
sarl
mov
neg
cmp
add
add
xchg
mov
mov
push
and
cmp
stc
dec
push
in
movsb
rcrl
dec
or
cmpsb
fwait
mov
xchg
pop
aam
test
cwtl
out
lods
cmp
push
fimuls
in
cmpsb
aas
mov
lds
lods
mov
xorl
xchg
or
int3
mov
mov
into
xor
lods
xlat
adc
add
fcoms
lret
push
sub
dec
jl
add
mov
dec
mov
mov
mov
jmp
ficompl
cmpsb
pop
enter
inc
dec
sub
cmc
dec
mov
pop
rcll
dec
push
jne
sbb
pop
stos
fnsave
mov
roll
add
add
cli
push
push
addb
push
jge
lea
add
rolb
or
clc
daa
add
mov
jo
mov
and
mov
ret
xchg
add
dec
ds
or
xchg
add
int
or
jo
mov
mov
sub
cmp
mov
push
addb
inc
mov
mov
add
mov
ljmp
inc
xor
repz
jg
mov
xor
inc
jle
jb
mov
and
fidivrs
out
frstor
xchg
loop
mov
and
and
mov
into
lcall
add
bound
mov
mov
lahf
push
ds
add
imul
mov
add
dec
jb
mov
or
data16
lret
mov
add
jae
add
sbb
mov
pop
dec
jmp
xorl
add
imulb
add
jmp
push
popf
mov
mov
addb
cltd
push
pusha
add
add
out
adc
mov
imul
pop
sbb
add
mov
nop
add
push
lds
addr16
pop
xchg
inc
cld
adc
scas
addr16
sbb
std
or
popa
inc
movsb
jmp
add
push
add
add
shll
cwtl
and
loopne
mov
sahf
fsubr
mov
mov
sub
sub
fsubrp
inc
push
xchg
add
cs
fstps
stos
test
cmpsb
movsl
flds
clc
faddp
adc
push
jno
jg
dec
jns
adc
inc
stos
jno
pop
out
mov
jno
inc
daa
int
loop
mov
mov
rolb
mov
in
pop
scas
dec
stos
out
test
cmpsl
lds
sbb
cli
and
popa
cli
jmp
lods
mov
fwait
lods
test
jmp
pop
fists
pop
jmp
add
jno
shll
push
ret
mov
ja
loope
loope
lock
adcl
in
sbbl
lret
mov
leave
push
add
mov
jb
mov
add
imul
add
out
adc
mov
daa
mov
mov
mov
or
xchg
popf
adc
mov
lret
movsl
cmp
mov
lock
in
cmp
aad
pop
cmpsl
push
add
scas
addr16
xor
mov
inc
dec
pop
push
repnz
add
scas
iret
out
dec
push
es
push
adc
mov
sub
enter
test
cwtl
inc
add
push
mov
add
add
aaa
inc
add
fnstsw
add
mov
xchg
jl
jmp
lahf
insl
push
add
push
mov
mov
mov
pushf
test
sbb
pop
or
mov
addb
xchg
std
pop
pop
out
sub
or
xchg
sbb
jne
adc
lea
loop
mov
notb
add
mov
add
xor
movsb
rolb
mov
cmp
add
add
and
mov
xorl
mov
pop
cmc
sub
and
mov
push
add
popa
push
xorl
mov
add
mov
xchg
inc
lods
leave
add
adc
mov
enter
in
or
aas
inc
push
mov
adc
mov
test
add
repz
mov
xor
icebp
enter
mov
mov
xchg
mov
idivb
mov
jge
jmp
mov
add
add
mov
rolb
loope
rolb
mov
add
cmc
gs
jns
fimull
mov
mov
test
and
mov
pusha
add
test
jbe
cmp
add
adc
xor
add
frstor
lock
scas
jmp
and
mov
xchg
orl
mov
cmpsb
lods
mov
out
test
add
filds
lods
cltd
and
mov
pop
rolb
mov
adc
test
add
xchg
add
out
dec
push
cltd
and
push
add
rolb
inc
mov
mov
push
stos
popf
fldcw
sti
cmpl
cmpsl
push
rolb
popa
sbb
sbb
out
pop
pop
lods
sub
add
outsb
repz
add
ret
mov
mov
mov
add
cmp
dec
out
mov
nop
add
mov
mov
jae
jno
sbb
mov
add
sbb
popf
lock
xor
daa
cmp
pop
in
mov
roll
and
mov
mov
mov
fdivs
adc
rolb
mov
lret
xchg
ds
pop
or
xchg
movsl
or
pop
dec
or
je
pop
into
rcr
add
test
mov
mov
jl
dec
lods
in
jmp
pop
loopne
mov
mov
cmp
jl
mov
adc
fs
and
add
cmpsl
cli
arpl
js
jmp
push
loope
inc
cmpsb
jg
mov
cmp
rcrl
add
aam
int3
or
add
mov
fsubp
int
cwtl
adc
add
es
add
mov
sbb
call
dec
mov
mov
add
cmp
jmp
mov
push
imul
jb
mov
inc
push
push
dec
addr16
adc
mov
mov
addr16
xchg
mov
fucom
cmc
addb
dec
xor
mov
es
imul
stc
adc
add
mov
lret
mov
dec
repnz
dec
cmp
pushf
rorl
push
fiaddl
outsl
push
xor
add
push
das
lds
lds
aaa
outsl
pushf
sub
addr16
int3
mull
lahf
rolb
negl
or
pop
fldt
ret
addb
cmpsb
mov
push
es
add
in
jne
xchg
call
add
mov
add
enter
fdivrl
add
xchg
add
xchg
jnp
sub
fdivrl
cmpsl
daa
fbld
jl
icebp
or
and
xchg
xor
jg
push
xchg
cmp
inc
and
mov
lret
mov
movsb
push
fdiv
cs
mov
inc
mov
xlat
jecxz
fs
in
mov
or
mov
fs
pop
popa
mov
mov
add
xchg
lret
decb
cmpsl
cmp
dec
xor
push
mov
out
mov
jo
mov
inc
xchg
pusha
add
push
xchg
sub
xchg
ljmpw
rolb
mov
in
lods
rolb
mov
inc
fimuls
das
divb
push
add
imul
adc
and
popf
push
in
add
stos
add
add
mov
mov
dec
lds
subl
loopne
mov
jle
bound
mov
add
mov
sub
ss
and
rolb
mov
push
sbb
jge
or
add
stos
in
sub
add
mov
mov
jecxz
add
add
mov
or
jae
in
fwait
sti
xchg
fisubs
sarl
lret
rolb
out
divl
cmpsl
xchg
outsb
cmc
enter
jne
mov
pusha
add
mov
add
fcmovbe
jp
add
outsb
dec
cmp
add
mov
mov
mov
sub
inc
mov
jne
add
faddp
add
adc
mov
adc
mov
iret
cmp
add
std
mov
adc
add
aad
cltd
pop
aad
scas
imul
addr16
push
loop
mov
or
sbb
lods
mov
push
mov
pop
xchg
add
sbb
ficomps
insl
jmp
push
scas
inc
add
add
xchg
call
popf
cmpl
add
stos
int
inc
or
mov
jbe
push
shll
push
add
xor
loopne
mov
pop
mov
add
ret
and
mov
outsb
in
leave
lds
push
push
mov
jne
mov
mov
enter
add
add
cmp
movsl
mov
add
mov
enter
arpl
jne
lret
push
jmp
add
push
adc
movsb
add
mov
pop
and
mov
add
inc
fdivs
mov
adc
stos
mov
bound
mov
cmc
call
sub
sub
add
add
