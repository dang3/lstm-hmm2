add
add
add
cltd
add
add
add
mov
mov
mov
xlat
xlat
lret
lret
lret
lret
lret
lret
lret
adc
adc
adc
and
add
add
add
popf
popf
popf
popf
lret
lret
in
and
and
dec
repz
enter
enter
enter
add
add
sti
sti
sti
leave
leave
add
sbb
add
je
mov
cmp
sarb
cmp
cmp
add
call
ljmp
pop
pop
pop
add
add
add
push
push
test
add
add
add
ss
add
ret
ret
ret
add
add
pop
pop
pop
add
aas
aas
aas
aas
aas
aas
push
insl
insl
insl
bound
popa
xchg
add
and
and
and
push
push
push
movups
adc
fiaddl
loop
loop
loop
addr16
add
fstpt
mov
mov
mov
adc
add
addr16
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
xchg
add
add
add
add
xchg
xchg
xchg
add
pop
add
add
add
add
add
add
add
add
dec
cmpsb
add
add
add
int3
add
add
add
jp
add
ltr
sbb
scas
scas
or
or
or
or
or
add
add
add
add
add
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
aaa
aaa
aaa
rcl
rcl
roll
pop
pop
pop
pop
pop
test
add
add
imul
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
out
out
add
add
addl
pop
pop
mov
add
add
add
nop
nop
nop
add
mov
add
aas
ret
ret
add
add
lret
xchg
add
add
bound
bound
add
add
add
out
cmp
cmp
add
add
add
xor
xor
xor
in
in
in
in
in
jo
jo
jo
jo
jo
add
icebp
icebp
icebp
add
ss
sub
sub
rcl
rcl
rcl
roll
addb
lods
lods
lods
lods
lods
add
dec
dec
dec
add
add
enter
aam
aam
aam
aam
aam
aam
add
add
add
fcmovu
pop
pop
pop
add
lea
cld
add
pop
add
add
add
add
add
add
add
add
add
aam
aam
aam
aam
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
sbb
sbb
and
mov
adc
add
jo
jo
jo
aad
aad
xor
lcall
add
add
pop
jnp
jnp
pop
xor
add
add
mov
outsb
outsb
outsb
add
add
ja
js
js
add
add
push
push
lea
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
shrl
insb
insb
insb
aam
aam
xor
xor
xor
xor
mov
mov
mov
or
or
or
or
das
das
das
sub
rol
rol
add
add
test
cli
cli
cli
add
add
add
push
jp
jmp
jmp
js
js
js
add
add
push
push
push
test
test
test
test
test
test
gs
gs
arpl
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
fcomp
fadds
add
add
pop
pop
cmp
ret
jg
jg
jg
or
add
add
jl
jl
jl
add
cmp
add
pop
pop
pop
pop
addr16
out
out
out
addr16
bound
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
add
dec
add
in
in
in
in
in
aas
aas
aas
aas
ss
sub
sub
add
sub
sub
jo
jo
add
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
sbb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
adc
add
add
add
add
add
add
add
add
add
mov
add
push
push
mov
or
or
xor
xor
xor
arpl
add
add
add
add
hlt
hlt
hlt
hlt
stos
stos
stos
mov
mov
int3
int3
int3
jg
add
outsb
outsb
outsb
outsb
outsb
add
jp
jp
add
push
vmovd
jle
in
in
in
in
in
in
in
in
in
add
add
das
das
das
das
add
and
and
and
and
and
inc
inc
add
add
add
add
lods
lods
lods
lods
lret
add
add
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rcl
rcl
rcl
rcl
rcl
pop
inc
add
add
push
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jmp
jmp
add
add
add
add
pop
pop
or
xchg
xchg
xchg
xchg
adc
adc
adc
adc
adc
adc
adc
adc
push
sbb
mov
mov
add
out
out
out
add
add
sbb
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
adc
add
in
jbe
add
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
imul
add
add
add
popl
add
cmp
add
add
add
dec
clc
add
add
add
xor
inc
adc
adc
or
or
or
or
add
add
cs
cmp
add
add
add
loop
loop
loop
push
push
cmp
cmp
cmp
add
das
das
add
add
pop
pop
pop
pop
pop
pop
pop
and
or
sub
sub
cmp
add
add
add
jmp
jmp
xor
push
push
push
push
dec
dec
add
or
or
or
cmc
cmc
cmc
fiadds
add
add
movsl
movsl
rcrl
sahf
and
add
add
add
push
push
push
push
push
push
add
cltd
cltd
add
mov
add
add
add
cltd
cltd
add
cs
add
add
add
or
or
or
repz
mov
push
add
add
add
test
add
add
or
or
add
xchg
xchg
out
out
out
out
out
out
scas
scas
scas
scas
scas
scas
scas
into
into
into
into
into
into
into
into
into
into
into
push
push
add
addl
cld
add
ret
add
add
cld
div
add
icebp
add
add
loopne
loopne
cmp
cmp
cmp
cmp
add
fucomip
out
add
jge
jge
jge
cli
or
mov
mov
ret
ret
ret
add
add
add
add
je
je
add
jge
and
and
and
and
and
add
add
add
adc
adc
adc
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
and
js
js
out
out
out
out
mov
cld
cld
cld
cld
cld
es
dec
dec
dec
and
and
jb
jb
adc
adc
jo
jo
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
or
or
or
or
cmp
fstp
fstp
fstp
fstp
fstp
out
out
out
loopne
add
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cs
add
add
add
dec
dec
dec
pop
pop
pop
pop
add
and
insb
insb
insb
insb
insb
insb
mov
mov
add
add
dec
jge
jge
cmp
cmp
loop
mov
jle
jle
icebp
icebp
add
dec
add
add
add
push
push
push
aam
add
add
js
js
js
js
js
data16
inc
inc
inc
inc
inc
inc
inc
dec
add
adc
sub
add
add
add
add
add
add
icebp
in
in
sbb
pop
adc
adc
add
add
add
aas
aas
aas
lock
push
sub
movl
push
sub
sub
sub
adc
add
out
and
fstp
fstp
fldl
add
add
mov
mov
add
add
and
and
and
and
and
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
incl
add
add
add
add
add
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
and
and
and
enter
loope
aaa
aaa
mov
and
and
inc
inc
inc
inc
int3
int3
int3
int3
int3
int3
outsl
insb
insb
insb
insb
push
push
push
push
push
push
push
xor
xor
add
add
test
add
add
dec
dec
dec
adc
adc
add
add
sbb
sbb
sbb
add
push
push
push
add
cmp
cmp
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
push
push
push
jns
jns
jns
jns
jns
jns
stos
cmp
out
out
out
out
out
adc
test
add
add
add
add
fwait
add
add
xlat
add
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mull
add
sub
sub
add
add
cmp
add
test
add
add
add
mov
mov
add
add
add
cmc
cmc
cmc
cmc
xchg
xchg
add
add
lock
add
add
addb
pop
pop
pop
pop
pop
pop
movsb
movsb
ja
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
pop
pop
pop
pop
add
decl
add
add
jge
jge
jge
insl
insl
insl
insl
insl
ljmp
sldt
add
add
push
sub
add
or
add
add
pusha
mov
add
out
out
mov
mov
mov
mov
mov
sbb
addb
addb
fcomp
fcomp
fadds
sbb
sbb
mov
push
push
mov
add
add
rorl
dec
dec
dec
dec
dec
dec
dec
movsb
movsb
movsb
movsb
movsb
add
add
data16
in
incb
add
add
adc
add
add
es
rcrb
push
push
push
push
push
push
push
adc
jae
jae
add
add
mov
add
add
add
pop
add
push
push
enter
enter
imul
add
add
add
add
ss
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
clc
clc
add
sahf
sahf
sahf
sahf
sahf
sahf
je
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
pushl
jbe
pop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
or
arpl
arpl
arpl
arpl
insl
insl
faddl
add
add
add
add
sub
sub
jg
jg
ja
ja
ja
add
fstp
fstp
and
and
xor
ss
iret
iret
push
in
in
add
xor
xor
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
push
enter
enter
mov
mov
push
push
push
push
push
add
add
add
add
lret
lret
lret
lret
sbb
sbb
sbb
sbb
sbb
add
add
add
mov
mov
mov
je
rcl
rcl
rcl
xor
add
inc
inc
loope
loope
add
sub
inc
inc
add
inc
inc
repnz
mov
mov
mov
xchg
xchg
xchg
mov
add
add
add
mov
and
and
and
sub
sub
add
push
push
push
push
push
push
push
push
xchg
sbb
sbb
pop
aad
aad
aad
cs
xor
ljmp
add
popa
popa
popa
popa
popa
popa
lea
jae
add
add
add
mov
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
inc
inc
push
push
push
push
push
hlt
pushf
pushf
and
add
jo
jo
mov
or
or
add
cmp
das
das
das
add
add
sub
sub
sub
add
add
add
call
push
push
push
push
push
push
push
jmp
rcl
rcl
js
js
js
mov
addl
add
add
add
add
add
add
jl
bound
bound
or
or
mov
mov
lret
outsl
add
add
mov
add
add
jle
jle
add
inc
inc
inc
and
and
and
and
and
and
repnz
and
jo
jo
add
add
xlat
xlat
add
add
adc
add
add
cmp
cmp
loop
ljmp
inc
add
add
arpl
add
add
add
cwtl
push
add
jmp
xchg
cltd
cltd
add
in
jle
jle
jle
jle
jle
jle
add
hlt
hlt
hlt
fnstsw
mov
mov
cltd
cltd
cltd
cltd
add
add
add
add
xor
xor
xor
movsl
stos
stos
stos
stos
stos
stos
add
add
add
dec
dec
dec
dec
in
add
data16
xor
xor
xor
add
add
add
add
inc
inc
add
add
loope
add
add
add
ret
ret
add
pusha
pusha
pusha
pusha
rep
inc
insl
insl
insl
popa
popa
popa
popa
popa
popa
popa
add
and
and
and
and
and
and
and
and
and
outsl
outsl
outsl
outsl
outsl
mov
add
dec
add
add
add
mov
xchg
xchg
xchg
add
add
add
dec
dec
dec
dec
inc
inc
add
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
adc
adc
adc
adc
adc
clc
cmp
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
push
ja
ja
ja
ja
test
test
test
xor
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
add
add
shlb
mov
mov
mov
mov
mov
js
add
add
int
jne
jne
jne
add
ds
add
enter
push
push
push
jl
add
test
test
add
add
add
fcmovnu
fcmovnu
fcmovnu
mov
dec
dec
dec
inc
inc
inc
inc
push
push
dec
dec
dec
dec
dec
jne
jne
jne
jne
jne
jne
jne
jne
add
add
mov
aad
pavgb
add
imul
adc
adc
xchg
add
add
add
aam
aam
add
push
push
push
push
test
push
push
mov
sbb
add
jno
or
add
add
add
adc
adc
dec
dec
dec
dec
dec
aas
mov
mov
add
in
in
add
js
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
push
les
add
add
add
add
adc
adc
imul
enter
enter
add
flds
add
pop
pop
pop
sbb
sbb
and
and
add
sbb
sbb
sbb
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
rcl
rcl
rcl
rcl
shl
and
and
out
out
out
out
out
out
add
repnz
rol
rol
roll
pushf
pushf
pushf
pushf
mov
lock
add
add
add
add
add
add
add
add
add
add
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
dec
dec
dec
dec
mov
mov
add
add
ret
sti
sti
sti
push
les
push
push
push
pop
pop
pop
mov
mov
mov
mov
mov
lock
dec
dec
pop
pop
add
add
add
push
push
push
push
push
push
push
sub
mov
push
push
add
add
sbb
sub
sub
sub
cwtl
cwtl
cwtl
cwtl
inc
inc
inc
popf
popf
popf
add
add
add
add
add
add
dec
dec
dec
dec
mov
cmp
cmp
mov
or
test
scas
scas
incb
add
mov
adc
adc
adc
adc
adc
adc
add
pusha
pusha
pusha
pusha
pusha
pusha
mov
add
add
add
add
add
add
je
add
add
add
fadds
xchg
add
outsl
add
add
add
cs
aad
je
add
add
add
add
ret
in
in
in
in
in
in
in
in
ljmp
ljmp
aaa
aaa
aaa
aaa
aaa
xor
mov
add
add
cld
cld
cld
jge
jge
jge
add
add
sbb
sbb
mov
bound
add
add
lret
lret
lret
lret
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
repz
xchg
xchg
xchg
xchg
xchg
xchg
test
test
add
add
push
xor
xor
mov
mov
xchg
xchg
xchg
add
add
add
xchg
fcmovu
fcmovu
fcmovu
fcmovu
ficompl
jne
jne
jne
add
add
test
test
xchg
xchg
xchg
xchg
div
div
pop
pop
pop
pop
pop
pop
lock
pop
pop
pop
pop
add
add
test
lea
xchg
xchg
xchg
xchg
sbb
scas
scas
scas
scas
scas
scas
scas
scas
scas
call
add
add
xchg
xchg
xchg
xchg
mov
out
out
mov
lods
push
push
push
push
push
push
push
push
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
adc
or
or
data16
ret
ret
ret
ret
ret
ret
add
add
add
add
scas
scas
arpl
arpl
xor
rcl
add
add
add
add
cmp
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
inc
inc
inc
inc
inc
inc
inc
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
stos
stos
stos
stos
stos
stos
stos
add
and
xchg
xchg
aaa
aaa
aaa
aaa
aaa
aaa
pop
pop
rolb
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
in
in
pop
pop
pop
add
mov
mov
sbb
sbb
sbb
sbb
sbb
add
add
lahf
lahf
addb
sub
div
idivl
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
add
inc
inc
inc
inc
add
add
add
adc
adc
adc
add
or
or
or
addb
addb
addb
add
aad
xor
xor
xor
les
xchg
xchg
xchg
pop
pop
pop
pop
pop
arpl
arpl
arpl
add
stc
stc
stc
add
add
add
add
add
add
add
add
sbb
sbb
add
add
mov
ret
add
add
mov
daa
daa
daa
daa
scas
scas
scas
add
jge
jge
jge
jge
add
sub
add
add
add
and
and
and
mov
add
add
jecxz
jecxz
jecxz
jecxz
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
push
push
push
push
push
push
fcomp
ret
add
add
add
add
cmpsl
add
add
add
shrd
add
icebp
icebp
xchg
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
popl
add
add
rdtsc
xor
xor
xor
add
add
add
add
icebp
add
push
push
push
or
or
or
jne
xor
arpl
arpl
add
add
add
jmp
add
paddw
or
or
or
or
or
or
or
add
add
add
add
add
add
dec
stos
stos
stos
stos
stos
cs
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
add
je
je
add
add
mov
mov
adc
fcomp
fcomp
fadds
and
and
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aam
aam
aam
jb
jb
mov
fstp
add
add
or
or
or
add
mov
add
lret
lret
lret
lret
js
add
add
add
and
add
add
pop
mov
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
add
add
and
and
and
push
push
push
push
push
push
push
push
sbb
add
add
test
test
fcomp
add
add
add
and
add
sbb
add
stos
stos
stos
stos
jns
jns
jns
add
push
push
push
sbb
dec
push
test
test
test
test
sahf
mov
rolb
mov
pop
pop
pop
pop
pop
add
add
add
mov
mov
mov
mov
cmp
nop
nop
nop
nop
nop
push
push
add
add
add
add
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
fiadds
jge
cmp
cmp
les
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
lahf
lahf
add
add
arpl
arpl
arpl
arpl
arpl
arpl
or
or
or
dec
add
int
mov
fcomp
fcomp
fcomp
fcomp
fcomp
fdivs
add
add
les
mov
loope
loope
loope
loope
loope
loope
add
push
push
push
adc
adc
adc
adc
adc
xlat
add
add
add
push
add
add
ds
ds
add
jmp
into
into
into
into
into
into
into
into
into
into
into
into
into
into
add
in
in
in
mov
mov
ret
add
mov
add
div
imull
cs
jns
jns
das
das
das
das
das
das
das
das
das
add
loope
loope
add
outsl
hlt
jmp
jmp
sbb
popf
jmp
lret
lret
lret
add
add
test
test
test
test
test
test
add
sbb
add
add
add
loopne
loopne
bound
bound
bound
add
add
add
add
dec
dec
dec
jb
jb
adc
adc
adc
adc
in
in
in
in
adc
add
add
fcoms
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jae
jae
jae
xchg
add
and
and
add
add
add
flds
jge
jge
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sbb
nop
sub
sub
sub
sub
sub
sbb
sbb
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
les
mov
and
and
and
and
and
and
sub
sub
sub
add
add
movsl
movsl
add
add
sti
sti
sti
sti
sti
sti
test
add
int
rol
adc
adc
adc
add
add
add
add
ds
cmc
cmc
pop
pop
add
add
out
out
out
mov
add
loop
loop
loop
loop
loop
add
push
sbb
jbe
add
add
add
add
add
cmp
add
add
mov
jmp
cld
cld
cld
add
add
add
popa
popa
popa
add
sbb
sbb
add
add
add
or
or
or
or
or
jne
and
and
and
and
and
add
add
add
nop
push
push
add
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
add
add
add
vpsllq
repz
sub
sub
sub
sub
add
add
add
add
push
push
push
push
push
fiadds
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
cmp
cmp
cmp
mov
add
add
add
add
add
mov
mov
add
add
add
mov
mov
mov
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
loopne
loopne
add
add
leave
leave
leave
leave
leave
leave
leave
jo
add
inc
inc
add
sbb
sbb
add
add
add
add
fldcw
cs
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
cltd
add
add
call
sub
jmp
mov
add
add
push
push
push
push
push
add
add
add
fcmovu
mov
add
xor
in
in
in
in
add
add
push
push
push
push
bound
bound
loopne
loopne
push
push
add
jb
jb
jb
jb
add
jo
jo
jo
jo
or
pop
pop
pop
pop
pop
pop
add
add
sbb
xor
mov
ja
xor
xor
xor
xor
add
add
dec
push
push
push
push
push
add
add
add
add
filds
mov
add
add
add
add
add
gs
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
test
push
push
push
jbe
jbe
jbe
sub
sub
add
jb
pop
pop
pop
or
incl
add
addl
in
cmp
lds
add
int3
int3
int3
int3
int3
rcll
adc
adc
inc
inc
adc
add
cmc
inc
inc
inc
inc
inc
add
inc
inc
inc
inc
cld
cld
cld
cld
inc
inc
inc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
pop
lock
lret
lret
lret
lret
lret
lret
lret
ss
fstp
fnsave
jne
add
add
out
pop
pop
pop
pop
pop
pop
pop
scas
scas
scas
add
add
add
fstps
insl
insl
insl
insl
insl
add
add
mov
jbe
jbe
jbe
jbe
test
test
cmp
cmp
add
nop
movsl
movsl
mov
add
xchg
pop
pop
pop
pop
loopne
loopne
loopne
add
and
push
push
push
push
adc
add
add
add
add
rol
rol
ja
ja
ja
ja
ja
iret
iret
add
jmp
jmp
jmp
xchg
xchg
call
cmp
data16
test
test
test
daa
daa
daa
daa
daa
daa
daa
daa
add
add
add
add
data16
add
inc
aas
aas
aas
nop
out
out
and
and
jl
jg
mov
mov
mov
mov
mov
add
add
xchg
xchg
xchg
aam
aam
add
add
add
add
add
cmp
add
mov
sbb
sbb
sbb
out
addr16
mov
jecxz
jecxz
and
dec
in
in
add
add
adc
adc
add
add
add
add
add
add
mov
mov
mov
das
das
das
das
das
es
add
add
jo
mov
pop
inc
xchg
sbb
jle
les
add
jmp
pop
xor
or
pop
cmp
dec
inc
xorl
inc
inc
pop
jno
ss
lds
fucomip
popl
push
movsb
and
in
cltd
mov
scas
or
mov
mov
cmp
add
das
aam
cmpsb
loopne
lods
and
inc
fs
sahf
loop
lahf
sbb
cmp
int
test
xor
and
sbb
std
mov
pusha
and
jbe
pop
xchg
sub
sbb
mov
xchg
jno
pop
out
mov
add
pusha
xchg
dec
lcall
mov
rcrb
mov
js
movsb
and
fimuls
shlb
pop
stc
movsl
cmp
push
cwtl
mov
test
jl
lret
jg
andb
xor
roll
loopne
cld
lret
mov
add
sbb
in
xor
jns
lahf
and
mov
shr
and
lods
add
pusha
insl
cli
iret
andb
mov
and
mov
pop
or
rcl
popa
mov
hlt
jno
mov
pop
jmp
dec
stos
and
cwtl
sub
inc
int
mov
and
pop
jg
shl
mov
mov
jae
pop
fsts
ja
stos
pusha
add
sbb
push
in
inc
mov
rol
add
sub
and
adc
jae
sub
mov
bound
pop
fcmovnu
popf
fs
cli
mov
mov
pop
mov
stos
loopne
out
add
mov
xor
mov
frstor
shl
daa
sub
add
addb
jbe
mov
mov
mov
adc
push
lcall
cmpb
notl
mov
mov
icebp
jne
movsl
jbe
into
mov
jg
xor
frstor
data16
xor
in
mov
mov
stos
loopne
stos
shl
sub
je
pop
nopl
in
adc
sbb
pop
jg
loopne
mov
mov
adcl
mov
add
dec
rcrb
add
cmpsb
mov
mov
mov
movsb
and
stos
add
add
mov
inc
inc
call
push
inc
mov
and
lods
loopne
mov
sbb
aam
push
fiaddl
loopne
cltd
mov
sar
and
sbb
clc
cmc
add
inc
cmp
inc
fwait
cmp
int
pop
notl
inc
std
lret
loop
jg
mov
push
test
sub
notl
dec
cmpsb
rolb
xchg
adc
test
adc
mov
push
or
lret
inc
cmp
aad
mov
push
push
shlb
jno
es
push
inc
icebp
xchg
shl
fs
push
dec
mov
cwtl
js
mov
loopne
mov
popa
aas
and
rolb
cmp
pusha
add
leave
mov
sbb
xchg
sbb
cltd
mov
loope
inc
push
loop
pop
dec
cmp
inc
xchg
sarb
sbb
loope
fcomi
mov
stos
xor
xchg
push
cli
dec
fdivp
sub
into
test
daa
and
fcompl
lods
push
lock
pusha
loopne
rolb
rol
fwait
in
mov
fwait
punpcklbw
adc
and
mov
xor
jmp
pop
and
xchg
loopne
pusha
aam
loope
add
add
mov
xor
scas
dec
jge
jbe
loopne
mov
add
add
inc
scas
rolb
loopne
data16
xor
outsl
sti
or
adc
sbb
fisttps
lock
aaa
loop
sti
je
lods
fstpl
ret
scas
loopne
xor
pusha
add
xchg
into
sub
subb
repnz
mov
pusha
sub
push
cld
out
xlat
sub
inc
das
cmpsb
pusha
pusha
lret
fmul
imul
adcl
inc
jmp
or
stos
lock
cwtl
lea
addb
inc
jmp
outsb
xchg
xor
loopne
pusha
inc
ret
fimull
cld
aam
mov
add
iret
or
mov
addb
imul
and
ds
loopne
movsl
fmul
and
inc
shrb
add
cli
sub
loopne
xchg
scas
imul
add
jecxz
pop
test
test
loopne
pop
les
daa
mov
sbb
mov
rclb
lock
stc
pop
in
sahf
pop
cmpsl
jp
das
adc
in
mov
repz
pop
lock
popl
sbb
and
shlb
pop
inc
outsb
push
sub
ja
pop
adc
sub
add
or
mov
push
popf
jp
mov
icebp
repnz
mov
mov
dec
pop
mov
and
and
xchg
lahf
aaa
add
or
pusha
leave
aaa
mov
test
mov
sub
test
loopne
and
pop
lock
arpl
mov
loopne
test
loopne
loope
push
cli
test
sub
jne
cmc
sub
inc
lods
iret
jg
add
fdivs
icebp
dec
xor
subl
jge
or
dec
dec
cmp
cmc
leave
popa
dec
cmp
jo
push
jb
pop
mov
add
push
iret
push
mov
mov
xor
rolb
pusha
pusha
cmp
js
addr16
test
xor
push
push
sbb
pushl
or
mov
mov
mov
push
fnsave
pusha
add
lcall
movsl
imul
rorl
sahf
sub
scas
mov
nop
cmp
adc
dec
int
xor
icebp
xor
mov
inc
mov
fldt
inc
and
in
pop
lods
inc
mov
inc
xor
mov
cmc
xor
andb
in
jge
push
jecxz
jge
push
rolb
mov
dec
outsb
in
leave
lret
out
xor
pusha
rclb
xchg
or
xchg
add
loopne
inc
mov
flds
shl
xchg
mov
xorl
inc
rcrb
das
xor
and
icebp
sub
add
cmp
stos
addb
fdivs
push
in
mov
ja
add
mov
enter
inc
dec
dec
adc
daa
mov
add
sub
add
sarb
in
jle
mov
mov
lcall
mov
pop
jno
pop
jmp
pusha
loopne
adc
xchg
inc
jo
add
mov
ja
pusha
pusha
adc
add
and
gs
sbbb
cmp
and
cmp
cli
cmp
mov
dec
cwtl
pop
mov
stos
add
push
pop
cmp
and
inc
in
lahf
or
imul
add
cmp
inc
insl
mov
sub
pusha
mov
inc
test
push
inc
and
fiadds
jb
add
stos
mov
push
dec
jne
add
inc
leave
jae
mov
and
out
pusha
andb
loop
xchg
inc
pop
dec
testl
inc
cltd
adc
add
adc
inc
inc
mov
int
insl
cld
addb
dec
mov
add
out
cmp
fucomp
dec
ror
push
adc
mov
cmc
jge
fwait
pop
repz
in
add
daa
sbb
push
mov
test
adcb
insb
jne
rorl
mov
pop
addr16
push
jo
xor
inc
sbbb
std
sti
push
insl
in
insl
dec
sub
pop
ret
std
sbb
mov
dec
mov
call
mov
icebp
push
shlb
add
testb
rorb
hlt
sbbl
mov
in
push
movsl
jge
lock
idivl
or
xchg
sahf
inc
ljmp
inc
inc
adc
mov
mov
js
daa
and
loopne
imull
out
mov
mov
and
cmpsb
pusha
and
sbb
xor
lds
hlt
mov
ljmp
add
sub
bound
xchg
imul
loopne
test
pusha
push
jp
xchg
add
mov
cmc
scas
loopne
dec
dec
aad
rorb
add
idivl
and
dec
fs
into
scas
push
mov
and
jp
cli
repz
ljmp
jmp
ret
mov
loope
out
xchg
outsb
repz
cmp
ficompl
clc
mov
cli
aam
fbstp
inc
mov
and
mov
xchg
jbe
inc
sbb
add
pusha
ret
or
sarb
in
popf
mov
fidivrl
iret
jp
xchg
addl
shlb
add
pop
ret
and
dec
sbb
mov
or
loopne
loop
pusha
shrb
rorl
or
pusha
push
sahf
adc
inc
pop
inc
and
adc
jg
repnz
pop
data16
mov
sub
sub
pop
push
cltd
push
push
dec
add
loopne
pop
xchg
sbbl
imul
xor
out
loope
leave
xlat
and
data16
rol
movsb
pusha
add
and
inc
cmp
sbb
xlat
mov
js
or
adc
andb
xchg
add
loopne
or
rcll
fs
clc
outsb
lock
in
and
movsb
mov
lcall
jae
lods
loopne
or
inc
jg
rolb
out
pop
sub
lds
sub
ja
leave
cmc
lret
add
lcall
rorb
adc
ds
xor
add
loopne
out
cwtl
push
xchg
imul
adc
enter
out
pop
shlb
xor
push
jo
pusha
inc
test
andb
mov
add
in
add
cmc
ja
inc
pusha
fsubr
xor
test
mov
and
xchg
xchg
dec
rcl
and
rorl
cli
lcall
xor
or
pusha
cli
fisttpl
pop
jnp
in
inc
repz
arpl
mov
inc
int
fcompl
cmp
add
pop
mov
loopne
jp
pushf
push
add
or
pop
ds
push
addb
cld
mov
iret
xchg
loop
lcall
sarb
loope
stos
addb
andb
sbb
jmp
div
loop
adc
xchg
fists
aaa
sahf
fmul
mov
push
loopne
xchg
mov
and
push
or
sub
repnz
es
pusha
shll
addb
loopne
popa
aas
iret
sbb
inc
push
adc
add
arpl
add
imul
lds
arpl
test
xor
jge,pt
sahf
in
aam
adc
xchg
dec
mov
fiadds
inc
inc
xchg
push
addr16
push
mov
cwtl
fs
adc
adc
fildl
rorb
push
jl
iret
iret
push
hlt
out
enter
push
shll
pop
jle
sbb
pop
arpl
inc
inc
jle
xchg
pop
lcall
loopne
into
sub
inc
loope
cmp
loopne
int3
popf
lcall
sub
pop
rcrl
xor
inc
lret
sti
popa
mov
sub
mov
mov
loopne
ja
into
xor
mov
xor
mov
cltd
jno
js
out
dec
ffreep
xor
and
or
jmp
fcmovnu
lretw
dec
lds
addb
addb
pusha
mov
aam
cmp
sbb
mov
mov
rorb
mov
aas
das
inc
adc
or
add
sub
out
cmp
stos
mov
cmp
inc
and
test
mov
sub
shrb
int3
lret
inc
or
pop
out
data16
inc
or
add
inc
push
sub
shlb
add
mov
stc
in
iret
mov
sub
and
add
xchg
rcrb
shlb
xchg
push
jne
xor
or
add
jbe
stos
add
add
pushf
inc
stc
fildll
shlb
xchg
or
jp
push
sub
aaa
std
fwait
cmp
mov
xlat
or
inc
pop
int
dec
cmp
pop
mov
in
cmpsl
push
movsb
inc
and
pop
dec
ja
push
sbb
cld
mov
mov
mov
mov
out
insl
leave
mov
lret
mov
add
arpl
std
pop
push
mov
push
inc
pusha
mov
stos
push
inc
pusha
mov
rol
dec
andb
movsb
loopne
fcoml
sti
test
push
pusha
mov
mov
mov
pop
stc
shlb
push
mov
cli
rsm
loopne
sahf
jmp
and
cli
sarl
push
test
pusha
test
dec
sarl
add
cmc
pop
clc
divb
and
es
inc
cmp
fldt
mov
cs
fsubr
and
loopne
outsb
ret
int
push
push
push
pusha
pusha
dec
and
pusha
in
mov
or
dec
xchg
xchg
hlt
mov
repz
test
out
in
ja
stos
pusha
pusha
mov
cmpsb
add
mov
xor
pusha
lret
fwait
hlt
in
mov
outsl
jo
pop
push
xlat
jmp
pop
pop
scas
add
mov
jp
inc
dec
arpl
pop
movsl
dec
mov
xor
iret
cltd
ljmp
and
sub
bound
adc
rcrb
xchg
mov
loopne
sub
mov
sbb
pusha
je
jae
mov
jmp
cmc
jns
sti
xchg
jp
jmp
push
push
jbe
add
jns
push
push
out
adc
push
mov
stos
or
shlb
insl
loope
and
lods
add
and
pusha
addb
dec
stc
mov
inc
stc
call
orl
lcall
dec
test
shlb
shrb
insb
shrb
popf
adc
push
fucomip
ret
xchg
nop
clc
xchg
add
mov
lret
or
add
cmp
mov
loopne
stc
daa
out
mov
and
rcrl
dec
sbb
push
mov
push
adc
dec
rcll
and
and
and
mov
cli
rorl
and
rcll
sbb
fmulp
and
pusha
sub
dec
aad
dec
mov
mov
loopne
jo
out
mov
orb
shlb
ljmp
repz
pop
inc
ret
sti
jecxz
addb
outsl
test
or
and
mov
decl
shlb
data16
jbe
dec
xchg
sub
cmp
mov
xchg
cmp
lock
es
lock
test
popa
or
jge
cmp
cmp
mov
add
xor
adc
enter
or
add
mov
and
test
mov
jp
das
push
into
sbb
loopne
pop
jle
js
jl
add
push
and
mov
add
loopne
inc
xchg
aas
cmp
sub
and
pusha
xchg
xor
pusha
lret
push
insb
adc
xchg
cmpsl
ret
mov
fs
and
and
and
fs
push
ds
sbb
ss
jo
pop
dec
divl
inc
inc
push
sub
out
andb
arpl
xchg
push
repnz
in
mov
push
loopne
rorb
jp
inc
jae
add
cmpb
inc
mov
pop
negb
add
and
push
pop
pop
jmp
fs
movsl
rolb
dec
pushf
sti
mov
jo
pusha
xchg
cli
push
aas
test
pusha
dec
hlt
loop
xchg
push
loopne
loope
push
and
gs
cmp
inc
add
jle
and
xorb
cmc
mov
rcl
addb
pusha
push
dec
and
loopne
sub
sub
mull
rcrb
inc
aad
popf
add
test
icebp
jb
xchg
xchg
loopne
enter
mov
push
push
sahf
sbb
or
loopne
and
xchg
js
push
int
pop
inc
mov
adc
push
fidivl
lds
mov
and
add
jbe
xchg
sbb
pusha
loopne
and
bound
insb
in
ret
mov
sbb
push
dec
mov
scas
pusha
adcb
mov
leave
fwait
push
jnp
aam
mov
or
rcl
fmull
and
add
addb
pop
mov
jae
stc
jno
adc
or
loopne
mov
sbb
or
js
xchg
data16
andb
movb
jae
and
inc
shl
mov
loopne
bound
cmp
dec
lock
inc
or
add
pushf
jmp
out
mov
push
adc
neg
cmpsb
add
pop
leave
adc
add
dec
and
add
push
inc
cmp
loopne
cmpsb
add
push
jne
fneni(8087
test
loopne
les
and
sub
loopne
fidivl
out
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
adc
fdivs
je
lahf
ss
jle
pop
dec
sbb
js
loopne
jmp
out
into
xchg
loop
jns
test
addb
dec
dec
xchg
add
or
xchg
and
shl
gs
lods
clc
fwait
stc
mov
push
push
call
mov
push
mov
aas
push
push
add
and
xchg
pop
and
inc
loopne
xor
lret
movsl
mov
cmpsl
out
test
sarb
xor
add
mov
jg
es
and
push
xor
sbb
bound
jne
test
xor
fiaddl
xor
sub
add
mov
and
and
sbbb
nop
mov
loopne
addr16
add
cld
cwtl
add
dec
and
inc
out
js
mov
mov
loopne
pop
xchg
lret
cmp
mov
xchg
js
sbb
les
std
es
add
mov
shll
popa
dec
aas
jp
mov
sub
shlb
jg
mov
andb
repnz
rol
or
int
dec
mov
cmp
xor
inc
mov
push
mov
or
adc
add
mov
mov
pusha
mov
mov
dec
pop
sbb
js
loopne
mov
or
cmpl
loopne
pmullw
push
arpl
setp
cmp
fnstenv
push
and
cmp
inc
les
es
fstps
pushf
out
fwait
xchg
dec
insl
nop
movsb
inc
mov
mov
pop
imul
inc
stos
pusha
mov
imull
loopne
dec
lea
pusha
rorb
loopne
call
shlb
cli
les
sub
push
inc
outsl
push
and
icebp
stos
add
mov
mov
pusha
mov
stc
push
aaa
loopne
lock
and
clc
divb
xchg
or
or
pusha
jle
cltd
out
or
sub
shlb
dec
pop
push
enter
pusha
mov
adc
inc
dec
inc
mov
inc
repz
pop
scas
adc
push
mov
imul
dec
addl
xchg
lods
sub
push
add
or
and
mov
xor
sub
mov
aad
cli
ret
shrl
in
pop
or
subb
and
sbb
mov
icebp
mov
test
andb
cld
mov
loopne
xchg
fcmovnu
dec
lahf
jb
repnz
je
stos
cwtl
xor
jmp
dec
nop
mov
or
adc
ss
loope
push
inc
sbbl
push
rorb
dec
mov
and
outsl
dec
mov
inc
pusha
and
add
pusha
loopne
das
addl
pusha
push
adc
out
fs
test
or
lea
add
mov
mov
adc
xor
loopne
cmp
mov
daa
mov
subb
andb
adc
pop
aad
ss
rcr
jg
lahf
xor
stc
andb
loope
aaa
pop
push
xor
dec
mov
inc
int3
scas
gs
jbe
ds
adcb
in
aad
out
mov
mov
stc
jb
pop
dec
das
adc
sub
pop
mov
add
and
cmpsl
test
cld
and
inc
cmc
push
not
popf
test
add
sti
or
inc
rorb
or
imul
addb
test
cld
cmp
loopne
clc
xor
pop
lods
add
or
add
or
pushf
jg
mov
and
shrb
mov
sub
inc
add
add
jecxz
loopne
movsb
addb
jnp
sbb
xlat
or
mov
imul
push
adc
sub
mov
or
sbb
dec
andb
fwait
jae
cmp
in
outsl
jo
and
and
shl
inc
push
lcall
inc
test
add
fcom
mov
cmpsb
loopne
xor
mov
cli
rcr
jl
jns
nop
js
push
inc
loopne
repz
add
ja
addb
out
sub
loopne
xchg
in
add
out
test
mov
cli
mov
fildl
adc
or
loopne
mov
test
inc
mov
pushf
nop
ret
movsb
and
inc
and
dec
orl
add
popf
xor
jmp
cmp
sbb
pop
mov
jbe
daa
movb
clc
hlt
enter
mov
and
dec
add
rcrb
adc
push
sbb
fimuls
int
into
lret
xchg
aas
sub
mov
fwait
ret
xchg
addr16
xchg
mov
nop
pop
cmp
pushf
out
dec
ss
shlb
lds
mulb
test
or
jge
add
add
cwtl
jo
pop
mov
mov
mov
outsb
xchg
rcll
jle
mov
sbb
aad
xchg
lret
jo
ss
sub
push
inc
pusha
pushf
mov
jp
cmp
inc
aas
cmpsl
mov
dec
stc
xor
cmc
mov
mov
jecxz
cmp
decl
jb
aas
flds
and
in
cli
rolb
ret
cltd
rorb
dec
stc
dec
xchg
dec
cltd
push
mov
and
fstpt
sub
pusha
xor
in
adc
in
repnz
fnstenv
push
je
add
sbb
add
add
inc
mov
mov
ret
adc
loopne
cmpsb
mov
mov
xchg
test
pusha
pop
ret
fst
mov
add
shlb
dec
dec
std
ds
nop
fs
movsb
add
repnz
roll
xor
mov
aam
pusha
pusha
rcrl
inc
pop
ljmp
andb
cmp
add
adc
mov
push
xchg
sbb
jge
inc
cs
sarb
inc
out
es
add
pusha
outsb
bound
push
sbb
lret
addr16
push
push
add
mov
xor
sbb
sbb
rolb
dec
andb
pusha
mov
aas
add
mov
sbb
jmp
mov
cmc
and
push
shlb
inc
imul
jmp
dec
or
rolb
out
sub
add
repnz
xchg
popf
pop
rcll
mov
mov
jg
mov
lret
loopne
setb
pushf
iret
std
movsl
icebp
inc
lods
cmc
add
into
sub
and
dec
mov
xchg
pop
fs
jg
mov
rolb
mov
loopne
add
negb
outsb
xchg
cmp
xorps
je
pushf
imul
pop
sub
jo
andl
pop
inc
jmp
and
addl
loopne
cmp
inc
or
and
pop
xchg
inc
ss
fistpl
loopne
ret
mov
addb
mov
ret
adcl
shlb
cmc
sub
lret
push
add
fildll
inc
mov
push
rcll
dec
leave
fcoms
andb
cmp
push
aas
neg
sub
sbb
pop
pop
repnz
fdivrl
dec
ss
pop
dec
mov
imul
dec
sbb
push
ret
mov
ror
add
mov
or
inc
inc
inc
scas
rol
xor
inc
js
int
jge
jb
clc
insl
and
cmpsl
mov
loopne
lahf
jns
je
cmp
and
out
adc
or
push
int3
add
sbb
push
xor
icebp
adc
or
xor
call
xor
xchg
pop
jl
loopne
sbb
dec
xchg
cmpsl
aam
jge
inc
jne
and
and
sub
add
xchg
sbb
popf
jno
dec
inc
cmp
push
pusha
rcrb
loopne
mov
adc
mov
into
int3
xchg
lds
jae
gs
into
sahf
or
pop
dec
addl
jl
lcall
gs
jae
mov
mov
into
push
and
mov
mov
add
add
and
sbb
and
scas
sub
loopne
andb
xchg
dec
cmp
dec
sbb
and
lea
popf
pusha
lea
mov
dec
add
mov
enter
mov
inc
xor
add
add
pusha
mov
inc
sbb
push
outsb
ds
aas
push
push
lret
pop
sub
pusha
add
inc
test
shl
ret
pop
iret
jl
mov
xor
xor
pop
enter
xchg
xor
and
ja
pop
in
xchg
or
andb
pusha
sbb
xor
xchg
mov
jl
cmp
sahf
insb
push
movsb
pusha
add
shl
shlb
xor
and
outsb
ret
dec
xor
imul
mov
xor
int3
and
outsl
dec
enter
and
push
jl
add
loopne
pop
and
push
mov
push
or
std
das
aaa
bound
mov
mov
arpl
push
push
subl
mov
loopne
inc
xlat
in
push
out
in
adc
lock
inc
loopne
inc
pusha
adc
xchg
shlb
and
test
and
ds
xchg
je
pop
inc
sub
mov
cmc
mov
jp
jmp
pusha
push
enter
inc
repnz
sbb
shrl
outsl
ljmp
pusha
hlt
sti
adc
add
mov
add
scas
inc
loopne
arpl
pop
mov
add
push
push
lea
jb
movsl
dec
lods
mov
mov
ret
sub
loopne
mov
push
inc
jge
inc
or
shlb
pusha
or
inc
mov
rolb
pop
dec
repnz
add
addb
cmp
xlat
sub
addb
sbb
bound
andb
dec
mov
lcall
scas
adc
mov
mov
addb
fmulp
cmpsl
xchg
outsl
push
pusha
add
add
push
pusha
je
cmp
add
and
andb
sti
push
inc
cmc
fwait
cltd
mov
dec
mov
sub
insl
scas
imul
jmp
fdivrl
mov
out
out
repnz
icebp
gs
or
inc
xchg
pusha
sbb
bound
and
fs
cs
add
mov
inc
and
flds
pop
mov
push
popa
imul
add
sub
and
mov
push
mov
in
mov
shlb
add
jecxz
pop
jge
in
outsl
dec
mov
and
stos
pusha
rcrb
push
mov
adc
mov
psubw
adc
rol
ret
pop
inc
loope
and
and
cli
jns
pop
cld
test
andb
rolb
das
pushf
pop
add
aas
mov
out
mov
les
andb
insl
addl
xchg
std
dec
fcoml
scas
daa
aad
and
out
push
jg
ret
orl
sub
pusha
loopne
ret
jmp
test
orb
pop
clc
fisttpl
inc
cmp
out
cmp
dec
mull
mov
mov
adc
shlb
jp
mov
pop
in
mov
js
inc
popf
lret
inc
lret
das
fistps
test
pusha
push
pop
mov
lret
fistpll
push
fsubrl
andl
or
pusha
gs
movb
pop
mov
pop
xor
jnp
stos
andb
mov
pop
mov
sbb
xor
pop
fwait
jle
push
std
jo
or
rcl
loopne
nop
je
mov
rorl
shlb
enter
add
sbb
mov
cmc
jmp
fistpl
scas
shlb
lock
sbb
inc
andl
daa
lahf
rorl
inc
mov
or
orb
fs
xchg
lcall
lods
add
adc
bound
pusha
and
jp
lahf
out
mov
and
inc
and
rclb
test
in
and
cwtl
ss
add
subl
pop
xchg
ljmp
mov
es
push
mov
loopne
roll
push
push
pusha
cwtl
in
ja
loopne
sbb
in
and
rolb
lds
fcompl
push
outsl
enter
pusha
inc
xor
testl
jbe
mov
ret
pop
sti
xchg
mov
jmp
mov
dec
mov
xor
and
repnz
lcall
pusha
orb
inc
popf
imul
popa
gs
and
test
dec
aad
cmp
mov
or
repnz
jne
fldl
and
and
xor
dec
jge
push
andb
loopne
xor
xor
cmp
in
sahf
aad
ja
mov
dec
or
lret
into
pop
filds
addb
mov
loopne
in
jg
daa
push
and
scas
popf
mov
ret
cwtl
stos
loopne
out
and
cli
xchg
or
fstps
mov
inc
mov
divl
stos
addb
mov
scas
out
shl
in
inc
jbe
mov
pusha
and
mov
andb
lods
mov
hlt
mov
and
push
push
inc
das
dec
pop
stos
sbb
shll
inc
inc
mov
and
mov
fdivr
dec
loop
fdivl
insb
adc
imul
rolb
movsl
mov
add
cmp
loopne
or
inc
mov
and
lods
in
jmp
loopne
or
data16
loopne
into
pop
ljmp
loopne
sub
cmpb
xchg
inc
hlt
scas
pusha
and
inc
mov
out
xor
lock
in
insl
pop
fistps
push
sbb
js
sbb
repz
in
sar
sahf
cmc
xor
addr16
xchg
lock
repnz
scas
loop
rclb
fldenv
mov
push
rcrb
mov
mov
mov
test
mov
loopne
add
into
mov
call
nop
jmp
add
out
mov
cmpb
leave
nop
jmp
mov
add
mov
sub
repnz
nop
cld
jae
es
fcmovu
stos
loopne
sub
inc
xchg
mov
nop
push
mov
leave
nop
jmp
add
movsb
add
add
add
clc
repnz
nop
cld
jae
mov
add
pop
test
pop
cmp
repnz
nop
cld
jae
cmp
loope
daa
add
repnz
nop
cld
jae
popf
push
add
add
aad
add
or
inc
add
popf
add
add
add
nop
cld
jae
loope
add
shll
clc
repnz
nop
cld
jae
mov
sub
rolb
pop
inc
add
int
add
int
mov
push
clc
repnz
nop
cld
jae
add
add
loope
add
clc
repnz
nop
cld
jae
add
filds
add
mov
loopne
insl
call
clc
repnz
nop
cld
jae
out
add
lret
add
nop
push
mov
leave
nop
jmp
loope
repnz
loope
mov
nop
inc
add
push
add
inc
add
add
fildl
add
repnz
nop
cld
jae
shll
xchg
mov
mov
clc
repnz
nop
cld
jae
add
add
pop
push
push
mov
xchg
ret
repnz
pop
es
out
add
add
push
mov
xchg
ret
cli
cli
filds
add
sbb
nop
cld
jae
or
fs
es
mov
push
mov
xchg
ret
movsb
lock
add
mov
add
nop
push
mov
leave
nop
jmp
cmp
add
mov
arpl
repz
repnz
nop
cld
jae
movsb
ja
roll
lods
sbb
add
mov
nop
push
mov
leave
nop
jmp
lock
sarl
and
mov
clc
repnz
nop
cld
jae
sub
popf
repnz
loop
mov
add
add
clc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
cmp
add
pop
xor
clc
repnz
nop
cld
jae
mov
add
fwait
push
mov
xchg
ret
ja
test
xor
push
mov
xchg
ret
repnz
add
and
add
push
clc
repnz
nop
cld
jae
dec
mov
mov
fwait
clc
repnz
nop
cld
jae
ja
add
out
bound
stos
mov
clc
repnz
nop
cld
jae
add
fs
pop
jmp
pop
clc
repnz
nop
cld
jae
add
outsl
add
adc
fistpl
push
mov
xchg
ret
add
int
mov
mov
mov
leave
nop
jmp
xor
loope
add
add
push
clc
repnz
nop
cld
jae
add
sbb
add
int
lods
push
mov
xchg
ret
add
add
out
outsl
add
insl
pop
inc
add
mov
add
or
add
add
add
push
pusha
add
ja
stos
sldt
clc
repnz
nop
cld
jae
add
push
mov
xchg
push
mov
add
sub
flds
add
fbstp
add
pop
xchg
mov
sub
lcall
ret
sbb
mov
add
xor
add
add
add
adc
repnz
nop
cld
jae
pop
push
add
mov
es
addb
repnz
nop
cld
jae
add
lods
sti
mov
xchg
nop
nop
cld
jae
add
or
jle
push
mov
xchg
ret
loop
xchg
fld1
clc
repnz
nop
cld
jae
bound
mov
mov
jne
lods
clc
repnz
nop
cld
jae
and
sub
adc
inc
fld1
nop
push
mov
leave
nop
jmp
push
add
push
add
xchg
inc
cmp
adc
repnz
nop
cld
jae
add
push
push
push
mov
xchg
ret
add
add
add
and
in
push
push
add
clc
repnz
nop
cld
jae
mov
rep
clc
repnz
nop
cld
jae
jne
add
or
pusha
and
cmp
je
clc
repnz
nop
cld
jae
add
adc
push
clc
repnz
nop
cld
jae
xchg
push
push
add
ja
icebp
xor
push
mov
xchg
ret
loope
adc
cmp
push
mov
xchg
ret
add
add
mov
jl
xor
cmp
and
inc
add
pop
add
sahf
stos
push
nop
push
mov
leave
nop
jmp
add
add
xchg
lds
nop
nop
cld
jae
add
add
xchg
add
add
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
add
mov
clc
repnz
nop
cld
jae
es
add
lock
add
nop
push
mov
leave
nop
jmp
lock
pushf
es
out
nop
int
clc
repnz
nop
cld
jae
add
add
sbb
nop
push
mov
leave
nop
jmp
add
add
rorl
test
repnz
nop
cld
jae
out
push
addr16
clc
repnz
nop
cld
jae
add
filds
and
add
mov
add
sbb
add
jne
add
out
or
mov
mov
xchg
ret
add
add
ud1
push
repnz
nop
cld
jae
add
and
fisttpll
test
sbb
add
repnz
nop
cld
jae
pop
add
pop
rep
clc
repnz
nop
cld
jae
push
add
mov
outsl
add
mov
nop
push
mov
leave
nop
jmp
bound
roll
test
stos
testb
mov
fs
rcrl
add
clc
repnz
nop
cld
jae
out
bound
push
mov
xchg
ret
ja
add
stos
and
mov
add
fwait
clc
repnz
nop
cld
jae
lock
adc
pusha
clc
repnz
nop
cld
jae
or
add
sub
nop
nop
cld
jae
add
pushf
lds
repnz
nop
cld
jae
add
add
jmp
mov
cmp
ret
mov
add
and
pushl
clc
repnz
nop
cld
jae
loop
add
lock
xlat
mov
push
mov
xchg
ret
lods
add
add
add
xchg
push
clc
repnz
nop
cld
jae
int
xchg
add
or
jb
xor
sahf
fcomip
rclb
add
and
mov
int
test
dec
push
mov
xchg
ret
xor
add
add
repnz
add
add
repnz
nop
cld
jae
add
and
push
clc
repnz
nop
cld
jae
add
loope
xor
int
testl
call
nop
jmp
jne
add
lea
clc
repnz
nop
cld
jae
test
xchg
out
push
push
mov
xchg
ret
push
add
mov
push
clc
repnz
nop
cld
jae
jne
push
sarl
push
push
mov
xchg
ret
add
int
test
repnz
nop
cld
jae
push
add
mov
cltd
mov
clc
repnz
nop
cld
jae
add
sub
test
shrb
cmp
repnz
nop
cld
jae
add
out
push
xor
push
push
mov
xchg
ret
jne
int
xchg
and
xor
push
and
lods
addb
loopne
xor
mov
clc
repnz
nop
cld
jae
add
add
roll
add
clc
repnz
nop
cld
jae
add
inc
add
mov
lock
repnz
nop
cld
jae
mov
mov
nop
nop
cld
jae
sub
add
add
cli
add
cmp
mov
leave
nop
jmp
outsl
add
add
clc
repnz
nop
cld
jae
repnz
push
mov
push
mov
xchg
ret
add
add
inc
fs
add
jne
clc
repnz
nop
cld
jae
add
sysenter
add
xor
mov
push
mov
xchg
ret
repnz
sbb
push
mov
int3
inc
cld
clc
repnz
nop
cld
jae
add
add
ja
add
add
push
mov
xchg
ret
sub
mov
jo
jne
clc
repnz
nop
cld
jae
add
push
xchg
arpl
repnz
nop
cld
jae
ja
outsl
add
lock
pop
lea
clc
repnz
nop
cld
jae
mov
mov
aaa
mov
push
mov
xchg
ret
add
add
sbb
repnz
nop
cld
jae
cli
out
mov
decl
nop
cld
jae
inc
jne
es
add
jb
add
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
repnz
add
mov
sub
mov
xchg
ret
mov
add
xchg
add
push
mov
xchg
ret
sbb
lock
inc
xchg
clc
repnz
nop
cld
jae
mov
mov
movsb
out
or
pop
add
clc
repnz
nop
cld
jae
cwtl
add
je
rep
clc
repnz
nop
cld
jae
add
cli
add
adc
nop
nop
cld
jae
xor
add
add
push
mov
xchg
ret
add
add
add
sahf
sar
and
clc
repnz
nop
cld
jae
add
lock
push
mov
nop
push
mov
leave
nop
jmp
add
add
push
nop
push
mov
leave
nop
jmp
loop
lock
add
xchg
test
add
repnz
nop
cld
jae
repnz
fistpll
clc
repnz
nop
cld
jae
push
add
mov
adc
add
repnz
nop
cld
jae
sbb
add
add
sti
add
add
repnz
add
int
sbb
pusha
adc
xchg
nop
push
mov
leave
nop
jmp
add
add
add
mov
mov
repnz
nop
cld
jae
roll
mov
add
or
int
add
add
cld
jae
push
daa
add
mov
lock
add
repnz
nop
cld
jae
mov
jne
imul
jae
add
add
mov
xchg
ret
adc
or
add
daa
movsb
pop
andl
jae
xor
or
mov
inc
inc
inc
outsb
popf
mov
clc
repnz
nop
cld
jae
mov
add
rclb
and
nop
push
mov
leave
nop
jmp
loope
daa
add
nop
nop
cld
jae
sti
out
popf
adc
lret
mov
clc
repnz
nop
cld
jae
add
xchg
or
pusha
sub
add
je
clc
repnz
nop
cld
jae
or
and
repnz
nop
cld
jae
add
iret
inc
nop
push
mov
leave
nop
jmp
push
lods
add
outsl
or
nop
push
mov
leave
nop
jmp
out
mov
popf
es
lcall
repnz
nop
cld
jae
rorl
loopne
push
inc
ja
clc
repnz
nop
cld
jae
inc
sbb
nop
push
mov
leave
nop
jmp
add
pop
mov
inc
iret
pop
nop
push
mov
leave
nop
jmp
add
fs
add
push
leave
push
push
mov
xchg
ret
add
add
xor
mov
add
nop
push
mov
leave
nop
jmp
add
popf
add
adc
add
and
js
push
mov
leave
nop
jmp
sub
les
repnz
nop
cld
jae
add
stc
ret
clc
repnz
nop
cld
jae
add
adc
add
or
repnz
nop
cld
jae
out
mov
add
mov
mov
xchg
ret
push
inc
int
add
out
nop
push
mov
leave
nop
jmp
loope
add
outsl
add
cwtl
fld1
pop
or
nop
nop
cld
jae
push
add
mov
clc
repnz
nop
cld
jae
push
inc
bound
add
nop
push
mov
leave
nop
jmp
daa
out
loope
adc
mov
clc
repnz
nop
cld
jae
sub
add
cmp
nop
push
mov
leave
nop
jmp
add
sub
and
clc
repnz
nop
cld
jae
or
add
push
adc
pop
inc
add
int
mov
add
add
push
push
mov
xchg
ret
add
add
add
out
mov
clc
repnz
nop
cld
jae
add
add
loopne
sub
pusha
dec
push
clc
repnz
nop
cld
jae
and
push
lock
add
add
sub
add
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
shl
add
add
movsb
mov
xchg
ret
lock
cmp
add
add
lea
nop
nop
cld
jae
add
gs
clc
repnz
nop
cld
jae
add
mov
repnz
add
nop
push
mov
leave
nop
jmp
fs
jmp
mov
xchg
ret
and
add
mov
mov
mov
xchg
ret
add
and
add
xchg
pop
clc
repnz
nop
cld
jae
add
jne
inc
add
mov
add
mov
mov
nop
push
mov
leave
nop
jmp
add
xchg
out
xchg
clc
repnz
nop
cld
jae
xor
jne
add
scas
mov
nop
push
mov
leave
nop
jmp
cli
out
add
add
dec
push
push
mov
xchg
ret
add
add
mulb
mov
clc
repnz
nop
cld
jae
add
jne
mov
pop
clc
repnz
nop
cld
jae
add
add
ja
jae
nop
push
mov
leave
nop
jmp
push
roll
cmpsb
pusha
inc
imul
nop
jmp
add
add
push
add
fld1
clc
repnz
nop
cld
jae
add
daa
movsb
add
leave
push
mov
xchg
ret
lea
mov
jge
clc
repnz
nop
cld
jae
add
add
add
mov
dec
call
push
mov
xchg
ret
add
ja
call
push
mov
leave
nop
jmp
add
add
add
cmp
sub
clc
repnz
nop
cld
jae
mov
xor
push
mov
xchg
ret
int
int
or
add
push
mov
leave
nop
jmp
sbb
add
loope
add
xor
clc
repnz
nop
cld
jae
add
or
adc
repnz
nop
cld
jae
add
add
push
add
inc
stos
clc
repnz
nop
cld
jae
add
lods
and
add
add
push
mov
leave
nop
jmp
add
add
add
pushl
clc
repnz
nop
cld
jae
push
add
add
add
push
push
mov
xchg
ret
add
add
add
add
inc
inc
js
pop
push
mov
xchg
ret
add
add
xchg
add
clc
repnz
nop
cld
jae
push
lea
mov
and
repnz
nop
cld
jae
add
int
movsb
add
shlb
xor
sbb
nop
push
mov
leave
nop
jmp
mov
add
fwait
clc
repnz
nop
cld
jae
add
add
dec
add
add
cmp
nop
nop
cld
jae
inc
lock
popf
btr
adc
repnz
nop
cld
jae
out
outsl
dec
movsb
mov
adc
fwait
clc
repnz
nop
cld
jae
add
mov
and
dec
cmp
repnz
nop
cld
jae
and
inc
add
shlb
or
in
leave
nop
jmp
add
repnz
add
clc
repnz
nop
cld
jae
sub
pop
mov
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
inc
inc
bound
adc
clc
repnz
nop
cld
jae
lea
movsb
add
loop
add
add
popa
clc
repnz
nop
cld
jae
add
pop
lock
add
push
push
mov
xchg
ret
rcr
es
int
xor
nop
nop
cld
jae
add
add
add
add
adc
nop
nop
cld
jae
daa
xor
add
inc
in
push
mov
xchg
ret
mov
sbb
xchg
mov
clc
repnz
nop
cld
jae
xor
int
out
xor
add
push
mov
xchg
ret
add
repnz
je
nop
push
mov
leave
nop
jmp
cli
xchg
mov
cmpl
add
clc
repnz
nop
cld
jae
push
add
lret
nop
push
mov
leave
nop
jmp
add
add
out
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
xchg
repnz
nop
cld
jae
add
out
rep
clc
repnz
nop
cld
jae
roll
add
add
add
andb
jmp
int
loope
add
fistps
add
inc
mov
fisubrl
xchg
clc
repnz
nop
cld
jae
lea
add
mov
xchg
ret
add
sti
add
add
fucomip
mov
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
lods
add
sub
xchg
idiv
clc
repnz
nop
cld
jae
int
add
cltd
mov
push
mov
xchg
ret
fistpll
mov
nop
cld
jae
mov
cli
loop
add
xor
nop
nop
cld
jae
daa
add
loopne
out
xor
clc
repnz
nop
cld
jae
add
xacquire
add
clc
repnz
nop
cld
jae
ja
add
or
clc
repnz
nop
cld
jae
add
add
pop
nop
push
mov
leave
nop
jmp
adc
add
add
mov
sar
repnz
nop
cld
jae
and
add
add
mov
clc
repnz
nop
cld
jae
dec
loop
add
repnz
nop
cld
jae
add
add
xor
movzwl
clc
repnz
nop
cld
jae
loope
out
add
mov
clc
repnz
nop
cld
jae
push
loop
xor
ret
pop
clc
repnz
nop
cld
jae
add
mov
stos
loopne
scas
sub
clc
repnz
nop
cld
jae
add
xchg
add
and
push
mov
leave
nop
jmp
repnz
add
inc
loope
add
pusha
and
sarb
clc
repnz
nop
cld
jae
psraw
sbb
add
add
push
mov
leave
nop
jmp
add
pop
lock
arpl
call
inc
add
pop
out
add
add
inc
andb
hlt
push
loopne
mov
loop
push
mov
xchg
ret
push
sbb
or
add
or
orb
movswl
nop
push
mov
leave
nop
jmp
add
lea
movsb
popf
add
clc
repnz
nop
cld
jae
roll
add
flds
nop
nop
cld
jae
adc
mov
fwait
clc
repnz
nop
cld
jae
add
and
bound
dec
jmp
mov
add
add
rcrl
loop
loop
rcrl
imul
cmp
ret
mov
lea
dec
dec
mov
clc
repnz
nop
cld
jae
add
add
repz
clc
repnz
nop
cld
jae
add
add
xor
repnz
nop
cld
jae
filds
push
add
add
jp
mov
mov
xchg
ret
repnz
xchg
add
outsl
not
push
mov
xchg
ret
sti
add
add
add
add
add
push
mov
xchg
ret
add
test
rdpmc
rclb
addl
mov
and
add
clc
repnz
nop
cld
jae
push
inc
lea
sti
dec
mov
push
mov
xchg
ret
add
pop
add
push
xchg
out
clc
repnz
nop
cld
jae
mov
loop
add
push
clc
repnz
nop
cld
jae
add
add
ficomps
xchg
xorl
clc
repnz
nop
cld
jae
sti
add
sbb
nop
push
mov
leave
nop
jmp
mov
add
repnz
nop
cld
jae
lock
add
sub
nop
nop
cld
jae
mov
add
out
sbb
cld
jae
filds
add
xchg
push
mov
sub
add
add
fwait
rcrl
add
sbb
pop
ficomps
mov
xchg
ret
mov
add
xchg
add
or
add
repnz
nop
cld
jae
int
and
add
push
mov
xchg
ret
mov
add
pop
sbb
fwait
push
mov
xchg
ret
add
movsb
out
jne
popf
lock
nop
cld
jae
add
test
data16
inc
push
clc
repnz
nop
cld
jae
add
adc
add
add
nop
nop
cld
jae
add
mov
add
inc
sub
mov
xchg
ret
add
loope
add
mov
push
clc
repnz
nop
cld
jae
xor
sub
shl
mov
add
clc
repnz
nop
cld
jae
push
out
int
add
shl
push
clc
repnz
nop
cld
jae
or
add
repnz
mov
xchg
ret
repnz
add
mov
clc
repnz
nop
cld
jae
add
cmpl
mov
leave
nop
jmp
add
cmp
nop
nop
cld
jae
mov
pusha
pusha
in
fdivr
repnz
nop
cld
jae
out
outsl
ja
add
or
nop
nop
cld
jae
mov
mov
popa
push
push
mov
xchg
ret
and
add
lea
shlb
rorl
inc
add
push
int
add
outsl
add
mov
jmp
add
add
and
add
lods
ja
add
inc
add
mov
clc
repnz
nop
cld
jae
repnz
mov
jne
clc
repnz
nop
cld
jae
add
xchg
or
call
inc
add
mov
rcrl
cwtl
mov
cmp
repnz
nop
cld
jae
inc
out
add
out
stc
push
clc
repnz
nop
cld
jae
and
outsl
add
add
clc
repnz
nop
cld
jae
pop
and
mov
mov
clc
repnz
nop
cld
jae
add
xchg
xchg
clc
repnz
nop
cld
jae
pop
add
mov
lods
add
lea
nop
push
mov
leave
nop
jmp
mov
add
shr
clc
repnz
nop
cld
jae
ja
add
test
dec
nop
push
mov
leave
nop
jmp
inc
popf
add
sub
sbb
and
mov
jge
clc
repnz
nop
cld
jae
add
inc
pop
sbb
clc
repnz
nop
cld
jae
and
mov
push
mov
leave
nop
jmp
out
dec
xor
mov
or
clc
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
cmpb
cld
jae
es
xor
add
inc
sbb
mov
add
repnz
nop
cld
jae
adc
add
jae
nop
nop
cld
jae
add
lea
add
push
add
loopne
jb
pusha
push
mov
xchg
ret
add
add
jo
rolb
repnz
nop
cld
jae
add
add
loope
inc
movsl
jne
clc
repnz
nop
cld
jae
add
cmp
nop
push
mov
leave
nop
jmp
lea
add
add
es
add
clc
repnz
nop
cld
jae
inc
and
push
push
mov
xchg
ret
mov
adc
push
add
fistpl
nop
push
mov
leave
nop
jmp
or
fbstp
cmc
add
add
repnz
nop
cld
jae
add
fildl
roll
ret
add
lods
dec
add
or
mov
nop
nop
cld
jae
add
add
push
push
push
clc
repnz
nop
cld
jae
add
push
fld1
clc
repnz
nop
cld
jae
cwtl
add
out
add
jg
jg
add
inc
inc
mov
daa
add
jne
add
mov
add
add
add
nop
jmp
mov
sti
push
rorl
leave
nop
jmp
mov
mov
xor
nop
nop
cld
jae
and
test
and
addb
add
add
clc
repnz
nop
cld
jae
ud1
xchg
cmp
repnz
nop
cld
jae
pop
xchg
add
mov
into
in
clc
repnz
nop
cld
jae
loope
and
add
inc
test
mov
leave
nop
jmp
loop
add
sti
add
das
push
push
mov
xchg
ret
add
add
add
popf
sub
clc
repnz
nop
cld
jae
add
sti
repnz
pop
es
clc
repnz
nop
cld
jae
add
ltr
call
clc
repnz
nop
cld
jae
mov
add
mov
roll
repnz
nop
cld
jae
add
push
add
add
jne
clc
repnz
nop
cld
jae
bound
xlat
add
nop
push
mov
leave
nop
jmp
sub
add
mov
clc
repnz
nop
cld
jae
and
sub
add
mov
dec
adc
cld
pop
inc
add
filds
add
int
push
repnz
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
add
into
pop
leave
push
clc
repnz
nop
cld
jae
daa
add
xchg
cli
test
inc
xchg
fwait
push
mov
xchg
ret
sub
push
add
add
jg
nop
push
mov
leave
nop
jmp
add
ror
ja
mov
test
clc
repnz
nop
cld
jae
fisttps
imul
nop
jmp
add
add
sbb
jne
push
mov
xchg
ret
int
outsl
add
repnz
adc
mov
clc
repnz
nop
cld
jae
add
add
in
add
faddl
add
out
es
add
add
xor
push
mov
xchg
ret
add
add
inc
jmp
add
add
add
add
nop
nop
cld
jae
loope
add
add
rorl
jg
clc
repnz
nop
cld
jae
mov
and
mov
leave
nop
jmp
shll
cmp
pop
nop
nop
cld
jae
jne
add
mov
test
sbb
add
repnz
nop
cld
jae
add
add
ret
add
nop
jmp
popf
and
add
and
add
repnz
nop
cld
jae
or
insl
mov
clc
repnz
nop
cld
jae
add
add
dec
add
push
mov
xchg
ret
movsb
mov
int
loop
test
inc
add
bound
movq
nop
cld
jae
or
add
xor
jb
clc
repnz
nop
cld
jae
out
prefetcht1
nop
cld
jae
outsl
test
add
jle
push
nop
push
mov
leave
nop
jmp
sub
add
cmpsl
mov
clc
repnz
nop
cld
jae
add
add
dec
sti
or
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
push
inc
lea
test
add
add
repnz
nop
cld
jae
mov
add
xor
pusha
pusha
stc
mov
push
mov
xchg
ret
add
add
add
mov
pop
jno
add
mov
add
add
adc
adc
repnz
nop
cld
jae
add
add
and
repnz
nop
cld
jae
es
mov
cwtl
call
call
nop
jmp
mov
add
or
dec
push
mov
xchg
ret
add
add
add
rorl
mov
xchg
ret
mov
mov
xchg
in
fisttps
mov
sub
nop
jmp
rorl
push
mov
xchg
ret
xor
push
dec
lods
es
cltd
push
clc
repnz
nop
cld
jae
add
add
mov
dec
cmp
mov
xchg
ret
mov
fbld
cwtl
add
pushf
lcall
repnz
nop
cld
jae
jp
loope
add
nop
push
mov
leave
nop
jmp
lea
add
jae
les
mov
xchg
ret
es
add
imul
xchg
ret
add
add
sub
nop
nop
cld
jae
add
sti
mov
pop
add
nop
nop
cld
jae
add
into
pusha
sarb
jge
jne
push
mov
xchg
ret
add
add
sldt
mov
mov
xchg
ret
ja
xchg
push
add
ja
add
inc
pop
clc
repnz
nop
cld
jae
add
add
imull
ja
fs
repnz
nop
cld
jae
add
add
inc
and
clc
repnz
nop
cld
jae
add
pusha
nop
push
mov
leave
nop
jmp
add
int
mov
jp
add
mov
int
repnz
add
clc
repnz
nop
cld
jae
add
add
sbb
and
repz
repnz
nop
cld
jae
dec
xor
add
cmp
push
pop
clc
repnz
nop
cld
jae
mov
add
xor
pop
repnz
jecxz
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
mov
push
nop
push
mov
leave
nop
jmp
sbb
add
add
insb
inc
add
add
add
add
add
std
imul
clc
repnz
nop
cld
jae
outsl
mov
out
jne
cmpw
clc
repnz
nop
cld
jae
add
sti
cwtl
movsl
push
nop
push
mov
leave
nop
jmp
xor
mov
mov
repnz
nop
cld
jae
mov
add
add
mov
nop
push
mov
leave
nop
jmp
mov
xor
enter
or
pop
mov
xchg
ret
add
add
xchg
add
je
push
mov
loope
adc
add
add
mov
ror
push
mov
xchg
ret
mov
add
add
add
add
xor
loope
or
add
inc
mov
dec
cmp
repnz
nop
cld
jae
add
icebp
add
nop
push
mov
leave
nop
jmp
add
or
inc
mov
clc
repnz
nop
cld
jae
sub
daa
lock
xor
push
mov
leave
nop
jmp
es
add
push
test
add
cld
jae
mov
es
add
push
mov
xchg
ret
add
mov
add
add
push
mov
xchg
ret
add
lods
add
inc
and
jg
clc
repnz
nop
cld
jae
inc
add
inc
add
lea
nop
push
mov
leave
nop
jmp
xor
loopne
call
clc
repnz
nop
cld
jae
popf
add
and
inc
clc
repnz
nop
cld
jae
loope
add
movsb
and
and
repnz
nop
cld
jae
add
xchg
popf
add
nop
cld
jae
add
add
and
outsl
add
mov
nop
push
mov
leave
nop
jmp
repnz
add
rolb
mov
push
mov
xchg
ret
add
cwtl
pop
add
and
shll
rclb
pop
inc
add
add
int
fs
sahf
jae
jmp
jp
nop
push
mov
leave
nop
jmp
add
pop
in
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
add
add
in
leave
nop
jmp
popf
loop
add
sub
mov
call
leave
nop
jmp
repnz
add
push
mov
clc
repnz
nop
cld
jae
and
cmp
push
mov
leave
nop
jmp
loope
push
lock
mov
out
imul
pop
or
add
add
mov
xchg
clc
repnz
nop
cld
jae
add
add
sahf
aaa
and
nop
push
mov
leave
nop
jmp
add
int
mov
fwait
mov
clc
repnz
nop
cld
jae
jl
push
cld
pop
sub
bound
xchg
ret
add
lock
icebp
clc
repnz
nop
cld
jae
fs
xchg
lods
popf
mov
cmp
push
mov
leave
nop
jmp
cmp
dec
add
enter
push
mov
xchg
ret
and
and
pop
lds
ja
add
push
loop
or
jo
shl
hlt
mov
sub
jmp
nop
cld
jae
add
add
or
repnz
nop
cld
jae
mov
add
pop
pop
shl
clc
repnz
nop
cld
jae
popf
add
ja
shl
mov
clc
repnz
nop
cld
jae
adc
add
lock
faddl
lea
clc
repnz
nop
cld
jae
lea
call
inc
dec
push
add
clc
repnz
nop
cld
jae
outsl
xchg
and
mov
xchg
ret
add
adc
loop
int
std
cmpl
nop
push
mov
leave
nop
jmp
int
add
repnz
pusha
lret
call
clc
repnz
nop
cld
jae
mov
jecxz
push
mov
xchg
ret
add
add
add
mov
nop
push
mov
leave
nop
jmp
cmp
cmp
add
xor
dec
push
mov
xchg
ret
loope
mov
add
scas
add
clc
repnz
nop
cld
jae
add
lea
loop
mov
scas
push
clc
repnz
nop
cld
jae
test
add
int
pop
test
nop
push
mov
leave
nop
jmp
xor
dec
mov
sti
push
rol
mov
clc
repnz
nop
cld
jae
add
push
add
imul
clc
repnz
nop
cld
jae
int
lock
mov
clc
repnz
nop
cld
jae
add
xchg
or
add
mov
leave
nop
jmp
add
add
int
and
rorl
ret
int
add
and
lea
mov
mov
clc
repnz
nop
cld
jae
movsb
repnz
es
test
push
mov
xchg
ret
add
add
xchg
clc
repnz
nop
cld
jae
mov
add
popf
add
out
cmp
fistpl
clc
repnz
nop
cld
jae
repnz
mov
add
test
push
mov
leave
nop
jmp
add
bound
nop
sbb
mov
leave
nop
jmp
add
add
inc
jo
rolb
mov
clc
repnz
nop
cld
jae
int
daa
xchg
jo
sub
clc
repnz
nop
cld
jae
roll
add
repnz
cmpl
nop
push
mov
leave
nop
jmp
and
sbb
call
cld
jae
add
and
lea
or
repnz
nop
cld
jae
cmp
add
add
icebp
shr
clc
repnz
nop
cld
jae
adc
mov
adc
and
cmp
ret
add
filds
andb
iret
and
nop
push
mov
leave
nop
jmp
add
loop
add
jg
add
clc
repnz
nop
cld
jae
push
add
and
or
in
leave
nop
jmp
add
add
add
repnz
loopne
movzwl
nop
push
mov
leave
nop
jmp
mov
add
mov
repnz
nop
cld
jae
add
add
add
in
mov
sti
sbb
pop
pop
rcrl
jne
sub
cmp
out
inc
add
pop
or
xor
dec
sub
repnz
nop
cld
jae
add
and
add
add
clc
repnz
nop
cld
jae
ja
lods
mov
mov
push
add
mov
inc
add
and
add
popf
mov
pushf
push
jne
clc
repnz
nop
cld
jae
xor
loope
jne
clc
repnz
nop
cld
jae
add
repnz
push
mov
cmpsb
jo
dec
add
add
add
jo
xchg
sbb
repnz
nop
cld
jae
add
mov
cwtl
test
and
testl
nop
push
mov
leave
nop
jmp
lods
out
xchg
lods
mov
push
mov
xchg
ret
push
shrl
fisubl
nop
push
mov
leave
nop
jmp
sub
add
add
mov
clc
repnz
nop
cld
jae
add
push
sldt
lods
pusha
loopne
jne
clc
repnz
nop
cld
jae
lea
adc
nop
push
mov
leave
nop
jmp
add
add
add
int3
lret
pop
clc
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
and
xchg
movsb
outsl
add
test
pop
sbb
pushl
clc
repnz
nop
cld
jae
sbb
inc
mov
mull
repnz
nop
cld
jae
mov
xor
add
adc
adc
add
fbld
movhps
repnz
nop
cld
jae
add
and
sti
add
jnp
out
clc
repnz
nop
cld
jae
cwtl
repnz
add
push
clc
repnz
nop
cld
jae
add
push
add
shll
xchg
nop
push
mov
leave
nop
jmp
int
ud1
add
mov
call
clc
repnz
nop
cld
jae
add
add
or
test
arpl
xchg
ret
mov
add
ja
sub
add
repnz
nop
cld
jae
mov
add
sbb
pop
clc
repnz
nop
cld
jae
push
add
add
cli
add
shlb
rcl
repz
repnz
nop
cld
jae
add
or
icebp
nop
push
mov
leave
nop
jmp
add
pop
add
and
int3
adc
and
call
clc
repnz
nop
cld
jae
shl
add
in
leave
nop
jmp
add
repnz
int
push
mov
and
mov
in
leave
nop
jmp
mov
add
add
or
repnz
nop
cld
jae
lock
push
daa
add
insb
or
add
add
mov
add
add
add
clc
repnz
nop
cld
jae
roll
add
rolb
repnz
nop
cld
jae
add
add
add
sbb
clc
repnz
nop
cld
jae
repnz
add
add
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
loop
add
out
enter
nop
cld
jae
add
repnz
clc
repnz
nop
cld
jae
add
roll
add
in
roll
push
mov
leave
nop
jmp
and
loop
push
add
pusha
push
mov
xchg
ret
add
push
add
test
add
clc
repnz
nop
cld
jae
add
add
add
adc
dec
je
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
add
or
loope
cmc
pop
clc
repnz
nop
cld
jae
mov
add
movsb
mov
add
loopne
dec
mov
clc
repnz
nop
cld
jae
out
sar
add
inc
pusha
iret
popa
clc
repnz
nop
cld
jae
daa
adc
add
add
sub
push
mov
xchg
ret
or
mov
push
shlb
jbe
add
rcrl
xor
add
push
sti
test
mov
je
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
movsb
add
mov
add
inc
jbe
lds
repnz
nop
cld
jae
add
loope
loopne
inc
and
nop
cld
jae
mov
add
sub
stc
clc
repnz
nop
cld
jae
add
pop
add
add
lods
rolb
repnz
nop
cld
jae
add
mov
push
mov
and
shlb
nop
cld
jae
add
add
out
add
clc
repnz
nop
cld
jae
add
pop
and
add
or
sahf
mov
inc
adc
repnz
nop
cld
jae
add
sti
mov
dec
dec
mov
push
mov
xchg
ret
int
add
mov
add
pop
nop
push
mov
leave
nop
jmp
es
sti
movsb
add
add
fidivrs
push
mov
xchg
ret
movsb
outsl
add
dec
add
adc
push
mov
leave
nop
jmp
add
inc
mov
add
lock
inc
add
clc
repnz
nop
cld
jae
xchg
add
fsubs
sar
repnz
nop
cld
jae
add
add
add
add
pop
clc
repnz
nop
cld
jae
add
add
add
loope
push
push
mov
xchg
ret
jne
xchg
popf
and
cmp
push
nop
push
mov
leave
nop
jmp
mov
bound
sti
pcmpgtb
mov
clc
repnz
nop
cld
jae
mov
cli
lock
push
clc
repnz
nop
cld
jae
out
sar
push
xor
icebp
push
push
mov
xchg
ret
add
xchg
mov
inc
sub
rolb
and
je
pusha
dec
mov
loop
add
or
arpl
xchg
ret
sub
add
cli
add
ljmp
nop
nop
cld
jae
int
add
test
rolb
nop
push
mov
leave
nop
jmp
cli
add
add
add
jae
seto
in
leave
nop
jmp
add
out
mov
rolb
clc
repnz
nop
cld
jae
add
add
jbe
sub
push
mov
xchg
ret
or
lgs
push
mov
leave
nop
jmp
or
repnz
add
nop
push
mov
leave
nop
jmp
mov
add
add
sub
int3
hlt
xchg
mov
nop
push
mov
leave
nop
jmp
roll
sbb
jge
dec
push
clc
repnz
nop
cld
jae
add
or
in
leave
nop
jmp
out
add
pop
repnz
pop
or
push
adc
nop
push
mov
leave
nop
jmp
sub
dec
add
push
clc
repnz
nop
cld
jae
add
test
add
push
mov
leave
nop
jmp
add
jne
add
push
mov
xchg
ret
add
repnz
add
ret
clc
repnz
nop
cld
jae
xor
lock
sar
repnz
nop
cld
jae
fisttps
add
rol
andb
pop
pop
push
mov
xchg
ret
and
add
add
in
leave
nop
jmp
add
add
add
push
and
inc
rep
push
mov
xchg
ret
pop
adc
daa
mov
ja
xor
nop
nop
cld
jae
add
int
int
jp
add
cmpsl
add
clc
repnz
nop
cld
jae
mov
add
fdivr
clc
repnz
nop
cld
jae
add
and
movb
mov
xchg
ret
add
inc
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
rclb
sbb
cmp
ret
cmp
cwtl
loope
loope
add
nop
push
mov
leave
nop
jmp
add
and
add
cmp
outsl
je
clc
repnz
nop
cld
jae
add
cwtl
adc
repnz
nop
cld
jae
push
mov
out
pop
daa
add
push
inc
lret
pop
clc
repnz
nop
cld
jae
cli
add
loope
add
or
add
pop
sub
clc
repnz
nop
cld
jae
and
mov
lods
mov
clc
repnz
nop
cld
jae
int
add
pop
add
mov
push
mov
xchg
ret
out
cwtl
add
inc
xor
call
nop
jmp
or
in
push
push
mov
xchg
ret
mov
loope
add
mov
nop
push
mov
leave
nop
jmp
outsl
mov
movd
fistpl
push
mov
xchg
ret
filds
add
out
add
nop
nop
cld
jae
add
mov
add
rclb
nop
jmp
and
fists
iret
imul
clc
repnz
nop
cld
jae
add
add
push
idiv
decl
daa
add
add
and
cmp
repnz
nop
cld
jae
add
movsb
add
test
lods
jge
add
mov
add
and
mov
nop
cld
jae
add
add
nop
nop
cld
jae
mov
add
out
pop
add
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
cld
jae
es
add
fbstp
mov
andb
jne
clc
repnz
nop
cld
jae
add
mov
ss
repnz
nop
cld
jae
add
mov
push
mov
mov
clc
repnz
nop
cld
jae
add
lods
push
mov
movsb
inc
add
push
clc
repnz
nop
cld
jae
add
or
xchg
push
push
sbb
and
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
add
push
and
add
nop
push
mov
leave
nop
jmp
loope
or
repnz
fstpl
push
mov
leave
nop
jmp
add
outsl
xor
clc
repnz
nop
cld
jae
add
int
inc
xor
clc
repnz
nop
cld
jae
add
movsb
mov
test
clc
out
aaa
cmp
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
cld
jae
add
add
add
jge
clc
repnz
nop
cld
jae
mov
add
cli
andb
pusha
nop
push
mov
leave
nop
jmp
movsb
add
add
push
add
data16
inc
push
xor
add
loop
mov
xchg
ret
mov
lods
adc
insl
push
nop
push
mov
leave
nop
jmp
jne
cmp
movsb
xchg
popf
add
pop
xorl
clc
repnz
nop
cld
jae
xor
dec
sub
inc
add
and
int
sub
add
pop
add
clc
repnz
nop
cld
jae
adc
sbb
add
jbe
rep
clc
repnz
nop
cld
jae
pop
mov
daa
repz
nop
push
mov
leave
nop
jmp
loope
push
mov
int
add
leave
clc
repnz
nop
cld
jae
mov
add
mov
fcos
incl
pop
cmp
lods
add
mov
add
or
add
clc
repnz
nop
cld
jae
lods
add
push
clc
repnz
nop
cld
jae
add
jne
lock
or
add
add
dec
addl
nop
cld
jae
lea
add
repnz
nop
cld
jae
roll
lock
sti
add
test
nop
nop
cld
jae
mov
mov
xorps
xchg
ret
add
loope
add
movsb
xor
nop
cld
jae
rorl
add
pusha
shrb
clc
repnz
nop
cld
jae
add
add
daa
cld
clc
repnz
nop
cld
jae
pop
and
add
repnz
mov
jmp
cmp
test
cmp
add
test
and
test
leave
rcpps
cmpsb
inc
pusha
ds
pusha
mov
lock
xchg
push
and
mov
loopne
dec
xchg
aas
rolb
pusha
inc
cwtl
cmp
sbb
cmp
jne
pusha
rol
mov
mov
add
push
mov
add
rcr
cmp
sub
frstor
pusha
cmpsl
fistpll
add
scas
loopne
mov
loopne
test
mov
pop
and
pusha
mov
and
add
sqrtps
push
mov
jb
xchg
ja
dec
inc
push
push
cli
andl
inc
int3
stos
fwait
pop
jbe
pop
mov
or
shlb
test
ss
xchg
adc
sub
mov
std
push
cmp
loop
lret
mov
inc
pusha
shll
lea
andb
push
mov
mov
ret
jns
pusha
add
in
cld
xor
bound
addb
repnz
addb
cmp
add
aas
xor
scas
pop
aam
jmp
addb
sahf
jae
jmp
add
jnp
cld
data16
pop
jmp
cld
testl
push
sbb
mov
rol
push
dec
cli
stc
add
cmp
addb
enter
outsb
jno
pushf
ror
cwtl
cmp
or
mov
daa
fldt
fwait
pop
ja
mov
aaa
xlat
scas
pusha
and
test
jne
inc
aad
cmp
mov
pop
or
inc
out
sti
das
or
int3
mov
test
dec
jg
or
xorb
push
in
out
pop
xchg
fdivrs
rcrb
and
scas
add
sti
jae
mov
jge
inc
loopne
or
mov
dec
sbb
fistpl
and
pusha
stos
mov
jle
movsl
out
xor
mov
or
and
add
or
pusha
int
xchg
je
cmpsl
lods
pusha
mov
add
inc
cmpsb
add
mov
loopne
pop
xor
pushf
mov
sti
add
sub
sbb
outsl
xchg
scas
pop
ret
aas
call
aad
lret
push
loop
int
inc
push
xor
out
test
addb
xchg
and
sbbl
mov
inc
jp
test
sbb
mov
pusha
pop
scas
loopne
or
xchg
leave
inc
testl
lds
pusha
out
popa
ds
inc
mov
cs
imul
rolb
mov
jge
andb
int3
push
add
popa
sub
add
pusha
pusha
insb
add
mov
mov
cmp
shlb
aaa
outsl
shrl
add
inc
mov
test
adcb
xchg
mov
adcl
loopne
pop
or
or
and
inc
sub
adc
mov
fistps
fadds
sub
inc
xchg
mov
stc
fsubrs
or
addb
iret
and
inc
sub
push
mov
sub
and
daa
and
or
inc
je
add
pop
push
addr16
add
andb
jnp
repz
loopne,pn
lcall
pusha
push
sahf
jno
je
and
sub
push
mov
lcall
insl
addb
sub
scas
xor
pop
std
and
pusha
out
bound
and
pusha
and
lcall
jle
dec
lea
pop
jb
loopne
mov
pusha
mov
scas
mov
mov
scas
pop
movsb
shlb
cmp
hlt
mov
iret
push
out
flds
or
push
inc
shl
fimuls
cmp
bound
xor
and
add
in
leave
cmp
add
inc
fs
fs
mov
dec
inc
mov
sbbb
loopne
lock
inc
add
insl
cmp
cmp
fistl
outsl
or
rolb
lds
arpl
and
lods
pusha
mov
gs
jle
int
aaa
cmp
sahf
inc
faddl
gs
out
mov
add
add
inc
adc
xor
mov
inc
inc
or
xor
add
inc
loop
add
addb
mov
leave
and
popa
and
popa
adc
addb
cmp
add
ds
mov
mov
jno
bound
fnstenv
adc
in
push
pusha
cs
inc
pop
mov
xchg
sbb
mov
sahf
fiadds
ja
les
rolb
es
cwtl
or
cmp
xchg
test
pusha
mov
sub
jecxz
inc
add
negb
imul
mov
cmpsl
adc
subl
pusha
pusha
sub
adc
mov
orl
inc
rcr
mov
push
loopne
xchg
or
dec
dec
xor
xchg
sbb
dec
add
and
add
add
dec
dec
add
es
loopne
rol
xor
inc
cmpsb
inc
rol
add
mov
iret
dec
sbb
mov
insl
adc
xchg
fbstp
stc
mov
lods
rol
pushl
loopne
inc
sbb
pushl
adc
shlb
push
shl
pusha
pop
aas
stos
sahf
xchg
neg
jno
js
push
lea
inc
rclb
pusha
orb
lret
out
xorl
inc
jp
dec
out
add
sub
sbb
add
fs
in
loop
mov
sbbb
out
in
xchg
movsl
jp
push
push
das
fisubs
fbld
jmp
adc
add
inc
loopne
jno
adc
mov
sub
xchg
rolb
loopne
daa
clc
and
das
xchg
mov
addr16
fsts
jbe
aad
mov
aas
adc
sbb
iret
aam
out
and
mov
adc
xlat
leave
subl
pop
cli
dec
sbb
aas
cld
pushf
imul
add
rolb
xchg
add
xchg
jmp
push
xchg
loope
and
arpl
mov
scas
jb
mov
loope
xorl
loopne
lods
add
mov
cmp
shlb
ret
or
inc
call
xchg
jbe
les
sbb
sub
pusha
mov
add
mov
fists
mov
mov
jmp
lock
xlat
mov
xchg
mov
sbb
cmpsl
call
pusha
inc
in
dec
bnd
rolb
dec
fdivrs
and
pusha
popa
cmp
mov
rcrb
sbb
xor
shlb
cmp
and
cld
sub
mov
mov
nop
cmp
loop
jb
in
mov
xchg
popf
add
ret
arpl
adc
and
rcrb
loopne
lcall
int3
notb
add
iret
push
mov
out
sub
add
fstpl
xlat
fisubs
pusha
inc
sbb
outsl
mov
adc
mov
dec
or
insb
mov
add
sbb
dec
scas
andb
fwait
mov
fcmovnu
sbb
bound
mov
pusha
add
jne
scas
and
lret
dec
frstor
sahf
sub
loopne
add
loope
arpl
jae
fmuls
mov
movsb
and
xchg
sub
shlb
loopne
mov
jb
mov
sub
les
push
jns
shlb
addb
pusha
pop
mov
minps
dec
and
subb
push
rorb
push
pusha
sar
add
rolb
and
inc
out
xchg
sub
inc
adc
mov
inc
or
inc
and
pusha
sbb
and
add
pop
cwtl
push
and
testb
shlb
xor
and
push
inc
xchg
inc
pop
fidivs
jle
pop
xor
mov
je
lret
pop
fimuls
loopne
scas
loopne
aam
aad
dec
mov
ja
jp
jl
addb
or
add
insb
xlat
add
jae
sbb
cmp
repz
mov
imul
and
jp
cmc
iret
pop
in
test
loopne
sbb
jbe
jmp
mov
loopne
add
dec
andl
sbb
rolb
into
pop
pop
std
imul
and
mov
add
pusha
nop
xchg
fsubs
dec
hlt
jae
repz
and
push
push
add
sarb
shlb
ret
lahf
ja
scas
andb
ret
scas
add
int
addr16
dec
cmp
jbe
enter
lods
andb
or
rcrl
push
ret
shrb
sbb
ret
mov
pop
andb
mov
gs
arpl
fcomi
xor
mov
or
pusha
jmp
test
pusha
je
xor
pusha
xchg
adc
mov
and
test
shr
aas
pop
push
or
and
fxch
push
mov
pushf
movsb
loopne
push
cmp
sbb
rclb
and
fdivr
movsl
testl
in
sbb
pop
stc
loopne
adcl
xor
ss
addb
inc
aad
lock
call
mov
lahf
loop
test
pusha
ss
pusha
mov
jns
inc
mov
adc
lods
andb
mov
test
add
loopne
subl
addb
in
leave
inc
adc
and
sbb
jo
rolb
push
dec
dec
fs
mov
adc
lea
scas
addb
jae
xor
stc
gs
push
adc
mov
insb
movsl
mov
gs
rol
and
mov
cmpsb
inc
mov
lret
andb
test
and
and
inc
call
andb
inc
gs
pop
adc
add
aam
mov
pop
add
adcl
andb
mov
or
cmp
loopne
dec
xor
adcl
jle
dec
adc
jp
jmp
sahf
sub
add
sub
add
and
js
mov
inc
mov
mov
inc
pop
mov
push
and
popf
add
enter
outsl
mull
push
dec
cmpsl
call
and
dec
pop
push
push
shlb
ss
cmp
mov
jmp
inc
pusha
push
add
shll
mov
pusha
dec
sarl
call
add
push
pop
fsubrl
add
adc
fidivrl
int3
icebp
out
mov
add
sarb
hlt
fwait
popa
ja
in
adc
inc
shrb
nop
mov
pusha
mov
xor
repnz
testb
or
xlat
sub
and
inc
push
out
movsb
add
mov
aaa
mov
rcrl
mov
mov
add
adc
and
lea
push
dec
jno
imul
loopne
addb
cld
jle
fwait
mov
aad
and
and
leave
pushl
enter
lock
insb
imul
and
insb
les
xor
jbe
mov
rolb
or
subb
dec
push
loopne
out
pusha
pusha
mov
rolb
movsl
xor
xchg
popf
mov
mov
int
mov
jno
arpl
mov
shll
sub
inc
pusha
sub
mov
or
dec
rcl
clc
fs
add
and
pusha
add
push
cmc
mov
mov
jns
inc
shlb
mov
lock
mov
shlb
pusha
or
mov
rolb
mov
inc
mov
in
mov
dec
sbb
call
mov
adcl
jecxz
cmc
pop
inc
mov
popf
mov
xchg
lds
and
mov
push
stos
and
xor
dec
inc
cli
add
or
and
addb
push
add
pusha
add
fsubrs
xorl
cld
std
mov
out
mov
ficoml
fmulp
cmc
sbb
cmp
push
mov
and
jno
pop
xchg
xchg
lock
sbb
jnp
pop
mov
adc
inc
inc
push
cwtl
call
sub
in
ja
and
inc
mov
jecxz
dec
mov
outsb
jl
aad
jb
aas
fldl
andb
rorl
fwait
aas
xchg
mov
cltd
movsl
xlat
xchg
pop
mov
nop
mov
inc
out
loopne,pn
cltd
fistps
jno
adc
mov
vandnpd
test
shlb
test
pusha
push
xor
addb
inc
pusha
fsubl
jg
mov
lcall
aam
xor
out
stos
adc
into
xor
sub
je
movsb
and
cmp
sub
rolb
pop
lcall
lret
aas
mov
ficoml
mov
jle
jl
rclb
lret
push
push
enter
clc
add
in
and
out
push
into
sub
and
iret
test
and
sbb
loopne
js
ss
dec
fnstenv
and
rcr
jge
pusha
cs
lea
loopne
xor
inc
add
inc
cltd
xlat
sti
inc
lock
xor
addb
loopne
cld
roll
mov
addr16
loopne
pop
jae
mov
mov
xchg
loopne
pop
push
xor
out
dec
lret
je
rolb
mov
jmp
jp
push
adc
cmp
test
inc
cli
or
inc
jo
je
dec
or
add
lret
andb
mov
sbb
subl
sahf
test
or
dec
sbb
in
jae
int
clc
jle
jl
loopne
shlb
lds
adcl
test
loopne
lcall
es
fsubl
addb
sbbb
pusha
pusha
xchg
add
ja
mov
das
dec
and
pop
aaa
dec
xor
or
fcmovbe
andl
mov
mov
cmpsb
andb
pop
xor
add
lea
testb
jl
jbe
int
push
or
inc
add
dec
rorl
mov
add
jecxz
and
fucom
push
jb
mov
dec
fs
cmp
jmp
jge
push
lods
pop
mov
jl
pop
or
loopne
sarb
shlb
test
adc
outsb
push
xchg
ficoms
inc
and
xchg
iret
jecxz
adc
addb
mov
mov
jge
pop
jl
adc
push
ljmp
loopne
lea
subb
stc
ss
sahf
inc
mov
pop
mov
jns
push
ds
iret
mov
scas
shlb
stc
xor
sbb
xor
loopne
jb
and
inc
loop
push
cltd
sub
lock
stos
shlb
mov
jmp
or
test
pusha
int3
cwtl
bnd
addb
lahf
ja
sbb
sarl
cmp
mov
push
sbb
in
stos
mov
and
jo
loopne
or
add
addr16
test
int
adc
adc
andb
addl
mov
psraw
mov
sbb
inc
dec
stc
aad
andb
xlat
lret
fdivrp
pushf
mov
add
pusha
daa
mov
sub
addr16
inc
cmp
out
adc
xor
add
loopne
jecxz
sub
mov
and
not
stc
fdivr
inc
mov
and
mov
loopne
sbb
mov
pusha
loopne
sub
mov
and
into
dec
mov
sub
pusha
repnz
testb
mov
mov
inc
and
and
xchg
mov
popf
mov
mov
or
pusha
lods
sbb
popa
push
lds
mov
add
lcall
adc
shll
fists
adcl
adc
cmc
xchg
sti
and
loopne
mov
aas
lcall
movsl
adc
shlb
aas
aam
fs
xor
cltd
in
pop
or
scas
and
filds
mov
fadds
shlb
clc
movsb
and
sub
xchg
adc
and
repz
cmp
jle
and
and
xlat
mov
add
adc
loop
in
inc
popa
and
mov
xchg
pop
imul
jmp
and
jp
ret
lods
je
jecxz
dec
push
clc
shrb
add
sub
or
loopne
movsl
call
add
jmp
push
hlt
sti
pop
xor
insb
sub
shrb
xchg
js
mov
xchg
sbb
push
out
lds
dec
pop
mov
pop
mov
pusha
sarb
push
pushf
mul
jp
xor
gs
and
out
cmpl
out
cmpsl
sub
loopne
adc
inc
orb
mov
mov
ror
or
rorb
ja
ja
jg
mov
movsl
pop
dec
jns
push
aam
cmp
andb
and
ret
push
or
pusha
pop
popa
in
pusha
sub
mov
sbbl
ret
in
push
bnd
pop
out
and
lock
test
xorb
or
orb
sbb
sbb
cmp
inc
inc
and
push
stos
rclb
ss
shlb
add
and
test
inc
test
scas
add
rcrb
xchg
shlb
jne
ret
mov
pusha
popa
pop
mov
add
bound
inc
movq
repz
cmp
test
add
dec
fdivl
scas
add
imull
mov
mov
add
stc
inc
jno
lods
loopne
fwait
aad
lods
pusha
add
jb
adc
fsubrl
inc
mov
jl
lret
mov
lock
popf
repnz
enter
adc
mov
sahf
xor
or
shlb
js
je
inc
inc
loopne
fiaddl
and
sar
shrl
jl
mov
or
loopne
cltd
into
xor
pusha
inc
add
pusha
mov
mov
push
loopne
or
subb
hlt
dec
lret
adc
testb
add
leave
shlb
mov
add
pusha
test
pusha
aaa
push
pusha
shlb
shl
out
dec
imul
dec
pop
xor
xchg
addr16
orb
jle
clc
mov
and
pop
lret
pusha
subb
add
inc
mov
repz
lods
loopne
into
repnz
int3
loop
and
inc
lret
push
mov
cmp
mov
cwtl
pop
fstl
sbb
adcl
and
jg
jmp
mov
out
cli
inc
inc
aas
push
inc
pusha
arpl
dec
and
insb
pop
test
and
inc
or
and
test
ret
jp
andb
add
jae
repnz
loopne
mov
xchg
mov
inc
jbe
mov
lahf
push
cmp
add
shlb
or
sahf
and
popa
jmp
test
mov
mov
in
cld
data16
je
or
mov
and
loopne
dec
ss
jns
movsb
mov
dec
add
dec
mov
loopne
outsl
inc
dec
mov
cmp
pop
mov
jle
flds
add
scas
and
scas
loopne
add
and
mov
rclb
and
data16
fucomp
in
cmovne
mov
cld
add
ljmp
push
mov
jnp
jg
xor
fisttpll
pusha
andb
mov
and
and
push
push
aas
jle
call
leave
mov
adc
pop
insb
fcmovu
scas
mov
jle
sbb
push
mov
rcr
add
xchg
fsubs
loopne
and
loopne
rorb
add
cmp
inc
push
imul
push
jae
add
mov
dec
gs
add
and
add
add
sahf
add
add
sub
aas
add
or
pusha
nop
mov
jae
pop
or
adc
cmpl
ret
hlt
push
outsb
sub
inc
ret
movsb
mov
or
cs
bound
shrd
cmp
int
in
jmp
idivl
aam
in
loop
lahf
movsl
into
mov
mov
mov
xor
mov
jecxz
jl
data16
mov
sub
xorb
popf
sub
pusha
push
dec
jae
and
xchg
sbbb
test
out
in
and
shrb
xchg
pop
test
loopne
dec
push
out
sbb
loopne
mov
and
mov
sbb
mov
push
jbe
xor
nop
hlt
push
neg
fs
lret
fwait
stos
xchg
int3
or
pop
int
popa
stos
inc
inc
adc
sub
negb
dec
popa
xchg
push
xchg
jg
sbb
pop
adc
dec
inc
psadbw
pop
dec
movsb
rolb
and
addb
ret
sbb
stos
loopne
popa
dec
mov
and
push
scas
and
sbb
popa
inc
push
es
loopne
adc
insb
jl
insb
xor
mov
loopne
ja
push
lret
push
add
push
bound
inc
xor
shlb
pop
xchg
adc
cmp
shll
pusha
fldcw
mov
pusha
subb
sti
addr16
idivl
dec
ljmp
sub
mov
aaa
shll
add
mov
loopne
jmp
dec
mov
push
jb
and
aad
aad
jnp
dec
leave
int3
xchg
mov
imulb
push
rcll
jnp
cmpsb
shlb
sahf
cmp
jb
pusha
pusha
add
xorb
daa
cmp
pop
hlt
data16
icebp
jne
add
xor
arpl
push
xchg
pop
pushf
loopne
cltd
ror
fs
test
mov
and
mov
lahf
aam
nop
xchg
ss
mov
inc
mov
lahf
scas
and
lds
xchg
sub
and
pusha
cld
and
add
inc
cmc
and
mov
inc
sti
inc
mov
xchg
aas
stos
addb
std
enter
sub
fs
pop
pusha
loopne
pushf
jmp
into
adc
mov
add
mov
pusha
add
sbb
push
shlb
loopne
mov
push
loopne
or
inc
and
sbb
mov
jle
xchg
addr16
cli
aam
mov
adc
xchg
lods
lahf
mov
into
cltd
cmp
cwtl
mov
lods
or
adc
fcmovb
call
pusha
mov
add
push
lods
adc
je
push
mov
aas
jp
addb
leave
cmp
inc
and
xor
push
andb
arpl
sub
pusha
outsb
std
fcom
leave
jae
mov
enter
inc
and
jo
test
pusha
mov
add
xor
out
xor
subl
mov
adcb
mov
mov
cmp
popf
fs
and
aam
push
nop
es
insl
cltd
xchg
rclb
movl
or
add
adc
mov
pop
xor
loopne
dec
mov
rcr
pop
adc
mov
jmp
shl
xor
shlb
loopne
repz
mov
pop
pop
cmp
jne
add
sbb
pop
jne
test
inc
nop
cmc
jns
mov
adc
dec
negb
jg
jl
jle
dec
jle
jg
inc
inc
push
jmpw
div
test
cmpsl
ss
leave
mov
lahf
adc
fucomip
xor
and
decl
and
pusha
jno
cmp
pop
and
inc
mov
or
pop
mov
loopne
adc
sub
pusha
sub
dec
sbb
pop
ss
add
rorb
mov
adc
shlb
pmulhuw
jmp
jg
or
int3
or
sub
adc
add
rolb
inc
pop
movsb
loopne
dec
sub
pop
filds
and
lcall
testb
bound
mov
andb
mov
ds
data16
dec
and
shlb
mov
sahf
jge
or
inc
rclb
inc
mov
out
loopne
or
idivl
fidivs
addb
call
mov
adcb
aad
and
and
inc
add
vcvtss2si
fdivrs
add
inc
cmp
push
inc
lret
add
cltd
jnp
rorl
pop
icebp
jl
rol
popf
popa
popf
mov
pusha
inc
jmp
dec
or
add
pop
mulb
out
push
dec
jne
loopne
mov
insb
sbb
mov
in
pop
cmp
loope
pusha
and
sbb
dec
or
pusha
pusha
cli
stos
shl
jns
and
jne
es
pop
add
and
loopne
add
pop
cmpsl
insl
lret
jne
cmp
cs
pusha
push
stos
inc
sbbb
pop
ds
inc
faddl
pop
repz
add
loopne
sbb
sbb
daa
add
push
andb
jno
loopne
shlb
fistl
mov
pop
push
rol
or
shlb
ret
fistl
popl
loopne
mov
sbb
and
loopne
fwait
and
int
mov
lds
repnz
shlb
les
pushl
push
mov
jmp
inc
das
mov
std
ds
or
mov
ja
mov
and
mov
das
out
frstor
aas
or
daa
cmpsl
push
add
lods
loopne
xor
sub
pop
dec
fnstenv
lea
lock
andb
insl
or
loopne
addb
sub
fcmovne
repz
loopne
push
adc
jle
repnz
scas
add
loopne
fldt
xor
mov
and
sti
and
sbbb
pop
mov
jo
dec
adc
mov
lahf
fsts
into
outsl
xor
addb
fs
outsb
adc
jecxz
xor
push
sarl
inc
orl
cltd
mov
and
lds
add
or
ret
lods
inc
add
cmc
insl
pop
andb
jecxz
push
rol
scas
add
shl
xchg
and
fsubrl
mov
lret
into
or
inc
push
cltd
outsb
pusha
push
cmp
ss
aam
xor
cmp
mov
adc
or
pusha
inc
das
xor
cld
jo
ljmp
and
jle
inc
rorb
mov
gs
in
adc
addb
test
arpl
inc
adc
movsb
rolb
cmp
loopne
cmc
push
adc
andb
cmp
push
cltd
sbb
add
mov
push
pop
cmp
inc
xor
jns
lahf
ret
xor
pushf
es
lret
loopw
shl
inc
push
rolb
xlat
sbb
cli
mov
add
cld
add
ljmp
inc
lcall
push
dec
push
mov
rol
shl
movsb
inc
pusha
pop
fstps
pusha
orb
add
dec
jp
rcrb
xor
rolb
pop
pop
sti
lcall
rcrl
fmuls
loope
mov
and
pop
outsl
sbbl
inc
rolb
fisubrs
jbe
mov
mov
stc
jne
pusha
add
or
rcrb
and
inc
sarb
inc
cmp
sbb
fsubrs
dec
pop
pushf
adc
sbb
and
add
fisttpll
mov
shlb
lock
mov
mov
jnp
shlb
inc
mov
mov
and
jmp
push
pop
test
inc
push
loope
mov
and
sbb
xchg
dec
mov
jge
dec
aas
xor
inc
call
push
sbb
xor
jp
loopne
out
clc
mov
pusha
xchg
or
push
or
andb
add
mov
test
cmp
add
xor
pusha
ror
dec
cmpsl
or
jp
call
pusha
call
into
mov
imul
js
movups
pop
lret
mov
out
jg
loopne
xchg
iret
xor
andl
xor
add
lret
loope
xchg
push
add
and
mov
loopne
and
shll
xor
leave
dec
int
movsl
aad
mov
test
and
add
test
shrb
mov
and
mov
aad
aad
fucom
repz
mov
enter
inc
xor
dec
mov
pusha
pusha
and
shrb
stc
jae
into
leave
xlat
hlt
sahf
stc
scas
pop
hlt
sub
mov
test
and
add
inc
mov
lcall
dec
test
int3
xchg
sbb
ret
jns
xor
scas
test
sarb
xor
or
fdivrs
xor
nop
sub
and
test
mov
cmp
lahf
outsb
push
pusha
pusha
pop
or
mov
outsb
sbb
nop
pop
mov
and
lock
fcompl
adc
fwait
stos
out
pushf
jae
mov
addb
inc
mov
sbb
push
or
andb
je
cltd
push
push
icebp
fildl
add
fiadds
jnp
mov
test
mov
iret
mov
sbb
pusha
add
and
iret
jbe
add
pusha
stc
mov
mov
sbb
addr16
sahf
leave
test
loopne
loopne
adc
nop
test
mov
mov
mov
mov
pusha
out
add
subb
pop
ja
mov
and
loopne
xor
pusha
mov
aaa
aam
push
jecxz
out
xchg
add
mov
shlb
jns
repz
pop
add
pusha
idivb
sbb
add
ret
ja
jmp
xor
test
rolb
mov
cmp
cmp
add
push
addb
jnp
test
xor
jmp
shlb
push
pop
std
out
mov
mov
pop
inc
out
push
loopne
sbb
xchg
cmp
xorb
jbe
fistl
jae
loopne
addb
sub
fstl
sbb
bound
sti
pop
lea
lahf
xor
pop
xlat
jmp
cli
pusha
les
jmp
xor
jge
push
cmp
jo
test
dec
jmp
mov
rolb
xchg
pushf
jo
movsl
aaa
add
pusha
int3
out
inc
sbb
add
mov
outsl
cmpsb
inc
rol
fcmove
pop
andb
cwtl
mov
inc
sti
clc
mov
mov
dec
fdivr
push
add
adcb
scas
mov
push
jnp
mov
outsl
andb
sub
ret
xchg
and
push
sbb
ret
dec
mov
je
les
rclb
fwait
das
push
jnp
shll
pusha
loopne
or
aas
and
iret
dec
out
sbb
enter
les
dec
scas
rol
enter
sbb
dec
bound
inc
orb
add
mov
add
loopne
or
loopne
mov
cmc
sbb
adc
inc
add
mov
inc
add
and
sbb
and
xchg
loopne
pop
sbb
leave
rcll
icebp
movsb
loopne
adc
mov
rcrl
and
andb
xor
jbe
inc
loopne
stos
cmp
or
pusha
stos
loopne
xor
out
and
jp
pusha
inc
xor
cmp
sub
mov
insb
test
mov
out
cmp
add
shlb
inc
push
xchg
jb
and
lcall
pop
sahf
daa
fucom
or
add
mov
xchg
pusha
loopne
aas
pop
mov
loopne
and
inc
pop
jnp
push
mov
mov
adc
jle
cmp
add
test
rolb
loopne
shlb
xlat
loop
dec
sahf
mov
mov
jb
jg
movsb
loopne
push
push
pusha
loopne
scas
ja
add
pop
mov
xchg
xchg
push
and
loopne
pop
sti
xor
and
shlb
popf
insl
lcall
dec
push
inc
cld
cltd
push
mov
xor
push
stos
push
test
pusha
popf
jp
mov
mov
int
push
rolb
or
and
cmp
mov
loopne
lods
js
dec
jp
sbb
clc
scas
add
hlt
mov
and
dec
mov
dec
jb
push
xor
dec
into
jl
insb
push
mov
xchg
ja
rol
jns
sub
xchg
xor
loopne
adc
loopne
pushf
fsub
mov
mov
and
push
add
test
push
add
adc
outsl
push
jae
or
pop
dec
push
cmp
ja
in
mov
lahf
pop
mov
mov
js
call
mov
std
jmp
inc
inc
xor
movsb
inc
and
cmpsb
rolb
jp
or
outsl
icebp
mov
lret
dec
mov
popa
push
add
cmp
jae
xchg
fmuls
and
scas
in
mov
and
ljmp
pusha
jnp
mov
cmpsl
mov
sbb
dec
mov
mov
subl
add
and
mov
jae
inc
jno
inc
xchg
pusha
mov
leave
stos
add
gs
sbb
adc
mov
loopne
sbb
das
or
mov
sti
inc
cmp
shr
jmp
fadd
jl
in
xchg
jl
aaa
clc
mov
and
pusha
push
jecxz
outsl
jb
roll
pusha
and
and
pop
call
cmpsb
loopne
push
pusha
or
cmp
xor
mov
mov
sarb
pop
shl
pop
mov
test
and
cltd
xchg
xchg
nop
into
cld
mov
sub
xchg
add
addb
push
and
mov
shrl
xchg
cld
gs
negl
pop
das
cmp
inc
xorb
cmp
insl
decb
push
loopne
xchg
mov
xchg
push
jle
mov
test
add
or
arpl
rolb
shrl
test
test
jno
lret
shrb
loopne
jae
or
push
andb
inc
jecxz
jg
loopne
push
fbld
mov
ds
jae
andb
out
inc
and
pop
jnp
int3
sub
add
fldt
lret
inc
lock
mov
add
mov
shll
popa
movsb
add
dec
add
cmpb
shlb
cmp
insb
adc
ja
test
adcl
and
fwait
pop
lea
shrb
and
into
nop
mov
mov
sahf
and
sbbl
cmp
imul
add
leave
mov
xor
in
mov
and
and
jge
inc
loopne
pushf
or
clc
std
aad
loopne,pn
xchg
ja
inc
mov
dec
pop
andb
das
test
xchg
jmp
dec
imul
pushf
xchg
aam
pusha
and
loopne
test
xchg
movsb
rolb
mov
adc
add
cmp
mov
movsl
insb
scas
mov
mov
scas
ret
lcall
mov
inc
fstpt
mov
int3
pop
cltd
pop
movsb
andb
add
mov
leave
add
or
aaa
cmc
repnz
or
jo
sub
add
in
test
pop
and
jge
dec
adc
push
add
adcb
jb
sbb
xor
xchg
andb
pop
xchg
mov
clc
mov
loope
push
rolb
lret
inc
cld
push
or
test
subb
andl
inc
shrb
adc
pop
shll
jae
mov
movsb
inc
cmpb
dec
pushf
cmp
push
and
arpl
and
shlb
dec
jo
push
dec
xchg
addb
and
loopne
cmc
pop
addr16
shl
or
in
div
test
jge
shlb
add
ja
mov
ret
push
pop
nop
cwtl
xor
scas
into
hlt
cwtl
mov
xchg
les
addb
jle
or
and
adc
and
pusha
cld
push
mov
add
insb
icebp
mov
sub
addb
pop
lock
mov
pop
arpl
insl
filds
mov
xor
inc
loopne
inc
mov
std
cltd
sbb
dec
inc
pop
ret
and
push
imul
mov
mov
addb
sbb
call
loopne
adc
scas
add
mov
inc
push
jns
addb
outsb
ds
pusha
enter
mov
mov
les
leave
roll
ja
mov
add
shr
dec
add
inc
push
mov
mov
nop
leave
dec
jo
push
out
xor
psubusw
gs
mov
mov
movsl
inc
cmp
repz
imul
jbe
and
inc
jp
inc
addb
rorb
fidivl
dec
int3
cmp
inc
sahf
adc
pop
aas
out
inc
loopne
ljmp
rcrb
add
xor
cmpsl
call
pusha
mov
out
and
mov
neg
pop
arpl
sub
aas
pop
int
mov
loop
leave
adc
push
rolb
push
and
testl
xorl
sar
and
data16
popf
punpcklbw
lods
mov
pop
outsb
mov
loopne
or
sub
inc
push
jmp
jmp
fldenv
mov
jecxz
inc
add
ljmp
or
cwtl
sahf
ret
inc
cmpsl
pop
xchg
inc
out
mov
pusha
add
ret
mov
nop
insl
pusha
lds
pusha
inc
ss
andb
lret
loopne
xor
jecxz
inc
and
pusha
add
xchg
ja
test
or
loopne
fldcw
pop
add
pop
jnp
xchg
fidivs
mull
pusha
pusha
add
sahf
out
stc
pop
lods
test
shl
cmp
andb
mov
pusha
and
xor
mov
scas
loopne
hlt
pop
shrl
adc
ljmp
inc
addr16
enter
cmp
and
sbb
and
push
pusha
mov
xchg
clc
cmpsb
loopne
pop
aam
repnz
adc
jmp
mov
andb
loop
in
adc
pusha
shlb
and
and
sbb
mov
mov
xchg
inc
mov
and
push
push
test
imulb
mov
addb
inc
out
mov
mov
pushf
mov
xor
cmc
sub
pusha
mov
inc
pusha
dec
cmpsb
and
jbe
scas
push
shlb
addb
sub
xor
mov
cmpsb
rolb
inc
jmp
imul
aas
stos
mov
xchg
lret
loopne
mov
mov
outsb
sbb
sbb
cmpb
loopne
mov
ljmp
sub
pusha
popa
popa
imul
sbb
pop
scas
add
xor
pushf
xchg
mov
in
inc
movsb
addb
jb
sbb
stos
inc
loopne
ret
fwait
pop
lahf
push
cmc
int
xchg
pop
sahf
pop
xchg
popa
in
jbe
lea
dec
sub
pusha
aaa
cs
stos
cmp
shlb
fisubrl
int3
adc
inc
pop
mov
push
movsb
inc
sar
cmp
sub
clc
jge
push
xchg
or
fildl
andb
cmp
pop
ret
push
outsb
cmp
jmp
adc
jb
ret
in
xor
sub
testb
and
cmpsl
mov
sbb
add
andl
orb
outsl
int
rorb
dec
inc
sarl
popa
fisttps
dec
push
fcomp
daa
arpl
inc
lods
test
stc
pop
push
mov
je
call
rolb
and
push
insb
in
sbbl
or
xchg
lods
sub
test
and
cmp
mov
andb
mov
jbe
jecxz
and
xor
inc
jnp
popa
or
sahf
out
mov
inc
fnstsw
outsb
ja
pusha
pop
jp
xor
cmp
test
add
xchg
lea
jecxz
cli
icebp
push
shlb
js
sub
orb
pusha
insb
jo
ja
shlb
mov
and
mov
jmp
stos
lret
std
lods
and
pop
sub
addb
idivb
out
add
sbbl
inc
adc
mov
add
jge
mov
nop
in
test
and
jle
xlat
popf
pop
shlb
xchg
mov
mov
inc
xchg
in
add
ja
ret
sbb
inc
inc
xchg
test
adc
mov
inc
sbb
mov
rolb
lret
enter
out
add
outsl
cli
repz
cs
and
shlb
inc
xchg
xor
loopne
mov
jns
ljmp
and
or
pusha
and
pusha
add
xor
inc
movsl
dec
jbe
andb
pusha
addb
mov
inc
shlb
or
ror
cmp
ret
rolb
pop
xchg
pop
sbb
or
mov
sahf
fsubl
rol
push
sbb
push
outsl
dec
pop
fcoml
jle
outsb
das
jae
push
fs
inc
mov
loopne
adc
pop
push
and
inc
iret
test
and
repnz
adcl
and
jecxz
loopne
jns
ret
or
loopne
stos
push
andb
icebp
in
dec
xchg
enter
cmpsl
adc
cld
mov
sbb
push
adc
lock
mov
push
mov
shlb
xchg
jb
jns
add
nop
nop
sbb
mov
in
or
or
inc
fisubrs
pusha
mov
test
loopne
rcll
pusha
and
loopne,pn
pushf
repz
js
push
sub
ret
sbb
inc
add
pop
decl
pusha
inc
jg
fs
jg
or
mov
pusha
and
out
mov
insl
jg
sbb
aad
mov
stos
fs
xorl
fmul
mov
orb
pop
add
std
xor
loopne
jp
inc
and
adc
inc
and
and
aad
and
mov
and
lds
sbb
addb
mov
fmuls
jae
xor
mov
and
sbb
xchg
xor
mov
and
loopne
pop
sub
inc
pusha
ss
and
xorb
cmp
jno
add
test
add
inc
and
in
out
lea
mov
adc
jl
adc
call
pop
ret
pop
out
lods
shl
aaa
xor
sub
inc
adcb
lret
xor
cmp
cld
pop
cmp
loopne
sbb
sub
dec
clc
test
adc
popf
sub
andb
jl
orps
push
jnp
cmpsl
rcrb
sub
xchg
in
push
loopne
das
inc
pop
out
test
mov
and
nop
mov
ret
xchg
mov
mulb
pop
sahf
xor
jne
loopne
js
and
stc
std
pop
push
vcomiss
pop
dec
lret
loope
cmp
pusha
mov
mov
pop
push
push
cmp
andb
fiadds
loopne
notb
dec
mov
and
movsl
xchg
into
and
push
and
int3
sbb
hlt
test
vprotw
mov
inc
mov
and
pusha
loopne
or
loopne
addb
mov
mov
insl
movsb
add
lds
mov
mov
shlb
filds
jmp
cmpsb
rol
xchg
cmp
mov
inc
in
cmp
ds
ficoml
outsl
add
and
xchg
gs
jle
movsl
call
dec
daa
cmpsl
xchg
inc
inc
sti
xor
je
cli
int3
xor
movsl
cmp
xor
or
inc
into
dec
out
pop
repnz
sub
andb
and
and
inc
pop
pop
xchg
rcr
stc
dec
add
insb
sub
pusha
mov
gs
out
or
flds
push
push
subl
rolb
enter
add
ficompl
loopne
xchg
imul
stos
pusha
rolb
inc
loopne
loopne
mov
cmpsl
orw
xchg
stos
mov
xchg
add
push
sti
and
stc
adc
lcall
xor
shl
fcoml
mov
sub
add
stc
mov
pop
out
inc
hlt
cmp
push
movsl
repnz
cmp
test
test
pusha
mov
imull
push
imulb
cmc
mov
in
pusha
pop
mov
ja
cltd
push
sbb
xchg
push
lret
sbb
mov
rorb
daa
push
jb
push
mov
mov
sub
xchg
lcall
push
xchg
outsb
jge
iret
jnp
aam
or
pusha
inc
cmp
inc
rolb
inc
jg
push
lds
loopne
pushf
cmp
push
in
stos
and
insl
xchg
pusha
pop
sbb
ffree
jle
std
cmp
and
fwait
add
mov
call
addr16
scas
mov
call
add
inc
add
cmp
stos
stos
inc
mov
cmpsb
mov
aam
int3
bound
push
loopne
push
xchg
or
movsb
pusha
pusha
mov
inc
lock
pop
jl
xor
jb
pop
call
stc
xor
add
iret
jo
sub
repz
fwait
loopne
fsubrl
mov
mov
loopne
rorl
jbe
adc
add
icebp
and
pusha
jnp
fisubs
jmp
repz
pusha
and
or
leave
mov
out
mov
pop
repz
arpl
mov
rclb
in
jnp
rolb
ror
mov
loopne
cmp
repnz
adc
addb
loopne
stos
popa
push
outsb
mov
pusha
addb
int3
pop
mov
aam
cmp
divb
test
pop
sbb
scas
xor
or
adcb
pop
dec
mov
orb
fisubs
shlb
xchg
test
cmp
jbe
ret
andb
insb
loopne
sub
shlb
xorb
xor
movsb
add
sub
out
mov
sarl
fidivrl
mov
inc
mov
shlb
stc
lods
rcr
cmpsl
inc
fadd
roll
cmpb
cld
pop
lahf
enter
cmp
sub
sub
lock
shll
jnp
mov
mov
fisubrs
lods
push
mov
add
and
cwtl
idivb
dec
test
xchg
fnstsw
sub
and
shlb
out
mov
xor
mov
sub
cmpb
pop
push
pop
cmp
mov
inc
jns
push
xchg
loopne
les
jecxz
and
sub
cmp
xlat
push
lret
xchg
add
adc
jb
test
gs
push
lcall
rclb
andb
xor
int
neg
pop
sub
ds
pop
push
mov
out
adc
push
addl
andb
das
pop
int
jge
mov
jle
scas
push
insb
pop
out
xchg
mov
lds
adc
andl
or
dec
mov
pop
subl
add
bound
leave
dec
movsb
inc
rol
push
push
jo
ret
cmp
inc
mov
xor
jle
cmpsb
pusha
mov
sbb
loopne
ret
sub
or
jl
ds
in
mov
addb
iret
pop
aad
das
jmp
in
mov
push
jnp
lret
fdiv
sbbl
jne
add
sti
add
loopne
and
inc
adc
insb
pop
xor
inc
movsl
push
jo
xor
stos
push
inc
mov
or
popa
pop
aam
inc
jbe
imul
test
mov
mov
and
inc
and
and
outsb
outsb
mov
mov
add
add
xor
aam
in
mov
loopne
shrl
push
jmp
sbb
pusha
cmpb
mov
sub
add
mov
mov
inc
in
movsb
rolb
cmp
loopne
sti
mov
scas
add
mov
gs
pop
ss
sbb
mov
fldenv
xor
icebp
push
or
pusha
insl
jle
mov
imul
add
adc
fisubrs
andb
dec
and
lahf
mov
mov
cmp
daa
push
sbb
stos
jmp
sbb
pop
add
pusha
repz
mov
addl
imul
inc
add
mov
pop
sbb
mov
lock
add
sarb
aam
add
inc
aas
sbb
inc
shrb
mov
mov
mov
add
pusha
inc
call
and
mov
or
or
rol
push
outsb
loop
push
add
ss
xor
inc
nop
fstpt
jg
xchg
mov
xor
mov
xlat
push
addb
shr
lcall
sarb
aad
stos
and
sub
inc
xorb
bound
loopne
movsb
mov
scas
bound
loopne
jecxz
andb
dec
cmc
mov
xor
aaa
add
xchg
fiadds
inc
int
jp
rcrb
std
dec
sub
inc
mov
out
sub
and
ror
ret
leave
mov
adcl
cmp
cmc
and
addb
inc
push
push
sarl
xor
mov
and
addb
add
cmpsl
push
mov
cmp
inc
mov
pusha
sub
outsl
mov
pop
mov
ror
stos
test
inc
ficomps
lods
mov
cmp
lcall
pusha
mov
movq
cmp
cmpsb
pusha
addb
push
test
inc
loopne
ss
jnp
cmp
inc
sub
add
stos
addb
jle
mov
or
inc
sbb
popf
andb
jno
xchg
jae
add
cltd
sbb
add
mov
push
and
pop
sub
mov
and
add
shr
push
xchg
push
fxch
pushf
enter
add
rorb
mov
mov
notb
push
jne
inc
and
mov
fdivp
call
push
je
lods
inc
inc
adc
dec
xchg
mov
and
push
test
pusha
rcrb
ret
xchg
and
cmpb
jecxz
xchg
xor
xchg
adc
jecxz
pop
cld
stos
shll
push
andb
test
inc
mov
arpl
mov
pop
fldenv
add
pop
pop
mov
add
add
dec
cmp
push
mov
sbb
or
adc
jno
and
pusha
sti
cwtl
je
add
js
dec
in
icebp
int
push
shlb
fs
sbbl
inc
cmp
jp
jge
inc
add
jecxz
dec
fsubrs
and
lods
mov
dec
add
cli
shlb
add
add
mov
cmc
aam
imul
pusha
and
and
pusha
jg
push
movsb
inc
and
jg
arpl
and
push
popa
sub
loopne
out
cmp
and
hlt
in
jbe
pushf
insl
stc
mov
inc
movsl
dec
pop
xchg
decl
cltd
pop
inc
inc
test
jo
push
rolb
outsl
incl
insb
inc
push
or
inc
cmpsl
push
cmp
lock
js
push
add
mov
lcall
in
int
rolb
pop
dec
mov
sti
pop
sub
mov
adc
sbb
and
mov
jle
mov
pusha
test
inc
mov
repz
and
push
jnp
pop
lods
pop
stc
xor
adc
out
decb
push
sbb
dec
sbb
adc
loopne
cmpsl
push
mov
sbb
xchg
adc
and
pusha
xlat
dec
iret
mov
shlb
lea
mov
mov
addb
sti
lea
les
add
ss
out
lock
sti
sub
inc
and
jecxz
addb
popf
aad
inc
pop
test
cmp
rclb
xor
jecxz
push
mov
loope
inc
sub
inc
incb
inc
loop
pop
mov
or
sub
popf
andb
jb
cmp
adc
movl
and
mov
negl
add
inc
lea
inc
inc
cmc
xchg
mov
add
fcmovnbe
mov
inc
fnstenv
mov
add
adc
jp
dec
lahf
jae
test
xchg
fbstp
sbb
std
push
out
push
and
jmp
ljmp
iret
cmp
mov
push
loopne
pop
xchg
jne
mov
sub
cmc
mov
and
inc
xchg
popf
and
iret
inc
inc
sub
add
mov
dec
repnz
mov
iret
iret
stos
loopne
repnz
pop
mov
mov
add
rcl
pop
cmp
mov
dec
push
inc
inc
repz
add
mov
mov
aaa
lcall
outsb
push
pop
inc
or
in
cmp
mov
mov
push
movsb
add
jns
addr16
cmc
add
fcomps
add
mov
lods
andb
pop
mov
mov
aam
pusha
inc
jg
pop
xchg
mov
mov
rol
pusha
pusha
inc
jmp
sbb
xorl
ljmp
mov
enter
xchg
xor
cs
sbb
imul
add
pop
and
add
mov
sbb
pusha
movsb
addb
stos
sub
insl
lods
shlb
cmp
stc
add
addb
add
hlt
cwtl
push
inc
sbb
fnsave
in
lock
lock
push
inc
add
add
mov
mov
pusha
pusha
sbb
das
icebp
clc
push
andb
xchg
adc
add
andb
lea
fistpll
ss
call
scas
loop
add
inc
iret
add
pusha
hlt
ljmp
and
or
lret
pop
shll
mov
and
sub
mov
mov
arpl
pop
rorb
std
mov
inc
cmpsl
add
push
leave
xchg
inc
jecxz
rorl
enter
jmp
sar
add
in
adc
das
out
and
add
and
imul
addb
das
dec
adc
push
cmpsb
and
fmul
sub
popf
test
sbbb
xchg
inc
inc
sbb
outsb
inc
sti
shll
xor
pop
leave
dec
jo
dec
push
mov
pusha
clc
loopne
loopne
pushf
xor
push
inc
and
pusha
pusha
sbb
scas
sbb
lds
push
addb
testb
in
stos
and
pop
dec
mov
inc
pop
addb
in
pushf
xlat
cmp
lods
jg
cmp
sbb
mov
std
mov
pop
xchg
add
mov
add
mov
mov
movsl
fcompl
pop
aam
inc
and
xchg
mov
jb
jg
fsts
shlb
rolb
andl
mov
xchg
dec
mov
leave
adc
sub
and
and
pusha
loopne
dec
shl
dec
jne
or
pushf
sbb
or
cltd
test
inc
dec
push
pusha
mov
shlb
push
push
sub
push
cmp
sbb
mov
or
mov
and
jmp
pushf
lret
inc
add
inc
rorl
cmpsl
jne
aas
loop
and
addb
jl
sub
fimull
dec
mov
and
mov
insl
jmp
sub
add
addb
cs
rorb
or
xorb
push
add
push
aam
cmp
jno
daa
ror
mov
add
loopne
and
pusha
andb
aas
pop
mov
loop
insb
dec
sub
add
int
dec
mov
pop
shl
mov
cmc
stos
andb
sbbb
push
dec
sar
sub
jae
pop
inc
aad
pop
lcall
pusha
test
mov
movsl
mov
and
jbe
shlb
fisubrl
mov
mov
sahf
mov
mov
sub
and
addl
nop
lea
add
inc
or
cmp
in
sbb
jge
mov
mov
mov
xor
cmp
loopne
leave
in
jo
add
and
test
xchg
rcrl
mov
clc
mov
and
dec
xchg
bnd
inc
notl
aad
add
ficompl
arpl
mov
mov
repz
mov
and
addb
ja
fs
clc
aad
sub
and
sub
pusha
shlb
add
xchg
mov
test
mov
nop
fisubrl
mov
not
in
test
and
dec
pop
fstps
sub
mov
xor
lods
out
popa
cmp
jbe
outsb
mov
mov
js
cmp
xor
and
fsubr
mov
and
mov
add
insl
adcl
sub
adc
icebp
in
mov
jne
in
dec
add
lea
adc
popf
pusha
and
insb
cmpsb
andb
add
push
pop
lea
mov
movsb
loopne
movd
xchg
cmp
sub
out
mov
and
xchg
decl
leave
in
out
add
push
inc
inc
mov
mov
jp
inc
cwtl
es
loopne
xchg
pop
or
in
and
loop
in
add
addb
pop
mov
jp
jl
arpl
and
jae
cmp
inc
add
pusha
sub
dec
mov
mov
mov
dec
and
xchg
in
mov
xchg
push
mov
mov
sub
pushf
cmp
add
add
sarb
lods
rol
and
mov
mov
sbb
inc
pusha
cmpsl
cli
xor
nop
lea
jg
pop
cmp
inc
pop
jmp
sahf
sub
sub
andb
lahf
outsb
fwait
xor
pusha
addb
rolb
mov
jne,pt
addb
add
inc
push
mov
dec
sbb
push
dec
xor
jno
into
popf
pop
les
push
and
clc
sarl
lods
mov
inc
loopne
dec
xor
and
and
or
shrb
rcrb
dec
aas
xchg
icebp
stc
or
cmpb
outsb
gs
add
stc
dec
int3
lods
inc
rcr
mov
into
stos
and
cmpsb
inc
inc
pop
rcl
or
test
pusha
das
or
repnz
push
jbe
dec
sub
loopne
pop
sbb
xchg
and
and
add
dec
jnp
loopne
divb
jae
push
frstor
shlb
lods
hlt
daa
nop
mov
pop
dec
enter
pusha
orb
push
xchg
dec
adc
fwait
pop
repnz
fsub
push
test
mov
mov
and
pusha
jnp
inc
mov
addb
inc
aam
movsb
add
pop
insl
or
rcrb
lret
or
inc
lock
mov
frstor
push
xor
or
and
xor
shrb
pop
jb
in
and
rorb
and
jg
xor
mov
adc
roll
or
insl
mov
sub
incb
lcall
rclb
divl
inc
cmc
int
or
add
or
int
arpl
shll
and
dec
push
loopne
sub
loopne
bound
cld
sub
or
lahf
out
dec
sbb
sarb
inc
loopne
or
loopne
jo
popf
jg
addb
dec
pop
pop
addb
addb
xchg
out
ret
arpl
sub
add
pusha
subb
jae
arpl
cmc
xchg
and
psubq
ja
pushf
dec
push
xlat
sbb
or
pop
jae
fsubl
test
pop
ret
xchg
add
rclb
adc
pop
shl
out
xor
mov
shl
out
js
sbb
call
pusha
mov
add
push
inc
mov
je
xchg
inc
shll
cmp
mov
aaa
cli
in
ficompl
and
inc
popa
outsl
cwtl
arpl
jg
icebp
lahf
cli
test
loopne
cmp
scas
shlb
add
ds
pop
push
push
adc
xor
arpl
jnp
and
loope
or
pusha
rcrb
mov
fsubl
addb
ret
adc
inc
fsub
cmpsb
rolb
shl
xor
inc
dec
andl
int3
xor
ret
fldt
orb
or
and
shlb
push
push
cli
pop
addl
dec
or
call
shlb
mov
xchg
sar
data16
or
inc
add
push
mov
xor
stos
jns
je
mov
stos
stos
rolb
add
shll
xchg
loop
loopne
lock
mov
test
inc
jecxz
mov
mov
cmp
and
mov
push
loop
icebp
in
lret
test
jb
inc
pop
into
and
scas
push
mov
sub
push
pusha
inc
stos
loopne
movsl
dec
mov
pusha
leave
mov
pusha
add
aam
mov
inc
xchg
cmp
fisubrs
lods
mov
mov
and
mov
pop
fists
mov
pusha
and
xor
repz
jnp
fnsave
add
mov
imul
and
out
ja
lds
into
push
outsb
add
inc
fwait
xchg
mov
mov
adc
xchg
jb
push
lret
stc
aas
dec
in
dec
es
inc
pop
lea
add
dec
cmpsl
add
inc
lret
ljmp
inc
mov
in
repz
jge
imul
pusha
lods
jb
cmpsb
and
and
mov
add
mov
in
shll
adc
fidivrs
xchg
jb
shl
addr16
mov
mov
loopne
sub
loopne
data16
cmp
cmpsb
mov
lcall
cvtps2pi
mov
push
inc
int3
test
and
fwait
mov
adc
pusha
out
nop
mov
icebp
mov
mov
push
in
scas
pusha
sarb
sub
and
mov
loopne
xor
je
lds
popl
ficompl
jl
jle
aad
jb
negl
push
and
mov
inc
popa
mov
lret
inc
js
push
gs
mov
adc
add
push
shlb
cmp
jecxz
add
rolb
inc
pop
pop
lods
add
xchg
and
mov
xor
fdivr
pop
cltd
mov
mov
pusha
and
add
shlb
ds
stos
es
mov
push
fsubs
pusha
inc
adc
mov
inc
pop
stos
and
movl
cmpsl
inc
push
pop
fcoms
dec
rorb
insb
xchg
lahf
push
scas
push
mov
roll
addb
ficoml
lcall
mov
jmp
xchg
ficomps
loopne
mov
xchg
out
xor
insl
sub
loopne
daa
ret
adc
dec
sub
mov
shr
jge
mov
je
ljmp
mov
inc
mov
mov
cmp
sub
add
sbb
dec
outsl
mov
ret
inc
xchg
test
and
loopne
push
cmp
fsubr
xchg
and
mov
mov
and
pusha
and
mov
or
mov
mov
mov
out
and
add
add
mov
jle
inc
inc
or
pusha
push
cltd
push
sub
push
add
outsl
dec
loop
insl
jmp
dec
mov
and
nop
insb
inc
mov
movsb
pusha
and
add
sti
bound
adc
add
fs
dec
mov
inc
jns
inc
ror
mov
repz
das
roll
loopne
pop
insl
fnstcw
jg
in
xchg
cmpsb
loopne
lcall
int3
cmc
xor
pusha
adc
sbbb
or
mov
in
and
add
loopne
sarl
and
add
loopne
ljmp
cmp
push
lahf
mov
stos
or
fldenv
test
add
pop
addl
pop
addb
and
aad
xchg
inc
imul
scas
shlb
xor
pusha
mov
mov
add
add
add
pop
push
dec
push
mulb
jg
sahf
mov
stos
outsl
jns
add
cmp
shlb
inc
jns
mull
inc
int
cld
ds
add
aas
lea
push
fnstcw
sahf
and
push
inc
sbb
scas
mov
das
and
lea
cmp
add
and
dec
push
jns
xchg
pusha
outsl
scas
mov
in
stc
daa
mov
gs
or
or
mov
jb
mov
aad
dec
shr
adc
loopne
ret
sub
adc
cmp
iret
push
shlb
cmpsl
dec
or
loopne
mov
inc
sub
stc
dec
insl
inc
movsl
or
into
movsl
fdivl
sbb
ficoml
adc
xchg
mov
and
adc
rorl
lea
inc
fptan
jmp
and
aas
xchg
in
dec
push
mov
mov
test
sbbb
hlt
push
inc
and
push
js
aaa
mov
scas
loopne
in
adc
gs
push
mov
cmp
push
add
ljmp
lods
scas
mov
lea
pop
shlb
or
sbb
pop
out
jecxz
cltd
inc
clc
paddq
and
loopne
push
adc
pop
lds
dec
call
mov
fxch
mov
pusha
add
add
andb
cli
ja
jmp
arpl
outsb
mov
mov
ja
test
ljmp
xchg
inc
jae
lret
in
or
add
mov
and
mov
xchg
sarb
ss
mov
add
push
sbb
inc
ds
daa
mov
or
inc
mov
lods
dec
into
mov
icebp
jp
lea
sbbl
mov
jg
push
stos
inc
mov
cmp
xchg
movsb
loopne
jg
addb
xor
cmp
pusha
mov
add
xor
lcall
dec
cwtl
aad
shll
jo
and
inc
inc
fmuls
popf
leave
and
mov
and
push
popf
popf
shrb
pop
jecxz
scas
lahf
mov
inc
sub
push
popf
push
push
jle
lods
rol
inc
add
jg
add
mov
sub
pop
fcomps
pusha
add
inc
rolb
pop
insl
sub
andb
shlb
push
or
test
mov
nop
ret
aam
mov
and
inc
fwait
lcall
sbbb
push
dec
out
pop
jge,pt
adc
pop
call
xor
sbb
stc
xor
inc
or
cmp
mov
test
inc
lea
test
inc
sbb
xorl
shlb
lahf
jp
and
clc
popa
inc
pop
xchg
xlat
dec
adc
pop
add
and
andl
ret
decl
pusha
sarb
pusha
inc
sbb
shll
mov
inc
data16
out
idivb
add
jle
test
mov
mov
das
cmp
hlt
inc
pop
sbb
or
aas
rorl
adc
cmpsl
mov
loopne
jge
call
and
repnz
divl
loopne
ljmp
out
pop
jmp
xchg
stc
out
and
fnsave
jns
sub
std
mov
dec
xor
sarl
adc
sti
ljmp
shlb
inc
jecxz
lret
inc
push
retw
rolb
mov
jno
hlt
das
fwait
iret
lahf
inc
outsl
int
sbb
mov
and
icebp
movsl
or
and
es
sarb
lods
inc
sbbb
add
add
fstl
stos
pusha
add
jb
cmpsl
es
pusha
jo
inc
add
fiadds
aad
insb
xor
cltd
ds
mov
mov
movsb
rolb
xor
push
out
sub
jle
rolb
and
and
imul
add
ret
arpl
mov
loopne
ds
test
and
mov
lahf
fstl
cmp
les
inc
pop
push
shlb
push
rolb
shrb
add
fs
add
xchg
outsl
and
jle
enter
insb
mov
and
sbb
icebp
push
push
cwtl
push
popf
jb
inc
ds
outsl
mov
adc
jb
push
out
in
jge
xor
fidivrl
test
inc
incb
add
and
movsl
cmp
movsb
pusha
and
pop
push
scas
test
loopne
fs
or
aaa
jae
mov
shlb
leave
mov
add
mov
push
pop
sub
pop
insb
test
and
outsb
cmpl
roll
inc
in
inc
negl
and
shlb
jns
and
and
fists
adc
repz
cmpsl
cmp
sbb
dec
jnp
ja
insb
dec
adc
pushf
and
rolb
add
leave
sbb
loopne
xchg
cmpsl
pop
imul
xchg
ljmp
mov
jne
and
sbb
xchg
loopne
push
mov
add
loopne
xchg
test
and
mov
test
cmpsb
addb
pusha
inc
in
mov
loopne
sub
rolb
mov
dec
push
scas
xlat
jecxz
mov
cli
sub
loopne
ja
mov
adc
dec
mov
dec
dec
aaa
fdivs
and
sbb
fstl
xchg
dec
xor
das
test
pusha
jmp
lock
mov
mov
andb
dec
cmp
mov
movsl
xchg
arpl
add
pusha
or
pop
sub
cmpsl
dec
ret
js
pusha
test
aaa
movsb
add
mov
cmp
dec
mov
pop
out
push
cmp
dec
mov
cmp
out
xor
pop
mov
out
mov
mov
ja
lods
andb
and
mov
movsb
loopne
pushf
xchg
add
pusha
mov
rol
mov
loopne
sbb
inc
xor
outsb
loope
push
in
sub
pop
fs
push
daa
sbb
mov
aas
inc
push
mov
xor
jp
sub
mov
call
sbb
andb
sub
and
fcoms
psraw
mov
sbb
dec
ret
and
in
adc
int
loope
pop
call
mov
inc
lock
out
loopne
data16
xchg
lret
sarl
lcall
xchg
shl
loope
lock
mov
ja
bound
cltd
adc
adc
addb
pushf
aad
rcll
xor
sbb
inc
pusha
push
les
jbe
inc
loopne
or
add
aaa
pop
fwait
push
addb
data16
add
dec
andb
jl
jno
inc
inc
mov
sub
inc
fsubs
mov
and
aam
orl
mov
rclb
sbb
sbb
sub
add
inc
jno
cltd
loopne
aas
fdivs
lcall
loopne
and
inc
or
shrb
add
xchg
push
add
dec
mov
andb
mov
add
aam
clc
addl
fisttpl
jp
inc
mov
shlb
std
movsb
and
cmp
ret
ret
hlt
in
ds
insb
cli
mov
mov
jg
push
xchg
push
mov
mov
pop
mov
cmp
inc
mov
mov
mov
pusha
in
fs
cmc
cmpsl
mov
out
inc
push
jg
loop
sub
pusha
divl
add
outsb
mov
mov
iret
jmp
cmpsb
rolb
push
push
inc
add
stc
sub
mov
in
pop
test
adc
rcr
inc
add
mov
int3
mov
xor
addb
push
add
push
movsb
inc
addb
popa
in
cmp
xchg
jno
jb
and
arpl
lds
add
pusha
mov
rolb
lock
add
mov
andb
stc
pusha
call
pop
adc
cmp
mov
mov
rolb
and
cld
adcl
int3
lret
leave
out
ret
loopne
stos
rolb
inc
lock
out
and
repz
aas
pop
sbb
jno
pop
lea
xchg
add
int3
int3
add
xorb
pop
mov
mov
pusha
add
inc
shr
and
nop
movsb
inc
sarb
dec
in
and
inc
and
icebp
mov
outsb
xor
xlat
or
mov
loopne
jnp
fwait
fwait
add
dec
push
adc
ds
sti
cmp
inc
pop
rcll
or
shlb
lret
loopne
add
lods
loopne
mov
jo
inc
add
jnp
out
sbb
jmp
pop
rorb
aaa
adc
enter
mov
jp
js
sub
rorb
sbb
inc
fwait
ljmp
xchg
mov
shlb
add
pop
jnp
and
sbb
jp
jo
ret
movsb
mov
and
add
insl
pop
imulb
jb
test
andb
inc
adc
loopne
xor
aad
shlb
fwait
adc
addb
outsl
das
mov
rclb
mov
push
loopne
aaa
xchg
push
enter
mov
inc
mov
pop
fwait
leave
inc
repz
jno
aaa
mov
jl
repnz
mov
push
pop
pop
push
jbe
inc
mov
mov
mov
insl
lods
addb
adc
jb
adc
jns
and
andb
xor
cmp
pusha
repz
mov
ds
addb
mov
mov
mov
add
int3
and
add
mov
ljmp
cmp
mov
cmp
pusha
test
adcb
in
inc
mov
pusha
xor
mov
loopne
icebp
push
xchg
rcrl
fildll
jg
cli
mov
rclb
out
inc
cmp
inc
add
lods
and
inc
sti
popf
sub
jae
inc
add
jno
stc
rorb
rorb
cwtl
jp
mov
js
pop
mov
inc
add
ret
enter
push
popf
mov
pop
std
mov
push
dec
pushf
fistpl
inc
mov
je
xor
loop
cld
lea
xor
adc
test
xchg
mov
add
jns
dec
jne
sub
push
add
loopne
or
lahf
pop
into
inc
push
fidivrs
sti
cmp
int
or
xlat
cmp
inc
in
and
inc
fbld
cltd
icebp
imul
xor
mov
xlat
lret
stos
add
and
sahf
icebp
dec
clc
mov
bound
and
add
imul
and
xchg
in
aam
pop
mov
cmp
loope
sbb
fisttpl
scas
loopne
or
mov
pop
mov
in
or
sbb
and
adc
inc
sbb
in
xor
mov
fnstcw
pop
sbb
and
int
mov
adcb
jmp
mov
adc
or
pusha
popf
aad
mov
pop
jo
js
shlb
push
mov
xchg
jle
or
pop
pop
push
pop
repnz
mov
push
jns
imul
shlb
les
and
jl
stos
inc
add
loopne
jnp
mov
dec
jnp
test
rclb
shll
repnz
sbbl
mov
movsl
sub
and
and
mov
sti
incb
rcrb
mov
pusha
adc
or
xlat
cmp
push
shlb
scas
andb
pusha
adc
sbb
add
mov
cmp
xchg
push
cmp
daa
mov
imul
xchg
jp
pop
inc
cmpsb
loopne
andb
jmp
jg
hlt
sub
loopne
jecxz
and
mov
into
fidivs
mov
notl
fldcw
inc
and
loopne,pn
cmp
and
add
pusha
and
add
loopne
shlb
das
mov
dec
sarb
andnps
subl
dec
notb
rcl
jb
jbe
jg
xor
mov
rolb
loopne
pop
mov
mov
scas
mov
scas
add
jmp
pop
add
mov
pop
hlt
lds
pusha
inc
inc
and
in
cmp
pusha
add
mov
shrb
cmp
and
or
sarb
pop
adc
loopne
notb
rcrb
inc
ret
fstpt
push
jle
mov
add
insl
lock
sub
in
je
dec
cmpsl
movsb
and
xor
inc
popa
into
dec
add
add
mov
cmc
sub
pop
mov
imul
andb
lock
lock
sub
push
xchg
push
shlb
shlb
xchg
mov
loopne
push
hlt
dec
stc
mov
ss
mov
and
inc
in
movsb
and
add
addb
cli
mov
add
or
push
bound
inc
rorb
fldt
xor
add
mov
mov
popf
adc
mov
or
addb
aas
mov
add
and
loopne
add
add
jge
mov
pusha
and
out
int3
sbb
xchg
lret
jg
sarl
addr16
shlb
mov
mov
test
mov
lods
mov
sarb
cmp
mov
loopne
fwait
adc
dec
inc
jmp
and
sahf
xor
and
ret
je
cmpsl
sub
addb
inc
inc
pop
imul
jp
jbe
xor
bound
fldcw
add
mov
inc
cmc
pop
xchg
push
jo
add
and
leave
fwait
mov
xchg
cld
enter
push
fiaddl
mov
inc
push
shll
adc
outsl
push
sbb
pop
icebp
data16
enter
iret
pop
push
mov
sar
sbb
or
inc
cmc
dec
rorb
addb
enter
sbb
cltd
xchg
pop
mov
xchg
push
cmp
and
enter
sub
loopne
test
rorb
and
inc
cmp
xchg
add
imull
loope
insb
fs
jne
push
mov
gs
pop
aad
add
mov
in
clc
pop
bndcl
lods
addr16
mov
loopne
sub
rcrb
into
data16
lret
pop
pop
in
loopne
jge
and
ror
and
loope
cwtl
bswap
mov
lods
and
jne
lods
dec
sub
sbb
mov
sbb
add
rcrb
shll
push
or
loopne
test
loopne
loop
inc
pop
xor
inc
mov
and
add
add
add
loopne
mov
negl
enter
je
push
adc
leave
mov
add
shr
leave
mov
andb
repnz
inc
adc
xor
aas
xchg
mov
inc
inc
dec
or
cmp
iret
testl
ror
cmp
sub
add
jb
loopne
pusha
inc
xchg
into
arpl
outsl
enter
int3
dec
inc
in
inc
lds
or
pusha
aaa
and
and
sub
enter
into
test
loopne
sub
in
pusha
addb
xor
mov
and
gs
gs
mov
nop
adc
lcall
pop
adc
add
enter
xor
aas
out
outsl
cmp
loopne
and
mov
out
out
std
cmp
in
int
aaa
xor
hlt
out
daa
and
mov
loopne
sub
pusha
xorb
jbe
and
mov
ds
cwtl
and
lahf
xchg
mov
cwtl
arpl
filds
loopne
popa
imul
insb
addr16
test
loop
repz
fs
dec
sbb
lea
mov
cmp
mov
cmp
fsubs
bound
sub
mov
loope
hlt
leave
test
and
add
pusha
push
lds
pushf
addb
and
pusha
loopne
in
fmul
and
pop
addr16
mov
cltd
scas
cmc
or
mov
les
aam
imulb
fiadds
jge
adc
mov
enter
jecxz
repz
sub
loopne
pop
gs
push
mov
sub
push
outsl
in
ds
fwait
cwtl
or
inc
cld
dec
jo
dec
xchg
lea
rcr
mov
scas
leave
fucomp
dec
jle
xchg
pusha
inc
add
inc
xor
inc
pusha
fcmovne
sbb
sbb
addb
push
andb
in
call
mov
jo
add
pop
push
sbb
dec
popf
js
aas
sahf
sub
scas
mov
lret
addb
jecxz
inc
out
sub
pusha
imul
push
lds
movsb
addb
ret
dec
push
incl
pop
rorl
dec
add
data16
add
clc
jb
mov
or
mov
push
addr16
jnp
xchg
adc
mov
out
imul
loopne
mov
mov
shll
sarb
sbb
and
repnz
fwait
lret
in
gs
add
out
push
push
or
je,pt
push
jl
add
movsb
pusha
add
call
icebp
sub
fldenv
jo
inc
test
jmp
cmp
rorb
aas
dec
jno
or
into
test
pop
mov
das
pop
push
add
mov
test
and
pusha
test
add
test
aad
shlb
lahf
lea
push
lods
dec
out
mov
in
sbb
pop
xor
shlb
orb
das
jne
dec
mov
cmp
aaa
lods
in
add
cmp
rolb
inc
movsb
inc
loopne
bound
sahf
leave
jo
pushf
mov
popa
mov
jne
sti
nop
push
insb
or
movsb
pusha
inc
inc
negl
sbb
push
mov
add
and
cmp
pop
cmpl
push
imul
and
sahf
cmpsb
and
jbe
mov
push
ret
shlb
pusha
pusha
js
xchg
jg
repnz
mov
outsl
repz
xchg
insb
test
jecxz
out
xchg
cmpl
hlt
test
mov
jb
pusha
mov
xor
pusha
subb
mov
mov
cmp
scas
inc
adcb
cld
xor
insl
insl
outsb
lods
addb
pop
mov
inc
dec
js
outsl
iret
je
dec
push
mov
loopne
pop
subl
test
add
addb
call
mov
sub
pusha
xchg
and
andb
popa
dec
xchg
xchg
or
mov
xor
add
pop
int3
insb
jne
cmp
test
pusha
pop
in
inc
xchg
lods
add
inc
arpl
push
cmp
pop
xchg
add
pop
adc
push
push
inc
cmp
lock
popf
leave
and
xor
lock
mov
xor
mov
aad
lea
stc
les
shlb
pop
inc
das
ret
lea
rol
popf
mov
pusha
xorl
dec
mov
psubd
adc
fwait
inc
inc
shlb
mov
and
xchg
xor
inc
and
shll
shl
mov
add
inc
lods
rcll
fisubrl
imul
inc
mov
imull
mov
mov
addb
loopne
pop
push
sub
enter
mov
and
and
addb
fsubr
loop
popl
inc
pop
punpckhbw
cmp
sbb
jle
inc
xchg
inc
jge
popl
addb
inc
rclb
insl
clc
push
xlat
or
inc
cmc
mov
jb
jno
and
dec
idivb
push
frstor
inc
addr16
or
loopne
push
fisubrs
inc
les
out
sub
add
cmp
mov
lahf
pop
sub
jg
xor
jne
dec
sub
push
rol
cmp
push
mov
mov
loopne
inc
outsb
sub
and
out
xchg
adc
and
xchg
xor
dec
cmp
cli
mov
out
jo
fldt
sbb
mov
cmp
push
and
jnp
sub
loopne
inc
cmp
add
jl
or
sbb
pusha
mov
mov
loopne
ds
lcall
iret
lcall
ja
pop
inc
hlt
jg
mov
fcmovnu
es
pop
push
add
pusha
mov
rolb
and
xor
mov
mov
mov
mov
jp
pop
call
rolb
les
sbb
sub
loopne
add
lods
pusha
and
lods
andb
xor
cs
and
xchg
in
loope
inc
add
push
test
pusha
mov
push
clc
adc
mov
ret
shl
add
mov
leave
out
lea
sti
pop
sbb
fs
jb
lods
cmp
dec
xor
mov
fimull
cld
mov
lods
repz
add
lods
loopne
out
add
inc
cwtl
jnp
pop
sub
add
ljmp
adc
xor
add
inc
sbb
pop
invd
add
lods
xor
ss
cmp
push
addb
addl
loopne
cmpl
and
push
xor
je
pop
dec
xor
in
cmpsb
addb
mov
xchg
pop
stos
mov
call
loopne
popa
fsubl
inc
pusha
fadds
mov
mov
push
jp
jge
inc
dec
mov
push
addb
insl
bound
sahf
popf
jg
in
inc
nopl
in
pop
push
cld
andb
fst
cld
loope
sub
loopne
outsb
cmp
fimull
pusha
addb
jns
jmp
mov
mov
push
rcr
nop
adc
xchg
in
ficompl
pop
push
stos
imul
andb
or
and
xchg
ja
inc
mov
stos
sahf
cmp
push
fadds
dec
add
xor
mov
fwait
mov
or
std
dec
bswap
push
shl
mov
and
sbb
in
imul
and
mov
inc
push
sbb
arpl
jb
inc
movl
jbe
xchg
scas
pusha
and
mov
inc
xor
sti
jae
dec
movsb
addb
rol
roll
dec
mov
scas
push
es
inc
mov
dec
ss
andb
inc
add
pusha
pop
mov
and
mov
in
sbb
and
push
and
shlb
add
pop
and
rcrb
iret
push
xchg
aas
ret
or
inc
add
mov
mov
inc
or
loopne
adc
cmp
push
lret
lcall
loopne
push
iret
dec
mov
jecxz
pusha
and
into
xor
mov
inc
inc
hlt
push
inc
nop
mov
sub
and
and
or
pop
jno
shl
dec
or
and
cmp
jl
lods
mov
ja
into
les
test
das
out
inc
fisubrl
add
add
addb
psubsb
and
jne
jne
rcll
popa
sbb
rol
push
sbb
push
scas
test
stc
xchg
push
pop
data16
sbb
loopne
mov
ficoml
sub
vpaddusw
cmp
mov
xchg
adc
jae
repnz
mov
mov
and
movsb
rolb
fdivl
jnp
stc
ret
mov
clc
addb
outsb
jmp
ja
inc
mov
and
test
xlat
ja
test
cmpsb
and
dec
and
push
psrlq
leave
jmp
add
sbbb
pop
sub
jp
ljmp
rolb
addb
les
xchg
lea
in
lret
fcoms
lcall
inc
mov
cmpsl
add
dec
xor
inc
inc
hlt
xchg
sbb
call
bound
xchg
mov
and
testb
sbb
inc
pusha
jl
mov
and
mov
and
add
out
arpl
jo
jne
add
dec
lret
push
and
pusha
inc
repz
leave
dec
inc
inc
in
icebp
shrl
addb
idiv
push
mov
pushf
dec
mov
andb
push
fisubrl
out
mov
pop
shll
push
and
mov
xchg
jl
xor
adc
push
scas
rol
test
pusha
stc
xchg
add
shll
out
ret
xchg
add
jmp
imul
cmp
push
and
pusha
inc
bound
add
es
inc
or
frstor
inc
mov
loopne
inc
mov
and
dec
pusha
dec
xor
mov
fwait
ror
push
das
cmpsb
addb
jl
dec
jb
jb
movsl
cmp
hlt
cmp
and
loop
fldl
enter
aad
sti
add
pop
xchg
inc
negl
out
xchg
cmpl
imul
mov
mov
cmp
cmp
clc
jno
clc
lahf
test
mov
inc
rclb
testb
adc
insb
in
sub
hlt
cld
mov
mov
dec
jl
movsb
shlb
cmpsb
and
nop
xchg
imul
sbb
je
lret
mov
xor
sub
into
notl
and
pop
flds
shl
push
ficompl
lahf
pop
fcoms
add
jo
icebp
dec
mov
clc
mov
inc
fcoms
orl
add
jge
and
xlat
test
mov
test
xorb
dec
or
into
mull
in
lods
shlb
popa
or
rcrl
sti
add
add
push
pusha
pop
cli
test
andb
inc
dec
fstpl
mov
and
pop
push
mov
pop
ret
mov
sti
mov
addb
test
enter
loopne
shlb
pop
imul
aad
mov
mov
inc
add
mov
mov
dec
jo
addb
loopne
xchg
loopne
jl
cmpsb
add
ss
pop
sbb
ljmp
in
jecxz
inc
xchg
lods
add
pushf
divl
repnz
rorb
inc
arpl
dec
repz
in
inc
inc
jae
and
inc
leave
ror
addb
xchg
outsl
inc
dec
bound
addb
pop
or
and
push
dec
jp
push
pop
outsb
stc
out
popf
cmp
sbb
scas
pusha
add
mov
mov
aas
scas
inc
shlb
rcrb
mov
xor
or
and
jno
cmp
cmpsb
addb
jmp
sbb
ss
push
xchg
mov
inc
and
mov
inc
add
cmp
jne
ljmp
cmp
nop
lds
cmpsb
addb
mov
or
cmp
or
and
mov
sbb
fistl
loopne
mov
cmp
into
out
cmp
mov
inc
loopne
out
std
rolb
inc
std
mov
inc
pusha
stos
loopne
int3
out
mov
inc
in
sub
fwait
xchg
xchg
fwait
add
mov
and
or
mov
loop
mov
jns
xchg
ljmp
lods
xor
cmc
cmp
sbb
mov
inc
lea
mov
cmp
sbb
sbb
dec
mov
int3
xor
inc
jecxz
inc
push
pusha
shlb
push
mov
push
push
and
cmp
xchg
in
and
scas
cmp
insb
and
xchg
adc
pop
out
xor
xchg
stos
sarl
sbb
stc
xchg
adc
dec
dec
pop
inc
mov
sbb
xchg
call
mov
dec
mov
imul
pop
stos
shlb
movsb
pusha
inc
aas
jb
fstps
shlb
test
sbbb
push
andl
mov
jnp
nop
cmp
pop
dec
mov
fwait
sub
rclb
into
shll
sarb
mov
sbb
xchg
or
mov
movsb
mov
mov
loopne
xor
add
xchg
dec
mov
cltd
shlb
xorl
mov
aaa
or
inc
mov
enter
inc
iret
stos
inc
and
mov
push
add
dec
or
and
int
inc
and
pop
lcall
pop
cmpsb
add
cld
add
repz
ljmp
nop
lods
mov
les
or
loopne
mov
inc
jns
mov
rorl
int3
xlat
loope
inc
loopne
adc
lret
lods
push
loopne
sarl
add
push
andb
lds
cmc
rcll
rolb
push
out
sbb
inc
inc
imul
hlt
push
lcall
fildl
and
shr
or
inc
inc
sub
loopne
and
jbe
in
loopne
and
loopne
mov
xor
int
and
push
mov
xchg
in
inc
lock
lods
push
lea
or
jge
repnz
shlb
push
nop
xor
pop
imul
scas
and
sbbb
jnp
dec
jg
lgs
loopne,pn
cmpsl
lock
stos
aas
aas
dec
xor
jb
ficoml
mov
mov
pusha
ja
adc
lret
sarb
pop
lcall
out
mov
or
orb
push
mov
add
shl
sbb
mov
and
orl
icebp
movsl
sbb
add
rolb
cmc
xchg
xor
pop
and
inc
jo
test
inc
mov
push
inc
cmpb
sub
inc
xor
cs
loopne
sub
mov
cwtl
inc
shrl
mov
xor
jecxz
and
out
mov
lods
andb
mov
pop
pusha
xchg
sbb
jb
fisttpl
dec
xor
xlat
sbb
ds
bound
pop
mov
and
cmp
inc
insb
lret
lret
mov
loopne
jle
xor
inc
jl
outsl
ds
ret
push
fists
add
mov
call
lahf
xchg
shlb
mov
xlat
aas
and
xor
cwtl
sti
pop
mov
add
andb
or
mov
into
movsl
push
addr16
or
add
aaa
jl
and
pusha
jmp
mov
int3
mov
add
xchg
fldl
lcall
fdivl
add
dec
insl
pop
test
addb
xchg
int3
lock
arpl
mov
shl
inc
push
js
scas
mov
loopne
push
xchg
push
rol
and
or
pusha
sub
decb
add
loopne
add
add
pop
xchg
movsb
and
daa
xlat
push
arpl
into
mov
inc
xchg
mov
add
arpl
dec
addb
adc
xorl
adcl
shl
icebp
pushf
gs
sbb
ret
in
sub
add
and
inc
cld
pop
scas
out
mov
rol
dec
push
cmpsb
rolb
dec
xor
pusha
sahf
jne
pop
into
xchg
sbb
xchg
pop
aad
cmp
sarb
inc
arpl
sub
rclb
add
pop
shrl
aas
jno
jno
adc
rcrb
ret
movsl
pop
aad
jne
cli
xor
inc
mov
pusha
loopne
sbb
loopne
out
and
pusha
in
adc
push
mov
stc
xchg
add
mov
xor
loopne
hlt
inc
pop
dec
ficoms
mov
sub
in
push
gs
clc
mov
in
daa
push
add
lock
loopne
popa
movswl
or
rcrb
add
inc
pop
or
xorb
repnz
pusha
and
inc
movsl
popf
push
add
mov
addb
adc
adc
mov
dec
stos
andb
in
or
pusha
lock
and
mov
rol
imul
sarb
jp
mov
stos
or
mov
repz
loopne
pusha
loopne
dec
pop
fiaddl
pusha
pusha
in
movzbl
add
mov
push
cmp
adc
cmp
shlb
nop
cld
or
rclb
jb
cltd
pop
arpl
or
loopne
xlat
lea
call
in
fdivl
pop
loopne
ror
xchg
mov
xor
lods
pusha
and
sub
lahf
mov
add
sub
adc
jae
mov
filds
push
add
rorl
mov
add
leave
sub
push
andb
movaps
xchg
aad
adc
mov
scas
mov
adc
std
jle
sarl
wbinvd
xchg
xor
and
addr16
mov
adc
int
cs
sbb
mov
orb
jnp
mov
loope
std
cld
push
xor
lock
or
insl
out
adc
roll
or
or
or
mov
add
and
cltd
mov
mov
rorb
and
pusha
pop
add
mov
add
fdivrs
pusha
jmp
mov
xor
mov
insb
addb
test
rolb
and
aad
aad
fnsave
cli
lock
dec
xor
stc
jo
repz
sub
mov
jns
bound
rolb
dec
cli
inc
scas
insl
imul
or
int3
mov
pusha
shlb
mov
push
shr
andb
cmp
add
loopne
mov
pusha
pusha
and
fstpt
mov
xlat
jb
or
jl
sbb
mov
cwtl
shrb
jle
rolb
ljmp
dec
sub
cld
lods
inc
add
add
cmpsb
rolb
addl
sti
ret
cmp
dec
and
and
mov
mov
repnz
ret
add
loopne
fcompl
popf
mov
adcb
sub
inc
sub
mov
xor
addb
inc
inc
add
loopne
add
inc
and
loopne
and
and
push
rcll
mov
jo
push
aas
leave
push
mov
test
xorb
loopne
dec
and
ret
fistps
pop
inc
xchg
loopne
mov
pop
push
adc
and
push
je
rol
xor
roll
push
in
or
or
add
pusha
int
imul
inc
repnz
divb
loopne
push
out
ja
jecxz
sbb
in
lods
addb
mov
sbb
and
loopne
sub
add
shlb
mov
pop
jmp
lock
and
xchg
les
pop
je
pusha
pusha
andb
pusha
pusha
push
xor
mov
nop
outsb
iret
repz
shlb
push
inc
push
add
and
or
push
fs
jl
movsl
gs
xor
push
cltd
jb
push
push
mov
fimuls
mov
mov
pop
dec
mov
fwait
xlat
lret
inc
cmc
xorl
mov
pop
xor
dec
mov
mov
cmp
pop
dec
cmp
mov
pusha
xor
jmp
sub
add
cmc
popa
rorl
push
and
mov
jp
or
loopne
xor
inc
sub
jbe
dec
sbb
mov
in
test
adcb
lcall
or
cmp
lcall
jmp
push
push
cltd
mov
in
fsub
hlt
push
add
fbld
pop
mov
out
lods
jnp
insb
js
adc
icebp
mov
push
lea
andb
mov
insb
pop
fsubrs
inc
subb
add
lea
cmc
push
es
or
pusha
sarb
push
test
lock
adc
cwtl
lock
aad
inc
cmp
andb
pusha
shlb
add
stc
js
cmp
std
out
int3
dec
adc
push
lock
in
clc
push
dec
outsb
jne
add
lea
in
shlb
outsb
jmp
dec
dec
das
inc
testl
inc
inc
add
addb
not
xlat
out
jle
sub
add
cmp
mov
or
outsb
clc
call
mov
pusha
mov
leave
ja
andb
dec
jl
inc
loopne
mov
and
loope
movsl
andl
pusha
andb
xchg
outsb
and
pusha
push
sub
jae
sub
aad
out
push
out
sub
pusha
fsubr
mov
je
pop
cmpsl
cmp
lret
daa
imul
sbb
cmp
mov
out
lods
adc
pusha
mov
and
lds
mov
pusha
stos
or
add
cmp
int3
push
loope
inc
test
or
les
lock
shll
jno
rol
mull
inc
jae
xchg
inc
es
add
mov
in
cmpsl
repz
push
cmp
add
dec
aad
les
inc
mov
and
mov
addb
cmpb
rcrl
lock
pop
mov
xorb
push
push
adc
das
fsts
loopne
pop
add
addr16
inc
loop
jbe
and
mov
and
lods
and
je
enter
lahf
xchg
push
jnp
mov
pop
xlat
fs
pusha
test
pop
and
inc
mov
sub
sbbb
adc
inc
mov
lds
push
test
pusha
sub
add
xor
pop
add
loop
mov
jo
and
js
call
addb
xchg
cmpsb
inc
shlb
mov
mov
mov
mov
out
leave
out
enter
leave
jmp
insb
ja
lods
mov
inc
pusha
gs
sub
or
lret
inc
loopne
in
sbb
cs
loopne
loopne
enter
sbb
sti
dec
mov
mov
loopne
and
inc
mov
inc
inc
add
mov
mov
shll
dec
cmp
ljmp
sti
hlt
xor
jns
call
shlb
push
iret
imul
sbb
cmp
pop
jecxz
mov
andb
mul
cmp
cmp
loopne
mov
or
inc
sub
push
mov
aad
xor
cld
dec
and
dec
arpl
iret
test
loopne,pn
cmpsb
loopne
int3
mov
inc
sti
xchg
insl
pop
inc
fadd
ljmp
int3
sub
inc
shlb
cmp
push
lcall
jp
lret
fiadds
and
mov
hlt
sub
add
std
int3
inc
jecxz
xor
jg
push
cmp
lock
mov
in
xchg
cmp
les
jmp
cmp
cli
dec
adc
add
ss
cmp
sti
push
pop
scas
and
loopne
jle
jmp
and
fs
ret
shlb
imul
and
jns
arpl
push
addl
xchg
mov
xchg
gs
call
pusha
and
sbb
mov
add
shlb
push
andb
jg
and
push
mov
in
adc
mov
fnsave
mov
hlt
cmp
addb
es
loopne
sub
and
push
insb
mov
pop
dec
adc
clc
lea
add
mov
add
loopne
roll
inc
pusha
call
pop
xchg
into
xor
pusha
aad
mov
xor
test
or
inc
jl
add
loop
je
mov
out
jae
fistps
fistps
cmpl
rclb
mov
add
xor
addb
add
pusha
into
cmovne
ror
sbb
loopne
cmpsb
add
ss
push
andb
mov
inc
aas
mov
js
sbb
sti
insl
in
mov
inc
stc
xchg
sahf
dec
mov
cmp
andb
inc
dec
jg
fwait
rcr
insb
movsb
rol
jns
dec
aaa
ljmp
jns
mov
and
sub
xor
push
add
inc
push
cmpsb
and
stc
outsb
stos
rolb
sti
push
cmp
ljmp
push
outsl
mov
and
mov
dec
aas
je
addb
pusha
fidivl
mov
rcl
sbb
sub
add
add
mov
loop
loopne
mov
fwait
jg
lret
cmp
inc
loopne
or
sub
pusha
sub
loope
inc
test
mov
mov
pop
mov
andb
or
pushf
push
push
adc
cmc
fdivrp
jo
add
bound
jmp
mov
add
leave
mov
enter
lods
bnd
xor
loopne
incl
rol
ljmp
jo
push
inc
pusha
arpl
addb
inc
sub
stos
push
ret
mov
ret
mov
mov
shrb
sahf
dec
fadds
jge
sub
in
std
jb
jno
add
mov
loopne
pusha
add
jno
mov
outsl
xchg
dec
push
mov
lret
and
add
outsw
mov
pusha
imul
mov
inc
ret
mov
shlb
mov
add
mov
fsubl
cmpsl
mov
mov
loopne
bound
pop
ja
mov
loopne
movb
pop
pop
add
add
loopne
arpl
loopne
les
lcall
inc
pushf
lcall
stc
inc
cwtl
and
shlb
arpl
loopne
stos
rolb
pop
and
loopne
pop
sub
inc
push
cli
aas
outsb
pushf
popf
sbb
mov
data16
andb
xchg
rorb
out
stos
addr16
pusha
inc
xchg
jbe
mov
pop
lret
jae
js
or
add
sti
push
rolb
and
adc
sbb
adc
jns
imul
arpl
mov
jp
pusha
loopne
int
inc
cmp
add
and
and
add
inc
in
iret
cmp
dec
rol
cltd
mov
cmpb
sub
call
adc
into
dec
mov
divb
adc
loopne
add
pusha
mov
not
call
xchg
fnstsw
sub
inc
mov
addb
xor
adc
lret
jl
xor
add
loopne
fcomi
dec
jge
inc
adc
mov
cmp
scas
jecxz
popf
sbbl
lea
sarb
clc
cmp
pusha
std
lret
inc
nop
dec
mov
adc
add
pop
pop
jbe
jle
sbb
sub
popf
fcmovnbe
inc
push
rolb
test
shlb
scas
pusha
loopne
adc
or
mov
xor
sub
sarb
rol
loopne
and
pusha
mov
xor
add
fcoms
test
rolb
mov
sub
clc
xor
out
fistps
orb
xchg
push
sti
hlt
inc
test
add
addb
clc
fistps
into
cmp
test
stos
inc
adcb
push
or
mov
icebp
mov
ljmp
hlt
jae
add
jle
rorl
add
shlb
push
pop
cli
adc
pop
icebp
jbe
mov
jl
fs
in
aaa
andb
test
cmpb
inc
push
push
ret
cltd
lds
out
push
or
pop
push
pusha
pop
add
push
push
xchg
mov
out
cmc
cmp
ror
repnz
pusha
orb
addr16
aaa
cmp
repnz
push
popa
test
shlb
sarb
inc
adc
out
sbbl
xchg
in
or
loopne
sbb
bound
jmp
mov
add
mov
loopne
sub
loopne
mov
ret
pusha
mov
fiaddl
addb
cmp
adc
push
jo
lods
add
mov
pusha
adc
mov
pusha
mov
pusha
mov
shlb
clc
mov
and
rcrb
in
out
jmp
fmuls
nop
pushf
dec
dec
sbb
xchg
xor
stc
jecxz
arpl
inc
test
test
rolb
jb
sbbl
add
lods
in
in
or
loopne
pop
daa
mov
sub
lret
pop
push
inc
mov
testb
inc
add
dec
jmp
stos
stos
loopne
cmp
xor
fnsave
test
inc
and
dec
cmp
test
shll
xorb
shlb
std
mov
loopne
loopne
les
inc
inc
fnsave
loopne
sub
pusha
adcb
ljmp
loopne
andb
cmp
adc
and
sub
out
mov
push
pop
mov
and
pusha
cmp
xchg
pop
sahf
mov
lds
movsl
in
mov
push
inc
rorb
adcb
and
sbb
mov
mov
xchg
and
add
push
push
repnz
mov
add
jno
loopne
addr16
or
push
negl
xlat
xor
inc
mov
add
aam
daa
movb
fsubrs
shr
inc
mov
mov
inc
pusha
mov
push
dec
mov
add
xchg
pop
xor
inc
xor
call
or
add
sub
loopne
leave
lret
adc
cmp
iret
sti
outsb
lret
loope
jmp
arpl
push
and
and
scas
pusha
shlb
and
xor
fs
outsb
into
pop
adc
leave
fiadds
outsb
fld
stos
ds
inc
pusha
roll
adcb
lock
mov
jmp
lea
pop
or
mov
xchg
pop
bound
dec
add
stc
jae
jne
dec
pusha
insl
out
jo
pop
jbe
cld
cmp
pop
xchg
and
push
fldt
in
loopne
into
pop
lcall
fists
fsubrl
sarb
fldt
pusha
and
mov
jecxz
xor
or
loopne
test
sbb
inc
lds
mov
xor
mov
inc
adc
int
fisubl
pop
jb
jge
inc
inc
xor
mov
sbb
push
inc
in
mov
push
outsb
insb
inc
mov
hlt
sbb
enter
jnp
mov
sbb
pushl
pop
xorl
inc
dec
fwait
push
test
loopne
lret
cmp
shll
mov
in
cmp
push
rcrb
jne
enter
xor
sti
sbb
mov
fistpll
shrb
push
pop
mul
mov
shr
dec
rclb
aas
lock
addb
inc
mov
add
inc
pushf
add
and
mov
jbe
loopne
js
scas
shlb
gs
mov
arpl
adc
daa
pushf
jne
mov
and
das
pop
lock
push
and
push
mov
shl
push
pusha
shlb
xorb
push
int
iret
push
rol
fwait
ret
pushl
cli
mov
mov
push
adcb
pusha
push
inc
je
and
je
inc
and
and
sub
out
mov
mov
loopne
inc
pusha
in
ds
cmpsl
test
orb
mov
test
mov
adc
pop
imul
loopne
add
inc
mov
loopne
xchg
jmp
cwtl
cmpsb
loopne
ret
movsl
inc
test
mov
adcb
loopne
movsl
xchg
inc
es
mov
repnz
jmp
lcall
add
push
lea
mov
addb
pop
jnp
push
inc
rcrb
cmp
fdivp
cmp
xor
rolb
mov
ss
mov
add
dec
fisttpl
test
cmp
inc
mull
shr
or
loopne
dec
paddw
dec
push
mov
sbb
mov
mov
push
pop
jmp
pop
push
inc
inc
cli
ss
aad
fmull
addb
jb
into
rcll
or
add
xchg
insb
movsl
xchg
and
loopne
in
pushf
sbb
cmpsb
inc
sar
sbb
cmp
mov
add
je
xchg
jp
ss
sti
jecxz
and
loopne
inc
inc
and
cmp
sti
add
cs
pusha
adc
and
push
dec
xchg
sbb
mov
fidivrs
iret
mov
and
ja
stos
and
add
cmp
xchg
sub
fs
inc
add
test
sbb
add
andb
inc
test
jno
add
addl
inc
pop
mov
sub
loopne
inc
sarb
sbb
lret
jg
mov
pop
loope
push
cmpsb
and
cli
lcall
dec
cltd
jmp
cmp
dec
xchg
add
inc
add
xor
pop
adc
addb
shl
sbb
mov
cmp
push
mov
aad
imul
iret
sbb
int
push
and
imul
call
mov
iret
xchg
add
andb
loopne
mov
jp
andb
adc
pop
push
and
pushf
test
pusha
fwait
sbb
fdivr
das
ss
out
cmp
andl
addb
loopne
dec
popa
in
arpl
jne
imul
mov
cltd
dec
cwtl
inc
ss
subb
loopne
test
and
iret
ds
fdivrl
and
lahf
mov
sub
and
pusha
aas
mov
loopne
pop
idivl
xchg
cltd
lods
and
adc
inc
inc
inc
gs
rcr
call
andb
add
aaa
fadd
movlps
xor
push
negl
lcall
adc
or
js
mov
and
loopne
mov
fimull
xchg
push
jg
dec
rcr
mov
shl
outsb
add
sbb
mov
movsb
pusha
add
lea
mov
jl
pop
nop
stos
dec
adc
enter
pop
mov
push
add
inc
dec
push
inc
test
subb
jb
outsl
popa
lahf
fstps
pop
in
pushw
inc
add
inc
movsb
loopne
inc
gs
lcall
das
test
subb
cwtl
and
jp
shlb
clc
xchg
sub
mov
and
mov
stc
cltd
push
fisubl
mov
mov
testb
nop
pop
pop
add
add
mov
inc
insb
push
and
lock
div
mov
shr
sbb
jp
mov
out
or
cmp
and
mov
loop
cmp
jmp
stc
ja
sbb
xchg
jmp
loopne
out
pop
imul
ficompl
pop
push
lock
inc
cld
leave
jb
lea
shl
ret
sbb
inc
lret
adc
xor
add
and
xchg
divb
push
sbb
add
and
rclb
jo
arpl
imul
add
add
sbb
fsubs
loopne
insl
or
loopne
arpl
outsl
pop
xchg
jo
jge
popf
imul
add
and
ror
mov
sbb
mov
pusha
xor
loopne
pop
addr16
cld
out
mov
add
or
inc
push
sbb
push
movsb
and
or
inc
scas
mov
pusha
rcr
sub
pusha
mov
inc
andb
mov
add
pusha
leave
mov
imul
cltd
push
aam
out
out
repnz
and
and
ja
sbb
mov
and
mov
push
sub
push
and
pop
dec
dec
and
loopne
mov
mov
cli
leave
test
xchg
frstor
add
mov
mov
mov
add
push
and
add
pusha
push
rol
sahf
popa
dec
sbb
inc
or
loopne
inc
add
sti
leave
data16
pop
das
fdecstp
out
clc
insb
test
pusha
mov
jge
addb
mov
sbb
pusha
push
add
scas
loopne
pop
xor
sti
cmpl
shl
lcall
shlb
sub
cmp
sub
das
xor
shlb
jp
in
addb
shll
inc
mov
jns
mov
or
add
inc
jl
rclb
in
stc
mov
aas
xchg
cmpsl
out
stos
inc
loopne
fsubrs
and
add
mov
mov
divb
add
andb
andb
mov
or
xor
movsl
dec
sub
lock
mov
add
mov
mov
push
andb
adc
out
mov
loopne
mov
mov
dec
xchg
dec
push
loop
sbb
cltd
push
add
mov
add
loop
push
loope
mov
push
inc
and
xchg
push
mov
roll
imul
add
shr
pop
adc
addb
cmc
out
mov
adc
adc
ja
pop
xchg
jne
pushf
dec
add
push
mov
or
add
jecxz
push
aaa
push
cmpsb
inc
rolb
mov
and
mov
mov
xchg
std
ljmp
mov
out
aam
adc
scas
addb
test
push
iret
out
cmp
call
jmp
dec
cmp
jecxz
and
adc
shl
cmc
pop
mov
js
jne
leave
jbe
pop
stos
xchg
push
cmp
mov
or
inc
jge
push
aas
mov
gs
add
sbb
adc
mov
call
ds
pusha
shlb
pop
jbe
add
inc
test
cmp
xor
add
loopne
adc
aaa
arpl
loopne
js
sbb
or
pusha
jns
sbb
pop
push
pop
and
loopne
jbe
ss
dec
cmp
cmp
shlb
jbe
jno
mov
xor
xor
outsb
push
xlat
pop
jbe
cmp
leave
pop
and
cmp
shl
pop
out
cmp
and
enter
mov
or
or
mov
fidivrs
pusha
pusha
insb
in
mov
add
xchg
xlat
sbb
lcall
loopne
lret
add
addl
xchg
xor
add
loopne
cli
jle
addb
push
inc
add
imul
inc
call
inc
or
shl
inc
lret
shrb
mov
movsb
add
shrb
and
mov
mov
push
sbb
inc
and
ret
cmpsb
add
outsl
popa
lret
cmp
inc
dec
and
add
mov
inc
into
sahf
sub
mov
jnp
imul
mov
das
sbb
cmpsl
out
addb
mov
or
or
shlb
jno
nop
insb
scas
subl
mov
jnp
mov
add
mov
lock
sbb
mov
xlat
adc
rcll
or
mov
icebp
xlat
sbb
push
xchg
mov
or
jno
and
sub
fldl
pop
int
sbb
inc
add
loope
fiadds
jecxz
and
mov
mov
fdivl
dec
lcall
out
fwait
addr16
insl
icebp
add
mov
adcb
ss
inc
xchg
sub
and
sub
inc
pusha
call
xlat
mov
fisubrs
adc
pop
dec
mov
sbb
and
add
in
mov
inc
or
adc
and
and
xor
rcrl
and
movl
fnsave
cmp
push
loopne
dec
dec
std
sub
mov
test
shl
add
mov
or
scas
leave
shll
cmp
idivl
or
pop
repz
sarl
out
pusha
pusha
inc
push
push
dec
out
jg
and
sub
mov
sub
pusha
push
inc
jg
out
test
sarb
stc
ja
xchg
out
popa
dec
inc
insb
sub
je
pop
loope
daa
xor
sub
andb
or
add
mov
sub
sbb
push
sahf
fwait
adcl
call
inc
and
dec
inc
js
add
inc
cmpsl
repz
dec
mov
cmp
jge
rolb
mov
mov
test
add
loopne
stc
in
mov
inc
cld
xlat
mov
mov
adc
dec
mov
insb
shll
movsb
pusha
mov
add
loopne
outsl
insl
setno
pushf
mov
aas
pushf
ss
test
mov
and
mov
push
pusha
and
ss
test
cmpb
sbb
pop
fstl
shrl
imul
inc
fisttpll
inc
and
mov
xor
imul
sysret
dec
jno
andb
mov
push
lret
dec
into
lds
out
fs
inc
or
cmp
add
mov
sbb
add
jo
pusha
rcrl
jp
mov
cmpsb
loopne
popf
push
loopne
inc
mov
subb
shlb
lret
pop
std
fimull
and
mov
ret
push
jns
cmp
loopne
mov
mov
int
inc
pusha
dec
cli
sub
inc
scas
shl
pusha
mov
and
cmp
dec
adc
cwtl
xchg
lds
ret
dec
or
aaa
sub
xorb
dec
imul
in
loop
lret
je
cmp
and
mov
pop
mov
xor
and
mov
and
ljmp
rolb
jg
out
mov
stos
and
not
aam
mov
rcrb
nop
cmpsl
movsl
ss
inc
loopne,pn
push
addb
arpl
insb
test
add
andb
add
gs
popf
mov
loopne,pn
cmp
adc
mov
adc
xchg
fimuls
dec
sbb
sub
or
add
cmp
popf
mov
cmpsb
inc
and
push
and
pop
mov
and
loopne
aaa
hlt
lcall
inc
mov
pop
xchg
sub
sbb
test
inc
and
push
pop
jae
mov
fcomps
inc
dec
loopne
or
loopne
mov
aaa
lods
mov
xor
repz
jb
test
pop
movsb
pusha
cmp
enter
addb
pop
lret
dec
xchg
test
ror
test
inc
dec
out
repz
inc
fs
and
jge
sbb
inc
mov
stc
lahf
scas
insl
daa
ret
add
divb
pushf
imul
add
cmovle
lods
sbb
faddl
ret
jle
pop
addb
mov
test
mov
mov
inc
subb
and
push
xor
fsub
cmp
ds
sub
arpl
out
ss
ffree
mov
sub
shlb
add
push
psrlw
xor
ds
and
and
sbb
leave
bound
mov
in
push
inc
mov
push
mov
fbld
fidivrl
cmpsb
mov
or
add
push
and
lahf
arpl
mov
pop
pop
cmp
aas
jne
pop
mov
jg
nop
into
inc
xchg
or
adc
mov
stos
add
pusha
and
sbb
xchg
dec
test
inc
test
ret
push
pop
jns
xchg
jle
fwait
lds
sub
loope
rolb
pusha
rcrb
and
pusha
pusha
sahf
xor
arpl
das
push
mov
and
scas
and
imul
cmp
into
push
mov
mov
inc
pop
stos
cld
inc
cmp
jbe
ljmp
inc
loopne
repz
insb
repnz
cld
pop
pop
sti
adc
movsl
test
mov
cmp
test
add
xchg
xor
sti
mov
cmpb
inc
mov
icebp
aam
ret
xchg
push
add
mov
adc
ljmp
mov
stc
jle
loopne
test
inc
fwait
les
mov
loopne
pop
cmpps
cmp
hlt
in
jns
outsb
lock
andb
add
fcmovu
sub
popf
addr16
stc
lcall
jge
and
imul
jno
mov
scas
adc
push
inc
lret
xchg
and
and
mov
cmp
popf
test
add
in
xchg
test
add
jg
or
sbbb
adc
pusha
and
das
sti
xchg
roll
out
dec
fildll
icebp
push
cmp
mov
mov
sub
data16
sub
jnp
lea
lahf
sub
mov
dec
pop
clc
jns
adc
add
cld
lock
mov
cltd
insl
pop
mov
add
jg
inc
pop
or
sbb
pop
lock
stos
xor
mov
orl
lret
lods
mov
cmpb
and
add
pop
push
addb
das
rcll
repnz
and
and
and
xor
out
push
and
pusha
add
addb
clc
sti
clc
push
jne
test
cmp
pop
and
add
aad
ljmp
and
mov
or
and
mov
loopne,pn
adc
ret
mov
scas
mov
adc
push
or
mov
and
mov
subb
pop
iret
cmp
sbb
xchg
inc
mov
push
stc
fdivs
shlb
pop
push
aad
ds
rdmsr
pop
or
add
push
out
and
or
and
adc
sub
and
xlat
pusha
aam
or
scas
rolb
sbb
lret
jmp
adcl
cwtl
push
pop
push
cs
and
sub
subb
mov
sbb
and
pusha
fcomip
pop
in
popw
js
mov
lret
sbbb
xchg
mov
mov
stc
sbb
pop
jnp
xor
ja
add
mov
popa
xor
inc
fcomip
add
jecxz
loopne
jp
fimull
loopne
xor
dec
clc
mov
out
sub
loopne
mov
pusha
int
sub
jbe
and
pop
in
pop
xchg
ret
push
and
loopne
cmp
push
shl
lds
or
lahf
pop
pop
cmp
cmp
lods
mov
mov
and
xchg
fs
lret
fmulp
inc
rcll
cmpsl
cltd
sub
loopne
shlb
loop
cmp
xchg
jecxz
jle
arpl
inc
push
jae
jle
cwtl
or
inc
shrb
call
into
add
cld
je
mov
cmp
dec
popf
pop
arpl
movsl
bound
xchg
jae
push
cmc
adc
pop
xor
mulb
nop
adc
or
mov
addb
pusha
rorb
repnz
loopne
loopne
mov
push
pusha
inc
sysenter
fildl
or
mov
pop
add
mov
push
and
stos
out
pop
add
cltd
dec
fmul
stos
loopne
test
sarb
cmp
push
loopne
gs
adc
dec
rcrb
cmp
lods
addb
loopne
hlt
mov
rcll
in
outsb
xchg
rcl
xor
mov
jbe
pop
scas
mov
sarb
decb
iret
fcompl
and
pusha
adcb
ret
sti
or
je
aad
loopne
test
inc
out
pop
jne
lods
addb
pop
roll
and
pop
push
sbb
or
shll
inc
rclb
inc
loopne
inc
pusha
fiadds
and
xchg
ja
xchg
push
aad
repnz
fiaddl
push
std
and
xor
xchg
and
into
ja
pop
dec
mov
mov
mov
js
lea
inc
add
inc
lock
mov
and
lea
cltd
add
cmpb
sub
in
jp
xchg
pop
adc
insb
sub
add
out
dec
mov
addb
repz
shl
add
fs
cmpsl
sbb
loopne
xlat
insl
mov
pusha
sbb
pusha
mov
data16
data16
cmp
mov
sub
jo
andb
fisubrs
xchg
jnp
inc
add
arpl
imul
rcl
cltd
addb
stos
loopne
lret
mov
shl
loopne
lea
shlb
testl
nop
jnp
pop
scas
addb
pop
fisttpl
addb
sub
xchg
sbb
adc
cmpsl
sub
pop
and
add
loopne
push
jg
xor
and
xor
add
lret
xlat
dec
fisubrl
add
add
and
loopne
fmull
jl
mov
add
pop
test
jno
mov
and
jno
mov
jp
andb
loopne
enter
fildll
xchg
dec
clc
rcll
fwait
out
adc
lds
mov
add
jb
add
or
scas
pusha
loopne
out
add
pop
fwait
fs
jge
pusha
orb
rcr
pop
pop
ficoms
jl
insb
sbb
and
sarb
pop
imul
sahf
repz
inc
pusha
mov
mov
mov
dec
pop
incl
std
xor
mov
ret
push
pop
sub
and
adcl
shl
or
jno
sub
mov
andb
pop
xchg
pushf
aam
adc
push
pop
in
sub
jo
rorb
xchg
or
pop
es
sbb
xor
sub
popf
sbbl
pusha
inc
xchg
mov
xchg
mov
outsb
test
inc
or
loopne
rol
int
shl
inc
dec
pop
add
and
cmpsb
shlb
aaa
clc
ror
fcomps
sbb
loopne
nop
add
cwtl
dec
mov
movsl
ret
xor
cli
cs
add
fldl2t
outsl
jo
cmp
mov
lds
insb
and
andb
rolb
inc
push
mov
rcrl
mov
loop
scas
andb
or
out
jne
lods
shlb
repz
pusha
pusha
ss
inc
loopne
mov
pusha
aad
pop
sahf
and
shlb
in
xor
xchg
fisubrl
sbb
cmp
shll
or
and
pusha
inc
xchg
adc
or
mov
loopne
lcall
fnstenv
hlt
adc
fmulp
sub
sub
sbb
cmp
iret
imul
push
cmp
scas
andb
add
add
cmp
lahf
mov
loopne
repnz
push
add
sub
adcb
push
mov
loopne
xchg
cltd
or
addl
adc
pop
repnz
daa
cmpsb
and
push
adc
insl
ja
and
les
inc
jne
dec
dec
cmp
dec
xor
out
xchg
outsl
push
repnz
in
call
add
loopne
dec
shrl
dec
clc
shlb
jp
push
inc
rclb
push
dec
jno
data16
fs
pop
outsb
inc
jmp
outsl
cmp
sbb
jge
sub
lods
inc
shrb
mov
subb
xchg
or
and
mov
pushf
xchg
lea
mov
js
sbb
jecxz
loopne
fs
and
jo
shlb
cs
inc
into
ss
in
add
mov
add
jnp
loopne
dec
jno
inc
cmp
imul
mov
in
lods
jecxz
sbb
pusha
and
push
add
add
or
mov
xor
mov
and
jno
xor
int
dec
or
sbb
sti
out
mov
xor
addr16
rolb
fwait
outsb
add
sbbb
or
and
add
mov
adc
andb
push
jmp
add
subb
adc
add
cmp
popl
mov
pop
xor
and
mov
es
mov
push
inc
adcb
mov
and
addb
inc
popf
jb
pop
pop
push
cmp
loopne
out
fcmovb
sarb
ljmp
lahf
fmull
jb
xchg
subb
sarb
std
cmpsl
push
movsl
mov
inc
mov
xor
idivl
dec
or
cld
scas
adc
sbb
mov
mov
insb
and
lcall
xor
pop
jg
pusha
inc
cmp
fcmovu
mov
and
mov
loope
mov
loopne
outsl
cmc
jnp
add
and
andb
pop
pop
jbe
mov
stc
mov
stos
loopne
inc
clc
adc
movsl
jp
and
add
fnsave
sub
shlb
xlat
out
pop
mov
pop
repz
and
xchg
nop
mov
ljmp
mov
stos
sbb
mov
dec
test
xchg
enter
dec
mov
inc
mov
push
mov
fidivrs
inc
mov
dec
enter
fcoml
jns
testl
movsb
inc
sarb
jae
mov
sub
inc
lods
and
loopne
js
mov
popa
sarl
call
add
je
mov
pop
xchg
xor
push
mov
std
cmp
emms
sub
inc
nop
aam
clc
mov
dec
mov
pop
sbb
fisttpll
add
es
mov
fsubrs
dec
sub
les
pusha
loopne
repz
rorb
mov
sti
aad
cmp
pop
dec
lods
xchg
mov
inc
testl
orl
imul
jno
pop
mov
or
cmpb
push
mov
fisubl
shrl
dec
xor
popf
sub
inc
and
xchg
or
cmp
loopne
int3
sub
inc
nop
in
push
je
add
enter
gs
fcoms
jo
pusha
subb
mov
sahf
adc
testb
bound
and
mov
or
jae
mov
pusha
in
aad
daa
mov
je
mov
jmp
adc
loop
inc
sbb
pop
es
addl
shrb
testb
orb
and
inc
and
js
les
fldz
pmaxsw
lea
inc
mov
std
rorl
and
mov
loopne
ret
pop
rol
pop
in
add
dec
inc
ds
mul
sbb
cmp
inc
and
arpl
jmp
and
xlat
push
dec
inc
fcmovb
jb
pop
dec
aam
and
pop
bswap
jle
outsl
pop
and
lcall
inc
loop
cmp
mov
pushf
lods
and
shrb
inc
jmp
and
pop
scas
cli
sbb
or
push
jae
push
bound
out
adc
pusha
inc
out
mov
cmp
out
pop
jnp
jb
mul
pop
inc
jmp
push
lea
mov
add
loopne
aaa
or
pusha
xor
xchg
pop
jnp
push
pop
cwtl
andb
sub
inc
addb
add
or
sbb
lods
dec
pop
cld
in
ret
popf
inc
push
jb
push
out
cmp
dec
and
ret
data16
insb
nop
aad
loopne
adc
fyl2x
sarl
mov
add
loopne
js
sub
inc
std
jo
mulb
and
xchg
push
cmp
ljmp
pusha
sarb
pusha
inc
inc
xchg
aaa
and
rclb
addb
mov
les
xlat
fisubl
addr16
sub
mov
sub
pusha
lock
sub
pop
ret
loopne
call
addb
fstps
test
hlt
subl
inc
mov
subb
lcall
sahf
inc
imul
inc
xchg
xchg
push
inc
and
les
repz
shlb
mov
mov
mov
loop
andb
notb
imul
dec
addb
jg
adc
xor
pop
mov
lret
ret
xchg
inc
jl
pop
xchg
mov
std
mov
loopne
mov
dec
jle
xchg
sbb
ss
pusha
inc
rclb
test
add
adc
pusha
mov
in
stos
cltd
aas
adcl
dec
jle
mov
orb
fcomp
inc
dec
xchg
mov
jbe
ja
jg
xchg
adc
push
push
xchg
xchg
pop
adc
mov
bound
mov
roll
jge
xchg
mov
mov
cmp
add
loopne
push
pop
ret
jge
scas
repz
aaa
xchg
inc
and
add
pop
add
lret
test
aam
scas
and
inc
push
shlb
shlb
mov
or
pusha
pop
ss
push
mov
adc
mov
outsl
out
rcr
pop
loop
sbb
adc
lods
push
les
add
fwait
push
and
shrb
inc
ljmp
inc
and
mov
cmp
outsb
mov
addb
adcb
in
addb
repnz
cli
faddl
mov
rolb
mov
cltd
cld
ss
sbb
xor
loop
mov
loopne
push
jnp
mov
fmul
clc
shrl
sbbb
int
and
loopne
arpl
inc
sub
xchg
push
rcrb
jle
pop
pop
fcmovb
or
push
and
inc
cmpsb
rolb
xchg
push
call
daa
mov
or
add
and
inc
inc
push
fnsave
add
xor
into
inc
ret
push
lds
andb
push
add
fisttpll
gs
les
aas
out
sbb
add
stos
shlb
fs
andb
xor
fisubs
inc
andb
in
es
adc
jb
loopne
dec
or
mov
and
add
and
jno
repnz
loopne,pn
mov
inc
and
jbe
loope
and
jg
adc
sub
rolb
lret
fsub
movsl
add
sub
push
cs
pusha
mov
ljmp
loopne
add
popa
loope
out
cmp
shlb
mov
leave
sahf
andb
movsl
aad
mov
mov
out
repz
ds
mov
das
push
xor
addr16
and
inc
rcr
mov
and
sub
add
inc
pusha
mov
xchg
adc
sar
loop
jo
xchg
adcl
adc
mov
pusha
fistpll
popf
outsb
jp
mov
rcrb
push
mov
xor
push
and
inc
xchg
push
addr16
mov
shl
adc
loopne
lcall
cwtl
les
push
and
and
xlat
mov
inc
cmp
shr
xchg
cmpsl
lret
sbb
or
icebp
iret
out
enter
pusha
test
pop
or
cmpb
pusha
enter
mov
jl
pusha
adcb
test
shrb
movsl
cmp
movsl
pop
jl
bound
cli
xchg
and
jb
call
pop
mov
lret
loopne
gs
jg
ret
jbe
push
rorl
inc
test
loopne
jbe
cmp
loopne
dec
orl
xchg
or
inc
pushf
nop
lcall
push
inc
pusha
push
push
fdivs
loopne
xchg
movsl
subl
pop
add
add
inc
jmp
rorb
push
add
sbb
sbb
cli
sbb
out
testb
pusha
fbstp
out
adc
pop
js
cmpsb
rolb
inc
les
iret
and
and
sarb
jge
shl
and
jge
inc
pusha
xchg
insb
aad
add
subb
std
dec
andl
cld
scas
inc
add
insl
mov
push
inc
add
pop
sub
adc
and
sbb
mov
push
inc
mov
add
pop
adc
and
dec
mov
sti
fwait
pop
push
rolb
fsub
clc
stos
ljmp
cli
fstpl
pusha
cltd
cmp
mov
loopne
mov
imul
clc
add
push
inc
inc
mov
sar
ljmp
dec
add
mov
and
loop
xchg
xchg
movsl
and
xchg
xor
adc
addb
sbb
add
xchg
subb
loopne
bound
in
cmp
or
imul
mov
sbb
adc
cmp
pop
cmpsb
loopne
and
add
shlb
mov
js
shl
repz
out
lock
xor
push
stc
and
push
shlb
and
cmc
setns
hlt
cli
push
stos
andb
int3
shlb
inc
xchg
imulb
bound
inc
mov
pop
mov
pushf
pop
sbb
and
sbb
xor
jne
xchg
xor
lds
or
loopne
rol
pusha
push
sbb
cmp
fisttpl
mov
stos
add
daa
or
notb
cmp
sub
inc
pop
jns
lahf
push
mov
add
js
clc
je
push
sbb
jns
fisubs
mov
mov
add
jns
popf
pop
jns
mov
int
outsb
push
inc
inc
mov
add
loopne
fs
push
mov
fwait
imul
or
inc
sub
add
rolb
mov
scas
add
fdivr
xchg
jecxz
stos
pusha
and
scas
mov
sbb
cwtl
add
push
loopne
push
cmc
mov
inc
dec
xor
add
sbb
mov
mov
xor
or
inc
inc
fstps
sbb
stc
fcompl
jle
jns
sarl
xchg
add
add
inc
sbb
dec
es
mov
jo
ja
jmp
stos
loopne
lea
sub
scas
test
inc
mov
dec
decl
push
shlb
cmc
ja
cltd
xchg
or
jmp
or
rcl
add
outsl
test
loopne
hlt
ljmp
and
loop
mov
cli
cmp
pop
inc
inc
jle
cmp
sub
mov
pop
jae
pusha
inc
pop
dec
movsl
inc
fcmovnbe
dec
call
or
push
inc
sbbb
mov
inc
inc
imul
cmp
cltd
adc
shlb
sarb
lods
add
outsl
lret
and
rcl
in
sbb
xor
xor
xor
fistl
jle
mov
imul
stos
pop
push
and
xorb
stc
lahf
arpl
xchg
mov
mov
lock
inc
push
adc
jno
sbb
lahf
hlt
movsb
pusha
pusha
add
mov
andb
and
xchg
mov
test
add
leave
stos
add
addb
les
jo
xor
call
jp
loopne
mov
cmp
mov
pusha
inc
gs
mov
test
popf
imul
push
into
cwtl
mov
or
sarb
push
add
or
clc
ss
adc
dec
dec
adc
rolb
in
fstpl
pop
int3
jle
dec
nop
int
fsubs
jecxz
outsl
idivb
mov
mov
lods
and
mov
pop
lahf
mov
out
pop
outsb
loop
add
mull
loope
loop
inc
or
mov
dec
xor
das
pop
dec
cmp
and
xor
lock
lret
lods
out
cltd
arpl
push
lret
imul
pop
cmpsl
mov
pusha
add
ffree
add
enter
test
ds
outsb
int
sub
cmp
andb
cmp
fldln2
lods
dec
and
jmp
xchg
loopne,pn
dec
inc
sbb
sub
shrb
iret
lcall
rcrl
lds
loopne
fnsave
ja
and
call
add
cmp
icebp
mov
testb
mov
or
rolb
into
push
and
sub
add
cmpsl
or
aad
add
into
cmp
mov
ret
sbb
cmpsl
pop
xchg
cmp
ss
aas
rorb
push
xchg
xchg
mov
adc
mull
into
fucom
inc
out
movsb
loopne
scas
cli
or
imul
add
imul
pop
sbb
xchg
cld
arpl
dec
pushf
fs
pop
or
add
pusha
mov
mov
test
int3
push
hlt
sub
cmp
and
movsb
inc
add
sub
out
pop
xchg
pop
xor
lcall
stos
imul
adc
cmpl
lret
cmp
loopne
lds
push
es
inc
sub
and
mov
inc
jp
or
mov
pusha
imul
add
insb
shll
push
xor
pop
mov
dec
aaa
iret
push
call
pop
mov
bound
jo
jo
and
dec
stos
xor
sarb
cmp
sub
pusha
push
add
lods
pop
inc
cltd
aaa
add
add
stc
mov
iret
jp
inc
pusha
icebp
push
loopne
sbb
jo
in
push
cltd
mov
cmpsl
jne
and
dec
jmp
adc
add
cmp
fsts
mov
adc
call
cmp
or
xorb
mov
jecxz
lea
cmpsb
shl
test
shrb
adc
rclb
fwait
outsb
and
fidivrl
or
rcrb
mov
add
inc
fucomp
call
sar
lods
pusha
and
inc
and
pusha
push
jae
inc
loopne,pn
jg
clc
ljmp
xchg
sbb
jns
jge
sub
and
mov
inc
mov
pop
stc
lods
and
cltd
and
loopne
sub
and
pop
dec
daa
cmp
hlt
test
mov
lods
loopne
repz
pop
mov
pusha
add
leave
aaa
dec
mov
add
ss
or
inc
mov
flds
nop
mov
or
cwtl
sub
and
andb
je
pop
cmp
pusha
add
lahf
jmp
and
add
loopne
daa
jl
je
pusha
pusha
mov
mov
mov
push
insb
lods
rolb
push
iret
jle
gs
clc
div
cmp
and
test
shlb
pushf
inc
test
rclb
inc
jne
xlat
push
bound
lret
sub
dec
fincstp
or
push
mov
inc
aaa
jmp
dec
inc
jnp
or
addl
bnd
test
push
add
mov
xchg
lds
adc
jnp
pushf
pop
sub
cmp
repz
scas
add
mov
push
lea
cmpsb
rolb
in
xor
and
out
stos
and
mov
xchg
mov
push
imul
pop
lds
dec
ret
and
sub
fwait
lret
addr16
sub
mov
pop
xor
jno
out
push
jecxz
shlb
push
xor
add
and
add
push
loop
cltd
jne
stos
mov
push
xchg
mov
xchg
jmp
loopne
int3
sbb
rcl
cmpsb
add
xchg
mov
rol
or
lock
and
fucomip
xchg
cli
adc
sub
loopne
add
xchg
pop
repnz
std
out
adc
push
add
and
loop
ficoml
push
and
je
cmpsb
add
ljmp
and
xorb
xlat
andb
loop
sub
inc
dec
cmp
inc
adc
fmuls
and
std
out
cltd
outsb
fsub
jo
fistpl
lock
popa
add
and
dec
int3
jge
adc
gs
lock
mov
inc
mov
push
mov
cwtl
lret
inc
outsl
scas
daa
fstpt
fsub
js
rorb
inc
fcoms
pop
sbb
std
adc
cmp
outsb
aas
cmpsb
mov
add
loopne
fs
jle
mov
push
pop
pop
fwait
aam
loopne
fwait
loopne
jb
mov
ljmp
or
and
inc
cwtl
sbb
pusha
add
cld
xor
fistl
cmp
xor
push
stc
sbb
sub
inc
sbb
push
xchg
fwait
sbb
fidivs
rcrb
and
jl
rcl
ljmp
inc
in
imul
push
cmc
sbb
cld
jecxz
cmp
jp
cmpl
popa
xchg
cltd
push
sbb
stos
sub
aas
je
adc
sub
test
fmull
inc
call
imul
jbe
mov
loopne
mov
mov
shrl
andb
sbb
into
mov
pusha
loopne
xchg
mov
push
inc
clc
aaa
inc
sub
and
cld
decb
imul
xchg
push
inc
cmpb
and
call
jg
mov
outsb
gs
lret
pop
mov
mov
ret
sbb
shrb
cwtl
addr16
arpl
stos
mov
addb
cmc
pop
cltd
lret
imul
inc
jno
mov
popa
jmp
pavgb
inc
pop
dec
and
mov
jns
icebp
fsubr
mov
pusha
loopne
jle
add
jp
pop
les
mov
mov
cli
jno
rolb
pusha
jp
ret
andb
sbb
sub
mov
add
adc
test
mov
mov
shr
cltd
movsl
das
imul
xor
lret
adc
std
pop
pop
movsl
movsl
jmp
ja
sub
jle
add
scas
sub
ret
fstpt
mov
in
and
pop
jnp
popf
cld
mov
mov
push
dec
mov
hlt
pop
xor
mov
mov
jne
push
xchg
and
pusha
andl
mov
pop
jbe
sets
fldt
dec
shlb
push
sub
xchg
mov
inc
push
push
cmp
scas
cli
mov
loopne,pn
leave
jbe
xchg
xchg
pop
jmp
jle
loop
rolb
rclb
xor
ret
or
std
push
add
pusha
cmpsl
mov
add
rol
pop
push
je
stos
push
push
pushf
mov
and
addb
mov
add
add
xor
mov
test
add
mov
leave
jo
decl
jne
outsl
and
add
dec
test
sub
fsubl
pop
jle
pusha
loopne
je
out
dec
or
mov
outsb
add
mov
or
sbb
icebp
cmc
incl
shlb
pop
xor
loopne
jmp
scas
inc
inc
addb
xor
push
enter
cmp
pusha
mov
mov
pop
cld
out
cmp
aam
mov
inc
loop
imul
rcll
add
int3
xor
and
and
pusha
in
aas
fsubl
inc
pusha
push
add
jmp
and
inc
jbe
repnz
loopne
jecxz
iret
push
xchg
addl
and
lds
aad
push
mov
add
andb
iret
cmpsl
sahf
je
sti
sbb
rolb
inc
rclb
rcl
repnz
psrlq
push
push
mov
scas
pop
xchg
mov
orl
sbb
push
xchg
stc
and
mov
scas
loopne
or
mov
dec
inc
outsb
mov
das
xchg
addr16
addb
pop
fxch
fs
push
cvtps2pi
inc
push
xor
adc
pusha
adcb
fidivl
test
dec
out
jb
and
xchg
push
mov
loopne
add
loopne
push
add
mov
pop
pusha
popf
cmp
adc
mov
and
and
jns
sub
shrb
or
mov
aaa
repz
mov
and
orb
add
lcall
imulb
and
jle
inc
fimull
xor
mov
pop
pop
mov
and
pusha
inc
filds
pop
xchg
lret
sti
mov
cmp
jp
dec
cltd
or
fnsetpm(287
repz
iret
or
and
xchg
pop
in
ret
pop
fcmovnbe
or
pusha
hlt
sbb
mov
adc
xchg
pushl
add
and
aas
lret
loopne
mov
and
inc
jno
shlb
jnp
lods
movsb
inc
loopne
cmp
mov
xor
inc
pop
jp
lret
sub
pusha
sub
in
sti
dec
add
pusha
pop
adc
movsl
out
lea
pusha
rcr
and
addb
or
inc
jge
lret
lret
loop
push
rolb
cld
cld
cmp
or
and
stos
inc
adcb
shlb
dec
sub
mov
jl
lods
outsl
fmull
loopne
inc
rcrb
loope
fcompl
mov
in
daa
fucomi
lods
addb
lret
pusha
cmp
rcr
mov
lcall
add
inc
sahf
pop
jno
pusha
rcr
test
mov
sbb
mov
pop
lea
sub
shl
mov
cli
int3
dec
mov
add
loopne
sub
xorb
push
mov
stc
xor
sbb
add
ja
lcall
jo
sti
out
jl
data16
outsl
addr16
add
jg
jne
pusha
pusha
andb
and
in
or
js
dec
add
shlb
adc
xchg
mov
sub
inc
mov
out
mov
and
dec
jmp
mov
popa
loop
inc
les
rolb
add
shlb
mov
mov
add
imul
ljmp
lret
mov
icebp
pop
add
fidivrl
and
add
stc
sub
sub
loopne
subl
push
xor
sarl
iret
sub
add
pop
xchg
test
out
push
mov
xor
pop
dec
adc
pmaxsw
loopne
push
mov
fcom
push
movsb
inc
and
jns
loopne
dec
cmpsl
aam
fistpll
lret
rorl
pop
clc
enter
addb
fcmovne
lods
dec
sbb
loopne
into
scas
popf
mov
int
inc
add
jmp
out
or
mov
ds
stc
insb
jnp
mov
inc
in
cmpsl
sub
and
aad
push
out
xor
sbb
loopne
loop
in
shlb
pop
pop
rcr
push
xchg
xchg
addb
xlat
sbb
inc
and
shl
lret
dec
inc
jmp
out
stos
loopne
cmpsb
pusha
rcr
sub
or
rclb
mov
rclb
xchg
xchg
dec
pushf
mov
addb
xchg
inc
jmp
into
cs
inc
andb
add
mov
push
fstps
inc
rclb
ret
xlat
and
jecxz
sbb
shlb
std
sbb
pusha
in
into
add
js
arpl
outsl
insl
andb
ss
scas
adc
test
popf
scas
loopne
jmp
orb
adc
mov
inc
fsubl
ljmp
loopne
js
mov
mov
mov
ficoms
sbb
mov
ficoml
pusha
and
or
das
push
fwait
fwait
xor
jge
imul
jp
call
and
shlb
pusha
cmp
lock
pusha
scas
loopne
xor
xchg
jp
bnd
fs
insl
inc
mov
add
cmp
or
cmpb
loop
push
mov
movsb
addb
mov
loope
push
inc
icebp
ljmp
jecxz
push
sbb
inc
mov
sub
insb
hlt
mov
shr
push
rolb
and
jno
mov
and
mov
sahf
xor
mov
in
add
sub
loopne
or
cmpsl
sub
sub
dec
push
mov
cmp
out
and
insl
mov
loopne
xchg
xchg
mov
cli
pop
shrb
push
addb
movsl
add
jecxz
fbstp
cltd
fs
inc
stc
xchg
xchg
dec
mov
and
pushf
pusha
xchg
dec
jp
loop
rclb
add
and
arpl
jne
push
mov
test
jns
mov
shrb
fcompl
inc
push
addb
lcall
xor
xor
cld
scas
scas
rol
add
sbb
and
inc
insl
test
loope
test
inc
rcll
loopne
fnstsw
push
add
and
jno
cmp
add
subb
dec
push
push
imul
ret
fadds
addr16
push
int3
xor
push
and
inc
push
cmc
out
test
je
fdivrl
mov
mov
xlat
xchg
lds
mov
shrb
loopne
mov
addr16
shlb
shlb
add
daa
adc
test
test
loopne
xchg
shll
and
rorb
and
mov
shlb
sbb
scas
mov
shlb
lahf
add
adc
ds
out
mov
mov
pop
xchg
or
loopne
inc
enter
sub
aam
cwtl
cmp
loopne
jno
scas
mov
add
or
mov
adc
sahf
sbb
mov
adc
sub
jb
into
xlat
addb
add
pusha
lahf
fistl
loop
cmp
inc
pop
push
mov
cmp
inc
pusha
loop
shlb
adc
cmpsl
fcoml
dec
dec
cmp
cmp
mov
les
es
add
xor
pop
jb
lock
lahf
sbb
inc
adc
aas
in
mov
and
push
lea
insb
bound
jns
sbb
out
rcrb
popa
xchg
xchg
pop
push
aaa
push
cmpsb
loopne
in
inc
lret
mov
jecxz
and
frstor
addb
push
fldenv
and
add
cmp
push
pop
inc
mov
inc
and
loopne
rorl
xorb
rcr
shlb
jle
es
mov
mov
mov
mov
inc
sbb
mov
int
pusha
add
aam
add
dec
stos
les
mov
and
xchg
outsb
clc
jb
addb
mov
pusha
add
das
pusha
mov
inc
icebp
inc
imul
aas
adc
test
inc
subb
and
jae
rclb
adc
loopne
sbb
movsb
shlb
loopne
adcl
xchg
imul
orl
xor
shl
lcall
pop
ret
and
adc
sub
sbbb
popf
fmuls
xorb
push
mov
or
add
inc
cmp
sub
add
lods
pusha
mov
mov
jge
add
loopne
jne
cmp
repnz
rcr
lahf
test
pusha
arpl
lahf
push
bnd
dec
inc
push
stos
fs
das
push
add
mov
cmc
repz
mov
pusha
pushl
mov
pop
pushl
jg
dec
shl
sub
inc
test
into
cmp
aam
notb
fstpt
mov
or
loop
rol
jne
sbb
rcrl
push
push
outsl
adc
push
xor
in
cmpsb
pusha
and
pop
jg
loopne,pn
ret
push
push
add
cmp
cmp
iret
movsl
mov
mov
inc
jp
adc
xlat
mov
loopne
mov
scas
fwait
mov
mov
pusha
pusha
xchg
inc
cwtl
imul
mov
push
mov
add
cmp
loopne
push
add
into
mov
pusha
inc
pop
push
data16
dec
push
scas
andb
out
xchg
inc
fwait
jno
imul
in
jbe
jecxz
rcrb
jmp
in
mov
adc
roll
push
dec
mov
pop
lcall
xor
loop
inc
hlt
int3
add
loopne
stos
je
mov
lret
imul
test
inc
shlb
loopne
pop
dec
out
mov
jle
fnsave
jecxz
add
mov
push
mov
outsl
or
and
stos
stc
ret
inc
cmpsl
jmp
mov
sub
scas
sbb
test
mov
in
jnp
adc
jp
andb
mull
sbb
inc
in
lods
inc
movsl
adc
aas
jbe
in
or
call
mov
dec
or
pusha
cwtl
fs
inc
sbb
add
test
add
mov
arpl
inc
pusha
pop
mov
enter
inc
sub
loopne
mov
and
insl
xchg
mov
sub
pushf
lcall
cs
add
inc
adcb
and
pmullw
mov
insl
sbb
mov
loopne
out
sub
or
pusha
and
sbb
addl
in
ret
arpl
jns
xchg
mov
enter
xchg
cmp
dec
pop
loopne
xor
jmp
outsl
ret
add
pusha
out
push
pop
insl
and
shlb
add
cmp
and
mov
and
enter
mov
lahf
iret
inc
scas
push
in
jp
pusha
inc
loop
sarl
fildl
ds
and
daa
add
and
mov
add
sahf
sahf
les
push
and
cmpb
mov
loopne
je
fcoml
adc
das
jmp
xor
andb
or
pop
ds
cmpsl
stos
push
cmp
cld
cmc
into
aad
insb
xor
pusha
mov
das
inc
inc
pop
lahf
fcmovu
lret
shlb
mov
cmp
push
pusha
and
jp
cmp
pop
js
inc
popa
popa
negl
loopne
fsubrs
rclb
cmp
shlb
ja
in
loope
pop
inc
or
inc
mull
and
xchg
pusha
jb
jb
addb
mov
out
stos
mov
mov
inc
call
les
jl
add
push
stc
cmpl
loopne
mov
add
xchg
test
and
loopne
xchg
dec
lahf
jl
mov
shr
and
mov
push
icebp
stc
inc
test
shlb
push
int3
cmp
cs
mov
outsb
les
mov
daa
out
lea
lods
or
sahf
cmpsb
loopne
dec
jae
and
mov
and
ficompl
cmpsl
and
rclb
or
testb
adcb
push
add
mov
pusha
sbb
int
shll
mov
add
mov
inc
mov
and
out
rorl
push
stc
leave
fsts
lahf
jmp
jg
pop
aam
cvtpi2ps
or
andl
inc
and
loopne
outsl
mov
xchg
pop
arpl
fidivrl
add
inc
stc
mov
imul
mov
lods
mov
icebp
mov
fs
ficomps
scas
push
add
int3
mov
cmpsl
rorl
add
add
jne
cmp
pusha
add
orb
xor
les
fwait
into
movb
ficomps
push
bound
push
stos
lcall
mov
xor
push
mov
mov
add
adc
leave
mov
ljmp
jp
addb
mov
cmpsl
or
and
mov
mov
pusha
xchg
add
cmp
loopne
out
or
inc
xchg
mov
idivb
inc
push
aad
push
pop
in
and
sahf
pop
aaa
imul
andb
cld
and
leave
stos
rol
arpl
sbbl
fsubl
andb
cmp
loopne
mov
sbb
dec
loope
clc
jne
shll
xchg
add
and
fnstenv
insl
jns
scas
loopne
shrl
push
imul
mov
xchg
fisubs
into
sub
das
and
inc
les
and
pusha
mov
shlb
jne
in
outsl
inc
mov
inc
dec
lods
adc
and
lock
and
movsl
jo
push
push
mov
dec
je
js
dec
mov
mov
jb
mov
mov
mov
inc
mov
push
xor
lahf
js
xchg
add
imul
and
stos
inc
clc
mov
cmc
stos
xchg
inc
mov
sub
repnz
sti
js
cld
xchg
in
fcmovb
shrl
xchg
add
adcb
and
mov
mov
call
xlat
aam
mov
shlb
inc
jae
and
mov
pop
out
test
pusha
loope
adc
sbb
popa
push
test
pop
cmc
ja
or
pusha
xchg
pop
test
rclb
pop
insl
push
push
loopne
mov
and
xchg
sbb
sub
mov
sbb
aaa
bound
in
cmpsb
rolb
sub
inc
mov
ds
sbb
leave
mov
xchg
enter
pusha
loopne
outsl
sti
shr
aaa
cmp
lahf
ret
rolb
and
inc
push
jp
sub
and
cs
and
fnstenv
out
mov
and
mov
lock
adc
shlb
and
shll
dec
and
shrb
lods
in
stos
and
jbe
lahf
dec
stos
call
push
sub
add
movsb
and
ss
movsl
push
ret
sub
fcmovnb
pop
aaa
movsb
pusha
mov
jl
pusha
inc
call
and
call
push
fisubl
shlb
mov
push
inc
mov
lahf
jecxz
cmp
push
rcl
andb
mov
pushf
scas
movsb
pusha
mov
fnstsw
mov
clc
into
out
adc
stos
xchg
sbb
add
sub
dec
movsl
lods
and
std
movsb
inc
inc
dec
jae
iret
mov
xor
mulb
jne
mov
dec
aaa
clc
adc
dec
mov
jns
mov
scas
and
mov
and
cli
test
mov
loopne
pusha
inc
in
sbb
sub
loopne
dec
mov
mov
nop
loop
cmpsl
pop
mov
andb
ret
rcrl
jae
inc
and
test
add
aad
mov
pop
jo
inc
test
enter
cltd
sub
mov
stc
mov
pop
adc
adc
enter
arpl
inc
mov
push
das
pop
mov
rclb
pusha
pushf
cld
hlt
rclb
iret
and
add
mov
dec
test
rolb
mov
sar
sub
add
loopne
adc
sub
mov
shlb
add
push
loop
mov
cltd
or
fs
push
add
add
rol
lret
xchg
add
out
lcall
pusha
loopne
insl
xchg
loopne
leave
jl
enter
sti
adc
cmc
inc
cmpsl
or
orb
pusha
addb
add
jmp
inc
in
dec
jns
add
fsub
rorb
sbb
add
mov
jae
addr16
stos
test
outsb
orl
mov
mov
shrb
loop
and
lods
aas
and
add
mov
pop
xor
push
jbe
into
adc
mov
cmp
sub
bound
mov
lock
repz
pusha
add
add
add
dec
xor
movsl
pusha
sbb
or
add
mov
jne
and
popf
mov
mov
stos
xor
loopne
rep
pusha
loopne
pop
ss
inc
xchg
shlb
and
stos
push
mov
les
mov
rol
push
and
jne
cmp
movsl
cmp
das
push
addb
cmc
aad
push
push
cmpsb
mov
sub
dec
pop
dec
test
shrb
fists
mov
nop
push
insb
add
rcr
mov
add
inc
add
mov
push
push
push
push
scas
sub
shlb
jge
add
push
jnp
lret
pop
es
and
inc
pop
fcoms
xchg
lds
add
and
cmp
cld
mov
out
call
pop
cld
imul
mov
dec
cmc
mov
mull
add
into
subl
loopne
or
notb
loopne
inc
mov
cs
inc
ja
jae
and
mov
fwait
jne
out
sub
inc
sahf
loope
icebp
and
aam
mov
adcl
loopne
push
pusha
and
es
mov
or
and
push
scas
andb
mov
shlb
fcom
in
sub
add
in
ret
les
sbb
sub
push
in
mov
mov
add
dec
mov
ja
in
jae
cmpsb
add
xor
shlb
andb
inc
sub
add
insb
aam
pop
dec
mov
or
pusha
dec
loopne
or
or
loopne
add
shlb
fidivrl
sarl
insl
in
pop
scas
xchg
ja
adc
and
mov
cmp
addb
sbb
inc
cld
mov
adc
mov
pusha
mov
pusha
inc
xchg
jle
jne
inc
mov
shll
cwtl
aas
mov
pusha
jp
sti
movl
pusha
add
adc
leave
out
fcomi
rep
js
mov
jmp
insl
and
fbstp
and
aam
and
cli
pop
cwtl
add
inc
test
shlb
mov
ja
in
pop
mov
mov
js
movsl
pop
insl
add
inc
enter
jbe
outsb
jp
mov
pusha
and
push
inc
sahf
lea
dec
in
loopne
insb
nop
loopne
test
loopne
adc
inc
testl
cmpsb
mov
jo
sahf
xchg
out
dec
data16
mov
xor
andb
lahf
push
pusha
add
dec
popa
jmp
pop
mov
xchg
pop
mov
aas
lods
pushl
enter
inc
lds
xbegin
inc
xchg
je
inc
adc
xor
mov
test
sbb
and
pusha
inc
loop
mov
sub
inc
add
sub
xchg
mov
inc
jno
and
mov
push
push
pusha
rcl
add
add
and
mov
jbe
mov
or
lock
and
mov
mov
rorl
rcrb
and
xor
xchg
bound
inc
call
push
jno
sbb
and
mov
out
addr16
leave
stos
mov
xor
shl
mov
pusha
jne
mov
inc
pop
and
shlb
adc
out
clc
int
or
clc
dec
test
cli
int3
xlat
cmp
sub
pusha
sub
xchg
arpl
addb
cmpb
rolb
loopne
idivl
mov
sbb
xor
add
daa
repz
imul
addb
cmp
xor
add
inc
fcoms
fwait
mov
test
fsubr
lds
outsl
adc
icebp
popa
mov
popa
sbb
jbe
fldl
cmp
mov
pop
cmpsl
jb
pop
test
and
add
inc
dec
xor
and
jp
jl
xchg
adc
lret
pusha
das
adc
shl
cmp
lods
mov
xor
and
push
cs
inc
rorl
pusha
mov
pop
in
sbb
pop
inc
push
loopne,pn
hlt
sti
xor
push
scas
test
pusha
mov
ljmp
cmp
and
push
cmp
inc
mov
cld
mov
mov
mov
out
into
push
ret
mov
add
addb
mov
jne
outsl
sub
mov
loopne
cli
lea
xchg
inc
mov
and
dec
insl
xchg
jb
cli
pop
sub
add
lcall
mov
sti
add
scas
andb
and
lds
mov
dec
xor
outsl
aad
sbb
imul
leave
clc
xchg
gs
imul
and
xchg
clc
or
repnz
xchg
dec
jbe
shlb
call
mov
ljmp
or
rolb
mov
and
or
loopne
or
dec
cmp
dec
mov
add
mov
add
shlb
add
jns
and
in
xchg
pop
pop
cmp
dec
push
in
insb
pushf
nop
aam
inc
rolb
sarb
pop
ljmp
rolb
mov
iret
shr
mov
and
inc
lock
add
xor
mov
icebp
test
add
and
push
into
lods
add
and
mov
mov
cmp
push
mov
scas
push
inc
mov
cltd
out
add
aaa
pusha
rcrl
and
stc
xchg
add
xchg
int
dec
data16
rolb
mov
shrb
loopne
inc
rclb
rorb
xchg
sub
add
loopne
add
lahf
lret
incl
and
push
push
les
icebp
movsl
aad
xor
andb
rcl
lret
loop
jp
clc
sub
scas
add
adc
lods
cmpsb
mov
iret
pop
or
subb
jne
in
fists
xchg
and
lods
add
ficomps
and
pusha
cli
push
inc
dec
rorl
push
xor
in
out
insb
push
testb
and
or
inc
push
xor
in
push
sbb
inc
dec
mov
mov
rorb
outsl
xlat
adc
push
and
outsl
cmpl
les
adc
pop
into
fchs
and
inc
xor
and
movb
rorb
and
cmp
fxtract
xchg
push
pop
popf
movsl
sbb
or
or
mov
sbb
xor
sahf
test
loopne
js
or
mov
shl
push
ret
inc
xor
movsl
cmp
or
js
loope
inc
imull
inc
jb
gs
les
call
ficoml
pop
jnp
or
add
or
xchg
jno
js
aad
imul
loopne
sub
icebp
pop
jmp
mov
andb
add
loopne
mov
xorl
sbb
jmp
or
sarb
mov
addr16
xor
xor
aam
mov
jbe
push
pop
repz
pusha
cmpsl
call
aas
xchg
sbb
mov
loopne,pn
push
cmp
addb
repz
inc
mov
dec
sub
pusha
sarl
mov
pop
out
push
or
sbb
scas
daa
notl
adc
loopne
in
iret
jno
or
rorb
fisubl
and
scas
mov
arpl
scas
add
mov
jbe
xor
out
movsb
inc
mov
scas
loopne
and
push
popa
mov
loopne
mov
and
decb
xchg
pop
nop
mov
out
std
rorl
pushf
fisubrs
and
pusha
pop
jns
inc
aas
popf
aam
mov
sbb
cmp
ds
outsl
out
arpl
pop
stc
ror
mov
shlb
push
in
sub
js
push
addb
and
shl
mov
pusha
adc
mov
mov
or
and
lods
pusha
add
popf
into
push
sbb
mov
inc
mov
into
dec
daa
insl
addb
cltd
sbb
outsb
sbb
jle
jae
and
cmpsb
andb
stos
dec
data16
iret
xchg
xchg
sub
pusha
and
rolb
mov
adc
jp
loopne
repz
dec
pop
bound
inc
mov
cltd
dec
test
and
rorb
lahf
adc
mov
pusha
add
clc
lea
jbe
rcrb
add
and
push
stos
and
mov
mov
aam
nop
je
lret
mov
mov
cmp
jle
insb
sbb
ss
imul
sbb
out
mov
inc
mov
push
adc
add
iret
mov
cmc
lods
inc
shrb
popf
sar
cs
and
sarb
and
mov
call
mov
jmp
and
adc
lret
and
int3
dec
dec
gs
sbb
add
inc
ucomiss
pop
jp
inc
fcoml
xlat
sub
ror
das
add
or
aad
sbb
mov
aam
cmp
push
mov
shll
stc
add
jb
cmpsb
add
rclb
sbb
dec
push
test
mov
loopne
stos
stos
addb
lds
mov
or
aas
pop
inc
in
jbe
push
inc
int3
xchg
idivl
sbb
xchg
mov
addb
xlat
dec
cltd
pusha
xchg
xchg
loopne
gs
loope
mov
addb
es
adcb
and
not
into
aad
inc
or
add
xchg
sarb
sbb
push
xchg
or
lahf
add
rcrb
xor
out
jecxz
push
add
or
cmp
shl
mov
rcrb
lods
faddl
insl
pop
lea
and
and
inc
in
rorb
cld
mov
push
popl
add
fidivrl
sbb
mov
inc
push
sub
cltd
cmp
shlb
aas
or
jle
addl
pushf
add
add
adc
mov
lods
and
rolb
fwait
mov
out
mov
lods
mov
mov
and
mov
mov
pusha
mov
xor
xchg
inc
cld
mov
inc
and
inc
fdivs
push
or
adc
sub
inc
inc
fcomi
and
pusha
cmp
or
cmp
push
inc
aad
out
xchg
and
loopne
outsl
cmp
add
xor
shl
pop
xor
mov
sub
add
andb
hlt
stc
frstor
shlb
inc
and
pop
mov
sbb
test
sbb
mov
fbstp
push
mov
jmp
jmp
sbb
dec
ljmp
int
xor
pusha
iret
mov
inc
subb
loopne
jno
mov
add
mov
add
push
mov
pusha
pop
leave
pop
mov
push
cmp
fstpl
cwtl
add
pop
rolb
pop
and
andb
je
inc
xor
rolb
out
push
roll
movsb
mov
std
lods
jl
mov
cmpsb
loopne
pushf
xor
repz
or
mov
mov
les
dec
xchg
push
xlat
push
insb
loop
jp
dec
mov
shlb
adc
inc
jecxz
test
clc
pop
hlt
or
cs
mov
out
mov
push
fldt
dec
test
xor
addr16
push
enter
shrb
inc
mov
loopne
mov
jae
and
out
adc
enter
fnstsw
inc
inc
and
cltd
leave
scas
ror
jo
mov
sub
and
jecxz
and
inc
fwait
movsb
pusha
pusha
mov
loopne
rcrb
ljmp
pop
push
or
movsb
shlb
sbb
loop
mov
dec
int3
xchg
cmp
mov
or
std
popf
mov
loopne
xor
inc
add
andb
mov
repz
nop
insb
rcrl
out
mov
iret
shl
js
ficoms
xchg
fdivs
jp
lods
shlb
xor
xchg
xchg
xlat
lods
dec
iret
stos
and
addb
or
sbb
cmp
aad
sub
pusha
xor
jmp
add
jle
pop
lds
ljmp
adc
and
loope
into
sbb
mov
mov
lea
xchg
sub
lret
aad
rolb
out
jb
xlat
clc
ret
mov
pusha
pusha
dec
test
xor
xchg
fstl
push
lahf
int
pop
cmp
iret
mov
dec
jle
jp
inc
push
jns
ds
or
lock
dec
in
inc
sub
inc
rcr
xchg
repnz
jmp
sbbb
add
add
loopne
imul
mov
dec
shlb
div
sahf
mov
scas
inc
in
add
arpl
enter
insb
mulb
and
jne
cmp
xchg
test
mov
clc
leave
cmp
mov
xorps
aad
call
in
jnp
popa
jnp
rorb
dec
xchg
or
pop
adc
and
and
stos
clc
and
inc
mov
add
inc
movl
lret
mov
cmp
pop
insb
fwait
clc
outsb
sbb
daa
mov
mov
push
mov
ja
pusha
add
aad
xor
xor
loopne
das
lock
dec
jbe
sub
enter
or
dec
sub
pusha
add
jle
mov
add
mov
outsb
xor
int
aas
pushf
jge
leave
mov
andb
mov
add
data16
adc
rol
inc
stos
pusha
add
add
cli
mov
xchg
popf
ret
je
dec
mov
cmc
xchg
push
mov
xchg
and
lea
cli
inc
loope
xchg
je
pushf
outsb
pushf
lahf
adc
lds
push
jns
shll
fcoms
fcos
mov
cmp
iret
cmp
inc
jno
andb
pusha
cmpsb
mov
and
cmp
add
ror
fcmovbe
das
jno
pusha
rolb
shll
or
or
loopne
fstps
push
pusha
mov
add
sub
shrb
leave
test
loopne
cld
fldcw
jmp
mov
fucomi
cmp
mov
loopne
jnp
sbb
jb
push
loopne
xor
cmp
add
jbe
inc
cmovno
pop
stos
loopne
push
mov
fstps
sbbl
addb
bound
enter
mov
nop
jp
inc
push
pop
in
jbe
sbb
inc
test
ret
popf
test
loopne
out
sbb
popf
adc
dec
lods
loopne
xlat
test
pusha
out
daa
adc
rcr
scas
pusha
or
add
add
adc
shll
mov
dec
xor
je
pop
xchg
loope
and
outsb
jae
push
cmp
mov
jmp
sarb
fwait
fs
lret
cs
orb
and
mov
rolb
xor
lea
ret
in
xlat
push
inc
fs
jg
jne
jno
insb
xorps
andb
mull
inc
pusha
ret
and
pop
dec
imul
mov
rolb
inc
out
push
or
outsb
jmp
dec
aad
cld
lret
nop
movsl
jmp
sub
insl
repz
movsl
jnp
out
popa
xor
or
iret
cmp
int
push
pop
dec
push
lock
jns
out
ljmp
xor
add
stc
mov
inc
iret
loopne
imul
sbb
addb
add
add
or
and
and
sbb
mov
mov
mov
faddl
cwtl
and
rcrb
mov
into
ss
pop
shll
sarb
sub
xchg
and
rolb
add
fs
sub
roll
int3
jmp
rolb
fs
and
push
ds
cmc
push
test
add
pop
cwtl
jmp
fst
mov
sbb
fwait
ja
mov
pusha
shlb
aad
xor
and
pushf
or
add
loopne
pop
and
mov
lahf
jle
fcom
aam
xchg
add
jnp
xor
imul
adc
mov
push
jns
xor
loop
dec
jnp
nop
and
mov
leave
cli
add
inc
leave
jno
test
cmp
push
add
addb
sbb
mov
shl
movsl
push
aad
jecxz
in
sbb
jnp
and
stc
stos
bound
pop
xchg
jae
leave
out
add
jbe
lret
jne
jns
or
cmpsb
mov
shr
ja
jae
stos
addb
adc
fsts
add
inc
cmp
lods
add
test
inc
adc
insl
push
xor
das
sti
mov
jge
or
inc
or
andb
mov
lahf
cmp
inc
loopne
pusha
pusha
xor
add
aas
rolb
and
lret
iret
xchg
add
jmp
rcll
dec
addb
add
dec
outsb
frstor
das
add
pop
xor
rclb
and
in
pop
data16
loopne
inc
push
push
ljmp
aad
xchg
sub
pop
ds
and
dec
jg
loop
add
les
mov
and
adc
xchg
insb
ljmp
fists
mov
cltd
test
mov
mov
movsl
divl
dec
jmp
movsb
add
jns
mov
leave
pop
call
and
xor
xchg
inc
loop
rolb
loop
scas
cmc
hlt
jp
mov
dec
mov
enter
inc
and
out
sbb
mov
fisubrl
mov
jge
test
pusha
shrl
pusha
or
and
fstpl
cmp
mov
loopne
mov
sub
fld
adc
mov
out
mov
cmp
addb
fwait
cltd
hlt
inc
rcrl
or
int3
xor
cmp
add
cmc
adc
pusha
stos
and
pop
jbe
mov
gs
cmc
int3
xchg
mov
ror
xor
addb
and
pop
cmovle
inc
pusha
popl
xor
xchg
mov
popa
popa
jbe
stos
push
addr16
sub
pusha
push
xlat
sub
nop
gs
je
out
pop
jns
stos
mov
rolb
addb
sub
loopne
xchg
stc
fdivp
xchg
sbb
xchg
jmp
and
imull
insl
call
dec
mov
jl
xor
std
iret
xchg
and
mov
mov
and
stos
and
mov
sbbb
add
xor
lcall
loope
imul
fidivl
pop
and
and
fdivp
jno
pusha
andb
movsb
add
mov
mov
mov
mov
xor
lds
mov
loopne
sub
les
sub
pusha
mov
rolb
jb
in
fmuls
sub
inc
negl
mov
pusha
inc
aaa
test
add
cld
cltd
xchg
mov
andb
push
pushf
push
andb
faddp
lock
pop
push
addb
cmp
stos
xchg
cmp
fdivs
inc
ror
stos
loopne
andb
aaa
xchg
lods
lea
and
ljmp
sbb
ret
push
je
andb
lea
mov
push
pusha
add
andb
fucom
xchg
mull
addb
mov
pop
sub
pop
in
add
in
mov
in
fdivr
imul
dec
ljmp
mov
aam
jmp
or
loopne
or
orb
in
insl
xchg
xor
xchg
insb
sub
mov
scas
inc
mov
jmp
push
mov
inc
and
adcb
jge
lahf
sbb
mov
insl
cli
adc
or
add
loopne
test
add
push
push
mov
in
call
cmp
cmp
pop
pop
mov
ret
and
cs
inc
movsl
andb
rolb
mov
and
add
jae
and
popa
popf
addl
popl
cmp
rcrb
and
add
loopne
rorb
daa
mov
fmuls
addb
inc
pusha
cwtl
jp
cmp
je
lret
fcoml
add
inc
shlb
mov
xchg
mov
in
pop
out
cmp
cmp
lret
cmp
and
rcrb
inc
rclb
pop
idivl
std
mov
or
mov
and
lahf
dec
and
je
bound
lahf
jp
mov
add
nop
rcll
movsl
mov
pop
mov
inc
imul
mov
insl
dec
cld
xor
add
lea
testl
xchg
inc
pop
movsb
mov
sarb
jo
inc
and
decl
rorb
sbb
fstpt
shr
aad
cltd
loop,pt
mov
rol
sbb
and
out
mov
pusha
push
repnz
cmpb
cmp
cli
cmp
int3
or
mov
mov
pop
stos
loop
subl
inc
cmp
hlt
addb
add
pop
shrl
cmpsl
mov
in
cmp
mov
rclb
mov
outsb
pop
mov
jle
andb
imul
mov
mov
pusha
inc
push
nop
lds
pusha
dec
rorb
xchg
add
and
nop
arpl
insl
jge
and
sub
sbb
stc
pop
cmp
inc
adc
out
mov
inc
inc
xlat
loop
scas
and
movsl
jns
sub
xchg
loopne
dec
cmp
xchg
ret
dec
fwait
pusha
hlt
pushf
sub
rorb
lret
or
adc
popl
in
mov
and
or
add
scas
cmpsb
addb
or
sbb
adc
mov
mov
ror
lret
sub
aam
add
cwtl
je
movsl
mov
clc
mov
cmp
add
pop
xchg
inc
jne
loopne
push
cmp
mov
mov
in
pop
ds
pop
mov
cwtl
out
jnp
sub
push
xchg
data16
fistl
cmp
mov
inc
jno
jnp
lea
xchg
cltd
mov
aad
ja
clc
popf
sub
pusha
mov
movsb
add
insl
jo
sub
cmp
mov
and
jae
out
inc
rcrb
nop
ficoms
push
inc
notb
inc
cmp
movsb
mov
xorb
shl
ds
pusha
mov
add
shlb
mov
pop
inc
insb
popa
jecxz
repz
cmp
inc
lahf
mov
leave
mov
movsl
fldt
or
loopne
aas
leave
pop
add
into
dec
jns
test
sbb
mov
lcall
pop
mov
sbb
lret
movsb
add
push
pop
stc
fidivs
shrb
inc
mov
aas
sti
or
dec
cld
lock
mov
aaa
lock
popa
sbb
jmp
mov
mov
add
andl
sub
imul
inc
sub
arpl
inc
xchg
mov
and
insl
jne
mov
and
jns
jge
and
inc
sbb
repnz
sbbb
js
xor
shll
add
rolb
movsb
and
and
mov
roll
push
inc
inc
inc
sbb
std
xlat
adc
addb
mov
fcmovnb
mov
nop
repz
popl
inc
pop
test
mov
xchg
ljmp
and
mov
fucom
or
push
popa
pop
dec
into
sti
cmp
mov
in
out
jo
cmp
lods
pusha
inc
add
push
push
add
and
xor
pop
packsswb
or
mov
pop
std
out
sub
pushf
ss
adc
ret
pusha
inc
xchg
jge
and
sti
insl
or
ja
lret
scas
loope
push
cmp
fucomp
adc
shlb
rol
testl
jecxz
push
aam
pop
mov
push
loopne
nop
sti
sub
in
xor
mov
pusha
gs
aaa
inc
daa
cmp
and
stos
inc
insb
cmp
lahf
jmp
inc
adcb
jmp
sahf
cmpsl
lods
pusha
sub
xor
movsb
and
xchg
popa
sub
xor
inc
popf
popf
fwait
aam
popa
stos
cmp
mov
daa
test
pop
je
je
mov
vpsubw
push
inc
rcl
xchg
cmc
xchg
adc
adc
addb
inc
enter
loopne
sub
add
rolb
jno
dec
sti
pop
fmull
je
int3
sahf
or
and
repnz
test
sahf
pushf
jbe
aas
ds
sub
pop
jle
sahf
jbe
movsb
pusha
loopne
xlat
fmuls
add
decb
dec
push
clc
add
jp
ret
adc
sahf
inc
pop
add
ss
out
cmp
rol
xchg
faddl
rolb
sbb
mov
cmp
push
movsl
leave
les
add
dec
call
dec
outsb
mov
push
loopne
andb
mov
mov
loopne
adc
pusha
int3
cwtl
xchg
stos
cmp
jg
sub
cmp
mov
and
lock
inc
fdivrl
push
dec
daa
out
mov
ds
fisubrl
int3
aas
xor
aaa
arpl
mov
adc
popf
pop
adc
mov
jo
sub
loopne
nop
sub
faddl
cmp
loopne
adc
rolb
stc
sbb
in
fwait
inc
testl
hlt
shr
add
and
flds
pusha
out
inc
popa
pop
pop
pop
cmp
loopne,pn
lret
add
mov
pusha
mov
push
mov
pusha
add
pusha
je
jmp
jge
ja
sub
xchg
insb
mov
insl
lcall
call
xchg
push
add
cmp
xrelease
jecxz
jp
out
jecxz
out
mov
hlt
mov
ja
push
insb
adc
xor
mov
xchg
cmp
mov
and
pop
mov
xor
data16
mov
pop
aam
or
cmpb
ret
mov
les
test
push
and
loope
sub
push
popa
inc
pop
adc
mov
mov
jp
pusha
shlb
fmuls
jne
and
mov
inc
mov
addb
adcb
fistpl
add
loopne
xchg
push
and
loopne
ficompl
adc
dec
into
insb
fldt
cli
xchg
fsubrp
lods
and
and
xor
push
inc
xorb
popa
mov
stc
add
rclb
idiv
loop
pusha
aam
add
add
pusha
xorl
loopne
movsb
shl
rcrl
adc
mov
inc
rorb
xchg
in
enterw
lods
inc
adc
ljmp
xchg
fwait
mov
repz
into
fidivrs
sub
mov
mov
jno
shlb
addr16
rolb
push
mov
addb
cltd
cmp
push
sub
bound
lods
pusha
pusha
outsl
jo
mov
lahf
shrb
out
jns
mov
jl
dec
scas
mov
arpl
mov
jo
ds
inc
loope
xchg
push
xor
clc
addr16
pusha
ror
push
addb
dec
or
fistpl
dec
popa
pop
mov
xchg
shrb
js
out
mov
dec
mov
mov
rclb
inc
insb
sub
and
mov
mov
repz
mov
jae
sbb
std
push
cmp
int3
and
rolb
or
loopne
imul
inc
lods
push
loopne
test
sti
push
mov
loopne
cmpsl
xor
xchg
push
movsl
inc
add
inc
jb
adc
out
mov
mov
arpl
jp
add
add
sti
in
dec
int3
into
push
ret
jecxz
push
pusha
sbb
xlat
pop
xorl
lret
inc
jbe
pusha
add
cmp
pusha
pusha
or
loopne
imul
and
clc
fdivrl
mov
or
rcrb
jne
js
inc
or
subb
orb
inc
incl
inc
add
cltd
dec
xchg
movsl
push
jle
dec
aam
mov
add
pusha
rcrb
mov
mov
add
push
pop
sub
loopne
dec
jb
pushf
cmp
push
xchg
mov
loopne
ret
and
mov
jp
ret
addb
mov
adc
and
aam
loopne
or
sahf
std
scas
test
xchg
mov
rcr
movsl
fsts
enter
lods
jmp
rolb
leave
mov
mov
push
fdiv
sub
xchg
mov
push
and
xchg
dec
and
pop
lods
cmp
cwtl
inc
dec
push
push
popa
and
cmpsl
mov
mov
pusha
pusha
push
test
mov
mov
sub
add
repz
jno
cmpxchg8b
pop
cmp
sti
lods
jl
js
adc
fstl
aam
mov
shl
and
mov
outsb
leave
dec
andb
lods
pusha
loopne
mov
lcall
aas
subl
rolb
push
inc
mov
sub
pusha
loopne
addr16
ja
jae
in
push
add
outsb
mov
fnstsw
mov
dec
sarb
cwtl
rcll
loopne
cmp
movsl
sbb
cltd
mov
mov
aas
jp
jnp
pusha
jae
mov
jge
jno
inc
push
dec
dec
push
adc
stc
ljmp
test
adc
and
add
mov
jnp
cmp
sub
pusha
add
in
out
fcomps
lods
addb
mov
and
sbb
enter
mov
loopne
addb
ffreep
and
int3
in
int
hlt
int3
sbb
inc
fimuls
loopne
scas
and
popf
cs
adcb
into
inc
test
inc
call
in
jge
mov
push
rolb
pop
jb
push
add
cmpb
loopne
and
dec
pop
or
loopne
sub
sub
cmp
and
fsubl
ljmp
inc
and
ljmp
int
ljmp
push
pusha
pusha
mov
fcomps
mov
repz
lret
test
xchg
xlat
mov
inc
imul
addb
rcrb
push
inc
add
push
adc
cmpl
cwtl
rorl
sub
pop
add
je
mov
and
mov
lret
dec
push
lods
addb
mov
mov
jno
cli
fyl2x
sub
inc
xchg
xchg
jge
add
rolb
andl
clc
lret
cltd
sbb
cli
mov
in
pop
cmp
frstor
xchg
js
js
pop
jecxz
arpl
or
pusha
jp
mov
fidivrs
aad
or
push
mov
into
les
cld
outsl
mov
pusha
loopne
lods
movsl
jecxz
add
cmpsb
and
pusha
xor
sub
loopne
push
push
mov
fcomi
pop
pop
jns
dec
fptan
rorb
mov
push
daa
cmp
dec
lahf
mov
inc
shlb
icebp
daa
jmp
repnz
add
and
and
loopne
and
cmp
pop
mov
xlat
out
and
repz
repz
pop
push
sbb
repnz
cmp
pusha
inc
ret
or
jg
push
and
push
xchg
xor
icebp
repnz
adcl
repz
gs
data16
jecxz
faddl
add
ret
sub
push
push
fnsave
and
addb
mov
mov
mov
xchg
cli
loop
jmp
fs
sbb
and
cmp
lahf
ret
cld
push
rcll
rcll
ret
cmp
out
pusha
pusha
xchg
iret
imul
test
lods
inc
cmp
retw
mov
pusha
loopne
push
push
pusha
loopne
fs
sbb
mov
jo
lret
rcr
xchg
aam
cmpsb
rolb
cmc
or
add
add
imul
pusha
add
push
addb
iret
popa
xchg
imul
and
xlat
mov
dec
shr
xlat
sub
movsl
jae
rcl
jg
imul
mov
test
inc
sahf
mov
jae
movsb
pusha
add
aaa
repz
inc
and
pusha
sub
and
pop
sub
mov
sbb
jmp
jnp
sbb
into
jle
push
add
and
addb
call
loopne
nop
dec
fists
or
push
andb
adc
inc
jno
pusha
and
bound
jle
dec
dec
adc
movsb
add
cltd
stos
sub
and
das
insl
out
das
shll
push
inc
inc
faddp
dec
fbld
mov
add
icebp
jnp
ds
adc
stos
sbbl
mov
mov
rcll
mov
pop
sahf
call
or
pusha
sub
les
adc
and
mov
test
and
enter
fcom
rcrl
and
lahf
fldl
cld
or
pop
mov
jge
rolb
rorl
mov
xor
imul
data16
pop
xor
lret
add
add
pop
mov
mov
out
pop
fisubrs
xchg
xchg
adc
aad
mov
rorb
xor
xor
loopne
ds
sarb
scas
cmp
and
sub
imul
out
cmp
ror
js
jge
and
mov
add
sub
into
cmp
nop
orl
insl
xlat
les
sbb
xchg
loope
or
xor
lock
icebp
jne
shl
lea
mov
or
add
cmpb
into
bound
mov
xor
mov
rolb
and
and
push
add
lds
dec
xchg
cmp
pusha
mov
sbb
add
mov
pusha
repz
lds
add
dec
fcomps
call
adc
dec
mov
loopne
inc
bound
jge
fwait
push
arpl
jge
inc
jle
loopne
ljmp
stc
dec
js
fcmovnb
add
xchg
mov
dec
xor
mov
mov
xor
pop
jno
out
mov
inc
pop
cwtl
or
sarb
dec
lds
lret
lods
push
xor
shrb
jp
nop
add
inc
mov
call
ljmp
ret
or
xor
mov
jle
dec
jg
add
fsubrp
aam
push
fdivr
xchg
pop
dec
repz
cmpsl
mov
and
rol
lret
test
add
add
test
and
fsincos
out
dec
std
and
add
loopne
leave
out
arpl
mov
inc
shrb
pusha
inc
pop
ror
push
mov
mov
pusha
pusha
je
cmp
mov
pusha
loopne
jg
sub
insb
adc
loopne
xlat
mov
mov
xchg
mov
pop
mov
xor
shl
in
xor
jnp
and
xlat
push
pushf
cmp
cltd
push
push
aas
leave
mov
aad
mov
inc
inc
xor
cmpsl
icebp
dec
mov
add
jne
add
push
mov
lods
addb
clc
cmp
cld
cmpsl
loopne
imul
mov
mov
inc
in
dec
push
push
add
add
iret
lret
jl
jnp
or
data16
push
hlt
mov
mov
mov
cmovae
adc
push
addb
add
adc
pop
rcrb
ljmp
cltd
ficompl
mov
das
xchg
cltd
jb
dec
pop
arpl
loopne
mov
shlb
loopne
inc
pusha
jl
mov
push
pop
lock
adc
jbe
scas
pusha
loopne
mov
jnp
inc
fbld
aaa
sub
loopne
add
das
shl
mov
sbb
inc
sbbb
addb
mov
pusha
jne
mov
sbb
pop
cltd
jp
push
test
add
mov
pusha
mov
or
cltd
push
add
in
shlb
cltd
inc
addb
mov
and
sbb
fidivrs
and
mov
cmovne
ljmp
imul
jbe
push
sbb
outsb
xchg
jle
and
imul
fmull
int
sub
inc
rclb
xchg
add
mov
out
sub
loopne
stc
loopne
ror
or
adc
mov
mov
inc
dec
pop
lcall
andb
loopne
cmp
imul
lahf
mov
mov
popf
push
mov
sarb
mov
push
andb
cs
inc
push
enter
stos
rolb
mov
jle
push
and
inc
loopne
insb
icebp
outsb
jge
or
rcl
lea
out
loop
insb
out
mov
stos
andb
pop
lcall
cltd
add
pop
lds
push
adc
ja
je
push
add
jo
push
std
fs
push
leave
push
cltd
push
and
inc
aad
das
and
out
loope
jl
mov
mov
xchg
cmp
push
daa
xchg
js
aas
mov
cmpb
enter
insl
leave
imul
push
pusha
add
and
cmp
lcall
clc
sbb
sbb
andb
jae
loopne
ja
pusha
sub
dec
hlt
repz
les
mov
pop
sbb
mov
ret
adc
mov
orl
sbb
push
loopne
loope
aaa
jo
sub
orb
sbb
add
jae
jge
mov
inc
je
xor
cmp
cmp
shll
fcmovnu
jns
js
dec
stc
and
int
mov
pop
dec
push
mov
notb
push
shrl
inc
pusha
adc
mov
mov
mov
inc
jge
inc
fidivrs
mov
and
xor
out
ljmp
inc
call
and
cld
push
stc
jns
pusha
mov
mov
xchg
push
cmpsl
in
xor
enter
sub
mov
fadd
sbb
and
mov
pusha
sub
cmpsb
shlb
sbb
sub
test
pusha
loopne
xchg
jno
shlb
frstor
add
ret
jb
xchg
repnz
test
std
out
push
lods
and
mov
add
and
fidivs
std
fisubs
mov
inc
mov
xchg
sub
xor
inc
jae
test
pusha
sbb
movsb
shlb
inc
repnz
pushf
jp
je
add
shlb
and
add
arpl
and
mov
xchg
loop
dec
or
mov
sti
fnstcw
push
xor
add
add
xchg
push
push
sub
and
and
cmpsl
jno
mov
inc
jne
mov
dec
xchg
scas
pusha
pusha
mov
aaa
sub
pusha
cmp
dec
clc
mov
dec
pop
out
adc
xlat
ljmp
fisubl
mov
cwtl
mov
jmp
pushf
mov
add
adc
test
sub
inc
stc
loop
xchg
sbb
jl
cmp
imul
adc
hlt
cwtl
cmp
mov
inc
mov
mov
test
xor
and
loopne
rcrl
and
mov
inc
inc
loopne
xacquire
sub
ret
es
and
push
ljmp
and
pop
int3
cmova
or
shlb
dec
cmpsl
cmc
cs
and
outsb
iret
div
data16
xchg
imul
mov
fmulp
mov
mov
mov
mov
pusha
mov
test
jmp
mov
inc
xlat
js
sub
shlb
xor
jg
insl
or
pop
mov
pusha
dec
sti
inc
flds
pusha
scas
ljmp
cmovnp
inc
sub
loopne
xor
and
xor
add
into
jb
inc
ljmp
loopne
xor
add
jmp
scas
push
add
in
xchg
cmpl
pop
test
push
pop
pop
ja
xchg
pop
loope
xor
push
and
inc
call
ljmp
loope
dec
idiv
jno
movsl
shlb
and
and
lahf
lea
lret
mov
and
mov
add
shll
imul
mov
and
xor
jae
cmpsl
cmpsl
or
loopne
ss
adc
shll
and
rclb
sbb
add
popl
pusha
and
lods
dec
push
inc
mov
pop
pop
sbb
xchg
push
leave
into
jmp
les
scas
loopne
push
fisubrs
jp
and
cli
pop
mov
fistpl
mov
repz
rol
bound
and
inc
popf
pop
dec
jae
out
mov
pop
cmp
outsb
mov
pop
push
mov
stc
andb
test
add
std
jmp
andb
aam
pop
pop
inc
pop
push
dec
and
add
jbe
xchg
xor
pop
jns
xor
cltd
and
ret
add
fsubrp
jmp
mov
pop
mov
and
jecxz
les
loopne
lea
sbb
mov
inc
outsl
cwtl
cmpsl
out
sbb
add
and
cmp
sub
loopne
test
andb
add
and
cmpsl
jl
test
fldl
mov
imul
decb
mov
aaa
adc
lahf
cmp
and
xchg
es
ret
mov
pusha
adc
dec
clc
add
mov
mov
mov
addb
jle
mov
ss
in
andb
cld
mull
mov
add
mov
jo
add
cmpsb
pusha
and
inc
and
inc
and
inc
imul
pusha
bound
and
jo
stc
cltd
sbb
push
mov
mov
adc
jl
inc
xchg
cmp
mov
imul
jge
mov
dec
dec
inc
inc
mov
add
loope
lret
add
fdivs
pop
dec
mov
or
or
inc
dec
daa
xor
mov
xor
mov
mov
dec
outsl
out
pop
test
loopne
sar
in
in
mov
pop
movsb
pusha
and
frstor
jo
into
cmc
lret
xchg
sbb
je
in
jl
mov
inc
loope
fldcw
test
inc
cmp
fcmovnu
and
mov
sbb
lcall
adc
loop
mov
or
ficoms
cltd
test
add
fiaddl
add
push
jge
lcall
xchg
pop
or
mov
cmp
loopne
mov
sbb
jno
pop
mov
fwait
mov
xchg
bound
cmp
sahf
test
jno
xchg
and
mov
je
dec
shll
pop
mov
outsb
loop
imul
lahf
adc
popf
dec
rorl
push
fs
push
push
mov
mov
scas
rolb
xchg
div
cmpsl
jo
cmp
jp
iret
and
mov
dec
aaa
xchg
pop
sbb
mov
sub
test
pushf
pop
adc
cli
gs
stc
out
enter
mov
inc
dec
ret
pop
jecxz
jp
loop
js
and
scas
xchg
ds
mov
mov
inc
mov
pusha
shrb
sbb
aas
decb
insb
orl
and
pop
popf
mov
andb
loopne,pn
shlb
fcmovb
lret
jae
movsb
loopne
lret
add
mov
add
xorb
std
push
jecxz
fnstcw
shlb
test
push
sarl
inc
lea
and
xchg
xchg
popa
mov
or
fidivl
or
cmp
mov
scas
mov
add
mov
cmp
imul
mov
andb
ret
lock
jl
addb
mov
mov
dec
adc
or
and
push
xorl
ret
sbb
mov
movsl
or
in
cmpsl
xchg
push
cmp
xchg
int3
insb
xchg
movsl
mov
lock
sbbl
fldcw
or
mov
test
sub
and
cltd
xor
pop
push
es
sbbb
push
rol
pop
jge
jb
add
fcom
adc
xlat
ja
add
add
sub
lock
inc
xor
mov
add
mov
fsub
add
in
mov
sbb
aas
mov
add
nop
out
addr16
adc
adc
push
cmpl
movsb
inc
mov
lret
pop
mov
and
and
pusha
das
and
ror
addb
pusha
loopne
or
mov
mov
inc
loopne
mov
jno
ret
loopne
jno
jae
hlt
mov
pop
dec
fwait
mov
add
mov
loop
sti
loope
iret
add
pop
pop
out
add
inc
rcrl
rcrl
movsl
and
dec
jo
cli
pop
xor
mov
inc
addb
inc
mov
xchg
mov
shlb
inc
push
xorl
repnz
repz
cmc
cmpsl
shlb
add
inc
push
adc
cmpsb
pusha
pusha
xchg
or
ds
and
jge
rorb
inc
andb
inc
sbbb
and
inc
xchg
push
mov
in
cmp
jae
movsl
lcall
andb
loopne
or
insb
gs
pusha
cmc
xor
mov
mov
mul
idiv
iret
pop
jmp
imul
xchg
hlt
js
andb
pop
and
jge
add
or
push
mov
out
movb
shl
push
sub
add
and
xchg
shlb
mov
add
pop
test
sbb
bound
pusha
pop
enter
loopne
or
aaa
sub
or
ljmp
push
push
scas
push
das
orl
pusha
and
and
add
sbb
jg
sub
and
frstors
mov
mov
fwait
ja
je
lods
addb
ficomps
pop
mov
and
jbe
popa
pop
jmp
and
sub
cs
rolb
push
mov
loopne
call
insb
xchg
lret
mov
lcall
mov
sub
repnz
pusha
mov
and
rolb
mov
adc
andb
loopne
add
mov
cmp
or
loopne
jbe
pusha
xor
cltd
add
push
sub
fsubs
cwtl
xchg
sbb
pusha
add
adc
or
andb
stos
adc
ds
cmpsl
cmp
shlb
outsl
pop
hlt
sahf
insb
mov
xor
or
lret
imul
out
and
imull
out
or
inc
xor
bound
loopne
fisttpll
in
inc
mov
and
movsl
nop
xor
shr
scas
rolb
push
inc
int
loopne
imul
jno
mov
push
ss
iret
jbe
pop
fimull
jno
and
sahf
into
jg
and
cmpsl
data16
add
shlb
jno
js
sbb
dec
pusha
xor
iret
outsb
push
call
sbb
jl
add
popf
mov
jno
mov
inc
inc
mov
aad
sbb
mov
out
xorl
pop
lods
and
and
rcr
mov
and
adcb
sbb
pop
cli
push
in
ljmp
lods
inc
dec
call
sbbb
xchg
in
jg
xchg
aam
addb
and
out
inc
mov
rolb
cltd
sbb
mov
imul
lods
loopne
mov
cs
inc
pop
pop
out
rcll
rclb
cmp
popa
adc
sbb
xor
into
jne
fsub
mov
xchg
dec
sbb
dec
rorl
inc
cli
jmp
xor
pop
mov
pusha
aas
cmp
shlb
inc
pusha
imul
add
adc
outsl
mov
fbstp
icebp
mov
rcr
scas
fld
push
fstl
adc
add
xor
fcmove
pop
sbb
mov
mov
stos
pusha
rcrb
sub
and
mov
sub
pusha
jae
outsb
push
js
mov
xor
jg
xchg
sub
outsb
hlt
adc
push
lods
inc
add
add
insl
inc
jae
addb
gs
add
sub
and
loopne
jns
mov
in
and
inc
addb
rcll
and
rcl
inc
test
add
mov
dec
mov
lods
pusha
mov
shll
lea
addb
add
mov
add
cmp
add
jge
jb
in
mov
out
ds
shl
pusha
mov
pusha
mov
psubd
pusha
pusha
cmpsb
and
clc
inc
cld
mov
shl
mov
and
push
sahf
repnz
lret
dec
sub
mov
cmp
and
sarb
andb
loopne
inc
mov
mov
pusha
mov
jnp
pop
push
std
jae
loopne
mov
rolb
les
mov
loopne
scas
cmp
aam
add
dec
ret
add
shll
rolb
jmp
clc
pop
push
shl
jnp
cli
insl
pop
insb
xor
pop
mov
mov
push
ljmp
addb
inc
dec
and
xchg
iret
sbb
insb
pop
sbb
xor
repnz
mov
xchg
or
roll
dec
push
cltd
dec
add
xor
mov
rcr
mov
loope
sbb
lods
das
cli
js
pop
sub
dec
shll
enter
repnz
inc
xor
jbe
add
inc
xchg
and
xchg
lea
push
or
mov
fcompl
rep
add
mov
loopne
add
cli
jmp
sub
mov
cmp
test
jmp
add
dec
int3
add
add
jae
inc
mov
loope
xchg
mov
pop
inc
push
add
xchg
fwait
push
mov
roll
rolb
or
loopne
nop
imul
fisubl
sbb
jae
xor
inc
mov
hlt
adc
ds
pusha
rcrb
int
cmpsb
and
fbld
or
inc
add
sbb
push
dec
sbb
and
mov
les
in
xchg
pusha
pop
mov
xchg
push
mov
int
xchg
mov
push
sub
and
andb
add
and
icebp
cmp
popf
mov
je
sub
fisubs
pop
pusha
and
and
mov
inc
test
mov
pop
cmp
and
jbe
cli
push
popa
inc
xor
dec
pop
movsl
std
les
popf
aad
mov
inc
loop
repz
int
ljmp
fdivr
push
shl
mov
pusha
pop
rcr
cmc
sbb
repz
cld
or
jo
in
lods
pusha
loopne
popa
adc
mulb
mov
pusha
push
loopne
push
push
dec
and
ficoms
pusha
mov
dec
nop
fistl
cld
pmaddwd
pop
cmp
jle
dec
test
mov
inc
xor
pop
adc
sub
rclb
std
fistl
imul
sub
rcrb
gs
ret
mov
inc
mov
pop
cmc
mov
xlat
adc
and
ss
mov
sub
sbb
insl
jg
add
fcmovnb
lock
xlat
stos
shl
outsb
lret
andb
add
cmpsl
xchg
push
push
xlat
in
lods
outsl
cmc
push
test
nop
xchg
mov
call
andb
loopne
ljmp
cmp
test
insl
sub
mov
out
lret
andb
iret
aaa
add
aam
aam
and
inc
add
push
jno
and
loopne
jle
or
ja
aas
dec
scas
mov
cmp
lret
fisubs
in
mulb
adc
out
test
and
pusha
inc
test
sbb
and
popa
repnz
aaa
int
cmpsb
pusha
pusha
push
andb
adc
pushf
fidivl
addr16
adc
psrlw
repnz
pop
push
dec
clc
xor
pop
loopne
lcall
xchg
sub
repnz
jp
stos
sbb
xchg
inc
jne
inc
xor
and
andb
outsl
std
mov
mov
inc
std
jecxz
xchg
and
loopne
pop
inc
aas
popf
xorl
mov
mov
lock
mov
dec
pop
sbb
xor
insl
rep
add
xchg
mov
xchg
cmpsb
rolb
scas
loopne
rcrb
xchg
shlb
inc
icebp
pop
test
inc
sti
aaa
lea
add
aam
repnz
cld
arpl
lahf
int
jg
inc
push
inc
push
jl
and
cmc
adcl
decl
pusha
rcrb
add
mov
mov
loop
cs
inc
pop
lahf
mov
mov
repz
inc
in
fcoms
add
sub
and
pop
rcrb
cmp
sub
shlb
out
pop
data16
xorb
push
shlb
andb
loopne
ret
mov
loopne
mov
jg
and
shlb
jb
addb
pop
push
sub
inc
mov
xor
pop
shrl
add
jae
jl
mov
mov
adc
xorb
cmp
andb
mov
mov
and
lret
inc
enter
xor
mov
add
jl
loopne,pn
popf
cmp
or
cltd
fidivs
xchg
fists
loopne
je
xchg
jne
add
push
dec
lock
gs
jno
jle
and
add
cld
xor
sahf
inc
lret
in
lods
andb
mov
jge
jnp
lock
add
dec
mov
pusha
mov
mov
loopne
aad
mov
inc
jmp
push
adc
xchg
dec
mov
or
and
shl
lret
mov
and
cli
xor
dec
fisubrl
aam
and
inc
adc
mov
shlb
mov
cmp
mov
jl
xchg
aad
sub
mov
mov
mov
add
xlat
inc
push
clc
inc
pusha
popf
test
addps
sub
inc
lret
mov
and
mov
imul
scas
popa
imulb
xor
shlb
repz
pusha
clc
insl
pusha
div
adc
push
in
addb
int
and
das
xchg
push
cmp
loopne
test
fcoms
jo
jg
pop
dec
ret
incl
cmp
pop
pop
sub
cmpsl
clc
std
pop
unpckhps
mov
inc
jmp
ss
mov
push
dec
fwait
pop
pop
ljmp
mov
pusha
sti
inc
xchg
jecxz
scas
and
xor
adc
cmpsl
call
rorl
pop
rcll
ja
push
pop
mov
gs
mov
out
stos
and
mov
dec
imul
test
loop
popa
cmp
lods
inc
xorb
inc
fs
lcall
int
sub
push
and
inc
test
add
hlt
xchg
sub
andl
mov
cmpsb
shlb
push
and
push
jbe
aad
jle
add
inc
mov
cld
out
es
xorb
mov
pusha
mov
loopne
or
inc
or
cmp
mov
int
ds
add
add
shlb
mov
loopne
shrl
inc
and
add
mov
add
adc
adc
scas
and
push
pop
and
and
mov
mov
inc
sahf
mov
mov
jnp
or
and
add
inc
andb
inc
clc
dec
push
jo
addb
push
inc
mov
push
mov
push
jnp
mov
mov
and
cmpsl
xchg
ss
repz
add
add
mov
daa
sbb
mov
outsb
into
outsb
fnstenv
mov
cmpsl
xor
lret
lds
loopne
aas
stc
and
shll
or
sahf
sbb
sub
mov
pop
lcall
loopne
les
andb
mov
mull
pushf
imul
and
rep
and
inc
aam
sbb
jnp
xlat
sarb
int
dec
shlb
mov
add
aad
leave
sbb
or
mov
push
and
icebp
sarl
enter
and
inc
loopne
pop
lea
addr16
lcall
pop
jge
push
lret
add
rorb
loopne
xor
fs
mov
and
inc
xchg
and
clc
jg
push
sahf
pop
clc
lcall
pusha
mov
dec
test
outsl
leave
push
dec
and
and
push
movl
ljmp
lahf
ficomps
inc
gs
inc
add
sbb
mov
jb
add
pop
in
imul
out
ret
mov
in
jle
andb
xchg
jge
into
adc
mov
jne
mov
and
mov
xor
add
rclb
inc
xlat
test
and
repnz
cs
loopne
pushl
andb
ret
mov
and
and
movsb
inc
pusha
dec
mov
ja,pt
das
pop
xchg
xchg
jecxz
push
daa
pushf
lret
jae
or
andb
push
and
cmc
and
imul
bound
cmp
iret
pop
in
add
inc
scas
adc
mov
and
pop
cld
jmp
jle
int
pusha
shr
enter
sbb
in
inc
std
popf
stc
mull
insl
inc
test
cmpl
sub
add
inc
pusha
pushl
inc
shlb
dec
stc
or
jnp
push
and
js
rclb
loopne
pop
test
mov
loope
mov
fwait
shl
sub
addb
pusha
pusha
or
dec
mov
enter
xchg
and
and
add
adc
ss
add
leave
sub
inc
inc
imulb
add
in
test
stc
inc
jne
mov
mov
mov
call
inc
outsl
cmpsb
pusha
pusha
mov
call
xchg
ret
popa
aad
loopne
xlat
out
fs
dec
mov
inc
pusha
ds
and
mov
inc
pop
adc
hlt
cmp
pusha
or
mov
in
sbb
mov
inc
and
inc
loopne
xchg
sub
adcb
mov
pusha
add
dec
shl
and
rorl
rol
pop
mov
pop
fildl
xchg
and
fidivl
inc
adc
shl
add
loop
push
fwait
or
cmp
jl
or
ret
adcb
andb
fmuls
jl
scas
pusha
mov
or
cmpb
xlat
mov
rcrb
mov
xchg
jnp
add
shrl
shlb
mov
shrb
jae
jge
clc
movsb
mov
aas
mov
popf
sti
inc
xchg
imul
xchg
loopne
ret
or
loopne
repnz
pop
xor
pop
psubusb
inc
test
add
dec
ljmp
aad
and
shrl
loopne
inc
sbb
mov
or
roll
xchg
adc
xchg
xchg
and
mov
add
push
popa
jge
rorb
cmp
mov
add
xor
xlat
inc
pop
in
xchg
mov
jae
aaa
xchg
push
into
ds
add
push
cmc
lock
dec
ss
pop
mov
push
mov
data16
push
shlb
xor
mov
push
rolb
add
mov
push
lds
or
mov
add
sub
lods
loopne
daa
data16
mov
mov
shlb
nop
or
loopne
xchg
inc
jecxz
push
je
add
mov
adc
fcmovne
sbb
sub
inc
andb
adc
push
cmp
and
jmp
pusha
cwtl
mov
xor
pop
adc
std
mov
fstpt
ljmp
mov
xlat
sarb
mov
es
mov
mov
ljmp
dec
add
inc
dec
movsl
inc
mov
andb
mov
xchg
mov
nop
xchg
xchg
fs
ljmp
dec
and
pusha
and
mov
je
mov
aad
inc
sub
enter
sbb
add
ljmp
mov
cmp
mov
movsl
js
mov
and
push
loopne
or
pusha
jns
movsb
add
add
les
stos
xchg
add
mov
mov
outsl
adc
rolb
test
pusha
mov
scas
lea
stos
cmp
lods
add
test
pusha
dec
mov
inc
call
movsl
bound
cmpsl
jb
negb
aad
in
push
shrl
and
xchg
shrb
cmpsl
and
pusha
lods
xor
mov
push
shl
xchg
add
loopne
arpl
xor
xchg
mov
cmp
and
mov
sbb
imul
subb
fisubl
cmp
add
addb
shll
xchg
mov
pushf
inc
mov
cmp
cli
dec
sub
mov
inc
pavgb
push
enter
adc
and
inc
inc
out
sub
loopne
push
test
add
xor
and
dec
sbb
out
jae
shlb
test
mov
jb
sub
jmp
and
test
inc
mov
enter
adc
loopne
push
mov
xchg
jb
je
mov
loopne
es
into
imul
and
xchg
jge
jnp
sti
mov
adc
ss
cmp
repz
loopne
mov
xchg
mov
fisubs
into
fwait
pop
xor
adc
cmpsl
and
in
outsb
dec
jmp
push
jmp
fwait
insb
sarl
loopne
mov
hlt
ja
sbb
adc
sub
mov
push
hlt
lds
pop
fimull
aas
cvttps2pi
and
mov
mov
cmpsb
loopne
jbe
mov
sbb
aas
fstpt
in
jge
jmp
and
out
cmp
call
lock
shrb
push
aam
add
cmpsb
andb
rclb
and
lea
pusha
and
mov
cltd
scas
inc
add
fldcw
aam
loopne
outsl
dec
out
pop
lea
addb
ss
and
jl
mov
push
add
rcl
inc
hlt
fdivrs
sub
mov
and
adc
aam
pop
dec
icebp
out
and
mov
jp
das
in
in
rcl
pop
push
jne
adc
pop
xor
inc
mov
rolb
pop
lods
fs
addb
pop
sub
inc
popa
jmp
xor
xor
jae
jno
mov
loopne
mov
and
sti
fildl
stos
add
sti
fmuls
imul
sbb
js
call
mov
sbb
dec
mov
xor
inc
mov
cli
lea
jmp
add
jle
jmp
mov
cmpsb
pusha
mov
xchg
sti
fdiv
add
sarb
mov
mov
js
sub
shlb
xchg
cs
andb
in
scas
xor
pushf
xchg
aas
lock
pusha
fsubl
or
mov
jmp
call
jl
xor
and
inc
xor
ja
add
and
ja
enter
rol
out
andl
xchg
xlat
mov
xchg
cmp
pusha
pusha
repnz
call
and
adc
rolb
loopne
lret
pop
cmp
add
inc
aaa
fmul
mov
jno
pushf
lds
imulb
adc
mov
insl
mov
pusha
mov
add
shrb
cmp
ljmp
rclb
popf
mov
xor
and
loopne
iret
test
mov
inc
dec
cwtl
xchg
add
push
pop
mov
jae
pushf
jo
and
in
mov
shll
out
stc
mov
addb
and
sahf
sub
add
dec
scas
sub
out
push
andl
mov
in
cld
adc
addl
out
ljmp
xchg
notl
xor
lret
push
cmc
xchg
pop
cmp
and
and
pop
stc
push
test
add
push
notb
pop
jns
cli
jp
call
add
cltd
jae
loopne
movsl
push
pusha
inc
enter
aam
sub
je
pushf
fldenv
rcl
add
jne
pop
mov
stc
cmp
aad
outsl
or
pop
addr16
push
and
mov
pop
jmp
push
jns
clc
push
mov
es
test
add
enter
loopne
shlb
mov
sub
pusha
adc
pop
out
push
mov
in
sbb
xchg
roll
rolb
inc
pushf
dec
dec
jnp
and
pusha
loopne
xchg
mov
mov
jnp
sbb
movsl
mov
mov
sbb
add
adc
add
and
adc
sub
add
mov
rolb
add
imul
dec
cmp
adc
xchg
arpl
idivb
mov
mov
mov
mov
cld
inc
dec
xchg
ss
xorl
push
and
pusha
push
jo
andb
adc
cmp
mov
cltd
pop
push
inc
test
pop
in
mov
adc
pop
mov
and
ss
add
mov
outsl
lods
push
inc
in
xor
and
jae
in
jno
ret
std
push
pop
jns
mov
andb
pop
inc
dec
js
test
shrb
rcrl
int3
pop
jl
int
nop
cwtl
enter
xchg
xchg
rolb
test
mov
in
lret
dec
sub
jno
add
cmpsl
rcrl
sahf
pop
popa
mov
rcr
rolb
movl
fcomip
sub
add
pusha
dec
clc
pusha
jno
aaa
shl
and
add
add
outsb
sub
push
add
lret
add
fwait
xchg
sarb
out
test
loopne
push
addb
jbe
les
ljmp
shlb
shl
jl
repz
loopne
fisubrl
dec
ret
cmp
int3
lea
out
or
jo
fnstenv
add
inc
jge
leave
out
add
pminsw
loop
and
pusha
pop
xchg
push
js
ljmp
mov
jns
movsb
and
pop
mov
push
or
mov
and
xchg
or
stos
addb
xor
loopne
add
add
movsb
loopne
cld
insl
les
dec
pop
inc
movsb
add
add
xorb
out
jg
dec
mov
xchg
mov
insb
add
les
jge
and
mov
cmp
jecxz
andb
cmp
push
mov
daa
xchg
xchg
cli
pminsw
add
popf
jle
ret
and
loopne
pop
jmp
mov
mov
xchg
out
jnp
jg
or
xorb
call
mov
cwtl
mov
inc
mov
cmpsb
mov
cwtl
pop
sbb
sahf
aas
and
mov
add
sar
inc
dec
ja
out
and
loopne
and
inc
andb
loopne
and
mov
or
ja
dec
or
pusha
iret
push
enter
sbb
pusha
xorb
pop
imul
pusha
loopne
rolb
xchg
insb
push
jle
push
mov
jno
lahf
stos
andb
cltd
pop
addb
jbe
sti
cmp
comiss
mov
inc
ret
or
cmp
or
pusha
nop
in
aas
sbb
loopne
aam
aam
adc
mov
loopne
addb
and
sub
xchg
loopne
push
mov
shlb
and
inc
fcmovne
mov
popf
pop
pop
fxch
add
cmpsl
sbb
shr
jl
rol
fstpl
ret
lcall
popa
and
rol
push
pop
xor
jbe
ljmp
and
pusha
inc
or
and
sub
sub
inc
sbb
aad
pop
ror
pop
and
rclb
cltd
and
mov
sbb
cmp
add
and
push
pusha
lock
sarl
mov
xchg
xor
mov
mov
jno
xchg
pushf
adc
lcall
cmp
pop
stos
rolb
addb
scas
mov
dec
sbb
je
add
loopne
test
lret
dec
fiadds
and
ljmp
cli
clc
mov
add
addb
dec
test
or
sbb
movsl
sub
es
dec
pop
fidivl
enter
pop
mov
sti
lret
iret
clc
xor
and
mov
loopne
adc
in
push
push
xchg
stc
sbb
stos
loopne
scas
rcrl
mov
mov
js
popl
shl
fsubrl
icebp
jns
jne
rolb
repz
outsb
jmp
rol
scas
pusha
inc
jbe
int
mov
adc
adc
cwtl
daa
into
pop
cs
pusha
pop
xchg
mov
mov
lea
inc
addb
rcr
mov
adc
enter
fpatan
inc
sub
pop
jo
xlat
jl
mov
into
sub
and
shlb
fs
shlb
andb
xchg
ret
adc
jmp
dec
add
sbbb
cmpsl
add
mov
cwtl
or
mov
pop
adc
and
movl
add
outsb
je
and
loopne
push
fidivs
es
rolb
sbb
push
hlt
adc
leave
mov
stos
mov
jo
shl
jb
dec
ror
rclb
cmc
mov
dec
dec
scas
loopne
ss
push
pop
fsts
inc
add
add
stos
rolb
and
xor
sarb
jp
sub
mov
mov
cld
scas
inc
jp
mov
ret
and
pusha
xchg
sahf
jo
push
xchg
sub
fs
dec
cmpsl
nop
jl
lret
push
fcmovnbe
stos
shlb
mov
mov
xchg
cld
mov
or
adc
repz
cmovs
lea
jne
loopne
adcl
adc
and
ret
fldl2t
pop
mov
aas
je
mov
inc
jns
sahf
add
in
push
jne
xor
sbb
fisubrs
mov
jne
and
pop
out
insb
mov
pusha
xchg
mov
push
fwait
xor
out
mov
add
inc
aas
jmp
sbb
cmp
and
subb
loopne
jecxz
mov
iret
inc
mov
cmp
addr16
and
add
sub
shlb
mov
test
pusha
jle
addr16
lock
loopne
cld
es
cmp
add
push
dec
dec
or
mov
add
insb
dec
out
jp
sbb
lock
sbb
xchg
insl
jge
xorl
mov
enter
cmpb
cltd
push
mov
pushf
inc
fs
sbb
cmc
out
sub
mov
mov
sub
orb
cmpsb
pusha
inc
mov
fxch
push
es
add
inc
mov
aam
pop
or
and
mov
push
push
enter
andb
iret
pop
push
jb
lahf
jnp
pusha
mov
add
and
es
push
call
mov
inc
push
in
pop
and
and
addr16
clc
and
imul
ss
pusha
lods
shll
mov
xchg
imulw
lods
rolb
jmp
arpl
or
ret
pop
xor
inc
xor
enter
data16
fwait
pop
jno
xchg
push
pop
cli
lods
rolb
mov
clc
pop
out
mov
lcall
adc
adc
mov
mov
xchg
pop
xchg
loopne
pusha
dec
fidivs
mov
add
xacquire
arpl
shrl
and
std
dec
inc
popf
dec
cmp
jmp
dec
and
jae
fs
lds
cmc
pop
push
leave
enter
sub
jno
hlt
mov
mov
pusha
mov
cld
sti
or
cmpb
loope
in
jl
movsl
cmp
add
into
lods
add
sti
fdivp
into
xor
pop
push
nop
mov
xlat
popf
inc
mov
mov
addb
mov
mov
inc
push
pop
rclb
and
orb
or
xchg
leave
xchg
inc
les
xchg
sbb
jae
mov
popa
std
pop
sub
dec
mov
dec
in
jno
call
xchg
mov
je
in
test
mov
xchg
jecxz
rol
or
mov
and
sahf
in
mov
stc
inc
clc
outsl
add
je
jg
repnz
and
inc
jg
and
rol
dec
pop
mov
sub
testl
xlat
out
gs
add
add
ret
mov
addl
pop
fnstcw
and
scas
pusha
inc
fucomip
outsl
test
dec
icebp
fnstenv
xor
push
js
loop
dec
push
and
fdivp
pop
mov
es
inc
out
fwait
aas
inc
in
sub
dec
test
cmp
and
dec
xchg
pop
pop
outsl
xchg
sub
imul
add
aaa
mov
mov
movsl
jle
jnp
xor
fs
je
insb
sub
mov
addr16
dec
in
xchg
dec
inc
push
loopne
out
mov
imul
pusha
inc
or
pusha
lret
inc
inc
add
into
popf
fdivs
mov
rcrb
insb
call
sub
mov
add
scas
add
adc
jo
push
jno
test
pusha
call
jle
sbb
mov
push
dec
xchg
jbe
loopne
add
or
mov
mov
mov
fs
outsb
movsb
and
pop
dec
dec
in
push
repz
xor
add
dec
cmc
push
andb
pop
sub
mov
and
xor
and
lds
cltd
fstpl
sbb
mov
pop
outsb
xchg
lds
jecxz
fisubs
sbb
inc
xorb
out
repz
xchg
push
sub
jo
and
test
xchg
in
mov
mov
mov
inc
fucomp
addb
xor
addb
and
imul
stc
hlt
jno
sub
loopne
mov
orb
stc
aas
fndisi(8087
sub
and
jge
cmp
loop
add
aad
add
dec
cmp
stos
jo
loopne
xor
mov
add
mov
aaa
inc
outsb
fwait
add
mov
pushf
cmp
sbb
xor
sbb
mov
loopne
into
out
mov
lea
xchg
pop
mov
rolb
jmp
xor
clc
mov
enter
shll
and
mov
and
push
jno
add
and
push
flds
imul
ja
xor
inc
xchg
outsl
mov
sub
pusha
mov
push
insl
fwait
push
inc
inc
push
stos
rclb
push
ljmp
or
add
sbb
cltd
cmp
call
mov
mov
mov
jno
jg
inc
outsl
cmp
cmpsl
rclb
inc
pusha
sub
test
mov
scas
add
mov
push
xchg
or
arpl
mov
pusha
rclb
mov
add
lret
jp
jmp
cmp
add
push
dec
aad
fidivrs
sub
add
add
and
jmp
sub
sbb
sarl
dec
cld
xchg
incl
cwtl
mov
or
dec
ret
popa
push
pusha
lret
inc
in
cmp
and
rcl
shl
pop
pop
sbb
sbb
dec
mov
test
inc
nop
rclb
js
jbe
dec
orl
push
clc
inc
out
call
mov
mov
aad
adc
xor
int3
and
and
imul
das
sbb
out
js
nop
push
imul
or
loopne
popf
int
stos
addb
rcl
in
js
mov
or
and
pop
xchg
cli
sbb
loopne
mov
arpl
and
loopne
mov
daa
test
mov
movsb
and
and
add
push
add
push
enter
mov
inc
add
leave
rcl
mov
roll
xor
sbb
outsl
stos
outsb
ja
loopne
push
push
js
rol
inc
insb
stc
jmp
nop
addb
and
test
inc
mov
or
loopne
mov
addb
loopne
add
mov
lcall
xchg
pop
xchg
inc
xor
pop
into
xlat
fucom
sub
mov
pop
shlb
add
adc
bound
pusha
loopne
ja
sub
or
cld
ds
jno
dec
push
pop
or
add
rcrb
jle
adc
xor
push
push
xchg
cwtl
sub
and
std
lock
mov
lods
push
inc
mov
pop
sub
inc
lock
push
jle
sub
pusha
jp
lods
mov
test
cmpsb
andb
outsb
test
addb
cmpsl
mov
pusha
mov
jne
dec
sub
dec
and
and
leave
ds
enter
mov
push
push
gs
or
ret
pushf
adc
enter
jbe
add
add
jecxz
jbe
dec
inc
jecxz
cmpsb
and
lods
dec
gs
stc
test
and
iret
and
xchg
add
add
add
inc
mov
inc
jmp
rolb
addb
adc
dec
cmp
cwtl
push
shlb
inc
int
loopne
movsl
add
mov
inc
dec
in
dec
xchg
push
fwait
add
and
cmp
fcoml
sbb
jmp
shl
mov
or
pusha
outsl
shll
pop
fiadds
inc
lahf
bound
iret
xchg
mov
addb
and
lahf
call
in
outsl
shl
addb
in
and
sbb
dec
test
arpl
in
add
add
js
sti
sub
lcall
mov
cld
adc
test
mov
pusha
or
and
jbe
xor
push
sub
cmp
mov
jo
and
add
mov
lcall
pop
scas
mov
jecxz
int
mov
lock
add
scas
addb
pusha
mov
mov
add
stos
aas
fs
sub
inc
push
mov
addb
pop
xor
mov
jle
clc
inc
mov
pusha
inc
dec
in
mov
inc
loopne
and
adc
xchg
shrl
ret
cmc
or
mulb
pusha
shrb
add
pusha
shlb
inc
ficoml
mov
inc
pusha
jae
and
and
sbb
cli
jns
mov
stos
rol
jno
in
mov
dec
les
addb
js
jge
pop
mov
add
dec
aad
imul
jle
rol
out
loopne
inc
pop
insl
test
mov
mov
rolb
lock
sbb
and
pop
mov
add
ljmp
ds
andb
inc
mov
sbb
pop
or
addb
push
dec
shrl
popa
sub
inc
insb
jle
lret
add
shrb
push
cmp
xor
rolb
inc
incl
cmpb
mov
in
scas
pusha
pusha
fcomp
mov
pop
popa
lret
fistpll
add
inc
pusha
fsubrl
lea
push
int3
bswap
gs
adc
out
mov
mov
sbb
stos
lcall
loopne
loopne
cwtl
sbb
stos
out
out
inc
sti
jae
pusha
pusha
cmp
pop
pop
outsl
and
inc
dec
xorl
subl
outsb
movsb
add
vrcpps
arpl
jge
sahf
arpl
and
xchg
mov
xlat
hlt
into
xchg
pusha
pop
push
sbb
in
cmpsb
addb
shll
xchg
call
and
and
push
mov
jecxz
pusha
and
adc
loopne
insb
and
jecxz
xchg
xchg
ret
cli
aad
dec
sahf
pop
or
pusha
sbb
mov
outsl
cwtl
mov
cmpsl
adc
cmp
cmp
xor
repnz
cld
sub
inc
mov
mov
mov
lods
lds
sbb
aaa
xchg
lock
dec
vxorps
pop
add
adc
add
xchg
stos
inc
mov
inc
xor
jp
repz
loopne
aad
mov
loope
enter
shlb
inc
xchg
sub
add
lahf
mov
ror
jns
shlb
mov
addb
loopne
rolb
pusha
and
jnp
or
jp
mov
and
fsubr
iret
jne
das
xchg
and
xchg
rcl
jmp
shlb
shlb
add
loopne
sahf
fstpl
aas
pushf
sbb
mov
push
loopne
adc
hlt
pusha
jne
outsl
xchg
jnp
pop
addb
cli
lods
sbb
in
inc
fists
mov
jp
test
loopne
add
loopne
js
xchg
pop
jbe
lcall
loopne
pushf
mov
sbb
sbb
push
fsubs
and
and
mov
adc
nop
test
mov
lock
inc
push
je
rolb
into
scas
insb
and
jns
icebp
stos
jo
cld
sub
inc
pushf
int3
das
pop
scas
and
pusha
out
sub
jns
inc
dec
ficoms
rolb
mov
andb
lods
and
or
sbbb
sbbl
mov
mov
movsb
add
mov
std
int3
push
jmp
xlat
adc
fwait
in
jecxz
inc
shlb
mov
popf
jmp
mov
dec
or
jnp
push
fcomps
repz
push
xchg
enter
lods
jle
imul
in
je
shl
mov
mov
out
not
filds
and
out
xchg
jp
cmpl
in
mov
xchg
jecxz
aam
out
out
test
adc
mov
movl
lods
andb
in
addb
into
stos
inc
mov
cmp
loope
xchg
out
inc
mov
aam
hlt
sub
push
rolb
and
inc
clc
loope
stos
mov
mov
sbb
lds
cltd
dec
imull
mov
mov
lret
lahf
stos
cmp
mov
nop
int3
adc
jg
out
lcall
rcll
popf
jg
adc
push
mov
stc
sbb
lret
xchg
jle
out
mov
dec
insb
cmp
test
hlt
pop
aam
mov
mov
mov
insb
add
and
inc
xor
sbb
add
xorb
add
or
mov
arpl
xchg
in
mov
pop
imul
cmp
loopne
adcl
loopne
xchg
cmp
mov
sub
ss
push
pop
aad
pop
cmp
outsl
ror
ficoms
rcll
pop
sbb
push
loopne
enter
negl
mov
data16
and
jae
mov
mov
shll
inc
push
pop
xor
adc
cmp
hlt
push
shlb
ljmp
or
and
pusha
ss
push
ret
orl
fwait
jo
push
pop
movsb
add
sub
lea
and
mov
test
mov
jbe
pop
pop
push
test
and
lock
inc
inc
scas
dec
das
js
or
push
jmp
sbb
push
dec
lock
fimull
add
jecxz
inc
jge
cmp
addb
adc
loopne
adc
pop
xor
adc
pop
cmc
je
jp
clc
xchg
jl
out
cmpsb
add
jmp
or
inc
cmp
inc
cmp
push
ljmp
jg
gs
inc
call
jmp
sub
clc
leave
pop
ja
sbbl
lcall
shrl
pusha
rorb
inc
insb
inc
or
inc
xchg
sbb
ds
cmp
ret
jg
dec
jle
pusha
pusha
gs
mov
and
ljmp
addb
addb
iret
jne
sbb
mov
je
sahf
int
test
mov
dec
into
cmpsb
loopne
cmpsb
inc
loopne
test
push
shll
cmp
add
in
sbb
dec
xchg
cltd
insl
sub
jb
and
xchg
lock
aad
dec
fmuls
xchg
add
je
add
mov
hlt
mov
mov
xchg
loopne
subl
sub
and
aam
sbb
mov
cmp
add
int
dec
lods
inc
stos
andb
and
add
and
adc
pop
rcrb
inc
andb
int
lret
xor
fsts
out
cmp
add
insb
push
xor
rolb
pop
cmp
inc
fcompl
addr16
adc
jns
inc
xchg
bnd
jle
jnp
js
mov
fistps
mov
mul
jno
xchg
pushf
sub
push
inc
push
dec
cltd
jp
pusha
rol
das
cmpsl
pop
or
inc
out
imul
jmp
lods
pusha
inc
loop
and
cwtl
shlb
adc
shl
ja
ret
int3
lds
push
sbb
inc
cmp
dec
or
mov
adc
xor
add
inc
mov
mov
loopne
cmp
xor
andb
dec
mov
mov
cmpb
jnp
test
xor
inc
out
icebp
pop
shll
test
add
fs
shlb
inc
cs
sbb
fcmovbe
mov
cmp
movsb
add
xchg
aam
inc
shlb
ficoms
fidivrl
fidivrs
shr
push
jb
mov
and
subb
pusha
push
pusha
and
scas
scas
andb
inc
pop
inc
scas
add
jge
shrl
mov
fdiv
cmpsl
mov
jb
add
dec
loop
xor
xor
jg
mov
popf
and
in
mov
mov
sbb
ret
push
xor
or
out
andb
imull
repz
pop
jp
adc
xchg
mov
aam
fistpl
mov
and
cwtl
push
fwait
pop
mov
sbb
insl
xchg
dec
popa
add
push
add
jb
push
add
mov
cmp
lods
int
xor
and
inc
cli
jne
lret
and
xor
outsb
jnp
mov
adc
sub
rcrb
inc
pop
lds
push
mov
cmpb
mov
xorl
lret
mov
mov
in
fwait
dec
je
and
rol
cmpsl
ret
sub
and
jl
mov
cmp
cmpsl
push
adc
insb
movsl
sub
sub
loopne
into
out
xchg
stos
addb
fldenv
add
in
je
pusha
add
xor
addb
add
imul
xor
shl
orl
test
push
int3
movsl
cli
lahf
rcl
addb
fldcw
loopne
push
push
add
ja
mov
jmp
pop
jg
pop
jg
loopew
push
mov
movsb
inc
inc
pop
xchg
xchg
aam
inc
adc
sbb
and
jecxz
stc
mov
jno
andb
fwait
dec
ror
loop
inc
fldcw
shrb
cmp
cmc
xor
enter
in
mov
out
lods
and
push
daa
les
testb
xchg
fisubrl
pop
sub
mov
sarl
or
mov
test
sbb
sub
push
das
cli
or
jae
sahf
imul
push
inc
andb
shlb
rorl
adcb
loopne
and
xchg
adc
mov
mov
testb
arpl
lahf
xor
addr16
mov
addb
cs
loopne
mov
cmp
icebp
cmc
imul
add
loop
mov
in
mov
mov
and
rorl
and
and
inc
push
push
push
lock
test
jmp
and
loopne
xchg
loopne
lret
int3
cmc
push
ds
jp
mov
add
jno
mov
arpl
loopne
push
push
pop
cld
into
das
add
and
adc
pusha
sub
push
test
sbbb
std
mov
pusha
pusha
cli
repnz
sub
pop
pop
mov
repnz
inc
and
push
and
loopne
pusha
inc
rcll
and
pusha
andb
jnp
pop
hlt
and
lds
dec
xlat
imul
cli
insl
jmp
jbe
rclb
sbb
xor
mov
loopne
mov
std
fmul
dec
jo
pusha
fucomip
push
push
add
add
mov
pushf
movsl
and
dec
xchg
inc
sub
and
dec
mov
dec
sahf
mov
mul
fistps
push
cltd
cmp
or
pusha
pop
ljmp
loopne
or
add
cmp
jl
shlb
jo
jbe
xchg
ret
cmp
addb
int3
int3
pop
or
add
scas
inc
loopne
clc
popf
mov
ret
xor
inc
into
or
inc
xlat
pop
and
lret
stos
test
ss
xchg
out
rolb
scas
mov
sub
inc
aad
pusha
add
push
jno
lods
loopne
dec
mov
cli
shlb
xchg
pop
mov
push
les
and
popa
mov
mov
pop
sub
cmp
jl
iret
mov
pop
sbb
mov
or
pusha
arpl
add
rcl
add
loopne
andb
mov
mov
shlb
dec
pusha
mov
xlat
enter
inc
sar
jmp
in
jo
mov
xor
loopne
cwtl
out
nop
cmp
or
mov
mov
stc
adc
and
repz
or
repnz
xor
insl
push
sub
addb
jge
hlt
dec
std
jbe
shlb
or
movsb
add
and
cmp
cmpsl
inc
cltd
adc
cld
mov
sbb
xcrypt-ecb
cmpsl
lret
pusha
and
out
leave
mov
mov
cmp
in
mov
outsb
xor
jp
into
nop
aad
cmp
sbb
xchg
xorb
mov
pop
mov
sub
shlb
es
mov
push
push
and
and
and
andl
paddsw
push
cmc
ss
loopne
out
dec
repz
sbb
loopne
fiadds
jmp
and
or
and
jmp
rcr
mov
rcrl
sub
pusha
js
mov
mov
adc
jp
andb
insb
in
cmpsb
andb
fld
fdivl
cmc
enter
test
add
add
pusha
jecxz
repnz
jle
in
sub
and
repnz
jb
and
mov
and
mov
push
fildl
mov
js
mov
jne
out
mov
mov
in
repz
leave
mov
imul
fcmovne
js
insl
js
jmp
xchg
mov
and
xor
ret
scas
mov
and
lret
cwtl
js
decb
loopne
cli
cmpsl
lcall
mov
and
loope
push
xchg
pop
add
mov
adcb
addl
cltd
push
fdivs
and
sub
loopne
movsb
add
and
lahf
mov
bound
jb
inc
jp
mov
cwtl
in
mov
insl
movsl
mov
sub
pusha
loope
cmpsl
sahf
fmull
fwait
xchg
dec
mov
mov
sbb
loopne
mov
aaa
loope
repnz
xor
test
sti
or
inc
push
mov
dec
push
push
inc
loopne
loopne
call
jecxz
mov
add
cmpsl
leave
outsb
or
xchg
lret
push
pop
jp
into
cmpsl
or
mov
ja
hlt
pop
ret
imul
fwait
data16
mov
test
stos
pusha
mov
mov
stos
inc
fwait
or
rcrb
aam
or
dec
aam
ret
inc
xchg
out
fmull
sub
jns
mov
jmp
mov
mov
inc
xlat
push
pusha
adcb
pop
les
fsubs
nop
mov
mov
idivl
in
sbb
stc
mov
adc
mov
loopne
xor
xchg
mov
in
and
pop
mov
shlb
adc
into
cmp
push
in
jb
inc
add
push
arpl
fdivrp
push
xor
out
pop
pop
pop
inc
dec
inc
mov
lahf
sub
lcall
push
inc
and
mov
inc
push
insb
mov
inc
mov
es
add
fsubrl
inc
cltd
cli
dec
scas
andb
cmp
jne
andl
out
add
lods
inc
jmp
inc
rolb
add
je
rorl
inc
jb
test
lcall
pusha
ror
inc
and
iret
pushf
dec
or
loopne
jb
movsl
int3
jecxz
xchg
dec
sbb
jp
xchg
cmpsl
or
xor
addb
xchg
pushf
repnz
pusha
arpl
stos
pusha
mov
pop
xlat
arpl
shl
fnstcw
enter
loopne
push
or
addb
ror
notl
in
in
loopne
in
addb
out
push
imul
out
inc
inc
movb
jne
test
sub
pusha
push
or
pop
cmp
add
mov
loopne
push
andb
ljmp
and
andb
lret
roll
and
bswap
loope
mov
fwait
adc
add
add
jle
mov
mov
loop
loopne
and
or
call
pop
in
out
push
xlat
inc
sbb
rcrb
cmp
ja
movsb
inc
loopne
push
mov
or
xchg
imul
dec
icebp
pop
lds
sti
xorl
and
ficomps
loope
repz
cld
adc
lret
add
out
mov
ljmp
inc
pop
push
sbbl
xlat
dec
pop
stc
lcall
or
xor
shll
loopne
ret
cmp
shlb
inc
insb
or
imul
sbb
test
sub
shl
jge
aas
lds
and
notl
ds
mov
sub
inc
dec
gs
jle
adc
clc
jo
mov
jg
mov
push
rolb
out
cmp
sub
js
filds
lods
and
inc
pop
imul
xchg
fstpt
jns
insl
jle
sub
mov
and
and
orb
xor
loope
push
loopne
pop
cmpsl
inc
pushf
pusha
cwtl
loop
fidivl
cmp
pop
adc
aad
enter
xor
xor
push
xor
inc
or
add
mov
mov
add
addr16
les
insl
jns
mov
cltd
pop
js
fwait
push
in
imul
scas
inc
add
mov
and
mov
loopne
ss
gs
cmp
sahf
pushf
cmp
scas
loopne
mov
divl
lahf
push
adc
test
pusha
scas
mov
and
pusha
jmp
ja
adc
mov
addb
loope
inc
sbbb
jmp
mov
and
xorb
push
loopne
xchg
adc
dec
mov
jg
mov
ljmp
pusha
loopne
and
xor
pusha
and
sbb
inc
push
xor
pop
xchg
sub
and
bound
cmp
add
pusha
shlb
mov
cmpsb
mov
push
shlb
and
loope
fdivrs
arpl
mov
cmp
pusha
adc
xchg
jno
push
test
pusha
daa
imul
sbb
js
jb
mov
loopne
xchg
cmc
sub
inc
sub
add
arpl
insl
out
inc
add
popa
pop
aaa
and
xchg
mov
jae
es
rorb
pop
jg
sarl
add
loopne
sub
andb
inc
rorb
aam
jle
and
mov
mov
loopne
cmp
daa
lea
sbb
out
mov
lods
push
shll
andb
call
loopne
ret
gs
pop
jge
xchg
clc
in
cmc
int3
pop
psllw
scas
sahf
mov
mov
cmpsl
cld
push
lret
out
sbb
mov
and
dec
adc
cmp
xchg
lock
movsb
add
outsl
nop
pop
sbb
mov
test
imul
sub
add
ja
or
rcrb
mov
adc
andb
pop
ss
adc
jl
icebp
or
or
inc
fbstp
fs
ret
add
shlb
jmp
jo
adc
xor
jle
pop
mov
inc
sarl
fwait
inc
sahf
mov
sti
mov
sti
sbb
add
loopne
pusha
and
icebp
int
inc
test
add
push
jle
jl
and
loopne
add
jne
ficoml
pusha
int3
cmp
xchg
fsubrl
inc
inc
xchg
js
sbb
out
dec
fimuls
inc
rcll
cwtl
mov
dec
vpunpckhbw
in
out
mov
ss
out
icebp
sti
and
add
cmp
outsb
or
inc
adc
inc
or
add
outsb
inc
shl
sub
and
add
xor
dec
cmp
dec
mov
inc
ss
adc
mov
test
movl
mov
add
loopne
sub
pop
dec
and
lea
push
mov
out
scas
add
or
in
sub
ror
add
or
xchg
push
mov
add
sbb
in
in
scas
int3
aas
push
shlb
scas
lock
sbb
ljmp
sar
fdivl
insb
addr16
jge
mov
inc
and
jmp
shl
outsl
jg
mov
inc
cld
mov
mov
lods
loopne
pop
xchg
mov
ret
imul
push
addb
xchg
loope
push
adc
or
test
inc
mov
shl
adc
fwait
int3
cmpl
aad
ret
imul
cmp
pusha
and
mov
and
int
xchg
loopne
loope
and
push
dec
xchg
inc
dec
adc
inc
add
out
dec
sub
pusha
push
pusha
add
loopne
jae
add
pusha
outsl
push
push
sbb
add
add
frstor
add
mull
mov
test
mov
mov
cld
and
sarb
add
xor
jge
.byte
inc
test
