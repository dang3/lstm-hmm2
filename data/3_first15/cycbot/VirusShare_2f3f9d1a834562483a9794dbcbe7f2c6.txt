scas
cli
fwait
stos
xorl
cmp
ret
jae
pop
push
add
add
add
adc
jb
es
and
cmp
sahf
mov
mov
sub
xor
cmc
fidivrl
insb
xchg
push
jl
add
je
out
out
add
pusha
add
mov
out
pop
aaa
xchg
pop
test
pushl
mov
cs
arpl
mov
loopne
dec
mov
out
popa
dec
adc
rolb
xor
sbb
add
addb
inc
add
push
and
imul
mov
cltd
out
xchg
push
add
dec
fidivl
add
addb
xor
ret
cmpsb
inc
add
enter
add
push
repnz
inc
add
add
mov
test
add
mov
mov
iret
cmpl
adc
les
dec
xor
mov
ret
xchg
push
dec
rolb
aas
push
pop
cli
cmpsl
stos
ljmp
xchg
add
cwtl
jnp
pop
sahf
sub
or
inc
mov
lea
add
lods
cmpsl
daa
hlt
pop
xor
inc
add
movsb
fdiv
dec
test
or
stc
and
out
outsb
mov
push
mov
mov
jmp
adc
in
add
popa
sti
ret
cld
jecxz
xor
adc
aam
add
rcr
xor
loope
mov
fwait
jge
pop
xor
push
jge
or
test
in
xchg
fs
es
fstpl
cmpsb
sbb
add
jmp
or
pop
push
sub
out
outsb
stos
or
add
outsl
fisttps
cmpsb
sub
add
popa
push
pop
cmp
jl
push
adc
dec
xor
mov
push
std
mov
adc
lret
hlt
fsubs
mov
add
sbb
jle
adc
mov
gs
mov
mov
lods
loop
cmpsb
sub
in
jge
sub
inc
add
add
out
mov
das
sub
add
or
jle
popa
push
xchg
jne
add
mov
leave
test
cltd
dec
rclb
pop
shll
pop
xchg
adc
xchg
xchg
jecxz
gs
loopne
enter
aam
xchg
mov
add
jg
xchg
cmp
les
bound
push
xor
sarl
mov
fisttpl
test
test
mov
or
punpcklbw
push
cmp
sbb
enter
cmpsl
push
into
xchg
mov
push
and
jo
dec
xchg
push
push
pushf
jae
fmul
mov
add
lret
test
ja
gs
dec
cmp
pop
jp
cmp
cmpsb
xor
lcall
js
fcompl
adc
scas
adc
movb
cmp
xchg
fcoml
rolb
add
mov
xor
mov
or
adc
add
adc
inc
add
lcall
bound
std
push
add
pop
cltd
out
loope
xchg
push
jp
add
sbb
add
sub
hlt
and
jp
pop
push
push
add
lds
shrl
int3
outsb
sti
neg
adc
ds
mov
loop
mov
push
addb
sbb
js
jle
sub
push
xor
int3
or
sub
mov
add
dec
fildl
fisttpll
sub
push
ss
out
clc
call
inc
adc
cmpl
pushf
xlat
sbb
push
xorl
insl
aaa
lahf
insb
repnz
insl
xchg
repz
arpl
and
das
adc
int3
aas
cmpsl
pop
mov
add
push
and
push
jb
nop
mov
adc
add
sub
mov
daa
icebp
mov
data16
mov
fdivrl
adc
inc
add
xor
and
add
push
and
scas
pop
iret
in
loope
push
sbb
mov
add
push
sub
inc
add
push
pop
sbb
addb
jle
movl
xchg
stos
cltd
test
xchg
mov
sar
adc
rcll
xchg
mov
outsl
jb
repnz
sub
add
dec
daa
and
jmp
add
mov
dec
push
or
in
and
xchg
addl
and
pop
sarl
pop
sbb
insb
or
out
adc
add
add
pop
add
cld
push
shr
cmp
sub
add
test
inc
push
test
add
outsl
pushf
dec
andl
jns
lret
sbb
sbb
fwait
sbb
addb
pusha
add
xchg
sub
data16
mov
stos
jle
sbb
and
jno
xchg
xor
push
mov
and
lock
stc
mov
dec
push
adc
sahf
inc
in
adc
dec
int3
dec
shrl
mov
xor
in
std
rcr
add
hlt
or
dec
push
fldcw
cmp
lcall
add
fildll
mov
jo
int3
addr16
sub
push
add
mov
psadbw
ss
add
outsl
dec
dec
mov
add
bswap
int
add
stos
mov
sub
mov
imul
inc
lahf
mov
out
mov
add
or
jmp
mov
popa
mov
pop
repz
pop
sub
addb
push
add
outsl
cmp
adc
add
addr16
sarb
icebp
out
push
add
pop
cli
jmp
xor
insl
jmp
push
jmp
aad
cld
fimuls
xchg
ret
das
sub
sbb
test
dec
bound
pop
ljmp
xor
aad
pop
xchg
sub
xchg
push
mov
call
mov
scas
fdivl
lods
loopne
add
lods
xchg
jp
xchg
xchg
inc
add
and
push
test
enter
repnz
pop
mov
leave
lahf
xor
adc
adcl
fdiv
into
sbb
iret
pop
std
std
mov
pop
push
mov
sub
testb
fwait
rorl
rolb
out
mov
push
cli
cmovo
push
lods
xlat
inc
jbe
sbb
clc
jl
hlt
add
data16
xchg
or
pushl
bound
cmpsb
arpl
inc
cs
mov
add
lcall
push
xchg
inc
sub
inc
jnp
mov
inc
add
mov
add
xchg
mov
bound
lods
add
arpl
add
add
addb
mov
cwtl
jns
sub
add
mov
mov
push
test
jnp
sti
jae
mov
jmp
frstor
inc
into
jp
mov
pop
adc
scas
or
pop
repnz
jp
xchg
loopne
pop
movsl
shlb
nop
rolb
mov
push
int3
add
in
push
clc
lcall
out
hlt
negb
inc
call
sbb
push
pop
mov
inc
add
xchg
hlt
fcomi
mov
and
adc
jg
cmp
fcmovu
jp
iret
mov
adc
add
outsb
test
jp
mov
cwtl
loopne
ret
pop
xchg
xor
mov
mov
sti
das
xor
lahf
add
cmp
adc
dec
call
and
cmp
fldcw
lcall
mov
jle
jno
sub
xorl
lods
mov
rolb
pop
pop
enter
add
iret
cmp
jae
add
or
lea
xor
je
imul
addr16
je
sub
dec
push
mov
rclb
stos
cmp
add
fisubrl
jo
lds
add
scas
bswap
and
ds
ljmp
jno
add
cmp
out
cltd
imul
fnsave
or
xor
push
lret
mov
jge
mov
xorl
adc
pop
pop
xchg
les
add
pop
mov
cmp
xor
mov
iret
fsub
xor
lcall
mov
adc
push
sbb
cs
rcll
inc
push
test
aam
out
call
outsl
fwait
jne
jg
push
sub
popf
dec
into
or
movb
fwait
bound
pop
xchg
scas
ljmp
push
cmp
push
int3
outsl
arpl
outsl
add
sub
aam
mov
mov
int3
cmc
int
pop
mov
or
nop
in
pop
mov
lds
scas
adc
xor
adc
pop
cli
insl
out
push
testb
xor
push
cli
insb
cmp
inc
idivl
push
mov
mov
and
lock
mov
adc
add
insl
pop
push
imul
add
cmp
cmp
dec
push
xchg
and
mov
push
bound
inc
add
movb
adc
add
jge
sbb
shl
xor
pop
sub
add
dec
inc
add
mov
jl
lret
ret
ret
push
pop
data16
xchg
cltd
inc
call
push
aad
pop
sbb
fldt
push
or
or
testb
add
mov
jmp
push
test
rclb
push
dec
stos
pop
mov
cmp
mov
sub
subl
and
mov
es
mov
mov
inc
or
ds
jbe
mov
dec
insl
pop
mov
ljmp
add
fs
test
arpl
add
iret
hlt
movsb
out
pop
push
mov
cltd
jns
or
jecxz
cli
or
sahf
or
sbb
cld
addb
aam
mov
scas
cmpsb
loop
add
xchg
sbb
xchg
mov
scas
fstpt
jbe
iret
mov
mov
or
inc
add
sbb
outsl
scas
fbld
fnsave
inc
sbb
pop
or
or
es
test
xchg
pop
inc
add
push
mov
scas
inc
add
stos
and
push
pop
idivl
cmp
out
pop
mov
add
add
iret
out
sub
cmc
fiadds
push
xchg
call
add
push
fidivl
bound
xchg
or
dec
or
add
and
sbb
call
test
daa
sbb
divb
js
jno
fadd
add
mov
imul
hlt
mov
sbb
or
movsb
push
jo
and
test
addb
push
ret
pop
lds
lea
add
push
fstps
mov
into
mov
nop
fisttpll
ret
cmp
and
scas
js
cmpsl
insl
jns
aad
inc
stc
push
cli
mov
clc
jp
je
or
cwtl
pop
clc
push
add
mov
insb
adcl
mov
cltd
xor
test
movsb
rclb
jle
add
addb
cli
das
sub
xchg
ljmp
mov
notb
ljmp
pop
jge
in
mov
lcall
pop
cmp
add
mov
test
xchg
xor
push
cmp
mov
fisubrs
gs
and
adc
test
ds
pop
xor
xor
xchg
pop
or
into
jnp
shlb
sub
pop
test
xchg
out
rcr
pop
ja
inc
jnp
negb
or
jecxz
add
inc
add
mov
or
std
xchg
loop
xor
push
add
dec
dec
fsubl
in
lock
push
push
jo
int
mov
pop
bound
mov
test
cmp
in
inc
test
add
push
sti
xchg
or
inc
add
cmp
and
lret
cmpsb
mov
loopne
pop
daa
inc
add
add
or
cmpsb
sbbl
popf
sub
rol
add
xor
push
fdivl
inc
add
outsl
stos
xor
add
std
and
sub
inc
mov
push
mov
insl
xor
fimuls
add
sbb
lea
les
shlb
outsb
mov
sti
sub
jl
add
push
in
movb
push
sahf
stos
data16
bound
cli
shll
test
mov
jecxz
add
pop
decb
push
dec
roll
aad
out
mov
mov
les
or
sub
enter
cmpsb
mov
add
dec
fistpll
push
dec
addb
xchg
dec
scas
fwait
push
jnp
add
add
adc
mov
pop
arpl
imul
repz
dec
inc
dec
mov
xchg
cmp
stos
xchg
mov
popf
loope
xor
ret
aas
push
dec
shlb
cmpsl
ja
popa
rcrl
cmpsl
push
js
ret
and
test
fistl
sub
sbb
inc
shl
popf
sub
ja
cltd
and
push
or
or
repz
pop
mov
xor
daa
pop
in
inc
dec
pusha
add
outsl
mov
fcoml
and
mov
add
div
movsl
mov
cmp
mov
add
xchg
imul
ret
xor
dec
lahf
clc
movb
mov
ds
add
dec
or
mov
je
xor
add
mov
mov
faddl
aam
mov
stos
dec
cli
dec
inc
add
insl
pushf
insb
stos
rolb
add
jne
pop
jmp
or
dec
lock
xor
int3
jmp
xchg
xor
pop
xchg
cmp
xor
insl
inc
add
jecxz
sbb
add
test
lods
loopne
rolb
cmp
jo
or
cmp
adc
inc
add
lods
or
pop
negl
push
push
dec
les
lcall
and
int3
ljmp
sbb
sub
ret
int3
and
or
aam
cmpsl
or
add
add
sbb
add
test
sbb
jge
inc
add
stos
adc
mov
inc
add
das
fildl
lock
cli
sbb
add
mov
lock
popf
lock
jo
in
add
cli
jl
mov
and
sub
and
in
sub
push
mov
push
push
push
push
push
push
push
push
cld
repz
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
es
push
jmp
icebp
mov
nop
cs
lea
mov
or
and
or
lock
lea
sub
xacquire
pop
add
ss
cs
push
push
lret
jmp
add
add
sbb
add
dec
aas
bound
sbb
daa
push
pop
mov
in
and
scas
daa
add
test
mov
mov
addr16
js
dec
imul
sbb
add
stc
cmp
mov
negl
pop
jg
add
mov
dec
xchg
xchg
cld
dec
pop
push
jo
test
push
add
into
addb
js
xor
add
add
out
adc
lock
negl
cmp
add
leave
mov
push
popa
stos
mov
jno
add
scas
jge
lret
inc
shlb
push
xor
push
add
adc
push
push
hlt
imul
sti
push
pop
push
dec
sbb
dec
leave
cmpsl
jle
mov
cmc
inc
iret
xchg
idiv
jle
cmp
push
or
push
cmp
xor
pop
data16
jecxz
adc
add
pusha
add
fisubs
cmp
pop
out
adc
jge
stos
xor
test
mov
shrl
fmull
adc
clc
jle
insl
pop
fdivl
push
scas
les
icebp
cmp
dec
dec
jl
outsb
and
pushf
cmp
cli
or
decl
aad
cmp
pop
out
sti
mov
xchg
xor
add
into
clc
add
mov
aaa
data16
mov
inc
jp
dec
cmc
mov
ds
mov
pop
add
push
cmp
add
dec
xchg
lcall
out
dec
out
enter
pop
popf
in
sti
bt
jnp
mov
pop
lea
aas
fwait
in
or
push
cmp
nop
dec
movsb
pop
pop
lds
popa
xchg
outsb
fistps
cmp
loope
ljmp
and
fcmovnu
jmp
or
xchg
ja
insl
jb
outsl
jecxz
ljmp
cmp
mov
jmp
icebp
mov
push
sbb
pushf
sbb
cmp
sub
shl
je
cmp
dec
cli
movb
sbb
and
push
add
subl
ja
popa
sbb
out
sti
imul
mov
test
add
jle
mov
data16
lret
mov
push
cmc
push
rcrl
stc
lock
cmpsb
mov
add
aad
push
add
mov
je
outsl
scas
mov
icebp
imul
mov
xchg
into
fwait
ja
rcrb
test
ss
mov
dec
and
fs
xor
add
inc
add
addb
and
dec
ror
fnsave
addb
into
outsl
push
add
mov
mov
add
cmpsl
ja
sbb
xchg
xchg
ss
sahf
shrb
jae
xchg
data16
inc
add
rep
push
sub
and
pop
inc
add
add
push
adc
pop
shl
jle,pn
push
aam
cmp
enter
add
clc
adc
cmpl
cmpsl
xchg
and
lods
and
jp
add
xlat
xchg
jo
ret
cmp
loopne
push
pushl
or
ljmp
das
out
movb
adc
xlat
pushf
jne
jl
or
mov
aam
clc
popf
es
adc
test
sub
jge
adc
mov
sub
cmp
pop
aas
inc
add
js
add
cmc
add
movsb
sub
mov
in
xor
xchg
stos
sbb
adc
jne
sub
lret
jb
jb
sub
addr16
cmpl
scas
pop
fstl
inc
add
repz
mov
lret
stos
test
jnp
sbb
xchg
xor
add
aas
fdivs
add
add
mov
gs
out
mov
dec
dec
inc
add
push
sbb
nop
xor
or
cmc
addb
add
out
lea
lods
mov
xchg
inc
add
mov
int
jge
mov
jl
or
jp
add
mov
rdmsr
les
cmc
iret
push
in
dec
fimuls
jge
clc
add
bound
sbb
insl
mov
jo
adc
out
imul
stos
mov
mov
add
movsl
lods
mov
lret
ficompl
loop
add
insb
addb
add
out
xor
rolb
sbb
xchg
cld
push
or
les
mov
or
xor
jno
mov
lock
jmp
insl
gs
and
adc
or
aam
sbb
repnz
mov
add
test
inc
inc
add
and
loope
inc
add
push
lods
push
mov
pop
xor
popa
sub
enter
ss
push
dec
sub
sti
addl
jmp
out
xchg
adc
or
jnp
pop
rsqrtps
in
in
xchg
lret
push
dec
lret
inc
add
add
mov
xchg
fldl
sub
sub
sahf
mov
dec
add
lds
jno
xchg
outsb
gs
movl
cmp
pop
xor
cmpsb
repz
pop
xor
out
add
push
mov
jg
stos
dec
sbb
mov
jmp
add
pusha
add
add
add
rorb
mov
aad
leave
aas
lahf
xor
shrl
data16
add
int
shrb
add
jg
fstpl
out
mov
xor
push
stos
pop
leave
pop
xor
xor
out
add
add
or
add
dec
sub
lret
xor
add
and
add
mov
in
bound
cltd
stc
sub
jne
push
pop
out
js
fnsave
add
sbb
cmpl
idiv
and
xchg
sti
in
mov
add
adc
inc
add
xchg
and
je
sub
fnstenv
and
out
test
pop
mov
test
inc
add
mov
sbb
inc
add
movsb
jno
nop
rol
xor
xchg
insl
mov
mull
in
shrl
push
outsb
lcall
outsb
push
xchg
mov
mov
add
fdivrl
pop
in
cli
or
decb
mov
out
add
aas
lods
pusha
add
negb
add
icebp
imul
jnp
shll
xchg
sbb
cmp
mov
add
xchg
lock
pop
in
inc
jle
dec
sarl
dec
out
mov
lahf
dec
sahf
mov
xor
fsubrl
pop
repz
arpl
les
stc
push
or
movsb
dec
lds
push
test
xchg
repnz
jp
xor
push
idivb
and
outsb
mov
or
test
pop
js
and
adc
add
add
jg
mov
xor
fnstenv
int3
rorl
mov
int
popf
loope
jae
leave
sbb
movsb
addl
stc
jo
fcomi
jg
cmp
pop
add
cltd
xor
loope
or
sbb
mov
add
pause
das
aam
xor
or
mov
add
mov
cmp
push
mov
and
push
in
pop
jno
sbb
dec
mov
pop
sub
adc
mov
push
fadds
ljmp
sti
imul
lds
or
cwtl
inc
add
leave
shll
add
std
aam
popa
lock
loop
xchg
test
data16
dec
lods
in
cmp
add
outsb
inc
add
pop
les
xchg
imul
fisubrl
loopne
and
sbb
add
shll
into
mov
sar
movsl
imul
inc
add
pop
imul
jge
icebp
dec
outsl
mov
nop
mov
sub
sub
shr
lahf
scas
cmp
inc
add
sbb
repnz
inc
mov
jmp
cmc
push
in
hlt
mov
xor
mov
ja
push
mov
das
addr16
push
jecxz
mov
and
lds
xor
xlat
aam
popf
mov
fisubrs
and
loop
ret
jle
adc
fadd
add
mov
cmpsb
cmp
add
mov
movsl
xchg
jno
pop
data16
xor
ret
add
mov
mov
pop
cmp
movsb
or
mov
add
or
jnp
mov
fcmovnbe
jge
xchg
mov
pusha
add
mov
pop
mov
aam
add
lcall
sbb
sti
ljmp
jg
jno
inc
sbb
aam
add
in
imul
adc
fptan
arpl
pop
add
aas
xchg
inc
add
xchg
sub
lret
mov
mov
sbbl
sbb
je
xor
imul
stc
imul
xchg
pop
pop
lods
mov
xor
add
jg
movsl
mov
ja
fiaddl
add
mov
jb
jno
ret
roll
jg
je
and
add
cltd
jne
xchg
push
add
cmp
add
addb
push
leave
xchg
cmp
jno
scas
mov
add
ds
push
jbe
jns
fwait
and
inc
add
jo
in
fcoml
mov
cmp
push
xchg
mov
aas
out
push
das
sub
sbb
xchg
mov
mov
dec
mov
xchg
faddl
add
inc
add
fimull
jmp
mov
adc
dec
cld
outsl
mov
pop
les
pop
jmp
dec
cmpsb
ja
cld
push
mov
pop
cmp
rolb
aad
add
jmp
jge
sbb
add
inc
add
movb
mov
testb
jnp
sti
pusha
add
add
ret
stc
sbb
out
std
jo
mov
mov
rcll
xlat
insb
mov
or
mov
pop
and
cltd
jns
sub
pusha
add
push
mov
cwtl
clc
sbb
jno
fstps
cmc
xchg
mov
test
in
enter
leave
sbb
xchg
push
insb
sbb
add
sbb
pusha
add
xlat
aaa
lock
xchg
xor
sbb
add
mov
lret
pop
dec
out
adc
and
imul
cmp
aad
fcoml
add
addr16
add
movsb
inc
add
jne
in
add
clc
cs
mov
xor
dec
movsb
cmp
loopne
xchg
lods
dec
outsb
pop
dec
popa
in
pop
sahf
call
add
movsl
mov
ret
ret
mov
xor
add
sahf
jecxz
pop
push
das
mov
or
pop
and
mov
add
add
cmp
inc
add
pop
mov
add
jno
cmp
add
mov
add
repz
jns
xchg
fistpll
repnz
mov
sub
clc
out
int3
loope
or
movsl
mov
jne
movsl
sub
cmp
and
js
bound
or
push
mov
add
add
mov
sbb
hlt
aaa
lret
pusha
add
fldl
xor
imull
mov
mov
fwait
xor
outsl
or
dec
adc
rolb
gs
inc
add
lock
jp
inc
mov
cltd
in
add
adc
mov
loop
pushf
fs
or
out
inc
mov
pop
mov
or
add
xchg
jno
mov
outsb
push
cltd
repnz
sbb
lock
or
add
daa
xor
mov
repz
and
sarl
icebp
ret
fbld
data16
pusha
add
cmp
stos
ret
pop
mov
int3
add
into
jno
pop
enter
arpl
add
add
push
add
inc
pusha
add
loope
cmp
mov
push
dec
sbb
mov
cltd
jp
in
pop
and
mov
aaa
insb
mov
xchg
inc
cs
cltd
push
cmp
push
jmp
xchg
sahf
decb
xchg
cs
jbe
lea
jecxz
xchg
int
push
xchg
xchg
outsl
mov
push
or
aas
push
inc
add
nop
push
lock
xchg
divb
lahf
cmp
dec
mov
loop
xchg
mov
add
mov
ds
mov
out
pop
lahf
mov
dec
mov
or
push
or
inc
arpl
movsb
lret
aam
adc
les
push
add
inc
mov
mov
pop
in
popa
cmp
pop
push
in
cmpsl
add
out
or
add
or
xchg
push
lcall
add
lock
jl
pop
mov
aad
or
ljmp
jb
cli
fs
cmpl
or
lcall
sahf
pop
pop
cmp
mov
fisubs
mov
dec
mov
add
aam
add
scas
cmp
push
add
dec
nop
adc
lods
stos
shll
dec
add
xlat
lea
arpl
or
ljmp
mov
ret
inc
add
les
ficoms
add
cmp
lea
fucomp
enter
stos
pop
sahf
push
pop
lods
outsl
inc
xor
clc
xor
inc
add
mov
sahf
mov
mov
pop
pop
fsubl
pop
add
adc
or
mov
jbe
mov
mov
and
xchg
xlat
adc
cmc
mov
xor
inc
pop
mov
inc
cwtl
mov
les
scas
add
in
jl
fisttpl
pop
mov
mov
clc
in
push
pop
scas
or
push
add
cmp
jle
das
loop
sbb
push
add
sbb
daa
repz
add
aaa
or
mov
in
popa
xor
push
fsubrs
arpl
test
das
inc
filds
mov
add
repnz
add
out
lret
cmp
add
das
movsb
scas
xchg
int
stos
jno
das
inc
add
dec
pop
sbb
xchg
outsb
pop
sub
in
orl
pop
popa
xor
pushf
rolb
idivl
dec
inc
out
lret
call
push
out
mov
sbb
dec
lock
ret
fidivrs
sar
cli
inc
pusha
add
push
jae
cwtl
or
addl
test
push
ljmp
push
cmp
mov
neg
les
push
sarb
sbb
jl
test
mov
sbbl
cmp
and
lods
mov
mov
iret
jbe
jnp
add
fnsave
aaa
out
pop
inc
add
testb
sub
mov
or
sub
fucomp
sbb
es
and
sub
inc
xchg
add
jns
mov
addb
jle
leave
mov
movsl
mov
stos
jbe
jno
jmp
fstpt
push
xchg
push
data16
add
and
addb
ret
decl
xlat
cli
movl
xchg
jmp
jns
negb
inc
add
xorl
test
lock
xor
mov
push
stos
js
add
pusha
add
shr
int
add
jno
fistpl
mov
dec
pop
mov
add
ja
cmp
test
sbb
jecxz
xchg
nop
jmp
cmp
mov
ficoml
add
shll
imulb
iret
mov
pop
cmp
aaa
jns
jmp
cld
cld
or
imul
lods
inc
repnz
mov
mov
push
sub
in
in
push
push
cmpsl
mov
imul
jnp
mov
in
sub
ss
push
add
mov
xchg
cmpsb
call
and
fdiv
jo
pop
sahf
inc
rcr
inc
add
sarl
dec
cmp
addb
inc
add
mov
pop
cli
dec
sbb
add
loop
std
lea
dec
sbb
jns
nop
ja
loopne
loopne
mov
mov
shrl
cld
je
mov
or
lock
add
xchg
hlt
rolb
js
sti
pop
inc
add
jae
add
xchg
incb
sti
and
imul
add
mov
addb
add
add
sub
dec
pop
pop
xor
pop
mov
data16
test
test
dec
add
es
test
mov
les
repz
cwtl
mov
int
mov
or
mov
add
es
sub
adcl
addb
jg
aam
pop
push
fsubs
cld
repz
pop
ret
xor
mov
cmp
fcomps
and
aad
lcall
xchg
push
jnp
xchg
mov
shll
daa
pop
cltd
mov
add
mov
xchg
scas
jo
xchg
sti
dec
xchg
cltd
in
repnz
sbb
add
cmp
outsl
mov
sbb
sub
pop
repnz
mov
add
js
nop
out
loop
lcall
sbb
inc
aam
jmp
cmp
cmpsb
xchg
jae
adc
fldl
scas
stos
mov
pop
repnz
lods
mov
pop
push
lea
jns
cmp
dec
repz
aad
das
insl
inc
add
out
mov
sbb
adc
dec
mov
inc
add
push
add
add
or
xor
stc
push
movsb
mov
adc
lret
and
add
ja
push
sbb
jge
mov
loope
or
add
xor
push
cmp
mov
out
in
js
dec
shll
jbe
mov
inc
fildll
rol
into
rolb
add
mov
add
enter
inc
add
and
sar
movsb
repnz
push
adc
inc
add
call
arpl
and
jo
inc
aaa
aam
xchg
mov
into
cmp
mov
adc
pop
add
addr16
add
pop
add
and
movlps
add
adc
stc
sub
lea
mov
inc
add
fmul
sbb
and
sub
int
jmp
push
icebp
outsb
ret
les
or
repz
push
add
xchg
insl
into
pop
lret
inc
insb
sbb
adc
mov
sbb
sub
add
ret
mov
add
mov
add
push
sar
test
add
jb
mov
add
cmp
loope
arpl
sub
imul
adc
test
adc
add
nop
out
cmp
aas
jns
scas
aam
out
scas
adc
addb
rorl
out
jg
mov
mov
xchg
rcrl
aas
les
aam
pop
mov
and
inc
xchg
mov
js
jmp
out
jns
incb
sbb
xchg
je
out
cmovle
and
stos
repz
push
nop
out
sbb
fsubrl
mov
aaa
shrl
mov
rcl
loope
xor
add
jmp
aad
movb
fcoms
int
fdivr
mov
out
rcrb
int
das
pop
mov
out
sub
mov
test
or
movb
jno
hlt
mov
jp
inc
add
adc
aas
rol
popa
jne
mov
cmc
stos
mov
shlb
inc
add
ss
push
imul
ss
mov
dec
xchg
mov
xor
fldt
les
fs
xor
movsb
out
lret
insb
into
lret
add
push
lret
jae
neg
cmp
imul
shlb
dec
es
adc
repnz
cmpsb
mov
cmp
sub
pusha
add
lods
cld
dec
pop
mov
fs
and
dec
stc
adc
pop
das
push
inc
pop
sub
and
out
dec
sub
add
arpl
fcmovnb
inc
add
pushf
xchg
imul
fwait
pusha
add
cmp
dec
inc
add
add
jo
test
add
push
push
mov
test
dec
xchg
mov
js
mov
movb
jnp
fxch
mov
push
adc
pop
jno
je
ja
and
sub
mov
fcomps
mov
add
fs
cli
sub
js
xchg
sub
fidivs
mov
push
mov
out
insl
sti
pop
cmc
push
out
add
test
and
dec
jb
push
test
xchg
rolb
dec
mov
rolb
xlat
movsl
cmp
cmp
int3
add
pop
or
pcmpeqw
and
inc
push
adc
inc
add
xchg
mov
aas
lock
in
fistpll
jmp
add
clc
adc
arpl
push
push
sbb
fldt
out
test
xor
bound
sbb
adc
adc
test
xchg
test
in
cmpsl
ds
scas
xor
icebp
out
hlt
inc
add
fs
lcall
lcall
into
addb
mov
xor
xbegin
out
ficomps
pop
loopne
pop
movsl
inc
xor
xchg
dec
decb
mov
mov
cld
xchg
clc
in
xchg
push
xchg
lock
jo
xor
jg
sbb
test
push
add
insl
lods
lret
mov
or
decb
mov
add
std
cmp
out
lcall
out
sub
xchg
hlt
outsl
pop
inc
inc
xor
test
outsb
lods
xor
or
das
mov
cmpsl
fdivs
rolb
loop
imul
xor
jmp
pop
addb
sub
mov
repz
mov
push
add
xchg
mov
xchg
test
gs
mov
xor
xchg
ss
xor
dec
nop
ret
jge
clc
insb
in
lcall
in
xchg
cmp
insl
aam
iret
cwtl
xor
js
add
mov
adc
enter
cmpsl
jne
dec
aas
push
scas
fidivrs
fs
repnz
movb
or
cmp
adc
cmp
imul
adc
dec
xchg
int3
or
pop
aam
add
or
insl
movsb
cmp
xor
dec
or
mov
cmp
icebp
shll
bound
sbb
add
jmp
in
or
stos
inc
add
add
mov
and
movsl
mov
les
fimull
inc
or
mov
jmp
hlt
rolb
pop
cltd
adc
add
negl
xor
sti
cld
or
sub
cmpsl
std
dec
inc
inc
mov
sbb
pop
rorb
movsl
cltd
jb
insb
lods
sbb
inc
add
in
jo
xchg
push
cmp
lods
sti
inc
ret
push
gs
imul
cwtl
or
addb
cmp
add
test
cmp
icebp
jae
enter
addb
fidivl
fbstp
ds
jg
mov
push
add
mov
and
xchg
cltd
pushf
push
ret
les
addb
add
sbb
ja
test
popf
test
xor
jge
cmp
ds
pop
test
xchg
cmp
aam
mov
lock
push
jp
adc
test
mov
push
push
adc
mov
mov
aam
fisubs
push
xor
or
push
scas
pop
cli
or
movsb
sub
je
add
je
pop
xchg
push
fs
in
push
ljmp
jle
repz
push
outsb
xchg
mov
hlt
push
rcr
pop
inc
add
sbb
or
arpl
das
adc
ljmp
leave
aas
dec
cmpsb
imul
push
loope
jle
push
adc
adc
sbb
pop
pop
jg
fistpl
jns
add
popf
rcr
out
jmp
add
push
cmp
pop
jo
push
adc
sahf
mov
bound
xor
push
pop
sub
push
cltd
movsb
mov
pop
les
popf
xchg
aaa
ja
insl
dec
push
and
mov
jae
jae
cmovae
add
jnp
add
inc
push
icebp
push
add
add
add
ja
repz
xor
sbbl
inc
mov
add
push
add
pushf
mov
dec
push
or
pop
pop
sbbl
repz
data16
das
adc
adc
inc
add
lds
push
mov
shll
push
pushf
clc
in
add
jle
dec
arpl
rcrl
sub
jbe
sub
push
mov
pop
inc
add
fdivrs
sub
lahf
push
int3
xchg
call
bound
lea
movb
cmp
orl
lahf
mov
add
into
mov
mul
sbb
push
adc
pop
pushf
out
and
aaa
test
fld
add
insb
roll
out
xchg
arpl
fstpt
sub
xchg
pop
and
js
xor
out
call
adc
xor
fisttpll
insl
aaa
fwait
adc
rol
add
cld
mov
cmp
int
pop
jnp
divl
and
les
mov
sahf
sub
adc
mov
mov
cmp
dec
add
aam
decb
adcl
push
mov
jecxz
xchg
subl
test
sub
add
jmp
jns
ret
cmc
dec
leave
std
or
in
adc
add
inc
inc
lret
pop
cmp
add
dec
sbb
mov
pop
add
dec
jmp
sub
adc
xlat
outsb
sahf
jp
mov
push
pop
mov
xchg
aaa
hlt
dec
imul
cltd
loope
jb
mov
or
jp
ret
mov
arpl
and
push
mov
mov
cld
adc
out
jge
add
adc
cmp
sub
repnz
add
pop
mov
out
add
gs
insb
mov
iret
jnp
int3
fsubl
jne
xchg
mov
jns
out
cltd
mov
xchg
push
mov
mov
hlt
cmc
cltd
rol
add
and
inc
cmp
cltd
jmp
adc
sarl
jmp
xor
cmp
fcmovbe
outsl
mov
push
xchg
cmp
ror
cld
sbb
add
xchg
and
mov
sbb
ja
add
xchg
movb
dec
popf
pushf
ret
sub
cmp
jl
pushl
dec
adc
pop
adc
subl
pop
mov
and
sub
jge
push
in
imul
hlt
inc
dec
mov
out
and
xorl
add
xchg
shl
fidivl
lods
ja
add
add
fidivrs
sbb
xor
xchg
notl
mov
adc
lret
dec
stos
xchg
repz
imul
cmp
test
add
jno
arpl
cwtl
fdivrp
cltd
sti
arpl
or
sbb
or
std
lock
and
pop
repnz
add
xor
push
xchg
cmp
push
sub
mov
mov
lock
cs
sbb
shlb
jg
add
es
xchg
jp
rorb
mov
push
mov
movsl
leave
jge
add
popaw
mov
pop
cmp
push
jge
adc
xlat
imul
mov
je
fwait
pop
inc
add
add
sbb
mov
int
hlt
popw
addr16
cmp
pop
scas
adc
aam
in
push
out
xchg
addb
mov
add
pop
icebp
mov
pop
jo
cmp
add
aas
aas
inc
rcl
adc
out
jo
pop
fadds
add
jnp
aaa
inc
add
shrl
jge
add
mov
mov
add
inc
add
loope
popa
faddl
sub
mov
xchg
in
iret
repnz
xchg
js
push
out
adc
cmp
test
imul
rol
push
xchg
ffreep
add
mov
mov
ljmp
dec
push
hlt
lea
push
insb
jbe,pt
add
push
push
dec
and
faddl
aas
add
cs
pop
adc
je
jns
mov
mov
bound
push
cmp
cmp
arpl
aam
ljmp
fisttps
addb
pop
jle
mov
int
test
sub
in
pop
mov
sbb
scas
sub
stos
jmp
aas
or
dec
jo
shll
sahf
addb
or
jl
xor
add
dec
xor
in
addr16
fnstsw
jmp
lcall
rolb
in
xlat
bnd
add
cwtl
mov
hlt
mov
lcall
jge
inc
dec
test
sti
push
sti
mov
and
sahf
xor
cmp
mov
add
into
xchg
lcall
pop
insl
xchg
int
shrl
loop
sbb
add
ljmp
pop
xor
add
iret
mov
mov
and
stos
movntq
lods
dec
rcll
ret
and
gs
cmp
add
dec
mov
jbe
sbbl
fwait
nop
cld
mov
cwtl
stc
pusha
add
fwait
stos
mov
add
mov
loopne
jns
imul
jmp
rolb
sub
jne
mov
xchg
sub
mov
stos
xlat
add
mov
pusha
add
xchg
addb
push
xor
sub
daa
cld
dec
ljmp
addr16
pop
imul
cltd
mov
add
mov
push
inc
pop
js
lods
adc
sub
repz
push
add
pop
js
js
push
aas
mov
push
bound
insb
enter
dec
gs
sbb
mul
rolb
fdivrl
imul
and
jne
push
add
stc
aas
mov
dec
xor
xchg
push
stos
add
cld
cmpsb
cmp
push
out
add
push
add
cmp
insl
sti
xchg
mov
addb
pop
cmp
rcr
mov
insb
push
inc
add
int3
push
lods
pop
ljmp
jb
sub
xor
adc
fstps
mov
cltd
xchg
xchg
mov
insb
loop
bound
movsb
mov
mov
dec
rcll
and
mov
push
fdivl
jg
xor
jb
jne
sbb
and
clc
sbb
sbb
arpl
push
mov
cmp
loop
iret
js
add
shr
pop
cld
outsl
jae
leave
push
cmpsb
jne
or
lcall
xchg
mov
sub
fistpll
mov
fstl
jae
mov
pop
xchg
push
outsl
and
lahf
ljmp
xchg
test
dec
dec
adc
sahf
push
or
mov
mov
gs
mov
bound
mov
cwtl
pusha
add
pop
inc
add
ffree
pop
or
inc
add
into
inc
mov
repz
and
mov
add
dec
movl
addb
sbb
add
and
pop
lods
ja
mov
jmp
dec
sbbl
mov
inc
cwtl
fnstenv
into
cli
aam
push
es
xor
ret
or
add
movsb
test
adc
adc
scas
push
mov
enter
cmp
arpl
cmp
lock
jecxz
gs
test
mov
jp
add
and
inc
imul
std
adc
add
repz
addb
sahf
rolb
sbb
bound
fldl
add
imul
dec
sahf
push
mov
add
lcall
pushf
adc
ljmp
mov
ret
fs
mov
add
add
fsts
mov
mov
mov
pusha
add
jnp
repnz
mov
sbb
into
adc
repz
rorl
in
fistps
mov
enter
add
in
push
push
pop
jp
aad
addr16
mov
add
add
scas
faddp
or
fs
inc
push
adc
cli
icebp
call
add
imul
popf
push
sub
daa
mov
xchg
fnsave
sub
fwait
rcl
pop
pop
sub
adc
mov
adc
in
loop
push
add
add
push
push
jns
mov
rolb
sbb
push
ds
loop
inc
add
cltd
mov
inc
add
lret
clc
sub
push
imul
je
mov
repz
mov
adc
shrb
or
fs
cmpsb
jecxz
add
ficoml
xchg
xchg
pop
lds
movsb
sub
push
sbb
mov
arpl
jmp
mov
dec
in
addb
dec
lret
js
mov
fdivl
rolb
call
int
inc
add
cmp
xlat
pop
repnz
push
out
cli
inc
jmp
ret
or
add
lret
movsb
fsubp
in
inc
neg
aaa
lret
jnp
sub
out
push
xor
in
add
mov
inc
push
mov
lahf
imul
pop
cltd
testl
jg
inc
or
xor
inc
add
sbb
add
add
cmp
xor
imul
jb
scas
cmp
xlat
aam
jo
mov
fucomi
test
in
jbe
int3
ss
jmp
push
popfw
mov
add
jbe
add
push
pop
xor
mov
repnz
insb
and
cmp
pop
divb
cli
fcomi
imul
dec
outsb
mov
icebp
xor
add
jae
add
xorl
js
sti
je
ljmp
repnz
dec
mov
jmp
mov
fnsave
aam
cmp
fstpl
mov
jp
add
add
sbb
xchg
int3
adc
push
add
xor
add
mov
add
inc
add
lcall
jle
jnp
cmp
and
push
lods
jge
pusha
add
imul
dec
and
addb
cmp
xchg
lods
mov
addb
add
jl
inc
mov
xor
in
mov
inc
add
scas
push
sbb
sub
jbe
sbb
inc
stos
bound
std
mov
xor
xor
and
add
cltd
push
pop
lods
adc
loopne
out
and
dec
xchg
jle
addr16
mov
jl
les
mov
xchg
sbb
dec
cs
mov
ljmp
jge
cmpsb
fsubp
pop
mov
outsl
inc
xchg
movsb
push
jne
addr16
lret
fmull
jbe
jb
dec
ret
xchg
mov
sub
mov
mov
ljmp
je
mov
pop
dec
stos
cs
mov
jnp
cmpsl
and
mov
cmp
test
movsl
daa
daa
sbb
jg
shrl
cs
in
add
xor
dec
mov
add
out
pusha
add
push
cmp
add
mov
inc
pop
mov
inc
ja
jmp
pop
dec
lds
and
into
mov
sahf
decl
mov
test
inc
je
out
clc
inc
jno
or
add
ds
mov
inc
add
movb
cmc
ror
mov
cli
mov
fsqrt
rol
lods
jmp
lahf
call
cltd
popa
push
repz
sbb
repnz
test
aaa
loope
mov
inc
cmpsl
test
jl
rolb
pop
leave
loope
jnp
sti
push
xor
add
push
push
clc
jg
fisubrs
add
out
sub
xchg
pop
leave
aad
rolb
sbb
dec
jge
jbe
xchg
iret
xor
jns
jp
add
mov
fnsave
repz
mov
mov
mov
adc
sbb
add
or
mov
push
pusha
add
dec
popf
test
mov
pop
fisubrs
jne
cmpsb
aas
rol
add
lds
enter
ret
fadds
dec
mov
call
add
mov
iret
cmp
fwait
add
jl
icebp
sbb
push
fidivs
jb
inc
ss
push
les
mov
js
mov
mov
test
mov
cwtl
sbb
shll
mov
out
aad
arpl
nop
mov
push
pop
rorl
lahf
decl
sub
out
jno
aam
push
sub
icebp
cmp
mov
pusha
add
cmpsl
movsl
jmp
fldcw
jle
add
jne
add
mov
cs
or
addl
aaa
les
cmpsb
test
push
sbb
xorl
xor
lds
dec
xor
fcomip
pop
orl
add
add
loopne
push
sub
xrelease
rolb
or
ja
stc
mov
add
mov
xor
out
push
inc
out
stos
pop
test
cmp
mov
add
je
or
insb
aaa
subl
push
pop
loope
jge
aad
mov
or
ret
mov
fisttpl
push
add
cld
jbe
jle
mov
ljmp
cs
pop
fidivl
inc
add
cmp
and
and
xor
adc
and
sahf
sbb
rolb
add
xchg
lcall
stc
and
shrl
cmp
loop
arpl
ret
pop
inc
adc
pushf
cs
icebp
mov
dec
sarb
sbb
loope
add
sbb
inc
or
xchg
icebp
mov
sub
loope
sbb
add
scas
xchg
adc
shrb
ss
jp
into
dec
push
insb
cld
shr
shll
addb
repnz
add
and
mov
daa
pusha
add
addr16
mov
int
mov
add
adc
mov
fdivs
push
idiv
push
popf
and
lahf
pusha
add
ljmp
cmpsl
mov
mov
add
and
pop
jo
cwtl
lds
cld
cltd
mov
outsl
push
jmp
sub
cmp
inc
add
mov
movsb
flds
sub
dec
jp
jmp
imul
rcll
loopne
icebp
ret
jno
add
add
adc
addb
mov
or
add
aam
and
imul
int3
xchg
pop
push
je
rorl
add
in
or
addb
pusha
add
and
scas
repz
jp
xchg
lock
sub
push
sarb
jbe
test
fwait
je
icebp
cmpsl
lds
mov
addb
sub
outsl
sub
pop
rorb
sub
enter
push
js
popa
mov
rorl
xchg
rolb
cmp
add
sbb
pop
aas
int3
sbb
add
lret
gs
pop
adc
add
test
mov
mov
pop
mov
sub
adc
or
sbb
xchg
lea
push
xor
pushf
outsb
adc
test
mov
sbb
mov
hlt
cmp
addr16
mov
or
inc
add
and
bound
popa
pop
jo
outsl
stos
mov
and
mov
mov
add
divb
shlb
ljmp
or
xchg
or
mov
aam
push
dec
and
mov
in
in
sub
test
xchg
sub
out
movb
and
mov
or
aas
enter
add
add
add
imul
jp
test
aas
dec
shr
dec
jnp
add
out
in
jbe
shlb
mov
pop
mov
int
xlat
lods
in
das
mov
adc
int3
mov
in
outsl
dec
stc
nop
aas
aas
shll
loope
repnz
dec
or
and
xchg
daa
mov
adc
add
insb
popa
sbb
sbb
lods
mov
add
add
pop
lock
mov
test
in
sub
sub
aas
scas
adcl
js
cld
lret
fs
pushf
out
out
fwait
dec
pop
push
jo
cmp
sbb
add
repz
xor
add
add
inc
and
movnti
add
stc
sbb
mov
add
push
dec
sbb
add
add
lods
pop
sbb
sbb
sbb
sub
push
pop
mov
and
sti
pop
add
mov
add
xor
cmpsl
add
fucom
sub
push
mov
push
call
xor
mov
add
test
imulb
nop
daa
push
add
cmpsb
movb
adc
push
add
rolb
mov
or
sbb
cmp
fidivs
xchg
popa
cmpsl
ja
add
repz
xor
movsl
mov
stos
cld
pop
mov
dec
jb
out
es
jge
movsb
pop
inc
test
lret
mov
lret
in
popf
fstpl
jg
clc
xchg
pop
dec
pop
pusha
add
mov
stos
push
sub
cwtl
daa
xor
sahf
xchg
mov
stc
imul
fwait
pop
adc
jns
scas
cmp
pop
push
ljmp
daa
scas
js
xor
pop
aaa
or
mov
pusha
add
sbb
xchg
mov
jle
lods
movsb
rcl
andl
nop
inc
add
add
fucomp
js
data16
adc
jno
cmp
mov
outsl
xchg
cmpsl
sahf
pop
les
ss
pop
sti
gs
xchg
inc
repnz
sti
enter
cmp
daa
jmp
add
sub
and
mov
sti
sahf
fmul
rclb
jb
and
cmp
gs
fldcw
stos
dec
ds
pop
xor
popf
les
int3
imul
fwait
mov
out
add
aad
dec
shlb
jecxz
rolb
cmp
mov
mov
pop
iret
inc
shrb
addb
es
jne
ljmp
cmpsb
clc
adc
cld
outsl
in
add
loope
addb
push
jmp
jmp
push
lcall
inc
sbb
outsb
into
xor
inc
repnz
sub
sti
ss
cmp
movb
add
cwtl
aas
clc
bound
lret
scas
add
cs
dec
gs
fscale
lock
ljmp
test
mov
and
pop
add
int3
sbb
sub
sub
sbb
out
cs
test
les
mov
xchg
xchg
xor
mov
fwait
mov
in
sub
add
lods
ja
sti
ds
fwait
dec
fnstenv
je
add
add
and
sub
xor
out
xchg
les
pop
or
fimull
inc
mov
popa
fstpl
pop
in
ss
inc
sub
add
cld
dec
dec
pop
mov
or
gs
xor
repz
fisttpll
jg
rcrb
in
mov
divb
imull
cmp
jg
xchg
mov
sbb
jp
jo
cli
add
jns
add
test
jae
popf
mov
out
xchg
movsb
fs
roll
add
ret
pop
popa
push
stc
movb
ret
jbe
rcrb
and
ret
aas
shlb
test
sub
rolb
mov
in
mov
or
mov
and
mov
insb
adc
pop
jae
int3
test
push
xchg
jg
mov
scas
inc
pop
mov
std
sarl
mov
pop
popa
mov
lret
mov
ja
mov
xchg
scas
hlt
sbb
mov
repnz
enter
cmp
std
test
jbe
out
pop
outsl
and
lock
lds
inc
mov
sub
es
leave
sbb
xor
mov
arpl
stc
icebp
ja
dec
xchg
insl
outsl
hlt
and
push
add
dec
in
movb
stos
jp
ljmp
add
dec
adc
pusha
add
in
inc
add
syscall
push
mov
je
cmp
sub
mov
add
xchg
sub
lds
inc
add
push
mov
out
push
pop
mov
mov
add
fmulp
cmp
lods
loope
xchg
sbb
lcall
lds
popf
mov
imul
roll
dec
in
xlat
or
scas
xor
and
lods
dec
dec
mov
lahf
imul
rcr
or
add
push
sbb
and
add
add
mov
ds
leave
loopne
mov
rep
push
sahf
jle
pusha
add
add
cwtl
sbbl
or
mov
pop
ss
sti
pop
out
pusha
add
scas
les
or
pop
and
add
sub
jbe,pt
adc
lahf
lock
rorl
pop
inc
pop
jo
dec
icebp
push
inc
add
shlb
mov
xor
add
dec
sub
adc
arpl
popf
mov
push
jo
dec
je
lret
jbe
lods
fnstsw
aas
test
push
inc
add
ds
dec
mov
mov
jmp
sub
add
test
stos
imul
in
loopne
jge
outsl
filds
add
lock
mov
jb
push
imul
call
and
or
ljmp
push
in
aam
jns
rcrl
mov
mov
inc
add
loope
shll
push
add
in
inc
add
call
dec
push
mov
inc
cmpsb
into
test
pushf
in
addr16
push
or
add
xor
adc
aaa
ficoms
and
mov
add
xchg
add
and
cmpsl
cmp
cmp
inc
add
push
push
loopne
mov
gs
cmp
in
mov
inc
xchg
push
add
out
dec
push
fnstcw
or
in
bound
lahf
mov
insb
mov
add
xor
jo
or
mov
scas
repz
jmp
cmpsl
imul
and
mov
sar
sub
lahf
lret
les
dec
or
out
push
lcall
or
adc
mov
cmp
cltd
imul
scas
jno
jae
mov
mov
mov
mov
inc
in
push
jmp
movsb
rcr
ja
in
mov
dec
lea
mov
in
loop
lods
insl
mul
test
mov
outsb
inc
insb
adc
add
lahf
sub
adcl
add
clc
and
sbb
sbb
xchg
mov
aaa
mov
addl
xor
xor
pusha
add
enter
scas
jb
iret
fwait
fwait
mov
rcrb
push
inc
pop
outsb
inc
inc
add
pop
xor
std
test
xor
adc
mov
add
pop
rorl
repnz
adc
outsl
adc
sbb
and
add
shll
dec
fwait
shr
imul
js
test
mov
xor
add
fs
mov
imul
add
data16
shrl
xchg
add
mov
sub
dec
dec
cmpsl
popa
call
out
push
adc
sbb
in
pop
push
sahf
jl
insl
adc
or
sbb
xor
inc
add
mov
or
xlat
aaa
push
lock
sub
rcrl
stc
lret
fnstenv
mov
cmp
cltd
sbb
pop
rolb
cltd
dec
cwtl
clc
xor
les
stos
jl
int3
jle
imul
inc
add
xchg
imul
push
sbb
sbb
xchg
and
fwait
and
mov
scas
loop
xchg
adc
dec
sbb
or
cli
adc
std
ljmp
pop
addb
pusha
add
push
add
or
adc
adc
bound
xlat
push
pop
insb
xchg
insl
outsl
insl
pop
jle
sbb
dec
addb
in
and
mov
loopne
sub
mov
dec
mov
popa
pop
imul
test
pop
push
add
inc
cmc
xchg
iret
call
sub
mov
add
addl
sarb
add
jae
ret
cmpsb
js
les
sbb
jmp
inc
add
and
adc
insl
cwtl
pop
push
dec
imulb
hlt
lds
fistl
andl
mov
pop
push
in
mov
add
lock
outsl
cvtps2pd
adc
stos
lds
inc
sub
call
xlat
inc
add
lock
outsb
mov
leave
mov
ds
jae
cmp
nop
test
or
cltd
sar
andl
inc
add
pop
add
fdivl
mov
jnp
data16
pop
test
ret
loopne
into
or
mov
mov
loopne
mov
xchg
js
add
sub
push
pushf
call
inc
add
pop
pop
out
and
sbb
add
pop
in
and
sub
mov
xchg
mov
gs
fimuls
pushf
lret
out
mov
nop
xchg
mov
dec
mov
xchg
push
bound
lds
lret
or
xor
adc
aam
add
mov
push
mov
jno
repz
stos
fs
mov
xchg
ds
jno
aam
and
mov
fsts
push
adc
push
add
mov
addb
add
cli
cld
in
int3
rorl
xchg
dec
out
call
mov
and
pop
push
mov
or
add
jecxz
cmp
add
test
pop
xchg
and
fimuls
pop
and
xor
xchg
cli
jp
xor
fisubs
add
add
adc
outsb
push
xchg
dec
push
out
popa
pop
and
inc
adc
xor
mov
pop
pop
lcall
xlat
ja
jle
setns
mov
add
push
cmp
xor
add
hlt
aam
lcall
addr16
xchg
jbe
or
ret
jg
xlat
scas
loopne
mov
insb
test
add
inc
mov
add
mov
hlt
bound
push
je
les
dec
pop
ficoms
das
sbb
out
mov
fistl
jp
inc
add
rcl
dec
inc
xor
test
cli
cld
aas
leave
mov
mov
lds
dec
xor
decl
jmp
ret
test
xor
popf
xchg
repz
pop
repz
aaa
repnz
lahf
cmp
loop
pop
in
mov
or
cmpsl
lods
int3
cmc
aad
or
inc
adc
jns
sbb
bound
lret
pop
dec
or
push
inc
addl
lret
sahf
add
jecxz
cmc
inc
cmp
test
jb
ljmp
movsb
mov
cld
scas
mov
fcom
xchg
xor
add
lret
cltd
lods
pop
push
ljmp
add
mov
pop
dec
mov
cltd
dec
mov
retw
inc
add
test
imul
cmp
xchg
push
enter
lea
dec
mov
ja
ret
shll
insb
out
add
xor
call
xchg
mov
and
inc
daa
negl
dec
fsubl
mov
inc
into
sbb
fcompl
fs
movb
outsb
lret
lret
dec
sub
jp
mov
sti
add
jnp
and
fstpl
inc
add
mov
sbb
fwait
icebp
aaa
sbb
movsl
xor
aam
add
xchg
mov
jo
ror
pop
and
inc
sbbl
dec
push
adc
cmp
cmp
cltd
in
adc
call
sbb
popf
test
mov
in
mov
add
cs
inc
loop
sub
lock
dec
aam
mul
xlat
insl
lret
shlb
add
hlt
mov
jp
movb
sub
and
add
xor
in
into
adc
mov
and
or
sub
sub
sbb
movsb
sub
push
inc
add
xlat
sub
nop
mov
pop
push
jbe
test
mov
jl
xor
push
popa
mov
orl
out
mov
cltd
addb
aas
es
xor
adc
add
test
sti
xchg
aad
addr16
adc
push
push
cs
das
testl
iret
pop
daa
stc
clc
jnp
addb
pop
repnz
arpl
add
es
add
pop
jb
add
mov
fcompl
add
mov
in
sti
inc
in
test
icebp
lcall
inc
add
or
ret
ret
data16
movsl
mov
loope
loopne
lea
add
mov
sbb
xlat
inc
add
or
adc
iret
pusha
add
mov
add
inc
add
test
add
sbb
mov
add
add
shr
mov
mov
add
dec
sub
fstps
add
addr16
dec
or
pop
lahf
je
movsl
jo
stos
inc
add
fs
jp
sub
cltd
and
sbb
push
inc
add
inc
add
push
cli
aad
add
je
imul
lods
cld
leave
jb
lcall
and
negb
scas
xchg
aas
out
out
or
xchg
loopne
push
sbb
dec
cltd
jb
add
dec
add
inc
dec
insl
aad
xchg
push
pop
pop
add
popf
daa
xchg
imul
mov
arpl
lea
iret
andl
xchg
jbe
test
push
add
addb
sarb
add
test
out
xor
xor
mov
pop
jecxz
and
xor
sbb
outsb
loope
mov
jae
in
out
jae
int
xchg
jbe
popf
pop
mov
scas
or
adc
dec
shr
sub
mov
std
in
sbb
out
insl
sbb
push
negb
fcomp
and
popa
adc
add
loope
add
add
lahf
pop
mov
in
addb
xchg
cld
or
jecxz
jmp
lahf
xor
or
push
add
add
stos
iret
ret
dec
outsb
addl
call
ds
jmp
add
lret
mov
outsl
push
add
in
pop
push
sbb
xor
daa
and
aaa
adc
xor
push
cwtd
rorb
ret
es
push
add
ds
xor
test
mov
and
adc
mov
movsb
inc
add
lds
add
gs
inc
push
dec
xor
popf
movb
push
push
lock
and
imul
lods
mov
mov
cmp
adc
cmpsl
mov
movsb
stc
leave
inc
add
mov
mov
movb
push
popa
out
sub
xor
add
leave
mov
add
cmc
call
jg
sub
adc
or
add
add
data16
sahf
jl
imulb
mov
stos
cmp
mov
ret
dec
sub
pop
pop
xor
adc
out
xchg
fisttpll
adc
outsl
adc
popa
sub
leave
adc
aad
ja
mov
lds
mov
mov
add
cmp
push
subl
ret
outsl
mov
xor
xor
scas
lret
xchg
add
cs
dec
gs
jns
add
and
add
jb
daa
mov
popa
faddl
je
xor
dec
sub
xor
mov
jbe
mov
and
mov
xor
sar
cmp
lret
jg
pop
jmp
rolb
mov
iret
jl
jl
sbb
add
cmp
push
add
ja
sbb
fsubs
loopne
add
mov
lock
les
daa
aam
fmull
sarl
ret
mov
lahf
in
add
inc
add
movsb
ficomps
test
iret
stc
dec
out
call
and
add
push
and
pushf
and
pop
push
adc
les
loopne
lahf
cmp
daa
cs
dec
repz
les
cltd
push
outsb
inc
das
pop
cwtl
inc
add
pop
in
mov
jno
jne
clc
shll
out
jecxz
inc
add
jne
loopne
and
ret
lods
in
outsl
adc
add
push
fadds
or
sub
add
add
fadds
add
pop
in
or
loope
icebp
bound
or
out
std
inc
add
or
mov
xor
mov
cmp
hlt
adc
mov
addb
adc
stos
popf
and
cmp
add
cmp
jae
rcl
or
or
fsts
bound
pop
jp
inc
add
aad
and
adc
addb
mov
or
sbb
es
xor
ror
mov
lahf
leave
imul
dec
or
lock
mov
cmp
mov
aas
pop
jne
cmp
push
xchg
mov
adc
addb
mov
push
mov
lea
or
pop
jbe
lock
add
pop
sbb
add
mov
lret
jns
jno
movb
add
clc
fs
xor
sbb
movsb
pushf
lcall
add
cmp
ret
aaa
lds
out
push
add
mov
rcrl
insl
mov
test
aas
inc
add
cmpsl
addb
addr16
je
jo
ret
popa
leave
decl
fistps
repz
cld
mov
and
push
dec
jns
add
dec
mov
icebp
insl
outsl
pushaw
add
push
sub
daa
push
dec
scas
adc
push
out
xchg
or
mov
xor
push
inc
mov
pop
icebp
les
or
lcall
in
push
jg
push
loop
xchg
push
je
hlt
movb
add
mov
data16
add
mov
push
iret
xchg
lock
and
mov
aam
push
sub
push
fnstcw
cltd
pop
inc
ja
inc
pop
add
cmpsb
pushf
std
int
outsl
sub
add
add
rcr
add
jle
add
shr
pusha
add
les
lds
push
pop
mov
cmp
leave
push
dec
sub
data16
mov
mov
aaa
aaa
int
mov
xchg
insb
dec
hlt
mov
imul
ret
mov
sarl
stos
stc
ret
dec
outsl
ds
int3
fstps
icebp
push
cs
rcrb
push
add
bound
rcrb
push
imul
cmpsb
jmp
div
addb
xchg
sbb
ret
add
pop
mov
jae
cmp
mov
sub
mov
add
add
clc
gs
or
cmp
push
lahf
sub
mov
or
or
add
aas
iret
out
test
mov
addb
push
pushf
push
add
ds
mov
out
movsl
or
in
jl
shll
inc
add
fdivrl
jge
out
add
add
jl
add
mov
mov
mov
movsb
stc
adc
std
sbb
mov
sti
jne
ret
scas
cmp
fisubrs
jmp
jne
movsl
cltd
mov
jmp
add
inc
add
int
mov
mov
aas
mov
ds
jp
outsb
mov
inc
add
rolb
into
movsw
inc
add
mov
xor
repnz
jns
cld
ja
add
adcl
callw
jge
aam
ret
cmp
dec
sub
aaa
pop
sub
jbe
xchg
aaa
xchg
addb
js
imul
add
inc
add
movb
fcomps
cmpsl
fwait
data16
and
sub
xlat
adc
sbb
push
xchg
push
mov
cmpsl
xor
or
ss
xor
add
in
sub
jae
imul
add
push
push
adc
dec
cs
aad
test
mov
addr16
fcmovnbe
mov
push
push
push
clc
sub
or
mov
push
out
imul
or
mov
fcmovbe
es
popf
popa
mov
in
adc
addl
inc
add
hlt
daa
pushf
imul
add
fcoms
mov
jl
pmaddwd
add
stos
jge
xor
adc
xor
sbbl
xchg
sub
ljmp
push
in
pusha
add
add
les
ljmp
adc
add
mov
cmc
xor
clc
popl
xchg
push
hlt
adc
jmp
pop
mov
dec
movups
xor
add
add
add
jo
jae
pop
pop
or
add
add
imul
xor
jo
push
cmpsl
jp
and
divb
shll
pop
mov
add
mov
and
nop
fbstp
push
fistpll
push
and
sbb
sub
lcall
xchg
dec
out
lcall
pop
leave
stos
pop
add
sub
adc
jns
or
and
subl
rolb
bound
inc
lret
loopw
ficompl
test
add
stc
in
rcrb
movsl
sbb
mov
in
jp
cmp
push
dec
sbb
aad
std
dec
imul
fnsave
mov
rcrl
out
pushf
int3
dec
xchg
push
lret
fdivrs
or
xchg
fisttps
push
adc
xchg
push
add
inc
add
addb
repnz
test
add
adc
ljmp
fistl
xor
add
sub
adc
loopne
xor
rolb
sbb
pusha
add
cmp
adc
cli
imul
mov
addb
sub
outsl
call
push
and
add
mov
lret
test
pop
inc
xor
pop
addb
bound
icebp
ds
xchg
das
mov
add
mov
sub
insl
iret
jnp
jp
negb
gs
mov
shl
imul
jle
dec
outsb
mov
mov
xchg
fcomp
inc
add
add
pop
pmuludq
lahf
mov
shll
bound
sub
cltd
inc
ds
xchg
out
jmp
mov
adc
or
pop
cmc
loop
jmp
inc
xchg
xor
loop
pusha
add
mov
pop
rorb
fidivrl
dec
mov
xchg
push
jns
aas
cmpsb
mov
outsb
adc
add
sub
rorb
arpl
lock
ret
push
loope
dec
ror
adc
pop
push
xor
push
int
add
cmp
enter
jnp
fmuls
shll
cmp
and
xchg
adc
sti
int3
dec
hlt
jecxz
add
add
jecxz
add
je
rolb
cmpsl
mov
and
ja
cs
mov
std
jbe
mov
push
repz
add
mov
jnp
cmpl
insl
fdiv
insl
mov
insl
sub
adcl
jae
xchg
aam
mov
sub
stc
cmp
out
fisubl
add
push
cs
add
mov
sub
sub
add
add
mov
and
add
imul
mov
mov
arpl
xchg
mov
sbb
add
addr16
js
adc
stos
call
add
arpl
mov
sub
xchg
out
push
dec
in
add
or
stos
addb
in
int
sbb
jg
imul
push
add
les
sub
jne
cmpsl
mov
cmp
loop
in
add
aas
push
lods
fnstenv
daa
push
in
call
cli
xchg
sub
repz
scas
test
xchg
mov
pop
xchg
lahf
sti
in
xchg
mov
mov
xchg
addb
loop
xchg
mov
leave
imul
pop
add
popf
sub
push
subl
fdivl
add
mov
mov
xchg
xchg
push
jle
pop
sub
adc
mov
jbe
add
loopne
add
addb
push
sbb
dec
jmp
test
mov
mov
lcall
jno
pop
mov
sbb
xor
inc
jg
ret
out
outsb
xlat
test
push
mov
je
and
sbb
add
jecxz
loopne
jns
mov
mov
insb
xchg
jmp
jno
into
add
mov
inc
cwtl
rcrl
mov
add
pop
cmp
rcll
mull
mov
rolb
mov
pop
or
sbb
mov
je
loop
jno
pop
xor
mov
insl
xlat
lds
mov
dec
repz
xchg
push
and
sub
outsb
subl
add
fldl
cmpsb
sbb
popf
movb
cmc
mov
in
out
mov
fisttpll
sbb
movb
shrl
into
and
cmp
or
lods
pop
in
dec
lds
imul
bound
mov
xchg
dec
mov
xor
jb
cli
imul
add
popf
mov
mov
add
dec
push
cs
push
les
jno
xchg
adc
pop
sub
mov
xchg
js
cmp
xor
add
xor
add
push
imul
insl
loope
loopne
dec
movb
bnd
das
test
or
inc
cmpsb
xchg
mov
cmp
add
xchg
sub
dec
int3
fwait
jne
sub
mov
mov
jne
shr
int
xchg
aad
cmc
std
movsb
pop
scas
sbb
dec
fs
nop
mov
scas
mov
repz
sub
cmp
dec
inc
cmp
jge
or
fwait
add
sub
cld
gs
pop
cmp
cmpl
test
inc
add
mov
out
and
ja
insb
int3
cli
in
movsb
jne
lret
outsl
sub
or
fcoml
adc
inc
and
enter
pop
insl
push
pushf
inc
add
es
mov
sub
or
fdiv
out
out
bound
aad
add
das
dec
sub
pop
rcrb
add
into
movb
inc
and
jmp
push
ljmp
lds
inc
push
movsl
pop
jge
cmpsl
jecxz
pop
jmp
lds
dec
cmp
xchg
hlt
jae
pop
call
jmp
in
pop
add
cwtl
fbstp
add
add
xor
sbb
movb
incl
and
imul
xchg
das
xlat
pop
movsl
add
xchg
stos
jns
in
pop
pop
hlt
addr16
xchg
cs
ss
aaa
add
add
loop
jb
sbb
pop
repnz
push
add
xchg
dec
repnz
insb
mov
arpl
pop
push
and
outsb
push
jmp
push
sbb
cmp
push
push
add
movb
test
adc
lret
xchg
outsb
loopne
mov
xor
std
in
cwtl
jo
test
mov
imul
xor
arpl
roll
add
mov
lret
out
les
inc
lock
shrb
xchg
dec
xchg
test
addr16
ds
mov
cmc
jns
mov
rolb
ss
adc
add
cmpsb
xor
imul
aam
cs
dec
ja
cmp
imul
and
cmpsb
xchg
cmp
mov
loopne
mov
out
or
ds
xor
adc
add
mov
add
or
or
mov
mov
inc
pop
sub
mov
add
pop
sub
daa
push
ret
pop
adc
dec
xchg
lahf
jmp
shll
sub
add
sub
add
mov
loope
andl
sbb
mov
mov
mov
and
jle
mov
dec
pop
or
push
xchg
adc
rolb
dec
test
movb
dec
dec
gs
aas
mov
pushf
fcomps
roll
adc
add
mov
fimuls
insb
and
cltd
in
insb
fs
fisubrl
push
and
or
pop
fadd
xchg
adc
add
xchg
insl
mov
in
adc
icebp
sbb
xor
es
inc
gs
fdiv
int
das
hlt
pop
aam
sub
pop
movsl
mov
iret
mov
jge
dec
outsb
dec
cmp
add
and
add
lret
push
dec
scas
scas
lods
pushf
pop
popaw
mov
into
enter
add
out
out
sub
add
std
loope
ljmp
add
aad
dec
jge
add
xor
ljmp
addr16
arpl
gs
adc
mov
pushl
imul
dec
out
or
add
imul
aaa
mov
mov
push
mov
lcall
insl
andl
jl
jno
out
mov
add
jns
add
add
shll
cltd
jle
jp
imul
test
scas
inc
lahf
aam
repz
xchg
jp
add
or
add
sbb
lods
adc
or
pop
mov
push
sub
jge
clc
mov
loop
ja
inc
ret
out
xchg
shll
in
in
stos
pop
insl
lock
testl
fcomip
mov
or
pop
out
jb
mov
fisubs
dec
jb
mov
repnz
test
mov
xchg
mov
into
sbb
dec
jb
xor
dec
stos
inc
add
addl
popa
xchg
mov
dec
add
pop
xchg
cmc
pop
jb
push
iret
lahf
stos
xchg
outsl
add
aad
hlt
stos
and
mov
fidivl
push
add
inc
add
data16
cmc
outsb
xchg
inc
loopne
xlat
into
cmpsl
jno
fwait
xor
jle
push
mov
inc
int
sbb
mov
mov
loopne
sbb
dec
cmp
mov
add
and
femms
clc
xchg
xchg
fisttps
push
inc
loopne
jae
shll
adc
cmp
dec
xchg
addb
mov
xchg
sti
dec
mov
mov
jne
add
xor
xchg
daa
sbb
jge
ret
or
xorl
sahf
pop
les
adc
add
fldl
sbb
xchg
push
stc
fldl
rolb
mov
icebp
fnstsw
sbb
jbe
gs
ret
lods
lcall
jb
orl
add
pop
arpl
ds
xchg
cmpsl
jns
arpl
sub
xchg
sbb
add
ljmp
iret
mov
or
stos
loope
mov
inc
sahf
aaa
or
pop
push
ljmp
cmp
cli
sarl
test
jp
push
add
fimull
xchg
pop
movb
or
lea
add
loop
add
insb
cltd
fs
subl
ja
cld
je
pop
shll
jb
jb
lock
mov
add
int
mov
cmp
pop
sub
dec
cmp
mov
dec
xor
aam
out
fadds
inc
out
rolb
addb
dec
cmp
lea
mov
scas
stos
and
mov
pop
pop
addb
or
jl
mov
stc
mov
add
dec
cmp
dec
popf
out
fcomps
dec
fdivl
inc
add
pushw
add
sti
dec
xchg
rolb
mov
stos
sbb
sub
mov
pop
decl
addr16
ja
divb
es
mul
sbb
push
push
in
incb
ljmp
pop
scas
aaa
xchg
fsubl
clc
and
out
mov
jo
sbb
jb
mov
gs
scas
adc
sbb
pop
push
sub
es
lods
movsl
mov
or
dec
push
sbb
in
int3
sbb
and
xorl
cmc
addb
add
insb
cwtl
add
sub
lods
cmpsb
sahf
test
xchg
xchg
xor
addb
pop
push
or
fstl
push
add
cmpsb
xor
dec
mov
rolb
scas
mov
clc
adc
in
in
xchg
sub
inc
add
sub
inc
pop
and
push
jmp
add
filds
mov
inc
add
bound
inc
add
and
add
dec
in
negl
add
mov
mov
in
in
stos
in
hlt
repnz
xchg
xor
add
add
pop
mov
nop
cmp
cltd
rolb
dec
mov
loop
xchg
jns
clc
sahf
cmp
stos
jno
fcoml
mov
stos
aas
repnz
nop
mov
add
push
sub
adc
testl
inc
add
loop
scas
test
lret
clc
push
testb
scas
lods
dec
jb
pop
insl
and
inc
add
je
arpl
fcompl
sbb
mov
loop
into
leave
shll
rcrl
cmp
push
pop
iret
notb
pop
ljmp
aam
xor
lcall
inc
sbb
add
sub
stc
test
add
xor
or
inc
add
push
jge
lods
fwait
pop
lcall
add
and
pop
fwait
hlt
je
mov
addr16
es
sub
xchg
sub
inc
add
addr16
into
stc
out
out
aam
adc
jbe
mov
push
jae
mov
inc
add
cmp
dec
jg
cmp
push
mov
sbb
add
aam
sbb
add
or
jbe
and
mov
popf
es
xor
lock
add
lahf
cmp
fwait
stos
pop
pop
and
adc
rcrb
push
add
push
imul
add
aad
es
popl
test
inc
add
adc
add
dec
add
mov
xor
mov
stos
add
sbb
push
mov
sub
test
jge
stos
push
pop
lods
pop
stos
jg
fnstcw
push
add
add
pop
add
cmp
scas
sbb
xor
jb
imul
addb
dec
in
sti
mov
popf
daa
dec
movb
insl
push
and
jecxz
scas
pop
mov
lods
jo
insb
nop
test
add
lahf
push
movsb
inc
das
es
xchg
dec
sti
std
scas
or
fsts
cmp
add
cmp
add
add
push
jmp
frstor
jle
cmp
lcall
mov
sub
cmp
jp
push
add
xchg
adcl
push
or
int3
stos
mov
leave
xor
das
mov
add
mov
xlat
filds
and
push
decb
mov
pop
stos
jg
gs
lock
ret
lods
dec
inc
add
cmc
mov
mov
repz
cmp
scas
in
pop
adc
loopne
lds
xchg
cmp
push
scas
push
cmp
mov
imul
mov
add
mov
mov
dec
xor
in
add
outsl
lods
dec
loope
aaa
jb
mov
pop
xor
loopne
lock
bnd
lods
std
movsl
dec
pop
inc
add
push
add
out
mov
push
add
outsb
ljmp
movsb
leave
pop
and
sbb
and
push
jle
inc
add
add
fnstsw
test
mov
cmp
mov
jge
int3
inc
pushf
clc
clc
dec
sbb
lds
xlat
test
push
mov
inc
scas
int
and
pop
cwtl
inc
repz
mov
jle
pop
xchg
rclb
addl
mov
adc
aaa
push
ljmp
repz
add
xchg
pop
sti
outsb
jp
sub
fdivp
mov
xchg
cmp
fisubs
mov
pop
mov
out
add
stos
ljmp
movsb
push
push
sti
ljmp
adc
sub
jle
dec
jge
push
push
ret
inc
mov
jno
fdivrs
in
insb
inc
sbb
mov
push
incl
mov
dec
decl
dec
repz
pop
ret
ja
lea
xor
jno
mov
std
js
fcmove
add
dec
fcomp
xor
pop
rol
sti
les
pop
insb
out
sahf
bound
sub
gs
cli
out
and
cltd
in
lret
mov
hlt
dec
adc
cmp
inc
in
lahf
dec
jmp
and
jge
add
testb
into
ret
jge
or
xchg
xchg
lods
mov
xchg
imul
sbbl
cs
cmp
add
xor
dec
aam
inc
add
add
and
stos
inc
add
add
jle
test
cltd
ja
pop
in
xor
das
pushf
iret
repnz
test
sub
add
int3
inc
int3
and
cwtl
in
cmp
sub
fimuls
xor
inc
add
add
add
movsl
outsb
xor
and
sbb
and
cmpsl
mov
scas
es
or
mov
lea
or
push
push
mov
jge
lret
xchg
jl
fdivrs
popf
outsl
sbb
add
adc
push
jmp
xor
jns
jg
sbb
fldt
add
mov
jbe
outsl
adc
mov
add
movsb
xor
add
iret
sahf
add
into
ja
and
add
movsb
pop
xor
push
sbb
test
xchg
push
jp
pop
sub
sub
stos
add
out
ss
mov
push
insb
sti
xchg
xchg
cmpsb
jae
mov
mov
mov
fcom
outsl
lds
add
add
jne
repnz
xor
insb
fldenv
sti
jno
shll
mov
sbbl
loop
add
and
repz
ficoms
sete
sbb
stc
push
jge
push
xchg
mov
addb
out
movsb
mov
cmp
mov
push
rolb
mov
shll
push
testb
and
mov
and
movb
addb
add
hlt
mov
push
jle
and
inc
pusha
add
rcll
mov
pop
addb
imull
xlat
outsl
add
into
movb
inc
add
dec
dec
pop
inc
xchg
sbb
fbstp
rcrl
dec
cmp
fidivrs
jecxz
pop
push
and
or
jecxz
sbb
subl
sarl
emms
and
bound
lcall
sti
dec
mov
movb
lahf
sbb
dec
aas
in
rorl
loop
out
and
xchg
inc
add
add
out
jns
sbb
icebp
popf
pop
mov
xchg
movsl
out
repz
xchg
dec
push
sbb
aam
xor
xor
fwait
cmp
int3
cltd
xchg
mov
sbb
sub
movsb
outsb
cmpsb
shlb
jg
leave
mov
ret
ror
movsb
mov
leave
xchg
or
mov
sarl
mov
jbe
outsb
sahf
enter
pop
hlt
shr
clc
and
cmp
lcall
dec
and
push
jmp
mov
lcall
inc
or
aam
in
mov
mov
mov
cld
aas
jno
or
sbb
rcll
mov
stos
ja
add
aam
pop
aad
mov
loop
in
leave
mov
mov
jns
dec
inc
add
sub
gs
fs
lret
out
mov
out
sub
cmp
in
xor
pop
test
fs
mov
inc
loop
cwtl
xchg
aas
jg
mov
dec
movups
cmp
push
mov
pop
into
sub
jmp
pop
out
and
jb
clc
lods
les
subl
mull
add
dec
inc
add
shll
pop
xor
push
sti
pop
cli
pop
scas
in
sahf
or
test
pop
div
outsl
jg
fs
scas
fisttpl
or
cmp
and
dec
adc
arpl
jbe
sub
mov
jl
adc
test
mov
sahf
xchg
add
in
xchg
xor
add
jb
retw
out
je
jge
cld
pop
mov
rcrb
lcall
lahf
adc
pushf
and
inc
add
movsl
xchg
xor
test
cmp
pop
ljmp
mov
add
jg
insl
inc
add
ficompl
pop
call
jle
testl
jg
push
imul
les
lods
push
test
mov
and
jmp
daa
push
cmp
xchg
add
in
call
popf
ds
out
pop
fs
in
and
in
pop
mov
std
daa
adc
in
fs
mov
mov
add
or
add
cld
or
loopne
sbbl
int
imul
pushf
cmp
fisttpll
mov
lret
rolb
lsl
mov
pop
mov
cmp
adc
dec
cmp
xchg
rcrl
dec
jo
jl
xor
mov
dec
dec
pop
cli
inc
or
fidivs
rolb
inc
pop
jmp
out
push
das
xchg
jle
or
fisubl
mov
out
into
outsb
adc
mov
pop
cwtl
fisttpll
gs
fisttpll
dec
pop
leave
jne
and
push
sti
call
into
stos
cmp
cmp
add
add
mov
lahf
test
inc
add
xor
cwtl
pop
xor
jb
pop
cwtl
push
jg
inc
pop
add
or
add
add
mov
les
rcrl
fs
insl
adc
leave
and
push
push
inc
add
or
lock
jg
push
rolb
cmpsb
mov
pop
xlat
inc
add
jl
imul
xchg
mov
mov
xor
faddl
inc
cmp
push
scas
adc
cmp
stos
mov
mov
test
add
je
add
sahf
movb
in
pusha
add
jae
xchg
inc
and
mov
push
lea
and
or
add
mov
aaa
xchg
mov
or
iret
lods
push
imul
roll
imul
push
cmp
shrl
dec
cmp
es
push
pushf
mov
pop
mov
mov
jp
add
jae
add
popf
xor
sub
stc
mov
mov
ror
cmp
sbb
inc
add
add
test
fdivrl
test
lods
hlt
ljmp
cmp
jl
inc
push
aaa
ret
or
xor
xlat
xchg
hlt
mov
sbb
mov
mov
lea
ret
test
add
inc
inc
push
push
pop
je
fbld
scas
xor
xor
xor
ljmp
dec
les
jge
in
push
mov
jo
negl
lods
xor
mov
mov
movsb
sbb
loopne
add
inc
jno
mov
and
mov
sbb
addb
lods
les
iret
repz
dec
add
cmp
rorl
cmp
pusha
add
xchg
movsb
jno
sbb
out
shrl
lock
sbb
cwtl
shr
cmp
pop
dec
push
mov
push
and
add
rolb
push
sbb
pop
cli
pop
sbb
out
hlt
movb
pop
inc
add
cmp
jp
loope
pop
outsb
shlb
fistps
ja
add
add
rorl
lods
jbe
scas
jge
or
ljmp
movsb
into
enter
idivb
add
adc
jecxz
enter
nop
sbb
in
out
jmp
in
adc
sub
and
xor
mov
dec
pop
pop
jl
insb
sarl
std
movsl
push
inc
add
add
addb
test
test
cmp
add
ds
xor
aaa
sahf
dec
cmp
xchg
aaa
test
gs
xlat
in
mov
or
adc
cs
push
mov
into
adc
add
les
es
or
pop
ss
push
xchg
fstps
add
into
je
jecxz
mov
and
pop
xor
add
add
rolb
push
jae
lcall
add
popf
pop
call
push
pop
repz
and
or
mov
add
fcomip
mov
xor
negl
cmpsl
xchg
cs
or
jno
pusha
add
add
rolb
jge
fldt
inc
es
sub
rolb
sbb
sahf
in
xor
add
xor
lock
ret
addb
gs
mov
push
pop
and
shl
aas
pop
ja
push
mov
pop
add
xlat
inc
add
fs
repnz
xchg
fadd
popf
scas
stos
pop
jg
addb
clc
daa
shll
and
int
cmp
lds
cmp
mov
popa
into
pop
icebp
int3
in
lret
loop
fwait
ret
inc
add
xchg
enter
inc
add
test
mov
call
ret
faddl
clc
les
aas
pop
dec
dec
xor
aad
xchg
repz
or
loope
add
out
lds
inc
add
mov
adc
inc
add
into
out
and
jns
in
call
int
outsl
or
jne
add
ret
pop
test
mulb
add
test
or
sbb
rolb
xchg
in
ficoms
xchg
lcall
addb
dec
mov
push
out
push
inc
mov
sub
add
repnz
add
arpl
popa
dec
sbb
cmpl
dec
addr16
jns
ror
push
xor
pushf
mov
xor
inc
subl
into
xchg
mov
imul
inc
jne
jb
popfw
add
test
nop
cmp
pop
sub
push
pop
negl
mov
flds
xchg
inc
add
add
call
inc
add
jns
lods
ret
cli
xor
add
loopne
std
sub
loopne
push
push
adc
inc
add
xor
dec
jne
fs
add
cmc
push
stos
in
mov
nop
jmp
add
sub
pop
stc
jb
test
jns
add
pop
add
mov
nop
jmp
mov
and
scas
push
push
mov
xchg
ret
sub
pop
push
stc
jb
or
test
mov
adc
lds
jmp
out
adc
add
xor
sti
call
stc
jb
add
add
ret
mov
or
jb
pop
or
mov
mov
xor
add
stc
jb
add
nop
jmp
push
xor
add
test
mov
inc
push
mov
xchg
ret
add
jl
sub
subb
add
add
inc
rorb
addb
add
add
in
testl
push
mov
xchg
ret
flds
test
dec
push
push
mov
xchg
ret
add
fldenv
mov
mov
add
add
add
sub
mov
stc
jb
xchg
add
mov
stc
jb
add
add
push
mov
xchg
ret
mov
je
nop
jmp
add
and
mov
jb
fistpll
add
daa
add
jmp
test
jb
fwait
add
pop
cmpl
nop
jmp
mov
jns
das
mov
stc
jb
test
mov
nop
jmp
xchg
divl
add
push
mov
repnz
stc
jb
rolb
xchg
sub
add
in
xor
mov
add
add
add
add
add
or
mov
stc
jb
mov
add
add
adc
jb
mov
and
add
add
mov
push
or
add
adc
dec
push
push
mov
xchg
ret
sti
adc
cmp
dec
cmp
jmp
mov
add
add
add
add
pop
push
mov
xchg
ret
xchg
add
out
mov
stc
jb
add
add
add
mov
nop
jmp
add
das
test
dec
nop
jmp
add
xor
add
or
cld
or
or
add
add
add
es
stc
jb
add
sub
stc
jb
add
fistpll
add
push
stos
push
mov
xchg
ret
rol
add
mov
orb
lcall
mov
call
stc
jb
and
add
insb
mov
stc
jb
jnp
fcompl
orl
dec
adc
jb
das
jbe
jecxz
add
push
lock
add
add
and
push
stc
jb
add
mov
add
add
jecxz
mov
add
add
incl
add
jecxz
push
push
mov
xchg
ret
add
add
stc
jb
faddl
add
add
fldt
stc
jb
add
add
add
cmp
add
xchg
ret
sti
add
aad
jmp
push
mov
xchg
ret
xchg
fildl
cmp
sbb
mov
sub
ret
add
add
push
pusha
stc
jb
jnp
or
add
addb
jne
stc
jb
cmp
in
pop
mov
push
stc
jb
add
or
testl
pop
stc
jb
add
add
jmp
or
dec
mov
out
mov
jmp
add
addb
leave
stc
jb
sar
dec
add
add
out
pop
push
mov
xchg
ret
sti
shr
mov
stc
jb
test
add
push
cmpsl
outsl
mov
stc
jb
fwait
dec
add
push
mov
xchg
ret
sarb
dec
or
jb
add
cli
add
stc
jb
das
add
add
mov
mov
xchg
ret
jmp
add
stc
jb
add
add
add
lret
mov
nop
jmp
add
add
add
mov
stc
jb
add
add
add
sub
xor
add
add
jnp
push
addl
pushl
das
mov
stc
jb
add
in
std
ret
stc
jb
pop
movl
test
stc
jb
jns
add
add
cmp
stc
jb
pop
add
pop
add
addps
jb
cmp
testl
rolb
and
stc
jb
xor
xchg
jns
fadds
jg
stc
jb
add
mov
add
jb
das
dec
push
xchg
inc
sub
bound
jb
add
pop
add
call
push
mov
xchg
ret
test
or
leave
mov
push
mov
xchg
ret
jbe
sub
dec
mov
stc
jb
add
add
add
movsl
or
inc
push
add
add
add
xor
add
stc
jb
fwait
add
push
rclb
add
subb
add
add
stc
jb
add
add
mov
fimull
xorb
add
in
add
add
add
stc
jb
faddl
add
stc
jb
pop
or
add
add
addb
iret
not
push
mov
xchg
ret
add
flds
aas
mov
stc
jb
andb
add
mov
xchg
ret
add
subb
sub
jb
adc
push
and
jl
aam
add
stc
jb
add
lock
dec
add
jb
add
testl
push
push
mov
xchg
ret
daa
add
xchg
cmp
jb
add
add
push
add
mov
push
mov
xchg
ret
add
test
nop
jmp
add
addb
lea
push
mov
xchg
ret
das
add
mov
push
mov
xchg
ret
addb
adc
icebp
push
add
inc
stc
jb
flds
add
in
sub
jns
push
mov
lock
add
rcr
add
add
add
add
jle
stc
jb
add
in
mov
add
shr
nop
jmp
sub
dec
and
add
icebp
stc
jb
fdiv
in
dec
sub
inc
sub
jb
lock
add
add
xor
push
mov
xchg
ret
add
add
lret
jmp
incb
rorb
jmp
sahf
mov
stc
jb
add
add
cwtl
subl
stc
jb
rolb
inc
mov
adc
dec
adc
add
dec
add
add
lock
aaa
std
push
push
mov
xchg
ret
addb
incb
out
lea
stc
jb
pushf
mov
cmp
das
aas
xchg
stc
jb
add
add
add
push
jl
mov
push
mov
xchg
ret
divl
rolb
mov
and
stc
jb
add
add
add
test
dec
cld
lcall
add
add
add
nop
jmp
cmpb
xchg
add
mov
and
lds
push
mov
xchg
ret
add
pop
add
in
inc
push
mov
xchg
ret
jnp
mov
inc
in
push
mov
xchg
ret
mov
les
stc
jb
add
das
jmp
inc
and
stc
jb
lock
inc
leave
mov
stc
jb
fbstp
mov
jmp
add
pop
sbbb
repz
mov
stc
jb
testl
movb
ja
jge
iret
or
sbb
add
sub
pushf
add
stc
jb
dec
dec
das
mov
mov
push
mov
xchg
ret
add
add
add
push
add
addb
mov
stc
jb
add
add
xchg
xor
call
stc
jb
xchg
mov
add
add
jmp
stc
jb
or
pushf
add
jbe
push
mov
xchg
ret
add
cmpw
stc
jb
add
incb
push
add
add
add
movl
cmp
fdivr
inc
add
sti
add
jmp
or
movl
call
nop
jmp
jecxz
add
pop
adc
mov
stc
jb
add
jb
add
add
pop
stc
jb
add
add
movb
jne
les
stc
jb
add
add
mov
sub
ret
push
filds
mov
jmp
stc
jb
add
inc
xor
stc
jb
add
mov
stc
jb
add
pop
das
testl
inc
add
and
xor
push
mov
xchg
ret
frndint
add
adc
cld
jmp
nop
jmp
sub
rcrl
mov
stc
jb
mov
push
mov
add
push
mov
xchg
ret
add
add
rclb
ljmp
add
push
push
mov
xchg
ret
mov
pushf
and
sbb
jb
movb
or
add
mov
add
stc
jb
add
mov
jb
add
or
add
jmp
test
hlt
stc
jb
add
cld
adc
out
in
mov
jb
push
add
mov
xor
add
stc
jb
cld
mov
push
popf
pushl
nop
jmp
add
add
subb
add
add
fwait
add
jnp
cmp
jo
add
add
incl
add
add
pop
nop
jmp
add
mov
and
push
add
sub
add
add
jns
aam
jmp
sbbb
incl
add
dec
add
add
jb
adc
fsts
pusha
stc
jb
sti
rolb
das
add
movb
cmp
nop
jmp
add
out
add
jmp
push
mov
xchg
ret
rolb
add
fadd
jmp
hlt
inc
add
faddl
add
nop
jmp
sub
flds
or
les
jb
jbe
addb
pushf
cwtl
mov
nop
jmp
pop
test
mov
ret
in
mov
in
add
mov
push
mov
xchg
ret
incl
pushf
loope
pop
decl
push
mov
xchg
ret
pop
mov
and
jb
add
in
add
jecxz
cmp
nop
jmp
inc
add
add
clc
mov
stc
jb
add
pop
add
mov
stc
jb
push
sub
rclb
push
clc
inc
add
add
add
addb
add
mov
cmp
cmp
add
cld
xor
nop
jmp
add
add
flds
ss
jb
and
add
xorb
incb
xchg
ret
add
neg
add
mov
stc
jb
mov
add
jnp
addb
add
sub
add
add
subb
das
daa
mov
add
mov
xchg
ret
add
push
stc
jb
add
add
mov
add
jb
add
add
movb
mov
xchg
ret
rolb
dec
push
push
mov
xchg
ret
add
outsl
cs
stc
jb
add
add
jmp
stc
jb
mov
sti
rorb
xchg
push
add
stc
jb
jecxz
add
leave
push
push
mov
xchg
ret
pop
or
add
add
jb
or
add
mov
stc
jb
add
inc
xchg
mov
pop
pop
add
mov
mov
jecxz
and
push
push
mov
xchg
ret
add
out
add
mov
add
stc
jb
add
push
xor
and
stc
jb
and
cld
mov
mov
stc
jb
das
adc
fsubl
sbb
xor
add
stc
jb
fwait
adc
mov
nop
jmp
add
add
add
movb
jb
mov
jbe
jl
mov
stc
jb
movb
imull
out
orl
xor
jb
add
mov
jne
stc
jb
sti
jl
jns
repz
jb
dec
jns
divl
nop
jmp
add
add
add
sub
nop
jmp
add
flds
add
push
mov
xchg
ret
inc
jecxz
sbb
in
mov
dec
fsub
or
test
push
mov
xchg
ret
add
add
lret
add
push
mov
xchg
ret
add
shlb
mov
xchg
ret
in
movl
jb
test
mov
add
push
push
mov
xchg
ret
xorb
addb
stc
jb
add
jl
pop
push
stc
jb
add
add
test
rclb
add
xchg
ret
add
add
pop
push
mov
xchg
ret
xor
add
or
ret
stc
jb
fildl
add
add
add
addb
push
nop
jmp
add
cld
jnp
fbld
in
dec
ror
stc
jb
mov
jmp
jb
jl
and
inc
fucomip
mov
call
add
add
mov
stc
jb
add
add
mov
scas
adc
add
jb
add
fdivl
into
hlt
inc
add
cmp
or
jl
inc
and
jb
add
cmp
fildll
or
add
jb
fadd
mov
sub
addb
add
add
pop
push
mov
xchg
ret
fadd
add
xchg
add
rep
stc
jb
frndint
add
jle
add
add
add
lret
sub
ljmp
jbe
flds
adc
sbb
jb
flds
rorb
leave
sub
jb
add
add
inc
and
jb
add
add
add
add
add
stc
jb
cmp
push
xchg
sub
fldt
mov
xchg
pop
add
add
test
add
fwait
and
outsl
arpl
add
jb
mov
add
mov
mov
push
mov
xchg
ret
fsts
or
add
mov
in
je
stc
jb
mov
mov
stc
jb
add
negl
jg
push
mov
xchg
ret
pop
pop
add
add
rep
stc
jb
mov
add
imul
sbbb
push
or
movb
mov
addb
add
pop
lock
or
add
xchg
adc
pop
add
xchg
ret
pushf
add
sub
push
mov
xchg
ret
pop
jns
add
incl
in
mov
add
and
stc
jb
jns
add
mov
mov
push
push
add
nop
jmp
add
lock
pushf
push
stc
jb
sub
add
xchg
dec
mov
stc
jb
add
jnp
nop
jmp
test
inc
testl
ret
mov
jb
flds
out
add
jmp
jb
add
cmp
add
int
mov
adc
jmp
add
add
test
stc
jb
mov
add
sub
stc
jb
faddl
add
add
add
and
nop
jmp
pop
add
inc
test
add
jb
add
addb
jmp
xchg
lcall
mov
jnp
add
out
stc
jb
add
inc
adc
mov
xchg
ret
add
add
jae
lea
stc
jb
add
add
add
stc
jb
out
add
and
das
xlat
outsl
mov
stc
jb
push
push
mov
mov
push
mov
xchg
ret
add
jnp
cmp
nop
jmp
test
add
add
mov
pop
div
nop
jmp
add
add
jo
push
stc
jb
add
filds
mov
lahf
and
stc
jb
add
inc
mov
add
stc
jb
add
add
sbbl
stc
jb
dec
xor
outsb
pop
nop
jmp
add
fwait
mov
cld
push
add
push
stc
jb
and
or
jl
ret
push
mov
xchg
ret
and
cmp
mov
jecxz
inc
add
test
jb
in
mov
jb
add
add
add
add
and
test
nop
jmp
pushf
add
add
mov
add
call
incl
mov
add
add
jb
fwait
div
stc
jb
sub
adc
sub
jmp
incl
cmp
add
or
or
cltd
out
stc
jb
fildl
add
push
shrl
call
nop
jmp
filds
movl
je
stc
jb
add
arpl
stc
jb
jecxz
add
push
mov
xchg
ret
add
movl
jb
or
pop
push
mov
xchg
ret
add
fwait
add
mov
int
add
add
das
add
add
adc
mov
pop
push
mov
xchg
ret
add
add
add
lea
push
mov
xchg
ret
add
xchg
jno
pusha
stc
jb
add
add
pushf
add
addr16
popl
stc
jb
jbe
add
add
sub
stc
jb
adc
test
add
rclb
loope
add
push
mov
xor
fwait
mov
stc
jb
in
sub
add
and
nop
jmp
xor
add
testl
test
or
add
decl
scas
push
stc
jb
or
mov
adc
add
add
add
stc
jb
add
add
dec
nop
jmp
cmp
push
xchg
add
out
add
push
stc
jb
add
pushf
or
pusha
stc
jb
add
fildl
add
add
out
inc
add
add
daa
add
jge
stc
jb
add
mov
in
cltd
push
stc
jb
mov
mov
push
jp
push
mov
xchg
ret
add
dec
push
stc
jb
add
add
add
rolb
insb
shl
stc
jb
addb
adc
xchg
mov
jb
add
mov
add
push
mov
xchg
ret
add
add
xchg
lds
sar
jb
cld
and
add
jp
jbe
stc
jb
fbld
rclb
std
inc
add
or
push
mov
push
push
mov
xchg
ret
and
add
pop
dec
push
nop
jmp
push
pop
in
dec
add
decl
push
mov
xchg
ret
das
add
stc
jb
push
add
add
call
stc
jb
mov
and
sysexit
push
addl
clc
decl
add
jecxz
jb
xor
stc
jb
jbe
and
inc
push
push
sbb
jb
pop
add
xchg
subb
mov
stc
jb
mov
push
mov
xchg
ret
rolb
call
stc
jb
incb
jbe
stos
push
push
mov
xchg
ret
xor
add
push
jb
sub
or
add
and
push
stc
jb
push
push
add
movl
sbb
push
sub
add
inc
add
jnp
pop
xor
out
sarl
add
jb
mov
sub
cld
push
push
mov
xchg
ret
cmp
mov
add
decl
push
mov
xchg
ret
add
add
add
incl
add
add
dec
pop
stc
jb
add
add
add
jns
inc
add
les
cwtl
mov
push
mov
xchg
ret
mov
jns
cs
stc
jb
push
jecxz
add
mov
xchg
ret
add
and
stc
jb
add
mov
jl
dec
mov
stc
jb
add
fildl
add
stc
jb
daa
add
sahf
push
push
mov
xchg
ret
cmp
add
add
adc
jb
dec
add
add
out
ret
es
sahf
cmp
push
mov
xchg
ret
xchg
add
mov
jo
add
jb
faddl
add
and
stc
jb
add
and
push
mov
cmpsb
add
add
pop
call
add
mov
xchg
ret
add
shlb
mov
stc
jb
add
jnp
and
in
add
add
stc
jb
fildl
movsb
dec
testl
nop
jmp
sub
sub
jno
add
add
add
add
push
pop
popa
push
mov
xchg
ret
add
add
add
test
out
stc
jb
testl
movzwl
stc
jb
filds
or
inc
popf
add
stc
jb
jnp
push
add
dec
inc
xchg
adc
jb
mov
add
or
jb
inc
add
add
mov
xor
incl
add
add
push
add
add
add
jb
add
mov
je
nop
jmp
add
cmpw
nop
jmp
das
add
add
int3
mov
stc
jb
add
test
mov
stc
jb
xchg
mov
mov
sbb
movb
xchg
ret
push
sub
push
push
mov
xchg
ret
add
push
push
mov
xchg
ret
xor
mov
add
add
nop
jmp
push
filds
add
add
add
filds
add
xor
aas
lods
stc
jb
and
in
fsin
incb
xor
call
stc
jb
xchg
add
push
push
mov
xchg
ret
xchg
adc
push
shlb
xor
stc
jb
add
add
jbe
pushf
xchg
pushf
mov
stc
jb
add
add
add
and
stc
jb
push
add
add
add
inc
add
incl
add
mov
add
movl
stc
jb
xor
add
ljmp
fwait
cmp
xchg
sub
mov
push
nop
jmp
fcoml
mov
stc
jb
add
add
das
xor
add
stc
jb
add
cmpsl
mov
push
add
xchg
ret
adc
pop
orb
add
add
out
pop
mov
stc
jb
push
add
add
jp
inc
add
or
sub
add
adc
testl
stc
jb
add
dec
adc
jmp
xor
add
add
fistl
call
add
push
mov
jb
mov
add
add
add
stc
jb
add
xor
add
stc
jb
out
out
jmp
or
add
stc
jb
das
lock
push
mov
xchg
ret
add
jecxz
add
incl
test
add
cmpsl
add
add
lock
add
or
jp
inc
gs
nop
jmp
jmp
scas
sub
nop
jmp
mov
add
rolb
mov
push
mov
xchg
ret
sub
inc
add
mov
jb
xchg
jns
mov
inc
add
call
stc
jb
mov
add
pop
pop
stc
jb
add
or
movsl
out
mov
stc
jb
add
xor
dec
jmp
stc
jb
add
inc
loopne
mov
xchg
ret
addb
fs
add
stc
jb
lock
inc
hlt
sbb
jmp
mov
xchg
ret
add
pop
add
pop
stc
jb
add
pop
out
fwait
daa
daa
call
in
inc
add
add
sub
cmp
jb
add
cld
add
in
add
je
stc
jb
add
push
pusha
stc
jb
jmp
sub
stc
jb
in
jmp
add
cs
nop
jmp
sub
add
add
xchg
jne
jne
stc
jb
test
xchg
inc
out
push
stc
jb
add
add
sub
sar
cmp
add
push
add
fstpt
add
jmp
add
add
pop
add
movzwl
nop
jmp
add
mov
mov
pusha
push
mov
xchg
ret
add
add
jb
add
add
inc
fnstsw
stc
jb
add
add
mov
stc
jb
add
add
add
inc
add
stc
jb
movl
enter
pop
sti
sti
mov
fnstcw
jnp
mov
add
jb
add
or
add
jb
add
jmp
push
mov
xchg
ret
rorb
add
mov
add
add
jns
add
and
fwait
add
stc
jb
flds
add
fstpt
add
push
jns
gs
jmp
add
or
adc
incl
in
das
mov
sti
add
inc
jmp
div
inc
add
jecxz
or
add
mov
xor
stc
jb
add
add
test
addr16
add
add
mov
stc
jb
jl
mov
add
cmc
inc
add
sbb
add
incb
jns
adc
add
sahf
add
nop
jmp
or
add
add
in
jne
stc
jb
add
add
add
out
mov
push
mov
xchg
ret
lock
enter
add
add
jb
test
stc
mov
nop
jmp
in
add
add
mov
adc
jb
jnp
add
or
push
std
add
stc
jb
add
add
cli
dec
stc
jb
pop
mov
add
add
add
add
cld
xchg
stc
jb
add
incl
add
mov
mov
stc
jb
mov
push
add
add
cmp
jb
add
add
addb
xchg
lods
jne
stc
jb
cmp
add
cld
incl
add
cld
mov
shr
stc
jb
adc
push
test
add
rcrb
jmp
add
add
pop
jnp
int
sar
xor
call
add
add
and
lea
nop
jmp
cmp
movb
test
incl
nop
jmp
adcb
mov
stc
jb
dec
add
add
push
jl
mov
stc
jb
test
sbb
push
mov
xchg
ret
add
adc
es
stc
jb
or
movl
cmp
add
jb
add
fsubr
lea
nop
jmp
filds
or
add
loop
mov
stc
jb
mov
jl
inc
add
push
mov
xchg
ret
or
add
or
add
stc
jb
mov
push
mov
xchg
ret
add
add
sbb
loop
nop
jmp
mov
adc
mov
add
mov
xchg
ret
add
add
call
sbbb
jl
out
sub
push
nop
jmp
fnstenv
add
cmp
add
nop
jmp
push
or
add
mov
add
mov
xchg
ret
add
add
push
push
mov
xchg
ret
jl
dec
add
dec
xor
stc
jb
mov
mov
sti
jecxz
or
inc
adc
jb
faddl
das
jecxz
add
jmp
and
mov
mov
add
add
jb
mov
add
popa
stc
jb
add
mov
add
add
push
int3
pop
push
mov
xchg
ret
das
test
add
sbb
pushf
testb
sub
ret
add
add
subb
cmp
add
add
stc
jb
cld
sti
lock
test
jmp
repz
incl
add
cwtl
add
nop
jmp
add
add
add
incl
addb
test
nop
jmp
add
add
add
jmp
add
add
add
add
cmp
mov
sub
jb
das
add
lock
jb
dec
pop
add
jb
and
sti
notb
fistps
mov
xchg
ret
add
cmp
add
xchg
push
mov
stc
jb
incb
add
add
push
nop
jmp
add
add
cmp
mov
fiadds
inc
out
jns
dec
fistl
add
stc
jb
fildl
add
mov
stc
jb
add
add
sbb
sar
incl
adc
sub
add
add
mov
jb
add
imul
sub
inc
add
jl
add
orb
add
add
jecxz
mov
movzwl
stc
jb
mov
cmp
nop
jmp
add
xchg
fistl
mov
cmp
subb
incl
push
movb
rep
stc
jb
add
add
pop
add
stc
jb
add
addb
push
addr16
jg
stc
stc
jb
mov
add
sub
stc
jb
add
add
stc
jb
add
push
add
stc
jb
add
pop
sahf
mov
push
mov
xchg
ret
pop
add
mov
xchg
enter
popa
fs
jb
add
int3
movswl
stc
jb
add
mov
cmp
jmp
or
mov
fisttpl
test
stc
jb
add
sub
lds
stc
jb
push
add
mov
mov
gs
jb
jb
mov
add
mov
add
add
add
add
dec
mov
push
mov
xchg
ret
add
add
cmp
xorb
add
testl
xorb
pushl
mov
movl
movsl
test
int
push
mov
xchg
ret
jns
pushf
mov
in
fwait
add
stc
jb
add
add
push
repnz
xchg
stc
jb
add
add
movb
adc
and
push
mov
xchg
ret
add
orb
and
imul
xorb
incl
add
mov
stc
jb
push
add
sub
mov
stc
jb
cmp
xor
jnp
and
stos
nop
jmp
filds
add
out
add
mov
sub
push
mov
xchg
ret
add
add
lock
cmp
movsb
nop
jmp
xor
add
das
jecxz
test
push
stc
jb
jl
xor
pop
ret
stc
jb
mov
cld
sar
and
stc
jb
das
add
jns
and
add
dec
and
stc
jb
add
addb
jge
push
mov
xchg
ret
add
lock
jne
nop
jmp
add
jns
add
add
mov
xchg
ret
and
mov
stc
jb
test
les
nop
jmp
mov
add
push
push
xor
or
sub
ret
add
push
xor
push
stc
jb
add
addb
add
adc
mov
mov
push
mov
repnz
out
add
and
popl
int3
mov
and
stc
mov
stc
jb
filds
out
add
sbbb
decl
add
add
test
jmp
stc
jb
out
mov
add
stc
jb
add
add
dec
nop
jmp
cmp
add
add
add
and
arpl
out
inc
push
mov
xchg
ret
push
or
add
popl
jo
nop
jmp
add
sub
add
out
rep
push
mov
xchg
ret
in
add
fs
call
incl
addb
and
stc
jb
sar
lock
jb
jl
dec
incl
out
xchg
mov
add
stc
jb
add
add
xor
nop
jmp
add
test
enter
inc
out
add
mov
pushf
push
popa
stos
add
stc
jb
jecxz
sti
inc
xchg
movsl
nop
jmp
add
adc
or
add
loopne
stc
jb
andb
and
push
mov
xchg
ret
xchg
add
bound
aad
mov
stc
jb
add
mov
adc
jb
das
or
add
adc
and
push
stc
jb
sub
jecxz
lock
add
sbb
popa
add
mov
xchg
ret
sub
pop
hlt
stc
jb
pop
push
jmp
dec
cmp
jmp
add
rcrb
push
push
mov
xchg
ret
add
add
push
mov
xchg
ret
push
mov
add
sti
fdivr
incl
add
add
jmp
imul
pushl
mov
movl
and
mov
xchg
ret
out
add
mov
stc
jb
mov
stc
stc
jb
add
jl
add
mov
nop
jmp
add
add
fdivl
xor
push
mov
xchg
ret
sti
add
add
nop
jmp
mov
pushf
pop
cld
popa
cmp
add
add
add
sub
sbb
incl
jecxz
push
push
mov
xchg
ret
pushf
cld
cld
std
inc
push
mov
xchg
ret
add
test
test
ljmp
incl
xchg
mov
stc
jb
and
mov
and
jb
add
add
mov
or
mov
adc
jb
add
mov
mov
or
xchg
ret
in
add
pop
add
lea
stc
jb
jbe
das
cld
jns
int3
mov
nop
jmp
sub
rclb
int3
call
stc
jb
add
inc
add
add
jb
add
filds
add
js
mov
add
add
add
or
addr16
mov
mov
cwtl
mov
shll
dec
addb
jecxz
test
sub
pop
test
loop
mov
cwtl
stos
mov
mov
mov
add
daa
or
xchg
popa
stos
cmp
aad
sub
push
cmp
add
and
dec
mov
mov
out
ds
push
mov
aam
rolb
adc
mov
cltd
arpl
imul
fcmovnbe
jmp
adc
insl
les
lods
mov
repz
jmp
push
lea
pop
lods
jo
jae
pop
test
sub
push
inc
cmpsl
repz
subl
cmp
xchg
xchg
and
push
js
mov
test
js
hlt
stos
dec
sub
es
cwtl
cmovnp
fmul
xchg
mov
or
and
out
or
inc
addr16
add
push
sub
or
iret
push
and
fbstp
push
dec
insb
test
mov
inc
add
mov
dec
sub
sar
push
add
fmuls
cld
push
or
movb
lds
icebp
out
push
dec
outsl
jg
lds
hlt
int3
push
or
roll
fistps
jmp
xlat
bound
fwait
pop
fcoml
adc
xchg
punpckldq
dec
jl
jne
lcall
negl
jnp,pn
jecxz
fldt
add
and
dec
dec
out
lret
andl
push
lcall
je
pusha
add
nop
cwtl
enter
pushl
icebp
scas
enter
add
idivb
icebp
sbb
gs
cmp
pop
ds
xor
lret
movsl
mov
push
jge
shl
or
rcll
mov
rclb
mov
mov
test
jle
push
mov
push
push
dec
push
pop
iret
xchg
stc
inc
dec
jp
cltd
rcll
lds
add
loopne
mov
movb
inc
add
cwtl
and
add
xchg
jmp
adc
inc
sbb
sub
shll
out
xor
imul
pop
jp
fbld
pop
dec
movb
insl
ja
icebp
or
lods
clc
stos
in
pop
loop
add
sti
xchg
imul
mov
xchg
cwtl
pusha
add
addb
add
add
in
fdivs
add
xchg
jno
jae
leave
lods
enter
add
ds
push
push
xchg
sbb
lahf
adc
pop
add
in
test
shl
gs
out
add
stos
pop
js
dec
xor
add
add
add
push
sti
inc
cs
cmp
outsb
cmp
pop
add
movsb
cmp
add
xor
push
jno
insb
mov
mov
mov
arpl
dec
and
add
dec
pop
xchg
loopne
daa
sub
add
mov
cmp
jge
sbb
das
inc
sarl
sub
fcoms
or
negl
jle
aaa
push
addb
push
pop
mov
adc
mov
sub
sub
inc
fisttps
push
insl
inc
fdivl
push
push
aad
stos
in
mov
into
mov
push
add
popa
rcrl
jo
imul
mov
mov
add
jecxz
insb
in
xchg
loop
xor
jno
out
xor
imul
xchg
mov
mov
mov
add
in
sub
xor
inc
add
fmul
cmpsb
movsb
cli
enter
xor
addb
lods
cmp
stos
idivl
repnz
nop
nop
testb
sbb
aam
push
xor
cmpsl
je
and
std
out
not
mov
mov
test
lahf
sub
jmp
nop
js
or
daa
leave
cmpsb
into
lcall
mov
add
movsb
xor
sbb
mov
push
mov
jns
mov
test
xorl
int3
imul
out
cmp
in
clc
mov
mov
add
mov
rolb
sub
add
pop
dec
cmp
mov
pop
daa
in
sub
add
push
lret
rolb
mov
mov
outsb
sbb
lods
fbstp
adc
movsl
andl
add
xchg
je
pop
push
loope
xchg
push
xchg
dec
push
push
inc
add
sbb
out
xchg
mov
sub
add
add
add
push
movsb
jl
add
std
push
iret
xchg
mov
cld
jnp
add
sbb
cmpsl
lock
das
mov
imul
ret
daa
xchg
movb
or
roll
jp
xor
ljmp
add
dec
call
sti
or
lret
or
out
inc
add
dec
mov
mov
mov
fildl
or
add
push
add
repnz
sbb
add
xor
scas
cli
push
mov
leave
cmp
or
addb
lds
fnstenv
add
pusha
add
sbb
pop
into
jns
mov
mov
jg
aaa
aam
mov
fs
mov
cmp
outsl
mov
sbb
shr
cs
lahf
xchg
dec
fcom
or
insb
fcomps
fwait
dec
push
ja
add
scas
dec
ret
dec
das
into
ja
mov
and
and
dec
mov
pushf
inc
add
push
addr16
sbb
jg
out
sahf
jl
test
fmul
push
lea
push
negb
aaa
stos
in
add
mov
pop
push
fmull
je
leave
push
dec
dec
call
in
shll
addb
cs
mov
mov
sub
loope
or
jne
dec
push
mov
call
add
pop
add
data16
push
std
out
dec
popl
insb
bound
sub
and
xchg
and
add
arpl
dec
rclb
add
mov
rcr
js
cltd
mov
jnp
push
pop
jmp
jnp
xor
sti
cld
mov
add
add
js
pop
and
jecxz
lret
mov
mov
scas
cmpsb
out
push
cmp
push
add
add
fwait
cltd
jg
pop
cmp
cmp
mov
adc
ret
insl
pop
mov
cli
inc
and
mov
rclb
pop
mov
mov
cmp
addb
adc
mov
dec
jns
jb
push
lret
mov
insl
xchg
mov
xchg
leave
inc
lock
leave
inc
add
addb
loopne
add
dec
adc
lret
adc
stos
pop
jecxz
out
shll
pop
cmp
mov
std
loopne
add
mov
stos
rorl
fistps
test
pushf
mov
mov
ljmp
add
int3
jnp
xchg
push
bound
jle
fadds
push
pusha
add
cmp
push
cwtl
lret
loopne
hlt
mov
outsl
mov
add
aad
cmp
adc
sub
cmc
adc
mov
out
inc
jmp
inc
add
lds
inc
mov
cmp
add
or
sub
movsb
or
xchg
movb
jg
call
jbe
mov
out
rol
add
add
dec
mov
cmp
mov
into
mov
int
adc
cmp
ret
movl
xor
jb,pn
sub
fnstsw
pop
out
xchg
sti
cs
scas
xchg
repnz
add
sbb
stc
outsb
xchg
add
pop
xchg
nop
dec
mov
addb
xor
imul
xchg
out
clc
sahf
rorl
sbb
rolb
add
dec
lods
cwtl
stos
mov
int3
ret
ja
test
push
add
and
xchg
add
movb
and
adc
adc
in
scas
repz
push
and
test
into
jne
xlat
jno
cmp
iret
popa
mov
addr16
sbb
dec
inc
pop
sti
es
mull
add
inc
add
aaa
fisubs
mov
xor
xchg
inc
add
adc
out
pop
push
lds
les
xchg
sub
adc
lret
mov
cmp
pop
movsl
addb
cmp
clc
out
cmp
push
jecxz
dec
test
sub
add
dec
sub
in
inc
add
xor
inc
and
scas
in
pusha
add
pop
lret
fdivs
push
das
fists
add
test
dec
push
outsb
adc
and
cmc
push
outsb
ja
testb
adc
pop
mov
rorb
and
mov
dec
dec
popf
xchg
out
nop
call
push
jae
or
push
je
pop
test
mov
add
inc
aas
pop
jnp
adc
in
sbb
add
repz
inc
add
cli
js
adc
sbb
xchg
call
cmpsb
ljmp
jbe
lods
add
inc
add
fs
dec
pop
aam
add
dec
movsl
xor
add
xchg
aad
mov
jbe
call
dec
enter
hlt
mov
and
bnd
lret
cltd
mov
bound
jg
xchg
push
xor
pop
fnstcw
sahf
sub
pop
insl
mov
or
inc
outsl
sbb
sbb
push
adc
push
fnstenv
out
push
es
sub
pop
xor
add
jns
aam
fisttpl
ret
jmp
add
xchg
mov
add
fs
lret
cmp
add
imul
jae
in
popf
pushaw
add
or
fldcw
ret
leave
out
pop
fcmovu
add
mov
outsl
ss
movb
nop
jno
mov
call
into
in
cmp
or
adc
sti
add
dec
in
inc
add
cltd
lcall
add
push
inc
dec
stos
inc
sahf
mov
call
mov
faddl
add
mov
or
std
lret
pop
push
sbb
cmp
add
sbb
add
loop
add
shrb
jg
icebp
clc
cmp
ret
mov
add
add
scas
ret
into
mov
stos
mov
rolb
push
cmp
call
cmp
lds
popf
addb
hlt
hlt
xlat
test
xchg
jp
adc
cmpsl
in
inc
add
dec
pushf
mov
dec
ret
add
mov
outsl
mov
stos
mov
fs
mov
lahf
mov
xor
lods
push
adc
stc
mov
iret
enter
push
adc
pop
mov
test
and
stos
xor
jnp
jg
addb
add
bnd
xchg
sbb
add
mov
mov
sbb
mov
ret
sbb
or
lahf
mov
inc
add
or
in
out
adc
inc
add
pop
into
xchg
sub
add
test
mov
test
in
xchg
mov
adc
mov
js
mov
sub
stos
dec
jl
dec
lock
jo
insl
xchg
fcmovnu
bound
fmul
dec
dec
fadd
jnp
jl
js
push
jno
fnstenv
jne
add
push
xor
sbb
outsl
push
movsl
fadds
stc
mov
stc
jl
test
cltd
stos
pop
jne
add
cmp
jbe
mov
add
jp
xchg
or
nop
xor
dec
add
movsl
xor
ds
or
cmp
mov
fcoms
mov
std
lock
xor
rol
add
xor
pop
cmp
and
sarb
int3
sti
gs
dec
mov
dec
mov
sbb
dec
je
push
sub
rolb
or
or
cmp
pop
insb
lods
xor
loop
or
dec
pop
mov
mov
pop
rorl
inc
mov
fcomps
fs
sahf
sub
sbb
dec
adc
add
leave
add
push
mov
test
mov
mov
mov
jb
cmp
inc
add
rolb
add
add
jge
dec
lahf
gs
cmp
sahf
inc
add
pop
hlt
lds
cmp
jo
mov
addb
dec
inc
ret
or
xchg
or
pop
cmp
or
sbb
xor
push
cli
dec
mov
adc
mov
loopne
ss
faddl
add
or
testl
aam
jmp
out
dec
call
sub
dec
out
lahf
div
mov
xor
push
pop
mov
into
inc
sbb
add
jne
stc
aam
push
std
jnp
jnp
sahf
mov
dec
in
or
cmp
and
repz
ljmp
push
mov
jmp
popf
call
stos
loope
cmpsl
and
push
inc
add
fstpt
jle
cmp
xchg
push
add
dec
mov
cmp
rolb
xchg
fisttpll
sub
add
movsb
lahf
push
adc
sub
add
add
mov
addl
clc
or
inc
sub
ja
rolb
or
xlat
testb
push
pushf
inc
add
mov
mov
insl
add
fmul
dec
mov
sub
test
jecxz
repnz
xor
stos
hlt
mov
mov
fs
mov
lods
or
mov
inc
imul
add
sti
mov
ret
inc
imul
jg
add
cmp
xchg
add
stos
jo
add
pop
imul
fdivr
outsl
jns
sbb
push
movb
test
and
pop
cmp
pusha
add
or
outsl
outsb
adc
sar
mov
jno
cli
adc
jbe
cwtl
sub
nop
insb
dec
mov
outsb
jo
xchg
xor
pushf
sbb
add
adc
stc
call
and
rol
pushf
sbb
mov
test
adc
xor
sub
sbb
testb
pop
in
adc
lods
pop
or
inc
push
aas
pop
push
or
add
fmuls
xchg
jp
xchg
pop
cmc
push
fldl
pop
inc
sub
cmc
scas
jne
sbb
adc
test
pop
movsl
or
cmp
outsl
out
jg
add
outsl
add
aas
jmp
pop
and
adc
sub
ret
pop
jne
sub
mov
push
add
or
push
mov
xor
and
imul
in
loop
ljmp
mov
xchg
cwtl
push
dec
fstl
add
mov
adc
xor
cmc
push
ss
movsb
xor
or
stos
xlat
test
aas
xchg
xor
jo
and
out
sahf
cmc
inc
push
jle
sidtl
dec
mov
xor
ret
movb
add
fsubrs
scas
fsts
in
push
sub
mov
std
xchg
mov
xlat
lret
montmul
cmpsb
xchg
pop
or
add
jns
push
call
push
imul
cwtl
mov
add
mov
xor
into
ret
add
add
addr16
mov
sub
pop
rolb
and
pusha
add
popf
adc
ret
cltd
lcall
ja
jecxz
lcall
loop
jl
add
add
pop
leave
leave
dec
movsl
dec
sarl
cmpsl
lahf
lods
fcoml
shr
mov
fcomps
xor
out
dec
mov
xor
outsl
inc
add
pop
cmp
add
in
xchg
sub
mov
lods
insb
imul
mov
xchg
jb
and
ljmp
into
mov
call
lds
insl
insl
test
mov
add
mov
lods
and
aad
sub
xor
jmp
add
mov
jno
addr16
adc
or
cmp
dec
add
fstl
xchg
dec
jne
dec
cmp
daa
lret
insl
add
jecxz
and
ret
fldl
outsl
mov
roll
xor
mov
mov
jnp
mov
sub
shll
inc
mov
and
outsl
lret
xor
add
sbb
push
xor
iret
insl
shl
adc
pop
pop
aaa
shlb
js
mov
sub
add
std
fisttpl
lcall
push
jbe
adc
xchg
in
add
aaa
jnp
mov
jmp
sbb
mov
adc
push
or
je
cmp
jp
imul
pop
pushl
lahf
and
mov
pop
mov
loop
rcr
mov
mov
dec
lds
push
jne
jb
fwait
add
sbb
ss
xchg
ret
cld
outsl
jb
add
and
mov
add
sub
mov
leave
lcall
mov
mov
dec
ljmp
insb
iret
out
push
or
scas
movb
adc
inc
xchg
in
stc
les
sub
outsl
push
dec
scas
xchg
and
in
inc
add
stc
adc
jl
negb
aas
push
add
add
mov
or
pop
dec
mov
push
inc
add
daa
hlt
loope
add
sbb
and
insb
subl
movsl
aaa
push
add
sbb
fistl
xchg
jns
test
out
push
lods
sub
push
mov
inc
add
loop
adc
xor
or
dec
xchg
mov
push
jmp
mov
add
jo
pushf
in
rol
add
add
jb
push
xor
sub
xchg
add
xchg
cli
inc
add
add
or
test
ja
push
repz
cmp
mov
movsb
or
out
mov
jnp
sub
lcall
mov
add
test
stos
addb
sub
cmp
pop
pop
pop
cmp
sub
sub
cmp
rcrb
add
and
addb
jge
cmp
je
cltd
pusha
add
inc
stc
mov
mov
out
arpl
add
mov
add
test
mov
lahf
in
add
outsb
bound
and
popa
push
mov
pop
pushf
shlb
pushf
dec
pop
xchg
shr
rcrl
mov
mov
hlt
stos
repz
jnp
ret
mov
or
shlb
add
mov
push
bound
mov
out
test
inc
add
enter
sub
pop
divl
shll
xchg
mov
push
dec
pop
je
jp
push
das
mov
rol
mov
lret
sub
xchg
mov
rcll
push
ds
daa
cld
in
sbb
or
fistps
lret
sub
cmp
popfw
push
into
push
mov
cmc
movsl
push
add
lret
sbb
shll
xor
outsb
cmp
push
leave
jmp
mov
add
stc
nop
jnp
fisttpl
inc
add
pop
and
test
js
sbb
mov
cmp
cmpsb
mov
or
push
add
test
mov
add
fcoms
push
stos
xor
test
sbb
jbe
inc
add
xchg
pop
pop
inc
add
mov
addb
in
sbb
push
cmp
or
andl
cltd
pop
sub
pushw
xor
aaa
and
dec
xor
dec
mov
sbb
add
call
insb
mov
pop
dec
cmp
add
ss
mov
xor
and
add
enter
add
pop
enter
std
add
sbb
lret
scas
and
sub
testb
pop
push
repnz
repnz
or
sahf
xor
jge
outsb
sbb
cmp
or
and
add
xor
scas
test
test
cmp
repnz
mov
in
arpl
out
loope
add
or
xor
xchg
clc
mov
leave
test
lcall
jl
jl
sub
movsb
icebp
pop
ljmp
das
and
mov
nop
test
movb
sub
add
fistpl
and
call
pop
movb
xchg
rcll
pop
rol
add
test
insl
pop
insb
or
es
and
dec
hlt
cld
repnz
shl
lock
adc
xchg
add
pop
or
jne
xchg
dec
mov
add
pusha
add
add
mov
push
daa
push
add
inc
dec
imul
std
icebp
cmc
jl
aaa
arpl
and
and
leave
xor
movsw
push
add
int3
xor
mov
cmp
add
stc
clc
mov
pop
mov
test
push
fsubl
or
inc
add
jge
lea
ret
mov
das
std
jne
dec
loope
fsubs
add
jp
pusha
add
add
movsl
dec
cmp
adc
in
inc
add
jb
aad
add
add
and
sub
add
or
add
popa
sahf
pop
lods
inc
inc
add
push
add
mov
and
ljmp
and
ljmp
add
push
jnp
int
jle
gs
stos
or
cmp
pop
xlat
jle
jl
loope
mov
sbb
mov
or
add
pop
mov
jp
jge
fstps
sbb
jp
rolb
fwait
cmpsb
and
int3
icebp
in
xor
xchg
mov
test
cmp
pop
sbb
js
lds
ljmp
add
mov
in
add
aad
outsl
pop
mov
mov
jg
xor
or
push
xchg
into
jle
mov
add
lods
pushw
add
push
add
fildl
add
fisubl
add
sub
inc
adc
xor
sbb
dec
lahf
xchg
mov
in
dec
push
pop
aad
in
rolb
mov
inc
arpl
lret
cs
sbb
or
fistps
xor
out
insl
repnz
outsb
and
push
test
shll
das
xchg
xor
mov
xor
shlb
or
out
ja
loop
mov
dec
lea
fucomp
call
sbb
out
fistps
xor
subl
or
daa
in
es
pop
or
jbe
xchg
jo
pop
mov
in
dec
mov
xchg
addb
outsb
or
movsb
inc
adc
pop
push
pusha
add
mov
or
sbb
lret
and
pusha
add
cmc
inc
mov
add
test
dec
iret
sti
es
adc
pop
fidivrl
mov
loop
cmp
in
add
std
xchg
cmp
icebp
cmp
push
jg
sub
jno
mov
xchg
lcall
lret
nop
adc
mov
mov
push
not
push
movsb
lods
divb
cmp
jmp
enter
outsl
push
addb
cwtl
jmp
inc
add
mov
fbstp
xor
add
push
aas
push
fsubrs
mov
mov
cld
lahf
dec
out
mov
jl
add
out
mov
int3
sub
fdivl
jbe
test
lret
ror
fsubrs
xor
pop
mov
pop
or
mov
inc
pop
add
pop
leave
dec
test
cmp
mov
js
jmp
adc
jge
or
sub
push
xchg
mov
add
sub
adc
pop
mov
add
adc
or
pushf
mov
jmp
movsb
push
arpl
scas
mov
imul
jb
sbbl
lods
imul
mov
mov
add
movsb
jecxz
add
pop
jmp
pop
mov
lds
xlat
cmpsl
leave
addb
fisttpll
les
movl
push
fwait
cmp
mov
divb
mov
adc
xchg
lods
outsl
aaa
mov
lea
inc
add
add
add
lock
push
addb
and
fbld
insl
jb
aad
pop
or
mov
sbb
bound
je
xor
inc
lock
add
data16
sbb
mov
add
jmp
xchg
idivb
mov
inc
ror
ds
add
add
sub
dec
addb
repz
sbb
fisttpl
add
xor
iret
mov
scas
mov
add
cmp
add
fisubrs
lcall
dec
mov
mov
inc
add
jae
cmc
enter
push
pop
mov
aaa
ds
push
fwait
mov
sub
popa
mov
addl
push
push
lods
pushf
pop
test
xor
sub
jo
pop
and
lret
sbb
leave
mov
addr16
rolb
dec
sub
outsb
rcrb
lcall
mov
and
and
add
sbb
mov
stos
aas
mov
adc
push
cmp
add
xchg
and
jnp
arpl
jecxz
sub
mov
dec
mov
imul
mov
add
sub
imul
dec
int
out
rorl
mov
and
std
fldz
push
add
ljmp
inc
cmp
push
mov
pop
xorps
mov
cmp
mov
add
scas
int3
repz
fwait
mov
das
push
les
arpl
aad
push
jmp
repnz
inc
add
cld
out
clc
xor
and
fsts
add
jp
mov
dec
push
in
jge,pt
and
mov
push
and
jnp
out
inc
add
add
ja
jl
and
loopne
lcall
repnz
or
xchg
or
lods
jae
ja
adc
xchg
call
add
xchg
sahf
xchg
push
fwait
inc
add
xor
pop
dec
outsb
aas
stos
mov
pop
cmp
xor
pushf
insl
xchg
and
mov
jp
add
imull
das
pop
jnp
or
mov
scas
pop
lcall
test
into
push
sbb
pop
decl
xchg
mov
add
adc
adc
ret
push
mov
ja
inc
add
push
js
push
pop
out
lcall
add
add
push
fmulp
mov
pop
ret
shl
jl
pop
pop
dec
sbb
jno
sub
mov
cmc
pop
dec
pop
and
mov
insl
push
mov
or
repnz
pop
mov
sub
mul
adc
sar
mov
test
scas
xchg
mov
scas
mov
xor
insb
pushf
pop
xor
lock
or
outsb
push
xchg
and
xlat
xchg
push
add
repnz
adc
subl
push
mov
add
je
insl
nop
xor
aad
cmp
cmp
aam
sbb
jb
cmp
jno
add
dec
cmp
add
into
cmp
sub
jle
and
nop
or
mov
sarl
cmp
fistps
inc
add
push
lock
xor
dec
imul
in
push
add
add
push
add
xchg
sub
in
pop
push
jmp
out
pop
or
cmpl
xchg
push
mov
and
shrl
sbbl
adc
pop
cwtl
and
add
cs
in
push
jmp
pop
sub
rolb
add
cmp
mov
pop
mov
fidivl
inc
add
mov
dec
out
call
cmp
addb
dec
jge
loopne
jbe
cmpsb
jbe
addr16
data16
add
std
cmp
push
mov
push
jge
fistpl
adc
in
sub
in
push
jp
xor
loope
add
cmp
scas
movb
or
in
lcall
add
inc
adcl
or
out
repnz
stos
shl
lods
movb
push
test
nop
out
dec
out
push
aam
mov
je
xchg
enter
cmp
push
dec
add
movb
add
fisttps
std
inc
add
movb
jo
push
fcmovnu
mov
je
inc
add
aaa
arpl
or
add
sbb
mov
add
test
xor
iret
rorl
divl
jecxz
cld
pop
in
and
sbb
add
mov
add
add
push
outsl
pop
scas
cmp
out
js
repnz
inc
add
jp
stos
xlat
pop
jno
sbb
and
and
pop
into
cmp
xor
push
scas
cltd
outsl
push
and
xor
add
das
or
repz
jae
add
scas
pop
pushf
int
mov
push
stos
sub
sub
cmp
mov
fistps
enter
push
testl
pop
sbb
add
xchg
test
pop
stc
or
and
repnz
pop
pop
mull
xchg
gs
add
mov
cmp
fwait
ljmp
mov
sahf
push
mov
and
cld
xor
sub
aaa
lahf
outsl
mov
xchg
fnstsw
pushf
sub
ret
xchg
addr16
js
and
jle
add
lcall
pusha
add
push
roll
lret
cltd
mov
loop
add
add
test
sahf
pop
mov
add
add
sub
imul
adc
mov
mov
repz
aaa
dec
nop
adc
lods
scas
movsl
mov
pand
in
push
and
and
pusha
add
ja
lahf
mov
stos
inc
add
inc
adc
mov
cld
mov
lods
xchg
push
cmp
pop
mov
movsb
mov
add
aam
outsb
and
xchg
cld
add
xchg
adc
aad
add
and
add
dec
mov
flds
push
lds
arpl
mov
loop
sub
rol
lcall
xchg
arpl
sbb
or
and
mov
jae
add
outsb
or
pop
enter
insb
lcall
push
jle
and
outsl
mov
call
icebp
ret
outsb
pop
pop
aad
mov
lock
xchg
shrl
inc
add
fistps
enter
test
mov
outsb
test
test
add
sahf
stc
jle
sub
add
jo
add
pushf
aad
inc
shrb
movsl
inc
loop
add
sbb
jl
daa
adc
call
cmpsl
lods
sub
pop
cltd
pusha
add
add
sahf
call
in
push
mov
cwtl
shrb
popf
cltd
and
mov
add
adc
push
add
xor
shll
inc
mov
and
in
add
push
pusha
add
aaa
loop
repnz
mov
add
dec
and
rolb
popf
or
inc
add
lret
inc
add
cli
lcall
je
mov
sub
sbb
add
aas
fistps
cmp
push
dec
stos
aad
jmp
clc
dec
movsb
cs
adc
shrl
xchg
jb
icebp
jp
cmp
insb
shrb
icebp
lods
jp
add
push
xor
lcall
xor
int
mov
aas
mov
movsl
std
and
pop
mov
mov
ret
in
mov
add
loope
scas
scas
daa
mov
jmp
fsts
dec
stos
dec
ds
pop
and
xlat
cmp
push
fs
and
xchg
push
cmpsb
fstps
cmp
cltd
or
adc
mov
sub
popf
repz
dec
inc
push
mov
nop
iret
fldl
ja
daa
jle
jge
pusha
add
push
adc
sub
mov
imul
lods
mov
das
call
add
ret
mov
xchg
pop
out
cmpsl
lea
outsl
fcmovne
pop
das
les
push
sbb
adc
stos
ja
or
ss
add
add
ret
mov
js
pop
shl
mov
mov
dec
push
or
scas
mov
pop
dec
push
addb
adc
pop
mov
inc
lret
inc
sti
or
shll
cmp
inc
add
add
or
out
xchg
in
fdivrl
mov
aad
cmp
xchg
in
fdivrs
push
mov
loop
ljmp
test
jo
or
loopne
dec
push
add
xlat
cmp
addb
pushf
xor
dec
addr16
fstpl
dec
add
sbb
inc
add
fucom
imul
add
not
dec
out
into
into
scas
fdivs
pop
adc
mov
rolb
pop
pop
rorl
out
cli
or
mov
push
lods
inc
in
loop
scas
lea
xchg
lahf
ss
mov
adc
sbb
test
or
out
outsb
cmp
add
mov
jnp
lods
pop
cmp
shrl
push
xchg
shll
daa
in
popa
jmp
xor
add
xchg
sub
test
out
cmpsb
sub
les
insl
push
out
or
mov
ficoml
decb
inc
mov
pop
rolb
nop
push
stos
cmp
cmpsl
pop
xchg
scas
insb
xchg
or
or
sarl
lahf
cltd
adc
fadds
adc
out
inc
add
cmc
std
loopne
lods
aad
add
pop
sbb
jne
or
test
movsl
cmpsl
mov
nop
aad
xorl
idivl
jo
bound
in
add
add
mov
ljmp
add
int3
testb
add
sbb
or
mov
and
mov
mov
ret
xor
leave
cs
lcall
popa
sar
add
mov
inc
mov
add
ficomps
sti
push
int
les
push
xor
stos
sub
add
jge
add
rcll
sub
xor
sbb
inc
add
stc
gs
jle
inc
mov
gs
pop
int3
sub
leave
dec
jo
filds
cltd
cmpsb
sbbl
lea
jne
pop
loop
inc
es
xor
push
loopne
js
push
fdivs
mov
loop
push
xchg
push
add
push
mov
mov
or
mov
pushf
mov
add
sub
pusha
add
jb
sbb
add
fcomps
lahf
inc
add
push
icebp
xchg
test
fs
insl
insl
in
push
xlat
push
fldcw
mov
and
je
cwtl
jge
inc
out
add
insl
nop
cmpsl
dec
fimuls
lahf
or
std
and
and
adc
inc
sahf
movb
xor
pop
aas
dec
leave
dec
dec
fdivs
and
movaps
sbb
test
scas
mov
addr16
fcoml
add
ljmp
out
push
mov
jno
xor
push
sub
mov
call
lea
out
push
mov
xchg
cmpsb
and
and
addb
cmc
iret
enter
cmp
pop
dec
mov
xor
out
test
adc
fstps
dec
inc
cmp
sbb
cmpsb
jnp
add
shll
push
jmp
es
fwait
data16
add
addl
add
pop
inc
stos
mov
out
in
dec
popf
push
ret
fisttpl
add
repz
add
mov
add
lods
push
add
jne
mov
inc
add
add
mov
cmp
fwait
pop
ds
icebp
imul
sub
or
in
scas
mov
cwtl
push
and
jnp
leave
lods
cli
and
sub
popa
loope
lret
push
cmp
adc
loope
lahf
jnp
inc
loopne
mov
pop
cmp
add
jecxz
sbb
fisubrs
mov
out
out
xor
jecxz
lahf
dec
cmp
xchg
pop
mov
cwtl
ds
cmp
mov
mov
addb
dec
mov
jo
push
jp
into
hlt
pop
rol
add
lods
and
xchg
int3
cmpsb
popf
sahf
stc
cld
xor
pop
lods
addl
aam
add
push
add
ffree
add
fwait
insl
pop
movsb
xor
repnz
mov
stos
fyl2x
imul
push
add
xor
roll
jmp
je
sub
xlat
js
jns
mov
aad
movb
sub
dec
push
mov
out
adc
fbstp
dec
int3
mov
push
mov
cmc
fisubl
aaa
mov
add
add
xor
mov
outsb
gs
jmp
addb
sbb
xchg
mov
das
mov
jle
ucomiss
out
adc
mov
mov
inc
add
inc
add
ljmp
jp
popa
pop
add
cmp
jo
jge
or
iret
mov
cltd
dec
push
sub
and
cmp
popw
js
cmp
add
add
gs
aaa
mov
inc
jecxz
jecxz
addb
push
mov
pop
dec
scas
out
mov
or
add
scas
and
mov
mov
lcall
jb
in
cmp
add
or
rolb
fmull
in
mov
push
add
out
dec
in
ja
aam
mov
add
mov
ret
cmpsb
dec
adc
shr
sarl
add
loop
push
xor
sahf
stos
jns
cmc
mov
ljmp
gs
call
in
adc
loopnew
xor
lea
addb
aad
push
mov
add
in
push
leave
cld
js
fwait
or
and
test
mov
repnz
add
aas
test
cmp
pop
sbb
dec
scas
dec
jle
mov
xchg
cmpsb
and
in
jmp
push
sti
movsl
mov
negb
adc
or
mov
icebp
mov
add
jb
sub
test
add
popf
fisubs
dec
imul
mov
jo
lcall
xchg
push
pop
lret
mov
stc
xchg
fldz
mov
mov
pop
das
icebp
test
pop
stos
push
adc
add
rcrb
mov
jae
mov
lods
lds
add
adc
add
addr16
push
add
mov
int3
sti
push
bound
xor
jne
xchg
aam
inc
inc
add
jo
es
outsl
loope
xchg
dec
outsb
fisttpll
imul
lds
rorb
test
lret
test
addb
stc
fdivs
sub
push
ss
xor
into
aaa
mov
cmp
loop
frstor
add
inc
add
xchg
lcall
mov
cmc
ja
push
add
cltd
icebp
xor
push
enter
and
popf
inc
add
pop
or
cmp
push
mov
jo
stos
inc
add
outsb
shll
mov
jns
jecxz
lods
dec
xchg
decb
mov
bound
les
add
mov
outsb
dec
cmp
and
mov
dec
arpl
pop
lock
add
mov
xchg
push
and
and
lret
outsl
daa
sbb
loopne
cmp
pop
jno
xor
subl
pop
pop
mov
pop
dec
cli
addb
js
mov
int
rolb
es
dec
ffree
add
xor
or
pop
dec
mov
push
shll
movb
ljmp
push
xor
mov
ja
cltd
sbb
mov
add
mov
insb
cmp
xchg
cmp
movsb
ret
repnz
sbb
int
icebp
dec
cwtl
movsl
sub
jbe
js
out
divb
daa
mov
inc
add
inc
pop
les
inc
cmp
xor
cmc
jbe
cmpsb
sbb
scas
pop
out
jns
cli
arpl
in
pushf
imul
pop
add
lret
inc
dec
mov
aam
mov
scas
mov
pop
push
and
jp
sub
mov
std
sahf
insl
mov
add
jno
and
xor
xchg
inc
jne
sub
pop
inc
sub
idivb
mov
mov
mov
lods
inc
add
jg
lahf
mov
in
in
movsl
push
cmp
bswap
lret
or
rolb
mov
push
mov
push
stos
lea
loop
mov
add
pop
addb
sub
rcll
jp
call
pop
xor
inc
add
adc
pop
ret
or
jns
cmc
popf
stc
fcomps
add
xlat
outsb
adc
ficoml
je
das
and
xor
adcl
movb
mov
inc
push
push
push
xchg
pop
adc
shrl
xor
pop
lds
jne
jle
mov
fisubl
pop
mov
add
mov
fistpl
leave
sbb
mov
movsl
aas
scas
mov
ficompl
jp
repz
or
or
scas
in
adc
inc
mov
dec
jo
sub
out
push
xchg
inc
cmpsl
test
mov
aas
push
adc
bnd
outsb
lcall
fists
inc
add
or
xor
inc
pop
xchg
negb
ss
addl
call
into
or
mov
int3
jecxz
ficompl
enter
xor
iret
mov
dec
mov
sbb
int3
ret
pop
fidivrs
test
adc
add
fistl
sbb
and
jmp
add
outsl
push
push
nop
and
lea
add
add
mov
sub
add
xchg
ret
xchg
jle
loope
js
rol
imul
lods
cli
adc
in
jb
cltd
inc
dec
cmp
push
addb
pop
cs
lock
jnp
add
and
sub
pop
scas
sub
pop
mov
test
adc
xor
pushf
mov
mov
bound
ret
cmp
mov
test
sbb
or
stos
neg
xor
add
rcll
lret
lods
dec
lea
sti
inc
add
leave
pop
inc
add
mov
cmp
lock
pop
xor
lcall
add
rcll
nop
sbb
stos
repz
movsl
push
mov
addb
push
sub
into
dec
mov
mov
jl
sub
cwtl
clc
shl
in
int
inc
into
xor
scas
xorl
sbb
jno
incb
add
lret
fmull
scas
mov
cmpsl
mov
xor
mov
mov
leave
icebp
in
in
mov
cmp
dec
push
inc
add
xchg
xor
jo,pn
ret
imul
mov
sbb
adc
ss
inc
add
cwtl
mov
mov
outsb
repnz
pop
mov
in
dec
xchg
fists
stc
addb
pop
push
out
adc
mov
or
sub
pop
push
or
adc
stos
mov
inc
out
add
jl
mov
aad
xchg
sbb
dec
or
sub
stos
and
aaa
mov
arpl
data16
adc
add
cmp
mov
jp
jecxz
push
add
mov
cmc
mov
jecxz
cmc
and
loop
icebp
sti
jae
add
or
push
add
jno
repz
aaa
iret
sub
leave
mov
out
adc
mov
cmc
addb
lcall
xchg
adc
inc
add
sub
cmpsb
adc
and
sbb
pushf
leave
push
pusha
add
bound
mov
fisubs
xchg
xor
pop
notl
cmp
jl
mov
jne
pop
inc
jae
mov
xchg
xrelease
repnz
lds
or
add
jo
inc
insb
addb
pop
sbb
mov
inc
push
add
adc
cmc
nop
imulb
jo
push
in
mov
ljmp
add
and
fiadds
test
inc
movb
loop
les
and
fdivp
in
jle
cmovp
lods
aaa
iret
or
and
les
or
sbb
pop
sbb
push
out
dec
addb
out
imul
dec
xchg
rcrl
into
pop
outsb
fildl
xor
hlt
outsl
mov
leave
push
mov
sub
mov
add
add
addb
mov
or
popf
jb
jae
jbe
inc
in
enter
aaa
mov
jbe
adc
idivb
adc
aaa
add
shlb
lods
add
inc
lcall
out
testl
inc
push
das
ljmp
lahf
lock
cmpsl
pop
outsl
insb
addb
out
xchg
sub
xchg
push
push
mov
rcll
add
dec
lods
or
ficompl
xchg
pcmpeqd
add
inc
scas
sub
in
out
scas
repz
scas
add
nop
jecxz
loope
jmp
fwait
movl
test
imul
aam
and
dec
iret
add
in
sub
xor
push
ror
popa
jne
pop
cmp
push
je
mov
cwtl
fildll
dec
fstl
ret
cltd
jecxz
mov
mov
inc
pusha
add
jae
mov
add
mov
pop
pushw
mov
dec
dec
test
xchg
cld
gs
scas
popa
or
adc
aam
add
add
scas
std
dec
cmp
mov
mov
ss
lds
push
mov
xor
icebp
test
inc
cmp
out
and
cmp
dec
fadds
mov
mov
stos
sub
inc
sub
addb
or
push
cmpsb
inc
shrb
inc
add
and
xchg
add
cmpsb
jl
mov
pop
pop
cmp
orl
mov
dec
jb
add
push
sbb
out
in
addb
test
cmp
add
mov
dec
fnsave
mov
into
fnstcw
sub
xchg
dec
cs
rcl
jle
into
jo
cmp
add
mov
cltd
push
jns
cmp
mov
imul
inc
add
arpl
add
add
add
es
bound
push
and
mov
js
shrl
gs
jno
mov
sbb
sbb
iret
xor
int3
xor
incb
enter
popa
es
or
add
ljmp
iret
ret
xchg
sbb
andl
in
pop
inc
xchg
addl
outsb
sub
add
js
leave
lahf
scas
xchg
mov
nop
iret
ja
jecxz
rolb
add
ljmp
outsb
insb
cmp
nop
aaa
jle
or
add
cmc
sub
sbb
pop
dec
and
jo
std
push
cmpsl
cltd
xor
dec
jecxz
into
pop
test
push
mov
mov
pop
mov
in
sub
ds
nop
js
ss
add
lcall
add
mov
xchg
jns
xchg
rorl
xor
mov
add
scas
xchg
outsb
in
dec
mov
add
xchg
push
ljmp
inc
nop
lods
cmpsb
inc
rcrl
call
enter
sbbl
ds
outsl
add
xchg
std
gs
test
mov
or
xor
and
out
cld
sahf
sbb
lock
arpl
jle
adc
inc
add
test
test
cmpsl
mov
aaa
iret
push
fstl
push
cwtl
enter
aaa
xor
adc
pop
sub
pushf
sbb
js
bound
cmp
shlb
add
sub
mov
arpl
cltd
lods
inc
add
or
adc
pop
push
ljmp
mov
or
push
loopne
lret
xchg
push
pavgw
movb
insl
jmp
pop
int
mov
loope
out
test
mov
pop
push
add
call
xchg
sub
cmp
mov
jns
shll
mov
lret
or
int
add
insl
sti
pop
add
in
imul
xor
or
cltd
mov
mov
adc
push
cli
jb
mov
mov
add
adc
insl
pop
mov
add
ret
jbe
mov
jecxz
in
push
sbb
dec
xchg
lret
pop
inc
add
sbb
test
mov
jb
inc
add
push
inc
add
adc
add
mov
xor
mov
add
sub
iret
xchg
cmpsl
scas
inc
add
pop
adc
mov
jns
pop
push
add
fstpl
inc
int
push
imul
sub
test
push
add
fadds
mov
add
or
add
dec
mov
rolb
push
cld
clc
fcompl
mov
pop
lds
and
xor
and
dec
repnz
punpckhbw
lds
repz
movq
cld
rclb
incl
add
push
or
add
jecxz
push
in
pop
cmp
mov
out
stos
fdivr
addb
adc
cmp
in
lahf
sbb
aaa
mov
push
jb
fnstsw
lods
dec
sarb
cmc
push
xchg
cmpsl
movsl
addr16
pop
out
sbb
shr
sbb
add
lret
mov
in
xor
sbb
aaa
fsubl
or
es
test
jne
mov
push
daa
cmc
cs
insl
sub
in
bound
scas
fcomi
mov
rorl
or
cmpsb
icebp
jne
mov
mov
add
loope
add
mov
mov
ds
pop
hlt
fidivs
mov
rorb
pop
jns
popf
xlat
aam
fbstp
pushf
xchg
das
rorb
mov
inc
add
mov
adc
xchg
push
addb
dec
xchg
sbb
mov
pop
push
mov
int3
leave
ret
sbb
add
inc
add
adc
arpl
push
ss
adc
add
mov
in
out
imul
add
dec
sti
adc
xchg
lds
adcl
inc
dec
ret
lods
mov
int3
icebp
push
jns
ss
cmp
pop
in
pop
push
popa
shll
mov
dec
cltd
addl
pop
mov
jmp
stos
xor
jae
jnp
testl
movsb
scas
cmp
popf
cltd
xchg
lods
mov
add
ss
sub
iret
jg
pop
xor
addb
cli
stos
outsb
xchg
cld
add
pop
add
mov
cmp
rcrl
pop
jo
lock
xor
lds
adc
sbb
insl
andl
les
out
bound
gs
or
insb
lcall
and
inc
add
mov
daa
cwtl
push
jb
das
rolb
call
mov
dec
xchg
shl
dec
mov
dec
xchg
hlt
or
mov
sub
cmp
lahf
cmp
adcl
add
add
les
dec
dec
sbb
sub
test
sbb
dec
lds
or
pop
jl
mov
in
pop
add
inc
loope
push
and
xchg
sahf
addb
rolb
xchg
or
push
xchg
jg
in
enter
add
pop
ficompl
sbb
sbb
hlt
jmp
cmc
cmp
cwtl
divl
adc
mov
add
aad
lret
leave
xchg
test
pop
push
in
fs
jmp
nop
out
cld
bound
push
int3
xchg
push
jecxz
mov
pushf
mov
pop
jb
aaa
pop
loopne
add
hlt
int3
cmpsl
addb
mov
mov
sub
add
add
sub
mov
jp
adc
add
and
cmp
inc
add
shll
xor
lea
repz
dec
dec
stc
xor
ljmp
aam
mov
dec
out
jle
int
add
addb
add
sbb
and
xchg
sti
mov
movsl
mov
push
add
pop
inc
fstl
add
jl
or
dec
ret
xor
add
push
sub
lcall
ds
add
push
pop
and
pop
pusha
add
or
out
out
iret
mov
or
sub
adc
dec
popa
lcall
fstl
add
out
movb
aas
popf
pop
dec
adc
negl
das
or
adc
sahf
mov
jl
add
add
rolb
jno
je
repnz
pop
inc
add
daa
jne
pop
rolb
dec
in
inc
mov
ficompl
push
pop
push
xor
jne
xlat
call
das
mov
mov
popf
popa
fsts
push
jnp
sbb
inc
add
lret
cli
add
pop
in
les
xor
push
xor
test
lods
dec
nop
mov
xor
inc
stc
dec
add
sub
mov
jae
lods
xor
push
data16
les
mov
add
pusha
add
outsb
dec
test
mov
add
adc
in
sbb
add
jl
cmc
xchg
data16
gs
add
cld
loope
xchg
xchg
loop
test
jno
or
dec
inc
add
cwtl
rolb
sahf
pop
cs
sbb
add
pop
lds
loop
add
loop
arpl
jb
sti
pop
inc
add
jmp
mov
movsb
repz
mov
mov
pop
std
lret
enter
ss
xor
add
add
or
adc
les
sti
fdivs
jbe
insb
cwtl
fldl
cs
push
cmpsb
mov
add
xor
add
mov
lcall
rolb
int
xchg
iret
or
loop
xor
jb
add
mov
in
es
xchg
jno
nop
out
pushf
cld
xlat
fsubrs
push
add
push
and
je
out
addb
xchg
rolb
das
aaa
xchg
mov
dec
pop
test
dec
outsl
dec
rolb
xchg
mov
in
int
addr16
cli
xorl
repz
cli
mov
and
push
lods
jg
popf
hlt
xchg
test
jo
in
fildl
dec
sub
cmc
jmp
pusha
add
mov
outsl
sub
ja
add
cmp
sbb
movq
test
out
or
jno
cmp
scas
pop
xchg
lods
mov
push
mov
xlat
sarl
and
mov
add
add
nop
xchg
pop
nop
out
and
cmp
inc
add
xchg
lret
sbb
in
adc
sub
and
add
add
sbb
out
jne
imul
in
adc
mov
imul
xchg
sbb
cwtl
in
fwait
jl
push
clc
fiadds
imulb
push
out
xorl
bound
jo
paddsw
nop
lods
sub
mov
jb
xchg
cmp
add
icebp
popa
dec
pop
stos
test
mov
jl
scas
in
adc
and
js
push
xor
hlt
and
arpl
popf
xchg
xchg
ucomiss
add
sub
dec
fstp
push
xchg
out
mov
int3
lods
adc
pop
sub
push
jle
out
or
das
xchg
inc
add
pop
addb
hlt
xchg
dec
lods
jmp
mov
cmp
jo
test
sbb
jmp
push
in
insl
movsl
mov
bound
test
add
iret
aaa
mov
sbb
xchg
or
addr16
add
imul
adc
add
subl
cmc
cmpsb
add
and
sbb
push
stc
clc
std
cmpsb
hlt
inc
or
mov
das
testb
aaa
mov
add
ret
mov
and
push
mov
test
dec
pop
enter
in
cmc
fimull
jo
pop
pop
addb
mov
loope
sbb
jle
mov
call
je
and
and
pop
dec
iret
dec
pop
mov
jae
inc
add
popa
jp
push
jl
dec
push
dec
push
xchg
int
femms
xchg
mov
out
idiv
into
mov
in
or
xchg
movsbl
stos
mov
cwtl
push
add
add
ja
inc
add
fwait
push
adc
sbb
into
xor
lret
jmp
addb
xchg
xor
push
xor
pop
ret
cmp
fwait
int
stos
inc
add
jns
mov
xchg
cmp
mov
addr16
inc
add
sbb
pop
inc
add
std
jp
int3
neg
rorl
mov
mov
in
sti
out
into
aaa
frstor
gs
mov
mov
imul
add
mov
stc
xor
fdiv
test
jne
mov
mov
rcr
je
push
and
lds
add
out
in
out
dec
mov
lods
addr16
int
clc
mov
mov
fists
sub
lcall
and
jl
popf
pop
push
jns
add
mov
dec
sbb
sub
aam
inc
add
or
dec
ret
sbb
or
add
add
sti
xchg
lcall
mov
test
pop
dec
movsb
push
and
int
cmp
lods
shl
mov
push
cmpsl
leave
push
mov
jge
pop
lcall
add
inc
add
lea
and
stc
enter
adc
jge
dec
ret
and
repnz
shll
add
mov
addl
popf
jb
je
push
insb
loopne
addb
es
cmpsl
cs
sahf
mov
cmp
push
push
push
mov
mov
dec
xor
sbb
nop
call
xor
sbbl
push
lret
inc
lret
push
add
in
lods
jb
jg
cwtl
rorl
xchg
jbe
xchg
outsb
sub
repz
pop
imulb
add
xor
cli
sub
shrl
cmp
std
and
cmp
add
pop
mov
ret
rorb
sub
and
or
add
js
cli
push
in
sub
mov
mov
add
stc
lcall
pop
sbb
dec
xor
add
xor
daa
mov
je
pop
cld
push
dec
xchg
aas
ret
xor
movsl
mov
popa
push
sbb
les
pop
pusha
add
movsb
cmp
adc
push
mov
lock
out
mov
addb
add
test
add
movb
sub
in
pop
dec
jecxz
test
enter
cmpsl
add
xchg
xchg
or
pop
stc
push
lds
add
or
add
fs
js
fcoms
pop
mov
jnp
adc
insb
dec
popl
push
outsb
dec
into
mov
pop
sub
test
mov
fwait
xor
mov
adc
or
push
insb
aad
add
je
xchg
mov
sti
ds
jl
enter
jno
loope
in
rolb
ljmp
xchg
movsb
test
adc
test
roll
hlt
inc
add
in
jno
mov
xchg
xchg
clc
imul
and
call
aad
popa
imul
imul
es
add
pusha
add
into
sub
mov
cwtl
aas
dec
xor
stos
and
icebp
leave
enter
rolb
out
loope
xor
push
gs
pop
mov
idiv
movhps
loop
loop
pop
and
movb
mov
push
pop
push
nop
addr16
pushf
sahf
cld
movb
add
in
lcall
scas
aam
test
sub
leave
test
mov
sar
aad
pusha
add
mov
or
push
pop
shr
sub
fcomps
dec
or
dec
sbb
sbb
clc
dec
mov
mov
sti
addb
mov
xchg
cmp
adc
mov
mov
sub
add
sbb
movb
xchg
rorb
ljmp
popa
scas
mov
jg
cmp
inc
add
xchg
cmp
add
es
das
xlat
pop
lock
sbb
push
mov
jge
inc
ds
push
call
jno
fcompl
nop
mov
movb
test
ja
lock
mov
jne
lods
in
or
add
fs
sub
bound
sbb
xor
dec
ljmp
and
repz
or
and
mov
aas
paddd
mov
inc
xchg
xor
add
add
or
mov
dec
xchg
repz
mov
fsub
icebp
lret
stos
inc
mov
je
int3
insl
enter
notl
add
call
leave
lods
ds
jnp
dec
adc
mov
jle
fcomps
mull
call
into
add
inc
add
bound
idiv
cmp
add
add
shll
adc
pop
mov
mov
pop
fistl
inc
mov
rcll
add
xchg
mov
data16
add
xchg
jb,pn
mov
into
in
xor
cmc
adc
ja
xor
mov
cld
inc
add
mov
jmp
xchg
mov
mov
pop
mov
fwait
xchg
adc
ss
add
addr16
inc
add
add
int
add
add
pop
pop
inc
add
lods
lahf
repnz
sbb
fsubr
push
out
jo
adc
xchg
sub
inc
add
lods
insl
xchg
inc
add
jg
xor
aam
add
roll
dec
xor
xor
add
pop
fidivs
xlat
popa
rolb
outsb
sahf
inc
mov
insl
shl
ss
test
jno
add
stc
int3
scas
and
cmp
gs
stos
fwait
or
fmull
add
insl
sbb
xchg
push
in
jle
mov
mov
inc
addb
mov
add
and
pop
sbb
or
add
aaa
dec
mov
jg
add
mov
and
add
addb
add
mov
sub
fs
xor
mov
in
and
cmp
addl
cmp
xchg
mov
test
sub
adc
mov
pop
addb
push
mov
fwait
push
test
pop
sub
sub
repnz
dec
xchg
addr16
test
fwait
mov
out
movb
imul
in
int
fldenv
sbb
lahf
sub
fadd
add
in
jno
addb
mov
add
ds
daa
xchg
push
std
movb
jns
xchg
ret
leave
adc
xor
jbe
jle
sub
lcall
pop
iret
or
cmpsl
pop
mov
int
mov
popa
sub
mov
inc
add
je
xor
fs
and
cwtl
insl
mov
mov
add
push
mov
shr
popf
int3
and
pop
xor
add
mov
insl
xchg
jns
dec
inc
add
mov
ds
test
pop
in
adc
mov
add
add
popf
jo
sub
aas
pop
arpl
fstpl
in
push
dec
ss
push
xor
xor
stos
push
std
arpl
add
cld
mov
es
mov
sahf
jp
jne
daa
iret
pop
call
aaa
arpl
shlb
lahf
and
xchg
jp
inc
add
jmp
push
jb
inc
stos
xchg
cmp
pop
adc
mov
xchg
loop
xor
scas
jns
insb
sbb
std
popa
xor
mov
sbb
dec
mov
xor
jmp
scas
int
fldt
repz
jg
bound
in
fimull
addb
test
mov
aaa
mov
daa
pop
imul
setae
add
pop
hlt
cltd
cmpsl
int3
rep
sub
mov
xor
fsubrl
cmc
cmp
sub
out
mov
mov
or
add
jmp
in
mov
add
jnp
add
outsb
jl
mov
jbe
xor
cmpl
cmpsl
jbe
xor
add
pop
sub
addr16
sbb
mov
add
dec
aaa
sbb
sub
add
jle
xchg
ret
sub
pusha
add
imul
daa
mov
enter
ror
mov
mov
adc
add
adc
sbb
dec
scas
into
data16
mov
pop
fsubl
mov
push
roll
jb
aad
das
imul
mov
mov
fdivrl
clc
inc
je
lret
inc
inc
add
add
loop
addl
mov
mov
push
js
sub
push
mull
and
xor
adc
rcll
xor
fisttpll
jbe
cmpsb
cmp
jne
popa
xor
jl
pop
loopne
add
xor
enter
xorl
mov
sub
test
imul
add
mov
dec
movsl
pop
lcall
jno
jecxz
mov
mulb
fsub
es
add
xor
mov
addl
testb
and
add
popa
mov
pop
ss
pop
cmp
push
or
sbb
leave
inc
fdivr
inc
xchg
nop
inc
lcall
addr16
xchg
add
mov
addb
scas
jbe
aaa
int3
enter
jbe
nop
std
test
pop
push
inc
outsl
and
aaa
mov
dec
hlt
jg
bound
gs
stc
sbb
pop
pop
outsb
mov
les
repz
je
ret
sbb
subl
fcmovnu
cmpsb
pop
mov
ljmp
xor
out
fcomip
mov
in
and
scas
xchg
cmp
or
test
int
jns
cld
lcall
pop
stc
sahf
push
stc
faddp
add
pop
jmp
push
xor
stc
cli
fbstp
ror
or
sub
mov
pop
dec
push
jge
jno
in
aam
push
mov
shl
inc
insl
cmpsb
ljmp
lods
dec
rclb
inc
add
xchg
dec
fcoms
test
cmp
popf
repnz
mov
sub
add
xchg
add
idivl
cmp
ret
out
lahf
imul
push
in
cmp
movsb
shr
push
pop
out
add
pop
pop
mov
cmp
dec
xor
sub
in
cwtl
std
in
or
cmp
imul
test
add
pop
inc
clc
add
and
mov
or
add
les
lods
repnz
fbld
jmp
xchg
sbb
add
push
add
jne
xor
pushf
std
xchg
mov
mov
cltd
in
mov
out
pop
cmc
outsb
xchg
mov
xchg
ja
movb
or
jo
sub
add
ds
mov
dec
repz
mov
mov
mov
add
push
jp
fs
xor
hlt
adc
or
movb
mov
mov
add
inc
add
push
push
sahf
add
jo
mov
jnp
dec
outsb
sbb
sub
mov
imul
out
push
incl
add
loop
push
iret
pop
fistpl
sbb
mov
and
addb
rclb
dec
iret
jl,pn
roll
stos
sti
and
int
mov
stc
mov
add
push
pop
mul
rolb
mov
mov
fidivrl
mov
imul
nop
pop
jmp
push
xchg
sbb
mov
in
xchg
push
add
push
fwait
or
and
test
add
inc
add
pop
inc
add
fsubrs
mov
lahf
lahf
fcomi
dec
pop
in
imulb
mov
ds
movsl
push
test
dec
call
pop
and
push
inc
or
add
ss
pop
mov
pop
imul
dec
cltd
repz
inc
pop
inc
or
cmpsb
ljmp
cli
fistl
add
scas
scas
sub
repnz
jle
pop
mov
test
jbe
hlt
xchg
mov
out
int3
out
cs
sub
repnz
sbb
test
mov
cmc
pop
cwtl
xchg
fmuls
aas
sub
add
mov
lock
es
rolb
mov
sti
aad
jb
test
push
in
outsl
xor
adc
and
std
inc
mov
lret
sub
imul
dec
xor
and
outsl
mov
pop
popa
adc
or
ficomps
jno
call
xchg
inc
add
iret
and
pop
xchg
es
jns
cld
adc
add
mov
and
add
push
shll
add
dec
fidivs
mov
add
inc
add
pop
mov
fsubl
add
in
das
pusha
add
cltd
jle
add
dec
pop
arpl
mov
add
lahf
or
cmp
sti
push
popa
sbb
test
add
int3
mov
add
jb
add
push
inc
add
test
jecxz
pop
add
jecxz
mov
ret
mov
cmp
mov
icebp
xchg
in
leave
pop
or
ret
dec
into
fidivl
sbb
cli
mov
or
lcall
movb
mov
lret
sbb
or
lods
aad
jae
add
test
call
shl
aam
push
int3
dec
jecxz
mov
cmp
shll
and
push
addb
jecxz
test
mov
xchg
outsl
add
mov
add
push
mov
add
jl
push
xor
ss
dec
mov
mov
jmp
dec
leave
sbb
adc
adc
lahf
jne
cmp
movsl
sbb
mov
fstps
mov
mov
lods
jmp
iret
cmc
mov
movsb
in
sbb
sbb
inc
not
cltd
repz
daa
daa
cmpsb
pop
push
aam
adc
out
jno
add
int3
xchg
lret
sub
and
jp
and
ret
pusha
add
xchg
movb
xchg
cmp
cmc
sbb
inc
sub
pop
mov
dec
out
loop
xor
les
lcall
mov
add
add
dec
mov
mov
shlb
lret
xor
jbe
pop
pop
ret
mov
add
cmp
rolb
add
fwait
mov
sbbl
dec
cld
pusha
add
mov
dec
mov
push
addb
xchg
pop
imull
push
js
leave
inc
leave
test
dec
pop
cli
lods
int3
adc
cmpsl
ja
cmp
pop
jnp
pop
shll
je
push
stos
mov
shll
call
pushf
sub
rcr
sub
add
sbb
and
push
ret
movsb
xorl
xor
ror
pop
testl
lds
lahf
aas
fptan
incb
inc
add
push
lcall
sbb
lahf
addb
mov
adc
add
call
adc
sbb
imul
stos
jne
inc
add
sqrtps
rolb
add
mov
adcl
inc
add
movl
mov
pop
mov
jmp
inc
add
and
dec
push
push
mov
sti
fidivrl
outsl
sbb
rcrb
add
xchg
aam
shlb
inc
jno
lods
cmp
add
shl
cli
sub
or
add
jae
push
mov
idivl
pop
stc
jp
cli
popl
xlat
sub
aam
cmpsl
popf
jecxz
aas
lret
es
add
int3
push
xchg
in
inc
rcrb
out
xchg
leave
call
mov
jg
leave
popf
mov
lea
daa
xchg
mov
lret
cmpsl
push
cmpsl
fwait
in
insb
or
mov
cmp
lret
es
lods
mov
ss
push
pop
and
movsl
jo
clc
mov
iret
jns
push
add
mov
iret
cmc
push
out
cmp
sarl
ljmp
sub
sahf
lahf
lds
ja
xchg
rcll
clc
stos
sub
les
cwtl
dec
dec
mov
stc
jnp
xor
jg
xchg
cwtl
loope
xchg
dec
cmp
fs
mov
sub
pop
sub
sbb
icebp
or
sbb
data16
outsb
cmc
js
rolb
xchg
pop
clc
push
ljmp
add
je
vrsqrtss
add
cli
jge
sub
and
xor
repz
push
icebp
and
push
sub
pop
addb
pop
rolb
xchg
pop
loopne
iret
rolb
and
jmp
mov
addb
inc
push
in
add
lret
and
and
and
movb
add
xor
pop
pop
cli
popa
test
imul
push
mov
hlt
pop
xchg
push
testl
out
add
ficomps
add
push
pop
xor
mov
inc
add
add
es
push
scas
sti
cmp
stos
mov
add
xchg
in
push
aad
xor
das
push
mov
push
jnp
adc
jl
fimull
inc
lret
stc
movb
pop
int
aam
add
addb
fs
pop
ljmp
outsl
ss
adc
add
ja
sub
idiv
xor
and
xlat
sarb
nop
idivl
out
cmc
fadds
mov
aas
jno
insb
dec
aaa
test
pop
pop
icebp
lahf
push
movb
in
push
xchg
out
dec
sbb
mov
sub
xor
jge
inc
add
int3
scas
arpl
test
sbb
out
adc
scas
mov
xor
add
and
rorl
jbe
decb
sub
lock
lret
les
dec
mov
add
pop
lods
cwtl
pop
push
push
mov
sbb
fildl
adc
int3
pop
scas
mov
addb
xchg
cwtl
jge
out
std
sbb
push
sahf
dec
sbb
adc
or
xor
roll
adc
cmpsl
inc
lds
xchg
push
jnp
mov
push
cmpsb
stos
mov
pop
jno
add
ret
push
mull
test
or
add
mov
je
mov
jb
fidivl
imul
sbb
addb
enter
sub
pop
pop
mov
cmp
js
dec
inc
add
add
lcall
pop
js
and
add
xchg
test
ret
cmp
xchg
push
pusha
add
xchg
or
ja
mov
or
dec
cmp
subl
cmp
fdivrl
and
imul
or
pop
xorl
ret
testb
shlb
mov
push
and
stos
lock
add
push
fs
ja
and
data16
add
add
sub
jge
add
pop
pop
data16
mov
pop
fadds
add
pop
pop
dec
ja
rcrb
mov
and
nop
stos
in
scas
mov
outsl
shlb
mov
add
xor
clc
ljmp
daa
les
add
add
aam
add
loope
xchg
sub
repnz
addb
movb
mov
loopne
add
sub
int3
leave
stc
push
dec
leave
rep
mov
lret
sarb
movsb
ret
pusha
add
sahf
loop
ss
pop
test
enter
stos
stos
jge
cmp
add
adc
add
add
pop
fsubs
sbb
xchg
mov
ret
pushf
shrb
test
xor
jle
roll
add
mov
pop
int3
cmp
dec
sbb
xchg
push
inc
add
ja
fcomip
pop
loopne
bound
notl
adc
aaa
pop
aad
add
add
mov
sbbl
mov
dec
dec
and
mov
xchg
divl
ret
mov
popa
lahf
rcpps
add
or
push
sub
jl
lret
cmp
outsb
mov
jmp
lahf
pop
pop
pop
jle
mov
pop
enter
fwait
sbb
aam
ret
adc
ret
xchg
arpl
insb
cs
add
cmc
addb
add
loopne
fs
rolb
add
cs
sub
add
fnstcw
inc
mov
inc
adc
push
add
sub
cmpsl
push
adc
sub
inc
add
clc
inc
add
add
daa
mov
xor
testb
cwtl
sbb
sub
push
inc
add
add
cltd
shlb
int3
dec
in
cmpsb
dec
push
add
add
ss
cmc
idivb
popa
mov
push
fsts
ja
out
imul
lcall
jns
sub
wrmsr
mov
xchg
les
jg
loope
stc
push
sbb
add
pop
jmp
or
aad
or
addb
xchg
add
mov
shlb
adc
cs
aad
out
jo
cli
jge
lock
aad
ss
mov
call
out
add
sub
add
add
push
cmp
test
push
jmp
and
sub
push
shlb
fdivrp
loopne
test
pusha
add
insb
or
mov
cmp
pop
push
sti
in
in
mov
dec
inc
pop
mov
loopne
pop
movb
add
addb
add
inc
add
pushf
lods
push
icebp
aad
add
or
sbb
and
adc
daa
push
adc
ja
jecxz
mov
test
add
dec
push
outsb
jl
xlat
jmp
xlat
mov
cmpsl
cmpsl
mov
sub
cmp
cmp
mov
mov
add
leave
data16
push
add
fsubl
addb
aad
mov
mov
cli
pop
shlb
sbb
imul
push
in
xorl
fs
loopne
sbb
fs
mov
testl
or
call
cld
enter
stos
loope
sbb
lea
mov
mov
push
movsl
outsl
and
daa
int3
dec
mov
add
insl
and
call
add
xchg
aaa
xchg
dec
out
sbb
push
adc
cltd
lret
xchg
cmp
imul
push
push
lret
push
ds
jnp
xchg
movsb
sbb
mov
add
mov
in
dec
pop
jo
or
push
test
fdivrs
add
shl
dec
or
out
data16
or
rolb
add
lret
lods
adc
cmp
adc
fldenv
gs
jne
push
imul
xchg
jg
inc
jns
xchg
shrb
xor
fimull
mov
ds
xchg
movsl
dec
add
add
jecxz
lock
pop
pop
jbe
add
insl
out
mov
add
xchg
in
pop
movsb
stc
filds
aaa
cmpsl
mov
dec
stc
add
in
xlat
shll
enter
pop
pushf
push
push
rolb
addl
push
insb
test
adc
inc
add
xchg
sbb
stc
fmuls
or
imul
cmc
mov
imul
jb
jp
mov
dec
leave
xchg
add
push
dec
sub
push
cmp
add
lcall
xor
cmp
loop
mov
fcoml
fists
test
push
xor
or
nopl
fs
nop
pop
sti
fisubs
pop
cmp
inc
add
cmpl
mov
add
shrl
push
xchg
xlat
fsubl
insl
js
sahf
pushf
xchg
test
pop
outsb
lds
mov
jae
mov
cli
popw
cld
rorl
push
repnz
rol
add
inc
xchg
inc
add
pop
or
jecxz
enter
add
pop
popf
mov
adc
aam
add
adc
or
mov
pop
pop
lea
jo
pop
sbb
or
xchg
push
repnz
and
sub
rorl
jns
cmp
jne
mov
into
and
xor
jb
in
sbb
jo
lret
rclb
xor
sub
push
add
jae
jno
mov
or
jmp
add
leave
mov
add
dec
sbb
mov
shrd
jmp
xor
push
lahf
lock
lock
mov
fistpll
mov
lods
out
addb
xor
adc
out
scas
mov
push
or
cmpsl
xchg
xchg
jae
pushf
les
stos
das
lahf
fwait
test
bound
pop
in
dec
popa
mov
cmp
add
cld
rorl
pop
hlt
lods
or
add
xor
scas
push
jno
jecxz
out
imul
dec
fsubl
mov
dec
shl
js
pop
icebp
pop
arpl
xchg
imul
mov
inc
pushf
mov
jb
int3
mov
dec
mov
add
arpl
jno
sti
xchg
aad
mov
jp
xor
xor
negl
cmc
outsb
jl
fcoms
and
rorb
cmp
sbb
pop
bnd
add
pop
jb
adc
mov
mov
add
add
add
sbb
test
mov
dec
jl
test
add
xor
ret
or
sbb
or
xor
jecxz
in
xor
jl
mov
sub
fcoms
adc
or
add
mov
inc
repz
ret
sub
mov
int3
cli
push
ficoml
xchg
out
jnp
inc
fsub
sbb
out
mov
fdivrl
push
sti
rclb
xor
hlt
int
js
fadds
dec
xchg
jo
jmp
fimuls
and
add
loope
mov
outsl
push
push
push
aas
test
les
or
scas
jge
add
mov
add
outsl
pop
arpl
outsl
nop
clc
mov
mov
mov
mov
add
xchg
mov
fs
cmpsb
in
dec
ljmp
mov
div
icebp
mov
stos
adc
sbb
les
adc
xor
push
fisubs
jne
in
mov
xchg
pop
lcall
sbbl
daa
mov
lock
xchg
pop
mov
or
popa
cmpsl
ret
pushf
xor
add
loop
add
test
mov
cmc
shl
arpl
lds
nop
xchg
or
lods
addb
mov
les
les
inc
jecxz
repnz
or
fdivl
stc
dec
ja
cmp
sti
xchg
lea
leave
imulb
scas
pop
ljmp
xchg
mov
mov
push
mov
mov
add
push
or
in
scas
add
cmp
pop
arpl
scas
cmpsl
ds
mov
rorb
add
ret
hlt
sti
xor
push
pop
outsl
xor
mov
cmp
add
jae
add
cltd
aas
hlt
mov
arpl
icebp
aad
aaa
lahf
mov
jno
jmp
ret
inc
xchg
xchg
ds
ljmp
xor
add
add
call
sub
rolb
out
test
mov
mov
add
pop
jo
xchg
ss
adc
adc
sbb
mov
stos
test
aaa
es
loope
out
push
je
add
lcall
sar
adc
mov
outsb
mov
jle
dec
popf
dec
jle
ds
sub
add
cmpsb
jnp
stos
xor
je
jmp
and
movsb
push
rorl
add
inc
lret
mov
push
insl
adc
fs
add
arpl
jbe
js
loop
scas
inc
cmp
mov
insl
lea
filds
aad
sbb
popa
mov
test
xchg
xchg
test
arpl
mov
pop
aas
addb
inc
inc
dec
fwait
sbb
vmovdqa
loop
add
jge
xor
and
push
ja
mov
add
sarb
lds
and
in
add
sbb
dec
mov
sub
or
sub
add
leave
xchg
sahf
dec
ja
fimull
mov
into
test
lods
addb
in
inc
add
add
cld
inc
add
sub
add
pop
inc
sti
pop
inc
add
inc
add
cmc
cmpsb
xor
sbb
ljmp
jno
cmpsb
into
add
dec
xlat
int3
xchg
pop
sbb
xor
mov
xor
sub
add
pop
cmpps
cmp
sub
dec
gs
or
xchg
movb
inc
and
gs
bound
xor
test
or
popf
stc
or
mov
ljmp
fstps
fsubl
pop
push
add
mov
test
pop
aaa
test
enter
mov
popf
jnp
mov
aad
add
rorl
cmp
jnp
loope
and
cld
sbbl
jmp
iret
and
incb
mov
pop
call
dec
adc
add
dec
jge
pusha
add
mov
sub
sub
cmp
cs
pop
idivl
insl
jmp
clc
push
cmp
push
ret
mov
roll
mov
rolb
push
fiaddl
add
pop
es
test
push
jg
jno
add
add
sarb
iret
adc
push
push
jbe
sbb
push
push
pop
jo
push
and
and
cld
mov
mov
mov
orl
pop
scas
dec
out
lock
imul
fildl
pop
pushf
jl
jecxz
sbb
test
xor
or
dec
rolb
mov
add
sub
lret
mov
idivl
addb
adc
fwait
cli
adc
es
ds
mov
mov
shlb
mov
sub
in
test
add
pop
inc
xor
in
pop
cmp
mov
iret
and
push
repnz
pop
cmc
jnp
mov
mov
inc
add
mov
xor
in
pop
mov
add
xorl
add
ljmp
add
pop
sti
or
mov
iret
push
fsubrs
leave
in
push
lock
adc
add
or
or
add
inc
add
pop
sbb
sub
stos
xor
add
sti
insb
cs
imul
and
or
lods
sub
fdivrs
push
lret
cmp
adc
inc
push
orl
movsb
dec
pop
lret
push
xchg
cmpsb
adc
xor
add
ljmp
mov
fsubrs
pop
icebp
test
enter
fsubrl
adc
addb
nop
call
add
movsb
and
jmp
dec
movsb
sub
js
or
pop
rolb
or
add
add
fisttpl
inc
lahf
cs
xor
sub
das
and
add
push
into
adc
popf
add
je
insl
repnz
or
jmp
add
adc
push
jge
outsl
push
jmp
das
or
lods
lahf
push
jo
add
or
loopne
add
out
xchg
push
roll
scas
loope
mov
adc
lods
xchg
bound
mov
addb
mov
cmp
enter
or
cmp
cmpl
sub
int
call
add
imul
mov
fiaddl
pop
sbb
push
out
sub
aaa
cs
add
pop
push
out
ret
ja
pop
data16
movlps
xchg
push
dec
sbb
fld
add
mov
cltd
and
es
xor
das
ss
xchg
and
repz
pop
push
mov
cltd
adc
stos
imul
sbb
cli
add
cmp
mov
xchg
repz
add
adc
adc
and
jmp
sahf
mov
mov
das
sar
and
add
sub
inc
add
cld
fcoms
xchg
xchg
xchg
push
int
dec
loope
add
test
call
bound
lds
add
xor
sahf
pusha
add
std
push
add
nop
lcall
faddp
add
rcrl
jg
gs
repnz
icebp
or
add
pop
xchg
sub
fwait
scas
cmp
xchg
cld
les
daa
test
jle
jg
add
add
xor
and
popf
lods
out
fs
mov
inc
sub
add
add
test
fisttps
mov
cld
jl
add
jno
lcall
in
div
pop
xor
pushf
leave
or
xor
jecxz
dec
jge
push
ja
add
pop
pop
movsb
sub
mov
mov
pop
push
sbb
pop
and
out
cmp
add
jge
mov
pop
bound
dec
in
enter
clc
jg
add
cmp
and
mov
sbb
jno
and
jo
fstps
and
cmpsl
xlat
je
mov
cld
in
add
add
inc
mov
shlb
jne
add
fists
sub
cmp
inc
add
daa
stc
pushl
andl
mov
push
mov
mov
icebp
mov
jno
in
repz
hlt
push
pop
movsl
call
sub
push
ret
push
xor
daa
add
stc
mov
add
mov
xor
push
fimull
jge
sbb
mov
cmp
rcrb
shl
test
or
or
jno
insl
rorl
dec
adc
cmp
ss
clc
sbb
lods
aam
mov
jp
fcmovnb
add
xchg
mov
ljmp
mov
fstl
mov
cltd
outsl
dec
ljmp
push
add
mov
add
into
sbb
add
pop
mov
lock
cmp
fbld
lods
push
cmp
test
pop
or
add
push
pop
jp
movsb
sbb
mov
fldt
xchg
xchg
lcall
sar
sbb
rorl
movb
dec
xor
fnsave
jbe
hlt
pusha
add
idiv
repz
push
cltd
adc
add
lret
adc
imul
leave
jno
out
test
clc
ljmp
int
pop
inc
lcall
repz
fcoml
add
das
call
rorl
mov
push
mov
adc
fcom
jg
jae
or
movsb
sti
xchg
and
or
mov
adc
xchg
mov
aad
fadd
add
push
add
dec
jge
sub
mov
mov
xorl
pop
mov
pusha
add
das
addr16
xchg
sti
mov
int3
addb
mov
xchg
jmp
jle
lods
lret
jno
addb
insl
sbb
in
push
popa
stos
pop
data16
ljmp
mov
add
xchg
out
fwait
add
jmp
fcompp
push
xchg
rorb
pop
push
add
dec
out
cmp
ss
ss
xor
insl
push
mov
outsl
fsub
add
test
and
lods
and
xorl
cmp
test
popl
call
jns
adc
nop
rcll
xchg
mov
add
dec
and
or
xor
mov
iret
gs
rcrb
es
gs
add
movsb
dec
sbb
jbe
mov
out
push
pushf
pop
rcrl
add
lret
pop
in
cltd
outsl
vshufps
xor
push
mov
movsb
and
flds
gs
or
adc
xchg
xor
int
fimuls
jno
lods
in
mov
outsl
adc
bnd
add
sub
movsl
in
repnz
jbe
xor
std
imul
fisubs
xor
xor
test
sbb
sahf
in
and
cmp
xchg
push
movsb
push
into
sbb
add
dec
push
xor
add
test
outsl
es
lock
inc
add
mov
add
xchg
inc
mov
lods
mov
add
test
push
add
call
mov
pop
mov
ljmp
adc
mov
cmp
jo
stos
movsbl
add
loop
das
cmp
push
add
push
inc
outsl
test
iret
mov
scas
rolb
rcll
std
or
jbe
pop
in
xchg
jge
pop
xchg
ja
push
out
cmp
inc
cmpsb
xchg
adc
mov
xor
lret
pop
stos
adc
add
lahf
hlt
pop
fcomi
ja
lods
les
inc
add
rolb
push
dec
insl
ljmp
add
jae
movb
add
rolb
sbb
jnp
es
cltd
fs
cli
xor
add
ja
jmp
lock
cmp
dec
push
les
lea
push
adc
aad
dec
test
in
xchg
and
lds
adc
dec
pop
lea
mov
xchg
add
sbb
test
sbb
xor
push
adc
dec
add
or
popf
pop
mov
xchg
stc
ss
out
add
pop
cmpsl
add
mov
flds
or
or
out
les
data16
movb
out
xchg
xor
iret
push
mov
outsl
ljmp
add
pop
cmp
sub
and
mov
jno
mov
pusha
add
add
dec
or
lods
mov
loop
sbb
lods
xor
xchg
or
scas
and
mov
movl
les
lahf
or
pop
add
repz
add
mov
sbb
mov
inc
addb
notb
mov
xchg
sarl
mov
leave
add
jno
jmp
mov
mov
lds
insb
pushf
fcoml
insl
scas
cld
xor
cmpsb
or
xchg
lret
scas
jp
ficoml
inc
add
dec
daa
lahf
repnz
push
bound
sbb
inc
add
dec
pop
jmp
sti
mov
pop
out
lret
fidivrl
movb
add
dec
int
xchg
jmp
mov
xchg
add
cmpsl
sbb
mov
ret
mov
mov
aaa
lret
mov
dec
inc
mov
push
das
outsb
jns
pavgb
repz
sbb
scas
add
xor
inc
add
or
sbb
movsl
loop
or
xlat
enter
js
and
or
xor
add
data16
mov
lahf
mov
adc
mov
movsl
imul
or
mov
insb
inc
add
add
pop
imul
cmp
jge
add
into
and
add
xor
add
mov
mov
mov
add
fldenv
std
dec
jp
sub
pop
popa
repnz
out
test
insl
aas
dec
mov
fs
stos
push
jno
std
jecxz
pushf
shrl
mov
in
jl
sub
add
jle
jns
je
hlt
in
jbe
dec
movsl
int3
xchg
and
or
dec
data16
and
add
cmpsb
cwtl
iret
inc
inc
jmp
add
outsl
xor
bound
int3
imull
nop
in
jno
and
adc
popa
enter
popa
addr16
enter
pop
dec
int3
es
adc
cmp
pop
dec
movsl
xchg
and
lock
leave
enter
mov
jle
and
xchg
and
addb
jl
addr16
sarl
fcompl
mov
jp
fstpt
lcall
add
fldl
add
out
lret
xchg
or
sbb
cs
push
addr16
mov
pop
jns
add
sbb
cmp
add
inc
add
lock
dec
cltd
dec
fcoml
stos
loop
xchg
movsl
inc
ja
cltd
jo
fnsave
add
adc
push
mov
cltd
movsb
pop
mov
adc
xchg
jo
push
add
sbb
and
push
sbb
lock
in
mov
add
loope
int3
enter
loop
push
jmp
add
repnz
out
iret
mulb
outsb
scas
and
in
imul
dec
push
lds
imul
std
divl
fs
pop
sar
mov
add
jo
jns
out
mov
sub
into
addb
cmpsb
popa
scas
cmpsl
test
sub
mov
scas
clc
dec
and
sbb
mov
cltd
ficoml
dec
pop
dec
cmp
push
js
add
dec
test
js
ret
mov
add
and
add
out
in
in
mov
cmp
add
push
dec
pop
xchg
sbb
sahf
dec
pop
out
roll
add
cmc
aaa
out
sbb
push
sub
sbb
inc
add
mov
sahf
mov
mov
add
shll
repnz
mov
dec
mov
addb
cltd
cmpsl
xor
test
xchg
ljmp
out
cmp
push
jbe
pop
rorl
dec
dec
mov
aas
je
std
fbld
push
xor
add
rol
add
and
das
mov
aad
and
cmpl
lods
mov
add
pop
mov
add
clc
mov
xor
mov
mov
add
cmc
out
jae
jle
add
stc
pop
inc
add
push
movb
xchg
pop
aam
dec
fsubrs
fcoml
cmp
or
ret
aaa
jne
sbb
inc
cltd
sbbl
add
stos
pusha
add
lea
inc
sub
jp
in
rorl
push
movb
sub
dec
movb
add
movsl
push
mov
pop
popf
adc
mov
add
add
adc
cld
sub
xchg
or
movsb
sub
jg
loopne
les
inc
add
mov
add
and
or
leave
int
push
jp
jbe
jl
mov
scas
cwtl
push
adc
shlb
test
scas
stos
lods
test
adc
push
push
add
and
out
cli
jne
dec
cld
and
pop
lods
out
jo
mov
inc
in
scas
addb
xchg
stos
sbb
sub
or
push
cmpsl
pop
push
inc
addb
xchg
lahf
test
add
ret
lds
pop
pop
fcoml
scas
sahf
ljmp
dec
mov
inc
push
xchg
fnstsw
fisttpl
lret
cmp
jnp
into
lods
pusha
add
add
xchg
nop
mov
inc
add
pusha
add
lods
fidivl
shrb
pop
mov
popa
xchg
mov
pop
std
es
les
fimuls
mov
gs
mov
add
xlat
not
sbb
mov
rcrb
pop
leave
push
push
xor
les
out
push
add
sub
std
push
mov
cmp
movsl
clc
mov
pop
fnstcw
inc
add
pop
mov
mov
cld
inc
xor
cmp
mov
xchg
lods
pop
mov
inc
mov
orl
pop
mov
popa
xchg
jecxz
cmp
ret
loope
cmpsl
insl
lds
bound
and
inc
add
inc
add
mov
add
out
or
ja
sbb
rorb
cli
cli
repnz
das
lahf
add
lcall
dec
inc
add
sub
gs
add
inc
addb
icebp
pop
int
jmp
scas
call
mov
xchg
into
jg
mov
pop
mov
mov
gs
aas
sbb
rolb
cmpsb
clc
movsl
leave
cmc
cmp
sarl
add
add
addb
cmp
fwait
jo
popf
das
es
popl
xor
mov
jge
pusha
add
daa
inc
and
cli
dec
movsb
testb
or
es
push
add
adc
add
test
cmp
jbe
int
movsl
lods
xchg
aad
pop
jnp,pt
insl
loopne
rcrb
fimull
stos
dec
or
shlb
dec
cmpsl
sbb
pop
mov
in
mov
das
jmp
pavgb
jo
jp
clc
mov
or
repnz
jne
dec
stos
insb
ds
add
out
outsl
sti
jbe
int3
push
mov
inc
add
test
fisttpl
add
add
or
out
push
add
fiaddl
add
test
add
sub
in
push
cwtl
mov
cwtl
or
add
xchg
dec
jl
dec
int
inc
insl
fwait
mov
ja
movsb
ret
lock
cmpsb
lahf
lods
jmp
pop
add
out
fisubrs
clc
out
cmpsb
jb
inc
repnz
in
jb
mov
add
adc
cmp
mov
add
fidivrs
mov
add
dec
xchg
ds
push
and
les
test
or
fdivl
mov
add
push
mov
addb
pushf
push
jecxz
sbb
popf
imul
rolb
inc
dec
pop
ret
mov
jb
push
adc
ret
addb
imul
inc
pop
sbb
or
pop
mov
pop
ffree
add
je
int
lock
xor
lret
daa
xor
jbe
iret
ret
adc
xchg
cli
fs
out
rcl
mov
push
in
sub
dec
pop
mov
mov
or
add
jno
insb
js
push
jb
add
repz
jg
fs
or
inc
and
adc
pop
daa
inc
add
outsl
leave
lods
sbb
mov
jecxz
cmp
xchg
rorb
fsubrl
scas
in
popa
mov
outsl
sbb
mull
inc
sub
adc
cli
out
add
stc
sub
repz
push
lds
out
add
ljmp
movb
jecxz
mov
add
mov
mov
push
inc
add
xchg
jl
es
adc
and
shlb
test
pop
push
test
pmaxsw
cmpsb
out
or
add
mov
add
scas
fadd
add
adc
test
inc
js
scas
divb
push
mov
outsl
int3
lods
push
lret
sti
adc
jo
jge
lods
scas
sub
xchg
add
hlt
sahf
aaa
ljmp
jle
fists
outsl
out
es
xchg
xor
shrl
push
add
xlat
je
pop
aaa
pop
mov
sbb
das
imulb
dec
into
xlat
jecxz
std
inc
add
addr16
out
mov
pushf
orl
lret
ret
and
ljmp
fnsetpm(287
test
dec
add
sub
out
sbb
sub
outsb
mov
loope
inc
add
testl
xchg
in
out
lds
dec
dec
stc
mov
lret
or
scas
js
int3
pop
pop
test
push
cmp
add
lods
aad
cmp
sub
mov
push
jg
sti
sti
nop
ljmp
ss
jnp
bound
ljmp
repz
xchg
cmp
jo
or
dec
imul
repnz
mov
add
dec
ds
mov
xor
dec
fstps
mov
insb
mov
out
fisubs
push
lahf
adc
adc
add
add
ljmp
stos
int
mov
mov
fcmovnbe
popa
ljmp
enter
add
jns
and
inc
and
cmovae
dec
cmp
dec
add
scas
insl
imul
dec
out
mov
enter
jle
into
scas
push
xchg
adc
add
mov
out
enter
clc
outsb
loopne
std
xlat
fucomp
mov
addb
add
add
fnstenv
sbb
jle
adc
lahf
outsb
les
add
dec
lea
add
xor
addb
push
and
add
out
inc
cld
jae
mov
pop
stc
in
fimuls
or
mov
mov
sbb
ds
loop
pavgw
xor
cmc
push
movb
mov
movsb
imul
loopne
push
add
sbb
daa
mov
mov
ss
les
or
or
sti
pop
pop
insb
adc
xchg
stos
push
dec
arpl
js
aam
xchg
outsb
add
adc
xchg
int
xlat
hlt
or
int3
scas
pand
sahf
pop
jno
es
jmp
or
sub
enter
fwait
pop
push
add
lods
push
jecxz
mov
addb
repnz
dec
fcomip
sbb
xchg
mov
xchg
scas
inc
dec
sbb
sbb
and
data16
jmp
add
stos
pop
jnp
add
jecxz
fmull
adc
out
leave
pop
adc
jb
bound
testl
cwtl
adc
pusha
add
int3
repz
loop
int3
sbb
sahf
scas
mov
cmpsl
xchg
ret
or
addb
pop
fdivrl
cs
into
push
mov
sar
das
enterw
add
inc
movzbl
mov
or
mov
orl
add
and
mov
out
xor
sbb
scas
bound
sub
aas
movsl
out
xlat
sbb
sbb
dec
test
rolb
stos
ret
jae
inc
add
testb
fidivrs
and
movb
js
cltd
je
cmp
xor
mov
fstpt
inc
cmp
insl
xchg
cmp
mov
cwtl
or
js
adc
sub
add
jmp
std
and
dec
mov
cmp
mov
adc
dec
shll
cmp
cmp
sbb
adc
jns
stos
sub
inc
add
push
jmp
shll
push
imul
push
je
test
jne
jno
xchg
stos
out
popf
pop
sub
cmp
imul
mov
or
pushf
pop
and
mov
inc
imul
cmp
pop
pushf
xchg
mov
add
movb
mov
or
xchg
add
nop
sbb
add
out
cmpsb
mov
cmp
mov
push
and
xchg
mov
outsb
inc
gs
test
out
cwtl
jae
xor
push
xchg
inc
imul
xchg
lea
negl
or
jecxz
and
scas
lret
into
lea
ret
fidivrl
adc
mov
push
push
sub
addb
popf
xchg
lds
lret
dec
mov
xorl
dec
push
ret
mov
push
lods
adc
pop
push
fs
leave
popa
sbb
add
pop
xchg
out
addr16
ds
add
adc
testl
or
dec
enter
mov
jb
test
push
mov
inc
int
push
ret
cmp
ljmp
jne
out
pop
je
hlt
sub
pop
scas
outsl
fsubl
jl
cmpsb
sbb
sar
aas
pop
shll
dec
add
xor
mov
add
enter
outsl
mov
add
cmp
xor
push
mulb
add
add
dec
insb
sub
jge
sub
loop
xchg
xchg
subw
outsb
inc
cmp
pop
add
mov
xor
xchg
sti
push
js
sti
add
dec
lea
movsl
sbb
add
loop
jp
mov
insb
push
add
jecxz
push
push
mov
shl
xor
add
imul
xor
mov
notb
sub
lahf
cld
jp
add
je
xchg
dec
loopne
adc
dec
cmc
lods
add
jbe
ret
inc
add
xchg
cld
leave
sub
add
shll
sub
popaw
fisttpl
movsl
fsubrl
ss
out
cmpsl
xchg
push
fmul
sbb
inc
add
clc
shll
in
cmpsl
jo
jg
xchg
mov
das
inc
add
call
enter
in
stc
sub
cmp
leave
push
xor
or
mov
pop
xchg
jnp
lret
adc
sbb
jg
inc
xor
and
cmp
mov
mov
jb
or
xchg
sbb
fldl
ja
stos
jae
ss
mov
lds
fcmovnu
mov
lock
fwait
jno
bound
pop
inc
add
adc
inc
add
test
inc
add
clc
mov
fidivs
in
pop
cmc
cmp
dec
outsb
call
lahf
mov
ss
insl
sub
out
jmp
fwait
xchg
mov
sbb
negb
sub
mov
iret
pop
ret
pop
in
or
ficompl
jbe
mov
in
repz
mov
int
lret
ss
cwtl
mulb
int
cmc
icebp
imul
cmp
pop
pop
repz
insl
inc
test
pop
sbb
stc
loop
jae
cmp
test
hlt
cmp
xchg
xor
pop
mov
cwtl
mov
add
add
popa
fisttpl
xor
dec
enter
aaa
push
inc
loope
and
fwait
test
xchg
imul
dec
cwtl
stc
sbb
pop
addr16
xor
cwtl
push
mov
adc
test
stos
aam
aad
imul
add
out
push
pushf
xchg
sbb
repnz
ds
cwtl
jne
add
add
push
jg
insb
adc
push
add
inc
jnp
jmp
pop
and
mov
push
adc
pusha
add
jp
pop
scas
jp
push
outsb
je
dec
xchg
js
add
outsl
inc
add
xchg
ja
sbb
mov
jg
leave
outsl
scas
rolb
xchg
cmc
sbb
mov
lds
push
mov
add
arpl
sbb
and
out
in
add
jae
push
cmpsb
mov
add
aam
repz
mov
mov
das
cld
movsl
pop
out
jle
addr16
clc
into
xchg
mov
fwait
dec
test
mov
pop
pop
mov
sbb
je
dec
rcrb
or
popa
pop
jecxz
inc
call
cmc
adc
add
jbe
dec
out
arpl
es
xchg
ficoms
xchg
stc
inc
add
dec
outsl
test
jmp
insl
cmp
pop
rolb
pop
lods
sbb
pop
lret
adc
add
pop
lahf
dec
push
xor
bound
mov
ds
add
mov
fidivrl
sar
jge
add
add
dec
pop
mov
cmp
popa
xchg
cmp
inc
movb
mov
push
cmc
adc
stos
pushf
iret
jbe
sub
xchg
and
mov
jno
icebp
dec
insl
pop
nop
popa
dec
movsl
fwait
add
and
fcomp
sbb
jns
icebp
insb
pop
cmp
dec
adc
add
cwtl
std
add
in
fisttpl
mov
shll
and
rcll
jmp
ret
out
scas
lock
in
lret
scas
mov
adc
mov
inc
add
cwtl
jle
shll
lahf
jnp
or
out
stos
ja
dec
dec
add
push
push
out
pop
or
cmc
adc
sub
test
scas
dec
mov
std
pop
outsl
or
cmp
mov
xor
in
add
scas
jl
in
mov
gs
jb
adc
shll
cmp
xchg
sbb
cld
cmc
add
add
inc
xchg
outsb
clc
xchg
and
in
ret
push
in
jmp
add
adc
in
sbb
leave
push
je
es
push
pushf
pop
jns
add
fsub
pop
shlb
lcall
scas
je
mov
jnp
adc
adc
ds
inc
or
lret
dec
bound
loop
jo
insb
push
imul
outsl
pop
push
aaa
insb
lahf
aam
xor
sub
cmpsb
lahf
pop
jmp
mov
repnz
mov
cmp
movsb
mov
jecxz
push
mov
call
jae
add
test
hlt
or
int
jecxz
mov
jb
popa
mov
add
mov
xor
lds
movsl
movsl
or
add
mov
mov
push
inc
xchg
cmp
jmp
add
dec
ret
rcrl
out
push
sbb
mov
lds
xor
add
xor
pop
xchg
xchg
stc
mov
xchg
int
outsl
ret
adc
std
into
cmp
insb
xor
add
mov
jae
or
pop
jbe
outsb
cs
fimuls
add
clc
pop
push
sbb
cmp
push
mov
sub
jecxz
and
cli
cmp
loop
cmp
push
jle
pop
xchg
insl
adc
mov
mov
scas
mulb
gs
stc
cmp
cmp
xchg
jne
rolb
sub
test
jle
fdiv
jecxz
movb
and
lcall
mov
pop
mov
pusha
add
addb
dec
pop
imul
jae
scas
in
pop
outsb
or
test
cmpsb
pop
in
addr16
mov
cmp
repnz
pop
std
pop
lret
dec
dec
pop
add
insb
movb
adc
mov
push
adc
pop
out
gs
loopne
push
adc
cs
jae
fidivrs
ret
or
leave
loope
add
js
mov
mov
jp
gs
insl
rolb
sbb
movsb
lods
push
add
jmp
ss
outsb
movl
mov
xor
jae
stos
push
ret
add
add
dec
push
xor
pop
movl
add
std
jp
sub
insb
inc
sbb
bound
adc
dec
rolb
or
popf
loope
adc
aad
xchg
jge
xor
gs
add
fisubl
inc
add
sbb
mov
add
stos
stos
xlat
jno
sbb
mov
dec
xor
jge
jle
add
add
sub
mov
push
sbb
xchg
push
push
mov
roll
add
jb
data16
lds
repnz
jne
add
das
sub
int3
pcmpgtd
test
mov
xchg
lock
pop
call
inc
add
add
and
dec
fsubl
aaa
mov
add
scas
mov
inc
add
and
adc
push
push
add
add
or
mov
mov
add
pop
cwtl
xchg
fsubrl
pop
cmp
lods
xor
mov
mov
aas
cmpsb
stos
or
jl
add
pusha
add
add
ljmp
ficoms
loope
aad
add
or
scas
pop
adc
jno
aad
pop
cmp
xor
pop
pop
cmp
nop
xchg
push
adc
rorl
in
xor
pop
inc
lcall
out
movb
int
xchg
add
jp
aad
cmp
and
je
ret
xor
ss
out
aas
lods
insl
mov
xchg
outsb
icebp
inc
pop
incl
addr16
aam
fs
sub
cmpsl
cmpsb
dec
mov
ret
sbb
mov
sti
hlt
jns
fldcw
mov
and
loopne
test
std
dec
lahf
movb
les
sbb
out
sub
sub
adc
add
add
in
mov
mov
jb
cs
aas
mov
inc
and
pop
aam
push
or
inc
pop
pop
push
sbb
pushf
out
jo
mov
xchg
sub
into
dec
push
xchg
cmp
pop
xchg
fcomps
jecxz
mov
mov
mov
jmp
out
jb
sbb
in
fdivs
xor
stc
adc
xor
push
push
ret
sub
movsb
data16
cld
jae
jno
test
daa
cmpsb
jle
cmpsb
xchg
lret
mov
jecxz
iret
mov
lea
and
movsb
shr
arpl
add
xor
jbe
add
inc
cmpsl
adc
xchg
mov
dec
fiaddl
inc
add
sbb
repnz
and
push
dec
push
inc
add
sub
scas
je
test
add
xchg
addb
addb
push
add
mov
movb
mov
pusha
add
xchg
jl
jae
xor
jnp
xchg
pop
ljmp
xor
add
xchg
cmp
jecxz
push
data16
mov
inc
add
mov
gs
xchg
dec
add
dec
mov
cli
inc
je
pop
inc
add
dec
jne
aad
fcoml
iret
aam
cmp
add
mov
mov
push
sbb
cmc
ljmp
xchg
dec
jnp
dec
inc
add
xor
add
push
mov
mov
lahf
mov
inc
das
jno
dec
mov
mov
jg
jns
cmp
jp
or
sbbl
test
xchg
lret
push
pop
fidivrl
dec
mov
icebp
cmp
cmpsb
dec
icebp
test
mov
jmp
mov
inc
or
in
mov
mov
inc
std
jle
fiadds
arpl
add
es
ljmp
push
and
clc
jo
cmp
xchg
xor
mov
sbb
lahf
adc
int
cwtl
pop
aas
lahf
inc
add
enter
leave
inc
int
adc
stos
xor
mov
xchg
pop
push
popa
jp
notl
add
fcoml
jno
in
mov
ret
bound
xchg
movsl
jo
pop
jecxz
aas
xchg
addr16
movsb
decl
add
mov
divl
push
dec
fistpl
ds
xchg
xor
movd
dec
adc
cmp
rcll
pop
cmp
les
dec
out
add
cltd
mov
push
arpl
flds
addb
mov
dec
mov
sub
in
xchg
lret
rcll
push
aaa
sbb
lcall
in
or
jno
adc
cmpsl
fnsave
mov
sarb
push
movsl
std
icebp
into
js
push
or
iret
shrb
cmp
sub
push
data16
rolb
sub
mov
cmp
pop
sub
stc
mov
push
xchg
jl
adc
add
mov
and
ret
mov
or
shr
ja
lcall
mov
and
push
add
dec
aad
outsl
sub
ds
jno
dec
ret
mov
push
push
mov
mov
ss
pop
lcall
addb
test
jo
repz
add
cltd
cld
in
or
scas
aam
sub
mov
imul
or
xchg
ret
xchg
jno
pop
clc
and
lea
enter
clc
movsb
mov
les
rorl
and
hlt
addb
mov
push
add
sbb
cmc
inc
or
mov
loop
add
sub
push
aaa
imul
add
xchg
ds
jae
inc
cmp
stos
sub
sahf
push
inc
into
mov
sub
sbb
add
test
imull
fmull
dec
stc
pop
repnz
xchg
mov
int
popf
mov
pop
and
adc
sbb
adc
daa
int3
xor
sbb
push
insb
cli
jl
pusha
add
pop
fisubs
sub
mov
xchg
mov
pop
hlt
sti
repz
mov
ja
jns
mov
loop
cmp
lahf
adc
test
jno
int
in
sub
test
jo
jmp
inc
add
lea
nop
aad
add
fs
or
add
test
xor
arpl
add
xor
push
add
or
das
dec
cwtl
repnz
sbb
mov
outsl
fstps
mov
popf
addb
mov
clc
mov
sub
or
gs
bound
xchg
add
jl
inc
add
stos
add
movsl
inc
add
insl
jne
pushf
mov
jnp
ja
and
inc
add
lds
add
pop
call
mov
xor
cltd
and
call
loop
js
into
pop
and
push
sub
xor
add
