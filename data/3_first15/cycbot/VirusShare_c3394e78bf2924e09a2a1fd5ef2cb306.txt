jae
out
dec
out
outsb
sub
mov
dec
mov
jecxz
into
inc
add
popf
pop
xor
mov
mov
add
mov
fldl
rolb
mov
add
adc
mov
add
mov
rolb
mov
xchg
sub
adc
dec
movsb
nop
add
outsb
inc
inc
arpl
rolb
mov
fstl
sub
xor
mov
add
cltd
testl
rcll
sub
cmp
or
inc
sub
test
pop
in
add
int
mov
mov
sbb
imul
add
push
add
sbb
cmp
in
jno
arpl
std
mov
loop
mov
mov
daa
xor
lahf
add
adc
mov
mov
xor
sahf
xchg
enter
jnp
mov
sub
mov
jo
mov
ljmp
mov
mov
add
xlat
lret
mov
jnp
addr16
loopne
mov
add
test
repnz
push
mov
jo
mov
jbe
es
mov
lock
sub
loop
mov
pop
cmp
add
mov
mov
xchg
jb
mov
xor
rolb
mov
adc
add
dec
js
bound
mov
mov
push
out
inc
sbb
mov
sub
push
dec
lods
cmp
xchg
adc
sub
add
mov
add
or
movsb
xchg
jecxz
add
and
mov
adc
rolb
mov
popa
dec
inc
inc
add
add
add
in
mov
call
mov
mov
out
adc
mov
daa
push
lods
out
loope
xor
mov
inc
jmp
ljmp
push
xor
mov
shl
sbb
xchg
xchg
faddl
add
and
mov
pusha
add
and
mov
jae
cmp
xchg
fwait
out
mov
add
cwtl
arpl
pop
xchg
pushf
and
cmpsb
adc
hlt
push
add
add
mov
add
pop
outsl
push
pop
rolb
mov
dec
or
push
ds
std
xor
sub
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xor
mov
dec
mov
leave
mov
mov
scas
xchg
mov
xor
cmp
ficompl
cli
jp
jecxz
test
jns
cmc
jnp
add
add
xor
mov
push
repnz
and
add
aaa
repz
fldl
js
movsl
outsl
push
clc
js
jl
dec
popf
cs
sbb
fmul
mov
out
bound
mov
jae
out
sub
ret
out
push
mov
add
mov
inc
pop
add
add
mov
pop
mov
out
inc
sahf
add
dec
inc
mov
fcmovb
call
mov
test
dec
imul
add
adc
cs
pop
mov
mov
adc
cmc
pop
pop
add
add
jl
arpl
repnz
shll
mov
add
add
add
insb
mov
mov
es
test
or
int3
ds
jecxz
mov
mov
mov
pop
push
adc
mov
imul
sahf
rcl
sub
jmp
into
repnz
int
addb
cmpsb
jg
mov
add
and
mov
outsl
add
inc
inc
push
mov
xchg
mov
cmp
push
pusha
add
inc
imul
jg
jecxz
mov
sbb
add
mov
mov
add
add
xor
jb
mov
add
add
pop
and
pop
stc
stos
inc
add
add
add
xor
add
loopew
xchg
in
mov
xor
push
fnsave
mov
push
mov
mov
cmc
mov
mov
into
jp
enter
ljmp
mov
jle
inc
mov
or
mov
ljmp
cld
xor
mov
jo
mov
lahf
test
add
mov
sbb
inc
hlt
or
or
out
mov
sbb
jmp
sahf
mov
aas
inc
leave
std
pusha
add
pop
in
xchg
nop
add
xchg
or
mov
les
les
add
mov
or
imul
mov
mov
loopne
mov
add
add
add
inc
add
jnp
ss
ss
fs
loop
mov
addb
dec
push
xchg
dec
add
sbb
push
and
arpl
jp
cmp
fmull
pop
fndisi(8087
or
add
rolb
mov
jmp
inc
add
mov
lods
or
rolb
mov
sti
mov
mov
sahf
pop
mov
ffreep
pop
mov
add
sub
ss
ja
mov
enter
std
std
sub
sbb
pop
or
cmp
pop
addb
cmp
mov
movsb
mov
mov
outsl
dec
cli
mov
add
mov
xchg
push
lahf
nop
add
jbe
int3
loop
mov
loop
mov
cld
pop
divb
add
fstpl
cmp
mov
int
icebp
and
mov
dec
out
loope
clc
dec
pop
mov
jne
lods
faddl
pushf
fstl
movb
mov
iret
js
add
mov
orl
mov
fisttps
mov
add
add
add
jb
mov
lret
xchg
push
mov
loope
out
sbb
mov
jg
aam
adc
sti
jo
mov
arpl
mov
in
lcall
add
lods
sub
test
pop
dec
mov
mov
add
add
mov
xor
mov
xchg
pop
arpl
dec
mov
leave
test
or
push
fs
xor
xchg
iret
rolb
mov
mov
sub
add
mov
sbb
and
add
inc
rolb
mov
add
int3
addb
xchg
lods
into
xchg
ja
add
jmp
add
jge
jp
sahf
scas
mov
push
xor
aaa
pop
addb
xor
adc
mov
sahf
repz
sahf
inc
add
add
dec
sbb
push
das
jmp
inc
jo
mov
mov
fcmovnb
sbb
out
adc
mov
dec
rorl
add
ja
mov
mov
mov
add
pop
xor
mov
pop
xchg
test
push
add
xor
add
outsb
lds
sti
addb
sahf
mov
mov
adc
mov
aam
add
mov
dec
or
mov
push
enter
lret
loopne
mov
bound
mov
cvtps2pi
xlat
je
add
mov
mov
and
jae
mov
outsb
xchg
add
fcmovb
movsl
lock
mov
add
stc
stos
ficomps
push
sti
dec
push
mov
xor
mov
test
pop
adc
add
rolb
or
lds
lds
stos
cmpsb
daa
mov
jmp
xchg
sbb
xchg
outsl
push
ljmp
mov
sti
das
imul
xor
mov
add
and
add
add
dec
inc
add
shrl
pop
loope
mov
adc
mov
add
mov
outsl
pop
and
mov
push
cld
inc
push
fmul
dec
aaa
ss
imul
mov
mov
out
ljmp
and
adc
adc
icebp
movlps
mov
movlps
jecxz
xchg
cltd
and
add
add
pop
push
cwtl
cmp
add
mov
cltd
bound
mov
xchg
xchg
sub
mov
add
mov
mov
mov
outsl
lods
cmpsb
sbb
mov
ljmp
or
xchg
mov
fdivs
ds
dec
cmp
push
shll
add
scas
jae
xchg
pop
addr16
push
mov
mov
jl
xchg
aaa
dec
mov
add
jge
mov
cli
rolb
mov
insl
jge
insb
out
cmp
rolb
mov
add
add
imul
out
mov
lahf
shll
outsl
cmc
push
fdivs
add
mov
ja
push
dec
xor
test
mov
mov
pop
cwtl
mov
ljmp
jmp
push
fdivs
cs
pop
or
mov
jae
add
mov
add
cld
sbbl
push
mov
repz
add
add
push
xor
cmp
and
mov
pop
cs
popa
sub
mov
add
or
mov
mov
add
mov
adc
mov
das
xchg
sbb
mov
sub
add
mov
push
cwtl
lds
popa
into
out
add
fldt
mov
sbb
xchg
push
in
add
xchg
add
jns,pt
les
mov
mov
fldt
mov
xchg
add
outsl
inc
popa
push
jns
inc
gs
xchg
add
lret
bound
mov
cs
xchg
div
repnz
lock
mov
inc
pop
cli
cli
push
pop
push
add
pop
mov
add
adc
mov
js
scas
xchg
xlat
xor
cmp
mov
xchg
js
jl
shll
js
arpl
and
cli
inc
jno
inc
lods
sahf
mov
cld
in
add
mov
jecxz
clc
jnp
stc
ret
iret
jno
xchg
addr16
jecxz
sbb
mov
and
jge
fs
lods
mov
lcall
mov
cmp
insl
xor
dec
sbb
push
adc
sub
dec
stos
cmp
and
push
pop
repnz
push
ljmp
jmp
mov
lea
add
lds
jmp
cmp
push
adc
sbb
jbe
fisubrs
and
mov
data16
into
sbb
std
pop
jbe
add
add
adc
mov
add
xor
movsb
dec
sbb
cmc
inc
mov
addr16
cmp
add
lods
push
add
mov
add
add
push
rolb
mov
sub
inc
sbb
mov
pop
bound
mov
inc
xchg
xor
add
outsb
testl
or
inc
jbe
jge
sbb
add
inc
sbb
add
sahf
mov
inc
fistpl
add
adc
sbb
mov
push
bound
mov
cld
jae
fisubrl
push
push
push
inc
decb
dec
test
add
mov
rolb
mov
mov
cmp
and
mov
and
jns
inc
pusha
add
mov
leave
repnz
imul
adc
dec
addb
in
cmp
add
sbb
cmp
inc
leave
sbb
push
in
fimull
add
mov
aam
xor
mov
fistps
add
cmp
sub
mov
icebp
jg
add
int
dec
repnz
loopne
mov
or
add
mov
mov
push
add
popf
pop
dec
or
xchg
es
mov
mov
add
push
popa
pop
out
cmp
jl
add
mov
lahf
mov
out
hlt
mov
mov
inc
add
add
sub
ja
cmp
add
add
add
xor
mov
inc
lret
aaa
mov
jne
pop
addb
mov
dec
inc
add
mov
mov
shll
mov
mov
push
mov
test
stos
das
xchg
mov
xlat
sub
or
stos
cmc
mov
mov
add
mov
cs
repnz
mov
fstpl
leave
je
sahf
int
dec
mov
mov
std
and
loope
pop
push
push
inc
pop
fwait
loope
testl
mov
mov
add
cmp
fstpt
mov
rolb
mov
add
mov
cmc
fsubr
dec
mov
mov
dec
ss
add
div
sarl
cs
jle
add
imull
in
mov
mov
fidivs
out
mov
mov
into
lds
ficoml
add
aas
loopne
mov
movsb
mov
mov
int3
imul
or
fnstenv
int3
push
sub
ss
test
fcomp
bound
mov
add
mov
xor
mov
add
xchg
inc
add
add
add
add
cmp
add
add
mov
jae
push
cs
rolb
jl
xchg
stos
jb
mov
stos
call
mov
mov
mov
stos
xchg
pop
mov
mov
mov
mov
lret
add
jl
fwait
cmp
fmul
or
into
push
add
xchg
cwtl
jnp
add
add
idivb
call
sahf
or
or
imul
dec
gs
cmpsb
jae
mov
repz
scas
pop
cmp
cmovno
xor
mov
mov
add
add
test
repnz
mov
add
lahf
mov
cmpsl
repnz
addl
cmovne
mov
les
xchg
out
testb
mov
push
xchg
add
and
mov
jb
mov
pop
cwtl
add
mov
sbb
loopne
mov
xor
jmp
sub
mov
stos
lods
je
and
in
lea
add
es
fiaddl
incl
mov
incb
orl
mov
cmpsb
loop
mov
mov
mov
add
xor
push
call
jne
imul
add
add
xor
mov
and
mov
and
mov
add
addb
fdivl
add
add
dec
push
pop
mov
mov
pushl
add
mov
add
add
clc
xor
aam
add
add
jno
add
sub
xchg
cmp
xor
std
movsl
je
sbb
mov
insl
negb
pop
icebp
lcall
pop
cltd
imul
mov
sbb
add
pop
lea
dec
jle
ret
xor
cwtl
stc
mov
pop
inc
mov
les
jmp
stos
unpckhps
add
mov
xchg
rolb
pop
lret
mov
xchg
dec
sbb
mov
push
add
imul
icebp
cmp
das
lods
repz
jle
push
xor
mov
xor
enter
push
hlt
mov
mov
ret
mov
fstpl
cwtl
mov
int
add
add
add
mov
cmovl
mov
add
mov
loop
mov
mov
outsb
sub
jo
mov
mov
lods
leave
mov
iret
mov
fsubrp
adc
cmpsb
inc
jae
xor
dec
mov
mov
mov
in
sahf
xor
inc
test
push
fs
cwtl
add
xchg
add
mov
dec
jae
add
adc
lea
test
push
not
lods
out
mov
mov
loopne
mov
ljmp
and
mov
add
and
mov
sahf
jbe
enter
pop
pop
mov
dec
push
inc
ss
lahf
adc
dec
in
es
push
xor
mov
dec
stc
aas
das
inc
mov
mov
dec
test
dec
pop
mov
push
dec
mov
stos
sbb
sbb
add
or
jp
lcall
sbb
pop
mov
popf
out
xlat
pop
jno
mov
mov
jae
jp
xchg
mov
mov
add
aad
in
add
mov
rolb
mov
xor
mov
mov
inc
add
add
mov
enter
idiv
jle
int3
out
xchg
gs
jne
mov
loope
pop
aad
adcl
or
mov
mov
pop
sbb
or
add
andl
loope
xchg
add
adc
mov
outsb
out
mov
mov
hlt
call
jl
xor
scas
mov
dec
int
push
mov
mov
jne
int
addl
scas
insl
pop
cmp
mov
and
pop
adc
mov
add
xchg
and
mov
add
mov
jb
mov
bound
mov
lods
std
iret
dec
stc
dec
lods
inc
data16
test
mov
add
add
lcall
out
rcrl
pop
xor
data16
jge
popa
xchg
mov
pop
dec
add
mov
add
mov
mov
bound
mov
mov
jecxz
sbb
cmp
mov
add
push
jae
dec
adc
mov
enter
pop
pusha
add
add
aaa
iret
add
inc
add
sbb
add
mov
insb
cmp
dec
cmp
mov
mov
ss
mov
xchg
pop
dec
rolb
pop
mov
and
mov
add
cltd
sub
push
pop
out
jbe
sbb
add
mov
add
lret
mov
dec
pop
xchg
iret
xchg
icebp
das
jecxz
dec
int3
sub
add
cmp
aas
push
add
jnp
dec
jnp
push
cltd
imul
or
xchg
and
je
popa
mov
test
push
add
or
test
test
ljmp
xchg
insl
xor
dec
in
adc
add
xor
test
and
mov
ret
ljmp
add
sub
add
add
mov
mov
add
and
scas
mov
dec
push
cmp
add
dec
je
in
push
jecxz
jno
jecxz
pop
out
cltd
test
sub
cmpsb
aaa
dec
repnz
ds
inc
add
or
xor
mov
scas
mov
mov
adc
cmpsb
cmp
cmp
pop
les
lret
lea
jle
sbb
stos
and
mov
xchg
xchg
lds
sub
sub
loope
popa
jg
mov
stc
stc
dec
aaa
insl
lods
in
mov
out
or
sbb
add
jl
mov
mov
cmc
ds
add
out
push
cmp
js
icebp
push
cmp
aas
fstpl
test
inc
inc
add
jge
add
les
pop
test
add
hlt
mov
dec
frstor
adc
ret
inc
add
insb
cli
popf
sbb
mov
add
aaa
fsubrl
sub
int
add
ret
jnp
jl
push
imul
fidivrs
pop
inc
das
into
inc
cmpsl
rolb
call
out
mov
mov
std
push
fmuls
dec
xlat
and
nop
add
sbb
fucomip
orl
in
lods
ss
mov
add
or
add
or
mov
out
adc
mov
imul
popf
in
xor
mov
mov
mov
adc
test
push
mov
push
add
cmp
add
add
jmp
aam
lahf
mov
add
add
mov
cmc
addb
jge
ffreep
aam
out
rolb
mov
aam
inc
mov
test
pop
dec
mov
adc
mov
inc
push
cmp
or
add
add
insl
fstl
mov
dec
mov
mov
add
add
je
into
mov
fwait
push
add
arpl
addl
cmc
jnp
add
mov
add
mov
popf
addb
inc
jl
addb
fnstcw
sbb
mov
movsb
fs
in
mov
mov
pop
addr16
out
mov
add
bound
mov
or
stos
push
add
cmpsb
sbb
outsl
fdivs
push
jno
pop
mov
lods
or
push
mov
out
popf
cmp
xor
add
mov
xchg
add
add
pop
aaa
push
mov
int
ret
scas
sbb
mov
mov
punpckhdq
jne
dec
stos
rolb
mov
fsubl
lock
adc
add
mov
jge
mov
add
mov
pop
push
add
lock
jne
filds
and
mov
ja
and
aam
sbb
add
lock
mov
das
add
push
push
mov
bound
mov
xor
push
push
stc
jo
mov
inc
add
in
push
leave
int3
es
add
int3
aam
int3
popa
dec
popf
psubusw
popf
pusha
add
fbld
aam
push
sbb
in
jno
adc
mov
add
call
mov
pop
loopne
mov
adc
mov
cli
push
mov
mov
add
insb
rolb
mov
dec
mov
xchg
inc
into
mov
movsb
test
mov
lahf
lods
das
in
mov
mov
add
inc
or
mov
popa
testl
add
icebp
fbld
rolb
xor
mov
add
sbb
mov
movsl
fcomi
add
out
popf
andl
test
add
dec
xor
push
rolb
mov
int3
or
mov
cmpsb
pop
sti
cmp
popa
jg
rolb
mov
add
add
push
jb
mov
xor
mov
insl
subl
cmp
ja
add
push
xor
mov
add
add
inc
add
mov
jp
and
sub
push
mov
out
nop
add
aam
xchg
outsb
aaa
jp
cli
test
xor
int
out
ficoms
sub
mov
sub
mov
mov
add
arpl
pusha
add
mov
pop
dec
outsb
fwait
push
repnz
adc
mov
jmp
cmp
add
add
xor
add
mov
mov
mov
add
add
mov
lea
fsts
add
cmpsl
scas
add
mov
mov
pop
cltd
sub
adc
mov
daa
je
mov
jge
in
paddd
jno
or
hlt
rolb
mov
pop
lcall
mov
adc
jp
add
dec
or
add
popf
pop
cmpsl
pop
mov
adc
mov
add
xor
mov
pop
add
mov
test
addr16
inc
add
lret
add
addb
sub
fwait
popf
int
pop
inc
add
fcmovbe
add
and
or
jmp
sbb
jg
pusha
add
mov
add
jnp
out
mov
mov
mov
and
mov
add
dec
pusha
add
lret
mov
in
sbb
mov
jo
mov
add
add
insl
mov
add
inc
int3
jnp
out
scas
jcxz
cmpsl
rcrl
mov
pop
push
in
and
cltd
outsb
mov
sub
xchg
aam
std
sbb
imul
lods
pop
out
cli
dec
pop
fldl
mov
dec
add
xchg
repnz
mov
iret
sbb
add
mov
std
sub
mov
addl
mov
sahf
addb
cld
cmp
push
sub
lock
push
sub
push
add
add
xchg
lcall
cmp
out
mov
pop
imulb
jge
or
inc
add
scas
push
mov
dec
pop
and
nop
add
push
add
mov
xor
mov
xchg
inc
stos
pop
ljmp
js
add
mov
pop
fdiv
add
arpl
dec
and
jg
outsl
push
mov
adc
adc
dec
movntq
test
add
lods
cld
cltd
jae
jmp
and
mov
add
fwait
xchg
xchg
or
jb
mov
jae
jp
stos
push
ljmp
mov
cmc
adc
xchg
or
loop
mov
lods
xor
mov
lea
mov
cli
xchg
add
mov
mov
adc
mov
mov
into
jno
repz
mov
cltd
push
inc
xlat
ffree
or
add
mov
jb
mov
xor
mov
icebp
inc
add
adc
das
mov
add
adc
mov
add
add
xchg
push
push
mov
repnz
test
aaa
jecxz
int3
pop
jecxz
sti
loope
icebp
pop
fidivrl
add
fwait
mov
add
xchg
add
and
xor
inc
lcall
std
sub
pop
mov
pop
ret
dec
sbb
imul
add
lret
lods
mov
xchg
push
push
xlat
cli
hlt
xchg
stc
sbb
mov
rolb
mov
lea
rolb
mov
mov
add
in
sub
mov
add
push
push
mov
sidtl
imul
inc
mov
fs
mov
inc
ficoml
add
push
cmpsb
insb
inc
add
and
push
aad
in
pop
loop
mov
arpl
xchg
adc
mov
dec
ljmp
es
or
xor
addr16
lret
cmp
inc
add
aad
rcrl
jl
std
ret
xor
xchg
pop
enter
imul
adc
xor
out
inc
testb
mov
add
jns
adc
mov
add
lret
push
movsb
out
xchg
jne
jl
push
aam
out
mov
mov
leave
push
and
jae
cmc
and
mov
jg
outsb
xor
cld
xchg
jnp
std
js
push
add
mov
inc
add
mov
mov
jbe
dec
or
add
stos
inc
aam
test
mov
je
sub
adc
mov
and
mov
dec
sub
add
mov
dec
lcall
xchg
int
inc
add
and
mov
clc
scas
in
jl
sub
add
cltd
pop
cmp
xchg
xchg
and
arpl
je
add
fs
add
mov
add
clc
lods
jecxz
sbb
sti
adc
fsub
pop
push
mov
xchg
add
mov
push
sbb
xorl
aam
add
js
mov
sub
and
xchg
popf
movsb
fisttpl
mov
jp
fdivs
add
sub
dec
fwait
lret
outsb
sub
add
mov
push
adc
lds
adc
sbb
inc
mulb
popf
mov
ds
sub
mov
and
add
pop
mov
mov
addr16
add
ret
sub
and
pusha
add
adc
cmp
inc
add
mov
pop
es
adc
sbb
sub
mov
add
sub
add
sbb
pop
push
mov
jbe
shrl
pop
push
mov
push
push
xor
mov
lea
sub
jle
xchg
sbb
lret
popa
ret
pushf
nop
add
icebp
xchg
add
push
push
pop
xchg
dec
sub
mov
xchg
out
sbb
add
in
loope
adc
add
xchg
out
jmp
lods
inc
add
inc
add
xor
add
push
add
mov
out
xchg
data16
and
mov
push
or
xchg
out
add
add
pop
mov
jge
cmc
cmp
pop
jae
test
shll
jge
add
bound
mov
rolb
mov
enter
xchg
add
mov
mov
add
arpl
xchg
sbb
rolb
dec
xor
mov
idiv
dec
jbe
cs
cmp
mov
dec
push
sahf
mov
mov
sub
repz
test
int3
push
cmp
repnz
jp
addl
rolb
mov
add
add
sbb
inc
lea
add
mov
addb
adc
mov
and
out
inc
mov
cmp
int
aas
js
mov
mov
repz
movsb
mov
movsl
pushf
gs
sub
mov
inc
add
fwait
or
loop
mov
iret
sub
sahf
mov
mov
add
adc
xchg
add
insl
dec
and
jno
add
nop
add
inc
addl
push
jne
adc
mov
loop
mov
xchg
mov
ljmp
and
mov
adc
sti
and
mov
jo
mov
inc
ja
dec
scas
out
mov
mov
add
mov
rolb
cmp
add
fcmovb
lcall
mov
movlps
xchg
add
pop
cmp
popa
icebp
add
adc
push
fsubl
cmp
test
jp
in
outsb
push
or
lods
xor
imul
mov
jmp
mov
js
xor
xor
iret
sub
inc
sbb
adc
cpuid
add
xor
mov
add
cmp
add
add
pop
or
xor
mov
xor
fiaddl
pop
inc
add
add
add
mov
test
push
cmp
stos
add
inc
mov
xchg
sbb
aaa
jl
out
insb
cmp
stos
loope
jp
add
fisubrl
out
mov
add
cld
mov
stc
je
mov
jecxz
add
mov
add
lret
xlat
mov
add
mov
add
dec
cld
out
add
std
dec
sub
int
sub
pushl
push
nop
add
mov
add
addr16
push
jne
cs
loope
xchg
add
push
lret
adc
mov
xchg
pop
shrl
sti
inc
add
jbe
add
cld
cmp
stos
sbb
inc
add
popa
add
sbb
insl
add
decl
mov
lods
sbb
push
jnp
add
mov
div
add
scas
hlt
mov
mov
pop
pop
popf
xchg
les
test
sbb
enter
push
inc
addb
out
dec
in
loope
divl
sub
mov
mov
mov
mov
mov
add
add
or
notl
add
mov
sbb
outsb
pusha
add
ja
jb
mov
mov
fists
sub
cs
add
sub
hlt
mov
cmp
roll
out
in
jns
add
aad
and
jp
in
push
mov
test
fiaddl
cli
pusha
add
pop
push
xchg
inc
or
add
or
sub
or
or
or
call
xor
ljmp
push
cwtl
or
pop
in
adc
mov
fldcw
add
xchg
add
add
jnp
mov
add
mov
pop
xor
mov
push
add
push
add
psllq
add
and
cmp
enter
dec
sbb
mov
out
loope
add
and
mov
jge
loopne
mov
add
add
sbb
mov
popf
xor
mov
mov
jp
mov
or
pop
fstpl
cltd
idivl
ror
xchg
jnp
inc
add
cmpsl
xchg
add
out
jecxz
pop
dec
mov
cmp
in
xchg
mov
pop
sarl
jbe
aas
adc
adc
pop
call
iret
pop
pop
pop
jmp
push
mov
ds
cmp
add
cmp
mov
dec
adc
sbb
aam
add
sbb
pop
push
add
pop
jo
mov
mov
mov
cwtl
cmc
mov
hlt
inc
jecxz
test
imul
add
mov
sbb
add
mov
call
adc
mov
push
aad
xchg
add
mov
add
ret
repz
mov
or
jge
jmp
jle
adc
mov
movsb
mov
add
pop
xlat
push
cmpsb
add
mov
mov
lds
cld
push
sub
fwait
pop
cs
add
mov
cmovle
add
mov
push
lods
sbb
push
fbld
push
xor
inc
push
mov
mov
repz
pop
mov
adc
loope
out
adc
loopne
mov
rolb
jnp
xchg
pop
fmull
pop
inc
pop
lock
jmp
icebp
push
cmpsl
xchg
add
mov
mov
push
mov
lret
mov
mov
out
dec
mov
mov
addb
jbe
rolb
mov
pop
dec
mov
add
inc
rep
cmpsb
add
mov
sub
test
sub
cmp
sbb
sub
mov
inc
add
ret
sbb
jl
out
mov
add
mov
lret
cmp
push
sbb
pop
les
add
fistpll
leave
leave
rolb
mov
mov
scas
mov
mov
push
js
add
inc
pushf
pushf
add
lcall
add
lcall
lea
or
pop
pop
fcoms
into
cltd
xor
fs
test
in
lds
frstor
or
pop
mov
mov
pop
inc
mov
pop
jl
loope
jbe
fsub
add
jge
pusha
add
mov
add
mov
stos
bound
mov
mov
mov
mov
aaa
fisttps
and
add
mov
or
ja
cwtl
xchg
and
jns
lcall
xchg
mov
mov
in
xlat
addb
sub
add
mov
inc
add
jbe
sbb
xor
push
sub
add
cs
cmp
pop
jmp
fimuls
xchg
das
inc
imul
mov
fbld
mov
jno
lea
add
adc
mov
jnp
jecxz
add
stc
ss
sub
daa
jnp
iret
xchg
add
mov
add
push
add
sbb
sbb
pop
jo
mov
mov
jmp
sbb
pop
fs
popa
mov
fnsave
subl
sarl
gs
sub
mov
mulb
sbb
mov
jo
mov
adc
adc
mov
test
and
add
lcall
mov
imul
fcmovnbe
pop
push
rolb
mov
test
jnp
jno
add
incb
add
or
aam
add
jecxz
sbb
mov
rolb
inc
mov
jmp
inc
ds
pop
adc
insb
cs
and
mov
lods
scas
stc
pop
xor
addb
adc
mov
xchg
aaa
movsb
cmc
ljmp
je
xchg
bound
mov
sbb
lret
sahf
popa
mov
sub
outsb
imul
out
pushf
fbstp
insl
pop
jl
insb
js
pusha
add
add
addb
cmpsb
sub
fldcw
leave
or
rcll
imul
data16
add
add
pop
sub
lea
add
insb
mov
mov
mov
jle
inc
add
add
sub
mov
add
aaa
pop
xchg
mov
pusha
add
xor
inc
xor
mov
push
jg
sub
add
add
push
sub
js
cmpl
push
add
sbb
loope
dec
in
out
xchg
jge
hlt
cwtl
rolb
mov
add
insl
leave
sti
push
scas
or
dec
push
addl
adc
jl
sub
mov
sub
add
mov
loop
mov
add
lcall
xchg
add
add
sahf
aad
fstpt
loope
sbb
sti
and
mov
add
jl
icebp
mov
jnp
add
dec
fxtract
ret
imul
int3
in
cmp
push
cwtl
mov
out
add
mov
sbb
es
mov
imul
roll
mov
add
out
outsl
test
in
add
jb
mov
sub
addb
orl
outsb
jne
divl
mov
push
cmp
jl
movsb
lcall
in
test
push
scas
fs
arpl
xchg
pop
clc
outsl
or
and
mov
inc
add
sbb
lret
dec
pop
fidivl
jp
xor
test
mov
xor
ret
rolb
insl
xchg
ret
or
add
lret
movsb
scas
in
xor
or
fistl
cmp
pop
hlt
push
sbb
xchg
adc
mov
mov
popa
adc
js
xor
rolb
mov
add
addr16
cltd
mov
daa
jmp
add
add
add
xchg
xchg
mov
vpsrad
mov
add
jnp
and
mov
or
push
icebp
mov
int3
jb
mov
cli
jge
add
mov
negb
cmpsb
ret
mov
leave
jne
nop
add
shll
inc
adc
leave
subl
loope
cltd
shll
add
scas
call
cmp
data16
inc
and
je
mov
add
xor
mov
add
mov
leave
hlt
out
cmp
sbb
arpl
lret
addb
fmulp
or
xor
mov
add
dec
mov
mov
mov
inc
jbe
stc
imul
adc
out
test
mov
lcall
aam
dec
cmp
mov
sarl
mov
add
rolb
mov
dec
pop
out
mulb
enter
pop
mov
add
add
pop
sub
in
and
mov
mov
mov
mov
mov
adc
add
inc
jl
imul
pop
orl
mov
inc
add
mov
sbb
scas
dec
std
scas
cwtl
ja
add
dec
and
mov
jne
in
add
mov
mov
in
call
add
mov
mov
imul
aaa
mov
jg
scas
inc
xor
mov
cli
out
pop
lock
js
add
mov
mov
and
mov
fildl
andl
loopne
mov
xor
pop
ja
add
rolb
mov
mov
daa
les
and
add
jp
enter
adcl
add
push
ret
je
in
sti
pop
movsb
jne
bound
mov
or
data16
add
stos
adc
pop
inc
movsl
cmp
mov
add
and
or
or
cmp
sbb
mov
imul
outsb
mov
fsubr
jns
icebp
scas
add
cmpsb
pop
sub
add
hlt
mov
add
add
daa
test
push
in
loopne
mov
add
add
test
push
add
sbb
xor
add
xor
add
mov
adc
pop
cltd
or
imul
sbb
pop
and
add
mov
mov
shll
aam
cmp
and
adc
in
rolb
and
fistpl
in
xchg
mov
fcmovbe
add
adc
in
pop
rolb
cmp
aam
movsb
jne
addb
pop
mov
iret
je
add
add
and
and
adc
mov
add
mov
xor
adc
mov
add
lahf
test
ss
or
jmp
add
sbb
lcall
hlt
xchg
mov
movsb
jp
inc
jl
loope
scas
jo
mov
add
lahf
xchg
add
adc
jl
cmpl
pop
push
les
mov
mov
mov
outsb
rolb
mov
jp
loop
mov
mov
stos
pop
or
sbb
lret
test
sub
push
fwait
subl
jp
push
call
arpl
addb
call
adc
mov
stc
shll
fcmovu
pop
aam
push
add
lret
sub
jns
adc
jl
xchg
jp
ret
xor
mov
lcall
and
xchg
test
add
mov
pop
gs
loope
in
jb
mov
jns
orl
inc
jl
es
adc
and
enter
add
mov
xchg
or
pop
sub
dec
cwtl
das
gs
jecxz
cli
or
pusha
add
xor
jne
xor
pop
popf
push
nop
add
inc
inc
addb
jmp
mov
ljmp
lret
fadds
add
dec
dec
and
stos
sub
pop
fistpl
or
add
sub
push
aad
add
ljmp
jmp
mov
lods
adc
insl
push
xor
mov
jne
mov
loop
mov
ficoms
dec
lcall
std
leave
add
xchg
jb
mov
pop
pop
adc
fldt
add
add
ret
jmp
xchg
sub
add
cmp
arpl
xor
cli
seto
mov
add
rol
mov
fs
add
add
cld
mov
gs
mov
add
mov
ja
jbe
dec
aam
divl
mov
movsl
call
mov
sbb
imul
das
leave
popa
push
cmpsl
lock
mov
add
mov
add
mov
add
dec
insb
dec
xor
mov
fidivrl
aad
jb
mov
rorl
pop
add
repz
mov
sbb
mov
mov
xor
nop
add
add
daa
push
dec
add
mov
inc
add
loop
mov
iret
in
out
jae
fidivrs
rcll
and
mov
aaa
xchg
loope
xchg
xchg
add
and
mov
cmp
add
daa
add
mov
xor
mov
mov
mov
mov
push
fld
fnstenv
in
loopne
mov
vpandn
inc
dec
das
out
js
xchg
aam
aas
cmp
jmp
add
mov
addr16
popl
xor
mov
mov
or
flds
mov
sbb
lock
pop
rcrl
mov
add
add
mov
jg
addb
xor
mov
xlat
mov
or
scas
jnp
pop
setl
or
mov
xchg
xorl
jge
iret
mov
inc
add
add
mov
shll
sub
push
sbb
addr16
mov
or
mov
mov
sbb
add
push
adc
lcall
mov
jge
daa
repnz
add
fdivl
add
adc
movsl
xor
mov
fwait
xchg
add
xor
mov
mov
pop
mov
movsl
jge
adc
add
pop
mov
or
mov
xor
out
in
mov
mov
sub
pop
iret
push
add
mov
jno
pop
sub
push
push
push
enter
fadd
fimuls
push
dec
inc
dec
xor
inc
test
add
mov
pop
lret
mov
rolb
mov
movsb
inc
in
fs
add
xchg
xchg
dec
jbe
jo
mov
add
addr16
dec
movsl
push
cmpl
mov
add
mov
xor
cmc
mov
aad
add
mov
pop
push
xchg
lahf
gs
adc
mov
dec
pop
lret
mov
and
add
cmp
add
mov
aaa
xor
in
sti
jl
mov
mov
mov
push
adc
mov
lods
lcall
mov
add
mov
rolb
mov
add
mov
inc
add
and
xor
sub
add
add
xchg
sbb
add
push
je
or
add
add
add
scas
sar
push
add
pop
xchg
jae
cmp
aas
into
cmpsl
and
mov
jo
mov
and
clc
mov
std
mov
xchg
fcompl
sub
icebp
lods
mov
sahf
adc
mov
int
add
add
add
test
lds
add
movsb
addb
mov
adc
fwait
xbegin
add
movsl
jmp
out
repnz
sub
add
mov
repnz
pop
out
add
add
imulb
in
sbb
inc
mov
add
or
sbb
add
dec
mov
test
mov
insb
xor
inc
add
mov
mov
push
pop
cli
push
sbb
inc
into
mov
cmpsl
jnp
xor
mov
cmp
mov
xor
fcompl
pop
lods
pop
xlat
or
xor
dec
dec
fidivrs
push
inc
pop
imul
out
add
loope
jnp
push
mov
or
pop
sbb
stc
ja
clc
dec
fdiv
pop
jne
jg
aaa
sbb
add
jle
lahf
mov
mov
add
int
shll
jb
mov
sbb
sbbl
adc
push
std
dec
xor
xabort
pop
data16
mov
fadds
sub
cmp
dec
popa
cmpsb
mov
jp
add
jns
add
fdiv
add
pushf
or
mov
mov
mov
mov
mov
insl
sbb
cmp
fs
std
in
xor
jne
pop
pop
fwait
popf
or
hlt
les
aas
ror
inc
lahf
jp
inc
xlat
test
inc
rolb
mov
lahf
ljmp
dec
sbb
push
pop
out
inc
add
mov
inc
mov
adc
insl
lahf
adc
int3
dec
inc
sbb
mov
call
add
cmpsl
cld
in
fadd
mov
and
mov
mov
add
cmp
jmp
xorl
jae
ret
push
adc
dec
imul
jnp
inc
cmp
pop
in
rolb
and
lock
jl
mov
test
repz
fnstcw
daa
sbb
shll
add
jecxz
add
jp
xchg
mov
fiadds
add
add
repz
imul
mov
out
rolb
mov
fwait
sbb
aad
jae
jl
and
mov
and
insl
in
fs
test
fcmovb
mov
jb
mov
add
mov
scas
pop
ret
gs
ret
pop
add
das
inc
pop
iret
or
addb
leave
xchg
dec
clc
movsb
lea
add
push
add
loope
daa
and
frstor
mov
pushf
movsb
cmp
dec
push
addb
mov
popl
pop
sahf
mov
add
xchg
jp
pop
push
add
out
push
add
repz
push
shrl
imulb
mov
mov
mov
lods
addb
out
cs
push
add
mov
push
je
add
push
insl
adc
and
insl
rolb
mov
mov
push
mov
mov
inc
add
popa
dec
lret
pop
fwait
test
pushf
ss
mov
cwtl
jp
add
adc
add
mov
jle
push
xor
mov
int
push
int
jns
cmp
inc
lcall
sbb
xor
mov
mov
pop
mov
std
iret
stc
jl
xchg
cmp
sbb
rolb
mov
das
test
idivl
sahf
fldenv
xor
mov
cmp
cli
stos
jns
pop
subl
fnstcw
lret
or
test
lods
ficompl
add
mov
ds
add
add
notb
std
mov
mov
push
xor
imulb
add
insl
into
lret
imul
dec
push
insl
or
and
add
add
fdivl
mov
push
add
in
mov
sub
pop
mov
addb
jae
jne
stos
lds
add
dec
imul
add
and
add
mov
mov
rolb
mov
rcrl
ret
andl
pop
popa
icebp
pop
sub
hlt
add
jb
mov
ljmp
or
mov
xchg
aas
nop
add
xor
repz
mov
xor
mov
add
cmpsb
sbb
add
daa
in
mov
mov
add
in
dec
bound
mov
mov
les
addb
push
test
add
mov
mov
add
dec
popf
ss
pop
cmp
rolb
rolb
push
dec
inc
sbbl
dec
pop
or
and
add
add
sub
add
mov
stos
dec
sbb
sbb
adc
mov
pop
sahf
lods
lret
test
hlt
les
mov
outsl
cmp
mov
fdivrl
xor
mov
cmp
mov
add
xchg
rcl
outsb
jns
fnstsw
sub
in
mov
sbb
add
fstl
push
fsts
add
xor
mov
inc
and
cld
rolb
mov
xchg
add
xor
sub
mov
jmp
push
outsb
sahf
imul
insb
inc
imul
mov
add
mov
inc
mov
jge
add
mov
lcall
mov
and
insb
mov
inc
lods
jns
sub
inc
add
mov
push
adc
call
mov
outsb
scas
xor
or
rolb
mov
and
or
xchg
add
out
ja
cmp
inc
add
mov
push
imulb
push
inc
pop
das
call
jp
add
inc
add
outsb
push
fisttpl
pop
jnp
nop
add
inc
call
mulb
inc
mov
mov
lods
addb
cltd
lahf
sbb
jne
mov
into
mov
fnstcw
ds
repz
addb
leave
es
test
int3
fidivrl
inc
xchg
mov
or
add
stos
inc
add
stc
add
aaa
cmp
mov
push
in
inc
add
jecxz
sahf
or
mov
cmp
push
xchg
imul
jns
xor
adc
push
add
add
in
inc
fisttpl
jl
lods
cwtl
inc
add
sub
aam
repnz
mov
add
inc
add
leave
dec
add
mov
add
add
add
mov
addb
add
add
das
imulb
mov
cmc
xchg
mov
mov
jmp
inc
add
push
sub
cmp
js
ss
add
push
add
mov
add
aad
inc
add
cmp
out
cli
pop
or
in
dec
lret
dec
outsb
xchg
scas
test
mov
push
add
arpl
jg
dec
sahf
jnp
add
test
leave
inc
rolb
mov
cmp
bound
mov
add
cmp
mov
mov
mov
ret
popf
cmp
mov
sub
test
push
iret
push
mov
clc
mulb
mov
jae
pop
pop
addb
jo
mov
and
cmp
lahf
cltd
loopne
mov
mov
xchg
loopne
mov
and
iret
pop
mov
mov
mov
cld
xchg
mov
adc
call
hlt
xor
sub
mov
addb
lahf
pushl
add
stos
sbb
mov
and
cmp
rcr
add
sarl
push
cmc
addb
cmp
sarl
mov
xchg
add
popl
mov
fscale
stos
mov
push
mov
add
add
je
sarl
and
dec
lret
or
imul
rcrl
loope
jp
cmpsb
sbb
loope
fdiv
loope
add
sahf
xchg
pop
mov
push
cmp
test
add
mov
mov
mov
addb
xchg
add
jne
lret
sub
cld
je
add
mov
add
jo
mov
ss
stos
jecxz
dec
out
mov
pop
fiaddl
ret
mov
add
xor
mov
decl
mov
and
mov
pop
mov
sub
scas
and
mov
jmp
sub
add
add
addb
jo
mov
mov
in
pop
lahf
jg
mov
inc
mov
mov
push
dec
cmpsb
sbb
ret
testb
xchg
daa
cmp
adc
sub
add
pop
jmp
rolb
mov
fsub
mov
jns
xlat
nop
add
add
mov
mov
std
je
addl
xor
mov
jl
add
cmp
loopne
mov
add
sbb
mov
push
xchg
jno
scas
mov
popf
jo
mov
stos
pop
xor
inc
pop
dec
enter
add
mov
jnp
iret
jmp
out
test
add
stos
mov
xor
movsl
pushf
and
mov
add
push
add
adc
mov
push
mov
add
add
pop
dec
mov
mov
mov
and
adc
mov
movsb
popf
mov
jo
mov
iret
adc
sbb
cmp
ret
fldcw
dec
or
add
int
mov
add
cmp
cli
inc
into
pop
icebp
imul
add
mov
add
push
cmpl
add
out
adc
mov
add
jecxz
jne
add
jne
pusha
add
add
add
mov
xchg
fistps
ja
push
sbb
add
mov
rolb
xlat
out
cli
xor
add
das
lea
rolb
mov
add
mov
cltd
inc
and
in
jae
dec
jo
mov
test
add
stc
adc
cmp
pop
and
daa
and
mov
ja
movsb
mov
je
and
ss
cmpsl
std
jo
mov
or
int
sbb
rolb
mov
dec
push
loopne
mov
mov
sub
aas
jp
adc
shl
sbb
lret
add
and
xor
mov
jae
sar
push
addb
std
shll
and
pop
inc
mov
add
mov
cwtl
leave
scas
imul
aaa
pushf
je
pusha
add
add
mov
xchg
pop
fwait
test
push
jecxz,pn
pop
je
inc
push
iret
jmp
clc
push
cltd
jp
lds
in
push
subl
cmpsl
jbe
add
or
add
xchg
cmp
bound
mov
jecxz
notb
aas
mov
pop
and
mov
jl
push
pop
cmp
pop
mov
or
dec
xor
xchg
push
mov
pop
adc
push
dec
movl
xlat
mov
dec
lods
mov
mov
pop
jae
jne
popa
or
add
fiaddl
pushf
ljmp
inc
add
jbe
ret
pop
ljmp
fadds
add
add
inc
add
xor
xchg
mov
or
adc
cmp
sub
std
hlt
fwait
pop
mov
loope
dec
cltd
in
movsb
sbb
popf
negb
pop
out
std
sub
clc
inc
add
xchg
add
inc
nop
add
add
mov
call
push
add
xchg
add
push
add
dec
and
mov
ret
js
jge
jmp
insl
mov
sahf
dec
sbb
push
adc
mov
enter
ret
das
imul
add
jge
add
add
push
test
aam
add
lahf
iret
popa
dec
loopne
mov
pop
test
add
addb
push
es
jge
enter
addr16
out
movsb
xor
pop
mov
xchg
push
pusha
add
clc
adc
or
ja
or
mov
dec
pop
insl
fs
mov
add
test
jge
add
mov
fmull
push
cwtl
test
mov
mov
xchg
or
add
mov
xchg
add
jns
sahf
mov
mov
mov
push
push
sub
add
mov
out
je
or
mov
inc
into
cmc
pop
sbb
int3
lcall
mov
xor
imul
sbb
in
sahf
jle
push
add
int
jp
sub
test
loope
dec
adc
mov
nop
add
push
aaa
in
leave
lds
test
pop
std
and
mov
rolb
lret
add
mov
mov
movsl
dec
add
aam
in
das
pop
xor
add
in
cmp
mov
add
mov
mov
adc
mov
jmp
dec
or
loopne
mov
push
adc
out
jle
stos
inc
push
ret
into
out
mov
add
adc
out
add
mov
pop
imul
mov
call
mov
xor
adc
cmp
push
and
jns
dec
jo
mov
jae
inc
add
sub
lock
add
inc
xchg
inc
add
je
pusha
add
add
add
icebp
cwtl
hlt
loope
mov
call
add
adc
sub
pop
rolb
inc
sbb
cmp
loopne
mov
add
mov
stc
adc
mov
xchg
cmpsl
outsl
rolb
mov
aas
sahf
cmp
xchg
or
xor
scas
daa
push
out
dec
mov
add
popa
xor
sub
lahf
xor
aad
jmp
pop
in
jo
mov
or
add
add
rolb
call
cmc
push
loop
mov
mov
add
push
jns
add
add
mov
test
incb
jmp
mov
out
mov
add
mov
mov
add
mov
add
sub
scas
add
mov
idivb
mov
pushf
push
fisubs
add
cwtl
sub
mov
scas
xor
mov
lret
jge
jmp
jg
mov
mov
mov
mov
ja
gs
mov
or
addb
inc
add
add
add
xchg
add
mov
xor
mov
cmp
fs
leave
je
aam
pop
sbb
mov
sbb
adc
mov
dec
sahf
pop
pop
jo
mov
or
call
mov
jmp
mov
cmp
aas
add
mov
lods
dec
repz
add
xor
mov
xor
mov
ja
repnz
lds
mov
leave
mov
mov
jns
outsb
loop
mov
add
add
repz
mov
adc
mov
jae
and
mov
mov
fcmovnu
je
add
jo
mov
in
xchg
iret
add
mov
add
shrl
in
mov
add
sti
xor
mov
int
imul
mov
mov
cmp
mov
out
add
add
push
fstl
add
mov
cmp
or
mov
add
fsubrs
nop
add
adc
add
add
mov
mov
fs
jb
mov
add
cmp
jnp
enter
add
addb
push
sahf
sahf
cmp
push
pop
inc
xor
mov
add
addr16
ss
xchg
mov
fcom
adc
mov
xchg
movsl
fisttpll
add
stos
aad
mov
mov
cmp
mov
sbb
inc
aam
add
mov
or
sbb
mov
fistps
jp
repnz
xchg
inc
add
insl
inc
jecxz
fldenv
lcall
lret
out
in
dec
jbe
call
decl
jecxz
add
cmp
cltd
in
movsb
and
add
push
lcall
inc
jecxz
sub
int3
xor
mov
adc
mov
les
add
inc
add
add
pop
faddl
xor
fucomi
mov
sbb
jmp
dec
sbb
popa
mull
add
pushf
mov
ds
add
adc
hlt
call
add
push
add
add
jnp
adc
add
dec
jnp
push
add
inc
add
mov
add
insl
int
mov
add
xor
out
mov
mov
jg
int3
ljmp
inc
inc
fucomip
jmp
cmpsb
pop
sbb
dec
dec
hlt
or
insl
inc
testb
in
movsl
in
clc
rolb
in
dec
jl
add
add
dec
icebp
xchg
and
fnsave
push
pop
test
and
mov
add
add
lock
cmpsb
addl
and
inc
sbb
fisubrs
and
add
mov
add
gs
divl
sbb
add
stc
push
add
xor
xchg
loop
mov
cmp
pop
mov
cmp
mov
adcl
dec
leave
cmova
std
pop
mov
mov
xchg
jmp
xchg
out
pop
test
mov
sbb
lret
add
add
cmp
add
add
pusha
add
out
xchg
jle
outsb
xlat
rolb
mov
add
pop
pop
data16
cli
push
add
loop
mov
add
xor
mov
add
call
jno
sub
icebp
icebp
dec
cmp
push
imul
test
cltd
insl
in
mov
mov
xchg
fisttps
out
lret
out
in
sbb
add
cld
gs
push
jns
add
mov
add
dec
xchg
or
and
add
enter
or
jg
sbb
into
aam
repnz
cmp
arpl
sbb
das
pop
lahf
xchg
jmp
test
mov
push
sub
add
sub
add
mov
out
push
cwtl
xchg
mov
imul
sahf
data16
insl
imulb
inc
dec
push
add
mov
add
pop
addb
add
lahf
add
add
push
adc
sub
xchg
fbld
scas
pop
in
jle
xor
repnz
add
mov
jb,pt
mov
push
add
or
add
mov
jl
scas
jb
mov
mov
pop
or
add
mov
in
push
insb
lahf
ds
orl
xor
add
jmp
cmp
xchg
xor
mov
mov
add
mov
push
std
adc
icebp
jle
lcall
ret
int
sub
push
jo
mov
xchg
aaa
sub
sbb
xor
jmp
sub
pop
jl
outsl
int3
push
mov
mov
add
mov
inc
int
dec
push
add
filds
add
push
cwtl
outsl
imul
pop
pop
jg
inc
add
pop
inc
stc
xor
pop
mov
sub
jmp
mov
jnp
mov
jge
icebp
push
add
add
insl
test
out
and
mov
dec
adc
int
inc
add
ret
add
xchg
mov
in
dec
addb
and
sub
add
mov
mov
add
call
push
add
add
mov
into
scas
adc
mov
and
mov
xchg
sbb
movsb
out
pop
js
in
fldenv
sub
jae
popa
dec
lahf
jnp
mov
test
arpl
aas
mov
repz
sub
mov
popl
add
mov
pop
fs
pop
inc
mov
fwait
cwtl
sub
dec
jnp
pop
clc
and
inc
add
add
xchg
in
arpl
sub
test
iret
and
mov
movsl
jno
testb
pop
mov
daa
jo
mov
add
addl
mov
addl
pop
pop
test
movl
add
and
jb
mov
repnz
add
xchg
mov
pop
push
int3
das
push
mov
rolb
mov
cld
mov
test
cmp
add
daa
cmp
mov
and
mov
pop
js
add
mov
loopne
mov
add
lret
pop
adc
mov
add
xor
mov
mov
cmp
adc
mov
popa
arpl
mov
add
add
repz
xor
in
push
jo
mov
jbe
lods
fisubl
sub
imul
lock
jl
push
out
lods
or
xchg
aaa
lret
cmp
xchg
sub
xchg
enter
xchg
dec
lahf
jle
das
cmpsl
xor
shll
cltd
cmp
xor
mov
pop
gs
or
ret
ljmp
pop
mov
inc
mov
xchg
add
and
xor
test
out
aaa
das
jnp
rolb
mov
jne
add
cmp
adc
lds
add
mov
jo
mov
outsb
mov
loope
add
add
sbb
mov
dec
sub
dec
inc
addb
test
add
cmc
call
jns
faddp
sbb
add
fidivrl
jne
xor
mov
rcrl
add
inc
add
dec
pop
inc
sub
mov
add
mov
and
mov
push
inc
add
into
stos
int
adc
mov
add
add
jne
and
fwait
or
aad
hlt
mov
inc
add
in
adc
mov
fdivl
jae
add
mov
f2xm1
add
jne
add
add
add
test
xor
popf
repnz
fidivrs
add
ljmp
add
and
mov
sbb
xlat
xor
adc
mov
mov
pop
pushf
xlat
and
push
xchg
or
shrl
jns
jne
loopne
mov
pop
jne
add
std
shll
call
mov
sarl
push
mov
mov
mov
mov
jmp
cwtl
fdivp
stos
and
add
mov
movsl
test
jae
add
stos
add
mov
ss
test
scas
add
mov
adc
mov
in
xchg
fisubrl
xchg
add
add
jb
mov
call
cld
jbe
js
adc
mov
add
dec
lcall
or
pop
dec
xchg
add
mov
std
imul
xchg
sbb
icebp
mov
mov
lcall
adc
mov
stc
popa
aad
scas
mov
mov
add
rolb
sbb
shll
sub
mov
sbb
sub
mov
jecxz
add
adc
mov
hlt
inc
add
mov
xor
add
adc
add
and
add
push
lock
test
push
mov
adc
ljmp
jo,pn
mov
rolb
mov
xor
aas
data16
in
clc
and
stos
cmpl
cmp
sbb
jo
mov
test
fisubs
xor
inc
add
cwtl
or
and
mov
sub
add
imul
addb
rolb
sbb
inc
pop
pop
inc
add
gs
add
rolb
imul
mov
add
sbb
cwtl
fwait
jg
nop
add
addb
pusha
add
lods
dec
dec
aad
in
repnz
add
adc
mov
mov
popa
add
and
mov
sub
lea
add
jecxz
je
cmp
rolb
mov
or
or
xchg
jmp
imul
mov
add
pop
mov
add
incb
push
cwtl
aas
inc
push
push
xchg
rorl
rolb
mov
loopne
mov
adc
mov
add
nop
add
mov
add
fdivrl
pop
jae
test
add
lcall
mov
mov
mov
stc
xor
cli
in
push
add
mov
xchg
ljmp
xor
add
lcall
add
mov
xor
je
add
inc
daa
js,pt
lods
sub
add
movsl
dec
shrl
add
add
mov
in
fucomp
mov
pop
jbe
add
add
in
in
sub
outsb
ret
mov
mov
push
add
pop
adc
mov
insl
sbb
add
pop
cmp
xor
add
inc
add
roll
add
cmp
pop
mov
or
std
mov
repz
out
push
loope
jp
loopne
mov
adc
mov
rcll
mov
pop
mov
mov
add
pop
shll
mov
cltd
testb
imulb
inc
sahf
and
mov
add
fsubs
fisttpll
dec
mov
pop
inc
add
test
add
mov
cmc
imul
lds
mov
mov
add
lret
cwtl
das
rolb
mov
mov
in
in
add
mov
pop
in
enter
mov
mov
adc
jge
sub
cld
into
jmp
fs
add
bound
mov
std
in
adc
mov
add
mov
ret
nop
add
add
push
sbb
aaa
popf
mov
mov
into
jecxz
mov
movsl
ror
insb
sub
mov
loopne
mov
test
shr
sbb
adc
test
cli
aam
add
add
xchg
data16
enter
scas
jbe
add
xor
mov
jns
cmp
sub
push
xchg
lods
and
mov
cld
mov
mov
push
add
pop
dec
ja
add
xchg
mov
mov
push
lds
jnp
cmc
jg
test
pop
call
test
loope
xchg
je
scas
add
adc
mov
mov
adc
mov
sarl
fsts
add
lcall
sbbl
in
and
push
push
int
dec
decl
mov
ret
stos
pushf
imul
jmp
int
add
mov
add
test
popa
sub
pop
mov
ret
inc
daa
pop
fcoms
add
sbb
jmp
test
jle
in
and
push
push
test
mov
inc
add
mov
xor
mov
addb
outsb
add
push
add
lcall
mov
or
mov
out
xor
mov
sbb
xor
daa
and
mov
mov
cmc
adc
mov
mov
clc
shrl
mov
add
xchg
add
aam
lods
adc
scas
mov
push
fcmovnb
add
mov
mov
add
fisubs
dec
xor
shrl
add
add
sbb
cmp
mov
mov
add
repz
cld
ret
xchg
add
repz
sbb
sti
mov
add
add
inc
xor
dec
mulb
xchg
inc
mov
jge
ss
pushf
rolb
mov
mov
add
scas
pop
jae
xor
sahf
jmp
dec
push
sbb
xchg
push
sar
das
aaa
popf
pop
cltd
movsb
std
ficoms
add
arpl
je,pt
and
mov
push
add
hlt
and
add
pushf
les
push
cmc
lods
inc
add
push
push
pop
and
mov
jmp
mov
mov
enter
inc
add
xchg
mov
mov
das
dec
aas
jecxz
and
mov
imul
mov
out
mov
popa
rolb
add
mov
push
sbb
or
add
ljmp
mov
repz
popf
push
add
inc
cli
call
outsb
and
in
shr
xchg
int
and
mov
shl
ret
xlat
xor
push
mov
add
inc
add
mov
add
int3
out
stc
xchg
xchg
add
aaa
std
fwait
push
dec
paddusw
mov
add
loope
xor
rolb
adc
jns
pop
sub
adc
mov
pop
xor
loop
mov
sub
mov
jg
stos
and
mov
pusha
add
pop
cmp
inc
add
fcompl
arpl
add
ja
sbb
mov
mov
add
add
jmp
pop
xchg
aaa
inc
sub
push
adc
mov
fwait
movsb
cmp
addb
cmp
mov
js
sub
jecxz
int3
xchg
mov
sahf
adc
mov
hlt
mov
daa
pop
daa
or
incb
mov
cmp
clc
fsubs
sub
cmp
sbb
xor
and
add
pop
inc
data16
pop
mov
frstor
add
lret
sub
mov
gs
loope
sub
movsb
lret
push
icebp
mov
lods
mov
adc
jae
data16
inc
scas
cmp
xor
mov
mov
mov
push
xor
jno
mov
mov
add
das
push
testl
mulb
add
out
fidivl
xor
mov
movsb
and
mov
add
mov
rcrl
fstps
in
xchg
push
loopne
mov
add
fcoms
mov
mov
bound
mov
adc
mov
cmp
push
lock
nop
add
sti
insb
mov
inc
cli
pop
xor
mov
lcall
mov
mov
add
ds
add
mov
add
mov
push
stc
daa
pop
jo
mov
loop
mov
aad
hlt
and
mov
and
lods
cmp
sub
mov
dec
out
fbld
xchg
mov
mov
test
les
add
mov
mov
add
insb
pop
test
add
jl
cmp
das
sbb
and
movsl
rcrl
pop
mov
cmc
adc
mov
cmp
out
les
and
mov
mov
mov
mov
data16
mov
xor
mov
dec
inc
xor
test
mov
fcomps
cmp
fiaddl
sub
xchg
add
mov
mov
popa
movsb
test
ret
es
mov
loope
jmp
push
fwait
push
stos
mov
movsb
dec
cmc
xchg
data16
inc
mov
dec
xor
popa
es
ja
sbb
push
jne
call
push
mov
xchg
iret
lahf
pmaddwd
sahf
pop
push
ret
out
pop
pop
push
ret
inc
dec
mov
mov
add
add
inc
add
leave
sbb
arpl
mov
es
jo
mov
fistpll
cmp
or
inc
add
mov
xchg
sbb
push
adcl
lods
fst
fcomps
dec
into
xchg
add
into
push
add
pop
lret
sub
ljmp
add
rcr
ja
icebp
repz
jg
pop
and
adc
sbbl
mov
lea
mov
xchg
pop
lea
pop
add
roll
test
sbb
and
mov
add
xor
mov
dec
flds
adc
mov
add
add
jecxz
js
inc
jo
mov
idivb
mov
aad
repz
lret
arpl
test
sub
inc
daa
cmp
xchg
movsb
mov
dec
jecxz
ja
mov
cs
jmp
add
pop
cltd
sub
xchg
jge
add
sub
mov
xchg
jge
int3
xlat
pop
rcrl
mov
scas
mov
mov
fcompl
dec
fcomps
add
jecxz
dec
or
std
ds
sub
xbegin
dec
in
mov
or
xchg
push
aad
out
or
add
repnz
add
push
inc
loop
mov
inc
mov
xlat
aad
rolb
cli
inc
add
outsl
or
addb
lods
adc
lret
dec
jae
int
scas
sub
gs
addr16
xchg
and
mov
int3
in
rolb
mov
add
cmp
fdivrp
aaa
adc
cmp
in
rcrl
js
pop
and
mov
cmpsl
sub
mov
sub
es
and
aad
fmuls
into
pop
xchg
xchg
ret
imull
mov
popa
inc
jmp
test
push
divl
cmp
mov
cli
mov
ljmp
aam
loop
mov
inc
push
mov
mov
inc
jnp
inc
dec
fs
icebp
sub
xor
mov
fcomi
div
in
jns
test
aaa
mov
pop
cmp
jl
ss
bound
mov
mov
mov
or
or
or
mov
out
ds
popa
sbb
and
movsb
push
icebp
rolb
mov
xchg
call
scas
inc
pop
test
mov
loop
mov
add
std
ja
inc
stos
fcoml
mov
adc
enter
inc
add
add
shrl
cmp
mov
and
mov
movsb
fidivs
movsb
cmp
add
mov
xchg
popl
add
dec
or
mov
jg
lds
lea
cmpsb
ljmp
popf
shrl
push
icebp
imul
mov
stos
mov
pop
add
push
lods
out
wbinvd
loope
mov
mov
es
fsubrs
sti
int
mov
leave
xor
nop
add
inc
fwait
enter
pop
rol
icebp
jg
xchg
dec
mov
pop
pop
dec
cli
mov
fisttps
add
add
enter
ret
cmp
out
xchg
or
mov
push
add
add
add
mov
cwtl
aas
cmp
pop
loopne
mov
xchg
cltd
mov
jl
addb
in
int
sub
mov
pop
xor
insl
les
popf
ret
push
dec
lahf
inc
mov
addb
pushf
popf
vshufpd
add
mov
dec
fsubl
add
pop
pop
xlat
jl
push
imul
int
in
push
xor
rolb
mov
cmp
pusha
add
fs
mov
cmp
xchg
jge
sbb
xor
mov
add
mov
xchg
jns
jmp
outsl
xor
mov
mov
mov
mov
mov
insl
cs
or
jae
fcmovu
mov
std
mov
mov
cli
sbb
sub
rolb
mov
add
xor
add
add
cltd
test
push
shrl
insl
pop
xor
xchg
cmova
jmp
ss
add
inc
xchg
out
jecxz
int3
mov
jne
add
xor
add
mov
stos
test
addr16
js
outsl
loope
xchg
mov
cmp
push
clc
mov
xchg
stos
fdivl
mov
push
mov
cmpsb
lds
insl
scas
scas
into
loop
mov
add
test
add
aas
jbe
adc
mov
mov
outsb
std
fsubrs
in
lods
cmpsb
clc
xchg
xchg
cmpl
mov
xchg
mov
in
sbbl
mov
cltd
pushf
push
movb
sbb
clc
repnz
nop
cld
jae
add
inc
loopne
mov
xchg
ret
add
add
add
and
mov
push
mov
xchg
ret
add
add
add
mov
xor
push
mov
xchg
ret
add
add
pop
mov
push
mov
xchg
ret
add
pusha
popf
add
inc
xchg
and
adc
repnz
nop
cld
jae
fnstsw
rolb
sub
push
mov
nop
leave
jmp
add
add
ror
add
pop
popa
push
mov
nop
leave
jmp
add
add
jns
jl
push
add
push
mov
nop
leave
jmp
push
add
add
out
mov
push
mov
nop
leave
jmp
add
add
xchg
jle
jae
pop
push
push
mov
xchg
ret
add
add
repnz
sti
push
mov
xchg
ret
popf
jle
fwait
push
push
push
push
mov
sbb
add
add
add
imul
repnz
nop
cld
jae
add
add
cmp
and
leave
mov
push
mov
xchg
ret
jns
inc
xchg
add
jmp
clc
repnz
nop
cld
jae
jae
fwait
insl
add
push
mov
add
add
add
and
add
pop
mov
nop
nop
cld
jae
add
fstp
fildll
andl
mov
push
clc
repnz
nop
cld
jae
add
jo
mov
int
jns
loop
push
mov
xchg
ret
add
das
aas
add
jb
push
ss
repnz
nop
cld
jae
add
icebp
rolb
add
add
clc
repnz
nop
cld
jae
sub
ret
add
xor
push
mov
xchg
ret
icebp
add
fwait
add
and
mov
call
in
nop
leave
jmp
add
jbe
add
clc
repnz
nop
cld
jae
add
in
icebp
bound
ja
and
mov
in
mov
clc
repnz
nop
cld
jae
bound
add
add
ret
cmc
add
rolb
mov
add
bound
jae
add
inc
jne
je
push
mov
nop
leave
jmp
add
add
push
mov
nop
leave
jmp
in
add
add
popa
mulb
nop
nop
cld
jae
push
cmc
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
fcoms
repnz
nop
cld
jae
add
icebp
popf
shr
rclb
aam
add
inc
jns
cli
pusha
imul
nop
leave
jmp
add
ret
add
jle
or
nop
cld
jae
fwait
push
cli
add
or
cmp
mov
nop
leave
jmp
add
or
add
xor
push
mov
nop
leave
jmp
jmp
push
sub
rep
clc
repnz
nop
cld
jae
jl
xchg
jl
add
jns
push
mov
nop
leave
jmp
push
fwait
add
add
mov
dec
push
push
mov
nop
leave
jmp
lahf
fwait
jl
add
add
add
repnz
nop
cld
jae
xor
icebp
add
cmp
mov
nop
leave
jmp
add
add
add
xchg
loop
mov
mov
clc
repnz
nop
cld
jae
push
add
add
cmp
in
nop
leave
jmp
add
aas
roll
int
push
clc
repnz
nop
cld
jae
ret
icebp
add
push
dec
mov
jmp
incl
add
or
add
add
push
add
add
jmp
nop
cld
jae
insl
add
jbe
add
popa
dec
and
push
mov
xchg
ret
add
jbe
or
outsb
call
clc
repnz
nop
cld
jae
add
icebp
out
scas
dec
push
mov
nop
leave
jmp
ret
add
add
fwait
push
add
adc
add
repnz
nop
cld
jae
add
cli
xchg
in
pop
clc
repnz
nop
cld
jae
mov
int
int
add
dec
or
in
nop
leave
jmp
aas
mov
add
pop
push
mov
nop
leave
jmp
insb
popf
add
add
in
jae
add
in
nop
leave
jmp
insb
add
add
add
mov
clc
repnz
nop
cld
jae
add
popa
add
mov
xchg
ret
push
mov
add
clc
repnz
nop
cld
jae
add
add
add
mov
push
sar
repnz
nop
cld
jae
ret
add
das
push
fcoms
mov
nop
leave
jmp
sub
add
add
lds
lahf
sbb
add
cmc
add
add
push
sub
dec
xchg
aas
xor
add
mov
clc
repnz
nop
cld
jae
lahf
add
mov
clc
repnz
nop
cld
jae
add
sub
in
nop
leave
jmp
shl
add
add
push
mov
nop
leave
jmp
imul
int
xor
add
push
mov
xchg
ret
add
icebp
add
bound
mov
add
repnz
nop
cld
jae
xchg
xor
push
xor
jmp
add
jo
add
add
mov
xchg
ret
jbe
add
ficoml
mov
xchg
ret
push
add
insb
add
push
popf
push
clc
repnz
nop
cld
jae
popf
filds
gs
imul
clc
repnz
nop
cld
jae
aas
pusha
imul
or
dec
add
push
mov
nop
leave
jmp
and
add
mov
push
mov
nop
leave
jmp
add
mov
push
push
mov
nop
leave
jmp
bound
add
add
test
push
mov
xchg
ret
shll
sar
cmp
mov
xchg
ret
bound
add
add
lahf
add
push
mov
add
add
adc
ret
add
add
push
clc
repnz
nop
cld
jae
add
dec
push
add
clc
repnz
nop
cld
jae
in
push
in
cmpsb
movsb
sbb
xor
add
clc
repnz
nop
cld
jae
add
test
nop
nop
cld
jae
push
das
add
add
int3
and
clc
repnz
nop
cld
jae
add
add
add
jae
push
push
mov
xchg
ret
and
add
push
test
cmpl
push
mov
nop
leave
jmp
add
add
add
gs
push
clc
repnz
nop
cld
jae
add
add
fwait
xchg
nop
nop
cld
jae
add
add
add
mov
xchg
ret
add
add
jbe
das
add
dec
cmp
repnz
nop
cld
jae
add
decl
test
repnz
nop
cld
jae
popf
add
push
clc
repnz
nop
cld
jae
add
add
add
or
fs
insb
push
mov
nop
leave
jmp
add
add
jbe
mov
jmp
jns
push
add
inc
pusha
fwait
icebp
add
add
jbe
lret
sub
repnz
nop
cld
jae
add
xchg
add
add
pop
push
mov
nop
leave
jmp
add
add
lahf
add
add
test
push
mov
add
add
push
add
popl
icebp
sahf
or
sarb
add
push
add
jle
mov
add
xor
dec
add
mov
nop
leave
jmp
and
insb
add
cmp
xchg
cmpl
cld
jae
add
movsb
clc
repnz
nop
cld
jae
add
xor
mov
mov
adc
repnz
nop
cld
jae
add
add
sub
add
lock
mov
add
clc
repnz
nop
cld
jae
add
cmp
push
mov
nop
leave
jmp
jo
ud1
repnz
sar
nop
nop
cld
jae
sub
add
icebp
jne
push
mov
nop
leave
jmp
sub
add
add
into
xor
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
insl
add
inc
jl
test
push
push
mov
xchg
ret
add
rol
roll
ret
push
push
mov
xchg
ret
cmc
jl
jl
push
add
cmpsb
push
loopne
mov
add
add
popf
add
fistpll
clc
repnz
nop
cld
jae
mov
mov
cmpsl
inc
xchg
sahf
mov
push
mov
nop
leave
jmp
add
add
in
push
clc
repnz
nop
cld
jae
jbe
add
or
in
out
add
movsl
sbb
add
add
repnz
hlt
in
add
lock
push
clc
repnz
nop
cld
jae
insl
add
add
clc
repnz
nop
cld
jae
fwait
rcll
push
mov
xchg
ret
imul
pusha
push
add
xchg
das
mov
clc
repnz
nop
cld
jae
add
xor
ret
pop
mov
push
mov
xchg
ret
ret
add
add
rolb
mov
fs
repnz
nop
cld
jae
ret
push
lods
push
clc
repnz
nop
cld
jae
jbe
xchg
add
push
pop
pop
jmp
incl
add
add
add
add
add
push
mov
hlt
add
pop
cmp
test
jbe
add
add
nop
cld
jae
add
lahf
push
mov
mov
mov
push
mov
nop
leave
jmp
mov
push
filds
test
jo
jns
or
jo
add
shrb
jne
add
std
call
add
lahf
add
jbe
add
in
fwait
dec
push
mov
mov
ljmp
add
shll
and
mov
clc
repnz
nop
cld
jae
add
movsb
push
int3
call
push
mov
nop
leave
jmp
lahf
add
pusha
jle
mov
add
clc
repnz
nop
cld
jae
push
add
add
aam
movzwl
push
mov
nop
leave
jmp
add
push
cmp
in
lea
clc
repnz
nop
cld
jae
mov
rol
add
nop
nop
cld
jae
add
mov
imul
and
add
push
icebp
add
add
jle
mov
clc
repnz
nop
cld
jae
insb
incb
xchg
repz
ret
clc
repnz
nop
cld
jae
xchg
mov
roll
rep
clc
repnz
nop
cld
jae
aas
add
aas
dec
pusha
add
nop
leave
jmp
roll
das
cmp
rorl
clc
repnz
nop
cld
jae
add
add
add
movsl
mov
nop
nop
cld
jae
filds
cmp
jle
add
rdpmc
rclb
xlat
inc
add
add
add
jb
mov
mov
mov
xor
add
push
js
repnz
nop
cld
jae
or
add
adc
cmp
add
push
mov
xchg
ret
add
add
popf
add
nop
push
mov
xchg
ret
xor
add
shll
bound
repnz
nop
cld
jae
add
rcll
mov
mov
clc
repnz
nop
cld
jae
rclb
nop
cld
jae
xor
add
fstpl
nop
nop
cld
jae
jae
add
push
add
jne
rolb
mov
mov
add
repnz
nop
cld
jae
jmp
movl
add
add
and
call
clc
repnz
nop
cld
jae
xchg
sub
xor
stc
add
clc
repnz
nop
cld
jae
mov
cmc
jae
mov
mov
push
mov
nop
leave
jmp
add
add
rcl
aam
mov
clc
repnz
nop
cld
jae
jns
add
and
push
mov
xchg
ret
frstor
sbb
add
inc
add
add
push
push
cmc
mov
mov
in
add
inc
out
adc
lldt
sbb
add
repnz
nop
cld
jae
add
add
add
dec
mov
clc
repnz
nop
cld
jae
insl
add
push
push
mov
xchg
ret
jle
int
push
ret
mov
std
fiaddl
xchg
ret
add
add
fwait
sub
add
mov
and
add
repnz
nop
cld
jae
add
add
ds
jmp
add
inc
push
add
jbe
or
add
add
arpl
inc
mov
add
add
xchg
add
add
add
out
out
clc
clc
repnz
nop
cld
jae
add
add
shrl
pusha
push
mov
xchg
ret
jae
mov
add
mov
push
clc
repnz
nop
cld
jae
add
mov
in
mov
jmp
pop
cmp
repnz
nop
cld
jae
mov
cmpsb
xchg
mov
mov
inc
push
mov
xchg
ret
add
xchg
push
add
mov
push
mov
xchg
ret
add
add
add
add
aas
cld
push
mov
xchg
ret
fistpll
insb
roll
popf
add
sub
add
repnz
nop
cld
jae
lahf
add
loope
xor
jmp
add
add
mov
xchg
add
add
add
clc
repnz
nop
cld
jae
add
add
jmp
nop
cld
jae
add
filds
mov
pop
add
clc
repnz
nop
cld
jae
add
add
jp
popa
add
mov
xchg
ret
push
lahf
add
add
rcr
pop
push
mov
xchg
ret
jle
add
add
add
jmp
add
push
xchg
cmp
add
iret
add
clc
repnz
nop
cld
jae
add
roll
hlt
adc
shl
clc
repnz
nop
cld
jae
add
sbb
jne
push
mov
xchg
ret
cmp
add
pop
clc
repnz
nop
cld
jae
add
xchg
add
add
add
push
mov
nop
leave
jmp
ret
repz
jnp
jge
clc
repnz
nop
cld
jae
add
push
popl
repz
repnz
nop
cld
jae
push
push
jle
add
add
je
clc
repnz
nop
cld
jae
add
decl
test
clc
repnz
nop
cld
jae
add
xor
push
clc
repnz
nop
cld
jae
jl
add
mov
clc
repnz
nop
cld
jae
mov
add
add
fsubrp
lock
clc
repnz
nop
cld
jae
add
jbe
inc
jns
popa
add
mov
xchg
ret
sarl
add
clc
repnz
nop
cld
jae
fwait
imul
add
test
push
mov
xchg
ret
add
rcr
add
add
add
sub
test
repnz
nop
cld
jae
rolb
inc
jnp
clc
repnz
nop
cld
jae
lahf
jmp
add
jns
stos
clc
repnz
nop
cld
jae
mov
add
jne
clc
repnz
nop
cld
jae
in
in
add
cmc
clc
repnz
nop
cld
jae
add
or
sbb
cmp
ret
push
add
ret
add
movzwl
clc
repnz
nop
cld
jae
rol
in
fidivl
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
imul
add
jae
mov
movsl
sub
push
mov
nop
leave
jmp
add
or
nop
nop
cld
jae
add
ret
add
add
mov
push
mov
nop
leave
jmp
add
cmc
jbe
and
icebp
clc
repnz
nop
cld
jae
xadd
pop
movzwl
clc
repnz
nop
cld
jae
push
mov
xchg
sub
testl
push
mov
nop
leave
jmp
xchg
sub
add
add
jmp
decl
mov
int
lahf
add
mov
add
clc
repnz
nop
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
add
popf
add
push
add
mov
push
mov
xchg
ret
shlb
add
add
movsb
scas
pop
clc
repnz
nop
cld
jae
inc
add
mov
inc
rcll
clc
repnz
nop
cld
jae
jae
aas
jl
xor
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
ret
clc
repnz
nop
cld
jae
ret
imul
cmpsb
cmpsb
xor
mov
add
push
mov
nop
leave
jmp
aas
add
push
rolb
sbb
add
clc
repnz
nop
cld
jae
add
mov
popa
add
repnz
nop
cld
jae
push
int
jbe
add
mov
clc
repnz
nop
cld
jae
inc
cmp
jae
sub
clc
repnz
nop
cld
jae
in
add
add
or
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
jle
lahf
int
xor
add
pop
add
clc
repnz
nop
cld
jae
punpckhdq
add
mov
xchg
ret
push
jns
sub
add
jle
add
push
mov
xchg
ret
add
xchg
add
dec
insl
jl
add
incl
push
mov
nop
leave
jmp
add
add
stc
mov
push
mov
xchg
ret
fbstp
xchg
add
mov
add
repnz
nop
cld
jae
add
mov
sub
mov
push
push
mov
nop
leave
jmp
jo
dec
add
push
mov
nop
leave
jmp
add
add
add
add
add
repnz
nop
cld
jae
push
add
jl
add
push
mov
xchg
ret
cmc
sub
push
das
add
push
mov
nop
leave
jmp
mov
rolb
add
mov
int
add
add
push
add
popf
add
stc
ja
clc
repnz
nop
cld
jae
add
jns
and
clc
repnz
nop
cld
jae
add
add
idiv
call
in
nop
leave
jmp
jns
sub
lds
push
mov
xchg
ret
add
fists
add
fstl
add
clc
repnz
nop
cld
jae
or
add
xor
mov
add
clc
repnz
nop
cld
jae
add
or
add
mov
clc
repnz
nop
cld
jae
das
add
push
ret
mov
add
add
mov
push
mov
xchg
ret
mov
mov
icebp
fisttps
nop
nop
cld
jae
in
dec
imul
or
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
je
clc
repnz
nop
cld
jae
add
outsl
add
clc
repnz
nop
cld
jae
shlb
add
loop
mov
xor
push
mov
xchg
ret
in
xor
dec
shll
mov
clc
repnz
nop
cld
jae
pusha
add
popa
add
repnz
nop
cld
jae
add
add
insb
sbb
add
repnz
nop
cld
jae
add
add
sub
repnz
nop
cld
jae
add
add
incb
inc
add
lock
inc
add
mov
sahf
dec
add
xor
add
iret
loopne
add
mov
add
add
add
andl
call
and
das
xchg
mov
sbb
repnz
nop
cld
jae
rolb
mov
bound
sub
nop
nop
cld
jae
add
dec
add
jno
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
add
add
add
add
jb
mov
push
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
jle
insb
add
add
xchg
clc
repnz
nop
cld
jae
add
add
add
add
add
lods
sub
push
mov
xchg
ret
sarb
add
cmp
ret
push
mov
xchg
ret
das
mov
add
repnz
nop
cld
jae
add
fldl
jo
push
or
repnz
nop
cld
jae
add
add
add
add
jmp
add
add
aas
add
push
fldl
add
add
outsl
loop
add
add
add
lahf
add
ret
mov
clc
repnz
nop
cld
jae
xchg
add
mov
push
mov
nop
leave
jmp
add
add
fiaddl
in
nop
leave
jmp
add
sub
mov
push
clc
repnz
nop
cld
jae
or
shll
xchg
int
add
clc
repnz
nop
cld
jae
xor
xchg
push
flds
add
repnz
nop
cld
jae
in
push
mov
mov
lock
add
clc
repnz
nop
cld
jae
add
insl
add
push
push
mov
nop
leave
jmp
add
rolb
cmpsb
add
push
mov
nop
leave
jmp
add
add
inc
push
mov
nop
leave
jmp
rol
and
add
imul
clc
repnz
nop
cld
jae
jns
add
add
out
stos
mov
push
mov
nop
leave
jmp
jns
add
mov
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
push
add
add
ret
mov
mov
mov
nop
leave
jmp
add
push
add
add
inc
mov
nop
cld
jae
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
insb
movzwl
clc
repnz
nop
cld
jae
push
ret
push
mov
repnz
nop
cld
jae
in
ret
ret
clc
clc
repnz
nop
cld
jae
jo
add
mov
add
push
mov
nop
leave
jmp
add
add
xchg
decl
cmp
inc
add
xor
push
mov
xchg
ret
cmpsb
add
add
add
push
clc
repnz
nop
cld
jae
bound
mov
scas
add
push
mov
xchg
ret
or
xor
nop
leave
jmp
push
add
add
push
inc
xchg
daa
cmp
in
nop
leave
jmp
popf
mov
add
rclb
enter
xchg
ret
dec
ret
sub
cli
jmp
mov
clc
repnz
nop
cld
jae
add
xlat
mov
cli
clc
repnz
nop
cld
jae
add
add
jbe
out
jne
push
mov
nop
leave
jmp
jle
add
cld
mov
clc
repnz
nop
cld
jae
add
add
fisttps
push
mov
xchg
ret
xchg
jns
add
push
fbld
repnz
nop
cld
jae
add
push
mov
shll
mov
add
in
nop
leave
jmp
xor
add
jmp
jmp
add
push
insb
pusha
mov
jo
push
mov
nop
leave
jmp
xor
add
add
in
rol
push
mov
xchg
ret
add
xor
add
shl
adc
add
clc
repnz
nop
cld
jae
sldt
mov
nop
nop
cld
jae
xor
fwait
jbe
add
sub
add
mov
add
clc
repnz
nop
cld
jae
add
push
add
aam
clc
repnz
nop
cld
jae
sub
lahf
add
jae
clc
repnz
nop
cld
jae
sub
rorl
dec
cmp
repnz
nop
cld
jae
add
add
jbe
mov
clc
repnz
nop
cld
jae
add
add
add
iret
pop
push
mov
xchg
ret
add
fucomp
jo
aas
xchg
add
inc
xor
clc
repnz
nop
cld
jae
add
add
push
in
call
in
nop
leave
jmp
jns
jle
push
out
and
clc
repnz
nop
cld
jae
sarl
mov
inc
add
les
clc
repnz
nop
cld
jae
add
add
add
lock
call
in
nop
leave
jmp
int
add
clc
repnz
nop
cld
jae
add
rolb
add
push
mov
xchg
ret
add
inc
add
cmpsb
jbe
add
dec
add
mov
xchg
ret
cli
add
add
push
xorl
clc
repnz
nop
cld
jae
add
enter
clc
repnz
nop
cld
jae
add
add
incb
outsl
mov
clc
repnz
nop
cld
jae
and
push
mov
xchg
ret
add
add
mov
add
push
mov
nop
leave
jmp
mov
fnsave
push
push
mov
xchg
ret
push
add
add
add
sub
add
pop
push
mov
nop
leave
jmp
add
add
je
add
push
mov
xchg
ret
xchg
push
push
add
add
cli
mov
push
mov
nop
leave
jmp
add
push
in
add
clc
repnz
nop
cld
jae
add
mov
dec
push
mov
nop
leave
jmp
add
ret
add
pop
xor
push
mov
xchg
ret
add
shl
add
xor
int3
mov
push
mov
nop
leave
jmp
in
add
add
add
in
fmuls
nop
cld
jae
fstl
add
add
inc
das
lea
push
mov
nop
leave
jmp
lahf
in
add
add
nop
cld
jae
add
add
push
add
mov
mov
mov
push
mov
nop
leave
jmp
das
roll
push
add
mov
add
repnz
nop
cld
jae
push
add
xchg
add
std
mov
clc
repnz
nop
cld
jae
xchg
lahf
add
je
xor
clc
repnz
nop
cld
jae
add
jle
pop
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
mov
cli
mov
clc
repnz
nop
cld
jae
fists
add
mov
push
mov
xchg
ret
add
add
mov
jg
push
mov
nop
leave
jmp
add
lahf
add
or
xor
clc
repnz
nop
cld
jae
fwait
mov
jnp
loop
clc
repnz
nop
cld
jae
icebp
add
popf
add
xchg
call
nop
cld
jae
cmpsb
frstor
aas
scas
push
clc
repnz
nop
cld
jae
lahf
add
lahf
cmc
ffree
mov
add
repnz
nop
cld
jae
add
imul
stc
pop
jmp
add
push
insl
push
add
add
aas
add
add
rcrb
loop
mov
nop
leave
jmp
push
add
push
rolb
add
mov
add
push
mov
nop
leave
jmp
xor
add
sbb
ja
inc
add
add
shrb
adc
mov
push
mov
xchg
ret
add
add
test
push
mov
xchg
ret
in
xor
add
add
clc
repnz
nop
cld
jae
add
or
setg
mov
clc
repnz
nop
cld
jae
add
add
add
out
add
push
mov
nop
leave
jmp
push
add
test
cli
fwait
add
repnz
nop
cld
jae
add
and
or
jae
jns
push
add
popl
push
mov
nop
leave
jmp
xor
push
nop
add
cmp
clc
repnz
nop
cld
jae
jae
inc
pop
subl
push
mov
xchg
ret
jae
add
ret
push
mov
nop
leave
jmp
add
in
add
add
add
xlat
mov
add
clc
repnz
nop
cld
jae
rolb
mov
clc
repnz
nop
cld
jae
add
bound
popf
xchg
dec
je
clc
repnz
nop
cld
jae
das
pusha
cmp
nop
nop
cld
jae
add
shl
mov
nop
nop
cld
jae
add
rcrl
aas
mov
push
mov
xchg
ret
jae
and
test
dec
adc
repnz
nop
cld
jae
add
inc
mov
aad
xchg
pop
and
push
mov
xchg
ret
add
add
add
add
leave
jmp
in
and
push
jmp
mov
nop
leave
jmp
jo
jns
add
adc
repnz
nop
cld
jae
or
imul
pop
mov
clc
repnz
nop
cld
jae
incb
addb
or
mov
xchg
ret
mov
jns
jbe
das
add
adc
push
sub
in
nop
leave
jmp
cmpsb
add
add
lea
clc
repnz
nop
cld
jae
add
pusha
pusha
and
rclb
in
nop
leave
jmp
sldt
add
clc
repnz
nop
cld
jae
xor
xor
jbe
insb
inc
into
push
clc
repnz
nop
cld
jae
add
add
and
repnz
nop
cld
jae
add
add
add
xchg
clc
repnz
nop
cld
jae
add
push
push
fldl
and
push
mov
xchg
ret
add
jo
insl
in
xchg
jp
clc
repnz
nop
cld
jae
add
push
mov
add
mov
test
idiv
clc
repnz
nop
cld
jae
xor
ret
outsl
arpl
add
in
nop
leave
jmp
pusha
jmp
sub
clc
repnz
nop
cld
jae
rolb
in
add
clc
repnz
nop
cld
jae
mov
add
das
enter
adc
repnz
nop
cld
jae
push
add
daa
mov
nop
nop
cld
jae
rolb
add
add
repnz
nop
cld
jae
jae
sub
add
sub
in
add
add
push
out
add
add
pop
push
mov
xchg
ret
add
ffree
cmpsb
xor
jne
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
roll
add
mov
push
mov
nop
leave
jmp
add
push
add
add
add
stc
movzwl
push
mov
nop
leave
jmp
add
and
inc
clc
repnz
nop
cld
jae
push
jbe
add
add
push
mov
call
in
nop
leave
jmp
jbe
add
cmpw
push
mov
nop
leave
jmp
add
mov
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
ret
add
mov
push
push
mov
xchg
ret
jle
add
add
add
or
add
aas
mov
fstp
add
lret
mov
clc
repnz
nop
cld
jae
push
add
add
jne
clc
repnz
nop
cld
jae
cmc
jmp
scas
mov
clc
repnz
nop
cld
jae
cmp
mov
rclb
loope
inc
add
xor
add
xor
pusha
push
mov
xchg
ret
jae
imul
xchg
xchg
push
push
pop
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
xchg
add
sbb
nop
leave
jmp
or
sub
adc
mov
rclb
lock
add
add
add
add
repnz
nop
cld
jae
add
add
int
add
cmp
mov
nop
leave
jmp
push
insl
add
and
clc
repnz
nop
cld
jae
inc
sub
xchg
jbe
cmp
jmp
mov
xchg
ret
add
jae
mov
pop
clc
repnz
nop
cld
jae
in
popf
add
das
inc
add
push
mov
xchg
ret
and
push
xor
and
push
clc
repnz
nop
cld
jae
jo
xchg
add
or
dec
cmp
mov
nop
leave
jmp
imul
sub
cmc
add
xor
mov
push
mov
nop
leave
jmp
add
add
dec
and
push
mov
xchg
ret
pusha
add
mov
add
insb
push
push
mov
nop
leave
jmp
add
add
sub
push
add
add
inc
inc
add
repnz
nop
cld
jae
inc
add
push
add
decl
clc
repnz
nop
cld
jae
mov
popa
push
aad
add
leave
push
mov
nop
leave
jmp
add
push
add
add
jmp
nop
cld
jae
sub
icebp
add
cmp
popa
clc
repnz
nop
cld
jae
roll
mov
add
mov
add
push
clc
repnz
nop
cld
jae
jbe
add
mov
clc
repnz
nop
cld
jae
xor
fwait
int
mov
clc
repnz
nop
cld
jae
or
add
add
inc
and
clc
repnz
nop
cld
jae
sub
popf
insl
inc
jb
mov
xchg
push
mov
xchg
ret
add
insb
add
add
add
mov
mov
add
add
mov
adc
repnz
nop
cld
jae
add
add
add
add
add
cmp
push
mov
nop
leave
jmp
push
add
popf
data16
mov
push
mov
xchg
ret
rolb
add
rolb
add
mov
jmp
incl
add
add
add
add
clc
repnz
nop
cld
jae
mov
add
rolb
leave
add
clc
repnz
nop
cld
jae
jp
add
mov
clc
repnz
nop
cld
jae
mov
add
add
push
push
mov
in
leave
add
add
mov
mov
nop
cld
jae
add
jl
jae
cmpl
push
mov
nop
leave
jmp
add
xchg
push
pop
mov
push
mov
xchg
ret
add
add
add
add
jo
inc
add
fbstp
xor
add
sub
mov
add
in
nop
leave
jmp
ret
lock
add
clc
repnz
nop
cld
jae
icebp
roll
mov
jge
clc
repnz
nop
cld
jae
push
add
add
sub
push
mov
push
je
fisubl
ret
popa
add
pop
or
add
clc
repnz
nop
cld
jae
push
add
filds
or
push
in
push
clc
repnz
nop
cld
jae
add
rcrb
sar
aas
incb
jo
das
add
add
jle
fildll
fists
push
mov
xchg
ret
add
xor
cmp
mov
xchg
ret
sub
insb
add
add
add
loope
mov
clc
repnz
nop
cld
jae
xchg
icebp
ret
jne
clc
repnz
nop
cld
jae
add
mov
cltd
and
clc
repnz
nop
cld
jae
add
add
pop
push
mov
nop
leave
jmp
roll
jl
add
add
in
adc
add
movsl
or
inc
pop
add
add
add
add
clc
repnz
nop
cld
jae
push
sub
shlb
add
fs
add
push
mov
nop
leave
jmp
imul
add
rol
add
mov
xchg
ret
incb
rcll
push
add
sub
movswl
clc
repnz
nop
cld
jae
xchg
xchg
or
std
jne
push
mov
nop
leave
jmp
add
add
dec
mov
clc
repnz
nop
cld
jae
add
lret
clc
repnz
nop
cld
jae
mov
add
add
push
cmp
xchg
xlat
clc
repnz
nop
cld
jae
cmpsb
inc
jae
add
ret
clc
repnz
nop
cld
jae
cmpsb
add
add
repnz
nop
cld
jae
cmp
add
xor
nop
nop
cld
jae
push
add
xchg
add
xchg
in
add
clc
repnz
nop
cld
jae
cli
aas
roll
add
orl
mov
call
fcomip
insb
add
add
nop
add
incb
sub
or
dec
add
sub
mov
mov
push
clc
repnz
nop
cld
jae
jns
add
bound
add
aam
inc
add
add
add
push
cmpsl
mov
mov
sahf
mov
clc
repnz
nop
cld
jae
add
jns
add
jae
jns
add
in
nop
leave
jmp
xchg
lahf
add
pcmpeqd
add
add
nop
nop
cld
jae
push
xchg
icebp
jnp
mov
imul
add
mov
xor
fdivrp
cmp
insl
mov
clc
repnz
nop
cld
jae
add
lahf
add
call
clc
repnz
nop
cld
jae
xchg
cmp
add
leave
sub
repnz
nop
cld
jae
shrb
push
add
adc
nop
nop
cld
jae
add
add
shll
jbe
clc
repnz
nop
cld
jae
ret
add
add
leave
and
push
mov
nop
leave
jmp
add
cmc
sahf
pushl
clc
repnz
nop
cld
jae
jae
and
mov
clc
repnz
nop
cld
jae
add
repnz
add
mov
das
rcll
andl
nop
cld
jae
add
add
hlt
mov
and
and
add
dec
add
ret
mov
push
mov
xchg
ret
jae
add
inc
add
mov
nop
leave
jmp
add
xor
setge
xor
je
clc
repnz
nop
cld
jae
mov
add
push
push
push
and
push
fs
mov
nop
leave
jmp
cmc
add
xchg
das
arpl
adc
icebp
clc
repnz
nop
cld
jae
add
mov
mov
nop
leave
jmp
add
pusha
popf
jmp
add
nop
nop
cld
jae
pusha
add
add
add
push
dec
lea
push
mov
nop
leave
jmp
filds
jo
and
incl
nop
nop
cld
jae
bound
add
push
add
add
push
mov
nop
leave
jmp
add
add
push
clc
repnz
nop
cld
jae
insl
add
add
add
clc
repnz
nop
cld
jae
and
add
dec
cmpl
push
mov
nop
leave
jmp
push
add
xor
add
imul
cld
jae
add
add
dec
xchg
clc
repnz
nop
cld
jae
roll
xor
lea
clc
repnz
nop
cld
jae
popf
jbe
mov
add
enter
incl
lahf
add
add
push
push
add
int
popf
add
je
clc
repnz
nop
cld
jae
add
sub
notl
jne
clc
repnz
nop
cld
jae
add
add
lock
test
push
mov
nop
leave
jmp
add
cmc
test
mov
clc
repnz
nop
cld
jae
inc
sub
add
add
dec
incl
cmp
add
jbe
add
incb
adc
mov
jns
test
lock
clc
repnz
nop
cld
jae
xchg
add
lods
clc
repnz
nop
cld
jae
ret
aas
dec
sub
xchg
lock
add
add
repnz
nop
cld
jae
frstor
clc
repnz
nop
cld
jae
insb
add
jle
fwait
int
add
out
clc
repnz
nop
cld
jae
mov
jge
clc
repnz
nop
cld
jae
add
jae
add
test
add
add
in
nop
leave
jmp
push
add
add
imul
push
mov
nop
leave
jmp
imul
ret
mov
jmp
add
add
add
add
add
add
clc
repnz
nop
cld
jae
xchg
int
add
xor
inc
add
jle
jl
insl
cmp
add
push
mov
xchg
ret
jbe
cmpsb
jmp
dec
push
mov
nop
leave
jmp
push
sub
push
and
push
mov
nop
leave
jmp
xchg
add
add
xchg
mov
mov
clc
repnz
nop
cld
jae
mov
add
stos
add
add
in
add
jle
rolb
add
xchg
cmp
and
push
mov
nop
leave
jmp
push
mov
jae
add
cmc
sub
push
mov
nop
leave
jmp
add
push
in
insb
jmp
jnp
add
clc
repnz
nop
cld
jae
add
cmpsb
add
push
mov
nop
leave
jmp
int
xor
das
add
mov
clc
repnz
nop
cld
jae
jle
add
jo
mov
push
mov
xchg
ret
incb
xchg
add
add
cmp
mov
nop
leave
jmp
rol
pusha
push
sub
add
add
lds
xchg
clc
repnz
nop
cld
jae
shll
add
sbb
sar
repnz
nop
cld
jae
verr
add
ror
pop
push
mov
xchg
ret
add
or
pusha
jns
ficoml
repnz
nop
cld
jae
inc
jbe
add
add
rcr
xor
push
mov
xchg
ret
bound
add
mov
call
clc
repnz
nop
cld
jae
jl
ret
mov
repnz
nop
cld
jae
xchg
add
cmpl
push
mov
nop
leave
jmp
xchg
add
xor
mov
repnz
nop
cld
jae
jmp
add
push
push
mov
nop
leave
jmp
add
add
mov
add
out
mov
clc
repnz
nop
cld
jae
push
cmc
add
push
cwtl
xor
clc
repnz
nop
cld
jae
ret
sub
add
inc
sbb
ret
clc
repnz
nop
cld
jae
add
lahf
ltr
jge
push
mov
xchg
ret
add
fwait
add
lock
clc
repnz
nop
cld
jae
add
jae
jb
mov
add
cmp
nop
nop
cld
jae
add
shl
pop
add
clc
repnz
nop
cld
jae
add
icebp
add
rolb
mov
repnz
nop
cld
jae
fwait
popf
add
aas
push
sub
movsb
clc
repnz
nop
cld
jae
insl
add
ret
stos
push
mov
add
inc
jg
add
pop
add
sti
mov
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
bound
das
xor
in
jne
jmp
incl
xor
add
push
push
or
repnz
nop
cld
jae
popf
cmc
add
add
mov
clc
repnz
nop
cld
jae
add
and
mov
hlt
or
call
in
nop
leave
jmp
aas
push
jbe
cmp
call
in
nop
leave
jmp
rorl
push
push
mov
xchg
ret
add
cmp
cmc
jbe
rolb
lahf
mov
clc
repnz
nop
cld
jae
push
popf
add
add
clc
repnz
nop
cld
jae
add
add
filds
in
push
clc
repnz
nop
cld
jae
add
cmc
icebp
add
clc
repnz
nop
cld
jae
add
add
xchg
add
repnz
nop
cld
jae
filds
add
popf
fldl
mov
call
fstl
add
mov
add
incb
mov
lret
xchg
ret
push
add
add
rolb
ss
mov
clc
repnz
nop
cld
jae
add
cmp
or
add
push
mov
xchg
ret
push
add
jo
add
xor
mov
add
clc
repnz
nop
cld
jae
pusha
mov
add
mov
push
mov
xchg
ret
add
cmp
cmp
add
repnz
nop
cld
jae
xor
test
nop
cld
jae
jbe
add
and
sub
mov
adc
mov
nop
leave
jmp
xchg
add
cld
add
clc
repnz
nop
cld
jae
fwait
push
add
popa
ljmp
cld
jae
add
shrb
add
add
mov
nop
leave
jmp
bound
mov
mov
nop
cld
jae
xchg
imul
bound
lods
push
mov
xchg
ret
sub
push
push
add
mov
or
clc
repnz
nop
cld
jae
int
pusha
add
mov
nop
leave
jmp
add
add
add
and
repnz
nop
cld
jae
add
cmp
sub
imul
xor
push
mov
xchg
ret
cmpsb
mov
add
outsb
cmp
push
mov
nop
leave
jmp
add
mov
clc
repnz
nop
cld
jae
orps
add
xchg
fcoms
in
add
add
add
add
call
sar
add
add
add
mov
leave
test
insb
leave
add
call
push
incl
mov
addb
popf
xchg
add
test
mov
add
addr16
popa
jl
push
jae
jge
push
add
push
mov
push
shll
in
or
mov
fstpt
bound
mov
bound
mov
inc
or
cmp
push
aad
pop
mov
clc
jl
je
pop
lret
popa
rolb
cli
jmp
icebp
mov
jnp
xor
push
jo
mov
es
mov
ds
pop
ljmp
lock
fs
adc
mov
test
add
add
add
xchg
adc
mov
add
pop
sbb
je
loopne
mov
add
mov
sub
adc
inc
inc
lret
mov
stos
mov
test
addr16
mov
cmp
out
or
into
and
bound
mov
sub
mov
or
or
mov
add
outsb
jb
mov
imul
and
mov
push
ret
mov
cltd
out
add
mov
loop
mov
clc
xor
dec
fisttpl
lcall
out
imul
mov
add
popa
rolb
fcmovne
adc
mov
push
addb
cmp
dec
dec
mov
and
mov
mov
add
mov
bound
mov
push
loop
mov
jmp
dec
bound
mov
push
adc
mov
stos
xor
mov
mov
stos
arpl
or
bound
mov
jmp
pop
addr16
insl
add
gs
add
xchg
inc
lahf
fists
dec
xchg
push
test
test
xchg
insb
xchg
scas
and
and
iret
ficoml
add
push
fwait
in
les
add
fidivs
mov
test
pop
fadds
add
in
push
lods
or
mov
add
fstpl
push
rolb
mov
aaa
arpl
add
fdivrs
push
push
mov
out
and
fxch
push
and
add
add
mov
sahf
inc
stos
iret
sbb
xchg
out
lods
dec
enter
mov
mov
inc
add
pushl
mov
in
int3
jge
ret
arpl
mov
scas
push
loope
lret
mov
out
xchg
dec
mov
mov
sub
test
inc
scas
and
sbb
gs
mov
bound
mov
inc
add
cmp
les
push
jle
push
sti
inc
fidivs
fisttpll
ret
icebp
push
push
or
mov
or
push
sarl
out
jno
or
mov
mov
mov
int3
rolb
mov
mov
enter
xchg
repnz
cmpl
or
xchg
insl
push
add
leave
in
repz
inc
add
xchg
mov
lock
mov
fldln2
pop
mov
hlt
jno
mov
jecxz
sub
in
add
xor
pushf
pop
das
dec
cmp
mov
add
add
xchg
add
imul
movl
fcoms
rcll
mov
dec
dec
inc
dec
xchg
dec
fisubrl
lods
inc
add
mov
addr16
cmp
call
add
mov
pop
dec
xor
mov
pusha
add
leave
dec
jmp
hlt
xor
in
leave
inc
cli
inc
mov
pusha
add
scas
test
fcomps
cmp
lahf
idivl
icebp
mov
js
dec
outsl
xor
mov
fldenv
in
jp
xchg
cmp
xor
mov
add
mov
inc
addl
in
lret
test
push
and
and
and
mov
out
add
mov
sahf
push
cmp
jmp
mov
fcoml
mov
pop
jge
movb
out
push
add
jle
dec
or
lret
in
filds
mov
pop
inc
add
mov
xchg
xor
es
add
stc
daa
ficoml
cltd
in
mov
add
xchg
fists
mov
lods
sub
js
cmp
rcr
pop
mov
add
into
pushf
xchg
fiadds
pop
orl
mov
das
and
lahf
push
cmovo
mov
sbb
cmp
fsubrl
decl
jae
or
mov
mov
pop
movl
sbb
mov
push
popa
mov
mov
pop
cltd
xchg
pop
je
test
mov
fmull
stos
mov
inc
add
add
aam
testl
pop
push
sub
add
mov
scas
fisttpll
fistps
dec
jno
movsb
lock
fcmovb
sbb
sub
add
mov
add
sub
xchg
pop
jbe
add
or
mov
mov
adc
xorl
add
mov
lret
rolb
mov
add
out
pushf
xor
xor
div
push
jbe
popf
cmp
test
inc
lds
scas
jmp
popa
mov
mov
shrl
mov
mov
daa
add
das
jo
mov
movsb
inc
faddl
add
enter
addr16
hlt
xchg
add
mov
inc
sbbl
mov
mov
je
sbb
mov
mov
jg
xchg
add
push
dec
adc
mov
mov
sahf
cmp
aaa
pop
je
stos
sbb
fcmovb
inc
or
scas
mov
push
ret
hlt
repz
sub
testl
sub
cwtl
aam
adc
dec
out
test
daa
pop
mov
add
add
mov
mov
mov
sub
shll
mov
mov
test
push
push
add
enter
sbb
sti
addl
add
loop
mov
scas
nop
add
add
mov
inc
add
add
mov
andl
mov
int
xlat
sbb
mov
lcall
add
inc
xchg
frstor
add
nop
add
imul
mov
lret
add
xlat
mov
add
sub
pop
and
mov
mov
lcall
scas
add
clc
out
addb
lds
push
ret
adc
mov
inc
sub
ss
mov
add
pop
outsl
adc
mov
nop
add
mov
or
in
add
mov
addr16
in
int
add
mov
in
mov
mov
add
push
add
mov
fsts
mov
mov
push
adc
insb
xor
mov
mov
or
rcrl
pop
xchg
push
pop
sub
or
fwait
scas
jp
mov
out
neg
push
xchg
or
xchg
adc
mov
cli
mov
mov
add
cltd
sbb
add
jmp
adc
in
jp
sbb
sbb
pop
mulb
jl
jecxz
mov
movsb
into
and
lea
js
inc
mov
outsl
mov
inc
mov
mov
ss
pop
or
lret
ja
push
rolb
mov
mov
addb
and
mov
hlt
or
add
fstpt
push
push
add
mov
cmpsb
and
mov
mov
add
mov
mov
ret
sub
dec
roll
dec
push
or
add
test
add
test
adc
mov
add
sub
mov
adc
ret
iret
xchg
sbb
push
ret
inc
clc
repz
vaddps
mov
mov
sub
clc
popf
mov
xor
mov
pop
das
mov
pop
inc
xor
mov
push
je
scas
mov
arpl
and
mov
push
cmp
xchg
cs
sbb
mov
dec
sub
pop
addb
inc
ljmp
add
test
mov
add
xchg
test
jecxz
and
mov
jne
or
push
out
add
lahf
inc
loope
call
andl
mov
lock
fsubrs
dec
xor
pushf
out
lods
lcall
mov
imulb
clc
jno
inc
dec
jb
mov
add
repz
sub
add
mov
add
lret
loope
sub
loop
mov
inc
out
add
jl
adc
add
rolb
mov
or
jae
inc
jmp
add
repz
cwtl
pop
mov
mov
lock
and
mov
add
mov
add
ret
xor
mov
xchg
pusha
add
inc
gs
add
xor
xchg
add
iret
es
sub
add
xor
mov
test
cmp
addb
xchg
iret
popa
in
inc
jae
inc
add
jo
mov
add
mov
mov
mov
in
iret
lods
loope
inc
fadds
jns
movsl
cmp
mov
add
aas
int
icebp
mov
popf
insl
dec
out
jp
xchg
sub
xchg
in
test
pop
gs
push
add
jns
mov
pop
xchg
mov
mov
ror
mov
and
pop
int3
mov
add
mov
add
jae
mov
add
and
mov
and
mov
arpl
add
testb
or
add
jmp
sti
mov
xchg
mov
cmp
arpl
mov
cmp
xchg
filds
pop
mulb
addb
scas
or
lock
mov
clc
sbb
not
sahf
sbb
notl
mov
mov
xchg
add
add
mov
fcom
add
dec
cltd
js
addr16
mov
sahf
sti
cmpsb
fs
pop
xor
add
hlt
in
xlat
jecxz
repz
or
add
dec
xchg
cs
inc
and
mov
fwait
xor
mov
add
popf
addr16
pop
sub
jge
pop
pop
rolb
mov
add
bound
mov
mov
mov
push
cmpsb
mov
mov
xchg
pop
lret
adcl
mov
mov
lods
push
add
mov
lcallw
push
leave
mov
sahf
mov
jl
add
fildll
mov
bound
mov
mov
repnz
outsl
loope
jb
mov
push
nop
add
mov
mov
add
inc
aas
mov
ss
add
mov
xchg
lret
mov
movsb
mov
aaa
jle
pusha
add
mov
in
adc
daa
mov
add
mov
add
add
add
das
ficoms
ljmp
cmpsl
jbe
je
fldt
movsl
jl
test
test
mov
ret
scas
dec
mov
mov
cmp
arpl
cmpsl
test
dec
call
add
inc
pop
inc
add
daa
ret
mov
mov
add
xchg
push
clc
notl
dec
push
sub
cld
sub
mov
repz
mov
xchg
dec
mov
add
add
add
rol
add
imulb
mov
add
mov
add
add
fimull
xor
in
xor
dec
inc
divl
add
jne
xor
mov
xchg
jbe
jno
xchg
add
out
aam
fwait
adc
xchg
aad
loop
mov
add
add
jno
add
cli
jnp
inc
daa
pop
lret
pop
cmp
mov
es
pop
or
insl
cmp
ja
add
add
repz
and
sbb
dec
mov
add
arpl
rolb
xchg
add
rorl
mov
mov
mov
add
inc
mov
jmp
add
add
rolb
mov
daa
pop
fdivrs
push
data16
addb
in
cmp
and
ret
insl
mov
pop
lea
cmp
mov
mov
pop
sbb
inc
movsl
movb
ficoml
add
xchg
adc
stos
jp
outsl
test
xor
xor
mov
outsl
lret
mov
rolb
or
lret
xor
rcrl
mov
mov
stos
cli
cwtl
inc
adc
or
add
add
sub
fsubs
or
jecxz
cmp
mov
scas
jge
lea
mov
adc
mov
and
stc
add
mov
pop
cld
loop
mov
ret
cmp
xlat
fneni(8087
add
insl
jle
sarl
sti
lret
cld
mov
imul
add
and
mov
lods
xchg
xor
mov
rolb
arpl
add
mov
add
and
add
add
mov
out
insl
push
add
jno
rcll
das
in
addb
pmaxsw
or
cmp
mov
mov
push
roll
add
add
mov
jmp
push
lcall
jae
add
mov
mov
popa
rcll
add
sbb
add
out
call
mov
add
add
mov
lcall
popf
xchg
add
mov
add
mov
insb
cltd
cwtl
jb
mov
xchg
inc
add
add
mov
mov
mov
add
dec
jmp
add
or
test
jmp
inc
mov
jl
fildll
sahf
icebp
xlat
rol
pop
xor
fucomip
cmp
mov
add
add
mov
xchg
jmp
in
or
push
popf
int
jl
xchg
pop
xchg
popa
push
add
and
mov
ja
repnz
mov
push
add
xlat
jge
xchg
add
mov
aam
add
add
xor
mov
push
mov
pop
xchg
pop
jae
xchg
in
pop
add
arpl
test
push
add
enter
push
add
sbb
add
or
aam
mov
push
sub
aad
testl
or
or
jo
mov
or
inc
imul
add
mov
lret
mov
add
mov
outsl
in
repnz
add
sub
jge
jo
mov
or
push
or
addr16
stos
popf
jno
mov
adc
pop
inc
mov
jl
xor
fdivl
cmp
push
push
sbb
mov
and
add
add
pop
lea
hlt
inc
add
mov
dec
push
nop
add
dec
add
lods
cmpsl
jae
add
arpl
jno
lret
mov
add
push
add
mov
mov
mov
inc
add
rolb
int
add
enter
mov
movsl
pop
pop
clc
movsl
add
mov
and
mov
jo
mov
mov
mov
add
push
add
adc
insl
notb
mov
add
leave
mov
cmpsl
std
jle
mov
mov
mov
jl
add
hlt
mov
cmp
push
nop
add
adc
pop
imul
cmp
jbe
push
aaa
adc
fists
push
movsb
push
test
pushf
imul
mov
aad
fsubs
nop
add
andl
mov
adc
mov
dec
mov
add
adc
mov
popa
mov
jno
add
add
call
aad
add
inc
sahf
push
add
insl
pop
jg
ljmp
inc
add
test
add
mov
add
mov
enter
pop
push
cmpsb
fisttpll
push
hlt
aas
and
mov
outsl
fs
clc
push
pop
mov
inc
add
mov
bound
mov
pop
fldcw
lret
sub
roll
add
aad
mov
sub
add
test
xchg
add
int3
cmp
pop
adc
cli
dec
test
jbe
adc
mov
sub
push
mov
sub
jbe
add
lods
sub
outsl
nop
add
sbb
mov
cmp
loopne
mov
in
out
add
loopne
mov
add
roll
leave
jp
push
pop
push
in
xor
mov
xlat
push
adc
push
jl
xlat
rorl
pop
js
out
push
imul
scas
or
add
xor
stos
fsubs
shr
xlat
pop
or
insl
negb
jb
mov
int
inc
add
dec
or
add
mov
fsubl
out
in
sub
mov
in
inc
das
pop
movsb
daa
pop
and
mov
cs
or
push
sbb
dec
fisubrs
rcll
inc
add
pop
out
out
lods
dec
mov
adc
out
call
pop
pusha
add
lret
insb
icebp
scas
fstl
sbb
dec
dec
rolb
idiv
in
push
jnp
addb
subps
add
add
mov
xchg
xlat
dec
mov
pop
xor
mov
int3
pop
and
test
add
mov
loop
mov
pop
add
xor
mov
mov
mov
lret
xorl
add
loope
cbtw
out
sbb
mov
mov
mov
push
movsb
pop
mov
mov
mov
sbb
jns
ret
and
mov
pop
loop
mov
pop
imul
jg
jns
das
cmp
add
add
mov
cmp
sbb
add
fidivrl
mov
aaa
push
int3
cmp
sbb
add
mov
daa
out
push
scas
jb
mov
testb
mov
jo
mov
add
add
mov
lods
mov
fistps
jmp
adc
mov
out
pusha
add
add
mov
sbb
add
jl
mov
mov
inc
add
sub
and
mov
mov
xchg
xor
mov
les
xchg
pop
xor
ja
das
stc
rolb
mov
add
es
outsb
xor
jae
jle
stos
dec
mov
mov
cmp
mov
daa
hlt
mov
sqrtps
push
cmp
ficoml
fisttpl
pop
mov
mov
sbb
mov
loopne
mov
or
test
mov
pop
pop
xor
es
aas
mov
js
movsb
pushf
lret
mov
gs
in
or
sub
or
mov
iret
movsb
inc
ficompl
sub
add
insb
outsl
jne
adc
mov
add
sub
mov
add
push
add
lods
mov
loope
add
mov
nop
add
xchg
add
and
push
rolb
mov
sbb
adcl
add
add
fstl
dec
scas
xor
mov
pop
es
cmc
jmp
movsl
fs
inc
rolb
mov
mov
outsl
cltd
enter
push
mov
and
mov
mov
or
push
adc
inc
add
ficoml
js
adc
stos
add
add
fs
add
aaa
stc
adc
scas
roll
sub
pop
jp
jae
adc
sbb
mov
fmull
cltd
or
mov
insb
xor
dec
pushf
scas
mov
sub
mov
jge
add
mov
mov
inc
add
and
jb
mov
xorps
sub
pushf
mov
add
fsubl
add
add
add
les
or
mov
stc
pusha
add
dec
fimull
jo
mov
mov
test
enter
mov
adc
pushf
daa
imul
or
xor
mov
xor
add
stos
mov
test
hlt
sbb
out
imul
out
cmp
addl
add
aam
addb
rcll
or
arpl
inc
imul
jle
loope
pusha
add
pop
loopne
mov
or
cmc
push
rorl
addr16
cli
pop
rolb
mov
xchg
fildll
mov
out
xchg
mov
adcl
icebp
data16
cli
sub
popa
pushf
xlat
stos
push
and
imul
mov
cmpsb
mov
add
scas
mov
pop
pop
jle
js
movsb
adc
mov
daa
data16
pop
cmp
jmp
push
jo
mov
jne
mov
cmp
add
int3
fisttps
mov
add
mov
fisubrl
sub
jmp
jae
lret
sub
xor
and
mov
add
push
outsb
and
mov
mov
addb
rolb
mov
dec
pop
lods
push
jle
xor
mov
mov
aam
add
sahf
cmp
cmp
add
mov
push
xor
mov
add
pop
subl
adc
add
mov
into
out
cmc
cmp
fwait
movsb
leave
js
fldenv
mov
cmc
movsl
cmp
push
mov
cmp
inc
test
xlat
clc
cwtl
rolb
mov
add
add
test
mov
mov
dec
adc
mov
inc
je
mov
rolb
mov
repz
pusha
add
call
push
add
hlt
add
int3
push
jnp
mov
xchg
xchg
pushf
addb
out
push
lock
push
pop
in
pop
or
stos
fcoml
adc
mov
dec
test
pushw
fiadds
sub
and
sbb
mov
mov
addb
and
push
xchg
out
test
fcom
rolb
mov
scas
add
mov
add
mov
aaa
inc
jo
mov
cmp
mov
add
lock
mov
add
or
jle
fisubrs
mov
sbb
mov
mov
add
mov
ret
outsb
cmp
dec
aam
lds
in
cwtl
call
jno
bound
mov
and
jmp
test
adc
pop
stos
mov
mov
jmp
dec
std
jbe
int
add
add
rolb
adc
push
dec
fnstenv
mov
xchg
rcrl
mov
mov
repnz
inc
inc
les
xchg
add
in
and
mov
mov
mov
fs
aad
pop
xor
push
insl
add
dec
outsl
or
jo
mov
enter
mov
pop
and
add
ja
je
rolb
mov
into
jecxz
addl
mov
pop
faddl
add
inc
jno
pop
fimull
mov
jns
jg
add
jbe
cmp
rolb
mov
pop
dec
aaa
hlt
mov
mov
lret
mov
mov
divb
adc
mov
jb
mov
popf
jns
mov
mov
add
sahf
rolb
mov
dec
adc
mov
in
stc
push
insb
addr16
xor
xchg
sbbl
aad
sti
push
jae
icebp
xor
jo
mov
out
je
lea
and
sub
add
mov
pop
sbb
fnstsw
pop
out
enter
mov
add
push
out
add
mov
mov
leave
mov
nop
add
add
add
mov
mov
add
int3
bound
mov
inc
cmp
das
dec
mov
add
mov
insb
push
sbb
xchg
add
iret
push
popf
and
mov
add
aaa
rcll
scas
mov
mov
mov
rorl
mov
add
add
insb
dec
jo
mov
mov
xchg
or
mov
mov
cli
fcoms
pop
fcmovnb
rolb
mov
sarl
nop
add
or
lcall
imul
aad
jae
std
ljmp
daa
or
rolb
jns
imul
sub
sarl
lret
add
adc
add
cmp
push
push
aaa
add
mov
push
rolb
xor
add
out
jo
mov
add
mov
rcll
addr16
cmp
cli
pop
rolb
iret
or
out
jbe
stc
lods
xchg
lcall
xor
fwait
stc
test
fnstsw
stos
ss
sub
js
add
rcrl
mov
mov
dec
mov
cmp
inc
js
mov
add
addr16
cmc
roll
sbb
ret
pop
cmp
in
add
pusha
add
adc
cmpsl
or
add
lods
inc
add
mov
dec
mov
xchg
addb
xchg
rorl
mov
mov
xchg
ud2
jecxz
test
inc
testb
cli
cmp
pop
jle
xchg
add
ljmp
data16
add
add
scas
neg
ljmp
xor
jp
lds
jb
mov
mov
add
outsb
jns,pn
aaa
in
cmpl
xor
imul
add
add
mov
shr
dec
mov
cltd
mov
jnp
push
in
sub
shll
jno
add
addr16
pop
and
add
add
in
outsl
imul
mov
add
add
repnz
fistps
sbb
mov
add
mov
fpatan
inc
fucomi
enter
inc
in
fwait
aaa
loop
mov
aad
or
pop
xor
mov
add
ja
add
cmc
xor
add
mov
mov
mov
xchg
outsl
mov
adc
mov
mov
mov
lahf
add
mov
hlt
pop
fists
cmp
mov
add
loopne
mov
add
stos
add
push
int
add
nop
add
jmp
mov
mov
mov
call
add
mov
in
ja
icebp
jecxz
and
mov
mov
mov
fistpll
ds
sub
xor
jecxz
popf
aad
add
movsl
mov
jp
add
add
imul
inc
fdivr
and
mov
and
imul
xorl
pop
test
cmp
test
mov
stos
pop
lret
mov
adc
xchg
rcl
add
out
ret
arpl
adc
sbb
cli
cmc
dec
idivl
or
mov
outsl
jecxz
jmp
ret
pushf
xor
xchg
add
jne
arpl
push
cltd
pop
push
mov
fadds
fdivrp
add
mov
inc
and
xor
sahf
in
jle
pop
push
xor
cmp
add
rcll
mov
mov
mov
add
jne
rolb
mov
cmpl
inc
dec
data16
mov
sbb
add
add
mov
out
popa
lret
ljmp
add
mov
cmp
addb
pop
loop
mov
sbb
mov
xor
mov
sub
jecxz
mov
scas
sahf
inc
add
dec
pop
pop
lahf
stc
dec
sbb
add
pop
out
add
mov
mov
mov
sahf
mov
mov
rcr
sub
adc
mov
addb
xlat
scas
fisttpl
dec
clc
stc
insb
cmp
nop
add
notb
mov
mov
mov
aas
mov
xor
add
sbb
mov
loopne
mov
sub
stos
sti
and
mov
mov
mov
xchg
and
gs
sti
or
pop
addr16
pop
cmp
enter
and
mov
shll
addb
push
add
adc
lahf
icebp
addr16
xor
add
pop
push
add
orl
sub
mov
pop
fdivs
add
mov
jae
push
adc
add
add
sub
leave
inc
and
mov
cltd
insl
sbb
cwtl
push
pop
fucomp
inc
arpl
mov
jae
add
mov
push
cli
inc
add
mov
cs
inc
jbe
addb
test
add
mov
xchg
add
sub
movsb
mov
mov
lods
mov
test
push
sub
inc
mov
sbb
rorl
mov
fimull
inc
add
loopne
mov
addb
sbb
pop
ljmp
or
add
mov
inc
xor
arpl
xchg
push
int3
xor
loope
sbb
mov
mov
or
push
ret
es
add
mov
or
addb
mov
cltd
adc
add
mov
pop
mov
adc
mov
mov
js
je
imull
pop
add
mov
xchg
xor
mov
fwait
jae
add
mov
jae
aaa
stos
jmp
es
movsb
jbe
imul
jg
fwait
out
mov
out
movsl
pusha
add
loope
mov
pop
hlt
pop
cmp
outsl
in
inc
add
mov
mov
sbbl
cmp
sti
mov
add
out
fs
add
xchg
jmp
idiv
popf
in
stc
cmp
add
mov
in
add
mov
mov
ffreep
mov
lret
add
dec
test
xor
lods
mov
mov
in
imul
xchg
mov
icebp
rolb
sub
std
out
sbb
sub
fldcw
push
mov
add
jg
mov
pop
cli
lahf
add
mov
mov
in
mov
pop
xchg
xchg
hlt
in
and
pop
test
fistpll
cltd
adc
dec
repz
xchg
cltd
loop
mov
sahf
xor
and
xor
ud1
ljmp
add
inc
movsl
or
mov
rolb
mov
mov
add
shll
jbe
andl
add
pop
inc
movsl
adc
mov
xlat
mov
dec
xchg
add
out
mov
bound
mov
and
out
push
outsl
xchg
add
mov
cmp
sub
int
add
out
push
inc
and
fisttps
push
jle
xor
aam
pop
or
xchg
dec
push
lock
nop
add
add
iret
or
mov
lock
sub
add
mov
add
mov
mov
add
add
movsb
pop
lcall
sub
pop
hlt
daa
pushf
mov
outsb
mov
mov
mov
jbe
add
sub
push
lea
test
add
sub
xlat
inc
add
sub
add
inc
mov
add
outsl
int
cmc
push
aam
add
fxch
enter
pop
jo
mov
ret
xchg
add
lods
enter
mov
xchg
lds
es
leave
mov
add
inc
add
mov
or
adc
addr16
xchg
push
jp
adc
mov
mov
jg
mov
xor
add
scas
mov
int3
xor
mov
imul
add
mov
imul
sbb
lret
daa
enter
xor
mov
lods
out
and
add
xchg
cmpl
repnz
scas
jmp
add
repz
inc
addb
jbe
push
add
inc
add
testl
cmp
xrelease
aaa
ffree
aas
ret
in
movsb
cltd
push
jl
inc
loope
add
mov
add
mov
arpl
fisttpll
aad
add
add
add
xor
mov
jns
sbb
mov
push
cmp
das
iret
fcmove
lret
mov
mov
dec
in
sahf
add
mov
mov
stos
fiadds
mov
mov
mov
mov
cmp
or
add
add
cmp
add
aam
rorl
cld
inc
add
cmp
xor
mov
dec
mov
inc
add
call
xchg
out
and
cli
adc
mov
pop
adc
stos
inc
add
mov
movsl
mov
adc
add
cmpsl
cli
scas
shl
or
mov
jl
add
mov
xor
mov
pop
or
iret
add
lret
insl
gs
mov
jecxz,pn
xlat
jmp
push
iret
dec
cmp
pop
int3
jg
push
int
push
add
fsub
sahf
les
sbb
mov
mov
cmpsl
repz
add
xchg
loopne
mov
add
mov
mov
std
mov
jp
std
pop
pop
fdivrl
mov
add
mov
test
cmp
pop
xor
mov
add
mov
mov
mov
mov
loopne
mov
dec
lds
decl
fwait
xor
mov
hlt
cwtl
jne
das
push
add
add
xor
mov
inc
add
add
and
test
pop
push
jg
movl
cmpsb
imul
jns
add
lret
addb
inc
ss
outsl
dec
mov
mov
mov
push
repnz
mov
mov
fldcw
xor
mov
xchg
inc
sub
jle
cmp
or
cmp
in
jne
data16
add
insb
inc
dec
xchg
xchg
jae
stos
rcll
orl
ret
adc
mov
add
add
movsb
xchg
inc
ljmp
add
pop
out
add
mov
imul
jne
inc
add
mov
pop
xchg
std
jge
adc
add
fwait
pop
push
push
jmp
cmp
dec
leave
add
mov
arpl
aas
imul
inc
add
clc
testl
mov
mov
jnp
call
push
add
xlat
shll
test
mov
lret
add
adc
push
add
add
pop
push
add
mov
or
and
rolb
mov
xor
mov
xchg
mov
mov
repz
jbe
xorl
scas
aaa
fwait
outsb
pop
jge
mov
sbb
test
xchg
movsb
les
add
mov
or
and
add
mov
mov
scas
push
push
add
add
jns
ja
pop
adc
xor
cmp
add
xor
mov
mov
lea
movsb
cmp
add
testl
popa
cmpsl
xchg
add
imul
jecxz
add
mov
mov
cmpsb
xor
pusha
add
mov
test
pop
jge
mov
mov
rcll
lret
jae
mov
pop
dec
pop
lret
xlat
pop
in
xor
clc
sub
int3
jns
shll
adc
mov
int3
enter
mov
add
dec
mov
daa
xchg
addb
adc
push
fdiv
jmp
mov
movl
rolb
mov
adc
mov
mov
add
repz
mov
mov
loope
add
in
adc
mov
sbb
stc
lret
mov
or
xchg
into
cmp
mov
inc
mov
dec
jo
mov
or
xor
and
cmp
push
add
js
cmp
fcmovnu
xchg
add
xor
add
add
jno
pop
out
hlt
aaa
fdivrs
sti
enter
add
push
pop
leave
lock
popa
add
cmp
daa
ljmp
cmp
addb
jge
cmp
test
or
mov
pop
mov
jle
add
fcoml
adc
push
xor
mov
push
adc
push
add
pusha
add
adc
mov
out
or
mov
mov
mov
clc
jb
mov
xor
sahf
dec
cli
int
jb
mov
popa
xor
dec
inc
sub
mov
jae
cli
nop
add
add
add
push
popa
sbb
mov
add
movsb
pop
xchg
pop
xchg
add
dec
inc
add
sub
addb
pop
fists
mov
dec
jp
adc
mov
mov
pushf
shll
icebp
adc
fwait
cmp
add
add
mov
in
adc
mov
stos
inc
mov
mov
pop
add
and
mov
mov
outsl
das
fcoml
lds
add
adc
movsl
xchg
add
imul
pop
pop
addb
push
add
add
inc
sbb
and
mov
mov
insl
sub
cmc
fisttps
mov
adc
inc
add
jae
mov
lea
xchg
imul
hlt
mov
add
cltd
gs
cmp
inc
add
mov
dec
xchg
xchg
add
ds
iret
repz
mov
push
add
add
cmp
add
fisubl
mov
add
stos
or
mov
and
mov
fistps
mov
pushf
xchg
jmp
dec
push
je
ja
rolb
mov
add
and
pop
adc
stos
xorl
xchg
ret
aad
add
pop
addr16
add
sbb
add
enter
push
fucom
mov
mov
addr16
sahf
in
out
push
add
pop
push
imul
mov
aam
cmp
add
sbb
fldenv
dec
mov
mov
add
pop
and
lcall
aaa
pushf
adc
sar
jmp
cmpsl
cli
sbb
scas
push
pop
lahf
pushl
div
mov
add
aaa
push
xchg
cmp
mov
mov
pusha
add
adc
mov
imul
xchg
add
inc
sbb
sarl
add
mov
iret
loopne
mov
lds
push
add
stos
dec
ja
push
or
mov
lea
neg
mov
enter
in
adc
mov
cld
mov
test
clc
daa
pop
adc
add
or
ljmp
in
push
sbb
push
pop
mov
adc
mov
mov
cmp
push
fwait
or
jl
xlat
mov
xchg
add
mov
sti
fnsave
add
add
mov
gs
cmp
js
mov
xchg
das
add
pop
jbe
dec
lcall
lea
lahf
out
push
push
add
pop
push
sbb
push
addr16
pop
or
mov
inc
add
pop
mov
xor
mov
or
fwait
xor
push
pusha
add
push
sahf
mov
add
add
xchg
fbld
mov
mov
mov
ja
lret
decl
add
add
out
push
jg
add
mov
lahf
add
mov
mov
mov
scas
sbb
mov
jae
jg
mov
mov
int3
addb
push
add
inc
add
sbb
mov
add
pop
or
push
mov
push
cwtl
and
mov
mov
add
push
xor
add
add
les
or
jo
mov
dec
mov
mov
mov
add
sub
sbb
adc
mov
and
test
frstor
add
mov
mov
into
xchg
sub
add
mov
sbb
xchg
add
or
mov
iret
xlat
out
cli
mov
or
sbb
mov
add
clc
rolb
lcall
icebp
ljmp
pop
jae
add
imul
cs
add
mov
mov
pop
push
cmp
inc
je
mov
mov
add
xor
mov
xchg
enter
dec
ja
pop
fs
inc
sahf
push
push
and
mov
xor
cmpsb
fdivr
mov
nop
add
aas
mov
sub
rorl
cli
add
mov
mov
pop
adc
test
je
xor
adc
movsb
xor
pop
stos
popa
ret
inc
add
loop
mov
arpl
pop
imul
push
add
lds
inc
add
add
test
add
xor
adc
push
add
adc
mov
cmp
test
addl
mov
mov
mov
inc
add
ja
incb
push
add
sbb
sti
xchg
aad
std
shrl
pop
fmul
std
cmp
adc
mov
repz
rolb
outsb
mov
lods
jle
insb
insb
outsl
outsl
push
pop
mov
mov
and
mov
and
xor
pop
pop
enter
add
les
mov
xor
mov
add
insl
jne
outsl
ret
or
push
sub
jne
mov
dec
jmp
mov
push
stc
cld
xchg
popf
mov
pusha
add
cmpsl
repz
out
add
pop
inc
and
sub
mov
xchg
dec
pusha
add
xor
mov
loopne
mov
out
dec
stc
or
push
pop
imul
add
nop
add
mov
fldt
fimuls
or
repz
repnz
jle
push
mov
jo
mov
daa
test
add
jb
mov
dec
mov
fldenv
pop
mov
inc
aam
add
sub
xor
mov
add
add
mov
mov
call
or
cmp
jns
mov
movsl
rolb
mov
inc
fiaddl
mov
add
std
idiv
rolb
data16
add
insl
clc
lcall
mov
data16
hlt
mov
fcom
ret
fst
add
sub
ja
dec
dec
ret
jb
mov
mov
out
into
ds
fistpll
xchg
in
cmp
stc
or
cwtl
add
mov
push
add
mov
add
lods
frstor
add
mov
es
js
pop
outsb
fidivrl
mov
lcall
add
mov
add
add
loopne
mov
mov
add
add
cmpsb
icebp
add
test
pop
jnp
add
cmp
add
push
xor
inc
xchg
int3
adc
call
dec
sub
ja
cmpsl
ret
mov
jb
mov
mov
jg
cltd
add
repnz
add
mov
mov
movsl
mov
jmp
add
sub
push
sub
or
ret
mov
jno
add
movsl
pop
ljmp
mov
ret
sti
add
mov
dec
jae
movsl
add
mov
pop
in
cltd
sub
pop
bound
mov
xchg
out
jae
mull
and
mov
push
testl
xor
add
mov
mov
movsb
xor
mov
data16
pop
mov
add
push
aad
invd
mov
adc
mov
aam
sub
shll
iret
insl
mov
add
push
lahf
mov
fadds
daa
xor
mov
aad
hlt
dec
sbb
daa
mov
out
fstpt
stos
aad
ret
mov
push
in
add
xor
mov
mov
adc
stos
gs
sbb
cmp
mov
add
mov
inc
add
inc
add
mov
push
addb
add
mov
lahf
ret
mov
in
push
dec
xor
mov
or
adc
nop
add
or
inc
add
hlt
and
rolb
pop
movsb
not
jnp
test
add
cmp
xchg
icebp
adcl
dec
xor
mov
add
add
add
lods
adc
mov
jl
sub
mov
lea
or
mov
sub
jmp
push
mov
sti
arpl
mov
add
add
shll
mov
mov
insb
jecxz
jnp
push
adc
mov
jno
fidivrl
add
mov
mov
and
mov
ja
add
arpl
lods
jge
rolb
mov
push
outsb
push
fadd
add
mov
pop
mov
fwait
or
stc
mov
mov
push
and
pop
inc
jmp
xchg
add
add
inc
jge
lea
iret
mov
fists
sahf
leave
sub
aas
popa
mov
sarl
push
test
xchg
stos
icebp
sbb
dec
cmp
mov
test
es
mov
lret
in
pop
daa
or
add
fnstsw
pop
lcall
inc
lcall
jge
fidivl
fwait
int3
inc
add
out
rolb
push
sti
sbb
pop
imul
rcr
mov
filds
mov
pushl
jp
mov
add
and
mov
lea
adc
and
add
loopne
mov
dec
pop
movsb
lret
inc
add
divl
cwtl
fidivs
paddb
test
shll
mov
add
sub
add
dec
xchg
add
and
mov
mov
mov
sub
xor
lods
lcall
cld
std
mov
add
or
mov
movsl
aas
xor
jae
sti
push
lock
mov
sub
mov
adc
mov
leave
sub
or
gs
and
mov
test
xchg
iret
inc
sub
add
mov
add
add
mov
mov
jmp
scas
out
cwtl
pop
pop
addb
out
jb
mov
fsts
add
mov
loopne
mov
xchg
xor
mov
xchg
lcall
dec
xor
sbb
push
leave
adc
mov
inc
and
mov
add
cmp
mov
lahf
lea
sub
push
cmpsb
lock
ja
jae
add
xor
add
add
cmpsl
dec
add
mov
out
pop
sbb
sub
sub
and
mov
dec
mov
or
mov
imul
add
je
sbb
adc
movsl
insb
pop
xlat
jmp
adc
idivb
mov
add
test
mov
mov
mov
or
imul
aam
stos
repz
addb
jb
mov
mov
fcomi
add
mov
in
ja
add
cwtl
std
xchg
test
cltd
das
int3
cmpsb
je
insl
xor
sub
sahf
add
imul
pushl
loopne
mov
gs
jbe
adc
mov
jecxz
mov
je
push
fwait
jmp
xchg
mov
mov
pop
sbb
ljmp
add
scas
add
add
mov
cpuid
add
inc
add
mov
add
fadd
movsl
dec
mov
add
mov
push
add
repnz
and
ret
jno
loopne
mov
add
icebp
jae
mov
and
mov
add
add
cld
seta
ret
dec
mov
add
mov
add
add
cwtl
add
or
addb
pop
movsb
scas
int
in
loopne
mov
int
jge
mov
cwtl
insb
stos
cmp
pop
movlps
mov
mov
lock
pushf
inc
add
add
add
outsb
imul
mov
xchg
jb
mov
imul
push
add
mov
push
inc
push
jno
sahf
aad
jmp
mov
popf
sbb
mov
cmp
sub
popa
mov
mov
cmove
insb
scas
daa
repnz
out
add
and
add
dec
fstps
mov
add
mov
repz
mov
cmp
mov
push
cld
cmc
xchg
addb
jae
or
loopne
mov
mov
mov
cli
es
or
and
idivl
jmp
add
add
mov
enter
out
xchg
jl
or
pop
xchg
and
add
lds
mov
add
dec
dec
push
mov
push
jnp
add
mov
inc
push
add
out
push
movsb
cmpsb
lcall
add
mov
push
add
test
add
mov
icebp
jp
add
and
repnz
jns
fldl
and
xor
mov
loope
sub
cwtl
add
rolb
jg
nop
add
mov
out
jo
mov
add
pop
pop
and
and
lds
add
dec
loope
mov
jnp
and
mov
int
cwtl
stos
xor
push
fistpl
or
and
sbb
rolb
mov
inc
jnp
dec
sahf
in
loopne
mov
lea
add
push
cmp
jg
inc
pop
push
stos
and
dec
repz
sub
add
jl
inc
add
hlt
jb
mov
je
xor
mov
cmp
mov
mov
call
imul
mov
pop
jecxz
js
mov
cmpl
add
mov
xlat
lret
mov
stos
jmp
aaa
mov
lds
adc
dec
dec
mov
cs
add
mov
mov
sbb
repz
movsl
add
cmp
inc
iret
stc
into
pop
mov
inc
clc
fs
and
mov
out
dec
cmp
repnz
add
movsb
movsb
xor
mov
mov
add
add
mov
or
jbe
imul
scas
divl
push
inc
imul
mov
push
das
xchg
mov
imul
or
pop
pop
out
cmp
mov
xchg
push
fcoms
fmull
mov
jb
mov
xchg
add
pop
dec
cmc
cld
bound
mov
loopne
mov
sahf
icebp
jg
mov
mov
jb
mov
add
inc
hlt
and
mov
rcrl
adc
fldcw
pusha
add
mov
add
add
mov
test
lret
aad
out
in
in
xchg
jns
cli
xchg
add
pop
lcall
xchg
xor
dec
fucomp
mov
mov
adc
mov
adc
push
add
rolb
jns
sub
mov
cs
or
add
jg
loopne
mov
xor
push
or
push
add
loope
roll
mov
mov
mov
mov
ds
add
adc
fs
mov
jnp
push
mov
cmpsb
mov
adc
test
mov
sub
add
aaa
inc
add
ja
push
mov
rolb
sub
push
sti
out
test
pusha
add
test
xorl
add
cmp
je
add
cltd
and
jns
je
addr16
push
mov
lret
aaa
add
mov
push
mov
mov
popa
xchg
and
mov
cltd
out
mov
mov
mov
mov
mov
add
mov
mov
clc
pop
ret
popa
push
adc
mov
mov
mov
mov
inc
jp
xor
xor
test
xor
jg
lret
add
jae
lea
mov
sahf
addl
iret
mov
ret
cld
jae
add
fs
adc
mov
stc
sub
jno
add
ret
xchg
cld
fnstcw
mov
cmp
sbbl
pop
pop
xor
lcall
mov
popf
inc
add
rolb
mov
add
aad
cmp
mov
sbb
pop
fucomip
addb
testb
add
ljmp
mov
or
push
test
add
mov
add
jae
cmp
call
sbb
sbb
jno
into
in
sbb
add
add
cld
adc
add
mov
popf
shll
mov
sbb
add
jl
xor
cmp
push
loopne
mov
inc
popa
ljmp
pop
call
ret
sub
lea
addr16
fwait
pop
cmpl
adc
xchg
popf
out
loopne
mov
ret
mov
and
mov
fcmovbe
stos
jmp
fwait
lret
push
cmp
test
leave
jae
out
int
adc
or
add
cmp
sub
mov
addb
xor
mov
loope
jge
cltd
add
sub
jg
jns
or
and
mov
add
stc
sbb
loop
mov
and
xchg
das
add
mov
cmp
fucomip
jnp
fisubl
pop
incb
push
ds
sbb
add
mov
mov
or
neg
pop
in
loop
mov
mov
dec
out
popfw
lods
repnz
jnp
or
lods
lret
outsl
in
pushf
xor
lock
mov
or
icebp
loopne
mov
add
int3
and
mov
insl
mov
xchg
mov
add
rorl
mov
xor
insl
and
mov
frstor
add
inc
push
pop
or
insb
outsl
xchg
xchg
mov
add
adc
mov
sbb
jno,pn
add
adc
add
add
pop
inc
mov
mov
mov
add
dec
test
add
rolb
mov
mov
jle
mov
pushf
fs
insb
sub
mov
add
cmp
mov
pop
clc
bound
mov
shrl
adc
mov
imul
jecxz
mov
mov
lods
test
lock
or
dec
dec
and
mov
mov
add
add
add
jns
push
add
sarl
mov
stos
loop
mov
xor
mov
add
add
push
push
xchg
stos
subl
outsl
ret
jmp
pop
repnz
and
lahf
jge
add
and
mov
test
aaa
pusha
add
add
lcall
mov
jae
lcall
jmp
mov
push
inc
aad
add
mov
arpl
dec
mov
in
add
or
mov
jg
out
mov
inc
and
movsl
or
add
adc
mov
movsl
push
add
add
and
mov
insl
gs
push
add
mov
fwait
inc
add
mov
mov
add
inc
les
sahf
mov
fsubs
add
inc
adc
mov
mov
xor
ss
scas
jns
xchg
addb
es
jmp
fstpt
mov
lods
fwait
in
mov
into
jp
add
insl
xor
and
jle
scas
das
bound
mov
leave
outsl
sub
aam
add
pop
and
mov
jg
adc
add
xorl
jns
or
repz
mov
mov
inc
add
sbb
rcrl
push
inc
jb
mov
and
dec
mov
add
xchg
orl
xor
jo
mov
mov
mov
stos
into
pop
jnp
push
outsb
xor
mov
jnp
dec
popf
dec
push
pusha
add
dec
das
rolb
mov
std
sub
repz
stos
dec
test
mov
outsb
xor
inc
lcall
pop
mov
inc
cmovae
les
mov
and
mov
inc
push
ret
push
jne
int
in
sbb
add
push
es
shl
mov
sbb
xor
add
mov
addb
dec
das
mov
add
pop
push
sahf
sub
mov
addb
sub
inc
aam
add
add
xor
mov
mov
ljmp
dec
lds
mov
xor
cmp
pushf
data16
add
push
rolb
mov
addb
repz
stos
in
out
sub
nop
add
pop
icebp
sbb
mov
mov
mov
daa
mov
movhps
ds
mov
jmp
jbe
jp
inc
add
add
mov
mov
mov
mov
adc
sub
add
mov
add
pop
cmp
push
add
pop
mov
inc
mov
mov
in
dec
cwtl
icebp
stos
inc
xor
dec
pop
xor
test
push
stc
xchg
stos
rolb
add
add
pop
aad
in
add
inc
pop
setp
push
sahf
add
popf
jb
mov
imul
pop
add
dec
sbb
push
inc
add
or
mov
pop
add
mov
push
dec
dec
jbe
in
jle
mov
xor
mov
rcll
mov
add
mov
lcall
movsl
mov
mov
fdivs
loopne
mov
pushf
mov
xor
sub
icebp
mov
mov
mov
or
daa
pop
lahf
lods
jg
ljmp
insb
pop
ja
cmp
fcoms
rolb
scas
jmp
leave
fwait
inc
stos
movsb
mov
adc
add
scas
pop
mov
shll
add
xchg
add
add
test
fucom
jno
inc
add
add
addr16
mov
mov
mov
fs
inc
jo
mov
add
cs
mov
in
pop
or
jo
mov
add
mov
mov
imul
mov
xchg
mov
xor
stos
push
call
mov
cmpsb
inc
add
and
mov
sbb
mov
jbe
push
mov
popa
push
gs
insb
mov
xlat
cmp
mov
int
arpl
add
mov
mov
add
mov
mov
add
les
aas
pushf
sub
pop
enter
pop
icebp
inc
add
divb
dec
inc
add
aaa
jmp
dec
faddl
popf
xchg
add
lcall
pop
mov
ret
fmulp
test
arpl
sar
inc
mov
xor
inc
xor
mov
mov
in
imul
leave
xor
add
jecxz
mov
or
movl
xchg
sbb
cmpsb
fldcw
xchg
xor
mov
mov
dec
aad
jg
addl
cs
push
and
mov
cmc
bound
mov
jb
mov
lret
push
mov
push
stos
add
mov
addr16
icebp
xchg
jb
mov
int
sub
dec
cli
add
ss
sbb
sbb
inc
rcr
xchg
ret
push
cwtl
pop
sub
outsl
xor
dec
inc
mov
mov
in
add
mov
fistl
pop
mov
add
and
arpl
pop
push
ljmp
jno
mov
stc
js
mov
cmc
sbb
in
xlat
loop
mov
inc
sbb
aam
sbb
dec
lock
daa
xlat
imul
addb
inc
add
bound
mov
jg
jno
xorl
add
mov
push
mov
imul
xor
mov
pop
push
aad
jl
fildll
imul
and
scas
inc
daa
fsubr
push
lret
jo
mov
out
xchg
push
mov
mov
popa
leave
loop
mov
add
lods
cmpsl
jno
push
mov
in
je
cmp
sarl
int3
mov
mov
add
shll
sti
add
add
mov
rolb
mov
gs
add
push
lahf
mov
pop
mov
out
int
and
mov
gs
mov
jne
jae
scas
out
and
mov
rolb
or
xor
xor
pop
mov
int3
in
ficoml
mov
add
sub
fisubl
shll
inc
mov
je
dec
xor
in
divb
lcall
lock
add
in
int3
inc
cwtl
pop
xchg
ficomps
aas
shll
pop
out
dec
inc
inc
sti
xor
mov
add
add
add
cld
inc
fimuls
xchg
adc
or
xchg
or
out
xchg
pop
rol
mov
fnstenv
rolb
mov
pop
cmp
in
add
add
incl
in
sbb
setge
into
test
sbb
das
insb
cmp
cmp
daa
push
sbb
mov
add
stc
add
dec
mov
mov
pop
mov
mov
add
add
fdivrs
add
int
iret
neg
push
push
jg
add
mov
and
negb
gs
xorl
mov
in
gs
mov
mov
popf
xchg
pop
or
into
inc
sbb
je
add
add
add
mov
loopne
mov
out
sub
mov
gs
pop
lcall
mov
and
add
inc
add
dec
rcll
insl
push
ret
and
mov
stc
scas
push
add
mov
sbb
popf
fucomi
lahf
sub
das
sub
cmc
je
shrl
ds
add
fsubs
add
mov
movsl
mov
push
pop
popf
cmp
add
gs
imul
add
cmpsl
lea
stos
sti
pop
fs
testl
xor
mov
lods
jp
adc
xor
mov
add
jl
lahf
incb
mov
push
add
add
out
scas
rolb
mov
jb
mov
fsincos
in
or
jmp
push
push
nop
add
push
and
jge
enter
mov
jae
or
inc
aaa
jbe
lss
mov
add
mov
add
leave
xchg
inc
and
pusha
add
je
adc
mov
xlat
xchg
xchg
arpl
xchg
icebp
sbb
jl
push
push
cmp
sti
mov
xchg
add
adc
vphaddbd
mov
mov
dec
aad
fstps
xor
adc
mov
mov
add
mov
pop
enter
inc
hlt
insb
ss
inc
mov
mov
mov
fmull
xchg
add
jo
mov
pop
dec
add
push
pop
imul
mov
mov
add
add
addr16
addb
or
std
jns
sahf
xor
icebp
imul
mov
mov
add
mov
mov
mov
mov
not
fiadds
jae
jge
add
mov
mov
insl
push
dec
adc
mov
mov
mov
fnstcw
nopl
mov
test
mov
scas
ret
mov
xor
in
inc
lahf
inc
mov
lock
push
stos
ss
mov
add
adc
sub
add
ss
xor
mov
in
or
mov
mov
out
push
add
test
fisubs
mov
daa
outsl
push
add
xor
and
int3
inc
add
mov
add
add
adc
mov
add
sbb
fiaddl
sti
fs
and
scas
out
push
add
add
addr16
cmp
repz
mov
das
add
mov
and
mov
add
subl
mov
sbb
rol
dec
pop
cmp
addr16
jecxz
add
aad
dec
icebp
imul
icebp
and
mov
mov
cwtl
push
and
mov
movsl
scas
sti
jp
add
adc
mov
inc
add
into
cltd
sub
daa
lahf
or
sahf
mov
dec
fwait
jb
mov
add
add
fstl
movsl
je
arpl
pushl
and
mov
mov
push
add
add
aam
sbb
xor
mov
rolb
popa
xor
mov
inc
je
stos
bound
mov
stos
ljmp
pop
aas
pop
mov
xchg
jl
push
dec
mov
mov
test
add
cmp
pop
rorl
lea
es
enter
push
popa
pusha
add
iret
cs
call
add
cmpsl
loope
add
lret
add
add
cld
add
mov
paddusb
and
mov
mov
rolb
or
popa
inc
jl
pop
xchg
les
pop
jb
mov
andl
inc
add
dec
and
push
jne
data16
mov
icebp
pop
jo
mov
add
mov
es
shrl
cmp
jnp
jp
jae
mov
cmpsl
xchg
add
add
dec
dec
test
mov
xor
loopne
mov
adc
hlt
vphaddubd
mov
jp
decl
int3
addr16
inc
add
int
inc
add
xchg
mov
loop
mov
pop
inc
add
add
add
xchg
mov
mov
loopne
mov
movsb
sbb
dec
or
xor
mov
add
ds
fldcw
add
xor
mov
push
add
pop
loope
push
test
mov
mov
fisubrs
out
mov
shll
flds
mov
mov
ss
and
mov
add
fcoms
mov
rolb
mov
jno
pop
pushf
outsl
mov
mov
mov
xchg
mov
sbb
xchg
and
mov
int3
sub
fmul
mov
or
mov
faddl
sub
pusha
add
add
mov
add
jb
mov
mov
mov
andl
imul
add
push
pop
das
jnp
add
mov
mov
clc
mov
pop
imul
shll
and
mov
mov
mov
mov
mov
mov
adc
cmp
jns
add
xor
or
sbb
mov
add
mov
push
add
lret
popa
push
mov
mov
and
mov
bound
mov
fucomp
out
inc
and
add
inc
add
adc
mov
and
mov
jns
xchg
pop
in
test
and
out
jno
sub
ds
xchg
popa
jae
or
imul
dec
or
mov
rcll
xchg
mov
xchg
add
push
imul
add
mov
sti
hlt
daa
addb
adc
mov
mov
mov
mov
popf
cmpsl
jle
test
inc
addb
call
adc
mov
dec
std
jmp
push
add
mov
sar
int
jmp
add
mov
mov
imul
lahf
xchg
cli
ljmp
push
ret
mov
mov
sub
jg
in
xor
mov
add
rolb
stos
pop
lahf
rolb
push
adc
ljmp
cs
mov
push
mov
pop
into
sbbl
add
call
inc
test
xchg
movsb
int3
jecxz
inc
xlat
pusha
add
popf
cmp
mov
cmp
aaa
mov
insl
cmp
dec
pop
loop
mov
mov
xorl
aam
and
mov
mov
int3
repz
popf
push
mov
dec
sub
insl
enter
mov
xchg
cmpsb
inc
pop
adc
mov
pushf
cwtl
negb
jecxz
stos
flds
mov
outsl
aad
lock
cmp
add
cwtl
inc
mov
mov
push
add
dec
adc
mov
mov
mov
mov
add
iret
push
push
not
add
notb
mov
cld
jp
cld
mov
and
stc
sbb
negl
in
fisttpl
mov
mov
repnz
mov
add
jl
sub
jo
mov
mov
add
add
mov
add
out
call
out
lahf
or
lods
leave
jecxz
into
xchg
pop
outsl
fwait
inc
add
aas
enter
sahf
sub
xchg
fwait
lret
sub
jl
add
call
add
insb
or
mov
aaa
aas
out
mov
or
add
das
in
stos
add
fidivrl
pop
dec
dec
fs
je
test
push
xchg
or
add
in
loopne
mov
pop
fwait
les
xlat
add
lods
xchg
push
fucomi
jg
xchg
add
fstps
pop
jo
mov
inc
ficompl
dec
inc
cmpsb
lods
inc
add
add
mov
addr16
stos
cmp
add
lret
mov
mov
xor
pop
mov
add
push
mov
mov
mov
add
in
mov
or
add
mov
push
in
cltd
or
ficomps
rorl
dec
cmpl
mov
in
dec
adc
mov
cwtl
inc
add
sbb
mov
mov
xor
xlat
xchg
mov
inc
pop
cmp
js
mov
mov
mov
adc
mov
outsl
lret
ror
js
mov
das
pop
mov
es
add
scas
cld
mov
add
mov
stc
dec
add
aam
into
cmp
add
aaa
xchg
mov
cld
into
mov
cli
adc
add
andl
arpl
aas
xchg
cmpsl
stos
dec
daa
cmpsb
add
add
into
and
add
sbb
das
lcall
outsl
fldl
and
or
scas
fs
sti
int
fwait
rcl
add
rolb
mov
cmp
push
cli
scas
fisubs
push
mov
add
add
sbb
sbb
mov
jo
mov
mov
adc
mov
out
or
vmptrld
iret
pushf
ljmp
dec
jns
sbb
insb
xchg
add
add
addr16
mov
inc
out
or
cltd
sbb
fisubl
mov
push
mov
mov
sub
push
inc
push
call
mov
jbe
push
push
rolb
mov
push
push
sub
mov
add
sarl
orl
dec
jle
outsb
and
dec
stos
shrl
push
add
gs
add
mov
cmp
push
sub
adc
pop
scas
les
mov
mov
pop
xor
lock
test
and
mov
add
add
mov
sub
add
int
jae
add
clc
mov
mov
lahf
and
jne
xchg
ja
xchg
cmp
cmovbe
in
add
add
push
add
addb
lods
or
xor
mov
add
addr16
aaa
outsl
pop
scas
jl
push
jle
aaa
addl
add
les
scas
lds
adc
xchg
int
add
adc
mov
f2xm1
add
or
out
popa
rolb
mov
lds
add
mov
movsb
mov
lock
xor
add
mov
int3
push
sub
pushf
or
sti
jnp
add
add
lds
jns
mov
and
add
adc
mov
pop
lds
int
push
add
inc
and
mov
xor
fnsetpm(287
mov
mov
and
mov
add
out
lock
mov
xchg
add
jle
push
icebp
dec
jmp
pop
adc
mov
adc
std
mov
jbe
and
mov
dec
pushf
or
push
sub
push
pusha
add
sub
test
adc
inc
add
sti
mov
out
mov
popa
push
or
cmc
mov
cmp
daa
fcmovnu
cwtl
jno
jl
xchg
loop
mov
lret
adc
add
mov
sbb
xor
mov
mov
dec
psubsb
xchg
inc
add
cld
iret
dec
testb
push
cmpsb
fisttpl
xor
or
add
sbb
jecxz
in
sbb
add
sbb
and
test
cs
loopne
mov
or
int
push
dec
mov
sti
popa
test
shll
jge
jbe
pop
jae
test
cld
jecxz
pushl
xchg
add
jae
jae
outsl
or
add
cmp
insb
fmuls
add
mov
mov
es
add
add
dec
pop
data16
stc
int
pop
ds
mov
sbb
and
add
add
jle
add
add
lods
pop
or
insb
mov
jge
xchg
push
loope
add
stc
inc
add
or
xor
mov
sahf
ret
push
mov
dec
jb
mov
dec
int3
mov
dec
mov
adc
cmc
lock
mov
xchg
xor
and
mov
add
mov
mov
movsb
cld
je
aaa
push
in
clc
mov
std
inc
inc
fnstsw
add
jecxz
stc
sbb
stos
gs
div
dec
daa
xchg
pop
and
and
add
push
add
xchg
mov
mov
mov
pop
push
adc
leave
shrl
arpl
scas
movsl
lea
mov
shrl
pop
test
mov
icebp
mov
es
jge
cmp
out
cmp
out
jp
vxorps
sti
cli
add
mov
mov
jmp
imulb
mov
lock
pop
sub
mov
inc
add
xchg
cmp
into
pop
sbb
pop
shl
orl
add
mov
dec
mulb
das
xor
mov
or
sub
add
add
imul
mov
adc
mov
xchg
lret
fcomi
push
add
sbb
dec
jns
add
add
inc
add
add
aaa
sub
mov
shll
push
add
add
mov
add
add
out
pop
pop
fucomp
testb
jmp
leave
adc
mov
popa
or
insl
rcll
cmp
pop
xor
mov
out
jne
push
and
pop
jae
pop
jmp
add
xor
lret
mov
add
stc
in
test
fcoml
fs
dec
mov
mov
push
mov
mov
inc
cmc
in
scas
out
rolw
test
add
cltd
adc
fs
gs
addb
mov
dec
call
add
test
fdivrs
mov
cmp
mov
add
enter
idivb
add
mov
mov
jae
add
add
push
int
addb
stos
fisubl
add
jae
push
inc
inc
icebp
aam
pop
jl
pop
mov
push
mov
push
sbb
cmp
mov
push
push
in
push
jb
mov
das
aaa
loopne
mov
add
mov
mov
or
out
adc
mov
ret
je
add
mov
imul
add
mov
add
sub
icebp
andl
cld
gs
rolb
mov
cmp
sbb
add
mov
and
cmpsl
add
dec
mov
cmpsb
lock
jl
and
loope
ret
mov
add
xchg
orl
cmc
push
add
push
aaa
xor
repz
push
sub
mov
cmp
add
add
inc
add
mov
sub
fcompl
ljmp
repnz
xor
out
jne
mov
jnp
les
or
rolb
mov
dec
faddl
inc
xchg
mov
jle
add
out
xchg
inc
or
add
cmp
add
pop
into
loope
scas
push
es
mov
jne
mov
clc
cltd
sbb
inc
cmp
inc
adc
mov
pop
shrl
call
out
pop
es
xor
test
add
mov
adc
ja
push
xchg
lret
sbb
mov
add
das
fistl
nop
add
stos
mov
out
into
lods
out
hlt
jp
inc
add
mov
mov
add
add
mov
cli
in
inc
add
sbb
add
fsts
add
mov
add
int3
loopne
mov
scas
xlat
addb
fnsave
mov
jns
add
mov
lahf
inc
enter
add
add
push
add
cmc
rolb
mov
xor
rolb
mov
dec
ljmp
inc
and
js
adc
mov
ficompl
jmpw
jns
in
ret
nop
add
pusha
add
ljmp
loope
jae
sbb
add
ss
fxch
dec
js
andl
xor
add
add
mov
mov
js
imul
fcmovu
loop
mov
xor
push
inc
add
mov
jmp
ljmp
inc
pop
or
mov
jnp
jnp
flds
xchg
push
mov
lods
pop
inc
push
flds
mov
jl
cmp
stos
je
mov
jne
mov
adc
mov
lods
jbe
out
rolb
mov
add
loopne
mov
and
mov
sub
add
rolb
imul
add
mov
mov
mov
add
mov
xchg
push
add
cwtl
pop
push
add
mov
inc
stos
inc
add
add
movsb
sbb
orl
add
cwtl
mov
mov
dec
lret
cmc
data16
mov
jl
and
mov
push
enter
or
pop
mov
xor
add
inc
test
jno
add
stos
jo
mov
aaa
repnz
jmp
in
fs
ss
sub
dec
add
xchg
mov
rcll
jp
lcall
push
dec
mov
mov
jae
add
nop
add
mov
xor
stc
mov
lahf
add
dec
push
lods
rolb
mov
mov
cmp
mov
push
out
sahf
insb
pop
cs
std
mov
mov
pop
outsl
fadds
dec
sub
mov
bound
mov
js
dec
pop
sub
jae
mov
mov
mov
add
mov
in
jnp
mov
add
loope
jae
add
rolb
mov
xor
mov
test
fistps
dec
mov
mov
pushl
mov
imul
ficoms
loop
mov
sub
cltd
aaa
mov
add
stos
xchg
add
or
inc
add
lock
mov
test
lea
lods
add
and
mov
add
fisubs
mov
loope
mov
add
cmp
or
cmp
add
aam
push
loopne
mov
add
sub
xchg
loop
mov
cmp
ja
push
mov
or
push
jo
mov
fcoml
add
add
and
hlt
cmp
fsub
cld
gs
mov
sbb
loope
mov
add
add
insb
cwtl
inc
mov
adc
mov
pop
add
add
rolb
mov
out
loop
mov
mov
std
xchg
add
mov
lods
mov
adc
cs
ret
lret
sti
aaa
push
cmpsb
pushf
add
fsubl
je
imul
mov
add
add
mov
jg
lods
adc
insb
inc
fsubr
jb
mov
lods
jae
sbb
dec
stos
inc
add
out
add
lods
test
bound
mov
ja
add
into
add
inc
add
mov
sbb
mov
mov
mov
nop
add
pop
gs
xchg
lock
cmpl
add
daa
insl
mov
ljmp
jle
add
cmpsb
xlat
outsb
xor
add
mov
pushf
mov
add
lods
adc
shrl
lahf
imul
and
mov
push
jmp
sti
jnp
mov
mov
add
dec
xchg
xchg
add
mov
mov
add
sub
mov
sbb
jle
push
add
add
mov
stc
push
or
sbb
pop
js
cmp
fs
sub
cmp
cltd
xchg
arpl
ret
adc
pop
stos
aaa
add
mov
xchg
and
mov
mov
ss
fistps
add
mov
add
into
pop
jmp
mov
mov
mov
jge
mov
dec
lret
add
mov
jno
add
ljmp
adc
jge
add
loopne
mov
push
test
sub
test
les
dec
out
push
or
jmp
xchg
stos
rolb
fistpl
jbe
push
into
stc
sub
jge
adc
mov
iret
std
push
push
out
cltd
add
mov
enter
xor
fisubrl
add
add
pop
insb
popf
mov
mov
xchg
ss
xor
mov
stc
pop
cmp
cmc
adc
mov
add
jecxz
fcmovb
add
mov
mov
mov
mov
push
jbe
frstor
xchg
push
inc
mov
es
popf
push
scas
addl
mov
stos
adc
jge
xchg
xchg
add
lods
ret
sahf
jecxz
lahf
push
add
adc
and
mov
sbb
adc
jns
add
push
pop
popa
roll
fdivs
jp
add
inc
add
pusha
add
dec
mov
movsb
cmc
sti
mov
cmpsl
into
sub
add
add
addb
outsl
test
add
inc
add
imul
out
insb
bound
mov
mov
mov
lods
push
cmpsl
in
add
jp
add
sbb
fucomip
mov
mov
and
mull
addb
cmpsb
jmp
add
hlt
lock
fsts
add
and
mov
xor
mov
clc
push
fdivrp
pop
dec
es
loopne
mov
int
popf
mov
mov
rcrl
popf
mov
mov
mov
hlt
cmp
add
push
and
jp
lea
enter
pop
jl
mov
out
add
mov
xor
mov
loop
mov
lods
pusha
add
mov
mov
imul
cmp
pop
imul
pushf
aam
hlt
mov
jns
jp
cmp
mov
mov
and
ret
mov
sub
sbb
xchg
out
xchg
push
add
scas
aam
inc
pop
negl
mov
mov
adcl
add
mov
addr16
lods
sbb
aas
mov
inc
jo
mov
push
pop
outsl
popf
in
jle
adc
mov
add
dec
push
fs
scas
mov
mov
repnz
gs
adc
or
sub
add
add
jnp
add
push
mov
mov
mov
jns
mov
int
fdivrs
testl
iret
cmp
fdivrl
add
push
shrl
hlt
or
inc
add
sbb
dec
push
fwait
jmp
mov
adc
mov
add
sub
xor
fdivp
loop
mov
mov
divl
jbe
sbb
dec
xor
dec
and
inc
test
mov
push
add
and
cmpsl
test
jmp
jle
and
cmp
mov
cld
xor
xchg
mov
sub
add
jb
mov
out
adc
xchg
rcr
mov
fldcw
sub
mov
js
add
mov
lock
adc
mov
aad
inc
add
and
mov
int
add
data16
mov
cmpsb
das
insl
mov
test
jns
rolb
popf
adc
mov
imul
add
sti
aam
lcall
pop
mov
addb
out
xor
rorl
lret
repnz
pusha
add
cmpsl
or
mov
push
into
movb
mov
cmpsb
mov
add
movl
fdivs
cs
and
loopne
mov
lret
add
mov
sahf
repz
hlt
pop
inc
mov
mov
pop
pop
cltd
stos
sub
pop
pusha
add
add
aam
pop
aas
and
cmp
data16
aaa
xchg
or
popa
pop
dec
cmp
pop
mov
xor
mov
inc
mov
jo
mov
imul
dec
outsl
mov
pop
pop
jl
xor
mov
cmp
add
imul
mov
fists
add
jno
cmp
cmp
xchg
ds
fldenv
je
add
mov
mov
sbb
cltd
push
cs
out
pause
add
and
mov
cmp
or
loop
mov
add
inc
push
and
mov
cltd
mov
mov
mov
inc
mov
out
cmc
loope
popa
xchg
neg
sbb
pop
pop
mov
setl
rolb
mov
or
fwait
sub
or
mov
sbb
jne
movsb
das
xchg
add
pop
xchg
pop
and
mov
sub
xor
mov
mov
adc
mov
mov
push
ds
fbstp
push
daa
cli
xor
sbb
js
lret
pop
push
psrlw
scas
es
push
dec
cmp
addr16
lea
into
jb
mov
pop
insl
repnz
stc
jecxz
clc
jno
insl
daa
xchg
xchg
or
outsl
repnz
mov
mov
jae
add
into
xchg
in
dec
jno
fcomps
add
inc
mov
pop
ss
rcrl
push
test
mov
fildl
addb
outsl
sbb
icebp
lock
ficomps
ja
sub
xor
mov
add
mov
mov
test
lahf
cmp
and
add
dec
inc
add
add
xchg
test
mov
or
mov
xor
sub
mov
sbb
daa
pop
mov
mov
ret
cmp
gs
mov
mov
mov
push
fstps
mov
add
push
cltd
in
stc
into
sub
dec
repz
daa
or
mov
std
sub
and
push
loopne
mov
sub
push
push
mov
add
mov
sbb
lret
daa
dec
mov
fdivrl
jmp
rolb
mov
mov
sti
ja
adc
mov
push
stc
mov
mov
push
cmpsl
adc
sub
mov
xor
mov
int3
jo
mov
ljmp
add
mov
out
dec
lret
sub
cmpsl
jge
lock
arpl
xor
mov
jecxz
jb
mov
hlt
xchg
aas
mov
dec
out
dec
sbb
add
call
in
mov
div
test
add
stos
icebp
mov
sti
rolb
mov
add
lret
push
mov
stos
mov
xchg
lcallw
and
int3
dec
test
dec
cs
jmp
lods
dec
bound
mov
imul
add
mov
cmp
addb
movsb
sbb
mov
out
and
mov
aas
rolb
pop
jmp
cltd
jl
icebp
or
repz
add
add
mov
add
lea
jb
mov
add
mov
int
mov
sub
fs
mov
lcall
add
cmc
ret
adc
add
add
mov
mov
std
jp
add
dec
out
les
sub
xchg
add
xchg
in
cld
pop
nop
add
sbb
add
push
mov
mov
nop
add
mov
add
mov
add
mov
add
inc
xor
xchg
add
cmc
mov
mov
out
icebp
lret
mov
fcompl
add
inc
add
dec
or
mov
push
cli
sbb
in
addb
inc
add
iret
daa
shll
jne
inc
xor
mov
rolb
fidivs
add
push
scas
bt
gs
dec
mov
add
mov
cmpsb
adc
mov
insb
push
cli
or
add
add
xor
rolb
pop
ret
gs
adc
jo
mov
xor
mov
and
mov
dec
out
inc
add
jg
nop
add
fidivl
cmp
add
adc
xor
mov
mov
mov
cltd
add
mov
aam
jns
cmp
dec
or
ficoms
nop
add
mov
scas
or
imul
add
sub
add
add
inc
shll
sbb
mov
adc
inc
test
out
ss
cli
pop
inc
hlt
mov
add
fs
mov
sbb
jmp
ret
addb
in
cmp
call
add
stos
jp
add
lea
mov
ljmp
jnp
int3
es
jb
mov
int
add
sar
fmulp
jg
add
bound
mov
int3
cmpsl
insl
repz
ds
add
mov
sub
xchg
mov
lret
aaa
cli
call
sbb
push
push
addr16
add
mov
insb
xor
mov
dec
pop
repz
ljmp
fstpt
mov
add
mov
push
add
shll
xchg
add
xlat
fxch
out
into
xlat
fmull
mov
scas
lds
dec
fwait
sub
add
push
loop
mov
mov
mov
xor
call
sbb
mov
mov
int3
xor
ljmp
fwait
int3
fs
jle
inc
mov
loope
inc
pushf
cmp
push
add
cmp
mov
push
add
rolb
sbb
and
add
add
push
add
rcll
sahf
lsl
aaa
fisubs
les
notl
sti
out
loop
mov
jl
adc
mov
add
mov
jb
mov
add
push
scas
addb
ja
cmpsb
jno
fsubr
ljmp
loope
cmp
pop
pop
rolb
mov
adc
mov
jnp
push
mov
jbe
add
xchg
rolb
mov
add
mov
ds
test
push
aam
mov
je
dec
cmp
or
and
mov
ds
mov
add
add
mov
mov
or
mov
dec
negl
cwtl
jmp
inc
add
push
rsqrtss
mov
add
jne
movsb
push
add
mov
add
rcrl
fcmovnbe
adc
and
mov
push
add
add
add
es
inc
outsl
and
jns
sti
push
add
lret
test
mov
mov
mov
adc
mov
add
aam
jp
addb
jmp
add
or
daa
sahf
xor
mov
add
mov
gs
mov
loopne
mov
mov
loopne
mov
add
mov
sti
nop
add
adc
mov
adc
mov
outsb
jp
xor
shll
pop
std
lods
enter
push
xchg
cmp
inc
or
movl
pop
rolb
sti
xchg
aad
dec
add
push
sub
add
mov
cltd
xchg
test
adc
mov
jle
jmp
pop
xchg
xor
in
inc
out
pop
hlt
pop
rolb
mov
ja
int
dec
pop
add
mov
rolb
mov
and
shrl
loop
mov
cs
addb
and
stos
mov
outsl
push
mov
xchg
loope
pop
or
jge
mov
sub
mov
lock
or
into
and
add
sbbl
movsb
dec
add
mov
mov
je
test
adc
adc
les
mov
sub
pop
imul
into
out
add
jle
adc
xchg
sbb
jge
adc
mov
push
jae
fsubs
push
jbe
add
xchg
xor
mov
cmp
xchg
mov
dec
dec
cmc
xchg
sbb
in
faddl
pop
jb
mov
sub
iret
out
pop
lds
mov
add
mov
sub
xchg
jne
int
cmc
mov
add
dec
stos
adc
and
cmp
jmp
pop
sbb
add
icebp
pminub
imull
enter
add
loopne
mov
jmp
pop
pusha
add
add
les
add
mov
lods
cmpsb
mov
and
inc
add
cmp
add
jae
mov
pop
cmpsl
insb
daa
movsb
ss
add
lret
mov
push
imul
mov
inc
xor
mov
jae
cmp
jl
in
mov
cmp
mov
pop
sub
int3
loopne
mov
test
mov
add
or
push
ds
push
add
mov
add
jle
mov
xor
mov
jbe
sub
mov
add
out
add
mov
ret
popa
inc
add
fdiv
push
push
dec
inc
stos
jg
rolb
repz
pop
dec
add
mov
clc
les
mov
rolb
mov
outsl
and
push
sbb
xchg
lods
add
add
push
loopne
mov
add
jno
add
mov
push
push
add
leave
lods
fsubs
fimull
jb
mov
loope
add
clc
or
xchg
addb
and
add
mov
add
mov
aad
hlt
jbe
add
mov
jne
fsubrs
test
dec
int
cmp
jo
mov
jp
mov
push
popf
popa
xchg
and
xchg
add
sbb
rolb
iret
mov
add
dec
repz
movsl
jne
jmp
jb
mov
pop
dec
jno
xor
mov
add
rolb
mov
cmpsb
mov
dec
dec
mov
add
sbb
pusha
add
lds
std
adc
mov
in
mov
add
pmaxsw
cwtl
or
mov
test
daa
pop
mov
adc
mov
cltd
xlat
addb
dec
add
mov
add
in
addb
sbb
xlat
lahf
insb
or
or
sbb
clc
aad
add
xchg
add
and
scas
pop
pop
loop
mov
sbb
mov
cmp
bound
mov
je
jae
xor
mov
movsb
sbb
cs
stc
jb
mov
mov
mov
iret
sub
add
mov
mov
mov
testb
mov
or
incl
rcrl
jnp
add
jne
jge
pop
test
cmp
mov
stos
pop
xor
inc
mov
aas
popa
inc
imul
adc
mov
add
push
rolb
mov
push
pop
push
test
jno
test
inc
add
mov
mov
mov
ffreep
add
xor
mov
fistpl
xchg
mov
rolb
mov
jp
aas
push
test
sbb
and
negl
sbb
int3
int
ljmp
and
test
jb
mov
in
add
mov
jno
adc
mov
push
add
add
dec
add
mov
test
jno
add
and
lret
mov
mov
pop
mov
into
mov
in
or
add
je
jnp
rolb
mov
mov
mov
adc
mov
fistps
icebp
stos
and
iret
cmp
pop
lods
and
mov
add
mov
jnp
mov
bound
mov
mov
jne
jnp
std
fwait
and
mov
mov
dec
cmpsb
mov
mov
sub
sbb
mov
mov
ljmp
xchg
jg
or
shrl
mov
dec
les
dec
std
mov
shrl
add
mov
or
mov
add
shll
pop
aas
mov
mov
mov
add
jecxz
mov
out
out
gs
enter
push
ja
dec
mov
mov
pop
mov
and
inc
bound
mov
cmpsl
xchg
cld
push
jo
mov
into
cmp
jl
jae
push
push
add
popf
mov
mov
mov
addb
fmull
add
inc
mov
sub
stos
mov
push
mov
mov
ret
iret
pop
pushl
jge
add
mov
imul
add
add
mov
add
into
loop
mov
testb
ljmp
cwtl
das
inc
add
mov
in
insl
sub
fsubrl
pop
out
pop
jae
dec
add
loopne
mov
nopl
adc
mov
in
call
stos
cmpsb
and
sub
push
xchg
cmp
push
add
mov
pop
leave
add
add
mov
ss
jne
mov
jne
xchg
lds
pop
dec
mov
xchg
mov
mov
ja
adc
addb
mov
data16
mov
inc
and
mov
xchg
ret
push
cmp
mov
add
imul
cs
int
mov
add
mov
pop
cmpsb
clc
in
sub
pop
push
inc
xor
mov
movsl
push
push
pop
pop
pop
jae
jmp
mov
fisttpl
stos
test
adc
mov
bound
mov
jo
mov
mov
or
xor
mov
push
add
jnp
sbb
jo
mov
push
lods
mov
btr
pop
and
mov
aad
jne
add
lods
jmp
jno
adc
sub
repnz
mov
enter
xchg
dec
jo
mov
adc
stos
mov
fmul
cmpsl
sbb
add
xchg
mov
inc
es
mov
pop
dec
xor
mov
mov
add
inc
add
mov
sub
add
mov
cmp
cmp
jg
xor
add
in
or
push
pop
mov
push
dec
dec
cld
lahf
lcall
outsb
pop
cwtl
pop
sbb
enter
sbb
push
add
mov
mov
mov
rolb
pop
pop
and
mov
add
add
mov
add
in
stos
adc
mov
dec
pop
jle
push
repz
mov
xchg
add
mov
add
add
mov
jno
pop
xor
mov
lods
jmp
aad
lods
xchg
add
mov
cmp
add
jecxz
dec
sbb
rolb
xor
mov
sbb
leave
mov
add
mov
mov
cmp
add
add
mov
and
mov
movsb
cs
xchg
add
arpl
add
dec
xlat
adc
fwait
jmp
jle
icebp
inc
cld
fldz
fcmovne
imul
add
imul
sub
dec
add
mov
fcmovnu
sahf
pop
mov
pop
dec
das
pop
and
mov
sub
pop
jg
mov
mov
sbb
push
das
push
out
in
int
add
into
rolb
arpl
mov
call
std
filds
les
scas
lahf
add
jl
int3
imul
arpl
aas
inc
pop
cmp
rolb
btc
sahf
das
cli
lahf
icebp
hlt
leave
and
push
mov
les
sub
add
mov
mov
adc
sti
add
out
add
out
sahf
loope
push
add
add
mov
cmp
insb
sbb
rcl
inc
dec
jmp
add
mov
mov
fcmovnu
pop
dec
arpl
sahf
jo
mov
sbb
jns
add
fnsave
add
aaa
push
add
ret
dec
mov
and
mov
cltd
call
jge
add
jnp
xchg
add
and
mov
dec
fs
in
dec
cmpsl
sub
pop
sub
clc
sub
incl
cmp
adc
mov
lods
mov
add
aam
lcall
into
sbb
lret
addb
dec
pop
xor
mov
orl
mov
mov
add
fmuls
mov
sub
jno
cmc
stos
movsl
adc
fisttpll
addb
cmp
fistps
faddl
push
daa
repnz
lods
aas
sub
outsb
cltd
inc
inc
mov
mov
mov
ret
jo
mov
lds
adc
mov
mov
fs
cs
mov
xchg
add
mov
jo
mov
add
mov
add
or
mov
mov
sahf
stc
sub
pop
and
lds
mov
jns
ss
scas
or
jo
mov
and
mov
and
inc
iret
js
andl
mov
out
add
insb
std
movd
pushf
sub
dec
adc
dec
cmp
sbb
popa
xchg
jmp
jns
cltd
loope
xchg
or
mov
add
mov
mov
jecxz
inc
loopne
mov
or
mov
mov
add
mov
or
nop
add
mov
sub
out
imull
jge,pt
jbe
repnz
sub
ss
jo
mov
push
add
jle
jno
inc
rolb
mov
jae
add
and
jns
jecxz
xlat
fidivs
mov
inc
dec
inc
xor
in
fsubrl
mov
ret
push
add
lock
mov
mov
mov
mov
das
lret
inc
rolb
mov
cmpsl
push
add
into
sbb
lock
add
mov
add
mov
int3
test
push
cmpsb
fiadds
jle
jge
mov
pop
movsl
test
sbb
rolb
mov
pusha
add
lea
lahf
imul
add
mov
aam
lret
test
mov
jge
in
xchg
inc
add
aaa
or
mov
jbe
scas
ja
jnp
leave
ss
lods
int3
repnz
lea
dec
dec
in
mov
add
add
xor
mov
xor
icebp
sub
adc
aam
inc
cwtl
loop
mov
add
movsb
pop
popa
and
or
pop
mov
jne
lea
imul
mov
rolb
inc
call
xchg
jne
and
mov
add
ds
and
or
mov
mov
mov
inc
push
add
mov
push
sbb
pop
test
cld
dec
shll
sub
je
add
jo
mov
mov
push
mov
adc
sbb
add
imul
mov
add
push
push
push
in
xchg
sarw
aam
scas
ror
pop
ret
mov
and
add
add
inc
xchg
pushf
push
fucomp
jle
add
add
fwait
into
adc
mov
and
aad
ret
and
fcmove
lret
cmp
mov
fbstp
fwait
mov
stc
mov
add
les
pushf
sbb
sub
mov
adc
lods
sbb
into
and
mov
mov
add
mov
xchg
add
inc
add
addb
iret
out
in
out
push
aad
mov
and
adc
xor
mov
push
nop
add
cmp
iret
nop
add
dec
jne
fs
add
popa
fwait
out
or
push
sbb
pop
jb
mov
out
inc
add
mov
jmp
inc
mov
sub
stos
pushf
xchg
loope
sbb
add
jp
and
clc
xor
cltd
pop
icebp
jno
and
sub
mov
dec
jnp
mov
jle
push
add
decb
add
mov
into
push
cmp
loop
mov
cmpsb
jbe
add
push
xchg
adc
sub
mov
scas
lods
adc
mov
mov
repnz
jnp
pop
mov
pop
sub
out
jb
mov
mov
aam
dec
mov
adc
and
xlat
jmp
inc
push
js
jle
mov
cmpsb
aam
mov
add
ret
fnstcw
fistpll
add
pop
mov
xchg
das
call
cmp
lods
mov
pushf
fidivs
mov
mov
sub
bound
mov
roll
add
mov
out
mov
add
pop
scas
sub
push
xor
mov
les
mov
add
into
fmull
pop
xchg
cmpsb
push
mov
xchg
xchg
inc
add
adc
sub
pop
or
push
and
jne
mov
test
mov
xchg
add
ja
out
xor
mov
push
add
push
add
jmp
imul
movl
je
fildll
rolb
mov
add
push
test
lahf
mov
mov
mov
cmpsl
mov
mov
xchg
xchg
add
ret
pop
out
dec
jnp
add
imul
add
mov
aaa
in
cmp
dec
mov
mov
xchg
add
inc
dec
pusha
add
adc
mov
inc
add
mov
test
jo
mov
pop
cmpsb
les
cmp
xchg
dec
cmp
es
mov
fldl
mov
mov
adc
inc
xlat
ret
or
add
add
jae
sbb
mov
loope
bound
mov
dec
movsl
xchg
push
sbbl
rolb
mov
jnp
add
lret
stc
push
xchg
push
sbb
add
and
mov
dec
cmp
mov
sub
add
mov
insl
or
mov
pop
outsb
iret
adc
repz
les
pop
nop
add
mov
mov
add
add
add
mov
repz
or
adc
add
sbb
add
popw
ficoml
mov
scas
jg
mov
test
mov
out
fwait
pop
lcall
sub
jmp
add
dec
sub
add
mov
add
stos
rolb
mov
cmp
mov
addb
push
movsl
cmp
dec
mov
or
mov
out
js
xchg
mov
in
push
sti
adc
fcomps
test
add
mov
cli
add
loopne
mov
ja
pop
push
hlt
scas
push
fildl
add
xchg
ficoml
dec
rcr
mov
frstor
add
pop
pop
icebp
hlt
loope
inc
add
add
add
mov
xor
xor
adc
filds
out
mov
xor
mov
pop
push
mov
xchg
jbe
dec
add
test
ljmp
inc
add
rcll
imul
test
mov
in
adc
add
rolb
mov
cmp
push
sbb
xchg
push
movsl
cwtl
jg
jbe
cwtl
push
pop
mov
push
add
data16
cmpsl
frstor
cmp
rcl
mov
add
loope
push
loopne
mov
jmp
repnz
mov
xor
mov
cmpsl
pop
lret
add
mov
repnz
adc
mov
mov
add
add
inc
ss
sahf
fistpl
mov
sub
mov
sbb
rolb
mov
sub
movsb
inc
and
cmp
add
or
mov
xor
sub
sahf
rcrl
sub
ret
mov
mov
sti
fcoml
inc
in
mov
add
sub
inc
push
das
xor
mov
mov
lret
pop
ljmp
mov
add
test
sbb
mov
leave
pop
push
fstps
xor
add
mov
mov
mov
dec
inc
jb
mov
inc
xchg
loope
lret
inc
sub
add
adc
add
mov
movsb
mov
mov
add
jae
cmpsl
jnp
and
data16
and
out
cli
fnsave
xchg
jmp
int
cmp
sar
test
mov
mov
loop
mov
adc
mov
mov
cmpsb
and
rolb
mov
mov
mov
test
out
mov
insl
mov
pop
jmp
adc
mov
jo
mov
pop
ljmp
xchg
dec
mov
add
lods
enter
ljmp
fdivr
addr16
dec
fwait
xor
das
repz
lods
push
or
jno
jle
pop
stc
mov
add
push
paddusw
add
mov
add
mov
sar
repnz
cli
into
pusha
add
das
push
push
mov
pop
pop
add
lea
stos
in
lahf
aad
fstps
cmp
subl
ret
dec
mov
rolb
mov
add
xor
add
jns
xor
imul
xchg
sub
in
inc
mov
mov
lcall
out
jmp
addb
add
mov
or
adc
popa
mov
sbb
add
cmovb
mov
jle
daa
push
add
xchg
and
in
add
cwtl
in
add
jecxz
fwait
add
mov
mov
stos
loope
dec
or
aas
mov
mov
push
sub
pop
xor
fwait
xor
mov
add
mov
push
nop
add
push
and
add
jge
rolb
mov
add
lods
nop
add
ja
add
cmp
push
add
or
or
jecxz
add
mov
push
lcall
fwait
stos
hlt
ljmp
add
mov
add
stc
lock
inc
mov
sub
lret
movsl
in
cmp
inc
add
cmc
scas
and
xor
mov
mov
mov
mov
jp
imul
out
test
aam
fistl
add
fnstsw
jae
push
imul
movsl
adc
mov
ljmp
jne
xchg
mov
add
fidivrs
mov
stc
mov
inc
pop
adc
mov
cmp
mov
dec
jg
cs
aam
repnz
loopne
mov
add
xchg
hlt
aas
inc
xchg
cmp
mov
cmc
lahf
insl
orl
add
mov
nop
add
inc
inc
add
add
pop
sub
add
add
xor
lret
mov
xor
js
add
dec
sub
stos
jge
es
xor
mov
dec
mov
sarl
pop
xor
inc
aaa
jge
or
lret
or
jg
stos
cltd
mov
lret
popa
sbb
lahf
and
pop
in
add
mov
mov
jle
pop
mov
sub
rolb
mov
out
lods
lods
add
mov
add
mov
or
fcomps
add
mov
add
inc
in
addb
push
and
mov
bound
mov
mov
mov
mov
call
pop
shll
sub
add
ja
das
sub
or
jbe
repnz
xorl
and
xchg
addr16
mov
mov
mov
add
add
fucom
sahf
mov
frstor
mov
cmpsl
repz
add
not
test
dec
sbb
add
adc
int3
or
pop
push
adc
mov
add
out
pop
pop
insb
xchg
add
repz
arpl
aaa
into
adc
mov
dec
clc
subl
xor
sti
lret
adc
mov
add
loop
mov
sti
dec
stc
adc
mov
mov
insl
jecxz
mov
bound
mov
mov
sbb
dec
jl
outsb
xor
dec
je
sbb
jmp
xchg
cwtl
stc
fisubl
jecxz
jb
mov
mov
popf
insl
mov
dec
adc
mov
pop
mov
and
mov
mov
cli
sbb
inc
mov
out
inc
sub
insl
sbb
ja
je
mov
scas
push
inc
outsb
enter
mov
push
jnp
out
cld
pop
pop
fcoms
add
jge
add
sub
sbb
mov
ja
adc
push
cwtl
into
dec
das
inc
scas
mov
add
mov
adc
test
and
mov
pop
repnz
push
add
shll
and
jbe
pusha
add
jmp
add
mov
sbb
add
fildl
loope
pop
or
mov
inc
add
mov
mov
sub
add
add
imul
test
mov
mov
divl
add
sbb
insb
das
xchg
aas
loope
add
addb
pop
push
add
mov
mov
mov
cli
in
xor
mov
inc
pop
and
ret
dec
sub
andl
xchg
sub
mov
sub
movsb
mov
add
sbb
pop
jecxz
add
mov
mov
call
lcall
push
testb
hlt
dec
and
mov
sbb
xchg
in
add
add
add
js
cmp
cmp
lea
fs
mov
jo
mov
jmp
out
push
gs
mov
sahf
or
mov
clc
imul
mov
and
mov
lret
xor
add
ss
mov
add
pop
clc
push
pop
xchg
aaa
and
fistl
mov
mov
add
mov
add
jmp
in
add
mov
mov
add
lods
inc
add
mov
dec
pop
cld
sbb
mov
mov
lahf
daa
dec
inc
push
push
mov
push
loope
mov
in
xor
mov
and
mov
and
xchg
das
mov
cmp
and
pop
sub
mov
mov
mov
repz
add
push
add
data16
mov
pop
and
xor
outsb
cld
dec
ficomps
scas
loop
mov
flds
jbe
inc
out
sbb
dec
jge
add
mov
dec
cmp
mov
add
push
in
inc
add
out
adc
sub
rcrl
add
pop
jae
mov
mov
mov
add
call
mov
mov
mov
add
nop
add
mov
xor
mov
mov
and
mov
jp
adc
mov
mov
xor
mov
xor
mov
daa
icebp
mulb
add
cs
stc
movl
pusha
add
daa
push
add
lcall
add
mov
mov
mov
add
leave
cld
and
lods
pop
xchg
gs
jl
add
loop
mov
xor
mov
stos
adc
iret
insb
lea
jge
and
and
mov
add
lcall
add
jns
and
mov
mov
ja
xchg
jle
daa
cmpsl
icebp
test
mov
push
or
mov
or
jecxz
cli
xor
mov
clc
cmp
stc
sub
dec
inc
jne
add
or
fimuls
pop
sub
fdivrs
push
sub
fcmovbe
add
repz
fbld
add
ficompl
int3
insl
outsl
movsb
adc
out
sbb
in
stc
popl
adc
shrl
mov
dec
scas
lret
mov
mov
dec
fldl
cmp
pop
dec
rolb
mov
es
imul
adc
cmp
sub
add
mov
add
add
les
or
mov
mov
mov
lods
pop
daa
push
aas
js
roll
call
add
add
jg
lahf
adc
mov
mov
pop
add
mov
jns
cltd
fsts
les
xchg
push
add
add
inc
in
js
clc
addr16
hlt
rorl
outsb
dec
daa
out
iret
mov
add
add
inc
adc
push
test
sbb
mov
mov
test
mov
fists
ror
dec
mov
pop
push
movntq
rolb
mov
xchg
in
out
add
mov
mov
push
lock
mov
add
push
jnp
jl
fbld
cmp
jecxz
jo
mov
test
mov
add
cmp
call
jmp
pop
pop
xchg
push
lahf
push
jnp
pushf
test
sub
mov
pop
rolb
mov
aam
inc
add
mov
mov
mov
lock
imul
loop
mov
scas
adc
sub
mov
inc
lea
fs
xor
cmp
cmp
mov
add
xchg
mov
idiv
push
xchg
lock
adc
add
mov
mov
mov
xchg
nop
add
adc
mov
push
xchg
add
add
add
movsl
pop
jp
push
add
aas
cmp
in
mov
cmp
sbb
and
imul
mov
and
and
in
fists
jmp
jmp
and
pop
xchg
mov
xor
and
mov
adc
add
pusha
add
add
pop
mov
add
mov
pop
popa
rolb
mov
nop
add
repnz
jp
enter
rolb
mov
mov
jo
mov
subl
mov
mov
sub
adcl
mov
mov
divl
push
pop
add
in
sub
rolb
mov
ljmp
jbe
mov
add
add
add
call
cltd
mov
testb
lods
dec
dec
mov
jmp
iret
add
xor
mov
mov
imul
pushf
test
js
stos
dec
inc
add
addb
xor
jae
push
imul
out
pop
ret
les
add
mov
hlt
fsubrl
mov
bound
mov
mov
pop
int
jge
add
mov
add
icebp
jge
add
mov
add
push
pushf
pop
leave
push
int3
int
lret
movhps
xchg
adc
mov
sbb
xor
mov
pop
mov
cmp
sti
or
add
mov
mov
imul
or
push
cmpsl
push
add
aam
ljmp
and
cmpsl
mov
adc
sbb
test
mov
push
and
mov
push
jp
sub
mov
cmpsb
fisttpll
or
add
mov
push
push
imul
sub
pop
xlat
mov
mov
sub
add
add
imul
cmpsl
aaa
pop
mov
xor
jb
mov
jae
fidivrl
adcl
push
pop
cmp
add
add
mov
xor
mov
mov
jp
clc
cld
loop
mov
std
hlt
stos
mov
mov
movsb
inc
mov
addb
sub
cmp
insb
jmp
mov
inc
add
or
add
mov
pop
std
stc
dec
imul
clc
stc
lcall
rolb
mov
lret
adc
mov
mov
mov
mov
int
sub
sbb
imul
mov
out
cwtl
mov
mov
sbb
add
add
inc
cmp
movsb
test
xor
add
mov
aad
add
cmp
cmp
push
lahf
ret
repnz
or
jnp
cmp
shrl
dec
decb
mov
mov
fmul
imul
imul
mov
movsl
and
mov
mov
lcall
loope
nopl
fimull
push
mov
add
std
pop
xchg
lcall
jl
add
repnz
jecxz
scas
pop
popa
std
add
add
fnstenv
add
bound
mov
imul
mov
xor
mov
das
test
push
pushl
sbb
aaa
jl
mov
add
mov
xor
call
mov
push
add
add
mov
xor
iret
add
inc
mov
int
movsl
push
cmp
pop
adc
mov
push
mov
mov
lds
fistl
mov
sub
enter
addr16
fstl
addb
pop
in
add
push
pmaxub
gs
add
cmpsb
inc
stos
in
inc
mov
mov
inc
call
xchg
add
xchg
jb
mov
das
loope
sbb
mov
mov
incb
mov
mov
lock
lcall
add
rcrl
cmpsb
loope
add
arpl
add
sbb
and
mov
lea
mov
adc
or
adc
add
cmp
not
bound
mov
pop
movsb
xchg
push
repnz
add
iret
mov
std
mov
add
jmp
jns
mov
bound
mov
scas
and
in
shll
icebp
pop
in
mov
mov
mov
add
pop
inc
addr16
mov
add
xchg
roll
add
mov
and
mov
popa
mov
xchg
add
inc
add
int
fcmovnu
data16
test
add
leave
jmp
fisubrl
mov
xchg
add
mov
outsl
in
mov
sqrtps
ja
push
pop
movsl
pop
sbb
add
jbe
jae
aaa
roll
pusha
add
inc
or
mov
clc
sbb
mov
add
add
mov
rolb
pop
insl
pop
rcrl
jg
gs
mov
mov
mov
inc
add
mov
pop
cld
mov
mov
push
cs
addr16
xchg
add
in
lcall
pusha
add
outsb
cltd
jnp
into
inc
iret
mov
in
ficoml
sbb
lahf
add
mov
sub
lret
add
rolb
mov
inc
add
and
add
cmp
mov
add
out
movsl
mov
add
mov
mov
fwait
lret
in
jne
mov
mov
addr16
in
add
cmp
add
cmp
xchg
rolb
pop
lahf
inc
orl
in
sub
daa
mov
dec
icebp
pushf
adc
mov
mov
mov
add
iret
mov
push
decl
push
add
fcoml
imulb
test
movsl
arpl
mov
add
sub
inc
imul
mov
mov
mov
mov
cmp
insl
jl
leave
push
jae
cmp
add
add
push
clc
xchg
pop
jl
add
rcrl
push
call
les
cmp
addr16
xchg
popa
cmpsl
push
sub
push
loop,pn
mov
jle
add
mov
mov
rolb
fs
fnstsw
sbb
add
sub
adc
mov
xor
mov
mov
jbe
add
jne
loope
es
popf
rcr
mov
nop
add
in
xlat
mov
lret
or
out
nop
add
dec
mov
add
dec
js
or
movsb
ljmp
add
sbb
mov
xor
mov
je
test
popa
mov
fcmovb
sub
ljmp
push
pop
mov
mov
mov
jnp
icebp
outsb
push
add
jge
inc
hlt
daa
dec
cld
cmp
faddl
lea
decb
aam
divl
adc
xor
aad
xchg
mov
mov
mov
mov
fstps
nop
add
mov
xor
mov
add
pusha
add
add
mov
int3
pop
mov
mov
pop
loop
mov
sub
addr16
mov
push
mov
in
or
jo
mov
mov
icebp
cmp
fs
in
movsl
pop
ja
test
jo
mov
sub
cmp
in
inc
add
mov
mov
cli
scas
pop
daa
daa
inc
inc
pop
pop
fwait
inc
add
je
push
add
add
mov
sub
or
in
dec
ret
dec
adc
dec
subl
mov
inc
insl
ret
mov
add
js
add
loope
jmp
dec
dec
mov
sub
sti
out
jmp
cltd
icebp
lcall
add
dec
das
fdivs
sub
and
mov
xor
add
add
add
test
sub
clc
pop
je
sub
inc
jge
filds
movsb
push
add
xor
add
es
add
loope
jbe
cld
jns
rcl
mov
outsb
sti
adc
test
fwait
jmp
add
pop
jecxz
mov
dec
stos
iret
imul
lods
lods
sub
add
lahf
inc
fdivs
repz
popf
add
mov
gs
or
fildl
push
or
and
mov
add
mov
dec
cmpsl
fnstsw
mov
jb
mov
aas
std
je
mov
test
add
xor
mov
int3
fistpl
xchg
movsl
add
mov
sbb
dec
call
in
out
in
addb
rolb
mov
loope
add
mov
mov
jno
testb
inc
divl
add
jo
mov
add
mov
mov
add
mov
mov
sbb
xchg
inc
insb
sahf
cwtl
inc
mov
mov
mov
jle
sub
add
xor
cmp
movsl
or
fisttps
cmp
jmp
sub
rolb
mov
mov
das
cmpsb
in
and
mov
in
add
lea
dec
add
cwtl
in
xchg
inc
add
das
popa
sahf
std
std
xlat
push
xor
call
rolb
pop
and
sbb
inc
add
mov
mov
jp
cltd
dec
push
mov
push
mov
add
cmp
sti
cmp
imul
testb
mov
test
fs
pop
fdivl
mov
ret
jmp
push
pop
mov
mov
mov
xchg
mov
and
add
aad
xor
add
mov
sub
sub
dec
add
mov
mov
in
push
push
js
in
mov
mov
cltd
add
push
push
add
sub
pop
cli
out
add
loope
add
stos
jae
addb
outsb
mov
fldenv
clc
stos
add
pop
test
push
mov
stc
into
shll
cmp
lds
mov
cmp
or
lods
jmp
mov
add
add
mov
dec
out
stos
or
mov
popa
rcrl
adc
mov
mov
mov
dec
xchg
mov
add
mov
jae
adc
inc
loopne
mov
mov
jb
mov
testl
cmp
cli
stc
cmp
xor
mov
push
add
mov
jbe
lcall
xor
lea
jecxz
arpl
mov
add
ret
test
pop
inc
push
cld
fmull
in
and
loope
add
xchg
mov
sahf
clc
jne
sbb
add
add
and
add
mov
add
xor
mov
push
out
push
add
sbb
mov
iret
push
pop
pop
negl
js
add
mov
hlt
xchg
add
ja
sub
add
stos
aaa
jle
cwtl
jmp
mov
mov
add
push
loop
mov
mov
add
xchg
sub
loop
mov
movsl
jnp
add
pop
lock
loop
mov
pushf
rolb
cmpsw
es
ds
mov
mov
mov
xchg
mov
in
sub
add
sub
testl
test
push
add
mov
mov
je
dec
mov
sub
xchg
mov
out
loop
mov
iret
pop
test
stos
mov
mov
push
xor
add
push
add
push
mov
mov
jmp
add
pop
push
adc
mov
add
addb
dec
xchg
les
dec
pop
jns
add
cmp
cmp
jno
out
imul
add
jle
mov
mov
mov
xlat
jne
mov
pop
xchg
das
ja
stos
flds
lods
stc
dec
movlps
mov
add
mov
cmpsb
dec
lcall
imul
xchg
ret
inc
loopne
mov
test
jl
jbe
lahf
lahf
int3
mov
add
inc
pop
aaa
xor
mov
aaa
jge
rolb
mov
mov
sbb
jne
jecxz
movsb
adc
sbb
inc
jmp
mov
mov
neg
xchg
push
add
add
imul
add
bound
mov
mov
add
out
fwait
ds
sbb
mov
adc
mov
in
stos
aas
dec
cmp
mov
push
pop
call
xchg
add
pop
int
outsl
insl
add
jp
mov
repnz
outsl
pop
xor
lock
mov
stos
hlt
mov
adc
mov
add
mov
jp
fistl
movsl
dec
push
cmp
push
add
das
fcomp
push
add
sarl
scas
sub
sbbl
addb
ret
mov
cmpsl
mov
sbb
mov
xchg
lahf
push
mov
pop
into
xchg
mov
jle
jg
mov
aad
sbb
stc
mov
xlat
js
scas
push
repz
lahf
inc
jg
mov
add
sahf
ss
pop
and
arpl
cmp
repnz
jo
mov
lea
mov
stc
pop
dec
ret
arpl
mov
scas
ja
adc
push
add
daa
in
scas
cmp
mov
dec
ss
add
add
mov
lods
movsb
jnp
cmp
push
add
inc
rcrl
stos
push
repz
rdtsc
adc
mov
mov
push
xor
lods
imul
test
nop
add
and
test
iret
pop
sti
ss
addb
out
loop
mov
push
aam
xchg
pusha
add
xor
add
cli
inc
add
mov
ss
mov
lock
cmpsl
and
adc
mov
movsl
cmp
mov
rolb
mov
mov
ja
mov
int3
add
bound
mov
and
int3
out
lahf
rolb
add
mov
mov
sub
mov
add
add
add
push
add
bound
mov
xor
outsb
cmp
pusha
add
add
jae
daa
sbb
add
mov
mov
add
cmp
ss
addb
sbb
inc
cmp
mov
mov
mov
ret
cmc
sub
out
mov
push
test
mov
les
cld
cld
arpl
jg
xchg
das
sub
aas
cmp
lods
pop
fsts
inc
pop
dec
scas
mov
mov
rolb
jge
sbb
add
cs
xor
mov
jg
fistl
ljmp
mov
mov
fimuls
add
push
sahf
xchg
inc
add
gs
loop
mov
mov
mov
push
insl
adc
mov
sbb
xor
test
stos
push
out
imul
jb
mov
sbb
or
callw
pop
jmp
testb
mov
add
add
outsb
movsl
stos
cmpsb
addb
ja
xchg
in
push
adc
mov
inc
mov
mov
sahf
jmp
add
fstpt
jp
xchg
add
push
add
mov
repnz
jmp
imull
sbb
add
add
pop
rolb
mov
push
cmp
add
and
fdivl
int
cwtl
adc
mov
fwait
andl
out
mov
inc
ljmp
pop
mov
mov
mov
sub
mov
mov
hlt
jmp
testb
out
insb
in
xor
lcall
mov
sub
imul
add
and
mov
add
fidivl
movsl
int
cmp
mov
mov
push
cmpsb
add
mov
int3
xchg
out
push
addb
cwtl
mov
add
xchg
add
popa
lds
mov
dec
xlat
inc
fcmove
lds
add
das
js
inc
rolb
mov
sbb
add
test
mov
add
fs
pusha
add
out
out
xor
mov
push
insl
xchg
pop
jo
mov
aas
xlat
test
push
add
icebp
ja
add
aas
pop
mov
mov
or
mov
add
addb
popf
sahf
cltd
dec
dec
and
mov
add
pop
es
jo
mov
shrl
xchg
xchg
and
ficoml
mov
mov
test
mov
dec
inc
cs
leave
fisttpll
add
mov
cmp
add
mov
pop
cmp
out
cmp
xor
mov
inc
or
add
pop
addb
cs
cwtl
cmp
and
mov
sbb
cltd
aad
dec
ret
pop
mov
into
scas
test
or
push
icebp
shrl
rolb
mov
sbbl
and
mov
pop
push
jb
mov
adc
mov
ds
xor
das
dec
add
loop
mov
int3
flds
loop
mov
lret
aas
lret
cmp
in
out
xlat
xlat
inc
jmp
fistpl
cwtl
dec
aaa
adc
aam
mov
add
jns
add
mov
add
add
pop
and
jecxz
add
add
mov
mov
dec
repnz
in
inc
add
mov
push
mov
mov
add
xchg
ja
les
arpl
inc
xor
xor
mov
add
mov
xor
xor
mov
sbb
mov
mov
add
mov
outsl
inc
popa
push
pushf
fnstsw
jae
fldenv
test
xchg
add
in
movsb
mov
mov
add
mov
pop
mov
stos
std
push
ret
jmp
cs
sbb
add
ret
lds
adc
sbb
push
cwtl
hlt
xor
xchg
inc
gs
sbb
movsl
add
mov
mov
inc
add
add
xor
mov
add
mov
bound
mov
inc
fsubl
jle
add
push
jge
gs
xchg
lret
popf
jo
mov
or
ret
jns
cltd
adc
mov
fimuls
cmp
dec
arpl
add
mov
test
in
jo
mov
mov
xchg
add
cmp
pop
in
mov
mov
mov
xchg
inc
sub
mov
add
js
sbb
fldt
std
or
xor
movsb
mov
mov
mov
ficoml
jb
mov
ja
adc
mov
sbb
push
js
dec
mov
fistpl
xchg
test
call
mov
mov
dec
or
repnz
mov
sub
and
sub
inc
clc
int
add
xchg
adc
mov
cmpsb
sti
stc
gs
cmp
add
mov
add
mov
movsl
repnz
rolb
mov
add
add
stc
jecxz
jge
add
xor
inc
add
add
cmp
add
wrmsr
add
add
push
add
add
add
add
ds
add
add
add
pushf
adc
and
mov
rolb
mov
xlat
xchg
aas
or
outsl
dec
scas
mov
add
jae
ljmp
adc
mov
fdiv
pop
mov
mov
insl
in
outsb
push
sub
jne
mov
mov
mov
pop
xchg
movntq
add
mov
mov
cmp
ret
aam
in
mov
rolb
push
rolb
pusha
add
nop
add
out
pusha
add
push
in
icebp
push
add
dec
xor
mov
cmpsl
test
aaa
imul
inc
add
in
imul
mov
mov
ret
jo
mov
add
mov
mov
mov
mov
mov
repnz
mov
mov
add
and
push
rolb
mov
lods
fmull
push
sub
mov
in
sar
jp
sub
out
cmp
int
pop
cld
mov
xchg
cmpsl
xchg
mov
cltd
pop
jnp
movsl
test
into
stos
in
leave
pop
lret
push
filds
inc
add
add
mulb
add
sub
add
sbb
sub
and
mov
mov
cmp
and
mov
add
add
jo
mov
sub
lcall
inc
add
shll
mov
test
add
mov
add
pop
imul
stos
fwait
gs
aaa
add
mov
mov
mov
add
in
xor
mov
aad
push
aaa
int
ret
dec
xor
mov
filds
iret
rolb
mov
mov
sbb
loope
push
scas
cs
add
add
xchg
addb
insb
xchg
xchg
mov
inc
add
loopne
mov
add
mov
adc
dec
js
mov
add
test
jp
mov
icebp
arpl
cmp
jmp
sub
add
xor
mov
push
dec
cwtl
in
fnstsw
add
cld
enter
jecxz
adc
mov
mov
stos
mov
mov
nop
add
xor
mov
addb
mov
mov
mov
inc
das
stos
lret
jne
add
jp
add
and
add
adc
mov
cmpsb
xchg
sahf
iret
pushf
ss
sub
add
and
mov
es
outsl
add
stc
inc
jle
adc
jmp
fcomps
push
and
test
jmp
pop
add
icebp
out
mov
push
add
jnp
clc
jae
lds
add
mov
add
loop
mov
jnp
or
mov
push
pop
push
outsl
addb
or
ficompl
nop
add
stos
jmp
adc
pop
or
mov
adc
jno
sub
add
ret
movsb
stc
enter
push
add
repnz
inc
arpl
addb
outsb
fsts
add
movsb
xchg
add
out
dec
mov
nop
add
test
jg
stos
fld
subl
or
out
out
inc
mov
xchg
add
push
sbb
jo
mov
mov
xchg
movsb
into
lret
sbb
push
test
scas
fcoml
add
mov
add
daa
push
stos
cld
xor
push
pop
pop
fs
add
dec
rolb
mov
cltd
mov
mov
fdivp
xor
mov
hlt
cmpsl
out
add
mov
popa
cmp
mov
push
lock
add
sbb
mov
pop
rolb
mov
cmp
add
mov
ja
add
adc
pusha
add
add
mov
pop
adc
mov
dec
nop
add
add
inc
add
or
add
mov
cmc
ds
aaa
je
xor
jne
sbb
add
addb
xchg
loopne
mov
mov
movsl
js
dec
pop
jecxz
push
in
ret
jb
mov
pushf
push
xchg
add
mov
adc
mov
dec
and
mov
in
xchg
enter
sub
cmp
add
cwtl
lods
popa
dec
push
and
mov
add
add
mov
ds
jae
fiadds
add
mov
les
inc
xchg
add
mov
mov
stc
inc
add
xchg
cmc
sbb
push
test
aad
adc
mov
in
inc
mov
add
ds
pcmpgtw
cmp
mov
mov
cmp
mov
mov
pop
and
mov
add
mov
mov
inc
sbb
inc
add
mov
mov
icebp
push
add
mov
insl
mov
xor
mov
repnz
add
add
js
add
mov
xor
mov
out
add
mov
int3
or
or
mov
xchg
add
cltd
mov
fistpll
jmp
outsl
lods
cwtl
jmp
fwait
outsb
xor
mov
js
into
test
and
imul
sub
add
inc
add
add
jnp
add
mov
push
add
add
mov
mov
and
or
push
mov
add
mov
inc
pop
daa
je
sti
sbb
xor
add
iret
popf
and
clc
or
mov
repz
test
mov
mov
aas
mov
outsb
jns
or
dec
pop
fbld
mov
ret
es
es
jnp
add
fbstp
mov
dec
mov
mov
push
ficompl
into
movsb
xorl
lods
push
addb
int
xor
cmp
inc
in
inc
add
adc
mov
push
add
push
add
sbb
div
add
and
push
loopne
mov
pushf
push
imul
add
mov
push
push
add
mov
jge
subl
sub
frstor
ljmp
fimuls
or
ret
push
add
or
mov
inc
lea
add
jb
mov
add
add
mov
fisubl
stc
pop
out
ficomps
call
decl
add
rolb
adc
mov
xchg
xor
mov
mov
call
xlat
lods
pop
mov
add
xchg
jo
mov
jl
or
add
mov
adc
mov
mov
add
adc
mov
mov
sub
pushf
or
pop
xchg
fldcw
adc
je
not
ja
mov
dec
sti
cmpl
dec
int
add
pop
mov
mov
pop
xor
lahf
mov
repnz
and
mov
mov
add
lea
mov
sbb
loope
neg
and
add
lock
adc
xor
push
xchg
outsl
mov
imull
fdivl
lret
addb
mov
mov
mov
inc
add
out
xchg
jne
test
cmpsl
outsl
lds
enter
mov
mov
mov
push
mov
xlat
ljmp
out
adc
add
add
mov
ja
cmp
sbb
add
rorl
popa
les
mov
mov
cmpsl
imul
add
mov
adc
mov
and
mov
jmp
dec
adc
lahf
mov
dec
int3
xor
mov
xchg
xchg
das
push
pop
xor
mov
shll
inc
inc
add
sub
ljmp
fcomi
add
cs
jns
adc
mov
add
sbb
add
mov
jge
lock
xchg
fsubs
mov
mov
mov
gs
dec
xchg
jmp
sbb
jle
or
lods
pop
fistpll
inc
ss
repnz
add
divl
add
divb
push
mov
mov
jbe
add
add
mov
push
add
add
dec
inc
shll
std
jo
mov
mov
aad
cmp
add
jns
ret
push
adc
rolb
adc
fidivrl
mov
mov
bound
mov
fs
testb
imul
mov
add
mov
loop
mov
add
mov
mov
mov
sub
xchg
add
jns
and
mov
or
in
add
pop
mov
out
xlat
sbb
sbb
test
fadd
add
jae
test
add
addr16
rcll
imul
insb
rolb
mov
addps
dec
fdivs
mov
sbb
dec
insl
dec
cli
cmp
add
pop
jl
ret
xchg
roll
sahf
bound
mov
pop
add
sub
int
add
push
les
imul
movsb
js
add
test
ret
dec
fs
leave
ja
add
push
scas
dec
pop
adc
mov
das
popl
or
xlat
sub
add
mov
scas
cmpsl
addr16
repz
add
outsb
out
mov
aaa
lea
cld
lods
nop
add
mov
pop
inc
add
xchg
xchg
xchg
adc
lods
unpcklps
sub
dec
rolb
rolb
stos
jle
add
add
lret
sarl
add
into
mov
fildll
xchg
cmc
iret
je
mov
in
sbb
inc
add
inc
test
inc
or
loop
mov
xchg
pop
scas
add
mov
add
mov
xchg
add
and
mov
sbb
daa
popf
lret
add
daa
mov
icebp
sub
add
sub
add
add
ret
iret
ficoml
aam
mov
je
lahf
pop
xchg
add
mov
cwtl
loopne
mov
ljmp
scas
pusha
add
dec
jp
add
fs
je
cmp
xor
repnz
in
mov
mov
push
adc
add
in
pop
mulb
mov
jle
ret
pop
insl
sbb
add
sbb
fsts
mov
adc
mov
enter
mov
mov
sub
ds
addb
lahf
jo
mov
add
js
mov
mov
xor
mov
pop
ljmp
popf
jmp
or
add
mov
add
dec
mov
mov
push
mov
lods
jle
ret
add
mov
pop
cmp
inc
lea
add
inc
cwtl
xor
sbb
pushf
data16
adc
inc
mov
add
sub
fsubrs
push
jns
xor
mov
mov
add
add
mov
sahf
push
xchg
add
mov
addb
aam
cmp
enter
and
mov
inc
das
insl
jge
and
es
loop
mov
in
pushf
psubb
fmull
loope
mov
cmc
xchg
and
rolb
mov
jmp
lock
mov
jns
jne
ret
xor
add
in
xchg
inc
scas
imul
pop
les
mov
dec
mov
or
fistps
add
add
mov
add
outsb
or
dec
aaa
dec
push
mov
mov
sub
dec
es
and
mov
add
mov
mov
outsb
mov
sahf
mov
pop
pop
push
xchg
std
adc
mov
add
and
xchg
lods
insb
inc
mov
in
inc
hlt
cmp
pslld
mov
mov
jmp
mov
pop
push
lods
dec
dec
aam
add
mov
add
pop
ljmp
bound
mov
ret
inc
add
mov
mov
cli
mov
outsb
or
popf
sti
push
cmp
mov
jmp
mov
pop
push
sbb
pop
mov
jbe
lret
add
fwait
or
add
fs
fcmovb
add
ret
sbb
jno
adc
mov
nop
add
and
push
and
mov
das
aaa
in
xchg
cltd
push
enter
out
mov
les
pop
stos
call
in
out
push
xlat
scas
mov
sbb
pop
loop
mov
scas
cmp
mov
popf
and
mov
add
mov
add
pop
fistps
arpl
push
outsl
std
xchg
add
dec
inc
sbb
or
aam
int
outsb
or
and
mov
popa
repz
std
sub
mov
inc
lcall
rolb
mov
cmp
outsb
and
sbb
add
bound
mov
in
fistpll
loop
mov
and
fwait
jne
jp
sahf
pop
sbb
push
das
mov
mov
outsl
xorl
jle
incl
insb
nop
add
add
mov
clc
int
rolb
fldt
pop
faddl
in
jbe,pt
sub
int
sahf
add
aaa
push
in
and
push
mov
out
add
decl
in
or
add
push
mov
icebp
sbb
push
add
cmp
pop
xchg
rolb
mov
and
sbbl
loope
add
xor
add
mov
mov
or
enter
aam
inc
pushf
in
out
mov
in
or
add
jmp
lret
insl
push
test
add
inc
pop
xor
mov
cwtl
jns
add
mov
inc
cld
rcrl
mov
call
and
mov
and
or
adc
mov
sub
aam
stc
fsubs
pusha
add
mov
xchg
pop
stos
pop
aaa
iret
inc
dec
es
mov
stos
jne,pt
lds
pop
inc
fiaddl
inc
add
rorl
jne
add
ja
inc
push
inc
jecxz
dec
out
jns
mov
fidivrl
mov
push
cli
mov
or
lds
add
mov
lret
lret
mov
mov
add
inc
add
mov
ja
add
test
sub
add
or
inc
addl
loope
dec
les
ffree
xchg
mov
jmp
push
mov
in
cmp
add
mov
mov
xor
hlt
adc
mov
adc
sub
inc
scas
sbb
rolb
mov
cwtl
jl
fisttpll
nop
add
jmp
jle
gs
mov
and
add
in
or
pop
pop
aaa
sub
sbb
popf
mov
pop
in
lock
jne
sbb
imul
pop
into
hlt
jb
mov
je
lret
add
mov
fs
jb
mov
jns
push
hlt
push
sbb
mov
push
xchg
fisttpll
loope
insl
or
cmpsb
js
int
xchg
jp
mov
jne
add
add
mov
pop
aad
xor
divb
add
mov
add
pop
xchg
add
push
sbb
pop
add
popf
cmpsl
add
jae
add
jl
inc
xor
add
mov
aam
and
mov
add
jns
arpl
xchg
insl
into
ret
jnp
addr16
lods
test
mov
xorl
xchg
dec
mov
jmp
or
rolb
mov
jge
add
sub
add
les
mov
popf
lods
sub
mov
sub
add
jne
repz
jp
or
mov
xchg
push
popa
lds
test
mov
xor
int3
jbe
dec
sub
or
into
leave
lods
pop
pop
cltd
test
inc
lods
call
lret
dec
arpl
mov
les
dec
jae
adc
xor
mov
fs
data16
mov
sahf
mov
jp
sbb
in
out
and
out
sub
add
add
dec
sub
iret
or
dec
inc
and
sub
repz
imul
add
inc
and
mov
testb
mov
repnz
push
add
pop
jno
add
mov
and
decl
pop
movsl
cmp
movsl
sti
xorl
test
jg
mov
es
addr16
xchg
sub
xlat
mov
cmp
imul
jmp
xchg
iret
add
add
js
daa
test
aam
push
xchg
add
mov
xchg
fdivs
add
cmp
xlat
loop
mov
mov
mov
clc
jg
out
daa
add
fcmovbe
add
jae
ljmp
ss
add
addr16
pushf
outsb
add
lahf
leave
xor
rolb
mov
imul
mov
xchg
lods
adc
aam
and
mov
sub
add
mov
lods
dec
sbb
hlt
repz
mov
pop
push
xchg
scas
pop
dec
xor
lret
pop
jns
mov
lock
rcll
push
nop
add
daa
sbb
or
add
filds
ljmp
pusha
add
sub
and
mov
push
xor
insb
mov
lret
aas
stc
hlt
push
mov
add
aaa
inc
push
imul
jge
iret
mov
xor
mov
add
ret
sub
mov
add
push
add
rolb
mov
push
mov
jge
ss
ss
sub
lret
out
test
rcll
aaa
mov
add
add
rcr
mov
es
add
pop
pop
stc
push
dec
jbe
add
cmpsb
inc
mov
cmp
mov
mov
mov
add
ficoms
mov
fs
stc
push
cltd
fcmovnu
test
rolb
mov
int3
ds
add
ss
popa
sbb
ja
sti
xor
cltd
es
fnstsw
inc
xchg
add
mov
mov
add
lds
cmpsl
mov
mov
adc
xor
xchg
stc
add
sbb
cmpsb
dec
mov
es
icebp
divb
xor
out
nop
add
mov
fcoms
jno
les
sarl
shrl
inc
cmc
push
jp
ret
add
mov
add
add
mov
add
mov
fiadds
push
mov
push
sub
sahf
jne
add
ret
push
add
mov
pop
mov
mov
repz
enter
mov
sbb
add
aam
ss
jg
jp
inc
aam
daa
out
mov
sbb
push
pop
rolb
mov
mov
add
dec
xlat
sub
sbb
int3
cmp
mov
filds
arpl
add
jbe
mov
cmc
insl
mov
cmpsl
push
add
push
clc
add
ds
push
lahf
cmp
rorl
repnz
add
out
and
mov
sbb
clc
push
add
dec
or
fcoml
loop
mov
cltd
es
push
rolb
out
sub
shl
rcrl
add
mov
push
lock
sub
mov
mov
call
je
cwtl
adc
add
stos
out
cmpsl
fisubrs
add
jle
sub
adc
test
add
add
cltd
mov
dec
push
bound
mov
rolb
mov
or
add
xchg
insb
rolb
mov
mov
add
fiadds
add
mov
mov
mov
daa
scas
cmp
aaa
dec
and
mov
add
cmp
nop
add
test
es
sub
xor
mov
outsl
std
subl
sub
arpl
cmp
cmp
jg
sbb
mov
push
mov
lretw
nop
add
mov
add
mov
add
push
mov
es
mov
add
jo
mov
push
push
rolb
jge
mov
jecxz
cwtl
ret
xchg
mov
mov
in
xchg
add
and
mov
jnp
hlt
daa
mov
dec
cwtl
jns
mov
xor
mov
ret
push
filds
cwtl
push
mov
mov
mov
mov
sub
sub
push
pop
mov
scas
mov
mov
in
push
and
pusha
add
out
mov
loopne
mov
sub
pop
aaa
dec
sub
inc
add
outsb
or
imull
inc
cmp
imul
out
mov
mov
pop
mov
pop
lock
add
rolb
mov
xchg
movsb
sub
mov
mov
xchg
add
dec
insl
lcall
add
int3
mov
insb
jnp
jle
add
add
lods
xchg
inc
cs
add
icebp
test
addr16
pop
lods
addr16
cmp
add
add
push
add
gs
aaa
repnz
add
add
inc
repz
sbb
sahf
cli
jns
jge
mov
mov
out
xor
adc
iret
insb
xchg
dec
cmp
inc
je
add
mov
add
jle
imul
sahf
add
sub
xorl
jg
roll
mov
add
sub
or
add
mov
adc
xor
dec
gs
jecxz
xchg
dec
push
daa
es
inc
sbb
repnz
cmp
das
stos
push
add
pop
xor
mov
pop
fisttps
es
inc
inc
sbbl
add
leave
imul
or
mov
out
int3
and
insl
jne
adc
mov
psubsw
mov
je
cld
jp
push
stos
pop
movsb
pop
jl
pop
ret
add
mov
sti
cmpsl
add
mov
in
js
notl
add
es
stc
fs
or
cld
and
rolb
xor
mov
dec
push
sub
push
add
push
add
repnz
add
add
add
lods
mov
push
xchg
stc
inc
and
idiv
cmpsb
mov
mov
pop
mov
mov
aas
imul
and
es
add
add
adc
and
xor
add
inc
add
out
hlt
std
sbb
push
push
add
bound
mov
add
xorl
lcall
mov
in
ljmp
add
ss
inc
fldl
mov
push
push
push
bound
mov
dec
in
test
push
push
dec
pop
dec
jnp
and
decb
mov
sahf
or
bound
mov
jns
je
cmp
push
add
add
fiaddl
fistpll
faddp
mov
add
xchg
mov
ds
mov
aad
jne
out
loopne
mov
js
in
pop
cmp
insb
push
nop
add
mov
decb
jge
add
lock
mov
add
lcall
and
jg
sahf
imul
mov
adc
jg
inc
imul
lret
pop
sahf
xchg
add
gs
inc
or
push
inc
stos
mov
lods
xchg
add
es
test
jns
inc
or
adc
and
mov
jo
mov
and
test
jns
adc
mov
sbb
lahf
stc
mov
add
xlat
jo
mov
test
pop
scas
push
add
std
cltd
outsl
sub
cmovge
in
in
xor
mov
mov
fwait
in
repnz
mov
out
cmp
mov
cmp
pop
pop
ja
test
pop
pop
rolb
mov
icebp
out
xlat
push
xchg
pop
test
orl
and
mov
xchg
hlt
mov
sti
imul
mov
