lods
loope
jmp
test
andb
add
and
add
mov
insl
inc
imul
sub
add
mov
and
add
add
and
add
add
or
inc
lods
test
subl
test
add
sub
dec
add
roll
mov
fs
test
mov
inc
add
add
mov
add
add
in
and
push
enter
test
insl
fs
pusha
les
sub
and
inc
add
or
gs
sub
or
add
loopne
lods
rolb
leave
in
leave
mov
movsb
popa
lods
sub
mov
inc
lea
and
dec
lds
lods
dec
movsl
andl
sub
movsl
sub
or
mov
lods
or
add
enter
or
mov
or
movsb
lods
imul
add
and
in
add
add
add
mov
sub
sub
and
mov
dec
and
inc
add
push
test
andb
loopne
call
add
sub
add
sub
fs
inc
test
movsb
dec
leave
add
in
gs
and
imul
test
call
inc
les
push
add
lods
or
in
add
lds
inc
call
in
or
and
dec
sub
add
fs
dec
andb
pusha
and
and
ror
or
mov
int
enter
test
lods
dec
mov
in
lods
mov
test
add
leave
test
insb
insb
add
call
int3
jmp
call
dec
test
int
test
dec
mov
loopne
test
or
or
lea
dec
subb
inc
and
push
sub
add
in
test
dec
sub
loope
mov
subb
fs
add
dec
mov
dec
mov
sub
in
mov
mov
fs
in
or
imul
or
dec
subb
or
add
lds
loope
loopne
lds
in
inc
add
inc
enter
insl
add
imul
mov
or
test
gs
jmp
mov
sub
sub
add
mov
insl
sub
fs
fs
sub
and
gs
sub
test
dec
or
int
leave
add
or
or
test
add
sub
dec
test
test
imul
pusha
sub
leave
in
shr
mov
dec
test
mov
add
lds
and
dec
sub
test
or
add
insb
lods
imul
pusha
add
shll
loope
les
add
sub
add
leave
or
dec
or
and
les
add
push
or
test
insb
insb
add
popa
enter
add
loopne
add
mov
and
add
leave
shr
popa
call
test
jmp
imul
sub
lods
in
imul
mov
movsl
int3
sub
imul
test
jmp
fs
add
or
mov
rolb
mov
add
lods
pusha
lods
loopne
add
or
in
shrl
add
and
push
sub
movsl
dec
or
test
gs
pusha
test
or
add
jmp
push
subl
lods
add
test
sub
add
in
andl
sub
add
inc
mov
or
insl
dec
jmp
add
popa
fs
mov
push
imul
add
mov
gs
loope
mov
lods
dec
jmp
inc
and
dec
inc
add
add
fs
rorl
and
lea
add
and
mov
sub
inc
sub
add
or
add
loope
add
movsl
dec
sub
mov
rol
loope
shl
jmp
add
sub
inc
test
insb
in
test
and
or
sub
add
int
dec
and
rorb
and
fs
dec
and
mov
add
popa
add
test
mov
sub
add
les
insb
mov
loope
test
add
add
or
sub
and
call
call
jmp
insl
add
or
and
inc
popa
and
lods
add
rorb
lods
mov
in
test
les
les
test
imul
int
mov
inc
sub
sub
push
in
add
push
add
in
in
push
in
int
imul
popa
or
insl
mov
or
test
loope
dec
gs
add
mov
add
int3
in
in
dec
in
test
leave
mov
add
shl
sub
mov
test
les
loope
push
mov
shrb
test
dec
movsl
lds
movsb
mov
shrb
sub
int3
mov
lods
lea
popa
or
dec
call
add
addb
shrb
jmp
sub
dec
int
add
enter
enter
mov
gs
add
enter
enter
add
or
in
gs
in
movsb
add
test
dec
lea
rolb
in
mov
dec
sub
movsl
lods
insl
in
sub
or
lea
inc
or
add
sub
or
jmp
sub
or
mov
and
pusha
inc
and
add
sub
mov
popa
in
sub
int
and
mov
or
or
lea
add
int3
leave
lds
pusha
rorl
sub
push
add
in
int3
dec
test
lea
loope
sub
dec
and
and
roll
add
sub
mov
sub
inc
add
roll
add
sub
leave
movsb
add
sub
int
or
enter
loope
shrl
popa
shll
rolb
sub
shlb
enter
sub
in
addb
mov
dec
pusha
test
enter
in
test
leave
enter
and
sub
inc
add
lea
call
int3
mov
sub
and
subl
inc
movsl
addl
add
enter
shr
and
and
and
movsl
sub
insb
lds
sub
add
and
add
test
lods
mov
in
movsb
or
and
inc
mov
lods
in
gs
lds
or
test
dec
add
test
rorb
test
dec
movsb
and
test
lods
or
subl
push
lds
and
movsb
and
dec
dec
loope
inc
in
add
dec
test
dec
les
call
add
add
mov
int3
lods
in
test
lds
mov
inc
mov
popa
imul
dec
or
add
add
mov
sub
add
loope
popa
add
dec
add
pusha
leave
dec
and
sub
sub
in
enter
push
sub
add
inc
test
mov
or
add
in
add
mov
in
mov
insl
mov
loope
rolb
dec
add
sub
rol
inc
subl
inc
dec
insl
movsl
popa
or
orb
inc
add
and
add
call
int
lods
gs
leave
pusha
and
loope
dec
lods
movsb
insl
add
orl
mov
insb
add
mov
mov
shrb
add
les
lods
add
call
in
and
or
and
or
lods
int3
dec
call
or
loopne
and
and
popa
loope
imul
and
lods
call
sub
lds
add
dec
add
enter
and
add
movsl
sub
inc
and
jmp
add
mov
inc
int
call
add
dec
les
test
movsb
dec
sub
sub
movsl
add
int3
mov
or
add
gs
inc
sub
movsl
lods
or
rolb
add
sub
enter
add
sub
leave
movsl
and
or
test
add
and
jmp
and
mov
dec
or
in
imul
imul
mov
and
add
test
add
mov
sub
add
test
add
and
jmp
dec
mov
lods
dec
mov
rorb
addl
inc
dec
or
dec
mov
test
insl
in
test
add
or
add
sub
in
add
add
in
add
lods
test
inc
test
loope
add
dec
lods
insb
les
int
popa
lods
sub
in
lea
mov
sub
dec
lds
add
add
inc
loope
imul
test
in
pop
and
dec
ja
jbe
fidivl
loop
lock
add
loop
nop
xchg
xchg
fldt
add
incb
add
decb
pop
adc
out
in
fs
mov
rcrl
inc
add
inc
gs
jb
stc
into
out
mov
push
or
cmp
incb
inc
cmp
inc
add
add
aad
imul
jle
call
and
popf
inc
add
jecxz
xor
lret
fsubp
idiv
lret
dec
add
leave
cmp
hlt
out
out
pushf
sti
scas
scas
jg
pusha
add
pop
lds
incb
xor
aas
or
pushf
ficompl
je
out
clc
adc
add
cmp
cmp
fnsave
push
add
aas
inc
cmp
imul
and
decb
add
and
cs
lods
test
ss
cmp
jo
pop
imul
or
addb
jge
add
add
cmp
mov
lret
ss
gs
hlt
gs
dec
add
into
repnz
xchg
add
cmp
aaa
js
add
nop
xchg
mov
loopne
in
adc
arpl
lahf
dec
pop
inc
add
pop
sub
mov
jmp
gs
pushf
clc
lret
hlt
shll
xchg
mov
mov
mov
cmp
jb
sbb
add
cmp
mov
js
add
fidivrs
xchg
or
repnz
jns
pop
push
pop
pop
loopne
add
mov
hlt
repnz
rcrl
decl
pop
sti
out
and
xor
sti
in
clc
xchg
add
decb
movsb
dec
mov
adc
xchg
inc
lds
or
decb
push
imul
jle
incb
call
insb
mov
loop
add
adc
popa
jecxz
jge
lcall
mov
aam
repnz
js
stc
and
dec
stos
inc
add
faddl
inc
jns
cmp
and
adc
jo
adc
jp
add
and
je
fs
sbb
dec
jnp
loope
inc
push
push
mov
loope
inc
icebp
mov
loopne
popa
cld
in
jecxz
inc
mov
daa
jle
push
cmp
leave
decb
popf
xor
in
xor
cmp
add
mov
out
add
add
test
mov
pop
in
push
push
dec
incb
inc
mov
xchg
cmp
push
daa
mov
push
push
iret
add
jno
add
add
add
cmp
in
xor
lea
ss
mov
add
cs
cli
loopne
xor
data16
fs
std
sahf
jl
add
incb
cmp
decb
decb
aam
hlt
adc
and
xlat
add
xchg
stos
add
jns
stos
add
incb
mov
pop
inc
daa
mov
in
cmp
add
jg
push
add
test
fnstsw
mov
lods
call
or
pop
mov
sub
xchg
sub
pushf
mov
in
sub
jne
cmp
pop
sbb
push
sub
lods
cmp
pop
je
push
fcomi
shrb
incb
ss
add
cmp
test
add
jge
repz
cltd
jae
jle
and
out
or
jmp
cmp
out
mov
mov
cmp
mov
pop
dec
add
popf
cmc
sbb
push
in
dec
add
popf
push
add
cmp
hlt
in
xchg
outsl
dec
popf
pop
sbb
add
dec
add
popf
add
fildl
add
fwait
adc
xchg
leave
fistpl
int
pop
fnsave
dec
dec
popf
ret
add
jns
dec
sbb
addr16
dec
add
sbb
inc
fildl
out
je
insl
pop
push
add
add
jmp
js
sbb
mov
push
sbb
lods
call
or
sub
add
mov
lods
jle
add
mov
add
incb
sbb
lahf
add
fwait
jge
or
sub
add
mov
or
incb
fwait
cld
mov
add
mov
sub
add
mov
inc
incb
hlt
xor
and
push
decb
and
cli
das
mov
xchg
and
lods
imul
add
jecxz
imul
add
clc
mov
cmc
push
adc
xchg
inc
insl
out
add
js
decb
add
pop
movb
cmp
mov
dec
adcb
mulb
jbe
and
push
pop
insb
dec
push
test
hlt
inc
jne
andl
fwait
mov
add
push
cmpsl
in
and
fnstcw
fidivl
inc
push
mov
filds
push
mov
lock
arpl
jnp
pop
movsl
lea
cld
mul
jle
shlb
add
add
aas
xchg
xchg
inc
mov
add
mov
xchg
js
adc
fucomi
int
xor
negl
nop
jne
pop
ret
jmp
and
and
sub
push
fisubrs
mov
push
cmp
inc
cmp
icebp
cmp
pop
pop
fsts
test
cmp
jecxz
sbb
or
push
cwtl
xchg
and
xor
cmp
insb
stos
or
dec
loopne
outsl
test
add
loopne
mov
dec
roll
stos
les
enter
stos
jmp
push
add
sbb
into
add
decb
and
xchg
lahf
push
icebp
pop
mov
add
push
xchg
imul
add
mov
or
sahf
in
mov
mov
push
dec
jnp
into
push
add
mov
fnstsw
dec
add
sub
sub
incb
inc
mov
pop
in
jne
adc
ds
clc
or
data16
je
mov
push
shl
arpl
fxam
shrl
enter
pop
mov
ret
mov
or
mov
mov
xor
push
jmp
cmp
add
repnz
mov
lahf
cltd
popa
add
add
push
lods
nop
dec
fcmovne
mov
push
push
push
inc
add
daa
fistpll
sti
mov
scas
fistpll
sub
xor
sbb
or
pop
xlat
jge
lods
inc
mov
fstpl
push
mov
sahf
cmp
mov
ja
or
es
inc
mov
stos
cmc
xchg
in
in
rorb
mov
cmp
pop
jle
sti
out
and
sbb
sub
inc
int3
xchg
leave
out
jne
sbb
shl
icebp
mov
cmp
lods
or
hlt
cmp
add
repz
add
cmp
stos
jl
pop
xchg
sub
jne
insb
add
jno
push
js
add
ret
add
fs
sti
shll
in
jno
dec
and
aam
add
js
shlb
stos
mov
mov
push
sti
mov
push
adc
std
mov
insb
adc
mov
sub
or
incb
movsb
clc
adc
add
scas
rcrl
fmull
add
cmp
enter
test
jecxz
or
decb
dec
cltd
fildll
inc
das
mov
add
lahf
add
movsb
daa
repnz
sbb
lret
dec
xchg
mulb
js
test
mov
jge
shl
mov
lret
ret
das
add
add
iret
mov
or
inc
imul
add
dec
in
inc
push
jecxz
adc
es
decb
fidivl
jl
scas
pushf
mov
adc
adc
and
pop
pop
sbb
mov
iret
movsb
inc
lret
xorl
xor
sub
lock
orb
cmp
mov
inc
push
hlt
imul
add
mov
or
cmp
sarl
mov
pop
xchg
mov
mov
or
and
aaa
fs
xor
sahf
inc
add
add
mov
push
mov
mov
inc
aad
jge
in
cmc
or
xchg
test
push
outsb
negb
les
or
imul
cmp
hlt
mov
aam
jo
inc
insl
push
incb
in
cmp
and
inc
push
mov
stos
aad
inc
add
push
sbbb
test
mul
lods
negl
test
push
inc
repnz
dec
add
mov
imul
jns
gs
or
jno
test
dec
mov
enter
sbb
mov
dec
adc
out
iret
mov
ss
icebp
cmpsl
push
mov
in
pop
in
je
enter
test
sbb
cmpsl
adc
xor
cmpsb
sbb
ret
sbb
scas
cli
inc
add
fistps
xchg
out
mov
in
insb
add
adc
push
cmp
sbb
js
jge
call
add
inc
or
lahf
je
outsl
les
cmp
les
lds
mov
push
and
adc
or
incb
mov
call
int
add
je
push
lds
add
xor
jmp
mov
mov
xchg
pop
scas
pop
test
incb
add
out
leave
popf
pop
mov
rolb
aas
mov
lods
dec
add
popa
ds
or
dec
out
ja
stc
jecxz
insl
mov
cmp
leave
sub
sbb
aaa
aad
push
xchg
jns
xchg
insb
popa
xchg
aaa
jle
cmp
push
pop
or
cmp
mov
sub
mov
sbb
push
or
dec
ds
test
data16
dec
int
xchg
xor
je
loop
mov
insb
sti
inc
add
in
jl
gs
and
addr16
popf
pop
je
sbb
outsb
decb
xor
pop
lds
dec
jl
fimull
std
adc
ret
decb
fisubrl
mov
mov
imul
xchg
data16
les
mov
sub
cltd
cli
adc
jnp
sbb
movsl
into
jl
imul
int3
push
mov
shlb
das
in
popf
scas
jecxz
mov
xchg
and
inc
imul
cmc
scas
adc
ss
clc
js
ret
jne
pop
test
push
sub
fsubl
mov
dec
jne
aam
in
cs
cltd
mov
push
je
enter
lods
lds
in
pusha
xor
nop
sarl
sub
incb
in
mov
xor
sti
adc
cli
mov
stos
outsb
add
repnz
incb
pop
add
pop
ds
repz
stos
add
test
mov
jbe
add
in
loope
fistpl
mov
and
add
pop
mov
xchg
lods
mov
pop
repz
mov
mov
fistpll
shll
cmp
decb
out
icebp
icebp
loopne
lahf
xchg
dec
jg
dec
stos
dec
incl
sbb
add
cwtl
push
pop
insb
add
cmp
jnp
jne
in
fisubrs
hlt
insb
push
sbb
xor
ss
mov
mov
jg
cld
xchg
and
jno
std
jp
push
jno
stc
push
jns
incb
mov
aaa
rorb
sub
push
inc
add
cmp
outsl
testl
mov
std
pusha
in
inc
pop
jno
test
push
scas
pop
fwait
aad
push
inc
add
cmp
decb
adc
and
out
scas
hlt
aad
push
jg
jg
xchg
out
add
mov
dec
push
ss
stos
dec
and
sti
pop
repz
outsl
adc
mov
jns
faddp
shll
push
cmp
mov
dec
mov
jns
or
decb
add
movb
jb
jno
pop
sub
push
fs
decb
xor
rcl
sbb
xor
mov
jmp
adc
incl
add
lahf
loopne
into
fwait
sbb
clc
adc
pop
mov
pop
fdivr
ficompl
loop
pop
xchg
dec
sbb
imul
mov
dec
add
push
mov
lds
icebp
aas
rclb
mov
push
dec
sbb
add
pop
sbb
mov
jl
pop
add
jmp
push
jg
ljmp
adc
mov
imul
inc
xor
popl
cmp
inc
inc
sbb
cwtl
and
xor
dec
add
xchg
lret
js
data16
dec
mov
arpl
mov
pavgb
decb
cmpl
andb
daa
lods
scas
scas
mov
adc
stc
dec
shl
xor
jnp
or
je
mov
and
incb
add
mov
add
sbb
ret
push
icebp
rcl
pop
fwait
adc
imul
stos
in
push
adc
sbb
xchg
repnz
jne
popa
ljmp
jge
divb
add
in
mov
movsb
xor
decb
xchg
and
push
and
pop
bound
pop
fnclex
mov
pop
jns
or
and
fcomi
in
in
mov
pop
mov
pop
push
xchg
out
xchg
push
pop
dec
add
dec
decb
idivl
fsubl
inc
add
sub
add
not
or
sub
mov
adc
jns
mov
in
call
andb
lds
das
shll
movsb
movsl
mov
jle
sarl
push
sub
in
pop
out
mul
lds
push
cmpsl
push
inc
xchg
sub
cmpsl
std
cltd
rcll
imul
outsb
add
dec
ss
mov
call
imul
out
daa
lahf
xchg
xor
mov
cmp
pop
not
sub
jl
and
hlt
push
xchg
adc
jns
add
mov
fstps
pop
lret
xor
pop
add
insl
es
dec
cli
and
push
and
jnp
jmp
xchg
cmp
dec
in
adc
movsl
and
mov
addr16
and
push
mov
add
lea
push
push
push
xchg
clc
test
je
jmp
adc
clc
lea
or
mov
shr
shr
add
push
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
je
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
andl
cld
push
push
push
push
call
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
imul
mov
out
fstps
xor
scas
xchg
pop
mov
xchg
js
sbb
xor
outsl
inc
add
gs
add
mov
push
std
sti
icebp
dec
or
stos
mov
clc
sbb
bswap
lcall
push
add
int
jns
shlb
jge
out
xor
jae
mov
push
subb
cmpsb
xor
pop
push
jge
ficoml
sub
call
mov
mov
pop
cmp
lcall
cmpsb
cmp
jp
std
add
jp
cmp
lahf
and
xchg
icebp
or
adc
cmp
and
mov
pop
pushf
cmpsb
ds
bound
xchg
outsl
rolb
lods
jp
idivb
jg
adc
cmpsl
xor
push
mov
push
int
fldl
sbb
and
add
enter
lret
xchg
inc
outsb
add
insb
add
test
lods
mov
mov
pusha
and
mov
das
or
addr16
fcoms
jg
add
xorl
xor
fs
jbe
incb
jo
xchg
sub
cld
mov
stc
xchg
pushf
xchg
mov
inc
add
mov
loope
add
pop
fbstp
or
add
mov
adc
push
mov
add
popl
out
cmp
add
jne
mov
mov
add
stos
or
xor
stos
out
sbb
inc
decb
aad
hlt
cli
mov
push
je
mov
cmovns
add
jmp
scas
sbb
stos
jl
mov
decb
dec
hlt
adc
fwait
jbe
jp
dec
js
inc
or
loop
xchg
test
add
aad
and
mov
es
cmp
ss
iret
outsb
add
shrb
incb
lods
std
xchg
sub
sbb
pop
xor
add
inc
jae
idivl
incb
addl
sarb
cwtl
lahf
jmp
push
stos
push
sub
inc
clc
popf
je
adc
jne
inc
mov
std
enter
and
bound
xchg
sarb
adc
dec
or
pop
lock
dec
in
cmpsb
testl
daa
sbb
stos
int3
icebp
mov
inc
add
sbb
add
insl
fstl
sbb
mov
sbb
jne
add
insl
inc
add
data16
jmp
lret
stc
hlt
cmp
out
push
sbb
icebp
push
in
mov
pop
dec
into
dec
bnd
sub
mov
mov
jmp
jle
xchg
cmc
push
add
aaa
xlat
nop
push
add
mov
inc
faddl
and
movsl
cmp
cs
sub
add
jb
jo
mov
test
and
xchg
inc
sub
arpl
stc
mov
inc
add
mov
and
ds
psubw
adc
mov
inc
add
je
jbe
cs
xchg
and
incb
jle
cmp
popf
inc
and
push
mov
add
xor
or
pop
repnz
push
scas
pop
mov
fwait
inc
cmpsl
mov
imul
jnp
add
lcall
gs
data16
jp
inc
incb
fwait
mov
xchg
sahf
pop
jns
push
dec
js
add
sub
mov
push
addr16
dec
out
jge
repz
popa
xor
cmp
or
scas
or
push
out
je
lods
ja
leave
das
pop
xchg
dec
es
decb
push
pop
jae
cs
or
pop
mov
xor
fs
cmp
lea
stos
or
fistpl
adcl
in
and
pop
data16
inc
mov
add
sub
incb
mov
push
mov
neg
das
mov
lcall
sahf
repnz
xorl
fisttps
sbb
cmp
xor
xchg
mov
pop
es
or
mov
mov
or
sbb
cmp
in
jle
out
jbe
push
or
imul
push
add
fcom
inc
test
lods
mov
adc
loopne
xor
and
xor
flds
aaa
mov
lock
in
or
incb
mov
test
mov
pop
outsl
das
mov
shlb
mov
arpl
adc
push
stc
xchg
push
sbb
and
aad
xchg
jge
dec
add
or
out
xchg
shrl
mov
incb
mov
gs
pop
mov
mov
sbb
dec
movsb
mov
xchg
es
jle
push
add
and
inc
adc
sbb
fistpll
mov
mov
mov
add
jns
add
test
mov
mov
sbb
and
aas
sub
push
add
in
inc
sub
sub
decb
xchg
mov
out
movups
push
test
cld
sub
push
decb
jnp
icebp
popa
and
adc
mov
cmp
xor
add
mov
fimull
add
xchg
or
sub
mov
fstpl
lret
decb
je
add
arpl
leave
fildll
xchg
fsubs
dec
add
outsb
add
loopne
hlt
mov
sub
incb
fists
pop
iret
mov
test
mov
mov
add
out
sub
and
decb
inc
adc
xor
add
addr16
pusha
adc
lea
cld
xchg
lret
mov
mov
scas
addr16
in
dec
sub
jle
daa
jecxz
stos
jecxz
push
add
cmp
and
enter
jne
or
fisubrl
ds
pushf
and
pop
cmp
or
mov
xchg
cli
push
sub
incb
push
imul
test
sbb
or
mov
test
cmp
cmp
jne
int3
mov
decb
sbbl
call
mov
and
fidivrs
lock
sbb
xchg
and
cmp
add
and
push
mov
iret
out
enter
mov
add
jmp
xchg
repnz
mov
pop
mov
aas
cltd
add
shlb
aam
fwait
test
adc
xlat
dec
cmp
jg
add
jb
inc
or
call
push
ss
outsb
sahf
adc
aaa
pop
dec
incb
decb
cmp
loope
lods
pop
sbb
bound
decb
sub
push
dec
and
movsl
iret
pop
inc
es
cmp
adc
lock
incb
loope
in
push
sub
out
pop
daa
data16
stc
push
mov
mov
fsubrl
jle
jl
test
incb
add
test
sub
push
cs
lahf
loop
push
call
andl
add
jmp
push
add
dec
add
decb
push
fcoms
ljmp
lea
jp
add
sub
decb
add
cmc
inc
loopne
ljmp
add
out
mov
add
sub
aas
loope
mov
outsb
add
dec
fstpl
cltd
leave
adc
shlb
rol
xchg
into
mov
shl
pushf
pop
iret
dec
icebp
pop
pusha
add
inc
stos
lret
clc
push
incb
xor
ljmp
pop
insb
add
mov
adc
mov
dec
push
decb
imul
insl
addr16
rolb
and
xchg
or
and
fstl
ret
inc
cmp
test
or
les
mov
into
dec
dec
dec
mov
push
sarl
dec
aas
cmp
sub
incb
xchg
mov
inc
push
inc
jl
add
repnz
cld
mov
push
dec
sbb
jb
xchg
xchg
dec
in
sub
incb
in
jno
add
mov
lret
or
cmp
inc
adc
bound
decb
xlat
jnp
sub
incb
cli
adc
das
push
jns
add
pop
push
or
jge
xchg
jb
add
divl
sub
shlb
idivb
cmp
add
pusha
add
popa
loope
fwait
rep
gs
jge
pop
into
gs
insl
push
jbe
movsb
push
add
loop
add
sbbl
repz
and
adc
mov
and
repz
add
mov
mulb
cmpb
outsl
stos
pusha
add
outsb
pop
daa
jns
and
add
stc
test
sbbl
filds
sub
decb
decb
fdivs
pop
push
jne
cmp
jl
shl
cmp
arpl
daa
aas
dec
int
jnp
jle
push
lods
dec
sbb
sahf
jge
fdivs
shrb
mov
xchg
adc
xor
sub
decb
aas
push
jle
add
xor
add
pop
mov
jp
insb
xor
push
int3
xchg
scas
push
mov
xor
mov
sbb
repz
nop
in
imul
arpl
or
je
mov
sub
mov
and
fisubrs
scas
cmp
mov
and
and
incb
add
test
mov
pop
sbb
mov
add
stos
add
repz
add
ret
mov
add
pop
push
add
cmp
cmp
in
clc
sti
aam
imul
popf
xor
and
inc
outsl
cmp
add
and
incb
ret
es
sbb
lea
rol
pushf
sbb
aas
cmp
xorl
js
sbb
adc
mov
cmp
sub
pop
inc
push
fildll
fcoml
jmp
add
push
xor
push
out
loopne
mov
jp
rcl
mov
pop
ret
loopne
push
fs
and
adcl
stos
outsb
add
mov
mov
cs
aas
aad
mov
add
xor
mov
dec
mov
testl
sub
stc
inc
decb
stos
rorb
mov
mov
fisttps
mov
pop
loop
add
xor
cmp
push
mov
rcll
scas
pusha
arpl
movsl
push
shr
jge
out
xor
add
fistl
inc
dec
add
data16
cltd
out
add
rcll
lock
jmp
shl
je
jg
cmpsb
repz
ror
push
dec
lret
incb
add
jne
mov
scas
hlt
mov
add
push
mov
mov
loop
xchg
lahf
mov
xchg
sbb
inc
mov
mov
jmp
lret
lret
xchg
shrl
push
or
cmp
out
out
dec
add
stc
pop
dec
loope
add
lret
loopne
into
inc
mov
add
push
fstpl
mov
roll
decb
push
add
fnstcw
add
mov
cmp
cmp
lahf
xor
dec
mov
aad
int
push
add
mov
icebp
out
adc
adc
jbe
and
scas
push
into
xor
dec
adcl
cmpsb
out
add
xchg
pop
js
jno
jg
sbbl
jge
mov
push
repz
mov
decb
stos
addr16
jae
in
incb
mov
imul
fs
icebp
push
add
in
xor
sub
cmp
shll
lahf
imul
lahf
iret
cmp
nop
adc
loop
dec
push
jne
add
movsl
andb
sbb
xchg
js
mov
aas
fsubrp
fadds
sbb
sub
push
jnp
and
loop
or
inc
pop
in
jo
decb
enter
inc
add
dec
sti
ret
cmpsb
mov
mov
add
scas
cltd
adcb
adc
xchg
mov
cmc
xor
xchg
test
in
iret
jecxz
ljmp
rol
mov
or
and
shrl
mov
push
xchg
add
stos
pop
cmp
movsl
icebp
in
dec
pop
sti
mov
and
decb
jnp
lcall
stc
cli
inc
ds
out
push
cltd
and
test
add
dec
fidivl
cli
lcall
jnp
add
fs
inc
scas
adc
fnstcw
cwtl
dec
cmp
add
and
mov
lods
daa
adc
and
rcll
mov
lods
jecxz
jle
fidivs
xchg
cmpsl
es
js
out
sbb
stos
mov
enter
jmp
jle
dec
incb
sbb
or
sbb
pusha
add
jno
ret
enter
dec
shll
adc
mov
iret
fnstsw
adc
xor
movsl
call
mov
push
cmp
in
fsub
dec
pop
jecxz
cmp
dec
add
add
jae
addr16
sub
fs
je
cwtl
enter
fimuls
xchg
ljmp
test
into
inc
fiadds
jno
cwtl
jmp
cltd
mov
repnz
pushf
fdivp
fistpl
out
test
ret
pop
test
jmp
xchg
in
and
push
jg
ret
jmp
add
jle
add
cltd
mov
inc
lock
mov
stc
and
xor
dec
inc
sbb
nop
jae
pusha
add
cmc
push
and
aad
pop
dec
dec
cmp
data16
rcrl
sub
sub
push
dec
aam
stos
add
cmp
jo
adc
ss
xchg
fs
ds
add
xchg
addr16
adc
jecxz
addr16
and
test
xor
in
btc
xlat
mov
add
mov
shlb
mov
int3
fmuls
push
jmp
fs
lock
mov
fwait
sub
decb
xor
mov
add
pop
dec
ja
popf
adc
lods
scas
int
shlb
in
adc
shll
jmp
gs
add
loope
mov
js
add
in
outsl
mov
mov
xor
imul
jns
js
mov
cmp
cmpsl
sbb
stos
ljmp
in
movsb
test
cmp
shrb
cltd
push
clc
nop
nop
nop
nop
jae
add
add
add
movsl
inc
add
lret
shr
clc
nop
nop
nop
nop
jae
fdivrs
outsl
sub
add
rcrl
mov
xchg
ret
mov
sub
sub
add
out
pop
mov
clc
nop
nop
nop
nop
jae
mov
out
add
add
adc
inc
decb
ret
clc
nop
nop
nop
nop
jae
outsl
add
popa
lea
mov
nop
nop
nop
jae
inc
fadds
add
flds
add
iret
mov
push
mov
xchg
ret
daa
add
xor
add
sub
push
mov
mov
cmp
test
lea
add
add
cs
repz
les
nop
nop
nop
nop
jae
push
add
add
add
add
nop
push
mov
leave
nop
jmp
add
cld
daa
add
lcall
nop
nop
nop
nop
jae
sub
test
add
add
sub
fiaddl
and
nop
nop
nop
nop
jae
add
add
sub
out
dec
mov
clc
nop
nop
nop
nop
jae
add
jecxz
add
add
das
sub
push
mov
xchg
ret
add
push
es
cmp
push
add
int3
inc
sbb
nop
jmp
add
fiaddl
add
add
mov
leave
nop
jmp
sub
roll
incb
sbb
nop
push
mov
leave
nop
jmp
lock
sub
pop
mov
nop
push
mov
leave
nop
jmp
add
out
fadds
dec
cmp
add
loopne
lret
push
clc
nop
nop
nop
nop
jae
add
roll
out
add
mov
nop
nop
jae
loopne
add
out
lds
jle
add
xor
mov
xchg
ret
cld
add
daa
out
add
add
add
out
scas
adcb
clc
clc
nop
nop
nop
nop
jae
add
add
add
out
cld
add
fcomps
dec
add
dec
sub
nop
push
mov
leave
nop
jmp
add
push
push
jge
popa
add
int
pop
jae
nop
nop
nop
nop
jae
dec
add
flds
add
test
stc
pop
inc
add
sub
add
add
and
sub
test
add
nop
nop
nop
nop
jae
fidivrl
into
out
sub
xor
lret
mov
clc
nop
nop
nop
nop
jae
sbb
lea
add
mov
clc
nop
nop
nop
nop
jae
lea
add
add
add
mov
nop
nop
nop
jae
push
push
add
aam
add
push
mov
leave
nop
jmp
push
lock
incb
lcall
in
sub
push
inc
add
sub
out
movsl
dec
sub
add
sub
push
mov
leave
nop
jmp
dec
add
add
test
lcall
xchg
clc
nop
nop
nop
nop
jae
add
add
testl
icebp
push
push
mov
xchg
ret
sub
dec
out
lock
and
add
out
add
cmp
sti
stos
clc
nop
nop
nop
nop
jae
or
into
add
add
add
inc
add
dec
add
mov
call
nop
jae
add
movsl
lock
add
lahf
push
inc
add
add
shrb
add
inc
cmc
pop
clc
nop
nop
nop
nop
jae
sub
dec
add
push
add
nop
nop
nop
jae
add
add
jae
add
add
sub
lods
aam
ret
nop
push
mov
leave
nop
jmp
dec
add
out
xor
test
add
jle
xor
jb
add
daa
push
lcall
add
lahf
sub
clc
nop
nop
nop
nop
jae
add
add
add
push
add
out
fcompl
pop
inc
add
add
adc
add
add
jns
add
add
add
cmp
push
lock
jns
clc
nop
nop
nop
nop
jae
sub
test
push
add
scas
push
sub
nop
nop
nop
nop
jae
xor
add
inc
and
add
mov
nop
nop
nop
nop
jae
sub
lds
add
add
das
push
mov
add
add
xchg
std
add
add
out
mov
nop
push
mov
leave
nop
jmp
inc
sub
daa
jae
or
cmp
cmp
sbb
clc
nop
nop
nop
nop
jae
add
shlb
add
xlat
push
clc
nop
nop
nop
nop
jae
inc
add
add
fadds
lea
inc
dec
sahf
inc
mov
clc
nop
nop
nop
nop
jae
popa
test
loopne
add
jae
add
dec
sub
xchg
mov
clc
nop
nop
nop
nop
jae
rclb
and
sub
add
sbb
push
push
mov
xchg
ret
inc
add
add
add
push
add
add
add
ds
add
add
cmc
dec
jnp
add
test
loop
mov
xchg
ret
dec
add
dec
add
dec
add
inc
xor
and
add
clc
nop
nop
nop
nop
jae
sub
cld
lea
nop
nop
jae
add
add
add
daa
out
mov
add
clc
nop
nop
nop
nop
jae
aam
sbb
add
fidivrl
add
mov
and
shlb
or
nop
jmp
add
add
fidivrl
push
add
sbb
decb
decb
jg
add
add
idiv
outsl
jecxz
add
flds
mov
mov
push
mov
xchg
ret
add
add
push
add
add
add
push
clc
nop
nop
nop
nop
jae
lea
add
add
xor
add
ljmp
mov
add
add
rolb
xor
clc
nop
nop
nop
nop
jae
add
dec
add
add
push
test
mov
clc
nop
nop
nop
nop
jae
add
add
or
pop
loopne
add
cmpl
nop
push
mov
leave
nop
jmp
add
lods
cmp
mov
nop
nop
nop
nop
jae
jae
add
sbb
popa
loopne
add
daa
icebp
xor
clc
nop
nop
nop
nop
jae
sub
shrl
add
add
adc
jmp
clc
nop
nop
nop
nop
jae
sub
add
add
sub
nop
push
mov
leave
nop
jmp
fdiv
add
leave
dec
add
out
iret
pusha
clc
nop
nop
nop
nop
jae
testl
incb
add
jae
in
cmp
nop
push
mov
leave
nop
jmp
sbb
loopne
add
add
push
mov
xchg
ret
ficompl
roll
fiaddl
add
add
push
sbb
nop
nop
nop
nop
jae
add
add
outsl
add
add
inc
or
sbb
outsl
inc
add
add
outsl
flds
and
sub
and
shlb
nop
nop
nop
nop
jae
add
add
add
push
clc
nop
nop
nop
nop
jae
add
push
add
lcall
test
pop
mov
clc
nop
nop
nop
nop
jae
out
inc
add
add
add
pop
clc
nop
nop
nop
nop
jae
shlb
add
add
jge
in
jne
clc
nop
nop
nop
nop
jae
dec
imull
add
out
add
add
nop
push
mov
leave
nop
jmp
add
sar
add
nop
push
mov
leave
nop
jmp
add
push
add
cld
lcall
and
in
push
inc
add
xchg
add
add
add
je
add
sbb
mov
cli
lret
add
nop
push
mov
leave
nop
jmp
out
mov
leave
add
jl
call
nop
push
mov
leave
nop
jmp
add
push
into
add
add
mov
clc
nop
nop
nop
nop
jae
lods
add
and
shl
stc
pop
push
mov
xchg
ret
or
jle
jae
add
add
fcomps
cltd
push
nop
push
mov
leave
nop
jmp
jle
add
cmp
sbb
nop
pop
sub
nop
nop
nop
nop
jae
add
jle
add
push
add
sar
nop
nop
nop
jae
mov
cld
add
add
push
cli
scas
dec
add
pop
mov
jmp
push
test
daa
sub
add
add
and
out
inc
jle
mov
clc
nop
nop
nop
nop
jae
add
xor
shlb
je
clc
nop
nop
nop
nop
jae
add
add
stos
nop
push
mov
leave
nop
jmp
daa
add
inc
add
add
sub
mov
clc
nop
nop
nop
nop
jae
out
add
lcall
fld1
clc
nop
nop
nop
nop
jae
lock
cmp
add
add
add
xchg
push
mov
xchg
ret
add
mov
rolb
add
shlb
std
mov
nop
push
mov
leave
nop
jmp
sub
sub
sub
add
mov
nop
or
pop
mov
push
mov
xchg
ret
add
and
add
add
ds
call
clc
nop
nop
nop
nop
jae
add
add
add
add
clc
stos
push
clc
nop
nop
nop
nop
jae
add
ror
scas
add
aam
add
nop
nop
jae
cmp
adc
push
add
add
add
nop
push
mov
leave
nop
jmp
xor
add
add
and
dec
cli
jne
clc
nop
nop
nop
nop
jae
add
add
add
add
test
add
push
push
mov
xchg
ret
sub
xor
sub
fwait
push
clc
nop
nop
nop
nop
jae
add
add
add
add
daa
xchg
mov
clc
nop
nop
nop
nop
jae
cmp
add
sub
loopne
icebp
pop
clc
nop
nop
nop
nop
jae
es
mov
sub
add
push
insb
sub
test
adc
add
nop
nop
nop
nop
jae
loopne
add
sub
add
mov
into
push
lret
add
jge
or
add
into
mov
clc
nop
nop
nop
nop
jae
jle
cmp
lcall
add
loop
clc
nop
nop
nop
nop
jae
adc
add
dec
daa
and
inc
add
jmp
add
push
add
add
pop
add
add
push
add
add
dec
mov
clc
nop
nop
nop
nop
jae
sbb
loopne
add
popa
rclb
push
mov
jg
sbb
mov
insb
arpl
loopne
pop
add
rorl
jae
add
cmp
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
testl
add
mov
push
mov
xchg
ret
add
add
fimull
aam
mov
nop
push
mov
leave
nop
jmp
loopne
add
sub
inc
lods
add
or
nop
push
mov
leave
nop
jmp
add
daa
jge
push
add
mov
clc
nop
nop
nop
nop
jae
and
add
add
sub
push
mov
add
pop
and
add
add
add
add
add
ret
jno
xchg
add
clc
nop
nop
nop
nop
jae
add
add
mov
mov
add
lock
mov
xchg
ret
flds
lock
add
roll
test
add
cmpsb
je
cmpsl
mov
clc
nop
nop
nop
nop
jae
add
add
cld
lea
mov
push
mov
xchg
ret
xor
ficoml
nop
push
mov
leave
nop
jmp
shrb
add
leave
add
cmp
sub
and
call
nop
jae
test
outsl
add
add
mov
nop
nop
nop
nop
jae
daa
rolb
test
sub
sub
push
ja
clc
nop
nop
nop
nop
jae
add
mov
sar
nop
nop
nop
nop
jae
lea
sbb
add
add
add
or
pushl
push
mov
xchg
ret
outsl
and
rolb
add
add
lds
push
nop
push
mov
leave
nop
jmp
add
push
fimull
cmp
add
add
fistpl
clc
nop
nop
nop
nop
jae
add
scas
rol
jge
add
add
fistpl
push
mov
xchg
ret
add
add
out
add
add
aad
push
mov
xchg
ret
add
scas
lea
sub
popa
add
nop
nop
nop
nop
jae
xor
add
lods
sub
xchg
fildll
nop
push
mov
leave
nop
jmp
add
movl
test
movsl
jl
add
clc
nop
nop
nop
nop
jae
incb
sub
and
es
push
and
in
leave
nop
jmp
into
add
out
shrb
aam
pop
jg
mov
mov
or
pop
addb
xchg
and
cmp
add
jg
mov
add
clc
nop
nop
nop
nop
jae
shl
add
add
into
xchg
fld1
nop
push
mov
leave
nop
jmp
sub
out
dec
add
mov
pop
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
fiaddl
pop
cmpw
clc
nop
nop
nop
nop
jae
sub
es
adc
mov
xchg
ret
cld
or
leave
add
sub
in
xchg
cmp
add
add
daa
add
lret
std
or
and
pusha
clc
nop
nop
nop
nop
jae
out
add
and
add
add
add
imull
sub
nop
nop
nop
nop
jae
add
sbb
and
add
sub
pop
jne
clc
nop
nop
nop
nop
jae
pop
add
add
out
push
mov
nop
nop
nop
jae
lods
add
add
lds
add
add
in
outsl
cmp
nop
push
mov
leave
nop
jmp
cmp
add
sub
rclb
nop
jmp
add
add
adc
rolb
add
add
mov
clc
nop
nop
nop
nop
jae
leave
add
outsl
cmp
add
test
call
nop
nop
nop
nop
jae
jecxz
sub
add
test
xor
nop
push
mov
leave
nop
jmp
out
test
add
add
add
add
clc
nop
nop
nop
nop
jae
add
ds
out
push
pop
jge
leave
nop
push
mov
leave
nop
jmp
sub
add
push
add
add
mov
int
call
nop
jmp
fldcw
inc
scas
aad
mov
xor
in
cli
push
add
add
mov
dec
push
rol
add
je
insl
push
mov
mov
int
stos
add
and
push
add
daa
fld1
clc
nop
nop
nop
nop
jae
roll
fmuls
add
add
xor
js
clc
nop
nop
nop
nop
jae
mov
cmp
add
push
stos
test
add
aad
dec
sub
nop
nop
nop
nop
jae
sub
rorl
lds
sbb
rolb
nop
nop
nop
nop
jae
mov
or
add
mov
xlat
jne
nop
push
mov
leave
nop
jmp
sub
aam
add
fwait
mov
clc
nop
nop
nop
nop
jae
add
add
add
and
cwtl
in
repnz
add
pop
rol
push
mov
xchg
ret
test
lock
sub
add
add
in
clc
nop
nop
nop
nop
jae
sub
add
fdiv
incb
lock
mov
xchg
ret
add
add
lds
push
popa
add
daa
shlb
mov
sub
push
add
test
into
lds
fadds
add
add
add
insb
incb
nop
nop
nop
jae
sub
add
add
push
mov
add
add
add
add
pop
jae
roll
xor
add
push
outsl
xor
add
dec
xor
nop
push
mov
leave
nop
jmp
lea
add
aam
add
add
call
nop
push
mov
leave
nop
jmp
push
cld
popa
add
mov
aam
push
clc
nop
nop
nop
nop
jae
add
jae
add
add
add
clc
nop
nop
nop
nop
jae
cmp
sub
cld
into
add
lcall
mov
push
mov
xchg
ret
test
cld
add
xor
out
sbb
imull
xchg
clc
nop
nop
nop
nop
jae
add
add
add
sub
sub
xchg
mov
mov
leave
nop
jmp
add
add
cmp
ficompl
cmp
pusha
clc
nop
nop
nop
nop
jae
add
add
push
movsl
add
add
inc
pop
call
clc
nop
nop
nop
nop
jae
movsl
sub
incb
jae
add
inc
add
dec
mov
clc
nop
nop
nop
nop
jae
add
fadds
push
mov
add
add
scas
loopne
add
pop
add
adc
add
add
cmp
leave
dec
decb
adc
nop
nop
nop
nop
jae
leave
mov
and
dec
ficoml
nop
nop
nop
nop
jae
dec
add
xor
mov
add
pushf
rclb
in
in
in
jo
dec
add
iret
push
add
fimuls
add
mov
fs
add
add
xor
add
decb
adc
add
nop
nop
nop
nop
jae
into
xor
sub
add
pushf
sub
push
dec
dec
ds
fsubrs
clc
nop
nop
nop
nop
jae
lea
add
cld
add
lcall
sahf
std
sub
clc
nop
nop
nop
nop
jae
shll
add
add
xor
out
mov
jbe
add
add
add
add
add
add
add
jl
xor
push
mov
xchg
ret
dec
movsl
movsl
cmp
neg
testl
incb
movsb
clc
nop
nop
nop
nop
jae
out
es
sub
add
push
mov
xchg
ret
and
add
scas
add
cmp
std
mov
push
mov
xchg
ret
add
leave
loopne
rolb
sbb
jge
pop
add
clc
nop
nop
nop
nop
jae
add
test
add
add
push
out
aam
enter
test
sbb
push
mov
xchg
ret
add
add
inc
sub
sub
clc
nop
nop
nop
nop
jae
add
add
aam
inc
leave
add
pusha
add
xchg
pop
dec
cld
push
mov
xchg
ret
and
add
mov
dec
fiaddl
aas
pushl
push
mov
xchg
ret
out
add
xor
scas
add
add
aam
pop
clc
nop
nop
nop
nop
jae
add
add
add
and
nop
nop
nop
nop
jae
add
scas
mov
add
nop
nop
nop
nop
jae
inc
movsl
add
fcomp
out
es
into
cmp
js
push
out
or
inc
inc
add
add
push
push
fiaddl
add
push
add
add
jmp
loopne
dec
add
out
add
out
sub
add
mov
inc
add
mov
clc
nop
nop
nop
nop
jae
fiaddl
add
fiaddl
fimull
cld
les
nop
nop
jae
sub
add
aam
fiaddl
fcmove
push
pop
add
push
mov
xchg
ret
lock
jecxz
aam
add
add
xchg
xor
add
clc
nop
nop
nop
nop
jae
add
add
add
push
fcmovbe
mov
pop
clc
nop
nop
nop
nop
jae
add
inc
cmp
add
add
xchg
or
push
or
test
nop
nop
nop
nop
jae
add
roll
add
jo
popf
push
nop
push
mov
leave
nop
jmp
test
push
add
fidivrl
add
out
lcall
nop
push
mov
leave
nop
jmp
add
add
add
add
shl
cmp
mov
xchg
ret
push
add
jae
add
lock
fsubrs
fisubs
sbb
nop
nop
jae
testl
add
add
push
test
or
movb
mov
xchg
ret
and
out
xor
add
popa
add
pusha
sbb
nop
nop
nop
jae
add
sub
jecxz
fisubl
pop
clc
nop
nop
nop
nop
jae
ds
add
add
add
out
add
dec
push
clc
nop
nop
nop
nop
jae
xor
add
add
cld
add
add
ficoml
nop
push
mov
leave
nop
jmp
add
out
popa
add
dec
push
out
push
add
aam
popa
mov
clc
nop
nop
nop
nop
jae
mov
lds
add
pop
nop
push
mov
leave
nop
jmp
jae
inc
push
sbb
out
sarb
and
sbb
mov
clc
nop
nop
nop
nop
jae
add
or
movsl
add
add
cltd
push
clc
nop
nop
nop
nop
jae
add
mov
add
and
daa
lahf
stos
nop
push
mov
leave
nop
jmp
lcall
ds
add
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
push
mov
xchg
ret
leave
lock
jecxz
scas
dec
out
cmp
outsl
jnp
clc
nop
nop
nop
nop
jae
add
add
add
add
mov
nop
nop
nop
nop
jae
rcl
out
add
push
stos
ret
clc
nop
nop
nop
nop
jae
aam
sub
add
add
fcmovbe
pop
nop
push
mov
leave
nop
jmp
fnop
add
add
out
jle
movsl
jecxz
push
xor
hlt
cld
mov
clc
nop
nop
nop
nop
jae
aam
add
loopne
push
add
add
pop
and
xor
roll
scas
inc
inc
add
into
addb
add
sub
addb
push
clc
nop
nop
nop
nop
jae
dec
mov
add
add
cld
inc
add
dec
incb
nop
nop
nop
nop
jae
rorb
add
add
add
negl
add
clc
nop
nop
nop
nop
jae
subb
roll
nop
nop
nop
jae
pop
popa
add
add
cmp
sub
push
mov
leave
nop
jmp
add
jge
add
add
ror
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
add
in
leave
nop
jmp
add
add
add
add
xor
add
clc
nop
nop
nop
nop
jae
movsl
lds
adc
aam
lss
add
lds
jle
inc
add
add
add
into
sub
incb
out
xchg
clc
nop
nop
nop
nop
jae
into
out
add
sub
sbb
mov
xchg
ret
add
add
rcr
fadds
fisubrl
lods
adc
add
adc
sbb
push
testl
jge
imul
nop
nop
nop
jae
popa
lds
loopne
sarb
jecxz
adc
nop
jmp
inc
scas
cmp
out
add
dec
loopne
test
dec
nop
push
mov
leave
nop
jmp
add
push
push
add
test
add
add
push
mov
clc
nop
nop
nop
nop
jae
add
add
add
movl
push
mov
xchg
ret
add
popa
sub
out
push
mov
scas
fld
iret
or
inc
add
jle
push
cmp
add
add
add
inc
mov
jecxz
clc
nop
nop
nop
nop
jae
add
add
add
add
fisubrl
fs
dec
inc
arpl
nop
nop
nop
nop
jae
add
test
add
subb
push
mov
js
stos
cltd
cmp
repnz
add
pop
jmp
mov
into
mov
je
nop
push
mov
leave
nop
jmp
add
sarb
inc
adc
mov
xchg
ret
add
push
jae
add
mov
mov
leave
nop
jmp
push
dec
mov
cmp
scas
add
cli
xor
push
push
mov
xchg
ret
push
jge
loopne
sub
add
jge
rorb
incb
call
stos
clc
nop
nop
nop
nop
jae
add
add
add
add
xchg
pop
clc
nop
nop
nop
nop
jae
es
lds
add
lock
add
lds
shr
clc
nop
nop
nop
nop
jae
shrb
dec
rolb
lods
add
add
aaa
mov
clc
nop
nop
nop
nop
jae
add
add
aam
add
push
xor
div
nop
push
mov
leave
nop
jmp
add
lock
add
dec
pop
push
mov
xchg
ret
mov
add
add
add
add
and
incb
nop
nop
nop
nop
jae
sbb
sub
add
adc
push
mov
leave
nop
jmp
out
add
or
sub
inc
leave
and
leave
pop
cld
ret
fistl
mov
xchg
ret
sbb
mov
lock
lea
add
jne
clc
nop
nop
nop
nop
jae
sub
lock
push
add
clc
nop
nop
nop
nop
jae
lods
add
add
shrb
fdivs
push
mov
leave
nop
jmp
sub
lea
add
shr
jno
clc
nop
nop
nop
nop
jae
add
add
add
add
add
xor
pop
mov
push
mov
xchg
ret
cld
scas
sub
push
add
lock
dec
inc
js
pop
mov
nop
push
mov
leave
nop
jmp
aam
add
add
jecxz
add
nop
push
mov
leave
nop
jmp
sub
add
add
orb
push
incb
nop
nop
jae
add
outsl
sub
leave
add
push
cld
clc
nop
nop
nop
nop
jae
add
test
aam
dec
add
push
add
dec
inc
push
mov
xchg
ret
add
add
push
fcmovu
add
sub
movb
mov
xchg
ret
push
sbbb
fadds
lds
add
xchg
test
sbb
push
mov
xchg
ret
cld
add
add
add
fldcw
nop
jae
add
add
add
push
add
add
clc
nop
nop
nop
nop
jae
add
cmp
add
sub
mov
push
clc
nop
nop
nop
nop
jae
dec
and
add
add
inc
aam
add
stos
add
push
mov
xchg
ret
add
shrl
pop
dec
out
lcall
jb
clc
nop
nop
nop
nop
jae
movsl
add
mov
pop
mov
push
mov
xchg
ret
add
add
add
aam
sbb
add
clc
nop
nop
nop
nop
jae
add
add
add
add
push
push
ret
dec
push
mov
xchg
ret
lds
aam
popa
or
add
add
data16
lods
mov
clc
nop
nop
nop
nop
jae
leave
scas
add
cmpsb
jmp
repz
nop
nop
nop
nop
jae
add
orb
leave
dec
rolb
ds
xor
fstl
mov
xchg
ret
add
sarb
jge
add
add
add
fistpl
push
mov
xchg
ret
add
add
mov
add
notl
push
mov
xchg
ret
jecxz
sub
nop
nop
nop
jae
fadds
add
movl
into
insl
lea
push
mov
xchg
ret
add
dec
out
add
aam
f2xm1
push
mov
jne
clc
nop
nop
nop
nop
jae
addb
push
movsl
add
xor
fdivl
dec
add
dec
push
push
mov
xchg
ret
add
fimull
add
push
add
push
loopne
mov
xchg
ret
add
add
dec
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
jle
add
jle
popa
fistpl
push
mov
xchg
ret
sub
add
and
add
pop
nop
push
mov
leave
nop
jmp
jae
add
into
incb
lea
add
pusha
clc
nop
nop
nop
nop
jae
push
sbb
add
mov
add
and
rol
jae
nop
push
mov
leave
nop
jmp
add
sub
add
xor
push
lea
xor
add
cltd
push
lock
roll
push
and
add
clc
nop
nop
nop
nop
jae
add
outsl
add
add
das
mov
clc
nop
nop
nop
nop
jae
add
sub
add
add
cmpl
nop
push
mov
leave
nop
jmp
dec
add
add
add
test
in
mov
subl
and
rolb
add
push
add
push
inc
add
add
ja
mov
nop
nop
nop
jae
push
add
inc
add
add
sub
je
clc
nop
nop
nop
nop
jae
incb
add
jge
repnz
add
push
aaa
nop
push
mov
leave
nop
jmp
fsub
push
cmp
add
mov
sar
nop
nop
nop
jae
inc
and
jle
add
pop
ss
pop
clc
nop
nop
nop
nop
jae
push
add
add
sub
push
pop
push
mov
xchg
ret
inc
add
dec
add
popa
inc
lcall
jne
clc
nop
nop
nop
nop
jae
out
add
pop
movl
add
nop
push
mov
leave
nop
jmp
add
into
fstps
add
sub
push
clc
nop
nop
nop
nop
jae
leave
add
add
lock
and
sbb
push
mov
xchg
ret
add
sub
sub
lea
je
clc
nop
nop
nop
nop
jae
and
mov
pop
push
mov
xchg
ret
lds
add
cmp
add
clc
nop
nop
nop
nop
jae
shrb
aam
popa
lds
outsl
jae
cmp
mov
xchg
ret
add
add
add
add
add
inc
mov
test
and
add
nop
nop
nop
nop
jae
sub
and
popa
add
shl
push
mov
xchg
ret
sub
lcall
aam
mov
add
clc
nop
nop
nop
nop
jae
daa
add
add
into
sub
insl
je
clc
nop
nop
nop
nop
jae
add
add
sub
push
sub
add
nop
push
mov
leave
nop
jmp
add
add
sub
out
mov
push
mov
xchg
ret
add
add
adc
add
xor
in
leave
nop
jmp
sub
add
push
add
add
push
mov
leave
nop
jmp
inc
mov
xor
and
add
pushf
xor
in
leave
nop
jmp
and
add
add
add
add
add
mov
leave
nop
jmp
adc
add
push
add
test
adc
add
nop
nop
nop
nop
jae
test
es
or
mov
clc
nop
nop
nop
nop
jae
add
add
push
add
jb
add
enter
or
nop
nop
nop
nop
jae
xor
flds
xor
outsl
and
xor
mov
xchg
ret
ficoml
es
dec
cmp
push
add
out
push
mov
stc
dec
mov
mov
add
add
add
dec
jno
xchg
lods
xor
nop
push
mov
leave
nop
jmp
add
scas
add
add
lret
call
clc
nop
nop
nop
nop
jae
add
add
sbb
movl
outsb
push
inc
add
adc
add
jecxz
sbb
push
clc
nop
nop
nop
nop
jae
add
lea
add
add
pop
add
in
loop
nop
push
mov
leave
nop
jmp
and
out
add
test
add
add
and
sbb
nop
nop
jae
subb
sub
add
mov
clc
nop
nop
nop
nop
jae
daa
fiaddl
rolb
inc
andb
mov
call
pop
dec
inc
add
add
add
dec
add
rcrb
jmp
leave
out
add
add
adc
out
roll
add
add
jecxz
inc
add
add
inc
dec
incb
cmp
sti
test
push
mov
xchg
ret
cld
add
into
loopne
add
add
clc
nop
nop
nop
nop
jae
dec
add
add
lcall
nop
push
mov
leave
nop
jmp
add
add
add
fadds
roll
lcall
nop
nop
nop
nop
jae
add
cmp
sub
add
movsb
cmp
nop
nop
nop
nop
jae
leave
roll
add
sub
loopne
movswl
clc
nop
nop
nop
nop
jae
daa
fadds
xor
mov
call
clc
nop
nop
nop
nop
jae
inc
add
sub
lret
pause
push
mov
leave
nop
jmp
adc
pop
cmp
add
dec
add
in
dec
lea
clc
nop
nop
nop
nop
jae
rolb
add
add
out
add
add
mov
jne
clc
nop
nop
nop
nop
jae
loopne
jae
add
add
mov
je
sub
int
fildl
jnp
mov
push
ror
inc
add
inc
add
push
clc
nop
nop
nop
nop
jae
push
sub
add
cmp
and
incb
and
clc
nop
nop
nop
nop
jae
add
sbb
aam
push
add
mov
rclb
nop
jmp
sub
add
add
lcall
nop
jae
fisubrl
push
add
add
add
inc
inc
add
push
sub
add
add
inc
pop
push
push
mov
xchg
ret
jle
loopne
add
sub
adc
jbe
add
or
nop
nop
nop
nop
jae
out
sub
push
lcall
shll
nop
push
mov
leave
nop
jmp
add
outsl
lds
add
leave
push
push
mov
xchg
ret
test
lock
out
add
sub
fisubrl
nop
nop
nop
jae
dec
rolb
add
leave
fadds
jle
add
jle
jne
clc
nop
nop
nop
nop
jae
roll
mov
mov
leave
nop
jmp
movl
add
add
jmp
rclb
nop
jmp
adc
sub
add
sub
lods
jae
cmp
in
shr
clc
nop
nop
nop
nop
jae
sub
es
cmp
add
out
and
incb
incb
add
leave
mov
clc
nop
nop
nop
nop
jae
out
leave
andb
add
in
add
clc
nop
nop
nop
nop
jae
popa
jecxz
sub
sub
pop
dec
nop
push
mov
leave
nop
jmp
ds
pop
jge
mov
push
mov
add
nop
add
add
lret
push
add
add
xchg
dec
push
push
clc
nop
nop
nop
nop
jae
test
lock
leave
or
xor
push
mov
leave
nop
jmp
lea
push
or
add
sarl
nop
nop
jae
add
out
jae
add
jle
jge
add
roll
repz
nop
nop
nop
nop
jae
test
fiaddl
jle
add
add
shll
nop
nop
nop
nop
jae
add
cmp
and
xor
lds
add
or
nop
nop
nop
nop
jae
add
jge
inc
jb
push
mov
add
add
add
add
pop
jmp
sub
add
add
cmpb
xor
add
outsl
push
add
outsl
inc
pusha
nop
push
mov
leave
nop
jmp
sub
add
add
jecxz
into
fld1
clc
nop
nop
nop
nop
jae
mov
rolb
movsl
add
cmpb
nop
nop
nop
jae
add
inc
dec
add
lock
add
push
push
mov
xchg
ret
cmp
out
add
add
sub
add
pop
cmpsl
xchg
clc
nop
nop
nop
nop
jae
add
out
test
mov
add
clc
nop
nop
nop
nop
jae
rcll
add
sub
call
nop
nop
nop
nop
jae
fmuls
jae
add
add
add
daa
bound
push
and
pusha
add
jecxz
xor
add
clc
nop
nop
nop
nop
jae
add
scas
cmp
loopne
add
cmp
nop
jmp
movsl
rcl
add
add
movsl
fs
lods
xor
aad
out
out
clc
clc
nop
nop
nop
nop
jae
adc
add
add
push
push
mov
xchg
ret
fiaddl
out
add
movsl
add
daa
add
mov
nop
nop
nop
nop
jae
add
movsl
fnop
sub
fnstcw
aas
nop
push
mov
leave
nop
jmp
sub
leave
lods
movl
nop
nop
nop
nop
jae
inc
jecxz
adc
add
daa
add
jae
fwait
mov
clc
nop
nop
nop
nop
jae
lock
add
out
incb
nop
nop
nop
jae
sub
lock
mov
out
loope
clc
nop
nop
nop
nop
jae
add
dec
add
add
jge
adc
nop
nop
nop
jae
add
leave
push
add
add
add
jecxz
mov
out
call
inc
add
add
jae
dec
add
rorl
enter
clc
nop
nop
nop
nop
jae
fiaddl
incb
jae
add
push
clc
nop
nop
nop
nop
jae
shrl
add
add
add
dec
data16
add
add
clc
nop
nop
nop
nop
jae
ds
add
sub
in
add
inc
add
add
add
sub
add
scas
inc
push
ja
push
mov
xchg
ret
add
out
push
popa
add
mov
ficompl
add
nop
push
mov
leave
nop
jmp
or
add
inc
add
out
ss
pop
clc
nop
nop
nop
nop
jae
mov
add
jecxz
add
sbb
nop
nop
nop
nop
jae
add
add
lock
jmp
scas
movsl
push
add
cld
add
sub
push
push
dec
jle
xor
and
jl
fistpl
clc
nop
nop
nop
nop
jae
add
add
aam
popa
push
mov
mov
addl
dec
add
add
adc
or
testl
clc
nop
nop
nop
nop
jae
add
add
add
dec
das
push
mov
jno
dec
mov
mov
dec
sahf
mov
mov
push
add
imul
clc
cld
clc
nop
nop
nop
nop
jae
sub
dec
add
add
out
add
les
je
add
push
mov
call
or
ret
add
add
loopne
movl
shlb
push
mov
xchg
ret
scas
dec
add
roll
fsubrs
loopne
testl
leave
push
clc
nop
nop
nop
nop
jae
cld
add
add
addb
sub
mov
clc
nop
nop
nop
nop
jae
and
out
push
sub
add
xor
mov
push
clc
nop
nop
nop
nop
jae
jle
add
lock
mov
nop
nop
nop
nop
jae
add
into
add
fiaddl
lcall
xchg
in
leave
nop
jmp
and
movsl
test
sub
pop
sub
and
outsl
add
clc
nop
nop
nop
nop
jae
add
rorb
jecxz
sar
arpl
inc
and
push
mov
leave
nop
jmp
es
leave
sub
out
clc
nop
nop
nop
nop
jae
rolb
lods
sbb
add
push
mov
leave
nop
jmp
flds
add
out
add
and
push
mov
cmp
push
pop
add
or
cmp
loopne
lock
add
and
jmp
in
leave
nop
jmp
add
add
sub
push
add
jge
push
mov
xchg
ret
add
fsubs
lds
fiaddl
add
adc
add
nop
nop
nop
jae
add
push
test
add
add
or
nop
nop
nop
nop
jae
add
add
add
push
push
add
xor
clc
nop
nop
nop
nop
jae
add
rol
addb
push
cwtl
xchg
mov
clc
nop
nop
nop
nop
jae
add
inc
pop
fiaddl
jae
xor
mov
nop
push
mov
leave
nop
jmp
lods
cmp
orb
add
in
push
nop
push
mov
leave
nop
jmp
add
fiaddl
add
lcall
clc
nop
nop
nop
nop
jae
fldcw
daa
add
add
add
jb
fistpl
clc
nop
nop
nop
nop
jae
lods
push
sbb
add
dec
out
leave
sub
incb
mov
nop
nop
nop
nop
jae
cld
lea
shlb
add
clc
nop
nop
nop
nop
jae
fisubl
add
xchg
mov
xchg
ret
add
cmp
add
add
clc
nop
nop
nop
nop
jae
incb
add
addb
enter
sub
nop
nop
nop
nop
jae
add
dec
add
add
loopne
test
push
nop
push
mov
leave
nop
jmp
rolb
lea
add
add
add
aas
add
imul
incl
inc
push
add
add
notb
call
nop
jmp
testl
roll
nop
nop
nop
jae
sub
add
add
dec
add
add
jmp
clc
nop
nop
nop
nop
jae
sar
add
add
cmp
fisttpll
test
icebp
clc
nop
nop
nop
nop
jae
lcall
jl
add
push
or
mov
xchg
ret
fcmovu
add
add
mov
decb
sub
incb
nop
nop
nop
jae
add
cmp
add
push
cld
add
fxch
push
push
mov
xchg
ret
add
shrb
add
fisubl
jge
daa
add
sbb
popa
clc
nop
nop
nop
nop
jae
sub
add
out
sbb
add
push
push
mov
fdivr
nop
nop
nop
nop
jae
add
push
jle
add
jge
add
sbb
adc
nop
push
mov
leave
nop
jmp
mov
jecxz
popa
fadds
lock
nop
push
mov
leave
nop
jmp
lods
jae
jae
add
dec
mov
push
es
jecxz
nop
nop
nop
nop
jae
subb
sub
movl
pop
clc
nop
nop
nop
nop
jae
add
test
add
push
add
sub
ret
add
push
mov
xchg
ret
out
push
add
add
add
mov
clc
nop
nop
nop
nop
jae
jle
add
addb
add
nop
nop
nop
jae
movl
inc
add
ss
repz
nop
nop
nop
nop
jae
inc
es
add
out
dec
add
and
clc
nop
nop
nop
nop
jae
push
push
lock
add
cmp
mov
add
add
pop
pop
addr16
xchg
pop
add
nop
nop
jae
mov
add
roll
add
iret
push
clc
nop
nop
nop
nop
jae
add
add
out
add
jge
add
insb
sbb
jnp
sbb
add
clc
nop
nop
nop
nop
jae
jge
add
subb
rcrb
call
clc
nop
nop
nop
nop
jae
push
add
add
push
div
clc
nop
nop
nop
nop
jae
fadds
fidivrl
add
jge
cmp
add
or
nop
push
mov
leave
nop
jmp
roll
add
add
dec
add
pusha
incb
nop
nop
nop
nop
jae
popa
outsl
add
sub
lsl
clc
nop
nop
nop
nop
jae
push
into
into
pop
and
add
and
add
clc
nop
nop
nop
nop
jae
test
add
add
jecxz
push
clc
nop
nop
nop
nop
jae
incb
add
loopne
movl
hlt
out
rep
clc
nop
nop
nop
nop
jae
push
add
outsl
into
movsl
add
lea
push
mov
xchg
ret
add
add
pop
incb
flds
add
daa
mov
clc
nop
nop
nop
nop
jae
xor
add
scas
rolb
add
adc
xor
push
clc
nop
nop
nop
nop
jae
add
inc
sub
add
lods
dec
sarb
pop
out
adc
in
leave
nop
jmp
add
lods
cmp
add
add
add
out
fisttps
nop
nop
nop
jae
add
add
fadds
out
test
lock
nop
nop
nop
jae
add
subb
add
adc
nop
nop
nop
jae
sub
add
sub
testl
push
and
push
mov
leave
nop
jmp
or
add
push
scas
lcall
das
call
nop
push
mov
leave
nop
jmp
lds
fiaddl
add
sub
nop
nop
nop
jae
sbb
rolb
dec
outsl
xorb
add
add
cmpsl
pop
clc
nop
nop
nop
nop
jae
add
add
dec
and
push
popa
sub
pop
shl
add
nop
push
mov
leave
nop
jmp
add
lock
add
add
add
clc
dec
inc
add
add
jae
add
es
add
push
nop
push
mov
leave
nop
jmp
add
push
add
add
es
push
clc
nop
nop
nop
nop
jae
xor
add
fsubrs
mov
add
clc
nop
nop
nop
nop
jae
test
inc
mov
add
push
clc
nop
nop
nop
nop
jae
add
sub
add
add
add
push
clc
nop
nop
nop
nop
jae
sub
shlb
sub
daa
dec
in
clc
nop
nop
nop
nop
jae
mov
dec
push
add
movl
push
mov
xchg
ret
add
pop
lods
add
shl
add
push
aas
fistpl
push
mov
xchg
ret
test
add
sbb
add
add
cmp
nop
nop
nop
nop
jae
dec
push
add
sbb
add
add
push
into
jg
call
inc
add
dec
test
add
jle
add
jmp
dec
popa
daa
into
add
and
mov
xor
add
add
insl
sub
clc
nop
nop
nop
nop
jae
sbb
add
add
fmul
fwait
nop
push
mov
leave
nop
jmp
sbb
add
or
and
add
push
add
push
sub
nop
nop
nop
nop
jae
add
add
add
jecxz
add
xor
nop
nop
jae
add
add
lods
aam
fiaddl
adcb
rclb
dec
sub
decb
xchg
mov
clc
nop
nop
nop
nop
jae
add
outsl
test
add
add
push
mov
xchg
ret
add
sbb
add
inc
add
scas
pop
clc
nop
nop
nop
nop
jae
test
lock
add
add
popa
inc
add
or
push
xchg
xor
nop
nop
jae
add
rolb
testl
or
fistpl
add
mov
add
lcall
jmp
nop
nop
jae
add
sub
add
out
add
dec
cmp
nop
nop
nop
nop
jae
and
add
and
add
jae
mov
nop
nop
nop
jae
add
add
add
lods
add
leave
sub
mov
rclb
jnp
add
into
sub
add
add
mov
nop
nop
nop
jae
incb
add
lods
test
sarb
nop
nop
nop
jae
add
add
xor
repz
clc
nop
nop
nop
nop
jae
jle
add
jecxz
add
add
mov
sti
add
add
nop
jmp
add
add
add
or
jnp
testl
nop
nop
nop
nop
jae
test
add
nop
nop
nop
nop
jae
out
add
push
add
into
add
lock
adc
nop
nop
nop
nop
jae
and
add
fiaddl
add
add
insb
dec
jmp
add
outsl
add
popa
add
add
add
mov
sub
nop
nop
nop
nop
jae
and
add
sbb
inc
add
mov
idiv
add
sahf
add
cli
lret
cwtl
add
in
add
push
adc
lahf
mov
loop
cmpsl
add
clc
nop
nop
nop
nop
jae
sub
testl
add
pop
dec
nop
push
mov
leave
nop
jmp
add
add
loopne
push
sbb
push
clc
nop
nop
nop
nop
jae
daa
add
add
add
add
leave
adc
nop
nop
nop
jae
lods
test
jae
pop
inc
add
cmp
mov
clc
nop
nop
nop
nop
jae
adc
leave
and
xor
rolb
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
rorl
mov
xchg
ret
add
add
push
cmp
add
add
nop
nop
nop
jae
add
lds
add
out
add
jns
call
nop
jae
add
mov
jmp
clc
nop
nop
nop
nop
jae
testl
add
add
shr
clc
nop
nop
nop
nop
jae
add
add
and
mov
dec
add
and
bound
mov
test
nop
push
mov
leave
nop
jmp
add
and
add
cmp
mov
jp
mov
push
add
roll
push
jle
test
adc
add
add
mov
push
mov
xchg
ret
movsl
add
dec
add
movsl
add
inc
lcall
popf
testl
nop
push
mov
leave
nop
jmp
push
add
push
push
push
add
inc
add
lret
push
nop
push
mov
leave
nop
jmp
push
add
out
test
les
clc
nop
nop
nop
nop
jae
add
adc
add
lea
popa
outsb
add
push
call
clc
nop
nop
nop
nop
jae
add
add
fsub
ficoml
test
nop
push
mov
leave
nop
jmp
sub
add
and
push
add
and
sub
jecxz
clc
nop
nop
nop
nop
jae
mov
cmpb
or
cmp
scas
out
movzwl
clc
nop
nop
nop
nop
jae
sbb
aam
mov
mov
pop
pop
push
mov
xchg
ret
add
sub
add
sub
insl
pusha
clc
nop
nop
nop
nop
jae
sub
mov
out
leave
fiaddl
dec
cld
xchg
cmp
clc
nop
nop
nop
nop
jae
add
push
add
ficoml
mov
xchg
ret
fisubrl
out
inc
outsl
fimull
mov
xchg
ret
add
pop
inc
add
and
test
jl
push
clc
nop
nop
nop
nop
jae
cmp
lds
add
add
add
add
sbb
nop
nop
nop
nop
jae
add
push
aam
shrb
mov
aad
mov
add
add
fnstcw
add
cmp
mov
clc
nop
nop
nop
nop
jae
add
add
into
roll
sub
call
push
mov
add
add
dec
add
add
add
hlt
pop
add
out
add
call
add
cmp
add
into
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
test
cmpsl
add
clc
nop
nop
nop
nop
jae
cmp
lock
add
add
cmpsl
push
push
mov
xchg
ret
aam
add
add
out
lds
or
or
ret
jne
clc
nop
nop
nop
nop
jae
lock
rolb
dec
add
inc
xor
clc
nop
nop
nop
nop
jae
out
into
jle
loopne
add
sub
mov
clc
nop
nop
nop
nop
jae
pop
add
into
cld
dec
jge
mov
test
clc
nop
nop
nop
nop
jae
add
lock
sub
sub
pop
push
mov
xchg
ret
fcomp
add
add
movl
xor
clc
nop
nop
nop
nop
jae
roll
fisubrl
scas
test
sub
das
pop
clc
nop
nop
nop
nop
jae
mov
dec
testl
es
push
adc
in
add
sub
add
inc
or
call
add
std
sbb
mov
nop
nop
nop
jae
add
out
push
leave
add
add
cmc
push
clc
nop
nop
nop
nop
jae
sub
add
add
mov
and
nop
nop
nop
nop
jae
add
add
add
mov
scas
enter
nop
nop
jae
sub
add
add
add
movsl
push
mov
add
in
sbbl
mov
add
stos
test
mov
sar
call
nop
jmp
dec
lods
add
pop
loopne
sbb
push
add
add
loopne
add
sub
lcall
test
clc
nop
nop
nop
nop
jae
outsl
add
mov
mov
clc
nop
nop
nop
nop
jae
add
add
push
fisubrl
jae
sar
nop
nop
nop
nop
jae
add
add
jae
sub
test
nop
push
mov
leave
nop
jmp
add
lea
aam
dec
sub
add
sahf
gs
add
add
sbb
add
lds
cmp
push
mov
xchg
ret
dec
add
incb
add
scas
add
stos
pop
push
clc
nop
nop
nop
nop
jae
add
cmp
push
add
add
push
cli
clc
nop
nop
nop
nop
jae
test
fmuls
mov
jns
clc
nop
nop
nop
nop
jae
add
add
push
popa
fsub
add
inc
fld1
clc
nop
nop
nop
nop
jae
push
add
add
decb
push
push
mov
xchg
ret
sub
jecxz
leave
movsl
add
and
cmp
push
mov
clc
nop
nop
nop
nop
jae
daa
loopne
flds
sub
adc
add
push
clc
nop
nop
nop
nop
jae
add
push
mov
cld
add
dec
add
cmp
out
fistpl
nop
push
mov
leave
nop
jmp
pop
sub
out
lds
add
push
mov
leave
nop
jmp
dec
shlb
add
add
out
out
push
push
mov
xchg
ret
jecxz
test
add
add
add
add
movsb
arpl
test
clc
nop
nop
nop
nop
jae
sub
out
mov
push
clc
nop
nop
nop
nop
jae
add
sub
add
jle
add
insb
add
inc
cs
push
fsubrs
nop
nop
nop
jae
push
out
add
es
fnstenv
push
mov
xchg
ret
add
es
add
subb
add
sar
push
mov
leave
nop
jmp
add
add
and
sub
sbb
mov
clc
nop
nop
nop
nop
jae
add
and
push
push
mov
xchg
ret
add
add
push
out
mov
jge
repz
nop
nop
nop
nop
jae
add
leave
sub
dec
daa
sub
mov
nop
nop
nop
nop
jae
add
sub
add
scas
leave
add
roll
nop
jae
testl
rolb
add
add
cmp
pop
inc
add
sub
sub
or
out
dec
add
aad
lret
mov
leave
nop
jmp
lock
push
aam
sub
pop
add
add
movsb
cmp
inc
add
mov
nop
nop
nop
nop
jae
into
fiaddl
add
add
in
xchg
mov
clc
nop
nop
nop
nop
jae
add
and
mov
fiaddl
add
push
mov
pop
add
add
imul
dec
add
xorb
nop
nop
nop
nop
jae
and
fiaddl
add
movsl
add
shl
xchg
clc
nop
nop
nop
nop
jae
cld
add
out
jle
add
add
lret
pushl
push
mov
xchg
ret
dec
aam
es
add
dec
add
leave
cmp
push
mov
leave
nop
jmp
lcall
fld
jle
leave
sbb
add
clc
nop
nop
nop
nop
jae
add
add
sub
mov
clc
nop
nop
nop
nop
jae
add
inc
push
add
add
adc
nop
nop
jae
pop
sub
mov
jecxz
add
push
mov
std
dec
hlt
cmpsb
jno
add
adc
mov
add
push
pop
in
add
dec
xor
push
mov
xchg
ret
cmp
loopne
movsl
orb
add
xchg
fwait
clc
nop
nop
nop
nop
jae
add
loopne
inc
sub
add
loope
dec
cmp
nop
nop
nop
nop
jae
add
inc
shlb
push
loopne
mov
xchg
ret
or
add
add
popa
add
push
inc
add
add
sub
add
pushf
dec
add
inc
add
cmpsl
into
aaa
fwait
clc
nop
nop
nop
nop
jae
subb
add
add
lods
add
lock
add
xchg
in
inc
push
mov
xchg
ret
add
cmpb
cmp
aam
mov
clc
nop
nop
nop
nop
jae
scas
add
or
sub
add
add
xchg
idiv
clc
nop
nop
nop
nop
jae
into
add
aam
add
sub
stos
call
clc
nop
nop
nop
nop
jae
fcmovb
or
add
add
scas
lret
fwait
clc
nop
nop
nop
nop
jae
add
add
add
add
clc
nop
nop
nop
nop
jae
movsl
out
add
mov
cmp
test
mov
add
push
mov
xchg
ret
sub
addb
sub
xor
pop
inc
add
lods
into
add
jge
loopne
scas
loopne
fsubs
add
clc
nop
nop
nop
nop
jae
jae
push
fadds
mov
dec
add
jl
lods
push
mov
xchg
ret
test
add
pop
add
addb
jle
out
sti
mov
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
leave
add
aam
jae
cmpsb
push
push
mov
xchg
ret
add
add
add
push
add
dec
outsl
dec
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
and
nop
nop
nop
nop
jae
fiaddl
or
out
test
sub
test
mov
add
add
arpl
and
push
lds
add
js
pushf
fld1
mov
clc
nop
nop
nop
nop
jae
and
lds
lds
add
mov
clc
nop
nop
nop
nop
jae
into
add
flds
xor
add
add
cmc
fwait
clc
nop
nop
nop
nop
jae
shrb
add
add
cld
dec
lds
add
pop
push
clc
nop
nop
nop
nop
jae
flds
test
loopne
jecxz
jge
and
jno
clc
nop
nop
nop
nop
jae
add
add
popa
add
jg
clc
nop
nop
nop
nop
jae
add
add
push
clc
nop
nop
nop
nop
jae
test
add
add
lods
add
jl
xor
nop
jmp
daa
lds
add
add
push
nop
cmp
adc
dec
fisubrl
add
add
add
add
stos
nop
push
mov
leave
nop
jmp
inc
lods
add
dec
mov
lea
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
popa
cmp
add
mov
and
leave
add
sub
push
add
mov
jno
clc
nop
nop
nop
nop
jae
outsl
add
sub
dec
add
clc
nop
nop
nop
nop
jae
add
and
add
movsl
out
push
clc
nop
nop
nop
nop
jae
adc
cmp
add
push
sub
push
clc
nop
nop
nop
nop
jae
add
loopne
add
add
dec
ficoml
push
push
mov
xchg
ret
add
lock
add
add
push
sub
push
cmp
fs
jp
scas
sbb
repz
nop
nop
nop
nop
jae
xor
sub
daa
daa
jecxz
or
pusha
add
outsb
rcrb
out
fld1
nop
push
mov
leave
nop
jmp
add
add
cld
or
add
aam
lea
nop
push
mov
leave
nop
jmp
sub
out
jae
rolb
sub
aaa
and
clc
nop
nop
nop
nop
jae
sub
inc
lea
rorb
add
sub
aaa
call
clc
nop
nop
nop
nop
jae
add
or
pop
add
das
push
clc
nop
nop
nop
nop
jae
mov
lds
push
add
rclb
nop
jmp
xor
flds
add
add
add
in
push
push
mov
xchg
ret
add
cld
add
sahf
fldl
nop
nop
nop
nop
jae
lock
add
shl
rcr
xchg
mov
nop
push
mov
leave
nop
jmp
dec
sub
lea
out
lcall
fdivr
clc
nop
nop
nop
nop
jae
add
scas
add
lock
mov
clc
nop
nop
nop
nop
jae
mov
out
add
mov
push
nop
push
mov
leave
nop
jmp
dec
into
add
push
inc
ficompl
nop
nop
nop
nop
jae
add
add
popa
add
add
cmp
call
clc
nop
nop
nop
nop
jae
cmp
push
sub
push
mov
nop
push
mov
leave
nop
jmp
fisubrl
push
dec
jecxz
cmpw
nop
push
mov
leave
nop
jmp
out
add
add
mov
in
add
xchg
cmp
stc
add
incl
jns
jae
add
pushf
mov
sbb
pop
pop
lcall
into
fcmovu
inc
inc
sbbb
sub
incb
mov
xchg
inc
in
fiaddl
jge
xor
or
xchg
mov
sub
fldcw
or
incb
nop
jle
test
jbe
daa
mov
rcll
and
mov
sbb
cmpsl
add
sbb
lahf
test
cld
idivb
xor
push
mov
mov
repz
mov
dec
stos
leave
jne
enter
mov
add
rcr
cs
gs
popa
cwtl
int
sbb
add
test
cmp
mov
and
je
or
incb
jns
outsb
rcrb
adc
fwait
pop
test
cli
pop
sub
add
mov
and
sbb
xor
mov
pop
xchg
xchg
jmp
ds
sub
pop
jb
push
xchg
dec
js
int
loop
icebp
hlt
test
add
or
test
aad
inc
or
decb
push
jp
inc
sahf
push
cmp
add
or
shll
js
sub
rorl
adc
fbstp
xor
lods
mov
lock
push
pop
pushf
shrb
or
fcompl
push
popa
dec
fstpl
in
jp
adc
dec
leave
jl
dec
int
adc
ds
lods
push
lahf
inc
ds
clc
pusha
add
in
stos
pop
fwait
jno
fdivrp
bound
push
cmpsb
ficompl
hlt
pop
pop
lret
cmpsl
test
mov
add
mov
sahf
xchg
incb
leave
xchg
movsb
rolb
dec
add
jns
cltd
fisubs
cmpsb
dec
add
jge
insl
ljmp
add
ja
cmp
add
into
clc
leave
inc
sbb
gs
add
adc
adc
push
mov
cmp
insb
add
push
mov
decb
pop
lock
sub
outsb
add
repnz
ret
cmp
fcomps
addl
outsb
add
dec
aas
int3
ret
cmp
daa
jno
rcl
fs
adc
fildl
cmp
out
imul
sahf
mov
push
scas
out
fistps
fdivs
sub
xchg
adc
add
out
outsl
mov
jo
int
sbb
cmp
mov
push
push
xor
ror
push
add
daa
xchg
std
daa
enter
xchg
movsb
lock
xchg
jle
push
push
push
out
scas
jns
aas
ret
in
dec
nop
int
lcall
inc
aam
clc
ret
popf
mov
mov
arpl
pop
dec
mov
push
jae
dec
push
add
mov
sub
add
push
stos
je
mov
adc
lods
iret
lret
call
imul
loope
push
push
add
aad
or
decb
decb
in
insb
add
push
jnp
jae
jb
lods
test
jo
ficomps
loop
mov
or
or
incb
dec
dec
cli
loopne
or
incb
in
lea
xor
or
mov
xchg
dec
add
cmp
shll
xchg
sti
xchg
add
mov
add
out
and
add
cmp
jle
jle
sub
pop
cmpsb
lock
imul
xor
jecxz
push
test
sub
dec
add
sbb
or
dec
add
sub
mov
fnstenv
jns
into
fwait
push
cwtl
push
sbb
test
push
inc
inc
add
lock
jmp
push
pop
or
fstl
cmc
iret
es
insb
add
aam
leave
aad
xor
jg
pop
add
mov
sbb
mov
xor
decb
or
mov
dec
sti
or
cmpsl
pusha
add
in
orb
add
ds
es
dec
pop
inc
add
push
ja
pop
lods
ret
jmp
test
rorb
adc
movsb
sub
ljmp
loope
jg
mov
mov
test
lahf
or
mov
sbb
and
xor
pushf
xchg
int
lret
jns
mov
incb
push
add
into
dec
aas
int
push
sbb
cmp
dec
decb
and
arpl
imul
fsubrl
xchg
jne
aad
xchg
xchg
or
decb
imul
pop
sbb
cs
fimuls
cmp
arpl
mov
xor
js
or
in
jno
add
and
sub
sub
or
decb
fdivrs
and
insl
or
adc
push
jl
dec
mov
or
add
sub
add
stc
clc
adc
dec
add
push
mov
test
pop
dec
adc
imul
mov
jae
push
add
push
pop
and
jne
push
jae
ds
enter
lcall
xor
pop
sarl
cmp
dec
fsubrl
push
jge
je
in
rcll
and
jns
add
dec
xchg
popf
push
sub
popa
aas
mov
adc
add
repz
loopne
arpl
cmp
xor
andl
insl
sub
pop
jno
dec
sbb
ret
dec
xchg
push
ja
stos
test
int
lds
push
outsb
add
repnz
xorb
xchg
out
lods
adc
push
aas
notl
xchg
mov
popa
ret
ljmp
lret
rolb
in
fistpll
jmp
pop
push
arpl
ljmp
jb
add
aad
mov
inc
fs
incb
xchg
inc
jno
mov
xor
push
mov
incb
decb
push
cwtl
mov
imul
jp
int3
push
push
sub
aaa
sahf
clc
scas
sbb
jecxz
mov
push
mov
push
outsl
je
mov
comiss
mov
add
outsb
add
xchg
xor
icebp
dec
jo
andl
fwait
pop
xor
fwait
add
mov
xor
into
cmp
aad
mov
hlt
push
add
and
pop
jbe
mov
cmpsb
fbstp
orb
es
pop
or
and
incb
comiss
stos
fs
mov
add
stc
push
pop
xchg
xchg
sub
nop
in
add
addr16
stc
cmp
decb
inc
add
int3
es
pop
xchg
xor
add
cltd
inc
add
out
pop
orl
jg
sub
cmp
lret
mov
jmp
test
icebp
sub
add
jae
adc
push
adc
mov
push
mov
fwait
repz
aam
std
cmc
sarb
jnp
lret
pop
mov
popf
cli
test
ficoms
mov
pop
xor
sub
push
pop
xchg
sbb
inc
shll
mov
rolb
scas
jecxz
push
add
scas
in
jmp
mov
fs
stc
sub
pop
xchg
cmp
and
decb
push
and
add
aad
rcrl
inc
mov
insb
add
sub
mov
cmpsl
pop
inc
stc
scas
js
cmpsb
dec
xor
xor
mov
add
lock
mov
dec
in
or
daa
loopne
add
mov
ret
xchg
das
sldt
in
cmp
cmp
xchg
into
mov
das
fmulp
mov
in
xchg
jmp
cmp
pop
lds
movsl
push
call
aad
jecxz
loop
or
inc
dec
mulb
jb
int
out
insl
call
in
sub
ljmp
xor
dec
cwtl
outsb
add
fwait
push
fiadds
jns
pushf
and
mov
in
popa
adc
and
inc
repz
xor
push
dec
mov
insl
sarl
mov
ss
push
sbb
imul
incb
pushf
push
add
and
xor
xchg
pop
mov
lods
and
jge
incb
cmc
pop
cmpsb
sysexit
cwtl
and
cmp
sbb
mov
outsl
rcll
add
mov
outsl
pop
movb
or
decb
mov
sbb
sbb
stos
cmp
xchg
ja
jp
pop
dec
add
push
arpl
pusha
cmpsl
dec
dec
mov
pop
rcrl
mov
xor
add
inc
mov
mov
add
punpcklwd
incb
pop
jl
add
pop
mov
sbb
sub
mov
std
add
sti
cmp
mov
xchg
pop
test
lods
mov
or
inc
outsl
in
pop
xor
inc
add
dec
jmp
sbb
mov
cmp
and
imul
add
pusha
add
dec
adc
or
incb
je
xlat
out
out
and
push
cmpsb
mov
sbbb
std
enter
mov
push
inc
test
popf
mov
dec
add
jle
pop
sub
adc
mov
mov
xchg
test
ds
lods
adc
sub
pop
or
sbb
pop
xchg
inc
insl
or
incb
push
clc
subb
add
sbb
out
movsl
mov
ud0
jb
mov
add
dec
add
cmp
inc
inc
push
arpl
sub
inc
push
dec
movsb
std
dec
pop
fildl
outsl
mov
mov
adc
dec
add
pop
adc
mov
data16
mov
mov
outsb
add
test
movsb
xchg
iret
stos
mov
xchg
push
jne
into
mov
fucomip
or
subl
lahf
adc
add
iret
es
mov
xor
imul
je
xchg
add
mov
xor
dec
dec
cli
cs
outsb
add
outsb
lahf
fldcw
add
je
xchg
ljmp
add
pop
mov
add
pop
insb
add
adcl
cli
shr
outsb
jae
add
mulb
repnz
outsl
cwtl
adc
fucomp
hlt
mov
sarl
inc
cmpsl
jbe
cmovne
and
sub
ret
aad
mov
sbb
stos
adc
mov
mov
shll
push
ficompl
decb
jg
js
shrb
js
and
push
xor
jecxz
inc
mov
add
nop
outsl
fwait
es
incb
lret
inc
inc
push
add
ja
dec
mov
lcall
nop
sub
enter
incb
mov
lahf
in
ljmp
jg
push
arpl
sbb
jmp
dec
add
imul
mov
popa
mov
cmp
popa
mov
mov
add
arpl
add
xor
sbb
cli
jb
mov
cwtl
xchg
mov
scas
xchg
lock
adc
or
out
es
aam
add
fwait
pop
mov
les
or
lahf
xchg
test
int
sub
or
adc
fwait
iret
and
sub
adc
clc
cmp
leave
push
arpl
lcall
jge
aam
fdivl
or
outsl
nop
scas
arpl
add
daa
into
fwait
fs
shl
adc
into
testb
sarb
push
xchg
fcmovnb
add
ljmp
or
sub
xchg
roll
sub
or
xor
test
jbe
mov
xor
push
data16
dec
xchg
hlt
push
pop
fwait
aaa
and
add
out
mov
pop
mov
pop
rcrl
stc
lret
cli
test
jnp
lock
or
ss
movups
adc
incb
adc
push
cmp
xchg
sbb
jbe
mov
out
sarb
repnz
orb
test
das
push
inc
cmpsb
push
aaa
loopne
gs
xor
and
add
decb
mov
mov
dec
add
push
add
popa
and
es
cmp
dec
adcb
ds
pop
ret
pop
into
xchg
popf
jo
int
lret
sahf
mov
add
cmp
test
in
enter
lea
dec
sbb
xchg
and
jl
mov
aam
jmp
popf
push
in
icebp
or
cmp
movsl
movsb
cs
and
mov
ficoms
dec
add
outsl
addb
xor
loope
sbb
jp
aaa
push
subl
ljmp
xor
push
cmpsb
pop
rcll
stos
int3
lahf
push
notl
mov
int
insl
je
add
pushf
push
pushf
push
rclb
adc
incb
cmp
or
dec
sbb
and
add
pop
lahf
cld
into
or
push
sahf
or
js
inc
xor
fdiv
jl
or
scas
mov
sti
or
cwtl
fiadds
mov
fbld
sbb
jb
push
add
push
pop
sbb
pop
clc
frstor
add
lock
incb
add
push
cs
adc
lock
xchg
sti
leave
inc
jns
xchg
xchg
scas
ss
add
mov
inc
out
cmp
inc
inc
add
scas
shl
fnstsw
or
xor
pusha
add
addr16
add
mov
and
mov
ret
add
andb
faddp
cli
cmpsb
pop
sarl
stos
pop
jg
lret
mov
es
in
hlt
iret
inc
add
in
dec
add
push
jne
pop
icebp
push
mov
pop
fidivrs
popa
insb
add
inc
outsb
add
scas
push
cmpb
inc
call
or
mov
out
int
or
push
test
incb
add
lds
xor
or
push
inc
sbb
xor
xchg
repz
mov
aam
add
adc
decb
imul
and
rcrl
jnp
pop
stos
das
movsl
add
andl
sub
decb
pop
ret
jmp
mov
sub
js
dec
add
add
es
mov
arpl
cltd
and
loope
add
insl
add
decb
lret
mov
push
pusha
add
jne
fisttpl
dec
sbb
push
add
mov
rcrb
int3
jge
pop
xchg
pop
les
cmp
pop
ds
push
inc
sahf
insb
add
xor
scas
mov
xchg
xchg
es
lock
adc
incb
jg
fmuls
cltd
lea
mov
insb
add
data16
loop
mov
fadds
lret
xchg
and
cmp
aam
incb
jge
lcall
jae
cwtl
cli
in
mov
daa
hlt
rorl
daa
xchg
jnp
and
lock
test
jb
cmp
mov
fisubrl
stos
pop
inc
mov
fmull
adc
pop
addb
iret
bound
inc
xchg
sub
js
dec
imul
xchg
fwait
je
fisubrl
mov
inc
add
adc
repz
sbb
sub
incb
decb
lds
xchg
lret
push
add
mov
repz
std
fimull
int3
mov
out
iret
adc
inc
push
sbb
add
cmp
fcmovbe
gs
decb
jle
inc
add
xlat
xor
aam
sbb
push
ljmp
add
mov
add
enter
fcoml
xchg
outsb
adc
adcb
sbb
les
jbe
fdivrl
sub
decb
decb
dec
andps
mov
test
push
sub
incb
xchg
jo
add
clc
fisubrs
sub
lcall
cmp
dec
add
addr16
ja
mov
cwtl
push
ss
into
lods
and
adc
popa
out
push
mov
mov
popa
xor
cmp
push
xlat
mov
into
cmp
cmpl
in
rorb
testb
fs
jp
sarb
sub
loopne
and
not
mov
incb
or
lahf
int
add
ljmp
mov
adc
or
pop
mov
push
dec
add
xor
push
test
shlb
add
cmp
dec
popf
arpl
mov
lock
popf
call
add
aas
loope
push
cmp
add
in
xchg
cmp
les
add
sbb
inc
fs
mov
cmpsl
xor
adc
add
jl
xor
jno
movsb
sub
repnz
movsl
push
into
inc
cmp
xrelease
push
fnsave
add
mov
fstpt
call
jnp
and
sti
sbb
decb
fs
scas
in
fistl
push
jns
stc
addr16
xor
dec
iret
enter
arpl
add
fimuls
inc
in
xchg
fiadds
xlat
dec
imul
fnstsw
lods
fwait
xor
out
mov
mov
mov
cwtl
mov
dec
sahf
arpl
movsb
and
decb
ret
adc
dec
add
aaa
push
xchg
dec
mov
mov
xchg
orb
fs
adc
pop
push
fs
mov
ljmp
jb
insb
add
push
sbb
add
pusha
add
sbb
xor
int
scas
mov
std
push
subb
lods
lret
add
repz
jb
popa
cmp
es
jecxz
xor
fmull
fldcw
pop
cmp
xchg
lret
cmc
cmp
stos
dec
jb,pt
and
inc
lods
in
inc
add
ret
std
loope
cli
dec
jo
lock
lods
jg
add
xor
stos
neg
pushf
dec
or
and
dec
push
or
xor
loop
mov
cmp
push
imull
jb
out
jo
dec
incb
add
or
mov
and
decb
mov
shlb
jle
lock
inc
incb
pop
leave
cmp
jl
ret
sub
fidivs
cmpsb
xor
add
jmp
idivb
ret
loop
add
loopne
inc
jecxz
sbbl
pop
cmp
sub
sub
add
jns
test
mov
mov
leave
pop
pop
adc
data16
xorb
add
sub
cmp
loopne
cmpsb
repz
cmpsl
clc
movb
sbb
mov
xor
inc
push
pushf
push
shl
sbb
xchg
xor
adc
incb
add
into
mov
jnp
out
jne
inc
sub
outsl
inc
add
int
shlb
cld
adc
imul
mov
shl
in
popf
cmp
popf
mov
cmp
push
adc
scas
addr16
je
lods
iret
test
cmp
lret
inc
add
sti
iret
jle
fidivrs
mov
addb
adc
jmp
jp
push
add
loop
imul
cmp
mov
pop
movsl
sbb
pop
pop
repnz
fldcw
daa
and
incb
sbb
jb
adc
or
xor
arpl
pop
fisubrl
clc
ljmp
jge
movsb
inc
sbb
out
push
incb
lods
popf
mov
dec
pop
inc
add
or
dec
xor
rolb
hlt
arpl
sti
popa
in
sub
jno
sbb
mov
lahf
mov
jg
mov
sti
in
pop
push
lret
loop
cli
es
jae
bound
daa
rclb
cmp
add
pop
scas
jp
cmpsb
fwait
xchg
jmp
mov
int
inc
test
mov
mov
nop
leave
test
movsb
int3
inc
push
movsl
push
loopne
fstpl
mov
fldenv
ljmp
test
mov
xchg
sbb
aas
repnz
jo
ret
movsb
ds
loop
jp
rclb
inc
xor
add
decb
push
xorl
add
stc
jb
shlb
xchg
fidivl
ja
imul
jecxz
pop
sub
inc
jp
scas
sbb
repz
push
adc
cli
hlt
add
int
jo,pt
add
inc
jecxz
shlb
mov
scas
pop
sbb
decb
test
mov
popf
inc
add
enter
push
dec
insb
add
rcrb
stos
out
push
sub
jo
pop
jp
cli
add
push
cmp
and
decb
lea
pop
inc
or
mov
cmpsb
in
dec
repz
dec
add
addr16
mov
clc
out
xor
mov
xchg
stc
lods
shlb
add
stos
and
aas
sub
mov
loopne
and
incb
add
int
cmp
scas
mov
push
cwtl
lock
sbb
stos
add
shll
sbb
adc
loopne
xchg
shll
mov
push
and
das
stc
test
mov
sti
cs
pop
mov
pop
mov
fcoml
in
inc
cmp
mov
mov
popl
jns
fnstsw
lea
loope
push
pop
jp
dec
data16
inc
or
push
je
pop
mov
scas
pop
jnp
add
inc
sub
dec
add
push
push
jns
adc
cs
decb
inc
push
hlt
jge
lea
dec
out
jns
arpl
sbb
fcmovne
sub
fcoms
pop
rcr
das
imul
add
xchg
int3
insl
sbb
cmp
or
inc
sub
pop
lods
cld
pop
mov
or
rolb
stos
xchg
loopne
lret
sahf
int
dec
xchg
adc
clc
jb
mov
clc
adc
mov
cmpb
ds
adc
and
inc
das
or
cmp
lods
pop
adc
sbbb
mov
add
push
in
outsb
es
jmp
jmp
xchg
xchg
cmpsb
cld
inc
dec
add
addr16
pop
sbb
shlb
mov
pop
ja
call
movsb
jnp
fiaddl
lock
daa
sub
cs
decb
aam
jae
pop
jb
sti
loopne
sub
decb
sbb
test
dec
add
pop
jmp
dec
add
adc
fldenv
test
mov
out
jns
enter
fmulp
pop
repz
aaa
loopne
dec
iret
adc
ficoml
dec
hlt
jb
dec
jae
xor
push
stos
movb
pop
cmp
add
jae
subl
fdivl
icebp
cltd
es
jno
pusha
add
lds
decb
outsb
add
push
fisubs
xchg
fists
sbb
xchg
pushf
fisubl
jge
cmpsl
adc
ljmp
push
mov
adc
lods
sbb
cltd
stos
cmp
pop
pop
stos
jmp
xor
decb
mov
push
decb
stos
fcmovne
dec
mov
push
stos
xchg
into
movsl
call
test
mov
pusha
sub
cmp
lret
push
sub
mov
dec
push
or
movl
stos
push
ror
das
inc
xchg
loop
xor
add
scas
xchg
and
add
in
pop
incl
add
adc
pop
xor
fstpl
scas
hlt
jae
adc
std
jmp
push
inc
add
rcl
je
movsb
adc
add
in
lock
sbb
sti
mov
mov
inc
mul
dec
das
mov
data16
cmpsb
mov
loop
cvtps2pi
sub
adc
cmp
cwtl
push
jmp
add
imul
jge
cmp
push
incb
or
sbb
in
inc
sbb
stos
adc
or
in
popf
inc
test
push
xchg
popa
mov
push
sti
loop
xchg
rclb
fscale
popa
std
stos
inc
inc
add
mov
add
das
pop
sub
insb
add
sar
sub
push
call
mov
and
shlb
or
sbb
ljmp
negl
dec
lock
xchg
mov
int
add
mov
or
loope
add
test
lcall
dec
adc
dec
push
movsb
xchg
dec
add
xor
jno
and
push
mov
fbld
movsb
push
fiaddl
add
and
inc
mov
xor
mov
addr16
sub
inc
xor
dec
and
es
addr16
pop
ret
icebp
xlat
push
lock
add
sub
xor
test
scas
test
pop
adc
es
decb
fldenv
std
pop
into
push
xor
sahf
into
xor
icebp
shlb
dec
pop
in
add
fiadds
mov
sub
insb
and
incb
mov
sbb
jmp
movsl
sub
scas
jl
cs
mov
add
or
push
shlb
sub
push
pop
iret
and
loop
pop
dec
push
ret
mov
lods
sub
scas
int3
ret
call
or
pop
or
arpl
dec
stos
out
in
push
xor
decb
out
iret
sub
sub
out
mov
adc
cmp
mov
xor
inc
loopne
js
mov
bound
adc
xor
popf
fistpll
cltd
mov
add
insl
aam
mov
mov
inc
add
mov
ljmp
pop
mov
push
jg
cli
inc
add
enter
mov
cmp
dec
mov
push
pushf
pop
aas
jno
add
decb
incb
cmp
test
mov
adc
mov
sahf
incb
mov
cmp
fwait
pop
push
sbb
push
jle
add
push
leave
sbbl
int3
scas
subl
scas
push
jns
add
xchg
jg
and
scas
loope
popa
adc
xchg
out
add
test
xor
and
adc
mov
add
ffree
and
mov
std
outsb
es
cmc
shrl
call
mov
aas
cld
jne
pop
inc
sahf
les
push
xor
cmc
dec
imul
inc
cwtl
mov
pusha
add
xchg
sub
loop
fiadds
dec
xor
add
pop
mov
pop
outsl
mov
fnsave
pop
loop
or
fs
mov
das
rcrl
inc
ljmp
fst
xchg
lock
std
enter
xlat
push
xchg
add
shrl
fmuls
jmp
enter
jae
cvtpi2ps
dec
sub
pop
out
int3
test
int3
mov
add
xorl
fstps
push
xchg
js
sbb
adc
mov
fildll
cmp
add
jl
pop
inc
test
call
cmp
divb
clc
sub
incb
scas
subl
fs
sub
incb
fs
push
pop
sbb
cwtl
mov
push
nop
insl
mov
and
fdivp
lcall
ss
lcall
and
daa
mov
inc
xchg
cwtl
sub
dec
dec
ss
test
iret
adc
mov
addr16
into
rcrl
inc
inc
push
mulb
call
fwait
int3
pop
sbb
ss
clc
xor
xor
dec
mov
inc
fadds
xor
fstpl
pop
mov
or
incb
sub
jge
mov
in
mov
dec
mov
aaa
pop
jne
adc
fcomps
jmp
sub
ja
negb
and
incb
pop
fisubrs
cs
decb
inc
in
jae
ljmp
daa
fbstp
rcrb
xor
ss
mov
repnz
std
cmpsl
cli
inc
sub
decb
cmpl
add
mov
stc
cmc
fs
fcoml
cs
fmul
fsubrs
jo,pt
xor
and
int3
out
aas
jg
push
aam
in
xchg
es
xor
sbb
mov
add
mov
cmp
push
add
mov
jg
in
data16
sbb
jns
sbb
das
mov
push
rorl
cmpsb
stos
mov
jg
cmp
inc
in
pop
gs
and
aaa
push
lea
sub
lret
movnti
sub
push
out
mov
loope
mov
scas
cli
add
and
fsubrs
xor
cs
insl
dec
mov
data16
push
mov
jae
push
push
jp
add
jl
lret
dec
rcrl
or
adc
cs
fcoml
out
fs
daa
jb
sub
dec
fsts
jnp
clc
xor
push
add
cmp
js
push
cltd
add
jecxz
repnz
mov
lock
add
pop
mov
fmuls
dec
out
push
xor
es
test
add
fnstenv
test
fistl
inc
decb
out
push
jbe
sub
test
xorl
decb
add
fnstenv
pushf
push
and
cmp
mov
add
cmp
jo
outsb
add
mov
xchg
mov
dec
fsubl
lods
add
decb
and
jecxz
mov
bound
push
out
jp
loop
push
inc
dec
jbe
lcall
stos
pop
test
icebp
or
xlat
out
mov
lds
pop
orl
xchg
push
add
clc
lods
loopne
insl
jbe
and
push
movl
mov
mov
jmp
enter
add
decb
mov
jne
decb
add
test
jb
fdiv
lods
adcb
add
or
repnz
int3
loope
add
xor
mov
call
pop
pop
inc
jb
popa
adc
add
sbb
nop
ret
inc
jb
cmc
clc
in
cmpsl
xchg
adc
jae
mov
pop
das
pop
mov
push
jg
cli
cs
push
fs
decb
dec
rol
call
out
clc
mov
filds
div
jno
push
pop
add
decb
stos
jmp
enter
mov
push
jmp
cs
cmp
bound
ficoml
sub
sarl
mov
sub
ss
add
fcoms
push
sti
pushf
push
jmp
decb
mov
adc
enter
mov
test
jmp
push
ss
lds
incb
add
jbe
jae
cli
lods
push
stos
rorb
pushf
loope
out
jnp
es
aad
es
ljmp
jmp
inc
add
add
adc
rcll
mov
and
pop
inc
pop
sub
dec
jg
adc
inc
add
jns
les
mov
hlt
js
mov
add
fldt
jp
outsb
add
pop
push
inc
ret
jae
into
ja
push
push
and
into
jle
cs
arpl
jb
add
inc
rcl
xchg
cwtl
rolb
data16
js
add
pop
rclb
inc
incb
jge
in
shl
cwtl
ss
and
incb
in
leave
testl
js
notb
movsl
int
xor
jno
xchg
fimull
add
jge
mov
and
push
jno
cmp
xchg
mov
xchg
aaa
in
xor
shlb
xor
xchg
or
jns
lea
mov
lret
cmpsb
idivl
popa
push
test
test
cmp
lahf
cs
mov
jno
aam
push
into
and
leave
mov
test
add
iret
push
add
push
scas
fwait
jns
xchg
arpl
mov
daa
xorl
adc
ret
inc
mov
into
repnz
cwtl
in
sub
pop
imul
out
orb
fdivrp
cmp
inc
xor
mov
xchg
push
out
icebp
inc
fs
xchg
pushf
xchg
add
loopne
emms
aad
inc
popa
xlat
adc
aas
fimuls
sti
adc
std
push
add
mov
mov
sbb
ret
mov
pop
dec
sub
dec
rcll
mov
xchg
push
inc
add
iret
sub
incb
aas
insl
dec
add
xor
push
nop
and
dec
push
cli
add
or
inc
out
lret
mov
test
sub
out
inc
lds
push
es
incb
fptan
ss
sbb
ret
imul
je
adc
or
rcrl
mov
aaa
outsl
or
inc
push
add
decl
scas
add
xchg
inc
jbe
in
xorl
dec
fs
inc
add
mov
decb
arpl
loopne
call
sbb
jg
decb
shll
repnz
lock
add
cld
and
add
inc
ljmp
hlt
xchg
cmpsb
adc
decl
inc
or
lret
sbb
js
int3
lret
xchg
push
or
jp
xchg
jo
push
sbb
pop
push
cmpsl
mov
movsb
push
aad
movsl
dec
xchg
pop
push
lods
aad
frstor
sub
aam
decb
pop
testb
movsb
addb
pop
cmp
incb
inc
add
mov
call
xchg
jb
adc
je
xchg
scas
daa
test
add
and
inc
sub
mov
ffreep
cmp
lret
or
pop
jmp
add
into
test
pop
inc
inc
outsb
add
mov
mov
imul
sbb
jl
add
mov
ret
push
add
stos
jl
or
loop
xchg
sub
fisttpl
lahf
decl
pop
rcl
loop
xor
mov
add
sbb
add
push
jno
push
xorl
rorb
in
test
add
fsubr
pop
in
outsl
xchg
sbb
xor
insb
fsts
into
jmp
push
mov
mov
mov
test
inc
ret
mov
sbb
sub
pop
cmp
adc
dec
incb
adc
ljmp
incb
decb
icebp
hlt
cmp
lret
scas
sti
rcl
scas
popf
fs
jns
inc
add
shlb
cli
jo
cmp
in
pop
mov
and
fstpl
fistps
jno
add
sbb
dec
pop
popf
fsubs
cld
or
dec
sbbl
dec
add
fucom
into
scas
repnz
lock
pop
adc
repnz
dec
lds
jge
test
or
decb
ljmp
decb
jnp
xor
add
fisttps
mov
out
sahf
iret
loope
hlt
sarl
pop
add
in
add
outsb
add
or
scas
xchg
loopne
cs
adc
scas
loope
test
cmpsb
stos
mov
fmul
mov
loopne
cmpsb
cltd
cmpsl
sbb
aas
xchg
add
aas
fsubs
pop
push
add
jo
cwtl
rorl
add
out
clc
jne
cmp
loopne
int
les
incb
pop
pusha
add
sub
or
sbb
lds
es
inc
add
aas
jo
decl
inc
add
stos
dec
loop
stos
leave
jne
dec
scas
dec
out
push
add
incb
cmp
add
inc
add
or
ss
jae
xchg
dec
add
aaa
dec
rcrl
pop
jp
or
incb
es
jg
sbb
add
sub
inc
scas
dec
shll
aad
lret
inc
add
pusha
shr
enter
mov
cmp
icebp
sub
mov
incb
mov
je,pt
sbb
pusha
das
popa
mov
out
fcoms
out
lods
add
sub
out
xchg
add
xchg
pop
rol
and
cmp
jp
test
jp
sbb
mov
sarb
rcr
fwait
lea
imul
or
cmp
nop
sbb
dec
sarl
popl
decb
movsbl
fisttpl
add
test
js
inc
inc
xor
cmpsb
mov
fs
adc
and
mov
sbb
pop
roll
aaa
push
in
push
add
ficoms
or
fldenv
add
aas
lods
out
pop
mov
icebp
cmp
adc
or
not
imul
push
sbb
sub
leave
xchg
scas
jp
shll
pop
xor
add
and
incb
xchg
dec
mov
dec
sub
and
jmp
mov
movsb
mov
cld
or
or
sub
aas
mov
cmpl
in
inc
jno
xchg
mulb
mov
cli
movsb
mov
pop
mov
add
mov
add
dec
imul
jnp
movsl
repz
fiadds
fisttps
jg
loop
add
imul
push
enter
pushf
adc
fwait
mov
add
adc
cmc
add
sahf
cli
sub
and
out
fadds
mov
testl
xchg
cwtl
daa
inc
sub
incb
add
out
push
jnp
aad
cmc
and
inc
in
pop
movsl
adc
lea
jp
sbb
mov
repnz
dec
cmp
xchg
dec
mov
stos
jo
mov
cmp
xor
out
mov
adc
push
ret
pop
jno
jecxz
push
icebp
call
inc
mov
incb
scas
scas
mov
fistpl
add
pop
xlat
aaa
fbstp
add
inc
loope
mov
push
fwait
hlt
lods
mov
mov
jae
test
xchg
mov
gs
or
pop
mov
and
decb
jg
in
popf
loopne
outsb
add
xor
pop
fisttpll
add
mov
push
ljmp
mov
pop
in
cmp
test
mov
je
and
out
in
fwait
jne
jg
and
incb
add
scas
call
xchg
popf
fildll
add
adc
decb
push
pushf
out
sub
cmp
cli
push
add
je
inc
mov
iret
lods
mov
dec
sbb
mov
inc
stos
push
mov
adc
fs
xchg
fildll
fnstsw
inc
dec
dec
push
test
mov
inc
add
pusha
add
vpaddsw
daa
adc
add
jecxz
lods
es
fsubs
test
cmp
mov
fisubl
mov
in
pop
fs
insl
mov
pop
dec
arpl
movb
insb
jecxz
imul
pop
rcll
inc
add
sti
xchg
mov
mov
imul
sbb
not
mov
insb
stos
dec
into
xchg
xor
jmp
flds
popf
add
and
js
in
notl
and
add
xor
jnp
add
movsb
and
dec
xchg
push
add
mov
sahf
inc
aaa
fisubl
outsl
pop
shrb
mov
ficomps
push
push
jmp
mov
mov
push
cmp
sbb
mov
outsl
enter
dec
popf
xor
inc
sbb
push
adc
add
aaa
push
jmp
in
mov
mov
fs
inc
in
xlat
test
aad
mov
aam
xchg
pop
mov
fstl
nop
sub
data16
data16
scas
fistps
xchg
sbb
ljmp
dec
repz
or
fnstcw
mov
cmp
cli
sub
inc
mov
jl
cwtl
inc
mull
cmp
decb
jle
pushf
repz
arpl
out
jae
fwait
test
cli
or
out
loopne
fbstp
add
xlat
mov
sub
ds
push
fnstenv
cmp
mov
stc
popf
repnz
cmp
aaa
pop
sbb
mov
bound
cmp
cmp
stos
cmp
decb
pop
insl
insb
add
cmp
call
in
not
push
in
dec
add
add
popf
daa
and
movsl
scas
adc
adc
sbb
add
inc
sti
sub
mov
cmc
iret
pop
or
lods
dec
incb
push
mov
or
ljmp
outsl
inc
add
cmp
cmpb
add
mov
aaa
and
dec
mov
cld
imul
test
outsl
inc
add
int3
imul
ss
fwait
popf
or
data16
or
xchg
add
inc
cmp
subb
add
loopne
ljmp
push
das
cmp
mov
cmp
icebp
lahf
js
jmp
out
and
incb
out
jbe
stos
push
decb
aas
cmpsl
pop
into
mov
cmp
mov
push
pop
inc
xchg
clc
fcoml
in
mov
dec
sbb
mov
and
pushf
lods
arpl
sbb
xchg
shl
mov
mov
out
sbb
push
mov
stos
insl
pop
iret
test
fwait
jecxz
loope
inc
mov
rcll
loop
xchg
inc
add
mov
jnp
fs
sub
push
and
sbb
test
pop
xor
adc
xchg
stos
adc
or
push
notb
pop
std
adc
add
fisubl
incb
xchg
pop
add
push
pushf
jo
sti
pop
mov
jae
sbb
insb
add
stos
xor
iret
mov
lock
add
fimuls
jmp
aas
adc
fidivrl
push
rclb
test
jno
popa
stos
pushf
inc
add
out
les
fistpl
call
push
outsb
ljmp
jmp
pop
sahf
test
dec
add
push
add
add
xor
xor
pop
das
xchg
nop
push
pop
sub
mov
mov
jp
cli
mov
adc
add
inc
mov
stos
loope
add
test
stos
dec
dec
jge
aaa
push
add
xchg
and
and
call
jecxz
cmc
pop
dec
daa
mov
sbb
cs
in
jne
pop
loopne
push
fdivrl
call
mov
jne
popl
jnp
mov
cld
js
add
pusha
cmpsl
je
add
stc
xchg
mov
aam
xchg
enter
adc
lds
mov
xchg
mov
loop
add
inc
cmpsl
cli
in
push
gs
jbe
jle
lods
lods
sbb
cwtl
lret
stos
insb
add
stos
aad
mov
cmp
push
add
pushf
mov
cmp
mov
dec
xlat
mov
test
dec
add
out
and
mov
sbb
push
dec
mov
mov
jbe
mov
je
cmp
arpl
hlt
les
xor
idivb
lea
and
pop
into
push
out
das
in
adc
dec
add
in
xchg
orb
add
js
mov
jmp
js
sete
add
cltd
ret
test
enter
rep
gs
add
adc
ror
mov
imul
sbb
repz
clc
add
jge
je
mov
mov
outsb
add
or
clc
inc
incb
add
lock
jb
test
xor
pushf
mov
add
pop
loop
add
les
mov
add
and
insb
add
ljmp
test
fsubrs
lret
fs
test
adc
xor
xchg
or
inc
pop
mov
xchg
pop
repz
test
adc
faddl
add
push
fisttpl
xor
into
push
jo
addr16
shrl
xor
mov
je
cmp
mov
adc
hlt
push
pop
outsb
add
or
decb
mov
sub
cmc
movl
fists
leave
bound
push
sub
mov
add
jmp
dec
jo
iret
xchg
pop
add
push
decb
decb
and
push
mov
xor
and
add
jle
hlt
cmpl
and
incb
pop
mov
xor
adc
mov
mov
cmpsl
dec
add
push
dec
decb
dec
repz
add
and
decb
sbb
jmp
jo
pop
mov
jmp
adc
or
pushf
sbb
mov
lret
jbe
test
push
out
lea
or
decb
xor
movsb
cli
or
popa
mov
inc
ja
imul
dec
adc
insl
push
addb
cmp
mov
xor
mov
shlb
sub
push
icebp
mov
mov
push
cli
adc
xchg
push
decb
push
push
lret
push
or
test
pmaddwd
fimull
je
and
jae
jecxz
das
jg
inc
add
push
add
incl
dec
sub
push
jo
orb
hlt
push
xor
cmpl
push
iret
fs
dec
mov
push
add
mov
jmp
sbb
sbb
mov
mov
orl
incb
fwait
jl
outsl
int3
xchg
sbb
stos
push
xchg
push
lea
flds
mov
adc
stc
pop
cmovge
xchg
add
dec
add
cmp
cmp
sub
sahf
mov
arpl
incb
mov
cwtl
cmpsl
or
cs
das
cwtl
bound
sub
adc
xor
xorb
or
dec
add
outsb
jp
add
mov
das
shrl
imul
stos
or
dec
mov
add
cmpsb
into
adc
lds
repnz
sub
popf
or
mov
fmulp
push
cmp
sarb
or
pop
stc
rcl
mov
pop
cmc
inc
jno
mov
xor
xor
int3
pop
jl
add
add
incb
jmp
dec
inc
add
jae
jp
sti
cwtl
and
decb
orb
xchg
dec
adc
mov
out
ljmp
es
cmp
jp
in
je
cmpb
lods
push
add
mov
insl
testb
negl
fwait
pushf
outsl
mov
outsl
dec
mov
sahf
xcrypt-cbc
cmpsl
adc
int3
mov
in
cmp
loop
out
test
inc
inc
add
add
stos
pop
cmp
cli
inc
dec
cmpb
cmp
add
hlt
outsl
or
fdivs
push
ljmp
add
adc
aaa
sahf
fcmovnb
movsl
fdivrs
mov
decb
xlat
mov
popf
dec
out
push
add
stos
pop
pop
pop
xchg
arpl
lock
mov
and
mov
push
fwait
sbb
decb
je
mov
and
jnp
iret
or
pop
daa
test
push
xchg
lods
fistpl
dec
in
popf
dec
mov
cmp
xor
add
add
das
cmp
inc
insl
test
ss
adc
movsl
dec
add
stc
call
cmp
loop
mov
jmp
mov
lahf
es
cmp
xor
fisttps
pop
mov
sbb
jns
cltd
mov
dec
xchg
ss
in
pusha
jno
pop
subb
fnstenv
shll
and
movsb
decl
mov
mov
mov
fnsave
fsubrs
ret
movsb
cli
xor
inc
jbe
push
lods
adcl
and
and
ljmp
imul
jl
inc
add
pop
pop
mov
in
mov
ds
xor
xor
xor
frstor
adc
decb
cli
call
xlat
stos
roll
ret
cltd
sbb
jmp
in
cmp
sub
incb
cwtl
xchg
push
scas
inc
or
jb
sub
push
xchg
jo
and
mov
add
mov
incb
or
add
aam
sbb
xchg
add
inc
jmp
into
jge
insb
push
jne
jne
lock
mov
mov
or
decb
add
sub
jo
loop
data16
xor
out
dec
fbld
lods
movsb
daa
mov
in
mov
cmp
in
movsl
pop
popa
test
or
mov
cltd
shr
dec
call
incb
dec
cmp
repnz
mov
xlat
mov
add
roll
fldl
mov
ljmp
loope
xchg
cmp
pop
pop
cmp
sub
mov
mov
das
call
sub
jle
cmpsb
testl
insb
add
sub
push
test
xor
sub
dec
add
cmpsb
sti
cmpsb
ds
adc
fmul
cli
inc
cmp
push
xchg
jmp
inc
mov
in
in
aas
pop
or
incb
add
movsl
jns
sbb
fwait
mov
add
push
lcall
add
imul
add
lahf
xor
xchg
dec
or
mov
enter
incb
sbb
inc
jo
mov
xchg
out
mov
incb
and
mov
jmp
sbb
inc
dec
add
jnp
add
or
loopne
mov
sbb
sbb
icebp
pusha
add
ds
lret
jbe
xchg
mov
rclb
xor
lahf
iret
arpl
push
fsubrs
mov
out
iret
sub
decb
data16
xchg
cmp
cmp
jl
mov
fbstp
inc
dec
sub
in
je
and
std
jecxz
pop
jp
cmp
sahf
or
aad
cmp
or
jbe
je
or
decb
adc
pop
or
xorb
sub
sbb
loop
and
xchg
outsl
lcall
pop
data16
cltd
lcall
icebp
ds
push
sub
int3
aaa
imul
pop
arpl
popa
mov
cs
cwtl
pop
jecxz
movsb
xchg
dec
decb
or
movsb
jg
repnz
mov
cmp
fildll
dec
sti
lds
stc
mov
adc
and
aam
inc
fdivs
xchg
and
xchg
test
jo
mov
xor
repz
fadds
mov
shll
mov
jnp
rcrl
mov
sbb
add
mov
pop
and
loop
adc
xor
fldenv
addr16
add
push
enter
cmp
fnsave
in
decb
pop
lcall
inc
add
xor
sub
decb
jge
or
pop
add
jmp
cmp
push
rol
sub
dec
xchg
loopne
push
push
enter
stos
mov
jns
in
addr16
sbb
pop
shlb
loope
adc
add
stc
adc
cwtl
fistpl
add
push
aad
dec
ret
cmp
jl
sbb
mov
mov
cwtl
add
decb
xchg
test
es
xchg
int
add
in
add
mov
mov
add
xor
int3
xchg
pop
hlt
loopne
jo
enter
fstp
lock
and
popa
rclb
pop
and
data16
inc
ret
mov
movb
ss
adc
stos
je
jmp
fwait
aad
hlt
mov
add
data16
incb
push
rdmsr
sub
fildl
decb
add
dec
aam
push
add
int
sbb
js
roll
add
int3
xchg
out
fstpt
mov
test
sub
incb
insb
add
sti
adc
stos
aam
mov
or
mov
and
pusha
mov
testb
mov
roll
xchg
mov
adc
push
incb
sbb
out
xor
movsb
testl
test
das
jb
test
leave
aad
xor
mov
inc
mov
insl
test
popf
inc
and
push
cwtl
pop
xor
push
mov
jmp
inc
add
jne
movl
add
cmp
add
loop
add
xlat
or
push
and
pop
jmp
decb
repnz
xchg
mov
das
jns
push
popf
out
icebp
sbb
fcoml
scas
fildl
add
or
mov
stc
pop
mov
sti
loope
pop
dec
add
out
rorl
inc
add
pop
pushf
cmc
dec
push
add
adc
dec
push
xchg
xor
test
sub
lcall
adc
testl
test
imull
dec
dec
xchg
add
sbb
outsl
movb
outsl
dec
add
rcl
mov
add
data16
xchg
mov
incb
add
dec
add
mov
sbb
sbbb
mov
push
sub
add
jo
fisttpll
incb
movsb
dec
sbb
xor
sub
add
jl
lret
jns
add
pop
xchg
data16
testb
je
nop
jne
sti
adc
xor
mov
cmpsl
jecxz
pop
loop
pushf
scas
loopne
push
jmp
notb
insl
inc
dec
cmp
fs
and
add
sbb
lahf
inc
jge
lds
cld
lea
pop
jecxz
xchg
fcoms
bnd
ficoms
cmp
popa
and
push
inc
sbb
or
mov
movsl
hlt
negb
fildl
adc
and
add
lods
lods
cmc
sahf
pushl
and
decb
cmpsl
data16
fxam
loope
popf
mov
enter
jle
ljmp
xchg
in
hlt
xchg
or
xchg
fstps
adc
or
repnz
mov
outsb
add
mov
jne
xor
rcrb
paddusw
adc
ss
decb
mov
sub
decb
or
jge
pop
les
push
sub
decb
andl
cwtl
or
ja
or
jne
mov
adc
pop
mov
cltd
sub
xor
aad
popf
es
xor
test
adc
dec
iret
mov
xchg
cmp
fsubr
xchg
mov
cmp
stos
cmc
in
testb
shll
pop
or
push
daa
inc
ss
aad
test
nop
into
mov
sub
in
push
cmp
push
pusha
decb
cwtl
sub
mov
pop
add
out
mov
cltd
les
add
stos
mov
call
xchg
cs
call
and
sbb
hlt
int3
out
jg
loope
xchg
sarl
icebp
or
mov
das
inc
add
out
sub
je
sbb
mov
add
int
add
mov
mov
sbb
je
push
adc
sar
inc
cs
insl
loop
add
mov
and
loopne
les
addr16
inc
dec
cwtl
jbe
xchg
xchg
idivl
ds
jne
stos
out
decb
mov
jb
mov
fstpl
pusha
jmp
dec
add
mov
outsb
out
outsl
xchg
xor
mov
inc
jb
roll
shrb
pop
ds
mov
iret
sub
psubw
jg
add
fs
aaa
imul
js
shlb
loop
mov
xor
mov
sbb
inc
add
adc
fstps
fcmove
lock
lahf
mov
ds
adc
incb
clc
sbb
sahf
das
pop
aaa
out
add
xchg
dec
push
repnz
loop
fwait
mov
mov
cmc
hlt
jne
inc
jge
sbb
movsb
jne
jg
sti
cmp
fyl2x
cmc
testl
add
insl
ja
hlt
mov
dec
jne
inc
add
sbb
pop
xor
and
and
and
decb
sti
divl
pop
std
mov
jb
push
xchg
cmpsl
mov
loopne
mov
push
mov
add
mov
sub
xor
adc
incb
lahf
mov
jl
mov
stos
insl
sub
xchg
pop
test
dec
mov
icebp
cltd
mov
mov
add
scas
jb
xor
cmp
int3
scas
in
insb
scas
cltd
inc
add
decb
pop
push
insb
dec
adc
lret
fbld
cs
push
pop
sti
jae
mov
adc
fs
jns
notl
mov
pop
testb
adc
pop
mov
mov
loopne
jge
sub
adc
add
repnz
jmp
pop
cmpsb
mov
push
sbb
pop
add
aad
add
add
push
pop
jno
dec
decb
add
add
jmp
add
aad
adc
add
fwait
inc
add
dec
add
push
fadds
jne
fmull
bound
pop
pop
cwtl
and
fsts
popf
mov
jae
pop
imul
mov
pop
add
fcoml
outsb
add
lahf
mov
add
adc
icebp
adc
aas
popa
repnz
add
mov
add
cmp
push
fbld
rolb
cmc
fisubrs
mov
add
xor
outsb
add
cmpsl
sarb
mov
incb
aas
jns
mov
jecxz
into
mov
fistps
lock
loop
xlat
roll
sub
mov
out
arpl
aad
in
push
fnsave
inc
loopew
adc
inc
xor
test
jle
popa
jo
mov
mov
decb
mov
or
cmp
add
or
lret
dec
sub
subb
pop
lods
lods
iret
xor
mov
ljmp
and
lock
fidivrs
decb
dec
adc
decb
cmp
pop
imul
cmp
or
dec
data16
cmp
pop
je
aad
xchg
shll
pop
mov
push
gs
or
xchg
std
push
jns
icebp
loopne
xchg
sbb
pop
xchg
or
push
mov
pop
idiv
dec
fcmovu
rcr
andb
push
pusha
mov
mov
sbb
push
arpl
sub
dec
in
shrb
clc
movsb
enter
fwait
test
aam
das
jmp
pop
std
xor
outsb
add
xor
or
ret
sub
cmp
incb
incb
cmp
xor
pop
sub
shrl
sbb
push
out
cli
sbb
and
dec
mov
add
test
xchg
mov
jne
dec
lcall
push
push
shlb
add
incb
mov
loop
mov
lcall
nop
cmp
push
movsl
call
fmull
add
mov
xchg
push
outsl
push
test
repz
cmp
stc
jns
jge
jp
add
pop
ret
jmp
add
sbb
inc
data16
repnz
mov
mov
push
sub
xor
insb
pusha
test
xchg
adc
fimuls
add
mov
and
rol
mov
fwait
mov
mov
xchg
cltd
stos
popa
or
loop
mov
int
out
mov
inc
bnd
xorb
mov
inc
add
and
sahf
cmp
scas
inc
add
push
dec
sbb
xchg
hlt
sbb
mov
add
pop
js
dec
add
repnz
add
movsl
add
push
ss
out
sub
dec
int3
and
push
mov
jbe
test
test
add
out
jo
jge
adc
dec
jp
xor
data16
pop
shll
call
inc
inc
repnz
in
shlb
cmp
test
ljmp
sbb
mov
push
cmp
push
or
decb
xchg
push
mov
inc
mov
push
out
xor
push
xchg
aam
jne
hlt
popf
outsl
in
sbb
andb
ficoml
jns
and
cmp
sub
xor
mov
sarl
inc
or
jno
jb
mov
imul
fbstp
js
dec
add
int3
fisubrs
ja
adc
out
mov
push
std
mov
add
outsb
sub
in
dec
sub
fucomp
popl
mov
repz
sub
pusha
repnz
or
hlt
jnp
xchg
ret
add
movsb
arpl
pusha
add
dec
inc
popf
and
dec
jecxz
inc
insl
fmull
stos
cmp
or
int
add
insl
rorb
add
adc
push
jge
sub
outsl
cld
mov
pusha
add
mov
lods
mov
pop
cmp
push
adc
cmpsb
arpl
mov
jae
insl
pop
xchg
sbb
push
rcl
add
dec
pop
pop
call
mov
add
jecxz
andl
leave
dec
add
int3
pop
pushf
push
sbb
loop
sub
xor
push
sub
aam
jnp
add
test
adc
and
test
push
scas
xchg
ds
in
jmp
shrl
ret
sarb
mov
add
mov
fiadds
mov
sbb
leave
push
loop
movsb
and
addb
stos
out
out
fcoms
xchg
mov
lret
jbe
in
mov
add
dec
add
mov
clc
fwait
xchg
imul
add
aam
inc
add
cmp
jb
test
mov
jbe
and
decb
popa
adc
add
xchg
aaa
sahf
iret
cli
divb
lock
inc
add
out
mov
add
xchg
sti
pusha
mov
jns
adc
dec
in
push
movsb
outsb
js
inc
add
pop
rcrb
mov
mov
sarb
pop
popa
or
and
xchg
add
adc
insl
xor
es
fiadds
xor
aam
stos
lods
push
xchg
pop
mov
leave
mov
inc
pop
jb
je
cltd
mov
imul
sub
pop
fstpl
sbb
sub
and
insl
cmp
cmp
lret
decb
mov
mov
testl
jg
inc
fcomp
outsl
jo
xor
repz
lea
add
push
pop
push
mulps
dec
out
mov
xchg
cmp
add
shll
stos
das
out
ja
adc
jle
test
xchg
addl
mov
and
dec
jo
pop
addr16
pop
push
push
dec
cld
mov
sbb
xchg
jae
mov
xchg
jle
add
incb
decb
pop
jl
mov
jge
repz
out
pusha
sbb
test
add
sti
fidivrl
mov
pop
cs
jl
cmp
popa
mov
je
sbb
call
incb
mov
inc
push
add
pop
notl
xor
outsl
out
push
popa
push
add
add
je
jbe
daa
lcall
push
add
add
aam
mov
mov
and
dec
dec
mov
out
sub
xlat
sbb
cmp
or
add
cmp
xor
rcrb
add
out
fs
xchg
loope
bnd
xor
xchg
or
mov
jo
pop
pop
cmp
enter
dec
jb
cmp
add
popf
adc
add
in
fndisi(8087
sub
subl
loopew
aam
jecxz
mov
outsl
test
adc
cltd
cmp
cltd
lods
sbb
pop
mov
dec
add
push
dec
ss
inc
imul
mov
or
cwtl
arpl
jo
jnp
mov
mov
enter
lods
inc
call
ds
repz
ret
pop
mov
incb
dec
js
inc
add
mov
cmp
push
jle
mov
add
jg
lcall
add
xchg
into
shrb
lahf
mov
pop
cmc
popa
cmc
pop
imul
add
lods
push
pop
jbe
ret
pop
mov
test
cmc
popf
xchg
insl
imul
sub
push
inc
lock
dec
sbb
ja
mov
decb
jmp
fs
arpl
test
aaa
jecxz
inc
decb
sbb
add
scas
pop
lods
xrelease
inc
aaa
mov
and
sbb
shl
and
icebp
push
int
add
cld
into
jge
xor
cld
stos
add
cwtl
setnp
jge
daa
inc
dec
jnp
test
fldt
out
jl
movsl
xor
std
xchg
mov
add
mov
push
bnd
cmp
lds
and
imul
iret
dec
add
xchg
into
into
adc
ljmp
inc
dec
popf
push
lea
decb
pop
mov
scas
jb
iret
mov
add
decb
mov
mov
cmp
mov
enter
xor
xchg
in
add
inc
incb
xlat
adc
mov
out
add
or
sbb
push
addr16
test
ret
ljmp
stc
cmpsl
sbb
sub
xchg
lods
scas
loope
mov
loope
push
test
cmp
jle
pop
negl
stc
int3
ret
rcrl
xor
lods
shll
aad
xchg
xchg
dec
xchg
pop
pusha
add
sbb
and
inc
push
hlt
xor
sbb
mov
sbb
xor
lea
pop
ror
cmc
and
and
xchg
add
stc
seta
sar
mov
jmp
ret
hlt
sbb
fstpl
in
nop
std
loop
add
mov
push
in
xor
inc
add
xchg
imul
jae
pop
in
pop
jecxz
dec
add
cmp
cli
rolb
icebp
lods
or
mov
mov
push
jb,pt
mov
gs
je
push
xchg
add
adc
add
mov
imul
lcall
incb
sub
pop
jnp
inc
shll
push
dec
add
addl
dec
mov
jo
xchg
adc
filds
bound
lahf
mov
pop
dec
addr16
pop
out
imul
pop
ljmp
pop
insb
es
fidivl
clc
push
add
orb
mov
cmpsb
test
push
rcl
xchg
scas
pop
std
popa
add
das
and
incb
mov
outsb
decb
pop
daa
fimull
jne
sub
sbb
mov
push
and
incb
xchg
lahf
add
repnz
mov
add
add
popa
sub
cs
imulb
in
faddl
mov
add
push
add
lret
or
je
in
push
lret
pusha
decb
hlt
dec
add
jbe
mov
push
xchg
push
and
fdivrs
inc
dec
sub
stos
push
add
clc
xor
gs
lahf
ret
cmp
inc
dec
fiadds
add
mov
daa
scas
push
mov
repnz
decb
add
inc
psubsb
mov
inc
add
sbb
mov
stos
sbb
incb
pop
adc
or
jnp
sub
push
in
imul
daa
pop
popa
paddusw
add
movsl
lods
fists
jno
xchg
push
int3
aam
pop
jg
sub
jo
xchg
push
js
aad
dec
call
je
inc
add
je
andb
test
lret
pop
pop
mov
dec
fwait
xlat
enter
sbbl
adc
and
lret
mov
add
push
mov
sti
cs
jnp
rolb
dec
stc
sbb
xchg
cmc
add
incb
jne
cld
js
cmp
call
dec
mov
repnz
ljmp
xchg
add
cmp
aaa
sar
jle
fs
inc
add
dec
adc
jnp
sub
mov
pop
xchg
dec
decb
mov
add
pop
xrelease
mov
hlt
leave
ss
push
push
mov
enter
xlat
in
add
mov
jmp
stos
rolb
jae
adc
je
fs
movsl
add
ss
jae
xor
xlat
adc
mov
jle
xchg
int3
adc
push
popf
push
out
scas
mov
cmp
lock
out
stc
imul
hlt
inc
add
cmp
jg
data16
stc
pop
mov
jle
inc
jl
loopne
jmp
cld
insb
add
cmp
push
addr16
repnz
je
add
nop
sbb
sbb
sub
arpl
stos
dec
add
cltd
xor
xchg
pop
mov
fldl
xchg
mov
shrb
jmp
mov
fdiv
dec
add
js
cli
jecxz
add
les
inc
add
or
incb
add
adc
jb
pusha
add
mov
adc
pushf
call
push
pop
pop
ja
xchg
sub
adc
sbb
lds
and
pop
mov
cld
jp
cltd
into
stc
rcl
sahf
bound
sbb
shrl
add
dec
icebp
mov
push
jae
imul
mov
ret
jne
fisttpll
xor
sahf
dec
pushf
out
pop
mov
loopne
and
decb
push
cltd
push
sbb
adc
fisttps
jno
add
test
add
scas
or
add
enter
test
mov
out
adc
push
and
inc
mov
xchg
lcall
or
fadd
push
jo
jno
xor
dec
lds
sub
xor
mov
lret
daa
xchg
lock
sahf
cmpl
inc
loopne
add
mov
add
jl
fistps
andl
ljmp
iret
sbb
jns
jns
add
lcall
jns
pusha
cmpsl
enter
pop
scas
or
stos
int3
mov
and
inc
inc
mov
xchg
bound
decb
add
les
je
or
xchg
cmc
add
inc
ret
pop
xor
push
pop
xor
mov
push
add
inc
jmp
add
mov
dec
add
jecxz
cmp
aad
and
icebp
adc
popa
mov
or
push
adc
pop
pop
xor
mov
mov
fidivrs
out
ds
not
mov
movsb
dec
xor
add
aas
mov
inc
imul
dec
movsb
jae
mov
inc
add
push
and
push
mov
in
or
loopne
add
xor
pop
add
sbb
stc
scas
in
fdivrs
out
incb
ss
cmp
insb
add
mov
adc
pop
or
ljmp
in
jne
popa
sub
jge
lcall
mov
add
xchg
loop
ret
or
pop
dec
jge
xorb
icebp
decb
mov
mov
xor
lods
test
mov
mov
enter
jl
xchg
xor
adc
cmpsl
mov
xor
lea
xchg
sub
xor
in
insb
add
jo
cmp
fwait
ret
mov
push
adc
ja
aam
stc
jbe
mov
mov
enter
push
add
das
dec
inc
pop
fcmove
push
mov
xor
fs
xchg
mov
cmp
and
inc
shlb
pop
std
dec
dec
add
incb
and
outsb
incb
dec
jecxz
mov
pusha
pusha
decb
add
or
adc
loop
xor
pusha
add
dec
add
add
ret
sub
add
mov
push
pop
cmpb
pop
ss
stc
test
add
incb
push
pop
inc
lret
add
adc
xchg
adc
ret
out
cs
shrl
rolb
and
test
push
in
call
jecxz
pop
push
decb
inc
cmp
or
dec
add
rcr
movsb
fidivrl
push
xor
repnz
in
in
mov
aas
loope
cmovl
mov
or
xchg
xchg
leave
jmp
test
or
gs
pop
push
addr16
decb
adc
pop
in
jb
push
lds
fwait
inc
add
call
loop
ficompl
test
jl
xchg
ss
xchg
mov
imulb
push
mov
aas
pop
pop
pop
push
xor
dec
ds
inc
add
adcb
repz
ljmp
jbe
loopnew
jg
incb
std
inc
mov
out
add
xor
mov
adc
rcl
nop
in
je
dec
fsubrl
cld
repnz
stc
faddl
jb
imul
mov
pusha
fcomi
mov
roll
test
jmp
in
in
or
stos
shlb
add
pop
leave
out
mov
push
ds
cs
or
shl
or
sbb
add
sti
jne
jmp
ror
dec
andl
cs
decb
push
xor
es
mov
clc
dec
mov
push
mov
jbe
popa
insl
cmp
stos
mov
cs
dec
lods
push
mov
inc
xor
mov
or
xchg
in
cs
enter
xchg
ja
lahf
notb
push
loopne
mov
lods
and
icebp
test
add
ja
and
pop
pusha
jno
sahf
std
push
mov
aaa
xchg
jge
xor
ljmp
in
es
jmp
mov
arpl
dec
cmp
in
mov
jmp
cmc
in
sarl
lcall
aam
pop
pop
enter
sbb
or
and
loop
jle
adc
pop
mov
mov
dec
mov
sti
jmp
pop
icebp
test
cmpsb
fstp
loop
mov
xor
sub
mov
and
rcrb
sahf
sbb
bound
sub
or
and
mov
xchg
mov
add
sub
add
adc
xchg
push
add
mov
or
outsl
ja
add
fiaddl
mov
mov
inc
add
or
lahf
inc
add
mov
add
repnz
out
movb
add
cvtps2pi
movsb
shl
xor
add
call
call
or
test
idiv
jecxz
pop
out
inc
call
inc
add
or
decb
incb
add
lods
mov
add
or
incb
push
dec
add
out
pop
stc
push
push
add
pusha
add
or
incb
repz
push
push
fiadds
fcmove
adc
decb
add
loopne
sbb
loope
lret
scas
enter
jne
aas
subl
das
fwait
xor
scas
mov
fs
sub
cmp
and
incb
test
sbb
mov
push
xor
repz
call
mov
cltd
and
decb
jmp
lret
hlt
out
pusha
test
jecxz
add
add
push
movsb
iret
mov
cmp
sbb
sub
add
imul
subb
jnp
add
xchg
or
xchg
add
jo
or
inc
push
stos
or
mov
stos
lods
mov
call
imul
adc
imul
sbb
xchg
movsl
pop
adc
shrl
and
fstps
mov
mov
es
ret
sbb
dec
in
enter
adc
dec
pop
popf
das
adc
addr16
in
mov
lock
and
in
loop
add
mov
rorb
add
mov
cmp
popa
cmp
push
aas
outsl
add
dec
xor
aam
lret
or
push
lea
xchg
push
mov
ja
mov
decb
icebp
test
incb
cmp
dec
push
push
mov
pop
adc
pop
and
sbb
loope
decb
pop
inc
pop
and
push
iret
imul
dec
add
or
fmul
lods
mov
daa
int3
pushf
push
fsub
sahf
adc
mov
decb
out
mov
decb
popf
mov
mov
ja
and
stc
fs
inc
sub
ja
das
test
cmc
int3
lcall
add
insb
add
xchg
cmc
dec
shlb
lock
sub
or
scas
lret
adc
ja
inc
sbb
cmp
mov
lret
popf
dec
inc
jmp
shlb
fisubs
loopne
loope
lret
sub
mov
dec
incb
jmp
test
mov
mov
adc
decb
insb
add
lea
adc
mov
mov
addr16
xorl
or
decb
incb
add
jno
mov
ret
mov
out
or
add
jne
stos
and
fcoms
add
ds
inc
mov
mov
in
mov
insb
add
adc
jae
aas
inc
mov
jge
inc
sub
decb
out
push
sti
mov
mov
lcall
lock
icebp
sbb
loope
inc
lcall
mov
je
cmp
imul
add
bound
ds
mov
push
xor
fisubrs
or
inc
sahf
cli
scas
std
mov
das
xor
adc
pop
mov
mov
inc
jb
stos
shrl
jle
negl
xchg
in
add
xchg
push
add
sahf
xor
repnz
jbe
inc
and
mov
adc
jg
call
ret
sahf
aam
fstp
adc
movsl
xlat
mov
pop
nop
mov
enter
xchg
xchg
cmp
idivl
xor
jecxz
jge
mov
sbb
insl
jnp
cmp
shlb
jecxz
xchg
mov
outsl
jecxz
jp
pop
adc
and
xchg
pop
sub
popa
pop
negl
popf
das
pop
cli
movsl
ja
adc
add
push
mov
mov
and
inc
out
subb
mov
clc
mov
jo
rcll
jmp
aad
leave
popf
push
pop
and
loopne
xor
sub
incb
jmp
sbb
add
jp
xor
sub
movsl
sbb
fsubl
cmp
push
dec
imul
add
test
inc
imul
add
ja
rsqrtps
cmp
jae
mov
insl
mov
dec
add
sub
jmp
jae
stos
xor
add
mov
jg
loope
and
enter
mov
enter
add
divb
add
dec
sub
decb
push
loopne
lock
loop
mov
insl
pop
jecxz
jle
out
dec
addr16
inc
jle
pop
inc
cltd
sbb
pop
mov
inc
add
jno
arpl
in
cltd
cmp
shl
dec
adc
or
daa
jp
push
daa
into
push
jecxz
jecxz,pt
les
dec
movsb
loopne
xchg
test
test
xor
mov
cmp
fs
dec
test
popa
fidivs
mov
shrb
pop
test
mov
iret
nop
xlat
add
ds
mov
imul
call
mov
mov
outsb
sbb
mov
push
push
cmc
jns
notl
insl
add
mov
pop
int
dec
or
add
shrb
add
call
push
mov
decb
add
ret
fldl
push
mov
push
xchg
stc
and
jno
xlat
push
shlb
inc
add
cs
fimull
gs
pusha
add
imul
add
arpl
fsubr
xor
add
sarl
dec
incb
push
mov
cs
decb
mov
out
jl
mov
aas
or
cmpsl
mov
insl
jge
jnp
or
movsl
fadds
inc
jne
pusha
add
int
dec
push
pop
in
fwait
stos
sub
imul
or
fimuls
and
mov
inc
jae
sbb
jl
lea
jp
sub
or
pop
xor
aas
sbb
push
pop
push
pop
push
scas
adc
xchg
push
add
js
xchg
test
dec
add
and
dec
add
mov
mov
std
call
xor
add
int3
sbb
inc
jle
test
and
decb
incb
movsl
add
mov
in
mov
insl
cmc
inc
xchg
pop
movsb
stos
popa
js
sub
incb
sub
shlb
and
adc
mov
aas
cmp
add
test
jle
fwait
les
ss
cmp
icebp
inc
decb
or
mov
fs
inc
daa
lds
rep
mov
dec
jecxz
push
push
dec
test
add
cmp
push
incb
adc
repnz
icebp
push
mov
add
je
test
decb
fcmovnb
mov
add
jb
es
aaa
cli
mov
in
push
add
fmulp
dec
push
add
test
mov
int
mov
loope
fnstcw
pop
ss
hlt
stc
cs
add
add
out
push
xchg
pop
fcomps
sub
incb
jmp
movsb
gs
add
pop
mov
aas
std
adc
lock
inc
mov
ss
call
jp
or
inc
pushf
jb
cmp
cli
in
mov
adc
mov
fadds
incb
jl
iret
mov
fwait
popa
and
ds
xor
xchg
mov
dec
sub
mov
sbb
add
ja
into
icebp
adc
das
jnp
dec
into
sub
jns
inc
add
dec
pop
sbbl
lds
adc
aam
cs
repnz
push
div
enter
cvtps2pd
add
shll
add
or
xchg
jmp
popa
mov
sub
xchg
cli
xchg
fwait
repnz
add
popa
jle
pause
cld
mov
decb
rol
mov
mov
add
xor
imul
push
pop
es
ja
subl
cmp
pop
jne
push
mov
add
xchg
sub
pop
or
dec
repz
xor
stos
xor
jmp
movsb
std
ss
add
sub
add
test
or
scas
and
add
inc
dec
or
and
hlt
outsb
add
xchg
sbb
add
adc
sbb
sti
hlt
cmp
push
cmp
or
divb
sbb
mov
leave
cmp
adc
movsb
bound
ljmp
sahf
pop
add
test
in
jb
out
mov
jns
in
adc
adc
mov
add
popf
jp
adc
pop
das
adc
push
stos
dec
sub
xchg
sub
inc
cli
movb
imul
mov
jo
into
jae
sub
dec
or
stc
xchg
or
jne
js
dec
add
sub
lahf
lcall
xor
xchg
popa
cmp
pop
out
stos
mov
cmp
stc
mov
jbe
rolb
lahf
fcoml
mov
incb
dec
push
pusha
aad
add
orl
pusha
add
cli
aas
out
sub
iret
or
incb
arpl
cwtl
ret
scas
sbb
mov
jmp
lds
lds
mov
sahf
lret
cltd
int
inc
sub
fcoml
in
jo
push
inc
add
rcll
aas
adc
jmp
inc
add
in
sub
and
decb
mov
xchg
or
dec
jns
jmp
mov
push
mov
lods
sbb
stc
mov
mov
inc
add
scas
mov
push
cmp
mov
xchg
pop
cs
sub
data16
incb
rclb
add
fwait
testb
int3
xor
add
in
sbb
int3
in
xor
decb
test
addl
dec
popa
cmpsb
scas
pop
fsubrs
inc
jp
fsub
fidivs
sbb
mov
aas
int
cmp
int
mov
lret
mov
cmp
imul
mov
mov
sub
inc
dec
add
incb
sub
jno
adc
cltd
jns
mov
test
xchg
dec
dec
cmp
out
sub
push
dec
pop
mov
addr16
adc
rcll
fldcw
sbb
xor
jmp
jl
sub
add
clc
lahf
fisttpll
ror
loop
push
push
ds
cmpsl
xchg
fwait
add
mov
sti
idivb
ret
insl
aam
sub
mov
add
iret
xlat
cmp
out
shll
gs
aaa
mov
std
js
stos
cmp
gs
push
push
ds
lret
andl
xchg
ja
loopne
cltd
inc
mov
xor
mov
jno
jbe
gs
or
aas
les
andl
sub
stos
xchg
rcrl
std
mov
icebp
fidivrs
outsl
fs
rcr
shl
ss
fwait
popf
inc
femms
sub
mov
test
repz
lret
pop
cli
test
gs
add
mov
lahf
testl
rclb
jns
test
pop
mov
mov
ljmp
mov
iret
divb
sub
data16
xchg
xchg
das
or
decb
add
cmp
aam
dec
iret
push
inc
add
decl
mov
icebp
mov
cmp
incb
mov
fs
cltd
ffreep
mov
cmc
jmp
cmpsb
inc
imull
cmpsb
add
cmpsb
fistps
xchg
add
add
jbe
insb
and
inc
mov
loop
adc
loopne
cld
sub
add
or
loop
inc
dec
mov
sbb
add
arpl
dec
jmp
sbb
test
jg
ss
je
sub
mov
push
fiaddl
dec
fdivr
adcl
aas
push
sbb
xchg
sti
mov
sub
daa
xor
xchg
xchg
stc
test
les
data16
xchg
int
cmp
sbbl
pop
cmp
add
into
xchg
test
mov
mov
pop
mov
cmp
ljmp
mov
dec
pop
out
add
push
cmp
outsb
add
jno
add
push
imul
clc
mov
and
and
pushf
mov
adc
sbb
ljmp
and
mov
mov
cmp
mov
pop
pop
and
jne
add
add
add
mov
xchg
dec
add
repnz
cld
jl
ljmp
adc
enter
add
cmpsl
mov
sbb
es
daa
sahf
outsl
orb
or
shll
cmp
jns
gs
cmp
aad
push
sbb
stc
decb
add
fisttps
decb
xchg
imul
pcmpgtw
mov
test
push
aam
repnz
cmp
cmc
subb
add
mov
call
jg
out
add
js
cmp
mov
mov
cmp
stos
cmp
call
xor
ljmp
sub
incb
dec
and
xchg
mov
xchg
mov
mov
sub
xlat
push
sub
xor
or
sbb
rep
add
lret
cmp
pop
jle
fwait
jge
xchg
cmc
ljmp
incb
cmp
jbe
add
ja
sbb
add
mov
imul
xchg
sbb
shlb
xchg
dec
inc
add
aaa
cmpsl
lret
pop
sbb
cltd
js
pop
xor
test
pop
pop
xorl
inc
sub
xchg
arpl
cmp
mov
push
or
incb
jbe
ret
arpl
pop
sub
pop
pop
pusha
add
out
push
data16
jp
aam
fbld
or
popf
jns
data16
nop
sti
movsb
dec
fidivrs
xor
pop
adc
fadds
or
xlat
push
or
adc
sahf
xchg
mov
aad
xchg
add
mulb
adcb
inc
add
lcall
cltd
push
add
gs
inc
loope
add
jle
add
test
mov
lock
sub
and
aam
cld
jmp
jge
cmpsb
loop
aas
cld
imul
incb
cmp
pop
adc
data16
scas
xchg
hlt
push
dec
pop
cs
push
lods
rcrb
fisubs
insb
mov
icebp
je
push
and
cmp
out
mov
pushf
pop
mov
test
ret
pop
xor
daa
sbb
fwait
xchg
sarb
stos
mov
sub
push
inc
imul
inc
inc
jl
lahf
lret
mov
and
mov
mov
fwait
inc
cmp
mov
scas
cmpsl
mov
lahf
xchg
push
movsl
data16
incb
mov
inc
xchg
xor
jmp
mov
push
cwtl
cmp
add
les
imul
add
lret
aas
nop
psrld
mov
mov
repz
cmc
inc
add
into
ss
xchg
xchg
lock
jbe
daa
jbe
pop
addl
push
cmp
fldt
incb
jge
cwtl
lods
outsb
add
insl
mov
imul
jnp
sahf
adc
add
push
sub
sbb
stos
inc
aam
icebp
and
dec
test
in
aam
bound
lret
xchg
jmp
add
or
shll
incb
add
add
dec
push
rcll
and
jb
lret
data16
popf
cmp
data16
incb
push
mov
fnstenv
jae
mov
add
ljmp
jo
je
add
xchg
cmc
or
aam
jecxz
ds
adc
clc
cmp
mov
xor
or
sahf
mov
cmp
push
jle
fs
adc
les
push
adc
cmp
push
cwtl
sub
decb
decb
adc
lea
gs
and
jb
icebp
add
dec
lea
testl
aaa
or
fiadds
outsb
add
and
jno
add
sbb
mov
mov
sbb
dec
into
add
push
ds
rolb
andb
or
and
insl
mov
in
out
ja
int
sbb
dec
add
cmp
mov
push
add
cmp
lahf
mov
jae
std
or
mov
add
incb
cmp
push
lods
inc
fdivrs
pop
jne
mov
lods
sbb
pop
add
push
mov
mov
xlat
cmp
icebp
dec
incb
fmuls
add
lods
aaa
stos
les
hlt
movsb
addr16
xchg
pop
lods
ljmp
lock
sbb
aad
rorb
sbb
add
out
rcrb
mov
in
cltd
test
add
cmp
mov
cmp
incb
mov
or
fildll
inc
incb
ficompl
mull
mov
fwait
adc
dec
mov
and
dec
dec
incb
xchg
insl
in
xchg
ds
popa
cmp
mov
movsb
inc
dec
in
aaa
or
cmc
ret
push
stc
and
mov
add
mov
call
dec
cwtl
adc
dec
incb
push
loope
pop
xlat
fnstsw
jae
mov
dec
sub
cmpsl
shrl
push
dec
and
rcrb
ja
in
dec
add
fnstcw
fcmovb
in
cmpsb
or
xchg
sub
dec
xor
mov
adc
cmpsb
adc
in
xchg
mov
fldt
hlt
cmp
lds
cli
add
and
inc
addr16
decb
nop
pop
dec
icebp
cmp
mov
out
or
push
aam
mov
sbb
jle
inc
idivb
incb
jns
pusha
sarl
push
add
lahf
xchg
or
dec
jns
dec
dec
call
out
imul
jo
rcrb
fsubrp
cmc
xchg
popf
data16
inc
mov
sub
incb
push
rorl
mov
xor
rolb
js
cmp
dec
or
lock
jae
out
mov
lods
push
fwait
lret
sbb
arpl
and
incb
std
rol
das
lock
icebp
sbb
nop
into
sbb
lock
test
loop
or
call
ret
add
fwait
rcll
add
sub
out
sbb
pusha
decb
add
scas
cmp
inc
jnp
cmp
dec
push
aas
in
xor
rclb
adc
mov
push
xlat
notb
add
loop
or
sbb
insb
decb
push
mov
sti
loop
out
dec
xchg
ss
adcb
incb
jle
push
jle
push
pop
cmpl
sqrtps
inc
add
inc
aad
mov
and
cmp
adcb
mov
repnz
push
test
sbb
movsl
dec
mov
inc
lcall
mov
adc
dec
xchg
inc
add
adc
sub
test
andl
add
mov
add
mov
jae
ja
jp
in
pop
std
xchg
pop
cmp
mov
cs
jle
fwait
mov
push
lds
decb
push
fisttps
push
push
pop
movsl
dec
xchg
mov
clc
add
adc
mov
and
fs
jge
es
inc
decb
push
push
and
mov
push
sbb
jg
push
les
stc
addr16
aaa
inc
int3
mov
in
out
jbe
push
xor
cmp
incb
mov
loopne
xchg
jmp
insb
add
adc
repnz
add
mov
pushl
sbb
fsts
pop
rcrb
mov
add
add
decb
add
or
pop
push
adc
xchg
cmpl
mov
jo
mov
jp
adc
mov
mov
out
push
jmp
in
pop
loopne
sbb
mov
lock
decb
cmpl
decb
add
xchg
in
xor
inc
jmp
jno
inc
out
xchg
cmp
mov
mov
adc
pop
dec
mov
fs
push
stc
into
pop
or
lods
cld
shl
sahf
test
mov
jge
xchg
mov
pop
and
ss
cltd
cltd
bound
jnp
outsb
pop
inc
ss
addr16
mov
sub
mov
mov
sti
mov
test
add
sub
sub
push
in
or
and
jo
mov
xchg
imul
push
loop
xchg
fisubs
rorl
adc
in
lret
aam
cmpsb
sti
lds
pusha
add
ds
out
adc
popa
scas
leave
push
out
mov
adc
add
jbe
leave
fldt
sbb
push
dec
fldl
jl
dec
les
adc
lcall
sub
xor
xchg
in
add
fs
fisttpl
push
pop
mov
addr16
popf
xor
lahf
daa
test
add
addr16
jle
adc
mov
jl
pop
mov
cli
dec
sar
dec
jne
pushf
jmp
add
adc
push
divb
xor
incb
incb
adc
and
cmp
cmp
jmp
add
call
pop
push
and
out
pop
out
sub
insb
add
std
cltd
loopne
fsubl
or
jns
movb
pop
aaa
mov
imul
sbb
mov
xor
adc
test
sarl
sub
lahf
repnz
adc
add
mov
scas
xchg
mov
xlat
mov
sahf
ror
mov
orb
pop
jne
inc
addr16
add
scas
rcrl
scas
arpl
nop
nop
ss
push
jnp
adc
mov
cmp
mov
adc
jg
cmc
xchg
xchg
cmp
ljmp
aas
sbb
call
mov
jecxz
mov
shlb
in
pop
sub
fsubp
shrl
xor
cltd
mov
ljmp
data16
in
in
cmpsl
mov
cltd
sbb
in
subb
mov
and
mov
decb
push
repnz
shl
addr16
xor
add
decb
repnz
add
or
pop
lock
aas
lds
int
movsl
and
fsubs
jl
insl
mov
or
into
adc
clc
test
jecxz
adc
mov
dec
fwait
xor
dec
add
loop
add
or
adc
lret
jle
push
out
stc
ljmp
notl
out
mov
xchg
cmp
into
pop
or
mov
pop
out
testl
sti
jecxz
xorb
lods
dec
add
pop
add
xchg
push
push
das
frstor
jnp
or
sbb
cmpsl
jo
pop
dec
stc
lahf
clc
push
fs
incb
dec
mov
push
rcll
xchg
and
jle
lods
inc
xchg
js
jle
sbb
add
or
jmp
stos
mov
jl
int
mov
mov
js
loop
push
pop
adc
cmp
pop
push
setne
lds
outsl
mov
inc
add
or
shll
push
popf
pushf
test
push
sub
aad
pop
test
scas
xor
inc
add
loop
es
pop
and
incb
cmc
icebp
xor
inc
add
lds
sar
jnp
dec
cmc
ds
jge
xor
mov
push
test
jmp
jle
mov
in
adc
imul
cld
pop
fdivrs
jl
add
icebp
std
cli
mov
mov
loop
xorb
pop
jmp
sti
clc
cli
dec
pop
fwait
inc
push
fstpl
sbb
sub
aaa
xchg
push
lea
sbb
cltd
dec
dec
sub
stc
in
add
into
push
inc
out
add
xor
cmp
ljmp
lods
insb
decb
fmuls
incb
inc
add
ret
rcrb
pop
es
dec
xchg
jo
outsb
add
dec
inc
jl
ret
lret
push
inc
lahf
mov
add
lods
push
pop
jmp
imull
push
xchg
cltd
pushf
adc
ja
mul
loop
arpl
shrl
inc
mov
mov
leave
shl
stos
aad
and
sbb
testl
add
mov
mov
xor
pop
push
cld
out
daa
push
sub
sub
je
fildl
jne
add
arpl
cmpsl
jns
pop
pop
sub
ja
std
xor
pop
xchg
popa
rolb
pand
adc
insb
decb
fldl
inc
dec
cmp
aad
arpl
dec
incb
add
mov
and
xchg
xchg
fdivs
fwait
repz
push
movsb
mov
rcrl
mov
stos
inc
dec
dec
pandn
decb
hlt
mov
pusha
add
aam
stc
mov
ss
mov
mov
mulb
jns
sub
decb
dec
dec
mov
jle
in
cltd
insb
jnp
incb
in
sub
fsubrs
add
lods
in
pushf
aaa
aas
sub
clc
inc
mov
test
sbb
dec
mov
arpl
test
repnz
sub
push
adc
push
push
mov
dec
mov
ret
iret
shll
rcr
mov
inc
adc
dec
fs
jge
and
popa
arpl
pop
jp
js
xor
push
sub
mov
fwait
cwtl
sbb
leave
cmp
add
sti
test
fs
rcll
mov
outsl
ds
aad
adc
xor
andb
pop
push
cmpsl
fnsave
jno
push
outsl
jl
out
push
into
int3
in
mov
fimuls
sarb
cmpsb
xorl
test
fsubrp
movsl
inc
setnp
fdivl
mov
jno
xlat
out
sub
cmpsb
sbb
out
cmp
and
icebp
xchg
cmc
fs
inc
mov
jmp
loopne
fisubs
decb
push
xor
lcall
and
mov
mov
add
xchg
jne
rcll
stc
push
adc
stos
in
addb
jbe
outsl
imul
add
cld
ds
cmp
add
pop
jge
outsb
add
ret
xlat
sbb
xchg
dec
in
aam
pop
sub
decb
addr16
pop
les
icebp
push
mov
and
decb
es
jo
fsubrl
ja
xchg
mov
ret
decb
out
dec
or
push
incb
pushf
dec
aas
and
dec
andl
xor
and
in
mov
mov
incb
xchg
sub
sub
add
cmp
mov
jnp
mov
push
decb
andb
cmpb
mov
incb
fcmovnbe
mov
cld
inc
pop
popa
add
in
imul
xlat
push
mov
sub
cli
adc
mov
jne
push
fidivl
add
and
mov
mov
pop
sahf
jmp
add
jecxz
push
jbe
int
mov
and
lods
pop
das
xchg
inc
add
xor
jne
xchg
push
adc
dec
incb
adc
dec
add
pop
test
lcall
pop
fisubl
push
enter
push
pop
adc
shll
mov
xchg
mov
adc
fsubl
incb
jl
in
dec
dec
cmp
outsb
add
xchg
ja
add
xor
ret
adc
add
pop
cltd
push
and
lcall
data16
jp
and
mov
push
adc
sbb
or
leave
repnz
ljmp
push
ret
push
loope
jmp
sti
ficoml
nop
addr16
sbb
xchg
mov
cld
mov
inc
add
daa
mov
add
and
add
into
and
sarl
insb
incb
jb
notb
imul
gs
bound
incb
xchg
mov
loop
sub
sahf
push
pop
xor
rorb
cld
cmc
jo
cmp
stos
daa
out
cmpsl
lcall
push
mov
cmpsl
add
inc
add
and
inc
xchg
dec
incb
mov
addr16
mov
lods
add
jge
push
adc
add
scas
jle
cmc
inc
add
sub
xlat
push
incb
cmp
jp
test
bound
cmp
in
pop
call
inc
mov
jns
testb
jno
pop
jae
sub
pop
xlat
fs
push
andl
push
inc
push
sbb
sbb
loope
mov
insl
pusha
cmp
fdivrl
dec
decb
or
push
or
sbb
mov
dec
add
cmp
cmpsl
mov
push
les
roll
int3
mov
push
icebp
mov
pop
mov
add
enter
std
loopne
ds
dec
int3
les
sub
popa
pop
mov
daa
sti
popf
dec
inc
add
cmp
scas
mov
jb,pt
cmc
xchg
cli
adc
inc
inc
rep
incb
dec
jo
sbb
cli
cs
fistpll
flds
jns
sub
push
adc
aaa
dec
inc
sarl
movsl
cli
mov
xor
mov
push
mov
pop
fldpi
repnz
and
incb
inc
mov
mov
push
xchg
mov
ljmp
lcall
fnsave
scas
loop
xorl
clc
sub
outsb
add
cmp
add
add
lahf
aam
lock
push
jbe
mov
push
jo
clc
mov
jecxz
into
scas
mov
xchg
movsb
cltd
adc
lret
xor
or
icebp
jb
pop
inc
xchg
or
std
fisubrl
add
push
or
dec
pop
hlt
hlt
and
dec
icebp
jb
sahf
dec
das
cmp
mov
bound
incb
jge
imul
ficompl
and
inc
jg
lcall
adc
mov
sub
cmp
hlt
call
mov
add
arpl
stc
jae
mov
push
out
outsb
add
mov
aad
incb
pop
leave
outsb
lcall
sarb
pop
inc
incb
jae
xlat
ret
adc
xchg
xor
sub
sub
inc
insl
jl
add
jne
add
pop
aaa
jnp
mov
sbb
or
adc
push
jns
clc
jle
jecxz
or
decb
pop
sbbb
icebp
orl
decb
dec
add
fcomi
and
mov
inc
clc
out
mov
shlb
fwait
pop
xchg
push
mov
add
pop
fimull
gs
inc
add
arpl
and
fcompl
add
xor
jg
add
movsl
imulb
add
add
incb
movsb
sub
ret
add
push
scas
jp
sarl
movsl
jmp
add
pop
ret
aas
in
dec
decb
push
arpl
dec
add
decb
inc
add
sub
push
in
andb
incb
pop
stos
hlt
cmpsb
inc
add
push
xchg
jmp
lods
sub
out
or
mov
dec
insb
add
mov
loopne
shll
add
ret
ror
dec
add
dec
jl
or
cmc
jmp
jae
xchg
int
and
repnz
stc
lahf
jge
mov
xchg
fisubrl
mov
arpl
xlat
negb
add
decb
mov
add
lret
jne
add
lods
nop
rcll
fidivrs
add
push
pop
push
mov
or
decb
call
or
bound
fistl
cmpsb
scas
mov
cmovge
jp
jnp
add
dec
add
sbb
jo
incb
stos
jae
jecxz
xlat
mov
and
sti
adc
sbb
pushf
fwait
pop
ret
mov
cld
int3
add
inc
roll
add
sahf
mov
jnp
lcall
mov
adc
cmp
into
inc
clc
mov
out
lods
add
jb
call
fistpll
inc
movsl
inc
add
mov
ljmp
xor
cmp
push
rorl
fcomi
dec
sbb
jle
adc
in
fmull
incb
cltd
lret
jl
mov
idivb
loop
mov
decb
decb
decb
ret
insl
scas
insl
mov
or
add
adc
aad
int3
dec
add
cltd
imul
and
sub
lods
and
inc
pop
mov
push
lret
xor
add
stc
push
pop
ret
popf
shrb
cli
subl
repnz
push
fnsave
push
incb
rcrb
stos
xchg
pusha
add
popf
insb
aas
pop
jo
add
xor
xchg
dec
xchg
inc
push
mov
idivb
lcall
call
jb
test
mov
add
mov
bound
rol
or
incb
add
aaa
jecxz
into
aaa
jo
pop
out
lock
out
sub
decb
je
iret
push
in
jbe
pop
ret
sbb
or
rcl
mov
pop
mov
loopne
sub
add
pop
xchg
cmpsb
in
test
mov
incb
xchg
insb
stos
jmp
xchg
pop
out
cmc
js
arpl
decb
push
es
and
decb
mov
dec
aas
lods
shr
dec
sbb
insb
add
mov
in
test
inc
sbb
jns
sbb
push
out
subb
sbb
jmp
insb
dec
out
pop
lret
inc
add
mov
sbb
ljmp
rcrb
or
or
sub
decb
sbb
es
imul
mov
adc
pushf
dec
jp
or
decb
pushf
and
out
repnz
stc
ror
inc
idivb
data16
xor
cmovno
and
hlt
lods
add
lret
push
or
push
jb
pop
jnp
out
and
aad
pop
movsl
inc
mov
decb
add
mov
sti
imul
sub
scas
push
clc
push
sbb
add
sbb
data16
add
clc
cmp
sbbl
test
add
fildl
decb
inc
add
cltd
std
ds
pusha
jle
inc
add
sbb
arpl
cltd
in
loop
mov
out
add
repz
lock
push
aad
ljmp
incb
add
scas
sub
clc
ret
iret
and
dec
lret
xlat
addr16
enter
mov
rorb
push
push
push
add
imul
mov
pop
outsb
add
lret
mov
int3
push
lods
dec
sub
testb
cmp
and
fidivs
data16
incb
incb
jne
dec
fsubrs
psubw
sbb
int3
xchg
lret
out
jb
or
fmuls
mov
or
mov
pop
flds
adc
add
lret
dec
mov
add
sub
push
cs
mov
inc
lock
push
mov
mov
popa
mov
imul
popf
xchg
leave
clc
lods
add
mov
pop
ficoms
mov
out
lods
addr16
in
mov
lods
clc
or
decb
add
jmp
sub
sub
incb
rcll
cmpsl
jo
call
mov
adc
incb
incb
inc
imull
add
jne
add
mov
adc
fstpl
add
adc
sub
js
jmp
pop
in
imul
incb
pop
in
push
and
incb
js
mov
fsubr
sahf
loopne
add
mov
dec
repz
jl
or
incb
mov
cs
bound
cmpsb
cmp
out
jg
mov
rorb
mov
loop
push
popa
and
cmp
mov
xchg
icebp
sub
jo
jmp
add
arpl
mov
adc
cltd
es
adc
and
inc
add
outsl
jbe
rolb
insl
into
mov
movsl
aas
xor
fcmove
and
fcoml
shll
sub
js
pushf
leave
popf
outsl
cltd
xor
add
sbb
push
or
jg
sub
push
jge
and
decb
dec
add
daa
pop
pushf
jle
js
test
loopne
scas
dec
xor
sbb
push
aas
xchg
mov
add
fbstp
lahf
jnp
leave
mov
lahf
std
mov
lock
push
mov
daa
xor
cmp
add
push
rol
ljmp
add
mov
sbb
inc
adc
subl
aad
scas
stos
cmpl
push
add
mov
mov
sahf
or
cmpsb
jmp
aam
lret
aad
and
sbb
pop
jo
repnz
test
lock
decb
incb
test
xor
movsl
pop
ss
into
adc
or
sub
add
in
iret
or
xorl
dec
adc
test
xor
cmpb
cmp
incb
ds
add
jbe
cwtl
xchg
mov
dec
add
lahf
mov
repz
pusha
xchg
sub
in
push
xchg
adc
jp
sub
fcomp
out
jne
and
push
pop
outsb
add
rcrb
push
xchg
pop
and
mov
jo
movl
shll
or
jle
aad
lods
subl
jp
inc
add
mov
mov
cmp
cmp
incb
or
jg
xchg
push
cli
call
mov
je
add
sub
decb
xchg
cmp
mov
incb
xchg
mov
rcll
add
push
xchg
mov
and
or
and
cmpl
or
dec
outsb
add
daa
adc
or
adc
jl
test
push
sub
pushf
mulb
pop
ret
inc
les
aam
push
sti
lds
insb
push
xchg
test
decb
add
imul
push
sbb
fldz
dec
push
and
mov
fs
xor
add
mov
add
jns
jecxz
hlt
incl
test
arpl
pop
icebp
jge
inc
shlb
gs
mov
add
and
test
mov
imul
aam
mov
ljmp
js
in
sub
jae
and
inc
add
in
incb
push
subb
scas
jp
test
ja
and
dec
xor
test
jl
sti
mov
mov
jl
dec
xor
popf
xor
incb
mov
and
out
mov
arpl
sbb
rol
testl
add
or
pop
dec
sti
fnstcw
mov
sub
adc
sub
sti
sbb
push
add
xor
ret
mov
rorb
dec
test
ljmp
xchg
mov
insb
add
aam
cmp
fstpl
pop
pop
aad
add
dec
push
ret
push
mov
add
loop
lea
push
pop
fs
push
xchg
data16
std
and
jmp
and
push
movsl
add
push
lahf
push
xchg
adc
and
adc
sarb
push
inc
add
sub
rcr
repnz
repz
outsb
add
adc
mov
dec
sti
data16
incb
jecxz
xor
cmp
sti
xor
mov
add
jle
fcoms
add
stos
das
adc
scas
into
jl
bound
incb
mov
in
add
incb
lds
xor
rolb
inc
incb
and
rorl
inc
and
incb
fs
mov
test
jno
xor
sub
add
pop
fnstsw
jecxz
imul
mov
add
mov
push
fcmovnb
or
pushf
es
decb
incb
add
leave
insl
lahf
dec
add
cld
add
push
incb
inc
add
xchg
cmpsb
pop
xlat
inc
add
dec
add
push
mov
fldl
dec
sarl
out
mov
inc
data16
sbb
pop
push
test
inc
add
js
fldcw
adc
adc
pop
push
xchg
imul
xchg
fadds
dec
push
push
inc
je
and
push
fld
dec
jp
test
decb
inc
nop
test
negl
dec
incb
imul
adc
aam
mov
fs
decb
rclb
ja
jb
dec
add
xchg
push
das
lods
insb
es
pop
cltd
sub
dec
add
sti
scas
cld
fsubrp
pop
cmp
pmaxsw
add
sbb
jae
nop
pop
icebp
jo
mov
mov
mov
hlt
int3
sbb
cmp
inc
cmp
push
add
out
cmp
push
xor
decb
outsl
xchg
add
in
adc
cwtl
andb
xchg
jae
lahf
enter
cltd
pop
cmp
ss
push
inc
add
in
cld
enter
dec
cmpsl
lds
pop
shl
movb
scas
xchg
es
cmp
mov
add
sahf
sbb
add
scas
xor
decb
jmp
addr16
or
pop
dec
daa
ret
lea
decb
xchg
leave
sbb
jmp
test
js
adc
andl
sub
es
push
xchg
sub
sbb
repz
ja
jecxz
add
push
repnz
test
jo
xor
jbe
xor
add
mov
dec
add
push
add
push
cmp
push
lods
shr
xor
paddusb
ss
cmpsl
out
popf
jno
xor
fcoml
popa
xor
jg
or
inc
fwait
adc
dec
push
dec
lods
fmuls
push
jmp
rolb
loope
jle
pop
push
faddl
jl
push
out
popf
loopne
xor
mov
adc
incb
sbb
stos
int
jae
or
mov
js
mov
jno
mov
xchg
inc
and
adc
and
xor
fs
sub
decb
bound
adc
in
loope
enter
loopne
in
scas
test
sub
sub
fstpt
std
and
loope
cltd
daa
or
incb
rorb
mov
pop
and
ret
hlt
ss
add
xor
aaa
pop
clc
or
jecxz
jno
cmpsb
xchg
or
adc
xor
push
mov
ret
dec
stos
jno
jge
mov
xor
xchg
test
cs
inc
andb
ja
pop
xor
cmp
call
repnz
movsl
stos
xchg
lret
push
dec
or
incb
insb
add
xchg
cs
decb
inc
push
cmp
imul
mov
mov
dec
incb
cltd
js
cwtl
or
frstor
cmp
loopne
and
stos
cmc
xchg
fsts
push
stos
sub
fwait
jno
mov
add
imul
subl
mov
mov
add
pop
mov
mov
call
sti
mov
adc
pop
int
movsb
xor
outsb
add
out
sahf
mov
mov
mov
data16
ljmp
mov
ljmp
sbbl
adc
dec
add
pop
mov
daa
mov
mov
pushf
pop
cmpl
into
xchg
cltd
push
clc
in
or
jmp
test
cmp
lret
lahf
xchg
dec
divb
js
add
inc
add
aad
mov
mov
decb
sbb
pop
adc
jle
roll
incb
cli
mov
mov
dec
add
xchg
mov
xchg
push
sbb
add
jge
xor
push
jg
xchg
mov
and
cmp
inc
incb
add
jne
lea
xchg
xlat
mov
mov
jmp
inc
imul
jne
cli
stc
add
pop
push
pop
out
xor
sbb
fstpl
icebp
and
incb
stos
and
sbb
add
ja
and
xor
add
inc
pushf
dec
pop
jecxz
add
lock
pop
orb
mov
outsl
fsubrl
mov
or
popa
mov
jo
add
das
dec
and
mov
shl
mov
inc
stc
lods
adc
xor
mov
jp
mov
in
loope
rclb
mov
push
add
jmp
lret
test
in
clc
and
incb
stos
or
test
lret
mov
movl
add
sub
mov
out
jl
ret
pop
and
pop
inc
sub
notb
sub
dec
enter
xchg
cmp
hlt
mov
popa
movsb
add
xor
aas
dec
mov
jecxz
movsl
iret
mov
adc
adc
xchg
jecxz
int3
add
and
clc
les
and
and
pusha
add
mov
addr16
ja
icebp
mov
in
repnz
popa
cwtl
inc
add
cli
jecxz
shll
scas
aad
mov
pushf
inc
add
shlb
mov
cld
das
dec
pop
arpl
faddp
add
nop
shrb
add
mov
repz
cmpsb
movsl
jge
mov
in
mov
cmpl
out
ret
cmp
repz
mov
cmc
pop
mov
fwait
jbe
xor
lock
mov
incb
stc
add
cmpsb
pop
jo
test
add
decb
pop
pop
inc
loope
rorl
xor
stos
sub
add
jge
lahf
or
sbb
lods
push
sbb
adc
or
incb
test
xchg
fldenv
hlt
lock
sahf
nopl
insl
dec
decb
jb
int
testb
xchg
stos
mov
aad
das
inc
mov
add
xor
sar
inc
decb
insl
fisubl
jns
xor
sub
dec
add
movsl
lcall
lods
cmp
add
xchg
pop
pop
pop
mov
fidivs
rorb
lret
pop
mov
cmpsl
lock
in
cwtl
ret
incb
in
divl
pop
mov
or
incb
xchg
lds
push
testl
add
movsl
les
jbe
cld
mov
idivl
test
mov
test
mov
adc
fmul
sub
movsl
les
decb
loop
inc
add
icebp
push
sub
decb
and
cs
mov
sahf
aad
xor
xor
mov
add
cmpsl
imul
incb
add
in
loop
leave
jge
test
cld
sbbl
mov
ja
popl
sub
mov
into
pop
scas
enter
stc
call
cmc
sub
psubsb
jnp
mov
xor
mov
push
in
mov
mov
fs
pop
add
sub
test
test
je
push
or
pop
shl
insl
ret
into
xchg
and
pop
mov
fs
inc
adc
into
and
mov
or
hlt
cwtl
enter
cli
and
adc
add
iret
dec
add
shlb
pop
cmp
sahf
test
repnz
incb
add
mov
stos
fwait
lahf
xchg
pop
jg
xor
int
addr16
std
dec
mov
incb
test
gs
xchg
cmp
xchg
xchg
scas
mull
insb
inc
pop
shlb
sub
repz
loopne
test
sbb
lods
sub
mov
outsb
add
std
int3
dec
test
sbb
jl
mov
mov
repz
mov
add
cmc
fcmovnbe
pop
das
lods
hlt
add
frstor
sarl
dec
pop
shlb
aad
popf
cmc
dec
add
push
decb
mov
push
decb
in
push
or
fs
pop
adc
mov
in
add
scas
pop
add
add
jae
add
cli
mov
and
mov
mov
stos
pop
adc
add
adc
sub
jg
scas
xchg
pop
es
incb
pop
mov
or
jmp
mov
test
push
hlt
es
pop
int3
xorl
pop
lret
xchg
ja
push
mov
cli
inc
add
jmp
aad
aam
adc
cmpsb
int
iret
fsubs
das
imul
incb
cli
lcall
movsb
ret
inc
add
inc
out
fs
or
xchg
add
sub
sub
lock
xchg
stc
pop
imul
shlb
into
ja
mov
aas
clc
ret
decb
jo
in
int
mov
test
jo
insl
test
mov
jmp
inc
fstps
pop
fs
jbe
push
rcl
es
push
iret
jns
jge
stc
pop
mov
add
ret
and
in
add
xor
jmp
xchg
scas
data16
jne
push
ficomps
popf
dec
xchg
js
lret
jmp
dec
decb
les
add
imul
xorl
clc
mov
lea
leave
and
pushf
jge
popf
mov
test
xchg
std
jg
add
sub
in
jge
mov
arpl
jmp
mov
fldt
sarb
add
mov
cmpsb
jne
in
cmp
pop
in
out
pushf
jl
push
sbb
mov
daa
inc
ret
xor
cltd
pop
ficoms
or
dec
div
das
scas
sbb
out
sahf
xchg
cmc
cmp
repnz
ss
cli
lahf
or
jmp
sbb
insl
inc
sbb
dec
ss
push
sub
fimuls
or
jmp
adc
add
cmpsb
leave
stc
imul
fldt
mov
mov
add
subl
pop
xchg
test
jl
xchg
outsb
add
into
cmp
sahf
and
sub
jecxz
xor
sti
mov
into
in
xchg
enter
leave
and
or
xchg
mov
out
push
scas
lock
xchg
scas
and
dec
dec
jmp
dec
in
add
loop
andl
sbb
aas
lds
int
sahf
sub
incb
les
jo
and
stos
in
ljmp
movd
incb
scas
mov
aam
jnp
enter
xorl
mov
add
into
ret
shlb
add
ficoms
sbb
hlt
imull
icebp
push
lahf
cmp
xchg
add
xor
add
imulb
add
add
inc
lahf
insl
scas
lea
cli
js
inc
incb
or
jno
pop
sub
xchg
and
mov
mov
sbbl
mov
clc
jbe
imul
movsb
lret
mov
fdiv
mov
push
sub
fcoml
cs
xor
arpl
mov
addr16
imul
and
daa
mov
mov
push
jle
jnp
ljmp
xchg
cld
cs
jo
dec
jae
out
adc
clc
adcl
mull
rcr
leave
test
sbb
and
xchg
or
decb
test
js
or
decb
stos
dec
ficoml
imul
xor
repz
aas
notb
push
mov
mov
orb
test
add
jns
push
cmpl
add
pop
pusha
aas
repnz
lret
dec
test
test
fsubl
nop
jbe
mov
fists
in
enter
add
cmc
push
subb
mov
sbb
add
adc
mov
or
nop
xlat
inc
pop
sbb
fs
dec
adc
xor
decb
cmp
decb
in
sbbb
sbb
jo
xchg
sub
imul
pop
ja
xchg
outsb
add
sbb
sarl
adc
mov
and
mov
ds
loop
fildl
add
sub
test
pop
cmp
cmp
and
data16
jno
mov
loope
lods
addr16
adcl
xchg
add
data16
sbb
push
add
inc
mov
add
adc
push
pop
lods
lock
lea
enter
mov
inc
add
call
das
scas
fstl
add
adc
jne
fildl
dec
adc
and
decb
bnd
push
add
mov
insb
jne
lret
or
scas
int
jmp
add
decb
sarl
std
cmp
fstp
xchg
ss
jle
mov
pop
sbb
jmp
roll
dec
push
addr16
mov
fwait
push
mov
push
lcall
xchg
jae
jno
jmp
incb
jge
mulb
aam
stos
mov
mov
xchg
inc
dec
popa
mov
in
clc
cmp
push
pop
nop
ret
adc
pop
out
push
decb
incb
or
outsb
add
sti
jl
cmp
xor
decb
aaa
insb
mov
xchg
xor
jno
mov
mov
js
add
inc
pusha
add
fwait
push
add
cmc
xchg
and
incb
std
mov
sub
lcall
dec
fmull
jbe
mov
ret
pop
fs
mov
jmp
lods
jl
jae
decb
movsb
and
lock
out
add
into
add
xor
push
inc
incb
popa
cmp
dec
out
andnps
add
adc
mov
scas
mov
adc
popa
gs
popa
movsb
push
add
add
add
nop
dec
repnz
and
icebp
clc
subl
into
xchg
mov
es
decb
sahf
cs
fdivs
aad
mov
jp
cmp
testb
pusha
and
fwait
pop
xchg
pop
int
adc
shll
cmpsl
xor
or
rolb
shll
jmp
daa
jg
scas
shrb
xchg
test
sub
mov
and
sbb
lds
daa
in
jno
cmp
cmpsb
into
push
pop
dec
inc
inc
mov
insl
pop
pusha
push
or
pop
sbb
ja
mov
out
dec
add
bound
dec
pop
je
sbb
shl
out
out
xor
push
add
push
adc
push
push
cmc
mov
mov
decb
jge
mov
mov
jge
jg
push
incb
jne
clc
cmp
inc
incb
mov
shlb
add
jle
lds
fldt
in
adc
sbb
divb
imul
xchg
sarb
jp
les
add
cmp
je
repnz
dec
in
sub
inc
insb
dec
xor
push
fimuls
je
lock
in
mov
in
dec
popa
hlt
outsb
add
nop
sbb
push
mov
lods
sub
fldt
add
pushf
ficoml
dec
or
insl
stos
decb
decb
xor
imul
sbb
pop
sub
xlat
cmpsb
ret
jecxz
add
inc
xchg
xor
xorl
pop
jne
add
decb
mov
mov
push
sub
push
ljmp
jb
in
cmpsl
dec
xor
adc
sub
pop
push
cwtl
sbb
push
sti
popa
in
and
mov
xchg
mov
shr
add
dec
mov
sbb
imul
inc
add
fsubs
sub
clc
inc
add
fists
es
fwait
or
sbb
std
sub
xor
out
test
aam
jmp
sub
popa
xchg
mov
stos
xor
incb
mov
or
mov
inc
clc
cmp
shlb
cltd
adc
sbb
push
incb
adc
xchg
repz
repnz
push
adc
dec
inc
outsl
test
add
inc
decb
ljmp
rep
pop
js
add
add
data16
flds
fcompl
movsl
ljmp
dec
add
and
and
mov
dec
add
jl
sbb
in
repnz
add
ficomps
push
ds
andl
pop
fcoms
call
in
add
into
inc
or
jge
pop
push
sbbl
fcmovb
xor
xchg
mov
xchg
imul
push
cmp
mov
add
pushf
xor
add
movsb
sti
scas
data16
outsl
or
decb
loop
imul
and
sub
inc
mov
push
pusha
mov
flds
mov
or
decb
add
and
adc
movb
xor
mov
sahf
mov
add
ret
cld
imul
jge
or
inc
cmp
xor
inc
imul
mov
sbb
pop
ds
pop
add
loope
pop
movsl
pushl
data16
decb
xchg
popa
repnz
insb
decb
adc
sbb
inc
scas
mov
jmp
add
mov
xor
mov
mov
sub
fisubrl
movsl
lret
test
sub
decb
shl
je
inc
pushf
cwtl
mov
inc
add
cmc
mov
inc
add
clc
fsubrl
repz
add
mov
rcl
jb
push
es
jnp
sub
xor
inc
add
cmc
jp
data16
pop
in
xchg
adc
out
xor
pusha
popa
les
push
add
adc
xchg
sar
out
push
ficompl
xor
popa
imul
les
pop
mov
and
and
xor
adc
insb
sahf
std
mov
mov
inc
sahf
mov
outsl
mov
pop
iret
nop
aaa
and
push
xchg
dec
pop
repnz
mov
repnz
xor
dec
sar
and
into
inc
filds
ljmp
pop
or
xchg
adcl
cmp
xor
rcrl
sub
imul
add
and
mov
xor
pop
and
in
inc
add
div
pop
inc
pop
neg
rorb
outsl
into
insl
jle
mov
push
mov
push
decb
frstor
sbb
fwait
jne
add
adc
sub
decb
mov
push
in
add
push
pop
stos
shlb
sbb
sub
incb
xchg
test
testl
ljmp
add
frstor
fcoms
movsl
push
jp
cwtl
push
xor
fidivrl
scas
or
fwait
hlt
subb
sbb
mov
mov
std
mov
nop
sahf
sub
cs
push
insl
rorb
sahf
or
incb
ja
std
xchg
lds
es
jge
add
mov
or
add
inc
call
add
sub
in
sbb
mov
les
stos
dec
movsb
cmpl
sbb
add
notl
xchg
mov
and
cmc
das
adcb
lret
aam
push
aas
or
cmc
adc
out
or
mov
mov
in
mov
mov
imull
adc
push
cmpl
mov
repnz
test
inc
add
add
shr
andb
add
inc
popf
inc
shl
or
sub
cli
aaa
sahf
ljmp
add
xor
incb
pop
mov
jle
mov
xor
and
lock
adc
push
xchg
jne
mov
add
mov
jne
mov
jle
outsb
incb
popf
add
adc
xor
popf
add
jno
add
mov
push
shll
mov
add
loope
cs
inc
insb
incb
jnp
inc
enter
fildl
xchg
mov
push
pop
pminsw
add
fs
mov
shrl
mov
jge
push
pop
xor
mov
add
jae
pop
jbe
fcompl
int
inc
add
aad
aas
or
loop
add
into
or
dec
pop
xor
sbb
arpl
or
lods
out
pushf
mov
sub
xor
mov
jp
cmp
push
shlb
es
incb
ret
sbb
jae
jbe
shlb
enter
add
mov
into
push
adc
xor
aam
mov
mov
in
pop
cmp
adc
mov
add
pop
cmpsb
mov
imulb
data16
incb
incb
decb
mov
pop
mov
mov
mov
roll
mov
cltd
sub
dec
push
seta
mov
mov
or
sahf
ds
pop
sbb
xchg
cmpsb
mov
and
cltd
cmp
jae
in
xchg
mov
jle
arpl
repz
incb
push
add
loopne
cmp
add
fimull
decb
decb
jmp
fdivr
or
out
sub
decb
push
xchg
fst
mov
enter
sbb
or
jmp
lea
push
insl
test
bnd
mov
pop
imul
adc
aam
xchg
sub
add
jns
sbb
rol
jge
xchg
popf
jno
repnz
nop
out
idivl
loope
stos
iret
leave
int3
push
enter
incb
clc
push
and
adc
mov
test
fwait
add
incb
add
insb
rcl
ja
mov
imul
push
add
sbb
pop
test
mov
pop
push
adc
mov
inc
flds
stc
repz
movsl
out
clc
inc
and
repz
hlt
pop
mov
fildll
out
push
fdivl
jbe
aaa
jns
outsl
jg
mov
mov
or
cmpsl
add
jge
sub
decb
pop
test
adc
mov
dec
stos
fwait
les
add
push
lods
sub
in
mov
rorl
sahf
sub
dec
cmp
stos
lret
aam
cld
push
inc
std
lock
jl
mov
sbb
test
repz
movsb
orb
ljmp
and
cmpb
sub
inc
imul
jl
aam
in
xchg
insl
jp
pop
sar
outsb
add
push
add
and
adc
mov
addl
add
inc
add
sub
jecxz
dec
push
negl
in
lret
xor
repz
insb
add
lcall
sti
cltd
cmc
and
mov
add
repnz
add
push
xor
gs
sub
fnstsw
jp
adc
in
popf
mov
lahf
adc
sub
cmpb
add
push
adc
loope
and
notl
test
pop
sbb
decb
push
adc
pushf
push
push
xchg
pop
ret
cmp
sbb
mov
pop
mov
fiadds
pop
xor
shlb
ret
mov
in
out
dec
inc
es
pusha
decb
in
ret
sahf
cltd
xor
scas
xor
jns
add
fsts
es
arpl
incb
sub
subps
sbb
das
movsb
jp
jns
repz
data16
mov
imul
into
loopne
mov
jo
stos
cmp
data16
dec
push
cmp
add
dec
icebp
ljmp
incb
out
dec
out
scas
xchg
sub
and
cmp
mov
pushf
dec
adc
ret
cmp
inc
adc
incb
add
decb
lock
rorl
int
push
push
xor
adc
jbe
add
sub
lock
or
xchg
mov
shll
sbb
add
xchg
insb
add
lock
in
sarl
test
cmpsb
jb
mov
mov
dec
dec
push
dec
sbb
pop
in
add
jno
sub
pop
mov
lahf
adc
mov
sbb
add
push
in
mov
adc
inc
xor
js
addr16
scas
ss
mov
decb
xchg
push
std
cmp
inc
xor
cld
rcll
xchg
mov
pop
push
ljmp
jl
movsl
mov
ljmp
and
and
icebp
lret
loop
pop
fisttpl
imul
arpl
add
cmp
pop
sub
incb
hlt
jns
pop
es
scas
cmp
test
lahf
jnp
stos
xor
xchg
mov
aad
test
pop
addr16
ret
sub
decb
dec
add
add
sti
test
outsl
jne
dec
mov
pop
pop
sbb
push
and
incb
jnp
mov
int3
cmp
add
stc
fs
pop
mov
test
add
inc
mov
cwtl
push
imul
incb
mov
loope
mov
mov
int
mov
cmp
in
jge
push
fsubs
sbb
add
jbe
icebp
sub
dec
mov
mov
sbb
inc
inc
jnp,pt
inc
ret
push
sub
inc
lahf
insb
decb
mov
in
cwtl
cltd
stc
xchg
in
xor
add
daa
adc
incb
add
mov
hlt
je
mov
movsb
gs
xchg
hlt
mov
ret
cltd
add
je
frstor
mov
jo
add
and
test
inc
movsb
pop
mov
lds
jg
cmp
lcall
je
cmp
xor
add
cmp
add
jmp
lahf
fsubl
sub
decb
mov
repz
jbe
dec
arpl
adc
int3
cld
lcall
flds
or
adc
xchg
sub
pop
cmp
lea
add
repnz
testb
sbb
add
loopne
fiadds
incb
pop
std
or
incb
add
pop
nop
mov
add
mov
cmp
je
pop
in
ljmp
pop
add
pop
or
cmp
fisubs
lods
out
add
ss
cmc
jno
sub
loopne
add
xchg
bswap
decb
xor
mov
hlt
sub
mov
xchg
in
sub
sbb
fimull
mov
ret
out
sbb
mov
loopne
ret
xchg
mov
and
incb
pop
inc
add
aaa
xchg
and
inc
mov
decb
cmp
test
sbb
xor
dec
add
push
or
dec
sti
cmpsb
mov
push
add
les
fdivrs
out
iret
shrb
movsl
sahf
movsb
mov
lods
xchg
sub
lahf
mulb
xor
hlt
stc
add
add
and
push
pop
xor
lods
mov
lea
mov
sti
mov
aad
stc
movlps
dec
sub
push
sbb
lds
pushf
push
mov
out
adc
lods
mov
xchg
clc
scas
dec
fisttps
add
push
int3
pop
mov
xchg
insl
lea
out
adc
insl
or
out
cmpb
xchg
rcrb
jle
movsl
ds
outsl
jae
jnp
xor
mov
dec
lcall
lock
iret
push
fwait
rcrl
jle
js
dec
incb
mov
je
jmp
jl
mov
cli
cmp
cmc
out
les
es
xchg
pop
jae
cmc
push
cmp
mov
dec
cmp
jge
pushf
test
and
and
outsl
and
jl
icebp
pop
inc
mov
decb
add
mov
leave
mov
or
incb
xchg
adc
dec
mov
sbb
cmp
daa
xchg
mov
lahf
mov
cmp
mov
cmp
les
adc
dec
add
fwait
xchg
and
insb
and
add
mov
push
add
int3
mov
jg
dec
data16
jmp
cmpsb
dec
xchg
std
sbb
xchg
or
add
add
adc
loop
sbb
xchg
mov
stos
sbb
cmpsl
out
add
popa
fcmovnb
fists
movzbl
popa
sub
mov
lods
cwtl
mov
push
js
add
cmp
adc
add
incb
lea
mov
cmp
popa
cld
js
dec
arpl
and
cmp
lods
jl
lret
jl
lock
cmp
loopne
out
outsb
add
stos
pop
lods
pop
or
xchg
cld
pop
dec
inc
push
mov
push
fwait
pusha
add
int3
lcall
cmp
mov
stos
out
inc
add
add
leave
loopne
arpl
xchg
ljmp
ds
pop
mov
add
mov
incl
mov
hlt
and
fistl
xchg
fs
decb
and
mov
lds
repz
lcall
aad
test
gs
add
xor
mov
hlt
es
es
in
aam
push
lret
xor
mov
add
inc
xchg
into
xorl
pop
push
jmp
sbb
or
in
xor
add
and
je
add
popf
or
test
mov
mov
leave
test
dec
add
sti
jo
jne
mov
ffree
lret
sahf
sti
or
insb
sub
and
pop
lcall
imul
sub
daa
xor
push
incb
bound
fadd
lods
lods
xor
add
pop
aas
mov
decb
jbe
je
outsl
sbb
xor
mov
xor
fmul
shrl
jnp
mov
pushf
rolb
add
adc
fldenv
das
push
cmp
sub
jae
inc
add
pusha
add
mov
mov
lods
scas
pop
cmp
bound
fstpl
jbe
push
cld
stos
stc
xor
mov
js
subl
jle
outsb
add
loop
add
fwait
inc
fsubrs
stos
xor
into
dec
xor
adc
jecxz
in
mov
in
xchg
cld
test
lahf
add
inc
iret
mov
aam
stc
xchg
inc
add
into
pop
cmp
dec
add
std
or
sub
dec
adc
dec
mov
cmp
cmpl
push
lods
aas
push
cmp
mov
mov
pop
dec
jo
mov
std
sbb
subl
in
dec
lods
mov
xorl
mov
cltd
movsb
add
incb
dec
popa
std
data16
aaa
leave
xlat
xor
push
out
cli
push
or
pop
add
inc
ljmp
rorb
add
js
push
movsb
out
xchg
push
inc
es
in
mov
jno
and
decb
add
js
xor
jl
outsl
pop
arpl
push
cmpsl
push
hlt
and
in
test
jl
and
incb
cmp
dec
push
inc
xchg
pop
add
pushf
cmp
push
in
movsb
push
outsl
scas
or
je
dec
pop
sti
xor
movsl
mov
cmc
lds
in
cmp
add
shrl
cmp
in
inc
or
ret
pop
in
cmpsb
dec
notb
add
jg
xchg
inc
xor
add
clc
adc
pop
jle
pushf
bound
inc
aam
add
add
dec
hlt
iret
ret
leave
test
out
sahf
adc
pop
or
fimuls
mov
fmulp
cld
jne
icebp
lret
je
shr
and
popa
mov
std
lret
sbb
add
fnstenv
cmp
rorb
pop
lock
lret
sbb
add
cmp
out
int3
mov
jg
and
cltd
mov
pop
sbb
and
cmpsb
push
sub
mov
add
dec
in
inc
add
das
push
push
ljmp
xor
sbb
orb
fcoms
add
incb
repnz
add
jecxz
movsl
mov
push
pop
int
push
decb
popf
pop
inc
jl
push
lods
mov
test
push
mov
pop
in
cmpsl
bound
incb
push
lret
add
lods
cld
stos
in
inc
fildll
pop
shl
neg
test
mov
sbb
shll
out
test
scas
xchg
jp
incb
jg
mov
jge
lahf
adc
movsb
mov
jns
sub
ja
add
adc
pop
and
cmp
adc
jg
pop
or
dec
and
roll
in
cmpsb
mov
add
lcall
sub
call
ret
adc
pop
fisubrl
dec
pop
mov
xor
aam
add
xor
jmp
clc
push
hlt
add
fldcw
lods
in
ret
sarl
ja
xchg
dec
mov
or
pop
jl
add
and
inc
inc
incb
mov
lahf
push
into
cmp
add
xchg
andl
xor
pop
cltd
dec
jl
call
add
repnz
cmc
dec
cmc
jle
sbb
add
sahf
mov
int3
xor
ret
test
ret
cmp
cmp
pop
xchg
std
xchg
jae
fbld
decb
mov
es
imull
mov
push
sahf
xchg
and
fsub
call
shrl
daa
loopne
adc
mov
test
adc
sub
incb
out
and
jge
neg
cli
orb
test
in
ja
int
pusha
add
sub
call
filds
test
fistl
mov
sbb
rcrl
mov
fstpt
jb
adc
inc
into
scas
push
dec
decb
cli
stos
subb
pop
ja
cmp
aam
stos
mov
sbbb
cld
ret
cmp
xor
push
fs
aaa
or
leave
rclb
test
pop
je
aas
sbb
or
mov
insl
divl
jne
add
adc
and
dec
push
fstps
iret
test
jg
mov
fisttpll
mov
shll
icebp
mov
or
mov
jle
cmp
xchg
pop
mov
loope
lock
pushl
cmp
mov
nop
roll
dec
xchg
cmp
test
fdivl
mull
or
sti
cmp
xor
sahf
xchg
mov
inc
pop
pop
mov
jmp
sub
incb
push
test
mov
inc
mov
lods
dec
out
add
es
scas
pop
aam
nop
add
rcl
outsl
das
sub
hlt
scas
jnp
jecxz
insl
flds
xchg
adc
imul
fists
adc
pop
cltd
cmp
add
incb
adc
dec
addl
out
mov
dec
shlb
fs
and
outsb
out
push
es
pop
cmp
mov
adc
xchg
cmp
jmp
adc
out
pop
mov
cmp
stos
fdivrs
pop
test
jmp
fmuls
add
mov
sbb
in
ret
decb
add
repz
mov
mov
add
xchg
in
sbbl
sbb
push
push
sub
push
dec
add
stos
pop
push
aam
pushf
inc
add
hlt
sbb
pop
jbe,pt
out
xlat
mov
and
xor
xor
inc
mov
sbb
jmp
mov
pop
push
and
data16
push
mov
sub
loopne
cmpsl
bound
xor
daa
push
mov
out
push
inc
xor
mov
push
sar
test
jg
cltd
fiaddl
lea
aas
xchg
aas
movsl
jge
orb
mov
ljmp
leave
inc
call
dec
es
fdivrs
lock
sbb
add
pop
fcomi
shrl
mov
pop
arpl
cmp
xchg
pop
xchg
fidivrs
incb
xor
into
aaa
andl
sbb
or
in
icebp
inc
imul
or
decb
rcrb
pop
xchg
dec
lods
jg
mov
sbb
cmp
divl
cs
jmp
icebp
stc
cmp
movsb
insl
dec
clc
pop
fstpt
clc
pop
lcall
mov
sub
lock
xlat
xlat
xor
ret
incb
decb
in
cmp
inc
mov
cld
sub
ficompl
or
nop
sub
sti
ret
pop
mov
mov
jecxz
sbb
xchg
ffreep
add
int
out
sub
decb
insl
ror
test
mov
sub
adc
iret
es
cmc
mov
add
icebp
cwtl
jecxz
add
fldenv
ds
fbld
jg
incb
aaa
or
clc
ss
push
inc
cmp
lcall
push
or
sub
incb
rcll
pop
mov
cmp
je
pop
cmp
dec
mov
call
xchg
sahf
xor
cmp
mov
fcoms
pop
adc
add
mov
movsl
test
jns
jmp
leave
das
mov
and
stc
repnz
dec
add
ja
je
in
incb
incb
xchg
inc
ss
aam
movsb
mov
or
ljmp
pop
sarl
mov
imul
and
sub
push
popa
xchg
test
pushl
les
scas
jp
jmp
add
xor
add
incb
pop
pop
es
incb
nop
popf
mov
sbb
mov
imul
adc
add
inc
mov
jle
xlat
ljmp
scas
mov
mov
cmc
dec
mov
idivl
mov
mov
orb
and
ds
push
mov
in
cmp
xchg
mov
fldl
xchg
adc
test
sub
cmp
leave
xchg
mov
push
dec
rorb
dec
cwtl
mov
dec
mov
cld
or
decb
jo
popf
xchg
je
push
jnp
cmp
jmp
jbe
cmp
popl
sahf
fs
cmc
xor
xchg
adc
cltd
mov
addr16
loopne
fwait
pop
icebp
and
test
cmpsb
outsb
add
add
out
test
subb
loopne
fwait
std
aad
dec
or
outsb
mov
jb
arpl
push
lcall
cmp
fnstenv
es
incb
insb
jl
icebp
xchg
add
add
call
xchg
push
aad
fdivrs
inc
add
push
or
add
je
imul
add
pushf
in
mov
decb
dec
in
out
cmp
xchg
push
outsl
cmc
jl
pushf
xchg
ss
decb
pop
sub
lahf
jge
sbb
int3
mov
fwait
fwait
dec
aam
adc
cmp
psubusw
loop
testl
fdivrs
fscale
js
fs
int3
fdivl
ljmp
popa
daa
xchg
cld
or
mov
inc
add
add
shrl
outsl
scas
lods
iret
jne
add
repz
xchg
mov
std
lcall
mov
push
sub
pop
push
mov
cmp
pop
aad
pop
xchg
and
decb
insb
mov
lcall
orb
and
lcall
xlat
scas
test
mov
les
add
dec
add
push
decb
inc
xor
movl
sbb
lods
mov
insl
sub
in
adc
fldenv
adc
rcrb
xor
fs
incb
sbb
mov
inc
das
lcall
jge
repz
jle
pop
imul
inc
dec
mov
add
push
ds
dec
incb
add
sub
mov
push
fdivrp
into
cli
imul
rolb
mov
in
dec
jnp
andl
jge
rolb
add
inc
adcb
aas
cs
inc
and
loopne
mov
sbb
ret
mov
add
decb
out
imul
adc
add
dec
clc
cli
shrb
test
and
jmp
and
push
or
es
fwait
adc
cmc
jecxz
cwtl
push
decb
outsl
out
into
cmc
fnsave
stc
push
decb
pop
mov
cs
pop
popa
and
mov
mov
xlat
xor
mov
in
xchg
adc
lahf
inc
adc
sbb
fimuls
jmp
lret
fisttps
ret
mov
fstpl
cld
ret
test
mov
mov
jle
decb
xchg
enter
mov
iret
mov
jb
mov
cmp
add
and
daa
pop
aam
mov
add
push
ljmp
pushf
xlat
inc
incb
add
test
xor
incb
jecxz
int
mov
jno
add
push
and
mov
xor
jo
das
inc
dec
inc
push
arpl
add
incb
stos
lds
incb
clc
repnz
add
xchg
inc
pop
insb
add
pop
cmpsb
or
push
xor
xchg
shr
jmp
and
test
popa
sub
dec
icebp
and
inc
mov
add
jg
lret
push
leave
pop
inc
gs
lds
add
decb
hlt
paddusw
xlat
sbb
push
add
lret
test
sti
clc
sbb
incb
nop
mov
cmp
and
pop
jbe
mov
add
scas
xchg
jnp
jb
dec
cmp
push
lock
int
stos
jl
sub
pop
xchg
lahf
cmc
dec
insb
sbb
call
ds
cmpsl
pop
sub
add
sub
sahf
clc
fwait
lahf
movsb
mov
xor
out
push
lret
decb
mov
add
cwtl
fisttps
mov
and
incb
jne
jnp
jmp
adc
out
adc
daa
lods
pop
inc
add
inc
cmp
cli
mov
repnz
cmpsb
scas
lea
pop
fdivs
or
ljmp
add
inc
mov
xchg
mov
xor
cwtl
cli
sahf
mov
pop
enter
inc
test
push
in
xor
ret
pop
xchg
cmp
fstpl
add
mov
repnz
data16
dec
cs
cmpsb
dec
dec
push
incb
inc
mov
cltd
lahf
mov
pop
lea
xor
in
jae
add
pop
cwtl
mov
aas
push
mov
out
dec
loop
mov
and
xor
in
inc
add
push
sbb
mov
cli
imull
lods
or
mov
mov
push
lcall
fadds
mov
mov
jl
xchg
xorl
sbb
mov
add
pop
jg
add
mov
mov
daa
jne
aam
je
xchg
mov
add
and
arpl
push
xor
sahf
cmp
dec
add
enter
pop
in
sub
jg
pop
repz
cmc
jae
lcall
clc
movsl
jle
add
sub
stos
inc
add
sarl
ja
xchg
lret
push
imul
xchg
add
jge
sahf
mov
outsl
pop
and
loop
xchg
dec
es
mov
lods
add
cmpsb
mov
push
scas
xor
add
loopne
call
cmp
hlt
stos
xchg
jb
and
pop
push
push
das
mov
in
pop
cmpb
adc
mov
add
jl
rorl
pop
or
jnp
inc
decb
xlat
fs
sbbb
leave
sbb
dec
jns
add
mov
push
xchg
and
cltd
adc
pushf
pusha
add
arpl
sub
dec
xchg
mov
jns
jne
incb
lret
mov
xor
adc
cmpsl
iret
push
push
xchg
xor
add
xchg
mov
imul
push
sahf
stos
lcall
pop
xchg
test
lock
add
inc
inc
ja
sub
es
jge
inc
add
mov
mov
mov
ficompl
adc
inc
sbb
push
ja
gs
adc
add
pop
cmpl
mov
add
xchg
add
lods
shll
or
jl
rcll
add
inc
add
mov
decb
inc
add
aaa
inc
js
lods
add
addr16
lret
adc
adc
push
mov
add
insl
movsb
mov
jmp
nop
push
and
lcall
jno
js
vcmpss
dec
xchg
mov
loopne
nop
int
addb
fnstcw
xchg
dec
cs
dec
add
mov
outsb
add
insl
orl
lods
dec
pop
jbe
add
push
push
and
repz
lahf
xor
mov
outsl
mov
mov
cs
decb
adc
xchg
je
jle
dec
jns
das
insb
add
les
sub
ret
lcall
es
cmpsb
inc
add
add
shll
mov
add
je
sahf
or
sub
jg
in
loop
in
inc
sub
dec
fldpi
out
dec
add
push
cmp
insl
or
mov
xor
out
xchg
in
dec
add
jnp
adc
xchg
outsb
fnstenv
setbe
cmp
mov
and
incb
roll
xchg
push
int3
or
divl
shll
movsb
dec
push
incb
mov
into
cmp
scas
sbb
jne
pop
and
test
lahf
rcrl
add
call
sub
sub
aas
add
shrb
loopne
gs
out
mov
inc
jnp
lods
sub
pop
inc
add
cmp
js
pushf
pop
push
fcoml
test
pop
push
in
mov
pop
push
test
add
push
mov
shr
stc
nop
cmc
mov
push
pop
movsb
rol
push
sbb
cmpsb
scas
jno
jmp
in
sub
push
or
decb
jl
fmull
out
sbb
inc
je
mov
cmp
xchg
pop
xor
ss
or
ja
cs
fnstsw
mov
inc
adc
xor
scas
sbb
decb
data16
decb
sahf
mov
cmp
not
mov
xchg
out
mov
sti
mov
out
stos
xor
pop
push
mov
and
and
cmp
add
mov
rol
push
xchg
movl
sti
daa
popa
jp
test
push
pop
clc
js
data16
push
sub
decb
aas
add
mov
decb
mov
xchg
xor
pop
aas
mov
lret
pop
std
xlat
mulb
stos
int3
in
jne
dec
pop
mov
pop
add
aaa
repnz
push
out
pushf
inc
adc
sbb
push
or
push
nop
sbbl
xchg
addr16
add
dec
add
sub
push
clc
lret
and
insl
push
mov
xchg
and
mov
add
testb
outsb
add
xchg
enter
shlb
outsb
pop
dec
lock
in
or
incb
hlt
xchg
add
movsb
movsl
jo
popf
jbe
scas
enter
push
pop
push
xchg
xchg
add
sub
inc
add
idivb
pop
daa
push
fstpl
mov
or
xchg
fwait
subb
in
add
lcall
mov
in
adc
jle
dec
add
movl
out
pop
data16
adc
scas
out
jbe
pusha
pop
negb
sub
incb
out
and
enter
add
call
add
jecxz
fwait
mov
push
push
rcl
arpl
ficoms
cmp
into
push
es
pop
mov
add
mov
incb
mov
pop
sbb
loope
mov
mov
stos
outsb
add
cs
shrb
enter
fisttpl
out
push
jmp
rorb
add
or
sti
fwait
rcll
ret
sub
in
out
jae
aad
leave
pop
test
in
mov
rcrl
push
xchg
mov
add
add
jp
out
pop
clc
loopne
lret
lods
int3
loop
sub
popl
mov
jo
leave
jns
jo
sub
add
shlb
jp
repnz
pop
in
aas
xor
adc
enter
movsb
repz
cwtl
data16
add
decb
xor
jl
mov
pop
movlps
xor
loop
fs
hlt
xor
mov
mov
mov
pop
push
jecxz
je
xor
push
faddl
les
mov
fcoml
sub
xchg
fsts
push
adcb
out
shll
repnz
add
push
cs
mov
or
loop
sub
sub
mov
push
ja
sti
inc
pusha
cmc
cmc
stc
out
test
sar
je
int
push
and
movsl
cmp
mov
lock
rolb
jb
ret
aad
je
and
mov
test
stos
xchg
fbstp
sbb
jb
xchg
cmp
jnp
jb
add
jmp
add
push
cmp
cwtl
sbb
lret
adc
addb
xor
or
insb
xchg
pop
mov
les
or
cmp
push
int3
les
loope
jecxz
push
lock
mov
add
push
xchg
cli
sbb
sbb
push
xor
mov
gs
std
dec
lcall
clc
or
popf
pusha
add
aaa
stos
dec
bound
incb
testl
decb
imul
mov
push
xchg
fldcw
push
out
mov
dec
rcl
pop
subb
jg
push
xchg
lahf
aas
cmp
push
iret
rclb
add
orb
das
iret
rcrl
mov
mov
popl
cmpb
push
sbb
std
dec
dec
inc
ror
jnp
out
and
out
mov
inc
imul
lea
jp
popf
inc
mov
cmp
popa
enter
add
cltd
jnp
xchg
mov
sbb
mov
aas
xor
int3
out
mov
in
shrl
pop
mov
add
scas
mov
xor
mov
xchg
jno
xchg
stc
sbb
stos
push
andl
test
sub
mov
add
loop
inc
jge
fldl
xor
stos
mov
movb
fiaddl
add
xchg
cmp
cmp
popa
cmpsl
lea
push
out
adc
sbbb
rcll
xorl
sbb
pusha
add
rcr
fsubs
mov
mov
xor
loopne
in
inc
out
adc
push
lods
sti
push
inc
cmp
in
mov
add
xchg
aad
pop
jecxz
mov
mov
lcall
std
push
add
xor
mov
pushf
pop
xchg
stos
out
jne
pop
xor
or
mov
jl
add
jbe
dec
add
dec
decb
xor
aaa
sub
jle
and
loop
js
dec
add
lock
pop
dec
sbbl
adc
out
int
add
popf
fsubr
adc
push
push
pop
test
in
call
xchg
push
mov
cmpsl
sub
decb
xor
or
movsl
add
or
incb
inc
add
xor
subl
push
and
add
dec
push
push
mov
or
pop
push
push
add
push
xchg
loop
rcrl
and
or
and
jg
mov
in
add
sarb
repnz
pusha
es
sub
xor
test
insl
pop
repnz
push
test
sbb
outsb
jecxz
movsl
cmc
lds
inc
lods
add
mov
js
movl
mov
lahf
mov
popa
pushf
fimull
xor
add
fs
jae
dec
jo
insl
push
ja
repnz
sbb
push
mov
icebp
mov
or
cmpsl
ret
scas
cmp
jg
jmp
outsb
add
pop
xor
dec
sti
incb
inc
inc
add
lods
movsb
popf
sub
fucom
es
cmpsl
add
in
and
decb
inc
add
in
aaa
daa
xchg
iret
daa
in
fidivrs
call
aas
fsubr
lcall
add
data16
mov
mov
out
push
pusha
loopne
rol
sbb
inc
push
ja
pop
popa
fdivs
call
cmpl
decb
fs
les
push
fstpt
sub
dec
leave
clc
jns
ret
pop
xor
mov
xor
jnp
loope
sbb
cmc
mov
mov
cmpsl
cmp
insl
add
cmpsb
pop
push
xchg
adc
call
pusha
decb
add
je
in
push
pushf
xchg
mov
xchg
je
jg
add
fdivrl
xchg
ret
xor
pop
out
std
lds
push
mov
push
bound
es
adc
ds
cli
pop
sti
sbb
add
decb
ss
push
dec
cmp
add
sub
movl
mov
cld
insl
ss
push
cltd
add
sbb
pusha
pop
sub
decb
mov
push
arpl
inc
aad
icebp
pusha
add
jns
jge
out
or
dec
out
adc
cwtl
cltd
fwait
inc
add
add
adc
hlt
mov
cli
push
add
decb
xchg
jno
dec
add
push
out
sbb
into
add
arpl
inc
mov
add
repz
cmpsl
loop
dec
scas
sbb
cs
incb
fcompl
das
sbb
pop
enter
xchg
push
and
jo
pushf
daa
add
in
push
add
repnz
add
int3
pop
lea
inc
push
lock
in
and
and
jne
divl
jp
scas
mov
daa
cltd
mov
iret
jge
add
lock
xchg
add
xchg
out
sbb
rclb
jle
add
mov
push
add
sub
icebp
cmp
jmp
adc
adc
add
mov
aad
xchg
inc
xorb
dec
decb
sub
ljmp
mov
jbe
jmp
clts
add
xchg
jle
and
mov
push
iret
adcl
imulb
cmp
sbbb
add
std
int3
pop
inc
jo
xchg
scas
pop
or
adc
in
xchg
leave
loope
lret
mov
adc
add
shll
push
dec
mov
lds
fisttps
add
fs
sbb
decb
add
lods
repnz
dec
stos
aam
pop
lcall
scas
fwait
dec
repz
dec
sti
sub
inc
adc
push
add
pushf
inc
in
add
cmp
clc
outsb
add
stos
jecxz
push
jg
push
popf
xchg
lods
es
les
pop
and
fadd
out
add
cmp
pop
clc
push
fstpl
data16
popa
push
xchg
pop
mov
xchg
shrl
add
cmp
ds
lods
gs
ja
or
incb
insl
lock
push
sbb
fs
mov
mov
icebp
andl
jecxz
xchg
mov
aas
sbb
int
dec
pop
out
xchg
and
cltd
dec
sbb
cmpsl
pop
sbb
xor
lcall
jle
enter
je
aaa
push
add
inc
mov
push
jno
inc
arpl
push
mov
dec
add
lea
cli
cmpsl
dec
push
xchg
pop
dec
decb
ds
xchg
cmp
xchg
sub
push
loope
or
sarb
xchg
and
add
add
or
pusha
in
lret
jns
and
mov
testl
push
push
add
and
adcl
mov
