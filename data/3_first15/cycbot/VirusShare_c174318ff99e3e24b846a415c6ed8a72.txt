in
out
mov
mov
inc
jns
fs
pop
adc
mov
mov
cmc
or
and
fistps
jne
push
add
jecxz
dec
cmp
jo
mov
fisubrs
mov
push
cmp
fidivl
mov
lret
sbb
cwtl
cli
insl
repz
add
fldcw
dec
jno
fcmovne
mov
inc
add
je
mov
push
jp
mov
xor
aas
adc
dec
sbb
cwtl
push
add
mov
out
std
cmp
mov
cmp
dec
cltd
xor
mov
add
mov
inc
fdivr
dec
out
test
add
xor
xor
mov
aam
pop
jg
xchg
aas
out
add
add
data16
push
rcll
mov
pop
adc
out
rcr
outsb
pusha
add
xchg
push
rorl
add
mov
add
or
mov
add
add
push
add
clc
xor
pop
dec
insb
pop
mov
mov
jge
fldenv
mov
mov
insl
mov
mov
mov
mov
push
add
insl
jg
add
sahf
shll
dec
jnp
iret
out
jg
add
dec
jl
ret
mov
sbb
add
push
jmp
or
cmp
add
adc
mov
imul
pop
in
add
loop
mov
lahf
insb
fldln2
xchg
in
movsl
adc
cmp
faddp
sub
fwait
scas
add
inc
js
inc
aas
fnstenv
rolb
add
sbb
dec
aas
lcall
add
jne
add
add
push
je
adc
nop
add
push
xor
add
daa
ret
mov
add
sub
add
or
mov
lea
pop
mov
mov
add
mov
jo
mov
int
inc
adc
push
ret
adc
mov
jns
movsb
jnp
in
add
mov
push
out
dec
xor
or
cmp
es
leave
ret
ret
popa
inc
inc
adc
loop
mov
xchg
mov
jmp
scas
je
add
add
xor
mov
ljmp
dec
adc
add
jmp
fsubp
sbb
pusha
add
push
add
add
dec
jg
filds
jecxz
lds
mov
add
mov
adc
mov
add
sub
cmp
ret
and
jb
mov
bound
mov
pop
push
or
daa
sbb
or
adc
add
ret
mov
mov
mov
mov
in
and
mulb
jl
xor
mov
js
dec
cld
jns
outsb
mov
jne
mov
add
pushfw
dec
mov
xchg
push
lcall
popf
addr16
adc
cmp
sub
add
lock
mov
push
test
add
add
sahf
cs
aam
xor
jb
mov
rolb
mov
add
xchg
jnp
push
pop
stos
lods
je
add
add
and
pop
das
pop
stc
jg
mov
addb
int
jae
mov
or
popa
mov
enter
xadd
mov
rolb
mov
mov
mov
les
xorl
out
nop
add
test
icebp
xchg
lock
hlt
idivl
cmp
fwait
int
loop
mov
lock
mov
add
sub
pop
and
add
inc
popa
fnstenv
mov
scas
cmp
mov
adc
ljmp
mov
add
lcall
xchg
mov
add
testl
mov
xlat
pusha
add
lret
out
pusha
add
push
hlt
dec
getsec
jae
jno
rolb
enter
adc
mov
mov
fisttps
add
adc
add
ss
dec
mov
add
push
imul
roll
mov
in
in
sti
scas
sbb
or
in
stos
jmp
bound
mov
mov
pop
leave
jge
sahf
mov
mov
add
xorl
inc
jns
mov
ficoml
mov
rolb
mov
add
clc
enter
mov
sub
pop
ds
and
push
mov
add
push
cli
or
add
aas
sub
add
test
pushf
je
mov
js
mov
int
inc
stos
mov
out
imul
push
add
and
mov
outsl
bound
mov
loop
mov
stos
cmp
mov
into
mov
mov
test
add
cltd
dec
xor
pop
sbb
cmp
addb
xchg
int3
mov
nop
add
das
inc
add
jbe
filds
clc
std
adc
mov
sub
je
and
mov
jl
inc
sbb
popf
inc
xchg
ret
mov
test
dec
mov
hlt
pop
rsm
xchg
insb
push
add
add
std
mov
pop
subl
mov
cwtl
test
add
cmp
cmp
mov
and
mov
pushf
adc
mov
mov
rolb
mov
mov
xor
add
les
or
addb
test
imul
mov
cwtl
sbb
or
jecxz
add
add
mov
add
inc
mov
daa
sub
je
call
mov
sti
cmp
adc
mov
push
and
add
mov
lods
scas
sub
add
popa
in
test
add
lods
jo
mov
sub
and
mov
je
pop
mov
mov
stc
addb
leave
iret
inc
add
mov
cmp
add
sbb
leave
jge
sub
and
mov
push
jno
dec
cld
in
stos
rol
lret
jle
sub
std
lds
mov
hlt
lock
add
and
xchg
aas
jne
pop
test
inc
add
dec
lock
mov
cmp
and
mov
or
mov
out
insl
pusha
add
mov
sub
mov
xchg
add
gs
mov
add
cmp
jecxz
ljmp
add
mov
mov
mov
add
sub
inc
fdivl
and
push
add
pop
std
cmp
add
mov
rolb
mov
ret
xor
mov
mov
aam
enter
js
rolb
mov
jg
add
xor
mov
add
push
cltd
jno
bswap
out
in
and
cmp
push
repz
div
inc
add
add
pop
outsl
or
jb
mov
mov
add
add
xor
mov
add
andl
mov
cli
data16
push
fmuls
cmp
add
mov
int3
sbb
fisubl
sbb
xlat
repnz
js
mov
or
add
add
mov
add
mov
outsl
loop
mov
adcl
xchg
adc
adc
mov
rolb
mov
mov
and
aam
in
sub
addb
stos
sahf
dec
insb
lock
lret
dec
jp
sub
mov
sub
push
push
push
cld
call
sub
es
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
mov
test
movsl
cmp
add
add
mov
or
daa
jns
sti
mov
mov
add
or
mov
push
std
inc
jns
aas
xchg
push
or
addb
in
add
rolb
mov
add
mov
add
add
mov
sti
xchg
in
lret
pop
ja
add
mov
out
mov
sub
inc
into
insb
ja
push
xchg
and
cmp
cs
rorl
add
dec
sub
pop
adc
mov
push
add
add
out
fnstcw
add
add
adc
cmp
cmpsl
pop
mov
pop
rolb
add
adc
es
mov
cs
stos
test
mov
loopne
mov
aaa
push
nop
add
add
mov
fadd
in
or
in
in
test
adc
mov
dec
out
mov
add
testb
out
in
xchg
sub
add
movsl
in
rclw
add
filds
add
mov
xchg
aam
testl
pop
mov
sub
aas
test
call
sub
jae
cmp
mov
fs
add
mov
xor
adc
roll
rolb
mov
fcompl
xor
lcall
xor
add
cwtl
cmpsl
xchg
int3
push
loopne
mov
pop
sahf
pop
mov
add
mov
mov
sub
mov
add
subl
sbb
add
add
jbe
cmp
clc
lret
aaa
pop
push
push
sbb
or
mov
push
adc
pop
jl
push
scas
scas
sahf
push
cld
not
add
add
mov
xor
mov
xchg
addr16
out
add
add
add
cmc
xchg
or
push
aas
jns
orl
mov
add
mov
xor
xchg
ret
mov
or
call
mov
mov
mov
mov
inc
imul
mov
cpuid
add
cltd
pop
jp
xchg
shll
mov
xchg
sub
dec
xchg
int3
mov
add
pop
mov
and
add
ljmp
movsl
mov
sub
jmp
mov
add
mov
add
test
sub
adc
add
gs
mov
popa
cmp
add
cmp
sti
jecxz
shll
lcall
mov
add
fs
inc
enter
mov
jle
nop
add
mov
leave
lahf
dec
push
pop
dec
sbb
mov
sti
jo
mov
fnstenv
mov
out
imul
sbb
lods
in
aaa
test
push
call
addl
dec
lods
sub
int3
sub
insl
ret
or
mov
mov
sub
cmp
add
add
xor
jge
movsl
scas
int3
dec
mov
mov
fldcw
imul
adc
add
cltd
cmp
jmp
test
sbb
das
xor
mov
scas
cmp
addb
lds
add
mov
call
mov
aam
ljmp
mov
aas
lret
je
add
cwtl
test
repz
movsl
roll
mov
icebp
push
push
fisttpll
das
ds
inc
shrl
addb
repz
fdivl
mov
dec
inc
push
fcoml
dec
mov
xor
negl
xor
mov
call
lods
jmp
adc
and
mov
mov
dec
addb
sarl
add
movsl
das
filds
bound
mov
add
pop
push
jge
push
sub
pop
stc
fcompl
cwtl
pop
xchg
sub
jae
adc
cmpsl
fcmove
pop
addl
out
inc
sbb
ds
add
data16
push
rolb
mov
pop
jmp
jecxz
mov
dec
mov
add
xchg
pop
stos
sub
xchg
int3
call
mov
xchg
add
add
sub
jne
roll
add
pop
rolb
aas
inc
add
dec
out
rdtsc
mov
dec
pushf
lret
inc
adc
pop
push
out
adc
mov
add
xor
call
inc
aad
pop
push
mov
jmp
add
fisttps
add
add
neg
dec
loop
mov
rorl
lock
sub
adc
mov
mov
dec
cmp
and
mov
pminub
adc
mov
adc
mov
ss
sbb
sub
dec
orl
andl
lret
inc
divl
xor
mov
adc
add
addb
lahf
mov
movsb
arpl
loopne
mov
and
cwtl
cld
incl
jne
ja
dec
sbb
push
add
cmp
pop
cmp
call
cli
inc
inc
lods
test
jb
mov
add
ret
sub
mov
pop
add
mov
sbb
fisubrs
inc
test
add
mov
add
es
in
cltd
cmp
mov
xor
mov
arpl
stos
mov
mov
mov
jp
int
dec
jns
add
mov
push
add
mov
inc
cmc
add
jns
das
arpl
int
sbb
inc
daa
ss
add
add
inc
sbb
adc
mov
add
mov
popf
in
test
mov
cli
xchg
add
sbb
lret
xchg
add
add
cmc
ffree
push
dec
stc
out
rolb
test
fisttps
mov
adc
mov
xchg
and
pop
jp
ljmp
mov
insl
cmpsb
popf
call
inc
dec
cs
sahf
add
xchg
addb
fidivl
sbb
loopne
mov
jb
mov
jmp
call
lret
into
ljmp
adc
jns
sbb
not
add
jmp
jmp
lods
lods
jg
xchg
jo
mov
mov
into
out
adc
xchg
adc
loope
mov
int
xchg
call
add
pop
fs
and
mov
out
add
cmpsl
fdivp
add
mov
adc
mov
mov
mov
mov
mov
mov
stos
jbe
cmp
dec
push
add
push
mov
jge
jns
add
push
add
mov
add
mov
add
and
push
xor
mov
mov
add
fs
xorl
lods
sub
cld
int
add
mov
inc
add
shll
or
aas
mov
mov
mov
adc
mov
add
outsb
js
jmp
mov
or
mov
mov
push
adc
mov
mov
add
add
mov
cld
jb
mov
sbb
rcll
mov
mov
jg
lahf
push
inc
or
mov
fstpl
leave
js
jg
inc
add
call
sub
rolb
mov
add
addr16
mov
add
mov
imul
lret
add
mov
mov
movsb
cld
daa
movsl
test
mov
aas
mov
je
pop
dec
jge
test
adc
push
add
js
cli
pushf
shrl
jb
mov
mov
ja
or
mov
inc
add
jne
arpl
add
dec
pop
arpl
in
test
mov
push
inc
add
fsubr
repnz
adc
mov
addb
push
xor
mov
in
pushf
mov
mov
mov
push
out
dec
mov
sbb
aas
addb
sub
adc
push
cld
mov
add
pusha
add
inc
xor
ss
sub
mov
stos
push
add
addl
add
mov
or
cmpsl
aam
movsb
jno
lret
mov
out
addb
sub
mov
cmp
mov
enter
mov
pop
loopne
mov
inc
mov
inc
pushf
cmc
mov
xchg
sti
cli
fistpll
dec
bound
mov
xor
mov
mov
and
mov
xchg
bound
mov
cmc
mov
xchg
nop
add
mov
adc
mov
push
jg
dec
mov
add
sti
push
lret
arpl
pushf
dec
xor
xchg
movl
sbb
add
mov
ficoms
mov
push
push
cmp
movsw
test
std
sub
out
jno
mov
nop
add
add
scas
ficoms
les
push
add
add
addr16
fldcw
cmp
punpcklbw
mov
inc
jle
xchg
add
pop
out
in
cwtl
ret
insl
mov
sbb
sarl
add
push
add
dec
loope
sub
pop
jns
stc
mov
mov
push
aaa
fwait
scas
jl
or
mov
add
mov
out
cwtl
push
rolb
mov
mov
add
mov
add
add
xlat
aam
outsb
mov
cmp
mov
push
sbb
inc
rolb
mov
fmuls
lods
sub
mov
add
jle
jg
testl
add
popf
mov
lods
rolb
mov
and
push
add
int3
cmp
rolb
mov
cmpsl
out
dec
xchg
lods
lcall
mov
repz
jmp
add
lods
loope
add
push
push
pusha
add
sub
outsb
cmp
outsb
inc
ljmp
sub
inc
int
sub
push
mov
addb
push
subl
insb
mov
loop
mov
inc
in
jge
pop
ret
xchg
add
xlat
jle
fists
add
jmp
add
popf
sbbl
mov
mov
mov
and
mov
data16
popf
into
fistpl
mov
sbb
or
xchg
push
add
jge
popa
outsb
gs
pushf
sub
push
loop
mov
xchg
mov
mov
mov
jmp
push
addr16
mov
loopne
mov
add
mov
aas
xchg
jnp
rcrl
scas
outsb
lret
pop
adc
mov
scas
scas
dec
out
jge
lret
pop
lods
cwtl
call
mov
cltd
out
sub
and
mov
ljmp
sahf
das
bound
mov
sub
dec
stos
sti
pop
push
test
sbb
add
fldt
fwait
push
pop
test
push
mov
call
xchg
mov
mov
mov
mov
jmp
call
and
add
rolb
mov
pop
pop
push
aas
rolb
jae
loope
cmp
add
sbb
pop
aam
lods
mov
jecxz
add
mov
add
hlt
and
aaa
iret
inc
inc
mov
sub
mov
push
jle
jnp
rolb
add
add
sbb
mov
aad
ss
cmpl
or
add
mov
push
into
lods
imul
sbb
subl
add
mov
add
push
sub
jmp
add
mov
mov
bound
mov
js
mov
pop
fiaddl
add
mov
mov
inc
inc
fwait
inc
or
stc
rolb
mov
lods
jg
jno
dec
repnz
adc
add
inc
add
mov
dec
leave
mov
mov
pop
addb
inc
push
dec
mov
mov
xchg
add
push
int
daa
xlat
pop
inc
jmp
cmp
inc
pop
mov
jmp
add
add
ficoms
mov
sbb
mov
mov
mov
xlat
fwait
lcall
jmp
cmp
divl
or
test
cwtl
sbb
xchg
add
adc
scas
cmp
xchg
jl
push
cmp
mov
mov
and
mov
stc
xor
add
mov
mov
lret
add
add
add
add
lcall
fwait
and
fs
add
add
jno
roll
add
mov
sti
mov
add
mov
test
arpl
sbb
mov
mov
repz
inc
cwtl
in
inc
mov
divl
sti
jecxz
mov
add
out
dec
pop
xor
mov
add
cld
mov
fadd
lret
add
in
xor
or
xor
mov
push
sub
adc
addb
cmpsl
les
add
inc
add
add
std
sbb
mov
pop
call
gs
mov
adc
pop
pop
and
mov
cmc
leave
add
mov
cmp
inc
add
add
ret
scas
daa
inc
xor
mov
mov
add
mov
lret
mov
rolb
pop
mov
jg
ret
rcll
jge
dec
xchg
stos
xor
add
out
sbb
repnz
mov
push
insb
fisttpl
or
inc
ffree
add
cld
cwtl
sahf
pop
iret
icebp
insl
mov
xor
mov
mov
pop
add
mov
loopne
mov
enter
jne
cmc
fdivr
sti
add
mov
add
jl
pop
lds
sub
xor
mov
pusha
add
dec
cmp
xor
mov
pop
mov
rolb
push
or
pop
iret
ds
push
add
add
push
mov
mov
nop
add
scas
imul
cmpl
mov
cs
jl
mov
mov
sub
nopl
shrl
mov
ret
pop
lret
add
mov
mov
xchg
aaa
in
ss
hlt
out
scas
xchg
add
or
mov
cwtl
pop
aam
jge
lea
jle
adc
xchg
pop
into
ds
mov
int
push
add
add
mov
mov
push
jb
mov
shrd
jp
sub
push
add
into
pop
xor
mov
test
pop
jne
mov
pop
loopne
mov
outsl
fstpl
jmp
add
mov
test
mov
into
fidivrl
add
add
rcll
scas
lods
xor
sbb
sbb
insl
inc
cmc
lock
fnstenv
mov
fs
das
daa
mov
add
mov
stos
in
cmp
arpl
es
loope
into
push
add
xchg
rolb
mov
insl
leave
inc
test
bound
mov
or
test
mov
ret
mov
mov
cli
pop
mov
pop
add
mov
cmp
ljmp
insb
in
fcmove
mov
cld
test
or
mov
add
mov
loope
adc
mov
add
push
insl
popa
out
adc
and
jb
mov
mov
add
mov
mov
add
or
add
movsl
insl
cwtl
int
fsts
add
pusha
add
inc
xchg
add
arpl
adc
add
adc
popf
rorl
mov
sbb
pop
out
cmpl
inc
add
mov
mov
add
cld
cwtl
mov
mov
fldenv
add
mov
jg
test
cmp
rcll
into
inc
add
inc
lods
xor
mov
out
add
inc
xchg
fsub
fstpt
stc
pop
and
mov
test
add
and
inc
stc
adc
or
dec
int3
mov
add
mov
mov
in
aaa
and
adc
add
jmp
mov
sbb
and
mov
add
mov
mov
xchg
out
cmp
jbe
and
mov
add
mov
add
bound
mov
cmp
test
add
aam
ja
cmc
pop
cltd
lret
int
push
test
js
mov
jecxz
jge
xor
or
add
lcall
xchg
adc
mov
mov
dec
inc
add
jno
imul
stos
dec
dec
and
add
mov
add
pop
leave
js
xchg
js
mov
push
fdivl
fadd
jns
push
xchg
add
inc
add
jecxz
lret
fdivrl
mov
add
xchg
aas
mov
jecxz
push
cmp
pop
jae
pop
loope
rcll
xor
in
mov
mov
jns
dec
addr16
fsubl
xor
cs
xor
mov
mov
out
out
mov
add
mov
mov
addb
fs
xchg
cmpsb
mov
mov
push
fstpl
mov
jmp
dec
or
sub
jnp
pop
repnz
xor
xor
mov
add
pusha
add
xlat
test
add
sbb
mov
add
mov
ret
stc
in
inc
sub
add
clc
jge
add
inc
mov
mov
sub
add
xlat
or
into
imul
inc
add
add
inc
add
inc
xchg
and
mov
outsl
fldenv
mov
scas
ljmp
mov
add
cmc
lret
fwait
mov
mov
or
popf
bound
mov
add
sahf
les
mov
pop
test
addl
mov
mov
mov
push
idivl
cmc
mov
jg
jns
dec
sub
add
pop
testl
jle
sub
cld
enter
inc
out
dec
fcmove
fnstsw
add
repnz
adc
lret
push
imul
inc
jbe
xor
aas
popf
rolb
mov
xor
lea
in
mov
outsb
or
stos
loop
mov
add
mov
inc
cmp
add
leave
in
scas
lea
test
rcr
or
jns
push
out
and
stos
mov
add
cmp
xchg
testl
arpl
mov
insb
cs
mov
in
mov
arpl
inc
imul
add
push
jle
sub
rcl
add
jg
push
in
sbb
push
add
add
mov
and
shrl
or
adc
into
push
addb
add
push
lret
lea
les
and
out
add
mov
add
mov
add
xchg
mov
add
pushf
fldl
add
push
mov
mov
add
mov
jae
add
xchg
mov
lret
les
inc
or
jb
mov
xchg
stos
inc
add
mov
cmp
bound
mov
add
inc
add
xor
mov
call
push
popl
ret
lret
jbe
jmp
in
mov
pusha
add
std
sbb
outsl
mov
cmpsb
popf
jns
sbb
mov
test
cmp
add
xor
pop
mov
lods
add
push
fisttps
push
lds
je
add
ffree
outsb
inc
add
mov
repz
jle
pop
mov
mov
div
push
nop
add
pop
int
push
fchs
add
push
inc
mov
mov
mov
jge
jo
mov
mov
stc
enter
jo
mov
imul
pop
daa
test
jmp
xchg
ja
xchg
cwtl
fidivrs
stc
add
mov
mov
stc
stc
pop
pop
xor
adc
mov
or
xchg
ds
gs
sbb
add
cwtl
in
add
jno
add
and
mov
add
push
push
jge
daa
pushl
add
mov
add
mov
mov
mov
or
push
add
test
out
loopne
mov
inc
lret
mov
mov
cmp
popa
cs
not
or
push
addr16
shrl
and
mov
add
mov
add
add
scas
cwtl
xor
dec
cmp
and
add
and
pop
mov
sub
out
jp
rolb
mov
mov
sub
loope
cwtl
in
mov
mov
cltd
inc
addr16
add
add
jns
and
std
jbe
into
fs
iret
lods
xlat
push
add
mov
push
xor
loop
mov
mov
or
sub
jns
divb
and
mov
lea
add
or
movsb
stc
cmp
rcrl
cmp
dec
addr16
sahf
jle
movsb
xchg
out
mov
mov
addb
inc
movsl
test
or
xor
mov
in
loop
mov
push
add
push
push
cmp
imul
cmp
movsl
or
pop
ljmp
xor
add
fidivrs
dec
push
or
das
fcomip
jecxz
rolb
orl
xor
ja
inc
add
incb
mov
aaa
je
add
add
aad
cmp
mov
cwtl
or
pop
dec
test
add
inc
add
add
test
push
adc
mov
pop
jbe
in
mov
add
in
addb
jbe
mov
pop
xor
mov
jle
nop
add
jle
ja
add
and
fiadds
aad
adc
inc
add
out
cltd
dec
mov
xor
mov
fdivr
inc
cmpsb
inc
add
add
cli
dec
xor
mov
push
sub
stos
pop
lods
scas
push
add
mov
sub
mov
xchg
pop
mov
mov
jne
xchg
test
mov
add
adc
mov
add
mov
and
mov
mov
sbb
add
rcll
mov
pop
addl
jns
push
cmp
outsb
inc
cltd
xor
adc
mov
xchg
add
dec
lds
add
mov
push
cmc
xchg
inc
add
test
add
je
lods
cld
push
dec
jno
inc
add
inc
loopne
mov
add
mov
mov
mov
out
mov
imul
movsl
fcomp
ret
mov
aad
es
mov
add
xor
xor
mov
jmp
fmuls
cmpsb
dec
pop
repnz
inc
into
pop
dec
adc
push
sub
ret
jp
or
add
pop
shll
mov
cmp
inc
add
adc
fs
add
add
sbbl
fimuls
insl
xor
mov
push
adc
cli
gs
add
sbb
int
movsb
pusha
add
xor
mov
push
out
mov
add
mov
test
ret
jg
xchg
pop
cltd
outsl
and
jae
fs
add
lcall
nop
add
mov
sbb
add
rcll
repz
dec
jbe
push
test
push
xchg
les
mov
or
ljmp
add
mov
sbb
push
jge
or
pushl
cmp
mov
cs
pop
stc
iret
cmp
mov
dec
lcall
and
jle
bound
mov
push
aaa
rcll
pop
xchg
ss
jmp
add
mov
clc
inc
cltd
xor
or
lahf
jns
push
dec
mov
pop
push
dec
daa
jbe
add
lea
cmp
jl
imul
lret
movsl
mov
test
add
mov
scas
inc
mov
mov
add
mov
ret
pop
mov
aas
addb
inc
inc
mov
cmp
sbb
xor
insl
fldl
cmp
daa
pop
xor
mov
xchg
iret
add
bound
mov
add
icebp
and
mov
sbb
push
add
add
mov
lock
in
ds
addb
pop
hlt
or
call
nop
add
add
add
xlat
das
scas
mov
mov
cmp
add
stc
jp
add
insl
lods
inc
add
insl
dec
jp
add
push
xrelease
push
pop
cmp
and
enter
mov
jbe
bound
mov
dec
mov
aad
add
stos
and
mov
pop
xor
mov
mov
mov
add
add
mov
int
lahf
daa
and
xor
mov
push
ja
scas
out
dec
push
dec
hlt
and
insb
gs
push
inc
add
fdivr
iret
testl
dec
inc
mov
sti
lret
dec
adc
lock
push
cmp
bound
mov
inc
jno
or
add
fildll
push
mov
mov
push
aas
test
pop
loop
mov
std
and
jne
or
ss
fcompl
jnp
xchg
nop
add
adc
sbb
out
sti
lods
imul
mov
nop
add
mov
mov
xchg
pop
insb
loopne
mov
add
inc
add
test
and
mov
into
ljmp
add
mov
pop
testl
test
add
add
sub
stc
cmp
xor
cmpsb
fldl
pop
fwait
les
pop
ljmp
mov
mov
add
out
mov
mov
insl
push
rolb
lock
push
xchg
popa
mov
sbb
or
jp
movsl
jecxz
pop
cltd
cs
mov
js
add
mov
jno
mov
cmp
jp
cli
inc
les
dec
and
and
add
push
lcall
imul
dec
jle
movsb
jg
ss
mov
mov
popf
or
and
mov
dec
rep
push
and
push
clc
push
out
insb
ja
jge
mov
or
mov
push
stos
lahf
mov
pop
adc
cli
xchg
sbb
jecxz
sub
jg
rolb
pop
sub
add
sbb
mov
push
inc
jle
lds
push
add
mov
out
add
mov
jp
cld
bound
mov
push
rcll
out
inc
in
test
in
dec
lds
push
push
add
dec
adc
mov
push
pop
cmp
ds
add
aad
bound
mov
cld
cmpsb
pop
push
les
mov
mov
lret
in
rolb
mov
mov
mov
xor
in
cmp
xchg
pop
xchg
add
pushf
call
ret
inc
lahf
or
and
addb
xchg
xorl
sbb
rolb
int3
cmpsb
lods
bound
mov
call
cmp
mov
push
clc
cltd
add
mov
cmp
ret
sbb
add
ljmp
add
mov
pop
sbb
jle
out
xchg
sbb
jl
rolb
mov
add
pushf
movsb
test
insb
cmpsb
nop
add
std
insl
inc
mov
mov
xor
fs
movsb
push
lds
outsb
ja
xor
and
mov
or
add
jne
lods
xchg
add
repz
arpl
mov
enter
adc
add
lret
lahf
xchg
pop
aaa
rolb
pop
xor
xor
add
mov
fildl
xor
fisttpll
pop
and
mov
mov
dec
test
add
and
addb
fcom
scas
jg
pop
pop
mov
sbb
test
lahf
clc
push
mov
scas
dec
xchg
add
mov
pop
or
mov
sbb
aas
jne
or
jmp
stc
jb
mov
test
jp
add
rolb
mov
lods
mov
mov
popa
repz
int3
mov
dec
addb
repz
lret
cmpsb
sbb
jp
inc
or
sub
add
bound
mov
xchg
fiaddl
dec
xorl
jb
mov
or
sbb
sub
cld
cmpsl
cltd
addb
dec
mov
mov
sbb
test
pop
in
add
add
or
mov
add
mov
adc
sbb
xchg
xchg
cmc
jg
ret
sub
add
gs
add
push
jbe
add
fsubrp
aaa
movsl
jo
mov
xchg
lret
mov
sbb
mov
pop
cli
movsl
push
add
and
int
cmp
and
add
cmp
mov
addb
pop
enter
add
add
imul
jmp
iret
mov
movsl
pop
dec
mov
mov
or
out
addb
imul
rolb
test
mov
lahf
or
mov
mov
inc
add
mov
rolb
mov
ja
adc
mov
gs
xor
mov
cltd
cmp
aad
push
insl
imul
mov
sub
pop
sti
in
adc
mov
add
in
test
add
bound
mov
stos
add
or
fiaddl
add
mov
and
mov
jl
lods
push
pop
jg
add
and
mov
mov
mov
js
add
repz
pop
lahf
and
mov
in
popa
sbb
add
pushf
push
add
mov
xor
push
xchg
xchg
test
jecxz
dec
dec
xchg
add
je
aaa
fisttpl
addb
lret
popf
add
cld
mov
add
and
mov
lahf
push
and
movsb
cwtl
loope
add
jb
mov
add
jo
mov
mov
xor
cs
sti
dec
lods
dec
jmp
out
cmp
add
js
aam
mov
adc
sbb
add
mov
add
ljmp
gs
dec
xor
mov
mov
add
imul
jp
jl
and
bts
cmp
jl
lock
outsb
test
dec
fmul
mov
jg
mov
cmp
add
inc
test
dec
jl
cmp
adc
not
popf
lea
mov
jne
sbb
cmp
add
xchg
mov
jg
add
and
mov
dec
pop
imul
add
mov
call
test
sub
mov
mov
add
fildl
pop
addb
adc
push
enter
xchg
int3
sub
xor
mov
adc
fidivl
push
scas
inc
add
push
and
mov
rolb
add
mov
outsb
push
incl
add
push
add
add
dec
outsl
imul
int3
adc
mov
pop
loope
into
mov
fsubs
mov
aam
stos
mov
sti
cs
inc
xor
mov
mov
inc
ret
aad
xchg
aaa
xchg
icebp
lret
jno
rolb
adc
add
rcll
stos
push
add
mov
mov
mov
jp
add
add
mov
jp
nop
add
pop
stos
jbe
mov
sub
and
mov
iret
xor
pop
xchg
adc
jl
roll
addb
xchg
call
add
xor
xchg
cmp
stc
popf
jbe
add
testl
xchg
clc
sub
cmp
xchg
xchg
pop
cli
or
fsubs
add
xchg
xchg
push
sbb
mov
cwtl
mov
cld
sbb
cmc
loope
lahf
ret
and
mov
idivb
cmp
mov
mov
mov
mov
or
mov
adc
mov
add
call
xor
lds
loope
lea
jno
popf
push
into
mov
mov
sub
mov
mov
mov
mov
out
test
pop
addl
out
call
jecxz
jmp
add
add
jp
sub
lea
xchg
add
pop
fs
push
cmc
lods
cwtl
aam
add
ds
ja
test
ss
int3
push
add
lcall
xor
sahf
leave
fcoml
and
mov
lea
gs
rolb
mov
add
push
loop
mov
inc
aaa
xchg
pop
xor
or
out
add
add
mov
fwait
jp
inc
jecxz
jmp
push
lock
adc
mov
add
fwait
push
subl
inc
lcall
inc
add
mov
movlps
mov
add
sbb
gs
cmp
add
adc
mov
ffree
xchg
add
maskmovq
testl
fdivr
mov
movsl
sub
mov
mov
sbb
loop
mov
mov
mov
xor
out
inc
lds
mov
add
out
lock
mov
add
fwait
mov
mov
add
or
ret
jns
dec
cmp
popa
data16
mov
int
xlat
ljmp
or
addb
inc
bound
mov
mov
loop
mov
adc
cli
nop
add
push
test
stos
fldcw
mov
add
insl
push
pop
sbb
jl
jb
mov
sub
jno
xchg
stos
and
mov
add
gs
dec
fildl
mov
das
mov
in
js
lret
sbb
jmp
xchg
inc
leave
out
sub
sbb
adc
mov
mov
imul
sbb
add
add
fwait
push
sub
inc
sub
fsubrl
pop
loop
mov
push
add
mov
mov
xchg
int
dec
push
fiadds
cmp
cs
inc
push
add
add
mov
adc
mov
add
mov
mov
add
jb
mov
adc
in
dec
lcall
pop
adc
add
add
xchg
mov
add
dec
cmp
nop
add
mov
imul
inc
adc
add
js
idivb
das
mov
rep
dec
or
add
sbb
lahf
bound
mov
push
dec
and
add
mov
mov
xchg
add
dec
leave
test
test
lods
xchg
mov
mov
ss
inc
pop
mov
mov
add
dec
jns
aam
or
mov
dec
pop
cmp
add
jmp
ss
fwait
das
add
mov
mov
mov
nop
add
notl
mov
jecxz
adc
add
gs
jne
scas
daa
idivb
or
and
sbbl
in
imul
rolb
mov
jecxz
out
popf
je
xchg
cmpsb
push
in
xor
mov
adc
mov
lahf
dec
imul
add
fists
push
dec
pop
mov
adc
sub
push
xchg
lret
jbe
add
xchg
sahf
ret
sbb
outsl
aad
add
loopne
mov
movsb
jmp
push
int
add
or
push
test
addb
xchg
dec
ss
mov
add
mov
mov
add
add
mov
dec
rolb
mov
add
mov
sbb
cmpsl
iret
nop
add
sub
aad
inc
push
mov
insl
popa
push
fsubl
add
fwait
dec
out
dec
push
ret
aad
jl
add
add
cmpsl
adc
mov
int3
dec
inc
add
add
sub
sbb
dec
mov
fdivl
sbb
rolb
mov
inc
in
dec
push
add
xor
mov
hlt
inc
loope
xchg
adc
mov
mov
sub
mov
pop
repnz
and
mov
mov
cld
pop
leave
movsb
and
into
jae
inc
and
and
add
mov
push
aad
clc
adc
mov
add
jns
mov
fimull
jp
jp
mov
push
inc
add
mov
lock
movsl
pushf
sbb
and
mov
push
add
fnsave
mov
jnp
push
jno
mov
mov
gs
fcmove
cmc
mov
rolb
mov
and
xchg
push
add
addb
jnp
mov
add
mov
ds
rolb
mov
dec
xchg
and
sub
cwtl
fsts
mov
adc
mov
mov
jmp
add
je
sbb
aad
jmp
rolb
mov
xor
adcl
idiv
mov
daa
sub
loope
or
mov
lret
fisttpll
xchg
add
sub
rolb
mov
adc
mov
jp
dec
inc
jecxz
push
shll
xlat
jle
dec
je
roll
sbb
lidtl
push
pop
sbb
fcmove
xchg
aad
lahf
adc
dec
rcrl
dec
outsl
addb
icebp
add
mov
add
outsb
sbb
add
rolb
cltd
sbb
dec
mov
arpl
or
imul
aad
sub
xor
sbb
cmc
inc
fldt
dec
inc
mov
ret
sub
mov
movsl
adc
mov
mov
or
add
add
repnz
jae
add
add
mov
fwait
rolb
mov
add
lret
mov
add
mov
or
push
jl
repz
std
mov
add
dec
mov
fisttpl
dec
mov
dec
popa
cmp
divb
add
jns
add
in
in
mov
sbb
js
arpl
adc
mov
mov
aaa
push
add
inc
add
out
or
mov
sbb
and
mov
mov
fsub
add
add
jp
add
lods
cmc
inc
push
cmp
xchg
add
mov
dec
pop
subl
and
mov
add
lsl
sbb
dec
stos
popa
cmpsb
repz
insl
mov
int3
lret
mov
fsubrl
cld
imul
sub
loopne
mov
add
adc
mov
cmp
mov
xorl
inc
add
jp
jecxz
test
fnstsw
push
enter
cld
jmp
test
bound
mov
cmp
test
add
push
mov
mov
fisttpl
mov
mov
dec
add
cmp
jmp
add
add
push
cld
cld
cmp
mov
add
enter
mov
add
dec
stc
pop
push
cmpsb
test
rolb
mov
outsb
sub
lock
mov
aas
dec
aad
mov
out
icebp
mov
add
jg
aaa
outsl
jae
mov
adc
movsl
xor
out
mov
lahf
ljmp
adc
mov
pusha
add
add
mov
add
mov
lods
out
testl
jg
xchg
add
mov
sub
lods
sbb
pushf
addr16
jmp
sub
enter
mov
fistpll
repz
ja
fs
pushf
push
mov
mov
push
lret
imul
mov
adc
mov
in
ja
and
mov
and
fcoms
fstpt
jge
cld
push
inc
jl
iret
xor
mov
std
inc
and
push
add
cmp
push
cmpsb
int
add
out
cs
push
add
add
ss
mov
and
loopne
mov
sbb
into
pop
dec
into
icebp
rolb
sbb
aaa
dec
lahf
sub
sbb
sub
jb
mov
scas
push
lds
das
fsubr
mov
add
add
add
daa
xchg
outsb
mov
mov
push
mov
ja
sub
and
inc
in
leave
mov
jmp
inc
sub
into
jb
mov
icebp
scas
or
adc
mov
rolb
mov
add
clc
mov
daa
mov
add
add
les
popf
sbb
adc
insb
inc
testl
pop
repnz
xor
mov
add
into
adc
mov
mov
lods
sub
jnp
aas
mov
add
dec
mov
sbb
xor
mov
mov
aad
icebp
les
ss
pop
add
mov
and
mov
out
bound
mov
or
and
mov
mov
add
mov
fucom
xchg
pop
scas
or
sub
loopne
mov
mov
xchg
add
dec
mov
mov
mov
xlat
pop
insb
sbb
add
and
mov
pop
sahf
push
sbb
dec
das
jmp
rolb
mov
dec
pushf
es
scas
jne
mov
add
jle
xor
mov
es
pop
sbb
add
pushf
sarl
jo
mov
add
aaa
pop
jmp
pop
testb
add
inc
add
repz
mov
mov
push
rolb
mov
int
pop
iret
push
addb
push
mov
xchg
sbb
test
or
xchg
jmp
pop
xor
mov
rcll
insl
imul
lahf
lock
add
xchg
adc
mov
repz
mov
add
pop
ret
dec
cmp
stos
push
adc
add
mov
mov
insb
pop
mov
inc
mov
pop
pop
jb
mov
dec
pop
push
xchg
push
jb
mov
push
mov
pop
ret
cmp
mov
pop
je
mov
roll
mov
mov
pusha
add
mov
mov
lahf
lret
push
mov
fidivl
add
inc
out
lds
push
daa
sbb
push
or
mov
add
push
push
cmp
mov
lahf
mov
out
ror
add
pop
into
jb
mov
inc
aam
outsb
and
push
insl
andl
mov
jg
push
bound
mov
stos
push
das
inc
add
push
cld
imul
mov
mov
add
or
loop
mov
ja
addb
aas
push
push
loop
mov
aad
lahf
pop
and
mov
xchg
mov
lods
mov
add
mov
into
sub
sbb
mov
insl
lea
mov
sti
add
mov
and
mov
popf
inc
add
add
hlt
loop
mov
jmp
cld
jmp
adc
mov
mov
mov
mov
and
lock
arpl
sbb
inc
adc
mov
addb
pop
ret
mov
int
lods
sahf
lds
ret
add
scas
pop
loope
jne
add
add
or
push
mulb
xchg
adc
mov
and
mov
push
dec
addb
aas
mov
cmp
jl
push
sub
mov
inc
inc
add
mov
xchg
repz
lods
dec
xchg
add
push
stos
rolb
test
icebp
mov
cmp
push
fnstcw
add
mov
push
mov
cld
inc
mov
cmc
cld
mov
lcall
xchg
lds
mov
lock
sub
je
bound
mov
int
inc
mov
imul
dec
dec
sub
or
imul
cli
dec
imul
xchg
or
sub
add
cmpsl
adc
daa
sbb
mov
lods
inc
xchg
scas
gs
xchg
data16
adc
push
shll
jno
scas
cli
cmp
in
cs
dec
jno
sbb
insb
lea
cltd
cltd
fistl
xchg
mov
add
xor
dec
push
xor
add
xchg
push
add
xor
mov
fisttps
xchg
insb
and
pop
cmp
mov
inc
cs
cs
ljmp
ja
sbbl
inc
add
out
addb
addb
and
mov
and
out
dec
imul
repnz
xchg
lods
sub
and
outsb
sbb
cltd
lock
rolb
cltd
inc
aad
mov
mov
out
push
jb
mov
mov
mov
mov
push
out
xchg
es
sub
ljmp
pop
loopne
mov
cmp
into
or
ja
cli
pop
out
es
xor
jg
fwait
or
mov
push
mov
dec
repnz
mov
and
pop
mov
loop
mov
or
out
mov
mov
jmp
pushw
push
pop
xchg
insl
clc
bound
mov
mov
imulb
addr16
add
xchg
call
out
mov
mov
andl
mov
add
mov
stos
ds
mov
or
rcll
dec
test
stc
xchg
xchg
ja
aas
xor
lret
incb
xchg
sbb
ja
jae
fstps
cs
cmp
or
out
js
mov
push
push
in
fdivrs
pop
push
dec
inc
add
outsl
cmp
pop
mov
lahf
divb
inc
call
mov
add
and
loope
add
or
adc
mov
cmp
pop
stos
sbb
or
xchg
sbb
xor
mov
sahf
xor
add
mov
and
push
and
add
nop
add
in
adc
mov
imul
pop
add
mov
dec
ds
mov
xchg
data16
inc
jnp
fwait
or
xor
and
add
scas
fs
add
push
cltd
mov
outsl
int
push
loope
scas
pusha
add
in
test
or
daa
nop
add
mov
push
jne
jnp
cmc
sbb
push
iret
cli
mov
fwait
pop
pop
cmp
imul
cmp
test
pop
das
rcll
add
outsb
sbb
addb
dec
jns
nop
add
cmp
icebp
inc
add
out
mov
sub
adc
into
mov
add
ljmp
or
dec
addb
pushf
popa
mov
mov
mov
add
mov
inc
mov
add
jo
mov
add
and
jge
out
push
scas
push
arpl
mov
cmp
sbb
lods
jg
std
bound
mov
mov
mov
flds
movsb
outsl
ror
loope
popf
mov
cmc
sbb
pusha
add
popa
test
mov
nop
add
mov
jmp
add
enter
stc
insl
or
xchg
jp
aas
xor
repnz
popl
mov
lea
push
or
aas
jp
jae
incb
fstpl
dec
jne
add
movsb
inc
cmpsb
adc
stc
mov
sbb
pushf
mov
inc
movsb
xor
mov
cmpsb
in
add
add
mov
mov
add
addb
add
cld
mov
mov
cmpsl
les
mov
xchg
fsts
xchg
lods
movsl
lods
gs
add
add
mov
int3
inc
test
pop
adc
mov
xchg
push
add
adc
mov
mov
aam
push
fistl
lret
mov
adc
mov
rolb
xchg
and
add
mov
testl
in
cmp
flds
addb
push
add
xchg
ficomps
arpl
mov
sahf
and
mov
add
pushf
cmp
test
sbb
xlat
sub
inc
cli
cmp
mov
ds
mov
adc
mov
addb
out
xor
add
je
pushf
mov
mov
xor
imul
iret
lods
and
nop
add
add
mov
outsl
xor
xlat
stos
jg
stos
popf
gs
jae
jle
xor
icebp
push
add
push
test
data16
mov
mov
ljmp
fyl2x
mov
std
mov
adc
mov
xadd
mov
add
pop
test
xor
popf
pop
ljmp
test
inc
loope
cld
js
outsl
js
xchg
fimuls
test
cmp
add
xor
mov
je
jle
mov
push
cmpps
mov
mov
mov
sarl
mov
scas
rorl
fnstenv
jbe
enter
jge
call
add
repnz
add
add
dec
in
and
mov
add
cs
sti
xlat
sub
add
mov
mov
arpl
mov
out
popf
jl
les
in
push
add
pushf
inc
mov
fldenv
mov
add
inc
lahf
sti
inc
add
xchg
lcall
dec
lock
mov
mov
hlt
mov
mov
jle
xchg
call
xchg
mov
fisttps
rcrl
mov
cwtl
sub
add
mov
mov
inc
add
push
mov
push
add
repz
cwtl
clc
shrl
cltd
mov
popa
jo
mov
out
cmc
cmp
rolb
sub
incb
add
inc
lods
dec
push
add
cmp
or
inc
iret
sub
sbb
xchg
cmp
mov
fbstp
mov
mov
add
scas
inc
add
add
dec
xchg
mov
scas
cmc
adc
add
xchg
inc
add
daa
pop
xchg
jmp
push
push
adc
mov
add
in
les
xor
jg
jecxz
push
ss
les
mov
addl
stos
paddusb
add
and
and
mov
mov
add
dec
jp
data16
cmp
iret
fldcw
sbb
dec
and
icebp
mov
inc
outsb
mov
int
dec
mov
pop
dec
push
outsb
mov
mov
addr16
test
mov
add
and
mov
mov
add
jne
fdiv
add
mov
movsl
bound
mov
in
icebp
out
enter
data16
pop
mov
add
push
add
and
add
dec
mov
mov
sub
push
in
jae
add
sbbl
xchg
add
add
es
movsb
fbld
mov
jmp
mov
mov
mov
mov
mov
dec
outsl
push
mov
mov
mov
out
jne
cmp
in
jae
xrelease
addb
idivb
add
mov
adc
ljmp
mov
add
fs
cmp
xchg
add
add
add
jb
mov
cmp
repz
add
mov
mov
jnp
jecxz
add
in
popf
shll
addb
pushf
and
mov
add
add
mov
and
mov
fcomp
lock
mov
stos
adc
mov
js
int
jo
mov
jecxz
jmp
add
mov
add
pop
out
icebp
sbb
add
adc
mov
add
add
jle
fstpt
mov
test
add
and
andl
add
mov
pop
out
adc
push
jecxz
mov
or
cmp
adc
xchg
divl
add
cmc
fcoms
add
icebp
aas
lahf
les
pushf
orl
mov
ret
sbb
dec
xchg
dec
sbb
fs
xor
mov
add
lcall
repz
jno
cs
and
or
push
and
or
xchg
ja
cmc
mov
jle
mov
mov
pop
je
pop
dec
or
add
outsl
and
mov
sbb
xchg
rorl
and
mov
push
push
add
mov
inc
add
add
mov
add
mov
inc
xchg
jle
jge
mov
cmp
add
or
sbb
mov
cmp
ret
stos
jg
add
add
adc
aam
mov
add
sub
insb
js
add
cltd
sbb
add
out
das
ss
inc
add
test
je
xchg
nop
add
lret
mov
mov
cld
mov
mov
mov
mov
insb
push
add
stos
add
mov
sub
les
mov
inc
fs
xchg
pop
inc
pushf
enter
add
rolb
mov
js
into
imul
adc
ss
sahf
repnz
ret
pop
loopne
mov
mov
test
sub
mov
push
add
add
and
mov
bound
mov
lcall
mov
addr16
and
mov
sti
mov
pop
enter
stc
sbb
js
adc
inc
rolb
mov
add
sub
or
mov
or
fadd
mov
inc
push
push
add
push
leave
mov
or
call
dec
xor
mov
xchg
das
jecxz
jnp
adc
xchg
scas
jl
jmp
add
jmp
rolb
pushf
out
test
mov
xorl
mov
pop
mov
mov
mov
mov
mov
add
mov
icebp
fnsave
out
lcall
std
push
xchg
jo
mov
jmp
addb
lods
adc
add
adc
mov
mov
rolb
fnsave
test
or
test
adc
cmpsb
add
stos
pop
ds
sbb
push
fcmovnu
cmp
xor
jle
mov
and
aas
jp
adc
push
int
sub
push
sub
jnp
jns
stos
push
imul
pop
mov
cli
decb
mov
mov
fs
adc
mov
addb
fisttps
cltd
mov
mov
mov
scas
mov
mov
std
jo
mov
and
inc
add
data16
jno
mov
dec
ret
or
mov
addb
pop
and
add
cmp
mov
repz
mov
mov
lea
or
mov
rcll
xor
mov
mov
add
mov
jmp
cli
push
and
mov
insl
or
fildl
jbe
add
mov
push
add
mov
mov
pop
pop
mov
mov
repz
add
add
add
mov
test
mov
push
rolb
mov
dec
mov
fistpl
ret
gs
add
mov
jmp
ficoml
pop
pop
stc
mov
repnz
outsl
aas
ds
add
pop
mov
adc
add
mov
xchg
lret
xchg
fwait
xor
mov
fmuls
cs
push
pop
loope
mov
add
inc
aas
mov
mov
outsb
subl
sbb
rcr
ljmp
add
xor
mov
inc
and
mov
xor
pop
shl
mov
add
mov
rcll
mov
out
mov
and
mov
add
mov
repz
data16
movsb
sahf
aam
sbb
cmp
addr16
scas
in
int
push
add
mov
jmp
int3
and
leave
add
mov
jae
and
mov
lds
sbb
mov
inc
add
mov
mov
add
mov
mov
xchg
inc
mov
out
rolb
mov
shll
ja
jnp
cmpsl
cli
das
in
lahf
mov
in
jge
popf
mov
xor
test
mov
add
sub
jecxz
inc
nop
add
int3
scas
mov
add
and
mov
mov
xor
mov
jl
jmp
dec
dec
xlat
mov
mov
add
je
lret
mov
cmp
mov
jno
cmpsb
lea
test
adc
inc
mov
int3
fwait
pop
out
push
je
inc
pusha
add
inc
in
mov
add
cmp
add
push
inc
add
mov
add
mov
repnz
mov
mov
loop
mov
jg
cmp
adc
mov
xchg
sbb
mov
cld
push
je
cmpsb
mov
outsl
mov
add
add
inc
add
add
in
xor
outsl
ficoms
mov
jge
jp
add
jmp
outsl
or
push
add
das
iret
push
pop
out
repz
addr16
mov
mov
call
daa
push
inc
jge
lds
mov
xor
mov
jnp
push
mov
inc
add
ljmp
dec
jge
adc
xchg
add
imul
xchg
in
mov
ljmp
jb
mov
rolb
mov
push
jnp
ret
in
cmp
mov
push
push
mov
mov
mov
add
fwait
jb
mov
std
adcl
mov
dec
fldt
ffree
adc
icebp
jge
or
dec
and
cmpsl
mov
das
jo
mov
pop
adc
mov
add
rolb
mov
rolb
mov
out
movl
mov
mov
dec
aad
add
cltd
mov
add
div
mov
jle
xor
sbb
outsl
pop
pop
enter
ficompl
sbb
pusha
add
add
aad
adc
mov
lcall
add
and
jge
and
add
mov
inc
inc
rolb
mov
mov
int
repz
cmpsl
pop
mov
xor
ds
lea
add
fwait
dec
outsb
cs
fildl
cwtl
push
test
add
movsl
fnstsw
imul
add
je
push
add
mov
and
mov
or
enter
ljmp
test
lcall
jae
adc
inc
ljmp
jae
repnz
fsub
cmp
imul
int3
rolb
mov
out
std
aam
movsb
pop
push
ss
faddl
lock
push
push
pop
lods
or
shll
push
add
inc
ret
call
insb
out
movsl
xchg
xor
jbe
lds
mov
cmp
jae
mov
push
xchg
or
mov
mov
test
dec
std
popl
aaa
rorl
fbstp
mov
push
add
bound
mov
bound
mov
add
addb
cwtl
lahf
mov
mov
jb
mov
add
xchg
insl
cmpsb
push
or
jns
cld
jp
add
or
sbb
mov
mov
mov
ds
pop
idivb
call
jl
js
jge
mov
xchg
leave
jmp
add
add
mov
jo
mov
inc
pop
jmp
ja
add
sbb
add
inc
add
jb
mov
neg
xchg
add
mov
add
add
push
adc
and
mov
xor
mov
push
xchg
dec
xor
mov
add
mov
mov
mov
in
out
rcrl
and
mov
add
jno
divl
push
imul
cli
shl
sahf
mov
test
dec
test
add
imul
aaa
push
cmp
jl
jecxz
insb
leave
test
adc
mov
add
pop
sub
insb
cltd
nop
add
push
add
push
icebp
ficomps
daa
xchg
das
sbb
fdivr
xchg
cmc
add
or
imul
stc
enter
test
jge
bound
mov
addb
mov
sub
sbb
sti
and
add
mov
jae
add
leave
pop
or
and
mov
daa
fdivs
cmc
pop
jmp
adc
mov
xchg
or
int
stos
jns
roll
jb
mov
sbb
add
cmp
jbe
mov
fsubl
mov
lds
adc
mov
jns
mov
jns
jmp
lock
loop
mov
loop
mov
mov
adc
loope
aam
and
mov
add
fadds
mov
daa
inc
and
mov
ljmp
push
lea
fwait
gs
add
ret
and
mov
insl
js
repz
cmpsb
add
mov
mov
insb
int3
stc
test
mulb
mov
jp
out
add
add
sbb
jno
sub
mov
mov
mov
test
mov
cltd
stos
stos
fnsave
cmp
mov
mov
add
sahf
jle
jns
mov
out
or
fwait
iret
mov
or
mov
dec
cmp
mov
cmpsl
mov
nop
add
insl
outsb
rolb
mov
or
les
lock
sub
cmp
jo
mov
add
enter
add
xchg
xchg
in
mov
xchg
push
loope
adc
add
mov
xor
mov
cmpsb
sbb
mov
dec
inc
add
popf
mov
mov
add
mov
nop
add
sahf
lods
push
mov
jae
xor
mov
jg
mov
add
cmp
cld
sbb
or
mov
push
add
add
loop
mov
push
inc
and
lock
cmpsb
pop
mov
test
fsubrl
notl
fnstcw
mov
sub
leave
or
pop
push
jp
in
mov
cmp
lcall
mov
mov
lds
into
jno,pt
test
jb
mov
xrelease
out
imul
testl
mov
mov
es
enter
mov
add
add
inc
push
shll
jns
inc
xchg
and
add
or
add
mov
sbb
mov
add
inc
add
or
inc
push
xor
pushf
inc
ficoms
add
arpl
jp
push
mov
push
push
bound
mov
add
add
mov
mov
sbb
add
out
fldenv
cmc
cmc
insl
ss
ja
cmpsb
mulb
in
xchg
test
movzbl
mov
fwait
pop
int
cmpsl
dec
xchg
jge
pop
mov
mov
add
movsl
xlat
inc
add
pop
in
add
mov
pop
insl
arpl
mov
mov
dec
and
ja
pop
cmp
popa
inc
mov
lea
hlt
ret
add
dec
sub
lcall
cmp
sbb
iret
adc
test
js
cmp
ret
push
lcall
pop
out
inc
jg
adc
add
mov
mov
in
xchg
hlt
mov
sbb
add
rolb
mov
add
mov
cmpsl
mov
mov
xor
mov
lcall
lods
stc
es
or
mov
fcmovnu
push
fisubrl
add
add
movsl
in
jge
mov
add
jle
sbb
sub
roll
xor
mov
add
sub
shl
add
movsl
outsl
fsubrp
jo
mov
addb
push
outsb
or
lcall
fcmove
mov
and
jle
add
leave
stos
adc
mov
std
mov
pushl
mov
jb
mov
add
add
lea
jge
jnp
add
mov
mov
mov
xchg
sub
and
add
mov
shl
mov
mov
mov
mov
fmuls
mov
and
mov
rcll
mov
sub
add
add
incl
lock
jg
xchg
aas
push
dec
lds
mov
cmc
sbb
rolb
mov
pop
ljmp
add
push
push
pop
dec
outsb
add
andl
lea
xchg
test
mov
rolb
loopne
mov
mov
add
add
sbb
mov
fwait
decl
xor
add
mov
sub
mov
out
out
add
mov
mov
nop
add
das
clc
loopne
mov
add
pop
push
add
add
mov
mov
add
jnp
test
out
add
and
mov
push
add
mov
xchg
inc
adc
mov
sbb
pop
lods
loopne
mov
repz
leave
and
mov
inc
add
iret
pop
insb
stos
call
testl
dec
out
dec
jb
mov
mov
mov
adc
mov
adc
pushf
jl
add
mov
mov
les
xchg
cld
mov
popf
js
mov
cmc
rolb
or
mov
add
mov
test
mov
mov
sub
cmp
push
add
push
rolb
mov
bound
mov
pop
cmp
mov
int3
lea
mov
fstl
dec
addl
cmovle
add
arpl
push
add
inc
std
lods
push
div
add
jle
test
add
mov
xchg
in
roll
ja
mov
xchg
add
add
fcmovbe
jae
xchg
jmp
fidivrl
dec
repz
xchg
loope
mov
xor
mov
push
or
iret
push
cli
mov
dec
xchg
cmp
mov
add
fwait
or
add
add
je
add
mov
mov
sbb
ja
jp
out
sbb
ds
lea
add
push
movsb
pop
insl
pop
xchg
imul
mov
cltd
pop
cmp
out
add
in
dec
push
mov
inc
or
ds
gs
mov
add
dec
aaa
mov
cmp
lock
add
mov
and
mov
add
je
xchg
mulps
jo
mov
add
mov
sub
mov
jp
fucomp
add
mov
mov
cmpsl
xor
mov
out
inc
xchg
add
ret
pop
push
push
sbb
stc
aam
push
mov
roll
add
outsb
mov
fwait
lret
add
jns
andl
push
add
loopne
mov
cmpsl
push
adc
xor
add
mov
mov
cs
arpl
lock
inc
add
mov
movsb
dec
jle
in
cmp
add
mov
mulb
in
mov
out
add
push
adc
sub
add
mov
xor
mov
add
add
inc
cmpsl
test
add
mov
xor
jae
push
add
mov
insl
notl
mov
xorl
add
xchg
hlt
xchg
inc
and
movl
mov
sbb
nop
add
xor
mov
add
in
inc
ret
and
mov
mov
mov
and
mov
or
insl
jbe
hlt
dec
nop
add
mov
add
mov
mov
jg
inc
add
jg
push
scas
inc
int
jecxz
cmp
add
mov
add
mov
cltd
sbb
pop
xchg
cld
sbb
aas
sub
mov
mov
add
cmp
mov
add
ds
hlt
xor
mov
mov
mov
out
loop
mov
add
dec
cmp
add
mov
imul
adc
mov
or
add
xor
mov
add
insb
arpl
or
push
inc
mov
xor
mov
add
push
add
add
lods
shll
xor
add
mov
xchg
loop
mov
xchg
icebp
adc
inc
cld
push
and
mov
loopne
mov
sti
sub
mov
sbb
mov
mov
add
mov
leave
push
fadds
add
stos
shrl
jp
cmp
cmp
add
mov
inc
add
addb
sub
lret
sbb
adc
add
mov
add
push
pop
push
cmp
aad
dec
add
mov
or
sub
enter
scas
adc
popf
or
mov
mov
clc
dec
jae
addr16
mov
arpl
clc
mov
jns
mov
or
and
mov
cltd
icebp
xchg
pop
pop
push
add
mov
adc
mov
jno
sti
jle
lahf
mov
sti
and
xorl
pop
hlt
mov
mov
mov
out
out
dec
icebp
cmpsb
add
cmp
lcall
xlat
lods
test
mov
add
fstl
and
ja
add
sbb
sbb
popa
arpl
mov
add
jns
lods
mov
mov
add
mov
aas
call
add
mov
lcall
test
mov
add
add
aaa
and
sbb
or
add
ljmp
repnz
je
add
add
push
add
mov
mov
sbb
mov
mov
jmp
cmc
frstor
movsb
imul
mov
mov
mov
cmpsb
jno
inc
xor
mov
sti
fstps
xlat
mov
cmp
stos
pusha
add
dec
das
mov
into
adc
lahf
dec
ja
pcmpeqd
mulb
add
add
sbb
mov
mov
add
inc
pop
lods
pop
cmp
in
arpl
add
fstl
mov
lahf
fdivl
mov
out
shll
mov
add
add
dec
nop
add
sbb
cmp
inc
enter
leave
loopne
mov
out
in
lcall
jbe
sub
lahf
fs
add
lret
push
adc
mov
xor
mov
add
fstpl
or
ret
clc
sbb
dec
mov
cwtl
rolb
andl
push
dec
mov
ljmp
subl
insb
mov
imulb
jnp
add
mov
jb
mov
lret
push
add
pop
adc
mov
push
call
enter
leave
xor
mov
out
hlt
fstps
fstps
fisttps
add
ds
and
fisttpll
inc
sbb
aas
push
rolb
mov
add
lock
jae
mov
add
add
fcoms
mov
addb
popf
xchg
or
and
or
jb
mov
add
out
adc
lock
xchg
mov
add
xchg
mov
movsb
fs
add
insl
xchg
and
inc
mov
sub
out
or
add
mov
in
mov
dec
pop
clc
sbb
add
fistl
jl
and
loopne
mov
or
cli
dec
rolb
mov
dec
cmp
jl
add
pushf
hlt
add
pop
popa
dec
dec
insb
loop
mov
mov
mov
addb
pop
fstp
xchg
dec
pusha
add
adc
mov
imul
out
xor
mov
and
cltd
push
add
sub
movsl
stos
xor
sub
add
mov
jecxz
setl
test
mov
mov
imul
or
sub
sub
cld
xchg
add
mov
adc
loopne
mov
add
lret
lret
in
imul
ss
push
leave
pop
lret
inc
cs
xchg
iret
pop
sbb
mov
and
jge
mov
dec
adc
add
mov
mov
xor
mov
cld
pushf
stos
mov
inc
insb
loopne
mov
insb
into
scas
push
add
add
jmp
data16
out
mov
mov
push
dec
aad
adc
mov
dec
mov
mov
imul
in
add
cmp
test
add
jnp
cltd
cs
cld
adc
mov
add
mov
sarl
add
int
jecxz
mov
adc
mov
imul
ret
fidivl
pop
push
insb
mov
add
add
ret
daa
add
mov
jno
outsl
in
mov
mov
pop
inc
fsubl
add
pop
sub
dec
jb
mov
jno
add
mov
add
dec
pusha
add
test
adc
mov
mov
push
das
sbb
jb
mov
rolb
mov
addb
fistl
mov
loope
jge
fwait
mov
add
arpl
mov
mov
xchg
into
or
mov
data16
mov
es
pop
push
jl
add
lea
or
pushf
mov
cld
pop
cmp
add
cmp
test
out
fsub
imul
add
in
bound
mov
cmpsb
dec
cs
mov
scas
rcrl
mov
jb
mov
loopne
mov
mov
sbb
and
mov
arpl
xor
adc
jns
lahf
jmp
rolb
mov
lock
mov
sahf
es
add
out
xchg
xchg
ret
adc
mov
push
add
insb
sbb
pop
dec
movl
das
xchg
mov
lods
add
mov
imul
insb
in
sbb
popf
addb
xchg
or
movsb
sbb
enter
add
mov
call
xor
mov
ds
and
cmp
xchg
adc
mov
outsb
cmp
in
jb
mov
outsb
sarl
add
add
mov
sbb
add
lods
pop
sbb
add
cld
mov
fistpl
cld
xor
mov
add
mov
pusha
add
xchg
fdivrs
add
mov
cmp
pop
jmp
iret
ja
pop
mov
cmc
jge
push
mov
mov
and
adc
cmovge
mov
sub
add
and
add
push
bound
mov
or
scas
lods
aam
jno
push
mov
rolb
mov
push
nop
add
in
mov
add
dec
scas
add
mov
and
mov
mov
inc
fistl
jp
pop
aad
jecxz
leave
fxch
mov
add
mov
xchg
jmp
pop
adc
mov
add
add
mov
aad
lahf
js
mov
or
fs
rolb
push
dec
pusha
add
add
mov
inc
jg
fcomps
jns
mov
add
mov
inc
or
mov
leave
adc
out
insb
xchg
xor
mov
enter
dec
aas
and
mov
cmp
mov
sbb
and
add
mov
cmp
mov
out
sbb
into
lret
fdivp
fdivrs
adc
jno
add
cld
mov
or
add
lds
pop
arpl
leave
or
cmc
xchg
add
mov
cwtl
sbb
sbb
loopne
mov
sub
lret
test
inc
mov
fisubrl
es
push
pop
dec
or
fisubrl
and
mov
mov
inc
add
pusha
add
add
add
xchg
jae
and
scas
add
mov
xchg
add
shll
sub
lods
or
mov
mov
mov
out
mov
mov
enter
add
hlt
and
cmc
and
add
or
lret
sub
dec
sub
jmp
sbb
fmul
push
jno
sbbl
xchg
add
jmp
pop
fs
cltd
push
jge
push
cmpsb
jae
loope
jle
and
mov
lcall
mov
mov
iret
sbb
push
add
test
or
add
add
daa
daa
jne
add
mov
mov
arpl
mov
sbb
mov
cmp
add
rolb
mov
mov
fdivrl
pop
das
out
or
jae
pop
cmpsb
sti
into
cmp
xchg
movsl
ljmp
mov
inc
neg
add
mov
mov
lcall
pop
ret
cltd
jb
mov
les
mov
fbld
ret
or
jo
mov
shl
push
add
jnp
out
nop
add
add
loopne
mov
push
sub
ret
add
mov
cld
add
mov
mov
inc
add
mov
add
addb
jp
sbb
insb
xlat
lea
mov
test
add
int3
cmp
inc
stc
inc
cld
mov
xor
sub
aad
fstpl
mov
fcoml
movsb
pusha
add
shrw
add
pushf
jg
adc
mov
push
ds
std
xchg
push
enter
mov
push
add
mov
pop
mov
or
sub
pop
mov
sub
lahf
fstpl
inc
inc
add
lds
shll
jmp
je
dec
les
js
mov
inc
movsl
mov
add
icebp
decl
adc
sbbl
sbb
jl
add
test
ffreep
cmp
add
std
xchg
rolb
int3
xor
leave
sbb
xchg
adc
lods
push
inc
xor
mov
add
sbb
into
in
out
add
inc
sti
and
xor
push
add
and
js
loop
mov
sub
mov
sbb
xchg
and
add
push
xor
jbe
mov
mov
push
out
xchg
addr16
inc
jp
jecxz
cmp
cmpsl
jp
jl
xchg
inc
mov
jl
arpl
add
enter
mov
xchg
add
out
aad
movsl
outsl
pusha
add
iret
pop
dec
sbb
and
fmul
inc
add
inc
add
repnz
jae
add
cli
mov
add
fwait
cld
nop
jmp
add
and
add
cmp
sar
nop
jae
add
add
mov
jae
pop
mov
add
dec
xor
repnz
jae
or
mov
subl
push
mov
xchg
ret
pop
add
movsl
pop
mov
clc
repnz
jae
bound
mov
sbbb
jmp
mov
and
and
push
fs
repnz
jae
movsl
and
aas
ud1
or
add
repnz
jae
subb
add
add
repnz
jae
stos
push
jne
fwait
cld
nop
jmp
pushf
add
add
test
repnz
jae
jp
pop
enter
xor
add
clc
repnz
jae
pushf
pop
ja
add
push
mov
xchg
ret
jmp
fimuls
mov
adc
cld
nop
jmp
add
dec
add
sbb
add
repnz
jae
dec
loop
add
push
push
mov
xchg
ret
dec
add
es
mov
dec
imul
adcl
add
mov
clc
repnz
jae
add
add
push
push
mov
xchg
ret
mull
add
cld
nop
jmp
add
add
add
mov
xor
jmp
incl
mov
add
add
mov
push
add
cmp
repnz
jae
repnz
jge
jmp
jae
lock
aad
movsl
and
mov
repnz
jae
pop
add
pop
add
add
cwtl
cmp
fwait
cld
nop
jmp
pop
mov
fiadds
add
nop
jmp
add
dec
add
mov
fidivrl
clc
repnz
jae
ljmp
push
mov
xchg
ret
aad
inc
testl
push
jno
fnstsw
clc
repnz
jae
dec
add
fs
lcall
inc
add
add
dec
push
clc
repnz
jae
xor
and
clc
repnz
jae
add
or
or
leave
sub
repnz
jae
add
testl
add
cld
nop
jmp
movsl
add
fs
xor
mov
loopne
add
lock
lods
mov
clc
repnz
jae
mov
clc
repnz
jae
add
add
add
imul
repnz
jae
dec
add
fwait
xchg
inc
cld
mov
clc
repnz
jae
add
movsl
and
leave
xor
push
mov
xchg
ret
pushf
add
add
pop
cmp
fwait
cld
nop
jmp
add
sahf
sahf
add
or
clc
repnz
jae
add
sahf
add
jne
clc
repnz
jae
add
mov
les
clc
repnz
jae
lret
dec
add
mov
clc
repnz
jae
add
add
sub
add
repnz
jae
sub
add
mov
fwait
cld
nop
jmp
mov
add
add
clc
repnz
jae
movsl
jp
add
cmp
cld
nop
jmp
pop
add
adc
sahf
add
in
fistpll
sub
add
stos
cmpsb
push
clc
repnz
jae
mov
add
push
add
fwait
cld
nop
jmp
jae
add
sub
clc
repnz
jae
sub
add
push
mov
xchg
ret
lret
ljmp
in
pop
add
adcb
sldt
ss
addr16
add
sar
mov
clc
repnz
jae
dec
mov
mov
mov
clc
repnz
jae
outsb
add
add
add
nop
jae
add
add
push
fwait
cld
nop
jmp
mov
lret
add
repnz
inc
clc
repnz
jae
stos
add
add
dec
sahf
pop
cwtl
cmpl
fwait
cld
nop
jmp
pop
add
mov
or
inc
add
xor
xor
clc
repnz
jae
leave
xor
add
push
fwait
cld
nop
jmp
push
mov
fwait
cld
nop
jmp
xor
pushf
mov
xchg
jne
fwait
cld
nop
jmp
jae
xor
sub
push
mov
xchg
ret
cli
lret
xor
test
clc
repnz
jae
dec
repnz
add
add
jmp
pop
hlt
inc
add
add
mov
push
mov
xchg
ret
add
dec
add
sar
nop
jae
cs
add
leave
sbb
mov
jmp
or
stos
jmp
add
xchg
clc
repnz
jae
mov
lock
pop
lcall
daa
add
add
add
mov
push
clc
repnz
jae
add
mov
mov
xchg
pop
push
clc
repnz
jae
aad
cmpsb
add
jp
in
jmp
repnz
jae
and
dec
add
add
xor
mov
push
mov
sahf
lods
add
jp
xchg
add
add
add
fwait
cld
nop
jmp
add
mov
mov
add
mov
xor
inc
add
ss
mov
clc
repnz
jae
jg
add
add
mov
clc
repnz
jae
add
sbb
add
push
mov
xchg
ret
and
add
jae
inc
push
mov
xchg
ret
add
add
add
addl
repnz
jae
add
subl
cmp
ret
add
add
mov
add
push
mov
xchg
ret
add
dec
push
pop
int
push
mov
xchg
ret
add
sahf
movsl
mov
mov
cld
nop
jmp
add
add
nop
jmp
mov
mov
add
inc
adc
repnz
jae
pop
leave
add
sar
lcall
and
add
lock
and
push
clc
repnz
jae
add
add
add
stos
add
jo
fwait
cld
nop
jmp
add
add
add
mov
add
aam
add
jg
add
iret
jmp
jmp
add
add
add
mov
pop
clc
repnz
jae
add
mov
loop
mov
cld
nop
jmp
add
cmpsb
push
add
dec
add
clc
repnz
jae
pushf
add
jae
add
sbb
nop
jmp
add
add
ljmp
nop
jae
add
add
dec
dec
sub
add
cmc
in
add
push
add
pop
add
ss
mov
mov
add
add
repnz
jae
add
sub
nop
jae
dec
add
add
add
mov
clc
repnz
jae
add
ss
call
clc
repnz
jae
jmp
add
mov
clc
repnz
jae
add
jp
push
cmp
fwait
cld
nop
jmp
add
add
pop
xor
mov
clc
repnz
jae
lock
aad
and
mov
rorl
nop
jmp
add
out
gs
adc
nop
jmp
add
add
and
mov
aas
clc
repnz
jae
add
add
add
cmpsb
sub
nop
jae
add
add
lock
movswl
clc
repnz
jae
add
xor
aas
sub
inc
rolb
xchg
ret
pushf
repnz
add
or
in
sub
add
lret
and
cmp
mov
push
mov
xchg
ret
push
add
jp
add
jg
adc
repnz
jae
add
aad
mov
fldl
xchg
ret
cmpsb
add
mov
jmp
push
mov
xchg
ret
leave
or
ljmp
add
add
fwait
cld
nop
jmp
fiadds
add
jbe
mov
add
push
mov
xchg
ret
add
cmp
fwait
cld
nop
jmp
add
add
xor
mov
mov
xchg
ret
mov
mov
and
mov
popl
clc
repnz
jae
pop
xor
push
out
add
clc
repnz
jae
stos
add
add
add
mov
fwait
cld
nop
jmp
test
add
repnz
repnz
jae
add
mov
pop
movsl
mov
jp
dec
adc
adc
add
add
add
mov
mov
clc
repnz
jae
mov
mov
add
repnz
jae
push
add
inc
insl
add
push
mov
xchg
ret
add
mov
clc
repnz
jae
add
sbb
or
fwait
cld
nop
jmp
add
add
repnz
jae
add
jno
xchg
sti
push
push
mov
xchg
ret
xor
push
scas
push
fwait
cld
nop
jmp
add
add
sub
sbb
inc
pop
inc
add
in
mov
aam
add
add
pop
lret
add
mov
push
mov
xchg
ret
add
mov
push
cld
clc
repnz
jae
mov
in
ljmp
nop
jae
stos
add
add
push
clc
repnz
jae
mov
jp
clc
repnz
jae
mov
add
loop
pushl
push
mov
xchg
ret
add
add
add
mov
mov
xchg
and
mov
clc
repnz
jae
add
xchg
mov
clc
repnz
jae
add
add
cmp
clc
push
mov
xchg
ret
add
pusha
add
decl
add
add
add
push
inc
inc
jle
dec
adc
repnz
jae
or
sahf
add
mov
mov
mov
clc
repnz
jae
add
addl
mov
clc
repnz
jae
fisubs
mov
mov
clc
repnz
jae
add
add
lock
add
clc
repnz
jae
add
and
add
repnz
jae
xor
add
fiadds
dec
mov
pushl
clc
repnz
jae
add
add
add
sbb
push
mov
xchg
ret
lret
imul
subl
push
mov
xchg
ret
leave
add
mov
jae
add
cmpsb
data16
mov
cmp
ret
pop
bound
add
movl
mov
fwait
cld
nop
jmp
add
test
and
clc
repnz
jae
add
add
add
push
push
mov
xchg
ret
add
add
mov
fwait
cld
nop
jmp
sub
add
sbb
nop
jae
add
ljmp
stc
clc
repnz
jae
mov
add
xchg
clc
repnz
jae
imul
mov
decb
fiadds
xchg
ret
add
cs
fwait
cld
nop
jmp
add
or
add
clc
repnz
jae
pop
pushf
repnz
rclb
into
inc
add
push
xor
mov
inc
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
jmp
je
clc
repnz
jae
pop
imul
lds
adc
repnz
jae
add
aad
outsb
mov
mov
clc
repnz
jae
add
add
mov
mov
jae
movsl
movsl
add
add
add
jae
add
repnz
add
push
mov
xchg
ret
fs
test
add
rolb
mov
out
pusha
clc
repnz
jae
mov
add
add
and
add
repnz
jae
add
add
add
clc
repnz
jae
add
mov
add
or
xchg
cmpl
mov
add
movsl
add
add
subl
push
ljmp
or
and
push
mov
xchg
ret
or
mov
sbb
repz
repnz
jae
mov
mov
inc
dec
fs
push
clc
repnz
jae
push
test
imul
add
add
repnz
jae
ljmp
repnz
jae
repnz
lock
mov
clc
repnz
jae
add
add
add
pusha
clc
repnz
jae
add
movsl
add
mov
add
clc
repnz
jae
add
subl
andl
incl
loop
add
pop
add
fadds
nop
jae
add
stos
ljmp
clc
repnz
jae
xor
dec
mov
mov
clc
repnz
jae
add
das
push
jmp
pushl
sub
add
mov
in
ret
add
cli
stos
dec
fidivrs
dec
lret
sbb
push
popf
cmp
fwait
cld
nop
jmp
xor
lret
sub
add
clc
repnz
jae
add
add
jecxz
mov
push
mov
xchg
ret
add
pushf
sub
adc
repnz
jae
add
add
xorb
mov
mov
xchg
ret
add
in
hlt
clc
popa
clc
repnz
jae
add
fisubs
add
inc
add
je
sub
repnz
jae
add
idivl
aas
sub
js
fwait
cld
nop
jmp
adc
add
clc
repnz
jae
jmp
add
mov
mov
jbe
std
sub
mov
add
adc
ret
mov
add
incl
fwait
cld
nop
jmp
add
or
add
add
add
clc
repnz
jae
push
dec
rep
clc
repnz
jae
sub
testl
or
dec
cmp
repnz
jae
sahf
add
inc
push
mov
xchg
ret
add
mov
mov
jae
push
mov
xchg
ret
add
mov
clc
repnz
jae
add
jmp
add
clc
repnz
jae
add
add
add
xor
clc
repnz
jae
mov
adc
test
add
nop
jmp
ss
pushf
movsl
cmp
jne
clc
repnz
jae
fwait
cmpsb
add
xor
je
clc
repnz
jae
add
negl
cld
nop
jmp
leave
add
mov
add
dec
push
fwait
cld
nop
jmp
add
mov
add
mov
clc
repnz
jae
add
mov
ljmp
sub
repnz
jae
add
sub
repnz
jae
lret
movsl
add
pop
fwait
cld
nop
jmp
add
inc
and
inc
add
add
push
or
mov
adc
repnz
jae
ficomps
ss
mov
push
mov
xchg
ret
add
lret
add
js
clc
repnz
jae
add
add
and
clc
repnz
jae
sub
add
mov
fwait
cld
nop
jmp
push
sub
clc
repnz
jae
add
add
push
add
add
add
add
add
add
clc
repnz
jae
jp
add
dec
add
add
mov
xor
add
clc
repnz
jae
add
add
enter
jmp
add
add
add
pop
push
mov
xchg
ret
mov
mov
insl
pop
clc
repnz
jae
add
sahf
mov
add
add
rolb
mov
nop
jmp
pushf
add
add
jge
clc
repnz
jae
pop
test
add
adc
dec
pop
clc
repnz
jae
ljmp
mov
test
fwait
cld
nop
jmp
add
add
mov
cmp
ret
movsl
addl
sbb
incl
add
repnz
or
and
cli
add
ds
push
mov
xchg
ret
add
movsl
lock
int3
pop
clc
repnz
jae
inc
add
add
mov
push
jae
mov
jp
add
add
xor
inc
add
xor
cli
call
clc
repnz
jae
mov
mov
clc
repnz
jae
mov
mov
add
repnz
jae
add
jae
pop
add
clc
repnz
jae
add
pop
add
outsb
add
sbb
clc
repnz
jae
add
aas
loop
pushf
fs
or
jns
inc
add
dec
add
bound
mov
nop
jae
xor
ss
push
clc
repnz
jae
add
xor
nop
jae
add
jae
loop
mov
lea
push
mov
xchg
ret
add
je
clc
repnz
jae
add
cmc
jno
push
clc
repnz
jae
aas
pop
push
add
xor
clc
repnz
jae
mov
bound
sub
adc
inc
add
dec
test
add
add
inc
clc
repnz
jae
add
add
clc
repnz
jae
add
loope
pop
push
mov
xchg
ret
cmpsb
add
add
add
add
mov
mov
repnz
jae
add
mov
pop
aad
add
sbb
xor
add
clc
repnz
jae
add
push
add
fisttpll
mov
adc
repnz
jae
dec
mov
add
jl
repnz
jae
add
add
add
xor
mov
fadds
xchg
ret
push
cmpsb
pop
pop
repnz
clc
repnz
jae
add
add
test
add
add
mov
lea
fwait
cld
nop
jmp
dec
dec
and
ljmp
add
fwait
cld
nop
jmp
pop
add
add
jae
push
or
or
repnz
jae
add
add
push
cli
jns
jns
add
cmpsl
lret
xchg
ret
fwait
movsl
add
mov
clc
repnz
jae
pushf
cmpsb
xor
mov
jno
add
xor
cmp
inc
add
leave
add
test
jae
add
outsb
add
add
add
add
clc
repnz
jae
add
jmp
dec
cmp
cld
nop
jmp
dec
in
mov
add
pop
dec
fwait
cld
nop
jmp
adc
add
add
add
mov
xchg
ret
movsl
add
xor
les
add
clc
repnz
jae
push
pusha
push
mov
xchg
ret
inc
jae
pop
or
dec
add
popa
add
repnz
jae
cs
add
push
add
sub
in
into
inc
add
ljmp
add
mov
xchg
ret
dec
aad
sub
addb
cmp
clc
repnz
jae
adc
add
xor
and
ret
clc
repnz
jae
push
add
bound
test
cld
cmp
fwait
cld
nop
jmp
add
add
sbbb
add
ss
mov
or
icebp
fwait
cld
nop
jmp
add
add
cmpsb
mov
fs
inc
push
push
mov
xchg
ret
push
add
in
rep
push
mov
xchg
ret
mov
call
clc
repnz
jae
dec
pop
adc
dec
push
clc
repnz
jae
add
add
add
ss
sub
clc
repnz
jae
pop
dec
add
sahf
aas
add
repnz
jae
movsl
add
add
jmp
add
pop
add
add
in
add
add
add
clc
repnz
jae
add
add
repnz
jae
sub
movsl
mov
mov
add
clc
repnz
jae
outsb
add
pop
push
mov
xchg
ret
outsb
add
add
mov
push
push
mov
xchg
ret
add
xor
inc
add
push
mov
xchg
ret
add
dec
add
nop
jmp
sbb
jmp
add
hlt
mul
add
xor
push
mov
xchg
ret
mov
xorl
mov
mov
add
or
clc
repnz
jae
adc
arpl
or
repnz
jae
imul
inc
pop
cmpsb
or
mov
sub
bound
mov
add
dec
fdivrs
pop
add
push
mov
xchg
ret
ljmp
jne
clc
repnz
jae
add
add
nop
jae
add
movsl
add
add
mov
add
mov
mov
nop
jae
add
push
add
fs
clc
repnz
jae
bound
mov
mov
inc
add
add
add
add
adc
mov
push
mov
xchg
ret
add
add
push
clc
repnz
jae
add
add
fiadds
add
lock
mov
xchg
ret
add
movsl
imul
lea
clc
repnz
jae
cmpsb
jp
mov
add
adc
push
add
add
inc
add
loop
push
iret
mov
clc
repnz
jae
sub
mov
xchg
ret
add
adc
add
add
mov
inc
sbb
add
add
mov
push
mov
xchg
ret
mov
leave
lock
clc
repnz
jae
and
outsb
add
add
or
add
add
mov
inc
xor
add
fwait
push
movsl
push
lcallw
nop
jae
leave
imul
testl
repnz
jae
add
and
bound
adcl
mov
xchg
ret
add
imul
enter
clc
repnz
jae
mov
jae
addb
testl
adc
repnz
jae
lret
add
jns
out
clc
repnz
jae
add
xor
mov
clc
repnz
jae
cmpl
in
clc
repnz
jae
lock
mov
add
add
repnz
jae
in
movsl
out
mov
push
mov
xchg
ret
lret
imul
add
add
movsl
add
add
dec
mov
clc
repnz
jae
outsb
lock
mov
clc
repnz
jae
add
add
add
adc
repnz
jae
or
pop
jmp
dec
add
fwait
test
add
sub
push
imul
nop
jae
adc
jp
sti
mov
fwait
cld
nop
jmp
add
add
add
inc
add
out
incl
add
aad
pushf
cwtl
push
push
mov
xchg
ret
add
xor
add
mov
dec
call
clc
repnz
jae
aas
mov
add
clc
repnz
jae
add
mov
dec
stos
clc
repnz
jae
jg
add
orb
mov
add
cld
nop
jmp
add
sahf
add
add
add
mov
clc
repnz
jae
add
sahf
sahf
mov
push
mov
xchg
ret
add
add
adc
dec
fwait
cld
nop
jmp
dec
leave
add
sub
dec
push
mov
cli
lahf
add
add
add
add
adcb
push
push
mov
xchg
ret
add
outsb
mov
cmpsb
addb
adc
pop
clc
repnz
jae
fiadds
add
fwait
add
push
mov
xchg
ret
imull
cmp
cmp
sar
mov
add
add
call
clc
repnz
jae
push
push
jb
mov
sti
add
add
pop
add
add
inc
jg
pushl
push
mov
xchg
ret
add
cmpsb
add
repnz
jae
add
sahf
ljmp
adc
repnz
jae
add
add
xchg
lock
clc
repnz
jae
add
dec
stos
add
lods
mov
clc
repnz
jae
fiadds
in
add
inc
jp
fwait
cld
nop
jmp
mov
add
sbb
add
clc
repnz
jae
mov
sub
jmp
xor
mov
pop
mov
clc
repnz
jae
bound
aas
add
fldt
imul
sbbl
ljmp
movsl
sahf
add
add
push
mov
xchg
ret
add
and
cli
mov
repnz
jae
add
mov
and
push
mov
xchg
ret
adc
lret
lret
push
push
mov
xchg
ret
mov
add
and
push
mov
xchg
ret
sub
dec
xor
fwait
cld
nop
jmp
fs
add
add
insl
push
push
mov
xchg
ret
add
cli
mov
subl
mov
xchg
ret
add
inc
cli
mov
fwait
cld
nop
jmp
and
mov
mov
inc
iret
pushl
clc
repnz
jae
ficomps
push
arpl
stos
clc
repnz
jae
mov
add
cmp
repnz
jae
movsl
and
dec
aad
outsb
rorl
add
or
add
inc
loop
adc
add
rolb
mov
mov
xchg
ret
add
add
dec
xchg
push
loop
mov
mov
test
enter
add
mov
decl
push
mov
xchg
ret
add
add
idivb
sbb
repnz
jae
jmp
ljmp
repnz
jae
mov
pop
stos
cmp
nop
jmp
add
add
xchg
fwait
cld
nop
jmp
add
inc
add
cmc
addb
jmp
jmp
mov
jp
add
add
imul
outsb
add
add
mov
pop
rolb
mov
push
clc
repnz
jae
jg
add
test
dec
add
push
fwait
cld
nop
jmp
movsl
adc
test
repz
repnz
jae
push
add
shll
or
clc
repnz
jae
mov
mov
fadds
xchg
ret
add
mov
xor
stos
jmp
jae
mov
mov
xor
add
push
arpl
pop
cmp
push
and
in
cmpw
fwait
cld
nop
jmp
lret
movsl
add
mov
clc
repnz
jae
mov
add
pop
cs
clc
repnz
jae
add
inc
add
mov
push
mov
xchg
ret
inc
ljmp
mov
jae
mov
testl
je
add
clc
repnz
jae
dec
add
or
add
sar
repnz
jae
bound
xor
clc
repnz
jae
add
add
jp
adc
test
jmp
jae
dec
add
add
or
repnz
jae
add
sbb
add
add
mov
adc
roll
aas
sbb
cld
add
fwait
cld
nop
jmp
ljmp
add
xbegin
inc
out
dec
in
add
mov
jne
je
clc
repnz
jae
movsl
mov
test
clc
repnz
jae
add
add
mov
stos
clc
repnz
jae
add
inc
jp
add
fistl
repnz
jae
add
addb
add
add
repnz
jae
fiadds
add
add
inc
jb
fwait
cld
nop
jmp
add
rol
clc
repnz
jae
add
imul
add
clc
repnz
jae
add
add
arpl
repnz
jae
stos
stos
add
inc
add
add
clc
repnz
jae
add
pop
add
add
add
clc
repnz
jae
jg
add
stos
clc
repnz
jae
add
add
mov
clc
repnz
jae
xor
mov
push
push
mov
xchg
ret
sbb
test
loop
jmp
mov
subl
nop
jae
add
add
add
movl
out
out
clc
clc
repnz
jae
mov
add
clc
repnz
jae
add
add
add
add
adc
cld
nop
jmp
add
adc
jp
mov
clc
repnz
jae
bound
or
add
lods
push
clc
repnz
jae
mov
mov
xor
xor
mov
clc
repnz
jae
add
lock
sub
jb,pt
fwait
cld
nop
jmp
sub
add
add
fwait
cld
nop
jmp
add
add
add
jbe
clc
repnz
jae
add
mov
sbb
xchg
dec
and
clc
repnz
jae
add
add
ficompl
cld
nop
jmp
negl
add
stos
jg
mov
mov
clc
repnz
jae
jp
add
lret
push
mov
push
mov
xchg
ret
lock
clc
repnz
jae
bound
aad
push
stc
clc
repnz
jae
add
add
jne
jmp
incl
add
push
add
mov
and
mov
cld
nop
jmp
add
repnz
add
xchg
icebp
dec
call
clc
repnz
jae
ljmp
push
push
clc
repnz
jae
add
aas
lret
mov
clc
repnz
jae
inc
lret
scas
call
clc
repnz
jae
adc
add
movzwl
clc
repnz
jae
add
add
ss
mov
push
mov
xchg
ret
lret
pushf
add
andb
add
repnz
jae
add
add
clc
repnz
jae
movsl
add
push
mov
xchg
ret
loop
cmpsb
push
add
push
sbb
fwait
cld
nop
jmp
xor
add
mov
repnz
jae
or
dec
add
andnps
add
out
push
cmp
add
mov
std
mov
clc
repnz
jae
add
mov
mov
clc
repnz
jae
xor
sub
xor
add
clc
repnz
jae
ljmp
clc
repnz
jae
mov
dec
push
dec
cmp
repnz
jae
add
stos
add
lock
ljmp
add
movsl
jae
addb
call
clc
repnz
jae
add
movsl
add
test
fwait
cld
nop
jmp
fimuls
add
vmovmskps
repnz
jae
add
bound
jae
add
jbe
push
mov
xchg
ret
or
add
add
int3
inc
add
adc
fisubrs
mov
clc
repnz
jae
and
add
jmp
dec
jmp
mov
add
add
add
mov
and
fwait
cld
nop
jmp
mov
inc
lea
sub
incl
test
and
add
inc
push
clc
repnz
jae
add
and
add
ja
add
out
lcall
add
add
add
clc
repnz
jae
add
jp
add
movsl
pop
lret
push
fwait
cld
nop
jmp
add
fwait
pop
clc
repnz
jae
add
mov
push
stos
push
mov
xchg
ret
jae
xor
imull
cmpsl
mov
popf
clc
repnz
jae
add
movsl
arpl
movsb
push
mov
xchg
ret
push
add
xor
stc
clc
repnz
jae
add
push
inc
xchg
pop
shr
fwait
cld
nop
jmp
jg
add
mov
div
test
add
clc
repnz
jae
add
pop
fcomip
movsb
fwait
cld
nop
jmp
add
fwait
add
mov
jmp
add
sub
sub
sahf
fmull
test
nop
jae
mov
test
repnz
jae
add
leave
dec
mov
clc
repnz
jae
ficomps
jp
pop
clc
repnz
jae
ss
pushf
add
repnz
addb
push
mov
pop
cmp
repnz
jae
jmp
add
pop
test
push
mov
xchg
ret
dec
add
fwait
add
clc
repnz
jae
dec
add
add
push
mov
xchg
ret
mov
fs
push
clc
repnz
jae
add
add
adc
mov
repz
mov
xchg
ret
mov
movsb
push
push
clc
repnz
jae
add
loop
das
pop
fwait
cld
nop
jmp
add
add
add
push
and
mov
add
sar
nop
jae
lret
leave
sahf
add
add
inc
rolb
push
fwait
mov
clc
repnz
jae
loop
add
add
fwait
cld
nop
jmp
movsl
jg
add
ret
ficompl
mov
xchg
ret
add
push
pop
add
mov
pmaddwd
xchg
ret
jmp
add
jae
movsl
test
addb
test
ds
clc
repnz
jae
sub
add
cs
push
mov
xchg
ret
sahf
aas
add
add
mov
mov
xchg
ret
add
mov
jae
add
add
add
idiv
incl
add
add
mov
fwait
cld
nop
jmp
fwait
in
push
mov
sbb
add
pop
push
mov
roll
add
add
xchg
outsl
call
fwait
cld
nop
jmp
lret
dec
add
adc
nop
jae
add
leave
lret
pop
pop
mov
push
clc
repnz
jae
ficomps
pop
sbb
fwait
cld
nop
jmp
add
jb
mov
adc
clc
repnz
jae
test
sahf
lock
xchg
clc
repnz
jae
add
cs
fwait
cld
nop
jmp
mov
in
dec
mov
add
push
dec
add
clc
repnz
jae
add
add
push
mov
xchg
ret
leave
divl
add
movzwl
clc
repnz
jae
add
test
add
add
push
mov
xchg
ret
jae
add
add
push
clc
repnz
jae
add
ss
clc
repnz
jae
sahf
add
add
mov
xchg
ret
add
add
or
push
stc
dec
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
jae
cmpsb
pushf
pop
jae
xchg
add
dec
cmc
inc
add
in
add
repnz
sbb
repnz
jae
add
ror
clc
repnz
jae
add
add
leave
mov
add
mov
mov
fwait
cld
nop
jmp
notl
add
add
mov
inc
loopne
repnz
jae
andb
adc
lcall
xlat
incl
bound
mov
stc
lcall
incl
add
repnz
jae
lret
add
leave
add
add
stos
pop
clc
repnz
jae
add
lret
movsl
subb
pop
sub
clc
repnz
jae
push
out
cmp
repnz
jae
mov
mov
jmp
imul
movsl
add
add
imul
mov
lret
adc
repnz
jae
sbb
mov
mov
dec
push
mov
add
je
popa
dec
add
add
out
mov
ror
add
add
add
push
clc
repnz
jae
cs
add
add
sbb
xor
add
clc
repnz
jae
movsl
adc
mov
clc
repnz
jae
add
aad
push
add
test
call
fwait
cld
nop
jmp
add
add
push
clc
repnz
jae
add
mov
lret
xchg
ret
add
jae
add
add
add
nop
jae
add
dec
mov
add
fadds
sbb
add
add
and
xor
fwait
cld
nop
jmp
push
add
add
add
mov
add
add
add
add
clc
push
push
mov
xchg
ret
outsb
mov
add
dec
ss
clc
repnz
jae
outsb
add
shl
fwait
cld
nop
jmp
jp
add
movsl
add
add
mov
clc
repnz
jae
sbb
and
add
repnz
jae
cs
and
jmp
add
add
repnz
jae
pop
add
add
push
mov
xchg
ret
add
sahf
and
repnz
jae
fwait
inc
jae
add
add
add
mov
jae
add
pop
ljmp
popa
add
repnz
jae
mov
add
add
ljmp
filds
xchg
ret
add
add
add
pop
clc
repnz
jae
and
add
ss
mov
mov
call
clc
repnz
jae
fs
mov
clc
repnz
jae
pop
xor
test
loopne
lcall
jecxz
pushl
js
fwait
cld
nop
jmp
movsl
adc
sbb
popa
add
mov
xchg
ret
and
add
clc
repnz
jae
or
fwait
leave
add
mov
clc
repnz
jae
add
pop
and
leave
bound
mov
add
clc
repnz
jae
add
jg
movsl
mov
mov
clc
repnz
jae
push
add
or
nop
jmp
movsl
push
or
jp
in
out
cmpl
fwait
cld
nop
jmp
cli
inc
xor
dec
popa
clc
repnz
jae
addl
push
filds
clc
clc
repnz
jae
and
jae
lea
push
mov
xchg
ret
pop
add
ss
clc
repnz
jae
pop
add
add
add
pushl
fwait
cld
nop
jmp
mov
jp
ljmp
xor
clc
repnz
jae
fimuls
add
fwait
cld
nop
jmp
aad
add
adc
mov
add
fwait
cld
nop
jmp
xor
test
clc
repnz
jae
orl
incl
orb
gs
clc
repnz
jae
or
add
mov
add
push
in
inc
add
add
add
xor
add
adc
std
jmp
ljmp
sbb
add
nop
jae
add
add
hlt
js
ret
add
repnz
jae
add
movsl
add
or
movsb
fwait
cld
nop
jmp
cmpsb
add
movsl
add
lods
clc
repnz
jae
in
xor
sub
fs
add
fwait
cld
nop
jmp
aas
add
movl
mov
xchg
ret
ljmp
mov
clc
repnz
jae
jmp
sub
enter
jae
add
add
mov
xchg
ret
bound
push
mov
add
adc
add
aad
mov
or
push
scas
jo
mov
mov
paddd
or
lock
add
clc
rolb
mov
push
int3
in
push
add
insl
pop
in
jmp
and
push
add
xchg
bound
mov
lds
mov
sbb
insb
add
mov
adc
cltd
mov
jp
dec
add
jl
add
sbb
push
add
clc
and
mov
push
or
inc
push
rolb
stos
sub
in
fdiv
and
mov
mov
lret
mov
add
int3
mov
sub
mov
jb
mov
and
mov
add
dec
and
or
xor
mov
mov
push
xor
mov
rolb
mov
sar
test
mov
cli
xchg
add
dec
lcall
push
imul
icebp
add
mov
fwait
mov
mov
fisttpl
sbb
sub
test
sbb
mov
add
add
mov
lret
fldt
mov
jno
test
nop
add
ljmp
cmp
xor
test
fadd
add
push
add
scas
push
mov
push
ljmp
rol
stc
cmp
ljmp
mov
inc
add
in
mov
test
xchg
sbb
mov
dec
inc
fs
jecxz
daa
mov
out
stos
inc
xchg
popf
js
mov
mov
add
mov
mov
cmc
and
mov
lds
add
xchg
sub
sub
testl
mov
xchg
sbb
nop
add
loop
mov
xchg
daa
mov
add
push
add
jmp
jl
add
out
mov
mov
cmp
jo
mov
and
les
sub
popf
add
sub
pop
bound
mov
inc
int3
daa
or
stos
lahf
xor
mov
lea
pop
inc
xchg
mov
mov
in
test
ret
or
mov
push
add
mov
xchg
add
aaa
aad
je
stc
sub
and
vhsubpd
add
lret
sbb
pop
addb
aam
add
hlt
test
cmpsb
cmp
in
in
iret
cmp
add
mov
bound
mov
mov
mov
mov
xchg
pop
and
rolb
mov
stos
dec
cmpsb
mov
mov
pop
je
imul
ret
mov
mov
popa
std
push
add
subl
add
adc
in
aaa
das
cmp
cmp
add
mov
jl
stos
inc
in
insb
pop
xor
mov
rcrl
shr
pop
dec
sub
add
inc
lods
fimuls
mov
lods
sub
lods
ret
cmp
idivl
loope
outsb
add
mov
or
or
add
add
inc
and
mov
lcall
jle
add
push
mov
add
mov
mov
dec
mov
addb
aam
jg
xchg
outsl
imulb
sbb
fs
aaa
jge
ds
add
xchg
push
mov
add
lock
mov
mov
lcall
call
sbb
hlt
dec
push
xor
cmp
hlt
add
adc
dec
dec
jb
mov
mov
sbb
fstpl
add
cli
jge
mov
xorl
out
add
add
fs
mov
dec
jne
or
mov
mov
xchg
or
jne
test
je
dec
loop
mov
mov
shl
mov
test
add
sbb
xchg
add
push
out
add
push
add
or
not
testl
aaa
add
mov
cmpsl
pop
aas
fs
fwait
rolb
mov
xor
mov
inc
pop
push
lcall
js
js
add
add
add
sahf
sbb
jnp
mov
inc
idivb
add
mov
mov
add
xor
psadbw
mov
cmpsl
sbb
xchg
cmpsb
les
add
mov
js
jns
xchg
dec
rolb
cmp
push
add
push
add
mov
aas
ficoml
addb
je
inc
adc
popl
mov
inc
add
jns
popa
testb
jns
adc
mov
rolb
movsl
fs
lret
add
nop
add
jmp
mov
fwait
loopne
mov
and
mov
pusha
add
mov
jbe
cmp
add
mov
add
scas
call
jbe
mov
sub
push
pop
paddusw
add
fildl
inc
inc
dec
push
lods
dec
xchg
mov
cld
das
and
push
add
or
addb
xchg
scas
pop
or
cmpsb
or
add
add
mov
sub
add
mov
test
cmpsb
cmp
push
pushf
addr16
rolb
mov
mov
sbb
add
inc
lcall
scas
sub
iret
cmp
add
out
rcrl
mov
shl
mov
adc
add
mov
add
or
mov
das
pop
je
cmp
negb
sahf
fists
push
or
sti
in
loopne
mov
popf
xor
fistpll
pop
addb
or
adc
mov
lret
mov
pop
push
add
pop
mov
aam
xor
mov
mov
mov
loope
popa
jl
test
mov
add
inc
in
in
mov
add
popa
xor
shll
loop
mov
outsb
jae
aas
mov
mov
les
nop
add
add
mov
sbb
je
pop
shll
add
xchg
add
mov
jmp
pop
xor
mov
ds
push
xor
jp
cwtl
scas
inc
nop
add
test
xor
mov
mov
pop
mov
lea
popf
enter
fnsave
sti
sbb
or
mov
push
es
imul
inc
add
dec
rolb
mov
add
sub
fwait
dec
cmp
popf
mov
in
mov
lret
sbb
mov
add
mov
pop
cmp
xchg
fsubrs
ficoml
mov
adc
push
js
push
movsb
pop
sub
in
mov
sub
pop
adc
add
jg
and
add
and
mov
outsb
movsl
lods
cmpsb
not
inc
int
xchg
add
mov
in
loope
pop
pop
or
into
push
xor
sub
xchg
add
sbb
orl
out
mov
add
xor
mov
pop
nop
add
in
test
push
add
clc
xchg
orl
enter
mov
sub
popf
xor
out
test
rcrl
cwtl
sbb
mov
adc
mov
add
push
xchg
add
dec
cltd
dec
or
push
mov
add
popf
pop
outsl
jmp
mov
mov
cmp
gs
mov
add
scas
xor
add
pop
or
stos
fnstcw
loope
push
add
stos
inc
add
pop
neg
clc
pop
or
inc
lock
sbb
add
rolb
arpl
mov
mov
fwait
arpl
add
push
js
cmc
add
clc
jnp
roll
out
jae
push
add
or
mov
fisttps
xor
stos
loopne
mov
add
mov
add
adc
mov
cmpsb
cmp
enter
xor
into
ja
rcrl
or
pop
imul
add
add
xchg
repnz
rep
gs
les
rolb
jg
mov
data16
jae
in
out
add
mov
and
mov
dec
scas
pop
sbb
cwtl
int
push
sub
dec
imul
sbb
mov
push
out
enter
mov
mov
es
pop
mov
cmp
mov
pop
mov
mov
inc
xchg
sub
cs
sbb
inc
les
out
rcrl
test
inc
add
xchg
jmp
std
inc
and
mov
pop
inc
xchg
popf
std
jmp
pop
out
fldcw
ljmp
add
or
test
dec
gs
popl
repz
lahf
mov
add
mov
mov
sbb
into
repz
add
mov
fld
leave
lods
fcomps
jle
sub
pop
pop
cwtl
rolb
cltd
mov
ret
dec
add
fdivl
adc
mov
add
xchg
sti
into
arpl
addl
add
mov
insb
mov
push
roll
addb
mov
test
call
adc
mov
xor
xchg
ds
int
leave
sub
hlt
jbe
dec
jmp
pop
mov
pop
roll
in
mov
cltd
or
rep
add
aas
mov
pushf
and
mov
adc
addb
or
pop
push
add
xchg
mov
loop
mov
js
add
sbb
lds
ficoml
push
mov
add
add
add
xchg
xchg
repnz
mov
mov
scas
lret
add
cmp
out
add
push
or
js
jmp
outsb
xchg
push
cmp
fisttpll
mov
jecxz
loop
mov
add
add
mov
daa
push
jp
pop
sahf
orl
mov
clc
in
and
aas
sub
xor
mov
pushf
adc
mov
add
aad
pop
pop
jmp
xrelease
adcl
inc
lods
ret
jl
pop
daa
xchg
scas
in
pop
dec
pop
fwait
lret
stos
repnz
mov
jno
in
outsb
mov
add
mov
pushf
pop
mov
add
cmc
pop
pop
test
jmp
lea
outsb
xchg
adc
sbb
hlt
cs
out
add
jp
mov
mov
repz
add
shll
mov
adc
fucomip
dec
sub
sub
idivl
lret
add
rolb
mov
rolb
dec
push
test
mov
push
push
in
hlt
and
mov
stos
adc
xchg
jg
cwtl
xchg
call
add
add
mov
std
jo
mov
iret
gs
add
shll
xchg
cld
or
test
sub
inc
add
xchg
sbb
data16
mov
jecxz
dec
mov
add
mov
mov
fs
adc
mov
add
testl
fwait
loope
ret
and
punpcklwd
outsb
xor
ret
pop
stos
xor
stos
cltd
mov
push
aaa
es
add
sub
sbb
insl
fnsave
mov
or
ret
and
fs
mov
sub
ret
ret
pop
cmp
ret
loopne
mov
pop
pop
dec
jae
push
add
push
push
sbb
insb
push
imul
push
push
jl
and
sti
outsl
out
xchg
add
mov
rolb
mov
adc
mov
push
jecxz
add
or
dec
or
outsl
stc
call
addb
mov
and
add
jl
xor
fcmovnb
add
push
test
fwait
rolb
mov
push
stos
and
mov
cmp
add
stc
mov
adc
mov
mov
add
pop
ror
xchg
push
cmp
sahf
push
add
sub
cli
pop
lahf
pop
xchg
sbb
sbb
imul
mov
add
mov
sahf
fdivs
inc
icebp
mov
xor
mov
sarl
pop
pop
movsl
sbb
add
les
push
mov
add
out
xor
pop
xchg
dec
cmp
xor
inc
add
add
lret
ret
lods
lret
or
ret
push
mov
test
jno
jnp
xchg
jb
mov
add
mov
enter
pop
jl
add
add
push
add
fwait
xor
xchg
xchg
in
push
and
mov
subl
scas
shll
sub
add
into
bound
mov
popf
adcl
cltd
and
add
add
mov
push
aad
aam
add
adc
mov
xor
add
ret
sub
fwait
dec
mov
aas
and
mov
add
imul
stc
lret
push
nop
add
mov
mov
dec
inc
mov
xchg
aad
mov
inc
es
cli
inc
xchg
es
jl
add
add
add
pop
fscale
je
pop
cltd
into
jge
fs
xchg
sbb
add
jmp
or
mov
jns
push
add
dec
sbb
mov
mov
lcall
mov
jns
sbb
xor
add
mov
push
mov
add
xchg
rolb
push
add
mov
cli
je
aaa
sub
mov
jne
inc
add
loope
add
mov
addb
out
sub
rolb
mov
add
xor
mov
dec
repz
call
xchg
in
or
dec
dec
addb
ss
push
ret
mov
shll
pushf
in
lahf
adc
mov
and
mov
push
add
mov
ret
mov
jae
scas
jge
int
add
lock
xor
adc
xchg
or
and
outsl
xor
ljmp
movsb
leave
mov
xchg
xchg
add
inc
cwtl
int3
hlt
pop
insl
dec
shll
add
adc
mov
dec
jg
mov
add
mov
lea
aad
adc
mov
add
push
add
cmpsb
cmpsl
lahf
cmp
adc
push
add
leave
sub
add
sub
mov
fdivrl
les
cmp
add
add
sub
lods
push
hlt
sbb
or
insb
cmp
mov
add
test
or
sbb
push
add
imulb
and
add
or
aaa
dec
mov
mov
into
inc
mov
add
and
lret
pushf
inc
xchg
add
push
xchg
push
mov
bound
mov
mov
sub
pusha
add
or
add
and
fwait
rolb
mov
and
pop
xchg
adc
mov
add
das
clc
mov
repnz
and
rolb
lret
aam
mov
stos
lahf
jno
add
addb
daa
cli
ss
xor
mov
in
add
jecxz
add
in
sub
sub
mov
pop
inc
aad
sbb
xchg
rol
mov
test
inc
add
add
push
add
xlat
cmp
es
popa
inc
xabort
mov
popl
add
out
pusha
add
ret
add
mov
add
mov
dec
xchg
mov
stos
addb
mov
mov
lret
psubb
add
mov
mov
and
mov
mov
ja
xchg
xor
inc
xor
mov
mov
xchg
push
add
cmp
mov
ja
dec
scas
test
inc
add
and
mov
add
test
nop
add
sbb
idiv
mov
notb
add
out
push
mov
jne
iret
lock
mov
mov
add
inc
mov
mov
pop
or
aas
inc
add
dec
mov
sbb
enter
pop
pop
push
add
add
lret
adc
insl
ret
push
adc
add
pop
push
xor
arpl
add
push
in
xchg
mov
pusha
add
jle
add
gs
mov
push
cwtl
and
jb
mov
xchg
stc
mov
add
mov
sbb
sub
out
test
addb
daa
lahf
sahf
and
mov
add
in
inc
add
popf
jae
pop
inc
add
mov
jb
mov
rcrl
ljmp
add
loopne
mov
mov
incb
call
jg
out
rolb
mov
int3
loope
int
push
addr16
xor
mov
js
call
lea
test
cs
lock
popa
outsl
fsts
cmp
add
mov
pop
ret
pop
push
mov
insl
sub
inc
popa
and
mov
mov
add
ret
jge
jl
call
mov
imul
decl
add
push
xor
sbb
call
out
jg
add
xor
js
in
outsb
js
add
out
gs
lods
out
call
mov
xchg
xor
add
jl
aam
add
frstor
testl
mov
mov
mov
rolb
mov
add
inc
pop
xchg
add
das
inc
cltd
jne
xchg
sub
cmpsl
mov
or
bound
mov
add
cli
in
cs
mov
push
jne
jp
rolb
mov
xchg
xchg
call
mov
ret
mov
sbb
imul
mov
popf
add
mov
jl
xor
mov
sub
enter
xchg
orl
add
add
add
jmp
xchg
adc
mov
mov
addr16
push
dec
cli
sahf
inc
mov
add
mov
adc
xchg
add
add
jg
pop
sub
add
add
les
add
mov
add
mov
add
mov
fmuls
mov
nop
add
ljmp
pusha
add
stc
arpl
int
enter
xchg
or
arpl
int3
sub
and
leave
adc
mov
sbb
and
mov
mov
add
pop
dec
xor
add
sbb
int3
mov
mov
mov
mov
pushf
jp
xchg
cmp
cwtl
jp
jge
add
push
add
sub
mov
fdivs
add
pop
nop
add
add
xchg
add
insl
jl
mov
or
jecxz
addb
test
movsb
mov
outsb
jmp
add
movsb
ss
aaa
std
ljmp
mov
add
arpl
fsubs
fs
add
add
mov
ret
out
imul
mov
movsl
cmp
aam
fdivr
inc
dec
mov
jae
sbb
sub
adc
test
aam
in
or
data16
and
cld
dec
cwtl
lahf
mov
cmp
inc
add
or
loop
mov
cmp
movsb
cmc
xchg
lret
nop
add
das
sbb
scas
jg
mov
push
cmpsl
or
xor
inc
repnz
pop
inc
lds
fdivr
je
mov
push
mov
fldl
mov
data16
cmpsl
push
add
pop
jp
dec
xor
sub
dec
enter
mov
add
aam
iret
jae
xlat
mov
mov
lock
inc
and
mov
add
pusha
add
mov
add
xor
std
in
orl
add
cmp
fdivrl
add
mov
mov
mov
rolb
outsb
out
inc
add
pop
push
fs
adc
mov
mov
push
rolb
addl
mov
adc
mov
add
inc
mov
mov
add
mov
mov
imul
inc
add
add
add
mov
mov
les
add
movl
mov
test
add
in
call
mov
cmc
inc
outsb
jmp
addb
or
imul
pop
iret
out
jbe
or
add
fdivp
add
in
fimuls
adc
mov
pop
xchg
popf
xlat
push
imul
pop
sti
fcmovnu
lods
push
idiv
insb
fcmovnb
add
ds
outsl
jb
mov
push
inc
mov
test
add
mov
in
push
hlt
mov
adc
jecxz
ds
add
mov
andl
mov
mov
mov
add
outsl
stos
fdivrp
adc
mov
pop
and
mov
pop
adc
mov
jl
shrl
nop
add
pushf
rcll
add
xchg
pop
jge
rolb
mov
xchg
push
push
add
dec
stos
je
xchg
xor
fcom
into
cmp
xor
mov
sbb
mov
jae
push
enter
ja
add
mov
add
fldcw
add
sub
cmp
jno
fstl
stos
fs
outsl
stos
and
lods
mov
mov
mov
cmc
pop
xchg
or
add
and
movsl
or
mov
or
sahf
mov
and
out
insb
push
jns
lods
fwait
addb
or
adc
add
fmulp
aaa
ljmp
xlat
shrl
gs
outsb
punpckhbw
mov
add
xchg
and
mov
sbb
mov
mov
mov
xor
mov
add
das
add
gs
mov
inc
lods
adc
dec
aas
mov
mov
mov
leave
lret
xchg
test
mov
addb
ljmp
sbb
mov
fsts
mov
and
mov
add
and
mov
adc
mov
add
mov
add
sti
mov
add
xor
fcoms
jno
pop
rolb
cs
jno
or
test
int
ja
int
mov
dec
xor
mov
into
aaa
pop
jno
sbb
add
aam
jno
jne
or
loope
pop
pop
dec
mov
add
mov
adc
stos
xor
mov
add
and
push
out
pop
and
xchg
add
out
add
xor
ret
and
pop
sub
cmc
lret
adc
add
sub
add
dec
pop
repz
mov
rolb
mov
jg
addb
addr16
cltd
mov
ss
xchg
fisubs
icebp
push
rolb
fildl
add
mov
nop
add
scas
pop
mov
lret
xor
mov
aas
push
repnz
insb
xchg
add
mov
or
vmread
lock
xor
mov
mov
add
dec
icebp
mov
adcl
dec
scas
xchg
add
mov
mov
lods
jecxz
jne
mov
add
xchg
mov
ja
ficompl
xor
mov
repnz
mov
fstps
mov
loop
mov
add
fiaddl
add
jmp
jmp
cmpl
mov
inc
mov
xor
aad
pop
mov
add
mov
xchg
pop
cmp
jno
mov
add
ret
pop
ret
mov
xchg
in
push
add
push
add
mov
das
jle
push
clc
lcall
jp
add
add
outsl
push
cmpsl
leave
test
xchg
push
movsb
cmp
into
jne
rolb
mov
add
xor
ljmp
mov
mov
xor
inc
imul
mov
mov
adc
jnp
into
cltd
xor
mov
or
xchg
outsb
xchg
lods
shll
inc
add
inc
add
mov
mov
inc
xchg
xor
jns
negb
jmp
or
outsl
in
sbb
jmp
inc
xrelease
or
dec
inc
jb
mov
fprem1
pop
clc
pop
out
addb
pop
addb
xor
mov
addb
vhsubps
loope
mov
jnp
xchg
cli
ss
mov
sub
mov
xchg
jae
inc
loop
mov
xchg
add
popa
inc
add
sub
add
dec
push
fistl
add
mov
sub
add
mov
mov
fcomps
hlt
lea
mov
sub
es
int3
xor
mov
mov
mov
add
cmpsb
or
pop
xchg
xchg
dec
lret
movsl
sahf
mov
add
add
std
sub
mov
inc
fldt
adc
mov
push
aas
xchg
loopne
mov
add
xlat
gs
lods
pop
cmp
bound
mov
ret
jmp
mov
mov
xor
add
mov
adc
mov
dec
sub
dec
mov
jne
aam
sbb
repz
in
mov
arpl
push
add
std
dec
dec
inc
add
mov
ja
cmpsb
pushf
push
ljmp
add
xchg
inc
add
jnp
add
std
cmc
push
add
mov
inc
mov
mov
mov
notl
shll
add
add
mov
cmp
inc
int3
jns
movsl
gs
enter
jg
cmp
add
inc
add
imul
test
cmp
add
or
cmc
or
and
mov
clc
or
orl
cmp
add
mov
mov
mov
mov
mov
dec
call
lahf
pushf
aad
pushl
mov
int3
addr16
outsl
lcall
add
add
jb
mov
mov
push
dec
sub
add
mov
in
jle
xlat
out
jne
add
add
mov
mov
int
mov
jae
or
cmp
adcl
mov
mov
ja
dec
les
jns
pop
sbb
cs
pop
ss
add
jb
mov
addr16
push
add
lahf
nop
add
or
mov
add
int3
pop
push
outsb
mov
or
jo
mov
ds
adc
mov
add
add
testb
jmp
std
aad
lods
sbb
add
push
cmp
arpl
cltd
mov
mov
jbe
cmc
lahf
test
xorl
sbb
dec
sbb
mov
test
adc
imul
repnz
add
inc
repnz
mov
loope
cmc
aas
sub
add
outsl
sti
xchg
cmpl
shll
add
pop
in
add
in
lods
decb
push
sub
adc
mov
or
lods
outsb
fnstcw
adc
mov
sbb
inc
jp
lcallw
xor
mov
add
mov
push
sbb
jg
in
int3
lahf
cmp
mov
pop
pop
es
icebp
push
repnz
add
out
repnz
movsb
lret
dec
out
sub
pop
mov
popa
xchg
inc
lods
loope
fisttpll
push
inc
iret
cmp
push
mov
mov
repz
inc
mov
dec
and
sub
int
in
pop
iret
jge
cld
mov
add
mov
pop
mov
add
rolb
xor
mov
push
rolb
add
mov
pop
pop
xor
sarl
add
adc
gs
fadds
add
inc
dec
inc
add
movsl
jnp
and
xchg
scas
lods
mov
js
out
sti
jno
addb
fldenv
add
lea
orl
xchg
pop
lret
out
gs
add
add
add
pushf
adc
out
fldl
loopne
mov
std
das
popa
dec
and
add
mov
popa
in
popf
fwait
pusha
add
mov
xchg
test
and
mov
sbb
cmpsl
inc
push
imul
movsl
cmp
pop
add
sub
add
mov
pop
cmp
data16
insl
ds
pop
xchg
aaa
cmp
out
orl
push
loop
mov
inc
add
pop
clc
insb
addb
inc
and
neg
insl
jge
jle
cs
lods
jecxz
and
mov
xchg
dec
mov
insb
std
js
cmp
add
add
mov
fbld
add
mov
stc
imul
xchg
test
cmpsl
pop
sub
jae
addb
sbb
add
sub
xchg
mov
push
aam
add
mov
add
add
push
aas
out
daa
and
add
mov
cltd
xor
mov
or
pop
and
mov
cli
popa
mulb
add
sarl
cmpsb
jmp
cmp
or
jmp
xchg
fdiv
sti
aad
jb
mov
or
add
ds
mov
lret
loop
mov
xchg
dec
sti
in
rolb
mov
in
cmp
xchg
add
push
add
mov
rolb
es
adc
mov
adc
int3
mov
mov
je
js
scas
xor
rorl
lods
push
mov
fnstsw
add
aas
jae
mov
rolb
mov
xchg
mov
mov
xor
ja
mov
xor
addb
pop
std
aaa
nop
add
jecxz
add
loopne
mov
xchg
pop
js
sub
jmp
clc
mov
jae
sub
sub
out
inc
sub
xor
mov
or
add
pop
bound
mov
mov
cltd
lock
push
cmp
cltd
xor
mov
sahf
xor
fldt
and
sub
rolb
int3
addr16
pop
pop
sub
dec
jb
mov
xchg
push
add
mov
decl
repz
test
xchg
out
add
aam
adc
add
pop
insl
pop
sub
jne
mov
aad
out
jecxz
pop
ljmp
pop
dec
std
out
fadd
fisttpl
inc
add
fcomps
pop
or
and
lods
xchg
daa
imul
dec
cli
mov
and
addb
sbb
add
mov
or
les
repz
xor
push
xchg
cmp
mull
in
lret
push
sbb
mov
add
dec
out
xor
mov
cld
lret
insl
jo
mov
add
mov
mov
add
lea
jbe
hlt
push
clc
inc
add
add
in
adc
cld
cltd
lds
insb
stc
dec
mov
inc
add
add
popa
pushl
mov
sbb
jno
and
fcmovnbe
add
imul
lds
add
fs
jae
test
jnp
mov
cmc
movsl
and
jbe
test
mov
xor
mov
add
mov
pop
push
pop
dec
mov
add
jne
mov
mov
adc
hlt
pop
pop
xor
ljmp
add
mov
mov
dec
adc
lret
addr16
add
add
dec
scas
loop
mov
insb
es
add
dec
lods
ljmp
pop
fbstp
mov
ret
leave
adc
mov
and
mov
inc
aad
add
cwtl
dec
push
add
fwait
leave
and
mov
mov
adc
je
inc
pop
cmc
or
addr16
push
jp
add
mov
pop
flds
mov
stos
imul
fcomps
inc
repz
mov
std
lods
aam
dec
mov
jg
hlt
mov
push
sbb
lds
mov
addb
into
inc
add
enter
lret
enter
addr16
or
push
dec
push
jl
inc
shll
dec
dec
jae
sub
or
fcomps
add
mov
mov
fcomi
movsb
pusha
add
cmpsb
icebp
fldt
pushf
push
scas
pop
adc
mov
fimuls
pushf
icebp
xchg
ja
dec
stc
jg
scas
lds
inc
pop
cmp
jmp
std
cmpsl
add
or
add
mov
lds
jecxz
mov
add
cmp
out
add
push
add
mov
add
mov
mov
mov
add
or
add
pop
stos
mov
test
add
inc
outsb
mov
xor
sbb
addb
pop
fs
add
jns
add
xchg
add
cwtl
decl
dec
lds
cmc
or
push
inc
mov
sbb
xor
lcall
aad
add
cmp
cmp
push
nop
add
addr16
add
fsave
jnp
jg
sbb
aaa
aam
pop
je
add
jbe
add
testb
mov
mov
adc
mov
add
ja
inc
test
jbe
add
mov
mov
aas
lret
test
addr16
jge
das
stos
xor
jne
aam
aam
shld
rcl
pop
cmc
icebp
sub
add
mov
jnp
jecxz
cld
gs
xchg
jle
sub
add
and
mov
add
add
aad
add
add
mov
add
mov
lahf
jnp
lods
sbb
sbb
add
cmovp
jle
xor
mov
loopne
mov
xchg
add
and
push
add
push
inc
add
mov
jl
add
notb
xor
mov
add
mov
mov
dec
mov
mov
add
add
fmul
inc
outsb
test
mov
je
push
add
add
mov
xchg
add
mov
fsubp
add
or
jns
sub
mov
push
popa
push
jg
or
lods
cmc
cvtps2pd
lret
mov
pop
jle
loopne
mov
add
xchg
sbb
dec
dec
lahf
lods
ja
push
mov
ds
icebp
xchg
mov
push
repnz
xchg
jnp
jno
fwait
mov
mov
into
jmp
sub
sub
mov
jmp
inc
add
js
hlt
or
mov
sub
mov
mov
jnp
adc
or
movsb
outsl
cmpsb
fiaddl
pop
scas
cwtl
hlt
inc
movsl
cmp
add
ds
cmp
ret
pop
add
mov
mov
mov
test
add
and
mov
sub
pop
sub
lds
inc
stos
mov
dec
dec
push
jmp
sti
enter
leave
test
jne
jne
add
arpl
sbb
mov
pop
leave
leave
mov
aaa
inc
iret
mov
pop
pop
pop
or
sbb
jae
push
push
push
repnz
mov
sub
mov
rolb
clc
sahf
xchg
add
jg
in
divl
mov
mov
out
std
adc
mov
add
add
xchg
nop
add
out
mov
lods
sbb
and
insb
xlat
inc
fisubs
loop
mov
add
dec
das
mov
jle
stos
cmpsl
push
fdivrl
icebp
sbb
and
ret
inc
add
inc
add
insl
inc
add
sbb
xchg
mov
jl
xor
mov
imul
add
std
adc
push
or
mov
sarl
add
jno
aam
sub
xchg
sarl
pop
repnz
mov
aaa
dec
mov
mov
sbb
xchg
cld
ss
xor
mov
pop
mov
inc
add
std
jb
mov
addb
dec
aad
xor
hlt
inc
inc
stc
mov
dec
dec
push
xor
sbb
sti
cmp
mov
popf
test
mov
enter
mov
mov
mov
dec
rolb
mov
mov
mov
outsb
ret
sbb
xchg
adc
mov
mov
mov
in
push
xlat
cwtl
rolb
or
mov
orl
loope
add
mov
xor
or
jo
mov
icebp
xor
mov
mov
in
add
mov
or
mov
mov
pop
aaa
pop
cmp
sub
jge
nop
add
gs
outsl
js
add
ror
mov
mov
xchg
leave
loopne
mov
adc
mov
sbb
hlt
mov
and
mov
or
sti
cmpsb
cmp
mov
rorl
mov
mov
cltd
cmp
push
data16
mov
mov
jecxz
scas
jp
push
push
nop
add
lcall
inc
adc
add
mov
mov
shl
pop
mov
mov
paddusb
mov
stc
jp
fxch
bsf
mov
adc
mov
not
add
scas
mov
add
std
mov
mov
repnz
out
add
add
jae
push
mov
jg
inc
add
add
add
sarl
mov
mov
adcl
addb
xor
test
es
imul
mov
mov
xor
mov
addb
mulb
add
or
xor
mov
aam
xor
push
shl
mov
jbe
lcall
mov
mov
dec
ss
jns
add
mov
movsl
jae
jmp
dec
push
xchg
pop
test
push
cmp
arpl
add
in
inc
add
scas
pusha
add
xchg
fiaddl
add
mov
inc
imul
push
js
jbe
pop
sti
test
pop
lods
xchg
dec
ds
mov
and
mov
xor
mov
inc
push
jmp
add
add
sub
inc
lods
rorl
and
cmp
sbb
jns
add
pushf
mov
cwtl
leave
js
lcall
divb
incl
daa
test
sub
mov
cld
dec
and
nop
add
push
add
mov
adc
sahf
or
add
add
pop
push
lcall
sbb
addb
and
mov
scas
adc
and
mov
add
pop
in
add
add
mov
mov
add
mov
add
sbb
jns
pop
int
lret
xchg
adc
mov
pop
adc
xor
sbb
mov
mov
cmp
inc
add
add
mov
mov
cli
sbb
mov
sti
mov
lcall
fidivl
xchg
pop
cmp
sbb
decb
add
in
mov
or
lock
sub
adc
mov
out
mov
test
mov
xchg
fldt
mov
add
mov
pop
xlat
insb
stos
idivb
adc
inc
add
adc
mov
xlat
jne,pt
adc
mov
aam
jge
sbb
dec
jge
xrelease
addb
sar
ds
movsl
mov
mov
rorl
mov
repnz
lods
movsl
addb
bound
mov
pushf
inc
ficoml
js
add
mov
mov
mov
repz
mov
mov
xor
insl
out
cmp
dec
mov
mov
bound
mov
insl
lea
jae
and
pop
std
xor
push
pusha
add
pop
pop
add
lods
pop
mov
xchg
adc
mov
add
fisubl
push
stos
movsl
mov
fdivrs
add
mov
add
rolb
fimull
adc
pop
daa
mov
and
xlat
frstor
rolb
mov
xchg
add
add
and
add
data16
mov
in
or
and
mov
mov
mov
xor
les
ror
add
jo
mov
fiadds
mov
scas
xor
xchg
push
nop
add
add
mov
inc
enter
mov
dec
or
and
mov
cmp
mov
dec
out
stos
test
dec
add
mov
std
xor
dec
fs
jns
jge
add
mov
mov
adc
rcr
fisttpll
lock
and
mov
repz
xchg
pop
jnp
add
pusha
add
movsl
popf
push
add
jns
scas
and
pop
aas
sub
inc
add
dec
push
aad
iret
stc
shr
and
mov
sbb
pushf
jge
sbb
pop
aam
fdivs
aam
xchg
and
mov
andl
mov
stos
xchg
fwait
hlt
std
push
add
add
addb
xchg
add
push
push
lods
outsl
pusha
add
mov
test
jne
pop
cwtl
lods
sbb
sub
into
cmp
xchg
stos
cmp
imul
sbb
mov
mov
mov
mov
xor
aas
jp
xchg
mov
mov
add
roll
add
mov
dec
test
xor
mov
add
dec
aam
jecxz
add
xchg
jne
add
loop
mov
add
adc
mov
jbe
cltd
sub
cmpsl
adc
js
push
add
mov
vunpcklpd
add
scas
mov
mov
daa
scas
fs
mov
adc
push
mov
mov
mov
push
in
or
mov
mov
or
stos
or
add
add
or
mov
negl
push
add
mov
int
add
daa
repnz
in
pusha
add
inc
or
jp
push
mov
sub
add
loope
lods
std
push
push
xor
pop
pop
add
or
inc
punpckhbw
mov
add
mov
cs
mov
popf
clc
xchg
ret
adc
jns
push
cs
xchg
xchg
inc
rolb
pop
addb
popf
icebp
nop
add
repnz
add
fprem
cmpsl
imul
add
mov
mov
js
jmp
mov
not
add
jns
add
mull
adc
mov
jae
mov
pop
stos
mov
inc
stc
sub
movsl
out
add
scas
dec
aaa
lahf
sti
add
mov
roll
push
push
xchg
xchg
jl
fdivrs
add
add
mov
in
jecxz
cwtl
dec
outsl
add
push
sbb
add
sbb
push
add
cmp
icebp
fwait
mov
jo
mov
movsb
imul
mov
sub
add
mov
aas
or
lods
add
sbb
je
inc
push
inc
cmp
xor
sbb
into
cmp
out
dec
add
lcall
lock
jmp
out
xor
outsl
or
xchg
lret
mov
aaa
mov
add
mov
mov
scas
cltd
lea
mov
or
adc
sbb
jmp
test
xor
cmpsb
ss
repnz
dec
xchg
shrl
and
mov
call
sbb
rcl
adc
add
sahf
add
mov
mov
popf
jno
imul
or
adcl
rolb
mov
mov
and
popa
inc
jb
mov
rolb
mov
push
lods
push
stc
ljmp
mov
add
ds
mov
dec
jp
popa
dec
bound
mov
xchg
add
and
add
sqrtps
enter
mov
cltd
cmp
add
out
xchg
fsubrl
lahf
insl
jnp
addb
adc
mov
stos
andl
shll
mov
add
add
jo
mov
mov
jg
xor
mov
in
stos
xor
mov
ret
imul
jno
mov
mov
icebp
imul
iret
mov
add
mov
scas
jbe
icebp
sub
mov
add
call
aaa
int3
ret
stos
sti
add
mul
xchg
push
jns
lcall
int3
xchg
aam
loope
adc
sbb
add
push
add
xor
mov
cmp
add
add
mov
mov
mov
jns
hlt
ds
popf
xlat
xchg
nop
add
outsl
push
add
ret
cmpsb
test
adc
mov
add
mov
stos
ret
stos
pusha
add
xchg
aas
cwtl
pop
mov
mov
pop
or
xchg
cmpsb
popf
jns
xor
sahf
jmp
sahf
and
and
add
data16
mov
add
xchg
xchg
aaa
jae
cli
test
add
inc
add
mov
daa
aad
rolb
fdivs
int
xor
mov
imul
pop
pop
sub
cld
pop
dec
xor
pop
icebp
mov
xor
jbe
rolb
mov
add
add
add
stos
xor
mov
add
xchg
repnz
jl
lock
mov
add
add
les
outsl
fdivrl
dec
xchg
and
pusha
add
add
pop
ja
mov
ljmp
add
mov
adc
mov
add
xor
mov
mov
mov
add
iret
dec
sub
dec
insl
outsb
mov
es
or
xchg
sbb
mov
push
in
sbb
aas
dec
inc
add
inc
sub
dec
dec
in
jp
or
fwait
add
mov
add
mov
into
sub
or
pop
jae
iret
aam
icebp
mov
mov
mov
inc
add
enterw
jmp
mov
sub
add
in
fisttpl
mov
jecxz
repz
repnz
push
add
add
pop
push
out
add
add
pop
lahf
pop
push
insl
xchg
icebp
mov
add
js
out
adc
call
mov
cs
stos
mov
sbb
lds
mov
js
popf
test
cltd
xchg
ds
pop
mov
lds
int
mov
into
outsl
mov
add
mov
dec
getsec
ja
jae
pop
loopne
mov
out
add
icebp
adc
mov
jno
xor
rolb
jl
addb
sbb
outsl
fisubs
add
add
mov
sbb
and
mov
cmovb
mov
mov
xor
test
pop
and
mov
cmovle
inc
mov
test
push
hlt
int
in
mov
dec
psrad
mov
rolb
mov
add
mov
outsl
pop
mov
cmpsb
and
sub
mov
mov
addr16
mov
xchg
xchg
xchg
je
adc
popa
setno
jle
jo
mov
loop
mov
repz
add
inc
push
add
mov
push
adc
mov
mov
add
xchg
out
cs
push
addl
mov
push
or
ss
iret
popa
mov
icebp
push
scas
cld
jp
cmp
or
fisubrs
inc
ja
sbb
adc
mov
or
add
pop
mov
lret
sbb
adc
mov
add
inc
cli
mov
mov
test
lcall
add
ds
iret
out
test
sbbl
stos
xor
ds
or
add
mov
or
cmp
das
mov
dec
pop
fwait
push
insb
or
outsl
adc
mov
mov
xor
mov
or
les
pop
add
dec
loope
add
cmp
dec
adcl
cmc
adc
mov
cmp
out
dec
les
repz
outsl
mov
mov
pop
adc
add
int
fisubl
dec
fidivrs
adc
mov
pop
lock
mov
dec
sahf
lea
fmul
add
mov
push
cltd
push
test
and
mov
pop
cld
rolb
mov
add
repnz
dec
cli
ss
rcrl
cmp
mov
mov
add
cmp
test
add
mov
aas
cmp
mov
mov
popf
addl
ja
pop
jne
test
stc
inc
sbb
add
mov
jg
test
add
add
imull
xlat
lds
xchg
mov
out
xor
mov
std
add
push
test
sub
push
scas
xchg
sub
jmp
rolb
mov
xchg
arpl
movsb
push
cld
test
add
mov
jp
ret
push
int3
pop
pusha
add
inc
jle
push
es
stc
lods
push
call
dec
mov
outsb
adc
mov
in
mov
cli
inc
add
jl
cmp
fnstcw
repz
fsubl
testl
addb
adc
mov
frstor
sti
mov
pop
push
outsb
jp
add
xchg
cli
mov
das
adc
mov
addb
push
add
pop
addr16
add
movsl
outsl
mov
arpl
jae
mov
add
pop
rolb
mov
xchg
fmull
arpl
pop
sub
pop
jbe
add
add
inc
adc
mov
add
push
pop
add
ret
out
xchg
add
out
cs
test
insl
pusha
add
testl
push
add
insl
ljmp
lcall
loopne
mov
mov
inc
insl
cmpsb
xchg
mov
jo
mov
bound
mov
lcall
mov
jecxz
mov
cmc
mov
lret
dec
stos
cmp
cmp
add
ja
adc
mov
add
add
add
mov
sub
push
add
add
cmpsb
jae
lret
fimull
and
mov
mov
mov
or
xor
mov
mov
adc
mov
mov
lock
jno
adc
mov
mov
mov
add
xchg
bound
mov
add
and
mov
mov
mov
fildll
inc
rolb
mov
sub
std
dec
out
add
add
mov
shll
sub
jnp
stos
mov
xor
mov
hlt
pop
push
scas
mov
loop
mov
rolb
mov
mov
mov
add
sub
sub
xchg
add
pop
pmuludq
or
mov
call
add
mov
mov
add
mov
add
mov
mov
outsb
lods
popa
and
add
xchg
rolb
mov
add
or
inc
adc
mov
arpl
pop
mov
mov
mov
cmc
cmp
add
mov
pop
mov
mov
adc
call
loop
mov
mov
add
mov
cld
mov
add
enter
sbb
pop
ss
cmp
dec
push
call
movsb
stc
pusha
add
mov
test
pop
addb
repz
mov
add
push
pusha
add
fisubrl
mov
xor
cs
adc
inc
xchg
nop
add
mov
mov
lcall
mov
in
popa
dec
xchg
cltd
sbb
add
sub
mov
jo
mov
adc
flds
mov
movsb
add
mov
add
add
arpl
and
ds
xchg
or
add
mov
add
xor
sub
shll
cmp
test
aam
int
stc
dec
fs
pop
pushf
loop
mov
pop
push
cmp
mov
jo
mov
jecxz
add
mov
dec
fisttpll
ret
lcall
daa
lods
push
call
mov
xor
ljmp
fwait
inc
outsb
jne
std
mov
scas
stos
outsl
lcall
mov
ret
insl
xor
nop
add
aas
cmc
inc
xor
mov
xor
mov
and
xor
mov
dec
xchg
add
jb
mov
add
nop
add
insl
in
mov
jbe
pop
cmp
add
xchg
add
sub
push
push
mov
mov
hlt
insl
pop
pop
rolb
fldcw
loope
repnz
jp
jbe
and
add
mov
sub
add
add
sbb
lods
inc
adc
jmp
roll
add
iret
jne
std
add
mov
add
mov
xchg
iret
add
sub
inc
daa
adc
stos
inc
rolb
into
mov
pushl
mov
or
mov
and
mov
add
xor
movsb
xchg
int
or
jge
pop
sbb
mov
pop
mov
mov
dec
or
xor
mov
sub
clc
insb
jmp
enter
mov
add
mov
mov
mov
lret
and
mov
add
xchg
insb
mov
pop
xchg
int3
ret
adc
mov
add
lret
test
mov
sub
add
mov
cmpsb
adc
jmp
sub
xor
inc
add
dec
or
add
push
mov
mov
or
into
rolb
mov
inc
add
add
push
inc
sbb
mov
add
pop
cmpsb
loope
lret
mov
test
les
add
int3
lcall
add
icebp
pop
xlat
in
sbb
pop
arpl
in
es
xchg
pop
add
mov
addb
push
rolb
mov
mov
xchg
bound
mov
inc
add
fwait
repz
pop
sahf
cmp
aas
sub
pop
jp
cs
iret
sbb
add
lahf
stos
mov
add
psubsb
mov
add
dec
inc
mov
arpl
add
push
xlat
dec
clc
cmp
js,pt
add
int
loopne
mov
mov
xor
mov
mov
mov
and
mov
insl
sub
jo
mov
push
mov
lret
insl
inc
add
push
xchg
add
mov
addb
add
add
dec
lock
pushf
jbe
stc
mov
mov
adc
iret
push
push
add
jns
repnz
mov
ljmp
fisubrs
xchg
bound
mov
inc
add
iret
dec
leave
fdivl
add
enter
pushf
mov
dec
bound
mov
sahf
jbe
leave
pop
adc
daa
or
jb
mov
add
xor
and
mov
imul
mov
nop
add
jecxz
insl
cmp
fnsave
add
repz
mov
sub
mov
push
fsts
mov
add
pop
pop
imull
xchg
add
mov
addb
sbb
fdivl
mov
jecxz
ds
or
cltd
jg
lret
outsl
sbb
mov
hlt
cmp
ss
and
test
add
and
imul
scas
sarl
dec
jbe
jo
mov
pop
rolb
dec
push
arpl
sub
inc
test
mov
leave
test
jns
add
mov
rolb
mov
int
add
mov
mov
pop
in
mov
sbb
add
cli
fnstcw
rcll
add
int
cmp
lcall
add
and
jecxz
mov
jle
push
add
add
cltd
test
insl
adc
pop
stc
xor
mov
mov
add
ret
loop
mov
add
mov
ljmp
push
adc
out
int
sbb
xlat
cmc
adc
ret
jle
ret
push
xchg
add
imul
add
jge
ja
or
test
dec
sahf
dec
shll
add
outsl
jae
in
mov
dec
pop
cltd
dec
xchg
test
adc
lret
inc
add
or
sbb
add
rolb
pushf
pusha
add
pop
dec
or
xor
pop
push
int
push
rorl
xor
mov
pop
testl
add
mov
mov
ljmp
stos
xor
mov
add
mov
add
add
pop
adc
mov
xor
add
jne
imul
add
mov
add
fs
mov
cmp
ss
add
add
mov
inc
add
insl
xor
mov
add
mov
xchg
mov
jbe
jne
and
in
jp
push
ret
mov
hlt
adc
or
adc
mov
and
mov
mov
xchg
stc
and
add
test
push
pusha
add
lods
lret
adc
fs
ja
fs
sti
and
ret
push
dec
movsl
lock
icebp
jg
cmp
add
mov
add
cmp
idivb
xchg
mov
jl
inc
sahf
rolb
lcall
ja
fs
cmpsb
dec
or
jmp
fs
js
jne
fmull
add
xchg
in
pop
pusha
add
add
mov
adc
mov
test
out
xchg
popf
mov
mov
dec
add
mov
lds
cs
mov
jo
mov
aas
cmp
xor
mov
push
mov
add
bound
mov
adc
mov
rolb
and
popf
lds
mov
mov
add
mov
mov
call
sub
xchg
aad
ljmp
cmp
xchg
push
push
inc
xchg
add
sbb
ret
jo
mov
dec
xchg
or
xchg
xchg
lahf
aaa
inc
push
and
cld
jecxz
sahf
dec
je
add
adc
pop
test
inc
add
cmp
push
fnstcw
inc
fsts
add
mov
fsub
mov
inc
add
sub
lock
insb
dec
sub
cmp
mov
and
out
mov
mov
bound
mov
jnp
pop
insl
mov
xchg
add
add
fimuls
addr16
cmp
jp
add
and
xor
call
mov
mov
adc
or
cmp
push
rolb
mov
jo
mov
add
mov
enter
sbb
add
cmc
cld
jge
stc
rorl
out
sbbl
add
repnz
push
inc
idivl
lret
mov
adc
mov
add
jbe
push
xlat
and
push
fldenv
mov
add
fisubrl
mov
add
mov
outsl
mov
cmp
imul
add
out
jmp
mov
add
shrd
hlt
jle
mov
add
inc
adc
xchg
xor
mov
nop
add
mov
and
mov
movsl
dec
js
add
inc
xchg
orl
push
adc
mov
add
loopne
mov
mov
into
jnp
xchg
cmpsb
xchg
ss
ja
mov
push
aaa
push
jo
mov
fninit
push
mov
cmpsl
nop
add
dec
xchg
add
add
add
add
mov
adcl
add
add
movsl
push
in
clc
test
aaa
pop
adc
mov
jb
mov
ret
iret
cmpl
cmp
icebp
dec
jl
inc
or
mov
xchg
add
nop
add
das
jp
push
cmp
cmpsl
mov
repnz
add
rolb
mov
pop
ret
mov
jmp
add
std
xlat
aad
es
add
mov
cs
les
and
mov
add
pusha
add
aas
push
fcomps
add
mov
pusha
add
mov
mov
insb
mov
pop
iret
mull
mov
lahf
aas
or
add
mov
dec
pop
shll
scas
aad
inc
or
dec
cmp
loope
repz
lock
xchg
mov
pop
cld
pushf
bound
mov
pop
sahf
inc
add
add
mov
repnz
mov
dec
jbe
lret
jae
sub
ss
in
sub
lahf
in
fcoms
es
mov
mov
subl
addr16
lcall
sbbl
lret
mov
and
scas
inc
add
xchg
mov
ss
xchg
mov
jp
add
dec
and
mov
add
add
cmp
fisttps
jne
gs
mov
mov
addb
adc
and
or
mov
mov
mov
add
dec
mov
test
fwait
into
lret
fs
xchg
xor
mov
push
les
dec
je
mov
test
add
sbb
ja
jns
lds
lods
sahf
hlt
in
fstpl
pop
mov
add
push
in
incb
nop
add
mov
lods
and
outsl
fildll
inc
add
es
pop
loop
mov
mov
bound
mov
in
rolb
mov
test
gs
mov
push
dec
addb
xlat
jmp
xchg
inc
inc
std
loopne
mov
roll
add
add
fdivp
add
mov
mov
add
lahf
cmp
ja
gs
inc
dec
lret
pop
pop
daa
loop
mov
sbb
rolb
mov
fldenv
addb
xor
movl
out
insl
jne
xchg
nop
add
or
cmpsb
gs
lock
test
adc
mov
push
sahf
out
in
xchg
aaa
das
enter
jbe
cs
add
mov
mov
push
add
sub
add
add
mov
sbb
dec
out
fstps
mov
sbb
fidivrl
dec
xchg
repz
push
icebp
sahf
adc
mov
fs
insb
fcomps
movsb
sbb
loopne
mov
push
rolb
mov
fnsave
mov
mov
pop
adcl
rolb
lods
lret
call
out
adc
mov
cmc
lret
and
add
push
movsl
dec
jbe
imul
xor
repnz
dec
dec
dec
xchg
bound
mov
inc
lock
push
call
aas
and
jno
or
sti
dec
lret
cli
addb
iret
shll
stos
clc
cmp
xchg
add
mov
movsb
add
sbb
jno
addb
xchg
fcompl
mov
mov
bound
mov
or
push
ffree
pop
fmulp
les
out
mov
clc
in
or
mov
push
dec
das
xchg
add
mov
jmp
mov
mov
cmp
imul
mov
mov
mov
add
push
stos
rolb
mov
jl
add
mov
jb
mov
add
cltd
ret
inc
add
inc
add
mov
or
enter
add
mov
jge
jg
lahf
repz
sahf
xor
cld
dec
out
fs
adc
mov
negb
adc
inc
loopne
mov
add
mov
fdivr
movsl
mov
add
xor
fwait
fs
test
in
add
das
scas
data16
mov
rolb
mov
in
mov
mov
sahf
or
mov
repnz
rorl
dec
cmc
and
sbb
mov
lcall
fistps
add
pop
inc
add
cs
sub
ja,pn
push
test
cmc
inc
lcall
and
xchg
fsubrl
sbb
rcll
fisubs
mov
loope
inc
add
mov
hlt
leave
push
mov
bound
mov
out
jmp
adc
push
pop
mov
lods
test
mov
mov
mov
mov
add
pop
fs
mov
add
mov
jno
inc
jo
mov
fs
popf
daa
push
lds
mov
rolb
mov
jbe
xor
mov
cld
std
jle
dec
dec
adc
pop
aas
adc
inc
add
add
mov
mov
and
mov
xor
mov
sti
out
addr16
out
idiv
test
add
jmp
das
xor
mov
add
scas
cmp
hlt
sbb
mov
push
and
movsl
push
movsl
or
ret
pop
sbb
and
mov
fdiv
add
lods
pushf
jge
push
lcall
push
mov
stos
or
repnz
dec
jg
fistps
aad
movsl
xchg
pop
cli
in
test
aas
hlt
stos
xor
jp
push
sbb
add
add
mov
or
add
mov
add
dec
jne
je
add
scas
sub
outsl
inc
insb
lock
sub
incb
daa
adc
sub
add
or
test
add
sub
mov
mov
pop
lds
arpl
movsl
hlt
clc
iret
jno
shll
add
insl
or
mov
pop
fwait
push
add
lea
loop
mov
mov
cmc
nop
add
mov
mov
inc
adc
xchg
mov
shll
mov
and
push
in
ja
dec
push
push
fdivr
sar
scas
cmp
add
daa
dec
inc
add
mov
enter
fistpll
and
cmp
add
push
or
in
fnstenv
mov
test
pop
aas
jg
dec
ret
fcomp
pop
in
mov
fiaddl
push
insl
ret
pop
dec
fidivrs
sbb
incb
insl
fisubl
test
add
mov
mov
pop
mov
pushf
scas
movsb
mov
jne
mov
mov
pusha
add
add
dec
mov
imul
imul
or
ja
scas
scas
xor
fmull
clc
push
add
dec
pop
sub
mov
aas
enter
push
add
mov
adc
sbbl
add
enter
mov
add
mov
ss
push
comiss
addb
cwtl
pop
lcall
push
xor
aas
mov
cmp
jp
fdivrl
rolb
mov
xor
enter
xchg
jle
std
inc
out
lcall
add
mov
cli
dec
jg
pushf
pop
mov
jnp
add
mov
mov
clc
jae
movsl
js
mov
push
and
ret
push
add
push
ret
ljmp
mov
dec
sbb
push
xchg
movl
mov
cli
loop
mov
ja
pop
fsubrs
lahf
dec
scas
adc
mov
dec
pop
loope
push
sbb
jmp
in
mov
xchg
aaa
mov
add
push
add
xchg
add
add
mov
mov
add
adc
mov
mov
and
into
or
dec
push
cld
ss
jge
aaa
fxch
bound
mov
sub
jmp
rorl
add
mov
push
popf
sub
add
add
add
push
add
jmp
mov
cli
xchg
loop
mov
mov
or
sbb
add
inc
add
repz
sbb
add
sub
add
int
jmp
add
xlat
shr
mov
lret
lahf
pop
insb
adc
mov
aaa
pop
inc
or
pop
sbb
xor
adc
add
xlat
push
pop
push
mov
test
leave
jge
sbb
lea
add
mov
xor
sub
xchg
divl
add
push
xchg
jmp
loop
mov
inc
xchg
or
mov
sbb
div
out
adc
push
loope
and
mov
mov
subl
enter
dec
int3
and
inc
aad
mov
mov
lock
pop
jecxz
clc
adc
mov
mov
mov
sbb
add
add
iret
ret
xor
and
and
in
add
aad
bound
mov
mov
inc
fcmovnb
movsb
dec
push
xchg
ror
add
add
call
outsb
sub
add
push
xchg
cmp
add
add
shrl
mov
dec
sahf
loop
mov
add
mov
inc
dec
push
mov
stc
fmuls
mov
pushf
fistpll
push
enter
loopnew
mov
xor
addr16
sahf
bound
mov
out
mov
scas
iret
mov
mov
mov
lret
aas
les
lea
cmpsl
leave
jne
iret
and
add
add
mov
or
cld
dec
sbb
xorl
das
xchg
add
mov
ret
mov
rolb
mov
cwtl
cli
fists
imul
std
sbb
je
sbb
add
fnstenv
mov
aam
insl
xchg
sbb
fwait
push
add
xlat
out
in
mov
call
dec
test
or
add
adc
mov
add
add
xor
mov
and
insb
or
sbb
inc
cmp
adc
lret
add
add
add
add
sub
mov
add
test
popf
subl
pop
lods
lret
sbb
or
cwtl
adc
movsb
dec
loope
hlt
int3
jns
in
mov
fwait
xchg
mov
negb
dec
lidtl
fs
add
aad
xlat
lahf
xor
inc
add
mov
add
add
adc
mov
jne
or
jmp
sbb
negb
js
sub
sub
pop
popf
and
js
cmp
jns
jbe
mov
dec
mov
and
mov
add
add
mov
cmc
inc
in
sbb
sbb
pop
sub
and
lahf
cmp
mov
xor
add
xchg
cli
aaa
mov
dec
lods
lea
outsb
or
push
add
push
out
nop
add
jo
mov
xorl
mov
es
xchg
je
mov
cmpsl
sub
rorl
and
add
ljmp
and
dec
test
jecxz
nop
add
cmp
dec
sub
mov
pop
lods
sbb
test
xor
mov
add
adc
mov
cmc
dec
xor
cmp
sbb
insl
or
jecxz
ja
pushf
cmp
mov
cmp
lea
syscall
imull
mov
jl
add
in
jg
int3
hlt
jecxz
cmc
fsubrp
outsl
inc
add
add
addb
dec
mov
add
adc
mov
rolb
xchg
mov
mov
cmp
jge
es
addr16
mov
xor
add
xchg
mov
mov
adc
push
add
xor
mov
add
gs
add
frstor
add
mov
xor
rorl
into
dec
xlat
fwait
xchg
in
iret
cmp
sbb
mov
xchg
enter
mov
add
xor
ljmp
cli
aaa
in
xchg
add
and
mov
xlat
cld
test
adc
in
pop
addb
outsb
sbb
mov
mov
adc
addb
div
xchg
loop
mov
cwtl
xlat
aaa
and
lods
imul
fsubrl
fcmovbe
push
popa
mov
stc
aas
push
add
sub
add
add
test
addb
sbb
cmp
adc
inc
push
and
xor
add
nop
add
les
mov
xchg
jnp
push
je
cmp
add
mov
mov
movsb
mov
push
scas
daa
jl
add
xor
and
mov
mov
mov
mov
ret
rorl
jge
pop
jno
and
push
cld
call
mov
add
add
pop
xchg
sub
add
adc
scas
pop
cmpsb
mov
add
in
movsl
in
add
in
dec
cmovnp
add
je
add
add
add
fwait
lock
out
sbb
cltd
sbb
add
xchg
add
add
lods
call
mov
pushf
mov
sbb
push
pop
xor
add
dec
and
loope
add
outsl
pop
cmp
int3
sub
out
mov
jae
ja
sbb
leave
dec
aas
sub
lcall
pushf
add
test
mov
mov
mov
insb
int3
or
cmp
repz
push
inc
imul
add
xor
mov
add
addb
data16
dec
call
mov
mov
pop
add
add
xor
addb
mov
negb
pop
push
add
add
push
cmp
scas
dec
aam
pop
fimuls
sahf
cmp
inc
add
and
mov
cmp
xchg
xchg
add
ret
scas
push
insl
sub
ret
insb
lret
mov
aas
imul
xor
mov
or
push
add
faddl
inc
pop
icebp
test
add
add
or
mov
mov
mov
mov
addb
leave
or
pop
leave
sub
add
or
into
call
dec
mov
mov
xorl
lcall
rolb
mov
in
add
popf
sbb
icebp
add
or
mov
xchg
pop
stos
sbb
pusha
add
inc
add
test
mov
add
rolb
lock
add
aaa
sbb
fnstsw
mov
aam
or
lcall
jg
and
mov
mov
movsb
pop
addb
cmp
adc
ss
sbb
and
shrl
jnp
ret
or
pop
insb
scas
xor
arpl
add
cmp
push
add
stc
jbe
add
mov
or
aam
ss
xchg
pop
imul
mov
add
inc
in
mov
xchg
mov
lret
adc
es
mov
add
push
add
mov
and
neg
cmp
add
js
faddl
add
fucomp
movb
mov
xor
add
mov
sbb
add
fsubrl
inc
outsl
mov
cltd
push
add
test
mov
shll
push
and
mov
ds
addb
sbb
add
push
shll
cmpsl
fcmovb
add
mov
ret
jge
mov
or
test
add
xor
add
mov
add
mov
cmpsb
lret
ljmp
std
aas
sbb
sub
add
imul
push
add
cmp
mov
lret
jp
sbb
jno
push
fucomi
add
addb
das
cmp
mov
lock
add
add
mov
add
in
cld
and
mov
sbb
xchg
jnp
in
jns
pop
sub
loope
rcll
cltd
and
loopne
mov
jne
and
mov
mov
add
aaa
in
adc
mov
sub
mov
adc
mov
dec
lahf
popf
mov
mov
nop
add
add
mov
icebp
addb
xchg
sub
lock
inc
out
shl
bound
mov
pop
push
test
cmp
add
or
test
or
mov
or
mov
jb
mov
imul
addr16
inc
rolb
mov
rolb
mov
add
mov
and
xor
add
push
add
xor
push
jo
mov
pusha
add
add
mov
shrl
add
push
negb
mov
cs
in
pop
fwait
xchg
mov
out
add
mov
addb
clc
mov
xor
addr16
stos
or
call
or
dec
push
mov
mov
mov
and
add
sub
loop
mov
add
add
mov
add
sub
outsb
js
mov
sub
jg
call
cltd
mov
dec
fs
test
mov
mov
inc
inc
jno
add
aas
test
add
addr16
push
out
add
jle,pt
xor
rolb
mov
mov
repnz
rcrl
lods
fisttpl
pop
sbb
fisubrl
outsb
lcall
cmpsb
xor
lcall
add
aaa
pop
or
inc
addb
xor
add
std
cmpsb
in
push
jne
push
iret
nop
add
mov
stos
in
out
icebp
rorl
jg
bound
mov
push
add
out
adc
mov
push
jge
cmp
pop
push
out
sbb
and
das
dec
hlt
add
nop
add
mov
and
pop
xor
mov
insl
cmp
add
pop
add
adc
mov
dec
sub
std
pop
push
add
push
fistps
inc
cmc
jns
movsb
fidivl
cmp
xchg
mov
or
mov
sub
inc
mov
sbb
and
mov
cwtl
outsb
addb
loope
add
mov
pop
xor
inc
mov
add
sbb
outsl
outsl
xchg
mov
sub
je
dec
xlat
pusha
add
jecxz
sahf
sbb
into
or
add
test
xchg
das
movsb
test
popf
push
sub
add
sbb
movsl
fistps
xchg
lea
movsl
xor
adc
ja
add
dec
sahf
cmc
movsl
movsl
stos
scas
es
icebp
imul
sub
mov
xor
aam
adc
sub
mov
mov
mov
inc
xchg
loopne
mov
jmp
add
sub
xor
add
outsb
ss
add
cltd
mov
add
ret
arpl
adc
pusha
add
jb
mov
adc
pop
add
pop
cltd
sub
mov
and
xor
cwtl
in
enter
or
pop
jge
push
add
sbb
cmp
in
inc
push
cmp
repz
int
in
xor
add
mov
dec
xor
rolb
mov
adc
mov
jns
xor
or
inc
in
js,pn
pusha
add
je
fildll
mov
rolb
mov
cmp
add
movsb
jg
insb
aaa
inc
and
mov
dec
ds
mov
jge
add
adc
mov
es
mov
in
add
push
adc
mov
addb
fisubrl
mov
xchg
or
add
mov
in
mov
or
pop
popf
outsb
pop
out
ljmp
add
pop
add
fnsave
and
mov
add
mov
mov
add
or
push
shrl
cmp
pop
pop
mov
loope
dec
xorl
xchg
xchg
mov
test
test
mov
cmpsb
orl
lds
add
add
add
scas
cs
mov
add
addb
mov
aas
icebp
dec
cld
aas
push
cmc
fcoms
daa
and
and
aas
pop
adc
lea
mov
xorl
mov
les
jbe
add
rolb
mov
add
jmp
and
mov
or
cmc
push
or
push
mov
jae
es
pushf
mov
and
nop
add
mov
roll
mov
shll
out
push
add
rolb
or
inc
mov
or
gs
loopne
mov
imul
mov
mov
lahf
push
push
jae
pop
push
in
add
add
enter
js
rolb
movsb
enter
daa
sbb
cmp
test
xor
mov
mov
addb
xor
jno
clc
cmp
add
mov
mov
xchg
or
or
in
movsb
mov
mov
mov
out
mov
mov
rcrl
enter
mov
std
add
mul
xchg
cltd
dec
adc
cltd
lods
inc
addb
out
inc
push
add
xchg
push
icebp
pop
push
mov
xchg
xchg
add
mov
add
mov
mov
jo
mov
mov
dec
aam
add
cmp
mov
inc
pop
cld
sbb
mov
mov
mov
pop
pop
rolb
cmp
or
xlat
adc
mov
repnz
and
mov
jbe
add
add
mov
rolb
mov
add
mov
mov
mov
stos
loope
testb
movsb
cli
adc
and
inc
add
addr16
add
push
outsb
push
jbe
lods
test
push
icebp
out
fsubl
and
mov
and
add
jnp
loope
call
adc
mov
jp
mov
std
fs
lret
add
jge
add
mov
mov
mov
dec
add
rolb
mov
push
cmpsb
rol
add
push
scas
pusha
add
add
push
xchg
addb
gs
ljmp
test
call
fnsetpm(287
ret
pop
jae
pop
mov
add
in
jns
ja
xrelease
mov
cli
stc
in
add
enter
cmpsb
xor
filds
mov
sub
adc
mov
jl
arpl
loope
bound
mov
out
outsb
andl
lock
mov
mov
or
mov
jbe
pushf
cmpsl
mov
push
add
mov
pop
das
les
sti
ljmp
lcall
add
imul
dec
push
mov
mov
mov
add
mov
add
scas
push
repz
mov
mov
push
add
stos
dec
add
mov
sbb
arpl
in
cmp
daa
mov
inc
add
add
loopne
mov
mov
mov
dec
stc
test
fnstsw
and
jo
mov
sub
jmp
push
ds
add
repnz
enter
push
lds
sbb
add
add
pusha
add
mov
adc
dec
cs
rolb
mov
aas
cmp
sub
cmp
dec
mov
fadds
add
inc
lock
aad
sbb
pop
sbb
mov
push
add
mov
scas
mov
add
mov
pop
cmp
mov
xor
push
pop
pop
fnsave
sub
aad
sti
divl
mov
xchg
add
sbb
stos
mov
gs
enter
push
fisttps
addb
xchg
out
lea
jne
jle
mov
loop
mov
outsl
cmp
adc
pop
mov
add
add
mov
inc
push
jp
ret
or
hlt
fdivrs
add
add
in
mov
mov
mov
mov
mov
inc
scas
jp
add
jp
and
add
into
push
sbb
aas
and
mov
lret
jmp
add
jne
out
mov
mov
jns
in
cmp
inc
cld
jb
mov
lret
cmp
mov
xchg
std
inc
xchg
add
dec
and
or
cmp
mov
cli
push
or
in
sub
mov
xchg
ljmp
fistps
mov
mov
add
movsb
btc
or
cmpsl
or
ja
add
xor
ret
shll
imul
aas
push
add
cli
jp
lock
add
mov
out
jl
addr16
rolb
mov
and
test
pop
mov
popf
jle
adc
mov
add
rolb
mov
cmp
aam
mov
jecxz
sub
adc
inc
lcall
mov
mov
or
iret
pusha
add
int
pop
push
jecxz
push
cmp
add
rolb
mov
inc
mov
orl
out
js
mov
xor
add
push
inc
add
add
mov
cs
mov
hlt
ljmp
mov
cmp
add
or
mov
rolb
mov
mov
push
add
pushf
or
mov
adc
mov
add
or
ljmp
fs
stos
stos
leave
dec
pop
fndisi(8087
cmp
iret
cltd
and
mov
add
mov
nop
add
add
not
call
add
mov
push
push
out
jp
stos
sub
adc
mov
dec
repnz
and
test
add
mov
ret
scas
bound
mov
push
fcomip
add
js
js
das
fisubrl
push
xor
mov
out
stc
push
orl
xor
mov
add
lcall
test
mov
mov
and
repz
and
shll
push
rolb
pop
out
xbegin
add
add
push
cltd
dec
movsb
sbb
out
arpl
pop
pop
pop
mov
add
jne
add
mov
and
add
out
scas
clc
sbb
mov
push
add
outsb
icebp
stos
xchg
dec
cmp
xor
dec
mov
out
add
lods
xchg
sub
xchg
add
mov
gs
mov
lods
movb
lahf
jle
in
and
add
jae
jle
bound
mov
incb
jge
push
add
push
aas
jbe
cmpsb
push
scas
mov
movsb
in
mov
adc
mov
sarl
in
sub
push
add
cli
jge
push
repnz
rolb
mov
jae
add
jmp
fildll
add
push
add
mov
mov
movsl
mov
push
jne
mov
jp
js
sbb
sahf
xor
mov
jbe
add
imul
or
shrl
test
xor
jne
or
fldcw
clc
movsl
je
icebp
movl
mov
int3
nop
add
idivb
xchg
insb
adc
js
add
shr
cmp
mov
sahf
xor
movsl
push
js
add
push
out
xchg
out
xor
outsl
fcomi
xor
push
cmp
nop
add
mov
xor
mov
inc
and
ljmp
sub
add
add
add
add
xchg
cmpsl
inc
jg
dec
mov
mov
insb
scas
push
in
add
mov
cmp
icebp
mov
fcompl
outsb
mov
add
stos
xchg
dec
test
inc
xchg
aad
shll
sub
pop
mov
sbb
add
aaa
or
mov
and
pop
shrl
loop
mov
push
add
jno
imul
add
fisubrs
cmpsl
jp
shll
add
cmp
adc
call
jnp
notl
jno
mov
add
mov
mov
add
lret
mov
mov
pop
or
loopne
mov
mov
popf
aas
bound
mov
sub
mov
mov
pop
loopne
mov
add
mov
add
xchg
inc
add
push
mov
push
inc
fdivrs
jnp
lahf
ja
scas
ret
les
pusha
add
dec
jle
add
les
ret
xchg
sbb
jmp
sbb
mov
add
in
mov
pop
lahf
scas
mov
cltd
mov
pusha
add
dec
test
mov
stc
repz
rolb
mov
xchg
mov
lods
mov
pop
jae
add
add
push
test
icebp
sbb
mov
inc
faddp
add
xchg
imul
mov
pusha
add
add
mov
xor
sbb
or
sbb
xor
mov
adc
addb
xchg
in
imul
jns
lea
push
fwait
cli
mov
stos
and
mov
imul
inc
movsl
arpl
aas
imul
add
imul
add
fwait
popf
xchg
scas
fxch
adc
int3
pop
cmp
sub
pmuludq
xlat
fimuls
fistpll
push
cmp
dec
jnp
fsubrl
add
dec
faddl
add
cld
test
shrl
push
cli
jle
xchg
mov
jns
add
add
add
enter
lcall
in
jg
add
mov
gs
icebp
in
xchg
add
adc
mov
dec
inc
add
sub
add
cmc
dec
shrl
push
add
mov
stos
pusha
add
pop
add
mov
mov
sbb
loopne
mov
stc
outsb
das
push
arpl
mov
aaa
pop
dec
js
dec
lahf
fdivrl
mov
push
inc
dec
repz
je
bound
mov
add
cmp
mov
lods
es
sbb
ljmp
js
mov
clc
mov
add
dec
add
mov
sahf
into
stos
jns
dec
scas
and
outsl
mov
add
or
stos
lods
inc
aad
jle
and
mov
movsb
rcll
cs
mov
es
and
mov
fidivrl
daa
sub
inc
add
cltd
fsubr
fstl
imul
inc
in
cs
sbb
sbb
addb
pushf
mov
dec
jb
mov
ljmp
cmpsl
jns
popa
mov
add
push
jp
jbe
sbb
push
and
cmc
sub
ret
rolb
mov
in
jge
hlt
mov
lea
add
add
rolb
mov
inc
mov
sub
lods
mov
jge
push
shll
add
push
inc
sbb
and
xchg
or
ja
out
cs
iret
xor
mov
and
mov
xchg
arpl
xor
int
add
inc
ss
adc
sbb
push
lret
test
cmpsl
clc
fidivs
inc
pop
jp
jo
mov
mov
pop
stc
mov
sub
stos
dec
pop
sti
imul
mov
mov
aad
jns
cltd
fmul
ret
fs
cmpsl
mov
lea
sbb
mov
sbb
mov
push
popa
inc
push
xorl
insl
xchg
add
mov
add
sbb
xor
cs
addb
cltd
negb
add
les
loopne
mov
mov
mov
mov
pop
push
add
jb
mov
das
test
lds
in
xorl
sbb
mov
add
mov
negb
out
sahf
xchg
add
femms
and
jp
fdivrs
adc
add
sub
inc
add
test
cmc
hlt
and
and
mov
and
mov
loope
inc
mov
jbe
addr16
mov
adc
dec
mov
mov
loopne
mov
jg
adc
shll
mov
xchg
movsl
and
xchg
add
and
loopne
mov
scas
mov
xchg
flds
idiv
in
dec
js
stos
cmc
lret
scas
dec
pop
in
std
pop
fdivs
mov
int
mov
xchg
push
inc
cmp
xchg
mov
jno
mov
cmp
add
add
dec
dec
sbb
mov
lret
negl
inc
add
cltd
mov
or
mov
add
adc
mov
shll
and
xor
inc
les
dec
ret
push
adc
or
and
add
mov
push
sbb
pushf
xchg
xor
push
jbe
inc
push
adc
push
stc
add
je
call
cld
repz
mov
inc
pop
sahf
mov
lods
dec
lea
cs
jle
movsl
addb
fdivrs
das
insl
je
add
lahf
hlt
push
popa
mov
add
mov
jp
add
push
sub
cltd
pop
cld
int3
add
sub
cltd
ds
jl
outsl
sbb
addb
inc
daa
mull
dec
pop
daa
arpl
lar
mov
je
mov
xlat
and
jb
mov
mov
jbe
xor
mov
mov
mov
pusha
add
jge
inc
and
mov
cmpsb
movsb
lahf
rolb
mov
int3
cwtl
outsl
cmp
stos
push
add
adc
aaa
jnp
jns
ljmp
rorl
std
push
scas
nop
add
add
jne
adc
pushf
orl
jecxz
jge
rolb
mov
jmp
and
lods
push
adc
icebp
cmpsb
leave
rcll
movsb
mov
adc
mov
inc
add
add
jecxz
dec
mov
add
pop
mov
mov
mov
add
mov
jo
mov
mov
push
push
int3
rolb
mov
mov
jmp
ljmp
and
mov
cld
xlat
pop
cmp
cmp
push
sbb
scas
addr16
mov
adc
mov
rorl
add
mov
add
add
in
cmp
insb
ficoms
xchg
jge
stc
jns
fdivrl
add
mov
test
mov
test
pop
pop
mov
add
mov
jne
add
inc
add
add
add
jecxz
hlt
add
add
xchg
fcoms
mov
push
mov
mov
and
and
add
and
mov
xor
mov
mov
rorl
mov
mov
xchg
cmp
mov
add
mov
adc
add
in
sub
std
lcall
add
outsb
adc
push
add
addb
pop
and
pop
adc
iret
or
enter
jno
add
cmp
shrl
xor
push
dec
pusha
add
add
cmp
sbb
test
dec
rolb
mov
sub
mov
je
cmpsb
sub
je
repnz
add
mov
dec
jnp
mov
xor
mov
loope
addb
jae
movsb
cli
xchg
pusha
add
jnp
aaa
rolb
mov
cmp
add
loopne
mov
sahf
xor
aaa
mov
pop
lods
mov
ds
dec
jl
cmp
add
add
dec
aaa
xor
dec
jg
push
cmp
pop
scas
adc
jns
roll
mov
lods
push
adc
div
add
jns
xor
or
mov
add
adc
outsb
inc
inc
nop
add
add
cli
mov
add
mov
xor
add
add
xor
mov
sbb
add
sbb
fbld
in
add
out
pop
jp
sbb
aam
jno
aaa
aas
dec
lods
int
mov
inc
add
dec
adc
mov
add
or
sti
push
add
das
jge
add
inc
and
mov
test
mov
cmpsb
rcrl
movsb
popf
daa
adc
mov
inc
push
ljmp
rolb
mov
sbb
stc
outsb
popa
mov
mov
sub
jg
jmp
add
inc
mov
rolb
ret
push
mov
jno
iret
cmp
out
dec
jl
stc
inc
add
mov
sbb
loope,pn
int3
mov
hlt
dec
mov
add
xchg
sub
xchg
ret
movsl
scas
test
fmuls
mov
add
mov
sbb
adc
dec
cmpsl
scas
sub
lahf
addr16
add
add
add
inc
push
push
aaa
add
bound
mov
xchg
outsl
cmp
add
sub
repz
mov
mov
mov
sbb
ljmp
add
out
lahf
test
in
ret
popf
inc
add
add
add
fildll
insb
das
aad
add
or
or
mov
lret
insb
push
rcll
mov
mov
push
cs
add
xor
mov
add
sbb
pop
mov
mov
out
mov
jno
sbb
adc
into
or
mov
or
jnp
push
idivl
scas
jns
sub
call
mov
mov
and
roll
add
mov
pop
fldl
lret
add
mov
or
fwait
les
jl
arpl
xchg
mov
les
cli
mov
or
mov
dec
add
mov
divb
sahf
ljmp
jns
mov
add
mov
mov
rolb
mov
add
mov
mov
stos
lahf
movsb
sub
mov
out
add
mov
jge
lahf
mov
adc
mov
mov
adc
aaa
and
aad
jbe
cs
in
push
aaa
and
mov
call
add
or
stos
xchg
push
jns
popa
add
add
pop
les
fwait
pop
mov
loope
jge
add
out
add
mov
rolb
mov
lcall
sbb
sub
mov
adc
dec
iret
fdiv
fwait
xchg
add
mov
arpl
xchg
xchg
xlat
jecxz
add
lahf
test
dec
std
jns
repnz
lods
cwtl
dec
push
add
stos
or
cmpsb
loop
mov
movsl
mov
cmp
add
lea
cwtl
shll
or
push
add
mov
add
mov
xchg
dec
in
cltd
push
pop
pop
int
stc
rolb
mov
iret
call
out
rolb
mov
mov
xor
cmpsb
adc
mov
add
mov
dec
xor
mov
fbstp
mov
fs
inc
or
test
inc
sti
clc
sub
loopne
mov
or
dec
hlt
lret
mov
add
popf
or
push
fcomps
aad
add
cmp
push
fildl
push
push
scas
cmp
pop
pop
cmp
add
arpl
adc
add
out
xor
rcrl
mov
mov
jb
mov
nop
add
add
pop
cmc
sbb
add
sub
xchg
cwtl
add
scas
into
aaa
mov
mov
add
mov
das
xor
jmp
mov
idivb
rolb
mov
push
push
sub
js
xor
insb
inc
jecxz
push
add
test
mov
out
add
add
add
jae
jb
mov
rolb
cwtl
call
add
addb
sbb
add
adc
mov
lahf
in
sti
and
lods
mov
mov
sub
mov
adc
into
movsl
pushf
jnp
add
mov
ljmp
movsl
ljmp
add
sub
add
jg
add
fwait
xchg
add
add
in
xchg
mov
or
outsl
dec
mov
outsl
in
cwtl
js
jge
lds
mov
push
jle
mov
je
mov
out
test
push
mov
jno
add
mov
sub
arpl
add
cmpsl
fistpll
xor
mov
in
fdivrs
enter
cli
and
adc
mov
cltd
rolb
mov
push
inc
sti
addb
mov
mov
fdivl
mov
add
cmp
xchg
add
sub
icebp
pop
adc
stos
cmp
lock
loope
push
hlt
xchg
sqrtps
test
hlt
xor
mov
push
test
cmp
adc
mov
adc
leave
frstor
mov
or
mov
add
cmpsb
call
mov
cmc
pop
sbb
xor
mov
cmp
mov
add
dec
je
push
repnz
adc
std
call
dec
cmp
add
adc
ja
and
mov
xlat
mov
dec
dec
jbe
test
popa
ljmp
lock
mov
add
cmc
jmp
movsb
mov
dec
pop
sbbl
movsl
jb
mov
or
aad
mov
adc
mov
xchg
sti
push
fisttpl
mov
and
mov
and
lret
cli
jne
enter
cmp
mov
xor
add
mov
push
lret
dec
icebp
call
mov
scas
sti
xchg
mov
mov
aaa
sub
mov
stc
insb
cmp
mov
inc
jmp
adc
testb
rolb
jge
stos
int
push
std
xor
add
jbe
jb
mov
out
arpl
subl
add
xchg
add
add
add
push
dec
mov
push
movsl
adc
data16
mov
push
loopne
mov
das
out
push
push
add
cli
jmp
mov
cmpsl
ljmp
loope
pushf
jnp
or
js
xor
mov
movsl
in
shl
or
push
std
jl
add
es
jne
sbb
and
add
lret
ss
jl
loopne
mov
fidivrl
test
lea
mov
fwait
inc
data16
scas
sti
in
in
cmpsl
mov
mov
mov
inc
adc
mov
add
add
stos
or
xor
pop
sbb
repnz
or
mov
imul
repnz
cmpsl
sbb
bound
mov
sbb
mov
popl
inc
dec
xchg
mov
add
push
add
fwait
das
imul
adc
mov
test
test
adc
mov
push
add
inc
cmpsb
xchg
cwtl
xor
lea
roll
out
push
cmc
mov
add
add
add
cmpsb
test
add
sub
addb
jp
adc
addb
jmp
add
scas
and
mov
and
mov
cmp
test
sub
xchg
pop
sbb
aas
jecxz
loope
cmp
rolb
mov
mov
push
adc
adcl
mov
mov
mov
dec
or
dec
adc
mov
xchg
jp
sbb
jnp
mov
and
mov
jge
xlat
ret
addb
out
dec
aaa
sub
jbe
movb
push
dec
jo
mov
mov
scas
and
jmp
add
sub
fistpll
add
push
addl
mov
sbb
mov
cmpsb
test
in
jl
jae
in
fwait
ljmp
add
cs
stc
mov
mov
mov
and
push
movsl
cmp
pushl
dec
imul
mov
adc
mov
leave
cmp
jecxz
movsb
fstl
and
mov
add
mov
mov
loopne
mov
add
mov
adc
call
push
loope
fisttps
cmp
add
leave
rolb
insl
fdiv
cmp
sub
jp
dec
in
in
aaa
xchg
add
add
add
lret
adc
das
repz
sub
loop
mov
add
push
arpl
daa
xor
fnstsw
mov
push
add
int3
cltd
dec
inc
push
mov
fs
cs
xchg
les
insl
rolb
mov
lds
addl
sti
mov
daa
adc
add
mov
xchg
dec
in
add
bound
mov
jge
imul
xchg
dec
inc
add
jmp
lods
adc
mov
mov
inc
push
add
pop
push
add
add
fidivrl
jnp
gs
or
add
popf
mov
xchg
xchg
mov
mov
fisubs
add
addr16
mov
sub
pushf
mov
push
fcoml
jb
mov
mov
inc
jmp
mov
mov
adc
outsl
or
add
test
pusha
add
divb
jns
or
sub
pop
out
cmpsb
int3
pop
out
pushf
mov
mov
movsb
loop
mov
shr
dec
push
add
pop
mov
jb
mov
aaa
arpl
add
stos
mov
mov
mov
testb
jmp
mov
dec
pop
sub
mov
dec
jnp
add
fisttpll
cltd
pop
addb
xor
xchg
xchg
jno
cmp
and
pop
cmp
add
lret
lods
cmc
pop
mov
jno
cli
jge
test
mov
fs
cmpsb
jp
cmc
rcll
mov
xchg
insb
cltd
mov
ja
dec
inc
aad
insb
mov
mov
mov
movsb
mov
mov
add
in
push
jae
jle
xchg
push
add
mov
mov
loopne
mov
movsl
addr16
insl
incl
mov
mov
cmp
xor
jmp
aaa
mov
ljmp
jnp
notb
insl
sub
fsub
and
xor
mov
adc
in
fldt
loope
int
xchg
fistpl
inc
imul
jmp
mov
add
mov
fyl2xp1
jnp
out
js
dec
jns
mov
xchg
test
call
and
mov
decl
test
mov
arpl
aad
cmp
adcl
stos
aam
xor
stos
daa
repnz
jge
mov
aad
sub
insb
and
pop
cs
imul
cmp
bound
mov
loope
or
xchg
nop
add
lcall
mov
scas
iret
pushf
cli
inc
ja
push
jne
rolb
jno
mov
adc
mov
shrl
movsl
xor
fdivs
add
add
dec
xchg
add
cmp
push
mov
fstp
add
pop
ret
push
lock
xor
push
jg
mov
in
leave
test
mov
cmpsb
sbb
xchg
xchg
push
test
jae
inc
into
cmpl
add
mov
cmpsb
cmp
sbb
lds
jbe
xchg
scas
cltd
lea
pop
jl
cmp
inc
inc
ss
roll
mov
test
sub
fbstp
aaa
pop
push
add
jb
mov
mov
cmp
les
add
in
mov
add
cmp
add
lret
dec
loope
outsb
pop
loope
pop
jns
sahf
addb
inc
add
inc
add
pop
mov
push
mov
icebp
repz
jbe
mov
mov
mov
addl
push
lods
dec
orl
dec
xor
loope
stos
scas
xchg
repz
mov
inc
fnsave
mov
jo
mov
pop
cmp
nop
add
mov
mov
sbb
pop
cmpsb
xor
out
dec
sar
and
lea
ret
enter
cmp
lods
int3
sub
into
into
adc
psubsw
add
into
mov
fmull
pop
add
mov
aaa
and
mov
jo
mov
xchg
cmp
mov
sbb
in
call
int3
add
mov
xor
mov
cmc
add
or
push
inc
nop
add
push
clc
test
imul
add
add
mov
add
push
dec
sub
mov
mov
addb
push
outsl
addb
sbb
leave
stos
pop
popa
mov
push
add
pop
or
mov
and
mov
push
push
mov
mov
mov
les
add
fdivrs
les
jle
add
add
lock
jecxz
push
add
inc
add
js
xor
xor
popa
fldl
je
dec
sub
scas
xchg
lods
cld
mov
lods
popf
jbe
add
imul
sub
and
mov
adc
loopne
mov
fistpl
mov
ljmp
and
mov
xchg
out
cwtl
addl
or
add
add
xchg
add
jo
mov
or
xchg
out
adc
pushf
push
add
add
add
fwait
xor
cmpsb
push
insb
sbb
jbe
add
cmc
mov
add
add
inc
inc
add
ds
xor
mov
and
imul
cmp
shll
repz
adc
mov
insb
xchg
mov
mov
addb
test
mov
push
icebp
mov
ret
loopne
mov
dec
jge
or
jne
lods
push
add
mov
lcall
add
push
sbb
insl
repnz
stos
ljmp
add
inc
add
popf
dec
idivl
mov
pushf
pop
sbb
mov
dec
lea
mov
test
xor
dec
aaa
jno
popf
cmp
mov
scas
rolb
lods
jge
out
adcl
fadd
int3
inc
ret
mov
push
jno
call
mov
fcompl
mov
es
add
mov
hlt
leave
scas
cmpsb
movsb
xor
sbbl
add
mov
add
xchg
mov
xchg
add
cmp
addb
aas
repz
add
jp
ss
aam
add
or
sub
lock
shrd
lock
mov
sub
mov
add
cmp
bound
mov
jo
mov
pop
inc
in
fucomp
xchg
imul
jmp
scas
cmp
add
xchg
imul
add
xor
mov
bound
mov
adc
add
roll
dec
and
mov
mov
or
outsb
xor
mov
pop
iret
mov
mov
test
les
sbb
xor
mov
mov
mov
add
mov
stos
xlat
fildl
xor
add
mov
xor
fdiv
add
inc
push
jae
sbb
push
in
inc
addb
mov
mov
in
push
add
add
inc
enter
mov
out
ret
and
sub
or
lock
mov
jl
sbb
jl
dec
cli
subl
leave
stos
icebp
test
and
es
inc
sbb
int
xchg
add
jns
aad
xchg
xchg
addl
pop
push
add
pusha
add
add
xor
add
iret
aam
sub
mov
mov
push
fdivs
imul
add
movsb
sti
pop
stos
xchg
test
add
mov
pop
in
and
mov
ss
mov
lock
jae
rolb
mov
add
mov
pop
std
loope
add
iret
xchg
call
orl
faddp
cs
mov
ret
push
mov
loopne
mov
int
rolb
mov
lret
mov
mov
das
add
jge
add
imul
mov
popa
jo
mov
insb
incb
add
add
fisttpl
add
sbb
hlt
or
andl
mov
add
xor
mov
jle
dec
jb
mov
push
add
and
mov
and
mov
leave
movswl
mov
add
mov
out
add
loopne
mov
fldln2
push
and
in
dec
addb
pop
sbb
cwtl
dec
in
pop
and
mov
mov
out
jecxz
xchg
addb
xchg
dec
shr
rolb
mov
pushf
mov
add
mov
add
add
ret
and
mov
popf
hlt
ds
xchg
add
loop
mov
pop
sub
add
mov
pop
es
mov
inc
xchg
lcall
xchg
cmpsb
ljmp
mov
xor
mov
in
fdivrl
add
insb
pop
sub
push
gs
pop
pop
pop
push
jecxz
call
dec
fisubl
add
add
cmp
push
and
mov
mov
lret
cmp
jb
mov
out
mov
mov
pop
lea
jmp
jnp
out
add
mov
data16
sub
fiadds
mov
test
gs
out
and
lret
xchg
out
cmc
jbe
pop
sub
xchg
mov
stos
dec
xchg
sub
dec
push
rolb
mov
imul
add
mov
pop
and
mov
add
fisubs
mov
mov
mov
mov
mov
ret
repz
sub
mov
hlt
xchg
cwtl
mov
push
push
loope
sbb
lods
test
test
add
pop
mov
cmp
sbb
mov
popl
mov
sub
pushf
mov
lods
out
frstor
sbb
xor
mov
mov
add
mov
push
xchg
scas
or
add
jp
add
rolb
xchg
add
mov
push
xlat
mov
jp
push
xor
mov
pop
pop
jae
outsb
and
sbb
push
test
imul
pop
push
add
stos
call
add
test
fisttpl
fisttps
pop
in
or
cmp
xchg
add
adc
sub
pop
dec
jns
insb
dec
mov
sti
les
push
enter
les
clc
loope
aad
mov
call
and
mov
repnz
incb
add
aaa
pop
test
mov
mov
pop
jge
aas
and
test
pop
fimull
add
loopne
mov
mov
mov
in
fxch
hlt
dec
push
fsts
enter
inc
add
add
mov
add
jno
push
repz
out
jl
test
mov
mov
cmc
sbb
popa
into
idivl
psrad
mov
add
scas
inc
or
xor
mov
outsb
cli
das
dec
insb
and
jnp
in
xchg
pop
jmp
mov
xor
sbb
push
cmpsb
popf
push
fisttpll
jae
jmpw
mov
addb
adc
mov
cmp
pusha
add
ret
pop
cmpsb
xchg
add
mov
push
dec
dec
leave
stos
and
mov
lock
jnp
mov
xchg
jg
cld
pop
out
cltd
jb
mov
mov
cwtl
enter
jg
mov
mov
add
or
mov
addb
inc
add
or
lcall
mov
dec
outsb
fsub
mov
sbb
xchg
addr16
sbb
add
and
jecxz
insl
scas
dec
out
faddl
add
mov
mov
insl
into
add
add
out
decl
lods
jmp
int
scas
pop
popaw
stc
push
jae
add
add
aaa
stos
fs
into
push
scas
negl
add
mov
jno
add
sbb
add
mov
xor
mov
data16
lock
add
enter
sahf
mov
mov
mov
lret
mov
push
push
cmpsl
adc
fstpl
sub
sahf
cs
fpatan
in
xchg
shll
sub
add
aas
psubw
add
lret
inc
fdivrl
cmp
mov
adc
mov
ljmp
out
out
jle
mov
add
test
jmp
jge
xor
mov
sub
jp
pop
lds
into
add
mov
iret
icebp
inc
adc
mov
into
inc
or
mov
mov
pop
mov
add
adc
mov
push
or
jle
movsl
xchg
push
add
xlat
testb
push
mov
mov
addb
push
jae
lods
xor
jae
sub
mov
outsl
adc
fmull
js
xchg
into
sahf
mov
jne
or
or
cmp
aaa
int3
xchg
out
popa
aaa
xor
mov
add
xchg
dec
inc
mov
pop
sarl
add
sub
adc
and
inc
in
fistps
mov
movsl
add
mov
out
adc
jbe
add
add
rolb
sbb
incl
out
or
mov
inc
cmp
mov
mov
push
xor
jecxz
or
pop
gs
insl
mov
push
inc
repz
outsl
fwait
xor
jae
add
divb
popf
and
mov
mov
xchg
jno
and
mov
mov
xor
mov
or
push
out
or
jne
out
mov
scas
add
pop
xchg
or
icebp
mov
js
enter
rcll
pop
dec
js
je
pop
or
inc
add
mov
xor
mov
mov
fisttps
int
hlt
xchg
test
add
mov
icebp
xor
mov
test
cmp
pop
push
pop
mov
in
jl
add
mov
push
int3
pop
jmp
add
and
xor
add
mov
fldt
je
add
xlat
push
jo
mov
mov
add
cs
aas
iret
inc
add
add
xchg
pop
cli
xchg
xchg
add
add
mov
test
mov
movsb
cmp
xchg
cmpsl
dec
stos
pusha
add
lret
pop
sbb
pop
fisttpl
daa
jp
in
add
push
add
pop
rcrl
lret
mov
mov
iret
insb
dec
lods
in
mov
mov
push
test
test
movsb
jno
jp
mov
pop
push
jno
and
mov
out
mov
test
test
adc
mov
iret
mov
sub
ja
and
xor
xchg
and
imull
mov
add
xchg
adc
mov
cmc
xchg
xor
movsb
or
clc
xchg
push
in
xlat
aam
adc
sahf
mov
push
ja
out
incl
addb
out
shll
adc
add
and
push
insl
xchg
dec
popa
test
ret
adc
mov
mov
pusha
add
mov
add
xor
mov
push
fcmove
sub
fimull
hlt
adc
rolb
mov
add
push
fwait
add
mov
flds
xor
push
dec
and
mov
lea
jno
jno
insl
or
mov
daa
and
addb
stos
mov
iret
jb
mov
in
movsl
and
mov
add
mov
outsb
fiaddl
mov
mov
add
inc
jb
mov
addb
cld
packssdw
mov
mov
js
or
add
and
xchg
cmpsl
push
add
imul
mov
mov
enter
adc
jb
mov
stos
pop
push
push
add
sub
and
mov
xchg
in
and
aad
out
xchg
mov
sbb
cmp
dec
jbe
inc
addb
mov
lds
sbb
push
pop
jae
sbb
mov
mov
icebp
repnz
nop
add
add
fisttpll
xchg
push
sub
add
push
inc
aam
mov
movsl
mov
mov
push
mov
push
xor
pop
dec
movsb
push
cs
es
sub
sub
sti
ss
fisubs
addr16
stos
hlt
add
mov
repnz
add
mov
cmpsl
sub
mov
fsts
mov
fsubs
pop
xlat
imul
das
dec
bound
mov
pop
ja
lea
mov
lahf
fdivs
hlt
sbb
mov
jl
mov
lahf
xchg
jae
fidivl
bound
mov
adc
and
mov
and
cli
inc
divl
push
mov
ficomps
add
lcall
or
and
mov
hlt
mov
ja
fiaddl
mov
add
and
clc
inc
jbe
jo
mov
insl
or
stc
pop
inc
dec
inc
add
add
add
mov
fwait
ret
sub
dec
loop
mov
push
cmpsb
out
lcall
jge
adcl
jp
jge
add
mov
in
cmc
and
inc
add
xor
dec
rolb
mov
add
mov
cmp
scas
call
into
into
in
jnp
aam
into
xchg
popa
mov
cli
out
push
rcll
pop
or
add
push
std
fsts
add
add
mov
test
pop
cmp
sbb
dec
loop
mov
mov
pop
pop
clc
pop
adc
mov
aam
jo
mov
scas
ja
push
and
add
mov
pop
int
add
mov
mov
imul
in
jmp
add
mov
roll
xlat
imul
mov
xor
mov
jae
add
cmp
inc
add
lcall
loope
sbb
pop
dec
push
pusha
add
sbb
sti
enter
adc
add
push
lret
xor
sbb
mov
inc
lods
add
mov
jmp
js
dec
inc
addb
cmp
add
mov
mov
sbb
cmp
iret
xchg
pop
pop
mov
mov
ds
aam
cwtl
jmp
pop
mov
add
add
dec
pop
jo
mov
mov
movsl
xor
xchg
mov
or
sbb
mov
sbb
sub
push
xchg
inc
adc
mov
add
fstpl
shll
sahf
fs
out
insb
pop
pop
pop
push
push
xor
add
adc
and
mov
stc
sub
mov
add
xchg
xor
mov
mov
cli
jbe
add
fs
fildll
jge
stc
fmuls
das
xor
pop
push
imul
pushf
jl
add
ja
aad
outsb
jp
lds
fstl
add
adc
mov
or
lret
xchg
push
add
fcmovu
pop
and
xchg
rolb
clc
lret
fsubrl
jmp
mov
xchg
scas
int3
ret
rolb
mov
and
mov
add
adc
repz
cmp
cmp
push
stc
and
data16
lods
mov
lret
filds
sbb
add
xchg
data16
dec
loopne
mov
push
sub
jno
cmp
inc
push
aaa
fstps
push
add
test
lret
mov
in
mov
cmp
xchg
stc
mov
mov
gs
jge
enter
scas
xor
outsl
xchg
cmp
aam
test
add
mov
and
mov
sub
mov
cld
inc
add
inc
add
and
mov
repz
mov
xchg
add
js
iret
pop
icebp
dec
mov
mov
test
bound
mov
ss
arpl
mov
mov
xchg
add
mov
mov
jbe
imul
ret
sbb
add
add
and
sub
push
or
and
add
pop
cmp
sahf
cmp
cmpsb
test
popa
xor
outsl
fimull
jge
pusha
add
rolb
mov
mov
pop
mov
sbb
bound
mov
xchg
imul
aam
call
push
add
call
imul
or
add
jmp
xchg
jmp
or
hlt
std
insl
push
jle
mov
pmaddwd
out
fcmovu
icebp
int3
mov
push
jg
add
adc
mov
add
xchg
mov
loope
loop
mov
insl
mov
adc
xchg
cltd
mov
add
mov
sbb
loopne
mov
mov
add
mov
das
dec
dec
mov
popf
scas
fwait
inc
mov
test
or
xchg
fcmovnu
dec
add
mov
je
gs
mov
mov
sbb
add
mov
mov
rolb
shll
mov
mov
icebp
add
mov
out
pop
adc
fsts
adc
cmp
cwtl
push
pop
mov
mov
sbb
bound
mov
xor
add
add
dec
cli
pop
repnz
add
addr16
imul
add
mov
mov
loop
mov
lahf
inc
add
dec
pushf
in
cli
es
push
adc
mov
ja
add
sbb
aaa
push
add
sbb
add
pop
add
mov
xchg
mov
add
cmp
mov
add
mov
dec
inc
mov
cli
xor
inc
mov
cld
mov
mov
sub
add
dec
jns
sub
add
add
add
mov
add
rolb
mov
add
jge
rolb
mov
push
fidivrs
add
aaa
push
test
mov
or
stos
mov
iret
ja
in
test
imul
jnp
add
cmp
xchg
jmp
pavgw
jl
lret
inc
jge
mov
repz
add
mov
pusha
add
mov
cmp
add
rolb
std
lret
xchg
popf
xor
add
jb
mov
add
mov
xchg
add
mov
inc
cwtl
and
mov
add
pop
test
sbb
inc
add
addl
mov
add
in
push
mov
test
push
int3
lret
mov
mov
scas
lods
xor
mov
add
and
out
test
test
add
and
adc
mov
add
jne
sbb
and
mov
add
mov
dec
jmp
add
add
mov
movsl
adc
sub
mov
add
arpl
sub
mov
mov
loope,pn
stos
cli
push
data16
pusha
add
add
sti
out
xor
ja
add
mov
xor
mov
inc
add
and
pop
in
cli
pop
pop
testb
rolb
inc
mov
cmp
push
add
adc
mov
mov
aam
inc
add
adc
mov
push
jbe
xchg
add
mov
add
add
xchg
and
mov
add
jne
ss
jb
mov
jo
mov
push
add
sub
aad
pop
sub
cmpsl
outsb
test
rolb
mov
push
rolb
mov
stc
data16
mov
add
mov
cmc
movsl
ret
nop
add
or
add
push
shrl
lahf
adc
mov
dec
push
add
jecxz
add
xor
aaa
mov
jo
mov
loop
mov
pop
rolb
mov
add
mov
sbb
dec
test
jno
dec
jp
xor
in
sbb
scas
int3
and
mov
jmp
mov
lods
enter
push
in
push
mov
add
test
sbb
adc
adc
mov
add
and
test
lret
adc
mov
sahf
jge
scas
sub
jo
mov
ret
fs
mov
add
insb
lret
sub
mov
sbb
add
stos
data16
dec
mov
out
push
lret
and
imul
push
aam
out
in
mov
sarl
adc
mov
mov
mov
lahf
mov
fcoml
sub
movsl
jae
sbb
add
inc
push
sub
scas
loope
out
sbb
mov
jg
and
mov
add
add
popl
add
js
loop
mov
sbb
aas
lret
test
pushl
inc
mov
gs
mov
add
cs
scas
loope
aad
push
cs
rolb
loop
mov
mov
xchg
mov
adc
mov
add
mov
mov
jno
add
lea
mov
add
stos
aad
outsl
pushl
sbb
adc
imul
mov
push
rolb
mov
pushl
jae
mov
sbb
leave
std
js
fucomp
xchg
in
pop
in
mov
stc
jg
es
ret
cmc
add
mov
mov
sub
gs
xchg
or
out
jnp
jb
mov
add
dec
jecxz
enter
pop
rcll
outsl
jns
push
gs
mov
inc
repnz
jg
movsl
clc
out
cmp
or
leave
into
pop
mov
aad
adc
in
rolb
mov
mov
inc
sub
push
add
mov
mov
add
in
addb
dec
lock
or
cltd
or
and
mov
ss
add
add
lret
in
and
mov
sub
push
in
mov
xchg
jb
mov
hlt
jmp
push
mov
add
and
mov
xor
mov
add
xchg
add
rolb
mov
rolb
mov
adc
ret
dec
adc
mov
pop
loope
cltd
cwtl
sub
lods
rolb
cmp
mov
add
mov
add
xor
mov
insb
adc
mov
pop
add
mov
mov
insl
imul
mov
xchg
dec
and
ss
sarl
enter
pop
inc
add
sahf
jmp
movsl
push
cmpsl
arpl
shr
fdivl
mov
add
xor
mov
cmp
sbb
lds
adc
imul
pusha
add
add
dec
sub
outsb
jge
xchg
movsb
fwait
dec
cmp
mov
add
or
push
inc
mov
pushf
loope
cmp
iret
pushf
or
arpl
push
mov
mov
or
add
inc
fwait
dec
mov
jo
mov
sbb
fs
add
or
add
pop
inc
mov
push
add
movsb
mov
movsl
cmpsl
jmp
mov
and
mov
jo
mov
mov
testl
add
add
pop
icebp
addb
or
enter
lcall
sbb
es
scas
ret
gs
enter
icebp
pop
ret
pop
cmc
addb
dec
les
mov
mov
push
movsl
jae
adc
add
jl
jecxz
mov
shl
adc
cmp
pusha
add
fwait
in
push
cmc
shr
or
push
add
pop
mov
mov
test
fisttps
sub
push
sub
repnz
nopl
cmc
in
test
mov
mov
dec
inc
stos
pop
std
add
mov
les
add
push
fldenv
mov
jmp
mov
jbe
insl
daa
sub
addb
push
or
imul
add
push
mov
lods
jg
insb
ss
push
lds
test
outsl
outsl
lahf
mov
add
add
and
rolb
clc
push
int
subl
push
add
or
in
mov
dec
cmp
add
mov
jl
pushl
rolb
mov
push
iret
mov
inc
add
cld
adc
mov
inc
fstpl
xchg
mov
repz
lret
adc
mov
out
push
adc
mov
cs
add
out
test
add
ja
mov
mov
jmp
add
rcrl
or
lret
dec
sbb
jae
in
sbb
clc
mov
int3
clc
push
dec
outsb
xor
mov
sbb
xlat
lods
or
add
add
mov
mov
out
fistps
mov
mov
dec
fwait
cld
stos
or
jb,pt
mov
aas
lea
inc
add
or
pop
sub
add
and
xor
add
mov
pushf
mov
mov
mov
daa
cmpsb
cmp
inc
js
sti
pop
in
xor
mov
push
add
sbb
inc
inc
mov
push
fstpt
data16
call
lock
add
int
inc
xor
mov
inc
pushf
stos
sub
aas
daa
mov
push
adc
rcrl
or
movsl
lods
lret
cmc
dec
pop
std
xchg
fnstenv
out
std
cmp
xor
negl
es
ret
mov
mov
xchg
add
add
mov
adc
mov
add
push
add
inc
mov
mov
shll
add
jb
mov
jg
fsubrs
cmp
inc
pop
je
test
inc
sbb
insb
pushf
enter
mov
add
mov
cmc
add
pop
lret
mov
outsb
and
mov
jno
push
std
in
rolb
mov
popa
insl
or
fbld
mov
in
add
add
mov
cmp
push
sub
jge
jecxz
imul
inc
js
or
sub
mov
mov
fadd
or
mov
ljmp
mov
add
out
dec
mov
insl
add
outsl
jae
lret
dec
mov
mov
cli
pop
xchg
cli
fnstsw
mov
mov
cmp
in
xlat
mov
add
mov
jns
jp
insb
adc
mov
popf
mov
pop
and
mov
pushf
test
neg
mov
inc
add
mov
or
add
test
add
inc
add
inc
xor
repnz
inc
add
xchg
leave
push
mov
lea
mov
mov
pop
jb
mov
and
ret
test
jmp
iretw
jo
mov
lea
pusha
add
mov
or
jo
mov
out
lsl
add
or
add
push
or
pusha
add
mov
pop
mov
xor
adc
mov
call
xor
mov
mov
jno
add
inc
je
and
push
adc
add
mov
adc
mov
out
pop
das
mov
aad
add
mov
add
push
mov
and
push
jmp
icebp
cmp
aas
xchg
add
cmp
lods
pop
enter
inc
add
pop
ljmp
scas
lret
jnp
push
cmp
add
mov
fs
push
mov
or
cli
pop
gs
jb
mov
push
add
add
adc
ja
cmc
cmp
test
pop
pop
fs
rolb
mov
rolb
mov
xor
add
mov
ret
push
add
rolb
mov
or
jb
mov
sbb
jae
pop
push
add
call
add
xchg
cli
hlt
adc
add
ds
es
mov
and
iret
jae
and
and
lods
ja
add
test
adc
mov
and
in
notl
mov
pop
mov
fcomps
fists
inc
add
push
in
xchg
and
sub
fildl
test
and
mov
cmp
jmp
adc
mov
pop
aam
push
popf
jl
lods
rolb
xchg
incl
dec
inc
aam
imull
cmpsl
pop
xchg
lret
xlat
and
mov
add
push
loope
inc
sub
pop
insb
iret
sbb
add
mov
and
stc
and
mov
lret
popf
inc
add
clc
sub
add
or
stos
push
dec
mov
ljmp
sbb
ficoms
cmp
push
ljmp
add
mov
adc
mov
xlat
mov
cwtl
sub
mov
push
cmpsb
fwait
je
or
and
popf
stos
pop
std
lods
lret
mov
decl
adc
lods
adc
mov
dec
cmc
xchg
repz
add
cmp
insl
push
sub
pop
push
sub
push
fstpt
loope
dec
cmpsb
mov
es
cmp
inc
add
inc
mov
mov
jnp
data16
mov
dec
pop
and
push
loopne
mov
mov
adc
mov
dec
mov
sub
xchg
adc
mov
cmp
add
add
add
xor
fdivr
pop
movd
incb
mov
add
add
lret
pop
xchg
pop
pop
adc
mov
jns
push
mov
push
stc
mov
mov
ret
insb
jno
and
mov
test
add
add
xor
add
jns
add
insl
inc
mov
add
pop
mov
mov
stos
pop
andl
add
mov
sbb
test
add
or
jp
inc
add
ss
movb
add
sub
mov
add
push
jp
imul
test
add
sbb
jnp
add
mov
adc
inc
xchg
xor
add
push
pusha
add
popf
loop
mov
loope
inc
xchg
dec
sub
jle
mov
inc
sarl
rorl
fidivrl
jbe
jno
mov
mov
int
push
add
sub
dec
jl
aam
mov
add
mov
sub
pop
lret
stos
cmp
mov
adc
mov
mov
inc
cwtl
lods
inc
dec
adc
mov
jne
lahf
outsb
int
add
sbb
cmp
add
sub
lea
cmpl
pop
sub
out
sbb
lods
sub
imul
mov
cli
pop
xchg
cmp
test
xor
adc
mov
mov
or
mov
inc
leave
lret
scas
sbb
and
or
ljmp
mov
add
adc
add
cwtl
or
aam
jno
pop
and
add
jg
sbb
add
mov
clc
mov
icebp
dec
lods
mov
jle
add
sbb
mov
out
mov
pop
jle
sbb
sbb
insl
jmp
cmp
jns
jg
in
shl
sub
inc
cwtl
mov
mov
xor
add
xor
ljmp
add
xorl
jl
add
mov
std
mov
sub
add
add
cli
fs
sbb
jmp
push
mov
cmc
leave
push
mov
dec
out
pop
fcoms
clc
pop
inc
mov
mov
testl
lret
es
jp
push
ss
imul
fs
or
add
add
fwait
mul
clc
xchg
push
sub
divl
add
push
xor
mov
fldl
lds
add
mov
in
insl
and
add
xchg
lret
xchg
lcall
inc
add
imul
mov
outsb
outsb
fistpl
loop
mov
dec
cmp
addb
adc
lods
pop
loope
mov
movsb
xchg
js
mov
sub
xor
gs
pop
pop
and
icebp
imul
add
mov
adc
cmp
sbb
cmpsb
loopne
mov
js
fst
add
inc
jge
mov
pop
cmpsl
sub
push
add
pop
push
inc
enter
push
add
rcll
and
push
xchg
insb
ret
imulb
in
add
add
xchg
add
mul
add
aaa
arpl
cwtl
aas
sbb
insb
and
mov
inc
xor
mov
bound
mov
xor
out
repnz
ror
out
cld
test
add
ds
lret
or
add
stos
cmp
xor
mov
add
and
mov
ret
jecxz
and
adc
lock
and
mov
add
mov
push
add
mov
fldcw
outsl
and
loope
xor
mov
dec
dec
adcl
divb
ret
fcoms
icebp
jmp
push
add
in
rcrl
in
pop
test
or
fdivr
dec
pop
mov
cli
popf
cmp
xor
mov
popf
push
push
inc
rcr
cli
and
add
loopne
mov
ljmp
mov
cmp
mov
add
addb
jbe
inc
dec
mov
rolb
dec
push
cmpsl
xchg
rolb
insl
lahf
sbb
xchg
add
cmp
fucomp
mov
leave
fs
shl
cltd
jnp
addb
adc
jno
add
fsubs
mov
mov
cltd
mov
scas
push
sbb
adc
mov
cmp
repz
ret
add
mov
sbb
lcall
sbb
stos
cmc
mov
mov
add
add
add
jne
aas
mov
and
mov
jmp
add
cmp
cmpsl
add
mov
jle
aaa
cld
jp
je
lret
cltd
sbb
clc
sti
add
add
push
dec
mov
pop
lock
add
mov
pop
rolb
mov
pop
lcall
pop
pop
mov
push
sub
adc
or
bound
mov
add
cmp
add
add
mov
mov
xor
mov
fisubl
pusha
add
inc
add
pop
add
mov
add
sbb
adc
mov
pop
ss
xor
add
adc
repz
out
and
loope
clc
jns
add
mov
adc
dec
mov
notl
rolb
mov
repnz
rolb
mov
ss
mov
jge
ds
pop
ljmp
je
imul
mov
mov
jp
sahf
jecxz
sbb
lock
fwait
add
add
lcall
xor
mov
cmc
sbb
lahf
ds
cmp
push
adc
mov
out
subl
dec
fwait
xchg
and
roll
cld
adc
mov
call
mov
lret
repz
add
into
std
adc
mov
loop
mov
jb
mov
jne
mov
mov
mov
fcompl
xor
or
shll
sbb
aaa
mov
add
das
adc
mov
stos
mov
int3
stos
call
cmc
scas
stc
add
mov
add
mov
and
psrld
mov
rcl
sbb
cmp
ja
lods
mov
sbb
fisubl
sbb
sarl
add
mov
add
mov
push
into
push
test
fcmovne
lret
xor
mov
mov
sbb
jae
inc
add
mov
add
add
inc
mov
sub
call
push
adc
cmpsb
dec
rolb
mov
hlt
pusha
add
lret
dec
xchg
jp
sbb
es
mov
aad
rolb
sbb
add
xor
mov
rcr
pop
add
mov
inc
sbb
daa
out
push
add
mov
xchg
xchg
sub
fisttps
dec
mov
mov
dec
cmp
fcoms
mov
inc
add
add
les
add
add
add
mov
rcrl
push
add
or
or
mov
lret
mov
jmp
mov
cmpl
pop
add
xor
out
add
mov
leave
add
mov
mov
mov
mov
and
or
cmp
add
pusha
add
sbb
add
sbb
fincstp
mov
jns
add
out
sub
sete
addr16
lock
cmp
in
fstpt
addl
mov
add
fcoml
mov
mov
andl
aad
pop
aaa
fsts
xor
cmp
add
pop
or
sahf
jae
add
lcall
pop
enter
and
add
add
sahf
sub
insb
push
out
add
and
mov
filds
rcll
mov
add
add
jge
adc
mov
xlat
and
mov
cli
mov
push
add
mov
outsl
sub
out
add
iret
cmpsb
or
stos
push
lods
push
fists
xor
aam
add
addb
xor
mov
mov
fs
cld
and
mov
add
jb
mov
leave
push
xlat
jmp
inc
ret
jge
jl
scas
cs
lret
repz
add
jp
dec
mov
xchg
call
and
add
fstl
push
add
mov
loopne
mov
flds
mov
cmp
stos
push
nop
add
push
rcll
pusha
add
jae
mov
mov
add
add
and
mov
in
push
cmp
add
mov
outsl
pop
push
mov
add
mov
mov
popf
jno
inc
in
mov
je
adc
add
aas
cmp
dec
mov
mov
dec
loope
push
add
pop
mov
mov
int
or
pop
jnp
enter
fcmovnu
test
push
add
cmp
mov
mov
push
jge
or
add
push
rolb
mov
je
sbb
dec
jno
cmp
xorl
xor
aam
mov
js
cli
jmp
in
sbb
loope
dec
and
push
ja
push
add
mov
pop
sub
dec
pop
xor
mov
add
aas
sub
mov
or
push
aad
add
xchg
sub
pop
jae
popf
pop
mov
add
mov
inc
push
add
add
leave
adc
inc
add
cltd
bound
mov
sbb
fnstenv
mov
aad
jbe
outsb
stos
dec
ja
mov
out
mov
push
add
xor
decb
mov
add
or
loope
add
add
aad
subl
ret
or
hlt
mov
nop
add
push
or
cmp
rolb
mov
pusha
add
adc
mov
in
loop
mov
scas
jmp
inc
fidivrs
sub
mov
outsb
inc
stos
cmpl
mov
mov
add
add
add
sbb
adc
mov
fldt
lea
jmp
add
mov
push
add
mov
dec
cmp
add
in
in
pop
pminub
subl
mov
stc
int3
neg
xlat
dec
mov
add
add
pop
popf
jp
sbb
xchg
cmc
xchg
imul
dec
push
mov
cld
inc
popf
cmp
add
mov
add
jns
fisttpll
xchg
jp
jg
fnsave
inc
add
dec
xorl
mov
mov
xchg
dec
add
push
push
adc
mov
xchg
jg,pt
repnz
jp
daa
scas
adc
pop
leave
leave
adc
cmp
mov
mov
inc
outsb
aaa
xor
mov
mov
int
add
cmpsl
bound
mov
mov
fidivl
jae
add
xchg
add
add
test
add
ret
inc
addr16
pushf
mov
arpl
add
cli
cmp
push
scas
fstps
sbb
add
mov
xchg
inc
fmuls
je
scas
xor
mov
cmc
jl
mov
jbe,pt
rcll
pop
addb
lcall
xchg
sahf
sub
add
div
fs
and
inc
mov
push
mov
mov
xchg
sbb
xchg
int
fcos
or
mov
scas
jle
jnp
xchg
add
mov
xlat
scas
loope
add
mov
inc
rolb
mov
add
arpl
ret
push
sub
aad
das
push
iret
nop
add
jp,pn
adc
push
rolb
jge
mov
add
das
add
sub
inc
imul
adc
mov
jo
mov
mov
ss
mov
inc
add
fstpt
inc
les
fwait
iret
aad
xchg
add
fsubrs
xchg
daa
jb
mov
das
leave
ret
push
or
ss
and
mov
dec
cld
xchg
cmc
jae
lahf
popf
sub
adc
jecxz
add
mov
add
inc
or
jl
jle
pop
dec
movsl
rolb
sbb
push
cmp
push
dec
sti
ret
outsl
fmul
dec
jae
and
xchg
add
mov
add
in
inc
add
testl
outsb
int
mov
aaa
push
je
loopne
mov
dec
adc
jne
fimull
test
mov
addb
cmc
stos
ja
or
mov
repz
mov
xchg
xor
inc
add
lret
add
fdivrs
push
rolb
jno
add
add
mov
mov
mov
pusha
add
fbld
inc
add
jg
mov
mov
mov
sub
add
mov
stos
and
mov
xchg
hlt
cli
mov
mov
imul
xchg
das
mov
mov
sub
dec
xor
mov
dec
xor
rolb
mov
sahf
addr16
fcoml
fidivrs
test
mov
iret
cmp
add
or
push
add
pop
pop
in
mov
rolb
mov
mov
sbb
mov
pop
and
mov
add
mov
repnz
mov
add
outsb
cmp
add
sahf
lods
xchg
add
push
dec
cld
and
mov
mov
mov
dec
adc
mov
add
les
sub
cmp
lret
sbb
leave
je
inc
add
daa
or
add
cmp
ficoml
fs
push
add
add
add
xchg
xor
fstpt
pop
addb
pop
add
mov
mov
ja
xor
jnp
add
add
push
rolb
dec
rolb
mov
add
mov
inc
fnsave
jl
rorl
stos
fsub
cmp
add
mov
inc
cmp
add
add
mov
out
rolb
xor
mov
arpl
in
inc
out
lds
add
cmp
scas
popf
mov
mov
sbb
mov
out
jp
jb
mov
and
mov
sbb
arpl
bound
mov
in
and
mov
jecxz
add
pop
cld
push
notb
cmpsl
adc
mov
loop
mov
jl
add
dec
aaa
sbb
jae
adc
addr16
dec
and
lret
jne
jne
fwait
mov
in
in
add
loope
bound
mov
clc
xchg
push
add
xchg
push
sahf
into
or
add
je
sub
outsb
outsl
jmp
pop
sbb
push
push
addb
ss
jne
sub
and
std
xchg
lret
jmp
pop
dec
fsub
jnp
sbb
in
outsb
out
std
fs
outsb
cltd
mov
loop
mov
push
fstpt
push
xor
jnp
dec
loopne
mov
sub
popa
nop
add
std
cmove
mov
lods
imul
add
mov
loope
cmpsb
adc
cmp
cld
mov
cs
arpl
mov
mov
mov
rolb
test
lea
add
lea
add
push
sub
ds
xor
mov
add
jns
pop
fsub
pop
jbe
add
dec
outsl
jl
add
add
xchg
jg
add
xchg
cmpl
adcl
jne
sub
mov
mov
add
dec
mov
xchg
mov
xor
xor
mov
test
gs
out
add
mov
add
mov
xlat
pop
jns
mov
add
adc
mov
sub
and
jecxz
scas
xchg
add
mov
daa
mov
mov
pop
addb
jl
cli
push
add
dec
aaa
xchg
fstp
pop
cmp
add
inc
pop
jno
inc
add
push
lcall
movsl
mov
mov
ds
adc
mov
mov
call
in
lods
dec
fistps
push
add
adc
mov
popa
xor
mov
addb
or
mov
and
sbb
loop
mov
ficoms
call
add
add
mov
mov
push
addr16
leave
mov
adc
mov
pushf
push
jno
jl
add
add
lcall
mov
push
xchg
mov
cld
xor
mov
mov
lea
xchg
das
xlat
lahf
mov
out
loop
mov
lods
stos
push
ss
jmp
add
mov
roll
adc
xor
add
or
adc
sbb
fdivrl
mov
mov
push
add
imul
add
pop
fdivrs
xor
stos
add
flds
add
movsl
mov
icebp
add
ds
fimuls
mov
fdivs
ljmp
repnz
xor
mov
cli
fs
xchg
add
dec
in
mov
ret
add
mov
adc
adc
fstpt
mov
mov
inc
add
mov
int
xchg
inc
aaa
int
imul
pop
xor
mov
lock
dec
cmpsl
or
in
hlt
pop
nop
add
mov
xchg
dec
out
repz
neg
mov
inc
ret
ja
push
mov
je
or
xchg
inc
cld
sbb
dec
incb
popa
and
mov
inc
cmp
aam
sti
jnp
pop
add
mov
cmp
add
jns
add
sbb
pop
mul
inc
jge
mov
xor
clc
sbb
inc
and
xor
mov
add
adc
mov
mov
iret
sbb
xchg
push
xchg
push
mov
je
pop
jno
rcll
mov
in
insb
jns
jmp
xor
dec
sub
add
mov
loope
inc
add
or
aaa
test
cmc
pop
lock
jbe
add
repnz
daa
bound
mov
les
mov
or
loop
mov
icebp
jne
pop
dec
arpl
popa
ret
xor
pop
lret
es
iret
popa
repnz
add
mov
add
add
pop
mov
inc
add
jnp
push
shl
push
add
imul
outsl
inc
test
in
jnp
add
repnz
inc
xchg
mov
insl
nop
add
pop
stc
xchg
add
mov
jns
addb
inc
das
popf
lcall
fdivl
add
jmp
mov
sbb
outsl
pushf
je
add
add
ds
ss
add
mov
rolb
mov
cmpsb
jge
repnz
or
pop
jp
lods
jle
adc
jmp
mov
mov
imul
jge
jg
imul
mov
add
cmpsb
inc
xchg
js
rolb
nop
add
mov
stos
addl
add
pop
addb
dec
cs
fs
mov
cwtl
jae
lock
add
pop
int3
rolb
mov
jae
jecxz
add
mov
mov
add
mov
in
js
cmp
xchg
ljmp
xor
mov
shrl
gs
cmc
rol
pop
add
pop
bound
mov
out
xor
mov
cmp
xchg
mov
sbb
outsl
fcoms
add
cld
pop
mov
add
hlt
out
add
xchg
pop
mov
mov
mov
out
ret
xor
mov
mov
mov
sub
jmp
xchg
mov
xor
hlt
jnp
push
add
cmp
mov
mov
pop
outsb
out
add
mov
out
rolb
cmp
mov
clc
dec
mov
mov
add
inc
movsl
xor
add
mov
call
loop
mov
fcomp
xchg
mov
in
push
adc
sub
insl
add
mov
mov
sub
xchg
pop
cwtl
nop
add
test
jno
adc
xor
mov
test
loopne
mov
mov
cwtl
insl
push
add
dec
sbb
js
add
call
add
push
cld
test
fists
add
inc
loopne
mov
and
sub
xor
mov
rolb
jae
add
rolb
mov
xchg
or
jae
push
hlt
sar
gs
add
mov
stc
pop
orl
movsl
sub
jns
jo
mov
and
mov
cmc
mov
aaa
jnp
add
fst
add
add
stc
inc
add
nop
add
add
divb
mov
push
add
cmp
es
add
add
xchg
mov
pop
and
cmpsb
jmp
shl
xchg
arpl
lahf
fwait
icebp
mov
inc
add
aaa
je
scas
addb
aam
fmul
addb
mov
mov
icebp
fcmovbe
or
fstpt
pusha
add
outsl
mov
mov
outsb
pop
sub
out
jmp
and
sbb
mov
fabs
adc
add
sub
add
addr16
adc
inc
xor
rorl
das
ret
repz
ja
xchg
or
xor
mov
mov
add
in
pop
mov
cmpsb
add
add
