jg
lock
pop
jge
jnp
add
inc
mov
or
add
dec
rcrl
cmc
or
xchg
xor
popa
arpl
jmp
enter
xor
mov
xlat
inc
add
mov
fisubs
or
outsl
xchg
pop
xchg
xchg
lret
add
adc
mov
mov
add
add
inc
ret
push
add
arpl
inc
add
fxch
js
xchg
test
mov
sahf
cmpsl
ret
popa
xor
mov
mov
add
mov
ret
js
and
dec
mov
add
sbb
xor
fstpt
mov
mov
mov
add
mov
lock
mov
bound
mov
add
outsb
stos
stos
push
dec
cmp
out
jmp
adc
mov
xchg
in
push
or
sbb
xchg
mov
push
pusha
add
ret
push
addb
xchg
sbb
push
movsb
cmp
sub
add
sbb
add
add
push
scas
out
scas
sub
dec
mov
imul
bound
mov
mov
cltd
jge
sub
imul
add
lcall
add
repz
pop
mov
mov
les
add
stos
aam
jbe
jge
out
insb
cmpsl
lret
out
adc
daa
cmp
cmp
push
and
ror
clc
loope
pop
cmp
add
cmc
rolb
lcall
mov
pop
adc
mov
fistpll
js
in
aaa
inc
add
inc
push
inc
add
push
mov
jo
mov
fs
jne
jl
les
xor
test
push
pop
dec
push
xor
fwait
mov
rolb
pop
xchg
fs
jb
mov
outsb
sbb
fisubrs
loop
mov
add
sti
cltd
fcoml
or
rolb
pop
adc
pop
out
lret
stos
mov
pop
mov
inc
add
dec
jl
ja
add
mov
mov
inc
dec
leave
fidivs
repnz
inc
add
mov
mov
sub
adc
fdivs
sti
mulb
add
mov
add
cmp
loopne
mov
cld
outsl
mov
out
add
dec
or
mov
xchg
sahf
sarl
jae
jbe
psubusb
popa
inc
rolb
mov
sub
and
insl
pop
adc
mov
daa
xor
or
and
add
jo
mov
push
sub
std
out
imul
rolb
mov
push
in
sbb
movsl
jmp
cwtl
push
add
fstl
xchg
and
cmp
repnz
mov
xchg
notl
repnz
xchg
mov
mov
int
adc
jnp
and
add
pop
nop
add
add
push
or
scas
repnz
add
add
add
flds
add
add
pop
lcall
push
add
add
mov
stc
test
movsl
sub
mov
mov
jl
imul
fs
push
les
push
mov
sub
push
push
push
push
push
push
cld
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
aam
clc
sub
xor
call
cld
repz
inc
xor
mov
rcll
lahf
jno
outsb
call
add
shll
rolb
mov
popa
pop
insl
loop
mov
repnz
loope
dec
adc
mov
xor
fcomps
add
mov
hlt
pop
mov
jmp
ret
mov
xchg
add
mov
and
je
jecxz
jns
test
js
ljmp
outsl
and
mov
sub
nop
add
sub
fnstsw
ret
icebp
loop
mov
add
stos
sbb
dec
push
add
mov
add
outsl
adc
imulb
pop
in
sbb
or
cltd
cli
jae
scas
cmp
ret
push
add
adc
mov
pop
xor
mov
inc
cwtl
repz
rol
add
adc
add
adc
mov
add
sub
pop
mov
cmc
dec
ja
adc
mov
cwtl
repz
inc
fidivrl
jo
mov
lret
mov
pop
cli
and
mov
cmp
mov
sbb
add
mov
xor
mov
add
lods
mov
add
ret
iret
in
xchg
cmp
stc
icebp
jl
ret
std
inc
add
dec
test
inc
stos
jns
sub
aam
sbb
or
dec
in
and
xchg
hlt
push
daa
inc
adc
mov
popl
imul
mov
cs
stos
lock
mov
int
test
out
jns
addb
stos
pop
inc
pop
push
sahf
std
pop
xor
add
cs
push
sub
test
sub
xchg
push
pushf
imul
pusha
add
push
jle
imul
or
xor
sahf
cmp
add
mov
jb
mov
add
jnp
xchg
leave
mov
and
add
arpl
inc
cli
cmp
loop
mov
inc
in
lcall
push
repnz
mov
test
mov
in
cmpsl
nop
add
jae
xchg
push
add
mov
mov
add
imul
sub
ret
push
pushf
and
add
mov
into
cmpsl
push
xchg
sub
mov
movsb
cmp
std
clc
pop
ret
and
mov
sbb
xor
dec
adc
push
mov
jns
push
add
pop
std
sub
or
aam
outsl
sbb
push
cwtl
cmpsb
mov
mov
cmp
add
add
mov
mov
add
and
add
iret
dec
jno
add
mov
jl
mov
mov
nop
add
repnz
xchg
dec
mov
inc
out
or
mov
mov
adc
inc
or
jns
sbb
mov
add
loop
mov
add
add
mov
mov
xchg
call
add
js
pop
push
ljmp
mov
imul
mov
cmpsb
pop
jno
sbb
lock
cwtl
das
pop
popa
push
out
add
add
mov
cltd
sbb
mov
mov
sbb
mov
mov
mov
and
mov
jle
sub
sub
jmp
pushf
mov
push
fnstsw
or
add
adc
adc
mov
in
push
add
sub
aas
pop
and
mov
xchg
pop
push
or
lock
add
add
aad
sub
pop
aam
pop
fdivs
mov
cmp
call
dec
in
in
sub
pop
sbb
rcll
lret
mov
mov
fimull
lods
inc
int
aad
pop
pop
bound
mov
add
or
mov
loope
pop
outsl
lods
jle
hlt
fisttps
fdivrl
dec
pop
movsl
mov
mov
add
mov
addr16
cmovno
xor
mov
jmp
and
mov
and
imul
nop
add
addb
mov
inc
add
add
pop
dec
stos
add
add
mov
add
enter
call
jo
mov
mov
sti
push
adc
mov
mov
dec
sub
mov
add
pusha
add
add
mov
aas
out
ja
inc
jmp
jle
add
mov
mov
add
cmp
adc
push
sub
out
stos
es
jecxz
add
lods
cmpsb
rolb
mov
pop
in
cmp
mov
sbb
add
push
and
fdivrs
add
dec
je
mov
mov
mov
aaa
jo
mov
add
in
rcll
add
add
cmp
inc
repz
xchg
mov
dec
push
inc
push
fstpt
dec
cs
cmc
mov
add
movsl
insb
sti
addb
les
add
add
jnp
xchg
sbb
sub
ljmp
add
cs
add
in
add
hlt
mov
hlt
adc
test
test
jno
cmc
jp
in
repnz
pop
mov
leave
addr16
ds
or
das
mov
bound
mov
lahf
xor
ljmp
sub
test
adc
mov
scas
lods
mov
imul
cmp
push
jb
mov
push
into
push
add
sahf
imul
jnp
enter
fcmovbe
out
leave
in
mov
mov
addr16
enter
test
scas
mov
cmpsl
sbb
addr16
cwtl
pop
pop
sbb
and
cmp
pushf
cld
or
inc
lods
mov
hlt
bound
mov
js
dec
pop
lahf
fbstp
ret
pop
rolb
fidivrs
pop
int
xchg
mov
js
pop
data16
adc
sbb
lock
hlt
addb
fisubs
jb
mov
dec
scas
mov
into
ja
imul
sbb
addb
inc
call
add
in
pop
mov
mov
dec
das
ja
fadd
push
aaa
std
xchg
mov
mov
xor
add
add
mov
mov
dec
mov
mov
shll
pop
je
in
hlt
lods
dec
lods
cmp
push
mov
and
jg
add
fisttpll
and
mov
add
mov
push
sub
push
sarl
xor
mov
adc
sub
mov
lahf
cltd
repz
scas
mov
adc
jno
add
std
daa
mov
movsb
sub
dec
fistl
cmp
cmpl
add
mov
adc
aaa
cmp
mov
les
add
mull
mov
stos
mov
push
add
mov
mov
push
add
js
pusha
add
mov
jle
insb
cmp
inc
add
mov
add
data16
ss
in
aas
pop
jmp
add
mov
fwait
add
sub
negl
out
xchg
add
bound
mov
testb
mov
sub
fcomps
mov
mov
mov
add
mov
add
std
in
xor
mov
out
mov
mov
sbb
mov
pop
dec
insl
push
ja
add
mov
aas
pusha
add
mov
call
xchg
mov
xchg
jg
dec
inc
jge
adc
sahf
sbb
jmp
cwtl
popf
pop
ja
add
adc
into
mov
or
sbb
sub
mov
mov
or
inc
stos
aad
les
cmp
test
inc
mov
lcall
mov
mov
mov
fimuls
jns
add
ror
test
test
mov
repnz
jle
pop
xchg
adc
dec
xor
mov
stc
fcmovbe
xor
dec
xor
mov
adc
insb
mulb
test
jae
add
mov
and
mov
jmp
push
movsl
push
pop
inc
daa
push
or
movb
jmp
lods
fs
stc
ja
popf
jbe
arpl
test
xchg
add
adc
mov
or
or
out
frstor
add
sbb
xchg
jb
mov
add
mov
pop
adc
mov
add
or
bound
mov
xor
add
adc
mov
repz
ficoms
mov
mov
movsl
xchg
arpl
js
cld
dec
iret
rolb
jae
cltd
subl
daa
mov
add
divl
lods
mov
add
lretw
addb
mov
jle
add
mov
sbb
mov
fdivs
mov
mov
js
clc
sub
add
scas
enter
addb
add
mov
push
pop
inc
push
add
mov
lods
data16
mov
mov
inc
add
sbb
inc
stos
add
mov
add
add
lock
add
adc
mov
sub
call
mov
nop
add
push
xrelease
sbb
in
std
mov
xor
adc
xchg
repz
mov
and
mov
and
stos
lret
ret
jae
loop
mov
rolb
mov
rcll
xor
mov
cli
ss
mov
orl
mov
in
lock
lods
sbb
mov
mov
mov
add
mov
dec
sbb
mov
push
add
push
add
sbb
pushf
jne
mov
add
mov
sbb
mov
sub
add
in
add
ficomps
adc
aas
dec
dec
pop
or
aas
out
add
push
mov
sub
push
jmp
lods
mov
add
out
pop
pop
jge
outsl
addb
pop
shl
and
mov
cmp
sbb
push
mov
add
mov
jbe
aam
mov
repz
add
sbb
mull
ljmp
and
cvtdq2ps
int
ds
jmp
gs
ret
ret
addr16
xchg
jae
aaa
add
bound
mov
mov
paddsw
pop
adc
mov
lds
mov
insl
push
outsb
adcl
add
mov
cmp
cmpsl
scas
push
sub
cmp
repnz
icebp
push
in
or
movsb
xchg
xlat
mov
pop
cmp
inc
stos
mov
mov
sti
sub
mov
xchg
cmp
cmpsl
stos
or
xchg
insb
cmpl
add
inc
add
mov
out
add
mov
sbb
cwtl
jecxz
stos
mov
mov
mov
mov
or
add
leave
in
call
jle
add
imul
add
dec
adc
mov
add
push
add
mov
jp
rolb
or
add
or
and
add
add
sub
push
mov
imul
mov
popf
je
mov
add
pop
xor
mov
add
mov
sub
lods
xchg
mov
lods
push
mov
sbb
data16
jecxz
mov
mov
es
add
add
rolb
mov
add
and
inc
and
push
insl
mov
ds
movsb
cmp
sub
add
mov
inc
rorl
scas
das
jns
scas
or
inc
adc
mov
add
scas
push
add
sbb
jns
in
in
movsb
jmp
add
add
mov
xchg
int
xor
mov
rolb
mov
inc
scas
movsl
pop
sbb
xchg
mov
adc
mov
adc
ds
add
arpl
xchg
xor
push
bound
mov
add
adc
mov
rolb
mov
xlat
inc
rolb
adc
mov
xchg
cmc
xor
mov
mov
mov
jle
add
or
xor
loope
jae
sbb
push
add
dec
sbb
scas
rolb
mov
mov
and
jl
add
data16
mov
or
arpl
aad
inc
add
add
dec
lock
jo
mov
pop
and
mov
add
push
add
ljmp
mov
aas
mov
and
mov
xor
jb,pn
mov
add
arpl
or
pop
mov
sahf
inc
dec
push
dec
lret
xchg
sub
add
add
mov
add
add
dec
ret
out
enter
mov
fwait
rolb
mov
sti
cmpsb
pop
nop
add
jl
les
sub
sub
push
dec
xchg
lods
or
and
je
or
pop
adc
std
out
cmp
add
adc
mov
sbb
adc
sbb
fwait
test
aad
add
sbb
add
pop
fbld
adc
mov
sbb
flds
xchg
xor
mov
add
mov
mov
testl
enter
add
mov
add
mov
out
arpl
fcompl
adc
repnz
daa
mov
cmp
mov
mov
fistpl
push
and
mov
add
add
add
mov
mov
add
cld
jp
das
mov
iret
push
lcall
or
test
outsb
xchg
add
repz
add
adc
xlat
mov
mov
add
imul
push
test
mov
cltd
sbb
ljmp
or
mull
mov
rolb
mov
push
dec
push
mov
and
add
fwait
jge
mov
inc
sub
sbb
add
pop
rolb
aad
jo,pn
mov
inc
rdtsc
inc
mov
or
int3
repz
fmuls
out
pop
inc
add
loope
pop
adc
mov
loopne
mov
movsl
nop
add
pop
int
dec
mov
mov
and
inc
add
inc
jb
mov
add
push
mov
pop
mov
mov
mov
xor
xchg
cmp
sbb
mov
loope
test
sbb
add
sbb
inc
add
loop
mov
push
fldcw
jne
rolb
mov
rolb
mov
pop
int
or
and
pop
lods
out
xchg
and
mov
add
shll
add
loopne
mov
cmp
cmp
ja
stos
aas
jle
jb
mov
sub
das
pop
add
mov
cmp
or
mov
movsl
rolb
bound
mov
lret
xor
add
fildl
addl
pop
jns
cmp
add
cli
xchg
sbb
add
inc
mov
mov
pop
and
loop
mov
add
mov
jno
imul
mov
add
cmp
or
xchg
ret
nop
add
mov
xor
fsubl
imul
mov
pop
inc
xlat
mov
test
add
pop
idivb
inc
mov
push
add
dec
fidivrs
mov
hlt
and
mov
pop
imul
inc
fiaddl
jns
je
std
jle
jge
clc
cwtl
jecxz
add
clc
xchg
cmp
sbb
nop
add
push
addr16
lcall
add
xchg
lret
cmp
test
loopne
mov
rolb
es
aam
sbb
lds
dec
int
mov
lds
xor
jp
add
dec
fsts
repnz
repnz
adc
mov
sbb
arpl
mov
loope
lock
mov
pushf
imul
adc
imul
aas
xchg
js
scas
mov
dec
lea
out
aam
outsb
xchg
pop
jbe
inc
aaa
rolb
mov
nop
add
pop
add
mov
jp
adc
loop
mov
push
add
add
inc
pop
xchg
lret
cmp
add
add
mov
mov
pop
repnz
adc
outsl
lret
fmul
arpl
adc
mov
jg
xchg
add
ret
pop
leave
in
enter
stc
push
xor
mov
into
and
repz
jle
add
mov
mov
pusha
add
add
dec
sbb
sub
lods
enter
fsts
add
add
daa
pop
test
loop
mov
add
out
cli
adc
jns
rolb
mov
xor
or
rolb
mov
add
pop
jb
mov
aam
mov
sbb
mov
leave
dec
fadds
mov
pop
push
sub
sahf
inc
adc
mov
mov
rcl
or
test
fwait
jmp
gs
mov
inc
xorl
mov
inc
add
sbb
mov
add
stc
movsb
cmpsb
push
rcll
add
adc
mov
add
xchg
push
int3
lret
jmp
jne
xor
add
je
add
pop
mov
cwtl
pop
jge
fldenv
dec
rolb
gs
lret
mov
cmpxchg8b
leave
outsl
bound
mov
lcall
jne
movsl
imul
push
add
jb
mov
mov
sbb
pop
mov
pop
cmpsb
jecxz
xchg
into
inc
fsub
test
insb
test
sbb
pop
enter
aaa
push
addb
cmp
mov
cli
add
ror
test
or
add
mov
sahf
test
add
or
mov
testb
add
add
mov
enter
addb
hlt
test
mov
pop
mov
mov
jle
add
jmp
int3
nop
add
call
fcmovu
or
pushf
aad
adc
ja
fs
add
sub
out
xor
mov
lds
push
mov
add
in
add
add
pusha
add
sub
bound
mov
mov
push
scas
sub
inc
sbb
sbb
fdiv
pop
adc
mov
cmovo
mov
in
sbb
loopne
mov
outsl
pop
aad
xor
add
ffreep
stos
and
mov
and
mov
sub
add
add
mov
test
outsb
lret
jmp
fmuls
add
mov
int
rolb
mov
adc
mov
mov
mov
dec
cltd
sti
adc
mov
out
outsl
fwait
dec
out
ficompl
or
mov
nop
add
je
mov
out
outsb
dec
jne
lret
clc
addb
loop
mov
addb
jmp
or
bound
mov
or
mov
mov
lods
enter
add
ss
inc
data16
test
sbb
sbb
leave
fwait
leavew
sbb
lahf
push
sahf
int3
inc
xchg
adc
add
dec
cs
lcall
sbb
mov
or
imul
ftst
xor
inc
xor
sub
add
fst
xchg
lcall
push
stos
int
add
leave
sbb
pushf
push
add
xor
in
sbb
mov
dec
jp
xchg
mov
dec
fmull
insb
enter
clc
sahf
test
inc
loop
mov
mov
mov
push
loop
mov
adc
loope
negb
mov
repz
in
js
add
xor
mov
test
sub
xor
xchg
cmp
sub
addb
push
mov
add
inc
lds
lcallw
mov
bt
xlat
addb
and
bound
mov
sti
in
repz
add
mov
mov
add
add
adc
int3
xchg
dec
mov
addb
rolb
mov
cmpsb
inc
inc
add
pop
dec
mov
add
pop
fcoms
imull
or
inc
jbe
pop
xchg
repnz
movsb
xor
test
add
add
push
jle
cmpsb
adc
mov
sub
fbld
dec
mov
jns
inc
out
inc
adc
sbb
push
add
mov
add
jns
push
push
sbb
jno
mov
xchg
cs
int3
xchg
ficomps
jb
mov
sub
loopne
mov
or
fs
mov
pop
add
push
xor
mov
pushf
dec
or
sbb
frstor
add
add
add
mov
or
les
loope
pop
push
sub
add
adc
mov
loopne
mov
sahf
orl
rolb
mov
pop
mov
mov
jecxz
push
dec
fwait
test
data16
fimull
rcll
push
pop
sub
xchg
in
dec
jb
mov
fstps
iret
push
jo
mov
mov
mov
movsl
addl
mov
inc
mov
add
jle
lds
cmpsb
cmp
mulb
lret
cmp
mov
add
fwait
pop
jl
xorl
and
flds
xchg
mov
add
mov
add
push
das
sbb
push
fdivl
es
adc
sub
mov
mov
and
mov
jl
cltd
orl
cmp
out
loope
stos
inc
stos
test
add
inc
add
add
enter
test
test
xchg
xchg
mov
jle
cli
or
mov
pop
addb
ljmp
add
loope
aaa
movsl
in
mov
and
mov
je
mov
addr16
push
inc
add
mov
idivb
jno
outsb
rolb
mov
mov
pop
leave
aas
pop
xlat
jle
stc
inc
xor
daa
inc
add
mov
mov
add
jne
cmp
mov
inc
addb
cmpsl
push
cmp
mov
mov
xor
test
add
adc
mov
and
mov
mov
jge
sbb
mov
sbb
dec
das
inc
add
adc
mov
loope
xchg
imul
test
mov
fnsave
add
arpl
daa
pusha
add
dec
mov
add
loopne
mov
mov
mov
enter
fmull
fldenv
das
lret
mov
add
fwait
out
dec
movsb
or
in
inc
adc
mov
xor
xchg
dec
fsubrs
enter
shrl
add
mov
or
add
mov
mov
inc
dec
jno
in
jbe
add
mov
sbb
pusha
add
adc
mov
pop
push
push
js
ds
imul
add
jno
add
xchg
aam
mov
push
sbb
mov
mov
add
mov
add
pop
ljmp
daa
addb
and
mov
scas
mov
add
mov
adc
mov
and
mov
aad
ficoml
adc
sbb
xlat
mov
insl
pusha
add
push
xor
test
test
mov
add
rcrl
and
mov
in
mov
mov
mov
stc
das
or
popa
add
bound
mov
iret
mov
mov
cli
add
mov
sbb
add
pop
mov
add
sbb
jecxz
mov
call
sbb
push
adc
mov
mov
fnstenv
push
add
mov
add
add
sub
lret
dec
mov
data16
stos
xchg
cmp
mov
or
and
add
jle
rolb
adc
and
mov
aam
add
fwait
xchg
inc
push
mov
add
add
les
les
add
rolb
mov
push
add
mov
movsl
lret
add
mov
pop
mov
mov
jmp
out
xchg
arpl
sbb
test
cmp
decb
xchg
mov
add
mov
lret
enter
add
xor
imul
mov
mov
decl
jno
pop
push
add
mov
jge
push
jo
mov
inc
out
pop
cs
repz
lret
movsl
pop
and
mov
inc
push
add
into
add
inc
dec
lahf
dec
rolb
mov
repz
adc
data16
mov
loope
mov
enter
push
add
test
out
mov
leave
scas
int3
dec
ret
lss
mov
pop
xor
jg
jecxz
ret
repnz
inc
int
adc
add
sub
mov
lea
dec
sahf
rolb
mov
divb
add
xor
xor
add
add
xor
dec
dec
pop
addb
jae
add
mov
inc
push
add
add
lods
ljmp
imul
rolb
mov
fdivrl
add
mov
aam
add
dec
and
mov
scas
into
mov
mov
adc
mov
sub
movsb
imul
adc
outsl
cmp
mov
mov
std
inc
imul
push
add
xchg
add
in
incb
push
pop
and
mov
and
rolb
mov
mov
data16
dec
pop
loopne
mov
jl
xchg
ljmp
fdivr
dec
int
jne
sbb
std
xchg
add
pop
addb
lahf
out
out
add
xrelease
jmp
mov
loop
mov
mov
rcrl
push
adc
mov
ss
bound
mov
add
popf
in
js
bound
mov
lcall
outsl
or
add
lds
fwait
and
loope
push
mov
mov
cwtl
pop
ja
sub
xchg
test
xchg
rolb
mov
call
mov
inc
add
add
sub
jae
lods
lea
bound
mov
add
push
enter
sti
std
dec
mov
shll
cld
aas
sbb
xchg
mov
out
outsb
ss
mov
add
add
clc
rolb
inc
mov
jb
mov
nop
add
cs
add
push
add
das
sbb
cs
roll
cld
mov
enter
jge
stos
xchg
scas
loop
mov
and
sahf
mov
mov
pop
hlt
out
jmp
subl
push
scas
clc
icebp
punpcklbw
mov
adc
mov
lcall
fistps
not
xlat
or
add
out
add
hlt
inc
add
fnop
add
das
push
nop
add
add
aas
fst
add
addl
cmp
mov
mov
cltd
xor
add
add
lock
sbb
les
outsb
mov
sbb
sbb
xor
hlt
mov
in
aaa
mov
adc
xchg
add
mov
daa
mov
pop
hlt
push
add
add
mov
adc
add
mov
negb
push
add
mov
add
int3
ffree
add
mov
popa
movsl
mov
xor
add
push
stos
and
mov
test
loopne
mov
aaa
pop
lods
test
inc
push
mov
sbb
cld
mull
jecxz
jmp
nop
add
mov
inc
add
xor
addr16
adc
test
inc
sub
push
mull
add
add
inc
mov
data16
add
sbb
fimuls
dec
dec
sbb
mov
sbb
test
mov
lcall
mov
add
add
outsb
cmp
pop
sub
sbb
xorl
dec
popf
mov
in
cltd
inc
imul
add
inc
mov
mov
sub
pop
sub
mov
enter
xor
xor
dec
aas
cmp
add
mov
mov
add
out
pop
inc
sub
pop
leave
adc
mov
int3
add
stos
jne
ret
rolb
mov
repz
push
push
ljmp
inc
adc
mov
add
in
adc
add
xrelease
sub
mov
cltd
xchg
loope
out
mov
mov
add
in
lret
js
add
lea
mov
fs
mov
mov
mov
popa
dec
dec
mov
mov
mov
push
nop
add
sub
add
jecxz
jg
rolb
mov
cwtl
jo
mov
pop
inc
or
iret
inc
pop
sbb
or
test
call
lret
sbb
dec
cmpsb
fists
mov
rolb
mov
std
jns
xchg
add
jge
sub
inc
loope
add
cli
lea
add
inc
add
ficomps
jmp
dec
and
cld
hlt
pop
hlt
daa
pop
jbe
jp
add
and
cmc
jle
popf
and
pop
fiadds
insb
xchg
xor
mov
add
fisubl
into
not
rolb
mov
fimull
pushl
dec
and
mov
mov
sub
dec
jle
in
lahf
jecxz
sub
add
jae
in
out
rolb
mov
int
dec
lcall
sti
sub
jg
rolb
in
cmp
movsl
daa
rcr
and
add
mov
fwait
mov
jp
cs
and
and
mov
add
add
aad
mul
or
add
add
arpl
xchg
push
mov
mov
sbb
mov
lea
in
mov
or
iret
scas
inc
lret
or
push
fwait
cmp
fistpll
fldt
and
mov
outsl
cmp
test
inc
cmpsb
jno
cmc
mov
sub
jne
add
ficoml
xchg
lock
fistpll
push
ret
lods
mov
inc
add
dec
mov
mov
add
add
add
or
mov
clc
inc
lret
or
dec
push
iret
or
push
scas
mov
enter
pop
adc
mov
xor
add
mov
sbb
add
aam
inc
dec
mov
mov
adc
cld
das
add
and
pop
sub
jmp
add
add
pop
movsb
fistl
pushf
inc
pop
mov
inc
cmpsl
push
pop
das
adc
sti
xchg
rcll
incl
add
mov
dec
mov
pop
xchg
les
xor
mov
add
inc
add
test
filds
xchg
sbb
add
jmp
lahf
ret
cmc
jle
add
pop
xchg
call
in
add
mov
mov
lret
stos
mov
add
add
xchg
add
pop
xchg
jle
sub
shl
sub
scas
lea
mov
sti
stos
xor
jecxz
jle
fsubp
enter
rolb
mov
mov
or
pop
call
xchg
add
add
add
popf
xchg
inc
add
andl
jp
xchg
std
push
lods
fdivp
fdivrs
lea
add
sbb
adc
mov
jnp
add
mov
mov
or
mov
adc
or
jmp
jbe
roll
sub
cmpsb
int3
pop
mov
add
mov
xchg
cmp
add
add
mov
jge
nop
add
mov
xchg
stc
adc
mov
xchg
add
insl
pop
mov
or
add
sub
in
lret
and
stc
sub
lret
cltd
pop
subl
inc
push
mov
icebp
lret
jb
mov
add
mov
arpl
in
mov
add
leave
lahf
cmp
mov
mov
mov
stos
aam
and
mov
mov
in
das
bound
mov
add
add
mov
mov
popa
pop
jecxz
daa
rolb
push
dec
pop
cmc
stc
push
pop
repz
lcall
neg
cmp
lcall
cmp
cmpsb
lods
or
cmp
add
push
pushf
push
xor
add
fwait
inc
add
add
stos
cltd
pop
sub
push
mov
adc
pop
xor
mov
push
inc
ds
mov
leave
sub
xor
inc
adc
mov
mov
add
cmpsl
rolb
mov
adc
das
xchg
add
mov
pop
or
hlt
int3
popa
push
add
mov
xchg
stos
fstpl
clc
xor
ljmp
ret
push
btrl
mov
gs
jae
dec
jae
fsubrl
push
and
in
jb
mov
add
push
ljmp
or
add
andl
aad
fwait
mov
mov
mov
mov
and
dec
pop
dec
push
add
ret
outsb
aam
addr16
jle
and
sub
icebp
fmull
out
popf
pop
addb
xlat
fistpl
pop
outsl
mov
mov
push
mov
xchg
mov
add
imul
mov
push
add
mov
xlat
push
add
jbe
aaa
lret
test
add
mov
mov
dec
je
arpl
inc
mov
mov
lds
cs
xorl
or
mov
mov
push
dec
lret
nop
add
xor
mov
cmp
xchg
sbb
out
lret
sub
inc
push
sarl
push
add
add
ja
pop
mov
fbld
mov
mov
lahf
lds
xlat
mov
loope
out
icebp
xor
add
dec
testb
mov
ret
cwtl
in
addb
cld
lods
hlt
pop
out
mov
hlt
sbb
jge
bound
mov
pop
cwtl
mov
xchg
add
or
mov
xchg
sbb
mov
mov
cs
adc
mov
jle
add
mov
mov
mov
sub
or
push
add
cmpsb
cmp
add
aad
xor
mov
mov
add
repz
add
mov
add
arpl
mov
and
mov
ljmp
lods
inc
jl
push
mov
cmpsb
or
adc
xchg
jp
sbb
push
jnp
in
movsl
jle
add
cmp
cmc
xchg
xchg
add
add
or
adc
mov
add
arpl
add
cmp
mov
mov
add
add
inc
test
mov
fnstsw
adc
mov
mov
addb
stos
add
sub
ds
por
and
xchg
mov
xchg
adc
mov
or
rolb
mov
xchg
jno
pop
mov
mov
push
adc
pop
data16
mov
add
and
xor
mov
add
push
jl
jne
add
mov
add
mov
xor
mov
test
ficompl
inc
bound
mov
sbb
mov
aaa
rolb
mov
incb
sub
fdivs
data16
lret
icebp
out
flds
xlat
movsb
push
xchg
rolb
mov
push
fwait
adc
pop
mov
mov
out
in
adc
mov
aaa
cmpsl
out
jg
popa
xlat
xchg
add
add
mov
sahf
xchg
jl
or
lcall
pop
pop
ljmp
mov
outsb
inc
cld
fidivs
push
iret
jo
mov
mov
popa
mov
repnz
cmp
repnz
mov
add
add
imul
add
add
sarl
lahf
xchg
sar
sub
stc
ret
mov
cld
stos
pop
sahf
movsl
xchg
into
lret
rcl
addb
shll
mov
mov
add
mov
fs
and
fcomi
clc
rcll
fists
xor
dec
in
addb
jmp
add
sbb
mov
jne
add
cld
or
imul
push
add
stos
xchg
add
outsl
pushf
and
mov
and
mov
push
lcall
add
shll
add
aad
mov
mov
rcrl
insl
or
sub
pop
xor
add
lahf
jbe
cmc
sahf
adc
mov
sbb
mov
cmp
js
inc
mov
add
mov
mov
xor
and
mov
add
int
and
mov
add
movsl
jo
mov
cmpsb
rolb
mov
sub
aaa
sbbl
mov
add
into
les
mov
xchg
xor
fs
aas
outsb
xor
xchg
cmp
bound
mov
inc
rolb
ljmp
jp
clc
out
and
out
push
loop
mov
mov
and
sub
hlt
pop
mov
je
dec
pop
or
and
mov
nop
add
outsb
jl
mov
add
stc
and
jge
cli
iret
jne
xchg
mov
mov
sti
xor
or
mov
inc
pop
dec
hlt
in
mov
rolb
mov
in
sti
pop
rolb
mov
lock
adc
xchg
mov
or
mov
fldt
adc
mov
repnz
sub
mov
shrl
mov
lods
loop
mov
add
ljmp
cltd
hlt
shll
aad
mov
mov
test
xchg
mov
pop
call
pop
sub
add
and
mov
loope
xor
mov
in
outsl
sub
mov
push
xchg
push
add
or
out
add
jne
and
add
sbb
add
dec
pop
test
fcoms
mov
sarl
test
add
adc
mov
addb
mov
es
add
mov
add
mov
xchg
jne
test
fwait
jl
xor
dec
cmp
insb
stos
push
insl
int
icebp
subl
add
pop
sub
push
clc
in
cmpsb
sbb
sahf
pop
int
enter
fwait
adc
in
fdivrs
scas
xor
mov
movsb
or
add
jl
push
inc
and
xorl
or
jbe
pop
xchg
add
mov
xchg
movsl
mov
das
shl
mov
add
xchg
mov
add
mov
dec
cmp
ret
jne
mov
ss
inc
sub
push
lcall
add
mov
push
and
mov
fsubl
add
bound
mov
and
mov
shll
mov
sbb
dec
movsl
movsl
aaa
in
aaa
inc
movsb
ret
cmp
mov
xor
dec
jg
add
mov
add
mov
sbb
sbb
add
arpl
or
addb
pushf
mov
int3
test
dec
xchg
mov
mov
mov
cmp
lcall
je
sbb
pop
arpl
push
jno
push
xchg
xchg
mov
mov
cs
cmpsl
mov
ss
mov
mov
inc
adc
mov
mov
xchg
push
std
fmul
sbb
add
add
adc
add
xchg
mov
xchg
out
cwtl
jb
mov
test
jmp
push
inc
cmp
fs
add
fwait
mov
add
pusha
add
adc
mov
mov
mov
dec
call
jp
add
mov
add
pop
mov
bound
mov
xor
mov
fcmovnbe
ds
pop
push
add
in
leave
xor
mov
mov
mov
mov
xchg
xor
mov
cmp
out
and
add
add
aas
fcomp
mov
scas
je
and
int
ja
push
add
mov
add
sub
mov
sbbl
mov
mov
dec
int
adc
cmpsl
enter
add
add
dec
cmc
lcall
clc
aad
sub
mov
or
out
cs
fsubrs
stos
lret
add
xchg
pop
mov
jne
sub
or
push
xchg
jb
mov
add
roll
mov
ja
rolb
lea
xchg
arpl
rolb
mov
adc
add
mov
add
cmp
adc
lcall
daa
lods
dec
inc
lea
fnsave
mov
fnsave
add
adc
mov
je
and
test
push
add
mov
jp
add
adc
repnz
mov
mov
sub
push
and
add
mov
xchg
push
inc
in
inc
add
sbb
sub
fwait
inc
addb
lock
cmp
add
add
test
out
mov
testb
int3
mov
iret
int
addr16
mov
int
rcrl
and
stc
icebp
mov
add
jl
outsb
int3
inc
or
cmp
mov
cltd
add
or
mov
daa
insb
xchg
add
out
push
add
stc
and
pop
negl
lahf
pop
addb
jecxz
adc
add
add
add
mov
mov
out
mov
loope
hlt
or
loopne
mov
sub
mov
mov
cs
addb
xor
add
mov
iret
mov
cmp
les
test
pop
hlt
pop
stc
outsb
out
inc
loop
mov
in
xchg
add
and
popf
scas
aaa
gs
inc
add
test
mov
lds
jge
dec
outsl
lahf
inc
lods
fcoms
add
dec
lret
addb
fildll
adc
mov
pop
popa
roll
add
aaa
add
mov
out
scas
stos
jnp
mov
add
xchg
mov
push
pop
push
inc
add
repz
sub
stc
mov
mov
cwtl
cld
sahf
cmpsb
decl
testl
mov
repz
rolb
mov
and
mov
sub
dec
in
adc
mov
loope
dec
adc
add
in
add
xchg
cmp
cmp
movsb
lock
loop
mov
ljmp
movsb
cld
mov
mov
mov
ficompl
addr16
xor
inc
pop
lret
jae
dec
dec
jecxz
xor
enter
mov
add
xlat
iret
test
push
fiaddl
and
push
pop
push
int
mov
push
and
out
mov
dec
out
sbb
ja
daa
aam
lret
test
rcrl
aad
bound
mov
pop
and
jo
mov
mov
rolb
mov
xchg
stos
stc
add
adc
mov
add
mov
sbb
and
out
xor
mov
mov
adc
mov
jae
inc
add
rorl
mov
or
and
mov
std
mov
dec
dec
pop
loop
mov
mov
jae
dec
and
lea
xor
je
fnsave
test
push
je
mov
leave
sub
add
pop
out
push
push
sbb
push
cs
sub
jge
lock
mov
cmp
lret
dec
insb
js
call
outsl
or
pop
addr16
add
movsl
push
cmp
lods
xchg
fldl
stos
dec
push
adcl
outsl
push
add
repz
pop
roll
mov
add
setnp
pop
shrl
add
or
ret
movsb
xchg
add
fstps
outsl
xchg
xchg
pop
pop
xchg
hlt
pop
and
jnp
sbb
add
mov
cmp
jl,pt
mov
pop
pop
mov
adc
mov
push
icebp
add
cld
jno
rolb
mov
jle
mov
test
popa
push
fldt
int3
add
xlat
addb
mov
rolb
mov
mov
add
mov
stos
push
and
mov
jg
push
cmp
addb
hlt
mov
pop
mov
or
mov
mov
fs
mov
push
movsb
cmp
xor
jl
add
xchg
imul
test
fcoml
xor
add
test
jno
adc
inc
ds
jae
icebp
inc
add
xor
rorl
mov
mov
push
add
sub
mov
mov
int
int
aaa
sarl
and
mov
mov
andl
mov
js
sub
inc
enter
repnz
dec
cmc
xchg
ret
mov
sub
lret
xchg
mov
push
mov
in
cmpsb
push
ljmp
movsl
loope
xchg
cmp
out
int3
cmpsb
cmc
xor
mov
js
je
add
jo
mov
jl
inc
add
leave
fdivrs
test
mov
cmp
mov
mov
mov
pop
rolb
out
xchg
sub
add
dec
rcr
mov
adc
pop
lret
dec
push
pushf
mov
mov
mov
vcvtdq2ps
push
pop
inc
and
jg
add
cli
add
sub
loope
rolb
mov
jl
dec
sbb
add
add
sub
sbb
dec
ja
out
adc
mov
sbb
addb
call
movsl
lea
es
and
add
mov
mov
imul
xchg
js
mov
lea
and
fwait
sbb
adc
mov
movsl
fsubs
das
nop
add
mov
fsubrs
mov
aaa
sub
or
xchg
jg
mov
fcmovnbe
dec
cmp
and
xor
mov
out
push
repnz
add
add
scas
loopne
mov
add
addb
mov
push
mov
or
mov
pop
push
ret
jp
xor
push
lret
movsl
push
hlt
adc
xchg
xchg
add
adc
mov
mov
mov
mov
mov
xor
aad
addb
mov
aas
push
add
mov
mov
jecxz
jp
jecxz
dec
xlat
call
bound
mov
jb
mov
add
nop
add
out
and
adc
rcll
mov
lds
insb
pop
ljmp
fisubl
adc
add
mov
roll
mov
add
scas
push
sub
add
ja
jge
mov
cmp
imul
icebp
pusha
add
insl
sub
rcpps
fs
pop
pop
cli
cmp
pop
push
xor
mov
pop
and
mov
imul
mov
in
lcall
xchg
add
sbb
mov
inc
add
mov
mov
mov
std
bound
mov
addb
mov
and
mov
ds
icebp
test
int3
ljmp
mov
cmp
mov
jg
xchg
loope
mov
push
jb
mov
mov
iret
xchg
mov
add
das
test
add
mov
cmp
ficoms
dec
jno
push
bound
mov
loopne
mov
out
decb
gs
rolb
mov
and
mov
jl
inc
aad
push
ret
push
pushf
mov
add
icebp
imul
test
push
scas
stos
xor
mov
mov
inc
mov
add
and
mov
ja
pop
jne
mov
shll
nop
add
add
iret
cwtl
mov
mov
add
les
mov
ds
lret
fcmovne
or
and
add
push
pop
and
mov
repz
mov
add
inc
add
push
dec
mov
add
mov
mov
mov
in
idivb
xlat
mov
mov
add
mov
movsl
shrl
ficoms
aas
jl
jge
ljmp
jno
shrl
inc
es
add
push
add
in
leave
add
mov
mov
add
add
sub
pop
or
mov
dec
xchg
inc
scas
add
mov
mov
idivl
mov
mov
add
stos
loope
add
mov
xchg
dec
push
xor
inc
aam
add
leave
jne
add
cmp
mov
pop
sbb
jg
dec
aad
jbe
fistpll
inc
xchg
aaa
psraw
mov
mov
les
add
stc
pushf
xor
mov
add
add
subl
add
sbb
jp
cld
repz
xchg
stc
sti
out
addr16
pop
addl
lock
rolb
mov
push
pop
cwtl
mov
jno
jl
jo
mov
ss
mov
popf
push
jl
stc
call
lock
aaa
je
and
mov
mov
orl
in
mov
je
call
out
adc
mov
add
add
sbb
test
push
ja
fistps
pop
lret
addb
pop
rolb
mov
enter
adc
mov
stos
ret
in
push
cmp
add
pop
jmp
call
fldt
in
add
sti
or
ss
icebp
and
mov
add
pop
mov
mov
ja
inc
add
mov
or
rolb
and
fisttpl
jo
mov
add
inc
inc
xchg
dec
scas
inc
std
push
sbb
frstor
add
ds
pop
cmp
add
add
ja
cli
imul
add
sub
sti
mov
push
add
sub
add
and
mov
jno
testb
out
xchg
sub
sub
add
psubusw
xlat
nop
add
push
add
mov
icebp
sbb
hlt
pop
cs
sar
mov
out
pop
inc
inc
add
jnp
dec
cs
mov
mov
mov
lcall
jecxz
aaa
addb
fwait
sbb
adc
sar
cli
cmp
and
test
sub
xor
js
add
add
ja
int
loope
jmp
fidivrs
push
add
das
adc
mov
incl
jge
push
add
push
add
xchg
inc
or
das
call
add
or
lret
mov
inc
jge
scas
int
out
pop
cmp
enter
jnp
movsl
pusha
add
mov
push
mov
pop
hlt
or
sub
mov
dec
mov
push
fwait
sbb
mov
sbbl
xchg
les
test
aad
fidivrl
push
gs
jne
add
clc
push
iret
add
scas
and
add
add
out
xchg
cltd
sti
sbb
add
mov
sbb
xchg
addb
pop
fsubr
pop
arpl
add
and
add
addl
loope
xor
jbe
rolb
mov
addb
lret
out
jl
dec
pop
lret
mov
loope
fnstcw
lcall
addb
into
in
sahf
icebp
sub
fsts
mov
xchg
or
xchg
add
jne
outsl
jg
pop
outsb
fcoms
sub
jae
sub
add
mov
fwait
add
and
mov
int3
sbb
add
incl
jle
push
icebp
std
repnz
add
mov
lea
int3
popf
test
add
jl
sbb
pop
and
mov
mov
sbb
lock
insb
rolb
mov
addb
in
sub
out
aam
sbb
mov
ficomps
stos
pop
scas
mov
cmp
dec
out
push
insl
xchg
fisubrs
add
jno
add
sbb
add
addb
jp
mov
pop
icebp
jne
jg
rcrl
cld
bound
mov
sbbl
addr16
xchg
mov
adc
mov
mov
or
adc
les
xor
mov
xor
decl
pop
adc
mov
jge
in
dec
lock
sub
add
arpl
mov
sti
or
pop
hlt
pop
add
mov
add
loope
rolb
ds
repz
movsl
add
mov
scas
dec
stos
jp
notl
add
ficoml
add
cmp
negl
xchg
movsl
xlat
gs
adc
cmp
dec
mov
xor
inc
xlat
in
sbbl
in
and
inc
dec
xor
rolb
mov
jb
mov
inc
mov
mov
add
scas
cs
cmp
addl
out
fwait
mov
fisubrs
push
add
aad
jge
ret
dec
mov
xor
mov
cmp
and
mov
pop
stc
ja
add
cmc
xor
sbb
add
add
push
iret
call
mov
sub
add
dec
sbb
sub
add
mov
mov
pop
xchg
mov
test
pop
jecxz
mov
push
scas
sub
pop
push
andl
add
mov
lret
add
lret
push
data16
cmpsl
xchg
arpl
add
mov
xor
mov
pop
jo
mov
mov
movsl
pop
jmp
inc
add
testl
sub
xor
mov
pop
xlat
inc
ja
xor
xchg
orl
imul
mov
add
xchg
sub
add
dec
jmp
int
sti
add
mov
add
into
addr16
mov
xlat
xchg
and
add
adc
mov
or
sti
or
push
add
or
arpl
mov
sbb
inc
inc
add
mov
add
ja
lahf
call
jne
adc
clc
pop
fimull
push
shll
xor
mull
mov
shll
xchg
mov
bound
mov
mov
mov
jp
dec
jmp
mov
add
stos
xor
add
clc
in
push
mov
mov
push
push
cli
enter
mov
sub
adc
mov
inc
jmp
aad
bound
mov
add
inc
xor
push
insl
addb
mov
lds
jno
and
add
mov
test
clc
je
xor
imul
shl
addb
ljmp
sub
add
and
mov
leave
sbb
add
mov
and
mov
add
imul
add
jle
mov
mov
inc
mov
add
and
mov
fcompl
xchg
rolb
pop
pop
nop
add
inc
mov
mov
cli
sbb
movsb
adc
loopne
mov
jne
xor
jge,pt
push
aam
and
add
mov
push
sub
or
add
lcall
add
imul
add
dec
inc
and
mov
add
mov
mov
mov
lea
jno
testl
add
loop
mov
bound
mov
mov
out
mov
adc
mov
fwait
int3
xchg
mov
mov
and
mov
fcmovu
fists
add
mov
adc
dec
leave
xlat
hlt
mov
clc
mov
cmp
in
inc
dec
in
aad
lods
sub
jne
jg
or
add
adc
jns
add
jp
or
addb
orl
sbb
sub
rolb
mov
dec
stos
call
or
ret
loop
mov
dec
sbb
cmp
pop
and
mov
add
jbe
add
inc
jnp
les
mov
out
or
add
sbb
add
cmp
out
das
sub
leave
sub
lret
adc
mov
loopne
mov
repz
out
loop
mov
fsubs
add
test
and
mov
add
cld
mov
xor
mov
mov
inc
xchg
loope
add
pop
mov
add
add
add
mov
mov
pop
mov
mov
sar
pop
hlt
add
mov
addr16
in
xchg
lret
mov
cld
sti
ss
jp
add
cs
adc
push
add
js
pop
push
xchg
dec
pop
push
or
sub
outsb
xor
mov
in
sub
xor
mov
push
mov
add
pop
lock
jg
or
add
aas
xchg
adc
cltd
cwtl
aaa
test
mov
inc
std
ss
pop
negl
or
inc
stos
insl
sbb
mov
push
pop
mov
xchg
add
mov
mov
mov
add
es
mov
cmc
scas
cmc
mov
icebp
jb
mov
xchg
add
jb
mov
aam
add
bound
mov
icebp
bswap
push
pop
inc
lcall
add
inc
sub
push
les
into
das
ljmp
push
adc
mov
repz
insb
adc
mov
add
aas
cmc
mov
xorl
or
jp
mov
lods
loope
push
ror
add
cmpsb
mov
sub
xchg
fsubr
addb
decl
dec
outsb
out
mov
repnz
enter
popa
fucomi
pop
xchg
mov
test
add
add
add
in
cmp
fsubrl
add
add
pop
aad
pop
add
add
outsl
lcall
and
mov
sbb
inc
fucomip
xchg
outsb
fs
mov
push
add
mov
mov
xor
idiv
or
mov
ljmp
popa
lret
fistpll
sbb
cmpsl
adc
mov
sub
dec
popf
mov
popf
jbe
sbb
lods
shrl
push
sbb
sbb
add
sti
xchg
jmp
mov
out
test
je
add
stos
cwtl
or
push
into
je
pop
ss
jle
push
xchg
xchg
add
mov
add
lret
movsb
mov
xchg
add
inc
pop
cmp
cmp
gs
push
sbb
ljmp
pop
aaa
pop
mov
add
ss
mov
inc
inc
pop
leave
add
popf
das
loop
mov
out
rolb
inc
jo
mov
add
add
cld
std
mov
mov
loop
mov
xchg
pushf
adc
mov
xor
mov
and
mov
repnz
add
incb
les
out
pop
addr16
or
mov
mov
add
inc
cmp
mov
cltd
fdivl
loop
mov
fisttps
jae
add
and
lcall
jp
ja
fs
aam
lcall
testl
imul
pop
sub
add
mov
add
add
mov
popa
xchg
and
add
test
icebp
and
mov
aas
testl
cli
pop
aam
jg
jne
fcomps
mov
leave
test
mov
mov
cmp
mov
fdivrs
sub
out
in
sbb
bound
mov
dec
cltd
xchg
dec
enter
lahf
loop
mov
ret
shll
mov
and
push
add
jmp
pop
hlt
dec
sub
rolb
mov
add
mov
fwait
jnp
jo
mov
int3
in
xchg
bound
mov
jo
mov
insl
mov
push
cmp
arpl
cmp
clc
lods
and
add
mov
add
push
lea
iret
and
pop
lea
enter
loop
mov
mov
and
or
in
inc
pop
js
inc
add
sub
mov
dec
jge
aas
ljmp
dec
loopne
mov
ffreep
in
inc
push
mov
dec
mov
add
les
cmp
pusha
add
inc
cmp
ss
mov
fildl
mov
sub
add
ja
pop
jns
add
cltd
scas
out
and
add
adc
mov
outsl
and
pop
jecxz
xchg
sub
test
addr16
movlps
pusha
add
or
sbb
xchg
cli
fnstsw
or
aaa
fisttpl
dec
roll
xchg
mov
call
sub
addb
jg
add
mov
pushf
insl
pop
or
aam
add
or
mov
popa
mov
outsl
cmp
insl
clc
adc
push
fadd
ljmp
add
ja
jp
cmpsb
cs
pop
mov
mov
push
add
add
mov
mov
add
mov
test
js
pop
push
ja
stc
pop
xor
insb
loopne
mov
jae
add
jp
mov
fwait
xchg
test
add
jl
ret
sarl
lret
rolb
mov
in
pushf
repnz
cmp
cltd
xchg
xchg
dec
mov
sbb
push
add
out
rolb
mov
icebp
std
adc
imul
push
loopne
mov
xor
dec
jp
sub
add
mov
cmp
insl
jns
add
add
ljmp
leave
lahf
xchg
sub
add
mov
push
add
cmp
add
mov
movsb
test
sbb
cwtl
mov
pop
stc
scas
xor
and
test
add
pop
mov
addb
dec
cmp
add
cltd
push
inc
sbb
and
add
mov
lahf
test
insb
sti
mov
add
jg
and
mov
jne
jle
adc
add
mov
scas
push
push
stos
adc
loop
mov
aam
add
mov
data16
cmc
es
adc
add
mov
mov
sbb
mov
stc
cmp
aam
sub
lds
add
jle
dec
int3
mov
pop
sub
imul
xor
mov
mov
add
call
add
push
xchg
add
and
in
push
iret
sbb
mov
pop
sbb
xor
add
inc
call
addb
xor
xchg
cmp
mov
add
fmul
scas
lret
add
push
mov
pusha
add
ret
out
mov
std
ljmp
cmpsl
push
push
jmp
push
mov
rolb
sub
movsb
jp
gs
das
jle
lock
or
dec
jp
movsb
lahf
lahf
sbb
push
pop
or
repnz
mov
mov
out
es
jno
dec
iret
testl
repz
stc
or
add
lret
adc
cmc
xor
add
add
adc
pop
xchg
push
sbb
sbb
cwtl
mov
sub
mov
daa
bsr
std
mov
add
add
scas
mov
fucomip
and
mov
ret
cmp
add
add
pop
rcll
add
xchg
loopne
mov
loope
pop
lea
scas
jmp
mov
mov
es
in
fstl
add
imul
jp
fadd
add
popa
orl
mov
std
bound
mov
jle
add
fcoms
mov
ret
jmp
div
cmc
mov
leave
das
sub
int
fstl
add
ret
jo
mov
lds
add
stos
xchg
out
pop
jns
cmpsl
cli
cmp
xchg
xor
jp
mov
sub
fcmovnbe
scas
xor
mov
rolb
mov
pop
cmp
mov
cltd
sbb
lods
lahf
pop
arpl
outsb
sti
or
sub
hlt
ljmp
aaa
sbb
jecxz
cli
cmp
in
sbb
xchg
faddl
aas
pop
and
leave
in
xor
mov
sub
shll
dec
mov
lock
jp
sub
adc
aaa
fcompl
push
ret
dec
push
stc
ret
insl
dec
out
inc
add
add
and
push
addb
xchg
cmpsb
and
ds
pop
sub
es
mov
data16
jmp
mov
pop
paddsw
rcr
adc
mov
add
adc
push
xor
dec
bound
mov
dec
cmpsl
push
push
inc
add
jecxz
es
jecxz,pn
and
mov
loop
mov
add
mov
add
jbe
mov
push
add
mov
dec
mov
xlat
cmc
jne
ret
push
push
stc
add
fisttpl
xchg
cmp
test
inc
mov
jb
mov
mov
jne
add
mov
jne
shll
mov
mov
adc
mov
pop
cs
dec
lods
jmp
or
mov
loope
add
popa
lahf
sub
mov
mov
rolb
mov
jl
movsb
or
pop
dec
les
mov
push
rolb
mov
adc
addb
shll
add
popf
neg
movl
lock
add
add
inc
mov
pop
cmpsb
push
pop
popf
cmp
add
outsl
addb
and
mov
mov
sbb
imul
mov
outsb
push
pop
loop
mov
or
mov
mov
dec
sahf
sub
sub
mov
xorl
add
filds
mov
and
pop
mov
addb
in
movsl
incb
mov
loopne
mov
mov
mov
add
pop
nop
add
addr16
aad
fcompl
enter
stc
or
insb
fwait
clc
xchg
cwtl
stos
xchg
scas
mov
pop
addb
inc
sahf
pusha
add
inc
cmpsb
xchg
add
add
rolb
mov
mov
in
repz
add
mov
add
ficompl
cmc
push
jae
in
or
add
sti
cli
pop
xchg
pop
dec
call
push
aam
pop
mov
jb
mov
mov
jmp
lahf
adc
mov
dec
jo
mov
out
pop
cmp
mov
mov
cltd
xchg
iret
mov
mov
add
int3
bound
mov
call
add
lea
mov
jo
mov
add
mov
inc
add
mov
ret
stos
and
mov
iret
pop
xlat
decl
inc
xor
mov
jo
mov
cmpsl
addl
sub
nop
add
pop
out
add
dec
std
fdivrs
sub
mov
or
loope
adc
add
dec
lock
fimuls
mov
xlat
cmpl
leave
repz
add
add
mov
lock
or
jne
add
add
cltd
xchg
int3
addb
jle
xchg
mov
or
sub
push
arpl
push
add
dec
mov
add
sbb
and
movsl
mulb
xchg
mov
sub
or
add
inc
xor
sahf
inc
movsl
sub
add
stc
dec
cmp
adc
mov
fiaddl
inc
jo
mov
fs
add
add
adc
add
dec
inc
or
and
mov
daa
shll
xchg
test
dec
pop
rolb
and
lock
add
cmp
sahf
xchg
or
repz
adc
add
pcmpgtw
imul
orl
adc
mov
pushf
movsl
sbb
sub
divb
jne
lods
gs
xlat
sahf
cmp
and
add
push
pop
sbb
mov
lret
mov
mov
add
mov
and
mov
pop
push
mov
hlt
lcall
cmp
xchg
xor
mov
add
cmp
mov
lds
in
addb
mov
add
js
jl
pusha
add
out
lea
mov
stos
addb
pusha
add
jbe
add
xlat
lea
jb
mov
jno
sub
adc
mov
cmp
sub
push
cmp
std
mov
add
sbb
add
js
dec
and
add
cmp
add
ss
jle
sti
out
lret
outsl
in
and
mov
dec
xchg
mov
rolb
mov
repz
das
imull
inc
mov
fdiv
int
daa
imul
jbe
imul
and
mov
push
add
aam
dec
cmc
push
cmp
inc
xchg
push
pop
and
mov
add
popa
sub
jl
push
xor
mov
cli
pop
cmpsl
addl
xor
add
mov
nop
add
dec
adc
adc
lock
sbb
mov
mov
mov
dec
fidivrs
and
mov
ret
or
subl
jns
fidivrs
xor
add
add
das
mov
mov
push
cli
scas
shll
add
pop
mov
or
jmp
jle
fsubl
pop
pop
aam
popf
aas
mov
add
adc
mov
jge
jae
add
pushl
lds
add
hlt
loope
jno
inc
add
jns
cmpsb
rolb
mov
sbb
cmp
fadd
pop
xor
cmp
lods
popa
sbb
fists
in
inc
add
lahf
cmpl
repz
out
hlt
sub
leave
sahf
mov
push
add
lcall
fwait
std
add
pop
mov
sbb
addb
adc
rolb
mov
add
cli
fcomps
add
push
int3
gs
mov
mov
imul
add
ret
mov
dec
xor
mov
add
rolb
mov
add
or
add
xor
or
pusha
add
out
add
setne
in
adc
mov
cs
ficomps
iret
fdivr
sub
push
mov
int
adc
lock
dec
cmp
jge
lds
rolb
mov
push
push
test
out
pop
add
mov
mov
inc
and
mov
add
add
add
fisubl
mov
mov
outsl
push
mov
add
mov
mov
int
cmp
add
clc
mov
mov
fistpl
bound
mov
add
mov
arpl
add
mov
aas
inc
lods
push
add
mov
add
mov
pusha
add
jle
add
in
mov
pop
mov
cli
jecxz
popa
addl
add
mov
and
or
push
rolb
insb
and
mov
jae
add
push
sbb
add
push
add
lret
insl
or
aam
add
mov
and
mov
and
lea
mov
and
mov
icebp
test
pop
add
add
data16
mov
add
mov
mov
fs
insb
or
cmc
push
dec
dec
mov
cmp
add
xor
mov
mov
inc
mov
mov
in
add
in
lock
cmp
mov
inc
add
xlat
push
add
add
mov
lret
add
mov
add
jns
lcall
sahf
mov
mov
cmp
jbe
pop
mov
addb
and
add
sub
iret
push
inc
sub
out
add
xor
push
xor
ljmp
push
and
js
ret
das
xor
mov
dec
and
add
cmp
mov
lcall
mov
sub
xchg
daa
in
test
add
in
or
das
arpl
mov
mov
icebp
sub
xchg
icebp
fcmovu
pop
jge
sarl
bound
mov
int
enter
dec
shll
inc
mov
mov
and
mov
arpl
add
test
mov
jae
push
add
lret
test
add
out
in
pushf
cmp
enter
mov
out
add
mov
add
dec
call
lret
mov
fdivs
ljmp
mov
adc
rcll
mov
mov
inc
add
jns
sub
rcrl
push
ud2
push
dec
rolb
fnstenv
jae
aam
dec
sbb
popa
and
mov
xchg
mov
cmpsl
gs
cli
out
push
lret
je
roll
and
add
push
jle
lret
mov
mov
mov
mov
xchg
ds
xchg
mov
mov
es
sbb
mov
nop
add
mov
negb
sub
mov
xor
mov
mov
fstps
xor
mov
mov
xor
test
mov
add
mov
mov
push
dec
inc
add
mov
mov
pop
cmpsb
jl
fimull
std
dec
xchg
cmpsb
add
mov
lods
jo
mov
sti
inc
mov
es
addb
inc
add
or
das
nop
add
dec
xchg
fidivs
mov
lret
pop
mov
iret
ret
mov
add
jnp
iret
pop
lods
xchg
jge
test
pop
ficompl
mov
insl
push
jg
xchg
ret
add
mov
hlt
loopne
mov
add
sbb
pop
xor
mov
inc
fldt
in
add
cwtl
and
mov
das
lcall
mov
add
and
inc
mov
adc
outsl
adc
xor
pop
jbe
notb
jmp
loopne
mov
out
push
out
add
out
fwait
sub
add
sbb
push
popf
cli
xor
inc
in
add
mov
pop
and
xchg
repnz
stos
les
pop
stos
je
lret
div
je
ja
sbb
iret
push
add
and
and
mov
mov
mov
add
mov
pusha
add
sbb
popf
cmp
iret
jbe
iret
sbb
add
mov
rolb
mov
mov
xor
lock
stos
jmp
imul
loop
mov
or
xchg
add
push
movsb
ds
inc
add
push
sub
arpl
mov
orl
push
jmp
fcmovbe
jnp
lret
inc
addb
add
mov
aad
out
lock
xchg
push
add
mov
cmp
xlat
arpl
adc
dec
cmp
and
mov
inc
fs
test
arpl
mov
mov
add
add
mov
xchg
pop
jp
add
jbe
lods
pop
jl
inc
dec
sbb
mov
jb
mov
add
lahf
cmpsl
xchg
sbb
mov
stos
les
and
mov
mov
add
mov
and
jne
jle
mov
fadds
add
fbld
mov
jo
mov
and
mov
popf
xor
cs
jbe
stos
sbb
mulb
mov
mov
gs
or
test
push
add
jo
mov
jl
xchg
and
mov
and
sub
add
cmp
loopne
mov
inc
add
or
roll
addb
std
mov
mov
dec
js
imul
mov
and
pop
fwait
nop
add
repz
rolb
mov
xchg
subl
outsl
scas
push
jb
mov
add
xchg
fnstcw
pusha
add
push
jecxz
lods
xchg
fsubrl
xor
add
test
in
mov
dec
mov
add
mov
lret
sbb
inc
add
test
ja
push
jge
pop
mov
xchg
jb
mov
cmp
push
orl
pop
push
or
popa
lret
cwtl
rolb
mov
push
stos
jno
add
or
inc
stos
pop
push
lret
sub
add
xchg
fcomps
push
xchg
lods
insb
mov
mov
das
sbb
dec
jmp
iret
enter
mov
sbb
jg
negl
add
add
lds
call
push
add
test
xor
fsubrl
sub
leave
mov
paddsw
mov
dec
sub
in
push
cmp
add
imul
mov
cwtl
jnp
das
pop
lock
mov
popa
jnp
add
cltd
lods
ja
jnp
adc
mov
mov
mov
dec
cmp
ja
sub
sub
das
adc
or
out
mov
test
fmuls
fdivl
popf
mov
add
mov
xlat
inc
call
mov
in
ja
cli
sti
ss
add
xor
mov
mov
andps
scas
test
xchg
push
pop
cld
test
pop
gs
out
pop
bound
mov
sub
mov
inc
popl
out
sahf
pop
add
mov
push
aaa
mov
insl
not
add
pop
jle
es
loop
mov
add
mov
aas
xchg
push
stos
rolb
mov
popa
xchg
xchg
popa
clc
mov
mov
outsl
mov
add
fnstcw
pop
int
shll
gs
lock
faddl
addb
xchg
mov
mov
mov
xchg
int3
js
fwait
dec
aam
jp
xchg
outsl
or
adc
mov
add
xchg
arpl
roll
push
jmp
mov
mov
mov
clc
repnz
nop
cld
jae
add
and
test
repnz
nop
cld
jae
pop
add
mov
nop
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
push
add
add
add
int
das
mov
clc
repnz
nop
cld
jae
add
push
mov
repnz
nop
cld
jae
aad
movsb
mov
push
clc
repnz
nop
cld
jae
add
add
cmp
and
add
sahf
in
add
add
pop
mov
aad
add
jmp
nop
cld
jae
add
push
call
jne
push
mov
xchg
ret
push
add
inc
sbb
test
add
push
mov
nop
leave
jmp
enter
adc
popa
add
mov
xchg
ret
imul
adc
mov
leave
push
mov
nop
leave
jmp
jmp
push
add
push
clc
repnz
nop
cld
jae
add
add
and
add
nop
nop
cld
jae
loope
adc
loopne
packssdw
sub
repnz
nop
cld
jae
add
push
jmp
adc
add
pusha
test
loope
adc
aas
pushl
push
mov
xchg
ret
add
add
aad
imul
nop
cld
jae
add
add
inc
leave
call
clc
repnz
nop
cld
jae
pop
add
mov
add
clc
repnz
nop
cld
jae
adc
test
mov
mov
clc
repnz
nop
cld
jae
pusha
mov
outsb
adc
xchg
adcl
mov
xchg
ret
add
add
add
rolb
mov
push
clc
repnz
nop
cld
jae
and
push
adc
loopne
inc
jo
mov
mov
push
mov
nop
leave
jmp
add
loopne
add
push
clc
repnz
nop
cld
jae
and
add
or
add
in
nop
leave
jmp
add
movl
mov
xchg
ret
add
add
add
add
or
push
mov
xchg
ret
and
repnz
loope
fs
add
clc
repnz
nop
cld
jae
add
ret
subl
nop
cld
jae
stos
add
int
lods
add
push
clc
repnz
nop
cld
jae
movb
add
pop
mov
push
mov
nop
leave
jmp
repnz
add
ds
andl
mov
rolb
add
mov
lcall
sbb
nop
nop
cld
jae
add
int
imul
inc
and
clc
repnz
nop
cld
jae
stos
add
push
mov
add
push
mov
nop
leave
jmp
enter
imul
nop
nop
cld
jae
ds
add
push
add
pop
and
mov
arpl
mov
je
clc
repnz
nop
cld
jae
sbb
jmp
pop
clc
repnz
nop
cld
jae
cmp
add
push
adc
jmp
flds
add
repnz
nop
cld
jae
add
test
mov
clc
repnz
nop
cld
jae
add
push
insb
pop
clc
repnz
nop
cld
jae
and
repnz
add
cmp
sbb
repnz
nop
cld
jae
loopne
movsb
mov
repnz
ret
add
add
clc
repnz
nop
cld
jae
outsb
add
in
mov
pop
mov
or
add
leave
push
mov
xchg
ret
je
add
add
add
or
in
nop
leave
jmp
push
and
clc
repnz
nop
cld
jae
insb
add
adc
aad
in
jne
clc
repnz
nop
cld
jae
cmpsb
add
push
push
mov
xchg
ret
lea
pusha
add
int
loope
cltd
add
push
mov
xchg
ret
sub
add
add
outsb
fs
jae
clc
repnz
nop
cld
jae
call
lcall
int3
inc
add
add
je
push
push
nop
nop
cld
jae
xor
push
add
lret
inc
add
inc
repnz
xor
inc
clc
repnz
nop
cld
jae
dec
xor
push
and
sub
clc
repnz
nop
cld
jae
pusha
push
mov
mov
nop
leave
jmp
lods
pop
ret
add
aaa
out
mov
push
mov
nop
leave
jmp
aas
ds
and
es
clc
repnz
nop
cld
jae
adc
rep
clc
repnz
nop
cld
jae
imul
xor
add
add
add
outsb
add
loopne
add
add
add
mov
xchg
ret
add
insb
xor
int
cmp
or
rclb
jmp
and
add
add
add
push
push
mov
xchg
ret
xor
add
lea
add
cmc
dec
lea
push
mov
xchg
ret
add
add
and
test
daa
add
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
loopne
add
add
push
sub
mov
cmp
ret
add
cmpsb
inc
add
add
add
mov
xchg
ret
add
cmp
sbb
repnz
nop
cld
jae
outsb
add
add
add
lods
adc
push
mov
add
and
mov
add
in
sub
aas
dec
clc
repnz
nop
cld
jae
add
push
add
add
clc
repnz
nop
cld
jae
and
add
sub
clc
repnz
nop
cld
jae
loope
add
adc
xor
clc
repnz
nop
cld
jae
add
add
add
in
ror
push
mov
xchg
ret
sbb
and
aad
repz
dec
or
mov
xchg
ret
je
and
jmp
adc
repnz
nop
cld
jae
popl
add
add
stos
clc
repnz
nop
cld
jae
add
sbb
cmp
rolb
pop
mulb
inc
fiadds
xchg
ret
add
mov
and
sbb
loopne
add
add
clc
repnz
nop
cld
jae
sbb
and
jne
add
push
mov
nop
leave
jmp
push
ret
int
add
lods
mov
jb
repnz
nop
cld
jae
add
add
cmp
jne
clc
repnz
nop
cld
jae
inc
xor
cmpsb
jmp
or
repnz
nop
cld
jae
imul
repnz
nop
cld
jae
add
add
call
cmp
repnz
nop
cld
jae
add
mov
aas
mov
push
mov
xchg
ret
adc
add
sbb
add
xor
clc
repnz
nop
cld
jae
stos
test
add
repnz
repnz
nop
cld
jae
and
push
push
enter
add
add
cmpsb
add
je
mov
clc
repnz
nop
cld
jae
aas
push
add
add
push
mov
aam
into
jae
imul
add
jbe
add
mov
nop
cld
jae
add
add
jg
int
pop
jae
repnz
nop
cld
jae
bnd
add
mov
nop
leave
jmp
add
push
push
mov
add
in
nop
leave
jmp
add
insb
stos
jae
rep
clc
repnz
nop
cld
jae
push
add
divb
jb
clc
repnz
nop
cld
jae
push
push
mov
push
mov
nop
leave
jmp
test
add
add
mov
xchg
ret
xor
repnz
and
aas
add
inc
and
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
add
test
push
mov
xchg
ret
cmpsb
loopne
add
add
add
add
clc
repnz
nop
cld
jae
adc
adc
addb
jle
inc
lock
mov
xchg
ret
push
cmp
ret
repz
xor
mov
add
clc
repnz
nop
cld
jae
outsb
outsb
add
sub
add
pop
jmp
and
push
mov
pop
add
cmp
push
mov
nop
leave
jmp
ds
add
add
add
push
mov
nop
leave
jmp
test
test
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
xchg
ret
add
mov
add
cmp
push
clc
repnz
nop
cld
jae
pop
test
stos
lret
hlt
add
in
nop
leave
jmp
xor
lea
add
imul
mov
xchg
ret
add
add
add
in
and
jecxz
call
push
mov
nop
leave
jmp
add
and
int
test
mov
push
mov
xchg
ret
inc
cmpsb
xor
mov
inc
and
clc
repnz
nop
cld
jae
add
xor
mov
dec
clc
repnz
nop
cld
jae
add
add
cmp
add
add
in
nop
leave
jmp
add
add
cmp
fimull
mov
nop
leave
jmp
add
add
add
add
or
fstp
inc
add
pop
call
add
jl
push
mov
nop
leave
jmp
inc
xor
dec
add
repnz
nop
cld
jae
add
and
mov
push
mov
xchg
ret
push
inc
cmpsb
and
test
add
loopne
mov
xchg
ret
add
ret
ret
outsl
push
mov
rolb
adc
add
stos
ror
xchg
adcb
add
cmp
clc
repnz
nop
cld
jae
jmp
and
fildl
jne
clc
repnz
nop
cld
jae
add
add
xor
repnz
nop
cld
jae
push
add
add
adc
repnz
nop
cld
jae
add
cmpsb
add
add
mov
add
add
clc
repnz
nop
cld
jae
and
add
rolb
mov
xorl
jl
popa
add
mov
nop
leave
jmp
inc
add
and
cmpsb
xor
jmp
stos
clc
repnz
nop
cld
jae
inc
imul
movsl
into
je
clc
repnz
nop
cld
jae
add
leave
je
clc
repnz
nop
cld
jae
ds
inc
cwtl
shr
clc
repnz
nop
cld
jae
repnz
add
add
push
mov
nop
leave
jmp
adc
push
xor
add
nop
cld
jae
and
push
add
add
add
repz
mov
nop
leave
jmp
pop
add
loope
add
push
movb
cmp
ret
add
add
add
add
dec
jmp
clc
repnz
nop
cld
jae
add
loope
mov
add
les
clc
repnz
nop
cld
jae
pop
loope
mov
rolb
mov
push
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
aad
int
add
aas
pop
push
mov
nop
leave
jmp
add
sbb
loope
adc
test
nop
nop
cld
jae
cmpsb
cmp
call
push
mov
nop
leave
jmp
push
loope
add
jp
push
mov
xchg
ret
jmp
add
mov
push
add
dec
repnz
repnz
jmp
add
test
clc
repnz
nop
cld
jae
loopne
add
imul
repz
repnz
nop
cld
jae
add
adc
xlat
inc
sub
popa
add
repnz
nop
cld
jae
xor
lea
add
outsb
sub
push
mov
nop
leave
jmp
repnz
cmp
nop
cld
jae
add
imul
imulb
test
idiv
clc
repnz
nop
cld
jae
outsb
xor
or
clc
repnz
nop
cld
jae
outsb
add
add
add
jb
mov
add
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
add
add
jmp
test
push
mov
nop
leave
jmp
adc
inc
call
ret
clc
repnz
nop
cld
jae
and
enter
add
adc
pop
fmull
mov
nop
nop
cld
jae
add
adc
add
mov
clc
repnz
nop
cld
jae
test
add
adc
inc
add
add
push
add
mov
push
sub
add
xlat
loope
add
pusha
add
add
clc
repnz
nop
cld
jae
add
add
add
pop
pusha
addr16
or
clc
repnz
nop
cld
jae
call
stc
mov
clc
repnz
nop
cld
jae
xor
xor
add
sub
push
mov
nop
leave
jmp
mov
add
jmp
add
cmp
add
repnz
nop
cld
jae
test
div
clc
repnz
nop
cld
jae
add
aas
cmpsb
add
test
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
push
add
add
nop
nop
cld
jae
movb
imul
clc
repnz
nop
cld
jae
add
adc
add
add
clc
repnz
nop
cld
jae
ret
add
inc
jge
dec
outsl
popa
fs
repnz
nop
cld
jae
sbb
add
jno
addb
mov
mov
nop
leave
jmp
lods
add
add
mov
push
mov
nop
leave
jmp
inc
add
movl
fdivrp
repnz
nop
cld
jae
mov
add
and
inc
insl
push
push
mov
xchg
ret
ret
add
ret
insl
pusha
push
mov
xchg
ret
mov
and
mov
push
mov
xchg
ret
add
pop
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
lods
add
pop
mov
nop
nop
cld
jae
je
and
cmp
push
mov
nop
leave
jmp
add
xor
inc
call
cld
jae
inc
add
and
idivb
add
push
mov
nop
leave
jmp
lods
push
add
mov
clc
repnz
nop
cld
jae
test
add
addb
adc
mov
call
clc
repnz
nop
cld
jae
add
dec
add
add
add
repnz
nop
cld
jae
pop
push
or
in
nop
leave
jmp
jmp
ret
int
cltd
mov
push
mov
nop
leave
jmp
add
pop
push
mov
nop
leave
jmp
add
add
mov
add
enter
nop
cld
jae
add
add
add
aas
outsb
mov
clc
repnz
nop
cld
jae
dec
and
cmp
fcompl
mov
xchg
ret
add
imul
pop
add
add
repnz
nop
cld
jae
xor
add
push
push
mov
nop
leave
jmp
xor
imul
js
repz
mov
nop
leave
jmp
xor
test
outsl
call
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
je
imul
pop
pushl
clc
repnz
nop
cld
jae
repnz
adc
test
pop
clc
repnz
nop
cld
jae
add
add
mov
ret
push
mov
nop
leave
jmp
add
add
int
add
mov
mov
nop
nop
cld
jae
add
add
and
add
sahf
jmp
and
aad
cmpsb
add
xchg
pusha
add
adc
fcom
inc
add
add
inc
shl
mov
push
mov
nop
leave
jmp
add
add
sbb
inc
flds
jmp
mov
xchg
ret
add
push
add
mov
push
mov
xchg
ret
cmp
xor
inc
add
jne
xor
clc
repnz
nop
cld
jae
pusha
jmp
ds
mov
mov
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
call
add
insb
pusha
add
and
clc
repnz
nop
cld
jae
add
insb
add
mov
clc
repnz
nop
cld
jae
int
movb
hlt
fwait
lea
clc
repnz
nop
cld
jae
add
pop
int
mov
pop
stc
clc
repnz
nop
cld
jae
mov
jp
add
add
clc
repnz
nop
cld
jae
pop
add
add
movzwl
clc
repnz
nop
cld
jae
add
xor
add
std
add
clc
repnz
nop
cld
jae
pusha
ret
and
out
sbb
cld
jae
add
loope
lods
mov
clc
repnz
nop
cld
jae
aad
add
test
xchg
filds
xchg
ret
add
add
pop
lods
push
lock
xor
add
clc
repnz
nop
cld
jae
add
push
cmp
sar
mov
xchg
ret
add
add
add
add
add
clc
repnz
nop
cld
jae
cmp
add
push
add
shl
rolb
sub
push
mov
xchg
ret
adc
aad
call
subl
nop
nop
cld
jae
add
pop
aas
add
clc
repnz
nop
cld
jae
je
add
add
les
popa
push
mov
xchg
ret
stos
ret
add
daa
jl
xabort
nop
nop
cld
jae
mov
call
push
mov
nop
leave
jmp
ds
add
popl
clc
repnz
nop
cld
jae
test
or
repnz
nop
cld
jae
add
add
add
int3
push
clc
repnz
nop
cld
jae
cmpsb
sub
add
aas
adc
pop
push
mov
add
add
add
mov
mov
nop
leave
jmp
add
popl
insb
fbld
repnz
nop
cld
jae
dec
pop
loopne
add
outsb
pusha
repz
test
add
clc
repnz
nop
cld
jae
push
add
pop
push
mov
nop
leave
jmp
pop
push
cmp
jmp
int
add
add
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
add
add
inc
jno
testl
push
mov
nop
leave
jmp
xor
add
mov
repnz
nop
cld
jae
add
inc
mov
pop
add
push
mov
nop
leave
jmp
add
push
sbb
aas
add
add
mov
xchg
ret
pop
ret
call
push
add
mov
clc
repnz
nop
cld
jae
sbb
add
xchg
scas
pop
push
mov
nop
leave
jmp
sbb
pop
add
add
add
in
nop
leave
jmp
outsb
add
xor
add
es
rep
clc
repnz
nop
cld
jae
add
dec
push
xchg
aaa
xor
sbb
in
nop
leave
jmp
add
add
add
push
mov
xchg
ret
outsb
add
aad
cmpsb
aas
dec
xor
clc
repnz
nop
cld
jae
add
add
inc
int
popa
add
mov
xchg
ret
add
and
iret
xchg
clc
repnz
nop
cld
jae
jmp
test
add
clc
repnz
nop
cld
jae
add
inc
movsb
dec
movb
imulb
cmc
clc
repnz
nop
cld
jae
dec
push
enter
nop
cld
jae
add
add
add
add
push
clc
repnz
nop
cld
jae
add
adc
push
call
clc
repnz
nop
cld
jae
call
imulb
jmp
in
inc
add
add
add
icebp
cld
call
in
nop
leave
jmp
sbb
ret
mov
push
mov
xchg
ret
insb
call
add
clc
repnz
nop
cld
jae
add
sbb
add
mov
nop
leave
jmp
sbb
add
cmpsl
mov
sub
clc
repnz
nop
cld
jae
add
test
mov
add
repnz
nop
cld
jae
inc
ret
lcall
nop
nop
cld
jae
pop
and
and
xchg
test
add
clc
repnz
nop
cld
jae
add
ds
leave
jmp
add
add
stos
dec
add
inc
mov
mov
xchg
ret
add
enter
repnz
mov
clc
repnz
nop
cld
jae
and
adc
imul
cld
jae
repnz
push
push
mov
xchg
ret
cmpsb
popl
add
aad
loopne
popa
and
mov
mov
cli
mov
push
mov
nop
leave
jmp
add
add
push
call
nop
nop
cld
jae
adc
mov
bnd
mov
nop
leave
jmp
add
add
add
es
push
push
mov
xchg
ret
mov
pop
add
add
call
call
and
add
outsb
adc
repnz
add
xor
xor
jmp
incl
add
add
push
lahf
add
clc
repnz
nop
cld
jae
add
add
inc
test
pop
add
add
in
nop
leave
jmp
mov
add
and
mov
nop
leave
jmp
jmp
add
lods
push
inc
push
das
cld
clc
repnz
nop
cld
jae
aad
add
andl
dec
push
mov
nop
leave
jmp
and
cmp
push
lods
add
or
push
mov
nop
leave
jmp
ds
push
repnz
nop
cld
jae
adc
add
ret
popa
add
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
test
mov
add
cmp
clc
repnz
nop
cld
jae
aad
add
xchg
loope
test
push
mov
nop
leave
jmp
test
loope
add
xor
clc
repnz
nop
cld
jae
add
aad
add
repnz
nop
cld
jae
add
adc
add
xor
dec
ss
clc
repnz
nop
cld
jae
repnz
jmp
adc
add
ret
aad
lods
cmp
movsb
jl
mov
adc
repnz
nop
cld
jae
add
add
push
cmp
add
repnz
nop
cld
jae
movl
repnz
nop
cld
jae
push
cmp
inc
push
int
push
mov
add
repnz
nop
cld
jae
add
mov
xchg
ret
pop
int
add
jmp
nop
cld
jae
add
stos
add
inc
add
and
add
mov
xchg
ret
add
inc
add
add
add
add
and
repnz
nop
cld
jae
add
add
push
mov
clc
repnz
nop
cld
jae
add
cmp
push
mov
nop
leave
jmp
movl
mov
jmp
test
sub
repnz
adc
add
pop
push
mov
xor
add
add
push
xor
add
fmull
nop
cld
jae
adc
add
int
add
inc
add
cmpl
cld
jae
add
pusha
add
mov
clc
repnz
nop
cld
jae
movb
test
rcll
nop
leave
jmp
loope
add
pop
add
add
movl
pusha
add
add
inc
sbb
add
mov
or
repnz
nop
cld
jae
adc
add
sti
add
add
in
nop
leave
jmp
add
lcall
int3
add
sahf
inc
sbb
add
sar
repnz
nop
cld
jae
enter
add
lods
sub
nop
nop
cld
jae
cmpsb
dec
adc
add
add
add
les
test
int
and
loope
jne
push
mov
nop
leave
jmp
add
push
add
add
repnz
nop
cld
jae
repnz
xor
adc
xor
mov
inc
clc
repnz
nop
cld
jae
add
aas
sbb
add
add
clc
call
in
nop
leave
jmp
add
add
in
mov
clc
repnz
nop
cld
jae
xor
add
add
pop
pop
mov
clc
repnz
nop
cld
jae
add
mov
and
push
mov
xchg
ret
and
jmp
mov
mull
repnz
nop
cld
jae
mov
push
cmc
into
push
push
mov
xchg
ret
add
adc
push
dec
push
mov
das
add
add
add
add
call
push
mov
nop
leave
jmp
cmpsb
int
repnz
aad
pop
test
push
mov
nop
leave
jmp
add
add
add
jmp
add
adc
push
repnz
pusha
outsb
sbb
sub
push
mov
xchg
ret
mov
jmp
add
add
test
nop
nop
cld
jae
adc
enter
dec
sub
repnz
nop
cld
jae
add
push
dec
cmp
repnz
nop
cld
jae
push
add
int
inc
jbe
sbb
nop
cld
jae
push
lea
int
xor
mov
jbe
clc
repnz
nop
cld
jae
dec
add
cmpsb
add
mov
mov
jne
clc
repnz
nop
cld
jae
add
xchg
add
clc
repnz
nop
cld
jae
add
and
popa
mov
clc
repnz
nop
cld
jae
add
enter
rclb
in
nop
leave
jmp
add
add
add
add
cld
or
nop
leave
jmp
insb
stos
sbb
fisubl
clc
repnz
nop
cld
jae
adc
cmp
add
testl
and
add
add
add
insb
loopne
iret
pop
push
mov
xchg
ret
add
dec
aas
ret
cmp
add
clc
repnz
nop
cld
jae
add
stos
add
add
push
clc
repnz
nop
cld
jae
adc
add
and
xor
push
mov
nop
leave
jmp
add
insb
add
enter
cmpl
push
mov
nop
leave
jmp
call
ret
push
mov
xchg
ret
xor
add
loope
call
mov
leave
push
mov
nop
leave
jmp
movb
add
add
sub
movsb
push
mov
xchg
ret
push
adc
add
add
in
mov
int
push
add
add
call
push
mov
nop
leave
jmp
je
add
fwait
pusha
push
mov
xchg
ret
add
ds
push
jb
push
mov
nop
leave
jmp
add
aas
add
cmp
sar
nop
nop
cld
jae
add
sbb
inc
test
mov
nop
leave
jmp
push
and
jmp
jge
clc
repnz
nop
cld
jae
test
ds
add
and
sbb
loopne
mov
add
nop
nop
cld
jae
push
add
loope
test
add
push
mov
xchg
ret
imul
xlat
stc
mov
clc
repnz
nop
cld
jae
adc
cmp
outsl
arpl
add
repnz
nop
cld
jae
add
cmpsb
add
call
clc
repnz
nop
cld
jae
and
jmp
or
nop
nop
cld
jae
xor
xor
add
ficoms
mov
nop
leave
jmp
ds
pop
push
add
sbb
popa
add
mov
xchg
ret
push
and
add
adc
add
and
inc
add
loopne
enter
in
pop
push
mov
nop
leave
jmp
add
add
add
sbb
mov
clc
repnz
nop
cld
jae
cmp
push
push
mov
xchg
ret
test
repnz
add
mov
push
mov
nop
leave
jmp
aad
inc
push
rolb
ja
and
add
mov
clc
repnz
nop
cld
jae
mov
lea
mov
xchg
ret
xor
push
call
add
add
incl
push
mov
nop
leave
jmp
aad
dec
je
add
and
clc
repnz
nop
cld
jae
call
push
add
dec
add
repnz
nop
cld
jae
loopne,pt
sub
add
add
add
add
add
add
xor
nop
nop
cld
jae
lea
add
ret
sub
sar
nop
nop
cld
jae
add
adc
add
push
push
mov
nop
leave
jmp
adc
add
add
sti
mov
clc
repnz
nop
cld
jae
add
add
push
mov
mov
add
cmp
add
mov
and
repnz
nop
cld
jae
cmpsb
add
int
add
shr
loop
clc
repnz
nop
cld
jae
add
add
movsb
xor
leave
jmp
cmpsb
loope
add
jmp
and
push
es
in
nop
leave
jmp
add
je
stos
repnz
add
nop
nop
cld
jae
push
push
add
xor
lahf
push
clc
repnz
nop
cld
jae
ret
add
push
add
sub
pop
cmp
mov
xchg
ret
add
and
cmpsl
pop
xor
clc
repnz
nop
cld
jae
insb
dec
sbb
add
mov
in
nop
leave
jmp
push
adc
add
je
call
dec
jnp
xor
aam
pop
add
les
mov
xchg
ret
add
pusha
aas
mov
push
mov
fsub
testl
add
and
scas
addb
add
div
push
mov
nop
leave
jmp
add
add
jnp
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
loopne
repnz
add
into
call
clc
repnz
nop
cld
jae
ret
push
fldt
popa
clc
repnz
nop
cld
jae
add
lods
push
and
mov
and
js
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
adc
add
pop
add
fisttpl
mov
nop
leave
jmp
mov
add
inc
push
mov
nop
leave
jmp
push
movb
pop
inc
and
mov
push
mov
nop
leave
jmp
add
add
adc
addb
jp
mov
clc
repnz
nop
cld
jae
pop
add
mov
repnz
nop
cld
jae
repnz
ds
push
clc
repnz
nop
cld
jae
aas
cmpsb
sbb
sbb
add
pop
dec
push
mov
nop
leave
jmp
add
mov
push
mov
xchg
ret
lea
jmp
test
in
add
pushf
cmp
test
arpl
inc
dec
jle
cmc
mov
push
loopne
mov
nop
leave
jmp
dec
add
fwait
push
push
mov
nop
leave
jmp
add
mov
adc
add
lret
add
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
sub
cmp
nop
add
mov
xchg
ret
add
adc
add
add
mov
clc
repnz
nop
cld
jae
add
push
mov
add
add
repnz
nop
cld
jae
add
int3
mov
push
mov
nop
leave
jmp
ret
add
sbb
in
out
or
add
dec
data16
mov
adc
repnz
nop
cld
jae
aad
adc
dec
cmpsb
lods
clc
repnz
nop
cld
jae
imul
add
mov
adc
repnz
nop
cld
jae
test
jae
nop
nop
cld
jae
push
push
add
add
add
sbb
repnz
nop
cld
jae
add
loopne
lea
clc
repnz
nop
cld
jae
add
movsb
push
push
push
mov
xchg
ret
loopne
movb
lods
adc
mov
nop
nop
cld
jae
repnz
add
stos
outsb
sbb
nop
cld
jae
dec
xor
test
add
clc
repnz
nop
cld
jae
adc
add
adc
clc
repnz
nop
cld
jae
pusha
add
add
in
xchg
clc
repnz
nop
cld
jae
je
adc
mov
xchg
ret
add
pusha
jmp
add
jg
clc
repnz
nop
cld
jae
ret
repnz
add
call
clc
repnz
nop
cld
jae
add
add
sub
mov
clc
repnz
nop
cld
jae
pop
ret
movsb
push
mov
xchg
ret
test
cmpsb
add
jae
add
and
repnz
nop
cld
jae
repnz
movsb
sub
subl
jae
add
add
add
pop
in
inc
add
add
add
push
push
mov
xchg
ret
inc
outsb
call
pop
repnz
movzwl
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
adc
push
je
add
xor
clc
repnz
nop
cld
jae
and
push
int
addr16
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
adc
add
mov
mov
clc
repnz
nop
cld
jae
add
add
sub
mov
nop
leave
jmp
movsb
push
call
push
push
sahf
add
clc
repnz
nop
cld
jae
adc
pusha
add
add
and
push
mov
xchg
ret
and
stos
add
lcall
cld
jae
stos
xor
enter
loopne
mov
add
clc
repnz
nop
cld
jae
mov
outsb
add
add
inc
insb
pop
push
mov
xchg
ret
push
xor
add
fimuls
test
add
clc
repnz
nop
cld
jae
add
sbb
shl
push
mov
nop
leave
jmp
push
add
add
adc
and
push
mov
nop
leave
jmp
add
mov
add
push
xchg
add
cs
push
mov
xchg
ret
add
add
add
add
xchg
or
nop
leave
jmp
add
pop
add
int
add
dec
cmp
repnz
nop
cld
jae
add
mov
movzwl
clc
repnz
nop
cld
jae
push
aas
dec
push
mov
nop
leave
jmp
test
add
add
rolb
mov
push
mov
xchg
ret
dec
add
mov
stos
dec
lea
push
mov
xchg
ret
lea
xor
add
add
clc
repnz
nop
cld
jae
xor
int
add
add
add
push
mov
xchg
ret
cmpsb
xor
push
pop
mov
imul
icebp
jmp
loope
cmp
pop
add
das
call
push
mov
nop
leave
jmp
repnz
movl
aas
adc
in
nop
leave
jmp
push
adc
movsb
push
outsb
call
jbe
push
clc
repnz
nop
cld
jae
add
cmp
sub
jmp
cmp
jmp
xor
push
sbb
add
pop
clc
repnz
nop
cld
jae
add
dec
add
add
or
push
or
repnz
nop
cld
jae
add
add
call
add
adc
inc
add
int
and
outsl
mov
clc
repnz
nop
cld
jae
add
jmp
clc
repnz
nop
cld
jae
int
push
pusha
add
nop
nop
cld
jae
int
int
int
add
lds
sub
push
jmp
add
add
add
cmpsb
loope
push
clc
repnz
nop
cld
jae
mov
add
push
add
dec
adc
insl
movb
cmp
ret
sbb
add
add
add
jl
mov
push
mov
nop
leave
jmp
xor
jae
pop
mov
clc
repnz
nop
cld
jae
adc
add
add
clc
repnz
nop
cld
jae
xor
insb
insb
push
adc
inc
add
jmp
repnz
movsb
add
cld
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
push
add
jmp
imul
add
add
jmp
jmp
push
sub
mov
xchg
ret
add
add
aas
pop
call
mov
xchg
es
ret
clc
repnz
nop
cld
jae
add
dec
add
add
mov
sar
nop
nop
cld
jae
insb
movsb
add
mov
clc
repnz
nop
cld
jae
outsb
sub
test
push
mov
xchg
ret
ret
add
and
pop
clc
repnz
nop
cld
jae
add
add
test
add
push
mov
nop
leave
jmp
add
lods
add
jae
jne
clc
repnz
nop
cld
jae
and
add
inc
in
mov
xchg
ret
add
add
repnz
add
clc
repnz
nop
cld
jae
add
xor
add
imul
clc
repnz
nop
cld
jae
add
mov
and
push
mov
xchg
ret
add
push
repz
repnz
nop
cld
jae
repnz
pop
add
testl
lods
add
add
add
add
inc
add
and
xchg
int
add
cmpsb
adc
mov
push
push
mov
xchg
ret
push
add
test
jbe
clc
repnz
nop
cld
jae
and
add
popa
push
mov
nop
leave
jmp
add
add
stos
add
push
and
push
mov
xchg
ret
add
add
xor
mov
clc
repnz
nop
cld
jae
add
and
add
repnz
nop
cld
jae
movb
add
push
flds
in
nop
leave
jmp
aas
test
and
mov
incl
enter
mov
test
popl
nop
nop
cld
jae
cmpsb
call
xchg
and
push
clc
repnz
nop
cld
jae
add
outsb
push
sti
movzwl
clc
repnz
nop
cld
jae
dec
pop
add
xor
jmp
add
ret
push
call
push
lea
pushf
lea
clc
repnz
nop
cld
jae
add
add
pop
mov
clc
repnz
nop
cld
jae
mov
pusha
imul
nop
cld
jae
push
lds
nop
cld
jae
cmp
add
ret
push
jle
add
in
nop
leave
jmp
add
push
call
fiadds
nop
cld
jae
test
push
add
inc
clc
repnz
nop
cld
jae
pop
add
and
pusha
add
mov
xchg
ret
push
add
add
add
xchg
clc
repnz
nop
cld
jae
add
pusha
add
add
add
dec
cmp
repnz
nop
cld
jae
add
add
adc
clc
repnz
nop
cld
jae
movsb
add
test
nop
nop
cld
jae
add
ret
mov
clc
repnz
nop
cld
jae
outsb
add
pusha
push
mov
xchg
ret
add
imul
clc
repnz
nop
cld
jae
add
insl
mov
clc
repnz
nop
cld
jae
add
lods
popf
pusha
clc
repnz
nop
cld
jae
add
add
cmpsb
enter
adc
mov
push
clc
repnz
nop
cld
jae
add
add
cmpsb
xor
jl
shrl
repnz
nop
cld
jae
add
loopne
add
sub
push
mov
nop
leave
jmp
add
cmpsb
mov
sahf
push
clc
repnz
nop
cld
jae
add
add
add
rolb
mov
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
sbb
adc
test
call
in
nop
leave
jmp
add
cmp
xchg
add
push
mov
nop
leave
jmp
call
outsb
xor
out
add
add
and
xor
add
add
movb
pop
mov
clc
repnz
nop
cld
jae
push
jmp
pop
clc
repnz
nop
cld
jae
add
aad
pop
cmpsb
faddl
lods
repnz
add
sbb
add
loope
gs
mov
push
mov
xchg
ret
and
aas
xor
add
fisttpll
add
repnz
nop
cld
jae
add
mov
hlt
mov
add
repnz
nop
cld
jae
and
jmp
sbb
jmp
cld
jae
sub
pop
add
adc
mov
clc
repnz
nop
cld
jae
cmp
add
cmpsb
lret
clc
repnz
nop
cld
jae
add
add
mov
nop
nop
cld
jae
ret
add
add
clc
repnz
nop
cld
jae
add
add
xor
add
clc
repnz
nop
cld
jae
ret
add
add
push
mov
xchg
ret
and
sbb
scas
mov
clc
repnz
nop
cld
jae
int
adc
xor
mov
add
repnz
nop
cld
jae
add
je
movb
scas
push
clc
repnz
nop
cld
jae
push
add
push
add
add
mov
adc
add
inc
add
push
add
addb
shr
ret
push
mov
nop
leave
jmp
lea
xor
cmp
add
add
and
push
mov
xchg
ret
cmpsb
lea
add
test
add
clc
repnz
nop
cld
jae
and
movsb
int
add
add
clc
repnz
nop
cld
jae
add
add
adc
out
inc
add
or
test
out
clc
repnz
nop
cld
jae
insb
movsb
and
lea
push
mov
nop
leave
jmp
add
add
mov
mov
nop
leave
jmp
add
add
loopne
int
decl
push
mov
xchg
ret
pop
add
add
add
cmpsb
loop
mov
add
repnz
nop
cld
jae
add
pop
add
adc
push
clc
repnz
nop
cld
jae
repnz
inc
adc
repnz
nop
cld
jae
add
lret
add
clc
repnz
nop
cld
jae
add
xor
add
clc
repnz
nop
cld
jae
movsb
add
rol
push
mov
nop
leave
jmp
add
cmp
fdivr
clc
repnz
nop
cld
jae
insb
stos
add
push
clc
repnz
nop
cld
jae
adc
add
add
test
clc
repnz
nop
cld
jae
mov
lods
mov
sub
repnz
nop
cld
jae
add
insb
sbb
add
cmp
push
mov
nop
leave
jmp
add
add
ja
mov
push
mov
nop
leave
jmp
add
add
int
pop
imul
inc
add
add
add
add
cmpsb
faddl
in
nop
leave
jmp
jmp
add
sub
add
add
daa
mov
repz
mov
clc
repnz
nop
cld
jae
stos
add
add
adc
and
clc
repnz
nop
cld
jae
push
push
add
add
mov
clc
repnz
nop
cld
jae
add
movb
sub
clc
repnz
nop
cld
jae
add
pusha
imul
andl
decl
movsb
add
ret
clc
repnz
nop
cld
jae
push
insb
add
insb
add
inc
stos
jne
clc
repnz
nop
cld
jae
add
add
mov
add
cmpsl
pop
lea
push
mov
xchg
ret
jmp
add
movl
pusha
sti
clc
repnz
nop
cld
jae
cmpsb
add
sub
mov
mov
nop
leave
jmp
mov
add
imul
sub
repnz
nop
cld
jae
push
add
and
movsb
pop
pop
clc
repnz
nop
cld
jae
add
mov
push
push
mov
nop
leave
jmp
add
pusha
adc
and
xor
in
nop
leave
jmp
add
add
mov
push
mov
add
sbb
incb
add
adc
inc
sbb
mov
jmp
push
add
add
and
loope
stos
add
add
cmpsb
push
out
mov
clc
repnz
nop
cld
jae
add
xor
add
push
mov
xor
add
sbb
jg
jle
add
and
fists
xchg
cmc
mov
push
xlat
cmp
call
mov
mov
insl
push
int3
adc
clc
rolb
mov
mov
clc
jbe
sub
sahf
nop
add
and
mov
mov
fdivrp
aad
dec
pop
push
aad
add
loope
ss
add
mov
clc
inc
add
jmp
jle
hlt
aaa
add
icebp
pop
adc
sbb
and
add
outsl
mov
lock
dec
clc
loop
mov
inc
popa
cmpsl
jae
push
sub
sbb
push
dec
dec
shl
add
or
add
and
addr16
stc
inc
rolb
test
in
jbe
fs
and
mov
push
sbb
push
push
scas
and
mov
sbb
jbe
add
mov
add
ja
nop
add
add
sub
jmp
imul
mov
mov
adc
mov
xorl
popa
push
jns
mov
lods
pextrw
cwtl
std
ss
mov
cli
xchg
sub
pop
out
fisubrl
push
test
out
divb
inc
jae
add
dec
adc
testb
jb
mov
mov
add
fcmovnbe
cli
mov
mov
sub
xor
fucomp
mov
sbb
in
add
xchg
ret
adc
push
dec
jo
mov
pop
mov
or
add
mov
cmpsl
out
jecxz
cmp
insb
iret
xor
test
insl
addr16
mov
xor
mov
mov
test
xlat
push
add
add
pop
mov
scas
sbb
push
add
sub
xor
mov
add
pop
mov
add
add
sbb
stos
add
jle
or
and
cmp
and
mov
add
add
sub
adc
sub
adc
jns
out
mov
loope
stos
and
mov
mov
fwait
outsb
dec
pop
in
mov
test
test
mov
add
cmpsb
ja
loope
adc
aas
push
add
mov
mov
aam
add
sbb
or
mov
in
imul
add
add
add
xor
pop
dec
imulb
in
les
sbb
adc
mov
add
mov
mov
push
pop
and
mov
add
mov
add
sub
inc
pop
lret
scas
xor
add
dec
rcll
add
xchg
bound
mov
stc
cmp
xor
add
sbb
mov
lret
sbb
xchg
jns
insl
cmc
push
cmpsl
push
cs
pop
pop
push
add
packsswb
outsl
in
test
pop
loop
mov
or
add
sbb
js
daa
out
push
inc
push
dec
sub
add
in
mov
scas
loop
mov
mov
add
lea
jl
in
addb
call
call
jbe
iret
jnp
xchg
outsl
sbb
lret
lea
add
sti
int3
cmp
mov
test
and
les
cmpsb
mov
lods
scas
ja
mulb
mov
in
inc
pop
sub
mov
dec
adc
loop,pn
mov
imul
sub
adc
mov
dec
xchg
mov
add
sub
pop
test
mov
addb
push
jae
mov
push
sti
and
test
add
pop
call
add
lret
aaa
add
jo
mov
jnp
pop
ss
pop
mov
mov
mov
test
out
jge
mov
jo
mov
cwtl
lods
mov
xor
sti
mov
mov
mov
mov
scas
sbb
clc
lahf
xor
sbb
imul
popf
dec
add
dec
xor
mov
lock
pop
mov
xchg
sti
xlat
imul
xor
or
cmpsl
dec
xchg
xor
mov
gs
je
ja
mov
mov
mull
mov
or
mov
shll
mov
fldt
aaa
mov
add
push
or
mov
xchg
je
inc
add
pop
int3
adc
inc
and
mov
xchg
mov
and
mov
xchg
add
icebp
jge
pop
stc
cmp
cli
enter
jae
pop
xchg
and
mov
add
jae
cmpsb
jecxz
les
test
lret
addb
jmp
ja
ret
outsl
mov
lds
jecxz
ds
mulb
push
add
out
jmp
jne
add
cwtl
push
and
xor
inc
popf
jne
add
push
jne
mov
addb
pop
arpl
push
add
mov
mov
lahf
jg
hlt
cmp
out
aaa
mov
rorl
and
adc
mov
sbb
rolb
mov
add
jne
fnsave
add
add
ja
fsubs
cmpsl
jno
stc
or
call
add
std
rolb
mov
push
inc
inc
add
sbb
mov
add
scas
pusha
add
pop
pop
mov
sub
add
movsb
loop
mov
outsl
jmp
in
lods
into
push
xor
mov
mov
loopne
mov
push
cwtl
call
insl
mov
cmpsb
push
inc
add
inc
xor
dec
rcrl
and
xchg
lock
pop
jecxz
and
sbb
out
cmp
sub
mov
movsb
mov
jnp
add
ljmp
es
jno
ss
bound
mov
sub
mov
mov
sub
jle
rolb
mov
mov
or
cmpsl
mov
add
adc
mov
lea
push
mov
mov
mov
mov
dec
scas
fldcw
int
adc
adc
mov
jnp,pt
pushf
xlat
mov
add
jmp
add
or
add
mov
aad
decl
fcomi
cs
mov
add
push
xchg
cmp
push
xchg
repnz
fs
adc
and
mov
mov
adc
out
test
add
imul
and
je
icebp
ja
mov
dec
and
mov
sti
jbe
and
add
pop
or
fsubs
mov
add
test
jge
cwtl
jg
int3
test
sub
sbb
or
add
mov
jo
mov
mov
dec
xor
mov
xchg
pmaxsw
mov
add
daa
mov
ja
mov
and
add
inc
add
loope
xchg
dec
and
mov
add
repz
xchg
inc
pop
stos
cmpsl
pop
or
push
add
add
add
lret
mov
or
into
mov
dec
pop
pop
fcomps
add
sub
mov
imul
mov
cs
add
xchg
jno
scas
nop
add
mov
sub
jl
imul
pop
pop
inc
sub
mov
jnp
push
add
outsl
dec
fsts
adc
pop
mov
test
in
pop
fbstp
icebp
in
adc
mov
cmp
loopne
mov
mov
add
arpl
or
ret
push
ret
adcl
pushw
leave
push
in
mov
mov
sti
dec
xchg
popf
addb
repz
xchg
gs
movsl
pop
xor
mov
dec
push
gs
adc
pop
jg
dec
xlat
jnp
sbb
out
movsl
mov
or
fmul
cmpsl
mov
or
inc
mov
jae
dec
outsb
dec
mov
sub
add
das
popf
pop
pop
movsl
gs
lret
mov
faddl
stos
pop
mov
pushf
sbb
mov
js
mov
and
dec
lea
inc
dec
pop
mov
add
stc
sahf
pop
cmp
pandn
push
xor
add
divb
jecxz
inc
add
pop
or
jnp
jmp
mov
xchg
cmp
cmc
adc
sub
rolb
mov
adc
mov
ss
and
mov
mov
mov
add
mov
mov
rolb
mov
xor
mov
std
out
xor
rolb
adc
daa
jbe
add
or
inc
mov
test
push
add
xchg
test
push
lods
sahf
movsl
in
mov
insb
in
sahf
aas
mov
add
call
in
sbb
shll
mov
pop
rsm
mov
mov
mov
int3
or
cmp
rolb
mov
mov
cmp
imul
ss
out
sbb
fdivs
jl
std
and
add
and
mov
rorl
in
push
les
add
xchg
cltd
push
insl
mov
mov
xchg
shrl
sub
mov
xor
aas
ljmp
call
in
dec
in
popa
xchg
add
mov
add
sahf
movsl
xchg
rolb
mov
mov
call
pusha
add
outsb
test
shrl
add
lahf
sti
xchg
sbb
rorl
or
add
add
add
add
sti
or
iret
testb
xor
jl
call
xor
cmp
mov
add
fsubs
jmp
imul
inc
add
fstpt
add
xor
inc
dec
imul
lea
ljmp
aad
add
push
arpl
inc
ds
ljmp
add
divl
mov
and
outsb
dec
int
mov
lret
adc
mov
add
ss
mov
add
loop
mov
push
addb
xchg
out
xchg
test
loopne
mov
scas
rolb
pop
sbb
ret
xchg
mov
mov
cmp
and
inc
std
and
mov
inc
add
shll
aad
lret
sbb
imul
test
xlat
push
insb
rolb
mov
mov
adc
test
hlt
push
add
sbb
add
test
call
add
add
mov
scas
iret
and
mov
mov
xchg
add
xchg
add
jge
jle
sbb
stos
out
loope
xor
inc
rorl
or
add
xor
mov
les
imul
add
mov
add
mov
leave
push
jecxz
movsl
push
mov
push
mov
call
bndldx
push
ret
stos
shll
out
addb
aad
add
ljmp
pop
js
xor
or
fistl
push
jg
pop
stc
sbb
xchg
jmp
mov
push
jnp
jmp
ja
jae
inc
shl
outsl
mov
mov
je
add
jae
mov
stc
mov
test
hlt
ds
mov
push
or
out
ret
pop
push
add
add
mov
push
pop
fidivrs
jge
in
dec
call
gs
mov
flds
and
add
sti
adc
mov
mov
add
jge
in
repz
cmp
sub
imul
or
add
mov
mov
in
ret
xchg
addr16
mov
push
adc
mov
xchg
add
dec
std
repnz
dec
enter
adc
mov
mov
pop
push
jnp
test
xchg
adc
add
hlt
cmp
cltd
cld
mov
mov
cmc
mov
fucomip
jmp
cmc
mov
xchg
adc
imul
mov
mov
mov
mov
sub
add
cltd
in
inc
inc
cli
addb
test
xchg
jb
mov
add
add
mov
jmp
bound
mov
cltd
ds
std
mov
lahf
pop
clc
in
xor
mov
mov
add
xor
mov
mov
nop
add
jge
in
pusha
add
rolb
fnsave
nop
add
mov
and
mov
insb
sub
lock
and
mov
jnp
mov
imul
lret
cmp
inc
aam
stc
lcall
data16
pop
jbe
cmpsl
repz
dec
int3
test
or
add
inc
add
call
cmpsl
pop
mov
stc
mov
inc
test
add
mov
cld
jae
lahf
dec
mov
inc
mov
xor
mov
in
jmp
or
sub
add
enter
scas
sahf
xchg
and
add
jno
cmp
mov
stc
loop
mov
add
xchg
sbb
cmp
sub
out
xchg
mov
jge
stc
lock
cmp
add
mov
mov
mov
fsubr
test
mov
add
or
arpl
or
bound
mov
repz
sub
je
add
xor
mov
iret
notl
add
push
pop
mov
rolb
mov
cmp
add
add
cmp
add
add
push
popf
mov
adc
push
mov
add
mov
cltd
mov
add
mov
lods
cmp
push
ljmp
lea
or
gs
imul
mov
mov
add
sahf
or
scas
rolb
mov
push
daa
adc
mov
pop
xchg
mov
or
lret
push
push
fsubrs
mov
dec
xchg
popf
je
sub
add
loopne
mov
mov
sahf
les
inc
in
insl
pop
cltd
mov
popf
sbb
xor
mov
add
call
mov
rolb
mov
push
jecxz
xchg
dec
push
inc
fsubs
mov
mov
pop
js
out
ss
push
or
add
mov
mov
mov
lods
fwait
mov
push
lcall
inc
add
cmp
adc
lods
das
xchg
sbb
push
xor
mov
pop
xchg
test
push
xchg
add
push
out
repnz
dec
and
popf
gs
pop
roll
pushf
cmp
or
fsubrl
sub
xor
mov
adc
mov
shll
add
cmpsl
icebp
sahf
inc
mov
adc
andl
add
add
mov
movsb
jb
mov
and
xchg
add
add
xchg
add
add
add
lret
add
rolb
mov
mov
mov
add
cmc
fs
enter
test
mov
add
mov
ret
mov
das
adc
mov
fisttpll
sub
jb
mov
jl
add
pop
xor
imul
mov
loopne
mov
adcl
adcl
add
and
mov
lret
xchg
loopne
mov
mov
je
push
add
mov
sbb
and
mov
mov
xlat
rcll
jecxz
add
int3
clc
sub
imul
add
icebp
es
mov
or
adc
sti
mov
test
or
mov
dec
rolb
mov
pop
test
add
in
fildl
and
mov
rolb
mov
xchg
push
mov
lret
add
mov
sahf
jl
add
push
mov
inc
int3
jmp
adc
fadd
add
inc
fwait
test
pop
jne
jbe
cli
out
mov
out
jne
dec
scas
pusha
add
fbstp
push
stos
mov
jg
mov
mov
out
into
cmc
rolb
push
aad
hlt
data16
aad
test
adc
mov
inc
add
mov
or
clc
sbb
adc
hlt
dec
sub
cmp
mov
divl
cwtl
lods
sbb
inc
sbb
inc
add
mov
addr16
and
out
xchg
mov
lods
out
loopnew
mov
dec
neg
sbbl
add
add
inc
inc
mov
mov
stos
addb
in
rolb
mov
in
add
xchg
push
mov
adc
jnp
add
add
addb
sbb
mov
pop
pop
loopne
mov
add
or
mov
push
inc
mov
adcl
jo
mov
add
jmp
es
fisttpll
mov
mov
inc
add
lds
jg
add
divl
jp
and
and
ds
jle
mov
add
mov
mov
mov
xchg
mov
stos
iret
js
mov
mov
mov
add
mov
push
lret
imul
mov
mov
add
xchg
rolb
into
add
add
mov
movsl
cmp
add
mov
lret
mov
addb
movsb
sbb
push
out
push
push
and
ret
pop
mov
shl
cmp
jp
fdivrs
or
mov
je
push
aad
cld
jecxz
lcall
sub
add
inc
aad
leave
out
xor
mov
mov
xor
add
out
mov
mov
push
xor
add
icebp
rolb
mov
dec
or
pop
int
jmp
stos
idivl
in
push
fistps
filds
add
add
or
add
popa
pop
mov
cmpsb
jmp
add
dec
es
mov
je
in
hlt
pop
jge
add
add
add
mov
add
int3
or
xor
mov
mov
mov
pushf
mov
mov
test
mov
aad
popf
inc
add
mov
xchg
add
dec
xchg
ja
out
sub
nop
add
and
add
pop
adc
mov
cmc
mov
xorl
add
out
push
call
sbb
aam
rcll
inc
push
add
dec
cmp
aam
insb
pushf
es
jbe
sbb
mov
add
add
adc
mov
and
or
movsl
lcall
add
pushf
arpl
dec
popa
mov
mov
add
pop
mov
sub
lcall
dec
fwait
jno
test
sbbl
pusha
add
xchg
sbb
das
into
in
xor
jmp
lods
push
add
in
xchg
into
dec
rcll
enter
mov
push
push
jle
out
mov
test
jge
or
pop
jl
mov
add
add
and
mov
inc
imul
inc
lahf
out
hlt
cmp
xchg
add
aas
lea
rolb
mov
fists
scas
jmp
cmpsl
or
add
jns
mov
hlt
jbe
sub
mov
or
mov
addr16
or
out
push
dec
les
sbb
mov
fiaddl
jno
dec
and
mov
addb
std
ds
add
mov
xchg
jb
mov
inc
xor
sbb
or
inc
lock
pop
adc
lahf
xchg
pop
push
add
push
aam
fiadds
mov
jl
add
mov
add
mov
cmp
add
add
divl
lret
adc
mov
jl
cmc
loopne
mov
add
jnp
dec
lea
adc
mov
into
mov
inc
inc
add
inc
add
std
dec
jno
inc
clc
orl
add
leave
mov
cmp
dec
fimull
nop
add
nop
add
mov
dec
mov
mov
xor
ficoms
rolb
mov
inc
add
mov
mov
jbe
daa
or
ljmp
outsb
pop
mov
push
out
jb
mov
and
mov
jge
cmp
ljmp
inc
pop
xchg
fldcw
mov
pop
sbb
add
mov
call
mov
fsts
cld
jne
sub
mov
mov
push
push
jnp
cmp
inc
add
push
addb
push
mov
mov
dec
int
add
into
push
test
fstpl
xlat
dec
xor
ret
into
mov
jg
movsl
inc
sub
mov
add
jmp
pop
inc
add
scas
cmp
cmc
pop
fsubrs
mov
lret
add
mov
sub
hlt
mov
lcall
jle
jo
mov
ja
xchg
add
add
fs
ljmp
adc
mov
add
fsubs
mov
cmp
ja
sbb
rolb
mov
loope
add
mov
aam
icebp
xchg
lods
push
push
pushf
adc
xchg
add
add
popf
adc
cmc
mov
dec
lock
mov
mov
jecxz
add
mov
cmc
popf
mov
push
scas
ret
je
jnp
ljmp
sbb
jge
add
dec
pop
xor
pop
inc
push
rolb
xchg
aam
or
fwait
sti
push
push
add
aam
mov
add
loope
bound
mov
jp
call
addb
add
gs
dec
inc
testb
dec
push
jmp
call
fadd
add
mov
sbb
ret
pop
or
add
movsl
lods
pop
test
rorl
dec
lods
xchg
cmp
lret
add
mov
add
ret
loopne
mov
add
sub
outsb
mov
aad
add
je
jns
inc
add
mov
mov
cwtl
sahf
xchg
push
add
mov
mov
mov
ss
add
sahf
jnp
jae
push
mov
add
scas
dec
clc
lret
add
popa
mov
mov
test
inc
add
mov
and
mov
add
fs
xchg
aam
into
test
scas
mov
mov
lock
stc
xor
jno
sbb
ja
aaa
orl
push
add
outsl
add
mov
mov
fidivs
dec
or
mov
xor
pop
adc
mov
push
cld
cmp
sub
es
out
cmp
ljmp
mov
push
fisubrl
lret
mov
enter
mov
jno
adc
mov
jo
mov
xor
out
add
add
cmp
sbb
js
fnstsw
pop
lock
loop
mov
loopne
mov
mov
andl
test
mov
imul
or
addb
push
push
ret
leave
xor
adc
test
sbb
aad
fwait
rolb
jae
xor
mov
popf
xor
sahf
pop
or
sbb
xor
add
insb
add
lds
popl
and
mov
push
ret
aas
jns
stos
popa
adc
hlt
sbb
xchg
mov
xchg
mov
pop
pop
mov
mov
jle
arpl
add
inc
jg
jg
sbb
xchg
xchg
inc
mov
fistpl
xor
mov
insb
mov
add
insb
ficoml
lahf
pop
dec
icebp
sub
add
jecxz
add
pop
xchg
pop
jl
add
mov
xchg
addb
adc
leave
sbb
cmpsb
les
pushf
and
lods
push
add
ret
mov
js
imul
and
mov
dec
or
dec
inc
add
aad
cmc
fisubl
cmp
or
test
inc
add
mov
add
aaa
ljmp
add
push
movsb
aas
rolb
mov
cmp
outsl
sbb
xor
jno
adc
ja
lret
mov
addr16
sahf
xchg
add
mov
dec
pop
outsl
inc
pop
cld
and
mov
add
xchg
hlt
repz
ret
mov
cmp
dec
fstpt
mov
mov
scas
mov
cmpsb
std
jb
mov
ja
das
xchg
sub
lock
mov
dec
clc
mov
insb
and
enter
inc
xor
dec
mov
pop
adc
mov
mov
adc
mov
out
cmc
jnp
sub
add
lcall
mov
jle
imul
sub
mov
jg
clc
ljmp
mov
mov
cld
pushf
ds
add
or
and
xor
bswap
gs
addr16
cmp
jbe
out
add
mov
sti
push
loopne
mov
sub
pop
jge
ds
rolb
mov
sti
xchg
rolb
sub
add
mov
add
xlat
lcall
mov
add
cmp
mov
add
fisttpll
adc
mov
xchg
mov
iret
cld
push
add
aaa
dec
cld
adcl
fistpl
add
jecxz
sbb
lahf
push
inc
orl
add
mov
pusha
add
pop
pop
cmp
addr16
add
stos
loopne
mov
test
scas
inc
cmpsl
outsl
pushf
fwait
addb
fnstsw
leave
jl
and
or
cli
jbe
nop
add
or
mov
jne
ror
idiv
sahf
jl
lret
arpl
dec
sub
roll
xchg
cwtl
lods
cmc
in
add
pop
mov
or
jge
fsubl
xor
mov
pop
add
mov
mov
or
mov
mov
and
mov
add
adc
cltd
lock
sbb
insl
sub
mov
or
mov
lods
test
inc
pushl
roll
add
cmpsl
mov
push
pop
dec
sti
cs
outsb
mov
mov
jo
mov
mov
pusha
add
hlt
mov
mov
arpl
add
push
insl
pop
test
aaa
lods
imul
mov
sub
mov
cltd
and
mov
out
mov
jae
add
mov
jl
add
add
add
add
loopne
mov
loope
mov
inc
outsl
add
xchg
and
addb
scas
cld
add
mov
repnz
cld
iret
iret
fdiv
xchg
aad
mov
cmc
jns
pop
sar
fldenv
dec
inc
xor
or
adc
mov
mov
add
jecxz
enter
sbb
mov
loop
mov
aad
mov
xsavec
mov
mov
inc
dec
jp
sub
subl
jnp
xchg
sub
lods
add
mov
jb
mov
sbb
iret
push
xor
out
mov
dec
jge
xor
mov
lcall
repz
add
mov
inc
jno
mov
pop
mov
dec
mov
pop
jne
xchg
repnz
pop
xor
xchg
add
std
pop
pushf
out
adc
or
lea
mov
lods
addb
mov
imul
mov
mov
jns
loope
add
jno
outsl
icebp
inc
add
int3
jle
jae
mov
mov
mov
xor
mov
add
mov
and
mov
push
mov
add
fldz
xchg
dec
or
lea
lcall
mov
rcll
aad
add
xchg
xchg
add
xor
mov
fiadds
sub
sub
mov
lea
das
lods
in
and
dec
shll
push
add
mov
inc
sub
mov
sub
out
jo
mov
adc
add
add
mov
stos
xor
pop
cmc
xchg
mov
inc
call
addb
xor
ja
test
mov
pop
push
test
xchg
cmpsl
out
leave
stos
mov
ret
ds
mov
cmp
inc
add
dec
sub
mov
mov
pop
aas
fcoms
and
mov
enter
mov
xchg
rolb
mov
or
mov
rolb
mov
mov
mov
out
or
adc
pop
fnstcw
mov
fldt
or
lock
inc
xlat
or
xor
adc
sbb
ljmp
add
out
and
idivb
ja
add
add
shll
pop
mov
lock
fadds
mov
mov
adc
sub
add
mov
testl
adc
mov
and
mov
mov
add
xchg
add
cmp
lret
mov
call
add
xor
add
outsb
out
jae
movsl
rolb
mov
jo
mov
or
sub
xchg
mov
ja
add
lea
leave
mov
mov
add
in
dec
push
mov
fcoml
add
sub
mov
scas
xor
mov
cli
cltd
fs
sub
data16
mov
and
mov
stc
stos
mov
push
sahf
cmpsb
mov
aam
mov
lahf
pusha
add
cs
mov
ds
imul
add
mull
mov
loopne
mov
mov
imul
mov
bound
mov
fldcw
movsb
add
mov
daa
addr16
fiadds
mov
add
mov
add
mov
call
pushf
addb
ja
roll
insl
xchg
add
add
sahf
dec
rcl
sbb
daa
xchg
push
into
lods
sbb
rorl
xchg
cltd
push
mov
les
sub
rcll
aaa
cld
cmp
je
mov
add
push
test
dec
sahf
xchg
sbb
enter
mov
popa
sbb
add
mov
mov
aas
fldt
add
mov
daa
lret
or
jae
sub
cmpsb
enter
mov
aas
arpl
mov
mov
mov
std
jle
mov
mov
push
dec
mov
xchg
or
cs
lock
sbb
icebp
or
outsb
or
les
dec
jns
add
out
add
add
add
mov
or
dec
mov
push
push
xor
push
test
mov
mov
cmp
push
sub
add
out
test
jns
lahf
daa
ljmp
ficompl
aam
call
dec
or
mov
sbb
rolb
jb
mov
add
xor
dec
pop
and
icebp
call
dec
fiaddl
xor
push
xchg
dec
clc
jb
mov
fisttpl
fstl
repz
in
mov
xchg
cltd
rolb
mov
lods
cs
pop
inc
jae
movsb
mov
add
leave
mov
mov
pop
and
cltd
addl
inc
jmp
mov
xchg
add
sub
adc
mov
std
movsl
mov
dec
inc
add
data16
fwait
popa
xchg
lds
movsb
sub
mov
add
add
push
jb
mov
inc
sub
xchg
loop
mov
pop
jae
or
xchg
testb
jp
lock
movsb
or
not
add
addb
mov
ds
inc
add
mov
pop
xchg
sti
repz
push
inc
fs
lods
daa
cltd
arpl
stc
ss
stc
lea
lret
shll
imul
hlt
jg
add
mov
decl
mov
scas
scas
inc
jp
leave
ret
dec
sub
add
daa
lahf
in
xchg
fsubl
aam
sti
imul
cld
dec
int3
push
aad
sub
ss
jb
mov
or
xchg
add
add
mov
mov
push
add
add
add
sar
sti
pop
xchg
rolb
mov
mov
mov
mov
andl
push
fisubl
add
adc
mov
das
mov
mov
dec
add
mov
rorl
popa
test
add
sub
add
sbb
fs
pop
dec
mov
cmpl
adc
mov
and
addb
push
mov
inc
jo
mov
jp
pop
inc
cli
out
icebp
enter
roll
add
pop
ja
jecxz
xchg
push
add
adc
mov
pop
mov
dec
in
sub
mov
add
adcl
imul
mov
addb
sub
inc
add
add
xchg
add
mov
mov
push
cmp
fwait
repnz
lret
inc
add
sbb
add
sub
mov
insb
addr16
stc
dec
mov
push
call
adc
clc
in
push
repnz
mov
xchg
xchg
stos
push
into
mov
push
xor
or
lcall
add
inc
lds
mov
ljmp
int
pop
inc
inc
cmp
inc
mov
in
pop
stos
dec
push
add
out
mov
add
hlt
mov
xchg
jb
mov
fdivrs
jg
jmp
mov
ror
inc
into
pop
addr16
sub
andl
rolb
mov
add
mov
cmpsb
xchg
sbb
dec
pop
cli
inc
jl
add
mov
add
cli
mov
mov
pop
cmpsl
jo
mov
dec
aam
pop
add
mov
je
jmp
dec
lods
repnz
mov
out
jmp
stos
call
mov
sub
add
add
push
add
out
add
mov
add
dec
push
lret
mov
xchg
fnstenv
testb
add
mov
mov
into
jge
int
scas
cmp
adc
mov
add
gs
movsb
js
mov
ljmp
test
int
push
adc
add
outsl
movsl
fisubrs
sub
jmp
fld
icebp
xchg
sub
leave
popf
pop
mov
lods
sbb
pop
icebp
gs
pop
and
mov
pop
sub
add
out
fimull
lods
push
in
cmpsl
jmp
sub
cmp
movsb
dec
push
ljmp
mov
lret
pushf
insb
cmc
test
add
add
xchg
clc
gs
enter
pop
mov
mov
fsubr
pop
xchg
mov
sub
add
add
xchg
insl
push
push
xlat
push
fwait
dec
xlat
inc
sahf
xor
push
mov
fcmovb
jbe
add
addr16
jl
iret
out
out
addr16
aaa
xchg
ret
int
or
fimull
add
lods
stc
pop
add
mov
out
cmc
and
sbb
or
call
cltd
jns
pusha
add
in
sub
add
push
push
mov
inc
xor
mov
cmp
aas
rolb
mov
add
pop
pop
movsl
cmp
sbb
lcall
fnstenv
js
hlt
call
xor
mov
arpl
mov
lods
cmp
xchg
jl
clc
or
mov
jb
mov
push
leave
or
je
lret
mov
arpl
fnsave
mov
dec
sbb
popa
xchg
add
add
cmp
repnz
lahf
rorl
icebp
out
dec
pop
mov
rolb
mov
jnp
dec
xchg
cmpsb
repz
dec
ret
ret
push
jp
jp
lods
cmc
xor
mov
pop
repnz
dec
sbb
and
paddb
mov
xchg
out
loopne
mov
add
cld
jne
addb
enter
xor
mov
xlat
test
mov
adc
mov
dec
repnz
mov
call
mov
mov
push
push
dec
cltd
imul
mov
and
dec
lcall
lret
iret
test
addb
loop
mov
add
mov
in
gs
repz
mov
add
adc
mov
fnclex
add
scas
mov
cld
sbb
into
adc
and
mov
sti
or
in
shrl
pop
dec
test
pop
out
mov
fs
add
mov
insl
outsb
addb
inc
out
into
mov
jnp
cmc
sbb
add
inc
in
cmp
test
ja
fcmovu
ja
add
mov
xor
mov
push
pop
repnz
out
insl
shll
jae
ds
pop
cmovno
loopne
mov
jmp
add
mov
mov
imul
clc
adc
mov
mov
sub
cld
dec
mov
in
mov
int
jb
mov
xor
add
sbb
add
rolb
mov
add
rolb
mov
push
jno
stc
and
add
mov
test
dec
adc
mov
je
repnz
push
mov
mov
addb
mov
bound
mov
jae
sbb
les
ret
sub
xor
mov
or
inc
addb
mov
mov
insb
into
push
add
add
mov
mov
mov
nopl
add
and
mov
jae
sbb
movsb
jnp,pt
mul
add
xor
add
or
icebp
in
flds
mov
cmp
jnp
mov
add
xchg
push
sub
mov
adc
jae
fildl
ror
pop
scas
fwait
xor
mov
add
rcrl
xchg
out
jl
add
and
sub
scas
fwait
mov
call
pushw
aam
sub
mov
add
lock
sbb
addb
outsb
lcall
mov
pop
repnz
stos
lret
xchg
rolb
and
push
add
mov
mov
dec
movsl
push
add
add
pusha
add
dec
addb
add
xchg
add
cmp
in
jg
sub
lcall
int
int3
or
mov
fsubl
decl
cmc
mov
cli
fisubs
in
or
data16
pop
cli
pop
addb
rolb
jmp
pandn
add
add
lods
test
jmp
int
cmp
punpcklbw
mov
mov
pop
stc
add
push
mov
mov
cltd
and
mov
hlt
xlat
or
mov
jo
mov
add
or
push
xchg
add
push
or
or
mov
add
push
push
lods
outsl
lock
sahf
push
adc
cmp
sub
add
pop
cltd
jmp
inc
add
xchg
cs
mov
add
mov
aad
icebp
aam
mov
mov
jmp
rorl
push
mov
mov
hlt
imul
add
cmp
jne
and
mov
push
sub
out
bound
mov
sub
ljmp
out
movsb
clc
sub
inc
pop
les
in
ja
push
add
add
push
addr16
dec
mov
inc
mov
in
in
pop
popf
add
sub
jl
xchg
mov
lahf
dec
pop
jmp
stos
scas
or
loop
mov
jle
jns
out
adc
jl
test
in
jnp
add
add
cmpsl
in
insb
ljmp
call
inc
add
ljmp
lahf
fildll
pop
ret
adc
mov
insb
in
addb
pop
pop
js
loope
in
daa
dec
mov
mov
mov
jbe
add
popa
sub
shrl
add
cld
lcall
add
mov
imul
int3
int3
push
add
shrl
and
mov
sbb
add
cld
pusha
add
popf
mov
mov
push
shll
xchg
push
sub
inc
sub
dec
loope
adc
cmovns
cli
test
sbb
jo
mov
out
xor
mov
mov
stos
cmpsb
jge
add
add
add
int
pop
fwait
pop
movq
rolb
mov
mov
jmp
add
or
jns
fcompl
ja
add
sbb
iret
scas
addb
insb
mov
rolb
jb
mov
mov
sub
pop
pop
jmp
dec
pop
dec
mov
mov
add
mov
es
mov
xor
dec
and
push
lea
mov
jecxz
and
fldenv
add
out
cmpsl
pop
inc
add
push
insl
mov
fisttps
mov
cmp
push
push
gs
sub
add
cltd
push
cmp
inc
add
add
push
orl
adc
mov
out
add
jae
add
mov
cmpsl
sub
cmpsb
lret
mov
jp
fdivl
popf
jae
dec
jne
test
lea
lret
lds
je
mov
and
mov
sub
mov
jno
pop
ds
jecxz
adc
mov
repz
jmp
add
dec
imul
cltd
push
add
xchg
adc
mov
nop
add
lcall
mov
sub
jle
jo
mov
aaa
hlt
push
dec
push
loopne
mov
jmp
add
or
add
mov
add
mov
out
add
mov
jns
testb
mov
outsb
icebp
movsb
das
fwait
dec
mov
mov
xorl
mov
inc
or
in
pop
and
mov
mov
mov
add
imul
loope
mov
into
mov
xor
mov
pop
test
add
lret
mov
stos
ljmp
fistps
cmpsb
jg
mov
add
add
pop
insb
push
sbb
out
ds
push
cwtl
mov
add
enter
ds
fnsave
sbb
ret
rol
adc
mov
packssdw
or
in
das
loope
fs
mov
addb
jl
aas
sbb
mov
mov
iret
loop
mov
sbb
mov
ret
cs
sbb
add
sub
sub
shl
xchg
xchg
mov
mov
loopne
mov
mov
pop
cmc
ret
bound
mov
mov
xor
add
push
je,pn
add
add
add
ss
add
scas
in
pop
lea
mov
ret
loopne
mov
cmc
sbb
mov
aad
jle
sbb
push
nop
add
out
cmp
sub
xor
dec
cmpsb
dec
xchg
les
add
mov
mov
and
stos
dec
mov
cmp
fldlg2
mov
and
sbb
push
int
test
push
loop
mov
enter
inc
or
add
jecxz
add
js
push
xchg
mov
inc
mov
mov
dec
adc
mov
push
push
push
inc
rolb
push
nop
add
mov
addr16
mov
ficoms
mov
add
mov
push
out
cmc
cltd
xchg
loop
mov
fsubrl
int
dec
adc
mov
xchg
pushf
out
lret
jle
add
mov
out
add
sbb
data16
mov
mov
repnz
mov
xor
mov
mov
and
mov
lahf
in
imul
out
sbb
push
add
mov
out
jno
push
int3
shll
fstpl
test
mov
mov
ljmp
inc
xchg
add
cmp
add
push
ljmp
jo
mov
mov
rolb
mov
repz
push
xor
add
push
out
mov
add
dec
dec
mov
aam
xchg
mov
jmp
or
cwtl
ljmp
dec
lcall
xchg
xor
mov
loopne
mov
movsl
test
outsb
or
loop
mov
jp
cmp
das
jl
fmull
repz
mov
rol
stc
and
push
inc
int
mov
mov
mov
push
push
es
cmpsl
into
pop
sub
mov
mov
sbb
cli
inc
mov
inc
je
scas
and
mov
je
and
mov
lret
add
push
idivb
movsl
jle
sub
fsubrs
cmp
test
dec
cmp
xchg
or
add
cmp
dec
pop
add
sbb
daa
push
shll
imul
mov
dec
sbb
add
addr16
fbstp
xor
mov
movsb
mov
xor
mov
dec
mov
add
jne
inc
mov
sbb
cmpsl
mov
jg
mov
daa
daa
out
cwtl
xor
rcr
std
lcall
dec
mov
add
mov
jno
mov
in
insl
insb
pusha
add
add
insb
sahf
clc
jecxz
xor
mov
mov
fwait
sbbl
ss
cvtps2pd
and
mov
repnz
sub
jg
movsb
clc
in
inc
add
sub
cltd
xor
out
jecxz
mov
je
xchg
shll
add
negl
add
adc
push
test
add
mov
pop
fisubrs
sbb
pop
adc
ret
jmp
fldcw
mov
mov
add
aas
jbe
mov
push
jl
mov
add
cli
sub
mov
fisttpll
rolb
mov
mov
mov
add
mov
sahf
mov
add
jg
mov
scas
push
jmp
sbb
loop
mov
and
or
sub
xor
add
xor
in
je
mov
inc
add
pop
je
add
add
mov
cltd
pop
div
popf
outsb
push
cmp
xor
sbb
mov
in
adc
mov
add
lret
arpl
cmp
insl
hlt
mov
sub
sub
or
pextrw
mov
sub
sub
xor
xchg
add
inc
mov
xor
rolb
cmpsb
pop
pushf
add
mov
fbstp
inc
jp
dec
mov
cmpsb
pop
push
out
add
xor
mov
add
popf
sub
jle
push
dec
jecxz
add
xor
mov
ret
push
mov
mov
addr16
push
add
cmc
dec
add
mov
adc
testb
leave
jecxz
cmpsb
cmp
mov
inc
cmc
int
adc
mov
add
je
aam
mov
icebp
lods
rcll
mov
jnp
int3
lods
push
in
pop
xchg
popf
push
mov
int3
jmp
hlt
push
pop
clc
cmp
push
xchg
icebp
push
outsl
inc
cmp
push
mov
and
cmpsl
xor
outsb
in
cmp
imul
dec
test
add
iret
fcmovbe
add
cmp
sub
out
xor
cwtl
dec
js
sub
mov
shll
jae
cmp
adc
fisubrs
aas
xchg
xor
cmc
jecxz
xlat
sub
movsb
cmp
fists
rcll
out
xchg
imul
jle
jno
push
dec
popf
mov
push
jge
add
mov
mov
and
xchg
or
icebp
pop
add
pop
pop
push
test
mov
hlt
xlat
mov
inc
jbe
sti
aaa
mov
add
lods
xor
mov
out
decl
xor
call
and
mov
sub
or
sbb
add
jge
lret
cmp
xor
mov
mov
insb
fldl
pop
out
add
push
add
add
roll
add
add
xor
pop
cmp
mov
mov
sub
lcall
rolb
cs
or
repnz
xchg
mov
popa
in
push
add
mov
push
leave
jb
mov
out
add
test
mov
insl
pushf
and
mov
ds
add
nop
add
add
sub
mov
or
sub
addb
clc
repnz
mov
rolb
mov
mov
adc
int3
out
cld
jno
mov
mov
cmc
jle
call
leave
cmp
add
mov
prefetchwt1
mov
mov
mov
jnp
in
fldenv
dec
inc
dec
and
add
mov
nop
add
aam
pop
cmp
add
xchg
mov
mov
mov
repz
in
xchg
mov
add
add
dec
lods
xchg
jg
xor
add
inc
imul
jo
mov
push
lods
dec
sbb
push
mov
xchg
scas
std
jg
push
shll
xchg
pop
dec
nop
add
pop
popf
nop
add
addr16
cmpsl
cli
les
hlt
and
repnz
mov
dec
stc
push
lds
dec
out
repz
loop
mov
mov
mov
push
addb
mov
push
push
pop
enter
inc
call
xchg
adc
sbb
loopne
mov
movsl
ret
fwait
xchg
cmc
into
lods
add
mov
inc
aas
in
movl
js
daa
dec
adc
out
js
add
dec
inc
lods
lods
mov
cmp
mov
mov
faddl
add
or
push
addb
les
add
push
add
pop
xchg
mov
fst
and
adc
add
dec
inc
rolb
mov
push
add
pop
inc
fidivs
xchg
add
loop
mov
add
mov
push
add
xchg
add
xchg
in
mov
mov
dec
les
or
rolb
mov
rolb
and
add
rolb
add
mov
mov
call
jmp
lods
sti
dec
mov
add
mov
adc
mov
push
add
pop
aas
call
and
mov
add
mov
mov
xchg
jecxz
add
dec
rolb
sub
frstor
add
dec
loope
imul
cmp
cmpl
and
add
xor
add
jmp
into
push
shrl
lds
mov
jnp
add
mov
ds
sub
cmp
cmp
or
lea
add
dec
dec
adc
lret
or
data16
hlt
outsl
cwtl
adc
mov
int3
pop
sub
loop
mov
push
sbb
and
mov
add
mov
cmpsl
cli
jns
loopne
mov
popf
pop
dec
addr16
mov
shrl
clc
xchg
clc
addr16
in
lahf
rolb
mov
jecxz
add
repz
stos
shll
add
dec
test
stos
jb
mov
adc
mov
add
mov
pop
ja
push
add
out
add
mov
fidivs
mov
dec
xchg
mov
mov
orl
and
push
push
add
rolb
mov
and
es
pop
pop
addb
xor
mov
pop
dec
stos
cmpsb
cmp
add
addr16
or
imul
sub
fs
negb
lcall
sub
mov
inc
add
lret
mov
or
mov
mov
test
je
mov
or
sti
imul
stc
push
lds
push
add
ret
mov
cmpsb
fdivrs
add
pop
pop
inc
test
jo
mov
mov
mov
lds
push
jmp
js
popf
or
mov
fsubrl
cld
int3
rolb
mov
jge
add
out
sbb
mov
into
adc
mov
bound
mov
outsb
push
dec
xor
mov
xchg
and
mov
mov
mov
jno
add
imul
test
mov
in
test
das
push
sbb
outsb
mov
repnz
sbb
mov
mov
and
add
push
imul
sbb
add
iret
cmc
fisttps
je
mov
pop
out
inc
add
mov
xchg
fcomps
push
adc
cltd
imul
pusha
add
and
test
in
cmp
xor
mov
fbstp
out
mov
dec
sbb
xchg
sarl
mov
bound
mov
popa
sbb
add
add
pop
lods
xchg
sahf
test
clc
mov
mov
stos
add
test
add
std
mov
mov
mov
mov
jp
mov
rolb
mov
add
cmpsl
or
jae
jne
push
das
dec
out
mov
mov
cli
rolb
xor
dec
jnp
jbe
adc
add
insl
dec
xor
xor
mov
mov
ja
inc
aad
add
add
add
jg
mov
add
mov
pop
mov
mov
shll
ret
mov
inc
sar
sub
jmp
add
mov
je
add
mov
mov
cmp
pushf
daa
cmc
cs
lahf
lretw
movsl
sub
fcompl
mov
mov
add
add
movb
int
add
or
push
hlt
test
xchg
jmp
es
push
arpl
mov
add
bound
mov
add
fcompp
or
mov
insl
or
into
cmpsl
sub
add
mov
ret
fwait
jo
mov
ljmp
test
or
int
inc
out
imul
add
movsb
icebp
into
cwtl
inc
or
push
add
mov
add
add
mov
adc
add
movsl
cmp
loope
cmp
sub
jmp
xchg
ja
call
push
xorl
pop
xchg
gs
mov
jg
pop
xchg
cs
movsl
clc
ja
jae
rolb
mov
add
adc
mov
mov
sub
lock
mov
cltd
adc
mov
fwait
cmp
stos
mov
call
jl
mov
sbb
add
out
add
mov
jmp
push
add
enter
mov
xor
mov
xchg
mov
pop
dec
pop
into
inc
jne
cmp
xor
and
xchg
adc
inc
mov
cld
addr16
push
add
sub
stos
dec
iret
mov
add
aas
arpl
sub
sbb
or
mov
mov
xor
mov
jae
jge
mov
mov
lods
lret
es
add
add
push
add
std
jecxz
mov
mov
mov
mov
mov
and
mov
add
mov
push
sahf
fcmovnb
outsb
cmp
lcall
pop
faddl
add
jno
mov
add
out
addr16
add
push
pusha
add
add
cmp
pop
shrl
add
pop
or
add
sub
add
mov
clc
gs
ret
pop
or
add
pop
lods
popf
jnp
in
mov
into
stos
inc
add
pushf
adc
adc
cli
mov
mov
gs
ljmp
add
cmp
ds
and
mov
add
push
pop
or
mov
pop
xor
jmp
test
xchg
ja
pop
inc
outsb
xor
orl
mov
dec
pop
adc
mov
xchg
xor
mov
in
sbb
mov
push
ljmp
jae
push
repz
outsb
xchg
sub
into
rol
pop
add
jne
fwait
in
add
je
jl
sbb
lahf
push
in
push
in
cmp
adc
mov
mov
mov
add
mov
imul
mov
add
push
jg
or
mov
add
cmp
sbb
mov
xchg
add
jns
add
sbb
and
mov
inc
std
sub
mov
ss
clc
lahf
stos
xlat
add
insl
cwtl
mov
movsl
pop
test
icebp
mov
int
outsl
inc
add
mov
int3
mov
adc
rolb
lahf
xor
insb
jecxz
fstl
and
mov
add
cltd
lock
pop
loopne
mov
pop
das
lret
mov
add
loop
mov
mov
out
adc
mov
pop
sbb
dec
mov
cli
jl
out
dec
xlat
or
cmp
hlt
adc
mov
lcall
negl
mov
mov
lea
dec
xchg
loopne
mov
jp
sub
mov
addr16
mov
loopne
mov
lahf
and
add
repz
fdivrl
or
and
jmp
add
fwait
scas
push
add
add
subl
imulb
mov
sbb
cmpsb
rcr
ljmp
iret
enter
sub
rolb
mov
add
sbb
pop
pusha
add
mov
jmp
jns
xchg
ja
mov
ja
mov
mov
pop
pshufw
out
lahf
sub
xchg
pop
inc
mov
pop
jge
jmp
add
loope
stc
scas
and
mov
add
mov
rcll
add
pop
fiadds
mov
leave
das
fs
scas
jecxz
rolb
mov
movsl
mov
mov
shll
mov
cwtl
insb
pop
xchg
popf
fistps
stos
pop
sub
sub
dec
push
fs
outsb
arpl
and
mov
pop
pusha
add
mov
add
test
movsb
orl
mov
xor
xor
mov
add
rolb
mov
adc
aaa
rol
aaa
mov
pop
int
in
fimuls
add
negb
daa
addb
pop
inc
jnp
scas
adc
bound
mov
push
add
int3
cli
bound
mov
cmpsb
push
stos
jge
add
mov
repnz
mov
fiadds
add
push
cmp
clc
out
add
mov
pop
mov
add
or
adc
jno
pop
add
or
pop
and
inc
mov
dec
stos
es
inc
ds
mov
lock
addb
ds
add
add
xchg
lret
mov
cmpsb
mov
sub
xchg
push
std
xor
jge
jl
adc
add
mov
dec
test
add
xor
pop
rolb
sbb
je
xchg
add
mov
cltd
idivl
jle
and
mov
or
xor
mov
fisubrs
add
jge
mov
add
pop
das
or
add
fs
sub
in
enter
das
mov
add
mov
lcall
mov
fisubrl
or
jl
rolb
mov
inc
lcall
dec
inc
xchg
dec
xchg
movsb
iret
rolb
ret
pop
inc
sbb
sahf
adc
mov
arpl
xchg
scas
aas
rolb
mov
insb
addb
xchg
push
mov
and
xor
mov
pop
ja,pt
sub
cmp
inc
aam
mov
std
xlat
in
hlt
dec
push
adc
aaa
outsb
cmp
add
mov
pop
push
fldl
mov
push
scas
mov
cmp
jne
adc
add
mov
lods
jo
mov
lods
fstl
add
mov
jne
mov
in
cld
out
sahf
cmp
stos
inc
add
push
mul
add
mov
add
push
pop
ss
dec
aas
cmp
add
lahf
les
imul
add
or
mov
add
mov
mov
and
divb
fists
or
add
mov
lahf
dec
jbe
hlt
push
sub
mov
test
mov
add
ds
xor
mov
lret
ret
pop
jmp
sti
nop
add
and
iret
aaa
ret
lods
pop
dec
adc
std
shll
add
adc
inc
cs
or
inc
out
int
rcl
movsl
push
add
lock
negb
mov
adc
adc
dec
lret
jne
insb
mov
cmp
add
cmp
xor
or
je
cmp
mov
in
push
add
xchg
lds
mov
mov
adc
rolb
mov
mov
push
xchg
inc
insb
jl
mov
fisubl
xchg
pop
hlt
fwait
push
hlt
imul
add
push
mov
mov
rolb
mov
rolb
mov
add
jg
pop
and
xor
loopne
mov
dec
into
xor
xchg
or
push
sbb
or
pop
and
mov
sti
out
push
xchg
outsb
sbb
popa
inc
rolb
mov
js
jge
dec
popf
and
add
add
mov
in
xchg
in
sub
cmp
daa
xor
mov
xchg
lock
mov
mov
add
gs
aad
add
mov
push
sbb
lahf
add
bound
mov
xchg
sub
ljmp
mov
mov
ljmp
push
je
ret
push
push
fs
mov
stos
mov
mov
rolb
xor
mov
in
nop
add
jmp
movsb
rolb
cmpsb
mov
adc
mov
mov
test
or
mov
mov
shl
xchg
in
xchg
add
add
mov
cmp
mov
pop
push
add
mov
rolb
mov
sub
in
popl
add
push
mov
mov
push
out
jp
inc
aam
pop
cmp
add
jmp
push
or
jae
add
inc
clc
push
int
sub
xor
mov
fbld
mov
mov
out
notl
xor
sbb
jp
and
sub
fldl
int
or
fwait
out
inc
push
in
inc
add
jle
mov
push
rorl
dec
jmp
xchg
ds
sbb
cmpsl
mov
add
mov
xchg
mov
jb
mov
push
imul
pop
cmpsb
mov
lock
lods
or
pop
gs
in
fidivl
ret
sub
mov
cmp
outsb
fmuls
loopne
mov
sbb
mov
add
fidivl
and
push
cld
adc
mov
jne
pop
inc
add
add
outsl
or
jno
test
pop
sbb
repz
mov
mov
xchg
dec
cmp
add
ret
loope
sbb
mov
or
mov
add
ret
imul
cmp
xchg
push
xchg
or
mov
pcmpeqw
cld
pop
mov
push
add
mov
pushf
repnz
aaa
addb
and
mov
push
aaa
fs
mov
cltd
inc
add
pop
dec
push
inc
or
mov
or
mov
add
xchg
adc
pop
and
mov
add
push
and
push
ret
aas
mov
mov
add
in
movhps
mov
add
pop
sub
cmp
outsl
sbb
push
in
mov
sub
push
pop
lds
adc
mov
add
add
mov
jmp
ds
dec
mov
xchg
loope
cwtl
xchg
mov
or
add
cmp
pop
clc
aas
or
push
lds
xchg
add
test
adc
rolb
mov
loope
add
mov
push
out
aaa
das
add
mov
lods
imul
jno
pop
push
in
out
add
mov
xchg
push
das
dec
push
xor
fs
int
add
push
xlat
hlt
outsb
xchg
inc
xchg
add
addb
divb
mov
push
cmpl
mov
scas
dec
push
mov
dec
sbb
jl
jno
scas
pushf
sub
and
mov
dec
or
cmp
add
sub
jle
js
push
jmp
dec
movsb
cli
bound
mov
shl
add
rolb
mov
add
in
mov
das
pusha
add
mov
mov
jbe
pop
addb
jae
bound
mov
xchg
mov
cld
lret
imul
add
out
jb
mov
lods
outsl
inc
push
lods
push
adc
jno
clc
add
stos
outsb
lea
add
dec
pop
ljmp
push
mov
rcrl
xchg
jp
jge
fdivrs
push
sub
push
dec
fdivs
dec
popa
mov
mov
sbb
add
add
mov
add
inc
pop
dec
jle
mov
add
mov
mov
mov
lock
mov
mov
int3
fnstenv
pusha
add
in
jno
cmp
mov
pop
out
addb
cltd
es
aad
nop
add
and
cmpsl
rolb
mov
insl
mov
mov
in
mov
fucomip
push
and
mov
add
aas
dec
mov
push
mov
pop
iret
loopne
mov
dec
lock
add
pmaxub
ret
push
push
xor
data16
out
loope
movsb
push
mov
jnp
inc
add
add
les
dec
cmp
add
jmp
test
fs
cltd
je
aaa
inc
movsl
pop
mov
mov
mov
sbbl
inc
popf
xchg
add
mov
pop
repnz
cmp
xchg
outsl
ret
lret
jg
xlat
fimuls
loopne
mov
int
fldenv
mov
loope
push
xchg
sub
mov
movsb
xlat
mov
call
lret
aas
mov
add
fbld
add
mov
add
fdivp
push
jp
add
js
push
rcrl
je
or
insl
push
int
out
or
add
push
add
in
jge
mov
rolb
mov
fldt
sub
add
cltd
iret
push
and
mov
sub
dec
loopne
mov
loop
mov
mov
add
xchg
fistl
push
add
jne
add
and
add
stc
mov
movsl
outsb
pop
adc
mov
outsl
inc
aad
cmp
fistpl
pop
aaa
ret
call
add
mov
add
movsb
jl
in
mov
and
add
negl
popa
push
add
insl
add
mov
negl
leave
repz
test
mov
inc
lret
add
mov
lock
cmpsl
imul
cltd
popf
clc
cli
das
mov
fists
and
ja
rolb
mov
jbe
dec
lods
or
mov
mov
rolb
test
xor
mov
add
mov
add
test
pop
and
ja
add
lret
scas
inc
test
aad
push
jae
repz
or
add
addb
lret
icebp
add
xchg
aas
fdivrl
push
roll
xchg
sub
or
icebp
ret
pushf
hlt
lods
and
mov
mov
leave
mov
pusha
add
mov
add
mov
repnz
stos
and
test
sub
imul
dec
inc
cmp
mov
pop
int
stos
movsb
mov
add
jl
sub
ljmp
mov
loopne
mov
add
xor
mov
add
mov
add
mov
mov
mov
aad
and
jb
mov
cmpsb
sti
pop
dec
fsubrl
jp
bound
mov
loopne
mov
xor
mov
sbb
inc
fs
add
mov
cltd
jns
fildl
gs
mov
add
mov
stos
and
mov
fisttps
mov
aaa
imul
pop
xor
out
out
xor
sub
add
mov
xor
mov
mov
test
test
mov
adc
lea
ret
xlat
shll
mov
ficoml
add
fwait
cmp
loop
mov
inc
sbb
mov
pop
cmp
add
mov
and
mov
mov
inc
fisttps
add
dec
cmp
cmp
jecxz
mov
lods
ss
add
dec
fisttps
add
inc
mov
add
or
loopne
mov
mov
loopne
mov
mov
sbb
mov
cmc
add
mov
add
push
int3
sbb
jmp
test
dec
call
sahf
imul
adc
mov
dec
cmc
xchg
push
add
inc
mov
cwtl
fisubrl
call
shll
mov
pop
push
add
pop
inc
add
mov
ja
fldcw
inc
add
mov
divl
jo
mov
ret
dec
dec
mov
jmp
pushf
jae
add
aam
imul
jns
into
inc
mov
mov
cwtl
sub
mov
addb
cmp
jae
mov
inc
and
cmpl
add
mov
mov
add
rolb
mov
and
fisttps
xchg
fcompl
xor
insl
dec
loope
fwait
xlat
popa
ja
push
xchg
sub
ret
cmpl
sbb
test
push
neg
xchg
push
shll
stc
mov
pop
sub
mov
push
or
pop
xchg
out
add
ret
ja
sbb
add
hlt
dec
iret
lret
jg
jle
add
in
fucomip
mov
xchg
xchg
test
sub
inc
in
push
mov
add
pop
int3
xchg
test
lret
push
add
jnp
add
or
xor
rolb
mov
cld
xor
push
add
mov
dec
add
mov
flds
mov
cmpsl
lock
mov
mov
add
fldl
or
xor
add
xchg
sbb
aaa
cmp
icebp
sbb
cmp
mov
scas
ss
xchg
fcmovne
xor
mov
insb
imull
cltd
or
xchg
xor
sti
adc
mov
add
push
stos
inc
or
call
aaa
pop
cwtl
dec
add
mov
inc
mov
and
and
mov
add
push
adc
pop
jb
mov
push
cmc
pop
jp
jg
add
add
mov
jle
lahf
testl
lds
cli
lods
sbb
cld
dec
shrl
xor
add
insl
ja
mov
imul
out
add
sbb
das
push
add
in
shll
les
push
add
bound
mov
inc
popf
popa
mov
mov
inc
dec
lret
loopne
mov
mov
cmp
add
int
jle
mov
aad
in
bound
mov
orl
out
cltd
addl
std
fidivs
add
arpl
xor
add
sti
arpl
add
pop
insb
sti
mov
push
inc
add
in
jb
mov
fisubs
add
xlat
sub
mov
mov
add
cmpsb
addb
push
jns
out
jnp
pop
jge
mov
in
jno
test
inc
std
and
mov
pop
and
push
adc
notb
add
int
or
xlat
das
flds
add
mov
mov
push
adc
add
stos
in
bound
mov
pop
daa
adc
mov
out
leave
aad
aam
lret
test
fimull
mov
jo
mov
sub
in
and
sbb
add
mov
add
mov
push
ljmp
mov
or
ss
dec
inc
cwtl
iret
stos
pop
lods
dec
sub
add
or
int
mov
inc
sti
movsl
xchg
jb
mov
and
mov
jo
mov
fwait
lds
or
mov
ficompl
sbb
aaa
fimull
icebp
dec
mov
out
pusha
add
icebp
sbb
mov
scas
clc
in
pop
mov
mov
aam
pop
sbb
loopne
mov
mov
js
pushf
dec
dec
cmpxchg
jge
mov
popa
outsl
adc
mov
cmp
add
push
popf
jecxz,pt
mov
mov
loop
mov
mov
inc
mov
dec
in
mov
cltd
mov
rolb
mov
xor
xchg
cmovp
mov
imull
jmp
xchg
mov
lret
xor
mov
add
push
popa
stos
pop
loope
add
xchg
sbb
add
ja
pusha
add
mov
mov
add
add
mov
xlat
jg
add
or
add
popa
rcll
add
mov
aaa
mov
mov
cmpsb
insl
pop
inc
add
add
ja
cmp
es
lret
mov
mov
mov
dec
mov
cli
xor
sbb
add
mov
add
push
add
push
add
add
and
js
or
mov
mov
adc
mov
mov
add
add
mov
xor
xchg
push
sar
ljmp
and
add
add
fwait
and
dec
jb
mov
stc
gs
mov
pop
pop
addr16
in
add
mov
mov
mov
cmc
sbb
mov
sub
add
xor
adc
add
pop
inc
add
add
jmp
mov
and
mov
sbb
into
das
pop
out
push
cmp
hlt
adcl
add
sbb
and
adc
and
cli
outsb
out
pop
xor
mov
jp
inc
cmp
mov
xchg
sub
clc
mov
add
add
dec
scas
push
lahf
stos
and
mov
add
sub
jae
mov
mov
fcomp
imul
pop
push
lds
dec
scas
lret
fldl
popf
pop
ds
aam
add
sbbl
mov
mov
sub
addb
mov
iret
aam
jnp
lea
aas
xor
push
insb
loopne
mov
int
xchg
and
mov
addb
dec
push
pusha
add
mov
lds
sub
mov
aam
xchg
mov
push
jnp
les
xor
mov
mov
mov
mov
jne
mov
add
mov
add
add
mov
fwait
lcall
add
adc
push
out
pop
ja
cmpl
ja
fs
add
daa
enter
ljmp
push
fcoms
das
repnz
add
mov
pop
loop
mov
aad
pop
mov
mov
add
mov
add
dec
jmp
test
push
mov
jo
mov
add
mov
sbb
jg
sub
sub
pusha
add
jbe
mov
dec
jne
push
mov
add
xor
mov
add
cmp
sti
jbe
add
mov
mov
dec
or
andl
mov
dec
out
call
rolb
mov
outsl
add
add
jns
in
clc
scas
rolb
mov
mov
loope
cmp
out
and
push
cmc
push
ja
das
adc
mov
addb
insl
ss
inc
or
mov
pop
jp
add
xchg
xchg
imul
aaa
jbe
popf
test
repz
leave
popa
xchg
push
add
mov
push
or
sbb
mov
mov
test
adc
outsb
addb
sub
add
sbb
xchg
jnp
loop
mov
pop
pop
cmpsb
out
inc
cwtl
cmpsb
lods
mov
mov
xchg
arpl
jne
add
add
gs
add
lret
add
inc
int3
add
mov
inc
add
pop
idivb
jle
sub
test
and
mov
and
mov
mov
ds
ss
inc
mov
inc
push
adc
in
out
cmp
jp
dec
adc
add
popl
iret
je
insb
cmp
jns
aas
adc
mov
jne
inc
pop
nop
add
push
in
xchg
fs
sub
xor
adc
mov
imul
mov
jae
repz
mov
add
sbb
rolb
push
pop
push
insb
mov
add
les
movsb
xor
mov
movsl
adc
push
ret
pushf
das
out
hlt
repz
or
pop
andl
test
xchg
ret
insb
icebp
jbe
add
rcrl
mov
mov
add
add
push
lret
mov
ljmp
movlps
mov
xlat
adc
clc
sbb
dec
shrl
ret
cmp
in
rolb
mov
fwait
xor
mov
cwtl
dec
in
add
mov
bound
mov
loope
add
add
xchg
leave
aam
lods
pop
cld
adc
mov
xchg
add
xchg
add
out
pop
sahf
mov
mov
add
shrl
add
mov
or
mov
shll
add
adc
adc
add
in
aam
out
pop
pushf
cmp
in
push
fisubs
mov
jmp
mov
add
xor
pop
or
addb
inc
mov
adc
sbb
test
loop
mov
add
add
mov
test
xchg
pop
in
xchg
add
inc
das
cltd
pop
out
pop
out
lock
mov
mov
mov
xor
mov
jle
push
cmpsb
sub
imul
notl
jae
loop
mov
add
add
cmp
xor
subl
add
ds
pop
popa
pop
jb
mov
aam
adc
mov
lds
insb
dec
cli
mov
pop
stc
aas
adc
call
cld
sbb
mov
mov
out
insb
pushf
xchg
mov
inc
add
sub
pop
jmp
es
notl
cmpsl
jmp
add
insl
mov
push
rolb
mov
or
jle
add
pop
popa
call
out
decl
push
imul
mov
lds
outsl
add
cmpsb
out
cmc
xlat
into
nop
add
xchg
xchg
out
inc
fmuls
add
repnz
cmp
mov
add
jmp
js
xchg
mov
mov
xor
sub
mov
cmpsl
push
dec
je
cwtl
sbb
and
out
sbb
and
cmp
jo
mov
std
ret
mov
adc
mov
fildll
sarl
movsl
mov
add
lret
mov
adc
mov
add
out
lods
fldenv
jnp
stos
inc
sub
mov
leave
js
leave
in
push
dec
in
outsl
ret
inc
mov
mov
sti
addr16
arpl
mov
xlat
jmp
mov
sbb
add
push
pop
bound
mov
clc
sahf
add
sbb
jge
add
push
mov
inc
popa
push
addr16
cmp
cmp
addl
add
adc
adc
mov
call
fs
dec
add
inc
lret
dec
sbb
in
jg
popf
roll
add
iret
xor
imul
bound
mov
mov
adc
imul
and
mov
push
xchg
jns
cmp
add
pop
cwtl
movsl
xchg
add
rolb
mov
aad
cmpsb
jmp
mov
ja
cwtl
or
add
inc
into
sbb
jno
cld
xchg
jp
mov
push
inc
push
sbb
rolb
mov
mov
add
sbb
mov
ss
rolb
mov
add
and
sub
rorl
mov
xchg
add
ja
or
cmc
loop
mov
mov
repnz
add
and
mov
lods
sub
rolb
mov
pop
jnp
adc
mov
or
and
mov
cmp
add
mov
mov
xchg
or
add
inc
mov
mov
adc
inc
arpl
fisubrs
sti
movsl
lcall
popf
sbb
js
dec
popf
mov
mov
mov
iret
cmp
pop
aad
out
inc
loope
out
cmp
fmull
pop
popf
dec
push
mov
jg
jns
aam
adc
add
mov
jecxz
jle
imul
xor
mov
jl
adc
mov
xchg
push
push
pop
popa
push
fwait
mov
icebp
fstpl
lret
movsb
mov
inc
add
loop
mov
pop
aam
mov
push
push
add
mov
inc
dec
cld
test
fildll
push
cmpl
add
mov
add
insb
jnp,pt
ror
lcall
mov
adc
jmp
sub
outsl
adc
mov
sub
jge
mov
out
mov
mov
mov
test
lock
mov
out
add
add
add
xchg
sbb
add
mov
dec
cmc
inc
inc
and
cmp
add
add
out
push
fs
cmp
mov
sbbl
repz
jg
mov
imull
dec
je
test
mov
xchg
loop
mov
mov
add
add
mov
mov
pop
nop
add
mov
dec
test
xchg
hlt
test
hlt
idiv
push
sarl
add
xchg
add
cmp
in
addb
les
mov
add
enter
fsubrl
mov
jno
adc
mov
mov
jl
out
sub
mov
les
xor
push
xor
shl
sub
outsl
arpl
test
stc
and
std
jae
xchg
add
shrl
xchg
dec
push
mov
sub
or
add
pusha
add
push
repz
test
mov
call
push
add
fstpt
lahf
dec
rorl
test
add
xor
xchg
xlat
xchg
sub
enter
add
fs
add
fcompl
add
add
mov
lcall
mov
into
fs
pushl
mov
rolb
and
xor
mov
push
fiadds
xor
and
mov
pop
mov
std
decb
xor
mov
icebp
jno
idiv
pop
shll
push
mov
out
jl
shrl
mov
cltd
ds
lods
mov
into
push
ja
fidivrl
add
mov
scas
fisttpl
mov
add
loop
mov
lods
push
in
imul
ret
xor
xchg
or
mov
pusha
add
imul
addr16
lcall
lods
daa
pop
xor
mov
and
add
jge
repz
push
ret
add
add
push
pop
fs
fnstsw
das
pop
in
mov
dec
into
addl
mov
cmp
pusha
add
mov
daa
mov
add
and
mov
add
jns
and
mov
inc
fstp
sbb
js
pop
in
add
call
inc
add
aas
into
call
shrl
test
mov
addr16
dec
loop
mov
add
mov
std
mov
add
mov
mov
inc
ja
and
mov
rolb
mov
bound
mov
add
mov
push
push
sbb
inc
or
add
add
lret
add
mov
xchg
push
cmp
xor
rolb
xchg
xor
mov
add
mov
mov
mov
fnstcw
fs
addb
enter
ficoml
mov
add
mov
adc
pop
cli
pusha
add
leave
addb
shll
sbb
rolb
mov
imul
pop
inc
mov
mov
icebp
loope
enter
xchg
mov
loop
mov
pop
popa
ljmp
in
imul
jle
icebp
in
cs
add
mov
mov
mov
es
and
mov
jno
add
mov
mov
mov
add
adc
fsubr
int
mov
fs
mov
add
jecxz
xchg
add
xor
mov
sub
in
test
mov
mov
add
push
insb
movsb
mov
ljmp
inc
add
insb
sub
dec
stos
or
mov
sbbl
aad
in
imul
jl
xchg
dec
jmp
add
imul
add
jne
pop
push
sbb
or
dec
sbb
mov
or
jmp
lcall
push
sub
add
dec
data16
mov
cmpsb
arpl
and
mov
add
push
nop
add
cld
xchg
mov
add
pop
pushf
or
sbb
cs
rolb
mov
or
test
jmp
mov
push
cmc
lds
mov
adc
mov
sub
fwait
ljmp
out
pop
mov
aad
imul
mov
or
mov
movsl
les
add
addb
ret
pop
mov
cmp
adc
lret
add
les
mov
mov
mov
fld
adc
add
pop
mov
mov
loop
mov
pop
cs
inc
cmp
scas
int3
movsb
mov
test
aas
nop
add
mov
mov
idivb
dec
mov
add
add
mov
adc
repnz
adc
mov
jbe
stos
popf
push
loopne
mov
mov
cmp
mov
adc
mov
mov
mov
jmp
xlat
inc
push
add
bswap
std
cmc
cmc
push
add
imul
repnz
pop
and
mov
dec
add
mov
dec
dec
fldt
xchg
iret
and
mov
add
xor
mov
mov
les
mov
adc
push
fwait
rolb
mov
inc
lods
pop
addb
insl
xor
loope
pop
loope
push
add
and
mov
add
test
add
mov
mov
or
dec
inc
jo
mov
adc
mov
push
jae
dec
jbe
rcll
add
fbld
add
mov
mov
pop
enter
ja
xchg
sub
popl
int3
jnp
in
mov
push
and
add
add
add
shll
add
sahf
push
mulb
add
sbb
mov
sbb
into
imul
pop
xor
mov
push
cli
aam
push
or
cli
adc
add
imul
js
fs
mov
xchg
add
cld
mov
in
out
xchg
call
inc
lret
adc
mov
popf
mov
sti
mov
mov
cmp
and
mov
jne
xor
mov
mov
push
iret
addb
inc
adc
mov
jg
add
cmp
out
inc
add
or
iret
rolb
stos
jo
mov
push
lcall
mov
mov
test
in
sbb
mov
rolb
and
ret
jecxz
and
add
pop
movsb
mov
cmpsl
xchg
mov
adc
add
mov
adc
fcmovne
in
stos
or
cmp
imul
cwtl
rolb
mov
std
jge
add
mov
call
mov
and
mov
cmpl
mov
or
lret
mov
inc
psubb
add
adc
ljmp
mov
scas
je
add
xchg
pop
or
int3
int3
test
xchg
inc
movsb
fsubrl
das
shll
sbb
in
lods
cmp
sbb
add
cmpsl
dec
xchg
bound
mov
mov
aaa
jne
imull
flds
inc
jge
jo
mov
roll
and
mov
mov
je
lcall
add
das
icebp
mov
mov
xor
adc
int3
out
jge
in
and
mov
cmovp
add
add
add
mov
jl
add
push
add
mov
mov
loop
mov
add
xchg
sub
shll
aaa
push
add
adcl
insl
push
popa
rolb
mov
add
mov
sub
sbb
call
sub
call
add
jo
mov
addr16
adc
mov
mov
xchg
add
xchg
aad
push
mov
mov
mov
cmp
cmp
add
mov
mov
jnp
out
lods
pop
mov
mov
xor
test
aas
icebp
scas
push
mov
int
mov
mov
cs
xorl
es
in
dec
ret
xlat
into
cld
add
mov
sbb
incl
arpl
xchg
cli
mov
out
mov
dec
xchg
add
add
shll
cmpsl
rorl
add
add
ljmp
xor
cli
ficoml
mov
sbb
add
mov
fisubs
sti
fimull
add
jg
or
mov
mov
roll
adc
add
and
jl
fcmovu
bound
mov
mov
cmp
or
and
add
out
je
out
xchg
push
pop
pop
orl
or
add
add
in
xchg
add
dec
jl
add
popf
jns
icebp
pop
pop
aas
fsubr
jnp
add
push
jmp
adc
mov
in
into
sbb
mov
push
cmc
cltd
mov
mov
mov
mov
shll
or
mov
dec
inc
outsb
sub
mov
outsb
stos
mov
push
or
mov
negl
inc
imul
lcall
pop
adcl
movsl
cmpsb
or
dec
into
das
les
push
push
outsb
cmp
mov
mov
enter
bts
xchg
mov
mov
push
or
add
and
popf
jge
lods
hlt
adc
stc
pop
cmp
pop
cmc
push
lcall
or
mov
push
inc
fsubr
or
inc
mov
leave
adc
and
mov
add
xchg
notl
xchg
xchg
mov
add
icebp
js
mov
mov
push
and
mov
mov
cmpsb
popf
stos
mov
cs
inc
gs
mov
xor
mov
daa
xorl
gs
add
dec
rolb
fstpt
mov
aam
sbb
push
adc
mov
fnsave
mov
cmpsb
cmp
sahf
dec
sub
push
loopne
mov
sbb
mulb
mov
add
xchg
das
mov
ja
xor
movsb
jno
push
cmp
fbstp
add
out
xchg
mov
mov
add
mov
popf
icebp
xorl
mov
add
mov
out
inc
call
fmull
loopne
mov
pop
push
add
loopne
mov
add
add
mov
pop
mov
add
int3
mov
sbb
stos
aam
inc
jae
ja
enter
cmp
and
mov
mov
insb
and
mov
jbe
add
push
sub
ljmp
or
mov
add
mov
xchg
push
add
jl
add
jmp
ss
ljmp
mov
mov
lahf
daa
gs
mov
sarl
std
adc
mov
pop
jbe
stc
nop
add
add
mov
add
repz
add
inc
lock
push
pop
test
sbb
push
mov
scas
jl
xchg
mov
addl
dec
add
cltd
add
mov
fidivrs
mov
bound
mov
imul
in
push
cs
pop
in
or
or
mov
sbb
enter
mov
add
add
inc
xchg
sbb
lret
loop
mov
jge
jp
xor
pop
sbb
push
rolb
mov
addr16
add
add
mov
outsl
jg
repnz
outsl
fisubs
mov
add
push
outsb
mov
fldt
mov
xor
scas
jno
push
add
mov
xlat
in
repnz
jns
cltd
inc
add
scas
mov
mov
adc
std
shll
add
push
lods
inc
sbb
mov
push
add
aam
leave
add
jns
test
insl
fldl2t
push
and
dec
leave
or
addb
inc
cmp
out
inc
add
jo
mov
add
out
fsts
movsl
nop
add
data16
dec
test
mov
dec
push
push
iret
das
sbb
jg
mov
div
add
outsl
lea
add
dec
fcmovne
or
add
add
cmc
cmpsb
repz
lds
and
hlt
jle
push
shrl
cs
pop
outsl
or
inc
aam
js
mov
mov
stos
xchg
lret
xor
pop
arpl
add
add
xor
sub
jmp
mov
imul
push
out
jno
test
add
jp
cmp
dec
add
jecxz
rolb
mov
nop
add
xor
add
add
aad
addb
aas
movsl
loopne
mov
in
repz
add
sub
add
jg
jae
fnstsw
rcll
daa
cmp
add
push
outsl
xchg
stc
dec
sub
cwtl
xchg
sub
jl
frstor
dec
test
dec
aaa
es
push
addr16
cmp
mov
mov
add
out
test
adc
cwtl
mov
inc
add
mov
or
pushf
xor
ljmp
add
std
sahf
movsl
xor
call
fdivp
add
mov
rolb
mov
bound
mov
jp
imul
or
pop
inc
add
arpl
stc
rolb
xor
sbb
mov
mov
mov
rolb
mov
test
cs
ds
sbb
je
add
mov
pusha
add
mov
fcomps
add
mov
lods
jle
push
cmpsb
mov
sbb
add
scas
sbb
mov
int3
cs
shll
repnz
push
adc
mov
inc
pusha
add
add
pop
inc
xchg
add
sbb
add
dec
mov
mov
fldenv
jo
mov
insl
dec
xor
jle
push
or
loopne
mov
aas
sub
add
iret
dec
sbb
jecxz
cli
push
add
add
xor
lea
jbe
daa
mov
mov
pop
cmp
mov
sub
cltd
dec
inc
iret
pop
jl
fs
inc
add
jmp
lret
pop
aad
add
mov
and
add
aam
or
fldcw
inc
push
jmp
adc
inc
pop
xor
mov
add
dec
adc
xchg
add
fdivrl
or
in
mov
and
mov
insb
cmpsb
adcl
or
ds
mov
addr16
pop
pop
addr16
dec
movb
loopne
mov
mov
jae
addb
pop
int
add
fwait
and
lret
push
sbbl
testb
xor
stos
leave
test
add
mov
sub
mov
scas
incl
sub
pop
push
loope
pcmpeqd
mov
mov
xchg
push
stos
cwtl
pusha
add
adc
lret
mov
mov
cmp
xlat
adc
push
jae
inc
jge
clc
pop
cmc
adc
cli
adc
add
mov
rolb
mov
stos
lahf
fs
popf
scas
insb
xchg
das
stos
cmp
xchg
cwtl
outsb
fcmovb
inc
add
add
add
scas
cmp
sti
inc
sub
outsl
push
add
ficoms
mov
push
adc
ds
loopne
mov
add
addr16
mov
mov
add
rolb
add
mov
mov
ret
and
test
pop
pop
es
aaa
inc
add
add
dec
fsubs
mov
rolb
mov
push
jp
add
out
dec
incl
movb
popa
inc
jmp
cmp
sub
pop
lods
or
cmc
movsb
imul
mov
jle
or
mov
xchg
and
mov
dec
pop
sahf
inc
enter
lret
rcrl
mov
add
lods
sub
inc
push
or
add
aad
xor
mov
mov
imul
add
jge
popf
fdivr
inc
add
out
mov
xchg
outsb
jg
sub
xor
mov
mov
and
fsubr
sbb
sarl
sbb
popa
push
add
lods
mov
mov
jle
sub
ret
ljmp
add
outsl
and
xor
mov
shll
add
mov
xlat
push
add
scas
add
push
mov
mov
cmp
mov
shll
je
insl
push
add
mov
das
adc
fcoms
mov
lds
add
mov
add
mov
xchg
adc
cmp
add
adc
mov
daa
lahf
jbe
fists
mov
mov
adc
add
lods
add
addb
stc
test
lods
dec
lods
xor
inc
pop
imul
add
bound
mov
xchg
pop
pop
inc
add
cwtl
stc
sbb
mov
vmovapd
add
movl
cld
and
gs
outsb
sbb
and
addb
std
jnp
cld
ja
pop
jge
divb
mov
add
add
xor
mov
movsb
push
test
adc
mov
pop
mov
cwtl
sbb
in
mull
insb
in
loop
mov
sarl
mov
add
pop
test
mov
outsl
aad
dec
insb
xchg
push
mov
test
add
add
xor
lds
mov
ret
cmp
mov
imul
outsb
mov
cmp
adc
add
add
add
lret
mov
pop
in
add
jecxz
jmp
xchg
adc
out
pop
out
addb
cmc
cmp
cmc
cmc
pop
outsl
rorl
loopne
mov
jl
inc
add
xchg
add
inc
add
add
iret
inc
jmp
mov
fwait
dec
into
push
or
cld
cltd
push
sti
subl
into
shrl
add
xor
mov
mov
je
cli
dec
rolb
mov
push
jmp
test
mov
add
rcll
mov
cmp
movsl
sub
push
push
hlt
fs
inc
dec
and
outsb
cmpsl
add
add
rolb
mov
into
cmp
in
add
mov
shrl
sarl
mov
or
scas
out
inc
inc
add
push
push
adc
testb
xor
lahf
hlt
dec
lcall
lds
add
add
scas
dec
dec
xchg
or
out
insl
in
inc
mull
jp
xchg
or
cltd
push
add
push
mov
stc
stos
pop
testb
add
mov
daa
scas
xor
mov
pop
jo
mov
add
dec
enter
add
lcall
push
arpl
jle
pop
adc
add
sbb
cmp
add
mov
inc
inc
mov
mov
xchg
lret
or
cmp
rolb
mov
add
outsl
addb
repnz
lock
dec
xchg
in
and
xor
mov
and
cli
sub
adc
mov
add
dec
and
mov
rolb
mov
int3
fwait
mov
ja
scas
pop
xchg
frstor
push
add
sahf
mov
mov
lds
jp
fimuls
mov
mov
lret
add
sbb
mov
add
fidivrs
pop
stc
xchg
inc
mov
pop
mov
cwtl
lock
jecxz
pop
inc
push
test
xchg
and
lret
xchg
add
or
add
je
idivl
mov
add
add
gs
in
mov
add
or
sbb
add
jmp
xchg
jmp
add
and
jle
dec
xor
mov
push
pop
push
add
inc
add
add
ficomps
add
pop
xor
ljmp
pusha
add
add
popf
test
push
mov
add
movsl
xchg
cmp
add
arpl
mov
lock
add
mov
xor
xorl
inc
sbb
lret
int
fstp
mov
mov
mov
mov
out
add
pop
jp
inc
clc
push
mov
sbb
shrl
enter
mov
add
push
add
add
xor
mov
jle
rolb
mov
pop
imul
jl
add
rolb
mov
stos
hlt
pop
jo
mov
test
mov
and
ret
xor
add
mov
jae
arpl
adc
mov
cld
ffreep
xchg
add
rolb
js
xchg
mov
mov
mov
mov
mov
add
mov
sbb
aaa
lods
shll
mov
fsubrl
lcall
add
stos
insb
jecxz
mov
or
add
xchg
dec
pusha
add
ljmp
testb
div
add
mov
cs
rolb
mov
or
mov
ja
add
inc
add
add
add
jbe
pandn
mov
mov
mov
sbb
and
mov
pop
lret
dec
mov
pop
push
mov
add
pop
outsb
roll
mov
cmpl
inc
enter
and
sub
bound
mov
cmp
mov
ret
jge
inc
scas
xchg
mov
int3
lock
pop
enter
dec
or
mov
mov
les
adc
xchg
fwait
cmp
push
mov
jle
test
cmp
add
push
or
xchg
imul
paddusb
sti
cmp
sbb
inc
add
dec
cwtl
pop
mov
cltd
mov
push
pop
dec
int
js
jl
mov
sbb
sub
add
push
push
jecxz
ljmp
add
insl
cmp
lds
jecxz
push
jno
xchg
addb
jae
adc
jecxz
enter
xchg
pop
or
jge
icebp
ret
fdiv
dec
in
cmc
mov
mov
das
arpl
inc
pop
in
add
inc
fiadds
mov
or
add
push
rol
imul
add
fidivl
fbld
decl
pusha
add
movsl
btc
stos
xor
mov
add
jg
jecxz
fstpt
roll
add
lds
movsl
outsl
pop
test
movsl
fstps
xchg
divl
xor
mov
add
xor
mov
push
sub
fst
add
inc
sub
push
mov
aad
fldt
xchg
ret
jo
mov
lock
outsb
and
add
adc
mov
bound
mov
sub
aad
xor
mov
sbb
lds
sbb
adc
add
mov
mov
mov
inc
sub
add
test
std
mov
fcoml
or
cmp
fwait
ret
int3
cmpsl
jnp
push
jle
popa
add
jne
cs
clc
inc
mov
loopne
mov
cmp
and
mov
or
mov
call
add
xchg
add
push
cs
inc
add
mov
add
lret
loope
insl
test
roll
pushf
push
jo
mov
sub
stos
lea
add
std
mov
jmp
add
or
jno
testb
add
mov
lods
test
and
mov
add
add
mov
or
pop
xor
mov
or
sbb
add
add
jge
add
imul
ret
lea
add
mov
xchg
and
add
mov
je
jecxz
mov
out
and
xchg
jns
arpl
cmpsl
mov
int
add
mov
pop
call
aam
add
and
mov
stos
cli
data16
mov
cmp
jae
adc
add
mov
sarl
add
aam
loope
mov
fcmovnb
add
add
aaa
fldl
mov
decb
into
or
repnz
mov
mov
inc
mov
loope
mov
add
sti
mov
add
lds
add
push
add
mov
sub
add
add
adc
xor
les
imul
push
add
xchg
out
xor
movsl
sbb
pop
aas
into
mov
mov
xchg
into
push
and
mov
nop
add
nop
add
aam
push
negl
adc
pop
lods
mov
mov
push
mov
repz
imul
jecxz
fiaddl
idiv
xchg
sbb
or
loopne
mov
add
cmpsb
scas
xchg
stos
in
out
push
sbb
ljmp
andl
cmp
cwtl
mov
mov
jo
mov
pop
jecxz
dec
add
add
in
fwait
dec
adc
mov
cmc
test
rolb
mov
or
add
xchg
mov
mov
xchg
in
adc
cmp
fldenv
arpl
add
cld
hlt
lods
and
je
jns
loop
mov
imul
add
add
add
push
loopne
mov
jne
pop
fnstenv
inc
add
jmp
mov
xor
mov
addb
fucomp
std
and
adc
mov
bound
mov
lods
mov
or
fwait
adc
dec
jbe
je
push
add
lea
cmpsb
sbb
out
dec
test
jg
addr16
push
xlat
into
or
cmp
and
lcall
mov
add
and
mov
int
clc
lea
add
in
fisubrl
push
jmp
ljmp
add
lahf
inc
add
loop
mov
ss
test
and
fisttpl
jl
insl
test
jecxz
stos
es
jmp
stos
js
ret
outsb
insb
insl
aad
mov
pop
flds
add
mov
movsl
dec
sahf
inc
add
xlat
jnp
jns
add
cli
imul
xchg
cltd
jle
dec
arpl
push
es
lods
popf
cmc
rolb
mov
push
xor
mov
xchg
addb
ss
mov
mov
lret
add
mov
mov
mov
add
mov
pushl
dec
sbb
clc
mov
sbb
pop
aam
mov
imul
add
rolb
movsl
rolb
mov
mov
cld
int3
and
mov
add
mov
pop
pop
nop
add
add
add
mov
push
fldl
int
mov
fldenv
add
fisubs
scas
icebp
call
stos
pop
das
das
dec
adc
mov
mov
jg
push
xchg
mov
ds
scas
addl
pusha
add
fsubp
fwait
pop
xchg
add
jge
pop
lcall
mov
cmpsl
cmc
add
insl
ljmp
faddl
add
jp
aas
lds
mov
cld
rolb
mov
cmp
roll
inc
adc
mov
loope
daa
jo
mov
push
sub
out
add
mov
aas
or
mov
stc
and
push
ror
xchg
jae
daa
mov
push
inc
add
mov
mov
rolb
test
pop
out
js
jo
mov
add
mov
jmp
cli
into
imul
xor
loopne
mov
pop
das
mov
add
add
sub
ffree
cmpsl
cld
pop
leave
ja
pop
sbb
out
inc
add
add
lds
jp
add
cmc
pusha
add
sbb
test
mov
aas
sti
inc
rolb
mov
xchg
aas
les
push
xchg
or
or
out
lock
mov
add
in
popa
lret
sbb
pop
sub
out
mov
cltd
cmpsb
movsb
sbb
xchg
add
movsl
jp
or
jbe
add
sti
xor
mov
sub
movl
mov
mov
pop
insb
fdivrs
add
loop
mov
mov
movsl
int
inc
push
aam
cmc
xchg
add
inc
cmpsb
and
mov
mov
out
xchg
mov
repz
lcall
add
mov
sub
loope
cltd
mov
fidivs
add
mov
dec
addb
sbb
insb
dec
add
mov
add
push
and
pop
dec
jmp
pushf
mov
cmp
add
mov
sbb
add
jp
mov
pop
inc
add
xor
insb
mov
mov
insb
cmp
mov
pop
or
add
mov
stos
fsubrs
dec
scas
xor
jmp
pop
pop
jns
test
cld
rolb
insl
mov
jno
ret
mov
add
sub
cwtl
nop
add
jne
add
push
jmp
ds
and
sub
push
add
sbb
adc
insl
dec
stos
fstps
sub
push
dec
ja
cmovge
sti
push
mov
mov
ja
dec
int3
pop
push
insb
das
pop
push
ljmp
or
dec
outsb
rolb
mov
add
xchg
jle
jp
repnz
add
push
xchg
cmc
sbb
xchg
add
test
adc
mov
inc
jg
and
cmpsl
and
mov
imul
insb
in
push
test
and
mov
clc
int3
outsb
adc
cli
aas
jmp
lcall
call
and
add
cmp
adc
mov
inc
fstps
incl
imull
hlt
jnp
fidivs
movsb
js
add
and
mov
add
mov
testb
mov
inc
loop
mov
testl
mov
arpl
sub
add
mov
mov
jmp
notb
mov
lahf
out
add
mov
lock
add
mov
add
and
mov
roll
add
push
add
dec
cmpsl
cmp
call
mov
inc
loop
mov
mov
mov
mov
in
std
mov
pop
xor
add
jmp
adc
add
push
add
fistpll
shll
les
mov
and
add
push
js
mov
mov
stos
adc
mov
mov
ja
add
mov
or
mov
push
mov
inc
mov
lcall
add
imul
xchg
and
scas
cmc
mov
ja
and
add
mov
mov
pop
sub
gs
add
dec
sti
mov
sbbl
fcompl
and
add
pop
push
xchg
cmp
cli
or
mov
add
mov
test
push
add
push
mov
jbe
fisubs
mov
stc
add
adc
pop
rcrl
push
jmp
jbe
adc
in
sub
add
mov
in
in
call
pop
repnz
dec
pop
xchg
jmp
rolb
rolb
mov
pop
mov
cmpsl
push
add
push
lea
adc
add
pop
out
iret
icebp
and
pop
xchg
loop
mov
out
outsl
stc
add
lret
or
dec
mov
xchg
mov
jecxz
arpl
mov
ss
add
xor
add
mov
mov
cli
sub
mov
jns
loop
mov
add
sub
inc
adc
mov
loopne
mov
mov
cs
add
xchg
imul
scas
add
imul
add
pop
out
dec
mov
xor
mov
daa
in
fdivrl
mov
mov
pop
pop
std
pop
sbb
sub
cmp
pop
sbb
addb
adc
push
mov
mov
dec
sub
flds
lret
inc
leave
mov
addr16
mov
sub
cmpsl
hlt
mov
into
adc
mov
rolb
mov
mov
mov
stc
and
mov
adc
add
sbb
push
inc
xor
fstl
lods
push
addr16
xchg
add
mov
fisttps
pop
add
test
pop
push
cmp
jp
jp
into
cld
add
mov
inc
lods
xchg
or
pop
mov
mov
mov
adc
mov
mov
fsubrs
mov
fcoms
sarl
add
add
add
mov
adcl
inc
mov
mov
mov
sbb
mov
cmpsl
jo
mov
push
push
add
std
mov
mov
push
test
mov
add
dec
loop
mov
jl
or
add
xchg
sub
insl
int3
cmpsb
or
pop
mov
imull
push
imull
add
add
stc
mov
cmp
addb
lock
mov
and
lds
in
add
popf
mov
add
es
mov
ret
push
fcoms
insl
dec
mov
push
inc
jnp
call
xor
int3
test
add
mull
mov
lods
push
add
mov
fdivrs
inc
add
call
add
and
int
mov
mov
jp
sub
xor
dec
add
mov
lock
add
loop
mov
shll
stos
ret
loope
outsb
rolb
sub
add
inc
and
gs
sbb
add
call
jno
pop
icebp
adc
add
sbb
pop
or
es
xor
mov
outsb
aas
into
push
sti
das
scas
outsl
inc
add
add
add
lret
rolb
mov
or
sub
push
xchg
adc
mov
add
sub
lahf
push
adcl
cs
lods
stos
hlt
std
icebp
xor
mov
mov
fs
into
scas
pop
je
mov
mov
add
sbb
pop
cli
or
inc
cmp
and
jne
and
mov
xor
mov
stos
mov
pop
dec
adc
mov
fs
dec
cmp
addl
mov
loopne
mov
inc
add
add
jp
mov
bswap
xchg
mov
je
stos
jg
ficompl
imulb
or
ret
notb
jb
mov
into
aad
repz
sub
push
fwait
leave
pop
dec
in
xlat
outsl
fucomi
xchg
into
ja
out
push
push
pushf
lcall
mov
dec
or
xor
mov
add
push
fsubr
jnp
cld
aam
rolb
add
mov
icebp
mov
ljmp
push
and
hlt
cwtl
pop
push
xchg
je
in
aaa
xlat
xchg
in
add
xchg
mov
and
mov
add
add
outsl
lret
cmp
test
add
shr
ss
dec
hlt
sbb
jl
mov
and
adc
mov
add
mov
cmc
les
fs
adc
mov
adc
add
mov
adc
mov
xchg
out
add
mov
add
aas
sub
or
inc
jl
xchg
fbld
jl
mov
mov
and
mov
insb
data16
add
js
ret
sbb
clc
outsl
subl
dec
stc
jmp
pop
into
dec
scas
out
loopne
mov
xor
mov
jns
push
outsl
jb
mov
into
leave
int3
insl
mov
add
mov
sbb
jbe
into
push
out
in
xor
fsubr
iret
in
addb
sbbl
jo
mov
imul
cli
xchg
adc
mov
mov
adc
add
mov
add
or
add
jo
mov
inc
or
rorl
outsb
ss
das
rolb
mov
or
inc
push
pusha
add
lret
mov
out
js
inc
in
ret
daa
mov
mov
cltd
imul
push
iret
inc
add
stc
sub
mov
pushl
out
jns
xchg
mov
xchg
lock
inc
adc
mov
adc
add
mov
fisttpl
push
stos
cmp
add
es
gs
int3
sub
jl
mov
mov
movsb
mov
fildll
lcall
addb
xchg
add
bound
mov
lock
in
in
lcall
mov
mov
push
mov
add
push
mov
dec
mov
push
adc
dec
out
pop
cmpsb
cmpsb
jp
jno
jb
mov
lret
pusha
add
xor
mov
add
fsub
cmp
adc
aam
add
pop
mov
xchg
add
add
into
cmp
aaa
inc
inc
and
xchg
loop
mov
scas
data16
or
add
mov
gs
dec
dec
mov
mov
adc
push
fnstsw
clc
cli
cmp
aaa
cmpsl
icebp
mov
mov
push
dec
mov
add
jb
mov
push
cmpsl
test
mov
push
cmp
movsl
and
add
and
mov
sbb
or
addb
mov
addb
popa
sub
add
fisubs
add
pop
pop
daa
mov
mov
cs
xchg
push
mov
push
add
fidivrs
xchg
inc
xchg
in
into
nop
add
lahf
por
add
mov
add
and
mov
add
jae
nop
add
dec
inc
cmc
pusha
add
iret
fcmovnbe
addb
dec
jnp
push
add
cmc
mov
dec
sbb
mov
mov
add
inc
ret
aam
lahf
mov
loop
mov
cltd
adc
data16
jbe
push
or
in
pop
dec
in
jo
mov
je
xor
mov
mov
mov
aad
out
adc
movsb
shr
daa
push
add
mov
or
xchg
repnz
jmp
add
and
mov
mov
and
sub
push
mov
add
sub
add
or
mov
xchg
mov
jnp
push
das
push
xchg
in
xor
bound
mov
cld
mov
mov
push
fisttps
pop
mov
pop
mov
adc
sub
push
mov
dec
push
ror
inc
sbb
sbb
jns
xor
dec
push
add
jo
mov
push
add
mov
xchg
add
xchg
add
and
rolb
mov
pushf
xchg
xchg
push
dec
xchg
mov
mov
dec
loopne
mov
add
movsb
clc
xchg
sub
add
mov
mov
js
add
loop
mov
push
add
jbe
bound
mov
add
mov
lahf
fnstenv
rcr
mov
or
test
xchg
fs
pop
xchg
push
xchg
xchg
pop
or
lock
sbb
call
add
add
mov
dec
cmp
aad
pushw
aaa
fstl
add
mov
jge
jno
xchg
adc
or
aam
add
add
fwait
icebp
xchg
xor
mov
int3
and
icebp
addb
xor
mov
add
loop
mov
ljmp
add
arpl
jle
mov
popa
jl
inc
repz
daa
orl
mov
or
in
mov
add
mov
cs
cltd
mov
xchg
sahf
mov
dec
rcll
add
mov
mov
add
dec
aas
das
push
add
lcall
adc
mov
mov
mov
pop
fsubl
mov
mov
cwtl
push
jno
mov
outsb
or
out
scas
xlat
push
lods
jns
sbb
jo
mov
in
and
stc
in
lret
imul
dec
test
lock
and
nop
add
rolb
mov
xadd
aas
add
out
sbb
xchg
test
pop
inc
xchg
lds
dec
pushf
xor
aam
in
add
inc
add
es
and
mov
mov
xchg
dec
inc
push
loope
into
cld
loopne
mov
mov
jb
mov
stc
jge
xor
xor
mov
mov
mov
mov
and
and
insb
ret
orl
add
adc
xchg
add
sub
push
lcall
adc
mov
add
add
fidivs
mov
ljmp
inc
cmp
add
imul
sbb
mov
je
jmp
ja
add
add
xchg
stc
fistl
bound
mov
int
fidivrs
stos
xor
mov
mov
icebp
cltd
mov
or
mov
mov
js
mov
add
xchg
outsl
sbb
and
repnz
daa
push
subl
sbb
inc
add
mov
add
add
inc
stos
push
stos
push
lcall
out
dec
cmc
jecxz
out
mov
mov
mov
pop
xchg
dec
lods
nop
add
mov
add
mov
add
mov
mov
mov
add
rcl
dec
sti
cli
and
adc
adc
mov
ss
mov
in
loope
push
add
push
repz
adc
jecxz
into
leave
jge
inc
add
int3
mov
jecxz
test
add
inc
loopne
mov
ja
insb
mov
sub
cmp
loop
mov
mov
push
scas
xor
xlat
push
or
mov
mov
xor
js
and
popa
cmc
ficoms
cmp
loop
mov
ljmp
mov
add
imul
push
cmp
rolb
mov
sbb
orl
add
add
adc
mov
add
add
addps
pop
aad
or
fdivl
push
dec
or
cmp
add
addb
mov
mov
mov
addb
mov
movsl
je
pusha
add
xor
incb
sub
pop
mov
bound
mov
adc
mov
ja
xchg
push
std
mov
add
mov
mov
rolb
mov
pusha
add
fidivrs
sbb
mov
fcomp
loopne
mov
add
mov
mov
jmp
insb
dec
addb
ret
pop
lcall
mov
dec
sbbl
mov
mov
or
sub
jg
arpl
movsl
in
adc
jmp
mov
mov
jecxz
inc
nop
add
pop
dec
mov
xchg
bound
mov
add
pop
pop
clc
push
aaa
pop
mov
sti
sub
mov
loope
mov
arpl
push
sbb
inc
lock
lahf
iret
inc
add
shll
jl
std
je
mov
outsl
or
rcr
dec
rorl
add
rolb
aad
and
add
xor
mov
fs
mov
add
loop
mov
je
clc
dec
push
jg
xchg
repnz
dec
test
mov
in
mov
insl
aad
clc
ret
rol
andl
sbbl
add
fs
mov
jp
mov
add
ja
leave
inc
dec
add
mov
movsb
out
inc
push
add
xchg
pop
dec
leave
xor
inc
push
cmp
push
add
mov
mov
dec
popa
orl
cmp
add
cld
adc
add
and
add
and
test
mov
mov
mov
fisttpll
xor
mov
xor
add
mov
andl
in
ljmp
mov
mov
pushf
inc
arpl
xorl
out
jbe
push
sti
mov
fsts
arpl
stos
jns
aas
loop
mov
adcl
xor
add
or
rolb
mov
gs
fdivr
and
mov
mov
mov
push
xchg
jns
dec
mov
mov
mov
enter
int3
and
mov
imul
insl
scas
lea
pop
pop
mov
test
mov
cmp
imul
jmp
lea
pop
xlat
jbe
add
lret
sbbl
mov
sbb
fmulp
dec
fdivl
fildl
add
pusha
add
aam
add
sub
jge
xchg
add
int
jg
or
mov
mov
add
shll
filds
shll
xchg
add
add
jne
add
les
hlt
cmp
les
add
push
xor
sub
fadd
xor
mov
pop
test
clc
sbb
into
or
xor
leave
addb
andl
mov
mov
stos
pop
cmp
mov
aad
sbb
int3
and
mov
add
add
inc
inc
xor
addb
xchg
inc
loopne
mov
add
and
dec
les
mov
stos
add
push
and
mov
insl
rolb
mov
mov
mov
leave
dec
mov
add
jb
mov
add
sar
lods
or
jno
aas
pop
and
dec
mov
ss
xor
rcrl
sbb
mov
add
add
jle
adc
mov
inc
lret
movsb
insl
add
mov
and
mov
lods
out
jo
mov
sahf
inc
lret
daa
inc
cmp
sti
jae
ja
fmul
jno
addb
ret
dec
and
mov
sub
inc
inc
adc
add
add
add
je
adc
and
or
add
mov
lret
stos
xor
rorl
insl
inc
fwait
push
add
jl
cmp
xlat
adc
in
pop
test
add
mov
add
mov
pop
mov
rolb
mov
add
add
push
sub
xor
add
mov
mov
aad
add
push
add
dec
loope
add
add
xchg
mov
sub
sbb
lds
push
mov
inc
push
xchg
and
xchg
add
jns
mov
stos
fdivrs
ficomps
ret
std
push
fimuls
inc
add
fwait
mov
add
mov
mov
mov
ja
cmp
push
roll
inc
ja
add
insb
lahf
pop
orl
xorl
mov
addb
adc
add
mov
add
icebp
inc
gs
repz
mov
es
adc
add
je
mov
mov
out
loop
mov
add
add
leave
test
or
push
add
mov
fisttps
add
add
icebp
mov
ret
mov
mov
aad
add
pusha
add
mull
outsl
test
mov
add
icebp
pop
and
sbb
scas
xor
fmul
enter
int3
test
inc
leave
sbb
notb
jg
adc
sub
add
mov
push
add
mov
aaa
and
xor
mov
adc
jne
sub
and
pop
and
cli
adc
mov
push
and
add
add
movsb
loope
mov
aas
mov
xchg
inc
frstor
cmp
xchg
push
es
jb
mov
add
mov
lret
cltd
jbe
je
add
sarl
fistps
test
jb
mov
sti
xor
push
clc
inc
inc
add
mov
fadds
add
fidivs
and
xchg
test
add
push
addb
and
add
add
sbb
xchg
add
mov
add
daa
push
sbb
popf
imul
push
inc
in
adc
fsubr
js
pusha
add
outsb
jmp
in
jge
das
repnz
outsb
xchg
jns
adc
and
mov
xor
repnz
addb
lcall
addr16
ss
adc
adc
cltd
push
xchg
add
jge
sbb
add
fisubrl
aam
mov
stos
enter
push
int
add
mov
mov
add
add
mov
mov
sbb
jnp,pn
std
adc
push
add
mov
inc
shll
pop
test
add
lds
mov
sbb
int
add
pop
jge
stc
mov
imul
loope
test
mov
aaa
jmp
mov
scas
pop
test
mov
mov
imul
test
imul
fsubl
aas
inc
mov
leave
push
or
mov
jne
aam
sub
sbb
and
sbb
into
inc
add
mov
inc
jge
xchg
sarl
mov
cli
xor
mov
cmp
add
and
mov
mov
das
outsb
xchg
add
mov
inc
add
inc
ss
adc
or
push
fisttpl
mov
pop
lret
fidivrs
sbb
inc
push
add
mov
cwtl
clc
push
dec
jle
sub
mov
popf
cmp
jb
mov
mov
add
push
scas
loope
loopne
mov
add
loopne
mov
rcll
xorl
mov
mov
andl
cmp
loope
gs
fdivs
pop
add
sub
mov
add
push
add
push
rolb
mov
add
push
cmc
stos
mov
inc
inc
sub
mov
stos
inc
rolb
loop
mov
ret
lock
xor
mov
pop
in
in
out
cmp
mov
add
mov
add
mov
inc
or
imul
mov
inc
arpl
mov
out
in
scas
addb
pushf
addr16
data16
mov
and
push
pop
mov
int
or
sbb
inc
sti
psubq
ficoml
mov
insb
insb
jae
int
repz
enter
mov
mov
adc
mov
test
out
repnz
fcompl
leave
or
mov
ss
jnp
pop
dec
rcl
mov
add
fninit
adc
xlat
cmp
add
sbb
sub
xchg
mov
mov
jl
testl
pop
lds
dec
add
add
mov
sbb
movsl
repz
imul
ret
jp
add
movsb
ss
std
fidivrl
sahf
inc
add
sbb
sub
addb
mov
movsl
shrl
add
movsl
bound
mov
jge
cli
sti
incb
mov
push
fcmovnu
mov
adc
fs
xor
jmp
jge
hlt
push
add
int
lods
loop
mov
xchg
int3
ret
lret
push
and
es
lods
enter
add
sub
add
test
add
xlat
mov
add
mov
add
mov
stc
data16
mov
lret
add
aad
les
mov
push
add
add
cmpsb
mov
mov
or
push
add
add
add
mov
roll
sub
ljmp
add
jge
daa
jl
repnz
push
add
add
add
lret
push
adc
mov
sub
jno
jl
sub
dec
and
pop
repnz
int
rolb
mov
mov
out
in
inc
mov
pop
jo
mov
or
or
std
int
sbb
mov
ds
mov
mov
hlt
mov
mov
mov
add
in
push
add
ss
jge
mov
scas
mov
les
sub
mov
in
nop
add
in
jo
mov
push
cmp
add
pop
mov
faddl
cwtl
xchg
add
pushf
cwtl
inc
loope
sbb
mov
cmpsb
lods
mov
sub
add
rolb
mov
push
aaa
sti
adc
pop
jl
lods
mov
jp
into
daa
mov
hlt
add
mov
lock
cmp
inc
lea
jno
scas
dec
ret
enter
fs
add
mov
in
cmc
sahf
or
cwtl
mov
inc
pop
scas
cli
add
aam
xchg
add
push
jns
mov
jo
mov
aas
std
aam
or
and
add
mov
xchg
add
mov
add
mov
inc
in
cli
js
clc
xchg
sub
add
add
cmp
lret
jmp
frstor
mov
lahf
sti
push
mov
add
mov
add
mov
insb
inc
add
out
add
lea
or
xor
mov
movsl
addr16
fnstsw
je
or
jp
loopne
mov
inc
jge
mov
and
ds
pushf
fildl
das
xor
mov
mov
mov
xor
sbb
dec
lcall
dec
ret
das
fdiv
adc
mov
cmp
insb
push
scas
push
push
mov
inc
mov
cld
xor
xor
mov
not
push
lods
in
insb
adc
inc
cmpsb
cs
cli
mov
rolb
mov
cli
inc
dec
dec
and
mov
mov
into
dec
repnz
aas
out
push
adc
cmpsb
cmc
cmpsb
fs
jae
cmp
add
fidivl
add
mov
scas
jp
jns
push
pop
mov
cmp
std
xor
mov
cmpsb
and
std
icebp
stc
mov
mov
add
and
movsb
xorl
lret
pop
fidivs
add
and
mov
insl
mov
mov
mov
stos
dec
cmp
dec
aas
sub
ss
add
mov
add
cs
in
jmp
jp
sbb
jl
loope
mov
mov
mov
enter
nop
add
mov
or
out
mov
and
mov
fistl
inc
add
sbb
iret
mov
popa
mov
xchg
clc
test
add
addl
mov
xchg
mov
mov
enter
mov
or
add
mov
cmp
mov
mov
push
xchg
gs
movsb
add
mov
out
sub
dec
mov
sub
test
cmpsl
ljmp
dec
cltd
push
add
ljmp
les
add
stos
inc
out
mov
or
xchg
inc
stc
pop
pop
mov
mov
mov
bound
mov
xor
mov
icebp
push
cmp
add
xchg
or
ja
mov
add
sub
insl
sub
addr16
inc
dec
das
or
lahf
sub
add
dec
roll
mov
xor
mov
add
mov
jmp
enter
mov
mov
addb
cmpsb
push
add
mov
add
add
ds
adc
add
scas
fistpl
add
pop
add
outsl
sarl
add
sahf
int3
fildll
les
add
add
pop
adc
push
xchg
add
or
sbb
insb
mov
adc
jo
mov
fmull
push
add
nop
add
mov
push
cmp
js
or
stos
lock
add
add
outsl
dec
inc
mov
popa
mov
sbb
sbb
popf
mov
mov
push
ret
adc
jbe
xchg
or
inc
add
ret
out
or
clc
dec
ljmp
sbb
mov
and
add
mov
fists
addb
push
mov
add
jnp
xlat
inc
std
insl
mov
mov
jae
cwtl
adc
add
or
or
and
movsb
mov
pusha
add
and
leave
cmp
in
in
pop
cmp
add
cmp
xor
mov
mov
add
mov
call
aas
negl
addb
xor
mov
mov
mov
jmp
in
test
fcmovnb
xchg
cmp
fcmovnbe
add
mov
sbb
adc
sbb
mov
add
dec
push
add
push
sub
movsb
insl
mov
js
mov
push
add
mov
cltd
pushf
std
sub
out
sahf
ret
cmp
outsb
or
in
loop
mov
add
cmp
add
add
mov
add
xor
outsl
insb
pop
fisttpll
pusha
add
mov
xor
mov
mov
mov
ljmp
movsb
mov
xor
std
cmp
in
pop
mov
xchg
and
mov
mov
fstpt
pop
push
jno
xlat
adc
scas
js
fistpl
adc
ss
cli
fstps
add
rcll
add
mov
push
mov
pop
ds
add
rolb
mov
mov
outsb
jmp
pop
pop
int3
push
int
pop
es
add
aaa
cli
cmp
push
je
cmp
les
sbb
sub
jecxz
or
xchg
add
or
xor
inc
into
or
test
add
adc
mov
cld
pop
addb
out
fsubr
sbb
pop
hlt
cmp
rolb
mov
jbe
sbb
and
in
mov
sub
and
rolb
xchg
test
add
push
xchg
rcll
shll
add
pop
xlat
mov
adc
rolb
std
insl
add
scas
pop
pusha
add
mov
add
push
fisubs
movsl
movsl
nop
add
hlt
push
add
mov
stos
aaa
jne
leave
imul
add
and
sub
mov
adc
mov
gs
es
push
add
push
jb
mov
icebp
adc
mov
push
stos
ds
add
mov
and
lds
push
add
xor
out
shll
mov
test
int3
loopne
mov
pop
outsl
aaa
xlat
repz
mov
adc
mov
fs
fwait
stc
pop
xchg
push
inc
xor
add
inc
addr16
inc
imul
dec
xor
mov
xor
sbb
mov
test
push
pop
mov
int3
mov
mov
rolb
lahf
or
test
pop
lods
inc
out
movsb
fcompl
mov
add
cli
lcall
bound
mov
jae
mov
mov
test
or
shll
add
lret
sahf
popw
faddl
xor
in
push
xor
loopne
mov
mov
icebp
je
test
adc
mov
iret
popf
mov
repnz
and
ljmp
add
mov
test
cmpsb
aad
dec
mov
out
out
cmpsb
cmpsb
mov
addb
ljmp
in
mov
mov
fstpl
xchg
add
into
cmp
add
bound
mov
xor
fwait
xchg
in
inc
lea
push
int
adc
mov
xchg
aas
mov
lods
xor
iret
mov
fsubp
add
mov
cmpsl
insb
inc
stos
push
xlat
pop
sub
cmpsb
sub
adc
cld
add
cmp
jle
mov
add
xchg
out
or
leave
push
call
add
out
sub
mov
xchg
xor
imull
mov
int
pop
pusha
add
lea
cmp
xchg
out
add
mov
mov
or
aad
push
pop
or
iret
pop
arpl
loope
cmp
lcall
sti
push
add
and
add
pop
push
add
adc
mov
cwtl
add
insl
jnp
imul
cmp
aaa
int3
xchg
je
lret
addb
or
pcmpeqb
mov
mov
ljmp
imul
add
and
pop
dec
lods
ljmp
int3
into
mul
fisttps
xchg
mov
mov
jmp
jb
mov
xor
dec
pop
pop
push
pop
pop
pushf
mov
insb
popf
cli
or
jge
add
xor
cs
xchg
sub
and
or
fmul
push
add
loop
mov
mov
add
and
mov
cs
pop
pop
jns
pop
aad
test
and
cmpsl
mov
lods
mov
mov
add
xor
rolb
mov
inc
mov
mov
in
pop
or
testl
add
addb
mov
lret
clc
add
mov
push
xor
mov
out
arpl
cmp
pusha
add
jecxz
sub
push
xor
jg
addb
ja
or
sbb
mov
jo
mov
ficompl
mov
jnp
cs
mov
lea
push
or
sub
add
mov
add
push
je
jb
mov
ret
add
ss
testb
sbb
sbb
cwtl
xor
and
mov
pop
mov
mov
add
push
push
jmp
mov
add
push
add
mov
mov
aam
bound
mov
mov
test
dec
add
push
add
sbb
xchg
add
add
mov
and
mov
mov
fbstp
iret
inc
sbb
les
aas
pushf
aam
pop
adc
mov
cltd
call
sub
cmp
test
mov
inc
addb
outsl
je
add
jne
push
add
jmp
xchg
fildll
clc
mov
add
xor
cmp
pop
add
mov
lods
or
rolb
mov
insl
imul
pop
es
mov
fwait
cltd
in
arpl
rolb
ja
add
mov
add
dec
decb
or
add
add
xchg
add
addr16
inc
xchg
aas
cmp
aaa
push
push
mov
add
add
jmp
mov
sbb
jp
cld
push
std
lret
pop
jae
shll
mov
xlat
pop
je
xor
add
lods
lea
mov
in
into
test
add
inc
add
sub
mov
add
and
mov
mov
int3
jb
mov
dec
lcall
les
mov
push
add
or
lock
aaa
aas
popf
test
mov
popa
or
inc
adc
mov
add
jns
push
add
mov
dec
daa
hlt
rolb
mov
mov
mov
sub
cmc
je
sub
pop
and
push
add
jp
fisubrs
loope
lock
imul
icebp
shll
dec
mov
rolb
mov
mov
add
mov
mov
xchg
addb
mov
xor
mov
mov
insl
sahf
rolb
mov
mov
or
add
fstps
mov
inc
iret
sub
push
xor
push
mov
cmpsl
fcmovnbe
mov
mov
mov
fldt
and
add
jl
inc
movsb
mov
add
sub
adcl
mov
movsl
push
jnp
add
mov
add
add
jp
scas
mov
add
mov
sub
jge
shll
jmp
add
mov
add
push
xchg
movsl
adc
mov
sub
jnp
add
cmp
add
add
aad
daa
adc
add
rolb
fs
add
imull
lods
add
movsl
fdivrl
push
add
lret
pop
inc
aas
ja
cmc
mov
add
pop
out
das
enter
xor
insl
jecxz
cmpsb
in
pop
inc
insb
fdivs
inc
add
into
cmpsb
dec
call
add
mov
es
mov
xchg
jbe
sbb
mov
mov
mov
mov
ljmp
leave
add
cli
and
mov
movsb
pop
inc
add
mov
mov
sub
jecxz
sbb
add
push
fstpt
jo
mov
dec
cmp
ljmp
cmpsb
mov
mov
lret
lea
scas
popa
fidivl
cmp
mov
popf
fmul
and
mov
sbb
clc
aaa
dec
and
das
js
outsl
or
fists
jne
inc
sahf
inc
enter
fs
xchg
add
mov
lcall
les
mov
inc
cmpl
dec
fucomp
cmp
pop
xor
mov
divb
mov
jmp
add
mov
pop
push
out
mov
mov
and
das
les
jmp
dec
ja
mov
es
hlt
loopne
mov
xchg
fidivl
adc
shl
outsb
arpl
mov
jl
lods
dec
xchg
lods
push
daa
addb
mov
cs
sarl
stc
mov
pop
dec
cmp
adc
and
leave
enter
jns
add
mov
pop
mov
add
and
mov
stos
repz
add
add
sub
add
mov
pop
pop
mov
mov
hlt
xor
mov
lahf
nop
add
int3
jo
mov
sbb
or
adc
mov
push
adcl
cmp
pop
into
insl
jb
mov
ret
cmpsb
gs
inc
pop
push
xchg
sbb
pop
pop
loopne
mov
add
add
stos
stos
push
pop
xor
clc
ds
xchg
mov
add
adc
mov
rep
jmp
lock
add
mov
add
lahf
rol
add
add
dec
xor
sbb
add
mov
rolb
mov
lret
call
xchg
pusha
add
cmc
mov
mov
adc
test
jecxz
sub
pop
jge
in
add
lods
push
cwtl
mov
enter
hlt
mov
dec
push
inc
add
adc
inc
fucom
add
imul
sub
adc
mov
mov
and
add
mov
shll
sbb
and
add
int3
xlat
or
dec
xor
adc
mov
cmp
pop
test
cli
add
mov
test
push
aam
mov
scas
stos
je
and
mov
cwtl
icebp
aaa
out
push
pushf
ljmp
hlt
mov
shl
mov
cmp
push
sarl
mov
je
inc
add
push
enter
xor
sub
mov
imul
push
jg
scas
sbb
cli
mov
nop
add
push
and
xchg
mov
es
mov
mov
fbld
mov
mov
mov
xchg
add
mov
aam
addl
frstor
mov
mov
add
mov
movsl
and
cmp
sbb
adc
mov
popf
pop
cmp
je
jne
rolb
mov
addr16
arpl
sub
pusha
add
movsl
sbb
xlat
jb
mov
sbb
jge
pusha
add
pop
dec
sbb
insl
dec
out
xor
pop
xor
mov
lds
imul
jg
addb
pop
in
add
push
sbb
or
xchg
test
lds
cmp
cmp
mov
or
xchg
lcall
mov
mov
cltd
xlat
xor
mov
mov
jmp
add
test
jae
add
mov
lret
ret
in
into
mov
fimuls
push
push
mov
mov
fldcw
or
sbb
test
add
stos
cmpsl
mov
sti
inc
flds
lret
aaa
jo
mov
jbe
daa
jg
and
xchg
mov
jno
sub
fucomi
fwait
cvttps2pi
xor
adc
mov
add
jnp
add
push
xchg
jg
stos
stc
jmp
bound
mov
xlat
mov
mov
mov
mov
add
add
dec
xchg
add
mov
push
das
mov
cli
pop
cmovg
rolb
scas
mov
mov
aam
add
ja
add
xchg
add
add
fisttpl
jae
adc
mov
mov
add
mov
jb
mov
daa
pop
jno
dec
nop
add
pop
sub
sarl
add
mov
push
xorl
xor
mov
mov
cmpsl
xlat
mov
test
insl
lret
bound
mov
leave
inc
add
mov
insb
push
mov
pop
jl
add
mov
inc
xchg
inc
je
daa
jnp
and
mov
ja
add
mov
lea
push
mov
add
rorl
xor
add
jno
xchg
in
pop
arpl
adc
ds
push
add
xor
mov
aas
adc
mov
mov
add
jp
test
jbe
into
test
mov
iret
js
das
insl
es
mov
sbb
popf
imul
cmp
dec
rolb
mov
or
mov
mov
jecxz
inc
add
sti
dec
dec
jae
mov
sti
jecxz
mov
and
mov
add
inc
jno
xor
mov
and
xor
mov
adc
mov
and
or
leave
dec
mov
push
jne
adc
add
push
cli
cli
sbb
jne
aam
push
nop
add
add
xchg
out
mov
add
lcall
add
in
js
mov
add
icebp
xor
cmpsl
lret
or
add
shll
add
add
mov
mov
pop
mov
mov
ja
ds
je
sbb
jnp
stos
insl
call
es
sbb
mov
mov
add
sti
pop
cmp
pop
enter
push
add
enter
insb
aaa
bound
mov
popf
lahf
imul
aaa
in
addb
xor
mov
add
icebp
ds
adc
out
add
movsl
js
fstp
scas
mov
paddsw
or
mov
mov
mov
stos
or
aam
inc
jno
jae
add
std
mov
out
jp
mov
mov
dec
or
jl
jle
loope
mov
sti
xor
icebp
cmp
rorl
push
jp
negl
mov
and
mov
push
mov
popa
pop
jecxz
xlat
jmp
insl
cmp
clc
adc
insl
push
add
add
mov
sbb
add
mov
and
adc
mov
std
rolb
jne
jns
outsl
jno
add
fstl
lahf
imul
aaa
in
add
mov
into
jne
and
mov
xchg
lahf
push
pop
sti
int
bound
mov
loope
dec
sub
push
mov
push
arpl
xchg
sbb
sub
lods
add
push
jp
rolb
mov
fucomip
mov
add
add
incl
add
dec
aam
or
add
mov
dec
fcoms
xor
mov
add
xor
mov
cmpsb
push
inc
lea
add
movsl
ja
add
xchg
mov
cmp
enter
data16
loope
aaa
imul
add
add
mov
pop
cltd
je
dec
imul
sub
cmp
outsl
cld
int3
cmp
cmc
frstor
xchg
jae
mov
dec
das
push
add
mov
add
sbb
mov
aam
or
xor
das
mov
adc
mov
ss
fiaddl
add
dec
push
mov
jb
mov
lahf
arpl
or
mov
fstps
dec
mov
out
jae
pop
mov
xor
xor
adc
fsubs
inc
add
mov
or
mov
addr16
pop
pushf
pop
push
js
add
mov
sbb
fimull
and
mov
add
ret
inc
add
push
test
add
mov
or
jae
xor
mov
dec
out
inc
add
add
jmp
sub
mov
xchg
mov
aas
std
sbb
cmp
hlt
aad
out
or
fdivl
loope
add
lock
or
ds
arpl
add
cmp
add
dec
aam
add
pop
pop
adc
aas
pop
mov
add
mov
clc
cwtl
loop
mov
xor
add
ret
push
mov
cld
test
es
mov
aad
xor
mov
push
add
addb
daa
sbb
add
stos
mov
push
sbb
mov
dec
popa
adcl
pushf
adcl
jns
popa
and
mov
dec
cmp
mov
shr
add
pop
jne
xchg
mov
sbb
add
mov
jge
out
idivb
sbb
add
mov
xor
ret
mov
xchg
add
add
inc
add
add
or
mov
add
or
jl
insb
push
movsl
in
nop
add
test
cmp
dec
push
enter
and
insl
cltd
sti
and
mov
cmc
fwait
test
dec
push
add
cmc
push
dec
out
jge
jnp
std
lret
lods
jg
xor
jp
jns
add
sub
adc
or
add
mov
add
mov
jmp
push
test
clc
dec
xchg
fistps
xchg
add
and
add
pushf
push
sub
xchg
fld
lahf
adc
mov
add
inc
xor
mov
mov
xchg
mov
add
jae
add
fdiv
call
icebp
xor
mov
jns
gs
addb
cmpsb
je
pop
pop
movsl
icebp
sbb
cmpl
or
mov
mov
call
lcall
pop
out
hlt
aad
jle
fwait
adc
imul
lods
mov
push
cs
xor
xchg
jecxz
and
add
mov
pop
loope
addb
xor
rolb
mov
pop
jno
bound
mov
mov
cmp
std
push
sub
cmp
mov
add
add
or
insb
add
mov
sub
add
mov
das
cmp
add
jl
dec
mov
lock
cmp
test
leave
mov
add
repz
sahf
adc
and
insb
arpl
mov
mov
add
aas
ss
mov
out
cmpsb
cmp
pop
mov
and
mov
dec
inc
mov
dec
inc
add
mov
sub
xchg
push
add
add
add
rolb
pop
pop
leave
stos
push
or
add
sub
mov
mov
push
mov
xlat
je
add
add
sbb
adc
pop
addb
mov
push
pop
jecxz
aas
jns
popa
pusha
add
mov
push
add
xchg
fsubs
imul
popf
aad
test
and
jecxz
call
push
fbld
inc
add
mov
and
mov
mov
mov
jb
mov
lcall
or
sub
clc
sub
adc
test
repz
xor
mov
xchg
ror
outsl
ja
cmp
mov
pop
push
xor
mov
lea
aas
cmpsb
shll
incb
add
mov
xchg
add
push
test
test
fsub
add
idiv
pusha
add
add
out
cltd
outsl
in
add
jecxz
addb
mov
xchg
sbb
add
xchg
push
jle
in
movsl
xchg
add
push
mov
test
add
ss
add
ja
sbb
mov
int3
sar
insl
mov
mov
pop
call
fildl
pop
shl
les
mov
mov
rolb
mov
aaa
xor
mov
jecxz
cmp
test
out
push
add
je
push
xor
mov
and
fstps
jae
fistpl
add
enter
mov
pop
mov
cld
jb
mov
add
mov
jnp
cli
sbb
adc
mov
add
gs
repz
add
lea
bound
mov
add
add
and
mov
add
fmuls
mov
sub
dec
int
sbb
loop
mov
jecxz
xlat
fimull
jle
add
or
ficoms
sub
fs
jle
test
mov
jae
sarl
add
add
mov
addb
xchg
xor
mov
mov
jno
jbe
loop
mov
mov
imul
repz
mov
and
xor
fidivs
lods
scas
in
fldenv
jo
mov
int
stos
inc
jae
mulb
mov
jne
xchg
mov
in
imul
or
add
fcompl
or
sbb
add
inc
add
rolb
inc
add
adc
mov
jecxz
jl
mov
push
xchg
out
mul
fs
roll
ljmp
mov
jge
pop
in
mov
inc
mov
xor
popf
inc
ret
sbb
dec
dec
and
pop
xor
mov
pop
xor
loopne
mov
push
jp
add
mov
push
fstpl
pop
jae
lahf
neg
in
and
sti
test
mov
add
es
add
jg
jecxz
cmpsl
xchg
ds
push
add
lcall
mov
add
and
mov
cwtl
or
cwtl
dec
mov
mov
stc
adc
test
add
sub
add
jnp
push
cwtl
cltd
push
push
or
cs
out
dec
xor
jo
mov
add
movl
cmpsl
xchg
es
pop
jmp
jo
mov
add
mov
add
nop
add
or
mov
add
inc
add
mov
dec
fmulp
jle
xor
pop
mov
mov
add
leave
addb
jle
add
dec
pop
ja
cld
push
test
daa
insl
clc
out
push
add
ret
in
jno
xchg
and
mov
mov
fcoms
add
add
roll
mov
mov
mov
xchg
rcll
lahf
add
mov
in
mov
cwtl
mov
mov
dec
loope
loope
in
mov
mov
pushf
pop
mov
imul
sub
cld
push
cmpsb
mov
add
movsl
xchg
addb
mov
jne
cmp
pop
pop
jbe
and
rolb
add
push
xor
leave
xchg
or
add
test
das
addr16
ja
and
mov
adc
add
sbb
add
add
mov
and
mov
clc
pushf
out
cmp
xchg
inc
mov
mov
or
xchg
in
pushf
xchg
ljmp
out
add
jae
stos
inc
add
add
std
das
push
clc
ficompl
mull
addb
iret
mov
test
xchg
dec
and
dec
out
pop
add
jecxz
inc
out
adc
mov
sbb
add
mov
add
test
add
in
xchg
dec
test
add
jge
popa
cwtl
fsubrl
sub
jnp
add
cmp
mov
cmp
xor
mov
add
add
data16
lret
sbb
pop
jo
mov
nop
add
add
mov
dec
dec
jl
xchg
loop
mov
pop
mov
add
pusha
add
test
jae
fistpll
sahf
inc
je
sbb
xlat
add
mov
pushf
push
cmp
jecxz
lods
or
dec
ds
push
mov
sbb
sub
test
into
xor
mov
and
gs
mov
mov
stc
mov
mov
mov
pop
das
lahf
dec
pop
push
sahf
push
cmp
dec
fstl
mov
mov
mov
movsb
push
lock
mov
and
in
jbe
loop
mov
pop
xchg
aaa
pop
rolb
mov
mov
add
mov
test
mov
add
dec
inc
hlt
in
sub
push
inc
clc
cmp
xchg
push
add
jns
add
es
sbbl
ret
pop
insl
pop
sbb
jne
addb
adc
mov
add
dec
popw
loopne
mov
inc
add
mov
cmp
dec
or
push
jmp
jb
mov
add
add
add
