add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
jge
jge
call
rcl
rcl
rcrb
sbb
sbb
or
or
jecxz
xlat
das
das
js
add
adc
adc
adc
movsl
movsl
movsl
jge
add
add
push
push
push
push
push
push
push
push
push
inc
inc
inc
add
and
test
test
lea
aam
sbb
jg
jg
lods
lods
xchg
add
ret
mov
mov
add
add
add
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
div
iret
push
push
push
push
push
push
push
push
push
and
add
add
dec
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
push
add
fmull
add
sbb
add
add
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lea
lea
lea
add
movsl
adc
adc
adc
adc
adc
adc
insb
insb
push
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
add
in
in
in
in
in
in
or
ja
ja
ja
or
add
call
rcl
rcl
rorb
loop
loop
scas
scas
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lds
and
pusha
pusha
pusha
pusha
pusha
pusha
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
adc
adc
adc
add
insl
insl
insl
insl
push
push
push
push
add
add
and
and
dec
dec
jg
jg
mov
add
add
add
mov
mov
mov
mov
das
das
das
das
das
das
das
das
sub
sub
sub
in
in
in
in
in
in
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
push
push
add
add
add
sub
sub
adc
adc
adc
mov
mov
cmp
cmp
cmp
and
and
addr16
add
xchg
xchg
xchg
xchg
xchg
xchg
mov
sbb
cltd
push
push
lcall
add
add
aad
aad
sbb
sbb
sbb
sti
sti
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
addl
add
add
aas
aas
aas
aas
aas
aas
aas
aas
mov
add
add
push
add
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aas
aas
aas
aas
aas
aas
add
add
add
inc
or
push
push
push
push
push
add
add
mov
mov
mov
add
add
add
daa
daa
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
add
add
add
add
add
add
add
add
xlat
xlat
xlat
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xchg
xchg
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
adc
adc
rol
rol
rolb
add
push
push
push
inc
test
add
add
daa
daa
daa
daa
daa
add
aas
aas
aas
aas
aas
aas
aas
aas
add
add
aad
inc
inc
inc
inc
sub
sub
rcl
rcl
int
and
mov
jnp
jnp
jnp
add
addb
add
push
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
aam
aam
adc
add
add
add
add
div
div
div
add
add
add
faddl
add
add
add
add
add
jl
jl
add
add
add
call
test
test
dec
dec
dec
add
add
ss
loop
loop
add
add
sub
add
bound
add
out
out
mov
mov
repnz
add
add
add
add
ja
loope
loope
loope
loope
loope
sub
sub
sub
add
dec
dec
dec
dec
dec
or
or
or
add
add
add
and
and
add
movsl
movsl
movsl
add
rol
shl
dec
dec
and
and
and
add
aaa
aaa
aaa
add
or
cmp
cmp
add
add
sub
sub
sub
sub
in
in
in
in
in
in
in
in
hlt
hlt
xchg
xchg
add
add
add
inc
mov
add
add
add
popa
jo
jo
jo
add
add
jo
add
add
add
cltd
cltd
rol
add
xchg
add
add
add
mov
add
inc
add
add
add
and
sahf
je
pushf
pushf
pushf
pushf
insb
insb
insb
popa
push
push
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
sbb
pushf
pushf
pushf
add
add
stos
add
add
pop
jae
jae
cli
add
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
into
adc
adc
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
mov
add
add
jle
add
add
add
add
push
add
std
std
std
std
std
std
lea
add
add
pop
mov
jno
add
fs
add
add
enter
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
test
or
outsl
outsl
pop
pop
pop
repnz
add
add
add
or
or
or
adc
adc
adc
adc
add
xchg
push
push
add
fwait
fwait
fwait
mov
aam
mov
addb
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
or
sub
sub
sub
sub
sub
add
push
lret
lret
lret
add
add
loope
loope
loope
loope
add
jle
jle
jle
add
push
push
push
sub
sub
scas
scas
scas
scas
scas
hlt
hlt
hlt
hlt
add
add
add
add
add
roll
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
and
and
and
and
and
and
and
and
and
and
sbb
sbb
add
add
add
xor
xor
add
das
das
das
das
das
das
das
das
loope
loope
loope
loope
loope
add
add
fadd
mov
add
add
add
add
add
add
add
add
outsb
add
add
add
push
add
aaa
aaa
add
pop
pop
pop
pop
pop
pop
add
add
add
and
mov
add
add
xor
into
into
into
add
add
clc
es
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sbb
sbb
sbb
and
add
sbb
imul
add
add
sub
add
add
add
jno
jno
mov
cmp
cmp
inc
inc
inc
inc
inc
into
into
into
adc
adc
add
mov
je
add
add
mov
add
xor
push
push
push
push
push
push
push
push
push
adc
adc
xchg
xchg
xchg
popa
popa
popa
popa
popa
addl
add
xchg
xchg
or
or
or
or
or
xchg
add
inc
inc
inc
inc
xor
add
add
inc
add
ret
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
dec
rolb
add
add
add
mov
mov
and
add
add
add
add
out
out
out
out
out
out
sbb
sbb
inc
add
jecxz
add
add
add
add
xor
inc
add
jmp
lock
add
add
add
add
add
or
or
sub
aas
aas
aas
add
add
call
aas
aas
aas
aas
aas
aas
aas
aas
add
add
add
adc
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
mov
outsl
outsl
outsl
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
xor
js
js
js
js
add
add
add
jecxz
add
add
pop
pop
pop
pop
pop
add
push
push
add
add
add
push
push
push
push
into
into
push
xor
xor
xor
xor
jbe
push
push
push
push
add
add
sti
add
repz
mov
add
add
add
out
add
call
aad
aad
aad
jmp
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
addb
add
add
add
fs
dec
dec
dec
outsb
outsb
outsb
add
add
imul
daa
daa
add
add
add
clc
add
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
and
and
add
add
ds
or
or
inc
add
add
cs
mov
mov
mov
test
addl
addl
addl
add
add
add
xor
xor
xor
rolb
add
lret
add
add
add
std
std
add
add
add
add
add
fcmovnu
mov
mov
mov
add
dec
dec
dec
add
add
xchg
jle
xor
add
enter
xchg
xchg
xchg
xchg
xchg
jbe
and
and
and
and
and
loope
loope
loope
loope
loope
xchg
add
add
add
fstp
fstp
fstp
fstp
fstp
fstp
fstp
insb
mov
mov
mov
sti
sti
sti
ds
inc
inc
inc
inc
inc
inc
inc
inc
push
mov
push
push
push
addb
jno
jno
jno
les
jmp
jmp
add
add
add
add
aad
aad
ljmp
lods
lods
lods
lods
lods
fcomp
fcomp
fcomp
cmp
cmp
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
add
add
add
ds
add
add
add
push
addb
sbb
adc
adc
adc
add
add
add
xlat
xlat
xlat
jbe
jbe
inc
inc
inc
inc
inc
inc
inc
inc
xlat
xlat
xlat
xlat
xlat
add
inc
add
std
std
std
es
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
and
add
add
bound
add
add
into
into
into
into
add
sbb
pop
pop
pop
call
call
call
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
add
rcl
rcl
mov
add
add
mov
sldt
add
xchg
add
add
dec
dec
dec
ljmp
mov
mov
stos
stos
stos
stos
stos
stos
stos
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
jecxz
jecxz
jecxz
jecxz
jecxz
add
sub
sub
sub
sub
sub
sub
add
add
rcl
rcl
rcl
roll
add
pop
add
cmp
cmp
cmp
add
and
and
lds
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmpsb
cmpsb
cmpsb
cmpsb
xor
xor
xor
xor
xor
xor
xor
les
add
clc
pop
test
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
fwait
add
add
add
int3
icebp
icebp
loopne
loopne
loopne
inc
inc
mov
lret
lret
pop
add
add
add
dec
dec
add
add
xor
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
ds
cmp
cmp
sti
sti
sti
sti
sti
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
ss
push
push
push
push
push
push
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
add
add
add
push
or
or
repnz
jns
jns
jns
rol
add
add
stos
stos
stos
add
add
add
in
loop
add
xchg
xchg
xchg
xchg
xchg
xchg
sbb
pop
pop
pop
mov
in
in
in
imul
add
add
rolb
add
add
add
pop
pop
pop
pop
pop
pop
add
add
add
add
aaa
sbb
sbb
add
xor
add
lahf
add
push
push
push
std
std
std
or
or
add
jns
jns
jns
add
enter
popa
add
data16
pop
pop
imul
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
add
add
sbb
div
div
add
add
add
add
and
and
and
and
and
mov
add
aaa
aaa
aaa
aaa
add
sbb
sbb
dec
dec
add
add
xor
add
add
push
push
push
push
push
stos
stos
stos
add
add
aad
incl
add
outsl
add
add
add
add
add
add
add
scas
scas
add
and
and
and
addr16
add
add
jbe
jbe
jno
leave
leave
mov
mov
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
add
add
add
add
add
rcl
rcl
rcl
rcl
xor
xor
xchg
xchg
xchg
xchg
xchg
xchg
cmp
add
add
loopne
loopne
loopne
add
jne
jne
jne
jne
jne
jne
jne
jne
rcl
add
add
add
add
jns
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
aaa
aaa
aaa
add
add
add
add
or
pusha
pusha
pusha
lds
add
aaa
add
stos
stos
stos
stos
add
fs
jge
jge
push
push
push
push
mov
mov
mov
mov
mov
jbe
jbe
jbe
jnp
jnp
add
add
sub
lea
lea
lea
add
add
loopne
add
add
inc
jle
adc
adc
add
add
dec
out
roll
add
add
add
add
add
add
add
in
in
xor
cmp
cmp
cmp
pop
add
add
add
lock
aam
pop
lcallw
decl
mov
add
mov
pop
pop
pop
lea
add
push
pop
add
add
add
cmc
cmc
cmc
cmc
add
fcomp
fcomp
fcomp
fcomp
fcomp
fadds
add
add
add
xchg
xchg
xchg
add
js
push
inc
inc
inc
lret
lret
mov
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
mov
add
mov
mov
enter
add
add
inc
inc
xchg
xchg
xchg
xchg
add
add
not
add
movsl
movsl
sub
sub
sub
add
cmp
ss
or
or
add
rcl
rcl
rolb
add
jno
jno
jno
jb
jb
jb
jb
jb
jb
pop
pop
pop
popl
add
mov
ljmp
ljmp
lcall
or
add
add
clc
add
lods
lods
lods
lods
lods
lods
lods
lods
dec
dec
imul
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
push
push
push
mov
pop
imul
repz
clc
clc
clc
clc
add
add
in
in
in
lcall
xchg
push
push
push
push
push
push
push
add
add
add
add
lret
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
outsl
outsl
outsl
outsl
outsl
outsl
popf
popf
popf
popf
sbb
sbb
sbb
or
add
add
js
js
js
arpl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
in
in
in
in
in
in
in
add
add
add
cs
xor
add
mov
mov
fcmovu
test
add
pop
pop
pop
sbb
addr16
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
mov
in
mov
add
add
add
lahf
lahf
lahf
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
mov
mov
add
lahf
lahf
add
mov
mov
jae
jae
pushf
pushf
pushf
pushf
mov
mov
mov
stos
pushf
sbb
mov
mov
add
add
add
rcl
rcl
inc
push
push
push
push
push
push
push
stos
add
add
add
test
push
push
push
push
add
cmp
add
add
faddl
add
add
add
add
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
add
add
add
add
mov
mov
mov
and
and
add
add
dec
dec
mov
add
cmp
cmp
cmp
jo
or
or
push
mov
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
push
das
das
pop
pop
pop
pop
add
lea
lea
clc
clc
clc
clc
clc
clc
clc
addl
js
call
add
push
push
push
push
push
push
push
push
push
push
push
ss
add
add
test
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
add
add
sbb
add
add
add
add
add
add
insl
insl
add
add
add
dec
dec
dec
dec
jg
jg
jg
jg
outsl
jl
clc
clc
pop
pop
pop
pop
pop
pop
pop
add
add
add
int
mov
mov
mov
lods
lods
jae
add
add
push
adc
adc
adc
adc
scas
cmpb
mov
add
test
push
push
push
push
push
push
push
jge
inc
inc
inc
inc
leave
leave
xor
xchg
jbe
jbe
xor
add
add
lods
lods
lods
add
add
leave
leave
leave
ret
ret
ret
test
mov
jp
incb
add
add
push
push
in
in
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
xchg
pop
pop
pop
sbb
add
add
add
add
popf
popf
add
add
stos
stos
aam
aam
aam
aam
aam
aam
aam
aam
aam
jns
cwtl
cwtl
add
add
add
push
push
add
add
add
add
add
add
and
and
and
and
and
add
add
add
dec
dec
dec
add
ret
ret
pop
pop
add
inc
inc
and
add
add
mov
mov
mov
mov
add
push
push
push
add
inc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
add
add
add
in
in
pushf
pushf
or
or
or
or
add
add
add
add
add
int3
int3
int3
int3
int3
ss
sbb
sbb
sbb
add
add
add
mov
mov
mov
mov
push
add
push
add
add
je
fiadds
xchg
sbb
add
add
repz
icebp
pop
pop
pop
aas
aas
cmp
cmp
add
add
and
add
dec
dec
or
add
add
mov
mov
movl
inc
inc
inc
inc
mov
add
add
add
shr
add
jp
jp
jp
add
sub
sub
sub
sub
add
add
das
das
das
das
das
jb
sti
sti
sti
sti
sti
sti
pop
pop
pop
pop
pop
and
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
pop
pop
sbb
add
jno
jno
jno
jno
xor
add
add
add
outsb
outsb
and
and
and
and
adc
adc
adc
adc
adc
add
push
push
push
push
push
push
push
add
repnz
pop
pop
pop
pop
pop
pop
add
add
add
add
push
add
add
add
add
loope
loope
add
add
cmc
add
div
xchg
xchg
xchg
xchg
xchg
xchg
mov
inc
inc
inc
add
jecxz
mov
jle
add
add
nop
nop
nop
nop
nop
nop
xlat
add
add
add
stos
stos
stos
stos
stos
stos
add
add
sub
repz
add
imul
imul
add
sti
sti
sti
sti
sti
sti
sti
and
adc
mov
add
add
add
dec
popa
popa
popa
popa
mov
aad
mov
add
add
add
add
push
push
push
push
push
push
jo
rcl
rcl
rcl
rcl
lods
lods
push
push
push
push
push
add
add
or
add
add
add
add
add
jo
add
add
push
push
push
push
push
divb
cmp
cmp
cmp
cmp
aad
add
addb
adc
das
das
das
das
das
sbb
and
sbb
mov
mov
push
jns
add
add
add
add
add
out
fs
sub
sub
add
add
pop
pop
pop
pop
pop
pop
add
add
ljmp
add
add
cmpsb
cli
cli
cli
cli
cli
add
add
push
icebp
icebp
icebp
icebp
icebp
in
cli
mov
mov
add
jno
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
sbb
leave
leave
out
sub
sub
sub
sub
sub
xor
xor
pop
pop
pop
pop
pop
pop
pop
jl
jl
jl
jl
jl
jl
add
pop
pop
pop
add
outsb
outsb
outsb
outsb
test
aam
aam
add
add
add
xor
add
add
scas
add
jg
mov
mov
mov
xchg
xchg
add
rol
rol
rol
mov
add
ror
int
int
addb
addb
add
add
add
add
int3
int3
int3
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
test
into
into
add
add
mov
mov
inc
inc
inc
inc
inc
inc
movsb
add
add
add
add
add
add
add
add
add
add
add
rol
rol
xchg
add
add
add
mov
add
add
add
mov
add
add
jp
pop
ss
jg
add
mov
icebp
div
testb
and
add
div
div
div
div
notb
push
push
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
insl
insl
insl
dec
add
add
rcl
rolb
add
sub
sbb
sahf
sahf
sahf
sahf
sahf
sahf
sahf
xchg
xchg
mov
add
add
push
push
push
push
push
push
push
push
loopne
dec
dec
dec
dec
dec
dec
dec
add
mov
add
add
add
add
jno
jno
repnz
leave
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
add
add
add
addb
add
add
add
shll
je
je
je
je
loope
loope
loope
loope
loope
loope
loope
loope
add
add
mov
mov
add
lahf
lahf
lahf
lahf
lahf
add
add
add
insl
insl
insl
insl
insl
add
aaa
dec
dec
dec
dec
dec
dec
dec
dec
les
pop
pop
pop
pop
pop
mov
mov
sbb
add
jno
jno
out
out
out
out
out
out
out
out
add
add
add
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
push
push
push
push
push
push
push
add
rcl
rcl
rolb
add
rolb
add
lods
lods
in
in
in
in
mov
rcl
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lret
lret
add
adc
adc
jns
jns
jns
add
add
add
add
and
inc
inc
add
add
imul
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
mov
out
out
out
out
out
out
out
out
sub
sub
ljmp
dec
dec
lea
test
pop
pop
pop
and
sbb
push
push
push
push
push
push
push
loope
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
cmp
cmp
and
and
rorb
add
add
add
lcall
mov
pop
mov
mov
mov
insl
insl
cwtl
cwtl
cwtl
cwtl
lods
lods
lods
lods
lods
add
sbb
add
rcl
shlb
add
add
add
or
or
gs
add
add
add
in
in
in
in
in
in
in
cmc
cmc
cmc
cmc
cmc
cmc
add
aaa
aaa
aaa
in
mov
mov
pfrcpit2
add
add
add
xor
in
scas
scas
scas
scas
or
or
or
or
or
or
aam
xchg
xchg
xchg
xchg
xchg
add
cld
cld
cld
call
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
insb
insb
add
xor
xor
add
add
add
add
push
lods
add
repz
add
add
add
sub
sub
sbb
sbb
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
sub
dec
dec
dec
dec
dec
dec
dec
dec
cmp
cmp
cmp
cmp
cmp
add
addb
addb
pop
dec
xchg
xchg
xchg
jb
test
sub
ds
pop
pop
pop
pop
xlat
xlat
xlat
xlat
xlat
xlat
add
add
inc
inc
and
and
hlt
add
add
add
repz
add
xor
xor
xor
xor
add
jbe
jbe
jbe
jbe
jbe
jbe
add
add
or
or
or
add
add
mov
dec
dec
pop
pop
pop
pop
pop
pop
pop
add
add
add
test
test
test
test
test
add
jb
jb
jb
jb
mov
pop
pop
sbb
sbb
sbb
sbb
add
add
cmp
sbb
dec
dec
out
out
out
out
out
cmp
aam
aam
aam
outsl
outsl
outsl
outsl
outsl
outsl
outsl
lock
cmp
add
add
add
add
gs
mov
mov
data16
add
rcrb
pop
mov
mov
add
add
add
arpl
add
push
rcl
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
div
div
divl
jae
jae
jae
repnz
add
add
sub
sub
dec
dec
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
daa
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
fiadds
add
add
div
div
dec
dec
dec
dec
dec
dec
add
add
add
adc
add
jl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
add
fiadds
add
add
pop
pop
add
add
add
add
add
add
gs
add
adc
adc
adc
adc
sahf
sahf
sahf
add
add
in
in
je
je
push
push
push
push
push
push
xlat
add
add
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
add
add
mov
add
add
xor
or
add
add
push
daa
daa
daa
daa
daa
daa
daa
test
test
test
fcomp
fcomp
rol
rol
mov
mov
add
xlat
gs
cmc
add
mov
mov
mov
mov
mov
mov
aad
aad
add
popl
mov
in
sbb
cmp
mov
push
xchg
out
jne
xor
int
sub
repnz
aad
and
add
xchg
mov
add
lds
add
mov
push
dec
push
add
pop
inc
aam
and
hlt
aam
ret
das
or
mov
loopne
mov
pop
ficomps
pop
pop
pop
lret
sub
push
enter
xor
add
dec
in
add
loop
pop
mov
and
add
lods
add
inc
movl
imulb
dec
lock
outsb
push
xor
mov
add
call
fdivl
sub
jle
aaa
jge
mov
add
aad
insl
sbb
mov
add
pushf
inc
add
add
adc
out
xchg
imul
dec
into
mov
loope
cmp
cltd
push
jno
xchg
add
add
mov
mov
add
flds
in
nopl
add
add
shr
les
scas
ss
fidivl
idivb
in
pop
insl
and
add
not
imul
push
xchg
scas
add
fwait
mov
scas
add
addb
cmpsb
add
imul
dec
adc
cld
jle
popa
in
xor
add
notl
sahf
mov
pop
xchg
das
adc
mov
push
add
aam
cmpsb
add
int3
lods
dec
or
add
mov
ret
data16
pusha
mov
add
dec
or
add
add
xchg
add
aam
add
xchg
pushf
mov
mov
add
dec
loopne
rclb
cmpsl
popf
inc
js
scas
and
jnp
in
or
add
add
fstpt
in
pop
sub
add
push
dec
xchg
arpl
call
pop
adc
addb
popa
sahf
pop
das
and
add
jo
fisubrs
int3
imul
mov
add
add
ja
add
jecxz
add
lret
add
pop
ljmp
roll
in
filds
cmp
arpl
stos
add
adc
jp
faddl
cld
adc
or
mov
add
cmc
mov
add
std
pop
je
push
xchg
mov
add
add
or
add
add
cltd
mov
adc
inc
pop
jb
jmp
add
sti
lods
add
scas
add
dec
mov
daa
pop
xor
jge
lods
nop
repnz
add
mov
or
add
shlb
cmp
push
jne
into
lds
add
insl
push
lods
add
outsb
mov
add
add
cwtl
mov
push
outsl
jp
lahf
bound
add
sub
mov
aad
je
sbb
scas
add
xor
adc
jno
add
xchg
mov
cmp
cmp
pop
adc
sbb
fwait
xor
mov
add
xchg
nop
push
xor
adc
add
jge
inc
sub
add
add
out
clc
nop
pop
mov
pop
sub
addb
mov
push
or
add
xchg
jmp
mov
dec
loopne
insl
dec
mov
aas
mov
add
lds
inc
jmp
fwait
jle
shl
ret
ret
cmp
add
cld
push
add
xor
add
aam
stos
add
xor
xchg
fmull
cmpsb
add
rcl
mov
nop
sahf
imul
jmp
add
push
add
push
repz
inc
xchg
add
adc
cmpsb
add
mov
or
popa
sub
add
out
fcomip
les
pop
mov
movsb
add
jmp
in
xchg
add
add
int3
cmp
add
add
add
add
jl
cmpl
add
inc
jl
cld
add
add
add
sbb
add
add
add
cmpsl
jg
push
lea
jecxz
inc
inc
and
add
repz
stos
imul
xchg
pop
cmpl
ja
test
add
add
loope
lret
xor
mov
jno
mov
add
das
inc
mov
cmpsb
add
push
mov
add
dec
test
and
add
addb
jnp
rcr
pop
sbb
mov
shll
ffreep
cmpsl
ret
jb
inc
xchg
add
xchg
mov
and
add
add
add
add
fimuls
mov
imul
lea
add
mov
add
jmp
mov
add
shl
sbb
and
add
pop
mov
sahf
push
add
in
add
mov
xchg
lcall
insb
arpl
cltd
jl
sbb
cmp
inc
outsl
push
rorb
add
add
ljmp
mov
sub
add
ljmp
jo
arpl
aam
lds
rorb
cmp
adc
add
jo
fstpl
test
add
xchg
cld
iret
stos
mov
sbb
jg
sub
add
scas
add
rorb
pop
inc
outsl
dec
mull
add
inc
lock
add
add
add
jmp
lahf
test
pop
jp
pop
aad
add
lock
cmpsb
add
and
add
lods
adc
fnstsw
add
scas
roll
mov
or
add
aad
xchg
xchg
add
and
pop
pop
push
add
lret
pop
jp
add
add
add
push
shll
mov
jnp
inc
in
mov
int
mov
jmp
loop
lock
fisubl
movsl
dec
mov
fiadds
dec
int
add
dec
lret
dec
pop
lock
xor
pop
mov
in
nop
lock
out
xlat
pop
nop
dec
stos
sub
add
pushf
sub
add
daa
fnstsw
lret
dec
fimuls
mov
add
add
ja
xchg
mov
push
add
add
lret
add
bound
and
or
add
aas
divl
or
add
out
fwait
xchg
inc
in
add
jo
test
out
xlat
push
mov
mov
add
in
rcrb
lret
faddl
push
stos
pop
cmp
add
ss
sbb
ds
sub
push
sub
add
test
jp
imul
cwtl
mov
mov
add
add
cli
loope
mov
int
add
inc
stos
add
push
pushf
dec
or
daa
insb
xchg
das
hlt
xchg
popf
mov
jge
int3
inc
adc
popl
fadds
push
xor
add
imul
add
mov
mov
add
push
jae
push
jmp
or
add
mov
jecxz
pop
xchg
cmp
mov
fiaddl
jmp
or
add
xor
add
out
pop
pop
jecxz
cwtl
mov
test
sbb
sub
add
sub
add
add
outsl
lds
sbb
lds
cmp
pusha
push
and
add
add
aas
adcl
fsts
jmp
icebp
popa
sub
mov
mov
loope
add
add
add
jg
push
cli
fcmovnb
je
aaa
jmp
and
cmp
pop
xchg
add
xchg
add
enter
sahf
cmp
add
imul
sbb
jnp
sub
add
sbb
xor
popf
mov
push
xlat
dec
xor
sub
add
add
into
fwait
int3
int
sub
shlb
add
xchg
pop
mov
add
mov
sbb
popa
lock
add
popa
jmp
test
add
inc
cmp
ds
add
popa
aaa
cltd
sub
add
jnp
or
add
mov
cwtl
or
dec
mov
pop
cmp
xor
shll
add
add
push
xor
fidivrs
mov
fisttpl
ss
dec
xor
cmpsb
add
ja
aas
fidivrs
add
sub
add
mulb
or
repz
mov
add
xchg
mov
aam
imull
scas
add
mov
add
fwait
cmpsl
std
int3
movsl
ret
push
xor
repz
into
sbb
in
add
xor
add
lcall
rolb
inc
jo
mov
insl
or
add
in
ss
adc
or
add
ds
or
add
or
push
outsb
dec
scas
add
pop
lret
ds
mov
add
mov
add
insl
addb
sti
add
xor
adc
call
test
add
dec
inc
sbb
xor
push
adc
mov
add
in
pop
lcall
mov
orl
xor
push
mov
inc
sub
add
push
add
jno
ss
inc
jmp
mov
sbb
or
add
ss
ret
gs
dec
dec
in
dec
mov
out
pop
cmpsl
pop
adc
mov
add
loop
dec
ljmp
aaa
out
pop
lret
out
adc
stc
in
sbb
push
fadd
mov
xor
rclb
inc
jmp
dec
addb
out
xchg
jl
daa
addr16
les
cmp
add
adc
add
inc
scas
negl
add
lds
fnstenv
fbld
jp
insb
loop
aas
add
xchg
insb
shrl
mov
push
add
add
stc
cmpsl
mov
mov
mov
add
into
int3
sub
push
jae
rcrl
jbe
add
push
mov
jns
insl
imul
loopne
sbb
loop
mov
sbb
dec
mov
scas
sub
add
pusha
sbb
pusha
push
sarl
add
pop
or
add
cld
push
mov
sbb
insb
and
add
mov
int
add
je
pop
mov
add
mov
mov
add
test
add
adc
add
pop
sti
and
add
xchg
jno
pop
adc
mov
add
inc
add
add
in
xor
inc
das
xor
or
in
add
dec
push
clc
sarl
pop
mov
dec
mov
out
mov
add
inc
mov
adc
aad
lea
xchg
pop
insl
aad
scas
add
ds
adc
lcall
dec
ret
jo
inc
xchg
cwtl
xchg
dec
scas
sarb
shrl
dec
sti
test
add
mov
enter
out
lock
push
in
and
push
imul
mov
add
add
mov
add
call
jmp
mov
mov
adc
add
jl
xchg
pop
sbb
xor
add
sti
fstl
pop
xchg
push
pop
cmpl
add
add
outsb
test
sub
bound
adc
add
sbbl
ljmp
add
inc
cmc
mov
jl
add
scas
add
pop
in
mov
adc
add
adc
nop
push
mov
negb
add
rcrl
gs
pop
push
ss
add
add
pop
enter
psrlq
add
lods
add
jae
jle
cmp
add
jnp
and
add
or
add
xchg
sbb
out
and
dec
cmp
out
sub
adc
std
inc
in
iret
movsb
add
fsubr
lahf
jl
add
sub
add
xor
inc
call
scas
mov
pushf
lcall
add
fsubl
add
add
imulb
xchg
lret
push
std
jmp
fcoml
xchg
arpl
push
pusha
adc
add
jge
mov
add
bnd
and
add
add
mov
add
mov
add
loop
xchg
in
xchg
add
xor
xchg
nop
adc
in
dec
sbb
add
inc
add
sbb
add
add
adc
xchg
add
adc
ficoms
cmc
inc
ret
lea
add
lods
lret
push
int3
arpl
or
add
add
enter
xor
fcomps
add
jecxz
dec
popf
push
test
add
dec
jnp
testl
sub
add
in
jnp
fstl
hlt
leave
xchg
cmc
loop
dec
sub
pop
push
add
mov
xchg
add
arpl
add
shll
mov
mov
add
inc
cmpsl
imul
ret
xchg
mov
adc
add
add
fwait
adc
test
insl
fisubrl
mov
sub
add
add
adc
outsb
jae
js
cmp
cmpsb
add
sbb
insl
or
dec
int3
out
aad
jmp
cmpsl
mov
outsb
mov
mov
push
sbb
out
clc
ds
outsb
fmull
ja
mov
push
aaa
orl
mov
and
add
filds
push
or
add
test
ds
in
xchg
push
xchg
movsb
add
inc
adc
xor
fmull
jl
outsb
rorb
shll
add
jae
insb
xor
aas
rolb
add
stc
stos
fidivrs
insl
xlat
push
int
mov
add
mov
add
arpl
or
add
add
xor
add
xor
add
add
cmp
inc
hlt
mov
lods
add
xor
sbb
xor
sbb
mov
ljmp
add
out
jl
mov
add
and
or
popa
jbe
shll
and
add
xlat
jne
icebp
in
add
iret
adc
test
icebp
lret
mov
sbb
xchg
jb
add
aas
mov
add
scas
vmovupd
add
lcall
jge
mov
insb
add
mov
add
shlb
mov
jo
mov
pushl
or
clc
negb
add
push
aad
cmp
int3
lock
mov
dec
aam
in
ret
cmp
push
jnp
add
sbb
sub
inc
hlt
adc
xchg
stc
mov
add
lahf
dec
mov
loop
mov
fldt
sbb
rcrl
add
and
add
fcmovnb
mov
add
add
pop
repnz
add
inc
adc
add
and
mov
ds
in
inc
mov
paddsb
mov
cld
dec
and
fsub
jbe
add
cwtl
and
add
nop
into
add
add
mov
add
dec
lahf
ljmp
inc
daa
xchg
pop
seto
jns
notl
sbb
jno
xchg
lret
pop
js
in
and
push
add
dec
inc
test
lods
addr16
mov
lea
add
inc
nop
lea
mov
adc
pop
sbb
and
mov
enter
push
inc
insb
sbb
lret
inc
cld
insb
sti
clc
jp
sub
add
enter
sbb
addb
dec
push
push
add
or
add
xor
push
stos
add
aas
xchg
pushf
aad
push
add
dec
ds
rorb
push
add
or
sbb
mov
add
or
cmpsb
add
in
int
js
jecxz
add
dec
outsb
cmpsl
add
cmp
inc
scas
testl
stos
add
movsb
add
ljmp
icebp
aam
iret
mov
test
add
add
in
add
add
test
ret
adc
push
in
arpl
pop
lock
and
lret
mov
pop
insb
cmp
pop
mov
lret
inc
mov
mov
mov
jmp
xor
xchg
xor
pop
jmp
in
and
add
add
movsl
xchg
mov
dec
outsl
mov
add
pop
shlb
add
iret
cli
cmc
dec
xor
pop
push
add
or
add
xorl
add
aam
add
cmp
xchg
and
cmp
rorb
fcomps
dec
xor
sbb
mov
add
mov
add
dec
divb
aaa
mov
popf
mov
sbb
icebp
inc
in
addl
pop
cmp
pop
xchg
and
cwtl
sbb
int3
sub
enter
push
into
pop
mov
cmp
xor
add
pop
mov
add
mov
scas
into
pop
outsl
jl
cmp
fimuls
test
add
repnz
jecxz
popf
in
inc
fildll
out
sbb
add
sbb
out
stc
mov
add
aad
add
add
mov
aaa
push
test
divb
xchg
dec
jge
mov
test
add
add
movsl
sbb
add
mov
add
xchg
pop
fisttpl
add
aaa
sbb
cmp
add
add
ret
loope
inc
and
add
movl
add
mov
push
addb
push
mov
add
jmp
fistpll
ret
mov
and
add
and
add
push
add
subl
out
xchg
cli
movq
mov
out
add
or
push
and
add
mov
add
add
add
add
add
jl
jmp
mov
add
xchg
push
out
popa
jge
add
lods
add
fistpl
cmp
add
scas
add
cmp
add
xor
test
mov
scas
add
int
jnp
xchg
dec
xor
push
mov
pop
data16
stc
andl
add
imul
sub
add
add
dec
insl
in
stc
ljmp
inc
fcoml
xchg
dec
fstps
add
inc
outsl
mov
outsl
aaa
dec
rorl
add
xor
or
pop
roll
inc
clc
clc
ficoms
test
add
lret
sar
ss
sti
lock
fisubrs
add
imul
dec
outsl
jmp
add
out
add
adc
cmp
push
and
add
sub
dec
scas
js
add
aaa
push
jecxz
and
cmp
ss
pop
stc
dec
and
add
lahf
add
add
add
adc
add
cwtl
push
shr
inc
addb
popf
add
add
or
add
ja
loope
iret
outsb
shlb
fldcw
std
xor
pop
call
add
jmp
dec
sbb
or
add
push
push
xchg
push
dec
adcl
mov
add
pop
rol
jae
add
js
in
lahf
and
push
add
test
cli
shll
imul
loope
cli
ficoms
lahf
xor
loope
add
js
test
lea
add
loopne
out
add
or
add
mov
jp
inc
sti
in
adc
ret
push
push
jl
sti
inc
xor
sbb
add
addb
std
mov
pusha
xor
add
inc
outsb
loop
sbb
add
int3
push
aam
fcmovb
cmp
mov
ja
std
and
add
rol
mov
add
add
xchg
add
xchg
cmp
add
push
mov
add
loopne
add
loopne
imul
push
and
sub
push
jle
in
lock
jno
cwtl
dec
cmp
add
call
repnz
ljmp
insl
loop
add
adc
add
dec
mov
add
jo
jne
push
add
in
jg
mov
add
loopne
and
jecxz
or
in
addr16
mov
add
xor
xor
add
push
add
jecxz
xchg
loop
bound
push
or
add
sbb
cmp
add
add
outsl
add
pop
mov
scas
xor
lock
and
add
outsl
btrl
fadds
add
arpl
mov
jp
sub
lahf
add
and
adc
add
lds
add
dec
sbb
out
cwtl
roll
jne
inc
out
xchg
aas
push
inc
jecxz
test
add
sub
add
add
add
pop
mov
in
dec
out
lret
fnsave
add
push
out
adc
nop
test
add
add
or
enter
add
jae
movsb
add
aas
insb
pop
mov
pop
fsubs
sub
add
mov
inc
push
pop
inc
add
add
stos
call
add
sahf
lods
add
aam
mull
add
inc
int3
sub
add
cld
pop
ss
add
jo
push
shll
outsb
mov
ffreep
aas
cwtl
cwtl
add
mov
add
mov
add
sub
add
mov
push
and
or
daa
scas
add
jnp
sbb
jns
push
fists
push
testb
add
pop
stc
sbb
inc
and
add
cmc
rolb
movsl
cmc
andl
call
cmp
add
out
add
push
lods
movsb
add
pop
mov
add
add
stos
add
or
add
pop
sbb
add
inc
sbb
insb
mov
jbe
mov
addl
pop
adc
add
daa
sbb
dec
cmp
mov
xor
add
jbe
jmp
add
add
mov
add
pop
movsb
add
int
add
jecxz
mov
mov
add
jmp
add
add
and
push
addb
mov
in
xor
inc
sbb
mov
jg
mov
mov
add
idivl
arpl
add
imul
mov
inc
cld
sbbl
push
add
std
fnstenv
add
icebp
or
fs
xlat
movsb
add
xchg
jne
sbb
arpl
aam
test
jle
jmp
sbb
cltd
fisubrl
add
enter
fdivl
sub
imul
add
add
push
push
adc
test
jge
ss
push
out
out
dec
ret
outsb
in
shl
or
sbb
insb
fyl2x
mov
aam
add
and
add
adc
add
mov
push
mov
mov
cmp
add
or
add
inc
cmp
sbb
xchg
cli
add
movsl
cmpsb
add
out
repnz
add
xchg
idiv
imul
inc
arpl
pop
fcmovbe
jbe
sbb
sub
jae
add
pop
mov
sbb
xor
addr16
shll
imul
sub
fucomp
shr
ret
sbb
add
fisubrl
insl
adc
inc
pusha
inc
test
add
cmp
push
dec
jge
dec
cmp
outsb
mov
add
add
int3
imul
dec
add
hlt
mov
mov
xor
adc
pause
divb
dec
in
lods
jp
pop
movb
add
addr16
cmp
pop
or
mov
cld
cmp
leave
jle,pt
repz
add
add
mov
add
lret
mov
incb
mov
push
cld
mov
add
orl
push
lea
push
push
call
sub
add
mov
mov
and
test
je
mov
push
push
bnd
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
in
and
lds
mov
js
cltd
ficompl
adc
cmp
pop
in
cmp
daa
sbb
mov
add
add
add
jno
adc
add
gs
and
add
pop
add
mov
add
mov
pop
xchg
pop
pop
pop
lahf
aas
xor
push
mov
lea
ljmp
cmp
jae
sbb
mov
add
xchg
sub
add
dec
jle
add
bound
push
add
int
or
pop
outsl
xchg
insb
stc
pop
call
pop
or
add
call
add
add
test
add
add
jae
aaa
xor
push
push
ret
add
mov
jmp
bswap
outsb
pop
mov
icebp
ja
add
mov
mov
push
add
or
add
sbb
add
mov
add
push
ds
jmp
xchg
cmpsl
out
pop
pop
ljmp
xor
jecxz
inc
cmp
add
pop
in
and
add
mov
into
inc
cli
test
add
add
les
add
lods
jle
lds
or
fadds
ds
scas
xor
add
add
lret
out
lret
movl
aaa
push
add
lods
xor
fstpt
in
inc
jmp
les
add
push
mov
add
pusha
rcll
add
mov
fisubl
add
jo
sub
add
add
jb
jae
or
add
push
or
dec
lea
imul
sarb
add
mov
adc
movsl
inc
mov
add
pop
ret
and
test
add
mov
imul
cmc
rcll
movsb
add
add
add
fisttpl
ja
cmc
dec
sub
pop
xchg
xchg
sub
add
inc
inc
in
lods
add
xchg
daa
mov
test
add
das
mov
xor
adc
into
jg
add
push
add
or
add
out
test
add
fbstp
enter
out
ds
pop
inc
push
add
jl
mov
dec
stos
push
or
add
jmp
stos
add
add
add
popa
out
inc
jb
push
mov
or
add
pop
inc
dec
push
add
push
mov
add
adc
add
mov
fisubs
add
imul
or
and
dec
pop
mov
add
add
divl
mov
lea
add
cld
add
add
add
add
out
stc
sbb
imul
jno
add
lcall
fs
mov
add
in
inc
push
or
add
add
in
call
jo
clc
push
dec
sarl
add
into
sub
sbb
add
xor
sbb
xchg
jb
add
js
stos
add
bound
add
jae
mov
sub
add
push
ljmp
add
and
add
dec
cmp
add
fimull
pop
inc
jne
sbb
in
mov
in
imul
imul
inc
dec
jmp
cmp
addb
mov
sub
mov
and
add
inc
mov
push
out
frstor
add
addb
jecxz
rcrl
mov
lds
xor
xor
add
and
mov
insb
iret
mov
add
mov
xor
movsb
add
push
mov
cld
push
add
push
dec
sbb
call
add
and
out
daa
and
xor
lods
add
jge
mov
add
aas
aaa
jns
cmp
lock
add
add
fnstenv
dec
mov
ja
mov
mov
pop
nop
jns
pop
iret
in
sub
add
add
repz
out
daa
mov
pusha
pop
and
add
add
mov
mov
add
andl
aad
add
imul
pushf
adc
cmp
inc
inc
sub
add
add
imulb
pushf
xor
xor
push
jle
push
add
lret
add
shr
or
xchg
xor
push
cmpl
add
call
inc
add
add
and
add
scas
ljmp
cmp
dec
push
jb
outsl
and
add
and
add
fwait
inc
push
add
add
arpl
jp
add
xchg
pop
imul
cmp
jo
sbb
add
jecxz
or
push
in
cmp
mov
mov
daa
dec
cltd
mull
ja
mov
add
loopne
mov
xor
bound
add
lock
mov
add
add
add
add
pop
mov
add
xchg
and
add
mov
push
xor
bound
sar
add
or
add
inc
aas
inc
shl
shlb
add
loop
je
and
add
add
pop
ret
mov
add
push
add
shl
xchg
mov
mov
testb
xchg
outsl
dec
cli
push
rolb
add
addr16
out
and
add
cmp
pop
out
xchg
add
adc
push
clc
xchg
push
add
add
add
sbb
shlb
test
add
push
or
add
push
popf
xor
in
lret
mov
inc
xchg
fidivs
dec
loop
imul
lret
mov
cli
mov
cwtl
test
jmp
add
int3
dec
xchg
add
add
test
add
fwait
cmpsl
addr16
stos
mov
sbb
mov
add
scas
push
je
add
clc
insl
push
adc
loop
out
mov
add
sub
add
push
mov
into
lretw
rolb
icebp
popf
pusha
cmp
push
and
pop
push
clc
and
add
mov
cmpsl
repz
xor
add
xchg
sti
jnp
add
xchg
stc
mov
add
pop
jp
rolb
neg
addb
xor
inc
mov
bts
sbb
add
imul
pop
popa
test
rolb
add
scas
mov
clc
push
mov
cwtl
int3
mov
add
xchg
dec
imul
jne
xor
inc
fldl2e
pusha
mov
in
std
and
ljmp
int
fsubrl
mov
mov
je
jae
or
adc
js
add
jmp
pop
hlt
aam
mov
movsb
add
mov
or
je
jp
push
test
adc
add
xor
imul
or
add
adc
add
test
add
jbe
repnz
add
dec
push
mov
repz
add
sub
add
xor
xor
popl
js
xor
xor
push
iret
stos
add
inc
or
add
mov
push
sub
add
xor
insb
sub
jno
add
lcall
imul
add
outsl
cmpsl
push
lret
jge
test
add
add
jge
aaa
leave
cltd
addr16
dec
leave
pop
add
add
push
sub
add
in
pop
rorl
add
pop
mov
add
loopne
or
add
addb
rcrl
popa
out
add
pop
call
or
add
add
add
jnp
fcom
addb
push
dec
adc
xor
sbb
cmp
fdivrl
add
jne
sahf
arpl
cld
stos
add
negl
pop
daa
das
pop
xchg
add
fistl
maxps
jbe
add
stos
add
adc
pop
maxps
dec
and
hlt
repz
into
call
add
mov
jbe
add
enter
dec
inc
sub
pushf
add
sbb
pop
nop
xor
test
add
mov
add
add
cmp
fildl
dec
insb
mov
jb
jb
add
pop
xlat
jecxz
out
xchg
addr16
cmp
sub
add
inc
and
mov
stc
stc
push
cmp
cmp
add
into
adc
or
add
xchg
pop
lcall
add
or
add
mov
bnd
xchg
xchg
sbb
cltd
aaa
jp
push
pop
push
sub
cltd
sub
add
clc
pop
dec
addr16
sbb
movsl
test
add
imul
add
jae
adc
sbb
add
imulb
sbb
mov
add
add
add
push
cmp
js
add
cmp
pop
mov
add
cld
sub
loope
ficompl
outsl
mov
add
xor
mov
add
jo
stc
stos
add
addb
push
mov
mov
add
cmc
or
pop
mov
add
fimuls
aaa
push
jo
lea
imul
cmp
add
cmc
xor
sub
add
add
into
push
arpl
jp
add
addb
iret
in
movsb
add
adc
aad
and
mov
lret
push
xlat
mov
or
add
lods
add
ds
or
add
out
mov
or
test
add
cmc
cmpsb
add
add
add
pop
popa
inc
mov
ljmp
jecxz
test
add
jge
adc
add
js
add
add
aam
push
push
add
pop
xor
cmp
cmpsl
jb
cmp
aas
sarl
mov
add
scas
jae
add
add
je
xchg
add
and
add
or
loope
mov
lret
enter
add
fdiv
rorb
xchg
mov
add
cmp
cmp
lds
xchg
test
add
addr16
loop
sub
add
push
sub
add
sbbl
or
fnsave
add
jae
and
add
in
mov
outsl
sbb
mov
add
fisubs
add
push
add
push
pop
dec
add
sub
add
add
xchg
popa
daa
push
fs
mov
notl
sbb
out
sub
push
jp
mov
add
add
or
add
xchg
cmp
jne
sub
adc
xor
mov
add
fsts
daa
push
popf
mov
ds
out
sbb
xor
lods
add
mov
add
or
add
xchg
cmpsl
hlt
cmc
hlt
and
mov
or
add
add
push
addb
xchg
mov
add
cld
std
rolb
loop
and
inc
and
aaa
sub
pop
fwait
adc
mov
push
pop
xor
negb
sub
add
add
jg
sbb
and
add
cmp
add
sbb
mov
outsl
addr16
into
stc
fadds
imul
mov
xchg
adc
lret
xor
scas
push
dec
jns
cmp
bound
mov
stos
loop
add
xchg
hlt
hlt
test
add
and
inc
ja
rdtsc
jnp
mov
xor
pop
iret
mov
imul
add
pop
xor
add
sbb
mov
inc
add
cmp
push
add
rolb
add
push
mov
inc
ljmp
add
add
add
test
add
std
pop
test
add
xchg
jmp
or
add
xlat
jne
pop
loope
push
mov
lea
mov
add
sbb
fmul
jecxz
adc
pop
in
cmpsb
add
mov
add
pop
xor
mov
add
jbe
cmp
add
jae
mov
fwait
adc
jns
add
cmp
jns
xchg
pop
shl
xor
lret
int3
cmpl
imul
mov
add
xlat
sahf
bound
add
push
adc
add
outsl
dec
jl
gs
pop
jmp
sbb
add
repnz
add
hlt
sti
in
jp
adc
fstpt
push
insl
xor
test
add
out
mov
add
cwtl
test
add
fiaddl
add
rorl
add
pop
sub
dec
dec
jle
xor
add
fsubrs
outsl
je
out
out
lcall
icebp
pop
jge
fdivs
mov
lcall
or
fwait
inc
jo
je
in
mov
mov
add
ja
xor
cmp
sti
xchg
sbb
add
push
add
add
lods
add
les
call
add
xchg
xchg
inc
pop
ljmp
cmc
insb
int
mov
add
pop
jg
fadds
int
ficompl
cmp
sarl
insl
ficompl
dec
xchg
add
test
add
add
stos
xlat
in
mov
ret
add
scas
add
lahf
jo
add
call
mov
fldcw
movsl
jbe
and
aad
add
mov
sbbl
xor
jbe
lds
add
jmp
aaa
mov
das
sbb
cld
mov
cltd
aam
jp
scas
in
lret
and
add
mov
add
mov
xor
and
xchg
outsl
add
add
in
xchg
or
add
ss
imul
mov
add
mov
lods
add
enter
roll
jge
jae
popf
cmp
insb
imulb
daa
insl
sbb
xchg
mov
cmp
bound
stos
scas
add
inc
sahf
leave
cld
inc
xchg
mov
xchg
add
inc
pop
dec
sub
add
lods
xor
pop
dec
addb
mov
ds
pop
rcrb
sbb
mov
hlt
push
mov
add
pop
xchg
test
add
jle
add
inc
imul
push
dec
sti
test
repz
cwtl
sbb
cmp
mov
test
add
add
add
js
shlb
add
add
movsb
add
or
add
lret
fs
shrl
add
out
inc
cmpl
add
push
addb
jecxz
inc
mov
add
pusha
pushf
add
xchg
cmp
jno
lcall
pop
jb
jp
outsl
mov
mov
test
sub
mov
jge
stos
add
sti
std
rcrb
loop
mov
add
jecxz
xor
pop
ds
cld
dec
sub
add
loopne
add
add
cmp
test
add
xor
pop
adc
dec
cmc
mov
bsf
xor
int
mov
sub
add
clc
repnz
nop
nop
jae
add
add
and
xchg
addl
incb
add
add
iret
add
nop
push
mov
leave
nop
jmp
sbb
jmp
add
cld
nop
nop
jae
mov
mov
dec
push
clc
repnz
nop
nop
jae
dec
add
or
ret
mov
add
repnz
nop
nop
jae
repz
call
clc
repnz
nop
nop
jae
add
add
in
leave
nop
jmp
add
and
dec
sti
cmc
scas
iret
call
clc
repnz
nop
nop
jae
mov
add
movsl
push
clc
repnz
nop
nop
jae
mov
add
pop
inc
insb
add
xchg
and
clc
repnz
nop
nop
jae
add
cmp
stos
push
push
mov
xchg
ret
add
sbb
pop
add
inc
jp
nop
push
mov
leave
nop
jmp
pop
test
inc
fisubrs
clc
clc
repnz
nop
nop
jae
cmp
add
cmc
add
cli
lods
mov
clc
repnz
nop
nop
jae
pop
inc
add
add
test
repnz
nop
nop
jae
hlt
xchg
add
cmpl
nop
push
mov
leave
nop
jmp
lods
mov
add
lds
cld
nop
nop
jae
dec
lahf
add
test
add
nop
push
mov
leave
nop
jmp
add
add
nop
push
mov
leave
nop
jmp
inc
pop
add
add
xchg
pusha
clc
repnz
nop
nop
jae
dec
pop
add
pop
add
inc
and
add
je
add
add
add
add
fisttpll
mov
adc
repnz
nop
nop
jae
dec
add
clc
repnz
nop
nop
jae
add
mov
scas
add
mov
test
xchg
ret
add
inc
add
xchg
add
jb
mov
clc
repnz
nop
nop
jae
add
popf
cmp
jns
push
mov
xchg
ret
add
sub
arpl
push
clc
repnz
nop
nop
jae
incb
add
sahf
repnz
pop
lds
cld
nop
nop
jae
xchg
add
and
add
add
shl
nop
push
mov
leave
nop
jmp
add
mov
enter
push
push
mov
xchg
ret
aad
repz
jmp
add
xor
clc
repnz
nop
nop
jae
incb
dec
add
out
xor
mov
clc
repnz
nop
nop
jae
add
xlat
dec
jns
movb
push
mov
leave
nop
jmp
push
add
repz
push
clc
repnz
nop
nop
jae
add
add
cmp
mov
and
add
and
push
ja
nop
push
mov
leave
nop
jmp
inc
add
pop
clc
repnz
nop
nop
jae
add
insl
pop
les
push
addb
jns
jo
nop
push
mov
leave
nop
jmp
test
add
lods
add
add
add
icebp
push
clc
repnz
nop
nop
jae
jmp
add
dec
fistpl
push
mov
xchg
ret
add
xchg
add
popf
popf
and
mov
xchg
ret
push
pop
xchg
push
add
jnp
cmpsb
add
push
push
push
mov
xchg
ret
lret
popf
add
xchg
push
add
arpl
loop
clc
repnz
nop
nop
jae
test
add
and
add
jmp
push
mov
leave
nop
jmp
xchg
aad
add
mov
mov
xchg
ret
mov
hlt
lock
add
sahf
fsubr
lods
clc
repnz
nop
nop
jae
add
add
cmc
jne
add
arpl
add
dec
add
repz
nop
push
mov
leave
nop
jmp
pushf
push
insl
popf
add
cmp
inc
nop
push
mov
leave
nop
jmp
add
add
or
add
push
es
jecxz
repnz
nop
nop
jae
xchg
cmp
outsl
or
nop
push
mov
leave
nop
jmp
add
add
ss
jb
add
clc
repnz
nop
nop
jae
pop
add
add
cmpsb
add
shl
movsb
clc
repnz
nop
nop
jae
add
dec
push
jl
xor
clc
repnz
nop
nop
jae
add
add
dec
add
jl
add
clc
repnz
nop
nop
jae
add
add
pop
push
clc
repnz
nop
nop
jae
test
ss
pop
add
sbb
cld
push
mov
xchg
ret
add
insb
add
lock
scas
cmp
add
clc
repnz
nop
nop
jae
add
sbb
call
nop
jae
add
add
add
add
lahf
mov
push
mov
xchg
ret
out
push
add
mov
cmc
add
push
mov
xchg
ret
add
cmp
add
push
clc
repnz
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
aam
add
add
inc
stos
clc
repnz
nop
nop
jae
inc
add
and
cmc
add
add
inc
mov
clc
repnz
nop
nop
jae
inc
cmp
mov
and
repnz
nop
nop
jae
add
add
inc
lock
add
mov
add
add
add
inc
pop
add
add
mov
clc
repnz
nop
nop
jae
add
arpl
jns
sub
add
adc
add
dec
add
pop
xlat
dec
add
and
push
mov
xchg
ret
push
push
arpl
add
jmp
lea
clc
repnz
nop
nop
jae
pushf
jmp
add
dec
xor
push
push
mov
xchg
ret
lock
add
add
pop
xchg
jno
jmp
repnz
nop
nop
jae
add
add
mov
test
add
clc
repnz
nop
nop
jae
incb
cmp
push
push
mov
xchg
ret
xchg
insl
mov
lods
add
sbb
cld
nop
nop
jae
aam
dec
les
mov
nop
nop
jae
dec
jmp
add
add
nop
push
mov
leave
nop
jmp
hlt
dec
add
inc
add
add
dec
fistpl
push
mov
xchg
ret
add
mov
add
sar
shl
clc
repnz
nop
nop
jae
add
add
add
pop
push
mov
xchg
ret
add
add
scas
add
add
xchg
inc
add
add
add
out
mov
add
add
clc
repnz
nop
nop
jae
adc
aad
add
icebp
inc
dec
es
repnz
nop
nop
jae
aad
pushf
and
mov
xchg
ret
and
add
dec
add
pop
mov
push
mov
xchg
ret
add
add
mov
add
jo
add
les
push
push
clc
repnz
nop
nop
jae
cmc
pushf
incb
lock
repnz
nop
nop
jae
mov
add
add
xlat
ss
pop
add
clc
repnz
nop
nop
jae
pop
aad
mov
cmc
mov
clc
repnz
nop
nop
jae
jnp
arpl
xchg
cli
clc
repnz
nop
nop
jae
mov
add
jmp
repnz
nop
nop
jae
inc
add
add
and
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
jmp
sub
add
cmp
add
cmp
lods
clc
repnz
nop
nop
jae
pushf
insl
add
push
clc
repnz
nop
nop
jae
aad
dec
add
add
popf
xlat
mov
clc
repnz
nop
nop
jae
add
xchg
add
jnp
icebp
lea
push
mov
xchg
ret
add
std
mov
clc
repnz
nop
nop
jae
sti
popf
dec
push
dec
ss
nop
nop
jae
pushf
mov
add
cmpw
nop
push
mov
leave
nop
jmp
lahf
out
add
lcall
inc
mov
clc
repnz
nop
nop
jae
add
xchg
clc
repnz
nop
nop
jae
add
jg
add
nop
push
mov
leave
nop
jmp
hlt
add
add
rep
clc
repnz
nop
nop
jae
lahf
add
repnz
cmpl
nop
push
mov
leave
nop
jmp
jbe
add
dec
add
xchg
cld
push
mov
xchg
ret
aam
push
xchg
add
dec
test
xor
pusha
clc
repnz
nop
nop
jae
add
add
arpl
add
inc
loopne
mov
xchg
ret
add
add
cli
add
add
repnz
nop
nop
jae
popf
add
pop
cmp
clc
repnz
nop
nop
jae
dec
xchg
popf
testl
nop
push
mov
leave
nop
jmp
add
lods
mov
dec
sub
pop
lea
xchg
ret
inc
decb
add
push
lods
push
push
mov
xchg
ret
add
pop
lods
add
scas
out
add
xchg
add
pushl
push
mov
xchg
ret
xchg
arpl
inc
cmp
add
popa
push
mov
xchg
ret
mov
dec
xchg
add
inc
xor
clc
repnz
nop
nop
jae
decb
out
add
clc
repnz
nop
nop
jae
add
add
cmp
add
lods
add
or
clc
repnz
nop
nop
jae
dec
add
lret
mov
clc
repnz
nop
nop
jae
add
jmp
mov
add
add
repnz
nop
nop
jae
add
add
loope
roll
mov
xchg
ret
add
push
les
add
sub
nop
nop
jae
or
xchg
add
xchg
out
je
add
clc
repnz
nop
nop
jae
xchg
xchg
add
popa
inc
clc
repnz
nop
nop
jae
pop
jnp
add
add
nop
nop
jae
and
lock
add
pand
push
mov
xchg
ret
insl
insb
cmp
dec
dec
popf
pop
fwait
clc
repnz
nop
nop
jae
cmp
add
outsb
sub
in
leave
nop
jmp
add
add
add
sub
inc
cmp
mov
xchg
ret
add
sub
add
mov
push
mov
leave
nop
jmp
add
sbb
push
adc
jne
clc
repnz
nop
nop
jae
insb
pop
add
insb
cltd
xor
nop
push
mov
leave
nop
jmp
add
add
add
push
push
mov
xchg
ret
mov
lahf
add
add
push
push
pop
push
mov
xchg
ret
add
adc
add
add
add
push
mov
xchg
ret
xchg
sbb
adc
addb
std
push
push
mov
xchg
ret
jnp
add
add
inc
mov
jno
clc
repnz
nop
nop
jae
lret
dec
dec
xlat
add
fwait
push
mov
xchg
ret
add
dec
add
addb
lret
xor
push
mov
xchg
ret
dec
add
add
add
inc
fwait
mov
clc
repnz
nop
nop
jae
hlt
add
push
clc
repnz
nop
nop
jae
mov
jbe
les
push
mov
xchg
ret
les
insl
add
cmp
mov
lea
xchg
ret
dec
mov
mov
lock
test
and
add
nop
jmp
add
push
das
mov
clc
repnz
nop
nop
jae
pop
dec
and
lret
dec
and
add
cld
nop
nop
jae
xchg
or
dec
add
repnz
nop
nop
jae
add
add
push
or
repnz
nop
nop
jae
add
dec
add
add
clc
repnz
nop
nop
jae
insl
add
or
inc
jne
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
jnp
add
cli
insb
fldcw
push
mov
xchg
ret
add
dec
test
dec
roll
in
leave
nop
jmp
inc
popf
add
add
sub
cmp
hlt
clc
repnz
nop
nop
jae
cmp
push
add
enter
in
leave
nop
jmp
aad
or
add
add
and
repnz
nop
nop
jae
xchg
add
call
clc
repnz
nop
nop
jae
xchg
add
mov
insb
inc
add
insb
add
cmp
add
push
mov
nop
push
mov
leave
nop
jmp
lods
lock
sbb
add
mov
repnz
nop
nop
jae
and
cmp
and
clc
repnz
nop
nop
jae
push
dec
add
add
lods
add
inc
pop
cmp
nop
push
mov
leave
nop
jmp
mov
jns
xabort
cld
nop
nop
jae
cmp
cmp
add
add
add
push
mov
xchg
ret
add
xchg
add
mov
xchg
clc
repnz
nop
nop
jae
jmp
add
jmp
clc
repnz
nop
nop
jae
and
add
push
xchg
nop
push
mov
leave
nop
jmp
add
add
add
aad
clc
repnz
nop
nop
jae
add
pop
xlat
add
add
clc
repnz
nop
nop
jae
xchg
sub
dec
add
jne
clc
repnz
nop
nop
jae
add
add
mov
sar
cld
nop
nop
jae
add
hlt
add
jmp
in
fdivrl
call
leave
nop
jmp
test
add
add
and
push
nop
push
mov
leave
nop
jmp
push
jmp
sub
add
pop
clc
repnz
nop
nop
jae
arpl
and
sub
pop
or
add
push
mov
leave
nop
jmp
add
add
xlat
push
nop
push
mov
leave
nop
jmp
push
add
popa
fld1
clc
repnz
nop
nop
jae
cmc
add
lock
xchg
add
push
mov
xchg
ret
add
dec
lret
add
add
leave
nop
push
mov
leave
nop
jmp
sti
add
mov
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
push
add
push
ss
pop
xor
clc
repnz
nop
nop
jae
hlt
popf
add
mov
clc
repnz
nop
nop
jae
and
hlt
jbe
or
ljmp
jo
add
lret
add
add
xchg
imul
cld
nop
nop
jae
mov
add
arpl
add
int
add
incl
nop
push
mov
leave
nop
jmp
add
pop
jle
mov
push
mov
xchg
ret
sub
add
pop
les
repz
push
mov
xchg
ret
popf
mov
add
xor
push
mov
leave
nop
jmp
add
sbb
repz
dec
pop
sub
push
mov
leave
nop
jmp
and
add
add
mov
nop
xor
and
clc
repnz
nop
nop
jae
mov
in
jbe
push
nop
push
mov
leave
nop
jmp
repz
or
add
add
lcall
nop
nop
jae
jmp
add
push
lret
xlat
pop
lret
inc
adc
repnz
nop
nop
jae
add
jbe
add
mov
mov
cld
nop
nop
jae
lock
jbe
decb
jno
test
add
clc
repnz
nop
nop
jae
inc
add
rep
clc
repnz
nop
nop
jae
xchg
add
cld
adc
fisubl
add
add
mov
add
cmp
sub
add
clc
repnz
nop
nop
jae
add
mov
aad
add
mov
add
xchg
push
mov
xchg
ret
dec
dec
jnp
sbb
add
push
mov
or
add
or
add
add
rorl
push
mov
leave
nop
jmp
xchg
lods
add
add
jle
add
add
add
test
dec
cmpl
sub
nop
jmp
push
add
dec
adc
push
mov
xchg
ret
add
add
pop
dec
add
aaa
lods
clc
repnz
nop
nop
jae
xlat
add
xchg
add
mov
push
mov
xchg
ret
adc
push
add
jge
clc
repnz
nop
nop
jae
dec
add
add
pop
lahf
fld1
clc
repnz
nop
nop
jae
insb
mov
cmp
add
nop
push
mov
leave
nop
jmp
mov
clc
repnz
nop
nop
jae
add
add
add
dec
popf
sbb
repnz
nop
nop
jae
aam
mov
add
nop
push
mov
leave
nop
jmp
dec
mov
add
scas
enter
in
leave
nop
jmp
dec
add
add
mov
clc
repnz
nop
nop
jae
push
mov
cmp
ljmp
nop
jae
test
add
add
add
add
mov
add
jno
clc
repnz
nop
nop
jae
hlt
out
add
cmc
add
push
mov
xchg
ret
add
out
add
add
inc
and
add
mov
add
repnz
nop
nop
jae
aad
cmp
dec
dec
call
push
mov
xchg
ret
out
add
push
inc
xchg
add
repnz
nop
nop
jae
add
fisubrl
add
test
clc
repnz
nop
nop
jae
add
add
lahf
mov
clc
repnz
nop
nop
jae
pop
test
add
add
pop
shr
clc
repnz
nop
nop
jae
dec
add
xchg
dec
inc
aas
add
jmp
add
test
mov
pop
add
add
xchg
add
dec
pusha
nop
push
mov
leave
nop
jmp
add
cmp
add
jnp
hlt
pop
call
and
clc
repnz
nop
nop
jae
push
pop
add
lock
ljmp
addb
cmp
ret
dec
aam
add
add
pushw
add
and
add
out
clc
repnz
nop
nop
jae
add
push
test
nop
push
mov
leave
nop
jmp
add
add
adc
ret
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
add
dec
test
add
pop
push
mov
xchg
ret
scas
add
add
add
ljmp
add
repz
dec
test
mov
push
mov
xchg
ret
add
lods
insb
pop
jmp
add
repnz
nop
nop
jae
insb
mov
add
jg
add
in
inc
add
les
and
and
cmp
mov
xchg
ret
incb
popf
mov
push
mov
xchg
ret
jnp
add
insb
add
incb
inc
dec
fistpl
push
mov
xchg
ret
insb
inc
add
add
dec
mov
popa
clc
repnz
nop
nop
jae
add
cmp
xchg
push
add
shrb
nop
nop
jae
dec
add
add
push
pop
push
push
mov
xchg
ret
lock
insb
xchg
inc
dec
inc
lea
clc
repnz
nop
nop
jae
popf
add
add
jb
fimuls
mov
cld
nop
nop
jae
add
dec
pushf
aam
mov
clc
repnz
nop
nop
jae
add
scas
add
add
mov
add
or
nop
jae
cmp
cmp
add
jne
clc
repnz
nop
nop
jae
lock
dec
mov
mov
xchg
ret
dec
aad
add
pushf
add
clc
repnz
nop
nop
jae
add
jbe
mov
call
nop
jae
sti
mov
add
lahf
add
mov
mov
clc
repnz
nop
nop
jae
add
add
repz
xor
push
mov
xchg
ret
and
cmc
lahf
or
mov
nop
push
mov
leave
nop
jmp
scas
add
repz
lret
mov
push
mov
xchg
ret
les
add
push
cmc
mov
clc
repnz
nop
nop
jae
pop
add
add
pop
stc
mov
nop
push
mov
leave
nop
jmp
mov
adc
scas
insb
xchg
inc
and
repnz
nop
nop
jae
jnp
repz
add
ror
nop
push
mov
leave
nop
jmp
dec
mov
and
repz
repnz
nop
nop
jae
add
dec
add
mov
sbb
add
repnz
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
add
add
je
clc
repnz
nop
nop
jae
xchg
test
add
xchg
clc
repnz
nop
nop
jae
add
insl
add
mov
clc
repnz
nop
nop
jae
add
and
adc
mov
repnz
nop
nop
jae
add
add
mov
ss
pop
clc
repnz
nop
nop
jae
or
mov
add
add
add
nop
jmp
dec
push
dec
out
sar
repnz
nop
nop
jae
lahf
add
add
les
mov
xchg
ret
add
xchg
repnz
nop
nop
jae
add
push
add
adc
mov
push
mov
xchg
ret
and
pop
add
pop
dec
inc
pop
add
repnz
nop
nop
jae
add
mov
dec
dec
push
aad
pop
clc
repnz
nop
nop
jae
add
add
dec
add
mov
cld
loopne
jmp
add
add
cmp
pushf
jbe
add
ljmp
repnz
nop
nop
jae
add
add
push
mov
cmp
clc
repnz
nop
nop
jae
scas
incb
repz
xchg
add
pop
clc
repnz
nop
nop
jae
add
and
jbe
jmp
pop
jnp
pushf
add
popf
add
add
xchg
stc
call
nop
jmp
add
add
rolb
repnz
nop
nop
jae
cmc
cmc
scas
adc
xor
add
repnz
nop
nop
jae
push
dec
aam
addb
xchg
lss
clc
repnz
nop
nop
jae
popf
in
sar
cld
nop
nop
jae
mov
add
add
add
repnz
nop
nop
jae
add
sub
xor
mov
xchg
ret
test
add
xchg
popf
mov
movsb
clc
repnz
nop
nop
jae
add
dec
sbb
add
push
pop
push
add
clc
repnz
nop
nop
jae
add
xchg
arpl
stos
clc
repnz
nop
nop
jae
arpl
insb
add
add
mov
nop
push
mov
leave
nop
jmp
lods
popf
mov
add
jb
notl
repnz
nop
nop
jae
add
add
add
hlt
dec
lcall
mov
push
mov
xchg
ret
add
add
add
push
jno
roll
repnz
nop
nop
jae
inc
dec
xchg
add
and
push
push
mov
xchg
ret
mov
add
cmp
add
pop
dec
nop
push
mov
leave
nop
jmp
add
dec
add
decb
inc
pop
clc
repnz
nop
nop
jae
add
dec
cmp
cmp
sub
clc
repnz
nop
nop
jae
arpl
inc
add
add
clc
repnz
nop
nop
jae
aad
add
add
pop
mov
clc
repnz
nop
nop
jae
add
add
sub
add
repnz
nop
nop
jae
add
xchg
add
clc
repnz
nop
nop
jae
add
iret
fistpl
push
mov
xchg
ret
sub
add
add
lock
sbb
push
mov
xchg
ret
aam
add
dec
add
add
add
jne
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
lret
add
push
in
push
push
mov
xchg
ret
add
test
imul
nop
nop
jae
add
add
push
mov
clc
repnz
nop
nop
jae
mov
and
add
pop
bound
xchg
ret
popf
xchg
add
cmc
add
sub
repnz
nop
nop
jae
add
sbb
or
mov
xchg
ret
xchg
add
add
add
mov
addl
cmp
ret
dec
lock
pop
call
clc
repnz
nop
nop
jae
sti
insl
pop
adc
pop
push
mov
xchg
ret
add
incb
aam
lahf
mov
or
repnz
nop
nop
jae
adc
add
jne
push
mov
xchg
ret
add
pop
add
fs
inc
inc
nop
push
mov
leave
nop
jmp
xchg
mov
mov
add
add
repnz
nop
nop
jae
lock
mov
leave
nop
jmp
cmc
cmp
xlat
dec
push
add
cmp
repnz
nop
nop
jae
dec
add
add
cmc
pop
lahf
pop
nop
push
mov
leave
nop
jmp
xlat
add
add
test
cmc
clc
repnz
nop
nop
jae
test
add
cmp
push
mov
xchg
ret
arpl
lahf
call
clc
repnz
nop
nop
jae
and
mov
repnz
nop
nop
jae
mov
add
push
add
dec
jmp
roll
repnz
nop
nop
jae
add
add
add
test
clc
repnz
nop
nop
jae
dec
insb
add
cld
nop
nop
jae
sti
dec
and
add
add
pop
nop
push
mov
leave
nop
jmp
xchg
and
add
push
mov
leave
nop
jmp
decb
add
add
jg
nop
push
mov
leave
nop
jmp
add
add
add
xchg
mov
clc
repnz
nop
nop
jae
pop
mov
popf
aad
add
movsb
add
cmp
add
xchg
add
push
mov
xchg
ret
mov
add
push
fwait
dec
nop
push
mov
leave
nop
jmp
add
add
popa
mov
clc
repnz
nop
nop
jae
hlt
test
test
add
xchg
mov
clc
repnz
nop
nop
jae
sub
add
pop
adc
clc
repnz
nop
nop
jae
test
cmp
cmp
lods
add
ficoml
in
push
mov
xchg
ret
add
scas
add
test
pop
popf
fld1
shl
call
nop
jmp
cmc
add
add
dec
push
push
mov
xchg
ret
cmp
add
adc
cld
nop
nop
jae
add
lret
popf
mov
add
lret
clc
repnz
nop
nop
jae
add
cmp
add
add
jg
clc
repnz
nop
nop
jae
popf
mov
in
mov
nop
push
mov
leave
nop
jmp
add
add
sub
cld
nop
nop
jae
add
dec
aam
add
stos
add
pop
call
clc
repnz
nop
nop
jae
insb
cmp
fildl
sti
clc
repnz
nop
nop
jae
add
add
cwtl
inc
add
repnz
nop
nop
jae
add
dec
add
pushf
inc
push
ja
clc
repnz
nop
nop
jae
add
dec
add
test
lahf
stos
pop
clc
repnz
nop
nop
jae
test
add
pushf
add
adc
sub
push
mov
xchg
ret
pop
add
insb
aam
popf
add
add
pop
scas
add
inc
loop
mov
clc
repnz
nop
nop
jae
test
add
add
lret
test
repnz
nop
nop
jae
mov
add
mov
push
mov
xchg
ret
push
add
dec
add
mov
clc
repnz
nop
nop
jae
dec
add
gs
clc
repnz
nop
nop
jae
dec
dec
xchg
mov
clc
repnz
nop
nop
jae
decb
jo
dec
xor
add
repnz
nop
nop
jae
test
add
push
push
mov
xchg
ret
add
arpl
ss
cltd
pushl
clc
repnz
nop
nop
jae
add
sti
dec
add
imul
mov
add
leave
sub
repnz
nop
nop
jae
dec
add
hlt
cmp
arpl
repnz
nop
nop
jae
add
insl
xlat
dec
cmp
mulb
nop
push
mov
leave
nop
jmp
add
add
lods
xchg
add
les
add
mov
nop
nop
jae
add
add
mov
pop
clc
repnz
nop
nop
jae
add
push
and
test
dec
push
add
shl
fld1
clc
repnz
nop
nop
jae
add
dec
mull
jbe
nop
push
mov
leave
nop
jmp
lods
pop
cmp
adc
call
dec
imul
cmp
ret
xlat
jbe
popf
add
aad
push
imul
clc
repnz
nop
nop
jae
xchg
xchg
popf
push
add
repnz
nop
nop
jae
add
add
add
pop
inc
dec
jmp
incl
cmc
add
add
dec
insb
add
add
add
insb
dec
mov
clc
repnz
nop
nop
jae
add
and
add
add
fld1
clc
repnz
nop
nop
jae
mov
incb
sub
push
mov
clc
repnz
nop
nop
jae
jbe
cmc
add
xor
nop
pop
sub
push
mov
leave
nop
jmp
add
mov
push
add
test
xlat
push
add
add
test
push
mov
leave
nop
jmp
pop
mov
push
add
and
add
add
and
clc
repnz
nop
nop
jae
add
cmp
push
mov
add
nop
push
mov
leave
nop
jmp
lods
hlt
add
repnz
nop
nop
jae
xchg
add
add
repz
nop
push
mov
leave
nop
jmp
pop
add
nop
nop
jae
add
xchg
add
push
cmc
outsb
enter
push
mov
xchg
ret
add
test
popf
add
add
add
or
add
orl
cmp
ret
cmp
pop
cmp
jne
nop
push
mov
leave
nop
jmp
add
add
mov
add
out
or
push
mov
xchg
ret
xchg
add
cmp
les
mov
les
mov
xchg
ret
mov
xchg
add
ss
cld
in
add
push
mov
xchg
ret
dec
insb
dec
pop
add
push
test
cld
nop
nop
jae
lock
test
xchg
add
add
add
inc
popf
add
pop
add
jnp
test
add
sbbl
inc
inc
add
add
add
add
add
push
clc
repnz
nop
nop
jae
dec
hlt
add
add
and
jmp
roll
mov
xchg
ret
lock
popf
test
add
rclb
outsl
push
add
push
push
mov
add
add
clc
repnz
nop
nop
jae
pop
add
gs
clc
repnz
nop
nop
jae
push
lock
add
add
mov
push
mov
xchg
ret
lock
dec
insl
add
adc
mov
xchg
ret
add
add
add
fistl
mov
xchg
ret
scas
add
mov
sub
jmp
mov
xchg
ret
add
add
clc
repnz
nop
nop
jae
or
les
add
add
lea
clc
repnz
nop
nop
jae
xlat
add
xchg
mov
clc
repnz
nop
nop
jae
out
lret
insb
add
adc
xor
add
repnz
nop
nop
jae
jbe
add
mov
xchg
xchg
ret
inc
add
add
add
add
repnz
nop
nop
jae
mov
add
and
outsl
pop
push
mov
xchg
ret
add
xchg
add
sbb
xchg
test
repnz
nop
nop
jae
ss
mov
push
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
arpl
and
push
mov
xchg
ret
add
jnp
dec
out
test
sbb
nop
nop
jae
add
popf
cmc
popf
add
test
add
clc
repnz
nop
nop
jae
out
add
add
mov
nop
push
mov
leave
nop
jmp
mov
cmp
loop
clc
push
mov
xchg
ret
add
add
add
add
adc
pop
push
push
mov
xchg
ret
cmp
insl
add
jnp
add
loope
push
mov
xchg
ret
cmp
xlat
hlt
cmp
popf
add
imul
clc
repnz
nop
nop
jae
add
add
test
inc
push
push
add
mov
mov
xchg
ret
add
and
jmp
insb
dec
lahf
dec
nop
push
mov
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
lock
add
mov
insb
notl
mov
xchg
ret
add
add
arpl
add
pop
clc
repnz
nop
nop
jae
add
cmp
test
int
cmp
cld
nop
nop
jae
cmc
add
and
add
push
mov
xchg
ret
xchg
add
fs
add
lahf
add
out
add
xor
mov
clc
repnz
nop
nop
jae
ss
sub
push
mov
leave
nop
jmp
sbb
add
add
nop
push
mov
leave
nop
jmp
mov
add
rclb
nop
jmp
jnp
aam
add
add
add
xor
sti
nop
push
mov
leave
nop
jmp
cmp
out
add
xchg
add
push
push
mov
xchg
ret
add
mov
add
mov
insb
call
mov
leave
nop
jmp
inc
add
hlt
or
add
clc
repnz
nop
nop
jae
pop
mov
test
dec
jne
clc
repnz
nop
nop
jae
test
cmp
mov
pop
clc
repnz
nop
nop
jae
add
add
mov
pop
test
mov
clc
repnz
nop
nop
jae
cmp
lock
add
sbb
mov
xchg
ret
scas
add
mov
mov
clc
repnz
nop
nop
jae
repz
lods
aaa
fistpl
clc
repnz
nop
nop
jae
mov
adc
repnz
nop
nop
jae
add
add
lahf
mov
lods
cmp
nop
push
mov
leave
nop
jmp
sbb
and
popf
pop
clc
repnz
nop
nop
jae
xlat
jmp
inc
add
add
mov
add
push
mov
xchg
ret
insb
dec
add
add
pop
popf
jo
xor
clc
repnz
nop
nop
jae
add
add
mov
leave
nop
jmp
add
add
dec
add
repnz
nop
nop
jae
cmc
dec
add
add
add
icebp
nop
push
mov
leave
nop
jmp
pop
add
ret
jmp
add
add
add
popf
add
add
push
clc
repnz
nop
nop
jae
mov
out
add
add
push
mov
xchg
ret
scas
dec
lahf
mov
out
movsl
add
clc
repnz
nop
nop
jae
ss
adc
repnz
nop
nop
jae
add
les
push
push
push
mov
xchg
ret
add
scas
add
add
dec
fs
xor
nop
push
mov
leave
nop
jmp
sti
pop
mov
mov
mov
xchg
imul
clc
repnz
nop
nop
jae
popf
popf
push
les
arpl
movl
mov
leave
nop
jmp
inc
xlat
add
mov
pop
add
clc
repnz
nop
nop
jae
add
mov
add
mov
push
mov
xchg
ret
add
xchg
mov
add
cmc
mov
clc
repnz
nop
nop
jae
and
add
add
clc
repnz
nop
nop
jae
test
push
les
dec
lahf
pop
push
mov
xchg
ret
insb
add
jbe
add
add
call
nop
jae
add
add
add
jmp
add
clc
repnz
nop
nop
jae
les
test
add
nop
push
mov
leave
nop
jmp
xlat
mov
add
cmp
jmp
in
leave
nop
jmp
add
mov
push
ret
push
clc
repnz
nop
nop
jae
dec
add
add
lods
test
shlb
add
fisubrs
clc
repnz
nop
nop
jae
sbb
xchg
add
inc
mov
clc
add
nop
jmp
test
xchg
mov
push
pusha
clc
repnz
nop
nop
jae
test
add
xchg
cmp
add
push
mov
xchg
ret
dec
add
insl
or
add
mov
push
mov
xchg
ret
add
add
mov
popa
push
clc
repnz
nop
nop
jae
dec
cmp
xlat
les
add
rcrb
push
fld1
push
mov
xchg
ret
arpl
xchg
add
inc
add
sbb
push
mov
xchg
ret
add
inc
add
sbb
in
mov
jmp
incl
out
add
add
pop
add
dec
cmp
dec
lods
fistpl
and
repnz
nop
nop
jae
add
dec
add
pop
adc
imul
cmp
ret
add
popf
sub
add
call
call
nop
jmp
mov
add
add
clc
repnz
nop
nop
jae
lock
repz
lds
pop
and
repnz
nop
nop
jae
add
add
test
int
add
and
sbb
hlt
test
arpl
and
add
add
add
nop
jmp
jbe
test
movswl
jmp
call
popf
add
insb
jbe
add
lods
and
gs
clc
repnz
nop
nop
jae
add
add
cmc
inc
lock
mov
clc
repnz
nop
nop
jae
lahf
popf
adc
sti
push
ss
jbe
arpl
mov
xchg
ret
dec
push
scas
add
add
fistpl
clc
repnz
nop
nop
jae
lock
lret
test
pop
xchg
xorl
xchg
inc
add
add
push
add
dec
add
addb
cmp
ret
add
ss
dec
add
inc
std
mov
clc
repnz
nop
nop
jae
insb
add
mull
repnz
nop
nop
jae
sbb
aam
lahf
xlat
insb
lock
push
push
mov
xchg
ret
aam
add
add
dec
add
jae
push
mov
xchg
ret
add
adc
add
add
dec
jp
nop
cltd
jb
clc
repnz
nop
nop
jae
adc
and
nop
push
mov
leave
nop
jmp
xchg
add
jnp
add
repnz
nop
nop
jae
dec
add
mov
add
nop
push
mov
leave
nop
jmp
lods
lock
dec
popa
mov
clc
repnz
nop
nop
jae
sbb
aam
dec
xchg
jbe
push
clc
repnz
nop
nop
jae
mov
les
loopne
popa
clc
repnz
nop
nop
jae
add
add
add
cmp
int3
jg
jae
push
mov
xchg
ret
insb
lods
add
sub
scas
mov
cld
nop
nop
jae
add
pop
add
add
clc
repnz
nop
nop
jae
popf
test
add
add
jne
nop
push
mov
leave
nop
jmp
add
arpl
add
or
add
push
clc
repnz
nop
nop
jae
test
add
mov
sbb
add
nop
jmp
add
lret
jmp
pop
clc
repnz
nop
nop
jae
xrelease
add
leave
clc
repnz
nop
nop
jae
mov
add
dec
push
insl
je
clc
repnz
nop
nop
jae
add
sti
xor
nop
push
mov
leave
nop
jmp
add
jnp
inc
dec
push
add
iret
add
nop
push
mov
leave
nop
jmp
lahf
and
add
add
je
clc
repnz
nop
nop
jae
scas
add
fadds
clc
repnz
nop
nop
jae
dec
add
cmp
add
clc
repnz
nop
nop
jae
add
adc
sti
and
cmc
mov
clc
repnz
nop
nop
jae
test
add
cmp
std
push
clc
repnz
nop
nop
jae
test
add
popf
popf
repz
adc
repnz
nop
nop
jae
cmc
dec
cmp
sub
repnz
nop
nop
jae
aam
add
lods
insb
add
repnz
nop
nop
jae
add
mov
cld
nop
nop
jae
add
hlt
les
add
add
cld
nop
nop
jae
or
add
add
lock
add
fdivl
adc
mov
xchg
ret
add
dec
pop
dec
lret
pop
clc
repnz
nop
nop
jae
xchg
and
add
add
nop
push
mov
leave
nop
jmp
add
jbe
add
clc
repnz
nop
nop
jae
add
pop
mov
addb
imul
mov
xchg
ret
add
add
add
popf
add
add
movsb
add
or
add
clc
repnz
nop
nop
jae
add
add
repz
add
sub
mov
leave
nop
jmp
mov
popf
ds
mov
nop
push
mov
leave
nop
jmp
push
cmp
les
pop
sahf
xor
mov
leave
nop
jmp
pop
add
add
mov
pop
sub
mov
xchg
ret
mov
add
jmp
lret
test
in
push
in
incl
out
inc
add
add
dec
sub
fildl
repz
repnz
nop
nop
jae
push
add
hlt
roll
clc
clc
repnz
nop
nop
jae
add
add
jl
clc
repnz
nop
nop
jae
or
add
mov
add
sub
add
add
clc
repnz
nop
nop
jae
add
lods
add
repnz
nop
nop
jae
xchg
mov
dec
add
fwait
clc
repnz
nop
nop
jae
insb
les
jmp
dec
xchg
add
push
clc
repnz
nop
nop
jae
add
mov
add
mov
cmp
aam
les
dec
add
add
pushf
hlt
add
add
clc
repnz
nop
nop
jae
push
add
xchg
adc
repnz
nop
nop
jae
and
add
insl
dec
push
mov
xchg
ret
add
pop
pop
cmp
aam
dec
clc
repnz
nop
nop
jae
out
sub
popf
mov
add
fildl
and
cmp
ret
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
jl
incl
insl
mov
add
push
add
decl
test
repnz
nop
nop
jae
push
insb
xchg
add
add
push
mov
xchg
ret
add
dec
add
xchg
test
loop
clc
repnz
nop
nop
jae
aam
cmp
fwait
push
mov
xchg
ret
test
mov
mov
or
repnz
nop
nop
jae
add
inc
and
jnp
clc
repnz
nop
nop
jae
arpl
add
cmp
add
pop
clc
repnz
nop
nop
jae
push
add
popf
add
lahf
in
rcrb
outsb
inc
add
lret
dec
add
add
mov
add
clc
repnz
nop
nop
jae
xchg
add
add
insb
pop
lahf
ret
clc
repnz
nop
nop
jae
add
cmp
popf
add
push
clc
repnz
nop
nop
jae
mov
add
shll
jb,pt
nop
push
mov
leave
nop
jmp
add
call
cld
nop
nop
jae
add
push
sbb
add
clc
push
mov
xchg
ret
test
dec
add
add
mov
mov
xchg
ret
hlt
incb
push
pop
add
movzwl
push
mov
xchg
ret
add
mov
jne
clc
repnz
nop
nop
jae
inc
lahf
add
lret
fdivr
call
nop
jmp
add
add
aad
dec
sub
and
cmp
ret
add
xchg
mov
add
adc
call
clc
repnz
nop
nop
jae
xchg
push
add
adc
cld
nop
nop
jae
push
add
add
les
sub
add
jle
add
insb
add
ss
insl
pop
clc
repnz
nop
nop
jae
arpl
dec
xchg
pushf
jnp
xor
add
inc
adc
movzwl
clc
repnz
nop
nop
jae
jbe
pop
test
dec
mov
add
decl
xchg
les
xchg
hlt
lahf
mov
push
add
mov
xor
push
mov
xchg
ret
add
add
add
divb
push
mov
xchg
ret
out
aad
mov
aam
out
cld
push
mov
xchg
ret
mov
add
add
cld
nop
nop
jae
les
add
add
cmp
xchg
repnz
nop
nop
jae
hlt
add
add
hlt
mov
stc
js
add
cmp
add
insb
add
daa
mov
nop
push
mov
leave
nop
jmp
add
add
repz
add
mov
add
push
mov
leave
nop
jmp
add
pop
mov
add
jnp
mov
clc
repnz
nop
nop
jae
pop
push
add
mov
add
repnz
nop
nop
jae
cmp
mov
dec
cmp
repnz
nop
nop
jae
add
scas
lahf
add
xchg
dec
push
mov
xchg
ret
add
jbe
add
add
dec
mov
push
clc
repnz
nop
nop
jae
push
add
add
add
testb
inc
nop
push
mov
leave
nop
jmp
repz
cmp
add
cld
nop
nop
jae
xchg
add
mov
insb
les
out
add
cmp
add
cmp
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
pop
pop
hlt
data16
add
push
mov
xchg
ret
les
add
add
inc
clc
repnz
nop
nop
jae
mov
or
mov
mov
xchg
ret
jbe
insl
add
add
add
xor
push
clc
repnz
nop
nop
jae
xchg
push
add
js
pop
nop
push
mov
leave
nop
jmp
insb
push
push
add
dec
dec
xlat
fstpl
mov
xchg
ret
dec
add
jbe
sub
add
int
jge
clc
repnz
nop
nop
jae
add
add
lea
test
repnz
nop
nop
jae
add
add
pop
cmpsb
add
cld
insl
not
push
mov
xchg
ret
add
mov
movsl
jne
clc
repnz
nop
nop
jae
les
add
clc
repnz
nop
nop
jae
cmc
add
push
test
xchg
inc
xchg
lea
nop
push
mov
leave
nop
jmp
add
jbe
out
xchg
dec
push
clc
repnz
nop
nop
jae
cmp
xchg
jbe
add
add
add
push
mov
xchg
ret
repz
jns
clc
repnz
nop
nop
jae
xchg
out
add
add
les
repnz
nop
nop
jae
dec
pushf
mov
dec
push
push
mov
xchg
ret
cmp
cmp
add
lock
mov
add
sub
add
movzwl
clc
repnz
nop
nop
jae
mov
mov
add
pushl
clc
repnz
nop
nop
jae
add
std
push
nop
push
mov
leave
nop
jmp
add
insb
out
pop
add
insb
xor
repnz
nop
nop
jae
add
popf
add
out
in
inc
and
nop
push
mov
leave
nop
jmp
sub
sti
insl
sbb
push
clc
repnz
nop
nop
jae
aad
lock
jnp
add
inc
xchg
mov
clc
repnz
nop
nop
jae
push
pop
arpl
fisttpll
cld
nop
nop
jae
add
mov
add
add
sub
add
add
clc
repnz
nop
nop
jae
push
mov
arpl
sbb
clc
repnz
nop
nop
jae
popf
pushf
add
jmp
test
add
bound
adcb
jmp
add
rep
nop
push
mov
leave
nop
jmp
add
lods
add
add
repnz
nop
nop
jae
pop
ss
or
insl
popa
clc
repnz
nop
nop
jae
add
popf
add
add
testl
xchg
ret
add
mov
add
mov
push
mov
leave
nop
jmp
xrelease
xlat
xlat
add
add
clc
repnz
nop
nop
jae
push
out
add
add
add
mov
nop
nop
jae
mov
add
sti
mov
inc
and
repnz
nop
nop
jae
aad
add
les
push
mov
leave
nop
jmp
add
add
cmc
les
dec
adc
jecxz
inc
add
popf
add
lock
add
repnz
nop
nop
jae
xchg
lahf
decb
fdivr
repnz
nop
nop
jae
popf
dec
add
xor
fistpl
clc
repnz
nop
nop
jae
mov
dec
movsb
add
addb
sbb
mov
xchg
ret
push
add
arpl
clc
repnz
nop
nop
jae
incb
add
ffreep
jmp
imul
add
hlt
add
mov
popf
clc
repnz
nop
nop
jae
add
insb
mov
add
inc
add
clc
repnz
nop
nop
jae
add
sbb
fwait
clc
repnz
nop
nop
jae
add
dec
add
add
push
mov
add
stos
xchg
add
xchg
or
ss
ds
or
jecxz
int
push
pop
fwait
mov
ret
lcall
mov
inc
cwtl
out
in
pop
dec
xchg
xchg
js
inc
imul
dec
pop
mov
add
pop
addb
shrb
push
add
push
add
push
cwtl
in
les
movsl
mov
add
fidivl
cmpsl
jmp
xor
add
add
addb
ja
ss
iret
cmp
xchg
in
cmc
cli
ficoms
shrl
mov
insb
stos
int3
fmull
das
mov
loopne
and
add
mov
dec
push
add
sub
add
add
add
add
neg
xor
sub
incb
add
and
ficomps
insl
xchg
das
mov
add
aad
add
aas
cwtl
in
test
or
add
mov
cld
ret
jae
rcrl
mov
xor
add
pop
imul
adc
mov
mov
imul
jno
jecxz
dec
roll
adc
mov
stos
add
ret
jo
rolb
into
aaa
loope
add
aad
mov
add
aam
jmp
pop
inc
mov
add
pushf
out
fisttpl
mov
add
xor
push
stos
add
data16
add
outsb
sub
leave
sbb
into
xchg
add
mov
add
stos
add
fcomps
sub
jecxz
inc
mov
inc
jp
outsl
bound
enter
ret
add
ja
data16
add
add
out
imul
jge
add
lods
pop
test
add
and
add
cwtl
enter
dec
out
xor
nop
mov
dec
xchg
neg
xchg
add
fs
xchg
movsb
add
cmp
aas
sbb
sbb
pop
fcompl
call
add
cmpsl
push
mov
push
dec
add
push
and
mov
fsubs
add
out
test
add
adc
in
jmp
sbb
mov
add
adc
outsb
ja
xor
add
jbe
mov
in
insb
mov
dec
xchg
daa
call
ja
sbb
jle
pushf
daa
movsl
cmpsb
add
xor
lret
inc
xor
mov
push
add
je
jb
add
loop
test
js
jne
mov
dec
mov
add
sahf
shl
sbb
hlt
negl
gs
std
sub
add
pop
cmp
in
cld
aad
add
push
cld
movsb
add
mov
lret
bound
idivb
cmp
push
or
add
and
add
data16
cmp
mov
enter
add
adcl
int
stc
add
mov
jle
mov
mov
push
fcomps
and
add
in
pop
pusha
xchg
dec
jmp
ficoml
std
inc
pop
clc
out
fwait
push
mov
add
popf
repz
add
inc
pmullw
ja
jg
xchg
lret
xor
pop
sub
add
cli
mov
jae
cmpsl
lods
jno
add
adc
jbe
rclb
mov
push
cli
stc
pop
lret
jno
add
frstor
add
fdivp
jb
add
add
add
stos
cmp
inc
pop
dec
add
movlps
add
popf
mov
or
jl
xor
add
inc
mov
add
xchg
dec
into
xor
pop
in
fisttps
js
sarl
lods
cmc
mov
aas
dec
jne
sti
cltd
fucom
push
inc
sti
mov
add
insl
inc
addb
lods
add
shrb
jecxz
xchg
fdivrp
push
sbb
add
dec
pop
fstl
jmp
mov
icebp
push
std
cmc
lods
addb
imulb
add
jne
outsl
add
jmp
les
jbe
sti
jns
mov
push
fs
add
in
and
add
inc
dec
insb
fsubs
push
add
fdivrp
stos
add
int
cmp
xchg
sbbl
jl
jns
dec
jns
add
mov
shlb
mull
xor
xchg
add
push
xchg
icebp
into
stos
add
sbb
into
mov
push
icebp
pop
push
repnz
movsb
add
scas
bound
cmp
clc
shl
cwtl
das
jno
sub
jo
mov
xchg
fistl
inc
add
inc
sbb
mov
add
sbb
test
add
sbb
fisubrl
sbb
call
add
pop
adcl
add
sbb
inc
iret
mov
ljmp
mov
push
in
insb
ljmp
add
add
xor
dec
jno
sub
add
mov
add
mov
mov
push
fsubp
scas
and
add
xor
push
addb
lret
add
add
popa
scas
add
sub
add
orl
push
and
add
xor
jl
and
inc
xor
inc
js
aad
adc
mul
lret
add
nop
fldt
cmpsb
add
cmp
mov
notl
mov
add
xchg
popa
xchg
add
jne
lods
add
mov
xor
add
xchg
sbb
add
arpl
adc
lods
inc
dec
cmp
mov
pop
and
add
push
lea
add
shll
add
jae
movsb
add
stc
lods
add
insb
mov
mov
add
jbe
add
add
addb
fwait
in
stc
fsubrs
add
aas
add
cmc
iret
push
xchg
dec
pop
jb
push
bound
add
add
cmpsl
icebp
push
jne
xorl
imul
inc
cmp
ljmp
out
arpl
push
sbb
insb
pop
enter
aas
xchg
imul
xor
adc
inc
xor
lea
add
inc
iret
arpl
int
add
add
and
add
aad
enter
out
or
add
ja
mov
cmp
inc
scas
sbb
xchg
add
pop
or
pop
addb
or
add
pushf
cmc
inc
inc
jp
cmp
rorl
add
nop
mov
push
xlat
pop
mov
add
xor
xlat
push
add
mov
xchg
pop
jg
jl
out
repnz
jb
call
add
fidivrl
and
add
xchg
aam
push
add
cmc
aam
add
cmp
js
out
adc
int3
int3
push
adc
fld
js
mov
into
mov
add
mov
add
add
sbb
add
pop
test
xchg
add
jecxz
rorl
add
mov
add
add
adc
push
dec
imul
pop
test
add
mov
add
add
or
add
add
in
jp
add
jns
popa
loope
sub
cltd
test
and
add
adc
or
lahf
jns
add
xor
aam
out
add
ret
xor
icebp
dec
popf
or
mov
add
cmp
cmp
mov
add
mov
mov
aad
add
ljmp
outsl
ljmp
add
add
push
cmp
jg
out
jl
dec
adc
add
loopne
sub
push
ret
mov
adcl
add
sbb
add
data16
add
jno
cmp
jecxz
xor
push
dec
out
in
outsb
fwait
xor
add
add
inc
push
xor
mov
imull
jge
add
cwtl
test
outsb
outsl
inc
lds
xlat
or
add
pop
loop
jmp
push
mov
add
cmpsl
mov
add
jo
add
hlt
mov
pop
testb
mov
add
xchg
pop
jp
leave
in
add
add
mov
add
pop
out
add
inc
xor
mov
add
xchg
cmpsb
add
xor
adc
add
cmp
or
sti
jns
mov
in
add
pop
stos
add
and
out
out
clc
out
add
shl
or
add
add
ja
add
pop
aad
loop
xchg
add
add
xchg
hlt
sub
bound
jbe
fdivl
add
mov
inc
push
aas
sub
add
cmp
hlt
sbb
push
add
add
les
add
loopne
xlat
popl
mov
sub
add
xor
xchg
stos
mov
xor
add
jp
add
addb
mov
inc
inc
testl
mov
ss
lock
sbb
push
cmpsb
add
mov
add
dec
inc
in
imulb
mov
push
sub
add
cmp
sbb
add
stc
jno
add
mov
leave
jnp
jo
rcrb
imul
mov
out
dec
ficoms
add
rcrl
arpl
imul
add
gs
bound
icebp
cmp
pop
cli
movsl
iret
test
add
dec
xor
mov
daa
outsb
add
push
push
add
nop
xchg
cmp
arpl
dec
addb
sti
sub
add
add
sbb
mov
add
pop
fsubr
cmp
movsb
add
adc
cmc
ds
out
and
add
leave
sbb
pusha
leave
shlb
add
cmc
int
jge
jnp
mov
add
or
lods
cmc
out
enter
pop
jp
mov
add
test
jl
xchg
pop
pop
into
imul
inc
add
ror
cltd
aaa
ss
ss
ss
xor
pushf
data16
add
sbb
add
hlt
lods
add
fs
int3
pop
outsl
sbb
inc
pop
rclb
leave
fildll
pop
xor
dec
ljmp
aam
inc
push
mov
jo
ljmp
mov
jp
addb
pop
shrl
icebp
pusha
sbb
adc
or
add
jge
imul
add
mov
add
inc
xor
rolb
addr16
mov
clc
jae
add
mov
pop
push
pusha
pop
loopne
sub
imul
mov
dec
jmp
arpl
out
daa
iret
ret
jecxz
in
inc
mov
insl
mov
and
add
out
push
mov
adc
std
lods
mov
add
add
nop
aaa
imul
adc
inc
addb
xchg
cmpsl
enter
jb
sbb
enter
add
mov
movsl
pushf
adc
add
pop
int
push
jnp
xor
inc
push
mov
lock
fdivl
sub
mov
fwait
jle
in
mov
or
add
daa
into
jl
mov
das
sbb
cmp
adc
and
add
inc
insb
mov
add
dec
and
nop
xchg
fisttpl
insl
mov
jmp
jnp
in
mov
pop
jae
inc
pop
mov
add
jge
jge
in
xor
dec
push
dec
mov
jle
add
sub
add
data16
add
data16
add
push
add
int3
sbb
add
repnz
cmp
mov
xor
pop
dec
xchg
stos
add
pop
les
and
add
add
ret
add
gs
and
push
sub
add
cmp
fsubrs
lahf
repz
dec
adc
add
inc
out
jge
add
pop
jae
rcll
add
xchg
cmpsb
add
pop
fistpll
inc
sub
add
jp
mov
gs
addb
das
cli
and
add
sbb
add
add
out
loope
rcl
shr
add
enter
cmpsb
add
mov
mov
add
jecxz
test
mov
in
cmp
inc
push
inc
scas
ja
aad
add
mov
add
inc
popa
out
mov
sub
push
xlat
cmp
ret
add
mov
lahf
ljmp
push
inc
jns
pop
dec
dec
test
jns
mov
fdivrl
mov
add
add
jae
xchg
mov
sbb
divl
add
add
jmp
fucom
mov
mov
add
add
int
add
add
outsl
xor
add
addb
in
push
addb
push
ret
loopne
xchg
and
add
repz
jg
into
sub
xor
std
mov
push
inc
xchg
add
add
gs
ds
inc
inc
mov
add
add
out
sub
jae
jno
mov
or
dec
xorl
cmc
sbb
mov
cmp
aam
call
add
add
mov
xor
cmpsb
add
test
add
iret
xchg
add
add
jl
xor
inc
fsubs
inc
rcrb
sbb
fldenv
cmp
shll
xor
xchg
xchg
sbb
add
dec
in
aam
addb
outsb
fwait
pop
stc
pop
push
sbb
sarb
enter
push
add
sti
aas
test
push
adc
pop
dec
cmp
je
pushf
pusha
and
add
xor
mov
and
dec
repz
xchg
cwtl
or
add
dec
and
outsb
add
gs
int3
pop
push
lods
movsl
xchg
jp
fdivl
mov
in
addb
in
push
xor
xor
bound
dec
add
sar
add
add
mov
add
or
push
add
insb
mov
sub
add
xor
test
pop
insl
adc
and
lods
add
push
vmwrite
testb
les
add
pop
jno
stos
cltd
out
call
sub
add
out
mov
add
xchg
das
mov
mov
add
ficomps
dec
fcmovbe
int
lods
rcrl
jb
bound
add
mov
cld
jecxz
scas
fmull
add
adc
rclb
sbb
push
mov
fidivrs
add
ljmp
mov
sub
or
add
mov
mov
out
fs
mov
add
add
popa
movsl
xchg
mov
add
add
jae
mov
imul
idivb
sti
clc
push
stos
lret
in
aad
adc
or
mov
sub
add
mov
add
pushf
jge
aad
mov
mov
add
shll
xchg
add
fisubl
jecxz
sbb
mov
push
add
lods
add
dec
movsl
ljmp
adc
js
test
add
stos
push
call
cmp
clc
mov
mov
add
stos
add
lcall
add
add
add
mov
fisubs
je
add
mov
add
mov
adcl
sub
dec
ret
sti
ficompl
arpl
sub
pop
stc
sarb
mov
outsb
popf
add
push
in
add
add
in
xor
dec
and
add
addb
sub
add
inc
add
js
mov
xchg
mov
sbb
mov
ljmp
adc
shrb
add
sbb
add
aaa
push
add
fsubrs
add
sti
cwtl
push
arpl
push
cmp
sub
cmp
cmp
out
sbb
out
aaa
jl
repnz
add
test
add
add
les
fwait
jne
xor
icebp
lea
fdivrs
dec
cmp
push
pop
add
add
add
mov
das
cmp
and
add
pop
sub
add
sbb
pop
pop
sub
add
add
mov
add
or
add
add
movsl
pop
xor
sub
bound
adc
jle
and
jle
add
add
jmp
add
mov
sub
jne
ret
dec
incl
push
loop
dec
jmp
ja
iret
sti
mov
xor
add
jb
sbb
add
or
add
test
jl
inc
cmp
push
dec
and
add
xor
add
or
add
int3
add
add
jbe
pop
cwtl
sub
add
insl
or
jae
cwtl
movsb
add
adc
xor
pop
push
add
inc
outsl
insl
sub
cwtl
rclb
into
pop
cmp
add
mov
cmp
add
pop
aam
adc
ret
ds
lret
add
cmpsb
add
lea
imul
add
in
adc
push
add
xor
cmovp
mov
jae
popf
adc
adc
fs
jbe
xor
stos
mov
mov
addb
int
mov
add
jg
xlat
pop
fsubl
ss
in
sub
adc
int3
and
push
or
add
daa
push
xor
sbb
jo
sub
add
cmp
daa
mov
fnstenv
push
fsubrl
or
add
mov
xor
call
ret
push
lods
push
mov
add
dec
push
lods
add
inc
push
test
add
add
sbb
add
int3
jno
ljmp
push
inc
jnp
cmp
push
add
mov
cmp
xlat
cli
sub
add
xor
cmp
sbb
into
adc
add
jnp
imul
cltd
pop
rclb
dec
filds
mov
cmpsl
aad
push
add
push
add
lcall
sbb
adc
je
stos
inc
lret
xchg
add
insb
idivl
push
jl
push
add
jno
add
inc
inc
mov
mov
or
int3
je
add
mov
mov
inc
inc
mov
push
sub
mov
lret
lret
adc
push
in
arpl
mov
push
dec
pop
repz
stc
push
pop
call
jns
rolb
add
movsl
add
movsb
add
xchg
xlat
fisubs
out
fwait
push
lcall
insb
xor
aam
data16
ljmp
insb
test
add
in
adc
stc
or
add
jo
add
add
movsl
test
js
rcrl
cltd
js
sbb
movsb
add
cltd
pop
or
add
inc
movsl
loopne
nop
cmp
movsb
add
push
cmc
lock
mov
push
aaa
aam
add
jbe
cmp
mov
add
add
add
add
push
ljmp
add
stos
push
add
jo
xchg
testl
add
lds
int3
outsl
jae
mov
or
fstps
mov
bound
sub
pop
mov
add
push
bound
pop
enter
add
aam
sti
sahf
divb
into
mov
add
jno
popa
in
mov
push
add
mov
add
out
popa
xor
negb
mov
add
pop
roll
add
repz
mov
add
cmp
add
jl
jb
stc
sti
into
shr
xor
cmp
inc
cld
pop
leave
stos
shrl
fcmovne
mov
add
nop
stos
outsl
add
add
xchg
add
push
cltd
je
xor
out
and
add
imul
add
popa
loope
adc
mov
ror
inc
fnstenv
dec
sub
add
ret
pop
dec
mov
push
dec
in
mov
scas
add
pop
mov
add
sti
or
pop
mov
shlb
dec
xchg
stc
cmp
das
pushf
jle
or
add
add
xchg
mov
and
add
inc
or
out
lret
add
outsl
fwait
push
lahf
xchg
in
dec
lock
pop
xchg
shll
add
inc
mov
push
icebp
out
inc
cmp
je
out
jno
push
pusha
inc
icebp
movsb
add
ret
xchg
adc
add
jle
cmp
test
movsl
rcl
cmp
xchg
add
and
cmp
inc
dec
lds
orl
add
xchg
sub
out
sub
loopne
addb
in
add
jl
cmp
popa
jmp
stc
xchg
lds
mov
imul
mov
add
gs
jl
lret
lods
cld
push
sbb
inc
testl
mov
addb
pop
dec
jmp
jb
dec
mov
rcrb
in
outsb
loope
add
divl
add
jge
mov
repz
call
in
xlat
js
add
or
lea
jle
mov
or
add
das
shll
lmsw
push
andl
push
sti
jne
inc
pop
mov
add
stos
sahf
and
add
and
add
lock
hlt
mov
inc
testb
icebp
test
addl
sarl
xchg
inc
cmpsb
add
jnp
fcmove
ja
xchg
out
shlb
add
add
mov
add
outsb
sbb
add
jl
add
pop
xchg
stos
add
sbb
dec
enter
mov
iret
add
add
mov
repz
adc
gs
popa
icebp
cmp
pop
lret
std
in
mov
fsubr
mov
add
insl
dec
add
add
xor
popa
dec
jp
xchg
xor
add
xchg
add
lods
push
and
add
out
jno
cmc
lahf
dec
popf
or
enter
dec
mov
add
push
scas
add
add
add
adc
add
add
dec
cmp
cmp
jmp
das
push
cltd
jecxz
stos
addr16
insb
adc
inc
xchg
jo
rcll
push
pop
add
add
mov
shl
push
mov
add
vmread
lods
stc
cmp
dec
or
add
cld
movsl
mov
lods
add
and
add
test
add
sub
add
pop
pusha
inc
xor
xchg
mov
add
sub
add
ss
ds
mov
clc
push
out
add
sub
fwait
into
mov
inc
and
add
sub
add
inc
mov
xor
pushf
xchg
mov
and
add
fdivrl
test
or
add
add
sti
and
add
jno
add
add
xor
lret
xchg
add
add
add
add
add
fsubrs
cmpsl
sbb
fsubrs
or
add
cmp
or
jne
pop
sub
add
adc
and
add
add
add
push
mov
add
aam
jnp
fs
shr
add
fstpt
add
mov
add
add
add
call
add
cmpsb
add
aas
dec
mov
insl
push
add
enter
add
cmp
sub
add
add
adc
add
sub
add
gs
pop
cmp
call
int
jge
cmpl
mov
jbe
aam
add
jmp
add
dec
push
mov
addb
pop
lds
add
mov
add
insl
ficoml
pop
jbe
stc
ss
push
scas
or
pop
mov
add
add
push
sbb
and
dec
aam
add
xchg
stos
add
mov
out
pushf
ret
add
ret
inc
sbb
test
add
mov
add
ror
mov
pusha
mov
add
add
mov
xor
add
jl
scas
add
and
out
add
repnz
add
movsl
jne
pop
addb
xor
sahf
or
addl
add
add
sbb
jl
add
push
dec
jl
fstpt
cmp
dec
arpl
add
pop
adc
mov
psubb
repnz
dec
punpckhdq
mov
xchg
add
pop
sarl
mov
add
xor
test
add
addr16
add
add
add
arpl
push
punpckhbw
add
jle
cltd
lret
fcomps
pop
out
add
stc
push
fcom
inc
int3
xchg
jbe
data16
pushf
cmc
pop
jb
xchg
fs
int
add
je
add
ja
cld
add
add
daa
insb
push
and
add
scas
loope
add
cmpsl
outsl
iret
xchg
add
add
std
out
mov
fisttpll
lock
lds
add
add
enter
mov
push
mov
add
leave
sub
add
out
push
jp
dec
push
xor
xchg
mov
push
lock
push
sti
sbb
pop
mov
ficompl
add
lcall
add
stos
add
cmp
cli
pusha
ss
jo
mov
xor
push
int3
and
add
jl
add
mov
ljmp
sbb
and
add
push
xor
andl
add
sub
add
loope
pop
insb
adc
movsb
add
loope
jno
and
add
add
push
imul
add
dec
mov
add
xor
jae
jle
xchg
aas
fidivrs
add
dec
cltd
mov
mov
add
ljmp
xchg
mov
add
or
icebp
insb
ds
or
clc
in
sbb
push
and
add
rorb
adc
jbe
sbb
pop
rcrl
in
xchg
leave
mov
mov
jmp
ret
and
les
cmpsb
add
sti
and
add
aam
add
add
add
xchg
test
sbb
add
xchg
mov
add
mov
mov
idivb
lret
mov
add
mov
into
xlat
mov
add
jb
dec
loop
sub
add
add
into
fdivr
dec
inc
lcall
in
lods
add
inc
sti
cld
pusha
jns
call
aaa
addb
push
pop
cmp
and
lods
jl
pop
das
push
mov
shll
stos
rorb
fdivrs
add
and
add
pop
arpl
test
mov
add
add
arpl
leave
dec
ss
lcall
test
add
add
inc
std
sub
add
add
push
cld
dec
popf
or
add
add
sbb
add
and
ljmp
int
movsb
add
cld
inc
clc
sub
add
dec
or
add
mov
inc
xor
fsub
jno
pop
inc
test
pop
push
mov
mov
add
das
testl
scas
mov
mov
add
push
mov
add
cmp
nop
add
add
and
add
cmpsb
add
fldl
int3
jge
icebp
add
add
or
cmc
cltd
out
add
or
lret
sub
mov
add
cli
or
add
popa
sbb
sub
add
sbb
add
dec
cli
leave
xchg
ret
add
repz
movsl
test
mov
movsb
add
rcrl
shr
mov
mov
push
lret
sbb
xor
jnp
sbb
add
adc
and
add
add
xor
add
lea
movsb
add
pusha
rol
add
or
add
in
sbb
pushf
rcrl
into
int
lods
push
adc
cmp
add
test
xor
cmp
mov
add
add
stos
fs
in
inc
xlat
jmp
fs
dec
push
int
ja
jp
add
in
and
inc
pop
sbb
imull
stos
add
sbb
cld
or
add
popf
mov
ljmp
or
je
hlt
decb
inc
add
add
movsb
add
insl
xorl
jnp
cli
stos
add
test
add
add
aam
add
mov
lock
add
mov
andl
add
iret
inc
mov
pop
rcrb
mov
addb
mov
mov
adc
rolb
pop
lds
and
add
test
add
inc
sti
jns
pop
dec
fstp
outsb
pop
lock
lea
adc
fmul
pop
pop
mov
jno
or
mov
test
add
jge
dec
mov
add
push
cld
in
outsl
fisttps
add
add
add
rolb
mov
add
dec
mov
addr16
or
add
loope
push
add
mov
testb
cmp
add
lcall
add
adc
mov
add
xchg
loop
xchg
jns
fwait
sti
sbb
adc
dec
mov
jae
cmpsl
lret
lock
lods
add
test
leave
jae
xchg
add
icebp
outsb
jmp
add
and
add
aad
cli
sub
add
test
add
fsts
insl
xchg
scas
cmpsl
jo
add
push
mov
icebp
das
aam
cmp
ljmp
enter
test
add
inc
stc
mov
add
addb
sbb
cmpsb
add
add
add
les
ret
xchg
inc
mov
xchg
in
pop
push
insl
cld
inc
fcomp
mov
sub
add
dec
mov
add
outsb
outsb
or
add
inc
cmpsl
aam
mov
xchg
test
add
add
xor
push
add
add
shr
or
fisubrs
inc
jle
addb
les
mov
mov
out
aam
mov
or
add
mov
add
scas
add
pop
push
in
loopne
cmp
add
aad
push
add
nop
subl
add
into
mov
cmpsl
pop
out
xorl
dec
add
add
add
xlat
lods
add
cmpsl
test
add
add
xchg
add
push
add
sbb
popf
popa
sub
scas
sub
add
or
testb
inc
addr16
fs
pop
sbb
mov
add
add
add
roll
add
sti
sbb
ljmp
xchg
sarb
push
add
pop
ljmp
leave
dec
xor
imul
cmp
outsl
jmp
cmp
add
and
add
adc
mov
mov
xchg
sub
add
in
dec
push
mov
mov
sbb
fimull
shrl
addr16
aas
insl
movsb
add
sub
xchg
das
lret
in
xchg
loopne
dec
je
insb
test
add
test
imull
inc
icebp
mov
add
sbb
adc
inc
xor
cmpsl
push
xchg
lcall
mov
enter
add
mov
or
add
adc
cmc
rcll
cmp
aam
je
push
js
fwait
push
addb
jle
adc
lock
push
add
push
in
les
add
faddl
mov
add
ljmp
in
fimull
fisubrl
cli
mov
add
enter
add
push
lea
xchg
push
in
in
lds
mov
push
and
add
add
movsl
add
pop
movsl
add
add
mov
mov
add
lret
add
mov
add
cmp
icebp
push
lahf
xchg
in
mov
aam
pusha
pop
or
je
add
sahf
jle
pop
fdivrs
fucomp
adc
add
out
stos
add
iret
arpl
loopne
sub
add
add
and
add
add
jnp
loope
test
add
push
add
sub
add
mov
mov
sbb
mov
add
adc
movsb
add
pop
push
push
add
testl
in
nop
mov
mov
add
dec
pusha
leave
jne
idivl
jp
or
add
push
mov
leave
inc
push
or
xor
adc
xchg
loopne
push
pop
pusha
sarb
add
pushf
dec
mov
add
dec
movsb
add
jnp
push
cltd
mov
fcomi
daa
adc
clc
sub
add
add
add
add
push
add
imul
addb
loop
imul
inc
in
ja
mov
cli
and
add
popa
arpl
jle
mov
test
sti
push
addl
jnp
inc
lods
mov
addb
mov
add
fldenv
add
sub
sub
add
push
inc
add
add
test
add
add
add
push
mov
add
jecxz
lods
add
xor
fisttpll
iret
test
add
mov
jecxz
popf
shr
out
decb
cmpsb
add
mov
lret
dec
xor
subl
jo
cmpsl
sub
int
mov
add
or
add
adc
mov
or
add
or
add
sbb
adc
add
leave
test
xchg
jle
dec
cmp
fwait
inc
loopne
insb
sbb
bound
cmp
xchg
outsw
lds
add
loopne
pop
jp
xorl
pop
les
add
icebp
push
fwait
inc
cwtl
mov
hlt
lret
add
int
xor
dec
inc
jle
add
mov
and
add
add
pop
jo
dec
push
test
fstp
lds
pop
sbb
test
and
clc
or
add
xor
inc
dec
mov
fwait
pusha
das
out
mov
inc
jne
jno
cmp
pop
xor
xor
xor
jnp
ljmp
add
testb
or
sbb
inc
xchg
xchg
jns
notl
pop
loopne
pop
int3
sar
inc
jecxz
and
out
jmp
std
std
ds
dec
lahf
lds
dec
fimuls
and
add
cmpsl
mov
jecxz
stos
mov
inc
pop
xlat
inc
in
and
add
push
stos
or
add
adc
out
dec
mov
add
cmp
add
addb
mov
add
mov
cmc
xchg
imul
cmpsl
lcall
and
add
pop
xor
xorl
push
add
inc
scas
add
repz
add
int3
enter
or
add
pop
fs
std
xchg
mov
add
push
xor
cmp
add
add
mov
cmp
mov
sub
enter
and
add
push
push
inc
fisttpl
mov
iret
jne
jp
mov
je
add
add
inc
inc
divb
lds
add
cmp
aad
loopne
cltd
add
add
xlat
xor
clc
xchg
int
cmp
loop
sbb
xchg
mov
add
lea
jnp
inc
mov
add
out
sahf
jns
xor
sbb
push
stc
jo
mov
push
cmp
xchg
pop
fistpll
ror
add
ret
dec
adc
adc
sub
addb
stos
jae
xor
add
clc
mov
add
mov
add
lds
push
rcr
pop
jno
lods
out
rclb
aaa
push
bound
mov
add
add
xor
pop
jo
into
das
push
adc
add
xor
dec
mov
cmp
lods
mov
js
add
inc
fiadds
add
mov
test
cld
out
jbe
ret
loope
pop
cmp
addb
pop
mov
insb
fs
add
add
push
add
add
add
fidivrl
adc
add
daa
std
into
in
js
arpl
add
test
add
js
in
lcall
add
add
sub
jae
cltd
or
add
pushl
push
jg
sarl
cli
pop
aad
add
adc
dec
add
push
sbb
push
popa
gs
jl
inc
pop
dec
movsb
add
fldln2
inc
pushf
out
xor
adc
add
lahf
sahf
and
add
cli
dec
dec
add
lret
fadd
leave
mov
enter
push
mov
xchg
and
add
xor
adc
add
scas
inc
jmp
jb
mov
add
cmp
mov
movl
add
fldcw
lea
dec
fmull
mov
adc
test
add
enter
add
mov
inc
add
add
cmp
push
xchg
loope
jnp
mov
add
insb
adc
fincstp
insl
pop
bound
jnp
add
add
add
mov
add
cltd
push
cltd
xor
aas
inc
push
insl
dec
std
jge
ret
xchg
add
cmp
cmp
dec
and
add
pop
inc
pop
jecxz
add
stos
add
inc
out
or
add
jmp
cmp
add
dec
or
add
add
push
add
add
enter
decl
add
pop
out
pop
std
and
adc
sbb
jmp
jg
dec
add
add
push
add
lock
aaa
lea
add
cmpsl
sti
jno
mov
imul
add
mov
push
add
sbb
add
test
xchg
int
test
add
aas
push
push
add
fisubl
int
dec
outsb
fsubrp
add
push
lret
add
in
dec
or
add
cmp
sti
lods
add
push
and
add
and
add
adc
mov
add
add
mov
add
insl
mov
jg
les
in
insb
cwtl
imull
push
in
cmpsl
filds
add
sahf
aas
outsb
adc
decl
add
push
test
add
adc
jmp
cmp
ds
rcll
or
add
inc
dec
add
add
insb
mov
dec
out
jno
in
sbb
in
aaa
ja
jge
add
sub
add
xlat
mov
add
add
pop
dec
mov
imul
add
mov
add
add
enter
movsb
add
jno
inc
add
fldt
add
test
add
mov
test
add
clc
call
ret
data16
ret
mov
mov
add
popf
popf
outsb
dec
adc
sbb
shl
sub
xor
test
add
int3
or
add
sbb
shrl
cmpsl
jge
fidivrl
add
dec
xchg
out
add
addb
xchg
add
xor
xchg
loope
in
fldl
in
or
leave
mov
jae
std
fldlg2
mov
leave
sahf
idivl
jecxz
call
dec
and
icebp
sahf
inc
sahf
leave
lcall
jo
jge
add
repnz
add
xor
mov
inc
mov
xor
push
std
or
add
add
add
subl
fidivs
cmp
roll
add
cli
add
add
sbb
add
sub
ljmpw
xchg
cmp
mov
and
add
add
out
xlat
push
inc
mov
add
sbb
inc
cmp
add
cmp
mov
rorb
dec
add
sub
add
repz
add
push
sbb
cli
jmp
xchg
out
push
mov
aam
pop
xchg
pop
sub
add
and
add
clc
mov
xor
cmpsl
fdivrp
fwait
hlt
repz
lret
push
xor
out
dec
out
push
jb
sbb
or
xor
add
add
or
aaa
mov
add
subl
lds
fidivrl
call
addb
divl
ja
xor
mov
add
push
sti
pusha
xor
dec
out
test
add
push
fs
scas
add
add
add
scas
add
jo
pop
or
adc
in
xchg
pop
jle
mov
add
test
add
test
add
sbb
in
and
add
rcrb
dec
inc
pop
data16
xchg
add
ffree
xchg
icebp
xchg
into
dec
xchg
xchg
inc
mov
or
or
mov
sub
add
add
add
pop
cmc
inc
push
jecxz
pop
pop
scas
add
mov
or
adcl
add
iret
xchg
popf
fsub
into
mov
add
clc
mov
add
lods
lods
add
pushf
jnp
or
add
or
inc
and
add
pop
sahf
leave
mov
aas
xchg
xchg
xor
and
add
pop
test
add
add
add
je
add
add
bound
add
add
insl
mov
add
pop
adc
lahf
mov
xor
das
sub
add
dec
jl
jo
xchg
inc
leave
xor
push
pop
int3
lods
adcl
dec
inc
push
lea
in
mov
je
add
popf
xchg
mov
add
scas
add
jnp
pusha
jle
pop
inc
repnz
add
push
add
sbb
and
add
stos
add
lret
repnz
dec
movsl
lahf
inc
mov
outsb
jns
sbb
add
dec
mov
pop
cld
adc
call
mov
add
xor
sbb
xor
cmpsl
sub
add
stos
add
test
xor
mov
jb
sub
add
add
movsl
xor
add
mov
iret
stc
int
shrl
jle
jle
mov
dec
or
add
add
push
scas
ds
inc
jmp
cltd
cli
aad
cli
leave
mov
xchg
test
repz
popf
mov
add
add
outsb
jle
sbb
leave
inc
addb
ss
ret
rcll
and
add
cmpsl
and
add
dec
rcll
jo
xor
dec
pop
pop
leave
jae
movsw
adc
dec
add
add
mov
pop
cli
insb
sub
add
cmpl
pop
xlat
shrl
add
add
call
jns
push
mov
in
add
out
dec
addb
fldt
add
inc
dec
sub
add
xor
adc
out
addr16
cmpsl
cmpsb
add
je
adc
xchg
push
sbb
mov
shll
pop
addr16
xor
add
in
push
jb
addb
ds
test
add
lahf
mov
add
mov
add
dec
test
lcall
scas
add
dec
loopne
sbb
push
repz
mov
dec
popf
jo
mov
pushf
das
cmpsb
add
inc
push
mov
jle
mov
lret
xchg
int3
sbb
pop
rol
and
add
mov
xchg
push
pop
xchg
test
add
out
jle
push
adc
pop
loopne
dec
cmpsb
add
adc
xor
lahf
xchg
cld
and
add
aaa
pusha
or
cmpsb
add
add
add
pop
push
js
lret
insb
or
add
bound
add
jno
and
cmp
ficoms
sbb
jbe
xchg
js
leave
xchg
mov
js
or
add
and
outsl
push
imul
ret
mov
add
add
mov
add
add
sahf
ret
xor
sti
mov
add
dec
push
jmp
stc
aam
ds
sbb
mov
add
adc
stos
add
sub
add
stos
std
pop
mov
lock
jno
movsl
std
xchg
imul
insl
movsl
repz
push
add
xlat
pop
push
sub
or
add
push
repz
add
xor
add
dec
fisubs
add
cmpsl
lcall
xchg
sub
add
in
push
cltd
cmp
sbb
mov
add
dec
jb
and
add
lods
add
pop
test
jmp
aaa
push
fmuls
add
add
add
add
gs
jno
push
cmpsl
mov
add
sbb
and
add
dec
addr16
and
enter
bound
inc
jecxz
fmull
je
lahf
add
or
add
dec
movsb
add
sbb
sub
add
cmp
add
repz
add
mov
enter
das
jmp
pushl
cmpsb
add
mov
cmp
xchg
sbb
add
insb
dec
outsb
imul
pop
jle
pop
jle
outsb
mov
add
in
pushf
jne
xchg
add
outsl
cwtl
and
add
mov
shlb
xchg
push
or
add
pop
fildl
push
add
add
add
add
fimull
dec
fldt
das
or
xor
add
xor
dec
inc
mov
and
add
inc
data16
add
cmc
dec
int3
mov
hlt
or
add
sbb
add
add
add
mov
xor
out
push
add
and
ljmp
fistl
stc
mov
dec
xchg
lcall
insl
xlat
or
mov
and
add
div
inc
adc
add
in
std
dec
test
add
icebp
into
aaa
cwtl
pop
mov
add
ljmp
add
imul
xchg
mov
mov
add
dec
and
jbe
orl
or
add
mov
add
lea
inc
js
push
add
sub
add
icebp
or
imul
add
cmp
or
add
and
add
mov
add
sbb
cmp
test
add
add
addl
push
add
xor
cmp
add
fisubrs
or
add
or
add
jae
shrl
pop
iret
popf
xor
adc
add
mov
add
mov
push
lock
sbb
fldt
mov
lea
mov
mov
gs
xchg
sahf
push
mov
xor
stos
out
mov
jo
add
into
push
xor
fidivrl
mov
leave
sbb
arpl
rol
loope
adc
dec
bound
xchg
cwtl
xorl
dec
mov
adc
cmp
std
in
xchg
mov
xchg
adc
add
add
add
mov
arpl
add
fsubl
lods
or
sti
dec
int
jnp
aad
lods
add
loope,pt
cltd
pop
and
stos
aas
inc
mov
add
lea
xchg
sahf
jg
pop
test
jae
jl
mov
add
mov
add
and
add
out
lret
loopne
or
add
ret
lret
add
add
jnp
addb
call
loop
into
clc
cmpsl
inc
push
pop
sbbl
insb
sub
add
adc
push
lcall
out
int3
subl
ret
addb
push
sysexit
scas
add
mov
add
xchg
pop
scas
add
adcl
dec
xchg
mov
push
std
stos
add
mov
pop
pop
mov
xor
imul
add
or
push
aam
add
xchg
add
add
add
push
add
inc
xchg
into
dec
cmp
inc
les
dec
sub
add
or
add
cmp
pop
lret
jl
call
ret
and
add
sbb
cmp
add
pop
mov
sub
add
insl
data16
jecxz
daa
mov
int3
aas
movsb
add
data16
pop
mov
add
dec
jne
or
add
enter
push
jecxz
ss
movsl
fstpt
add
adc
das
dec
movsl
hlt
sub
in
ficompl
les
add
popa
jb
mov
popf
in
push
add
insb
lods
int
cmp
xor
fsubrs
mov
add
fs
push
mov
mov
add
adc
jb
loope
out
sub
add
add
fisttpll
dec
fincstp
pop
pop
mov
jb
addb
fcomip
or
add
add
divl
adc
out
out
into
pop
pop
inc
fcompl
fwait
repnz
out
mov
add
cmp
test
add
stos
fisttpl
mov
mov
cmp
xchg
mov
add
push
pushf
repz
and
fxch
push
jne
add
out
test
cmp
add
sbb
iret
pop
mov
adc
sbb
or
add
add
test
fimull
mov
add
dec
je
mov
add
lock
int3
or
add
and
ds
sub
add
add
add
pusha
rolb
sub
add
inc
dec
imul
add
mov
sbb
inc
jb
cmp
add
mov
add
push
mov
inc
add
add
sub
jno
test
mov
int3
arpl
cmpsb
add
sub
add
cld
xor
cmovno
loop
mov
fimull
insb
cli
inc
or
add
add
test
push
add
push
clc
out
outsb
xchg
and
add
adc
add
je
out
das
xchg
outsb
jo
sarb
into
pop
cmc
loopne
in
sub
add
jg
add
add
fisubl
add
adc
mov
push
jb
or
add
cmpsl
dec
bound
in
outsb
enter
shlb
rol
mov
addr16
jmp
add
sub
add
push
fs
push
add
call
jge
push
addr16
lods
adc
add
int
ss
hlt
sub
add
sbb
add
dec
fucomp
lret
scas
mov
add
rcrb
push
add
fiaddl
xchg
cmp
xchg
sbb
rorb
mulb
mov
add
loop
add
push
add
shl
push
mov
daa
xchg
pop
imul
add
out
mov
out
mov
add
mov
mov
cmp
add
dec
sarl
shll
test
push
insl
adc
pop
aas
stos
add
repnz
pop
adc
xor
iret
inc
add
xor
mov
add
add
scas
jbe
addb
stos
ret
or
lret
dec
mov
add
sub
fcoms
ljmp
repnz
cmpsb
add
push
test
dec
into
movsb
add
and
add
ss
add
ja
pop
cmp
push
sub
push
dec
fldenv
add
insl
stos
add
cmpsb
add
pop
push
dec
rcrl
dec
cli
pushf
mov
jmp
int3
mov
out
adc
pop
mov
add
iret
xchg
mov
stc
or
add
sbb
add
mov
mov
shrb
hlt
test
add
push
add
clc
mov
stos
add
pop
loope
and
ds
add
add
fwait
ja
lret
or
add
pop
xchg
filds
jbe
pop
push
sti
mov
into
inc
xchg
out
into
sbb
je
mov
outsl
das
pusha
inc
adc
xor
xchg
pop
push
daa
mov
lods
add
lret
popf
or
pushf
push
pusha
cmp
mov
dec
dec
addb
cmp
sub
lret
add
add
add
popf
or
add
sbb
cmp
push
cmp
fwait
or
add
out
inc
adcl
add
jns
repnz
sahf
and
add
add
adc
imul
lret
and
add
inc
inc
push
sbb
jno
push
repnz
jb
jmp
mov
or
push
daa
sahf
out
popf
out
push
outsl
pop
lods
adc
or
add
add
cmp
pusha
ljmp
and
inc
js
stc
imul
mov
xor
add
mov
and
mov
arpl
push
repz
out
aad
jle
sti
pop
add
add
jl
xchg
add
push
add
repz
mov
add
mov
pop
stos
add
xchg
divl
pop
cmp
xlat
jmp
insl
add
add
or
add
xor
mov
add
jl
cmp
push
xlat
push
pop
pop
cwtl
inc
dec
jg
add
dec
pop
dec
rorl
iret
leave
stos
add
pop
add
pop
adcl
test
add
stc
add
add
push
add
push
add
push
cmp
sahf
add
mov
jae
test
add
rorl
in
pusha
lds
fstpl
lds
xchg
add
aam
add
imulb
aam
jno
je
out
das
sub
add
daa
push
aaa
jecxz
sbb
mov
push
fldenv
add
xor
out
mov
jo
cli
ja
cld
mov
cmp
lret
xor
jmp
xchg
addb
cltd
jl
daa
cmp
add
add
je
push
add
mov
shll
add
fmull
adc
imul
mov
push
cmp
add
jnp
inc
mov
pushf
xor
fstps
mov
add
andl
add
movsl
loope
test
add
jo
or
dec
call
ljmp
aas
xchg
add
add
jl
add
loope
push
call
add
mov
rcll
xchg
outsb
outsl
add
pop
jno
call
dec
mov
repz
add
data16
and
pop
jbe
divl
imul
adc
negb
push
sbb
and
add
add
and
ja
inc
add
add
add
add
pop
push
add
pop
xor
loope
xchg
push
inc
ja
sbb
out
add
cmp
sub
add
add
jecxz
push
add
jnp
sbb
lods
test
mov
add
add
mov
mov
pop
jmp
std
fistps
jl
push
jmp
dec
ss
lock
xor
stos
mov
cltd
and
add
or
leave
lret
sahf
dec
sbb
cmpxchg
pop
add
and
notl
inc
int
adc
movsb
add
shll
daa
dec
lcall
inc
push
push
cmp
lret
loop
jnp
xlat
mov
xor
add
data16
add
ds
mov
lret
mov
add
lds
sub
add
push
fcoml
pop
iret
sbb
mov
add
or
add
insb
dec
adc
and
or
add
icebp
mov
add
fbstp
mov
xlat
arpl
mov
shll
adc
inc
cmpsb
add
xchg
add
test
je
and
test
add
inc
push
mov
add
add
cmp
aas
movsl
hlt
dec
mov
ret
out
call
sbb
add
cltd
cmpsl
in
repnz
aam
lcall
daa
sbb
mov
lock
add
xor
jmp
outsb
mov
xlat
aam
aaa
or
add
sbb
push
insl
out
mov
add
loop
popf
push
jo
add
pop
push
insl
fistl
ss
test
add
test
jmp
rcr
aam
sarb
loope
mov
sbb
fsubrl
outsl
cmp
add
mov
mov
pushl
lahf
jle
add
inc
out
push
add
and
add
icebp
and
add
pop
dec
lock
xchg
into
test
add
mov
jno
add
adc
popa
dec
leave
push
gs
out
adc
in
arpl
add
pop
dec
dec
cmp
add
scas
rclb
xchg
ror
add
sarb
sarb
aaa
cli
lods
add
push
cmc
hlt
add
add
add
ja
add
into
je
sub
add
lret
notb
xlat
mov
add
fdivrs
arpl
add
add
popl
add
xor
push
imul
add
add
mov
pop
xchg
data16
mov
sub
add
jne
add
popa
adc
add
cmp
add
add
mov
pop
rcl
or
add
adc
sti
leave
inc
jl
mov
adc
xchg
pop
adc
fiadds
cmpsl
mov
add
jmp
pop
mov
push
leave
jb
add
mov
into
test
add
sbb
out
scas
add
addb
lods
add
jne
fcmovu
xchg
mov
xor
xchg
cltd
sub
add
push
pop
xlat
mov
add
pop
pop
push
loop
adc
mov
inc
mov
sbb
add
and
add
out
shll
std
and
add
push
or
add
push
mov
inc
or
cmp
adc
mov
test
add
test
add
add
add
inc
jp
inc
cwtl
clc
jmp
iret
jne
or
add
into
lahf
jno
aas
sub
add
ja
pop
fdivrp
bound
inc
push
call
out
pop
adc
test
xchg
gs
pop
not
xchg
addb
pop
je
mov
mov
hlt
pop
jbe
add
add
mov
addb
lcall
hlt
jo
add
inc
push
mov
add
and
add
add
addb
in
jns
add
jbe
aam
push
add
xor
cmp
mov
dec
jbe
xor
shl
dec
adcl
dec
cld
fdivrs
cmp
movsl
push
add
gs
sbb
int3
inc
in
lea
xchg
fchs
cld
cmp
mov
fucom
pop
int
add
pusha
mov
and
add
mov
add
mov
add
dec
lret
loop
shr
push
cmp
xor
push
lahf
lcall
add
scas
add
inc
adc
pop
and
add
repnz
add
roll
add
pop
aad
or
lcall
push
inc
idivb
dec
lods
in
ret
jg
inc
sbb
mov
cmp
sub
add
aas
stos
jno
les
fs
mov
loopne
jmp
add
sub
add
sbb
push
sarb
shrb
add
cwtl
mov
mov
add
and
add
add
add
fisttpll
xor
add
add
xor
fsubrl
or
add
ret
test
add
les
cmpsb
add
mov
leave
shlb
mov
insb
mov
adc
adc
lock
add
inc
and
add
or
lahf
rol
mov
aaa
fsubrl
add
and
add
fcmovbe
pop
imul
jmp
pop
lods
pusha
movsl
mov
add
push
cmp
pop
lret
cmp
add
outsb
and
add
adc
xchg
mov
call
add
adc
movsl
ds
add
sub
pop
push
jp
pop
fisttpl
loope
xor
in
fdivl
add
add
lods
mov
inc
cmp
sbb
add
mov
add
sahf
inc
test
repnz
add
mov
add
add
inc
pop
mov
mov
add
lret
in
lea
mov
sarb
sub
cltd
out
movsl
test
add
aas
and
add
inc
push
push
movsl
addl
mov
inc
stos
data16
fstpl
add
lcall
or
add
xchg
add
add
lea
inc
mov
cmp
addb
ljmp
out
and
add
insb
mov
add
push
testl
cmp
add
popf
mov
mov
out
xor
add
xchg
shl
push
sub
add
movsb
add
movsl
mov
mov
sarl
stos
and
or
add
sbb
add
jp
jmp
into
cmc
out
add
add
add
jb
adcl
aaa
clc
or
add
add
jl
shl
sbb
jle
in
mov
int
pop
in
cld
jns
ret
pop
dec
test
add
sbb
push
mov
mov
add
push
icebp
and
add
add
nopl
add
pop
mov
hlt
sbb
add
lea
xchg
push
outsl
aam
lock
call
add
mov
mov
mov
add
pop
out
or
add
or
add
push
add
addb
mov
ja
nop
cmpsb
add
jp
adc
add
faddl
jmp
add
adc
add
add
push
mov
add
add
jo
jge
push
sub
add
out
das
push
sub
add
adc
push
cltd
inc
jp
nop
popa
mov
les
mov
int
pusha
bound
add
cmpsb
add
ret
add
fidivrs
pop
push
cmp
lahf
movsl
jl
jmp
add
neg
shr
dec
pushf
add
add
shl
add
push
iret
add
out
jecxz
aas
xchg
push
add
mov
add
lret
scas
add
mov
hlt
push
xchg
add
into
pop
rcrb
cmp
pop
cmpsb
add
in
jl
inc
lret
xor
add
lret
testl
mov
sbb
unpcklps
jb
push
les
stos
add
pop
sub
add
mov
dec
ror
cmpsl
clc
jmp
mov
shlb
add
notb
add
outsb
into
in
push
lods
add
dec
cli
scas
pop
lcall
lds
lods
pusha
cmp
gs
outsb
scas
add
xchg
add
mov
adc
and
add
nop
or
add
add
add
adc
add
add
aaa
xor
sub
inc
and
mov
add
add
out
push
popf
push
add
mov
add
scas
rolb
xor
add
mov
add
dec
int3
shr
fwait
mov
add
popf
add
add
add
icebp
sub
add
shlb
add
adc
jae
sub
scas
sbb
add
push
mov
add
dec
mov
or
xor
divb
add
lahf
sub
jg
cmp
and
add
cltd
dec
adc
incb
jp
icebp
sbb
sub
add
lahf
inc
in
fimull
int3
cmp
inc
add
jo
cmc
xor
into
adc
das
jecxz
mov
add
push
add
je
mov
enter
add
mov
adc
stos
sbb
jmp
add
inc
call
sahf
jecxz
push
push
mov
add
pop
and
add
pop
mov
sub
stc
mov
add
daa
xor
and
pop
or
add
movsl
jl
sub
add
sahf
or
add
add
add
fistps
add
xor
iret
sahf
fcoml
add
add
mov
add
iret
or
add
add
int
add
push
loope
mov
pop
hlt
shll
sbb
cmp
add
mov
movb
or
add
loope
jno
xor
xor
adc
sbb
add
pop
push
add
adc
out
mov
in
add
adc
inc
cld
and
add
div
sbbl
jno
xchg
mov
les
add
xchg
mov
fldcw
xchg
rcrl
call
jl
add
add
add
add
mov
add
fwait
mov
add
inc
jns
inc
scas
add
jp
push
mov
add
add
jecxz
lcall
and
add
rorb
pusha
jae
test
add
decb
clc
xor
add
out
inc
adc
mov
mov
mov
clc
into
jle
aad
outsl
or
add
movsb
add
mov
and
sub
shrb
and
push
sub
add
sarl
mov
adc
push
mov
pop
lods
lds
add
jmp
add
push
jae
xchg
sbb
rcr
enter
mov
repz
data16
into
cltd
and
add
ret
test
add
sbb
add
imul
repnz
fwait
arpl
add
jno
add
cmpsl
mov
mov
in
rolb
cltd
addr16
fs
cmp
or
sbb
pusha
popa
mov
mov
fsubs
add
or
add
xchg
bound
add
das
dec
ja
add
cmp
js
stos
add
cltd
pop
jns
dec
jo
jno
add
push
dec
inc
inc
cmp
dec
aaa
into
jno
addb
mov
add
add
daa
clc
xchg
inc
hlt
andl
into
inc
outsl
mov
add
in
xor
pop
ljmp
cmpsb
add
adc
stc
sbb
das
xchg
mov
cmpsb
add
adc
xor
add
jo
addb
les
xchg
xor
add
add
mov
enter
add
sbb
imul
or
push
dec
outsl
cmp
sub
add
ret
ret
stc
call
jmp
ljmp
add
int
add
inc
cltd
test
add
addb
xchg
cmp
mov
dec
xchg
pop
sbb
fld
sbbl
push
add
cli
dec
popa
sub
popf
lods
nop
adc
add
add
push
pcmpeqd
cld
push
mov
push
lret
ja
or
add
add
push
mov
test
add
pop
sub
add
pop
shrb
add
push
outsb
mov
pusha
or
add
in
pushf
repnz
pop
lods
sti
cmc
jno
add
add
leave
mov
xor
add
mov
pop
aad
add
leave
mov
pop
lea
lahf
cwtl
xchg
addb
jae
loop
call
pop
subl
pop
add
add
mov
stos
add
dec
xchg
call
data16
or
add
enter
and
add
add
mov
loope
add
outsl
inc
out
fcmovnbe
jbe
scas
add
fdivrs
add
dec
ret
pop
inc
pushf
and
add
loop
mov
test
add
imul
jge
add
imul
mov
and
shrl
push
add
dec
or
and
add
inc
push
or
popa
into
lods
push
push
or
add
jb
pop
dec
jp
cmpsl
sub
add
add
or
add
call
lea
ljmp
in
dec
testl
jnp
jge
loope
sbb
cmp
cmp
push
imul
lret
fldenv
sub
xor
add
rol
cmp
jne
and
icebp
or
add
in
iret
call
lahf
push
mov
mov
pop
pushl
add
dec
dec
rcl
sbb
addb
sbb
and
add
add
add
add
cld
cwtl
ds
jecxz
xchg
dec
xchg
enter
xchg
aam
out
into
icebp
sub
add
addl
ss
cmp
mov
cmp
shrb
push
ret
add
mov
add
test
mov
pop
sahf
push
xchg
xchg
sbb
add
add
add
int
add
jo
mov
popf
xchg
mov
int3
js
jne
cltd
sub
add
jge
add
nop
and
xchg
lcall
dec
fidivrl
mov
add
arpl
pop
inc
das
das
push
in
aas
pop
xor
sti
decb
stos
aaa
push
sar
out
mov
add
lahf
push
push
xchg
add
cli
xor
addb
arpl
sub
add
movsb
add
and
test
gs
sub
add
mov
add
adc
div
jmp
push
add
js
in
ret
pushf
lcall
lea
add
lcall
mov
cwtl
sub
add
jle
movsl
ja
inc
enter
add
xchg
pop
bnd
scas
ret
add
int
add
js
add
mov
cmp
mov
mull
xlat
or
add
call
int
add
adc
dec
adc
xor
inc
outsl
mov
mov
das
dec
test
bnd
flds
leave
addr16
sub
add
add
add
cmc
loope
outsb
push
add
inc
iret
addb
cwtl
xchg
or
add
mov
pop
pop
xor
inc
or
add
add
sbb
add
in
test
add
add
jle
xchg
add
add
xor
add
stc
mov
push
gs
mov
add
add
addb
pusha
dec
ja
movsl
popa
sbb
add
add
add
add
adc
cmp
or
add
enter
lahf
inc
lods
mov
jns
mov
add
dec
sub
pop
jae
rorb
add
pop
lcall
add
addb
push
xchg
loope
add
dec
mov
xor
sarl
data16
mov
outsb
imull
pop
xor
add
add
enter
ret
push
jne
add
sub
push
xlat
rcrb
cwtl
and
add
and
add
mov
jge
aam
add
sub
add
add
lock
xchg
xor
and
outsb
mov
stos
jecxz
shrl
add
fbld
add
test
add
inc
xor
in
test
add
enter
xor
adc
in
sbb
loop
add
add
nop
getsec
out
outsb
mov
mov
cmp
or
add
aad
je
jle
sbb
xchg
xor
sti
in
scas
jp
xor
sub
add
mov
fs
xor
sahf
addr16
jns
add
enter
add
sub
add
pop
fistl
jle
xor
mov
scas
sbb
int
add
stc
sarl
or
add
xchg
test
push
dec
cmp
int
sti
out
loope
lcall
add
out
mov
repz
mov
add
mov
mov
mov
sbb
and
lock
or
add
add
pop
pushf
add
imul
mov
add
add
insl
sbb
cmp
add
push
sar
dec
push
or
outsb
cmp
pop
mov
add
pop
insl
repnz
add
inc
jmp
shlb
mov
mov
cwtl
and
add
dec
mov
add
aas
inc
xor
les
add
pushf
sbb
add
jb
inc
cmp
daa
sub
add
xchg
addl
fsub
and
add
add
and
pushf
out
adc
pop
jle
dec
ret
add
test
inc
je
or
add
cmc
and
add
xor
fldt
mull
movsb
add
add
add
jmp
add
or
inc
sbb
pop
mov
ss
fnstsw
cmpsb
add
repnz
ret
xor
or
add
into
xor
push
jl
lods
arpl
add
cmpsb
add
pop
addb
xor
mov
jbe
nop
xchg
ret
push
mov
add
mov
lret
insl
and
add
adc
aam
dec
scas
fstl
out
stc
incl
das
mov
xchg
mov
loope
leave
inc
push
in
leave
xor
xor
push
cmp
je
add
shrb
stos
add
outsb
xor
add
xor
lahf
inc
mov
int3
loop
gs
push
add
mov
adc
clc
ds
imul
sbb
outsl
mov
pop
fisttpl
mov
cld
push
mov
add
add
mov
add
sbbl
add
lret
negl
ret
adc
cld
stc
jnp
mov
js
push
push
insl
sub
add
daa
ja
mov
in
leave
mov
sbb
mov
inc
jle
aad
inc
dec
jge
rolb
push
inc
ja
mov
fwait
lret
add
push
add
into
xchg
add
add
pop
mov
add
cld
add
in
inc
pop
dec
popa
test
add
sahf
dec
cli
xchg
add
je
insl
ds
sbb
mov
ds
add
add
pop
adc
movsb
add
lods
push
mov
lcall
je
jge
push
add
aaa
sbb
mov
data16
mov
add
push
and
lods
add
mov
cmp
add
xor
mov
rcrl
add
mov
or
add
add
add
repnz
mov
movsb
add
xchg
scas
add
xchg
in
add
sbbl
xchg
shl
mov
sub
iret
adc
xchg
add
enter
inc
mov
jecxz
adc
add
cwtl
mov
insl
push
add
cmpsb
add
loopne
inc
ret
adc
movq
mov
or
add
add
add
jl
aad
testl
in
in
and
faddl
loope
fbld
inc
xor
dec
leave
or
jle
xor
out
call
add
lods
push
add
add
xor
imul
fmull
ljmp
lds
fidivl
rcrl
push
out
sbb
sarb
xchg
aas
into
add
and
add
jmp
jmp
stos
add
inc
mov
jmp
mov
add
test
add
hlt
push
inc
outsl
cmp
je
adc
shll
mov
pop
rep
popf
movsb
add
cmp
inc
addb
cmpsb
add
shl
or
push
in
mov
add
in
fistpl
insb
imul
fildll
fs
pusha
add
pop
rcr
clc
dec
xchg
pop
mov
jmp
cmp
lds
add
mov
jle
bound
ljmp
push
mov
add
add
mov
or
push
pop
adc
mov
add
lds
add
int3
nop
jns
dec
push
addb
inc
inc
mov
add
or
add
and
add
loop
add
dec
lret
mov
jle
jl
and
add
add
add
adc
adc
dec
pushf
not
lret
mov
add
sbb
dec
jmp
xlat
mov
add
lahf
pushf
push
cmpsb
add
add
inc
test
mov
int3
enter
aam
add
fld
xchg
mov
aam
lahf
and
add
sub
add
add
add
outsl
cltd
push
add
out
and
call
mov
cmpsl
sub
add
push
rclb
pusha
or
add
ret
add
sti
pop
lds
add
cltd
mov
testl
fwait
repnz
add
adc
mov
add
test
add
movsl
dec
dec
mov
ficoms
rcr
fists
scas
add
imul
inc
dec
orl
mov
fistpll
test
outsl
xchg
lret
jb
add
inc
popf
xor
mov
add
lcall
in
popa
lcall
or
add
into
add
add
das
mov
sub
xchg
fidivrl
mov
ja
mov
mov
add
push
scas
daa
xchg
or
add
inc
fiadds
clc
sbb
xchg
dec
xlat
imul
add
mov
add
add
mov
setg
add
cmc
lret
cli
les
inc
aad
add
lds
mov
pusha
jae
inc
or
out
jb
int
add
push
or
add
add
mov
mov
repnz
gs
fs
aaa
filds
cmpsb
add
xchg
xor
rorl
add
mov
inc
fs
fadds
std
mov
sbb
xchg
stc
cmp
rolb
add
add
jb
iret
jmp
sbb
or
add
pop
inc
arpl
mov
rorb
addb
inc
fiadds
add
xor
lahf
shlb
movsl
aaa
cmp
pop
or
add
add
dec
shlb
add
add
imul
add
sbb
cwtl
xchg
repz
cmp
add
fldcw
mov
scas
add
xchg
add
add
mov
lea
adc
jo
dec
xor
scas
rorl
xchg
jmp
pusha
and
add
add
aad
cmp
xor
addr16
insb
stos
add
add
add
adc
sbb
sbb
jo
addb
add
add
daa
cmpsl
xlat
adc
addb
push
adc
cwtl
sbb
push
add
add
add
popa
bound
out
in
lea
fists
cld
sbb
int3
mov
add
add
and
add
add
add
add
jle
add
adc
inc
adc
gs
add
jne
add
outsb
mov
inc
sbb
push
add
or
add
and
add
notb
int3
iret
mov
xor
add
xor
popf
inc
dec
and
add
or
add
xlat
or
add
stos
dec
cwtl
in
imul
fdivr
fildl
sub
add
add
and
add
push
xchg
add
hlt
popf
add
iret
and
mov
add
add
sub
add
out
mov
push
xchg
adc
ss
add
mov
mov
cmp
push
cli
xchg
les
pop
adc
insl
daa
sub
add
add
and
add
dec
mov
push
sub
in
inc
arpl
cmpsl
xchg
arpl
push
add
add
mov
pop
xchg
test
add
add
jne
inc
ljmp
push
add
add
adc
sbb
inc
cmp
int
push
jbe
xchg
imul
fsts
test
pop
push
add
add
or
add
add
add
pusha
test
mov
or
add
sub
add
mov
cmp
xchg
add
xchg
mov
imul
mov
add
add
add
mov
pop
into
add
fdivl
test
add
add
push
jo
icebp
dec
jle
xchg
adc
add
pop
inc
enter
adc
fiadds
add
add
push
xor
stos
add
addb
js
inc
test
add
mov
mov
add
hlt
jno
test
add
mov
je
inc
fadds
sub
add
lret
inc
and
add
xchg
int3
inc
in
aam
in
icebp
mov
pop
cmp
mov
leave
jle
cwtl
and
add
fildl
add
pushf
jno
cmc
les
push
pop
cmpsb
add
cmp
dec
insl
add
push
in
pop
mov
test
add
repnz
pop
enter
sbb
addl
ss
lods
add
jo
sbb
cmpsl
dec
adc
xor
mov
pop
sub
add
jo
test
add
add
pop
jl
jge
add
xchg
insb
pop
popl
addb
cli
dec
jns
add
mov
sub
add
add
pop
and
add
add
arpl
inc
jae
fisttpl
add
push
lea
jl
pop
lds
jle
pop
pop
std
mov
add
jmp
adc
push
rolb
add
push
lahf
enter
adc
repnz
pop
sbb
repnz
dec
add
xchg
outsb
mov
add
push
insl
cld
dec
lahf
jo
sbbl
jmp
jnp
jl
aam
and
add
repz
loope
add
daa
sub
add
ljmp
addb
cld
pop
dec
add
xchg
add
inc
pusha
push
dec
pushf
add
add
push
cmp
sub
add
sub
add
add
in
leave
and
add
add
int
ret
add
push
mov
aad
mov
pop
pushf
mov
add
ret
cld
and
fimuls
test
outsb
mov
cmp
add
add
jns
jmp
add
scas
add
sahf
sub
sub
add
and
mov
inc
sti
mov
add
test
add
jle
sbb
test
add
add
add
add
sarb
sbb
ja
add
js,pt
je
mov
add
in
xchg
add
add
add
push
sarl
nop
cwtl
aas
mov
add
xor
in
imull
add
push
stc
lahf
pop
xchg
call
xor
sub
pop
mov
xor
in
inc
add
sbb
scas
mov
jp
mov
dec
ljmp
out
notb
ljmp
add
push
sub
xor
addb
popf
mov
out
rolb
adc
fisubl
add
sbb
fwait
mov
mov
add
movsb
add
outsl
cmp
dec
in
cmpsb
add
xor
sahf
fisubrs
call
out
call
adc
shlb
int3
sub
add
jecxz
add
push
jle
add
adc
add
xor
jecxz
or
mov
movsb
add
jmp
mov
add
pop
jbe
pop
test
add
sar
jo
sti
cld
imul
mov
popf
sbb
lods
roll
out
test
add
mov
add
dec
iret
loop
lcall
add
pop
or
add
lret
mov
fwait
sbb
and
cli
lret
push
out
in
pusha
mov
jge
sub
add
pusha
jge
adc
jno
push
aaa
xor
add
outsb
movsb
add
mov
add
into
inc
add
add
mov
add
pop
jae
push
clc
ss
imul
xchg
mov
mov
aas
lcall
pop
fcmovnb
insb
push
sub
add
push
int3
pop
push
push
mov
into
pop
addr16
add
push
xor
push
sub
add
aad
mov
out
into
pop
arpl
add
or
dec
fistps
add
ret
and
add
add
sbb
inc
fbstp
adc
in
stos
add
in
add
pop
ror
add
add
mov
inc
jecxz
popa
loopne
sub
test
pop
add
add
lahf
pop
jb
add
ret
and
add
add
inc
fstpt
into
jmp
add
inc
and
add
or
add
addb
dec
push
nop
addb
js
add
mov
push
sub
add
cld
xchg
jle
lahf
adc
add
loopne
mov
cmp
sbb
jge
add
jbe
pop
add
add
add
mov
xchg
shl
push
dec
pop
pop
push
fs
dec
shll
adc
lahf
loopne
shll
add
jb
add
jge
mov
xor
add
nop
xchg
stos
add
dec
inc
mov
xor
mov
add
lea
add
mov
add
lods
add
lea
dec
dec
fsubl
add
add
push
mov
add
add
push
ret
add
xchg
cmp
adcl
add
jbe,pt
movsl
popf
sahf
push
loop
or
jl
add
mov
add
add
jmp
scas
add
outsl
mov
fwait
pop
xchg
mov
push
stos
add
sbb
cmp
subl
add
and
ljmp
or
adc
add
jne
add
movsb
add
mov
arpl
scas
add
into
inc
push
pop
iret
jmp
add
dec
or
jns
fildll
ja
js
mull
cwtl
int
push
adc
test
add
sbb
test
mov
push
add
adc
jmp
mov
mov
addb
xchg
push
popf
rcll
mov
inc
add
push
das
fs
add
les
add
imul
sbb
insb
pop
push
push
daa
dec
les
or
test
add
loop
add
dec
out
stos
shll
lods
add
cmc
xor
xchg
dec
pop
outsl
xor
out
add
xor
mov
rclb
add
inc
jo
lcall
jge
mov
mov
add
add
nop
in
rclb
imul
push
fwait
sbb
lcall
add
and
add
cld
test
add
cmpsl
data16
loopne
mov
fsubl
jl
add
fimull
mov
or
add
push
outsb
sbbl
add
xlat
popf
mov
adc
jmp
xlat
fwait
loop
ficomps
add
std
jno
mov
xchg
out
add
nop
in
pop
pop
dec
lcall
push
pop
lcall
test
add
xchg
call
mov
push
add
bound
movsb
add
xor
fstpt
scas
add
jo
mov
mov
dec
xor
enter
bnd
orl
mov
add
ror
sub
add
aam
mov
add
add
and
add
inc
cltd
out
lcall
pop
imul
adc
or
divl
sarb
push
pushf
js
xchg
add
scas
jmp
je
mov
inc
xor
add
sub
add
cmpsb
add
add
add
xor
daa
adc
call
pop
fincstp
and
add
cltd
loop
and
add
clc
shl
cmpsl
mov
das
push
adc
hlt
push
and
mov
mov
cmp
xor
outsl
mov
add
add
in
jbe
add
in
outsl
mov
add
lds
cmp
add
test
hlt
test
filds
imul
add
lret
add
mov
inc
ss
add
cmp
arpl
jecxz
pop
jns
pop
sub
add
inc
mov
add
ret
dec
xor
push
cmp
add
inc
nop
into
mov
pop
ret
pop
inc
inc
mov
jnp
cmc
jecxz
add
cmp
dec
and
call
add
add
add
pop
stc
jmp
push
mov
add
mov
jmp
or
nop
arpl
cmc
and
pop
jbe
adc
mov
add
sbb
int
xlat
dec
jg
aam
or
add
gs
aad
add
xor
xlat
mov
aam
add
sbb
mov
test
add
add
stos
add
and
mov
add
jl
push
or
cmp
pushf
fwait
in
fstpt
cmc
jmp
add
cmp
shr
mov
jle
dec
lret
leave
mov
sub
add
add
int
xchg
sub
dec
testl
add
and
add
mov
sbb
rdtsc
iret
jmp
add
cmp
shr
push
scas
add
ret
push
arpl
mov
mov
mov
mov
ljmp
test
add
jne
pop
push
add
sub
int3
pop
inc
cmp
mov
out
test
mov
add
xchg
jno
inc
insb
dec
xchg
cmp
mov
add
push
add
loopne
add
jns
xor
popf
mov
add
movsl
cli
cli
das
scas
jnp
divl
inc
xchg
outsl
ret
fcoms
xor
jns
xor
jg
pop
hlt
icebp
xchg
xchg
rorl
pop
loope
add
add
add
inc
bound
ja
scas
add
xchg
ds
adc
outsl
mov
add
xchg
shr
hlt
jecxz
rorb
add
dec
push
push
out
int3
adc
add
sbb
jg
mov
lret
out
movsb
add
lea
add
add
aas
pop
aaa
cmp
je
out
or
mov
push
mov
xchg
add
jnp
pop
jno
scas
add
cmp
dec
sub
add
loop
fcomps
cld
pop
sahf
ficoml
int
mov
add
sarb
aas
sub
add
add
add
shrl
pop
push
dec
imul
add
jb
dec
popf
rorl
add
popf
xor
xchg
jb
add
sub
add
cmpsb
add
movsl
addb
cwtl
mov
sbb
add
sub
sbb
add
add
add
mov
add
mov
or
add
add
mov
add
outsb
inc
sbb
add
sti
out
xchg
or
add
stc
cmp
mov
clc
lahf
fwait
xchg
fcomp
and
add
add
sbb
leave
pop
fistpl
out
push
add
adc
add
jle
add
cltd
icebp
sahf
jno
adc
dec
add
add
jecxz
pop
aas
pop
jno
addb
aaa
imul
add
mov
push
ds
adc
add
imul
sbb
pusha
dec
dec
push
mov
divl
aam
sub
push
and
mov
xchg
testb
add
outsb
mov
test
add
inc
cmpsl
sub
cmpsb
add
push
out
sbb
lods
add
mull
xor
xchg
stos
call
add
in
pop
mov
xlat
mov
add
add
cli
divb
pop
jne
add
add
inc
add
add
add
mov
mov
ror
and
shrb
add
cmp
push
add
dec
je
add
testb
xchg
push
or
jns
dec
lods
add
dec
jb
add
mov
loope
and
add
xchg
icebp
orl
gs
sbb
add
je
sarb
andl
dec
lods
aad
adc
out
out
jnp
or
add
jge
add
je
add
addr16
push
in
cmpsl
les
add
push
xor
dec
sbb
fwait
dec
push
addb
mov
and
mov
mov
idivl
pop
pushf
xor
add
xchg
xor
dec
push
add
cli
imul
rcll
addr16
ds
lea
push
rcrl
add
add
sarl
jb
jecxz
test
add
cld
shlb
add
aaa
out
mov
adc
mov
stos
ljmp
add
cli
nop
push
aas
inc
sbb
lock
jg
add
push
pop
and
sub
add
jg
adc
jb
lret
dec
popa
aam
add
sahf
push
add
xor
xchg
outsl
mov
add
fistps
push
sbb
inc
add
enter
mov
and
add
jle
add
ret
mov
movsb
add
ret
and
dec
or
add
add
push
sbb
add
pop
cmc
stos
add
xlat
bound
add
lret
mov
add
push
lret
push
add
rolb
in
pop
xchg
sbb
jp
push
add
sbb
mov
sub
add
movsl
cltd
cmp
add
pop
inc
jmp
add
icebp
mov
mov
je
add
out
js
stos
add
in
xchg
add
out
pop
pushf
push
aaa
mov
faddl
add
add
stos
add
mov
call
stos
add
inc
pop
sbb
jp
or
inc
mov
sub
add
add
out
xchg
test
aas
xor
mov
mov
mov
inc
fisubrs
sbb
push
adc
sbb
addb
cmpsl
mov
ss
pop
lret
mov
xor
std
mov
add
ja
dec
les
jmp
dec
ja
mov
addb
js
add
mov
add
add
in
or
mov
insb
dec
pusha
xor
or
out
call
aam
ja
out
add
add
cmc
jns
cwtl
or
add
nop
adc
cmp
popa
xor
lcall
int3
test
addr16
test
inc
sti
lret
sar
add
xchg
add
pop
outsl
xor
into
adc
add
stos
dec
paddsb
lcall
add
or
add
les
mov
sbb
loope
sub
add
xchg
add
push
arpl
das
push
addr16
fwait
lods
add
pop
in
outsl
mov
add
sbb
jo
repz
das
or
add
mov
mov
lds
add
or
add
add
inc
dec
and
mov
add
add
add
jl
push
aam
pop
insb
in
sub
add
mov
add
mov
add
lahf
pushf
loop
add
test
add
add
lret
rolb
mov
std
lret
lcall
in
inc
fcoml
shlb
add
les
add
fistpl
pusha
fsubrl
jg
and
xlat
mov
aaa
scas
add
xor
pop
cwtl
mov
out
xchg
dec
gs
pop
dec
sarb
add
add
loope
cmp
sub
xchg
into
and
sbb
add
stos
add
and
add
addb
sarl
addb
js
inc
push
clc
cli
pop
mov
mov
push
aas
jns
push
js
push
or
add
xchg
add
mull
pop
pop
jp
ret
test
add
mov
add
push
cld
mov
test
add
xchg
aam
push
add
cwtl
mov
add
fiaddl
cmp
int
sbb
popa
cmpsb
add
sahf
shlb
sahf
pop
sbb
push
add
mov
adc
add
mov
add
cmp
or
add
mov
push
fs
push
xchg
push
int
je
mov
add
fldcw
cmp
add
mov
add
sbb
cwtl
lods
add
dec
insb
popf
rorl
call
sub
add
sub
add
mov
add
aam
cmpsl
xor
cmpsb
add
insb
test
inc
mov
gs
add
add
call
push
add
add
push
push
dec
ret
jo
adc
pop
iret
idiv
nop
mov
xchg
movsl
loopne
add
add
add
inc
ret
jg
loopne
pop
inc
insb
xchg
aad
outsl
adc
sti
or
add
cmp
aas
jno
pop
bound
cmp
test
mov
add
ljmp
add
sbb
pop
jmp
rcll
push
std
sub
add
loope
ja
js
popa
mov
pusha
fs
mov
add
add
pop
imul
jecxz
pushf
xor
mov
add
add
add
dec
push
sub
add
adc
cwtl
jmp
mov
jg
push
mov
push
divl
add
add
sbb
mov
fiaddl
xchg
out
inc
addl
call
mov
add
stos
mov
mov
add
mov
add
sahf
sub
sbb
rcrl
cli
addl
sub
add
outsl
mov
cmpsl
out
sbb
int
lds
outsl
pop
cwtl
aam
jle
cld
pusha
add
add
and
add
gs
fimuls
add
in
lock
add
das
dec
lods
add
inc
rcl
lea
add
mov
sbb
xlat
mov
add
push
or
xchg
inc
lret
add
movsb
add
stos
add
xchg
pop
negb
add
leave
popa
std
xchg
add
add
pusha
cli
push
jbe
xor
nop
mov
push
popf
xor
add
mov
movsb
add
cwtl
lret
in
add
add
mov
popf
rcrl
or
add
jle
push
add
movsl
and
add
or
add
pop
aaa
jo
add
sub
add
lea
push
icebp
imulb
xchg
fidivl
and
add
push
mov
add
fadds
jge
xchg
or
add
in
mov
add
fcompl
popa
int3
insb
leave
sbb
sub
faddl
ljmp
dec
adc
sbb
add
sar
mov
imul
les
fwait
push
dec
arpl
add
mov
mov
je
roll
add
mov
mov
and
add
pop
xchg
dec
mov
pushf
cwtl
dec
mov
xchg
push
add
mov
add
outsb
sub
add
add
aas
outsb
and
nop
fldenv
add
add
test
add
pusha
cmpsb
add
rcll
call
clc
mov
loopne
pop
mov
add
in
mov
add
imul
add
adc
out
outsl
aad
ret
pop
cmpsl
stos
add
dec
arpl
cmp
and
add
pop
fld
rcl
fucom
jg
lcall
dec
xchg
in
adc
mov
sub
add
cmp
jo
popa
xchg
push
out
sbb
lret
mov
add
inc
jmp
add
inc
mov
into
mov
lahf
arpl
fisubl
and
add
add
ja
in
add
add
fdiv
xchg
lock
push
xchg
add
mov
jne
js
adc
add
add
dec
xchg
push
pop
into
mov
movsb
add
imul
cltd
pop
sub
add
repnz
add
ds
sub
push
push
jb
aas
mov
xor
rorl
jmp
and
add
mov
add
aam
mov
popa
js
mov
mov
mov
add
xchg
sbb
pop
out
adc
mov
mov
sub
add
mov
aaa
fbld
add
pop
mov
inc
into
nop
lcall
xchg
test
add
add
or
test
add
add
add
ficoml
cmp
pop
mov
add
add
insb
jo
fcompl
xor
inc
mov
fildll
add
cld
scas
add
movsb
add
xchg
inc
fisubl
push
mov
add
lods
mov
jg
fsubrl
jge
neg
sti
jnp
dec
aaa
xchg
repz
mov
add
lret
add
xchg
mov
test
add
lcall
pop
pop
rdtsc
js
addb
xchg
cli
cmp
add
add
inc
add
push
mov
or
dec
or
pop
mov
fldt
js
push
in
ds
add
mov
xchg
cmp
pop
dec
mov
add
scas
fnstcw
adc
pop
pop
pop
test
sub
add
xchg
or
add
dec
adc
and
add
je
sbb
or
shll
push
into
xor
mov
xchg
add
add
fbld
cmp
call
outsl
jbe
js
push
add
mov
lcall
jne
out
cmp
sub
add
les
add
inc
imul
add
lcall
arpl
pop
sub
push
inc
push
add
in
pushf
mov
out
and
pop
or
add
cli
faddl
add
cmp
add
add
mov
add
push
dec
xor
add
mov
ret
test
addr16
fbld
add
scas
mov
push
add
stos
das
out
outsl
dec
ljmp
mov
push
cwtl
je
fcoms
add
or
add
notb
and
ja
xchg
or
add
popf
fs
lds
pop
sbb
addb
fwait
popa
inc
mov
pop
movsb
add
addb
mov
lds
in
mov
sub
add
fistpll
add
test
add
dec
fimull
add
das
dec
daa
xchg
out
lods
leave
push
pop
pop
adc
add
ficomps
sub
add
push
call
js
jecxz
sbb
pop
inc
mov
add
cmp
mov
mov
dec
mov
adc
ret
xor
pop
mov
mov
add
add
sbb
fnstcw
test
add
and
xchg
mov
mov
stos
ror
test
push
aaa
int
pop
aas
adc
add
lods
add
je
dec
scas
out
dec
adc
gs
je
cmpl
jnp
fildl
cmp
add
mov
add
add
add
repz
and
adc
mov
jne
add
pop
jne
jp
dec
add
mov
add
add
in
inc
adc
out
xchg
add
repnz
loop
jmp
pop
out
cmp
add
enter
inc
rcr
decb
and
add
aad
rcrl
insb
add
xor
xchg
stos
dec
fsts
fwait
xchg
fmull
cmp
push
sub
add
add
inc
fucom
iret
cmp
mov
outsl
mov
add
mov
test
add
xchg
pop
pop
push
addb
fbld
add
adc
adc
sbb
scas
mov
aam
mov
pop
jb
push
divl
and
ljmp
sub
add
out
mov
pop
or
push
mov
jmp
add
cmp
insb
xchg
mov
mov
inc
and
sbb
jae
fists
mov
push
add
mov
add
ljmp
add
loope
adc
and
and
add
add
mov
add
add
fstpl
cmpsb
add
fbstp
add
add
jnp
repz
cmp
add
or
add
mov
xchg
les
js
or
out
mov
rcr
mov
add
add
cltd
pop
xor
jg
mov
add
out
aas
movsb
add
popa
mov
popa
and
loope
call
xchg
cmpsb
add
data16
add
ret
add
add
mov
xor
outsb
je
jns
jp
xadd
fnstsw
rcrl
add
push
xchg
in
add
test
scas
add
repz
add
jmp
imul
sahf
fiadds
add
jle
shrl
add
shll
inc
cwtl
test
je
ret
pusha
push
dec
or
ss
mov
jnp
inc
jg
insl
ret
mov
add
shl
test
jb
mov
add
add
add
ficompl
dec
sti
aam
jbe
pop
mov
add
lret
or
add
int3
ret
add
test
add
adc
add
pop
xchg
aas
jg
xlat
int
lret
insl
imul
ret
lods
dec
mov
in
mov
add
add
lds
xchg
pop
aad
xchg
sbb
and
stc
test
add
add
cld
inc
inc
out
push
add
mov
add
mov
add
clc
call
les
iret
or
add
mov
xor
sbb
in
add
in
lcall
scas
push
fcmovnb
lds
add
jg
mov
pop
sbb
or
and
add
pop
dec
mov
add
xchg
shrb
fisttpll
jnp
imul
lods
add
mov
ja
jge
dec
ja
sbb
cmp
add
inc
inc
popa
and
add
jno
mov
lds
outsb
add
sbb
add
inc
mov
andl
mov
add
dec
lcall
jle
inc
leave
rcll
push
and
xor
lret
cmp
lret
push
clc
xchg
push
add
mov
jne
push
popa
stos
cltd
sub
mov
or
repz
hlt
cmp
lret
fmuls
push
add
loopne
cltd
setle
add
add
sub
scas
add
mov
stos
add
sbb
pop
loopne
add
loope
jbe
xor
add
sub
add
mov
mov
pop
jno
in
jle
cltd
lea
lret
add
inc
xchg
pmullw
enter
outsl
dec
sbb
add
or
or
xor
mov
fstpt
add
sub
add
cmp
pop
out
lret
inc
movsb
add
fisubrl
add
inc
notb
add
sahf
out
je
fld
ljmp
pop
pusha
dec
cmp
pop
sub
andl
popf
inc
push
fdivrl
lods
add
daa
sbb
test
scas
add
jbe
pop
insb
xchg
in
sbb
cmpsl
push
add
dec
outsl
inc
fcmovnu
pusha
jne
xor
and
add
xchg
mov
add
loopne
insl
fistpl
push
jb
aam
inc
aad
add
pop
and
push
lcall
mov
add
sbb
iret
push
iret
cmp
push
and
scas
add
insl
aaa
imul
add
add
add
add
mov
add
adc
inc
inc
pop
int3
push
add
push
divb
lds
xchg
test
and
scas
add
lods
add
pop
ja
shl
lcall
clc
adc
mov
lahf
fnstcw
sub
pop
mov
add
mov
adc
dec
sub
cmp
xchg
in
inc
or
add
sub
xchg
inc
pop
cmc
mov
outsb
or
add
fwait
or
mov
movsl
xor
cmpsl
fdivl
add
outsb
pop
imul
jmp
push
imul
inc
addr16
hlt
lock
mov
mov
push
fidivrs
dec
inc
jmp
push
sbb
or
add
dec
setns
cltd
and
sub
add
add
addb
and
mov
add
xor
add
add
mov
and
add
pop
inc
mov
in
or
add
cmpl
add
pop
rorl
into
mov
add
add
push
add
ret
mov
add
lods
stc
jno
push
add
outsl
popf
testb
negl
xor
insl
jo
dec
xor
movsb
add
adc
jl
test
add
add
stos
add
xchg
cltd
jmp
mov
add
fcomip
or
add
adc
add
mov
dec
imul
insb
pop
fnstsw
mov
and
sub
jle
pop
cmpl
jle
add
out
arpl
adc
add
cwtl
into
cli
cmp
sub
xor
loope
add
pop
sbb
lea
add
stos
add
mov
into
fdivl
add
mov
adc
add
and
add
mov
notb
sbb
movsl
adc
add
add
add
imul
and
test
add
mov
pushf
push
addb
jle
or
add
xlat
ds
inc
sbb
add
mov
ja
inc
pop
lahf
and
add
mov
add
mov
add
or
add
mov
cmpsb
add
xor
adc
adc
cmp
xor
dec
mov
sub
add
addb
xor
stc
mov
cmpsb
add
xor
rorl
fcmovne
pop
sub
inc
dec
imul
lahf
fidivl
and
add
add
inc
int
sbb
add
icebp
jno
cltd
aam
mov
add
sub
gs
popl
push
add
nopl
add
inc
jo
movsl
mov
pop
orl
stos
jecxz
loope
push
sub
roll
test
lea
fstpl
push
add
mov
add
add
xchg
dec
adc
add
adc
mov
add
aam
push
pop
int
adc
add
packuswb
pop
jno
add
xor
add
jne
mov
jbe
push
add
mov
add
out
aaa
leave
inc
or
test
add
std
std
cmp
mov
xor
outsl
repz
push
or
add
push
add
sbb
repz
inc
mov
bound
fists
xchg
sub
pop
sbb
inc
xlat
jg
xchg
sub
add
xchg
icebp
mov
adc
push
popa
je
add
mov
fwait
je
push
jp
adc
cmp
fstps
outsl
mov
add
jg
sbb
jae
ja
mov
adc
dec
dec
jo
jbe
or
add
xor
add
imul
mov
add
test
add
jnp
xor
add
mov
jge
add
add
mov
add
push
daa
add
ja
mov
add
mov
add
jo
sub
adc
jbe
inc
pop
out
ljmp
add
mov
popa
sub
adc
imul
xchg
dec
loop
mov
ljmp
or
add
xchg
stos
add
jle
scas
add
loop
in
jo
loop
adc
add
push
gs
xlat
cmp
add
stc
stc
sbb
data16
lea
ret
pop
int
popa
pop
pop
push
shrb
add
add
mov
push
sub
add
sbb
popf
xor
xor
mov
and
gs
fucomi
lret
shrb
dec
mov
dec
imulb
add
pop
mov
push
dec
xchg
add
xchg
pop
insb
xchg
lahf
mov
add
fildll
mov
add
ljmp
xchg
inc
imul
jnp
add
fsubs
add
or
jbe
dec
aas
jno
push
adc
and
add
sbb
cmp
sub
addb
inc
or
enter
clc
and
add
test
add
dec
adc
add
sub
add
sbb
add
adc
jno
mov
jae
int
mov
stc
mov
add
test
add
add
add
adcl
inc
daa
rcl
and
add
adc
lods
in
adc
movsb
add
arpl
or
ss
mov
add
xchg
add
rclb
add
mov
mov
xchg
aam
fnstcw
sub
sbb
imul
add
lahf
or
add
add
add
in
sub
xchg
pusha
ljmp
fmull
fsubp
or
dec
xor
fmuls
sbb
inc
incl
add
add
mov
dec
dec
inc
jg
sub
add
test
add
cmc
push
add
jmp
mov
xchg
add
and
add
xor
cmc
std
cmp
or
add
rcrb
mov
fstl
popa
leave
negb
pop
dec
or
add
in
test
add
insl
test
add
sub
add
adc
daa
fwait
sbbl
add
jmp
add
or
add
mov
inc
in
mov
pop
loopne
jg
enter
add
pop
popf
in
decl
add
js
and
add
cmp
je
add
repnz
add
mov
mov
or
cld
incb
call
cmp
pop
mov
add
xchg
inc
push
inc
add
rcll
adc
mov
xor
add
dec
ror
add
and
add
sub
pop
dec
icebp
push
in
mov
mov
cmp
add
enter
or
add
jne
push
pop
out
mov
lea
add
and
repz
fcoml
lds
adc
sbb
pop
pop
repnz
aaa
aas
cmp
out
inc
jge
iret
gs
ret
mov
stos
add
shll
add
jp
pop
popa
orl
add
loopne
sub
xor
imul
lret
add
cmpsl
push
fsubrs
add
lock
xor
and
inc
add
fiadds
in
in
xchg
pop
jg
mov
add
xor
adc
sbb
mov
add
loopne
addb
sbb
jp
dec
push
lods
jecxz
adc
bound
add
dec
cltd
dec
push
pop
pop
xchg
jmp
add
sahf
test
add
pop
inc
mov
sti
lahf
mov
xchg
inc
test
add
adc
jne
push
insb
aad
add
jle
sub
add
or
lods
add
push
pop
repz
or
add
clc
pop
fnstenv
cmp
sbb
int
add
xor
dec
add
pop
stc
pop
cmpsl
in
fldenv
cltd
repnz
pop
lods
add
push
pop
pop
outsb
fcomps
lret
mov
fiadds
add
shlb
add
or
add
and
decl
xlat
xchg
dec
xchg
sub
add
fwait
test
add
dec
cltd
xchg
sahf
jbe
mov
add
lds
xchg
add
add
hlt
jno
imul
cli
mov
addl
add
add
mov
add
sti
dec
dec
mov
add
aam
ja
loopne
add
jo
incl
cmpsb
add
adc
je
shll
add
pop
mov
gs
lock
sub
dec
out
add
add
leave
jmp
clc
jmp
mov
mov
inc
mov
icebp
dec
mov
add
add
fisttpl
add
test
adc
hlt
ss
jge
dec
jg
add
adc
adc
enter
cmpsl
sub
and
add
add
scas
outsb
add
daa
push
fcmovbe
movsl
in
add
push
rcrl
inc
hlt
jo
mov
fcompl
addb
dec
mov
and
icebp
arpl
pop
shll
xor
add
xchg
test
add
dec
lret
add
in
jbe
xchg
aas
repnz
and
add
xchg
addl
cltd
push
test
add
mov
add
test
add
addb
out
mov
add
jg
xor
cwtl
popa
and
add
inc
lea
sbb
add
jbe
mov
jo
add
adc
or
push
add
xlat
pop
xlat
jmp
add
cmp
add
add
in
inc
incb
add
mov
push
push
or
mov
add
mov
fbld
add
inc
jb
dec
mov
xor
scas
add
aam
xchg
jmp
fisubl
imul
lods
outsl
sub
movsb
add
pop
inc
repz
add
add
lcall
jb
jecxz
cld
dec
ss
xchg
add
dec
arpl
mov
add
shl
pop
scas
sbb
movb
clc
pop
mov
add
cltd
add
add
out
dec
test
xchg
ret
test
aam
xchg
and
pop
addb
and
add
jae
outsb
pop
sarb
add
xor
scas
outsb
dec
xchg
stos
fdivl
repnz
inc
sbb
add
ljmp
add
dec
sub
or
add
jle
lds
adc
push
scas
mov
cmpps
add
cld
xor
stos
sar
adc
or
add
adc
lods
lods
add
lods
xlat
sbb
cmp
mov
add
cmp
int3
imul
and
sbb
repnz
dec
mov
sbb
xchg
mov
add
sbb
add
inc
ret
add
sbb
cmp
addb
pop
mov
movl
add
movsb
add
sub
add
dec
pop
xchg
ljmp
lret
add
adc
lock
push
add
sti
xchg
ret
inc
in
add
in
enter
jl
add
cld
jb
push
jmp
add
mov
je
aam
inc
inc
xchg
fucom
ficoml
add
fadd
sti
sbb
sub
add
movsb
add
and
add
cmp
negb
iret
loopne
sub
out
jno
repz
int3
dec
pop
mov
add
mov
or
add
bound
mov
add
hlt
cmc
xor
cli
inc
adc
push
xlat
inc
test
add
inc
ja
cwtl
fdivl
push
ljmp
add
mov
test
add
xchg
add
push
add
out
into
jns
add
outsb
xor
mov
mov
add
das
and
add
add
push
add
push
add
sub
add
aam
inc
mov
pop
lods
outsb
xor
push
dec
lods
subl
add
push
scas
out
mov
dec
in
mov
pop
push
xlat
xchg
pop
push
adc
jle
xchg
add
pop
dec
mov
jp
outsb
nop
negl
xchg
sub
add
cmpsl
jg
inc
fdivrs
add
data16
mov
aas
xchg
add
add
dec
push
add
add
outsl
rolb
add
pushf
add
add
fldpi
pop
push
add
mov
je
add
push
and
xchg
sub
add
add
sub
add
add
inc
ret
iret
into
mov
int
out
inc
bound
sub
mov
mov
stc
dec
aam
lea
test
add
test
add
sub
add
add
mov
dec
sar
ja
in
or
ja
sbb
adc
mov
add
dec
mov
add
sub
add
movl
add
shr
sbb
add
add
jge
incb
inc
xchg
add
add
xchg
add
add
jb
xchg
lds
jo
andl
mov
lds
mov
add
push
add
dec
lahf
mov
add
or
out
test
add
addb
jmp
mov
add
stos
add
int
add
and
add
mov
add
cmp
hlt
mov
dec
pop
jae
ror
sbb
sbb
or
adc
push
rorl
add
add
repnz
enter
push
lret
sar
cmc
call
addb
xor
mov
aam
insb
sub
add
cmp
sub
add
mov
add
ror
lret
add
add
pop
clc
sbb
adc
mov
aaa
dec
je
add
pusha
add
add
cli
repz
enter
adc
addb
ja
sbb
mov
outsl
sub
scas
mov
xchg
add
int3
dec
mov
repz
mov
daa
cmpl
dec
ret
mov
pop
cmc
js
and
add
or
cmp
xchg
stos
scas
addb
sarb
rcll
cmpsl
or
shll
add
les
add
cli
bound
repnz
add
out
imul
add
cmpsl
sbb
inc
adc
pop
cwtl
jnp
movsb
add
sbb
testl
rcrl
inc
pushf
lea
add
fwait
daa
adc
sbb
sbb
or
xor
mov
pusha
jnp
jmp
push
xor
sbb
stos
add
loop
dec
or
add
test
add
add
push
pop
rcr
fisubrs
add
mov
add
outsb
test
add
add
push
mov
add
push
test
lcall
popa
cmp
rorb
sbb
daa
jecxz
jg
add
addr16
xchg
inc
push
mov
ret
mov
add
push
sbb
push
shlb
push
sub
add
shl
mov
lods
push
xor
aam
jge
add
add
add
dec
pop
dec
icebp
push
hlt
or
add
sub
repnz
add
add
add
fbstp
repz
in
dec
cli
iret
cmp
insl
and
add
fldpi
mov
inc
pop
mov
pop
pop
mov
cmp
lahf
adc
mov
jno
jns
dec
dec
data16
das
dec
xlat
pop
mov
add
fnstcw
out
loop
rorl
add
dec
xchg
xchg
jmp
and
mov
jne
lret
jo
lds
outsl
xlat
pop
enter
add
push
subl
add
cld
or
aad
mov
mov
mov
pop
cmp
pushf
mov
add
sbb
add
add
add
dec
lods
aaa
and
add
stc
mov
sbb
dec
std
jns
mov
add
ds
add
pop
add
add
les
nop
test
sahf
jne
xchg
xor
add
dec
iret
cmp
add
cwtl
inc
jmp
imulb
aam
add
lock
test
add
inc
dec
mov
add
xchg
mov
xor
mov
add
mov
add
mov
roll
add
stos
jle
and
add
push
add
shl
cwtl
lcall
add
flds
add
jae
lods
add
cmp
rcrb
mov
add
and
add
pop
mov
add
cld
and
add
or
add
inc
jmp
inc
sub
add
aad
mov
add
inc
das
push
pop
daa
out
jecxz
iret
int3
cmpsb
add
lret
sti
int3
pop
jecxz
fstl
addb
xchg
movsl
lcall
add
add
imul
shrb
add
add
je
movsl
adc
pop
fistps
xlat
pop
adc
add
add
mov
add
sti
cmp
inc
fucomip
iret
cmp
push
mov
les
pop
lock
jmp
leave
inc
pop
sbb
pop
sub
add
mov
addb
andl
or
add
mov
jns
xchg
daa
jne
into
jecxz
cmpsl
add
out
adc
push
jns
scas
add
lret
stc
imul
jg
dec
sahf
push
in
inc
icebp
xor
jno
push
adc
jecxz
add
xchg
mov
and
loop
dec
hlt
add
mov
add
fstps
mov
fdivl
shlb
out
mov
add
and
add
jmp
imul
cmpsb
add
add
add
add
xchg
mov
fimull
lds
add
leave
add
add
add
ret
add
daa
mov
push
push
add
mov
dec
add
add
fiadds
add
sbb
insb
cmpsb
add
or
jne
pusha
or
add
mov
add
ljmp
adc
aaa
mov
cmp
xlat
xchg
pushf
ljmp
add
lea
xchg
pop
dec
das
call
xrelease
add
xor
add
add
hlt
addr16
cmp
add
fistpll
adc
rcrl
and
xchg
sub
add
ljmp
push
cwtl
push
and
add
shll
pop
cmp
xor
jp
out
js
mov
sbb
nop
nop
iret
lock
out
addr16
pop
cmpsb
add
push
add
adc
add
cwtl
mov
movsl
mov
add
add
mov
aam
jmp
xchg
mov
in
mov
xchg
stos
add
xchg
cmp
xchg
shll
inc
pop
sti
pushf
sub
push
xchg
insl
lret
lea
xor
push
add
jle
orl
inc
pop
imul
inc
sbbl
mov
xor
ret
sti
movsl
je
imul
xor
add
mov
add
frstor
jne
add
aad
add
mov
push
sahf
cltd
jno
add
into
addb
or
add
pop
inc
pop
aad
jnp
addb
into
dec
arpl
push
add
rolb
lods
add
dec
outsl
sar
adc
testl
xchg
movsl
gs
push
xor
sarl
jecxz
pop
rclb
pop
xor
mov
aad
loopne
or
add
add
std
arpl
mov
jge
mov
xor
in
add
ljmp
icebp
add
push
add
mov
js
sbb
add
pop
rcl
add
inc
in
rclb
aas
inc
int
xchg
add
sti
xor
dec
aas
mov
add
adc
sarl
int
mov
add
add
add
push
jg
stc
cmp
mov
insb
std
mov
dec
mov
add
xor
stc
push
mov
add
sub
add
xchg
add
mov
jno
and
add
lods
add
filds
mov
pop
std
ja
js
sub
add
cmpsb
add
mov
add
enter
xor
out
mov
inc
mov
add
iret
icebp
movsl
adc
xor
vpaddb
stc
mov
add
imul
push
ja
add
dec
sub
pop
inc
and
add
inc
push
test
add
xlat
mov
jmp
sbb
fsubr
push
and
add
mov
add
xchg
and
add
cmp
add
dec
lock
fisttps
lret
shrb
mov
dec
shrb
adc
icebp
xchg
mov
xchg
ret
cmp
in
push
adc
jns
add
adc
dec
test
jnp
mov
jmp
sub
add
add
xor
imul
add
popa
pop
add
add
pop
call
add
das
adc
dec
rcrl
add
rep
hlt
sbb
test
add
add
jbe
mov
add
hlt
or
add
add
and
add
cmp
enter
mov
in
and
add
add
pop
mov
and
add
sub
add
mov
xlat
stc
ljmp
adc
add
js
jg
clc
pop
cmpsb
add
or
add
push
cmp
add
loop
pop
jp
push
xchg
xchg
pop
rcrb
stos
add
stc
mov
lods
mov
add
add
add
sbb
push
jns
cmp
xchg
scas
push
pop
ja
add
pop
push
fistpl
xor
call
call
add
xchg
punpcklwd
call
push
hlt
scas
and
add
add
icebp
rorb
mov
mov
push
push
add
xor
lret
dec
test
add
dec
jae
js
sbb
loopne
int3
movsb
add
dec
sbb
add
scas
add
aad
and
add
add
mov
push
rcrb
cmc
pop
mov
mov
add
cwtl
adc
jge
sbb
adc
out
ss
inc
je
add
sbb
jmp
xor
cmpsl
inc
aad
std
xor
jmp
sahf
xchg
add
test
add
mov
add
aaa
inc
ret
add
and
loopne
mov
jb
enter
add
scas
mov
sbb
outsb
cld
sbb
lahf
mov
mov
sub
add
pop
pop
or
inc
push
aaa
cmp
mov
ret
rdrand
add
addr16
inc
jp
mov
roll
and
mov
add
jnp
add
gs
cmp
push
iret
leave
xchg
mov
mov
add
add
mov
add
sub
add
or
out
sbb
enter
adc
xchg
ljmp
cmpsl
mov
dec
repnz
shl
and
sbb
jnp
add
andl
aas
mov
add
jecxz
inc
std
pusha
movsb
add
push
pop
gs
icebp
shufps
adc
stos
ss
xor
out
pop
pop
loop
add
jg
mov
jle
imul
jmp
add
sub
and
add
and
xchg
cmp
add
shlb
mov
mov
mov
in
mov
daa
and
dec
jno
fsin
jge
sbb
inc
fcmovnbe
jae
sti
enter
adc
xor
les
add
int3
add
add
add
add
add
out
mov
add
dec
movsl
ret
rcrl
add
das
cli
fsubl
iret
sti
lcall
mov
add
jns
das
xor
mov
mov
sub
add
sbb
lds
adc
scas
add
ficoms
mov
aam
jbe
cltd
iret
mov
and
add
push
in
lret
sub
add
add
jno
add
inc
inc
xorl
lret
adc
add
movsl
shr
sbb
add
idiv
cltd
sti
push
add
add
les
fcompl
shll
push
cmpsl
icebp
sti
push
pop
jge
or
add
out
decl
in
xor
cltd
fisubl
push
mov
jge
sarl
add
imul
push
fcompl
push
dec
sarl
aaa
mov
dec
and
icebp
popf
jno
jo
cmp
test
das
inc
addr16
inc
sbb
ja
push
jnp
or
add
ret
add
out
add
and
add
add
test
or
add
lcall
jg
test
add
xor
add
bndldx
je
leave
mov
xor
push
test
cmp
jae
xlat
xchg
cmp
mov
cli
ja
shll
dec
adc
stc
rorb
add
imul
xchg
popf
adc
cmpsb
add
xchg
mov
xchg
and
insl
clc
lret
push
out
push
add
fstl
or
add
cmp
les
dec
inc
sub
add
aam
js
shl
bound
add
std
aas
incl
add
push
int
in
cmpsl
ljmp
mov
xor
rorb
add
mov
add
movsl
xor
repz
test
add
jb
movsb
add
cmp
pop
push
mov
add
cmp
ljmp
push
push
shl
mov
add
push
xchg
pop
lahf
cmpsl
les
mov
add
cmp
add
lret
pop
lods
add
test
xor
cmp
add
scas
outsb
jecxz
jle
jp
add
or
dec
lds
daa
inc
outsl
inc
lret
stos
adc
add
imul
addb
add
add
cltd
insb
shl
or
add
loope
add
push
jbe
cmpsl
dec
or
add
movsb
add
ljmp
ljmp
sub
icebp
xor
lds
test
imul
sbb
add
addr16
sbb
add
adc
inc
cmovp
inc
mov
add
mov
add
enter
add
out
xchg
pusha
mov
add
insl
andl
clc
aaa
call
test
out
scas
daa
and
arpl
adc
pop
mov
dec
into
add
add
test
add
add
inc
dec
or
repz
or
arpl
add
push
add
add
push
mov
ljmp
add
or
inc
adc
insb
in
and
mov
rolb
add
stos
cmpsl
cmp
rorb
add
fsubrs
out
inc
cmpsb
add
in
mov
add
pop
mov
mov
ficomps
add
imull
sarb
test
add
sahf
stos
movsl
test
xor
pop
mov
add
pop
cmp
jge
or
ja
repz
ret
lods
cmc
push
cmp
addr16
lods
bound
add
add
add
je
add
add
imul
jbe
xchg
out
add
add
aaa
addr16
rsqrtps
ds
xor
add
dec
lahf
shll
les
or
add
add
add
shlb
adc
mov
addb
cltd
int3
xlat
imul
jg
add
or
add
loop
mov
and
or
add
and
add
add
add
mov
xor
pop
pop
jle
add
xchg
addb
inc
sub
movsl
fstl
add
aaa
loope
sub
add
aaa
mov
hlt
insl
in
cltd
rcl
aas
or
add
inc
jl
shlb
sub
add
push
fdivrp
inc
cmc
push
add
stc
lods
add
cmpsl
fisubrl
sarb
mov
xchg
dec
jge
xchg
xlat
andl
add
aad
add
lods
add
sub
add
inc
or
add
sbb
dec
inc
xchg
push
add
fistpll
inc
mov
xchg
add
in
pop
divb
jae
cwtl
scas
repz
ret
std
in
sti
cmp
xchg
test
add
add
testb
or
add
add
cmpsb
add
sub
add
and
add
jle
add
add
add
add
loope
in
pop
ss
pop
jmp
dec
mov
dec
iret
or
add
shll
fistpll
inc
mov
add
scas
mov
je
lcall
cmp
in
imul
out
pushf
or
add
je
pop
pop
daa
push
fcomps
and
add
sar
bound
cmpsb
add
or
add
or
in
add
pop
aaa
mov
sub
add
popf
push
jle
jno
std
addb
scas
add
popf
dec
adc
cwtl
push
add
add
add
test
add
inc
imul
fsts
loope
mov
push
add
jle
test
pop
into
push
add
dec
dec
outsb
add
andl
mov
inc
aaa
movsl
push
icebp
inc
sbb
inc
cmp
add
adc
xchg
std
jno
mov
dec
pop
or
xor
mov
add
push
jecxz
pop
xlat
mov
add
loopne
add
add
add
pop
in
push
add
xchg
add
add
out
dec
add
fsubp
xchg
xor
bound
nop
xchg
push
xchg
add
hlt
into
clc
scas
call
aaa
inc
sahf
ljmp
sbb
mov
ror
push
jno
add
push
push
inc
xchg
mov
sbb
push
add
add
cmp
inc
mov
out
push
xor
cmp
adc
ss
pop
pop
jbe
imull
cltd
and
add
jo
test
cwtl
mov
mull
adc
add
mov
lahf
addb
call
add
add
push
add
push
in
fs
cmp
fbld
push
mov
cmpsl
arpl
mov
test
movsb
add
aad
lret
or
faddl
sub
add
or
add
dec
adc
xor
jae
imul
aam
std
insl
repnz
push
push
in
sub
add
xor
jno
out
mov
add
cmpsl
nop
js
out
sub
add
pop
ror
test
add
dec
lret
add
add
call
repnz
shl
clc
xor
push
cmp
fcompl
xchg
iret
jns
cmp
sbb
add
and
add
imull
add
jmp
punpckhbw
test
add
sbb
push
or
add
xor
add
mov
aad
add
dec
das
mov
movsl
outsb
cwtl
push
mov
lcall
add
in
fcomps
cmp
lret
ds
cmpsb
add
int3
jnp
out
or
add
add
add
sahf
out
call
into
fimull
pop
inc
jno
xchg
pusha
icebp
dec
fimull
cmpsb
add
aaa
adc
test
add
je
out
scas
add
lock
sbb
pop
and
add
inc
mov
add
add
pop
push
fucomip
insl
in
test
add
xchg
aas
cwtl
lret
pop
movsb
add
ljmp
out
int
mov
add
lods
add
jp
or
jbe
add
call
adc
add
add
shll
fcomp
cmp
push
jecxz
xchg
stc
add
outsb
ror
mov
add
mov
inc
mov
add
outsl
popf
cmp
mov
pop
pop
ret
sti
push
add
sbb
aad
sub
add
sbb
movsl
sbb
add
push
call
add
cld
aas
jbe
xchg
cmpsb
add
xchg
dec
xchg
jl
adc
fwait
popa
rorl
lock
add
add
clc
test
add
push
mov
add
push
mov
dec
xchg
aas
movsl
nop
xchg
jl
sbb
mov
insb
jb
mov
int3
pop
mov
mov
clc
loop
lahf
movsb
add
insl
out
adcl
pop
or
push
rcl
mov
add
js
add
cwtl
sahf
and
add
fnstcw
in
jne
jns
or
add
mov
add
xlat
pusha
fisttpl
and
add
aas
inc
sub
add
add
sarl
cmc
imul
mov
mov
fs
adc
sub
add
dec
mov
cmpsl
inc
add
add
xchg
repnz
add
pop
aaa
arpl
mov
add
xchg
mov
outsb
addr16
das
cmp
adc
add
cmp
add
inc
mov
stos
add
and
fistps
pop
jle
pop
jl,pt
insb
jae
or
testb
fildl
cmc
movl
xor
xor
movsl
ds
jo
pushf
pop
fcomi
mov
sub
fiadds
repnz
mov
into
xlat
mov
mov
fistps
call
popl
pusha
xchg
add
aas
jbe
add
test
add
inc
dec
adc
fmull
stc
dec
and
add
or
add
push
add
add
push
add
jno
adc
add
ljmp
mov
hlt
dec
or
mov
add
add
add
call
jg
cmp
mov
add
dec
ljmp
les
sete
inc
pop
dec
pop
clc
mov
add
fidivrl
xchg
push
in
addb
or
hlt
mov
aaa
mov
repnz
dec
xchg
hlt
adc
mov
inc
out
adc
cltd
ret
add
pop
pop
sbb
mov
push
sub
add
add
add
cmp
vfrczps
add
jecxz
sub
add
mov
push
xchg
stos
fbstp
jl
addb
and
add
push
cmp
add
xor
pop
cwtl
aas
mov
adc
dec
addb
mov
mov
add
aad
rcl
fstpl
ljmp
push
add
add
inc
xchg
cmpsl
ja
adc
mov
ss
xor
add
int
mov
jnp
xlat
fldcw
add
xor
mov
jge
jmp
fstpl
sub
add
add
mov
add
pusha
xor
pop
mov
add
sbbl
add
jge
rcll
cmp
add
stos
loope
add
dec
jle
add
imul
jp
loope
sub
add
dec
pop
and
add
cmpsb
add
and
add
dec
fidivs
add
addl
add
fwait
rdtsc
repz
lret
add
push
fildl
inc
add
add
sti
rorb
add
mov
add
mull
push
loop
adc
cmp
jg
jbe
xor
inc
jo
cmp
repz
int3
fdivl
sarb
push
pop
sbb
stc
rorl
jo
add
or
jae
add
xor
push
dec
inc
inc
dec
and
add
int
jb
sub
add
inc
je
mov
loope
inc
insb
and
inc
fs
pop
addb
mov
add
add
dec
xlat
addb
adcl
repz
inc
push
add
cmpsl
stos
inc
mov
add
aad
mov
sarb
add
popf
add
add
sub
add
icebp
pop
lahf
add
jb
mov
sbb
dec
popf
inc
mov
add
dec
jmp
les
imulb
dec
adcl
inc
dec
pop
sub
pop
mov
test
add
cmp
mov
add
add
add
dec
ljmp
xchg
add
sbb
push
frstor
inc
cmpsl
sar
pop
pop
jne
add
imul
lret
adc
add
sahf
dec
mov
add
mov
je
and
add
lods
add
enter
add
and
add
adc
sbb
pop
xchg
inc
push
add
pop
arpl
add
mov
xor
repnz
sbb
cld
fcoml
insl
insb
ret
mov
sbb
jb
mov
add
sbb
je
cmp
sbb
add
add
pop
and
mov
stos
add
dec
enter
in
add
add
add
out
fisubs
add
out
add
push
add
add
add
lret
jae
repnz
add
add
adc
or
add
inc
dec
repz
dec
jbe
daa
icebp
shlb
add
scas
add
cmc
or
add
scas
sahf
fadd
xchg
gs
ds
in
jb
pop
jae
pop
dec
xchg
cmpsb
add
aam
sub
add
add
call
cmp
in
or
add
cmp
leave
cli
sarb
xor
inc
leave
xor
popl
add
mov
add
and
add
cwtl
test
jl
push
add
xor
cmp
add
add
scas
add
out
mov
xchg
fwait
imul
call
ljmp
xlat
loopne
add
pop
gs
aaa
lret
repz
or
add
or
add
inc
mov
xchg
jl
pop
jne
mov
clc
xchg
jp
mov
add
lcall
lcall
ret
add
cmp
add
fcom
add
imul
add
add
sub
or
add
xor
ret
into
in
cwtl
mov
add
mov
adc
dec
inc
push
fs
inc
add
add
or
add
jns
add
sti
dec
jo
bound
or
add
fcmovne
cmpsb
add
out
mov
test
mov
das
in
addb
inc
cmpsb
add
iret
hlt
js
add
fnsave
or
add
dec
cmpsl
jae
add
int3
xor
jbe
mov
aad
and
add
inc
into
pop
ljmp
jecxz
test
add
mov
xor
out
lds
sahf
push
add
xchg
add
add
sub
add
rol
cli
push
iret
lods
mov
xchg
cmp
outsb
mov
pusha
call
nop
cmp
stos
ret
lcall
outsb
stos
add
inc
lea
and
test
add
int
dec
mov
in
loop
mov
scas
add
scas
imul
dec
or
mov
add
loopne
add
add
sti
xchg
int
mov
add
cwtl
push
add
adcl
inc
jp
sub
sub
add
push
lcall
cld
jb
ljmp
add
cld
in
pop
fdivrl
dec
adc
outsb
or
add
or
add
sti
loop
popf
aaa
sbb
lcall
leave
out
mov
add
xor
sub
push
shrb
jge
repz
or
add
xor
add
cmp
and
fsts
mov
insl
mov
add
nop
and
xchg
bound
fisttps
or
add
decl
loop
push
push
arpl
outsb
mov
add
or
add
xchg
pop
push
jg
aad
and
add
test
add
bnd
addb
pop
and
xor
daa
push
movmskps
mov
jbe
add
aaa
push
add
and
cmp
fisttpl
add
xchg
or
add
push
mov
jns
ror
je
jnp
imull
fwait
mov
xchg
sbb
push
lret
push
xor
hlt
stos
add
add
lret
or
add
ss
add
pop
test
add
sahf
mov
loop
mov
pop
popa
pop
scas
add
cld
or
add
rcrl
cmp
in
add
lret
inc
pop
dec
shll
sub
add
jno
repnz
xor
and
add
mov
add
into
test
add
add
mov
add
add
mov
rcrl
arpl
scas
add
and
hlt
clc
mov
mov
mov
inc
or
fnstcw
fcmove
jge
addr16
pop
faddl
fcomi
test
add
add
ret
pop
adc
add
fldt
stos
add
jge
pop
mov
add
aad
jg
pushf
cmpsb
add
aaa
sub
and
add
cmp
pop
push
addb
out
sub
outsl
xchg
add
push
insl
sub
add
adc
mov
pop
push
int
push
cmpsl
aaa
fimuls
xchg
pop
dec
sbb
sub
add
sahf
dec
push
inc
inc
xor
pusha
std
in
mov
dec
and
mov
add
test
add
add
pop
cmp
mov
add
loopne
in
call
add
aam
cmp
dec
ds
push
mov
mov
mov
dec
and
add
push
mov
out
addb
push
incl
stos
add
cmp
or
add
mov
mov
in
cmp
dec
aad
cmpsb
add
dec
and
out
addb
pop
aam
xchg
jl
dec
inc
jl
add
out
ret
outsl
pop
sub
pushf
decl
add
pusha
addb
lahf
mull
add
movsb
add
inc
jno
cmp
movsl
jecxz
add
inc
add
add
jmp
add
lock
test
fisubrl
add
cmp
repz
int3
pop
and
add
mov
xchg
arpl
or
popf
jo
mov
xchg
xchg
add
in
push
and
add
add
jae
sbb
add
add
xchg
sub
add
add
add
add
sarb
push
ret
pop
sbb
push
add
push
leavew
cmp
jg
xchg
cld
fstpl
shlb
jge
call
cmp
addb
push
mov
add
imul
and
add
or
add
dec
jno
enter
rolb
push
mov
shrb
pop
and
add
jo
adc
gs
in
inc
mov
add
or
add
cltd
incb
aad
push
add
in
inc
mov
repz
add
jp
sub
sub
fxch
lock
arpl
inc
cmpsl
cld
enter
add
cmp
add
inc
ret
push
lods
in
add
clc
in
add
fisubl
adc
cmp
gs
ret
insl
ret
fdivrp
lods
add
mov
add
push
add
fstl
pop
jle
push
mov
add
test
add
mov
mov
add
add
scas
add
in
mov
add
add
ljmp
add
aad
dec
adc
popa
xchg
add
sbb
sbb
sbb
cmp
mov
pop
jecxz
pop
mov
add
lahf
jl
add
iret
dec
loopne
jno
imul
add
dec
xor
jbe
push
xchg
add
add
or
add
testl
add
mov
or
add
mov
sub
cwtl
mov
add
sub
sti
inc
adc
cmp
add
push
xchg
xchg
jbe
test
add
repnz
in
repnz
jmp
mov
addr16
lods
inc
js
fsubr
divl
popa
sub
add
cltd
inc
add
sarb
adc
adc
addb
push
push
addb
enter
cmp
mov
add
xor
add
add
loope
cmpsl
js
push
jns
fstpl
rolb
into
jle
xchg
push
test
pop
lret
sahf
mov
add
mov
xor
add
out
inc
sahf
mov
jae
dec
ljmp
add
sub
rol
imull
insb
cmp
mov
jbe
enter
cmp
dec
xchg
add
fldl2t
add
lds
mov
aas
push
out
test
movsl
pop
sbb
jae
adc
stos
mov
add
aam
mov
add
add
cmpsb
add
mov
add
xchg
push
sub
add
add
inc
les
jl
das
sti
rcl
lds
stc
rcrl
pop
aaa
add
add
or
add
add
pop
aaa
insl
in
pop
aaa
inc
imul
add
add
xchg
mov
sbb
leave
jp
push
andl
add
jp
enter
lods
add
movsb
add
addb
or
pop
aaa
inc
dec
dec
cmp
or
add
test
pop
cmp
add
sbb
add
addb
xchg
inc
mov
add
or
pop
into
cmp
cmpsl
mov
cmp
cmp
ret
outsb
mov
jbe
or
add
add
pop
jmp
add
pusha
clc
outsb
lahf
xchg
inc
sti
mov
ret
stos
nop
adc
outsb
mov
fnstsw
cmp
je
cld
negb
add
pushf
add
add
add
stos
xchg
sub
and
add
add
fistps
int
lret
scas
aaa
out
xchg
cmpsb
add
sbb
rolb
add
dec
mov
jg
pop
cld
out
cmp
out
add
sarl
add
in
lea
push
loope
insb
sub
add
xchg
fdivl
mov
pop
daa
je
xchg
stc
mov
fs
jnp
xor
inc
lds
in
mov
or
add
cmp
dec
outsl
xor
in
push
jecxz
sbb
std
mov
add
inc
adc
cmp
sub
add
mov
xchg
fidivl
jmp
gs
add
dec
lahf
int
add
add
adc
add
push
sub
add
dec
outsb
xchg
mov
xchg
pushf
mov
add
add
add
xlat
lock
adc
out
mov
ja
cmp
clc
jmp
add
insl
cmpsb
add
loope
add
jge
xor
pop
sahf
pop
add
add
add
add
adc
add
out
fisttpl
add
aaa
cwtl
xchg
in
pop
lahf
mov
add
add
mov
fistpll
lahf
xchg
cmpl
add
push
adc
inc
in
les
mov
clc
xchg
add
insb
adc
pop
xchg
aam
popf
ret
cmp
and
add
xor
aaa
jno
dec
jns
loope
mov
add
sbb
out
or
or
add
pop
div
jo
add
aaa
out
sbb
aam
add
loop
push
je
call
and
jmp
dec
or
jmp
fwait
mov
add
add
js
push
mov
sti
gs
pop
push
dec
add
sub
add
into
fwait
inc
ja
add
test
add
aad
popa
lcall
xor
mov
sbb
and
add
mov
xlat
addl
mov
ds
rorb
add
aam
ret
add
imul
add
pop
mov
pop
pop
imul
and
add
sub
mov
push
add
mov
sti
add
add
iret
ret
sbb
cmpsl
add
add
add
cmp
jnp
xor
inc
sbb
xor
jnp
push
dec
out
add
push
scas
pop
je
in
out
subl
or
add
add
incb
leave
cmp
add
inc
inc
add
rcll
sbb
hlt
pop
rcr
data16
xchg
mov
add
scas
das
fildl
stos
push
add
add
add
outsl
div
jl
add
inc
cltd
call
insl
out
push
add
cmc
test
std
inc
test
add
add
cmpsl
jle
jb
dec
scas
ljmp
cld
mov
inc
cmpl
mov
add
mov
loopne
idivb
pusha
outsl
add
outsl
mov
fistps
mov
jns
je
shrb
push
xor
test
inc
gs
lret
repz
jns
mov
add
ret
loop
daa
fstpl
hlt
or
add
add
int3
out
jne
mov
inc
xchg
loop
mov
add
sub
add
or
add
add
lret
add
scas
add
out
push
cbtw
add
or
dec
shrb
jmp
inc
xchg
push
push
test
add
fdivrl
add
fnstsw
add
xchg
dec
xor
jecxz
addr16
jle
and
jno
add
mov
dec
loope
jle
sbb
gs
ja
dec
test
add
jne
or
add
add
insb
mov
mov
add
arpl
xchg
test
inc
mov
add
aad
add
sub
add
out
add
push
add
add
mov
add
add
inc
or
add
add
mov
outsl
and
imul
ret
orl
and
add
ss
shlb
icebp
lret
bound
add
leave
lret
add
sbb
or
add
jmp
add
in
inc
lret
pop
xchg
sbb
cli
jno
add
add
xchg
add
rclb
bound
add
mov
and
lret
out
loope
add
dec
popf
test
add
mov
add
lahf
add
jo
je
adc
ljmp
scas
add
and
lret
mov
pop
outsb
and
scas
movsb
add
mov
cmp
jge
add
add
fnstsw
movl
cmp
mov
add
addb
add
add
sbb
and
bnd
sti
pop
or
pop
fisubs
add
add
add
aam
xlat
sbbl
rcrl
addb
outsb
lods
add
xlat
dec
adc
add
mov
cmp
jbe
add
popa
dec
mov
pop
adc
mov
je
in
mov
add
pop
mov
cmpsl
mov
mov
add
add
out
mov
xchg
add
add
add
adc
push
leave
addb
xchg
gs
add
dec
gs
jbe
jmp
add
sbb
repnz
adc
stos
add
xlat
xchg
andl
add
cmp
xchg
out
aas
sub
add
je
xor
dec
dec
cmp
jae
mov
test
jge
daa
movsb
add
aaa
dec
push
in
outsl
pop
mov
jbe
or
in
dec
pushf
push
push
add
jmp
or
add
lock
jae
lahf
add
mov
and
add
dec
iret
movb
add
imul
addr16
cwtl
fiaddl
pop
in
insl
xchg
scas
and
add
add
mov
add
adc
cmp
inc
addr16
jo
sahf
ljmp
add
push
lret
xchg
inc
icebp
pusha
sti
dec
inc
push
add
jg
test
add
nop
nop
mov
add
jbe
add
add
sbb
pop
mov
cwtl
imul
mov
mov
nop
nop
fdivr
inc
fimuls
add
add
mov
inc
mov
sbb
cmpsl
bswap
test
add
sar
xor
addb
and
add
xor
or
cmp
lods
add
pop
testl
add
jns
repnz
shrl
add
ret
fsubl
jno
or
add
inc
scas
stc
bound
xor
cmp
cmp
lret
sahf
icebp
adc
and
add
adc
test
add
add
les
jnp
dec
add
aaa
mov
and
add
add
mov
sbb
mov
add
push
in
or
add
aaa
cmp
dec
xor
dec
pusha
mov
mov
cwtl
mov
popf
sar
or
sbb
add
jge
add
cmp
xchg
add
movsl
out
inc
adc
and
add
das
pop
stos
add
add
add
add
push
cmp
and
shll
add
shlb
push
dec
lods
mov
xchg
cmp
gs
out
dec
sti
stos
add
jbe
adc
movl
leave
arpl
dec
lods
in
jmp
add
fsubl
xchg
add
jb
sub
icebp
hlt
mov
ss
jmp
arpl
or
push
stos
divl
add
jg
stos
add
ljmp
sub
add
cmc
mov
sbbl
addb
mov
movsb
add
pop
mov
sub
add
cltd
sub
add
push
xor
add
mov
stos
add
mov
add
lods
or
add
push
rorb
jp
nop
xor
gs
ficomps
add
int3
test
add
adcl
jbe
in
push
cltd
sub
add
mov
lock
stc
nop
push
add
mov
add
in
dec
adc
sbb
or
add
jmp
dec
dec
jge
int
jecxz
add
loopne
add
sti
sbb
hlt
pop
gs
mov
add
mov
add
inc
and
mov
call
add
cmp
loope
ret
add
add
add
inc
in
mov
test
push
xor
popf
mov
sub
test
in
scas
add
pop
sub
add
xor
lcall
mov
add
jecxz
inc
mov
adc
add
aas
mov
popa
xchg
xchg
add
inc
mov
mov
push
sahf
adc
mov
fs
ret
mov
cmp
add
add
add
test
push
xor
sub
add
cmpsb
add
mov
lcall
mov
adc
xor
sbb
fsub
xor
or
add
pop
mov
adc
mov
stos
add
imul
add
addb
inc
inc
sbb
arpl
add
push
aam
in
add
add
add
add
and
add
adc
sbb
jnp
js
add
mov
out
jmp
mov
add
les
fsubs
aam
arpl
fiadds
test
loop
test
add
mov
and
daa
sbb
mov
out
xchg
fmuls
add
fildl
mulb
mov
add
loope,pt
jae
mov
push
mov
lret
sub
add
or
or
add
inc
ja
pop
lret
push
add
mov
pop
cmpsb
add
jne
push
push
xchg
pop
jb
add
loop
sbb
dec
iret
dec
arpl
aas
std
cmc
xchg
fwait
aad
jle
xor
mov
add
jp
dec
jmp
adc
inc
inc
outsl
sub
and
add
mov
sbb
repnz
add
and
mov
or
imul
add
add
adc
push
xor
lods
add
dec
neg
mov
fnstsw
cmpsb
add
int3
imul
add
fcomi
fldcw
add
ret
sbb
inc
aas
lock
dec
popa
fidivl
loop
jne
fwait
jl
add
cmpsb
add
mov
add
in
ret
jae
fcomi
stos
add
sbb
adc
icebp
icebp
push
jg
lock
pop
inc
frstor
add
sarb
test
or
add
add
add
push
add
int3
xchg
adc
mov
add
iret
test
add
add
dec
outsb
shlb
mov
cmp
imul
stc
addr16
cmp
add
mov
adc
jg
mov
add
add
add
add
lods
add
xchg
cmp
push
dec
popf
addb
pop
fiadds
add
pop
push
sahf
cmc
push
mov
nop
inc
bound
add
mov
mov
cli
icebp
mov
cltd
xchg
pop
addb
out
loop
inc
pop
mov
add
inc
in
cmpsl
insb
mov
call
insl
mov
cmpsl
pop
pop
mov
xor
out
dec
cmp
cmp
fstpt
icebp
ja
js
sub
add
outsl
test
add
push
sbb
mov
add
outsb
flds
fcoml
fsubs
add
arpl
rol
sbb
fbld
xor
add
push
data16
test
mov
add
call
rcr
cmc
sti
pop
fcoms
mov
add
flds
fbld
mov
lods
mov
leave
mov
push
pop
xchg
mov
loopne
icebp
imul
add
jle
sbb
add
mov
repnz
push
addb
jmp
mov
add
cmc
imul
adc
test
add
sbb
mov
mov
mov
add
mov
sub
add
aaa
or
outsl
push
add
inc
xor
jle
add
loop
sbb
lahf
in
push
add
or
test
add
in
repz
add
sbbl
mov
ja
xchg
je
adc
xchg
xlat
aaa
add
int3
mov
test
add
je
xor
jnp
out
loope
mov
add
sbb
mov
pushf
aas
mov
outsl
push
inc
fmuls
stc
pusha
popa
sbb
addb
xchg
push
sub
imul
orps
inc
loopne
jbe
imul
xchg
notl
cmp
fisttps
and
ss
dec
sahf
jp
add
aad
les
push
cli
ret
inc
mov
addb
xchg
or
aaa
dec
das
add
or
add
fbstp
xchg
icebp
sub
cmpl
xchg
pop
mov
shll
test
int3
cmp
mov
adc
mov
cmp
or
add
fistpl
add
scas
aam
cmpsb
add
cmp
add
jmp
adc
movsl
dec
push
add
push
add
cwtl
scas
inc
or
and
add
add
add
data16
add
sbb
iret
add
add
pop
jbe
cmp
addb
jmp
pop
xchg
cmp
xchg
push
xor
push
addb
inc
adc
cli
movsb
add
ljmp
cmp
lret
add
addb
movsb
add
xor
adc
add
mov
fstl
xchg
pushf
inc
sahf
mov
and
add
sahf
push
xor
and
add
add
add
cld
imul
dec
test
add
mov
sub
add
adc
ss
movsb
add
cwtl
lcall
jle
add
adc
aaa
add
rol
pop
inc
adc
dec
push
add
loope
inc
push
aas
inc
mov
jne
fcmovbe
gs
add
xor
mov
insl
frstpm(287
lret
adc
xor
repz
ja
jg
divb
out
repnz
stos
aas
dec
movsb
add
push
fcmovnb
add
retw
hlt
pop
cmpsb
add
sbb
cmp
adc
pop
mov
neg
outsl
mov
add
or
push
imul
mov
mov
scas
add
mov
movzwl
add
push
sbbl
testl
fld
or
add
inc
mov
sbb
jns
fld
in
jae
xor
fstl
add
or
inc
nop
xchg
jmp
add
cmp
add
leave
mov
sarl
addb
ret
arpl
movsl
or
add
dec
mov
cmpsb
add
shrb
add
ja
insl
stos
add
test
add
pop
mov
in
pop
push
push
jmp
out
sbb
out
int3
and
add
sbb
mov
mov
add
jbe
lret
cmp
add
fistps
and
mov
add
pop
cmp
add
ljmp
add
scas
lahf
jmp
in
jae
fnstcw
je
add
mov
add
arpl
sbb
add
aas
sub
add
and
jae
fsqrt
push
loopne
adc
fdivr
mov
ja
jp
add
jo
inc
dec
add
add
mov
lret
rolb
xchg
add
inc
xor
and
add
into
push
int3
fsubrl
lcall
add
aaa
fidivrl
pusha
scas
add
mov
push
jmp
add
inc
push
fnstsw
clc
iret
mov
adc
add
sub
sahf
pop
xlat
cmp
nop
push
leave
pop
pop
aam
xchg
jg
jl
sub
popf
push
mov
les
add
mov
add
test
inc
fwait
inc
mov
jnp
mov
jp
ret
fistpl
dec
aam
punpckldq
pop
shl
and
test
jne
sub
call
lcall
add
mov
xchg
or
add
add
mov
add
cwtl
aad
dec
ss
addr16
in
add
int3
or
add
mov
daa
cmpsl
fiadds
add
lahf
push
add
inc
fwait
pop
mov
sahf
pusha
sbb
add
push
int
jg
add
sub
mov
mov
popf
mov
cmp
addb
sbb
ret
and
jmp
out
lahf
mov
inc
popa
dec
addb
sti
fmull
add
dec
jg
add
xchg
add
adc
add
sbb
imull
popa
sub
add
sbb
xchg
push
push
ret
add
call
addb
arpl
mov
ljmp
and
add
jo
and
int
add
std
dec
clc
fwait
mov
add
in
and
add
int3
imul
dec
pop
mov
xor
mov
and
add
xor
cmc
lahf
aam
pusha
xchg
lret
sbb
into
jns
bound
cld
rolb
or
add
aam
jae
add
jle
sbb
shrb
inc
cli
mov
add
lret
push
sub
add
mov
out
xor
add
add
add
adc
adc
ret
add
dec
data16
stc
movsl
mov
test
adc
add
adc
cmp
dec
daa
or
add
jl,pt
xor
sbb
mov
sarb
add
add
add
xchg
mov
gs
lea
add
pop
xchg
add
cmp
out
xor
std
adc
jne
add
fsubrl
in
in
adc
pop
addb
add
add
pop
mov
jae
in
shr
adc
addr16
lahf
mov
stos
in
fistpl
fdivrl
inc
add
movsl
aaa
mov
pop
in
sarl
push
push
addr16
dec
pop
xchg
mov
mov
add
std
xor
add
mov
add
and
int3
cltd
jp
sbb
fs
scas
mov
ja
mov
add
add
dec
out
fwait
adc
pop
mov
push
loop
arpl
test
add
ljmp
push
xchg
stc
inc
xchg
add
jnp
xor
jle
rcr
dec
lock
loope
add
xchg
or
dec
insl
stos
add
mov
stc
cli
fisubs
add
push
mov
xor
mov
dec
inc
mov
ficoms
lahf
inc
sub
pop
push
sub
add
mov
add
push
shll
add
jge
xchg
jle
pop
cmp
add
or
sub
add
pop
adc
jnp
loopne
xchg
lret
adc
jns
or
adc
add
adc
loope
add
and
add
popf
nop
xor
xchg
or
add
mov
outsb
out
adc
sbb
dec
out
and
add
fidivrl
mov
out
add
lods
add
and
add
xchg
add
pop
icebp
sti
std
mov
add
add
jl
push
faddp
ret
insb
push
add
ret
pop
add
add
enter
and
add
dec
mov
jmp
push
or
adc
jns
shl
insb
scas
add
mov
jno
movsb
add
adc
jg
popf
ret
sbb
pusha
loop
jmp
add
pop
jp
mov
add
in
in
pop
fsubrl
and
shlb
inc
mov
add
add
push
mov
jnp
mov
add
loope
add
mov
xchg
add
sbb
ficoml
sub
xor
repz
add
lods
pop
aas
lds
xor
xchg
push
insl
jge
les
add
xor
adc
add
int3
inc
jge
decl
rcr
pop
insb
sbbl
add
sahf
and
add
add
ret
rclb
add
inc
mov
pop
dec
xlat
repnz
add
shr
mov
add
add
mov
cmc
jno
mov
push
add
add
add
jne
enter
addr16
mov
lods
add
xchg
add
add
pop
roll
stos
pop
mov
lock
xlat
out
cmp
and
add
dec
dec
std
mov
das
inc
out
sbb
jge
leave
mov
cmpsb
add
lcall
cmpsl
push
loopne
in
mov
add
ds
pop
lods
add
xorl
loope
fdivs
fldenv
add
mov
jmp
or
int
in
bound
scas
add
dec
xchg
add
xor
ljmp
add
jp
mov
loope
insl
sub
aad
mov
cmc
int3
mov
inc
fnstcw
stos
fisubrl
ja
mov
add
out
stos
mov
pop
mov
add
xchg
add
out
push
ljmp
cld
fsub
loopne
add
jnp
add
push
fs
add
add
loop
pop
sahf
jne
xor
mov
add
xchg
dec
and
enter
adc
or
cltd
fsubrp
test
add
pop
pop
mov
add
push
push
lods
sub
pop
out
in
dec
lds
add
fdivs
mov
mov
leave
push
mov
mov
mov
rcl
hlt
int
inc
jbe
dec
xchg
ss
xchg
add
fwait
jnp
add
xchg
loop
in
cmc
mov
add
les
push
mov
sbbl
add
das
xlat
daa
push
inc
sub
pop
addr16
jg
add
add
push
add
in
cwtl
adc
mov
add
add
call
out
aaa
or
and
add
push
add
mov
add
inc
fnsave
or
mov
shl
sbb
add
pop
pop
enter
xchg
mov
imul
leave
sub
add
push
sub
add
add
add
movsb
add
or
add
xor
stc
jnp
mov
cmpsl
add
add
cmc
mov
mov
add
mov
roll
shrb
jl
inc
sahf
mov
add
fildll
add
jmp
mov
int3
and
dec
xchg
sub
lea
loopne
add
dec
push
add
jle
fcoml
add
jmp
in
pop
xor
sbb
dec
scas
je
stc
xchg
fimull
push
add
repnz
add
pop
outsb
lret
add
xchg
fstpl
aaa
rorl
cmc
pop
cmpsb
add
imul
cmpsb
add
popf
jb
xchg
cwtl
and
xchg
cli
add
add
add
dec
add
add
fsts
jg
add
outsb
js
sti
fnstsw
add
cmp
mov
add
adc
jl
jo
mul
add
jns
add
icebp
add
add
shl
inc
jno
add
sbb
add
xchg
in
add
mov
add
jmp
nop
adc
mov
int
or
mov
add
xor
and
push
mov
add
pop
mov
pop
popa
inc
test
add
ret
xchg
in
inc
lahf
nop
push
ja
mov
push
jg
jae
jnp
repnz
xchg
cmp
adc
movsb
add
mov
and
xchg
sbb
dec
sbb
or
add
fldenv
sbb
add
jb
movsl
in
xlat
outsb
cmpsb
add
ftst
lock
add
add
xchg
shrl
sahf
imul
add
jecxz
add
pop
push
add
cld
xorl
ds
aam
add
lds
gs
in
fwait
xchg
add
add
mov
pop
into
shll
out
loop
lds
inc
add
jle
mov
mov
shrb
add
mov
addb
or
add
add
mov
insl
addb
adc
insl
and
sbb
cltd
rcrl
adc
pop
insb
faddp
sub
add
sub
add
jmp
movntps
dec
sub
mov
add
mov
insl
bound
ds
jno
pop
sbb
repz
dec
test
add
stos
add
mov
add
test
dec
lods
add
pushf
and
add
fnsave
add
les
pushf
add
add
dec
lods
fwait
sbb
imul
arpl
add
mov
add
outsl
cmp
ss
mov
pop
jmp
add
jb
outsb
xchg
pop
scas
enter
sub
and
popf
and
cmpsl
out
add
movsl
lods
add
adc
imul
dec
cmove
push
add
lcall
rcrl
fmuls
add
ret
pop
fisubs
addl
add
add
add
push
cmp
mov
inc
nop
push
js
inc
cmp
fcomi
imul
cmp
xchg
jmp
int
add
jnp
adc
add
shll
ret
xchg
sub
add
push
sub
mov
add
fmuls
add
pop
mov
add
xchg
push
cli
push
outsl
insb
popf
cltd
add
int
cmp
sbbl
push
pop
into
and
stc
add
add
jp
movsl
push
mov
test
add
or
mov
sub
add
jo
add
imul
testb
add
aas
mov
insl
fnstcw
movsl
mov
add
add
fcom
xchg
aas
sub
add
scas
add
add
add
xchg
xchg
add
call
add
aaa
inc
loope
fstl
cmp
pop
fistpl
mov
jmp
dec
dec
std
pop
pop
mov
cmpsl
mov
mov
dec
daa
out
out
out
inc
and
push
dec
sub
add
addb
and
add
sbb
adc
addb
frstor
add
mov
sub
add
cmc
jmp
push
adc
sbb
add
or
add
aas
test
sub
xchg
lods
sub
add
lahf
jae
fimuls
xorl
and
cmp
enter
add
and
dec
subl
rcrb
pushf
xlat
sbb
add
push
out
test
hlt
aas
mov
pop
mov
add
sub
add
popf
xchg
mov
fs
popf
addb
push
mov
in
sbb
mov
jno
add
adc
push
callw
inc
sub
add
lret
addb
mov
in
sub
add
pop
sub
add
push
add
mov
cli
jo
not
rol
dec
sub
add
das
mov
orl
test
mov
and
sub
inc
add
add
stos
add
idiv
xchg
popa
shll
add
js
test
add
add
cld
in
push
fwait
cli
test
mov
add
sbbl
add
xchg
push
inc
std
mov
inc
iret
inc
mov
js
addb
add
add
and
add
test
test
add
jmp
insl
test
xor
loop
fs
inc
or
add
je
add
mov
add
mov
dec
adc
daa
popf
jae
dec
aas
mov
add
add
arpl
push
or
fsub
sbb
push
pushf
aas
in
add
out
push
inc
adc
jle
je
shlb
lcall
pop
mov
add
adc
ja
shll
les
fdivrs
mov
mov
push
sub
add
dec
outsl
std
pop
sbb
int3
inc
mov
iret
pushf
lret
pop
cmc
jp
dec
addb
test
into
in
cmc
jmp
xchg
shll
addr16
push
xchg
pop
icebp
loop
add
insl
adc
cwtl
xor
add
dec
in
inc
test
add
adcl
add
cltd
in
daa
dec
adc
push
mov
dec
jmp
xchg
mov
add
xchg
jecxz
jae
mov
xchg
fcomps
xchg
dec
pushf
in
movsl
sahf
mov
dec
adc
add
add
sbb
scas
add
jno
push
aaa
je
das
push
sbb
test
add
xor
mov
add
int3
mov
fistpl
add
pop
mov
int3
jp
in
mov
add
ret
pop
fsubrp
scas
test
lock
insl
stc
or
add
je
mulb
dec
jle
add
jmp
bound
pop
scas
or
std
xchg
movsl
negl
shl
pop
mov
add
and
push
add
jno
adc
dec
outsl
inc
cwtl
push
xchg
add
lret
mov
inc
push
inc
or
add
or
add
test
add
pop
aaa
stc
lahf
out
mov
xchg
repnz
or
add
mov
mov
sbb
les
add
pop
gs
fdivrs
cmp
add
arpl
std
arpl
dec
call
push
mov
jmp
bound
mov
gs
out
ficomps
loope
hlt
insl
sub
leave
push
mov
aaa
cmp
or
add
inc
sti
and
add
inc
sbb
in
jmp
add
iret
std
jg
ljmp
cltd
idivl
pop
ljmp
and
push
sahf
jge
add
cmc
sub
add
aaa
cmp
push
add
aam
pop
add
add
push
inc
jecxz
add
sub
popf
lret
adc
cmpl
lret
daa
addb
add
in
add
lock
add
sub
mov
pop
and
add
pop
dec
popf
add
adc
add
sarl
repnz
test
add
add
sbb
mov
add
push
popa
or
lret
add
adc
clc
ja
mov
jnp
negl
inc
sbb
aam
push
add
add
add
shr
mov
pop
gs
cmpsb
add
add
ret
hlt
pop
shrl
add
outsb
imul
je
mov
stos
adc
mov
shlb
stos
adc
and
ja
jecxz
add
mov
push
add
sti
dec
cmp
jecxz
outsb
divl
sub
add
cmp
add
add
lea
dec
arpl
jle
je
and
adcl
add
fcoms
jl
add
lds
sub
add
xor
ds
std
cwtl
fsubl
jge
dec
shl
pop
or
add
push
rcll
add
setp
cmpsl
push
in
idivl
mov
add
pop
loopne
add
push
add
pop
add
adc
stc
test
add
add
fs
je
js
mov
jle
mov
add
or
add
data16
out
add
insl
inc
sub
add
sbb
dec
mov
fsubrs
add
add
outsb
sub
add
add
mov
add
mov
movsb
add
xor
rcr
pop
add
add
jns
add
dec
mov
loope
dec
shrl
jecxz
cmp
push
fsubl
mov
add
add
in
push
gs
loope
inc
addr16
sub
add
daa
pop
fistpll
ljmp
add
sbb
add
std
pop
roll
add
daa
xchg
push
int
andl
test
lret
mov
loope
push
fdiv
push
jge
mov
add
popf
popf
add
add
add
dec
jnp
add
inc
push
xchg
out
xchg
pop
int
cmp
pop
add
lds
add
xor
fbld
lock
dec
mov
mov
stc
mov
dec
or
add
leave
pop
rcrl
add
pop
sub
add
add
in
push
in
test
jbe
and
enter
add
hlt
sahf
lahf
mov
lods
inc
xor
cli
pop
inc
or
add
jnp
add
scas
add
mov
cmpsl
out
add
cmp
and
add
pop
cmp
inc
add
addr16
fists
xchg
out
add
mov
add
lds
add
push
jp
and
add
xchg
stc
outsl
addb
mov
ljmp
fisttpl
add
mov
adc
loop
or
mov
stc
inc
mov
cld
outsl
push
cmc
int
push
push
push
dec
jo
mov
sub
add
xor
mov
arpl
mov
add
add
add
add
decl
pop
ja
call
add
cmp
sub
imul
cmp
gs
add
sbb
add
xchg
das
xchg
dec
mov
fwait
bound
fstpt
jae
repz
add
dec
addb
adc
inc
cltd
fidivrs
cwtl
lea
pop
imul
add
testb
add
aam
xor
push
add
mov
mov
dec
dec
cmp
add
ss
inc
jl
inc
cmpsl
sbb
inc
dec
lahf
push
cmp
mov
add
jno
pop
out
cmp
or
add
pop
push
jae
add
test
add
xchg
fadd
or
add
adc
into
test
out
pop
xor
mov
in
int3
push
inc
les
mov
mov
jp
pop
jne
scas
add
add
icebp
test
add
mov
ja
test
add
mov
cwtl
insb
in
leave
rcrl
add
jns
jo
loopne
divb
ret
fdivl
and
push
sub
add
inc
out
sbb
or
add
loop
movsl
mov
xlat
ffreep
daa
adcl
data16
sti
clc
or
add
das
and
aam
push
pop
clc
xchg
add
sbb
add
movsb
add
add
dec
jb
cmp
mov
add
inc
xlat
stc
add
or
sub
add
dec
arpl
jecxz
sbb
push
dec
ret
imul
lods
outsl
inc
xor
adc
ret
pusha
mov
xor
sub
pop
cmc
fdivrs
jl
aas
mov
add
jp
mov
add
push
sahf
push
jo
xor
add
dec
xchg
aas
cmp
add
out
xchg
add
insl
fisubl
and
add
cmc
enter
push
dec
outsl
mov
fisubs
adc
add
aad
stc
les
fildl
add
pop
pop
test
rorb
jge
aas
enter
add
mov
cmp
inc
xor
sarb
pop
sub
add
add
stos
jp
fs
or
add
xchg
shlb
dec
mov
adc
push
and
pop
les
and
add
sbb
outsl
daa
adc
add
ret
cli
icebp
adc
push
add
in
das
sti
push
xchg
inc
testb
cltd
and
add
nop
stc
sub
add
mov
and
add
in
mov
add
jmp
add
or
add
enter
out
mov
add
cld
mov
add
fidivs
add
add
pop
pcmpgtw
jg
imul
xor
inc
sub
add
lcall
xchg
sti
call
negb
dec
std
fs
pushf
mov
loop
ret
adc
pop
les
add
mov
xchg
mov
nop
xchg
dec
cmp
add
imul
add
fnstsw
cmp
add
clc
mov
shll
roll
cmp
xor
add
lock
jne
sbb
rorl
in
add
push
mov
lods
fstpl
mov
add
add
and
add
ljmp
loopne
sbb
fsubr
scas
add
mov
inc
sbb
mov
cmp
pop
push
mov
add
test
addb
pop
jp
loopne
add
loope
aas
mov
pop
pop
pusha
jmp
add
pop
xor
jo
outsl
gs
cli
jmp
cld
in
fnstcw
jmp
mov
cli
mov
xchg
sbb
add
push
pop
dec
xlat
pop
lret
addb
fbstp
test
add
test
xchg
push
loopne
in
mov
lds
testl
inc
mov
push
jmp
pop
in
adc
xchg
jbe
add
adc
mov
cmpsb
add
je
push
mov
gs
and
push
fstl
ss
cmp
lds
adc
or
pop
ss
lcall
fistl
add
add
inc
xor
push
and
call
mov
jecxz
add
mov
cmpsl
xchg
lods
mov
add
adc
les
add
jge
push
pop
sahf
sbb
push
dec
in
jae
pop
cmp
xchg
in
nop
jle
mov
mov
add
shr
add
xor
fdivrs
dec
jne
stos
add
orl
dec
xchg
push
test
clc
cmp
sbb
add
out
and
add
popf
lods
xor
xchg
sbb
outsb
ja
pop
mov
add
jo
xor
jbe
cwtl
loope
add
add
add
pop
setle
mov
add
add
daa
push
jae
sub
add
add
xor
add
adc
cmc
sub
and
add
outsb
cmpsb
add
call
add
add
inc
sub
decl
xlat
das
outsl
adc
xor
fst
sub
add
hlt
movsb
add
jno
dec
add
popf
aas
lret
pop
popa
push
jecxz
jp
movsl
loopne
aam
push
add
jge
add
jbe
cmc
cmc
insl
mov
xchg
addr16
xchg
and
js
or
push
ss
inc
cmpl
cmc
sbb
jmp
sbb
inc
outsl
push
jo
add
pop
dec
test
add
pop
add
add
add
mov
add
jle
xchg
in
popa
cmp
or
mov
push
add
std
mov
xor
sub
out
xchg
sti
mov
push
push
cmp
and
add
sub
add
push
add
aam
add
aaa
fcomi
add
mov
push
or
mov
mull
ds
or
das
and
xor
pushf
popf
xor
push
xchg
add
or
mov
add
xchg
aas
in
lods
dec
adc
add
in
add
arpl
dec
push
or
loopne
jo
add
ret
lds
les
cmp
ja
add
sbb
adc
xor
push
add
pop
out
loopne
add
sub
mov
jbe
add
adcl
adc
scas
add
sub
add
pop
icebp
and
in
adc
pop
leave
xchg
sbb
ljmp
or
add
jno
add
sub
add
add
pop
mov
icebp
insb
inc
mov
fcoms
mov
add
xchg
push
mov
and
cmp
out
xchg
adc
out
das
ret
add
icebp
inc
and
add
daa
mov
push
add
sbb
add
push
jns
or
add
lret
mov
pop
pop
outsl
ja
mov
jnp
bound
cmp
and
add
add
inc
dec
push
pop
push
add
adc
out
loop
out
cmpsb
add
xchg
mov
ja
sub
fmul
mov
add
popa
paddb
push
mov
add
cltd
lahf
dec
xchg
shll
add
in
cltd
movsb
add
sbb
and
add
out
imul
cld
xchg
mov
pop
mov
add
sbb
xchg
jns
aam
cmp
adc
add
pop
mov
xor
add
add
and
lods
add
aam
aad
cmpsl
and
add
ss
imul
shrb
int
adc
shlb
inc
pop
roll
add
out
jns
add
jmp
add
push
jbe
add
mov
mov
xchg
add
xchg
push
add
jnp
je
push
outsb
pop
fcoml
mov
lret
nop
gs
jb
xor
jl
add
lods
add
mov
loope
add
add
xchg
dec
xchg
add
add
call
lahf
stc
inc
push
add
dec
jnp
rcrb
fistps
in
outsb
add
mov
add
rolb
jns
jl
frstor
add
ret
mov
stos
sub
jbe
mov
add
leave
mov
add
mov
mov
and
outsl
xlat
push
add
inc
jmp
add
int
pop
lods
add
mov
pop
and
adc
pop
add
lds
lcall
mov
adc
mov
pop
jge
cmp
test
add
add
dec
into
sub
adc
or
add
jnp
pop
daa
adc
add
in
xor
add
sub
add
add
shll
mov
add
sti
test
loopne
addr16
mov
push
push
sub
add
xchg
stos
cltd
in
gs
mov
or
add
repnz
cwtl
xchg
hlt
add
jecxz
sbb
in
fbstp
add
popl
ljmp
add
add
stc
jae
add
pcmpgtw
add
sbb
pop
cmp
js
push
add
lock
add
jge
mov
add
jp
add
mov
jge
push
push
add
aas
inc
sub
xchg
jae
cmp
mov
clc
loop
add
pop
stos
pop
push
aaa
push
leave
and
jo
scas
jg
fs
inc
aaa
mov
inc
popa
stc
pop
gs
mov
add
popf
loopne
cmp
pop
mov
add
cmpsl
sub
add
popf
inc
out
fwait
addb
and
add
ret
inc
sub
add
add
add
push
inc
jbe
je
daa
jmp
rolb
add
mov
add
xchg
inc
or
repnz
roll
add
notb
push
add
data16
daa
pop
mov
xor
xor
test
and
add
cmpsl
mov
add
movsb
add
push
sbb
jecxz
inc
aam
loop
sub
add
leave
mov
inc
aam
div
pop
ret
add
fstpl
add
or
add
add
in
add
call
push
add
fs
jmp
insl
cltd
jo
push
add
out
mov
aas
frstor
add
add
add
mov
adc
in
cltd
repz
push
clc
xor
push
loopne
cwtl
in
fildll
add
or
add
add
add
add
and
add
sbb
add
cvttps2pi
add
mov
ljmp
cmp
fistl
adcl
sbb
mov
in
shlb
mov
pop
pop
sbb
aad
push
fimull
add
test
add
arpl
xor
mov
jl
out
jne
js
daa
inc
enter
add
iret
lock
sub
fnclex
jle
add
imul
xor
add
push
pushf
rcrb
dec
in
mov
add
sub
add
mul
pop
in
test
add
mov
push
lret
sub
add
add
inc
mov
add
add
jno
xchg
aam
dec
pop
push
add
outsb
imul
adc
push
sti
in
inc
pop
iret
mov
add
cli
pop
popa
addb
lea
mov
add
add
add
pop
push
add
ljmp
in
mov
dec
cltd
out
dec
mov
int3
push
lea
pop
outsl
pop
push
loope
dec
loopne
mov
sbb
sarl
addb
neg
movsl
adc
scas
add
xchg
fdiv
cmp
into
xchg
pop
movsb
add
sbb
clc
jnp
in
cltd
jle
pop
imul
cmc
xor
add
clc
cmp
mov
pop
lahf
cwtl
cmp
and
xor
mov
mov
lods
pop
loopne
bound
shrb
push
pop
jno
jns
lea
icebp
pop
jmp
jne
fwait
jb
add
ret
test
add
add
negb
and
add
je
add
xchg
mov
add
inc
inc
mov
add
add
add
mov
fldt
add
add
add
add
js
js
imul
lahf
xor
aas
add
mov
add
cwtl
popa
push
sbb
pusha
addb
sbb
loop
ror
add
add
sbb
jl
inc
mov
stc
dec
sbb
add
jb
popa
adc
xor
or
add
rclb
int3
mov
aaa
mov
pop
pop
cmp
jmp
icebp
into
jg
pop
dec
sub
add
mov
lahf
out
mov
add
test
add
out
data16
xchg
or
add
add
and
or
add
pop
pop
roll
subl
ljmp
add
add
scas
popf
arpl
ficomps
sub
add
jae
add
jbe
mov
pop
jo
or
push
sti
fmull
mov
cmp
and
add
dec
cwtl
and
test
add
lods
add
sub
mov
add
popf
lods
mov
std
adc
add
and
add
cmp
xor
sbb
dec
loope
aas
or
imul
xchg
mov
stc
leave
dec
stos
add
sub
add
push
sahf
enter
push
data16
add
outsb
add
add
stos
add
or
add
lcall
add
lret
pop
pop
aas
xor
add
cmp
add
inc
call
adc
dec
shlb
add
test
add
shll
out
lods
add
mov
add
mov
jecxz
jb
imul
add
ficoml
lds
lret
add
add
popa
and
rol
lock
adc
mov
add
push
add
or
stc
lret
mov
add
mov
mov
add
adc
xor
pop
adc
mov
add
dec
jge
dec
xchg
add
xchg
xor
or
add
cmp
add
lds
pop
clc
rep
bound
paddd
lcall
add
das
movsb
add
mov
add
leave
test
sub
jl
xchg
fildl
idivb
mov
add
dec
aas
roll
lret
mov
add
add
in
mov
ret
dec
xchg
add
add
add
lock
inc
pop
pop
imul
adc
add
adc
add
jge
add
dec
fmull
mov
aad
jg
sub
in
movsl
lds
lret
out
sub
add
xchg
xor
xor
into
call
aam
pop
clc
mov
bound
mov
xchg
inc
xchg
fs
imul
add
mov
add
push
cmpsl
out
add
jge
dec
add
add
mov
mov
pop
lods
and
xor
or
pop
pop
clc
and
add
xor
add
add
add
imul
add
or
lds
movsb
add
cmp
xor
mov
sahf
repz
stos
into
shlb
add
add
mov
add
mov
int3
push
push
add
mov
lahf
insb
pusha
lock
daa
mov
pop
outsb
cmp
dec
or
out
cmp
add
clc
rcll
inc
in
push
add
sbb
inc
sub
add
or
add
sub
add
daa
mov
or
add
std
mull
addl
dec
mov
add
cmp
jae
xchg
xor
les
jg
jmp
aas
dec
outsl
out
mov
add
mov
pop
mov
pop
or
add
add
sub
pop
bound
pop
add
cld
jmp
bound
mov
popf
addr16
sub
mov
xlat
xchg
add
repz
aam
addb
outsb
sahf
movsl
cmp
lcall
add
bnd
lods
mov
inc
fisttpll
add
repz
or
xchg
lock
lds
inc
repz
out
icebp
aad
insb
and
add
pop
and
mov
rcr
fcoms
testl
orl
pop
mov
sbb
jl
xchg
pop
rol
sbb
inc
cmp
fdivl
add
mov
scas
sbb
stos
mov
add
sbb
jne
sub
add
pop
loop
mov
xchg
jge
add
jl
les
add
fs
stos
sti
stos
add
imul
popa
repz
and
add
sub
in
pop
gs
add
pushf
aas
mov
test
enter
test
sbb
and
add
inc
addr16
stc
mov
mov
adc
ja
and
add
aas
sbb
mov
add
gs
mov
xchg
add
sub
out
mov
xchg
ds
add
popf
lret
stos
add
pop
jl
mov
add
out
mov
fcomps
add
sahf
jle
sbb
cmp
cwtl
add
jne
les
xor
push
sbb
xchg
sub
fwait
pop
or
add
mov
add
aas
push
push
pop
cli
pop
cmc
mov
and
cmpl
insb
andl
add
lret
xor
movsl
dec
les
add
prefetchw
add
add
and
push
pop
jg
xchg
sbb
adc
test
mov
xchg
add
call
cmp
ror
repnz
add
jno
lods
add
add
add
add
jb
repz
aaa
pop
mov
jp
in
jno
push
mov
add
dec
mov
dec
lret
inc
test
add
push
push
add
scas
popa
lcall
or
add
lret
jno
cltd
mov
inc
fisubrl
add
mov
add
pop
das
sbb
cmp
add
clc
cmpl
xchg
jge
add
mov
add
adc
xor
aam
mov
add
sub
fildl
cmc
push
add
pusha
cli
push
jne
ret
inc
add
add
push
inc
clc
jl
pop
push
add
cmp
sbb
mov
add
and
insl
insb
add
add
push
or
add
sub
fnstsw
cmpsl
dec
xor
hlt
mov
mov
mov
lods
add
rcrb
xchg
aad
repz
add
adc
add
dec
mov
add
in
fs
add
xchg
add
cmp
jle
pop
insl
fisttpll
add
mov
add
stos
adc
in
add
repz
push
mov
add
into
icebp
mov
add
dec
cmp
lret
lock
add
mov
std
inc
mov
mov
aad
add
push
adc
xchg
jo
dec
aas
xchg
and
mov
add
pop
shl
aas
push
neg
push
int
outsl
mov
and
add
pop
int
xchg
orl
add
add
jne
lcall
jns
add
fnstcw
cwtl
pusha
stc
jae
add
xchg
ja
hlt
aam
lds
push
inc
sti
fisubrs
mov
add
in
movzwl
in
adc
adc
adc
std
scas
loope
ds
sahf
movsb
add
pushf
push
add
negl
push
cmpsb
add
lods
and
movsb
add
leave
push
mov
das
sub
add
ja
iret
les
adc
mov
fistl
xor
sub
add
iret
out
add
mov
add
dec
fdivp
mov
mov
loop
mov
jns
xchg
add
rcrb
clc
lret
call
add
shr
dec
pop
repnz
addl
repz
sub
cli
imul
add
cmpsb
add
insl
lds
add
mov
xor
mov
adc
pushf
lcall
add
sub
add
and
add
add
add
add
incb
xor
pushf
xor
add
fsubr
aaa
movsb
add
mov
jge
notl
add
lea
jecxz
stos
add
out
adc
stc
cmp
push
mov
add
add
mov
add
ss
mov
xor
addb
mov
test
add
add
jb
sahf
pop
mov
add
push
add
ficomps
sbb
add
add
xchg
inc
cmp
xchg
fwait
xchg
dec
mov
mov
popa
inc
das
sub
add
das
imul
sbb
inc
or
add
insl
outsb
frstor
sub
add
popa
lds
add
lahf
mov
add
stc
push
push
lock
sbb
mov
lea
mov
sbb
popf
stc
cmpl
fs
inc
lret
fidivs
outsl
dec
mov
cli
mov
jnp
fmul
pop
das
inc
or
mov
daa
jmp
push
add
inc
fs
push
sbb
pushf
xchg
iret
or
add
pusha
je
and
add
fs
daa
mov
add
mov
jg
add
add
out
addb
sub
add
or
add
push
movsb
add
sub
add
jno
add
and
push
jns
cmp
cli
jne
add
jno
jbe
mov
jae
outsl
mov
and
add
mov
add
negl
pop
add
add
and
add
adc
nop
jge
add
xchg
scas
add
or
aas
int
xchg
add
xor
add
lods
ja
clc
lret
add
fsincos
mov
add
inc
mov
andl
rcr
pop
inc
lcall
push
aas
loope
and
pop
push
add
sbb
pop
dec
jecxz
push
fcoml
cld
cli
push
lods
add
mov
add
aad
add
int
jb
sbb
inc
sarb
fs
enter
push
sub
sub
fsubs
fsubr
xor
mov
fsts
push
push
in
mov
fs
pusha
and
add
add
lahf
push
add
add
dec
sbb
popf
mov
add
dec
addr16
add
addb
mov
sbb
sub
add
add
incl
scas
add
sbb
mov
and
add
or
add
add
cmp
in
je
pop
std
aad
pop
repnz
icebp
lods
cmp
nop
sbb
cmp
call
lock
add
xchg
or
add
add
fldl
xorw
imul
or
xchg
int3
pop
out
imul
jne
ljmp
adc
out
fsub
mov
loope
push
push
cmc
out
fstpl
enter
mov
add
sub
imul
lret
add
push
ja
add
jecxz
jbe
xor
lret
nop
cmp
movsb
add
add
add
mov
add
add
push
add
hlt
jb
cmp
xor
and
push
xor
add
lcall
mov
add
push
jno
dec
in
sub
add
add
enter
add
push
add
adc
or
add
sbb
push
pop
add
push
pop
test
inc
rclb
xchg
daa
mov
or
add
push
or
add
cmp
cmp
dec
dec
jno
push
mov
add
sub
add
popa
pop
mov
sbb
inc
inc
cmp
adc
push
ss
ds
test
test
adc
mov
and
add
pop
xchg
jno
mov
jb
mov
pop
jp
aam
mov
add
add
neg
shll
daa
adc
js
in
sub
add
push
imul
add
leave
les
add
iret
add
sti
stos
add
mov
push
jmp
mov
add
add
icebp
pop
sbb
jl
test
jnp
xchg
loope
push
add
hlt
cmpsl
mov
loope
add
test
cmp
add
in
push
pop
push
cmp
cmp
test
mov
js
inc
arpl
add
xchg
xor
pop
repnz
leave
cld
into
int
jne
inc
in
or
add
mov
xor
add
jl
pop
arpl
mov
add
adc
out
out
cmp
jg
push
add
daa
push
jge
add
notb
das
push
inc
lahf
pop
out
jns
add
stos
add
inc
adc
mov
pop
push
mov
add
movsl
enter
jns
out
sbb
push
or
xchg
add
negb
arpl
add
mov
inc
loop
mov
jecxz
ret
add
sbb
ret
sub
add
mov
add
or
sub
cmp
je
pop
xchg
lea
push
fstp
xlat
pop
mov
call
add
dec
mov
out
xchg
out
jne
mov
add
add
adc
xor
stc
mov
mov
add
add
mov
add
add
mov
mov
add
mov
add
enter
shl
jp
and
add
leave
int3
sti
dec
leave
jb
sbb
popf
jno
xlat
pop
call
adc
mov
pop
jnp
outsb
inc
ljmp
inc
loope
imul
add
and
add
cltd
in
int
and
add
and
add
in
push
pop
xor
mov
in
ljmp
shrb
add
icebp
test
add
jp
add
add
mov
add
clc
int3
add
add
ret
pop
imul
sbb
pop
sub
add
ror
outsb
mov
add
add
add
add
mov
js
out
inc
nop
xchg
jl
test
add
mov
mov
xor
aas
lods
and
add
add
xchg
add
fdivrs
add
jne
add
sarb
push
rclb
and
in
lock
dec
repz
sub
fisttpl
add
fidivl
pop
fwait
pop
fsub
and
mov
mov
pop
pop
sbb
ja
add
test
mov
add
lds
in
out
fisttpl
add
inc
pop
fscale
mov
add
pop
push
shlb
mov
mov
xchg
push
repz
jle
loopne
lods
inc
and
add
add
dec
lcall
pop
stos
call
add
add
add
cmp
lock
das
pop
sbb
jge
ja
outsb
xchg
cmp
sti
or
add
or
mov
test
add
dec
int3
mov
lret
or
add
add
ja
mov
int3
mov
popf
das
mov
dec
push
mov
push
shl
mov
leave
sub
add
outsb
out
bound
loop
popf
leave
lds
add
add
add
push
addb
jmp
add
dec
pushf
test
add
inc
sbb
inc
test
push
movsb
add
aad
aam
add
and
popf
xor
add
lds
mov
cltd
in
iret
mov
push
lds
mov
jmp
popf
fildl
out
sub
add
aam
cwtl
dec
loope
or
xchg
mov
add
xchg
mov
add
or
inc
repnz
push
out
add
outsb
push
popa
out
scas
aas
jbe
sahf
nop
inc
out
jmp
add
or
jb
fistps
sbb
out
xlat
adc
mov
mov
push
push
das
pop
push
pop
fldt
incl
bound
add
add
orl
bound
cmp
and
adc
push
or
aam
lds
add
in
fists
loop
push
adc
fbld
add
in
aas
cmp
fcomp
out
ja
adc
add
jg
outsb
and
add
add
shr
sar
add
lret
cmc
adc
and
add
int3
add
ret
pop
mov
nop
sub
add
sub
add
lock
out
add
addb
jecxz
cmp
sub
sbb
fsubs
popa
negb
xor
and
or
js
testb
ret
add
lds
add
jb
roll
ret
mov
test
add
movsl
gs
rcll
add
out
movsb
add
xor
jae
lock
add
xchg
cmp
push
xchg
ret
pop
pusha
les
xchg
in
rorl
or
sub
add
mov
ja
push
test
pop
cmpl
or
add
std
add
data16
pop
cltd
idivb
fcmovu
or
add
mov
xchg
pop
arpl
add
fstp
sub
out
dec
sbb
lret
jnp
jns
sbb
rclb
mov
add
or
add
xor
add
repnz
outsl
daa
adc
call
mov
in
into
jo
jl
add
call
testb
or
sbb
enter
sub
addb
jmp
push
fisubs
add
movsb
add
xorps
add
push
or
add
sub
cmp
in
pop
pop
out
cld
sbb
cmp
push
insb
mov
mov
ss
add
sahf
push
cmp
add
aaa
xor
inc
cltd
cmpsl
inc
iret
and
add
lds
stc
dec
fistpll
xor
idiv
dec
push
add
sbb
callw
dec
rol
or
sbb
inc
lret
int3
mov
add
add
cmp
or
add
dec
add
sbb
jnp
push
not
add
movsb
add
cmp
add
ss
enter
test
add
sahf
mov
dec
and
mov
adc
add
lret
and
xlat
fscale
sbb
in
aam
sub
add
dec
mov
add
mov
push
pop
add
pop
addb
pushf
cmpsb
add
jp
add
push
add
mov
and
add
jmp
add
jp
sub
add
testb
add
dec
adc
and
add
add
mov
adc
add
add
add
imul
add
lret
in
inc
insl
outsl
jae
into
xor
add
cmpsl
neg
pop
jecxz
inc
sbb
or
mov
sub
and
add
stc
stc
fs
sub
inc
mov
add
add
add
jb
stos
add
xor
jno
add
inc
ljmp
push
pop
xor
push
add
popl
dec
pop
mov
cmp
in
add
xchg
dec
mov
mov
push
add
cli
xor
pop
sub
add
fdivl
mov
add
and
add
out
add
add
add
mov
and
add
fwait
outsb
jb
data16
mov
fiaddl
sub
add
insl
int3
sub
daa
inc
mov
rorl
aad
mov
add
iret
mov
sub
add
loopne
aaa
icebp
fcmovnbe
lcall
or
fisubs
inc
jae
or
xor
add
lds
adc
nop
push
add
bound
mov
push
imul
jl
mov
xchg
call
sub
add
cmc
sbb
push
popf
or
add
xlat
adc
icebp
and
add
rsqrtps
lods
sahf
lret
push
iret
insb
pushw
cmpsb
add
int
stc
mov
or
add
jae
add
add
mov
mov
mov
add
fldenv
add
xor
fcomp
nop
cmpsb
add
lock
sbb
imul
add
add
scas
jne
dec
test
add
lods
inc
rcrl
sub
add
jge
pop
imul
mov
mov
sahf
cmp
add
and
add
jp
lods
jnp
js
icebp
je
add
mov
les
test
lcall
add
addb
xchg
add
lea
add
adc
jmp
add
roll
add
in
ret
lret
pop
add
lahf
xchg
dec
cmp
or
add
jmp
dec
mov
push
mov
add
jno
int3
lcall
add
das
inc
mov
add
hlt
data16
ret
popa
push
insl
das
jb
adc
jb
cmc
add
loop
std
popa
inc
insb
push
mov
or
mov
imul
inc
push
subl
dec
loope
movsl
pop
f2xm1
loop
and
add
add
sahf
pusha
addb
or
add
out
in
jecxz
push
jl
mov
push
xchg
imull
add
int3
mov
test
add
mov
add
xlat
int3
mov
add
pop
mov
add
xchg
sbb
sbb
add
jae
incb
dec
xchg
nop
add
add
ss
aam
push
pop
loopne
shll
icebp
push
fs
sub
fs
fcomi
jle
sub
add
stc
rcrb
and
xchg
dec
fsubl
sbb
std
out
push
aam
pop
scas
add
push
dec
outsl
push
hlt
lods
add
sbb
idiv
shrl
add
add
scas
repz
xchg
jmp
xor
out
add
add
fwait
add
inc
xor
lret
fcoml
fdivs
clc
in
sbb
add
mov
popa
mov
fldcw
fsubrs
sbb
adc
sub
mov
in
leave
dec
sbb
pop
xor
sub
sbb
outsl
push
lds
lea
add
cld
sub
add
lea
dec
add
add
lret
lret
mov
popa
les
xchg
add
xor
clc
pop
sti
mov
call
imul
xchg
xchg
pop
jno
push
call
mov
add
and
push
sar
push
les
sub
add
jns
add
cltd
loopne
add
push
add
mov
sbb
jmp
mov
repz
outsl
sti
stc
rorb
mov
jb
add
or
cmpsb
add
mov
xchg
js
mov
cld
cmpsw
mov
cmp
jae
addb
std
into
or
add
pop
pop
incl
inc
fsubrl
popf
xor
adc
lcall
mov
add
das
shrb
fstp
sti
push
mov
clc
sbbl
movsb
add
cmp
lods
sbb
inc
rcrb
mov
push
loope
push
add
sbb
mov
push
mov
rolb
add
fst
and
mov
inc
mov
sahf
adc
sbb
or
repz
add
add
rcl
test
ret
out
xlat
and
add
dec
cmp
cmp
add
mov
mov
add
or
add
push
pop
add
add
add
fimuls
cmpsb
add
add
in
lret
ror
mov
adc
mov
pop
loopne
pop
iret
sbb
add
dec
paddusb
add
or
add
cmp
jp
std
loope
leave
and
add
add
jecxz
adc
arpl
cmp
addb
cli
adc
inc
mov
add
add
lock
dec
jno
wrmsr
out
add
cltd
fs
lahf
repz
dec
xchg
and
add
mov
add
add
insl
jp
aad
movsl
dec
push
or
lcall
hlt
xchg
add
add
jmp
add
data16
in
mov
add
jge
lods
add
loope
jb
pop
adc
add
cli
aaa
pop
imul
add
add
or
sbb
adc
roll
jns
push
lret
add
int3
fnstenv
sub
enter
mov
mov
add
and
add
ss
aad
add
inc
mov
xchg
add
cmp
ficoms
test
add
pushf
shlb
add
add
mov
mov
aad
jbe
mov
xchg
cmpl
dec
mov
add
imulb
add
mov
adc
je
or
add
adc
stos
add
cwtl
push
jg
rcrl
pop
ret
sub
fld
mov
add
call
mov
pop
cld
ja
pop
xchg
add
xor
xchg
cmpsb
add
dec
push
loope
push
insl
jb
push
jmp
adc
sbb
add
add
add
sub
loop
add
xor
cmc
adc
add
mov
pop
push
mov
add
mov
add
test
add
pusha
lock
xor
lods
cld
and
add
or
xchg
mov
lds
or
add
pop
addb
jnp
dec
and
add
add
repnz
popa
push
add
add
add
test
outsl
jecxz
popa
test
add
xchg
hlt
inc
xlat
stc
cli
xchg
fstpl
push
pusha
fldcw
or
cwtl
icebp
push
ffree
jl
popl
test
push
lahf
dec
push
push
std
push
fmull
mov
add
mul
mov
and
add
xchg
ret
cmpsl
jnp
jge
pop
cmp
popa
lds
rcrb
mov
mov
fcmove
push
dec
jne
mov
add
push
add
mov
mov
adc
sub
add
mov
add
and
add
xchg
inc
or
add
sarl
lret
nop
dec
inc
scas
jb
lds
adc
and
add
add
xchg
and
add
or
add
and
test
inc
push
or
fildl
add
add
insl
or
sti
sahf
inc
out
ret
loopne
sarl
add
sbb
adc
call
ja
out
dec
js
xlat
lock
lds
add
ss
jo
and
add
jmp
add
ljmp
and
addb
inc
rcrl
add
ret
push
add
rorl
push
add
pusha
in
xchg
add
hlt
das
aad
xor
sahf
scas
add
sar
push
fisubs
std
xchg
xchg
cmp
and
mov
jne
add
sbb
imul
jne
or
mov
fmuls
add
add
dec
test
add
lcall
push
cmp
inc
jns
adc
popf
pushf
lret
lds
in
call
mov
stos
pushf
pop
fs
and
sub
add
adc
push
cmp
aaa
popa
inc
sub
cmp
add
ficompl
and
add
in
call
add
inc
roll
cmp
sub
mov
cmp
fstpt
das
pop
nop
pop
mov
add
rcrl
int3
repnz
stos
stos
aaa
shrl
sbb
jns
jl
out
add
int3
test
orl
mov
test
add
fsubrl
jnp
sbb
add
lock
pop
ficoml
jns
add
add
int3
add
stc
js
popa
adc
jo
out
add
sub
xchg
mov
add
into
dec
xor
mov
cli
in
xchg
and
loop
cmpsl
xchg
test
and
add
aad
add
stc
pop
out
and
add
xor
xor
stos
push
movsb
add
lods
add
inc
jecxz
bound
shlb
shlb
add
add
xlat
or
cwtl
arpl
jecxz
add
out
dec
inc
scas
add
shll
jae
aad
or
dec
or
add
testb
lds
adc
add
push
cli
mov
rol
and
add
rorb
add
call
dec
lret
fsts
icebp
push
cmc
xchg
cld
insb
add
add
push
add
push
mov
push
cmp
add
dec
fistpl
addr16
xchg
dec
mov
daa
int
xchg
jno
call
push
in
les
inc
xor
lret
and
add
xor
fidivs
jge
das
nop
and
dec
in
xchg
inc
adc
rcll
iret
pop
lea
in
mov
addr16
cld
mov
xchg
xchg
push
mov
in
sti
mov
pop
fisttpl
add
ret
cltd
aas
push
pop
test
lea
lahf
out
lret
xchg
jb
call
sbb
cwtl
out
test
add
ret
push
add
aam
ret
adc
enter
sbb
add
pop
fnstsw
test
cli
xor
test
add
push
add
pop
test
test
add
push
sub
add
sub
je
roll
jle
add
idiv
imul
add
sub
add
add
add
add
popf
comiss
movsl
mov
ret
sbb
sbb
or
add
iret
lods
sti
clc
stc
xor
cli
sub
loope
into
and
add
ss
fucomi
sahf
mov
add
mov
dec
xchg
scas
add
dec
repnz
in
push
sub
pop
or
sbb
add
scas
push
adc
add
fmuls
add
add
fwait
xlat
mov
call
or
add
push
inc
addb
jmp
lcall
mov
add
lret
fs
push
and
add
out
add
stos
add
xchg
add
jne
loope
sub
add
add
add
in
fdivr
addb
jmp
and
jns
negl
repnz
leave
dec
fcomp
outsb
mov
add
add
push
and
fsts
clc
lahf
out
add
add
std
jno
add
lods
add
or
add
bound
cmp
push
pop
dec
sbb
fcoms
add
add
ss
jge
push
inc
pop
mov
add
jg
or
mov
movsb
add
xchg
data16
int3
and
add
enter
lret
add
push
add
rorl
aaa
pop
push
add
add
scas
add
xchg
pop
lret
add
mov
cmc
imul
test
add
push
rclb
dec
jb
cwtl
mov
inc
inc
cmp
pop
mov
out
scas
or
add
dec
mov
add
add
cmpsl
mov
mov
add
sub
add
movsl
mov
push
sub
dec
sub
add
mov
add
repz
lods
leave
xchg
jmp
add
add
call
jmp
push
jmp
add
push
add
mov
inc
push
sub
add
repz
add
jne
mov
jp
xorl
jge
subl
mov
and
aas
fcmovnb
icebp
push
int3
xor
popf
add
jno
add
adc
pop
adc
add
rcll
fistpll
add
cld
out
mov
fcoml
add
out
mov
add
add
push
sub
inc
add
add
jb
dec
cmp
push
jp
rcl
jp
addb
ljmp
jne
mov
outsl
cli
movsl
test
add
add
mov
imul
sbb
fcoml
lcall
cmp
add
xor
add
push
flds
add
mov
ja
push
les
mov
add
add
mov
add
sbb
xchg
add
mov
xor
xlat
and
or
add
jg
adc
xchg
enter
inc
pop
daa
sarb
or
cmpsl
sub
inc
adc
testb
shrb
add
fs
out
mov
add
lock
jle
frstor
imul
add
mov
repz
sbb
push
loop
sbb
cmp
sub
add
mov
add
inc
add
add
ret
repz
popf
mov
stos
add
test
add
mov
jae
cmc
imul
dec
dec
push
inc
inc
sti
mov
add
pop
mov
push
call
mov
add
imul
jnp
pop
gs
add
in
in
add
std
decb
js
icebp
je
fstpl
push
sub
pop
data16
outsl
cmp
jnp
inc
mov
add
pop
inc
dec
repz
inc
mov
jbe
add
nop
pop
push
mov
add
mov
add
jbe
sub
das
subl
add
mov
dec
aam
shll
out
jp
sarb
or
add
sbb
into
inc
push
sbb
in
sub
lahf
mov
add
push
aad
lock
add
jnp
add
add
ficomps
data16
sbb
fdivrl
push
add
lret
or
add
adc
push
add
inc
psrlq
pop
cmp
in
inc
sbb
pop
test
into
aas
xor
inc
cwtl
ret
mov
sub
add
add
aam
add
add
and
add
jnp
mov
cld
lds
add
sbb
int
mov
xor
add
fidivs
mov
pusha
js
sbb
add
inc
jg
fists
jle
jecxz
sarl
into
mov
pushf
std
lret
add
stos
add
mov
pop
mov
add
icebp
adc
add
mov
pop
pop
ss
test
add
lock
push
add
data16
mov
dec
les
shll
mov
add
sbb
das
pop
mov
addr16
cmp
into
ror
fcmovu
dec
test
xchg
add
push
add
lahf
and
add
xor
stos
mov
add
jge
mov
add
add
add
pop
in
xchg
in
daa
cmpsb
add
xor
or
adc
sub
fdivrl
add
xchg
loope
int3
sub
add
sahf
or
add
adcl
ret
sarb
hlt
sbb
cmp
pop
scas
add
and
add
and
out
daa
repnz
fists
push
add
add
pop
mov
add
push
hlt
daa
loopne
aam
aam
mov
mov
mov
add
pop
add
add
movsb
add
sbb
mov
out
dec
sub
and
sub
add
pop
bound
xchg
je
xor
iret
outsb
loope
pop
aad
add
imul
bound
sbb
popf
mov
or
add
sub
add
mov
add
jae
hlt
mov
mov
add
and
add
arpl
add
int3
nop
test
dec
fisttps
add
dec
ret
add
addl
inc
add
lds
rorb
jns
mov
add
push
and
jbe
shr
add
add
mov
add
dec
imul
add
out
sub
add
clc
add
pop
xlat
jl
scas
add
icebp
in
clc
mov
addb
jge
je
hlt
movsl
adc
mov
add
mov
test
add
into
inc
push
add
mov
aas
sbb
lahf
jg
loop
stos
add
popa
jle
dec
mov
push
arpl
add
jp
fcomps
add
bound
repz
pop
mov
orl
dec
dec
pop
mov
call
out
dec
pop
je
push
lahf
sub
in
test
add
add
mov
addr16
out
in
lcallw
lret
sbb
inc
xchg
inc
leave
dec
popf
or
add
addb
pop
out
gs
lods
mov
xlat
mov
add
push
mov
pop
fistps
hlt
pop
lods
push
jns
pop
cmpsb
add
in
dec
cwtl
xchg
add
sub
jne
aaa
pushf
jge
pop
push
xchg
or
add
je
sbbl
sub
add
mov
adc
inc
jmp
jb
pop
lock
dec
pop
cmp
not
ljmp
imul
add
mov
sub
add
fidivrs
ficoms
test
add
mov
fxch
stos
sub
cmp
pop
shlb
jae
repz
add
and
add
mov
add
jmp
xor
sbb
mov
add
add
jae
push
sub
add
and
add
add
cmp
inc
cli
dec
xchg
add
and
add
or
jo
sbb
in
mov
aam
sar
xchg
shll
rcrl
mov
add
stos
add
lea
add
sub
adc
popa
lds
pop
dec
and
add
add
jbe
in
nop
pop
orl
xor
push
and
add
add
iret
add
mov
mov
dec
sbb
dec
adc
add
add
dec
int
data16
scas
add
addb
out
jo
pop
in
jno
test
add
add
pop
mov
sub
add
gs
add
jp
mov
sar
sahf
mov
pop
add
mov
mov
leave
or
add
add
cmp
ret
cmc
push
js
push
dec
popf
jmp
idiv
lahf
insl
movsl
pop
lds
pop
push
addr16
add
shrb
xchg
lcall
mov
or
cmp
data16
addb
mov
out
jns
mov
mov
enter
inc
sub
movsb
add
mov
add
fs
pop
idivb
fimuls
xchg
add
in
repz
jg
xchg
lock
inc
adc
call
sbb
mov
or
int
cmc
int
aad
jmp
std
jle
inc
sbbl
add
inc
cmp
cmp
jge
mov
mov
xlat
fldcw
pop
and
leave
adc
add
cmp
add
insb
sbb
add
movsb
add
cmpsb
add
cmp
push
lods
mov
add
aad
pop
outsb
xor
add
dec
xlat
push
add
pop
jmp
add
outsl
addr16
test
adc
test
add
mov
add
jl
pop
lods
leave
cli
das
xor
out
cmp
dec
add
add
notb
dec
push
sub
add
mov
add
jp
and
add
add
sub
rclb
out
add
arpl
and
add
cmpsl
call
add
negl
das
inc
cmp
sub
add
and
stc
jmp
fcomip
or
mov
add
inc
dec
adc
fld
cmp
inc
pop
pop
adc
add
cmp
dec
inc
sub
add
dec
arpl
test
add
movaps
add
inc
push
add
cli
cmpsl
sub
add
test
add
addb
scas
add
aam
in
xchg
inc
shlb
pop
cmc
or
add
add
add
subl
add
add
add
add
add
js
inc
outsl
fimull
xlat
mov
sar
cmp
std
loopne
mov
and
add
add
pop
xor
inc
aad
sbb
ljmp
dec
adcl
ret
scas
jle
scas
add
dec
stos
sbb
sub
mov
mov
cmc
frstor
scas
mov
shl
sbb
ljmp
rorl
inc
dec
stc
pop
mov
sbb
jb
repz
add
add
add
outsl
push
clc
shrb
add
mov
test
add
in
ss
into
inc
sbb
xor
jge
not
ss
fmuls
mov
dec
sbb
inc
jmp
add
add
movsb
add
dec
lea
add
add
cltd
lea
dec
jnp
mov
xor
jecxz
or
add
mov
add
in
popa
jae
sahf
cmc
pop
rorl
lret
imull
add
or
add
dec
movsl
pop
ljmpw
repz
or
add
add
sub
out
aas
into
fstps
dec
sbb
add
xchg
fs
add
mov
cmp
sbb
lahf
loop
add
xor
ffreep
icebp
int
push
cmp
add
sarl
in
cmp
or
lret
add
test
mov
jge
add
add
cli
push
jno
xlat
dec
pop
aas
mov
test
xchg
cmp
add
add
mov
stc
ficomps
mov
add
and
add
mov
lods
fs
cmpl
lods
push
addr16
mov
add
stos
repnz
add
add
cwtl
inc
pop
aad
aas
add
add
bound
shll
mov
dec
in
lock
cwtl
cmp
mov
add
add
or
add
stos
xchg
mov
and
add
add
pop
rclb
ds
and
add
dec
icebp
aas
dec
mov
addb
mov
inc
addb
iret
sub
add
and
add
inc
or
add
push
add
outsl
pushf
in
jecxz
testl
add
adc
enter
adcl
cmpsb
add
mov
xor
adc
mov
add
add
xor
lods
shll
jge
add
push
xchg
xchg
jb
cmc
dec
mov
add
add
inc
lods
jg
and
add
paddsw
cmp
fsubrp
jle
adc
mov
add
mov
shlb
inc
popa
outsl
add
divb
add
mov
push
insl
mov
or
add
cmpsb
add
test
add
add
add
shrl
add
cwtl
xchg
jnp
and
lret
mov
sti
lahf
push
cmp
js
inc
daa
inc
shl
shll
je
mov
add
pushf
mov
dec
lock
out
in
dec
sub
add
fimuls
add
push
loopne
add
cld
push
fucomi
jns
sub
add
cwtl
dec
push
add
sti
pavgb
lret
fisttpll
testb
add
aas
in
movsl
cmp
ret
ja
fstpt
in
scas
add
pushf
push
and
add
rcll
xchg
add
xlat
mov
add
out
sbb
pop
pop
or
add
mov
add
lock
add
dec
dec
leave
insb
ljmp
add
add
jmp
add
add
xor
fsubs
repnz
in
and
add
dec
ret
jnp
pop
lea
inc
dec
or
cmc
mov
push
mov
add
adc
fstpl
mov
add
lcall
xchg
xchg
fisttpll
add
nop
iret
push
add
sti
xor
mov
sbb
or
add
add
shlb
add
or
mov
add
pop
jl
insl
or
in
sub
sbb
add
aad
mov
add
or
loopne
or
add
cmp
enter
lods
mov
add
dec
xchg
inc
bound
imul
xor
ret
icebp
xorl
sbb
jae
lods
jns
add
enter
stc
xlat
pop
push
test
add
popf
dec
cmc
add
ret
fdivrp
mov
shr
outsb
mov
sub
add
push
mov
add
in
jo
stos
add
mov
add
jns
loope
jb
inc
lret
add
popa
or
mov
mov
enter
add
leave
push
arpl
fisttpll
pop
xchg
sub
add
adc
insl
rcrb
xor
add
add
stos
loopne
insl
adc
add
test
add
inc
cli
into
jmp
mov
add
add
cmp
push
push
lods
repnz
cmc
push
cli
shlb
cwtl
cmc
adc
push
add
insl
das
mov
jp
sbbl
cwtl
sbb
xchg
add
push
jno
mov
lea
add
jns
dec
iret
lret
push
mov
mov
jl
jne
add
pop
mov
inc
or
add
add
add
sub
adc
cmp
jnp
jp
mov
cmp
push
or
xchg
xor
in
jae
outsl
mov
add
out
mov
push
ja
movsl
lret
mov
insl
mov
test
add
in
and
add
add
dec
daa
mov
push
clc
lahf
inc
sub
add
add
dec
in
add
and
add
add
push
push
add
das
in
mov
add
lea
add
mov
add
add
in
push
and
dec
addr16
ret
add
jnp
xor
sub
add
and
add
pop
je
iret
test
add
pop
sbb
hlt
lret
add
xchg
adc
add
mov
ja
jl
mov
sbb
test
add
mov
push
inc
add
add
unpcklps
add
cli
in
jns
add
cld
mov
add
pop
and
add
icebp
mov
inc
lock
sahf
add
addb
jne
add
cld
and
or
add
add
mov
enter
push
scas
in
dec
mov
add
push
add
mov
lcall
inc
ret
xchg
sub
xchg
scas
add
push
fs
cmpsb
add
pushf
lret
sbb
ficompl
test
test
add
add
mov
mov
add
call
sbb
add
push
sub
add
pop
xchg
lcall
dec
xor
jp
ljmp
insl
adc
mov
lret
les
stos
mov
sbb
jmp
das
scas
add
push
addr16
dec
mov
movsl
shll
add
int
loope
fiaddl
dec
adc
dec
out
mov
cmp
addb
sub
xlat
sahf
xor
pop
push
or
add
scas
adc
push
add
mov
add
add
or
jmp
mov
add
mov
add
fsts
and
add
mov
outsb
sti
xchg
xchg
xchg
mov
add
add
mov
add
xchg
inc
dec
jmp
ret
in
fwait
push
ja
jmp
cmc
in
test
add
add
sub
adc
ret
add
push
mov
push
add
push
sub
add
push
jl
add
jp
push
arpl
scas
add
sub
add
mov
xchg
test
repnz
add
lret
outsl
or
add
lret
add
sahf
jg
inc
jle
js
add
mov
dec
insl
and
jge
nop
mov
add
cld
mov
add
cmp
jle
mov
das
pop
mov
js
nop
stos
add
test
stos
jp
jp
mov
shll
movb
add
int
aam
cmp
cmp
xor
mov
gs
add
mov
add
jb
imul
sbb
jns
rcr
jl
test
add
add
mov
add
addb
call
mov
add
mov
mov
in
add
cmpsb
add
sbb
add
add
or
adc
mov
add
add
cmc
into
repz
push
jp
push
ja
clc
jns
stos
or
add
inc
addb
mov
loop
stos
add
sbb
mov
add
xchg
or
add
fwait
mov
mov
jp
cmovno
add
dec
ds
add
mov
jb
push
insl
aaa
sbb
xor
push
aaa
push
popf
add
daa
mov
add
xchg
sub
fdivrs
mov
push
mov
popa
xchg
jne
divb
cmpsb
add
idivl
or
add
call
inc
in
jg
xor
decl
and
add
je
xchg
outsb
fsub
pop
xchg
int3
faddl
cmp
add
add
out
rcl
add
mov
sahf
sub
fs
ljmp
add
shlb
add
xchg
add
xchg
test
xor
cmp
add
addr16
or
pop
push
cwtl
test
add
in
inc
push
sub
add
xor
xor
add
iret
mov
shl
ljmp
add
xchg
cmpsl
int
aad
adc
aad
and
add
add
push
sbb
fdivp
mov
add
push
add
add
adc
data16
add
stos
or
add
insb
cmpsb
add
cmc
jo
pop
mov
pop
jge
inc
loope
mov
add
mov
add
lods
into
inc
int3
imul
stos
add
add
cmp
ja
add
loop
imul
int3
mov
dec
dec
aad
out
fcmovbe
and
jl
xchg
mov
add
pushw
popf
les
cmp
clc
inc
out
loope
push
repnz
jl
addb
ljmp
xchg
shll
add
iret
loop
or
add
mov
jno
test
add
sbb
std
int
out
arpl
xchg
pop
enterw
sti
shl
xchg
jg
lods
add
je
sub
movsl
loop
mov
push
adc
pop
stos
add
add
mulb
add
fsubrl
add
loop
lods
pop
insb
mov
inc
mov
add
or
add
xchg
aas
pop
pop
mov
jg
scas
add
push
shlb
cmp
sti
add
fwait
jmp
add
mov
clc
dec
sbb
lock
sbb
and
add
jg
push
push
add
xchg
pop
pop
add
push
pop
lods
sub
add
adc
and
add
mov
add
adc
add
add
or
add
add
and
inc
xchg
lcall
add
mov
adc
lea
jmp
and
add
add
xor
push
call
add
add
add
xchg
loope
mov
xchg
lods
pop
add
add
cmc
out
cmpsl
jl
dec
aas
xlat
and
pop
pushf
inc
sbb
add
icebp
das
push
push
add
adc
or
pop
sbb
xor
add
add
inc
inc
ss
add
cmp
dec
loope
gs
out
mov
mov
xchg
pop
dec
push
mov
cmpsb
add
mov
add
inc
ds
sub
sbb
cli
inc
mov
data16
add
fdivrs
add
add
fdiv
adc
pop
insl
pusha
repnz
pop
inc
incl
dec
popf
xor
lahf
sub
rcrl
ds
and
add
loopne
cmp
add
sub
add
dec
push
mov
add
nop
sub
add
and
add
add
sub
add
nopl
add
adc
rcll
cmp
repz
int3
and
sub
add
inc
mov
mov
addb
jb
ja
add
xor
jb
shrl
add
add
mov
jae
xchg
add
add
mov
repnz
or
add
aam
add
add
out
mov
ret
add
into
pop
dec
rclb
into
mov
sbb
lret
daa
jns
test
xchg
insl
inc
xchg
lcall
add
addb
dec
dec
jb
out
inc
pop
cld
xchg
cmp
sahf
sub
mov
and
jno
stc
mov
out
data16
cltd
mov
stos
scas
out
push
call
icebp
push
add
pusha
adc
bound
add
and
add
add
pop
or
add
inc
rcll
push
mov
sbb
imul
adcl
test
add
hlt
lahf
sarl
mov
add
ss
mov
add
adc
sub
add
add
add
mov
lret
addr16
mov
lock
push
cmpsl
push
add
int
aad
adc
xor
sub
add
iret
lds
add
fldenv
nop
call
add
xchg
cmpsl
mov
mov
add
insb
add
frstor
incl
mov
xchg
stos
int3
repz
sahf
inc
in
xchg
add
daa
jecxz
das
and
add
loopne
ret
rorb
add
jo
jecxz
loop
inc
jo
fdiv
jno
incl
test
add
sbb
mov
sbb
and
add
add
inc
cmp
repnz
gs
ja
adc
daa
inc
stos
pop
flds
arpl
sbb
dec
pusha
or
popf
iret
xchg
test
lods
popa
gs
add
mov
add
mov
add
push
jne
bswap
jle
xor
jp
daa
test
outsb
mov
mov
add
and
sarb
xchg
imulb
iret
divl
add
xchg
mov
sbb
in
test
sbb
loop
add
xlat
cli
and
add
mov
adcl
jno
loope
add
xlat
mov
add
add
add
add
ss
loopne
xchg
mov
aad
sti
cltd
bound
lea
addb
cmp
push
mov
add
add
sbb
pop
lcall
sub
add
add
xchg
pop
addl
add
add
aad
add
cmp
leave
sbb
nop
add
mov
pop
ret
push
bound
fisubrl
mov
or
add
dec
mov
fmull
push
mulb
add
aam
mov
xchg
jl
mov
add
xchg
mov
stos
push
add
cltd
mov
add
push
add
imul
add
add
sub
jle
mov
add
dec
mov
add
add
call
add
test
add
add
pop
jo
cmp
add
xchg
jge
xchg
nop
xchg
add
std
push
cmp
add
std
cmp
into
xchg
xor
pop
push
jno
add
adc
lock
mov
add
test
add
mov
sar
mul
mov
add
inc
shl
mov
sub
add
addb
je
sub
add
inc
lods
add
lods
addb
xlat
les
lret
push
or
add
sub
pusha
or
add
adc
jno
aam
push
jnp
push
insb
mov
shlb
pop
push
pop
pop
shl
aam
add
cmp
int3
push
jne
and
inc
repnz
add
push
sbb
outsb
in
mov
icebp
insb
jmp
arpl
add
pop
or
lcall
add
add
mov
in
scas
jl
xor
int3
test
jmp
stc
imul
mov
add
sarb
pop
jno
mov
add
mov
mov
add
adc
add
add
add
lcall
ret
push
mov
inc
jmp
das
or
add
nop
sldt
add
add
add
imul
fstpt
int3
or
add
lret
fnstcw
daa
push
mov
add
je
pop
push
push
add
push
icebp
sti
int
sub
fidivrl
out
adc
repnz
int
test
add
cmp
sahf
push
in
stc
fstpl
in
into
lds
lds
add
rclb
push
out
jle
mov
lret
mov
add
testb
add
xchg
das
enter
stos
add
cmp
jp
add
inc
outsb
shll
outsl
xchg
inc
cmpsb
add
leave
jb
int3
je
push
aam
ret
loopne
xor
sbb
pop
fsubrl
add
jo
mov
das
loope
out
add
cwtl
jge
fcmovbe
jp
dec
add
add
xchg
add
divb
dec
xor
add
mov
mov
stos
add
or
add
addb
or
out
pop
adc
xor
push
out
mov
psubsw
sbb
mov
mov
pop
inc
pop
dec
add
int
loopew
in
add
lret
push
or
add
pop
loope
lock
sub
add
adc
jbe
add
int
das
das
add
in
in
jmp
cmc
pop
sbb
xchg
add
pop
repnz
xor
aam
cmpsb
add
lret
pop
or
push
xor
add
ja
pop
xchg
xor
ja
inc
add
fsubr
sahf
fldt
xchg
movsl
jnp
add
mov
pop
mov
jne
add
mov
add
in
push
add
dec
popf
xor
cmp
outsb
push
aaa
jae
iret
pop
les
lret
and
xchg
sarl
push
add
stos
add
int
dec
jl
out
xchg
addb
lds
jge
pop
scas
add
enter
sahf
int3
inc
pop
out
adc
daa
xchg
loop
jp
xchg
jbe
jmp
add
lods
xchg
add
sbb
xchg
mov
scas
ds
lods
inc
jno
push
sub
out
xor
sbb
add
dec
mov
sub
inc
jg
lcall
gs
add
push
cmp
add
pop
in
mov
add
add
cmp
add
fisubrl
xor
xchg
mov
add
cmpl
add
js
subl
add
ret
add
add
hlt
push
fld
jns
aam
lret
add
add
and
add
dec
test
add
aas
subl
cmp
cltd
jmp
push
add
call
inc
xor
add
loop
mov
add
push
add
pop
dec
fwait
jg
xor
dec
sub
add
push
mov
push
lcall
mov
arpl
test
add
push
inc
das
dec
jl
adc
inc
push
adc
mov
push
add
dec
xchg
jmp
pop
fs
out
add
add
pop
inc
jge
mov
inc
mov
add
mov
xor
insb
mov
add
dec
adc
add
sub
das
dec
inc
jp
xor
shll
loop
leave
pop
rorl
add
add
inc
rol
jl
inc
std
jl
mov
sbb
addb
push
and
dec
aas
rclb
mov
movsb
add
and
add
fimull
add
inc
lea
add
out
in
add
push
cmc
jbe
adc
not
ljmp
mov
add
add
iret
or
sbb
adc
jb
push
sahf
push
xor
shrl
add
cmp
mov
testl
movsb
add
aaa
cmc
icebp
fwait
push
test
addr16
addb
mov
sub
add
addr16
aaa
sub
jl
or
mov
adc
int3
aas
cmc
xchg
nop
mov
xor
lods
jnp
add
test
push
pusha
pop
mov
sahf
xor
add
xlat
mov
addl
mov
lea
or
add
mov
je
stos
xor
inc
movsb
add
mov
pop
lods
add
mov
cmc
lea
push
sti
dec
adc
mov
add
mov
mov
add
scas
and
add
dec
sub
lock
loop
mov
aas
mov
add
cmpsl
and
pop
cmp
int3
mov
int
fildll
sbb
ja
add
lahf
std
shlb
cmp
jb
cmp
add
outsb
and
sub
add
add
std
insl
mov
int3
lods
add
jno
mov
cmpsl
hlt
rorb
add
push
sub
jae
mov
push
test
idivl
adc
stc
push
add
jbe
mov
daa
fisubrs
les
pusha
outsb
mov
test
addb
lret
mov
call
repnz
fbstp
dec
rorl
std
mov
lret
add
add
cmp
fisttpll
add
fstpl
test
add
add
loope
lods
add
mov
add
icebp
cli
adc
cmp
inc
fcmove
xlat
lea
into
add
add
add
add
xlat
mulb
ljmp
inc
push
dec
ja
add
jg
push
and
cmp
imul
outsb
pop
outsb
adc
add
out
push
add
ret
add
xor
xlat
iret
mov
add
fdivr
inc
ret
sbb
and
add
leave
imul
inc
leave
push
cmpsb
add
push
sub
add
scas
rolb
add
lret
add
arpl
and
in
add
xlat
rorl
loop
jmp
and
add
into
push
add
push
outsl
test
add
jns
enter
dec
cld
fdivrl
xlat
loop
ss
fldcw
bound
mov
jecxz
fstps
add
mov
add
cmpsl
adc
add
dec
mov
mov
add
test
push
addb
add
add
jne
add
clc
push
int3
pushf
push
repnz
cmpl
lock
add
sti
mov
sub
add
or
pop
sbb
sbb
mov
push
sub
dec
mov
add
jmp
insl
mov
sbb
add
fucomp
pop
sbb
loope
xor
add
jbe
clc
and
jne
call
add
scas
xor
sub
add
addb
and
add
test
add
in
mov
add
add
add
mov
daa
and
jmp
dec
push
sbb
pop
adc
lret
pop
aaa
mov
stos
add
push
mov
xchg
pop
jecxz
xchg
out
imul
dec
test
add
add
xor
mov
addb
jnp
roll
dec
test
lods
xor
scas
or
add
loope
xor
or
add
lcall
add
dec
or
ljmp
pop
jle
or
add
pop
inc
scas
inc
add
xor
add
add
xchg
out
add
popf
sbb
pop
enter
add
enter
pop
sub
add
and
add
pop
inc
decb
leave
jle
xchg
jge
nop
and
and
add
sub
sbbl
addb
push
insl
cmp
mov
dec
call
pushf
clc
fsubrl
add
xor
enter
mov
mov
mov
add
inc
mov
add
mov
add
push
push
xor
aad
add
inc
fdivr
aas
pop
push
int
add
add
fcmove
xchg
dec
fs
add
mov
or
add
mov
pop
sbb
add
add
add
inc
push
xchg
add
test
add
mov
add
lea
add
stos
inc
dec
ja
xchg
out
sarb
ds
fs
jnp
mov
dec
dec
jle
stos
or
add
repz
cmp
add
push
mov
and
bound
lret
add
jnp
cltd
adcl
add
and
add
in
jae
add
add
cmc
mov
mov
fsubrs
cmp
jo
jbe
popf
sub
add
mov
xchg
mov
add
push
movsl
inc
cmp
add
add
outsl
popf
pop
iret
enter
dec
out
stc
lock
lods
add
cld
int3
fiadds
sbb
cld
test
das
scas
add
repnz
rorl
mov
add
out
repnz
shrb
add
insb
mov
add
mov
push
add
add
mov
or
add
cmpl
add
stos
add
dec
xchg
sbb
les
sbb
add
push
sub
shlb
add
shll
push
pushf
xor
lock
std
outsb
mov
add
cmp
fs
add
mov
rolb
pop
add
cmpsb
add
adc
mov
fwait
mov
leave
push
add
adc
insb
add
add
dec
jp
sub
add
stos
add
xchg
ljmp
and
dec
ret
loop
nop
outsl
mov
add
sar
nop
fsts
hlt
sub
add
add
