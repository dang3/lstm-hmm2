add
xor
inc
and
inc
adc
and
and
add
and
jo
adc
inc
xor
push
add
bound
xor
add
inc
inc
xor
adc
xor
add
add
and
inc
push
jo
inc
push
jo
add
and
xor
adc
inc
inc
xor
pusha
push
xor
add
push
pusha
xor
inc
inc
inc
inc
adc
inc
pusha
add
inc
inc
bound
adc
add
inc
and
xor
xor
jo
push
and
jo
pusha
jb
bound
and
adc
pusha
push
inc
and
add
pusha
add
jo
jb
inc
inc
adc
inc
xor
xor
push
jo
inc
xor
add
adc
add
add
jb
push
pusha
inc
inc
adc
push
push
pusha
add
jo
add
inc
adc
jo
pusha
add
xor
jo
push
adc
add
and
adc
add
inc
pusha
and
xor
and
pusha
push
xor
add
inc
and
jo
add
push
add
jo
add
jo
add
add
inc
add
push
adc
inc
jo
inc
push
add
add
add
push
and
push
add
add
jo
push
jb
and
xor
push
bound
inc
adc
push
adc
push
add
xor
inc
add
inc
and
push
add
add
jb
add
inc
pusha
and
inc
push
inc
and
jo
bound
add
add
pusha
and
add
add
and
add
add
add
jo
push
xor
inc
jb
adc
and
jo
add
add
add
jo
inc
and
and
jb
xor
add
push
and
pusha
push
jo
add
push
add
pusha
inc
xor
add
and
add
push
add
add
adc
and
push
jo
inc
pusha
inc
add
and
jb
and
add
jo
adc
push
push
jb
push
inc
adc
jo
push
adc
add
add
and
xor
add
add
bound
and
xor
inc
xor
xor
push
add
xor
push
xor
jo
adc
bound
jo
adc
bound
push
and
xor
xor
add
xor
xor
add
push
pusha
adc
inc
add
jo
inc
adc
adc
push
and
add
xor
adc
add
pusha
add
and
and
push
add
jb
push
add
add
inc
add
jb
jo
inc
xor
jo
add
bound
and
add
xor
and
inc
and
add
pusha
inc
xor
and
and
jb
add
inc
xor
xor
inc
inc
and
add
jo
push
push
jo
add
inc
inc
and
bound
add
add
inc
pusha
jb
xor
pusha
inc
xor
push
adc
inc
inc
and
add
push
xor
and
pusha
jo
adc
xor
pusha
adc
xor
adc
inc
jo
jo
and
xor
jo
and
add
add
inc
xor
add
add
adc
xor
inc
push
xor
add
adc
xor
add
xor
pusha
xor
adc
pusha
add
xor
add
add
inc
add
bound
add
and
push
xor
jb
pusha
and
and
add
adc
push
jb
adc
adc
xor
adc
push
xor
and
bound
adc
xor
add
push
adc
xor
add
adc
inc
add
inc
push
pusha
push
adc
and
push
adc
inc
push
add
jo
add
inc
xor
inc
adc
xor
and
xor
adc
jo
add
jo
adc
add
xor
and
adc
adc
and
adc
adc
and
adc
and
add
inc
xor
add
add
adc
xor
push
add
push
and
jo
inc
jo
adc
push
add
xor
add
add
inc
pusha
jo
and
pusha
adc
inc
add
pusha
jb
and
xor
and
xor
and
and
bound
xor
inc
inc
add
push
pusha
jo
add
push
push
pusha
xor
push
inc
jo
inc
adc
inc
add
jo
inc
pusha
add
xor
xor
inc
add
adc
pusha
add
inc
pusha
add
push
add
and
and
xor
jo
inc
push
add
adc
add
add
adc
and
add
add
bound
add
push
push
push
inc
and
pusha
and
jo
add
bound
and
push
inc
inc
pusha
inc
inc
xor
inc
push
add
push
and
xor
add
adc
push
xor
xor
xor
inc
push
add
add
inc
and
xor
add
inc
inc
and
inc
push
and
add
push
and
and
xor
push
xor
add
xor
inc
xor
inc
push
inc
push
xor
bound
push
pusha
push
and
add
inc
and
xor
jb
jo
and
and
and
add
and
adc
adc
bound
jb
pusha
inc
add
push
jo
push
xor
jb
pusha
jo
pusha
add
and
push
adc
add
push
xor
inc
jb
xor
pusha
adc
add
pusha
xor
adc
inc
push
and
xor
xor
and
and
xor
and
inc
and
bound
inc
push
pusha
add
adc
inc
and
inc
and
add
and
add
jo
inc
inc
jo
inc
jo
add
xor
adc
and
and
xor
and
adc
adc
add
push
jb
xor
add
inc
add
add
inc
xor
xor
xor
add
inc
adc
pusha
push
jo
push
jo
adc
jb
xor
jo
pusha
adc
inc
and
add
jo
adc
push
push
and
inc
bound
adc
inc
inc
bound
add
inc
xor
and
adc
add
xor
add
jo
push
and
inc
jb
adc
jb
xor
bound
push
and
add
add
and
push
and
adc
push
and
jb
xor
push
push
jb
push
inc
add
and
inc
jo
and
inc
xor
add
add
push
adc
add
adc
pusha
jo
add
jo
push
push
jo
add
inc
inc
and
inc
add
add
add
jo
and
add
adc
add
adc
and
jb
bound
bound
add
add
pusha
bound
add
adc
adc
and
and
inc
add
push
jo
adc
inc
pusha
inc
jb
inc
inc
add
adc
jo
jo
inc
and
jo
pusha
pusha
add
inc
push
pusha
jb
and
xor
add
add
xor
bound
add
bound
inc
bound
inc
add
jb
push
push
adc
inc
bound
and
jo
add
add
pusha
push
inc
add
xor
pusha
bound
xor
push
pusha
add
add
and
inc
adc
add
pusha
push
push
jb
jb
and
jb
push
add
add
inc
push
adc
jo
jb
bound
adc
xor
xor
add
adc
and
inc
push
add
xor
inc
adc
push
pusha
inc
add
jo
pusha
jb
jo
jb
xor
inc
add
jo
jo
adc
add
jo
and
inc
jo
jb
pusha
inc
pusha
add
and
and
add
xor
push
and
add
adc
pusha
pusha
inc
xor
adc
add
add
and
pusha
xor
and
pusha
adc
adc
inc
push
jb
add
add
and
jo
jo
add
add
inc
jo
inc
xor
xor
pusha
adc
xor
xor
push
and
inc
inc
xor
adc
push
add
and
jb
add
and
pusha
add
push
add
inc
jb
jb
adc
jb
inc
xor
push
inc
add
jb
jb
add
inc
adc
add
add
xor
jo
adc
inc
pusha
and
and
adc
add
push
pusha
push
pusha
adc
inc
add
adc
add
inc
push
adc
jo
add
push
pusha
adc
add
bound
push
inc
push
inc
jb
add
adc
jo
adc
add
xor
add
push
jo
pusha
adc
add
xor
and
inc
and
jo
and
add
xor
add
adc
adc
adc
add
push
add
add
xor
inc
add
adc
add
inc
and
jo
and
add
jo
jo
push
pusha
add
xor
adc
add
and
and
add
inc
push
xor
adc
add
add
add
jo
jo
xor
add
adc
inc
jo
adc
and
pusha
and
add
adc
jb
bound
add
adc
inc
add
push
and
xor
adc
inc
inc
xor
inc
add
pusha
add
xor
xor
adc
jo
pusha
push
inc
jb
add
push
and
add
add
inc
and
inc
and
inc
add
push
add
bound
inc
add
inc
xor
and
and
pusha
and
jb
jb
inc
add
xor
add
jo
add
xor
add
inc
pusha
and
inc
add
and
xor
adc
and
push
xor
push
add
add
inc
xor
adc
jb
jb
inc
and
adc
jb
xor
push
jo
add
inc
adc
add
add
xor
and
add
inc
adc
and
jo
inc
pusha
jb
add
and
and
inc
push
add
inc
adc
add
adc
xor
add
jo
add
inc
and
and
bound
inc
adc
inc
inc
push
xor
and
inc
add
pusha
inc
pusha
jo
pusha
inc
adc
push
add
bound
xor
inc
inc
push
inc
and
add
add
pusha
jo
add
xor
push
inc
add
add
adc
add
jb
add
inc
inc
jo
pusha
bound
push
add
and
adc
inc
add
inc
push
and
add
adc
inc
and
add
inc
xor
and
inc
adc
and
add
adc
add
inc
and
and
add
inc
and
xor
add
jb
jb
inc
add
inc
jo
inc
jo
add
adc
bound
add
adc
inc
xor
push
inc
xor
inc
adc
xor
and
add
add
inc
xor
push
push
jo
and
pusha
adc
xor
inc
bound
xor
and
add
add
jo
jo
inc
xor
add
xor
and
inc
adc
adc
jo
inc
adc
pusha
pusha
and
add
inc
bound
inc
inc
and
adc
adc
bound
add
push
xor
and
xor
xor
push
xor
push
inc
xor
add
add
pusha
add
adc
jo
adc
inc
and
inc
push
inc
inc
add
adc
inc
and
adc
jo
bound
inc
and
inc
jo
add
inc
adc
inc
add
adc
inc
xor
inc
add
bound
inc
add
xor
adc
adc
xor
push
adc
xor
add
inc
inc
inc
xor
inc
and
inc
push
jo
add
jo
adc
add
inc
jo
jb
inc
inc
and
xor
xor
inc
jo
inc
add
bound
adc
add
adc
and
add
inc
xor
adc
add
adc
push
push
add
inc
push
jo
jo
add
xor
pusha
and
adc
jo
push
inc
add
add
adc
add
add
and
push
pusha
jo
xor
pusha
inc
push
bound
xor
add
bound
adc
pusha
adc
inc
xor
xor
adc
add
and
jo
pusha
add
inc
xor
xor
add
xor
adc
add
push
adc
inc
inc
add
adc
xor
inc
add
adc
and
and
jo
push
add
pusha
xor
add
add
and
push
push
adc
add
add
jb
and
inc
push
and
adc
xor
jo
push
adc
push
push
and
jo
add
jo
xor
jb
adc
jb
bound
adc
inc
xor
adc
adc
inc
xor
adc
adc
inc
inc
add
add
and
and
jb
xor
xor
bound
inc
add
and
and
add
push
push
pusha
add
add
and
adc
pusha
add
pusha
and
adc
and
bound
add
inc
pusha
add
add
add
add
inc
bound
inc
inc
and
pusha
xor
add
pusha
pusha
inc
jb
pusha
add
inc
push
xor
pusha
jo
inc
push
jo
pusha
jo
add
add
jo
add
and
add
inc
bound
push
adc
add
inc
pusha
push
pusha
pusha
and
xor
push
jo
xor
adc
jo
adc
adc
add
adc
xor
xor
add
inc
jb
inc
push
jb
add
bound
add
and
xor
adc
add
pusha
add
and
push
push
inc
push
and
xor
and
and
inc
jo
inc
inc
jo
jb
adc
add
pusha
and
add
jo
and
xor
push
push
push
add
add
xor
adc
inc
adc
add
jo
and
inc
add
jo
jb
inc
xor
xor
add
pusha
adc
add
and
add
add
pusha
bound
add
inc
xor
push
add
inc
add
jb
xor
inc
and
add
push
add
add
add
pusha
add
jo
adc
add
adc
inc
push
jo
inc
xor
add
xor
add
add
push
and
pusha
inc
jo
xor
xor
add
inc
inc
push
add
inc
push
inc
and
xor
and
jb
and
inc
bound
inc
jo
pusha
and
add
pusha
add
adc
inc
push
xor
jo
add
jb
push
add
add
and
jo
add
add
xor
and
inc
and
adc
adc
add
pusha
add
jo
inc
inc
and
add
pusha
add
push
adc
push
add
and
adc
add
and
jo
xor
adc
push
jo
xor
push
pusha
jo
xor
bound
add
jo
and
add
push
push
and
xor
bound
and
inc
inc
add
pusha
pusha
pusha
jb
add
push
adc
and
xor
and
inc
and
add
inc
inc
and
add
adc
inc
add
add
adc
and
add
adc
push
xor
jo
add
jo
and
bound
push
add
xor
pusha
adc
pusha
push
pusha
add
push
add
adc
inc
add
adc
and
pusha
push
add
jo
pusha
jb
add
adc
xor
add
push
adc
and
push
jo
jb
and
inc
pusha
jo
pusha
push
adc
and
pusha
xor
pusha
add
push
xor
push
add
xor
jb
pusha
add
push
jb
inc
adc
inc
jo
adc
and
xor
adc
pusha
adc
add
and
jo
and
adc
push
pusha
xor
add
jo
and
add
inc
adc
add
pusha
and
adc
add
inc
jb
pusha
push
pusha
inc
jo
inc
pusha
xor
inc
add
push
adc
pusha
xor
xor
and
pusha
push
add
and
and
add
inc
push
jb
jb
bound
bound
inc
add
xor
adc
xor
add
add
and
pusha
add
inc
push
adc
adc
inc
xor
push
xor
inc
xor
insl
std
sbb
lahf
push
or
add
sbb
pop
push
xlat
cmpsb
or
add
add
mov
xlat
jmp
add
test
inc
xor
mov
inc
add
add
imul
stos
test
adc
icebp
roll
imul
arpl
or
fsubrl
repnz
loopne
mov
add
pusha
add
test
mov
ljmp
pusha
add
add
repz
mov
sub
leave
hlt
xchg
dec
sub
inc
pusha
add
add
pop
sub
mov
and
adcb
stos
test
mov
push
sub
add
leave
pop
and
add
add
ja
sbb
cmc
dec
add
add
mov
and
add
add
lret
mov
add
adc
add
add
mov
add
add
lods
call
inc
loope
push
and
add
add
add
aas
and
mov
jno
jg
inc
xchg
test
xchg
push
inc
cs
test
cmp
js
push
loop
jnp
xor
pop
add
pop
lret
jne
pop
enter
les
add
sub
jmp
sbb
inc
pushf
cmpsb
jbe
or
add
add
popa
mov
fcmovnb
adc
xchg
std
and
push
adc
add
add
cmp
cmp
mov
and
add
add
add
or
test
push
push
pop
cli
cmpsb
mov
adc
loop
jle
xchg
into
or
int3
sbb
lods
test
faddl
push
mov
push
adc
mov
mov
insb
add
add
jmp
mov
movsl
add
cmp
rorl
out
lret
ljmp
add
add
pop
xor
pop
mov
fstpt
and
add
add
cmp
lds
push
popf
mov
mov
ficoms
add
mov
in
decb
pop
mov
idiv
push
xrelease
add
jecxz
xor
fcoms
out
shll
fcmovnbe
test
ja
xchg
push
sbb
movsl
sub
es
fsts
ds
pop
loop
ficoml
pop
lret
add
add
enter
mov
movsl
mov
dec
dec
and
mov
sub
add
mov
cmpsl
and
add
add
cmp
cwtl
fnsave
loop
dec
dec
sahf
mov
add
add
push
sbb
sub
pop
sbb
add
add
shlb
xlat
dec
mov
add
cs
data16
add
add
stos
lret
lds
outsl
adc
jnp
sub
adc
mov
scas
push
cmp
mov
jbe
or
mov
imulb
mov
je
je
movsb
sub
add
adc
mov
mov
call
add
add
mov
add
stos
imul
mov
add
mov
cmpsb
pusha
add
add
test
cli
ror
cmp
adc
mov
lods
test
hlt
mov
test
jb
xchg
and
mov
add
leave
jl
lahf
inc
mov
bound
add
inc
test
repz
add
lods
lahf
add
add
xchg
cmp
lods
mov
cmpsb
pusha
add
add
xchg
in
or
adc
mov
mov
lds
test
dec
mov
mov
ja
xchg
sub
mov
add
mov
add
insl
movsl
gs
fistl
xor
int
inc
add
add
sbbb
mov
icebp
and
ret
push
mov
dec
in
and
inc
push
add
add
add
push
push
jle
push
fidivl
mov
loop
push
xor
add
add
inc
jg
pop
inc
add
pop
inc
cli
cmp
cmp
pop
jmp
push
fcomps
adc
int
pop
stos
xor
and
out
mov
mov
add
test
add
jge
sbb
fdivp
pop
dec
pop
push
adc
mov
mov
popf
and
mov
dec
rcr
nop
mov
push
sub
shll
add
dec
mov
mov
cmp
lea
push
push
cwtl
bound
mov
faddp
sbb
sub
xchg
sbb
xchg
add
add
mov
push
or
cmpsb
mov
inc
add
add
imul
add
add
ss
lods
nop
sahf
imul
add
shl
ljmp
adc
adc
add
js
subb
je
rorl
mov
mov
arpl
push
pop
or
add
add
dec
mov
arpl
in
fadd
mov
add
pop
dec
xchg
out
sbb
inc
xor
mov
test
cmpsl
xor
out
loop
add
add
inc
push
and
cmp
jmp
add
loope
add
mov
out
and
inc
ret
add
add
aaa
mov
mov
inc
add
scas
inc
mov
stos
mov
in
dec
mov
xor
loope
cmp
dec
popa
fstps
out
mov
add
es
xchg
mov
test
aas
dec
add
ret
pop
enter
sub
mov
fistl
and
jecxz
popf
jg
shlb
aad
js
jge
daa
sub
mov
push
or
mov
mov
jno
xchg
xchg
ficompl
iret
pop
sbb
add
mov
pop
sub
add
add
mov
sub
inc
fnstcw
cmp
mov
add
cmpb
push
dec
mov
jo
rcrl
dec
popf
leave
mov
inc
or
in
jmp
add
add
mov
pop
aas
aam
lock
mov
xor
push
push
mov
add
add
push
stc
idiv
mov
mul
sub
mov
fcoml
pushf
lcall
ret
mov
add
add
jns
add
add
xchg
in
sub
push
mov
cmp
add
add
sbb
pop
arpl
add
popf
dec
mov
add
add
loope
xchg
dec
push
add
add
mov
dec
icebp
add
mov
mov
add
add
push
pop
ljmp
mov
rcll
ror
and
add
add
mov
sti
sbb
rclb
add
add
pop
cmp
test
jle
mov
add
add
mov
lcall
imul
mov
adcb
shlb
and
dec
add
add
fsubrl
or
add
add
nop
addr16
cmc
push
fidivs
cmp
mov
mov
jge
and
sahf
es
or
xchg
mov
sbb
and
pushf
rclb
jecxz
mov
add
add
into
mov
xchg
mov
dec
and
mov
xor
mov
add
mov
push
aam
or
add
push
les
leave
scas
cwtl
aam
jb
and
mov
cltd
adc
cmp
inc
fidivrl
and
add
add
inc
cli
ljmp
mov
outsb
mov
or
mov
xchg
push
sub
data16
test
repz
xchg
inc
fisubrl
mov
adc
andl
outsl
aaa
mov
cltd
mov
in
imul
mov
and
ficompl
fidivrs
mov
imul
repz
cmp
js
rcll
dec
das
mov
pop
fldt
add
add
mov
into
je
adc
movsb
in
int
or
mov
test
sbbl
mov
add
xor
cmpsl
sbb
mov
out
pop
dec
fcoms
mov
jb
or
ret
xor
imul
test
cmp
popf
int
stc
or
add
add
add
add
cmp
sbb
pop
mov
mov
ljmp
mov
add
inc
and
mov
mov
imul
inc
add
push
fists
shrb
add
adc
cld
in
sbb
sbb
xchg
push
jecxz
dec
add
jne
clc
pop
rcll
mov
loopw
loop
inc
pop
add
add
add
lock
mov
mov
pushf
add
js
rcrl
jae
into
inc
sbb
lea
xchg
push
push
gs
int3
push
xchg
sbb
jo
imul
stos
sbb
mov
fisubrl
jle
add
add
add
sbb
push
vpandn
mov
inc
add
lret
sbb
aam
adc
jns
mov
ficomps
mov
dec
add
add
add
incl
pop
ja
sbb
push
in
lea
add
mov
xchg
imul
cs
add
aam
fidivl
dec
dec
cmp
cmp
cld
lds
mov
rcl
jge
jne
adc
push
cwtl
mov
loop
test
add
add
outsl
sub
mov
call
aaa
add
add
add
fmuls
mov
push
dec
mov
cli
jle
stos
push
jg
test
inc
andb
jecxz
push
movsb
or
add
cmp
xchg
jno
inc
iret
fnstcw
cwtl
or
push
js
add
mov
add
mov
ficomps
icebp
inc
add
xor
pop
push
xlat
inc
add
mov
rol
enter
addb
adc
inc
add
lret
sti
mov
pusha
add
add
lcall
mov
push
or
add
add
cmp
cmpl
mov
add
scas
cld
rcll
lock
daa
jno
bnd
fsubrl
sub
pop
jp
or
enter
or
add
jmp
dec
shll
mov
sbb
aas
lret
lret
adc
add
adc
push
stos
sbb
je
and
mov
inc
pop
imul
dec
lods
hlt
cmp
cmp
dec
ds
push
push
fcoms
add
add
negl
out
mov
add
xor
jl
mov
cmpb
shl
fucomi
inc
sub
inc
test
in
inc
add
add
jne
loopne
pop
pop
jo
jp
dec
add
add
inc
add
add
add
das
das
icebp
andl
sahf
roll
add
mov
movsl
mov
loopne
xor
push
rcll
xchg
jae
shlb
lods
mov
cwtl
inc
add
add
enter
xor
lret
inc
add
add
sbb
mov
lahf
jmp
andl
inc
add
divl
jle
add
add
lods
out
add
add
or
lret
inc
and
je
mov
pusha
add
add
pop
sbb
test
ljmp
add
add
or
add
add
dec
mov
xchg
arpl
sbb
add
add
xchg
push
adc
mov
add
add
xor
sahf
push
xor
adc
dec
sbb
push
cvtdq2ps
mov
cmp
insl
cmpsl
aaa
mov
mov
fcmovnbe
cld
adc
adcl
inc
dec
add
add
mov
add
add
dec
sub
add
add
int3
pop
push
push
lret
mov
push
add
and
add
addr16
xchg
sbb
push
icebp
lret
adc
loopne
fmul
add
sub
mov
jne
int
pop
imul
add
and
mov
dec
mov
push
mov
cmpsl
in
repz
mov
push
mov
ja
cmp
add
add
cmp
popf
mov
push
nop
jne
mov
sub
inc
and
mov
cmpsb
sub
add
add
jmp
inc
jmp
mov
fists
mov
add
addb
add
add
add
xchg
mov
addr16
pop
fwait
push
mov
pushw
dec
add
pop
xchg
repz
push
mov
pop
shll
add
add
sti
dec
add
add
sbb
lock
loopne
pop
fmulp
hlt
or
add
xchg
aam
xchg
mov
inc
dec
cwtl
scas
push
fsubrs
mov
pop
popf
xchg
mov
add
and
mov
mul
push
popa
add
aaa
cs
sti
and
jae
sub
and
js
push
or
mov
stos
aas
fcmovnb
lcall
mov
cmp
xor
fmuls
mov
mov
dec
addr16
push
rol
test
add
sbb
pop
out
sbb
gs
sti
out
add
add
add
add
add
dec
aas
mov
fisttps
lcall
mov
gs
icebp
pop
adc
cltd
fwait
jo
mov
ljmp
mov
push
inc
jne
mov
mov
arpl
add
add
add
sub
push
push
and
xlat
jne
sahf
dec
ds
inc
fcmovnu
sub
cs
std
or
int
and
lea
and
sbb
mov
cli
mov
pusha
add
pop
add
add
add
add
add
imul
shrl
xchg
mov
add
mov
pop
xchg
or
add
add
sti
ja
in
aas
push
fwait
call
insb
add
add
pop
lcall
add
ss
jmp
jns
add
enter
aas
mov
add
add
push
add
add
add
add
adc
add
sub
mov
sub
adc
cmp
in
xor
jmp
add
add
cs
fmull
jns
aaa
mov
add
add
adc
mov
insl
xchg
mov
cmp
mov
pop
gs
sahf
mov
add
repnz
cmpsb
cli
inc
xor
and
xor
test
add
push
and
jns
mov
pop
out
icebp
sub
subl
mov
aam
cmpsb
bound
scas
add
ljmp
add
add
add
and
add
add
fiadds
add
lds
out
imul
ror
mov
rcrb
add
add
cmc
adc
mov
mov
add
outsb
pop
inc
int
js
jg
add
add
cs
mov
aas
jbe
add
add
xor
call
jp
or
mov
jge
out
shll
aas
jle
adc
insl
bnd
out
rorl
and
add
add
push
jge
mov
pop
jne
lret
jne
scas
xlat
and
jecxz
jmp
mov
in
jle
add
aad
int
cmpsb
stos
pushl
sahf
insb
add
cli
lcall
mov
xlat
sbb
nop
pop
jl
testb
mov
xor
add
dec
aaa
lods
dec
jg
in
sti
adc
es
pushf
mov
add
add
mov
fldt
add
add
cli
lea
push
iret
int3
sbb
jmp
mov
popf
outsb
call
add
mov
rcrl
dec
add
cli
or
sarb
js
add
add
push
repz
aad
cmp
push
insb
add
decl
xchg
add
add
inc
add
add
mov
add
adc
fnsave
aam
adc
ds
les
add
gs
adc
pop
pop
ds
cmc
pop
jne
in
int
mov
mov
bound
test
pop
pop
dec
sub
mov
mov
dec
shll
add
das
jnp
xor
add
mov
shlb
add
insb
add
add
jae
push
sub
lds
repz
lea
adc
add
ret
dec
test
mov
xchg
add
js
pusha
add
add
xchg
mov
mov
add
add
dec
add
add
add
mov
jbe
mov
jnp
inc
push
hlt
movsb
inc
dec
cmp
pop
push
dec
pusha
add
pop
and
add
add
add
rol
cs
push
dec
add
or
inc
les
xor
test
add
mov
je
cmp
jnp
xchg
ret
cld
jp
pushf
mov
lea
inc
add
add
xchg
dec
cmp
mov
ret
add
add
mov
add
add
add
les
out
imul
add
add
add
push
pop
ds
into
inc
mov
add
add
lea
dec
sbb
mov
inc
pushf
mov
and
jg
jge
xor
add
mov
push
daa
shll
jns
adc
es
jo
bound
jae
cltd
int
mov
mov
enter
out
add
outsb
stos
fbld
stos
out
mov
jmp
mov
rolb
inc
push
js
mov
pop
dec
pusha
add
add
jb
testb
jne
in
push
sbb
mov
add
fstpt
jae
aas
dec
jbe
clc
and
mov
popa
inc
sahf
fwait
xor
leave
mov
add
cltd
jle
push
mov
and
cmpsl
pop
iret
add
mov
mov
dec
add
add
mov
bound
mov
push
mov
push
addr16
xchg
jecxz,pt
out
cld
mov
pop
sbb
cs
add
mov
aas
mov
push
or
loop
fwait
xlat
repnz
add
icebp
pushf
movsl
mov
push
scas
xchg
ret
cs
bound
xchg
pushf
push
jb
mov
inc
test
jae
aad
loop
insb
add
adc
adc
mov
adc
mov
mov
sub
xchg
cmpsb
frstor
cli
fsubrp
and
add
add
movsb
push
inc
adcl
outsl
insl
inc
add
add
dec
push
les
add
add
add
lret
and
add
add
pop
dec
cwtl
jmp
imul
add
adc
lock
mov
cmpsl
cmp
mov
mov
add
int3
mov
xor
int3
int
iret
dec
cmpl
mov
rcr
xchg
mov
cmc
or
es
mov
jae
adc
add
mov
scas
push
aas
xlat
pop
inc
add
lds
inc
add
pop
inc
sbb
sub
mov
xor
xchg
addr16
cs
xchg
xor
xchg
shrb
scas
pop
outsb
stos
jle
jecxz
mov
add
add
scas
mov
out
push
fstps
mov
add
ret
int
imul
jl
add
xor
add
add
add
hlt
notb
mov
lahf
int3
lcall
mov
push
push
and
xor
add
xlat
dec
xchg
add
mov
mov
xchg
mov
mov
jbe
jns
pusha
add
xor
add
add
sbb
nop
push
mov
add
add
jle
cwtl
fst
stos
mov
cld
pop
testb
sub
hlt
es
push
shlb
add
add
mov
add
add
pop
cmpsl
clc
push
popf
popa
mov
sub
lods
lock
jbe
inc
jle
lods
aam
jle
mov
sub
adc
insl
idiv
sbb
add
add
leave
xor
add
add
mov
mov
in
sbb
add
dec
add
cmp
or
adcb
push
mov
enter
addr16
sub
push
sarl
dec
pushf
popa
in
out
mov
ja
add
add
sub
std
dec
dec
and
mov
add
or
ds
add
std
sbb
push
inc
lea
add
add
add
mov
jle
icebp
jmp
xchg
ljmp
mov
add
dec
add
add
add
iret
xchg
mov
mov
js
mov
add
add
out
cmp
pop
sarl
dec
add
sub
add
add
loop
jecxz
or
mov
add
add
test
insl
pusha
add
and
mov
mov
add
xor
test
orl
add
sbb
add
add
fdivrs
adc
ljmp
lcall
xor
push
ljmp
adc
mov
mov
add
add
popf
push
mov
ds
test
dec
mov
adc
push
xor
inc
push
ret
mov
inc
adc
mov
jbe
adc
pop
psubsw
stos
lahf
mov
lods
jo
ret
sbb
pop
je
fdivl
and
sbb
dec
iret
or
mov
sbb
inc
dec
js
mov
xchg
shl
les
push
inc
jnp
add
ljmp
xor
inc
add
pop
les
xchg
out
add
jne
dec
cmc
cmp
rol
outsb
mov
aaa
je
add
inc
adc
adc
dec
add
add
out
or
mov
add
add
add
sbb
inc
or
mov
scas
sub
sub
in
lods
lea
xchg
imul
add
add
add
push
loop
insl
adc
add
inc
push
es
xchg
fwait
dec
mov
scas
jl
add
xor
sub
rclb
lcall
xor
dec
xor
adc
xchg
dec
inc
add
js
xlat
test
mov
sahf
or
cmpsl
jle
es
nop
xor
fstl
imul
aaa
pushl
inc
adc
out
lahf
in
adc
jl
je
scas
xchg
mov
add
add
aam
lock
lods
or
or
les
loopne
aad
mov
mov
pop
mov
dec
js
clc
mov
jno
cli
xlat
mov
adc
arpl
add
add
je
add
add
add
add
add
inc
xor
add
jo
cmp
lea
scas
arpl
inc
mov
rcl
dec
add
jne
add
add
mov
add
shrl
out
jmp
add
sti
mov
lods
lret
stc
insl
leave
ficoms
push
out
xchg
icebp
in
mov
add
mov
dec
cli
fwait
cmp
add
add
cwtl
pushf
mov
shlb
add
add
mov
add
add
or
pop
js
outsl
push
push
loop
add
mov
inc
xchg
push
dec
add
adc
pushf
adc
lret
push
lods
sbb
adc
int
pop
push
cmpsl
cmp
movb
add
and
clc
xchg
dec
popf
jle
add
mov
mov
movsl
sahf
ret
jecxz
ret
mov
add
add
mov
jmp
add
add
xor
and
mov
imul
shl
dec
pop
mov
push
fucomi
loopne
cmp
add
add
mov
add
sub
pop
aad
jb
and
add
add
add
mov
in
or
lods
fucomp
add
rolb
ljmp
jne
js
subl
test
inc
movsb
pop
inc
add
add
andl
xor
cmp
je
scas
rcl
sarl
imul
dec
hlt
clc
and
add
add
lods
lret
mov
icebp
pushf
sar
mov
add
xchg
insb
add
scas
mov
jnp
add
adc
loop
and
mov
adc
mov
push
mov
or
repz
bound
sbb
mov
add
subb
scas
int3
repnz
jne
mov
inc
xchg
push
sbb
ss
inc
ja
inc
mov
sub
add
add
add
add
imul
ds
xorl
mov
iret
int3
inc
cmpb
add
push
push
sbb
mov
add
idivl
mov
mov
and
push
rcrl
xchg
sub
pop
xchg
loope
subb
add
fnsave
add
out
daa
loope
daa
sub
xchg
mulb
dec
add
add
bound
mov
xchg
mov
mov
lret
sub
mov
add
add
stos
sbb
push
and
add
or
dec
test
int
movsl
mov
mov
ret
cltd
and
fisubrs
call
and
push
mov
add
cmp
jne
lea
push
push
push
xchg
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
call
leave
ret
ret
mov
mov
or
mov
lea
lea
sub
shr
not
inc
sub
mov
clc
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
je
in
add
add
call
test
jne
jle
js
call
mov
adc
mov
sub
addb
test
ss
cmp
sub
arpl
pop
imul
mov
cld
push
mov
add
mov
sub
mov
repnz
out
dec
mov
hlt
xchg
in
sub
fimull
add
adc
add
add
add
xchg
cmp
inc
fiadds
inc
scas
rcrb
and
in
icebp
mov
fchs
rcl
movsb
ljmp
or
mov
push
lahf
bswap
xchg
pop
imul
push
push
roll
add
add
jl
ljmp
xor
popa
jge
and
jle
fcomps
enter
mov
ds
jb
push
push
inc
fimuls
add
add
mov
shl
xchg
push
and
mov
cwtl
fwait
cmp
adc
cmpsl
add
lds
add
insb
add
add
mov
rcll
ret
jne
cmp
in
imul
fwait
lret
fwait
dec
insl
mov
sub
data16
mov
test
xchg
les
mov
jge
js
leave
inc
inc
jge
add
cmp
push
in
lods
pop
pop
push
sbb
dec
shrb
je
scas
jne
jns
jmp
add
out
dec
enter
bound
sub
mov
jge
add
das
ljmp
and
add
nop
dec
add
add
cmp
imul
sahf
in
sub
mov
pop
pop
inc
xchg
dec
jb
mov
inc
add
add
add
add
and
mov
fistpll
and
inc
add
add
push
inc
add
add
add
dec
lods
cmpsb
jp
sub
ret
add
fisttpll
and
add
mov
jne
xchg
sub
xor
jecxz
push
repz
mov
inc
add
movsb
insb
add
add
inc
add
mov
add
add
pop
int
in
lahf
xor
rorl
dec
fistl
cltd
add
cwtl
adc
stos
adc
adc
pop
dec
add
add
dec
add
add
sbb
mov
add
add
out
inc
lahf
aad
ds
loopne
hlt
rclb
xchg
addr16
icebp
pop
out
mov
add
add
add
fsincos
sub
mov
in
add
in
leave
mov
jne
hlt
sub
add
add
and
pop
sub
pushf
fbld
in
push
cs
mov
flds
or
jmp
jo
mov
inc
xchg
jmp
add
add
add
sti
aam
mov
push
outsl
and
mov
test
outsb
and
ret
rclb
mov
push
sub
xchg
sar
outsl
mov
iret
adc
xchg
add
add
inc
mov
aad
adc
in
xor
in
push
int3
es
jg
adc
popf
cmp
or
add
aaa
jns
add
add
xor
adc
pop
add
mov
test
inc
dec
push
pop
addb
push
rcll
mov
cwtl
cmp
adc
jno
sbb
mov
push
push
fwait
lret
add
add
cmp
cld
fmul
shlb
movsb
nop
adc
sarl
mov
inc
icebp
test
sbb
sti
pusha
add
add
push
cltd
loopne
inc
add
mov
movsl
test
adc
adc
out
icebp
pushf
cmp
dec
add
add
add
inc
mov
add
add
add
mov
lods
sbb
add
xor
inc
add
mov
jnp
in
or
xchg
loope
sbb
gs
mov
stos
vandps
icebp
add
sbb
xor
add
cmpsb
fdivrl
imul
gs
inc
les
out
dec
add
add
sbb
sub
xbegin
lods
fbld
loope
scas
shll
sub
adc
mov
push
addb
add
ds
xchg
add
xchg
loopne
or
mov
mov
sbb
dec
aas
or
mov
or
add
add
sbb
mov
add
xchg
push
stos
lods
rorb
xor
add
add
std
les
ljmp
xchg
nop
stos
vandnps
imul
sti
lret
test
add
add
mov
jg
or
mov
ficomps
push
adc
dec
add
add
add
jo
icebp
or
pop
clc
push
xor
shr
insb
add
xchg
lea
jge
mov
pop
or
mov
inc
loop
sbb
add
mov
add
xchg
inc
or
xor
push
add
add
add
pop
inc
add
add
sbb
dec
pop
hlt
mov
adc
stos
stos
aas
cmp
pop
xchg
insb
add
add
les
cmpsl
lea
mov
mov
add
add
or
xchg
mov
mov
fmul
cmp
mov
imul
add
xlat
shlb
dec
add
xchg
mov
xchg
stos
mov
fidivs
xchg
mov
pop
sahf
jmp
pop
mov
add
add
add
push
jge
push
xchg
ds
seta
xor
outsl
icebp
je
push
int
xor
out
mov
and
jne
clc
bound
add
divb
idiv
pop
cmpsl
cmp
lods
fisttps
add
push
movaps
mov
adc
mov
add
add
and
mov
push
push
outsb
pop
dec
cs
leave
xlat
lods
test
add
add
pop
shll
inc
add
add
jns
mov
mov
mov
pop
push
movsb
imulb
movaps
mov
loope
push
jge
fsubp
add
add
add
mov
rclb
add
shrb
add
add
test
add
or
jae
add
add
mov
cmpsl
push
push
sbb
lea
call
hlt
add
add
add
aam
out
push
pop
test
fstpt
push
or
add
add
mov
xor
test
mov
mov
add
add
fsubl
jle
cld
xor
mov
jae
mov
jbe
mov
add
or
or
or
add
add
data16
fists
pop
lods
push
movsb
fimuls
cmpl
lock
lock
mov
cmp
add
add
cmp
pop
sbb
lods
sarl
shld
xchg
inc
xchg
xchg
jo
popf
into
mov
mov
leave
sbb
add
jl
sbb
out
dec
sbbb
add
int
pushf
pop
pop
ds
push
jl
add
mov
and
add
add
add
aas
ss
enter
mov
call
push
inc
cmp
adc
mov
add
mov
in
add
add
roll
xchg
mov
in
mov
inc
xchg
dec
add
mov
dec
add
add
int3
push
es
mov
dec
adc
add
mov
and
add
add
inc
add
add
shll
pusha
add
inc
faddl
add
mov
stos
add
mov
mov
xchg
add
add
in
jns
add
mov
add
add
daa
scas
sysret
cli
ret
dec
test
popf
add
mov
push
add
add
add
scas
push
mov
nop
pop
mov
add
add
aas
adc
add
add
mov
or
add
pop
xchg
scas
sahf
nop
or
push
jbe
dec
add
add
icebp
jnp
add
add
dec
sub
mov
subb
mov
mov
add
add
add
cmc
fimuls
scas
mov
nop
pop
sbb
stc
nop
cli
out
fistpll
add
add
or
jg
add
add
sub
add
add
mov
mov
xchg
gs
cs
jne
test
add
add
jg
fldcw
cmpsb
adc
inc
inc
test
int3
jl
adc
orl
shrb
aaa
lcall
int
push
repnz
testl
bound
or
push
jle
pop
lcall
and
add
add
lds
sbb
enter
add
add
xchg
jle
in
mov
add
ljmp
xchg
add
add
and
adc
push
stc
out
mov
or
mov
lea
rclb
mov
arpl
jecxz
push
mov
loopne
add
add
sbb
mov
lock
shll
add
cmp
insl
int
fildll
add
add
sti
mov
mov
xchg
push
adc
mov
add
push
dec
inc
call
pop
cmp
mov
lret
mov
jg
add
aad
adc
jecxz
add
add
xchg
mov
inc
test
push
repnz
add
add
int
add
add
sbb
dec
mov
test
lea
pop
in
les
add
add
loope
mov
jl
lods
out
out
mov
xchg
mov
lret
leave
aam
mov
das
out
lea
add
xor
cwtl
dec
lods
pop
mov
mov
mov
pop
imul
in
jg
rolb
jecxz
adc
dec
lock
push
movsl
fildll
test
add
jbe
add
add
lret
push
mov
inc
add
add
push
push
fistpl
gs
out
pop
xchg
jo
xor
add
jg
faddp
loope
add
cmp
fmull
add
shrl
mov
in
mov
cmp
sahf
aaa
sub
rclb
lds
mov
mov
mov
mov
mov
xor
or
mov
mov
cmp
repnz
aam
mov
sarl
mov
cmp
pop
ret
dec
add
mov
scas
xor
inc
jmp
sub
loope
loope
push
cmp
divb
sbb
or
mov
mov
cmp
insl
push
loope
mov
gs
add
add
push
in
add
add
push
rorl
sbb
sub
jge
mov
add
add
add
fistps
shlb
add
add
add
popa
push
jae
inc
inc
inc
test
stos
call
mov
nop
xchg
xchg
or
mov
call
add
add
add
cmove
add
add
dec
iret
pop
fcmovnb
mov
sbb
add
xor
mov
mov
add
add
add
add
add
mov
or
or
rolb
xchg
xor
xchg
scas
test
filds
push
sti
loope
shll
pop
int
push
xchg
cld
sub
in
and
mov
lret
xchg
mov
test
jmp
push
adc
aas
jbe
push
mov
sub
mov
mov
mov
stos
test
loope
divl
in
and
cmc
mov
add
add
addl
mov
xor
repz
or
mov
mov
sbb
sub
popa
popf
sbb
sti
jg
cltd
nop
and
pop
and
add
add
add
add
popa
popf
mov
imul
int
add
bound
add
sbb
mov
rcll
and
mov
cld
mov
jno
add
add
cmp
jb
mov
pop
push
fcomp
fwait
add
lods
imul
repz
add
fsubrl
inc
aam
icebp
mov
jle
outsb
cmpb
test
add
add
mov
inc
inc
in
mov
mov
mov
mov
add
lea
add
add
sbb
movsl
call
inc
ror
lahf
sub
mov
pop
mov
movb
bound
pop
popa
icebp
cmp
jno
and
xor
add
or
in
in
and
cld
inc
add
xchg
cmp
adc
inc
add
push
sbb
lds
lea
cmpsb
jnp
mov
and
cmp
cmp
fucomp
cmp
cld
out
cmp
add
add
xchg
pop
incl
jns
xchg
hlt
sub
add
add
mov
xor
lods
jmp
idivl
sub
iret
push
fistps
test
add
add
cmc
pop
cmovb
add
mov
cld
fmull
add
lods
jl
roll
inc
add
add
xchg
clc
mov
push
in
shrb
std
push
sub
add
add
out
lret
pop
pop
movsb
mov
push
jp
and
inc
add
add
insb
add
add
fmull
jo
xchg
leave
or
add
jp
mov
adc
mov
push
dec
add
mov
push
ds
out
add
push
push
gs
jae
mov
jp
mov
add
lock
pop
add
push
dec
sbb
test
pop
add
add
add
add
rclb
movsb
dec
inc
fnsave
mov
add
add
movsl
divb
mul
adc
bound
cmp
dec
in
and
mov
mov
add
add
pop
iret
xchg
sbb
out
ss
and
jp
xchg
dec
arpl
sarl
mov
insl
adc
pop
push
xchg
fwait
mov
xlat
xor
mov
jno
dec
aas
rcrl
pop
shrl
mov
mov
movsb
inc
inc
add
fcmovu
add
push
clc
repz
jmp
jae
add
add
cmp
into
outsb
push
sbb
push
inc
add
add
xchg
add
inc
add
add
mov
cs
clc
repz
jmp
jae
add
add
add
insb
add
pop
push
clc
repz
jmp
jae
push
add
xchg
add
ss
orb
mov
xchg
ret
add
fiadds
divb
sti
add
add
in
fistpl
nop
push
mov
leave
nop
jmp
add
inc
add
add
add
test
clc
repz
jmp
jae
and
xorl
add
fiadds
mov
add
nop
push
mov
leave
nop
jmp
add
sub
lods
std
add
jb
push
mov
xchg
ret
scas
fiadds
sbb
pop
add
xorl
lea
clc
repz
jmp
jae
into
add
xchg
add
fiadds
scas
add
xchg
nop
push
mov
leave
nop
jmp
add
add
add
push
nop
sar
mov
repz
jmp
jae
push
or
add
push
pusha
clc
repz
jmp
jae
cs
add
xchg
sti
xor
cltd
xchg
add
or
add
clc
repz
jmp
jae
add
cwtl
add
add
jle
ds
add
nop
jmp
idivb
add
out
mov
clc
repz
jmp
jae
add
pop
add
sbb
mov
mov
xlat
mov
nop
push
mov
leave
nop
jmp
mov
std
test
add
clc
repz
jmp
jae
cld
into
std
add
add
jge
nop
push
mov
leave
nop
jmp
test
sbb
add
mov
clc
repz
jmp
jae
add
cs
or
addb
repz
jmp
jae
idiv
add
subb
add
std
add
pushf
sbb
clc
repz
jmp
jae
add
nop
addb
in
add
push
mov
xchg
ret
shll
add
and
mov
add
add
add
nop
push
mov
leave
nop
jmp
inc
add
cmpsl
mov
push
mov
xchg
ret
add
ss
cld
add
pop
push
push
mov
xchg
ret
in
add
add
jne
rcr
jb
add
fld1
clc
repz
jmp
jae
add
push
adcb
add
roll
mov
nop
push
mov
leave
nop
jmp
lods
inc
nop
scas
fwait
add
add
fadds
add
xor
push
mov
xchg
ret
add
add
add
add
test
jmp
jae
add
insb
ret
jle
pop
pop
sub
xchg
repz
jmp
jae
pop
add
fists
add
orl
add
roll
fwait
test
fldl
push
mov
xchg
ret
add
jb
push
jne
add
sar
arpl
jae
add
and
scas
addb
xor
repz
jmp
jae
cmp
add
into
add
add
push
mov
xchg
ret
add
sbb
sbb
nop
or
push
mov
mov
xchg
ret
adc
add
imul
into
cmp
cld
jmp
jae
insb
add
add
mov
mov
xchg
ret
xchg
arpl
jne
add
add
add
add
lss
clc
repz
jmp
jae
test
add
mov
fld1
push
mov
xchg
ret
add
imul
add
add
push
push
mov
xchg
ret
rcrl
sti
add
xchg
sbb
and
clc
repz
jmp
jae
add
add
jne
clc
repz
jmp
jae
in
xchg
test
dec
add
clc
repz
jmp
jae
jg
jg
push
add
roll
push
mov
leave
nop
jmp
add
add
add
stos
xchg
roll
mov
clc
repz
jmp
jae
test
add
or
push
clc
repz
jmp
jae
nop
push
fsubs
xchg
add
push
mov
xchg
ret
arpl
in
add
fstpl
repz
jmp
jae
add
jle
fwait
addb
inc
add
add
cli
adc
push
clc
repz
jmp
jae
push
jne
icebp
xchg
add
add
push
clc
repz
jmp
jae
stos
push
or
push
add
add
push
mov
leave
nop
jmp
xchg
std
addb
sti
add
std
arpl
xor
push
clc
repz
jmp
jae
add
add
push
xchg
cmp
test
clc
push
mov
xchg
ret
add
fiadds
adcb
bound
dec
mov
cld
jmp
jae
add
add
push
ss
add
add
repz
clc
repz
jmp
jae
fdivr
add
add
inc
mov
clc
repz
jmp
jae
pop
ss
add
add
jge
clc
repz
jmp
jae
add
add
subb
add
repz
jmp
jae
add
jne
scas
add
and
clc
repz
jmp
jae
roll
push
xchg
add
clc
repz
jmp
jae
lods
add
add
cmp
lods
into
sbb
data16
mov
nop
push
mov
leave
nop
jmp
xchg
xchg
add
or
add
cwtl
jne
mov
clc
repz
jmp
jae
add
stos
insb
jle
add
add
inc
jo
add
add
lods
add
add
add
ret
add
push
loopne
mov
xchg
ret
add
add
add
add
clc
repz
jmp
jae
imul
add
cs
mov
and
sbb
add
fiadds
fadds
testb
xchg
add
jle
and
add
add
mov
mov
repz
jmp
jae
mul
add
add
add
or
clc
repz
jmp
jae
or
or
add
pop
lahf
inc
clc
repz
jmp
jae
cs
pop
add
add
add
les
add
mov
inc
nop
push
mov
leave
nop
jmp
jne
fnstsw
add
andl
add
nop
jmp
push
nop
add
imulb
jmp
jae
in
add
pop
fdiv
add
repz
jmp
jae
add
add
add
add
add
and
add
push
mov
xchg
ret
sti
xor
divb
ja
loope
incl
arpl
add
jne
sbb
cmp
add
add
pop
push
jbe
xchg
add
nop
push
mov
leave
nop
jmp
add
mov
fadds
add
repnz
sub
ret
adc
fldl
or
mov
mov
push
mov
xchg
ret
jb
jne,pn
adc
stos
add
xchg
sahf
push
add
nop
push
mov
leave
nop
jmp
add
insb
pop
or
mov
clc
repz
jmp
jae
xchg
fidivrs
add
addb
fcoms
xchg
pop
clc
repz
jmp
jae
mov
add
add
add
add
add
add
mov
fcomps
gs
repz
jmp
jae
nop
xchg
std
add
add
call
loopne
inc
add
testb
arpl
push
jle
subb
cmp
in
leave
nop
jmp
inc
imulb
lods
into
jne
add
test
inc
add
sbb
clc
repz
jmp
jae
add
jg
addl
add
lea
in
jno
adc
add
mov
or
add
add
add
pavgb
in
pop
mov
popl
clc
repz
jmp
jae
jg
xchg
add
test
adc
push
mov
leave
nop
jmp
testb
cwtl
add
add
push
call
clc
repz
jmp
jae
or
in
add
arpl
xchg
ret
add
adc
add
add
xchg
add
cli
clc
repz
jmp
jae
add
push
add
cld
jmp
jae
ret
add
add
add
xchg
xchg
add
das
imul
nop
push
mov
leave
nop
jmp
pop
ret
test
add
add
inc
test
push
mov
leave
nop
jmp
add
add
jecxz
jle
add
nop
jmp
roll
xor
mov
sub
gs
add
add
insb
xor
pop
fstp
add
add
nop
push
mov
leave
nop
jmp
add
add
in
add
add
repz
jmp
jae
add
fwait
lods
add
mov
cmp
add
add
add
test
and
clc
repz
jmp
jae
add
adcb
add
mov
clc
repz
jmp
jae
xchg
test
add
add
push
mov
xchg
ret
into
add
xchg
arpl
add
in
mov
jne
add
fdivr
ret
cwtl
test
add
shrl
js
mov
clc
repz
jmp
jae
xchg
add
add
mov
push
mov
xchg
ret
jne
cwtl
add
sbb
roll
roll
hlt
cmpsl
test
nop
push
mov
leave
nop
jmp
add
into
icebp
adc
add
sbb
push
mov
leave
nop
jmp
in
std
ss
add
add
mov
nop
push
mov
leave
nop
jmp
add
adc
cmp
rcr
add
sub
clc
repz
jmp
jae
into
in
add
add
add
idiv
repz
jmp
jae
add
add
cmp
roll
push
mov
test
xchg
sbb
push
inc
add
testl
add
fwait
cmp
nop
push
mov
leave
nop
jmp
add
add
xchg
into
add
loope,pn
inc
sub
repz
jmp
jae
cltd
shrl
add
gs
clc
repz
jmp
jae
fdivs
add
nop
add
imul
push
mov
xchg
ret
add
mov
adc
cltd
add
mov
jb
imul
add
add
into
add
xchg
aam
xchg
push
mov
xchg
ret
rcll
addb
add
add
jl
inc
add
dec
fld1
clc
repz
jmp
jae
add
arpl
add
addl
jmp
jae
nop
and
push
ss
add
inc
xchg
add
call
add
xorl
fldl
inc
imul
jne
test
add
clc
repz
jmp
jae
add
add
or
mov
xchg
ret
nop
xchg
imulb
pop
stos
ret
add
mov
or
mov
je
clc
repz
jmp
jae
jne
add
add
add
jle
push
clc
repz
jmp
jae
xchg
add
jle
mov
add
cld
jmp
jae
add
add
add
push
mov
leave
nop
jmp
lods
or
add
add
mov
jb
ret
push
mov
xchg
ret
test
add
cs
inc
add
add
mov
leave
nop
jmp
add
push
insb
inc
add
test
rolb
repz
jmp
jae
inc
mov
xor
xchg
or
repz
jmp
jae
lods
pop
add
sbbl
pop
nop
cwtl
inc
orl
xchg
ret
add
pop
inc
add
push
mov
xchg
ret
add
add
dec
mov
clc
repz
jmp
jae
xor
arpl
icebp
arpl
sbb
add
repz
jmp
jae
add
add
add
dec
add
test
repz
jmp
jae
or
jle
nop
add
idiv
call
nop
jmp
fisttpll
imul
inc
mov
nop
push
mov
leave
nop
jmp
pop
or
add
nop
lods
mov
clc
repz
jmp
jae
cmp
push
fsubrs
add
add
mov
clc
repz
jmp
jae
add
add
add
jge
clc
repz
jmp
jae
add
scas
push
imul
rorl
mov
clc
repz
jmp
jae
xchg
add
fdivp
sti
add
and
loop
clc
repz
jmp
jae
fsubrs
lods
add
add
repz
jmp
jae
fnsave
add
add
jb
sub
clc
repz
jmp
jae
add
add
add
stos
clc
repz
jmp
jae
insb
sub
add
add
arpl
mov
clc
repz
jmp
jae
ffree
jg
sti
add
xor
aad
sbb
cmp
repz
jmp
jae
push
sbb
in
cmp
pop
clc
repz
jmp
jae
push
mov
add
cs
cmp
clc
repz
jmp
jae
cld
add
mov
sbbl
adc
add
inc
mov
add
sti
push
xchg
xchg
jle
add
add
add
add
clc
repz
jmp
jae
insb
icebp
cltd
pop
add
add
lock
call
add
cmpl
add
sbb
nop
inc
icebp
add
cld
stos
add
add
add
add
stos
clc
repz
jmp
jae
add
add
add
lods
arpl
push
ljmp
mov
leave
nop
jmp
add
add
nop
add
cmp
arpl
clc
repz
jmp
jae
add
std
add
or
nop
mov
cld
jmp
jae
inc
jb
pop
add
add
mov
clc
repz
jmp
jae
ss
add
add
jne
add
clc
repz
jmp
jae
jle
add
add
shr
clc
repz
jmp
jae
sbb
jg
add
add
nop
add
test
jmp
jae
sub
std
fsubs
add
add
adc
outsl
inc
add
add
add
xchg
nop
add
lods
iret
mov
clc
repz
jmp
jae
push
sti
add
add
xor
xor
push
nop
push
mov
leave
nop
jmp
mov
fadds
nop
sti
xchg
add
mov
test
cld
clc
repz
jmp
jae
fwait
add
add
shrl
repz
clc
repz
jmp
jae
add
inc
add
add
cwtl
mov
jb
inc
add
inc
cld
pop
add
add
xchg
adc
ss
and
clc
repz
jmp
jae
push
add
add
add
ss
add
out
test
push
mov
xchg
ret
add
add
cmp
jp
xchg
push
clc
repz
jmp
jae
subb
or
mov
and
clc
repz
jmp
jae
add
imulb
test
nop
push
mov
leave
nop
jmp
addb
add
fstpl
mov
sbb
clc
repz
jmp
jae
add
add
test
ret
jg
clc
repz
jmp
jae
imul
hlt
addl
jmp
jae
adc
add
add
sub
insb
add
add
gs
clc
repz
jmp
jae
add
add
add
imul
add
cmpb
into
add
add
add
add
add
nop
jmp
cld
mov
add
add
add
jmp
jae
add
ret
add
add
pop
and
mov
and
pop
jle
add
add
push
or
add
add
adc
js
inc
add
test
add
arpl
repz
jmp
jae
fldl
nop
mov
add
add
mov
add
std
popa
clc
repz
jmp
jae
mov
ss
add
or
pop
add
jle
push
add
cld
jmp
jae
cmp
in
nop
roll
rorl
xor
clc
repz
jmp
jae
add
jg
add
add
pop
mov
push
mov
xchg
ret
add
mov
add
cmpsl
je
clc
repz
jmp
jae
add
addb
add
repz
jmp
jae
add
nop
add
add
pusha
clc
repz
jmp
jae
add
lods
add
ss
add
push
mov
clc
repz
jmp
jae
add
and
xor
mov
leave
nop
jmp
add
or
add
add
js
add
clc
repz
jmp
jae
nop
nop
testb
add
adc
pop
mov
clc
repz
jmp
jae
add
add
pop
mov
add
ss
dec
inc
mov
clc
repz
jmp
jae
cmp
pop
add
stos
pop
push
mov
xchg
ret
pop
cmp
xchg
sar
add
add
push
mov
mov
xchg
ret
add
push
add
into
pop
cwtl
sub
sti
jg
cmp
add
add
lods
lds
mov
leave
nop
jmp
mov
add
add
add
add
pop
push
push
mov
xchg
ret
or
add
xchg
ret
fwait
imul
add
orl
cmpl
add
arpl
add
add
fwait
push
mov
xchg
ret
xor
inc
add
roll
add
mov
xchg
ret
fldl
add
or
rcll
and
repz
jmp
jae
or
sbbl
ret
sbb
leave
nop
jmp
push
add
test
inc
mov
nop
push
mov
leave
nop
jmp
add
mov
imul
in
leave
nop
jmp
add
or
add
push
mov
xchg
ret
imul
inc
add
repz
jmp
jae
add
add
push
or
add
sar
cld
jmp
jae
add
add
add
add
pop
cld
push
scas
sub
dec
cmp
repz
jmp
jae
sub
push
add
sub
ss
mov
incl
js
inc
add
add
pop
push
and
std
xchg
cmpb
cld
push
mov
xchg
ret
add
adc
sub
jle
add
shrl
clc
repz
jmp
jae
add
pop
add
insb
add
add
clc
repz
jmp
jae
add
lods
add
roll
ficoml
jns
add
add
inc
cwtl
xchg
sbb
nop
mov
out
clc
repz
jmp
jae
roll
add
arpl
xchg
cld
insl
xor
clc
repz
jmp
jae
std
or
add
std
fwait
lods
ljmp
push
inc
add
cmp
add
xchg
nop
cwtl
imul
pop
arpl
fisubrs
add
add
je
add
clc
repz
jmp
jae
addl
fiadds
add
shrl
ret
gs
clc
repz
jmp
jae
add
add
add
fldl
ss
icebp
xorl
clc
repz
jmp
jae
imul
pop
push
mov
xchg
ret
fwait
add
inc
add
mov
adc
addl
movsb
lcall
nop
push
mov
leave
nop
jmp
insb
add
add
add
scas
add
test
fwait
push
mov
xchg
ret
add
ret
cmp
add
add
fwait
add
jmp
jae
add
add
mov
ss
jne
clc
repz
jmp
jae
scas
add
inc
add
add
imul
mov
leave
nop
jmp
cmp
add
add
add
in
sbb
add
cmpl
add
or
add
add
cmp
push
mov
leave
nop
jmp
mov
pop
add
nop
or
jg
add
cld
jmp
jae
xchg
roll
add
nop
add
sub
mov
push
mov
xchg
ret
fstpl
add
add
add
mov
inc
add
xor
sbb
cli
mov
mov
lock
dec
cmp
repz
jmp
jae
pop
add
xchg
xor
add
pop
mov
mov
xchg
ret
add
add
push
add
push
mov
xchg
ret
test
ret
add
add
mov
popa
mov
clc
repz
jmp
jae
add
add
icebp
ss
push
mov
xchg
ret
xor
add
jg
add
fidivrs
pop
nop
push
mov
leave
nop
jmp
xorb
xchg
add
push
add
add
outsb
and
in
add
add
add
sub
mov
mov
rep
push
mov
xchg
ret
add
or
add
xor
add
nop
push
mov
leave
nop
jmp
or
add
ss
add
fwait
ret
sti
ficomps
roll
sti
nop
push
mov
leave
nop
jmp
add
add
xchg
add
sbb
mov
xchg
ret
add
inc
add
add
add
sti
out
pop
push
push
mov
xchg
ret
test
cltd
test
and
add
repz
jmp
jae
ss
cmp
add
add
add
cld
jmp
jae
addb
add
jne
mov
ss
fwait
clc
repz
jmp
jae
add
fadds
push
cwtl
or
pop
add
mov
nop
push
mov
leave
nop
jmp
add
add
push
xchg
inc
push
dec
add
add
cli
dec
mov
clc
repz
jmp
jae
test
add
add
add
repz
jmp
jae
add
arpl
or
test
test
inc
push
add
xorb
xchg
ss
mov
add
add
fisttps
test
call
nop
jmp
cmp
add
cltd
xor
inc
add
add
stc
call
clc
repz
jmp
jae
nop
cld
ret
push
cmp
push
mov
xchg
ret
nop
or
mov
add
add
roll
jno
nop
push
mov
leave
nop
jmp
sbb
ss
add
adc
nop
push
mov
leave
nop
jmp
imul
test
cld
jmp
jae
pop
nop
lods
inc
roll
cwtl
add
fcoms
jne
clc
repz
jmp
jae
add
add
add
add
pop
clc
repz
jmp
jae
icebp
pop
rcr
sti
add
add
add
sti
push
add
nop
push
mov
leave
nop
jmp
fiadds
or
lods
add
xor
jmp
adc
xor
ss
or
add
or
adc
repz
jmp
jae
add
scas
test
and
add
clc
repz
jmp
jae
jg
add
sti
add
cltd
push
mov
les
add
add
repz
jmp
jae
xchg
add
xorb
cld
popf
xchg
clc
repz
jmp
jae
add
add
add
sub
add
jmp
dec
push
inc
add
add
add
scas
push
jne
jne
clc
repz
jmp
jae
add
add
roll
add
out
push
add
inc
push
pop
nop
xchg
add
ss
stos
stos
add
add
add
ret
clc
repz
jmp
jae
add
inc
cwtl
nop
icebp
nop
add
adc
cld
jmp
jae
add
cltd
add
add
add
add
repz
jmp
jae
nop
add
fiadds
fiadds
pushl
nop
push
mov
leave
nop
jmp
add
mov
mov
push
mov
xchg
ret
add
cmpb
test
aaa
push
clc
repz
jmp
jae
cld
jne
into
add
sub
cmpsb
je
add
push
mov
xchg
ret
pop
push
xor
add
add
add
inc
add
jne
clc
repz
jmp
jae
pop
cmp
out
jmp
nop
mov
jne
add
insb
nop
add
add
jb
xor
cld
jmp
jae
add
pop
add
add
jne
arpl
out
clc
repz
jmp
jae
add
andl
add
les
add
clc
repz
jmp
jae
jle
into
roll
imul
clc
repz
jmp
jae
jg
add
jb
add
push
ja
clc
repz
jmp
jae
addl
add
jle
ret
mov
clc
repz
jmp
jae
pop
add
add
fwait
push
mov
xchg
ret
add
add
add
or
mov
adc
push
mov
leave
nop
jmp
add
cmp
or
je
clc
repz
jmp
jae
cltd
adc
sahf
call
mov
leave
nop
jmp
in
test
add
mov
lret
clc
repz
jmp
jae
fwait
add
sub
add
add
cmp
nop
push
mov
leave
nop
jmp
add
subl
imul
cmp
ret
jb
jg
jb
add
cmp
add
loope
inc
add
add
in
cmp
xorl
jg
add
insb
nop
push
mov
leave
nop
jmp
fiadds
add
arpl
pop
clc
repz
jmp
jae
addb
add
add
sti
add
add
add
push
mov
leave
nop
jmp
add
add
pop
adc
add
add
add
and
pop
push
mov
xchg
ret
icebp
push
ret
add
add
ret
add
and
in
leave
nop
jmp
sarl
add
scas
add
jg
add
mov
add
repz
jmp
jae
push
add
add
icebp
pop
lods
test
repz
jmp
jae
xchg
pop
xchg
fsubs
jg
inc
int3
adc
pop
std
jne
clc
repz
jmp
jae
add
orb
clc
repz
jmp
jae
fadds
mov
insb
add
push
sub
clc
repz
jmp
jae
add
xor
cltd
jg
sahf
sbb
xor
nop
push
mov
leave
nop
jmp
imul
cmp
inc
push
clc
repz
jmp
jae
add
add
add
mov
add
add
jmp
jae
fiadds
add
insb
add
add
inc
jg
outsl
cmpw
nop
push
mov
leave
nop
jmp
add
add
add
mov
mov
clc
repz
jmp
jae
addb
add
mov
sar
repz
jmp
jae
add
add
add
in
add
push
mov
xchg
ret
add
orb
or
mov
add
dec
push
mov
add
adc
lahf
add
sub
adc
pop
push
movl
add
xchg
cld
add
nop
pop
push
fdivrs
xor
inc
inc
clc
repz
jmp
jae
xchg
std
arpl
jb
fiadds
add
pop
xchg
clc
repz
jmp
jae
sti
add
mov
mov
add
in
clc
repz
jmp
jae
sbb
imul
clc
repz
jmp
jae
jne
add
testb
pop
rep
nop
push
mov
leave
nop
jmp
or
xor
pop
add
pop
xor
jmp
jae
nop
add
push
add
jb
add
add
jne
clc
repz
jmp
jae
arpl
add
add
ret
xchg
xor
repz
subb
or
adc
add
pop
mov
clc
repz
jmp
jae
cltd
push
ret
add
pop
addb
push
pop
clc
repz
jmp
jae
add
nop
rcrl
add
push
ret
add
call
xchg
lahf
cli
andl
roll
int3
add
daa
pop
fld1
clc
repz
jmp
jae
add
arpl
add
fadds
jne
sub
cmp
nop
push
mov
leave
nop
jmp
add
jb
stos
add
add
mov
clc
repz
jmp
jae
addb
roll
add
inc
add
out
subl
push
mov
xchg
ret
stos
pop
add
add
sbb
clc
repz
jmp
jae
xorb
xor
clc
repz
jmp
jae
inc
adc
or
mov
clc
lahf
jmp
add
or
add
add
cmp
jne
add
mov
mov
inc
sbb
repz
jmp
jae
inc
add
add
scas
ffreep
shrb
jge,pt
add
add
add
add
daa
test
nop
push
mov
leave
nop
jmp
stos
add
ret
add
sar
cld
jmp
jae
fwait
fwait
add
add
roll
add
push
add
push
mov
xchg
ret
add
cwtl
add
neg
add
pop
dec
inc
clc
repz
jmp
jae
add
fadds
and
icebp
add
fistpl
push
mov
xchg
ret
fwait
add
add
imul
sahf
jb
add
add
shll
adc
xchg
fld1
clc
repz
jmp
jae
cwtl
and
add
mov
add
movb
cld
jmp
jae
and
pop
test
jne
xchg
nop
push
mov
leave
nop
jmp
arpl
add
push
add
add
add
add
clc
repz
jmp
jae
add
add
add
push
clc
repz
jmp
jae
jb
add
add
add
cld
jmp
jae
and
in
cltd
xorl
icebp
lea
clc
repz
jmp
jae
add
add
jne
sub
clc
repz
jmp
jae
add
mov
or
sbb
push
mov
xchg
ret
add
imul
imul
mov
clc
repz
jmp
jae
notb
add
repz
jmp
jae
std
adc
xchg
add
sti
fidivs
in
icebp
push
add
add
mov
cmp
lret
mov
sub
insl
mov
clc
repz
jmp
jae
test
add
gs
push
mov
xchg
ret
insb
xor
add
fdivrp
sti
mov
push
mov
leave
nop
jmp
icebp
or
addb
add
push
mov
repz
jmp
jae
add
fiadds
or
icebp
add
rcrl
mov
cmp
ret
add
add
nop
xchg
and
add
add
xor
inc
add
add
xorb
add
add
add
push
mov
xchg
ret
add
mov
sub
add
repz
nop
push
mov
leave
nop
jmp
mov
mov
lcall
stos
push
mov
xchg
ret
add
roll
imul
test
repz
jmp
jae
cld
imul
jbe
pushl
push
mov
xchg
ret
add
add
stos
add
inc
adc
push
mov
leave
nop
jmp
add
add
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
add
sbb
mov
clc
repz
jmp
jae
icebp
mov
adcb
xor
xorb
push
mov
leave
nop
jmp
imul
stos
imul
add
add
dec
push
clc
repz
jmp
jae
add
add
sbb
cmp
sub
inc
mov
dec
nop
push
mov
leave
nop
jmp
scas
or
mov
jle
flds
mov
leave
nop
jmp
imul
xchg
add
xor
fwait
clc
repz
jmp
jae
fisubs
add
add
loop
push
mov
xchg
ret
add
into
into
or
add
sbb
clc
repz
jmp
jae
add
push
jle
add
repz
jmp
jae
mov
add
arpl
add
imul
jae
std
or
add
roll
add
or
mov
xchg
ret
mov
add
xchg
add
adc
push
hlt
pop
cmp
push
mov
xchg
ret
add
add
fldl
adc
push
push
cmp
nop
push
mov
leave
nop
jmp
xchg
jg
fsubs
add
sbbb
in
leave
nop
jmp
xor
xchg
add
add
push
into
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
testb
sbb
sbb
push
mov
xchg
ret
inc
arpl
add
add
pop
clc
repz
jmp
jae
mov
add
add
mov
sub
push
mov
leave
nop
jmp
add
imul
inc
add
les
add
add
mov
add
repz
jmp
jae
add
adc
add
xor
repz
jmp
jae
sbb
sub
add
add
nop
jmp
add
add
addb
add
nop
push
mov
leave
nop
jmp
jg
icebp
ss
adc
add
jne
cmp
jmp
jae
jne
add
push
adc
xor
icebp
add
add
clc
repz
jmp
jae
arpl
arpl
add
mov
in
inc
add
add
subl
leave
nop
jmp
pop
add
add
cmp
aaa
jne
nop
push
mov
leave
nop
jmp
add
add
test
call
clc
repz
jmp
jae
ss
or
call
mov
xchg
ret
test
add
add
add
add
add
repz
jmp
jae
xchg
add
imul
dec
clc
dec
inc
clc
repz
jmp
jae
add
add
xchg
mov
clc
repz
jmp
jae
jle
sti
cwtl
add
scas
xchg
pop
clc
repz
jmp
jae
add
xchg
add
add
add
rep
nop
push
mov
leave
nop
jmp
cltd
push
sbb
add
add
add
pop
fistpl
repz
jmp
jae
add
add
add
add
incb
push
nop
push
mov
leave
nop
jmp
add
nop
add
add
icebp
fld1
push
mov
xchg
ret
addb
cmp
add
add
pusha
clc
repz
jmp
jae
add
stos
add
xchg
add
mov
add
repz
jmp
jae
adc
jg
cmp
add
inc
add
clc
repz
jmp
jae
xchg
add
nop
add
add
into
add
repz
jmp
jae
shll
xchg
cwtl
add
add
add
push
mov
leave
nop
jmp
std
nop
mov
jle
add
popa
push
nop
push
mov
leave
nop
jmp
ret
add
pop
add
inc
add
add
sbb
mov
xchg
ret
test
ret
insb
arpl
ret
adc
stos
sub
inc
add
add
and
and
mov
add
push
mov
xchg
ret
add
pop
mov
std
cmp
add
push
inc
stos
popf
pop
clc
repz
jmp
jae
lods
add
sti
mov
add
adc
mov
repz
jmp
jae
add
lods
nop
add
testb
mov
sbb
repz
jmp
jae
addl
nop
add
xchg
into
xchg
pop
push
mov
add
add
add
iret
add
outsl
add
add
sub
add
add
add
push
mov
xchg
ret
add
into
add
lods
hlt
jge
nop
push
mov
leave
nop
jmp
add
inc
add
fadds
add
add
mov
sbb
repz
jmp
jae
sti
sub
cmp
test
cld
jmp
jae
add
add
test
fwait
mov
cld
jmp
jae
imul
add
add
push
clc
repz
jmp
jae
adc
xchg
mov
adc
clc
jbe
out
nop
push
mov
leave
nop
jmp
add
cltd
add
nop
xchg
cmp
testl
sbb
incl
add
scas
into
add
icebp
scas
cmpb
ljmp
nop
xchg
cmpb
add
scas
xchg
add
push
push
mov
xchg
ret
add
xchg
fwait
add
fdivs
cmpb
sub
in
inc
add
add
dec
inc
push
add
rolb
mov
mov
or
add
sbbl
add
stos
cmp
add
leave
xor
clc
repz
jmp
jae
icebp
add
add
add
inc
push
or
xlat
lods
push
mov
xchg
ret
roll
jle
add
add
addl
add
sub
jmp
jae
add
xor
add
inc
cmp
xorl
cld
mov
add
inc
dec
nop
push
mov
leave
nop
jmp
add
addb
in
add
xor
je
lcall
inc
add
xchg
add
cld
mov
add
add
add
mov
leave
nop
push
mov
leave
nop
jmp
mov
add
add
add
loopne
mov
jmp
add
rcll
ret
xchg
fiadds
mov
add
nop
add
stos
and
push
mov
xchg
ret
inc
fiadds
add
add
test
rep
nop
push
mov
leave
nop
jmp
roll
addb
add
add
xor
clc
repz
jmp
jae
orb
inc
mov
shll
fwait
add
jne
clc
repz
jmp
jae
testb
jle
jle
rorl
jmp
jae
add
or
cltd
lods
push
add
jmp
jae
add
add
add
into
add
xchg
fiadds
lods
fisttps
test
add
clc
repz
jmp
jae
cmp
add
arpl
jne
inc
clc
repz
jmp
jae
mov
xor
add
add
fiadds
ficoms
cld
jmp
jae
add
test
fadds
add
mov
mov
clc
repz
jmp
jae
add
add
adc
add
xchg
xor
push
mov
xchg
ret
add
add
imul
xor
add
nop
push
mov
leave
nop
jmp
nop
add
test
sub
clc
repz
jmp
jae
add
add
add
lea
repz
jmp
jae
jle
add
add
add
stc
push
nop
push
mov
leave
nop
jmp
add
jb
add
add
add
cld
jmp
jae
add
add
add
mov
clc
repz
jmp
jae
fldl
xchg
or
add
and
mov
call
add
addl
lcall
add
jmp
clc
clc
repz
jmp
jae
adcb
nop
add
xor
nop
jmp
push
mov
xchg
ret
add
scas
fisubrs
jmp
push
mov
xchg
ret
add
add
add
dec
imul
add
andl
sti
sub
inc
add
add
push
mov
xchg
ret
ret
test
push
add
add
scas
add
add
add
jmp
jae
add
or
and
add
jb
add
clc
in
jmp
jmp
jae
fiadds
test
test
push
mov
xchg
ret
lods
rcll
scas
add
sbb
lret
xchg
pop
clc
repz
jmp
jae
push
sti
ret
pop
add
xchg
add
add
fisttpll
jmp
jae
add
add
jne
add
or
test
clc
repz
jmp
jae
insb
xchg
jne
add
add
nop
push
mov
leave
nop
jmp
fstpl
rcrl
cld
add
leave
div
nop
push
mov
leave
nop
jmp
jle
add
add
imul
or
and
add
imul
add
add
add
sub
imul
int
xchg
mov
dec
repz
addr16
clc
repz
jmp
jae
add
add
add
xchg
add
add
nop
mov
fwait
clc
repz
jmp
jae
cmp
add
add
add
add
jne
clc
repz
jmp
jae
xchg
add
add
add
fwait
clc
repz
jmp
jae
jg
in
add
add
clc
repz
jmp
jae
add
xchg
add
add
add
nop
push
mov
leave
nop
jmp
pop
add
add
ss
fdivs
add
mov
clc
repz
jmp
jae
add
add
pop
add
push
push
mov
xchg
ret
inc
mov
cwtl
add
cld
fadds
mov
mov
xchg
ret
mov
test
add
into
add
pop
clc
repz
jmp
jae
add
xchg
push
add
inc
pop
add
nop
push
mov
leave
nop
jmp
pop
subb
sub
sahf
jg
rorl
mov
xchg
ret
jne
scas
ret
addl
arpl
add
int
push
mov
xchg
ret
add
add
push
mov
cmpb
cld
jmp
jae
sti
fdivp
arpl
add
jmp
jae
add
add
cld
test
pop
xchg
pop
pop
clc
repz
jmp
jae
add
add
add
int3
and
test
loopne
call
nop
jmp
add
add
or
xor
clc
repz
jmp
jae
into
add
xchg
add
std
fisttpll
mov
push
mov
xchg
ret
cltd
push
imul
xchg
add
pop
add
add
add
add
xchg
mov
mov
add
push
mov
leave
nop
jmp
add
sti
add
add
jle
add
arpl
mov
push
mov
leave
nop
jmp
ret
add
nop
add
cld
add
xor
clc
repz
jmp
jae
add
pop
cmpl
in
fcoms
and
repz
jmp
jae
jb
add
add
push
clc
repz
jmp
jae
inc
add
xchg
add
fldl
add
inc
dec
lods
clc
repz
jmp
jae
lods
jg
arpl
divb
add
lods
add
sar
repz
jmp
jae
sbb
test
jbe
fistpl
push
mov
xchg
ret
fwait
stos
or
add
cmp
test
add
clc
repz
jmp
jae
ficoms
imul
push
mov
xchg
ret
add
sub
jg
xor
add
nop
add
jnp
clc
repz
jmp
jae
add
add
add
add
outsl
shl
clc
repz
jmp
jae
inc
add
into
cltd
icebp
or
cld
clc
repz
jmp
jae
add
add
mov
push
mov
add
push
std
lods
add
int
xchg
add
lahf
push
add
add
sbb
xor
adc
add
pop
jle
roll
add
add
sbb
repz
jmp
jae
xchg
add
negb
test
in
add
loope
inc
add
add
xor
add
add
cmp
loopne
out
sbb
repz
jmp
jae
add
cmp
cwtl
mov
push
clc
repz
jmp
jae
cmp
add
add
add
add
clc
repz
jmp
jae
lods
add
push
ss
pop
fwait
add
imul
cmp
cld
jmp
jae
add
add
add
aas
push
clc
repz
jmp
jae
add
negb
add
inc
push
mov
xchg
ret
add
add
add
add
sub
or
inc
add
push
add
add
inc
cmp
scas
ret
adc
lcall
jmp
jae
add
ret
nop
cs
or
mov
nop
push
mov
leave
nop
jmp
add
add
add
subl
mov
xchg
xchg
clc
repz
jmp
jae
test
arpl
add
add
add
push
mov
xchg
ret
sub
add
arpl
jg
push
add
push
outsb
cmpsb
out
pop
clc
repz
jmp
jae
xchg
inc
arpl
xchg
add
push
add
sub
repz
repz
jmp
jae
push
add
add
addb
icebp
add
loop
push
mov
leave
nop
jmp
add
add
add
or
cltd
add
test
add
add
repz
jmp
jae
xchg
arpl
add
add
clc
repz
jmp
jae
sti
scas
add
fiadds
add
add
dec
add
add
clc
repz
jmp
jae
add
cmp
push
adc
stos
fwait
clc
repz
jmp
jae
adcb
add
add
add
repz
jmp
jae
add
cmp
mov
inc
xor
not
clc
repz
jmp
jae
mov
fwait
pop
cld
add
add
sub
mov
jae
push
mov
leave
nop
jmp
cltd
add
mov
mov
xchg
call
clc
repz
jmp
jae
fwait
add
push
mov
jb
pushl
push
mov
xchg
ret
push
add
jb
add
xlat
jl
clc
repz
jmp
jae
add
jle
mov
or
mov
xchg
ret
adc
add
add
imul
add
add
lea
sbbb
clc
repz
jmp
jae
add
sbb
nop
push
mov
leave
nop
jmp
push
xor
pop
or
add
inc
test
add
add
repz
jmp
jae
fwait
icebp
add
pop
pusha
clc
repz
jmp
jae
addl
fstp
xor
jg
add
std
insl
mov
clc
repz
jmp
jae
add
add
add
add
cmp
repz
jmp
jae
add
adc
add
xchg
add
outsl
fistpl
push
mov
xchg
ret
add
pop
add
add
in
leave
nop
jmp
add
add
cmp
add
in
add
xor
mov
clc
repz
jmp
jae
pop
and
add
pop
inc
add
push
add
clc
repz
jmp
jae
ss
pop
add
pop
add
or
jne
push
mov
xchg
ret
mov
add
adcb
int3
test
jmp
jae
nop
xchg
sbbb
inc
inc
add
cmp
adc
nop
jmp
push
add
add
into
xchg
fsubrs
inc
mov
mov
leave
nop
jmp
stos
add
add
add
add
jmp
jae
add
xchg
or
into
add
inc
add
test
push
mov
leave
nop
jmp
add
mov
std
push
clc
repz
jmp
jae
adc
add
loop
imul
nop
push
mov
leave
nop
jmp
or
add
add
add
or
test
clc
clc
repz
jmp
jae
testb
jne
add
pop
push
push
mov
xchg
ret
ret
add
add
add
lods
rcrl
push
push
mov
xchg
ret
add
add
lods
add
add
mov
cmp
clc
repz
jmp
jae
add
add
jbe
jne
clc
repz
jmp
jae
inc
mov
jne
add
nop
push
mov
leave
nop
jmp
adc
or
test
scas
mov
mov
mov
xchg
ret
mov
jle
sbb
cltd
add
or
add
or
add
add
fistpl
clc
repz
jmp
jae
add
std
cmp
jne
icebp
icebp
add
int
out
out
clc
clc
repz
jmp
jae
add
add
imul
add
add
add
orl
imul
or
nop
jmp
push
scas
add
add
nop
sbb
fdivr
repz
jmp
jae
fnstsw
add
add
cld
add
clc
repz
jmp
jae
rcr
add
test
or
pusha
add
add
ss
push
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
add
xchg
sub
in
leave
nop
jmp
fidivrs
imul
addl
adc
sbb
and
subb
sti
add
cwtl
xchg
add
mov
mov
clc
repz
jmp
jae
test
pop
in
lret
add
clc
repz
jmp
jae
imul
std
inc
xor
imul
nop
push
mov
leave
nop
jmp
icebp
push
xchg
std
stos
cmp
xchg
roll
pop
inc
add
test
add
mov
clc
repz
jmp
jae
cltd
add
cltd
add
add
je
fistpl
clc
repz
jmp
jae
or
or
or
add
pop
mov
rclb
pop
inc
add
add
shll
xchg
push
add
rclb
sbbb
xchg
ret
add
add
add
fwait
test
mov
xchg
ret
add
add
jne
arpl
add
add
stos
push
clc
repz
jmp
jae
sbb
imul
inc
fisttpll
add
add
test
mov
leave
nop
jmp
add
add
fisubs
dec
test
push
mov
xchg
ret
and
add
add
add
add
add
jne
clc
repz
jmp
jae
add
add
imul
add
add
repz
jmp
jae
imul
fld1
nop
push
mov
leave
nop
jmp
scas
or
add
add
ret
clc
repz
jmp
jae
add
add
mov
add
add
fadds
adc
add
fiadds
add
jb
rcrl
add
cmp
cld
jmp
jae
test
fsubrs
add
adc
clc
repz
jmp
jae
imul
add
test
jmp
jae
add
mov
add
icebp
add
shr
clc
repz
jmp
jae
ret
stos
add
adc
pop
imul
leave
nop
jmp
add
jb
sub
addb
add
mov
clc
repz
jmp
jae
add
add
xor
adc
push
clc
repz
jmp
jae
add
push
add
xchg
add
mov
clc
repz
jmp
jae
add
add
add
ret
add
add
add
push
mov
leave
nop
jmp
add
add
add
repz
clc
repz
jmp
jae
add
xchg
or
roll
cmc
push
mov
add
inc
add
imul
cli
inc
dec
add
add
push
mov
xchg
ret
add
add
scas
add
add
addr16
nop
push
mov
leave
nop
jmp
add
cmp
pop
arpl
push
push
clc
repz
jmp
jae
add
mov
mov
push
clc
repz
jmp
jae
arpl
add
jne
or
fisttpll
jg
add
test
add
add
add
pop
lods
mov
clc
repz
jmp
jae
jb
add
popa
clc
repz
jmp
jae
ret
rcll
xchg
nop
add
mov
mov
leave
nop
jmp
cld
cld
add
add
or
cmp
add
stos
bound
add
lret
pop
clc
repz
jmp
jae
test
pop
add
sbb
or
fisttpll
cld
jmp
jae
or
add
subb
aas
lea
clc
repz
jmp
jae
jne
add
or
xor
add
repnz
mov
cmp
ret
add
add
add
dec
push
clc
repz
jmp
jae
ret
add
add
add
out
push
clc
repz
jmp
jae
add
cmp
add
imul
jmp
add
add
mov
add
lods
cs
add
mov
clc
repz
jmp
jae
ror
add
add
or
clc
repz
jmp
jae
test
cld
add
xchg
add
adc
push
mov
leave
nop
jmp
inc
xchg
mov
pop
add
or
fstl
stc
push
inc
add
cld
ret
in
ficomps
add
in
movswl
nop
push
mov
leave
nop
jmp
roll
ret
add
fwait
add
rorl
repz
jmp
jae
fiadds
pop
xchg
sub
add
les
sbb
nop
push
mov
leave
nop
jmp
cwtl
add
cmp
add
sbb
push
clc
repz
jmp
jae
add
addl
shll
push
insb
scas
enter
mov
clc
repz
jmp
jae
add
add
or
decl
clc
repz
jmp
jae
add
jb
ret
sbbb
jle
clc
repz
jmp
jae
cwtl
xchg
nop
jne
pop
add
adc
or
xbegin
jae
subl
scas
add
jne
ret
nop
push
mov
leave
nop
jmp
addb
pop
add
mov
add
icebp
add
test
cld
jmp
jae
pop
push
add
mov
add
add
clc
repz
jmp
jae
adc
add
je
add
clc
repz
jmp
jae
add
add
aas
push
clc
repz
jmp
jae
add
add
add
add
add
add
ret
mov
clc
repz
jmp
jae
andb
adcl
movsl
je
clc
repz
jmp
jae
or
add
xor
push
mov
lods
out
add
sub
add
es
sbb
lret
testl
nop
push
mov
leave
nop
jmp
add
add
lods
add
fisubrl
repz
jmp
jae
add
add
lods
add
jns
inc
cmp
mov
xchg
ret
add
or
add
sub
in
sub
test
add
add
mov
add
roll
mov
xchg
ret
inc
add
cs
sbb
xorb
cmpl
nop
push
mov
leave
nop
jmp
jle
inc
pop
add
add
jne
push
mov
xchg
ret
test
push
xchg
add
fadds
xor
jne
lods
and
imul
cld
jmp
jae
test
mov
cmp
neg
stos
clc
repz
jmp
jae
add
insb
jle
nop
addb
mov
add
push
mov
xchg
ret
add
add
push
add
cltd
add
push
mov
xchg
ret
add
fwait
add
push
cmp
jb
or
sub
repz
jmp
jae
add
add
xchg
fwait
push
add
lea
push
mov
xchg
ret
add
xchg
pop
add
push
loop
jge
clc
repz
jmp
jae
add
cmp
cmp
pop
inc
add
movsl
push
push
mov
xchg
ret
sti
ss
fldl
add
test
test
sar
clc
repz
jmp
jae
add
test
addr16
push
mov
xchg
ret
pop
add
cwtl
add
add
xchg
push
add
push
loopne
mov
xchg
ret
and
add
xchg
cs
mov
clc
repz
jmp
jae
add
or
add
xchg
ficomps
lret
mov
leave
nop
jmp
scas
ss
add
add
add
imul
clc
repz
jmp
jae
in
add
inc
add
call
add
nop
push
mov
leave
nop
jmp
cmp
add
add
push
clc
repz
jmp
jae
into
cld
add
jb
and
arpl
std
add
les
push
mov
xchg
ret
xchg
add
cld
inc
add
xchg
sti
nop
negb
lret
test
xchg
ret
insb
arpl
cwtl
imul
imul
jmp
mov
xchg
ret
xchg
add
test
add
lods
clc
repz
jmp
jae
xchg
imul
add
push
xchg
cwtl
popa
leave
clc
repz
jmp
jae
shrl
addb
xchg
add
shr
mov
clc
repz
jmp
jae
push
add
arpl
repz
jmp
jae
add
add
pop
call
push
mov
xchg
ret
sub
nop
xchg
push
mulb
cld
and
push
inc
mov
nop
push
mov
leave
nop
jmp
and
negb
add
mov
push
mov
and
push
mov
leave
nop
jmp
sti
icebp
add
add
shrl
repz
jmp
jae
insb
neg
add
add
das
test
push
mov
xchg
ret
add
add
fadds
jne
addb
add
add
pop
push
mov
xchg
ret
cld
icebp
cmp
cwtl
add
add
clc
repz
jmp
jae
xchg
icebp
cmp
add
add
add
add
and
call
nop
jmp
add
xchg
add
imul
add
dec
fdivrs
cld
jmp
jae
add
add
add
cmpsl
pop
push
mov
xchg
ret
fiadds
add
ret
adc
add
fld1
push
mov
xchg
ret
or
cmp
add
add
add
int
clc
repz
jmp
jae
add
roll
add
sbb
jg
add
insb
add
push
xorb
nop
imul
sbb
clc
repz
jmp
jae
sbbb
add
nop
inc
test
in
push
mov
xchg
ret
inc
add
sub
push
add
and
add
enter
jmp
jae
inc
add
cmpl
cwtl
add
cwtl
add
jmp
jae
add
sub
inc
xor
add
test
mov
xchg
ret
add
add
fldl
add
in
pop
push
jg
pop
add
cltd
xlat
or
lea
pop
popl
sbbb
int3
or
cli
ss
add
inc
and
add
add
ret
movsl
fists
mov
jge
add
jg
xchg
sub
in
jnp
cmp
loop
dec
aaa
jo
or
inc
xchg
and
push
test
jge
push
pop
dec
mov
aad
imul
shl
mov
stos
adc
arpl
rolb
add
add
pop
pop
push
pop
jbe
add
add
add
ja
shrb
nop
or
add
add
add
cmpl
je
das
scas
loop
add
loopne
jp
jns
jb
sbb
clc
je
out
lds
cmc
addb
mov
or
mov
cmp
add
add
mov
jmp
add
jecxz
in
pop
jp
push
mov
outsb
leave
pop
adc
inc
fwait
into
pop
mov
add
adc
in
xchg
imul
jno
imul
gs
jecxz
ljmp
in
roll
scas
bound
daa
aas
xchg
daa
outsl
xor
mov
mov
andb
add
add
mov
lcall
add
roll
add
add
ds
mov
outsb
jecxz
add
add
add
lods
outsb
pop
sbb
and
mov
mov
adc
add
add
sbb
mov
push
sarb
ret
push
jns
add
add
lahf
and
mov
iret
jne
add
add
add
or
out
test
stos
xchg
xchg
fldt
mov
into
into
xchg
inc
rorl
stc
and
mov
mov
jns
fistpl
out
cmpsb
and
mov
add
add
in
loop
jg
call
or
repnz
jo
inc
inc
xor
ret
push
ds
fsubrs
js
leave
sbb
mov
and
add
add
xchg
mov
lods
jns
pop
add
add
add
lods
mov
push
adc
scas
cmpsl
out
xchg
add
enter
aad
add
shll
iret
stc
int
loop
lret
pop
dec
dec
add
cmp
xchg
fistps
or
pop
mov
push
xchg
jmp
sbb
add
jno
add
nop
jl
jge
ljmp
mov
div
mov
imul
jno
mov
pop
jne
jb
push
push
test
popf
sub
add
add
adc
cmpsb
jle
stos
adc
jno
and
inc
sti
push
add
add
aad
mov
adc
push
fdivrl
les
outsl
push
pusha
add
add
in
fstpt
sarl
add
push
xchg
sub
js
add
add
dec
and
mov
jecxz
es
pop
and
add
add
fisubrl
mov
jno
mov
adc
add
add
mov
add
aaa
sahf
sub
add
add
stc
xchg
push
fidivl
inc
mov
add
add
dec
pop
ljmp
lods
or
mov
push
fldl2e
sub
push
jbe
mov
inc
add
mov
ret
pop
or
mov
sahf
jne
jle
pop
mov
add
push
sbb
mov
rep
loopne
or
add
add
mov
enter
std
pop
xchg
ljmp
xor
dec
xor
sbb
sub
add
add
or
add
add
adc
aad
add
mov
add
add
stos
aad
and
add
mov
outsb
inc
popa
daa
mov
cmp
mov
cmp
push
jne
mov
mov
cs
push
sbbl
mov
arpl
pop
pop
adc
xor
cmp
mov
add
cmp
fcoml
ja
and
add
add
mov
pop
lds
sbb
pushf
xlat
jecxz
add
bswap
inc
add
cltd
daa
lret
sbb
cltd
cmc
xchg
insb
add
add
push
in
inc
inc
sbb
mov
adc
pop
add
xchg
or
lea
cltd
xchg
lcall
dec
fidivl
inc
dec
add
mov
dec
add
add
out
sbb
bts
sarb
ficomps
mov
ds
mov
add
out
not
outsb
lahf
cmp
loope
add
mov
add
add
mov
add
add
add
add
in
sbbb
jge
jecxz
les
out
adcb
push
imull
data16
sub
add
add
or
dec
out
mov
dec
sub
add
testb
add
cs
dec
mov
hlt
lahf
lahf
or
add
add
mull
jns
popa
scas
movsl
scas
icebp
dec
add
bnd
shl
lods
add
stc
jb
sbb
pop
jno
push
cmpsb
rcrb
add
add
add
cltd
pushl
and
add
add
sub
mov
lahf
scas
popf
insl
scas
mov
hlt
jo
arpl
add
call
mov
mov
lret
repz
push
adc
insb
add
fistpll
mov
in
mov
dec
dec
add
add
sbb
adcb
ret
push
in
cmp
push
xor
iret
jne
mov
and
in
sbb
call
add
sbb
add
xchg
mov
cmc
ja
shrb
add
mov
sub
insb
add
add
xchg
clc
repz
add
cld
xchg
sbb
add
add
je
or
add
add
mov
add
push
test
idivl
sti
pop
add
mov
dec
add
xor
add
repz
push
cmp
fimull
in
xor
das
roll
sahf
jl
jnp
inc
add
push
daa
in
mov
add
cmp
add
add
fimull
loopne
mov
es
mov
mov
out
jecxz
push
cs
ret
cwtl
and
add
add
mov
shrl
jbe
out
sbb
movsl
cmp
push
add
jl
imul
mov
into
sti
mov
inc
mov
and
mov
sub
mov
jne
stc
std
mov
mov
add
dec
pusha
add
add
fcomps
dec
add
add
mov
mov
mov
adc
lcall
push
lcall
imul
mov
inc
push
push
repnz
das
adc
shrb
add
pop
pop
int
daa
sbb
add
ret
or
mov
adc
cmp
add
add
mov
out
add
add
in
mov
lcall
into
push
test
add
pop
inc
cmp
jno
inc
add
add
punpcklwd
add
jmp
add
add
cmp
testb
mov
stc
insl
add
les
add
add
cmc
mov
add
push
inc
sbb
lcall
test
add
aaa
lret
scas
xor
add
in
loope
mov
jg
jne
testl
xchg
sbb
fldl
add
add
xor
insb
add
icebp
xchg
cld
mov
or
mov
cmp
add
nop
push
sub
loop
int3
hlt
and
mov
mov
jp
and
out
dec
sub
mov
mov
add
leave
jbe
mov
out
dec
add
add
cmpsb
test
sarl
jns
mov
add
push
ret
xor
push
push
cmp
xchg
enter
push
inc
push
out
loop
push
adc
xchg
cld
bound
mov
pop
or
shll
add
add
clc
lret
cmpsl
pop
push
in
and
fwait
addr16
cmp
clc
lods
inc
lea
pop
mov
xchg
push
loopne
ljmp
add
cmpsl
adc
add
adcb
pushf
fwait
xor
daa
push
vcvtdq2ps
mov
popa
push
mov
enter
test
mov
jmp
cmp
pop
pop
xor
sbb
dec
jecxz
push
mov
add
mov
or
popa
mov
jg
inc
add
cmpsb
sub
popa
xchg
out
fnstcw
cltd
add
push
je
pop
and
mov
jb
inc
je
loope
add
lods
rcrl
addb
leave
xchg
adc
jno
data16
mov
add
mov
movsl
jns
mov
jecxz
push
iret
outsl
testl
sbb
xor
add
stos
add
mov
mov
sub
add
add
js
add
add
add
push
mov
pop
test
add
add
push
cmp
add
add
add
mov
cld
inc
jb
or
jbe
sbb
adc
andb
cmp
pop
jo
xchg
insb
add
add
les
shll
pop
xor
dec
je
xor
repnz
mov
sub
add
add
mov
jnp
shlb
push
fstpt
mov
es
lret
movsb
jnp
jbe
lods
xchg
call
out
adc
mov
mov
popf
dec
add
mov
sub
jecxz
add
add
scas
mov
add
stc
repnz
sbb
cmp
sub
or
add
add
out
mov
stc
fistpll
add
sahf
pop
lods
add
aaa
push
loop
ja
push
rorb
add
add
jg
xchg
loop
add
pop
xchg
cwtl
fistl
add
add
add
pop
fidivs
pop
nop
lods
ret
or
add
jno
mov
add
add
or
push
jbe
daa
adc
cmpsb
add
mov
jo
push
jns
loopne
xlat
ja
repnz
add
add
clc
mov
in
fcompl
enter
add
pop
rorl
fbstp
test
arpl
jno
jae
roll
mov
add
add
sub
add
add
repz
add
cli
or
mov
add
add
cmp
mov
add
add
adc
call
dec
sub
popa
aam
dec
clc
and
popf
lds
sub
jno
mov
xchg
jae
push
xchg
and
mov
fimuls
add
add
adcl
pop
mov
scas
inc
mov
jp
jae
push
aaa
xchg
adc
push
ljmp
and
dec
adc
xor
aaa
push
sub
push
and
out
iret
and
lock
cmpsl
or
sub
aas
add
loope
add
in
push
push
ja
lahf
inc
repz
and
add
adc
subl
add
sbb
lret
arpl
arpl
sub
lcall
jg
mov
int3
ret
or
mov
mov
fdivrs
push
cmp
pop
sub
add
lret
cmp
cld
arpl
imul
jnp
cmc
inc
cmp
in
lahf
lea
out
mov
dec
mov
shlb
icebp
rolb
cmp
movsb
hlt
jno
les
sarl
test
add
out
mov
sbb
lcall
add
and
add
add
mov
dec
mov
add
pop
cld
ss
test
add
add
jne
enter
add
fmull
mov
add
add
add
data16
cmp
xorl
dec
add
add
add
mov
fnstcw
fdivs
rcrb
test
mov
scas
push
dec
aas
ss
mov
pop
sbb
mov
insl
push
mov
push
inc
test
add
xor
in
xlat
insb
add
add
std
stos
into
mov
shll
add
add
scas
mov
test
inc
add
add
xchg
jle
dec
outsl
mov
gs
addr16
xchg
lahf
mov
lcall
aas
test
call
push
inc
dec
sbb
rolb
cs
stc
bound
js
jns
push
arpl
add
fwait
push
fcomps
inc
add
add
ja
aam
in
daa
sbb
add
add
pop
add
push
sub
xchg
mov
jne
mov
jmp
add
push
mov
loopne
and
add
add
mov
push
pop
lret
mov
stos
in
lds
int
cmpsl
add
test
cli
xchg
xor
ret
xor
inc
loop
jbe
xchg
orl
in
xchg
add
lds
push
fadds
cld
movsl
ret
xor
js
xchg
push
sahf
repnz
pop
fdivrs
inc
repnz
push
xor
sbb
jo
fsubl
outsl
test
fyl2x
ficomps
les
mov
test
mov
jge
out
cld
add
add
in
cld
fidivs
loopne
mov
pop
cmpsb
jbe
xchg
sub
mov
mov
aas
js
clc
xchg
int
lock
jmp
add
mov
add
add
cmp
push
pop
adc
arpl
jnp
cltd
or
push
xchg
jmp
mov
mov
mov
dec
popf
sub
in
add
sub
add
add
std
hlt
ret
cmp
dec
mov
dec
add
add
add
jbe
cld
mov
scas
cli
test
les
add
push
jge
data16
push
fidivrl
int3
jae
sbb
rcr
insl
push
pop
mov
andb
dec
dec
mov
pop
add
add
lret
mov
in
imul
mov
cmp
fwait
push
pop
les
add
add
cmp
inc
mov
cmova
pop
push
js
sbb
and
jl
mov
mov
jb
incl
add
addr16
adc
mov
or
out
sti
sub
sbb
pop
pop
mov
lods
pop
cld
xchg
or
jl
and
fwait
push
rol
pop
add
jle
add
add
movsb
stc
daa
jo
dec
into
pop
adcb
sub
popf
mov
push
xor
push
or
mov
add
enter
push
inc
add
and
add
add
loopne
sarb
cltd
test
xchg
stos
rol
cmp
ds
mov
andb
testl
iret
push
dec
orl
adc
and
pop
pop
lret
dec
xor
inc
mov
repz
hlt
addr16
inc
pop
mov
insl
insb
add
insb
add
add
mov
mov
adc
lods
test
addr16
push
sahf
sub
mov
pop
jge
dec
jmp
xchg
add
aas
int3
mov
push
orb
sbb
lock
or
lea
dec
add
push
mov
add
cmp
sub
lock
pop
fcompl
push
movsb
and
dec
sbb
sbb
xchg
in
sub
add
add
jbe
icebp
push
sahf
and
fistpl
mov
dec
dec
push
pop
stc
push
cmp
jno
lret
dec
popf
add
fnstenv
pop
and
add
add
and
add
dec
add
add
ljmp
mov
sub
sub
mov
push
roll
add
add
loopne
xchg
xchg
inc
xchg
mov
decl
add
cltd
stos
out
mov
pop
inc
or
iret
sub
adc
add
add
add
add
or
add
add
les
mov
fsubrl
test
cmp
push
ficomps
push
lcall
mov
out
pop
mov
mov
out
fnstcw
pop
sbb
add
rcll
add
data16
xchg
xchg
rcrb
jbe
add
add
js
fdivp
ficoms
adc
sub
add
add
ja
adc
add
add
jnp
push
std
lods
sub
mov
rorl
sub
add
add
sbb
add
enter
cmpsl
sub
xchg
xor
int
addr16
mov
add
and
xchg
inc
add
add
push
std
jns
sbb
inc
fwait
jecxz
add
add
add
cmc
stc
xlat
out
pop
jg
pop
push
ds
adc
add
or
adc
lds
gs
mov
push
cmp
out
adc
scas
xchg
mov
jp
cmp
mov
cltd
fisubs
lcall
sub
add
fldt
aaa
xor
add
add
pop
mov
mov
leave
adc
in
or
aaa
shll
pop
lock
mov
jae
sbb
test
sub
js
add
add
push
xchg
add
mov
in
adc
cmpsl
and
add
add
mov
mov
add
add
cltd
pushl
push
sub
add
add
idiv
aam
add
add
push
xchg
xor
movsb
cmpsl
sbb
int3
ror
adc
add
adc
in
leave
insb
add
aaa
das
andl
sbb
shll
dec
add
add
add
cld
stc
je
jne
pop
push
jne
ss
xchg
mov
filds
mov
add
add
testb
dec
ret
insb
add
mov
add
add
gs
add
add
lret
mov
add
add
jge
aaa
mov
out
xchg
aaa
pop
xor
std
rcrl
lods
in
mov
flds
xchg
push
movsb
imul
push
lcall
mov
add
add
and
add
cld
inc
mov
popf
mov
add
add
add
pushf
popa
push
adc
outsb
popf
add
addb
out
lahf
inc
das
rcll
push
pop
pop
aam
sub
add
add
test
inc
aam
and
add
add
lock
fcompl
testb
add
outsl
scas
mov
cmp
daa
lds
add
das
sub
jo
dec
inc
add
add
cwtl
test
adc
filds
mov
xor
and
add
add
cwtl
frstor
xor
data16
add
mov
add
out
xchg
jg
ljmp
inc
les
sti
movsb
inc
dec
add
out
cli
daa
repz
pusha
add
add
mov
stc
inc
push
jbe
aas
pushf
and
jnp
decl
jne
pop
fdivs
add
add
iret
or
cmp
adc
mov
fdivr
dec
loop,pn
ja
sahf
push
add
add
add
cmp
xchg
dec
cmp
add
lret
movsb
test
push
xchg
inc
add
popf
xchg
mov
dec
shll
sbb
add
cmp
jne
lods
int3
aas
adc
xor
add
add
mov
add
mov
rorb
add
add
adc
notb
pop
test
nop
outsb
stos
push
js
popf
sub
leave
adc
push
lsl
movsl
cmp
add
add
popa
rcrl
in
pop
mov
push
pop
pop
lds
sbb
outsb
sbb
inc
fcmovnu
mov
das
mov
add
std
push
adc
mov
pop
pop
jno
in
push
mov
push
push
sub
add
add
cmpsl
lahf
mov
lock
popa
add
push
pushf
scas
cmpsl
cmp
out
cmpsl
js
pop
test
nop
adc
mov
jbe
mov
fsubs
adc
or
lret
jnp
dec
jnp
lahf
jo
std
cmp
add
int
mov
out
aad
lret
mov
push
adc
sarl
scas
cmc
xchg
xchg
xchg
cmpsb
sub
add
dec
mov
cmp
pop
lock
adc
outsb
or
negl
loop
jbe
mov
jge
incb
imul
add
add
mov
jle
stc
cmc
iret
rcrl
test
int
jle
das
lods
mov
inc
loope
fcomi
sub
mov
cmp
inc
cmp
imul
addr16
loop
sbb
movsb
in
add
add
add
test
cmc
xlat
jnp
loopne
xchg
mov
insb
add
in
cmpsl
mov
dec
ret
lret
int
mov
push
stos
inc
push
pop
and
add
pop
inc
dec
push
dec
into
sub
add
add
jne
subl
add
sub
mov
mov
ljmp
xchg
pop
lret
sub
inc
ficomps
pop
test
xchg
mov
sub
mov
xor
imul
and
mov
dec
int3
out
mov
push
sbb
jmp
shr
dec
and
add
mov
add
cmp
pop
push
jno
idivb
cwtl
jnp
dec
add
jo
subl
jb
fmulp
adc
mov
popl
jno
es
dec
adc
outsl
ret
add
add
fwait
mov
imul
xor
popa
cli
pop
sbb
repz
fwait
std
orb
mov
add
call
mov
popa
pop
sub
sbb
add
imul
aam
add
pop
outsb
fwait
pusha
add
add
ds
shll
rcll
test
scas
mov
and
add
add
jne
sti
imul
mov
scas
mov
and
mov
xor
ljmp
lods
ret
mov
add
js
stc
lods
fwait
sarl
and
in
add
mov
pop
repnz
pop
flds
add
add
adc
mov
popf
mov
data16
mov
arpl
loope
sbb
sub
jmp
add
jo
sub
and
rcrl
rorb
leave
jmp
add
jle
mov
or
sbbl
add
add
dec
inc
add
add
xchg
sub
mov
mov
cmp
aas
xor
fsubs
test
ljmp
mov
movsb
sub
mov
and
add
add
add
mov
mov
inc
push
ja
mov
mov
add
add
cs
insb
add
add
mov
es
out
mov
test
mov
add
js
adc
mov
inc
add
add
sbb
rcll
add
adc
imul
add
mov
xor
ret
ret
sahf
cmpps
cs
mov
mov
inc
rorb
stc
mov
add
add
adc
orb
or
aas
xchg
stos
sti
and
mov
add
add
xchg
mov
test
add
sbbl
and
xchg
dec
lods
mov
iret
inc
add
add
push
jo
jp
and
add
add
add
add
dec
repnz
mov
scas
jae
cmp
sbb
ljmp
in
in
mov
add
sahf
and
dec
lock
jb
push
mov
pusha
add
add
cld
mov
mov
insl
dec
sub
push
inc
jmp
add
ljmp
cmpsb
in
mov
hlt
adc
add
xor
add
icebp
cmc
mov
sbb
add
add
mov
xchg
mov
jg
nop
imul
sub
shrl
mov
sahf
xchg
mov
or
jg
and
test
pushl
dec
jb
popa
enter
cwtl
fwait
xorb
inc
bound
or
add
shll
scas
iret
jb
xor
jns
sbb
outsb
pop
adc
add
add
or
mov
mov
cmc
lea
mov
dec
add
cli
dec
add
add
add
or
add
add
pop
pop
outsb
popa
pop
test
jg
add
add
adc
mov
jno
je
test
les
inc
mov
sbb
add
push
std
inc
add
add
lcall
pop
loope
fsts
xor
push
jnp
xchg
mov
push
adc
adc
sahf
int
les
add
mov
jb
arpl
jnp
push
pop
icebp
imul
sub
add
jecxz
ja
xor
stos
mov
jl
stc
jne
ret
add
push
jb
mov
pop
imul
add
add
ffree
push
fisttpll
add
dec
sub
dec
add
add
mov
lods
pop
lcall
stos
aad
rcl
cmp
jl
cmp
shr
cmpsl
arpl
fdivr
icebp
out
mov
xchg
fcoms
lahf
mov
add
add
cmp
or
add
add
fcoml
repz
dec
stos
movsl
dec
mov
mov
xchg
cwtl
enter
ss
mov
repz
push
pop
mov
jp
dec
in
mov
add
add
popa
mov
aaa
subb
pop
fnstsw
push
stos
push
fsubrl
movsb
pop
shll
sbb
dec
add
add
lea
add
jmp
add
pop
aas
icebp
inc
mov
out
push
mov
or
jecxz
add
add
add
inc
and
add
add
add
jno
dec
insl
pop
sar
testb
mov
pop
ss
jg
push
pop
pop
jno
popf
gs
in
push
pop
mov
jno
ret
push
popa
mov
add
mov
jns
aam
dec
fistpl
pop
cmpsl
mov
ss
loopne
and
add
add
sti
fsub
je
add
add
add
pop
push
mov
pop
test
fsubrs
jno
mov
mov
out
sahf
aad
loopne
xor
jle
loop
dec
int
ss
std
jg
popa
daa
mov
repnz
icebp
cld
dec
dec
add
or
add
add
lock
dec
mov
xchg
iret
repz
add
jns
cmpsl
cmp
mov
fdivrl
fcmovb
mov
out
xchg
aad
xchg
rolb
add
sub
or
add
add
aaa
pop
dec
pushl
add
arpl
sbb
aam
cmp
add
shlb
and
out
mov
mov
pop
loopne
repz
push
out
insb
add
and
lods
bound
outsl
out
jae
gs
sti
jns
jmp
test
dec
insb
add
add
mov
rorl
movsl
inc
add
add
out
aam
jne
sbbb
add
xchg
sbb
sbb
add
rcrb
add
mov
or
add
add
jno
add
mov
add
push
push
ret
xchg
sbb
and
mov
mov
call
js
sub
cmp
loop
fisttpl
add
add
lea
mov
pop
in
enter
jbe
xchg
into
clc
or
add
add
add
add
add
int
sbb
fucomi
sbb
add
mov
adc
fcomps
and
test
jo
sbb
mov
mov
testl
add
mov
sbb
cmp
pop
or
and
add
add
mov
jne
cld
repnz
lea
xor
or
add
add
sbb
jl
xor
insl
aad
mov
movsb
add
mov
add
add
xor
and
mov
icebp
sub
bound
mov
add
add
push
ficompl
lock
mov
scas
in
xchg
std
std
inc
cmp
repnz
pop
mov
je
push
lea
aam
out
jae
push
stos
out
jns
mov
jg
movsl
pusha
add
add
push
mov
arpl
pop
testl
rdpmc
mov
push
xor
mov
add
add
bswap
icebp
pop
push
mov
aam
mov
and
or
jmp
mov
insl
inc
add
fsubrs
leave
movb
fdiv
das
pop
mov
cmc
mov
lock
ret
sbb
mov
or
mov
mov
fsubrs
mov
test
sti
fstl
add
adc
ss
outsl
ret
sbb
add
add
insb
add
add
mov
add
icebp
mov
cmp
ss
xor
insb
add
mov
dec
add
mov
add
add
mov
pop
ficoms
dec
pop
push
loopne
imull
cmp
sahf
into
inc
lahf
outsb
xor
and
mov
add
add
jne
pop
inc
ljmp
add
fldenv
cli
xor
out
ljmp
jns
xchg
cwtl
mov
adc
add
leave
and
add
add
mov
sbbb
mov
xchg
xlat
ljmp
xor
aam
repz
out
mov
add
xlat
sarb
push
dec
add
cmp
adc
sub
mov
cmp
inc
aam
pop
push
or
add
add
adc
fmuls
ret
lds
ja
inc
movsl
dec
jp
jbe
jp
test
jb
lods
sbb
add
out
add
sahf
outsl
jmp
lods
jmp
cs
add
dec
add
add
jp
enter
inc
xor
in
ljmp
and
mov
mov
push
addr16
ret
inc
cmp
mov
leave
js
xor
add
add
pushf
jecxz
cmp
mov
add
notl
cmpsl
lods
pop
cmpsb
popf
jnp
mov
movb
add
push
adc
mov
mov
adc
xor
add
add
lret
push
shlb
popf
sub
mov
shlb
lds
add
out
jge
cmp
mov
add
mov
and
mov
and
pushf
push
mov
dec
add
add
add
inc
or
mov
mov
das
xor
pusha
add
add
cmp
push
arpl
jnp
daa
push
je
mov
push
jns
xchg
inc
int3
lods
scas
dec
add
aam
add
inc
shrl
cmp
rcrb
scas
cmp
add
add
lret
mov
xchg
xchg
andb
mov
sub
insb
add
add
sbb
adc
fldt
cmp
sahf
inc
add
aad
rclb
sti
dec
push
inc
add
add
xchg
lcall
out
lods
mov
in
insl
ret
or
add
add
frstor
cli
or
add
add
add
add
lahf
jo
add
add
adc
add
sbb
add
ficoml
outsb
lret
cmc
pop
dec
dec
ret
mov
int
jae
pop
push
inc
inc
lret
mov
pop
incb
mov
mov
cmp
lods
or
mov
add
out
xor
cmp
xchg
in
hlt
mov
mov
cmpsb
and
adc
fidivrl
out
test
pop
xorb
mov
ret
push
cmp
hlt
das
mov
mov
notl
pop
sub
add
mov
insb
add
add
add
imul
arpl
jl
add
add
mov
sarb
es
mov
inc
or
mov
add
mov
add
add
rcr
xor
shl
in
cmp
js
xchg
mov
push
movsb
test
jmp
add
test
sbb
in
repz
lret
nop
lret
jne
movsb
les
jmp
out
shrb
mov
pop
stos
fld
inc
or
add
add
push
in
xchg
mov
mov
add
mov
add
add
xchg
add
repnz
out
arpl
or
add
xchg
or
add
in
and
mov
xor
dec
cmp
aad
push
add
add
add
mov
pop
jmp
lahf
rclb
lret
fsubs
add
add
push
pop
xor
fsubs
mov
and
add
add
icebp
xchg
pop
enter
nop
or
rcrb
vxorps
icebp
jns
pop
rcrl
stos
daa
stc
mov
daa
fdivl
xor
and
stc
std
pop
cmc
mov
pop
push
rclb
add
add
add
pop
xor
jg
push
add
repnz
jp
mov
add
repnz
mov
hlt
lds
adc
add
add
dec
iret
xchg
sbb
les
data16
mov
mov
add
push
xor
das
divb
ds
lods
lds
add
add
add
add
xchg
test
lcall
in
fdivrs
xchg
movsb
pushf
ds
std
sbb
inc
sub
mov
out
cmp
lcall
imul
ljmp
out
lahf
jae
cmp
xchg
clc
in
popf
adc
test
sbb
add
add
xchg
aad
test
add
add
inc
add
add
add
jge
lret
dec
rcrl
xor
sbb
xchg
es
xor
add
pop
adc
pushf
cmp
in
arpl
mov
aad
inc
jne
inc
add
sbb
mov
dec
add
pop
push
adc
mov
call
add
dec
pop
std
xlat
adc
je
outsl
sahf
mov
outsl
aam
mov
pop
push
call
jno
ret
cwtl
outsb
mov
pop
mov
and
jns
test
mov
scas
outsl
inc
add
add
addl
mov
ret
jg
add
add
lret
pop
mov
loop
dec
icebp
ss
test
cs
sub
mov
insl
sub
add
ret
stos
std
jno
icebp
jl
sbb
add
pop
xor
sub
add
jnp
push
dec
add
add
into
pop
and
mov
add
add
lods
out
lods
hlt
ss
mov
ror
outsl
es
ror
and
jecxz
xorl
cwtl
mov
inc
aaa
xchg
xor
je
xlat
sub
mov
xchg
and
incb
pop
and
or
popa
inc
add
and
add
add
test
cmpsb
ret
pop
dec
xchg
jp
and
or
daa
mov
mov
fcmovb
sub
flds
add
repz
sub
jb
mov
push
je
lea
add
mov
push
xor
xchg
pusha
add
je
add
add
fisttpll
pop
and
add
add
mov
jns
pop
xor
clc
mov
mov
mov
insl
inc
add
add
jp
pop
xor
add
stos
mov
ret
scas
cmp
mov
stos
sub
mov
xor
jge
xor
push
pop
pop
in
repz
jne
rcr
add
add
add
add
mov
mov
add
add
insb
add
add
mov
mov
test
sbbb
cmpsl
popf
enter
push
das
mov
and
mov
add
add
out
leave
sbb
add
add
andl
add
cmp
test
popl
mov
enter
add
scas
dec
fdivl
add
add
jnp
cmp
mov
jl
addb
in
sub
mov
setle
push
test
enter
sarl
mov
xchg
mov
jecxz
mov
inc
ss
cmc
test
sbb
xor
mov
cmp
inc
xchg
stos
lds
add
mov
add
fsubl
add
add
mov
add
add
mov
pop
adc
inc
mov
pop
dec
fidivl
push
or
dec
inc
popf
sbb
xchg
fstps
add
adc
xor
pop
leave
xor
add
add
jo
insl
xchg
xchg
inc
add
sub
aam
dec
add
add
add
add
or
add
add
inc
add
mov
aad
jmp
int3
into
mov
mov
sbb
add
scas
test
leave
lods
lea
dec
cmp
mov
int
mov
add
mov
cltd
scas
js
scas
pop
repnz
out
pop
gs
dec
in
les
nop
cmp
dec
ljmp
mov
push
rcrb
xchg
stos
popa
loop
mov
mov
add
add
add
add
stos
cmp
subb
stc
cmp
sbb
nop
ja
pop
cmp
hlt
pop
jnp
cmpsb
push
fcoml
cmp
rcll
out
fsubs
in
inc
inc
addl
es
add
add
push
or
mov
jmp
adc
mov
in
xchg
add
or
sahf
dec
js
inc
add
mov
xchg
notl
sbb
push
xor
mov
loope
js
aad
push
ficoms
mov
rcl
scas
push
pop
pop
push
ljmp
push
jle
or
incl
aad
add
add
sub
add
bound
xchg
cltd
xchg
popa
repnz
sbb
mov
inc
xor
in
cmp
push
pusha
add
jne
mov
add
cld
adc
jp
xor
test
out
pop
sahf
push
into
lock
movsl
jne
out
out
sub
push
lahf
push
mov
jno
mov
pop
in
stos
daa
xchg
outsl
imul
iret
lret
fwait
aam
nop
cltd
push
push
push
cmp
add
add
add
mov
or
mov
push
sbb
adc
sbb
jge,pn
pop
ficomps
int3
stos
push
rorb
add
loopne
jbe
mov
subl
add
mov
add
push
add
add
add
pop
insl
jb
sub
add
add
push
cmpsb
jae
add
sub
mov
int3
in
or
dec
pop
dec
add
les
into
in
es
push
or
iret
push
mov
mov
push
enter
add
add
jno
jmp
xlat
outsb
out
jnp
add
into
in
addr16
xor
rcr
push
dec
add
clc
out
fstpt
pop
shrb
imul
in
sub
pop
out
shrb
pop
loop
ljmp
add
inc
pop
pop
outsb
push
adc
test
mov
jo
dec
jb
inc
aam
popf
pop
xchg
out
add
add
mov
ss
not
inc
sti
and
xor
aas
out
in
xor
add
add
mov
mov
pop
fdivr
pusha
add
add
add
scas
cs
and
add
je
mov
loopne
fadds
int3
imul
add
inc
add
fsubr
mov
lahf
ss
cmp
mov
fsubp
mov
test
dec
mov
rcrb
and
dec
add
add
lds
dec
mov
dec
dec
add
add
xchg
fwait
jmp
jp
sub
xlat
out
mov
xor
fdivrs
push
xchg
clc
movl
scas
pop
dec
fldenv
add
add
gs
mov
dec
add
add
adc
cmpsl
jl
repnz
in
repz
or
sub
stos
adc
imul
add
inc
out
mov
add
fnsave
ds
mov
inc
jmp
ds
aad
outsl
mov
enter
add
add
add
add
add
out
shlb
inc
add
add
dec
dec
dec
lahf
aad
pop
dec
mov
mov
mov
insb
add
add
add
pop
jns
pop
pop
add
in
xor
mov
inc
add
push
adc
out
mov
xor
test
lods
push
jmp
lret
and
add
add
pop
adc
jno
sbb
add
xchg
addl
xor
imul
mov
mov
pop
sub
mov
mov
cmpsb
into
xchg
out
mov
call
adc
adc
movsb
mov
lret
hlt
mov
xchg
dec
pop
popa
and
mov
mov
jg
push
mov
dec
add
add
hlt
lcall
cmp
and
sbb
fsubrs
add
repz
mov
pusha
add
dec
sub
add
addb
loop
cmp
mov
push
xorl
xlat
and
add
add
inc
add
imul
add
add
inc
test
ss
out
mov
add
aaa
stos
ret
and
add
add
add
xor
xor
sbb
xchg
leave
jle
add
mov
in
or
and
mov
pusha
add
roll
add
mov
add
jb
call
inc
inc
sbb
dec
add
mov
fldt
mov
mov
mov
test
pop
jp
sub
mov
test
insl
xchg
sbb
cmp
add
mov
repnz
leave
mov
lahf
repnz
add
dec
add
add
adc
sub
pop
adc
mov
cmp
pop
stos
inc
add
add
or
add
add
xchg
push
aaa
pop
mov
pop
add
iret
pop
mov
add
mov
dec
mov
scas
in
cmp
or
das
cmp
mov
cmp
cmp
pop
dec
push
hlt
inc
mov
sub
inc
imul
add
ja
or
mov
or
mov
pop
and
pop
mov
out
push
pop
mov
arpl
inc
jno
and
adc
push
and
mov
lahf
xchg
outsl
roll
mov
cmpsl
std
sub
add
add
ja
mov
add
push
pop
outsl
xchg
mov
or
add
add
and
scas
call
add
add
add
fcoms
sub
xor
mov
mov
fidivs
mov
add
mov
mov
adc
fidivs
fstpt
jg
jmp
add
add
data16
ret
jbe
pusha
add
or
repnz
xchg
mov
lds
cld
into
aam
and
add
pushf
add
xchg
sub
add
add
insl
das
push
push
or
add
add
data16
sbb
rcrb
cmp
mov
add
add
add
add
add
add
add
add
popf
fwait
scas
sub
cmpsb
js
inc
pop
mov
mov
inc
jmp
std
xor
or
push
dec
add
add
in
mov
sub
test
data16
imul
pushf
xchg
jno
movsb
xchg
mov
add
add
mov
pusha
add
add
lcall
cmpsl
lods
jb
adc
or
mov
jae
fcomps
scas
xchg
testb
add
sbb
scas
daa
int3
sbb
shlb
loope
fildl
int3
push
icebp
pop
cmp
iret
mov
mov
sbb
mov
or
add
inc
add
add
cmpsb
stos
mov
push
add
dec
fdivl
push
ja
push
push
inc
push
notb
movb
shr
cmp
ss
pop
xchg
mull
pop
imulb
loop
sub
mov
jb
adc
lahf
out
xchg
add
cmp
mov
mov
adc
mov
insb
add
add
in
into
cmc
push
cmpsb
shll
stos
cmp
lods
jnp
adc
dec
pop
sub
add
sub
push
insb
add
jge
pushf
xor
inc
loopne
out
pop
shll
add
sub
mov
aam
xor
add
add
mov
aas
mov
push
and
stos
outsl
lret
jbe
mov
add
notl
inc
cs
or
outsb
sub
add
add
push
shrl
lock
jns
push
mov
pop
arpl
insl
sub
insl
inc
pop
push
sbb
mov
jae,pt
icebp
lea
rcl
xor
add
jmp
xor
sbbb
adc
out
add
call
add
mov
arpl
add
add
mov
mov
neg
repnz
push
loope
test
enter
jne
adc
sub
xor
xorb
rcrb
and
mov
add
add
sub
add
es
pop
mov
loop
add
add
insb
add
add
sub
add
add
add
inc
adc
xchg
imul
push
pusha
add
rorb
push
pusha
add
add
mov
push
mov
push
js
add
sahf
or
add
add
add
add
in
adc
mov
push
pop
loopne
mov
cmpsb
dec
and
cmp
add
add
inc
add
leave
dec
add
lods
mov
mov
in
sti
dec
add
add
cs
loopne
push
adc
sahf
cli
stc
loop
lret
xchg
inc
or
add
add
int
inc
mov
xorl
pop
add
aas
mov
add
add
add
add
and
mov
sbb
add
add
ss
mov
sub
mov
xchg
mov
dec
ds
sbb
daa
mov
test
add
repnz
imul
icebp
fnstcw
fxam
jb
add
add
stc
ds
pushf
cmp
mov
add
mov
into
add
add
xor
push
in
or
imul
into
xlat
lds
lahf
xor
iret
jo,pn
mov
add
xorb
mov
cmp
mov
push
inc
adc
mov
mov
jb
add
out
lea
int3
in
mov
xchg
sub
add
push
cmpsb
cmpsl
cld
sti
shr
or
ret
adc
mov
mov
pop
stos
push
jne
movzwl
mov
add
add
testl
xchg
leave
frstor
add
pop
rol
dec
dec
or
add
sub
fcoms
mov
push
popl
add
add
add
ljmp
cwtl
inc
add
in
arpl
out
inc
fdivp
jae
inc
out
mov
js
xchg
mov
push
ror
div
mov
mov
aas
jg
inc
add
add
cli
mov
dec
xor
test
mov
ret
adc
add
add
sbb
cmpsb
push
mov
add
add
sbb
icebp
mov
ret
or
xchg
int
sbb
add
cmpsb
mov
pop
incb
cmp
add
add
add
sahf
pushl
sub
pusha
add
add
jne
add
mov
andl
in
cmpsb
int
orl
ficoml
out
jb
fldl
adc
mov
adc
sbb
cmc
pusha
add
mov
add
add
jno
xor
mov
add
pop
mov
mov
and
mov
das
push
insl
jp
sbb
sbbb
test
add
add
add
pop
lcall
dec
add
add
xchg
insl
sbb
sub
fdivrs
inc
data16
mov
push
jge
cmp
clc
xchg
add
add
loopne
into
push
mov
rorb
xchg
add
lods
jae
insl
add
ss
and
add
add
mov
cs
cmp
loop
std
or
add
add
andb
jmp
or
lea
popf
sub
mov
lea
cmp
mov
sub
movsl
mov
jmp
sbb
mov
fidivs
dec
in
dec
aas
hlt
movsl
inc
add
add
sub
mov
mov
jg
hlt
cwtl
clc
xor
out
inc
add
gs
cmp
sarb
sub
mov
inc
add
add
add
xchg
dec
sbb
jns
lock
mov
loopne
dec
dec
add
add
gs
jge
pop
enter
or
add
add
push
xchg
out
cmp
dec
aas
cmp
pop
xor
inc
mov
inc
add
add
popa
xchg
dec
inc
ds
inc
add
clc
in
xchg
or
add
add
add
add
mov
fstpl
or
add
add
push
cmp
xchg
imul
push
sti
rorl
add
add
adc
add
add
add
ljmp
int3
push
setbe
mov
xchg
mov
mov
mov
std
addl
mov
in
dec
mov
es
sub
add
adc
add
rcll
sbb
aam
mov
das
arpl
jp
test
or
and
add
add
add
mov
dec
add
add
dec
ret
nop
pop
xor
xchg
mov
add
and
int3
shll
repz
fcompl
in
fildll
gs
shrb
xchg
iret
shlb
aad
insl
in
mov
sbb
cld
das
lea
add
add
std
xchg
or
cltd
adc
push
fcmovnu
mov
cmpsb
xchg
inc
add
add
pushw
add
jae
mov
add
add
xor
test
lret
and
add
jnp
shl
sbb
mov
lret
icebp
pop
setnp
scas
mov
mov
out
std
xor
inc
adc
outsb
dec
sbb
ret
ds
inc
add
add
push
in
pop
xor
ret
inc
and
addr16
fadds
insb
add
mov
add
add
movsl
imul
mul
test
int
add
add
or
xor
dec
add
add
mov
cld
pop
or
mov
dec
pop
push
jne
sbb
cmp
cmpl
jns
shll
and
mov
jae
xor
pushf
mov
add
add
xchg
mov
jns
add
jmp
xchg
add
add
add
mov
jl
inc
add
add
mov
mov
ljmp
add
mov
imul
mov
xchg
add
add
sbb
pop
adc
clc
dec
mov
cmp
add
mov
lds
add
add
add
add
push
xchg
or
push
cld
sbb
mov
in
add
adc
aam
push
xchg
mov
fstps
push
sahf
xlat
cmp
jecxz
cmp
fnsave
cli
in
lea
sub
mov
mov
daa
gs
or
mov
mov
shrl
fnsave
ret
adc
inc
cwtl
mov
sti
inc
xchg
sub
arpl
sbb
sub
repz
mov
fstl
pushf
mov
imul
mov
std
movsl
scas
sahf
xor
add
add
dec
or
add
add
rcr
ds
or
add
add
roll
add
add
dec
xchg
and
in
movsb
or
fiaddl
mov
push
cmp
leave
lcall
enter
fwait
je
test
outsb
xor
push
mov
jmp
mov
inc
add
sbb
mov
stc
inc
insb
add
add
dec
add
stos
jmp
sub
or
pop
inc
jmp
push
and
ss
pop
dec
add
mov
add
cmpsb
cmovo
add
add
mov
add
add
add
add
and
sub
add
add
push
lcall
add
add
add
mov
pushf
jl
or
add
add
lock
adc
movsb
ljmp
lods
cmp
jno
js
mov
repz
mov
xchg
pop
pop
pop
nop
jbe
cmp
dec
add
sub
das
cltd
mov
inc
add
add
jp
call
xor
dec
add
add
pop
xchg
movsb
jno
add
cld
call
add
mov
das
jno
scas
subl
add
add
sbb
xchg
aad
test
add
push
into
xor
ss
push
sub
pusha
add
adc
add
add
xor
push
and
mov
mov
ja
push
mov
xchg
cmp
mov
fstl
mov
das
cwtl
inc
fcmovnbe
and
mov
sbb
and
out
lret
add
nop
rorl
mov
pop
fwait
addl
xor
scas
lahf
cmp
xor
mov
jge
push
xor
or
add
xlat
int
rcr
adc
or
nop
jo
test
add
icebp
movsb
and
pop
lds
add
add
lock
mov
movsl
adc
insl
repz
lea
inc
jns,pt
daa
xor
icebp
dec
add
inc
bound
movsl
jb
jnp
add
add
add
sbb
sbb
subl
es
add
add
push
int
push
mov
mov
add
mov
dec
std
inc
pop
imul
pop
mov
mov
int
inc
cmp
mov
add
mov
hlt
sbb
and
xchg
imul
mov
jecxz
jns
imul
xchg
subl
sub
add
jge
sub
mov
xchg
aam
outsb
and
jp
sub
and
sub
dec
add
add
xchg
lds
dec
add
add
add
int
dec
lret
out
or
jo
cmp
xchg
out
loope
mov
sbb
push
stos
imulb
popa
mov
imul
pop
scas
cli
xchg
fdivrs
cwtl
loopne
fcmovne
mov
add
add
aad
out
test
test
ss
mov
mov
in
lods
mov
or
mov
xor
dec
ret
cmp
push
cmpl
dec
imul
xor
adc
mov
jns
jg
mov
pop
pushf
jns
add
add
xor
jle
xor
push
arpl
imul
mov
dec
inc
jecxz
xor
cmp
in
sub
add
add
push
mov
add
add
add
jecxz
adc
ficomps
cmp
pushf
mov
lds
xor
jmp
das
inc
repz
or
mov
out
outsl
mov
icebp
jnp
es
sbb
scas
jo
push
sbb
adc
and
add
add
push
lret
lahf
jmp
rclb
sbb
mov
add
add
xchg
faddl
bound
ficomps
add
add
fnstsw
push
xchg
inc
and
jae
ja
mov
inc
popf
int
outsl
mov
aad
ljmp
cmp
lods
out
jp
mov
ret
dec
add
add
mov
mov
pop
xchg
andb
push
das
scas
loopne
testb
ret
push
sbb
test
pop
insl
or
add
add
xchg
dec
mov
insb
add
add
and
mov
sub
add
add
scas
jle
xor
fwait
sub
popf
test
cmp
jle
xchg
jle
fisttps
pop
or
jns
adc
push
lock
jge
idivl
mov
ret
dec
add
mov
add
add
je
lcall
enter
push
aas
pop
shl
inc
and
mov
repnz
mov
push
jne
cmpsl
scas
inc
add
add
pop
jge
add
add
notl
pop
mov
mov
push
dec
xor
and
mov
test
jge
jne
inc
sbb
lahf
and
add
add
iret
andl
xchg
in
lret
stos
xchg
push
and
outsb
rorl
sub
add
add
int3
cmp
inc
jne
jg
loopne
mov
add
add
add
or
mov
and
add
add
pop
sbb
fcomps
int
fdivrs
dec
add
add
inc
dec
lods
lea
jo
fists
scas
sub
mov
not
or
add
jp
enter
out
inc
mov
mov
in
adc
mov
add
add
out
pop
or
add
sbb
loopne
in
add
js
lods
xor
clc
fldt
aaa
inc
daa
add
mov
int3
lods
in
push
pop
jl
les
xor
std
sbb
mov
shlb
inc
add
add
jg
mov
hlt
fcomp
sbb
inc
in
addr16
xlat
add
and
cmpsb
push
fistl
popa
cmp
add
addb
fwait
popf
add
jbe
cmp
adc
lods
mov
and
insb
add
add
mov
xchg
cmp
aam
sarl
insl
sahf
push
mov
add
add
mov
add
lret
mov
add
in
push
and
xor
iret
jg
pop
scas
ror
jno
add
add
rcl
imul
das
cltd
outsl
sbb
loop
dec
adc
or
fdivrl
jmp
add
out
mov
dec
repz
in
pushf
out
sahf
push
sub
lods
call
xchg
daa
mov
mov
cwtl
aaa
loope
fnstsw
idivl
add
imul
xor
mov
add
sti
sbb
sbb
push
sbbl
add
add
push
clc
cld
test
rorl
ds
lea
and
mov
mov
cmpl
mov
lods
ret
loopne
pop
pop
add
mov
add
add
mov
cmpsb
push
pop
mov
mov
inc
or
mov
add
push
inc
dec
add
add
shlb
sub
add
add
lods
sub
add
add
call
add
dec
addr16
shll
push
mov
mov
jae
mov
mov
add
in
idivb
loop
dec
iret
jg
dec
push
cmp
sti
jo
int
pop
adc
xor
mov
xchg
bound
stos
xor
movsl
mov
xchg
out
pop
fadd
out
pop
fidivrl
inc
popa
sbb
lock
es
fldt
jecxz
xchg
jns
pop
xchg
cmp
add
stos
stc
push
mov
add
ret
xchg
ret
jl
insl
pop
mov
add
add
jl
add
scas
xor
adc
xchg
add
cs
xchg
mov
add
ret
dec
iret
outsl
inc
pop
mov
mov
inc
cmp
pop
dec
ja
out
add
add
les
mov
shl
ficoml
pop
or
add
add
mov
test
roll
pop
dec
cmp
jo
or
mov
fcmovnb
or
mov
popl
and
repnz
cmp
shlb
mov
fadd
aam
mov
lcall
sub
les
mov
mov
mov
jecxz
dec
test
add
add
xor
mov
lea
inc
cld
idiv
lahf
pop
das
jb
test
pop
push
cmp
add
add
test
or
fbld
add
add
add
add
add
jle
aam
not
inc
and
dec
hlt
push
push
mull
pusha
add
add
mov
mov
aam
push
addl
mov
loop
add
add
sbb
mov
lea
cli
enter
and
mov
inc
add
add
pusha
add
add
cli
out
xchg
mov
add
icebp
js
jle
sbb
xchg
dec
aam
cmp
aaa
mov
mov
arpl
dec
mov
gs
add
add
int
push
jne
dec
pop
clc
cmpsb
mov
mov
int
test
add
add
add
add
mov
ficompl
ret
add
jns
adc
imul
jns
jno
push
cmp
dec
xchg
mov
xchg
js
add
xor
mov
jae
xor
add
xchg
inc
add
add
or
add
add
pushf
ret
mov
add
add
sbb
jbe
mov
and
scas
movsb
dec
add
add
and
loope
call
das
stos
adc
add
add
fstpt
add
clc
xor
mov
rclb
add
add
mov
fcoms
es
add
popf
dec
cmp
lahf
iret
jle
push
cmpsl
cmp
dec
psrlw
push
lods
jo
ja
jmp
add
pop
cltd
push
loope
pop
lcall
jp
ficoml
call
add
pop
pop
jmp
dec
xor
enter
outsb
push
lcall
jmp
add
mov
cmpsb
cmpsl
hlt
addb
add
add
jge
and
add
add
mov
inc
jne
xchg
in
test
sub
add
mov
xchg
call
adc
add
ret
sbb
jg
sbb
push
inc
add
push
adc
imul
add
add
movsb
ss
rcrb
loope
cmp
negb
sbb
push
inc
mov
fsubl
ss
and
add
add
popf
pop
inc
xor
sbb
and
mov
cmp
mov
push
dec
add
add
arpl
ja
and
push
mov
cwtl
or
mov
icebp
xorb
test
jg
leave
test
add
add
pop
loopne
lea
adc
pushf
lods
lods
mov
adc
aad
sub
inc
add
inc
and
and
pop
js
or
and
add
add
add
add
mov
bound
stos
addb
add
add
mov
mov
add
repnz
add
xchg
fwait
push
adc
sub
mov
les
push
in
xor
dec
add
xor
add
add
add
mov
lock
cmp
push
cmp
aas
xchg
pop
pop
dec
add
xlat
out
imull
shl
ljmp
sub
pop
inc
mov
add
imul
jns
loope
pop
lahf
pop
fadds
sbb
stos
idivb
add
xlat
cmp
add
add
add
add
lods
jle
add
jb
jns
dec
or
pop
data16
mov
fstl
add
repnz
inc
add
add
dec
inc
sub
add
mov
jne
push
cmp
daa
pop
imul
add
add
dec
lret
fwait
repnz
aaa
stc
inc
sub
add
add
add
add
xchg
mov
cmp
add
stos
xchg
mov
dec
jae
xchg
mov
insl
mov
xchg
out
dec
cmp
add
jecxz
int
jo
repnz
aad
cmp
sti
sub
jp
xchg
add
jne
sbb
pop
imul
es
jae
gs
jmp
adc
inc
pop
enter
push
push
sub
mov
add
add
out
leave
test
add
add
shll
gs
cs
cli
and
fdivs
add
add
out
xlat
out
imul
push
nop
cmp
sbb
sbb
fnsave
out
scas
ss
jbe
cli
adc
mov
xchg
push
je
jmp
cmc
test
xchg
lock
shlb
add
add
clc
lahf
imul
roll
loop
mov
insb
add
add
or
ss
gs
cmpsb
jb
aaa
cli
jb
fimull
mov
add
add
mov
xchg
cvttps2pi
mov
pop
mov
gs
icebp
jnp
add
pop
push
cmp
pop
dec
add
add
inc
rcrl
outsl
inc
add
lcall
test
cmpsb
jmp
xchg
xchg
into
and
rcll
add
add
push
sti
cwtl
int
lret
rolb
sub
and
add
into
pushf
and
push
out
push
notb
mov
add
add
sub
mov
mov
cs
js
stos
xchg
repnz
sub
dec
or
add
add
mov
xchg
imull
pop
push
fwait
movsb
fwait
stos
cmpsl
or
mov
pop
test
out
adc
test
aaa
cwtl
out
mov
clc
clc
add
add
add
bswap
test
scas
fsubrl
das
scas
out
je
xchg
and
sbb
cmp
dec
sbb
mov
add
push
fsub
test
push
dec
mov
mov
repz
sbbl
fisubs
loop
sub
add
add
cwtl
jo
add
jne
and
add
add
cld
nop
sbb
pushw
add
pop
imul
lret
mov
cmpsl
cmp
adc
xchg
jne
aas
inc
into
xchg
stc
rol
add
mov
xchg
push
std
inc
test
in
imul
add
dec
jmp
repz
into
adcl
adc
cmp
sub
fdivs
orb
ljmp
or
pop
xor
add
add
add
or
push
xchg
nop
cmc
sarb
cmpsl
int3
hlt
push
call
add
add
popa
sub
mov
in
mov
test
popf
cmpsb
jge
mov
sbb
shll
jmp
sti
outsb
push
xchg
and
jo
sbbl
add
mov
dec
sbb
lahf
cmp
fistl
mov
andb
outsl
fcompl
lods
xor
lds
jp
cltd
sti
cltd
push
in
adc
add
mov
xchg
arpl
adc
mov
movsb
lahf
sti
or
mov
f2xm1
ret
mov
add
add
insl
int3
ret
adc
push
add
add
mov
jmp
test
mov
mov
mov
add
push
and
add
mov
dec
add
add
or
test
inc
add
add
movsb
inc
mov
popf
jmp
test
push
jmp
jb
outsl
inc
and
jl
jb
minps
in
daa
ret
mov
repz
into
or
out
xor
add
add
test
or
push
push
sbb
mov
pusha
add
add
xchg
andl
add
mov
mov
jae
sbb
xchg
jne
jbe
call
push
push
stos
out
jmp
and
cltd
mov
and
mov
add
mov
push
sub
mov
mov
pop
and
mov
inc
xchg
rcr
mov
jmp
jno
scas
or
add
add
add
add
pop
xchg
push
insb
add
sbb
jmp
add
add
sbb
sbb
push
lcall
inc
add
add
inc
dec
add
add
pop
mov
push
dec
push
xor
stos
pusha
add
jmp
add
data16
pop
aad
pop
xor
lcall
push
loope
mov
jns
mov
add
push
xor
cltd
add
add
add
fistps
dec
ficompl
jne
cmpsb
and
or
sub
lds
ds
add
add
fsubs
aam
mov
adc
lret
cwtl
filds
mov
iret
fwait
xchg
mov
adc
push
mov
xorb
add
add
add
add
sbb
cltd
repz
ljmp
icebp
push
push
jno
sub
adc
insb
add
notl
and
lds
dec
aam
mov
imul
adc
add
add
add
push
andb
out
cmpsb
je
cmpsb
jb
addr16
adcb
add
sahf
outsb
insb
add
add
fdivrp
mov
xor
mov
outsb
pop
xor
add
jns
push
push
fsubl
stos
mov
dec
lcall
cwtl
adc
inc
imul
add
push
mov
pop
jecxz
jecxz
pop
mov
icebp
and
and
push
pop
or
mov
cmpsl
and
sub
add
mov
sub
sbb
popa
scas
pop
out
mov
add
add
in
insl
inc
mov
push
bound
sub
add
add
addr16
out
shll
mov
call
mov
add
add
pop
shl
adc
add
cs
sti
int
inc
xor
bsr
inc
shll
adc
add
push
mov
mov
xor
and
sbb
jmp
idivb
mov
movsb
mov
mov
and
add
mov
add
jl
mov
xor
mov
popa
loop
adc
push
push
popa
iret
pop
xor
adc
lds
add
add
mov
xor
xchg
stos
sbb
lds
add
sti
hlt
into
cmpsb
add
jle
add
or
rorl
add
mov
mov
int
jne
notl
ja
sbbl
rol
sub
add
add
outsl
pushf
cmp
dec
dec
fstpl
in
cmp
stos
in
stos
mov
mov
pop
push
lahf
and
mov
pop
pusha
add
add
sbb
mov
notl
jae
or
mov
inc
push
add
mov
pop
adc
stc
test
add
add
xchg
lcall
nop
inc
add
add
sbb
add
es
pop
bound
pmuludq
xor
cmp
ja
pop
cmc
rolb
mov
sbb
xchg
push
push
mov
lahf
cmp
js
sbb
dec
rorb
jnp
enter
pop
pop
add
out
sbb
add
lcall
mov
add
add
xchg
lods
test
mov
inc
xchg
mov
mov
dec
jno
inc
xchg
scas
push
les
add
fisubrs
add
add
dec
cmp
mov
mov
pop
lret
xchg
cmp
cli
and
push
ret
push
push
mov
aaa
popf
std
je
add
mov
in
rcll
in
push
sub
mov
mov
lods
dec
js
xchg
sbb
xor
enter
mov
js
dec
add
sti
pop
add
sbb
add
cwtl
icebp
aam
jbe
add
add
add
lret
lea
mov
xlat
imul
out
mov
cmpb
loopne
popa
and
mov
mov
arpl
in
sbb
add
add
jge
xorl
ret
iret
orb
add
sub
mov
ss
into
adc
jb
push
mov
fbld
sbb
jecxz
push
adc
inc
add
jle
push
frstor
and
add
add
fldt
imul
movsl
adc
cmp
mov
add
mov
sub
aad
xor
and
add
add
int3
push
adc
out
test
jecxz
shrb
mov
mov
je
insb
add
add
addr16
mov
int3
pop
sahf
ficompl
negl
xor
rcl
xchg
adc
ss
outsl
jge
xlat
shld
adc
in
sbb
cmpl
pop
cld
xchg
add
add
and
mov
sbb
cmp
lea
adc
xchg
xchg
int3
mov
add
add
stos
aam
cmpsb
mov
lock
test
imul
add
and
xchg
fsub
or
add
pop
jmp
or
loopne
lock
shrl
jnp
movsb
ja
stos
xlat
or
mov
shr
data16
sbb
mov
call
xchg
jmp
ret
mov
nop
mov
shlb
dec
add
loopne
push
push
push
js
or
add
ret
stc
mov
add
sti
inc
add
cmp
stc
mov
scas
mov
clc
pusha
add
add
inc
add
imul
push
in
jg
mov
imul
mov
jge
jae
fiaddl
add
lea
subb
add
je
mov
xlat
inc
add
add
mov
pop
scas
add
pusha
add
add
sbbl
xchg
pop
mov
sub
cmpsl
mov
lds
inc
push
add
js
cmp
lcall
add
mov
add
add
mov
add
add
addr16
cmp
mov
scas
es
or
out
push
lcall
push
cmp
push
inc
jmp
push
repnz
mov
int3
push
mov
pop
scas
jo
mov
sbb
jnp
pop
pop
shrb
xchg
xor
out
inc
lcall
add
add
imul
jnp
pop
shufps
push
push
push
cltd
ss
adc
cmc
mov
int
test
xchg
clc
or
addr16
jae
mov
add
fstpt
add
add
aam
bnd
aaa
js
dec
add
add
or
sbbb
sub
add
add
add
in
dec
mov
xor
cs
pop
loopne
fadds
jo
jle
pop
cmp
add
add
or
cmp
pop
jp
rorb
xchg
mov
das
in
out
imull
add
add
icebp
xchg
add
push
inc
inc
add
add
mov
insl
popa
jno
daa
lods
push
cmc
aas
es
dec
mov
add
add
add
fcoml
inc
dec
insl
mull
add
mov
or
and
add
add
pop
test
jp
in
cltd
out
lahf
push
mov
add
add
push
sbb
loope
xor
data16
dec
add
add
sub
clc
cmp
mov
xor
leave
aad
loope
fwait
icebp
mov
rclb
xor
es
jp
add
add
sub
sbbl
hlt
scas
cmp
rcll
mov
mov
movl
xchg
dec
or
add
add
lret
cmpsb
cmp
test
pusha
add
add
mov
adcb
iret
sbb
nop
xor
jb
add
std
xor
sub
mov
lcall
movb
nop
xchg
cmpsl
pop
jno
movsl
pop
cmp
jecxz
push
inc
push
inc
sub
fdivrp
dec
add
push
lea
fldenv
inc
add
add
jge
adc
mov
adc
fldt
data16
pop
adc
punpckhwd
mov
and
or
test
movsb
xchg
cmp
hlt
lahf
cmpsl
enter
mov
rcl
insl
cld
in
mov
stc
in
std
inc
and
push
push
mov
xlat
mov
or
mov
scas
ret
cli
or
add
add
jmp
insl
into
mov
cmp
cli
loop
pop
sarl
mov
sub
pop
sbb
or
mov
fwait
jg
jge
pop
rcrl
mov
sub
jp
fists
pop
xchg
add
call
icebp
adc
cs
mov
add
clc
sarl
mov
ljmp
mov
push
enter
add
pop
add
jp
xor
mov
sub
or
aam
cmpsb
xchg
scas
int3
jae
data16
add
mov
mov
mov
movsb
adc
add
add
xchg
loop
arpl
xor
xchg
xor
loop
jne
pop
push
adc
dec
add
mov
mov
mov
add
add
add
adc
dec
xchg
mov
cmp
sub
mov
inc
shlb
lea
jnp
push
addr16
pushf
inc
rcr
leave
jl
dec
add
add
mov
add
add
sbb
imul
or
add
add
aam
pop
adc
outsb
push
jmp
mov
adc
adc
arpl
loopne
xchg
push
out
loop
add
shrl
add
add
lods
loop
sub
sub
mov
jecxz
push
adc
and
push
in
stc
stos
ds
add
add
add
lea
mov
adc
lret
mov
jo
mov
dec
add
andl
add
test
add
add
cmp
push
add
jmp
and
xor
mov
jg
decl
cld
cwtl
inc
mov
cmp
ret
mov
inc
adc
movsb
rclb
add
idivb
cltd
and
mov
push
pop
sbb
loope
arpl
std
or
adc
pop
rorb
or
out
push
leave
adc
fcoml
stc
cmpsl
fstpt
je
mov
pop
sub
mov
jg
sub
add
xlat
xchg
mov
jne
gs
test
data16
pop
outsl
sub
add
add
xor
add
push
cli
jle
push
push
cmpsl
cmp
jno
mov
pop
inc
scas
sbb
add
mov
inc
push
je
pusha
add
add
int
add
pusha
add
inc
add
add
ror
and
pop
xor
pop
fcomi
mov
and
mov
xchg
stos
iret
cmp
sub
add
add
add
clc
out
pop
fsub
jle
and
mov
pop
ds
insb
add
mov
fsubrl
add
adc
fstps
aaa
inc
test
popa
sbb
scas
lcall
sub
add
add
cltd
mov
add
cltd
js
add
cmp
mov
mov
or
mov
mov
jecxz
adc
jae
cmp
das
jns
js
add
mov
daa
subl
add
loopne
jns
mov
add
sbb
fbstp
lcall
aaa
jne
add
lock
mov
mov
mov
es
add
out
mov
or
add
sbb
mov
sarl
outsl
mov
icebp
inc
int
loop
subb
xor
cld
ljmp
jb
cmpsl
push
call
jl
and
add
add
iret
pop
push
mov
arpl
ret
sub
shl
iret
imul
xchg
add
mov
or
inc
test
dec
xchg
out
dec
dec
push
aaa
mov
add
call
add
int3
xor
shl
arpl
cmpsb
addr16
in
add
pop
test
add
ds
adc
fistpl
fxch
cld
jne
add
js
add
mov
mov
push
lds
in
or
test
in
fsub
jb
jecxz
add
jecxz
push
or
add
cmp
test
push
hlt
aas
push
dec
les
dec
jns
test
adc
andb
cld
push
sub
mov
xor
orb
add
add
xor
add
adc
jl
out
dec
add
cmp
add
add
std
or
dec
jo
cmp
daa
push
pop
add
xchg
cmpsb
jb
inc
pusha
add
add
cmc
nop
repz
xorb
mov
push
in
and
jecxz
add
push
or
mov
loop
jle
rorb
xchg
lret
or
outsl
xchg
enter
jns
and
add
add
mov
insb
add
mov
add
push
out
push
xchg
sti
sbb
mov
inc
test
jns
sbb
push
ret
xchg
cmp
movsb
ds
push
mov
add
movsb
mov
das
ds
mov
push
ja
cwtl
fwait
adc
adc
dec
orb
stos
sbb
pop
xor
add
decb
mov
leave
jge
xor
cmc
lcall
pushf
insl
mov
js
out
hlt
sbb
add
add
dec
add
add
out
mov
ljmp
stos
in
iret
in
cmc
stos
scas
push
pop
mov
sbb
cmp
movsl
cmp
sbb
sub
lock
iret
add
add
and
add
add
fcoml
fldl
cli
mov
jb
ljmp
cmpl
pop
out
add
add
enter
shll
add
add
loopne
dec
lret
mov
add
add
add
notl
mov
pop
idivl
movsl
sbb
push
out
ja
jno
or
neg
push
inc
popf
jp
clc
lods
filds
add
add
mov
jg
aam
add
and
add
add
pop
add
inc
jbe
idivl
mov
push
ja
sub
pop
cld
out
orl
sbb
repz
mov
mov
add
add
xchg
loope
add
add
lds
leave
test
or
add
add
std
xchg
pop
movsb
xor
pop
inc
and
in
push
xor
inc
in
sub
je
loope
ja
pop
call
imul
mov
add
in
jno
inc
in
sbb
add
add
add
add
in
add
rcl
cmpsl
ret
sbb
nop
clc
push
bound
dec
stc
or
add
add
adc
dec
fwait
jns
lea
xor
enter
imull
mov
call
mov
mov
lcall
sbb
and
cmp
int3
fbld
rcrl
inc
js
and
xchg
scas
inc
and
add
pop
pop
dec
cmpb
sub
mov
add
add
scas
shll
add
add
and
adc
and
cld
dec
add
add
mov
adc
std
leave
pop
testl
mov
or
jl
ljmp
je
imul
adc
cmp
add
dec
push
arpl
out
adc
repnz
rorb
je
aaa
jp
and
loope
loope
add
add
outsl
popf
bound
jnp
addb
add
add
mov
imul
add
cmp
xor
dec
inc
add
add
pop
js
sub
push
int3
dec
sbb
imul
sarb
add
add
xchg
jns
into
inc
add
cmpsb
imul
pop
fisttpll
rclb
popa
cwtl
jle
add
ljmp
add
add
push
andb
mov
dec
es
sub
cli
jns
mov
call
std
jbe
repz
jne
pop
pop
xchg
add
add
pop
cmpl
add
add
add
add
loopne
int
aam
jle
pop
ret
add
mov
mov
ret
insl
stos
pop
enter
dec
add
add
mov
scas
or
in
mov
dec
push
add
sbb
cmp
add
add
add
xchg
xchg
jge
sub
xlat
test
stc
jg
push
and
mov
xchg
testl
imul
sarb
test
inc
testb
add
sub
add
fcomp
mov
ljmp
mov
sbb
cs
in
sbb
fdivrl
add
add
jl
sbb
scas
fcomps
xor
and
mov
aad
stos
pop
sub
add
add
shlb
adc
scas
add
add
mov
sbb
or
inc
xor
add
add
aad
pop
push
push
mov
add
add
lahf
in
sub
and
insb
add
xchg
fists
mov
adc
std
lcall
mov
pop
xchg
dec
out
jnp
test
stos
jmp
add
mov
icebp
fsts
xor
sahf
push
sbb
enter
das
inc
mov
fsubr
ja
leave
adc
mov
sub
add
add
loopne
add
dec
pusha
add
add
repnz
mov
jo
xchg
sub
and
or
add
add
ficompl
inc
jmp
fsts
fsubs
mov
adc
pop
in
notl
push
addr16
ret
arpl
outsb
imul
add
out
arpl
mov
adc
add
xorl
jno
and
insl
insl
cwtl
fldl
mov
xor
add
mov
add
add
loop
dec
pop
clc
lock
sbb
xchg
adc
add
jnp
int3
in
xchg
fnsave
add
or
add
add
and
mov
je
test
icebp
pop
xchg
out
lds
push
das
mov
sbb
add
add
add
inc
mov
add
ret
push
pop
mov
add
scas
push
repz
shrb
js
or
or
add
add
jb
cmp
mov
add
add
adc
xorb
add
jnp
add
add
jnp
mov
movsl
pop
or
mov
outsb
mov
add
repnz
mov
mov
mov
mov
xorl
add
add
ror
inc
mov
mov
adc
push
or
add
or
daa
inc
js
add
add
in
mov
add
ret
add
mov
push
pop
add
sbb
aam
lret
insb
add
cmpsl
or
jo
xor
bnd
sub
jne
leave
mov
mov
pop
jns
push
cld
inc
xor
jmp
add
add
shll
xor
xchg
je
inc
cmp
pop
adc
add
adc
add
add
add
cltd
cmpsb
das
add
pop
adcb
xchg
adc
add
cmpsl
out
out
add
add
add
in
loopne
idivb
add
cli
call
pop
insl
int3
mov
xor
out
je
stc
cmp
cmp
stos
mov
jl
mov
or
cmp
add
std
and
mov
bound
xchg
gs
add
add
dec
lods
mov
add
add
push
jns
mov
rcl
add
mov
mov
add
test
cs
or
test
lea
int
div
xor
xor
sub
pop
aam
jne
int
inc
add
add
fsubs
add
add
mov
add
add
cmp
mov
mov
in
popa
adc
xchg
mov
leave
dec
out
mov
lahf
cmp
add
cmp
and
push
xor
int3
mov
pop
imul
or
add
add
ja
cmpl
add
add
sbb
add
add
add
add
lods
pop
add
mov
add
sub
mov
cld
jge
icebp
add
add
add
add
mov
popf
jge
lcall
fistl
orb
lods
adc
add
add
daa
test
in
mov
mov
cmpl
push
xchg
xchg
clc
inc
pop
inc
in
push
mov
and
jge
fiadds
dec
mov
loope
mov
sub
and
add
add
insb
add
repz
lds
add
add
mov
or
mov
jmp
out
jle
cmp
and
pop
popa
iret
aaa
sub
mov
rcrl
push
cmp
mov
add
imul
dec
add
add
mov
xorb
sbbb
loop
jb
mov
shll
and
add
add
push
das
bswap
inc
add
push
mov
xchg
test
add
mov
mov
sub
add
add
mov
movb
ja
sbb
push
sub
add
xchg
lock
and
add
xchg
cmp
add
in
xchg
aas
subb
or
add
add
jge
add
add
jo
ljmp
or
add
add
cld
dec
add
add
call
add
repz
mov
das
mov
add
xchg
xchg
add
cmpsb
sub
add
add
mov
mov
push
in
cmc
das
mov
rorl
add
mov
jmp
xchg
xor
cmpsl
xor
xchg
jae
push
jb
fldenv
xchg
mov
repz
sbb
shl
repz
mov
clc
daa
outsl
adc
jns
rol
std
pop
out
pop
mov
repz
sbb
dec
add
jns
std
push
add
mov
js
jb
mov
push
mov
mov
pop
dec
or
add
push
inc
xorb
adc
mov
add
mov
add
cmc
fsts
getsec
test
jb
aaa
lods
or
add
add
mov
scas
push
rorl
xchg
and
add
insl
mov
add
in
ljmp
inc
cltd
adc
add
mov
inc
rclb
fstps
mov
daa
movsb
das
dec
xor
inc
mov
jns
cmp
orl
push
repnz
lds
sub
loope
and
add
mov
push
push
sub
ret
pop
lret
divl
adc
add
add
or
or
cmc
sbb
cmpsl
adc
xor
fcmovb
jns
add
add
or
adc
ficoml
movl
jg
mov
sub
add
add
add
ret
dec
add
sti
out
add
add
add
outsl
sti
sysret
mov
mov
add
add
ret
mov
push
and
scas
cmp
add
aaa
mov
sti
mov
and
test
test
xchg
push
rolb
cmc
sbb
es
add
mov
mov
je
ss
scas
xchg
add
mov
std
xchg
sbb
add
add
lods
xor
cltd
pop
sub
add
add
test
adc
push
xchg
test
into
sbb
and
aad
rorl
pop
adc
test
add
pop
movsl
mov
add
rcr
rcll
add
lahf
inc
and
mov
dec
pop
cmp
push
inc
lods
mov
add
mov
pop
mov
gs
int3
push
or
add
add
add
int3
js
popf
mov
sbb
lret
cmp
cmp
cmp
inc
test
add
add
add
add
pop
mov
mov
pop
sub
add
add
sahf
pop
and
sub
add
add
sbb
inc
jbe
in
adc
add
add
push
xor
mov
cmp
std
cli
test
add
or
es
add
or
add
add
cli
arpl
mov
mov
or
mov
inc
add
add
add
sbb
push
xor
add
add
xorb
push
jae
cmc
add
mov
xorl
das
jns
je
xchg
lock
cmpb
sbb
sbb
cltd
sub
mov
outsl
pop
dec
std
mov
int
mov
push
or
add
add
add
add
add
jmp
sub
add
jbe
bound
add
add
dec
pushf
mov
sbb
lds
loope
mov
jae,pn
jecxz
xchg
test
push
ljmp
gs
addr16
popa
xlat
repz
add
add
test
pop
xor
pop
inc
xchg
or
mov
adc
dec
push
sahf
je
jo
or
enter
das
shll
add
mov
adc
pop
dec
movsb
nop
xor
or
add
add
clc
loop
je
mov
cmp
add
pop
lods
add
add
add
pop
jmp
mov
mov
pop
lret
dec
clc
addr16
pop
xchg
aas
test
add
add
popf
in
aaa
aam
insl
sbb
jbe
mov
repnz
push
adc
ja
lcall
jmp
call
mov
adcl
push
xchg
mov
mov
int
shrl
jno
out
push
mov
popf
inc
fwait
sar
add
add
add
add
mov
sbb
xchg
mov
adc
mov
dec
jp
xor
jne
pop
adc
add
movsb
aam
add
mov
push
les
pop
mov
lahf
into
fldt
inc
add
add
add
add
movsb
xchg
push
ds
iret
mov
enter
add
add
add
hlt
movsb
sbbl
add
arpl
cs
repz
add
add
add
test
push
pop
pop
mov
mov
sbb
mov
cld
fimull
mov
ret
add
pop
pop
xor
add
add
xchg
rclb
mov
add
daa
cli
out
cwtl
scas
imul
push
fildll
dec
add
add
add
in
iret
push
mov
dec
add
imul
pop
test
add
add
sbb
scas
outsl
fucomp
fistpll
mov
rorb
push
dec
add
add
mov
mov
add
add
add
dec
aad
bound
scas
aam
jb
sub
add
add
fwait
mov
xchg
lds
stos
cmpsl
cmpb
xchg
sti
ljmp
cli
pop
cmp
add
add
call
adc
add
mov
jle
add
pop
dec
out
fisubrs
rorb
sub
add
push
xchg
sbb
into
add
roll
push
test
fwait
pop
sbb
pop
ret
mov
jle
jbe
sub
mov
jl
sub
mov
out
mov
push
mov
mov
add
mov
xor
push
xor
sti
mov
add
cwtl
xor
iret
in
add
mov
mov
jle
sti
pop
dec
ja
xchg
mov
fadds
insb
add
shrl
es
mov
cmp
add
lods
data16
fucomp
sti
hlt
xor
adc
fsub
push
fwait
jne
xor
jl
xchg
imul
rcr
mov
xor
pop
movsl
leave
adc
pusha
add
add
test
add
xor
test
xchg
rcll
sub
mov
lods
mov
test
cltd
jl
lds
popf
addr16
mov
lea
out
inc
movsb
mov
adc
pop
mov
mov
add
sti
in
push
push
imul
add
add
add
in
ss
add
add
sahf
pop
xchg
lret
imul
xchg
aam
pop
push
fiadds
out
out
loopne
xor
fnstcw
jge
les
add
add
sub
adc
stos
fcoms
mov
add
add
xor
iret
popf
jg
adc
mov
pop
clc
inc
xlat
movsl
in
ja
and
or
imul
add
add
mov
in
push
add
mov
cmp
out
mov
les
xor
out
mov
add
jl
mov
adc
xchg
sub
ss
jge
test
add
add
jbe
imul
faddp
cmpb
cli
mov
add
add
inc
jb
or
mov
scas
jo
add
add
inc
add
mov
xor
pop
lods
pushf
mov
add
call
cmp
ss
inc
pop
or
add
out
mov
insl
shlb
add
dec
add
add
inc
andl
add
fidivrs
test
int
adc
repnz
inc
push
or
lods
ja
pushf
cmpsl
dec
inc
xor
xchg
add
lock
xor
loope
add
pop
add
mov
iret
mul
mov
mov
xchg
mov
popa
push
pop
fmuls
addr16
lcall
mov
filds
add
add
test
mov
cltd
push
add
add
fstpt
add
mov
loop
mov
add
lods
adc
cmc
push
and
jecxz
xchg
xchg
pop
cmpsl
in
xchg
sub
cmp
mov
mov
add
adc
cmpsl
jne
xlat
pop
dec
mov
add
add
push
xor
fstpt
adc
add
add
mov
cld
pop
mov
sbb
sbb
mov
daa
sbb
sbb
push
int3
jp
adc
cld
jecxz
cs
inc
sahf
pop
add
movsl
out
fcoml
in
mov
fimull
pusha
add
pop
sub
add
add
add
pop
stos
mov
mul
or
add
mov
scas
xchg
pop
or
mov
jnp
das
insb
add
fisttps
add
add
pop
xchg
sub
add
xor
mov
test
jg
push
dec
decl
pop
testl
fidivrl
cmp
ds
and
sub
sub
negl
xor
jp
int3
mov
mov
add
add
ret
cmp
sbb
add
add
push
scas
outsb
dec
add
add
lods
mov
add
rcrl
sbb
stc
adc
or
mov
sub
jb
movsb
sbb
push
cmpsb
jbe
jmp
add
or
in
rcrb
aas
cmp
repnz
dec
inc
cmp
adc
add
jmp
add
add
jb
or
mov
add
pop
sub
add
lret
add
in
mov
jg
rcrl
add
add
mulb
iret
jb
and
cmp
inc
iret
sub
add
aad
test
clc
push
mov
cmc
add
scas
xlat
repnz
pop
pop
sub
nop
add
int3
popa
leave
test
jecxz
pop
mov
pop
mov
sub
add
aad
add
add
test
jnp
aas
and
add
divps
or
mov
mov
sahf
mov
sub
dec
aaa
or
mov
mov
mov
rcr
imul
in
mov
iret
aas
popf
out
aam
fists
daa
dec
sahf
cmpsl
add
mov
jns
add
add
push
adc
add
add
add
sbb
repz
sbb
add
mov
xorb
in
bound
add
stos
and
pop
clc
cwtl
popf
mov
lcall
sub
lea
push
lcall
icebp
scas
push
sbb
jge
or
add
add
fucomp
sti
jns
jae
add
cmc
das
jl
dec
add
inc
insb
add
ds
lock
ja
xchg
jle
jo,pt
add
add
add
inc
xor
je
push
adcb
and
fcom
dec
add
add
push
or
xchg
lds
add
add
stos
movsb
mov
in
shl
mov
mov
loop
mov
jb
arpl
xchg
xchg
jbe
outsl
in
sbb
mov
clc
int3
inc
add
add
das
xor
std
add
add
outsl
xchg
ljmp
push
aad
push
test
lds
outsl
jno
mov
adc
push
pop
mov
arpl
sub
in
inc
add
ljmp
mov
xchg
or
fmuls
add
test
std
sub
scas
mov
cmp
mov
mov
jge
xchg
mov
repnz
mov
rcll
dec
aas
dec
aad
push
in
sub
add
add
add
pop
sbb
pop
icebp
xchg
cmp
add
mov
std
xchg
loop
insb
add
add
mov
add
add
leave
sbbb
and
add
add
maxps
push
jp
fldl
inc
add
das
or
add
dec
call
aam
xchg
insl
sub
mov
test
ret
or
mov
hlt
shlb
out
ficoml
add
sub
fsubl
push
mov
inc
in
mov
in
dec
cmpsl
jne
mov
xor
add
add
add
add
incl
loope
lret
cmc
icebp
enter
dec
dec
iret
push
adc
lahf
or
mov
xchg
clc
iret
xor
or
add
add
or
lods
or
mov
xchg
cmc
aad
mov
insl
push
and
add
add
scas
xor
testb
mov
daa
xor
stos
push
mov
inc
add
adc
add
add
add
push
jne
mov
push
mov
add
add
fcomps
out
add
iret
xor
mov
movsb
mov
xor
inc
outsl
cmpsl
orl
add
add
jns
pop
les
gs
in
cmp
movsl
xor
pusha
add
hlt
shlb
daa
mov
xchg
js
pushf
mov
aaa
push
mov
jb
jge
mov
xor
mov
push
sub
add
add
mov
jmp
fisttpl
xchg
in
rclb
adc
sahf
mov
xchg
adc
fucom
popa
mov
inc
xor
ret
push
add
es
rol
popf
fnstcw
scas
shl
sbb
push
jg
mov
mov
mov
imul
fmuls
out
adc
add
add
mov
pop
test
out
adc
fcmovne
stos
jmp
scas
pop
sub
mov
enter
loope
jns
loopne
ljmp
pop
fcmovnbe
jno
xlat
pushf
xor
popa
inc
add
mov
cwtl
pop
cmp
insl
push
cmp
or
cld
inc
into
mov
jl
repz
loopne
mov
mov
adc
mov
mov
imull
jae
sub
add
pop
js
sub
arpl
push
aaa
add
xchg
test
sbb
mov
add
inc
xor
lods
roll
insb
add
mov
cld
push
pop
and
insb
add
add
out
mov
xor
adc
jmp
data16
mov
fisubl
pop
iret
sub
cld
int
inc
inc
add
dec
cmpsb
xor
jge
xchg
jae
int3
jmp
je
lret
or
inc
or
hlt
xor
push
jp
jle
pop
add
add
add
cld
pop
sti
or
add
add
jnp
jecxz
xor
aad
pop
lret
int
jmp
aaa
add
mov
mov
icebp
adc
je
add
push
xor
test
notl
outsl
rcll
cmp
frstor
add
mov
pop
enter
pop
xor
xor
xchg
arpl
cld
sbb
sbb
rorl
add
add
jl,pt
jmp
mov
inc
add
aad
std
daa
mov
adc
or
mov
repnz
out
xchg
mov
leave
fisubl
fdivl
mov
jo
add
js
pop
mov
hlt
add
add
add
or
mov
sbb
xor
mov
cmp
lods
das
mov
aaa
in
out
mov
lret
xlat
sbb
add
push
ljmp
insb
add
add
jge
lds
xor
sbb
aas
cmp
fwait
in
icebp
test
insl
stos
adc
testl
or
push
or
add
add
or
add
add
and
add
rcrb
ret
imul
dec
add
cmp
sub
add
add
push
xor
dec
pop
mov
sub
aaa
xor
push
cmp
mov
inc
add
fucom
push
pop
add
add
loopne
xor
idivl
or
mov
popa
out
inc
pusha
add
add
and
add
add
xchg
add
add
cmp
jl
rorb
mov
pop
aaa
fldl
mov
adc
cli
pusha
add
in
pushf
push
add
add
cmc
xor
sbb
stos
jg
cmpsl
or
les
adc
mov
mov
mov
ret
mov
dec
xorb
add
xchg
mov
add
add
mov
add
add
cmp
mov
jge
add
fimuls
mov
pop
lcall
cmp
add
mov
inc
mov
mov
add
mov
lea
mov
imul
mul
xchg
xchg
aas
stos
cmp
mov
dec
add
add
push
aas
or
push
jne
add
mov
in
add
mov
xor
push
fsubr
xlat
das
jge
cli
call
insl
dec
leave
adc
in
sub
popa
mov
inc
xchg
push
mov
insl
jp
outsl
pop
push
pop
add
jl
loope
lods
les
dec
xchg
xchg
mov
dec
add
mov
add
call
cmp
jae
in
lahf
mov
or
int
cmp
xor
jg
int
jmp
scas
sub
sahf
out
pcmpeqb
mov
mov
mov
xor
mov
repz
push
test
sub
mov
nop
or
sbb
add
int3
push
and
mov
xor
mov
sahf
push
movsl
std
add
mov
into
insb
add
fstps
push
in
mov
sub
mov
test
jno
xor
mov
mov
jecxz
imul
add
add
pop
jae
inc
add
add
add
int3
jo
out
insb
add
add
adc
fstps
sahf
rcl
add
add
ret
or
fisubl
enter
pushf
dec
add
scas
mov
movsl
cmp
lcall
fwait
add
mov
mov
add
add
cld
aas
xchg
in
out
add
pop
scas
mov
inc
add
add
cmp
mov
xor
dec
nop
cltd
enter
sub
add
add
add
xor
sub
mov
add
add
rcrb
add
add
add
mov
in
xchg
add
mov
mov
mov
xor
mov
iret
mov
and
mov
loop
ret
mov
push
jge
mov
jnp
and
adc
pusha
add
add
das
sub
mov
pop
inc
add
add
mov
lahf
xchg
cmp
adc
pop
test
icebp
mov
push
add
add
add
repnz
mov
std
push
mov
dec
add
mov
icebp
pop
pop
or
and
add
add
mov
repz
cmp
fsubrl
adc
add
in
lret
lret
jo
lahf
xor
shl
or
imul
add
add
jae
imul
leave
cwtl
into
sub
sar
adc
cwtl
or
mov
repnz
lret
jne
xchg
xlat
push
packuswb
sbb
int
sti
movsb
fadd
sub
mov
cmp
add
add
pop
das
in
xor
shr
jae
cli
mov
add
dec
jp
sti
mov
daa
add
sub
rolb
add
add
aas
cmp
add
add
add
jmp
mov
in
mov
mov
add
add
loope
add
cwtl
sbb
add
mov
mov
add
jg
fwait
and
add
inc
add
add
mov
dec
pushf
les
add
add
jae
xor
fimull
or
ret
add
push
out
and
add
and
mov
mov
cld
cmp
push
ret
add
add
add
pop
sbb
add
jb
leave
xchg
arpl
lods
mov
add
xor
inc
cmc
add
add
add
add
add
mov
add
mov
hlt
jbe
add
pop
shrb
add
add
mov
sub
sbb
adc
mov
add
add
add
add
xor
add
add
lret
adc
popa
push
leave
adc
ret
inc
ljmp
mov
add
sub
out
lock
dec
rorb
scas
pop
push
mov
mov
dec
add
jne
insl
jne
addb
es
add
movsl
std
adc
test
cmp
in
insb
add
add
xchg
or
mov
outsb
pop
mov
shl
test
aas
or
lods
cmp
sbb
sbb
lret
imul
in
popf
mov
dec
bound
jne
sar
or
dec
repz
add
xor
cmp
subl
rcrl
js
cmp
add
std
push
add
mov
sub
cmp
mov
mov
aaa
testb
sub
mov
xor
xorl
pop
loopne
add
add
faddl
mov
insb
add
add
nop
das
scas
inc
leave
popf
and
inc
lods
orb
mov
lock
add
jg
pop
aad
movsb
xor
enter
push
cmpsl
stos
inc
adc
add
mov
cmp
xchg
pop
sarl
mov
dec
inc
mov
sbb
mov
mov
pop
push
shl
mov
add
out
lcall
xchg
add
add
add
daa
rcll
outsl
inc
insl
lock
out
leave
push
push
add
push
xchg
outsl
pop
add
add
add
mov
add
add
aas
pop
mov
mov
push
les
movb
dec
add
add
mov
fsubs
cmp
fwait
mov
add
sti
cwtl
xchg
add
add
add
and
push
fadd
int
adc
add
xchg
add
add
sbb
sbb
mov
enter
je
xor
popf
xchg
das
add
add
add
test
scas
adc
pop
mov
in
mov
add
into
loop
pop
inc
mov
mov
add
test
hlt
repz
jecxz
mov
mov
xchg
xchg
and
pusha
add
add
add
popf
add
push
lock
jnp
cltd
aad
scas
loope
js
lret
pop
int
fisubrs
add
add
adc
mov
arpl
cmc
into
repz
aad
add
add
lahf
out
lds
xchg
adc
add
in
push
aam
leave
jecxz
std
in
inc
xchg
leave
push
test
test
add
cs
xchg
push
and
subl
mov
xchg
cmc
push
lods
pop
loop
sbb
scas
mov
aam
mov
sub
mov
xchg
push
mov
movsb
or
and
mov
jmp
mov
aad
add
cwtl
fxam
imul
push
aad
stc
call
call
subb
ljmp
fimull
inc
stos
aas
out
mov
mov
test
mov
pop
or
add
add
sub
jmp
cmpsl
jno
in
clc
loopne
adcl
jb
pushf
xchg
out
inc
sbb
je
xor
std
push
jo
add
add
rorl
fsubl
xchg
jno
pusha
add
idivb
lret
sub
and
add
add
aas
lock
mov
push
jno
rcr
sub
rorl
mov
mov
push
push
sbb
add
add
push
mov
imul
fmull
fldcw
popa
xchg
dec
mov
add
add
xchg
xchg
push
pusha
add
add
stc
test
lds
data16
aas
dec
adc
add
repz
int
jge
mov
jmp
int3
sbb
insl
mov
or
sahf
jo
cmp
xor
xlat
fcmovbe
xchg
out
jg
es
loopne
lret
iret
daa
pop
adc
mov
mov
in
xor
push
or
mov
jbe
outsl
and
cmpsb
mov
and
push
push
pop
xor
aas
pushl
mov
into
cld
cmpsb
pop
arpl
add
cmp
add
test
dec
add
add
sar
lret
loope
pop
jo
cs
jnp
stc
cmc
mov
dec
out
add
add
sub
mov
lods
xlat
imul
je
sbb
add
add
shl
xchg
or
add
add
add
jbe
daa
popf
xchg
leave
or
add
add
stos
xor
cmpsl
jnp
inc
mov
imul
stos
loope
ss
xchg
ret
pusha
add
xor
lock
iret
call
xchg
push
iret
pop
subl
fisttpll
arpl
mov
add
add
addb
fwait
outsb
pushf
decl
add
mov
sbb
and
and
mov
das
adc
jnp
pop
je
mov
add
roll
add
inc
add
add
add
jnp
sbb
add
repnz
popf
sub
add
add
pop
ret
jg
out
xchg
enter
in
mov
fists
jnp
mov
sahf
xor
push
add
add
add
mov
leave
and
jg
or
mov
dec
jecxz
outsb
lahf
sub
add
add
and
push
fisubrs
out
and
nop
inc
imul
push
dec
add
sbb
xchg
pop
add
fimuls
xor
pop
lret
sub
lock
sub
add
add
add
pop
stc
lods
or
mov
testl
add
pop
and
xor
jns
push
sbb
push
repnz
mov
sbb
es
ret
enter
ljmp
test
sub
or
adc
push
jne
xor
sti
test
mov
add
add
pop
fstl
or
xor
cmpsb
not
loop
insl
fdivl
shlb
add
adc
pusha
add
add
lock
cltd
mov
mov
sti
in
and
add
add
mov
push
cwtl
mov
add
add
inc
popf
jae
jb
pop
out
in
mov
sub
mov
add
add
mov
dec
cmp
mov
xlat
dec
sub
leave
xchg
scas
in
hlt
mov
gs
mov
jmp
inc
add
add
jmp
je
rcl
sub
push
xchg
adc
mov
pop
jmp
cmpl
dec
push
xor
mov
push
shl
fldt
xlat
mov
add
mov
andb
add
sbb
add
and
add
add
aas
push
adc
adcb
ljmp
xor
add
add
add
jnp
fwait
jg
mov
sti
xor
sbb
inc
add
sub
add
add
lret
shll
js
inc
mov
add
mov
mov
add
add
adc
fwait
dec
mov
cmp
sub
insb
add
add
adc
and
das
gs
enter
pop
mov
add
cmpl
mov
xor
sub
aad
add
add
jno
cltd
mov
add
add
and
mov
sub
adc
pop
out
ret
pop
aaa
lea
movsl
inc
add
xchg
into
push
and
add
add
push
lcall
jb
sbb
popa
scas
sub
shr
int3
int
cwtl
call
sbb
xor
push
or
mov
lock
jns
cmp
add
add
cmp
add
add
sbb
xor
imul
imul
clc
loop
aas
xchg
sbb
std
mov
jo
lods
inc
add
add
add
loope
mov
cmpl
sub
test
addr16
inc
mov
mov
push
mov
hlt
fldenv
add
pop
xchg
mov
sbb
aas
push
xchg
std
mov
add
add
add
jne
mov
push
dec
xchg
xchg
ljmp
mov
nop
test
pop
cmp
push
daa
pop
cmp
test
fwait
stc
ds
sbb
dec
popa
jns
adc
mov
add
add
mov
add
inc
shlb
mov
nop
fwait
xchg
mov
sbb
mov
cmp
add
mov
notl
xor
dec
fildll
add
rorb
push
pop
int
mov
pop
add
mov
mov
mov
sbb
mov
add
add
mov
mov
dec
or
std
or
sahf
out
adc
enter
add
add
dec
out
lea
outsb
jmp
add
sub
add
add
or
pop
orl
push
push
iret
dec
addb
jbe
or
jbe
xlat
cmpsl
cmp
add
mov
test
jp
outsb
cmp
add
pop
mov
add
sarl
add
add
sub
inc
movsl
ss
hlt
xor
loope
mov
xlat
repnz
outsl
aas
pop
out
fstps
push
out
xor
add
add
pop
add
cmp
add
add
mov
lcall
inc
mov
rol
lds
divl
jae
sbb
enter
je
jge
cmp
stos
in
clc
loopne
or
stos
movsl
sti
inc
lret
or
arpl
add
add
incb
add
add
scas
roll
aas
cs
add
jge
xchg
inc
mov
xchg
sbb
xchg
dec
push
push
mov
add
add
addb
adc
aaa
shll
arpl
add
mov
push
xor
inc
mov
sbb
push
sbb
inc
leave
and
add
add
jl
imul
add
dec
and
mov
xchg
cmpsl
sbb
lock
arpl
add
xor
test
loopne
pop
loop
pop
loope
cmp
sub
add
add
repz
ds
and
inc
add
mov
jb
fbld
mov
cmp
add
add
add
cmp
add
sahf
leave
mov
pop
fsubrl
add
cmp
or
mov
imul
inc
sahf
inc
adcl
mov
sbb
xchg
call
xor
cli
shll
cmp
cmpb
mov
imulb
insl
mov
push
inc
mov
cmp
mov
add
out
dec
add
int
aad
sbb
push
jp
add
add
dec
push
imul
and
push
dec
pop
cmc
fwait
sahf
mov
add
fwait
mov
add
mov
add
jle
rorb
add
add
mov
xchg
shlb
add
and
popa
and
stc
loope
imul
insl
js
xchg
loop
sbb
int
jne
jae
es
push
cs
mov
or
mov
mov
mull
mov
fists
sub
mov
inc
or
add
add
add
adc
mov
cmp
xchg
add
mov
or
add
add
jmp
add
add
add
add
add
mov
cmp
pop
adc
lea
sub
test
in
xchg
adc
mov
das
cli
inc
sti
cmp
leave
or
add
add
add
add
hlt
repnz
cld
jne
gs
add
imul
mov
fildl
cmp
xor
daa
mov
sbbl
daa
scas
jno
loop
xchg
inc
add
add
aad
loopne
out
les
adc
addr16
add
add
fcompl
pop
mov
stc
pop
push
mulb
cmc
lcall
add
add
ja
cmpsl
jl
pop
sbb
cli
inc
push
mov
in
enter
in
pusha
add
je
push
int
pop
repz
test
mov
gs
lret
cltd
add
add
jne
add
add
cmp
push
fsubrp
sub
add
add
mov
repz
fsub
push
fildll
add
add
jnp
or
outsb
adc
mov
jmp
cld
sub
sub
add
clc
mov
add
push
fwait
add
add
jg
test
push
sub
lahf
xor
add
fstpt
push
xchg
popa
dec
adc
mov
lret
jno
bound
add
add
push
addr16
pop
outsl
sbb
ficoms
cmp
mov
jae
add
add
xor
adc
faddl
lods
mov
repnz
sbb
ret
dec
add
in
xor
or
clc
xchg
arpl
mov
shlb
add
xchg
inc
sbb
lock
aaa
shr
test
add
mov
mov
mov
mov
mov
xchg
cmc
sahf
dec
shr
das
stc
xlat
inc
shll
push
aam
xchg
mov
dec
cmc
mov
inc
add
add
push
in
push
sub
mov
xchg
pop
adc
inc
add
add
aam
icebp
mov
sbb
jecxz
mov
mov
mov
mov
add
shll
mov
pop
popf
xchg
sbb
jg
fnstenv
jg
jnp
mov
leave
outsb
adc
mov
xor
add
or
daa
xchg
add
movsb
mov
add
add
sub
lods
shl
cmp
jecxz
cltd
popa
lock
rorl
lret
ficoms
ret
cmp
dec
add
mov
add
into
mov
jmp
jae
rolb
xor
pop
jne
add
mov
dec
mov
mov
sub
mov
adc
dec
fiaddl
jge
add
xchg
mov
lods
fistl
sub
rol
dec
out
fisttps
sti
sbb
xchg
sbb
add
dec
cmpsb
mov
add
add
add
imull
js
icebp
push
cmp
imul
add
mov
add
mov
and
jp
dec
enter
pop
cmpsb
aaa
inc
add
sbb
mov
mov
inc
mov
clc
jb
push
ret
icebp
cmpl
mov
and
clc
gs
mov
ret
xchg
pop
sub
add
add
push
stos
leave
leave
movsl
push
repnz
pushw
add
stos
stos
push
mov
test
rcrl
add
add
add
ret
xchg
mov
and
mov
push
rolb
inc
sbb
push
mov
add
add
mov
scas
adc
leave
mov
ljmp
arpl
sub
add
add
stos
mov
stos
aaa
dec
inc
mov
lods
out
cltd
ds
andb
js
add
pop
cmp
fdivp
fsubr
addr16
loopne
popf
mov
add
popf
pop
mov
dec
aad
stos
fistpll
add
mov
add
add
adc
xor
mov
icebp
sbb
test
sub
sbb
xlat
and
mov
add
mov
je
xchg
cmp
jp
call
js
mov
imul
add
add
mov
adc
or
insl
fnstenv
xchg
sub
add
add
js
add
cwtl
xor
fcoms
xor
xchg
out
jl
sbbb
jmp
clc
sub
mov
stos
add
cmp
add
or
mov
scas
insl
test
xor
cwtl
sub
rclb
push
sub
std
push
adc
add
add
or
xor
in
inc
add
add
xchg
int3
push
sub
pop
add
test
enter
aam
gs
int
inc
add
add
add
sti
cmp
pop
cmp
jbe
cltd
mov
jmp
es
jae
filds
roll
inc
movsl
das
mov
push
add
add
or
xchg
scas
or
push
inc
jg
mov
aas
and
add
add
sub
mov
sub
insb
add
add
pushf
jb
out
cmp
in
out
test
sbb
add
sbb
mov
mov
insl
out
mov
cmp
cmc
pop
xadd
and
mov
es
mov
mov
ds
xchg
scas
push
inc
jno
les
fmull
stos
add
mov
mov
add
add
sti
xchg
dec
adc
add
out
add
xlat
jae
lahf
mov
pop
sub
cmove
add
add
fistpl
pop
add
jo
fistpl
ss
cwtl
xchg
push
or
mov
mov
xor
scas
aas
and
add
add
xor
popf
mov
add
add
add
push
mov
hlt
stos
mov
andb
lea
pop
mov
xor
dec
call
aam
int
mov
int3
lock
xorb
xlat
js
cmpl
mov
add
push
adc
sub
jle
enter
scas
test
xchg
push
cli
inc
je
pop
mov
add
xchg
paddsw
push
xor
mov
lea
pop
out
sbb
pop
pop
jne
repnz
pushf
int
and
jne
mov
fists
fsubrs
mov
add
add
pop
pop
movsb
imulb
dec
add
add
push
pop
out
gs
pop
xchg
xor
dec
imul
mov
push
jae
add
mov
xchg
and
mov
inc
imul
pop
push
xchg
imul
mov
inc
ret
push
fldenv
cmp
sub
fidivrl
xlat
cwtl
push
orb
ss
mov
lahf
cmp
ret
xor
mov
int3
movsb
outsb
scas
push
sub
dec
test
sbb
add
add
and
add
add
push
sub
mov
pop
lock
push
test
add
add
dec
xchg
bound
add
dec
inc
add
lcall
dec
add
cmp
adc
sbb
lret
mov
mov
jp
out
ja
scas
mov
jmp
add
mov
push
adc
or
mov
add
add
mov
sub
ds
add
and
mov
int
repnz
lret
inc
xor
test
fidivrs
jecxz
jb
pop
xlat
ss
inc
add
add
cmc
mov
negb
xchg
add
mov
lahf
mov
addb
inc
ja
push
movmskps
mov
and
in
cmp
arpl
inc
ja
mov
add
add
mov
dec
add
mov
js
push
sbbb
jns
outsl
push
sub
test
lods
adc
in
dec
stos
jl
jge
loop
sub
inc
mov
addr16
popf
sbb
xchg
es
fldl
add
xchg
and
mov
push
xor
jmp
lds
cld
jp
movsl
inc
outsl
jle
adc
neg
push
out
pusha
add
imul
add
mov
pop
push
rcrl
mov
stos
hlt
stos
cld
stc
addl
shlb
mov
inc
cltd
sub
mov
push
dec
inc
inc
pop
push
shl
xchg
jecxz
mov
imul
cmpl
aam
cmp
mov
add
repnz
mov
ret
fldl
lahf
sbb
pop
lahf
frstor
dec
pushf
test
mov
add
add
or
mov
add
add
mov
push
pushf
xchg
lods
add
stos
pop
mov
out
jp
push
and
test
aam
repnz
jns
xchg
arpl
cltd
pop
and
mov
sbb
cs
lret
mov
pcmpgtw
pop
add
add
cmp
cmp
xchg
mov
jmp
vmread
pushf
idivb
ss
out
pop
add
add
add
insb
add
add
inc
sub
outsb
cmp
lcall
rcrl
fwait
test
pop
jnp
mov
add
add
mov
or
mov
aaa
pusha
add
divl
and
in
pusha
add
dec
cmp
add
add
add
add
xor
aam
pop
cmpsl
dec
insb
add
add
ss
repz
add
cltd
mov
in
xlat
push
push
xlat
xlat
or
pop
and
add
add
sbb
xchg
mov
push
std
or
std
lock
stc
cmp
nop
mov
xchg
fnsave
xchg
or
add
add
pop
bound
cltd
mov
push
inc
pusha
add
add
add
cmp
mov
add
add
jmp
add
jmp
aaa
sub
add
add
dec
shl
and
testb
ror
mov
clc
adc
jae
cld
insl
stc
pop
jb
jb
into
cmp
add
add
out
push
sbbb
test
dec
sbb
or
mov
jno
jno
bound
add
xor
rclb
pop
xchg
jo
into
nop
jnp
sti
movsl
jl
ljmp
pusha
add
add
lods
lds
sbb
test
in
pusha
add
add
ds
insb
add
add
hlt
incl
dec
dec
out
mov
add
sbb
sbb
mul
cmc
pop
mov
cmc
daa
cmpb
cmp
leave
jle
add
add
frstor
roll
add
ror
movsl
adc
cmovo
add
add
sbb
xor
push
sbb
xor
add
add
add
pop
xchg
repz
out
loop
add
sub
adc
mov
lods
in
imul
arpl
inc
sbb
sub
mov
stc
fcoms
in
aam
ds
xor
sbb
rcr
jo
add
add
push
jmp
add
sub
mov
cmp
rcr
and
cli
out
pop
sbb
out
mov
mov
out
das
inc
sbbl
push
mov
repz
add
mov
jae
xor
add
add
ja
in
jge
add
mov
mov
iretw
arpl
shlb
and
xchg
and
insl
inc
add
adc
insl
xchg
faddl
adc
bound
aas
sub
mov
pusha
add
dec
imul
push
not
clc
call
inc
mov
add
jle
fsubrs
sbb
add
add
jle
cs
sbb
call
cmp
jmp
push
ljmp
outsb
sti
pop
inc
cmp
or
icebp
mov
fcomi
cmpsb
or
test
test
dec
shll
stos
inc
xor
jmp
add
add
xor
hlt
pop
andb
add
mov
sbb
add
mov
test
sub
push
mov
fdivrl
xchg
lahf
mov
add
sub
stc
pop
adc
mov
add
lahf
sbb
lret
jo
add
xor
inc
add
or
test
push
pop
andb
sub
mov
mov
add
xor
sbb
stos
popa
or
mov
stc
sbb
icebp
sbb
enter
cmc
cmpsl
popf
and
mov
or
cvttps2pi
add
add
xchg
aad
cld
pop
xor
xchg
push
cs
int3
mov
inc
add
add
add
in
cmc
clc
and
fwait
and
mov
cmpsl
cmp
mov
pop
js
orl
sahf
mov
mov
add
add
or
lods
ficomps
pop
dec
and
mov
pusha
add
add
aad
mov
inc
adc
jmp
cmp
cld
dec
iret
iret
bound
add
add
or
add
push
mov
jg
add
or
add
add
mov
inc
cli
dec
loop
fidivs
or
add
add
push
adcl
shlb
or
inc
and
rorb
add
add
add
add
sub
mov
mov
dec
jle
push
out
jbe
mov
jns
mov
pop
sbb
cmpsl
mov
sub
add
add
push
sub
movsl
shll
stos
test
jmp
mov
rcll
rclb
dec
popf
pop
mov
mov
out
jg
cmc
dec
imul
mov
cmpsb
or
mov
movsb
frstor
xchg
mov
and
add
add
adc
mov
add
add
cld
pop
sarl
sub
add
add
pop
sub
stos
stc
aas
sbbl
or
les
jb
popa
and
sub
mov
push
inc
ficoms
add
add
mov
add
lods
xchg
jmp
ljmp
mov
lods
xchg
sub
mov
call
pop
ds
mov
dec
and
mov
out
cmpsl
xchg
sbb
add
push
sub
add
add
out
jp
pop
jg
sbb
aad
add
mov
mov
fcom
lahf
stos
movsb
repz
test
dec
aad
data16
inc
add
add
mov
lea
ss
or
stos
mov
adc
mov
mov
xchg
mov
fidivs
rorl
mov
add
add
add
popa
ja
adc
adc
clc
lods
and
add
add
jle
insl
push
adc
repz
xchg
mov
outsb
adc
cmp
add
add
and
int
cltd
sub
test
ljmp
incl
shl
inc
add
add
sub
dec
add
mov
jmp
add
lahf
int3
aad
aaa
lret
sub
mov
or
add
add
add
lods
fldt
add
add
and
add
and
dec
mov
int
dec
add
mov
andb
add
cmpsl
or
mov
inc
dec
cld
sbb
dec
cmp
mov
inc
inc
mov
or
cmp
push
lcall
mov
stos
mov
insb
add
repz
jno
sub
pop
imul
je
addr16
loopne
scas
in
dec
cmc
mov
pop
cmp
sub
add
add
and
inc
pop
jmp
test
das
fisubl
add
add
fsubrs
push
mov
push
in
fucom
pop
int3
pop
adc
mov
add
mov
xchg
mov
out
enter
xchg
push
out
or
lods
cmp
leave
ret
dec
add
add
add
mov
add
add
ret
shl
fbld
add
add
jp
add
add
xrelease
pop
jp
jmp
hlt
sbb
add
add
and
mov
push
imul
pop
sti
pop
mov
popa
xchg
stos
and
cmp
pushf
cmpsb
mov
push
add
enter
mov
add
iret
movsl
pop
and
pop
sbb
add
popf
faddl
add
add
add
add
pop
roll
xchg
sbb
push
in
fcmovnbe
pop
xor
mov
scas
repz
add
add
add
mov
mov
jmp
mov
sbb
ss
clc
dec
adcl
push
jp
adc
add
sbb
pop
xlat
cs
sub
add
add
mov
lahf
xor
arpl
xor
add
add
add
xor
repnz
call
in
xor
add
add
scas
jg
ret
loop
mov
cmp
cmpps
es
adc
cs
in
add
ret
fucomip
pop
dec
repnz
popa
jns
xlat
or
cmpsl
sbb
xchg
scas
pop
xlat
mov
mov
gs
and
insb
add
add
jge
nop
fldt
add
add
cmp
aad
outsl
sub
add
add
lcall
mov
add
add
mov
out
fistpl
push
stos
mov
imull
roll
or
inc
pop
mov
iret
imulb
fidivrl
adc
add
add
shr
fbld
lcall
jne
pop
repz
xchg
adc
ffree
sbb
sbb
fisttpl
dec
mov
jne
and
mov
add
add
sub
cmp
cli
xor
add
mov
sbb
sti
out
jg
nop
cmp
cmp
jg
inc
add
add
aam
jl,pt
jae
daa
jge
sbb
test
sub
jp
ret
mov
pop
outsb
ljmp
add
cmp
lahf
push
mov
add
repnz
push
repz
dec
test
jp
push
push
jne
lcall
stos
ficompl
jge
add
mov
or
add
add
sbb
sub
add
add
sub
add
add
inc
xor
into
sbb
pop
cmp
ss
push
mov
add
add
out
jg
ss
mov
xor
add
add
add
mov
cs
add
dec
jb
shr
xor
jbe
shll
add
add
add
sbb
push
sarb
push
xorl
push
data16
sub
adc
jo
mov
arpl
jb
mov
sbb
xor
mov
insb
add
add
mov
adc
add
push
lret
repz
sub
cmpsl
cmp
xor
add
add
das
jo
loop
add
add
cmp
add
xchg
xor
sbb
lret
scas
lods
in
arpl
xor
lock
add
and
mov
fmuls
inc
fldcw
ljmp
inc
add
add
out
and
jo
leave
lcall
mov
cmp
mov
jge
inc
add
add
leave
mov
xlat
lret
fidivrl
push
inc
inc
cmpsl
xlat
pop
pop
mov
insb
add
add
push
mov
jnp
jecxz
add
cmp
mov
xor
outsb
or
dec
cli
jne
pop
out
test
or
add
add
mov
negl
add
jmp
add
repnz
sub
xchg
mov
call
mov
into
in
or
mov
add
add
inc
add
add
subl
add
cmp
fisubl
add
cmpsb
xchg
push
cmp
push
int3
adc
push
or
mov
pop
rcll
int3
pop
jno
int
je
cmpsb
cwtl
leave
lret
insb
add
pop
fldt
fisttpl
je
mov
fisubrs
int
ror
ret
jp
adc
gs
stos
sub
mov
ljmp
add
sar
int3
jp,pt
mov
mov
mov
jno
xchg
out
dec
add
add
icebp
mov
adc
lea
xchg
or
add
add
les
push
outsl
outsl
inc
cltd
sub
dec
cmp
add
push
pop
mov
add
add
stos
inc
ja
mov
jp
push
jno
int3
sbb
loop
andb
fistl
mov
es
imul
inc
add
add
add
loope
mov
push
mov
jge
pop
pop
push
test
mov
pop
imul
mov
nop
push
cmp
mov
call
vmovaps
fidivrl
xchg
stos
xorl
repnz
mov
add
add
addr16
cmc
xchg
dec
sbb
xorb
mov
neg
mov
xor
mov
add
or
mov
fcompl
mov
inc
dec
repnz
xchg
movsl
mov
pop
test
push
loope
sub
or
add
add
lods
mov
ds
cmpsb
fcomps
jp
push
stos
data16
insb
add
add
sbb
push
pop
or
je
add
add
inc
add
iret
es
test
add
add
test
mov
dec
push
sub
aam
add
mov
arpl
mov
pushf
jae
in
mov
and
add
add
mov
adc
mov
sbb
dec
xchg
mov
out
mov
sahf
push
ss
ja
dec
mov
aaa
push
in
loope
popf
jne
scas
popf
pop
dec
out
fmuls
mov
push
dec
add
add
pop
lcall
cmp
mov
cs
cmpsl
or
add
mov
xchg
pusha
add
add
sub
xchg
lret
or
add
add
mov
fcoms
popf
out
adc
inc
test
add
add
mov
inc
scas
sub
int3
andl
lea
into
mov
arpl
fimuls
push
mov
or
add
add
mov
add
fldenv
add
add
outsl
sub
dec
mov
add
pop
femms
push
cmc
adc
add
lock
out
pusha
add
stos
pushf
sub
mov
adc
lds
fwait
inc
nop
jae
arpl
cmp
call
ret
mov
inc
sti
sarl
dec
add
add
add
out
ret
outsl
insl
pop
mov
push
cmc
mov
insl
mov
add
cltd
add
ret
or
mov
mov
std
pop
cmp
cmp
jo
mov
fcmovu
and
jge
shll
add
stos
outsb
outsl
ret
ret
add
add
add
xchg
push
mov
popa
ret
test
add
pop
sbb
repnz
pop
clc
shll
mov
in
and
and
bound
repnz
add
add
arpl
roll
jae
add
add
or
add
add
jbe
lea
aad
loope
cmpsb
shll
push
push
jae
lea
sub
mov
add
add
fisttpll
int
add
add
add
add
mov
inc
add
icebp
mov
clc
aas
mov
dec
fdivs
mov
add
add
rorb
int
mov
lahf
mov
mov
cld
pop
ret
cmp
cmpsb
xchg
test
outsb
inc
sbbl
lock
loopne
add
add
leave
xchg
add
add
add
mov
in
mov
cli
cs
movsb
in
clc
inc
add
jns
into
mov
js
out
pop
xchg
mov
xor
sub
add
add
jp
scas
sub
mov
xchg
pop
pop
ror
mov
mov
add
jbe
adc
mov
xor
test
dec
fwait
loopne
pop
pop
mov
add
add
dec
lea
push
rcrl
enter
fisttps
mov
push
arpl
cmpl
mov
add
in
sahf
sbb
mov
push
dec
dec
add
add
add
jl
and
mov
outsb
in
int3
xchg
or
add
aam
fidivs
bound
xchg
add
mov
pop
dec
cmp
lea
dec
mov
outsb
mov
pushf
js
stos
mov
jl
cmpsb
and
mov
add
add
add
ret
ja
add
or
mov
add
add
jb
cmp
add
or
sub
ret
call
mov
cmc
sub
mov
movsl
iret
pushf
lretw
arpl
movl
xlat
out
les
std
add
pop
in
insl
aam
lea
stc
sbb
cmpsl
sub
mov
inc
popf
or
add
test
out
subl
andl
sbb
add
jnp
movsb
xchg
jg
push
cmp
int
mov
cmpsl
cmc
pop
rcll
inc
in
and
mov
mov
add
js
ss
out
add
xchg
loopne
shrl
rolb
add
incl
mov
aam
sti
rorb
es
and
add
add
xor
mov
push
sarl
push
fcmovnb
in
call
cmp
xor
addl
pop
outsl
loopne
add
add
add
jnp
in
sbb
push
pop
adc
add
add
orl
shr
or
cmp
xchg
cwtl
add
and
cld
mov
mov
pop
sbb
xchg
jns
or
ljmp
add
xchg
inc
lock
dec
sub
mov
sub
add
add
div
cmp
sbb
mov
dec
fisubrl
inc
cmp
push
adc
add
add
movsb
dec
xchg
add
add
add
in
mov
popf
or
imul
add
mov
push
out
addr16
bnd
imul
test
add
add
mov
or
add
add
mov
fwait
and
mov
push
and
add
add
push
sbb
xor
dec
inc
aad
add
jg
mov
add
push
ja
hlt
test
and
add
add
dec
cmp
add
add
xor
mov
loope
das
addl
mov
sub
add
add
xor
fidivl
andl
mov
sbb
xchg
cmp
jae
xor
push
fldcw
es
shl
ret
test
hlt
lret
lret
add
add
jmp
mov
add
sbb
lret
mov
sbb
addr16
dec
cmp
mov
mov
xorb
jb
mov
fcmovne
mov
mov
add
add
mov
fwait
dec
add
add
loopne
cmp
sahf
fisttps
mov
push
scas
or
sarb
jmp
jge
gs
add
xchg
push
stos
pop
lock
mov
mov
mov
pop
jle
hlt
push
jl
bound
fsin
adc
and
jb
loopne
shlb
add
xor
add
add
lods
shrl
add
mov
mov
loop
pushf
push
pusha
add
add
add
pop
xor
arpl
mov
adc
or
aad
push
cwtl
out
ficoms
push
aaa
lds
popf
cmp
xchg
inc
cmp
gs
add
into
cli
sub
or
add
add
aas
fnsave
enter
xor
add
pop
sbbb
hlt
inc
jb
int
add
mov
cmpsl
ret
push
mov
mov
add
add
les
popw
iret
repnz
cli
test
add
add
add
push
pop
loope
in
xchg
and
pop
cwtl
hlt
sbb
add
xchg
add
add
inc
jo
jge
outsl
lods
scas
in
push
sub
mov
ds
push
outsl
push
adc
dec
loopne
loopne
and
movsb
xchg
lods
out
sti
mov
dec
xor
inc
push
imul
jnp
cltd
hlt
repz
add
add
mov
add
mov
xor
jne
jl
inc
inc
add
cmp
add
mov
lods
call
cmc
push
or
fcompl
inc
out
pop
jne
sub
xlat
sub
add
add
cmpsl
add
dec
scas
popf
push
das
cli
dec
push
xor
or
mov
mov
xchg
push
sti
and
mov
or
add
add
add
add
mov
jbe
enter
insl
int
inc
inc
fistps
xchg
int3
rol
rorb
enter
sbb
mov
add
out
loope
mov
js
jp
std
mov
add
add
xlat
inc
in
addr16
adc
mov
ja
cmp
add
add
das
fucomip
pop
in
aad
cmpsl
jno,pn
test
xor
or
add
add
jns
add
add
sahf
pop
pop
sbb
stc
cmp
add
add
adc
lcall
vcvtps2pd
add
add
mov
mov
roll
popf
aas
test
jg
mov
imul
pop
outsl
outsl
stos
lds
add
push
sbb
inc
cmp
filds
inc
je
loopne
sub
cld
js
or
mov
in
add
add
sbb
mov
add
enter
sarl
callw
dec
fdivl
cmp
ss
jmp
pop
pop
dec
add
add
mov
add
add
shrd
add
pop
jns
outsb
mov
xchg
push
inc
cmp
mov
ret
adc
xchg
mov
adc
add
aas
sub
add
add
addr16
sbb
add
add
add
fdiv
out
jne
int3
pusha
add
add
cwtl
loopne
das
test
push
xor
xchg
ljmp
add
pop
addb
add
inc
add
lahf
cmp
lods
sub
sbb
add
add
add
fsub
xchg
add
add
fdivs
pop
mov
add
add
xor
add
inc
jnp
out
cmp
pusha
add
sbb
cld
or
sub
int3
pushf
jno
and
add
add
fwait
out
xchg
call
out
xchg
or
add
add
scas
push
fisttpl
jbe
test
testb
mov
imul
dec
mov
mov
jne
cwtl
add
add
add
xchg
test
mov
movsl
mov
add
ror
repz
rorl
jl
insl
pop
pop
or
jle
fcoml
mov
dec
xor
fisttpll
dec
add
mov
sub
mov
add
or
xor
push
adc
movd
inc
add
mov
out
add
add
add
mov
jbe
inc
push
mov
lcall
add
popa
sub
add
add
and
sub
sbb
push
setp
push
js
dec
add
cs
add
add
mov
xchg
lcall
jne
add
add
mov
add
add
mov
popa
xchg
in
icebp
xchg
insl
sub
jle
into
addr16
add
add
fimull
and
pop
fistpll
ret
sub
add
add
add
mov
mov
cmp
ret
mov
or
mov
arpl
push
imul
add
ret
push
cld
xchg
sub
add
push
iret
shr
jecxz
pop
lds
push
hlt
test
add
add
add
into
mov
mov
mov
mov
and
add
push
outsl
cmpsb
sub
add
add
sbb
add
add
jns
push
pop
scas
out
dec
mov
inc
pop
xchg
sbb
test
inc
fstl
lea
lea
mov
ret
xchg
dec
add
add
int
jns
xor
in
add
cld
inc
imul
add
inc
add
stos
cli
dec
les
mov
add
test
xchg
ret
push
decb
mov
add
add
popa
xor
add
and
lea
xchg
fwait
lods
mov
add
add
add
out
mov
or
adc
add
mov
add
add
push
push
jmp
rclb
xor
adc
cmp
std
gs
push
mov
mov
and
add
add
test
jl
cld
mov
add
add
xorb
pop
sub
in
push
out
mov
fiadds
add
add
add
add
idivb
jnp
mov
sti
icebp
mov
add
sub
or
cmp
xchg
adc
lret
sub
add
add
aam
add
add
sbb
push
das
cmpsl
mov
inc
add
mov
sbbl
mov
mov
add
add
aam
gs
stos
adc
add
mov
sti
lock
out
in
ret
sar
dec
mov
data16
or
add
add
enter
loope
inc
add
add
rclb
aas
jl
vpshufhw
mov
jle
sarb
push
nop
stos
mov
pop
dec
dec
add
add
test
fwait
bound
sbb
sbb
shrl
add
pop
fucomip
mov
inc
push
xor
sbb
shll
add
add
in
push
and
jge
mov
jge
int3
popa
jbe
cmp
fidivrl
insl
cmp
sti
shlb
add
xor
lret
fwait
jl
mov
mov
add
add
in
hlt
sbb
in
enter
add
fisttps
pushf
dec
lods
xchg
daa
push
sub
add
cmp
int
dec
mov
push
and
xor
add
jl
or
add
and
add
add
popa
xchg
mov
add
or
jnp
or
loop
hlt
stos
mov
jae
lea
outsb
arpl
mov
add
fdiv
data16
pop
js
inc
shrb
push
rcl
shrl
gs
add
dec
repz
or
add
fdivrl
insb
add
add
add
add
scas
ret
jbe
or
int
aaa
mov
popf
in
push
std
outsb
test
pushf
adc
add
add
and
push
inc
add
sub
add
pop
daa
add
and
aam
ret
imul
adc
push
nop
out
mov
add
in
das
xchg
mov
cltd
loopne
add
es
call
mov
dec
add
add
inc
mov
rcrl
mov
xor
fdivrl
adc
add
add
adc
sub
add
fdivr
pop
pop
daa
cmovno
add
cmp
add
cmp
iret
test
insl
dec
add
add
push
xchg
add
add
mov
sub
add
add
mov
movl
outsl
xchg
sub
push
and
add
jns
aad
lahf
mov
xchg
loope
or
add
add
sub
bound
stc
xchg
enter
or
dec
add
add
movsb
xorl
lret
imul
sub
out
pop
push
fadds
xchg
add
add
add
movsb
ret
dec
dec
imulb
add
inc
add
add
pop
leave
xchg
pop
mov
or
mov
adc
add
add
cmp
out
fldcw
mov
xor
inc
add
xchg
add
add
inc
add
jo
mov
test
out
std
sbb
outsb
add
jg
xor
push
lods
dec
add
lahf
ficoms
cmp
mov
add
add
cmp
cmovg
jp
fisttpll
add
mov
leave
pop
test
add
push
jo
jge
jmp
add
jp
push
out
mov
test
ss
add
add
sbb
rorl
cmp
clc
sub
add
add
loope,pn
inc
add
add
je
sub
decl
mov
or
mov
mov
add
pop
insl
lcall
loopne
test
cmp
add
pop
sbb
xchg
iret
push
repz
add
in
jg
movsl
ja
je
ljmp
aam
add
adc
add
in
sub
add
add
int3
out
das
cmp
add
add
sahf
repnz
ret
push
jbe
push
xchg
dec
inc
add
add
out
mov
push
fsubrs
mov
xchg
mov
hlt
cs
movsl
mov
pop
and
add
add
push
shr
pop
xor
add
add
xor
xchg
adc
movsl
shlb
mov
cmp
outsl
sub
int3
aam
dec
pop
test
hlt
mov
mov
add
adc
std
ja
ds
pusha
add
add
jle
dec
cltd
cmpsb
ds
add
add
xor
mov
jae
dec
add
add
jae
push
jne
jae
les
lret
add
add
and
aas
cmp
add
add
push
adc
cwtl
daa
lea
dec
xor
bound
inc
add
add
xor
xchg
add
adc
stc
fcmovbe
int
lcall
insb
add
add
cmc
jl
push
and
mov
xor
inc
add
in
cmpsb
inc
add
add
xlat
sti
pushl
cmp
add
add
push
fwait
jo
jo
cmpsl
push
pop
cmp
jecxz
cltd
pop
int
test
sbb
dec
add
add
ss
js
push
pop
jle
bound
cmpsb
outsl
fsubl
test
pop
add
mov
aad
popa
xor
inc
dec
pusha
add
xor
loop
cmp
cmp
xchg
pop
pop
ljmp
add
sti
movsb
hlt
fmul
xor
or
pop
pop
push
adc
mull
cmp
mov
cmpsl
pusha
add
add
push
xchg
inc
pop
xchg
jne
dec
mov
rcrb
add
add
push
loop
add
in
lock
data16
pop
leave
xor
pop
push
and
movsb
clc
in
mov
add
nop
mov
inc
movsl
pop
jg
ret
push
into
jae
pop
aam
cltd
je
bound
mov
push
xor
dec
pusha
add
inc
stc
jns
add
sub
cld
inc
subl
std
sahf
es
into
popf
sub
fildl
add
add
mov
rcrl
xchg
pop
cmp
add
hlt
popf
adc
dec
lods
add
add
sub
add
add
jne
mov
xlat
icebp
sbb
cmp
shlb
popa
addr16
cltd
stos
sbb
mov
roll
cwtl
aaa
jne
inc
add
xor
es
push
arpl
pop
fstp
and
add
add
mov
sub
sub
add
add
enter
lret
push
and
add
cmc
pop
jb
add
push
out
dec
add
add
xchg
dec
add
mov
pop
mov
add
add
dec
les
addr16
dec
fimull
insl
mov
jecxz
daa
inc
or
lock
adc
mov
and
jb
pushf
imul
cli
or
movsb
orl
ds
insb
add
add
test
push
clc
mov
add
add
add
xchg
push
sub
enter
sbb
xor
xor
lret
loopne
gs
pushf
mov
mov
iret
dec
add
mov
add
adc
lahf
mov
mov
mov
rolb
add
aas
popf
sbb
push
js
add
add
lods
mov
inc
dec
add
add
xchg
test
sahf
cwtl
leave
sar
push
fwait
inc
dec
add
add
inc
push
jns
int
lock
punpckhbw
add
add
inc
push
and
add
add
adc
add
insb
add
sbb
jb
jno
xorl
xor
les
push
inc
add
add
fcoms
and
xchg
fdiv
outsb
cmp
sub
xor
lret
test
push
or
lock
or
std
pusha
add
jmp
dec
mov
add
add
aaa
sti
pop
xchg
fistps
lea
lcall
and
add
add
lods
dec
add
add
out
push
sbb
add
add
stc
inc
add
add
test
and
jl
jp
and
push
push
iret
fwait
leave
dec
jae
sub
add
add
xchg
cmpsb
loope
pop
dec
cld
jl
and
mov
dec
cmp
add
add
ret
out
xchg
sub
add
add
add
add
add
clc
push
arpl
mov
icebp
repnz
sahf
addr16
popa
repnz
loop
pop
sbb
xchg
lcall
add
ret
and
add
add
pop
mov
roll
mov
into
in
add
std
or
add
loope
xor
js
inc
out
enter
dec
pop
mov
nop
adc
cmpsl
add
mov
add
pop
repz
add
add
xchg
lret
pop
xchg
jecxz
outsl
add
add
add
movsb
push
aad
mov
adc
mov
dec
ss
pusha
add
add
add
add
cmp
in
mov
xchg
jbe
add
add
push
dec
push
dec
xchg
les
popf
mov
pop
or
inc
add
sbb
pop
pop
cwtl
insl
xchg
orb
add
test
add
push
adcl
cwtl
pop
sbb
mov
push
xchg
out
xor
cmp
cltd
jae
aaa
adc
jb
popf
adc
pop
jecxz
pop
psubsw
adc
mov
adc
rcr
and
jp
dec
add
test
sub
es
or
andps
loope
cld
adc
xchg
or
daa
shl
xchg
das
insb
add
pop
out
mov
push
mov
sti
pushf
sbb
add
push
cmp
push
pusha
add
add
mov
jmp
mov
int
push
lea
add
add
int3
add
jns
sahf
xlat
adc
push
popa
enter
add
bound
add
and
add
inc
add
inc
sbb
sti
dec
aam
roll
inc
or
mov
add
add
adc
sub
add
fisttpl
jae
xorl
outsl
iret
out
fsubs
add
add
inc
add
xlat
ret
cmp
enter
add
cld
jmp
scas
test
push
jle
add
add
cli
or
add
add
add
add
xor
rcrb
out
add
add
xchg
jge
test
add
mov
lret
in
mov
aam
mov
adc
or
xchg
mov
mov
lahf
xlat
ss
testb
add
inc
les
inc
inc
mov
lcall
push
sahf
lret
xor
xchg
or
stos
fwait
data16
and
sbb
sahf
sub
out
repz
mov
dec
rorb
jecxz
notl
dec
rcrb
add
mov
and
add
add
mov
pop
imul
pushf
notl
gs
jns
cmp
cs
gs
mov
mov
inc
outsb
std
scas
das
addr16
dec
add
add
add
jp
xchg
scas
pop
mov
mov
xchg
pop
inc
add
ss
daa
cmp
clc
sti
cmp
dec
add
add
pop
insb
add
add
pop
jmp
jecxz
inc
arpl
sahf
sbb
repnz
fmuls
xor
xchg
iret
mov
pop
in
jb
notl
adc
and
loope,pn
cmp
es
shl
mov
push
imul
dec
add
rol
dec
and
dec
rcll
adc
pop
mov
mov
mov
inc
setnp
add
add
sub
or
mov
divl
mov
aad
jge
add
add
mov
add
add
les
repnz
lds
sub
add
add
push
cld
inc
sub
mov
jae
push
pushf
jmp
sub
add
add
add
sub
xchg
add
or
add
iret
sti
popa
leave
or
pop
cs
add
add
dec
decl
add
jg
sub
repz
push
cld
push
test
and
mov
aam
iret
mov
add
mov
mov
mov
shrb
add
jne
pop
jp
mov
lods
stc
sbb
add
xchg
cld
mov
cmp
or
mov
add
add
pop
lahf
pop
inc
push
inc
add
jl
sbb
add
add
add
add
insl
adc
idivb
push
clc
jb
sbb
insb
add
lea
repz
js
xor
or
in
je
add
sbb
dec
cwtd
mov
or
add
add
mov
push
or
xchg
sub
mov
pop
xchg
push
push
cmp
mov
mov
cmp
push
jns
add
adc
popa
push
outsl
sub
fstl
jno
pushf
outsb
scas
add
dec
aam
orb
cmp
add
add
xchg
mov
ljmp
xchg
stos
popl
pushf
add
add
fcomip
das
lcall
jecxz
mul
daa
push
out
and
mov
lods
cltd
out
jg
je
dec
add
add
shrl
push
push
cmpsl
or
add
ret
out
pop
push
mov
add
add
mov
int3
push
arpl
push
cs
aas
loopne
jnp
mov
add
add
daa
fmuls
xchg
mov
push
and
stc
aaa
sbb
sbb
leave
mov
add
repnz
sbb
push
lea
add
add
movsl
push
nop
lret
add
mov
mov
push
xchg
notb
xchg
in
pusha
add
jg
fimuls
add
xor
sub
cmpsb
cmpsl
ret
inc
dec
pop
mov
sti
aaa
lret
rolb
mov
enter
push
call
sbb
pop
sub
add
add
mov
das
push
pop
pop
mov
push
sub
mov
out
cmp
shrl
add
add
add
cltd
jl
sub
mov
jae
and
mov
mov
mov
jno
call
push
or
add
add
and
pop
repnz
jnp
add
add
in
lds
lahf
or
fsts
dec
add
sti
repz
mov
jnp
repz
popf
movsl
pop
push
cwtl
sub
mov
mov
ljmp
add
add
cmp
lret
add
add
call
ja
xchg
xor
push
mov
leave
push
push
jmp
jno
add
add
sub
xchg
fistl
mov
add
mov
xorl
and
sbb
lcall
xchg
pusha
add
divb
push
sbb
icebp
adc
add
add
add
adc
add
add
jnp
aaa
iret
inc
add
add
dec
add
pusha
add
add
lds
jg
add
add
add
add
add
xchg
ror
ret
adc
add
icebp
adc
fildl
add
add
mov
arpl
add
push
addl
add
jge
mov
sub
add
add
xchg
cmp
pop
jne
jmp
sub
cmp
add
testb
cmp
mov
and
jno
subl
sub
jo
push
popa
push
sub
and
dec
loopne
icebp
les
ret
incb
cmp
jmp
add
mov
add
pop
mov
shlb
add
add
add
add
lods
xor
outsb
add
lret
jns
or
stos
and
mov
add
add
stos
fmuls
in
cmpsl
sbb
insb
add
add
adc
stos
or
addb
je
aam
enter
inc
add
fcmove
adc
or
adc
mov
lret
lret
pusha
add
dec
mov
cmp
call
add
xchg
loopne
push
adc
fiaddl
add
add
pop
jb
imul
add
pop
gs
loope
adc
add
dec
add
fldenv
imul
xlat
jbe
or
lcall
or
enter
out
cli
ja
push
mov
push
arpl
xor
das
jo
cs
cmp
and
add
add
sbb
testl
add
lods
mov
aam
and
sbb
add
add
dec
or
rolb
add
jae
and
inc
add
add
sbbb
leave
es
ja
stos
outsl
push
add
add
insb
add
int
mov
mov
sbb
dec
and
sbb
aam
subl
add
mov
jl
xchg
inc
es
sbbb
in
leave
pushf
mov
jp
push
xchg
ja
mov
icebp
sbb
adc
mov
into
xorb
pusha
add
add
setns
in
negl
les
mov
jnp
sub
add
add
movsl
divl
pop
rcr
adc
add
sahf
mov
and
sbb
dec
add
add
add
ja
dec
inc
mov
add
adc
pop
sub
mov
pop
push
xchg
std
ja
pop
adc
push
hlt
ds
negl
hlt
int
jns
mov
mov
jle
mov
sbb
mov
inc
jb
xor
jbe
add
add
jno
push
sbb
add
add
cli
mov
mov
xchg
movsb
data16
sub
subb
rorl
xor
mov
sahf
movsb
cltd
inc
in
loopne
add
add
add
sub
call
push
sub
add
add
add
lret
fsub
gs
xor
sti
aam
and
pop
int
mov
in
mov
lock
negl
and
mov
xchg
cwtl
jg
mov
movsl
inc
add
jl
in
mov
and
mov
add
add
out
ds
or
mov
xchg
stc
pop
js
inc
lds
push
jbe
inc
outsl
sub
add
mov
push
outsb
lcall
mov
leave
jns
mov
jg
test
jle
mov
jg,pt
sub
adc
pop
xchg
dec
add
mov
loop
push
sub
mov
scas
xchg
ljmp
dec
outsb
sub
add
add
mov
jne
mov
cmp
inc
mov
inc
cs
adc
mov
inc
cwtl
mov
les
repnz
sbb
rorl
pusha
add
add
jne
ficoml
daa
mov
pushl
lret
cwtl
stos
mov
stos
or
test
push
push
pop
test
add
add
pusha
add
add
ss
and
add
add
push
and
mov
hlt
sub
push
push
out
movsl
cmp
xor
pop
int3
and
pop
mov
ret
push
xor
xchg
push
xchg
mov
sub
add
add
lds
cmp
adc
pushf
push
push
test
mov
loop
fucom
and
mov
add
add
add
add
sbb
pop
es
add
sbb
mov
mov
dec
cmp
add
add
rcll
call
out
addr16
add
add
mov
ja
xchg
dec
xor
add
add
ja
mov
pop
daa
push
pop
jne
jne
shrl
sbb
jns
dec
push
in
add
stos
jb
xor
js
lods
and
mov
loop
leave
ss
push
lcall
add
out
gs
push
dec
loop
mov
in
stos
xchg
mov
add
add
add
add
fdivrl
push
jge
xlat
or
push
in
adc
mov
in
and
push
repz
test
mov
add
add
lock
mov
movsl
lahf
pop
daa
aas
cmp
xchg
scas
enter
pushf
imul
test
cmpb
sub
add
add
loopne
add
mov
fistpll
pop
adc
cs
pop
in
ds
out
sub
add
sbb
add
jge
mov
add
jl
lods
xchg
int3
leave
shll
add
movsb
fisubrl
lods
pusha
add
sbb
add
add
mov
movsb
out
mov
scas
in
sub
add
add
add
xchg
inc
jno
cld
xlat
add
add
fdivrs
xchg
les
loope
sbb
les
aam
movsb
jge
sbb
push
mov
xor
add
add
mov
mov
add
push
cs
inc
add
pop
xor
add
add
mov
add
add
pop
cmpsb
xchg
xchg
xor
add
orl
icebp
stos
insb
add
push
and
mov
pop
subb
ljmp
push
lds
ljmp
add
insl
or
push
int
enter
inc
iret
push
xchg
stc
jl
not
pop
jl
mov
leave
mov
push
cwtl
lahf
ss
aas
pop
xchg
xor
pop
cmp
outsl
es
movsb
add
add
add
xor
outsb
scas
and
mov
mov
adc
sti
jbe
out
mov
xchg
clc
mov
add
jne
mov
add
add
cmpsb
rolb
sbb
mov
int
mov
dec
mov
fistpl
pop
stos
add
jmp
pop
cld
mov
add
inc
dec
ret
xor
insb
add
add
add
mov
outsl
mov
or
icebp
inc
add
mov
adc
fldz
aad
mov
and
sub
sbb
push
call
add
add
dec
add
add
mov
addr16
shll
filds
sahf
fldenv
dec
aas
jl
lahf
imul
aas
lock
sarl
mov
dec
pop
jo
les
insl
ljmp
xlat
mov
int
mov
inc
stos
jecxz
jle
push
popa
push
sti
test
mov
es
pop
std
xchg
sbb
imul
mov
stos
cld
add
lock
inc
dec
outsb
xchg
lcall
and
mov
das
clc
loop
rcrl
mov
mov
mov
sbb
push
inc
add
add
and
add
add
sarl
loopne
add
add
into
jne
and
inc
jle
fisttps
stos
incb
add
add
xor
pushf
shll
data16
xorl
bound
js
call
out
scas
in
insb
add
add
in
sub
add
add
sbb
add
add
or
lahf
int
test
add
jne
ja
add
add
aam
dec
psrad
jae
jno
aaa
jmp
and
sub
add
add
addr16
cmpl
dec
add
enter
in
jnp
add
pop
movsb
sbb
lds
jo
cli
fcompp
cmpsb
push
ljmp
jns,pt
fscale
xchg
in
stos
movsb
mov
add
adc
and
add
js
andl
add
xchg
or
aaa
xchg
push
cmpsl
imul
sub
add
add
push
insb
add
add
mov
add
jb
pop
popa
adc
mov
add
add
adc
pop
test
add
stc
rol
adc
imul
ficoms
inc
add
pop
out
sbb
push
jmp
cwtl
cmpsb
adc
mov
ret
mov
ficoms
inc
cmpsl
xchg
das
bound
sbb
push
dec
stc
push
pop
pushf
clc
pop
pop
cmp
add
xor
jg
jmp
movsb
icebp
ret
mov
xchg
adc
fldlg2
int3
cmp
ljmp
and
add
add
int3
call
inc
add
add
jmp
xlat
mov
xchg
sub
add
add
xor
cli
xchg
ficomps
cmp
pusha
add
add
in
loop
add
ljmp
and
sub
inc
sbb
dec
adc
push
repz
pop
jb
sub
ret
push
leave
xor
add
push
icebp
test
add
jge
push
cmpsb
xchg
or
lods
ljmp
repnz
add
add
mov
add
add
jmp
cmpsb
and
add
add
add
add
cld
insl
push
mov
push
xchg
adc
mov
mov
add
bound
add
pop
das
add
add
add
inc
mov
push
daa
mov
add
cmpsl
out
in
cmpsl
pop
pop
jecxz
push
xorl
mov
mov
add
add
mov
mov
sub
jne
pop
dec
inc
xchg
stos
in
jae
inc
les
pop
ds
sub
mov
je
lds
pop
mov
lahf
subl
add
add
mov
mov
mov
orb
add
add
pop
lock
ret
in
adc
cmp
imul
add
jae
arpl
int
mov
xorb
or
and
loopne
stc
cmp
add
or
add
add
sahf
and
in
pop
jbe
rcrl
xchg
punpckhdq
cmpsb
jl
add
add
add
add
add
pop
rorb
in
mov
sub
push
scas
push
mov
or
add
add
lds
pop
aas
inc
mov
xorl
add
int3
daa
mov
add
out
pop
inc
add
add
cmp
mov
mov
cmp
orl
popa
mov
pop
imul
mov
fwait
pusha
add
add
adc
sub
adc
rcrb
xor
mov
mov
push
adc
mov
mov
mov
mov
repz
aaa
popf
addr16
and
xor
ret
dec
fstpt
xor
add
subl
xchg
in
inc
cmpsb
xor
add
shl
jnp
cs
add
imul
subl
cmp
pop
out
lea
out
mov
push
jne
insb
add
add
dec
jbe
push
jbe
xchg
js
sbb
or
cmp
add
mov
pop
mov
into
xchg
mov
arpl
insb
add
pop
rclb
sub
and
sub
add
mov
jnp
adc
cmp
jecxz
daa
push
cmp
mov
jge
inc
shll
rolb
xchg
pop
addr16
sbb
std
cmp
fisubrl
movsl
es
gs
mov
add
aam
xchg
pop
adc
and
add
add
sarl
adc
test
jbe
fidivl
hlt
inc
push
pushf
in
pop
xchg
pop
lcall
insb
add
add
ds
mov
add
fcompl
sub
test
and
mov
push
mov
gs
dec
out
in
std
cmp
cwtl
or
lea
adc
ljmp
or
dec
sbb
test
mov
pop
fisttpll
mov
filds
mov
xor
inc
inc
add
mov
dec
or
fisubs
cmc
filds
cmpsl
test
pop
push
dec
out
sbb
jecxz
pushf
sahf
cwtl
or
push
jae
leave
cwtl
mov
mov
mov
push
inc
jp
insl
dec
leave
imul
sbb
andb
add
add
dec
ja
jnp
jmp
add
add
imul
lods
in
mov
pop
stc
pop
dec
add
add
push
and
inc
add
sub
add
add
and
lock
add
add
jle
shrb
add
add
sbb
test
lds
xchg
mov
inc
stc
xchg
or
add
add
call
add
add
add
lret
xchg
xchg
jo
lret
pop
jno
push
out
sbbb
push
ret
adc
add
add
jne
scas
divb
pushf
xor
fmuls
insb
add
mov
dec
xchg
push
xchg
mov
add
add
add
cmp
mov
call
push
push
add
dec
add
jge
mov
add
mov
out
loopne
sbb
add
add
fmul
iret
pop
inc
or
add
add
add
dec
pop
sbb
jecxz
pop
and
leave
and
mov
rol
cltd
dec
push
cmp
out
mov
mov
jle
jge
fisubrs
jl
gs
or
test
inc
add
add
add
ja
ret
xchg
bound
pushf
popf
pop
ljmp
inc
stos
ss
leave
pop
rcr
mov
rolb
xchg
into
aad
jecxz
add
add
sbb
shll
add
test
mov
push
jl
enter
mov
add
negl
testb
and
mov
mov
shl
xchg
xchg
sub
cmp
sahf
and
add
add
mov
mov
insb
add
add
mov
sub
add
add
andl
inc
ret
outsl
mov
insb
add
add
lret
jp
loope
ljmp
add
jae
pop
les
sub
add
add
pop
add
dec
push
dec
mov
xchg
jge
enter
jno
and
add
add
add
xor
dec
fsubrl
lcall
lods
xor
cmp
ja
ja
add
mov
add
fistpl
add
add
dec
add
add
loop
xor
cli
xchg
xchg
pusha
add
mov
adc
dec
push
ret
mov
add
rcrl
movsl
mov
add
add
add
enter
add
add
add
xchg
addr16
dec
or
or
mov
sub
add
in
sbb
fsts
push
aad
cmc
addb
mov
jne
add
lea
dec
push
xchg
gs
push
mov
push
aad
pop
rclb
adc
jno
push
cmp
fisttpll
xchg
cltd
out
dec
add
add
adc
sbb
adc
add
xor
dec
pushf
repnz
sub
mov
mov
fsubrs
add
add
mov
inc
add
add
xlat
aas
nop
or
add
mov
xchg
outsb
sbb
lret
dec
fimuls
sbb
add
add
push
or
add
add
lods
dec
std
push
dec
lock
sahf
rorl
repz
aam
add
cmpsb
int3
jne
imul
add
test
mov
add
sbb
add
add
add
cmpb
cmp
sub
add
add
std
es
sahf
lods
mov
push
ds
rorl
and
xor
std
int
stos
xor
ljmp
jl
add
cs
cmp
dec
lret
xlat
sbb
add
test
pushl
and
mov
sbb
xor
les
push
push
mov
icebp
inc
add
add
jb
pop
mov
add
add
mov
inc
add
mov
pop
adcb
outsl
sub
mov
out
enter
sti
adc
or
add
add
jae
or
aam
adc
add
sti
jo
test
mov
inc
push
cmp
lcall
dec
add
mov
xor
imul
pop
adc
cs
pop
fsubrs
stc
movsb
pusha
add
add
jo
add
mov
or
and
add
add
fstpt
xchg
mov
mov
dec
add
add
dec
fwait
adc
pop
mov
add
in
and
mov
add
jmp
add
cmp
flds
add
add
leave
outsl
int
jg
fmull
inc
add
out
push
add
mov
jecxz
out
inc
in
xchg
in
adc
push
stos
lcall
es
lcall
inc
hlt
insl
xchg
fidivl
sbb
data16
sbb
insl
jle
in
xchg
xor
adc
iret
repnz
mov
loopne
add
inc
dec
sbb
xchg
test
jno
in
movsb
int
add
add
jmp
cmpsl
mov
push
popf
push
insb
add
data16
test
stos
jnp
shl
add
mov
loop
enter
push
cli
arpl
mov
sub
mov
dec
dec
cmpsl
or
mov
inc
add
add
add
cltd
push
ja,pt
cmp
jno
pop
pop
in
lcall
mov
stc
movsb
bound
add
add
fwait
sub
add
add
sub
add
add
mov
or
fcoml
dec
loopne
sub
mov
mov
add
js
inc
sti
hlt
adc
adc
aas
lds
insl
push
out
dec
dec
shll
invd
add
add
cmpsb
or
pop
inc
cmp
mov
push
adc
aaa
xchg
pop
fisubrs
xlat
movsl
inc
out
je
or
mov
gs
icebp
adc
mov
jg
testl
add
add
pop
hlt
in
sub
mov
jb
add
jecxz
out
xchg
add
cwtl
cmp
mov
adc
fcompp
mov
push
pop
popa
push
inc
add
push
data16
add
add
in
inc
add
add
xchg
jp
push
or
jnp
repz
cmc
pop
adc
cmp
xor
dec
notl
add
cmpsl
sbb
stos
int
es
or
add
std
push
iret
xchg
scas
es
push
xor
sbb
rolb
adc
ja
add
add
pop
fwait
lret
xchg
xchg
mov
arpl
data16
add
mov
and
add
add
add
add
stc
cmc
xchg
add
add
add
dec
incb
scas
inc
add
push
lods
sbb
sub
fwait
add
jnp
jno
dec
jb
call
in
push
sti
mov
dec
inc
pop
mov
popa
mov
out
sub
int
jo
jp
push
out
mov
inc
dec
adc
inc
add
add
pop
xchg
aad
idivb
or
add
jae
inc
dec
add
add
jnp
mov
in
shrl
mov
push
adc
imul
xlat
dec
cli
jl
jl
clc
xor
dec
pusha
add
add
scas
in
mov
insb
add
fimull
mov
frstor
into
add
mov
ret
adc
sbb
add
cmp
add
add
std
pop
xchg
in
add
pop
cli
lods
std
cmc
mov
push
dec
add
add
pusha
add
add
outsb
lock
or
add
add
nop
in
imul
and
add
in
add
lahf
adc
push
loope
add
add
shr
fsubr
cmpsb
mov
xor
inc
out
sub
stc
pop
dec
es
cmpsl
jle
pushf
push
enter
mov
add
add
mov
addb
cli
sbb
arpl
popa
add
add
add
mov
pop
mov
add
add
inc
push
inc
add
stc
or
ss
test
lods
mov
popf
push
push
inc
adc
jae
dec
add
add
or
loop
sbb
dec
stos
cmp
movsb
or
dec
add
add
stos
xor
popl
jno
add
add
xor
pop
shlb
outsb
incb
adc
jbe
ret
mov
xor
mov
inc
mov
stos
jl
dec
add
add
push
popa
xor
lret
fildll
or
jle
add
add
add
popf
in
adc
inc
scas
or
add
add
inc
xchg
clc
andb
js
scas
and
mov
cmp
out
iret
add
fsubl
xchg
fistps
xor
inc
push
and
out
stos
sarb
andb
int
xor
retw
xor
cwtl
cmp
jae
or
xor
xchg
ret
push
clc
cwtl
jns
sub
or
mov
xchg
cmpsl
test
dec
dec
shll
add
add
xor
push
mov
lret
sub
sti
lret
pop
popa
mov
repz
movsb
add
insb
add
mov
adc
xchg
cmp
cmp
sbb
add
xorb
add
pop
mov
aaa
movd
in
xor
shl
mov
xor
roll
add
add
sarb
scas
sti
add
add
add
mov
mov
leave
out
jecxz
data16
test
add
add
add
fsts
add
add
fisubrl
add
movsl
ds
repz
repz
into
stc
mov
ds
push
cmp
and
in
loop
lahf
cmpsb
loop
icebp
pop
movsb
mov
mov
leave
adc
jp
add
mov
ja
add
cmpsb
inc
or
add
add
add
push
jl
sub
and
xchg
decl
cmp
mov
mov
lods
jnp
fcomip
clc
cs
push
out
in
in
shl
sub
enter
mov
add
dec
add
ficoml
popa
pop
outsl
jns
ss
mov
or
push
dec
push
mov
add
dec
add
add
xchg
and
add
add
add
mov
xor
push
dec
and
and
mov
xchg
inc
sub
add
add
jbe
repz
fstpt
add
mov
stos
jno
mov
xor
sub
mov
mov
stos
mov
ljmp
div
mov
mov
pop
bound
push
and
add
add
sub
cmp
das
mov
mov
add
mov
shll
mov
add
add
add
imul
dec
mov
add
sti
cmp
and
loop
jl
insl
push
fldl
xor
mov
repz
add
add
aas
mov
inc
add
add
cwtl
and
mov
push
cwtl
mov
out
push
nop
mov
add
enter
cmp
rorl
add
mov
mov
daa
mov
pop
ret
enter
jo
repz
mov
mov
mov
xor
pop
dec
add
mov
pop
xchg
lea
test
jb
fwait
std
push
mov
xchg
sti
rorl
mov
stos
cmp
dec
aam
inc
jecxz
add
aad
je
iret
pop
jnp
ja
cmp
add
and
dec
into
pop
fdecstp
jns
repz
repz
add
add
jb
push
loop
lcall
mov
in
mov
fwait
test
jmp
adc
add
add
mov
negl
mov
mov
xchg
jmp
jo
mov
inc
aad
push
cmp
mov
sbb
cmpsl
fsubrl
xlat
mov
sahf
sbb
hlt
or
mov
mov
cwtl
mov
sub
push
xchg
mov
popl
mov
jnp
icebp
xchg
mov
jecxz
inc
add
jno
bound
jmp
and
mov
cwtl
mov
add
add
sahf
jmp
andb
add
add
xor
and
xchg
aad
int
push
fldcw
xchg
loop
mov
xchg
pop
dec
inc
mov
inc
sub
mov
mov
stc
jle
cmp
mov
in
in
jecxz
push
mov
and
lds
js
jns
jl
shr
cmp
mov
popa
xor
pop
mov
and
rol
loopne
dec
das
jo
fmul
sarl
and
jmp
add
nop
or
int
push
or
leave
packsswb
and
adc
dec
mov
out
add
rcrl
inc
outsb
mov
je
stc
cli
mov
add
add
fwait
mov
mov
mov
loopne
ds
insb
add
add
lds
add
push
shlb
xchg
xor
jne
lods
inc
add
mov
jb
es
test
sub
jp
sub
add
add
out
outsl
popa
rcll
adc
cmp
lods
stc
push
add
add
add
shrb
mov
mov
int
dec
pop
ret
cwtl
idiv
and
inc
add
add
cltd
repz
out
sbb
pushf
lcall
add
add
adc
mov
je
shr
inc
jns
ret
mov
aam
adc
xchg
or
mov
mov
adc
add
add
add
stc
jb
jae
scas
out
mov
sti
inc
mov
mov
repnz
push
and
mov
and
adc
stc
test
call
andb
add
aas
call
add
pop
insl
mov
mov
insb
add
movsb
mov
pop
xchg
dec
stos
fildll
add
jge
dec
pop
xorl
std
test
inc
sub
add
add
jmp
pop
xor
mov
add
jg
push
scas
pop
iret
hlt
push
rcr
xchg
and
mov
gs
icebp
add
add
or
das
popa
push
outsb
mov
mov
adc
mov
lahf
pop
addl
pop
push
neg
push
rcr
aaa
xor
sahf
movsb
pushf
jns
xor
or
mov
ret
addr16
xchg
mov
xchg
inc
popa
mov
mov
add
rolb
adc
cmpsb
sbb
dec
add
add
xor
std
inc
stc
jge
xlat
cmp
je
in
or
mov
dec
adc
push
mov
cmpl
adc
mov
mov
dec
add
mov
in
xchg
sbbb
xchg
int
repnz
and
mov
sub
add
add
popf
mov
pop
lcall
jbe
imul
add
add
imul
ror
jnp
fldcw
mov
movsl
push
sbb
xor
add
add
push
aas
test
pop
nop
sarb
fwait
mov
icebp
mov
jecxz
dec
add
add
and
mov
aaa
cmc
push
adc
lahf
xorb
pop
xchg
or
mov
pop
aas
repz
lds
add
add
fsubs
add
loop
push
ret
loope
add
jb
cmp
add
add
nop
aam
sbb
dec
add
ret
push
or
mov
push
shr
cld
out
jmp
cmpl
dec
sbb
pop
adc
or
cs
test
dec
add
or
xlat
fisttpll
adc
xchg
jne
lds
push
lea
fistps
outsb
mov
add
mov
pop
xor
aas
xchg
mov
rcrl
sub
add
add
add
and
mov
or
roll
add
push
hlt
frstor
adc
je
cmpsl
ret
mov
add
cmp
repnz
or
loop
xlat
add
add
add
scas
adc
xor
cli
pop
arpl
push
sub
ret
lret
push
xor
popa
mov
fiaddl
shll
sbb
daa
add
mov
int
and
add
add
scas
sbb
or
mov
xchg
xlat
imul
fwait
or
add
add
jp
add
movsl
jne
jae
data16
repz
movsb
cmpsb
mov
cmp
scas
push
ficoml
in
and
insl
mov
cmpsl
add
std
push
add
add
add
js
adc
into
pusha
add
or
mov
filds
or
mov
mov
add
data16
fisubrs
add
add
repz
mov
in
stos
xchg
cwtl
cmp
add
add
aad
adc
adc
nop
mov
mov
rol
inc
xchg
rorl
add
int3
daa
mulb
mov
add
or
add
add
add
mov
add
add
aas
daa
mov
test
pop
sahf
pop
repnz
push
sub
mov
sub
ret
and
add
add
add
inc
add
addb
add
rorl
adc
aas
out
aam
jnp
jb
xchg
into
movsb
loope
mov
xor
lret
gs
sbb
mov
sbb
adc
add
leave
add
xorb
les
add
add
andb
push
sbb
add
mov
cs
cmp
mov
outsl
sub
add
outsl
inc
add
add
mov
imul
std
lret
push
lahf
adc
mov
mov
sahf
sub
add
add
add
add
add
add
pop
cmp
loope
sub
mov
add
add
add
adc
xchg
xchg
fsub
inc
add
add
sbb
imul
std
xlat
xchg
inc
lahf
pop
iret
dec
sub
add
loop
mov
mov
rcl
dec
xchg
cmp
add
insb
add
pop
add
sbb
gs
cwtl
js
int
test
in
xor
rcrb
cmp
shrl
or
add
hlt
inc
add
movsl
iret
aad
dec
push
pushf
ja
inc
xchg
push
int
add
add
pop
pop
in
aam
mov
dec
dec
inc
jp
pop
or
jnp
fsubrl
add
add
add
xchg
cltd
cmpsb
cli
inc
dec
test
cs
xlat
lret
jp
inc
ret
dec
add
add
adcl
adc
cmp
cltd
hlt
inc
or
cwtl
add
mov
inc
jae
imul
jmp
push
popa
test
mov
in
aam
call
inc
push
jg
and
cmp
push
scas
jmp
scas
mov
int3
cwtl
dec
add
add
ror
fstps
cltd
pop
jl
in
mov
adc
add
add
adc
mov
mov
mov
aam
inc
add
add
push
shlb
pop
decl
jmp
add
xchg
das
mov
enter
sbb
mov
or
in
stos
dec
jns
xchg
add
add
mov
inc
lret
cmpsb
cmpl
adc
loopne
mov
mov
push
push
test
mov
les
add
add
shrl
add
add
inc
add
add
push
push
pop
aam
xchg
mov
iret
es
mov
jo
mov
mov
jecxz
jno
aad
cltd
fbstp
jmp
cmp
sarl
add
xor
jmp
jg
mov
mov
mov
movb
dec
pop
sub
jmp
push
jecxz
cmp
add
add
sub
pop
or
mov
rclb
add
pop
lods
pop
fistpll
das
xor
mov
pop
pop
mov
leave
push
or
mov
add
loopne
popa
cmp
sub
dec
add
add
adc
pop
push
xor
or
test
int3
cld
lahf
test
stos
test
mov
push
addr16
mov
bound
push
popa
negl
add
add
add
mov
jb
fisttpl
mov
adc
out
jle
lret
jle
mov
sbb
xor
incb
mov
fnsave
push
xlat
ret
push
add
stos
and
add
add
sub
add
add
xchg
adc
outsb
sub
sub
add
add
add
gs
jle
stos
or
push
shlb
negb
psubusw
lret
sti
sub
mov
adc
pop
and
in
mov
loop
xor
mov
mov
pop
pusha
add
lret
test
movsb
sub
movsl
clc
cmp
sub
add
add
and
pusha
add
jmp
jbe
pushf
jg
popf
xchg
add
add
and
mov
add
add
inc
sti
push
jg
and
enter
data16
jle
pop
inc
bound
cmp
frstor
add
xchg
leave
test
ds
xchg
push
push
mov
mov
sti
enter
lret
lock
add
add
push
in
int
push
lods
jle
shrb
add
add
divb
pushf
iret
mov
or
add
add
add
sar
cld
incl
add
mov
gs
int
xlat
test
xchg
jg
loopne
lods
fisubrl
dec
add
stos
clc
sti
subb
jne
add
push
clc
xchg
mov
rorl
mov
add
add
add
add
jecxz
push
add
add
xor
fidivrs
push
testl
mov
lret
add
mov
add
add
dec
add
add
push
shrl
ds
arpl
add
add
lahf
mov
dec
sahf
mov
pop
repnz
add
add
lds
add
add
call
adc
xchg
je
ja
xchg
jle
sar
lock
adcl
add
add
out
add
mov
mov
mov
sub
add
add
add
adc
adc
xchg
je
iret
cmpl
not
mov
movsl
ja
andl
and
stos
inc
test
add
rcll
and
mov
out
mov
pop
aam
into
call
mov
adc
mov
xchg
fmulp
ror
in
add
pop
cli
lcall
daa
xlat
jo
adc
imul
js
rol
mov
std
les
jae
add
add
and
ljmp
sarl
hlt
pop
bound
sahf
cmpsb
in
stos
pop
push
fisubs
sbb
cmp
popf
lret
imul
into
mov
jbe
sbb
cmp
cmp
repnz
pop
loopne
jnp
mov
add
push
jnp
mov
std
movsl
adc
aam
sub
add
add
jge
mov
push
adc
xchg
jae
add
mov
movb
mov
jb
pop
sub
add
add
pop
std
jge
push
adc
mov
cmc
jne
aam
pop
pop
imul
add
push
sub
add
mov
orl
mov
add
add
mov
mov
sub
cmp
cmp
mov
add
add
add
out
fistpll
add
jno
ss
stos
pop
cld
xchg
call
mov
out
or
cmp
mov
push
xchg
inc
add
adc
insl
cmp
outsl
adc
xchg
or
add
jo
cmp
add
add
pop
sbb
jb
outsl
loopne
pop
cmp
push
daa
mov
scas
jb
xchg
xor
icebp
pop
sbb
les
mov
push
xor
mov
mov
push
insb
add
mov
sahf
loope
rcrb
mov
dec
add
mov
inc
out
and
add
add
cmp
xor
repnz
or
add
add
and
mov
and
into
movsl
mov
out
jns
insb
add
add
lock
arpl
mov
dec
mov
loopne
cli
subl
adc
or
mov
jae
pop
aaa
aam
mov
xchg
dec
das
in
push
mov
outsb
test
add
add
mov
imul
mov
test
add
jge
sbb
inc
jle
scas
add
ljmp
loope
shlb
add
add
jmp
lods
test
mov
enter
gs
add
add
fsubrl
push
xor
xchg
in
xor
add
sub
mov
sbb
cltd
cltd
imul
pop
in
jg
mov
loope,pt
lret
ret
mov
cmp
enter
add
mov
dec
pushl
add
mov
add
mov
pop
push
fstpt
jo
stos
xor
icebp
push
lret
add
add
xchg
sub
xor
cltd
xor
mov
add
jmp
data16
fisttps
adc
or
add
add
sub
add
add
jno
xor
jne
lret
cmp
mov
add
cmp
pop
shr
push
loop
adc
cmp
push
xchg
adc
fnstcw
mov
lret
mov
loope
add
mov
es
cmp
std
repz
pop
imul
add
mov
aad
xchg
push
aas
add
add
add
sbbb
mov
jb
xor
or
insb
add
add
punpckldq
add
out
nop
cld
pop
addr16
add
add
or
popf
cltd
pop
add
cmc
pop
push
add
add
push
xchg
jl
and
add
ret
xchg
jg
jnp
xor
add
push
dec
add
add
mov
dec
aaa
push
lcall
add
add
pop
pop
adc
add
dec
pushf
lods
mov
out
int3
mov
pop
cwtl
jmp
cmp
or
lods
push
ret
sbb
inc
xor
bound
xlat
mov
mov
clc
push
aad
push
stos
jecxz
data16
mov
push
and
pop
sbb
imull
add
pop
jecxz
out
jl
je
aam
sahf
lds
xor
add
in
add
int
add
daa
pop
not
pop
jno
pop
outsb
cmp
ds
mov
lods
iret
or
add
add
aas
or
add
add
into
dec
add
out
call
mov
insl
and
push
in
test
mov
sarl
pop
xchg
pop
xor
add
out
iret
adc
clc
stc
sbb
push
adc
add
ja
into
mov
nop
popa
and
mov
adc
mov
nop
push
pop
push
int
inc
add
add
pop
push
jl
daa
aad
pop
mov
movsl
mov
or
inc
nop
adc
test
add
add
mov
insb
add
add
mov
push
mul
xchg
es
fbstp
jne
dec
mov
ds
jns
decl
add
cmpsl
ret
sub
sbb
xlat
push
cmp
pop
mov
stc
jbe
out
jns
sub
mov
add
aaa
sub
fcompl
jge
add
mov
mov
out
adc
jecxz
rcr
jno
mov
daa
push
or
rorl
jl
fimuls
or
movsb
enter
cmpsl
loopne,pn
in
stos
daa
lret
add
nop
push
cwtl
addl
mov
add
repnz
add
add
cmp
pop
int3
or
div
jg
adc
add
add
add
mov
add
add
cmp
rcrl
enter
je
add
mov
lods
cli
inc
push
nop
pop
add
add
add
outsl
inc
mov
iret
and
testl
push
fiadds
and
mov
xor
lret
mov
sbb
sahf
mov
mov
cmp
mov
sub
scas
call
rolb
add
add
mov
dec
add
mov
push
push
push
pusha
add
add
push
push
sbb
lock
or
add
add
pusha
add
add
mov
mov
add
push
xchg
aam
xchg
aas
cmc
cmp
pop
add
add
sti
pop
test
mov
xchg
and
mov
movsl
jo
popa
mov
add
add
jmp
mulb
cmc
push
and
mov
lea
sbb
mov
jbe
out
shlb
add
cmp
cmc
les
add
xlat
push
addr16
mov
dec
cwtl
mov
add
add
push
shrb
mov
xchg
scas
ljmp
add
add
notl
pop
lea
sub
push
inc
mov
das
xchg
not
pushf
sti
int
lods
pop
pop
mov
add
add
add
sbb
icebp
mov
testl
adc
sti
lea
inc
mov
jb
add
and
fcmovb
xchg
sbb
push
test
fiaddl
cwtl
cmp
inc
inc
adc
xlat
in
xor
sub
add
add
inc
jl
and
cs
rorl
es
bound
lret
clc
repnz
rep
add
add
dec
add
in
scas
add
cld
repnz
loope
jbe
pop
aam
or
xor
dec
and
cmp
cltd
cmp
test
add
add
ret
mov
sub
mov
add
add
add
add
add
iret
xchg
daa
test
mov
add
xor
movsl
add
mov
add
add
mov
jae
or
xchg
ret
pop
or
pop
pop
cld
xchg
inc
lret
sbb
ljmp
add
add
xchg
ja
add
push
sbb
add
push
mov
add
dec
sub
mov
scas
das
insl
je
insl
add
into
mov
scas
mov
jb
xchg
sub
rorb
sarb
add
mov
iret
inc
add
add
mov
pop
xor
add
add
loopne
push
or
add
aas
push
xchg
add
mov
outsb
ljmp
xchg
loopne
aad
add
add
mov
jno
in
xor
mov
jmp
enter
push
jmp
dec
xchg
dec
xchg
cmc
mov
add
inc
add
add
or
add
add
or
cmp
repz
in
push
int
jmp
scas
lahf
sub
add
add
frstor
push
jg
mov
roll
push
pop
jno
mov
mov
call
mov
add
jns
add
add
adc
xchg
ljmp
dec
lea
andb
addb
push
es
mov
mov
aam
sbb
stc
push
inc
out
push
and
add
add
push
lahf
jns
arpl
addl
add
or
das
mov
add
dec
push
dec
xchg
jae
cwtl
lahf
div
mov
in
mov
mov
not
int3
scas
mov
aaa
adc
push
sub
add
add
scas
xchg
xor
or
addr16
imul
cmp
mov
add
add
je
sti
mov
xchg
es
fbld
push
pop
test
add
add
and
rorl
xchg
pop
add
mov
iret
clc
inc
ret
insb
add
add
jae
inc
or
mov
add
add
out
push
jnp
in
loopne
add
add
add
add
stos
nop
jecxz
add
negl
aaa
jo
or
aas
and
lea
and
push
std
insb
add
in
movsl
or
add
adc
test
pop
inc
add
add
jp
lods
mov
mov
mov
add
jb
dec
sbb
xchg
fdivs
pusha
add
sub
add
add
es
mov
imul
adc
lahf
adc
jo
cmp
lahf
outsl
scas
fdivrl
clc
xor
stos
stos
out
mov
in
comiss
push
add
add
add
add
add
out
add
mov
add
add
sub
jnp
loop
data16
pop
jp
xchg
and
add
mov
int3
pop
orl
add
add
mov
pop
fcoml
add
xchg
mov
xor
repz
add
add
adc
loop
loopne
pop
rorb
push
and
addb
add
adc
rolb
cmc
pop
aam
add
shl
inc
xchg
or
sbb
or
add
add
xor
adc
push
pushf
mov
inc
pop
pop
roll
jle
jns
mov
out
int
xchg
xor
sbb
cmpsl
pop
mov
or
mov
mov
pop
test
fucomip
xor
adc
addr16
add
mov
fdivl
push
pop
fstpt
sub
mov
scas
data16
sub
and
add
add
mov
repz
aaa
stos
jns
jnp
addl
pop
sub
add
add
fnstcw
and
add
add
scas
dec
add
add
sbb
movsl
mov
popf
pop
shrl
movb
add
jne
sbb
add
add
mov
iret
fnstcw
and
add
add
arpl
lcall
add
add
xlat
sbb
mov
mov
fwait
outsb
aad
enter
add
ljmp
cmp
xor
pop
aaa
xchg
dec
imul
dec
sbb
cmp
int
push
push
push
lds
add
add
xchg
loope
cmpsl
push
push
fdiv
fld
lea
dec
add
add
inc
fidivl
add
adc
add
aas
fsubl
mov
add
mov
cli
dec
mov
lods
mov
mov
mov
ret
test
lcall
add
add
or
jb
cmpsl
fimull
add
pop
sub
mov
jle
cmp
stos
cltd
in
push
mov
pop
popa
adc
aas
xchg
pop
and
iret
xchg
add
mov
cltd
lods
push
xlat
cmp
add
add
int
lods
addl
inc
xlat
pop
addb
add
add
pop
xlat
movsb
cmpsl
popf
xor
add
or
add
add
inc
aas
sti
out
dec
adc
or
in
stos
push
xchg
ljmp
adc
push
cli
fisubrl
jle
dec
inc
add
pop
add
add
add
and
cmpsl
dec
inc
push
scas
aas
mov
stos
xchg
xor
dec
pop
cwtl
cmp
add
add
jae
inc
xchg
scas
into
jb
hlt
sbb
push
shlb
ja
stos
enter
xchg
in
add
mov
ss
rol
xor
push
cmp
xchg
and
dec
add
add
sub
mov
mov
cltd
movsl
es
add
insl
xchg
add
rclb
push
flds
pop
push
and
xchg
mov
mov
add
add
leave
cmp
mov
push
adc
adc
push
mov
xlat
addr16
pop
sbb
add
add
jl
add
flds
jne
imul
leave
sbb
dec
add
add
popa
call
ficoml
push
in
mov
add
stc
pop
xchg
push
sub
bound
lret
lcall
push
and
mov
dec
add
add
mov
xchg
hlt
movsb
stos
jo
loop,pn
cmp
cwtl
std
mov
fstpl
aaa
mov
cli
bound
jae
xlat
pushf
cld
cmpsl
cmp
xchg
addr16
sbb
add
mov
lods
fcomps
jo
stos
imul
sahf
add
push
mov
xor
lods
mov
mov
sbb
add
ss
add
add
jg
jle
cwtl
mov
adc
mov
hlt
push
sar
mov
in
repnz
sub
fnstcw
sbb
pop
xor
add
dec
repnz
mov
add
add
add
jg
les
adc
lea
inc
add
add
imul
mov
ja
xchg
push
fimull
add
add
add
mov
ljmp
or
mov
mov
movsb
jp
pop
aam
xor
jne
xchg
sti
cmp
jne
mov
add
add
mov
nop
mov
jnp
mov
add
inc
dec
add
add
sbb
mov
adc
sbb
mov
cmp
sub
dec
adc
cmc
add
add
shll
adc
out
mov
cmc
inc
xchg
add
and
add
add
jnp
add
xor
mov
cwtl
mov
js
iret
xchg
jmp
add
add
mov
out
into
sbb
push
out
repnz
shll
jmp
std
fldcw
js
pop
push
lods
cmp
jae
xor
cmc
mov
add
add
mov
adc
xorl
fwait
lods
dec
add
add
popf
mov
fimull
in
repnz
pushf
inc
cmp
jle
orb
xchg
dec
adc
