mov
mov
mov
mov
mov
mov
mov
add
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
pop
pop
pop
pop
pop
test
lods
lods
lods
lods
lods
lods
lods
jmp
jmp
jmp
jmp
cli
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
addl
add
lea
add
add
add
in
in
in
in
in
in
in
in
in
in
in
in
add
jmp
jmp
jmp
jmp
rol
rol
rol
rol
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
add
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
out
out
out
out
out
out
mov
add
test
test
add
faddl
add
ret
ret
ret
ret
ret
ret
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
ljmp
ljmp
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
xor
add
ds
ds
add
jg
jg
jg
jg
jg
jg
jg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
or
or
or
aas
aas
add
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
push
push
push
push
push
push
push
add
add
jae
jae
jae
jge
dec
dec
dec
dec
dec
adc
adc
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
and
and
and
and
and
and
and
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
fcmovnu
fcmovnu
fcmovnu
fildl
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
gs
add
lods
lods
lods
div
div
div
div
div
testl
add
add
ss
addr16
addr16
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
add
add
add
add
push
push
push
push
push
push
push
push
push
xlat
xlat
xlat
xlat
xlat
xlat
add
add
lcall
sbb
add
add
bound
bound
bound
bound
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
gs
gs
gs
add
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
add
dec
add
stos
stos
stos
stos
rcl
loope
loope
loope
loope
loope
mov
mov
mov
add
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
xor
xor
xor
or
or
or
or
or
or
or
or
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
mov
mov
mov
mov
mov
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
data16
data16
data16
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
add
je
je
loope
fsubl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
or
or
or
add
mov
lds
add
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
xor
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
jle
jle
jle
jle
jle
jle
jle
add
add
pop
pop
pop
pop
pop
pop
pop
aaa
aaa
aaa
aaa
aaa
fsubrl
add
sbb
sbb
sbb
sbb
sbb
add
adc
adc
add
add
mov
mov
mov
mov
mov
mov
mov
mov
add
icebp
add
pop
pop
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
add
addr16
addr16
add
add
add
add
add
add
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
or
or
or
or
or
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
fcmovnu
fcmovnu
fcmovnu
fildl
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sti
sti
mov
add
fcmovu
fcmovu
fcmovu
fcmovu
push
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
add
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
or
imul
imul
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
addb
add
add
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push
push
push
push
push
push
push
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
test
test
test
test
jb
jb
jb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
inc
inc
inc
inc
inc
add
inc
inc
add
add
movsb
movsb
movsb
push
push
push
push
push
push
push
push
push
push
push
push
pushf
pushf
pushf
pushf
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
psadbw
div
div
div
div
div
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
dec
dec
dec
dec
dec
dec
dec
dec
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
lds
xor
xor
xor
xor
repz
repz
repz
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
add
add
add
add
xchg
xchg
add
lock
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jne
jne
jne
jne
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
push
push
push
push
sub
add
add
add
add
add
out
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
add
imul
imul
imul
imul
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
add
add
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
jge
jge
jge
jge
jge
jge
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
add
add
xchg
xchg
xchg
addr16
jmp
add
add
add
sub
sub
add
add
add
mov
mov
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
div
div
div
div
div
div
div
testl
add
out
out
out
out
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
fs
push
push
push
push
push
push
mov
add
lret
lret
lret
lret
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jo
add
filds
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pmuludq
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
adc
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
add
fs
fs
fs
fs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
div
div
div
div
div
div
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
inc
inc
inc
inc
inc
add
addl
addl
addl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xor
xor
add
add
xchg
xchg
xchg
xchg
xchg
sldt
mov
or
or
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
call
call
call
call
add
add
mov
mov
xchg
xchg
addl
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
cmp
cmp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
ret
ret
ret
ret
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loopne
loopne
loopne
loopne
loopne
push
push
insl
insl
insl
insl
insl
insl
insl
insl
insl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
fs
add
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
jle
jle
jle
jle
jle
incb
addb
addb
addb
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
add
add
enter
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xor
xor
xor
mov
mov
dec
in
push
andb
arpl
aam
inc
loopne
loopne
push
imul
add
gs
push
inc
pusha
xor
jno
ret
and
dec
xor
lahf
imul
fsubs
push
addl
add
adc
inc
push
aas
aam
mov
inc
cmp
inc
sbb
pop
inc
ds
xchg
and
clc
jecxz
loop
dec
lock
inc
push
fwait
mov
adc
addb
and
ret
or
xchg
add
fmulp
jmp
loop
and
sarb
mov
lret
repnz
ss
jns
add
add
add
push
adc
mov
out
xchg
adc
dec
gs
in
loopne
pop
cltd
fwait
add
and
xor
jb
fcoms
les
xchg
loopne
nop
imulb
ret
stos
mov
ficoml
xchg
cmpl
mov
dec
xchg
int3
test
add
cmc
int
repnz
imul
shr
cmpsl
ret
sbb
sti
mov
xlat
sbb
cmpl
into
loopne
cmp
mov
inc
pop
stos
mov
add
movsl
cmp
pusha
and
mov
gs
pop
nop
lods
or
loopne
mov
inc
push
mov
add
cmp
mov
pusha
push
and
dec
adc
ret
rcll
mov
inc
push
push
mov
jl
lods
push
loop
outsb
gs
inc
pusha
pop
mov
imul
cmp
cwtl
nop
lret
or
fistl
andb
sub
mov
add
adc
pop
add
add
lahf
shr
mov
nop
mov
pop
es
loopne
mov
adc
add
add
andl
loopne
lods
loopne
adc
pusha
add
sub
add
mov
adc
jg
out
xor
mov
loope
test
xor
pop
sbb
paddsw
out
loop
sbb
stos
js
mov
add
xor
mov
push
test
and
ljmp
loopne
mov
or
and
fiaddl
std
nop
add
movsl
jns
and
xchg
jae
mov
lcall
jmp
add
mov
inc
jle
mov
mov
push
dec
aad
dec
cmpsb
shl
mov
filds
shlb
fisttpll
add
xchg
idiv
mov
out
mov
ret
pop
jle
test
pusha
or
sbb
andl
aas
popa
cmpsb
rolb
mov
and
add
insl
rcrb
scas
mov
add
idivl
inc
rol
test
xlat
jle
inc
js
add
loopne
loopne
add
data16
jp
ret
jle
lds
jne
in
lcall
insb
scas
sar
xchg
sti
aaa
push
call
daa
push
shlb
add
mov
add
sub
add
iret
idiv
push
pop
mov
jae
push
jecxz
bound
add
jge
xlat
scas
fs
daa
outsl
and
fldl
sub
dec
inc
xchg
aas
xchg
jns
inc
add
pusha
xchg
xchg
jp
jl
test
rcr
push
and
shrb
sbb
inc
fstl
xchg
mov
ret
call
mov
andb
mov
fcmovne
mov
aad
pusha
subb
aam
out
clc
outsl
jp
add
xlat
pop
cltd
out
inc
imul
popa
jmp
movsb
inc
mov
andb
pusha
and
test
pusha
inc
xchg
mov
pop
repz
shlb
shl
fwait
sbb
dec
mov
inc
add
repnz
addr16
into
or
loopne
jno
xchg
in
pop
ja
and
mov
pop
int3
iret
push
push
aaa
xchg
sarb
add
inc
shlb
jecxz
sub
jae
add
test
mov
inc
fisttpll
pop
shlb
and
movsl
aad
dec
inc
xchg
hlt
jns
pop
cmp
add
inc
pop
mov
in
rolb
outsb
mov
adc
andb
pop
roll
icebp
jge
rol
xlat
repnz
out
inc
addb
add
nop
add
pop
pusha
pop
lea
rol
add
xor
roll
adc
inc
pop
xchg
andnps
fwait
ds
das
cld
adc
cmp
loopne
lds
pop
mov
mov
loop
pop
mov
sbb
xchg
sbb
andb
arpl
sbb
ljmp
addr16
ja
push
mov
inc
mov
adc
aaa
pop
addb
fwait
repnz
loopne
push
loopne
jmp
jne
mov
cmp
enter
jns
adc
xor
dec
adc
inc
mov
hlt
incb
shll
mov
lock
mov
lods
xchg
and
inc
mov
aam
and
inc
shlb
inc
loopne
ss
loope
mov
das
rorb
cmp
sete
and
cli
out
movl
jecxz
fdivl
mov
jb
clc
dec
std
repz
sbb
pushf
add
dec
cmp
add
rorb
and
pop
hlt
sbb
jle
loopne
std
outsl
test
adc
pusha
inc
mov
add
jecxz
arpl
jnp
out
mov
rorl
imul
pushf
mov
scas
mov
fs
movsb
loopne
cmp
std
mov
mov
out
add
add
data16
je
pusha
inc
push
push
or
sbb
mov
mov
add
test
dec
mov
or
rol
xchg
and
cmp
int
cmc
jp
push
mov
ss
call
sarb
loopne
inc
mov
aad
ret
loopne
ficomps
divb
add
and
shl
xchg
addb
add
xchg
pop
iret
adc
push
mov
add
pop
shlb
dec
sbb
mov
mov
push
cmp
pop
pop
adc
mov
andb
xchg
mov
in
cli
popa
push
xor
and
mov
jns
or
pusha
test
aaa
and
loopne
adc
and
shlb
push
gs
cmpsb
add
gs
and
pusha
rcrb
inc
fwait
sub
mov
imul
lods
and
int3
push
xchg
rorl
int3
cmp
mov
cmpsl
push
or
mov
rclb
jmp
pusha
add
and
jg
stos
addb
andb
mov
inc
mov
mov
test
ret
out
mov
mov
sub
pop
add
mov
push
jl
mov
sbb
pushf
clc
jne
xchg
mov
mov
xchg
lcall
and
adc
stc
fs
shl
addb
inc
loopne,pn
adc
mov
dec
mov
cld
in
mov
pusha
loopne
or
inc
mov
add
outsb
int3
pop
xchg
lods
mov
loopne
push
mov
push
sbb
cmp
inc
aad
test
and
in
pop
and
mov
sbb
loope
imul
test
and
pop
xchg
push
add
cmp
ret
shl
lea
push
add
and
inc
lods
and
push
or
add
and
add
push
inc
loopne
jo
stos
and
shlb
dec
or
xor
call
andb
add
sahf
int
mov
sbb
cli
add
fisttpll
add
and
mov
loopne
sub
jbe
push
and
jmp
add
outsb
out
ret
mov
and
shrb
ja
mov
stos
loopne
jnp
loopne
cmp
repnz
nop
or
shrb
push
jecxz
add
loope
sbb
add
sbb
frstor
nop
push
repz
fs
pusha
ret
or
std
pop
arpl
cmpsl
mov
lret
fstl
ljmp
addb
cs
and
mov
cmp
mov
ja
addb
addb
pop
pop
mov
inc
in
inc
and
inc
and
mov
rcrb
in
cld
xchg
scas
sbb
jns
addl
loopne
pusha
and
aad
push
xchg
mov
xor
add
daa
sbb
outsl
jno
mov
adc
or
inc
cltd
enter
mov
inc
add
mov
imul
add
call
and
cmpsl
mov
test
mov
mov
xchg
cmc
stos
shlb
xlat
push
loopne
mov
lret
push
pop
xchg
lret
std
jne
inc
fimull
loopne
mov
cmpsl
rcrb
sbb
push
inc
mov
sahf
aam
pop
cmpsb
shlb
movsb
loopne
add
testl
lods
rolb
sub
and
pusha
jno
rolb
xor
enter
add
inc
js
or
inc
or
fisubs
pusha
popf
rcl
ret
std
lcall
dec
push
mov
shlb
clc
sbb
negl
mov
aas
or
inc
sbb
shr
jp
ret
or
js
xchg
mov
and
adc
jns
xor
addb
loope
insl
mov
loope
int
movsl
push
add
mov
shlb
loopne
dec
inc
fwait
dec
clc
hlt
in
imul
clc
xchg
addl
mov
xchg
stos
inc
loopne
mov
and
loopne
stc
clc
lds
mov
inc
leave
imul
out
mov
adc
mov
pusha
nop
mov
mov
and
pop
push
enter
inc
pop
fs
imul
inc
lock
pop
mull
fstl
and
arpl
mov
roll
and
add
add
es
std
cmpsl
lea
ja
fs
lcall
pusha
add
sbb
jg
adc
cli
jmp
add
lods
aad
xchg
fst
xor
cmpl
in
add
adc
shl
sti
insb
lock
xor
jno
xor
add
mov
mov
xorl
cltd
in
and
je
mov
and
orl
inc
and
shlb
loopne
sbb
or
shr
mov
jecxz
movsb
and
add
add
icebp
loop
lea
xchg
mov
adc
cmp
rcl
pop
cltd
lcall
sar
icebp
lahf
int
leave
clc
add
jns
ret
lods
insl
gs
mov
movsl
nop
arpl
and
sub
mov
int
adc
outsl
xchg
push
movsl
push
loopne
add
addr16
loopne
rolb
lea
add
lret
adc
inc
mov
addb
sbb
je
cmp
pusha
loopne
in
xchg
daa
clc
ljmp
in
mov
pop
ret
sbbl
and
andl
rorb
loopne
sub
mov
pusha
lret
fisubl
scas
and
imul
push
xlat
sub
mov
mov
push
cmpsl
leave
cmc
imul
pusha
sbb
inc
loopne
pusha
les
pop
xor
loopne
cmp
mov
sub
imul
inc
push
and
mov
sub
repnz
addb
jecxz
sub
test
and
divl
pop
into
test
and
fisttps
out
add
ss
add
jnp
adc
aas
leave
dec
xchg
stos
inc
inc
stc
mov
das
xchg
mov
xor
and
mov
ja
and
inc
nop
and
sarb
bound
cmp
ja
outsl
cmp
cmp
dec
mov
aaa
cwtl
mov
pusha
mov
add
push
push
out
mov
into
jnp
mov
out
push
cmpsl
imul
pusha
pusha
mov
and
in
adcl
lret
pop
out
ret
loope
in
add
xchg
adc
inc
clc
andl
sub
mov
add
inc
add
add
mov
xlat
pop
cmp
repz
inc
xchg
fdivs
loopne
xor
insl
xor
and
lret
pop
out
stos
dec
outsb
ja
sub
sbbb
push
and
jno,pt
lea
icebp
sub
loopne
jmp
add
pop
jmp
jb
or
and
stos
mov
pusha
inc
lret
les
add
arpl
dec
ja
mov
dec
jo
out
dec
xchg
data16
in
cmpsb
loopne
jbe
cmp
lahf
cmp
inc
stos
loopne
outsb
mov
adc
sbb
add
pusha
mov
push
test
jne
push
outsl
clc
inc
xor
addb
rcrb
leave
cmp
or
push
mov
mov
and
repnz
add
add
pusha
and
inc
pop
mov
cmp
mov
mov
xlat
out
push
mov
xor
adc
sub
leave
div
addb
add
or
andb
repnz
add
mov
fnstenv
sbb
push
fistpl
sbb
mov
push
xor
int
jl
mov
and
lea
mov
and
dec
jge
pop
leave
repz
ficompl
addb
adc
loopne
cmpsl
arpl
das
xchg
pop
pop
mov
outsl
dec
mov
sarb
mov
sbb
mov
dec
mov
fldt
and
mov
aad
mov
scas
mov
aas
xor
fdivrl
mov
and
add
and
inc
outsb
pop
or
pusha
xlat
gs
repnz
test
mov
add
jecxz
cmp
in
jae
inc
pusha
and
dec
fildll
ret
xor
rol
push
gs
sub
xor
xchg
dec
cmp
mov
test
mov
pusha
inc
hlt
lods
shlb
je
jno
fs
mov
mov
test
push
mov
inc
add
add
addb
mov
addb
mov
jno
xor
test
movsl
test
add
outsb
jle
mov
imul
shlb
xchg
cmpsb
loopne
subl
dec
bound
and
pop
rcrb
pop
scas
cli
lret
pop
scas
and
fwait
imul
pmaxub
mov
or
and
jae
push
jge
inc
clc
pop
outsb
out
add
add
mov
loopne
stos
pusha
and
pop
mov
add
jmp
push
cwtl
rolb
orl
xlat
add
or
sub
dec
addb
dec
jl
lcall
or
sarb
push
popf
sbb
xlat
or
xchg
pop
out
leave
adc
mov
inc
lahf
jle
test
rcll
fstpt
loopne
adc
pop
xor
loopne
mov
in
mov
sub
or
loopne
movsb
andb
or
mov
out
xor
loope
pusha
mov
out
pusha
pusha
rcl
mov
and
and
or
xor
push
cmp
mov
xor
or
cmp
jno
push
mov
xchg
cmp
aas
in
inc
aad
add
mov
inc
loopne
and
test
dec
lea
and
outsb
ljmp
call
stos
das
pop
fwait
jecxz
mov
sbb
jb
inc
jl
fistps
xor
add
inc
divb
and
adcb
pusha
add
add
add
popa
or
repz
jge
andb
loopne
and
movb
inc
and
loope
test
jo
xchg
pop
xor
mov
and
mov
mov
cmp
sub
mov
popf
adc
lahf
cmp
pop
fldt
fisttpll
loope
pop
push
push
cmp
cld
xchg
divb
jg
scas
add
and
pop
or
loopne
or
adcl
and
dec
loopne
mov
cli
aad
sahf
pop
insl
push
in
test
insb
add
rorb
sbb
add
in
xor
andb
mov
rorl
pusha
pop
dec
mov
fnstsw
sub
lahf
push
imul
dec
into
jbe
and
cmpsl
lahf
dec
push
push
dec
inc
aad
mov
shlb
pop
cmc
in
lcall
test
fcmovb
popa
and
xchg
xchg
adc
sbb
dec
add
pop
mov
cmp
jle
lea
shlb
vprotb
stos
pusha
loopne
inc
mov
push
sub
mov
popf
jno
enter
addr16
mov
aam
roll
mov
cld
and
mov
xor
js
mov
in
inc
outsb
gs
ljmp
orb
inc
cwtl
sti
cld
dec
jbe
out
nop
mov
pusha
shlb
push
shlb
cmp
andb
and
lods
cmp
sti
in
sub
fsubl
and
popa
aam
sbb
jmp
scas
mov
jo
fs
and
leave
jb
shll
orb
jg
shr
adc
shrb
and
ljmp
pusha
mov
push
aam
scas
and
int
stc
ret
fsubl
shl
out
mov
inc
jb
cmpsl
test
loopne
rorl
mov
xor
add
pop
pop
pop
push
std
insb
inc
pop
divb
jo
or
pop
jb
adc
xor
movsb
and
push
push
ds
pusha
je
inc
rorb
and
jmp
pusha
xchg
cmp
clc
xor
pop
jg
fstl
sbb
out
xchg
jp
and
jge
and
jns
jl
shl
inc
sub
shll
in
imul
push
inc
add
jecxz
faddl
and
and
loopne
cmp
addb
insb
imull
inc
add
shlb
push
inc
push
mov
pop
cmp
and
or
loopne
push
cltd
ljmp
in
push
icebp
pop
outsl
jmp
add
sbb
ljmp
push
loopne
out
addr16
hlt
xor
aad
outsl
sub
mov
add
rclb
cmp
loopne
das
roll
outsl
add
and
hlt
adcl
inc
fdivrs
sub
xchg
shrb
mov
leave
dec
sub
add
cmpsl
mov
pusha
push
jle
aam
andb
lcall
std
or
rorl
mov
mov
ss
jnp
cltd
sub
add
addb
outsb
xlat
xor
mov
inc
pop
in
push
pop
push
jae
sub
loopne
addr16
xor
or
loopne
and
push
or
loopne
mov
loopne
inc
out
cmp
cmp
lods
pusha
mov
adc
lret
xchg
xor
fistps
xchg
mov
pusha
pop
inc
xchg
mov
scas
in
cmp
lds
int3
push
arpl
pop
push
loopne
out
jp
pop
and
sbb
and
mov
loop
xchg
fs
xchg
push
dec
stos
pusha
add
mov
test
loopne
in
xchg
dec
sub
sub
inc
lcall
minps
movsl
cmp
bnd
icebp
push
cmp
and
imul
aam
xchg
and
mov
rol
adc
arpl
shlb
pop
movsl
xchg
mov
lods
stos
insl
xchg
repnz
push
xchg
sbb
ja
lods
sub
fs
or
loopne
mov
jge
mov
push
rolb
cwtl
test
dec
xchg
daa
add
and
loopne
test
bsr
mov
fldcw
mov
fistl
jbe
push
and
sub
push
jg
clc
rcrb
inc
cmpsl
test
xor
xor
pop
movsb
inc
and
push
cmp
push
and
cmp
add
lods
inc
mov
pusha
mov
xchg
andb
ljmp
pusha
hlt
dec
push
add
in
sub
cmc
repz
mov
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
enter
insl
fsubl
in
jl
test
out
icebp
push
push
clc
mov
shlb
sub
pusha
jl
xchg
loopne
fnstsw
pusha
jb
mov
lcall
and
dec
cmpl
fsubrs
mov
in
and
mov
inc
inc
jbe
cmpsb
mov
jle
iret
mov
push
add
ds
push
aad
fisubrl
aad
add
dec
ret
xor
sub
inc
add
xor
jge
xor
sti
dec
sub
test
add
mov
mov
pusha
pusha
mov
mov
sbb
and
cmp
imull
sbb
inc
outsl
pusha
stos
into
ss
lea
dec
push
dec
xchg
out
fs
adc
add
fisubrs
mov
mull
rolb
mov
mov
mov
inc
fisubrs
add
shrl
add
add
imul
inc
jmp
fs
lock
int
ljmp
test
pusha
cmpsl
xlat
bound
int
pop
push
cld
xor
loopne
dec
mov
sbb
pop
js
rolb
lea
jecxz
cmpsb
and
mov
cwtl
shlb
sti
mov
hlt
movb
mov
push
mov
js
inc
out
negl
pop
ds
mov
sbb
push
mov
ret
out
pusha
and
cmp
mov
pop
mov
cmp
and
pusha
idivb
pop
mov
in
jbe
lods
and
sbb
adc
pusha
inc
andb
imul
rcr
mov
vmovd
dec
lods
or
rol
push
add
sbb
push
adc
and
fwait
out
mov
mov
dec
dec
mov
mov
sub
mov
push
add
fdivs
or
push
addb
add
ds
jge
inc
jge
jecxz
rcrl
jl,pt
sbb
push
int
popf
mov
fcmovnb
sbb
inc
add
addb
add
ss
mov
add
add
inc
loopne
stos
and
rcrl
lcall
lret
inc
loopne
mov
mov
subb
add
cmp
and
xor
mov
sahf
mov
test
jp
lods
pusha
inc
inc
into
int3
sub
pop
cmp
inc
xchg
rorl
cmc
je
jmp
movsl
lds
add
scas
and
mov
sub
cmpb
add
pop
sub
add
test
hlt
mov
movsb
rolb
lea
out
loope
pop
incl
je
mov
and
xchg
std
test
popf
xchg
stos
pop
mov
inc
add
mov
jecxz
into
mull
shl
jg
ret
data16
out
ja
and
pop
stos
or
mov
push
ret
and
out
enter
pusha
and
jno
pop
sub
inc
push
rolb
mov
pusha
xor
test
add
rolb
cmp
add
jo
cmp
addb
insl
or
mov
dec
add
and
daa
jae
lds
loopne
fbstp
pop
push
enter
xchg
add
imul
fptan
jnp
dec
pop
leave
imul
jl
sub
cmpsb
add
inc
xchg
in
fistl
push
mov
sahf
into
cmpsb
andb
inc
inc
mulps
imul
mov
pusha
repnz
mov
add
jnp
cmp
lds
mov
sub
jns
in
mov
lods
add
notl
mov
insb
sbb
and
and
and
dec
jo
in
dec
lret
inc
adc
dec
inc
int3
xchg
xor
orb
xor
divb
iret
pop
jns
mov
not
int3
jl
cmp
cs
inc
scas
shlb
loopne
orl
mov
mov
ss
inc
push
sub
das
pop
lret
cmp
inc
imul
inc
add
jo
iret
add
sub
jmp
jnp
rcl
fcmovnbe
and
loopne
subl
push
sbb
cmp
and
mov
or
cwtl
pop
leave
mov
cmp
jbe
lcall
xor
gs
fs
addb
cs
inc
and
loopne
dec
ljmp
shrb
inc
xchg
cmpb
fmull
inc
push
mov
and
int
stc
push
subl
push
add
and
dec
in
dec
adc
mov
ss
lret
loope
adc
cmp
and
mov
lcall
mov
inc
vmovups
sub
mov
orl
pop
std
xchg
pop
sbb
loope
fstl
shl
addb
cli
jo
jge
cmp
jge
daa
adc
outsb
sbb
in
push
push
stos
inc
pusha
into
add
cmpsl
mov
arpl
lea
out
add
out
mov
lods
pusha
inc
sub
addr16
andb
or
js
stc
or
shlb
out
mov
add
ja
and
lods
xchg
bound
sbb
push
inc
pop
sub
add
call
dec
add
mov
jecxz
sbb
and
push
push
lods
out
data16
fcom
inc
cmpsb
and
sub
inc
test
je
shrl
loopne
mov
add
andb
pop
movsl
arpl
les
inc
pop
iret
cmp
test
fsts
clc
sarb
icebp
je
dec
xor
push
or
inc
into
mov
insb
add
lea
hlt
push
push
rolb
cmc
mov
ret
pusha
mov
lods
jmp
test
sbbb
sub
jp
or
loope
loopne
and
mov
mov
add
rorb
dec
movsb
loopne
arpl
mov
cli
gs
adc
repnz
shlb
fsubl
notb
mov
aam
jmp
nop
ret
mov
addr16
mov
pusha
mov
add
sub
mov
fsubs
mov
push
add
in
lcall
mov
push
dec
dec
mov
loopne
xchg
test
es
mov
push
pusha
add
inc
sub
andl
jmp
mov
sti
sub
jl
mov
pusha
in
icebp
mov
imul
mov
add
jge
loopne
mov
rolb
xchg
das
inc
sub
in
addb
popf
inc
push
stc
std
push
xchg
add
add
sbb
divb
xor
sub
pusha
shrb
scas
loopne
sbb
loopne
int
ss
iret
fwait
sbb
aas
sahf
sub
ss
xor
adc
fcoms
add
jp
cmp
jae
fwait
push
sbb
mov
add
imul
inc
rorb
xchg
adc
mov
loope
pop
adc
pop
call
adc
ja
lods
and
mov
sbb
loop
push
ret
lret
xchg
out
leave
mov
imul
stos
and
ret
jns
adc
pop
dec
movsb
pusha
sbbb
adc
xor
out
xor
push
in
incb
subl
repz
push
pop
push
cmp
xchg
jl
pop
or
cmp
sarb
das
nop
fbld
cmc
aad
and
xchg
push
add
mov
sarb
adc
mov
stos
add
lcall
dec
scas
aaa
mov
adc
in
shlb
loopne
cmp
add
sub
jae
icebp
jb
cmpsl
add
sub
add
mov
addl
mov
sub
add
sub
xchg
loopne
out
lahf
mov
pusha
imul
loopne
push
pop
bound
pop
js
cmp
dec
cld
mov
cltd
in
add
icebp
lods
inc
adc
or
hlt
and
insb
in
mov
or
bound
and
addb
dec
out
push
sub
loopne
pusha
mov
filds
dec
daa
mov
loopne
sbb
cmc
xchg
sbb
xchg
add
add
loopne
loopne
mov
filds
mov
mov
das
out
mov
pusha
pop
push
repnz
mov
orb
shlb
add
inc
gs
sub
mov
sbb
inc
mov
and
xor
or
movsb
add
rcrb
andb
out
push
loopne
mov
mov
sub
cmp
cli
lret
mov
mov
adcb
and
and
push
sbb
xlat
out
ljmp
dec
jle
loopne
fs
loopne
mov
imul
pop
gs
cmp
idivb
movsl
rorl
mov
xchg
lret
shll
pusha
ljmp
pusha
aam
or
add
jb
sub
aam
jg
shlb
add
inc
pop
jmp
add
inc
add
mov
loop
sti
mov
and
imul
dec
sub
inc
add
rolb
in
push
popa
push
pop
popf
lret
aas
fiaddl
ljmp
mov
int
push
add
and
inc
loopne
add
addr16
pushf
mov
enter
jbe
and
loopne,pn
test
add
jb
loopne
inc
push
jl
lret
mov
add
insb
jmp
ja
insl
leave
pop
mull
ljmp
clc
or
and
inc
andb
scas
mov
mov
insl
pop
negb
or
add
mov
pop
dec
out
shlb
mov
outsl
in
lahf
lret
inc
aas
ds
jnp
leave
pop
loop
enter
out
and
mov
sarb
outsb
mov
mov
testb
out
pop
stos
adc
insl
xchg
push
cmp
movsb
rolb
mov
mov
or
add
jns
mov
mov
jp
add
add
loopne
in
cmc
mov
cmc
adc
repz
mov
pusha
fmuls
and
insb
popf
push
mov
add
inc
add
shl
mov
xlat
testb
frstor
and
push
jp
sub
js
and
mov
push
add
loopne
scas
loopne
push
mov
sub
mov
xchg
and
daa
mov
test
rcl
inc
psllq
jg
mov
fldenv
cmc
push
stos
sbb
cld
in
xchg
test
out
or
and
add
mov
addb
add
add
or
shlb
and
jae
rolb
call
sti
leave
sub
push
je
pushf
dec
cmp
and
xor
lret
sbb
adc
sbbb
xor
int3
jno
rcll
adc
xor
mov
ror
ja
shll
mov
mov
gs
push
fwait
mov
popa
sub
pusha
cmpl
out
mov
jnp
mov
out
fsub
in
dec
in
int
xor
xchg
bound
push
and
sub
mov
jne
sbb
pop
push
and
jae
pusha
and
mov
std
push
xor
dec
and
mov
push
sub
loop
roll
mov
adc
and
shl
leave
mov
xorb
push
add
cmp
mov
jae
push
sti
fstpt
lahf
mov
mov
add
test
loopne
aas
xorl
loopne
and
mov
stos
ret
aam
ljmp
addr16
movsb
and
loopne
iret
xor
add
fcoms
mov
or
xchg
lds
mov
lret
aas
lahf
push
add
vcvtdq2ps
xchg
pop
jl
pop
fs
sbb
mov
testb
pop
leave
push
rcr
movsl
out
inc
xlat
test
scas
loopne
adc
test
aaa
dec
and
sub
jne
cmp
xchg
ret
pop
fs
pusha
int3
add
das
add
sub
mov
int
inc
sysexit
mov
xor
mov
add
add
pop
jae
inc
inc
jae
jns
daa
push
stos
mov
ds
out
mov
loopne
mov
push
jne
pop
dec
outsl
addl
addb
lcall
xchg
aad
inc
jmp
mov
sbb
mov
add
and
add
or
add
cmp
and
xchg
sbb
rorl
mov
arpl
pop
mov
and
cld
push
je
arpl
and
sub
fsubs
adc
jbe
add
and
fimuls
je
dec
aaa
je
and
pushw
cmc
jp
jo
in
add
ds
ret
adc
inc
dec
cmpsl
inc
dec
pop
add
mov
pop
pop
sbb
sub
ret
inc
stc
sbb
and
pusha
hlt
sbb
out
mov
push
in
roll
pop
fwait
push
test
and
mov
mov
stos
jmp
notb
cli
jmp
sbb
xchg
hlt
cmc
imul
push
add
pop
sar
pop
mov
adc
add
adc
fsubl
cwtl
cmc
push
imul
adc
adcb
xor
data16
lods
shl
in
mov
pop
call
and
subb
out
in
loopne
and
and
dec
addb
jnp
mov
mov
xchg
out
cmp
mov
mov
cltd
xor
fs
in
hlt
arpl
add
nop
leave
pusha
lock
rdmsr
cmp
mov
shl
pusha
sub
mov
pop
inc
push
clc
repnz
nop
cld
jae
add
add
stos
addb
pop
sub
mov
das
jge
add
aaa
xchg
add
verr
add
clc
repnz
nop
cld
jae
xchg
sub
clc
add
jb
push
mov
outsb
or
bound
and
xor
loopne
and
testl
xchg
ret
xchg
xchg
addl
aaa
add
add
aaa
sbb
add
rol
add
into
add
mov
push
mov
xchg
ret
sub
jge
ret
fwait
clc
repnz
nop
cld
jae
add
ltr
add
add
call
clc
repnz
nop
cld
jae
add
jge
clc
repnz
nop
cld
jae
sub
lods
add
add
loope
incl
add
repnz
nop
cld
jae
add
shll
push
mov
clc
repnz
nop
cld
jae
clc
roll
add
ljmp
cld
jae
adc
aaa
add
lcall
sub
push
mov
xchg
ret
popl
add
add
stos
stos
clc
repnz
nop
cld
jae
lcall
or
push
mov
leave
nop
jmp
out
sub
sub
add
inc
add
nop
push
mov
leave
nop
jmp
lods
and
adc
rcl
add
clc
repnz
nop
cld
jae
orb
add
into
jnp
inc
add
andl
sub
shl
loopne
bound
add
clc
repnz
nop
cld
jae
add
sub
add
fldl
and
rorb
xor
clc
repnz
nop
cld
jae
add
add
lret
add
or
clc
repnz
nop
cld
jae
adc
add
dec
jnp
out
add
nop
push
mov
leave
nop
jmp
ret
add
xchg
sub
add
repnz
nop
cld
jae
pusha
add
mov
xchg
ret
ljmp
mov
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
frstor
add
nop
nop
cld
jae
add
xchg
ss
mov
xchg
ret
aaa
add
cld
sbb
xchg
insl
add
clc
repnz
nop
cld
jae
add
add
add
loopne
clc
inc
nop
into
push
loopne
sbb
ja
fs
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
xchg
add
ljmp
nop
push
mov
leave
nop
jmp
sub
sub
add
adc
ret
clc
repnz
nop
cld
jae
sub
rorl
add
dec
add
push
mov
xchg
ret
add
hlt
into
add
xorb
clc
repnz
nop
cld
jae
xchg
xchg
mov
and
push
mov
leave
nop
jmp
adc
add
lcall
nop
cld
jae
add
add
andb
outsl
loopne
repnz
nop
cld
jae
adc
lds
cld
or
lahf
push
clc
repnz
nop
cld
jae
add
jb
sbb
fldl
loopne
mov
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
add
add
add
movswl
clc
repnz
nop
cld
jae
clc
add
mull
repnz
nop
cld
jae
out
lds
data16
inc
clc
repnz
nop
cld
jae
lds
sub
jae
adc
nop
jmp
lret
stos
add
add
ficoms
pop
nop
nop
cld
jae
add
ss
add
mov
inc
fwait
clc
repnz
nop
cld
jae
add
ret
add
aas
call
clc
repnz
nop
cld
jae
sbbl
clc
repnz
nop
cld
jae
add
inc
xor
clc
repnz
nop
cld
jae
add
xchg
sub
xor
clc
repnz
nop
cld
jae
bswap
add
in
mov
push
mov
xchg
ret
lcall
xchg
mov
xchg
cmpl
leave
nop
jmp
pusha
jge
add
addb
clc
repnz
nop
cld
jae
mov
add
sub
addb
add
clc
repnz
nop
cld
jae
add
ret
add
je
nop
push
mov
leave
nop
jmp
add
stos
inc
mov
mov
push
mov
xchg
ret
addb
shrb
mov
shrb
movswl
clc
repnz
nop
cld
jae
mov
out
into
mov
push
test
nop
push
mov
leave
nop
jmp
mov
mov
adc
mov
xchg
ret
add
jb
add
je
mov
push
mov
xchg
ret
add
sub
lds
add
les
repnz
nop
cld
jae
popa
add
out
add
sbb
add
repnz
nop
cld
jae
mov
add
and
mov
xchg
ret
fs
add
xchg
ljmp
nop
nop
cld
jae
mov
lods
add
pusha
and
and
repnz
nop
cld
jae
add
lds
repnz
nop
cld
jae
lods
imul
adc
nop
jmp
mov
lds
add
add
push
push
mov
xchg
ret
add
mov
add
add
fistpl
clc
repnz
nop
cld
jae
ljmp
push
push
mov
xchg
ret
add
fs
add
ss
pop
fwait
nop
push
mov
leave
nop
jmp
into
addl
xlat
push
clc
repnz
nop
cld
jae
ljmp
jp
push
clc
repnz
nop
cld
jae
roll
add
sub
fs
mov
clc
repnz
nop
cld
jae
sbb
std
movzwl
clc
repnz
nop
cld
jae
add
lea
clc
repnz
nop
cld
jae
add
lahf
fistpl
clc
repnz
nop
cld
jae
sbb
add
mov
push
mov
xchg
ret
add
stos
add
lds
ljmp
nop
nop
cld
jae
xchg
mov
push
mov
xchg
ret
roll
lcall
or
nop
push
mov
leave
nop
jmp
into
add
mov
add
movsl
clc
repnz
nop
cld
jae
ljmp
imul
repnz
nop
cld
jae
add
int
push
shr
nop
push
mov
leave
nop
jmp
adc
mov
mov
xchg
ret
cwtl
pushf
mov
adc
add
sti
movzwl
nop
push
mov
leave
nop
jmp
add
add
sarb
shrl
push
mov
leave
nop
jmp
add
mov
pop
jae
repnz
nop
cld
jae
or
add
xor
pusha
mov
repnz
nop
cld
jae
sub
sbb
out
nop
push
mov
leave
nop
jmp
add
lcall
mov
imul
clc
repnz
nop
cld
jae
add
add
movb
repnz
nop
cld
jae
sub
xorl
je
clc
repnz
nop
cld
jae
add
jmp
nop
cld
jae
adc
lcall
push
clc
repnz
nop
cld
jae
xchg
out
sub
lds
add
data16
and
mov
adc
cwtl
arpl
xchg
ret
add
add
add
and
rcrb
inc
add
add
add
mov
nop
nop
cld
jae
sbb
add
icebp
cmp
nop
push
mov
leave
nop
jmp
or
pusha
xchg
addb
shl
xorl
push
mov
xchg
ret
mov
mov
sub
mov
clc
repnz
nop
cld
jae
add
jne
nop
push
mov
leave
nop
jmp
add
mov
push
push
mov
xchg
ret
sub
xorl
pusha
mov
add
clc
repnz
nop
cld
jae
add
add
in
leave
nop
jmp
jns
xchg
add
or
add
mov
clc
repnz
nop
cld
jae
add
lds
push
push
mov
xchg
ret
lds
add
xchg
andl
nop
cld
jae
add
shll
push
mov
xchg
ret
mov
add
add
add
int
rep
clc
repnz
nop
cld
jae
xchg
add
rol
xchg
push
push
mov
xchg
ret
add
add
fldl
loopne
icebp
push
nop
push
mov
leave
nop
jmp
jp
add
int
lods
add
push
mov
xchg
ret
lcall
add
jmp
sti
clc
repnz
nop
cld
jae
pushf
add
add
pushf
into
sub
pusha
bound
dec
xor
repnz
nop
cld
jae
aaa
pushf
and
xchg
jge
sub
loopne
mov
std
add
add
repnz
nop
cld
jae
add
ja
or
nop
nop
cld
jae
out
aaa
add
add
mov
sbb
clc
repnz
nop
cld
jae
add
add
ss
sub
nop
push
mov
leave
nop
jmp
add
pop
xchg
jnp
add
ja
add
fwait
push
mov
xchg
ret
clc
add
imul
test
nop
nop
cld
jae
shll
pusha
jp
xor
push
mov
xchg
ret
sbb
addl
nop
nop
cld
jae
add
add
ss
jne
clc
repnz
nop
cld
jae
addl
nop
cld
jae
aaa
add
mov
clc
repnz
nop
cld
jae
jns
add
xchg
add
or
cld
jae
add
xorl
loopne
xor
clc
repnz
nop
cld
jae
lcall
cmp
in
loopne
push
add
add
add
call
clc
repnz
nop
cld
jae
leave
sub
cmp
clc
repnz
nop
cld
jae
add
into
andl
nop
nop
cld
jae
out
out
add
sbb
lret
add
mov
clc
repnz
nop
cld
jae
cwtl
add
xchg
lret
add
cmp
les
clc
clc
repnz
nop
cld
jae
xorl
pop
clc
repnz
nop
cld
jae
sub
clc
add
jp
mov
push
and
repz
clc
repnz
nop
cld
jae
add
add
adc
jmp
test
repnz
nop
cld
jae
lds
sbb
pop
clc
repnz
nop
cld
jae
leave
jp
and
add
push
pushl
clc
repnz
nop
cld
jae
pushf
jge
add
cwtl
aad
call
inc
add
sbb
add
sub
test
rcrb
clc
repnz
nop
cld
jae
add
add
lcall
nop
nop
cld
jae
fstpl
add
pushf
add
push
mov
leave
nop
jmp
xchg
sub
add
add
add
add
sub
leave
add
add
stos
shlb
mulps
repnz
nop
cld
jae
add
out
add
add
mull
repnz
nop
cld
jae
sbb
lcall
cld
popa
inc
add
add
pusha
add
sub
clc
repnz
nop
cld
jae
add
stos
add
loopne
lods
and
test
nop
cld
jae
xchg
add
add
add
push
push
clc
repnz
nop
cld
jae
add
add
mov
add
mov
nop
push
mov
leave
nop
jmp
add
add
leave
and
push
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
add
add
sub
add
jnp
sbb
clc
repnz
nop
cld
jae
mov
add
xchg
mov
nop
push
mov
leave
nop
jmp
mov
leave
pushf
xchg
sbbb
sub
orb
or
clc
repnz
nop
cld
jae
add
add
aas
add
nop
push
mov
leave
nop
jmp
add
add
sbb
or
test
adc
nop
nop
cld
jae
leave
sub
loopne
not
push
mov
xchg
ret
adc
jp
hlt
rolb
pusha
mov
cmp
nop
push
mov
leave
nop
jmp
add
lods
clc
repnz
nop
cld
jae
add
fs
push
nop
push
mov
leave
nop
jmp
xchg
imul
add
dec
push
push
mov
xchg
ret
pushf
xchg
xchg
add
xchg
call
clc
repnz
nop
cld
jae
cwtl
add
and
repnz
nop
cld
jae
add
mov
ljmp
cld
jae
add
xchg
xchg
add
jmp
mov
leave
nop
jmp
sbb
mov
add
call
add
clc
repnz
nop
cld
jae
clc
cwtl
adc
mov
nop
cld
jae
adc
add
xchg
xchg
mov
repnz
nop
cld
jae
add
pusha
xchg
adc
inc
push
push
mov
xchg
ret
add
ret
xchg
jb
ljmp
inc
add
add
add
add
popa
mov
out
push
mov
xchg
ret
int
add
rolb
add
fs
add
add
add
xchg
add
xchg
add
into
shrl
mov
xchg
ret
add
fstl
pop
push
mov
and
add
nop
push
mov
leave
nop
jmp
cwtl
add
hlt
arpl
mov
xchg
ret
add
pushf
cwtl
stos
mov
mov
leave
nop
jmp
into
xorl
int
clc
repnz
nop
cld
jae
add
add
ja
pusha
out
mov
clc
repnz
nop
cld
jae
add
xchg
add
pop
movzwl
clc
repnz
nop
cld
jae
mov
and
add
sbb
cmp
repnz
nop
cld
jae
clc
add
xchg
inc
mov
or
mov
adc
repnz
nop
cld
jae
add
mov
add
nop
cld
jae
mov
adc
add
ret
shl
clc
repnz
nop
cld
jae
adc
lret
sub
fisubl
cmpl
mov
leave
nop
jmp
leave
add
ljmp
cmpl
nop
push
mov
leave
nop
jmp
jge
add
add
pop
push
mov
xchg
ret
jp
add
pushf
xor
push
clc
repnz
nop
cld
jae
roll
adc
xchg
add
lret
mov
nop
push
mov
leave
nop
jmp
hlt
add
ljmp
sbb
repnz
nop
cld
jae
out
lods
add
lret
add
sar
nop
nop
cld
jae
clc
sbb
add
popl
jge
clc
repnz
nop
cld
jae
add
add
lcall
inc
add
nop
jmp
into
into
sbb
add
nop
cld
jae
add
jb
iret
add
clc
repnz
nop
cld
jae
add
into
ja
pusha
orl
cmc
incl
add
add
call
clc
repnz
nop
cld
jae
add
add
insb
inc
mov
clc
repnz
nop
cld
jae
pushf
xchg
lret
xchg
daa
pusha
clc
repnz
nop
cld
jae
sub
add
add
out
out
clc
clc
repnz
nop
cld
jae
add
or
nop
nop
cld
jae
adc
add
xchg
adc
inc
jns
and
call
add
add
add
lret
cli
clc
repnz
nop
cld
jae
add
into
add
add
mov
or
fld1
clc
repnz
nop
cld
jae
mov
add
and
and
lss
jmp
add
ljmp
add
lea
clc
repnz
nop
cld
jae
ret
into
add
andb
mov
orl
add
clc
repnz
nop
cld
jae
popa
add
sbb
mov
inc
in
mov
xchg
ret
cld
rcl
int
add
out
rorl
mov
xchg
ret
add
add
add
jb
mov
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
hlt
out
adc
add
xchg
add
push
mov
xchg
ret
xorl
add
clc
repnz
nop
cld
jae
jb
cwtl
test
in
add
loopne
addb
add
add
pop
in
das
cmp
cmp
nop
push
mov
leave
nop
jmp
add
bound
mov
xchg
ret
into
jns
add
add
mov
clc
repnz
nop
cld
jae
add
dec
je
clc
repnz
nop
cld
jae
add
add
jbe
mov
repnz
nop
cld
jae
add
lods
add
xchg
ss
adc
cmp
ret
add
stos
or
add
nop
push
mov
leave
nop
jmp
popa
fldl
lods
add
cmpb
test
stos
clc
repnz
nop
cld
jae
add
hlt
daa
xchg
clc
repnz
nop
cld
jae
pushf
out
mov
add
pusha
inc
add
addb
add
add
shlb
push
clc
repnz
nop
cld
jae
aaa
xchg
sbb
clc
repnz
nop
cld
jae
out
add
sub
orl
repnz
nop
cld
jae
sub
add
add
pop
push
mov
xchg
ret
sub
ret
add
into
pop
add
clc
repnz
nop
cld
jae
imul
adc
js
clc
repnz
nop
cld
jae
fs
stos
fisttpll
add
nop
jmp
add
add
add
cwtl
out
mov
nop
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
hlt
lcall
jmp
in
leave
nop
jmp
add
add
add
movl
jae
add
add
add
and
inc
mov
inc
mov
nop
cld
jae
add
mov
into
loope
nop
push
mov
leave
nop
jmp
sub
add
add
ja
movzwl
clc
repnz
nop
cld
jae
ret
pushf
sbb
push
push
mov
xchg
ret
add
add
int
lds
sub
inc
addb
mov
nop
nop
cld
jae
and
cwtl
sub
out
add
add
nop
push
mov
leave
nop
jmp
add
repnz
nop
cld
jae
adc
add
mov
clc
repnz
nop
cld
jae
pushf
add
add
repnz
nop
cld
jae
xchg
str
add
cwtl
out
nop
push
mov
leave
nop
jmp
or
xchg
add
push
mov
xchg
ret
roll
add
push
je
clc
repnz
nop
cld
jae
xchg
int
xor
repnz
nop
cld
jae
add
add
into
xchg
lds
mov
clc
repnz
nop
cld
jae
xchg
add
ja
add
sub
orb
inc
add
into
lcall
lock
push
push
mov
xchg
ret
into
xchg
sub
jp
sub
clc
repnz
nop
cld
jae
add
add
push
sbb
lret
fwait
mov
push
mov
xchg
ret
add
add
je
clc
repnz
nop
cld
jae
cwtl
pusha
ja
jle
int
ret
mov
xchg
ret
cwtl
cld
add
add
add
cmp
push
clc
repnz
nop
cld
jae
mov
into
imul
add
nop
push
mov
leave
nop
jmp
add
nop
push
mov
leave
nop
jmp
ss
shrl
add
adc
mov
mov
repnz
nop
cld
jae
add
add
rclb
mov
xchg
ret
add
hlt
ja
out
jae
mov
xchg
ret
add
add
call
repnz
nop
cld
jae
add
pushf
aaa
and
in
push
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
or
mov
add
add
repnz
nop
cld
jae
and
add
add
std
call
nop
push
mov
leave
nop
jmp
pushf
mov
pusha
shrb
mov
xchg
ret
clc
add
sub
or
repnz
nop
cld
jae
pusha
addb
xchg
loopne
clc
repnz
nop
cld
jae
add
jb
add
clc
repnz
nop
cld
jae
add
pushf
lds
mov
enter
nop
cld
jae
jno
add
fwait
push
mov
xchg
ret
adc
add
aaa
aaa
hlt
add
mov
clc
repnz
nop
cld
jae
lds
add
add
push
mov
leave
nop
jmp
mov
xchg
sub
nop
jmp
sbb
sub
rcll
repnz
nop
cld
jae
pushf
add
add
into
add
add
clc
repnz
nop
cld
jae
lret
and
add
test
repnz
nop
cld
jae
xchg
jge
add
repnz
nop
cld
jae
add
add
popa
push
clc
repnz
nop
cld
jae
xchg
sub
and
add
clc
repnz
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
jge
mov
add
add
addl
cmp
ret
add
lret
add
add
add
add
nop
push
mov
leave
nop
jmp
add
add
sbb
adc
nop
nop
cld
jae
cwtl
ret
cwtl
rorl
lock
clc
repnz
nop
cld
jae
imul
cmp
jne
movsb
clc
repnz
nop
cld
jae
adc
add
add
dec
in
leave
nop
push
mov
leave
nop
jmp
ja
add
add
add
repnz
nop
cld
jae
add
sbb
adc
add
in
and
repnz
nop
cld
jae
adc
sub
stc
add
add
repnz
nop
cld
jae
sbb
add
mov
sbb
add
int3
add
add
add
into
pusha
cmp
mov
mov
leave
nop
jmp
mov
add
pop
xchg
nop
push
mov
leave
nop
jmp
clc
pusha
add
add
mov
add
add
mov
loop
mov
xchg
ret
add
add
into
leave
mov
je
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
pushf
into
lcall
and
mov
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
fldl
add
sub
repnz
nop
cld
jae
lds
add
sbb
ss
pop
mov
clc
repnz
nop
cld
jae
cld
xchg
xchg
mov
mov
inc
jmp
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
lods
lcall
sbb
repnz
nop
cld
jae
ret
add
insl
call
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
into
rcrl
add
leave
mov
nop
push
mov
leave
nop
jmp
mov
rolb
add
add
rcll
repnz
nop
cld
jae
into
ljmp
ret
nop
push
mov
leave
nop
jmp
xchg
addb
mov
scas
dec
push
mov
xchg
ret
mov
jp
add
push
clc
repnz
nop
cld
jae
xchg
add
cld
add
add
or
add
repnz
nop
cld
jae
and
rcll
repnz
nop
cld
jae
clc
popa
sub
adc
repnz
nop
cld
jae
ret
lcall
push
mov
xchg
ret
xchg
lcall
push
nop
push
mov
leave
nop
jmp
sub
mov
add
cmp
mov
repnz
nop
cld
jae
add
pop
adc
stos
bound
xchg
ret
mov
rol
in
mov
and
mov
xchg
ret
add
ljmp
nop
push
mov
leave
nop
jmp
lcall
add
cmpsb
mov
call
cld
jae
adc
add
add
pop
nop
push
mov
leave
nop
jmp
int
add
add
int
pop
xorl
nop
push
mov
leave
nop
jmp
rolb
and
mov
add
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
pusha
add
or
lret
adc
add
arpl
clc
repnz
nop
cld
jae
add
into
add
add
clc
repnz
nop
cld
jae
leave
add
repnz
nop
cld
jae
add
sbb
sbb
clc
repnz
nop
cld
jae
sub
lods
jns
cmpsl
xor
push
mov
xchg
ret
or
lret
pushf
add
repnz
nop
cld
jae
sub
add
mov
inc
push
scas
cmpl
push
mov
xchg
ret
add
add
mov
je
sub
repnz
nop
cld
jae
shlb
out
add
test
or
add
repnz
nop
cld
jae
xchg
mov
mov
clc
repnz
nop
cld
jae
or
shll
jne
clc
repnz
nop
cld
jae
add
lcall
nop
cld
jae
add
fistl
push
jae
add
into
add
pusha
adc
clc
loop
pusha
shrb
clc
repnz
nop
cld
jae
sub
out
mov
push
mov
xchg
ret
add
add
cld
or
in
leave
nop
jmp
cld
adc
dec
push
clc
repnz
nop
cld
jae
add
add
rcll
mov
xchg
ret
ja
add
add
lret
nop
push
mov
leave
nop
jmp
addb
pop
push
clc
repnz
nop
cld
jae
aaa
mov
mov
add
ja
add
push
mov
xchg
ret
adc
fst
or
loopne
inc
jne
clc
repnz
nop
cld
jae
add
add
sar
mov
xchg
ret
clc
add
ljmp
xchg
test
repnz
nop
cld
jae
pusha
add
add
add
push
mov
xchg
ret
roll
add
mov
mov
xchg
ret
mov
add
mov
stos
clc
repnz
nop
cld
jae
into
xchg
int
lret
add
rolb
inc
loopne
repnz
nop
cld
jae
popa
add
add
nop
push
mov
leave
nop
jmp
or
add
add
lea
push
mov
leave
nop
jmp
ret
add
add
sar
dec
nop
push
mov
leave
nop
jmp
adc
add
inc
mov
sar
nop
nop
cld
jae
fs
add
pushf
add
mov
nop
cld
jae
add
add
mov
xchg
ret
mov
add
mov
clc
repnz
nop
cld
jae
pushf
clc
add
or
mov
leave
nop
jmp
lret
sub
mov
clc
repnz
nop
cld
jae
roll
add
add
repnz
nop
cld
jae
lds
mov
and
and
mov
clc
repnz
nop
cld
jae
add
add
add
pop
popf
mov
clc
repnz
nop
cld
jae
popl
pusha
mov
mov
xchg
ret
xchg
jge
add
lcall
add
nop
jmp
fs
sahf
sbb
sldt
add
into
add
jb
jns
popa
sub
jns
xor
lods
and
mov
popl
xchg
ret
add
ljmp
mov
xchg
ret
add
add
rolb
add
nop
push
mov
leave
nop
jmp
jns
add
jb
add
sub
clc
repnz
nop
cld
jae
ljmp
push
mov
xchg
ret
mov
add
jecxz
push
mov
xchg
ret
cwtl
xchg
add
adc
sub
dec
lahf
mov
nop
push
mov
leave
nop
jmp
add
aaa
pushf
add
push
clc
repnz
nop
cld
jae
add
pushf
add
add
clc
repnz
nop
cld
jae
into
int
add
mov
push
mov
xchg
ret
rolb
add
lds
sub
clc
repnz
nop
cld
jae
add
vmovntdq
mov
xchg
ret
add
addb
sub
js
imul
clc
repnz
nop
cld
jae
popl
add
add
rcrb
push
mov
xchg
ret
adc
add
add
push
incl
cld
mov
sarl
add
add
mov
sbb
std
testl
nop
push
mov
leave
nop
jmp
add
sbb
test
clc
repnz
nop
cld
jae
jge
sbb
add
push
mov
xchg
ret
out
add
mov
lea
clc
repnz
nop
cld
jae
shrl
clc
add
mov
xchg
ret
xchg
into
add
into
lcall
loopne
and
and
push
mov
ljmp
add
sub
movsl
pusha
dec
push
add
and
sub
xchg
lds
leave
popl
ret
lcall
cmp
cmp
ret
aaa
fnstsw
lds
mov
sub
nop
jmp
add
add
lret
mov
fld1
push
mov
xchg
ret
add
add
add
leave
nop
push
mov
leave
nop
jmp
add
add
add
mov
nop
cld
jae
add
out
roll
add
jmp
push
inc
push
dec
clc
repnz
nop
cld
jae
leave
jp
add
pop
push
mov
xchg
ret
add
out
fldl
or
jb
push
loopne
mov
push
mov
xchg
ret
xchg
add
add
push
clc
repnz
nop
cld
jae
add
cld
add
popl
jo
nop
push
mov
leave
nop
jmp
into
add
jp
stc
mov
clc
repnz
nop
cld
jae
mov
sbb
mov
xchg
ret
lret
popa
add
add
dec
mov
clc
repnz
nop
cld
jae
add
xor
lea
xchg
ret
ret
add
jge
add
mov
xchg
ret
add
or
add
sbb
das
mov
clc
repnz
nop
cld
jae
mov
adc
push
mov
leave
nop
jmp
add
adc
lds
mov
imul
mov
inc
add
ja
ljmp
adc
nop
jmp
adc
sub
int
push
clc
repnz
nop
cld
jae
pusha
add
ret
into
ss
popa
clc
repnz
nop
cld
jae
add
add
jp
add
rcr
and
repnz
nop
cld
jae
pushf
pushf
pusha
mov
adc
xchg
pop
push
mov
xchg
ret
mov
adc
arpl
add
repnz
nop
cld
jae
add
and
sub
pusha
cmp
jge
add
pushf
pusha
add
jge
add
repnz
push
mov
leave
nop
jmp
add
push
pop
lods
clc
repnz
nop
cld
jae
movntq
add
repz
clc
repnz
nop
cld
jae
cld
add
add
clc
repnz
nop
cld
jae
xchg
add
lcall
sar
repnz
nop
cld
jae
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
add
mov
mov
leave
nop
jmp
popa
add
punpckhwd
push
aad
jne
clc
repnz
nop
cld
jae
ret
add
add
rclb
cmp
add
subl
xchg
xchg
out
movsb
add
add
push
clc
repnz
nop
cld
jae
stos
add
lds
adc
clc
repnz
nop
cld
jae
lds
jge
add
xor
push
mov
xchg
ret
pushf
adc
sbb
add
bndstx
clc
repnz
nop
cld
jae
add
add
daa
mov
nop
push
mov
leave
nop
jmp
add
pusha
adc
add
clc
repnz
nop
cld
jae
cmpl
push
mov
xchg
ret
ljmp
std
xorl
clc
repnz
nop
cld
jae
sub
push
inc
and
clc
repnz
nop
cld
jae
mov
cld
add
sbb
repnz
nop
cld
jae
lds
lods
xchg
add
cwtl
cltd
add
nop
push
mov
leave
nop
jmp
add
clc
repnz
nop
cld
jae
add
adc
ret
loop
clc
repnz
nop
cld
jae
addl
adc
mov
and
mov
xchg
ret
lds
add
jmp
nop
cld
jae
lcall
shll
clc
repnz
nop
cld
jae
aaa
add
sub
arpl
add
nop
jmp
mov
jmp
popa
addb
add
into
add
add
leave
add
cmp
nop
nop
cld
jae
sbb
add
add
clc
incl
roll
sbb
add
lods
add
addl
push
mov
xchg
ret
add
lds
add
ss
repnz
nop
cld
jae
lcall
imul
clc
repnz
nop
cld
jae
mov
add
mov
xchg
ret
xchg
mov
leave
adc
push
push
mov
xchg
ret
add
sbb
xchg
add
and
lret
ret
sbb
leave
nop
jmp
cld
clc
imul
push
push
mov
xchg
ret
xchg
ljmp
or
and
inc
mov
push
mov
leave
nop
jmp
add
hlt
add
sub
sbb
fs
add
add
add
add
add
rep
clc
repnz
nop
cld
jae
pusha
add
xchg
add
mov
mov
clc
repnz
nop
cld
jae
add
or
sbb
clc
repnz
nop
cld
jae
out
sub
ret
add
nop
push
mov
leave
nop
jmp
mov
sub
add
mov
nop
cld
jae
sbb
mov
add
repnz
nop
cld
jae
add
add
add
and
outsl
add
clc
repnz
nop
cld
jae
sub
ret
or
mov
nop
cld
jae
into
xchg
add
pusha
pusha
cmpsl
pop
clc
repnz
nop
cld
jae
lods
mov
mov
stos
imul
nop
nop
cld
jae
lcall
mov
repnz
nop
cld
jae
add
add
add
xchg
mov
clc
repnz
nop
cld
jae
lds
inc
loopne
rep
clc
repnz
nop
cld
jae
add
into
lods
add
mov
xchg
ret
aaa
clc
add
jns
xlat
call
clc
repnz
nop
cld
jae
leave
xchg
push
mov
xchg
ret
aaa
xchg
add
add
clc
repnz
nop
cld
jae
roll
rol
add
in
push
push
mov
xchg
ret
add
pushf
add
add
jmp
lods
add
cld
add
add
add
pushf
add
and
div
nop
push
mov
leave
nop
jmp
roll
fldl
ljmp
arpl
nop
nop
cld
jae
pusha
out
fnsave
jne
push
mov
xchg
ret
popa
sbb
adc
ljmp
jmp
nop
cld
jae
xchg
add
cld
cmp
mov
xchg
ret
mov
sbb
loopne
popf
fld1
nop
push
mov
leave
nop
jmp
sbb
add
add
into
sub
and
mov
push
mov
xchg
ret
add
xchg
add
pop
add
clc
repnz
nop
cld
jae
ljmp
repnz
nop
cld
jae
sub
xchg
add
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
imul
push
imul
nop
nop
cld
jae
xchg
add
xchg
lea
xchg
ret
add
add
stos
add
push
mov
xchg
ret
add
add
fwait
pusha
clc
repnz
nop
cld
jae
lcall
xchg
lahf
push
clc
repnz
nop
cld
jae
lcall
lods
stos
mov
and
repnz
nop
cld
jae
sbb
add
leave
sub
repnz
nop
cld
jae
add
add
add
movsl
jne
nop
push
mov
leave
nop
jmp
xchg
add
and
outsl
call
nop
jmp
add
nop
push
mov
leave
nop
jmp
add
rolb
out
in
out
ja
clc
repnz
nop
cld
jae
ss
imul
sub
incl
int
sub
add
andb
aas
pop
nop
push
mov
leave
nop
jmp
add
lcall
mov
repnz
nop
cld
jae
xchg
mov
xchg
gs
clc
repnz
nop
cld
jae
add
xchg
nop
nop
cld
jae
add
jb
and
push
push
mov
xchg
ret
add
add
aaa
cs
sbb
add
nop
push
mov
leave
nop
jmp
add
add
and
jne
leave
nop
push
mov
leave
nop
jmp
add
add
popl
sarl
push
mov
leave
nop
jmp
add
nop
push
mov
leave
nop
jmp
add
cld
add
add
nop
nop
cld
jae
add
mov
mov
add
bound
clc
repnz
nop
cld
jae
jb
add
add
sub
or
push
mov
xchg
ret
cwtl
jb
imul
sub
repnz
nop
cld
jae
and
lods
add
inc
xor
push
mov
xchg
ret
sbb
xchg
adc
rcrb
mov
clc
repnz
nop
cld
jae
add
lods
add
fs
xor
mov
leave
nop
jmp
cld
add
roll
andb
clc
repnz
nop
cld
jae
add
add
out
roll
mov
xchg
ret
jns
add
mov
add
push
mov
xchg
ret
aaa
add
xchg
pusha
and
xchg
das
push
push
mov
xchg
ret
add
leave
add
sub
jne
clc
repnz
nop
cld
jae
subl
clc
repnz
nop
cld
jae
adc
jge
inc
mov
nop
push
mov
leave
nop
jmp
lods
aaa
lcall
clc
repnz
nop
cld
jae
add
cmp
mov
xchg
ret
xchg
popl
add
adc
cmp
push
push
mov
xchg
ret
mov
add
add
ret
mov
push
clc
repnz
nop
cld
jae
add
or
add
clc
repnz
nop
cld
jae
rolb
jbe
clc
repnz
nop
cld
jae
sbb
add
ss
mov
clc
repnz
nop
cld
jae
sub
add
insb
clc
repnz
nop
cld
jae
xchg
clc
add
xor
cmp
ret
mov
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
enter
dec
jge
lock
mov
xchg
ret
subl
cwtl
ret
dec
adc
mov
inc
add
add
sub
pop
pop
push
mov
push
mov
xchg
ret
mov
clc
into
test
and
inc
and
ss
inc
test
add
nop
push
mov
leave
nop
jmp
popa
sub
clc
repnz
nop
cld
jae
sbb
add
pusha
xchg
jae
sub
add
addl
push
adc
loopne
add
push
mov
xchg
ret
mov
addl
rol
clc
repnz
nop
cld
jae
add
into
pusha
xchg
vxorps
xchg
ret
ss
pusha
mov
add
jnp
nop
nop
cld
jae
sub
add
add
mov
sub
repnz
nop
cld
jae
out
addb
mov
pusha
and
mov
leave
nop
jmp
clc
add
popl
clc
repnz
nop
cld
jae
cld
popa
add
sub
repz
repnz
nop
cld
jae
add
into
clc
add
nop
nop
cld
jae
adc
add
mov
add
mov
loopne
addr16
clc
repnz
nop
cld
jae
jns
add
add
add
xchg
mov
clc
repnz
nop
cld
jae
add
dec
sub
repnz
nop
cld
jae
rsm
cld
mov
addb
pop
ret
push
mov
xchg
ret
lcall
add
ret
test
push
mov
xchg
ret
ljmp
and
pusha
push
mov
xchg
ret
add
and
and
add
into
pop
pop
nop
push
mov
leave
nop
jmp
clc
add
jb
clc
add
enter
and
ss
push
mov
leave
nop
jmp
add
xor
repnz
nop
cld
jae
roll
lcall
jge
nop
push
mov
leave
nop
jmp
add
adc
nop
cld
jae
clc
add
add
cmpl
nop
nop
cld
jae
fldl
verw
add
mov
ret
mov
clc
repnz
nop
cld
jae
adc
cld
lds
lret
dec
fistpl
clc
repnz
nop
cld
jae
add
push
push
clc
repnz
nop
cld
jae
add
sbb
xor
addb
call
leave
nop
jmp
sbb
add
add
pusha
subb
testl
sbb
dec
stos
cwtl
or
cwtl
pinsrw
sub
add
repnz
nop
cld
jae
add
sbb
stc
pop
push
mov
xchg
ret
sbb
xchg
ja
and
leave
test
nop
push
mov
leave
nop
jmp
add
add
rcrb
nop
nop
cld
jae
add
sub
add
add
clc
repnz
nop
cld
jae
fldl
adc
add
cwtl
sub
clc
repnz
nop
cld
jae
rorl
add
inc
pop
fld1
push
mov
xchg
ret
clc
addl
add
les
add
add
nop
jmp
add
mov
mov
nop
push
mov
leave
nop
jmp
add
pushf
mov
repnz
nop
cld
jae
lcall
push
mov
aas
add
add
add
rolb
add
sbb
pushl
clc
repnz
nop
cld
jae
lcall
cmp
fisttpl
nop
nop
cld
jae
jb
hlt
add
out
cmp
data16
add
jmp
add
sbb
add
add
add
push
add
clc
repnz
nop
cld
jae
add
cwtl
ljmp
nop
push
mov
leave
nop
jmp
add
popa
lods
or
fistpl
repnz
nop
cld
jae
into
out
popa
add
lds
lret
push
clc
repnz
nop
cld
jae
int
lret
jge
adc
ret
clc
repnz
nop
cld
jae
ljmp
xchg
cwtl
das
push
push
mov
xchg
ret
int
add
add
add
and
push
mov
xchg
ret
lcall
and
push
mov
xchg
ret
add
add
jge
js
call
nop
push
mov
leave
nop
jmp
add
ja
repz
clc
repnz
nop
cld
jae
xchg
add
add
add
clc
repnz
nop
cld
jae
sarl
pop
mov
adcl
add
nop
jmp
imul
nop
cld
jae
sub
add
jbe
mov
jbe
clc
repnz
nop
cld
jae
stos
xchg
lcall
or
repnz
nop
cld
jae
add
into
add
into
mov
nop
cld
jae
add
or
add
add
aaa
mov
clc
repnz
nop
cld
jae
sbb
sbb
add
addb
add
clc
repnz
nop
cld
jae
lcall
add
dec
movzwl
clc
repnz
nop
cld
jae
ja
mov
andb
add
clc
repnz
nop
cld
jae
add
roll
mov
xchg
ret
mov
adc
mov
xor
push
mov
xchg
ret
add
pushf
mov
shl
xchg
mov
clc
repnz
nop
cld
jae
into
out
adc
xor
nop
nop
cld
jae
add
add
xchg
mov
pop
nop
push
mov
leave
nop
jmp
adc
add
pop
mov
clc
repnz
nop
cld
jae
fldl
pushf
shll
int3
and
sti
nop
push
mov
leave
nop
jmp
add
add
lds
xchg
clc
repnz
nop
cld
jae
lods
add
lcall
clc
repnz
nop
cld
jae
add
add
add
pushl
out
rcll
add
add
ja
add
jg
add
clc
repnz
nop
cld
jae
and
add
lods
frstor
xbegin
jae
add
clc
into
jp
add
pop
cmp
sar
repnz
nop
cld
jae
add
jb
xchg
adc
push
in
clc
repnz
nop
cld
jae
add
popa
add
jmp
add
ljmp
add
jmp
mov
leave
nop
jmp
add
mov
dec
nop
push
mov
leave
nop
jmp
add
add
xchg
add
pop
pop
clc
repnz
nop
cld
jae
add
shl
add
rcrl
push
clc
repnz
nop
cld
jae
xchg
lcall
xchg
jl
add
xchg
add
hlt
add
in
xchg
nop
push
mov
leave
nop
jmp
add
mov
shlb
add
repnz
orb
clc
repnz
nop
cld
jae
xchg
jp
sub
mov
clc
repnz
nop
cld
jae
add
add
push
mov
nop
push
mov
leave
nop
jmp
sub
addr16
clc
repnz
nop
cld
jae
or
add
add
sbb
push
mov
xchg
ret
ret
sub
add
push
nop
push
mov
leave
nop
jmp
adc
add
add
add
repnz
nop
cld
jae
aaa
add
add
mov
mov
clc
repnz
nop
cld
jae
add
xchg
add
or
push
clc
repnz
nop
cld
jae
rcrl
add
nop
nop
cld
jae
add
add
addb
mov
nop
push
mov
leave
nop
jmp
add
shl
pusha
add
addb
inc
cld
leave
jp
sub
int
mov
add
add
mov
xchg
ret
add
clc
add
cmp
push
mov
leave
nop
jmp
add
lds
cmp
mov
xchg
ret
add
add
lds
fwait
clc
repnz
nop
cld
jae
cld
sbb
popl
mov
int
sub
and
pushf
inc
fwait
call
clc
repnz
nop
cld
jae
pop
add
out
add
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
mov
add
adc
xchg
jb
jne
nop
push
mov
leave
nop
jmp
mov
mov
popf
push
mov
add
add
add
out
and
add
movsb
add
xchg
aaa
cld
int3
test
and
add
jnp
dec
mov
loopne
dec
mov
shlb
mov
fdivr
int
dec
movsl
inc
lea
bound
incl
push
mov
pusha
sub
dec
mov
inc
aam
out
or
addr16
push
cli
fisubl
cli
imul
cmc
aad
movsl
sahf
mov
loopne
je
push
mov
push
mov
mov
cmpsb
add
jg
insb
outsb
and
or
and
pop
outsl
andb
inc
subb
jno
jb
cmp
or
inc
xorl
fwait
clc
mov
adc
notb
adc
pop
mov
adc
aad
xor
and
pusha
and
mov
xchg
sar
aad
punpckhwd
shl
jl
and
pop
int
mov
xor
fimull
shld
clc
pop
aas
fdiv
loopne
pop
stos
xchg
roll
movsl
imul
mov
push
dec
pop
mov
mov
stos
xor
ljmp
add
fwait
push
cmp
xor
dec
dec
add
pusha
sbb
cmp
movsl
jle
imul
inc
enter
add
cmp
adc
mov
in
push
cmp
mov
mov
lods
push
inc
mov
jecxz
fdivl
add
push
dec
cwtl
fsubp
call
pop
sbb
ret
cmp
cld
add
loopne
adc
mov
inc
push
and
loopne
call
nop
call
shll
and
gs
jmp
fwait
add
add
xlat
mov
pop
jmp
subl
mov
xor
sbb
push
jns
push
dec
inc
dec
pop
mov
and
inc
and
shrb
int3
aam
lods
and
pop
daa
ds
loopne
imul
ret
jecxz
push
sbb
mov
inc
dec
out
xchg
mov
and
loopne
ffree
icebp
inc
dec
stos
scas
cltd
mov
sub
push
add
push
lea
lock
jo
rolb
rolb
cmp
mov
mov
and
add
pusha
stc
call
dec
cmp
jae
nop
cld
lea
add
ja
mov
mov
jno
and
arpl
inc
in
xlat
add
add
adc
inc
je
mov
xchg
inc
sub
pusha
xchg
dec
je
push
push
inc
or
shrl
add
xchg
xlat
push
sbb
dec
dec
imul
pop
loop
add
andb
xchg
sub
push
test
loopne
roll
adc
js
mov
loopne
jne
lods
aam
mov
or
inc
lods
shlb
nop
xor
clc
imul
stos
inc
inc
imul
insb
sbb
xchg
movsb
pusha
mov
push
dec
adc
and
loopne
cmpsl
cmp
jno
or
inc
mov
pusha
aam
and
xchg
xor
in
fsubrs
mov
xor
sti
lret
int3
xchg
xor
std
sbb
ret
test
subb
mov
adc
dec
add
mov
in
aad
xchg
or
inc
fsubr
or
xor
cmp
add
repnz
mov
jecxz
push
mov
mov
cmp
mov
add
faddl
loopne
stc
iret
cwtl
cmpsb
andb
shlb
insl
lret
loop
cmp
jo
insb
or
sarb
mov
movsb
inc
and
jmp
ljmp
loopne
movsb
shl
push
cwtl
mov
movsb
pusha
and
or
add
jne
addb
rol
movsb
pusha
loopne
dec
in
test
xorb
sahf
and
dec
push
inc
rcrb
int3
arpl
rclb
push
popa
int
aaa
push
inc
jp
je
and
xorb
test
and
add
cmpsb
loopne
cwtl
pop
xchg
pusha
cld
hlt
pop
mov
inc
scas
loopne
jns
jbe
and
jp
fsubl
fdivrp
int3
sbb
cmpsl
mov
fwait
mov
add
mov
outsl
out
cmpsb
add
inc
add
rol
lock
lret
and
dec
sub
divb
shrb
inc
shrb
dec
sbb
pusha
dec
fdivr
mov
pop
cld
push
inc
pop
jmp
xchg
adc
ja
xchg
mov
leave
popa
and
add
repz
mov
sub
rol
add
rcrb
imul
dec
sbb
movaps
cs
cmpb
adc
loopne
and
and
inc
mov
lods
mov
insl
push
mov
sub
jno
push
jnp
ret
cmc
shrb
and
ret
sarb
fistps
pop
sub
shlb
cmp
jb
call
dec
sbb
pop
lods
or
and
test
stos
add
in
sbb
andb
sub
jne
pop
pop
and
add
mov
imul
loopne
dec
pop
addr16
fildl
out
and
xchg
sbb
jns
gs
sbb
loop
inc
mov
mov
dec
shl
mov
add
mov
loopne
sbb
lahf
insb
data16
add
lahf
mov
daa
add
fisttps
insb
ret
cmp
mov
push
loopne
pop
fimuls
loopne
mov
das
ja
and
addb
add
xchg
cmp
pop
sub
xchg
outsl
mov
loope
aam
add
out
cmp
jle
pusha
js
loopne
mov
clc
imul
push
lahf
and
add
push
inc
mov
das
out
fcomps
mov
inc
xchg
mov
inc
ljmp
loopne
xchg
pop
dec
xlat
fs
mov
inc
scas
jmp
addr16
sbb
pextrw
gs
and
push
or
lahf
nop
and
into
fwait
in
test
sub
push
dec
dec
ss
imul
fstpt
in
add
mov
dec
and
add
lock
daa
loop
aad
das
fadd
notl
adc
sub
adc
popa
push
imul
mov
insb
cmp
shlb
pusha
and
js
inc
add
and
jo
sbb
cmp
xor
pop
jmp
xor
out
mov
cmc
inc
push
sbb
cmp
stc
repnz
lods
inc
ret
mov
pusha
pusha
repnz
jno
andb
je
bound
push
shl
std
sahf
repz
mov
pusha
adc
test
mov
sub
out
daa
pop
lods
and
inc
and
add
push
push
adc
jmp
xor
pusha
add
insl
sub
imul
repnz
pusha
pusha
add
xchg
sub
sbb
cmpsl
or
outsl
mov
mov
lret
pop
jns
and
ror
andb
pop
subl
mov
mov
lcall
xchg
popa
mov
neg
inc
sub
xor
fs
inc
xchg
xor
adc
into
cli
cs
pusha
cmp
pop
sbb
js
movsb
rolb
rclb
sar
mov
outsl
mov
addb
hlt
adc
lret
push
mov
jge
ret
add
xchg
arpl
add
fsubp
add
adc
test
inc
sarb
and
mov
mov
rclb
mov
shrb
stc
mov
mov
aaa
jbe
and
jl
cmc
xor
nop
fsts
add
mov
js
inc
pusha
fsubrl
lret
jnp
loope
sub
shl
pop
shl
int
pusha
pusha
lods
mov
mov
add
xor
jbe
shl
arpl
out
dec
les
mov
pop
sub
cmp
stos
addb
ret
lret
and
mov
cmpsl
lret
imul
xor
imul
mov
test
xor
mov
sub
mov
adc
movsb
inc
adcb
add
loop
mov
aad
hlt
push
insl
aam
inc
xor
repz
jp
jp
mov
ret
jp
dec
pop
repnz
stos
lret
bound
mov
scas
rolb
sarl
inc
rclb
pop
jae
call
in
jmp
dec
adc
out
dec
add
shrb
and
bt
push
add
scas
shl
flds
movsl
ss
rcrl
and
dec
push
out
lcall
dec
or
and
outsb
out
test
mov
and
fwait
loop
xor
nop
repz
and
ss
dec
addr16
lret
xchg
outsl
xlat
inc
xchg
mov
push
jle
mov
add
rcrb
dec
dec
or
rolb
jp
pop
push
out
sub
lret
rolb
rolb
jl
popa
stos
pusha
mov
arpl
insl
or
add
popa
std
sub
cmpsl
xchg
dec
mov
subb
pop
out
mov
sbbb
mov
test
xorb
pusha
mov
and
jecxz
insl
pop
roll
inc
jno
addb
mov
out
std
shlb
inc
mov
ja
stos
add
push
enter
aaa
and
stos
and
pop
in
lods
insl
push
pop
xchg
fmul
cmpsb
pusha
add
lcall
push
mov
callw
leave
rclb
push
push
adc
pusha
pusha
pusha
mov
ret
and
mov
sti
push
and
sub
lds
push
repz
push
adc
mov
push
hlt
jmp
aas
sbb
mov
lods
andb
stc
cmp
mov
call
mov
xchg
cmp
dec
iret
int3
jg
mov
sarb
mov
jge
rolb
lret
jae
imul
andb
andb
cmc
and
add
xchg
pushf
mov
subb
xor
push
lds
add
loopne
shll
mov
bound
jo
js
loopne
mov
dec
jae
or
je
adc
ds
xchg
xor
adc
mov
shlb
add
xchg
xor
mov
sbb
sbb
cmp
ja
shlb
inc
pop
adc
mov
iret
scas
and
jnp
xor
and
mov
mov
xchg
dec
lret
or
rorb
out
paddw
stc
shll
pop
es
loopne
and
imul
lahf
mov
movsb
mov
adc
add
rcrb
cmp
xor
daa
pop
pop
jo
and
and
cmp
add
pop
jmp
push
xchg
mov
loopne
cld
mov
mov
xor
xchg
cmp
mov
xlat
ljmp
mov
addr16
and
je
pusha
inc
pushf
adc
pushf
pop
mov
out
rorb
rol
xchg
das
cwtl
leave
pop
push
popf
int
ret
in
xor
sbb
push
and
and
add
cli
das
dec
pop
sub
pusha
mov
jmp
addb
xor
mov
in
pop
pop
cwtl
mul
jnp
jae
loopne
add
arpl
xor
cwtl
sub
and
inc
incb
cmp
icebp
loop
scas
mov
imull
inc
mov
mov
sbb
sti
jg
xchg
in
ds
add
inc
rorb
mov
mov
fstl
pop
adc
outsb
pop
and
hlt
lahf
mov
popf
loopne
push
cmp
or
subl
pop
sub
rclb
and
pusha
push
out
fwait
push
mov
les
pop
dec
cwtl
pop
mov
mov
inc
lods
push
adc
stc
aas
jo
jle
adc
or
subb
pushf
adc
push
push
rolb
inc
sti
pop
sbb
cmp
pop
flds
and
repz
jp
xchg
outsb
xchg
cmp
and
jle
rol
pop
fnstenv
fimull
iret
add
dec
mov
or
pusha
ds
and
mov
cld
jbe
inc
sbb
loop
xor
shlb
fisubs
push
loopne
push
add
pop
aaa
addl
pop
mov
aaa
inc
test
mov
data16
insb
push
in
cmp
mov
inc
push
push
popf
flds
cmpsl
adc
stc
hlt
push
shlb
scas
dec
lock
jbe
cld
les
pop
inc
or
shrb
add
inc
cmp
mov
cmp
testb
or
rolb
inc
push
scas
loope
adc
repnz
jle
mov
bnd
rolb
ss
jp
jo
shrb
cwtl
sbb
dec
mov
shlb
lret
rclb
and
sub
mov
mov
sbb
pusha
sarb
cli
adc
sar
hlt
dec
out
test
cwtl
add
jae
mov
sbb
rol
jnp
adc
pusha
mov
inc
lret
fmuls
rorb
test
cwtl
rolb
xchg
add
add
leave
jbe
aad
andl
xchg
loop
out
sub
cmp
or
shrb
nop
sub
loopne
inc
xor
and
mov
sahf
pop
incl
and
push
lds
and
inc
icebp
xor
mov
cmp
cwtl
shlb
fisttpll
jl
sarl
pop
pop
mov
shl
xor
adc
jp
push
jl
and
pop
pop
dec
lds
test
dec
js
loopne
cltd
jle
dec
xchg
dec
xchg
ficompl
mov
cmp
mov
in
arpl
mov
bound
jae
cmp
out
mov
shrb
loope
push
push
pop
aaa
jo
int3
jo
push
lods
addb
mov
loopne
adc
sbb
adc
adc
pop
add
fnsave
jns
adc
push
jmp
andb
sbb
mov
popa
push
mov
jnp
jb
sbb
and
pusha
jb
es
shll
pusha
adcb
aaa
pop
mov
movsb
shlb
inc
rorb
and
rcll
mov
inc
bound
cmp
adc
pop
cmp
pusha
adc
inc
jecxz
push
ret
and
mov
inc
addr16
cmp
out
fnstenv
sub
aas
aam
je
mov
xchg
movsb
inc
pusha
movsl
lock
mov
or
shrb
fisubrl
in
lods
xchg
add
rolb
inc
inc
ljmp
inc
xorl
ror
xor
loopne
insb
aad
jle
mov
mov
pop
jl
test
push
lcall
pop
mov
add
shlb
mov
and
add
mov
addb
leave
cmp
jo
mov
dec
loopne
add
aam
ljmp
and
int3
fwait
sbb
push
sti
popl
fbstp
inc
lret
adc
adc
arpl
cmp
dec
in
push
xor
out
fists
jne
mov
pop
es
and
rclb
das
pop
and
and
adc
adc
rolb
iret
mov
fsubp
mov
mov
jecxz
loopne
dec
add
ret
mov
fbld
rolb
fisubl
jp
xchg
inc
roll
jno
or
mov
push
loopne
xor
mov
loop
pop
xchg
shl
xchg
mov
loopne
stc
push
adc
jno
xor
out
pop
pop
dec
xchg
pop
jae
out
inc
js
inc
inc
pop
inc
popa
fsubrp
dec
in
pop
jne
mov
xchg
rcrl
addb
dec
sbb
push
xchg
fisttpl
andb
mov
or
xorb
pop
push
cs
loopne
mov
mov
in
lods
mov
enter
stos
and
xor
add
addb
or
pusha
nop
insb
xor
sub
cmp
nop
movsb
pusha
mov
fstp
sbb
push
leave
adc
jecxz
fists
iret
sti
xor
aas
mov
mov
das
mov
inc
dec
stos
add
sbb
pusha
add
ret
xchg
sbb
sub
inc
fiaddl
or
sub
add
out
jmp
jb
loopne
dec
icebp
fiadds
pop
test
inc
lock
repnz
int
dec
xchg
jno
mov
iret
jae
sub
rorb
inc
aam
cmp
test
and
adc
out
fdivrs
inc
int3
addb
stos
popa
cmp
adc
mov
out
test
sub
pusha
xor
loopne
insl
sbb
xchg
daa
mov
cwtl
add
test
dec
and
pusha
or
lret
outsb
mov
fstpl
pop
mov
mov
lods
inc
int
andb
and
loopne,pn
push
dec
cmp
push
pop
lock
xchg
mov
inc
jo
xor
pop
xor
cmp
loopne
ds
addb
and
pusha
call
jne
jno
mov
fs
jo
xor
out
stos
push
dec
in
inc
mov
aas
mov
stos
rol
sub
sbb
subl
lret
and
sbb
and
adc
mov
test
shlb
scas
mov
mov
inc
pusha
xor
sti
dec
or
push
inc
pop
insb
xchg
cmpsb
pusha
pusha
xor
lea
mov
inc
sbb
lret
notl
pusha
loopne
inc
movsb
add
fistpl
add
addb
mov
add
aaa
mov
sbb
lods
call
dec
imul
test
inc
cli
outsb
fisubrl
cwtl
scas
pusha
loopne
cmp
xchg
imul
sti
mov
add
mov
mov
add
lea
stos
addr16
andb
cltd
pop
adc
or
mov
xor
push
outsl
fwait
or
or
inc
push
andb
pusha
adcb
adc
pusha
fwait
xchg
mov
sub
mov
loopne
mov
ss
lods
cli
mov
pusha
inc
ja
jo,pt
stos
mov
dec
scas
rolb
stos
xor
xor
andb
sbb
mov
testb
xor
mov
add
andb
daa
add
outsb
add
movsb
addb
or
sbb
sbb
jg
mov
cmp
pop
loop
pop
popa
bound
mov
loopne
scas
andb
pusha
add
lret
add
jns
cmp
xor
mov
fwait
aad
adc
jge
andb
mov
push
cmp
push
test
mov
loopne
pop
pop
in
loope
sbb
pop
dec
pop
data16
or
into
adc
shlb
and
sbb
inc
dec
out
fadds
imul
push
mov
dec
stos
fistl
stos
add
sti
stos
and
inc
xchg
aaa
outsb
jns
jo
icebp
scas
jb
call
xlat
stos
or
out
in
dec
sbb
xchg
lret
and
adcb
jg
mov
sub
mov
xchg
mov
and
orb
jbe
cmp
add
sbb
jo
popa
lea
jle
jno
pusha
loopne
les
outsb
faddp
outsl
pop
sbb
jmp
xchg
lret
loopne
mov
mov
rolb
pop
ret
loope
or
and
imul
sbb
mov
arpl
int
xor
xor
stos
rolb
jae
cmp
lods
adc
repz
fdivl
mov
xor
pop
lock
stos
inc
mov
push
mov
ret
inc
imul
shlb
xor
mov
add
mov
pop
push
and
loopne
jle
xchg
pop
add
jb
out
mov
or
rcrb
inc
and
loopne
ror
iret
push
scas
and
enter
push
add
push
adc
pop
and
imul
in
sahf
sti
pop
test
dec
xor
nop
shl
in
jnp
lods
or
jbe
mov
sub
in
pop
mov
cld
mov
add
mov
add
outsb
cltd
movsb
inc
sarb
loopne
shlb
in
rcll
mov
jo
mov
push
add
add
jmp
in
loopne
fs
cli
insl
push
enter
rol
movsb
inc
and
jg
mov
lods
pusha
pusha
add
shr
outsl
cmp
add
les
jbe
mov
push
inc
ss
pusha
sub
sbbb
xchg
mov
push
pusha
stos
mov
sub
or
inc
push
inc
rcr
ss
inc
call
mov
addb
popa
stos
pusha
adc
ss
push
andb
movsl
cmp
pop
mov
and
in
mov
pop
pusha
mov
push
add
inc
or
ror
clc
sbb
and
push
or
and
add
sub
lea
inc
cmp
sbbb
dec
pop
outsb
stos
rep
jnp
in
test
pop
mov
adc
mov
orl
addw
lahf
cs
add
popl
push
lahf
adc
adcl
mov
cwtl
jb
lahf
mov
mov
mov
fistl
in
mov
dec
fisubs
mov
add
dec
mov
test
shlb
notb
mov
xchg
lcall
cmp
xor
mov
add
lods
sub
mov
ds
push
repz
dec
xor
insl
or
ja
aam
sti
je
jno
or
gs
shll
mov
xorb
sbb
inc
inc
iret
dec
int
or
pusha
add
sub
shlb
int3
or
ss
lds
lods
inc
xorb
pusha
out
jbe
lret
leave
sub
rcrb
dec
dec
adc
add
mov
or
shl
loopne
lods
mov
out
and
rol
pop
lcall
xor
loopne
ret
subb
stos
inc
mov
cmp
add
pop
push
imul
push
inc
inc
mov
xor
pop
scas
fcoml
adc
loope
dec
inc
adc
xchg
lods
pop
push
fnsave
sbb
out
add
inc
sub
mov
pushw
mov
les
shrb
and
loopne
pop
lock
sarb
pop
stos
scas
adc
popa
lcall
mov
bnd
sub
sbb
jae
jl
arpl
rolb
jp
nop
cwtl
sbb
add
sub
into
pop
daa
in
insb
xor
pop
repz
sbbl
and
and
jns
icebp
hlt
fldt
mov
int
addb
repz
jecxz
push
mov
pop
cmpsb
pusha
inc
test
fdivp
int3
fwait
jecxz
inc
shr
mov
add
inc
xlat
enter
rorb
bound
pop
mov
inc
jg
pop
cmp
pusha
inc
mov
shlb
hlt
mov
pop
fists
roll
xor
adcl
cmp
shrl
shlb
lock
xor
and
fwait
xchg
out
jp
arpl
sub
dec
popa
frstor
mov
rcll
clc
adc
add
xor
rclb
popa
shlb
in
pop
xchg
sub
sarb
pop
popf
sub
loopne
cmc
sbb
filds
clc
push
cmc
rorb
lahf
jge
dec
mov
xchg
inc
add
sbb
movsl
andl
addb
mov
dec
mov
cmpb
and
adc
sar
mov
stc
ret
pop
and
int3
ficompl
push
dec
test
add
ja
mov
std
dec
ficomps
int3
xchg
cmp
jae
xor
in
pop
ss
pushl
loop
mov
lret
in
popf
inc
mov
pop
inc
nop
mov
in
addr16
xchg
adc
clc
jl
les
add
cld
mov
xor
popf
loopne
pusha
loopne
adc
xchg
cmp
adc
outsl
xchg
out
push
xchg
dec
sub
cmp
xchg
adc
jns
adc
sbb
stos
dec
cld
jl
ss
mov
mov
sarb
rolb
mov
jnp
fstl
hlt
mov
pusha
mov
sub
ljmp
jge
out
adc
fs
imul
insl
cld
adc
jle
into
mov
and
jno
or
mov
hlt
xchg
push
mov
push
pop
push
jp
mov
dec
es
cmp
mov
decb
arpl
xor
pop
xchg
lret
cmp
popf
add
loopne
inc
cmp
rolb
push
scas
mov
das
sti
outsb
adc
sub
hlt
add
and
pusha
loopne
add
pusha
data16
jb
xor
outsb
adc
std
push
xor
mov
mov
cmp
mov
imul
add
andb
enter
pop
aas
add
cmpb
cltd
inc
in
or
aad
inc
cmove
aas
xchg
cld
cltd
fisttps
pusha
add
and
add
into
push
cmpsl
cmc
adc
sub
popa
jl
andb
adc
or
daa
adc
inc
and
mov
mov
pusha
add
popf
sub
loopne
add
loopne
movb
add
mov
fiaddl
jns
scas
add
or
lret
lret
mov
repnz
in
rcrb
add
adc
sahf
daa
jmp
add
popf
stos
add
shlb
inc
sub
subb
inc
mov
pop
cmc
jnp
dec
popa
inc
addb
fsubrs
add
push
mov
mov
imul
cmp
leave
mov
ret
lcall
pop
pop
pop
xor
bound
loopne
push
in
es
adc
push
neg
inc
and
and
mov
ss
or
add
sarl
enter
xor
test
lea
inc
pusha
data16
mov
mov
lret
bound
jl
mov
and
dec
xchg
out
sub
shlb
aaa
ret
inc
ljmp
mov
in
dec
push
jmp
clc
mov
shll
dec
inc
std
out
ret
and
stos
rolb
rorl
push
dec
or
add
cmp
and
pusha
cmpl
shlb
sbb
popa
lret
add
pop
inc
push
clc
push
les
lea
xchg
scas
addb
add
int3
scas
inc
loopne
mulb
pusha
fdivl
test
inc
mov
jbe
test
and
inc
pop
mov
jecxz
das
pop
cmc
cmp
daa
nop
push
inc
and
add
cli
outsl
mov
loopne
xchg
ja
mov
mov
add
inc
and
aaa
pop
rcrl
jbe
into
cmp
cmpsb
pusha
pusha
fiadds
xor
mov
dec
or
mov
or
int
pusha
cmc
dec
fs
jns
inc
push
repnz
ljmp
imul
mov
shrb
aaa
nop
hlt
imul
outsb
pushf
cli
shl
rclb
out
outsb
add
adcb
sarb
pop
aas
cmp
add
inc
hlt
sbb
lds
xchg
jnp
mov
sahf
mov
dec
xlat
xor
and
add
les
insl
push
push
loopne
push
loopne
jmp
das
mov
xlat
roll
rolb
loopne
and
add
cmpsl
aas
sub
push
add
sub
sub
mov
fwait
or
sub
and
jmp
push
xchg
icebp
mov
shlb
test
andb
jb
mov
mov
hlt
sbb
inc
add
push
je
xor
xlat
jle
in
mov
pop
pop
sahf
and
and
cwtl
jl
pusha
loopne
mov
shlb
add
outsl
xor
cmp
and
addb
repz
out
lods
push
arpl
fwait
push
inc
cmpb
inc
dec
scas
pusha
pusha
sub
mov
in
jl
jg
xor
test
int3
xor
xchg
add
int
insl
lret
dec
test
jecxz
jb
lcall
enter
fisubrl
and
ret
xchg
ja
rol
mov
mov
lcall
dec
fistpll
pusha
loopne
ja
mov
add
pusha
cmp
pop
fldcw
adc
mov
jnp
xchg
mov
mov
adc
insl
addb
and
pusha
out
mov
adc
jecxz
into
loopne
pusha
mov
jne
repz
push
lret
jo
or
add
push
mov
cmc
jnp
pop
test
pusha
add
pop
cwtl
sbb
aaa
and
insb
arpl
addb
and
movsb
and
call
jecxz
inc
loopne
aam
dec
xlat
mov
in
outsb
addb
add
pop
popa
push
insb
lret
mov
ljmp
xchg
outsl
dec
cmp
addl
cmp
sbb
into
cmpsb
add
out
sbb
mov
cmp
cwtl
mov
loopne
out
and
pusha
cmpb
mov
mov
nop
jp
aas
lahf
ret
xlat
push
mov
cmp
and
rolb
test
add
add
pop
adc
sbb
or
loopne
into
pop
ret
adc
lcall
shrb
fs
fimull
mov
test
xorb
out
mov
into
ja
inc
mov
inc
aad
loope
and
and
mov
mov
outsb
mov
stos
mov
dec
xchg
roll
mov
pop
clc
shrb
mov
arpl
mov
mov
sarb
jae
pop
or
sbbb
inc
shl
sbb
shll
les
jle
fwait
cmpsb
pusha
mov
popf
jae
cld
mov
icebp
cmpsb
andb
pop
jnp
shll
push
loopne,pn
sub
mov
mov
pop
lods
pusha
loopne
sub
addr16
hlt
mov
sbb
mov
xchg
jp
fs
pop
jb
adc
shlb
movsl
addb
mov
cmp
rcll
pop
xor
adc
ret
popa
lea
inc
mov
out
cwtl
daa
adc
shll
push
ret
mov
mov
lret
arpl
scas
and
frstor
cmp
mov
in
mov
sub
repnz
or
fisubrs
mov
rolb
loop
loopne
inc
cmpsl
inc
lea
subl
and
push
cld
and
test
and
add
sub
mov
fs
mov
pop
aas
movsb
mov
addb
loopne
jmp
sub
repz
data16
hlt
pop
dec
lret
shlb
mov
out
pusha
pusha
add
jne
bts
cld
mov
xorb
or
add
add
aam
pusha
loopne
jecxz
pushf
in
movsb
mov
leave
sarl
sbb
push
mov
mov
jge
cmp
mov
push
xchg
cltd
xor
or
repz
sbb
push
inc
inc
jecxz
mov
rolb
sbb
mov
int3
inc
jb
pop
lret
dec
mov
rorl
pusha
add
test
dec
divb
and
outsb
jno
cmp
mov
and
pusha
cld
fiaddl
pop
pushf
jp
dec
pushl
out
idivb
fists
xor
aaa
xlat
cmp
in
add
mov
popa
mov
mov
scas
loopne
jecxz
bound
leave
jl
andb
push
add
aam
push
in
adc
test
add
and
pusha
loopne
push
mov
and
inc
addb
push
test
scas
loopne
sbb
adc
icebp
jnp
and
mov
push
sbb
adc
lock
andb
cmp
sub
and
rorb
shr
mov
andb
add
test
sbbb
loopne
pop
xlat
loope
push
add
sub
shrb
inc
mov
fbld
and
cwtl
pop
aaa
jnp
stc
int
adc
std
sbb
flds
and
pop
insb
push
rolb
loopne
dec
push
rolb
or
or
mov
pusha
lret
jl
xor
dec
insb
xor
xchg
adc
pop
rorb
pusha
sar
adc
inc
xchg
sbb
sahf
pop
mov
stos
jg
and
mov
scas
loopne
cmp
pusha
jne
pushf
bound
jg
inc
push
mov
jns
mov
add
add
pop
cmp
iret
adc
xor
cmp
xchg
xchg
push
push
push
mov
push
pop
jne
loop
stos
addl
or
rcl
jge
mov
xor
mov
mov
cmovne
addr16
std
repz
test
and
adcb
inc
pusha
push
mov
ror
mov
jmp
ljmp
nop
jp
ds
pop
jb
inc
mov
and
mov
xchg
mov
das
jne
sbb
push
pop
xchg
pusha
pop
jmp
inc
dec
fisttps
fmulp
and
jae
jl
adc
xor
insl
ja
insb
data16
rcr
sub
shlb
push
pusha
pusha
and
mov
jns
pop
dec
mov
in
lock
inc
movsl
popf
pop
int
inc
fldt
xchg
sub
and
fwait
outsl
enter
jo
add
mov
sarl
push
call
test
shr
add
loopne
inc
inc
push
test
inc
test
sbb
rcrb
cmpsb
rolb
or
movsl
shr
mov
add
loopne
lret
ds
sbb
and
xchg
mov
jnp
mov
popl
mov
imul
inc
pusha
jno
push
push
fstl
xchg
lock
pop
cs
pusha
dec
jo
cmp
fdivr
and
loopne
cmp
loopne
sub
jae
mov
add
loopne
notl
push
add
cld
add
and
lret
leave
push
popa
dec
hlt
add
inc
les
out
pop
xor
andb
and
addb
inc
mov
dec
dec
sub
jmp
add
aaa
push
sarl
jecxz
test
jg
pusha
xor
and
mov
or
inc
inc
mov
cwtl
outsb
insl
mov
stc
push
outsb
mov
push
test
xor
jg
andb
push
and
sbb
add
inc
inc
xor
dec
mov
ss
sub
or
insl
inc
daa
xchg
mov
mov
loopne
loope
push
jo
ja
ret
mov
and
push
push
insl
and
mov
rolb
je
push
xor
lods
add
in
xchg
xchg
repz
mov
dec
sbb
in
movsb
shlb
pop
fs
fwait
and
loopne
inc
pusha
sub
and
push
std
nop
jge
add
jne
mov
pop
push
xor
cmc
sahf
xor
pusha
loopne
and
loopne
movsb
add
iret
hlt
pop
das
dec
dec
mov
or
pusha
adc
invd
inc
or
addb
pusha
push
pop
jb
mov
cmp
pop
rorl
sub
inc
dec
inc
sbb
xchg
pop
xchg
insb
fdivs
dec
sbb
mov
insb
jg
or
mov
cltd
dec
sbb
in
or
out
cwtl
or
inc
aas
pminub
out
inc
jo
cli
and
or
and
xor
mov
in
add
loopne
mov
and
loopne
into
sbb
sub
loopne
loop
or
rclb
xor
andb
xchg
sub
cwtl
xchg
mov
loopne
xchg
les
xor
adc
sbb
lods
and
and
sub
xchg
adc
or
loopne
cld
test
aad
xor
es
rorb
mulb
dec
cmp
out
add
push
rolb
addb
pop
scas
mov
sarb
outsb
mov
push
in
xchg
shl
inc
push
rcll
mov
dec
jg
pusha
subb
fidivrs
and
andb
xorb
push
movsb
loopne
xor
fisttpll
and
loopne
xchg
je
in
cmp
xchg
adc
cmc
mov
inc
add
loopne
fcoml
fxtract
add
rcrl
add
shl
int3
jns
mov
xchg
or
mov
mov
scas
and
or
mov
dec
add
xchg
frstor
xor
lods
andb
negl
idivb
sub
lods
movsb
shlb
jmp
pusha
loopne
cld
mov
ret
out
in
mov
shlb
mov
jle
aas
popl
jecxz
sbb
mov
in
push
les
and
test
daa
test
mov
fcoml
xchg
dec
push
xlat
icebp
pop
xchg
sbb
cmpsl
mov
push
stc
or
and
add
dec
cmp
pusha
mov
push
xor
mov
xchg
shlb
mov
or
pusha
in
je
in
ret
pop
jno
jge
dec
push
shlb
inc
adc
fs
add
in
cmp
sbb
mov
add
mov
cmp
js
outsl
mov
cld
test
mov
jge
add
cmp
pusha
rorb
mov
add
pusha
mov
mov
gs
xor
jo
mov
fucom
inc
jmp
and
mov
mov
inc
lds
dec
popa
push
mov
cmp
pop
cmp
pusha
adc
and
inc
add
cmpsb
add
mov
mov
mov
rcl
push
cltd
stos
mov
xor
movsb
loopne
insb
loope
aad
je
clc
jg
rolb
addl
xor
mov
loopne
inc
inc
int3
mov
jae
jge
mov
pusha
and
setno
pop
inc
mov
shlb
rcrb
mov
ja
mov
sbb
movsb
shl
addb
sub
add
mov
xchg
inc
dec
imul
cmp
test
rclb
mulb
insb
shll
aaa
dec
cmc
and
imul
sub
pusha
xchg
sub
mov
inc
repz
push
xor
dec
jo
add
int3
pop
jmp
jl
pop
xchg
stc
aas
roll
add
jmp
mov
test
cmp
outsl
inc
pop
jp
repnz
sub
pusha
rcr
cltd
inc
mov
cltd
adc
or
inc
xchg
mov
inc
and
rorb
inc
add
loopne
add
dec
cmpsl
jns
xor
addb
orl
insl
fsubrs
into
insb
push
notb
fistpll
js
addb
shlb
and
xor
imul
push
int3
mov
add
add
adc
dec
mov
ja
and
pop
idivb
jne
xchg
mov
add
das
fwait
movsb
andb
push
mov
pop
push
jb
xor
and
inc
and
leave
pushw
or
mov
xchg
mov
inc
cmpsb
loopne
mov
and
mov
mov
lock
add
shll
pusha
rorb
mov
and
push
and
and
push
mov
add
call
and
jae
sbb
repz
loopne
mov
cmpsl
mov
outsl
call
lock
test
pusha
pop
orl
inc
add
sar
push
inc
scas
rolb
in
pop
jo
std
or
jnp
jg
dec
add
jmp
mov
addb
aad
outsb
test
sbbb
stos
lds
movsl
daa
adc
pop
pop
fistl
push
stos
mov
pusha
jb
lods
add
pop
mov
sahf
and
mov
andb
ficoml
cli
shlb
dec
cld
loop
jne
out
imul
andb
push
addb
shl
and
iret
pop
test
inc
inc
rcll
push
jp
or
mov
jnp
or
rcrb
sub
add
xor
daa
test
cmp
push
mov
sahf
call
jp
and
inc
test
jo
into
lret
into
jb
cwtl
arpl
add
mov
dec
scas
inc
in
push
sbb
add
xor
loopne
es
add
leave
adc
push
mov
enter
and
jns
in
sbb
jnp
rolb
jmp
fstps
dec
sub
bnd
mov
cmpsb
inc
inc
cld
addr16
out
rorb
cmp
xchg
lahf
stc
xchg
scas
into
stos
jp
and
and
int
mov
ljmp
xlat
xor
cwtl
xchg
aaa
dec
push
cmp
movl
or
fstps
jnp
xchg
call
mov
mov
int3
pop
stc
fadd
mov
shr
add
cmpb
imul
jb
dec
arpl
dec
lahf
mov
or
lods
mov
clc
sbb
add
add
loopne
inc
mov
jae
lcall
xchg
jae
dec
mov
push
outsl
adc
test
mov
inc
adc
mov
cmp
add
add
and
sub
movsl
jge
cld
loopne
and
mov
push
cltd
xchg
rclb
daa
lcall
rorb
add
pusha
popa
inc
xchg
mov
lods
loopne
movsl
movsl
pusha
pop
push
inc
aaa
xor
notb
and
sarb
scas
imul
addb
out
aaa
sbb
push
fistl
or
subb
ljmp
mov
insb
mov
jmp
or
mov
adc
sbb
into
push
sub
xchg
clc
mov
add
add
mov
xor
mov
out
mov
inc
cld
push
mov
and
xchg
aam
in
in
fbld
fstpt
pop
aam
pop
andb
ret
xor
mov
movsb
loopne
pop
dec
inc
sub
inc
rcr
inc
sbbb
pop
pop
mov
icebp
test
push
dec
in
or
shrb
bound
daa
dec
xor
cwtl
mov
lret
mov
cli
popa
test
and
sub
addb
add
addb
sti
pop
dec
mov
nop
stos
rol
pop
pop
jbe
pop
adc
iret
add
and
pusha
add
sub
add
sbb
push
mov
xor
daa
test
cmp
fwait
daa
lock
outsl
pushl
jle
and
jp
xor
adc
cmpsl
or
daa
xor
data16
pop
hlt
adc
stc
dec
fcompl
shl
cld
movsl
push
push
pusha
loopne
push
rolb
into
add
xchg
xchg
mov
shl
mov
cmp
andb
sub
xlat
mov
mov
and
push
push
lds
or
imul
lcall
fldt
and
pop
mov
xchg
jbe
pop
aaa
add
sti
out
adc
inc
loopne
jp
push
and
loopne
push
into
les
inc
push
xchg
dec
adc
mov
aad
or
inc
add
ljmp
rclb
push
add
cmp
shlb
lcall
mov
and
push
add
out
imul
jl
mul
mov
xchg
int
sbb
pop
pop
push
arpl
cmpsb
pusha
mov
push
and
loop
push
rcr
sub
orb
loope
and
push
cmp
lahf
and
inc
adc
xor
andb
loopne
stos
pusha
inc
mov
pusha
pushf
hlt
xor
and
pop
dec
lahf
hlt
push
jmp
mov
mov
addb
enter
push
leave
in
lods
andb
loopne
ret
inc
cmpsb
mov
jmp
add
jge
jp
mov
stc
push
shlb
sub
in
dec
test
repz
xor
imul
lods
mov
and
cwtl
push
inc
pop
xchg
adc
in
pop
sbb
mov
mov
inc
loopne
push
std
into
sub
push
enter
and
inc
inc
mov
and
and
mov
mov
inc
mov
xchg
data16
dec
out
loopne
dec
ret
in
pop
add
and
mov
jl
loopne
es
sub
int3
rcrl
mov
loopne
dec
sub
or
scas
and
mov
mov
cltd
push
xlat
cmp
cltd
outsl
lock
dec
adc
xchg
pop
cmp
mov
imul
scas
pusha
shlb
je
jnp
sub
inc
lock
lahf
xchg
cld
popa
sbb
aad
mov
adc
out
test
loopne
lods
lods
pop
push
mov
add
cmp
mov
pusha
jmp
repz
into
popf
daa
idivl
inc
push
pusha
and
adc
pop
add
sar
push
mov
mov
fwait
int
faddl
outsl
dec
dec
fisubs
mov
adc
jmp
fwait
lret
dec
or
sarb
insl
andb
or
pusha
pusha
test
pusha
call
dec
repnz
push
and
mov
loopne
mov
jl
loopne
fistpl
les
add
pop
test
dec
dec
je
mov
arpl
add
out
mov
lret
or
and
rolb
or
and
fisubs
xchg
cmp
pusha
andb
add
pop
shl
pushf
sub
andb
cltd
imul
jns
sub
addb
cmovge
jg,pt
popf
out
and
aad
cmpsl
inc
adc
or
sarb
inc
leave
mov
out
mov
orb
ds
les
and
addb
or
inc
inc
fdivl
and
orb
pusha
jne
add
negl
inc
or
pusha
add
shlb
clc
lret
lcall
aas
xchg
dec
pusha
popf
jne
mov
pop
in
mov
pop
add
cmpb
cmc
adc
test
jle
pusha
incl
loop
pusha
aaa
popf
fisubrl
imul
aas
fistpl
jbe
or
inc
mov
inc
xor
rol
xor
xor
add
pusha
sbb
pusha
shlb
in
leave
rorb
jp
stos
andb
mov
add
and
pusha
inc
sub
mov
add
loopne
bound
inc
inc
fidivl
xor
sbbl
std
pop
mov
xor
jmp
add
and
jge
pop
jl
inc
dec
push
jbe
ret
lods
andb
xor
loopne
xor
jb
push
shlb
dec
lahf
rclb
test
cmc
mov
cmp
cwtl
jl
adc
pop
pop
shll
out
pop
xchg
lret
ss
inc
in
sub
inc
mov
adc
mov
add
repz
shlb
pusha
add
inc
xchg
cmpl
aaa
movsb
addb
add
cmp
sub
pop
inc
pop
add
push
jg
inc
loopne
mov
mov
jp
xchg
cltd
push
dec
cmc
push
clc
push
out
idivb
addr16
add
and
pop
add
loopne
pushf
je
je
call
pop
mov
jb
xchg
mov
insl
and
or
mov
scas
mov
cmp
out
gs
sub
and
lcall
addr16
cli
addl
rcrb
jo
add
jmp
push
mov
loop
jb
mov
or
sbb
ds
xchg
ljmp
pusha
loopne
pusha
mov
xor
cltd
pop
and
mov
adc
xor
mov
add
lods
and
jl
jnp
adc
jg
pop
jno
cmp
stos
sbb
repz
xchg
mov
mov
lret
adc
mov
add
addr16
lock
shlb
lret
inc
les
aaa
pop
stc
das
mov
pop
push
mov
jne
mov
xorb
pusha
fidivl
loopne
jecxz
mov
into
andb
addr16
shl
in
cwtl
dec
imul
pop
subl
mov
andb
decl
pusha
insl
clc
cltd
or
add
mov
add
nop
xlat
out
xchg
daa
test
loopne
jl
fists
icebp
cs
or
addb
repnz
pop
jb
in
sbb
rcll
call
or
and
sbb
mov
push
cmpsl
sbb
aad
add
loopne
mov
rol
stos
icebp
jb
loopne
insb
jmp
dec
push
pusha
loopne
xchg
xchg
add
flds
stos
andb
mov
pushf
mov
sbb
leave
push
sbb
xchg
and
pusha
fs
pop
insb
xchg
dec
dec
adc
pushf
cmpsl
cli
jo
lods
mov
inc
loopne
loopne
mov
dec
into
xor
fwait
ljmp
add
imul
pusha
rclb
mov
or
inc
push
pop
mov
xlat
daa
outsb
push
rclb
or
bswap
xchg
add
addb
cmp
div
cmpsl
pop
dec
cli
xchg
or
sub
inc
mov
or
push
les
xchg
mov
mov
mov
mov
jmp
pusha
inc
sub
insb
daa
mov
icebp
push
pop
in
xchg
inc
in
mov
adc
add
dec
nop
adc
pop
adc
add
dec
out
fcomip
ja
jne
cmp
shl
andb
inc
mov
loopne
iret
popf
mov
addb
cmc
shlb
mov
dec
mov
movsb
pusha
mov
add
inc
enter
pop
sbb
xchg
xor
pop
loopne
pushf
int3
or
shr
ljmp
cld
mov
inc
push
shrl
mov
mov
mov
mov
xor
nop
jg
mov
shlb
fisubl
in
mov
xchg
mov
push
icebp
mov
bswap
push
andb
push
loopne
pusha
mov
mov
xor
pop
stc
cli
dec
inc
les
pop
and
gs
dec
inc
inc
push
test
jo
lds
inc
fldl
arpl
test
add
cmpl
mov
scas
pusha
add
xor
sub
and
pop
das
pop
pusha
and
inc
jno
mov
lds
insb
inc
xor
jle
inc
pusha
xchg
mov
and
push
lods
pusha
pusha
or
dec
pushf
sarl
mov
stc
out
ss
cli
fdivl
int3
xor
movsl
mov
xor
hlt
lcall
cwtl
iret
mov
loop
shl
pusha
mov
pop
pop
fiadds
inc
inc
sub
loopne
dec
mov
adc
mul
xchg
or
shrb
add
mov
xor
add
add
or
jno
jne
hlt
pop
bound
loopne
data16
test
rol
addb
hlt
lea
daa
xor
pushf
or
arpl
jmp
sbb
adc
pusha
ror
pushf
and
inc
sub
pusha
inc
hlt
dec
fimull
push
aad
addb
and
cli
int
jl
nop
pop
ficoms
rclb
bound
add
push
mov
iret
inc
xchg
sahf
jle,pt
out
xchg
icebp
xor
pop
int
xor
inc
inc
hlt
jg
aaa
fidivrs
jecxz
dec
mov
std
inc
ljmp
rolb
shlb
adc
and
xorb
in
imul
insl
add
sub
and
loopne
mov
pop
and
loopne
shl
mov
inc
cwtl
out
lods
shlb
inc
mov
adc
inc
stos
divb
call
int3
es
lea
push
adc
into
mov
push
add
subb
jmp
mov
repnz
mov
push
scas
and
cmp
cmp
out
dec
lret
mov
add
pop
cli
aad
dec
mov
pusha
cmp
sarl
or
adc
add
test
add
and
pop
cmpsb
mov
mov
and
aas
cmp
loopne
aam
andb
cmp
aas
movsb
and
and
push
mov
stos
rolb
in
shll
in
adc
inc
das
and
rol
or
push
lret
gs
xor
xchg
and
loopne
xor
shlb
test
loopne
test
pusha
aas
cmp
dec
push
fdivr
popw
push
pop
outsl
sub
rolb
xor
add
dec
mov
outsl
cmpsb
mov
add
and
mov
loop
sbb
into
out
xchg
mov
and
cmp
xchg
adc
jp
inc
pop
out
inc
repnz
pop
dec
xor
ljmp
loopne
pop
jg
push
test
loopne
jnp
cld
mov
adc
and
int
inc
push
pusha
add
push
dec
jbe
lds
stc
push
or
pop
popa
js
sbb
call
std
lods
addb
mov
dec
aad
add
repnz
scas
arpl
cmp
in
movsl
mov
or
sub
addr16
aad
sbb
mov
pusha
pop
xchg
or
and
xor
sub
pusha
or
fcom
and
loopne
and
loopne
pop
inc
push
push
hlt
or
inc
stos
pusha
add
xlat
ficoml
and
add
adc
inc
inc
and
loopne
xor
mov
sub
add
adc
xchg
jbe
xchg
fsubrl
jmp
mov
in
add
pusha
loopne
js
xchg
sbb
fdivr
inc
mov
into
lcall
pop
add
or
add
mov
nop
mov
cltd
int3
push
sbb
sub
push
and
cwtl
sbbl
sti
inc
cmp
xor
cli
popf
or
rclb
push
push
loopne
xor
shll
mov
stos
inc
inc
pop
adc
add
sub
and
fwait
and
lahf
adc
jg
js
cs
loopne
cs
inc
and
nop
jg
xchg
pop
xor
and
inc
lds
mov
or
orb
stc
insl
fldcw
movb
pop
stc
pop
mov
mov
cmp
inc
mov
dec
sbb
dec
mov
adc
inc
mov
enter
mov
test
hlt
xchg
lods
popa
mov
add
adc
cwtl
fildll
inc
out
sub
cmp
add
rcrl
lock
ror
pop
inc
cmpsb
mov
add
hlt
fisttpl
loopne
sti
inc
in
loopne
adc
loopne
bound
dec
or
pop
lret
ja
shlb
and
fidivs
cld
lret
add
shl
xchg
lcall
and
addb
or
pusha
push
in
icebp
fldenv
lock
mov
iret
negl
rcll
cmp
imul
hlt
jb
mov
idivb
add
xchg
dec
xor
inc
aaa
fcmove
adc
vorps
mov
and
stos
in
mov
inc
loopne
mov
iret
xor
test
loopne
negl
mov
shll
pusha
cs
dec
sahf
ret
add
mov
mov
or
inc
cmp
cmp
sbb
mov
jecxz
lods
and
jmp
rcl
insb
repz
int
pop
mov
faddp
int3
sub
add
insl
sub
cld
cmpsb
andb
andb
add
rol
and
and
mov
mov
andb
cld
sub
push
cltd
cmp
das
rcll
arpl
shlb
cmp
inc
sbb
and
or
rorb
rclb
pusha
rcr
jo
mov
inc
xor
and
jle
arpl
test
loopne
notrack
ja
adc
std
cmp
inc
xchg
loopne
mov
subl
into
mov
push
inc
xlat
sub
jo
rorl
inc
rolb
mov
mov
ret
pop
mov
jnp
outsl
add
subb
lods
addb
sub
scas
pusha
pusha
jb
je
xchg
nop
bound
and
and
pop
push
out
sub
add
sahf
adc
repz
leave
push
cwtl
xor
nop
xchg
push
testb
dec
imul
pop
addr16
add
xor
inc
lds
sub
cmp
pusha
pusha
and
adc
mov
mov
popa
aad
dec
or
jnp
inc
inc
jp
xlat
adc
push
in
dec
mov
add
mov
hlt
sbb
or
push
inc
loopne
stos
jl
rolb
mov
and
cmc
sbb
test
mov
lods
and
xchg
aam
push
shl
insb
push
iret
mov
pop
mov
jne
pop
repnz
sub
sbbb
add
jmp
stos
pusha
mov
lods
in
sti
xchg
in
div
fsubrs
out
cwtl
test
filds
testb
push
std
scas
and
movsl
shlb
lods
test
sarb
data16
jle
xchg
fisubs
inc
dec
lods
and
push
push
mov
jno
and
enter
ret
cwtl
cmp
loopne
out
fwait
imul
add
mov
andb
pusha
xor
movswl
inc
sub
loopne
fbld
sub
mov
mov
ficomps
addb
movsl
and
add
pop
push
ficoml
lock
shr
stos
imul
fnstcw
pop
ljmp
push
aam
addb
loope
lcall
cmpsl
jns
push
ds
mov
inc
nop
pop
pop
cld
sbb
pusha
jle
ja
sbb
imul
pop
lret
jmp
sub
mov
loopne
mov
fs
aad
fimull
lods
in
imul
cmp
and
add
pusha
push
jo
inc
andb
in
lret
outsb
jge
sbb
add
pusha
inc
adc
and
sahf
xchg
sub
insl
adc
jg
inc
adc
inc
push
aad
testl
inc
imul
pop
inc
mov
das
dec
ret
xor
cmp
and
and
test
and
xchg
push
sbb
out
jl
xchg
inc
emms
add
mov
inc
mov
mov
inc
or
pusha
sarb
and
pusha
mov
es
and
lock
aaa
and
mov
std
das
gs
cs
loopne
adc
xor
mov
xor
in
cli
jb
or
pop
js
mov
bound
push
mov
in
inc
push
sub
orb
shr
jb
ja
push
lcall
test
scas
jo
mov
jmp
lock
and
out
lods
fcmovu
js
add
sub
shl
inc
jb
push
and
cmp
push
sub
gs
mov
add
sbbl
lret
in
rolb
imul
push
inc
pusha
testl
mov
out
mov
cmpsb
and
test
and
in
pop
add
adc
and
pusha
xor
movups
add
mov
or
xchg
and
loopne
push
push
out
xchg
mov
and
sbb
push
sub
subb
jno
aaa
mov
cmp
orb
add
subl
arpl
or
mov
add
shl
mov
or
inc
sub
push
rol
scas
and
popa
xchg
outsb
les
lcall
fdivrs
loopne
cmp
jmp
rolb
cld
mov
lret
and
stc
aaa
mov
xchg
out
jnp
fsts
jnp
push
xchg
jae
hlt
insb
or
lea
jns
gs
out
mov
loope
clc
and
xlat
sub
cmovb
jne
rolb
add
add
aam
je
addb
hlt
push
cltd
dec
loope
mov
loopne
cmp
stos
loopne
loopne
out
fdivrs
push
lahf
aaa
push
aam
jno
xor
cmp
pusha
add
jmp
aas
mov
loopne
adc
scas
mov
cmp
sub
addb
xorl
imul
mov
aam
cmp
pop
shrb
and
es
stos
mov
pop
insl
xlat
aam
enter
adc
loopne
push
adc
mov
paddusb
and
mov
add
inc
rclb
push
fisttps
loop
aaa
mov
inc
shlb
scas
add
repnz
repnz
pop
mov
adc
lea
mov
cmp
xchg
push
ret
push
lods
out
daa
ret
inc
add
or
and
sbb
cwtl
mov
imul
orb
xor
js
bound
pop
adc
and
cmpsl
sub
rclb
pop
adc
jo
ss
nop
fdiv
je
adc
bsr
andb
mov
flds
or
das
sar
push
adc
ss
in
mov
cli
sbb
inc
mov
movsl
shll
push
rolb
sbb
cmp
stos
mov
loopne
inc
and
jg
pop
mov
add
ficompl
call
mov
pusha
inc
add
sub
xchg
rcll
bound
push
push
imul
xchg
loopne
cmp
adc
pop
fs
out
sbb
iret
clc
pop
and
popf
push
dec
in
push
inc
call
lret
adc
sti
push
push
add
rcrb
hlt
lea
mov
int3
cld
fwait
ret
ret
in
or
pusha
or
dec
inc
andb
pusha
xor
test
mov
fidivrs
test
pusha
mov
mov
inc
sub
loopne
and
aam
out
cli
enter
sbb
xchg
inc
xor
mov
rorb
repnz
jg
inc
sar
data16
aad
mov
cld
lcall
enter
xor
fidivrl
add
iret
mov
xor
mov
fnsave
xchg
mov
sbb
fbstp
in
test
loopne
rolb
jmp
jmp
addr16
loopne
jae
or
repnz
pop
add
fisubl
adc
jle
pusha
mov
mov
xor
fnstenv
pop
push
filds
sbb
jecxz
test
add
fwait
xor
jbe
mov
mov
add
repz
push
sahf
sbb
mov
jnp
cltd
dec
test
rcl
mov
cmp
sahf
std
dec
push
mov
pop
outsb
ret
addb
dec
cwtl
or
mov
fbld
ret
sarb
inc
jge
daa
loopne
jae
loop
push
xor
push
or
add
push
push
stos
add
testl
loopne
sbb
and
test
iret
cmpsl
sti
xor
add
jnp
loopne
hlt
add
push
rorl
cmp
loopne
fisubs
add
cli
fnstenv
shll
pusha
inc
mov
inc
add
push
add
and
add
inc
mov
loopne
pusha
sbbb
mov
addr16
inc
or
pusha
xchg
pop
xor
push
test
and
inc
cmp
loopne
frstor
mov
je
outsb
pushf
nop
divb
mov
subb
mov
iret
lds
rolb
or
sbb
cmpsb
and
out
inc
out
sbb
inc
sbb
mov
shlb
mov
rcr
pusha
leave
lea
mov
mov
bound
in
loop
mov
out
mov
movsl
loopne
cmpsb
add
dec
dec
sbb
cmp
adc
movsl
test
add
insl
inc
aad
xchg
decl
and
add
and
nop
adc
push
sbb
push
xor
mov
jbe
rolb
dec
loopne
shlb
imul
cs
mov
mov
cmpl
lods
addb
adc
add
pusha
hlt
jecxz
lcall
enter
adc
out
push
mov
rolb
or
sarb
mov
mov
push
scas
andb
cmpsl
mov
mov
adcb
int
add
stc
jp
movsl
xor
xchg
add
shlb
rcrb
sbb
jnp
jne
xchg
push
test
loopne
clc
fwait
cli
inc
addr16
xor
mov
pop
fldl2e
push
pusha
mov
add
inc
lcall
adc
cmp
ret
xor
xor
fidivrs
cmpsl
jecxz
mov
dec
movl
sub
xchg
and
popf
xchg
addb
test
mov
or
loopne
push
mov
push
rcrb
lods
rolb
rorb
ret
sbb
lods
loopne
popf
loop
pop
xor
repz
sbbb
shl
xchg
and
dec
inc
rol
and
insb
inc
comiss
mov
and
scas
dec
stc
xchg
dec
mov
je
cmpsb
and
sub
test
shlb
in
mov
movsb
and
add
shr
jmp
mov
in
iret
mov
loopne
outsl
mov
add
dec
mov
daa
jb
add
jle
lret
addr16
adc
in
nop
jns
and
mov
add
pop
sub
dec
add
addb
and
loopne
add
stc
push
addb
addb
mov
insb
std
int3
arpl
add
and
fwait
sub
loopne
xor
cmp
gs
or
aaa
adc
and
iret
lahf
je
and
adc
sbb
push
lds
pop
cmp
out
mov
pusha
mov
gs
in
pop
es
sub
je
mov
pop
mov
fs
xorb
jns
pushl
pop
add
add
std
mov
fnsetpm(287
jo
add
sub
rolb
sti
mov
push
and
loopne
pop
sub
inc
subl
test
pusha
sub
mov
lods
and
out
mov
mov
dec
pop
pop
add
pop
pop
mov
imul
in
pop
jecxz
and
imul
ret
cmp
mov
into
jge
add
mov
cwtl
xlat
hlt
mov
icebp
in
idivl
xor
adc
xchg
dec
cmp
jecxz
fmulp
add
add
scas
repnz
mov
or
fstl
jge
dec
xchg
call
repnz
push
imull
push
xor
pop
mov
jl
pop
add
jbe
sbb
aam
rol
in
mov
jge
push
mov
leave
popf
xchg
pusha
out
or
setae
mov
aad
mov
in
pop
xor
ljmp
ss
and
andb
jmp
roll
shl
arpl
add
shlb
push
sbb
add
pop
fdivs
aad
mov
and
cmp
jmp
test
and
out
jge
shlb
lods
mov
rolb
lods
addb
ss
das
inc
lcall
fisubl
cs
subl
inc
mov
das
xor
arpl
lock
lahf
cmpsl
pushf
rcrb
mov
ss
shl
mov
add
pop
das
add
imul
ljmp
test
pop
scas
inc
rcl
push
andb
dec
lea
les
loop
cmp
aad
mov
mov
out
out
test
addb
aaa
xor
add
jbe
mov
mov
shl
mov
pusha
loopne
outsl
push
adc
shrb
sarl
pusha
fmuls
test
xorb
daa
xchg
shll
out
add
sbb
xchg
fiaddl
inc
mov
mov
sub
shlb
in
shrd
jbe
xchg
out
jmp
or
mov
ficoml
push
push
xor
push
xor
and
xor
dec
dec
add
add
and
pusha
aaa
fnstcw
aam
adc
lret
dec
lcall
adc
call
push
arpl
add
loopne
les
pop
pop
mov
loopne
sub
pushf
and
push
imul
sub
ret
cmpsl
dec
and
cmp
lds
xchg
int
mov
add
pusha
adc
inc
push
cmp
and
loopne
inc
pop
xor
mov
negb
add
out
xor
push
aaa
pop
mov
out
pop
imul
cltd
dec
add
pusha
push
scas
add
into
adc
pop
add
andb
loopne
push
cmpsl
into
dec
sbb
inc
or
orb
mov
add
sbb
xor
mov
sbb
inc
mov
dec
lods
and
and
pop
fwait
cmp
mov
mov
addb
fidivl
adc
inc
mov
inc
mov
dec
leave
rcrb
pop
push
push
clc
movsb
add
sub
fsts
add
ja
and
adc
rolb
fs
jnp
mov
sub
pop
and
ret
and
in
dec
addb
popf
das
andb
es
add
and
jo
xchg
push
jne
mov
ret
mov
jo
mov
and
sub
mov
sub
std
mov
loopne
inc
insb
xlat
scas
das
das
mov
inc
jbe
gs
and
xchg
adc
in
mov
pusha
dec
cmpsl
jb
aas
or
inc
mov
pop
mov
mov
push
mov
ss
xchg
out
shrb
cmp
gs
xor
je
rolb
inc
push
xchg
jne
stc
jp
out
inc
repz
enter
dec
cmpsl
inc
inc
or
xchg
add
shlb
mov
imul
imul
or
lods
shl
pop
clc
pop
mov
pop
shl
dec
pop
jb
mov
pop
and
add
dec
jmp
pop
scas
pop
push
in
gs
stos
and
mov
movsl
repz
pusha
loop
int3
adc
xchg
mov
loopne
mov
test
sbbb
xor
pop
jb
cmc
pop
lods
add
push
adc
push
jmp
lahf
pop
fsts
push
daa
mov
cltd
push
lret
insl
lock
fstl
sub
mov
cmpsb
pusha
pusha
mov
jne
inc
xorb
adcb
lods
jle
sub
and
jmp
inc
rol
int3
adc
and
ja
mov
mov
adcb
rol
adc
inc
and
dec
enter
cmp
enter
adc
cmp
mov
loopne
dec
and
xor
mov
cmp
and
add
add
mov
lock
loopne
xchg
dec
bound
and
pop
icebp
lds
sbb
mov
cmp
mov
int3
pop
stc
aaa
jle
les
sbb
jae
push
or
or
inc
mov
sarl
fwait
sbb
cmp
add
loopne
and
into
es
inc
dec
jmp
add
cmp
in
pop
dec
or
cmp
fs
adc
icebp
dec
sub
add
inc
push
lock
ja
dec
push
loopne
repz
ds
jo
popa
mov
push
pusha
inc
and
aas
mov
jle
mov
sub
mov
push
fnsave
mov
mov
jbe
shlb
xchg
inc
mov
sti
xor
sbb
xor
aam
cld
outsb
xchg
xor
jns
push
cs
rcl
and
inc
cli
sbb
or
inc
jp
pop
nop
and
and
js
adc
pusha
das
bound
ficoms
lret
mov
pusha
mov
and
mov
mov
mov
mov
dec
dec
mov
dec
inc
push
xlat
ss
mov
and
jo
cli
sar
insl
mov
ret
je
lods
and
inc
and
sbb
andb
add
fimuls
add
mov
test
popf
mov
and
sub
enter
pusha
pusha
adc
add
add
sbbb
lahf
mov
outsb
pop
in
mov
pusha
das
mov
add
icebp
int
push
pusha
loopne
cwtl
scas
add
loopne
dec
lods
push
les
rcl
lcall
into
jae
popf
lret
rcrb
loopne
mov
fs
push
mov
cmp
cs
into
andb
inc
mov
rolb
adc
mov
mov
into
mov
and
loopne
inc
cmp
push
adc
pop
shlb
mov
mov
inc
mov
subl
add
and
add
loopne
pop
mov
fdivrl
imul
stos
out
xchg
mov
add
xchg
cwtl
pusha
push
repz
or
rorb
cmp
pushl
add
pop
lock
loopne
dec
mov
add
test
inc
mov
add
mov
cmpsb
addb
mov
mov
rclb
rcrb
int3
xchg
mov
stc
and
adc
jg
push
aam
jnp
jno
shl
add
xor
mov
les
fcmovb
repz
and
or
fs
mov
shrl
leave
push
out
inc
mov
aam
out
mov
jae
and
rcrb
xor
or
insb
in
push
sbb
mov
jo
lds
sbb
add
and
bound
xchg
inc
aam
test
and
idiv
xchg
mov
mov
inc
cwtl
mov
pusha
mov
xor
mov
or
mov
add
adc
arpl
cmc
or
add
push
or
sbb
xchg
je
adc
movsb
inc
add
fistpll
stos
dec
dec
dec
test
ffree
sub
xchg
jnp
dec
adc
mov
mov
loopne
icebp
xchg
inc
repz
cmp
jg
aad
loopne
mov
mov
stos
rol
xchg
and
adc
addb
mov
popf
mov
mov
mov
mov
idivb
jns
addb
loopne
adc
fld
push
nop
das
mov
dec
xchg
cli
jg
addb
ret
cmp
out
sbb
mov
inc
les
mov
inc
xor
inc
pop
mov
jne
xor
jno
jp
rolb
fmul
jg
mov
fidivrl
xchg
or
mov
push
imul
adc
scas
add
rolb
pusha
sub
xor
andb
sar
inc
mov
push
nop
mov
push
and
mov
mov
gs
add
outsl
pushf
adc
xchg
mov
mov
xor
shrb
mov
subl
rolb
and
mov
mov
call
or
push
push
outsl
inc
or
jle
imul
lret
xchg
xchg
jae
jbe
add
jnp
mov
pusha
into
and
xor
inc
movsl
cmp
push
sub
vxorpd
fisubrs
int3
push
imul
mov
push
push
loopne
inc
sbb
in
mov
ret
inc
dec
leave
nop
sahf
mov
shl
add
pop
addr16
cmp
shlb
roll
mov
testb
jle
add
loopne
loopne
mov
lgs
mov
not
ds
inc
pop
and
jmp
sbbb
inc
fldenv
pop
out
test
and
cld
arpl
lcall
fucomip
int
addr16
dec
pop
dec
and
test
pusha
mov
add
repnz
jl
stc
out
fdivr
adc
mov
sub
add
xor
lret
les
pusha
sub
mov
push
sub
pusha
popa
lret
mov
fsubs
jb
lret
push
dec
pop
xchg
scas
ja
adc
xchg
mov
test
outsb
test
repz
mov
lahf
fdivrs
rcr
jg
jl
scas
and
and
cld
adc
cmp
cmp
jge
push
fwait
mov
mov
mov
push
ret
cs
and
enter
dec
xor
jmp
addb
stc
jno
dec
jnp
push
arpl
sub
sti
xor
mov
inc
pusha
shrl
dec
rolb
int3
adc
add
cmp
jae
notb
xchg
outsl
cwtl
mov
in
inc
mov
cmp
adc
sbb
mov
pop
jne
sbb
addr16
fs
mov
jle
movsl
cli
push
inc
loopne
mov
or
pusha
rol
pop
mov
mov
lahf
dec
dec
mov
pusha
rorb
and
add
std
add
push
jp
andb
dec
cmp
jge
inc
pusha
inc
lods
shlb
rol
mov
and
or
cld
in
lahf
xchg
xchg
call
adc
shlb
mov
mov
and
jecxz
xchg
mov
inc
mov
rolb
add
xor
pop
push
ss
jge
add
jp
in
fcomip
push
aaa
cmp
xorl
data16
jmp
outsb
fcomip
andl
sub
add
addb
arpl
add
inc
fstl
rol
test
xor
ret
addb
popa
jge
lods
mov
fxch
pusha
add
call
add
mov
nop
test
in
ja
pusha
add
add
add
cmp
ret
inc
mov
cmpsl
mov
mov
ds
pushf
sub
loopne
push
sub
jnp
push
andl
fucomi
jns
enter
repz
rol
or
mov
push
icebp
xorl
scas
mov
loopne
and
sub
pusha
mov
stc
mov
and
push
es
stos
and
es
and
mov
xor
and
shlb
addr16
mov
and
pusha
mov
imul
rcll
shrl
dec
popf
mov
unpckhps
in
imul
test
andb
inc
andb
pusha
int3
dec
mov
xchg
iret
adc
mov
fisttps
loopne
mov
subl
movsb
loopne
sub
and
mov
add
jbe
push
rol
xor
ja
in
ffree
jecxz
mov
xchg
nop
stc
in
xlat
jg
addb
loopne
int3
mov
push
sbb
or
iret
in
and
repz
out
test
jle
inc
ret
jb
rolb
cmpsl
mov
and
mov
cmc
outsl
cmpsb
mov
jle
test
sahf
mov
pop
mov
in
lods
mov
loopne
add
shlb
push
shlb
inc
cli
popa
ss
popf
pop
pop
dec
fsubrl
sahf
stos
mov
inc
jmp
xchg
out
add
insl
pop
mov
and
push
xor
xlat
movsb
loopne
pop
add
rcrl
out
fwait
jne
mov
jge
push
inc
loopne
out
addb
pop
sub
inc
push
aas
add
xor
sbb
xchg
nop
lcall
in
daa
cwtl
cwtl
sarl
jno
enter
push
inc
sti
negl
and
cmpsb
andb
add
push
mov
lods
and
add
and
ljmp
cmpsl
outsb
and
pop
jle
xchg
test
and
inc
jae
push
xor
xchg
jo
and
insb
test
andb
andb
dec
test
add
and
fisubrs
cmp
andb
dec
pshufw
pusha
add
and
dec
xor
fsubs
rolb
jg
idivb
and
add
adc
aaa
jns
jns
mov
sbb
imul
rolb
pop
cpuid
rolb
pop
push
andb
or
and
popl
stc
test
loopne
enter
lods
test
and
mov
aam
mov
dec
loopne
clc
arpl
xchg
add
shlb
pop
xor
je
fimull
and
sub
mov
stos
addb
mov
inc
mov
mov
rcll
test
shr
adc
sarb
sub
inc
notl
mov
inc
test
inc
mov
adc
sbb
mov
sub
fistl
and
in
test
jg
cmpsb
mov
and
aad
push
inc
ret
or
addb
js
push
mov
xor
push
add
outsl
dec
lahf
les
shlb
xchg
mov
push
fdivr
pop
fstl
repz
sub
add
dec
pushf
into
xor
xchg
andb
fidivrl
movl
loopne
pop
mov
stos
loopne
and
sarb
aaa
mov
xor
or
cmpsb
add
and
pusha
add
xchg
popf
and
inc
not
fstpl
ficoms
loopne
les
jge
add
lea
mov
pusha
mov
push
and
sbb
int
add
jp
rol
repnz
movsb
loopne
bound
sbbb
loopne
dec
sub
loopne
insl
and
ss
add
xchg
mov
dec
sub
in
mov
xor
loopne
daa
aas
into
mov
jge
cmp
rcll
xor
inc
inc
in
es
adcb
inc
out
divl
int
adc
loopne
enter
cmp
pop
push
cmc
dec
ret
ret
andb
mov
loopne
test
insb
mov
sarb
inc
loopne
shlb
lret
add
je
jb
add
push
loope
dec
movsl
daa
lahf
rorl
fs
test
mov
jecxz
and
and
lock
ja
subl
add
and
loop
movsl
gs
jne
mov
addb
mov
cmp
andb
add
data16
pop
adc
out
mov
std
sub
stos
fiadds
add
dec
stos
lret
jb
insl
fwait
inc
adc
dec
or
orb
push
xor
addb
sbb
cmp
cmp
and
and
and
ret
xchg
add
jb
roll
iret
shl
mov
dec
xchg
movsb
loopne
add
hlt
mov
fistpl
add
lods
and
stos
addb
loopne
jle
pop
das
imul
dec
das
lds
and
lahf
sbb
frstor
inc
pop
stos
pusha
orb
enter
sahf
popf
in
mov
idivl
push
mov
add
xor
fmull
xor
mov
fsubrl
mov
pusha
cmp
inc
shlb
loopne
mov
xchg
scas
addb
add
pop
addr16
iret
dec
xor
inc
pusha
imul
std
jno
andb
in
adc
stos
xchg
popf
mov
mov
cli
adc
sbb
loopne
fdivrl
mov
lret
out
mov
add
mov
mov
outsb
hlt
lods
and
mov
popa
repnz
or
pusha
pop
push
add
mov
xchg
fs
jle
into
push
push
mov
sbb
jb
push
stos
movsb
and
ja
loop
and
add
inc
inc
and
inc
shlb
add
jne
xchg
je
sbb
lods
movsl
mov
rolb
pop
lahf
and
into
sbb
cltd
loop
cmpsb
pusha
mov
or
and
and
cmc
mov
or
xorb
ss
outsl
and
mov
aaa
dec
lcall
ficoml
add
add
and
and
test
aad
mov
inc
out
mov
lods
sub
sub
mov
lods
fisttpl
dec
inc
push
jnp
xchg
mov
or
or
rol
loopne
addr16
inc
sbb
cmp
sarb
add
dec
jecxz
scas
mov
and
enter
add
loopne
jl
into
int
mov
lcall
pop
push
add
ds
aad
mov
dec
cmp
sahf
adc
and
and
cmp
push
and
fidivrs
popf
and
rolb
xorl
mov
loopne
sub
insb
or
sub
ret
pusha
and
pop
int3
aad
pop
mov
shll
lahf
les
outsl
cmp
and
addb
fistpl
inc
add
dec
sub
mov
add
pusha
loopne
dec
cmp
data16
and
jne
jle
pop
vunpcklpd
xchg
jbe
mov
shl
rclb
jmp
mov
ss
mov
push
sbb
mov
and
test
out
mov
inc
test
shr
daa
and
sub
inc
aam
lahf
loopne
add
mov
xchg
leave
push
add
pusha
adc
push
sub
and
and
jg
jle
sbb
mov
aas
pop
test
xorb
push
das
or
aam
sub
out
scas
add
add
inc
je
or
pusha
cltd
dec
jg
fisttpl
mov
xchg
fimuls
mov
jp
dec
dec
inc
mov
shrb
cli
out
mov
xor
pop
in
or
loopne
ret
mov
fisttpl
loopne
mov
push
out
xchg
push
xchg
ficompl
pusha
rcrl
hlt
push
call
js
xchg
xchg
mov
int
int
push
ss
jmp
or
pop
sti
lds
pop
mov
rorb
stos
decl
jge
dec
cltd
inc
cs
cli
xchg
inc
andl
dec
mov
dec
cmpsb
loopne
jnp
shl
les
mov
les
das
jns
add
les
jmp
or
inc
sbb
test
mov
sbb
mov
js
mov
mov
cmp
cmc
jae
sbb
push
xor
pop
mov
and
rcrb
push
mov
push
mov
add
jo
test
loopne
add
sar
sti
sub
and
pop
loope
loopne
mov
inc
jp
dec
mov
mov
xor
dec
repnz
cmp
andb
inc
inc
cmpsb
rolb
or
andl
pusha
into
push
and
inc
mov
out
into
adc
loopne
mov
ret
mov
and
and
inc
cmp
loop
out
daa
mov
pusha
cmc
inc
out
inc
aam
cmp
fcmovnb
int
call
xchg
jmp
mov
insl
push
ja
sbb
test
loopne
imul
test
loop
andb
fwait
ja
push
cld
inc
or
out
or
and
mov
addr16
lret
sti
xchg
pop
pop
dec
call
loopne
inc
inc
out
add
fwait
jle
arpl
sub
pushf
sub
pusha
lock
jns
sbb
ret
mov
push
lcall
push
add
pusha
hlt
daa
insl
outsl
cmp
inc
pusha
xchg
xchg
fsubl
repz
jno
pop
inc
shlb
inc
stc
xchg
out
rclb
xchg
xchg
xor
mov
xchg
adc
out
mov
ljmp
mov
jge
sahf
aam
add
repz
pusha
out
hlt
cld
fdivl
imulb
mov
cmpsb
and
dec
push
pop
jmp
sub
xchg
inc
out
ss
mov
decb
mov
pop
lock
pop
cmp
js
add
mov
mov
into
xchg
lock
lret
and
andb
daa
out
idivb
mov
and
outsb
push
sahf
and
and
fistpll
and
dec
dec
cmpsl
jle
aas
pop
scas
loopne
enter
pusha
inc
imul
sub
inc
cli
aas
in
add
mov
addb
push
loopne
mov
jmp
inc
adc
xchg
lods
andb
push
ds
int3
shlb
and
popa
fbstp
cld
mov
pop
inc
xchg
xchg
jge
mov
add
mov
bound
pop
mov
pusha
mov
mov
or
xchg
adc
and
in
ljmp
and
or
dec
sti
sbb
out
ja
loope
and
in
jo
push
enter
pusha
inc
push
push
pop
repz
les
mov
arpl
and
dec
and
and
and
imul
cmc
loop
and
mov
loopne
xor
inc
sub
inc
cmp
or
add
fldl
inc
push
cmc
enter
shlb
imul
sub
pusha
in
sub
leave
xor
sti
jae
xchg
ss
mov
xor
and
adc
sahf
adc
jp
rorb
add
and
or
add
cld
mov
dec
or
sub
add
xorb
cmp
loope
rol
rorb
add
idivb
push
xor
cs
pusha
sbb
lgs
add
imul
and
in
sbb
inc
dec
fcmovb
jae
jno
mov
stc
mov
pushf
push
pusha
rclb
pusha
mov
sub
jbe
push
mov
stos
inc
shrb
fstl
inc
mov
or
add
or
lcall
aad
lahf
or
aaa
mov
sbb
cli
lods
pusha
orb
adc
out
mov
loopne
scas
add
sbb
add
int3
mov
jnp
inc
and
loopne
lock
cwtl
jmp
or
push
xlat
sub
mov
outsb
ljmp
das
cmc
sub
sbb
xor
out
jbe
mov
dec
js
ljmp
and
shlb
add
sti
and
and
ret
add
inc
and
aaa
sbb
mov
pusha
orb
jno
test
mov
in
rol
loop
jo
je
add
sub
andb
enter
ret
sarl
sbb
mov
out
in
xchg
rorb
mov
and
dec
scas
loop
fiadds
addr16
shr
ds
aas
adc
mov
add
jge
mov
test
xchg
cs
sarl
popl
adc
lock
lcall
fmulp
pop
mov
jne
add
push
pusha
mov
and
lods
addb
out
cld
imul
or
inc
cmp
jg
aam
mov
push
xchg
dec
or
pusha
xchg
ret
testb
and
jl
arpl
movsb
mov
mov
and
loopne
mov
jecxz
aam
icebp
dec
lret
das
adc
dec
out
in
and
and
nop
int3
jae
test
add
mov
adc
push
mov
inc
shlb
andb
pusha
cmpb
adc
sarb
push
bnd
stc
cmp
insl
inc
jge
fildl
xor
sub
pop
out
jbe
lcall
adc
repz
mov
jae
int
and
mov
aad
rol
rolb
inc
inc
pop
xchg
sbb
add
faddl
cld
into
jae
shl
fwait
or
mov
mov
add
xlat
inc
push
pusha
ja
leave
fxam
subl
insb
mov
je
sub
andb
and
and
sub
fadd
mov
mov
out
mov
adc
sbb
xchg
iret
xchg
dec
repnz
or
pusha
in
addb
add
into
stos
mov
or
shlb
xor
leave
scas
inc
add
and
mov
bound
loopne
rcrl
sbbl
mov
imul
cmp
test
sbbb
cmp
and
dec
and
pusha
adc
mov
andb
dec
add
sar
xor
adc
clc
repnz
push
inc
and
nop
xchg
sbb
cmp
test
push
mov
and
pusha
cmp
out
jmp
sbb
aam
ret
inc
xor
loopne
mov
fsubs
cmp
daa
lds
pusha
loopne
pusha
add
clc
cli
sub
xchg
movsl
mov
mov
pusha
and
jb
add
ret
arpl
push
out
mov
in
mov
movsb
pusha
mov
jae
add
push
mov
adcl
cli
xor
mov
pusha
outsb
or
fcomi
cmpl
mov
add
pusha
mov
xlat
pop
add
dec
mov
and
and
shlb
je
jecxz
jmp
es
jnp
pop
not
aas
ficomps
mov
jo
add
inc
sbb
adc
andb
cmpsl
push
jo
js
ret
add
push
mov
mov
mov
add
sarb
pop
fistl
pop
add
loopne
pusha
cltd
fadd
test
mov
andb
mov
icebp
enter
jle
mov
mov
shlb
aad
ret
out
xchg
lock
loopne
jnp
pop
pop
dec
fs
jmp
inc
or
movsl
pop
push
in
leave
or
imul
xchg
adc
and
fcoml
mov
ja
rcll
addb
daa
in
sub
and
jle
test
icebp
insb
mov
shlb
mov
add
dec
leave
jno
xchg
cmpsl
les
xchg
push
mov
fnstcw
and
or
std
sbb
mov
mov
mov
and
shlb
pop
fs
pop
pop
add
inc
adc
mov
mov
push
shl
pusha
and
imul
jns
and
loopne
and
push
xchg
jecxz
jg
mov
adcb
cs
inc
sbb
xchg
push
jmp
movsb
add
pop
xchg
test
xchg
sub
dec
pop
mov
inc
jne
cmpsl
pop
mov
shlb
pop
add
and
mov
adc
or
mov
xchg
idivl
ret
bound
repz
into
and
inc
jmp
inc
aam
sbb
ss
repnz
mov
dec
idiv
lods
addb
sub
sbb
dec
inc
test
mov
enter
mov
pop
loopne
inc
gs
and
inc
jl
xchg
and
inc
rolb
loopne
push
je
je
insl
push
leave
pusha
fistpll
out
or
fwait
mov
ljmp
mov
push
das
scas
dec
and
pusha
pusha
lock
in
jae
or
and
cmp
sti
xchg
loopne
mov
mov
jle
inc
cmp
loopne
cli
icebp
cmp
js
jg
pop
pushf
in
push
enter
daa
inc
addb
mov
sub
add
add
cwtl
cltd
cmp
pop
insl
mov
cltd
ss
mov
and
loopne
repnz
insb
cmp
lahf
xchg
imul
xchg
movsl
pop
in
outsb
sub
sbb
movsl
dec
stc
mov
inc
and
mov
sub
fistpll
xchg
ret
imul
or
and
push
inc
stos
mov
jb
add
pop
popf
cmp
mov
cmp
rorl
rolb
andb
xchg
xor
inc
cmp
lock
pushf
movsl
mov
xor
gs
inc
loope
fidivrs
jecxz
iret
mov
fcmove
add
add
inc
pusha
mov
adc
cmp
lods
and
push
add
dec
mov
cwtl
xor
xchg
popf
movsl
mov
shlb
jbe
mov
jns
int3
nop
mov
mov
pusha
sbbb
loop
pop
fwait
inc
push
mov
pusha
sti
aaa
mov
and
data16
xchg
cmp
lret
js
addb
add
je
inc
push
out
xor
out
leave
xchg
push
and
jne
enter
add
and
cmpsb
add
loop
and
mov
add
in
xor
dec
test
jl
and
js
mov
fcomp
movsl
mov
out
rcr
test
sbb
sbb
hlt
leave
mov
icebp
or
pop
gs
cmp
aaa
add
push
push
and
out
test
loopne
jmp
inc
inc
mov
jae
fldenv
adc
cmp
in
push
rolb
loopne
int3
xlat
xchg
loop
cmp
repnz
pusha
pop
cmp
in
sbb
cs
add
sbb
add
inc
or
pusha
mov
adc
or
and
and
push
loop
mov
test
add
mov
inc
mov
shlb
or
fsts
cmp
pop
lcall
pop
xor
push
push
and
xchg
inc
ds
inc
jle
mov
and
inc
gs
xchg
popa
ss
loopne
pop
insb
addb
fs
mov
inc
xor
outsl
sbb
imul
nop
cmp
inc
lds
pop
out
inc
add
clc
xchg
xor
fidivl
loopne
and
loope
add
insl
movsl
mov
inc
jae
das
adc
jbe
ds
in
mov
mov
andb
adc
adc
sbbl
negl
jno
repz
loopne
push
ljmp
adc
loopne
inc
cmp
xchg
add
pusha
hlt
dec
mov
xchg
inc
aad
js
and
lock
int
fcompl
out
adc
repz
fs
jecxz
jmp
sub
shrb
ret
lea
mov
jmp
in
pop
pop
popa
mov
mov
mov
inc
pop
inc
sub
mov
mov
addr16
xchg
mov
push
inc
ror
fnstcw
aaa
xchg
mov
sbbb
sbbb
pusha
inc
in
sahf
dec
sbb
les
inc
add
inc
cmp
mov
loopne
jecxz
mov
cmp
out
adc
push
sbb
imul
shlb
add
lods
push
mov
xchg
test
jmp
test
add
rolb
shl
ds
and
xorl
movsl
or
add
jl
pusha
loopne
in
push
loopne
je
aaa
testl
repnz
loopne
pop
into
mov
cwtl
cmp
push
inc
mov
xchg
pop
rdtsc
inc
sub
pop
mov
bound
loopne
rcr
leave
rcrl
inc
xchg
mov
add
inc
mov
idivb
imul
push
pop
inc
cmp
aaa
fldt
xorl
adc
cli
add
adc
xor
fwait
push
cmpsb
shlb
mov
mov
inc
ficoml
movsb
and
test
and
or
popf
int
pop
icebp
sub
add
loopne
rolb
and
outsl
push
jge
out
add
push
mov
repz
testl
stos
lods
loopne
popf
mov
stc
dec
or
loopne
arpl
jne
add
inc
pop
fdivp
jle
mov
shlb
mov
ljmp
fisttpll
movl
adc
fnsave
xchg
loop
pop
pop
cli
shl
pusha
adc
sahf
push
aam
xchg
xchg
jle
ret
mov
cli
cwtl
xchg
sbbb
dec
outsl
and
pop
shlb
rorb
andb
inc
loopne
mov
ucomiss
mov
sub
pusha
push
popf
lcall
lods
add
mov
pusha
add
shlb
shlb
mov
lock
adc
mov
add
and
ljmp
rclb
cwtl
add
pop
fidivrl
mov
mov
add
mov
rolb
xchg
dec
lods
nop
xchg
cld
popf
mov
add
loopne
xor
nop
and
rclb
inc
stos
loopne
push
add
and
and
mov
adc
rol
pop
pop
mov
shlb
pusha
inc
scas
jae
ret
xchg
jge
inc
jae
push
sbb
insb
jl
in
cmp
test
and
cmpsb
addb
std
mov
jmp
adc
add
jno
shl
pop
push
sub
loopne
jecxz
pushf
cmc
adc
mov
inc
sub
andb
loopne
mov
jle
cmp
xor
in
dec
cli
push
pop
test
mov
loopne
lcall
insb
nop
leave
pop
mov
leave
aam
jbe
push
mov
push
js
sbb
push
cs
cmp
pop
lods
pusha
and
in
add
xchg
mov
shll
inc
inc
int
daa
inc
xchg
cld
xlat
pushf
cs
pusha
stos
mov
or
loopne
jo
test
mov
imul
ficomps
shlb
imul
adc
xchg
and
out
xchg
pop
xchg
mov
popa
aad
add
in
pop
mov
xchg
lret
push
xor
jb
or
ds
dec
xor
out
andb
sub
add
addb
mov
pusha
jns
or
mov
dec
and
addr16
add
push
inc
leave
mov
sbb
sti
add
mov
xchg
add
inc
sarb
addr16
and
pusha
pop
cltd
roll
sbb
inc
mov
daa
pop
sub
stos
sub
mov
in
lea
xchg
mov
mov
cmp
inc
cmpsb
inc
and
mov
sbb
ret
mov
fadds
dec
aas
add
sbbb
out
lods
enter
ret
mov
cmpsb
shlb
push
add
add
loopne
mov
xor
out
add
push
pusha
or
dec
leave
jnp
and
mov
pop
inc
cmp
xor
negb
mov
mov
lahf
mov
xor
or
insb
mov
and
adc
push
pusha
loopne
mov
je
adc
add
push
loop
ds
cld
and
jo
xchg
sbb
rcrb
sbb
addl
pop
jp
jnp
jbe
dec
cmp
loopne
sti
jno
lods
inc
add
loopne
bound
mov
inc
pusha
stos
rolb
cli
ret
push
mov
jmp
and
pop
shl
and
add
shlb
xor
icebp
or
lcall
aaa
out
xor
lret
pop
cs
xchg
and
and
xchg
adc
mov
or
mov
add
inc
push
push
xchg
cmp
loopne
mov
cli
loopne
js
dec
movsl
xor
mov
leave
and
movsl
or
and
loopne
mov
js
test
mov
inc
mov
out
movsb
inc
pusha
outsb
mov
sbb
lcall
sub
adcb
enter
and
loopne
rcrb
or
mov
imul
fisubrs
add
aas
and
mov
xchg
pop
imul
repz
adc
movsl
xchg
in
rclb
add
fsubl
mov
sub
adc
pop
xchg
stc
jbe
jge
jbe
dec
popf
ret
enter
rorb
ss
inc
push
mov
mov
and
loopne
add
or
into
dec
in
clc
xchg
inc
es
push
loop
pop
push
mov
popa
xor
fwait
ja
mov
jb
sbb
inc
je
add
fisubs
aam
jnp
mov
push
dec
mov
pop
pop
mov
mov
sahf
sbb
add
lds
mov
and
inc
mov
inc
loopne
outsl
mov
cmp
loopne
andb
inc
andb
mov
jb
das
fdivrs
xchg
jle
imul
ja
iret
idiv
push
sarl
and
sbb
add
xlat
ds
mov
inc
dec
mov
loopne,pn
daa
or
add
and
sahf
js
rolb
sub
inc
lock
adc
shll
or
jmp
andl
mov
lahf
insl
cmp
and
cwtl
sahf
jne
loopne
sub
test
pusha
das
adc
mov
adc
cli
nop
mov
call
fnstcw
xchg
jae
andb
or
and
push
rol
and
cltd
int
mov
inc
into
idivl
pop
mov
aad
stos
add
imul
bound
fcompl
xchg
js
jb
outsl
nop
jbe
push
andb
ds
mov
adc
fs
pop
in
neg
das
jmp
xchg
mov
cmp
inc
add
in
inc
pusha
push
jbe
push
and
scas
mov
fs
inc
lret
ds
popa
pushf
mov
cs
push
mov
repnz
mov
mov
repz
or
mov
imul
test
outsb
andb
xchg
lods
add
rcrb
cmpsb
mov
and
mov
loopne
lods
cwtl
lret
add
add
fstpt
into
stos
mov
mov
pop
stos
xchg
vucomiss
inc
add
sahf
std
jl
push
xchg
adc
loop
iret
cld
cmp
ss
jecxz
cli
sbb
pop
dec
mov
cmpsb
mov
mov
mov
inc
mov
pusha
mov
ds
add
or
rolb
add
push
and
test
push
mov
push
mov
adc
movsb
inc
and
or
dec
jge
psubb
xchg
add
int
int3
jmp
sbb
dec
lcall
cmp
fs
and
adc
rcrb
xor
jle
ds
gs
leave
cld
arpl
pop
cmpl
incl
mov
out
mov
addb
mov
adc
lods
arpl
xchg
in
mov
dec
lret
test
loopne
shrl
mov
mov
dec
in
shlb
mov
push
and
dec
jo
out
and
and
and
add
addb
jg
pop
movsb
rolb
sahf
adc
and
ret
mov
outsl
ds
addb
adc
mov
lahf
rcrb
addb
rolb
add
shlb
jle
inc
add
or
xchg
xorl
lea
andb
loopne
xor
fcoms
sub
rol
jns
test
out
sbb
add
inc
cmp
sbb
inc
add
stos
pusha
loopne
add
pop
cld
lahf
mov
dec
push
loopne
mov
mov
loopne
xor
adc
xchg
push
adc
insb
xchg
dec
lret
mov
dec
xor
mov
outsb
in
fs
sub
cmp
fcoml
add
jecxz
aas
mov
mov
pop
mov
loopne
mov
pop
jbe
repz
aam
loop
sub
inc
and
inc
lret
andb
int
and
dec
pop
jno
addb
ljmp
rolb
mov
popa
fcompl
testl
and
shr
fcom
mov
scas
aam
sbb
rolb
jb
push
xchg
push
cmc
cli
fimull
test
pusha
fmul
fmull
jecxz
sbb
add
ret
push
clc
jmp
movsb
inc
inc
xchg
dec
in
jmp
jno
sbb
call
and
push
outsl
jb
sub
or
mov
add
xor
test
enter
fmuls
inc
push
movsl
and
aad
int3
mov
rorb
fs
inc
daa
mov
das
xor
movsb
andb
jp
bound
xor
jae
lcall
lds
fisttpll
push
inc
loopne
outsl
pop
lahf
and
clc
cmp
and
mov
shr
js
xchg
xor
rolb
orb
les
aaa
mov
leave
mov
add
shl
int
subl
and
lods
pusha
add
lds
aas
push
leave
mov
cld
xchg
pusha
mov
adc
add
push
mov
xchg
rcr
sub
sub
xor
xchg
test
cmpl
fisttpll
shlb
jo
loop
or
adcb
xor
fbld
scas
pusha
shrb
leave
pop
mov
mov
leave
out
xor
ljmp
es
pop
xchg
stos
pop
inc
dec
jne
fdivrs
fnsave
aaa
incl
and
mov
cmp
shrb
ds
mov
shll
addr16
movsb
and
cmp
test
add
int
iret
orl
push
cmp
add
and
sahf
add
sbb
adc
jl
add
and
mov
push
lahf
or
push
cmp
inc
sar
rolb
dec
inc
fs
inc
movsb
mov
negl
icebp
xchg
imul
inc
loop
mov
pusha
fdivrs
imul
pusha
pusha
jo
les
leave
test
sar
cwtl
mov
mov
inc
jg
and
sub
pop
sub
xor
inc
shlb
pusha
cmp
mov
dec
inc
js
in
nop
mov
fmuls
dec
push
adc
andb
pop
jbe
int3
add
or
push
cmpsb
inc
cmpb
pusha
iret
jmp
pop
jbe
push
jae
ss
scas
mov
movsl
push
enter
and
jg
outsb
test
cmp
outsl
stos
add
popa
inc
pop
adc
sub
loopne
popf
clc
push
mov
negb
and
rolb
and
mov
ror
xor
xchg
bound
push
mov
loopne
aam
pop
int3
stos
add
add
pop
lods
add
lahf
pop
rolb
add
cmp
scas
push
ja
movzbl
cmc
xor
add
in
mov
pop
dec
sbb
and
lods
lret
repnz
xchg
dec
push
xlat
dec
lods
andb
loopne
lods
inc
loopne
jge
insl
add
and
shlb
jmp
pusha
fs
gs
js
pop
mov
fnstcw
loopne
add
je
mov
sub
pusha
jne
std
jne
mov
cmp
in
push
testb
loopne
insl
shrb
jg
mov
scas
stos
sub
cmc
push
fists
sahf
pop
test
adc
xchg
pop
push
aas
andb
inc
jge
sub
inc
add
push
cltd
test
ror
mov
andb
addb
mov
rorb
mov
pop
repnz
mov
arpl
and
inc
pusha
insl
jne
loopne
xchg
add
imul
hlt
adc
push
inc
cld
adc
dec
mov
inc
out
loope
push
rolb
mov
push
cmp
dec
adc
inc
fmull
lret
pusha
add
loopne
leave
adc
or
xor
or
mov
cmp
rolb
aad
cmp
mov
loopne
pusha
mov
xchg
out
inc
inc
je
in
or
pop
xor
adc
inc
fsubrs
jle
add
mov
cmp
jmp
and
mov
inc
or
add
mov
and
add
loopne
mov
cmp
cmp
mov
mov
inc
dec
repz
in
test
pusha
pushw
pusha
inc
dec
stos
in
aaa
jnp
imulb
xchg
sub
loopne
es
sarb
ljmp
hlt
mov
pop
xor
push
and
add
stos
xor
rolb
inc
ficomps
xor
cli
ret
stos
inc
inc
popa
lret
loopne
sbb
icebp
push
movsl
mov
test
add
repnz
clc
arpl
insl
nop
std
mov
or
inc
lret
test
xor
dec
js
pop
loopne
enter
push
shlb
rolb
jbe
jo
inc
mov
mov
incb
jne
adc
jo
mov
xchg
add
or
hlt
mov
jo
mov
orb
xchg
sbb
inc
add
jns
and
xchg
les
ret
out
mov
orb
add
mov
ja
pusha
rorb
je
xor
rol
and
shlb
xor
mov
and
and
lds
mov
mov
pusha
cltd
fbld
jmp
sahf
and
mov
outsl
aaa
add
jmp
add
or
xchg
cmp
lods
xchg
cmpsl
inc
test
add
mov
or
and
push
dec
mov
or
mov
fsubrp
push
shll
outsl
cld
inc
xor
or
dec
dec
adc
fcoms
mov
and
and
mov
dec
xor
loopne
mov
and
inc
inc
popf
scas
cmc
mov
mov
loop
inc
dec
mov
arpl
jle
ds
mov
and
adc
pop
inc
out
lret
xor
fsubs
mov
dec
lcall
cltd
push
sbb
dec
jbe
sub
pop
mov
out
call
and
imul
inc
dec
jecxz
add
cli
inc
add
loopne
adc
out
rcll
popf
sbb
jle
cmp
fisubrl
adc
pop
fs
adc
add
lret
gs
ret
fnstenv
pusha
loopne
std
xchg
pusha
and
add
pop
movsb
pusha
inc
cmc
xchg
fists
sbb
jle
jge
test
sbb
add
mov
imul
sub
in
into
lcall
pop
rcrl
loopne
adc
push
add
mov
sbb
addb
or
pusha
arpl
push
popf
push
and
sti
mov
pushf
test
cmp
int
xchg
adc
inc
add
frstor
dec
add
pop
in
jge
and
aas
lods
inc
rclb
cmpsl
es
imul
imulb
shlb
add
or
mov
aad
stos
popl
loopne
xchg
push
inc
push
aas
add
jecxz
idivl
es
sbb
mov
mov
pusha
les
mov
in
and
shlb
xchg
lods
add
loopne
rcrl
mov
lret
das
fnstcw
mov
xchg
pusha
addb
out
xchg
adc
mov
stos
and
lods
and
imul
mov
pop
dec
push
inc
mov
xchg
mov
fstpt
dec
mov
and
cltd
es
cmpb
dec
mov
add
cmp
mov
push
cmp
push
stc
int
and
jl
xchg
stos
std
std
fwait
add
inc
xor
pusha
addb
mov
imul
adc
fiaddl
mov
mov
xor
push
ljmp
fstpt
and
outsl
ja
and
mov
and
out
xchg
test
adcb
xchg
mov
pushf
fbstp
mov
loopne
das
test
cmc
adc
test
inc
xor
or
cmp
mov
mov
xchg
add
inc
scas
loopne
xchg
push
cwtl
scas
xor
jge
rolb
test
and
mov
and
mov
cmp
lcall
ret
push
loopne
les
loopne
movsl
and
inc
inc
jp
mull
mov
in
int
scas
iret
enter
inc
scas
and
mov
add
mov
adc
pop
xchg
jns
jns
jns
push
aaa
inc
test
rolb
sbb
and
dec
xor
inc
lds
and
in
scas
loopne
inc
sbb
in
sub
mov
rorb
andb
add
pusha
inc
ja
lock
mov
and
scas
dec
aad
mov
fidivrl
push
mov
je,pt
lret
fsubrs
ror
out
cmp
in
xlat
jb
cwtl
add
loope
push
es
dec
jb
push
or
lret
add
gs
inc
pusha
enter
or
loopne
inc
mov
mov
in
ret
xor
cmp
inc
pusha
pop
and
subb
jne
sbb
mov
sarb
lahf
in
addb
test
add
xor
fisttps
add
inc
adc
ss
lahf
and
loopne
nop
xor
xlat
iret
addb
cmp
test
mov
push
adc
mov
sbb
cmp
and
lock
inc
aas
fxam
outsb
xor
cmp
or
pusha
addr16
inc
jb
loop
aad
aas
cmp
push
fwait
repz
lret
loopne
jecxz
popf
lea
add
mov
mov
loopne
out
mov
loopne
stc
mov
loopne
adc
imulb
mov
jo
or
mov
push
pusha
leave
sub
sarl
xlat
lea
and
mov
mul
into
xchg
sbb
xchg
inc
in
pop
jmp
mov
aam
aaa
inc
mov
push
sbb
rcrb
push
inc
loopne
call
leave
and
addb
addb
push
mov
shrb
add
jp
dec
imul
pop
int3
xlat
pop
xor
inc
adcb
loopne
adc
mov
movsb
and
int3
xchg
scas
rol
inc
xor
sub
and
jle
xor
jmp
push
dec
pusha
push
icebp
and
pusha
rorb
loopne
xchg
dec
jno
pop
js
mov
mov
rol
loop
or
test
mov
stos
xor
addb
xor
add
loopne
add
loopne
pop
testl
pop
repnz
test
iret
ficomps
lock
in
push
inc
rolb
sarb
and
fwait
les
inc
pusha
jle
shlb
cmp
dec
mov
mov
xor
mov
xchg
mov
add
pop
cld
dec
insb
jb
fildll
jp
in
mov
movups
addb
testb
scas
sub
inc
xor
or
jo
daa
fdivrs
pop
pusha
or
mov
mov
pop
or
adc
fsub
loop
and
pusha
int
lahf
lcall
mov
xchg
fildl
mov
add
nop
addb
mov
mov
push
inc
push
or
jg
sub
and
xchg
fs
movsb
and
js
loopne
lcall
and
pusha
mov
fwait
popa
shll
jb
addb
ret
inc
imul
mov
xlat
pop
inc
push
cmp
push
jge
lods
pusha
rolb
push
mov
inc
loopne
adc
dec
int3
iret
sbb
xchg
inc
push
iret
aad
xor
jge
in
jecxz
cmp
sub
mov
push
in
adc
sub
mov
test
and
mov
lea
and
fadds
or
repz
ljmp
adcb
addb
rolb
test
sub
mov
cwtl
es
rorb
enter
add
pusha
xor
or
adcb
popa
das
mov
mov
rol
mov
andb
add
xor
lea
push
mov
add
add
xor
test
push
lods
add
fwait
js
data16
sbb
loopne
cwtl
sub
movsl
adc
inc
mov
shlb
scas
and
mov
outsb
mov
dec
loopne
loopne
jbe
mov
xchg
adcl
out
push
or
iret
mov
mov
xchg
fldt
ja
mov
lods
and
xchg
daa
popf
push
push
and
sbb
fst
fistpll
js
pop
or
ljmp
xor
shlb
sbb
and
mov
add
pusha
je
mov
sbb
outsb
sbb
inc
mov
js
mov
loopne
push
test
inc
loopne
stos
push
push
flds
inc
inc
pushf
adc
sub
jg
mov
inc
and
mov
push
gs
movsb
add
and
je
insl
test
pop
loop
jne
xor
out
jbe
add
add
and
out
outsl
push
push
lahf
shr
test
pusha
push
dec
dec
add
add
and
andb
roll
sbb
fsubrl
add
loopne
add
add
loopne
pusha
sbbb
sub
mov
loopne
shl
ja
sbb
clc
cli
shl
mov
addb
int3
lahf
mulb
cmpb
fwait
ljmp
andb
jecxz
xchg
rcrl
mov
cltd
jg
cs
loopne
cmp
incb
and
in
lods
inc
loopne
jg
inc
je
pushf
ds
mov
add
cmp
pop
adc
and
inc
dec
iret
add
int
test
mov
gs
pop
mov
inc
jo
sbb
loop
dec
xchg
inc
mov
inc
sbbb
scas
addb
mov
mov
or
loopne
nop
outsl
cli
fbstp
push
sti
stos
andb
and
scas
pusha
and
addb
mov
fcmovbe
mov
mov
frstor
xor
sub
mov
inc
into
push
add
shrb
pusha
add
and
xchg
dec
adc
and
lea
ljmp
fcoml
ret
lret
jg
xor
mov
jmp
sbb
xlat
adc
add
jl
hlt
pop
mov
sbb
inc
sub
push
mov
shll
xchg
sbbl
xchg
xchg
pop
hlt
inc
repnz
mov
aam
mov
sub
loopne
cld
push
push
jle
mov
cmp
daa
in
jb
cwtl
cmc
lahf
push
sbb
xor
loop
les
add
mov
jle
push
fs
pop
add
push
ret
andb
jecxz
rcl
or
out
test
cltd
mov
loopne
jne
hlt
sbb
ret
fstpt
inc
add
or
fidivs
test
mov
ret
adc
mov
scas
lcall
andb
andb
pop
aaa
add
ret
andb
cs
loopne
xchg
xchg
sarb
call
loopne
mov
xor
fidivs
addb
add
jl
xchg
stos
addb
iret
pop
mov
adcb
ja
dec
outsl
movsb
and
cmc
test
enter
jae
ret
daa
cld
divl
sti
jns
sub
in
std
pop
dec
and
call
jecxz
in
push
inc
fwait
mov
leave
sbb
and
lea
nop
or
stos
add
inc
cld
dec
cltd
iret
pop
sti
sbb
insl
lahf
fidivs
enter
jns
pop
push
ljmp
shr
fcompl
lahf
sub
cli
xchg
mov
shlb
sub
into
test
pusha
ret
mov
mov
pusha
pusha
mov
add
addb
mov
or
pusha
push
push
sbb
cmp
jp
fsts
out
adc
mov
sub
sahf
lret
xor
dec
sti
stc
mov
loopne,pn
push
pop
ljmp
add
cmp
add
repnz
bound
xchg
xchg
lods
pusha
pusha
xchg
shr
lods
inc
loopne
mov
shlb
jae
loope
push
mov
mov
sti
jnp
jl
out
rcrl
dec
xchg
cmp
inc
mov
xor
ror
inc
negl
add
andb
andb
add
loopne
or
and
loopne
inc
lock
add
or
lcall
sbb
dec
into
inc
movb
addr16
leave
xchg
lock
add
loopne
add
loopne
movsl
and
daa
and
jb
jg
and
and
shlb
in
sub
rorl
sbbb
mov
or
test
cld
inc
lods
push
inc
cmp
jl
inc
adc
adc
dec
mov
cmpsl
outsb
add
data16
adc
rolb
xor
aaa
nop
push
add
pusha
jl
pop
push
xchg
sbb
xor
mov
mov
and
add
lret
sub
pop
pushf
sub
jg
into
les
test
or
and
mov
sub
out
or
inc
xor
and
mov
add
leave
loop
or
addb
dec
xchg
repz
repnz
push
test
adcb
xchg
xor
adc
hlt
inc
popf
aas
pop
xchg
fisttps
lock
rclb
fcmovne
data16
outsb
jge
sub
rorb
loope
mov
flds
in
test
inc
dec
or
test
shlb
push
adc
sub
mov
jo
repnz
fwait
ds
test
arpl
jl
and
xchg
ss
popa
mov
push
xchg
rorb
push
mov
in
out
mov
shlb
mov
lea
mov
add
inc
dec
aaa
inc
cmp
inc
sbb
mov
push
in
ret
dec
roll
add
jmp
sbb
mov
int
xchg
pop
pop
push
int
xchg
fsubs
pop
xchg
xlat
repz
xchg
push
enter
pop
call
mov
push
dec
adc
jle
push
dec
push
out
pop
loop
stos
rolb
sbb
lds
xchg
sarl
pusha
inc
xchg
outsb
arpl
push
dec
mov
mov
scas
pusha
addb
and
inc
inc
xor
or
inc
fwait
jns
andb
xor
and
mov
orb
pop
sub
and
mov
out
mov
add
sbb
addb
dec
pop
pop
and
rcll
mov
lret
cmpsb
inc
add
adc
scas
pusha
rorb
and
push
inc
orb
lock
jle
std
mov
outsb
cmp
and
loopne
pop
stos
mov
addb
xchg
je
mov
loopne
mov
leave
cmp
sbb
and
je
pop
lds
and
shlb
pusha
add
arpl
jmp
out
cmp
lods
pusha
and
xchg
sar
shlb
popf
stc
mov
ljmp
ret
and
sub
shrb
and
xor
and
enter
and
filds
pop
jg
fnstenv
jecxz
ja
mov
fnstsw
mov
pop
xor
or
insb
insb
dec
imul
sbb
mov
adc
std
addb
pusha
inc
stos
pusha
rclb
int
mov
mov
fucom
ds
dec
push
lock
and
pop
call
or
test
divb
aas
xor
dec
mov
add
mov
rclb
ljmp
stc
mov
add
jg
mov
out
aam
mov
loopne
movsb
shlb
sub
test
sub
xchg
inc
push
inc
clc
stc
bound
mov
out
ss
mov
loopne
outsl
inc
test
and
mov
xorb
cs
inc
pushf
mov
addr16
insb
js
adc
addb
inc
and
inc
and
push
cmp
das
or
loopne
add
ljmp
addb
js
add
ror
jae
pop
nop
jmp
and
and
dec
xchg
mov
xor
push
test
mov
inc
mov
rolb
mov
push
cmc
test
inc
cmp
stos
inc
add
fstps
push
mov
rclb
lds
mov
incb
mov
stc
test
lret
mov
add
add
movsl
jbe
mov
mov
je
pusha
inc
inc
inc
cwtl
mov
add
inc
nop
andb
lcall
add
repz
xor
add
js
pop
faddl
add
jb
sub
xorb
out
or
scas
ror
lods
adc
cld
dec
lret
add
dec
into
mov
push
push
aaa
add
imul
sub
pusha
cmp
fld
repnz
orb
jecxz
jnp
push
and
inc
jge
sub
push
and
xor
sbb
jns
sbb
jle
pop
out
les
andb
pusha
pusha
gs
dec
mov
and
repnz
movsb
rol
lret
mov
test
inc
jmp
test
add
pusha
and
imul
leave
shll
rolb
shlb
and
sarb
addb
movsl
sti
ret
pop
xchg
fadd
lock
mov
dec
mov
rcr
fcmovb
add
inc
fsubp
inc
and
arpl
push
or
andb
out
cmp
stos
pusha
pusha
xchg
decb
mov
jb
into
cli
inc
movsb
addb
or
jp
cmp
or
loopne
jo
es
push
mov
push
pop
rcrl
divl
mov
add
sahf
pop
push
mov
pop
pop
shrb
push
aam
addb
dec
dec
sub
and
inc
push
test
add
inc
enter
mov
rol
dec
or
add
mov
in
add
mov
sbb
repz
loopne
add
std
cmc
rorb
mov
pop
imul
add
scas
andb
push
cmc
xor
dec
cmc
dec
jge
icebp
mov
addb
cli
test
inc
pop
enter
shrb
cmp
movsb
rolb
shr
js
hlt
xor
cmp
add
rolb
or
jno
mov
pop
mov
jb
xor
lods
loopne
pop
xor
gs
push
lahf
test
mov
pop
test
loopne
shll
xchg
cmp
bound
dec
enter
add
popf
or
pusha
cmp
sbb
sbb
mov
iret
int3
pop
mov
xor
or
faddl
addb
add
loopne
add
mov
mov
and
jp
inc
dec
inc
dec
and
loopne
fsubrl
addb
sbb
push
jne
sbb
in
out
ja
and
push
pusha
add
mov
mov
jg
add
add
inc
or
and
push
in
xchg
cmp
repz
dec
sar
ljmp
rol
xor
mov
pusha
pusha
mov
xchg
sub
pusha
mov
pusha
inc
mov
pusha
rorb
cwtl
lock
shlb
andb
mov
pop
in
and
inc
mov
faddl
rdmsr
stos
insb
inc
shll
fcmovnbe
jne
rcr
cmc
gs
fld
push
rclb
or
and
leave
ret
loop
push
cmpsl
out
adc
push
mov
pop
pop
arpl
mov
push
pop
push
idivb
or
incl
cmp
cmp
loopne
mov
leave
loop
in
loope
push
dec
imul
jno
mov
mov
jb
jmp
addb
lea
ss
xchg
jmp
sbb
rorb
inc
add
andb
mov
repnz
insl
jmp
in
push
add
jp
push
lret
mov
mov
shll
mov
jnp
jp
jp
in
pusha
cmpsl
ret
inc
push
or
pusha
pusha
xor
loopne,pn
push
nop
lcall
inc
inc
xorl
sbbb
subb
out
popa
test
mov
dec
push
pusha
loopne
das
cmc
xchg
stos
add
jae
sbb
andb
stc
sub
and
mov
inc
in
cltd
xchg
xor
rolb
mov
ds
out
addb
pusha
cmpb
test
rolb
enter
add
add
and
std
pop
dec
mov
push
push
pop
push
mov
or
idivl
lahf
out
jne
call
leave
jbe
inc
inc
addb
mov
aad
and
xchg
push
and
pusha
clc
out
jns
mov
add
xor
adc
lock
repnz
enter
dec
and
mov
and
in
icebp
xchg
add
inc
inc
sbb
and
notb
xchg
jle
mov
push
push
cli
pushl
les
and
cmpsb
pusha
sbbb
ja
loopne
outsb
call
fstpt
mov
mov
jne
loopne
fxch
dec
push
fwait
push
insb
mov
into
sub
cmp
loopne
rolb
leave
mov
subl
imulb
jno
outsb
icebp
hlt
jbe
xor
add
inc
xor
sub
add
cli
add
mov
stos
loopne
cmp
movsl
int
mov
add
addb
add
inc
loopne
sbb
pop
out
into
cs
mov
inc
js
mov
mov
sub
mov
fisttpl
in
dec
adc
and
xchg
push
popa
xchg
jne
addb
mov
add
lods
dec
add
pusha
push
jo
add
andb
lds
ljmp
mov
push
dec
fcompl
xchg
stos
jno
std
int
dec
int3
xor
jg
or
pusha
test
pushf
mov
bound
mov
sbb
or
add
loopne
xorl
add
aad
push
adcl
loope
inc
loopne
inc
pusha
and
and
xchg
adc
dec
push
mov
fstl
rcrb
inc
inc
push
addr16
dec
test
loopne,pn
lods
xlat
outsb
xchg
pop
fisubrl
movsb
inc
mov
dec
xor
test
orb
add
loopne
popf
sub
and
mov
sbb
xor
inc
popf
scas
and
jmp
mov
inc
addb
inc
dec
xchg
imul
pusha
inc
adc
movl
mov
or
and
hlt
pushf
pop
stos
andb
scas
inc
and
push
outsl
xchg
dec
mov
jo
adc
and
pusha
and
imul
cmp
dec
dec
mov
sbb
pusha
sub
mov
jne
add
mov
fcmovnbe
cmp
sub
gs
rolb
f2xm1
repnz
mov
ret
test
call
dec
insl
scas
inc
adcb
in
pop
jg
inc
loope
jnp
sub
inc
xor
mov
lods
andb
mov
loopne
and
loopne
xorl
pusha
and
stos
jg
sbb
add
jmp
push
cli
xchg
xor
insl
dec
xchg
push
in
push
push
mov
ja
jle
sub
or
pusha
add
andb
xchg
mov
mov
inc
imul
inc
pusha
and
pusha
call
pop
pop
fildl
and
push
mov
inc
mov
xchg
movsl
pop
cmpsb
add
sbb
aaa
or
add
xor
rol
test
mov
lret
jp
in
and
add
or
shlb
inc
lahf
push
outsb
je
mov
mov
cmc
icebp
xchg
cmpsl
out
aaa
inc
icebp
push
pop
sbb
movsl
jne
rorl
fistl
add
mov
addl
loopne
movl
mov
test
and
arpl
dec
addb
push
jnp
push
inc
lods
jnp
or
outsl
ss
in
lcall
push
push
jo
or
add
shlb
jns
aas
jnp
pusha
inc
mov
pusha
adcb
in
dec
or
and
ret
and
fdivl
repnz
stos
fisubl
and
sbb
in
les
sub
jp
inc
jg
rcrb
iret
aas
mov
xor
mov
pop
or
pop
sub
sarb
adc
jno
rolb
jno
aaa
dec
in
jne
cmp
push
cmp
in
shlb
mov
adc
shl
int
add
inc
fisttpll
shlb
add
mov
and
adc
div
nop
push
mov
add
mov
jns
in
ret
call
cmp
sarb
push
scas
and
dec
lret
pusha
pusha
xor
hlt
dec
xor
shll
aas
and
shlb
outsb
movsl
jne
jle
lahf
mov
sub
loopne
add
inc
xlat
pop
lock
push
inc
leave
sahf
sbb
js
adc
inc
aad
idivl
or
mov
mov
clc
std
mov
shlb
and
adc
mov
jmp
push
add
lods
inc
loopne
xchg
xchg
fs
xchg
mov
ret
inc
cmpsb
shl
dec
mov
xchg
rorb
dec
out
cmp
inc
mov
pop
mov
js
iret
cmp
and
lock
and
test
rcll
mov
mov
add
rcrb
and
adcb
loopne
sti
fwait
icebp
xlat
pop
js
and
rcll
inc
inc
mov
jno
jo
into
daa
cmp
jge
stos
xchg
in
fucomip
mov
inc
add
mov
sbb
mov
mov
mov
lods
loopne
push
loopne
add
dec
shll
add
pusha
data16
adc
andb
xchg
add
add
lret
rorl
out
scas
out
xchg
out
fnstsw
lret
jno
rol
sti
mov
add
rol
dec
fwait
jno
pop
mov
xchg
les
or
adc
shl
xchg
dec
xor
xor
jl
pusha
mov
pusha
les
andb
inc
pop
in
rolb
loopne
je
cli
aas
fldl
shll
mov
subl
add
adc
mov
xor
rcrb
add
pop
dec
out
and
add
add
cmp
dec
cmc
jecxz
add
mov
adc
mov
cmpsl
sbb
sbb
sbb
aad
cmp
pusha
cmp
or
ja
pushf
mov
or
aad
lcall
mov
mov
lret
jo
out
cmp
dec
imul
xchg
js
or
imul
addb
ret
fnstcw
and
mov
test
inc
inc
mov
dec
gs
pop
mov
scas
adc
push
xchg
mov
nop
cld
data16
adc
dec
mov
cmp
jp
jg
mov
aas
sub
addb
inc
mov
leave
lods
inc
andb
daa
xor
cld
into
xchg
pop
inc
cmpsl
scas
rolb
cld
std
jne
cmp
fsubp
imul
cmpl
mov
addb
lcall
push
or
push
loopne
aam
push
fstl
mov
sarl
xlat
pushf
notl
push
frstor
mov
mov
frstpm(287
outsb
sub
cli
or
rclb
stc
lds
dec
mov
dec
mov
jmp
int3
cmp
es
xor
dec
sbb
jmp
insl
insb
or
stc
mov
es
js
and
adc
cmp
sbb
pop
ret
lret
mov
xchg
andb
xchg
incb
shr
mov
aas
imul
sarb
int3
and
jmp
mov
pusha
jge
push
inc
xor
bound
add
cmp
inc
or
shlb
mov
and
push
or
add
sub
pusha
outsl
add
dec
jno
mov
pop
imul
rcr
cmp
sbb
add
rol
fwait
lock
lea
mov
and
mov
push
mov
movsl
mov
pop
js
push
add
mov
rclb
daa
jb
pop
add
push
shlb
inc
inc
jmp
scas
pusha
inc
out
clc
lods
sbb
sub
and
loopne
and
test
mov
cli
addr16
cmp
and
addl
sbb
mov
add
jg
cmp
add
jg
cmp
mov
xlat
jo
aad
sbb
mov
and
les
loopne
rcrb
sbb
outsl
lret
add
adc
inc
xchg
lds
add
xlat
mov
and
out
mov
inc
and
mov
jmp
sahf
aad
and
dec
outsl
cltd
ret
push
jnp
test
and
or
pusha
data16
repz
fcom
xor
and
lea
lods
pusha
cmpb
lcall
daa
sub
pop
inc
int
xchg
or
sahf
shrb
addb
push
in
lock
ret
mov
in
rol
and
arpl
or
pop
mov
loopne
lret
or
inc
or
ret
out
mov
flds
loopne
imul
pushf
xchg
jbe
hlt
aad
mov
sbb
repnz
in
add
jg
sbb
push
shl
ss
mov
loopne
shl
mov
jecxz
sub
inc
dec
or
adc
ffreep
jecxz
adc
cmc
out
fisttpl
fmull
add
cmp
imul
cld
jg
inc
subb
lods
rolb
std
mov
pop
lret
sbb
sbb
rorb
shlb
add
jp
inc
add
mov
jo
push
iret
roll
pusha
shr
sahf
adc
or
xchg
jp
je
or
add
jecxz
std
dec
jg
icebp
daa
and
fwait
clc
mov
aam
mov
or
inc
sbb
imulb
pusha
mov
ljmp
loopne
int3
mov
pop
fs
aam
cmp
and
cmpsl
outsb
scas
sbb
lods
loopne
cli
jne
push
add
movsb
loopne
mov
jg
mov
jnp
loopne
inc
add
or
and
mov
adc
sbb
add
in
fisttpl
adc
jnp
pusha
subb
lods
mov
and
add
leave
rclb
scas
inc
add
rolb
imul
pop
or
xchg
and
sbb
adc
pop
fldcw
or
add
mov
cmpl
cmp
test
xchg
and
push
mov
cmc
xor
aaa
stos
inc
shlb
sub
cltd
dec
andb
aam
pop
pop
fimull
mov
xchg
adc
inc
sub
mov
jne
add
rolb
out
stc
sbb
mov
sahf
shlb
cmpsb
loopne
ret
mov
fisubrs
add
pusha
or
and
xor
add
xor
jg
mov
out
xchg
test
xlat
sbb
push
andb
xorl
mov
addr16
sub
add
pusha
shrl
loopne
xor
rcrl
pusha
fwait
pop
mov
push
jg
roll
jle
pop
pop
add
rol
pop
fwait
mov
pusha
scas
xchg
mov
aam
mov
fidivl
cmc
insb
ja
mov
sub
inc
xor
std
add
fisttpl
and
je
xchg
push
push
push
cld
decb
mov
pop
pop
stc
push
jecxz
jnp
cmp
shlb
je
xchg
pusha
add
jb
loopne
cmpsl
sub
pop
push
push
and
in
cmc
cmp
or
and
adc
and
cmp
ret
fcmovbe
push
jle
inc
mov
pusha
xchg
inc
gs
subb
dec
dec
push
testb
and
and
inc
mov
loopne
add
ss
adc
inc
in
push
cmp
mov
loopne
sub
inc
ja
in
pop
jle
mov
stos
rolb
pop
push
test
pusha
mov
xor
xor
or
jbe
es
and
pusha
and
pushl
shrl
xor
jge
mov
pop
push
andb
and
push
or
mov
pusha
and
xchg
icebp
filds
enter
sbb
lods
xor
addb
insb
fistpll
jmp
adc
inc
add
fldz
xor
xchg
fs
std
lds
pushl
ret
and
cmp
aad
jmp
mov
rclb
lret
bnd
cvtdq2ps
loopne
sbb
or
fiadds
inc
mov
insb
inc
xchg
orb
mov
add
rorb
and
xchg
insb
jo
add
shl
clc
mov
aas
xchg
mov
push
cmc
lcall
and
mov
and
in
mov
xchg
std
pop
loope
dec
mov
loopne
push
mov
mov
cmpsl
rclb
scas
addb
inc
cmp
and
pusha
cmpsb
pusha
loopne
push
ror
scas
addb
idivl
mov
jnp
and
mov
addb
and
add
cmc
hlt
jecxz
sub
pusha
xor
and
cli
into
inc
aas
dec
jmp
cmp
inc
rolb
in
sub
rcrb
lds
call
jne
sar
xchg
outsb
iret
nop
cmp
test
add
ret
and
inc
je
xchg
sbb
mov
roll
and
pop
mov
shlb
jl
add
mov
pusha
aas
mov
push
mov
shlb
es
push
idivl
test
and
rolb
jae
test
dec
jl
xchg
inc
mov
mov
adc
jne
mov
jge
cld
sbb
adc
push
addb
xchg
pop
mov
and
lcall
in
addr16
rcrb
popf
mov
inc
add
mov
cmp
xchg
and
dec
inc
adc
and
xchg
sbb
je
sbb
add
and
insb
add
inc
inc
int3
and
jnp
add
insb
ds
add
pop
inc
inc
mov
mov
pusha
mov
dec
andb
add
mov
arpl
pop
outsb
and
mov
inc
add
xchg
mov
push
jb
pushf
fs
fnsave
pop
cli
loopne,pn
push
jo
pusha
and
add
dec
and
and
cmp
fmull
shlb
ljmp
sarb
pop
cld
lock
test
int
sbb
and
loopne
mov
psubw
rorb
mov
mov
cmpb
out
call
andb
push
aas
outsb
push
clc
fucomip
jge
aas
push
scas
and
xchg
dec
call
sub
mov
shlb
out
cmp
mov
mov
mov
and
inc
in
lods
and
andb
inc
orb
push
shl
xchg
testl
loopne
aam
push
imul
in
add
rolb
and
fistps
enter
add
orl
or
mov
int
sub
test
adc
fwait
xchg
inc
xchg
pop
sbb
push
enter
xor
and
add
add
repnz
pusha
dec
inc
adc
ss
cmp
cwtl
fwait
mulb
fimull
dec
into
push
and
repz
inc
loopne
int3
push
jb
test
mov
addb
loopne
cld
xor
scas
add
or
add
mov
add
sub
and
mov
push
adc
inc
sub
push
std
and
add
push
out
xchg
nop
sarl
pop
add
sti
xor
inc
push
inc
push
loopne
movsl
pop
and
push
adc
or
pusha
dec
mov
addb
xchg
adc
loopne
inc
and
rcrb
out
in
stos
aad
inc
mov
cmpsl
xchg
xchg
inc
leave
adc
dec
xor
pusha
jo
xlat
sub
andb
or
andb
iret
xchg
xchg
out
jae
push
mov
inc
insb
inc
lock
jbe
adc
add
add
clc
and
pusha
cmp
adc
popf
test
andb
insb
pop
fdivrl
mov
jmp
pusha
rolb
adc
leave
out
and
pusha
inc
and
pop
loopne
add
les
xor
fnsave
dec
out
shlb
mov
jns
nop
jns
sbb
mov
or
mov
and
jne
inc
movb
pop
sub
sub
or
jg
and
icebp
sbb
fstpl
sti
in
cmpsl
jmp
and
or
xorb
sub
mov
movsl
xor
xorl
pop
cmp
mov
bnd
pop
mov
inc
and
inc
pop
inc
aas
das
out
push
mov
mov
mov
add
inc
adc
loopne
cmp
std
repnz
xchg
repz
jb
push
jg
sbb
shl
xchg
dec
je
nop
sbb
adc
aaa
push
fistpl
lods
mov
mov
sbb
jnp
jns
popa
add
cli
rolb
xlat
hlt
xchg
lods
gs
rcrw
or
loopne
mov
mov
stc
pop
les
mov
pop
mov
xor
add
mov
sbb
xor
or
sbb
test
mov
inc
fldl
ss
jmp
addb
or
xlat
out
push
xchg
lahf
mov
pusha
add
add
sbb
inc
ja
insl
and
out
or
popa
repz
jo
xor
and
dec
ljmp
into
scas
pusha
add
push
inc
jb
cmc
cltd
add
rolb
js
pop
adc
rclb
sbb
shlb
add
inc
mov
xchg
and
and
adc
mov
stos
sbb
dec
and
loope
mov
int3
or
shl
sub
add
add
test
mov
stos
sti
shlb
lret
add
inc
sub
add
xor
pusha
inc
mov
xchg
or
or
clc
orl
rcr
inc
sub
mov
addb
add
lret
iret
jg
rolb
inc
xor
lret
in
and
push
ficomps
ja
dec
adc
adc
test
adcb
or
push
dec
andb
add
out
outsl
int
fs
inc
dec
pop
xchg
xor
jle
bnd
cld
xchg
add
rorb
push
xchg
out
mov
test
sub
add
mov
jae
mov
push
push
scas
loopne
sbb
roll
loopne
flds
rcrb
and
adc
inc
fistpll
xor
addb
pop
movsb
add
mov
lds
notb
push
das
mov
test
mov
lcall
jl
adc
out
mov
sub
pop
test
sarb
rol
inc
and
pusha
cmc
stos
ret
adc
fidivrs
icebp
xor
loopne
clc
addr16
cld
hlt
fistpll
dec
xchg
and
addr16
enter
aas
fdivs
jmp
ljmp
push
adc
push
cli
pop
dec
and
inc
push
pop
push
and
shlb
dec
es
push
cltd
scas
push
pusha
and
mov
and
pop
inc
iret
aad
leave
xor
xlat
inc
mov
inc
and
inc
es
mov
les
cltd
mov
xchg
stos
insb
scas
fmuls
mov
int3
fdivr
push
sbb
shl
sbb
add
je
mov
jg
dec
sbb
mov
jb
insl
jg
testl
mov
mov
loope
push
and
inc
xchg
aam
cwtl
rcll
jge
add
and
lcall
sub
les
in
lret
jbe
xor
pusha
cmovbe
xchg
xchg
out
movsl
out
xchg
ljmp
lcall
mov
mov
fldcw
rolb
leave
sub
push
lods
jg
pop
or
push
push
mov
xor
jnp
mov
imul
rolb
lcall
ja
std
mov
shl
in
lea
ror
sub
ret
mov
andb
pop
shrl
shlb
push
test
fcomps
push
jge
xchg
mov
sahf
mov
mov
lods
dec
push
inc
sub
xchg
dec
ret
test
lods
addb
loopne
xchg
addb
push
std
adc
jle
or
loopne
dec
sbb
xchg
pop
repz
aad
add
mov
xor
call
and
and
adc
scas
shlb
pop
repz
push
pop
out
mov
pusha
daa
jmp
jp
or
mov
decb
mov
in
js
and
dec
xchg
xchg
push
lret
dec
icebp
pop
mov
xchg
fmull
adc
cmpsl
stc
ret
inc
shlb
cmpsb
loopne
inc
cmpsb
inc
pusha
das
and
and
ret
pop
push
inc
push
fsubs
and
sub
add
or
mov
mov
jb
and
xchg
jp
popf
pause
loop
enter
sahf
jp
dec
inc
xchg
jbe
call
rolb
cmp
push
mov
sti
jl
sub
sub
loopne
pushf
int
ljmp
add
shlb
addr16
iret
dec
jne
ficomps
jbe
jl
add
lock
add
and
sbb
jp
jmp
mov
enter
and
inc
inc
loop
and
or
scas
push
loope
xorl
subb
std
sbb
loopne
push
mov
pop
add
loopne
and
push
dec
mov
mov
in
idivb
lock
mov
pusha
loopne
push
std
shlb
xchg
loope
push
pusha
and
pop
mov
call
cmc
add
pusha
add
shlb
addb
lds
fidivrl
and
xchg
pusha
dec
aam
pop
dec
imul
push
add
aam
sub
dec
adc
movsb
mov
pusha
jb
jle
jmp
or
inc
cmp
inc
loopne
inc
andl
shrb
adc
sub
add
shl
in
dec
fwait
push
jge
jnp
xor
xchg
mov
or
test
sbb
push
fildl
fadds
pop
imul
int
divb
rorl
pop
outsb
scas
inc
xor
cmpsl
jne
dec
jno
lds
lock
and
and
mov
push
ret
add
inc
pusha
xchg
and
mov
and
xor
inc
cmpb
ljmp
sbb
mov
out
jno
insb
sbb
shl
lods
pusha
pusha
int
test
lcall
in
in
dec
fadd
mov
mov
and
rorl
out
inc
mov
arpl
xlat
jge
rcr
je
jmp
in
mov
ficomps
inc
dec
lret
enter
loopne
add
popa
jnp
mov
pop
pop
mov
dec
inc
out
mov
fldl
loopne
xchg
jp
je
push
gs
stos
mov
std
enter
add
xor
mov
sbb
add
test
sbb
std
fs
in
pop
mov
jle
push
packssdw
mov
mov
out
cwtl
mov
scas
addb
jecxz
aam
cmp
mov
mov
pop
daa
push
adc
lret
mov
push
int
loope
mov
add
and
loopne
add
add
jge
push
je
in
cmp
ret
sar
mov
or
add
mov
pop
jne
rolb
clc
xchg
or
adc
xor
xchg
lret
int3
ret
push
cmpsb
and
xor
iret
icebp
jle
scas
adcl
addb
mov
gs
and
clc
inc
das
jne
insl
dec
adc
and
sub
shlb
loopne
and
frstor
fstp
int
dec
xchg
xor
jno
dec
testl
and
and
add
and
andb
sub
in
xchg
repz
out
push
xchg
outsl
insb
pop
movsb
shlb
int
addb
int
pusha
and
mov
mov
sub
in
xor
inc
sbbb
lods
dec
and
cmp
clc
daa
mov
loopne
sub
leave
incl
andb
add
add
jno
addb
fistl
push
inc
rolb
and
aad
loopne
xor
and
lods
loopne
out
adc
xchg
add
pusha
pusha
mov
pusha
iret
cmc
dec
das
int
sti
mov
in
push
mov
inc
cmc
pop
push
into
xor
mov
shrb
loop
stc
mov
dec
sub
out
bound
negb
push
sbb
add
loope
jmp
mov
iret
and
shll
mov
cmp
out
fisttpll
and
ret
jge
sti
inc
inc
dec
pop
jnp
dec
and
adc
fcompl
and
stos
inc
add
inc
clc
test
mov
jp
pusha
mov
dec
mov
sbb
mov
dec
repnz
cmpsb
rolb
and
sbbl
negb
mov
jno
sbb
ss
out
add
pusha
std
ja
inc
or
in
pushl
test
mov
add
mov
push
daa
pop
movsb
and
push
add
shlb
jge
adc
mov
or
and
jp
mov
jmp
cmc
jns
xchg
push
push
mov
addb
outsb
in
pusha
rcr
or
mov
pusha
pop
lock
xchg
jg
cmpsb
rolb
pop
aaa
inc
lock
movsb
loopne
add
cmp
addl
cmp
or
push
or
add
test
pusha
data16
data16
push
shlb
and
pusha
pop
xchg
dec
xchg
int3
mov
and
nop
jno
jno
lods
pop
fistps
sahf
ret
aad
adc
dec
fists
add
mov
andb
dec
lods
andb
stc
inc
out
test
sbbb
push
and
add
mov
mull
fstps
fwait
push
rorb
push
popa
cwtl
pushf
loop
ja
mov
clc
js
sti
add
popa
jnp
out
shufps
push
mov
fcmovne
xor
lock
pop
cltd
pop
fs
pusha
loopne
addb
mov
cld
outsl
xacquire
addb
and
cmp
pusha
and
movsb
rolb
mov
jo
dec
aad
cmp
push
in
add
cmc
jecxz
andb
push
mov
xchg
iret
lret
lret
ret
out
out
sub
add
inc
pmulhw
mov
mov
and
sbb
and
push
xorl
push
shlb
stos
addb
inc
inc
aam
xchg
andl
mov
lret
sbb
mov
fisttps
inc
pop
push
or
and
cmc
out
dec
insb
testl
jge
xor
outsl
xor
je
xchg
outsl
mov
add
xor
andb
inc
jne
xchg
dec
adc
int
lock
int
and
and
adc
add
adc
lds
test
and
jecxz
daa
xchg
sbb
popf
insb
cmpsl
lds
dec
loopne
sub
and
mov
inc
out
icebp
out
ret
jnp
dec
mov
jmp
xchg
andb
inc
jns
sbb
dec
nop
cmp
sub
dec
sub
cmp
ljmp
inc
pop
addl
and
mov
push
jo
popf
inc
test
mov
nop
fdivrp
out
rorl
xor
and
ret
sahf
push
inc
inc
insb
mov
mov
mov
sbb
jp
loopne
add
or
nop
xchg
lea
inc
fildl
mov
addb
scas
mov
mov
int3
mov
xor
ja
popf
add
int3
daa
xor
pusha
andb
push
popa
xlat
rorb
int
inc
and
xchg
arpl
mov
jno
mov
or
add
mov
and
insl
fcmovnbe
jbe
lcall
pop
dec
inc
xlat
nop
mov
push
ret
insl
mov
in
pop
gs
movsl
inc
lods
and
mov
and
push
or
xchg
out
insb
add
loopne
int3
test
andb
pop
sbb
push
inc
mov
lret
lcall
cmp
dec
inc
push
test
add
arpl
jl
sti
fildll
pusha
xchg
mov
fidivl
adc
test
sub
shr
call
xor
adc
pusha
ljmp
jg
fabs
sbb
test
rclb
lea
mov
mov
push
push
sub
jno
aaa
or
inc
sbb
fistl
cmp
xor
xor
ret
loopne
rcll
jnp
fadds
and
and
ret
in
cmp
mov
mov
jbe
add
rolb
and
and
pusha
inc
icebp
and
loopne
pop
into
out
cmpsl
sbb
cwtl
mov
sbb
shlb
mov
arpl
pusha
shl
jnp
js
inc
orb
and
pop
js
push
xchg
cmp
shlb
jmp
arpl
mov
push
pop
pop
mov
lods
and
ret
popf
int3
or
pusha
mov
and
or
or
sub
sub
lahf
test
mov
mov
loopne
adcl
inc
jmp
andb
dec
pop
cs
and
enter
stos
inc
inc
out
mov
addb
addr16
push
shlb
lock
adc
dec
or
loopne
inc
add
and
shll
pop
bound
iret
fcoml
repnz
sbb
sbb
xchg
sbb
rcrb
loopne
mov
loop
scas
shrl
test
inc
test
inc
push
in
rcr
jnp
shl
dec
inc
pop
xchg
lods
inc
imul
pusha
lods
rol
add
cmp
std
mov
andb
xor
push
lret
pop
and
mov
push
pusha
rorb
addb
adc
sub
mov
loopne
push
pop
pop
and
loopne
mov
sbb
cwtl
adc
shlb
add
sub
mov
push
ss
dec
push
loopne
addr16
ret
cmp
test
add
mov
std
es
inc
sbb
add
movsl
xor
idivl
popf
jb
xor
pop
cmp
and
addb
inc
inc
ucomiss
add
icebp
pop
sbb
imul
daa
cltd
popf
push
imul
gs
mov
sarl
adc
repz
stos
loopne
pop
and
lods
and
xchg
push
dec
jg
fisubrl
add
inc
inc
lds
call
test
or
loopne
pusha
pusha
mov
push
les
add
jno
dec
mov
push
add
inc
and
aas
mov
and
mov
loopne
push
push
out
scas
add
lcall
push
popf
mov
push
sti
jp
test
push
push
lret
push
gs
stos
inc
cld
notl
scas
push
jo
and
lds
mov
cmp
pusha
rolb
or
and
pushf
int3
rolb
inc
pop
popa
popa
test
jne
mov
inc
iret
pop
popa
lods
and
inc
std
out
cmpsb
and
xlat
in
xchg
xchg
add
insl
movsl
lea
test
mov
adc
and
rolb
subb
pusha
and
aam
scas
addb
ljmp
cmp
enter
sub
scas
jg
cmpsb
inc
loopne
add
dec
aad
mov
cmp
adc
fbld
inc
inc
adc
mov
add
aam
loop
rolb
pushf
scas
pusha
dec
xchg
pop
out
out
rol
test
sub
or
sbb
or
xor
in
repnz
in
pusha
inc
cmp
cmp
sub
sysexit
mov
cmpb
out
mov
xchg
sub
loop
rcrl
int3
adc
pop
mov
shll
xorl
fildll
fs
das
push
repnz
jg
jmp
arpl
aas
xor
sub
jbe
loopne
shlb
clc
jge
and
andb
push
inc
ljmp
and
and
inc
sub
mov
clc
loop
xorl
loopne
mul
push
cltd
mov
not
push
add
test
or
and
pop
popf
je
test
lods
and
xor
or
and
and
add
pop
pop
loope
fists
out
add
jg
fst
mov
add
and
loopne
mov
mov
pusha
adc
pop
adc
out
mov
repz
sub
and
mov
cli
add
mov
ffreep
push
mov
pusha
loopne
cli
jmp
cmpsb
loopne
std
stc
gs
aam
add
lret
lret
mov
and
push
pop
jne
push
pusha
and
mov
ljmp
inc
out
js
pop
lret
or
addb
jo
sub
add
and
lret
rolb
dec
cmp
push
mov
test
add
mov
shlb
push
stc
mov
inc
sbb
pop
inc
jne
adc
push
out
gs
push
sub
add
pop
mov
mov
push
sbb
push
mov
in
sahf
ffreep
mov
arpl
sub
pop
mov
sbb
jb
sbb
daa
test
loopne
adc
loopne
fcoms
mov
addb
add
rol
cmpsl
mov
call
xchg
sbb
daa
lret
push
popa
popf
dec
notl
xchg
push
xchg
mov
adc
stos
inc
loopne
sbb
dec
popa
adc
inc
push
sub
cmp
mov
stos
push
ret
mov
fsubp
mov
shl
int3
xorl
loopne
loope
outsl
lods
in
aad
shl
sti
lea
rorb
shr
push
mov
inc
cmpsb
loopne
dec
xchg
repz
out
test
orb
in
test
shll
iret
fisttps
pusha
add
pop
or
pusha
fmul
mov
nopl
push
and
xor
loopne
xchg
test
pusha
mov
cmp
push
pusha
pusha
push
mov
lcall
xchg
cmp
dec
mov
mov
sbb
mov
cmp
roll
shl
mov
loopne
push
sahf
mov
pusha
adcb
shrb
and
stc
xor
adc
and
lret
adc
cmpsb
loopne
jge
add
sarb
sar
dec
inc
add
pusha
xlat
add
cmpb
movsl
sub
mov
xorb
test
pusha
xchg
xchg
adc
mov
xchg
orb
xchg
sub
outsb
iret
fnsave
inc
xlat
shrb
inc
pusha
loope
popa
addb
aad
ret
jg
dec
xor
loopne
data16
fdivl
inc
clc
mov
mov
test
cltd
out
mov
out
sub
jl
out
and
jae
pop
scas
mov
loopne
mov
ljmp
pop
pop
loopne
or
loopne
mov
stc
xchg
mov
push
lcall
mov
push
fimull
and
loopne
out
ds
aaa
and
outsl
std
rol
rcrb
and
jmp
cmpsl
and
stc
in
push
shll
jne
adc
ficoml
mov
xchg
lods
mov
stc
mov
xchg
out
cmpsb
and
xchg
or
andb
mov
inc
push
and
idivl
and
std
lock
enter
sub
and
mov
mov
not
inc
cwtl
loopne
cmp
mov
jns
and
and
mov
loopne
in
jp
lret
shl
mov
push
add
pusha
cmp
int3
jg
and
sub
push
lods
shlb
dec
fiaddl
rolb
jo
or
push
mov
sbb
bound
cltd
mov
pop
inc
mov
dec
and
or
idivb
cmp
aad
cmpsb
mov
mov
imul
fsub
and
out
in
insb
stos
inc
inc
jmp
mov
lret
add
dec
in
into
mov
xchg
shlb
jmp
arpl
or
mov
xchg
or
cwtl
or
cmpb
pusha
and
std
movsl
lret
out
test
mov
sub
sbbl
insb
or
inc
test
add
mov
daa
sub
mov
pusha
mov
ret
add
std
inc
cmc
clc
or
and
pusha
cmp
jg
iret
and
jbe
dec
jmp
cmp
shl
loopne
das
push
rolb
out
pop
mov
andb
and
call
pusha
pop
ds
sub
fists
add
pop
inc
mov
xor
les
sti
test
shlb
and
loopne
aam
sub
push
add
mov
subl
pop
inc
fwait
bound
and
jp
cmp
xchg
xchg
in
xchg
add
sub
inc
fs
movsl
pop
pushf
in
les
addb
jbe
add
jne
in
je
dec
dec
fdivl
stos
mov
xor
nop
add
andb
inc
add
xchg
jecxz
and
mov
movsb
pusha
inc
pop
pop
or
add
xchg
int
cmp
ss
and
jae
mov
pusha
loopne
and
mov
mov
sbb
jmp
cwtl
dec
mov
push
dec
pusha
cli
std
jne
add
push
xchg
sub
push
and
push
mov
push
lods
neg
pop
dec
xchg
inc
cli
xchg
lea
daa
and
xchg
daa
shld
pshufw
mov
jg
test
pusha
add
daa
outsb
push
sub
add
repz
testl
scas
and
mov
mov
jb
fdivr
movb
xchg
mov
xor
push
xchg
andb
cs
and
addl
movsb
rolb
aad
dec
movl
and
nop
mov
add
aas
das
lahf
stos
cmpsl
arpl
into
pop
xor
scas
lds
mov
stc
cmp
popf
out
and
std
sahf
mov
filds
mov
int
andb
adc
push
add
lock
adc
addb
aaa
jae
xchg
mov
xchg
ljmp
out
mov
loopne
lret
enter
push
fistpll
and
or
inc
mov
loopne
pop
mov
adc
bound
add
fs
jge
adc
xor
loopne
cmc
lea
sbb
popf
inc
stos
mov
adc
sbb
in
add
pusha
inc
mov
push
loopne
or
mov
rolb
and
loop
and
loopne
sub
pusha
fbld
out
out
mov
mov
ret
addr16
rcrl
into
into
push
mov
or
mov
fcomi
out
aas
adc
movsl
hlt
test
mov
mov
or
mov
sahf
inc
or
rcl
cwtl
sbb
jge
mov
loopne
push
inc
sahf
add
loope
add
add
mov
or
push
addb
pop
out
inc
lcall
ss
loope
iret
scas
jnp
test
shrb
push
add
inc
imul
add
jne
pop
ljmp
add
xor
or
andb
xchg
push
outsb
jbe
pop
in
test
int3
std
into
mov
cmpb
repz
sbb
mov
dec
mov
dec
mov
dec
mov
mov
push
loopne
rolb
mov
pop
add
cmpsl
shlb
xor
inc
cmp
idivb
lret
nop
sbb
jge
negl
add
xchg
pop
lahf
test
cli
cmpsl
cli
fdivrs
rol
mov
pop
push
and
repz
and
mov
dec
scas
mov
shll
add
push
and
bound
rorb
pusha
orb
xlat
add
addb
add
loopne
int
mov
inc
adcb
std
ss
test
inc
push
xchg
loopne
sbb
clc
xor
or
loopne
push
add
pop
cmpsb
inc
mov
mov
mov
inc
mov
add
or
mov
xor
mov
mov
mov
mov
scas
loopne
insl
dec
or
fs
outsb
dec
in
adc
out
mov
pusha
pusha
fwait
dec
push
pinsrw
mov
lea
add
popf
cmp
repz
jae
push
cmp
jo
les
sbb
inc
add
mov
aaa
out
or
loopne
cltd
cwtl
loop
cmovl
je
fninit
mov
sub
pusha
xor
loopne
mov
mov
and
into
inc
cmp
adcl
sub
mov
stc
jbe
rolb
mov
andb
mov
testl
in
mov
add
arpl
mov
lret
test
mov
cmp
addl
mov
xorb
sbb
loope
call
repnz
fcompl
mov
inc
fcomip
imul
mov
mov
mov
jg
add
dec
arpl
dec
add
cs
add
movl
idiv
sbb
sbb
pop
xchg
sbbl
rolb
inc
mov
xchg
dec
cmp
pusha
mov
shrb
jnp
movsl
adc
pop
fldl
dec
aas
sub
mov
cmp
lahf
xchg
jae
mov
dec
xchg
fists
shr
loop
ss
push
add
sbb
outsl
mov
mov
pop
cmp
ljmp
add
ficoms
outsb
dec
pop
ds
mov
mov
imul
scas
add
sarl
imul
mov
add
loopne,pn
ja
xchg
pop
or
pusha
and
out
cmp
adc
jns
mov
mov
ficomps
int
push
sahf
sahf
push
loopne
cwtl
sbb
mov
cmc
pop
out
or
mov
rcl
mov
push
cmp
dec
xchg
pop
hlt
push
loopne
cmp
fwait
cmp
clc
je
loop
das
rol
shrb
add
loopne
shlb
pop
xchg
xchg
lcall
int3
js
dec
mov
mov
test
pusha
fwait
pop
leave
dec
inc
repz
mov
sbb
inc
nop
adc
mov
mov
popa
cmp
xor
add
mov
xchg
jmp
jl
sarl
add
stos
ret
mov
mov
inc
pusha
mov
and
es
mov
xor
mov
insl
adc
rol
sub
add
jb
xchg
es
and
iret
pop
loope
xor
lcall
inc
pop
in
jo
dec
cmp
stos
add
push
cmc
data16
adc
and
pusha
sbb
cwtl
arpl
lcall
adc
test
loopne
ja
push
pop
lods
shlb
and
int
push
ja
mov
fisubs
rolb
cli
movsl
add
mov
arpl
into
or
gs
outsl
and
and
ss
sbb
movsb
inc
orb
pop
push
and
loop
mov
jg
pop
lcall
insb
out
xchg
mov
and
sub
loopne
xor
in
pushf
sub
rolb
and
push
xlat
xor
or
and
push
fisttpll
shlb
sbb
imul
mov
rcrb
pop
add
fsts
add
shrl
mov
adc
push
pop
rclb
std
out
push
and
loopne
dec
hlt
cwtl
mov
test
sub
shl
ja
fidivrs
adc
cmp
jp
loop
xor
ljmp
xor
ljmp
jae
fwait
lds
hlt
dec
in
sbb
movsb
and
adc
shll
lret
cmp
fisubrl
pop
jl
mov
arpl
xchg
shlb
pusha
mov
pusha
insb
mulb
rolb
adc
adc
mov
mov
jns
inc
inc
push
loopne
filds
and
pop
pop
cmpsb
loopne
push
fisubl
mov
sbb
inc
popa
push
push
mov
ret
sti
repz
mov
clc
lahf
inc
xlat
in
loope
aad
push
popa
sahf
mov
adc
cltd
les
stos
and
dec
inc
sbb
outsb
mov
cmp
test
add
xchg
lret
gs
lret
or
add
into
sub
and
sbb
jle
dec
xchg
mov
mov
mov
inc
pusha
jecxz
xchg
add
loopne
xor
push
jmp
mov
out
sub
loopne
shlb
inc
adc
adcb
cmpsb
pusha
add
dec
das
pop
mov
test
adc
fwait
adc
popf
rcll
adc
add
mov
mov
sti
call
arpl
lret
dec
scas
gs
sti
jmp
aad
inc
add
pop
int3
adc
andb
and
shl
scas
mov
imul
pusha
jp
sub
add
adc
lret
sti
jns
and
jecxz,pt
and
mov
out
sub
andb
outsl
mov
push
mov
add
mov
add
push
sub
sbb
insb
stos
mov
cmp
xchg
icebp
fs
inc
dec
mov
daa
in
loopne
ffreep
out
fwait
cmp
rolb
mov
add
dec
sub
sub
inc
push
add
and
nop
sbb
jbe
in
enter
or
sbb
sbb
adc
test
inc
and
jnp
mov
fsubl
mov
push
test
pusha
mov
sti
hlt
cmp
xchg
and
dec
ja
or
icebp
push
aam
cli
arpl
call
lds
xor
pusha
xor
idivb
add
inc
pusha
idiv
add
adc
mov
and
xor
xchg
ja
shlb
in
addl
andb
int
mov
pusha
dec
js
or
and
cmpsb
pusha
inc
adc
mov
sbb
and
insb
arpl
insl
mov
push
outsl
jno
push
xor
jne
cmp
sti
sbb
push
dec
xchg
fstpl
push
loopne
shlb
xchg
stos
inc
add
jno
ss
addr16
pusha
rcr
outsb
xchg
fstp
adc
and
cli
mov
inc
inc
jge
push
mov
inc
rcrb
and
cmp
pop
push
push
mov
lret
imul
adc
inc
ficomps
cmpsl
sti
jbe
jecxz
cli
out
popa
jmp
loopne
mov
adc
sub
pusha
push
das
outsl
loop
ret
jnp
popa
into
sbb
and
shlb
inc
sarb
or
jmp
xor
pusha
jnp
sti
lcall
loope
imull
adc
in
addb
loope
jp
int3
pop
dec
int
imul
test
sbb
adc
and
lcall
out
adc
jge
les
inc
inc
and
mov
mov
lds
jae
jbe
out
xor
pusha
fisubl
addb
mov
jl
ljmp
inc
push
mov
xchg
mov
arpl
loopne
inc
leave
inc
aas
jae
ficomps
shlb
enter
pusha
jo
pusha
and
pusha
roll
jbe
pop
or
addb
lahf
sahf
jge
push
notb
pop
inc
sbb
addb
jb
out
cmp
shr
sbb
aas
xchg
pop
mov
mov
cli
or
mov
leave
inc
push
and
pop
rorl
inc
cmp
repz
out
mov
mov
mov
mov
pusha
dec
mov
adc
sbb
xchg
mov
inc
and
lret
mov
lahf
ret
imul
test
loopne
pushf
ret
imul
mov
mov
mov
or
mov
and
or
add
lods
add
inc
push
loope
xor
pop
adc
addb
pusha
push
jb
jbe
rcr
mov
add
imul
or
jmp
out
stos
and
xchg
and
add
neg
sbb
addb
push
add
push
inc
loopne
mov
dec
daa
insb
adcl
pusha
jmp
mov
lret
cld
adc
add
pop
jge
push
loopne
mov
andb
je
and
mov
andb
push
and
shlb
inc
loope
rcrb
icebp
out
jl
loopne
int
mov
cli
xchg
pusha
mov
cmp
inc
stos
loopne
test
add
mov
inc
xchg
jnp
inc
or
rclb
and
inc
xor
cld
mov
addb
rcrb
add
sti
sub
jmp
mov
movsl
in
jo
pop
sbb
scas
jnp
hlt
pop
mov
mov
and
decl
sbb
cltd
push
dec
jbe
aam
sub
addb
aam
hlt
mov
mov
sarl
mov
xchg
aas
cmp
inc
xchg
cmpsl
push
mov
cmp
xchg
inc
scas
push
dec
push
test
rclb
add
mov
xchg
and
pop
cmp
adc
bound
add
shrb
sbb
fadd
jo
xor
in
insl
in
add
stos
mov
inc
pop
in
lock
sbb
add
add
out
mov
fnstcw
pop
sbb
lods
out
pop
in
mov
pop
xor
sbb
or
mov
xlat
xlat
into
andb
and
ss
push
pusha
pusha
cld
jno
imul
push
pusha
stos
mov
xor
mov
shl
fs
andb
add
jl
popa
call
icebp
fwait
push
js
push
mov
mov
adc
cltd
mov
out
enter
cwtl
cmpsb
rol
and
mov
jno
inc
inc
dec
stos
adc
xor
adc
lods
rolb
xchg
das
mov
add
mov
and
push
push
cmp
and
jmp
or
and
sbb
or
inc
adc
pop
jbe
dec
sahf
pop
sub
add
out
xor
xor
je
sub
addb
loopne
add
mov
addb
iret
cmpsl
js
outsl
mov
or
andb
pusha
cmpsb
inc
and
and
adc
shlb
xchg
inc
aad
je
and
dec
lret
ljmp
loopne
ret
sarb
inc
cmp
inc
inc
stos
aaa
cmpsb
andb
cmpsl
scas
and
sar
aaa
add
pusha
jo
xchg
sub
add
ja
rolb
cli
jmp
shll
repz
clc
and
mov
push
shl
insl
mov
shl
push
xchg
inc
jbe
mov
sub
pusha
jecxz
outsl
leave
cltd
andb
jl
mov
add
xorb
std
sbb
add
mov
fcoml
jae,pt
cmp
cld
jmp
and
sub
out
push
pop
je
mov
sub
sub
fists
push
pusha
mov
idivb
or
inc
inc
mov
and
xchg
mov
mov
mov
xchg
add
jno
xor
lahf
dec
mov
and
sbb
mov
insl
fnsave
popf
fidivs
xchg
sbb
cmp
addb
sub
shrb
call
push
pop
mov
inc
xchg
sarl
lret
jb
xor
test
pusha
or
pop
and
inc
and
pusha
insl
and
and
push
and
pop
lock
mov
pusha
ds
xor
add
imul
lock
inc
fisubs
jne
out
xchg
shll
and
and
add
das
test
jnp
aad
loopne
xor
mov
mov
push
mov
xchg
aas
pop
cmp
jecxz
or
sub
adcb
sub
add
pop
jae
mov
dec
dec
addb
sbb
loopne
jno
and
add
inc
stos
mov
lret
push
jp
daa
adc
stos
rolb
inc
in
xor
nop
xchg
ljmp
imul
inc
mov
push
pop
sub
mov
pusha
xchg
ljmp
xchg
mov
addb
lds
cmpsb
addb
les
fmuls
test
cmp
sub
inc
add
shlb
lods
mov
push
enter
pop
gs
sbb
push
sbb
mov
add
mov
inc
add
loopne
add
mov
push
jl
mov
sahf
xchg
jecxz
addb
inc
shll
ret
fisubl
lret
jp
out
mov
pusha
xor
outsb
idivb
push
xchg
xchg
clc
pusha
and
and
dec
mov
xor
lock
cmp
jmp
fadds
mov
push
inc
add
xchg
mov
cmpl
and
pop
inc
cmc
ss
arpl
mov
jb
add
jbe
and
mov
jge
stos
lcall
mov
inc
loop
mov
and
mov
sbb
and
clts
and
inc
and
daa
ret
sub
lock
loopne
out
dec
pop
mov
dec
test
mov
push
movsl
in
jmp
shl
jge
add
and
xor
enter
unpckhps
pushf
xchg
lret
mov
aas
int
dec
push
insl
adc
add
cmp
xchg
addb
push
fs
sti
leave
or
pusha
mov
add
jb
jp
arpl
adc
into
divb
dec
ds
jae
push
out
addb
mov
and
shr
and
clc
aaa
scas
jmp
sbb
jb
sub
cmp
negb
xchg
daa
mov
in
add
pop
bound
rolb
ror
mov
adc
adc
mov
or
inc
pop
icebp
lret
repnz
push
std
xchg
scas
inc
inc
add
pop
cmc
sub
addb
pusha
pushf
xor
loopne
jmp
pop
shrl
mov
dec
jl
xor
leave
sbb
sti
mov
inc
inc
rcrb
int3
pop
cltd
xor
stos
inc
cwtl
pop
xchg
icebp
mov
lahf
shrb
inc
jge
adc
xchg
push
insb
nop
sub
and
loopne
in
ret
lods
push
dec
lock
cmpsl
push
gs
mov
call
mov
movsl
lcall
mov
lcall
js
fiaddl
nop
and
adc
in
lcall
mov
push
scas
xchg
xlat
sbb
xor
imul
outsl
test
andb
daa
in
or
add
test
and
mov
jns
cmpsb
andb
and
mov
divl
sbb
push
inc
xchg
cmpsl
or
in
in
adc
iret
movsb
add
out
hlt
stc
dec
nop
leave
adc
add
pusha
dec
mov
lret
adc
cli
loopne
pusha
loopne
add
jge
pop
scas
rolb
jp
pusha
cli
inc
cmp
pop
sub
idivb
jge
movsl
arpl
push
lock
xor
or
add
cli
inc
in
daa
lcall
dec
sub
pop
sub
add
push
outsl
cmp
std
cmpsl
jae
popf
inc
dec
mov
xor
jcxz
leave
cltd
cmpsb
loopne
pop
cmp
sti
jne
and
inc
xor
sar
xchg
jle
add
imul
xchg
in
icebp
mov
and
nop
sbb
mov
pusha
pop
adc
das
dec
sbb
or
loopne
outsl
pop
xchg
lock
jno
pushf
shll
mov
jecxz
loopne
dec
lret
fwait
dec
stos
inc
add
rorl
sbb
shlb
and
mov
insb
xchg
sub
sub
add
sbb
dec
sub
dec
xchg
mov
inc
movsl
sbb
rcrb
adc
and
adc
inc
outsb
mov
jne
sahf
xchg
mov
mov
imul
mov
loop
mov
or
pusha
loopne
inc
add
loopne
add
loopne
fcom
mov
rorb
and
or
daa
mov
sbb
mov
and
loopne
les
pusha
pusha
je
loopne
mov
rcl
sbb
xchg
sub
sbb
jnp
xchg
mov
adcb
sub
or
addb
lcall
popf
sub
loopne
push
inc
ret
sti
add
sub
shl
outsb
and
pop
add
sub
mov
mov
imulb
loopne
push
in
mov
mov
loopne
test
inc
cltd
jp
pop
dec
fidivs
call
les
shlb
rol
ret
pop
inc
ret
stc
in
xchg
mov
andb
add
fs
dec
xchg
cwtl
add
mov
cli
mov
jge
and
pop
cmp
cmp
loopne
cmp
and
pop
or
mov
add
ror
push
shrl
inc
sarl
imul
loopne
clc
fbstp
xchg
addb
sbb
xor
testl
mov
dec
mov
pusha
into
insl
fwait
out
dec
xor
xchg
pop
cli
push
lds
and
mov
leave
xor
aam
push
and
pop
push
push
ret
and
cld
mov
fwait
inc
sub
push
inc
mov
test
pusha
ret
inc
dec
icebp
scas
inc
pop
jp
shlb
bound
pusha
sti
outsb
mov
pusha
dec
mulb
mov
pusha
add
data16
pop
popa
mov
pusha
and
xchg
and
xor
fs
loopne
lea
pop
xlat
dec
ja
xor
insb
repnz
loopne
imul
dec
out
aad
fwait
andb
mov
shlb
imul
and
lods
mov
mov
inc
dec
jbe
fiaddl
push
rolb
insl
lock
jae
roll
add
outsl
pushf
shlb
push
lret
or
leave
xorl
cmpsl
jl
rolb
flds
repnz
jl
dec
fs
push
insl
and
and
sub
ret
xor
inc
xorb
and
popf
daa
xchg
inc
fisttpll
add
mov
mov
mov
popa
lods
rolb
icebp
fs
leave
push
xchg
and
orb
xor
shlb
pusha
xchg
dec
add
lods
ljmp
mov
rolb
dec
es
inc
pop
sarb
mov
inc
sbb
ret
mov
lds
daa
xlat
sahf
test
mov
icebp
cmp
rcrb
pusha
pusha
out
pop
and
xchg
push
mov
mov
loop
shlb
pop
push
cwtl
filds
pusha
inc
pop
clc
jl
insb
pop
jae
mov
dec
pop
repnz
andb
ds
xchg
pop
xlat
push
outsl
inc
mov
xor
cld
movsl
sar
stos
andb
ficomps
cmp
and
pop
stos
outsb
push
out
in
jecxz
xchg
mov
inc
insb
jbe
mov
cmpsl
dec
out
mov
xorb
test
rorb
loopne
push
mov
inc
cmp
call
pusha
pusha
sbb
add
jae
pop
fldt
aad
pop
jge
movsl
ljmp
outsb
stos
addb
cmc
mov
mov
sub
xor
mov
lea
js
ljmp
testb
mov
inc
loopne
pushf
push
or
mov
add
and
sbb
ja
jecxz
jo
repz
sub
mov
out
repz
testb
out
cmp
inc
in
fsts
or
cmp
test
mov
push
andb
pusha
mov
mov
notl
sarb
mov
sbb
sub
mov
or
mov
mov
jmp
adc
pusha
pusha
mov
and
int3
sar
dec
aad
addb
les
or
ficoml
jl
xchg
mov
movsl
inc
mov
mov
loopne
pop
out
pop
and
xor
xor
pusha
in
aam
js
dec
mov
loopne
push
inc
and
cmp
rclb
push
xor
das
or
xorb
mov
aas
loope
sub
test
shlb
dec
fistps
push
iret
bts
ljmp
sub
daa
xchg
pop
push
adc
clc
push
fistpl
ret
repnz
jb
or
pop
cmp
xchg
jl
mov
push
mov
clc
ljmp
outsb
adc
icebp
fstpt
fcomip
pop
mul
mov
cltd
rcrb
and
loopne
or
mov
adc
and
mov
loopne
jecxz
xor
cld
jae
mov
xor
int3
xlat
adc
stos
xchg
in
clc
and
orl
add
loopne
xchg
jl
clc
add
and
inc
call
add
inc
or
xor
add
add
sbb
xchg
subl
addr16
lea
loop
sbb
and
rorb
dec
les
sbb
lret
push
add
inc
dec
mov
mov
insb
outsl
lods
shlb
ds
pusha
daa
movsb
pusha
pusha
pop
inc
in
sub
cmp
sahf
jge
mov
out
test
jg
mov
lea
add
int3
pop
movsb
mov
stos
loopne
pop
in
jl
push
je
ret
mov
loopne
out
pop
je
cmpsb
rolb
xchg
adc
out
xor
test
andb
xchg
sbb
cltd
sbb
pusha
loopne
lret
push
mov
add
and
push
xor
sbb
addb
xor
mov
loopne
ljmp
jp
inc
dec
and
dec
sub
inc
icebp
mov
inc
inc
ja
pusha
shl
fistps
inc
sahf
lock
loopne
adc
pusha
inc
popf
icebp
jecxz
mov
mov
xor
cld
lcall
stos
lods
pusha
add
int3
fisttpll
sub
shll
jecxz
jno
jle
ror
test
inc
xor
addr16
mov
lods
cmp
fdivrs
jmp
sbb
jecxz
stos
out
inc
shr
pop
loop
outsb
add
cmp
mov
stc
add
pusha
fsubrp
xor
xor
test
add
mov
clc
adc
insl
mov
addr16
shll
sub
xchg
movsb
loopne
mov
test
dec
xor
dec
jno
fistl
dec
insb
loopne
popa
sbb
mov
addb
cmc
sub
and
push
inc
and
popa
cmp
addl
pusha
shll
pushf
xchg
sar
xor
adcl
xor
pusha
and
orl
ror
ljmp
add
rolb
rcl
and
fcmovu
call
aaa
jg
mov
lds
and
lock
cmc
jge
fwait
ss
neg
xchg
cmpsb
pusha
rcrb
pusha
loopne
aaa
adc
sar
stos
pusha
inc
push
sarb
mov
scas
inc
cmpb
hlt
sub
loopne
mov
jne
adc
andb
and
adc
inc
lret
push
jb
sub
aam
or
inc
gs
arpl
and
push
loopne
and
mov
mov
addr16
aad
sub
testb
call
les
mov
pusha
imul
pop
pop
imul
sbb
pop
imul
aam
pop
sub
sub
in
mov
in
lods
in
jg
out
cmp
cltd
inc
mov
ds
add
cmp
jne
shll
xor
push
inc
int3
push
leave
psrlq
into
pop
ds
test
mov
aad
push
ss
mov
pusha
addl
mov
sbb
cld
lret
loopne
les
inc
cmpsl
add
add
loopne
cmp
pop
and
pusha
pusha
sub
pop
add
and
addb
out
mov
shll
add
fisubl
pop
test
pusha
xor
stos
add
jbe
in
rolb
addb
movsb
inc
xor
jp
hlt
and
pusha
in
mov
mov
inc
inc
nop
inc
lcall
dec
lods
and
jg
jnp
shll
shlb
and
scas
addb
mov
mov
pop
push
mov
imul
lds
adc
inc
add
pop
mov
pusha
mov
lods
bnd
pop
xchg
bound
mov
and
mov
xor
mov
ljmp
mov
xor
in
das
iret
push
addb
sahf
insl
test
pop
inc
addb
addr16
cwtl
mov
insb
jnp
inc
les
and
sbb
mov
andb
mov
mov
loopne
bound
and
sub
sub
iret
repnz
subb
mov
imull
add
mov
mov
loopne
and
jg
push
add
mov
inc
adcb
cmp
xchg
scas
addb
pop
in
push
pusha
mov
push
sub
and
addr16
shlb
dec
and
addb
mov
in
cmp
inc
mov
sbb
pushf
fistpl
lret
test
mov
ja
mov
jo
push
jns
dec
xchg
test
mov
dec
adc
add
pusha
lock
in
rol
roll
mov
and
pusha
and
and
movsb
and
mov
inc
and
insb
inc
and
sbb
cmp
in
pushl
sub
inc
pop
mov
pop
inc
push
test
inc
fildll
imul
sbb
pop
stos
scas
add
xor
pusha
outsb
dec
movb
adcb
cli
dec
xor
add
inc
push
mov
jg
mov
push
in
mov
sub
xor
outsl
inc
in
inc
inc
loopne
mov
iret
jnp
add
iret
push
into
inc
dec
js
repnz
ja
and
shlb
add
xchg
add
mov
adcl
aas
jbe
push
inc
loopne
add
xor
loopne
popa
mov
addb
inc
out
iret
aad
addb
inc
jle
mov
add
addr16
fdivr
test
add
mov
xchg
xchg
mov
add
push
sub
pusha
mov
loopne
mov
xchg
stos
rolb
jo
mov
leave
testl
push
xor
bound
mov
push
out
jmp
push
jnp
and
dec
jg
popl
ficompl
dec
dec
mov
and
push
orl
lcall
cli
dec
pop
dec
je
out
adc
loope
mov
addl
orl
lret
shlb
ret
fsubrs
movntps
into
rcr
jne
sbb
leave
mov
and
rclb
inc
dec
das
arpl
mov
ficoms
inc
mov
mov
inc
int3
andb
cmp
mov
or
and
pusha
adcb
jne
inc
inc
pop
cld
les
dec
std
rclb
and
mov
pusha
subb
rol
and
cmp
mov
and
lods
jns
leave
nop
in
aad
and
pusha
hlt
icebp
sub
loopne
xchg
pop
jp,pt
push
push
leave
jg
test
in
in
pusha
inc
aam
loopne
xchg
add
inc
inc
cmc
cmpsb
rolb
xchg
xor
imul
std
dec
shlb
nop
clc
jb
lret
leave
add
ret
dec
jecxz
jle
adc
push
pop
ds
pop
xchg
inc
or
push
andb
jg
push
mov
addb
js
clc
cmp
andb
mov
mov
jle
mov
pop
inc
mov
leave
jno
fsubrs
stc
ret
mov
test
or
enter
rolb
mov
xor
cmpsl
imul
inc
xchg
add
push
dec
dec
sbb
movl
leave
pusha
popf
insl
shlb
mov
push
or
cmp
popf
shrb
rorb
adc
and
inc
and
fldl
stos
js
jno
rol
pop
xor
xor
and
loopne
cs
pusha
and
shlb
push
push
push
inc
int
test
add
mov
lret
dec
jmp
adc
adc
sti
sub
add
or
lods
inc
shlb
and
sbb
push
add
mov
icebp
push
loopne
mov
fsts
mov
and
ds
call
shlb
jne
inc
cltd
shll
js
jle
shl
fildl
push
loop,pt
bound
arpl
pshufw
push
pusha
shrb
pushf
hlt
sbb
andb
jp
or
inc
in
shlb
push
out
andb
jb
mov
shlb
and
loopne
daa
pop
test
push
loopne
inc
or
loopne
cs
mov
sbb
add
pop
and
dec
jnp
pop
mov
xchg
mov
js
loop
stc
push
mov
inc
clc
in
std
or
inc
mov
andb
dec
cmp
mov
sub
jae
aad
int
inc
cmpsl
mov
sub
cmp
mov
test
mov
fsubs
or
adc
add
xor
addb
or
shlb
lcall
push
loop
aaa
add
shr
mov
lds
shlb
sbb
mov
mulb
inc
add
popf
imul
inc
xchg
or
pusha
sbb
inc
ja
out
add
iret
sti
mov
and
jno
inc
fcmovnbe
push
push
or
mov
addb
out
cltd
aam
sub
mov
hlt
int3
fpatan
test
pusha
adc
add
cwtl
mov
adc
sti
add
data16
jecxz
sub
add
ds
push
add
mov
orb
xchg
mov
add
push
cs
mov
or
popa
outsb
push
mov
and
pusha
rcr
popa
jo
sti
mov
push
and
jbe
pmullw
jnp
sbb
gs
loopne
push
sbb
sbb
call
jl
popa
add
ja
ljmp
lahf
adc
out
mov
rcl
mov
rolb
cli
inc
lret
cmp
jno
gs
push
mov
add
aam
in
mov
adc
inc
sub
mov
loopne
clc
mov
mov
push
sub
lcall
push
push
pop
dec
jne
or
popl
insl
aas
sub
loopne
loop
nop
mov
mov
add
mov
rolb
addb
clc
scas
scas
and
inc
mov
xor
fldt
dec
lds
inc
test
adc
jg
jno
and
jmp
mov
pop
pop
out
out
jae
adc
dec
lcall
push
jns
mov
mov
pushf
enter
add
andb
nop
jp
pushf
xchg
loopne
mov
lcall
push
and
andb
scas
inc
mov
add
stos
test
imul
mov
stc
and
sbbb
pusha
shl
andb
jle
lea
mov
cmp
idiv
mov
jle
push
divb
jle
jo
shll
mov
add
das
cmp
or
scas
ljmp
ss
sbb
add
push
add
adc
inc
test
pusha
mov
xchg
push
testl
popa
mov
push
cli
int
jg
iret
lahf
mov
in
movsb
andb
pop
rcrb
push
dec
dec
xor
mov
loopne
aas
int3
clc
jg
sbbl
xlat
ret
jmp
ljmp
add
dec
loope
cltd
hlt
inc
fisttpll
pusha
leave
call
lods
jp
testb
pop
xchg
jne
inc
mov
inc
adc
or
dec
js
dec
xchg
shl
pusha
and
inc
jge
nop
stos
imul
xchg
and
lods
and
mov
pusha
or
shlb
ss
inc
lcall
cmpsb
pusha
inc
ja
fs
pop
push
je
mov
in
mov
push
loopne
jmp
pushaw
xor
sahf
pushf
cmpsb
loopne
sbb
pop
and
pusha
add
sub
add
mov
and
rol
add
enter
pushf
loopne
dec
jbe
xchg
loopne
ss
cli
enter
popa
dec
mov
mov
ret
sbb
pop
fimull
pusha
test
loopne
and
mov
test
shrb
aad
shlb
mov
inc
ret
fcompl
pushf
or
dec
int3
aam
mov
sahf
rcrl
rclb
dec
repz
push
cmp
xchg
lods
and
push
sbb
in
and
cmp
loopne
cltd
dec
lret
inc
inc
ror
adc
sarl
loope
mov
clc
jno
scas
sub
lcall
push
cli
inc
and
lds
pop
cltd
mov
pop
or
mov
inc
mov
repnz
clc
hlt
push
dec
bound
jae
fwait
js
jl
cmp
adc
hlt
mov
test
sub
arpl
add
aas
add
mov
loopne
jg
sti
in
mov
aas
ljmp
loopne
inc
ss
xor
andb
scas
add
jecxz
cmc
mov
shlb
out
jp
pop
andl
inc
and
loopne
push
ror
jno
imul
arpl
lods
and
adc
rorb
jmp
jnp
aas
gs
and
pusha
xor
pop
or
cmc
mov
lods
andb
test
shrb
xor
mov
sti
adc
movsl
repnz
jo
addb
pusha
inc
inc
cmp
divl
or
popa
in
mov
inc
aam
inc
out
fcomi
and
xchg
faddl
ss
push
push
pusha
xor
mov
pusha
mov
jmp
lret
lret
cltd
mov
loope
pop
dec
and
pusha
sbb
add
aas
fildll
stc
jno
lret
add
shrb
add
fcoms
inc
mov
ss
insb
lock
ljmp
test
shrb
arpl
xchg
dec
rclb
sub
xchg
dec
add
dec
inc
and
xchg
mov
lea
insb
hlt
imul
pop
mov
test
in
sub
inc
mov
loope
mov
outsb
js
ja
mov
outsl
xchg
pop
ror
push
push
and
test
loopne
xor
add
outsl
mov
ljmp
xor
or
daa
movsb
shlb
and
cmc
cmp
jmp
push
mov
mov
in
iret
xor
sub
dec
scas
mov
pusha
add
stos
inc
and
cltd
dec
sub
and
push
shll
out
lret
and
sbbb
mov
and
loopne
and
jnp
ficoms
mov
mov
and
inc
popf
xchg
and
pusha
ficoml
xchg
pop
pop
push
jno
dec
jmp
lock
and
loopne
inc
mov
and
and
sbb
out
xor
push
mov
and
inc
loopne
loop
and
jmp
mov
xlat
cmp
movsb
andb
out
lahf
jmp
jl
add
mov
mov
call
fadd
popf
clc
ficomps
inc
in
push
pusha
shlb
add
add
sbb
cmp
fisubrs
jmp
mov
and
and
mull
adc
and
test
mov
dec
daa
dec
sub
shrb
add
imul
out
mov
mov
clc
inc
cmc
fwait
mov
lds
in
push
push
adc
std
rcl
mov
imul
addb
mov
pusha
pop
jp
xchg
xchg
push
pop
mov
lcall
out
incb
dec
imul
stos
inc
rcr
in
or
mov
adc
inc
or
arpl
arpl
add
stos
int3
jbe
xchg
mov
or
js
out
aas
fstpt
mov
hlt
shlb
cmpsb
add
xor
mov
fcoms
xor
push
pop
fst
cmp
add
inc
sarb
pop
push
and
jmp
imul
mov
repz
data16
into
jno
enter
arpl
jp
icebp
lea
pop
sbb
xor
das
adc
ret
xchg
pop
jmp
shr
lods
xchg
enter
mov
xchg
test
xchg
xchg
out
push
mov
or
loopne
sarl
mov
adc
pop
fstl
les
xchg
push
and
inc
and
or
mov
hlt
lds
mov
mov
fisttps
je
pusha
subb
xor
jnp
pusha
add
mov
xor
and
push
mov
adc
addb
mov
imul
out
lods
mov
and
sub
jne
shlb
xor
inc
dec
iret
enter
gs
fs
jb
adc
inc
test
lock
push
xor
jge
dec
js,pt
sbb
xchg
xchg
popf
mov
int3
jmp
pop
movsl
je
and
cmp
add
popa
sub
and
scas
pusha
adcb
cwtl
jl
jno
xchg
inc
fmull
xor
xchg
insb
inc
xchg
cli
add
addb
cmpsl
push
pop
mov
pusha
mov
outsb
add
orb
adc
pop
push
push
jecxz
ret
add
ret
dec
pop
repnz
loop
aas
adcl
pusha
loopne
rolb
fdivrs
mov
pusha
mov
es
inc
mov
pop
aas
mov
jnp
add
or
and
pushf
std
push
loopne
inc
repnz
ljmp
andb
and
ljmp
loop
lds
stos
rol
nop
shrl
orb
testb
iret
push
sbb
andb
dec
nop
movsb
mov
in
cld
and
movsb
add
into
mov
mov
mov
mov
adc
mov
jp
into
lret
push
and
mov
pop
inc
mov
mov
and
inc
inc
mov
dec
sub
test
inc
xchg
pusha
lods
and
mov
xchg
jecxz
mov
mov
stc
xchg
mov
cmc
mov
popf
mov
mov
std
fstpt
sub
add
pop
negl
jno
addb
mov
shl
sub
shrb
inc
fucom
or
loopne
sti
popa
xor
mov
mov
pusha
ror
push
cmp
andb
jge
dec
addl
add
lock
loopne
mov
repnz
push
xor
pusha
and
loope
pop
mov
rorb
add
cmp
jb
or
and
inc
mov
cltd
mov
loopne
movb
cmpb
loopne
xchg
stc
bnd
paddw
cmpsb
loopne
mov
pusha
pop
pop
inc
jnp
pusha
loopne
jae
cltd
repnz
leave
pop
insl
scas
pusha
sarb
lea
sub
sbb
sahf
in
aad
pop
stc
push
mov
sbb
xchg
cmp
in
xor
add
and
cmp
addb
jns
pusha
rol
jae
pop
jae
out
lea
jmp
mov
shr
xchg
dec
outsb
adc
push
add
push
push
shl
std
sar
add
adc
xlat
sub
shrb
mov
inc
popa
fwait
test
loopne
addb
inc
xor
movsb
inc
and
shr
loopne
mov
in
or
fnstenv
dec
cmp
cltd
dec
in
stc
xchg
lcall
jl
shrb
out
sbb
pop
sub
add
push
inc
mov
add
add
lret
jae
inc
inc
imul
jg
mov
inc
mov
cmc
dec
sub
inc
pop
movsb
pusha
subb
inc
xorb
cmpsb
loopne
movsb
mov
adc
mov
iret
mov
jg
scas
inc
pusha
jecxz
enter
movsl
cmp
or
rol
loop
ds
jo,pt
mov
mov
out
and
mov
call
clc
test
mov
stos
int3
push
add
add
jmp
rcrl
mov
lcall
cmp
add
add
mov
jns
xchg
or
orb
filds
scas
add
mov
call
add
shl
cmpsl
jnp
mov
test
out
sub
sbbl
aaa
sbb
jg
inc
and
aas
xor
shlb
rol
jbe
test
mov
add
addr16
loopne
mov
test
loopne
out
outsb
loopne
loope
push
xor
add
add
add
and
jo
xor
adc
lret
mov
mov
inc
jle
loopne
pusha
pusha
jne
cwtl
pop
dec
mov
dec
push
fistl
lahf
dec
pop
pop
outsb
jmp
inc
clc
or
jmp
mov
inc
dec
push
push
pop
adc
mov
and
jle
and
jae
push
xchg
pop
or
sti
push
jmp
inc
jp
sub
sub
mov
pop
pop
imul
add
sbbb
mov
mov
rcrb
outsb
sub
push
mov
je
jp
inc
loop
shll
pop
nop
sbb
loopne
inc
sub
mov
data16
and
filds
add
lock
push
inc
loopne
outsb
mov
xchg
rolb
jecxz
pop
in
loope
loopne
aas
cmc
aaa
pop
bound
lret
pop
and
pusha
ljmp
mov
sarl
mov
xorb
aaa
ds
and
loope
addl
andl
jno
and
xor
xor
push
push
push
cmp
loopne,pt
sbb
mov
iret
and
push
or
shlb
mov
andb
xor
jmp
mov
push
mov
add
shlb
addb
andb
inc
rcll
shlb
sub
mov
xchg
sub
rolb
outsl
xlat
pop
inc
imul
mov
cwtl
pop
mov
test
fmuls
and
sub
jae
jge
dec
cmpsl
dec
cmpsb
mov
gs
ror
fwait
in
clc
jb
cmpsb
mov
adc
andb
ljmp
lcall
das
out
mov
nop
adc
pop
or
push
and
cmp
negl
sbb
cmp
add
pop
push
and
test
adc
jmp
fidivrs
andb
imulb
orl
push
pushf
sub
adcb
mov
loope
fsubs
and
andb
sarb
in
mov
andb
dec
cmc
sub
mov
or
pusha
xchg
push
sti
mov
addr16
push
mov
imul
test
mov
push
sbb
sub
inc
xor
push
push
stos
addb
ret
push
ss
sarb
outsb
pop
or
cmp
jae
out
jg
ret
and
cmpsl
mov
mov
rolb
popf
test
mov
sub
loopne
cwtl
jne
inc
out
jbe
xchg
ret
add
push
in
pushf
add
mov
mov
pop
stos
or
lds
clc
xor
lods
pusha
pusha
jb
add
imul
scas
add
ja
xchg
sbb
mov
loopne
adc
ret
pop
rolb
add
mov
and
in
mov
lods
std
arpl
xor
aad
stos
push
outsl
mov
notb
mov
add
subb
mov
and
ror
ljmp
call
mov
xor
scas
loopne
es
add
cwtl
adc
pop
stc
adc
cmpsl
push
mov
cli
cmpsl
mov
rorb
fidivs
push
loope
xchg
test
imul
es
imul
sub
movsb
pusha
mov
pop
cmp
add
cmp
push
orb
add
inc
cmpl
and
jmp
lock
and
xchg
inc
fidivl
sahf
inc
nop
hlt
aas
roll
xor
push
cmp
add
cmpsl
lahf
popf
pusha
jae
in
fsin
gs
fdivl
ss
push
inc
jmp
jp
inc
mov
and
stos
shll
push
xor
loopne
push
data16
sub
pusha
cltd
inc
mov
pusha
add
ret
in
int3
inc
dec
inc
cmpsb
and
mov
cmp
cmpsb
loopne
and
loopne
in
mov
andb
sbb
aad
mov
and
mov
push
jecxz
sbb
addb
in
mov
xchg
leavew
xor
movsl
jmp
inc
xchg
inc
adc
dec
inc
idivl
addr16
loop
movl
xor
pusha
cmp
fdivrl
add
cmpsb
loopne
fwait
add
loop
mov
ret
xchg
fmuls
inc
shr
mov
neg
gs
xor
incb
and
mov
movl
cmpsl
leave
aam
roll
and
xchg
inc
inc
pusha
dec
test
adcb
mov
loope
js
mov
nop
pushf
sbb
rol
jmp
pushf
inc
pop
sub
mov
outsl
mov
pusha
fistl
xchg
xchg
sti
bound
scas
or
mov
cli
jns
aaa
and
std
fbstp
mov
imul
addr16
mov
inc
push
loopne
jp
mov
loope
in
pusha
inc
je
add
aam
icebp
push
jge
pop
dec
mov
jmp
nop
mov
aas
outsl
bnd
popa
push
xchg
dec
in
mov
inc
pushl
jno
dec
mov
or
inc
mov
stc
sub
xor
arpl
inc
gs
pusha
push
je
enter
push
inc
cmp
iret
in
inc
popa
mov
jo
or
push
inc
add
and
loopne
call
icebp
jno
push
test
mov
aad
fnstsw
pop
rorl
test
mov
dec
lea
fistpl
das
mov
cmp
xor
push
fst
test
mov
xbegin
jg
out
jns
loopne
mov
insl
into
cmp
sbbl
sub
add
dec
push
popf
sti
leave
fwait
dec
cmpsl
int3
xchg
add
inc
mov
mov
scas
or
pusha
insb
stc
mov
and
pop
xchg
push
xor
push
imul
pop
shrb
xchg
stos
push
adc
inc
rclb
lcall
andb
and
inc
mov
aaa
mov
loopne
xchg
xor
popf
popf
and
popa
add
pusha
push
dec
rcrb
pop
push
mov
int
or
jo
out
ljmp
sbb
xchg
and
xor
adc
inc
and
pop
dec
mov
inc
ja
movsl
rorb
loopne
loopne
std
decb
push
push
out
xchg
gs
insl
sub
test
and
lcall
addb
sub
int3
fcmovnbe
cmp
aaa
test
pushf
ret
fisubs
xor
jle
pop
and
shlb
inc
and
mov
std
adc
ss
mov
lock
orl
and
adcb
mov
jmp
shl
add
sbb
imul
fisttpl
shlb
ss
pop
xchg
cmc
test
xchg
ficoml
lds
jmp
xchg
jbe
sbb
push
rcrl
fsts
add
mov
and
pusha
and
cld
aad
pusha
addb
loopne
iret
pop
lcall
js
loopne
xlat
pop
out
inc
leave
popa
sbb
inc
shlb
mov
in
vsubpd
andb
ret
sti
and
movsb
addb
or
and
shl
push
mov
mov
test
out
lret
call
mov
add
dec
ja
in
lahf
aas
pop
sbbl
cli
fnstsw
andl
mov
inc
nop
or
cmpsb
shlb
add
and
mov
mov
or
pusha
sbb
mov
mov
mov
fstps
mov
out
imul
cmp
ds
leave
sub
xchg
pop
cmc
aaa
jbe
jecxz
mov
out
mov
xchg
test
mov
out
loopne
sbb
mov
adc
mov
inc
mov
and
ss
addr16
push
inc
push
inc
mov
ror
scas
inc
pusha
test
pusha
mov
sub
and
lock
ret
adc
and
pusha
loope
mov
repz
xlat
inc
sbb
in
sbb
dec
leave
popa
mov
lret
shrl
ljmp
ret
sahf
daa
lea
loopne
mov
sbb
push
sahf
pop
push
shlb
xchg
lcall
pop
lret
into
stc
nopl
cs
inc
mov
push
inc
loopne
gs
shr
push
shlb
lods
es
dec
pushf
imull
mov
out
xchg
or
subb
inc
mov
pop
inc
das
jle
movsb
add
iret
outsl
outsb
in
push
add
or
inc
call
and
push
adc
repz
xor
loop
cmpsb
rolb
adc
and
inc
arpl
je
cs
add
xor
out
int3
sbb
jecxz
shl
cmp
ja
ficompl
inc
movsl
cmp
ds
sub
sahf
pop
mov
mov
and
adc
mov
inc
xchg
xor
xor
out
dec
ljmp
inc
shlb
and
scas
imul
pusha
add
add
cmp
test
loopne
cmp
mov
cltd
sbb
addb
add
iret
in
cmp
pop
pushf
xor
js
sub
mov
mov
leave
lds
inc
repnz
movsb
mov
push
and
testl
mov
add
pusha
jmp
pop
call
popa
mov
cmpl
rol
jo
adc
add
out
xchg
lock
je
dec
int
inc
rcl
xchg
and
jge
psllq
lods
mov
andb
xchg
jmp
inc
mov
push
popa
test
inc
inc
jle
std
push
mov
inc
dec
in
add
add
mov
aas
jp
inc
xor
mov
cli
sub
loopne
mov
fninit
je
mov
xor
adc
test
sbb
imul
lret
and
imul
ficoms
lret
aad
mov
stos
loopne
dec
nop
and
mov
sub
mov
add
xchg
gs
scas
pusha
inc
add
loopne
shl
xor
push
cmp
mov
andb
mov
xchg
cltd
lock
jae
sub
addb
sti
cwtl
fsts
loope
add
les
jecxz
shrb
es
aad
fistpll
fwait
jl
js
lret
xchg
xor
jo
dec
or
ret
lcall
pusha
xorb
adc
loopne
pop
mov
loopne
or
mov
mov
in
pop
clc
cmp
cli
enter
mov
mov
cli
inc
cmp
mov
adc
mov
ret
inc
mov
xorb
sarb
push
push
rol
jge
rolb
roll
fistl
jmp
mov
orl
cwtl
sbb
mov
pusha
ds
cmpsb
mov
add
into
in
pop
jecxz
lahf
inc
ret
cmp
push
mov
cltd
imul
aas
adc
negl
pop
cmc
xchg
lds
filds
xchg
shlb
mov
mov
xor
or
call
repnz
andb
mov
repnz
mov
and
and
pusha
add
pushf
adc
std
inc
inc
xchg
scas
shlb
xor
xchg
test
in
mov
js
xor
push
lods
jmp
xchg
sbb
pop
leave
inc
jp
stos
dec
aam
and
and
std
dec
jno
clc
mov
add
std
xchg
gs
sbb
es
add
mov
popf
xchg
out
pop
jno
hlt
push
insb
mov
lea
push
cmp
inc
cmpsl
lea
lcall
and
cmp
lret
scas
mov
xor
imul
in
ja
lods
and
rorl
rol
fs
xor
test
dec
pop
adc
and
cmp
pusha
add
shlb
pop
adc
iret
ret
jge
mov
addb
mov
shl
mov
inc
addl
inc
jo
loopne
pushf
mov
adc
in
ljmp
adc
jbe
xchg
loop
addl
addb
inc
mov
add
cmp
shll
cmp
mov
inc
jne
mov
mov
and
andb
sti
jle
addb
push
fnsave
and
push
ljmp
mov
scas
inc
inc
mov
dec
iret
ret
adc
add
rol
aaa
scas
shl
push
nop
cmp
pop
pop
and
lock
add
into
jp
sub
pop
mov
sarb
outsb
mov
cmp
hlt
adc
jmp
mov
mov
test
mov
mov
js
mov
out
bound
aaa
adc
xchg
add
xor
cmp
pop
or
shlb
jg
add
push
or
int3
pop
mov
loopne
xor
adc
cld
cmc
mov
mov
inc
mov
fiadds
and
dec
pop
aad
addb
mov
mov
xchg
push
and
into
adc
push
outsl
dec
arpl
inc
mov
and
sti
sar
in
sahf
xchg
push
push
pusha
loopne
insl
outsb
xchg
imul
jne
icebp
imul
xchg
and
loop
pop
jp
push
pop
ljmp
dec
out
inc
inc
jnp
mov
loopne
fimull
sub
pusha
dec
movsb
pusha
mov
jb
add
add
jbe
xchg
push
jmp
inc
dec
arpl
test
and
aaa
mov
lea
sahf
jp
jno
rolb
insb
mov
add
mov
jl
scas
je
addb
hlt
gs
inc
add
insl
sti
xchg
adc
insl
rol
subl
xor
push
dec
mov
ret
addb
mov
movsl
dec
in
mov
cmp
sbb
outsl
add
dec
scas
imul
and
dec
addb
mov
in
push
inc
arpl
and
add
inc
sub
inc
inc
sub
loopne
lcall
or
push
dec
dec
std
and
mov
pusha
imul
adc
popf
jne
scas
jnp
xchg
aas
paddusb
cmp
std
push
stc
addr16
or
leave
xorl
test
loopne
fldl
stos
fisubs
mov
ja
fwait
arpl
sbb
mov
nop
push
dec
clc
movsl
sbb
cltd
cmp
cmp
pop
sbb
mov
sar
pop
mov
xorb
jp
dec
addb
mov
rolb
and
shlb
test
inc
icebp
mov
jl
sub
inc
xor
mov
jne
addb
push
leave
insl
scas
setb
bound
mov
xchg
shlb
andb
scas
rolb
push
add
addr16
jge
lods
dec
sbb
cmpsb
inc
pusha
and
mov
lods
rolb
orb
imul
inc
mov
mov
enter
or
rcr
rolb
inc
shlb
int3
dec
mov
cmp
out
mov
push
xor
rcrb
gs
sub
and
int
mov
and
sub
pusha
jnp
add
loope
and
mov
es
cmp
inc
fcmovbe
out
mov
pusha
imul
dec
pop
cmp
fldl
scas
pusha
mov
loopne
repnz
daa
sub
mov
rol
movsl
xchg
out
push
roll
dec
xchg
jae
inc
jnp
mov
rclb
sbbl
pop
sub
and
inc
loopne
xchg
jecxz
pop
inc
imul
andb
jp
out
test
xchg
scas
pop
repz
pushf
imul
ret
popf
shr
sbb
push
xchg
add
push
shll
inc
insb
shlb
ja
fcoml
out
dec
addr16
and
and
mov
mov
mov
sbb
cmp
inc
mov
pusha
xor
xchg
out
fldenv
pop
out
pop
scas
add
and
inc
inc
pop
dec
push
ret
popf
xchg
ficoml
int3
enter
es
sarb
and
imul
push
add
add
sub
loopne
jb
mov
outsl
pop
cmp
daa
inc
addl
cld
aas
adc
andl
std
sub
mov
je
nop
sbb
push
dec
popf
or
pusha
cmpsb
and
add
pop
lods
sbb
push
push
xchg
pop
sub
xorb
add
push
gs
add
loopne
clc
jo
iret
pop
xchg
jmp
sbb
int3
dec
dec
xchg
xlat
sub
inc
push
cmc
test
mov
dec
jg
pusha
inc
outsl
jp
jg
pusha
add
mov
dec
jle
lods
andb
xchg
xlat
aas
syscall
mov
mov
and
inc
and
iret
cmpsl
jge
mov
xchg
aaa
xlat
adc
jp
arpl
pusha
loopne
mov
rorb
test
lock
and
and
jns
xor
rorl
add
pop
xchg
xchg
loope
mov
mov
and
xchg
and
inc
std
ret
nop
mov
pusha
inc
mov
jb
cmp
into
hlt
cmp
inc
mov
and
mov
hlt
imull
div
push
rol
mov
pop
hlt
xor
ret
mov
mov
jbe
inc
pop
xchg
mov
mov
cmp
insl
ret
movsb
add
out
jge
mov
dec
nop
or
add
pop
lret
jne
xchg
cmp
jno
inc
sarb
rcrb
jp
xchg
aaa
dec
popf
dec
pop
lcall
mov
rcrl
push
and
clc
lret
loopne
out
data16
enter
pop
mov
push
inc
xor
and
jecxz
mul
cwtl
repz
dec
cwtl
fadds
je
xor
mov
adc
or
jns
jge
add
mov
adc
rcrb
or
inc
or
and
rolb
inc
test
gs
repz
add
das
cmp
adc
shll
or
inc
sbb
mov
fcmovnu
jge
ss
aas
aaa
ds
rcr
push
jmp
inc
fs
add
shr
xchg
jb
pop
pop
imul
fldcw
lods
ja
add
adc
dec
mov
mov
jl
stc
pop
ss
mov
insb
cmpsb
loopne
and
gs
sti
jne
loopne
movsb
loopne
mov
loopne
mov
adc
pop
mov
les
cmp
lods
fcoml
inc
roll
pushf
lea
icebp
ret
test
add
sbbl
xchg
test
pusha
arpl
mov
jb
xlat
pop
repnz
adc
iret
and
imul
fcmovu
mov
and
rolb
fsubl
jmp
xchg
push
pusha
inc
lods
add
add
and
xchg
jg
movsb
add
xchg
mov
mov
movl
xchg
xchg
add
xor
and
addb
filds
rolb
enter
and
sahf
adc
das
mov
add
and
loopne
shlb
dec
ljmp
inc
fbld
gs
les
and
out
loopne
mov
loopne
mov
jge
pusha
loopne
and
addb
inc
shr
mov
inc
cmp
addb
jbe
pop
loopne
mov
and
out
out
add
or
fs
jb
cmp
pop
mov
pop
dec
fmul
pop
or
out
and
inc
jne
and
in
inc
add
sbb
mov
inc
cmpsb
pusha
rorb
lock
pop
xchg
popa
adc
test
inc
lea
fstpl
imul
aas
aad
cld
stos
rolb
loopne
mov
int3
icebp
iret
aas
sarl
inc
cwtl
pushf
outsl
xlat
mov
and
out
out
rol
mov
cltd
test
mov
cmp
das
sub
add
or
imul
lds
cmp
xor
xchg
xchg
aam
cwtl
sbb
add
add
scas
loopne
imul
mov
scas
shlb
push
shlb
push
dec
jl
and
mov
and
fcmovu
decl
add
int3
cltd
cmp
ret
fnstsw
arpl
or
inc
push
shll
inc
adc
mov
cld
ss
jge
lock
enter
enter
add
shl
add
inc
add
push
mov
and
mov
pop
sahf
dec
aad
sub
repnz
xchg
jne
add
repnz
pop
xor
rcrl
mov
loopne
aas
shrl
movsl
shll
add
and
leave
or
mov
dec
push
imul
add
rolb
xor
test
loopne
cltd
mov
pop
xchg
xchg
pop
mov
std
cmp
or
jg
push
pusha
and
pop
mov
mov
add
cmpb
pop
push
mov
fwait
inc
hlt
dec
shl
std
push
cmp
cltd
push
addr16
cmp
cs
xor
sar
xchg
mov
mov
push
mov
add
xor
and
sub
dec
data16
repnz
inc
dec
adc
push
mov
mov
inc
subl
inc
adc
test
mov
xchg
fimull
iret
mov
cltd
mov
out
cmpsb
addb
mov
rorb
andb
push
outsb
addb
inc
insb
and
or
pop
loopne,pn
stc
pop
sbb
clc
les
sub
pusha
loopne
rolb
and
pusha
inc
push
inc
or
andb
xlat
mov
pop
ret
lods
andb
mov
cmova
pop
in
cmp
loopne
inc
mov
loopne
frstor
inc
in
and
or
aam
test
sbb
lock
das
int
stos
scas
rolb
lea
jnp
lahf
es
shll
and
inc
cmpsb
pusha
andb
std
push
divb
push
je
test
stos
dec
adc
stos
mov
adc
mov
ja
stc
popf
fisttpl
push
sub
mov
adc
or
push
icebp
xlat
flds
add
retw
fsubrl
jae
inc
mov
mov
pusha
add
pusha
pusha
mov
push
or
mov
aaa
stc
and
add
insb
dec
rcrl
loopne
cltd
out
cmp
sub
rcrb
fcoml
xor
pop
mov
outsb
addb
mov
pop
rcll
mov
mov
xor
andb
loopne
sbb
subb
mov
cmpsb
and
shlb
mov
lret
out
in
dec
jle
cs
pop
outsb
in
scas
addb
pusha
shlb
add
dec
fistpll
dec
movsl
imul
fistpl
lods
int3
or
inc
test
loopne
cwtl
stc
add
pop
dec
push
out
test
push
loopne
mov
shlb
mov
and
add
mov
loopne
inc
outsl
inc
hlt
test
push
add
push
mov
shl
int
bound
fildll
shll
ds
imul
fwait
pop
xchg
push
inc
cmp
and
xchg
xor
loope
lret
add
ret
sub
mov
or
loopne
inc
loopne
cmp
or
sub
lods
and
jg
loopne
dec
and
sbb
ljmp
enter
pop
aad
sahf
icebp
cmc
add
loopne
out
addr16
sahf
cmp
inc
inc
mov
cmp
jp
lahf
popf
int
push
pushf
dec
pop
rep
fnstcw
in
push
test
and
xchg
popa
frstor
andb
pop
test
add
sub
inc
inc
cmpsl
push
jns
cmp
icebp
mov
sahf
jbe
add
addr16
xchg
inc
inc
inc
and
adc
fisubrl
mov
int
ret
in
fs
jne
lods
pusha
and
andb
inc
cli
pusha
jge
aam
aam
xorl
orl
push
mov
lret
test
cmpb
imul
add
addb
or
das
push
loopne
mov
or
pusha
pop
push
adc
dec
ds
test
jno
xor
and
in
pop
lea
inc
cld
cltd
out
xchg
imul
mov
and
add
mov
cmp
test
add
or
ja
jge
pusha
sar
lcall
lods
inc
cmp
std
enter
and
mov
mov
addb
fs
outsl
cmp
mov
lea
xor
popa
add
movsl
pop
cvttps2pi
pusha
popa
sbbl
or
mov
and
jle
and
lock
xor
xor
dec
icebp
jae
add
sarb
inc
inc
es
sub
and
pusha
sti
outsb
inc
sti
shl
mov
decl
cltd
mov
addb
andb
pushw
stc
xchg
loopne
mov
mov
sub
loopne
sbb
ljmp
test
and
popf
sub
lcall
push
lea
clc
aas
jno
addb
xchg
mov
mov
test
xchg
inc
and
test
sbb
aaa
xor
adc
mov
dec
xchg
push
imul
fimull
inc
and
push
inc
add
mov
scas
pop
in
lea
mov
rolb
test
pusha
dec
mov
add
xchg
loopne
cmpsl
mov
rorl
pusha
mov
xor
lds
xlat
xchg
xchg
mov
loopne
jl
and
and
pop
roll
in
adc
outsl
es
jo
out
loope
stc
rcrb
loope
mov
pusha
and
or
loope
and
dec
imul
in
pusha
lret
jns
sub
add
and
fistpl
loopne
cmpsb
and
pop
bound
pusha
jecxz
pop
testl
aaa
mov
rclb
stc
adc
cld
scas
mov
add
and
stc
lret
mov
pusha
addb
repnz
fdivs
dec
sub
sub
cmc
in
add
pusha
call
cltd
lods
add
mov
add
sbb
sahf
out
ljmp
pusha
inc
dec
in
lret
mov
adc
fstp
enter
inc
inc
mov
add
and
aad
dec
xor
ret
and
add
or
stos
or
mov
cltd
test
mov
mov
adc
inc
repz
jbe
movsb
addb
nop
adc
adc
pop
test
add
rol
and
iret
mov
test
scas
jae
pusha
loopne
andb
into
jo
shlb
andb
cmp
add
push
adc
jl
bound
int
test
fs
mov
xor
pusha
and
mov
mov
out
lods
rolb
or
inc
add
dec
mov
adc
loopne
mov
fistpll
insl
jne
or
inc
add
lock
sub
loopne
and
xor
and
mov
and
pop
push
loopw
and
dec
inc
repnz
les
mov
shl
lahf
jmp
mov
mov
andb
pusha
or
pusha
fdiv
mov
xchg
xor
push
fwait
push
or
add
test
and
inc
mov
inc
mov
add
dec
cmp
mov
and
je
repz
mov
sbb
repz
or
mov
divb
sar
and
pop
scas
mov
dec
cld
aam
in
pop
outsb
movsl
pop
fcompl
and
cmp
arpl
shl
inc
push
pop
jae
push
sahf
mov
movaps
fdivs
js
jae
in
pop
fwait
pop
jnp
ret
ljmp
insb
pushf
call
andb
pop
xor
lret
scas
mov
stos
cld
cmpsb
and
fidivl
lods
mov
mov
push
in
xor
rol
and
adc
jmp
in
jmp
ds
mov
shlb
pop
xor
mov
and
xchg
les
mov
push
inc
add
rclb
push
lcall
and
sbb
loopne
jbe
popf
mov
or
rcrb
xor
ss
inc
add
and
inc
xor
loopne
sahf
sbb
std
xchg
js
push
add
loopne
popa
loope
mov
cmc
je
mov
test
pusha
ljmp
loopne
les
rolb
cmovb
rolb
push
xor
addb
and
pop
push
cld
out
cltd
js
lea
mov
pusha
pusha
adc
lds
sub
mov
loopne
push
loopne
pop
out
push
loopne
fnstcw
mov
mov
iret
push
xchg
mov
dec
int
xchg
mov
aaa
jecxz
andb
shrb
inc
add
push
or
shlb
movsl
fwait
leave
fidivl
fbld
sahf
xor
jmp
lea
xchg
loopne
pop
cmp
push
push
cld
adc
fimuls
andb
jl
cwtl
add
loop
lcall
sar
mov
lock
sub
dec
fwait
jne
adc
cmp
jge
inc
and
xcrypt-cfb
cmpsl
daa
fiaddl
in
lea
and
inc
lgs
add
and
fisubs
and
ret
lahf
dec
ffreep
aam
out
mov
aam
in
addr16
aaa
repz
push
mov
inc
and
pop
adc
insl
lds
mov
mov
lods
or
inc
mov
pop
fwait
inc
push
mov
or
add
arpl
or
inc
push
out
cmpsb
inc
add
hlt
inc
clc
push
addb
and
fcomps
sub
push
in
and
mov
andb
jp
mov
jnp
pop
pop
jne
inc
mov
pusha
and
test
mov
movsl
aaa
or
pop
cmp
xor
repnz
xchg
jg
pop
jbe
mov
push
stc
jne
imul
add
loopne
add
rorb
pushf
xlat
add
push
cmpsl
lahf
sahf
dec
mov
int3
xor
inc
push
cwtl
mov
mov
cltd
sbbl
mov
xorl
ret
jle
lret
pop
mov
shlb
loopne
dec
loop
into
jno
cmp
pusha
inc
push
in
fmul
or
andb
in
add
rcr
or
and
inc
xchg
pop
jno
mov
pusha
jno
andb
cmpsl
repz
push
ret
xchg
addr16
rolb
andb
add
sbb
jge
in
and
mov
pushf
push
jbe
movsb
add
cmp
loopne
xchg
mov
shlb
mov
call
outsl
push
insl
addb
xchg
aad
pop
xchg
pusha
xchg
cmp
inc
sub
cmc
push
mov
inc
xrelease
loopne
test
or
add
xchg
ret
and
pusha
mov
shlb
ljmp
