add
add
add
incl
movsl
mov
add
cmpsb
lods
add
add
or
add
testl
mov
push
add
test
enter
mov
add
push
add
loopne
add
add
sti
add
add
push
ja
hlt
rcrb
adc
or
xchg
add
mulb
add
add
sub
out
mov
add
add
in
add
add
add
out
add
add
add
xchg
lock
imul
mov
add
add
mov
das
add
mov
xor
ss
or
add
add
add
add
add
nop
mov
add
adc
in
les
add
add
pop
insl
pop
add
add
add
add
push
adc
clc
add
into
add
add
pop
add
xchg
add
out
icebp
jl
add
das
add
add
roll
add
sbb
cltd
pusha
rcrl
je
add
and
add
add
add
add
add
mov
jb
leave
addl
je
add
add
add
sti
add
add
add
add
add
add
lds
add
add
lcall
into
shrl
or
faddl
add
add
mov
adc
add
add
add
lcall
add
mov
add
add
mov
xchg
stos
add
add
mov
add
add
mov
add
add
push
cmpsl
pop
out
mov
add
push
add
adc
arpl
xchg
add
add
add
add
add
sbb
sti
add
dec
add
add
out
add
add
sub
mov
add
add
add
lock
add
add
add
dec
pop
inc
add
add
test
out
roll
add
add
add
add
add
add
add
pop
ss
loop
cmp
add
add
add
add
add
push
sarb
add
add
dec
add
test
add
add
add
mov
push
add
add
loop
int
add
add
pop
add
add
add
rolb
add
add
sub
add
add
rol
popa
add
add
stc
add
add
push
add
add
add
inc
pusha
adc
add
add
flds
in
add
add
add
cmpsb
in
add
mov
pop
lahf
rolb
add
add
add
pop
add
fs
add
add
add
shlb
and
add
add
add
lea
dec
inc
add
jnp
add
push
add
out
add
add
xchg
add
add
loop
rcl
add
mov
mov
add
add
add
inc
add
hlt
outsl
add
aaa
test
add
addl
xlat
aas
enter
add
add
and
clc
add
pop
mov
testb
sbb
add
add
add
add
add
push
ret
shll
repz
add
inc
mov
add
mov
add
and
sub
inc
dec
add
add
add
push
add
pop
rolb
add
add
add
sbb
add
add
add
add
add
icebp
add
add
add
xchg
lret
add
add
sti
xor
ret
add
cmpsl
add
add
pusha
mov
add
and
add
add
add
xor
add
add
fxch
fldt
add
add
fadds
and
add
dec
mov
into
add
add
jl
rolb
add
add
add
data16
add
dec
add
add
cmp
ret
in
rorb
sub
add
repz
add
cmp
add
add
add
add
add
jns
adc
add
xor
pop
push
cld
add
add
int
nop
mov
lds
add
aas
add
add
push
add
sub
add
pop
mov
add
add
mov
add
frstor
add
movsl
add
mov
test
add
and
adc
add
add
sub
add
add
add
add
add
add
sub
cmpsl
add
mov
add
xor
jg
outsl
subl
add
pop
add
mov
aad
add
add
pop
push
add
jl
pushf
sub
mov
xorb
aad
aas
inc
add
add
jnp
dec
test
add
pop
xchg
add
add
sahf
xchg
es
add
push
add
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
std
out
add
add
add
lcall
add
leave
add
add
add
js
add
add
out
add
add
in
add
add
add
add
add
adc
add
cmp
js
add
test
add
add
dec
add
add
add
add
add
mov
xchg
add
add
add
clc
data16
xchg
mov
pop
add
add
add
add
add
ljmp
or
rclb
ljmp
addl
mov
push
mov
add
nop
jns
add
add
push
aad
cmpsl
add
add
rolb
mov
add
js
cmpsl
add
add
push
mov
rolb
inc
push
aas
inc
or
stos
jb
lea
test
add
mov
add
jo
add
add
add
imul
add
sti
add
mov
add
add
fiadds
add
insb
add
add
fistpl
add
add
mov
add
add
add
je
cmc
sub
cmp
aaa
add
inc
add
add
aas
add
add
fs
mov
add
mov
and
add
push
jp
add
pusha
add
addb
nop
add
add
mov
mov
adc
mov
add
inc
mov
iret
add
add
add
in
cmc
dec
add
add
insl
add
hlt
add
push
add
nop
leave
add
add
add
add
add
out
add
add
xor
pop
add
or
add
add
inc
add
xchg
add
add
mov
inc
add
jne
add
dec
sub
add
add
add
add
add
add
add
add
add
iret
mov
test
add
add
inc
pop
add
add
add
movsb
add
add
xlat
add
add
add
jmp
add
add
add
push
add
add
add
add
fimull
repnz
add
lock
lea
cld
add
add
fldl
in
add
add
pop
ret
rolb
pop
add
add
incl
add
add
sbbl
add
aam
mov
into
push
push
add
mov
add
add
jle
xlat
add
add
add
dec
testl
mov
add
add
add
add
add
add
lahf
stc
sti
add
add
add
add
add
add
add
add
add
les
xchg
loopne
add
add
sbb
add
xchg
add
movb
incl
add
add
cltd
add
aam
jl
test
add
add
scas
out
mov
add
arpl
add
ret
add
roll
add
aam
add
cwtl
mov
outsb
les
add
add
mov
pushf
sub
daa
call
add
test
shlb
add
movsl
add
push
dec
add
testb
ja
add
add
add
add
lods
push
imul
xor
add
push
add
and
stos
and
add
jge
push
aas
mov
shrb
add
xorl
add
jbe
xor
mov
cs
sub
add
add
das
add
loop
insl
add
jg
add
sbb
jae
push
add
mov
add
add
add
inc
lret
aaa
daa
add
add
add
add
add
mov
push
mov
repz
mov
out
bound
add
add
add
add
mov
add
xor
add
add
add
inc
adc
add
add
add
add
add
add
add
add
fistl
add
jmp
add
add
std
add
add
add
jbe
stos
push
add
add
add
mov
imul
add
add
add
xchg
add
xor
add
add
add
xlat
add
add
je
add
inc
add
sbb
add
xchg
add
repz
pop
add
add
add
xor
add
sub
add
sub
daa
add
add
jns
add
pop
and
jge
add
add
add
add
xor
add
add
add
mov
sub
add
add
sub
xchg
add
inc
add
add
add
xchg
add
or
movsl
cmp
lret
sldt
add
aas
add
mov
jnp
es
inc
sub
add
jbe
pop
testb
pop
repnz
sbb
xor
add
add
std
fldl
add
add
add
add
add
and
add
gs
add
add
add
rolb
push
dec
add
add
cmpsb
add
add
pop
add
add
add
add
inc
enter
sub
push
cmp
add
add
add
jns
add
add
add
jle
dec
add
add
sub
mov
xor
add
xchg
cmp
add
mov
add
mov
outsl
sarl
jno
pop
add
add
dec
xchg
les
add
add
ja
add
add
add
add
lods
dec
add
out
mov
add
pushf
add
fadds
push
add
enter
mov
pop
add
push
adc
add
add
fwait
add
add
faddl
sahf
add
mov
pushf
add
cltd
rolb
in
cmc
add
xchg
add
lahf
pop
sub
xchg
shl
and
jnp
add
add
add
add
add
add
pop
jmp
add
add
cltd
add
add
add
add
add
cwtl
loop
add
adc
xchg
cmpsl
or
push
cmp
aam
add
jmp
movl
add
add
add
add
cs
xchg
add
sbb
pushf
add
add
pop
imul
add
sub
add
jnp
add
push
add
mov
pop
add
pop
add
add
dec
add
or
lock
out
imul
add
add
add
add
add
add
add
adc
sarb
mov
add
jo
aad
mov
jecxz
jmp
add
adc
push
add
outsl
add
je
cmpsl
add
nop
dec
fwait
add
mov
sbbl
adc
add
add
add
add
outsb
add
push
pop
add
pop
scas
push
sahf
add
push
loopne
add
add
add
mov
jmp
cltd
add
add
insb
add
add
add
adc
add
add
add
pop
add
xchg
add
add
ss
add
add
xlat
add
add
jp
unpckhps
add
lret
cmp
iret
add
sub
cltd
add
add
add
inc
xchg
add
cwtl
mov
movl
arpl
add
add
lcall
cmp
mov
adc
loope
add
popl
add
add
add
add
add
lds
add
aad
cmp
add
add
add
add
add
add
add
in
jo
test
push
cmp
inc
dec
inc
ljmp
cmp
in
add
add
nop
add
add
fwait
add
add
add
push
add
add
cwtl
sbb
add
add
out
add
pop
cli
add
add
add
add
add
mov
or
dec
add
add
add
add
add
add
push
add
nop
add
add
push
add
add
add
add
push
add
add
add
xchg
or
xor
add
add
add
clc
addl
sub
clc
adc
sub
addr16
add
mov
inc
add
add
testb
add
stos
xchg
add
add
add
test
add
add
clc
stos
cmp
add
lahf
xor
mov
add
pushf
add
mov
add
cmp
cmp
add
add
add
sbb
add
add
add
add
add
add
add
sub
push
jg
and
add
add
push
add
mov
add
popa
add
add
add
in
subb
add
sub
add
add
dec
mov
mov
add
add
add
push
pop
add
add
nop
add
add
push
and
add
add
das
fadds
add
add
addr16
add
add
cmp
add
add
add
jns
add
inc
add
add
sub
xchg
push
clc
jnp
add
add
add
xchg
xchg
mov
add
add
add
add
add
add
add
add
ja
mov
add
std
add
fstpl
sahf
pop
out
out
add
add
add
add
add
add
add
add
add
xor
adc
mov
out
lret
add
add
sub
xchg
add
xlat
add
aad
add
push
add
fildl
out
add
icebp
add
add
out
add
add
add
add
add
add
negl
add
addb
lock
add
push
add
add
fildl
add
ljmp
add
add
add
cmp
add
cmp
add
add
flds
add
scas
cmp
add
add
add
mov
add
add
add
popf
add
add
add
xor
pop
add
add
jae
cmp
popf
sbb
sub
shll
add
add
add
add
and
add
add
and
xchg
inc
xchg
add
test
or
insl
add
adc
push
pop
add
leave
fadd
mov
cmp
xchg
sahf
mov
add
loop
add
add
mov
xchg
add
add
add
mov
add
xchg
jbe
push
add
add
add
add
add
pop
add
mov
sbb
lahf
add
add
pop
add
imul
add
sbb
lahf
add
adc
mov
aaa
add
add
add
outsl
add
add
add
add
add
add
pop
mov
or
inc
cmp
add
test
out
add
add
add
jle
add
test
in
add
cmp
add
fiaddl
push
add
add
sldt
add
pop
xchg
sbb
add
add
add
add
shrl
inc
add
and
add
inc
jae
add
icebp
add
inc
movb
add
or
mov
negb
popl
jo
add
mov
add
add
stos
lods
add
in
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
push
add
add
mov
add
push
stc
loop
add
add
add
add
fiaddl
mov
jnp
add
ret
or
add
add
add
add
add
add
add
les
xor
xchg
add
add
stc
add
xor
add
aam
add
add
jge
add
pop
cltd
in
add
add
cmp
sbb
jmp
jl
add
stos
add
js
cmp
add
xor
inc
add
add
add
jecxz
add
xchg
add
cmp
int3
add
dec
pop
ffree
add
cmp
add
add
or
add
lea
xor
shlb
dec
add
add
add
sbb
cmp
mov
out
je
mov
add
add
add
add
add
adc
add
add
lea
fildl
add
daa
mov
jno
aad
add
lret
out
add
add
add
fmul
sub
out
test
fdivl
add
add
add
add
add
add
sbb
add
mov
rolb
add
pop
sbb
jmp
add
int
lcall
add
outsl
jbe
outsl
add
dec
add
add
loope
sbb
add
add
add
in
add
ret
add
add
mov
push
add
add
add
add
or
cmp
mov
mov
add
add
mov
add
add
add
add
add
sbb
mov
in
add
xor
add
add
add
add
stos
add
sti
add
add
or
ljmp
add
add
leave
add
xchg
add
add
into
pop
pusha
mov
add
add
xor
add
sub
add
mov
add
sub
dec
out
add
jp
mov
add
add
add
add
out
pop
and
jmp
add
add
int
add
add
add
fiaddl
add
loop
sub
push
push
lds
add
loop
xor
add
add
add
add
add
int3
sbb
add
add
rolb
in
adc
add
pop
mov
add
add
add
add
xchg
popa
pop
jg
push
add
push
add
lret
add
add
add
push
add
fadds
add
or
mov
add
add
add
add
add
add
inc
add
call
les
add
add
jns
add
inc
add
hlt
add
pop
add
add
sbb
cwtl
add
add
add
add
lea
add
lods
xor
add
push
jge
add
adc
add
mov
add
add
nop
lret
xor
add
add
add
add
add
in
add
sub
add
add
add
add
stc
add
add
roll
add
add
add
mov
js
add
ret
ret
add
pop
sub
add
cmp
add
xor
add
add
pop
add
mov
push
sub
test
add
mov
add
call
add
add
add
pop
enter
dec
clc
add
scas
jae
add
add
add
xlat
add
loope
add
add
add
xlat
xlat
add
mov
jbe
out
icebp
xchg
add
add
imul
shrl
popl
mov
push
add
add
inc
add
add
mov
add
add
add
add
repnz
add
bound
add
add
add
lods
add
add
add
add
jg
add
data16
mov
gs
add
add
add
add
mov
add
stos
in
dec
js
add
add
add
add
add
pop
add
add
int
add
jnp
add
add
add
mov
add
add
adc
add
add
add
push
add
jae
add
scas
add
jae
add
add
add
add
add
or
add
enter
add
pop
add
add
add
arpl
add
add
add
add
dec
add
daa
int3
imul
add
pop
sbb
das
mov
add
add
in
repnz
push
add
xor
add
add
lret
loopne
mov
cmp
add
add
add
add
xorl
es
add
ret
loope
fiadds
add
sub
add
repz
add
inc
add
sub
push
je
rolb
mov
mov
add
add
add
in
std
push
add
dec
add
add
pop
add
xchg
mov
jno
daa
add
add
add
dec
add
add
cltd
addb
add
add
rolb
test
outsl
add
xor
add
icebp
add
idivb
in
add
pop
add
add
add
add
add
add
add
add
add
add
jo
add
inc
out
add
dec
add
push
add
std
add
int3
add
add
add
mov
add
add
and
add
pop
add
out
and
rolb
add
add
add
add
outsb
sti
push
add
xchg
loopne
inc
add
shrb
add
add
add
popa
add
add
add
incl
sbbb
add
add
add
daa
inc
add
add
add
sub
jno
sti
add
add
add
repz
add
add
add
lds
arpl
add
add
add
add
lock
flds
add
xchg
add
fwait
add
add
imul
sahf
add
or
add
add
add
add
add
dec
add
xor
add
xor
add
pusha
leave
mov
dec
push
add
add
add
stc
add
in
add
add
add
bound
add
add
add
add
jp
dec
add
jne
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
out
fs
filds
into
jae
add
push
add
sub
daa
into
add
add
jae
flds
add
add
add
add
add
add
add
add
repz
add
add
add
push
and
mov
sahf
sub
js
addb
add
and
add
rorl
add
add
add
mov
mov
add
out
jle
jge
insl
add
sbb
add
lods
add
xor
addl
xor
add
add
add
jge
lock
add
add
add
imul
add
stc
popl
mov
lods
cmp
add
add
ss
inc
add
lret
dec
movsl
add
pop
add
add
add
add
add
or
insl
add
lret
les
add
xchg
sldt
add
add
pop
add
aaa
jp
cmc
add
addl
ret
add
add
mov
dec
add
xchg
add
or
add
add
sub
adc
int3
add
add
add
add
add
add
ret
push
add
add
xor
add
popf
add
jge
add
leave
add
loop
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
pop
jno
sbb
push
add
out
add
cmp
test
add
add
leave
add
add
test
add
mov
dec
add
roll
fwait
and
loopne
add
add
insb
add
cmp
xorl
add
sldt
add
add
stos
add
add
testb
jg
imul
add
sub
push
rolb
add
add
add
add
add
pop
lret
add
out
add
add
add
add
cmp
add
mov
arpl
add
add
add
mov
add
add
add
add
cmc
in
and
out
add
add
stos
add
sahf
jne
add
add
and
add
add
icebp
loope
mov
add
add
add
out
add
inc
mov
add
add
add
rolb
aaa
add
add
hlt
add
arpl
add
shr
add
add
add
adc
add
pop
or
add
add
scas
add
data16
add
add
pop
add
out
add
add
add
add
lret
call
add
pop
add
repz
fstpl
push
add
add
add
xchg
add
fadds
jge
add
xchg
jb
add
add
fdivrp
push
lods
add
fnstsw
add
add
aad
add
and
lcall
mov
add
fldt
add
add
data16
jb
add
movsl
add
add
add
add
add
std
add
ret
add
mov
mov
add
add
add
dec
add
add
nop
add
add
add
add
add
add
add
popa
scas
add
mov
add
add
add
add
stos
add
dec
add
or
mov
cmp
fldl
add
add
add
add
pop
add
add
add
jb
pop
xchg
add
cmp
pop
add
push
add
add
into
xor
add
add
add
add
test
push
add
add
xor
cmc
jecxz
sub
add
inc
dec
mov
stos
xchg
call
add
pop
push
lcall
add
add
add
pop
cli
add
add
add
jns
add
mov
add
add
lahf
add
add
sbb
add
add
add
add
movsl
add
add
mov
add
jmp
or
add
add
add
add
cmp
add
add
push
add
jg
add
mov
add
push
add
lods
addr16
add
add
add
add
add
out
add
xchg
add
add
add
dec
add
stos
les
les
add
sub
sbb
mov
into
or
in
add
add
add
and
add
add
sti
mov
add
aam
or
add
dec
dec
or
add
add
add
add
and
add
add
jae
add
jnp
add
push
add
add
adc
add
mov
lods
jecxz
add
add
in
movsb
sahf
push
mov
add
fcmove
xchg
pop
mov
add
dec
add
add
add
add
add
rcrb
add
roll
pop
add
add
add
adc
stos
add
test
push
add
ja
add
add
jl
add
add
js
cmpsl
add
jecxz
nop
add
add
add
pop
add
push
add
inc
add
jle
mov
out
clc
stos
add
add
jno
jmp
xchg
mov
add
fiadds
pop
add
push
movb
dec
scas
add
or
add
add
add
add
stos
cmp
sahf
xor
adc
add
insl
add
mov
add
mov
pop
cmpsl
add
add
pop
pop
add
or
push
add
add
add
cmp
dec
add
add
push
hlt
xchg
add
fcoms
stos
add
add
sub
add
mov
add
inc
add
inc
mov
add
add
add
add
add
add
cmpsl
je
add
nop
add
inc
imul
add
add
add
add
add
add
add
xlat
add
add
test
add
add
je
add
add
loopne
mov
push
jns
adc
jmp
fnstcw
mov
add
add
add
add
add
add
add
test
xchg
add
or
add
aas
add
add
add
add
add
adc
add
mov
add
jl
jb
add
flds
fadds
add
sub
add
add
add
add
add
ret
add
outsl
sbb
add
adcb
sbb
add
sub
add
add
add
add
add
add
out
adc
sbb
add
add
add
shl
cs
add
add
add
add
mov
leave
add
push
add
add
add
stos
add
or
imul
add
add
pop
jmp
or
add
add
add
add
repnz
pop
add
adc
bound
into
add
add
add
add
add
mov
add
add
add
add
add
add
pushl
add
or
pop
add
add
adc
add
jae
add
add
add
add
loop
div
add
addl
out
xor
push
add
stos
add
xor
add
add
mov
mov
shlb
add
dec
add
loop
roll
add
add
in
jno
add
add
mov
add
add
mov
add
add
add
add
mov
enter
mov
lcall
sahf
stos
dec
jl
add
clc
add
add
inc
xchg
icebp
add
add
mov
add
pop
add
add
add
xor
jb
add
mov
add
pop
add
fildl
add
add
add
out
add
jne
adc
in
dec
add
je,pt
mov
add
add
add
je
add
push
add
inc
add
add
add
add
add
aas
add
or
add
pop
add
add
add
mov
push
outsl
add
add
add
add
add
ret
add
cmc
lcall
add
add
daa
add
add
mov
roll
jb
icebp
add
add
add
jle
add
dec
aam
jp
mov
sbb
add
lret
jecxz
add
out
add
testb
mov
or
loope
add
add
add
add
add
add
movsl
add
add
add
cli
add
add
add
add
pop
mov
and
add
stos
js
cmpsl
add
insb
add
shll
add
and
add
inc
add
add
jmp
add
push
add
loope
loop
add
mov
add
inc
inc
ss
mov
add
ret
mov
out
sub
cmp
test
add
add
cmp
add
add
or
pusha
leave
add
add
add
add
pop
int3
testl
and
add
push
shll
add
add
add
loope
call
add
add
pop
add
add
cmp
add
hlt
mov
add
add
add
or
rolb
outsb
add
add
add
xorb
add
add
inc
lcall
add
xlat
lock
add
inc
or
lahf
pop
add
fldcw
adc
mov
inc
add
dec
add
jge
call
add
cmc
data16
add
ret
add
add
add
add
add
add
loop
add
test
adc
addl
incl
add
or
add
mov
add
add
add
or
add
shrl
sbb
add
add
xor
sub
add
loope
add
or
add
movl
in
add
add
subb
add
add
add
ret
add
popf
add
add
test
add
mov
dec
add
mov
fldcw
lods
adc
add
stos
add
add
add
sbb
xchg
cmp
add
add
add
sub
add
add
add
add
ds
add
add
add
add
add
push
add
lods
add
push
add
lds
add
add
imul
push
add
add
das
add
cmp
dec
add
add
call
adc
loopne
add
add
dec
sub
mov
add
sbb
add
add
fiaddl
add
add
sahf
add
incb
jns
arpl
movsl
and
add
add
mov
add
dec
add
nop
add
add
add
add
add
add
xor
leave
add
jecxz
add
add
js
sbb
addl
jecxz
add
stos
jle
add
arpl
add
add
jno
jno
add
mov
add
sub
dec
add
add
add
icebp
add
mov
add
incb
frstor
add
popf
mov
leave
push
std
add
add
add
add
and
cmp
add
add
add
in
add
and
sbb
add
test
add
add
add
add
mov
stos
shr
dec
leave
add
aaa
add
add
addl
add
add
mov
mov
add
add
add
cltd
add
xor
inc
inc
movb
add
add
lret
add
add
data16
add
ss
mov
sub
add
add
add
icebp
add
roll
add
movsb
stos
sbb
add
mov
add
push
jmp
add
add
or
or
and
add
add
add
add
inc
leave
iret
add
mov
add
dec
mov
or
add
add
mov
add
add
add
add
insb
nop
add
add
add
add
add
add
mov
pop
inc
add
insl
add
add
xlat
movsb
add
xchg
add
fldl
insl
push
add
add
add
outsb
add
fiadds
add
push
add
xor
add
stc
add
add
adc
add
cld
add
add
add
mov
flds
mov
push
and
add
iret
add
add
inc
add
add
jle
dec
int
mov
dec
add
add
add
arpl
mov
add
add
mov
pop
sub
add
sbb
test
add
add
add
pusha
call
add
add
add
add
xchg
add
mov
push
push
dec
in
popl
add
cli
add
add
out
and
js
add
mov
or
jmp
add
add
or
add
add
adc
imul
loope
addb
add
ret
lret
add
clc
into
add
add
fists
sbb
push
mov
add
add
add
xchg
push
add
add
dec
add
add
sbb
jo
add
add
xchg
sbb
add
add
add
push
add
add
ljmp
ds
xor
jp
adc
add
dec
adc
add
add
pop
add
add
lods
add
jl
add
mov
add
add
add
add
add
add
xchg
aas
add
out
add
add
movl
add
popa
mov
add
mov
add
xlat
dec
add
add
or
mov
add
add
inc
cmpsb
add
stos
add
add
movsb
clc
add
add
jp
ja
add
add
add
add
shll
add
add
add
xchg
add
mov
fsubs
add
inc
add
les
add
dec
stc
add
add
add
add
idivb
dec
add
add
add
and
add
add
add
add
add
add
test
outsb
add
and
incl
add
xchg
popf
add
sub
fiadds
jbe
add
lea
add
jne
cmp
add
outsl
addl
add
add
add
add
add
add
out
mov
add
leave
int3
dec
enter
add
iret
incb
add
add
mov
jecxz
add
add
cmp
add
add
add
add
ja
icebp
add
imul
pop
add
add
add
add
test
add
add
add
add
insl
add
add
add
ljmp
add
add
in
std
add
dec
add
add
pop
add
stc
dec
add
add
add
mov
mov
addb
add
sub
sahf
xchg
roll
push
ljmp
add
add
jmp
add
leave
cld
ret
mov
add
add
add
cmpsb
add
add
rolb
add
popa
add
testl
inc
add
add
hlt
add
test
add
mov
add
add
add
xlat
popf
add
xchg
lret
or
and
add
add
mov
add
add
in
add
lods
ljmp
sbb
pop
add
addb
pop
and
cmovge
cmpsl
add
add
das
adc
add
add
add
push
pop
add
and
mov
add
add
add
fcomps
std
add
incb
add
add
in
add
movl
loop
pop
add
sbb
add
add
fiaddl
mov
xchg
add
inc
sbb
add
fwait
add
addb
sbbb
pop
add
add
add
outsl
inc
add
enter
jne
sub
add
pop
je
cmpsl
add
test
add
add
add
xchg
add
add
cld
add
hlt
xchg
add
ret
scas
icebp
add
add
add
add
in
add
add
add
adc
add
mov
add
add
add
pop
add
add
add
lret
add
hlt
add
add
add
xor
add
loope
inc
add
sbb
out
pop
add
loop
lea
scas
cs
add
add
adc
or
aaa
and
into
add
add
add
add
add
add
add
add
pop
lea
cmc
enter
add
add
add
les
repz
cmp
add
pop
add
mov
add
dec
add
sub
sbb
add
inc
add
add
add
fiadds
add
add
add
add
cmp
push
add
dec
aaa
loop
mov
add
add
mov
lahf
sbb
lea
dec
add
mov
subb
rcrb
mov
ret
insb
xor
add
js
add
add
xor
lret
cmp
mov
add
add
add
push
add
dec
add
pop
add
add
add
add
and
leave
add
movsl
add
add
cmp
xchg
push
aam
add
cmp
add
pop
mov
mov
add
out
add
mov
stos
loope
dec
lods
xchg
cltd
outsb
add
add
add
or
push
pop
into
mov
mov
add
sbb
add
add
push
int
add
adc
add
add
add
add
mov
add
add
add
add
and
add
add
add
pop
cmp
add
add
sbb
add
add
mov
add
add
add
mov
push
test
xlat
add
add
add
arpl
add
add
add
out
mov
add
or
add
fdivrs
add
add
add
add
popl
cli
add
mov
add
add
add
add
add
dec
lret
add
add
das
add
add
and
je
add
add
xor
add
add
out
add
popf
mov
add
add
add
add
push
mov
sbb
add
add
add
add
add
ffree
dec
add
add
insl
add
add
rolb
xor
add
imul
jne
inc
add
add
sahf
add
add
repz
lods
xlat
xchg
push
and
flds
add
movb
jg
add
add
mov
add
add
std
mov
inc
add
add
add
add
fiadds
inc
add
add
add
add
xchg
jne
mov
add
sbb
movsl
dec
add
fnstsw
add
adc
add
add
mov
add
add
mov
sub
insl
add
mov
add
shlb
jbe
add
dec
add
fdivrl
add
add
add
add
add
add
add
arpl
inc
xchg
add
add
or
add
add
adc
add
add
add
add
add
mov
add
add
add
pop
add
sbb
and
pop
addl
ficomps
inc
leave
mov
inc
lcall
les
add
inc
imul
jne
add
add
add
jecxz
add
rolb
add
add
add
add
add
add
add
dec
add
fldl
add
add
add
add
and
add
mov
add
add
xchg
add
add
inc
add
add
daa
add
lds
push
dec
pop
sub
in
std
add
add
jnp
add
add
add
add
jle
pusha
add
add
dec
add
lret
add
add
add
add
es
add
add
add
add
add
add
add
or
popl
clc
add
sub
sub
add
add
into
xor
inc
push
add
add
add
jle
add
mov
inc
add
add
add
add
add
xor
insl
add
bound
fiadds
rolb
and
add
add
daa
add
add
jo
or
add
xor
add
add
stc
add
mov
add
add
xchg
pushf
add
mov
add
add
add
or
push
jmp
add
dec
add
add
add
add
push
add
add
dec
add
mov
add
dec
and
add
add
fiaddl
add
or
add
add
sub
xchg
add
add
stc
sub
int
rolb
add
cmp
add
add
sbb
xor
imul
push
sbbb
nop
add
add
add
pop
add
add
add
add
add
add
iret
adc
add
add
add
add
add
dec
push
mov
add
jp
add
add
add
add
add
add
cmp
add
add
lods
std
rol
sbb
ljmp
add
sbb
add
add
add
add
add
or
roll
das
add
add
add
add
add
jle
movl
add
add
adc
add
imul
add
add
add
add
add
add
add
add
ficoml
add
cmp
stos
cld
xchg
in
add
inc
divb
add
in
or
add
add
add
movsb
out
add
add
add
push
add
push
stos
and
inc
mov
add
mov
add
add
test
add
scas
add
lea
add
add
add
add
add
add
add
add
sbb
fwait
add
add
clc
fnsave
add
add
add
mov
add
rolb
add
addb
add
add
hlt
add
stos
add
mov
add
inc
push
dec
add
adc
add
cmp
add
add
add
movsl
add
add
clc
add
add
add
lods
xor
add
jnp
add
cmp
add
add
add
add
popf
inc
sub
push
add
add
add
add
add
and
xor
mov
pop
add
hlt
insb
add
adc
push
add
add
add
add
dec
outsl
add
add
adc
fbstp
mov
dec
add
add
pusha
xchg
mov
jge
or
add
dec
scas
add
mov
add
push
stos
or
add
add
jecxz
add
xchg
add
add
insb
add
add
or
add
aad
push
add
add
out
aad
add
add
add
add
insl
add
insb
insl
add
add
add
push
add
add
add
add
lds
not
add
mov
mov
add
loopne
das
add
add
rclb
scas
add
fisttps
add
pop
xlat
cltd
add
push
mov
add
or
add
pop
add
mov
add
add
add
add
add
mov
mov
sub
add
add
cmp
add
add
add
add
xor
add
add
add
xor
add
add
add
add
add
add
lret
arpl
mov
sahf
mov
mov
add
add
add
in
cmp
add
pop
add
out
add
mov
jne
add
add
add
add
add
fldl
inc
aas
add
jbe
add
add
add
add
mov
sbb
adcl
add
lods
xor
add
add
add
add
add
xchg
add
imul
add
add
add
daa
push
cltd
add
add
add
add
int
add
fwait
jmp
add
add
and
lahf
pushf
popl
add
imul
add
xor
add
push
stos
add
add
lcall
inc
add
add
add
add
and
add
add
add
push
add
push
add
add
imul
mov
add
test
add
lea
enter
mov
add
add
jno
xchg
add
push
mov
push
add
add
push
sub
add
add
mov
jle
add
add
add
add
add
jp
ljmp
add
add
add
inc
add
add
out
add
dec
add
add
movsb
adc
add
inc
sbb
add
add
xchg
out
jg
add
add
add
add
add
cmp
mov
sldt
mov
add
popa
mov
add
add
ja
test
cmp
add
in
or
add
add
sbb
xor
cmp
add
adc
lods
add
add
jno
aam
add
or
add
lock
push
add
add
add
add
out
out
mov
add
add
add
add
or
add
add
add
add
add
add
add
add
into
into
sub
add
add
movsl
add
shrl
xchg
add
pop
add
add
sub
add
add
add
inc
movl
add
add
add
add
add
scas
adc
add
outsl
add
addl
add
add
add
add
add
lea
add
add
add
icebp
cmp
add
data16
fldl
arpl
add
ret
gs
add
lock
cmp
lods
jbe
pop
add
add
or
add
in
aaa
je
add
add
add
add
add
add
mov
add
add
add
cmp
incb
push
add
add
movb
xor
push
push
pop
add
add
add
jnp
add
lea
push
addl
sub
pushf
add
or
pop
add
aad
mov
nop
xlat
add
verw
add
xor
incb
data16
add
add
mov
out
repnz
add
jge
add
cmp
add
mov
in
stos
fmuls
add
push
add
add
pop
add
add
pop
fwait
add
add
add
xchg
add
add
stos
or
imul
add
add
add
add
testb
add
fiadds
sub
cmpsl
add
sahf
cmp
add
inc
add
add
push
repnz
add
pop
add
push
xchg
popl
pop
add
add
add
add
pop
push
add
std
add
mov
add
add
jge
pop
sub
add
pop
mov
cs
iret
add
mov
in
fsubr
cmp
add
add
push
add
and
add
or
fwait
add
add
add
add
add
xor
out
jno
add
imul
mov
add
ss
add
mov
add
add
add
or
add
cmp
stos
add
add
add
or
add
add
add
add
sbb
mov
add
flds
mov
add
add
add
cmp
add
add
add
pushf
push
add
jne
add
add
add
fbld
adc
add
test
lods
add
add
test
add
fnclex
add
add
mov
add
add
faddl
add
mov
lahf
add
add
jp
dec
add
lret
dec
add
add
add
add
das
add
add
add
add
push
testb
in
mov
dec
add
xchg
add
loop
add
xor
inc
add
add
add
add
add
es
add
add
cwtl
xor
add
test
add
add
add
scas
cmp
sbb
add
and
push
and
movsl
add
add
add
incl
dec
jb
add
add
add
add
add
imul
in
stc
add
sub
add
repnz
jmp
addl
mov
jecxz
mov
or
add
dec
mov
add
ror
add
iret
adc
add
add
add
add
insl
cwtl
adc
add
fldl
fadds
add
add
add
cmp
jge
add
add
add
add
add
add
inc
sub
or
add
add
popa
xlat
adc
add
xor
add
flds
add
fcoml
enter
add
add
lret
rorb
add
add
add
loopne
loop
mov
add
add
xchg
add
add
pop
addl
mov
add
add
add
add
add
add
sldt
xchg
add
add
fiadds
ja
imul
add
add
push
inc
add
lods
add
int
add
add
lea
add
add
pop
adc
xor
add
add
add
add
add
add
not
bound
dec
int3
inc
push
add
sbb
add
imul
add
arpl
into
push
add
add
incl
add
add
js
jb
add
add
add
popl
outsl
addb
add
add
add
add
xchg
fiaddl
add
xor
push
add
add
add
add
push
add
mov
pusha
fiaddl
add
jp
add
add
xchg
and
add
fwait
inc
in
mov
sub
add
std
xchg
add
add
cmp
add
sub
push
repnz
fiadds
add
push
add
add
outsl
add
mov
add
fiaddl
lods
fistpl
clc
add
dec
stos
add
add
add
add
add
mov
xchg
add
add
clc
add
mov
push
add
add
add
add
xor
movb
add
out
inc
add
nop
and
or
add
xchg
add
out
add
pop
add
jnp
add
add
mov
add
mov
out
add
xchg
scas
add
dec
dec
add
push
add
add
add
add
xchg
testl
add
mov
add
scas
add
call
mov
cmp
push
sub
dec
cltd
add
stos
add
add
add
add
movsb
add
mov
sarl
add
add
add
add
hlt
add
lds
add
add
add
stos
add
add
add
add
data16
jo
mov
add
movsl
mov
add
add
add
add
ds
push
insl
out
add
jnp
outsl
adc
adc
clc
add
dec
add
add
add
add
sbb
jb
rolb
add
cltd
leave
sub
add
add
leave
add
cmp
lret
add
out
add
add
add
add
sti
add
add
add
add
add
cld
adc
lcall
jl
add
iret
add
inc
add
add
insb
add
xchg
add
add
cltd
add
add
add
add
add
add
dec
add
lea
add
stc
pmaxub
add
add
pop
pop
add
and
add
imul
pop
add
out
add
add
mov
add
data16
add
mov
add
add
add
add
add
jp
xor
or
add
fldl
add
jecxz
add
mov
dec
and
add
add
aad
xlat
add
add
add
add
stos
mov
int
fiadds
fadds
loop
add
sbb
add
mov
and
add
add
imul
scas
test
mov
add
add
aam
addb
test
add
add
lods
cmp
add
add
sub
sbb
cmpsb
ljmp
add
cltd
lods
push
inc
add
aas
add
jae
add
adc
add
cmp
mov
add
cmp
or
add
mov
xor
add
popl
add
mov
add
add
sub
add
mov
jb
add
add
pop
add
add
add
add
data16
xor
fwait
mov
movb
add
add
faddl
add
mov
inc
add
inc
inc
add
add
stc
add
add
pop
add
add
add
pop
arpl
add
add
xor
add
add
clc
xor
add
call
add
in
popa
add
rolb
add
add
add
fnsetpm(287
add
add
mov
jb
enter
add
add
mov
jl
add
add
add
add
stc
add
add
add
add
add
ret
add
movb
add
add
add
add
and
add
add
and
scas
ja
add
jp
pop
add
add
cmpsb
add
fiadds
add
add
mov
add
add
add
adc
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
mov
repnz
add
add
add
add
les
add
mov
add
add
pop
jl
repnz
testb
jg
add
add
and
or
add
jle
in
add
add
add
add
add
sti
lods
add
add
movsb
pop
add
cli
inc
repz
inc
lret
sbb
mov
add
jnp
mov
incl
add
add
add
add
add
mov
add
add
add
mov
stc
or
and
dec
popf
add
sub
add
add
test
or
test
filds
add
push
xchg
imul
push
ret
add
stc
add
andl
dec
add
add
add
bound
add
add
ret
mov
add
add
add
add
repz
lret
add
ds
mov
jae
inc
add
add
cmp
add
flds
repz
add
mov
filds
add
add
faddl
add
mov
bound
add
inc
js
jg
mov
pop
add
shrb
incb
addl
jp
push
add
add
add
outsb
add
add
add
add
add
add
add
add
mov
add
add
imul
add
add
int
or
or
pop
mov
add
add
add
add
add
sub
adc
test
add
add
pushf
add
add
add
add
loop
add
add
add
add
ja
add
add
add
add
ror
out
clc
add
add
add
add
add
in
add
cmp
add
stc
popl
mov
roll
add
or
add
add
ja
add
add
add
popf
add
cmp
or
and
pop
shr
add
add
add
ret
add
mov
add
add
add
add
add
sub
add
add
shlb
jmp
add
add
add
add
push
add
add
add
fadds
lret
std
add
rolb
stos
add
mov
add
sbb
add
add
roll
add
add
add
add
add
add
fdivl
xor
push
fidivl
ja
push
add
addb
int
push
add
hlt
or
faddl
stos
add
add
sub
add
add
add
add
rclb
in
jne
dec
add
add
add
add
fdivrs
jecxz
fadds
add
cmp
loop
add
add
add
add
repz
add
add
add
mov
add
jns
add
add
add
add
xor
xor
add
cltd
add
mov
jns
sub
add
test
jns
add
aas
pop
add
insl
add
andb
add
add
add
add
push
add
addl
or
add
add
add
add
add
imul
add
push
jb
add
add
cmc
add
das
add
dec
add
push
pop
add
add
dec
mov
mov
add
add
add
stos
add
add
and
add
js
add
and
add
add
dec
int3
add
mov
add
add
fwait
and
movl
add
pop
cmpsl
add
mov
add
add
jae
pop
add
inc
add
add
add
add
xchg
add
ljmp
jne
flds
add
pushf
pushf
add
insl
add
add
add
jp
add
or
add
addb
jg
add
add
pop
add
add
add
int
add
add
lcall
cmp
add
pop
hlt
add
xor
add
add
add
inc
mov
add
filds
mov
add
add
sub
add
out
sub
orl
xlat
rcrl
jb
dec
xchg
add
lahf
cmp
add
mov
xor
add
mov
xchg
add
add
add
out
add
add
aam
push
add
mov
ljmp
add
cmc
add
adc
add
add
add
add
add
test
add
add
addl
test
add
add
add
add
xchg
enter
jo
add
add
add
jae
add
add
add
xchg
jnp
push
popl
add
adc
faddl
lods
add
or
add
add
roll
pop
push
xor
jmp
add
push
jle
jns
inc
add
add
cmp
cs
add
incb
add
rolb
imul
add
add
add
push
add
xor
aas
push
add
add
jmp
add
add
add
and
cmp
add
push
mov
fldl
sub
loop
add
add
mov
incb
imul
add
push
add
iret
add
add
loope
push
add
add
add
add
add
mov
add
nop
add
add
sti
add
add
add
aam
mov
loope
add
popa
add
ja
pop
popl
bound
add
out
dec
add
add
and
inc
add
add
add
xor
add
add
add
add
test
pop
xor
scas
add
add
adc
add
xchg
faddl
add
es
add
rorl
dec
inc
add
add
addl
add
add
add
sbb
add
lods
lock
add
add
add
add
insb
add
imul
add
pop
mov
addb
add
add
add
add
stos
out
add
add
add
scas
add
add
addl
add
roll
add
add
add
lds
add
scas
add
nop
loopne
das
addr16
out
add
add
fwait
add
add
add
add
add
add
addr16
addl
add
add
add
add
jp
xchg
adc
arpl
bound
add
add
lahf
add
add
add
add
ret
add
out
in
add
int
add
push
add
add
jns
push
add
pop
adc
add
add
dec
add
add
loopne
add
mov
jae
add
add
mov
add
add
pop
push
add
add
add
add
push
incb
dec
hlt
add
add
xchg
add
mov
add
add
ret
add
add
xchg
add
add
mov
xchg
jp
add
add
add
pop
lcall
into
pushf
sahf
and
add
add
add
add
icebp
add
add
add
add
add
les
xchg
add
insl
addb
mov
sub
add
lods
add
add
add
add
and
add
inc
testb
add
into
add
add
add
add
add
dec
add
add
add
jecxz
scas
add
add
inc
add
add
add
add
mov
mov
jmp
xchg
add
dec
add
roll
add
call
in
in
add
jecxz
add
add
test
xor
mov
mov
aam
add
sub
add
dec
ret
stos
add
add
iret
push
push
add
jge
add
add
add
cmp
add
dec
push
add
add
add
xchg
and
add
scas
and
mov
add
add
sub
and
addr16
add
add
add
sub
cltd
or
aas
add
add
loopne
std
adc
fwait
add
add
dec
add
add
add
add
add
inc
in
add
push
in
add
int3
add
add
sub
add
test
add
add
add
add
sbb
ret
add
popf
add
lahf
lock
and
add
add
add
mov
dec
and
add
add
test
add
add
push
add
add
add
add
insb
add
add
arpl
add
push
test
adc
add
add
sarl
add
add
fisubrs
or
mov
add
cmp
sbb
add
lock
add
add
dec
add
xchg
add
fsub
jl
out
add
loop
add
add
add
add
add
ds
add
add
mov
scas
in
xchg
rcll
add
add
leave
add
add
lods
stos
add
inc
add
jne
add
sbb
add
add
add
add
add
add
add
mov
add
xchg
clc
ljmp
add
add
mov
add
add
add
add
add
add
aad
gs
add
sbb
add
add
add
add
add
add
add
jae
int
push
xor
outsb
add
nop
add
arpl
add
popa
add
mov
add
add
push
int3
lret
add
outsl
add
add
add
inc
pushf
add
add
xchg
add
add
add
cmp
ja
inc
add
add
mov
add
add
add
mov
push
add
pop
add
nop
mov
add
jge
nop
add
and
add
add
mov
loopne
dec
or
es
cmp
add
mov
lds
incb
or
add
add
add
mov
adc
jle
add
jne
cmpsl
lds
add
xchg
mov
add
jno
rcl
mov
add
add
add
sti
dec
mov
jno
add
insb
in
cwtl
add
add
add
push
and
add
add
add
add
test
insl
add
add
add
add
add
add
sbb
push
add
xchg
enter
pop
test
add
push
fnsave
add
movsb
and
pop
add
add
repnz
in
add
add
add
add
add
xor
add
ja
inc
add
add
roll
arpl
add
add
add
add
add
gs
add
add
xor
inc
dec
clc
add
sbb
add
in
in
ja
popf
add
loopne
add
add
add
and
add
add
add
add
add
add
push
sub
push
add
insb
add
add
add
in
int
add
adc
sbb
inc
imul
jle
jp
adc
adc
add
add
mov
push
add
jle
add
add
add
cltd
add
add
add
add
inc
add
add
add
add
sarb
jbe
mov
push
add
add
inc
call
add
add
add
add
insl
insl
outsb
add
add
clc
and
mov
add
add
test
add
pop
add
pusha
add
add
add
add
jl
loopne
add
add
ljmp
adc
add
add
add
add
add
aas
add
int3
push
fcomi
add
add
add
add
fisttpl
add
lock
add
mov
pusha
int3
pop
add
add
sub
add
lret
add
add
add
add
add
add
sub
lds
add
add
stc
add
or
add
add
cwtl
jae
add
add
scas
add
add
add
add
adc
xor
sbb
add
lret
add
add
push
add
into
add
add
add
add
jge
add
cmp
add
add
flds
jl
add
add
or
dec
cmpsb
adc
push
jae
add
or
add
add
add
add
add
add
sub
dec
jmp
add
add
add
add
add
pop
add
inc
add
xor
add
add
add
dec
add
add
add
mov
add
dec
add
push
cmp
add
add
xor
add
cld
inc
inc
xchg
iret
add
push
add
add
push
in
testb
lea
xchg
add
add
add
fldl
add
sub
daa
push
add
add
add
dec
add
add
cltd
sbb
add
add
dec
add
lods
add
leave
stos
cmp
add
sbb
imul
add
push
add
add
jmp
add
inc
add
add
add
add
sub
add
add
inc
add
add
add
sbb
add
add
add
fildl
mov
daa
add
add
jg
add
jmp
push
add
add
cmp
add
out
jmp
add
add
inc
add
pop
add
add
aad
cmp
xchg
mov
add
pop
add
ficoml
push
add
add
add
jns
add
add
pop
add
lret
movsb
add
mov
add
cmp
add
jmp
mov
popf
xor
add
add
push
add
mov
add
in
add
add
xor
xchg
add
std
add
add
inc
test
inc
add
pop
add
cmpsl
add
and
add
add
out
add
repz
cmp
add
imul
cwtl
push
call
add
aam
add
or
add
add
add
mov
add
add
cmp
loop
ja
mov
addr16
add
add
add
inc
add
add
clc
add
add
add
add
xchg
add
add
test
add
pop
add
add
add
add
add
add
sub
add
loope
add
mov
pop
add
push
add
add
inc
add
add
add
jnp
std
ret
cmp
inc
add
add
add
add
adc
add
incb
dec
std
jno
xchg
pusha
mov
or
add
mov
fdivp
nop
ljmp
add
rolb
add
add
jbe
add
add
daa
add
out
add
iret
add
add
add
add
subl
xor
add
add
out
add
add
add
cmc
add
add
dec
add
add
add
sbb
add
add
add
add
outsl
cmp
mov
add
add
add
add
add
iret
rolb
add
add
add
fiadds
cli
xchg
add
add
add
add
add
ret
cmp
jmp
push
add
pop
add
ret
add
mov
add
and
add
add
pop
add
add
sub
add
add
add
and
add
shlb
mov
std
inc
add
add
bound
add
fiaddl
adc
add
add
add
push
dec
int3
add
xchg
adc
cltd
je
add
stc
add
add
add
add
add
sub
add
push
xchg
add
out
mov
add
cmp
add
add
dec
dec
add
testl
add
add
xor
add
add
add
inc
ljmp
jno
add
add
add
imul
movsb
add
insl
aas
flds
add
imulb
add
sbb
add
test
add
add
addl
test
std
adc
add
in
sbb
add
imul
mov
add
add
add
popa
pop
sub
lahf
add
add
add
cmp
or
pop
int
add
mov
jmp
add
pop
movl
add
nop
push
or
jae
lods
add
or
cmp
xchg
call
lea
add
add
add
ja
add
dec
adc
sbb
and
add
add
jmp
add
add
dec
add
enter
fadds
test
add
add
xlat
add
xchg
clc
movl
add
add
aam
add
add
xlat
add
orb
add
add
lret
lods
add
add
dec
rcrl
pop
add
add
add
add
add
in
add
add
add
add
bound
add
mull
add
add
add
add
and
lock
cmpsb
dec
add
add
nop
add
mov
add
pop
add
push
adc
add
add
mov
dec
push
add
add
add
ret
pop
mov
add
add
add
add
pop
add
mov
adc
hlt
adc
add
out
add
xchg
lods
jo
jg
add
add
pushf
add
cmp
pop
inc
aaa
push
pop
xchg
sub
cmp
ds
ss
mov
add
das
or
add
add
out
or
add
cmpsb
add
dec
inc
mov
add
repz
mov
call
add
mov
mulb
pop
jbe
add
cld
add
jp
mov
add
add
xor
dec
repz
push
sti
inc
sbb
add
dec
or
add
aam
outsb
setbe
sbb
test
lret
and
add
add
add
fsts
sar
mov
mov
or
add
iret
and
fs
mov
bound
lock
pop
dec
sbb
push
icebp
cmp
cmp
imul
aaa
pop
mov
daa
lock
sub
inc
inc
jmp
add
mov
fimull
dec
mov
add
xor
and
aas
pusha
or
add
pop
test
add
and
add
addb
dec
out
push
out
cmovo
add
dec
xor
push
stos
add
int3
int3
fs
add
add
add
inc
imul
jae
push
scas
xchg
call
fstl
add
cmp
add
popfw
shlb
pop
dec
lods
xor
add
dec
mov
dec
mov
add
repnz
and
add
add
push
rolb
add
loopne
pop
rcrl
adc
movsb
add
push
dec
mov
push
add
insb
push
repnz
jmp
out
push
into
inc
mov
xlat
iret
xlat
test
mov
hlt
push
push
mov
push
add
lahf
xchg
add
sti
mov
lods
adc
or
add
ret
popf
cmp
add
lea
add
push
sbb
inc
lds
and
add
push
pop
xor
dec
pop
sbb
insb
add
add
add
lcall
pusha
cmc
fcmove
cmp
push
icebp
adc
loop
ljmp
test
add
lods
jp
ds
jbe
dec
ret
add
xor
nop
mov
fldl
hlt
jg
xor
fdivrl
js
mov
movsl
mov
pop
mov
mov
pop
imul
gs
cltd
sbb
push
add
mov
add
jb
add
fstps
xchg
and
adc
mov
dec
int3
aam
ret
mov
mov
dec
hlt
sub
test
add
add
popf
bound
add
jns
out
insb
int
int
sahf
and
sub
add
mov
daa
adc
add
jne
lret
adc
scas
adc
add
jno
mov
sti
push
in
clc
mov
xor
sbb
add
mov
push
pop
push
call
dec
idivb
push
jle
add
mov
inc
mov
or
ficoml
inc
sti
int3
ret
cmc
add
xor
mov
add
mov
or
mov
adc
adc
pop
inc
fldl
add
sub
add
rorb
mov
arpl
add
out
int
scas
sub
add
xchg
push
pop
mov
add
inc
lahf
idivb
or
xchg
imul
mov
add
dec
out
pop
inc
push
out
sub
xor
aaa
lcall
or
add
nop
inc
xchg
movsl
add
add
and
cmp
adc
ljmp
add
jae
adc
xchg
cmp
add
and
testb
jne
mov
sbb
add
add
adc
ds
in
dec
mov
scas
add
fidivs
jbe
popa
mov
in
shlb
and
cmc
cmp
add
mul
fisubrs
add
jb
popa
jmp
in
faddl
mov
jne
add
pop
data16
add
lods
or
add
push
add
out
dec
mov
add
mov
xchg
cli
int3
jno
mov
shrl
add
inc
pop
xor
fists
mov
push
mov
out
das
fwait
push
add
rorl
add
out
sub
dec
cmpsl
xlat
or
pop
xor
enter
das
daa
jb
and
add
lds
adc
hlt
stos
add
int
sub
jge
add
push
shld
cld
loope
shl
inc
inc
and
scas
add
fucomp
sbb
sub
add
add
jmp
iret
jne
dec
dec
jl
sub
lahf
add
add
mov
add
lods
movups
loope
adc
dec
cmp
int3
inc
or
add
mov
test
add
ret
ljmp
lods
test
mov
pop
popa
mov
lahf
cmpl
addb
mov
ret
outsl
mov
imul
jbe
stc
jg
mov
add
fidivrl
push
push
add
jae
enter
add
xchg
add
add
inc
xchg
push
xor
sbb
das
cmp
lock
add
lods
add
mov
pop
sub
add
mov
add
add
xchg
ja
mov
xor
adc
xor
jo
pop
hlt
sbb
fistpll
cmc
addb
jno
and
add
sub
movsb
add
rorb
das
stc
mov
adc
out
inc
movntq
rcrl
iret
sahf
inc
lahf
push
in
xchg
shrl
jo
fisubrl
add
call
outsl
mov
add
call
jnp
add
adc
decb
add
add
add
mov
pop
lods
add
jp
lea
add
lcall
out
popa
out
lea
aas
lds
add
jns
inc
xchg
add
mov
out
add
test
inc
hlt
pusha
jns
ljmp
test
add
sbb
add
insl
lds
cmc
xchg
add
sbb
in
int
jo
cmp
out
mov
add
xor
jp
adc
dec
sti
jg
jle
sbb
aam
ret
fdiv
push
sbb
in
loope
shrl
add
bound
and
add
cli
iret
lahf
mov
push
iret
sub
add
add
int
push
stos
pop
repz
mov
push
jae
or
dec
sbb
dec
xchg
fadd
inc
and
add
add
dec
ficoms
lret
pop
loop
stc
cmpsb
add
pop
or
add
sub
add
in
mov
and
scas
jge
add
rol
adc
jb
dec
cmp
add
movsl
movsb
add
pop
and
in
dec
stos
add
lret
inc
test
loop
les
mov
or
add
add
add
add
int
sbb
or
add
xchg
cmpsl
push
sbb
add
xlat
mov
jne
jecxz
cwtl
jecxz
dec
sbb
cld
xchg
out
xchg
lods
add
pop
mov
sbb
add
cmp
pop
in
dec
and
add
add
ret
das
mov
hlt
fucomi
int3
aam
stos
add
pop
pop
pushf
mov
pop
das
mov
mov
add
or
inc
pop
add
sub
add
test
jbe
sbb
add
in
push
mov
and
add
or
add
mov
adc
sbb
add
and
test
add
add
pcmpgtb
adc
pop
ficoms
xchg
pop
ficoml
and
mov
add
sti
out
aas
or
add
and
inc
ja
popa
add
imul
pop
or
add
mov
dec
popa
insb
icebp
movsl
outsb
paddsb
pop
inc
push
rcrb
fisubrl
add
mov
sti
fisttpll
test
mov
mov
lea
add
xchg
xor
cmpsl
out
push
add
ja
aad
xor
sub
add
cmp
ret
add
imul
outsb
dec
addb
mov
add
in
shll
test
and
add
jle
jecxz
ss
bnd
cwtl
cmp
add
add
scas
rcll
add
or
add
jl
sub
add
add
pop
jg
add
push
add
add
sub
xor
add
add
enter
and
add
add
and
shrl
add
outsb
repnz
inc
int3
out
outsb
sub
add
neg
iret
or
add
popa
add
add
jp
add
xchg
xchg
mov
daa
pop
cmp
adc
add
flds
decl
aam
push
out
jo
movsb
add
int3
idivl
mov
xor
scas
add
in
andl
pop
pop
subl
add
pop
and
add
shl
add
push
add
cmc
jle
add
inc
cmp
sti
out
adc
pop
int
add
lea
bswap
sub
add
add
movsb
add
mov
add
cld
adc
hlt
push
add
loope
jnp
negb
data16
mov
jns
imul
ljmp
add
push
adc
pop
push
pop
popa
fcmovnu
adcl
adc
mov
sti
movsl
adc
mov
push
mov
add
sbb
push
adc
push
je
sti
or
add
add
test
add
dec
ret
cmpsl
sahf
push
add
fidivs
cmc
repnz
js
icebp
cltd
cli
xor
add
dec
jmp
jle
into
pop
xchg
mov
sub
add
mov
js
sub
add
lret
adc
adc
cmp
icebp
fstl
dec
in
dec
cli
repnz
cli
pop
shll
dec
sbb
test
add
add
sbb
daa
cltd
bound
in
add
cmc
xchg
scas
add
mov
call
mov
add
jae
add
xor
jnp
mov
ds
add
ljmp
loopne
stc
daa
pop
jmp
addb
add
add
int3
push
push
div
inc
repnz
mov
loopne
scas
add
pop
push
pop
xchg
enter
add
add
in
cmp
addb
mov
mov
add
xor
add
sub
cmpsb
add
mov
jmp
adc
mov
adc
dec
and
add
std
shl
into
mov
sub
mov
mov
ja
icebp
sub
and
jae
add
dec
adc
xchg
dec
adc
inc
xor
jg
sub
add
or
add
pop
push
add
int
cmc
pop
jb
repnz
add
sbb
xor
add
sub
add
mov
dec
or
add
jns
jne
jmp
mov
sub
add
rorl
movsl
dec
add
add
test
add
add
cld
or
std
pop
test
add
add
movsl
ja
mov
add
add
add
sbb
add
gs
jns
push
mov
xchg
add
xor
repz
add
cmpsb
add
addb
test
mov
add
fs
and
scas
add
sub
add
sarb
inc
xor
pop
jno
ljmp
add
scas
push
add
push
cmc
adc
jns
dec
inc
mov
dec
inc
enter
mov
add
js
fbstp
add
ljmp
test
outsl
mov
cmp
addb
inc
call
in
nop
or
int
cmpsl
and
push
add
push
add
cltd
rol
ret
adc
popf
push
std
daa
sub
add
xchg
pop
dec
inc
jne
xchg
cmpsl
pop
bound
add
jo
popa
jb
popf
mov
daa
ficoml
add
sbb
jp
xchg
jge
dec
pop
outsb
add
add
cmp
mov
add
xor
cld
push
push
ja
pusha
mov
add
push
dec
and
add
sbb
lods
add
xor
pop
clc
scas
add
loop
dec
cld
lock
fidivrl
push
add
gs
sbb
dec
icebp
mov
mov
add
xor
ja
subl
mov
test
add
cwtl
in
or
add
scas
add
lods
push
sbb
in
xor
add
and
pop
cmpsl
pop
jno
test
rorl
push
lock
inc
out
jo
add
fcom
add
dec
cmpl
jb
mov
int
imul
enter
int3
xor
popw
fimuls
in
cmc
ret
cmc
aam
enter
insl
add
sub
pop
roll
add
in
add
xchg
pop
pop
dec
xchg
add
in
dec
enter
cmp
mov
out
loop
fisubrs
add
and
addb
fcoml
aam
push
or
push
inc
out
stc
push
repz
in
mov
pushf
mov
test
mov
js
sahf
repnz
int
mov
pop
sahf
ljmp
or
sahf
rolb
xor
int3
xchg
add
mov
ret
push
pop
mov
push
cwtl
sahf
adc
add
cmp
lods
mov
imul
enter
cmp
or
add
aaa
cmpsb
add
insb
fstpt
sbb
fimuls
cmp
add
call
mov
add
lock
movsb
add
fldcw
push
push
jmp
pop
sahf
js
dec
pop
push
add
push
mov
add
out
insb
mov
pop
out
or
add
sub
add
sahf
scas
add
movsb
add
loopne
addr16
add
lahf
or
pusha
out
enter
loopne
xchg
call
imul
add
cwtl
out
stos
add
stos
add
pop
sbb
imul
cmp
sbb
add
shlb
sbb
add
dec
leave
push
add
out
cwtl
mov
loop
pop
fidivl
mov
repz
test
add
std
pusha
add
xor
and
sub
add
fwait
lds
add
lret
push
mov
add
jp
cltd
cmp
pop
out
in
iret
sbb
insb
sbbl
mov
nop
cmpsb
add
pop
cmp
imul
add
leave
fimull
into
xor
push
mov
xchg
xchg
insl
or
add
mov
add
pusha
push
lods
add
jle
ja
mov
or
sub
add
das
aam
sub
add
int3
out
rcrl
xchg
das
sub
cli
pop
lcall
cmp
out
je
xor
daa
and
cmpsb
add
lea
sbb
and
add
sahf
sarl
xor
xchg
add
xor
xor
add
test
pop
mov
add
add
rcl
pushf
cli
adc
mov
add
pop
push
int3
push
add
push
adc
cmp
xchg
add
aas
xchg
sub
add
pop
xor
jle
add
repnz
sub
add
add
cli
inc
aas
ja
xor
pop
xchg
mov
add
xchg
inc
into
sbb
gs
iret
mov
fbstp
add
lret
mull
sahf
add
add
fsubrl
int
sub
mov
add
rol
cmpsl
out
add
fmull
add
fnstsw
gs
dec
pushf
and
movsb
add
or
int3
in
in
add
add
mov
jbe
add
fbstp
jge
cmpsl
movsb
add
sub
mov
adc
jmp
xor
imull
mov
add
ljmp
std
outsb
test
enter
js
test
test
std
xor
mov
add
dec
cmpsl
inc
dec
inc
mov
mov
sub
add
mov
imulb
add
stc
dec
cli
add
adc
add
cwtl
adc
push
jecxz
add
pop
xor
xor
pop
cmc
mov
fbstp
xor
add
je
add
push
jo
add
pop
mov
add
pop
arpl
add
add
add
mov
fadds
add
push
xor
push
xor
data16
add
mov
lahf
sbb
arpl
js
mov
mov
xor
xchg
add
inc
and
add
add
mov
add
add
sub
add
or
add
mov
cmp
jae
fstpl
and
add
pushf
aad
lcall
sbb
mov
add
arpl
add
xchg
in
cmp
add
leave
notb
out
movsl
inc
in
imul
jb
add
sbb
ret
add
in
scas
add
ficompl
pop
test
add
inc
pop
inc
out
and
add
shll
inc
shr
or
add
jl
sbb
add
scas
add
out
mov
push
movsb
add
dec
sbb
shlb
sbb
inc
push
pusha
pusha
cmp
pushf
fadd
pop
mov
insb
pop
mov
add
cmp
pop
iret
into
xchg
pmaddwd
xor
add
popf
add
add
mov
lcall
inc
add
or
add
jle
lahf
sbb
jbe
inc
mov
add
add
inc
iret
mov
cmpsb
add
mov
add
sbb
leave
addb
xchg
fdiv
js
mov
push
add
and
sbb
aam
dec
and
jns
add
test
ret
addr16
add
cmp
insb
xchg
add
inc
stos
pop
nop
add
add
or
add
dec
jbe
int
fcoms
daa
add
add
add
addb
aaa
fcomps
icebp
or
add
sahf
mov
xchg
add
mov
dec
dec
fwait
dec
aam
xchg
test
inc
imul
jnp
add
int3
ret
icebp
xor
add
je
ds
movsl
inc
push
adc
pop
sbb
dec
mov
jg
sti
adc
pushf
fildl
test
add
clc
add
add
dec
pop
std
aas
movsb
add
ja
dec
mov
clc
rolb
sub
jae
ret
imul
scas
lret
jno
push
add
add
add
aam
mov
mov
cmpsl
les
je
inc
inc
jnp
or
add
add
fcompl
jle
dec
dec
cmp
lods
add
dec
gs
mov
push
xchg
aaa
bound
add
push
jne
pusha
add
add
add
test
jae
pop
lds
mov
popa
aad
sub
add
push
gs
stc
pop
mov
add
pop
idivb
add
or
std
iret
or
add
cmp
push
sbb
mov
lret
and
add
add
mov
inc
mov
adc
mov
add
cli
mov
add
mov
inc
dec
mov
inc
fsubl
bound
or
int3
arpl
add
push
add
cltd
ret
fcmove
mov
add
add
add
cltd
mov
add
ljmp
pushf
dec
lea
pop
addr16
in
shll
adc
add
outsl
or
out
jmp
ret
add
add
repnz
fidivrl
add
inc
xor
lret
pop
xor
dec
jmp
add
jg
lcall
clc
sti
pop
xor
nop
addb
mov
add
or
add
insb
jg
adc
loopne
int3
out
dec
lea
aaa
ja
dec
inc
sbb
mov
add
lock
mov
jbe
inc
cmp
add
test
and
hlt
cld
lret
outsb
loop
push
mov
mov
pop
popf
lahf
lds
cmc
jmp
fdivrs
add
ss
mov
add
xlat
cmp
adc
scas
js
hlt
jb
lds
sbb
add
inc
arpl
push
push
mov
push
jmp
addb
loopne
test
add
test
add
inc
daa
test
add
and
jbe
add
jmp
fists
jmp
mov
and
add
dec
ja
mov
add
mov
sarb
push
jb
dec
test
add
iret
cmpsb
add
fnstenv
mov
mov
aam
fildll
or
push
arpl
lret
inc
pop
and
add
sar
inc
movsb
add
into
mov
pop
jae
mov
add
dec
xchg
test
mov
jle
jecxz
xchg
xchg
cmp
jnp
xor
add
out
adc
add
ja
xchg
push
mov
add
cmp
add
mov
insb
js
out
jmp
add
fbstp
add
xor
add
sbb
fsubrl
mov
add
add
fsub
imul
adc
add
rclb
xor
sub
add
pop
cmpsb
add
and
add
in
push
out
bound
push
mov
add
daa
pop
fdivs
adcl
inc
das
ds
lods
call
cmpsl
cwtl
push
addb
xchg
add
xchg
add
pusha
push
xchg
addb
mov
mull
add
jle
add
ret
or
xchg
les
push
aas
push
adc
add
sbb
add
push
js
frstor
rclb
xor
mov
pusha
add
add
add
test
add
je
aas
dec
insb
mov
fsubp
jns
stos
add
adc
or
maxps
add
xor
inc
adc
add
add
cltd
sub
add
xchg
shlb
and
add
mov
data16
add
cmp
jno
cmp
adc
pop
gs
stc
xchg
pop
fldt
add
add
inc
pusha
dec
iret
in
ror
loopne
sub
mov
call
testb
adc
mov
add
mov
add
cld
cmpsb
add
aaa
imul
mov
add
mull
push
pusha
mov
mov
add
in
lret
je
xchg
add
insl
jae
aad
imul
dec
push
and
jl
inc
jp
add
push
jne
lret
push
imul
jbe
imul
pop
adc
aad
and
arpl
call
add
lock
pop
cmc
stos
add
xlat
dec
or
add
mov
mov
mov
push
push
push
lock
outsl
sbb
lea
clc
out
push
shrb
cli
jmp
test
add
addb
mov
add
mov
add
enter
adc
add
mov
icebp
xor
mulb
das
out
clc
xchg
lret
jne
cltd
movsl
bound
xorb
in
add
push
push
push
xor
mov
call
cld
sub
inc
add
imul
nop
push
pop
and
cmp
je
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
call
inc
test
lea
jne
movzbl
or
mov
cld
not
imul
and
es
call
jmp
sbb
pop
push
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
xor
repz
test
jne
jmp
xchg
je
xor
mov
jmp
fwait
enter
jmp
shl
outsl
test
add
xor
add
add
jb
inc
add
add
xchg
cmpsl
sbb
pop
adc
mov
dec
and
add
add
adc
stos
add
sbb
mov
add
xchg
jp
add
pop
addb
add
add
jne
lods
add
iret
int3
int3
test
and
add
daa
cmpsb
add
inc
jmp
jecxz
shrb
clc
xchg
xchg
dec
jns
sbb
xor
pop
hlt
fwait
stos
add
gs
cmp
cmpsb
add
pop
jbe
filds
add
or
add
mov
add
push
cmp
push
pushl
adc
aam
add
arpl
add
pop
jp
pop
ficompl
xor
add
js
rcll
xchg
sbb
dec
mov
sbb
inc
test
add
dec
mov
xor
sbb
shr
lret
or
scas
loopne
add
sti
fadd
dec
mov
sub
add
push
add
jo
xor
stos
add
sub
add
daa
add
jb
add
jno
xchg
bswap
ja
add
add
mov
cmp
test
add
sbb
add
ret
jl
mov
push
add
out
add
jmp
pushaw
lret
dec
xor
xchg
xchg
gs
push
and
sub
stc
xor
or
clc
xor
jb
nop
pop
add
add
xlat
jle
xor
lods
add
fwait
mov
add
insl
mov
mov
mov
mov
je
imul
mov
add
xor
add
adc
sbb
add
add
add
push
inc
push
scas
pop
mov
psubsw
sub
add
pop
inc
in
xor
call
mov
xor
in
adc
add
pop
repnz
add
inc
imul
add
sarl
add
pop
and
add
adc
js
iret
test
add
sbb
imul
je
add
add
add
pop
xor
dec
mov
add
jp
add
jmp
push
lods
add
xchg
ficomps
add
add
add
sbb
add
test
mov
inc
mov
and
add
jg
mov
test
add
jnp
test
add
mov
add
fwait
mov
jbe
push
lock
add
shlb
out
sbb
add
mov
and
add
daa
in
pop
inc
adc
add
add
addb
rorl
add
add
cmp
loop
add
add
add
inc
mov
sbb
insb
stos
aam
leave
adc
pop
xchg
lock
lock
cmp
out
aas
jb
out
jle
or
add
add
cmp
push
aaa
fcmovnbe
adc
cltd
xchg
add
jnp
xchg
inc
add
add
dec
test
add
xchg
addb
xlat
std
jg
xor
mov
loope
xchg
pop
testl
add
movsb
add
fistpl
int
loop
adc
rolb
adc
xchg
xchg
add
add
cmp
add
iret
call
outsb
stc
mov
repnz
add
movsb
add
mov
addb
popf
test
add
add
stc
and
add
jecxz
call
lock
add
add
add
pop
les
add
pop
adcl
jne
add
push
addb
sarb
into
xor
xor
add
fwait
addb
xor
mov
stc
je
xor
xlat
lcall
add
dec
ret
incl
cmp
add
jne
fstpt
das
arpl
add
cmpsb
add
pop
push
imul
add
or
add
add
mov
add
adc
sub
inc
out
and
add
bound
push
out
and
add
adc
add
push
mov
push
cli
xchg
jns
mov
add
add
pop
cld
inc
push
sub
add
add
mov
lahf
lahf
jmp
ret
lret
mov
out
or
add
add
push
add
nop
aad
inc
into
sub
inc
cmpsl
sahf
xchg
add
add
add
push
mov
add
push
lods
add
lret
lret
rorl
add
lods
cmp
and
add
test
pop
pop
cmp
loopne
inc
sub
add
addb
sub
imul
rcll
or
hlt
mov
movsl
pop
enter
add
arpl
and
jb
pop
mov
mov
add
test
add
sbb
outsb
push
inc
pop
int
bound
sbb
fcoms
and
add
add
mov
xchg
cmp
jno
cmp
pop
xchg
aad
or
add
and
add
pop
mov
add
push
rorl
imul
cmpsb
add
pop
insl
mov
add
iret
pop
icebp
negb
push
jg
call
and
add
imul
sbb
jg
add
test
add
dec
loop
gs
pop
addb
fnstsw
add
adc
aaa
jns
add
ja
imul
xor
test
in
push
xor
add
add
add
pop
or
add
movsb
add
inc
and
add
push
pop
add
add
add
scas
add
cmp
ss
sbb
sbb
add
std
pop
mov
xor
and
add
mov
scas
add
add
sbb
aad
sbb
add
pushf
jno
add
clc
addr16
mov
aad
in
lret
into
pop
sbb
jne
bound
pop
imul
and
jae
mov
add
out
gs
and
lods
clc
lret
xlat
pop
in
dec
push
in
add
adc
add
add
addb
out
add
add
add
mov
add
xchg
mov
push
mov
fdivrs
and
add
ret
sti
mov
add
ds
mov
cmp
repnz
loop
xor
cmp
into
push
inc
mov
dec
push
dec
ficompl
and
push
jns
mov
add
mov
xchg
insl
negb
sub
add
loop
push
sbb
inc
hlt
cmp
outsb
dec
and
sub
adc
jl
add
sub
add
mov
add
add
add
add
int
sbb
outsb
dec
loopne
pop
adc
or
cmp
add
jle
rcll
add
mov
mov
dec
addr16
test
add
in
test
add
pop
push
add
push
dec
into
xor
test
add
add
das
mov
loope
inc
fs
add
add
jl
xchg
mov
jl
loop
sahf
inc
push
inc
add
add
arpl
pop
fldenv
jl
adc
add
xor
repnz
imul
ja
add
out
enter
cmp
pop
add
jl
dec
cmp
mov
arpl
add
jmp
jns
mov
add
add
mov
stos
dec
lret
add
xor
cli
xchg
xchg
ljmp
add
pop
inc
popa
mov
add
push
add
add
mov
mov
add
jge
inc
and
cmp
inc
fwait
push
cmp
jge
mov
sub
bnd
pop
rorb
sub
mov
add
mov
or
add
push
or
add
in
add
lret
add
das
out
in
fwait
sti
or
test
jecxz
add
mov
jne
push
push
popa
ret
ss
xchg
pushf
jmp
out
into
test
add
cli
xor
fs
imul
adc
add
int
add
add
add
mov
mov
out
decl
mov
leave
ja
cmp
sub
add
mov
mov
jle
lock
rcrb
and
addb
sub
icebp
jbe
movsl
xchg
mov
imul
add
add
and
xor
xchg
add
add
idivb
xor
divl
fnsave
cltd
or
add
cmpsl
pop
nop
adc
lret
mov
add
scas
mov
add
sbb
add
fsubr
inc
lds
neg
inc
cld
fsubl
js
push
xchg
dec
jns
add
add
or
add
sub
add
shrb
dec
jnp
les
std
sbb
popf
push
adc
jae
xchg
adc
repnz
jge
js
push
cwtl
xchg
add
frstor
cmp
ds
sub
xchg
mov
out
adc
add
mov
sahf
fidivrl
test
add
add
out
lcall
and
dec
jg
push
in
std
std
inc
aad
add
push
outsl
jne
je
jbe
push
test
add
push
jnp
and
add
dec
jmp
lret
jo
sub
add
incb
add
imul
add
jne
shll
lods
add
lea
fwait
mov
add
jb
das
pushf
push
das
popf
dec
adc
outsl
pop
pushf
lret
shll
sub
add
mov
inc
out
dec
frstor
add
adc
lods
add
mov
add
in
lods
add
jecxz
addb
push
inc
mov
xor
rorl
mov
add
mov
test
sbb
add
inc
jnp
jge
mov
xchg
push
push
addb
xor
hlt
mov
add
and
add
push
iret
cmc
in
add
in
mov
adc
mov
add
mov
daa
mov
mov
mov
add
cltd
pop
push
imul
add
pop
jg
jecxz
mov
add
add
push
in
push
push
ficoms
rcrb
lcall
dec
shlb
add
dec
mul
lahf
inc
inc
or
add
gs
clc
push
lods
fsubs
add
add
add
add
add
out
jle
add
lret
repnz
lods
lret
mov
addb
icebp
inc
and
cwtl
dec
out
lods
add
test
add
aaa
aad
xchg
pop
ds
shrd
mov
add
mov
jb
mov
lahf
test
add
jmp
mov
add
arpl
adc
xrelease
add
sub
add
out
sub
or
cmp
add
pop
jae
fwait
xchg
stc
out
mov
sub
add
mov
mov
add
test
add
call
ljmp
and
add
add
shl
gs
adc
ror
cld
sub
js
mov
add
fidivrs
push
in
stos
pop
sbb
cmpsl
mov
sbb
stos
jl
insb
xchg
fdivs
rorl
add
mov
ja
pop
pop
mov
add
xor
inc
in
add
fcoml
test
jmp
repnz
cmc
fwait
js
add
ds
insl
inc
xor
add
scas
lods
xchg
add
test
add
das
push
cld
loopne
movsl
ljmp
mov
int
fs
add
std
xchg
mov
push
popa
subl
scas
adc
mov
push
add
popf
insb
hlt
mov
add
add
inc
lcall
sarl
icebp
sti
jne
add
sbbl
sub
add
jno
into
and
pushl
test
add
jno
leave
dec
dec
pop
mov
add
xor
mov
test
add
jns
rolb
add
and
add
arpl
add
xor
xor
fs
int3
scas
fidivs
outsl
enter
loope
popl
add
push
cmp
inc
stos
add
mov
add
pop
test
xchg
inc
addb
inc
adc
inc
imul
sbb
cmp
mov
sbb
mov
fildll
scas
add
movsl
add
pop
ja
add
test
sbb
inc
js
mov
inc
out
rolb
add
dec
adc
add
xchg
mov
ret
repnz
push
add
jge
outsl
mov
add
ret
pop
mov
arpl
out
addb
jns
and
add
test
popa
sbb
aaa
add
fcomp
ss
add
shll
imul
or
add
repz
aam
mov
fldl
jbe
add
jmp
mov
add
je
lock
in
iret
mov
mov
add
gs
das
xchg
adc
xor
xlat
inc
pop
xchg
push
xor
scas
add
pop
test
add
ret
cmp
pop
mov
xchg
js
fcomps
pop
fdivl
pop
ds
dec
push
mov
or
add
cmp
fldl
int
arpl
push
js
jl
add
add
xchg
ja
test
add
push
push
adc
mov
jp
add
shr
xchg
add
xchg
insl
jbe
enter
cmpsb
add
out
imul
push
orps
fdivrl
push
cltd
mov
add
pop
cmp
clc
cld
int3
rcll
mov
sub
add
cmpsl
push
repz
xor
dec
mov
add
lcall
add
add
push
sar
push
mov
add
add
ss
pop
scas
pop
outsl
cmp
add
add
cmp
xchg
clc
popa
sbb
cwtl
mov
fstl
movb
pop
mov
pop
mov
add
shrl
add
add
push
sbb
add
jmp
add
add
dec
xor
add
cmp
pop
xor
add
ret
dec
sub
add
jl
stos
add
inc
cmpsl
mov
add
push
add
push
push
mov
add
add
add
add
movsl
or
cmp
sti
mov
leave
out
in
mov
ljmp
add
add
dec
scas
jb
add
mov
lds
mov
lret
xchg
pop
xlat
or
add
dec
push
cli
mov
movsl
push
pop
fistps
adc
inc
add
in
nop
leave
nop
jmp
add
inc
add
clc
repnz
nop
cld
jae
out
js
add
lea
mov
xchg
ret
aaa
add
pop
add
scas
add
xor
mov
push
mov
xchg
ret
fwait
add
lahf
jg
sbb
sbb
push
mov
xchg
ret
daa
xchg
add
sbb
add
add
in
nop
leave
nop
jmp
or
pushf
sub
add
or
push
mov
nop
leave
nop
jmp
mov
mov
push
mov
xchg
ret
add
aas
add
add
cwtl
jne
lret
push
mov
xchg
ret
add
add
push
push
mov
nop
leave
nop
jmp
add
out
add
ds
add
subl
repnz
nop
cld
jae
add
pop
js
push
clc
repnz
nop
cld
jae
xchg
jle
aas
push
jb
sub
add
call
clc
repnz
nop
cld
jae
add
rcll
repnz
nop
cld
jae
pop
add
add
iret
ret
clc
repnz
nop
cld
jae
mov
es
mov
clc
repnz
nop
cld
jae
add
add
or
push
aam
pop
clc
repnz
nop
cld
jae
add
cwtl
add
add
aaa
xor
test
and
daa
add
cwtl
dec
pop
dec
add
add
dec
push
push
mov
xchg
ret
stos
mov
pop
add
mov
mov
add
add
dec
xchg
add
dec
cltd
add
add
add
negw
cld
jae
mov
xchg
pop
mov
add
orl
nop
cld
jae
add
daa
pop
add
jne
push
mov
nop
leave
nop
jmp
fildl
lahf
add
repz
movb
mov
xchg
ret
daa
add
sub
cwtl
mov
pop
clc
repnz
nop
cld
jae
aaa
add
add
shr
clc
repnz
nop
cld
jae
add
add
aas
fdivrl
ret
sbb
cld
jae
mov
cs
movsb
add
cmp
shlb
mov
xchg
ret
add
sub
stos
pop
jb
pushl
push
mov
xchg
ret
jle
jg
add
add
add
inc
xchg
jne
push
mov
nop
leave
nop
jmp
leave
add
push
sub
add
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
dec
cltd
out
add
mov
clc
repnz
nop
cld
jae
add
sbb
add
cmpsb
add
sbb
repnz
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
jg
dec
add
into
mov
nop
cld
jae
fcoml
add
ret
clc
repnz
nop
cld
jae
pop
pop
add
mov
mov
nop
leave
nop
jmp
aas
add
add
add
mov
push
mov
xchg
ret
cmpsl
aaa
aaa
aas
xchg
sbb
repnz
nop
cld
jae
xchg
add
or
push
mov
test
add
add
add
icebp
pusha
in
add
ds
clc
and
test
cld
clc
repnz
nop
cld
jae
sbb
mov
clc
repnz
nop
cld
jae
leave
mov
fld1
clc
repnz
nop
cld
jae
add
cs
push
push
mov
xchg
ret
aas
add
push
add
add
ljmp
inc
clc
repnz
nop
cld
jae
add
add
cmp
add
lahf
ror
push
mov
xchg
ret
jb
add
and
mov
nop
leave
nop
jmp
stos
pop
dec
lahf
cmp
dec
adc
cld
mov
add
mov
pop
mov
add
rorb
add
cmp
popa
clc
repnz
nop
cld
jae
sbb
pop
jb
filds
jg
push
mov
nop
leave
nop
jmp
add
add
mov
xchg
ret
add
cmp
jno
jmp
repnz
nop
cld
jae
mov
add
pop
add
std
mov
push
mov
xchg
ret
push
jb
aas
add
movb
mov
xchg
ret
or
mov
daa
mov
clc
repnz
nop
cld
jae
lock
jb
push
clc
repnz
nop
cld
jae
cmp
sbb
push
add
jge
push
mov
nop
leave
nop
jmp
push
sub
mov
xchg
add
push
mov
xchg
ret
add
add
add
dec
shr
clc
repnz
nop
cld
jae
dec
add
idiv
pushl
clc
repnz
nop
cld
jae
sub
jg
out
sbb
jmp
stos
add
push
aaa
add
pop
dec
add
pop
mov
fld1
push
mov
xchg
ret
fcmovne
add
es
add
mov
clc
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
mov
fwait
dec
call
clc
repnz
nop
cld
jae
stos
add
repz
add
repnz
nop
cld
jae
cwtl
add
out
xchg
mov
nop
leave
nop
jmp
insb
aaa
or
fwait
add
mov
clc
repnz
nop
cld
jae
out
or
fwait
cltd
mov
push
clc
repnz
nop
cld
jae
add
out
jg
add
outsb
dec
add
push
mov
xchg
ret
add
add
mov
popa
sub
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
add
add
insb
mov
pusha
clc
repnz
nop
cld
jae
add
add
jle
add
push
mov
xchg
ret
pop
add
aaa
cltd
sbb
and
add
sbb
xchg
lea
in
nop
leave
nop
jmp
sbb
lahf
daa
xor
push
mov
nop
leave
nop
jmp
mov
sub
cltd
rep
clc
repnz
nop
cld
jae
cs
add
add
dec
cmpsb
add
mov
xchg
inc
add
add
mov
add
aaa
in
push
mov
nop
leave
nop
jmp
add
add
add
sub
cmp
push
mov
nop
leave
nop
jmp
mov
fildl
add
insb
xchg
pop
push
mov
xchg
ret
js
pop
sub
add
add
add
nop
cld
jae
mov
mov
add
add
repnz
nop
cld
jae
sub
aas
cmp
add
clc
repnz
nop
cld
jae
mov
cmp
repnz
nop
cld
jae
sub
add
icebp
pop
clc
repnz
nop
cld
jae
add
dec
add
mov
push
mov
xchg
ret
aas
dec
add
add
add
aad
inc
clc
repnz
nop
cld
jae
add
xchg
fildl
and
pop
clc
repnz
nop
cld
jae
xchg
add
add
jle
mov
nop
cld
jae
lock
aaa
add
adc
mov
adc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
es
add
clc
repnz
nop
cld
jae
mov
add
fildl
cs
clc
repnz
nop
cld
jae
jle
repz
sub
cwtl
mov
add
cmp
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
add
int3
pop
add
push
mov
xchg
ret
xchg
cmpsl
add
push
sbb
clc
repnz
nop
cld
jae
cwtl
add
movswl
clc
repnz
nop
cld
jae
add
add
subl
sbb
push
mov
nop
leave
nop
jmp
add
add
add
enter
sub
add
nop
nop
cld
jae
add
pop
add
add
push
push
mov
xchg
ret
add
lock
add
daa
daa
jnp
dec
cmp
repnz
nop
cld
jae
add
lahf
mov
add
mov
clc
repnz
nop
cld
jae
push
add
add
add
jae
mov
mov
add
jnp
fidivs
fildll
int
pop
add
add
add
add
clc
repnz
nop
cld
jae
xchg
add
outsl
mov
clc
repnz
nop
cld
jae
pop
sub
add
loope
andl
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
or
add
add
clc
repnz
nop
cld
jae
add
add
stos
adc
add
push
mov
nop
leave
nop
jmp
add
push
shrb
mov
xchg
ret
pop
add
jle
aaa
sub
push
push
mov
xchg
ret
stos
add
xchg
add
int3
fcmovbe
dec
mov
push
mov
nop
leave
nop
jmp
push
push
add
or
jbe
push
mov
nop
leave
nop
jmp
out
pop
add
mov
shrl
repnz
nop
cld
jae
sub
pop
pop
add
push
stc
xor
push
mov
xchg
ret
cltd
lahf
jb
add
add
mov
repz
repnz
nop
cld
jae
sbb
dec
and
clc
repnz
nop
cld
jae
and
add
add
push
mov
nop
leave
nop
jmp
push
add
addl
add
add
jge
dec
sub
lods
mov
add
add
jg
ds
je
clc
repnz
nop
cld
jae
sub
andl
inc
add
cmpsl
pop
add
and
push
mov
xchg
ret
add
cwtl
jmp
mov
xchg
ret
add
add
pop
add
xchg
xchg
mov
clc
repnz
nop
cld
jae
add
add
jae
andnps
jmp
jg
stos
leave
faddl
and
call
cld
jae
add
cwtl
mov
jp
fistpl
clc
repnz
nop
cld
jae
xrelease
add
cmpsl
dec
les
adc
and
stos
add
fwait
pop
add
mov
add
add
dec
add
add
add
fwait
add
push
push
push
mov
nop
leave
nop
jmp
add
push
dec
mov
add
rep
push
mov
nop
leave
nop
jmp
pop
add
decb
add
clc
repnz
nop
cld
jae
pop
add
fidivrs
repnz
nop
cld
jae
add
jle
ds
pop
push
mov
nop
leave
nop
jmp
add
add
add
add
adc
sub
je
sub
push
mov
xchg
ret
add
mov
repnz
nop
cld
jae
sbb
aaa
imul
clc
repnz
nop
cld
jae
add
add
sbb
in
nop
leave
nop
jmp
add
add
repz
clc
repnz
nop
cld
jae
add
addl
xchg
sbb
push
mov
xchg
ret
cmpsl
sub
or
add
push
add
jne
clc
repnz
nop
cld
jae
add
arpl
nop
leave
nop
jmp
or
push
add
cltd
shlb
mov
xchg
ret
xchg
js
add
add
mov
push
mov
xchg
ret
repz
add
add
add
add
add
add
push
mov
nop
leave
nop
jmp
add
pop
cmpsl
push
xchg
movzwl
clc
repnz
nop
cld
jae
cmpsl
mov
add
sub
add
mov
clc
repnz
nop
cld
jae
xchg
add
add
jg
clc
repnz
nop
cld
jae
dec
jb
add
js
aaa
pop
push
mov
xchg
ret
add
push
add
add
dec
sub
adc
inc
add
add
add
cmp
xorl
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
nop
jmp
daa
fwait
mov
cmc
mov
clc
repnz
nop
cld
jae
stos
add
mov
add
add
lahf
add
add
or
aaa
sub
adc
fucomip
imul
nop
nop
cld
jae
add
add
sub
add
mov
push
mov
nop
leave
nop
jmp
push
add
xchg
mov
clc
repnz
nop
cld
jae
leave
add
add
out
inc
mov
push
mov
xchg
ret
lock
add
add
and
add
in
nop
leave
nop
jmp
out
stos
xchg
mov
call
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
mov
add
mov
add
push
mov
nop
leave
nop
jmp
add
dec
adc
repnz
nop
cld
jae
mov
add
add
sbb
and
clc
repnz
nop
cld
jae
insb
add
add
outsl
xor
clc
repnz
nop
cld
jae
add
add
add
repnz
repnz
nop
cld
jae
add
add
add
add
idivb
push
mov
xchg
ret
add
jb
pop
out
pop
pop
sbbl
nop
nop
cld
jae
xchg
cwtl
add
push
mov
xchg
ret
js
jb
add
mov
add
inc
clc
repnz
nop
cld
jae
add
add
je
cmpw
push
mov
nop
leave
nop
jmp
sbbl
lret
clc
repnz
nop
cld
jae
sbbl
add
add
nop
leave
nop
jmp
add
add
dec
pop
or
pop
push
mov
xchg
ret
and
add
pop
add
clc
repnz
nop
cld
jae
pop
add
mov
add
add
add
loope
test
adc
add
in
nop
leave
nop
jmp
add
fistpl
push
mov
xchg
ret
add
sbbl
mov
xchg
jmp
lahf
fcompl
js
dec
add
add
sub
mov
add
mov
xchg
ret
jle
add
add
fistl
repnz
nop
cld
jae
jb
add
dec
dec
adc
repnz
nop
cld
jae
dec
add
mov
add
mov
xchg
ret
add
cmp
add
jbe
fistpl
push
mov
xchg
ret
repz
addr16
stos
add
repnz
nop
cld
jae
add
add
add
imul
ds
clc
repnz
nop
cld
jae
fistpl
adc
add
repnz
nop
cld
jae
mov
xchg
add
clc
repnz
nop
cld
jae
add
add
push
lds
in
nop
leave
nop
jmp
pop
ds
add
and
add
imul
clc
repnz
nop
cld
jae
add
lahf
pop
stos
add
xchg
inc
add
lahf
dec
add
mov
jb
inc
nop
fwait
xchg
clc
repnz
nop
cld
jae
out
pop
add
dec
add
jecxz
sar
nop
nop
cld
jae
sub
dec
sub
pop
sbb
pop
add
push
mov
xchg
ret
add
mov
push
clc
repnz
nop
cld
jae
add
xchg
add
push
mov
and
xchg
lea
dec
add
sub
add
add
xor
add
fmul
add
clc
repnz
nop
cld
jae
add
add
add
das
cmpl
push
mov
nop
leave
nop
jmp
fwait
add
fwait
lahf
add
add
push
mov
xchg
ret
pop
xrelease
add
push
mov
clc
repnz
nop
cld
jae
add
xchg
mov
push
mov
xchg
ret
dec
sbb
add
add
lods
add
sub
in
sbb
xchg
icebp
xchg
pushf
enter
add
mov
pop
mov
push
push
mov
nop
leave
nop
jmp
pop
add
add
add
sahf
add
push
mov
xchg
ret
add
add
add
xchg
mov
add
in
nop
leave
nop
jmp
mov
add
xor
rorl
lahf
inc
add
add
mov
xchg
lcall
mov
popa
add
add
fildl
add
add
mov
push
mov
nop
leave
nop
jmp
add
add
add
leave
movzwl
clc
repnz
nop
cld
jae
add
add
js
call
clc
repnz
nop
cld
jae
or
add
repnz
nop
cld
jae
xchg
stos
add
pop
clc
repnz
nop
cld
jae
aas
add
jg
arpl
sbb
ret
push
mov
nop
leave
nop
jmp
or
add
dec
cmp
repnz
nop
cld
jae
pop
add
add
or
repz
repnz
nop
cld
jae
add
add
jg
cwtl
and
add
add
push
mov
xchg
ret
mov
cwtl
lahf
test
mov
nop
leave
nop
jmp
dec
or
lahf
pop
fldt
add
mov
push
mov
nop
leave
nop
jmp
add
add
add
mov
and
add
aas
or
add
repnz
nop
cld
jae
add
jg
cs
or
rcll
nop
nop
cld
jae
add
push
js
cwtl
sbb
push
mov
xchg
ret
mov
leave
or
pop
and
mov
xchg
ret
out
cltd
add
mov
add
jge
sbb
clc
repnz
nop
cld
jae
mov
sub
jle
clc
repnz
nop
cld
jae
add
add
in
nop
leave
nop
jmp
add
add
push
add
xchg
add
insb
fsubs
add
call
in
nop
leave
nop
jmp
add
add
mov
add
add
clc
repnz
nop
cld
jae
jb
jg
int3
lret
add
das
mov
clc
repnz
nop
cld
jae
push
push
push
mov
nop
leave
nop
jmp
add
add
lahf
add
mov
xchg
ret
pop
add
mov
jae
inc
add
pop
aas
add
add
outsb
and
mov
xchg
ret
add
add
add
push
mov
nop
leave
nop
jmp
out
or
xchg
jle
fwait
push
mov
nop
leave
nop
jmp
pop
add
mov
add
push
or
add
inc
push
clc
repnz
nop
cld
jae
add
leave
pop
or
add
clc
repnz
nop
cld
jae
cs
sbb
inc
shl
movzwl
clc
repnz
nop
cld
jae
add
jle
fdiv
mov
clc
repnz
nop
cld
jae
jg
add
add
dec
movsl
push
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
mov
add
pop
cmpsl
add
add
add
clc
repnz
nop
cld
jae
es
add
clc
repnz
nop
cld
jae
push
add
add
insl
add
push
mov
xchg
ret
add
add
add
mov
inc
add
add
jne
push
mov
xchg
ret
es
add
add
inc
lock
repnz
nop
cld
jae
add
add
fistpl
pop
pusha
clc
repnz
nop
cld
jae
add
xchg
add
add
clc
repnz
nop
cld
jae
xchg
xchg
add
jle
jnp
nop
nop
cld
jae
add
cmpsl
xchg
mov
xor
mov
nop
leave
nop
jmp
add
mov
add
jb
sqrtps
repnz
nop
cld
jae
add
add
add
jg
cwtl
aam
out
call
push
mov
nop
leave
nop
jmp
pop
add
repnz
nop
cld
jae
pop
cmp
add
add
pop
push
pop
repnz
in
add
xchg
add
add
pop
add
or
fnsave
add
ret
add
popf
fistpl
push
mov
xchg
ret
add
add
out
call
addb
arpl
repnz
nop
cld
jae
faddl
stos
add
add
rcr
mov
push
mov
nop
leave
nop
jmp
push
daa
add
cmpsl
add
clc
repnz
nop
cld
jae
add
add
pop
sub
nop
cld
jae
pop
mov
pop
or
add
inc
pop
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
pop
addl
stos
add
clc
repnz
nop
cld
jae
adcl
pop
add
add
jg
clc
repnz
nop
cld
jae
add
stos
add
xchg
hlt
pushl
mov
mov
sub
arpl
repnz
nop
cld
jae
sub
aas
add
leave
add
and
repnz
nop
cld
jae
js
pop
add
add
push
mov
xchg
ret
jle
add
mov
add
sub
add
test
sbb
add
repnz
nop
cld
jae
out
cltd
in
sahf
add
add
inc
loopne
repnz
nop
cld
jae
sbb
add
lods
clc
repnz
nop
cld
jae
add
leave
add
add
add
or
add
push
xor
clc
repnz
nop
cld
jae
push
and
clc
repnz
nop
cld
jae
add
stc
clc
repnz
nop
cld
jae
sub
add
ljmp
add
in
nop
leave
nop
jmp
add
and
dec
cmp
mov
nop
leave
nop
jmp
faddl
add
fsubs
jge
clc
repnz
nop
cld
jae
stos
add
out
add
push
clc
repnz
nop
cld
jae
add
jb
or
add
repnz
nop
cld
jae
add
add
leave
add
arpl
mov
xchg
ret
mov
add
pop
add
add
push
push
mov
nop
leave
nop
jmp
add
lahf
add
stos
call
push
mov
xchg
ret
or
xchg
add
jb
and
add
mov
test
add
xchg
add
sbb
cltd
push
clc
repnz
nop
cld
jae
add
add
cwtl
add
add
or
mov
nop
leave
nop
jmp
dec
add
push
mov
loop
push
mov
xchg
ret
add
add
cltd
cmpsl
add
test
dec
scas
inc
add
aaa
push
add
push
add
out
inc
add
add
out
add
add
fsubrl
nop
cld
jae
sub
jg
add
sbb
xor
sar
repnz
nop
cld
jae
pop
es
or
add
les
push
mov
xchg
ret
push
fwait
pop
dec
mov
subl
clc
repnz
nop
cld
jae
add
fwait
cltd
pop
ds
int
test
call
in
nop
leave
nop
jmp
add
add
test
sbbb
mov
add
add
and
clc
repnz
nop
cld
jae
mov
out
test
push
mov
nop
leave
nop
jmp
aas
add
sbb
mov
leave
shl
push
mov
nop
leave
nop
jmp
sub
or
add
mov
push
mov
nop
leave
nop
jmp
or
pop
cmp
dec
out
or
add
mov
inc
add
add
aaa
add
add
pusha
pusha
mov
add
repnz
nop
cld
jae
fildl
mov
pop
mov
inc
push
clc
repnz
nop
cld
jae
add
jg
xor
cmpl
push
mov
xchg
ret
or
add
xor
push
mov
xchg
ret
add
add
jb
daa
pop
movzwl
clc
repnz
nop
cld
jae
jg
add
add
clc
repnz
nop
cld
jae
add
pop
aas
cs
sbb
dec
dec
xorl
clc
repnz
nop
cld
jae
add
cli
test
add
shl
movsb
clc
repnz
nop
cld
jae
add
add
add
repnz
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
repz
add
clc
repnz
nop
cld
jae
add
add
mov
out
add
ds
add
push
mov
xchg
ret
add
add
fwait
push
mov
xchg
ret
cmpsl
or
cmpsl
xchg
add
push
clc
repnz
nop
cld
jae
jg
jb
or
and
pusha
add
clc
repnz
nop
cld
jae
add
add
sbb
nop
cld
jae
xchg
push
add
cmpsl
add
stos
notl
in
nop
leave
nop
jmp
add
add
repnz
nop
nop
cld
jae
out
mov
add
add
int
push
mov
xchg
ret
add
or
add
add
movzwl
clc
repnz
nop
cld
jae
push
or
add
xchg
cltd
add
push
mov
nop
leave
nop
jmp
mov
or
push
mov
add
lods
add
xchg
lcall
jno
jb
out
test
sldt
push
mov
nop
leave
nop
jmp
add
add
push
mov
nop
leave
nop
jmp
add
addr16
add
add
movsl
add
clc
repnz
nop
cld
jae
dec
pop
add
push
mov
nop
leave
nop
jmp
add
add
dec
add
jmp
inc
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
sub
pop
cltd
add
dec
adc
add
repnz
nop
cld
jae
dec
stos
or
int3
xchg
repnz
nop
cld
jae
stos
mov
push
add
cwtl
add
clc
push
mov
xchg
ret
stos
add
out
add
add
shr
clc
repnz
nop
cld
jae
add
out
add
push
mov
clc
repnz
nop
cld
jae
push
add
sahf
adc
fstl
cld
jae
add
or
fsubl
jb
repnz
nop
cld
jae
sbb
inc
cmp
ja
fs
mov
nop
leave
nop
jmp
js
mov
lock
leave
push
mov
nop
leave
nop
jmp
add
insb
mov
cmpsl
cmp
test
repnz
nop
cld
jae
push
add
pop
push
add
loope
movsb
push
mov
xchg
ret
cmpsl
js
add
or
add
nop
nop
cld
jae
and
sub
xchg
clc
repnz
nop
cld
jae
add
add
add
add
add
clc
repnz
nop
cld
jae
and
add
push
mov
xchg
ret
push
add
test
out
clc
repnz
nop
cld
jae
leave
add
add
push
mov
nop
leave
nop
jmp
mov
push
mov
xchg
ret
and
cmpsl
add
sbb
push
mov
nop
leave
nop
jmp
add
add
add
add
add
add
add
push
mov
xchg
ret
dec
add
mov
add
pop
clc
repnz
nop
cld
jae
add
pop
add
add
ret
push
push
mov
xchg
ret
add
add
jle
mov
add
outsl
jne
clc
repnz
nop
cld
jae
stos
add
push
inc
mov
push
mov
nop
leave
nop
jmp
or
jb
add
jle
rcll
jge
inc
add
add
jg
stos
mov
clc
repnz
nop
cld
jae
pop
push
pop
pop
add
movsl
fwait
push
mov
xchg
ret
push
pop
fwait
add
testl
sbbl
add
leave
pop
cltd
out
xchg
push
add
xor
push
push
mov
xchg
ret
add
add
mov
fmull
mov
clc
repnz
nop
cld
jae
dec
pop
add
cli
rcrb
repnz
nop
cld
jae
pop
mov
xchg
pop
cltd
les
clc
repnz
nop
cld
jae
mov
add
add
mov
push
mov
xchg
ret
fwait
dec
cmp
js
add
ds
gs
clc
repnz
nop
cld
jae
lock
leave
mov
dec
xor
leave
nop
jmp
or
add
mov
add
clc
repnz
nop
cld
jae
or
add
stos
add
daa
jmp
add
add
add
pop
add
add
leave
xchg
mov
clc
repnz
nop
cld
jae
add
pop
pop
and
in
repz
repnz
nop
cld
jae
repz
sub
add
add
in
push
jmp
dec
sub
addl
jle
add
pop
cwtl
cltd
add
add
add
movsb
add
pop
lea
push
mov
nop
leave
nop
jmp
fwait
xchg
add
push
clc
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
es
dec
dec
pop
mov
lea
clc
repnz
nop
cld
jae
xchg
out
cltd
pop
pop
in
cmp
loop
pop
push
mov
xchg
ret
add
add
add
pop
jb
test
push
mov
nop
leave
nop
jmp
add
stos
push
add
and
add
scas
add
lods
mov
push
mov
xchg
ret
ds
add
or
mov
push
clc
repnz
nop
cld
jae
cs
add
and
push
mov
xchg
ret
dec
mov
add
clc
repnz
nop
cld
jae
add
sub
rep
add
add
push
pop
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
nop
cld
jae
fmull
cmpsl
add
stos
add
shl
je
clc
repnz
nop
cld
jae
mov
add
fidivrl
js
jbe
test
push
mov
nop
leave
nop
jmp
addr16
pop
jb
add
or
add
nop
cld
jae
add
push
daa
dec
xchg
add
mov
call
clc
repnz
nop
cld
jae
lock
add
push
mov
nop
leave
nop
jmp
add
mov
add
sub
mov
clc
repnz
nop
cld
jae
repz
pop
dec
xor
clc
repnz
nop
cld
jae
mov
add
shl
push
mov
nop
leave
nop
jmp
add
mov
repnz
nop
cld
jae
daa
cltd
add
addb
add
call
leave
nop
jmp
repz
cs
add
mov
and
add
push
dec
add
lea
push
mov
xchg
ret
mov
add
mov
mov
xchg
rclb
nop
leave
nop
jmp
pop
mov
pop
add
add
add
xor
clc
repnz
nop
cld
jae
add
jg
add
add
push
push
mov
xchg
ret
insb
mov
or
add
xchg
add
push
mov
xchg
ret
pop
add
add
leave
clc
repnz
nop
cld
jae
aas
pop
add
add
add
flds
sti
clc
repnz
nop
cld
jae
lock
add
add
loope
call
cld
jae
jb
fwait
add
add
out
add
clc
repnz
nop
cld
jae
addr16
xchg
add
mov
nop
cld
jae
sbbl
add
sub
nop
nop
cld
jae
add
jb
pop
add
cmp
add
repnz
nop
cld
jae
pop
dec
mov
imul
clc
repnz
nop
cld
jae
pop
add
dec
fistpl
add
add
cmp
pop
cmp
roll
mov
xchg
ret
xchg
dec
xchg
add
mov
shll
repnz
nop
cld
jae
add
sub
out
sahf
filds
add
repnz
nop
cld
jae
add
pop
dec
and
add
add
clc
repnz
nop
cld
jae
push
add
or
add
dec
ret
dec
push
mov
xchg
ret
add
js
out
pop
add
lock
call
in
nop
leave
nop
jmp
lahf
add
sub
nop
leave
nop
jmp
add
add
add
jae
enter
nop
leave
nop
jmp
repz
add
sub
clc
repnz
nop
cld
jae
sub
xchg
cmpsl
pop
push
dec
add
push
mov
xchg
ret
pop
jb
add
add
add
sbb
repnz
nop
cld
jae
push
add
add
repnz
nop
cld
jae
pop
pop
push
add
add
pop
flds
nop
nop
cld
jae
or
aas
add
add
dec
cmp
push
mov
nop
leave
nop
jmp
daa
sub
fistl
add
add
mov
xchg
ret
pop
fwait
pop
fldt
cmp
sldt
clc
repnz
nop
cld
jae
cwtl
out
add
nop
nop
cld
jae
stos
add
andl
in
nop
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
mov
add
jb
add
mov
adc
repnz
nop
cld
jae
sub
fwait
clc
repnz
nop
cld
jae
add
out
mov
mov
xor
push
add
clc
repnz
nop
cld
jae
fwait
sub
add
repnz
nop
cld
jae
mov
fmull
add
clc
repnz
nop
cld
jae
aas
add
stos
cmp
xor
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
nop
jmp
add
jb
mov
add
in
nop
leave
nop
jmp
add
add
or
clc
repnz
nop
cld
jae
add
xchg
or
xor
clc
repnz
nop
cld
jae
add
ds
sub
add
or
add
add
add
push
push
mov
nop
leave
nop
jmp
add
pop
clc
repnz
nop
cld
jae
add
fistpl
out
lods
push
mov
xchg
ret
fwait
jle
sub
cmp
test
repnz
nop
cld
jae
lock
mov
clc
repnz
nop
cld
jae
add
pop
add
ret
add
add
stos
and
jnp
push
mov
xchg
ret
add
fildl
xchg
add
add
mov
clc
repnz
nop
cld
jae
add
pop
add
daa
mov
dec
int
jg
clc
repnz
nop
cld
jae
stos
pop
add
add
add
clc
repnz
nop
cld
jae
add
jle
add
repnz
nop
cld
jae
add
add
pop
out
shl
push
mov
xchg
ret
add
pop
jg
add
dec
out
mov
push
mov
nop
leave
nop
jmp
add
add
add
adc
jae
pop
leave
fildl
pop
mov
push
mov
xchg
ret
add
sub
fsubrl
push
push
mov
xchg
ret
out
pop
insb
add
add
int
pushl
push
mov
nop
leave
nop
jmp
add
sarb
add
es
clc
repnz
nop
cld
jae
stos
add
leave
add
add
clc
repnz
nop
cld
jae
add
and
insb
add
push
mov
nop
leave
nop
jmp
insb
aaa
sub
mov
pushl
clc
repnz
nop
cld
jae
add
cli
stos
push
clc
repnz
nop
cld
jae
cmp
add
add
leave
mov
push
mov
xchg
ret
or
add
cwtl
mov
mov
nop
leave
nop
jmp
cltd
mov
cltd
sub
mov
fwait
push
mov
xchg
ret
jg,pn
add
xchg
stos
add
shr
push
mov
xchg
ret
add
add
add
enter
dec
in
clc
repnz
nop
cld
jae
add
loope
rclb
in
nop
leave
nop
jmp
mov
add
add
fsubs
clc
repnz
nop
cld
jae
pop
sub
add
add
adc
xchg
jmp
nop
nop
cld
jae
dec
or
ret
add
clc
repnz
nop
cld
jae
dec
pop
jg
add
mov
rclb
nop
leave
nop
jmp
xchg
add
fwait
add
cmp
push
mov
xchg
ret
add
add
add
rorl
fwait
inc
add
add
add
clc
repnz
nop
cld
jae
daa
add
add
addl
mov
add
daa
stos
inc
add
xchg
mov
add
mull
mov
nop
leave
nop
jmp
add
mov
nop
leave
nop
jmp
add
sbb
cmpsl
dec
cmp
xor
clc
repnz
nop
cld
jae
lahf
add
out
out
fwait
mov
clc
repnz
nop
cld
jae
add
mov
add
push
test
add
nop
leave
nop
jmp
add
or
add
xchg
push
and
mov
add
pop
add
fwait
sub
add
pop
mov
clc
repnz
nop
cld
jae
mov
es
add
add
repnz
nop
cld
jae
jle
addl
fildl
nop
nop
cld
jae
sbb
add
iret
mov
clc
repnz
nop
cld
jae
cmp
dec
xchg
mov
clc
repnz
nop
cld
jae
add
push
inc
xor
clc
repnz
nop
cld
jae
add
add
mov
add
mov
add
clc
repnz
nop
cld
jae
stos
mov
pop
pop
clc
repnz
nop
cld
jae
add
cmp
mov
push
mov
xchg
ret
add
cmp
add
je
clc
repnz
nop
cld
jae
add
call
push
mov
xchg
ret
add
add
xchg
sub
clc
repnz
nop
cld
jae
jle
add
leave
add
gs
repnz
nop
cld
jae
leave
or
and
idivl
and
out
dec
add
imul
clc
repnz
nop
cld
jae
mov
cwtl
sub
faddl
popf
push
push
mov
xchg
ret
add
insb
add
mov
call
clc
repnz
nop
cld
jae
mov
add
add
push
mov
nop
leave
nop
jmp
cmpsl
add
rolb
adc
sub
repnz
nop
cld
jae
aaa
cltd
xchg
push
movzwl
clc
repnz
nop
cld
jae
add
daa
rorl
test
clc
repnz
nop
cld
jae
lahf
add
push
mov
nop
leave
nop
jmp
out
add
cmpsb
add
add
add
and
push
mov
nop
leave
nop
jmp
pop
out
pop
add
sbb
mov
push
mov
xchg
ret
add
add
add
and
in
mov
add
add
lock
push
jns
test
dec
sub
clc
repnz
nop
cld
jae
add
and
xchg
jmp
or
pop
jle
out
dec
insb
add
add
clc
repnz
nop
cld
jae
stos
aas
push
mov
ret
push
mov
nop
leave
nop
jmp
add
add
lock
fcmovnu
ljmp
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
add
add
sub
add
xor
push
mov
xchg
ret
add
add
addl
mov
add
nop
cld
jae
cwtl
pop
add
add
add
clc
repnz
nop
cld
jae
add
cltd
xchg
mov
xchg
ret
add
add
add
in
nop
leave
nop
jmp
mov
add
mov
add
xor
clc
repnz
nop
cld
jae
mov
fwait
js
fld1
clc
repnz
nop
cld
jae
push
add
cmpsl
add
stos
iret
call
clc
repnz
nop
cld
jae
or
ret
push
mov
xchg
ret
mov
stos
pop
sub
add
sub
repnz
nop
cld
jae
dec
add
add
pop
clc
repnz
nop
cld
jae
add
dec
add
add
repnz
nop
cld
jae
add
cmpsl
repz
add
push
push
mov
xchg
ret
fcompl
add
jb
add
in
mov
nop
nop
cld
jae
mov
add
add
sub
sbb
rclb
inc
lods
inc
add
cltd
jb
and
divb
inc
mov
push
mov
nop
leave
nop
jmp
dec
push
add
add
or
add
mov
xchg
push
mov
xchg
ret
add
add
fmull
lock
call
cld
jae
pop
dec
add
out
push
mov
clc
repnz
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
or
add
push
adc
push
mov
nop
leave
nop
jmp
add
add
or
mov
xchg
ret
pop
cmp
add
add
stos
cmp
clc
repnz
nop
cld
jae
pop
add
repz
fwait
push
mov
xchg
ret
push
out
add
je
mov
clc
repnz
nop
cld
jae
add
push
add
add
sarl
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
pop
add
pop
jecxz
cmp
in
nop
leave
nop
jmp
jg
pop
daa
mov
nop
leave
nop
jmp
mov
add
mov
mov
push
mov
xchg
ret
add
add
mov
push
mov
nop
leave
nop
jmp
add
or
or
add
lret
pop
push
mov
nop
leave
nop
jmp
add
add
fildl
pop
ret
add
mov
sbb
mov
xchg
ret
add
cmpsl
add
add
int
jo
push
mov
nop
leave
nop
jmp
pop
add
add
lcall
leave
nop
jmp
pop
add
add
add
mov
jmp
decl
cltd
add
add
jg
cmp
clc
repnz
nop
cld
jae
addl
add
push
and
add
xor
clc
repnz
nop
cld
jae
mov
push
je
clc
repnz
nop
cld
jae
add
ds
jns
clc
repnz
nop
cld
jae
add
mov
mov
mov
add
in
addb
les
clc
repnz
nop
cld
jae
add
add
xor
mov
nop
leave
nop
jmp
xchg
add
pop
or
add
or
mov
xchg
ret
stos
out
leave
push
add
add
leave
push
push
mov
nop
leave
nop
jmp
add
cmpsl
push
add
or
jns
push
mov
nop
leave
nop
jmp
add
mov
add
add
div
push
mov
nop
leave
nop
jmp
and
add
or
add
push
push
mov
nop
leave
nop
jmp
sub
pop
mov
out
es
mov
clc
repnz
nop
cld
jae
add
add
add
push
add
push
mov
nop
leave
nop
jmp
stos
add
leave
daa
push
mov
sti
add
add
push
mov
nop
leave
nop
jmp
aaa
add
hlt
mov
lret
in
nop
leave
nop
jmp
dec
or
add
out
test
cld
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
nop
jmp
add
add
pop
cmpsl
add
add
clc
repnz
nop
cld
jae
insb
cltd
mov
pop
pop
pop
sub
in
nop
leave
nop
jmp
pop
sub
add
or
fdivr
repnz
nop
cld
jae
xchg
push
add
add
add
cmp
push
mov
nop
leave
nop
jmp
add
test
loope
inc
add
add
sub
add
add
clc
repnz
nop
cld
jae
or
add
add
cmpsl
push
push
mov
nop
leave
nop
jmp
add
sub
sbb
out
push
jbe
push
push
mov
xchg
ret
add
pop
mov
xchg
add
sub
add
rep
clc
repnz
nop
cld
jae
push
and
lret
clc
repnz
nop
cld
jae
add
add
out
pop
ret
xor
clc
repnz
nop
cld
jae
pop
pop
stos
add
add
add
add
lea
clc
repnz
nop
cld
jae
add
insl
jmp
or
add
add
lock
insb
add
fistpl
clc
repnz
nop
cld
jae
add
pop
add
fidivs
add
in
nop
leave
nop
jmp
sub
add
xabort
nop
nop
cld
jae
pop
xchg
pop
pop
add
ret
clc
repnz
nop
cld
jae
xchg
pop
add
push
fildl
gs
push
mov
xchg
ret
and
add
add
clc
repnz
nop
cld
jae
xchg
addr16
mov
sub
xor
cld
jae
add
sub
add
addl
nop
nop
cld
jae
add
mov
rclb
in
nop
leave
nop
jmp
sub
add
push
push
mov
xchg
ret
stos
add
add
add
add
imul
add
pop
add
insb
add
add
jb
mov
sbb
fistpl
clc
repnz
nop
cld
jae
dec
add
add
and
repnz
nop
cld
jae
add
out
out
repz
lea
clc
repnz
nop
cld
jae
push
cmpsl
add
add
xchg
pop
push
mov
xchg
ret
daa
or
add
pop
daa
adc
clc
repnz
nop
cld
jae
add
aaa
add
add
call
push
mov
nop
leave
nop
jmp
cltd
add
xchg
sub
nop
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
add
add
mov
nop
leave
nop
jmp
pop
add
add
add
push
mov
clc
repnz
nop
cld
jae
add
add
mov
add
mov
add
fs
inc
add
inc
add
nop
nop
cld
jae
jb
ds
add
add
add
clc
repnz
nop
cld
jae
dec
cwtl
or
stos
subl
push
add
clc
repnz
nop
cld
jae
aaa
cltd
cmpsl
xchg
mov
and
sbb
aas
add
or
pop
out
mov
clc
repnz
nop
cld
jae
pop
add
stos
add
sti
stos
push
mov
xchg
ret
add
add
mov
xor
mov
clc
repnz
nop
cld
jae
stos
add
add
js
push
push
mov
xchg
ret
add
mov
add
call
push
mov
nop
leave
nop
jmp
add
add
inc
add
push
mov
nop
leave
nop
jmp
add
add
fsubrl
mov
push
mov
nop
leave
nop
jmp
add
or
mov
add
mov
add
test
call
leave
nop
jmp
add
add
add
movsb
add
orl
cld
jae
add
add
fld1
clc
repnz
nop
cld
jae
mov
mov
fistpl
sub
clc
repnz
nop
cld
jae
cmpsl
add
xchg
add
fs
pop
push
mov
xchg
ret
add
repz
mov
push
mov
nop
leave
nop
jmp
fcompl
add
add
sub
add
add
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
add
mov
add
stos
or
call
clc
repnz
nop
cld
jae
mov
add
fwait
add
clc
repnz
nop
cld
jae
sbb
stos
ds
nop
nop
cld
jae
add
jg
push
leave
clc
repnz
nop
cld
jae
sub
add
adc
xchg
inc
add
xchg
mov
mov
add
add
clc
repnz
nop
cld
jae
mov
push
push
push
mov
xchg
ret
pop
add
fmull
add
add
or
add
add
imul
clc
repnz
nop
cld
jae
cmp
lahf
add
add
push
mov
nop
leave
nop
jmp
add
mov
jmp
xchg
add
xchg
mov
add
and
push
mov
clc
repnz
nop
cld
jae
sbb
mov
insl
mov
push
mov
nop
leave
nop
jmp
add
cmp
leave
or
add
push
mov
nop
leave
nop
jmp
push
add
mov
pop
push
nop
nop
cld
jae
add
add
add
jl
xor
popf
inc
add
pop
pop
add
add
mov
push
mov
nop
leave
nop
jmp
jg
add
add
test
nop
nop
cld
jae
add
stos
mov
mov
int3
call
in
nop
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
or
or
insb
pop
jmp
or
out
add
insb
add
add
add
push
roll
in
nop
leave
nop
jmp
add
lock
clc
repnz
nop
cld
jae
insb
add
jb
xchg
adc
repnz
nop
cld
jae
aaa
add
mov
add
clc
add
dec
mov
add
add
add
pop
rcll
in
sub
or
addl
add
scas
add
add
mov
push
add
xchg
add
mov
pop
jne
sbb
aaa
inc
push
addb
int3
clc
or
aad
popa
mov
mov
rorl
add
hlt
stc
enter
scas
aam
imul
out
add
cmp
mov
scas
add
in
add
rep
xor
fldl
mov
popf
ficompl
out
and
add
mov
push
and
ret
rcll
out
and
add
cld
shrl
and
add
insl
adc
pop
bnd
fimull
pop
dec
mov
pushf
or
add
add
inc
add
add
lds
add
push
add
sarl
inc
push
adc
mov
adc
or
clc
and
testb
adc
add
add
mov
mov
pusha
push
cmpsl
mov
nop
insb
adc
dec
into
pusha
mov
in
mov
push
add
xlat
xchg
jbe
add
mov
adc
xor
jecxz
gs
rolb
inc
lea
add
push
sti
jo
mov
js
bound
add
icebp
in
inc
jns
xchg
pop
pop
arpl
loop
test
add
out
movsl
sub
leave
int3
add
add
sbb
cld
imul
call
fistps
add
add
xchg
movb
aam
sub
or
add
mov
add
inc
jecxz
in
scas
lcall
add
pop
loope
int3
jb
sub
cwtl
mov
sub
add
and
add
and
add
fsubr
js
dec
loope
pop
filds
add
ljmp
jle
xor
xchg
dec
and
push
decl
shll
out
mov
add
daa
pop
gs
add
add
mov
jmp
jo
orl
add
add
loopne
movsl
pop
push
mov
lcall
ret
js
call
add
sub
iret
sbb
cmp
add
idivb
outsl
sub
sbb
and
jns
dec
dec
fidivl
pushf
fwait
insb
enter
test
add
outsl
mov
add
je
or
add
mov
mov
xchg
inc
mov
mov
hlt
adc
loopne
cmpsl
mov
add
stos
add
das
test
push
add
jmp
mov
push
mov
pushf
sub
add
fimuls
fwait
mov
mov
add
cld
dec
sbb
xchg
sbb
inc
push
lods
bound
and
add
mov
add
mov
xor
shrd
add
pusha
xchg
pop
loop
sub
add
fwait
xor
sar
pop
dec
push
xchg
add
clc
pusha
xor
add
dec
inc
in
jae
add
lock
jo
and
or
sar
or
sbb
sbb
cwtl
loope
add
aas
lcall
ss
or
add
xor
mov
enter
inc
sahf
jbe
and
add
pusha
mov
mov
mov
test
ret
movb
mul
iret
stos
add
repnz
pop
inc
cmp
add
or
or
mov
add
scas
dec
push
loope
pusha
in
nop
mov
lds
loope
mov
daa
or
add
aaa
fmul
inc
inc
inc
mov
add
add
mov
add
std
popa
movsb
add
dec
sbb
add
jns
fimuls
add
test
add
ror
xlat
dec
sbbl
add
aas
mov
push
push
int3
sbb
lods
mov
aaa
pop
stos
add
jp
sbb
inc
push
add
fstl
stc
insb
test
sbb
into
lods
adc
add
jge
add
mov
fcmovbe
sub
add
ds
imul
jne
inc
dec
add
out
adc
add
mov
and
add
add
out
flds
cmp
je
ret
gs
mov
add
add
shlb
add
add
out
pop
aas
sti
out
add
fwait
lret
add
push
pop
cwtl
push
cltd
xor
daa
jecxz
pop
xchg
pop
mov
add
pop
inc
jbe
hlt
mov
add
in
cltd
add
sbb
lea
fbstp
cmpsb
add
rolb
shrl
pop
loop
fcmove
mov
add
adc
movb
iret
test
add
ret
add
mov
add
sbbl
adc
cmp
push
add
stc
ficompl
pop
aaa
popa
push
hlt
test
ja
pop
jne
add
inc
out
stc
aaa
xchg
ret
push
add
xchg
repnz
ret
aam
xchg
outsl
sbb
xchg
and
push
adc
mov
lds
imul
popf
or
add
icebp
fimull
jno
mov
add
ret
sahf
adc
ds
jge
jmp
push
hlt
ficompl
addr16
add
out
mov
flds
push
add
and
add
xchg
mov
add
jns
or
add
pop
xor
add
add
xchg
fsubs
shll
enter
add
add
dec
call
mov
add
jo
adc
pop
mov
add
test
mov
add
addb
adc
mov
ret
cmp
add
in
insl
cli
inc
pop
fisubrs
rorb
test
add
mov
add
add
aaa
sub
fs
add
aam
mov
stc
repnz
xchg
push
mov
mov
inc
test
ret
cltd
inc
pop
mov
add
add
aad
hlt
sub
add
add
mov
rorl
je
sub
or
add
int
cmpsb
add
test
pop
bnd
faddl
setg
test
pusha
ja
sub
add
lret
inc
cwtl
aad
ds
pop
xlat
out
lret
dec
repnz
leave
fists
ret
shll
inc
test
outsb
ret
xor
ds
out
mov
mov
lock
push
add
loop
repnz
popa
test
add
sbb
out
adc
add
sbb
les
pop
cmp
pop
mov
add
mov
adc
pop
lret
adc
nop
push
sub
xchg
pushf
jno
add
leave
mov
adc
popa
sub
add
cld
mov
add
std
xor
ja
add
push
jmp
stos
add
mov
in
inc
cmp
xchg
dec
pop
inc
push
mov
icebp
xor
mov
iret
pop
mov
add
xor
fisttpl
add
testb
and
mov
add
int
das
movsl
inc
push
je
cmp
adc
lcall
ret
xlat
and
add
adcl
add
enter
add
dec
clc
xchg
cmp
test
add
and
add
mov
int3
push
inc
in
rorb
xor
fcomp
fstps
pshufw
or
add
lock
add
cli
pop
cwtl
fidivs
fcmovnb
sub
mov
xor
les
cli
dec
cltd
push
push
add
xchg
cmc
test
add
jbe
iret
mov
adc
dec
mov
in
cmc
ljmp
add
das
push
sar
lea
fistpl
sbb
xchg
test
push
add
adc
cli
movsl
sub
push
add
push
add
gs
adc
mov
add
xchg
addb
xor
repz
fcmovu
leave
jmp
sahf
lcall
add
mov
add
xchg
or
add
popa
and
add
sbbl
cmpsl
and
ljmp
cmpsb
add
lahf
stc
fisubrs
add
cltd
jns
push
loopne
dec
xor
shlb
add
out
add
negb
pop
pop
xor
fsub
rcl
in
dec
js
loope
cmc
stc
lds
jbe,pt
add
mov
test
add
ljmp
xchg
dec
adc
loopne
outsl
or
add
mov
call
dec
movb
call
pop
insb
mov
ficoml
dec
mov
into
addb
stos
sarb
xor
rolb
add
sub
loop
push
add
mov
add
test
add
add
daa
dec
inc
pop
add
cmc
iret
repz
jo
sub
add
rcrb
add
pop
jmp
dec
insb
je
iret
loope
test
iret
jp
loope
jnp
adc
add
sub
gs
pop
les
add
pop
cmpsb
add
mov
inc
push
sbb
jne
jp
xchg
or
add
pop
or
xor
push
pop
les
add
or
lret
add
inc
leave
pop
dec
xchg
js
js
jmp
mov
call
jmp
testl
add
push
mov
mov
or
add
pop
out
xlat
dec
mov
lods
xchg
ds
jmp
add
xor
out
add
ljmp
cmp
stos
pop
out
lret
jnp
adc
lds
mov
xchg
push
mov
gs
and
jno
pusha
push
add
out
sub
aad
ja
dec
loop
out
xchg
sbb
je
lock
movsl
call
add
xchg
mov
sub
or
mov
test
add
das
push
movsl
sub
mov
cmc
sbb
mov
mov
add
ljmp
stos
ret
in
out
pop
push
add
add
add
cltd
js
shrb
jo
cmp
dec
cmpsb
add
loopne
pusha
lock
mov
pop
sub
add
jmp
into
shlb
dec
out
sarl
xor
jg
out
add
add
scas
add
and
add
push
push
lahf
xor
add
lock
fwait
add
add
add
sub
sub
add
sbb
out
int3
inc
test
cmp
mov
add
movsl
and
sbb
adc
add
mov
push
or
mov
add
iret
xor
add
imul
sahf
xchg
add
add
add
pop
mov
add
add
adc
addb
insl
sbb
ljmp
scas
jge
pop
pop
xor
mov
sbb
int3
lret
jecxz
adc
movsb
add
add
or
add
and
and
add
lcall
int3
aad
lret
add
add
cmc
stos
add
fisubs
lock
loope
mov
mulb
and
add
ja
mov
inc
mov
loope
push
rorb
lcall
add
sub
inc
push
inc
jb
adc
fwait
leave
sahf
frstor
lds
add
movsl
adc
add
mov
sbb
and
add
repz
add
adc
mov
cmp
push
dec
push
jl
add
aas
lds
andl
add
xor
sbb
cwtl
add
add
inc
pop
out
cmpsl
imul
std
movsb
add
test
mov
add
sbb
pushf
sub
add
xor
gs
mov
pop
xor
sbb
dec
xchg
mov
pop
jle
mov
xchg
sarb
aad
cltd
xchg
mov
add
in
add
push
add
fisubl
add
mov
pop
push
or
add
mov
jp
add
push
mov
xchg
pop
xchg
add
loope
jp
pop
loope
sahf
arpl
lahf
inc
inc
adc
xor
cwtl
mov
cmc
scas
add
fstps
dec
sub
lea
jge
pop
ret
lea
in
inc
stos
add
ret
lods
xchg
movsl
and
pushf
and
add
jo
mov
add
adc
mov
add
mov
add
jecxz
xchg
sub
add
inc
loopne
fistpl
sti
mov
add
imul
add
sub
add
sbb
add
cwtl
ret
xchg
xchg
fists
add
push
xor
add
pusha
or
add
repnz
sbb
sbb
outsb
push
push
jnp
pop
repnz
js
jle
dec
int
adc
add
push
cmp
insb
dec
leave
sub
cmpsb
add
xchg
cmp
add
std
in
lods
add
xchg
jmp
and
push
jp
xlat
dec
je
and
fists
icebp
flds
pushf
scas
sub
mov
add
adc
iret
push
bound
adc
pop
stc
or
sarl
add
and
sti
or
enter
or
add
add
add
add
loop
inc
dec
jmp
mov
lea
insl
mov
daa
dec
push
mov
add
and
bound
outsb
or
add
inc
jle
notl
add
test
add
sbb
out
lret
addb
inc
sub
add
imulb
add
hlt
loope
or
mov
jo
out
fistpl
fnsave
add
mov
imul
push
xlat
xlat
pop
mov
add
pop
sub
xor
add
outsb
sbb
add
test
add
adc
stos
inc
jl
pop
sar
imul
add
lock
scas
add
out
pop
inc
rclb
jge
inc
sbb
xor
xchg
stos
add
dec
repnz
je
push
mov
outsb
mov
jbe
lahf
push
add
pop
push
or
adc
sbb
daa
lods
test
add
fadds
and
lret
jae
aas
insl
inc
push
jp
sahf
out
xchg
add
cmovae
fdivl
pop
pushf
or
inc
sbb
adc
lret
xchg
jbe
cld
and
add
out
inc
mulb
mov
push
lock
inc
dec
pop
addb
and
xlat
iret
int
mov
negl
adc
cmp
add
jp
lcall
lods
add
xor
add
add
into
and
xchg
outsb
scas
add
pop
xchg
cmpsb
add
insb
pop
cmp
out
mov
add
mov
add
add
mov
movsb
add
jne
addb
jmp
xor
fcomip
leave
les
sub
cld
dec
adc
push
add
fiaddl
rcll
shlb
imul
or
add
inc
push
sub
add
add
mov
add
mov
add
addb
cmpsb
add
adcl
dec
fimull
add
mov
loop
mov
add
addr16
in
jg
rclb
xchg
mov
cmp
jo
add
adc
enter
jmp
ljmp
or
pop
push
add
gs
dec
movsl
sbb
add
xor
js
mov
negb
add
loope
cmp
inc
and
add
popa
xlat
xor
add
movsl
test
add
add
jecxz
add
jmp
jno
add
popf
and
add
ja
test
add
add
inc
lret
inc
add
or
add
mov
data16
add
mov
repnz
jge
xchg
lea
jb
xchg
add
pop
outsb
mov
inc
sub
or
add
push
xchg
xchg
jb
add
push
fisubrs
jge
scas
inc
ja
pop
rolb
cmpsl
inc
out
jge
add
add
pop
cmc
xchg
lock
add
add
xchg
xor
cld
enter
outsl
push
xor
jp
adc
jp
push
add
inc
rol
adc
dec
sub
and
add
add
add
add
mov
add
into
into
daa
cmpsl
xchg
hlt
loopne
push
mov
add
cmp
ds
adc
outsl
inc
lahf
mov
add
xchg
cmpsb
add
dec
insl
sub
add
mov
shrb
fnstenv
jns
rorl
mov
pusha
pop
jge
xor
arpl
add
lock
sub
popl
add
js
push
add
ret
jno
add
popa
push
imulb
xchg
ljmp
xor
out
clc
or
add
mov
add
clc
jg
icebp
in
xlat
mov
scas
cmp
hlt
xlat
or
add
pusha
jmp
mov
enter
pop
mulb
push
add
cmc
jne
popa
fists
sbb
pop
sub
add
or
add
pop
lods
add
push
shlb
fdivrl
dec
lret
inc
adcl
mov
add
arpl
xchg
int3
mov
jge
leave
jl
adc
enter
dec
cmp
xchg
out
inc
shrb
add
xchg
inc
movsb
add
imul
lds
fdivs
push
jae
pop
xchg
fstps
add
shlb
inc
popf
mov
out
add
sbb
push
xor
push
test
add
jo
xor
inc
and
add
adc
add
add
fmulp
ss
imul
push
add
push
dec
fcmovnu
sbb
in
xchg
sbb
xchg
inc
jne
icebp
xor
jns
xor
clc
movsb
add
addb
pop
and
in
hlt
adc
pop
xchg
adc
add
or
add
add
mov
cli
mov
add
xchg
mov
adc
dec
jl
mov
xchg
add
fcoml
xchg
leave
xorl
inc
xchg
cltd
mov
jne
shrl
xchg
add
add
add
add
jmp
mov
sahf
sbb
xchg
enter
bound
add
sub
add
xchg
leave
pop
adc
xchg
les
leave
add
xchg
dec
fbld
lret
sbb
into
pop
outsl
xor
add
add
rcr
ljmp
aas
cmp
scas
add
nop
sbbl
inc
add
xchg
add
pusha
dec
sbb
adc
dec
jmp
add
sub
add
add
punpcklwd
lock
push
push
into
cli
pop
les
push
dec
fs
sbb
add
fildll
int
inc
sarb
push
xchg
inc
mov
add
mov
dec
dec
jo
add
cmpsb
add
popf
aad
jp
inc
mov
daa
outsl
pop
mov
add
xor
push
or
add
jmp
repz
ret
mov
push
icebp
in
das
push
xchg
enter
add
pusha
popf
pop
jae
mov
add
cltd
xchg
sbb
insb
pushf
push
add
lds
add
scas
movsl
clc
test
add
add
scas
adcl
loop
xchg
add
out
pop
xor
pop
pop
mov
sbb
add
mov
add
jns
pop
mov
ret
cld
ficompl
stos
insl
jmp
pop
popf
inc
add
add
dec
xor
xchg
jge
aad
xchg
add
xor
xor
pop
pushf
pop
testl
sbb
rcll
loop
xchg
in
jl
add
in
and
jnp
push
add
jbe
mov
add
lock
add
les
xchg
jl
sub
jge
mov
push
fidivrl
fldcw
inc
xchg
lret
hlt
nop
push
cltd
mov
add
pop
push
add
mov
int
sbbl
sbb
cmp
mov
xor
test
add
push
add
add
push
jle
xchg
add
jno
dec
mov
iret
pop
lahf
mov
xchg
repz
fwait
in
mov
pop
xor
xor
add
rcrb
pop
nop
fs
dec
shll
sub
add
repz
addb
add
add
mov
inc
popa
fildl
outsl
mov
add
mov
add
dec
icebp
and
xchg
push
adc
adc
adc
inc
cmp
add
pusha
je
data16
insl
inc
pushf
push
push
addr16
test
add
add
inc
or
add
repnz
mov
ss
addb
leave
sbb
js
cmpsl
mov
dec
mov
add
mov
mov
lock
lret
fisubrs
add
dec
imul
add
add
push
mov
add
mov
add
xor
decb
jmp
add
dec
lods
and
add
mov
imul
fisubrl
add
in
out
mov
pop
xchg
add
jb
mov
out
cmp
add
mov
movsb
add
pusha
mov
add
jp
jl
jb
push
mov
shl
mov
add
add
mov
sbb
adc
mov
fildll
add
or
add
repnz
mov
add
xchg
add
mov
cli
pop
loopne
add
out
das
ficomps
ja
int3
call
add
nop
jecxz,pt
movb
popf
je
add
sub
add
cmc
mov
out
mov
adc
add
aad
cwtl
mov
das
negb
andl
scas
add
mov
and
add
pop
adc
lahf
hlt
iret
aad
pop
testl
mov
add
addb
mov
xchg
lea
pop
xchg
ss
xchg
inc
cwtl
or
jmp
add
add
emms
lahf
lods
add
scas
mov
mov
add
add
fidivrs
push
inc
sbb
sub
add
bound
add
mov
mov
pop
repz
xchg
xor
hlt
add
out
add
xchg
push
add
test
add
rol
scas
jnp
push
add
add
push
pop
test
add
aam
dec
repz
popf
cmp
add
jp
das
cwtl
stc
pop
jns
add
fucomp
cli
out
add
add
add
push
dec
mov
add
addb
outsb
cmc
mov
mov
add
outsl
dec
outsl
shr
and
add
cld
out
data16
shr
popa
test
and
add
imul
fldt
test
add
or
jl
addb
fptan
push
add
mov
rcr
jne
pop
test
dec
aaa
xor
push
test
add
test
add
jne
add
pop
lea
int
xchg
repnz
mov
jno
mov
rcl
mov
fildll
add
ss
sbb
popa
aad
push
cltd
mov
add
xor
dec
out
jo
add
lea
mov
add
adc
add
insb
or
inc
mov
add
outsl
pop
mov
push
add
not
and
in
imul
or
add
pusha
add
add
adc
std
add
add
repnz
ss
jne
addb
repnz
jecxz
add
sub
add
cli
or
add
lahf
xchg
bound
in
or
add
add
add
cwtl
xchg
jbe
push
aad
sbb
jae
adc
add
add
mov
int3
push
mov
mov
jle
or
push
lds
add
pop
lahf
jl
add
movsb
add
inc
push
sub
cmpsb
add
mov
add
jnp
mov
adc
add
xchg
push
add
xchg
and
add
mov
clc
add
mov
mov
rorl
add
cmp
add
jnp
or
add
insl
setl
shrl
aad
push
mov
xchg
test
jl
mov
das
outsl
pushf
mov
or
movsl
mov
aam
inc
pop
out
cmovns
and
xchg
add
push
lods
add
mov
aad
incl
add
dec
inc
and
add
jo
inc
test
add
movsb
add
adc
mov
cmp
cmc
mov
cmpl
cmp
dec
nop
hlt
inc
mov
lret
lahf
ffreep
pusha
sub
add
into
jo
rclb
loop
shrl
je
add
and
rcl
out
dec
push
add
decl
in
addr16
mov
xor
add
das
dec
gs
repz
aam
andl
add
dec
mov
rol
fildl
add
sub
mov
add
inc
mov
add
fadds
push
sub
daa
lods
push
add
push
add
scas
add
pop
fwait
xor
pusha
shr
pop
dec
jns
push
stos
add
das
aas
stos
add
test
add
add
sbb
std
and
add
int3
jg
sahf
mov
sub
add
mov
scas
or
add
xchg
clc
cmp
add
mov
xchg
mov
sarb
shl
sub
add
xor
aas
push
sub
sti
stc
jg
add
repnz
mov
scas
add
mov
add
jmp
mov
clc
xchg
add
add
jg
add
imul
out
scas
sbb
mov
cmp
cmpsb
add
scas
add
sub
mov
loope
pop
push
mov
dec
insb
or
aam
push
mov
add
pop
popf
jmp
js
pop
addb
in
clc
jmp
add
ss
push
add
inc
sub
add
add
enter
jnp
test
add
out
jmp
add
and
add
mov
add
out
arpl
push
add
add
jmp
outsb
out
out
add
add
or
add
add
inc
scas
stc
adc
std
push
std
inc
je
add
and
add
sbb
add
xchg
pop
or
add
ss
movsl
out
sub
jo
dec
daa
int
add
mov
stc
into
leave
inc
aam
shlb
jo
cmp
pusha
adc
add
cmc
fsts
mov
adc
aas
mov
div
push
push
sub
xor
js
ja
les
sbb
incb
jecxz
nop
dec
scas
sbbl
lock
add
add
pop
pop
sub
mov
add
xchg
mov
inc
jbe
add
arpl
stos
cmovle
lret
dec
rorb
and
stos
add
cwtl
mov
add
dec
out
lahf
loope
enter
loope
hlt
xchg
rcrl
sbb
inc
jo
inc
sub
add
mov
pusha
fsubs
add
movsb
add
sbb
dec
cwtl
sub
add
lods
add
add
add
and
add
or
mov
mov
and
jle
push
add
aaa
fs
xchg
pop
hlt
aas
fisubrs
addb
movsl
sbb
xchg
popa
in
jp
jmp
fildl
push
add
pusha
mov
mov
add
add
fldenv
add
arpl
inc
jns
fmuls
mov
jp
or
add
fwait
stc
pop
ds
xlat
jb
jmp
cmp
aad
shll
insl
xor
bound
outsl
cmc
adc
mov
inc
cmp
pop
cmp
add
int3
ret
sar
adc
add
cmp
pop
jns
ret
add
loop
cwtl
mov
dec
jo
into
data16
inc
inc
xchg
add
add
scas
cmp
fdivl
pop
xor
hlt
cmp
mov
add
add
push
ja
int3
jns
or
add
jo
and
add
add
adc
add
rcll
add
add
and
sbb
add
mov
add
nop
insl
pop
adc
cwtl
in
sub
add
sub
xor
adc
xor
mov
add
jge
push
repnz
aas
mov
xlat
push
shlb
loopne
lds
lods
and
lea
push
stos
add
leave
lret
lahf
or
add
jb
cli
push
mov
in
ja
mov
add
sub
add
jge
cli
aam
add
ret
mov
mov
aaa
xchg
in
daa
dec
jae
mov
add
ss
jmp
xchg
adc
test
mov
imull
mov
add
iret
stc
sub
add
subl
sbb
jg
add
pop
and
cld
jmp
addb
cmc
push
add
jnp
jbe
sub
xchg
sbb
nop
int
mov
sub
aam
adc
add
xchg
idivl
mov
pusha
das
mov
add
pop
mov
in
jl
cmp
add
xchg
add
push
jge
mov
movsl
int3
pop
rol
std
stc
adc
add
dec
sahf
push
div
or
add
push
mov
add
mov
add
mov
jge
fwait
mov
jecxz
jge
daa
ljmp
mov
add
add
add
add
sbb
mov
add
popw
shll
add
cmp
js
addr16
fsubrl
add
fnsave
sub
add
lds
pushf
mov
dec
outsb
and
and
dec
inc
lods
cmp
add
add
fldt
loopne
pop
jnp
lret
clc
in
cmp
sub
add
mov
add
or
mov
addb
roll
add
jb
add
xor
pop
mov
lret
lret
add
adc
cltd
mov
add
cmp
push
mov
pop
fmul
xchg
adc
aaa
jnp
jbe
lcall
sub
add
sarl
div
pusha
icebp
mov
pop
pop
sbb
and
push
fstpl
and
aaa
jnp
rcl
addb
dec
mov
add
rclb
add
clc
push
xor
push
ret
add
mov
pop
test
add
stos
add
push
into
popa
leave
push
sti
xor
add
add
sbb
push
add
mov
addl
leave
addb
int
jae
adc
jmp
loope
cwtl
sbb
push
xlat
xchg
mov
pop
xchg
mov
int3
xor
add
adc
dec
and
enter
push
mov
push
jo
lcall
rol
or
add
mov
hlt
or
add
xchg
cmp
cmpsl
hlt
repz
jae
add
fisubrl
stos
push
inc
xchg
add
scas
add
inc
arpl
cmc
imull
sahf
jle
add
mov
add
adcl
cmp
mov
mov
stc
xor
add
test
add
ss
mov
nop
push
add
lock
xchg
jnp
shr
lcall
lahf
cmp
rclb
roll
mov
mov
sti
jne
mov
add
mov
add
add
push
addb
dec
jns
pop
outsl
xor
adcl
add
lahf
push
fisttps
add
add
jg
push
mov
mov
cmpsb
add
lret
fistps
mov
pop
inc
sbb
add
int
add
popa
ljmp
outsb
cmp
stc
sub
sbb
outsb
lahf
in
mov
out
push
outsl
pushf
fiaddl
and
add
pop
sbb
lds
enter
xchg
mov
add
repnz
shrb
js
repz
inc
daa
lock
add
add
mov
ja
add
and
add
scas
add
mov
add
cli
jl
add
or
add
fcoml
in
dec
fs
jne
push
leave
aas
and
out
cltd
mov
add
dec
fwait
push
add
mov
add
mov
xor
jg
cli
adc
fwait
mov
inc
fimull
add
ret
pop
push
xor
jge
mov
ret
inc
roll
ret
inc
mov
add
icebp
mov
bound
jl
roll
sbb
pop
dec
mov
pop
and
in
add
add
lahf
pop
push
adc
dec
inc
cmp
mov
mov
movsb
add
jp
add
scas
add
cltd
dec
ljmp
add
and
add
sub
add
add
inc
mov
add
inc
test
add
iret
test
add
add
popa
fdivl
movsl
xor
adcl
add
mov
add
pop
js
enter
xor
add
lods
add
jne
add
add
inc
aad
add
aad
add
stos
in
cmpsb
add
or
lret
stc
push
mov
add
dec
cld
inc
xchg
jb
add
add
imul
rcl
cwtl
add
inc
and
add
decl
add
adc
mov
push
jmp
pushl
mov
inc
mov
add
add
jno
push
mov
ss
add
iret
add
add
xlat
mov
add
sub
add
dec
sbb
cltd
into
loope
push
rcrb
icebp
push
aad
cmp
test
add
adc
add
lcall
add
pop
mov
jnp
dec
and
mov
into
inc
gs
mov
aaa
lock
int3
cmc
sahf
xor
loop
add
scas
add
jb
cmpsb
add
inc
push
std
mov
bound
rcr
sbb
add
jnp
insl
mov
add
imul
add
xchg
dec
pushf
mov
and
add
fwait
push
out
dec
lret
scas
js
add
sbb
add
aam
add
jnp
sub
mov
mov
cld
clc
scas
add
mov
aas
or
add
mov
cmc
in
cmpsb
add
int
sbb
aaa
arpl
inc
fnstenv
xor
xor
adc
add
add
inc
enter
add
std
sub
add
stos
dec
mov
add
cmp
mov
push
inc
mov
xlat
jne
pop
jnp
sbb
push
hlt
cmpsb
add
or
add
cmpsb
add
sahf
in
add
add
add
aaa
add
pop
push
pop
sub
scas
lret
add
testb
in
xchg
fstpt
mov
add
int3
popa
push
mov
push
imul
pop
add
iret
xchg
aad
jnp
add
arpl
or
add
testb
pop
sbb
or
fdivr
mov
sbb
sub
push
add
adc
aam
add
add
push
fsts
xor
scas
mov
addb
pop
dec
xchg
outsb
mov
or
pop
add
add
xor
add
mov
add
jle
in
cmp
loope
daa
xchg
add
dec
ljmp
and
add
adc
daa
jge
testb
cmp
sub
add
inc
sub
add
inc
jecxz
jge
lret
sarb
jo
add
add
adc
dec
in
push
rcr
cld
imul
cmp
inc
sbb
insb
pop
hlt
pop
cwtl
cmp
mov
add
ret
mov
add
jg
sbb
inc
mov
cmp
roll
and
add
cli
loop
add
out
pusha
scas
add
mov
add
jge
push
mov
outsb
test
xor
test
add
scas
mov
pop
repnz
add
add
xchg
decb
add
fucomi
pop
mov
movsb
add
inc
jbe
mov
add
mov
stc
ret
repz
jl
add
push
inc
fs
dec
data16
add
add
addb
push
push
cltd
mov
movsl
pop
push
scas
add
in
add
sub
dec
insl
or
pop
push
outsb
sub
imull
les
ret
xchg
sbb
pop
ljmp
or
add
add
mov
xchg
mov
add
cmpsb
add
sub
add
sbb
jmp
add
mov
addb
loop
jle
dec
gs
adc
add
les
add
ljmp
adc
add
scas
add
jno
jp
jmp
ljmp
iret
mov
insb
mov
and
add
repnz
pop
sub
movsb
add
inc
sbb
stos
xchg
push
add
int3
xchg
stos
fcompl
add
add
icebp
xchg
cmp
sbb
add
sbb
sbbl
add
push
pop
mov
push
sub
add
add
aas
cmp
lock
pushl
mov
add
add
ljmp
push
mov
and
into
mov
call
testb
mov
mov
int
pop
cmp
dec
add
mov
shl
push
repnz
and
icebp
mov
shrl
add
push
sbb
sarl
mov
pop
fs
add
pop
jns
add
xchg
shl
ss
cmp
sahf
sub
lods
add
inc
test
add
out
mov
mov
add
fdivrl
movsl
rolb
xchg
adc
push
or
add
jecxz
adc
xor
lahf
addb
popf
jbe
add
add
add
icebp
adc
add
cmp
out
sbb
push
inc
and
add
mov
push
add
les
xchg
jge
or
sub
add
lret
incb
enter
sbb
adc
or
add
add
jns
cli
loope
ja
bound
in
mov
push
jg
cmp
mov
notl
pop
jns
add
call
add
dec
cmc
xchg
cmp
sbb
jp
outsb
xor
mov
add
fldcw
push
and
pusha
cmp
add
add
add
mov
outsb
std
push
aaa
ret
sti
lret
pop
xchg
add
stos
add
leave
dec
sbb
test
in
push
add
xchg
add
dec
lea
dec
add
sub
add
loop
out
push
add
add
sti
aaa
adc
add
add
add
pop
stos
add
push
inc
fildll
add
incb
add
imul
add
add
aaa
xchg
mov
inc
int3
xor
je
dec
insb
mov
pop
push
cld
pop
mov
enter
xlat
mov
or
add
dec
outsl
cmp
sbb
add
mov
add
addb
aad
xchg
enter
add
add
add
in
jge
xor
sbb
ret
sub
popf
mov
add
add
int
fsub
out
add
sub
add
xchg
add
xor
and
add
add
sub
add
rorl
aas
lret
pusha
add
xor
jns
xor
jg
mov
add
adc
loop
leave
je
mov
pop
sub
add
imul
mov
or
add
xlat
add
add
dec
xor
jge
add
add
lods
xor
iret
pop
sbb
out
or
add
xchg
mov
loopne
popf
adc
pop
scas
mov
xchg
inc
into
hlt
pop
xor
pop
ret
jp
and
add
mov
daa
loop
mov
icebp
adc
push
shll
xchg
inc
pop
inc
insl
dec
repz
add
jp
lcall
add
cmp
adc
xor
add
lods
add
add
add
sub
add
jae
adc
ds
push
lret
mov
and
and
aaa
dec
adc
jecxz
fdivrl
rcrb
add
dec
les
add
add
icebp
mov
inc
xchg
icebp
test
out
sub
add
shl
inc
push
testl
add
icebp
mov
decb
jecxz
sbb
pop
pushf
test
add
out
lock
ret
loopne
push
or
push
xchg
add
add
add
mov
push
add
pop
stos
add
stc
push
push
mov
fidivl
fwait
xor
stc
cmp
mov
add
add
lret
inc
push
add
stos
cltd
aad
fiadds
xor
arpl
sub
shl
cmpsl
sub
add
add
and
pop
jg
pop
push
add
sbb
xor
push
dec
ja
sub
add
cmpsb
add
in
push
pushf
rolb
movsl
jp
inc
push
out
adc
add
or
add
pop
xchg
fnstenv
and
ficomps
sti
aad
xchg
pop
pop
rorl
or
add
push
sbb
add
test
cmp
js
add
addb
imul
adcl
mov
add
cmp
pop
dec
imul
add
lret
add
test
add
add
fwait
das
addb
lock
shlb
jecxz
ret
sub
add
test
add
sbb
hlt
xchg
pushf
lcall
std
out
push
xchg
add
popa
push
int
xor
in
add
xchg
fidivrs
adc
mov
dec
pop
inc
jo
int3
and
add
add
push
add
mov
out
inc
std
cld
loopne
sbb
outsb
ret
jmp
int3
jo
push
add
or
add
add
inc
mov
mov
fstp
pop
jle
inc
mov
add
add
hlt
mov
or
rcl
pusha
jmp
jmp
pop
and
pop
mov
add
scas
rcrl
ljmp
sahf
addb
xor
xchg
addb
jae
aas
push
add
sub
mov
add
sti
pop
mov
jmp
ljmp
sub
add
jmp
add
adc
xor
sbb
nop
ss
xchg
testb
add
sahf
cmpsl
rcrl
add
repnz
call
add
imul
add
iret
stc
scas
add
jo
adc
insl
test
add
mov
test
jp
add
ja
adc
inc
inc
mov
add
leave
adc
fcmovbe
push
jl
aam
add
ja
push
mov
stos
add
das
add
add
mov
push
add
add
add
add
adc
cmp
iret
lahf
arpl
add
in
add
add
add
mov
sbb
jmp
add
pop
pop
mov
cwtl
xchg
ss
test
add
add
xor
divl
mov
cli
test
push
out
adc
xchg
jne
roll
int
mov
ret
push
add
adc
arpl
xchg
gs
pushf
int
call
jmp
pop
add
add
pop
loopne
rcll
xchg
dec
ja
ja
dec
repnz
dec
ljmp
stc
sahf
cmp
xchg
sub
not
mov
xchg
jno
push
sbb
and
push
add
bound
add
xor
push
mov
add
inc
test
add
scas
add
subl
cmp
or
add
add
pop
adc
adc
fildl
call
xor
leave
dec
xor
jno
sub
add
mov
adc
ss
iret
sti
iret
sbb
add
add
mov
add
addb
sbb
shlb
push
rcrb
popf
xchg
add
mov
inc
cmp
add
pop
clc
les
add
repnz
add
jg
and
movsb
add
xchg
roll
sub
add
jp
rcll
add
add
aam
mov
push
dec
popa
dec
jno
mov
xchg
add
jge
add
adc
add
add
dec
inc
cmp
and
add
add
js
insb
and
push
scas
inc
pop
jo
jmp
adc
sub
add
or
add
inc
jg
mov
aas
xor
stos
jg
fs
add
test
add
jl
outsb
sub
mov
add
mov
rclb
inc
rcll
xchg
add
imul
shlb
add
popf
lea
sbb
add
pop
mov
mov
add
lds
sar
xchg
bound
add
add
adc
xchg
add
xchg
inc
mov
loopne
mov
ljmp
add
out
jno
add
inc
addr16
lea
jno
and
add
adc
add
icebp
xor
scas
movsb
add
aad
xchg
in
add
adc
daa
and
add
mov
adcl
addb
and
add
ret
add
add
jb
test
add
fwait
addl
daa
adc
jo
ljmp
mov
add
addb
mov
loopne
out
dec
fbld
mov
add
ret
das
jl
std
xchg
insl
pop
jns
mov
fdivl
pop
lret
mov
add
jecxz
mov
add
into
mov
ds
mov
mov
adc
or
add
add
loope
xchg
mov
test
pop
and
add
or
add
pop
enter
and
add
leave
pop
je
or
add
mov
adc
psubusw
mov
push
sub
add
add
lret
shr
add
mov
add
add
add
lea
jp
add
mov
add
ret
sub
movsl
addb
sbb
pop
jecxz
movsb
add
jl
sub
das
mov
add
cmpsb
add
push
jmp
add
inc
jo
aas
out
psadbw
aad
cmp
lods
add
add
mov
push
dec
loop
test
or
addb
cmp
add
xchg
cwtl
pop
lret
mov
add
jle
pop
inc
insl
xor
mov
mov
or
sti
stc
hlt
pusha
mov
addb
cmc
gs
aad
dec
add
add
inc
add
testl
mov
inc
jl
mov
add
push
and
add
push
icebp
sub
add
add
pop
mov
add
add
lret
push
mov
dec
push
push
and
add
push
fiaddl
gs
jae
hlt
jle
xor
add
sub
add
and
add
xchg
and
add
arpl
jg
aad
add
jge
adc
call
add
pop
mov
mov
clc
movsb
add
jbe
std
xor
mov
mov
fucomip
stc
and
add
addl
shlb
xchg
mov
mov
mov
cltd
mov
fists
add
dec
adc
mov
add
add
scas
js
mov
add
data16
inc
nop
rolb
add
insb
out
ds
inc
push
jecxz
add
add
and
add
mov
cmp
sub
add
mov
mov
mov
daa
lea
mov
add
jae
loope
call
add
mov
loope
mov
jmp
std
test
add
pusha
loopne
xchg
add
clc
mov
mov
xchg
mov
jb
jl
mov
pop
xor
pop
and
add
in
pop
repz
mov
add
add
xlat
lods
add
clc
mov
mov
insl
adc
mov
add
jb
orl
add
fucomi
or
add
mov
add
outsb
pop
cmp
lea
mov
add
add
in
xor
int3
pop
dec
stos
sti
leave
cmp
xchg
mov
gs
fnstcw
int
mov
adc
lret
and
add
pop
sbb
lods
cmp
bound
addr16
shl
mov
add
pop
push
add
push
popf
daa
push
loope
insl
mov
add
sub
add
imulb
js
inc
and
add
or
pop
jbe
sbb
mov
or
add
ret
addb
cmp
addb
test
out
hlt
repz
pusha
cli
push
paddq
cld
push
add
jp
add
outsb
pop
jnp
add
jb
fsubr
insl
daa
inc
lahf
and
add
leave
pop
repz
and
add
push
push
cwtl
repnz
add
xchg
movsb
add
adcl
leave
cld
sahf
outsb
das
xlat
pop
shrl
jo
jne
push
lcall
rcl
jnp
inc
int
insl
inc
xor
subl
and
xor
jmp
xchg
sbb
in
dec
out
sbb
aas
push
xlat
xor
out
cld
fs
jp
call
xchg
sarb
andl
aaa
in
xor
mov
add
add
add
imul
lea
push
popf
push
dec
cld
outsb
cld
push
arpl
add
and
add
mov
add
sub
add
dec
add
pop
jmp
inc
or
pop
fnstcw
or
addb
inc
je
push
or
add
add
fcoms
mov
adc
dec
mov
addl
dec
jno
push
push
add
add
jl
add
jne
jmp
icebp
gs
add
test
inc
push
add
xchg
add
mov
add
add
dec
popa
mov
out
add
divb
int3
jle
xchg
pop
cmp
les
aaa
fdivp
mov
mov
or
add
jno
jae
add
pop
xor
mov
cmp
or
add
outsb
insb
mov
add
fnstenv
mov
add
movsl
sar
mov
setp
roll
add
push
mov
bound
and
cmp
push
cmp
int
add
dec
shl
adc
mov
imul
push
pop
mov
sbb
add
or
mov
inc
fs
jbe
sub
add
push
sub
das
pop
xchg
mulb
pop
inc
sbb
xchg
add
cwtl
scas
out
xlat
scas
add
shr
out
and
add
dec
lret
inc
or
add
call
inc
jmp
add
sub
add
dec
cltd
pop
pop
add
lods
mov
add
mov
add
or
push
add
push
popa
loopne
lret
sbb
rcll
add
sbb
or
add
add
cmc
mov
add
add
data16
lods
and
fadd
imul
or
add
sbb
xor
add
add
frstor
add
in
xor
cmpl
add
scas
add
xlat
rcl
push
inc
out
push
dec
and
add
mov
add
xor
mov
inc
lret
pushf
xchg
add
cwtl
add
add
daa
xchg
mov
add
sahf
sahf
or
add
sbb
add
sub
xchg
nop
dec
addb
pop
mov
push
movsl
clc
clc
adc
das
imul
add
cld
xchg
jo
inc
mov
add
dec
loopne
and
add
add
dec
cltd
test
in
jge
lods
push
add
add
jbe
clc
xor
mov
add
out
jge
push
push
outsl
shlb
aam
ret
daa
sub
add
popa
push
repnz
ds
ficompl
inc
cli
xchg
add
jo
add
repnz
xchg
inc
push
cli
push
mov
pop
sbb
mov
mov
push
fimuls
inc
sti
outsl
addr16
xor
cmpsb
add
xchg
fwait
gs
imul
add
add
add
push
pop
adc
adc
add
mov
push
sbb
mov
lods
or
add
shrl
add
jns
stos
jg
add
scas
add
bound
popa
addl
jl
add
aad
xor
push
pop
dec
scas
into
aaa
and
add
movsl
mov
mov
in
test
add
xchg
mov
mov
xchg
insb
pusha
pop
test
add
aas
sbb
add
add
insb
ss
aad
add
icebp
dec
popa
mov
dec
xlat
jg,pt
and
add
ss
test
add
rolb
or
lock
jg
sub
cld
imul
and
add
adc
frstor
add
mov
add
add
add
add
rorb
add
inc
mov
mov
add
mov
das
push
or
add
add
pushf
and
add
and
add
or
add
xchg
stos
add
add
mov
data16
fcmove
test
mov
shr
cmp
add
add
or
add
cltd
cmp
nop
dec
dec
rol
jb
add
mov
in
fcmovnb
cmp
add
leave
xchg
add
ss
push
sub
cmp
add
insb
ror
leave
push
fcmovnbe
sbbl
jl
lds
pop
mov
add
icebp
addb
inc
adc
add
icebp
pop
mov
sahf
fdivrp
fimull
add
cwtl
stc
and
push
cmp
add
loope
xlat
push
inc
jbe
add
mov
add
jae
or
mov
negb
dec
ss
mov
je
ret
adcl
aad
pop
push
addb
cmp
fdivp
xchg
ds
repnz
inc
push
adc
push
dec
hlt
mov
add
scas
add
shrl
add
add
dec
xor
roll
and
xor
xchg
sub
add
add
adc
xchg
stos
xlat
aas
xlat
sub
add
push
sbb
xchg
push
mov
fcoms
sub
add
mov
adc
xor
inc
cmp
fnstenv
add
jae
add
cwtl
inc
inc
in
sbb
out
xchg
xchg
add
adc
adc
lods
ds
push
pop
and
add
jmp
inc
scas
ss
sub
jne
nop
dec
add
call
mov
mov
mov
jle
in
out
pusha
xor
pop
aas
imul
fistpl
add
sub
add
in
decb
add
sbb
movsl
jmp
mov
pop
pop
lcall
and
add
addb
js
dec
out
lea
lahf
shlb
add
cmpsl
arpl
add
mov
int
add
jge
add
mov
add
in
and
sbb
pop
fbstp
imul
mov
add
cmp
iret
out
inc
mov
push
add
jmp
add
jae
mov
ss
push
sub
add
dec
sti
mov
test
add
cmp
cmp
cmpsl
mov
or
inc
and
jp
out
repnz
andl
add
add
mov
xlat
push
mov
add
fsubl
push
sbb
mov
add
dec
ljmp
hlt
test
gs
xlat
std
ror
fildl
add
fnstenv
adc
pop
mov
jge
scas
mov
push
jp
aam
faddl
mov
nop
mov
and
add
scas
lock
pop
ror
push
mov
add
mov
pusha
out
mov
or
push
add
mov
jne
cmp
add
push
addl
add
inc
push
into
lret
inc
bound
push
xchg
add
add
mov
add
push
pop
scas
ret
mov
add
in
and
cmp
xchg
add
cmpsb
add
push
add
add
add
lret
mov
add
pop
hlt
push
add
add
add
or
add
loope
mov
shrb
or
cmpsb
add
or
add
lds
jnp
cli
inc
jg
add
cmp
rcrl
xchg
sbb
jnp
pop
into
mov
rcll
test
add
imul
mov
add
shlb
add
in
xchg
push
in
pop
pop
adc
push
dec
or
sub
jmp
add
lahf
out
incl
sbb
add
push
or
add
mov
jl
or
add
repz
aad
popa
sbb
jge
add
mov
lods
cmpsl
and
rolb
mov
add
mov
mov
push
xchg
bnd
in
push
add
cmp
or
in
add
add
mov
add
cmp
push
add
out
mov
add
xchg
add
mov
adc
iret
or
inc
jns
xor
into
mov
add
retw
add
mov
insl
icebp
push
push
add
dec
mull
adc
mov
xchg
daa
jle
mov
mov
jae
pop
jge
lahf
xchg
jmp
add
mull
add
sub
add
push
add
fwait
jp
xor
add
scas
cltd
push
add
mov
pop
je
mull
outsl
jae
adc
out
mov
add
adc
test
push
scas
add
cmp
dec
dec
ret
add
imul
cmp
mov
js
sbb
out
jmp
movsl
jle
add
stos
add
enter
leave
jmp
fstps
and
add
loope
rcrb
adc
add
lea
jo
and
test
add
cmp
sbb
cmp
jne
pop
popf
xor
and
add
loope
push
cmc
sar
lcall
mov
shlb
add
jmp
push
mov
xchg
jge
dec
dec
aam
outsl
pop
out
mov
bound
sub
xchg
sbb
xchg
sub
add
aam
jb
push
mov
add
mov
pop
push
sbb
mov
or
add
fcoml
pop
lock
jo
std
and
add
pusha
fsubl
sar
fisubl
ljmp
fwait
nop
dec
addl
fwait
dec
outsl
add
add
xchg
xchg
cltd
ja
cmpsl
dec
dec
rcll
add
add
xor
arpl
xchg
push
mov
jp
ds
xlat
mov
mov
add
or
add
adc
daa
daa
imul
andl
sub
add
ss
add
out
jne
scas
mov
add
add
add
sub
jmp
add
fisubs
in
mov
push
add
loope
pop
add
add
cmp
das
inc
jne
cmpsb
add
or
add
jb
add
mov
out
push
daa
adc
push
jg
add
sub
add
fsubs
mov
in
sbb
dec
jns
add
in
and
add
xchg
insb
jl
mov
xor
cmpsl
mov
cmpsb
add
xor
rorb
std
or
mov
add
add
sahf
in
push
jne
jb
add
add
lods
add
add
add
add
popa
rol
xchg
dec
cmp
add
pop
add
add
xchg
sti
adc
test
fistl
mov
cmp
add
jecxz
adc
fs
sahf
jne
jne
je
or
pop
outsb
add
fs
in
add
push
jmp
add
push
cmpsl
movsb
add
cmpsl
jmp
pusha
jl
sub
add
add
add
sbbl
add
adc
sub
add
and
add
or
add
mov
fwait
xor
cmc
loop
repnz
cmp
dec
rcrb
out
into
jl
cmp
add
jecxz
inc
xchg
mov
push
outsl
jne
add
imul
add
bound
add
in
push
jae
add
pop
mov
int
gs
add
add
cmp
add
cmp
add
xor
popa
fdivr
xor
sbb
sbb
xchg
pop
fstl
data16
sub
js
lods
jle
add
repz
pop
notb
mov
out
mov
cltd
into
aas
ja
fwait
addb
jno
pop
jns
dec
mov
xchg
loopne
int
iret
dec
ja
pop
gs
iret
inc
mov
hlt
js
std
scas
push
cmpsl
adc
aam
inc
popa
fadds
jmp
or
add
add
das
lock
add
add
add
add
lods
into
enter
int
stos
add
cwtl
dec
jmp
push
push
jnp
dec
outsb
mov
test
add
in
push
icebp
loop
jecxz
xor
fmull
cmc
pop
mov
loop
cwtl
mov
add
pop
repz
imul
lret
add
push
pop
stc
mul
fildl
add
roll
out
adc
int
movsb
add
addb
adc
add
inc
psrlq
fwait
adc
xor
xchg
cmpsl
push
shrl
adc
jbe
clc
fstpl
into
xchg
loopne
arpl
mov
add
add
imul
sub
add
sbb
out
sbb
add
xor
add
negb
xchg
test
ja
jns
aas
insb
xchg
sub
adc
pop
push
push
mov
add
shlb
add
pop
add
cmc
insb
loope
and
add
fidivs
or
add
add
test
test
add
add
jp
pop
sub
popf
xchg
push
mov
jmp
notb
repnz
inc
or
daa
addb
aad
negl
addl
imul
mov
mov
inc
cmp
xor
sub
add
repz
aas
and
add
push
dec
push
dec
push
lock
xor
add
mov
add
sbb
inc
xchg
add
add
mov
add
push
scas
add
inc
sbb
sti
mov
jl
pusha
in
rorl
mov
ljmp
add
out
mov
add
out
or
xor
mov
and
add
xchg
add
nop
mov
add
jne
jae
mov
sub
add
std
cmp
adc
add
fsub
mov
jmp
add
aaa
fisubrl
mov
add
jmp
fimuls
cli
fldt
add
xor
add
icebp
popf
cli
subl
movsl
ss
add
add
add
sub
add
inc
mov
bound
mov
add
add
aam
dec
filds
test
add
or
add
add
add
mov
enter
jg
fists
out
cwtl
sub
add
mov
mov
mov
add
pusha
add
call
rclb
adc
popf
aad
aas
cmp
lcall
jle
push
pop
mov
mov
test
add
push
and
mov
add
mov
add
sbb
add
inc
addl
aam
ds
jnp
outsl
imul
movsl
and
add
movsb
add
cmp
insl
movl
jae
aam
push
loopne
mov
mov
add
xchg
jne
sbb
cmp
rorb
push
add
add
sub
add
jae
mov
xchg
add
jbe
pop
loop
in
sub
or
add
jp
ja
ret
add
sbb
hlt
pushf
enter
jnp
dec
push
daa
xor
decb
adc
mov
add
inc
cltd
les
cmp
movsb
add
lcall
ficoms
and
add
add
or
add
push
insl
mov
add
sbb
jo
or
add
add
jb
shrl
add
add
inc
sahf
xchg
or
add
cltd
jle
mov
add
mov
add
hlt
sbb
data16
dec
jns
jb
mov
out
lcall
jp
add
mov
mov
loop
adc
les
xchg
movsb
add
xchg
push
jnp
bnd
add
pop
lea
test
aaa
pop
dec
push
xor
addb
dec
lock
shlb
add
cmp
or
add
cmpsl
or
add
int3
mov
adc
dec
lahf
xchg
mov
push
mov
add
add
xor
add
add
mov
add
bound
shll
mov
je
jecxz
bound
dec
push
add
add
in
insb
inc
dec
cld
push
sub
add
mov
add
rcr
int3
into
push
rcr
xchg
mov
mov
ds
push
sbb
jmp
shll
mov
fbstp
add
mov
in
xchg
xor
xchg
push
jnp
shll
addb
mov
data16
insb
movsl
xchg
cmp
sub
add
mov
or
add
xor
movsl
movsb
add
mov
add
cmpsl
popa
js
fldl
pop
icebp
cmpsl
mov
add
mov
xchg
aas
cmc
xchg
pop
and
add
data16
adc
loop
sub
cld
sti
mov
pop
ficomps
std
lock
pop
fdiv
lock
out
sbb
pushf
inc
mov
call
pop
lret
in
mov
add
lods
add
xchg
cwtl
dec
mov
xchg
loope
add
add
add
add
in
xor
addb
adc
push
addb
mov
cmpsb
add
cmc
sbb
cli
mov
adc
jno
jo
inc
fcmovnu
mov
jle
lods
pop
xchg
ljmp
xchg
add
rolb
ret
xor
add
jns
popa
add
mov
dec
sti
cmp
leave
fistps
sahf
jle
xchg
pop
in
popa
shll
mov
add
rorb
out
sarb
jecxz
ds
dec
xor
mov
mov
add
popf
pushf
addl
loope
sbb
or
add
loop
cmp
insb
mov
mov
add
add
std
mov
jmp
sbb
add
aad
jmp
nop
jg
mov
pop
inc
repz
test
add
push
cmp
add
pusha
inc
xor
outsl
idivl
jp
add
mov
add
pop
out
in
ds
cli
movsl
add
sbb
xor
mov
add
cwtl
out
jp
in
ret
cmp
enter
mov
add
hlt
push
movsb
add
cmp
add
add
ret
push
aas
out
add
push
add
jge
movsb
add
rcll
fmull
add
add
mov
pop
or
or
add
jle
iret
popf
adc
push
push
jno
or
add
or
add
arpl
add
dec
stc
pop
xchg
mov
add
adc
mov
add
into
or
fcompl
sub
add
adc
add
xor
iret
lds
add
ja
mov
test
add
xor
mov
sub
add
add
sub
add
addb
test
repz
mov
add
add
aam
fdivrl
pop
aam
in
jb
cmpsw
outsb
mov
mov
add
je
mov
add
pop
lahf
adc
push
add
mov
ljmp
add
testb
cmp
and
add
movsb
add
ja
mov
push
xchg
cmp
xor
add
mov
mov
add
mov
and
cwtl
push
sbb
and
add
add
pop
clc
negb
notl
scas
and
add
popa
jns
je
adc
sbb
add
and
add
add
push
jno
sbb
inc
or
xchg
or
mov
dec
imul
stos
dec
test
add
adc
outsl
mov
cmpsl
push
add
mov
fwait
cmp
add
je
sbb
pop
nop
loope
adc
add
rcl
mov
call
mov
sub
mov
cmp
out
pushf
addb
mov
or
mov
icebp
cmpsl
push
loope
add
pushf
or
pop
idivb
outsl
pop
pusha
mov
add
add
add
add
add
xchg
cmp
pop
mov
cli
inc
aad
aam
cmpsl
sub
idivb
add
rcrl
iret
shlb
divl
jnp
divb
add
add
add
iret
sub
add
pop
imul
cmp
fsubrl
jge
jl
add
aam
addb
mov
lret
fwait
jns
add
pop
jae
shlb
fnstenv
cmpsl
nop
or
xor
aad
rorl
add
cli
sbb
outsl
mov
scas
fcmove
mov
xchg
aam
daa
loope
dec
popf
scas
add
stc
mov
cmp
lock
adc
outsb
mov
bound
push
aad
cmp
stc
outsb
mov
aam
add
fstps
xchg
add
add
cmp
icebp
into
lock
xor
mov
imul
jns
add
or
add
push
stos
cwtl
cmp
cmpsl
xor
add
leave
loope
lcall
add
and
and
les
push
arpl
insl
subl
sub
dec
inc
bswap
imul
push
add
cmp
testl
add
or
adc
out
movsb
add
or
add
add
pusha
mov
push
add
pusha
lock
arpl
xchg
push
loope
add
ljmp
add
dec
call
sbb
bound
add
adc
add
sbb
mov
adc
in
add
insb
mov
loopne
aas
mov
add
pushf
stos
popf
add
add
jb
jb
add
into
adc
sub
add
divb
or
in
scas
add
mov
add
in
mov
popf
imul
add
add
lcall
subl
add
push
loopne
mov
add
mov
add
flds
leave
mov
add
xchg
cmpsl
jp
dec
pop
int3
gs
push
xor
add
and
add
pop
arpl
clc
aad
lahf
mov
scas
add
add
add
in
jge
data16
and
popf
bnd
movsl
ljmp
pop
ss
add
fnstenv
add
xchg
add
mov
test
add
mov
int
ret
jnp
push
dec
das
sbb
push
lcall
cmp
enter
lret
xchg
add
push
pushf
mov
rorl
loop
cwtl
test
lds
add
inc
add
imul
mov
xchg
dec
adc
cmp
mov
add
sahf
notl
add
aas
add
add
pop
add
add
mov
push
mov
cmpsb
add
dec
sbb
jo
add
stos
ficoml
and
jae
dec
push
inc
xchg
lock
mov
add
nop
lock
les
cmp
mov
int3
mov
xchg
lock
jbe
xor
push
add
xor
add
out
pop
inc
mov
mov
cli
inc
ret
aad
add
jno
pop
enter
add
lods
add
std
imul
cmp
or
xor
cltd
ljmp
add
fldt
add
js
add
leave
mov
add
add
insl
mov
mov
jmp
in
daa
arpl
lds
fwait
mov
add
inc
adc
sbb
jl
lods
add
in
xor
dec
and
add
daa
xchg
inc
cld
xchg
add
cmp
nop
cld
cmc
xchg
ficoms
ljmp
add
and
add
xlat
pop
je
add
repz
cmpsl
cmp
adc
inc
in
add
cmpsb
add
cmpsl
jge
repz
dec
push
mov
xor
aas
std
aad
push
add
nop
test
add
je
in
sub
add
add
push
int
fcmovb
sub
sbb
mov
mov
add
push
sbb
sub
add
mov
add
filds
jb
adc
lods
add
lret
inc
loopne
add
loop
in
add
pop
mov
pop
movsl
outsl
mov
ficoml
fmull
mov
add
inc
pushf
addb
adc
lock
sub
add
xchg
repz
add
add
mov
jp
das
sbb
jb
cli
pop
sbb
jp
iret
iret
mov
mov
out
mov
and
nop
xor
push
pushf
addb
xor
das
lds
pop
fsubl
xlat
test
add
sub
add
mov
jb
cld
mov
loop
ss
jmp
ret
add
or
add
addb
mov
lods
add
jl
scas
jne
jecxz
mov
outsb
pop
aad
jecxz
popa
adcl
roll
add
add
cltd
mov
test
inc
call
hlt
popa
pop
pop
fmulp
or
add
gs
pusha
dec
or
cld
adc
pop
shll
pop
adc
repz
cli
loop
loop
ja
ss
lock
add
cmovnp
pop
popa
pop
dec
insl
cmp
cmp
pop
jmp
inc
pop
add
xchg
or
add
push
add
xchg
repnz
mov
add
fimull
xor
add
cmp
scas
sti
nop
pop
xchg
test
mov
std
and
nop
xchg
mov
sahf
jae
fwait
jno
in
std
ljmp
ljmp
add
bound
add
cltd
pop
mov
nop
push
dec
cwtl
xor
xor
in
inc
adc
cld
pop
jnp
add
push
add
xchg
les
ss
mov
pop
bound
add
incb
sub
mov
dec
push
add
int3
jle
mov
push
xor
sbb
xchg
in
int3
jl
add
fs
loopne
mov
sub
popa
mov
sti
jae
shl
add
stc
lds
hlt
lret
jmp
jno
add
sub
mov
add
add
imul
movsl
sbb
rcrb
jb
shrb
add
push
pop
dec
fcmove
push
cmp
std
pop
inc
add
add
enter
pushf
mov
in
faddp
or
daa
fistpl
in
mov
sarl
call
xchg
imul
cwtl
mov
imul
inc
xor
insb
mov
add
outsl
dec
cmp
ficompl
sbb
imul
add
mov
sbbl
int3
fbstp
fbstp
jnp
sbb
adc
cld
les
jns
push
arpl
cmp
lea
in
add
addr16
add
adc
add
or
add
ljmp
cwtl
mov
add
mov
or
divb
shrl
out
add
adc
add
clc
fmuls
add
lret
inc
out
addb
sbb
jge
and
scas
cmc
push
add
cmpsl
inc
mov
add
add
sbb
push
inc
leave
xchg
add
sub
add
xor
mov
ror
jb
sub
sbb
jne
jne
mov
add
mov
add
ds
scas
xchg
jmp
ds
mov
aam
test
subl
add
jecxz
or
add
mov
add
stos
jle
addb
adc
add
js
call
adc
adc
add
rorb
repz
sub
lret
xchg
jbe
jge
dec
cwtl
loopne
jo
cmp
aad
mov
add
push
hlt
insb
dec
clc
mov
mov
aad
movsb
add
pop
add
mov
push
loopne
in
or
insb
test
add
int3
dec
xchg
add
pop
sbb
xorl
and
add
test
adcl
loop
sub
add
push
daa
pop
add
pop
pop
cmp
mov
add
add
dec
rorl
jb
push
jne
arpl
jb
cmp
dec
cld
jno
add
adc
add
add
xor
shr
sub
add
imul
xchg
jecxz
fildl
fbstp
adc
mov
lods
lahf
int3
ss
out
add
add
rol
hlt
sbb
xchg
add
hlt
or
xor
add
mov
xor
cmp
add
int3
pushf
shll
jo
xchg
fsubl
add
test
add
push
sub
and
add
into
dec
fldenv
in
mov
add
repnz
leave
mov
sbb
cmp
aaa
ror
mov
mov
enter
add
lds
lods
add
loope
ss
adc
flds
sbb
add
add
mov
add
pop
shlb
test
movsl
push
add
jns
add
add
ja
leave
fidivl
mov
inc
iret
fiadds
xor
loope
cmp
jecxz
pop
iret
lods
add
movsl
mov
add
xchg
out
idivl
xorl
add
add
add
inc
loope
xchg
add
repz
add
ret
loope
in
add
inc
lock
pop
push
inc
cmpsb
add
jl
add
shlb
sub
add
add
cmpsl
push
cmp
sub
and
add
int
cli
imul
ret
das
shufps
add
sbb
cld
loop
push
in
lods
int
push
mov
popa
pop
lea
add
lret
outsl
lret
ja
adc
push
pop
sub
add
or
add
bound
mov
dec
inc
je
sbb
daa
fstps
lcall
test
add
add
cmp
dec
jbe
mov
dec
lds
fucomip
mov
add
sbb
add
add
dec
adc
cmpsb
add
push
add
adc
add
adc
add
add
inc
int
adc
add
mov
fwait
iret
jnp
rorb
add
jb
add
popf
scas
jp
negb
jae
push
mov
add
sub
add
fistl
push
adc
and
add
inc
lds
inc
xor
mov
cmpsl
mull
pop
repnz
aad
mov
aaa
push
mov
and
add
add
sub
add
add
add
mov
repnz
hlt
cwtl
loope
fstpl
jb
adc
xchg
add
push
out
add
or
arpl
xchg
and
add
or
add
fs
loopne
das
cmp
popf
movsl
mov
outsb
je
xchg
fisubs
push
outsb
ja
inc
jl
push
xchg
das
cmp
push
montmul
cmpsb
add
lret
lret
push
scas
add
cmp
sbb
nop
and
insb
sbb
cli
xchg
xor
lods
icebp
jl
adc
dec
cmpsb
add
movsl
cmp
in
insb
popa
je
add
cmp
xor
dec
cmp
add
mov
leave
lret
loopne,pt
shlb
mov
add
mov
add
add
dec
cmp
hlt
xor
xchg
jb
hlt
jae
data16
push
add
xlat
dec
cmp
out
lahf
jns
mov
arpl
inc
cli
mov
add
sbb
mov
or
add
jnp
ret
sbb
jbe
out
add
movsl
sbb
repnz
sub
add
push
test
add
lock
jp
lahf
mov
add
fnstenv
lea
jmp
dec
ja
dec
ss
sbb
sbb
ds
xchg
sbb
add
mov
pusha
fadds
add
rolb
add
add
pop
mov
sub
insb
aas
test
pop
in
imul
stos
add
jge
mull
and
add
xchg
pop
ss
shll
jns
addb
ljmp
add
push
push
lods
and
popf
lock
cmpsl
addb
jl
add
icebp
pop
pop
test
add
loope
push
jg
adc
add
add
add
sbb
push
mov
in
xchg
jg
mov
add
mov
add
pop
fidivl
add
imul
ret
mov
test
add
scas
add
cmpsl
xor
add
cmp
add
jl
and
add
loop
add
add
cmp
sbb
add
jecxz
in
scas
add
xchg
int3
cwtl
sbb
lds
adc
enter
mov
mov
and
add
iret
mov
idivl
rcll
std
pusha
adc
ja
jle
or
add
cmpsb
add
icebp
sub
add
pushf
mov
loop
daa
roll
out
add
test
add
jb
push
ret
aaa
add
add
mov
in
out
test
xchg
mov
add
xchg
pop
xchg
jno
xor
filds
add
sbb
adc
sub
xchg
ret
mov
repnz
data16
add
xchg
aam
mov
jb
mov
add
das
stos
add
aas
enter
or
add
cltd
aaa
add
add
sbbl
inc
dec
aam
sub
xchg
add
out
jmp
jmp
add
mov
sahf
mov
mov
test
inc
sub
add
add
jle
test
add
sub
jno
nop
clc
mov
add
cmp
gs
cmc
jmp
pop
jb
mov
sbb
fdivl
mov
add
push
ljmp
add
mov
xchg
in
mov
mov
sub
add
std
scas
or
jne
xchg
jae
pushw
add
pop
pop
shlb
add
mov
mov
add
ficompl
push
in
dec
cmpsl
lcall
add
mov
mov
add
test
push
popa
push
aam
fildll
loopne
outsb
mov
daa
adc
and
add
hlt
cmpsl
xchg
cld
sub
add
or
add
xor
repnz
add
pop
mov
add
sbb
pop
inc
sar
add
movzbl
into
add
into
pop
insb
xchg
loopne
dec
fstl
push
and
add
add
stos
loop
sub
add
ret
lret
mov
add
loopne
add
xor
insl
xor
add
pop
rcr
or
add
fwait
or
stos
loop
cli
xchg
leave
popf
loop
ret
fisttpl
cmp
add
clc
xor
add
jge
into
push
adc
sbb
cltd
lock
scas
add
dec
and
add
lods
inc
je
insb
fistpl
mov
add
out
mov
fstpl
loop
push
push
in
add
shl
add
or
add
dec
out
mov
mov
xchg
inc
lret
cmp
in
fistl
cmp
mov
push
xchg
out
xor
xlat
dec
outsb
adc
or
lret
mov
add
add
testl
repnz
dec
in
sbb
and
add
mov
pop
mov
add
add
sti
rclb
das
jns
sbb
aad
out
pop
aam
lcall
gs
add
out
add
add
add
clc
dec
mov
push
mov
or
dec
ja
lcall
sub
jne
stos
clc
push
rclb
add
jnp
shll
xchg
in
sbbl
push
addb
lahf
pop
add
add
jmp
dec
lds
outsb
xor
inc
out
rcll
push
jno
ret
cmpsl
out
cmp
aam
mov
inc
rorl
ud2
out
adc
loop
aas
pop
out
clc
addr16
mov
add
lcall
imul
addr16
mov
mov
add
mov
and
add
push
nop
rcrl
enter
add
aaa
das
add
jo
mov
jge
dec
daa
mov
stc
mov
add
add
push
mov
or
ljmp
sar
sbb
in
inc
outsb
cmpsl
mov
add
addb
add
rdrand
in
add
inc
dec
test
add
add
data16
add
add
pop
jmp
shlb
add
out
sub
add
sub
add
xor
cld
inc
jns
or
subl
add
lret
pop
cmpsl
test
add
add
cld
add
fcoml
fcoms
push
add
push
sti
rolb
dec
rorb
mov
add
adc
add
sahf
loop
and
xorl
pop
mov
mov
sbb
add
std
sarb
sbb
fs
lods
mov
popf
int
add
lcall
icebp
inc
les
mov
push
mov
add
push
call
push
cmp
adc
in
fldcw
mov
pop
mov
add
xchg
and
pop
in
mov
mov
push
mov
add
dec
or
add
push
or
add
ljmp
loope
add
xor
mov
add
adc
aas
imull
add
mov
add
and
loope
or
add
hlt
stos
jbe
push
add
test
outsb
push
add
add
inc
push
add
sbb
add
push
mov
add
mov
add
lods
add
pop
mov
add
hlt
lret
rcl
incl
js
jmp
inc
cmp
mov
and
add
daa
cmpsl
cmpsl
cmp
int
out
mov
aad
repnz
ja
adc
shr
push
adc
mov
mov
add
sbb
js
jne
aad
mov
add
mov
popl
add
inc
into
pop
out
add
mov
js
loopne
aad
xchg
xchg
mov
aaa
pusha
push
rclb
fsubl
int3
mov
add
jnp
mov
add
xor
test
add
add
js
icebp
ficompl
add
mov
add
aad
xlat
add
add
cmpsb
add
sbb
test
daa
out
jg
das
lret
cmp
add
mov
add
xor
add
add
add
xlat
sub
add
test
add
inc
pop
into
jg
add
ficompl
add
sbb
mov
add
incl
add
ds
xchg
mov
addr16
ret
xchg
xor
or
iret
mov
repz
into
les
pop
xchg
fcompl
add
cmpsb
add
and
add
icebp
cmpsb
add
fwait
cmp
jecxz
inc
div
pop
inc
add
add
daa
lcall
ret
mul
test
jo
and
cmp
mov
fisubrl
add
and
scas
jg
lock
xor
mov
insb
push
xchg
add
add
aam
fsubl
add
scas
add
mov
add
or
add
push
out
js
add
scas
add
inc
add
add
shrb
fistps
dec
nop
cmp
pop
xorl
lock
add
sahf
inc
ljmp
mov
repz
xchg
sbb
xchg
mov
inc
fisubrl
pop
dec
sbb
add
cli
add
out
std
jae
xchg
inc
clc
cmpsl
stos
push
clc
into
scas
add
push
movsl
sbb
add
outsb
xchg
std
jbe
cli
scas
add
push
nop
pop
xor
mov
push
xor
hlt
fists
aaa
sub
add
mov
add
enter
add
sahf
and
push
addb
mov
subl
add
mov
int
in
add
icebp
ret
arpl
call
int
inc
movsb
add
sub
add
shll
repz
jns
std
mov
add
mov
add
inc
clc
push
sub
cwtl
fnstcw
add
sti
pop
mov
sbb
jns
push
daa
sbb
cmpsb
add
out
std
and
inc
add
add
cmp
lods
mov
jl
pusha
jnp
mov
fwait
xchg
xchg
or
lret
aad
inc
lahf
jb
or
mov
loop
mov
ret
and
add
jo
adc
mov
test
add
add
out
xor
add
lea
add
add
add
roll
pop
fisttpl
loopne
arpl
cmp
add
arpl
xchg
fimuls
imul
add
jo
mov
add
ret
push
scas
xlat
lret
dec
push
cmpsl
dec
xchg
loopne
add
xchg
add
add
inc
push
mov
lods
jo
adc
add
ss
add
aas
pop
xor
je
mov
jno
jnp
inc
cmp
add
push
sbb
add
cld
das
and
jb
jg
add
add
xchg
jecxz
loop
shl
dec
shlb
aad
add
cmp
xchg
add
add
nop
decb
add
pop
inc
sub
add
add
add
adc
neg
xor
cmp
add
addb
leave
mov
add
add
pusha
imul
ret
fimuls
mov
sbb
add
ljmp
stc
stos
inc
arpl
cwtl
mov
add
cmp
add
sbb
xlat
and
add
xor
jg
dec
xor
dec
test
testl
je
add
icebp
sub
add
imul
adc
adc
or
add
push
in
and
add
arpl
xor
adc
iret
sbb
pop
mov
add
rcl
dec
jo
add
and
mov
aam
add
repz
insb
jge
xor
fiadds
add
inc
dec
push
add
xorl
out
cmp
int
and
add
sub
movsb
add
push
sbb
pop
jmp
add
add
pop
dec
jecxz
fisubrs
add
lret
add
pop
jae
addr16
mulb
and
inc
ljmp
add
das
xchg
jg
les
jl
or
add
dec
sbb
into
aam
and
psrlw
stc
mov
fldt
stc
leave
dec
adc
pop
lahf
cli
sub
add
add
insl
mov
add
add
add
jle
cmp
out
test
scas
add
movsb
add
jnp
std
daa
or
pop
mov
add
adc
jno
int
push
aam
jg
fidivs
dec
mov
ret
mov
ja
dec
outsb
sahf
js
dec
adc
and
add
je
sbb
lock
add
pop
pop
add
pushf
dec
mov
mov
add
ss
jns
xchg
js
or
add
jmp
xlat
xchg
jg
mov
lods
lahf
cli
push
cmp
sti
mov
add
adc
stos
enter
inc
inc
adc
add
add
pop
pop
pop
push
add
fidivl
pop
inc
dec
pushf
movsl
mov
add
push
imull
add
in
inc
in
add
add
add
adc
hlt
or
add
gs
test
add
pop
cltd
std
cwtl
inc
xor
xchg
aam
loop
mov
add
loope
dec
mov
sbb
xchg
add
add
loopne
outsb
ja
adc
lret
fs
stos
add
mov
fisttpl
add
and
adc
xchg
fdivrs
push
pushf
ret
xor
or
and
cmpl
add
pushf
push
sbb
pop
stos
add
call
jecxz
lods
add
repz
insb
js
inc
or
hlt
or
sbb
iret
outsl
cld
call
cmp
mov
pop
insb
and
cltd
adc
add
xchg
lahf
lret
mov
lret
ret
sub
add
add
cmpsl
cwtl
push
push
add
and
clc
ds
mov
sbb
aas
fwait
cmpsb
add
mov
and
add
add
jp
xchg
out
out
or
xor
aas
lret
xlat
cmp
lds
inc
or
lret
mov
add
cmp
mov
imull
mulb
js
shrb
popa
pusha
push
add
add
lret
xchg
std
jno
loope
dec
sub
add
add
add
in
mov
add
sub
add
or
add
xchg
push
add
jne
add
hlt
pusha
mov
sahf
cld
push
mov
add
jl
cltd
js
sub
movl
call
push
pop
xchg
add
movsl
imul
pop
aas
ja
lret
add
cli
in
ss
daa
jne
sbb
shll
adc
mov
xor
push
outsb
inc
or
add
out
dec
lahf
les
add
into
mov
test
add
sbb
jnp
push
dec
jecxz
cltd
shlb
adcl
daa
mov
sbb
or
add
enter
add
add
xchg
cltd
pop
fbld
jnp
loop
addb
jge
xlat
mov
sub
add
aad
xchg
pop
sbb
cwtl
call
scas
add
lret
add
loop
jp
xor
bound
add
daa
mov
add
nop
jl
pop
pop
pop
add
add
scas
hlt
shll
movsl
cmp
jp
in
mov
add
popf
arpl
mov
test
andl
add
sub
add
add
xor
rcr
jo
add
ffreep
sub
mov
add
xor
je
std
xor
lret
sti
loope
inc
jl
inc
adc
fsincos
test
add
lods
in
out
lods
jp
hlt
jne
ficoml
leave
mov
pop
icebp
mov
or
iret
int3
rorb
pop
ret
pop
add
add
jno
add
cmpsb
add
fs
mov
cmp
push
add
add
sub
ja
in
add
cmp
push
cli
or
adc
add
jns
add
into
add
cmpl
shl
jmp
call
js
adc
mov
add
pushf
xor
inc
jb
in
jnp
addb
mov
rclb
cmp
mov
add
stos
add
out
and
add
insl
push
add
jb
ret
or
jmp
fwait
mov
add
test
clc
jns
pop
mov
clc
pusha
jecxz
leave
sbb
ds
stos
fwait
and
add
add
fmuls
push
add
sub
adcl
jp
pop
sub
add
test
add
mov
repnz
add
fdivl
pop
repnz
jnp
ljmp
add
sub
push
jno
pusha
push
movsb
add
loope
mov
mov
add
into
fistpl
or
push
sub
add
fst
dec
pop
int3
orl
rorb
imul
add
leave
inc
adc
add
jp
dec
dec
in
pop
hlt
test
add
jo
jae
out
dec
adc
inc
sbb
inc
lret
mov
add
icebp
dec
push
xor
add
int
add
sub
adc
fsubs
add
jns
movsb
add
push
dec
adc
xchg
mov
add
ret
push
lock
cmc
inc
ds
xor
inc
push
ret
jbe
cltd
xor
in
xchg
add
add
add
pop
sub
add
jp
and
out
dec
enter
adc
add
or
add
addb
dec
cmpsl
push
jmp
push
sbb
mov
inc
out
fists
mov
add
push
sbb
mov
sub
add
sbb
in
in
lods
add
push
push
add
test
or
add
xchg
add
xchg
mov
mov
xor
ja
add
mov
aam
mov
push
push
add
add
add
push
pop
and
add
aaa
testb
pop
gs
push
add
cltd
hlt
gs
and
add
add
add
mov
add
pop
addr16
cmc
xor
enter
iret
rorb
add
jbe
cli
adc
or
add
add
popf
clc
inc
mov
add
icebp
scas
add
setle
sbb
jne
mov
stos
add
psrld
mov
add
add
lcall
add
mov
dec
xchg
data16
add
ss
sub
sub
out
add
test
add
sub
lret
shr
dec
dec
repz
das
lcall
lret
daa
jae
das
lahf
jns
mov
clc
test
add
ja
stos
and
add
shr
in
mov
xchg
adc
and
add
add
fiadds
add
sbb
add
add
jns
cwtl
pop
add
add
xchg
jb
fdiv
shrl
xchg
push
xlat
jp
add
lcall
into
jle
xchg
xor
push
aad
outsb
xor
add
rol
xor
aas
jle
mov
cld
out
je
add
sbb
pop
mov
das
xchg
test
mov
sub
ret
pop
xchg
inc
cmp
add
sub
add
add
orl
jne
jno
in
mov
mov
fisttpll
dec
jl
iret
outsb
xchg
lahf
xor
xlat
adc
enter
mov
add
sub
add
insb
pop
add
add
pop
aam
divb
aad
inc
mov
add
xchg
mov
add
je
push
stos
and
gs
add
mov
sub
sub
add
xchg
push
inc
xor
sbb
add
js
clc
shr
inc
inc
lea
cwtl
inc
pop
xchg
sbb
psrld
dec
stc
add
out
add
cli
pop
mov
add
out
jg
add
mov
add
cmovl
outsb
add
lret
inc
clc
sbb
call
add
cwtl
dec
xchg
sbb
or
mov
add
xor
xchg
add
cmp
cmp
add
mov
aam
sbb
add
xorl
addb
sti
hlt
loop
addb
adc
into
inc
inc
inc
cmp
lcall
add
and
add
sub
add
hlt
je
std
xor
add
fxam
std
mov
shll
mov
add
fst
cli
mov
pop
sbb
mov
inc
scas
shlb
add
cmp
jle
add
leave
jg
lock
add
add
add
add
sub
ds
mov
adc
pop
mov
pop
ljmp
rclb
dec
fcomps
sub
add
pop
mov
dec
inc
jl
int
inc
push
or
add
push
xchg
jb
shll
fsubp
gs
mov
add
pop
std
mov
add
out
mov
xchg
jg
mov
ss
inc
inc
popf
and
add
pop
mov
add
push
int
outsl
add
mov
add
ja
sbb
lds
sbb
add
push
adc
pop
shlb
dec
dec
xor
add
or
add
jmp
adc
xor
add
enter
mov
xor
cld
ds
popf
mov
mov
add
ljmp
xchg
add
mov
rcl
add
bound
inc
mov
nop
popa
inc
test
dec
sti
and
add
inc
push
inc
inc
loope
mov
andl
in
jo
mov
add
xchg
mov
mov
out
dec
leave
mov
outsl
push
or
add
inc
sub
add
add
jmp
pushf
inc
loop
sub
add
clc
cmp
add
add
sbb
xchg
imul
rcrl
pop
gs
xchg
add
sub
jge
js,pt
adc
lret
add
fbstp
and
add
add
lock
push
adc
add
xchg
enter
sub
mov
aas
cmpsl
popa
dec
mov
sbbl
call
nop
push
inc
mov
add
icebp
jl
addb
add
add
jb
mov
add
xchg
and
add
jne
push
lods
add
pop
jo
das
in
inc
or
add
repnz
add
add
sarl
imul
add
add
add
adc
shll
int
inc
pop
iret
idivl
popl
outsb
mov
add
add
icebp
lods
add
adc
pop
push
add
ret
in
pusha
out
sbb
xchg
sbb
je
or
dec
fistpl
add
add
ficoml
daa
pop
xchg
jle
scas
xor
mov
add
dec
movsl
push
inc
or
add
addb
clc
arpl
jno
mov
jg
cmp
mov
add
and
adc
jbe
repnz
pop
stc
add
pop
push
scas
in
add
xchg
add
cld
mov
xchg
test
add
das
daa
mov
lret
daa
popf
jae
dec
sahf
mov
add
mov
add
or
unpcklps
add
dec
mov
jo
in
mov
mov
and
add
add
cmp
sti
mov
pop
mov
push
lret
popf
jl
and
push
pop
inc
jnp
popf
fwait
adc
cltd
stc
push
icebp
jns
ss
add
dec
outsb
mov
in
mov
add
bound
xchg
scas
add
mov
lret
ret
adc
sbb
scas
add
adc
add
and
or
push
add
jge
or
add
rorb
sbb
int3
repz
inc
cmp
cltd
fbld
add
lcall
cmp
adc
add
or
add
scas
add
mov
mov
or
add
add
ja
push
aas
cmpsb
add
sbb
movsb
add
out
jg
add
addb
ja
sbb
scas
adc
pop
sub
xchg
dec
mov
mov
popf
into
and
add
test
stos
add
adcl
shrl
add
sbb
add
lods
add
jno
add
add
in
sahf
lret
push
fnstsw
in
pop
test
clts
add
push
jecxz
lock
inc
arpl
pop
inc
insl
std
mov
or
add
out
cmp
sub
add
add
add
xchg
add
sub
add
add
fstl
sbb
jae
add
mov
int3
shlb
add
daa
mov
add
loopne
cmp
xor
xchg
jno
add
push
sub
and
add
push
add
mov
add
loop
add
inc
popa
dec
jns
add
icebp
jge
add
sbb
out
inc
ret
lods
add
push
dec
dec
mov
lcall
mov
lock
loop
sahf
xchg
adc
cwtl
adc
xchg
add
cmp
call
add
pop
mov
idivl
sub
jl
xchg
outsb
rorb
add
sbb
ds
pop
fisubl
mov
add
movsl
and
add
add
or
add
imul
lods
fdivrl
xor
add
cmc
xchg
sti
xchg
xchg
ret
das
jno
add
negb
add
add
xor
add
or
add
cmp
leave
rcrl
add
xor
add
lahf
lock
add
cmp
in
cld
add
mov
notl
inc
add
pushf
or
add
push
je
pop
pushf
jne
add
cmc
and
add
shrl
jno
add
sti
in
fisttpll
ds
addr16
add
rcrl
add
mov
add
lds
inc
in
hlt
xor
test
add
movsl
test
adc
xchg
push
add
leave
enter
and
add
add
ja
add
add
add
mov
scas
pushf
jbe
jo
cld
mov
cmp
xchg
jmp
dec
inc
pop
lds
je
rclb
mov
add
jp
add
and
cmp
iret
sarb
aaa
leave
push
jns
add
add
mov
mov
dec
cld
dec
lods
shlb
leave
test
testb
lds
add
add
daa
mov
sub
add
stc
stc
xchg
pop
into
add
add
jmp
fwait
mov
or
add
add
add
xor
adc
nop
aas
xor
add
ja
and
subl
add
push
rorl
daa
std
sub
add
add
add
push
movsl
test
add
push
push
leave
jae
divl
fnstenv
sahf
mov
add
sbb
mov
mov
or
xorl
xchg
add
dec
sahf
jo
add
jecxz
js
add
jmp
add
repz
gs
cmp
pop
push
loope
lea
add
insl
ds
cmpl
add
and
add
mov
lea
addb
jp
sbb
and
add
adc
dec
fcmovnb
fwait
mov
add
or
add
fucomi
rcrl
cmp
out
fcmovbe
adc
add
shll
mov
shlb
popl
and
add
add
add
cltd
lret
bound
add
adc
mov
repnz
scas
adc
push
les
add
jl
xchg
adc
pushf
mov
xchg
mov
jbe
data16
pop
pop
popf
fsubrl
add
or
add
dec
and
add
jb
add
jne
or
add
dec
xor
gs
add
add
jl
add
xlat
in
nop
adc
ljmp
inc
cld
xchg
cmp
inc
cmc
andl
movsb
add
scas
pop
jo
sbb
add
fnsave
ret
add
scas
add
negl
loope
pop
adc
or
add
push
icebp
jl
add
adc
int
cld
hlt
jge
push
xchg
inc
sbb
add
test
xor
inc
in
mov
add
ds
add
add
mov
add
lahf
andl
adc
cmp
mov
movsl
mov
or
add
pop
xor
inc
pop
test
add
mov
push
cmc
cmp
rolb
jp
aam
jo
and
add
sub
and
pop
or
add
hlt
imul
movl
push
insl
arpl
repnz
add
movzbl
mov
mov
add
add
add
cmp
into
je
pop
mov
add
xor
add
mov
jbe
add
xchg
adc
add
sub
sbb
add
xchg
sbb
loop,pt
fmulp
mov
add
add
mov
add
addb
ret
mov
push
mov
into
in
jle
push
das
repnz
lahf
dec
mov
mov
in
addb
test
add
sbb
add
adc
cmpsb
add
imul
setns
imul
lea
test
add
lret
sub
xor
out
into
inc
incl
push
push
bound
fnstcw
add
ja
add
arpl
imul
mov
add
xchg
pop
push
popa
test
add
stos
test
add
dec
xor
test
add
addb
jmp
test
add
stc
int3
adc
push
push
cmp
xchg
fimuls
push
add
lods
dec
call
mov
or
add
add
sub
add
sub
cmp
aam
add
and
add
push
cli
mov
or
add
add
push
dec
xchg
dec
das
cmp
imul
divl
adc
sub
add
push
cmp
cltd
imul
fs
xchg
xor
mov
stos
fs
out
jns
push
jmp
add
ss
in
jbe
add
jnp
fists
sti
jl
cmc
dec
jl
add
add
andl
pop
mov
jge
sbb
add
rclb
add
arpl
out
push
add
mov
mov
add
adc
aas
cli
jg
dec
insl
sub
add
push
lods
add
dec
sbb
stos
add
repnz
out
sub
add
cmc
xchg
sub
add
add
enter
shl
ficoms
std
pop
jae
imul
add
mov
add
fcom
sbb
xlat
push
add
sub
pop
jb
mov
jle
aad
shrl
add
xchg
jge
out
or
add
add
dec
lahf
test
add
xor
add
add
add
cld
xchg
or
add
fsubrl
jge
mov
leave
out
xchg
jnp
or
in
aaa
adc
fistpl
add
dec
cwtl
repz
fmull
mov
add
sub
jecxz
mov
adc
clc
jo
mov
sahf
sub
add
cmpsl
dec
inc
nop
movsb
add
lret
pop
push
sub
ja
lcall
mov
add
pop
aaa
in
lods
add
push
fdivl
sub
add
pop
cmp
add
jo
add
add
add
cld
inc
icebp
insl
aam
add
pop
loope
je
fstpt
pop
mov
cmp
out
cmpsl
aad
das
jae
dec
aad
add
inc
repnz
incl
inc
jnp
add
add
lds
mov
mov
jnp
adc
rep
flds
test
add
jbe
ret
and
mov
clc
loopne
aas
jmp
in
dec
cmpsl
xlat
cmpsl
jo
cmp
add
cmc
imul
cmpsb
add
scas
and
push
mov
adc
mov
add
movb
cwtl
mov
dec
fwait
mov
mov
add
sbb
lock
add
mov
movsl
dec
icebp
inc
push
add
mov
add
add
add
cmp
xchg
pushf
add
add
push
add
outsb
out
add
out
add
add
imul
pushf
dec
xchg
dec
cli
mov
add
orl
and
add
add
mov
gs
addb
and
add
lahf
mov
inc
pop
push
dec
mov
leave
dec
in
cli
sbb
fldcw
sarb
add
cwtl
rclb
sub
addb
cmp
data16
sbb
jno
scas
adc
dec
add
inc
imul
pop
add
add
clc
and
stc
into
aad
orl
cmpsl
arpl
inc
inc
pop
ja
test
inc
addb
jne
add
adc
mov
push
add
push
cmp
mov
cli
push
mov
imulb
lea
adc
add
lcall
lock
stos
mov
xlat
jns
add
les
pop
lds
lods
add
xchg
out
jmp
fistl
insb
xorl
sbb
add
scas
add
mov
scas
add
mov
aas
mov
dec
pop
cwtl
pop
xor
arpl
pop
pusha
add
into
fldln2
rcrb
pop
jae
add
in
mov
pop
outsl
push
xchg
mov
add
rorb
push
mov
add
gs
fs
cmpsl
fistpl
add
shrl
push
mov
sbb
jg
aas
fistpll
xlat
and
add
xchg
adc
iret
dec
mov
add
shlb
mov
add
jbe
push
in
add
add
lds
aaa
xchg
shr
sbb
add
pop
inc
idivl
sub
add
add
mov
add
fucomi
popa
div
aad
and
dec
mov
adc
and
call
fnstenv
jg
push
xor
repz
fcmovbe
rcrb
mov
outsl
adc
cmp
fildll
inc
mov
mov
mov
add
jg
pcmpeqw
add
ja
cmp
add
sbb
sbb
jo
mov
hlt
sbb
jl
add
add
add
add
push
add
das
inc
ret
jecxz
jmp
mov
add
pop
xchg
fimuls
mov
aaa
fwait
inc
sub
add
or
add
inc
xchg
or
sarl
cmpsb
add
add
test
push
sahf
add
push
mov
mov
inc
and
in
nop
stos
push
add
push
add
cmp
lods
stos
add
bound
push
or
add
das
in
jmp
sub
add
sub
test
add
add
jb
out
push
jg
jo
lret
popa
fwait
loope
cmp
mov
add
hlt
mov
add
xchg
add
mov
or
add
add
add
add
rolb
mov
add
cli
in
add
add
adc
add
aas
sub
add
das
lret
and
add
sub
add
in
add
add
inc
pop
add
add
xchg
aam
xor
cli
sbb
int
and
add
ret
iret
mov
jbe
lods
add
addb
aaa
sahf
pusha
or
sahf
inc
add
cmpsb
add
mov
and
jp
sub
add
add
cmc
fwait
adc
test
add
pusha
arpl
pop
shr
xchg
icebp
mov
xchg
shll
fs
cmp
rcll
loop
pop
xchg
loope
add
lods
add
jne
xchg
push
cmp
jns
ret
sbb
fnstcw
lds
test
add
add
lock
data16
jb
lods
mov
add
enter
pop
mov
and
add
add
int
inc
cwtl
jl
aaa
inc
iret
mov
icebp
cmp
das
in
xchg
or
jg
xor
mov
add
bound
pop
push
popa
dec
push
push
jae
mov
add
add
pop
or
add
outsl
test
add
rcrb
add
xchg
lret
add
icebp
into
jb
fucomp
loop
lods
stc
movsb
add
lods
add
repnz
fsubrp
or
xlat
repz
jecxz
add
mov
add
add
push
jno
adc
jnp
sub
mov
cmp
add
add
jbe
add
daa
xorl
sub
add
jns
pavgb
lods
std
dec
inc
sub
cld
pusha
or
inc
xchg
jl
ret
cmc
lock
push
call
add
lods
jno
add
lahf
scas
xchg
imul
rorb
in
mov
add
lret
cmp
adc
and
push
rorl
icebp
call
into
jmp
leave
xchg
and
scas
add
stc
loop
add
mov
sub
add
add
add
shlb
add
insl
or
pop
push
add
pop
in
cwtl
cltd
shr
int
pop
push
or
add
stc
scas
mov
inc
pushf
inc
jo
cmpsb
add
xor
andl
mov
lock
add
pop
mov
push
add
lods
xchg
add
fdivrl
dec
sub
add
xor
roll
or
add
gs
imul
cmpsb
add
inc
ja
push
out
mov
jge
add
ja
pusha
fs
pop
cmp
cmp
push
cwtl
or
xchg
insl
xor
or
add
aad
sub
jns
aas
in
mov
add
or
add
cmc
dec
bound
hlt
push
mov
add
add
xchg
sub
pushf
push
mov
stos
add
fidivrl
ret
test
add
add
imul
inc
pop
adc
mov
add
leave
mov
push
jge
push
sub
fsubrl
mov
add
xchg
out
aam
cmpsl
xchg
subl
add
xchg
stc
xorl
add
push
xchg
inc
cmpsb
add
jne
xor
sub
jle
cmp
sub
jne
jb
inc
and
add
out
dec
mov
add
xlat
inc
mov
hlt
pop
and
mov
popa
mov
rcr
mov
add
lods
cmp
in
ds
mov
pop
cmpsl
sub
add
je
mov
pop
pop
movsl
jge
in
add
jb
inc
in
fisttps
int3
outsl
and
add
xchg
gs
movsb
add
shlb
hlt
aam
pop
enter
xchg
arpl
add
in
jp
add
inc
adc
frstor
push
shlb
sbb
sbb
ds
data16
mov
fisubrl
stc
scas
add
sub
hlt
cmp
xchg
add
mov
lret
xchg
jae
arpl
mov
aas
xor
into
adc
js
dec
in
xchg
repnz
add
pop
push
cmp
popa
xlat
xor
bound
jg
fmul
insl
test
insb
cmp
inc
lret
jg
add
jns
dec
int
xor
mov
add
fsubrs
xchg
sub
add
add
pushl
add
scas
add
jb
push
add
iret
fs
add
je
sub
push
loop
or
add
dec
and
add
and
push
rorl
cmp
xchg
mov
in
add
cmpsl
into
xchg
decb
cld
xor
les
inc
add
add
in
and
and
add
insb
pop
push
add
xlat
addb
cmp
aaa
cmp
add
inc
lods
add
jno
mulb
fidivrl
aas
dec
jge
sbb
inc
cwtl
add
add
mov
hlt
mov
add
add
stos
mov
aam
jl
call
outsl
lods
repz
aas
jo
ljmp
mov
add
add
add
aas
inc
neg
cmp
loope
repz
xchg
das
roll
jae
stc
int
pop
xchg
aam
ss
push
sbb
add
add
add
xchg
push
sub
add
inc
outsl
jno
out
inc
mov
sub
add
add
stos
add
int
les
insb
push
fsubrp
sub
add
add
or
add
rcl
nop
ret
mov
add
xchg
mov
fcmovnb
out
jbe
push
fs
inc
sarl
add
clc
in
insb
add
inc
cld
push
pop
and
add
add
jno
cmpsl
icebp
add
add
jl
add
add
or
movsb
add
dec
outsl
pop
pop
fwait
add
aas
ds
shlb
lea
ret
add
dec
mov
int
xor
pop
loop
xor
in
aaa
inc
addb
or
outsb
shl
or
je
sub
add
out
rol
out
add
add
and
add
jmp
iret
jle
test
xor
ja
jnp
mov
add
je
push
pop
jb
mov
into
outsb
cmp
xchg
and
sub
add
add
aaa
clc
push
add
clc
cmp
les
outsb
test
js
adc
inc
jno
daa
sub
ds
mov
xor
insb
into
sbb
cmc
and
add
icebp
testb
aaa
stos
jge
aad
test
add
rorb
add
mov
stos
add
gs
imul
mov
add
add
mov
movsb
add
fmuls
adc
jae
pop
push
add
add
mov
and
add
jno
xchg
popa
addb
adc
xchg
out
mov
adc
fdivs
add
xchg
add
add
int3
sbb
add
sub
add
mov
test
add
lahf
fists
push
int3
sbb
pop
iret
lret
insb
in
push
add
add
add
aaa
inc
mov
xchg
repnz
cmpsl
inc
repnz
add
or
add
add
outsl
xchg
add
pop
mov
imul
pop
notb
mov
add
cmpsb
add
pop
push
xor
imull
out
fiadds
sbb
rcr
dec
lods
psrlq
jp
add
lret
sbb
xchg
xchg
call
int
repnz
lds
repz
add
stos
add
das
inc
loopne
add
divb
cmp
adc
add
xchg
inc
lret
addb
sub
add
mov
push
or
insl
addb
push
clc
sub
fisubs
add
dec
mov
add
aaa
sarl
mov
sbb
push
dec
push
test
add
xor
jge
movsb
add
lret
xor
pop
test
add
fwait
add
notb
stc
and
ret
cmp
add
mov
addb
adc
jmp
fucom
insl
add
add
dec
popf
cmp
sbb
jae
add
inc
or
add
pop
jbe
add
push
nop
and
movl
dec
std
mov
xlat
or
daa
pusha
mov
loope
add
mov
add
fcmovnbe
dec
and
stos
add
int3
scas
aaa
scas
add
aad
loopne
xor
cmpsb
add
or
add
pop
dec
and
adc
test
xchg
mov
xor
push
add
je
add
cmp
clc
inc
mov
rcll
push
and
cmp
add
insl
addb
stos
fdiv
sti
ja
sbb
fwait
mov
jno
add
int
out
in
xchg
add
add
mov
fdivrs
popa
mov
ss
addb
xchg
movsb
add
outsb
gs
add
add
inc
add
imul
push
popf
xchg
jo
mov
notb
sub
sub
outsl
add
in
je
add
push
fs
fldt
or
add
test
add
cmp
outsl
add
add
xor
pop
pop
bound
mov
add
add
subl
out
cmp
or
mov
add
cmp
add
cmp
aam
sub
xor
add
outsl
xchg
push
mov
add
jo
bound
movsl
test
add
mov
pop
aas
les
adc
add
hlt
ja
push
add
ret
mov
xchg
fwait
dec
add
imulb
shlb
sahf
loope
bound
add
or
addr16
add
push
mov
sub
add
pop
arpl
mov
sub
add
ja
in
jge
and
pop
jl
add
bound
add
push
add
push
sbb
add
add
stos
add
sbb
inc
xchg
ja
mov
add
mov
test
add
pop
out
or
add
and
add
in
fnsave
mov
fsubs
xchg
hlt
dec
inc
sbb
cmp
mov
test
add
xchg
in
pop
or
add
add
addb
icebp
sbb
pop
xor
fstpl
push
inc
lods
fisubs
jp
pop
mov
push
xor
add
xor
movsl
jb
out
pusha
push
dec
enter
add
sub
jecxz
add
add
add
sbb
jns
add
add
push
cmp
imul
cld
push
popf
outsb
leave
dec
cmp
mov
lods
cli
lds
mov
add
imul
sub
add
add
dec
fcomps
add
loop
xchg
sbb
sbb
add
and
add
ficomps
and
push
mov
out
xchg
fcompl
sbb
xchg
add
mov
add
dec
xor
ja
fwait
cwtl
pop
sub
add
add
rcrb
loop
popa
sub
mov
add
mov
andl
add
pop
sub
xchg
add
add
add
add
jmp
out
imul
inc
jl
add
add
shlb
add
stos
add
jbe
pop
je
push
add
jb
push
data16
xchg
lahf
xor
jmp
cwtl
int
xchg
fists
icebp
pop
adc
outsl
stc
jae
aaa
jp
sbb
mov
add
xor
add
adcl
out
rol
scas
mov
push
add
into
cmp
inc
push
xor
mov
adc
dec
fisubrl
mov
adc
lods
add
mov
addb
add
add
add
add
mov
add
inc
in
pop
jb
and
rcr
dec
ss
xlat
or
add
imul
or
add
adc
push
scas
add
sbb
jne
addl
sub
add
stc
gs
mov
fwait
cwtl
lahf
xor
add
dec
fisttps
add
hlt
test
mov
add
pushf
mov
sarl
lea
add
jbe
pushf
addb
test
add
push
in
je
push
int
mov
inc
mov
lret
jns
aam
cmp
leave
enter
loop
dec
cmp
add
inc
cwtl
pop
nop
pop
jbe
sbb
add
lret
cmp
add
sbb
mov
or
add
jle
cmpsb
add
ret
push
adc
cmp
mov
push
loop
ljmp
lods
add
insb
test
sub
add
or
pop
jle
mov
add
fisubrl
adc
xlat
movsb
add
les
add
jge
add
imulb
cmp
add
jnp
nop
push
loopne
lret
xor
rdtsc
pop
hlt
hlt
mov
cmp
lods
xor
xor
test
mov
xor
andl
add
pop
ficomps
xchg
dec
enter
out
mov
popf
test
push
jne
push
push
adc
push
mov
xchg
inc
mov
add
out
lds
lgs
scas
jp
add
iret
push
sub
jp
push
mov
jno
dec
pushf
sbb
mov
add
adc
loop
jne
pop
mov
jbe
shlb
jne
arpl
add
in
test
arpl
jle
lea
add
inc
add
mov
sbb
fidivrl
daa
sbb
and
push
divb
pusha
popf
stos
add
mov
and
pushf
mov
push
shrb
add
push
add
pusha
ss
imul
and
decl
je
addl
loop
adc
rolb
flds
sbb
add
mov
insb
jae
dec
xlat
shl
add
repnz
add
add
movsb
add
and
add
fdivrp
add
dec
popa
and
add
add
push
mov
add
xor
out
lret
pop
lret
push
mov
pop
loope
and
pop
mov
jmp
xor
add
mov
and
add
sub
add
dec
add
in
rcl
cmp
cmp
rcll
pop
loopne
adc
stos
add
test
add
cmpsb
add
sbb
fnsave
ficompl
inc
jno
add
sbb
mov
adc
ljmp
or
jae
dec
int3
push
cmp
outsb
jnp
sub
movsb
add
or
add
pop
xchg
popa
push
fwait
movsb
add
cmp
inc
add
pusha
jne
js
loop
adc
jno
add
mov
add
dec
mov
dec
or
mov
aas
arpl
sub
add
xor
ficomps
ret
lret
adc
add
mov
adc
add
add
adc
sarb
pusha
in
movsb
add
jle
pop
jnp
jne
jnp
fildll
add
add
add
mov
mov
jecxz
add
xchg
cmp
push
add
mov
add
cmp
add
xchg
stos
add
jne
add
mov
push
aas
mulb
add
add
mov
add
jge
lods
repnz
addb
mov
adc
dec
outsb
fsubs
add
mov
dec
push
aas
aam
mov
pushf
mov
lahf
rorb
ret
push
add
push
add
fcmovnu
mov
dec
dec
sti
xor
jno
cwtl
out
sbb
add
icebp
xchg
cld
push
sub
mov
add
test
add
out
test
inc
jg
xchg
das
mov
pop
xchg
pushf
pusha
xchg
jmp
pop
ljmp
add
aad
sub
data16
add
jns
xchg
mov
add
mov
push
sbb
jae
and
add
mov
add
mov
jno
add
add
push
push
pop
insl
aaa
aas
cmc
xor
lcall
repnz
xchg
and
add
adc
dec
cmc
fmuls
add
pop
fiaddl
add
cmp
xchg
mov
add
add
jl
and
pop
mov
add
ljmp
cli
push
add
add
imul
scas
cmp
scas
dec
push
sub
add
push
sti
fidivrs
movsb
add
ror
push
sti
enter
rcrl
sti
dec
adc
sbb
pop
loopne
ret
push
inc
scas
scas
add
mov
mov
fs
out
jbe
outsb
popa
jl
jns
cmp
mov
cmp
lcall
std
or
add
adc
pop
jle
pop
xchg
mov
test
add
add
jnp
cld
xchg
cmp
and
add
js
out
pop
adc
add
add
or
add
xor
mov
loope
pop
jns
and
mov
add
push
add
sbb
mov
mov
jnp
inc
pop
lret
xchg
mov
adc
push
add
pop
das
ret
aam
imul
test
cld
add
add
push
sbb
sahf
insl
jl
imulb
or
add
mov
inc
pop
jnp
sbb
shll
xor
dec
sub
add
add
rcr
jecxz
adc
or
add
addl
jbe
mov
inc
in
inc
jl
imul
add
sub
add
ljmp
add
lods
add
or
add
loope
std
or
add
add
or
jno
test
add
sub
add
add
jbe
repnz
lret
jns
push
outsl
pop
lock
xor
adc
std
inc
aas
push
sbb
add
xchg
xor
test
pop
mov
xor
add
stc
lcall
add
or
add
add
mov
mov
leave
insb
test
mov
jge
das
cld
fistl
mov
rcrb
jb
xlat
lret
dec
cmp
movsb
add
mov
sub
add
addb
lods
add
ficoms
adc
add
aad
mov
add
movsl
jbe
and
add
add
push
imul
and
stos
mov
outsb
and
ret
call
add
and
add
add
bnd
add
xchg
jp
hlt
adc
test
add
je
push
or
mov
sti
jno
out
xchg
fnstsw
test
add
add
mov
or
add
fsts
add
mov
add
add
pop
scas
add
or
add
pop
mov
inc
xchg
add
cmp
xchg
xchg
cmpsb
add
test
add
mov
add
pop
shlb
xchg
popa
lea
add
add
dec
inc
jmp
into
add
add
repz
shrb
add
xchg
push
sbb
jge
xor
xor
xchg
leave
mov
adc
outsl
push
add
jl
jne
sub
add
xchg
shrb
add
bsr
sub
rcr
cmpsb
add
mov
jp
imul
mov
add
mov
loopne
jl
jmp
add
lock
lods
add
push
or
pop
scas
outsl
out
leave
fistl
movsb
add
mov
push
roll
rcl
mov
sub
add
call
xor
in
and
add
clc
cltd
cmp
fidivl
mov
test
or
add
add
add
jg
das
movsb
add
inc
out
cmp
mov
subl
add
lea
add
sbb
ja
xchg
lods
lcall
lods
add
push
jge
xor
popf
push
fbstp
add
sub
out
addb
jo
mov
fwait
rolb
xchg
fistps
in
out
inc
and
inc
repz
add
dec
sub
add
add
pop
and
add
aas
out
push
push
xor
add
mov
add
mov
les
add
adc
inc
cmpsb
add
out
adc
test
add
aas
xor
call
out
xlat
mov
add
add
out
push
rep
add
mov
jae
cmp
ss
push
jl
scas
cmp
in
js
add
or
jg
mov
push
push
bound
repnz
out
pusha
push
mov
adc
add
mov
and
add
decb
sub
add
in
repnz
add
sbb
push
loop
out
rcrl
add
add
or
cmp
movsl
mov
jge
mov
add
sub
filds
add
iret
xchg
pushf
inc
push
into
pusha
jp
adc
push
movsl
jns
push
mov
add
xor
add
add
cmc
cmpsb
add
fstps
pop
fisubl
in
mov
gs
stc
cmp
add
out
cmp
add
and
add
sub
add
mov
clc
mov
add
xchg
adc
inc
sub
cmp
sub
add
or
add
pop
mov
add
sar
adc
and
add
mov
fstp
popa
pusha
or
in
inc
dec
mov
xor
data16
lret
jmp
inc
sub
xchg
or
mov
add
and
add
hlt
js
add
scas
aaa
pop
sbb
inc
daa
dec
or
add
fcoms
jle
push
adc
loopne
shl
lock
in
cmpl
test
add
add
inc
xor
add
sbb
add
cmp
out
pop
loop
add
push
jg
push
jae
add
push
add
sub
add
add
das
pushf
lods
jmp
add
mov
scas
and
add
bound
push
jge
cmp
add
enter
sbb
add
jbe
inc
jbe
mov
inc
jbe
add
add
fmull
jecxz
mov
jnp
adc
xchg
fstps
add
jmp
add
sub
add
add
push
pop
push
pop
and
and
add
stc
xchg
or
add
sub
aad
mov
add
lods
insb
cmovns
popa
test
add
push
repz
add
das
cld
xor
or
add
pop
dec
inc
inc
mov
add
stos
add
mov
xor
popa
or
dec
mov
aas
pop
adc
sbb
mov
lcall
daa
xchg
jge
mov
pop
and
add
push
ljmp
mov
rorl
jbe
push
xchg
add
sbb
jae
dec
adc
loopne
add
add
push
fisttps
les
movsl
xchg
mov
mov
imul
outsl
arpl
test
out
loope
add
cltd
shlb
mov
test
add
dec
sbb
add
enter
pushf
out
mov
or
add
or
mov
cmp
add
test
in
sub
shlb
cmp
and
add
or
add
stos
add
xchg
mov
dec
lret
rdmsr
je
mov
add
inc
ret
jae
out
pop
adc
rol
jae
nop
repz
sbb
iret
jne
xchg
in
int3
or
mov
add
cmpsl
pop
loop
movsb
add
scas
mov
dec
in
dec
adc
add
jecxz
rorb
daa
mov
aad
cmp
add
mov
add
push
js
inc
inc
add
pusha
in
dec
xor
fcmovu
je
repz
movsb
add
dec
jle
add
add
mov
add
push
js
mov
add
add
add
mov
int3
adc
add
push
xor
add
add
xor
add
js
in
or
add
stos
add
push
movl
fwait
pop
push
add
repnz
arpl
mov
add
xchg
add
mov
add
pushf
xchg
popf
sahf
jge
add
roll
add
aam
add
add
in
push
in
add
jl
jle
lods
add
pop
pop
xchg
jb
jne
addb
ss
in
and
pushf
test
ficoms
dec
dec
add
add
mov
cmp
pop
insl
jge
sub
pop
mov
scas
add
lahf
addb
sbb
pop
and
add
test
push
pop
mov
movsw
mov
addb
xor
repz
out
fsubrs
or
add
in
aad
xor
mov
or
add
sbb
add
push
emms
pop
adc
push
and
inc
and
jns
add
fldcw
adc
add
add
cmp
push
test
add
sbb
dec
bound
add
add
xchg
iret
add
add
out
xchg
adcl
ret
ret
xchg
and
add
ja
cmp
jg
pop
xchg
add
or
sbb
sarl
mov
add
mov
add
pop
pushl
sbb
dec
mov
lret
mov
jns
test
add
scas
add
pop
lods
add
dec
cmp
sbb
pop
mov
out
add
nop
mov
add
push
mov
out
cmp
add
fldenv
lahf
dec
xchg
xchg
add
pop
sub
xor
ret
lock
movsl
and
adc
out
ret
jge
add
push
fbld
rcr
dec
repz
xchg
dec
shrl
add
mov
adc
mov
add
push
add
xchg
out
adc
mov
xor
push
add
push
inc
xchg
add
mov
aam
addb
shl
inc
shll
sub
jb
movsb
add
jp
or
add
mov
add
push
lcall
fdivl
add
add
fidivrs
int
mov
jmp
sub
jle
dec
push
mov
cmp
adc
lods
add
and
jae
repnz
add
lcall
sbb
add
sbb
dec
pusha
pop
test
add
xchg
nop
jbe
sarl
and
add
fwait
xchg
lods
add
adc
add
hlt
jbe
loop
rcrb
ret
cmc
ss
xchg
loope
and
in
testb
xchg
insl
add
add
cmp
bound
pop
sbb
mov
cmpsb
add
out
pop
mov
ret
bound
or
add
les
lods
add
das
jne
add
pop
mov
mov
and
rorb
sti
mov
addb
jle
add
push
xchg
jne
adc
popa
push
inc
pop
xchg
fdivs
add
sub
or
rorl
fidivrs
add
iret
adc
add
pop
mov
add
call
test
lahf
fisttpll
add
add
add
jmp
xchg
aas
pop
sti
addb
push
sti
iret
push
pop
imul
add
lret
icebp
stc
push
pop
push
mov
add
xor
add
mov
mov
lods
add
pop
inc
test
push
or
add
add
cmpl
adc
dec
rorb
addb
xchg
dec
icebp
push
je
aaa
mov
add
jno
dec
jp
inc
insb
push
add
pop
mov
xor
pushf
mov
add
add
shll
sub
add
in
and
xchg
aad
jae
add
cltd
lods
add
xchg
pusha
lret
add
add
jns
inc
popa
add
mov
add
jge
push
add
addr16
inc
movsb
add
xchg
adc
loopne
add
aas
lahf
cmp
jae
mov
adc
or
lret
xor
xchg
adc
test
add
add
cmp
loopne
and
add
cltd
movsb
add
inc
outsb
add
add
imul
add
ficoms
adc
add
cwtl
test
and
ret
in
outsl
xchg
fadd
std
sub
add
lret
lock
loope
into
aad
inc
add
jl
mov
push
test
mov
pop
and
add
xchg
shr
rcr
aas
rclb
outsb
and
add
add
cmpsb
add
pop
test
add
lret
ja
call
cli
sub
out
or
add
adc
add
jl
xchg
into
xchg
push
bound
add
add
add
insb
pop
imul
stos
add
add
add
add
dec
sar
jge
out
mov
add
jnp
lea
in
shlb
mov
add
lods
add
sub
fwait
pop
lods
stos
mov
fcoml
lahf
add
aaa
push
jmp
add
mov
add
sub
fwait
dec
cmc
aas
and
add
std
mov
add
add
movsl
out
pop
push
dec
out
mov
scas
test
add
leave
mov
add
aad
mov
imul
xchg
push
faddl
add
push
lret
dec
jo
lahf
jle
stos
fwait
ss
rcl
add
add
mov
dec
inc
je
cltd
fisttpll
add
mov
imul
add
mov
dec
mov
adc
add
add
add
push
add
sub
add
add
stos
add
fxsave
add
leave
and
add
xchg
add
jb
lds
jmp
mov
mov
aaa
ds
xor
add
add
hlt
lahf
dec
sti
mull
add
jge
xor
int
gs
movsl
jne
filds
add
test
add
scas
add
mov
vphaddubq
test
rcrb
imul
int
add
adc
pop
in
xchg
xor
cmp
push
loope,pt
out
aaa
mov
add
inc
loopne
ret
test
add
inc
adc
popf
push
shrl
dec
in
mov
add
sub
add
add
push
push
push
ds
add
fs
add
leave
and
imul
mov
mov
add
incb
dec
aaa
or
add
push
aas
lahf
jmp
add
push
add
adc
js
roll
xor
ljmp
sub
add
xor
dec
js
xor
add
aaa
ficompl
push
test
add
repnz
xchg
fidivl
imul
xlat
and
pop
and
fisttpl
add
mov
in
add
daa
xchg
add
xrelease
add
and
clc
in
inc
or
add
add
cmp
clc
out
add
mov
add
idivl
mov
add
mov
xor
rcrb
enter
dec
stos
add
clc
dec
adc
adc
push
add
insb
pusha
syscall
and
add
ficompl
ss
shlb
arpl
add
jle
xchg
roll
add
outsl
push
dec
jns
push
mov
cmpsb
add
dec
aam
scas
add
push
sbb
fs
loope
in
movsl
sub
add
add
xor
mov
add
or
pushf
add
mov
add
fiaddl
add
addb
push
dec
popf
pop
xchg
mov
int
pop
jae
gs
rcrb
mov
add
ss
mov
add
xor
xor
scas
pop
sahf
jno
ret
sub
add
mov
add
add
or
add
stos
adc
lods
add
out
les
inc
mov
lret
jnp
mov
add
add
fmul
out
call
lcall
push
je
mov
addb
mov
fs
cltd
push
imul
gs
sub
add
add
enter
outsb
xchg
dec
test
loopne
ss
data16
adc
xchg
sbb
call
add
add
pop
push
ljmp
pop
fldlg2
cmp
add
inc
fsubr
nop
out
pop
ss
add
or
shll
add
or
add
ficomps
pop
mov
rclb
mov
add
cmpsb
add
sti
pop
fldl
fnstenv
add
sub
jp
inc
addb
jae
add
add
add
stos
inc
add
add
sahf
and
cmc
out
xor
push
ljmp
add
test
rclb
adc
add
mov
rol
test
add
pop
jmp
add
shlb
jbe
push
mov
lods
popf
adc
cmc
jmp
xchg
jle
das
int
mov
in
out
mov
add
xchg
pop
add
add
pushf
or
add
add
sub
add
dec
js
mov
mov
ja
mov
cmp
cmp
add
adc
push
out
add
add
mov
sbb
mov
add
std
cmp
add
add
add
sti
mov
outsl
ja
cmpsb
add
repnz
loopne
std
inc
addb
enter
adc
mov
insl
lods
add
add
data16
pop
aam
inc
jge
insl
xchg
rcll
js
add
test
lcall
xchg
bound
add
push
mov
mov
jmp
movsb
add
fcompp
jl
add
sbb
addr16
xchg
xchg
and
add
add
sahf
dec
rcl
sbb
and
jl
fs
jbe
scas
fnstenv
push
fwait
pop
dec
inc
mov
ret
add
mov
inc
arpl
out
add
add
insl
sub
loopne
mov
add
fisubrl
loop
jnp
push
enter
add
xor
jb
add
mov
int
stc
jno
pop
push
pushf
daa
jle
insb
or
jne
add
sub
add
add
sbb
popa
xchg
addb
je
cld
pop
push
out
das
push
mov
jns
pop
push
inc
mov
xor
add
add
test
add
les
cltd
jl
pop
fmull
push
add
add
imul
mov
add
jg
call
and
add
mov
add
or
add
lcall
push
and
sbb
inc
ss
sub
add
jmp
mov
add
mov
leave
add
jmp
dec
xchg
cld
aam
stos
push
ss
jge
pop
dec
addb
mov
leave
test
fcomi
jns
mov
mov
hlt
insl
fdivrs
mov
mov
add
mov
add
fwait
lock
aas
mov
add
nop
scas
xchg
adc
jge
ret
loopne
add
add
daa
mov
aas
add
add
add
daa
or
inc
add
pop
mov
divl
leave
mov
repnz
inc
in
out
sub
add
jno
lods
add
aas
jo
out
stc
loope
mov
scas
add
pusha
mov
rclb
aad
add
add
movsb
add
cmpsl
mov
jo
mov
inc
addb
sbb
in
loop
sbb
inc
lds
add
add
mov
fcompl
adc
lods
sub
push
mov
ret
dec
cmpsb
add
ja
and
mov
ret
stc
rcrb
outsb
mov
stos
add
jno
and
out
ficompl
mov
mov
xor
push
adcl
push
add
push
fisubl
je
shll
outsb
int
lcall
mov
inc
add
sarb
subl
add
ljmp
xchg
jne
cli
bound
das
mov
add
repz
add
iret
lods
add
icebp
dec
push
add
addr16
add
xchg
iret
mov
test
pop
push
add
into
fiaddl
push
test
add
outsb
js
add
daa
jbe
out
jl
add
shlb
add
add
jne
sub
add
add
sub
dec
icebp
pop
adc
test
add
adc
daa
jmp
add
int
out
jns
mov
stos
cmp
sbb
xchg
cmp
cltd
pop
shll
add
addb
stos
add
dec
in
shrl
ret
add
xchg
mov
mov
add
add
inc
cmp
mov
add
add
divb
ja
mov
insl
jo
add
pop
mov
les
je
xor
enter
add
mov
add
xchg
or
add
cld
mov
sbb
pushf
pop
push
into
pshufw
add
fistpl
xchg
push
mov
out
inc
inc
in
in
popf
xchg
icebp
fwait
add
add
test
adc
pop
mov
add
test
add
jae
pop
rcrb
mov
dec
test
add
cltd
xchg
adc
into
vpaddb
sub
jns
xchg
jns
add
lahf
test
add
inc
sbb
cltd
xor
stc
ds
jmp
sub
add
inc
mov
je
std
cld
dec
push
mov
add
adc
cmc
cmp
insl
dec
mov
cmp
add
cmp
jecxz
xchg
add
and
nop
icebp
xor
add
repz
add
imul
insb
add
addb
in
add
xor
mov
add
jecxz
add
jne
add
adc
add
loope
inc
inc
inc
cmpsl
enter
fadds
ret
add
arpl
movsl
js
xchg
cmp
jle
aaa
xor
adc
sbb
mov
loop
mov
add
sbb
dec
sbb
pop
into
pop
mov
mov
lds
add
pop
pop
je
xor
push
add
leave
in
ds
arpl
adc
push
adc
xchg
pop
icebp
xchg
add
call
pop
scas
adc
add
push
add
mov
jg
icebp
xchg
enter
scas
add
adc
ret
lcall
adc
mov
xor
ret
loopne
mov
mov
aas
pop
add
add
mov
add
cmpsb
add
inc
out
neg
and
xor
jno
ds
push
adc
push
stc
cltd
std
sti
sub
popa
adcl
add
add
or
add
jg
daa
call
pop
cli
fcoms
add
sbb
sti
gs
pop
mov
add
add
jb
ljmp
clc
cmc
rolb
push
fidivs
ret
push
scas
add
std
sbb
adc
leave
cmpsl
aam
mov
negl
decb
jne
lcall
xchg
out
jg
jge
jl
cmpsl
rcr
std
add
mov
pop
jg
cltd
std
jae
lcall
add
add
add
stos
mov
mov
add
cmp
mov
or
add
mov
scas
jp
add
cmp
add
popa
fwait
mov
add
cmp
mov
pop
push
pop
jmp
add
imul
cmc
int3
mov
ret
mov
mov
add
adc
add
mov
add
cmc
sub
add
out
cltd
frstor
add
aaa
ffreep
cld
adc
pop
mov
add
test
jb
mov
adc
pop
lret
sbb
mov
mov
add
fcmove
in
and
add
fistpll
push
add
rolb
dec
daa
test
add
fsubrl
js
add
or
add
movl
loop
inc
inc
out
clc
cmpsl
rorb
mov
push
push
add
inc
int3
pop
xchg
add
psrld
bound
call
and
add
lods
lods
xchg
push
add
add
out
cmp
sar
add
inc
mov
mov
mov
add
icebp
jg
jb
dec
popa
mov
jl
inc
pop
add
add
push
into
add
add
in
mov
add
cmp
rorl
push
push
push
rcl
jmp
add
sbb
pop
cmpsl
insl
jmp
aad
sti
xchg
mov
add
mov
dec
ds
lods
add
arpl
fists
jg
push
add
leave
pop
ljmp
push
add
jne
rcrb
test
add
aas
cmp
leave
out
mov
add
shrl
add
enter
pop
jns
sbb
sbb
cltd
mov
ret
mov
push
sub
add
xchg
fwait
dec
cmc
mov
add
add
push
vxorpd
dec
push
imul
add
aam
fcompl
jl
ret
movsb
add
arpl
add
add
out
mov
sub
add
rcrl
fmul
mov
push
inc
and
add
ljmp
insl
jno
push
xchg
das
xchg
cmp
push
add
xor
sub
add
add
inc
mov
add
pop
xlat
arpl
addr16
add
add
ficomps
inc
pushf
loop
xchg
xor
movsl
cmpsl
push
ljmp
sarl
daa
adc
cmp
fcmovnu
or
add
pop
in
inc
sub
lea
pushl
add
hlt
push
add
out
popf
pop
loop
xlat
sub
shlb
les
stc
inc
mov
inc
rorb
aas
loope
outsl
inc
notb
add
add
adc
or
add
shl
jbe
aaa
sbb
add
add
add
add
mov
cmp
into
xchg
push
push
cmp
std
or
sbb
out
add
add
inc
pushf
imull
add
cmp
pop
cmp
repnz
sbb
movsl
icebp
pop
mov
add
sbb
jle
cltd
push
push
add
pusha
addb
repnz
add
add
xlat
jl
add
js
data16
mov
add
jmp
add
and
add
mov
mov
std
int3
lock
in
add
dec
pop
cltd
add
add
stc
xor
int
cmp
add
add
add
adc
add
jns
mov
adc
sub
add
xchg
jns
ja
imul
add
fistl
inc
push
or
add
and
insb
jbe
out
stos
push
mov
add
inc
mov
add
push
add
pop
mov
add
adc
sahf
add
scas
lret
add
addr16
add
xchg
pop
and
roll
push
lret
sub
add
das
sbb
push
jae
cmp
cmp
add
mov
dec
fstp
dec
stos
adc
insl
push
add
push
add
int
dec
mov
fdivrs
popaw
ss
inc
imul
lcall
add
add
pop
mov
ret
xchg
pop
cltd
lock
divl
pop
ds
mov
jb
loope
xor
add
in
out
jg
fs
add
jg
lods
sbb
sbb
add
stos
pusha
or
add
outsl
mov
pop
jle
mov
aam
incl
add
jle
cmp
add
or
add
adc
shll
add
ja
dec
lods
sbb
cmc
cmpsl
shrl
decl
add
mov
mov
add
or
mov
mov
add
loop
add
sbb
pusha
sarl
arpl
jns
mov
sub
add
mov
xor
je
inc
add
add
adc
adc
cld
mov
inc
push
loope
xchg
fldcw
aad
add
inc
mov
addb
jns
sbb
mov
pop
mov
lods
add
mov
rcrb
clc
cmp
out
in
xchg
pslld
jle
shl
push
popa
and
and
add
arpl
int3
xor
sti
ja
lcall
iret
or
add
rcll
add
fbstp
xor
xor
push
push
xchg
in
jnp
test
add
add
mov
test
add
add
add
xchg
orl
mov
dec
mov
add
and
add
shl
add
jo
add
inc
mov
add
inc
hlt
out
addb
out
and
add
add
test
add
and
add
fxch
add
enter
std
xchg
out
addr16
pop
xlat
repz
cwtl
sbb
aam
inc
add
add
cmpsb
add
mov
sbb
movsb
add
add
leave
enter
add
bswap
cmp
cmc
sbb
add
add
add
mov
push
inc
divb
cmpl
or
add
add
push
pop
mov
adc
mov
pop
push
add
sahf
dec
pushf
loopne
vsqrtss
mov
ljmp
add
daa
adc
sub
add
out
or
add
mov
or
jg
cmpsb
add
fildll
data16
iret
pop
lds
mov
roll
rolb
add
jo
push
je
cmpsb
add
jp
push
xchg
pop
pop
jbe
jbe
sub
inc
gs
or
add
adc
push
ja
add
push
xchg
xor
pop
jecxz
add
outsb
fldenv
jb
cmp
cltd
loope
jae
pop
and
add
dec
sti
pop
cmp
xor
cmp
pop
cmc
push
rorl
add
hlt
lret
sar
fcmovnu
adc
add
add
add
xor
insl
mov
movsb
add
stos
add
push
je
or
lcall
or
fistpl
add
dec
imul
pop
loope
sbbl
push
add
je
jo
push
ret
add
add
fisubl
or
fadds
dec
cmp
add
lea
pop
pop
out
mov
pop
push
repnz
int
xlat
mov
shlb
add
lea
mov
mov
inc
js
mov
add
add
add
lahf
jb
push
add
xchg
or
in
push
xlat
in
mov
add
loope
bound
pop
int3
sub
add
add
cli
add
add
into
rorb
dec
lock
mov
scas
iret
ja
int3
mov
push
fcoms
dec
std
in
or
add
jae
sbb
add
pop
popf
je
jns
sarb
jbe
sbb
lock
sub
add
test
add
add
mov
add
lock
ss
mov
addl
add
addb
cltd
inc
mov
push
std
jp
and
add
add
hlt
incb
movsb
add
pop
xor
mov
dec
mov
data16
fsts
mov
add
inc
cmpsl
cmp
mov
mov
sbb
add
stc
imul
add
cld
div
adc
mov
sarl
add
sub
push
xchg
adc
sbb
leave
mov
jae
add
cmp
mov
add
add
or
add
mov
add
leave
push
and
dec
das
stos
add
mov
add
or
add
add
fwait
and
sub
scas
dec
sbb
push
add
js
jp
add
add
mov
jns
cmp
test
add
jno
sbb
lods
in
mov
ds
loop
or
add
loopne
mov
xor
jle
mov
add
test
mov
mov
iret
mov
add
pop
in
mov
shr
jae
pop
jge
or
add
loop
push
add
arpl
adc
fistl
add
adc
jno
jmp
adc
inc
std
in
lret
aad
add
sub
add
jnp
cmp
or
add
push
icebp
inc
inc
lea
mov
ljmp
and
cmp
add
notb
loope
negb
stos
popf
in
sub
jp
adc
fs
out
add
inc
xchg
sbb
cwtl
mov
add
adc
and
add
add
sbb
pop
ljmp
mulb
insb
out
xchg
add
data16
ret
mov
add
sarb
jns
in
pop
pop
int3
lret
mov
mov
popa
pushf
int
sub
add
add
pop
sub
add
xor
jle
daa
pop
sub
mov
js
pop
cltd
cmpl
icebp
sarl
add
inc
jl
add
aaa
pop
inc
inc
scas
add
sub
add
js
cwtl
push
xchg
cltd
add
add
add
add
mov
dec
test
add
jmp
add
repz
cmp
dec
mov
add
mov
add
bound
repnz
shll
aad
add
stos
inc
cmpl
mov
mov
or
add
pop
popf
sbb
add
add
push
push
lds
addb
int
xchg
mov
add
notb
or
fs
movsb
add
sti
pusha
sahf
faddl
xchg
rolb
add
jns
fisttps
out
out
loopne
pop
aaa
mov
in
inc
push
cmp
or
sbb
mov
add
fisttps
int3
daa
popf
movsl
cmpsl
push
lahf
xor
lahf
ret
mov
add
addb
nop
xor
int3
and
add
add
outsl
movsb
add
or
dec
mov
add
addb
insl
mov
mov
add
add
add
inc
fimull
xchg
jl
add
ljmp
lds
fildll
jmp
dec
dec
aam
cmp
orl
add
push
fiadds
jmp
in
rolb
mov
add
mov
add
add
ret
mov
add
adc
pop
inc
add
add
cmc
dec
test
add
sbb
and
pop
add
in
cmpsb
add
les
push
loopne
loope
sbb
cld
sub
leave
mov
add
out
and
add
mov
jbe
mov
dec
adc
add
cmpsl
and
scas
loopne
add
sbb
pushf
int
neg
out
in
test
add
cmp
mov
add
sub
adc
sbb
adc
add
or
add
fnstenv
add
aaa
pop
jbe
inc
push
cmp
add
frstor
das
movsb
add
fsubl
stos
push
pusha
aas
add
push
cmpsb
add
rolb
and
jbe
sbb
inc
mov
shrl
pop
outsb
sbb
xlat
mov
loopne
jne
add
movsb
add
mov
sbb
mov
add
data16
xor
dec
jecxz
ror
mov
into
push
inc
add
add
add
jnp
fldl
outsb
stc
stc
dec
das
adc
cmp
ljmp
fnsave
pop
sub
add
fisttpll
add
daa
pop
cmp
mov
aam
lahf
inc
mov
mov
lea
mov
iret
mov
add
shrb
xchg
xchg
jp
loope
in
pop
dec
add
add
shl
jb
jnp
add
push
add
add
fmuls
pop
int
inc
adc
add
add
aas
mov
cmpsb
add
test
in
sub
add
nop
jp
pop
pop
sub
frstor
out
ret
or
add
and
add
sti
shr
cmp
sysenter
in
popa
pop
ret
sub
add
ss
mov
add
jo
push
ja
int3
mov
add
pop
sub
add
jecxz
xchg
add
iret
jae
shrl
pop
pusha
pop
daa
mov
add
xchg
stos
add
sub
add
adc
shlb
add
inc
cmp
lret
cli
lcall
fdivl
push
imul
add
xchg
dec
loope
xchg
lods
jge
bound
add
or
add
add
add
outsb
xor
sub
add
jbe
std
cmp
ss
imul
mov
or
add
cld
push
add
jle
mov
hlt
add
add
dec
mov
sarb
fidivrs
in
xchg
push
add
out
or
add
lcall
add
and
jae
fnstsw
xor
add
adc
add
popl
adc
fucomip
cmp
hlt
lcall
add
or
add
jb
jmp
pop
add
add
or
adc
ss
in
add
sti
ret
jle
jl
aam
insl
addb
jae
jb
add
mov
sbb
mov
mov
add
push
inc
in
add
and
add
mul
scas
add
pop
rolb
add
add
dec
mov
add
loope
push
cmp
ja
sub
add
pop
test
cmp
jp
xor
xchg
add
insb
test
jecxz
lahf
aaa
fidivl
cld
lret
xorl
jno
inc
push
add
movsl
js
in
and
add
or
mov
enter
push
pop
inc
cmp
sbb
add
sbb
lock
jbe
push
retw
xchg
adc
scas
lret
push
jmp
cmp
add
int
add
gs
popf
lods
add
fmul
adc
add
inc
negl
adcl
testb
sub
add
scas
add
call
inc
sub
push
sub
add
xchg
jno
or
add
popf
test
add
in
or
add
lds
add
aam
pop
push
jge
call
add
cmpsb
add
xchg
add
stos
add
dec
jl
rcrb
add
or
add
loopne
sahf
and
add
mov
js
xchg
add
fwait
mov
add
sldt
add
lock
push
mov
sbb
add
push
push
adc
repz
add
shll
cltd
push
xor
jp
pop
jns
add
xor
lds
mulb
jne
shrb
pop
int
jecxz
lods
add
in
in
scas
add
mov
xchg
int
mov
add
dec
call
dec
and
add
xchg
push
pop
imul
inc
xor
int3
popa
outsl
inc
xchg
popa
aas
ret
add
inc
sbb
nop
sub
add
call
push
add
popa
ja
adc
lcall
adc
add
add
xchg
add
dec
or
add
imul
add
dec
aas
bnd
adc
xchg
mov
add
jbe
dec
push
add
add
js
add
sahf
lock
clc
pop
jmp
iret
add
add
mov
add
fstpl
stos
add
sahf
fcmovbe
decl
add
movsl
out
push
dec
roll
xor
in
xchg
add
call
hlt
push
pop
into
les
inc
cli
xchg
stc
jl
popf
lock
sub
add
add
xchg
mov
pusha
sbb
fdivl
add
jo
and
add
add
clc
shrl
add
mov
push
xchg
xor
add
inc
xchg
add
daa
cmp
jge
ds
xlat
add
add
add
add
add
packuswb
mov
add
sbb
fs
add
pop
mov
and
add
inc
or
fcmovnb
iret
adc
add
and
add
push
jg
mov
add
into
mov
lods
sbb
add
add
add
add
dec
mov
push
and
add
nop
add
add
rcrb
sbb
push
mov
mov
stos
dec
xchg
and
out
sahf
mov
add
add
add
adc
nop
aam
fbld
cmp
fsts
enter
aas
inc
jno
add
add
out
lods
insl
cmp
add
lock
insl
outsl
or
push
push
dec
adc
mul
bnd
add
add
push
shlb
add
into
insb
movsl
dec
pop
push
mov
sub
add
push
daa
mov
les
fnstcw
pop
dec
in
mov
add
imul
stos
add
xchg
bound
add
movsl
cld
mov
add
add
mov
shll
pusha
ja
mov
add
mov
mov
and
js
mov
bound
add
push
pop
xlat
pop
inc
pop
fisttpll
dec
mov
addb
pop
add
add
and
mov
sti
xchg
das
inc
xor
mov
out
add
test
add
sub
add
push
add
xor
fidivs
xlat
rorl
add
lcall
mov
mov
inc
and
add
mov
add
out
pop
and
xchg
pop
jbe
xor
push
add
xlat
sub
sbb
les
add
xor
mov
cmpsl
lds
add
dec
out
jmp
bound
add
cmpsl
add
add
inc
mov
add
add
add
movsb
add
dec
leave
push
push
cmp
jno
add
popa
adc
adc
adc
mov
repz
push
dec
add
mov
jbe
jge
add
enter
loope
sbb
add
jae
push
dec
jp
jnp
xchg
pushf
dec
cmpsb
add
jecxz
add
jge
je
adc
lock
add
xor
lahf
lret
add
aaa
je
dec
mov
mov
adc
inc
mov
add
lcall
xchg
push
insl
aam
bound
add
pusha
loop
in
fstpt
repnz
cmp
negl
xor
stos
add
xchg
add
xor
and
nop
add
and
add
jmp
mov
pop
ljmp
and
add
stc
jne
add
add
mov
adc
add
rcr
jmp
xchg
add
addb
xchg
add
add
add
add
add
ljmp
pop
in
lds
imul
push
add
lds
xor
cmp
push
add
mov
dec
cmp
add
push
addb
dec
cmpsb
add
dec
jmp
shrb
add
push
mov
mov
lods
add
and
push
inc
dec
cmpsl
testl
out
sbb
and
add
in
add
insb
jo
sbb
daa
mov
push
xorl
push
cmovo
pop
stc
inc
les
fwait
add
add
decl
stos
add
push
add
cmp
inc
stc
out
cmp
sbb
insb
clc
mov
insl
sti
push
xlat
pop
repnz
xchg
stos
decl
dec
mov
dec
out
mov
xchg
add
ret
pop
lcall
dec
add
add
repz
mov
bsr
add
popa
add
sub
popf
leave
ja
jge
add
jmp
shll
pop
ds
add
or
add
add
cld
jnp
add
out
pop
testb
pop
aaa
dec
inc
icebp
mov
lea
pop
xchg
call
ds
add
jge
pop
mov
add
lret
mov
ljmp
sbb
add
leave
addl
dec
adc
sub
adc
xor
push
ret
pop
cmp
xchg
out
or
add
sub
add
add
add
loopne
jno
adc
jns
icebp
lcall
add
cmp
add
push
add
and
add
sub
xchg
adc
mov
add
and
add
jmp
outsb
push
add
xchg
push
sbb
loop
repz
or
add
dec
push
cld
pop
mov
xor
mov
mov
add
pop
movsb
add
pop
sub
add
insl
mov
add
add
add
lret
lcall
add
pop
cld
out
lds
inc
jl
shlb
frstor
add
aas
push
or
add
add
and
add
test
add
jo
push
xchg
cmp
addr16
mov
add
lea
add
add
sarl
lods
add
add
add
test
cmpsb
add
arpl
cmpsb
add
pop
mov
add
add
sub
add
add
mov
add
add
nop
fnstenv
add
xchg
xchg
add
mov
jns
mov
add
cmpsl
inc
cli
aas
jns
lds
mov
mov
test
add
je
ret
add
mov
js
adc
xor
xchg
fcom
sub
add
jo
mov
clc
xchg
scas
add
sub
add
add
mov
shlb
push
out
cmpsb
add
iret
mov
mov
add
mov
xchg
pushf
mov
mov
add
cmpsl
ret
enter
inc
sbb
mov
les
mov
add
push
cmp
in
jae
dec
imul
mov
fdivrs
or
add
sub
add
sarb
sarb
jmp
lret
test
add
inc
sub
add
gs
add
stc
test
add
and
add
lods
add
js
or
cwtl
lds
fs
jecxz
ret
and
lods
addb
inc
arpl
push
push
xchg
xor
int
fstpl
pop
jnp
ffreep
mov
and
add
xor
push
add
xchg
adc
sarl
test
xchg
push
add
add
into
mov
rol
inc
hlt
add
add
push
outsl
enter
add
mov
cmp
stos
add
rcll
or
inc
mov
lret
mov
add
ja
js
stos
add
jg
rcl
pop
cmpsl
in
js
add
xchg
mov
in
jb
and
add
add
sub
sbb
dec
sub
add
add
push
popf
push
jl
ss
push
les
cmc
add
add
imul
mov
add
push
add
inc
mov
push
cmp
aaa
inc
dec
fdivrl
and
add
dec
shrb
mov
xchg
ds
lds
in
mov
push
mov
xor
sub
add
add
sub
add
out
out
gs
mov
pop
push
pop
push
mov
add
inc
icebp
leave
stc
aas
xchg
and
add
add
fucomi
cld
jge
xchg
inc
rorl
add
test
add
add
mov
out
xor
imul
add
or
aad
sbb
sub
add
add
mov
add
xor
rol
add
dec
jb
popa
xchg
js
push
test
add
lahf
pop
outsb
or
adc
outsb
shll
add
cmp
fwait
mov
add
scas
insl
inc
mov
add
out
mov
and
add
push
ljmp
mov
cmp
dec
rorl
add
mov
pop
add
push
dec
shll
call
add
sub
add
pop
and
xor
add
and
sub
add
add
sti
enter
pop
mov
bound
inc
pop
out
push
push
dec
and
add
xchg
mov
mov
add
xchg
mov
add
addr16
mov
pop
lods
xchg
push
xchg
pop
mov
add
into
mov
ret
adc
hlt
xchg
push
hlt
cld
dec
cmpsl
int
movsb
add
mov
add
add
adc
cmp
call
pop
insb
addb
addb
int3
into
addb
inc
addb
fsubl
mov
gs
adc
add
out
push
pop
std
mov
add
cld
movsl
mov
pusha
mov
mov
add
add
out
bound
inc
js
add
test
in
testb
icebp
andl
add
insl
int
mov
and
add
int
scas
add
pop
aad
out
in
lret
xlat
mov
add
sbb
xor
dec
lods
add
aam
pop
clc
adc
dec
xchg
int3
inc
and
add
jl
sub
mov
add
or
addb
adc
mov
int
mov
lods
add
sbb
je
sarb
mov
xchg
hlt
cmpsb
add
or
add
dec
out
sarl
xor
or
add
add
stos
add
les
jp
sti
jne
shrl
shlb
add
add
repnz
inc
into
into
and
add
push
negl
push
lret
scas
mov
shll
inc
stos
clc
jmp
xchg
iret
pop
lret
add
add
jge
std
cmc
pop
inc
jbe
cmp
add
hlt
fucomi
add
add
fwait
ss
scas
push
popa
ret
add
daa
sahf
gs
imul
lret
push
add
loope
sub
decb
add
adc
mov
pop
mov
add
sti
mov
add
iret
jle
popa
sahf
add
inc
mov
popf
jge
adc
add
test
mov
xor
add
xorl
add
into
out
in
movsl
inc
pop
or
addb
and
mov
in
dec
popa
xchg
add
data16
cmpsl
push
xlat
push
add
je
arpl
jmp
pop
or
add
pop
inc
fildl
add
jo
add
lock
cmc
ljmp
aas
and
add
lods
cwtl
fs
add
movsl
gs
push
addb
dec
sub
add
cltd
loopne
in
xchg
lcall
rcll
add
jmp
add
pop
cmpsb
add
sbb
xor
loopne
pop
dec
or
mov
and
add
jb
add
rcl
and
add
pop
lret
mov
add
les
imul
mov
add
dec
xor
ret
out
dec
leave
mov
out
add
add
push
add
add
cmp
adc
in
dec
jecxz
push
xor
pushf
mov
add
ljmp
sub
out
mov
add
pop
fldcw
sarl
add
outsl
cmp
inc
hlt
addb
mov
push
add
stc
push
test
add
icebp
loopne
ja
stos
add
sbbl
or
add
add
outsb
and
add
add
pusha
cmp
mov
add
add
dec
scas
fstpt
cmp
aam
lock
insb
sub
and
add
pop
sbb
repz
inc
add
add
in
push
push
outsl
dec
pop
ss
add
loopne
in
test
add
xor
add
dec
imul
pop
dec
mov
mov
add
ret
jbe
out
push
mov
add
add
and
add
add
sbb
pop
loopne
leave
xchg
punpckhdq
pop
mov
or
add
adc
ljmp
icebp
out
xchg
or
add
add
pusha
cmpsl
ret
leave
mov
mov
sub
add
sbb
add
add
pushf
push
scas
pusha
repnz
add
gs
xor
or
in
and
add
pusha
and
add
add
add
add
imul
arpl
add
mov
sbb
fisttps
shl
or
sub
add
push
js
jle
add
xchg
adc
add
add
add
popa
fists
pop
xchg
jecxz
add
lea
std
mov
out
stos
in
enter
add
lods
add
pop
inc
sub
add
icebp
repz
jae
fwait
mov
add
pushf
jae
cmp
add
inc
mov
add
inc
mulb
ljmp
jecxz
mov
add
or
add
outsb
stc
sbb
pop
sbb
idivl
cmp
mov
cli
push
add
dec
iret
xlat
push
adc
mov
popf
xchg
cmp
add
notb
adc
mov
add
hlt
xchg
popa
scas
fildll
xchg
push
mov
add
adc
in
nop
ficompl
clc
pop
js
jns
leave
lods
add
and
and
xor
mov
inc
pop
int
add
lock
outsb
jmp
cmp
hlt
xchg
adc
jle
pop
pop
sub
mov
add
add
inc
pop
jp
pop
sbb
movsb
add
je
add
sub
add
outsb
dec
jns
out
push
add
shr
aas
sub
add
nop
pusha
inc
ficoms
js
adc
and
add
mov
pop
inc
aad
or
add
jecxz
dec
pop
or
add
cli
mov
pop
jne
adc
jbe
adc
addb
mov
xor
jne
add
ret
pusha
scas
xor
push
jne
add
enter
xchg
icebp
xchg
jbe
enter
lahf
mull
cltd
iret
adc
jno
jns
or
add
xchg
add
mov
cmp
leave
frstpm(287
je
test
pop
mov
add
pop
jmp
xlat
loope
or
iret
and
add
push
lcall
cmpsb
add
ror
dec
shlb
clc
xchg
add
add
daa
rolb
inc
push
xchg
sbb
push
adc
std
and
add
mov
add
add
adc
jmp
fcmove
icebp
xor
add
cmp
dec
xchg
xchg
add
or
add
je
inc
mov
fldl
shrb
mov
add
mov
add
lret
xchg
sub
insb
or
add
mov
lahf
add
ret
sbb
inc
fwait
lea
sbb
shr
int
add
inc
pop
push
mov
mov
add
jecxz
add
in
out
and
mov
cmp
adc
lahf
test
add
add
sbb
imul
xchg
mov
iret
mov
add
add
out
pop
or
movsb
add
and
add
filds
lahf
aam
pop
rcr
in
ret
lret
fstl
sub
add
mov
add
mov
hlt
je
mov
mov
int
jmp
add
hlt
cmp
into
sbb
mov
push
jmp
mov
popa
jl
loopne
pop
fstl
shll
rcll
mov
ss
jne
push
pop
push
xchg
jno
cmpsl
popa
in
add
sarl
mov
das
or
add
sbb
push
adc
cmp
sti
aad
add
sbb
popl
xor
xchg
push
cmc
imul
add
jnp
and
popa
into
mov
add
arpl
stos
add
inc
mov
imul
add
js
out
popa
fyl2x
dec
adc
js
lods
add
jge
inc
xchg
bound
aaa
add
add
inc
mov
dec
xchg
add
xchg
and
xor
cmpsl
pop
pop
xchg
mov
and
add
dec
mov
in
sub
add
add
ret
dec
loop
cmc
or
push
and
add
add
or
add
add
cltd
mov
push
add
dec
add
add
sub
sub
out
gs
add
and
push
mov
fsubrl
and
add
test
fadd
mov
add
mov
add
push
cmp
add
add
dec
or
add
xchg
and
add
dec
mov
mov
mov
movhps
add
cmpsl
push
test
add
aas
push
aad
ja
addb
and
add
jbe
addb
fldl
add
adc
int
nop
sub
cmovb
mov
add
popa
inc
jno
popf
xchg
dec
loopne
sub
add
outsl
inc
pop
insb
pop
sbb
popa
mov
lcall
clc
shr
jmp
sub
clc
jmp
cmpsb
add
loop
fiaddl
fs
out
and
add
in
pop
fcoms
add
sahf
fcoml
dec
push
daa
aam
adc
pusha
and
pop
dec
call
subl
pop
sub
add
add
push
dec
mov
in
xor
fstps
popf
addl
cmp
xchg
jbe
adc
add
add
stos
add
fldcw
inc
inc
fildll
loopne
mov
orl
movsl
iret
mov
ljmp
add
gs
aam
add
lahf
and
cmpsb
add
addb
int
xor
add
rcll
fwait
or
cmpsb
add
xchg
add
cmpsb
add
mov
add
add
add
xlat
rcll
pusha
mov
add
les
add
test
add
add
dec
mov
add
push
mov
sbb
test
or
add
jecxz
push
out
call
add
aam
subl
fldcw
inc
fsts
ljmp
inc
mov
add
mov
xor
gs
lea
add
rcr
inc
leave
shrb
dec
stos
add
add
mov
add
cmpsb
add
or
dec
imul
add
xchg
std
arpl
add
fwait
pop
ss
xchg
adc
arpl
push
stos
scas
add
push
pusha
sarl
aam
pop
jecxz
mov
add
shlb
push
add
xchg
rcrl
data16
movsl
popf
leave
push
cmpsb
add
xchg
jecxz
lcall
lea
je
daa
movsb
add
add
cmp
xor
mov
xor
repnz
daa
mov
jmp
add
add
mov
fs
push
add
add
mov
insl
sahf
outsb
sti
or
add
adc
icebp
sahf
shl
stos
add
mov
iret
mov
or
add
in
or
add
adc
cmpl
neg
cmp
loopne
inc
cmp
imul
nop
sub
add
jecxz
fisttpll
out
clc
outsb
jg
jge
xchg
in
push
add
das
stos
pop
xor
dec
add
add
dec
jmp
add
sub
add
add
das
stos
in
jl
add
xchg
lahf
adc
xchg
jecxz
decb
add
add
mov
push
int
dec
outsl
fstl
inc
jp
dec
xor
in
shll
je
mov
add
test
mov
into
fwait
sub
add
stos
popf
xchg
mov
add
add
mov
addb
inc
int
jnp
mov
lahf
pop
mov
cwtl
cwtl
insb
nop
rcrb
xchg
cltd
mov
add
mov
lock
add
daa
mov
repnz
add
sbb
add
fidivrs
inc
pusha
rcrb
add
popa
mov
into
loopne
and
add
mov
mov
add
add
ja
aad
pop
add
xchg
movsl
mov
add
test
xchg
addb
xorl
js
les
inc
lea
lds
add
in
mov
add
cmp
clc
cltd
les
mov
mov
in
and
add
add
iret
ret
out
rolb
add
movaps
add
add
mov
dec
std
fidivl
adc
hlt
addb
push
mov
push
pushf
shr
ret
insl
addb
out
add
sar
push
addr16
pop
call
nop
xchg
add
sarl
mov
push
add
test
add
rep
add
aaa
aaa
loopne
mov
add
mov
mov
add
push
jecxz
or
pop
add
add
add
adc
xor
add
aas
out
icebp
sbb
cltd
ret
xacquire
add
push
inc
pop
and
add
or
mov
add
cltd
fst
mov
add
mov
add
sub
in
add
add
jnp
push
inc
push
addb
jmp
add
add
add
pop
push
jb
sarl
inc
sbb
into
push
jne
sbb
jecxz
imul
and
add
mov
or
add
sub
add
hlt
xlat
sbb
add
les
cmp
add
and
add
loopne
add
in
arpl
arpl
test
add
ror
mov
add
out
and
add
xchg
icebp
fiaddl
in
mov
aad
add
add
xchg
cmpsb
add
sbb
dec
jge
mov
cmpsl
lds
jmp
sub
adc
mov
ja
hlt
sub
or
mov
dec
mov
ret
daa
dec
dec
jp
xor
jl
int
pop
jmp
add
scas
mov
add
add
and
add
sbb
add
ja
add
imul
out
mov
sbb
add
push
insb
add
push
mov
sub
icebp
pop
inc
ret
mov
add
bound
inc
dec
scas
add
jo
pop
addb
mov
fnsave
cmpsb
add
lods
xor
imul
loop
pop
cwtl
out
add
jecxz
xor
jle
add
adc
mov
ret
addb
dec
inc
sub
add
popa
adc
and
adc
xchg
xlat
cmp
xchg
push
loopne
adc
inc
into
and
insb
js
std
cwtl
xor
addb
jmp
stos
add
pop
mov
add
add
xchg
imul
cltd
gs
cwtl
fidivrl
lret
sub
add
loopne
and
aaa
mov
mov
and
add
hlt
fisttpll
fnstsw
add
cli
push
fidivrs
negb
filds
loopne
sarl
enter
enter
add
adc
jae
subl
add
sbb
pandn
push
add
add
add
mov
add
mov
push
xchg
mov
test
add
rcll
xchg
add
lds
add
in
jno
in
pop
sbb
add
mov
addr16
fiadds
or
add
bnd
adcl
add
add
out
popa
pop
shll
fucomip
test
lcall
xchg
aam
add
pop
dec
mulb
add
and
add
xchg
add
add
test
add
mov
add
jb
aas
flds
mov
add
pop
jp
adc
or
add
pop
aaa
stos
add
or
sbb
add
pop
push
add
aas
xchg
lds
pop
popf
lods
add
inc
fldenv
mov
xlat
movsl
repz
and
add
push
and
add
mov
inc
add
add
dec
mull
add
stos
and
xor
add
add
xchg
jb
jbe
add
addr16
xchg
popa
jecxz
stos
add
xchg
xchg
inc
out
stos
add
fcmove
pop
xor
shrl
test
jl
fimuls
jae
add
xor
addb
ret
scas
push
add
std
pop
xor
out
dec
ret
pop
loop
aaa
mov
filds
add
cmp
inc
push
sti
cwtl
xchg
add
nop
addb
pop
xchg
add
pop
fcomip
cmp
daa
sahf
jge
lea
lret
lods
add
rcrb
add
lds
xor
jbe
add
sti
addb
sbb
add
cmp
ret
mov
xchg
pop
sub
int3
aam
and
add
rcr
enter
sbb
xor
xor
add
cltd
out
test
add
add
add
loop
sahf
jae
aas
add
fs
test
add
sbb
out
add
add
dec
aaa
arpl
push
add
mov
mov
add
mov
add
add
pop
add
add
or
xor
sbb
add
test
add
int
pop
int3
push
faddl
inc
mov
cmpsl
fs
mov
mov
add
lcall
aad
pusha
and
shl
mov
add
mov
mov
mov
push
add
push
test
dec
mov
lea
sbb
fcomps
mov
push
add
mov
imul
sub
mov
aad
mov
push
xor
sbb
cwtl
xchg
add
insb
dec
stc
shrl
test
out
add
stos
add
scas
add
fists
push
ss
jbe
mov
mov
xor
mov
cmp
add
push
add
das
icebp
addr16
cld
sarl
xchg
dec
stos
add
jno
xchg
jg
mov
mov
add
les
jge
add
mov
push
xor
fbld
xchg
mov
add
dec
leave
sti
mov
add
add
xchg
imul
jnp
lods
add
pop
mov
push
and
aas
jge
xchg
stos
add
xchg
adc
inc
ja
negb
test
add
xor
push
fildl
add
cmp
icebp
in
stos
xchg
add
orl
rcrb
add
and
mov
add
add
push
in
clc
mov
add
add
jmp
xchg
dec
mov
add
pop
dec
mov
adc
add
out
out
in
xchg
stos
xchg
adc
in
pop
in
js
in
notb
adcl
dec
mov
push
cmp
mov
add
push
je
push
add
aas
cmpsl
push
add
sub
imul
add
cmp
sub
add
in
mov
add
dec
loope
add
addb
in
sbb
push
jbe
push
add
mov
int
pop
cli
in
movsl
mov
or
add
jae
pushf
add
add
add
int
fcoml
rcll
jb
dec
shlb
aas
jmp
in
call
popa
sbb
xor
into
adc
jmp
add
ja
add
ss
add
std
orl
dec
and
repnz
mov
add
jne
fstpt
mov
test
add
cmp
add
add
inc
das
inc
fimuls
stc
pop
and
add
gs
xchg
push
add
push
or
add
fbstp
ret
repz
inc
cmpl
jno
xchg
add
popa
scas
sahf
mov
and
xchg
mov
popa
mov
add
cmpsb
add
cmp
aaa
cmp
mov
add
add
xchg
add
xchg
jle
jnp
addb
out
xor
jb
xlat
push
add
xchg
iret
je
add
push
leave
ds
add
pop
dec
test
add
rolb
out
mov
add
jecxz
jp
add
sub
add
or
add
int3
push
jbe
push
add
das
pop
fmuls
add
dec
ja
call
addb
in
add
mov
inc
push
repnz
lcall
popf
dec
xor
add
fistpl
gs
inc
mov
add
jl
cltd
lret
sbb
sbb
jle
jmp
mov
mov
aas
sbb
arpl
inc
xchg
add
enter
xor
add
dec
shll
cli
dec
add
push
mov
sahf
jb
insl
xchg
jge
aaa
adc
ret
scas
add
pushf
xchg
pop
jno
cmpsb
add
lods
add
push
cmc
dec
in
outsb
dec
xchg
inc
jmp
imul
xchg
scas
add
sub
add
push
xlat
xor
mov
add
add
stos
shlb
dec
mov
fs
mov
loopne
fidivs
into
push
add
jmp
add
inc
inc
push
add
je
cmc
ss
repz
dec
ret
add
insl
or
add
loopne
and
out
je
bound
aam
lahf
xchg
add
add
mov
jb
ret
pop
cli
nop
idivl
repz
add
shrb
mov
add
fstpt
out
adc
jmp
mov
add
js
fldcw
dec
idiv
or
add
xor
repz
jge
add
sbb
add
mov
inc
push
cld
insb
popf
pusha
mov
add
into
cmp
add
pop
das
insl
mov
mov
pop
insl
add
add
add
les
add
mov
add
roll
or
add
pop
push
add
nop
ficompl
jb
pop
pop
xor
xacquire
iret
out
pop
mov
jno
adc
xor
imul
add
out
cmpsl
xchg
aad
add
lret
adc
iret
adc
and
pushf
push
outsl
sub
add
nop
dec
xchg
add
add
and
add
orl
xchg
mov
or
add
dec
call
xchg
sahf
add
add
adc
add
js
je
xor
adc
pushf
cltd
fimuls
rclb
loop
shrl
add
add
lock
pop
test
add
loope
add
and
add
pop
adc
test
loop
add
adc
icebp
out
in
fistpl
mov
add
lret
fmul
xchg
leave
in
pop
lcall
cmpsb
add
mov
xchg
add
add
lahf
mov
pop
sbb
xor
fidivrl
xchg
imul
movsl
mov
inc
sbb
popf
push
incb
add
add
mov
loope
add
repz
pushf
fcmovnb
int3
mov
insb
jns
add
inc
pop
hlt
hlt
popf
hlt
push
add
mov
lock
dec
lret
rcl
push
scas
ret
lahf
push
add
je
das
pop
push
add
aam
mov
jbe
dec
or
stos
add
pop
fmul
jo
ret
pusha
mov
in
std
out
jle
mov
les
aad
adc
inc
das
inc
in
ret
mov
xchg
mov
lret
lods
pop
imul
jle
bound
add
adc
dec
bound
jns
push
int
push
push
add
add
jg
mov
add
jp
mov
add
or
inc
insl
loop
pop
or
add
inc
jmp
and
add
xlat
fcoml
test
sub
add
out
jecxz
fwait
lock
popf
enter
ljmp
add
inc
inc
xchg
push
add
add
mov
add
dec
push
jg
jmp
aas
adc
or
dec
pop
sub
add
add
jg
add
add
leave
push
jl
add
lret
jmp
add
mov
add
addb
jecxz
add
test
jecxz
add
jl
movsl
pushf
in
pop
popf
cmp
push
imul
add
test
iret
xchg
dec
in
add
bound
jbe
in
cmp
out
sbb
nop
and
mov
sbb
mov
cmp
jge
lock
dec
pop
cmpsl
out
xor
cmp
or
xlat
xor
inc
cmp
ja
insl
push
jbe
lret
add
add
pushf
push
jb
cmp
sub
add
push
js
mov
inc
popa
dec
mov
add
aam
rorb
add
sbb
add
or
pop
add
movsl
in
popa
cmp
stos
arpl
lcall
mov
add
sbb
inc
xchg
push
add
ficompl
add
or
add
add
pusha
ja
movsl
adcl
add
mov
addb
addb
jbe
mov
rcrb
fists
fstl
fcmovu
loopne
je
cmp
sbb
lods
insl
inc
lahf
nop
mov
push
fcompl
movsl
aaa
or
add
push
out
fucomi
pop
pop
out
pop
lds
test
jp
mov
inc
sti
jle
add
ret
dec
faddl
add
push
inc
lds
mov
mov
popf
stos
add
loopne
add
pop
mov
add
mov
add
out
or
inc
lods
add
jecxz
xor
jg
dec
roll
add
cli
fstps
jg
aam
mov
push
or
add
ss
mov
add
push
les
add
lret
fimuls
add
sub
and
add
movsl
add
dec
push
xchg
push
fidivrs
jmp
sahf
test
add
movsl
lret
add
into
jecxz
cmp
xchg
mov
insl
mov
dec
xchg
add
mov
add
rcrl
add
add
in
repnz
sbb
inc
push
xlat
adc
add
xlat
xchg
and
arpl
xor
cmp
jmp
rorl
movb
ret
sbb
scas
add
jge
jns
and
add
add
cltd
and
add
jae
and
add
popa
sahf
and
add
sbb
lea
daa
fcmovb
sbb
mov
ss
mov
jp
add
or
add
or
pop
gs
jl
pusha
test
add
movsb
add
xorl
mov
fists
add
lds
mov
add
push
add
xor
add
xor
xchg
out
enter
add
stos
push
stos
add
mov
dec
ret
jo
fnclex
inc
inc
push
pop
adc
mov
xor
sbb
inc
in
movsl
sub
jo
ficoms
jmp
aas
pusha
out
sbb
add
xor
movsb
add
icebp
add
add
addb
cmp
addb
mov
fsubl
dec
sub
add
add
push
mov
cmc
and
add
and
lahf
int
add
test
mov
add
add
push
add
dec
call
fwait
dec
aad
andl
cmp
lret
add
jnp
stc
sub
xchg
pusha
add
push
lret
pusha
lea
sbb
mov
push
or
add
jae
pushf
xchg
mov
add
mov
add
add
mov
add
add
xchg
jno
add
or
add
repnz
mov
cmp
in
add
sub
loop
xor
push
ret
add
add
aas
sub
sti
mov
cmpsl
push
add
fucom
sbb
das
out
loope
jmp
add
push
add
in
xchg
stos
ja
testl
cli
repnz
out
lds
mov
out
pop
pop
and
scas
add
adc
fiaddl
sub
add
dec
mov
add
fs
pop
inc
pop
adc
test
add
add
shlb
ret
fadds
add
mov
add
or
add
push
ret
mov
and
jmp
add
aas
cmp
xchg
add
popa
mov
jecxz
out
test
add
pusha
inc
jl
sub
add
add
dec
jae
mov
add
adc
dec
nop
lea
popa
rcr
cmp
rcr
je
js
aas
dec
mov
add
add
scas
add
mov
add
test
add
add
ss
cld
cmp
popf
and
add
cmp
cmpsl
push
jmp
add
jmp
cmp
add
rep
lret
int
add
xor
rcl
fisubl
ja
add
or
jb
mov
sub
addb
mov
jo
mov
mov
mov
add
add
aad
mov
notb
insb
dec
and
add
je
push
addr16
add
add
add
mov
mov
stc
les
xchg
loopne
cmp
add
jecxz
add
add
add
loop
mov
add
add
add
cltd
sub
add
and
int
sbb
fisubrs
mov
add
add
xor
dec
mov
add
add
arpl
hlt
aam
cmp
inc
mov
add
adc
shrl
or
jns
mov
add
mov
add
mov
pop
cmp
scas
add
lock
sti
jle
inc
xor
lret
inc
adc
and
loopne
lret
add
adc
addr16
mov
les
add
add
and
add
add
xchg
lcall
mov
add
ret
ja
lcall
add
push
add
mov
add
add
add
xchg
push
xorl
sbb
cmp
cmp
adc
add
movsb
add
inc
fcomi
aas
sbb
add
add
imul
add
das
sahf
jae
pusha
je
aaa
add
mov
aas
and
add
insb
enter
add
jb
sub
add
enter
add
jnp
in
scas
add
pop
js
movsb
add
shrb
inc
xchg
xchg
mov
add
fsubs
bound
add
and
add
mov
add
adc
mov
lea
fimuls
pop
js
cmpsl
push
roll
adc
jmp
in
pop
imul
add
jbe
das
mov
lahf
jmp
jp
icebp
jmp
mov
add
ret
xchg
fdivl
lea
jne
adc
pop
pop
mov
mov
lock
push
sahf
dec
loope
bound
add
ret
out
add
in
xchg
nop
dec
stos
add
pop
sbb
movsl
lods
add
adc
add
jmp
and
dec
or
add
mov
in
inc
or
add
mov
addb
push
ja
sub
and
add
mov
jno
iret
xor
das
cmpsb
add
scas
bound
pop
insl
or
add
cmp
cmpsb
add
mov
inc
mov
add
cmp
inc
imull
les
add
fwait
shll
nop
ja
test
outsb
inc
mov
scas
add
test
movsb
add
or
add
outsb
lods
add
lods
add
in
mov
add
mov
ds
lods
sub
add
push
jl
ret
add
xor
mov
sbb
in
adc
out
icebp
jo
pop
stos
stos
mov
inc
jb
add
js
jecxz
inc
das
sbb
mov
das
scas
mov
arpl
dec
je
addr16
sbb
icebp
add
imul
and
mov
nop
xchg
add
stos
dec
inc
divl
out
cmp
popf
mov
add
push
popa
out
std
sbb
into
repnz
add
add
setne
dec
aad
or
add
add
lds
add
add
test
mov
xchg
notl
fstpt
test
add
fcoms
add
mov
test
add
mov
mov
add
add
mov
imul
les
enter
jmp
sbb
bound
add
out
out
insb
adc
add
or
addb
fadd
sbb
into
adc
test
add
jo
fdivrs
int3
imul
js
xchg
add
add
add
jno
inc
and
add
adc
add
mov
add
scas
xor
add
insl
lea
add
neg
hlt
adc
mov
ret
push
loop
or
add
jp
lcall
in
add
dec
cmp
std
or
add
xor
add
add
sub
add
push
test
add
xor
pop
sub
push
add
add
fincstp
mov
sbb
ljmp
ret
adc
adc
xchg
nop
pop
jg
stc
jae
icebp
dec
aam
sbb
push
fsubs
andl
add
mov
xchg
mov
and
bswap
mov
push
mov
ds
add
mov
add
rcl
addl
xor
add
push
lea
jmp
add
lds
push
sbb
inc
push
sub
add
mov
add
or
push
push
sub
add
lcall
and
add
mov
dec
in
fwait
pop
ljmp
pop
mov
and
add
add
pop
xor
out
add
pop
std
jle
pop
test
add
sbb
nop
mov
push
add
jg
add
pop
movsb
add
mov
add
imul
pop
sbb
cmp
test
xchg
mov
add
add
add
add
divb
add
stc
sbb
pop
sbb
mov
add
stos
add
lea
sub
add
test
adc
test
xor
arpl
nop
jle
jg
xchg
fnstcw
jae
packuswb
add
or
add
xor
add
aad
mov
dec
sbb
add
dec
ja
lret
mov
add
add
add
push
movsl
sub
add
insl
jbe
outsl
push
in
mov
mov
iret
cmc
mov
out
cmpsl
cmp
cltd
out
push
cltd
or
xor
add
into
aaa
imul
add
adcl
popa
push
inc
add
push
daa
mov
add
add
clc
add
cmc
jg
jg
out
mov
add
inc
imul
add
int3
dec
sub
cmp
sbb
add
stc
push
aam
and
add
scas
add
or
neg
jl
aad
xchg
add
outsb
insl
pop
bnd
add
pop
in
cmp
ret
push
int3
mov
stos
push
ss
push
mov
pop
jae
or
add
jbe
and
imul
fs
bound
push
popa
push
add
cwtl
dec
aas
aaa
jns
subl
add
add
iret
push
or
add
sarb
dec
or
hlt
adc
cwtl
in
movsb
add
adc
sarb
loop
add
popa
mov
fistps
add
mov
add
mov
xchg
add
hlt
pushf
adc
montmul
cmpsb
add
lcall
loopne
fistpll
cmpsl
lret
or
xor
fsubp
psrlq
mov
add
or
movnti
add
push
mov
test
add
xchg
clc
xchg
arpl
roll
mov
add
lock
add
mov
mov
outsb
inc
fsubl
fimull
int
add
addb
inc
pop
or
shrb
mov
add
pop
into
or
add
pop
shll
add
daa
adc
shlb
add
jle
fs
dec
pop
mov
inc
leave
or
add
out
scas
add
adc
icebp
femms
add
mull
insb
daa
insl
sbb
sub
add
add
jno
and
add
out
lret
pop
cmp
sub
popf
imul
add
sarl
add
js
and
adc
mov
adc
out
into
lcall
push
add
and
popa
dec
and
add
jnp
mulb
sub
pop
xchg
inc
pop
mov
call
sti
or
add
cmpsl
push
dec
jecxz
pop
lss
add
pop
fldenv
add
add
call
dec
push
fs
mov
push
sub
hlt
fwait
mov
jl
pusha
pop
stos
push
xchg
fcoms
pop
mov
out
imul
add
mov
add
add
add
faddl
add
cltd
inc
fwait
xchg
cmpsl
push
add
add
jno
fs
mov
pop
add
das
fsubrl
mov
mov
or
add
add
ds
add
push
adc
push
mov
ja
rcll
sarl
pop
sub
pop
jp
add
ficompl
fidivl
sub
add
add
enter
add
cmc
add
mov
pop
or
add
add
jecxz
out
fsts
test
adc
mov
cltd
lahf
jno
push
add
add
int3
mov
add
test
mov
add
stos
int3
pop
xchg
movsl
scas
aam
add
sbb
mov
add
xchg
lods
xlat
fcmovnu
jns
mov
add
xor
add
insl
xchg
add
sbbl
lahf
scas
arpl
in
dec
lock
xchg
adc
add
add
fmul
lahf
cmpsl
daa
outsl
push
adc
and
add
insl
push
add
mov
and
mov
out
in
out
xor
outsl
dec
das
rcr
push
pop
pop
mov
add
loopne
push
push
lea
add
pextrw
push
movsl
sar
dec
jmp
int3
mov
add
ss
repz
inc
push
mov
add
data16
imull
mov
mov
adc
mov
notb
push
push
add
sbb
pushf
mov
jb
lcall
pop
pop
loope
idiv
jl
sbb
and
add
pop
js
in
lds
or
add
ficoml
mov
push
or
add
push
mov
fwait
mov
jne
xchg
and
inc
movsl
arpl
add
jb
mov
push
xchg
nop
mov
add
jb
mov
add
add
xor
xor
into
mov
iret
pop
jno
xchg
int
daa
and
adc
fcomps
jecxz
add
mov
add
add
shll
pop
lds
add
and
add
xlat
and
add
js
jne
add
jl
sbb
movsl
adc
adc
pop
jp
and
add
mov
add
into
mov
mov
dec
lcall
dec
das
iret
mov
xor
xor
scas
nop
sub
sbb
add
add
jp
add
movsb
add
and
add
adc
add
sub
dec
and
add
nop
sbb
pushf
fs
add
add
mov
pop
rol
xor
shrb
sub
add
hlt
xchg
add
test
add
mov
add
into
or
pop
xor
add
xchg
sub
insl
xor
add
mov
mov
mov
add
out
cmp
mov
xor
push
dec
clc
mov
addb
xor
gs
add
xor
xchg
inc
flds
add
out
mov
roll
add
fsubrl
add
out
addb
inc
mov
add
push
in
mov
add
pop
mov
fcomi
and
add
or
add
add
repz
test
add
in
add
xchg
mov
add
loope
pop
imul
repz
cmp
adc
out
scas
add
xor
dec
addr16
addl
add
orl
fisubrs
add
push
or
add
cltd
jmp
pop
adc
mov
add
in
adc
push
or
add
add
add
and
add
enter
std
sbb
add
addr16
mov
add
out
cltd
lods
add
test
push
int
inc
lret
test
add
ds
repnz
add
loop
add
xlat
lods
add
or
add
icebp
mov
cld
daa
arpl
addr16
and
add
pop
fldenv
dec
or
add
shll
or
add
lret
pushf
mov
push
mov
dec
cmc
outsb
shlb
add
dec
aad
xchg
adc
mov
add
xor
add
sub
jb
jle
sbb
inc
mov
sbb
aaa
cmp
jmp
cmc
and
add
add
or
pop
mov
mov
dec
into
add
add
cmp
hlt
into
repnz
add
mov
adc
addb
pop
leave
arpl
insl
sub
add
mov
add
sbb
jg
add
stos
lahf
enter
sub
add
lea
fcmovb
gs
add
mov
add
mov
mov
sbb
mov
add
mov
add
movsl
mov
je
mov
and
add
add
mov
dec
daa
xchg
mov
jmp
xchg
and
call
inc
add
je
leave
mov
lret
aam
adc
mov
jb
cli
pushf
pop
fisubs
sbb
add
shlb
add
mov
add
adc
fmul
ss
bound
add
enter
mov
out
pop
pop
sbb
outsl
jg
mov
lods
inc
add
mov
pop
outsl
outsb
inc
sub
je
xor
daa
in
sub
sbb
mov
cmpl
or
addb
inc
fucomip
sbb
daa
or
gs
lret
sti
mov
pop
mov
fisubl
cmp
rcrl
ret
ja
imul
outsb
xchg
add
jae
add
add
fsubs
add
fldenv
shrl
add
scas
add
xchg
in
push
add
imul
mov
add
jecxz
movsb
add
pop
push
fnstsw
je
aad
hlt
lret
clc
out
add
xchg
sub
add
aam
add
mov
fsts
add
jge
push
add
movb
pop
cmp
sub
lods
add
or
insl
popa
decb
add
scas
add
pop
mov
add
jns
std
nop
cmp
jns
int
jle
add
xor
pop
mov
mov
lock
add
aas
add
add
add
inc
aad
stos
mov
mov
dec
aas
cld
jbe
sbb
add
pop
iret
arpl
mov
mov
ret
sbb
mov
bound
sub
pop
cld
sub
add
push
or
in
mov
adc
loopew
add
idivl
jno
jmp
inc
cmp
in
jg
inc
ret
add
dec
scas
add
and
add
add
mov
ja
add
push
add
dec
pop
jbe
std
dec
xchg
sub
add
jo
add
xchg
adc
push
jbe
cmp
sbb
mov
add
fs
iret
jl
out
lret
push
out
out
xor
rcrl
lret
scas
call
je
xchg
add
sbb
in
sub
add
in
xchg
mov
add
iret
jge
adc
lods
add
add
mov
mov
push
add
mov
add
dec
adc
in
adc
out
jae
call
dec
rcr
hlt
aam
loopne
in
cmpsl
push
xchg
or
add
pop
xlat
adc
out
cltd
mov
sub
and
add
inc
mov
ja
pop
sub
std
jae
mov
xchg
dec
jnp
cmp
add
sbb
xchg
add
xor
sbb
outsb
and
scas
fs
add
adc
pop
add
push
jnp
iret
sub
add
add
lds
add
sbb
mov
add
add
mov
scas
add
mov
mov
sbb
out
jg
test
push
fisttps
or
add
push
outsb
xor
lock
repz
add
jg
xchg
add
sbb
add
and
add
xchg
imul
mov
pusha
lods
inc
or
add
inc
stos
add
je
jns
and
add
addb
push
stos
sbb
xor
dec
add
add
add
hlt
out
cmp
mov
mov
dec
sub
inc
dec
addb
iret
pop
scas
or
add
orl
inc
mov
push
ret
addb
cmpsb
add
push
add
xor
add
mov
in
data16
or
into
push
shl
loope
lahf
sub
or
add
rclb
jns
cmp
xor
loope
add
mov
js
pushl
stc
pop
xlat
leave
scas
add
cmp
pop
cmp
out
lds
add
and
mov
add
add
mov
outsl
addr16
hlt
mov
fdivrs
out
jo
add
push
add
xchg
mov
sbb
add
pop
fistpll
add
sub
add
add
icebp
inc
adc
aas
sub
mov
sbb
lods
add
push
aas
push
cmpsl
out
aas
xchg
iret
movsl
out
mov
add
sti
pop
jg
xor
add
rcl
sbb
cmp
in
popf
push
imul
inc
mov
pop
cli
sbb
add
mov
icebp
lret
add
sbb
stos
add
leave
add
add
xor
pop
mov
mov
add
push
mov
add
jne
clc
push
call
add
aam
add
dec
int
shl
ss
add
mov
and
add
push
insb
pop
jbe
pop
and
add
adc
inc
inc
xor
inc
mov
sarl
inc
mov
add
std
test
add
xor
add
std
jb
popf
outsl
add
and
shll
mov
enter
lock
adc
push
add
mov
add
add
mov
into
xchg
jae
and
adc
out
dec
repz
jg
sahf
fistps
ljmp
dec
cwtl
pushf
popa
cmpsb
add
cmp
push
add
lret
mov
clc
bnd
in
aaa
mov
push
lds
fwait
or
mov
jmp
push
add
push
call
mov
push
pop
cmp
mov
lcall
into
mov
add
add
inc
stc
jp
add
xchg
or
add
into
ljmp
or
wrmsr
xchg
aad
sbb
gs
movsb
add
out
pusha
mov
add
dec
pop
xchg
dec
xor
push
addb
jo
xchg
xchg
inc
lock
pop
leave
aad
fptan
je
or
add
sbb
test
shlb
pop
lahf
or
movsl
into
sub
add
ljmp
add
loopne
sbb
cmp
push
in
jg
xor
jle
fcmovne
mov
and
ret
add
cmpl
add
cmp
ret
in
mov
mov
add
addb
ret
xchg
test
add
add
cmp
add
xchg
add
jp
or
into
addr16
addr16
sbb
inc
das
cmpsl
add
js
mov
icebp
sub
add
jge
or
add
das
repnz
add
inc
in
add
xor
aam
mov
add
and
add
pop
adc
add
mov
add
sbb
addb
lods
pushf
jl
lahf
push
in
jno
add
xchg
mov
in
add
lret
sbb
rorb
add
ret
push
jno
icebp
mov
adc
popf
inc
js
pop
adc
add
xor
cmc
and
add
lret
xchg
inc
fistpl
inc
and
add
sub
xchg
mov
add
mov
add
push
in
xchg
pop
dec
mov
rcll
add
pop
jl
adc
add
mov
jp
les
cli
and
add
add
xchg
sbb
add
sbbl
lcall
add
lds
xchg
add
loopne
stc
jne
add
addb
negb
xchg
add
or
fwait
dec
clc
cmp
push
test
test
add
insb
icebp
inc
sub
add
add
jmp
add
or
cmpsb
add
mov
inc
inc
ja
pop
mov
add
repz
cmc
addb
mov
jo
fimull
idivl
or
add
fsubs
mov
jmp
dec
or
add
add
loop
cmpsb
add
or
add
ljmp
bound
and
sub
add
out
aam
movsb
add
xchg
movsb
add
aad
out
xor
movsl
imul
mov
add
add
insb
sub
dec
in
pop
das
jecxz
out
scas
add
rclb
loop
add
add
mov
gs
int
aad
add
mov
stc
sti
sbb
loope
cmp
cmp
xor
lods
popf
sbb
iret
mov
add
in
sub
add
push
jmp
std
pop
xchg
repz
dec
in
add
add
add
in
lret
add
add
xor
add
push
add
push
je
decb
or
add
shlb
addr16
mov
push
shrl
aas
divl
ficoml
insl
in
movsl
push
imul
lea
xchg
iret
pop
test
add
shlb
add
mov
aam
test
add
dec
dec
ret
dec
dec
subl
cmpsl
push
dec
sahf
mov
xchg
shr
or
push
mov
xchg
pop
inc
push
add
add
mov
leave
test
push
bound
cltd
jp
push
inc
mov
add
add
add
mov
add
mov
xlat
inc
cmpsb
add
cvtps2pi
dec
inc
jp
mov
pop
mov
inc
enter
add
add
xor
roll
ret
shlb
add
ffreep
imul
add
mov
mov
xor
shrw
add
fcmovb
and
add
das
adc
add
mov
pop
addb
xor
cltd
jmp
jmp
in
std
arpl
or
cmc
cmp
mov
imulb
add
test
add
scas
add
pop
push
in
arpl
push
inc
mov
push
add
in
and
add
pop
mov
je
lds
add
scas
mov
jbe
sahf
xchg
add
and
add
mov
add
add
add
pop
cmpsb
add
inc
sub
lcall
pop
in
loop
jmp
xchg
pop
cli
aam
add
movups
add
jecxz
inc
xchg
dec
mov
add
lcall
negl
enter
shr
repnz
lods
add
lea
push
and
add
xchg
push
mov
add
insb
jg
add
push
mov
sub
enter
or
add
add
push
ret
pushf
and
add
mov
int
xor
or
fcomp
into
je
stos
cmp
movsl
mov
pushf
sbb
add
mov
mov
ret
into
mov
loop
mov
inc
push
rolb
push
fs
sub
add
mov
add
add
xlat
hlt
jnp
movsl
test
add
cmpsl
xor
add
imulb
adc
and
out
and
add
add
mov
fildl
add
iret
add
add
add
test
scas
add
addb
inc
out
outsb
mov
add
int
out
add
bound
add
mov
add
addb
fcomi
add
add
xor
ficompl
add
pop
inc
cmpsb
add
std
int3
add
iret
loope
xchg
out
add
add
icebp
or
sub
lahf
sarb
ljmp
add
mov
and
add
fnstcw
xor
jo
add
inc
xor
add
mov
adc
jp
mov
insb
hlt
aas
xchg
mov
push
loope
jge
insl
inc
and
add
push
out
add
lds
lea
add
cwtl
out
add
test
add
jmp
scas
iret
push
aam
sub
jle
lret
mov
aam
popf
jo
pop
fwait
add
add
sbb
dec
aad
add
add
add
push
stos
shlb
dec
and
add
int3
leave
sub
add
popf
shrl
add
and
jecxz
add
xchg
pop
add
jno
rclb
jo
mov
add
aas
lods
sub
mov
add
bound
add
and
add
jae
add
mov
sub
add
int
out
add
jecxz
add
sbb
add
nop
movsb
add
xchg
mov
fcoms
cmp
mov
add
mov
add
add
push
add
popf
sub
add
push
inc
inc
xor
add
pop
xor
in
xor
mov
out
fwait
cmpsb
add
cmpsl
stc
inc
or
add
add
jmp
sbb
add
mov
fs
mov
add
pushf
hlt
jl
mov
add
pop
push
mov
add
add
mov
add
cli
popa
cmc
inc
cld
sub
add
fisubl
add
inc
pop
jnp
hlt
dec
int3
fisttpl
add
rorl
out
push
sub
add
adc
xchg
add
ficompl
fs
dec
loopne
push
cmp
and
out
cli
or
add
scas
rol
cmp
mov
xor
ljmp
inc
js
jno
xchg
gs
loopne
adc
add
mov
mov
fisttpll
adc
inc
and
add
movsl
cmp
push
push
cli
not
dec
mov
mov
add
aaa
pop
xor
sub
add
add
push
cmp
insl
pop
and
add
add
add
ret
sbb
lret
mull
jno
or
jle
cmp
aam
ret
lahf
xchg
xchg
stc
sub
dec
prefetcht0
push
imull
pop
lock
add
out
fxch
pop
ret
loop
add
mov
add
pop
je
mov
inc
inc
int
add
je
add
add
jge
mov
ror
push
push
xchg
jb
ljmp
add
jo
cmp
lock
in
rol
stc
in
int3
cltd
js
hlt
mov
test
add
cmc
sbb
add
xchg
das
movsb
add
scas
or
add
jp
xchg
inc
mov
add
or
ss
popl
addb
fwait
leave
lcall
stos
add
xor
add
ja
data16
sbb
add
adc
xor
add
sbb
add
or
add
add
inc
leave
adc
inc
cmp
mov
jecxz
cli
and
add
fbstp
or
add
mov
add
inc
cmpsl
adc
lahf
hlt
or
xor
in
adc
cld
scas
testb
int
add
mov
add
push
add
cmp
push
subl
lcall
cmc
ljmp
add
add
add
imul
jns
rorb
ficompl
out
cwtl
mov
leave
negb
add
cmp
dec
out
in
lock
jecxz
test
add
imull
flds
jo
inc
mov
push
add
test
inc
lds
add
add
add
pop
shl
sbb
add
inc
stos
add
test
add
fildll
das
jle
pusha
insl
sbb
jns
lea
jne
dec
imul
dec
imul
add
mov
mov
stos
jmp
jp
sub
pop
lret
cmp
add
add
add
jg
add
pop
xchg
outsl
sahf
mov
test
add
add
cmp
fisttpl
add
out
push
xor
pop
popa
or
add
mov
cwtl
shrl
add
mov
mov
add
sub
add
add
sub
add
adc
adc
push
cmp
and
add
or
repnz
lret
jnp
add
mov
add
add
mov
rorb
add
out
aam
ror
ficoml
jge
pop
mov
mov
push
sti
cmp
jnp
leave
xchg
test
mov
ds
xor
shrb
xor
jl
xchg
mov
add
pop
mov
movsl
pop
or
add
and
add
mov
add
jae
adc
fisttps
and
add
sbb
sbb
xor
adc
test
add
test
add
add
or
sbb
sub
add
push
mov
addb
addb
filds
inc
inc
mov
add
push
add
mov
jnp
xor
call
add
add
popf
cltd
mov
add
add
out
mov
add
add
mov
dec
fstpl
xor
mov
mov
add
jnp
fwait
lods
aad
or
add
add
add
mov
add
xchg
push
xchg
call
ljmp
ljmp
pop
std
xor
ret
sub
add
add
js
stos
insl
lret
sub
add
ret
pusha
jb
sar
mov
dec
cmp
mov
fidivrs
add
sbb
add
jg
push
imul
in
hlt
add
inc
les
xchg
add
in
add
icebp
cwtl
adc
sbb
aas
lock
add
cmpl
pop
cmpsb
add
adc
adc
inc
jo
lock
nop
ret
lock
dec
lods
pop
push
aas
cmp
lods
mov
movsb
add
pop
dec
xor
add
jnp
mov
sub
into
sti
sub
add
and
add
dec
and
add
lods
and
ret
ret
sub
add
add
mov
in
rep
push
pop
push
rolb
add
mov
xchg
das
sarb
xchg
cmpsb
add
call
sub
add
stos
add
dec
sbb
aam
pop
inc
and
and
add
push
jns
add
movsb
add
mov
add
lret
gs
push
ret
pop
or
cmc
in
inc
mov
and
add
hlt
mov
adc
sub
pop
mov
aaa
sbb
cmp
add
scas
add
jg
fscale
cwtl
dec
mov
add
stos
push
cli
daa
xor
add
adc
jb
sub
add
mov
jecxz
adc
test
add
cltd
inc
cmp
or
add
dec
out
ljmp
data16
add
xchg
lds
jb
clc
xor
not
xor
lcall
add
lcall
add
sub
add
add
loop
addb
sub
add
mov
add
jecxz
push
mov
sbb
add
addr16
cmp
add
cmp
clc
aaa
cmpsl
daa
mov
lods
add
mov
dec
sub
stc
fs
cltd
in
add
in
xchg
adc
push
xor
fsub
add
add
fdivr
ss
pop
imul
mov
add
dec
sahf
leave
cwtl
add
add
cli
mov
sti
adc
sbb
add
fsubr
ret
fadds
add
mov
rolb
movsb
add
in
adcl
adc
jg
loop
xor
dec
jg
insl
xlat
mov
bound
jg
lcall
adc
rcr
mov
ret
add
mov
jae
or
dec
xchg
jb
add
pop
push
add
ret
fs
and
add
add
add
jns
add
mov
sarb
testb
dec
out
icebp
mov
ja
mov
int3
dec
and
add
pop
scas
adc
sbb
dec
fdivr
inc
push
jmp
mov
pushf
mov
jnp
mov
add
cltd
pop
lret
dec
sbb
addr16
add
add
or
out
add
loop
lret
pop
or
jge
add
clc
incl
adc
dec
or
add
mov
add
mov
std
rcrl
fisubrl
sbb
data16
test
jne
addl
sbb
addb
jle
sbb
fs
jno
adc
loopne
add
stc
shrl
add
sub
add
xlat
mov
push
add
push
movsl
fisttpl
bound
mov
xor
add
add
fistpl
ljmp
add
cmp
push
shlb
loopne
xlat
xchg
ret
mov
popf
fsubs
add
lcall
mov
add
pushl
jne
mov
movb
add
add
mov
add
int3
int3
adc
push
bound
add
pop
mov
std
mov
test
add
xor
sahf
popf
scas
add
cmp
add
mov
bound
pop
movsl
std
pop
mov
add
jl
out
sbb
fbld
andl
add
pop
jae
add
lods
add
jp
add
xor
lds
pop
jmp
xor
add
xchg
add
inc
mov
add
mov
add
add
sub
dec
in
dec
fisttpll
add
cmp
jns
call
add
test
add
imul
jmp
cwtl
call
dec
shr
dec
cmp
loope
scas
add
lret
cmc
les
fstl
mov
add
jno
les
dec
dec
mov
add
lods
inc
rcl
call
lock
clc
sbb
fdivrl
testb
dec
jge
add
test
add
cmp
add
adc
pop
decl
add
cmp
aad
incl
push
out
sub
ret
les
dec
push
in
xchg
add
and
add
stc
jns
clc
imul
inc
divb
jne
repz
pop
enter
jns
movl
pop
aam
adc
jne
xlat
pop
push
jo
psrlq
xor
add
add
cmpsb
add
scas
jg
pop
insb
push
add
xor
add
shl
mov
add
clc
filds
mov
out
pop
out
lods
inc
push
push
pop
and
add
out
cmp
add
dec
repz
and
aam
aaa
adc
dec
hlt
adc
add
mov
add
xchg
add
add
int3
mov
add
dec
out
inc
inc
popa
mov
add
in
aad
mov
jbe
ror
mov
dec
lods
add
or
ljmp
adc
adc
popa
dec
dec
inc
icebp
push
rcr
add
loope
imul
rcll
repnz
push
dec
lcall
add
mov
fadds
add
or
scas
add
lods
into
xor
mov
subl
jg
pop
ret
mov
add
imul
test
add
jge
mov
inc
fstpl
fucomip
lcall
add
ljmp
ds
sbb
add
sbb
popf
inc
neg
xor
stos
add
lods
jp
xor
xchg
test
sti
pop
mov
add
adc
xor
in
fistpll
and
jns
cli
push
xor
mov
dec
mov
mov
add
xchg
xchg
add
add
cmpsl
addw
fistpl
sub
out
movsl
or
add
add
jg
or
add
add
cmp
lods
add
shl
add
add
adcl
jg
push
or
adc
xor
mov
cmp
add
mov
mov
xchg
add
fnstsw
inc
call
out
add
int
push
cmp
and
add
testb
sbb
push
and
in
xchg
sub
arpl
sbb
imul
addb
pop
push
and
sbb
ret
add
mov
push
add
test
add
sub
add
xchg
add
lret
fcmovne
jp
push
xlat
fs
push
mov
add
dec
dec
mov
push
rcr
iret
loop
mov
add
jmp
out
popf
and
cmp
mov
test
add
subl
dec
test
add
inc
jmp
das
arpl
lock
add
nop
fstpt
imul
pop
add
cmp
jg
jns
adc
outsb
mov
adc
sbb
cltd
scas
arpl
dec
data16
add
ss
inc
lods
add
and
add
jo
enter
add
lret
les
xor
mov
add
mov
or
add
pusha
pop
jb
pushf
lret
test
add
cmpsl
fisubrs
add
pop
mov
mov
shll
sbb
sbb
xor
xchg
push
in
cld
push
add
add
stc
aam
or
xchg
dec
std
sbb
mov
ja
xor
cmpsl
sbb
fnstcw
add
inc
sbb
pop
cwtl
jg
or
lret
adc
add
or
add
cmp
push
push
add
add
add
push
out
push
inc
mov
add
mov
sbb
mov
pop
pop
test
pusha
addr16
mov
add
add
call
pop
dec
mov
add
adc
jecxz
inc
out
cwtl
xchg
add
sti
ljmp
cmp
in
push
add
mov
out
mov
dec
dec
mov
data16
sub
add
cmp
add
add
fiaddl
jmp
or
jne
clc
rcl
lea
mov
add
add
sub
add
jo
push
add
sub
aam
xor
pop
or
add
inc
xor
add
les
or
add
add
mov
test
add
add
popa
jns
sbb
or
and
add
cmpsb
add
sbb
pop
lret
fidivrl
outsl
addr16
xor
dec
pop
pop
int
lock
add
jle
stos
add
jnp
or
add
add
in
jo
add
orl
jae
cmp
cltd
push
icebp
icebp
xor
add
xchg
leavew
insl
xchg
in
or
add
add
js
nop
add
add
xlat
or
add
sahf
or
xchg
movsb
add
fwait
mov
add
mov
mov
mov
clc
mov
add
ja
mov
aaa
sub
rcrl
sub
jno
xchg
add
push
popa
add
xor
cmp
cmpsl
stos
add
inc
pop
fists
sbb
push
repz
add
mov
mov
adc
inc
mov
inc
fnstenv
sub
add
add
cmp
fnstenv
add
mov
jle
adc
add
mov
mov
inc
fldt
mov
mov
add
mov
add
sbb
cld
leave
call
adc
xchg
cmp
add
ret
sbb
mov
sbb
add
xor
fldt
push
add
add
adc
adc
test
fucomip
enter
add
mov
ds
outsl
jmp
movsb
add
loopne
pop
adc
test
add
cmpsl
cmpsb
add
in
xchg
imul
clc
call
and
and
jg
cli
dec
xor
mov
and
xchg
or
add
out
push
popa
and
and
add
sldt
add
les
cmp
and
add
and
xchg
stos
add
lea
cmc
into
sbb
and
jle
add
dec
xchg
out
pop
loopne
repz
ja
mov
sbb
jecxz
inc
enter
data16
cmc
test
xor
movsl
xchg
cmpsb
add
cmc
mov
push
add
jno
div
xchg
or
jae
lcall
or
shrl
inc
cmp
cmpl
pop
or
add
scas
mov
add
movsb
add
cmp
add
sub
add
jle
mov
xchg
add
pop
xor
sub
add
add
lods
push
add
mov
add
iret
push
sbb
lea
add
out
pop
cmp
or
add
ja
mov
add
xchg
sbb
mov
test
add
add
add
push
lahf
add
enter
pmovmskb
repz
sub
add
in
add
outsb
mov
addb
addb
ret
shlb
and
add
popf
mov
add
mov
add
sbb
jl
mov
add
mov
outsb
xor
loop
push
add
mov
xchg
enter
add
jge
iret
iret
addb
mov
fdivs
pop
dec
repnz
mov
add
sbb
loop
add
push
push
int
jle
fisttpl
pop
mov
scas
icebp
fbld
xchg
add
sub
add
xchg
sub
scas
or
add
or
add
out
jle
mov
add
in
cli
int
add
hlt
add
shll
in
test
mov
add
enter
add
pop
xchg
rcll
add
fidivs
mull
push
add
dec
into
mov
add
mov
leave
jecxz
out
mov
jge
xchg
mov
add
js
movsl
sbbl
add
loop
and
add
sbb
pop
or
add
nop
mov
push
dec
mov
add
mov
add
pop
add
add
fidivs
and
mov
jmp
pcmpeqb
mov
cld
push
xchg
push
pop
cwtl
mov
lock
add
push
lahf
mov
add
mov
add
add
cltd
sarl
sub
int3
jns
arpl
pop
ljmp
shll
add
add
pop
sbb
add
clc
mov
ret
lcall
push
add
stos
add
jg
sub
add
add
mov
inc
test
adc
pushf
add
inc
sub
dec
sbb
movsb
add
fistpll
and
add
bound
flds
add
mov
fidivrl
push
add
add
pop
dec
add
add
shll
jge
add
cmpsb
add
sbb
xchg
stos
add
sub
add
add
xchg
dec
push
lahf
sete
add
add
enter
movsl
xlat
mov
mov
adc
in
lret
ret
jl
add
add
or
add
add
pushf
pushf
imul
xor
add
insl
mov
xor
outsb
add
add
ret
adc
mov
shlb
out
and
test
mov
fmuls
add
loopne
add
mov
add
test
dec
pop
stos
add
jmp
addb
cmc
add
sub
leave
fnstsw
mov
xor
add
add
pop
cmpsl
and
add
das
add
pop
mov
add
mov
sarl
mov
add
jns
add
lock
mov
out
sahf
dec
dec
sub
fnstenv
push
ret
add
mov
xchg
xlat
push
out
out
ret
inc
xor
cmc
sub
fnstcw
inc
aaa
dec
movsb
add
dec
pop
adc
cmp
push
sub
divb
cmovp
mov
push
add
negb
sub
dec
dec
aaa
sub
add
mov
inc
sbb
cltd
mov
push
out
xchg
test
add
out
aaa
setnp
xor
stc
push
sbb
cli
adc
ficomps
stos
add
bound
add
punpckhwd
mov
insb
imul
rcrb
pop
inc
fs
add
and
add
add
and
pop
sbb
sub
add
inc
inc
dec
inc
xor
mov
repz
jb
adcl
dec
mov
add
mov
xor
add
add
stos
push
subl
jnp
in
das
inc
dec
imull
add
jbe
or
add
mov
add
mov
notb
pop
pop
and
sub
add
repz
push
add
push
dec
pop
inc
inc
notb
add
stos
out
xlat
hlt
add
pop
iret
leave
fisubl
and
add
call
ds
cwtl
aaa
push
jg
pushf
dec
inc
inc
xlat
fistpll
add
rolb
data16
sti
nop
jl
add
fdivrl
add
idivl
pop
cmp
add
sbb
in
push
icebp
xchg
inc
ret
mov
add
mov
jnp
call
add
fidivs
popf
aam
and
add
dec
adc
add
sub
or
add
test
leave
or
add
lods
bnd
jle
dec
clc
lods
add
fidivrl
jnp
add
pop
cli
lods
or
or
add
arpl
adc
negb
filds
das
mov
loop
imul
jle
jne
loopne
scas
add
jmp
pop
push
add
in
sbb
icebp
pop
je
or
add
jp
add
lods
add
sub
add
or
cmc
addb
mov
addb
jb
into
sbb
pop
shrb
mov
cmp
shl
pushf
or
add
and
add
dec
mov
addr16
dec
add
out
inc
add
fldenv
cmp
sbbl
data16
fildll
mov
mov
add
pop
repnz
mov
addb
dec
imul
pop
fistpl
pop
and
into
xor
movsl
fldenv
add
into
ss
pop
prefetch
or
sub
add
enter
jae
pop
dec
ja
ss
add
repnz
inc
xchg
add
dec
and
add
popa
jle
clc
or
cmp
mov
add
aam
popa
dec
lret
jb
add
pop
inc
xlat
xchg
dec
jo
xchg
and
lret
mov
in
stc
mov
xor
addb
xor
sub
add
insb
add
pop
add
cltd
dec
mov
sbb
jb
add
push
cltd
and
push
pushf
xchg
mov
scas
addb
jo
stc
movsl
jbe
in
xchg
add
add
add
cmc
in
adc
add
add
sbb
sub
pop
in
ljmp
decb
add
add
add
cmp
mov
dec
imul
inc
in
mov
mov
add
pop
jg
pop
std
inc
jl
incl
add
ret
cld
sbb
js
pop
dec
or
add
cli
pop
cltd
lret
add
adc
add
fidivl
lret
shll
add
mov
inc
mov
arpl
add
hlt
inc
imul
pushw
daa
mov
push
mov
incb
add
adc
fstps
xor
repnz
add
push
paddusw
and
jbe
in
xchg
dec
jge
sub
add
add
add
cmp
addb
mov
mov
push
aaa
lea
inc
aad
cmpsl
xorl
add
clc
push
inc
shr
outsl
loope
xchg
add
std
pop
pop
push
add
adc
add
out
xchg
sbb
mov
pop
divb
add
add
out
scas
mov
mov
add
and
cmpsb
add
adc
adc
adc
stos
jns
add
add
js
aam
aaa
mov
add
sbb
xor
jge
and
add
pop
adc
xor
add
mov
in
sbb
mov
inc
fidivrl
dec
cltd
dec
test
lahf
sbb
add
cli
jns
scas
add
ljmp
adc
les
addb
add
add
add
ljmp
lea
add
sti
lea
std
ja
add
cmpsb
add
aaa
inc
arpl
add
ja
test
add
jle
and
cmpsl
daa
js
add
push
movb
inc
test
add
test
sbb
add
add
xor
dec
xor
jbe
push
je
add
or
add
in
xor
popa
in
add
mov
iret
push
lock
fmull
out
call
push
add
lcall
jp
sub
add
add
pop
sahf
mov
add
xor
xor
add
xchg
pop
jb
in
jns
inc
push
push
insl
cmp
or
add
pop
dec
cmp
enter
add
les
or
add
cmp
mov
xchg
add
and
cltd
cmp
push
add
adc
loope
add
mov
or
or
add
mov
push
add
dec
mov
add
jo
dec
or
add
scas
xchg
fisubrl
cld
sub
add
jmp
dec
push
add
lcall
add
out
cwtl
cmp
sub
add
add
mov
fldenv
stc
dec
in
jmp
and
aam
addb
movsl
sbb
repnz
inc
call
or
add
push
push
out
loop
add
push
dec
dec
fstpt
popa
aas
mov
outsl
push
test
add
test
inc
dec
shr
outsb
cmp
mov
or
add
fcomi
or
jp
add
ror
push
add
stc
adc
jne
dec
push
dec
daa
jnp
outsb
lcall
jp
mov
cmpsb
add
jns
scas
add
data16
push
rcrb
cmpsl
rcr
enter
lods
add
pop
insb
ja
push
call
out
add
aaa
cmp
mov
and
stos
add
sarl
lcall
add
add
or
mov
and
add
insl
add
add
jne
aad
pop
or
add
lock
cltd
cli
andl
add
sbb
pop
push
ret
sub
sbb
xchg
leave
shl
in
ss
mov
lcall
mov
add
int3
lods
add
das
iret
dec
sub
add
out
add
xchg
outsb
inc
outsl
dec
ss
jne
add
call
mov
into
mov
add
and
and
frstor
and
add
add
in
mov
pop
mulb
add
sub
add
xchg
rorl
addb
push
add
cmp
jnp
add
adc
push
add
add
rclb
fisubrs
or
xor
add
push
jp
cmp
stc
and
add
push
add
jae
cmp
dec
cmc
rorl
add
add
push
jmp
add
sub
add
add
