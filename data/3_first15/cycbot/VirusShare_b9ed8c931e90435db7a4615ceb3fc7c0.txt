mov
add
pop
fwait
lret
subl
mov
leave
xor
mov
aad
mov
call
cltd
mov
add
dec
lods
pushf
scas
popa
fildl
add
mov
push
mov
lret
add
stos
cmpsb
xchg
xchg
arpl
mov
xchg
or
inc
ja
push
xchg
add
fidivl
fsubr
in
push
and
mov
mov
mov
add
mov
pop
push
dec
data16
mov
add
ret
xor
inc
nop
add
ret
dec
pop
push
add
test
fldt
cmp
inc
add
dec
fs
inc
add
movsl
mov
add
dec
push
test
add
mov
push
or
inc
repz
jle
push
pop
inc
aaa
das
cmpsb
sbb
mov
mov
clc
icebp
pop
dec
ss
push
cltd
inc
mov
mov
jbe
add
mov
sbb
jae
lret
mov
mov
adc
mov
dec
sbb
bound
mov
mov
mov
loop
mov
ret
fs
lock
add
or
add
in
adc
mov
mov
xor
or
xor
sbb
pop
imul
sbb
mov
shll
ja
xor
mov
pop
cmp
push
add
mov
add
fimuls
cmc
mov
add
test
and
mov
mov
add
bound
mov
sub
cmc
ds
cli
and
inc
push
add
pusha
add
and
mov
pop
fnsave
pop
cmpsb
enter
inc
dec
not
mov
sub
mov
mov
mov
out
cmpsl
xchg
mov
test
out
dec
cmpsb
cmp
mov
outsb
iret
sbb
xor
mov
imul
or
add
xchg
xchg
inc
cli
mov
loop
mov
push
mov
xlat
add
mov
mov
sub
sub
mov
data16
stos
xor
pusha
add
add
lahf
outsl
and
lea
idivb
in
nop
add
movsb
lods
cmpsb
pop
mov
fstpl
subl
xchg
xchg
mov
mov
push
push
inc
sbb
out
xlat
jg
fcomi
adc
dec
jp
adc
mov
fmuls
leave
xchg
jge
lods
int3
mov
or
imul
ljmp
rolb
imul
insb
xchg
pop
stos
and
mov
add
add
jle
addb
cmpsb
dec
cld
jle
test
dec
lcall
add
push
rolb
mov
rolb
mov
aaa
pop
mov
adc
fdivrs
push
es
pushf
sbb
out
add
add
mov
xchg
jne
add
dec
mov
pop
sbb
mov
push
div
add
sbb
add
iret
imul
std
mov
mov
xchg
hlt
repnz
bound
mov
mov
add
adc
dec
addl
hlt
pause
add
add
mov
pop
add
push
mov
add
ss
mov
mov
mov
cltd
or
add
mov
jge
pop
push
dec
inc
fwait
dec
sti
mov
jbe
out
mov
mov
lahf
iret
pop
pop
cld
dec
sbb
popa
xchg
or
push
xchg
loopne
mov
jno
xor
mov
outsb
out
pop
popf
jns
adc
mov
push
xor
ficomps
mov
lret
add
mov
mov
test
mov
mov
push
pusha
add
lock
fdiv
xor
inc
pop
and
mov
scas
rcrl
lea
push
inc
sbb
je
ret
das
movsb
clc
push
out
imul
and
fcmovnu
aas
push
and
popa
into
testb
aad
adc
mov
cld
jecxz
mov
xlat
insb
sbb
xor
test
xor
fwait
outsb
int3
aaa
imul
push
repz
dec
in
xor
pop
and
mov
push
lds
adc
jg
je
adc
mov
shrl
popa
je
mov
cmp
in
dec
fldt
sbb
aam
mov
jg
or
xor
inc
xor
mov
rolb
mov
scas
mov
inc
add
or
add
movsb
out
push
ss
add
into
lods
sbb
lahf
and
push
push
add
mov
jbe
pop
add
mov
mov
addr16
dec
addb
sub
cmp
addb
jne
jg
add
push
pop
daa
loop
mov
or
ja
inc
cltd
adc
sub
cwtl
inc
iret
cmp
dec
imul
rolb
pop
outsb
mov
mov
push
into
add
mov
jg
dec
add
mov
add
std
jecxz
push
int3
out
fistl
andl
mov
add
add
ljmp
or
rolb
mov
push
mov
xchg
loopne
mov
and
setb
mov
jmp
mov
or
xchg
jnp
sub
repz
add
sbb
sub
ja
push
xchg
sahf
mov
xlat
hlt
dec
stos
cmp
mov
mov
call
sbb
xor
mov
std
xor
mov
and
xchg
mov
dec
xor
test
adc
mov
ret
cmpsl
pop
push
or
movsl
mov
mov
mov
loop
mov
js
cltd
roll
imul
xchg
xlat
add
mov
pop
daa
pop
adc
mov
clc
mov
fbld
rorl
in
sub
das
shl
add
add
xchg
jecxz
std
dec
inc
add
mov
cmpsl
stos
addb
xlat
mov
sub
sbb
xor
inc
popf
cmp
add
push
loope
cmc
loope
adc
ret
mov
mov
push
addb
mov
pop
inc
int3
lea
sub
add
mov
int
xchg
add
add
sub
sbb
inc
inc
xor
xchg
add
mov
xor
in
dec
jmp
add
ss
or
inc
ret
or
jp
pop
icebp
cmp
push
in
add
ret
xchg
out
sti
xor
mov
js
outsb
or
jp
add
mov
mov
outsb
mov
into
loopne
mov
mov
stos
xor
add
mov
aaa
test
xchg
call
inc
lahf
add
mov
add
test
inc
jecxz
fsubr
push
pop
jo
mov
jl
bound
mov
add
add
add
mov
or
add
xor
xor
mov
sub
mov
pop
ljmp
das
test
add
push
jl
dec
ret
lcall
mov
mov
sub
popa
dec
fldcw
lods
ret
and
mov
mov
mov
push
cmp
repnz
iret
addl
pop
and
inc
add
clc
popa
mov
arpl
add
and
push
add
xchg
jne
mov
ds
sbb
int
ss
mov
dec
int3
nop
add
pop
or
xchg
fadds
add
mov
and
mov
sbb
jo
mov
or
out
icebp
jle
fmul
notl
mov
stc
sbb
add
lcall
pop
add
in
add
sub
ret
es
scas
lcall
je
ljmp
sbb
pop
jl
testl
and
rolb
mov
add
aad
repz
pusha
add
add
jo
mov
mov
mov
mov
add
call
imul
mov
pop
xchg
imul
mov
sbb
sbb
mov
lcall
lea
and
xchg
cmc
mov
xchg
add
push
test
dec
out
cli
inc
repz
push
data16
mov
push
addb
movsl
test
out
cmp
add
call
div
addl
add
pop
mov
fstl
jnp
push
mov
mov
repz
fists
add
add
mov
in
add
mov
add
xor
mov
popa
and
lods
daa
xor
add
add
add
mov
add
rcrl
mov
xor
movsl
mov
ljmp
rolb
mov
clc
fcoml
push
add
cmpsb
cmp
testb
mov
ret
sbb
and
fldenv
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
lret
out
xlat
in
pop
lods
out
xchg
add
mov
or
add
mov
pop
pop
in
aad
adc
mov
push
xchg
test
imul
or
dec
aam
jbe
rolb
sub
sti
out
add
mov
lods
roll
inc
mov
rolb
mov
push
mov
movaps
mov
dec
shll
add
mov
mov
or
cmpsb
test
add
push
jbe
xor
mov
dec
movsb
pop
icebp
push
popw
inc
addb
insl
xchg
test
push
int3
in
jecxz
jp
in
xchg
mov
lret
xchg
push
push
mov
repnz
cmc
repnz
sub
add
and
sub
das
lea
stos
ja
sbb
clc
xchg
sahf
jnp
addb
pop
aad
sub
add
xchg
mov
add
jae,pt
mov
xor
mov
mov
or
add
mov
add
xor
addb
pop
pop
mov
adc
mov
or
imul
add
mov
lcall
fbld
or
push
xor
mov
int
add
mov
pop
push
pop
mov
rolb
push
mov
add
es
loopne
mov
mov
sbb
and
mov
loop
mov
cmp
lods
outsl
jne
dec
popf
in
inc
scas
popf
ss
add
aam
pop
jne
mov
cld
push
sub
movsb
aam
jge
iret
addl
mov
add
movsl
test
sub
or
or
pop
mov
incl
mov
add
or
add
jne
fmuls
mov
popf
loop
mov
mov
dec
loopne
mov
mov
js
xor
lods
mov
negb
add
xchg
cmpsb
cmp
push
add
faddp
lds
repz
push
adc
cmpsb
dec
loopne
mov
sub
xor
mov
sbbl
mov
addr16
add
gs
jne
mov
add
cmp
cmp
mov
mov
insl
cld
cmc
push
jp
lods
pop
lds
mov
movsl
mov
mov
flds
mov
scas
or
add
add
movsb
aas
adc
dec
mov
xchg
arpl
add
push
add
cli
push
dec
pandn
or
jg
add
adc
jnp
jl
std
sar
add
cmp
popa
mov
jle
add
inc
sub
test
jbe
clc
push
jmp
popa
decl
arpl
add
les
in
pop
push
jl
fisubrl
xor
mov
cmpsl
sbb
and
mov
pop
cmp
push
das
inc
xchg
push
dec
inc
add
sbb
add
xor
mov
movsl
push
neg
icebp
mov
add
mov
mov
add
add
xor
xchg
in
xor
mov
and
mov
in
xchg
add
and
jnp
push
push
js
xor
out
mov
mov
mov
and
mov
mov
dec
out
int
add
cld
out
mov
lock
sub
loope
dec
sub
mov
sub
adc
mov
mov
add
les
mov
lods
inc
push
test
aam
mov
fldcw
and
xchg
inc
lds
gs
cmp
xchg
dec
cmp
pop
push
popf
std
repz
add
adc
jg
pop
xor
std
aad
mov
push
add
cmp
add
mov
cmc
xchg
sub
add
pusha
add
jo
mov
addb
mov
mov
xor
mov
lret
pushf
int3
xchg
mov
push
cmpsl
adc
push
or
xchg
sub
inc
out
adcl
movb
xor
dec
imul
mov
repnz
rcrl
test
adc
pop
xchg
and
fwait
sub
sbb
sub
daa
mov
mov
ret
movsl
mov
popa
rolb
xor
sub
add
pop
xchg
sbb
ljmp
movsl
stos
push
sub
rolb
imul
sbb
add
ret
mov
add
fcom
movb
inc
add
mov
mov
jmp
add
lods
sub
add
imul
xchg
pop
cmp
xchg
xchg
add
jmp
mov
mov
mov
adc
sbb
mov
jmp
lods
or
adc
test
aam
adc
mov
add
mov
shrl
xor
xchg
jne
mov
rol
js
add
insl
mov
xor
mov
push
and
jns
lea
ret
adc
mov
inc
mov
sub
int3
cmpsl
int3
out
cmp
add
stc
popf
bound
mov
cld
push
pop
sub
jb
mov
pusha
add
jne
in
mov
stos
out
fildl
jp
and
mov
add
in
lcall
mov
out
aad
imul
movsb
out
dec
mov
insb
inc
movsl
jo
mov
mov
addr16
rolb
mov
pop
lcall
aad
test
dec
and
imul
add
pop
das
pushl
pop
pop
cmp
sarl
arpl
xor
cmpsb
imul
xor
mov
push
mov
pop
test
in
xchg
and
mov
and
mov
scas
int
jae
dec
in
xchg
shl
xor
mov
add
push
pusha
add
pop
and
mov
icebp
jbe
adcl
and
dec
rcrl
adc
xlat
mov
fistpll
adc
cs
dec
daa
repnz
fcoms
jo
mov
rolb
mov
mov
repnz
add
pop
pop
mov
xor
push
add
movsb
jecxz
cltd
ljmp
mov
cmp
mov
add
sti
movsl
and
sbb
add
add
mov
inc
mov
movsl
mov
mov
rolb
scas
cmp
add
gs
ljmp
adc
add
nop
add
add
mov
inc
add
add
add
mov
movsl
xchg
mov
xchg
std
cmp
xchg
or
ret
jge
jne
ljmp
add
and
mov
mov
mov
popa
aas
dec
xchg
pusha
add
cmpl
gs
pop
call
pop
dec
lods
sbb
dec
jae
scas
addb
ljmp
dec
rcll
or
pop
xor
mov
sbb
loopnew
mov
mov
xchg
jmp
mov
jnp
sbb
outsb
pusha
add
cmp
outsl
sub
dec
push
rolb
inc
adc
mov
fldcw
mov
push
add
jo
mov
out
jnp
scas
orl
adc
push
bound
mov
pop
pusha
add
xor
mov
in
test
xor
lret
insl
test
pop
ds
andl
lock
ljmp
xchg
bound
mov
inc
add
cs
cmp
cmp
insl
xchg
mov
inc
pop
jge
in
jge
movsb
ss
mov
push
add
sbb
cmp
xchg
xchg
dec
adc
rolb
mov
sub
jo
mov
out
add
mov
mov
bound
mov
pushf
cmp
rolb
jns
scas
lods
or
add
push
add
imul
xchg
jns
or
mov
mov
mov
jne
jle
inc
setge
cld
lods
out
mov
or
and
mov
mov
fstl
jo
mov
jne
add
adc
mov
inc
dec
fsub
add
popf
inc
and
mov
add
cmp
add
lods
aaa
mov
mov
pop
fadds
mov
or
mov
fistps
cmpsl
xor
push
scas
ret
cmp
add
cwtl
or
and
mov
scas
or
rolb
mov
mov
bound
mov
push
test
xchg
daa
clc
jmp
lea
fucom
dec
ret
mov
cmp
enter
cmpsl
int
sub
testb
pop
sub
add
int3
mov
mov
scas
aam
adc
cmp
mov
push
test
jns
fstps
add
clc
in
adc
shll
add
add
arpl
xor
mov
cltd
arpl
jnp
sti
mov
add
rolb
mov
incb
test
add
les
iret
jecxz
mov
push
outsb
test
push
jb
mov
push
inc
cmp
sbb
sub
jb
mov
cmp
aas
mov
sub
inc
add
mov
push
pop
or
ja
push
sub
pop
push
add
sub
enter
enter
gs
test
je
loope
add
add
mov
mov
pop
and
sbb
add
movsb
iret
clc
btr
add
sub
jmp
rolb
mov
mov
int
orl
clc
out
sahf
lock
and
mov
and
mov
add
mov
jge
pop
jge
addl
loopne
mov
add
popf
test
ljmp
je
jg
add
mov
push
xchg
dec
xor
cmc
xchg
mov
mov
lcall
imull
add
jne
xor
xor
add
cmpsb
pop
rcll
nop
add
shll
add
mov
mov
add
mov
scas
lcall
lock
and
gs
cmp
insb
gs
rolb
mov
jb
mov
mov
mov
add
add
add
cmp
mov
adc
fwait
into
inc
lods
inc
and
rolb
sub
xchg
fisttpll
stc
fists
dec
mov
test
add
cs
pop
cmc
call
mov
mov
or
cmp
add
pop
repnz
sub
push
ss
ljmp
sub
jmp
cmp
rolb
jge
add
sub
or
add
lret
mov
addb
mov
icebp
mov
pop
mov
nop
add
add
sbb
stc
movsb
mov
sbbl
fidivrl
add
sub
aaa
arpl
add
add
cli
push
int
add
mov
jle
mov
mov
mov
rolb
aaa
nop
add
dec
adc
adc
cld
and
loop
mov
cwtl
je
andl
lret
loopne
mov
push
in
lea
cs
jo
mov
outsb
inc
inc
add
gs
jle
mov
or
mov
mov
cmpsb
mov
add
sub
clc
mov
lock
add
xchg
add
sub
add
add
push
adc
add
mov
decl
js
jl
test
cmp
jg
add
mov
mov
adc
mov
xchg
inc
push
add
lds
aas
scas
mov
push
mov
push
push
adc
pop
ja
add
add
repnz
sti
push
cmpsl
adc
sbb
mov
jp
rolb
sbb
xor
insb
popf
les
movsb
mov
rolb
ret
iret
mov
out
test
addb
dec
xchg
xchg
add
mov
mov
lock
sbb
sbb
mov
add
mov
jnp
outsb
lret
and
lret
mov
ds
xor
mov
cltd
rolb
mov
cmpsl
into
inc
cmp
push
lods
popa
fwait
rolb
mov
jp
add
add
fnstenv
push
dec
les
mov
mov
cmpsl
addb
cmp
push
stos
rolb
mov
rolb
mov
add
push
add
dec
sbb
push
mov
inc
sub
sti
xchg
push
ja
imul
mov
les
mov
fwait
movsl
push
xor
mov
or
roll
aas
mov
aaa
jb
mov
mov
repz
add
pop
data16
xor
jb
mov
imul
add
mov
add
add
insl
aam
mov
ret
test
les
fcmovbe
stc
enter
xchg
add
rorl
ds
dec
adc
mov
inc
add
aam
jmp
push
sbb
mov
jg
fprem
lods
mov
ja
loope
ja
add
xchg
mov
push
mov
mov
mov
mov
ljmp
mov
add
lret
popf
leave
lcall
add
adc
mov
add
rolb
mov
ss
adc
cmpsl
inc
add
add
faddl
lret
add
add
pusha
add
add
pop
in
mov
mov
mov
mov
push
nop
add
out
dec
subl
lcall
push
addr16
add
mov
add
stos
mov
add
mov
addb
test
sbb
mov
xchg
hlt
rcll
int
sbb
add
inc
mov
hlt
out
xor
add
mov
sbb
cmp
add
adc
mov
push
push
aas
xchg
inc
xor
pop
sub
sub
add
out
mov
mov
mov
add
fsubrs
add
fmul
dec
xor
mov
inc
add
ja
xchg
hlt
jno
or
repz
mov
and
mov
shr
inc
push
dec
add
testb
lret
push
dec
loopne
mov
add
addb
jecxz
add
sarl
add
pop
fdiv
jo
mov
add
cmp
add
aaa
mov
leave
aaa
mov
add
mov
add
stos
sub
push
add
cmp
sti
les
mov
daa
repz
add
sub
nop
add
cmp
dec
pop
mov
or
les
add
mov
mov
fnsave
fadds
mov
mov
out
mov
repnz
inc
pop
mov
jae
dec
mov
aaa
pushf
xchg
cmc
nop
add
add
add
push
pushf
mov
std
xchg
add
ret
sub
mov
or
mov
add
fistpl
jb
mov
dec
inc
and
mov
pop
std
in
loop
mov
and
loopne
mov
fcomp
gs
xlat
je
jae
or
jo
mov
add
sbb
test
add
js
ficoml
test
add
sub
insb
fisubs
cmc
call
scas
or
aam
add
add
sub
adc
mov
popf
mov
scas
push
jp
ficoml
mov
enter
mov
pop
rolb
mov
adcl
mov
shl
add
sarl
adc
loop
mov
movsl
pop
adc
mov
sbb
notb
jne
es
push
add
jecxz
je
fistpll
mov
mov
repnz
pop
xor
mov
into
scas
cmp
mov
and
mov
cld
inc
sub
xchg
int3
mov
mov
pop
mov
in
mov
inc
lods
xchg
bound
mov
xor
rolb
outsb
fstpl
daa
pop
sbb
add
mov
lahf
rolb
mov
gs
xchg
clc
ret
scas
test
push
bound
mov
lds
loope
add
mov
sbb
mov
lea
fs
cld
test
xchg
imul
movsl
test
add
add
mov
test
mov
insb
cmp
pop
out
cwtl
sahf
inc
mov
popf
lret
xchg
dec
hlt
mov
pop
lret
push
movsb
sbb
mov
arpl
ja
and
cmp
pop
mov
fadds
mov
into
test
jl
jp
jg
push
test
adc
mov
hlt
add
mov
xchg
fbld
ret
inc
add
cs
mov
addb
in
mov
mov
mov
add
ljmp
aam
andl
pop
add
mov
add
adc
rolb
mov
mov
clc
bound
mov
adc
mov
stc
mov
xor
in
mov
enter
pop
push
add
dec
test
push
add
pushl
mov
adc
mov
dec
xchg
dec
nop
add
pop
dec
inc
mov
cli
inc
add
and
mov
or
bound
mov
add
mov
mov
call
add
pop
addb
cmpsl
mov
add
jnp
rol
pop
scas
sti
lret
cmp
push
loope
cmp
addr16
add
mov
das
push
add
sbb
imul
outsl
lret
jbe
inc
add
jae
js
jecxz
jl
inc
mov
add
dec
decl
and
arpl
popa
in
scas
stos
xlat
insl
loope
dec
xlat
sub
cmpsb
test
mov
jge
xor
mov
bound
mov
add
add
push
add
mov
int
movsb
or
jmp
xchg
add
adc
mov
adc
gs
push
aaa
mov
in
rolb
mov
es
cli
out
leave
cltd
fcom
pop
pop
gs
sub
pop
lds
outsb
add
add
and
mov
mov
mov
adc
add
adc
mov
sbb
cmpsb
and
mov
enter
dec
jae
dec
test
sbb
and
mov
test
mov
and
insb
xchg
push
pop
enter
loop
mov
test
rol
add
cmp
add
icebp
clc
imul
add
jmp
clc
mov
nop
add
push
adc
mov
rolb
mov
mov
iret
cli
insl
and
add
dec
inc
xchg
push
add
out
and
add
add
mull
mov
add
mov
mov
mov
pop
mov
add
loopne
mov
add
aas
jmp
adc
mov
ljmp
filds
lods
xchg
mov
mov
and
xlat
rolb
mov
adc
add
mov
idiv
aam
sbb
jo
mov
push
add
add
xchg
add
mov
mov
mov
cld
dec
fmul
cmp
dec
sbb
call
rolb
mov
arpl
add
mov
iret
scas
fimull
insl
mov
cwtl
dec
jb
mov
push
movsl
cmpsl
aas
daa
addb
inc
add
fcomps
roll
push
cli
pop
cmpsb
xchg
inc
dec
cmp
mov
add
inc
add
mov
idivl
push
jne
xor
jno
pop
ficompl
rolb
mov
add
jmp
inc
jmp
in
int3
mov
add
add
fsubp
outsb
enter
mov
movsb
jle
add
cs
popf
addb
cmp
sbb
subl
add
ret
fwait
xchg
leave
xchg
or
lea
aad
scas
lock
xor
mov
mov
loop
mov
popf
push
aam
or
push
xor
fs
fstpt
push
mov
add
inc
cmpsb
rolb
mov
mov
mov
jno
ljmp
pop
cmpsb
in
pop
scas
test
add
cld
mov
jno
mov
inc
push
enter
pop
jmp
test
lret
lret
mov
mov
das
les
pop
repz
mov
in
mov
lea
add
hlt
jl
jl
xchg
fcmovnu
inc
push
or
add
mov
mov
fadds
lret
add
mov
mov
mov
add
pop
cmp
add
add
lods
imul
add
int3
or
imul
dec
push
add
mov
test
mov
fldl
pop
pushf
and
mov
jmp
mov
lods
mov
test
addb
adc
jae
dec
xor
fstpt
fs
add
addb
and
add
test
add
mov
jmp
lret
popf
outsb
pop
div
fidivrs
push
add
pop
out
xlat
movsl
arpl
mov
mov
add
sub
out
icebp
cmp
or
sbb
rolb
mov
add
or
daa
out
jmp
push
pop
inc
push
dec
add
add
cwtl
mov
dec
pop
pop
adc
push
test
jns
jmp
dec
sbb
in
mov
pop
mov
outsb
cmp
add
mov
jmp
fcos
bound
mov
mov
add
mov
mov
add
add
int3
pop
cmp
push
lahf
movsl
sti
sbb
xchg
pop
or
cs
popf
add
loopne
mov
test
stos
adc
sbb
pop
std
leave
aaa
arpl
sub
lods
lds
xchg
in
push
lea
js
jo
mov
scas
cmpsl
rolb
mov
in
lret
rolb
mov
aas
add
xchg
fwait
cld
push
add
lret
sbb
add
xor
dec
push
add
add
mov
mov
rolb
mov
mov
mov
repz
add
sub
push
push
add
stos
ficomps
cmp
or
push
push
add
adc
stos
pop
lea
leave
fucomip
cltd
jl
mov
mov
push
mov
cmpsl
ja
ficompl
test
inc
divl
add
and
add
fisubrl
pop
push
pop
ja
roll
jp
fdiv
xchg
jnp
add
sbb
ret
js
test
mov
mov
mov
arpl
add
jnp
in
fsts
mov
leave
sub
jg
mov
mov
add
outsl
hlt
test
jmp
ret
push
jge
repnz
mov
movsb
mov
mov
cmpsb
loope
stc
adc
mov
add
repnz
sbb
loop
mov
loop
mov
popa
dec
shll
stos
imul
addb
bound
mov
add
jmp
mov
xchg
inc
add
loop
mov
pop
stos
xchg
add
adc
push
add
jmp
int3
sarl
add
lock
add
cmp
push
cmc
out
sbb
mov
mov
add
mov
add
mov
out
out
mov
mov
add
cwtl
pop
lret
pushf
addr16
mov
inc
sar
leave
jle
add
jge
and
dec
mov
dec
push
jno
jno
imul
fwait
outsl
push
repnz
or
or
rcr
mov
jns
inc
push
mov
cmp
add
jne
movsb
pop
sub
and
movsl
ja
nop
add
cmc
je
add
jl
add
mov
data16
add
and
mov
cltd
out
sub
mov
shrl
or
and
add
shr
insl
jnp
add
aaa
lea
sbb
in
lret
rolb
mov
mov
mov
nop
add
push
add
mov
adc
add
push
push
or
ja
dec
lods
test
adc
xchg
mov
push
pop
mov
mov
cltd
test
movsb
pop
pushf
dec
cmp
inc
adc
fdivrs
imul
ja
gs
mov
pop
rolb
mov
pusha
add
mov
xor
mov
jo
mov
out
popa
and
add
xchg
add
and
mov
add
sub
es
iret
in
jns
push
xchg
cmp
cltd
inc
arpl
jo
mov
shll
test
adc
notl
cmp
or
mov
push
sub
psubq
mov
mov
cmp
mov
xchg
mov
mov
je
and
and
mov
pop
or
addr16
mov
mov
mov
pushf
sahf
iret
nop
add
ljmp
fildl
add
fadds
adc
add
xchg
add
daa
or
add
add
roll
lcall
mov
mov
mov
inc
add
in
jns
lods
push
mov
sbb
loopne
mov
jae
add
or
mov
sub
fdivr
sarl
aam
dec
add
test
mov
add
stos
cmp
mov
loopne
mov
xor
mov
imul
add
add
add
mov
mov
or
mov
add
sbb
pop
mov
repz
out
add
mov
mov
fsubs
add
sub
outsl
pop
repnz
mov
aad
cli
sub
xchg
les
jle
scas
popa
jg
outsl
push
mov
inc
add
aas
mov
add
mov
lods
iret
arpl
loop
mov
decl
roll
popa
arpl
lret
jnp
add
outsl
test
add
add
mov
or
push
pop
loopne
mov
icebp
jl
in
stc
jnp
add
add
clc
or
ficomps
rolb
mov
sub
mov
dec
cld
ds
imul
test
dec
dec
sbb
mov
mov
lcall
adc
pop
push
mov
sub
bound
mov
add
addb
clc
fxtract
push
add
mov
jg
add
repnz
add
fnsave
stos
sbb
or
push
enter
push
add
mov
and
in
mov
push
add
cld
clc
dec
scas
jbe
fwait
mov
mov
in
sbb
mov
mov
lcall
xchg
imulb
mov
in
das
mov
and
xchg
mov
sub
call
add
add
add
mov
add
ja
cmp
dec
mov
mov
mov
mov
push
xor
mov
mov
mov
mov
cltd
inc
cs
xor
mov
scas
imul
add
fcompl
add
adc
mov
addb
dec
int
aaa
dec
nop
add
and
mov
jbe
add
add
jp
add
pop
sub
rolb
mov
push
fs
leave
fmul
test
mov
inc
add
mov
pushl
add
lret
jg
jg
add
add
and
mov
adc
mov
add
out
add
mov
cmpsb
sub
mov
rolb
mov
mov
add
cmpsl
xor
mov
add
cmpsl
jecxz
jno
inc
adc
mov
out
push
add
sbb
lods
push
sub
sti
int3
loopne
mov
les
sub
popa
jg
push
xchg
lcall
je
mov
dec
inc
add
mov
jmp
mov
cmp
and
mov
pop
addb
test
sbb
ljmp
fiaddl
xchg
dec
fcomps
push
sub
xor
mov
mov
dec
fldl
imul
and
mov
out
adc
mov
push
popf
out
mov
add
push
orl
jp
mov
mov
adc
sub
mov
xor
mov
xchg
lods
subl
and
mov
lds
loopne
mov
sub
add
or
fstl
mov
adc
pop
out
out
adc
inc
cmp
sbb
loopne
mov
hlt
test
in
sbb
mov
repnz
mov
and
mov
jmp
enter
pop
mov
mov
pushl
jo
mov
sbb
sbb
stos
pop
xor
mov
sbb
pop
pushf
dec
rolb
mov
or
add
mov
dec
imul
iret
fnstcw
add
hlt
aaa
rolb
mov
add
das
mov
mov
cmp
push
inc
add
sub
add
mov
jmp
xor
mov
cmp
int3
ljmp
sbb
mov
add
loop
mov
lcall
cs
xchg
dec
mov
xor
mov
bound
mov
aaa
fcompp
mov
decb
adc
inc
add
mov
mov
mov
add
add
in
leave
add
mov
rcl
xor
mov
push
add
into
inc
mov
mov
add
mov
mov
ret
cmp
in
xchg
popf
and
mov
out
push
jae
add
add
mov
add
add
daa
and
mov
mov
pop
push
rcr
xchg
xchg
cmpsl
push
sub
repz
ret
mov
cmc
mov
in
pop
loope
les
sub
repz
sub
and
mov
add
inc
jmp
mov
imul
call
jne
call
push
insl
imul
dec
lods
ds
add
loop
mov
push
pop
popf
mov
call
stos
mov
scas
bound
mov
mov
sub
and
das
push
adc
and
jg
push
dec
jecxz
add
sub
pop
aad
push
fnstenv
add
std
sbb
pop
xor
pop
icebp
lods
mov
xchg
inc
sub
mov
mov
mov
sbb
xchg
add
mov
aaa
je
addb
push
or
add
add
pushf
les
ss
add
sub
cli
adc
mov
sbb
stc
mov
cltd
cwtl
loope
add
sahf
pop
ret
sbb
mov
mov
scas
adc
mov
push
add
idivb
jl
add
enter
std
stos
iret
lods
sbb
add
add
mov
mov
dec
add
mov
sub
nop
add
add
cli
sbb
scas
and
mov
je
or
frstor
add
add
scas
negl
enter
cmp
push
inc
in
sbb
add
aam
xor
mov
fwait
sti
out
push
cmpsb
sub
mov
stos
imul
ret
movl
out
mov
je
sahf
scas
pop
jbe
push
pop
pop
into
add
pop
push
push
jne
movsb
ret
or
bound
mov
inc
cmp
mov
add
ret
in
popa
fistpll
or
jno
dec
add
mov
imul
movswl
add
mov
movsl
fistl
add
mov
mov
int3
or
add
mov
add
fldl
js
add
push
add
cmc
fsub
add
add
pop
fwait
icebp
pop
shll
xchg
mov
xor
scas
das
mov
jno
add
mov
loope
inc
out
mov
roll
or
cs
loope
sar
lock
je
push
cmpsl
pop
out
or
mov
or
jmp
js
push
sbb
jo
mov
repz
mov
mov
xor
add
insb
subl
scas
outsb
dec
das
and
mov
nop
add
ja
loope
add
popa
lret
insb
out
add
mov
dec
add
mov
mov
sahf
mov
mov
xor
std
mov
add
addb
lds
xlat
int3
ja
enter
add
add
in
into
fdivl
mov
lret
mov
adc
lea
add
add
mov
pop
mulb
add
imul
add
mov
or
outsl
jge
imul
mov
add
mov
mov
pop
dec
loopne
mov
xchg
les
add
and
add
jmp
addb
pop
rolb
movsb
mov
add
test
lret
insl
xor
jbe
out
imull
jo
mov
xchg
add
mov
mov
pop
lret
mov
xor
mov
adc
mov
add
mov
daa
gs
div
inc
or
jle
stos
jo
mov
xor
add
mov
and
mov
rolb
mov
pop
xchg
add
lock
jno
jmp
push
mov
roll
out
outsb
pop
cs
sub
js
rolb
mov
xor
add
dec
xor
mov
insb
ret
fistpl
out
in
mov
sbb
adc
or
in
jb
mov
adc
mov
push
mov
ja
mov
rolb
mov
xor
imul
rorl
adc
mov
fstpt
push
repz
pop
and
sti
mov
scas
rcrl
add
mov
mov
add
xchg
cmp
not
in
pop
fsts
xchg
inc
out
loopne
mov
mov
adc
push
movsl
ret
add
mov
jb
mov
or
shll
add
lret
pop
add
das
cmp
cld
push
in
xchg
fisttpll
add
dec
cmp
or
mov
inc
sbb
add
mov
jge
xor
add
mov
mov
add
dec
cmp
pmaxsw
dec
cmpsl
cmpsb
fs
add
mov
add
test
into
icebp
adc
mov
pop
aad
push
mov
mov
mov
add
mov
cli
push
rol
add
imul
mov
arpl
fiaddl
jp
jg
clc
mov
jp
es
add
in
push
inc
insl
rolb
sub
adc
mov
add
dec
ffreep
add
loop
mov
inc
add
add
clc
jl
pop
cmpsl
scas
ret
addb
push
xchg
testl
mov
pop
repnz
lock
gs
add
lcall
mov
lock
cwtl
add
ja
add
sahf
mov
cld
push
add
sarl
out
sub
jle
cs
iret
xchg
outsb
mulb
add
push
outsb
push
mov
mov
mov
and
shrl
pop
mov
loopne
mov
insl
pushf
rorl
add
add
mov
shll
xor
mov
mov
add
pop
cmpsl
mov
mov
mov
lret
jo
mov
rcrl
inc
cmpsb
jae
mov
adc
sub
rolb
add
lret
movsb
hlt
loopne
mov
adc
xor
addr16
out
jns
mov
xchg
dec
lret
rol
add
loopne
mov
jle
int3
cmc
clc
xchg
cmp
mov
ficoms
hlt
mov
mov
movb
or
ret
nop
add
add
add
cmovp
and
mov
test
int3
mov
mov
jne
mov
mov
and
add
cwtl
mov
mov
mov
stc
sti
mov
repz
imul
jmp
cmp
repz
pop
sub
pop
cltd
xchg
push
repnz
std
jnp
add
cmpsb
pushf
mov
gs
sub
xor
mov
cmp
ret
adc
movsb
sbb
and
add
mov
stos
sbb
aam
mov
add
xchg
mov
xor
mov
mov
repnz
ds
movsb
in
mov
adc
push
ret
fs
jo
mov
add
add
ret
ljmp
adc
add
push
sbb
pop
mov
add
dec
lock
outsl
xor
mov
sbb
scas
jmp
fwait
mov
iret
xor
xchg
ds
out
inc
adc
cld
mov
mov
inc
mov
aad
icebp
and
mov
add
sbb
add
add
push
push
cli
rorl
mov
adc
mov
jb
mov
fcompl
push
add
add
bound
mov
push
pusha
add
dec
push
pop
adc
mov
cmp
add
mov
outsb
pop
test
stos
cmp
mov
aas
bound
mov
std
cmpsb
loopne
mov
mov
ret
inc
mov
mov
add
fwait
js
lods
mov
inc
jne
mov
sbb
sbb
gs
jl
jmp
lcall
and
mov
ficomps
add
push
mov
mov
loopne
mov
mov
mul
xchg
xchg
sub
dec
xchg
push
pop
mov
jl
add
add
mov
add
mov
sahf
movsl
cmp
mov
scas
adc
imul
enter
push
in
jg
dec
inc
add
jae
popa
or
test
ljmp
or
add
xchg
add
mov
add
out
testl
xchg
repnz
xchg
movsb
ret
mov
add
out
insl
adc
xlat
sbbl
add
std
arpl
mov
addb
movsl
test
inc
mov
dec
daa
push
das
popf
xchg
fsubr
mov
daa
and
mov
in
int
sub
jmp
lcall
add
add
in
xchg
lret
add
mov
cmp
xor
mov
scas
mov
or
xor
insl
clc
jno
scas
enter
xor
mov
inc
add
and
js
test
push
push
add
lret
adc
add
mov
mov
mov
sahf
mov
mov
fwait
jle
int
cli
fsubrp
pop
ljmp
or
mov
test
std
test
add
inc
add
xor
lock
sahf
push
jl
movsb
je
dec
addb
push
pop
xor
add
ljmp
dec
rolb
mov
push
test
sbb
mov
push
test
push
xor
inc
sub
adc
and
xor
mov
sub
pop
pop
push
inc
push
add
inc
pop
or
add
mov
jb
mov
bound
mov
and
clc
xchg
add
or
pop
into
push
dec
add
and
add
addb
cwtl
and
add
mov
test
mov
lahf
xchg
add
sub
sahf
in
or
jns
lea
jge
movsl
clc
fmull
pop
push
rorl
into
and
mov
sub
add
xchg
xchg
movsl
icebp
inc
addr16
jmp
loope
es
leave
movsb
icebp
cmp
push
mov
mov
cmp
out
enter
mov
add
mul
add
lret
loop
mov
add
icebp
iret
ss
hlt
jmp
sub
sahf
mov
les
sub
mull
das
dec
cmpl
jns
sub
push
pop
cli
jl
xchg
xchg
bound
mov
cmp
add
jmp
js
orl
pushf
imul
pop
sub
out
int
mov
es
add
cmpsb
fdivl
pop
pop
mov
mov
iret
lods
sbb
push
movsb
fwait
pop
rolb
mov
jmp
sub
cmpsl
aad
mov
mov
mov
mov
in
cmp
sbb
add
aas
adc
rorl
rolb
push
les
mov
add
leave
data16
testl
mov
mov
dec
push
xor
mov
or
dec
jmp
mov
mov
je
and
movsb
mov
dec
int
xchg
out
loopne
mov
xchg
dec
push
cmpsb
fistpll
aaa
pop
pop
in
adc
mov
scas
shrl
mov
add
add
cltd
xchg
dec
adc
loope
xchg
fildl
icebp
sbb
fwait
inc
add
cmp
pop
das
and
test
divb
adc
mov
mov
add
and
loop
mov
rolb
mov
xlat
outsb
add
sbb
les
lret
cmp
icebp
cltd
pause
add
into
testl
pop
aas
fildl
mov
xor
adc
add
scas
add
or
xchg
lock
dec
cmc
xor
mov
add
rolb
mov
add
add
leave
cli
or
filds
mov
lock
add
adc
sahf
lcall
inc
fwait
addb
in
add
mov
or
sub
cs
call
ficomps
mov
dec
iret
jmp
mov
bound
mov
xor
lock
push
insb
movsb
push
cmp
jp
or
add
adc
mov
int
add
mov
aad
add
mov
inc
ficomps
pop
aad
test
or
and
mov
inc
add
mov
xchg
sbb
add
add
mov
add
lcall
pusha
add
nop
add
test
aaa
mov
add
mov
gs
xlat
pop
mov
push
add
mov
hlt
pop
nop
add
add
fs
test
pop
fidivl
and
mov
pop
cmp
mov
sahf
daa
xrelease
mov
fldenv
mov
mov
les
add
add
lret
mov
dec
xor
mov
or
jl
sbb
push
not
lods
sbb
ss
add
insl
inc
add
cli
lock
popa
iret
scas
cmp
das
inc
jecxz
dec
add
mov
add
adc
mov
add
es
add
popf
pop
sbb
cmp
add
add
mov
pop
dec
dec
fwait
sbb
or
mov
add
int
or
jno
or
repnz
inc
add
out
bound
mov
rol
add
xchg
add
mov
jne
sub
xor
mov
mov
add
cmp
imul
ds
stc
clc
push
lods
ds
in
mov
lgs
add
xchg
lea
mov
into
addb
cmc
enter
mov
out
cmpsl
sub
stos
cmp
or
add
add
adc
mov
add
mov
rolb
mov
ret
jle
add
dec
sbb
sbb
mov
push
inc
add
sbb
fldt
cmp
fistpll
pop
pop
push
jmp
test
or
jae
cmp
add
mov
movl
mov
jae
test
cmp
lds
mov
sub
js
movsl
xor
mov
mov
sub
aaa
push
js
jge
add
pop
mov
mov
or
add
add
add
cmp
mov
or
insb
hlt
test
adc
sbb
mov
add
hlt
inc
arpl
xor
mov
mov
shrl
xchg
add
and
mov
ds
xchg
pop
jo
mov
imul
ja
dec
addr16
fisubl
mov
and
movsb
mov
xlat
cwtl
pop
cli
icebp
aam
pop
jno
add
xchg
movsl
push
je
or
lods
ret
dec
jnp
or
inc
out
into
fcoml
xor
mov
lds
add
out
sbb
fidivrl
inc
test
jns
icebp
loop
mov
mov
rolb
mov
add
mov
pusha
add
jmp
aaa
jne
push
xchg
add
outsb
int3
mov
jne
jle
or
add
jo
mov
fistpl
repz
or
aam
jle
xchg
fwait
popa
fsubl
aas
push
jae
fimull
xor
std
xchg
add
fadds
sub
sbb
sub
mov
jno
pop
mov
ret
lret
fisubrl
dec
lcall
xchg
iret
add
leave
lock
pop
pop
adc
push
lret
push
pop
jnp
mov
push
push
mov
add
add
mov
jbe
rolb
movsb
push
mov
add
add
mov
aam
push
pop
cli
mov
in
fnstcw
popf
cmc
repz
adc
add
lock
mov
movsl
lock
add
pushf
in
add
scas
sti
mov
das
rolb
mov
push
mov
pop
jb
mov
add
pop
dec
mov
mov
add
mov
pop
xor
mov
out
pop
test
add
mov
pop
addr16
inc
push
hlt
pop
std
pop
sbb
add
or
mov
out
xchg
sub
jecxz
xchg
lahf
leave
insl
scas
dec
insl
fidivrl
int3
add
add
call
add
out
dec
pop
popf
cmpsb
repnz
add
add
mov
dec
leave
jp
push
lea
mov
jl
cld
sahf
push
je
xor
je
add
add
add
int
add
addb
push
xor
push
add
push
add
add
adc
mov
dec
xor
mov
or
jo
mov
in
add
and
lahf
sbb
pop
rcrl
add
popa
sti
frstor
add
xchg
fs
mov
or
xchg
add
dec
test
and
mov
test
or
push
aam
icebp
pop
pop
mov
xchg
std
jge
das
jg
add
mov
cs
add
add
mov
sbb
pop
jne
adc
outsb
ret
mov
inc
nop
add
xchg
jge
scas
pop
jge
dec
cmp
add
mov
data16
bound
mov
shll
scas
xor
add
addr16
cmpl
add
pop
or
nop
add
cmpsb
jmp
add
mov
add
mov
add
mov
mov
xchg
dec
cmp
insb
stos
in
jno
jns
sub
sbb
adc
cmp
stc
enter
mov
rolb
dec
xlat
jnp
mov
mov
mov
adc
mov
stc
pop
push
imul
mov
iret
xchg
adc
insl
and
mov
xchg
add
lock
loop
mov
xchg
add
adc
inc
cmp
inc
add
pop
inc
push
sub
mov
data16
push
add
xchg
das
jne
mov
or
ss
mov
add
mov
fsubrs
mov
sub
hlt
dec
sarl
add
sar
sub
jl
inc
dec
jl
or
push
enter
mov
mov
add
in
xlat
push
jne
cmp
mov
mov
mov
scas
fldenv
add
das
adc
mov
lods
jo,pt
mov
dec
in
mov
mov
pusha
add
js
lret
faddp
mov
cmp
and
mov
icebp
gs
rcrl
in
es
out
popf
out
push
pusha
add
scas
imul
cld
jbe
jp
add
cmp
add
jne
mov
adc
mov
add
cwtl
mulb
or
sbb
xor
xchg
xchg
add
pop
aas
jmp
sti
or
inc
lret
ret
mov
lds
sbb
iret
add
add
add
dec
cmc
lods
mov
mov
leave
sub
adc
mov
inc
loopne
mov
movsl
in
jmp
xor
mov
notb
mov
add
cmp
repz
xor
mov
inc
add
cmp
add
stc
ss
adc
push
iret
lds
in
or
mov
rolb
mov
mov
outsb
dec
push
aaa
int3
mov
add
or
fldcw
dec
iret
cltd
cmp
sbb
mov
arpl
add
add
xor
mov
or
mov
pop
sub
popa
and
setne
inc
das
push
mov
mov
sbb
add
mov
add
jg
jo
mov
cmp
fwait
inc
leave
xor
outsl
mov
add
int3
aas
aaa
jl
out
mov
jnp
push
repz
mov
adc
movsb
adc
out
jp
aad
add
mov
add
test
ret
mov
mov
xchg
sub
xor
mov
sub
adc
mov
add
lcall
sbb
adc
jle
mov
outsb
mov
mov
jmp
pop
inc
bound
mov
movl
fcomps
cld
cmp
add
adc
mov
add
mov
stos
addb
das
iret
ret
jbe
insb
adc
dec
xor
mov
test
add
bound
mov
add
mov
cmp
and
add
mov
add
jno
sub
push
mov
ljmp
jae
sbb
sbb
jo
mov
mov
pushf
add
es
adc
mov
mov
or
lret
add
pop
push
lahf
ss
jg
inc
add
mov
notl
mov
mov
aad
insb
mov
sub
lods
push
dec
scas
fs
add
inc
add
push
sbbl
pop
rolb
mov
and
mov
loopne
mov
add
mov
mov
mov
int3
push
pop
push
rcl
hlt
xor
add
scas
xorl
inc
inc
ret
ljmp
and
xor
push
add
inc
in
push
add
jae
cmp
jnp
push
adc
mov
lahf
out
clc
push
or
mov
cmc
or
mov
stos
repz
rolb
mov
push
inc
mov
sarl
push
push
sbb
mov
mov
lahf
cmp
xchg
jnp
push
arpl
xchg
rolb
in
inc
xchg
je
pop
inc
popa
add
add
mov
push
push
sti
gs
push
loope
repnz
jecxz
add
lods
add
mov
cld
mov
cld
sbb
insl
inc
movsb
mov
movups
mov
xchg
cmpsb
mov
xchg
dec
sbb
add
mov
mov
pop
xchg
adc
mov
jae
icebp
lret
add
sub
xor
mov
pop
insb
test
push
add
inc
sub
adc
mov
test
mov
mov
stos
cli
push
notl
fldenv
mov
xchg
or
mov
loopne
mov
jae
mov
jmp
and
ret
loope
add
movsl
xchg
outsl
cmp
and
sti
or
adc
lock
add
cmp
mov
add
add
mov
inc
pop
xchg
out
fcoml
bound
mov
push
add
addb
add
cwtl
mov
mov
sbb
mov
jp
cli
in
ficoms
int
pop
movsl
pop
pop
cwtl
push
pushf
jo
mov
dec
jge
inc
add
add
dec
in
imul
add
push
mov
mov
out
and
mov
add
loop
mov
rcrl
add
lahf
jmp
out
pop
cwtl
es
add
data16
pushf
rolb
addb
cs
sbb
xor
jno
push
jle
add
jne
test
iret
adc
inc
jecxz
mov
jne
test
mov
addb
repnz
dec
dec
jns
push
incb
mov
or
jno
jg
mov
inc
cmp
add
lret
push
lods
xchg
nop
add
mov
icebp
sbb
mov
xor
add
in
stos
ret
nop
add
inc
add
stos
push
in
out
add
mov
shll
mov
mov
lahf
sub
sub
insl
aam
fldcw
mov
pop
dec
aad
add
mov
xchg
adc
jae
dec
cmpsl
js
scas
or
in
jecxz
fsub
jns
mov
nop
add
jp
cmp
popa
mov
mov
mov
mov
sbb
push
inc
pop
push
jae
in
aad
pusha
add
inc
loopne
mov
imul
in
out
add
cmpsb
cs
add
loopne
mov
dec
inc
iret
lcall
cmp
mull
adc
cmc
je
inc
rolb
mov
mov
mov
in
jnp
cmpsl
sub
add
push
add
add
adc
mov
cmp
ficomps
inc
add
adc
and
mov
mov
popa
cmp
mov
add
cmp
mov
nop
add
aaa
dec
push
pop
pushf
lret
xchg
pop
lods
arpl
xor
inc
pop
add
mov
pop
outsl
test
adc
mov
add
add
push
xor
add
mov
lods
mov
mov
xor
add
lahf
or
add
mov
test
mov
mov
mov
cmp
dec
adc
mov
ret
cmpsb
mov
mov
add
js
xor
push
shl
xlat
pop
and
mov
mov
cmp
add
push
les
jo
mov
mov
sbb
mov
mov
pop
std
xchg
rolb
mov
and
mov
mov
adc
mov
lods
add
mov
sbb
mov
xchg
xchg
xchg
add
bound
mov
or
mov
dec
fstpl
loopne
mov
push
in
adc
mov
aad
add
cmp
mov
jecxz
mov
sti
xor
aas
js
add
dec
mov
into
scas
pushf
cmp
add
mov
xor
mov
dec
xchg
ret
out
rolb
mov
mov
mov
rolb
mov
push
dec
sbb
cltd
sub
inc
dec
scas
jg
icebp
ja
xchg
mov
iret
xor
subl
mov
mov
dec
jne
mov
xchg
jle
adc
xchg
hlt
jecxz
into
dec
icebp
xchg
mov
add
sbb
jle
ss
push
xchg
mov
push
cld
xor
sbb
daa
mov
and
mov
mov
add
mov
test
jp
mov
repnz
add
out
dec
rolb
mov
cmp
mov
mov
xor
das
fadd
ljmp
mov
jl
int3
lods
aad
xchg
add
imul
movsl
mov
dec
cmpsl
sub
lea
ficomps
sbb
ss
push
stos
gs
add
mov
jae
add
out
movntq
inc
jbe
aas
mov
dec
inc
add
inc
add
mov
paddsw
ds
lret
stos
nop
add
iret
bound
mov
push
push
cmp
cld
push
inc
cmp
mov
dec
sbb
xchg
lret
sub
gs
insb
pop
or
add
aaa
dec
pop
ret
lahf
pushf
les
add
arpl
or
add
add
rolb
mov
add
sub
addb
hlt
or
add
mov
sahf
add
add
sub
into
pushf
insl
mov
mov
gs
test
mov
add
jl
add
mov
mov
xchg
int3
mov
cltd
cmp
loopne
mov
dec
test
mov
sub
shrl
cs
int3
stc
mov
xor
xchg
lret
mov
gs
add
dec
mov
mov
mov
std
xchg
jae
scas
ljmp
movsl
pop
clc
mov
add
mov
push
add
leave
mov
mov
jp
daa
and
mov
dec
mov
mov
fiadds
mov
add
mov
add
mov
mov
in
aaa
xor
imul
and
sub
add
scas
in
sub
aam
es
inc
mov
adc
jecxz
fidivrl
fcos
aam
in
stos
stos
ljmp
add
mov
loopne
mov
pop
jno
leave
scas
jno
repz
repnz
mov
mov
les
and
mov
sbb
add
mov
sub
mov
ret
sub
mov
add
loopne
mov
sbb
orl
mov
mov
test
cmp
mov
mov
in
popf
ret
add
jb
mov
add
mov
mov
arpl
sub
lret
rolb
mov
mov
dec
cs
xchg
jae
outsb
push
add
add
sti
repnz
push
dec
scas
mov
hlt
xor
mov
mov
test
mov
mov
scas
dec
sub
nop
add
or
cwtl
roll
and
fimull
inc
add
stos
pop
add
fsubs
fcmovbe
lds
adcl
sub
add
add
add
dec
adc
mov
mov
out
shr
push
add
movsb
mov
mov
arpl
lcall
mov
enter
add
push
inc
bound
mov
jbe
pop
rolb
mov
in
sub
add
push
sub
repnz
mov
mov
mov
mov
sahf
xor
sbb
add
mul
cli
mov
cmp
and
push
add
sub
loopne
mov
add
xor
mov
clc
push
push
fs
pop
cmp
add
std
call
push
sahf
inc
or
stos
sub
sbb
jbe
lcall
ret
inc
out
inc
add
push
and
sti
ljmp
push
adc
mov
push
pop
mov
dec
orl
sti
insb
xchg
fidivrs
mov
js
or
xchg
cwtl
cmp
push
push
adc
and
mov
data16
mov
jne
cmp
lcall
das
lahf
xor
jl
cmp
sub
jne
adc
inc
add
int
pop
stc
ds
mov
mov
mov
add
lods
add
add
scas
repz
xchg
jmp
movsl
pop
cmp
icebp
cmp
xchg
repnz
jns
sub
mov
fsubrp
pop
push
add
add
test
adc
mov
in
add
mov
pop
and
cs
jmp
inc
add
pop
and
add
mov
add
mov
in
mov
fisubl
std
cs
mov
add
dec
js
rolb
push
inc
mov
inc
xchg
or
pop
call
adc
mov
mov
movsb
adc
or
add
mov
inc
xchg
out
jl
mov
pop
iret
pop
in
bound
mov
add
dec
or
ret
push
or
int
mov
mov
jo
mov
rolb
mov
inc
gs
add
and
test
sub
jb
mov
dec
mov
sti
lcall
push
jp
test
xchg
add
add
add
iret
ret
outsl
add
mov
mov
pop
inc
add
mov
cmp
dec
scas
mov
pop
mov
ja
nop
add
cmp
push
sub
sbb
mov
test
mov
pop
fldt
dec
rcl
or
add
mov
pop
cmp
aaa
xor
mov
mov
iret
into
inc
lods
mov
test
sbb
mov
pushf
jmp
mov
jl
pushf
ret
pop
les
mov
add
push
add
dec
xchg
mov
inc
add
xor
jmp
xlat
cmp
scas
pop
stc
xor
pop
aaa
jecxz
pop
aam
add
call
add
mov
xchg
lds
mov
jle
or
scas
cltd
mov
or
xchg
add
stos
mov
add
inc
out
std
pop
test
push
aaa
cltd
jle
scas
ljmp
push
cmp
sbb
inc
mov
fs
cmp
pop
cld
mov
test
fcmovne
sub
inc
mov
lock
push
test
mov
push
inc
add
mov
sub
int3
cmp
mov
push
and
and
mov
push
xchg
adc
dec
jg
inc
push
add
mov
add
mov
mov
fsubs
push
push
inc
daa
fstpl
test
pop
xor
mov
das
jmp
aad
mov
mov
add
lods
clc
pushf
mov
mov
loop
mov
add
data16
and
push
add
pop
scas
sbb
mov
je
push
add
fidivrl
mov
dec
insb
jl
add
add
mov
mov
add
sbb
xchg
inc
lea
add
jns
jb
mov
xchg
inc
xlat
add
roll
and
loopne
mov
repz
mov
movsl
movsb
xchg
add
mov
push
add
mov
mov
mov
call
mov
add
inc
testb
jecxz
push
out
nop
add
mov
dec
xor
add
rcll
popf
cmpsb
sahf
xor
mov
jmp
add
pop
lods
out
rolb
mov
push
jno
jmp
ret
testb
ja
loop
mov
mov
fldenv
cli
scas
insb
push
js
inc
add
enter
dec
ficoml
imul
add
push
lret
xchg
into
xchg
inc
xchg
lods
int
inc
rolb
mov
push
icebp
addr16
clc
adc
jne
cmc
dec
mov
mov
add
push
addr16
add
add
push
xchg
mov
sahf
xor
dec
dec
mov
stos
cli
aas
outsl
mov
fnsave
fmul
sti
add
cmp
decb
cwtl
jg
lds
outsl
enter
loop
mov
stos
sub
mov
imul
jl
neg
mov
xor
mov
std
call
and
and
out
mov
sbb
cmpsb
cs
jbe
xor
mov
adc
mov
add
jns
ss
inc
movsb
xor
mov
add
cmp
loope
jle
add
jmp
je
pop
xchg
das
and
mov
add
test
cmpsb
pop
jnp
popa
xor
mov
jne
adc
or
mov
mov
jmp
imul
mov
xchg
add
into
sub
mov
ja
add
adc
push
je
cmc
iret
xchg
add
add
cmp
insb
push
incb
xchg
inc
ja
jns
add
add
add
xchg
add
pop
scas
xchg
je
call
bound
mov
add
jg
dec
or
mov
mov
insb
sti
jg
mov
mov
add
mov
cwtl
aaa
pop
adc
mov
fwait
setbe
out
pop
mov
sub
and
mov
add
insb
xlat
pop
add
mov
pop
addb
adc
mov
sub
addr16
sti
rolb
mov
jbe
mov
add
jg
mov
cmp
add
mov
adc
imul
sbb
stos
sub
dec
mov
sbb
inc
test
adc
mov
mov
stos
mov
push
out
mov
push
xor
imul
xchg
mov
and
pop
pop
lods
adc
mov
jo
mov
inc
push
sbb
stos
xchg
out
mov
js
lods
int
hlt
aam
sub
push
lods
icebp
imul
xor
add
mov
sub
add
cmpsb
xchg
add
call
inc
popf
mov
jmp
or
cld
pop
fldcw
inc
inc
xchg
or
pop
jo
mov
add
push
add
add
cli
fwait
mov
out
in
lea
sub
sub
add
cmp
xchg
lcall
push
dec
ja
sub
in
push
jg
outsl
sub
add
mov
pop
push
lahf
rolb
mov
es
mov
out
mov
mov
lcall
add
push
and
add
pop
jl
or
sub
lods
outsl
imul
data16
popa
xchg
cwtl
ds
stc
into
add
xchg
jge
loope
jnp
arpl
dec
fcomp
add
mov
pop
nop
add
fs
dec
pop
mov
mull
add
sbb
add
aas
lret
or
add
add
faddp
add
mov
pop
leave
fs
daa
das
pop
dec
clc
xchg
outsb
xchg
add
add
fdivp
repz
jmp
xchg
and
mov
divb
jge
test
add
xor
jmp
js
add
mov
addb
fidivrs
loopne
mov
loope
inc
mov
iret
sub
addb
mov
stos
ds
push
mov
and
mov
adc
fidivrs
or
sbb
or
or
add
cmp
pcmpgtw
add
cld
test
or
xchg
or
dec
aam
dec
add
loopne
mov
roll
xchg
andl
in
ja
xor
lret
pop
xchg
add
jno
push
rolb
mov
jne
sub
push
push
daa
dec
loopne
mov
inc
add
push
add
sbb
mov
add
jp
mov
fistpll
aaa
push
add
add
dec
out
and
and
push
adc
mov
add
mov
jne
cmp
adc
mov
hlt
les
nop
add
add
add
mov
insb
sahf
add
mov
add
sahf
rolb
mov
add
mov
sahf
sbb
outsb
dec
jo
mov
mov
cltd
test
nop
add
jecxz
jo,pn
mov
bound
mov
addb
fdivl
add
pop
sbb
add
push
sub
outsl
addb
inc
add
mov
mov
lods
frstor
mov
in
mov
aad
xchg
add
rolb
mov
outsb
in
rolb
pushf
mov
add
add
sub
mov
add
inc
cmpsl
out
pop
sbb
pop
inc
pop
pop
ja
dec
movsb
mov
add
mov
inc
fistpl
mov
or
cmc
pop
and
lcall
mov
mov
xchg
mov
add
mov
add
add
mov
imul
je
or
sbb
scas
mov
jns
pop
mov
mov
int
dec
adc
mov
add
dec
xor
add
movsl
into
addb
add
jmp
pop
jmp
ss
pop
mov
rolb
mov
inc
add
adc
mov
sbb
lock
push
dec
jp
add
mov
imul
xchg
cmp
add
arpl
mov
pop
cld
add
add
add
out
mov
adc
add
mov
cmc
jns
mov
or
mov
add
in
add
idivb
inc
stos
lods
es
insl
loope
popf
mov
mov
cmp
push
stos
mov
push
add
mov
mov
dec
pop
int
push
jp
jbe
add
out
mov
dec
sarl
mov
or
jae
push
add
out
ret
sub
lock
test
jmp
add
sub
push
mov
adc
mov
rcr
in
dec
mov
shll
mov
mov
insl
or
add
mov
lds
fdivrs
lods
clc
stc
testb
xor
mov
add
adc
outsb
cmp
insl
lds
mov
lcall
sbb
stos
mov
cwtl
cli
data16
xchg
movb
mov
mov
sub
movsl
add
mov
xor
cmpl
mov
jecxz
add
shr
sbb
mov
mov
xor
mov
jmp
addb
xchg
add
pop
icebp
xor
mov
xor
mov
lds
out
xor
add
ljmp
mov
out
flds
push
add
add
push
ljmp
mov
sub
pop
mov
pop
or
dec
loopne
mov
mov
add
negb
add
sub
push
inc
mov
mov
add
xchg
cld
mov
dec
ja
add
jbe
sahf
lahf
mov
mov
add
fistps
and
mov
xchg
push
call
mov
clc
dec
outsb
xchg
xchg
and
test
mov
mov
add
dec
rolb
mov
add
mov
outsb
sbb
ja
pop
jp
mov
out
insl
cmp
lret
add
popa
popf
clc
roll
test
pop
addr16
adc
cltd
mov
incl
cmpsl
dec
pop
push
fnstcw
loope
in
or
call
call
out
mov
sbbl
fidivrl
in
sub
clc
jmp
addb
jp
sub
mov
inc
es
add
cs
adc
mov
movsl
je
test
int
in
mov
sub
ljmp
or
pusha
add
or
dec
mov
add
daa
or
adc
addl
mov
in
push
lret
mov
test
add
ret
adc
dec
out
xchg
dec
add
mov
fiadds
aad
fwait
test
mov
hlt
int
add
or
leave
xchg
iret
cli
xchg
lret
lea
mov
mov
mov
mov
jo
mov
flds
xor
fidivrs
cmpsb
addb
jmp
adc
cmp
pop
xchg
or
les
pop
imul
jo
mov
rolb
and
mov
mov
add
add
mov
add
lods
cmp
push
frstor
mov
mov
rorl
push
ljmp
mov
mov
lea
lret
stc
add
mov
sbb
into
dec
push
push
add
ljmp
mov
add
jno
fsub
sbb
mov
mov
mov
inc
nop
add
xor
mov
rolb
mov
sub
mov
add
ljmp
lods
jno
add
jg
std
in
add
or
push
pop
daa
sbb
sar
xchg
jnp
pop
sbb
sti
or
cltd
fcmovne
xor
or
push
add
dec
sarl
jle
sbb
mov
mov
mov
ljmp
add
insl
or
incl
add
mov
add
push
add
dec
mov
push
lahf
ret
lahf
sbb
mov
mov
aaa
mov
mov
pop
add
sbb
in
pop
xor
pop
in
int3
flds
mov
lcall
sub
sub
push
add
push
cmp
jg
pushf
nop
add
iret
cmpsb
cmp
outsl
rolb
mov
pop
in
mov
and
lods
xor
add
cmpsb
ds
pusha
add
mov
stos
pop
daa
sub
dec
cld
and
jge
aam
cltd
xor
insb
decl
test
in
add
mov
dec
in
fstps
movsl
jnp
mov
push
adc
mov
test
push
mov
mov
add
mov
addr16
mov
xor
adc
adc
mov
mov
pop
ret
vxorps
add
sti
mov
lea
push
into
bound
mov
add
cmp
mov
mov
jmp
addr16
je
int
mov
dec
divb
fisttpl
add
pop
adc
inc
add
mov
icebp
sbb
pop
sub
push
jne
rolb
mov
add
add
xchg
repz
mov
leave
les
xchg
test
push
pop
xchg
jp
adc
xor
mov
cltd
pxor
call
lock
js
add
mov
fcomip
add
jp
mov
inc
push
add
insb
adc
mov
or
mov
outsb
mov
cmp
cld
out
add
test
fisubl
adc
mov
mov
dec
push
sub
add
mov
adc
mov
add
sar
andl
or
jmp
outsl
loop
mov
add
insl
mov
jne
pop
xor
mov
mov
mov
addb
mov
dec
mov
dec
ds
dec
cmpl
jmp
je
inc
mov
mov
mov
into
mov
jbe
sbb
and
add
sub
mov
iret
dec
sbb
add
add
popf
fcomp
mov
add
pop
jl
jl
mov
test
add
lret
test
fimull
clc
inc
outsl
adc
mov
push
jg
mov
jmp
mov
add
fcoml
mov
jae
mov
call
add
in
ret
sub
mov
add
mov
mov
mov
add
out
inc
in
lcall
push
or
add
addb
cmp
std
lods
mov
movsb
imul
mov
sbb
out
sbb
sbb
int
add
fs
aas
jmp
cs
and
push
fidivs
shll
pop
or
rolb
mov
addb
cmp
adc
sti
dec
fstps
lret
mov
fwait
addb
out
jno
add
imul
xchg
and
mov
mov
mov
jns
ret
cli
adc
mov
out
dec
push
lcall
aaa
loop
mov
jmp
lea
lods
fcmovbe
lds
repz
insl
outsl
mov
stc
es
dec
bound
mov
pop
idiv
js
call
fists
call
pusha
add
add
lcall
popf
pop
sarl
add
rolb
mov
push
arpl
push
jmp
mov
xor
mov
add
mov
repnz
jo
mov
mov
add
mov
mov
add
add
mov
mov
jns
addb
ja
mov
mov
add
push
add
aam
pop
add
mov
sub
lea
and
mov
add
add
xchg
mov
and
fsubl
aas
shrl
fcmovnb
test
add
mov
mov
push
add
rolb
mov
stos
or
loope
sbb
es
jp
xchg
inc
add
xor
mov
mov
mov
push
pop
cmpsl
cmp
add
iret
sbb
mov
adc
mov
jno
out
and
ret
das
sti
scas
xchg
insb
inc
pop
xchg
add
xor
add
mov
in
inc
add
enter
sbb
test
xor
mov
add
xor
mov
jo
mov
xchg
sbb
sbb
cmpsb
nop
add
inc
into
mov
mov
add
add
add
add
leave
sahf
rolb
mov
mov
in
inc
add
add
and
and
mov
arpl
xlat
xchg
js
cmc
jle
aas
cmpsb
cld
xchg
sti
nop
add
add
push
es
xchg
test
and
mov
adc
mov
aam
sbb
push
add
jno
test
pop
add
cmp
adc
inc
movsl
mov
sahf
adc
xor
repnz
xor
mov
add
xchg
mov
sub
add
mov
mov
jge
movsb
je
jle
add
jns
rcll
mov
add
cmp
sbb
into
or
add
jmp
cmp
add
mov
sahf
mov
jp
in
orl
test
xchg
cmpsl
or
add
mov
add
sub
and
xor
mov
cli
mov
ss
add
push
jne
rcrl
add
add
mov
nop
add
mov
add
repnz
nop
cld
jae
sbb
mov
mov
clc
repnz
nop
cld
jae
in
mov
loop
mov
imul
add
repnz
nop
cld
jae
add
jg
addr16
jmp
add
add
pusha
add
mov
sbbl
add
adc
mov
call
jmp
add
add
pop
adc
addb
int
leave
push
mov
nop
leave
jmp
pop
add
pop
add
add
jbe
pop
push
mov
xchg
ret
pop
add
daa
hlt
add
or
sahf
push
clc
repnz
nop
cld
jae
pop
add
cmc
or
push
clc
repnz
nop
cld
jae
jecxz
flds
in
fmul
clc
repnz
nop
cld
jae
add
pop
loop
add
fdivr
repnz
nop
cld
jae
mov
or
enter
nop
cld
jae
add
add
mov
test
add
mov
cmp
ret
add
add
enter
cmp
in
nop
leave
jmp
add
mov
jne
int3
pop
clc
repnz
nop
cld
jae
mov
loop
dec
add
add
push
mov
nop
leave
jmp
test
es
mov
mov
nop
nop
cld
jae
ljmp
mov
push
clc
repnz
nop
cld
jae
jmp
dec
jg
pop
test
push
mov
nop
leave
jmp
mov
fcomps
add
add
in
nop
leave
jmp
add
pop
add
and
mov
mov
push
mov
nop
leave
jmp
pushf
pop
movsb
loopne
mov
and
add
dec
cmp
repnz
nop
cld
jae
inc
add
addl
add
js
mov
xchg
ret
add
ja
add
rolb
add
push
mov
nop
leave
jmp
add
pushf
sbb
nop
nop
cld
jae
add
add
add
xchg
push
mov
nop
leave
jmp
test
addb
in
add
push
mov
xchg
ret
fadds
add
hlt
pop
add
out
add
clc
repnz
nop
cld
jae
add
add
movsb
add
xorl
test
repnz
nop
cld
jae
jecxz
inc
repnz
push
mov
xchg
ret
dec
out
sub
add
add
push
mov
gs
add
jnp
dec
add
add
add
pusha
sbb
add
in
nop
leave
jmp
pushf
adc
mov
push
mov
xchg
ret
enter
inc
jecxz
mov
mov
nop
leave
jmp
add
in
test
sbb
clc
repnz
nop
cld
jae
add
fnstenv
adc
repnz
nop
cld
jae
repz
mov
add
jmp
mov
data16
add
add
fildl
add
sbb
mov
clc
repnz
nop
cld
jae
in
fadds
out
pushf
popa
add
nop
nop
cld
jae
add
fadds
in
add
add
repnz
nop
cld
jae
cmc
add
test
cmp
repnz
nop
cld
jae
es
or
nop
cld
jae
add
es
add
clc
repnz
nop
cld
jae
out
daa
add
les
push
mov
xchg
ret
add
addl
repz
sbb
std
mov
clc
repnz
nop
cld
jae
pop
pop
fsubs
push
pop
clc
repnz
nop
cld
jae
add
test
and
jg
clc
repnz
nop
cld
jae
daa
les
add
les
add
popl
clc
repnz
nop
cld
jae
enter
mov
jg
clc
repnz
nop
cld
jae
test
or
add
add
mov
nop
leave
jmp
pop
inc
add
xchg
or
mov
nop
leave
jmp
add
add
add
enter
nop
cld
jae
add
pop
pop
movb
repnz
push
mov
nop
leave
jmp
add
mov
add
in
nop
leave
jmp
add
add
pop
add
push
clc
repnz
nop
cld
jae
add
mov
mov
or
add
repnz
nop
cld
jae
hlt
hlt
mov
push
push
mov
xchg
ret
add
mov
repz
mov
push
mov
nop
leave
jmp
mov
fadds
loop
pop
pop
mov
mov
clc
repnz
nop
cld
jae
jbe
add
mov
sbb
add
ljmp
mov
dec
add
sbb
in
nop
leave
jmp
pop
es
and
add
mov
jmp
incl
mov
les
jecxz
pusha
add
mov
mov
clc
repnz
nop
cld
jae
pop
add
pop
ljmp
roll
xchg
ret
add
addl
jg
adc
aas
adc
in
nop
leave
jmp
add
test
mov
add
clc
out
test
add
popa
insl
rep
clc
repnz
nop
cld
jae
addl
inc
movsb
jecxz
out
mov
clc
repnz
nop
cld
jae
les
roll
jbe
push
dec
push
mov
xchg
ret
inc
add
add
pop
xchg
add
push
mov
xchg
ret
roll
add
add
add
mov
xchg
ret
pop
add
add
add
ljmp
nop
leave
jmp
jmp
xchg
add
cmpl
jmp
add
add
pop
jmp
and
mov
pop
mov
roll
add
jmp
add
mov
add
es
loop
roll
test
pop
mov
push
mov
nop
leave
jmp
popa
pop
mov
add
add
popa
inc
mov
and
clc
repnz
nop
cld
jae
enter
add
add
inc
add
mov
xchg
ret
add
add
add
das
push
clc
repnz
nop
cld
jae
add
pop
add
mov
push
mov
xchg
ret
add
sarl
add
or
dec
adc
adc
cmp
ret
pushf
add
add
add
clc
repnz
nop
cld
jae
add
jmp
call
clc
repnz
nop
cld
jae
scas
xchg
add
pop
add
clc
repnz
nop
cld
jae
add
mov
cltd
xor
clc
repnz
nop
cld
jae
les
pop
scas
add
jle
loop
mov
xchg
ret
test
add
sub
clc
repnz
nop
cld
jae
jbe
mov
add
jg
inc
add
add
jecxz
add
cltd
and
push
mov
nop
leave
jmp
add
dec
add
movzwl
clc
repnz
nop
cld
jae
movsb
add
add
in
xchg
clc
repnz
nop
cld
jae
dec
addb
add
in
outsb
movzwl
push
mov
nop
leave
jmp
mov
enter
dec
add
mov
xchg
ret
in
add
enter
add
push
mov
nop
leave
jmp
jg
pop
add
add
rol
push
mov
nop
leave
jmp
popa
add
add
daa
jl
and
clc
repnz
nop
cld
jae
add
out
push
push
mov
xchg
ret
popa
inc
jg
mov
add
push
mov
nop
leave
jmp
add
movsb
pop
add
add
push
mov
nop
leave
jmp
movb
addb
inc
push
mov
clc
repnz
nop
cld
jae
out
sbb
loop
shll
repnz
nop
cld
jae
pop
add
mov
inc
push
adc
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
xchg
test
popa
mov
push
push
mov
xchg
ret
add
add
and
add
in
nop
push
mov
xchg
ret
add
add
add
pop
pusha
orl
and
add
repnz
nop
cld
jae
roll
pusha
add
nop
nop
cld
jae
add
add
push
mov
clc
repnz
nop
cld
jae
pop
movb
mov
adc
mov
nop
leave
jmp
add
jmp
lahf
add
push
mov
nop
leave
jmp
loop
mov
add
add
push
push
mov
xchg
ret
add
jmp
mov
lea
inc
add
jecxz
cmc
ljmp
inc
jp
push
mov
nop
leave
jmp
test
repz
jecxz
rolb
mov
mov
clc
repnz
nop
cld
jae
repz
cmp
clc
repnz
nop
cld
jae
add
test
cmp
test
sti
call
in
nop
leave
jmp
xchg
add
and
mov
clc
repnz
nop
cld
jae
pop
mov
add
addb
mov
push
mov
xchg
ret
or
test
and
push
mov
xchg
ret
dec
add
rep
clc
repnz
nop
cld
jae
inc
jecxz
add
movsb
rorl
and
es
inc
add
popa
add
test
mov
out
add
rolb
push
adc
aam
mov
add
repnz
nop
cld
jae
add
pop
scas
add
add
push
mov
adc
add
jbe
xchg
mov
mov
pop
clc
repnz
nop
cld
jae
popa
pop
test
jecxz
add
inc
scas
mov
push
mov
nop
leave
jmp
add
add
add
nop
nop
cld
jae
add
mov
add
mov
xchg
ret
adc
pop
add
add
push
mov
nop
leave
jmp
jmp
pop
push
mov
xchg
ret
add
inc
mov
in
jmp
add
add
add
add
hlt
pop
jmp
add
test
ljmp
pusha
test
xor
mov
cmpl
push
mov
nop
leave
jmp
inc
addl
jbe
inc
xor
sub
push
mov
xchg
ret
scas
add
shrl
push
mov
nop
leave
jmp
dec
addb
fsubs
mov
mov
nop
cld
jae
add
pop
add
pop
rolb
mov
nop
nop
cld
jae
fadds
add
inc
add
jb
mov
jmp
roll
enter
orb
push
push
mov
xchg
ret
loop
add
add
xchg
repnz
nop
cld
jae
test
mov
xor
add
clc
repnz
nop
cld
jae
pop
dec
push
add
mov
sub
lret
incl
add
inc
out
jecxz
adc
add
pop
push
mov
xchg
ret
add
add
loop
inc
cmc
and
push
mov
add
jae
dec
lret
das
mov
add
rolb
mov
add
clc
repnz
nop
cld
jae
add
jbe
add
push
push
mov
xchg
ret
add
pop
les
mov
jbe
gs
mov
push
mov
xchg
ret
mov
popa
daa
add
clc
repnz
nop
cld
jae
add
inc
enter
dec
and
push
mov
xchg
ret
mov
daa
add
clc
mov
push
mov
xchg
ret
pop
sub
dec
fldenv
add
repnz
nop
cld
jae
add
movsb
mov
pushf
insl
jne
clc
repnz
nop
cld
jae
repz
ret
cmp
in
nop
leave
jmp
fldenv
fadds
cmp
nop
cld
jae
add
pop
mov
pusha
inc
fs
je
clc
repnz
nop
cld
jae
loop
addl
or
clc
repnz
nop
cld
jae
add
out
add
clc
repnz
nop
cld
jae
out
add
pop
fdivrs
mov
add
or
ja
add
add
mov
cmp
in
nop
leave
jmp
mov
enter
mov
xchg
ret
add
add
repz
push
mov
nop
leave
jmp
mov
add
ljmp
repnz
nop
cld
jae
add
add
pop
add
repnz
nop
cld
jae
add
adc
push
clc
repnz
nop
cld
jae
add
popa
add
mov
add
clc
repnz
nop
cld
jae
add
les
clc
repnz
nop
cld
jae
mov
jecxz
add
ret
repnz
nop
cld
jae
cmc
in
out
adc
mov
add
clc
repnz
nop
cld
jae
fadds
icebp
out
add
jmp
add
and
add
jge
clc
repnz
nop
cld
jae
les
pushf
add
pop
lcall
inc
add
sbb
mov
pop
roll
mov
push
mov
nop
leave
jmp
add
add
mov
push
clc
repnz
nop
cld
jae
adc
add
movsb
mov
add
ja
mov
push
mov
xchg
ret
mov
sbb
push
mov
jae
repnz
nop
cld
jae
add
les
sub
repnz
nop
cld
jae
add
add
add
add
pop
xor
clc
repnz
nop
cld
jae
pop
adc
hlt
dec
inc
lods
lea
push
mov
nop
leave
jmp
add
mov
add
ljmp
nop
leave
jmp
les
add
add
mov
repnz
nop
cld
jae
ljmp
add
aam
mov
push
mov
xchg
ret
add
adc
daa
ror
mov
push
push
mov
nop
leave
jmp
add
or
mov
fmull
sahf
roll
xchg
ret
add
add
dec
out
push
shr
clc
repnz
nop
cld
jae
fadds
add
adc
mov
pusha
push
mov
xchg
ret
add
add
add
or
lret
push
mov
nop
leave
jmp
add
jecxz
jg
sbbl
mov
push
mov
nop
leave
jmp
ljmp
push
mov
clc
repnz
nop
cld
jae
jecxz
int3
call
push
mov
xchg
ret
mov
add
gs
add
clc
repnz
nop
cld
jae
out
add
hlt
rorl
add
jg
les
mov
or
push
mov
nop
leave
jmp
add
dec
or
add
adc
repnz
nop
cld
jae
cmc
jmp
pop
push
clc
repnz
nop
cld
jae
cmc
add
add
jecxz
xchg
jmp
decl
add
jecxz
test
mov
or
fldl
xchg
ret
or
loop
dec
es
movsb
push
mov
nop
leave
jmp
pop
add
movsb
mov
out
add
add
leave
jmp
test
xlat
lods
add
push
mov
xchg
ret
sub
sub
clc
repnz
nop
cld
jae
pop
add
add
test
repnz
nop
cld
jae
add
inc
inc
pop
cmc
jecxz
lcall
nop
cld
jae
pushf
pop
add
pop
and
add
cli
pop
clc
repnz
nop
cld
jae
inc
dec
add
addb
jecxz
add
add
push
mov
nop
leave
jmp
test
hlt
dec
push
clc
repnz
nop
cld
jae
add
loop
fsubr
popa
lds
and
add
repnz
nop
cld
jae
add
add
and
mov
mov
clc
repnz
nop
cld
jae
pop
test
movsb
pop
addb
push
clc
repnz
nop
cld
jae
add
fadds
dec
mov
push
mov
nop
leave
jmp
add
in
test
outsb
and
mov
xchg
ret
inc
inc
add
add
je
add
pusha
add
push
mov
nop
leave
jmp
mov
add
push
mov
xchg
ret
pop
add
add
add
lods
mov
push
mov
nop
leave
jmp
add
add
rcl
xchg
sub
clc
repnz
nop
cld
jae
add
pusha
pop
pop
mov
mov
nop
leave
jmp
add
mov
nop
nop
cld
jae
jecxz
and
add
pushl
clc
repnz
nop
cld
jae
add
or
add
clc
repnz
nop
cld
jae
add
xor
push
mov
xchg
ret
add
and
push
xchg
aas
add
push
mov
nop
leave
jmp
add
movsb
add
in
and
dec
mov
clc
repnz
nop
cld
jae
pop
add
add
jg
clc
repnz
nop
cld
jae
pop
mov
dec
mov
push
mov
xchg
ret
add
mov
pop
add
mov
xchg
ret
scas
add
addl
test
addr16
add
jne
clc
repnz
nop
cld
jae
adc
and
add
nop
cld
jae
inc
jbe
add
sub
push
mov
nop
leave
jmp
add
add
sub
repnz
nop
cld
jae
xchg
add
pop
add
xor
dec
ss
clc
repnz
nop
cld
jae
add
mov
mov
cmpl
in
nop
leave
jmp
add
mov
js
inc
add
in
les
push
clc
repnz
nop
cld
jae
add
add
pop
xor
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
mov
pop
add
add
add
pop
cmp
push
mov
nop
leave
jmp
or
add
jnp
icebp
push
mov
nop
leave
jmp
pop
pop
pop
adc
add
jb
mov
clc
xor
clc
repnz
nop
cld
jae
enter
ror
xchg
rcll
add
pop
push
mov
nop
leave
jmp
mov
add
mov
push
mov
clc
repnz
nop
cld
jae
add
les
clc
repnz
nop
cld
jae
mov
add
ljmp
add
pop
add
adc
loop
les
add
mov
or
clc
repnz
nop
cld
jae
ljmp
adc
repnz
nop
cld
jae
movsb
add
xchg
hlt
imul
add
daa
rolb
add
in
out
add
lret
xchg
adc
daa
hlt
imul
leave
jmp
daa
add
les
hlt
xlat
test
add
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
addl
jecxz
xchg
add
lahf
xor
push
mov
xchg
ret
adc
add
add
push
add
clc
repnz
nop
cld
jae
jecxz
add
add
and
mov
xchg
ret
jecxz
inc
xchg
add
sub
repnz
nop
cld
jae
add
add
add
lods
rep
push
mov
xchg
ret
es
add
add
loopne
mov
pop
clc
repnz
nop
cld
jae
inc
add
add
add
add
repnz
nop
cld
jae
add
mov
xchg
repz
repnz
nop
cld
jae
pushf
add
add
add
lret
test
add
clc
repnz
nop
cld
jae
test
add
clc
repnz
nop
cld
jae
pusha
pushf
pop
dec
add
scas
add
clc
repnz
nop
cld
jae
add
mov
add
jmp
pushl
jbe
adc
pop
jbe
add
jge
mov
inc
add
dec
add
xor
mov
inc
add
add
inc
and
repnz
nop
cld
jae
adc
movsb
ljmp
add
mov
cmp
ret
scas
add
test
inc
testl
pop
pop
add
fld
es
add
push
mov
lods
jl
add
mov
inc
cmp
ljmp
add
clc
repnz
nop
cld
jae
add
mov
jg
jbe
clc
repnz
nop
cld
jae
add
addl
mov
push
mov
xchg
ret
test
add
add
add
in
nop
leave
jmp
pop
addl
gs
repnz
nop
cld
jae
inc
dec
add
and
mov
mov
clc
repnz
nop
cld
jae
pop
add
movsb
cli
je
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
mov
ljmp
push
mov
nop
leave
jmp
rcrl
jg
les
repnz
nop
cld
jae
add
es
push
clc
repnz
nop
cld
jae
pop
addb
add
dec
hlt
lea
nop
nop
cld
jae
add
add
adc
push
clc
repnz
nop
cld
jae
add
hlt
add
pop
add
mov
sti
inc
add
jg
add
inc
loop
xchg
pop
ror
clc
repnz
nop
cld
jae
add
adcb
add
push
push
mov
nop
leave
jmp
and
mov
cmpl
test
nop
nop
cld
jae
add
pop
movsl
rolb
mov
mov
clc
repnz
nop
cld
jae
pop
and
daa
sbb
cmp
xchg
inc
add
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
pushf
dec
pop
and
mov
push
add
clc
repnz
nop
cld
jae
shl
mov
add
and
push
fs
repnz
nop
cld
jae
movsb
pushf
add
or
nop
cld
jae
adc
movsb
add
mov
mov
xchg
ret
mov
add
mov
rclb
xchg
inc
add
add
add
movb
add
mov
cld
add
jae
mov
add
stc
and
sbb
maxps
imul
inc
add
add
or
jb
mov
pushf
push
push
mov
nop
leave
jmp
pop
pop
pop
add
mov
cmc
dec
mov
clc
repnz
nop
cld
jae
addl
sub
adc
repnz
nop
cld
jae
add
add
add
stc
clc
repnz
nop
cld
jae
or
mov
push
mov
xchg
ret
dec
add
add
enter
dec
adc
repnz
nop
cld
jae
pop
add
mov
clc
repnz
nop
cld
jae
add
add
je
add
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
add
roll
sub
push
clc
repnz
nop
cld
jae
add
les
pop
fadds
lret
inc
clc
repnz
nop
cld
jae
sbb
addb
add
xor
add
clc
repnz
nop
cld
jae
add
mov
in
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
sub
mov
clc
repnz
nop
cld
jae
add
and
sbb
add
repnz
nop
cld
jae
add
test
sub
mov
inc
add
inc
inc
add
dec
push
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
leave
jmp
test
add
mov
push
mov
nop
leave
jmp
add
pop
add
push
mov
nop
leave
jmp
popa
add
add
add
mov
mov
push
mov
nop
leave
jmp
hlt
add
add
movsb
mov
loopne
mov
push
mov
int3
out
call
movsl
pusha
add
fnstcw
clc
repnz
nop
cld
jae
flds
add
ret
faddl
in
nop
leave
jmp
add
add
enter
push
push
mov
nop
leave
jmp
inc
xchg
add
enter
pop
iret
inc
add
add
add
jne
clc
repnz
nop
cld
jae
jbe
enter
scas
rep
push
mov
nop
leave
jmp
mov
dec
xor
jecxz
xchg
movswl
push
mov
nop
leave
jmp
shl
es
push
or
cmpsb
fiadds
xchg
ret
add
mov
mov
popa
add
repnz
nop
cld
jae
inc
xor
add
mov
mov
xchg
ret
test
add
add
clc
repnz
nop
cld
jae
daa
mov
cmp
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
add
mov
jbe
clc
repnz
nop
cld
jae
add
sub
fadds
fmull
nop
nop
cld
jae
in
add
roll
push
push
mov
xchg
ret
pop
add
test
add
nop
nop
cld
jae
jecxz
add
add
dec
jno
mov
in
nop
leave
jmp
test
es
add
les
mov
mov
mov
add
cs
insb
clc
repnz
nop
cld
jae
cmc
add
inc
in
push
mov
nop
leave
jmp
add
les
inc
sbbb
mov
jne
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
jecxz
pop
roll
repz
shr
jmp
mov
popa
jmp
dec
add
into
jne
clc
repnz
nop
cld
jae
add
add
dec
imul
cld
jae
dec
add
add
repnz
nop
cld
jae
jecxz
add
add
pop
cld
clc
repnz
nop
cld
jae
add
mov
add
add
clc
repnz
nop
cld
jae
and
dec
out
jne
clc
repnz
nop
cld
jae
jg
mov
mov
xchg
ret
add
shrl
mov
nop
leave
jmp
les
les
push
clc
repnz
nop
cld
jae
repz
mov
out
loope
push
clc
repnz
nop
cld
jae
jecxz
inc
jmp
fmull
nop
nop
cld
jae
test
add
add
push
mov
xchg
ret
test
add
cwtl
dec
push
mov
nop
leave
jmp
scas
dec
and
mov
mov
rclb
sti
inc
add
enter
pusha
test
push
mov
add
fiaddl
add
mov
pop
sub
out
cli
and
clc
repnz
nop
cld
jae
roll
add
push
mov
into
inc
add
mov
add
clc
repnz
nop
cld
jae
pop
dec
add
rolb
mov
cmpw
push
mov
nop
leave
jmp
add
or
sbb
clc
repnz
nop
cld
jae
les
inc
add
repnz
nop
cld
jae
repz
add
push
mov
nop
leave
jmp
hlt
add
add
repz
repnz
nop
cld
jae
movb
add
add
add
mov
nop
leave
jmp
add
pushf
add
and
pop
rolb
mov
add
add
push
mov
nop
leave
jmp
add
add
add
add
add
xor
add
jecxz
lcall
mov
clc
repnz
nop
cld
jae
mov
cltd
ret
clc
repnz
nop
cld
jae
addl
add
add
push
mov
xchg
ret
add
mov
jne
clc
repnz
nop
cld
jae
inc
add
subl
clc
repnz
nop
cld
jae
add
add
jmp
push
mov
xchg
ret
test
test
jmp
jae
repnz
nop
cld
jae
add
popa
add
mov
xchg
ret
mov
adc
gs
test
repnz
nop
cld
jae
and
or
push
mov
xchg
ret
add
add
jecxz
shr
push
mov
nop
leave
jmp
adc
out
ljmp
adc
repnz
nop
cld
jae
movsb
add
test
movsl
ss
push
mov
xchg
ret
add
add
sub
push
mov
nop
leave
jmp
cmc
es
add
addl
add
mov
aaa
add
add
add
push
add
add
xchg
mov
jmp
add
popa
es
add
out
pop
add
add
or
repnz
nop
cld
jae
les
in
or
push
mov
nop
leave
jmp
jg
pop
mov
add
mov
outsl
arpl
add
repnz
nop
cld
jae
add
jg
aaa
cmp
nop
nop
cld
jae
jecxz
add
mov
dec
jne
clc
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
add
roll
push
push
mov
xchg
ret
popa
pop
pushf
xchg
mov
mov
popa
mov
insl
push
push
mov
xchg
ret
pop
hlt
add
add
clc
repnz
nop
cld
jae
mov
pop
in
inc
push
mov
nop
leave
jmp
inc
add
mov
std
mov
clc
repnz
nop
cld
jae
xchg
pop
test
test
pop
clc
repnz
nop
cld
jae
add
pushf
dec
jo
mov
mov
push
clc
repnz
nop
cld
jae
repz
test
clc
repnz
nop
cld
jae
add
movsb
loop
mov
add
pop
push
mov
xchg
ret
pop
movsb
pop
sub
pop
add
push
add
clc
repnz
nop
cld
jae
jecxz
loop
adc
int3
add
clc
repnz
nop
cld
jae
add
pop
add
repnz
nop
cld
jae
scas
add
add
sbb
add
or
mov
nop
leave
jmp
pop
pushf
jecxz
and
mov
test
push
mov
xchg
ret
ljmp
adc
clc
repnz
nop
cld
jae
pusha
scas
add
ss
popa
clc
repnz
nop
cld
jae
pushf
add
jmp
push
add
push
clc
repnz
nop
cld
jae
inc
add
add
ljmp
ret
add
add
pop
pop
add
sbb
add
popl
jmp
repnz
nop
cld
jae
jbe
and
daa
add
stc
mov
push
mov
xchg
ret
add
add
add
mov
push
mov
nop
leave
jmp
andl
push
mov
xchg
ret
dec
pop
add
add
add
loop
clc
repnz
nop
cld
jae
add
add
pushf
clc
push
push
mov
xchg
ret
jecxz
jecxz
popa
xchg
popa
jecxz
xchg
add
aas
in
add
mov
mov
repz
jb
mov
pushf
movzwl
clc
repnz
nop
cld
jae
pop
add
add
cmc
sub
push
mov
xchg
ret
add
scas
addl
jg
stos
add
clc
repnz
nop
cld
jae
scas
mov
mov
add
push
mov
dec
add
add
lea
xorl
mov
jmp
add
cmc
movb
inc
ljmp
add
jne
clc
repnz
nop
cld
jae
test
es
aaa
mov
repnz
nop
cld
jae
test
or
and
push
mov
nop
leave
jmp
xchg
pop
test
or
adc
cmp
inc
add
out
add
add
push
push
mov
xchg
ret
jecxz
add
aaa
pop
push
clc
repnz
nop
cld
jae
dec
addb
dec
subl
inc
or
repnz
nop
cld
jae
and
les
jmp
hlt
add
jbe
cmc
add
dec
jecxz
test
clc
repnz
nop
cld
jae
add
enter
bound
mov
add
push
mov
nop
leave
jmp
in
add
pop
jbe
mov
mov
nop
leave
jmp
jg
roll
loop
clc
repnz
nop
cld
jae
add
add
mov
test
inc
add
add
add
add
ljmp
add
sti
jmp
add
add
add
hlt
mov
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
lods
mov
clc
repnz
nop
cld
jae
pushf
add
add
add
ljmp
add
inc
add
pop
add
mov
mov
imul
nop
nop
cld
jae
out
test
mov
mov
repnz
nop
cld
jae
add
test
add
add
xor
cmp
ret
movb
inc
add
pop
pop
inc
cld
inc
clc
repnz
nop
cld
jae
add
mov
add
pop
test
add
add
repnz
nop
cld
jae
test
add
int
clc
repnz
nop
cld
jae
xchg
ljmp
fs
add
push
mov
nop
leave
jmp
test
mov
test
repz
mov
nop
leave
jmp
add
adc
add
subl
clc
repnz
nop
cld
jae
movsb
add
add
repnz
nop
cld
jae
sbb
repz
add
loop
add
test
pushf
add
xchg
repnz
nop
cld
jae
add
add
pop
add
mov
clc
repnz
nop
cld
jae
ljmp
add
nop
nop
cld
jae
pop
orl
pop
add
add
adc
repnz
nop
cld
jae
mov
dec
add
stos
cs
clc
repnz
nop
cld
jae
sbb
in
adc
ret
loopne
mov
ljmp
jae
inc
add
jecxz
pusha
adc
inc
mov
shr
inc
add
mov
loop
pop
pop
push
mov
nop
leave
jmp
add
daa
jecxz
mov
jecxz
cmp
ss
incl
andl
add
mov
xchg
and
mov
lea
push
mov
nop
leave
jmp
inc
add
add
add
popa
add
mov
nop
leave
jmp
jbe
add
add
out
jmp
mov
push
mov
nop
leave
jmp
jecxz
adc
add
nop
nop
cld
jae
pushf
pop
mov
mov
and
push
mov
xchg
ret
dec
test
hlt
pop
hlt
dec
mov
nop
leave
jmp
adcl
add
jl
clc
repnz
nop
cld
jae
hlt
pop
cmp
repz
repnz
nop
cld
jae
add
add
adc
add
push
mov
nop
leave
jmp
add
add
in
add
add
xor
clc
repnz
nop
cld
jae
add
inc
add
mov
clc
repnz
nop
cld
jae
pop
adc
enter
insl
imul
clc
repnz
nop
cld
jae
add
jg
add
add
daa
jno
xor
push
mov
xchg
ret
add
mov
push
clc
repnz
nop
cld
jae
add
scas
pushf
roll
fists
in
nop
leave
jmp
roll
add
add
add
mov
in
nop
leave
jmp
pop
addl
add
or
add
repnz
nop
cld
jae
add
add
jbe
les
pop
enter
nop
cld
jae
jecxz
mov
add
push
mov
nop
leave
jmp
add
pushf
loop
inc
inc
add
test
push
mov
nop
leave
jmp
add
add
nop
nop
cld
jae
fdiv
pushf
add
add
add
nop
cld
jae
add
add
jbe
ljmp
inc
and
repnz
nop
cld
jae
enter
sub
ljmp
pushf
add
les
mov
out
add
add
add
dec
clc
dec
inc
clc
repnz
nop
cld
jae
adc
add
je
clc
repnz
nop
cld
jae
pop
popa
add
add
fcos
clc
repnz
nop
cld
jae
add
ljmp
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
mov
add
mov
push
mov
xchg
ret
inc
add
add
hlt
pushf
pusha
repz
insl
popa
clc
repnz
nop
cld
jae
add
inc
les
add
std
mov
jmp
lcall
jecxz
inc
add
add
cmc
add
dec
add
xchg
push
mov
xchg
ret
mov
add
add
inc
movsl
add
mov
mov
clc
repnz
nop
cld
jae
in
jecxz
mov
loopne
mov
add
fcos
clc
repnz
nop
cld
jae
add
pop
add
jb
push
mov
nop
leave
jmp
add
pop
les
add
clc
repnz
nop
cld
jae
mov
adc
cmc
test
mov
clc
repnz
nop
cld
jae
add
pop
add
dec
jmp
nop
nop
cld
jae
add
pusha
pop
scas
jecxz
shll
mov
xchg
ret
in
add
fsubs
lock
push
mov
xchg
ret
jecxz
add
rclb
out
inc
add
add
add
mov
push
mov
nop
leave
jmp
pop
enter
sbb
push
mov
nop
leave
jmp
dec
mov
mov
add
pop
add
clc
repnz
nop
cld
jae
dec
add
add
cmp
nop
cld
jae
test
test
mov
nop
leave
jmp
addl
mov
add
add
add
mov
mov
clc
repnz
nop
cld
jae
add
out
add
mov
nop
nop
cld
jae
add
pop
add
mov
push
mov
nop
leave
jmp
dec
pop
add
es
add
sub
nop
nop
cld
jae
add
loop
add
and
cmp
push
mov
nop
leave
jmp
add
repz
insl
rep
clc
repnz
nop
cld
jae
add
add
pushf
add
push
jl
clc
repnz
nop
cld
jae
mov
add
sbb
jbe
call
clc
repnz
nop
cld
jae
ljmp
xchg
push
pop
testl
push
mov
nop
leave
jmp
add
mov
lods
push
mov
xchg
ret
mov
test
add
add
xor
clc
repnz
nop
cld
jae
add
add
scas
add
cmp
in
nop
leave
jmp
add
sbbl
test
xchg
addb
xchg
repnz
repnz
nop
cld
jae
jbe
add
dec
add
repnz
add
clc
repnz
nop
cld
jae
fadds
push
clc
repnz
nop
cld
jae
pushf
add
jmp
popa
xor
push
clc
repnz
nop
cld
jae
add
add
mov
pop
push
add
ret
clc
repnz
nop
cld
jae
add
jmp
add
inc
add
clc
repnz
nop
cld
jae
out
addl
add
add
jecxz
mov
clc
repnz
nop
cld
jae
add
add
ljmp
in
nop
leave
jmp
les
add
fstps
pusha
repz
mov
clc
repnz
nop
cld
jae
add
mov
popa
jae
add
enter
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
jbe
add
push
clc
repnz
nop
cld
jae
inc
sbb
add
sbb
clc
repnz
nop
cld
jae
add
popa
add
pop
push
mov
xchg
ret
add
add
xor
movb
mov
xchg
ret
add
pop
or
fwait
popa
push
mov
nop
leave
jmp
add
add
mov
add
pop
scas
jne
clc
repnz
nop
cld
jae
add
mov
inc
and
clc
repnz
nop
cld
jae
add
roll
cmpl
cld
jae
add
pop
jecxz
add
xor
add
in
nop
leave
jmp
out
jmp
mov
push
mov
nop
leave
jmp
pop
sbb
andl
hlt
sbbl
add
clc
repnz
nop
cld
jae
sub
les
mov
push
mov
nop
leave
jmp
mov
dec
clc
repnz
nop
cld
jae
pop
pop
add
add
jecxz
xchg
out
mov
push
mov
xchg
ret
inc
mov
fldl2e
test
sar
nop
nop
cld
jae
jmp
add
fucomp
push
add
add
repnz
nop
cld
jae
add
pusha
dec
xchg
loope
add
nop
nop
cld
jae
add
and
dec
mov
add
jo
mov
add
in
nop
leave
jmp
pushf
jecxz
out
mov
push
push
mov
xchg
ret
add
jecxz
movsb
scas
mov
add
push
mov
nop
leave
jmp
jecxz
mov
add
inc
cmp
add
add
loop
sbb
dec
pop
add
nop
nop
cld
jae
and
adc
and
fcomip
clc
repnz
nop
cld
jae
add
xchg
add
and
inc
add
mov
add
inc
add
das
pop
push
mov
nop
leave
jmp
pushf
add
adc
hlt
enter
sbb
repnz
nop
cld
jae
add
mov
xlat
and
push
clc
repnz
nop
cld
jae
mov
cmc
hlt
int
push
mov
nop
leave
jmp
mov
jg
add
sub
inc
add
mov
mov
mov
daa
xchg
hlt
andl
clc
repnz
nop
cld
jae
pusha
add
add
test
dec
add
adc
jecxz
repz
add
add
mov
add
std
call
clc
repnz
nop
cld
jae
add
test
adc
shl
clc
repnz
nop
cld
jae
adc
add
add
aaa
mov
sub
push
mov
xchg
ret
add
add
rorl
nop
nop
cld
jae
daa
cmc
add
or
movzwl
clc
repnz
nop
cld
jae
pop
xchg
add
and
add
clc
repnz
nop
cld
jae
add
dec
mov
sar
repnz
nop
cld
jae
pop
inc
add
add
repnz
xor
add
clc
repnz
nop
cld
jae
or
xor
clc
repnz
nop
cld
jae
or
addl
mov
clc
repnz
nop
cld
jae
sbbb
call
push
mov
nop
leave
jmp
add
add
mov
shr
clc
repnz
nop
cld
jae
add
add
add
add
mov
inc
add
pusha
dec
add
mov
clc
repnz
nop
cld
jae
add
adc
push
push
mov
nop
leave
jmp
les
add
add
add
push
mov
nop
leave
jmp
cmc
roll
mov
add
adc
mov
jmp
pusha
hlt
add
add
add
mov
movsl
sbb
add
add
repnz
nop
cld
jae
pop
add
clc
repnz
nop
cld
jae
add
addb
test
clc
repnz
nop
cld
jae
add
loop
roll
mov
push
mov
xchg
ret
add
pop
and
mov
clc
repnz
nop
cld
jae
jmp
add
mov
clc
repnz
nop
cld
jae
scas
add
mov
clc
repnz
nop
cld
jae
add
add
hlt
adc
add
mov
add
xor
add
push
mov
nop
leave
jmp
jmp
clc
repnz
nop
cld
jae
movb
mov
add
es
call
clc
repnz
nop
cld
jae
test
filds
jne
clc
repnz
nop
cld
jae
daa
add
adc
mov
add
add
repnz
nop
cld
jae
add
pop
push
clc
repnz
nop
cld
jae
add
jecxz
add
mov
push
mov
nop
leave
jmp
mov
pop
clc
repnz
nop
cld
jae
roll
pop
mov
add
push
mov
nop
cld
jae
add
add
pop
add
clc
repnz
nop
cld
jae
add
fdivr
loope
repnz
nop
cld
jae
add
add
adc
into
movzwl
clc
repnz
nop
cld
jae
add
add
pop
pop
clc
repnz
nop
cld
jae
pushf
mov
add
push
clc
repnz
nop
cld
jae
mov
jg
mov
xchg
adc
mov
clc
repnz
nop
cld
jae
add
lods
mov
clc
repnz
nop
cld
jae
add
inc
mov
icebp
clc
repnz
nop
cld
jae
ljmp
xor
mov
es
inc
add
es
fcomps
add
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
jg
mov
movsb
inc
add
dec
push
mov
sbb
add
add
test
xchg
adc
add
and
add
inc
xchg
mov
add
pop
dec
test
mov
dec
aas
add
pop
mov
adc
popa
jl
push
test
sub
repnz
pop
lods
mov
mov
add
mov
mov
ja
or
sbb
inc
mov
mov
imul
inc
insb
and
das
or
test
jg
ret
divl
xchg
push
bound
mov
xchg
mov
mov
mov
xor
jl
add
mov
mov
mov
mov
data16
xlat
outsl
pop
pop
data16
sbbl
add
mull
out
aas
ret
lock
jns
add
imul
mov
push
add
imul
ljmp
add
add
cmc
push
mov
add
lret
cmp
inc
add
test
add
xchg
mov
movsb
jg
testl
mov
out
lods
ret
sub
fldt
aad
push
out
mov
sub
push
sbbl
cmc
fisubrs
cld
into
sahf
dec
adc
mov
aam
or
sub
add
xor
add
cmp
push
mov
ja
addr16
and
imul
sub
js
add
lcall
mov
push
pop
mov
or
das
mov
xchg
pushf
cmpsl
pop
and
mov
sbb
inc
xor
mov
mov
mov
arpl
mov
sets
adc
xor
add
into
insb
je
add
mov
arpl
addb
mov
mov
sbb
jmp
fldenv
shll
dec
push
adc
pop
dec
daa
lcall
add
mov
lret
mov
movl
mov
or
cs
mov
push
add
mov
add
fsubl
gs
xor
mov
fldl
test
outsb
cmpsb
lcall
mov
mov
mov
pushf
cltd
mov
xchg
jmp
in
xchg
mov
jbe
insl
mov
add
cltd
cmp
jne
cmp
add
add
adc
popf
fdivrs
xchg
iret
push
push
sbb
inc
not
ret
lock
add
jmp
add
add
or
jp
loope
cltd
icebp
or
push
or
fwait
xor
mov
scas
notl
pop
and
sbb
test
pop
rolb
mov
add
xor
out
inc
add
mov
add
mov
adc
cwtl
out
loope
mov
push
cmp
call
push
cwtl
push
add
mov
add
in
dec
std
mov
dec
xchg
adc
ret
notl
xchg
push
sti
sub
imul
inc
ljmp
mov
fistps
mov
xchg
jne
loope
jl
add
lods
adc
fisubrl
sahf
inc
or
outsl
enter
or
mov
repnz
inc
out
mov
cmp
adc
lea
je
jg
dec
pop
xor
mov
call
out
push
add
test
push
mov
mov
mov
mov
aaa
es
mov
loop
mov
cmp
mov
add
cs
mov
mov
mov
es
lret
jno
cmp
loop
mov
add
and
nop
add
rcrl
add
mov
jecxz
mov
add
add
add
push
mov
lret
or
adc
cld
iret
enter
mov
fnsave
mov
mov
sub
stos
jb
mov
dec
nop
add
pop
int
sbb
push
frstpm(287
jmp
mov
test
mov
jb
mov
lds
pop
aad
lret
in
push
in
mov
mov
fcomps
daa
fisttps
scas
pop
mov
mov
add
add
xchg
rolb
mov
mov
inc
je
cmc
mov
sar
and
mov
and
jo
mov
imul
add
loope
inc
add
repz
and
popa
xor
mov
nop
add
rcrl
push
add
cmp
mov
mov
mov
add
out
pop
pusha
add
add
mov
inc
mov
movsl
push
pop
sub
stc
push
add
mov
lret
inc
add
in
test
test
adc
mov
push
lods
pushf
jb
mov
in
popl
inc
dec
mov
pop
loop
mov
mov
out
mov
cmp
sub
mov
mov
lock
dec
xor
add
mov
pushf
sub
leave
negl
popa
add
mov
inc
test
mov
mov
and
mov
push
sahf
mov
out
push
xchg
in
cmc
out
pop
cmp
add
outsb
xor
lods
jae
popl
mov
iret
arpl
sbb
sahf
out
shl
add
insl
test
xchg
sub
push
lock
icebp
shll
push
push
mov
out
movsb
push
jae
pop
in
xlat
test
jge
pop
andl
sbb
and
ds
dec
clc
inc
add
xor
add
mov
imul
mov
add
jmp
add
jp
jl
je
jae
push
pop
xor
sbb
push
inc
test
sub
cmp
add
cs
mov
jmp
xchg
pop
mov
dec
int
push
or
add
mov
jno
add
push
push
ficompl
pop
inc
push
add
rolb
mov
add
add
mov
pop
out
test
mov
mov
out
add
mov
xchg
pushf
mov
dec
push
or
cmpsl
leave
jb
mov
lods
addb
outsl
mov
jo
mov
test
int3
mov
mov
les
add
rcll
mov
into
test
ljmp
push
fwait
pop
mov
fdivrl
push
lea
or
addb
push
add
scas
mov
add
mov
mov
mov
xchg
aas
xorl
push
mov
fwait
into
cmc
fwait
push
sbb
cmc
test
addb
fs
cwtl
cltd
pop
add
sbb
or
cmp
aam
lahf
xchg
cmp
dec
into
fsubl
add
cmp
add
in
sub
xchg
mov
add
addb
xor
mov
cmp
mov
das
jno
pop
inc
lea
xor
mov
mov
stos
jecxz
pop
fsts
add
ja
fldt
xchg
add
ljmp
imul
dec
or
add
jl
sub
push
xlat
or
test
jnp
add
dec
xor
add
inc
jae
outsb
mov
jae
hlt
mov
out
adc
lods
xchg
mov
dec
rorl
and
mov
push
ret
outsb
jne
adc
mov
sub
mov
sub
scas
sbb
push
jecxz
push
add
lods
lcall
clc
mov
ret
xchg
dec
adc
int
push
push
mov
mov
movsb
push
jne
dec
ds
mov
xor
mov
bound
mov
push
jg
out
inc
add
inc
push
and
ss
add
lds
add
add
bound
mov
insl
jge
not
mov
add
mov
mov
push
cmp
rolb
mov
scas
cmp
mov
xor
mov
add
pop
mov
sub
cwtl
or
je
repnz
add
add
lret
stc
mov
mov
mov
push
outsl
sub
ret
sub
adc
mov
xchg
mov
push
add
ret
xor
mov
add
clc
rolb
add
mov
push
lret
mov
cmpl
bound
mov
dec
sti
pop
xchg
push
ss
pushf
ficoms
aam
mov
sbb
mov
das
sbb
push
add
insb
sbb
add
into
stos
dec
mov
add
add
add
add
pushf
and
jp
push
add
mov
mov
stos
pop
sahf
ds
std
xor
hlt
int3
adc
mov
add
out
push
jns
fcompl
add
dec
dec
addb
adc
addb
sti
mov
dec
inc
aam
mov
mov
add
add
push
cld
jnp
enter
iret
insb
jno
aad
inc
call
aaa
cli
jge
imul
insl
dec
data16
add
add
int3
and
mov
jno
insb
cmp
and
mov
imul
xchg
pushl
add
sbb
es
mov
iret
aad
das
mov
out
mov
pop
out
push
pop
cs
cltd
or
pop
aaa
shll
mov
pusha
add
sahf
outsb
push
mov
sbb
mov
xchg
pop
mov
push
add
mov
cmpl
rolb
mov
xchg
cmp
lret
test
sbb
out
or
clc
pop
or
pusha
add
es
fwait
jne
xor
mov
mov
inc
jbe
or
dec
incb
sub
call
push
inc
add
insl
cmp
cmp
int
je
jmp
mov
xchg
cmp
or
push
push
testb
mov
movsb
orl
xor
mov
leave
push
add
dec
popa
add
cmp
stos
dec
push
add
fcomi
std
outsl
mov
mov
jo
mov
int3
fs
and
push
fbld
add
add
aaa
and
xor
xchg
xor
scas
out
je
addb
fdiv
or
std
mov
or
pop
sbb
lea
sbbl
or
fstpl
mov
je
add
in
adc
push
mov
or
cmpsb
stos
jge
add
fcoml
mov
mov
add
mov
dec
in
ret
nop
add
cmp
lock
mov
mov
pop
outsb
out
push
jns
add
jmp
add
mov
out
loope
xchg
pusha
add
lret
movsl
mov
mov
mov
call
xchg
rolb
mov
jle
movzbl
mov
nop
add
rcll
es
and
sbb
cmp
stos
aaa
lcall
lahf
mov
sub
push
add
lods
mov
sbb
ss
adc
fisubl
add
je
arpl
bound
mov
loope
ficoml
dec
pop
xor
shll
and
sub
scas
push
add
fisttps
loop
mov
push
imul
cmp
add
icebp
xchg
call
mov
dec
popf
addr16
aad
add
test
arpl
pcmpeqw
add
cltd
add
or
mov
or
test
cs
cltd
pushf
scas
movsl
lock
neg
cmp
add
imul
aaa
fiaddl
lea
cs
out
std
test
mov
mov
dec
xchg
js
add
push
xor
out
pop
adc
push
cmp
adc
add
xor
xchg
add
xchg
add
xlat
aam
lret
push
cmpsb
imul
add
mov
vmovlps
mov
cmp
test
cmp
inc
fmull
enter
add
mov
xlat
sub
push
add
bt
add
xor
int3
movsb
out
movups
mov
dec
xchg
fldcw
dec
jecxz
mov
stc
cmpsl
lods
enter
dec
xor
mov
pusha
add
fldcw
adc
mov
mov
mov
addr16
lea
jo
mov
das
ja
in
bound
mov
ss
add
inc
mov
inc
add
loopne
mov
push
and
mov
mov
add
mov
xchg
xlat
int3
or
inc
cwtl
lret
mov
inc
bound
mov
add
pop
mov
mov
and
mov
addb
cmpsb
clc
addr16
add
cmp
add
in
jbe
add
arpl
inc
add
ficomps
sarl
xchg
inc
pop
xor
outsb
adc
jns
jno
lret
sub
nop
add
add
and
cltd
jns
movsl
cmp
mov
add
mov
scas
push
jp
sahf
fstl
xor
mov
xlat
xor
mov
mov
mov
add
outsl
sub
addb
out
push
test
inc
xor
movsl
test
dec
aam
jno
xlat
mov
push
popf
lahf
and
scas
cmp
push
cmp
js
sub
add
inc
xor
mov
xor
mov
push
leave
aam
loopne
mov
mov
lds
and
inc
xor
mov
sub
add
mov
add
inc
pop
push
fdivl
lret
add
outsl
stos
fisubrl
ja
jmp
dec
imul
add
mov
xor
mov
add
in
mov
imul
aaa
or
xchg
xchg
mov
mov
mov
jae
ja
or
clc
sub
js
imul
adc
xchg
dec
in
and
mov
add
or
add
mov
cld
in
cmp
cwtl
mov
sbb
int
ss
testb
scas
mov
mov
or
dec
ljmp
cltd
pop
xchg
fmull
sub
ret
xchg
stos
mov
add
pusha
add
mov
and
sbb
fcompl
call
mov
add
daa
mov
mov
push
add
mov
mov
arpl
hlt
stc
lods
gs
dec
and
pop
lahf
mov
testl
sahf
leave
cmp
mov
add
out
mov
cmp
add
rolb
test
inc
loope
inc
push
mov
stos
sbb
mov
xchg
and
jbe
push
push
cli
push
jo
mov
mov
call
mov
in
pop
out
aaa
stos
xchg
jae
mov
and
sub
es
add
xor
mov
fs
fcomi
add
in
jo
mov
mov
sarl
add
cld
mov
xor
or
out
sbb
xchg
jmp
jo
mov
add
mov
faddp
pop
pushf
cmpl
xor
mov
xchg
cmpsb
mov
add
mov
test
out
sti
xchg
das
push
add
addb
pop
push
add
cmp
imul
stos
add
mov
fstl
mov
push
add
mov
add
add
stc
ja
lea
adc
mov
aaa
pop
fimull
xchg
sub
dec
push
aaa
ds
aas
das
std
jmp
push
sub
pop
outsb
jmp
dec
mov
fistpl
insl
mull
and
mov
mov
or
push
hlt
jle
lods
addb
rorl
addb
idivl
rolb
mov
rcll
mov
and
dec
movsb
push
ss
mov
xchg
add
jae
les
mov
cmp
cmc
rolb
mov
pusha
add
mov
movsl
adc
mov
push
pop
pop
rolb
rolb
mov
pop
addb
lock
add
mov
add
inc
add
jmp
push
add
push
jp
mov
push
loope
xor
mov
lock
or
shl
add
sub
in
fistl
out
xor
jge
ds
addb
std
mov
popa
pop
pusha
add
loop
mov
outsb
sub
pop
cmp
mov
clc
push
test
sub
add
lods
ret
mov
and
mov
mov
add
mov
add
dec
and
add
mov
mov
mov
cmc
mov
arpl
repz
jecxz
add
mov
fsub
push
mov
or
or
xor
mov
mov
dec
movsb
scas
push
xor
out
sbb
addb
int
xchg
adc
add
cmp
pop
cmp
mov
xchg
mov
rolb
nop
add
jmp
fld
jne
sbb
add
mov
jbe
or
and
mov
add
test
add
add
add
icebp
cmp
jns
jae
sti
sbb
or
add
add
insb
daa
in
pop
and
cmp
sub
mov
add
mov
add
rolb
mov
xor
mov
movsl
fwait
push
nop
add
sub
push
jo
mov
push
inc
clc
add
aas
cmp
dec
mov
xchg
xlat
clc
dec
push
add
push
popa
fstl
mov
mov
add
add
or
pop
dec
pop
fcompl
mov
adc
mov
aad
jmp
dec
ret
sahf
lcall
add
test
fistps
add
mov
sbb
sbb
add
test
push
add
mov
mov
sbb
xchg
insb
xchg
add
jo
mov
ficomps
push
lods
sahf
pop
mov
and
mov
repz
inc
and
out
add
add
pop
dec
inc
add
in
or
add
out
bound
mov
adc
mov
pop
daa
bound
mov
and
cwtl
icebp
popa
insl
push
add
lcall
lret
push
mov
mov
sahf
loop
mov
add
lds
rolb
mov
adc
insb
or
push
jns
test
imul
push
xchg
stc
xchg
pop
mov
inc
lret
ds
addr16
in
inc
xchg
pop
lret
sub
in
xchg
push
jmp
dec
dec
xor
cltd
clc
lahf
xchg
pop
jp
inc
add
mov
addb
and
aaa
xchg
enter
fmuls
aam
sti
ljmp
ffree
or
into
gs
add
mov
insb
xchg
ret
xor
mov
jecxz
addr16
add
jne
xchg
dec
add
mov
call
fwait
scas
ljmp
ret
sahf
into
sub
mov
jecxz
das
in
cwtl
pop
out
out
add
push
push
fs
lods
adc
scas
stos
or
mov
fs
xor
add
fnstsw
mov
cmpsb
stos
cmp
add
mov
fwait
push
push
or
clc
push
mov
mov
mov
jno
inc
add
call
mov
mov
push
les
jnp
add
xor
mov
sbb
test
repnz
loope
and
add
xor
jg
icebp
loopne
mov
mov
add
mov
aas
jne
cwtl
into
ss
and
add
inc
add
dec
xchg
and
add
dec
jbe
pop
out
mov
mov
lret
out
adc
daa
inc
sub
pop
push
or
mov
mov
and
mov
adc
add
xor
mov
pop
bound
mov
mov
or
mov
lcall
dec
lahf
cmp
sahf
inc
sbb
outsb
daa
xor
mov
push
add
cmpsl
in
add
jns
xchg
pop
inc
rolb
mov
repz
fs
jp
cmp
add
cwtl
cmp
mov
or
mov
mov
ds
negb
lods
jge
add
arpl
std
inc
add
xor
mov
pop
je
sbb
add
pop
dec
xor
mov
mov
pop
dec
dec
mov
iret
fwait
pop
push
je
ret
rolb
pop
sahf
mov
jnp
test
insl
mov
jae
movsb
and
mov
lret
mov
add
rolb
cmp
mov
bound
mov
mov
mov
mov
mov
add
xor
lret
cwtl
sbb
mov
mov
js
data16
add
mov
negl
inc
addb
mov
mov
add
mov
test
inc
into
clc
cld
das
or
add
jp
mov
mov
bound
mov
push
mov
mov
test
xchg
lret
pushf
dec
clc
mov
pop
stc
mov
xchg
ficoms
xchg
jnp
mov
addl
imul
sahf
mov
mov
add
inc
jg
loope
inc
xchg
add
jae
pushf
and
mov
dec
outsl
shll
add
loopne
mov
leave
jl
mov
add
ret
jbe
imulb
dec
in
jge
inc
add
in
fistps
inc
icebp
outsl
js
add
mov
add
inc
int
inc
lret
pop
xchg
adc
mov
in
movsb
ret
and
lds
fucomip
push
mov
mov
add
mov
push
int3
dec
mov
enter
mov
push
pop
out
add
xchg
and
stc
loope
add
test
or
and
mov
stc
pusha
add
out
jmp
add
sbb
stos
incb
mov
into
lahf
mov
sbb
je
pusha
add
repnz
add
add
popf
jb
mov
loope
xlat
jbe
ds
adc
mov
and
add
cmp
fs
pop
ficoms
add
and
idiv
arpl
jns
and
loop
mov
arpl
push
jge
push
push
add
out
inc
add
or
add
jmp
sti
mov
insl
out
mov
sub
aaa
dec
jb
mov
imul
lret
mov
xchg
jl
int
xor
cld
icebp
mov
mov
cs
sbb
pop
pop
stc
arpl
popa
sti
cmp
hlt
cltd
mov
fxch
imul
add
mov
jle
sbb
add
repz
pop
push
leave
or
pop
out
mov
xchg
es
push
fstpl
sub
add
push
and
mov
add
pop
mov
sub
mov
ja
add
add
mov
add
mov
fidivrs
cltd
addb
pop
cmp
mov
add
inc
add
bound
mov
mov
dec
leave
leave
pushf
jns
cs
inc
or
out
popa
ja
add
pop
or
add
push
mov
insb
dec
and
test
data16
add
mov
movsb
int3
bound
mov
cs
stos
fimuls
idivb
jge
mov
or
jl
js
outsb
pop
into
sbb
mov
iret
out
or
scas
jle
daa
pop
bound
mov
loope
or
addb
loopne
mov
sarl
dec
cmp
mov
fiadds
mov
or
insl
and
sahf
lds
adc
mov
mov
push
jns
stos
cmp
add
mov
pushf
pusha
add
add
and
jno
std
addr16
movsb
mov
mov
popa
mov
fdivp
ffreep
mov
pop
push
stc
cmp
mov
dec
bound
mov
dec
dec
cltd
rolb
mov
cltd
fmuls
out
sbb
outsb
imul
repnz
fsts
add
inc
inc
loope
lods
je
add
sbb
add
test
dec
mov
stc
pop
outsb
inc
add
das
ficompl
stc
adc
mov
cld
lods
adc
mov
jns
add
mov
adc
mov
test
mov
stos
hlt
test
iret
push
outsb
test
addb
lret
mov
mov
leave
pop
lock
mov
es
mov
mov
add
imul
add
cmp
in
out
das
mov
push
outsb
fcomp
jl
imulb
fildll
int
in
jecxz
popf
stc
xchg
pop
inc
lcall
jnp
out
add
adc
mov
pushf
add
mov
jo
mov
movb
js
adc
add
sub
xorl
cld
mov
insb
add
mov
mov
or
mov
xchg
dec
ficomps
lods
lds
addl
add
in
dec
rolb
mov
add
add
es
pop
sbb
fimuls
push
mov
pop
std
sub
add
xchg
add
cmp
mov
push
jge
mov
out
jne
add
das
sbb
mov
pop
xchg
xchg
sub
add
adc
mov
test
loope
add
push
aam
sti
out
cmc
call
sbb
add
add
daa
addr16
and
daa
dec
or
mov
mov
outsl
jmp
add
aam
sbb
mov
outsb
push
rorl
and
mov
pop
xchg
dec
lret
sbb
into
mov
mov
faddp
add
repz
dec
dec
nop
add
add
enter
jmp
xchg
and
movsl
and
mov
lods
adc
mov
mov
out
or
loopne
mov
sbb
in
or
mov
jb
mov
adc
out
xor
add
lods
js
into
test
xor
mov
mov
out
add
fbld
xor
xchg
add
mov
and
mov
add
outsl
push
add
mov
ljmp
mov
sub
arpl
add
pop
call
or
subl
pop
fmul
sarl
out
popa
jae
mov
mov
push
sub
lds
mov
mov
mov
scas
cmp
add
mov
and
add
mov
add
mov
mov
add
cmp
mov
lock
add
mov
mov
sbb
out
mov
aam
mov
dec
xchg
xchg
sbb
int3
inc
lcall
mov
jno
leave
aaa
rolb
mov
jge
lcall
lods
xchg
daa
sarl
push
sub
inc
add
test
sub
add
jle
lret
aad
push
xchg
movsl
imul
xchg
dec
lcall
push
add
mov
aam
daa
inc
xor
inc
or
addl
lds
add
adc
add
add
mov
dec
xor
add
ret
add
fmulp
daa
dec
int3
cmp
mov
mov
mov
cmp
xlat
cwtl
jo
mov
addb
cmpsb
loopne
mov
mov
gs
sar
push
daa
cmp
add
mov
add
mov
add
mov
cli
xor
push
test
mov
xor
mov
mov
mov
add
loopne
mov
add
add
add
mov
shll
and
add
mov
mov
mov
mov
in
push
pop
pop
fmul
inc
arpl
xchg
lods
outsb
rolb
mov
adcl
lcall
xchg
inc
add
ja
test
imul
pop
insl
out
and
mov
das
push
test
test
mov
stc
ljmp
lret
inc
add
xlat
nop
add
adc
jmp
mov
mov
out
xchg
cltd
jnp
in
add
cmp
imul
insb
mov
ret
dec
xor
xchg
pop
push
add
xchg
sahf
jmp
into
push
mov
pusha
add
mov
rolb
mov
mov
pop
imul
and
mov
adc
mov
mov
movsb
sub
cmc
test
push
inc
rolb
mov
pop
lahf
sub
cmp
jbe
add
mov
pop
dec
mov
scas
and
or
fwait
aas
js
add
or
sub
add
stos
loope
push
xlat
or
push
pop
das
sub
mov
add
sbb
add
pop
push
jecxz
cmp
lahf
fdivs
ss
mov
into
mov
cltd
dec
ljmp
mov
mov
imul
add
mov
inc
ficomps
jno
add
cmpsl
pusha
add
dec
sub
push
or
inc
mov
aad
jb
mov
and
and
cmpsb
xchg
add
bound
mov
ss
ds
daa
add
iret
or
push
add
mov
xlat
addb
pop
jb
mov
cmp
out
popf
mov
jns
addl
out
xchg
into
pusha
add
or
sub
cmpsl
mov
rolb
mov
fisubl
add
ret
jae
xchg
add
sub
mov
sub
cmpsb
dec
xchg
add
mov
add
add
hlt
int
mov
mov
jg
add
jl
insl
and
dec
insl
sbb
and
adcl
push
jg
add
nop
add
sti
test
add
cli
hlt
push
rolb
mov
rolb
mov
pop
iret
lds
ja
cmp
jle
paddsw
hlt
pop
dec
pop
jo
mov
add
mov
jl
dec
mov
aad
lcall
sub
rolb
mov
les
and
cwtl
jmp
add
mov
inc
lods
mov
or
daa
pusha
add
add
mov
or
cmp
mov
jmp
out
mov
add
xor
mov
faddl
adc
aaa
rolb
mov
mov
mov
and
in
add
mov
mov
add
sub
mov
add
insb
sarl
mov
inc
mov
cmp
sub
enter
fwait
mov
xchg
cmpl
cld
pop
data16
add
dec
insl
test
cmp
or
jo
mov
cmc
dec
sahf
jne
sbb
hlt
shrl
pusha
add
cmc
ss
je
xchg
lret
aaa
bound
mov
lods
mov
push
add
mov
mov
dec
xchg
mov
mov
jns
or
mov
mov
mov
popa
daa
std
xor
mov
clc
rolb
or
cmp
or
repz
in
addb
adc
insb
sbb
mov
push
and
int
cli
repz
hlt
sub
test
push
pop
je
sub
sbb
out
jb
mov
adc
mov
add
mov
mov
add
mov
loope
daa
jbe
ret
cmp
and
popa
and
into
test
adc
mov
add
in
dec
sub
leave
add
mov
sbb
pop
shll
add
jp
add
iret
sbb
dec
aaa
xor
add
aaa
loope
cmp
mov
dec
aam
insb
sbb
inc
sub
add
pop
adc
loope
fidivrl
add
test
add
aam
and
add
enter
dec
mov
add
mov
nop
add
mov
jo
mov
add
push
inc
add
add
push
add
add
cs
testl
or
mov
sbb
cmc
push
jns
mov
fimull
arpl
xor
jge
sahf
test
not
lcall
add
jecxz
addb
arpl
add
sub
add
mov
sbb
imul
leave
andl
movb
cmp
fildll
jmp
jmp
add
add
sarl
sti
add
mov
mov
mov
fnstenv
cwtl
mov
mov
stc
sbb
lret
mov
add
add
pmaxsw
jmp
sbb
push
or
add
imul
xchg
bswap
pop
push
add
aas
add
pop
in
add
cmp
jb
mov
fadds
addr16
mov
aaa
outsb
pop
nop
add
lahf
add
fld
popa
imul
fbstp
sub
mov
mov
add
mov
mov
add
add
popa
cli
insl
testb
scas
cmc
ljmp
cmp
mov
jl
inc
add
dec
dec
push
repnz
sub
jbe
add
clc
pop
dec
test
push
push
push
push
aad
xor
repnz
add
shll
andps
add
mov
call
mov
repz
mov
mov
add
xor
xlat
mov
aam
add
mov
icebp
push
rolb
mov
jl
insb
dec
movsb
je
daa
addb
mov
mov
insl
mov
add
push
rolb
mov
aaa
daa
add
inc
addb
iret
stc
push
fs
aad
sbb
repz
dec
mov
mov
lret
mov
adc
lcall
mov
repnz
cmpsl
xchg
push
movsb
test
lods
add
test
mov
fs
ja
fstl
mov
mov
subl
stos
icebp
sbb
fcmovnb
add
iret
das
rolb
mov
mov
sbb
dec
jmp
les
add
add
push
mov
int
sub
xchg
jle
dec
insb
or
jo
mov
mov
sti
test
mov
fs
adc
mov
mov
mov
das
jg
cld
jo
mov
pop
cmp
mov
shll
dec
jecxz
mov
inc
add
mov
call
out
cmp
sbb
dec
pop
sub
in
into
popf
jo
mov
repnz
and
fstps
jp
or
inc
cmc
imul
add
pop
mov
mov
mov
sbb
dec
repnz
jo
mov
add
and
je
sbb
add
in
lret
out
pop
xor
mov
in
push
dec
sbb
pop
lcall
sbb
cwtl
adc
ljmp
insl
stos
jb
mov
xor
adc
push
loop
mov
gs
nop
add
add
push
mov
sub
inc
xor
mov
push
add
ds
cmp
add
jmp
add
jmp
test
mov
sbbl
adc
mov
arpl
xchg
push
dec
dec
jle
popf
lret
fimuls
out
pop
mov
sub
add
int
cli
and
mov
adc
inc
add
add
cwtl
jmp
mov
mov
xlat
mov
add
mov
sbb
mov
mov
in
add
mov
pop
aas
and
sbb
push
jno
add
mov
push
mov
dec
roll
jge
stos
jg
sub
or
cwtl
xor
pop
xor
sub
sbb
cmp
add
sub
in
pop
push
inc
and
mov
dec
es
pop
push
mov
inc
mov
xor
in
pop
inc
and
aam
pop
movsl
rolb
mov
ret
sub
shll
daa
es
out
shr
xor
mov
and
add
mov
loope
cmp
out
inc
add
ds
push
mov
mov
add
mov
aad
clc
xchg
loope
mov
rolb
mov
add
mov
push
jae
mov
mov
adc
pop
inc
pop
fwait
mov
add
push
outsl
xchg
enter
mov
outsl
xchg
add
mov
mov
push
add
adc
mov
call
std
movsl
lock
mov
mov
shll
mov
adc
pop
xor
mov
fimuls
push
insb
inc
add
pop
xor
mov
add
add
mov
mov
mov
mov
loop
mov
add
arpl
add
leave
inc
cmp
dec
cmpsb
mov
push
dec
cmp
addb
jg
or
add
mov
add
mov
add
ficoml
leave
dec
cmp
add
mov
mov
add
cmp
jp
add
add
add
das
sbb
jg
push
mov
loop
mov
nop
add
aas
dec
xlat
add
addb
cmpsl
xlat
push
fwait
mov
mov
add
add
js
cli
repz
in
ret
push
cmp
or
lret
add
mov
sbb
das
sub
add
pusha
add
xor
mov
mov
icebp
pop
insl
mov
iret
pop
loope
pop
sub
scas
add
mov
xor
mov
pop
leave
stc
int
inc
add
lret
dec
jg
iret
addb
ja
add
hlt
mov
test
push
movsb
sub
clc
pop
xor
je
pop
sti
sbb
push
mov
xchg
adc
mov
adc
push
mov
loop
mov
sti
dec
fstl
add
inc
cmp
add
jb
mov
jo
mov
repz
mov
mov
bound
mov
pop
arpl
inc
or
push
push
fadds
mov
adc
mov
cmpsl
adc
cld
pop
daa
jmp
add
add
add
xor
pop
insb
fdivs
add
xchg
addl
pop
enter
add
ficompl
adcl
mov
fwait
pop
in
mov
add
test
sbb
iret
sti
or
dec
je
sub
add
mov
add
dec
cmpsl
addr16
sbbl
dec
cmpsl
sbb
add
pop
icebp
lret
mov
jmp
pop
outsl
lea
mov
xchg
inc
add
mov
xchg
cli
add
movsl
fnstcw
sahf
and
mov
push
dec
sbb
mov
in
scas
popf
adc
mov
jbe
add
add
mov
mov
adc
fdivrl
cmp
jb
mov
dec
sbb
push
add
pop
lahf
cmpsl
lea
cmp
dec
lds
inc
mov
in
cmp
inc
push
add
test
jns
xchg
fsubr
mov
icebp
std
cmp
ss
inc
add
dec
cmpsb
mov
xchg
popf
les
addr16
or
pop
mov
push
pmullw
rolb
xlat
add
and
les
adc
mov
add
adc
mov
test
inc
xchg
add
inc
enter
mov
or
mov
mov
adc
mov
sbb
movsl
ret
add
mov
repnz
mov
ljmp
push
cmpsl
inc
add
mov
out
xchg
mov
add
sub
mov
repz
add
mov
sub
add
push
dec
or
inc
iret
jnp
sbb
add
cld
jge
pop
movsl
pop
mov
ss
dec
aas
and
es
push
add
or
mov
push
fdiv
adc
and
int
jge
pop
iret
mov
add
mov
pop
xchg
add
dec
add
or
ds
imul
rolb
mov
cmc
mov
fucomi
push
loope
push
adc
jne
fstps
jecxz
add
fnstenv
add
pop
cmp
adc
push
arpl
mov
pusha
add
mov
mov
cmp
imul
inc
pusha
add
jno
push
add
add
pop
mov
insl
jp
add
mov
mov
addb
or
adc
mov
push
addr16
sar
mov
add
movsl
adc
mov
fs
mov
xor
mov
xlat
divps
jo
mov
mov
xchg
xchg
mov
jle
icebp
mov
pop
mov
mov
xor
mov
add
rcrl
xchg
add
mov
sub
mov
add
mov
add
addr16
pop
inc
fwait
sub
lcall
repnz
fs
mov
xor
mov
jge
addb
dec
mov
insl
rolb
mov
mov
lret
cmpsb
xor
dec
cmp
loope
mov
jle
inc
cmp
scas
gs
add
mov
cmp
mov
sub
daa
testl
mov
test
or
mov
push
and
adc
mov
aad
sbb
jne
loop
mov
repnz
out
xchg
mov
xchg
enter
mov
add
inc
and
mov
mov
push
insb
rolb
mov
daa
push
xor
fisubl
xor
mov
clc
fwait
xchg
jo
mov
js
mov
and
shll
lret
xchg
mov
mov
adc
mov
inc
add
mov
pop
test
mov
pop
scas
xchg
dec
jne
mov
mov
mov
mov
mov
outsb
sbb
mov
sar
mov
jmp
sbb
add
pushf
or
test
add
jns
add
arpl
mov
cmp
int3
lcall
inc
add
fxch
xchg
dec
je
adc
test
adc
pop
outsl
lds
xor
mov
pop
adc
mov
adc
jg
lock
in
loop
mov
push
sbb
repz
and
add
push
push
rolb
mov
dec
push
pop
pop
dec
daa
fmul
pop
mov
mov
ficompl
pusha
add
xchg
fistpl
popa
lret
lea
dec
dec
jae
cmpsl
jle
push
je
test
add
dec
xchg
mov
mov
pop
sub
dec
insl
cmp
add
lods
hlt
imulb
add
int3
jno
in
cmpsb
push
cmp
jle
insb
jecxz
pop
dec
daa
xchg
mov
pop
insl
pop
test
add
cmc
frstor
mov
add
loop
mov
mov
sbb
inc
sbb
push
lcall
lahf
jo
mov
les
add
inc
xchg
jae
xchg
scas
repz
mov
test
jle
add
xchg
sbb
mov
adc
mov
and
mov
mov
add
pop
shll
imul
test
add
mov
add
lret
movsl
out
mov
pop
push
add
push
add
mov
add
sub
add
fs
jecxz
push
add
ds
add
negl
sub
add
cld
push
test
mov
push
add
test
and
mov
mov
sub
inc
insb
pushf
jb
mov
pcmpeqd
rolb
mov
add
scas
dec
and
aaa
pop
jne
xchg
in
push
mov
scas
xchg
ss
lret
ja
es
mov
sbb
xchg
add
xor
push
sti
xor
mov
cmpsb
cs
adc
or
add
mov
mov
mov
negl
add
xchg
movsb
mov
mov
pop
xchg
fistl
mov
popf
int3
fists
cld
shl
mov
xchg
push
das
sub
add
jb
mov
xchg
andl
addb
pushf
and
inc
add
push
cmpsl
pushf
mov
add
inc
push
pop
cmpsl
hlt
inc
and
and
push
mov
cltd
std
ljmp
lods
xor
aas
xor
loop
mov
adc
adc
mov
mov
fyl2xp1
je
inc
lcall
loopne
mov
mov
mov
or
leave
adc
pop
mov
mov
jb
mov
and
mov
mov
add
ss
push
repnz
cmp
jno
dec
in
add
mov
xlat
push
iret
repz
mov
mov
or
sub
mov
mov
mov
add
ja
out
loope
movsb
pop
push
jnp
inc
test
mov
scas
outsl
aad
das
nop
add
push
jg
pusha
add
test
add
pop
push
scas
clc
arpl
ja
add
jns,pn
mulb
mov
rcll
or
add
repnz
xchg
dec
mov
pop
into
sarl
test
ret
xor
mov
xor
jne
xchg
adc
mov
inc
xorl
xor
mov
and
mov
mov
insl
lea
mov
mov
sbb
cmp
cwtl
mov
add
stos
push
add
xor
pop
test
adc
mov
ret
test
sub
pop
aad
adc
std
fcompl
push
add
jo
mov
mul
add
sbb
cmpsl
cmp
mov
xchg
js
jae
mov
add
movsl
pop
push
or
les
insl
jne
mov
loop
mov
xor
mov
fbld
int
sub
add
and
les
push
mov
mov
or
add
in
jns
add
cmp
and
add
mov
mov
mov
mov
push
add
out
addb
jbe
ret
push
dec
loope
pop
in
or
dec
or
mov
clc
push
pop
adc
add
in
jmp
or
outsb
js
test
add
pop
movsb
lret
add
and
mov
xor
lret
pop
dec
cmp
jae
inc
dec
dec
inc
and
scas
xchg
imul
movsl
mov
ds
ret
in
pusha
add
fldl
daa
xor
mov
rolb
cmp
mov
addb
aad
daa
sub
add
add
pop
or
stc
sbb
mov
add
repnz
add
lret
mov
mov
ret
mov
add
mov
pop
push
mov
lret
add
add
out
or
lods
sarl
inc
adc
cltd
pusha
add
hlt
dec
mov
enter
xchg
subl
ret
dec
mov
mov
mov
imul
add
cwtl
dec
xchg
jge
jmp
add
mov
fs
dec
inc
addb
mov
into
sti
loope
cltd
push
scas
fisubrs
cmp
mov
cmp
lds
repz
mov
push
add
mov
push
add
loopne
mov
mov
add
cli
popa
enter
dec
adc
mov
inc
add
lret
mov
aam
mov
cmp
lea
test
mov
add
mov
xor
cmp
add
mov
add
dec
lahf
jl
xchg
lret
call
and
push
popa
loope
out
add
push
and
mov
pop
mov
fldenv
iret
xor
mov
and
mov
loope
mov
lock
or
mov
mov
imul
in
jmp
xor
mov
mov
jmp
sub
jmp
ret
insl
add
sub
divb
mov
jns
pop
cld
jp
mov
pop
sahf
enter
ret
push
addb
xchg
cltd
or
add
xchg
in
test
xor
mov
aaa
shr
push
sbb
pop
xchg
add
inc
add
fistps
mov
xor
mov
lods
js
push
mov
add
scas
inc
sbb
mov
add
and
mov
cli
daa
or
ja
inc
scas
push
sub
adc
sub
mov
mov
das
in
add
into
js
add
ret
sub
mov
mov
jle
into
jle
add
lahf
addr16
mov
inc
add
add
xlat
inc
pop
gs
xor
mov
mov
ja
add
cld
dec
xor
and
mov
in
ljmp
mov
and
lret
in
push
ljmp
or
mov
add
pop
or
insb
or
insb
bound
mov
add
cmp
sub
fdivrl
mov
mov
adc
stos
jns
cmpsl
lahf
jnp
lret
or
mov
sub
dec
movsl
int3
and
pushf
xchg
add
das
pop
scas
push
addb
mov
aam
sub
jmp
mov
xchg
inc
inc
xchg
jle
add
std
dec
sub
and
xchg
jmp
dec
add
mov
daa
dec
imul
inc
inc
fcomp
rolb
mov
lds
pop
stos
aad
mov
xor
mov
and
mov
add
xor
add
push
jg
add
add
add
mov
lock
or
dec
xor
mov
adc
test
sub
inc
int3
insl
cmp
dec
and
mov
into
rolb
jae
movsl
xlat
xlat
and
dec
pop
jae
mov
mov
add
add
sub
mov
mov
sahf
mov
push
dec
and
addr16
rolb
mov
xchg
inc
adc
mov
add
mov
inc
inc
mov
out
inc
cmp
mov
xchg
std
inc
test
add
loope
jle
cld
mov
cmp
add
cmc
das
lret
iret
fs
jbe
jb
mov
pop
lds
pop
xor
shrl
mov
fs
push
rolb
mov
call
in
jge
add
add
in
addb
cli
push
add
add
sub
add
mov
add
push
pop
dec
pop
xchg
ja
movsb
add
xchg
inc
add
cmpsl
es
sbb
icebp
xchg
fnsave
dec
ds
push
cmp
ret
xchg
leave
popf
and
add
or
bound
mov
add
mov
jno
add
pop
int3
lds
inc
movb
push
add
ret
push
or
xchg
lds
and
mov
mov
mov
add
mov
add
jbe
mov
mov
add
add
mov
add
sub
pop
sub
fstpt
add
in
push
lcall
lods
test
out
imul
and
scas
cmp
lods
sub
outsl
xor
fucomp
xlat
stc
mov
push
cmpsl
sub
mov
add
pushf
les
add
lods
and
add
mov
cs
mov
mov
popf
repz
mov
push
cld
shl
add
dec
in
aad
mov
fsubl
lretw
outsb
mov
add
sbb
mov
mov
mov
cmpsb
or
sub
add
mov
adc
mov
test
jmp
clc
xor
or
out
dec
jno
mov
xor
mov
add
mov
mov
in
rolb
mov
notl
sub
pop
lret
push
jge
or
mov
mov
lods
mov
mov
mov
mov
out
jne
add
mov
add
add
sbb
or
xchg
cmp
mov
add
add
std
fxch
es
mov
cmp
jae
cmp
add
cld
sub
add
adc
pop
lods
jmp
in
call
rolb
mov
xor
into
mov
nop
pop
add
daa
in
push
xchg
adc
mov
mov
mov
into
jecxz
pop
jmp
mov
rolb
stos
or
mov
mov
mov
addb
rolb
das
sti
inc
adc
je
imul
out
add
or
or
inc
aaa
adc
int
pop
jecxz
lods
jg
mov
mov
mov
add
add
loopne
mov
cmp
mov
cltd
movsl
sub
scas
add
xchg
jecxz
add
rolb
mov
in
add
add
add
adc
testl
pop
mov
into
cmp
or
ljmp
aaa
pop
jns
andl
lods
mov
scas
mov
arpl
insb
insb
push
mov
or
cmp
jl
test
aas
adc
add
adc
jecxz
push
add
loopne
mov
mov
lods
dec
sbb
loop
mov
cs
dec
jge
mov
pusha
add
imul
movb
pushl
add
push
ljmp
lret
int3
rolb
cmp
add
jae
pop
add
mov
popf
in
rcll
xor
je
psraw
add
std
addb
adc
mov
js
push
add
rolb
mov
push
or
repnz
mov
int3
lret
mov
fadds
stos
cmp
loopne
mov
push
jl
mov
clc
mov
jae
or
in
mov
roll
mov
shll
bound
mov
cmp
cmp
lea
outsl
push
add
add
xlat
int3
lock
xlat
and
mov
pop
repnz
ss
fwait
call
mov
sub
add
mov
add
xchg
adc
dec
mov
ss
push
add
jb
mov
mov
xor
jecxz
xor
mov
add
mov
ss
lret
fidivs
mov
ljmp
add
jns
hlt
pushf
and
pop
cli
addb
scas
cs
mov
mov
inc
in
das
mov
mov
mov
mull
adc
addr16
inc
add
push
mov
mov
add
jp
cmc
mov
lret
mov
loopne
mov
xchg
insb
test
mov
dec
or
lock
mov
pop
add
je
add
mov
sbb
push
pop
xchg
jl
rolb
mov
cmp
pop
mov
mov
cmpsb
sti
jnp
add
fldenv
mov
jmp
add
inc
cmovl
push
testb
mov
add
mov
jl
or
nop
add
loopne
mov
push
inc
rolb
xchg
pop
pusha
add
push
or
xor
add
xchg
insl
and
add
and
mov
add
mov
xchg
add
or
pop
or
out
fcmovne
arpl
dec
xchg
mov
inc
nop
add
adc
mov
add
push
ljmp
add
mov
mov
add
cld
popf
int3
dec
cmp
lret
mov
mov
xchg
pop
push
sub
adc
add
cs
call
jns
rolb
sti
cwtl
inc
add
lods
xchg
mulb
stc
add
mov
in
imul
mov
jo
mov
add
cmpsb
xchg
push
imul
push
adcl
rolb
mov
mov
sub
rorl
and
rolb
inc
arpl
aas
repz
outsb
push
sbb
gs
push
xchg
sti
lea
mov
mov
xor
mov
mov
pop
mov
dec
aam
insl
jo
mov
scas
mov
push
add
add
hlt
cltd
shl
icebp
outsl
mov
mov
iret
dec
ja
dec
sbb
mov
in
ret
xchg
inc
inc
mov
sub
add
pop
into
jge
sti
idiv
or
add
lahf
pop
and
jge
leave
gs
lods
mov
mov
jg
jl
jae
add
rolb
mov
add
js
or
add
mov
aas
cmp
ja
cmp
dec
and
mov
add
or
add
rolb
mov
add
mov
jmp
insb
xor
mov
xchg
je
jno
aad
mov
mov
scas
pop
jbe
cmpsb
xor
add
cmp
cmp
nop
add
sbbl
fcmove
out
in
push
xor
add
mov
ret
add
push
add
mov
add
mov
sub
mov
mov
das
cli
adc
add
dec
sahf
daa
add
or
out
cmp
mov
test
inc
out
mov
idivl
test
add
add
dec
cmp
addb
fwait
mov
xchg
lret
mov
or
test
repz
sub
add
in
dec
ja
je
popf
push
push
add
call
jmp
jo
mov
ret
adc
mov
xchg
add
gs
push
sarl
add
sbb
stc
cmpsb
jge
add
add
clc
add
jns
fstpt
mov
mov
push
sbb
mov
rolb
dec
rcll
adc
adc
mov
jnp
fistps
rolb
cs
mov
xchg
lahf
loopne
mov
not
addr16
outsb
push
inc
mov
mov
sub
pushf
ds
mov
push
inc
xchg
rolb
mov
pop
xchg
fisttpll
xchg
xchg
dec
sub
inc
add
add
mov
into
adc
jne
adc
fadds
rolb
mov
mov
mov
add
aam
add
lahf
or
jo
mov
mov
popf
mov
xor
mov
jmp
add
xchg
lea
icebp
mov
add
js
or
cmp
out
dec
lcall
insb
in
mov
mov
xchg
add
cmp
mov
cmc
imul
sbb
add
cmp
xchg
sbb
daa
inc
add
mov
jmp
mov
jge
pop
dec
xor
mov
jno
rcll
adc
mov
ss
and
mov
add
mov
icebp
jecxz
notl
mov
push
iret
in
in
inc
mov
add
xchg
add
test
mov
jb
mov
in
sti
inc
inc
filds
add
mov
enter
mov
push
addb
sbb
cmp
jnp
push
and
mov
xchg
cltd
xor
add
daa
adc
insb
call
mov
xchg
xchg
inc
clc
add
lret
jge
roll
insl
adc
mov
sbb
into
es
lods
push
mov
add
mov
add
test
pop
adc
sbb
add
arpl
cld
enter
dec
pop
test
xchg
add
inc
fimuls
pop
push
je
sbb
rcll
pop
mov
mov
inc
popa
sbbl
mov
xchg
jo
mov
ljmp
add
outsl
pop
ret
outsl
pushf
or
xor
mov
jns
push
xor
mov
mov
les
mov
mov
mov
and
xor
add
sti
dec
lahf
in
js
add
ret
leave
jle
add
insb
pop
enter
ret
push
jne
add
addr16
ja
xchg
pop
sbb
iret
pop
mov
cmp
dec
adc
mov
cmp
adc
shl
cmc
imulb
lds
sbb
sti
ss
arpl
imul
lret
ret
cmp
int3
sbb
ret
loop
mov
or
fwait
nop
add
xor
mov
out
pop
addb
cmpsb
insb
rcll
add
outsl
push
inc
inc
lret
movsl
add
sub
mov
mov
mov
add
enter
mov
std
into
cmp
add
stos
inc
lret
icebp
or
mov
add
sub
add
mov
xchg
orl
stos
fucomp
cwtl
push
fs
ljmp
and
shll
test
fistpll
sbb
jp
mov
roll
sbb
mov
xor
add
or
pop
pop
mov
outsl
aas
in
add
in
jge
jb
mov
fisubl
add
adc
leave
outsl
inc
roll
add
add
sahf
decb
lods
stc
xor
rcll
add
out
jne
mov
push
add
push
push
fidivl
nop
add
mov
es
mov
xor
mov
aad
rolb
mov
lahf
pop
inc
iret
pop
fdivr
mov
addb
in
int
es
or
popa
aam
add
movsl
sub
add
mov
jge
xchg
sub
adc
mov
add
xor
mov
push
movups
mov
cmp
add
nop
add
inc
xlat
xor
and
jp
js
lds
fnstenv
add
mov
cs
xchg
cmpsb
push
xchg
mov
test
push
or
cltd
xadd
mov
imul
pop
cmpsl
aam
stos
test
test
in
imul
popa
daa
mov
mov
rolb
sub
add
mov
vpsllw
into
jge
roll
mov
ret
addr16
xlat
xchg
stos
gs
or
or
fidivs
mov
xor
fisttps
fs
jecxz
imul
lahf
jle
add
mov
mov
sbb
fnstenv
into
ds
add
mov
dec
data16
mov
pop
pop
push
add
add
jns
add
cmc
sbb
pop
lock
xchg
adc
mov
sbb
add
mov
mov
add
movsl
inc
add
sbb
add
or
daa
jmp
lret
add
xchg
add
rolb
mov
add
cwtl
jmp
cmpsl
or
pop
add
lret
mov
adc
mov
aas
jo
mov
add
mov
nop
add
fnstcw
js
xlat
enter
mov
sub
inc
in
inc
popf
push
movsl
shrl
cld
gs
lea
add
add
test
decl
lret
sbb
insl
ja
js
scas
xchg
mov
mov
jb
mov
je
push
aaa
pop
pusha
add
sbb
into
je
xchg
in
add
ljmp
dec
in
dec
outsb
and
mov
xchg
jle
lcall
mov
cmp
dec
mov
add
aaa
cmp
scas
mov
stc
lods
mov
stc
add
mov
cmpsb
mov
add
mov
add
lret
jbe
gs
mov
int3
clc
in
jbe
xchg
aas
jle
add
lcall
sub
cld
aam
pop
sahf
mov
mov
dec
fisubl
pop
data16
xchg
fcomi
out
std
movups
mov
add
cs
jno
xchg
pop
leave
jb
mov
add
jbe
rolb
mov
sarl
sub
mov
mov
mov
jo
mov
fwait
es
mov
add
mov
mov
les
jae
jno
add
movsl
loope
rolb
xor
icebp
scas
mov
repnz
lods
gs
xor
add
cltd
movsl
sbb
fnstsw
mov
add
mov
add
mov
cmpsl
test
and
mov
stc
jnp
addb
inc
add
mull
add
cmp
inc
fidivrs
adc
mov
mov
adc
mov
mov
aaa
daa
cmp
and
mov
jno
cld
leave
sbb
stc
popf
notb
adc
repz
rep
dec
cwtl
aaa
xor
xlat
decl
pop
dec
out
ja
lea
jl
dec
push
or
icebp
mov
mov
imul
xchg
popf
push
push
mov
push
ficomps
lea
add
mov
adc
lcall
lods
pop
sub
sbb
addb
jmp
inc
mov
cmc
jbe
adc
jg
jp
xor
pop
stos
popf
pusha
add
add
adc
pop
jmp
icebp
adc
sbb
call
int
add
mov
lahf
mov
call
mov
int3
inc
loopne
mov
add
add
mov
lcall
loopne
mov
xor
pop
addr16
mov
mov
mov
iret
xor
or
hlt
in
cld
cmp
xchg
call
pop
loop
mov
jnp
lods
sti
jae
jecxz
aas
adc
mov
add
mov
jbe
lds
push
or
sub
xor
xchg
inc
ss
jg
pop
cmp
sub
clc
rolb
mov
popl
dec
ret
and
jbe
test
jb
mov
int3
push
cmp
mov
mov
mov
add
test
push
add
pusha
add
adc
mov
lret
pop
xchg
xlat
xor
mov
xor
pop
xchg
rolb
popa
test
add
mov
add
push
bts
pop
fnstcw
fbstp
add
sub
addb
popf
push
lea
or
sti
jnp
and
add
add
jecxz
jo
mov
mov
mov
shrl
jne
pop
push
mov
inc
add
out
fmulp
xor
cmp
dec
in
repnz
in
cmp
lahf
jo
mov
add
or
addb
mov
insb
imul
add
sti
enter
cmp
sbb
mov
pop
in
imull
lahf
fcoml
inc
stos
shrl
leave
in
mulb
add
rorl
push
add
mov
mov
push
add
mov
addr16
movsb
mov
cmp
jp
add
out
in
cltd
cmp
jne
aas
xchg
rolb
jo
mov
push
sub
sbb
cmpl
les
loope
xchg
adc
cld
aad
or
sbb
lahf
mov
or
add
xor
mov
dec
stos
lret
lret
add
mov
dec
pop
or
add
xor
mov
add
add
sub
add
xchg
fnstenv
add
insl
icebp
int3
sahf
dec
cli
cli
or
mov
cmp
std
dec
xor
mov
mov
mov
addr16
mov
std
add
mov
sbb
loop
mov
fs
mov
pop
clc
mov
xchg
aam
add
outsl
out
fisttps
xor
add
sbb
mov
scas
call
or
maxps
mov
xchg
xor
push
test
lds
mov
xor
clc
and
add
mov
xchg
sbb
push
xor
mov
add
adc
out
mov
mov
mov
push
sub
add
xor
das
test
push
sbb
inc
adc
or
add
fwait
ret
sub
add
mov
mov
add
xlat
loope
and
add
testb
stos
mov
pop
lea
add
test
or
sub
add
xlat
lcall
mov
xor
popf
pop
xlat
aaa
mov
insl
das
iret
rolb
mov
xor
mov
jnp
cli
mov
popf
or
movsl
aas
pop
ja
xor
add
jo
mov
mov
dec
jge
mul
in
jl
rcll
mov
cmp
js
or
push
xchg
mov
lret
and
mov
aas
cmp
popf
inc
xchg
fimuls
mov
notl
add
loope
sbb
mov
jae
add
xchg
cmp
add
jbe
add
mov
insb
aaa
repz
jae
add
push
push
pop
pop
cmp
add
mov
js
xchg
add
add
jne
or
jnp
ret
mov
or
jb
mov
mov
adc
pop
jo
mov
add
ficoms
push
lods
movsl
xchg
add
lods
sub
sub
cmpsb
push
xchg
push
pop
pop
out
add
xchg
jae
add
sub
les
jnp
xchg
aas
imul
divb
mov
mov
loopne
mov
ljmpw
lds
and
iret
pop
cmp
jg
mov
inc
insb
add
mov
add
jae
scas
ret
add
add
sahf
dec
lcall
dec
jo
mov
add
stc
in
gs
add
cs
add
cmpsl
ror
stc
test
push
push
sub
xor
mov
mov
clc
cmp
dec
stos
mov
inc
adc
mov
addb
mov
mov
and
or
or
rolb
mov
pop
adc
adcl
add
into
iret
or
cwtl
ja
cmp
add
xchg
cmpsl
jne
add
insl
adc
mov
jo
mov
push
out
jg
das
ret
jg
xchg
cmpsb
int
cmp
cld
jecxz
jmp
mov
push
mov
add
decl
jne
xor
xor
lahf
push
aas
gs
nop
add
xchg
inc
ret
fsubr
mov
jle
or
sub
jl
xlat
mov
decb
fisttpl
je
aad
sbb
and
mov
fisttps
mov
add
ja
lea
add
add
or
fwait
in
rolb
mov
sub
xchg
add
xor
mov
scas
jl
int
xchg
scas
cmp
sbb
stc
jno
arpl
adc
lret
mov
mov
rolb
mov
insb
bound
mov
cmpsl
add
dec
scas
sti
inc
adc
icebp
xor
mov
ljmp
imul
aas
sbb
add
fsubs
xchg
inc
clc
adc
mov
jle
pushl
cmp
ror
jl
mov
add
or
pop
and
les
xchg
lock
add
mov
push
add
ds
ffreep
int
add
pop
adc
mov
mov
mov
rcrl
pop
dec
adc
mov
mov
cli
dec
mov
sub
addb
jg
inc
add
and
mov
loopne
mov
add
jg
fidivl
mov
mov
ror
divl
aad
repnz
lea
vcmppd
sbb
out
add
insb
xlat
fwait
jo
mov
stos
jmp
dec
into
iret
lock
push
push
add
add
clc
in
testb
mov
sbb
inc
addb
add
mov
mov
mov
xchg
sub
jp
inc
ret
je,pn
int
movl
js
fcmovne
fwait
cli
repz
add
xor
mov
add
add
mov
mov
add
push
pop
lock
jle
inc
mov
scas
scas
xchg
add
aam
mov
or
mov
mov
adc
push
cmc
mov
mov
mov
dec
jno
jmp
mov
mov
add
cmp
in
lock
push
add
mov
bound
mov
ds
mov
xchg
mov
aam
cltd
mov
leave
fwait
insb
inc
add
add
aaa
adc
mov
add
sub
fs
xchg
fcomps
imul
push
push
add
fimuls
jg
mov
pushf
cli
aaa
mov
add
data16
sbbl
push
loop
mov
xor
add
push
or
int
cltd
jo
mov
test
add
mov
lds
mov
sbb
rcrl
popa
sbb
add
into
mov
push
inc
dec
ret
stc
imul
loop
mov
js
sbb
and
mov
mov
adc
add
or
movsl
stos
fidivrs
lock
fs
xorl
inc
push
mov
add
in
cmp
subl
pop
sbb
pop
sbb
cwtl
movsb
in
dec
test
pop
ret
popf
daa
sbb
xchg
dec
cmp
cmp
jge
outsb
lock
mov
dec
inc
add
out
jl
mov
and
mov
xor
pop
inc
xor
lods
int
out
rcrl
jnp
jg
fldl
in
movsl
inc
stos
mov
rolb
mov
and
iret
sbb
stos
xchg
add
mov
data16
filds
add
add
add
xchg
fldl
pop
dec
pop
mov
add
jg
adc
adc
mov
add
mov
rep
sbb
mov
mov
fidivrs
add
lock
popf
sbb
sub
mov
ljmp
add
sahf
sbb
add
push
push
push
pop
pop
incl
or
add
loopne
mov
jl
outsl
gs
subl
add
jns
add
mov
xchg
mov
add
xchg
jmp
dec
movsl
sbb
jp
fldl
sub
xor
pop
inc
add
mov
movsb
sbb
inc
scas
shrl
mov
cmp
frstor
add
and
mov
scas
out
add
mov
jmp
add
inc
pop
mov
jl
sub
add
xchg
loopne
mov
pop
cld
push
daa
sub
mov
push
add
sbb
push
xchg
je
lret
sub
jne
xchg
int
xchg
and
mov
add
data16
aaa
cmpsl
in
mov
lcall
add
lock
xchg
inc
decl
ficoms
mov
ljmp
imul
arpl
cmc
fcomi
add
add
outsb
addb
jno
add
int3
sbb
repnz
and
push
sbb
lret
push
es
mov
pop
icebp
movsl
sub
xlat
push
imulb
mov
stc
mov
or
fwait
xchg
popa
xchg
sbb
int3
shr
xchg
addl
fstl
mov
addb
mov
iret
movl
scas
adc
mov
mov
add
in
imul
xor
outsl
lcall
xor
mov
mov
enter
xchg
je
add
fldcw
add
scas
mov
call
add
in
or
int
xor
xchg
xchg
in
or
in
push
mov
lcall
in
test
adc
mov
ds
mov
mov
mov
inc
add
dec
and
pusha
add
mov
add
inc
or
adc
mov
mov
add
mov
lcall
sti
mov
add
mov
xlat
movsl
mov
add
add
mov
stc
pop
sub
inc
out
sub
in
sub
sub
or
jbe
rolb
mov
in
inc
push
imull
mov
addb
rolb
dec
decl
loopne
mov
aas
add
mov
add
in
dec
lahf
ds
cmp
pop
inc
out
popa
mov
adc
add
mov
inc
push
insl
lods
push
cmp
sub
jl
ret
jno
ljmp
add
imul
bound
mov
xor
mov
add
cmp
pop
in
dec
fstpl
jmp
mov
cmp
add
add
xchg
stc
dec
push
push
dec
add
pop
lcall
es
adc
popf
daa
xchg
aas
movsl
mov
push
add
xor
ret
cs
lcall
mov
in
mov
add
mov
mov
inc
scas
sub
add
mov
mov
xchg
mov
and
rolb
insl
sub
pop
movsl
xchg
rol
inc
add
jmp
cwtl
nop
add
mov
mov
rcll
fsubrs
imul
dec
loope,pn
test
pop
sub
xchg
orps
mov
pop
out
sub
xchg
or
out
xor
add
jp
xor
mov
mov
jnp
into
xchg
notl
rolb
mov
sbb
outsl
addr16
lock
inc
mov
in
and
dec
push
sbb
add
addr16
cmp
call
push
inc
sbb
mov
bound
mov
xor
jb
mov
add
cmp
loop
mov
add
mov
xor
mov
enter
repz
cmp
add
addb
fistps
and
xor
pop
pushf
cld
jmp
dec
xor
mov
popf
in
mov
imul
jae
call
jp
aad
push
mov
sbb
lret
sahf
dec
enter
mov
push
mov
add
push
mov
les
jbe
vpmovmskb
rolb
mov
pop
and
cmp
mov
or
add
aam
add
or
xchg
dec
jno
inc
add
mov
mov
add
js
xor
fs
dec
addr16
jns
push
or
mov
cmc
subl
cmp
ljmp
adc
mov
fistpl
mov
push
xchg
mov
push
push
add
repnz
jne
xchg
add
mov
add
mov
xchg
mov
add
jbe
ljmp
movsl
inc
notl
add
jl
mov
mov
add
outsl
pop
aam
jb
mov
stos
mov
mov
pop
xchg
or
mov
xchg
fisubrl
dec
add
mov
shll
add
mov
mov
cwtl
call
rolb
or
insl
hlt
pusha
add
add
pusha
add
add
scas
sti
mov
mov
add
mov
imul
addr16
loope
insl
push
push
std
sbb
ljmp
mov
mov
mov
jbe
pop
es
pop
sub
and
mov
je
add
or
xorl
ret
inc
jno
or
out
mov
add
dec
mov
add
add
lods
add
jmp
test
sti
daa
jge
jbe
pop
js
add
mov
mov
lret
dec
pusha
add
add
add
and
hlt
std
lfs
addr16
dec
divl
add
add
ljmp
hlt
sbbl
and
movb
jecxz
lcall
popf
scas
arpl
scas
adc
pop
pop
in
dec
repz
sahf
xor
inc
sub
mov
add
divps
jl
add
or
adc
scas
xchg
jge
add
and
addl
sbb
insb
repz
mov
imul
mov
ret
push
stc
test
mov
add
push
adc
daa
icebp
out
test
add
pusha
add
test
in
inc
push
add
adc
je
xor
mov
dec
call
fwait
jmp
xchg
xchg
jp
test
lods
mov
fwait
enter
mov
xor
mov
add
bound
mov
es
lcall
cmp
add
icebp
sub
into
daa
and
fwait
sub
jmp
mov
add
imul
les
inc
rolb
inc
add
mov
sbb
cltd
mov
popf
addr16
mov
xchg
mov
shll
rolb
mov
in
xchg
xor
clc
cmc
sub
add
aam
pop
pusha
add
repz
add
mov
pushf
out
cmp
js
jle
std
std
cmpsb
shll
int
sub
push
rcll
mov
mov
rolb
mov
scas
movsb
daa
clc
cmp
mov
movsl
mov
lock
pop
xor
mov
jbe
add
popf
jg
mov
or
outsl
sbb
add
and
inc
jge
jl
or
dec
cmp
adc
test
mov
enter
sbb
hlt
mov
mov
mov
std
out
cs
xor
mov
outsl
lahf
int
loope
dec
movl
orl
negb
mov
pop
mov
movsb
mov
xchg
cmp
pop
jns
jge
stc
push
add
rolb
mov
test
jo
mov
jg
jmp
jbe
lcall
sti
jmp
bound
mov
cmp
mov
scas
sbb
cmp
cmp
jbe
lret
or
adc
mov
mov
test
add
xor
out
aaa
xchg
add
add
push
add
adc
mov
out
and
mov
add
cmp
mov
in
iret
inc
add
and
mov
sbb
add
arpl
or
mov
cmp
mov
nop
add
lahf
add
mov
add
add
rcll
insl
test
addb
adc
add
je
sti
pop
ss
xchg
sbb
add
and
or
in
adc
adc
inc
pop
pop
inc
pusha
add
inc
mov
add
dec
nop
add
ficompl
loope
adc
mov
and
jl
cmc
mov
inc
add
add
loop
mov
dec
loop
mov
xchg
add
sub
mov
xchg
add
jne
add
mov
push
xor
mov
lock
mov
mov
mov
ljmp
sbb
syscall
mov
outsb
std
sub
mov
adc
test
jns
inc
or
jo
mov
add
lcall
xchg
adc
mov
fistps
shrd
mov
add
pusha
add
cmp
int3
mov
add
xchg
gs
cmp
add
add
sarl
ret
jnp
add
dec
dec
dec
aam
scas
inc
add
loope
mov
push
pop
insb
sbb
lahf
xor
jp
adc
dec
mov
jge
mov
push
stos
jle
add
add
jmp
sbb
push
add
add
add
add
adc
fucomi
loop
mov
movsb
cmp
pcmpgtb
mov
add
push
xlat
inc
inc
notb
inc
xor
mov
add
mov
add
push
mov
xchg
sub
scas
testl
mov
mov
movsb
and
mov
sbb
pop
add
mov
mov
rolb
mov
data16
repnz
ret
xor
add
mov
dec
call
cmp
add
mov
xchg
xlat
or
jb
mov
popf
and
add
pusha
add
mov
jg
adc
mov
mov
pop
jge
orl
add
add
mov
push
and
add
cli
or
adc
mov
ret
mov
fcompp
adc
add
pop
cmp
pop
xlat
pushf
and
mov
out
fstps
jb
mov
add
jne
pop
and
mov
test
cmp
jno
fidivrl
loope
sub
clc
out
les
popf
add
and
mov
add
cmp
mov
or
ds
mov
push
stos
repnz
dec
adc
pop
dec
push
sub
flds
push
or
add
xor
push
inc
popl
stos
push
sbb
lods
push
add
jno
fldl
mov
pusha
add
mov
cmpsl
inc
mov
ljmp
mov
fmuls
aaa
add
lods
mov
push
push
cmc
repz
push
sbb
add
aas
cmp
mov
add
adc
jns
ficoms
add
mov
mov
xchg
stos
sbbl
out
push
add
pop
push
imul
dec
loope
jp
rol
ss
arpl
andl
fs
sub
call
sub
pop
jg
add
and
mov
dec
repz
inc
sub
movsb
addb
dec
lea
rorl
leave
shll
push
jmp
cmp
add
mov
add
ss
xchg
jb
mov
add
mov
add
cld
mov
addb
inc
fdivs
add
push
test
mov
mov
pop
inc
jmp
mov
inc
aad
aas
aam
ljmp
scas
cli
stos
or
lock
mov
push
xor
mov
in
mov
cmpsb
scas
push
add
test
add
lds
fistps
outsl
insb
mov
sbb
cmp
pop
iret
sub
cwtl
inc
addr16
inc
bound
mov
daa
ret
xchg
pop
fstpt
in
js
ljmp
imulb
add
rolb
mov
loope
insb
dec
ja
lods
aad
lods
xchg
mov
call
gs
or
loop
mov
outsl
lret
sarl
or
pop
andl
mov
je
arpl
pop
mov
mov
jno
mov
mov
es
outsl
sbb
sbb
xor
fs
xchg
inc
clc
xor
mov
pop
leave
xchg
lahf
js
scas
push
jb
mov
imul
mov
mov
add
xchg
mov
inc
mov
or
rolb
mov
push
xchg
ret
andl
cmpsl
mov
push
add
add
je
mov
jns
add
cs
cmp
cmc
int3
leave
xor
jno
add
std
repnz
subl
mov
add
rolb
mov
aaa
push
add
in
xor
mov
add
xor
stos
in
or
add
jns
pop
addb
jno
jno
sbb
std
stos
sub
add
add
add
mov
add
mov
sub
adc
mov
mov
add
bound
mov
add
push
push
add
mov
pushf
xlat
fldcw
inc
fisubrs
mov
test
add
mov
xchg
mov
popf
pushf
sub
sbb
sbb
rolb
mov
adc
rorl
mul
mov
stos
push
call
push
movsl
mov
mov
pop
and
js
sub
hlt
xor
into
cld
sub
enter
add
mov
repnz
jle
xchg
dec
arpl
not
add
push
inc
add
mov
adc
mov
lds
leave
ss
add
sub
xchg
add
add
dec
lods
sub
lcall
mov
addb
mov
pop
adc
mov
add
std
gs
adc
lds
jl
shll
jge
add
push
sub
dec
movsl
cmpsb
pop
push
inc
repnz
mov
pop
je
mov
mov
jns
jne
test
xor
add
scas
ret
add
cmp
add
jl
outsb
mov
mov
add
xchg
push
dec
and
mov
test
xor
mov
cs
pop
hlt
add
jl
push
mov
ja
inc
mov
icebp
fistps
pop
bound
mov
dec
inc
push
jmp
int3
sbb
jg
xchg
test
std
mov
add
cmpsb
xchg
add
add
mov
mov
mov
cmp
sub
or
mov
add
add
mov
mov
add
mov
lcall
xchg
add
ljmp
loope
pop
xchg
sti
pop
push
mov
aaa
fdiv
add
inc
or
lds
mov
and
mov
je
jbe
test
and
mov
les
add
jmp
lock
aad
ljmp
add
adcl
mov
pushf
pop
cld
addr16
add
fnstcw
mov
push
arpl
adc
and
sub
fcoms
add
mov
mov
out
gs
enter
mov
mov
add
add
in
roll
xor
mov
add
ljmp
pop
stos
inc
dec
cwtl
mov
sbb
add
xor
xor
mov
mov
ss
in
push
mov
add
jnp
mov
mov
add
ret
and
add
mov
inc
neg
in
mov
push
out
cmp
cmpsb
xor
mov
out
and
mov
mov
jo
mov
popf
daa
pop
pop
cmp
hlt
addb
xchg
or
and
dec
out
mov
or
inc
add
stos
jmp
nop
add
rolb
pop
data16
xor
out
mov
and
insb
xchg
add
push
xchg
xchg
push
fstl
sub
add
mov
mov
notb
jecxz
sbb
jne
rcrl
mov
jmp
sti
call
mov
clc
insb
cmp
ret
cld
mov
push
ror
inc
add
mov
das
mov
dec
fcoms
dec
into
call
dec
pop
rolb
and
mov
decb
iret
cmp
pop
aam
add
mov
mov
lods
mov
sbb
jbe
add
jae
add
das
lret
rolb
mov
dec
lock
inc
add
mov
mov
jle
inc
add
mov
xor
jbe
es
out
aaa
xlat
add
or
jne
jmp
sbb
add
fisttps
scas
xchg
add
and
inc
cwtl
xchg
jecxz
or
mov
jp
or
and
add
dec
cmp
test
je
mov
pop
push
sub
popa
add
mov
mov
add
cli
test
pop
mov
inc
inc
leave
aam
scas
sub
mov
in
xor
push
mov
xor
testl
sbb
pusha
add
mov
addr16
add
add
mov
outsl
jno
inc
add
mov
add
xor
mov
ss
stos
dec
loope
inc
stc
sub
pushf
into
jmp
add
ljmp
mov
int3
fadds
cmp
movb
mov
jns
das
push
add
mov
sub
repnz
mov
in
mov
add
pop
leave
ret
dec
sub
lret
fbld
mov
push
mov
aaa
fcmovnbe
add
mov
mov
pushf
out
and
sbb
add
or
mov
rolb
mov
push
mov
pop
sub
daa
scas
sti
dec
sbb
push
add
std
xchg
adc
push
xor
mov
mov
dec
popa
xchg
retw
ret
and
scas
cltd
fwait
mov
test
add
test
dec
jle
xchg
es
xor
insl
ljmp
jnp
fcomi
add
jmp
xchg
pop
add
mov
pop
aas
and
inc
lods
jecxz
add
clc
rcll
mov
ficoml
imul
mov
popf
mov
mov
xchg
fnsave
mov
add
sti
jnp
popf
ljmp
mov
cld
or
add
add
or
in
fadds
mov
pushf
jae
sub
cltd
dec
out
add
cld
cmp
adc
mov
notb
xchg
or
mov
lods
jb
mov
daa
ja
and
push
lret
sub
inc
add
cltd
cmp
jge
cmp
leave
mov
xchg
and
mov
jbe
xchg
enter
stc
sbb
lds
or
mov
xorl
mov
addb
pop
xor
mov
add
bound
mov
repz
sub
add
loopne
mov
mov
mov
add
mov
adc
mov
dec
sahf
dec
mov
mov
mov
pop
pop
sub
jmp
add
cmp
pop
scas
or
rolb
mov
sub
or
popa
cmp
lock
cld
jb
mov
loope
sbb
or
xlat
mov
adc
xchg
lods
notrack
std
jmp
add
jo
mov
mov
pushf
iret
mov
ds
pop
inc
add
iret
out
dec
aad
cmp
add
add
mov
in
cmpl
add
mov
add
add
mov
arpl
xchg
cmc
xchg
ss
add
leave
rolb
xor
mov
push
jno
and
mov
fsts
jge
mov
add
mov
add
insb
lea
and
cwtl
lods
add
pop
arpl
sbb
loopne
mov
scas
sub
ret
or
xor
mov
negl
add
das
mov
aas
xor
negl
lods
xor
push
add
addr16
push
ficompl
mov
sahf
mov
sti
enter
add
add
sub
add
push
add
mov
add
add
xor
jmp
scas
pop
fsubrs
jb
mov
xchg
push
imul
xchg
mov
cmp
mov
xchg
insl
fisubs
xor
mov
add
aad
movsb
aaa
test
pop
fcmovnu
jecxz
mov
or
and
mov
mov
inc
add
mov
mov
in
sbb
rol
add
add
fbstp
push
xor
mov
add
mov
add
mov
jmp
mov
push
xor
cmp
add
dec
jmp
mov
xchg
push
daa
enter
imul
addb
test
mov
inc
add
mov
les
jle
out
add
lret
adc
dec
jno
add
mov
mov
push
xchg
pop
xchg
add
add
mov
or
sbb
xchg
and
pop
ja
cmpl
cli
test
xor
and
mov
inc
loop
mov
jne
lret
add
fisttpl
cmc
daa
dec
jns
add
add
and
push
sbb
cmp
mov
lret
mov
inc
add
add
dec
mov
add
mov
add
cli
jge
popw
jae
outsl
xor
mov
outsb
mov
mov
addb
pushf
imul
add
cmp
test
mov
mov
add
outsl
adc
inc
add
mov
add
cmp
cmp
adc
cmp
fadds
push
or
pop
sbb
or
movsb
add
push
cmp
rolb
mov
test
iret
pop
loope
xor
mov
mov
inc
or
push
lcall
push
fstl
test
insb
pop
and
push
push
add
movntps
add
and
ljmp
jns
jns
cmpsl
sti
rolb
mov
add
or
mov
imul
add
cltd
aad
imul
insl
hlt
adcl
add
mov
and
mov
push
bound
mov
add
mov
and
mov
adc
mov
add
iret
sbb
mov
aad
push
push
scas
cmp
and
movsb
mov
mov
add
fstl
add
out
and
mov
and
mov
es
sbbl
scas
daa
xchg
fistl
push
adc
push
pop
and
mov
test
mov
mov
mov
mov
cld
or
mov
sbb
sahf
test
cmovs
cs
mov
divb
or
push
sbb
mov
mov
jns
and
rolb
jns
mov
add
mov
xchg
inc
dec
sub
mov
sub
mov
daa
cmpsb
daa
push
cltd
rolb
mov
dec
fidivl
pusha
add
mov
fisubl
add
dec
pop
xor
add
aas
inc
and
ret
add
mov
mov
and
mov
cmp
pop
lods
lahf
in
pop
bound
mov
outsl
pop
push
xchg
adc
mov
xor
into
int
jnp
rolb
mov
add
adc
sub
mov
stos
lret
mov
rorl
clc
mov
mov
fwait
enter
push
mov
mov
popf
jge
sub
add
mov
jae
mov
loopne
mov
dec
mov
adc
mov
mov
das
aaa
fiaddl
jg
inc
pop
cwtl
or
push
pop
dec
in
sub
add
movsb
ret
imul
mov
add
aam
movsb
cmpsb
xchg
cmp
mov
rcll
add
add
bound
mov
fidivrs
add
and
add
mov
shll
jno
scas
mov
inc
add
xchg
add
mov
mov
mov
inc
fwait
test
dec
bound
mov
and
mov
jb
mov
fisubrl
std
push
add
test
fidivrl
ret
add
sub
andl
pop
mov
add
mov
jecxz
mov
out
addb
test
in
lock
sub
fs
cld
cmp
lcall
inc
cmp
mov
call
stos
cmp
push
repnz
popl
repnz
ret
jae
add
adc
mov
mov
xor
mov
test
add
mov
push
inc
mov
xor
mov
ss
fs
or
inc
rolb
mov
push
pop
pop
int3
dec
lds
movsl
mov
movsb
inc
adc
mov
and
sbb
inc
rolb
mov
add
lcall
add
mov
add
pop
fldl
popl
mov
fwait
mov
loop
mov
pop
mov
inc
add
mov
dec
jae
iret
fmuls
cltd
adc
mov
addb
xchg
and
or
mov
fstpl
mov
mov
mov
add
dec
mov
cmp
rcll
mov
inc
inc
mov
dec
jmp
fs
mov
mov
faddl
popa
scas
cmpsb
fcoml
add
js
inc
cmc
push
or
cli
cwtl
stos
jecxz
cwtl
or
lods
push
and
mov
cmp
pusha
add
xor
mov
insb
sub
hlt
imul
sbb
add
mov
in
push
movsl
inc
add
clc
insl
and
mov
mov
cltd
sbb
adc
mov
add
mov
ret
add
rcll
imul
arpl
dec
cmp
fs
pop
and
mov
hlt
mov
mov
sahf
add
test
filds
mov
add
push
mov
mov
mov
adc
and
mov
fwait
jno
addb
mov
and
mov
js
adc
test
inc
pop
movl
in
xor
mov
movl
rep
sub
mov
xchg
push
cs
mov
in
sbb
xchg
dec
mov
bound
mov
hlt
jmp
ret
in
imul
adc
pop
xor
mov
pop
pop
push
out
nop
add
add
enter
gs
lds
cmp
mov
es
xorl
sbb
add
sahf
fwait
ret
sbb
add
je
out
int
add
aaa
adc
xor
jg
xlat
xlat
mov
jge
and
leave
mov
mov
add
das
in
out
fucom
and
mov
pop
ja
into
loopne
mov
and
mov
add
inc
add
mov
inc
add
add
xchg
xchg
je
push
dec
xor
out
cmpsl
and
sub
push
stc
lea
insl
lret
dec
mov
aam
das
push
or
je
inc
xchg
mov
adc
into
popf
fistpl
sbb
aad
aad
add
jmp
add
sbb
iret
adc
mov
fsubr
hlt
jmp
scas
sub
ss
xlat
idivl
add
add
add
add
xchg
in
jmp
lahf
add
into
sbb
icebp
xor
mov
into
xchg
jecxz
add
add
lods
scas
add
add
dec
add
mov
sahf
mov
jae
inc
add
push
dec
repnz
mov
pop
jnp
inc
xor
mov
xchg
leave
subl
jae
cmp
jp
insl
push
mov
add
pop
fildl
mov
add
add
add
pop
cs
bound
mov
jb
mov
lret
adc
mov
lods
lret
jae
mov
or
mov
mov
or
sub
xchg
jmp
cli
out
mov
push
mov
pusha
add
and
mov
add
lcall
xlat
mov
push
inc
add
jae
or
fdivrs
dec
xor
jmp
test
mov
add
add
or
mov
sti
adc
add
add
mov
add
fdivp
xchg
aaa
inc
cmp
fisttpl
mov
nop
add
push
sbb
sbb
xor
xor
dec
jo
mov
add
mov
sbb
adc
inc
push
je
sti
cs
adcl
stos
cmp
mov
adc
in
jl
push
push
pop
incl
sub
sti
rolb
mov
test
mov
sub
add
ror
push
rolb
pop
faddl
iret
fstl
call
adc
mov
int3
jecxz
add
roll
mov
call
int
mov
mov
cmpsb
rorl
mov
mov
iret
pop
add
push
stos
repz
pop
jecxz
add
mov
ret
sbb
sbb
and
mov
or
movsb
pop
loopne
mov
cli
out
int
lea
sbb
ljmp
fidivl
or
jmp
inc
rolb
cmp
rolb
mov
xlat
lds
mov
and
fisttpl
and
add
stos
pop
ss
rcrl
stos
hlt
cmp
add
mov
add
lahf
cmpsb
add
test
leave
jle
cmp
outsl
cmp
mov
std
mov
ffree
add
mov
mov
push
mov
pop
loop
mov
add
xchg
aas
jns
add
mov
mov
push
push
mov
icebp
lock
fcomps
enter
mov
outsl
inc
push
icebp
cmp
ss
sbb
stos
cmp
mov
add
dec
rcll
sbb
mov
push
mov
inc
lcall
int3
sbb
adc
xlat
fsubrl
addb
jb
mov
add
cmp
add
lock
jp
stos
jnp,pt
test
add
inc
add
mov
sub
mov
fistpl
jb
mov
inc
je
sub
or
xchg
fcomps
lret
xchg
and
mov
outsl
icebp
adc
es
jnp
mov
fs
mov
mov
mov
nop
add
call
inc
add
adc
pop
pop
add
mov
lcall
or
add
addb
fwait
or
fsts
fnstenv
adc
in
mov
shl
sub
shll
ret
mov
mov
push
add
fmul
sar
sti
addb
mov
add
cmp
jge
cmp
add
mov
push
addb
enter
mov
adc
cmp
add
fidivrs
add
mov
mov
cmc
sbb
jecxz
inc
add
and
mov
lock
iret
fstps
mov
jo
mov
mov
sub
jbe
xor
adc
add
add
xor
mov
dec
lock
call
out
mov
and
mov
mov
mov
cmp
lahf
adc
add
and
pop
out
mov
cmp
daa
sti
jmp
adc
mov
pcmpeqw
xchg
xchg
repnz
mov
adc
mov
adc
sub
xor
lea
add
jecxz
idivb
push
xlat
sahf
pop
add
sbb
pushf
add
add
mov
aaa
iret
jns
fists
sub
outsb
fadds
out
rolb
mov
adc
mov
add
cmp
mov
inc
and
add
xchg
pop
scas
pop
call
test
jmp
add
add
repnz
sbb
mov
mov
int
test
add
mov
push
lret
push
add
pop
mov
mov
xor
add
add
mov
mov
and
mov
fisttpll
adc
mov
push
dec
sahf
adc
mov
pop
dec
sub
fs
mov
jne
add
clc
inc
dec
pop
jo
mov
adc
sahf
mov
mov
pusha
add
add
mov
iret
idivb
add
add
test
adc
mov
stc
loope
add
add
jo
mov
jo
mov
xor
xor
mov
mov
add
mov
inc
sbb
mov
popf
test
dec
mov
leave
jo
mov
mov
loopne
mov
inc
mov
xor
jl
inc
sbb
ret
dec
dec
and
sbb
out
cwtl
dec
pop
or
mov
add
add
cmp
cmp
fdivr
aad
mov
push
add
lahf
fwait
mov
cmc
cwtl
daa
insl
in
lods
sub
rolb
mov
pslld
mov
sub
or
fistpl
leave
mov
out
add
bound
mov
out
outsb
test
stos
popf
and
mov
pop
sub
add
int
icebp
js
pop
je
lods
jecxz
fcomi
stos
adc
xor
mov
jmp
add
mov
mov
out
lcall
mov
ja
jo
mov
jp
add
mov
roll
sub
into
or
dec
or
mov
repz
arpl
mov
push
jne
mov
repz
add
sub
fwait
push
jl
fisubrl
jle
ljmp
mov
insb
push
in
pop
insl
cs
push
or
mov
sbb
lds
jns
sbb
xchg
mov
cs
popf
jne
xchg
outsl
fnstcw
mov
add
push
mov
add
add
or
jg
add
add
push
add
mov
cwtl
inc
rolb
scas
out
dec
jne
and
mov
add
daa
fidivl
mov
mov
mov
pop
lea
in
test
and
mov
sub
sbb
test
mov
inc
add
add
sub
mov
push
add
insb
in
push
je
jp
jo
mov
sbb
adcl
int3
xchg
sub
xor
inc
sahf
push
addb
add
sbb
stc
or
mov
js
add
jp
test
jle
sbb
jne
stos
dec
in
push
hlt
mov
pusha
add
mov
rorl
xchg
xor
mov
dec
sbb
insb
xchg
xchg
pusha
add
add
xor
add
iret
bound
mov
cmp
mov
divb
ljmp
inc
jo
mov
pop
lods
mov
adc
mov
in
pop
xchg
popa
cmovl
mov
jae
add
out
mov
cmpsb
js
test
aad
add
mov
insl
push
or
sarl
sti
mov
xor
mov
cmp
in
call
dec
xor
mov
imull
cmp
imul
pop
or
sub
dec
xchg
sub
scas
cmp
faddl
jae
hlt
rolb
mov
inc
add
js
cmpsb
or
jmp
dec
mov
add
and
mov
cmc
mov
or
mov
pop
aam
bound
mov
mov
into
mov
add
ficoms
aam
pop
out
add
add
sub
mov
jle
test
inc
cmpsl
lahf
decb
jbe
pop
jns
add
add
hlt
dec
add
jb
mov
addb
iret
xor
add
push
adc
mov
popa
jb
mov
push
into
mov
shll
sub
add
out
or
lds
inc
hlt
adc
add
dec
jo
mov
sahf
adc
mov
iret
rolb
mov
inc
cmp
ret
mov
dec
je
add
mov
pop
daa
push
jbe
dec
fstp
add
mov
jns
add
mov
and
mov
dec
ficomps
mov
mov
push
lahf
es
aaa
lds
sbb
stos
pop
inc
add
mov
test
popf
dec
push
add
add
mov
out
in
xchg
cld
cmp
and
dec
push
popf
test
jl
scas
pop
or
out
or
xchg
push
cwtl
add
add
sub
add
add
pop
das
data16
add
enter
sbb
dec
test
push
mov
dec
movsb
jne
sub
xchg
add
mov
push
cld
and
or
out
loop
mov
fmul
fildll
outsb
push
xchg
cwtl
mov
pop
jl
scas
out
sub
rcrl
fmuls
nop
add
and
add
push
add
xchg
sub
movsb
mov
test
mov
loope
cwtl
pop
mov
call
sub
pop
setbe
and
mov
mov
cmp
roll
test
loope
loop
mov
enter
mov
iret
in
leave
dec
jecxz
mov
ret
cwtl
cmp
in
rolb
mov
adc
add
add
lea
fsubr
test
jle
mov
icebp
xchg
pop
jne
dec
add
mov
xchg
dec
lcall
mov
sbb
push
add
adc
jbe
xor
mov
mov
and
sbb
add
xor
mov
and
imul
mov
jae
aad
xor
sbb
add
mov
popa
dec
or
mov
cmpsl
xor
dec
stc
ss
cmp
xchg
mov
ja
dec
dec
out
popf
mov
mov
sub
insl
lahf
ljmp
aas
mov
call
stos
push
sbb
add
mov
mov
add
add
nop
add
or
add
mov
mov
cmpsb
or
lea
add
xorl
hlt
icebp
cs
mov
add
or
pop
mov
and
mov
xor
mov
cmp
test
sahf
in
rolb
mov
call
insb
enter
or
add
mov
rcl
mov
add
sbb
mov
lcall
loopne
mov
ret
ljmp
or
lds
iret
iret
mov
xchg
mov
mov
jp
dec
addr16
pop
notb
adc
add
mov
sub
daa
sbb
addb
push
dec
rcll
js
add
add
repnz
add
mov
add
mov
xchg
xor
add
add
and
mov
add
rcrl
inc
popa
or
test
cli
xor
add
and
mov
add
mov
xchg
jecxz
lds
fnstcw
mov
add
add
mov
mov
enter
cltd
cltd
ja
add
xchg
mov
push
or
lods
push
cld
repnz
or
xlat
stos
mov
and
push
adc
mov
pop
xchg
loop
mov
pop
out
jnp
in
add
in
ljmp
adc
push
sbb
mov
mov
arpl
cmpsl
lea
push
test
add
mov
add
mov
add
or
in
enter
or
aaa
cmpsb
mov
repnz
aad
mov
lret
push
jb
mov
mov
lret
test
add
cmp
jg
insl
mov
in
cmpsl
pusha
add
dec
jne
divb
add
imul
mov
add
pop
aaa
lcall
pop
nop
add
cmpsb
aas
push
inc
loop
mov
add
mov
mov
xchg
xchg
xor
mov
push
dec
pop
in
cltd
or
push
in
aaa
cmp
enter
aad
jne
mov
sub
out
scas
cltd
ljmp
jne
divl
loop
mov
psllw
adc
icebp
push
add
or
push
pop
sti
push
add
add
add
mov
pop
cmp
scas
adc
dec
jl
jns
jne
push
out
outsb
cltd
and
mov
add
mov
mov
mov
loop
mov
mov
repnz
add
stc
mov
xor
sbb
mov
jl
fbstp
add
push
lret
lret
mov
pop
in
xchg
and
fisubs
adc
mov
adc
mov
lds
jns
jmp
add
add
out
repnz
mov
es
shl
je
inc
inc
sbb
push
jp
insb
add
xor
fwait
pop
mov
idivl
push
sub
or
add
pop
mov
mov
mov
jnp
call
xor
mov
movsb
push
add
test
mov
sbb
add
and
push
add
dec
daa
test
addb
adc
mov
xchg
and
mov
adc
cmp
add
add
push
cli
lds
mov
lahf
and
mov
ret
mov
push
add
add
cmp
mov
les
cmp
mov
jmp
popf
sub
pop
pop
lcall
cli
cmp
pop
mov
mov
add
xor
icebp
leave
push
mov
mov
add
nop
add
add
xor
mov
add
sub
inc
mov
inc
aam
or
scas
repz
mov
mov
pop
push
nop
add
jp
cmpsb
loope
rolb
mov
bound
mov
sub
lret
jno
mov
mov
lret
in
outsl
adc
mov
aaa
mov
mov
sub
add
and
sub
fcomps
mov
mov
and
mov
movsl
or
jnp
dec
push
xor
mov
xchg
push
lea
add
in
and
mov
add
sbb
aam
jae
outsb
xor
fsts
add
dec
mov
mov
fstpl
mov
mov
inc
ret
addb
add
mov
mov
mov
sub
xor
mov
das
outsb
int3
push
inc
mov
add
dec
movlps
mov
mov
add
int3
out
mov
mov
stos
ret
mov
add
cltd
fwait
cltd
pop
pushf
int
in
add
add
sub
mov
in
dec
sbb
xor
add
lea
cmp
pop
movsb
out
add
int3
pop
pop
popf
mov
lret
loope
ror
mov
mov
or
mov
in
test
mov
lcall
and
mov
adc
rolb
mov
mov
mov
lods
orl
mov
rcl
add
arpl
mov
loop
mov
jecxz
dec
in
inc
jae
pop
mov
xchg
lret
xor
stc
fdivl
mov
mov
jg
js
mov
cltd
mov
jge
mov
mov
xchg
push
push
add
fs
pop
xchg
jbe
inc
in
iret
mov
mov
sbb
inc
sub
push
mov
mov
call
push
xchg
adc
mov
gs
or
mov
push
hlt
jae
push
pop
jb
mov
add
jbe
mov
clc
cs
les
mov
mov
push
add
add
mov
mov
lcall
add
mov
mov
lea
dec
fldl
add
sbb
mov
dec
shll
add
lock
pop
lret
sbb
add
pop
adcl
dec
inc
jmp
mov
dec
mov
bound
mov
mov
jns
stc
fsubr
mov
rcr
sbb
leave
jae
in
dec
aam
adc
mov
fisubs
add
add
add
jnp
add
inc
adc
mov
cmpsl
jns
aad
xchg
add
iret
std
xchg
std
dec
ds
add
add
dec
rolb
mov
sub
popa
ljmp
incl
mov
pushf
fs
popf
inc
jmp
push
and
pop
jmp
loope
subl
adc
adc
mov
add
jno
decb
scas
mov
xor
mov
add
sbb
jmp
cvtps2pd
popa
ljmp
mov
test
stc
mov
push
divl
imul
jno
jge
adc
push
mov
mov
add
mov
int3
data16
mov
and
mov
lea
lea
loope
enter
pop
jns
jno
jo
mov
inc
push
jmp
and
mov
sbb
movsb
rcll
xlat
imulb
push
mov
jbe
add
mov
push
addl
inc
add
add
mov
add
push
fidivrl
or
or
push
add
sub
imul
dec
in
adc
mov
mov
mov
loope
mov
dec
push
int
lds
add
enter
mov
fsts
inc
outsl
lods
idivl
sti
je
je
fsubrs
sarl
sub
mov
mov
or
xchg
sbb
scas
mov
add
and
inc
add
hlt
add
mov
xchg
jg
add
push
adc
or
inc
add
mov
mov
aas
and
add
and
inc
dec
fwait
adc
xor
mov
les
inc
add
mov
addr16
sbb
mov
into
mov
xchg
add
add
add
mov
inc
push
add
mov
shll
mov
mov
add
xchg
sti
or
repz
out
scas
cwtl
xchg
pop
jl
inc
add
neg
inc
cmp
jae
add
mov
out
mov
std
fwait
daa
xchg
add
push
clc
faddp
popa
add
mov
mov
out
psadbw
idivb
in
decb
add
lret
movsl
jbe
inc
adc
je
nop
add
sbb
les
mov
xor
mov
mov
jbe
inc
xor
dec
pop
aad
cmp
and
lods
call
add
mov
mov
pop
out
push
jbe
aas
lahf
cltd
movsl
js
sahf
or
inc
and
mov
fstpl
mov
popf
inc
jecxz
jnp
js
add
iret
dec
es
scas
xchg
icebp
out
add
add
mov
cmpsl
fbld
shll
xor
mov
shrl
add
xchg
add
pop
xchg
mov
mov
imul
adc
insl
call
adc
mov
mov
out
push
in
testb
scas
hlt
xor
mov
mov
mov
mov
fnstenv
add
pop
cwtl
sub
mov
mov
add
sbb
adcl
rolb
mov
inc
add
pop
sahf
dec
adc
scas
xchg
lods
in
fisubs
mov
mov
mov
fmull
inc
ds
and
mov
fstpt
into
dec
pop
in
out
jecxz
cmp
add
hlt
int
repz
dec
scas
daa
mov
add
xor
mov
add
rcrl
jb
mov
shrl
mov
or
add
outsb
rorl
arpl
fcmovnbe
dec
stos
ffreep
subl
jge
inc
repz
loopne
mov
das
insb
mov
sub
rorl
add
mov
add
and
add
in
cmp
mov
addb
fisubrl
out
ficoms
lods
popf
xchg
fyl2x
or
xor
enter
push
scas
sub
jb
mov
mov
movsl
sahf
cmp
neg
nop
add
pop
rolb
mov
mov
dec
insl
pop
jo
mov
imul
ss
dec
test
cmp
add
pop
lods
cmpsb
mov
add
ja
imul
and
dec
add
xor
mov
mov
add
test
xchg
fcmovnu
adc
mov
jns
cld
inc
and
lock
push
pop
jns
sub
sti
lds
add
aad
or
xor
or
lret
push
inc
aaa
lock
add
add
lds
inc
loop
mov
push
mov
out
aaa
scas
das
outsb
dec
cld
jbe
xor
add
add
mov
add
data16
cmpsb
popa
or
sbb
lea
jmp
and
mov
dec
mov
push
push
movups
out
pop
xchg
rolb
cmpsb
out
into
mov
addr16
pop
loopne
mov
mov
rcll
aam
xchg
gs
scas
fistl
out
dec
sub
mov
sbb
push
dec
jecxz
test
add
mov
xor
mov
or
lret
push
or
movsl
pop
cld
rolb
mov
pop
push
addb
testl
sub
mov
push
add
mov
sub
xor
mov
jns
add
test
shr
xor
mov
pop
xchg
aad
jo
mov
rolb
mov
inc
adc
in
popf
bound
mov
aam
jle
daa
ret
outsb
xchg
xor
mov
adc
mov
and
mov
mov
xor
mov
sub
jl
lret
in
outsb
out
test
add
mov
mov
dec
pop
jecxz
leave
mov
adc
out
sti
shr
inc
inc
add
mov
enter
xor
add
mov
lods
imull
mov
mov
add
mov
mov
and
mov
push
pop
lods
xor
mov
mov
push
nop
add
pop
pop
or
mov
mov
popf
dec
dec
pop
divb
and
mov
pavgw
push
sub
mov
pop
je
add
cmpsl
push
mov
test
mov
int
sub
mov
push
push
add
jecxz
pop
pop
ja
add
rorl
xchg
push
sbb
divb
cltd
pop
lock
loope
mov
mov
mov
and
leave
lahf
push
and
mov
add
scas
outsb
adc
adc
add
add
jl
jne
testb
add
stos
addb
mov
cmpsl
push
call
xor
loopne
mov
add
ljmp
fistpll
int3
xchg
gs
inc
add
xchg
add
clc
xchg
repnz
mov
cld
xchg
out
inc
xchg
mov
cmp
data16
add
dec
pushf
sbb
adc
mov
mov
or
mov
add
cmpsb
xchg
or
xchg
dec
push
xlat
and
mov
inc
daa
pop
pop
jle
dec
mov
stos
push
jne
sti
pusha
add
add
mov
fistps
lahf
mov
add
mov
repnz
cmp
lds
data16
loopne
mov
insb
push
adc
mov
gs
add
sti
pop
cmp
add
mov
xchg
inc
add
push
add
pop
adc
mov
add
mov
test
enter
mov
add
push
add
xor
dec
cs
test
jmp
int
insb
or
or
push
mov
cmpsl
gs
sti
notl
gs
add
lcall
mov
mov
loopne
mov
mov
repz
cmpsl
pop
outsl
xchg
mov
xor
pop
pop
mov
hlt
aad
ret
imulb
pushl
loope
inc
add
push
add
mov
mov
out
fnstenv
adc
add
dec
cmp
mov
or
add
mov
add
mov
js
pop
ret
push
sub
mov
xchg
sbb
inc
mov
add
lcall
xor
push
add
add
dec
in
mov
sbb
add
ljmp
or
mov
fisubs
iret
dec
enter
addb
add
xor
mov
add
loopne
mov
add
push
cmpsb
fldt
insl
test
enter
outsb
mov
xchg
in
aaa
push
into
fidivs
repnz
popf
ljmp
push
add
push
insl
cmc
data16
stos
fcoms
lcall
add
adc
mov
pop
mov
cmp
add
mov
pushf
leave
test
mov
sti
lds
pop
push
cld
std
pushf
jg
inc
add
movsl
fdivrs
dec
fimull
out
in
cmp
mov
add
dec
les
lods
movsb
testl
ja
sbb
mov
rolb
mov
pushf
test
add
add
mov
mov
jns
hlt
xchg
outsl
test
mov
stos
jmp
mov
and
mov
xchg
cmpsb
inc
inc
dec
push
mov
jmp
mov
xchg
rdmsr
add
daa
cwtl
cmp
mov
xchg
add
roll
mov
pop
mov
adcl
cmp
dec
lahf
mov
adc
sub
mov
xchg
inc
cmc
addb
ja
cmpsl
dec
rcl
mov
mov
and
xchg
test
xor
or
cmp
mov
addb
daa
loopne
mov
jg
mov
mov
sbb
in
stos
and
shll
add
xchg
shll
mov
movsb
xor
rcll
fucom
out
mov
mov
lds
xlat
lds
sub
jl
cmp
pop
mov
out
loopne
mov
xchg
add
mov
mov
fyl2xp1
push
pop
xor
push
push
add
mov
pusha
add
imul
pop
lahf
or
lea
xor
stc
mov
add
pop
or
mov
dec
fistpl
add
insl
sub
in
add
add
add
mov
scas
subl
into
mov
mov
add
in
lret
dec
loopne
mov
add
mov
add
jp
push
int3
mov
inc
add
in
add
mov
push
sub
mov
push
pushf
jno
pop
pop
test
add
gs
add
jl
xchg
sbbl
lock
mov
mov
mov
add
mov
mov
pop
add
aam
test
push
jle
add
rolb
mov
add
and
aas
hlt
call
jmp
loope
test
aas
adc
enter
adc
adc
xchg
popa
enter
mov
jne
cli
inc
add
add
mov
add
cmp
sbb
jp
jecxz
and
add
add
je
imul
pop
jnp
push
loope
dec
pop
jg
pop
and
aam
daa
mov
frstor
jns
jae
jl
jge
pop
fstl
add
add
add
out
push
add
mov
or
rolb
push
pop
push
ds
je
leave
stc
int
ljmp
fsubrs
jmp
addb
fistpl
outsl
cli
rorl
outsb
xor
mov
jecxz
push
add
mov
mov
xchg
sbb
add
xor
add
push
movsl
or
loop
mov
push
das
leave
cli
mov
test
pop
lcall
test
mov
mov
jp
addb
ss
push
add
mov
mov
cmp
repz
mov
pop
inc
ljmp
jae
notl
mov
xor
fs
sbb
loop
mov
add
cld
js
je
adc
push
add
cld
rolb
mov
push
in
pop
cli
add
sbb
cli
add
mov
mov
cmpsl
mov
das
lods
mov
add
rolb
pop
test
and
sbb
or
or
js
dec
or
add
in
adc
test
add
add
adc
movsl
test
add
mov
adc
mov
in
add
loopne
mov
add
cmp
sbb
adc
adc
mov
dec
add
insb
jb
mov
addb
push
adc
mov
mov
addb
fs
mov
in
add
push
xchg
shrl
dec
cmp
dec
ret
add
jbe
stos
adc
sub
mov
leave
dec
inc
add
dec
popa
int3
cmc
imul
or
pushl
sub
and
sub
xor
stos
xchg
je
xor
add
jnp
stos
rolb
mov
icebp
lods
sbb
mov
test
repz
add
add
inc
bound
mov
adc
cmp
fdivrl
aaa
mov
mov
gs
add
jae
add
mov
gs
fucomi
mov
xchg
in
jge
dec
imul
fwait
sub
add
mov
hlt
in
inc
xchg
add
adc
mov
ret
outsl
cmp
pop
in
add
cmp
cwtl
inc
stos
jno
stc
jl
add
mov
in
stc
mov
aaa
iret
pop
cltd
rolb
mov
test
bts
add
cmp
add
lret
mov
cmp
fistl
xchg
cld
dec
faddp
stos
sub
dec
push
icebp
push
add
lahf
lahf
or
add
sbb
jo
mov
sub
xor
mov
push
call
mov
cltd
xchg
cli
jp
or
sub
add
addr16
pushf
mov
mov
add
mov
push
add
mov
jecxz
push
lahf
shl
add
inc
das
stos
pop
test
orl
jle
sbb
or
inc
xor
mov
and
sbb
add
aad
xchg
jmp
fdivr
xchg
daa
ss
mov
call
mov
cmpsl
push
add
push
xor
add
xor
sub
push
add
scas
shll
mov
mov
mov
sub
dec
lds
mov
mov
stos
mov
push
movsl
fs
out
pop
sbb
mov
jo
mov
sub
add
pop
jge
movsl
in
xchg
loopne
mov
add
jbe
cmp
int
add
icebp
repz
sbb
pop
stos
xchg
adc
or
dec
pushf
xor
sub
test
add
js
inc
jbe
push
add
mov
pop
stos
imul
rolb
mov
xchg
sub
aam
test
aaa
sbb
sti
outsl
rcll
adc
mov
mov
cld
add
mov
das
fxch
bound
mov
add
insb
loopne
mov
mov
jae
add
lret
sub
add
pop
sbb
cmpsb
xor
mov
xchg
mov
nop
add
mov
sbb
add
icebp
mov
pop
or
cltd
sbb
sbb
add
sub
add
aad
add
push
add
lret
fisttpl
sub
sti
mov
out
xchg
add
adc
pop
enter
mov
add
enter
push
fsubs
js
add
aas
pop
ljmp
mov
mov
test
and
mov
add
sbb
mov
jo
mov
add
mov
sbb
jno
inc
shll
mov
pushf
aas
mov
push
data16
jae
scas
pop
inc
add
dec
sub
pop
mov
mov
mov
pop
dec
sub
jbe
fidivrs
fidivrl
inc
mov
add
mov
mov
jae
pop
jl
mov
stos
lahf
in
mov
and
mov
stc
sub
lret
repz
cmp
mov
adc
fs
or
lahf
push
pop
fwait
in
adc
add
mov
add
stos
push
shrl
cmp
inc
imul
cmp
dec
ffree
gs
in
int3
jb
mov
jae
pop
sbb
outsl
add
mov
xlat
sbb
inc
xlat
dec
js
fsubrl
and
mov
mov
sbb
xchg
js
fisubrs
mov
dec
and
mov
inc
push
sarl
mov
add
add
fstpt
pop
xor
roll
push
add
xor
dec
xchg
inc
xchg
jns
movsb
call
outsl
fwait
mov
mov
jnp
cmp
lock
bound
mov
inc
mov
mov
jecxz
mov
imul
xchg
jne
add
mov
dec
and
les
js
push
leave
jns
sub
subl
mov
bts
je
inc
imul
aas
mov
addl
mov
and
mov
rep
ljmp
xchg
pop
mov
add
insb
xchg
mov
mov
mov
sub
call
dec
loopne
mov
xchg
enter
mov
aas
aas
arpl
add
jne
add
cmc
push
clc
inc
add
xor
mov
mov
stos
jge
imul
cs
push
sahf
leave
mov
xchg
add
sbb
out
ds
imul
es
loope
test
add
dec
addr16
mov
dec
addb
mov
fists
add
mov
add
xor
mov
add
js
in
sub
fs
add
ret
add
inc
pop
jmp
imul
mov
add
sub
sbb
test
add
jecxz
push
add
mov
or
mov
mov
mov
jnp
std
data16
scas
ljmp
test
repz
inc
mov
clc
lcall
add
add
ljmp
mov
add
movl
add
add
ret
sbb
add
stc
lods
cmc
call
insl
imul
push
sbb
lret
and
inc
xchg
adc
mov
dec
sub
mov
arpl
pop
mov
divl
call
pop
test
sub
mov
insb
pop
push
in
xor
mov
add
ljmp
inc
dec
and
xchg
adc
mov
add
cmp
leave
lods
ljmp
fwait
cwtl
popa
push
add
lock
repnz
lock
cmpsl
sub
add
add
in
add
popa
cmp
add
mov
cli
fwait
adc
add
movsl
dec
push
repnz
add
fs
xchg
cltd
push
imul
int
pop
mov
