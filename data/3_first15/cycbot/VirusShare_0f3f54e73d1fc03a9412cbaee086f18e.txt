into
jb
dec
sub
pop
sbb
add
inc
les
mov
add
popf
insl
icebp
add
mov
pop
jmp
add
mov
add
loop
mov
ret
and
js
jo
mov
push
jo
mov
pop
icebp
je
jne
fnstenv
and
fs
add
clc
xchg
push
imul
add
mov
dec
pushf
mov
aad
push
leave
pop
imul
xor
dec
and
mov
add
mov
and
mov
add
mov
cmp
cmp
jae
add
cmp
add
mov
adc
test
sbb
lea
mov
and
data16
gs
pxor
ja,pn
push
add
arpl
mov
push
cmc
lds
mov
mov
mov
push
push
add
add
out
fidivrs
add
and
inc
add
mov
sub
xchg
inc
sbb
mov
mov
add
addb
fdivr
push
add
add
pushf
sti
cltd
je
cmp
and
inc
rolb
mov
add
je
mov
jo
mov
fcomip
add
inc
xor
and
xor
add
xchg
add
mov
mov
lds
hlt
cmp
mov
outsl
mov
scas
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
jge
stc
mov
cmp
daa
inc
add
push
sub
mov
add
cmp
add
xchg
mov
jp
sbb
lods
dec
xor
ja
add
push
pop
inc
and
cli
insl
sbb
bound
mov
test
cltd
test
add
mov
jecxz
or
mov
mov
stos
xchg
add
cmp
add
jb
mov
add
scas
or
mov
je
and
mov
add
add
sbb
aaa
push
sbb
mov
and
out
dec
in
repnz
mov
rcl
mov
mov
xlat
loop
mov
insl
outsl
xchg
add
cltd
sub
sbb
add
mov
cmpsl
mov
es
add
or
mov
fisubrl
int
out
add
lods
test
add
std
mov
fbld
add
jb
mov
adc
jns
add
in
add
add
pop
xchg
add
decl
cmp
popa
mov
ljmp
dec
cmpsl
pop
mov
mov
add
cs
inc
dec
test
add
call
int
add
jecxz
cmpsl
mov
mov
aad
jecxz
test
out
add
dec
lret
fs
mov
add
lcall
and
mov
xchg
arpl
fcoml
add
sbb
in
jmp
mov
mov
popa
pop
stos
pop
xchg
test
sub
jle
jne
inc
pushf
cmpps
popf
pop
clc
lahf
lcall
ret
pop
aad
shll
add
pusha
add
xchg
and
add
pushl
cli
in
int3
mov
into
test
inc
inc
lret
outsl
jl
add
add
cmp
mov
jmp
cmp
jo
mov
add
mov
mov
pop
mov
add
add
xor
add
sbb
out
xchg
fadds
sbb
lret
mov
mov
mov
add
notb
xor
add
add
and
fstps
mov
add
add
popa
jl
out
shrl
pop
nop
add
mov
mov
cmp
sbb
pop
in
icebp
add
shrl
js
xor
ljmp
xchg
daa
jnp
inc
enter
mov
mov
xchg
add
add
mov
xchg
add
leave
mov
add
cmc
mov
das
mov
sbb
in
jmp
add
rolb
mov
in
jecxz
mov
xlat
mov
mov
cmp
or
push
add
add
mov
add
ja
add
add
add
inc
test
daa
arpl
daa
cli
rcll
add
or
mov
arpl
ret
stos
inc
mov
mov
pop
insl
lea
add
jbe
loopne
mov
movsl
jge
push
mov
mov
sbb
push
jle
sub
add
out
mov
mov
call
pop
pop
fsubrp
out
in
xor
lret
mov
add
mov
sub
jbe
repnz
mov
jle
dec
inc
and
add
sbb
sahf
mov
fsts
xor
mov
pop
dec
dec
xchg
xor
fcmovnu
scas
rolb
test
sub
inc
cmp
hlt
inc
xchg
dec
andl
add
loope
loope
push
xor
mov
jb
mov
sub
mov
jmp
mov
mov
adc
dec
inc
andl
in
dec
aam
cli
xor
movsb
lea
test
mov
mov
push
shrl
add
cli
fdivrs
leave
jl
call
cltd
xor
mov
or
les
movsl
add
sub
add
mov
daa
fdivr
fisttpll
xor
mov
cmp
xor
mov
nop
add
mov
inc
add
jecxz
add
scas
in
movsb
sub
push
aas
mov
add
bound
mov
mov
pop
adc
mov
add
mov
in
std
sub
mov
or
push
lock
add
sub
fdivl
mov
inc
add
mov
add
add
add
add
sti
clc
rcr
mov
mov
popa
in
lahf
bound
mov
add
mov
adc
loop
mov
pop
mov
add
mov
add
mov
cmp
fldcw
fwait
repnz
jp
fistl
mov
shll
push
jmp
rolb
mov
xor
gs
push
add
daa
insb
mov
push
pop
mov
dec
cli
or
sahf
mov
or
mov
mov
mov
add
sahf
addb
mov
bound
mov
add
daa
cmp
stos
or
in
lret
in
ss
add
pusha
add
inc
add
imul
mov
add
es
lock
jle
add
push
add
xor
mov
add
fildll
sti
push
add
pop
std
jbe
fwait
pop
negl
mov
bound
mov
fs
fwait
movsb
mov
frstor
add
add
add
cmc
sub
mov
test
add
cmpsb
sub
add
ja
icebp
inc
ret
or
jo
mov
add
add
lret
fcompl
out
lret
ror
add
popf
fiaddl
add
jg
pusha
add
mov
imul
inc
add
add
outsb
xchg
xchg
popa
int3
rolb
mov
cmp
sar
ret
push
mov
add
cld
inc
decb
fsubr
jmp
inc
add
push
insl
movl
jp
inc
add
add
mov
test
scas
jno
inc
jno
sahf
cmp
nop
add
pushf
and
mov
mov
mov
mov
sbb
jne
inc
or
movsl
in
movsb
loope
or
push
lods
adc
add
sbb
shll
mov
mov
insb
aad
repz
add
push
ficomps
dec
sbb
mov
add
out
and
mov
data16
mov
cmpsl
jbe
add
jb
mov
in
cmp
or
push
std
repz
ret
sti
mov
mov
mov
push
inc
add
aas
sbb
add
mov
add
aad
stc
in
out
pop
js
add
and
push
or
jle
adc
and
add
std
mov
add
pop
inc
daa
fwait
push
addb
jne
sbb
cwtl
cli
clc
mov
mov
mov
outsb
sub
je
icebp
lret
jl
das
lea
pop
pop
jb
mov
out
push
jne
adc
mov
jmp
jle
or
mov
sbb
add
xchg
xchg
add
sub
cmpsb
xlat
stc
jb
mov
add
mov
add
jge
xor
mov
add
mov
std
insb
stos
push
sub
add
mov
or
xor
clc
pop
test
test
negb
mov
sub
mov
or
and
mov
mov
xor
lahf
inc
add
mov
add
rolb
mov
push
sub
scas
and
mov
add
incb
or
add
jbe
sbb
sub
fcomps
in
adc
mov
leave
test
dec
or
clc
xchg
and
dec
mov
sub
inc
sbb
movsl
stos
push
sbb
jae
sbbl
cld
in
mov
add
cmpsl
push
pop
sbb
and
mov
cli
repnz
add
icebp
sub
add
jp
add
mov
jmp
mov
mov
addb
subl
jbe
je
add
inc
xchg
adc
add
in
or
adc
xchg
gs
rolb
in
or
stc
mov
mov
sbb
lds
mov
addr16
mov
mov
push
sub
push
inc
ret
inc
lahf
adc
iret
jno
add
mov
mov
dec
js
add
pop
ror
scas
lret
dec
ret
pushf
adc
movsl
mov
mov
outsb
push
sub
mov
stos
xchg
add
mov
in
xor
mov
or
and
scas
or
push
int
pop
call
jns
fidivrl
arpl
sbb
stos
mov
mov
fisubrs
andl
sbb
add
or
fbstp
mov
lock
pop
iret
sub
lea
mov
mov
int
not
and
push
sti
mov
hlt
sub
stos
lret
loope
sti
push
dec
mov
inc
sub
in
pop
push
sub
lock
add
mov
xlat
inc
or
test
pop
or
das
out
sub
inc
pushf
cmpsb
in
add
jae
test
scas
or
add
pushf
cmp
test
xchg
adc
sbb
hlt
icebp
push
iret
insl
les
shrl
mov
mov
mov
fnop
add
pop
sbb
ret
jae
lods
das
xchg
add
push
add
cltd
pusha
add
scas
xchg
mov
add
adc
sbb
incb
test
sarl
xchg
add
addb
arpl
add
add
mov
rcrl
add
bound
mov
mov
movsl
gs
icebp
mov
add
add
jb
mov
in
pop
mov
add
add
aas
inc
dec
jns
or
mov
inc
add
jp
jb
mov
add
xchg
mov
daa
bndldx
jno
pop
push
jmp
enter
mov
bound
mov
out
add
pop
rcll
leave
inc
cmp
inc
rolb
fs
mov
mov
lds
add
lods
push
dec
mov
iret
cs
bound
mov
loope
test
lds
push
xchg
aad
imul
add
xor
aas
xor
mov
in
mov
add
loope
push
mov
mov
inc
pushf
xor
inc
rolb
cmp
sahf
loopne
mov
jo
mov
mov
or
jb
mov
pop
jecxz
adc
les
dec
scas
jno
adc
pop
push
xorl
sbb
mov
adc
mov
mov
lds
lock
notl
and
mov
add
inc
testb
jbe
stos
repz
dec
pushf
xor
je
add
pop
addb
sbb
sub
cmpsb
movsl
pusha
add
lahf
outsb
pop
mov
popl
mov
jmp
add
inc
add
shll
add
fsubl
mov
ljmp
mov
jl
add
add
rolb
mov
sub
cwtl
and
add
add
add
sbb
jmp
and
mov
xor
mov
push
xor
sbb
mov
loop
mov
imul
add
mov
pop
ja
cmp
xchg
repnz
mov
add
sti
sub
and
push
int
sbb
mov
leave
and
mov
add
imul
fwait
in
push
addb
cli
and
or
and
mov
cmp
add
rolb
sbb
out
mov
outsl
fs
add
mov
insb
out
bswap
adc
mov
inc
add
mov
inc
mov
pushf
aam
pusha
add
mov
mov
mov
inc
dec
aad
push
sti
mov
mov
add
aas
iret
inc
add
or
xlat
rolb
mov
add
nop
add
pop
sub
roll
add
imul
add
mov
add
add
add
add
addb
scas
push
mov
mov
loop
mov
sbb
sbb
cmpsb
lret
sub
scas
fmull
add
jmp
iret
subl
cmp
add
pop
out
add
addb
jp
rolb
mov
jmp
ljmp
adc
mov
aad
outsb
add
mov
stc
test
mov
dec
icebp
test
jg
ret
cmp
and
mov
leave
mov
mov
repz
ret
push
and
mov
jo
mov
outsb
pop
cli
fdiv
add
xchg
xchg
add
add
and
cmp
dec
mov
mov
pop
sbb
sbb
int3
mov
ljmp
mov
lds
sub
test
push
cmpsb
inc
or
add
bound
mov
popf
dec
xchg
push
mov
leave
loopne
mov
daa
es
loop
mov
dec
scas
mov
scas
mov
xor
mov
push
mov
add
ljmp
sbb
scas
inc
add
je
cmp
and
sub
push
int3
and
mov
mov
pop
sub
mov
out
xor
mov
add
push
stos
aaa
imul
mov
add
sub
inc
add
int3
xchg
mov
add
dec
lcall
and
lret
cmp
add
xchg
push
jge
add
mov
add
add
inc
clc
data16
pusha
add
push
add
cmp
xor
cld
sub
sub
cmp
mov
fstps
mov
iret
std
cmp
add
repnz
add
adc
sbb
xchg
mov
push
stos
sbb
add
mov
cltd
into
call
xchg
push
stc
dec
lock
mov
mov
nop
add
cmp
add
jns
test
add
mov
mov
mov
cmc
jmp
mov
lods
cmp
daa
aam
test
pop
mov
or
stos
repnz
adc
mov
mov
mov
shll
mov
jg
adc
loope
icebp
inc
add
lahf
mov
sarl
and
add
push
add
pop
xchg
data16
popf
ret
or
add
inc
jp
fs
popa
shll
add
mov
aas
or
add
add
mov
add
mov
lea
test
iret
pop
clc
cs
xchg
cltd
out
in
int
xchg
mov
push
add
addb
xchg
mov
push
or
or
push
jno
cmp
add
push
add
dec
jmp
mov
in
cltd
dec
push
pop
jl
add
mov
out
xchg
mov
mov
imul
xor
push
aaa
rolb
lods
les
add
mov
mov
push
lds
add
jmp
push
shll
add
lea
ret
jnp
jl
push
xorl
data16
mov
ds
pushf
dec
cmpsb
int3
mov
sub
mov
out
movsl
pusha
add
addb
hlt
jle
add
test
lods
pop
popa
adc
and
insl
mov
lods
outsb
sbb
popf
lahf
or
cltd
test
xchg
and
mov
push
stc
jnp
add
mov
popf
je
add
lcall
adc
cmpsl
push
scas
push
fcoms
mov
push
xor
add
push
pop
push
add
cwtl
dec
inc
adc
loop
mov
mov
adc
mov
jle
sahf
in
sti
dec
push
add
cmova
bound
mov
loop
mov
push
std
int
dec
in
cmpsl
lock
mov
adc
inc
in
jecxz
aaa
rcll
sub
lock
imul
dec
enter
cmc
and
mov
int3
pop
repnz
pop
push
das
cmp
test
fidivrl
jp
movsb
or
push
mov
xchg
enter
pcmpeqw
out
xchg
loope
pop
aad
sbb
dec
fimull
pop
push
xchg
cmpsb
add
mov
sub
dec
int3
mov
shll
movsl
nop
add
add
mov
pop
ljmp
add
movsl
inc
pop
xchg
sti
jge
add
mov
add
dec
mov
shll
add
add
or
pop
cmp
je
xchg
add
xor
push
mov
add
mov
rolb
mov
out
cld
test
sbb
cmc
ficoms
pop
addb
xor
mov
add
cmp
mov
push
push
add
aas
adc
add
mov
add
outsl
ja,pt
mov
or
lea
dec
jge
mov
movsl
inc
add
jo
mov
add
adc
rolb
mov
mov
rolb
mov
loope
adc
nop
add
test
jns
mov
xchg
imul
sarl
add
add
xor
mov
add
add
les
add
add
add
xchg
cs
xor
pop
xchg
rcll
test
fbld
into
in
dec
xchg
cli
push
add
addr16
add
pop
js
adc
mov
jno
mov
fwait
mov
mov
lahf
dec
sub
out
iret
inc
jo
mov
subl
fistpll
mov
add
insb
popf
int
int3
mov
add
mov
cmp
add
mov
cwtl
adc
sbb
jo
mov
sbb
rolb
mov
push
mov
add
mov
insb
into
inc
add
lcall
mov
out
fcomps
add
mov
sub
jne
or
fists
call
and
fs
cwtl
test
jb
mov
mov
mov
sub
push
inc
inc
das
test
enter
mov
mov
mov
xchg
addr16
mov
and
push
and
cmc
sbb
mov
fstl
mov
inc
fsubs
and
push
add
jne
std
fbld
add
sub
lret
in
add
lea
mov
fistpll
and
pusha
add
cmp
jne
lcall
das
addb
xchg
add
inc
stc
cmp
add
and
add
int3
inc
imul
jmp
push
test
ds
ret
xlat
out
mov
cmc
mov
add
mov
push
leave
test
dec
addb
mov
out
sub
jl
xor
mov
and
mov
adc
cli
sbb
add
jno
xchg
add
mov
xor
mov
pop
jl
xchg
imul
loop
mov
add
xchg
jae
jge
sbb
mov
addr16
mov
mov
sbb
add
add
add
mov
outsl
push
addr16
adc
jmp
rolb
mov
mov
outsb
lea
sbb
hlt
inc
jb
mov
jmp
pop
or
aas
or
xor
lahf
and
mov
add
ficomps
imul
add
add
lods
ljmp
aad
mov
xchg
or
xor
stos
scas
mov
cld
mov
call
ljmp
xchg
lds
add
mov
stos
addb
mov
mov
push
ss
sahf
repz
lcall
js
mov
add
mov
cmpsb
stos
sti
je
imul
cltd
mov
scas
outsb
addb
clc
inc
ja
pop
cmp
cmp
jne
pop
jp
xchg
fbstp
mov
push
cmp
mov
push
push
jne
sti
leave
adc
insl
rolb
inc
add
lahf
or
int3
jns
daa
mov
sub
sbb
cmp
mov
add
jmp
mov
dec
mov
mov
mov
add
cld
cmp
add
mov
lock
mov
roll
pushf
js
mov
mov
lcall
imul
das
jnp
daa
cltd
xor
sbb
cmp
add
mov
cmp
out
loop
mov
jl
insl
xor
mov
stc
outsb
add
mov
dec
icebp
test
jle
jecxz
or
mov
or
dec
fldenv
rolb
mov
bound
mov
mov
cmp
cmp
mov
push
xor
mov
jmp
lret
push
xor
add
push
sbb
dec
lret
fidivrl
mov
cli
mov
mov
jle
add
and
pop
scas
lds
xlat
adc
mov
add
mov
int3
aad
sub
nop
add
add
popf
mov
bound
mov
les
add
and
mov
fidivrl
test
and
add
out
sub
mov
mov
popw
pop
push
cmp
or
pop
cwtl
stc
mov
mov
jae
bound
mov
sarl
push
add
scas
or
scas
dec
sub
push
pop
pop
sub
mov
inc
add
push
jle
loop
mov
sahf
cltd
xchg
cltd
sbbl
clc
cltd
mov
xor
mov
nop
add
push
adc
das
or
inc
addr16
adc
mov
adc
mov
aad
mov
dec
or
add
or
js
sbb
and
mov
rcll
add
out
xchg
aad
add
pushf
out
pop
pushf
outsl
push
int
sahf
test
and
mov
sti
cmp
add
arpl
mov
mov
cmp
pop
in
push
add
push
push
in
les
mov
and
add
or
dec
jo
mov
cltd
scas
lds
call
mov
pop
push
add
mov
mov
fistps
lock
add
jl
inc
movsl
das
push
sbb
lcall
push
add
test
add
xor
mov
pusha
add
push
mov
and
sub
dec
jmp
sbb
mov
add
dec
or
xor
push
mov
add
lods
aaa
stos
and
mov
maskmovq
mull
jl
filds
add
push
mov
or
fdivr
xchg
addb
mov
stc
les
mov
scas
lret
add
mov
cli
sbb
add
sub
sbb
xchg
pop
jle
aaa
dec
aas
fcoms
push
add
scas
out
add
popa
dec
xor
mov
add
add
add
add
xor
push
gs
xor
mov
insl
test
jae
dec
iret
or
fnstcw
fwait
mov
inc
jae
divl
mov
mov
xchg
aas
xlat
ja
dec
add
mov
adc
aas
jb
mov
add
cwtl
lcall
jmp
and
or
imul
adc
mov
inc
adc
push
imul
add
mov
mull
fsubp
popf
or
ss
or
pop
pop
xor
mov
add
push
push
mov
pop
lret
pop
setb
mov
mov
mov
aad
add
mov
sahf
mov
pop
sbb
mov
xchg
sub
mov
xchg
mulb
add
inc
decl
cmp
cmp
test
ret
test
push
add
add
mov
inc
scas
jl
lds
cltd
rolb
mov
push
add
or
add
lret
pop
pop
shrl
add
shl
and
mov
add
mov
pop
cmpl
xor
mov
push
lahf
in
pop
mov
mov
lock
mov
add
push
xor
mov
pop
mov
cmp
pop
iret
out
and
mov
lcall
dec
faddl
mov
mov
jmp
mov
js
push
idivb
dec
xchg
add
cs
in
movsl
addb
lahf
pop
pop
inc
add
mov
mov
repnz
test
jp
aad
jecxz
or
shll
dec
jno
in
cs
push
jae
inc
add
jne
inc
xchg
add
loop
mov
in
jae
pop
jle
ret
mov
mov
or
dec
jo
mov
addb
stos
out
fsubl
lea
push
pop
cmpsb
xor
add
arpl
fidivrs
add
mov
add
inc
add
repnz
aaa
cmp
dec
int3
repnz
or
aam
add
dec
fistpll
mov
ljmp
ds
pop
ss
mov
test
mov
notl
add
add
sub
xor
mov
mov
sub
data16
lds
xchg
test
mulb
jp
add
mov
inc
rolb
mov
hlt
mov
mov
mov
addb
jno
inc
gs
out
fwait
or
xor
jbe
add
mov
jae
add
dec
and
mov
fstps
push
dec
stc
pop
jp
inc
lock
popf
xor
mov
fdivs
mov
add
jg
stos
jb
mov
adc
add
inc
mov
mov
inc
push
push
addr16
mov
sub
mov
adc
cmp
jb
mov
sti
and
arpl
mov
add
clc
dec
out
pop
pushf
outsl
dec
xor
sbb
repnz
mov
xorl
add
add
sti
imul
mov
jmp
xchg
mov
pushf
lods
loope
ljmp
fiaddl
mov
add
mov
xor
mov
mov
add
idivl
into
inc
push
mov
add
mov
push
push
movsb
test
cmc
jnp
add
mov
bound
mov
add
popf
fimuls
lret
adc
mov
add
xchg
pop
mov
mov
add
mov
cmc
test
xchg
add
add
add
imul
mov
int
mov
and
cld
jne
xchg
divb
adc
icebp
xchg
add
sub
push
sbb
aad
jmp
mov
jecxz
mov
mov
xor
lods
fadds
mov
and
mov
aam
call
mov
scas
push
jmp
fwait
pop
divb
fstpt
addb
in
mov
daa
insb
imul
and
sbb
inc
add
add
add
xor
jle
jle
mov
jge
sbb
cmp
add
lret
mov
inc
xlat
cmpsb
pop
inc
add
shll
xor
repnz
mov
inc
add
and
lds
add
loop
mov
mov
jno
add
mov
push
mov
sub
mov
pushf
das
lds
fs
cmc
mov
push
call
sub
mov
add
lret
popl
pop
inc
add
scas
or
pop
stos
jmp
dec
add
add
jle
or
add
addb
lea
stc
xchg
push
add
add
mov
adc
in
rolb
mov
lret
testl
push
testl
bound
mov
add
adc
and
mov
jmp
nop
add
addb
jmp
rcrl
stos
repnz
mov
insl
les
clc
dec
repnz
mov
jnp
fs
adc
mov
add
mov
mov
pop
stc
and
mov
mov
aas
outsb
lea
push
dec
fs
adc
sub
mov
lds
in
adc
inc
mov
dec
int
popf
stos
test
out
repnz
imul
scas
popa
mov
xchg
pusha
add
jbe
jle
and
add
push
test
add
mov
lcall
pusha
add
popa
mov
lret
arpl
jnp
cmc
outsb
sub
mov
pop
insl
push
add
mov
mov
lods
icebp
rol
add
and
inc
repnz
test
add
mov
pop
push
ret
dec
inc
inc
and
mov
or
popa
cmp
add
add
test
in
lods
mov
or
mov
setno
mov
xor
ret
mov
add
add
ds
fucomp
cmpsb
out
xchg
and
rolb
mov
arpl
add
mov
hlt
leave
fmull
stos
and
mov
add
rol
stos
xchg
pop
pop
rolb
mov
aad
movsl
pop
jle
mov
dec
js
push
xchg
lcall
add
mov
addb
movsl
jle
add
loop
mov
xorl
push
das
data16
mov
ds
mov
sbb
mov
inc
enter
popa
addb
push
xchg
add
cmp
dec
ret
or
push
inc
mov
nop
add
add
icebp
int
add
add
in
and
mov
mov
aad
xchg
add
jmp
es
mov
imul
add
ljmp
or
mov
mov
sub
dec
mov
mov
ljmp
sti
cmp
push
add
cmp
push
xorl
mov
pusha
add
test
add
imul
data16
and
mov
call
cmpsl
lret
cs
in
js
xlat
adc
sbb
fs
jo
mov
enter
in
in
daa
mov
adc
mov
add
adc
add
cwtl
pop
add
rolb
inc
add
in
je
xchg
pop
dec
imul
sahf
shll
mov
repz
mov
in
mov
jb
mov
mov
mov
ret
lods
mov
mov
add
mov
sub
pop
or
pusha
add
sbbl
xchg
mov
add
pop
and
mov
dec
add
sub
xchg
xchg
pop
rolb
mov
add
sti
rolb
mov
and
mov
and
jno
mov
push
pop
mov
add
cwtl
push
dec
mov
mov
cmp
mov
mov
jbe
fcomi
adc
fiaddl
sbb
pop
outsl
lret
or
add
imul
mov
mov
mov
cwtl
xor
in
dec
rolb
mov
sub
sub
sub
and
pop
scas
dec
js
movsb
mov
inc
add
pop
ljmp
inc
xchg
fdivr
pop
pop
push
inc
sbb
popa
jbe
cmp
mov
int3
mov
push
mov
mov
inc
hlt
mov
or
fs
imull
sub
leave
mov
mov
hlt
pop
cmp
add
jmp
cwtl
lcall
pop
dec
sbb
jp
push
sub
cmp
je
inc
mov
and
add
add
add
cmp
and
cmp
and
cld
and
push
add
mov
or
test
repz
out
mov
fs
insl
sub
roll
mov
push
jbe
not
das
das
arpl
mov
mov
or
imul
sub
test
add
fsubp
mov
mov
xor
mov
jl
adc
fcoml
testb
mov
mov
mov
stos
addb
adc
cmp
ja
xchg
adc
push
sarl
mov
mov
insb
push
dec
add
dec
loop
mov
ret
fdivrp
mov
mov
jne
add
and
mov
out
mov
add
xor
dec
xchg
add
add
or
add
adc
mov
inc
add
xor
pop
shll
js
dec
push
xor
mov
inc
hlt
mov
xor
mov
add
push
add
mov
add
or
arpl
dec
inc
scas
mov
sti
out
add
add
fdivp
push
add
xor
pop
adc
or
lea
xchg
pop
mov
imul
cli
jae
sahf
fsts
inc
add
add
jg
dec
inc
or
mov
mov
ficoml
add
and
mov
add
xchg
xchg
add
sub
push
fsubs
in
dec
inc
cli
loop
mov
mov
add
popa
test
fstps
or
ds
roll
push
xchg
lods
hlt
cmp
fs
jp
stos
jmp
xor
jg
stos
inc
add
add
mov
mov
scas
jnp
leave
popa
dec
loope
mov
jg
aaa
mov
jae
jle
add
and
sbb
mov
fdivl
les
inc
adc
jno
xchg
add
mov
aaa
jle
push
repnz
sar
xlat
dec
pop
fdiv
in
stos
std
fsts
push
lcall
add
lahf
jns
add
mov
dec
inc
std
push
movsb
imul
pop
mov
mov
jae
notb
in
leave
lahf
repnz
hlt
lahf
sub
add
cmp
mov
lods
fsubl
mov
add
push
inc
orl
pusha
add
daa
mov
jl
daa
out
shrl
imul
mov
pop
xchg
sub
mov
add
cmp
jbe
add
pushf
sti
lcall
ja
inc
add
fmull
pop
push
hlt
pop
pop
jmp
sub
mov
sub
cmp
sbb
arpl
push
push
add
bound
mov
mov
btr
adc
repnz
cmpsl
lock
into
xor
mov
rolb
mov
sub
std
and
punpckhwd
add
fisttps
mov
push
mov
mov
or
and
mov
cmp
add
inc
movsb
ficoml
out
lds
jmp
gs
cmc
xor
mov
and
jo
mov
pop
call
mov
sarl
add
add
rolb
mov
inc
add
mov
or
add
inc
or
js
cmp
or
jae
mov
add
push
out
and
cmpsl
fcoml
cmp
ret
js
cs
xchg
cmpsl
xchg
scas
add
dec
sahf
jne
xchg
add
sub
cmc
lock
insl
mov
mov
jno
mull
mov
xchg
xlat
lea
mov
mov
cmp
adc
cs
sbb
sbb
add
cmp
insl
sbb
and
xor
mov
ret
insb
repz
aas
int
jp
mov
fdivr
add
sbb
stc
icebp
mov
icebp
stos
mov
mov
imul
popa
mov
or
jnp
jbe
cmp
pop
add
mov
add
lret
inc
xor
jae
jl
mov
adcl
in
add
pop
jne
push
je
std
fimuls
mov
add
sub
mov
je
int
push
mov
mov
add
repz
inc
add
ret
xor
mov
mov
jle
push
inc
leave
cld
mov
add
jae
add
cmp
int
js
jne
lret
pushf
icebp
aas
aas
outsl
lret
mov
mov
ljmp
popa
loopne
mov
sbb
cmc
rolb
mov
dec
mov
xlat
mov
push
xor
mov
dec
repnz
fwait
jb
mov
lock
aad
add
push
data16
jle
sbb
mov
xchg
adc
fimuls
jge
add
pop
movsb
sub
loopne
mov
mov
sbb
or
fistpll
and
mov
mov
jl
jle
dec
jne
add
sub
add
push
movb
lcall
add
repz
push
add
lcall
testb
out
add
rolb
mov
mov
out
or
jns
add
mov
lods
jg
jnp
cmc
xlat
mov
int3
sub
adc
mov
adc
mov
daa
xchg
arpl
add
aad
mov
xchg
rolb
es
jp
add
mov
add
xchg
dec
iret
cmc
aam
add
mov
cmc
adc
mov
out
fstps
cmp
mov
push
add
sbb
add
out
add
adc
xchg
mov
cmpsl
cltd
mov
aad
das
in
push
push
loopne
mov
dec
sub
insb
push
mov
xor
jmp
xchg
add
popf
inc
lahf
or
inc
or
mov
test
xchg
add
mov
pop
arpl
movsb
test
add
add
mov
addl
outsl
nop
add
add
mov
mov
cmpsl
sahf
lret
add
mov
inc
xor
dec
inc
xchg
mov
mov
jmp
pop
push
push
cmpsl
addr16
add
int
insl
sahf
mov
jge
add
add
add
mov
ja
xchg
dec
das
int
popa
mov
pop
scas
seto
mov
aad
add
mov
cmp
mov
add
xchg
imul
cltd
test
daa
iret
adc
mov
sahf
mov
push
xchg
add
mov
push
add
push
pop
xor
jbe
fstps
add
add
mov
fwait
daa
jecxz
add
jmp
adc
adc
mov
jae
jnp
mov
mov
add
mov
mov
jbe
add
mov
pop
push
mov
add
add
add
fbld
add
pop
or
push
jp
or
add
clc
cltd
popf
or
nop
add
xchg
jo
mov
xchg
mov
push
mov
ds
dec
jo
mov
mov
pop
shll
mov
mov
jle
add
cmp
mov
add
xchg
mov
xor
ljmp
and
mov
rorl
mov
insl
lea
jmp
add
iret
push
push
idiv
xlat
fs
leave
mov
insl
outsb
es
stos
vshufpd
xchg
adcl
cmc
sarl
xor
jge
add
mov
icebp
or
xchg
add
pop
xchg
push
pop
int3
push
outsl
movsl
outsl
jns
jl
cmpsl
repnz
popf
call
push
add
ss
lock
add
mov
xchg
cmp
pop
stc
ljmp
push
mov
add
sub
fwait
in
push
add
mov
out
jb
mov
shll
add
mov
cmpsl
nop
add
in
loopne
mov
sti
stos
mov
push
add
add
pop
mov
or
testl
add
add
push
xlat
fildl
inc
lds
mov
xchg
add
add
decl
mov
mov
mov
or
add
test
ja
mov
lret
inc
add
repnz
loop
mov
bound
mov
sub
fdiv
add
stos
xchg
icebp
push
jp
dec
mov
ret
fists
sti
std
loop
mov
lds
test
outsl
lods
cmpsl
out
push
add
ret
jmp
pop
sbb
addb
imul
inc
cli
mov
jecxz
mov
add
popa
cmp
bound
mov
add
mov
mov
das
and
push
cwtl
test
add
cmc
jmp
jle
add
stos
push
add
mov
aas
pusha
add
negl
cmpsb
jnp
js
jb
mov
add
mov
and
mov
adc
xchg
iret
mov
adc
fcompl
je
in
push
or
and
mov
inc
addb
jo
mov
add
adc
inc
out
popa
int
test
add
sbb
add
mov
jmp
pop
js
roll
daa
inc
add
add
sub
pop
inc
stos
test
add
mov
add
in
or
ljmp
in
push
imul
cmp
pop
mov
mov
jp
or
sbb
add
out
loop
mov
test
loop
mov
lods
adc
imul
hlt
movsb
into
or
mov
xchg
add
mov
fildl
mov
jns
in
xchg
inc
mov
add
add
gs
dec
mov
mov
inc
and
jle
add
fcmovnu
fists
add
jp
inc
add
cmp
jle
sbb
mov
pop
addb
mov
push
fwait
mov
add
mov
mov
cmc
inc
push
push
scas
aam
and
mov
cmpsl
les
mov
dec
or
call
add
add
xor
add
xchg
sub
ret
cmp
jmp
jmp
add
das
out
and
inc
adc
add
xchg
add
rorl
mov
push
mov
add
sub
xchg
mov
cltd
paddb
sbb
mov
aad
sbb
sub
inc
add
add
add
mov
mov
add
xchg
pop
bsf
xor
or
push
jns
addb
jp
push
lods
mov
in
mov
add
movsb
push
fstl
cmp
jge
sub
js
mov
add
cmp
mov
pushf
jo
mov
cmp
mov
add
insl
add
add
in
push
scas
push
dec
pop
xchg
pop
aad
push
add
incb
and
lcall
repz
pushf
insb
xchg
cmp
stc
hlt
gs
fwait
mov
sbb
fwait
adc
mov
mov
repnz
push
push
mov
mov
outsb
jmp
pop
and
mov
sti
in
imul
dec
add
adc
jb
mov
mov
xor
mov
and
inc
push
add
and
mov
add
fimuls
add
mov
cwtl
push
imul
sbb
mov
repnz
outsb
ja
ss
bound
mov
add
xor
mov
mov
push
mov
xor
mov
and
add
cmpl
insl
outsl
imull
push
cmp
mov
movsl
sub
xorl
add
std
orl
mov
add
xchg
adc
add
lods
cld
clc
jns
test
repnz
pop
packssdw
bound
mov
dec
add
sub
add
aaa
aaa
and
rolb
mov
mov
add
sbb
sti
leave
add
out
js
pop
or
lret
flds
push
pop
adc
bound
mov
mov
mov
test
je
add
xor
addb
cmp
jmp
loop
mov
sub
add
das
xlat
pushl
imul
push
mov
inc
pop
les
jno
sbb
push
add
ss
mov
mov
add
mov
or
jg
mov
add
pusha
add
dec
in
stc
sbb
pop
adc
mov
fwait
hlt
clc
daa
lock
mov
fwait
ss
mov
lea
add
mov
gs
fwait
lret
mov
fcoml
les
push
rorl
or
add
movsb
inc
in
imull
jle
mov
add
repnz
imul
add
fsubl
addb
lds
push
add
add
mov
outsb
leave
cmpsl
clc
add
add
pop
rolb
mov
addb
dec
push
mov
adc
and
mov
std
or
mov
add
mov
cs
pop
mov
sbb
fstl
pop
cltd
cmp
mov
push
add
ds
add
push
add
mov
add
cmpsb
ss
pop
test
aam
add
mov
mov
add
inc
add
jle
out
pusha
add
jae
outsb
stc
mov
add
iret
inc
shll
inc
push
adc
mov
add
pop
jmp
sbb
fwait
xchg
call
adc
mov
mov
mov
inc
in
les
mov
aad
popa
inc
filds
jne
lret
sbbl
fcmovnbe
mov
ljmp
push
xchg
jle
dec
pusha
add
bound
mov
add
dec
in
mov
mov
inc
loop
mov
fld
add
sbb
inc
in
add
pushf
std
mov
mov
xor
mov
lea
mov
and
add
adc
add
sahf
aas
inc
mov
movsl
aaa
jle
fldcw
and
std
loope
mov
inc
sahf
pop
fstpl
adc
add
cld
jb
mov
imul
mov
loope
shll
mov
or
xor
sbb
jmp
push
popf
ret
lock
push
dec
push
mov
mov
test
enter
add
adc
jo
mov
std
xchg
stos
xchg
fldl
repnz
in
xchg
mov
jb
mov
jl
add
mov
in
jne
add
call
mov
mov
js
inc
movsb
push
mov
mov
js
add
std
in
jle
hlt
repz
cmc
adc
repnz
cmpsb
mov
adc
mov
mov
cmpsl
nop
add
and
pushf
jbe
call
stc
addb
fxch
cmp
push
rol
or
loopne
mov
cmp
add
sahf
stos
call
mov
bound
mov
push
mov
insl
xor
push
jnp
cmp
jge
and
out
mov
jecxz
roll
cmpsb
arpl
or
rcll
pop
inc
mov
mov
push
cmp
add
testb
mov
dec
xor
jecxz,pn
add
add
jo
mov
pop
jno
add
lahf
out
add
push
adc
testb
inc
add
add
scas
inc
addb
test
push
rolb
mov
test
add
jg
ret
cmp
mov
cmp
fdivrp
stos
out
fidivl
lcall
sub
jmp
repnz
pop
xchg
rorl
push
adc
xchg
add
xchg
inc
xor
jno
pop
icebp
stos
xchg
pop
jp
lret
xor
add
es
ja
pop
push
add
cmp
cmp
adc
add
inc
fistpll
dec
mov
pop
fwait
loop
mov
add
scas
stos
sbb
in
jecxz
add
xor
push
lods
push
shrl
add
mov
lock
pop
rcrw
xchg
popa
mov
stos
cmp
popa
test
pop
test
xchg
icebp
fisubl
add
or
frstor
cmp
stos
mov
push
mov
mov
pop
popf
mov
mov
mov
cmp
add
lret
pushf
pop
xchg
lods
or
insl
test
sub
inc
int
sahf
fisubrs
shll
ljmp
in
ficompl
test
out
pop
xchg
mov
cmc
stc
mov
inc
jns
add
fldcw
jecxz
adc
mov
stos
les
hlt
scas
sub
enter
es
xor
mov
testb
xor
sbb
ret
sub
popf
mov
aam
rolb
adc
mov
cld
push
adc
mov
mov
add
add
aam
sarl
xchg
xor
inc
add
rcrl
and
add
sbb
jbe
add
jmp
lods
push
xchg
arpl
call
repnz
cmp
mov
mov
pop
scas
int3
cmp
push
add
lods
xor
call
xchg
inc
sub
inc
xchg
ljmp
or
add
repnz
pushf
pop
out
arpl
aaa
adc
setno
sbb
daa
xchg
loopne
mov
mov
push
cwtl
cld
mov
cli
xor
cs
add
add
lods
stos
xor
add
and
add
sbb
add
imul
adc
test
hlt
add
jbe
cmpsb
jne
fsts
adc
mov
xchg
add
mov
mov
ret
and
and
mov
out
add
mov
ret
mov
jle
dec
neg
sbb
popf
lret
mov
add
push
inc
xchg
xlat
cmpsl
pop
push
add
jecxz
add
push
add
addb
xchg
push
lea
mov
xor
jb
mov
mov
add
mov
add
jmp
int
add
cmp
push
xchg
or
cld
add
inc
sub
fnstsw
cmpsl
and
push
mov
mov
rcr
cmp
inc
in
cmp
push
jne
xchg
or
add
mov
lods
jbe
xchg
jp
add
add
dec
loopne
mov
lahf
or
cltd
test
and
jne
push
mov
cli
add
mov
mov
or
mov
mov
sub
dec
mov
mov
in
pop
rcll
xor
mov
cmp
in
xchg
insb
mov
popf
hlt
movsb
push
aad
mov
lods
mov
mov
mov
inc
add
cs
add
mov
jmp
mov
sbb
nop
add
xchg
in
add
mov
mov
rolb
mov
push
dec
movsb
mov
imul
mov
mov
or
xor
mov
sub
add
es
mov
jmp
add
in
sbb
mov
cmp
inc
jp
cwtl
mov
das
fsubrp
movsb
pusha
add
cmpsb
or
add
fbstp
cmp
insl
pop
imul
lea
in
sti
push
ja
mov
mov
jmp
add
push
popa
add
mov
add
xchg
rcll
jae
cmp
add
add
enter
sbb
add
sti
fadd
pop
sub
les
das
push
or
in
insl
pop
nop
add
inc
lea
fcom
add
add
xor
mov
es
mov
sub
aam
add
in
test
dec
add
mov
and
fcmove
jp
and
adc
outsl
sub
movsl
mov
push
add
leave
push
adc
mov
lahf
stc
jb
mov
repz
mov
sub
xchg
mov
push
rolb
fwait
pop
mov
ja
mov
mov
lods
fs
movsl
hlt
xor
xchg
cmpsl
scas
ss
and
stc
outsb
and
add
add
add
mov
outsl
mov
add
push
lea
mov
mov
aad
jb
mov
push
mov
or
xchg
es
mov
xor
addl
scas
repnz
iret
lock
add
sahf
test
add
xor
mov
mov
and
mov
dec
or
inc
sub
jnp
imul
add
pop
jns
add
dec
and
cltd
bound
mov
push
inc
add
xor
mov
mov
and
mov
and
adc
mov
adc
rcll
bound
mov
test
mov
in
add
add
lds
daa
in
jbe
xchg
xor
pushl
mov
xchg
sub
push
push
cmp
mov
insb
rolb
pusha
add
fisubs
mov
mov
mov
inc
mov
sbb
jne
cmp
fldenv
mov
repnz
jmp
and
mov
mov
movsl
das
push
add
xor
dec
push
add
mov
bound
mov
cmp
jmp
mov
add
xor
mov
test
icebp
mov
movsb
dec
hlt
addb
dec
inc
imul
cmpsl
inc
lds
repz
add
divb
add
xchg
pusha
add
mov
push
push
std
add
adc
ret
pop
jne
pop
in
push
movsb
mov
mov
in
rcr
stos
sbb
mov
fisttps
and
mov
push
imul
add
lret
mov
inc
ret
jge
xorl
mov
xchg
out
mov
ljmp
mov
mov
je
out
sbb
stos
add
daa
jno
inc
sbbl
xchg
clc
ud2
cld
dec
pop
sub
repz
jns
xchg
addb
mov
jmp
out
into
cmp
pop
sarl
cltd
es
mov
pop
popa
insb
ja
icebp
mov
xchg
inc
ja
out
pop
mov
mov
movsb
outsl
jecxz
add
mov
inc
add
cld
cmp
jecxz
add
or
jge
inc
rcll
fmul
enter
mov
iret
popa
sahf
lea
aaa
shll
dec
mov
fcoml
add
mov
push
cltd
xchg
stos
movsl
dec
fwait
push
xor
mov
xor
mov
sahf
dec
sti
sarl
mov
rcrl
dec
jb
mov
aas
mov
mov
lock
mov
mov
xor
mov
push
add
mov
cmp
add
mov
mov
leave
ja
add
pop
sarl
pop
test
mov
scas
adc
mov
pop
and
nop
add
push
add
das
daa
jecxz
arpl
sar
dec
es
inc
xorl
fildll
in
sub
icebp
rcll
add
dec
stc
push
pop
sub
add
adc
mov
rcrl
inc
cs
mov
cwtl
push
popw
dec
mov
or
aad
pop
daa
les
xlat
pop
xchg
push
addb
in
int
inc
add
add
lcall
fiadds
insb
xor
fucomip
mov
in
in
negb
or
movsl
pop
out
jle
lret
mov
push
sub
add
daa
pop
fbstp
mov
jnp
jne
or
mov
fbstp
xlat
mov
push
mov
and
jno
jmp
hlt
bound
mov
and
lahf
idivl
insl
repz
test
mov
jg
cmpsb
icebp
mov
rolb
mov
mov
out
out
bound
mov
adc
mov
fwait
add
mov
jl
add
mov
or
sbb
cmc
lahf
jae
xchg
push
xchg
add
mov
flds
loope
xchg
enter
insb
movsb
pop
lods
inc
xchg
test
std
mov
sbb
bound
mov
sub
cmp
mov
in
xor
or
or
cmc
push
add
sbb
lret
int
cld
das
xchg
inc
pop
push
add
add
in
mov
rolb
test
in
jecxz
add
add
mov
stos
push
ds
ret
loop
mov
popf
pop
lock
mov
daa
lea
icebp
sub
mov
adc
mov
cmp
pop
push
lds
test
cmpsl
mov
xchg
add
mov
movb
movsb
push
pop
mov
adc
cltd
addb
dec
cwtl
movsb
js
add
mov
mov
add
mov
aas
or
xchg
add
jbe
ljmp
out
test
add
rolb
sti
mov
add
pop
subl
add
mov
add
add
test
xor
mov
add
sub
add
jl
bound
mov
sbb
add
jne
cmpsl
push
popf
xchg
pop
jmp
add
in
add
pop
adc
pusha
add
mov
jg
and
rolb
mov
jmp
jge
jne
mov
mov
mov
jp
add
mov
adc
mov
add
pop
cmp
lea
cmp
cmp
and
mov
movsl
sbb
xchg
out
inc
add
pop
add
mov
lahf
inc
aam
xchg
mov
add
test
mov
mov
xor
mov
mov
into
mov
movq
and
cmp
add
xchg
sub
loope
mov
xchg
addb
mov
fucomip
jl
add
add
mov
add
mov
in
xchg
xchg
pop
repz
fs
inc
add
lret
fs
in
sub
mov
jne
inc
mov
movsl
cmpl
lods
pop
leave
and
mov
xor
add
jmp
arpl
sub
iret
leave
xorl
xchg
add
pop
dec
lcall
sbb
add
sbb
adc
mov
je
mov
push
adc
cs
cmp
mov
andl
sti
sbb
fadds
pop
pop
pop
rolb
mov
push
lret
adc
aaa
xlat
and
cltd
xchg
ss
pop
push
inc
add
dec
fsubl
add
imul
or
cmovns
mov
testb
mov
repnz
add
aas
mov
mov
mov
loopne
mov
push
cmpsb
addb
mov
mov
add
and
mov
pop
bound
mov
nop
add
insl
lret
orps
mov
shll
fildl
sub
inc
fsubrs
outsl
mov
out
sbb
xor
add
insb
shll
add
cwtl
es
add
mov
loope
sub
cli
mov
add
add
inc
xchg
adc
stc
jecxz
add
add
scas
in
jle
and
mov
dec
rolb
mov
add
sbb
js
loop
mov
in
inc
xorl
aas
cltd
sub
push
insl
mov
xor
mov
je
push
add
and
mov
adc
push
arpl
rolb
mov
dec
push
mov
mov
add
test
add
outsb
mov
hlt
cmpsb
int3
out
inc
dec
cmp
push
pop
xchg
mov
addb
cmpsl
outsb
xchg
mov
mov
inc
mov
cltd
add
pop
xchg
push
js
scas
mov
mov
push
addb
enter
icebp
adc
mov
mov
push
ds
xchg
sti
or
xchg
loop
mov
add
jb
mov
aaa
xor
mov
mov
push
mov
push
lods
xor
mov
rolb
mov
lcall
add
xor
fistl
jl
add
push
xor
mov
or
lods
imul
mov
out
mov
xor
mov
pop
jbe
mov
fwait
push
dec
or
mov
mov
and
mov
pop
fs
add
mov
fsubrl
insl
mov
insl
jae
ss
popf
repz
sub
or
mov
add
mov
popa
movl
push
xlat
call
rolb
mov
int3
adc
and
mov
decb
mov
cmp
lahf
icebp
movsb
lods
dec
jo
mov
jne
mov
xor
loopne
mov
lret
pop
mov
add
mov
cltd
mov
mov
add
add
xchg
test
jmp
jle
test
faddl
imulb
dec
mov
push
movb
mov
lcall
push
dec
pop
movsl
xor
mov
mov
sub
loope
pop
test
loopne
mov
inc
jno
xchg
inc
mov
mov
in
push
stc
int
add
cli
push
add
inc
push
and
mov
in
stos
fwait
aas
sub
add
add
mov
cmp
fadds
mov
stos
mov
mov
sub
sub
add
mov
mov
in
jmp
pop
xchg
add
mov
inc
add
pusha
add
jge
and
xor
mov
xor
mov
add
mov
insb
mov
insb
or
jo
mov
imul
mov
sbb
mov
lods
gs
cli
adc
fildl
add
jmp
insl
les
inc
insb
inc
mov
mov
ret
jnp
inc
sub
leave
mov
lcall
pop
insb
inc
aad
lret
cs
add
cmp
addr16
push
add
out
add
inc
std
aas
stos
mov
mov
add
add
mov
cli
lret
mov
addb
out
adc
xchg
enter
cmp
addb
cmp
inc
out
xchg
sbb
xchg
lret
jge
or
mov
mov
outsl
fisubrs
jo
mov
jg
add
inc
push
pop
mov
cwtl
test
mov
mov
call
add
pop
frstor
and
dec
pop
lahf
dec
cmp
rolb
mov
push
mov
jp
xchg
add
jnp
loopne
mov
mov
in
jecxz
mov
fmul
jnp
icebp
or
xchg
and
mov
push
test
fs
push
loopne
mov
stos
push
xchg
mov
mov
jbe
jle
xor
mov
mov
push
add
fldcw
and
mov
enter
mov
mov
and
lods
and
jnp
pop
dec
dec
mov
dec
imul
dec
cltd
inc
add
sbb
stos
sbb
add
add
add
add
std
xchg
out
fadds
imulb
mov
mov
test
sbb
inc
icebp
je
xchg
outsb
cmp
rolb
mov
add
sub
mov
aad
fdivs
add
rolb
mov
jecxz
stos
mov
dec
popl
int
fildll
sub
add
mov
add
sub
daa
in
sub
xchg
adc
mov
push
cli
fcoml
add
push
shll
mov
inc
add
repnz
adc
adc
mov
fisubrs
adc
mov
mov
sbb
jbe
dec
lret
ret
add
pop
or
movsb
jae
rolb
dec
xchg
add
add
lcall
jae
add
inc
mov
mov
add
jb
mov
nop
add
xchg
add
fsubrs
inc
mov
mov
addb
dec
inc
lds
sahf
and
mov
sahf
scas
pop
mov
test
xor
mov
add
pop
sub
stos
repz
stc
pop
pop
sbb
cmp
add
lsl
mov
mov
mov
pop
stos
pop
add
mov
push
sub
add
in
jl
aas
jbe
jg
jmp
lods
repnz
mov
push
lahf
addb
sbb
fwait
sbb
nop
add
add
mov
mov
sbb
int3
std
push
aas
cmp
pop
mov
add
cmp
add
mov
adc
roll
repz
pop
frstpm(287
mov
movsb
scas
ss
inc
arpl
add
mov
mov
gs
shrl
jge
rolb
imul
lods
jns
decl
mov
js
mov
add
mov
add
xchg
shrl
sbb
add
lea
enter
mov
xchg
mov
add
add
xor
add
mov
mov
lea
in
inc
pop
xor
jle
leave
lods
enter
and
mov
test
add
cwtl
push
int
xchg
and
ljmp
add
fmull
ret
push
add
add
lret
lods
jns
cmp
or
xlat
rolb
mov
sub
int3
addb
je
divb
xchg
inc
add
add
inc
push
test
filds
mov
dec
mov
popf
in
lea
lock
add
fadds
dec
dec
sub
ljmp
mov
ljmp
lds
ret
push
pop
lcall
mov
jbe
arpl
push
cmc
jnp
sub
lea
rolb
mov
adc
push
jbe
inc
add
ja
repz
adc
adc
inc
push
jnp
mov
jns
dec
out
cmp
lods
rolb
and
mov
add
mov
mov
ss
addr16
addb
je
lock
insl
sub
jne
add
addb
push
add
fcmovbe
pop
cli
out
add
cmpsb
jg
inc
test
xchg
setl
push
mov
cmpsl
xor
les
popf
sub
sub
jbe
xor
mov
add
data16
mov
mov
test
insl
and
fcmovnb
daa
sub
mov
bound
mov
push
in
cmp
add
pop
push
jo
mov
aaa
ret
mull
mov
scas
sbb
add
lods
xor
mov
adc
mov
xor
mov
scas
push
das
inc
jmp
add
sbb
out
push
clc
sbb
popf
mov
inc
ret
shll
xchg
add
and
je
add
jne
add
aam
and
mov
jg
loop
mov
fidivs
sbb
icebp
dec
sahf
sub
inc
inc
add
mov
popa
lret
mov
add
dec
jp
das
adc
mov
addr16
cld
flds
mov
sub
aaa
fcomps
je
xchg
jmp
inc
push
das
mov
jge
outsl
mov
jl
push
push
add
add
push
insb
fcmovbe
xlat
and
sub
scas
pop
test
push
add
inc
add
cmpsb
rolb
mov
addb
xchg
mov
jecxz
movsb
pop
lcall
sbb
sub
xor
and
lahf
lcall
mov
bound
mov
std
xor
mov
int3
ja
pushw
mov
sub
loope
mov
add
add
dec
pop
mov
scas
ss
xor
mov
cld
js
hlt
cmp
lods
loope
into
and
lea
scas
stos
ja
pop
fisttpl
dec
rolb
mov
inc
daa
mov
outsb
daa
int
cld
call
mov
out
add
div
mov
add
mov
in
stc
enter
push
jae
stos
pop
cmp
pushf
popa
fs
lahf
repz
add
cwtl
cmp
orl
pusha
add
push
add
add
aaa
incb
rolb
sbb
cmpl
inc
jae
fcoml
call
add
mov
mov
add
mov
sbb
jg
add
stos
cmp
hlt
pop
aad
push
imul
adc
ds
mov
mov
add
sub
test
mov
arpl
inc
add
mov
rcll
inc
loope
add
jns
pop
pop
sbb
sub
test
aaa
jae
test
mov
jnp
mov
dec
xchg
addb
xchg
bound
mov
mov
sahf
das
xchg
and
in
xchg
dec
cmp
fdivrl
jnp
jb
mov
add
mov
push
push
dec
xor
xchg
ficoml
std
pop
fucomp
int3
inc
add
mov
mov
lahf
ja
push
loopne
mov
add
mov
add
add
mov
mov
pop
loop
mov
push
lret
mov
add
push
fidivrl
loop
mov
pop
imulb
sbb
in
xor
sahf
mov
daa
or
add
dec
popf
les
imul
inc
sbb
lds
add
and
mov
hlt
popw
and
push
out
loope
mov
push
jg
mov
add
mov
xchg
add
xor
mov
jle
addb
clc
cld
xor
add
pusha
add
jmp
into
mov
into
bound
mov
lods
or
jp
pop
inc
inc
add
dec
push
mov
rolb
mov
xor
mov
in
addb
es
xor
aad
add
sbb
test
xor
ljmp
fwait
loop
mov
mov
sahf
push
push
mov
add
bound
mov
add
dec
mov
pop
movsl
inc
sbb
sbb
mov
mov
jns
scas
fidivl
add
in
scas
ss
divb
das
sti
pop
cwtl
scas
fsubl
add
mov
mov
xor
bound
mov
ja
push
sbb
push
or
rolb
mov
add
add
mov
and
loop
mov
aad
jp
shl
add
add
push
mov
add
push
out
outsb
or
push
dec
cmp
das
mov
jecxz
or
add
iret
popf
stc
scas
imulb
mov
xchg
imul
sub
adc
lock
lods
fwait
xchg
inc
pop
fs
add
dec
push
dec
clc
or
mov
dec
jae
add
mov
lcall
cltd
mov
xor
mov
mov
mov
fcomps
adc
loopne
mov
cmp
mov
add
cltd
cltd
inc
pushl
adc
add
mov
int3
cmp
mov
push
out
jecxz
in
jne
push
dec
pop
test
repnz
jecxz
testl
lahf
iret
outsl
ficomps
cmp
xchg
es
push
adc
xor
mov
lods
or
into
sbb
ljmp
add
incl
cmp
sub
push
pop
movsb
xchg
cmpsb
dec
xchg
loope
sub
sub
inc
pushf
ljmp
jg
add
inc
add
xor
lock
lods
jge
fistps
xor
out
les
cmp
jnp
jmp
add
add
jecxz
loop
mov
mov
add
mov
dec
inc
cmp
pop
out
push
jg
sub
mov
pop
rcll
push
and
add
adc
add
xor
pop
and
mov
pop
cmp
rolb
std
rolb
mov
add
or
pop
or
mov
mov
xchg
inc
fucomip
jge
xchg
pop
jge
adcl
or
xchg
or
lea
push
add
mov
imul
ret
in
push
push
jmp
leave
jae
fstp
fildl
mov
iret
adc
mov
mov
add
add
mov
icebp
adc
mov
popf
adc
mov
push
add
jbe
add
les
sti
cmp
rcll
fwait
adc
mov
mov
adc
mov
ret
sub
sub
fistpll
inc
mov
mov
add
out
pop
cmp
add
add
mov
clc
testl
xchg
jns
jmp
or
pusha
add
fs
add
mov
mov
push
mov
xlat
adc
lock
cmp
add
mov
aas
enter
inc
mov
cmc
pusha
add
xchg
addr16
adc
add
add
cs
or
xlat
rolb
mov
mov
add
xor
mov
push
add
sbb
data16
lds
in
lret
leave
push
pmulhuw
inc
push
fadds
insb
mov
mov
add
test
mov
mov
adc
add
aaa
and
mov
xchg
cwtl
cld
pop
dec
cmpsb
or
jg
add
mov
cmp
mov
insb
cmpsl
xor
mov
mov
sbb
xor
movsl
mov
loop
mov
mov
arpl
mov
aas
out
and
or
mov
inc
repnz
cmp
xchg
mov
adc
adc
and
xlat
mov
jge
mov
mov
stos
mov
mov
and
inc
add
repz
xchg
add
or
jg
jle
in
es
lret
addb
and
mov
and
notb
mov
ja
stos
push
rcrl
pop
pop
jb
mov
addb
or
adc
test
addb
pop
sub
add
aad
into
aas
sub
mov
mov
test
xlat
push
cltd
push
dec
dec
mov
cmp
add
mov
mov
pop
pop
data16
push
or
add
xchg
mov
cwtl
lret
push
testl
inc
jo
mov
fistpl
cli
push
aad
add
mov
mov
or
jg
sub
popf
outsl
movsl
jb
mov
cs
nop
add
mov
adc
mov
fisttpl
sub
mov
mov
push
cs
dec
shrl
jmp
add
nop
add
cmp
jmp
jl
test
fbld
testl
or
loop
mov
add
imul
outsb
jno
out
cmp
gs
in
cltd
mov
ficompl
lds
clc
mov
dec
aad
std
insb
les
inc
xchg
add
out
add
jae
sbb
add
scas
dec
repz
mov
dec
daa
cmc
push
add
pop
jge
stc
aam
xchg
js
lahf
add
sbb
xchg
inc
add
xchg
add
ret
idiv
or
icebp
or
dec
std
add
aaa
mov
in
push
mov
mov
mov
nop
add
std
xor
daa
mov
popa
xchg
lods
arpl
xor
mov
add
addb
pop
pushf
xor
mov
add
mov
mov
mov
mov
xor
xchg
add
mov
push
int
movsb
outsb
and
mov
jo
mov
xor
aad
jge
add
add
mov
sbb
and
mov
and
mov
mov
mov
pop
cli
divb
add
adc
mov
add
imul
mov
mov
xchg
push
outsl
adc
cmp
sub
pop
xchg
add
pop
fldl
lock
outsl
roll
mov
and
outsb
or
mov
inc
bound
mov
mov
rolb
mov
dec
inc
mov
daa
sub
add
loop
mov
int
or
in
shrl
mov
rolb
mov
jg
cli
lods
jmp
cmpsl
nop
add
arpl
sbb
test
jge
xor
jecxz
test
mov
jle
nop
add
sub
lcall
mov
shll
pop
mov
lahf
loopne
mov
addb
or
pop
gs
lods
jns
push
arpl
movsb
and
xor
scas
test
dec
repnz
jg
add
out
cmc
divl
imul
dec
das
cmp
jecxz
mov
mov
dec
inc
loopne
mov
add
xchg
dec
mov
mov
push
addb
ret
fs
jecxz
and
inc
add
adc
add
in
sbb
jbe
insl
sbb
dec
int3
daa
or
mov
xor
jae
loope
bound
mov
mov
sbb
cli
pop
adc
mov
mov
jl
add
movsl
dec
add
mov
std
jecxz
fiaddl
mov
dec
xchg
lods
xor
addb
adc
mov
stos
add
mov
adc
mov
add
leave
xchg
xchg
movsl
lcall
loop
mov
cli
push
outsb
xchg
jne
adc
xchg
and
loope
jle
xlat
adc
mov
mov
mov
fdivrs
sbb
or
adc
fs
add
dec
adc
mov
add
add
push
add
std
dec
repnz
jno
xchg
lret
mov
xchg
add
cmc
sbb
fiaddl
ja
outsb
jae
fwait
jb
mov
add
inc
add
add
mov
inc
cmp
xlat
pop
add
mov
and
push
cmpsb
jge
cli
pop
leave
mov
mov
mov
outsl
je
mov
mov
and
jg
mov
mov
mov
cmp
inc
inc
add
das
call
add
add
add
rolb
mov
xchg
testb
add
add
popf
testb
add
mov
add
mov
scas
imul
add
inc
add
repnz
nop
cld
jae
dec
adc
jne
clc
repnz
nop
cld
jae
mov
scas
cmc
or
popa
add
mov
nop
leave
jmp
add
adc
add
pop
insb
je
push
mov
nop
leave
jmp
add
add
shll
mov
clc
repnz
nop
cld
jae
repnz
ss
jno
sti
call
push
mov
nop
leave
jmp
fiaddl
inc
inc
add
popl
jbe
clc
repnz
nop
cld
jae
inc
add
cmp
shl
inc
add
scas
add
add
movsb
mov
mov
xchg
ret
mov
add
icebp
sub
nop
nop
cld
jae
in
mov
scas
add
mov
nop
nop
cld
jae
int
fwait
add
xor
xchg
addb
push
add
pop
cmpw
push
mov
nop
leave
jmp
add
add
das
push
mov
mov
xor
add
add
add
add
lods
loopew
xchg
test
add
add
in
nop
leave
jmp
xchg
add
sti
lea
clc
repnz
nop
cld
jae
dec
add
adc
add
outsl
push
push
mov
xchg
ret
fidivrl
mov
add
add
jbe
clc
repnz
nop
cld
jae
cld
cmp
add
xor
add
clc
repnz
nop
cld
jae
scas
add
mov
xchg
ret
add
cmp
add
scas
popa
clc
repnz
nop
cld
jae
add
jmp
sub
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
ss
and
xlat
test
pop
clc
repnz
nop
cld
jae
add
add
rep
clc
repnz
nop
cld
jae
add
mov
scas
add
push
pop
push
mov
xchg
ret
cld
out
add
add
scas
sub
clc
repnz
nop
cld
jae
add
nop
add
inc
jp
test
add
clc
repnz
nop
cld
jae
and
add
rolb
add
repnz
nop
cld
jae
into
aas
pop
nop
jns
push
mov
xchg
ret
add
mov
add
fwait
mov
fisubrs
add
clc
repnz
nop
cld
jae
mov
mov
push
add
push
add
push
mov
add
add
clc
repnz
nop
cld
jae
add
inc
aas
add
sbb
repnz
nop
cld
jae
jmp
xchg
pusha
add
clc
repnz
nop
cld
jae
add
add
mov
sbb
jmp
loope
add
pop
add
add
xchg
dec
push
jmp
add
add
add
push
movl
cld
push
add
mov
nop
leave
jmp
pop
xlat
add
mov
add
adc
add
push
push
mov
nop
leave
jmp
add
popa
add
ljmp
inc
add
movsb
ficoml
popf
xchg
clc
repnz
nop
cld
jae
add
add
insl
and
add
jmp
push
mov
nop
leave
jmp
sbb
add
add
lods
and
cmp
push
mov
nop
leave
jmp
dec
xlat
jmp
add
add
repnz
nop
cld
jae
add
pop
gs
add
add
cmp
cmp
out
ljmp
nop
cld
jae
jb
add
cmp
push
push
mov
xchg
ret
add
add
pop
xor
sub
nop
nop
cld
jae
add
add
add
pop
mov
push
mov
nop
leave
jmp
fwait
add
xchg
add
outsl
inc
jp
icebp
clc
repnz
nop
cld
jae
sbb
xchg
add
rep
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
jmp
mov
mov
add
add
clc
repnz
nop
cld
jae
add
lret
lret
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
out
add
repnz
nop
cld
jae
add
add
int
add
jne
clc
repnz
nop
cld
jae
inc
out
add
inc
clc
repnz
nop
cld
jae
add
add
add
das
cli
push
push
mov
xchg
ret
add
aas
add
and
xor
enter
in
nop
leave
jmp
inc
insl
mov
aas
nop
add
inc
mov
add
clc
repnz
nop
cld
jae
cmp
add
mov
add
repnz
nop
cld
jae
add
mov
lods
jmp
and
jb
xchg
add
xchg
add
test
push
mov
nop
leave
jmp
mov
jmp
add
xchg
clc
repnz
nop
cld
jae
sbb
cmp
add
mov
jb
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
das
sub
add
xchg
pop
call
nop
nop
cld
jae
add
scas
enter
push
mov
xchg
ret
add
xor
push
mov
xchg
ret
push
xchg
xor
add
add
outsl
adc
jmp
xor
add
add
outsl
add
add
add
cld
add
enter
nop
leave
jmp
add
add
lods
add
adc
repnz
add
add
repnz
nop
cld
jae
add
mov
sub
call
pushf
in
inc
add
ss
mov
inc
add
and
clc
repnz
nop
cld
jae
add
add
scas
pop
shr
push
mov
nop
leave
jmp
xchg
and
cld
icebp
icebp
clc
pop
push
mov
nop
leave
jmp
pop
add
fwait
add
scas
add
pop
mov
push
mov
xchg
ret
dec
add
add
add
clc
repnz
nop
cld
jae
add
xchg
popa
add
mov
clc
repnz
nop
cld
jae
add
add
jg
jne
clc
repnz
nop
cld
jae
inc
add
repnz
add
mov
clc
repnz
nop
cld
jae
pop
out
in
mov
clc
repnz
nop
cld
jae
pop
and
sbb
int
sub
mov
add
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
mov
fwait
jg
clc
repnz
nop
cld
jae
add
add
push
add
or
repnz
nop
cld
jae
cmp
add
add
clc
repnz
nop
cld
jae
add
cld
add
fwait
imul
add
in
nop
leave
jmp
scas
add
add
int
pop
lea
clc
repnz
nop
cld
jae
mov
cld
add
add
lds
nop
cld
jae
mov
jmp
add
cs
clc
repnz
nop
cld
jae
ss
lods
nop
ss
inc
aad
clc
repnz
nop
cld
jae
add
add
scas
add
add
add
clc
repnz
nop
cld
jae
xor
add
and
leave
push
mov
nop
leave
jmp
add
add
ljmp
cmp
jae
mov
nop
leave
jmp
add
add
add
repnz
nop
cld
jae
insl
das
add
add
js
push
add
mov
nop
leave
jmp
cld
jb
add
clc
push
mov
xchg
ret
add
mov
add
or
clc
repnz
nop
cld
jae
add
pop
movzwl
clc
repnz
nop
cld
jae
ljmp
mov
push
xlat
stos
push
mov
and
aad
pushf
xchg
sbb
outsl
bound
xor
add
add
ficomps
mov
xchg
ret
add
das
aas
cmp
imul
clc
repnz
nop
cld
jae
add
adc
rclb
nop
leave
jmp
cmp
add
jge
inc
or
repnz
nop
cld
jae
std
add
data16
mov
nop
leave
jmp
add
inc
repnz
fiaddl
add
mov
roll
xchg
sti
mov
clc
repnz
nop
cld
jae
ljmp
rcrb
add
clc
repnz
nop
cld
jae
add
fwait
outsl
mov
push
mov
xchg
ret
jmp
ljmp
inc
add
jb
add
add
adc
push
mov
xchg
ret
add
add
xchg
rolb
mov
nop
cld
jae
add
mov
add
shll
pop
cmp
repnz
nop
cld
jae
cmp
outsl
xor
sbb
repnz
nop
cld
jae
add
add
fwait
jb
mov
mov
clc
repnz
nop
cld
jae
mov
mov
add
add
inc
cwtl
xor
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
ljmp
jb
mov
nop
leave
jmp
cmp
xor
add
and
add
pop
add
clc
repnz
nop
cld
jae
add
add
push
add
and
add
clc
repnz
nop
cld
jae
xlat
add
add
pop
adc
mov
clc
repnz
nop
cld
jae
int
repnz
ss
cmp
cmp
push
mov
xchg
ret
add
pop
fisubrl
repnz
nop
cld
jae
scas
scas
add
add
sbb
add
repnz
nop
cld
jae
fwait
mov
sbbl
mov
xchg
ret
add
add
mov
xor
add
aam
add
push
mov
nop
leave
jmp
add
add
pop
movsb
fcmovbe
xchg
sub
add
repnz
nop
cld
jae
add
add
adc
repnz
nop
cld
jae
repnz
xor
cmp
clc
repnz
nop
cld
jae
scas
add
into
ja,pn
clc
repnz
nop
cld
jae
mov
sbbl
cld
jae
cmp
dec
sub
ret
rolb
mov
mov
imul
clc
repnz
nop
cld
jae
inc
add
lret
std
cli
and
clc
repnz
nop
cld
jae
ljmp
je
clc
repnz
nop
cld
jae
out
cmp
push
clc
repnz
nop
cld
jae
scas
jmp
add
add
clc
repnz
nop
cld
jae
add
add
xor
outsb
jmp
mov
dec
xor
das
ficoml
mov
clc
repnz
nop
cld
jae
inc
add
add
add
clc
repnz
nop
cld
jae
popa
add
add
mov
call
push
mov
nop
leave
jmp
cld
add
out
mov
pop
cltd
add
push
mov
xchg
ret
mov
add
mov
mov
xchg
ret
pop
add
movsb
mov
add
mov
mov
nop
leave
jmp
add
std
std
add
add
mov
push
mov
nop
leave
jmp
ficompl
add
clc
repnz
nop
cld
jae
add
add
add
ret
ds
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
lret
clc
repnz
nop
cld
jae
add
jmp
imulb
mov
nop
leave
jmp
xchg
add
add
add
mov
jle
add
push
mov
nop
leave
jmp
add
add
inc
sub
sub
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
add
add
scas
arpl
add
push
mov
nop
leave
jmp
add
cld
movl
clc
repnz
nop
cld
jae
add
xor
lods
xor
push
push
mov
xchg
ret
popa
add
add
mov
mov
negl
push
mov
inc
push
fcompl
add
or
jle
dec
add
push
clc
repnz
nop
cld
jae
xor
add
add
push
push
mov
xchg
ret
inc
add
movl
push
push
mov
xchg
ret
and
mov
scas
das
add
insb
mov
push
mov
xchg
ret
push
and
mov
add
sub
add
push
mov
xchg
ret
insl
add
adc
dec
push
clc
repnz
nop
cld
jae
xchg
add
add
and
add
in
nop
leave
jmp
add
aas
add
aam
add
inc
xor
lret
ss
dec
pop
push
mov
nop
leave
jmp
add
pop
fwait
add
out
add
jmp
add
add
pop
add
add
lods
and
ret
sub
repnz
nop
cld
jae
push
add
sbb
pop
and
pusha
clc
repnz
nop
cld
jae
xor
and
mov
add
add
mov
clc
repnz
nop
cld
jae
outsl
out
add
das
aaa
sbb
je
js
mov
xchg
ret
xor
dec
sub
add
nop
cld
jae
add
mov
add
testl
push
mov
nop
leave
jmp
add
add
and
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
add
add
add
std
aas
adc
mov
add
nop
nop
cld
jae
add
int
add
nop
add
clc
repnz
nop
cld
jae
add
inc
pop
inc
push
mov
xchg
ret
mov
scas
jmp
add
mov
push
mov
nop
leave
jmp
adc
add
jno
xor
clc
repnz
nop
cld
jae
add
jmp
push
push
mov
nop
leave
jmp
add
scas
fwait
add
sbb
inc
add
lods
add
std
outsl
add
pop
inc
imul
dec
mov
add
add
ljmp
into
adc
clc
repnz
nop
cld
jae
add
pop
add
sub
add
dec
add
repnz
nop
cld
jae
mov
add
push
clc
repnz
nop
cld
jae
cld
add
out
xchg
dec
adc
mov
push
mov
xchg
ret
add
cmp
rolb
adc
in
nop
leave
jmp
add
scas
add
je
clc
repnz
nop
cld
jae
xchg
add
xor
repnz
nop
cld
jae
add
std
pop
adc
addb
add
repnz
nop
cld
jae
scas
adc
push
mov
clc
repnz
nop
cld
jae
and
push
mov
xchg
ret
adc
scas
lret
mov
clc
repnz
nop
cld
jae
nop
repnz
scas
cld
fwait
xchg
sub
clc
repnz
nop
cld
jae
add
popa
repnz
and
sbb
repnz
nop
cld
jae
add
mov
adc
add
push
mov
xchg
ret
jmp
pop
add
add
push
mov
xchg
ret
add
das
and
mov
mov
clc
repnz
nop
cld
jae
inc
lods
pop
int
add
mov
xchg
ret
add
add
add
add
test
clc
repnz
nop
cld
jae
cld
add
mov
clc
repnz
nop
cld
jae
mov
add
xchg
and
nop
cld
jae
sub
add
add
mov
add
imul
cld
jae
add
add
push
mov
nop
cld
jae
adc
add
add
add
repnz
nop
cld
jae
lret
std
popa
add
dec
lods
push
mov
xchg
ret
add
jb
insl
out
das
xor
mov
nop
nop
cld
jae
add
xor
mov
repnz
nop
cld
jae
mov
add
adc
mov
and
add
mov
jb
add
adc
repnz
nop
cld
jae
add
add
mov
cs
insb
clc
repnz
nop
cld
jae
add
cmp
pcmpgtb
add
in
nop
leave
jmp
scas
add
fs
mov
clc
repnz
nop
cld
jae
add
add
and
pop
call
clc
repnz
nop
cld
jae
xor
mov
movsb
shll
jecxz
add
clc
repnz
nop
cld
jae
add
add
adc
clc
repnz
nop
cld
jae
add
xchg
add
adc
clc
repnz
nop
cld
jae
mov
jmp
outsl
inc
xlat
xlat
xchg
sti
and
push
mov
xchg
ret
popa
ljmp
addb
jne
and
push
mov
xchg
ret
adc
add
push
mov
push
mov
nop
leave
jmp
fisubrl
adc
in
nop
leave
jmp
add
lret
scas
add
add
xor
push
mov
xchg
ret
cmp
add
add
out
es
clc
repnz
nop
cld
jae
pop
cmpsl
dec
mov
clc
repnz
nop
cld
jae
add
xchg
add
add
push
clc
repnz
nop
cld
jae
fwait
xchg
xchg
scas
and
add
or
add
repnz
nop
cld
jae
mov
scas
mov
repnz
nop
cld
jae
cld
add
add
add
in
nop
leave
jmp
insl
add
das
inc
imul
nop
nop
cld
jae
and
add
add
add
clc
repnz
nop
cld
jae
and
add
lret
shrl
clc
repnz
nop
cld
jae
xlat
add
cmp
xor
xchg
mov
repnz
nop
cld
jae
inc
and
sbb
mov
xchg
ret
add
mov
sbb
lcall
inc
add
xchg
add
scas
add
mov
in
add
adc
add
xor
add
ss
sbb
add
cmp
add
clc
repnz
nop
cld
jae
mov
add
fwait
add
mov
nop
cld
jae
aas
dec
mov
add
into
inc
cs
clc
repnz
nop
cld
jae
scas
add
add
rorl
pop
push
mov
xchg
ret
add
nop
add
add
das
xchg
and
mov
clc
repnz
nop
cld
jae
repnz
xor
add
add
push
mov
xchg
ret
add
out
add
mov
push
mov
xchg
ret
movsb
add
add
lret
jbe
push
mov
nop
leave
jmp
add
add
outsl
add
inc
jae
add
repnz
nop
cld
jae
add
add
mov
mov
nop
leave
jmp
add
add
xor
mov
cmp
in
nop
leave
jmp
and
add
add
pushl
push
mov
nop
leave
jmp
adc
add
lret
or
out
add
aas
add
popa
push
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
mov
xchg
mov
mov
clc
repnz
nop
cld
jae
pop
xchg
add
sar
nop
nop
cld
jae
insl
lods
jmp
mov
mov
shl
clc
repnz
nop
cld
jae
and
adc
aas
add
hlt
inc
add
add
xlat
xor
add
movb
sub
out
icebp
inc
add
sbb
add
sti
jmp
into
add
int
add
add
pop
add
add
cmp
pop
jae
mov
nop
leave
jmp
add
sbb
mov
xchg
ret
xlat
add
add
or
test
add
clc
repnz
nop
cld
jae
add
sbb
repnz
nop
cld
jae
cmp
add
mov
clc
repnz
nop
cld
jae
add
test
clc
clc
repnz
nop
cld
jae
into
fwait
mov
mov
test
add
mov
dec
ljmp
leave
push
push
mov
xchg
ret
add
add
xor
popa
cmp
mov
clc
repnz
nop
cld
jae
add
pop
mov
add
push
mov
nop
leave
jmp
insl
mov
add
or
dec
and
push
mov
xchg
ret
add
repnz
nop
lods
mov
clc
repnz
nop
cld
jae
mov
popa
add
repnz
nop
cld
jae
movsb
outsl
xchg
add
scas
push
add
and
clc
repnz
nop
cld
jae
add
in
outsl
add
frstor
popa
add
repnz
nop
cld
jae
mov
add
jne
push
mov
xchg
ret
add
xchg
and
push
push
mov
xchg
ret
add
lret
sti
add
clc
repnz
nop
cld
jae
cmp
mov
mov
add
clc
repnz
nop
cld
jae
mov
add
add
add
jne
clc
repnz
nop
cld
jae
add
ljmp
adc
inc
add
scas
sbb
ficoml
enter
nop
cld
jae
add
jmp
lahf
and
clc
repnz
nop
cld
jae
and
add
and
mov
inc
sub
repnz
nop
cld
jae
and
add
and
iret
je
clc
repnz
nop
cld
jae
add
mov
incl
push
mov
nop
leave
jmp
add
add
scas
mov
xor
add
push
mov
nop
leave
jmp
nop
pop
inc
mov
nop
nop
cld
jae
add
add
in
add
nop
nop
cld
jae
aas
pop
add
inc
add
clc
push
mov
xchg
ret
add
fwait
mov
cmp
push
mov
nop
leave
jmp
add
add
test
nop
nop
cld
jae
cmp
pop
data16
rcrb
repnz
nop
cld
jae
mov
add
in
mov
clc
repnz
nop
cld
jae
add
add
call
repnz
nop
cld
jae
add
add
icebp
ss
fistl
mov
cmp
ret
xor
cmp
movsb
pop
popl
clc
repnz
nop
cld
jae
add
add
out
add
mov
or
repnz
nop
cld
jae
inc
out
add
add
add
mov
cmp
push
mov
nop
leave
jmp
add
add
incb
adc
inc
add
add
out
add
push
mov
xchg
ret
add
popa
fwait
push
add
add
dec
movzwl
clc
repnz
nop
cld
jae
pop
add
add
nop
cld
jae
add
add
out
add
add
nop
nop
cld
jae
cmp
add
add
mov
clc
repnz
nop
cld
jae
dec
lods
cmp
add
jns
inc
clc
repnz
nop
cld
jae
std
aas
sub
int
or
repnz
nop
cld
jae
fwait
add
add
inc
lods
mov
clc
repnz
nop
cld
jae
add
outsl
loopne
repnz
nop
cld
jae
mov
and
stos
mov
clc
repnz
nop
cld
jae
xlat
das
add
add
imul
addl
jmp
clc
repnz
nop
cld
jae
add
add
neg
je
push
mov
nop
leave
jmp
sbb
nop
add
jl
and
into
incl
add
add
dec
cld
sbb
pop
js
les
add
add
repnz
nop
cld
jae
pop
nop
mov
decl
in
nop
leave
jmp
fwait
add
cmp
outsl
arpl
add
in
nop
leave
jmp
add
push
add
repnz
nop
cld
jae
add
jmp
fnsave
sar
repnz
nop
cld
jae
add
push
add
add
je
jmp
incl
movl
add
add
test
push
mov
xchg
ret
cld
inc
movl
sbb
push
clc
repnz
nop
cld
jae
add
scas
and
lret
add
clc
repnz
nop
cld
jae
pop
add
xor
clc
repnz
nop
cld
jae
add
movl
clc
repnz
nop
cld
jae
add
ss
sub
test
in
call
in
nop
leave
jmp
mov
add
mov
clc
repnz
nop
cld
jae
add
popa
lret
cmpsl
lret
mov
xchg
ret
add
pop
insl
add
xor
push
jmp
add
outsl
add
sub
add
add
fwait
add
inc
sub
jno
inc
add
in
add
cmp
mov
xchg
ret
adc
mov
adc
jmp
clc
repnz
nop
cld
jae
xchg
add
pop
add
je
clc
repnz
nop
cld
jae
add
and
mov
test
repnz
nop
cld
jae
add
ljmp
cld
jae
pop
add
add
push
push
mov
xchg
ret
add
add
mov
mov
aaa
sub
repnz
nop
cld
jae
mov
add
add
cmp
push
push
mov
xchg
ret
add
add
cld
add
and
push
fs
repnz
nop
cld
jae
mov
and
clc
repnz
nop
cld
jae
add
add
add
pop
push
clc
repnz
nop
cld
jae
xor
add
add
movsb
in
add
push
mov
nop
leave
jmp
lret
add
push
clc
repnz
nop
cld
jae
mov
add
add
add
xchg
out
xchg
clc
repnz
nop
cld
jae
add
mov
fiaddl
xor
in
nop
leave
jmp
add
movl
aam
push
push
mov
nop
leave
jmp
add
add
int
add
popf
add
push
mov
xchg
ret
add
mov
lock
int3
faddl
xchg
ret
mov
add
add
mov
add
test
jmp
nop
nop
cld
jae
and
add
push
mov
xchg
ret
ficoml
push
cld
push
mov
xchg
ret
add
dec
add
add
aad
add
clc
repnz
nop
cld
jae
out
scas
mov
movl
mov
add
clc
repnz
nop
cld
jae
lret
mov
mov
xchg
ret
and
add
add
repnz
nop
cld
jae
sbb
xchg
scas
push
push
mov
xchg
ret
add
lods
add
aas
xor
add
add
repnz
nop
cld
jae
add
int
inc
sub
nop
leave
jmp
jmp
scas
inc
fwait
popf
shl
push
mov
nop
leave
jmp
add
add
push
push
mov
xchg
ret
xchg
lret
add
call
nop
leave
jmp
fiaddl
add
push
jmp
nop
nop
cld
jae
fcmovbe
and
add
inc
add
mov
nop
leave
jmp
add
fwait
aas
add
add
fadds
je
sub
repnz
nop
cld
jae
add
call
clc
repnz
nop
cld
jae
add
popa
add
push
clc
repnz
nop
cld
jae
add
mov
add
add
add
repnz
nop
cld
jae
add
add
mov
not
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
xor
mov
and
movsb
add
add
clc
repnz
nop
cld
jae
adc
xchg
dec
jl
clc
repnz
nop
cld
jae
aas
add
jb
mov
mov
dec
movzwl
push
mov
nop
leave
jmp
outsl
add
cmp
mov
jle
add
in
nop
leave
jmp
jmp
mov
add
clc
repnz
nop
cld
jae
movsb
int
add
add
mov
xchg
ret
add
and
jne
add
clc
repnz
nop
cld
jae
add
add
js
jl
xor
mov
cmp
ret
out
mov
bound
mov
cld
jae
add
add
add
add
in
nop
leave
jmp
add
add
add
add
scas
dec
mov
clc
repnz
nop
cld
jae
lret
mov
scas
cmp
mov
nop
leave
jmp
adc
add
add
add
nop
nop
cld
jae
add
into
add
mov
inc
loopne
repnz
nop
cld
jae
pop
add
add
add
mov
test
repnz
nop
cld
jae
sbb
inc
clc
repnz
nop
cld
jae
add
add
repnz
push
mov
nop
leave
jmp
add
add
and
movsb
add
add
add
in
nop
leave
jmp
inc
movsb
add
add
clc
repnz
nop
cld
jae
xor
add
jmp
mov
clc
repnz
nop
cld
jae
add
into
push
xchg
in
jmp
clc
repnz
nop
cld
jae
cmp
mov
cmp
add
add
push
mov
nop
leave
jmp
inc
add
lret
add
mov
nop
cld
jae
add
sub
add
xorl
pop
add
add
add
cld
jne
call
jmp
incl
add
add
cld
fwait
jnp
inc
push
adc
clc
repnz
nop
cld
jae
fwait
push
adc
decb
test
add
nop
nop
cld
jae
add
push
mov
xchg
ret
movsb
add
mov
rol
clc
repnz
nop
cld
jae
insl
add
mov
sub
leave
test
mov
pop
mov
add
adc
repnz
nop
cld
jae
xchg
add
sbb
stos
add
clc
repnz
nop
cld
jae
in
add
lret
lods
mov
clc
repnz
nop
cld
jae
add
add
add
xchg
mov
nop
leave
jmp
add
movsb
add
nop
push
repnz
mov
mov
push
mov
testb
add
add
mov
je
add
push
mov
nop
leave
jmp
add
pop
add
test
repz
add
scas
repnz
add
pop
adc
jmp
and
add
mov
inc
icebp
test
dec
push
mov
nop
leave
jmp
and
and
sbb
nop
nop
cld
jae
movl
inc
add
jmp
jp
push
mov
nop
leave
jmp
add
xchg
xchg
add
mov
dec
cmp
repnz
nop
cld
jae
add
insb
add
clc
repnz
nop
cld
jae
xor
add
pushf
mov
clc
repnz
nop
cld
jae
add
xchg
fnstcw
clc
repnz
nop
cld
jae
add
iret
std
clc
repnz
nop
cld
jae
mov
add
out
xor
push
mov
xchg
ret
add
repnz
xchg
mov
nop
cld
jae
xchg
into
add
add
mov
clc
repnz
nop
cld
jae
std
xlat
js
xor
dec
ss
clc
repnz
nop
cld
jae
add
sbb
jecxz
inc
add
and
add
and
add
clc
repnz
nop
cld
jae
add
add
xor
push
push
mov
xchg
ret
fwait
and
adc
sub
cmp
add
add
repnz
nop
cld
jae
add
inc
pop
lods
push
mov
xchg
ret
add
mov
lret
push
mov
xchg
ret
add
cld
aas
into
inc
add
push
mov
nop
leave
jmp
add
in
into
add
in
nop
leave
jmp
cld
fwait
mov
xchg
out
mov
add
repnz
nop
cld
jae
push
in
sahf
sub
clc
repnz
nop
cld
jae
add
add
incl
and
and
add
add
add
xchg
lret
cmpsl
mov
popf
push
mov
nop
leave
jmp
add
push
push
mov
xchg
ret
in
out
add
test
sbb
cmp
ret
and
add
and
scas
add
in
nop
leave
jmp
add
add
mov
das
lea
mov
xchg
ret
add
add
mov
add
mov
add
add
and
add
add
mov
mov
xor
adc
mov
ss
mov
clc
repnz
nop
cld
jae
insl
outsl
add
movsb
mov
mov
nop
leave
jmp
xchg
cmp
add
pop
push
mov
xchg
ret
xchg
mov
add
cmp
add
push
mov
nop
leave
jmp
add
sbb
dec
xor
dec
add
clc
repnz
nop
cld
jae
xchg
jmp
add
mov
adc
cld
jae
adc
add
clc
repnz
nop
cld
jae
inc
pop
add
xor
mov
cmp
clc
repnz
nop
cld
jae
into
scas
and
clc
repnz
nop
cld
jae
xchg
cmp
scas
jmp
out
push
push
mov
nop
leave
jmp
xchg
add
add
insl
xchg
add
mov
jmp
repnz
nop
cld
jae
movsb
cmp
add
mov
mov
clc
repnz
nop
cld
jae
std
mov
outsl
add
clc
repnz
nop
cld
jae
pop
add
add
add
add
pop
clc
repnz
nop
cld
jae
add
inc
add
mov
xchg
ret
add
cmp
sbb
in
nop
leave
jmp
out
add
xchg
mov
mov
push
mov
xchg
ret
add
add
add
add
lock
push
mov
xchg
ret
add
std
dec
push
mov
xchg
ret
add
std
popa
lods
jmp
in
mov
clc
repnz
nop
cld
jae
add
push
ljmp
mov
xchg
ret
scas
out
cmp
scas
pop
ficompl
pop
mov
push
mov
nop
leave
jmp
dec
das
add
add
xchg
mov
sub
mov
xchg
ret
add
lods
repnz
or
popa
add
mov
xchg
ret
pop
add
add
pop
pop
rep
clc
repnz
nop
cld
jae
popa
dec
add
push
clc
repnz
nop
cld
jae
add
jmp
repnz
nop
cld
jae
add
add
mov
and
pushf
add
clc
repnz
nop
cld
jae
and
add
ljmp
repnz
nop
cld
jae
cmp
das
push
clc
repnz
nop
cld
jae
pop
add
add
push
clc
repnz
nop
cld
jae
lret
add
add
add
lea
clc
repnz
nop
cld
jae
add
and
add
mov
clc
repnz
nop
cld
jae
add
jmp
push
mov
aam
mov
lea
fisubrl
add
inc
add
add
clc
repnz
nop
cld
jae
and
mov
das
call
clc
repnz
nop
cld
jae
add
jmp
inc
sub
repnz
nop
cld
jae
add
movzwl
push
mov
nop
leave
jmp
xchg
inc
jmp
push
clc
repnz
nop
cld
jae
push
out
add
add
adc
repnz
nop
cld
jae
movsb
and
imulb
mov
nop
leave
jmp
add
aas
aaa
xor
push
push
mov
nop
leave
jmp
fwait
mov
add
add
dec
sub
push
mov
xchg
ret
movsb
ljmp
pop
clc
repnz
nop
cld
jae
add
cmp
add
adc
mov
fstl
in
lock
mov
and
push
add
add
roll
add
pop
add
push
mov
xchg
ret
add
xor
add
int
pushf
stos
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
out
add
and
add
add
mov
add
clc
repnz
nop
cld
jae
xor
repnz
inc
add
lds
test
clc
add
lods
int
add
add
add
lods
add
push
icebp
incl
fisubrl
xlat
movl
push
lods
lea
push
mov
nop
leave
jmp
aas
adc
add
in
lret
push
clc
repnz
nop
cld
jae
das
int
add
add
add
mov
inc
add
cmp
adc
jne
clc
repnz
nop
cld
jae
add
add
adc
inc
lahf
mov
clc
repnz
nop
cld
jae
add
outsl
add
iret
sub
clc
repnz
nop
cld
jae
xor
jmp
mov
cmp
mov
xchg
ret
sbb
dec
add
add
adc
mov
pop
push
mov
nop
leave
jmp
mov
cmp
mov
sub
repnz
nop
cld
jae
add
nop
add
add
xor
push
mov
xchg
ret
and
add
cmpl
push
push
mov
nop
leave
jmp
add
das
mov
clc
repnz
nop
cld
jae
add
add
rclb
aam
add
add
popa
popa
addb
fisttpl
mov
nop
leave
jmp
repnz
add
mov
rep
clc
repnz
nop
cld
jae
push
push
add
aas
push
mov
call
clc
repnz
nop
cld
jae
add
add
add
add
lret
xor
fwait
int
xor
mov
and
clc
repnz
nop
cld
jae
std
lods
add
add
xchg
jge
loop
mov
nop
leave
jmp
adc
mov
sbb
push
mov
xchg
ret
xchg
jmp
add
add
pop
clc
repnz
nop
cld
jae
into
pop
add
add
add
jnp
nop
nop
cld
jae
ss
dec
add
jg
les
jmp
jmp
mov
add
mov
nop
nop
cld
jae
add
mov
add
sub
jmp
nop
cld
jae
repnz
add
add
add
cld
jae
add
adc
cltd
add
push
mov
nop
leave
jmp
add
into
push
jb
push
mov
mov
xchg
ret
lods
jmp
popa
scas
aas
mov
clc
repnz
nop
cld
jae
xchg
ljmp
repnz
nop
cld
jae
add
insl
add
mov
repnz
nop
cld
jae
scas
outsl
add
mov
push
mov
nop
leave
jmp
and
shl
mov
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
xchg
nop
insl
add
push
movsb
xchg
popw
push
movsb
ror
mov
clc
repnz
nop
cld
jae
in
inc
pop
out
add
lret
mov
clc
repnz
nop
cld
jae
jmp
sub
lahf
rep
push
mov
nop
leave
jmp
xor
pop
inc
add
add
lret
mov
clc
repnz
nop
cld
jae
add
add
in
add
add
lcall
add
add
sti
clc
repnz
nop
cld
jae
int
add
push
mov
mov
mov
out
daa
add
add
clc
repnz
nop
cld
jae
add
popa
std
add
add
clc
repnz
nop
cld
jae
inc
adc
mov
into
movl
clc
repnz
nop
cld
jae
sbb
add
mov
inc
add
out
add
add
add
repnz
nop
cld
jae
mov
movzwl
clc
repnz
nop
cld
jae
add
repnz
push
les
shl
cmp
and
call
add
out
inc
das
fidivl
in
add
cmp
sar
repnz
nop
cld
jae
add
and
outsl
fwait
add
cmpsl
in
inc
add
add
dec
icebp
push
pop
jb
jmp
incl
aas
add
mov
jmp
xchg
add
jae
xchg
push
mov
xchg
ret
das
add
add
fcmovb
add
repnz
nop
cld
jae
add
add
rep
clc
repnz
nop
cld
jae
add
lret
pushf
subl
push
mov
xchg
ret
xor
adc
add
icebp
mov
imul
nop
leave
jmp
add
into
add
add
ja
mov
clc
repnz
nop
cld
jae
scas
out
add
push
xchg
xor
std
clc
repnz
nop
cld
jae
add
mov
dec
push
mov
nop
leave
jmp
and
dec
add
cld
fimuls
nop
nop
cld
jae
mov
add
ljmp
mov
jne
clc
repnz
nop
cld
jae
scas
and
addb
stos
add
push
mov
nop
leave
jmp
ss
add
add
in
nop
leave
jmp
aas
fisubl
add
jg
clc
repnz
nop
cld
jae
add
add
jg
push
mov
nop
leave
jmp
xlat
mov
xor
add
lock
in
nop
leave
jmp
add
sub
inc
mov
in
nop
leave
jmp
fwait
add
nop
add
pushf
cmpw
push
mov
nop
leave
jmp
and
add
add
clc
repnz
nop
cld
jae
add
std
insl
jmp
repnz
nop
cld
jae
jmp
fiaddl
jmp
incl
mov
mov
cmp
add
xchg
add
push
mov
xchg
ret
add
add
add
scas
sub
movsb
clc
repnz
nop
cld
jae
add
das
add
mov
add
clc
repnz
nop
cld
jae
and
add
test
repnz
nop
cld
jae
sbb
add
add
xor
mov
jne
push
mov
xchg
ret
out
mov
add
scas
into
inc
push
mov
nop
leave
jmp
lret
add
cmp
add
clc
repnz
nop
cld
jae
nop
into
scas
sbb
push
in
nop
leave
jmp
add
scas
jmp
lahf
ret
clc
repnz
nop
cld
jae
jb
add
push
push
mov
xchg
ret
mov
popa
jmp
mov
pop
clc
repnz
nop
cld
jae
ss
nop
add
movsb
cmp
ret
add
repnz
nop
cld
jae
add
xor
adc
dec
mov
push
mov
nop
leave
jmp
add
add
mov
outsl
ret
ds
clc
repnz
nop
cld
jae
add
jb
mov
clc
repnz
nop
cld
jae
add
add
mov
nop
nop
cld
jae
lret
push
mov
repnz
add
repnz
nop
cld
jae
add
sub
pop
push
push
mov
xchg
ret
add
add
add
adc
in
nop
leave
jmp
scas
and
movsb
decb
nop
cld
jae
add
adc
add
rcll
nop
leave
jmp
dec
popa
xor
pop
push
mov
nop
leave
jmp
and
add
nop
cmp
add
add
push
mov
nop
leave
jmp
add
add
sub
mov
xchg
adcb
nop
leave
jmp
out
cmp
jmp
in
add
jle
push
cs
lods
mov
add
add
repz
push
in
add
inc
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
add
cs
clc
repnz
nop
cld
jae
lret
adc
cmp
add
scas
mov
push
mov
xchg
ret
nop
mov
insl
mov
in
add
push
mov
xchg
ret
xchg
outsl
fwait
aas
add
add
add
add
iret
push
mov
mov
mov
inc
mov
cmp
mov
and
mov
into
std
call
xchg
jmp
add
xor
mov
clc
clc
repnz
nop
cld
jae
add
scas
out
xchg
clc
repnz
nop
cld
jae
std
sbb
inc
std
add
push
mov
nop
leave
jmp
fwait
add
pop
add
out
pop
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
push
and
mov
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
add
add
fiaddl
add
pop
imul
out
add
and
xchg
add
daa
xor
inc
outsl
pusha
push
mov
xchg
ret
ss
add
scas
add
ljmp
add
lret
das
add
and
mov
add
sbb
mov
ljmp
lods
and
sub
add
das
and
cld
mov
push
add
dec
dec
add
mov
add
mov
pop
data16
sub
and
adc
pop
and
mov
pop
dec
lret
mov
loopne
mov
dec
jge
xor
test
add
faddl
lret
add
sub
add
add
cs
mov
movsl
dec
loop
mov
xchg
sub
add
popa
out
jp
xor
mov
ljmp
adc
repnz
jno
addr16
cs
fldl
pop
sbb
addb
and
adc
hlt
sub
pop
cmp
jl
mov
mov
or
lock
mov
adc
jmp
das
ds
orl
lret
cli
dec
addb
outsb
popa
in
xabort
scas
pop
inc
int
pop
inc
pop
pop
dec
loop
mov
add
outsl
xchg
mov
mov
sub
pop
sub
pop
sbb
pop
mov
sbb
mov
fwait
pop
stc
filds
popa
dec
pusha
add
add
mov
cmp
pushf
cltd
pop
shr
dec
inc
cltd
sbb
into
out
pop
imul
fiaddl
out
dec
and
or
out
rolb
mov
jge
daa
lret
add
pop
cvtps2pd
ret
addb
and
lea
test
sti
pop
dec
cmpsl
sbb
std
pusha
add
lret
out
test
sti
mov
mov
bound
mov
out
sti
jae
fmul
push
add
push
lds
mov
int
or
aas
push
scas
adc
mov
push
ljmp
mov
cmp
rolb
mov
clc
sub
rolb
mov
inc
cmp
mov
add
jl
add
mov
add
in
pop
add
fisubrs
inc
add
adc
inc
repnz
cmpl
xchg
test
insl
add
mov
into
or
lods
flds
add
scas
inc
lods
cmp
in
xchg
add
lods
sub
mov
adc
add
icebp
incb
add
xor
mov
pop
mov
mov
xchg
add
aaa
int3
ret
xor
or
sbb
mov
mov
cmp
add
bound
mov
mov
add
mov
add
fldl
ud1
push
inc
leave
icebp
push
mov
leave
pop
xchg
test
dec
insb
loopne
mov
add
es
outsl
outsl
mov
test
lret
cmpl
add
push
xchg
pop
stos
fdivrs
mov
stos
aam
imul
int3
cmp
jl
cmp
add
jae
aaa
mov
int
push
ss
xchg
or
adc
decb
addb
ss
movb
sub
ja
xor
mov
lock
mov
fcomi
data16
inc
int
push
fsubs
mov
mov
inc
push
leave
cmc
pop
addb
xchg
and
or
adc
mov
pop
xchg
icebp
fisttpl
std
lret
hlt
adc
fiadds
add
test
lds
mov
cwtl
dec
pop
cwtl
sbb
imul
or
mov
push
test
sahf
pop
ds
or
add
mov
or
pop
xchg
and
mov
pop
lahf
ljmp
insb
add
mov
and
sbb
mov
push
add
dec
scas
cmp
movsb
jmp
movsb
mov
scas
xor
divl
add
mov
add
dec
jle
push
inc
xchg
add
adcl
add
rolb
mov
mov
mov
xchg
add
in
pop
leave
stos
mov
mov
adc
mov
das
les
pop
sbb
jg
insb
push
pusha
add
mov
cmpsl
cmpsb
into
test
mov
dec
iret
aas
push
mov
add
sub
arpl
or
das
pop
ss
bound
mov
push
add
lods
cs
mov
rolb
mov
adc
cmp
mov
xor
movsl
js
into
mov
mov
sti
dec
jno
or
mov
pop
push
imul
mov
add
mov
lds
mov
add
cmp
fistl
xor
mov
sahf
fldcw
enter
test
inc
sub
xor
mov
lods
icebp
cmp
jle
stos
mov
adc
pop
pushf
push
iret
cmpsl
push
pop
cmp
mov
iret
add
pop
loope
sahf
je
pop
jmp
mov
out
add
mov
add
push
jnp
aaa
int3
xchg
mov
add
outsb
movsl
dec
xor
or
xchg
js
mov
test
add
loopne
mov
push
mov
mov
sub
xchg
add
add
mov
add
xchg
dec
dec
pusha
add
in
mov
cwtl
addb
sub
add
cmp
fstpl
sbb
or
add
sahf
insb
into
xchg
mov
mov
push
popa
rolb
mov
mov
in
out
inc
add
add
jns
add
adc
add
push
nop
add
mov
nop
add
roll
outsl
dec
mov
fmuls
pushf
test
addb
in
int
cmp
cmp
add
mov
ret
incb
xchg
repz
push
add
fidivl
and
and
mov
add
xchg
test
add
xchg
stos
pop
mov
add
cmp
lcall
add
or
std
push
dec
lock
mov
add
mov
popf
dec
popa
cltd
dec
dec
push
fwait
mov
rol
or
loope
cmpsb
or
add
cmp
cmpsb
dec
stos
mov
pushf
add
mov
int
sub
cmpsb
pop
inc
add
out
mov
add
sbb
cld
in
jb
mov
addr16
popa
adc
cs
cmp
lea
fists
mov
popf
push
jo
mov
lods
pop
xor
mov
test
mov
in
sti
sub
lods
add
cmp
and
mov
repnz
fs
sti
in
cmp
mov
imul
dec
stc
sub
dec
mov
inc
sub
pop
test
inc
data16
or
xchg
inc
rorw
mov
mov
shll
pop
add
add
movsl
jl
negl
insb
inc
add
add
add
add
add
mov
mov
mov
xchg
pop
or
add
or
mov
sbb
scas
inc
fnstsw
add
icebp
jg
add
inc
dec
lock
jne
add
pop
les
xchg
test
int
push
add
dec
mov
pop
fildll
mov
adc
add
mov
fmull
push
popl
pushf
repz
mov
nop
add
mov
cmp
into
imul
add
add
mov
mov
mov
fistl
and
mov
cwtl
mov
mov
in
jecxz
pop
push
xchg
add
or
mov
and
gs
sbb
fistpl
or
push
add
iret
cmp
or
add
or
popa
mov
in
enter
cmp
mov
xchg
or
int
gs
add
loop
mov
push
pop
adc
mov
push
inc
add
or
test
pop
stc
js
pop
pop
imul
pop
adc
add
cmp
add
xor
adc
mov
cmp
movsl
or
add
js
jne
and
aam
add
mov
loope
rcr
push
or
fxch
push
pop
mov
mov
add
cwtl
leave
nop
add
mov
mov
in
inc
adc
mov
mov
cwtl
adc
movsb
cmp
add
mov
inc
je
mov
icebp
dec
lret
add
xor
mov
and
enter
divb
pop
xchg
cmpsb
jl
sarl
or
adc
mov
mov
xchg
inc
jae
adc
sub
int
add
dec
lret
inc
push
push
add
cmpsl
jmp
add
addr16
dec
roll
xchg
jb
mov
cmp
jne
mov
xlat
xchg
xor
jnp
out
pop
inc
mov
cli
in
repz
in
xchg
add
mov
sbb
add
mov
sub
and
mov
inc
xor
add
cmpsl
dec
add
mov
add
mov
inc
aam
inc
hlt
and
mov
or
sub
add
decb
lea
push
lods
cmp
pop
gs
inc
aaa
inc
mov
add
mov
add
mov
xor
push
aaa
bound
mov
fistpll
fwait
in
stos
mov
mov
sti
pop
aad
jno
idivb
dec
mov
inc
xchg
lods
push
add
mov
call
add
data16
add
add
mov
popa
mov
les
aad
add
add
add
and
ret
sbb
notl
testl
push
cmpsl
dec
inc
adc
dec
inc
dec
pusha
add
scas
jae
pop
insb
push
mov
mov
add
dec
incb
inc
mov
popa
pop
lock
and
fs
jmp
push
push
pand
mov
aam
jmp
inc
scas
in
xchg
add
and
mov
lods
adc
jmp
or
stos
lods
stc
test
lcall
jb
mov
add
mov
loopne
mov
mov
sub
xlat
jg
sahf
mov
mov
imull
sbb
add
loop
mov
xor
mov
add
lods
es
addr16
enter
das
mov
call
mov
adc
xor
pop
xor
cmp
mov
add
loop
mov
fadds
dec
ret
aad
add
mov
jecxz
add
inc
in
int
xchg
jo
mov
aad
jp
addb
push
and
ret
popa
rolb
mov
dec
mov
mov
push
es
cli
outsb
fcompl
lea
inc
mov
mov
adc
rorl
xor
cmp
lock
fucom
add
jbe
add
movsl
icebp
popa
sub
cmp
add
push
cmpsb
inc
add
lea
cmpsb
in
xchg
add
mov
loopne
mov
mov
mov
add
addb
mov
out
push
dec
inc
and
cmp
or
repz
test
pushl
inc
xchg
int
add
loopne
mov
mov
jne
add
cmovno
mov
cmp
negl
lods
sbb
xchg
int3
lds
rolb
mov
push
add
adc
push
push
sbb
mov
out
dec
popa
dec
sarl
aad
add
xchg
add
jb
mov
aaa
and
add
add
lahf
repz
add
mov
add
cld
push
inc
leave
arpl
pop
test
add
add
adc
ror
ljmp
insb
in
pop
sub
ljmp
cmpsb
js
das
addb
cmpsl
rcll
add
add
test
mov
in
sub
aas
jmp
inc
ret
mov
iret
sbb
inc
add
daa
or
fdiv
cmp
add
xor
add
inc
add
je
loop
mov
mov
lcall
clc
and
add
ret
dec
jae
dec
inc
sbb
loope
sbb
inc
test
dec
mov
cmp
xchg
stc
int3
sbbl
idiv
or
mov
cmp
add
add
ret
dec
inc
fsubr
fbld
enter
pop
data16
and
mov
sub
push
add
lea
push
sub
aaa
sbb
dec
pop
data16
aam
ja
test
mov
add
add
les
lods
shrl
mov
mov
cmpsb
outsl
pop
pop
jb
mov
mov
jg
dec
xchg
les
push
sti
push
inc
xor
ret
inc
adc
add
add
add
addb
cltd
pusha
add
adc
loopne
mov
add
vunpcklpd
cmc
xchg
mov
sub
dec
scas
mov
jnp
sbb
xchg
push
repz
adc
cld
insb
cs
jle
jmp
and
aaa
mov
addb
pushf
mov
scas
xchg
add
cld
fldcw
bound
mov
cmp
add
rolb
mov
mov
stos
add
push
jecxz
add
lock
mov
add
push
mov
int3
rcll
mov
mov
add
mov
ret
std
dec
mov
sarl
cld
jb
mov
cmp
cmpsl
dec
addb
add
jo
mov
mov
jno
loop
mov
out
push
pop
sub
repz
add
es
bound
mov
mov
add
xchg
fwait
rolb
mov
lcall
mov
into
push
outsl
cld
sub
lock
stos
nop
add
inc
iret
arpl
xchg
xchg
ja
out
lret
adc
dec
es
movsb
add
mov
or
out
xchg
or
jge
ret
inc
or
inc
add
add
mov
jge
cmp
jae
add
pop
outsl
rolb
ret
xchg
jge
fs
adc
dec
mov
ficoml
outsl
decb
add
in
pop
cmpsb
dec
lret
mov
stos
pop
add
add
sub
dec
insb
clc
mov
add
dec
rcrl
push
jge
inc
mov
mov
xchg
in
cmp
sbb
add
push
xlat
push
sbb
xchg
ljmp
add
lods
andl
lcall
add
cmc
add
adc
mov
mov
loop
mov
xor
mov
sub
mov
push
and
mov
add
movsl
push
ss
in
dec
shr
cmpsb
add
mov
not
ss
push
add
movsb
adc
mov
cmc
push
adc
je
in
insl
jbe
ficoms
mov
jne
xchg
xchg
lds
or
stos
hlt
aad
addr16
add
sub
mov
add
mov
mov
int3
sbb
push
repnz
inc
add
fwait
sbb
add
and
mov
mov
jp
bound
mov
xchg
insb
xchg
push
scas
fwait
addb
cmp
add
mov
gs
cltd
or
fldl
mov
and
mov
pop
out
mov
mov
add
into
loopne
mov
orl
or
add
jbe
cltd
int
addr16
jns
mov
inc
mov
mov
enter
scas
mov
and
sbb
jp
jg
dec
subl
mov
add
mov
or
ds
rolb
fdiv
push
xchg
arpl
movsl
cli
dec
dec
std
je
add
test
loop
mov
popa
sub
out
sub
fisubl
add
mov
add
loop
mov
hlt
lea
ret
in
inc
add
dec
test
icebp
aad
add
imul
dec
pop
jge
add
pop
pop
push
popa
jns
leave
in
add
repz
or
lds
mov
pusha
add
push
jb
mov
jl
insb
inc
sbb
jnp
int
jle
mov
and
add
mov
hlt
ja
sbb
jno
aas
loop
mov
dec
bound
mov
fucomip
xor
sub
sub
test
sti
clc
lret
or
ds
sbb
mov
mov
adc
mov
push
rolb
pop
jmp
sti
out
dec
ret
xchg
and
adc
sub
insl
xchg
add
inc
test
adc
mov
pop
pop
pop
les
jb
mov
icebp
push
test
mov
nop
add
test
push
cs
mov
pop
push
mov
sar
jbe
pop
xchg
dec
imull
inc
add
cmpsb
addb
mov
movsb
inc
or
mov
mov
in
inc
add
add
add
push
rcll
add
and
xchg
jae
pop
mov
xor
mov
add
mov
mov
mov
pop
in
mov
or
sub
inc
add
addb
push
add
dec
addb
scas
xor
mov
sbb
sti
mov
loop
mov
sahf
das
sub
mov
mov
leave
push
add
mov
and
mov
add
mov
add
sbb
add
mov
mov
add
lea
jle
pop
push
xchg
dec
lods
cs
sbb
jmp
fs
pop
inc
in
es
mulb
cmp
add
stos
dec
fs
dec
adcl
cltd
aad
jns
jg
or
push
mov
add
pop
sub
sbb
fwait
and
mov
rcrl
scas
ljmp
dec
or
and
mov
in
roll
call
jecxz
loope
aad
xchg
aad
ds
add
das
push
cmp
mov
mov
rcrl
add
adc
lods
ret
mov
add
push
dec
clc
jp
add
cli
sbb
mov
mov
mov
hlt
mov
add
jnp
test
mov
add
add
leave
sub
sub
das
and
mov
add
popf
xchg
add
inc
add
xchg
add
or
aad
negb
aam
js
mov
mov
cmc
push
push
xchg
pop
xchg
add
icebp
imul
int3
out
add
sbb
loope
in
jmp
ret
out
aad
mov
ja
mov
fstpt
pop
jg
add
add
add
mov
out
rcll
or
imulb
aad
repnz
rolb
mov
add
mov
out
xchg
dec
movsl
or
jl
add
mov
add
add
pop
fwait
stos
push
loope
call
movsb
jl
inc
push
push
enter
lds
pop
arpl
addb
cs
xor
push
push
test
mov
add
mov
test
jecxz
xchg
mov
cli
jno
nop
add
lcall
fstpt
cld
aam
rolb
mov
inc
push
out
pop
push
fiadds
iret
jne
push
ds
add
sbb
test
dec
data16
xchg
add
aad
sub
mov
sbb
jle
popf
mov
adc
mov
or
xchg
push
sbb
clc
cmp
mov
inc
xor
dec
inc
popf
push
pop
fistpl
dec
mov
mov
add
and
mov
cs
rorl
cmp
add
in
dec
xor
mov
jl
pop
in
or
add
sarl
jg
pop
add
mov
xchg
popa
or
xlat
fldenv
mov
add
stc
add
cmpsl
sbb
add
movl
scas
add
mov
xor
pop
loop
mov
stc
or
pusha
add
dec
sub
enter
push
inc
add
outsl
ja
iret
dec
out
adc
and
inc
add
js
call
jne
lds
nop
add
out
loop
mov
loope
out
pop
push
arpl
jp
movsb
jp
jp
movsl
aaa
repnz
add
or
mov
fidivl
or
mov
mov
xor
xor
mov
repz
lahf
adc
add
push
imul
sti
cli
dec
pop
sbb
add
rorl
xor
mov
xchg
les
aam
ljmp
mov
popf
outsb
dec
daa
dec
fisubrl
mov
addr16
add
and
mov
and
ret
cld
jnp
les
out
jecxz
sahf
mov
dec
sahf
cmpl
stc
in
pop
xchg
jmp
sbb
add
add
mov
mov
add
add
mov
mov
insl
out
aad
sbbl
lods
sbb
ret
in
scas
fdivrs
imul
out
cmp
dec
mov
incl
xor
leave
jecxz
add
add
push
adc
adc
mov
and
mov
mov
cltd
mov
mov
cwtl
pop
xchg
rolb
movsl
lods
addr16
insl
rolb
jne
xor
mov
in
stc
out
test
cmpsb
cmp
cmp
add
lahf
or
psrad
mov
dec
push
add
xchg
add
mov
test
dec
jge
inc
add
jno
imul
je
push
mov
mov
xlat
push
mov
in
jle
dec
decl
jmp
mov
add
stos
bound
mov
adc
sub
jge
call
add
and
lcall
mov
add
mov
add
div
add
aas
push
add
ret
xchg
mov
add
mov
fst
je
jbe
enter
mov
push
rcpps
outsl
push
dec
outsb
pusha
add
inc
mov
add
mov
movsb
sub
bound
mov
mov
pop
cmp
xor
mov
add
fadds
mov
xchg
inc
add
sti
adc
push
scas
xor
sahf
inc
rolb
mov
and
roll
in
push
lds
add
out
dec
fs
mov
add
add
mov
cmpsl
test
int
add
popa
lea
push
das
cmp
mov
sbb
cmp
sti
xchg
and
mov
cmc
adc
mov
and
fsubl
adc
push
push
add
push
jnp
data16
daa
lcall
or
add
pusha
add
daa
cwtl
dec
pop
xchg
or
add
push
dec
mov
cmc
push
push
add
mov
add
mov
add
or
fwait
dec
push
fldl
pushf
and
mov
and
adc
mov
mov
add
add
rcrl
xor
push
pop
jno
movsl
lods
inc
test
icebp
clc
test
sub
mov
movsb
fisttpll
pushf
dec
pop
in
jp
push
add
mov
mov
cmp
jns
add
inc
add
loop
mov
add
mov
and
stc
rolb
xchg
jo
mov
sbb
add
mov
stos
mov
pop
mov
add
in
push
push
and
mov
pop
test
add
jge
jo
mov
xlat
sub
and
and
sub
addb
movsl
fs
xor
jge
add
xchg
mov
or
mov
mov
pop
cli
mov
call
stos
push
int3
sub
mov
popf
lcall
jo
mov
sahf
lock
jle
jne
add
push
sbb
pop
stos
rolb
sahf
mov
aas
arpl
imul
mov
in
pop
push
add
mov
mov
popf
sub
icebp
xchg
adc
mov
fdivr
in
jo
mov
mov
mov
fmull
daa
es
into
dec
jmp
push
mov
xor
cmpsb
and
sbb
ror
lret
cmp
pop
stc
add
sbb
loop
mov
movsl
sarl
cwtl
cs
stos
pop
daa
inc
add
es
and
mov
add
dec
je
mov
jmp
or
push
mov
push
xchg
add
add
mov
idivl
push
mov
mov
addb
pop
out
sbb
insb
mov
push
sti
lret
mov
and
mov
test
push
lret
repz
add
mov
push
and
mov
mov
mov
fidivs
dec
xor
mov
mov
adc
mov
add
sbb
jnp
and
xor
sub
mov
mov
sub
mov
out
xchg
xor
mov
lahf
or
xchg
sbb
push
rolb
adc
mov
mov
mov
out
das
adc
mov
push
push
dec
mov
rolb
mov
sbb
movsb
aam
add
inc
std
and
mov
add
add
cs
mov
mov
sub
popf
mov
dec
xor
jl
loopne
mov
out
fs
adc
mov
idivb
dec
cmp
sub
mov
push
mov
mov
outsl
push
fnstsw
out
add
xchg
pop
stos
mov
pop
cs
pushf
sbb
push
add
gs
fwait
je
dec
mov
pop
ss
xor
mov
xchg
jmp
daa
iret
cmp
and
shr
std
lock
leave
pop
cli
pop
dec
cmp
out
xor
sub
pop
out
cmp
iret
out
inc
gs
add
cwtl
ljmp
and
add
add
mov
mov
mov
or
jge
dec
dec
ljmp
fisttps
cltd
xchg
lods
or
or
jl
add
mov
jecxz
aad
jae
out
add
sub
iret
mov
out
adc
mov
in
pop
lret
jae
push
add
add
add
mov
and
push
add
push
add
mov
jnp
add
lods
fstl
enter
inc
loop
mov
and
pop
jge
sbb
inc
loopne
mov
dec
dec
cmpsb
fistl
sahf
push
out
mov
mov
test
mov
push
push
push
pop
mov
add
push
mov
add
cmp
jge
mov
mov
mov
mov
mov
and
mov
sub
fsubr
sub
cmc
inc
outsl
popa
loope
out
sub
cmp
jns
out
stos
adc
mov
jecxz
xor
mov
mov
nop
add
or
das
cld
dec
addb
cmp
mov
xchg
lods
push
cmpsl
dec
push
and
mov
pop
clc
cmp
shrl
lods
sub
dec
pop
cltd
in
add
mov
xchg
insb
jbe
mov
add
scas
add
mov
rolb
mov
mov
add
ret
test
xor
aaa
xchg
mov
sub
push
adc
fs
gs
roll
scas
out
xchg
dec
dec
xor
sub
out
or
ja
clc
es
mov
dec
pushf
ja
add
mov
xor
mov
pop
jmp
and
or
addr16
add
jnp
faddl
mov
mov
add
call
add
add
or
arpl
jnp
fcoms
add
cmp
popf
or
cmp
jb
mov
repz
add
out
jnp
push
add
rolb
xlat
idivb
sbb
cmp
fwait
mov
mov
stos
cmc
stos
repnz
clc
jne
pop
pushf
rolb
pop
jp
add
add
loop
mov
push
jmp
adc
add
notb
test
lret
xor
mov
ret
movsl
gs
imul
xor
mov
repz
add
pop
adc
mov
test
and
inc
popf
std
dec
sarl
aad
xchg
pop
or
aas
or
ja
rolb
mov
mov
stos
lods
addb
sub
std
mov
frstor
in
mov
push
or
lock
inc
add
pop
sbb
outsb
mov
mov
lahf
movsl
xor
inc
sub
js
dec
hlt
psubb
dec
xchg
mov
mov
aam
add
addb
pushf
mov
outsb
sub
push
repnz
lahf
stos
push
push
lods
jo
mov
jno
xor
cmp
imul
and
add
pop
sub
cmp
lds
push
adc
mov
add
lahf
loopne
mov
xor
mov
jb
mov
mov
jns
sbb
pop
cmp
mov
mov
lea
mov
ss
pop
cltd
and
mov
sub
arpl
add
mov
add
adcl
adc
mov
mov
mov
aas
lods
pop
aam
inc
add
out
inc
add
mov
test
insb
or
ret
lods
xchg
popa
dec
xchg
mov
imul
mov
cmp
mov
jae
mov
adc
push
lods
fdivr
mov
mov
add
inc
add
mov
mov
mov
mov
dec
loope
repnz
jle
mov
mov
aas
xchg
cmp
dec
xor
mov
cmpsl
cwtl
mov
mov
mov
loopne
mov
lds
add
add
adc
mov
ficompl
add
mov
outsb
lock
outsl
push
sbb
ret
jg
add
add
jg
sub
push
add
mov
mov
cmc
nop
add
out
out
sbb
add
xchg
add
mov
cmc
pop
stos
xchg
stos
dec
outsb
imulb
jle
inc
pxor
cli
add
mov
imul
add
xor
mov
sbb
push
insb
insl
pop
jno
gs
idivb
pushl
add
les
lret
jae
outsl
repz
aad
mov
and
repz
out
add
stc
xor
mov
mov
mov
mov
mov
out
rolb
pop
scas
fldl
jmp
fisubrs
mov
mov
dec
imul
push
ret
or
dec
add
mov
movsb
mov
jnp
ret
adc
jge
loope
in
add
add
shll
les
adc
add
mov
xchg
add
mov
lods
popf
fdivp
add
or
xchg
or
push
add
cwtl
imul
jl
push
lahf
ja
frstor
mov
add
add
push
lock
out
mov
add
mov
in
mov
pop
leave
adc
pop
push
stos
popa
inc
aad
push
sbb
add
cmc
xchg
add
ljmp
lcall
adc
xor
mov
mov
mov
mov
sub
add
mov
int
cmc
test
pushf
mov
icebp
lcall
mov
xor
push
jne
mov
and
mov
es
push
sbb
mov
add
mov
test
enter
inc
add
data16
push
mov
mov
mov
add
lcall
test
mov
rolb
icebp
ja
jb
mov
push
push
ds
pop
jg
or
xchg
add
mov
cwtl
pusha
add
add
lea
cltd
sbb
mov
scas
push
xchg
ljmp
pop
inc
push
jnp
add
sbb
pop
es
outsl
dec
mov
ficompl
jmp
push
adc
dec
fidivs
addb
dec
push
cmp
jecxz
add
mov
test
mov
rorl
mov
outsb
in
movsl
iret
sub
outsb
dec
fcomp
test
fsubl
push
in
dec
lahf
cltd
lcall
daa
xchg
stc
inc
loopne
mov
mov
pop
rolb
mov
push
movb
xor
cmpsl
lods
and
add
insb
lods
lahf
cmpsl
ret
cmp
add
insb
scas
and
xor
dec
imul
mov
adc
lods
cmp
ljmp
add
rolb
mov
addb
nop
add
add
sub
pop
ror
sbb
ja
push
fs
fisttps
pop
mov
add
xchg
xor
add
fldcw
xchg
jae
mov
pop
addr16
add
mov
out
pusha
add
aam
mov
cmpsl
jo
mov
pop
mov
mov
sti
and
fildll
push
add
cltd
cmc
insb
rorl
test
mov
or
add
pop
ja
mov
add
mov
add
add
mov
fstpt
stc
loopne
mov
cmp
inc
stos
add
mov
rol
add
mov
push
add
xchg
xor
mov
fs
xchg
sbb
mov
outsl
hlt
aad
repnz
loope
sarl
push
jmp
sub
inc
aam
add
mov
push
fs
pop
out
testb
push
or
test
je
pop
in
mov
push
outsb
mov
jecxz
pop
mov
add
sub
fistps
add
dec
in
int
out
jge
inc
loope
imul
outsl
out
aaa
sbb
in
data16
ljmp
rolb
std
dec
mov
xchg
cmp
movsb
mov
je
push
and
cwtl
and
cld
stc
int
rep
jmp
mov
insl
aam
fwait
loopne
mov
pop
call
aad
mov
add
lahf
mov
dec
jne
rolb
mov
sub
js
fstpl
fstpl
js
xor
sbb
or
or
enter
jne,pt
mov
push
push
cmp
cli
rolb
mov
push
xchg
ret
out
cli
push
popa
mov
in
jae
jmp
mov
cmpsl
mov
std
addb
pop
enter
or
or
mov
fstpl
push
mov
add
inc
pop
roll
das
sti
dec
jns
mov
mov
mov
out
xor
mov
dec
fstpl
fists
imulb
add
mov
js
jns
fiaddl
imul
aam
lds
repnz
aam
std
addb
xor
mov
je
fcmovu
push
movsb
cmpl
ss
mov
mov
sbb
pop
push
add
test
mov
add
in
lret
xchg
pop
sbb
xchg
pop
xor
mov
repnz
add
outsb
cmovo
mov
dec
insb
sub
stc
or
cmp
int
mov
mov
sahf
lret
dec
loopne
mov
rolb
mov
inc
popa
ret
scas
in
cmp
into
in
lds
or
xchg
cli
scas
repz
xor
icebp
stos
cld
clc
mov
mov
cld
mov
add
mov
into
cltd
stos
and
xlat
or
push
loop
mov
cmpsl
xchg
nop
add
jmp
add
mov
pop
inc
dec
jae
and
mov
iret
hlt
push
test
jnp
add
cmp
push
dec
mov
mov
xlat
nop
add
movsl
loope
fisttps
fs
xchg
mov
xlat
bound
mov
enter
js
dec
and
mov
add
cmpsl
push
mov
sbb
lcall
js
pop
adc
or
aaa
es
add
adc
loopne
mov
or
xor
hlt
int3
cmc
fsubrs
hlt
lahf
bound
mov
dec
xchg
sbb
scas
pop
xor
mov
nop
add
mov
loop
mov
sbb
mov
neg
sbb
daa
and
mov
xchg
fmulp
lret
push
dec
rolb
mov
mov
fwait
or
xor
in
fcompl
divb
sub
fsubl
xor
sbb
mov
add
mov
push
pop
mov
xor
mov
rolb
mov
ror
fwait
cmp
xor
mov
ljmp
mov
rcll
jg
push
mov
jl
jp
add
add
ret
dec
shll
stos
add
add
imul
add
mov
fiadds
rolb
mov
outsb
jmp
and
jo
mov
add
mov
inc
stos
mov
mov
ret
mov
mov
mov
cltd
outsb
xchg
add
add
ret
mov
cwtl
pop
xorl
adc
dec
insb
jns
mov
bound
mov
adc
xor
out
inc
rolb
cmpsb
push
dec
and
jmp
add
pushw
loop
mov
or
je
lods
rol
mov
ret
loop
mov
inc
add
hlt
push
dec
ud1
andl
mov
lds
cmc
ljmp
xor
mov
cmp
mov
push
sub
mov
movsl
push
outsl
sub
addb
and
lea
lods
imul
add
jl
lods
aaa
xchg
bound
mov
add
loopne
mov
xor
int3
mov
shll
mov
jne
in
pop
aad
roll
stos
mov
xchg
mov
mov
fwait
pop
test
mov
jg
sub
cmp
daa
aaa
push
add
movsl
push
and
pop
stos
dec
icebp
mov
pop
fadd
add
mov
mov
mov
fwait
xor
mov
bound
mov
negb
loop
mov
aam
rorl
jno
pop
cmc
or
psraw
cmc
sahf
and
mov
cmp
mov
into
sti
out
and
inc
adc
mov
push
dec
jmp
les
mov
imulb
test
mov
xchg
fdivs
mov
xor
mov
and
mov
cwtl
jecxz
in
sbb
add
xchg
dec
add
in
jl
out
push
cli
pop
xchg
sti
pop
push
add
adc
or
or
leave
mov
sti
mov
dec
lret
mov
pop
arpl
inc
aas
inc
add
rcll
addb
cmp
shll
shr
sub
add
pop
jae
xor
mov
daa
pop
cmp
sbb
pop
fcoms
xchg
sbb
repz
adc
dec
add
mov
inc
cmpsb
sub
mov
jle
inc
xchg
mov
add
dec
out
xchg
cli
push
add
sbb
add
lret
pop
mov
repnz
mov
push
movsl
jecxz
ljmp
bound
mov
xor
mov
int
xchg
dec
mov
roll
mov
pop
test
dec
push
sbb
dec
inc
add
add
mov
xor
inc
cmpsl
and
xchg
add
dec
movsl
rcrl
adc
mov
add
xor
mov
sub
scas
int3
stos
push
mov
ja
nop
add
movsb
add
mov
add
mov
std
mov
imul
inc
add
mov
mov
add
add
push
add
or
add
dec
pop
testb
cmpsb
add
mov
mov
sbb
les
dec
stc
lods
repz
mov
aad
cmp
arpl
ljmp
fiaddl
inc
mov
mov
outsl
push
sub
mov
and
rcll
out
shll
enter
mov
mov
add
shll
sbb
mov
je
mov
loope
stc
pop
or
in
sbb
mov
rolb
test
mov
aad
movsl
cmp
inc
mov
jno
add
test
pop
popa
sub
add
xchg
mov
dec
rcrl
inc
pop
outsb
mov
mov
addl
add
mov
mov
iret
clc
lret
dec
lods
rolb
cmp
mov
xchg
aaa
mov
add
fs
adc
mov
std
mov
in
mov
mov
lock
mov
std
mov
movsb
jns
bound
mov
test
sti
mov
add
cmp
rcll
bound
mov
mov
mov
jge
fwait
loope
das
push
mov
jo
mov
mov
xor
in
dec
cli
jno
sub
mov
mov
addb
jmp
add
outsl
push
daa
lcall
into
add
out
or
mov
add
repnz
mov
and
mov
xlat
out
insb
lods
xchg
stos
sub
add
bound
mov
mov
add
jno
or
push
test
ljmp
iret
dec
fisubrs
dec
adc
popa
xor
add
mov
call
cmc
cltd
sbb
out
insb
pop
aas
sub
mov
pop
rolb
lock
aad
add
xor
mov
mov
mov
jne
mov
repz
mov
sahf
cld
sub
sti
lcall
cli
ficoml
mov
add
jne
pushf
addb
idivl
out
cmp
mov
push
ss
cmc
mov
popf
addb
or
hlt
jbe
mov
mov
subl
add
mov
mov
add
mov
pop
scas
push
in
repz
idivb
jmp
add
adc
xor
add
mov
sahf
mov
into
je
decl
push
outsl
test
outsl
xchg
add
mov
rolb
mov
add
dec
rolb
pop
in
push
movsb
jecxz
out
dec
jl
xor
mov
mov
stos
mov
mov
inc
pop
enter
jo
mov
pop
fldcw
dec
aaa
cs
rolb
mov
call
mov
or
lods
mov
mov
adc
mov
add
out
add
push
rorl
xor
les
popf
int
cwtl
jae
aad
test
stos
adc
or
cmp
cltd
push
mov
repz
mov
nop
add
mov
in
xor
mov
mov
rolb
mov
jb
mov
sbb
test
or
daa
lcall
add
sub
push
popf
pop
sbb
aam
add
aad
add
addr16
repz
mov
test
sti
clc
mov
les
aaa
add
mov
test
mov
xlat
push
push
cmpsb
imul
xchg
add
mov
mov
sub
xchg
push
mov
andl
jne
ds
jg
push
pop
pop
jle
add
pop
xchg
inc
add
test
sub
or
mov
xor
mov
fcomps
or
push
stos
add
mov
mov
sbb
psrlq
adc
add
test
stos
pop
inc
sahf
in
cmc
in
pop
test
mov
cmp
xor
mov
push
addb
jno
adc
lea
in
xchg
lea
aaa
movsb
ja
and
rcl
aas
xor
mov
and
push
add
push
push
cmpsb
mov
cmpsb
data16
ret
push
add
movsb
cmp
and
mov
pop
xor
lea
std
push
fiadds
push
add
mov
add
inc
lahf
mov
jae
iret
jle
ds
mov
jns
xor
xchg
jno
add
jo
mov
cmp
les
insl
jbe
add
mov
xchg
add
leave
jno
fcomp
push
aaa
push
aam
dec
popa
addr16
mov
add
jg
and
add
aaa
sti
cmp
in
imul
add
pushf
mov
xchg
jecxz
enter
add
mov
ds
mov
inc
jo
mov
mov
mov
mov
jo
mov
xchg
andl
pop
or
fxch
mov
pop
aam
add
xor
rcll
stc
adc
pushf
loope
sub
add
sub
mov
push
jne
loope
lahf
xchg
fnstsw
pop
mov
lea
or
mov
jg
lret
mov
mov
jno
rcr
xchg
add
inc
fdivrp
lock
jnp
and
add
dec
mov
mov
enter
icebp
mov
mov
leave
mov
inc
jmp
mov
or
mov
fs
or
add
jbe
jmp
and
add
loope
repnz
add
mov
push
sub
add
sbb
fwait
int
xchg
inc
mov
or
pop
jecxz
push
mov
mov
data16
pop
sbb
into
or
les
jp
add
push
xchg
add
mov
mov
add
imul
add
mov
mov
xchg
cmp
add
iret
rolb
mov
int3
push
iret
lret
xor
adcl
add
mov
add
lds
mov
addr16
pop
les
mov
mov
mov
loope
add
add
rolb
rolb
mov
mov
push
inc
add
xor
fisttpl
mov
scas
adc
mov
lcall
out
sbb
mov
add
lea
fldt
movsl
test
add
mov
push
dec
mov
daa
bound
mov
mov
std
xchg
rolb
mov
and
imul
sbb
mov
cmc
loop
mov
int3
inc
push
movsb
orl
scas
test
in
and
mov
mov
xor
push
add
adc
mov
cmp
inc
add
sub
std
mov
fisttps
sti
push
insb
cwtl
ficoml
push
add
mov
fsubr
aaa
cmp
decl
aam
addb
cmp
add
jns
fwait
addl
cld
cmpsl
mov
add
push
inc
add
popf
test
jg
ljmp
test
leave
mov
je
xchg
add
push
fdivl
add
out
lahf
and
mov
aam
cltd
mov
mov
loopne
mov
popa
pop
adc
xadd
add
mov
out
push
pop
popf
jae,pt
cmc
nop
add
dec
or
pop
rolb
sub
shrl
mov
in
xor
mov
add
aaa
and
lds
add
mov
add
lods
lcall
sub
add
jne
jg
lret
rolb
mov
mov
add
scas
pop
fistpll
lods
mov
add
cmp
pusha
add
cmp
repz
adc
stos
insb
cwtl
bound
mov
cli
pop
inc
add
sub
mov
jnp
sub
mov
add
pop
fcomi
movsb
movb
faddl
mov
add
jge
inc
add
rolb
mov
imul
mov
jbe
pop
pop
jle
pop
jns
popf
cmpsl
jns
imul
mov
in
in
popa
ds
mov
pop
data16
push
enter
jp
add
cli
push
sbb
dec
and
add
insl
cmp
into
cmp
mov
mov
int3
addr16
adc
test
add
xor
mov
test
add
dec
into
push
nop
add
in
dec
mov
sbb
and
mov
add
jmp
sbb
mov
inc
mov
in
add
shll
mov
pslld
mov
sub
xor
mov
out
leave
adc
add
mov
lahf
mov
add
leave
not
jp
gs
movsl
repnz
xor
adc
pop
insb
push
mov
lock
sub
mov
mov
movsl
cmp
mov
pop
mov
mov
daa
cmp
mov
es
ss
fisubrl
inc
mov
loopne
mov
scas
scas
xchg
mov
jne
adc
test
dec
dec
xor
add
cli
std
in
mov
mov
popf
cmp
mov
mov
jnp
bound
mov
dec
clc
xchg
jl
add
mov
xor
mov
mov
mov
add
mov
add
inc
add
and
mov
out
addr16
dec
es
mov
std
fcomip
add
fldl
add
add
mov
pop
pusha
add
xchg
aam
loope
call
cmp
push
lret
mov
mov
sbb
in
push
fcoml
out
adcl
dec
les
or
les
out
inc
and
mov
lcall
ret
gs
xor
add
or
mov
inc
cmp
adc
and
in
jp
push
aam
add
xor
add
mov
outsl
inc
add
inc
pop
add
mov
jne
xor
dec
sub
mov
push
add
int3
popf
dec
addr16
pop
add
shr
cli
pop
sti
dec
add
mov
xor
lea
and
add
mov
mov
mov
jns
xor
mov
or
inc
fldt
lret
mov
xor
add
mov
test
pop
mov
pop
cmpsb
mov
mov
lcall
add
pushf
loope
rolb
mov
icebp
test
jl
lea
jl
add
add
lcall
sub
stos
dec
dec
aaa
pop
fxch
cmp
mov
jb
mov
jge
test
in
cld
stc
jnp
xchg
dec
jmp
in
rolb
rorl
in
arpl
cmp
push
sahf
cmc
lret
lret
lret
imul
push
or
mov
add
add
es
or
xchg
add
addl
jb
mov
movsl
push
and
add
rep
rolb
mov
loop
mov
mov
aam
mov
ret
cmp
stos
add
adc
inc
add
popa
mov
mov
mov
and
mov
rorl
mov
stc
sbb
add
mov
sub
in
cmovne
add
in
add
mov
or
sbb
enter
int3
jb
mov
bound
mov
int3
daa
ret
rolb
mov
leave
enter
arpl
mov
pop
mov
add
mov
rol
rcl
add
fisubrs
mov
adc
mov
add
push
cmp
rolb
mov
test
pop
cld
out
shll
jno
bound
mov
add
mov
add
mov
jne
fcoml
mov
jecxz
xchg
push
in
mov
rcll
mov
movsl
cs
jl
jnp
in
repnz
hlt
jg
and
mov
add
mov
or
out
je
leave
xchg
add
ret
jae
add
adc
push
mov
sbb
mov
int
mov
pusha
add
jb
mov
popf
jo
mov
movsl
pusha
add
mov
push
inc
test
pop
out
push
add
mov
pop
rolb
mov
gs
je
mov
mov
add
in
mov
jo
mov
lods
mov
mov
add
xchg
inc
add
xor
mov
arpl
rolb
mov
mov
add
push
add
push
insl
std
iret
js
and
stos
xchg
sub
addb
push
mov
push
pop
cld
xchg
inc
pop
sub
inc
add
xor
mov
pop
cmp
pop
and
movsl
xchg
cmp
leave
mov
fs
mov
add
outsl
std
push
inc
sub
aaa
negl
inc
cmp
fimull
adc
mov
and
mov
mov
add
scas
aam
imul
mov
mov
in
xor
mov
add
inc
cli
movsb
dec
jl
xchg
loop
mov
mov
jl
int
add
sub
jns
fs
lret
push
jecxz
pop
xchg
lods
inc
insb
mov
loope
dec
jecxz
fnstcw
movsb
test
sub
scas
or
push
adc
mov
xchg
add
mov
jns
out
fwait
rolb
sub
or
mov
mov
and
add
stc
addb
mov
mov
and
mov
sbb
cld
fcmovu
test
jbe
mov
dec
sub
int
xchg
jecxz
insl
fnsave
mov
fsubl
xor
add
mov
pop
in
cs
sub
or
mov
outsb
shl
jg
aas
jge
or
mov
and
mov
add
outsl
xchg
scas
imul
mov
add
mov
mov
sub
lds
outsl
push
repz
hlt
inc
pop
cmp
add
js
mov
push
add
mov
jnp
vsubsd
mov
mov
je
dec
xchg
in
mov
push
jbe
stos
test
out
ljmp
sub
add
sbb
arpl
fs
cmp
inc
add
push
ret
dec
mov
shl
fs
inc
clc
pop
xor
mov
mov
addl
mov
xor
lcall
mov
dec
outsl
mov
mov
xchg
negb
pop
dec
xchg
push
xor
enter
mov
pop
cmp
jmp
push
ds
les
xchg
add
out
jl
jl
addb
push
add
add
outsl
dec
jne
sbb
push
push
mov
mov
addb
xchg
add
fcmovnb
cmc
fisubl
repnz
cld
sub
mov
mov
scas
inc
add
scas
inc
add
insb
sbb
jbe
inc
add
in
add
mov
add
push
imul
add
add
pop
sub
add
nop
add
sub
aas
dec
and
lods
jle
out
jl
stos
mov
add
addb
in
data16
mov
xchg
dec
or
dec
add
add
add
ds
xchg
lcall
push
mov
and
add
add
enter
mov
add
add
mul
mov
mov
and
into
ds
mov
xchg
dec
rolb
mov
je
add
test
add
jne
sbb
repnz
add
xor
add
add
rolb
mov
push
push
add
pop
or
pop
cmc
mov
add
xchg
pop
lcall
test
mov
add
mov
fabs
inc
bound
mov
mov
into
ret
mov
add
mov
in
xlat
jecxz
inc
daa
bswap
decl
add
mov
mov
add
sub
sub
dec
fdivrp
mov
insl
xor
xchg
add
mov
es
mov
add
fistpll
pop
bound
mov
lds
add
addb
or
mov
add
pop
xchg
pop
test
mov
sbb
insb
dec
hlt
lods
pop
scas
fsubrl
ds
xor
mov
dec
fistpl
add
cmc
test
jg
jg
xor
scas
dec
jo
mov
add
push
movsb
sub
cmp
test
add
outsb
or
sahf
cmp
push
or
icebp
test
and
mov
pop
out
mov
lea
add
scas
pop
out
and
cmp
mov
int3
jp
xchg
ja
pusha
add
subl
stos
adc
add
pop
leave
jl
stos
dec
pop
dec
xchg
xor
mov
sbb
out
mov
push
stos
scas
sub
ja
insl
adc
icebp
dec
xchg
xor
das
aam
add
in
out
and
cmp
mov
add
fs
and
mov
repz
aam
sub
das
fstl
add
mov
insb
dec
mov
ss
add
add
outsl
jmp
add
int3
mov
test
cmpsb
pop
fdivr
and
jmp
repnz
ljmp
jecxz
xchg
pop
cmp
rolb
fstl
jb
mov
ret
xor
mov
dec
jnp
dec
int3
ret
out
sub
push
test
xchg
cwtl
xchg
mov
mov
gs
sub
adc
mov
sbb
mov
gs
xor
popa
filds
arpl
add
mov
sahf
mov
ds
bound
mov
cmp
aad
movsb
scas
jl
mov
lea
popf
mov
push
in
xchg
push
loopne
mov
add
lock
je
lret
inc
lret
add
add
sub
add
bound
mov
mov
out
push
movsb
push
cltd
mov
out
push
dec
push
shrl
mov
stos
mov
mov
int
aad
jno,pt
inc
xchg
mov
adc
loope
sub
mov
mov
inc
cmp
add
or
movsb
dec
js
les
leave
xchg
adc
jmp
add
xor
add
jl
lods
test
fdivs
addb
mov
mov
mov
daa
scas
rolb
dec
addb
test
enter
mov
pop
or
add
add
mov
sahf
xchg
xlat
pop
aaa
mov
roll
inc
add
mov
push
mov
rolb
mov
test
add
mov
js
fisttpll
or
lret
outsl
xchg
pop
mov
popa
push
add
dec
ljmp
inc
add
inc
sbb
dec
or
add
inc
fdivr
loope
add
mov
mov
xchg
pop
lock
das
mov
sti
repnz
fcomip
add
push
mov
cmp
iret
data16
xor
int3
push
jo
mov
mov
mov
fwait
inc
stos
js
cmp
mov
jg
ret
mov
xor
mov
mov
lds
mov
jmp
push
and
mov
mov
add
or
stos
fucom
add
adc
cld
jecxz
jge
subl
iret
sub
add
aam
sti
jbe
test
mov
inc
scas
mov
in
pusha
add
push
cmp
jo
mov
cwtl
je,pn
jo
mov
mov
ja
pop
sbb
std
mov
add
repnz
cmp
and
mov
add
mov
out
dec
adc
mov
xor
add
push
js
aad
mov
mov
sbb
bound
mov
sub
pop
fbld
cli
mov
add
xor
push
fs
push
rolb
stos
cs
and
xorl
dec
ljmp
xchg
jne
push
jmp
fsubrl
mov
add
push
icebp
inc
loope
dec
dec
xor
lahf
gs
xor
out
rolb
mov
or
add
mov
or
in
mov
mov
ljmp
insl
xor
mov
sbb
iret
mov
add
jcxz
test
test
adc
mov
mov
add
mov
imul
push
cltd
xor
ds
pop
cs
cld
sub
out
and
jo
mov
add
add
mov
and
fstpt
addr16
sbb
pop
lods
jg
lds
addb
es
fcoml
bound
mov
insb
inc
bound
mov
add
cmp
add
dec
add
mov
add
std
ljmp
out
push
lret
rolb
and
xchg
xbegin
mov
hlt
mov
mov
add
pop
inc
sub
add
xchg
neg
xchg
sbb
imul
mov
imul
test
mov
ljmp
mov
cmpsb
fistpl
or
xchg
cmp
adc
dec
testl
xor
mov
mov
in
mov
add
jb
mov
add
jl
shrl
push
add
add
rolb
add
jne
das
mov
and
mov
xchg
mov
push
ret
bound
mov
cmp
shrl
popa
hlt
or
jmp
cmp
sbb
pop
lret
and
mov
sbb
or
push
add
popf
pop
xor
jns
mov
mov
mov
sub
push
insl
pushf
mov
lret
mov
repnz
add
and
negb
cmp
mov
pop
xor
mulb
add
test
mov
fstpt
and
mov
mov
fs
fnstcw
out
push
adc
sbb
movsb
lds
movsb
sub
into
ljmp
xchg
mov
push
pop
jo
mov
mov
enterw
xor
add
je
outsb
jae
add
lds
xor
add
adc
mov
mov
mov
cmc
lods
mov
lock
lock
pop
pop
mov
xor
filds
xchg
pushf
inc
add
add
mov
ret
mov
adc
mov
enter
mov
mov
out
adc
pop
jle
xchg
mov
sub
push
mov
xchg
stos
inc
lea
js
inc
pop
sbb
mov
dec
fstpt
mov
dec
sahf
inc
ficomps
dec
xchg
jnp
jae
je
sbb
push
add
mov
popf
aaa
sbb
cmp
add
jle
hlt
ja
pop
cmp
add
jnp
out
add
jge
pusha
add
lcall
cmpsl
std
xor
negb
dec
pusha
add
fdivrs
jecxz
mov
xchg
arpl
add
clc
jp
mov
add
xchg
pop
cmpsl
xor
pop
out
std
aas
icebp
inc
cs
xor
mov
and
mov
jg
add
jle
add
mov
xor
mov
loopne
mov
mov
jmp
test
add
cmp
mov
movsl
sbb
dec
in
inc
mov
inc
push
enter
mov
mov
mov
cmp
addb
gs
push
fistps
aad
jo
mov
scas
mov
mov
iret
sub
pop
xchg
dec
rolb
mov
and
push
add
loope
dec
pop
jae
mov
loope
js
mov
jns
xor
in
xchg
mov
fs
mov
push
push
addb
ljmp
aam
rolb
mov
add
das
push
out
stos
pop
add
mov
add
mov
stc
mov
mov
cmp
lret
cmpsl
fs
mov
mov
fstpl
lahf
inc
mov
pop
adc
add
gs
popf
outsb
cli
rolb
mov
fs
add
stos
adc
sub
cmc
push
cmp
clc
mov
mov
pop
inc
add
mov
sub
int
xchg
lods
xchg
xchg
xchg
pop
stos
mov
mov
mov
jle
test
mov
rolb
pusha
add
into
das
jno
dec
call
stos
sub
cltd
out
mov
enter
ret
stc
dec
push
int3
iret
add
insl
cmpsl
xor
imul
dec
rolb
mov
sub
mov
xor
mov
mov
test
or
orl
out
loopne
mov
mov
add
mov
pop
lret
mov
mov
rep
pop
pop
pop
popa
call
ret
cmpsb
dec
adc
mov
mov
je
push
pop
ds
mov
stos
mov
sbb
shll
mov
stos
mov
addb
in
inc
int3
lret
lock
cmp
add
or
js
movsb
inc
cmp
les
mov
add
add
repnz
dec
test
mov
das
and
push
and
mov
add
not
push
repnz
dec
mov
xor
repnz
cmpsl
mov
aas
lea
pop
dec
pop
daa
cmp
insb
orl
mov
mov
addb
and
mov
inc
add
add
ja
mov
push
push
dec
andl
leave
adc
mov
outsl
xchg
jbe
test
push
push
xor
lret
or
dec
std
mov
fadds
dec
inc
ret
icebp
test
adc
jle
add
jecxz
push
mov
add
mov
add
mov
mov
mov
pop
cltd
outsl
aad
inc
push
inc
sbb
js
lahf
insb
mov
mov
or
sub
jge
or
ficoms
push
add
cmp
cmp
scas
out
repnz
imul
push
xchg
add
imul
cmp
and
push
push
cli
cmp
arpl
mov
xchg
mov
mov
in
add
jecxz
in
and
mov
cmp
or
addb
rolb
lret
sahf
xor
jo
mov
push
loop
mov
xchg
push
iret
imul
pop
dec
cld
push
jb
mov
mov
inc
add
mov
mov
pop
mov
scas
xchg
call
ljmp
cmp
pop
shll
mov
icebp
mov
cmpsb
decl
sub
push
add
mov
rol
sbb
mov
mov
mov
xor
add
mov
lods
ds
inc
add
dec
scas
pusha
add
jae
sbb
leave
sub
mov
enter
mov
mov
xchg
gs
call
xchg
out
jp
lods
mov
aaa
inc
add
mov
addr16
add
jge
loopne
mov
add
add
and
int3
incl
xor
pop
push
fimull
mov
cmpsb
pop
and
mov
push
adc
mov
daa
enter
mov
xlat
dec
repz
lods
inc
lahf
andl
js
mov
add
mov
xor
mov
and
mov
mov
mov
add
mov
rolb
mov
test
mov
inc
into
jno
lods
xchg
rcll
inc
add
sbbl
mov
in
lret
test
outsl
aas
aaa
mov
add
pusha
add
cmp
add
add
mov
scas
scas
outsl
out
loopne
mov
mov
fisttps
lret
mov
fldt
dec
mov
mov
dec
lods
iret
nop
add
add
test
xor
mov
push
add
mov
das
dec
das
clc
into
aad
adc
cmp
mov
fwait
mov
push
inc
lahf
sbb
mov
jbe
lret
scas
sbb
add
sbb
push
mov
ljmp
mov
rolb
mov
hlt
inc
adc
push
mov
lret
dec
call
push
std
jmp
arpl
cmp
stos
or
orl
adc
out
xchg
xchg
femms
inc
add
mov
sub
mov
mov
mov
mov
add
inc
enter
dec
cld
lds
scas
dec
in
ds
sub
sbb
mov
add
mov
mov
adc
mov
jns
inc
and
xchg
data16
mov
in
adc
mov
lret
lcall
add
add
add
jbe
add
inc
je
pop
cmp
cwtl
jecxz
lahf
mov
mov
repz
inc
add
pop
dec
jle
add
mov
mov
push
lret
add
xchg
push
mov
mov
out
cs
ret
faddl
push
sbb
lcall
xchg
jp
dec
or
xchg
add
punpckhbw
fnstsw
mov
dec
xlat
mov
adc
fisubl
rcll
std
push
nop
add
mov
add
mov
cmpsl
in
sbb
mov
jmp
pop
test
sti
sub
dec
mov
cmpsb
xchg
jae
sbb
arpl
add
in
cs
repnz
sub
mov
lds
outsb
rolb
mov
lcall
add
mov
add
in
xor
mov
mov
mov
add
add
mov
pop
jo
mov
int3
add
and
outsb
sub
fcmovnbe
add
push
mov
enter
fwait
lahf
clc
or
repz
test
jo
mov
faddp
scas
sbb
add
bswap
mov
ret
jmp
add
fbstp
aam
jecxz
in
stos
push
lods
push
xchg
add
pop
loopne
mov
dec
cmp
adc
mov
xchg
mov
jle
lea
push
rolb
mov
inc
mov
scas
push
add
data16
add
and
mov
add
and
lods
or
add
clc
pop
mov
mov
add
jno
mov
mov
ja
rolb
mov
pop
xlat
pushl
or
out
dec
loopne
mov
cmpsl
sub
mov
add
mov
mov
add
mov
push
arpl
mov
in
dec
hlt
icebp
and
mov
cmpsb
arpl
das
nop
add
jl
inc
add
fwait
cmp
out
xchg
in
scas
mov
xchg
rolb
mov
addl
cmc
push
sub
push
sarl
add
add
cs
pop
out
inc
xchg
jno
xchg
add
add
shll
adc
add
outsb
test
scas
ja
mov
popf
xor
mov
dec
mov
mov
add
sbb
cmpsb
mov
xor
sub
pop
fadd
mov
mov
xchg
cmpsb
loope
add
xor
lods
mov
dec
into
mov
ss
dec
cmpl
cwtl
rolb
mov
xchg
add
out
or
mov
pop
scas
stos
jge
jnp
inc
lds
xor
in
add
mov
mov
dec
or
add
dec
imul
pop
xor
mov
mov
xor
mov
data16
mov
out
hlt
inc
nop
add
and
add
das
sub
xor
mov
test
das
mov
jmp
add
mov
mov
ljmp
lds
add
add
fcomip
subl
or
cmpsl
mov
or
add
sub
mov
fsubrs
ds
cltd
inc
dec
call
add
add
add
lret
fnstenv
sub
aam
dec
mov
mov
in
mov
cwtl
mov
jmp
outsb
mov
mov
pop
sahf
xor
add
movups
jno
mov
das
xchg
daa
addb
pop
push
add
sahf
repz
fdivs
mov
andl
cmp
icebp
insb
xor
mov
adc
mov
rolb
mov
pop
jb
mov
or
xor
repz
je
sbb
das
daa
or
pop
addb
push
rolb
mov
pop
sbb
out
leave
jbe
dec
jno
and
sub
mov
add
loope
pop
xlat
out
mov
mov
ret
addb
movsb
dec
pop
push
insl
fmull
ja
dec
clc
test
sbb
dec
xchg
dec
cmp
rolb
mov
add
jle
xor
lea
in
pop
hlt
int
inc
sbb
add
ss
adc
stos
xchg
lock
sbb
dec
scas
and
insb
loope
push
in
add
sbb
push
push
add
add
inc
mov
sbb
xlat
shrl
popa
lcall
into
inc
add
pushf
sub
xchg
imull
insb
cmp
outsb
call
mov
or
add
int3
xchg
clc
ljmp
test
fsts
push
scas
add
test
add
ret
scas
pusha
add
lcall
cli
cltd
fwait
or
sub
sbb
mov
cmc
hlt
adc
imul
add
xchg
insb
mov
leave
xor
add
mov
stc
shrl
xorl
enter
mov
jb
mov
mov
sahf
jne
sub
add
mov
jp
and
dec
js
gs
sbb
ja
test
or
and
sti
jle
xor
xchg
add
jecxz
repnz
mov
fsubs
stos
and
sbb
mov
stos
adc
leave
aas
mov
sbb
mov
scas
add
mov
loop
mov
nop
add
add
push
jecxz
outsl
pop
adc
adc
mov
adc
es
ds
inc
ds
loope
fiaddl
push
dec
nop
add
rolb
mov
xchg
addb
and
mov
add
cli
popf
repz
add
mov
inc
out
sbb
cld
mov
cmp
mov
dec
and
cmp
add
mov
test
jbe
subl
jno
roll
push
jnp
fnstsw
mov
add
xor
mov
mov
add
mov
mov
je
stc
fadds
mov
add
and
addb
push
int3
jmp
cmp
mov
add
or
add
loopne
mov
ss
into
xor
adc
mov
lret
or
fcoms
mov
mov
loop
mov
add
imul
lret
sbb
sbb
xor
mov
outsb
dec
push
jmp
add
mov
add
mov
pop
cmp
pop
std
out
mov
cmp
lods
mov
mov
adc
mov
inc
add
add
aad
cmpsb
add
mov
jae
aad
mov
mov
xchg
xchg
sbb
data16
je
and
cltd
rolb
cmp
adc
lcall
mov
negl
lods
cmp
mov
or
add
xor
add
jmp
push
nop
add
ret
mov
jmp
push
js
lods
xor
mov
lahf
addb
mov
pop
sub
iret
jg
test
fs
mov
add
pusha
add
std
pop
or
arpl
sti
xchg
dec
mov
add
mov
lahf
or
xor
mov
push
push
add
dec
xchg
gs
jp
add
sub
pushf
or
subl
loope
push
mov
sub
cwtl
addb
jle
ret
aaa
and
mov
add
mov
sub
mov
mov
adc
pusha
add
mov
rolb
mov
fistps
idivb
inc
lret
mov
mov
and
and
mov
cli
add
mov
cmpsb
mov
mov
std
scas
jp
add
cmp
mov
cli
mov
imul
mov
mov
xchg
imul
mov
mov
lds
jl
xor
cmc
shrl
mov
out
cltd
mov
mov
add
addr16
movsl
stc
data16
nop
add
adc
pusha
add
mov
outsl
push
push
push
sahf
mov
mov
add
push
mov
mov
adc
mov
jnp
ret
cmc
fildl
add
cmp
outsb
fwait
mov
jns
test
mov
aaa
push
pop
cmp
mov
mov
repz
and
mov
add
mov
xor
hlt
or
cmc
sbb
icebp
addb
popf
sub
mov
dec
and
out
pop
jno
mov
daa
call
repz
sbbl
sbb
fildll
jb
mov
inc
sbb
stos
sbb
rolb
and
mov
mov
pusha
add
aam
add
mov
mov
dec
add
mov
add
mov
mov
fstpt
add
inc
add
jae
add
lahf
adc
loope
jle
push
aad
out
and
mov
sbb
jb
mov
mov
xor
mov
repnz
add
mov
out
es
cmpsb
sbbl
movsl
dec
jmp
stos
mov
mov
mov
test
mov
addb
movsb
in
fwait
cwtl
jecxz
repz
or
icebp
push
arpl
push
cmc
fstl
stos
mov
mov
fimuls
loop
mov
fs
push
inc
add
add
test
xor
aaa
insl
les
inc
and
scas
jl
and
mov
lret
cli
sub
loop
mov
add
push
aad
add
test
add
add
aaa
fisubrs
f2xm1
add
in
add
call
mov
mov
add
rcr
xchg
sbb
lret
or
jnp
addb
out
add
cmc
sbb
arpl
lcall
push
mov
mov
add
mov
aaa
fiaddl
add
outsb
mov
dec
lods
pop
sbb
imul
mov
lods
or
loope
add
mov
push
and
mov
push
mov
movsl
inc
lahf
repz
xchg
es
fldenv
aaa
cmp
mov
add
inc
add
add
pop
je
add
mov
mov
fcoms
add
sub
clc
cmp
add
ss
dec
scas
mov
push
lea
lret
xchg
lahf
stos
lcall
mov
pop
sub
in
mov
add
xchg
jae
add
mov
pop
shl
je
mov
addps
mov
lcall
lods
fdivrp
mov
cmp
mov
insb
add
dec
mov
ljmp
dec
arpl
mov
or
mov
jnp
cmp
out
pushf
inc
out
les
or
add
mov
mov
mov
add
add
jb
mov
inc
cmpsl
inc
sub
dec
mov
add
add
mov
mov
jmp
add
mov
mov
mov
add
mov
ja
sbb
or
xchg
rolb
mov
xor
bound
mov
add
add
outsb
hlt
dec
in
bound
mov
insl
xchg
add
testl
add
jnp
xor
mov
or
mov
sbb
xor
mov
jns
rcrl
inc
inc
add
jl
je
es
stc
mov
mov
and
divb
pop
imull
cmp
cld
pop
cmpsb
mov
add
xchg
aam
sub
pop
dec
jb
mov
in
mov
inc
lret
add
loope
int3
fimuls
fidivs
mov
add
and
push
add
fcoml
fbld
mov
add
add
or
lret
aam
sbb
sub
cmp
frstor
cmp
fsubrl
xor
mov
dec
psllq
ljmp
mov
scas
xor
mov
filds
mov
pop
into
insb
stos
push
dec
addb
jl
adc
mov
in
das
mov
outsl
and
call
hlt
imulb
inc
in
fcoms
mov
mov
add
repz
xchg
je
xor
call
mov
xchg
xchg
and
xchg
push
push
add
mov
mov
push
pushf
dec
xor
mov
add
imul
pushf
addb
pop
inc
popa
cmp
cmp
scas
cld
jb
mov
xchg
add
dec
cmpsl
ret
jle
cmp
fstpt
out
jbe
inc
pop
mov
mov
lods
roll
sub
sub
adc
push
pusha
add
xchg
call
lcall
iret
jle
push
rcrl
mov
push
add
mov
add
mov
cs
add
fdivr
push
add
ret
push
add
pop
aaa
inc
add
in
popa
dec
mov
inc
pop
mov
mov
rolb
mov
ret
inc
add
aam
adc
mov
add
add
or
add
jge
add
inc
add
clc
add
stos
inc
pushl
mov
mov
mov
or
xchg
mov
aam
add
add
nop
add
fucomip
inc
sub
add
mov
sub
mov
adc
push
xchg
jl
pop
scas
rolb
mov
dec
ret
inc
add
daa
cmpsl
lock
cmp
cmp
gs
inc
das
mov
and
add
add
mov
mov
out
push
push
adc
cmc
xor
jmp
add
imul
repnz
lods
fs
add
dec
inc
add
lods
pop
sub
dec
push
leave
inc
arpl
sahf
sbb
add
movsl
pop
inc
add
cmc
test
test
ss
add
mov
int
add
mov
pop
fldcw
adc
mov
pushf
xchg
sti
cmp
and
mov
lahf
xor
mov
lahf
out
push
xor
mov
sub
mov
int
cs
cmp
cltd
call
cmpsl
dec
jle
dec
or
cwtl
cmp
adc
lret
jb
mov
aaa
das
dec
cli
xor
movsl
iret
hlt
mov
cmp
sbbl
stos
inc
and
nop
add
add
xor
mov
add
add
jns
in
movsb
jle
pop
faddl
mov
arpl
in
push
add
lock
adc
add
cwtl
pushf
sub
scas
stc
and
fidivrs
fs
push
jmp
cld
inc
cmp
data16
mov
std
scas
mov
mov
nop
add
loope
mov
push
pop
arpl
mov
sbb
add
mov
pop
jl
fbld
mov
pusha
add
pushf
sub
add
data16
add
mov
inc
sbb
mov
or
mov
addr16
int3
call
pop
xor
mov
lahf
mov
inc
jle
add
mov
xlat
pushf
and
mov
neg
repnz
push
xor
mov
data16
test
fisubrl
add
inc
leave
sub
sahf
ficoml
leave
pusha
add
jg
adc
mov
xchg
push
push
pop
enter
mov
mov
add
mov
xor
int
imul
mov
mov
mov
jmp
cmp
push
cld
rcrl
pop
sti
out
add
mov
out
mov
add
mov
add
rolb
mov
add
rolb
mov
jp
inc
xchg
cmp
sti
movsl
jge
xchg
dec
cli
mov
add
bound
mov
jbe
jnp
xor
add
add
sahf
test
jb
mov
mov
aam
aas
sbb
mov
gs
das
in
leave
imulb
fsubl
adc
mov
push
jo
mov
adc
add
inc
shll
mov
repnz
add
mov
test
add
fmulp
ffree
mov
jmp
mov
out
inc
adc
dec
xchg
add
inc
pop
cmpsb
add
scas
push
and
daa
xor
or
sub
add
add
outsb
lock
cmp
sub
fdivrl
mov
add
mov
test
mov
xchg
mov
es
sub
icebp
push
out
fimuls
dec
enter
lret
aaa
lea
std
popf
mov
add
mov
add
fs
sbb
mov
data16
out
out
inc
add
pop
cld
pop
arpl
add
add
and
mov
clc
pop
sub
mov
xchg
rolb
mov
scas
addr16
inc
add
scas
out
mov
and
popa
push
out
icebp
lcall
pop
sbb
dec
je
outsl
into
mov
mov
add
nop
add
sub
add
add
insb
jge
ds
and
mov
cmp
adc
sti
xlat
stos
add
add
bound
mov
lahf
and
mov
xchg
clc
call
ror
movsl
lret
imul
xor
mov
mov
add
shll
int3
pop
mov
mov
mov
fadds
or
push
jns
scas
negl
mov
mov
add
fists
push
pop
and
mov
fcomp
xor
sub
outsl
ds
in
add
pop
in
fwait
shll
adc
fwait
jp
add
pop
push
jae
dec
and
mov
inc
sub
add
or
xchg
inc
add
fidivrs
mov
sbb
cmp
call
lret
push
xchg
add
or
xor
xchg
cmpsb
mov
xchg
shll
add
add
ficomps
jmp
nop
add
xor
neg
das
or
add
rolb
mov
call
add
lds
mov
xchg
push
adc
mov
sub
jno
and
adc
mov
addb
mov
jg
fists
add
mov
and
mov
add
cmp
mov
loop
mov
xor
pop
stos
sub
sub
movsl
insb
jno
cli
mov
jmp
xor
sub
fcomps
outsb
cmp
mov
pop
cld
push
xor
std
mov
adc
stos
adc
inc
jg
jno
pusha
add
or
mov
cwtl
jbe
xchg
imul
xor
mov
cmp
fsts
xor
fildl
mov
pop
jnp
fisttpl
add
add
sub
add
jae
addl
movsb
xchg
lcall
loop
mov
call
cmpsb
test
add
add
pop
call
cmc
in
repnz
rolb
mov
add
and
mov
cmpsb
push
add
cwtl
push
mov
insl
bound
mov
xchg
mov
dec
jno
sub
add
cmpsb
scas
in
dec
sbb
sub
sub
fdivrs
cmp
int
jb
mov
pop
stos
sbb
sbb
lock
and
mov
aad
fs
mov
mov
fistl
ss
pop
in
outsb
jbe
xor
sbb
test
jmp
xor
mov
jns
push
dec
lcall
fistpll
sub
movsl
test
add
rcll
fstps
add
sahf
iret
jecxz
add
cmp
ss
cld
bound
mov
add
add
rolb
mov
jl
lea
add
mov
mov
pusha
add
fwait
dec
inc
add
ja
aas
cs
mov
in
leave
test
xchg
jbe
adc
mov
mov
cmpsl
lds
jecxz
in
adc
add
add
xchg
push
ljmp
cmp
fisttpl
call
sar
sbbl
pop
pop
pop
jne
std
xor
loop
mov
cmc
sahf
pcmpeqd
int
add
jae
pusha
add
xchg
xor
mov
push
add
test
leave
fstpt
pop
rolb
mov
loope
add
les
inc
mov
push
test
mov
addb
popf
jle
test
sbb
add
lods
and
mov
push
mov
xchg
add
icebp
and
mov
out
roll
sub
dec
daa
push
and
add
add
mov
pop
add
mov
add
loop
mov
faddl
add
les
in
sbb
mov
aaa
ja
sbb
lea
mov
lods
sbb
lret
add
inc
aaa
xor
sub
add
add
leave
es
add
mov
add
in
add
sbb
jmp
jle
push
add
sbb
hlt
mov
pop
scas
int
icebp
mov
mov
push
addb
xchg
loopne
mov
or
addb
xchg
mov
das
rorl
add
outsb
cltd
and
mov
adc
mov
or
jnp
mov
mov
mov
add
pop
mov
add
pushl
push
jb
mov
jmp
in
adc
cmp
lods
add
ds
mov
sahf
and
jp
sbb
lcall
push
rolb
or
mov
in
adc
add
outsl
pushf
xor
add
imul
arpl
nop
add
sbb
or
add
xchg
gs
cmpsl
push
add
dec
stc
rcrl
mov
xlat
pusha
add
jns
test
push
popf
fwait
leave
mov
add
mov
add
ss
insl
and
dec
xor
add
mov
into
push
mov
call
push
xor
mov
xor
add
test
mov
inc
add
test
dec
xlat
dec
cs
xchg
mov
add
dec
cmp
pcmpgtw
sub
dec
insb
push
add
add
push
mov
scas
mov
cmp
mov
mov
add
jno
les
xor
xor
mov
xchg
sub
mov
cli
leave
mov
stc
push
addb
xchg
mov
cld
test
in
lret
or
lret
mov
lcall
shll
stc
lock
in
dec
mov
add
rolb
mov
add
lds
mov
fisubrl
stos
jmp
pop
ret
outsl
sbb
sub
stos
or
pop
aad
sub
frstor
cld
data16
cs
addl
add
jge
xchg
pushf
sub
add
push
inc
jle
outsl
jl
jae
xchg
jge
add
add
inc
out
std
wrmsr
add
iret
xchg
cmp
fwait
loope
pop
enter
call
arpl
insb
jbe
into
mov
cmp
jnp
negl
mov
stc
xchg
cmpsl
dec
mov
push
add
jbe
addw
fisubs
mov
xchg
add
add
mov
mov
loopne
mov
add
mov
mov
and
mov
adc
mov
add
cmp
cmp
fmull
cmc
pop
and
arpl
pop
je
mov
mov
add
mov
xchg
adc
push
mov
xchg
fiaddl
add
pop
jne
outsl
xchg
lret
pop
jb
mov
add
cmp
fdivr
jae
add
jne
bound
mov
and
movsl
cmp
cmp
mov
mov
icebp
mov
inc
dec
pushf
cmp
arpl
xorl
cmc
sub
jne
clc
cmpsl
popa
push
mov
cli
mov
ds
daa
lods
loopne
mov
mov
xor
add
xchg
mov
ja
mov
daa
call
sahf
lcall
inc
mov
push
adc
mov
push
pop
scas
out
dec
popf
sbb
arpl
mov
add
mov
add
mov
out
call
add
cli
je
push
pop
mov
mov
or
clc
mulb
rolb
cwtl
inc
add
add
add
add
arpl
mov
inc
add
lods
bound
mov
add
inc
xchg
sti
mov
test
mov
sub
mov
add
fcompl
leave
in
push
add
aam
inc
add
push
adc
mov
xchg
mov
mov
dec
into
sub
scas
js
mov
push
jae
icebp
mov
mov
push
xchg
add
add
sahf
jae
add
add
lds
add
fiaddl
in
pop
push
cmpsl
popl
sbb
add
scas
push
cmpsb
push
push
add
add
sub
mov
cmc
pop
and
jecxz
data16
aad
add
fmull
push
mov
add
push
lock
and
add
movsl
ja
movsb
and
dec
pop
daa
dec
jns
insb
adc
rolb
mov
or
in
sbb
mov
mov
cmp
cltd
sub
mov
fsubr
mov
pop
test
sbb
pop
pop
push
fildl
or
mov
jae
ret
adc
incl
add
add
push
movsl
push
jne
push
cmp
mov
aad
jmp
test
mov
insb
pop
into
fwait
addr16
push
outsl
rorl
loop
mov
jns
add
sub
mov
xchg
arpl
adc
addb
lods
jle
add
push
addr16
dec
cli
xor
mov
mov
cmp
daa
pop
sub
mov
add
mov
cmp
outsl
test
and
mov
dec
xchg
mov
add
and
mov
and
add
dec
hlt
mov
rolb
mov
leave
mov
mov
add
aam
mov
sbb
pop
rorl
mov
jbe
jg
jmp
mov
cltd
mov
push
cmp
mov
push
out
lock
cmpsb
lret
dec
out
push
sahf
sub
add
xchg
pop
sbb
dec
xor
stos
mov
xor
mov
adc
mov
movsb
adc
rolb
shll
adc
sbb
lock
or
pop
test
add
mov
cs
pop
push
hlt
fcomps
pusha
add
hlt
adc
jnp
cmp
and
mov
pusha
add
fst
add
outsl
popa
pop
lea
mov
add
mov
lcall
jnp
add
cltd
js
insb
adc
shll
pushf
movsb
inc
ljmp
mov
dec
das
rolb
mov
nop
add
cli
cli
mov
push
gs
sub
and
push
add
shll
test
scas
mov
mov
jo
mov
add
push
add
aad
add
sub
pop
xchg
inc
add
fimull
aaa
adc
mov
jmp
jnp
mov
add
add
jo
mov
mov
xchg
outsl
mov
mov
add
lahf
jl
add
add
nop
add
cwtl
out
out
cmc
mov
pop
dec
int3
in
dec
cld
mov
mov
mov
test
notl
mov
push
aas
mov
mov
gs
stc
dec
js
jno
in
sbb
pop
or
xor
repnz
push
mov
mov
mov
push
push
leave
int3
andl
fisttpl
dec
test
add
adc
mov
add
add
insl
xor
or
add
adc
or
movsb
out
adc
je
mov
push
mov
mov
add
mov
das
pop
push
dec
xor
sbb
mov
mov
add
mov
add
mov
aad
pop
rolb
mov
jmp
add
lret
mov
aam
icebp
push
sbbl
inc
xor
lret
int3
pop
in
sub
pop
cwtl
scas
loope
dec
daa
adc
mov
and
mov
or
add
adc
movsb
aaa
mov
call
dec
dec
add
test
in
cli
roll
adc
cmp
lods
loope
or
int
loop
mov
cmp
mov
jl
xlat
into
test
sub
outsl
imulb
in
or
mov
fstpt
roll
cltd
pop
fcmovnbe
add
loopne
mov
add
push
mov
popf
lock
sub
nop
add
lret
jge
adc
add
adc
mov
add
dec
scas
xchg
add
dec
es
add
mov
cld
fadd
add
mov
clc
mov
or
adc
test
out
leave
std
subl
mov
aas
mov
insl
fwait
cwtl
repz
mov
arpl
ret
dec
mov
push
enter
ret
data16
int3
push
jbe
jns
movsb
or
add
ret
and
test
addr16
movsb
pop
imul
arpl
ret
push
adc
loop
mov
mov
cwtl
push
icebp
jae
xchg
xor
add
mov
rolb
mov
int3
ficoml
push
popa
cmpsl
repnz
add
fsubs
add
mov
aaa
adc
dec
add
mov
stos
sub
arpl
push
jb
mov
cmp
adc
mov
add
cmp
add
inc
aas
or
or
das
or
pop
aaa
shll
add
enter
mov
push
add
nop
add
mov
insl
std
sub
push
fbstp
pop
addr16
xlat
jg
test
add
sbb
mov
mov
add
mov
add
aas
inc
add
add
or
enter
mov
mov
out
fs
adc
lds
pop
mov
add
mov
je
int
xor
mov
push
mov
jl
sub
imul
sbb
mov
mov
int3
inc
mov
pop
out
inc
push
insb
push
add
mov
je
push
cmpsb
js
insl
pop
mov
cmp
pop
cmpsb
mov
mov
imul
mov
rolb
mov
push
xchg
cmpsb
jnp
fwait
push
test
xor
and
add
jns
or
and
mov
add
call
negl
sbb
icebp
sub
jecxz
ficomps
add
insl
fcmovu
sub
add
in
sub
inc
test
mov
mov
cmp
mov
xor
mov
add
pop
mov
jmp
adc
mov
push
iret
adc
xchg
mov
adc
scas
aad
jbe,pn
dec
int3
cmpsb
jo
mov
lret
mov
movsl
push
dec
push
jge
insb
scas
shrl
decl
in
jle
add
push
adc
js
add
add
add
pushf
hlt
mov
aaa
addr16
int3
js
jp
jb
mov
cmp
add
add
mov
mov
or
and
push
lock
mov
ljmp
add
mov
movsb
aad
in
mov
mov
mov
ja
movsl
cmc
sub
mov
pop
xchg
add
mov
icebp
push
mov
dec
pop
fwait
push
add
add
pop
aad
stos
adc
das
call
or
mov
add
mov
gs
testb
push
add
dec
std
test
into
lahf
das
pop
fidivs
cmp
sbb
xchg
sub
fists
add
rolb
mov
mov
aas
mov
mov
shl
xchg
lods
sbb
ret
mov
dec
add
add
mov
loopne
mov
bound
mov
add
xchg
cltd
fdiv
mov
add
sti
or
ret
rolb
add
ljmp
ds
lret
xor
mov
shr
jns
sbb
aas
enter
push
add
rcll
movsb
xchg
lret
add
sub
fstpl
in
or
lds
lcall
xchg
rcrl
lahf
ret
sbb
popf
inc
adc
sub
fldenv
mov
mov
add
add
mov
add
jns
xchg
lock
xor
stos
fstp
mov
fstl
out
lods
imul
mov
xchg
add
addb
jl
pop
in
cmp
insb
fcomps
popf
sub
out
mov
sahf
push
imul
mov
je
xchg
cmp
jg
xchg
cwtl
leave
mov
xchg
add
add
mov
lea
sub
add
xchg
push
jno
or
mov
lahf
pop
idiv
dec
enter
xchg
adc
sub
addb
scas
sub
dec
push
hlt
xor
mov
mov
hlt
outsl
mov
add
mov
nop
add
imul
add
mov
add
inc
pop
imul
add
mov
add
mov
out
sti
fs
mov
add
mov
movsl
lods
pop
sbb
add
daa
lea
xor
mov
jnp
adc
mov
add
add
lods
out
adc
mov
xchg
in
add
fwait
sub
add
lret
rsqrtps
mov
or
inc
sbb
testb
adc
add
scas
cmp
out
add
movsb
dec
cltd
fs
add
bound
mov
push
cmp
movsb
sarl
cld
push
jecxz
jno
add
fwait
xchg
add
popa
cmc
push
out
add
pushf
sub
insb
cwtl
fnsave
add
add
adc
mov
add
mov
loope,pt
add
add
mov
rorl
ljmp
jo
mov
add
pop
cltd
push
data16
mov
and
rolb
mov
lds
addb
popa
incb
cmp
push
sbb
sbb
mov
pop
test
cmpsl
andl
jno
add
mov
xchg
cltd
jb
mov
cld
jmp
or
push
cmp
mov
ret
mov
add
aam
push
int3
add
cwtl
outsb
fs
mov
mov
rcll
or
sub
mov
xor
mov
in
sub
stos
out
enter
add
add
mov
mov
pop
arpl
jl
cmpsb
push
add
mov
fistps
mov
mov
and
mov
mov
add
add
mov
out
movsl
mov
loopne
mov
ret
jle
add
mov
rolb
inc
add
adc
out
mov
xchg
add
push
inc
mov
mov
add
scas
icebp
xlat
xor
mov
aam
jbe
jge
aam
push
add
and
pop
test
imul
pushf
xchg
insb
dec
int
sub
lcall
hlt
or
cmc
rolb
mov
int
test
add
dec
movsl
inc
cmc
stc
push
jmp
add
add
jns
pop
mov
push
movsl
xchg
add
sahf
sti
mov
scas
dec
mov
add
add
push
add
push
add
add
add
inc
sti
les
outsl
testb
xchg
shrl
lret
movsw
mov
xor
mov
fildl
push
mov
add
daa
leave
sub
mov
add
adc
ja
xlat
sbb
mov
dec
les
jecxz
xchg
sub
cli
inc
mov
add
gs
cli
stos
dec
adc
mov
mov
jno
or
jecxz
fstl
add
sahf
add
lahf
rolb
mov
aad
pop
jo
mov
xchg
mov
mov
mov
xchg
add
mov
mov
sarl
inc
jb
mov
xchg
add
xor
add
test
add
pop
outsb
std
int
xor
fcmovnu
xor
mov
outsb
mov
xlat
inc
add
mov
movsl
xchg
jle
addb
lcall
imul
in
xor
cltd
daa
dec
lcall
pop
addr16
add
add
xchg
jns
add
scas
cmp
jecxz
cmpsb
into
adc
or
fcmove
bound
mov
arpl
mov
in
movl
inc
cmpsb
es
movsl
push
jmp
add
addr16
in
fstpl
ljmp
mov
add
popa
inc
call
js
pop
mov
mov
test
mov
xchg
test
imul
mov
pop
cmp
mov
adc
repz
arpl
sub
clc
adc
pushf
lods
inc
addb
mov
iret
lods
lret
out
dec
ret
sbb
jmp
push
dec
aad
jbe
jne
outsb
ja
jae
pop
jp
in
addb
push
mov
mov
push
aas
xchg
xchg
arpl
add
leave
adcl
add
scas
push
arpl
add
imulb
dec
aaa
inc
xchg
adc
std
lods
rolb
mov
sti
arpl
dec
jecxz
cmp
pushf
sub
and
mov
cmp
add
popa
pop
nop
add
jo
mov
pushf
out
loope
sub
jno
lock
mov
dec
dec
mov
sahf
out
sub
inc
int3
dec
outsl
lret
jbe
dec
test
inc
add
add
scas
xchg
cld
cmp
sti
sbb
xchg
inc
sbb
jmp
movsb
aaa
pop
js
out
ficoml
clc
dec
or
call
mov
repnz
inc
inc
orl
mov
mov
in
bound
mov
add
push
add
xchg
lea
test
cmp
dec
jb
mov
scas
mov
or
add
push
add
fsubr
in
stc
jb
mov
call
mov
pop
clc
hlt
jnp
add
pushl
mov
xchg
mov
add
add
jbe
inc
dec
and
pop
leave
arpl
loope
loop
mov
popf
xor
push
loopne
mov
mov
push
inc
add
daa
mov
or
pop
aad
aad
inc
sub
add
in
and
sub
fisttps
out
call
xor
pop
add
mov
repnz
add
xchg
xchg
sbb
add
jb
mov
nop
add
rolb
push
add
addb
popa
xchg
pop
out
pusha
add
sbb
add
mov
idiv
and
mov
push
cmp
dec
stos
mov
add
and
mov
xor
out
xchg
add
fisttps
paddusw
addb
scas
test
mov
dec
stos
stos
imul
sbb
mov
mov
aaa
jnp
pop
sbb
int3
loopne
mov
jge
cmc
sbb
or
mov
sbb
dec
insb
jb
mov
mov
lds
and
add
scas
movsb
cmp
xchg
adc
mov
mov
xchg
xor
fucomip
adc
jae
add
idiv
inc
ljmp
add
jge
or
push
add
ret
jmp
adc
mov
js
addr16
mov
out
mov
add
jae
inc
fs
insl
add
add
add
pop
inc
push
fiaddl
add
jg
add
mov
loopne
mov
ss
fwait
int3
bound
mov
push
mov
in
fisubs
jge
push
push
mov
sbb
lds
add
add
cmpsb
lods
movsb
mov
in
pop
mov
mov
jmp
cmp
push
xchg
inc
xchg
mov
jge
add
or
mov
mov
mov
sbb
add
and
mov
nop
add
jp
and
mov
xchg
ds
push
add
bound
mov
in
dec
pop
loop
mov
push
push
addr16
mov
outsl
fwait
push
mov
mov
gs
je
add
or
inc
aad
jecxz
inc
xor
mov
mov
mov
or
mov
xchg
lock
dec
popf
clc
scas
lods
cld
or
mov
mov
mov
sub
ja
adc
lret
rcl
pop
ret
lods
adc
mov
in
shrl
pop
std
xor
dec
add
add
mov
retw
adc
mov
mov
cmp
cmp
push
add
inc
jae
push
cs
lahf
pushl
pop
sbb
daa
stos
rcl
or
sub
add
add
in
les
js
iret
and
and
es
jmp
lock
add
loop
mov
cmpsl
and
add
xchg
mov
cmp
mov
fs
insb
pusha
add
xchg
pop
xchg
dec
ret
inc
push
add
mov
add
cmp
out
ljmp
mov
movsl
push
add
outsb
push
mov
add
add
push
les
inc
repnz
dec
jp
nop
add
cwtl
fs
cmp
nop
add
add
repnz
int
add
lea
mov
movsb
sahf
outsl
imul
xor
sar
jne
cwtl
inc
cmpsb
dec
or
loop
mov
je
add
mov
mov
outsl
add
add
mov
inc
and
mov
popa
lahf
scas
and
mov
mov
mov
push
add
or
push
push
in
xchg
iret
cmc
ja
js
fdivrl
jle
mov
mov
pop
kmovb
mov
ret
in
xchg
int
pop
xchg
lcall
add
repnz
xor
mov
add
mov
aam
add
pusha
add
ret
repz
or
dec
xchg
nop
add
loope
add
fnsave
mov
mov
inc
rcr
dec
sub
xchg
add
ljmp
test
call
lock
sbb
into
jle
mov
mov
mov
ds
inc
dec
sub
adc
aam
aaa
stc
movsb
sbb
into
addb
cmpsl
add
jbe
loope
xor
or
cmp
es
inc
add
xchg
decl
test
xchg
out
jl
leave
in
js
inc
xor
mov
mov
jne
jae
bound
mov
lods
rolb
adc
outsb
lock
leave
lcall
mov
dec
dec
cmp
push
insl
adc
int
mov
mov
add
cmp
add
jne
lahf
or
in
in
jno
add
add
movsb
aaa
daa
data16
mov
lcall
mov
push
add
and
push
mov
mov
fcoml
xlat
pop
in
jbe
jecxz
add
sub
sub
shl
aas
outsb
adc
mov
ret
scas
arpl
ficoms
sar
rolb
mov
mov
popa
in
cli
call
stos
lock
cwtl
xchg
add
adc
lahf
fstpl
cli
mov
adc
cmp
mov
push
lock
scas
mov
mov
push
add
rcrl
mov
lret
inc
mov
sti
push
inc
ja
sbb
daa
outsl
xchg
dec
iret
pop
xor
ja
jle
mov
jbe
or
lea
mov
mov
addr16
jge
xlat
jbe
jno
add
xchg
in
add
mov
add
lea
cmp
jnp
push
sti
jo
mov
call
add
insl
mov
mov
add
push
jne
mov
sbb
cmp
nop
add
xchg
pop
fstl
mov
in
movsb
outsb
dec
bound
mov
ss
fs
add
mov
add
int
icebp
movsb
gs
push
add
jnp
dec
call
fadds
shll
out
js
or
xchg
add
ret
pop
aas
and
and
mov
negl
pop
das
rolb
push
dec
or
jns
dec
or
add
bound
mov
cmc
add
mov
faddp
add
ds
mov
rolb
mov
sub
pop
out
mov
out
rolb
mov
mov
mov
mov
adc
or
jge
stos
lahf
bound
mov
mov
mov
repz
sbb
push
jmp
insb
stos
xchg
jae
cwtl
lcall
push
jb
mov
inc
add
sahf
push
add
test
enter
dec
mov
pop
inc
ja
add
je
mov
or
fidivrl
mov
add
jae
repnz
mov
add
clc
pop
outsl
pushf
push
mov
mov
add
jecxz
rorl
jae
add
dec
push
call
ficoms
dec
jle
lret
dec
sub
arpl
and
add
push
add
add
pop
sub
lahf
mov
add
lods
leave
add
mov
pop
add
mov
fstpt
movsb
cltd
xchg
adc
xchg
rolb
mov
aaa
dec
insb
sbb
mov
add
add
add
inc
aas
sbb
icebp
sub
jg
adcl
xor
mov
jno
clc
out
cs
int3
sub
popa
sysret
jbe
lret
sbb
dec
das
pop
jns
push
jae
add
mov
sub
addb
lcall
and
sbbl
idivb
sub
jge
jae
inc
add
les
mov
jae
jns
test
cltd
push
add
add
add
repz
mov
add
dec
cmp
mov
mov
mov
add
sub
add
cld
test
ficompl
cmpsb
or
test
aam
adc
mov
pop
stos
sbb
cmpsb
pop
or
push
mov
movsb
mov
lods
sub
add
mov
add
cmpl
in
jle
or
xchg
inc
ret
nop
add
das
loopne
mov
addb
fisubl
push
add
push
push
mov
mov
cmp
fsubs
imul
adc
ja
nop
add
nop
add
jo
mov
mov
or
add
test
ret
mov
add
popa
mov
mov
outsb
sub
and
rcl
rolb
mov
cltd
dec
stos
jnp
xchg
mov
cltd
rolb
mov
mov
add
mov
ds
push
add
mov
shl
add
stc
inc
push
add
or
cmc
push
add
xor
mull
inc
aam
pop
cmp
es
add
add
or
and
or
cmp
scas
popf
pop
test
out
daa
repnz
jne
nop
add
adc
add
das
out
fs
mov
outsl
roll
add
mov
popf
jb
mov
mov
mov
dec
stos
into
in
sub
and
mov
xchg
pop
loope
jo
mov
mov
or
scas
inc
add
mov
add
mov
xchg
arpl
hlt
push
pop
add
jle
add
lret
mov
jbe
out
pop
call
mov
out
sbb
jb
mov
xor
faddl
nop
add
add
inc
add
mov
shrl
mov
add
cmpsb
es
sub
mov
add
add
xor
repz
jne
cltd
xchg
mov
adc
psrld
mov
mov
mov
adc
mov
sbbl
shr
notb
mov
mov
add
leave
mov
jne
xor
cmc
xchg
pop
xlat
adc
or
lods
rolb
imul
sbb
push
add
mov
pushf
jmp
add
xchg
add
inc
div
mov
gs
add
mov
mov
out
sbb
xor
mov
add
push
add
pop
cmp
add
cltd
push
mov
mov
mov
sbb
xchg
jmp
movsb
jp
mov
std
fldl
in
adc
out
add
ficompl
lods
push
shr
popf
push
adc
add
mov
rolb
mov
cmp
or
popa
add
mov
addb
ret
sbb
lahf
imul
bound
mov
sbb
and
lahf
dec
cs
aas
aaa
sub
xchg
add
mov
notl
mov
push
mov
mov
cli
push
add
fcoms
mov
sbb
jg
jbe
pop
in
mov
mov
cmp
mov
pop
outsb
xor
add
adc
loope
push
fistl
add
add
sub
add
add
xor
mov
push
mov
or
cmpl
sahf
aas
sbb
add
mov
push
pop
scas
jg
add
pop
and
mov
outsl
adc
jmp
clc
push
dec
cmp
xchg
or
cmp
inc
push
add
je
add
adc
mov
push
loopne
mov
add
mov
xor
add
and
add
loop
mov
fldl
daa
inc
loop
mov
cli
call
add
test
cmp
or
pop
jmp
sub
inc
int
mov
mov
mov
add
repnz
cld
testb
adc
mov
pop
shll
jo
mov
mov
rolb
stos
push
mov
push
and
add
mov
mov
mov
push
ds
mov
pop
mov
adc
mov
enter
mov
mov
les
add
int3
jno
xor
into
repnz
pop
leave
lods
movsb
loopne
mov
add
sbb
cmp
daa
ss
in
pusha
add
pusha
add
hlt
or
movsb
pop
mov
mov
dec
push
inc
movsb
inc
punpckhwd
mov
add
lds
mov
or
lahf
rolb
mov
pusha
add
lret
fidivl
out
cli
push
mov
sahf
popa
in
add
ret
push
add
add
mov
add
add
cmp
add
cmp
push
xchg
cmp
sub
mov
mov
mov
stos
xchg
add
xor
adc
mov
adc
adc
add
and
mov
in
mov
std
es
mov
clc
mov
sub
mov
pusha
add
mov
push
dec
add
imul
popf
in
std
mov
cli
ds
nop
add
adc
mov
add
insl
xchg
mov
mov
mov
mov
icebp
add
mov
push
add
pop
stos
xor
mov
out
ret
addb
insb
mov
mov
cmp
add
push
adc
add
out
sub
pop
xor
icebp
sbb
add
iret
cmp
inc
mov
and
xchg
add
push
sub
xlat
sub
mov
mov
cs
cwtl
fsubrl
mov
and
adc
lcall
mov
or
insb
and
fisttpl
add
mov
clc
fcomps
push
out
in
dec
push
add
les
sti
or
mov
je
pop
fidivrs
dec
sbb
popf
xchg
cld
aam
lret
enter
sbb
mov
add
jge
lods
pop
or
gs
add
out
or
pop
stos
addb
cld
ss
xchg
dec
aam
push
mov
pop
jnp
je
push
add
inc
cmpsb
mov
arpl
add
lods
sub
or
jecxz
les
out
jmp
mov
xor
mov
aaa
jecxz
pop
adc
loop
mov
xchg
mov
cli
dec
call
jns
push
or
std
es
add
call
cmc
cmp
add
mov
fmul
ds
sub
dec
sti
call
or
pop
mov
fwait
mov
repz
cmp
test
pop
out
pop
sub
addb
les
je
adc
sub
test
out
and
cmpsb
jge
sub
aam
jecxz
pop
pop
pop
cltd
and
mov
jbe
ja
sbb
scas
clc
sub
pop
into
rolb
mov
pop
dec
mov
jp
fmul
mov
sub
jge
es
mov
mov
jmp
add
aad
mov
pusha
add
fisubrs
movsl
pop
clc
mov
addb
xchg
inc
add
std
xchg
add
bound
mov
test
aad
dec
or
add
addb
ffreep
add
jmp
out
push
sbb
add
jle
inc
inc
add
sti
inc
mov
push
les
arpl
add
jo
mov
add
ret
fldenv
enter
fidivrl
dec
mov
outsl
inc
dec
rcrl
hlt
rcll
xchg
xor
xor
jmp
jae
add
or
add
insb
adc
int
popa
mov
in
lock
adc
rorl
mov
sub
and
neg
pop
ja
ret
sub
sub
add
ja
addb
dec
pop
xor
data16
push
cmp
mov
jmp
xchg
lcall
and
mov
mov
in
pusha
add
cld
xchg
mov
xchg
add
sub
fsubl
dec
mov
add
mov
pushf
mov
rolb
mov
push
jnp
jmp
xchg
xor
sbb
add
mov
push
popa
sub
addb
nop
add
nop
add
rolb
mov
das
push
jae
cmp
inc
add
inc
int3
in
push
test
jge
mov
std
ds
dec
dec
pop
or
mov
mov
add
lret
fnstsw
pop
dec
cmp
cmp
add
mov
mov
sub
rolb
mov
sbb
mov
pop
pop
in
mov
push
int
rolb
jnp
dec
pop
lds
jmp
aas
jge
sbb
add
push
lock
adc
sarl
call
dec
frstor
fidivrl
sbb
inc
add
jno
inc
mov
pop
mov
add
mov
rolb
mov
add
add
pop
sbb
xchg
or
mov
add
mov
repnz
popf
dec
pop
lret
pop
addb
mov
inc
lret
or
add
fldenv
icebp
push
jg
call
mov
sbb
push
add
add
or
mov
mov
jg
ljmp
mov
add
pop
xlat
ds
lcall
movsb
nop
add
xchg
addb
jmp
in
scas
jns
fidivrs
fldenv
add
pop
lods
add
push
arpl
mov
xchg
mov
cs
add
mov
inc
add
mov
mov
sbb
fwait
and
mov
mov
dec
add
mov
fsubs
ret
mov
and
sahf
sbb
mov
push
stos
pop
or
leave
in
cli
movsb
mov
call
mov
rolb
pop
fistpl
and
dec
push
mov
xchg
ret
pop
and
cwtl
lahf
test
popa
into
test
push
fldenv
add
sbb
test
sbb
out
or
out
sub
sbb
idivb
insb
js
rolb
pop
repnz
andl
aad
add
sahf
fs
mov
dec
mov
add
mov
sti
adc
dec
push
mov
ret
enter
add
mov
ljmp
or
fsub
lahf
stos
in
inc
insb
sbb
mov
loop
mov
int
outsb
jmp
jle
mov
jmp
scas
lds
xor
jmp
pop
nop
add
push
add
mov
jl
pop
std
imulb
jnp
sbb
add
mov
inc
cmc
xchg
xor
stc
mov
mov
add
js
fildll
mov
jg
stos
nop
add
stos
pop
inc
sti
sti
loopne
mov
leave
mov
gs
adc
mov
cld
cmp
xor
mov
add
push
addr16
push
cs
and
add
cmp
dec
sti
pop
fstpl
in
test
jecxz
insl
loop
mov
gs
inc
shl
test
fadd
stos
pop
loopne
mov
add
add
push
xor
rolb
mov
mov
cmp
fimull
add
add
push
iret
sbb
sbb
mov
add
rol
addb
rolb
mov
add
push
add
mov
adc
mov
aam
ud1
mov
add
ds
jne
add
rcll
addb
fisttpl
cltd
inc
add
mov
clc
lcall
sub
inc
outsl
xor
mov
push
movsl
repz
ret
insb
gs
add
add
mov
pop
and
hlt
push
leave
insb
mov
add
ret
scas
push
add
mov
add
es
cld
icebp
fcmovnu
add
push
and
bound
mov
scas
movsb
xor
dec
jmp
fwait
insb
mov
add
jbe
mov
jb
mov
insb
lret
push
push
int
mov
out
in
or
add
adc
add
mov
movsb
std
ret
hlt
test
aaa
mov
jmp
add
dec
and
mov
lods
ljmp
cmp
add
pop
push
mov
mov
jecxz
add
fistpl
loop
mov
add
add
mov
int3
mov
add
mov
xor
out
pop
jbe
mov
sub
add
dec
jmp
pop
fs
xor
ret
mov
sti
pop
rolb
mov
add
add
mov
das
fdivrs
mov
push
xchg
cld
std
gs
add
push
dec
push
rolb
mov
fwait
sbb
jecxz
add
dec
xchg
or
dec
fwait
je
adc
pop
cltd
inc
add
ficompl
mov
inc
add
and
mov
xor
cwtl
and
cli
push
push
cwtl
fstpl
mov
div
pop
cmp
add
xor
lahf
inc
out
cwtl
push
rolb
mov
lock
add
add
add
mov
sub
lcall
mov
sbb
loope
fisubl
add
and
mov
sbb
mov
sbb
hlt
jg
lods
out
dec
imul
imul
pop
out
add
adc
mov
add
out
outsl
int3
sbb
sub
add
add
xchg
aas
add
mov
sub
lahf
cmp
dec
xchg
test
push
add
inc
stos
lret
jecxz
mov
rolb
mov
inc
scas
mov
adc
mov
jne
int
addr16
pusha
add
jp
in
adc
mov
jne
not
and
mov
sbb
cmp
dec
sti
adc
fldl
dec
push
jo
mov
mov
mov
mov
icebp
push
stc
xchg
into
aad
pop
rolb
or
loop
mov
add
mov
pop
and
lods
pop
cmc
es
mov
add
sub
pusha
add
mov
sbb
mov
add
add
mov
iret
inc
dec
aas
mov
enter
mov
pop
or
xchg
add
and
jmp
add
pop
lret
dec
out
adc
les
test
scas
je
add
pop
sbbl
pop
pusha
add
adc
cltd
mov
fisttps
les
je
add
add
rorl
rolb
mov
int
add
sti
lret
sub
pop
xlat
xor
repnz
addl
outsl
adc
dec
jecxz
or
add
out
mov
push
push
jmp
add
aaa
aaa
xrstors
push
xchg
push
add
cli
js
lds
add
mov
mov
jg
addb
repz
inc
add
add
push
outsb
xchg
mov
mov
or
add
movsl
inc
test
ret
test
mov
xor
loop
mov
jmp
rolb
mov
dec
into
gs
push
add
and
mov
add
xchg
jbe
lret
mov
jecxz
jae
inc
jp
fcompl
pop
add
aas
push
dec
ss
dec
orl
rolb
cmp
addb
pop
add
mov
sub
mov
fbld
add
sub
imulb
jge
sahf
xchg
mov
cmpsb
cld
adc
out
pop
idivb
imul
sbb
cmpl
jbe
jp
addr16
test
or
ja
lods
decb
insb
mov
add
add
push
sub
nop
add
add
movsb
or
mov
ds
ja
rolb
rolb
mov
test
popa
outsl
dec
mov
adc
add
fs
and
mov
add
ljmp
push
sub
add
iret
pop
mov
ja
add
or
enter
jge
xchg
test
movb
mov
aad
lahf
addb
mov
add
dec
adc
adc
leave
push
xchg
pop
sub
inc
cmp
fnsave
leave
jmp
mov
xor
mov
inc
add
push
adc
mov
hlt
xor
mov
jl
sub
and
mov
add
push
cld
mov
addb
repnz
fisttpl
add
jecxz
mov
fprem
dec
call
add
mov
jmp
xchg
mov
mov
dec
stc
insb
ss
rolb
mov
or
add
mov
mov
loope
push
rolb
sub
add
add
add
pop
lea
mov
mov
fists
xchg
pop
mov
xchg
sub
jecxz
inc
mov
jbe
lret
and
jo
mov
adc
jne
rolb
pop
mov
add
or
sub
cmp
add
adc
push
xor
bound
mov
add
push
and
mov
loopne
mov
sub
mov
dec
and
and
cltd
mull
jg
stos
repnz
mov
add
movsl
xchg
aaa
jecxz
aas
std
xchg
lods
stos
call
mov
mov
and
mov
mov
ret
jno
adc
jge
test
mov
ljmp
xchg
das
loope
sbb
mov
mov
jmp
dec
xchg
push
add
mov
mov
mov
mov
inc
aas
pop
movsl
mov
cli
aaa
gs
mov
bound
mov
fistl
add
dec
or
sbb
icebp
fisubs
add
add
add
mov
push
xchg
jmp
add
out
push
cmpsb
shll
add
out
inc
push
xchg
scas
rorl
sub
add
bound
mov
outsb
mov
sub
add
mov
sbb
pop
jnp
pop
xchg
and
cld
adc
mov
push
cmp
out
scas
push
lret
fisttps
iret
xor
add
pop
fcmove
cmp
pushl
sub
sti
das
call
add
sub
adc
add
mov
push
sbb
lods
jg
mov
jge
mov
pop
mov
and
out
pop
pop
sti
dec
rolb
mov
adc
mov
adc
mov
inc
add
sub
mov
add
jb
mov
push
rol
adc
mov
ds
jae
in
enter
psrad
mov
add
sub
xchg
push
ds
ss
ljmp
dec
jmp
mov
icebp
dec
pop
movsb
dec
mov
push
mov
aam
ficompl
jmp
or
movsb
in
adc
jne
cmpl
int
js
ds
lds
out
mov
inc
loop
mov
inc
xor
adc
mov
sti
xchg
repnz
and
push
jae
add
and
mov
mov
inc
add
fisttps
dec
push
xchg
frstor
add
js
mov
pop
xchg
scas
mov
inc
or
push
mov
or
insb
xor
lods
pop
dec
xchg
das
subl
les
mov
add
mov
lods
mov
mov
or
lods
ja
mov
adc
mov
pop
xchg
adc
mov
push
loope
fsubr
scas
enter
mov
and
test
jo
mov
popf
inc
dec
xorl
pushf
lret
mov
fnstsw
jle
cmc
ss
add
dec
dec
sti
cmc
out
test
mov
mov
flds
mov
add
scas
js
aad
push
xlat
loope
outsl
mov
mov
xchg
add
add
inc
cli
mov
xchg
insl
pushf
dec
pop
clc
ds
ljmp
movsl
cli
jmp
dec
mov
jmp
add
xor
mov
dec
outsb
cmp
stos
dec
xor
mov
das
or
and
movsl
jecxz
loop
mov
mov
in
dec
mov
loop
mov
lea
clc
pop
imul
jnp
jae,pt
hlt
in
or
inc
clc
ss
mov
xor
daa
into
popa
sbb
arpl
or
jo
mov
shr
jb
mov
int
out
popa
ds
and
mov
add
dec
rolb
mov
addb
je
inc
add
mov
push
xor
mov
sub
addb
pop
jae
add
mov
or
push
add
mov
jl
icebp
leave
andl
add
add
mov
mov
loop
mov
mov
xor
mov
add
push
mov
push
add
addb
dec
push
rolb
jo
mov
pop
mov
add
add
add
add
jge
and
mov
not
jo
mov
pop
pushf
daa
faddl
int
int
jno
inc
iret
addb
sub
fcmovnb
or
jg
jnp
sahf
leave
mov
mov
jnp
add
add
fst
lea
or
loope
inc
jmp
insb
lcall
mov
push
lods
jne
fidivs
push
cmpsb
adc
jle
cmpsl
cs
insb
out
add
sbb
les
or
inc
push
shll
aaa
decb
xor
nop
add
xor
mov
repnz
mov
rolb
mov
mov
add
mov
mov
mov
mov
add
out
test
cmp
pop
mov
in
popa
mov
not
adc
pop
mov
or
add
add
mov
clc
loope
push
mov
mov
pusha
add
xchg
imul
xor
mov
and
mov
xor
mov
jl
ret
or
sahf
das
adc
mov
fstpl
inc
pusha
add
daa
inc
add
push
add
ror
aas
repnz
pop
inc
pop
out
pusha
add
inc
and
add
jnp
inc
lea
adc
mov
mov
mov
jl
add
add
mov
cmp
stos
or
mov
outsl
loopne
mov
mov
mov
mov
add
dec
outsb
mov
pop
xor
fnstenv
inc
mov
add
fistpll
idivl
add
push
mov
mov
rcll
cmpsl
stos
pop
imul
inc
add
mov
or
popf
and
insb
jmp
cmpsl
addb
idivb
sub
push
repnz
sub
or
add
lds
adc
mov
push
fdivs
sbb
xchg
in
xor
iret
scas
aas
cmpl
sub
add
addb
in
addr16
in
cmp
fisttpl
push
xor
mov
mov
add
je
fs
cmp
orl
mov
pop
popa
dec
lock
inc
test
js
adc
mov
rolb
mov
addb
adc
mov
ret
pop
xchg
mov
jnp
in
test
rolb
mov
add
push
push
push
and
dec
adc
mov
mov
mov
cld
lcall
mov
mov
popa
rorl
nop
add
scas
stos
out
adc
popf
fsubs
jno
fucomp
sub
add
mov
into
mov
std
adc
mov
cwtl
loope
sbb
mov
pop
sub
pop
addb
push
mov
mov
mov
mov
scas
xor
test
movd
or
aam
add
push
scas
into
out
sahf
in
add
out
out
roll
test
mov
mov
sub
add
imul
iret
mov
mov
fs
cmp
lods
stos
and
test
fidivs
mov
xchg
mov
mov
pop
cmp
and
jne
adc
cmpxchg
mov
add
mov
add
out
add
scas
aaa
lahf
stc
xchg
les
scas
adc
or
xor
insl
xorl
mov
sub
test
test
ja
aam
js
fs
es
into
and
scas
mov
xor
mov
adc
mov
xchg
jle
inc
add
fbld
push
and
mov
push
xchg
lods
fldz
inc
xchg
jns
xor
mov
fcomps
mov
inc
movsl
insb
mov
mov
jo
mov
mov
clc
jecxz
addb
movsl
adc
add
add
add
adc
jne
test
mov
xchg
adc
xchg
popf
aas
outsl
orl
fs
ficomps
adc
int3
out
fxch
mov
mov
and
cmp
fwait
xor
add
fiaddl
mov
jae
add
add
and
mov
and
mov
das
cmp
or
pop
stc
ljmp
cmpsl
xor
mov
push
add
jbe
jno
sbb
push
add
sbbl
cltd
and
mov
cmp
sbb
rorl
leave
dec
nop
add
mov
lret
sbb
testb
add
mov
fisubrs
pop
pop
pusha
add
cmpsl
pop
xchg
mov
call
pop
pushf
inc
xchg
add
outsl
ret
sbb
pop
movsl
mov
lods
xor
enter
mov
add
add
mov
xchg
add
or
lahf
sub
push
out
sub
scas
add
mov
ss
fwait
jnp
add
ret
mov
mov
bound
mov
jno
xchg
aam
xor
fdiv
add
test
xor
push
fcmove
sbb
outsl
sub
fisttpll
insl
inc
rolb
mov
mov
mov
mov
sub
lcall
ja
pop
jo
mov
pop
aaa
lods
mov
add
mov
xor
add
leave
popf
and
add
push
jnp
insb
push
add
xchg
and
push
insb
xchg
add
or
inc
mov
xchg
aaa
out
cld
mov
or
or
cltd
jge
add
mov
stc
mov
cmp
adc
add
rolb
mov
jmp
psllw
mov
xlat
daa
sub
scas
add
mov
mov
push
roll
les
add
add
addr16
add
push
insb
push
add
sub
and
push
pop
push
push
add
leave
ret
je
int
xor
mov
outsb
out
shr
lahf
js
stc
jns
imul
mov
pop
or
add
add
adc
mov
add
push
fistps
inc
fcmovnb
out
cmp
add
sub
cmp
sbb
loopne
mov
pop
push
jg
jb
mov
bound
mov
mov
push
stos
test
add
mov
lods
iret
mov
mov
les
push
hlt
fistpl
sti
mov
ljmp
add
jae
add
add
mov
rolb
mov
nop
add
add
add
sti
and
sub
imul
rcrw
mov
and
pop
sbb
popf
xchg
add
mov
aad
add
mov
push
lds
xor
pop
gs
jecxz
add
imul
jp
int3
jns
pop
mov
test
inc
leave
jmp
adc
mov
add
jb
mov
pop
cmpsl
or
mov
mov
add
mov
sahf
sbb
xchg
add
stc
lret
cltd
arpl
xchg
ja
pop
sbb
add
sub
jecxz
or
push
pop
fimuls
mov
inc
add
cmp
mov
lds
test
mov
loop
mov
mov
mov
in
mov
ljmp
inc
fs
cmc
rcrl
or
dec
inc
add
adcl
mov
xchg
test
xchg
loop
mov
add
adc
push
js
sub
mov
sub
mov
push
aad
fbstp
add
mov
mov
inc
add
add
ljmp
outsl
lods
or
mov
mov
add
jg
lods
mov
pushl
add
add
fldt
sarl
jmp
out
inc
add
movsl
xchg
fmuls
add
in
adc
add
loope
ficompl
mov
add
mov
outsl
mov
push
pop
cmc
sub
movsl
sbb
adc
mov
add
in
int3
pop
xor
adc
add
cmp
add
mov
rorl
std
cmpsl
fimuls
dec
mov
add
rolb
pop
cmp
cld
fisttps
out
icebp
mov
fcmovnu
push
adc
cld
dec
adc
loope
popl
movsl
loop
mov
add
jge
push
test
in
call
in
clc
imul
inc
push
push
jecxz
nop
add
les
mov
mov
xor
add
lret
jg
clc
int3
push
add
pushf
sbb
pusha
add
sbb
fldl
add
cld
push
add
add
lret
jns
inc
imul
add
loop
mov
nop
add
outsb
in
add
jl
jno
jo
mov
test
add
add
jbe
fldl
add
add
mov
add
stos
pop
gs
test
int3
enter
addl
xchg
pop
jno
sub
decb
jnp
sti
out
rolb
mov
les
sub
mov
out
push
mov
jg
inc
add
adc
mov
add
out
je
clc
pop
inc
pop
cmpsl
cmp
inc
xor
mov
jecxz
scas
ss
fscale
push
cli
orl
inc
add
mov
inc
cmp
add
adc
out
es
data16
insl
push
iret
fucom
icebp
mov
mov
out
bound
mov
add
shrl
sbb
lcall
add
bswap
call
mov
push
add
add
aad
fmul
pop
dec
mov
mov
mov
ret
xchg
mov
data16
sbb
das
lds
cmp
mov
int3
cmp
lock
es
add
add
mov
cmp
mov
and
or
pusha
add
mov
cld
push
pushf
push
add
adc
sbb
mov
add
add
mov
out
mov
mov
das
inc
mov
mov
loope
or
into
in
stos
gs
loopne
mov
mov
movsb
cmp
insl
push
add
xchg
jno
inc
inc
push
sub
mov
shll
mov
out
mov
dec
ljmp
cmp
in
pop
test
pop
xor
mov
in
xor
push
mov
xlat
les
pop
pop
addr16
mov
mov
int3
movsb
xchg
sub
daa
pushf
mov
jmp
jl
adc
add
es
rolb
popf
outsb
push
imulb
out
adc
add
sahf
and
or
cli
ss
push
mov
mov
mov
pusha
add
dec
cmpsl
push
mov
in
push
out
push
scas
pop
sbb
movsb
addb
and
mov
mov
into
mov
mov
rcrl
rolb
aas
push
adc
mov
add
mov
outsl
xor
xor
mov
xor
mov
cltd
ss
pop
cltd
or
xor
mov
add
mov
fst
pop
iret
sbb
inc
add
outsl
xlat
outsl
imul
add
jle
test
outsb
out
or
jle
mov
cmp
mov
mov
add
mov
js
add
je
mov
add
add
mov
adc
call
sub
mov
push
out
lods
rorl
push
and
mov
cs
outsb
lea
mov
arpl
push
xor
fsubr
pop
cmp
jl
outsb
aad
stc
cmc
lea
mov
xchg
jbe
xlat
pop
push
add
mov
fcomip
fmuls
jbe
into
divb
add
dec
stos
add
add
mov
xchg
push
ss
sbb
in
les
stc
fdivl
add
jecxz
add
mov
mov
add
mov
jecxz
xchg
testl
inc
add
ss
add
js
clc
add
dec
mov
mov
push
pop
decb
add
mov
jno
arpl
clc
pop
imul
adc
mov
mov
mov
mov
or
imul
mov
leave
cmc
fdivr
cmpsl
cmpsl
ffree
sbb
push
jg
sbb
call
dec
and
pusha
add
nop
add
inc
jg
add
cmp
cmp
ret
mov
push
sub
addb
dec
pop
and
sbb
nop
add
lcall
and
inc
lahf
add
xlat
xchg
rolb
dec
mov
and
mov
int3
xchg
dec
icebp
test
xor
rorl
mov
mov
repz
jecxz
dec
sti
in
stc
repz
or
clc
lahf
pop
and
shll
addb
icebp
inc
ret
xor
sbb
mov
cmpsl
jbe
jae
repz
nop
add
mov
aam
fldcw
add
add
mov
add
push
jns
addb
inc
inc
add
sbb
cmc
rolb
mov
clc
lret
jecxz
jb
mov
ja
ljmp
mov
mov
push
mov
mov
mov
mov
adc
xchg
add
mov
insb
enter
mov
adc
add
stc
mov
mov
jns
sbb
pop
cmpsl
mov
xchg
pushf
or
insb
sar
add
mov
dec
gs
and
mov
jmp
dec
test
dec
adc
xor
xorl
lods
scas
jp
icebp
mov
mov
and
mov
mov
fs
add
or
testl
push
mov
push
inc
add
inc
xchg
scas
jbe
mov
mov
add
or
test
enter
push
lret
inc
lods
int3
inc
add
add
cltd
mov
int3
bound
mov
leave
movsb
insl
sbb
add
mov
jo
mov
add
jg
xchg
mov
pop
push
loop
mov
add
mov
xchg
lahf
notl
jb
mov
arpl
in
popa
stos
xchg
sbb
aas
pusha
add
pusha
add
inc
fimull
and
xchg
mov
out
stc
push
inc
loope
xor
add
jl
add
in
push
xor
mov
sbb
xchg
add
ljmp
xor
add
mov
add
dec
icebp
fisubrs
mov
mov
xchg
cmpsb
mov
xlat
or
stos
cld
pop
adc
rolb
add
inc
call
pop
adc
dec
scas
mov
pushf
sub
das
jecxz
sahf
sub
mov
push
add
add
add
jae
cli
adcl
shll
mov
xor
mov
mov
bound
mov
pop
fimull
lcall
scas
cli
stos
mov
pop
fcomip
adc
popl
add
pop
cmp
jge
add
mov
fwait
repnz
cld
repnz
mov
test
gs
add
adc
mov
fsubs
mov
mov
add
add
add
jecxz,pn
orl
add
xor
mov
les
xchg
cmc
add
mov
outsl
xchg
fdivl
add
jecxz
inc
add
aam
add
cmpsl
jbe
idiv
sahf
push
lret
mov
jns
add
addr16
or
jmp
test
sti
aaa
pop
or
jge
insl
clc
stos
sub
dec
cmpl
pop
test
push
add
mov
add
fwait
clc
into
jg
adc
xchg
add
lods
outsl
xor
mov
inc
fwait
pop
add
xor
rcll
pop
bound
mov
bound
mov
jl
fiadds
int3
fldt
mov
ret
dec
fnsave
mov
aad
add
add
push
outsl
push
add
xchg
add
addr16
and
mov
sti
stos
cmp
out
mov
add
inc
xchg
and
cmp
decl
mov
jne
test
mov
xchg
loopne
mov
add
aaa
push
stc
repz
sahf
int
sbb
data16
lods
pushf
pusha
add
add
cwtl
dec
rolb
inc
add
ljmp
xchg
sbb
data16
ds
mov
pop
inc
js
xchg
out
cmpsl
sbb
aaa
xchg
dec
out
std
push
sub
inc
pop
test
dec
mov
add
sarl
add
push
mov
push
cli
xchg
sbb
cltd
add
mov
add
jmp
add
lock
cmpsb
push
dec
in
inc
es
push
jns
push
add
add
add
mov
jae
jg
pushf
dec
pop
jne
scas
ja
sti
fsubl
mov
in
cld
mov
leave
mov
movsl
or
and
rolb
mov
and
add
lea
lret
add
loop
mov
cmp
add
mov
sbb
pop
push
lock
add
cmp
call
imul
xchg
pop
push
add
repnz
movsb
std
xchg
mov
mov
cmp
and
mov
fsubl
jo
mov
ljmp
stc
cli
stc
mov
arpl
lds
lods
or
sbb
add
add
sub
fs
jl
int3
movsl
add
and
pop
jge
das
inc
add
mov
mov
adc
cmp
mov
aaa
inc
and
mov
add
ja
mov
mov
pop
xor
mov
gs
cmp
dec
int
dec
xlat
js
jne
rcrl
add
test
into
ret
out
popa
lcall
hlt
cmp
pushf
sub
scas
nop
add
cmp
and
rcrl
push
xor
mov
add
sti
in
mov
insb
pop
bound
mov
and
mov
mov
neg
out
add
xchg
add
and
mov
pop
and
mov
insl
inc
cmpsb
cmc
or
int3
test
loope
shlw
rolb
mov
add
outsb
bound
mov
dec
inc
add
mov
pop
add
pop
sub
idivb
orl
call
in
sbb
test
adc
sbb
inc
sahf
ja
imul
add
stc
xchg
mov
iret
inc
add
jecxz
jl
sub
cmpsl
dec
sbb
add
pop
imull
rolb
mov
aad
sub
mov
mov
ja
lods
divb
add
jp
sub
ja
lret
mov
jecxz
adc
jp
mov
bound
mov
jo
mov
dec
aas
cs
xor
push
repnz
in
add
or
out
xchg
add
test
mov
mov
mov
ss
dec
test
jg
pop
xor
mov
test
ret
mov
mov
and
mov
add
add
or
mov
push
cwtl
cmp
adc
cmp
mov
stc
mov
imul
insb
popf
push
fldl
add
xchg
sbb
sub
or
mov
push
iret
push
int
shr
loope
movl
mov
clc
scas
in
ljmp
sbb
mov
inc
dec
adc
cli
fnstcw
pusha
add
mov
mov
add
and
insb
sub
pop
lods
out
out
add
mov
js
add
mov
pop
inc
inc
add
aas
test
rolb
mov
sub
scas
push
add
in
test
xor
dec
xchg
add
xchg
es
mov
rolb
mov
add
add
add
jle
ds
or
add
mov
ss
cltd
mov
inc
sub
dec
dec
hlt
rcll
in
sbb
dec
inc
and
add
fcmovnu
popl
rcrl
mov
ljmp
xchg
or
inc
lret
call
add
pop
mov
mov
mov
pop
jle
push
cmp
add
push
mov
add
setae
add
add
in
or
loop
mov
leave
push
or
adc
sub
add
div
mov
sti
xor
mov
jle
mov
mov
out
das
jge
sub
mov
add
and
mov
mov
mov
rolb
mov
scas
in
dec
pop
inc
or
addb
xlat
pop
mov
fildll
mov
mov
mov
mov
test
inc
scas
mov
mov
mov
add
and
mov
add
test
jae
ljmp
call
mov
dec
or
adc
out
out
adc
adc
mov
jge
sahf
xor
push
push
xor
mov
mov
jle
repnz
vpslld
mov
xchg
cmpsb
mov
mov
xor
mov
jmp
or
leave
add
add
push
add
addr16
es
add
mov
fists
scas
sbb
mov
inc
addb
cmp
push
xchg
daa
adc
mov
and
out
jp
add
add
xor
jg
sti
fcomip
out
iret
and
and
mov
pop
mov
test
pavgb
mov
in
leave
sbb
dec
cmpsb
cmp
jecxz
popa
adc
mov
jecxz
add
xchg
add
or
ds
repnz
dec
addr16
push
je
inc
cmp
mov
mov
pop
jg
mov
add
xchg
add
add
mov
adc
gs
test
mov
add
mov
xor
push
xchg
add
movsl
and
add
add
mov
push
add
jle
fadds
add
dec
adcl
stos
mov
jmp
std
call
lods
jb
mov
cmc
cmovne
jne
mov
fwait
sti
xchg
pop
add
rolb
mov
lahf
dec
mov
add
xchg
ror
mov
add
shrl
mov
mov
fs
rolb
mov
add
rolb
add
mov
mov
rolb
push
fnstsw
lds
inc
xor
add
mov
pop
pushf
jns
add
cmc
xchg
aam
sub
or
leave
sbb
push
add
add
add
add
xchg
cmpsb
add
mov
add
leave
cmp
in
add
push
mov
inc
cmpsl
mov
mov
out
adc
mov
push
sbb
and
mov
mov
add
in
out
add
add
adc
mov
mov
mov
mov
fists
push
add
xor
mov
xlat
outsb
sub
xchg
rcrl
ret
and
cmp
mov
xor
mov
jp
xchg
cmpsb
mov
dec
imul
push
jo
mov
jnp
in
mov
add
inc
xor
mov
xor
mov
arpl
fisubrl
add
out
repnz
add
dec
out
les
cli
imul
andl
gs
inc
add
addr16
and
mov
and
sahf
xchg
pop
mov
pushf
cmp
add
aad
iret
mov
mov
repnz
mov
clc
rolb
mov
or
fisttpl
add
add
and
mov
imul
addr16
loop
mov
jg
add
mov
pop
mov
mov
add
push
sub
pop
mov
cltd
leave
mov
mov
sub
lret
clts
das
movsl
mov
jbe
icebp
lret
add
lahf
hlt
notb
fcomi
add
push
add
mov
mov
jmp
psrad
mov
adc
mov
mov
addb
sbb
repnz
push
add
jmp
mov
loope
push
xchg
out
jmp
xor
add
add
xchg
xchg
into
stos
aam
pop
dec
dec
add
add
test
add
mov
popf
pop
mov
jmp
mov
rolb
mov
mov
and
add
dec
inc
inc
add
mov
push
movsb
cli
pop
pop
push
pop
pop
andl
scas
xchg
and
add
lahf
push
outsb
rolb
mov
cmpsb
jl
and
hlt
mov
mov
add
sti
push
add
jge
fwait
fs
dec
enter
mov
lcall
into
mov
imul
in
ja
adcl
sub
fdivrp
adc
stos
xchg
lcall
outsl
mov
test
pop
popa
or
sbb
mov
ret
movsl
into
ljmp
xor
mov
sbb
add
fstps
rolb
mov
push
popa
mov
enter
mov
ret
xor
mov
push
mov
mov
xorl
pop
leave
jmp
into
mov
aam
lock
adc
test
add
add
mov
adc
mov
imul
push
insb
lret
in
inc
lods
xor
nop
add
add
xor
mov
popf
adc
ds
and
add
mov
pusha
add
pop
mov
lods
shll
push
das
add
dec
inc
bound
mov
or
negl
popa
add
jae
add
int
and
shrl
scas
and
repnz
mov
add
xor
mov
add
rolb
mov
scas
cmpl
cmpl
jne
pop
sbb
adc
ss
aad
or
clc
xchg
pop
repnz
add
mov
lahf
pop
mov
rolb
sbb
dec
sbb
cmc
filds
loop
mov
add
std
rolb
mov
jb
mov
fs
add
xchg
outsb
dec
xor
fimuls
cwtl
jmp
dec
hlt
es
mov
lods
imul
push
fistps
addl
inc
add
add
outsb
add
mov
push
xor
into
xor
adc
mov
bound
mov
call
subl
and
andl
aam
jecxz
push
outsb
inc
add
add
jle
add
cmp
cmp
xor
mov
xchg
add
push
and
lret
out
lea
rolb
dec
out
je
fistl
add
mov
jbe
inc
pop
int3
insb
sbb
loopne
mov
clc
sbb
push
mov
push
mov
add
mov
sbb
std
fidivrs
adc
inc
add
mov
dec
xchg
adcl
add
add
out
pop
stc
imul
outsl
push
mov
cld
adc
lock
or
add
mov
mov
cld
and
enter
iret
dec
je
imul
dec
fiadds
ficoms
add
sub
ret
clc
inc
ljmp
add
add
pop
sti
mov
dec
mov
mov
and
mov
mov
sub
mov
mov
adc
mov
add
sub
in
xchg
sbb
add
shrl
adc
ljmp
mov
dec
pop
add
xchg
test
add
add
add
mov
mov
mov
pushf
repnz
sti
add
mov
mov
outsb
dec
cmp
jp
imull
mov
mov
push
xchg
loopne
mov
js
sub
dec
ljmp
xor
mov
dec
stc
sub
push
addb
mov
add
pop
mov
es
mov
fisttpl
mov
add
leave
and
mov
out
ja
add
mov
iret
leave
repz
mov
xor
mov
add
xor
mov
mov
cmp
add
add
stos
inc
add
sti
cmc
fstpl
sbb
mov
jle
cmp
std
mov
mov
icebp
call
pushf
shll
jecxz
pop
mov
dec
cwtl
pop
ljmp
nop
add
add
test
fisubs
mov
adc
mov
hlt
sub
mov
cmp
lods
fldenv
adc
lret
lahf
jl
sub
xchg
insb
mov
add
mov
pop
dec
push
jbe
xchg
daa
xchg
add
inc
add
out
daa
stos
pusha
add
repnz
cmp
adc
jle
addr16
lret
leave
xor
mov
ret
mov
cmpsl
sbb
fsubs
xor
dec
push
cli
cmp
mov
cmc
call
push
add
in
sbb
mov
mov
cltd
xor
mov
add
lea
push
int3
mov
nop
add
adc
mov
mov
xor
mov
mov
add
lods
sahf
mov
and
mov
add
cltd
cmp
call
shrl
sbb
test
dec
cltd
inc
jle
cwtl
mov
dec
sbb
rolb
mov
mov
mov
xor
mov
jecxz
jne
jno
push
mov
and
addb
fdivrp
xchg
mov
rolb
mov
idivl
aam
jae
add
mov
add
popa
loop
mov
pop
out
pusha
add
leave
sbb
out
push
jg
loop
mov
scas
sti
sub
clc
pop
fs
xchg
inc
jo
mov
add
mov
or
addb
lea
and
jno
xor
popf
js
add
mov
test
jmp
sbb
stc
mov
mov
jg
mov
mov
add
push
jmp
stos
out
add
cli
sub
ljmp
out
pop
jge
bound
mov
add
outsl
adc
push
jnp
pop
jne
add
pop
fs
out
add
mov
lock
inc
push
jle
add
mov
fistl
add
adc
mov
out
xor
add
mov
jnp
adc
fisubl
add
mov
sbb
stc
cmp
mov
dec
mov
lcall
rolb
mov
fnstcw
cmpsl
mov
movsl
stc
lods
push
add
cmp
or
rcl
jno,pn
sbbl
in
dec
sti
test
or
test
lahf
push
add
imul
rolb
mov
decl
psubusb
mov
call
in
cmp
andl
stc
cmp
imul
mov
xor
dec
push
xchg
push
jl
inc
bound
mov
sbb
adc
mov
add
sbb
test
dec
mov
xchg
stc
mov
add
mov
hlt
rcl
loopne
mov
mov
fwait
push
and
mov
into
aaa
dec
fiaddl
inc
add
ret
es
mov
add
mov
lcall
clc
rolb
mov
push
add
inc
cwtl
xchg
cmp
add
mov
mov
add
pop
scas
std
movsl
mov
adc
mov
xchg
sub
mov
inc
cwtl
insl
jmp
popf
lods
repz
add
mov
and
mov
int3
lods
cmpsl
dec
sub
dec
and
lahf
retw
js
dec
cwtl
mov
jle
in
push
stc
sbb
xchg
call
lock
fcompl
scas
pop
out
mov
pop
cltd
pop
stc
imul
loope
fcomip
or
popa
fwait
pop
popf
or
cmp
sub
sbb
add
mov
mov
rolb
add
fwait
inc
and
xchg
ljmp
ljmp
mov
jl
sbb
test
push
cmp
inc
lret
addr16
mov
jge
and
add
mov
add
sub
pop
lret
testl
rolb
mov
inc
add
out
arpl
ljmp
inc
mov
test
push
add
add
lcall
in
ret
cmp
rcr
mov
mov
pop
sbb
mov
sbb
aam
jl
push
aaa
in
es
xorl
jmp
ss
stc
hlt
fisubs
add
stos
test
mov
les
add
mov
mov
je
add
in
sbb
fdecstp
xchg
jnp
sbb
in
pushf
ljmp
mov
ficomps
add
clc
pop
sbb
sbb
add
mov
pop
in
add
push
add
loope
stos
mov
frstpm(287
cltd
jmp
add
sbb
sbb
add
inc
imull
addb
lods
mov
pop
rolb
mov
or
das
or
scas
test
mov
add
mov
in
xor
mov
add
sahf
xchg
mov
mov
mov
sub
xchg
and
or
add
mov
test
jle
add
mov
ja
add
xor
aas
inc
push
call
test
add
mov
or
add
fsub
jae
xor
adc
dec
ss
fdivs
add
lods
sub
add
pop
inc
bound
mov
lahf
sahf
add
jp
fcmovne
cmpsb
les
imul
add
sti
pop
scas
loop
mov
xchg
add
arpl
and
outsb
dec
jp
add
inc
call
testb
fnstenv
add
cmp
add
mov
add
jle
stos
sbb
add
outsb
inc
pushf
insb
les
cmp
add
mov
add
pop
pushf
gs
lret
mov
mov
or
mov
xrelease
inc
and
das
int
add
add
dec
js
jne
cmpsb
xor
sub
pop
jae
mov
xchg
pop
add
mov
sbb
sub
xchg
lds
jne
in
dec
pop
xor
add
mov
add
imul
jle
dec
out
addb
dec
push
sahf
int3
les
xchg
aad
lcall
mov
xor
mov
les
clc
and
mov
cmp
pop
popf
and
stos
inc
sbb
xchg
fidivl
lock
add
rolb
mov
xchg
in
add
mov
xchg
fnstenv
cvtpi2ps
sbb
out
sbbl
in
pusha
add
jecxz
add
sysret
mov
imul
and
mov
and
pop
mov
dec
jle
pusha
add
push
addb
sbbl
push
stos
ljmp
sbb
mov
mov
mov
negl
lock
dec
xchg
cmp
cmp
add
add
add
inc
add
add
mov
mov
mov
adc
dec
fisubrs
add
add
mov
test
inc
mov
sbb
xchg
push
lret
push
cmp
rolb
inc
add
sub
sti
sahf
cmp
push
loopne
mov
mov
mov
xchg
push
sbb
inc
pusha
add
add
int3
pusha
add
add
mov
lret
lahf
mov
fwait
push
inc
sub
sub
xlat
xor
int
outsl
in
mov
repz
sbb
xor
mov
and
out
js
pop
push
add
divb
add
out
xor
mov
add
add
mov
out
add
imul
out
arpl
mov
mov
cmp
add
push
mov
mov
aaa
es
inc
or
add
push
aaa
push
dec
xor
mov
xchg
mov
insb
fmuls
add
addr16
mov
repz
add
sbb
in
cmp
clc
loope
andl
fdivrl
add
js
xor
mov
mov
mov
repz
cmp
iret
loopne
mov
inc
dec
fsub
test
fisubrs
addb
push
jecxz
cmpsw
and
add
mov
mov
mov
cmc
xchg
xor
mov
mov
push
dec
jae
in
stc
inc
nop
add
mov
cli
rolb
mov
lea
cmpsl
xor
sbbl
jns
add
xor
mov
xchg
lret
inc
sub
and
pop
adc
lahf
pop
scas
sbb
mov
add
push
add
cmovb
mov
adc
mov
outsb
movsb
xchg
add
push
mov
add
xor
mov
loope
movsb
xor
sbb
add
sub
mov
in
imul
lods
jnp
into
fsubrl
pop
pop
imul
movsl
fwait
aam
xor
cmp
jecxz
hlt
add
icebp
sbb
mov
into
int3
lock
xchg
inc
add
je
mov
cmp
stos
rolb
mov
push
int
stos
xlat
data16
lar
mov
loope
jbe
xchg
inc
mov
in
ret
lods
les
mov
insb
daa
test
addr16
repz
jae
add
mov
add
jae
das
pushf
addb
outsb
push
inc
shll
notb
add
gs
andl
into
fcmovne
mov
ds
or
lods
call
mov
sbb
mov
adc
add
fcomps
ret
dec
sbb
cmpsl
push
mov
mov
mov
leave
push
add
push
les
mov
rolb
mov
dec
sbb
xchg
dec
pop
xor
mov
adc
mov
add
mov
notl
cmp
hlt
stc
xchg
add
dec
add
mov
daa
int
add
popa
inc
add
lea
lahf
xor
xor
mov
fwait
aam
pop
and
fldenv
pop
or
sub
repz
mov
mov
ds
scas
xor
test
adc
mov
cmp
shll
add
push
add
mov
lods
loope
inc
lahf
icebp
addr16
pop
or
add
daa
popf
ja
pop
ss
and
sub
mov
jl
inc
out
addb
clc
jmp
mov
pop
push
add
mov
add
add
cmc
pop
sbb
pop
xchg
adc
mov
xchg
ja
xor
addr16
xchg
xchg
add
jmp
inc
add
int3
imul
inc
fucomp
pop
outsb
addr16
adc
mov
add
mov
push
sbb
out
pushf
cmp
out
mov
popa
sbb
decb
jo
mov
cmp
add
pusha
add
mov
jae
arpl
std
xlat
sahf
push
mov
push
nop
add
sbb
mov
mov
and
iret
inc
pop
xchg
mov
divl
add
mov
add
mov
mov
test
jne
bound
mov
jns
addl
mov
jbe
imul
cmp
mov
add
mov
or
sub
jp
jnp
incb
push
lret
clc
loop
mov
and
mov
hlt
pop
in
rolb
mov
inc
add
cli
sti
mov
mov
add
xor
pusha
add
add
push
mov
data16
mov
bound
mov
add
add
mov
sub
mov
mov
stos
pop
push
jne
inc
mov
std
cmp
loope
mov
or
mov
mov
es
movsl
dec
mov
xor
gs
repnz
stos
jbe,pt
test
xchg
bound
mov
das
loopne
mov
add
sub
pushf
mov
out
pop
leave
inc
dec
test
xor
add
pop
jle
add
dec
and
aas
ret
xor
loop
mov
push
lods
cmp
test
jg
ds
jae
sbb
cs
adc
mov
inc
add
mov
jae
daa
cmp
pop
rcrl
add
push
mov
orl
mov
xchg
jnp
jmp
mov
lret
pop
xchg
adc
jp
add
add
rolb
mov
sub
mov
cli
repnz
add
hlt
sub
inc
add
pop
or
movsl
fnsave
inc
and
fwait
and
adc
mov
mov
sub
rolb
xchg
xchg
mov
jnp
jo
mov
repnz
pop
jae
add
add
loope
lods
sbb
mov
pop
lea
mov
mov
into
stc
cwtl
bound
mov
pusha
add
clc
sahf
mov
mov
in
add
ja
std
mov
repnz
negl
stc
les
scas
sub
mov
add
and
cmpsl
mov
or
push
vmovhps
enter
push
sbb
mov
jns
pusha
add
popa
sub
mov
xor
mov
aam
push
mov
addb
pop
aam
add
or
add
push
out
xchg
add
cmp
repnz
adc
mov
mov
test
push
cmp
adc
add
cmp
push
push
addb
lahf
push
push
cmp
pop
adc
rolb
mov
add
cltd
cmp
dec
xor
inc
leave
addl
adc
add
mov
jns
lcall
out
jp
and
mov
stc
outsl
pop
js
icebp
repz
push
lods
ret
aas
mov
fists
mov
xchg
add
add
add
pop
ss
add
or
movsb
xchg
dec
sarl
mov
outsb
add
mov
add
pop
jecxz
add
fucomi
call
mov
adc
xchg
add
jl
mov
lcall
jns
fstl
dec
sbb
rolb
mov
movsb
xchg
dec
dec
lock
adc
mov
mov
adc
mov
push
push
dec
js
dec
ja
add
add
sub
imul
je
call
jmp
add
inc
add
jbe
mov
or
mov
add
rcll
mov
sub
xor
pop
cmp
mov
cmpsb
and
lds
and
mov
add
mov
inc
add
fbstp
mov
sub
xor
mov
jge
jp
shrl
push
nop
add
fcmovnu
addb
divl
sub
adcl
repz
add
xor
xor
mov
int3
push
add
sti
xchg
dec
push
in
divl
lods
pop
sbb
cld
fidivs
add
jmp
adc
and
sub
fsubrs
lret
pop
xchg
add
nop
add
add
mov
fwait
add
add
test
bound
mov
mov
sbb
rolb
mov
cmp
mov
in
add
das
call
pushl
in
jnp
stos
mov
ja
sub
jbe
add
mov
and
cmp
repnz
add
popf
jle
fcoml
addb
lea
jmp
jo
mov
call
rolb
mov
push
jge
or
addl
clc
les
gs
mov
mov
inc
xor
mov
cmp
add
add
lds
cmp
test
jne
por
addr16
fistps
out
dec
xchg
imul
cs
add
mov
jo
mov
and
sbb
add
add
sub
flds
jb,pt
mov
dec
dec
or
cltd
testl
inc
xchg
inc
xchg
pop
mov
icebp
imul
add
popa
adc
add
mov
imul
mov
rolb
sbb
std
cmp
test
call
add
mov
add
mov
popf
pop
in
loop
mov
push
imul
insl
test
add
mov
add
fiaddl
notrack
sbb
inc
mov
push
mov
jg
add
rol
mov
jnp
aad
add
mov
add
aam
cltd
lret
cmp
adc
add
mov
cmp
loop
mov
out
popa
dec
pop
lcall
jmp
pop
or
add
add
dec
mov
mov
test
add
mov
mov
xchg
imul
out
fs
xchg
test
jae
or
jne
test
add
mov
xchg
jge
add
imul
pop
aas
jbe
orl
sbbl
or
sub
cli
sub
push
cmpsb
pop
or
adc
dec
stos
stos
in
adc
xchg
out
in
sbb
push
sbb
sub
add
add
outsb
mov
ja
idivl
jbe
or
dec
pop
cmp
jle
cmp
loopne
mov
add
mov
mov
jbe
add
xor
mov
pop
xor
add
add
xchg
mov
adc
pop
mov
push
roll
rolb
xor
fldenv
add
add
sbb
scas
sbb
mov
stos
insb
adc
jbe
push
test
add
mov
lcall
jnp
add
test
mov
mov
addb
mov
in
sub
add
sbb
cmp
mov
add
mov
into
inc
jecxz
push
divl
ret
cmc
loop
mov
loope
add
mov
sbb
mov
loope
and
in
dec
mov
push
xor
inc
xor
mov
mov
mov
sub
in
inc
add
movsb
mov
stos
or
xchg
add
scas
jns
add
push
add
jle
jl
popa
out
fs
jge
mov
mov
data16
add
incl
stos
sbb
jae
in
rep
jl
sub
mov
mov
mov
push
and
cmpsl
lret
cs
push
mov
clc
stos
sub
ds
imul
pop
lret
cmp
or
mov
dec
pop
seto
mov
xor
mov
mov
mov
mov
sbb
add
addb
pop
dec
pop
addb
sbb
or
add
add
