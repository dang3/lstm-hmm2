sbb
dec
call
testl
aad
cmp
xchg
inc
jle
cli
add
mov
cmp
inc
or
nop
add
add
ss
push
add
mov
mov
add
cmp
add
mov
rcr
mov
and
mov
add
add
cmp
xchg
add
pop
fucomp
dec
testb
mov
mov
shl
jne
daa
mov
pushf
mov
dec
jmp
ret
pop
cmpsl
inc
out
sbb
jbe
lds
add
mov
adc
mov
stc
scas
xchg
and
mov
add
xchg
dec
push
add
mov
ror
sub
fnsave
mov
add
push
add
jb
mov
jl
mov
repnz
mov
add
mov
mov
xor
xor
xchg
add
mov
sub
push
push
push
push
push
push
cld
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
ja
cmp
xchg
sbb
mov
dec
push
mov
adc
mov
mov
mov
mov
add
jp
add
add
mov
xor
inc
inc
jne
jb
mov
and
push
test
leave
pop
or
add
jb,pn
mov
dec
inc
movsl
lock
mov
jp
dec
jne
pop
es
cmp
push
int3
insl
bound
mov
mov
mov
test
mov
lahf
fisttpl
mov
mov
out
fmuls
cmp
jns
lcall
mov
imulb
hlt
test
lock
je
scas
jb
inc
test
add
mov
test
clc
imul
dec
and
xor
add
push
add
sbb
negl
es
out
mov
mov
cs
dec
leave
mov
loopne
mov
negb
arpl
push
out
insl
inc
add
mov
mov
arpl
outsl
or
movsb
dec
loop
mov
add
popa
outsl
hlt
sbb
lods
push
cmc
add
scas
lahf
clc
bound
mov
insl
popa
ss
inc
dec
call
mov
jb
mov
add
xchg
loope
sub
rorl
push
add
mov
aad
xor
mov
mov
add
add
xor
mov
xor
inc
bound
mov
xchg
adc
push
jb
mov
shl
xchg
inc
push
mov
sub
xchg
push
icebp
dec
dec
push
add
mov
cmp
add
mov
hlt
mov
out
lcall
add
push
pop
mov
jmp
pusha
add
xor
pop
lcall
adc
mov
mov
ds
xor
add
mov
pop
jg
add
sub
xchg
push
add
xchg
call
insb
mov
and
add
jo
mov
add
int3
sub
add
test
jmp
imul
add
mov
mov
lock
pop
xchg
outsl
hlt
popfw
mov
mov
movsl
add
add
arpl
add
in
pop
rolb
mov
cld
sub
mov
das
jle
mov
adc
mov
add
mov
xor
nop
add
mov
or
sub
cmp
cltd
jb
mov
mov
loopne
mov
mov
adc
aam
aad
xchg
lret
inc
sbb
add
add
cmc
mov
inc
loopne
mov
add
clc
add
ret
out
popa
xor
gs
int3
jg
imul
rolb
inc
testb
aas
jp
add
inc
ret
test
lahf
and
mov
xchg
add
push
add
popf
adc
aam
data16
push
adc
mov
movsb
adc
mov
movsl
cmp
insl
loop
mov
pop
rolb
mov
cmpsl
mov
jg
mov
push
sub
add
call
int3
ret
cmc
clc
std
jmp
add
add
xchg
pushf
sbb
push
jne
popa
jecxz
ja
add
mov
push
cmpsb
mov
cwtl
pop
in
push
push
stos
xchg
sbb
sbb
xor
aad
add
movsl
fildll
enter
sub
fsub
ret
lahf
or
mov
add
jne
add
add
sub
xchg
jo
mov
lock
add
addb
push
jge
mov
add
or
jne
icebp
sbb
xchg
mov
mov
mov
out
add
lret
pop
mov
mov
mov
add
lret
clc
xchg
pop
xchg
add
cltd
aaa
and
mov
pop
inc
das
outsl
and
mov
mov
dec
dec
movsb
xchg
sub
fnstenv
rolb
jo
mov
lods
scas
ljmp
xor
add
mov
int3
dec
icebp
adc
adc
lods
into
pop
inc
or
pushf
and
mov
add
add
aaa
jmp
or
cld
inc
add
add
fcoml
add
cwtl
xor
lds
inc
add
xchg
jge
pop
imul
movsb
mov
mov
les
add
jnp
sub
add
or
mov
xor
gs
cmp
jns
add
push
sub
mov
mov
xchg
jle
aam
jns
repnz
mov
push
mov
icebp
repz
repnz
adc
loop
mov
sub
push
add
add
mov
hlt
in
aam
cmc
cmp
sbb
dec
addr16
mov
cld
mov
mov
out
addr16
int3
lods
sub
stc
movsb
cld
cmp
nop
add
lea
fwait
aas
xor
mov
cmp
adc
mov
shll
pop
mov
arpl
add
out
mov
addb
sub
adcl
mov
mov
jno
mov
mov
add
cli
sahf
or
jmp
bound
mov
jecxz
hlt
mov
testl
mov
mov
push
jae
add
inc
fld
cwtl
mov
mov
push
cmp
out
ds
scas
jp
loopne
mov
mov
jge
or
lahf
aas
and
mov
rolb
jne
dec
into
int
sbb
mov
mov
rolb
mov
mov
test
in
and
movsb
pusha
add
inc
les
xchg
xor
mov
adc
jns
cld
pop
adc
fdivl
xchg
shll
mov
imul
push
add
mov
shll
rolb
jae
std
jmp
inc
xchg
mov
loop
mov
pop
leave
dec
xchg
add
xchg
stc
movsl
adc
jecxz
mov
mov
add
aad
jns
sbb
scas
stc
jne
dec
dec
add
mov
push
and
mov
sbb
jbe
dec
stos
insl
cwtl
imul
push
mov
pandn
push
rolb
push
inc
mov
mov
add
add
int
mov
ja
or
test
add
mov
cmpsl
pop
test
jae
lret
not
sub
and
addb
cmp
imul
sbb
dec
lock
xchg
sahf
pop
scas
mov
std
fstp
bound
mov
outsl
sahf
scas
and
mov
push
adc
add
imul
add
pop
dec
push
sahf
mov
sarl
jmp
es
sub
inc
xor
inc
add
hlt
or
mov
jge
mov
aam
lret
sbb
add
pop
lahf
repz
add
ficomps
mov
jo
mov
rolb
test
ss
pop
push
or
sti
outsl
inc
outsl
push
xor
mov
push
add
outsl
inc
add
sbb
jge
mov
jno
xor
mov
xchg
or
mov
xor
fists
push
movsl
pop
push
pcmpeqd
mov
mov
mov
mov
rolb
mov
jbe
lea
adc
jle
ret
imul
jmp
jp
mov
leave
mov
jno
out
jbe
add
add
inc
mov
inc
dec
xchg
xor
mov
fdivrs
cmpl
and
add
adc
add
scas
fs
loopne
mov
mov
lret
adc
mov
push
jne
faddl
add
lods
data16
xor
and
sbb
rorl
nop
add
pop
shll
jne
into
rolb
mov
enter
roll
add
xor
mov
cmp
loope
dec
out
add
cmpsl
jae
xchg
std
das
mov
xlat
dec
xor
mov
and
inc
jb
mov
in
int3
sub
das
je
bound
mov
push
lock
popa
xchg
mov
jle
dec
and
mov
add
push
das
insl
repz
gs
out
lcall
jnp
and
or
out
mov
mov
popa
cmpsl
push
icebp
test
mov
movsb
xchg
mov
bound
mov
push
pop
mov
mov
add
mov
adc
push
sub
pop
xchg
add
xchg
lcall
xor
in
movsb
add
mov
icebp
nop
add
inc
push
ror
or
add
and
and
mov
xchg
loopne
mov
pop
jmp
mov
mov
add
and
lcall
mov
mov
pop
data16
mov
or
stos
fstpl
adc
mov
add
pop
pop
pop
pop
popf
addb
fsubs
cmp
mov
add
mov
inc
add
rcr
movsb
js
mov
push
dec
mov
mov
cmp
xchg
mov
mov
add
addb
lcall
lods
add
sub
pop
sub
pushl
add
movsb
mov
pop
lahf
push
inc
int
add
lock
xchg
outsb
mov
mov
fdiv
lret
add
mov
fidivl
les
mov
and
dec
push
mov
lock
mov
repnz
add
stos
sbb
jns
jae
add
loopne
mov
mov
mov
pop
pop
inc
add
adc
xor
les
jb
mov
add
mov
enter
outsl
cmp
mov
xor
leave
add
xchg
add
lret
adc
mov
sbb
stos
insb
add
mov
add
sbb
mov
add
loope
cltd
addb
test
iret
scas
fimull
aad
ljmp
mov
add
sbb
mov
add
add
xchg
add
mov
or
insb
pop
jo
mov
adc
pop
pop
gs
mov
sub
xchg
mov
outsb
mov
mov
sbb
stc
flds
mov
repz
xorl
inc
add
add
mov
jecxz
stos
mov
xchg
repz
sub
outsl
push
add
insl
cs
sbb
movsl
xor
mov
sub
sub
jg
lahf
hlt
dec
jmp
rorl
outsb
stos
out
lods
inc
pop
insb
cmp
adc
and
mov
mov
movsl
sub
cmpsb
adc
loopne
mov
jmp
mov
add
mov
cmc
aas
add
mov
add
jo
mov
add
add
fmull
pop
cmp
mov
add
jp
xor
pop
pushl
int3
arpl
lret
mov
daa
je
add
mov
shr
or
cmp
inc
add
lock
out
add
add
add
or
mov
mov
jno
add
push
xor
add
xchg
ret
mov
cmp
mov
jno
add
pop
push
add
jmp
jg
scas
aas
sub
lods
inc
jmp
lcall
sti
addb
cltd
jg
push
inc
sub
adc
mov
xchg
mov
or
mov
in
daa
outsl
aas
push
out
in
xchg
aad
add
jb
mov
fcmovb
add
sbb
pop
sub
sbb
sahf
or
inc
add
cmc
lcall
mov
cmp
inc
mov
adc
pop
rolb
mov
cmp
add
mov
and
mov
mov
scas
je
add
test
mov
mov
icebp
jmp
cs
push
js
mov
fisubs
stc
adc
add
mov
cmpsl
jp
leave
lock
addb
es
inc
dec
sbb
xchg
daa
mov
mov
cmp
test
add
mov
mov
xor
mov
sti
lods
mov
add
mov
mov
add
sub
xchg
pop
or
jle
add
es
jnp
cmp
call
jmp
mov
sbb
add
insb
andl
lods
xchg
addr16
sub
xor
mov
add
dec
rolb
mov
pop
rolb
dec
push
mov
mov
sbb
mov
push
jge
add
and
mov
add
jmp
stos
jae
repnz
add
mov
jp
add
pop
nop
add
dec
outsl
scas
loopne
mov
movsl
int3
cmp
cltd
mov
mov
imul
mov
inc
add
jl
outsb
jbe
test
shrl
add
xor
mov
add
sbb
xchg
add
dec
mov
add
dec
push
push
add
inc
aaa
pop
popa
clc
dec
lock
add
add
cltd
nop
add
es
mov
ret
pop
lret
mov
fimuls
jecxz
add
int
pop
sarl
mov
adc
mov
push
gs
jb
mov
nop
add
int
enter
jp
jno
sbb
inc
mov
xor
stc
sbb
imul
adc
mov
mov
das
ja
mov
add
mov
je
out
out
add
mov
mov
inc
add
add
cmp
add
mov
add
arpl
fisttps
dec
push
dec
add
mov
stos
xchg
das
dec
lcall
add
pop
lret
push
add
xlat
push
jbe
xor
adc
mov
mov
mov
xchg
xchg
sub
or
cwtl
daa
imul
push
sub
sbb
mov
add
filds
sbb
add
inc
add
jmp
in
shll
adc
roll
arpl
xchg
or
insb
lods
fsubrl
out
inc
popa
cmp
mov
es
dec
lods
clc
sbb
inc
xchg
movsb
clc
add
add
pop
scas
push
aas
pop
clc
sub
and
mov
test
push
xchg
out
or
add
inc
add
add
adc
add
mov
lcall
mov
stos
imul
scas
cmc
push
aaa
les
int3
pop
cwtl
std
mov
jno
add
jbe
add
mov
mov
sti
sbbl
ljmp
pop
test
mov
das
adc
push
xlat
xor
mov
pop
movsw
jl
ja
int
enter
add
add
sub
mov
push
mov
mov
jns
inc
sarl
adc
repz
and
mov
xor
mov
mov
mov
inc
add
add
cli
jge
jmp
shll
add
mov
loopne
mov
data16
xor
and
das
test
xorl
js
mov
mov
fdivr
pop
inc
add
ret
cmpsb
mov
or
gs
test
addb
xor
mov
add
mov
js
repnz
lods
cmp
mov
add
addl
push
loop
mov
es
push
js
call
xchg
shll
mov
mov
inc
dec
popa
jecxz
ja
es
and
push
out
sbb
clc
or
add
std
stc
rorl
add
mov
imul
sbb
sbb
int3
push
jae
add
inc
outsl
jp
clc
rolb
scas
fdiv
inc
addb
in
out
pop
jb
mov
pop
and
addb
scas
push
jp
out
or
jmp
aaa
fwait
testb
out
jns
stos
dec
cld
repnz
addb
cmp
xchg
dec
scas
cli
fsubrl
jb
mov
lret
retw
popa
arpl
mov
and
mov
lret
test
out
iret
mulb
in
xchg
add
xchg
je
pop
xchg
pextrw
mov
call
mov
stc
pop
jno
push
mov
lret
enter
movsb
cld
jmp
cmp
add
imul
mov
mov
add
mov
mov
pop
pop
adc
mov
xor
mov
jno
aam
sbb
rolb
mov
sub
jo
mov
movsl
mov
arpl
add
add
lret
leave
add
add
std
dec
or
dec
int3
xor
mov
inc
ljmp
and
mov
lret
mov
push
ds
test
sahf
sbb
inc
add
jmp
lock
jbe
fdivrp
or
adc
jle
push
stos
scas
mov
lds
add
addb
jmp
pop
or
mov
mov
mov
add
leave
push
add
aad
sub
add
in
add
jb
mov
push
insb
dec
js
sub
inc
and
mov
add
push
jmp
cmpsb
int
cmp
in
or
add
mov
into
dec
out
sahf
aas
out
rorl
inc
cmp
push
fisubs
js
cmp
xchg
push
add
mov
aam
call
loope
leave
bound
mov
cmp
es
xchg
gs
mov
pop
decl
add
rolb
xor
push
xchg
pop
jl
mov
add
add
add
add
cmp
cmp
ret
mov
mov
addb
lods
inc
ss
lcall
pusha
add
loopne
mov
iret
xchg
add
adc
add
dec
roll
jl
in
gs
sbb
push
dec
stos
rolb
mov
mov
je
movsl
cld
test
sbb
adc
sub
movsl
rorl
or
pop
mov
mov
or
stc
lret
mov
jns
mov
mov
add
inc
cmp
xor
mov
bound
mov
arpl
mov
mov
mov
sub
test
hlt
out
add
int
or
mov
pop
mov
add
lds
das
mov
add
clc
cli
movsl
hlt
push
outsb
mov
mov
add
mov
stc
shll
push
popa
rcr
push
push
test
xor
loope
and
mov
jnp
mov
lret
cltd
sub
mov
mov
xor
mov
lahf
sub
pop
push
mov
pop
inc
add
mov
add
mov
add
xchg
add
add
aas
jae
add
pop
enter
mov
add
je
jmp
cmp
mov
dec
jnp
je
jge
out
cmp
mov
xchg
push
mov
mov
je
cmp
sub
add
or
imul
dec
movsl
add
mov
pusha
add
add
pop
jle
sub
scas
lds
rolb
lcall
mov
jbe
mov
or
cld
mov
add
add
cmpsl
xchg
or
ljmp
sarl
push
pop
cld
pop
pop
mov
jns
ja
popf
jge
es
ss
xchg
iret
test
mov
ds
popf
pop
fadd
cmp
jecxz,pn
shll
rolb
mov
add
mov
add
lahf
movsb
push
faddp
add
popf
out
add
test
jge
xchg
into
pop
mov
sbb
aam
insb
dec
add
bound
mov
sbb
and
ljmp
add
sbb
dec
mov
test
pop
dec
fwait
rolb
or
mov
add
push
xlat
inc
xchg
add
pusha
add
ljmp
lcall
add
add
popf
fldenv
fiadds
jne
pusha
add
mov
movsb
adc
in
adc
add
xchg
mov
fildl
xor
es
mov
lea
push
mov
and
lret
mov
popa
adc
fimull
mov
dec
flds
cmp
cmpsb
xchg
inc
mov
ja
mov
mov
loopne
mov
fcoml
mov
or
mov
mov
repnz
flds
ja
push
outsb
scas
cmp
mov
stos
pop
cwtl
sub
mov
in
pusha
add
add
add
mov
mov
adc
add
aad
jo
mov
push
cli
into
mov
stos
xchg
mov
rolb
mov
test
jl
mov
add
push
mov
sti
sbb
mov
ja
xchg
movsb
mov
adc
into
jo
mov
add
add
push
add
les
sbb
sbb
xor
adc
addb
jl
aas
xchg
adc
mov
push
out
lahf
dec
sbb
fsubrs
popf
int3
loop
mov
add
pop
cwtl
rolb
hlt
lods
gs
adc
fucompp
xchg
dec
stos
push
cmpsl
pop
mov
test
cmp
test
mov
imul
inc
jecxz
inc
bound
mov
add
xlat
jb
mov
sub
xor
mov
adc
enter
fsts
add
xor
add
jmp
dec
ss
mov
js
add
pop
pop
stos
sub
iret
mov
ret
fcoms
jecxz
ret
xchg
add
add
cltd
xor
add
adc
mov
jo
mov
jb
mov
loopne
mov
add
fimull
mov
mov
pop
popf
xchg
aam
fnstenv
add
mov
sti
cltd
inc
sbb
pusha
add
add
jb
mov
add
ss
ljmp
cmp
inc
test
add
add
and
mov
or
stos
pop
xchg
push
xchg
pop
sbb
lds
mov
or
imul
dec
in
popf
fimuls
sub
and
ja
inc
add
mov
jecxz
rolb
xlat
lret
cmp
push
jp
push
stc
inc
dec
cmp
add
cs
xchg
mov
jnp
cmc
int3
pop
adc
mov
mov
fcomi
xchg
mov
pop
and
add
or
mov
fists
xchg
push
mov
fimuls
mov
add
mov
mov
mov
sbb
pop
pop
out
mov
addr16
test
add
push
mov
enter
repz
mov
adc
add
mov
add
sbbl
lahf
xchg
cmp
rcrl
pop
in
es
add
mov
jbe
add
rcrl
dec
insl
mov
cld
sub
pop
dec
repnz
mov
add
inc
and
or
fisttps
out
pop
outsl
jle
mov
stos
arpl
fstpt
shll
aaa
aas
inc
pop
jns
mov
je
add
mov
mov
xchg
pop
mov
pop
nop
add
testb
mov
daa
lahf
inc
add
loopne
mov
mov
sbb
cmp
mov
xchg
lcall
mov
add
add
mov
cmp
addb
push
lods
lds
add
fbld
push
add
pop
pop
enter
mov
repnz
out
xchg
add
mov
cli
mov
add
ds
xor
add
imul
pop
lahf
jns
mov
mov
out
pop
jns
inc
in
hlt
aaa
push
add
inc
cld
stos
loop
mov
add
repnz
out
push
jb
mov
mov
test
ret
addb
out
dec
lds
pop
inc
cli
xchg
dec
pop
mov
push
shll
movsb
push
into
dec
and
pop
mull
sub
cmc
cltd
inc
push
insb
call
inc
add
ds
pop
push
popl
fwait
or
sub
xchg
and
cmp
into
jns
or
push
inc
add
mov
fiadds
mov
jge
mov
add
fs
or
mov
loop
mov
dec
add
mov
ljmp
jecxz
add
mov
xor
mov
call
repnz
int
add
cmp
push
daa
into
ja
js
push
xor
sahf
pop
popf
es
xor
aaa
mov
test
test
xor
add
mov
sbb
movsb
lret
cmp
push
mov
mov
mov
add
outsl
movsl
xchg
fstpt
inc
imul
mov
add
into
inc
push
inc
add
fmuls
ljmp
pop
sbb
cwtl
pop
mov
xchg
out
mov
pop
icebp
dec
push
pop
dec
pop
and
add
rcll
imul
pop
push
stos
pushf
add
mov
mov
or
mov
adc
inc
mov
mov
stos
add
xor
pop
mov
dec
sbb
jb
mov
mov
cltd
inc
add
xchg
xchg
jno
add
mov
add
mov
mov
lret
fdivp
sub
mov
insl
lods
loope
aaa
shrl
add
jl
push
or
add
cmp
movsb
sarl
punpckhwd
and
jns
ss
mov
or
add
add
add
pop
out
cli
dec
popf
jb
mov
push
xchg
jae
sub
add
add
add
push
mov
lock
sub
sub
es
scas
cld
stos
and
cmp
add
jecxz
mov
mov
and
mov
or
or
pop
add
mov
pop
popa
fisubrl
movb
mov
mov
out
rolb
mov
flds
add
das
sub
sub
xor
divb
popa
lods
mov
repz
add
xchg
add
mov
jb
mov
ret
mov
addb
mov
add
decl
jp
push
xchg
mov
inc
fs
sti
mov
add
ret
lea
roll
mov
aas
dec
daa
and
dec
int
add
testb
mov
push
negl
mov
call
jns
fxch
repz
and
fidivrl
xchg
lahf
cmpsb
dec
mov
mov
fucom
adc
add
sbb
cltd
pusha
add
mov
add
mov
ss
fwait
or
test
mov
mov
mov
sti
ljmp
pop
pop
cli
jne
add
mov
mov
ljmp
dec
xor
mov
jae
outsl
xchg
cwtl
inc
std
push
mov
inc
jo
mov
jb
mov
push
loope
add
cmp
adc
fst
jle
add
out
jb
mov
int
add
mov
roll
fidivs
add
xor
mov
jnp
add
scas
pop
jecxz
repnz
leave
adc
mov
pop
repnz
add
mov
test
daa
icebp
adc
mov
js
add
in
add
inc
fcmovnbe
and
fistpll
cmp
add
or
outsb
rolb
mov
aam
mov
push
mov
or
adc
push
push
xchg
cltd
lods
mov
xor
mov
mov
mov
testl
cld
dec
test
jnp
aas
jmp
imul
sahf
int3
jne
pop
jnp
add
jmp
add
adc
adc
mov
sbb
pop
aad
add
mov
cmc
inc
dec
push
lcall
fcomip
dec
ds
repz
mov
mov
xor
add
sbb
lock
push
test
add
mov
scas
movsl
std
cmpsl
out
test
add
jp
mov
xor
mov
test
mov
inc
addb
mov
add
sbb
xor
mov
rolb
mov
jecxz
cmpl
adc
mov
jecxz
fmul
jae
xor
sahf
clc
out
loope
roll
inc
add
pop
out
mov
aaa
xor
cld
inc
xor
mov
add
les
xor
mov
add
add
scas
mov
mov
push
mov
jmp
sahf
cmp
pop
and
mov
xchg
sahf
dec
and
mov
or
inc
add
add
inc
rcrl
in
jge
es
imull
inc
add
es
add
and
mov
jg
add
addb
jp
push
hlt
out
jb
mov
ss
jno
push
daa
mov
cmova
mov
dec
aas
cmp
repnz
mov
rcrl
nop
add
sbb
xor
outsl
pop
sub
mov
in
bound
mov
pop
in
lock
insl
cs
xchg
enter
add
ret
dec
stos
repz
lret
push
sub
icebp
pop
xchg
fiaddl
sti
ror
lea
imul
mov
mov
mov
push
push
int
add
mov
or
pop
push
add
icebp
movsb
mov
jnp
pushf
sahf
rolb
cpuid
add
into
out
outsl
shrl
std
pushf
orl
add
xor
push
jg
lods
cmp
mov
push
add
jmp
dec
jecxz
inc
add
pop
sub
aas
inc
js
jmp
mov
int
popa
test
mov
pop
fs
div
jae
dec
add
ret
in
fstpt
mov
mov
repz
jecxz
or
jae
xchg
mov
cmpsl
mov
mov
ss
push
loope
pop
xor
jno
test
mov
xor
mov
add
mov
jmp
scas
push
mov
add
add
or
mov
mov
add
leave
add
sbb
mov
rolb
mov
xchg
dec
mulb
mov
repz
add
sbb
xchg
mov
popf
sti
add
mov
mov
sub
cmc
fwait
jns
add
sbb
jg
add
cmp
add
aaa
mov
inc
je
add
incb
pop
push
icebp
mov
movaps
jmp
outsb
and
push
test
pop
aas
aam
jbe
lret
xor
mov
add
sbb
push
cmp
pop
ja
addr16
jb
mov
ljmp
inc
push
rolb
mov
addb
push
dec
shr
cmpsl
int
out
fsubrl
push
add
lock
into
or
std
in
dec
rolb
mov
gs
add
insb
rolb
movsbl
mov
push
or
dec
add
xor
mov
repz
mov
mov
xchg
test
add
mov
add
push
scas
sbb
add
add
and
scas
iret
cmpsl
cmpsb
ss
ss
mov
sub
add
stos
hlt
push
cld
push
push
dec
inc
push
sub
lods
push
fwait
das
loope
add
mov
data16
aas
and
stos
jae
jo
mov
fstpl
mov
out
dec
cld
sub
add
adcl
inc
jge
bound
mov
lods
sub
jb
mov
sarl
add
xlat
scas
pusha
add
adc
aam
addr16
stos
mov
ja
add
mov
ror
sub
add
mov
ljmp
mov
aaa
addb
jbe
push
leave
addb
or
mov
dec
cmp
addr16
mov
mov
add
push
adc
push
mov
ja
test
and
mov
mov
cmpsl
xor
mov
lahf
ret
sub
and
call
insb
imul
add
add
mov
fistpl
sub
pop
or
push
mov
add
rorl
inc
pop
je
loope
sbb
sbb
mov
cs
add
stc
cli
in
pushf
mov
arpl
push
mov
mov
add
push
popa
dec
xor
mov
idivb
mov
fistps
fnstenv
mov
mov
mov
mov
add
es
repnz
inc
adc
add
mov
in
dec
insl
enter
sub
or
add
add
out
mov
outsb
xchg
je
add
add
mov
pusha
add
add
lret
ret
into
int3
aad
arpl
jne
add
mov
or
add
add
mov
lea
mov
mov
add
in
testl
mov
mov
pop
mov
in
mov
add
adc
sbb
adc
add
mov
mov
xchg
imul
xchg
jns
xor
mov
pop
pop
push
mov
mov
pop
mov
out
in
or
lret
mov
fwait
data16
mov
cmc
mov
xor
inc
add
mov
fcomps
cmp
jno
dec
pop
stos
js
sub
lds
add
add
push
aaa
mov
xor
xchg
out
pushf
mov
in
sbb
adc
mov
fwait
add
push
cmp
push
mov
add
nop
add
add
and
out
test
add
push
leave
aas
gs
mov
and
mov
mov
cmp
mov
movsb
divb
add
mov
lret
pop
adc
mov
mov
pop
xor
ja
testb
addb
pop
or
ss
addb
xchg
mov
jmp
sub
popa
pushf
push
xor
cmp
add
mov
and
mov
in
adc
mov
sbb
mov
xor
mov
aad
jns
mov
arpl
rolb
mov
mov
test
mov
cltd
pop
imul
add
mov
mov
test
xchg
loope
outsl
call
and
mov
daa
xchg
xchg
mov
mov
inc
out
add
xchg
addr16
sub
mov
add
mov
mov
mov
mov
mov
data16
aam
xor
rolb
cmpsl
xor
add
add
movsl
std
and
lds
pop
pop
js
sbb
popl
jg
cwtl
scas
jp
mov
inc
mov
xchg
or
jl
mov
cltd
sub
mov
and
add
mov
pop
ja
jmp
mov
sbb
ret
in
dec
lods
mov
push
add
lret
jmp
add
lret
popf
push
cmp
add
mov
add
pop
sahf
lahf
xor
mov
int
aad
dec
fiadds
xchg
add
repnz
pusha
add
or
sub
lahf
add
sbb
adc
mov
adc
mov
test
mov
sbb
lahf
out
add
call
jle
add
mov
outsl
or
pushf
xor
loope
mov
aas
shl
push
lds
dec
mov
roll
xchg
ds
add
add
lds
leave
shll
xchg
dec
popf
jl
dec
mov
xchg
scas
add
mov
rolb
rolb
mov
add
addb
and
mov
test
fldl
mov
popf
in
outsl
add
mov
dec
xchg
cmp
lahf
xchg
add
mov
jne
rolb
mov
leave
pushf
sbb
repnz
mov
sbb
adc
ficoml
mov
inc
adc
mov
mov
add
sub
aad
and
imul
add
dec
inc
rolb
mov
add
subl
test
add
xchg
scas
add
mov
mov
mov
sub
add
add
loop
mov
fsubp
add
sbb
add
std
adc
mov
bound
mov
test
or
push
ja
sbb
mov
movsb
dec
mov
ret
cmp
enter
in
in
adc
mov
lock
popa
add
mov
jp
cmp
mov
incb
dec
outsl
jecxz
sahf
push
xlat
popa
movsl
rolb
mov
push
add
add
jo
mov
loopne
mov
inc
add
push
aaa
mov
int3
int
pop
push
pop
sarl
add
xchg
ret
add
hlt
rolb
mov
les
insb
fldt
addb
shr
push
addr16
inc
cs
mov
addl
xlat
addb
add
mov
nop
add
mov
test
xchg
mov
iret
scas
int3
in
xchg
out
movsl
sahf
mov
loop
mov
inc
sbb
add
xchg
xor
mov
xchg
les
pop
pusha
add
push
jae
test
jl
sub
pop
xlat
mov
inc
jo
mov
in
xchg
push
add
jne
adc
mov
lret
movsb
pop
mov
sbb
mov
sti
pop
addb
push
scas
lock
hlt
int
cmpsl
popf
xor
pop
adc
add
jecxz
lcall
aam
add
bound
mov
lret
outsl
rolb
mov
xor
mov
arpl
add
and
mov
leave
das
xchg
ror
add
pop
jnp
rolb
mov
test
xor
mov
movsb
in
xor
popf
ja
cltd
flds
andl
push
dec
icebp
sub
sbb
mov
cmp
add
sbb
dec
lods
sub
out
cmp
out
push
jae,pt
into
cli
cmc
or
add
jne
sahf
loope
out
dec
xor
aaa
test
push
jl
push
inc
xor
add
test
int3
mov
mov
push
roll
mov
out
roll
add
stos
scas
pop
int3
adc
mov
add
mov
es
push
je
add
mov
mov
mov
outsl
outsl
out
pop
xor
mov
lcall
add
jge
xlat
rorl
cmp
fnsave
clc
sub
push
out
fs
cmp
adc
and
jle
sub
jmp
aam
test
mov
mov
addb
mov
adc
xor
mov
add
bound
mov
outsl
lods
jne
jnp
icebp
inc
push
sbb
enter
out
aam
push
ja
rolb
pop
in
add
mov
mov
add
imul
push
add
push
xchg
sti
addb
xor
pop
insb
xchg
scas
nop
add
sti
mov
mov
jne
sbbl
dec
mov
add
add
cltd
mov
mov
rolb
mov
addb
lcall
push
ret
dec
fbld
mov
rolb
mov
push
rolb
mov
xchg
add
call
and
sbb
sub
jbe
stc
mov
icebp
inc
leave
das
repz
les
inc
adc
mov
sub
cmp
lcall
add
add
add
cmp
icebp
or
add
xchg
or
fistps
dec
fnstsw
push
cs
xlat
xchg
add
inc
cmp
sti
outsb
mov
add
addb
dec
test
mov
jmp
shll
xchg
sbb
jge
jno
add
jmp
divb
std
sub
add
es
cltd
movsl
and
mov
add
push
sbb
xor
movsl
dec
fldt
jge
add
dec
mov
add
sub
add
das
inc
add
or
add
add
ds
aam
mov
add
into
mov
rolb
mov
icebp
jns
xor
mov
add
outsb
outsl
cmp
pop
adc
bound
mov
add
cmpsb
mov
xor
inc
je
push
clc
xor
mov
push
jo
mov
pop
and
mov
xor
test
xchg
or
enter
mov
add
xlat
push
neg
mov
add
lds
pop
stos
pop
fsts
pusha
add
jge
test
cmp
add
cld
aam
cld
mov
lret
mov
mov
push
imul
dec
push
lahf
mov
out
das
add
sub
push
outsb
xchg
xchg
dec
sar
sti
lock
fs
mov
outsb
daa
ret
test
fsubs
fsubrp
or
comiss
bound
mov
add
lcall
jae
dec
xchg
add
lret
lcall
lods
mov
jg
mov
cmc
pop
add
ret
dec
pop
aas
pop
fdivrl
mov
and
mov
mov
rcrl
add
lods
inc
cmp
add
jae
mov
arpl
sbb
leave
cwtl
sub
lock
inc
loope
sub
add
popa
sub
pop
inc
sbb
jb
mov
jge
aad
or
lret
jle
scas
inc
dec
test
je
add
cli
add
mov
aad
scas
jnp
addb
push
xor
push
pop
scas
add
xor
mov
or
mov
stc
add
add
cmpl
fstpt
and
mov
test
imul
mov
mov
sub
xchg
das
pusha
add
add
stc
adc
cmpl
iret
es
add
pop
int3
dec
stos
out
and
pop
push
clc
int3
push
in
lock
daa
xlat
stc
enter
fcoml
add
xor
add
and
mov
add
sbb
jb
mov
cmp
daa
repz
add
call
push
out
loop
mov
push
mov
testb
cmc
lods
add
mov
mov
jo
mov
mov
push
push
cli
xor
mov
sbb
cli
sbb
orl
in
cmp
sub
loopne
mov
mov
pop
icebp
and
xor
mov
add
sbb
repz
mov
mov
mov
add
lret
cli
mov
nop
add
add
gs
jnp
mov
test
mov
fsubs
add
lcall
movsb
dec
sti
mov
add
xor
mov
sub
add
mov
and
mov
fs
fcomi
jge
fstps
inc
mov
daa
icebp
jg
xchg
and
add
add
or
aaa
popf
rolb
mov
inc
mov
fidivrs
xchg
and
mov
sub
arpl
add
xchg
aas
loop
mov
mov
sbb
mov
mov
mov
add
sub
xchg
fs
sbb
push
adc
ljmp
jae
add
sub
xor
test
add
pop
test
xchg
popa
jmp
repz
mov
or
lcall
enter
js
js
pop
imul
push
les
inc
add
movsl
mov
test
out
add
adc
mov
fxch
testl
pextrw
add
mov
out
loopw
mov
adc
and
sub
xchg
mov
lock
sub
addb
stc
lret
mov
insl
orl
mov
roll
cli
jnp
jecxz
sti
in
mov
add
add
mov
out
addb
std
test
inc
call
dec
gs
mov
lock
hlt
aam
add
cmp
dec
xor
mov
push
add
ds
jb
mov
ror
in
mov
loope
mov
mov
add
ss
sarl
xchg
sahf
sbb
mov
or
pop
cltd
xor
mov
into
cmp
sbb
mov
add
or
divl
mov
fdivrl
push
cmc
jle
mov
dec
cmc
jbe
xor
comiss
aad
pushf
lret
add
cmc
ret
sub
mov
inc
push
daa
push
cs
incb
mov
mov
mov
int3
scas
cmp
xlat
mov
cmpsb
aad
addb
dec
cmp
mov
cmp
ret
aaa
xchg
or
rcr
cmp
es
push
es
xchg
mov
wrmsr
add
push
jo
mov
in
lea
push
push
push
add
insl
pop
fldcw
add
rolb
mov
mov
adc
mov
xchg
icebp
add
add
mov
daa
or
shll
adc
mov
or
mov
and
in
popf
sub
hlt
movswl
add
xor
mov
add
mov
sub
cmpsl
inc
add
jbe
das
jg
movsb
push
add
stc
es
add
jne
add
add
push
xor
push
pop
pop
push
inc
add
push
push
xchg
mov
inc
pop
pop
bound
mov
lock
fdivs
xor
pop
lods
in
call
push
push
sub
jb
mov
or
aad
arpl
pop
sbb
push
sar
cltd
mov
jmp
lds
sub
pop
mov
sbb
adc
mov
sub
fdivrl
adc
mov
pop
lret
sti
repnz
lret
sub
lcall
jl
call
push
add
sbb
rolb
mov
xchg
scas
shrl
and
mov
add
pop
push
hlt
adc
mov
adc
out
rolb
mov
add
cmp
pop
and
ds
adc
add
cmpsb
sub
dec
mov
int3
cmp
mov
mov
fmull
add
subl
xchg
sbb
add
out
in
mov
mov
stos
call
and
mov
add
push
sub
fidivs
add
loopne
mov
add
mov
adc
xchg
leave
pop
scas
bound
mov
inc
add
cmp
add
ret
or
add
mov
leave
imul
push
dec
mov
add
pop
mov
add
cltd
push
sub
add
jp,pt
test
nop
add
add
mov
fcoml
add
lret
mov
mov
cmpsb
test
sbb
add
fdiv
add
and
mov
add
in
aas
dec
icebp
mov
ds
inc
cltd
pusha
add
dec
in
ss
cmc
pop
mov
xchg
and
sbb
push
test
insb
mov
xchg
std
add
pop
sub
jle
loop
mov
add
or
ret
or
mov
add
xchg
add
push
mov
inc
mov
mov
mov
mov
lcall
push
aad
pop
jg
fldt
xchg
sub
add
idiv
mov
add
inc
add
xchg
xor
mov
cwtl
pop
push
push
add
mov
mov
movsl
xor
push
add
add
mov
loopne
mov
test
jno
dec
add
mov
xor
addb
ficoml
pop
cmp
and
mov
fs
stos
das
js
aas
xchg
push
fwait
inc
jb
mov
pop
incb
rolb
lea
inc
hlt
lcall
fidivrs
jl
jmp
add
inc
fsubrl
lcall
add
mov
int3
cmp
aaa
stos
jo
mov
out
jb
mov
int
stos
out
test
add
add
enter
cmpsb
mov
adc
pop
jl
je
fldcw
push
xchg
add
imul
add
add
mov
jmp
mov
mov
addr16
aam
cmpsl
cli
mov
add
ljmp
add
mov
aas
lahf
and
push
and
out
scas
mov
mov
mov
mov
add
loopne
mov
rcl
and
add
add
fbld
mov
lret
loop
mov
xchg
aas
and
or
fwait
in
cs
aaa
add
mov
inc
dec
sbb
ljmp
negb
loop
mov
aam
add
mov
push
fwait
mov
mov
addr16
in
test
add
jns
add
or
add
add
rorl
sub
cmpsl
inc
rolb
pop
fidivs
add
mov
dec
adc
add
mov
loope
and
cmpsl
inc
mov
fmuls
mov
add
add
mov
js
push
xchg
add
add
test
fldt
pop
push
adc
inc
daa
es
test
sbb
xchg
jns
mov
jge
dec
jecxz
adc
cwtl
mov
or
add
mov
fdivl
faddl
int3
and
mov
mov
push
mov
add
mov
dec
mov
add
xlat
adc
xchg
dec
cmpsb
dec
aas
push
outsb
xchg
xchg
push
scas
xlat
shl
add
dec
xchg
addb
test
fs
hlt
jne
xchg
and
mov
sti
dec
jnp
add
inc
sahf
jecxz
stc
or
add
sahf
jnp
out
mov
jno
mov
inc
sbb
notb
jmp
fcmovnbe
cmp
fdivl
mov
jno
xchg
addb
in
push
add
add
mov
mov
add
outsb
push
push
dec
pop
rolb
mov
xchg
dec
xchg
cmp
sbb
stc
je
mov
jnp
add
mov
sti
mov
fistpll
mov
ja
inc
add
mov
mov
mov
add
xchg
stos
int
jmp
lret
stos
ja
xchg
add
addb
nop
add
add
fcompl
out
in
call
bndldx
loopne
mov
xor
repnz
mov
jl
popf
les
sbb
mov
sub
add
push
xchg
add
mov
mov
or
outsl
ljmp
and
dec
jae
lods
hlt
lcall
add
fwait
icebp
les
nop
add
dec
fdivrp
xchg
ss
and
mov
scas
sbb
add
out
aas
pop
push
gs
cmp
lcall
inc
ja
push
bound
mov
cmpsl
push
add
xor
jns
fistpll
push
addr16
aad
mov
out
lea
movsb
xchg
dec
cmp
add
mov
adc
stos
pop
ds
dec
rcpps
testl
enter
sbb
mov
add
mov
add
pop
das
movsb
push
jmp
jp
adc
add
into
cmp
dec
adc
movsb
xor
mov
xchg
xchg
jg
pushf
in
fadds
xchg
add
call
int3
cmp
cltd
mov
inc
aaa
sub
add
sbb
add
mov
mov
mov
push
push
sbb
or
rolb
mov
add
pusha
add
mov
pop
movsl
mov
xor
jnp
aaa
addr16
jnp
jmp
dec
sbb
mov
ud0
jle
mov
clc
mov
add
cmc
dec
xor
mov
xchg
cwtl
dec
add
scas
push
shll
ret
wrmsr
add
cli
std
dec
mov
and
mov
pop
inc
mov
and
mov
mov
jge
push
or
dec
inc
jno
dec
cwtl
testb
mov
pushf
xchg
std
xchg
dec
mov
xor
and
add
cmpsb
pop
jno
jg
add
xlat
push
add
pusha
add
xor
mov
mov
paddusw
lds
dec
mov
push
pop
jns
add
add
insb
scas
pushf
jmp
adc
add
mov
lahf
and
or
outsl
xchg
dec
jb
mov
lods
and
mov
mov
add
bound
mov
daa
sahf
daa
or
or
add
popf
dec
pop
pop
sub
add
mov
add
das
adc
mov
out
pop
mov
mov
out
rcll
xor
adc
lret
add
jae
add
sbb
mov
stc
xchg
out
inc
add
mov
data16
mov
xchg
push
daa
xchg
mov
rcll
pop
mov
arpl
mov
test
mov
iret
aam
mov
rolb
rolb
mov
xchg
fstps
xor
add
cmpsl
and
dec
mov
dec
mov
mov
mov
or
mov
mov
ret
jo
mov
mov
stos
outsb
mov
mov
add
popa
cmp
mov
adc
mov
cmp
in
push
sub
pusha
add
inc
add
popf
mov
mov
jge
jns
and
mov
in
mov
cmovno
add
mov
dec
lods
inc
sahf
aam
push
add
mov
cmp
cmp
sub
add
pusha
add
add
sbb
pop
mov
push
lock
or
mov
pusha
add
ljmp
mov
xchg
sbb
adc
je
sub
lods
daa
repnz
fiaddl
add
add
cmp
pop
test
das
adc
jbe
bound
mov
test
push
add
sbb
or
push
cmp
daa
out
mul
pop
jo
mov
scas
or
push
std
pop
sti
xor
mov
insl
loop
mov
daa
insb
dec
mov
xor
mov
add
in
jb
mov
movsl
fcompl
adc
mov
sbb
mov
pop
int
jae
aaa
aas
cli
icebp
pop
xor
add
mov
sub
jo
mov
aas
nop
add
insb
mov
out
push
bound
mov
pusha
add
mov
inc
aaa
xchg
insl
sbb
push
and
aas
roll
add
repnz
xor
aaa
mov
or
inc
push
pop
cmpsb
pop
jg
ret
inc
add
mov
xchg
pop
shr
add
mov
aam
fucomp
insl
call
inc
jle
jnp
in
add
pushf
cmp
jnp
orl
das
addb
cmp
inc
add
or
mov
fmul
inc
push
xor
iret
bound
mov
ret
lds
fwait
jb
mov
dec
in
test
add
jnp
flds
add
sub
jne
pop
ljmp
add
int
adc
mov
jp
mulb
mov
mov
push
push
std
xchg
fistpl
cs
mov
mov
add
mov
add
mov
sbb
bound
mov
sbb
mov
mov
jns
add
js
cmc
stos
popf
adc
dec
add
mov
nop
add
lods
call
addr16
add
mov
mov
xchg
push
sahf
das
into
cmp
push
xchg
out
aaa
bt
mov
call
cli
mov
mov
jbe
add
push
adc
mov
mov
rcrl
push
fucomip
mov
mov
ljmp
cmc
fwait
imull
les
out
test
mov
jne
dec
push
add
add
andl
rolb
mov
jbe
jne
cmpsl
xchg
out
push
sub
test
mov
inc
movsl
pop
cmp
push
sti
mov
xchg
mov
lret
inc
rcrl
test
test
ljmp
mov
stos
ds
iret
pop
cmp
adc
in
test
inc
add
push
sub
mov
in
mov
sti
test
daa
jp
fdivrl
mov
inc
rol
fwait
ljmp
jl
sbb
add
xchg
xchg
add
mov
lcall
enter
mov
add
pusha
add
rcr
out
out
in
fnstsw
adc
mov
add
std
mov
je
ss
mov
cwtl
push
mov
sahf
jle
xchg
xchg
add
in
jb
mov
and
fstpt
imul
add
or
scas
js
add
xchg
jns
add
mov
add
mov
inc
insb
inc
push
sub
lret
push
add
mov
mov
sub
dec
xchg
test
add
add
mov
faddl
pop
fwait
insb
xchg
leave
sbb
add
rorl
dec
cmp
mov
out
cmp
es
mov
or
rolb
mov
sbb
dec
popf
mov
mov
fdivl
fcoml
jg
push
sbb
aaa
into
bound
mov
lods
in
add
mov
push
cwtl
pop
in
adc
push
sub
sub
aad
add
mov
ret
imul
jns
loop
mov
sub
cltd
orl
sub
jo
mov
sbb
inc
cmpsb
dec
xor
push
inc
add
cli
xchg
pop
int
icebp
sub
xlat
jmp
aas
dec
outsl
mov
xchg
add
cli
cmovbe
add
add
jle
cmpsb
fs
adc
add
jb
mov
mov
aaa
push
sub
mov
test
add
pop
mov
mov
add
aad
dec
inc
jge
and
mov
mov
sub
jmp
add
mov
xor
mov
and
ja
jb
mov
mov
mov
add
movsl
add
rcrl
cltd
xchg
and
mov
pop
xchg
in
loope
pop
addb
lds
mov
scas
pcmpgtd
pop
cmp
dec
jae
addb
adc
scas
pop
push
xor
mov
lds
mov
mov
in
cmp
in
insl
jmp
cmp
push
push
adc
mov
inc
mov
insb
scas
cmp
insb
dec
adc
mov
sub
mov
fnstcw
loope
icebp
or
lods
xor
mov
pop
add
outsl
inc
stos
mov
mov
and
addb
in
imul
out
add
push
sbb
arpl
stc
fcmovb
xchg
add
clc
mov
dec
fwait
or
sub
ss
clc
in
lahf
arpl
mov
fcompl
cmp
jge
add
add
inc
jle
cmpsb
je
addr16
enter
mov
add
xchg
sub
jno
cs
jg
inc
lods
mov
or
cmp
lahf
and
mov
cs
cmpsb
mov
inc
add
je
rcrl
js
add
ja
insb
xor
cmp
sub
mov
fisttpl
mov
rcll
mov
addb
fwait
mov
pop
jb
mov
add
sbb
pop
jb
mov
xchg
add
add
add
mov
add
setp
add
fstpt
ss
jmp
call
sahf
js
inc
icebp
imul
loop
mov
cmpsl
lret
mov
lret
rcll
inc
add
add
mov
add
inc
add
mov
loope
add
insb
rolb
mov
mov
add
jg
adc
mov
or
jb
mov
push
mov
add
or
inc
add
roll
lret
add
mov
pop
cli
xor
mov
add
push
dec
jmp
or
loopne
mov
and
add
add
pop
pop
sbb
mov
add
sub
add
pop
xor
pop
cmp
add
xlat
insb
pushf
sub
jg
add
add
jmp
xchg
add
mov
mov
mov
test
lret
jbe
push
jl
mov
xor
jle
and
push
movsl
pusha
add
into
test
mov
ficoml
xchg
mov
mull
sbb
add
inc
dec
inc
add
mov
mov
out
ror
addb
mov
push
xchg
push
mov
add
repnz
mov
jne
mov
add
test
loopne
mov
mov
mov
add
inc
mov
mov
or
jo
mov
cmpsb
cmc
lret
out
push
or
fistpl
idivl
add
mov
ret
mov
test
add
add
popa
cmp
mov
dec
loop
mov
sbb
icebp
cmp
inc
mov
add
lahf
cltd
dec
aaa
pop
or
xor
and
mov
mov
add
adc
movsl
in
xor
mov
sub
mov
mov
xor
std
lea
std
jl
daa
testb
repnz
jo
mov
add
sbb
imul
pusha
add
sahf
rolb
mov
add
rolb
mov
or
pop
dec
scas
bswap
pusha
add
xchg
jmp
inc
mov
xor
mov
dec
out
mov
or
inc
add
and
mov
pop
lcall
mov
and
mov
mov
mov
push
and
inc
jmp
add
into
cs
jae
sbb
sti
arpl
stc
gs
or
das
mov
pop
sbb
sub
cmpsb
and
mov
mov
ja
push
in
cmp
add
lds
loop
mov
dec
lea
adc
lahf
and
cli
inc
push
repz
mov
mov
push
in
or
mov
addr16
pop
stos
ret
cmp
iret
sub
mov
sbb
movsl
xlat
addr16
aas
iret
jmp
rolb
mov
mov
pusha
add
pop
sbb
iret
add
mov
and
mov
loopne
mov
fiadds
add
mov
mov
inc
loop
mov
xchg
fdivrs
xor
xor
mov
addb
testl
add
or
add
loop
mov
movsl
out
movsl
and
loopne
mov
ja
sbb
lcall
pop
jle
mov
jbe
add
shl
into
popa
or
xorl
inc
add
jle
xchg
xor
mov
jae
sahf
sbb
pop
scas
mov
adc
mov
in
out
rolb
mov
add
mov
mov
mov
add
mov
rolb
mov
in
addb
dec
rolb
mov
enter
mov
mov
add
outsb
dec
int
and
mov
mov
js
mov
scas
push
mov
xor
pop
mov
push
jp
inc
add
xor
mov
push
filds
mov
pop
addr16
testl
rolb
mov
add
lds
or
pusha
add
xchg
mov
sub
push
stos
dec
imul
ret
icebp
insb
xlat
cmpsl
ja
add
fcmovb
loop
mov
bound
mov
mov
mov
inc
cmp
aad
add
cltd
mov
lock
call
int3
push
je
add
and
mov
dec
in
jae
addb
jl
lahf
lock
lret
xchg
jecxz
sti
ljmp
out
add
mov
lahf
xchg
and
mov
mov
jne
mov
and
mov
xor
test
mov
or
sti
pop
repnz
xchg
mov
mov
mov
cli
jg
ret
fistl
mov
jo
mov
mov
jne
mov
out
out
xchg
jns
add
in
notl
add
ljmp
push
jp
and
bound
mov
scas
jl
mov
and
decb
xor
cmpsb
out
int
adc
mov
neg
fsubs
stc
push
push
in
jne
add
mov
ja
add
add
add
sti
in
ljmp
mov
lods
iret
sub
fcmovb
sbb
adc
loope
mov
mov
adc
fidivrl
ja
pop
pushf
bound
mov
ret
push
add
test
clc
loope
pop
sbb
mov
loop
mov
dec
adc
add
mov
idivl
mov
add
das
jbe
add
add
cltd
add
or
xchg
jl
and
cmpsb
nop
add
into
push
dec
shll
mov
inc
loope
jge
rcrl
push
adc
mov
add
sub
repnz
sahf
dec
push
jle
pop
and
mov
add
mov
add
mov
scas
xchg
push
bound
mov
add
addb
fnstsw
dec
sbb
loopne
mov
xchg
add
push
sbb
mov
and
jbe
lahf
stos
int3
cs
aam
lret
imul
inc
in
xchg
xchg
jb
mov
add
lret
xchg
add
xchg
mov
daa
ret
cltd
lcall
aad
in
jecxz
stc
xor
mov
outsl
mov
jo
mov
mov
out
mov
add
add
and
mov
mov
push
mov
or
dec
pushl
fwait
pushf
negl
add
lahf
outsb
ja
mov
adc
out
daa
in
lods
inc
xor
fsubrl
add
rolb
aaa
cmp
inc
sub
aam
ljmp
lods
std
mov
inc
dec
pushf
cld
mov
into
push
add
ret
mov
fstpl
js
mov
push
out
dec
or
xor
icebp
insl
rol
rolb
xor
mov
mov
sub
fiadds
cltd
sbb
jmp
inc
pop
or
mov
pcmpeqw
sbb
jbe
clc
sbb
mov
mov
hlt
mov
add
xor
bound
mov
rolb
mov
add
out
jne
jge
pop
lret
mov
and
mov
pop
ret
out
out
scas
push
or
add
mov
add
jo
mov
cltd
dec
mov
or
inc
fsts
pop
or
sbb
mov
pop
ds
and
mov
xor
mov
ss
int
add
pop
outsl
inc
outsb
lahf
sbb
fistpl
rorl
mov
enter
sarl
punpckhwd
xchg
mov
cld
jne
mov
jl
adc
insl
imul
ljmp
pushf
xchg
sahf
aad
mov
addb
or
add
jmp
mov
inc
imul
outsl
cwtl
xchg
out
fcompl
add
jmp
lcall
add
sti
fcmovu
rorl
dec
aas
jns
int
add
inc
add
iret
sbb
mov
data16
outsb
leave
loope
loop
mov
and
mov
sbbl
add
add
xchg
imul
test
std
outsl
adc
lods
xchg
cmpsl
jmp
aad
cli
stos
int
dec
sbb
push
mov
pop
ds
adc
pop
icebp
jno
rolb
loop
mov
out
xchg
pop
pusha
add
add
popf
mov
sarl
add
pop
mulb
dec
sbb
xlat
je
cmp
xor
inc
sub
mov
add
repz
test
add
cmp
add
je
jnp
adc
xchg
icebp
mov
into
xchg
adc
mov
push
in
iret
out
mov
mov
mov
cs
xchg
mov
add
cpuid
add
add
add
inc
mov
mov
xchg
in
inc
mov
and
adc
mov
lcall
push
xchg
das
dec
pop
movlps
mov
pop
addl
add
into
add
add
and
push
in
and
sbb
add
jecxz
add
xchg
add
jmp
mov
mov
out
cmp
adc
sbb
imul
ret
dec
mov
std
add
mov
mov
inc
in
das
js
or
fnstsw
cli
dec
jmp
add
scas
je
mov
adc
jnp
jp
cmp
xchg
shll
adc
dec
cli
pop
adc
mov
cmp
clc
dec
es
adc
adc
jmp
in
jmp
cltd
sub
xor
mov
in
xor
mov
pusha
add
ds
add
mov
mov
loop
mov
cld
dec
jl
icebp
popf
xchg
rcrl
outsb
data16
mov
add
jg
cmc
push
add
mov
xor
enter
mov
add
xor
fimuls
pop
jg
sbb
rolb
mov
xchg
push
mov
jno
bound
mov
out
or
add
mov
jl
pop
xchg
add
mov
iret
and
mov
dec
sbb
add
mov
adc
jge
mov
xchg
and
mov
pushf
imul
xchg
stos
in
sbb
mov
add
mov
inc
xor
and
mov
push
rolb
mov
mov
inc
xor
add
jg
mov
push
out
cs
push
xchg
mov
cmp
pop
scas
sub
add
mov
sbb
fucomip
shrl
mov
mov
sbb
mov
mov
xchg
pop
cmpsb
push
dec
inc
push
jp
add
mov
pop
lret
jle
jae
add
xor
mov
mov
das
clc
int3
or
add
add
mov
mov
sbb
test
adc
fcomi
add
push
ss
xor
cmp
pop
add
mov
cs
dec
leave
xchg
add
les
sub
icebp
movsl
cmp
cwtl
and
leave
jno
call
into
sti
mov
sarl
add
ds
jnp
cmp
test
insl
dec
in
in
sbb
add
and
ja
aas
fmulp
mov
add
mov
add
ljmp
push
loop
mov
pushf
sbbl
sub
addb
mov
add
out
push
jbe
sub
repz
cmp
shll
add
inc
xor
jne
add
idiv
clc
mov
stc
stos
loope
fcomi
mov
mov
fldl
add
ja
in
jmp
add
in
int3
fucom
push
dec
jg
sarl
jge
add
aam
add
mov
adc
mov
inc
roll
add
jecxz
lods
add
mov
push
jp
add
add
or
mov
addb
xchg
jl
or
push
jmp
mov
mov
add
inc
imul
mov
pusha
add
imul
lock
call
jb
mov
out
pop
xor
dec
mov
cmp
add
lock
mov
outsb
mov
mov
ficoms
mov
out
int3
sub
mov
lcall
add
loope
in
and
mov
into
pop
sti
outsl
fldl
in
sub
add
xor
in
out
add
fiaddl
dec
jle
ret
xchg
popa
cwtl
inc
xor
movsb
outsl
js
xor
push
je
push
jnp
stos
enter
mov
mov
push
addr16
adc
nop
add
pop
cwtl
lods
int
add
inc
loopne
mov
mov
xor
int3
push
add
scas
fcos
stos
lock
imul
test
mov
add
mov
and
adc
mov
or
add
faddl
add
clc
scas
lret
push
add
mov
inc
xor
mov
sub
gs
in
ja
mov
cmovno
cmp
add
mov
cli
or
add
mov
mov
mov
pop
rolb
mov
add
call
mov
inc
add
mov
push
xchg
xlat
movsl
enter
mov
aam
add
sbb
pop
jle
enter
add
loop
mov
add
in
add
inc
push
and
add
mov
mov
mov
adc
mov
stc
in
add
add
icebp
insb
js
add
cs
imul
test
jnp
dec
negb
dec
iret
push
add
insb
aam
add
add
push
xchg
iret
xchg
in
jb
mov
es
stos
cmp
repz
mov
fwait
cs
add
ds
gs
add
pop
leave
pop
inc
lret
fsubs
imul
or
cmpsb
mov
in
hlt
and
mov
ds
lahf
dec
cmpsb
imul
loop
mov
test
add
inc
cld
push
fiaddl
pop
sub
loop
mov
add
cmp
lret
dec
hlt
push
add
or
mov
add
decl
aaa
and
mov
das
stc
cli
mov
jb
mov
test
out
mov
add
dec
adc
add
pop
mov
in
nop
add
lcall
xor
mov
xchg
push
add
fldcw
mull
add
pop
inc
test
mov
or
ss
mov
dec
mov
jae
insb
std
in
stos
fstl
mov
addb
add
mov
pop
addl
add
sub
mov
sbb
inc
inc
lret
lea
pop
cs
rolb
mov
jno
add
test
mov
in
or
add
sub
cmp
adc
mov
sahf
adc
mov
fcomps
xchg
jp
es
ljmp
push
lea
and
sbb
icebp
pop
ds
xor
add
or
mov
std
fimuls
pop
ljmp
inc
call
rolb
sbb
ret
call
or
bound
mov
xchg
cmp
addr16
add
cs
mov
xor
jbe
xchg
scas
pop
cmp
and
jno
aaa
fdivs
movsl
lods
add
xchg
dec
sub
pop
pop
in
inc
adc
add
add
lret
inc
pop
jmp
dec
and
adc
lcall
call
mov
rolb
sub
xor
repnz
int3
rolb
mov
add
ljmp
cltd
cmp
add
cmp
push
jp
jp
stos
test
jbe
imul
add
mov
repz
sub
mov
jmp
ss
sub
push
adc
add
jnp
add
mov
insl
xlat
cmp
mov
push
sub
add
add
test
mov
insl
adc
lcall
mov
dec
or
mov
add
arpl
add
test
sbb
add
sbb
fdivr
mov
add
sub
add
jno
cmp
shll
add
cli
sub
addb
push
add
jne
mov
out
ljmp
add
jl
mov
add
mov
in
push
add
mov
adc
mov
jg
dec
inc
push
lods
call
fidivrl
imul
dec
xchg
dec
jae
sbb
mov
out
inc
cltd
mov
xor
mov
add
in
mov
jb
mov
daa
pusha
add
in
add
push
push
add
call
add
inc
jns
aam
mov
add
int3
add
ret
aaa
fisttps
popf
sub
cmpsl
jbe
and
mov
fidivs
push
add
fs
ds
add
or
add
cmp
scas
ss
mov
mov
rolb
movsb
aad
out
sbb
sub
cmp
mov
sbb
xchg
adc
mov
in
adc
mov
rolb
mov
mov
mov
cmp
add
xchg
rolb
mov
les
shll
push
fistpl
clc
fdivrp
dec
pop
dec
mov
mov
repnz
lret
jmp
sbb
add
mov
pop
pop
imul
icebp
shl
test
jo
mov
add
add
jmp
pop
inc
add
sub
fwait
stos
push
pop
xor
out
and
add
mov
or
or
push
add
inc
outsb
je
adc
arpl
in
add
fidivl
mov
fisttpl
nop
add
mov
jae
jmp
jecxz
fcompl
pusha
add
test
dec
fstl
mov
adc
xor
bound
mov
sbb
inc
add
add
xchg
add
out
aaa
out
ret
xlat
cs
inc
jmp
je
js
jb
mov
mov
mov
add
push
mov
rcrl
mov
add
enter
pop
xchg
add
mov
std
mov
mov
add
divb
add
cmpsl
stos
fisttpl
int3
div
in
sbb
subl
cmp
mov
sarl
iret
aaa
pushf
clc
fcoml
addl
ret
insl
pop
xchg
pop
loope
adc
mov
mov
pushf
xchg
dec
push
rolb
mov
or
cli
lea
call
jecxz
add
add
xchg
mov
jmp
test
mov
add
dec
sub
push
or
sbb
and
mov
je
nop
add
rcll
mov
mov
xchg
cmp
xchg
add
ret
dec
repz
in
push
add
add
cld
fsubrl
clc
mov
add
jl
xchg
lods
movsl
pop
cmp
sub
test
add
inc
add
repnz
nop
cld
jae
xchg
add
movsl
push
mov
nop
leave
jmp
popf
cmpsl
jne
add
add
repnz
nop
cld
jae
add
in
fucomip
add
sti
adc
add
add
push
dec
xchg
popf
cltd
and
add
cmpw
push
mov
nop
leave
jmp
add
das
dec
jne
add
add
push
mov
jb
add
cmp
repnz
nop
cld
jae
add
inc
xchg
add
add
nop
nop
cld
jae
mov
out
add
xor
dec
ss
push
mov
nop
leave
jmp
aam
shrb
push
mov
add
add
add
movsl
add
add
add
mov
add
repnz
nop
cld
jae
add
add
push
mov
das
movb
cmp
ret
add
add
jo
add
xchg
inc
add
add
repnz
add
fwait
aam
enter
add
add
clc
repnz
nop
cld
jae
add
cmp
clc
repnz
nop
cld
jae
add
iret
add
add
jo
je
jmp
incl
jne
iret
inc
add
enter
test
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
mov
add
pusha
dec
leave
clc
repnz
nop
cld
jae
add
aam
adc
nop
nop
cld
jae
pop
enter
in
adc
and
clc
repnz
nop
cld
jae
out
inc
out
aam
add
clc
repnz
nop
cld
jae
add
addl
add
repnz
nop
cld
jae
xchg
add
add
push
add
loopne
mov
mov
clc
repnz
nop
cld
jae
fistpll
sbb
clc
repnz
nop
cld
jae
jo
xorl
xor
clc
repnz
nop
cld
jae
add
das
call
adc
jmp
inc
add
add
aam
popf
movsl
jmp
cmpl
jae
xor
add
enter
in
nop
leave
jmp
add
xchg
aas
mov
clc
repnz
nop
cld
jae
add
add
test
sub
nop
nop
cld
jae
in
dec
imul
nop
nop
cld
jae
add
aam
shr
push
mov
nop
leave
jmp
das
pop
stos
add
add
je
clc
repnz
nop
cld
jae
mov
ret
int3
add
push
mov
nop
leave
jmp
and
pop
addl
andl
push
mov
xchg
ret
imul
sub
js
inc
add
add
rcl
add
jnp
les
add
add
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
popf
in
movsl
add
add
nop
nop
cld
jae
and
xchg
push
sbb
mov
cmp
ret
add
push
add
call
repnz
nop
cld
jae
cmpsl
enter
add
adc
clc
repnz
nop
cld
jae
fistpll
aad
movzwl
clc
repnz
nop
cld
jae
lea
add
mov
xchg
ret
xchg
inc
jne
mov
mov
clc
repnz
nop
cld
jae
xchg
push
add
aam
add
mov
jno
clc
repnz
nop
cld
jae
add
jae
mov
push
mov
nop
leave
jmp
rcll
test
sbb
cld
jae
add
pusha
add
enter
mov
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
aam
cs
push
mov
xchg
ret
add
das
add
add
scas
mov
push
mov
nop
leave
jmp
add
add
repnz
nop
cld
jae
flds
mov
add
or
mov
xchg
ret
jo
dec
imul
clc
stos
push
mov
xchg
ret
iret
add
aam
add
add
jmp
inc
adc
mov
nop
leave
jmp
pusha
add
add
and
push
fs
repnz
nop
cld
jae
xchg
flds
rorl
popa
add
mov
xchg
ret
les
add
clc
repnz
nop
cld
jae
add
mov
add
test
add
in
nop
leave
jmp
popf
add
mov
sub
or
add
dec
add
push
in
add
test
inc
imul
nop
nop
cld
jae
movsl
add
add
sar
nop
nop
cld
jae
add
sbb
pop
imul
clc
repnz
nop
cld
jae
jo
in
dec
fwait
fwait
or
clc
repnz
nop
cld
jae
add
add
in
add
das
push
push
mov
xchg
ret
add
shll
aam
add
add
pop
push
mov
nop
leave
jmp
add
add
and
add
push
mov
xchg
ret
add
inc
add
aaa
aam
jmp
and
mov
adc
repnz
in
nop
leave
jmp
mov
stos
add
clc
repnz
nop
cld
jae
fwait
inc
add
push
iret
stos
rol
push
push
mov
nop
leave
jmp
les
orl
fistps
mov
xchg
ret
movsl
add
xor
imul
clc
repnz
nop
cld
jae
sbb
fwait
add
and
add
and
xor
xchg
inc
imul
adcl
add
clc
repnz
nop
cld
jae
iret
subl
add
mov
nop
leave
jmp
add
add
cmpsl
xchg
add
repz
repnz
nop
cld
jae
call
add
push
mov
nop
leave
jmp
iret
aam
add
add
jge
popa
add
repnz
nop
cld
jae
add
flds
xchg
add
rep
clc
repnz
nop
cld
jae
add
cltd
cmp
ret
cmpsl
outsl
push
mov
adc
cmp
add
add
add
xchg
sub
repnz
nop
cld
jae
xchg
add
iret
add
ffreep
aam
xlat
xor
or
add
repnz
nop
cld
jae
add
cltd
pop
push
mov
nop
leave
jmp
in
push
add
add
xor
sbb
nop
cld
jae
add
add
enter
jl
inc
add
add
jo
add
sbb
repnz
nop
cld
jae
fwait
add
sub
lret
clc
repnz
nop
cld
jae
inc
add
ss
sub
movb
repnz
nop
cld
jae
movsl
das
dec
add
out
add
cmp
push
mov
nop
leave
jmp
cmpsl
add
repnz
clc
repnz
nop
cld
jae
add
xor
mov
mov
push
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
add
xor
mov
push
mov
xchg
ret
inc
add
jo
dec
fwait
iret
mov
clc
repnz
nop
cld
jae
add
add
and
out
xor
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
cmpsl
add
add
rcr
test
mov
nop
leave
jmp
pop
pop
add
clc
repnz
nop
cld
jae
movsl
add
add
mov
repnz
nop
cld
jae
add
and
fwait
add
add
iret
jne
clc
repnz
nop
cld
jae
popf
out
add
sbb
repz
repnz
nop
cld
jae
add
fwait
add
pop
cli
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
and
inc
out
je
push
mov
nop
leave
jmp
imul
and
add
adc
mov
nop
leave
jmp
lea
add
sbb
add
clc
repnz
nop
cld
jae
add
add
push
jecxz
add
add
in
mov
repnz
nop
cld
jae
add
inc
xchg
dec
push
clc
je
clc
repnz
nop
cld
jae
test
xchg
addb
cs
clc
repnz
nop
cld
jae
add
nop
nop
cld
jae
xor
inc
movsl
ret
add
push
mov
xchg
ret
add
movsl
movsl
stc
add
clc
repnz
nop
cld
jae
add
add
add
sbb
les
xchg
ret
add
add
in
and
sbb
repnz
nop
cld
jae
add
in
rorb
imul
clc
repnz
nop
cld
jae
mov
fldcw
repnz
nop
cld
jae
aam
add
ret
add
pop
clc
repnz
nop
cld
jae
add
test
repz
ljmp
cmpsl
add
in
add
ret
in
mov
in
nop
leave
jmp
add
add
add
push
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
xchg
xchg
test
add
add
repnz
nop
cld
jae
popf
inc
movsl
add
clc
repnz
nop
cld
jae
adc
add
sbbl
in
nop
leave
jmp
fwait
add
pusha
add
or
popa
add
repnz
nop
cld
jae
aam
add
pusha
cmp
add
add
repnz
nop
cld
jae
add
nop
nop
cld
jae
jo
sbb
add
jmp
add
jne
movsl
popf
xchg
add
add
sbb
mov
movaps
add
repnz
nop
cld
jae
add
pop
add
xor
clc
repnz
nop
cld
jae
aam
or
add
cmp
jne
push
mov
nop
leave
jmp
add
pop
addl
add
repnz
nop
cld
jae
call
inc
pop
je
clc
repnz
nop
cld
jae
aam
push
mov
mov
clc
repnz
nop
cld
jae
add
xchg
add
nop
cld
jae
add
and
cmp
cmpsl
add
mov
xchg
ret
add
add
rorb
ja
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
iret
add
in
dec
push
push
mov
xchg
ret
fwait
add
cltd
xchg
inc
sbb
mov
xchg
ret
add
in
iret
add
mov
bound
mov
fs
insb
clc
repnz
nop
cld
jae
push
add
out
pop
je
clc
repnz
nop
cld
jae
jne
add
call
in
nop
leave
jmp
add
ret
das
xchg
push
and
mov
repnz
nop
cld
jae
add
sub
stc
clc
repnz
nop
cld
jae
add
enter
add
call
clc
repnz
nop
cld
jae
imul
dec
xchg
pop
push
push
mov
nop
leave
jmp
add
jne
xchg
cld
pop
push
mov
xchg
ret
iret
add
popf
mov
popf
add
and
mov
addb
in
add
clc
repnz
nop
cld
jae
stos
mov
movsl
call
sar
nop
nop
cld
jae
adc
fwait
add
data16
loopne
add
inc
add
cmp
and
imul
pusha
add
add
clc
repnz
nop
cld
jae
add
stos
mov
iret
cltd
add
sub
push
mov
xchg
ret
add
movsl
iret
add
sub
pushf
repz
add
add
in
mov
test
push
mov
xchg
ret
add
filds
add
sbb
push
mov
nop
leave
jmp
add
pop
xor
inc
add
mov
push
mov
xchg
ret
add
push
mov
test
idiv
clc
repnz
nop
cld
jae
add
add
je
push
mov
nop
leave
jmp
enter
rolb
mov
mov
push
mov
xchg
ret
add
enter
lahf
push
push
mov
xchg
ret
les
add
push
jl
clc
push
mov
xchg
ret
roll
add
mov
les
repnz
nop
cld
jae
aam
add
add
lds
popa
clc
repnz
nop
cld
jae
add
jne
add
xchg
decb
nop
nop
cld
jae
add
das
mov
clc
repnz
nop
cld
jae
add
add
fwait
loope
add
mov
push
mov
nop
leave
jmp
and
enter
xchg
add
decl
add
in
nop
leave
jmp
mov
lea
clc
repnz
nop
cld
jae
flds
add
add
xlat
test
pop
push
push
mov
xchg
ret
cmpsl
add
inc
add
ret
enter
call
push
mov
xchg
ret
add
xor
add
add
cld
clc
repnz
nop
cld
jae
add
push
and
call
loop
push
mov
nop
leave
jmp
rcl
popf
add
add
addb
movsb
lods
add
push
mov
xchg
ret
add
inc
add
in
pop
pop
push
mov
xchg
ret
fwait
add
mov
popf
and
adc
mov
xchg
ret
add
iret
add
add
add
ret
test
add
add
repnz
nop
cld
jae
add
inc
add
in
nop
leave
jmp
aam
add
add
fwait
popf
push
inc
add
or
add
repnz
nop
cld
jae
xor
or
xor
add
push
mov
nop
leave
jmp
xchg
add
sub
push
mov
xchg
ret
add
add
pop
add
push
push
lcall
nop
cld
jae
add
cmp
inc
cmp
mov
xchg
ret
cltd
add
inc
pop
mov
push
mov
xchg
ret
cmpsl
iret
xchg
and
mov
subl
cmp
repnz
nop
cld
jae
push
xchg
add
shrl
arpl
push
mov
xchg
ret
xchg
popf
add
add
in
inc
add
clc
clc
repnz
nop
cld
jae
add
push
add
das
test
nop
nop
cld
jae
mov
andl
jne
pop
mov
cmp
nop
cld
jae
xor
fwait
ret
es
test
repnz
nop
cld
jae
call
xchg
and
add
repnz
nop
cld
jae
add
dec
sarl
add
repnz
nop
cld
jae
les
jo
add
mov
add
repnz
nop
cld
jae
add
push
or
push
mov
nop
leave
jmp
shr
add
mov
add
clc
repnz
nop
cld
jae
add
popf
add
pop
push
mov
xchg
ret
imul
xor
clc
repnz
nop
cld
jae
add
out
xor
mov
leave
push
mov
xchg
ret
add
addl
pop
jl
clc
repnz
nop
cld
jae
out
sbb
inc
add
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
lods
push
mov
xchg
ret
add
add
iret
mov
inc
inc
sub
clc
repnz
nop
cld
jae
in
add
add
pop
push
push
mov
nop
leave
jmp
xchg
add
cltd
push
inc
cmpsl
roll
jb
mov
in
nop
leave
jmp
rorb
add
jne
add
mov
inc
add
iret
mov
push
in
cmp
nop
nop
cld
jae
cmp
fwait
aam
xchg
cltd
xchg
push
mov
xchg
ret
inc
add
inc
ret
test
popa
add
mov
xchg
ret
cmpsl
add
call
push
jmp
add
add
add
cmpsl
add
mov
repnz
nop
cld
jae
inc
dec
push
cltd
pop
clc
repnz
nop
cld
jae
add
rorb
pop
add
clc
repnz
nop
cld
jae
add
fimull
test
add
clc
repnz
nop
cld
jae
aam
out
mov
push
mov
add
imul
add
clc
repnz
nop
cld
jae
aam
aam
sbb
jge
clc
repnz
nop
cld
jae
add
add
ret
scas
add
clc
repnz
nop
cld
jae
roll
cltd
add
jo
pop
clc
repnz
nop
cld
jae
xchg
les
add
push
mov
push
mov
nop
leave
jmp
add
flds
add
dec
test
push
mov
nop
leave
jmp
xchg
add
add
add
add
nop
nop
cld
jae
add
test
xor
clc
repnz
nop
cld
jae
inc
add
add
jae
add
push
mov
nop
leave
jmp
add
sub
nop
cld
jae
stos
and
add
add
add
add
clc
repnz
nop
cld
jae
add
iret
add
jmp
nop
nop
cld
jae
aam
aam
iret
mov
mov
cmc
cmp
add
add
repnz
nop
cld
jae
mov
ficomps
repnz
nop
cld
jae
add
push
enter
pusha
push
popa
clc
repnz
nop
cld
jae
add
out
ds
clc
repnz
nop
cld
jae
add
jg
out
out
clc
clc
repnz
nop
cld
jae
add
cmc
push
add
clc
repnz
nop
cld
jae
roll
add
data16
nop
clc
repnz
nop
cld
jae
add
popf
adc
add
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
push
addl
sbb
data16
mov
push
mov
xchg
ret
adc
push
rcll
mov
xchg
ret
ret
xchg
rolb
add
fbld
call
in
nop
leave
jmp
add
iret
cltd
inc
add
repnz
nop
cld
jae
lea
adc
inc
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
jmp
incl
test
iret
inc
add
or
nop
nop
cld
jae
mov
add
push
jmp
add
add
in
addl
add
add
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
stos
add
add
sub
repnz
nop
cld
jae
add
add
movsl
sahf
pop
clc
repnz
nop
cld
jae
add
imul
ret
clc
repnz
nop
cld
jae
addl
in
add
and
clc
repnz
nop
cld
jae
flds
mov
add
repnz
nop
cld
jae
push
das
add
add
test
add
out
in
add
add
nop
add
clc
clc
repnz
nop
cld
jae
flds
in
xor
jl
and
in
nop
leave
jmp
call
add
nop
nop
cld
jae
xor
add
xchg
add
mul
sub
push
mov
nop
leave
jmp
cltd
add
pusha
and
cmp
push
mov
xchg
ret
add
ret
sbbl
add
clc
repnz
nop
cld
jae
add
add
rorl
jo
add
mov
push
mov
xchg
ret
test
add
pop
mov
clc
repnz
nop
cld
jae
add
push
and
add
add
push
mov
nop
leave
jmp
add
add
fistl
in
nop
leave
jmp
in
and
add
and
add
inc
cli
add
add
or
jb
scas
xor
clc
repnz
nop
cld
jae
dec
add
mov
or
aam
inc
add
add
jnp
shr
out
add
inc
add
xchg
inc
add
xchg
adc
mov
xchg
ret
xchg
out
add
add
roll
stc
cmpl
push
mov
nop
leave
jmp
cmp
test
incb
dec
cmp
repnz
nop
cld
jae
add
push
in
add
add
clc
repnz
nop
cld
jae
cmpsl
xchg
add
add
xor
xlat
sbb
mov
xchg
ret
jne
add
pop
add
inc
or
dec
les
xchg
ret
add
add
movsl
in
add
mov
repnz
nop
cld
jae
test
ret
out
mov
push
mov
nop
leave
jmp
addl
pop
add
nop
cld
jae
xchg
add
ret
push
add
and
add
repnz
nop
cld
jae
cmp
add
add
sbb
add
repnz
nop
cld
jae
adc
mov
push
mov
nop
leave
jmp
filds
add
sbb
mov
pop
add
add
add
adc
adc
movsb
pushf
aad
div
clc
repnz
nop
cld
jae
inc
out
add
popf
inc
scas
push
push
mov
xchg
ret
pop
add
add
xor
rep
push
mov
nop
leave
jmp
xchg
add
add
push
addl
adc
jne
clc
repnz
nop
cld
jae
add
aam
add
imul
roll
xchg
ret
add
add
add
add
out
jmp
out
add
fldenv
aam
add
and
nop
nop
cld
jae
inc
adc
cmp
dec
add
clc
repnz
nop
cld
jae
xor
add
mov
xchg
ret
add
add
xchg
xchg
dec
pop
push
mov
xchg
ret
add
popf
out
xadd
add
cld
jae
in
add
add
mov
repnz
nop
cld
jae
mov
out
iret
add
mov
nop
leave
jmp
add
iret
iret
shll
mov
push
mov
nop
leave
jmp
aam
ret
shr
jmp
iret
add
add
add
add
roll
lea
fiadds
nop
cld
jae
add
dec
add
fwait
push
mov
add
repnz
nop
cld
jae
out
aam
add
jmp
fbstp
movsl
xor
call
imul
sbb
add
repnz
nop
cld
jae
cmpsl
test
pop
push
mov
xchg
ret
cmpsl
add
add
xorl
nop
nop
cld
jae
cmpsl
call
fwait
mov
mov
add
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
popf
les
movsl
add
mov
dec
push
mov
xchg
ret
add
add
add
dec
inc
add
push
push
mov
xchg
ret
ret
fstps
rolb
mov
add
decl
push
mov
xchg
ret
dec
add
add
add
push
mov
nop
leave
jmp
add
add
add
dec
push
clc
repnz
nop
cld
jae
add
jmp
les
popf
add
fwait
popf
mov
mov
dec
push
push
mov
nop
leave
jmp
sbb
fldcw
mov
mov
xchg
ret
iret
add
popa
cmp
push
mov
nop
leave
jmp
xchg
add
mov
push
mov
nop
leave
jmp
sbb
add
jmp
jp
push
mov
nop
leave
jmp
add
add
jae
push
mov
nop
leave
jmp
add
add
out
mov
test
in
clc
repnz
nop
cld
jae
xchg
test
push
mov
xchg
ret
stos
add
enter
mov
clc
repnz
nop
cld
jae
add
add
pop
pusha
clc
repnz
nop
cld
jae
jne
push
add
add
add
pop
add
push
mov
nop
leave
jmp
add
sbbl
mov
clc
repnz
nop
cld
jae
add
ret
add
mov
xchg
ret
dec
add
mov
mov
mov
clc
repnz
nop
cld
jae
popf
add
pop
clc
repnz
nop
cld
jae
add
add
imul
jns
add
mov
inc
add
fwait
xchg
add
add
clc
repnz
nop
cld
jae
inc
stos
dec
add
push
fsts
mov
push
mov
xchg
ret
jo
add
xchg
rcrb
or
in
nop
leave
jmp
cmpsl
add
xchg
nop
add
repnz
nop
cld
jae
add
add
lea
add
jno
adc
clc
repnz
nop
cld
jae
inc
add
fwait
add
push
mov
xchg
ret
add
in
mov
push
les
add
repnz
nop
cld
jae
shrl
add
jbe
dec
push
mov
nop
leave
jmp
add
add
xor
mov
repnz
nop
cld
jae
les
fldcw
push
mov
xchg
ret
adc
inc
add
or
add
clc
repnz
nop
cld
jae
xor
aam
dec
mov
clc
repnz
nop
cld
jae
add
iret
add
add
pop
sub
push
mov
xchg
ret
xchg
in
aam
add
orl
inc
add
rcrl
ret
addb
and
mov
rolb
xchg
ret
aam
les
ret
jo
popf
adc
push
push
mov
nop
leave
jmp
rolb
mov
xchg
inc
add
clc
dec
inc
clc
repnz
nop
cld
jae
popf
in
ret
cmp
fwait
pop
clc
repnz
nop
cld
jae
xor
xchg
add
add
mov
jle
push
mov
xchg
ret
add
test
mov
hlt
inc
add
add
shr
push
addl
add
nop
nop
cld
jae
add
add
add
add
xchg
or
stc
aam
add
iret
add
add
aam
add
clc
aad
call
clc
repnz
nop
cld
jae
dec
enter
push
clc
repnz
nop
cld
jae
aam
roll
add
in
jecxz
push
stos
clc
repnz
nop
cld
jae
popf
add
cli
ror
clc
repnz
nop
cld
jae
add
add
add
jb
mov
add
repnz
nop
cld
jae
and
add
add
pushl
push
mov
xchg
ret
add
les
add
jnp
mov
clc
repnz
nop
cld
jae
imul
clc
repnz
nop
cld
jae
imul
lea
rclb
cmp
inc
add
add
ret
aam
cmp
mov
nop
leave
jmp
rcll
cmp
repnz
nop
cld
jae
add
cmpsl
add
add
xchg
repnz
push
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
push
add
add
rcrl
repnz
nop
cld
jae
add
imul
lcall
cld
jae
add
dec
add
dec
cmp
repnz
nop
cld
jae
addl
mov
push
mov
nop
leave
jmp
add
add
mov
add
inc
or
add
enter
mov
mov
xchg
ret
add
enter
add
lea
mov
in
nop
leave
jmp
enter
dec
jmp
fldl
xchg
ret
roll
dec
jo
aam
sbb
rclb
roll
xchg
ret
popf
imul
mov
xchg
shl
aas
and
push
mov
nop
leave
jmp
add
in
and
mov
adc
repnz
nop
cld
jae
push
add
add
clc
repnz
nop
cld
jae
cmpsl
add
adc
pop
clc
repnz
nop
cld
jae
add
mov
in
int
clc
repnz
nop
cld
jae
add
add
pop
in
xor
push
mov
nop
leave
jmp
popf
cmp
in
rolb
aam
aaa
push
add
in
nop
leave
jmp
add
stos
add
in
inc
xchg
movsl
pushf
mov
push
mov
xchg
ret
add
add
repnz
nop
cld
jae
in
in
adc
add
dec
push
mov
xchg
ret
add
fwait
addl
add
inc
dec
push
clc
repnz
nop
cld
jae
add
movsl
add
in
call
add
mov
roll
add
and
add
imul
ja
mov
clc
repnz
nop
cld
jae
in
add
adc
mov
mov
mov
xchg
ret
add
add
push
mov
hlt
add
sub
dec
ss
xor
in
mov
clc
repnz
nop
cld
jae
das
add
push
clc
repnz
nop
cld
jae
add
add
rcrl
and
repnz
nop
cld
jae
movsl
lea
add
add
pushl
push
mov
xchg
ret
and
addl
mov
clc
repnz
nop
cld
jae
add
jl
clc
repnz
nop
cld
jae
enter
roll
add
push
mov
xchg
ret
lea
ret
das
rcl
pushl
clc
repnz
nop
cld
jae
xchg
add
call
clc
repnz
nop
cld
jae
rcll
shr
clc
repnz
nop
cld
jae
inc
add
inc
add
adc
mov
cmpw
push
mov
nop
leave
jmp
cmp
add
push
mov
xchg
ret
add
mov
cmp
decb
nop
nop
cld
jae
cmp
enter
jmp
popa
add
repnz
nop
cld
jae
jne
lea
das
fwait
sbb
hlt
repz
clc
repnz
nop
cld
jae
add
add
cmp
xbegin
jae
add
add
sub
xor
push
mov
nop
leave
jmp
add
inc
enter
mov
popf
push
mov
nop
leave
jmp
out
xor
mov
add
xor
clc
repnz
nop
cld
jae
dec
add
lea
mov
cmpsb
int
add
add
add
sbb
add
mov
xchg
ret
sbb
imul
cs
clc
repnz
nop
cld
jae
dec
add
mov
add
push
cs
push
lcall
push
add
mov
push
mov
xchg
ret
add
add
add
mov
mov
xchg
ret
cltd
add
aam
jne
pusha
add
push
push
mov
xchg
ret
push
cmpsl
fwait
ret
add
in
add
mov
push
mov
nop
leave
jmp
fwait
das
add
add
repnz
nop
cld
jae
add
pop
ret
dec
fxch
pusha
push
mov
nop
leave
jmp
and
xor
add
cmp
nop
leave
jmp
enter
flds
add
mov
dec
rep
push
mov
xchg
ret
aam
add
sub
dec
add
mov
xchg
ret
add
xchg
inc
push
das
add
mov
clc
repnz
nop
cld
jae
rcrl
jmp
clc
repnz
nop
cld
jae
add
loopne
jmp
flds
add
and
add
and
mov
pop
loope
add
movzwl
clc
repnz
nop
cld
jae
imul
and
jmp
imul
xchg
inc
iret
add
add
add
mov
mov
mov
add
mov
clc
repnz
nop
cld
jae
add
add
and
mov
repnz
nop
cld
jae
add
sub
in
nop
leave
jmp
add
add
add
lret
in
nop
leave
jmp
add
add
les
jns
es
add
push
mov
nop
leave
jmp
iret
rol
add
mov
add
add
repnz
nop
cld
jae
cltd
add
ja
jne
clc
repnz
nop
cld
jae
filds
stos
call
imul
nop
nop
cld
jae
add
iret
imul
add
add
add
jge
insb
inc
jb
clc
repnz
nop
cld
jae
add
shll
mov
clc
repnz
nop
cld
jae
in
add
and
ret
inc
pop
pop
push
mov
xchg
ret
add
add
add
inc
add
mov
and
push
mov
xchg
ret
lea
add
test
add
clc
repnz
nop
cld
jae
push
cmp
popa
repz
nop
cld
jae
pop
call
add
and
clc
repnz
nop
cld
jae
dec
add
cmpsl
fwait
or
add
addl
add
add
add
add
in
nop
leave
jmp
filds
ret
add
pop
sbb
lock
repnz
nop
cld
jae
subl
es
mov
xchg
ret
xchg
add
inc
in
add
and
mov
lahf
push
push
mov
xchg
ret
popf
jo
add
push
stos
out
imul
popf
jmp
and
pop
add
add
jae
mov
push
mov
xchg
ret
add
pusha
aam
inc
sbbl
nop
nop
cld
jae
iret
les
add
adc
dec
pop
push
mov
nop
leave
jmp
das
iret
add
add
add
mov
nop
leave
jmp
dec
lea
add
push
add
add
clc
repnz
nop
cld
jae
add
push
add
jmp
nop
cld
jae
rcrb
add
xor
clc
repnz
nop
cld
jae
xor
iret
add
mov
test
lock
call
in
nop
leave
jmp
dec
flds
shrl
clc
repnz
nop
cld
jae
add
add
enter
add
push
mov
xchg
ret
add
mov
inc
push
adc
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
popf
add
frstor
jg
clc
repnz
nop
cld
jae
add
xor
push
mov
xchg
ret
xchg
xor
add
scas
ret
clc
repnz
nop
cld
jae
rolb
movsl
popf
ret
add
mov
ret
clc
repnz
nop
cld
jae
add
push
in
popa
pop
mov
push
mov
nop
leave
jmp
lea
mov
cmp
nop
nop
cld
jae
add
add
enter
mov
xchg
ret
inc
add
add
add
xchg
add
add
fyl2x
inc
add
adcl
cltd
lcall
jae
add
iret
rcl
add
or
jge
push
mov
nop
leave
jmp
add
addl
add
aad
add
add
add
pusha
add
rolb
sub
sar
nop
nop
cld
jae
xor
add
mov
nop
cld
jae
add
add
xchg
add
add
clc
repnz
nop
cld
jae
inc
add
lds
inc
push
mov
xchg
ret
jne
add
mov
pop
shl
clc
repnz
nop
cld
jae
cmpsl
add
add
enter
push
mov
xchg
ret
mov
add
fimull
nop
cld
jae
cltd
add
lea
xor
mov
clc
repnz
nop
cld
jae
add
test
mov
nop
nop
cld
jae
fwait
out
add
cmp
add
add
clc
repnz
nop
cld
jae
test
push
clc
repnz
nop
cld
jae
add
in
fwait
stos
add
push
mov
nop
leave
jmp
dec
call
add
add
clc
repnz
nop
cld
jae
add
fldenv
cmpl
push
mov
nop
leave
jmp
add
add
jbe
clc
repnz
nop
cld
jae
add
mov
add
mov
xchg
ret
add
add
mov
dec
add
repnz
nop
cld
jae
add
aam
add
cs
clc
repnz
nop
cld
jae
adc
add
xchg
aad
mov
clc
repnz
nop
cld
jae
add
add
and
add
inc
and
repnz
nop
cld
jae
add
dec
xor
inc
xor
test
ret
sbb
cld
jae
add
mov
add
cltd
imul
xchg
dec
popf
iret
add
les
test
popa
idivb
mov
push
mov
nop
leave
jmp
add
inc
mov
push
push
mov
xchg
ret
mov
adc
mov
clc
repnz
nop
cld
jae
imul
and
push
clc
repnz
nop
cld
jae
xchg
add
aam
in
add
jle
clc
repnz
nop
cld
jae
test
add
push
push
jne
push
mov
nop
leave
jmp
add
adc
fisttps
test
clc
repnz
nop
cld
jae
movsl
add
and
mov
sub
add
in
nop
leave
jmp
iret
push
ret
xchg
pop
xor
mov
push
mov
xchg
ret
test
ret
add
push
mov
xchg
ret
add
flds
add
inc
and
clc
repnz
nop
cld
jae
add
xchg
inc
lds
add
mov
nop
nop
cld
jae
add
popf
add
mov
hlt
or
mov
sub
inc
enter
cmp
ret
add
in
fwait
add
repnz
nop
cld
jae
in
aam
add
add
add
clc
repnz
nop
cld
jae
jne
stos
adc
stos
jb
clc
repnz
nop
cld
jae
inc
inc
add
dec
add
repnz
nop
cld
jae
adc
add
add
push
mov
nop
leave
jmp
add
add
ret
add
xor
xchg
push
mov
nop
leave
jmp
add
cltd
add
add
ret
mov
repnz
nop
cld
jae
add
fwait
add
inc
adc
repnz
nop
cld
jae
add
add
inc
out
dec
pop
push
mov
xchg
ret
enter
fwait
push
out
in
movzwl
push
mov
nop
leave
jmp
xchg
add
das
cltd
add
add
push
mov
xchg
ret
dec
add
and
fwait
in
xor
clc
repnz
nop
cld
jae
dec
add
add
adc
in
and
adc
mov
inc
outsl
inc
add
repnz
mov
pop
in
out
xchg
inc
add
add
add
rolb
mov
sub
add
inc
add
rol
stos
add
gs
pop
push
mov
nop
leave
jmp
in
add
lea
xor
jne
push
mov
xchg
ret
out
add
in
add
xchg
lret
lea
push
mov
xchg
ret
add
fldenv
xor
add
push
mov
nop
leave
jmp
add
clc
repnz
nop
cld
jae
inc
add
fwait
add
add
mov
nop
leave
jmp
pusha
and
jne
add
add
push
mov
xchg
ret
xchg
add
xor
nop
add
jmp
add
add
ret
xchg
dec
add
xchg
add
pop
push
call
or
repnz
nop
cld
jae
popf
mov
jb
mov
add
jecxz
inc
add
add
add
les
mov
xchg
clc
repnz
nop
cld
jae
add
add
shll
mov
xchg
ret
filds
in
add
cmp
add
mov
clc
repnz
nop
cld
jae
add
cltd
pusha
add
fisubl
popa
add
mov
nop
leave
jmp
popf
add
add
pusha
cltd
jbe
pop
mov
clc
repnz
nop
cld
jae
mov
add
add
add
nop
add
mov
jmp
add
iret
dec
filds
add
add
popf
fsubl
xor
add
clc
repnz
nop
cld
jae
push
popf
std
pop
push
mov
nop
leave
jmp
lea
popf
add
cltd
cmpl
push
mov
nop
leave
jmp
mov
addl
inc
add
mov
nop
leave
jmp
add
sarl
add
sbb
repz
mov
xchg
ret
add
xor
add
mov
leave
in
add
jo
add
cmpsl
add
clc
repnz
nop
cld
jae
add
add
pushf
mov
push
mov
xchg
ret
add
add
add
fwait
add
push
cmp
xor
add
clc
repnz
nop
cld
jae
xchg
out
mov
add
repnz
nop
cld
jae
xchg
imul
incl
nop
cld
jae
out
add
out
pop
add
push
incb
pop
cmp
repnz
nop
cld
jae
dec
popf
add
in
add
pop
push
mov
xchg
ret
add
add
inc
add
add
mov
adc
mov
cld
or
nop
leave
jmp
fwait
add
pushf
mov
clc
repnz
nop
cld
jae
add
add
xabort
nop
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
push
add
add
add
clc
repnz
nop
cld
jae
add
add
cmc
adc
movzwl
clc
repnz
nop
cld
jae
out
in
mov
mov
push
mov
nop
leave
jmp
fwait
add
add
add
add
dec
mov
clc
repnz
nop
cld
jae
push
les
add
iret
add
mov
mov
mov
add
push
mov
xchg
ret
inc
aam
add
dec
imul
cld
jae
push
xchg
add
pop
jne
clc
repnz
nop
cld
jae
xchg
add
shl
add
int3
out
inc
add
add
fwait
cmp
push
mov
xchg
ret
in
enter
add
andl
nop
cld
jae
xchg
add
lods
xor
push
mov
nop
leave
jmp
lea
add
fwait
das
add
repnz
nop
cld
jae
mov
push
cmp
inc
xor
sub
clc
repnz
nop
cld
jae
ret
push
add
mov
push
mov
push
ja
add
add
add
loope,pn
and
push
mov
xchg
ret
add
aam
sbb
cmp
mov
nop
leave
jmp
push
add
add
mov
add
add
repnz
nop
cld
jae
popf
filds
add
nop
cld
jae
push
inc
add
mov
jmp
mov
nop
leave
jmp
add
add
dec
aam
push
clc
repnz
nop
cld
jae
add
add
pusha
flds
aad
push
mov
mov
cmp
ds
add
mov
repnz
nop
cld
jae
xor
mov
push
mov
nop
leave
jmp
xor
pop
add
popl
clc
repnz
nop
cld
jae
add
add
add
repz
mov
nop
leave
jmp
add
inc
sbb
mov
add
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
jne
mov
dec
push
clc
repnz
nop
cld
jae
in
movsl
add
fnstcw
cmpl
push
mov
nop
leave
jmp
add
add
sub
clc
repnz
nop
cld
jae
add
add
cmp
add
repnz
nop
cld
jae
ret
inc
dec
addl
dec
add
push
mov
nop
leave
jmp
cltd
aam
xchg
add
add
iret
movsl
add
repnz
nop
cld
jae
add
movsl
jle
push
mov
xchg
ret
popf
add
iret
ret
rolb
mov
filds
xchg
ret
xchg
add
add
sbb
mov
clc
repnz
nop
cld
jae
add
aam
test
sbb
mov
nop
leave
jmp
add
add
add
fcos
loope
repnz
nop
cld
jae
aam
push
in
add
iret
mov
popa
add
repnz
nop
cld
jae
add
add
out
es
clc
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
add
rcr
add
in
enter
clc
repnz
nop
cld
jae
add
adc
clc
repnz
nop
cld
jae
in
add
mov
clc
repnz
nop
cld
jae
xchg
xor
add
push
clc
repnz
nop
cld
jae
in
dec
add
out
rolb
test
cmp
mov
nop
leave
jmp
xor
add
add
cmp
mov
cwtl
pop
cmpsb
fdivrl
cmp
fadds
mov
bound
cwtl
mov
mov
xchg
sub
daa
popa
cmpl
aam
aam
imul
jns
push
sub
add
in
mov
std
sub
gs
adc
add
sbb
add
add
jns
add
xor
pop
hlt
push
add
add
aas
push
inc
add
or
aad
mov
jmp
add
mov
or
mov
popa
idiv
insb
insl
fs
mov
mov
mov
mov
add
pop
movsb
jp
decb
inc
mov
pop
xchg
js
jbe
insb
out
sbb
add
xor
mov
sub
mov
mov
xchg
test
dec
and
mov
iret
cli
lods
fisubrl
dec
push
push
xor
pop
mov
pop
mov
enter
jne
mov
push
add
js
cmp
add
dec
push
movsl
sub
imul
add
add
mov
addr16
xor
lcall
add
add
dec
pop
sbb
add
sub
xchg
add
and
in
imul
add
add
add
lods
dec
in
fbld
mov
mov
push
push
and
mov
dec
js
cmpsb
mov
mov
add
popf
outsl
and
push
add
xchg
add
outsl
mov
mov
lcall
inc
add
push
icebp
ret
xchg
add
sbb
lods
int3
int
faddl
lahf
loopne
mov
insb
adc
mov
mov
aad
sti
xlat
aam
xchg
pop
lret
iret
pop
pushf
inc
fistpl
add
add
test
mov
add
jg
mov
xor
mov
add
cmp
add
nop
add
popa
push
out
sarl
cld
rorl
mov
fsubr
ret
fists
push
inc
dec
call
mov
jnp
xchg
cld
into
icebp
test
movsl
xchg
xchg
aas
lods
sti
adc
jae
add
and
test
jb
mov
xlat
dec
mov
outsl
ljmp
aaa
mov
add
jl
pop
inc
sub
cmc
popf
bound
mov
add
mov
clc
lds
inc
push
add
popf
xor
add
leave
push
cmp
or
movsb
fmuls
fs
add
add
push
jmp
add
mov
in
sub
cmc
jl
lret
lds
loopne
mov
mov
mov
mov
mov
inc
nop
add
and
add
into
test
mov
add
mov
flds
add
add
pop
jnp
outsb
sbb
scas
inc
xchg
and
scas
stos
pop
mov
mov
add
inc
cmpl
xchg
lods
xchg
int
sub
xor
dec
jge
paddd
js
ficompl
lcall
add
mov
gs
push
xchg
das
arpl
sbb
inc
adc
addr16
scas
outsb
addb
mov
fldcw
cmpl
xchg
mov
xchg
push
fisubl
mov
mov
mov
add
jmp
cmp
divl
and
fsubrs
xor
hlt
push
add
add
pop
or
cmc
fxch
mov
cmp
mov
cltd
addr16
bound
mov
xor
mov
mov
rolb
mov
dec
test
jb
mov
pop
mov
jge
add
mov
add
out
jae
adcl
add
inc
mov
or
add
or
aam
frstor
mov
mov
movsb
lahf
int3
negl
mov
outsb
adc
add
in
inc
jge
push
mov
mov
jecxz
add
xchg
sub
add
add
sub
out
lcall
xchg
mov
mov
dec
push
sbb
add
mov
and
mov
fucomip
add
mov
pop
jge
dec
add
mov
repnz
add
push
roll
rolb
mov
outsl
rolb
outsl
rolb
mov
mov
cli
inc
fisubl
rolb
mov
enter
add
pop
in
or
jecxz
test
repz
jnp
mov
inc
pop
or
idiv
dec
push
rcll
mov
jne
fisttps
add
push
mov
mov
ret
stc
stos
sub
add
clc
cmp
add
mov
add
mov
sub
push
movsb
mov
push
leave
dec
jnp
dec
test
stos
dec
pop
sub
addr16
add
iret
iret
imul
adc
add
mov
and
mov
inc
pop
daa
outsl
lea
std
add
mov
in
add
pop
pop
pop
xlat
push
add
push
xchg
pop
mov
add
ljmp
xchg
std
inc
addl
add
or
fcmovne
cmp
xchg
aam
or
mov
les
out
jmp
aad
icebp
int
add
pop
mov
xor
mov
leave
pop
loope
cld
sbb
add
imul
pop
mov
mov
push
cmp
repz
andl
jg
sbb
xor
mov
rolb
mov
xchg
add
jne
pushf
int3
daa
inc
add
inc
add
add
aas
testb
popf
stos
add
mov
add
fists
ljmpw
add
push
std
jno
add
aaa
mov
mov
pusha
add
mov
add
loope
cmpsb
mov
mov
arpl
and
mov
inc
int
sub
ret
in
inc
or
orps
add
mov
add
and
add
mov
add
sub
mov
push
rsm
sbb
pop
in
js
dec
repz
jb
mov
adc
fsubrl
add
add
sub
mov
dec
mov
cld
pushl
mov
sbb
xor
add
lds
std
je
inc
xchg
add
cmp
push
scas
xor
mov
cmpsl
stos
adc
sbb
add
xor
mov
or
and
mov
lds
push
mov
rolb
mov
dec
stc
xor
mov
lahf
sub
cmp
mov
pop
jne
push
mov
add
mov
xchg
cmp
add
inc
bound
mov
mov
sbb
dec
out
loopne
mov
mov
mov
dec
push
data16
rolb
mov
mov
lahf
fnstcw
imul
shl
sahf
xchg
out
jge
sub
fs
mov
push
outsb
sbb
lret
fldt
cli
ret
dec
jge
in
stc
xchg
sub
iret
lcall
setbe
xchg
sahf
bound
mov
add
mov
add
mov
mov
lcall
push
repz
add
mov
mov
mov
sbb
je
push
je
pop
sbbl
test
adc
add
sahf
push
sti
xor
int
lret
mov
addr16
test
mov
mov
sbb
into
jbe
add
out
in
inc
pop
inc
fsubl
cmp
mov
scas
mov
pop
mov
add
iret
test
mov
lods
bound
mov
rcll
mov
mov
mov
in
push
sbb
mov
mov
mov
mov
inc
insb
mov
pushf
adc
mov
mov
mov
scas
aam
dec
sahf
call
scas
push
add
jne
iret
jp
add
push
push
and
mov
inc
adc
mov
jbe
js
xchg
adc
xchg
mov
clc
stos
dec
sub
pop
insb
lcall
push
sbb
es
fld
add
dec
je
xchg
iret
in
out
and
mov
aad
add
mov
mov
add
fidivrl
xor
repnz
push
pop
outsl
mov
add
mov
filds
test
add
push
mov
addb
fcomps
inc
inc
add
push
addb
and
pop
lahf
les
pop
movsl
call
lret
loope
inc
pop
repnz
cli
or
push
fwait
mov
dec
mov
mov
add
sub
adcl
cltd
pop
sbb
ja
movsb
cwtl
mov
mov
lock
iret
pop
mov
mov
in
addb
lock
cmpsb
push
add
xchg
cmp
mov
and
mov
test
add
add
stc
ljmp
dec
inc
add
pop
arpl
inc
jl
xor
add
jae
push
add
xor
jle
ret
push
inc
mov
mov
jle
cmp
mov
scas
cmp
mov
sub
sbb
aad
in
adc
add
sbb
xchg
pop
inc
add
mov
add
add
stos
mov
lock
mov
add
mov
mov
xchg
lods
hlt
xor
sbb
mov
inc
addr16
add
mov
jnp
add
sub
in
xchg
stos
clc
fistpl
mov
add
add
mov
imul
push
sahf
gs
mov
mov
lcall
add
dec
mov
xor
loopne
mov
mov
imul
xchg
movsb
sbb
xchg
rolb
pop
out
or
dec
mov
sub
add
mov
fists
add
ja
out
and
dec
je
lods
fwait
out
ljmp
mov
add
or
movsl
mov
popa
xchg
dec
cli
sbb
repnz
cmp
jne
call
push
and
add
inc
push
add
add
mov
mov
sub
xlat
stc
xor
aam
idiv
sbb
stc
push
out
mov
jecxz
jecxz
pop
xor
mov
shr
mov
pop
mov
or
rolb
mov
daa
int3
shll
insl
nop
add
test
add
sbb
aam
add
in
les
jl
jns
jl
add
daa
daa
push
std
and
mov
arpl
push
aaa
rcl
pop
cmp
pop
cmp
sub
cli
imul
fadds
sbb
into
test
add
mov
sbb
ljmp
mov
lods
cmpl
cld
xchg
jmp
jle
inc
aam
cmp
sub
mov
add
fs
sbb
test
add
cmp
dec
sahf
xchg
add
add
pushf
fisubrs
cs
fstp
jnp
add
loopne
mov
add
iret
xchg
inc
add
fisttpl
sbb
add
mov
or
dec
cli
mov
pop
stos
sbb
out
out
adc
mov
cmpps
mov
das
inc
es
in
and
add
mov
mov
cmpl
pop
push
mov
push
dec
outsb
fdivrs
shll
inc
div
xchg
aad
add
pop
jbe
lcall
push
stos
ljmp
and
ss
add
mov
push
add
add
and
jle
jecxz
mov
add
inc
or
in
int3
icebp
out
in
xor
add
jge
add
daa
rcl
mov
mov
mov
mov
ljmp
mov
cli
push
aam
sub
enter
push
aad
lock
add
xchg
xchg
inc
add
fdivrp
scas
jns
rolb
mov
xor
mov
leave
sbb
les
out
add
into
add
mov
add
rolb
mov
lock
rolb
mov
jns
imul
ja
int
stc
push
loope
lds
mov
add
jp
add
call
add
adc
xor
mov
ror
add
rolb
mov
aaa
sbb
test
cmp
jg
mov
or
pop
imul
dec
mov
mov
cmp
add
jp
xchg
scas
imul
pop
mov
and
or
cs
fyl2xp1
adc
in
pop
cmp
pop
push
add
mov
mov
cmp
mov
rolb
mov
pop
pmullw
add
jp
jmp
cld
loopew
add
xchg
shrl
sub
and
jp
leave
sbb
add
add
int3
incl
pushf
adc
mov
call
test
jo
mov
and
xchg
les
and
sub
xorl
mov
add
addr16
add
adc
pop
lods
dec
mov
idivl
mov
pop
inc
add
add
mov
mov
sti
cmp
js
aam
jo
mov
xchg
mov
fmulp
push
cld
pop
ret
aaa
fsubrs
imul
outsl
inc
in
push
stc
mov
add
loopne
mov
add
sub
fisubrl
add
or
addb
lcall
and
mov
pusha
add
mov
add
xchg
iret
out
call
cmp
mov
add
mov
pop
js
add
mov
nop
add
add
xor
push
push
add
fisubrl
push
fcmovne
addl
out
add
scas
jmp
sub
add
cmc
pop
in
addb
and
mov
mov
int
data16
ret
and
mov
popf
lret
dec
push
xor
scas
mov
cld
addb
and
mov
cmpsl
sbb
loop
mov
jmp
and
mov
enter
mov
mov
xchg
in
add
mov
popa
rolb
mov
mulb
add
xchg
sub
add
pop
lret
mov
js
cmpsb
addb
notb
mov
out
testb
mov
pop
loope
sbb
mov
push
aas
les
pop
rcll
test
or
add
fildl
mov
sti
leave
inc
mov
add
into
imul
add
lock
dec
and
mov
xor
push
repnz
out
mov
jp
lock
or
cld
xor
inc
test
cmp
mov
leave
sub
push
pop
push
pop
fcoml
mov
ja
xor
mov
pop
std
push
add
xorl
inc
sbb
add
lods
xor
mov
adc
mov
lea
in
fidivrs
out
mov
cmpsb
mov
cmp
fldt
in
and
mov
mov
loop
mov
add
decb
jns
cld
mov
mov
add
push
or
test
add
sti
xchg
or
out
iret
mov
mov
lods
aad
stos
cltd
cmpsb
insb
mov
aam
movsl
or
add
mov
mov
in
addb
or
daa
mov
mov
add
add
push
rolb
sub
xlat
mov
repnz
or
arpl
jo
mov
mov
push
mov
cmp
and
mov
mov
add
cmpsb
pop
inc
cmp
cmovbe
mov
add
out
orl
mov
pop
rolb
es
sti
sub
in
jo
mov
push
xchg
xchg
jle
push
shrl
cltd
sbb
or
and
mov
push
cmpsl
pop
inc
pop
mov
fldenv
add
cmp
rorl
push
sub
or
arpl
push
lds
cltd
mov
mov
inc
xchg
or
test
cmp
adc
mov
add
mov
or
sbb
pusha
add
push
add
jle
pop
xor
add
push
add
or
or
cmp
xchg
stos
xor
mov
sub
pop
jmp
xor
pop
dec
mov
xchg
jecxz
add
popf
inc
xchg
sbb
add
mov
addb
clc
daa
js
std
aam
pop
sbb
cmpsl
mov
add
add
ss
imul
mov
and
xor
jo
mov
jmp
pusha
add
aas
and
mov
lds
mov
je
adc
sub
fs
jne
xchg
mov
cwtl
cmp
imul
imul
xor
mov
data16
add
cmp
int
ja
pushf
ret
sbb
inc
push
add
ljmp
out
push
push
xchg
test
mov
push
jno
xor
mov
dec
adc
mov
pop
mov
cli
enter
subl
add
mov
mov
lock
push
faddl
or
push
loope
mov
addb
inc
dec
jmp
mov
adc
cmp
add
mov
mov
add
or
mov
mov
add
call
jge
xchg
jae
xchg
jecxz
lea
shl
fs
or
stc
addb
es
add
add
adc
push
xor
sbb
cmp
repnz
mov
add
pop
xchg
xchg
mov
pop
fisttpll
sti
mov
add
scas
dec
jg
out
sti
lret
mov
sbb
add
jge
gs
add
add
data16
add
sbb
addb
fs
aam
std
enter
add
popa
xor
xchg
mov
call
stos
in
or
add
int
fsub
sub
add
and
mov
mov
push
add
jne
cmp
add
inc
lret
fisubl
fstpl
jne
pop
lds
pop
jae
mov
mov
dec
mov
cmp
cmp
out
push
aas
xor
mov
dec
scas
adc
add
add
add
mov
add
and
mov
fwait
pop
cltd
out
sbb
insl
pop
jae
add
jp
add
mov
add
xlat
iret
jnp
loopne
mov
fdivs
xor
rcrl
mov
and
hlt
adc
mov
add
into
mov
dec
sub
hlt
sub
imul
mov
add
xor
mov
jb
mov
xchg
inc
cli
outsl
aaa
mov
mov
cli
sbb
repz
push
dec
stos
cld
and
shrl
xchg
add
xchg
xor
loopne
mov
rolb
adc
int3
push
mov
fwait
int
xor
add
add
xchg
add
call
icebp
mov
push
lds
int
test
testb
pop
clc
fistpl
pop
test
adc
add
xchg
xchg
pop
in
ret
icebp
mov
add
cld
in
sub
in
xchg
add
add
jae
clc
movl
xor
dec
jo
mov
gs
jae
jns
int
notl
lods
pop
ss
fisubrs
addb
sahf
addr16
add
pushf
mov
jecxz
inc
stc
push
sbb
fiaddl
add
jns
xor
dec
sub
jp
xchg
pop
roll
xchg
mov
push
popa
mov
jne,pt
dec
nop
add
leave
mov
add
fidivrs
sahf
in
add
add
sub
add
or
mov
add
add
cltd
jg
add
mov
add
dec
jge
sbb
stos
inc
or
into
std
adc
mov
mov
adc
adc
pop
adc
adc
add
cmpsb
mov
xchg
dec
push
stc
xchg
into
and
out
lahf
sub
adc
add
pop
xlat
lods
xor
add
mov
mov
add
jle
push
rolb
push
aam
push
add
andps
add
jns
and
push
lea
sub
out
out
daa
stos
mov
push
push
push
cltd
scas
xor
mov
push
cld
dec
xchg
sbb
in
cli
repnz
popf
icebp
adc
sub
mov
mov
lea
xor
mov
lods
sub
jg
xchg
add
mov
ficompl
sub
filds
pusha
add
sub
popl
int
sub
inc
notb
mov
leave
mov
lods
sbb
mov
lcall
idivl
je
mov
pusha
add
mov
add
jg
add
mov
pop
add
sub
push
cmpsb
jbe
sub
mov
cmp
add
mov
xor
mov
add
test
adc
sbb
lret
loope
jp
or
inc
jbe
mov
fdivrs
int3
jb
mov
stc
out
pop
les
fwait
das
sbb
sahf
inc
cmpsl
in
mov
loopne
mov
fsubs
mov
rolb
mov
add
ljmp
push
add
scas
mov
add
ficomps
nop
add
add
mov
xor
mov
popf
jmp
push
add
adcl
cmp
jmp
add
mov
mov
das
aas
lods
lret
mov
add
mov
leave
cwtl
outsl
xchg
adc
push
push
xchg
add
jp
xlat
jb
mov
add
mov
or
pop
add
add
addr16
add
cmp
add
mov
add
outsb
sti
popf
adc
mov
push
incb
mov
cmp
or
and
mov
mov
jg
mov
jne
mov
loop
mov
mov
add
out
clc
lods
sbb
mov
push
insl
mov
mov
add
pop
xchg
jle
in
jbe
xchg
add
fadd
add
mov
and
push
lods
adcl
mov
outsb
mov
cwtl
mov
mov
inc
adc
mov
mov
ss
add
push
aad
add
mov
xchg
push
xchg
mov
add
add
sub
and
push
inc
add
sbb
add
push
test
push
lret
mov
rolb
mov
xchg
mov
lock
pop
and
mov
and
add
add
out
sub
mov
mov
mov
lcall
add
mov
xor
mov
cmp
in
mov
mov
add
sub
aad
outsb
sub
adc
mov
mov
add
ljmp
aas
fsubr
xlat
xor
mov
arpl
mov
ror
inc
lahf
stos
jae
push
xor
popf
mov
or
or
adc
mov
lret
int3
out
jmp
adc
mov
mov
add
mov
addb
hlt
jno
leave
mov
pushl
add
cltd
push
adc
push
sahf
in
xchg
movsb
jbe
pop
and
int3
out
pop
inc
add
test
in
pop
push
mov
sub
fwait
jmp
mov
mov
inc
jo
mov
movsb
xchg
add
cmp
aam
adc
scas
popf
pop
adc
loope
mov
xchg
add
int
mov
lock
mov
pop
cmp
push
mov
dec
dec
cmpsl
add
add
adc
add
nop
add
mov
add
pusha
add
hlt
adcl
je
in
fsubs
idivb
cmpsl
pop
popf
es
pop
and
xor
add
add
dec
jno
mov
rcl
addb
insb
sub
sbb
dec
mov
rolb
mov
add
dec
fs
add
add
mov
add
push
loope
add
cmp
add
mov
and
mov
sub
outsb
xor
repz
inc
ds
movsb
pop
mov
popa
add
jnp
aaa
cmpsb
ret
leave
cmp
lahf
inc
jae
mov
add
add
mov
add
addb
in
aaa
sti
fmull
fdivs
sub
mov
sub
add
inc
add
add
add
mov
aad
add
mov
mov
inc
mov
popf
sub
mov
aaa
pop
jp
repz
ja
add
inc
push
inc
mov
pop
repz
push
adc
add
cwtl
xlat
mov
stos
inc
pop
mov
out
jo
mov
add
sub
icebp
xor
or
add
jns
imul
inc
int3
rolb
hlt
ret
outsl
mov
std
das
popf
lahf
sub
add
mov
add
xor
push
adc
or
test
dec
mov
dec
add
mov
lcall
loopne
mov
popa
stos
jecxz
jecxz
stos
inc
push
add
icebp
rolb
mov
lret
icebp
in
add
fcomps
fsub
add
imul
into
test
add
push
add
add
push
dec
mov
add
mov
push
add
repz
push
xchg
ret
int
in
lret
push
fs
add
add
mov
nop
add
enter
and
or
daa
cmp
add
mov
dec
add
mov
fisubrs
lret
push
pop
inc
mov
cmp
sub
sbbl
sahf
js
jbe
mov
push
adc
mov
xor
mov
xchg
push
add
inc
mov
inc
lret
inc
dec
mov
mov
jne
cmpsl
lds
fidivs
sti
pop
adc
mov
ss
ds
aaa
rolb
mov
pop
and
out
push
push
sbb
das
into
mov
and
cli
lret
xchg
dec
int
add
push
mov
or
add
dec
pop
push
aad
sbb
add
push
pop
mov
jae
addb
fdivs
cltd
data16
or
loope
dec
push
add
dec
daa
pop
mov
mov
and
xchg
inc
add
push
pop
addb
in
sub
fwait
xor
popf
sub
add
inc
add
je
jne
mov
mov
mov
pop
mov
add
or
jne
xor
pop
mov
mov
mov
mov
add
stc
jb
mov
add
mov
cmp
xor
push
inc
fld
add
and
add
mov
add
push
inc
add
iret
test
xor
mov
aas
and
mov
leave
ficoml
hlt
mov
cmp
adc
mov
mov
pop
fnstcw
or
pop
outsb
jb
mov
clc
aam
aas
lret
cmp
jno
into
cmc
sbb
mov
aas
cmp
mov
mov
sti
xor
push
add
jns
into
or
enter
add
add
out
cwtl
xchg
mov
lret
mov
push
movzwl
repnz
sub
xchg
imul
shll
addb
cmpsb
sub
repz
sub
mov
or
or
mov
pop
push
pusha
add
mov
sub
js
ret
into
push
fldt
shl
dec
les
mov
mov
ds
sub
mov
and
jo
mov
add
push
xchg
call
sti
xchg
inc
sub
add
push
cwtl
adc
push
call
addb
pop
push
mov
testl
jb
mov
mov
add
add
fbstp
cs
cmp
inc
add
lds
fildll
sbb
mov
mov
pusha
add
fcmovnb
mov
mov
xchg
add
adc
add
movsb
or
add
ret
sahf
and
repz
sub
xchg
dec
in
pop
jnp
add
xchg
cltd
je
test
or
fadds
add
mov
xor
mov
sub
add
push
add
lods
mov
mov
add
mov
adc
shl
mov
mov
mov
ds
sbb
repnz
sbb
add
cmp
clc
ret
dec
adcl
push
cmp
leave
pusha
add
popa
sbb
add
idiv
xor
test
jp
das
rolb
mov
mov
add
aaa
add
loope
xchg
xchg
addl
out
cmp
add
aaa
pop
fsubrp
jl
pop
push
mov
mov
push
popa
mov
xor
lock
sub
add
out
xchg
cmp
int3
or
add
add
xor
mov
pcmpeqb
test
mov
add
add
adc
ja
dec
and
fsubs
mov
push
add
popf
dec
rolb
mov
mov
sbb
add
repnz
dec
gs
mov
ljmp
sbb
add
daa
mov
fwait
outsb
sub
dec
dec
cs
xor
add
out
loop
mov
mov
adc
les
add
pop
lods
jecxz
xchg
add
mov
clc
dec
icebp
sbb
adc
leave
bound
mov
add
cli
mov
mov
pop
add
and
sub
ret
or
je
mov
mov
add
cli
cs
lods
aad
push
xor
aad
std
adc
jns
or
dec
shll
lret
into
clc
dec
cwtl
pusha
add
push
ret
sub
in
nop
add
or
cwtl
les
push
inc
push
pop
pop
xor
out
cwtl
loope
stos
sub
adc
mov
xchg
nop
add
or
xor
scas
stc
cwtl
sub
add
repnz
das
stos
sbb
jbe
leave
imul
add
xlat
push
jns
int
xchg
adc
shrl
insb
push
adc
mov
add
inc
stos
lcall
adc
popa
add
lods
lds
fcomps
mov
mov
sub
inc
add
cltd
rolb
sbb
mov
pusha
add
popa
aad
sub
mov
in
rolb
dec
jo
mov
and
ucomiss
nop
add
xchg
mov
push
fists
fisttpl
adc
adc
jmp
jbe
pop
pop
sbb
add
ss
loope
dec
sbb
std
and
lock
xor
mov
addl
icebp
push
jae
cwtl
cmp
repnz
mov
pop
mov
out
inc
shl
add
mov
add
or
fisttpl
nop
add
and
test
push
add
mov
add
mov
mov
mov
or
pop
dec
mov
lods
cmp
add
add
movsl
jns
lock
lcall
mov
out
adcl
mov
jnp
repz
push
add
rolb
mov
nop
add
adc
mov
int
xchg
adc
mov
push
out
inc
pop
loop
mov
out
dec
cmp
rolb
mov
leave
test
ror
push
xor
out
or
add
arpl
or
add
fsincos
addr16
mov
add
jl
push
push
jge
es
xchg
ret
inc
add
cmp
repnz
mov
xchg
test
test
in
add
in
js
add
adc
mov
imul
add
cltd
mov
je
test
mov
and
cmp
jnp
add
in
cltd
mov
push
rolb
mov
mov
jnp
ss
adc
ss
add
bound
mov
add
mov
lods
mov
push
jae
sub
pop
fildl
add
adc
mov
mov
imul
push
add
addb
ds
xchg
in
xor
dec
mov
mov
mov
cld
out
add
sbb
leave
test
jae
jge
xchg
sbb
sbb
insl
lahf
jp
test
ss
in
out
in
add
loopne
mov
cltd
lds
lret
cltd
scas
xchg
add
mov
jle
sti
lods
in
fwait
mov
mov
pop
mov
jnp
jecxz
add
add
jl
pop
lcall
sahf
adc
leave
es
mov
rcrl
sbb
push
int
imul
lds
loope
mov
es
out
addb
push
fistpll
lods
arpl
mov
dec
mov
fucomp
frstor
mov
xchg
jbe
add
mov
mov
or
inc
mov
cs
addr16
gs
jb,pn
mov
mov
adc
fwait
in
les
mov
adc
add
mov
jle
mov
mov
cmp
sub
xorl
sub
js
shll
xchg
add
add
insb
lods
ss
cltd
push
jmp
and
mov
push
test
add
into
lcall
pop
std
pop
sub
lea
inc
add
aaa
iret
jnp
rorl
in
cmp
dec
ss
sahf
xchg
add
mov
cmpsl
inc
add
std
xchg
sarl
sub
or
add
dec
add
jecxz
add
mov
inc
add
cmp
sbb
je
sbb
add
mov
mov
or
sahf
inc
add
mov
add
ret
int
add
xchg
add
les
inc
pusha
add
mov
add
ret
std
jns
add
mov
jp
aam
xor
mov
rolb
and
icebp
lods
push
ret
mov
pop
aam
jecxz
fstl
jg
inc
add
add
push
add
xchg
incb
add
cmp
mov
ret
and
outsl
add
mov
mov
mov
mov
mov
outsb
add
inc
push
add
sub
mov
add
add
in
jns
add
add
mov
cmc
fstpt
mov
addb
push
inc
add
mov
add
sub
leave
xchg
add
rolb
mov
add
ret
inc
into
jmp
push
movsb
or
inc
add
push
inc
add
dec
ffreep
dec
aam
add
hlt
cmpsl
dec
sub
js
add
jb
mov
cs
xor
insb
xchg
in
sbb
xor
shll
add
imul
and
mov
arpl
mov
push
push
cmpsl
jns
push
sbb
mov
mov
xor
sbb
stc
inc
dec
insb
push
add
mov
lds
or
push
cmp
inc
iret
aaa
xor
jb
mov
push
add
fs
mov
addr16
push
lea
add
add
dec
mov
mov
xchg
mov
rolb
mov
push
mov
jecxz
iret
cmp
pop
stos
out
xchg
inc
add
inc
push
out
dec
fdivrs
dec
pop
jmp
add
push
add
mov
mov
imul
lea
pushl
add
pop
movsl
loope
lea
mov
and
mov
bound
mov
lds
lcall
cmp
fmuls
mov
and
mov
mov
add
fstl
pop
sub
add
mov
mov
or
add
aad
add
xchg
into
jp
bound
mov
ret
ret
xchg
rsqrtps
mov
mov
lahf
les
and
insl
dec
in
mov
xor
mov
add
pop
add
and
mov
sub
add
mov
add
adc
mov
mov
mov
mov
dec
sub
add
fildll
sub
add
jle
and
mov
sbb
inc
fsubs
push
push
sbb
fdivrs
out
inc
add
mov
add
mov
add
add
sub
bound
mov
fsubl
xchg
in
mov
push
add
xor
add
lea
ljmp
mov
add
pop
out
fidivrl
dec
cmc
sahf
xor
rcll
mov
push
leave
outsb
add
mov
mov
add
mov
add
in
repnz
inc
lcall
imul
cli
imul
or
in
ret
lea
scas
push
xchg
add
mov
add
stc
mov
in
int3
jbe
cmp
pushf
leave
xchg
pop
cmp
add
rolb
mov
sbb
pop
sbb
adc
mov
add
jae
add
loope
stos
nop
add
stos
lods
shr
ret
pop
or
int3
mov
jbe
repnz
xor
daa
fdivrl
xlat
addb
lahf
xchg
in
popa
pop
pop
add
rcll
sbbl
jl
xchg
xchg
aam
insb
xchg
ffree
add
mov
pop
sti
adc
mov
pusha
add
pop
add
out
cli
jmp
add
leave
xor
imul
mov
decb
sbb
sbb
fs
mov
mov
mov
mov
mov
mov
mov
mov
adc
cmp
xor
test
lods
add
sarl
addb
in
lds
insl
dec
daa
cld
in
add
and
mov
adc
out
add
rcll
and
mov
test
add
sub
xlat
fs
pop
sub
cs
sub
xor
mov
push
add
into
mov
mov
add
clc
outsl
push
test
shrl
jnp
inc
icebp
mov
mov
push
jns
add
adc
add
mov
push
insl
or
sub
add
xchg
pushf
sub
inc
or
inc
add
std
shl
pop
leave
inc
add
aad
lcall
jmp
mov
add
outsl
xchg
lds
int
dec
dec
out
push
jne
rolb
aas
cmpsb
xchg
pusha
add
mov
les
fsubr
push
pop
fsub
loope
xchg
xor
mov
out
daa
fistps
sbb
or
cmpl
cs
add
scas
cs
add
add
push
rcll
add
add
lods
bound
mov
out
fdivl
shll
and
mov
pop
jmp
cmp
fcompl
imul
mov
inc
ret
adc
mov
adc
mov
aam
inc
clc
xlat
sbb
xchg
pushf
mov
add
jecxz
inc
inc
add
arpl
inc
xor
mov
adc
dec
inc
ljmp
les
fdecstp
or
add
shll
loope
out
add
or
loope
in
add
sub
mov
mov
cmc
scas
push
fs
loop
mov
mov
mov
mov
and
cld
sahf
adc
mov
jbe
push
ffreep
inc
outsl
cltd
jp
add
mov
int3
pop
pop
dec
lea
sbb
jno
push
leave
lret
add
ret
sahf
out
mov
push
xor
mov
fxam
scas
lds
loop
mov
jge
add
inc
bound
mov
add
dec
mov
aas
cmpsb
inc
hlt
mov
stos
xor
mov
sbb
jo
mov
inc
dec
push
add
addb
lds
add
add
lretw
add
pop
mov
pop
xchg
cwtl
xchg
add
add
push
fchs
add
xor
cmp
xchg
outsb
fcom
ljmp
xlat
jnp
fcomps
insl
cmpsb
sahf
jle
std
inc
or
dec
push
add
arpl
push
xchg
addb
cmpsb
rolb
mov
clc
popf
push
les
cmp
imul
repz
push
mov
xchg
push
add
outsl
dec
mov
add
mov
pop
aam
mov
int
or
ds
inc
int3
xlat
out
push
stos
iret
or
insl
out
inc
pop
sub
nop
add
push
shl
lahf
cli
mov
mov
cwtl
repz
addb
data16
rolb
mov
mov
mov
or
jne
mov
jns
mov
js
mov
iret
push
add
mov
jecxz
mov
fiaddl
mov
push
nop
add
mov
mov
inc
push
fstpt
xchg
lods
xor
mov
test
addr16
ja
mov
add
and
mov
leave
in
add
stc
mov
mov
out
mov
test
les
inc
les
mov
sub
popf
fstpt
add
push
jp
into
outsl
ds
cmp
test
stos
push
js
popf
sbb
je
scas
lahf
cmpsb
jbe
cmp
mov
testb
mov
add
mov
lds
mov
mov
mov
add
mov
faddl
mov
lock
pop
stc
dec
dec
push
xchg
adc
pop
daa
in
and
push
dec
int3
cmpsb
xchg
lret
add
sti
cmp
invd
inc
stos
outsb
rcr
rolb
mov
push
adc
mov
mov
lods
roll
daa
in
mov
addr16
inc
add
test
mov
xchg
cmpsb
xorl
mov
mov
stos
mov
add
rolb
mov
popf
xlat
sub
add
fadds
xchg
adc
add
mov
sbb
rolb
push
push
cmp
push
out
add
jge
add
nop
add
add
mov
insl
rolb
mov
mov
arpl
mov
out
add
add
mov
inc
push
xchg
out
dec
inc
pop
shll
mov
push
add
movsl
add
mov
mov
jbe
cmc
sub
in
insl
jno
iret
loope
imul
outsb
je
xchg
stos
aaa
dec
jp
adc
mov
mov
fidivrs
fs
icebp
xchg
loop
mov
lcall
sub
clc
int3
ret
pop
inc
lret
filds
cltd
lahf
jns
aaa
jp
xor
sub
fadd
pop
pop
rolb
mov
repz
test
xor
add
pop
cmp
popa
xor
mov
loope
jae
xchg
inc
dec
arpl
out
int
add
jge
ja
mov
push
rolb
mov
dec
push
into
aaa
sbb
mov
mov
mov
mov
add
and
pop
or
push
in
or
loop
mov
pop
int
xor
mov
aad
add
mov
data16
lods
rolb
js
dec
sub
mulb
add
add
add
or
pop
add
xchg
add
jb
mov
xchg
popa
addb
xorl
xchg
add
fsubr
int3
adc
mov
loop
mov
es
data16
mov
add
mov
mov
mov
shrl
add
mov
lock
popa
test
pop
test
rolb
mov
imul
ret
aam
fistps
in
fld
in
cmp
lea
mov
push
frstor
cmp
add
dec
jne
cmpsb
adc
mov
mov
mov
add
add
addb
out
pop
sub
add
mov
test
mov
add
mov
push
outsl
dec
roll
mov
xor
mov
adc
mov
jge
jecxz
push
dec
notb
jl
and
mov
pop
daa
or
bound
mov
mov
sbb
jne
sbb
fcmovb
mov
pop
push
cmp
add
lods
repnz
mov
add
mov
lods
imul
jecxz
cmp
push
cmpsl
into
push
add
pop
call
mov
adc
or
add
mov
pop
mov
jmp
or
out
incb
cmp
leave
add
hlt
inc
mov
mov
movups
mov
scas
adc
mov
pop
addr16
ret
outsb
loopne
mov
add
add
cltd
movsb
inc
push
add
sub
js
push
fsubs
mov
add
je
movsl
push
scas
push
insl
insb
rcr
mov
imul
insb
mov
fwait
mov
cmp
bound
mov
mov
div
add
sub
push
fdivl
in
mov
pop
in
mov
mov
dec
mov
mov
sbb
mov
pop
pop
cmc
movsl
rolb
test
mov
cmp
add
xor
mov
cmp
dec
jg
add
outsb
add
xchg
daa
insb
mov
jbe
testb
test
test
push
adc
mov
push
lock
aad
xchg
cmc
dec
xor
mov
out
or
xor
mov
sub
sbb
insb
mov
sub
scas
inc
push
add
mov
adc
mov
test
mov
dec
cmp
popf
push
add
daa
rolb
mov
dec
outsl
loope
int
push
addr16
test
dec
mov
fdiv
xchg
sub
push
mov
mov
add
add
mov
or
dec
jae
addr16
xchg
fwait
and
cmp
and
sahf
jns
jge
or
or
mov
dec
or
jns
pop
in
loopne
mov
or
inc
add
and
mov
add
std
cmpsl
sbb
mov
sbb
and
mov
int
pop
mov
mov
pop
call
aaa
cmc
out
faddl
jae
ljmp
add
mov
call
movsl
mov
add
mov
mov
and
mov
mov
mov
mov
mov
addb
jbe
mov
adc
push
or
jp
and
mov
jge
into
test
gs
jmp
lea
in
and
ret
dec
xor
jmp
rolb
mov
mov
mov
jge
or
pop
add
jne
cmp
xchg
ljmp
rolb
mov
pusha
add
data16
fsubrl
mov
mov
cmp
cwtl
xor
mov
add
xchg
ljmp
mov
scas
enter
pop
and
cs
push
rorw
pushf
push
xlat
bound
mov
cmp
add
je
jbe
dec
cmp
inc
add
mov
in
and
jno
mov
test
sub
add
mov
repnz
lret
adc
rcll
pop
ljmp
xchg
hlt
dec
sbb
lcall
repnz
xor
mov
ja
lahf
inc
xchg
lcall
mov
out
sbb
mov
lret
mov
jns
jns
xor
pop
movsbl
mov
add
out
in
cmp
push
jecxz
jg
pushf
pop
xor
scas
inc
jb
mov
xchg
cmpsl
and
mov
pop
ds
negl
mov
add
pop
fwait
cmpsl
mov
jb
mov
add
lea
stos
xchg
dec
add
add
add
clc
mov
inc
adc
add
mov
out
mov
gs
ret
int
dec
pop
dec
mov
lds
btc
dec
push
add
mov
jg
jb
mov
add
add
xchg
mov
mov
mov
inc
push
clc
adc
inc
fwait
pop
xchg
push
add
out
mov
dec
pop
rolb
mov
push
mov
mov
add
fidivrl
adc
mov
add
jns
sub
and
mov
add
mov
bound
mov
jno
add
push
dec
sbb
je
xlat
xorl
out
ljmp
sub
add
pop
lret
repz
add
aas
scas
or
add
xor
mov
rolb
mov
adc
jg
add
cld
add
mov
add
rcrl
pusha
add
add
mov
add
sub
add
xor
bound
mov
lock
add
xchg
jmp
mov
add
add
insl
call
fistl
add
sub
sbb
into
dec
js
in
jb
mov
ss
add
xchg
lock
add
scas
loop
mov
add
and
ja
shll
mov
mov
add
add
mov
clc
fiadds
popa
iret
xlat
sbb
testb
outsl
nop
add
adc
mov
loopne
mov
addr16
iret
data16
or
xchg
shll
test
addb
jb
mov
jne
out
mov
xor
mov
mov
add
sbb
sub
cltd
jle
pop
dec
fwait
addb
int
enter
mov
mov
inc
mov
mov
xor
mov
test
add
inc
enter
jbe
sarl
adc
mov
jp
sbb
mov
jmp
data16
ss
imul
add
mov
iret
out
inc
in
jge
imul
mov
fisttpll
add
mov
mov
test
mov
cmp
cmp
and
mov
push
rolb
mov
xorl
testl
popa
dec
lock
test
scas
subl
add
mov
add
or
xchg
xchg
imul
fnstsw
xor
mov
insl
or
mov
sub
mov
test
adc
sbb
add
cli
mov
inc
xchg
iret
jo
mov
dec
sbb
add
rolb
mov
dec
data16
push
add
mov
cmp
cltd
test
nop
add
hlt
inc
mov
sbb
push
inc
sub
iret
in
push
loop
mov
mov
ret
mov
sti
call
lahf
mov
mov
gs
add
sbb
gs
flds
mov
mov
cmc
addb
andl
mov
pusha
add
filds
and
xor
add
xchg
and
lea
mov
add
pop
insl
popf
sbb
add
arpl
jb
mov
and
mov
mov
mov
xor
mov
cs
imul
mov
dec
rolb
out
adc
mov
xlat
mov
pop
xor
fsubrp
iret
dec
adc
mov
add
sub
fs
mov
mov
aam
add
mov
sbb
inc
stc
call
inc
xchg
lods
lds
pop
sub
mov
adc
mov
lds
mov
arpl
scas
sbb
jmp
dec
dec
push
push
add
jne
xchg
add
movsb
movsl
das
jp
gs
fistps
std
xchg
or
pop
sub
pop
dec
loope
test
xor
mov
adc
mov
mov
dec
jp
jno
hlt
inc
add
mov
stos
or
add
mov
add
pop
aaa
sub
mov
imul
sub
scas
and
test
add
iret
repnz
mov
mov
fdivl
add
leave
xchg
addb
mov
inc
and
mov
xchg
sbb
stc
ds
inc
mov
and
ret
adc
dec
std
cmpsl
xor
iret
dec
add
mov
in
jns
cli
dec
ret
pop
fdivrs
xlat
dec
mov
add
hlt
dec
jnp
fsubl
xchg
add
and
cmpsl
or
in
sti
push
push
pop
mov
add
mov
xlat
cmc
aas
addr16
adc
mov
inc
scas
push
add
or
mov
lds
repnz
mov
dec
lcall
out
push
movsl
ficomps
xor
mov
filds
add
sbb
cmp
inc
sub
imul
out
notl
add
loop
mov
ljmp
and
dec
pushf
lea
out
ss
ret
xchg
xor
mov
sub
add
dec
mov
or
scas
imul
push
ret
jmp
jge
sti
cmp
pop
xchg
inc
xchg
cmp
xor
add
push
xchg
mov
push
add
mov
mov
add
dec
mov
mov
mov
mov
clc
mov
push
push
or
pop
in
imul
dec
cld
push
notl
mov
ja
scas
or
mov
ret
je
les
sbb
enter
mov
add
mov
into
push
push
mov
mov
mov
cmpsl
inc
xchg
repz
mov
jl
lcall
mov
ljmp
jne
mov
in
sbb
js
jle
nop
add
mov
mov
mov
subl
addb
mov
ljmp
xchg
dec
push
arpl
add
addb
ret
mov
int3
aad
dec
aas
nop
add
inc
jae
jns
lods
mov
add
mov
add
mov
mov
or
mov
ficompl
xor
jle
dec
dec
cwtl
push
test
push
mov
adc
add
mov
mov
enter
call
mov
lods
mov
mov
add
jp
stc
xchg
call
add
push
cld
lcall
push
push
cld
and
mov
cmc
sbb
mov
fildl
or
and
fidivs
aad
xchg
mov
bsf
add
lret
jno
ja
push
fs
sbb
lods
cld
sbb
fidivrl
ss
and
mov
mov
xor
mov
les
mov
add
stos
hlt
pusha
add
fwait
nop
add
out
or
add
mov
mov
cmp
mov
ja
pop
imulb
lds
hlt
adc
mov
ljmp
jg
cmp
xchg
insb
sub
mov
ljmp
mov
cwtl
aam
mov
inc
sub
sbb
es
xchg
lcall
out
and
add
pop
insl
push
rep
push
mov
addr16
add
mov
and
mov
shrl
mov
add
mov
or
dec
int3
cltd
adc
dec
push
int
adc
add
cmpsl
mov
test
ds
jno
add
mov
stc
mov
xchg
xor
in
stos
push
mov
mov
pop
or
add
jmp
cmp
cmp
add
ja
add
add
inc
pop
int
xor
mov
jno
repnz
add
or
xor
rolb
aas
stos
lea
sub
push
out
data16
mov
jg
jg
push
ss
push
imull
scas
lock
rcrl
and
test
lods
leave
jbe
add
add
add
clc
rolb
mov
xchg
or
cmp
add
mov
subl
pop
jb
mov
push
jo
mov
mov
add
push
daa
out
loopne
mov
aam
xchg
xor
mov
adc
in
dec
or
stc
inc
or
mov
cld
outsb
ss
inc
aas
fs
movsl
push
in
sub
add
and
mov
stos
jl
and
mov
add
add
addr16
out
inc
sub
shrl
leave
cmp
dec
push
mov
push
sar
jbe
mov
add
lock
mov
dec
fdivrl
roll
push
xchg
pop
pop
je
ja
insb
and
jae
std
scas
inc
mov
and
mov
lods
jl
add
cmp
daa
idivl
sbb
flds
test
or
jle
add
dec
cwtl
pusha
add
ds
mov
repnz
add
jle
sub
test
cmpps
sub
data16
ds
test
rcll
mov
add
js
add
pop
or
loop
mov
stos
clc
ficompl
loop
mov
test
dec
mov
jnp
out
jbe
push
cltd
into
mov
push
test
pop
add
add
les
add
push
cli
shrl
sbb
jmp
mov
aas
aas
xor
aam
mov
mov
or
pop
hlt
addb
ret
sub
mov
add
out
mov
sub
and
add
pusha
add
sbb
xlat
pop
icebp
mov
push
jne
lods
jne
mul
scas
leave
daa
xchg
push
jae
add
mov
xchg
gs
cmc
fdivp
xchg
bound
mov
inc
fcompl
sti
push
das
xor
aad
add
inc
add
pop
popf
mov
add
pop
and
mov
cwtl
jns
lds
mov
push
lods
loope
repz
popa
js
pop
push
hlt
and
loop
mov
add
mov
xchg
sub
data16
mov
mov
jmp
popa
int3
mov
mov
lods
push
test
pop
mov
jl
out
add
jp
add
push
dec
mov
mov
test
add
add
xor
shll
add
push
pop
add
mov
add
fcoms
aas
pusha
add
shrl
flds
hlt
mov
repnz
jle
lods
fs
ss
mov
ja
push
sub
ja
mov
mov
sbb
inc
mov
and
mov
sub
mov
xor
mov
mov
pop
and
ljmp
shl
add
add
mov
sub
xchg
testb
mov
mov
mov
sahf
jae
jo
mov
popl
mov
sarl
and
rolb
ret
lret
lds
mov
sbb
hlt
mov
add
mov
popa
pop
in
sbb
iret
addb
into
repnz
add
mov
push
popa
inc
push
pop
shll
lock
mov
mov
das
in
rolb
mov
inc
jg
shrl
mov
mov
mov
mov
clc
xchg
inc
sbb
loopne
mov
mov
mov
mov
jl
jecxz
add
dec
jge
jmp
cmp
sbb
push
aam
addr16
mov
sti
addr16
les
pushf
or
jnp
add
int3
xchg
jp
je
or
ds
test
outsl
mov
and
mov
out
repnz
adc
add
mov
jno
in
jbe
je
icebp
push
xchg
xor
lret
mov
push
add
sub
leave
fiadds
mov
add
xchg
loop
mov
push
pop
mov
scas
jl
outsb
or
cmp
stc
movsl
pop
lods
sub
mov
test
ja
fcompl
xchg
in
xchg
cmp
mov
jl
add
xchg
rolb
mov
fcompl
gs
pop
in
out
mov
add
mov
inc
xor
testl
xlat
cmp
push
and
mov
mov
ret
popa
inc
add
scas
dec
daa
push
push
int3
iret
adc
ljmp
add
flds
les
sub
add
scas
adc
mov
add
or
repnz
cld
and
mov
mov
mul
jb
mov
jmp
iret
int
add
mov
jecxz
mov
imul
stos
subl
aas
cmpsl
lret
test
lahf
cld
filds
mov
sbbl
jl
push
hlt
jbe
jl
lcall
mov
jb
mov
mov
and
push
add
pop
hlt
into
dec
movsb
into
xor
or
test
cli
mov
and
add
nop
add
mov
add
jl
push
sbb
add
mov
ljmp
add
decb
lcall
sti
test
and
pop
dec
push
insb
aam
cmp
mov
test
mul
fwait
adc
jnp
adc
mov
pop
ss
lods
clc
loope,pt
pop
fstpt
mov
mov
movsl
mov
mov
sbb
jo
mov
in
std
sub
add
mov
sub
cmpsb
push
repz
shrl
dec
sbb
sbb
add
fwait
add
mov
and
add
xor
xor
add
add
mov
and
cmp
push
aas
aam
or
nop
add
push
addl
xchg
test
inc
int
iret
inc
adc
or
lds
inc
add
add
call
jp
movsl
sbb
mov
mov
xchg
imul
mov
adc
add
jge
push
add
pop
jp
push
xor
popl
mov
pop
mov
loopne
mov
mov
sbb
call
sbb
jnp
fs
bound
mov
add
pusha
add
stos
push
push
mov
fs
stos
push
add
cmp
sbb
call
in
rolb
mov
ret
push
sti
jb
mov
dec
sahf
cmc
fwait
movsb
jae
and
add
push
xchg
cs
mov
inc
add
mov
or
lret
add
add
add
mov
push
addr16
push
push
dec
sahf
lret
or
add
pop
leave
fisubrl
loope
add
lret
daa
sbb
shl
and
mov
cwtl
addr16
sub
in
jl
push
add
add
mov
push
mov
add
pop
pop
xchg
add
mov
push
insb
push
iret
cmp
mov
pushf
xor
mov
mov
cld
or
inc
add
add
mov
loopne
mov
jo
mov
add
cs
movsl
test
movsl
mov
stos
mov
jge
xor
push
add
ret
iret
mov
mov
add
scas
dec
fs
cs
loop
mov
nop
add
sbb
xor
loopne
mov
jecxz,pt
add
fsubrl
inc
push
adc
dec
mov
inc
adc
mov
mov
addl
xchg
aam
pushf
and
sahf
pop
push
add
mov
movsb
aad
add
sbb
cmp
insb
pop
in
nop
add
scas
cli
xchg
mov
mov
jmp
push
sub
pop
cmp
add
mov
addb
test
add
jmp
lods
loopne
mov
das
test
add
fmull
add
mov
and
mov
add
mov
sub
pop
loope
mov
loopne
mov
dec
add
dec
dec
pop
lods
inc
les
jnp
cmp
mov
or
cli
js
jle
ss
pushf
lds
xchg
test
test
add
add
outsl
mov
sub
and
mov
cwtl
outsl
lods
data16
mov
add
mov
add
xor
push
add
lahf
pop
and
dec
test
mov
jb
mov
push
cli
jp
loope
jb
mov
mov
add
data16
add
movsb
xor
bound
mov
aad
xor
mov
loop
mov
je
les
pop
mov
out
fldcw
loope
scas
xchg
lret
out
add
jecxz
pop
jne
jmp
bound
mov
inc
add
scas
or
lods
mov
iret
dec
xchg
push
mov
mov
push
add
mov
xchg
popa
xchg
mov
cmpsl
sub
jo
mov
mov
dec
lea
idiv
push
pop
shll
cs
imul
jns
sbb
rolb
mov
mov
jb
mov
fst
rolb
repnz
add
rcll
pop
mov
mov
and
or
addr16
or
lods
or
mov
cmp
dec
nop
add
xchg
int3
shr
fsubl
add
mov
out
pcmpeqw
sub
sub
iret
sub
cmp
or
cmc
test
lcall
sub
add
stos
mov
xchg
test
cmp
movsb
jle
or
aaa
movsb
inc
add
add
loopne
mov
popa
add
popa
fmuls
shrl
mov
mov
dec
xor
add
in
je
and
sti
push
mov
add
add
lea
add
jns
fisttpl
mov
jae
jecxz
jg
jns
push
lea
push
pop
sahf
sub
mov
pop
fcmovne
sti
xchg
lods
jne
jnp
rolb
mov
addb
addb
jne
sbb
ja
mov
addl
sub
xchg
mov
popa
je
popa
ljmp
and
mov
leave
test
add
rolb
mov
add
test
mov
mov
lock
inc
lret
dec
push
add
icebp
lods
roll
mov
stos
pop
xor
add
call
loope
xor
mov
ficomps
lods
fcmovbe
cmp
lock
xchg
jnp
lahf
hlt
ljmp
dec
push
nop
add
push
rorl
add
add
aaa
xchg
imul
addb
adc
sub
je
inc
add
cmp
jecxz
add
inc
add
dec
mov
add
mov
shr
das
lods
or
mov
stos
cmpsl
push
sub
inc
cmpsl
popa
ja
loope
aas
add
mov
sub
mov
mov
add
movsb
out
pusha
add
sti
adc
add
add
mov
jg
stos
jnp
jo
mov
mov
cmp
int
ret
jmp
xor
mov
rolb
mov
add
and
inc
cmp
add
push
jp
pop
or
ret
jl
dec
imul
cli
jns
add
pop
fs
xchg
cld
movsb
int
or
lahf
enter
xchg
add
test
sti
adc
mov
in
pop
outsl
leave
xchg
scas
mov
std
sub
popa
dec
inc
add
outsl
cmp
cwtl
test
leave
xchg
outsl
jne
mov
mov
mov
mov
movsb
and
mov
das
fs
daa
outsl
in
add
mov
mov
test
mov
add
add
adc
mov
pop
sbb
add
mov
xchg
dec
or
add
sub
aaa
ss
stos
push
cmp
cltd
mov
push
jnp
jns
test
add
add
push
fcmovnb
repz
dec
int
dec
loopne
mov
pop
aam
push
icebp
addr16
add
adc
mov
mov
in
insl
push
add
iret
sarl
or
adc
addr16
mov
dec
cmp
int
fmull
add
mov
stos
mov
add
add
mov
popa
push
push
add
mov
add
mov
mov
mov
add
jmp
call
int
loopne,pt
mov
idivl
mov
or
jp
xchg
pop
mov
rcl
xor
mov
xor
mov
mov
xor
mov
adc
mov
add
movsb
mov
mov
add
push
push
add
fsubrs
jecxz
addr16
and
push
hlt
test
add
and
mov
inc
add
dec
fisttpll
mov
mov
lahf
or
faddl
hlt
mov
mov
mov
mov
pop
pop
out
and
nop
add
adc
mov
lahf
leave
addb
push
add
xchg
dec
les
and
mov
mov
mov
pop
cwtl
push
lcall
mov
mov
imul
jle
movsl
or
mov
cli
into
xchg
add
add
mov
add
mov
add
mov
inc
jae
inc
jae
mov
in
aas
xchg
add
xor
int
shll
mov
insl
push
xchg
xchg
shl
andl
add
mov
xchg
test
add
repz
mov
mov
add
add
mov
add
sub
imul
dec
repnz
inc
push
or
add
push
or
pushf
jmp
add
add
sub
add
pop
fmuls
mov
add
add
xor
mov
jmp
cmpsb
rcr
sub
add
add
int3
cmpsb
out
loopnew
mov
pop
sbb
jae
bound
mov
js
mov
enter
xchg
add
cwtl
addr16
mov
add
out
mov
es
lcall
fnstcw
lods
imul
push
jge
fsub
es
hlt
shrl
adc
mov
pop
jmp
xchg
add
lods
pop
dec
cmp
out
mov
pop
xchg
add
add
add
lds
add
and
adc
mov
out
xor
sub
aaa
into
sbb
xchg
enter
sub
add
cmp
enter
lret
add
cmp
rolb
outsl
sbb
jge
jne
aad
xlat
ret
dec
test
inc
add
or
sub
nop
add
push
inc
andl
add
push
pop
mov
mov
sbb
push
fldcw
into
cli
pop
jl
hlt
xor
sbbl
mov
mov
sbb
add
add
add
add
add
mov
mov
push
xchg
in
addb
aaa
jmp
mov
pop
adc
stos
test
mov
cmp
or
mov
aam
mov
adc
je
lahf
push
jmp
cwtl
fwait
insb
xor
add
mov
or
cmp
cmpsl
lea
add
cld
pushf
bound
mov
fs
int3
jo
mov
rolb
mov
call
xchg
jo
mov
xor
inc
sbb
jge
sarl
arpl
mov
pop
jne
lock
add
jo
mov
add
mov
insl
pop
fiaddl
jnp,pn
loope
leave
imul
xlat
inc
add
sbb
add
cmp
mov
mov
cld
stc
inc
bound
mov
push
add
lods
stos
push
xor
mov
test
mov
inc
add
mov
mov
and
add
aas
imul
add
arpl
stc
sbb
mov
mov
add
outsl
lahf
pop
es
es
and
jbe
jge
mov
movsb
cltd
push
sub
addb
sbb
pushf
adc
mov
add
test
cmp
pushf
pop
xlat
dec
mov
add
mov
xchg
rolb
mov
add
add
pop
sub
das
in
jns
repz
loope
lret
movsb
xor
mov
leave
jae
add
fwait
inc
push
fcompl
mov
pop
adc
mov
rcrl
cmp
or
add
hlt
rolb
mov
add
iret
pop
loop
mov
into
movsb
xor
repz
cmp
dec
pop
into
xor
mov
and
mov
cmpsl
cwtl
lret
or
xchg
mov
mov
scas
rolb
mov
xor
mov
insl
inc
dec
loope
mov
ret
sub
pop
pushf
stos
lcall
das
adc
mov
cmp
inc
in
lcall
cmp
add
fists
add
aad
adc
jp
add
stos
jae
dec
icebp
add
and
sbb
pushf
push
addr16
add
add
insl
ss
adc
add
pop
add
adc
add
push
inc
dec
fcoms
mov
lods
adc
out
into
lods
or
in
sub
jg
clc
dec
pop
dec
inc
xchg
sub
jecxz
cmp
rcrl
in
sbb
mov
adc
mov
pop
and
mov
hlt
jo
mov
add
mov
mov
jmp
loope
gs
inc
inc
push
lret
in
dec
popa
add
fs
fstpt
xchg
lods
add
mov
sbb
hlt
leave
addr16
lods
mov
aaa
ja
xor
pop
xchg
add
cmc
and
mov
insl
cmp
in
test
out
add
mov
sub
mov
in
and
mov
and
sahf
mov
sar
inc
add
packsswb
add
lret
das
jl
lret
add
cmc
mov
mov
cmp
dec
rcrl
pop
xor
add
and
arpl
mov
fcomps
or
fwait
mov
dec
test
out
push
jno
add
push
lds
mov
cmp
adc
mov
add
add
dec
scas
inc
add
repz
jge
ja
rolb
mov
add
mov
add
xlat
cmp
mov
pop
inc
add
mov
mov
cwtl
and
mov
cld
mov
lods
xchg
add
lahf
scas
jne
inc
sub
mov
mov
pop
out
jl
jno
adc
mov
add
rolb
mov
sub
in
mov
int3
inc
cmp
push
ret
fwait
jbe
mov
mov
mov
je
out
mov
mov
and
mov
inc
scas
shll
dec
dec
sbb
cltd
mov
mov
jp
out
insl
pop
das
dec
loopne
mov
mov
add
push
icebp
and
outsb
and
xchg
add
arpl
add
je
sbb
mov
add
lret
jae
dec
push
dec
adc
mov
shrl
push
adc
daa
test
addr16
test
ret
mov
mov
pop
mov
add
out
fildll
xchg
es
js
xor
mov
mov
rolb
push
mov
out
dec
lcall
mov
add
jle
xchg
dec
sub
and
xor
sahf
add
add
mov
push
pop
mov
pop
add
mov
add
add
mov
push
mov
aam
sbb
js
ds
mov
mov
or
mov
aad
in
xor
notb
inc
and
mov
add
repz
call
adcl
xor
jns
push
add
icebp
sahf
scas
lcall
mov
jle
add
add
inc
out
add
mov
mov
mov
pop
out
jp
add
js
add
add
mov
cmp
lret
adc
popf
pusha
add
mov
mov
in
dec
pop
bound
mov
xor
pushf
dec
xchg
test
mov
pop
dec
or
mov
push
cmpsb
in
mov
vhsubps
or
or
jp
mov
add
add
imul
rolb
push
mov
add
cmp
outsl
scas
pop
pop
mov
and
xor
dec
call
add
mov
scas
mov
jae
out
push
cmp
arpl
mov
cs
xlat
insb
ljmp
adc
mov
sbb
xchg
in
outsl
mov
stos
lods
inc
in
test
and
js
adc
mov
pop
dec
dec
or
ja
test
daa
rorl
cmp
inc
aad
pop
out
ss
add
mov
pusha
add
add
add
dec
adc
rcr
sub
jle
push
push
test
add
loop
mov
bound
mov
dec
aaa
or
es
add
add
int
add
movsl
cmp
mov
mov
movsb
sub
test
loope
sub
push
sub
add
mov
inc
jbe
mov
push
add
out
mov
cwtl
clc
sbb
mov
addb
adc
mov
mov
lds
add
fwait
out
push
inc
add
cwtl
hlt
leave
daa
inc
xor
mov
call
inc
push
fdivr
aaa
mov
mov
pusha
add
aad
and
add
rcrl
jp
jg
add
mov
add
movb
jo
mov
mov
insl
mov
cmp
rolb
mov
dec
leave
outsb
jbe
fidivs
gs
pop
pop
pop
dec
iret
push
sub
mov
mov
nopl
in
std
mov
fiadds
daa
or
ret
sbb
pop
push
dec
sbb
jae
repz
repnz
pop
das
xor
fnsave
mov
sub
add
add
mov
add
popf
mov
rorl
mov
pop
insl
cmp
mov
lahf
push
jmp
mov
mov
xor
hlt
jge
add
push
mov
inc
add
int3
ror
insb
cmp
shr
xchg
sahf
xchg
add
mov
jb
mov
pop
mov
xchg
aas
sbb
push
jbe
push
jle
push
add
mov
add
test
mov
add
jge
test
mov
push
hlt
xor
add
call
mov
mov
add
std
rorl
and
mov
add
pop
cmp
sbb
test
sbb
sarl
rolb
mov
mov
mov
addr16
or
stos
ja
or
jp
add
mov
mov
add
push
aad
push
jo
mov
xchg
cld
clc
dec
pop
xchg
pop
clc
adc
jno
stos
sbb
into
ror
xchg
cmp
mov
in
adc
mov
mov
cmpsb
fs
sbb
mov
push
xor
or
dec
mov
pop
int
fs
insl
ret
dec
lahf
cli
pop
fnstcw
xchg
jbe
in
scas
add
mov
add
mov
mov
add
add
mov
push
sub
cwtl
lock
mov
add
mov
call
add
mov
pusha
add
fs
in
test
or
add
add
mov
clc
std
cmpsb
or
rolb
mov
fwait
in
js
sbb
xlat
cmp
mov
xor
push
add
dec
adc
xlat
mov
call
adc
stc
ljmp
inc
cmc
push
aas
hlt
push
pop
divl
add
jb
mov
add
add
dec
loop
mov
les
mov
pop
insb
daa
insl
mov
rol
sbb
xchg
cmp
insb
push
lcall
cs
add
fsubrs
mov
inc
add
push
scas
data16
mov
mov
push
dec
rcll
push
adc
loope
dec
sub
pop
inc
aaa
mov
imul
movsb
call
cltd
jle
push
insb
xor
mov
pusha
add
mov
call
lods
pop
fs
ljmp
add
scas
sbb
lea
add
fstpl
add
add
arpl
xor
loopne
mov
add
and
mov
push
jns
fistpll
pushf
lcall
loop
mov
insb
fldenv
into
shll
fadds
mov
jbe
add
inc
or
lods
cmp
mov
xchg
mov
fsubrl
ljmp
and
andl
adc
jno
add
mov
sub
add
mov
add
mov
dec
bound
mov
mov
je
add
or
aaa
push
hlt
pop
mov
add
loop
mov
and
jae
movsb
icebp
sbb
add
sbb
push
push
mov
ljmp
dec
int3
in
sbb
mov
mov
add
dec
inc
scas
out
xchg
das
lea
popa
sub
mov
pop
jle
cmp
cld
mov
cld
cmp
push
xor
cld
inc
and
mov
arpl
sub
mov
or
xlat
xor
push
fcoml
mov
in
sbb
sbb
add
loope
mov
rolb
mov
call
push
test
pop
push
dec
mov
sub
in
addb
dec
inc
add
pop
xchg
sub
addb
lea
jb
mov
daa
cmp
mov
cld
adc
mov
add
adc
pop
xchg
pushf
xlat
popa
mov
test
fcomps
add
inc
bound
mov
test
test
fs
ret
xlat
imul
push
mov
loopne
mov
pushf
icebp
push
aaa
and
nop
add
push
xor
test
mov
outsl
lret
imul
cmp
or
mov
push
jae
add
push
addb
dec
mov
jmp
test
add
dec
scas
int
xchg
jae
dec
xor
rcrl
jae
add
push
loop
mov
js
mov
mov
outsb
pop
lock
sarl
sub
add
jg
clc
mov
lret
inc
cli
or
out
out
in
sbb
jb
mov
add
aas
mov
mov
add
mov
xorl
push
imul
mov
push
addb
cmp
stc
dec
roll
mov
mov
mov
mov
add
xchg
jmp
test
rolb
mov
cmp
mov
inc
adcl
mov
and
pop
and
inc
es
xchg
gs
icebp
stc
mov
sub
mov
cmc
sub
dec
inc
add
jns
es
or
cmp
mov
ds
je
pop
mov
mov
dec
xchg
inc
jmp
mov
cmpsl
movsl
ljmp
mov
xchg
pusha
add
or
add
dec
mov
repnz
popf
add
mov
cmp
xchg
jnp
out
daa
inc
add
add
popa
mov
add
jle
je
movsb
xchg
sub
and
mov
enter
mov
lea
mov
dec
fsub
dec
cs
sub
mov
mov
push
add
ret
pop
jnp
loopne
mov
jp
push
jae
adc
mov
add
jae
add
xor
mov
add
add
testb
fildll
aas
inc
popa
dec
mov
add
mov
addr16
and
test
out
inc
add
fldcw
clc
stos
push
add
rolb
mov
add
or
add
mov
jb
mov
add
popf
add
add
gs
xor
std
js
pop
stos
scas
lret
rolb
mov
stos
xchg
cmp
cmpsb
stc
in
fldenv
sar
xchg
jecxz
aam
fucomip
mov
pop
inc
sbb
cmpsl
jmp
dec
or
mov
add
testl
and
loop
mov
xor
mov
out
mov
cmp
push
sub
mov
mov
mov
pop
lahf
andl
daa
ret
inc
jp
add
add
clc
or
mov
mov
add
add
ret
push
lret
std
adc
push
xor
mov
mov
cmc
inc
add
inc
inc
add
xchg
aaa
mov
movsb
rcl
or
and
mov
dec
ds
outsb
int
pop
cmp
sub
mov
mov
cmc
ret
dec
rcll
add
or
js
mov
inc
fcoms
adc
out
cmp
test
icebp
scas
cmpsl
cld
xor
data16
mov
or
test
fdivrs
addb
cli
test
add
pop
inc
add
mov
pushf
mov
jae
stc
push
repz
movsb
or
loope
sbb
mov
fs
xor
add
adc
push
add
rcll
add
or
lods
popf
adc
iret
lcall
cwtl
pop
ljmp
aas
in
jg
add
mov
in
loop,pt
mov
add
xchg
mov
add
add
mov
lds
add
sahf
xor
mov
lea
repz
rcll
mov
jle
or
cmp
mov
clc
pop
sub
rolb
mov
jne
push
push
mov
arpl
pusha
add
jo
mov
lahf
or
outsl
mov
and
mov
add
loop
mov
jmp
add
pop
jo
mov
cmp
mov
add
mov
sub
add
adc
add
mov
divb
mov
adc
mov
mov
or
lcall
imul
add
jle
int3
pop
sub
fsub
add
push
adc
mov
pop
insb
pop
fimull
add
leave
mov
jne
outsl
call
clc
mov
pop
mulb
mov
add
mov
mov
sbb
or
test
jecxz
mov
xchg
mov
and
jns
add
mov
pop
mov
mov
dec
push
test
pop
sub
fldl
jno
imul
mov
add
mov
out
addb
fildl
pop
xor
mov
sti
mov
add
add
sub
movsl
arpl
add
mov
jp
push
push
dec
in
add
cmp
mov
fdivl
das
inc
add
mov
lret
fnstenv
pop
ja
jge
scas
jne
cmp
mov
and
mov
cwtl
cmp
insl
jae
into
dec
pop
xchg
movsb
mov
lea
stos
dec
add
mov
xor
cmp
mov
stc
out
jge
repnz
mov
lock
nop
add
pop
rolb
and
pop
aad
cmc
aas
lods
test
mov
push
imul
mov
adc
mov
or
add
popa
or
nop
add
dec
ljmp
add
add
xchg
mov
out
add
gs
mov
add
loope
inc
push
mov
repnz
inc
add
jnp
sbb
out
jno
popa
scas
inc
add
jne
dec
popa
pop
adc
arpl
add
mov
pusha
add
add
jns
cmp
addl
mov
sbb
sub
mov
add
jmp
fcomps
lock
add
xorps
mov
add
roll
cmpsb
lock
test
rolb
mov
mov
addb
adc
mov
stos
rolb
mov
xchg
or
sbb
push
pop
bound
mov
add
div
push
add
xchg
add
mov
sti
mov
dec
mov
addb
push
shll
mov
in
fsts
inc
add
popf
adc
sar
ret
inc
sbb
ja
or
leave
div
sub
add
sti
test
add
imul
ja
add
sub
mov
push
push
ds
cmp
notb
in
dec
pop
sti
pop
and
mov
fildl
mov
dec
addb
push
push
bound
mov
adc
mov
frstor
mov
jb
mov
sub
aad
imul
add
add
add
push
inc
or
jecxz
cmp
jle
add
and
jno
out
pop
inc
add
add
xor
jmp
movsb
test
jecxz
enter
test
jp
cmpsb
mov
sub
mov
mov
lret
mov
pop
sub
jb
popf
jl
and
loope
or
jl
out
icebp
xchg
add
push
adc
cmp
scas
push
mov
mov
jo
mov
insl
lret
mov
xchg
push
add
cld
mov
stc
mov
sbb
or
add
and
mov
pop
jnp
pop
loope
mov
jne
add
mov
xchg
add
add
mov
add
pop
addb
call
pop
adc
and
add
aas
imul
faddl
sub
dec
inc
movl
mov
rolb
mov
shrl
iret
lahf
int
push
gs
xchg
fisubl
out
fwait
pop
pop
push
outsl
mov
add
pop
sbb
add
add
xor
mov
pushf
int
pop
inc
jae
xor
mov
add
mov
mov
add
mov
ficompl
add
xchg
sbb
cli
inc
ljmp
movsl
and
mov
xorl
popa
cmp
add
add
test
ss
popa
fwait
gs
lret
xchg
mov
addr16
jns
add
adc
pop
repnz
cli
pushf
fwait
mov
add
dec
repz
adc
cld
fsubr
mov
insl
mov
enter
add
add
mov
stos
int3
pop
int
stc
std
pusha
add
mov
lods
sbb
mov
push
adc
push
jle
add
mov
mov
or
push
daa
mov
sub
cld
jo
mov
add
xchg
sbb
xor
hlt
movsb
js
xlat
scas
popf
add
pusha
add
lcall
or
push
push
sub
scas
and
add
adc
mov
lcall
mov
out
outsl
aad
push
sahf
cmp
test
mov
outsl
test
mov
inc
insl
addb
add
mov
add
imul
in
cmpsb
int3
mov
hlt
fs
add
mov
add
xchg
push
pop
push
jl
mov
mov
push
mov
mov
repz
and
lcall
imul
and
in
inc
inc
pop
ds
ja
add
inc
mov
daa
mov
lcall
jl
cmpsb
addb
sub
add
mov
pop
jecxz
sbb
ficoml
add
daa
push
add
mov
mov
jbe
jne
jle
rolb
mov
icebp
jb
mov
push
insl
insb
xor
mov
stos
pushf
bound
mov
xor
jns
icebp
jmp
xchg
hlt
add
mov
sub
adc
mov
mov
add
jne
push
fwait
adc
mov
mov
add
in
pop
repnz
in
gs
iret
repnz
stc
pushf
cwtl
fcom
fmull
mov
lods
sbb
xor
jns
adc
mov
ret
xchg
add
push
xchg
data16
loope
inc
inc
push
add
cmp
loope
sub
mov
cmpsb
js
shll
mov
mov
out
nop
add
dec
xchg
add
dec
adc
mov
mov
add
add
mov
add
pushf
jecxz
adc
xor
mov
rcrl
sti
cmp
push
in
lods
xchg
add
mov
dec
js
mov
aam
add
mov
adc
mov
mov
ds
insb
add
test
mov
mov
dec
insb
out
dec
add
mov
add
mov
add
mov
lret
loop
mov
or
mov
ds
sahf
xor
mov
insb
jecxz
add
jb
mov
gs
in
mov
add
mov
fsubr
xlat
les
pop
mov
add
adc
add
fiaddl
add
in
pop
fiadds
mov
add
gs
dec
test
mov
mov
shr
js
or
mov
insb
call
adcl
add
push
dec
push
xor
call
add
addb
jecxz
jno
cmp
cmpsl
pop
dec
pusha
add
mov
in
jge
arpl
lret
jp
add
add
fcoml
add
outsl
sbb
rolb
mov
loop
mov
sarl
enter
push
add
mov
mov
add
dec
pop
outsb
frstor
insb
inc
add
dec
jl
mull
movsb
je
xchg
fcmovnbe
dec
cltd
xor
loopne
mov
lcall
add
pop
add
dec
js
mov
inc
push
push
jl
add
mov
xor
mov
mov
inc
jo
mov
fwait
dec
sahf
js
lahf
xchg
add
lds
arpl
pop
mov
mov
out
jg
scas
or
pop
xor
add
movsb
xchg
test
add
and
mov
outsl
ds
jg
mov
je
rcrl
ds
add
mov
aam
add
mov
pop
inc
add
mov
and
lret
aam
and
mov
adc
mov
mov
popf
or
inc
xchg
loopne,pt
mov
pop
adc
enter
add
mov
and
xchg
icebp
sbb
mov
enterw
in
mov
xor
mov
insl
ss
dec
or
addb
mov
add
push
repz
mov
or
cmpsb
mov
lods
sbb
call
or
enter
psubb
test
add
je
add
addb
scas
test
jecxz
pushf
xchg
bound
mov
rolb
aad
cltd
sub
js
xor
xchg
hlt
lcall
data16
out
ss
mov
mov
add
out
jecxz
jecxz
in
mov
mov
sahf
push
mov
sub
pop
and
mov
cs
nop
add
outsb
sub
mov
ss
imul
repz
mov
mov
ret
fpatan
mov
and
in
ljmp
in
dec
icebp
std
jge
inc
mov
inc
add
aad
push
mov
xchg
add
dec
fnstcw
cmp
ljmp
mov
sub
mov
mov
movsb
stos
je
test
push
push
in
test
add
addb
jge
add
add
xchg
sbb
stos
xor
add
in
pop
mov
and
mov
add
mov
pop
testl
add
mov
int
mov
mov
ret
addb
sbb
add
sbb
inc
and
or
je
addb
mov
lret
mov
inc
add
xor
mov
add
pop
push
mov
mov
mov
dec
xor
inc
stc
les
ret
sbb
or
pop
das
ss
or
pop
inc
add
outsb
sbb
mov
add
xchg
add
psubusb
jmp
rcr
es
add
mov
cmp
xor
and
pop
ja
pop
sub
push
andl
cld
cltd
jne
rolb
mov
add
mov
cmc
add
je
push
cmpl
add
test
mov
es
stos
int3
sbb
add
cmp
adc
mov
cmp
mov
fucompp
jae
mov
sub
add
or
dec
rorl
jg
adc
mov
clc
adc
in
cwtl
lret
mov
mov
mov
xor
dec
das
jnp
adc
dec
and
mov
imul
cmpsb
or
cmpsb
je
mov
dec
push
lods
push
pavgw
xor
aad
mov
add
jp
out
ret
mov
stos
jecxz
repz
lea
aam
movsl
sarl
rcll
mov
cmp
mov
daa
sub
loope
dec
test
cmp
dec
adc
movsl
outsl
movsb
xchg
add
mov
mov
addb
pop
out
push
add
xchg
mov
add
mov
jnp
je
add
jno
pop
jecxz
push
pop
add
jbe
mov
dec
inc
add
mov
out
ljmp
mov
mov
repnz
add
cwtl
push
les
push
stos
les
add
xchg
xor
cmp
cs
sub
jmp
adc
xlat
aam
out
mov
nop
add
das
shl
out
mov
jmp
mov
add
add
push
push
lret
push
add
and
or
push
cmp
dec
push
mov
rolb
mov
js
icebp
pop
mov
lcall
mov
adc
jns
add
fnstsw
dec
rolb
mov
mov
add
or
push
jge
add
jle
push
lcall
mov
imul
imul
inc
push
pop
sahf
fidivrs
scas
fwait
cmpsb
push
lock
push
out
daa
idivb
mov
gs
pop
cmp
inc
outsb
dec
aad
add
add
enter
sbb
cltd
addb
xor
orl
and
push
shl
cli
pop
add
mov
insb
cmpsl
cmc
xor
mov
insb
sbb
scas
jl
aad
pusha
add
out
cli
xchg
adc
out
addr16
movb
mov
push
in
mov
sub
adc
add
dec
icebp
dec
shrl
outsb
out
add
add
pop
mov
xor
cmp
mov
mov
cmpsl
je
testl
add
mov
js
lret
add
add
jb
mov
stos
nop
add
lock
mov
mov
mov
sub
sub
add
in
add
add
inc
scas
call
cmp
sbb
add
inc
aam
shr
sbb
ljmp
add
das
jne
add
cli
sti
mov
jmp
push
xcrypt-cbc
cmpsl
push
iret
mov
shl
add
aaa
add
adc
mov
add
push
pop
cmp
cmp
add
mov
ljmp
mov
add
pop
in
mov
stos
jo
mov
xlat
push
std
jb
mov
inc
xchg
add
mov
sbb
inc
sbbl
pop
and
fisttpll
push
add
dec
ss
jmp
add
icebp
negl
fsub
add
pop
fstps
pop
mov
pushf
fwait
jle
ja
das
cmp
mov
cmp
lds
sub
pop
jmp
idiv
cmp
dec
xchg
pop
inc
jg
dec
and
pop
fnstsw
mov
mov
sahf
pop
sbb
sbb
jo
mov
jg
pusha
add
push
or
xchg
jp
jle
or
add
mov
in
mulb
addb
imul
add
mov
mov
inc
ja
add
inc
add
push
insl
or
mov
pop
test
int3
xchg
in
add
and
lret
or
add
sub
mov
add
cmp
adc
push
add
sbb
dec
inc
pop
xorl
mov
push
add
mov
xor
mov
add
push
mov
mov
mov
add
ret
movsb
dec
sub
jg
imul
add
sub
jnp
add
fnstcw
mov
inc
dec
in
add
mov
mov
pop
dec
mov
add
addb
ffree
and
ret
push
rol
add
lcall
add
mov
cmc
mov
cltd
and
fsts
les
inc
add
popa
ss
mov
and
stos
insl
mov
xor
mov
pushf
outsb
jo
mov
mov
pop
inc
scas
xchg
pop
xor
add
mov
cs
loop
mov
add
mov
mov
enter
inc
je
jecxz
sub
add
test
mov
add
push
fcom
cli
iret
push
add
lock
pop
test
or
in
push
ja
lock
loope
sbb
mov
cmp
mov
mov
punpckhdq
xor
mov
pop
rolb
mov
dec
push
cld
icebp
or
xor
sahf
jb
mov
mov
sub
jle
fistps
inc
mov
arpl
jmp
lods
scas
mov
push
adc
xchg
push
into
fmull
add
in
mov
push
int3
ljmp
test
andl
mov
clc
xlat
fsubl
cmp
mov
mov
jg
es
sbb
std
insb
sarl
test
xchg
fcmovb
add
mov
add
pop
cltd
int3
out
and
mov
adc
cli
stc
sbb
and
mov
sub
adc
mov
adc
mov
add
mov
adc
pop
and
mov
mov
stc
fidivrs
movl
enter
inc
arpl
rolb
jecxz
lods
xchg
sbb
fsub
inc
and
push
sbb
addr16
fstps
cmp
pop
test
add
xchg
leave
xchg
aam
add
fsubs
ret
into
stos
rolb
mov
scas
repnz
adc
mov
pop
adc
jecxz
test
add
xchg
add
sub
loope
arpl
push
pushfw
movsl
stos
add
mov
add
mov
data16
nop
add
cltd
rolb
cwtl
test
punpcklbw
mov
loope
jns
jecxz
pop
mov
xchg
shl
outsb
mov
icebp
fistpl
xchg
lcall
aas
mov
outsb
cs
jg
insl
and
popf
cs
pop
add
movsb
mov
pop
jo
mov
mov
mov
sub
sahf
mov
mov
and
push
add
add
push
cltd
test
adc
xchg
cld
xor
mov
rolb
out
dec
inc
daa
repz
ret
push
inc
insb
mov
add
add
divb
mov
adc
mov
cmc
mov
or
cmp
pop
sub
mov
inc
add
jno
pop
jg
lds
add
sbb
int
and
inc
add
test
fdivrs
mov
add
outsl
lds
xor
pushf
sub
int
add
int
add
mov
mov
pop
aas
jmp
jle
les
and
pop
mov
xchg
cmp
cltd
dec
dec
add
mov
fisubrs
test
call
fistpl
cmc
sbb
xorl
fcmovnbe
mov
adc
mov
cld
movsb
rolb
mov
enter
mov
push
adc
mov
sub
pop
lods
mov
jns
add
mov
mov
daa
stos
shll
cmp
test
aas
cmp
add
add
fidivs
or
js
add
lods
es
cmp
outsb
movsb
rolb
mov
ljmp
mov
cmp
mov
mov
mov
arpl
push
enter
inc
jle
xchg
mov
add
ja
pushf
cmp
jo
mov
jp
cmp
popf
js
mov
nop
add
int
pop
fstps
push
mov
pop
lock
flds
sub
fildl
cmpsb
mov
out
fld
add
aam
shll
add
add
cmp
add
mov
inc
dec
les
mov
stc
push
sub
jne
mov
add
cmp
arpl
ficompl
cmova
hlt
push
enter
je
in
in
push
sub
call
fistpll
add
push
cmp
add
add
mov
rolb
mov
inc
scas
repz
outsb
push
and
mov
out
add
mov
adc
add
xchg
ret
jb
mov
fistl
sahf
push
cmp
aaa
or
xchg
pop
hlt
cmp
loope
das
or
stc
lahf
mov
and
ret
lds
mov
mov
bound
mov
arpl
xchg
push
mov
or
xchg
push
insl
in
mov
rolb
mov
inc
add
aas
inc
mov
jge
jbe
addb
ljmp
outsl
mov
add
jae
add
xchg
jg
pop
adc
jl
add
shll
add
scas
sarl
xchg
cmp
out
cmp
or
lret
push
divb
cmpsb
movsl
aad
sub
loop
mov
add
xor
push
mov
add
add
test
jl
mov
dec
fwait
nop
add
xchg
ds
cmpsb
push
pop
outsl
loope
out
ficompl
cmp
pop
das
dec
mov
loop
mov
mov
sub
aas
mov
add
scas
outsb
rorl
aad
loop
mov
sbb
jmp
cmp
popf
fsubs
mov
sub
add
jo
mov
jo
mov
ret
inc
lds
push
ljmp
fld
add
mov
mov
mov
mov
pop
inc
repz
stos
sahf
mov
add
mov
add
push
les
cltd
push
add
mov
add
jnp
out
mov
clc
mov
mov
filds
push
js
sub
sbb
cmp
mov
add
jp
pop
ljmpw
mov
mov
add
jno
aam
cmp
push
push
push
out
mov
addl
pop
aad
lds
mov
mov
add
mov
jns
test
popf
scas
sub
sbb
test
lahf
roll
mov
push
jo
mov
adc
mov
mov
fwait
stc
cmpsl
inc
add
add
add
add
jns
cmc
sub
out
pop
add
mov
add
inc
mov
imul
pushf
cltd
test
cwtl
aas
pop
inc
cltd
loope
jecxz
addr16
add
mov
stos
cmpsb
push
add
mov
mov
add
adc
ret
push
sbb
pop
js
insb
sbb
cwtl
pop
sub
aaa
pushf
rolb
mov
mov
add
xchg
add
mov
imul
and
cmp
mov
and
mov
mov
loopne
mov
in
mov
inc
sub
aam
lds
lods
pop
hlt
loope
insl
cltd
dec
cmp
bound
mov
enter
mov
push
cwtl
sub
cmp
mov
stc
jg
mov
cmpsl
pop
jecxz
pop
xchg
mov
add
cmp
cmp
aas
pop
bound
mov
add
mov
mov
stos
fnstsw
mov
add
repz
loop
mov
mov
cmp
fcoml
cli
leave
ja
repz
adc
cmp
rolb
stos
fsub
xor
mov
add
out
lea
jmp
ds
enter
stos
and
jp
lods
lea
loop
mov
adc
mov
push
shrl
mov
mov
les
xchg
pop
shrl
mov
mov
adc
rolb
mov
add
pop
mov
add
mov
mov
jae
add
cli
mov
add
add
in
ret
push
jns
std
add
jne
add
mov
xor
mov
inc
lahf
or
add
mov
mov
scas
and
mov
add
mov
inc
jecxz
es
shll
lahf
xlat
inc
or
outsb
hlt
mov
adc
jl
rorl
lods
jbe
and
test
sti
addb
xlat
ds
mov
mov
mov
sbb
add
mov
test
mov
es
lahf
sbb
movsl
dec
arpl
xor
and
sub
pusha
add
add
lds
std
ja
jg
push
or
add
push
add
dec
inc
pop
notb
adc
lea
stos
mov
inc
add
jae
xchg
orl
stc
cmp
pusha
add
adc
mov
pop
inc
cltd
pop
mov
mov
bound
mov
add
add
mov
lret
xchg
rolb
mov
mov
movsb
sbb
lcall
add
rcrl
ja
ret
push
push
mov
or
ficomps
popa
das
in
mov
neg
jl
add
add
add
js
je
add
mov
test
and
mov
dec
and
outsb
shll
push
cwtl
imul
stos
xor
movsb
lods
pop
mov
fidivrl
inc
add
push
add
dec
cld
push
stc
mov
adc
add
test
sub
inc
add
mov
outsl
nop
add
mov
sbb
or
add
pop
lret
xor
out
dec
addb
inc
xor
mov
fsts
lea
call
mov
rol
stos
addr16
out
addl
lds
mov
pop
repnz
loop
mov
pop
sbb
xchg
and
adc
leave
push
jmp
or
in
push
xor
add
loopne
mov
add
pusha
add
add
dec
into
pop
jno
add
add
adc
loope
mov
mov
mov
push
jb
mov
aas
repnz
mov
add
xchg
pop
test
jg
movsb
loopne
mov
add
adc
mov
addb
or
sbb
call
es
fnstenv
dec
outsl
clc
insl
sti
gs
add
imul
mov
cmp
mov
lds
xor
mov
mov
cmp
pop
in
ljmp
cmp
add
add
mov
add
mov
outsl
rolb
mov
sbb
xchg
push
out
das
inc
rolb
movsl
or
jne
into
dec
mov
sbb
mov
fbstp
test
rorl
xor
mov
shll
nop
add
addb
jnp
loop
mov
insl
jp
mov
into
dec
xor
cmc
add
mov
fidivs
mov
mov
insl
shl
cmpl
dec
rcl
mov
mov
aas
scas
jns
enter
mov
cmp
leave
jl
sti
xchg
mov
in
add
mov
js
aam
fdivrs
pop
xor
mov
add
xlat
jge
add
xchg
daa
jle
movsl
pop
sarl
pop
test
ljmp
pop
jbe
add
mov
mov
int3
jmp
loop
mov
mov
fucomip
xor
mov
stos
xchg
xchg
sbb
mov
add
mov
cmp
movsb
aad
push
mov
mov
xchg
add
notb
and
mov
pop
pop
fidivrs
idivl
adc
mov
xchg
or
add
es
pop
scas
jnp
pop
jae
es
xchg
addb
insb
aam
lcall
cmpsb
mov
xor
mov
push
add
nop
add
or
mov
add
scas
gs
cli
pusha
add
add
fdivp
add
mov
dec
lea
aad
add
and
mov
dec
pop
int
filds
inc
ret
outsb
jge
dec
xor
mov
sub
add
loopne
mov
mov
pop
mov
add
cld
dec
jmp
push
int3
mov
fstp
or
lods
sbb
mov
fcmove
inc
xor
mov
add
inc
das
nop
add
add
clc
or
cmpsb
addb
pop
arpl
clc
dec
enter
les
add
or
in
push
pop
cltd
mov
test
mov
sahf
lret
shll
rcrl
sub
jmp
xchg
sbb
in
sbb
add
rorl
xor
mov
in
outsb
fdivrs
mov
add
mov
jmp
dec
add
add
add
mov
add
mov
inc
ja
add
je
insl
lea
fstpl
pop
scas
notl
cmp
test
push
sub
sub
sahf
repnz
adc
cmp
or
jo
mov
cwtl
xchg
das
sbb
rolb
mov
nop
add
inc
movsl
call
pusha
add
cmpsl
cmpsb
or
scas
adc
mov
xor
in
add
or
adc
and
mov
cmpsl
pop
loope
out
inc
jns
push
xchg
enter
hlt
or
add
pop
or
xor
cmp
mov
jb
mov
das
insb
call
pushf
inc
mov
or
xchg
loopne
mov
adc
mov
and
xchg
or
add
or
mov
add
adc
mov
lahf
jb
mov
jnp
and
mov
movsb
pop
xor
enter
dec
rolb
mov
add
add
outsl
mov
loope
mov
mov
push
jo
mov
add
rcrl
push
add
mov
fstpl
fistps
pop
in
pushf
mov
fcompl
and
mov
jle
iret
scas
ret
fldt
sub
cmpsl
scas
leave
mov
aad
mov
add
dec
dec
cmp
add
add
add
mov
dec
dec
mov
mov
call
sahf
fadds
xchg
adc
out
push
add
shll
mov
cmp
in
jns
cmpsl
xchg
int
jae
cmp
add
jl
jecxz
dec
push
cmp
movb
enter
cmpsb
adc
mov
add
inc
add
inc
sahf
sbb
push
das
btrl
fbld
and
das
mov
adc
insl
clc
cmp
jno
mov
les
enter
insl
in
add
mov
mov
and
add
mov
add
mov
mov
jg
addb
sub
mov
sub
mov
nop
add
mov
movsb
pop
dec
push
mov
mov
add
pusha
add
adc
mov
cmc
pop
popf
imul
add
jnp
clc
cmpl
out
sbb
sti
push
mov
lds
mov
add
and
jnp
hlt
cmp
add
add
mov
xor
mov
jne
pop
bound
mov
mov
jnp
loopne
mov
add
je
pop
scas
push
dec
dec
cs
cmp
push
addb
xor
js
cwtl
mov
mov
push
add
cmp
ljmp
push
in
mov
mov
pop
mov
fst
xchg
mov
inc
and
adc
adc
mov
add
add
jne
pop
outsl
arpl
jmp
rolb
mov
loopne
mov
adc
mov
mov
dec
frstor
xchg
rolb
mov
lcall
das
fs
icebp
out
stos
mov
fstpl
lock
add
test
dec
icebp
sub
adc
orl
xchg
loopne
mov
add
pop
and
out
pop
inc
test
mov
in
inc
pop
mov
and
mov
mov
stc
and
add
dec
mov
lds
push
inc
leave
outsl
scas
shll
gs
add
mov
pop
lcall
add
or
adc
dec
mov
mov
mov
fs
fwait
out
add
fnstcw
or
inc
je
dec
xchg
js
mov
inc
add
into
cltd
clc
xchg
mov
add
test
les
lahf
js
fwait
popa
xor
inc
add
add
fs
mov
add
addb
ret
stc
stc
push
test
jb
mov
push
add
add
mov
mov
pop
adc
adc
fucomip
sbb
xor
adc
dec
out
imul
lret
stos
inc
add
add
pop
cmp
add
fnstenv
add
xor
jno
cmpsb
repz
sbb
mov
mov
xor
mov
mov
std
dec
pop
mov
xor
outsb
sbb
test
dec
inc
and
sti
pop
mov
insl
mov
pop
cmc
nop
add
jl
add
add
sbb
fistl
adc
inc
add
addr16
add
inc
test
les
mov
push
pop
repnz
jmp
popa
jecxz
popa
pop
xchg
add
add
pop
js
jmp
or
lahf
out
nop
add
add
and
xchg
add
dec
roll
mov
divb
pusha
add
xlat
jmp
push
cmpsl
jecxz
fucomi
push
and
divl
mov
mov
or
add
add
cli
push
jle
imul
mov
xchg
xchg
data16
stos
leave
in
mov
add
adc
mov
popf
adc
mov
jl
dec
cmp
dec
pusha
add
and
mov
mov
bound
mov
xchg
mov
add
add
mov
gs
repnz
mov
add
in
cwtl
mov
ficomps
jnp
or
ret
test
dec
mov
mov
sbb
movsb
leave
mov
scas
mov
inc
inc
push
add
add
outsl
sahf
jnp
add
mov
mov
imul
icebp
or
add
ffree
mov
insl
dec
test
jecxz
mov
adc
cmp
add
push
cmp
xor
pop
inc
test
add
xor
add
sub
std
push
insb
mov
add
add
bound
mov
add
push
xchg
add
mov
mov
add
mov
sbb
add
xchg
cmp
pop
loopne
mov
pop
and
addb
ret
ja
mov
adc
mov
xor
cmc
insb
cs
scas
add
outsl
js
inc
add
fwait
mov
call
mov
dec
lret
adc
scas
sub
roll
mov
sub
jo
mov
and
mov
jmp
pop
and
push
pushf
mul
add
and
ret
dec
inc
xor
mov
add
test
push
mov
scas
shrl
xchg
cwtl
push
push
in
fs
and
mov
pusha
add
push
test
cmpsl
and
jno
mov
lcall
dec
or
cmp
rolb
mov
dec
fwait
rolb
mov
mov
mov
add
fprem1
fidivs
dec
mov
mov
stos
dec
aad
stos
sbb
out
idiv
aas
cmp
mov
dec
rcll
mov
pop
xor
mov
xor
mov
mov
adc
cltd
dec
icebp
or
lea
mov
dec
repnz
xchg
sbb
jo
mov
dec
fs
clc
pop
mov
add
adc
sarl
cwtl
jp
add
int
scas
ja
pop
xor
mov
negl
pop
aaa
pop
dec
ret
adc
add
mov
in
call
add
pushf
popf
mov
clc
cmp
repnz
addb
inc
sahf
arpl
sti
in
insb
cltd
sub
jo
mov
les
mov
mov
addb
shrl
xchg
pop
outsb
stos
test
add
mov
xchg
mov
add
cmc
add
xchg
add
std
xchg
pop
mov
and
call
in
nop
add
mov
sub
add
fdivrs
push
sbb
dec
xchg
out
push
loopne
mov
sbb
mov
xor
mov
add
lods
stos
fldt
dec
sbb
add
add
test
sbb
incl
sbb
add
mov
movlps
adc
lret
sti
cs
push
add
decb
movsl
in
add
add
mov
into
cmp
add
mov
sahf
mov
cld
int
fcmove
pop
add
mov
addr16
lahf
dec
lock
int3
adc
testl
stc
fs
or
test
xlat
outsl
pop
sub
pop
dec
lods
inc
add
pushf
outsb
faddl
out
rolb
mov
sbb
push
popf
hlt
mov
mov
add
mov
jle,pn
iret
jns
jg
sahf
jl
push
sub
pusha
add
inc
inc
add
test
push
cs
mov
mov
adc
rolb
mov
sub
mov
add
into
cmp
xor
xchg
stos
addb
xchg
mov
fucom
mov
pusha
add
or
add
add
push
and
mov
cld
iret
jne
push
jmp
mov
popa
rcll
mov
push
mov
mov
inc
aam
fwait
jo
mov
sub
xchg
repnz
negl
int3
push
imul
cmp
mov
pushf
fbld
arpl
inc
rolb
dec
and
mov
lahf
adc
xchg
ret
jge
das
fcomps
cmc
mov
pop
addb
adc
pop
jae
sbb
mov
sbb
out
cmp
dec
mov
mov
ljmp
mov
mov
push
cmp
xchg
lret
adcl
add
mov
lahf
jge
inc
add
mov
add
stos
lahf
sbb
xchg
sti
xor
subl
add
adc
mov
cltd
stos
mov
dec
in
inc
jne
mov
cmp
inc
je
cmp
fwait
mov
inc
sub
xchg
add
loopne
mov
mov
add
xor
mov
add
cmp
mov
mov
inc
outsb
inc
add
or
sbb
jno
sahf
mov
mov
add
jbe
inc
cld
ret
fs
repnz
mov
stos
in
inc
lret
frstor
fldenv
and
mov
adc
add
imul
add
iret
cltd
xlat
in
mov
ss
scas
push
add
repz
mov
gs
inc
add
add
call
add
mov
push
cmp
add
xchg
cmp
xor
mov
mov
iret
xor
mov
and
add
insl
xchg
push
sahf
cwtl
movsl
inc
inc
add
push
dec
lds
add
in
pop
int3
sbb
dec
rolb
mov
cmp
push
xchg
jg
mov
add
mov
fldenv
xchg
cld
cmp
mov
cli
loop
mov
pop
lret
mov
cmp
loop
mov
sub
mov
inc
fidivrs
pop
xchg
jmp
fcomps
into
out
mov
pop
adc
test
jp
into
lret
add
cmc
hlt
out
xchg
loop
mov
and
add
push
das
roll
mov
pusha
add
add
add
fsubrs
subl
mov
add
aad
stos
into
or
cmp
adc
mov
cmpsl
nop
add
in
out
jmp
mov
add
push
cmp
add
sub
lcall
mov
add
call
dec
adc
mov
dec
insb
rorl
add
sub
imul
add
scas
push
fmuls
imul
add
in
add
mov
outsl
xor
lock
push
fiaddl
add
mov
add
popa
mov
mov
hlt
rolb
mov
adc
add
stos
push
xorl
or
pop
out
sub
push
jge
xchg
and
mov
mov
mov
add
mov
pushf
addr16
imul
js
dec
and
push
jge
push
addb
lahf
push
loopne
mov
lods
rolb
adc
mov
clc
lret
sti
pushl
insl
mov
imul
mov
add
dec
mov
mov
push
xchg
mov
mov
cmpsb
push
dec
mov
lcall
jmp
lret
fdivrl
addb
ja
and
mov
inc
mov
cmp
mov
mov
shll
xchg
lret
decl
inc
rorl
pop
push
loopne
mov
add
add
mov
loopne
mov
inc
add
jp
ja
fldenv
leave
int
enter
xor
mov
add
mov
add
push
add
push
fs
repz
adc
xor
mov
and
mov
pop
es
mov
fwait
and
mov
out
push
add
lods
mov
push
mov
add
xor
mov
pop
mov
add
mov
imull
jle
sub
push
xrelease
add
mov
adc
repnz
and
mov
testl
addb
rolb
aaa
jns
add
mov
test
dec
pop
cmpsl
add
mov
dec
sbb
jecxz
push
inc
rolb
mov
mov
mov
aaa
sahf
fdivp
test
add
add
mov
icebp
icebp
or
and
inc
enter
add
mov
mov
xchg
daa
mov
mov
add
push
sbb
add
mov
xchg
into
add
push
sbb
pushf
outsl
xchg
pop
push
out
or
dec
repnz
unpcklps
jp
xor
pusha
add
push
mulb
ficoml
add
xor
jae
add
fwait
ljmp
sub
add
sbb
jae
adc
mov
xchg
add
into
call
mov
push
pusha
add
lods
xchg
jl
cmp
cmpsb
adc
stos
xor
xchg
add
xor
es
xchg
fstpl
stos
jge
in
mov
dec
and
mov
filds
jmp
mov
xor
mov
fldenv
test
cvtdq2ps
mov
jge
bound
mov
lea
sbb
or
pop
cmp
jnp
adc
movsl
rolb
gs
test
add
mov
js
inc
add
dec
push
sbb
jbe
xlat
ljmp
pop
pusha
add
mov
pop
mov
popf
fwait
sbb
daa
ret
divps
decl
pushf
push
add
mov
mov
into
sbb
jnp
add
xor
mov
push
dec
in
xlat
or
out
or
insb
push
add
pop
adc
cmp
add
repnz
ljmp
mov
dec
faddl
xor
pop
pop
loop
mov
mov
adc
ret
cmc
in
repz
cli
lahf
mov
mov
fldenv
mov
mov
pop
push
imul
add
mov
scas
push
jle
test
push
hlt
add
inc
imul
je
sub
pop
mov
pop
sbb
add
add
in
inc
sarl
lods
sbbl
int3
and
addb
mov
stc
outsb
mov
mov
xchg
popf
out
dec
xchg
and
mov
and
cmp
sti
jg
sbb
fbstp
or
add
leave
je
add
mov
add
pop
cmp
push
push
add
mov
adc
rorl
lods
dec
shll
mov
cmpsl
pop
outsl
or
xor
pop
sti
push
jo
mov
pop
xor
push
mov
jae
roll
mov
aaa
dec
mov
cli
loopne
mov
cmp
or
daa
dec
mov
and
add
jecxz
adc
into
leave
lahf
rorl
dec
fdivs
add
icebp
daa
pushf
nop
add
sub
mov
xlat
insb
lock
in
add
insl
mov
mov
repnz
mov
fadd
jl
mov
cld
insb
mov
insb
mov
add
add
mov
add
mov
pop
adc
mov
int3
push
rcr
add
mov
add
mov
stos
dec
daa
pop
int3
or
int3
push
inc
mov
add
mov
sbb
lods
adc
sbb
jbe
and
hlt
or
lcall
pop
mov
mov
mov
mov
pop
mov
jmp
mov
mov
mov
sbb
adc
mov
in
es
add
inc
inc
das
xchg
xchg
lcall
loope
fcmovnbe
ds
jbe
daa
jl
js
push
test
sbb
pushf
mov
rolb
gs
call
dec
and
stc
andl
mov
gs
insl
les
xor
aad
add
cmp
cmp
add
jae
add
or
mov
dec
pop
filds
loopne
mov
mull
bound
mov
dec
or
sti
mov
push
add
aas
movsb
cli
rolb
les
xchg
dec
xlat
dec
or
mov
xor
push
imul
cmp
push
lods
lcall
push
cmp
hlt
or
xor
stos
jb
mov
sahf
add
movsb
add
and
jge
fs
sahf
out
add
or
or
lods
lock
test
push
rolb
mov
or
aad
mov
sbb
and
add
mov
pusha
add
add
xchg
popa
in
fisubrl
dec
xbegin
addb
or
notl
add
fnstsw
cmpsb
sbb
movsb
loopne
mov
repnz
pop
movsb
or
add
jecxz
add
xchg
inc
adc
mov
mov
push
fisttps
lods
sub
xchg
addl
add
mov
add
jmp
xor
push
test
addb
add
mov
fcmovbe
add
adc
shrl
xor
mov
pop
in
sti
jge
jmp
cmp
mov
in
fistpll
xor
mov
pop
jmp
lcall
or
xchg
add
mov
imul
mov
bound
mov
mov
mov
xchg
sahf
mov
jno
mov
adc
jne
add
addr16
add
jmp
mov
mov
cmp
add
into
lock
test
aas
incb
fbld
inc
push
or
dec
es
mov
adc
mov
add
add
movsl
enter
sbb
clc
gs
jle
add
scas
repz
movsb
pop
mov
out
or
cmpsl
dec
negb
mov
lods
call
dec
push
movsb
movsl
jmp
into
sub
aad
rolb
mov
inc
jne
jo
mov
mov
pop
cmp
movsl
lret
jecxz
sub
inc
add
dec
mov
mov
cli
lock
jle
jbe
out
mov
scas
inc
add
add
xchg
mov
mov
stos
jbe
add
pop
addb
test
movsb
adc
dec
cmp
add
mov
mov
adc
mov
add
inc
add
add
xchg
adc
add
mov
jne
arpl
add
add
add
or
dec
dec
mulb
push
add
xchg
push
fistps
mov
push
add
xor
mov
mov
loopne
mov
xchg
push
mov
mov
arpl
mov
or
jo
mov
sbb
add
hlt
mov
mov
mov
test
out
inc
sahf
lret
xor
sbb
dec
xchg
lret
hlt
lret
je
jl
fs
push
and
mov
mov
add
or
rolb
sub
or
ss
add
imul
mov
push
inc
hlt
adc
adc
cmp
cmpsl
enter
or
xor
add
lea
mov
sub
add
add
jmp
mov
mov
push
dec
mov
aam
addb
cmp
add
hlt
inc
loop
mov
in
hlt
rcl
bound
mov
add
mov
mov
xchg
add
aaa
sub
inc
cmp
dec
xchg
jl
inc
add
rcll
andl
or
mov
add
outsl
pop
stc
jp
pop
mov
aas
popfw
mov
repnz
push
dec
es
or
add
mov
fldenv
mov
mov
bound
mov
add
daa
and
inc
add
mov
popf
add
add
mov
movsb
loope
add
cmpsb
mov
inc
add
pusha
add
pop
sub
adc
mov
mov
popa
enter
rolb
or
xor
add
icebp
fs
rep
mov
sbb
add
gs
xchg
sbb
lahf
imul
add
jns
xor
mov
jge
shll
adc
mov
xchg
rolb
mov
push
add
mov
lcall
mov
and
cmp
lcall
cli
das
inc
push
cmpsl
lcall
pop
pop
adc
mov
iret
mov
frstor
mov
jmp
movsl
test
andl
int3
sub
insb
stos
xor
mov
imull
outsl
mov
adc
mov
out
inc
enter
push
or
cld
rolb
cmp
aad
add
add
cmp
je
add
mov
and
mov
mov
mov
add
xchg
mov
adc
mov
subl
mov
mov
add
insb
inc
in
pop
ret
out
sub
adc
mov
pop
sbb
xchg
cmp
cmp
lea
add
out
rcll
incl
mov
mov
scas
sub
add
jmp
repz
mov
mov
mov
mov
cmc
je
pop
addb
inc
add
add
mov
lds
cwtl
in
mov
sub
mov
add
push
sti
mov
add
cmc
outsl
cmp
push
add
std
js
jb
mov
jne
add
push
nop
add
add
add
add
out
jbe
add
mov
popa
mov
add
jae
out
scas
mov
lods
outsl
push
sbb
add
int
out
push
xchg
clc
inc
cs
cwtl
adc
add
sbb
adc
mov
mov
mov
add
rolb
mov
mov
mov
mov
add
mov
es
push
mov
xchg
adc
push
outsl
in
mov
aam
cmp
sub
add
mov
mov
lock
subl
imul
aas
aad
insl
pusha
add
add
mov
sbb
not
clts
xchg
xchg
mov
xor
mov
mov
gs
adc
inc
push
cld
pop
dec
xor
mov
sarl
mov
rcrl
add
dec
jae
icebp
mov
add
lret
fistps
mov
push
pop
sub
mov
lods
adc
mov
lock
lret
fisttpll
push
cli
sub
jecxz
xor
pusha
add
add
mov
mov
mov
outsb
aad
mov
add
std
and
xchg
and
jge
insb
clc
iret
xchg
test
aas
fbld
mov
mov
sti
rolb
mov
dec
pop
mov
mov
mov
add
cltd
test
repz
add
or
mov
inc
add
lods
mov
mov
rolb
mov
mov
mov
add
mov
jge
sar
or
aam
dec
add
imul
outsb
imul
mov
sbb
lret
fs
cmp
add
push
add
rorl
out
xchg
imul
add
clts
push
add
add
testl
insb
fdivl
dec
out
insl
testl
jecxz
insb
loopne
mov
push
add
pusha
add
leave
mov
lods
imull
in
stos
sbb
shrl
mov
dec
mov
loope
mov
cwtl
mov
cmp
push
and
inc
xchg
xchg
frstor
ss
or
daa
xor
mov
mov
pop
and
dec
pop
adc
mov
outsl
xor
mov
mov
ljmp
add
jbe
std
mov
add
lret
cwtl
jno
and
and
dec
mov
adc
test
cmp
dec
xor
mov
stos
mov
repnz
popf
jbe
mov
mov
jno
jl
add
inc
lods
stos
jo
mov
fmull
popa
sbb
ss
fbstp
dec
xchg
add
loop
mov
dec
or
inc
dec
test
add
xor
add
fwait
icebp
addr16
sub
repz
and
lods
test
clc
test
in
dec
loop
mov
out
movsl
pop
and
mov
clc
shrl
lahf
push
mov
add
shll
mov
mov
mov
mov
jno
mov
add
test
popa
daa
xchg
xor
out
push
filds
mov
cmc
mov
outsl
pushf
les
sbb
mov
mov
mov
mov
out
add
loope
add
fiaddl
mov
movsb
push
inc
dec
xchg
outsb
test
pop
push
xchg
xchg
ret
adc
mov
insl
fcomi
mov
ja
inc
jae
mov
push
sahf
aas
push
sub
add
mov
lods
jp
cmc
pop
jno
pop
sti
jmp
std
cmpsl
xchg
sub
mov
addb
pop
sbb
outsl
xor
and
mov
add
mov
shrl
push
add
mov
mov
inc
out
lds
rolb
mov
mov
mov
jge
mov
cltd
sub
mov
and
add
sbbl
pop
or
sub
lods
jb,pt
mov
add
ljmp
lea
icebp
out
lret
mov
mov
dec
dec
mov
cltd
jg
ljmp
add
add
scas
mov
add
imul
mov
addb
xchg
pop
push
cltd
lret
pop
outsb
xor
add
fsts
mov
add
scas
pop
sbb
pop
pop
in
mov
dec
mov
movsl
dec
push
add
fstpt
mov
pop
xlat
lret
gs
lret
loopne
mov
add
inc
pop
mov
ret
ja
add
mov
add
cmpsl
mov
jns
inc
stos
jp
fcompl
rolb
mov
lcall
inc
add
mov
push
stos
mov
and
mov
mov
mov
int
sbb
xchg
lods
daa
lea
mov
inc
add
fwait
mov
cmp
jns
push
add
xor
adc
and
mov
addb
test
add
sbb
pop
repz
popa
fldenv
add
mov
lods
dec
mov
mov
and
push
xchg
dec
mov
mov
sbb
add
pop
movsl
cmp
add
xchg
leave
cmp
negb
add
fidivrl
add
jl
lods
sbb
mov
mov
insl
xchg
cmp
push
xor
mov
sub
pop
sbb
add
ret
xor
mov
insb
out
push
xchg
xor
mov
or
pop
int
mov
sbb
ljmp
arpl
mov
dec
mov
add
clc
jns
test
cmp
mov
cs
dec
sub
leave
enter
fldt
loope
hlt
jbe
xor
rolb
push
dec
fnstenv
add
gs
pushf
mov
add
mov
push
mov
lea
xor
dec
test
iret
mov
jg
inc
adc
xchg
pop
adc
mov
add
mov
mov
iret
ljmp
add
cmp
adc
add
pop
add
push
lret
xlat
mov
repnz
add
je
xor
in
repz
icebp
lcall
mov
out
fldt
add
leave
shr
imul
cmp
add
lock
push
test
aad
add
and
mov
mov
add
mov
mov
sub
or
add
mov
mov
mov
sti
bswap
test
rolb
mov
mov
mov
xorl
sarl
and
add
mov
pop
gs
jmp
repnz
popf
xchg
imul
jae
xor
mov
pop
lret
cmc
xchg
add
mov
icebp
jge
test
push
arpl
iret
stos
mov
mov
jl
pushf
adc
sbb
mov
icebp
xchg
not
add
pop
and
divb
arpl
lds
psllq
xor
add
push
test
adc
out
adc
stos
lret
xchg
mov
cmc
xchg
call
add
test
movsl
test
mov
add
cmp
jbe
pop
or
xchg
pop
adc
mov
add
xchg
adc
nop
add
mov
dec
sub
test
stos
shrl
fmulp
cwtl
sbb
add
roll
mov
mov
hlt
mov
xor
dec
cs
add
add
mov
mov
add
insl
push
pop
scas
push
jo
mov
add
pop
push
pop
xor
mov
rolb
jb
mov
push
add
lods
je
inc
add
jp
mov
out
cmpsl
sub
scas
movsb
imul
ret
mov
mov
mov
cwtl
mov
call
ret
mulb
add
mov
dec
push
xlat
ja
mov
addb
mov
mov
mov
jnp
add
mov
fucomip
cmp
nop
add
sub
jns
push
sti
aad
insl
fdivr
mov
arpl
mov
add
xchg
push
cltd
lods
or
push
test
add
mov
mov
test
xchg
sarl
leave
mov
jge
ret
mov
cmp
loopne
mov
popf
jp
aaa
addb
