mov
in
in
call
loop
and
loop
call
loop
xor
in
in
in
in
out
in
call
loop
adc
in
in
loope
in
out
in
loop
in
loope
in
in
in
loope
in
out
in
out
in
jecxz
in
loop
in
out
in
out
in
loop
in
jecxz
in
jecxz
in
loop
in
loop
in
jecxz
in
out
in
out
in
out
in
in
in
call
loop
push
loop
in
loop
in
call
loop
inc
jmp
loop
adc
loop
push
in
in
loop
in
out
in
out
in
out
in
in
in
call
loop
int
loop
fs
in
loop
in
jecxz
in
loope
in
in
in
loop
in
in
in
in
in
out
in
out
in
in
in
out
in
out
in
in
in
in
in
out
in
call
loop
push
loop
in
out
in
loop
in
in
in
out
in
jecxz
in
jecxz
in
out
in
jecxz
in
in
in
jecxz
in
jecxz
in
call
loop
iret
in
in
in
in
jmp
loop
aas
jmp
loop
aas
jmp
loop
mov
loop
fsub
loop
cmp
loop
jne
loop
imul
in
out
in
jmp
loop
cmpsb
out
in
out
in
loope
in
out
in
in
in
loop
in
jecxz
in
out
in
out
in
loope
in
loope
in
in
in
loop
in
in
in
jmp
loop
dec
jmp
loop
movsb
call
loop
mov
out
in
in
in
jecxz
in
loop
in
jecxz
in
call
loop
push
jecxz
in
loope
in
loop
in
in
in
in
in
out
in
call
loop
repnz
in
loop
in
in
in
loop
in
out
in
in
in
out
in
jmp
loop
js
loop
daa
in
in
loope
in
out
in
out
in
out
in
jecxz
in
in
in
jecxz
in
loope
in
jecxz
in
jmp
loop
add
loop
pop
loop
in
in
in
out
in
jecxz
in
out
in
out
in
jecxz
in
out
in
jmp
loop
push
jmp
loop
and
loop
out
loop
insb
call
loop
loop
in
jecxz
in
call
loop
cmp
loop
sub
loop
pop
out
in
out
in
in
in
in
in
call
loop
push
call
loop
mov
loop
jae
loop
je
loop
and
loop
push
in
in
out
in
loop
in
call
loop
sub
loop
push
in
in
jecxz
in
in
in
jecxz
in
loop
in
jecxz
in
in
in
in
in
jecxz
in
out
in
loop
in
loope
in
call
loop
adc
loop
shl
loop
push
jmp
loop
insl
loop
in
in
in
call
loop
jge
loop
or
call
loop
jnp
loop
loop
call
out
in
jecxz
in
loop
in
in
in
out
in
out
in
call
loop
repnz
in
jecxz
in
out
in
loop
in
loop
in
loop
in
jecxz
in
in
in
loope
in
out
in
out
in
out
in
in
in
in
in
loop
in
jecxz
in
loop
in
out
in
in
in
in
in
loop
in
call
loop
sbb
loop
stc
call
loop
mov
loop
iret
in
in
in
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
out
in
call
loop
inc
jecxz
in
out
in
jecxz
in
loope
in
out
in
out
in
loop
in
out
in
out
in
out
in
in
in
call
loop
pop
out
in
out
in
jmp
loop
psubsb
in
in
in
loop
in
call
loop
in
loop
outsb
loop
in
loope
in
jecxz
in
jecxz
in
loop
in
call
loop
shl
in
out
in
loope
in
in
in
out
in
in
in
out
in
call
loop
mov
loop
inc
jmp
loop
adc
loop
lahf
out
in
loope
in
in
in
jecxz
in
loope
in
jmp
loop
and
in
in
call
loop
cmpsl
jecxz
in
out
in
jecxz
in
call
loop
fwait
jecxz
in
out
in
in
in
out
in
out
in
loop
in
in
in
call
loop
insl
jecxz
in
out
in
jmp
loop
movsb
in
in
loope
in
out
in
call
loop
test
in
in
loop
in
jecxz
in
in
in
out
in
loop
in
in
in
in
in
call
loop
cmc
out
in
loope
in
in
in
call
loop
aam
loop
mov
loop
fucomi
loop
js
loop
pop
out
in
out
in
in
in
loop
in
in
in
loop
in
out
in
loop
in
loope
in
out
in
call
loop
fsubp
loop
mov
loop
mov
loop
ljmp
in
loop
in
out
in
loope
in
call
loop
data16
in
call
loop
mov
loop
mov
jmp
loop
insl
out
in
loop
in
jecxz
in
loop
in
call
loop
mov
loop
add
loop
jle
loop
out
in
in
in
call
loop
outsb
in
in
loope
in
loop
in
in
in
jecxz
in
loop
in
in
in
loop
in
out
in
in
in
loop
in
loope
in
out
in
loop
in
out
in
call
loop
and
loop
or
call
loop
mov
loop
mov
jecxz
in
loop
in
loope
in
out
in
call
loop
stos
loope
in
call
loop
outsb
loope
in
out
in
loop
in
call
loop
popa
jecxz
in
jecxz
in
in
in
loop
in
out
in
out
in
in
in
loop
in
out
in
loope
in
jecxz
in
in
in
jecxz
in
call
loop
and
loop
cwtl
out
in
jecxz
in
call
loop
mov
jecxz
in
out
in
out
in
in
in
out
in
loop
in
out
in
in
in
loope
in
call
loop
sbb
loop
mov
loop
add
loop
popa
jecxz
in
loop
in
in
in
loope
in
loop
in
in
in
out
in
loop
in
out
in
loop
in
jecxz
in
out
in
jmp
loop
or
loop
jl
loop
and
in
in
in
jecxz
in
in
in
loope
in
out
in
out
in
in
in
out
in
loop
in
out
in
loope
in
loope
in
loope
in
out
in
call
loop
ret
in
loop
in
loope
in
jecxz
in
loop
in
jecxz
in
call
loop
mov
loop
jge
loop
cmpsb
in
in
out
in
jmp
loop
fsub
loop
jl
loop
cmp
loop
das
jmp
loop
cmp
loop
out
loop
in
in
in
loop
in
loop
in
in
in
loop
in
in
in
out
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
in
in
jmp
loop
pop
out
in
call
loop
cmp
loop
push
out
in
in
in
out
in
out
in
out
in
jmp
loop
jle
loop
dec
call
loop
out
in
loop
in
out
in
in
in
loope
in
jecxz
in
out
in
out
in
out
in
loop
in
loope
in
in
in
loope
in
call
loop
inc
call
loop
pushf
call
loop
pop
jmp
loop
jge
loop
into
loope
in
call
loop
insb
out
in
loop
in
in
in
jmp
loop
push
in
in
out
in
out
in
jecxz
in
out
in
jecxz
in
call
loop
in
loop
xor
loop
mov
loop
mov
loop
adc
loop
in
loop
psubsb
in
jecxz
in
out
in
jecxz
in
out
in
loop
in
in
in
in
in
call
loop
in
out
in
call
loop
insb
out
in
in
in
in
in
loope
in
out
in
in
in
in
in
loop
in
loop
in
loop
in
in
in
call
loop
jg
loop
popa
call
loop
jne
loop
ret
in
in
in
in
in
loop
in
loope
in
in
in
in
in
call
loop
jo
loop
or
call
loop
aaa
in
in
in
in
out
in
in
in
out
in
loop
in
loop
in
jmp
loop
cltd
in
in
out
in
jecxz
in
in
in
out
in
in
in
loope
in
call
loop
es
in
out
in
out
in
call
loop
cmp
loop
imul
loop
lret
in
out
in
out
in
in
in
out
in
loop
in
jecxz
in
call
loop
test
loop
movsb
jecxz
in
call
loop
mov
loop
mov
in
in
jmp
loop
out
loop
and
in
jmp
loop
out
loop
dec
out
in
loope
in
in
in
out
in
in
in
call
loop
lret
in
jecxz
in
loope
in
call
loop
mov
loop
pop
out
in
loope
in
in
in
out
in
loop
in
in
in
call
loop
dec
jmp
loop
and
loop
mov
loop
mov
loop
mov
loop
cltd
loop
in
in
in
jmp
loop
mov
loop
pop
in
in
in
in
loope
in
jecxz
in
loope
in
in
in
in
in
call
loop
dec
jecxz
in
loop
in
out
in
call
loop
popa
in
in
in
in
jecxz
in
in
in
in
in
out
in
loop
in
in
in
jecxz
in
in
in
out
in
in
in
in
in
out
in
loop
in
out
in
in
in
out
in
in
in
in
in
out
in
out
in
out
in
in
in
loope
in
call
loop
cld
in
in
call
loop
push
loop
in
in
in
loope
in
in
in
loop
in
out
in
in
in
in
in
loop
in
in
in
loop
in
out
in
loop
in
call
loop
jecxz
loop
jo
loop
stos
in
in
out
in
in
in
out
in
loope
in
in
in
loope
in
out
in
in
in
out
in
jmp
loop
out
in
out
in
out
in
out
in
out
in
in
in
call
loop
push
jmp
loop
call
loop
xchg
in
in
jecxz
in
loope
in
call
loop
adc
loop
lret
in
in
in
jecxz
in
in
in
out
in
in
in
in
in
loope
in
in
in
out
in
in
in
in
in
loop
in
in
in
call
loop
mul
loop
jecxz,pt
in
jecxz
in
out
in
jmp
loop
shl
in
jecxz
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
jecxz
in
out
in
in
in
in
in
loop
in
loop
in
out
in
call
loop
shl
in
in
in
loop
in
jecxz
in
out
in
in
in
out
in
out
in
call
loop
jle
loop
jle
loop
loope
loop
and
in
jecxz
in
in
in
in
in
in
in
loope
in
out
in
call
loop
mov
loop
es
in
jecxz
in
call
loop
xchg
in
in
in
in
in
in
out
in
loop
in
in
in
loope
in
jecxz
in
loope
in
loope
in
loope
in
call
loop
jo
loop
lret
in
loop
in
loope
in
out
in
out
in
call
loop
in
in
in
in
jecxz
in
call
loop
sbb
out
in
loope
in
in
in
in
in
in
in
loop
in
in
in
call
loop
push
in
in
in
in
jmp
loop
or
loop
loop
in
call
loop
adc
loop
add
loop
push
out
in
call
loop
push
in
in
call
loop
in
in
out
in
call
loop
fs
in
loop
in
in
in
loope
in
out
in
jecxz
in
out
in
in
in
in
in
jecxz
in
in
in
loop
in
jecxz
in
in
in
call
loop
outsl
jecxz
in
out
in
in
in
out
in
call
loop
or
loop
fs
in
loope
in
call
loop
mov
out
in
out
in
in
in
loop
in
call
loop
out
loop
xchg
in
in
jecxz
in
call
loop
sbb
jmp
loop
push
call
loop
jnp
loop
or
loop
cmc
in
in
loop
in
out
in
call
loop
aaa
jmp
loop
and
out
in
in
in
call
loop
push
jmp
loop
int
loop
insl
call
loop
xchg
in
in
jecxz
in
in
in
loop
in
out
in
loope
in
out
in
call
loop
lods
loope
in
out
in
in
in
out
in
jmp
loop
jno
loop
pop
jecxz
in
out
in
loope
in
jecxz
in
in
in
in
in
call
loop
cli
out
in
out
in
out
in
loop
in
loop
in
jecxz
in
out
in
jecxz
in
call
loop
sbb
loop
add
loop
fucomp
loop
pavgw
in
jecxz
in
call
loop
pop
jecxz
in
out
in
out
in
out
in
jecxz
in
loop
in
in
in
jecxz
in
out
in
jecxz
in
call
loop
xchg
in
in
in
in
loope
in
in
in
out
in
out
in
call
loop
nop
in
in
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
loop
in
out
in
out
in
jecxz
in
in
in
loop
in
out
in
in
in
jmp
loop
es
in
in
in
loop
in
out
in
jecxz
in
loop
in
out
in
out
in
out
in
out
in
jmp
loop
addr16
loop
inc
jecxz
in
out
in
loope
in
in
in
in
in
in
in
in
in
in
in
call
loop
jbe
loop
pop
in
in
loope
in
out
in
in
in
out
in
out
in
call
loop
shl
loop
in
loop
cli
in
in
call
loop
cmp
loop
mov
loop
movntq
out
in
out
in
loope
in
jecxz
in
in
in
jecxz
in
in
in
out
in
in
in
loope
in
in
in
in
in
out
in
loop
in
in
in
out
in
in
in
loope
in
out
in
out
in
jecxz
in
out
in
call
loop
ljmp
in
loop
in
out
in
jecxz
in
out
in
loop
in
loop
in
out
in
jecxz
in
in
in
jmp
loop
add
loop
inc
call
loop
jl
loop
pop
in
in
loope
in
loop
in
jecxz
in
loope
in
in
in
call
loop
test
loop
cmp
loop
and
loop
mov
out
in
jecxz
in
call
loop
inc
jecxz
in
loope
in
out
in
out
in
call
loop
pop
jmp
loop
mov
jmp
loop
out
in
call
loop
cmp
out
in
call
loop
loope
loop
pop
in
in
in
in
out
in
in
in
in
in
out
in
call
loop
loope
loop
lret
call
loop
or
loop
ret
in
in
call
loop
es
in
loop
in
call
loop
push
in
in
jecxz
in
jecxz
in
out
in
call
loop
loop,pn
in
call
loop
movsb
out
in
loope
in
in
in
loop
in
in
in
loop
in
loop
in
out
in
call
loop
aam
loop
inc
jmp
loop
shl
in
call
loop
sub
loop
sbb
loop
push
in
in
jecxz
in
out
in
out
in
jecxz
in
out
in
out
in
in
in
loop
in
out
in
jecxz
in
out
in
call
loop
jnp
loop
mov
loop
stc
in
in
jecxz
in
out
in
in
in
out
in
in
in
in
in
in
in
in
in
out
in
in
in
in
in
call
loop
repnz
in
loope
in
in
in
jecxz
in
in
in
jecxz
in
out
in
loope
in
in
in
out
in
out
in
out
in
loope
in
in
in
call
loop
xor
loop
push
jmp
loop
pop
in
in
in
in
loop
in
loop
in
out
in
out
in
out
in
call
loop
pop
out
in
jecxz
in
loop
in
call
loop
loope
in
loop
in
in
in
in
in
loop
in
in
in
out
in
in
in
out
in
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
loope
in
jmp
loop
out
in
in
in
in
in
jmp
loop
mov
loop
jno
loop
movsl
loope
in
loope
in
in
in
in
in
in
in
out
in
loop
in
call
loop
das
loop
in
jecxz
in
call
loop
lcall
in
loope
in
in
in
loope
in
jmp
loop
gs
in
loop
in
out
in
in
in
call
loop
xor
loop
jne
loop
fsub
loop
fsub
loop
dec
jecxz
in
out
in
call
loop
cltd
loop
in
in
in
out
in
loop
in
in
in
jmp
loop
fnclex
loop
shl
loop
inc
out
in
out
in
out
in
loop
in
out
in
out
in
call
loop
mov
loop
in
in
in
loop
in
call
loop
jmp
loop
cmp
loop
mov
loop
or
loop
repz
in
jecxz
in
out
in
in
in
out
in
out
in
loop
in
loop
in
call
loop
push
call
loop
aam
loop
mov
in
in
in
in
in
in
loop
in
out
in
jmp
loop
mov
loop
jl
loop
jle
loop
xor
loop
in
loope
in
jecxz
in
call
loop
es
in
jecxz
in
out
in
loope
in
call
loop
out
loop
fs
in
loop
in
call
loop
out
in
in
in
out
in
in
in
in
in
jecxz
in
loope
in
in
in
in
in
loop
in
in
in
loop
in
loop
in
out
in
in
in
in
in
loope
in
loop
in
in
in
jecxz
in
in
in
out
in
out
in
in
in
in
in
call
loop
enter
out
loop
hlt
in
in
in
in
in
in
in
in
loope
in
call
loop
imul
in
in
in
jecxz
in
in
in
in
in
out
in
call
loop
xor
loop
adc
loop
mov
call
loop
gs
in
loope
in
in
in
call
loop
cwtl
in
in
out
in
out
in
in
in
in
in
in
in
loope
in
loop
in
call
loop
mov
out
in
call
loop
hlt
out
in
loop
in
call
loop
movsb
jecxz
in
in
in
out
in
loop
in
jecxz
in
call
loop
cmpsl
jecxz
in
jmp
loop
jb
loop
xor
loop
xchg
in
in
in
in
loop
in
add
push
popa
add
and
call
add
push
cltd
mov
add
addl
shrb
inc
add
jle
add
cmp
add
fidivrs
xchg
testl
ljmp
daa
add
mov
push
jo
push
xchg
pop
mov
add
popa
add
jnp,pt
add
add
mov
aas
aas
xchg
fisttps
movb
lret
std
sub
add
mov
add
add
roll
mov
push
add
inc
add
push
pushf
add
push
xor
ljmp
rcrb
outsb
pop
in
sub
mov
push
int
push
mov
add
je
je
pop
ret
xchg
jle
add
mov
or
shlb
sub
dec
dec
adc
lcall
xchg
leave
cmc
push
add
out
jo
ljmp
das
pop
sub
add
cmp
jle
add
jl
add
inc
add
lahf
leave
mov
add
push
lret
and
jmp
add
movsl
add
add
das
sbb
inc
add
and
inc
add
add
stos
sub
mov
push
mov
sub
push
push
push
push
push
call
test
jne
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
call
add
cmp
inc
add
pop
jbe
add
mov
add
add
mov
sub
sbb
add
and
decl
add
or
or
fwait
mov
add
push
addl
std
adc
lcall
add
add
push
add
add
je
frstor
incl
add
add
add
mov
int
mov
je
add
std
adc
dec
pop
std
or
push
roll
add
iret
xchg
xor
incl
add
add
call
scas
dec
scas
shlb
dec
push
mov
xchg
xor
jmp
sub
add
add
xchg
or
mov
sarb
data16
add
xchg
mov
cld
mov
jmp
add
mov
jmp
fldenv
add
add
fistpl
jl
cmp
leave
push
jnp
add
add
and
cmp
add
into
jnp
add
push
test
ficoml
movb
mov
jnp
aad
jnp
add
or
cmp
inc
add
clc
pop
jnp
push
add
xchg
dec
mov
jl
stos
data16
fstl
jmp
test
inc
add
add
mov
add
pop
xor
decl
aad
push
fiadds
ljmp
add
mov
add
add
mov
add
cmp
js
add
pop
add
call
addl
cmp
add
movb
pop
cmp
push
mov
addl
add
lcall
xchg
pop
out
leave
sub
rcrb
add
mov
inc
add
test
out
pop
cmp
xor
lcall
add
cltd
das
mov
add
loope
sbb
imul
jmp
add
cmpsb
add
ljmp
add
jl
add
inc
add
add
lcall
fstpt
movl
add
sub
fcomip
inc
add
call
xrelease
dec
ret
scas
jl
insb
in
sub
fildll
data16
xchg
add
jo
incl
add
add
ret
add
dec
inc
add
loope
dec
loope
aas
loopne
mov
adc
addr16
addl
mov
add
add
shrl
adc
sbb
add
mov
sahf
fstl
jmp
mov
add
xor
incl
and
cmp
lea
data16
mov
cmovb
lcall
push
add
pop
aaa
sub
mov
push
call
test
push
arpl
lcall
sbb
outsl
out
cmp
rcrb
addb
mov
jmp
dec
outsl
sub
add
push
adc
sti
arpl
cmp
mov
mov
pop
daa
add
notb
xchg
jp
pusha
add
jno
incl
fsubs
pushl
and
push
scas
pop
cmp
roll
mov
jno
out
insb
add
std
push
cmp
clc
pop
pop
add
add
add
add
or
add
imul
jne
inc
add
fldcw
push
mov
add
es
add
call
add
inc
add
outsl
pop
lea
add
es
xor
jmp
rolb
sbb
add
leave
mov
shlb
add
xor
jmp
add
adc
insb
ds
addb
add
add
outsb
dec
stc
pop
stos
pop
add
dec
adc
cmp
add
jmp
add
outsl
iret
into
adc
call
mov
add
in
xor
mov
lds
das
xchg
add
fmull
cwtl
mov
add
stc
test
add
adc
add
pop
cwtl
inc
add
lcall
cmp
dec
jl
in
xchg
frstor
add
add
in
push
add
hlt
push
add
push
mov
sub
add
out
lds
lret
jecxz
decb
mov
ljmp
dec
jnp
add
in
ljmp
add
add
pushf
jnp
lds
adc
jmp
add
outsl
popf
jo
incl
add
movl
add
dec
enter
mov
inc
add
cmp
jae
jmp
add
ret
add
clc
pop
cwtl
mul
add
add
add
jp
add
cmp
add
insb
aaa
rolb
mov
xor
lock
clts
add
add
xchg
xor
decl
add
mov
cmpsl
add
jle
in
pop
das
and
lcall
cli
pusha
add
popa
add
roll
roll
xor
push
xor
ljmp
inc
add
add
add
add
dec
cltd
adc
imul
mov
add
cmp
adc
inc
add
xor
test
test
add
fistpll
add
or
add
clc
cwtl
or
iret
ss
add
lds
inc
add
xor
inc
add
sahf
jp
push
add
cmc
cmpsb
add
xor
push
pushf
mov
pop
xchg
lods
xlat
dec
pop
lcall
xchg
in
lret
les
pop
fwait
dec
data16
stos
roll
add
push
add
lret
call
add
adc
lcall
mov
add
add
inc
add
loope
int3
mov
jae
call
add
push
ror
add
mov
mov
add
jnp
add
sub
enter
add
int
cmp
xchg
adc
fstpt
jmp
add
dec
repz
ljmp
add
sub
rclb
lods
js
jae
ljmp
shlb
sub
aad
push
test
bound
lcall
stos
jl
sbb
repz
add
and
call
jo
mov
adc
call
mov
add
add
in
fdivrp
inc
add
pushl
adc
decl
lods
jmp
add
mov
mov
add
lods
imul
in
xchg
cmp
les
cltd
addl
data16
add
ljmp
add
cmpsb
add
call
xchg
addb
addb
pop
add
pusha
add
pushf
insl
scas
and
lcall
repnz
iret
pop
call
add
push
mov
mov
call
ljmp
cmp
pop
xor
jp
xlat
pop
pop
cmp
cmp
loopne
or
mov
ret
icebp
adc
jmp
add
cmpsl
add
lret
and
jmp
add
jmp
lods
pop
loopne
stc
nop
sbb
mov
jne
rolb
sti
xchg
insb
mov
sub
inc
add
pop
addl
leave
jp
mov
add
int
add
mov
or
push
push
add
aaa
roll
test
xor
pushl
sub
leave
adc
pushl
add
pop
pop
dec
adc
decl
je
xchg
xor
jmp
xchg
sbb
add
dec
inc
add
add
sub
lcall
add
add
add
in
cmp
sub
mov
mov
lods
or
mov
fmuls
call
sbb
add
not
mov
add
mov
fsubrl
cmp
lods
jo
jmp
out
aaa
xchg
mov
inc
add
xchg
cmp
cwtl
jnp
inc
add
add
imul
xchg
cmp
pop
scas
adc
call
mov
std
mov
jp
lds
add
add
lret
jp
add
mov
adc
jmp
jmp
jmp
inc
add
out
and
decl
push
stc
rolb
add
outsb
add
movb
addb
fmull
icebp
sahf
pop
ss
cld
and
std
xor
add
loope
fsubl
add
imul
xor
ljmp
dec
stos
sub
popa
add
lock
call
in
int
scas
lea
push
xlat
mov
sub
add
leave
push
dec
xchg
mov
cmp
addb
movl
xchg
xor
lcall
sbb
mov
or
mov
rcl
arpl
call
push
add
push
add
dec
addb
adc
cmp
addb
add
call
arpl
fists
incl
add
sub
mov
xchg
fimull
jnp
add
call
inc
add
sub
add
add
stos
into
stos
nop
outsb
ret
add
mov
aas
cwtl
enter
ljmp
movl
add
insl
fsubrp
lret
js
xlat
pop
sub
add
push
sub
int3
imul
add
dec
mov
out
and
ljmp
sub
shr
lds
mov
addl
add
insl
out
xchg
jo
ljmp
add
adc
call
fstp
shrb
jmp
data16
loope
push
pop
xlat
adc
js
add
mov
sbb
mov
sub
add
aas
aam
or
addb
fldl
call
mov
popf
fcmovb
add
mulb
add
fs
add
add
add
add
or
add
outsb
outsl
lcall
add
sub
cmp
sbb
call
ret
fld
add
sahf
pop
add
hlt
in
gs
add
add
sub
pop
mov
add
add
fbld
xlat
ljmp
mov
aad
inc
add
cmpsl
add
add
add
jb
ljmp
call
add
jmp
add
mov
cmc
mov
add
sbb
add
pop
add
xchg
or
mov
inc
add
cmp
test
mov
in
pop
fisttps
jns
imul
std
jno
jmp
add
add
sbb
mov
dec
mov
cmp
adc
sub
sbb
stos
test
popa
add
pop
add
add
pop
and
decl
push
pushf
loopne
int
or
addl
add
jne
dec
adc
add
add
ljmp
sti
cs
pushf
adc
add
mov
sahf
leave
xor
add
and
add
inc
add
decl
add
xor
iret
sub
test
add
add
lods
bound
jmp
test
dec
cmp
jg
pusha
add
add
and
dec
xchg
std
xlat
mov
add
mov
xchg
jecxz
jno
out
ss
add
fs
inc
add
in
mov
jns
add
popa
add
xchg
out
or
add
daa
add
add
les
movsb
add
pusha
add
addl
add
scas
mov
add
add
add
fninit
add
call
dec
cmpsb
add
sarl
in
ficoml
jmp
add
sti
sbb
jmp
jge
jae
mov
or
test
cld
adc
ljmp
divl
add
cmpsl
add
neg
loop
xor
faddl
add
sub
xor
pushl
decl
mov
xchg
ret
add
outsb
sub
add
add
xchg
lahf
dec
sub
dec
pop
jno
ljmp
adc
incl
add
push
and
decl
aad
add
data16
add
or
out
xor
cmp
add
add
jl
mov
mov
sub
pop
rcrl
and
pushl
out
addr16
cli
testb
call
add
pop
sarb
inc
add
add
movsl
add
insb
int3
pop
out
imulb
inc
add
add
mov
add
inc
add
add
jg
add
xor
cmpsl
add
into
adc
in
mov
popa
add
jns
mov
add
test
mov
pop
xor
add
mov
aam
inc
add
stos
add
call
dec
add
lcall
ljmp
add
add
or
add
call
add
enter
or
dec
pop
pop
adc
lcall
add
sbb
adc
mov
ljmp
add
add
add
mov
add
inc
add
add
sbb
in
xstore-rng
cmpsl
add
mov
fsubp
add
movl
mov
add
or
add
sarl
add
add
jl
add
and
jmp
int3
ret
inc
add
mov
aaa
jns
outsb
js
add
call
push
int
mov
inc
add
in
popf
call
addb
pusha
add
pop
push
rorb
mov
imul
mov
add
mov
aam
xlat
repnz
pushl
push
addb
pop
inc
add
push
add
call
jl
arpl
call
pushf
sbb
sub
add
mov
add
jne
sti
fwait
jno
jmp
addb
add
add
fwait
call
pushf
mov
mov
jge
add
dec
adc
adc
incl
pushl
incl
mov
mov
add
add
jge
mov
je
push
add
jmp
add
sti
movb
insl
xor
call
call
mov
aam
gs
add
mov
add
mov
sarl
add
add
out
fmuls
or
or
clc
sub
add
aaa
nop
mov
add
std
jbe
xor
dec
jecxz
aam
pop
mov
add
add
arpl
inc
add
lret
add
scas
dec
test
add
add
add
fmuls
add
pop
sbb
cmp
add
dec
cmp
add
add
pushl
testl
mov
pop
aad
push
pop
rolb
idivb
inc
add
push
add
mov
add
scas
and
pushl
call
pop
scas
inc
add
lcall
rcll
add
sarl
add
les
sub
call
add
jo
dec
push
inc
add
cld
sbb
mov
add
pushl
aad
pusha
add
sti
push
jb
jmp
add
dec
adc
lcall
add
out
cs
add
pop
addl
jmp
sahf
jo
call
and
lret
inc
add
data16
xchg
cmp
and
xor
decl
add
mov
add
cmpsb
add
add
xchg
push
add
iret
push
add
ficompl
aas
add
sti
or
add
icebp
mov
mov
jp
inc
add
mov
xchg
sarl
xchg
mov
push
add
das
inc
add
or
xor
test
or
fnstsw
add
add
in
sti
or
xor
shl
jp
mov
add
cld
stos
divb
add
fsubl
decl
cmp
imul
mov
mov
add
daa
add
ljmp
fmull
incl
xchg
icebp
ss
add
inc
add
incl
mov
xchg
inc
add
js
add
lret
cli
cmp
clc
dec
cltd
and
add
loop
mov
hlt
lds
fwait
mov
sbb
aaa
je
add
jp
add
pusha
add
rolb
enter
cmp
test
add
mov
adc
push
repnz
inc
add
mov
scas
lods
nop
lcall
mov
add
mov
add
ret
add
push
mov
mov
xor
lcall
xacquire
xchg
fstps
add
sbb
into
arpl
jmp
ja
add
aaa
push
add
push
int3
scas
mov
add
inc
add
mov
cmp
fnsave
add
lahf
mov
add
add
aas
mov
add
mov
add
movsb
add
add
add
jge
stc
cld
inc
add
cltd
cs
add
addl
repz
add
pushl
xchg
pop
cld
jmp
sti
test
sub
roll
push
add
popa
add
add
fbstp
or
repz
faddl
popf
icebp
or
dec
pop
movsb
add
add
pushl
add
mov
fwait
push
outsl
les
divl
jns
add
nop
xor
fdivr
std
dec
xor
incl
add
push
add
jb
ljmp
mov
jns
add
hlt
mov
add
cmp
fildll
add
add
stc
popa
add
xor
dec
pop
dec
icebp
bound
inc
add
fldcw
add
jge
popa
add
popf
ds
repnz
jmp
pop
loopne
dec
add
pop
sub
mov
cmpsb
add
add
add
xor
lcall
test
pop
dec
jno
decl
movsl
add
add
xor
jmp
push
daa
add
sub
ljmp
jo
decl
jbe
lds
mov
cltd
roll
add
addl
sbb
outsl
shrb
lret
fwait
sbb
or
mov
add
or
pop
add
mov
add
add
cwtl
addb
dec
and
decl
addb
add
add
repnz
negb
nop
movsl
add
add
adc
pushl
add
movb
fistpll
add
hlt
sbb
mov
hlt
data16
push
lcall
jmp
fwait
lock
add
adc
add
lds
jge
in
push
add
add
dec
scas
jmp
add
and
dec
stos
mov
push
test
aad
add
dec
xlat
jne
stc
push
add
shll
xchg
lret
and
call
decl
insb
jl
push
add
imulb
add
addb
shrb
pop
loop
mov
add
add
cs
mov
fcomi
xor
add
pusha
add
sub
inc
add
jp
les
aam
add
xchg
mov
incl
incl
add
adc
decl
and
inc
add
add
adc
add
mov
rcll
add
cmc
mov
repnz
lcall
movsl
add
out
add
les
adc
add
push
push
mov
sbb
cmpsl
add
data16
add
add
popl
add
cmp
push
add
mov
bound
call
jbe
adc
jmp
add
add
sbb
pushf
xor
ljmp
sub
adc
inc
add
daa
add
jmp
add
jge
or
add
in
push
imul
dec
ret
add
add
leave
sbb
mov
add
jl
mov
mov
add
fisttpll
cmp
loopne
mov
pop
jge
xor
ljmp
push
pushf
xor
pop
mov
in
cmp
das
pop
sahf
or
add
dec
inc
add
jns
add
mov
lcall
add
mov
add
adc
and
lcall
lret
lcall
xchg
in
jmp
add
add
in
addl
imull
je
add
fcmovu
sub
ficoms
insl
or
mov
push
dec
movsl
add
push
adc
push
inc
add
add
data16
dec
dec
jb
ljmp
xchg
xchg
xchg
fistpl
jl
add
div
sbb
and
inc
add
sahf
fwait
pop
insb
lods
insb
xor
add
add
pushl
add
test
outsl
pushf
loopne
movsl
add
xchg
mov
add
and
clc
push
xchg
clc
inc
add
add
mov
push
add
xchg
imul
cwtl
decb
ds
push
testb
insb
pop
add
call
popa
add
movb
add
cmp
add
jmp
rep
movl
or
jecxz
int
aam
add
pop
push
add
ljmp
adc
add
lea
ljmp
or
fcoms
incl
int
add
test
mov
stc
addl
push
add
insb
clc
data16
push
add
fnstsw
mov
push
pop
repz
cmp
lret
or
cmpsb
add
mov
xchg
call
inc
add
add
pushl
add
jle
mov
stos
push
lds
mov
pusha
add
fsubl
add
lds
cs
pop
sub
inc
add
adc
adc
jmp
lods
add
enter
add
and
add
decl
repz
adc
incl
add
mov
xchg
into
loope
xchg
cmp
lods
pop
add
loopne
in
add
add
lcall
sbb
jmp
out
fdivs
push
arpl
ljmp
xor
push
mov
add
add
sbb
call
mov
add
mov
mov
add
add
jmp
add
stos
sub
add
ja
add
aas
pop
aas
sti
loopne
mov
cmp
mov
xor
jno
jmp
stos
ljmp
into
popa
add
add
rcl
mov
iret
add
or
or
add
nop
jae
decl
push
hlt
inc
add
mov
add
rolb
daa
add
cmpsb
add
enter
push
sti
lds
pop
lret
imul
add
jmp
add
divl
ljmp
leave
or
inc
add
mov
add
out
sti
ror
and
incl
ret
pusha
add
xchg
scas
jl
addb
add
add
ljmp
or
pop
jo
call
mov
pushl
add
lds
add
decl
sub
push
add
mul
add
psrld
call
add
inc
add
ret
add
add
or
outsb
adc
add
stc
cs
rolb
dec
icebp
pushf
js
add
scas
popf
jbe
mov
decl
jbe
add
icebp
out
adc
lcall
add
mov
push
adc
and
imul
sub
jp
pop
lock
dec
adc
stos
jp
pusha
add
mov
or
addl
xlat
fcompl
and
jmp
dec
pusha
add
scas
repnz
sbb
add
push
cli
nop
sbb
add
incl
mov
mov
mov
stos
js
cli
fstpl
xor
decl
jmp
add
dec
roll
ljmp
or
pop
add
add
sbb
add
loop
sahf
xor
incl
add
mov
sbb
fistpll
dec
addl
cs
movl
stc
mov
movsb
add
add
jge
sub
xchg
rclb
add
sub
lcall
movsl
add
add
or
and
jmp
add
add
push
add
mov
scas
push
add
pushf
imul
xchg
inc
add
sub
jmp
loop
gs
fadds
inc
add
mov
add
pop
ret
aad
xchg
stos
loopne
sbb
cwtl
push
jae
fnstenv
add
out
dec
jns
push
dec
in
cmpsl
add
jb
pushl
add
mov
jl
add
add
les
out
push
add
leave
inc
add
sub
fidivrs
lcall
push
stos
xchg
add
lcall
add
add
jmp
jns
add
scas
insl
lock
add
mov
jl
dec
push
add
popa
add
cmc
int3
int
bnd
popf
xor
add
loop
push
sub
jnp
add
add
or
push
ret
add
movl
ret
add
add
fimull
cmpsb
add
add
xor
push
sti
sub
adc
inc
add
ret
add
in
mov
jno
aaa
in
movb
pop
mov
add
or
mov
add
arpl
dec
pop
mov
add
and
incl
jge
add
add
jmp
add
push
push
add
add
lcall
lcall
clc
movl
add
jns
cwtl
and
decl
push
clc
jb
lcall
jnp
sbb
or
ljmp
mov
add
adc
fidivs
roll
push
add
js
add
das
add
loopne,pn
dec
outsb
mov
add
roll
sub
add
or
in
xchg
movl
add
incl
pushl
sub
lcall
test
push
adc
jmp
add
xor
call
add
test
add
add
aam
add
add
add
in
mov
dec
push
add
add
inc
add
xchg
mov
jg
add
notl
cmpsl
add
hlt
rsm
scas
addr16
jl
add
dec
mov
mov
mov
ror
sbb
inc
add
xchg
popf
mov
mov
lods
mov
adc
push
addb
ret
add
rcrb
or
add
mov
lahf
sub
iret
inc
add
inc
add
lea
xor
decl
add
pop
enter
mov
jb
incl
incl
add
pusha
add
aaa
aad
fcmovnu
mov
cmp
xchg
sub
call
inc
add
pop
add
cli
addb
sbb
add
mov
add
or
add
incl
ja
sbb
add
add
imul
and
decl
or
mov
push
cmp
movb
js
clc
faddl
decl
shlb
pushl
add
rcll
fs
add
mov
addb
add
adc
add
add
add
xor
decl
add
sub
jecxz
or
and
call
add
sbb
ljmp
pop
add
scas
inc
add
outsl
ret
add
mov
add
add
jle
insl
addb
dec
add
jmp
sbb
add
adc
sbb
call
mov
add
and
pushl
add
sbb
call
pushl
pushl
add
rorl
ret
clc
or
add
in
scas
mov
movl
pop
fwait
lret
pop
cmp
xor
fildll
pop
popa
add
inc
add
add
add
movsl
add
out
pop
mov
add
dec
jbe
add
fimuls
jp
jnp
mov
pop
icebp
out
fdivl
addb
add
xor
dec
sub
call
add
jnp
xor
pushl
movl
add
fdivrp
fidivs
add
jnp
add
cli
mov
pop
test
in
adc
jmp
add
jmp
add
add
add
adc
jmp
add
inc
add
xchg
xchg
xchg
clc
dec
and
adc
sti
bound
lcall
out
dec
scas
insl
lods
lods
pop
push
add
inc
add
sub
test
call
data16
add
push
add
xchg
jg
lea
xchg
imul
pop
fldcw
repz
push
add
add
xor
scas
fsubrs
iret
mov
add
lahf
push
fcomps
add
add
push
shll
push
add
loope
xchg
xchg
push
add
ds
add
mov
clc
lret
pop
add
add
xor
pushl
addb
jmp
add
add
aad
sub
fsubrp
lea
add
jmp
push
mov
add
and
incl
add
adc
inc
add
add
sub
add
cs
add
lcall
mov
pop
inc
add
lods
addl
add
add
fldcw
inc
add
mov
ljmp
movl
ljmp
xor
jmp
add
inc
add
pushf
mov
push
mov
dec
dec
push
inc
add
das
add
incl
decl
push
add
addl
push
add
push
dec
imul
lahf
ret
push
add
pop
lret
incl
call
add
sahf
ret
add
iret
dec
mov
aas
cmp
add
and
jmp
ljmp
add
adc
sub
iret
int
cmp
fnsave
fisttpll
or
add
or
pushf
sbb
leave
bound
lcall
jp
loop
dec
jno
lcall
sub
dec
cmc
popf
mov
add
add
inc
add
add
in
mov
add
or
add
jae
call
add
or
mov
add
insl
mov
push
mov
pushl
sub
add
lret
ja
popf
clc
in
pop
test
lods
add
add
pusha
add
xchg
test
fidivrl
add
ljmp
fistl
add
cmp
test
pop
add
add
incl
add
loope
add
mov
xor
dec
mov
loope
cmp
add
push
lods
push
add
pushf
insb
hlt
js
xchg
pusha
add
sub
mov
nop
push
ja
dec
fcmovne
adc
jmp
out
ja
add
jae
push
cmp
roll
pop
sub
addl
sub
imul
sahf
cli
mov
cmp
add
ljmp
add
add
add
outsb
cmp
add
imul
add
add
sbb
sbb
add
jg
add
jle
add
jp
add
add
mov
add
add
aad
add
scas
or
cld
mov
shlb
sbb
lcall
mov
pop
sahf
add
decl
add
add
add
lcall
ljmp
xchg
pop
cmc
mov
add
add
add
adc
lcall
jae
stc
aam
mov
add
pushl
ljmp
adc
jmp
add
fists
add
incl
rorb
add
cmc
add
incl
add
jle
xchg
les
dec
popa
add
adc
test
scas
pop
add
add
call
inc
add
sub
add
mov
add
and
jmp
pop
mov
add
add
add
adc
jmp
jmp
add
add
add
sbb
add
add
stos
and
jmp
jg
inc
add
ljmp
mov
add
dec
ss
dec
sti
lcall
lret
add
mov
add
sub
lods
mov
cmc
mov
add
add
push
addb
cmc
addl
fsts
clc
fcomps
out
fidivrs
add
jbe
mov
add
xlat
lods
movsl
add
ficoms
faddl
lcall
add
and
call
sub
add
xchg
xor
cmp
fnstcw
cmpsb
add
cmpsl
add
add
add
ljmp
add
mov
add
inc
add
pop
fistl
add
push
add
pop
nop
frstor
xchg
add
movsl
add
test
fcoml
inc
add
inc
add
jmp
int3
addb
lods
movsb
add
jp
inc
add
inc
add
add
into
jmp
add
add
cmpsl
add
lods
es
add
inc
add
push
add
add
stc
push
pop
mov
add
sub
xlat
mov
push
xor
decl
add
ljmp
add
add
push
add
sbb
jmp
add
clc
movsl
add
add
insb
push
add
lret
jo
js
add
mov
add
pop
enter
idivl
cld
je
and
incl
mov
data16
or
imul
xchg
xchg
loope
or
movsb
add
add
movsb
add
clc
sub
xchg
sbb
fcmovne
mov
stos
pop
insl
cmp
add
call
mov
clc
mov
decl
daa
add
jge
jne
jmp
dec
in
arpl
decl
pushf
xchg
stos
ret
cmp
or
and
lcall
test
inc
add
jnp
add
popf
fcmovnb
add
add
add
addb
int
fsubl
lcall
movb
mov
pushl
add
adc
mov
ljmp
insb
scas
mov
add
pop
pusha
add
jmp
add
enter
adc
call
add
adc
lcall
pop
mov
scas
mov
mov
add
icebp
lret
pop
addl
add
add
imul
sbb
add
decl
mov
add
xchg
or
sub
or
inc
add
test
loopne
sbb
push
push
outsb
iret
lcall
mov
ljmp
add
add
cli
popf
sahf
addl
mov
sbb
add
add
ds
aad
add
cmp
push
add
insl
out
out
pushf
cvttps2pi
add
decl
add
or
add
add
add
cs
jg
pop
inc
add
call
xor
inc
add
out
pusha
add
cmc
or
add
js
stos
ja
add
ljmp
inc
add
add
xor
call
daa
add
frstor
xchg
aad
add
lcall
add
add
jb
jmp
jmp
call
add
cmpsl
add
and
push
add
add
out
movsl
add
mov
xor
add
xor
incl
incl
cmp
pop
loopne
lock
cmp
in
sub
enter
adc
jmp
jmp
add
or
clc
lods
rclb
pop
xchg
cmp
mov
add
test
pop
enter
add
enter
inc
add
addl
add
cmp
add
mov
mov
rolb
inc
add
outsl
and
ljmp
add
cmp
and
inc
add
ret
add
call
inc
add
jl
aam
inc
add
add
test
inc
add
xor
incl
adc
push
add
dec
aaa
jmp
rolb
jge
arpl
pushl
ljmp
mov
int3
xor
lcall
aas
rolb
fsubrl
mov
dec
fisttps
lods
mov
pop
ret
pop
cmp
add
in
xchg
mov
pushf
dec
loopne
push
sbb
lret
mov
add
insb
xchg
lods
addl
dec
xchg
xor
pushl
xor
ljmp
mov
jg
add
add
ret
add
add
and
ljmp
add
les
data16
aad
add
addb
sbb
or
xor
incl
jbe
add
ljmp
add
inc
add
jne
xor
cmp
add
int
add
lcall
addl
insb
jne
sub
mov
adc
jmp
add
xlat
and
incb
hlt
mov
int
add
mov
dec
push
mov
jl
add
mov
popf
mov
test
out
bound
call
incl
daa
add
lods
add
movl
pop
inc
add
fbstp
clc
cmc
cs
mov
add
addb
les
add
jmp
adc
lcall
test
mov
add
mov
pusha
add
and
decl
add
or
fstpt
add
add
outsl
sub
add
sub
jecxz
popa
add
fimull
mov
dec
sub
add
add
ljmp
push
add
mov
outsl
test
mov
mov
cld
sub
xor
and
pushl
pop
adc
stc
addb
addl
push
adc
lcall
jo
lcall
popa
add
aad
scas
fwait
pop
add
push
and
pushl
add
movb
imul
iret
push
dec
push
mov
adc
lcall
sti
mov
out
mov
movl
add
sbb
sub
add
addr16
push
xor
pop
push
add
xchg
incl
pushl
pusha
add
out
pop
add
jmp
sbb
stos
xor
ljmp
sbb
cmp
addb
imul
adc
call
add
mov
adc
ljmp
add
sub
add
jmp
jge
add
add
cmpsb
add
push
add
add
dec
stc
adc
pushl
add
inc
add
sub
sub
add
aam
icebp
dec
pop
pop
arpl
jmp
loop
add
pushl
jl
test
push
pop
pop
aas
jge
add
fdivs
call
aas
or
popa
add
rcrb
in
test
imul
sub
add
jmp
lods
adc
jmp
add
call
nop
pop
mov
pop
mov
xor
incl
mov
outsb
in
and
jmp
lcall
scas
into
sbb
add
add
sub
jns
pop
mov
repz
push
mov
movsb
add
sbb
add
cld
add
push
fisttpll
cmc
push
inc
add
addb
add
adc
decl
adc
fcomp
std
loope
hlt
rcrb
incb
pushf
mov
pop
jno
pushl
push
add
stos
jl
add
mov
dec
inc
add
add
add
aam
add
addb
add
mov
les
shll
add
xchg
movsl
add
pop
mov
cmp
add
jl
dec
mov
cmp
mov
rolb
mov
outsb
jb
call
push
add
std
bound
cmp
scas
addl
add
lret
add
mov
js
add
mov
add
lds
jb
call
mov
xchg
mov
addl
movsb
add
test
repz
out
repz
add
sbb
add
jo
dec
mov
xor
fdiv
mov
addr16
pop
sbb
ds
add
add
push
jnp
lcall
add
add
xchg
data16
add
cwtl
mov
das
call
cmp
add
xchg
mov
stos
push
push
add
mov
call
push
imul
pop
outsb
add
incl
inc
add
loopne,pn
xchg
cmp
cmpsb
add
adc
jmp
add
div
icebp
push
add
test
movb
in
mov
add
mov
dec
test
mov
push
lock
jmp
add
add
pop
mov
dec
mov
and
ljmp
mov
and
inc
add
xchg
or
js
mov
add
push
mov
adc
or
cld
mov
call
test
ficompl
add
dec
rcrl
inc
add
pushf
adc
cld
pop
mov
adc
mov
je
xchg
pusha
add
rorl
add
in
sub
dec
dec
sti
sbb
sub
add
push
cmp
add
or
movl
mov
add
lcall
add
pop
xchg
ret
pop
mov
dec
ret
add
lods
pop
cmp
sbb
jmp
add
jmp
add
cmc
fisttps
enter
dec
xlat
test
data16
jmp
idiv
addb
aaa
xor
loopne
rolb
add
nop
inc
add
int
add
dec
fcmovu
sbb
xchg
sub
add
ljmp
and
ljmp
lcall
int3
adc
incl
add
imul
add
daa
add
nop
adc
leave
push
jmp
xchg
cwtl
adc
fwait
iret
sbb
in
repnz
decl
add
lods
lar
jmp
add
add
lcall
or
adc
inc
add
xchg
jae
mov
jae
incl
add
sbb
mov
add
pop
ja
ds
add
add
shr
insl
pop
pop
nop
cld
push
mov
call
jge
add
std
mov
pusha
add
jno
mov
add
xchg
lods
repz
cmpsl
add
add
mov
add
call
add
xchg
cmpsl
add
addb
pop
inc
add
xor
push
ficomps
add
mov
add
add
add
lock
adc
pushl
xor
inc
add
into
test
call
out
dec
xor
hlt
xchg
shl
add
jae
call
cltd
pop
adc
xchg
inc
add
mov
test
mov
sub
repz
add
lret
sub
jns
mov
decl
inc
add
add
hlt
mov
repz
dec
ret
pop
movsl
add
jmp
add
fstpt
add
scas
push
call
add
add
ljmp
lea
ficompl
xor
ljmp
add
xor
jmp
stos
cmpsl
add
add
add
test
add
add
out
lcall
push
push
push
cmp
add
ljmp
popa
add
jmp
adc
and
call
iret
xor
call
mov
lods
xchg
outsl
lret
mov
add
pop
int3
sbb
addl
pop
repnz
jo
ljmp
sahf
xchg
das
cwtl
repnz
negl
pop
pop
rcl
pop
cmpsb
add
adc
incl
add
pushf
cwtl
mov
pushf
lret
bound
jmp
decl
mov
mov
jge
dec
jbe
jae
jmp
add
jns
ja
mov
add
jmp
addl
jg
add
pop
add
lcall
lds
mov
mov
mov
add
mov
add
or
incl
pushl
loop,pn
push
add
mov
bound
jmp
add
add
cmpsl
add
add
add
jg
add
and
decl
add
imul
mov
sti
ds
pop
mov
test
dec
pop
and
call
lods
push
add
pop
add
inc
add
pop
dec
scas
xchg
add
call
add
lahf
rdmsr
add
xchg
lret
jae
decl
adc
pushl
mov
mov
add
mov
call
mov
and
add
inc
add
add
outsl
dec
gs
add
xchg
scas
ljmp
lock
pushl
movsl
add
mov
add
add
and
lcall
jns
xor
call
push
add
pop
repz
incl
ja
add
mov
imul
sbb
addb
add
data16
add
or
call
cmp
mov
add
jae
decl
add
add
add
decl
aas
in
jmp
and
call
call
mov
add
mov
jae
clc
imul
and
decl
bts
add
add
add
mov
js
xchg
je
add
roll
xor
call
ss
dec
arpl
decl
sbb
ror
jae
jmp
pushl
loop
xchg
roll
sub
and
call
add
xor
gs
add
add
in
dec
mov
pop
mov
add
xor
jmp
call
call
sbb
call
aam
add
inc
add
scas
xchg
stos
lahf
jecxz
stos
lret
js
add
add
movl
cli
outsl
stos
stos
cmovo
ljmp
or
add
mov
mov
stos
jae
fsubrl
enter
sub
lcall
add
xchg
in
mov
add
add
push
add
xlat
fildl
add
faddp
add
pop
push
les
sbb
mov
add
mov
scas
push
add
cwtl
aas
mov
imul
jmp
add
add
incl
add
stos
push
push
loopne
dec
push
push
cs
loope
fiadds
add
push
les
jne
stos
testl
call
dec
push
dec
fsubl
incl
add
movsl
add
jno
call
push
add
jae
mov
call
add
add
inc
add
fisubl
ljmp
and
add
leave
test
bound
lcall
add
pop
movb
mov
sub
pop
jp
addl
outsb
jecxz
imul
cmc
aaa
sbb
xchg
add
ljmp
xchg
add
call
cmp
adc
decl
jmp
sahf
jecxz
ja
mov
jmp
sti
filds
roll
mov
add
imul
add
sub
add
movl
mov
scas
cmp
sub
add
pop
cmpsl
add
add
sub
sub
add
movsb
add
jmp
inc
add
outsl
mov
mov
sub
mov
jmp
dec
inc
add
xchg
repz
icebp
outsb
sahf
imul
cmpsb
add
add
movl
add
inc
add
mov
xchg
movsb
add
daa
add
and
mov
pop
ja
add
sbb
cmc
lcall
xchg
lods
bound
dec
mov
push
xchg
pusha
add
mov
loop
loopne
or
cmp
add
xlat
push
add
pop
in
cmp
add
pop
lods
fimuls
xchg
pop
shrb
in
inc
add
sbb
roll
mov
add
jno
call
push
add
repz
jp
add
add
cmp
mov
movsl
add
add
insb
movsb
add
inc
add
movsl
add
scas
xchg
jg
adc
ljmp
or
imul
incl
add
fbld
fcoms
fnstenv
add
xchg
xor
aad
add
add
dec
dec
xor
incl
jp
add
add
xchg
sbb
add
aam
add
lcall
and
call
and
mov
jns
test
sbb
insb
jo
pushl
shll
add
call
cmp
mov
lds
xor
call
jne
add
call
cmp
decl
ljmp
jp
add
repz
incl
cld
xor
add
decl
fsts
pushl
mov
add
mov
dec
xor
repnz
aad
add
lea
pop
inc
add
cli
add
jmp
ss
mov
lcall
mov
addb
add
imul
decl
flds
add
addr16
add
inc
add
inc
add
add
push
cs
push
mov
out
icebp
ds
add
cwtl
insl
pop
mov
add
addb
leave
incl
add
insl
cmp
add
cwtl
xor
xchg
xchg
insb
in
daa
add
jmp
mov
out
dec
gs
add
call
add
dec
fistl
xchg
mov
add
lea
add
jb
incl
lcall
add
pop
idivl
add
xchg
rcrb
addl
repnz
pushl
cmp
clc
cmp
pop
sub
add
in
shr
roll
fldcw
add
xchg
rcrb
add
insb
fsubl
inc
add
jp
add
xchg
in
mov
lds
jp
movsb
add
cmp
add
aas
dec
mov
fstpl
add
add
call
inc
add
enter
or
insb
sub
xor
jne
add
popl
add
arpl
jmp
call
jmp
add
push
jnp
and
jge
add
add
ss
add
lds
inc
add
jmp
mov
pop
daa
add
mov
add
inc
add
jbe
mov
scas
and
call
add
cmpsl
add
mov
jmp
add
and
test
data16
test
cmp
jmp
add
sbb
push
inc
add
dec
pop
hlt
sub
mov
jge
mov
stos
pop
ja
add
jge
addb
fwait
movsl
add
add
lahf
cmp
add
add
icebp
lods
fisubs
add
decl
push
add
mov
add
movb
pop
xchg
add
sbb
add
mov
add
sti
out
in
add
lcall
add
jb
jmp
add
cmp
add
cmp
mov
add
in
and
xchg
cmp
jno
dec
fadds
add
popa
add
arpl
inc
add
mov
mov
add
call
add
add
lock
fwait
mov
add
add
cld
cmc
fistl
add
fistps
xor
dec
fwait
mov
xchg
cmp
cmp
add
decl
add
cmp
pop
popa
add
mov
movl
jb,pt
inc
add
movsl
add
add
les
mov
sbb
inc
add
rolb
pop
pop
add
sbb
add
jle
add
fldt
roll
aam
fisttpll
add
or
inc
add
shrl
jg
add
jns
xchg
cmp
add
aad
add
dec
add
lahf
cmp
lea
and
jnp
dec
inc
add
and
inc
add
mov
mov
add
add
test
lcall
mov
add
xor
cmp
jb
lcall
add
add
add
add
add
mov
add
add
lcall
jecxz
xchg
test
fnstenv
add
or
add
push
add
call
push
lods
jb
ljmp
ss
repnz
add
add
add
sub
cld
mov
shl
sub
add
decl
rcr
mov
and
sub
or
dec
fwait
inc
add
pop
jle
inc
add
mov
les
out
das
jbe
add
add
pop
mov
je
icebp
loope
push
add
aad
mov
or
adc
ss
and
jge
xchg
out
and
add
lods
push
add
inc
add
jb
lcall
add
xchg
add
add
outsb
xor
ljmp
ljmp
call
fsubs
add
xchg
mov
dec
xor
call
add
sub
out
arpl
decl
test
adc
jmp
fcom
lcall
add
pop
jns
mov
pop
or
inc
add
sbb
mov
pop
add
call
jg
add
sbb
outsb
xchg
push
add
add
push
cmpsl
add
sahf
jne
add
jnp
add
mov
add
in
add
adc
jmp
mov
push
lods
xlat
xchg
addb
shl
add
add
clc
mov
mov
mov
add
and
pop
cltd
push
add
test
addb
or
add
popa
add
adc
fadd
add
out
dec
pop
les
sbb
fistps
pusha
add
test
rolb
xor
call
lret
insl
xchg
push
add
add
filds
sbb
xchg
or
outsb
inc
add
pop
pop
movb
pop
mov
jl
add
pop
cmpsb
add
ja
mov
mov
add
add
and
into
out
push
add
xor
call
lds
ss
mov
add
mov
add
lcall
roll
sbb
ds
fildll
jb
rorb
add
dec
insl
mov
add
push
add
addl
add
shll
lahf
xchg
int3
popf
cli
cmc
jne
add
sarl
xor
incl
pushl
mov
arpl
call
loope
xchg
push
add
dec
xchg
scas
ja
add
add
pushl
add
jmp
add
call
add
addb
mov
sub
stos
jne
add
inc
add
cli
mov
add
adc
jmp
add
mov
add
jg
inc
add
add
jmp
add
call
ljmp
and
call
add
arpl
pushl
add
xor
fdivrp
mov
lahf
aas
adc
lcall
sub
lea
inc
add
add
xor
lcall
jmp
add
cmpsb
add
sbb
dec
sub
not
data16
fsubs
add
jb
inc
add
mov
mov
jno
jmp
add
sbb
add
lcall
add
xor
sub
or
movl
jmp
add
cli
ljmp
xor
cmp
add
pop
cmp
add
pop
addb
lods
add
popa
add
pusha
add
mov
stos
flds
dec
pop
adc
add
ss
add
addl
add
mov
jne
add
xchg
jp
pushf
test
sub
add
add
aas
hlt
int3
lahf
icebp
sti
and
jl
ret
fstps
scas
mov
jae
call
add
lods
addl
add
addb
jo
call
sti
frstor
add
push
cmc
cmpsb
add
cmp
mov
add
lcall
add
pushl
out
stos
inc
add
je
add
dec
mov
out
mov
sub
add
pop
pop
sub
lret
jp
mov
imul
pop
or
cmp
sub
lds
xchg
cs
push
push
xchg
mov
add
mov
scas
cli
jns
dec
repz
add
sub
loope
push
add
rorb
test
jmp
add
testb
add
add
fdivrl
nop
fsubrl
mov
xchg
fdivrs
mov
add
movl
fsubrs
jge
mov
dec
inc
add
in
push
push
cs
cs
sahf
repz
lahf
flds
stos
sti
dec
add
ficoms
add
jecxz
mov
and
lcall
std
add
ljmp
pusha
add
inc
add
sbb
jmp
mov
repnz
add
xchg
jmp
add
call
ret
add
dec
mov
sub
pop
push
add
jne
add
add
mov
hlt
data16
dec
push
lcall
jg
xchg
shrb
dec
mov
add
inc
add
push
and
call
shll
add
xor
pop
fistps
loope
jns
mov
add
add
and
lcall
jae
ljmp
std
mov
sbb
roll
or
add
lret
loope
push
ret
add
iret
fs
dec
xchg
scas
cs
stos
mov
decl
cmp
les
les
fistps
push
add
in
dec
jl
mov
inc
add
fisubrs
and
decl
leave
inc
add
ds
add
hlt
int
movl
in
and
decl
mov
pop
xchg
cli
cmpsl
add
add
mov
enter
fldenv
add
pop
cs
cmpsb
add
popa
add
cmp
pushf
bound
pushl
xchg
add
push
add
decl
les
inc
add
mov
int
add
sub
add
je
ror
cmc
cmp
daa
add
mov
add
ss
mov
add
ljmp
xor
rolb
push
push
cmp
add
lds
les
mov
mov
add
addl
add
add
mov
add
xchg
dec
mov
pop
pop
add
add
je
add
inc
add
ja
add
insl
cmp
lea
mov
divb
cmpsl
add
add
cwtl
imul
dec
add
dec
in
jg
dec
ljmp
pop
jge
pop
dec
repnz
ljmp
addl
jmp
fisttps
add
sub
mov
idivb
decl
cwtl
popf
push
popa
add
and
call
dec
lret
sti
into
xchg
btl
rcll
pushl
add
add
mov
int
cmp
lock
call
add
loop
xor
pushl
popf
add
jmp
add
add
mov
push
add
lret
jne
popa
add
mov
jmp
add
cld
jmp
add
pushl
leave
decl
add
jbe
call
push
pop
inc
add
dec
popf
push
add
loopne
sub
cs
sbb
addl
add
adc
insl
outsb
mov
test
outsl
imul
jg
add
arpl
call
ljmp
add
jmp
lret
add
mulb
jmp
js
mov
xchg
fcomp
shld
add
jb
mov
dec
jns
mov
shll
jp
push
out
popf
mov
add
mov
cmpsb
add
mov
add
movsl
add
lods
xor
pushl
cs
push
addl
jmp
cmp
add
pusha
add
fcomi
fisubl
mov
pop
iret
and
lcall
xor
jmp
xchg
add
sbb
rclb
repz
mov
ljmp
out
inc
add
stos
jmp
int
add
stos
jb
incl
add
popf
mov
pushf
pop
jmp
add
xlat
incl
add
xlat
adc
pushl
stos
dec
ss
add
ljmp
arpl
jmp
ljmp
add
xchg
loop
shlb
bound
fdiv
xchg
jno
std
jmp
leave
cmp
or
add
push
or
add
je
sub
cs
outsb
push
test
outsb
test
in
jbe
jmp
xchg
and
mov
scas
in
loopne
daa
add
add
iret
push
add
pop
cmp
add
int3
cmp
add
loop
xchg
inc
add
add
stos
pushf
dec
jae
call
ljmp
push
test
bound
lcall
add
inc
add
xchg
or
add
bound
lcall
arpl
pushl
incl
ja
sti
or
add
add
dec
int
cli
sahf
pop
and
jmp
add
add
fcomps
repnz
add
xor
call
add
fsubs
add
fisubrl
out
mov
dec
xor
add
add
add
adc
call
add
clc
push
and
xor
in
hlt
addl
call
jg
add
xchg
xchg
dec
cld
cwtl
adc
cmp
jnp
add
into
shll
testl
add
lret
and
out
std
mov
js
add
mov
test
mov
int
add
add
adc
mov
jle
add
call
sub
les
insb
js
add
ret
inc
add
mov
and
ret
or
push
xchg
inc
add
inc
add
pop
add
add
and
sahf
mov
xchg
cmp
adc
add
add
hlt
add
hlt
das
fstpl
xor
stc
icebp
pop
sub
popa
add
push
mov
mov
aas
lcall
jg
and
loop
add
movsb
add
dec
xor
or
add
push
add
add
mov
xchg
mov
push
add
sub
add
sub
add
roll
add
jo
lcall
add
daa
add
mov
incl
rcl
fwait
daa
add
dec
addl
imul
ljmp
add
xchg
pusha
add
repz
scas
nop
movb
jl
sub
add
fidivrs
add
daa
add
add
add
mov
inc
add
dec
jno
jmp
add
or
adc
call
ljmp
mov
movl
dec
mov
call
incl
sbb
add
pop
movb
sahf
cmpsb
add
mov
add
sbb
push
push
add
lcall
add
push
add
call
je
add
add
dec
or
in
sbb
jns
dec
test
cltd
sub
roll
xchg
xlat
and
jmp
add
jmp
dec
rcrb
add
and
jmp
scas
add
lcall
jns
fcmovnb
add
add
mov
mov
scas
ja
add
add
and
dec
add
stc
push
cli
and
jmp
nop
jmp
add
call
add
pop
dec
jne
add
in
or
add
fs
in
imul
add
sub
add
jb
lcall
mov
jmp
add
push
jo
decl
xor
decl
sbb
jle
mov
mov
test
and
jb
cli
dec
cmp
lret
pop
or
idivb
mov
add
add
mov
cmc
add
pushl
mov
jae
jnp
add
add
push
add
sub
js
fstps
cmp
add
fcompl
lcall
out
lcall
ljmp
movb
add
idivl
hlt
lea
sbb
mov
add
shll
sub
decl
add
push
addl
add
sub
das
xchg
mov
insl
loope
negl
add
icebp
and
mov
add
in
sub
add
add
mov
lret
or
xor
add
cltd
mov
add
mov
out
mov
add
fsubrs
lcall
add
sub
add
dec
mov
dec
xchg
sahf
mov
and
lods
sub
sti
hlt
pop
pop
jmp
add
mov
movsl
add
mov
push
add
cwtl
inc
add
loop
jmp
xchg
pop
lcall
incl
add
xor
add
test
leave
mov
add
cmp
ljmp
fstpl
pop
mov
add
xchg
xor
pop
imul
push
jnp
push
add
xor
ljmp
lahf
cmp
xor
inc
add
cmpsb
add
arpl
lcall
inc
add
iret
jnp
push
and
cmp
lock
mov
cmp
push
sbb
sbb
decl
enter
add
add
decl
stos
outsb
addb
pop
dec
enter
pop
divb
incl
in
aaa
cmp
pop
loop
out
lods
adc
jb
incl
fldl
add
add
add
inc
add
repz
jge
add
cmp
incl
lcall
stos
adc
incl
add
add
mov
mov
add
pushf
aas
js
add
lds
pop
bound
ljmp
jb
jmp
add
leave
movsl
add
jg
push
inc
add
pop
add
add
add
mov
cmp
repz
dec
ret
les
insl
iret
dec
jmp
mov
pop
mov
roll
enter
cld
repz
mov
push
addr16
inc
add
or
dec
jp
jl
sub
pop
ret
add
add
loopne
data16
outsb
mov
jno
lcall
inc
add
out
std
sub
add
dec
ss
aad
fcoml
push
push
int3
mov
push
xchg
dec
shll
call
and
insb
mov
add
push
lret
dec
pop
xchg
push
add
and
pushl
cs
add
add
add
sbb
incl
lds
push
add
shlb
add
jns
add
add
jno
call
or
and
pushl
cli
icebp
mov
aam
add
mov
pop
fiaddl
pop
inc
add
add
lahf
sti
fs
push
add
mov
or
cld
fldcw
addb
movsb
add
push
add
lcall
arpl
jmp
add
xor
call
incl
incl
add
imulb
xchg
addl
add
jmp
insb
cmp
in
fdivrl
nop
jb
in
sbb
xchg
jne
add
mov
add
je
testl
xor
jmp
pushl
add
loopne
pop
insl
xor
mov
mov
mov
pop
stos
loopne
jle
add
cmp
xor
orps
add
xor
add
push
ds
mov
or
dec
mov
pushf
xchg
mov
add
ljmp
insl
xchg
xor
decl
decl
inc
add
mov
add
jmp
roll
mov
jecxz
ja
sub
mov
add
and
jmp
ficoms
insl
xor
pushl
add
adc
pushl
fdivrp
daa
add
leave
or
ljmp
add
movsl
add
int3
fstps
ffreep
add
push
add
pop
leave
imul
jnp
add
and
lcall
add
clc
ret
add
divl
add
aaa
mov
sub
fsub
add
add
sub
add
decl
add
fwait
inc
add
imul
jl
add
lods
mov
decl
adc
fcompl
cmp
add
sbb
stos
xchg
dec
xor
jmp
fisttpll
add
add
dec
es
fidivs
imul
dec
pop
sbb
repz
pusha
add
std
loope
sbb
mov
push
add
mov
adc
add
mov
cmp
add
jmp
xor
add
les
ljmp
jmp
add
ljmp
loope
fisttps
add
cmp
mov
aad
add
stos
push
add
lea
xchg
mov
ljmp
jo
in
xor
pushl
cld
popa
add
xor
lods
add
mov
inc
add
pop
add
xchg
and
incl
pusha
add
jne
cmp
add
hlt
add
call
ljmp
les
int
insb
mov
nop
js
pop
mov
xchg
cmc
mov
ret
add
xchg
imul
add
ret
nop
cmp
xchg
mov
rorb
fsubrl
mov
bound
push
test
add
pop
ds
xor
lcall
fistpll
ss
insl
mov
loop
add
add
pop
xor
ljmp
or
movb
insl
stc
push
lds
mov
ljmp
add
and
decl
add
scas
mov
imul
mov
jb
stc
dec
in
inc
add
add
inc
add
cmp
cli
fadd
add
inc
add
mov
add
push
add
ds
pushf
xchg
add
add
data16
cmp
add
movb
push
add
adc
lcall
add
add
clc
adc
add
icebp
out
dec
sub
and
ljmp
js
add
xor
call
and
call
add
add
cmc
addl
ja
rorb
add
addl
loop
lret
jnp
add
add
incl
add
push
pop
mov
decb
add
out
popa
add
hlt
xchg
jmp
add
add
bound
call
or
add
dec
mov
jne
push
add
adc
mov
add
add
fimull
xor
push
sahf
stc
sbb
adc
add
cmp
xlat
xor
call
add
in
sbb
jns
add
cmp
mov
add
add
roll
add
add
jge
and
push
jb
call
inc
add
sbb
nop
data16
inc
add
add
jae
incl
add
insb
sahf
sbb
loop
arpl
cmp
mov
add
aas
jg
or
test
popa
add
xlat
movl
je
add
fistpll
cli
xchg
jo
cld
add
sub
or
sbb
add
add
dec
test
add
dec
sbb
add
ja
add
lret
jmp
add
mov
pushf
push
cmp
movsl
add
decl
addl
push
or
or
lds
sub
add
lods
icebp
popf
xor
add
xchg
ret
test
das
mov
mov
pop
add
fstpl
add
or
add
add
fsub
add
jmp
add
xchg
mov
sub
cwtl
push
push
pop
add
repz
xchg
movsl
add
movlps
mov
xlat
addl
movl
dec
push
add
imul
imull
push
jae
dec
cmp
sub
add
mov
int
push
pop
mov
test
sbb
aam
add
or
add
add
ljmp
xchg
dec
shlb
aas
aam
sub
sar
adc
aad
pop
sbb
add
into
in
cmpsl
add
int3
iret
or
adc
pushl
sbb
add
add
push
add
jmp
inc
add
inc
add
daa
add
pause
jge
jmp
js
add
add
outsl
push
inc
add
pop
mov
cmp
push
add
decl
adc
add
std
imulb
add
and
call
or
cld
cmpsl
add
and
pushl
test
dec
jecxz
test
hlt
ljmp
call
jmp
pop
dec
faddl
add
pusha
add
pop
sub
add
decl
mov
add
lds
int3
icebp
in
add
decl
popa
add
push
out
rolb
add
cmp
add
lods
out
sub
mov
add
add
add
sbb
and
icebp
mov
add
add
jo
lcall
add
test
sub
cld
aam
add
or
test
add
sub
inc
add
adc
jg
add
out
jb
mov
mov
fsin
inc
add
add
and
in
int
add
ja
inc
add
add
mov
add
cli
jno
pushl
jae
call
add
push
sbb
add
stos
pop
decl
jl
push
add
int
add
add
add
add
loop
sub
ja
add
addb
add
or
arpl
jmp
pushl
jl
add
mov
decl
add
or
push
add
call
jle
add
or
mov
add
loop
and
jg
add
xor
add
stc
and
hlt
push
fdivl
dec
xchg
movl
cmp
add
shr
cld
jmp
pop
mov
add
pop
adc
mov
fwait
les
arpl
decl
jno
jmp
add
rolb
add
add
iret
pop
add
pop
mov
in
movb
add
push
add
pop
nop
fwait
pop
jge
pop
jo
decl
nop
mov
add
add
sub
fnstsw
and
jmp
ret
fnstenv
ljmp
push
add
test
loopne
jne
dec
push
add
ss
fistl
add
push
add
inc
add
add
ja
add
int
lods
sbb
add
fisubrl
add
clc
jmp
add
mov
add
ret
add
add
out
rolb
jg
pop
into
stos
int3
ss
pop
pop
add
jg
cld
scas
imul
add
call
add
cmpsb
add
arpl
jmp
add
pop
cmp
add
mov
jno
ljmp
popf
jo
mov
jne
add
fcmovnb
add
fadd
add
add
shlb
decl
je
les
xchg
xchg
pop
aaa
dec
add
jmp
loope
sub
jb
decl
mov
add
push
add
daa
add
repnz
cmpsl
add
inc
add
xor
incl
add
xor
lcall
add
daa
add
decl
add
flds
dec
lret
sbb
xchg
xchg
mov
movb
pusha
add
pushf
filds
incl
adc
call
cmp
add
inc
add
adc
mov
add
roll
cmp
add
ret
add
or
movsl
add
lcall
mov
add
jmp
adc
push
lret
add
add
push
add
add
sub
add
push
rcr
in
add
ljmp
addl
cmpsl
add
aas
and
jmp
scas
stc
ds
add
stos
xor
incl
out
arpl
pushl
add
mov
call
jae
incl
dec
dec
addb
or
add
cwtl
jl
insl
mov
xchg
scas
addb
jnp
add
lods
inc
add
add
mov
jp
icebp
or
fcmovnu
and
pushl
add
pop
or
sbb
add
call
nop
mov
or
add
add
mov
add
test
mov
add
cld
test
sub
imul
scas
lcall
jg
xor
add
ds
mov
mov
jbe
add
or
pushf
test
add
movsb
add
iret
out
aaa
std
pop
add
outsb
and
popf
xchg
sub
mov
add
sub
loope
jl
and
incl
add
call
cmovo
lcall
mov
into
pop
xor
push
stos
sbb
lret
xchg
dec
das
lret
mov
into
icebp
and
inc
add
gs
test
dec
adc
jmp
mov
add
add
xor
lcall
xchg
add
add
and
cld
mov
popa
add
test
sahf
push
mov
call
lods
loop
and
sbb
add
xor
call
add
aaa
test
sbb
sbb
add
xor
add
jmp
add
iret
das
lds
movb
dec
xchg
in
lret
mov
lods
aad
jae
fnstsw
mov
jb
jge
out
faddl
outsb
lods
add
add
call
add
jmp
add
dec
sub
insb
stos
sub
add
add
call
call
arpl
incl
add
in
mov
jmp
dec
xor
ljmp
push
xchg
mov
push
add
sbb
add
insl
inc
add
jg,pn
mov
ljmp
and
incl
incl
addb
das
mov
cmpsb
add
fxch
js
mov
add
ljmp
decl
rolb
dec
fwait
dec
xchg
add
and
pushl
add
mov
incl
loope
xchg
jns
add
xor
jo
jmp
add
in
imul
or
add
incl
inc
add
daa
add
add
mov
setp
cltd
push
add
lods
and
add
decl
pop
nop
and
pushl
add
pop
sbb
imul
xor
jmp
add
int3
mov
incl
add
add
out
mov
repnz
adc
pushl
les
insl
data16
xchg
mov
add
jmp
cmp
test
xchg
push
lahf
jno
call
add
xor
add
cmpsl
add
add
xchg
mov
mov
lea
mov
js
insl
xlat
mov
cmp
jl
sbb
jecxz
mov
or
outsl
cmc
idivl
add
fucom
add
out
cld
dec
out
addb
xor
dec
stos
test
cmp
movl
addl
daa
add
lea
mov
insb
aad
addb
addl
loop
xor
mov
xor
pushl
adc
add
add
int
add
lcall
add
xchg
mov
testl
leave
sub
jmp
add
jbe
aas
imul
clc
xor
dec
mov
add
push
add
std
cltd
push
lcall
xchg
movsl
add
add
dec
mov
dec
xchg
daa
add
add
out
lret
pusha
add
cwtl
aam
push
inc
add
sub
add
aas
pop
push
lods
push
add
add
pop
add
jnp
dec
icebp
arpl
cmp
enter
xor
cmp
addl
jnp
add
shr
in
loop
hlt
xchg
and
lcall
movsl
add
xlat
push
cld
scas
mov
daa
add
xchg
rcrl
inc
add
mov
add
adc
ljmp
push
add
push
in
xchg
mov
jb
jmp
loope
ret
mov
add
loopne
jnp
add
pop
notb
pop
xor
cmp
add
sarl
in
sbb
rcrb
add
loope
sbb
sbb
cmp
adc
ljmp
pop
jmp
movl
add
repnz
add
add
add
incl
add
pop
sub
inc
add
aam
shl
mull
ficomps
scas
shlb
add
push
pop
lods
in
pop
push
add
mov
xor
cmpsb
add
lds
rclb
add
ret
sbb
mov
shrb
mov
int
cli
mov
add
add
jmp
add
ficoms
decl
imul
add
inc
add
inc
add
jge
mov
decl
mov
loopne
test
lds
jnp
imul
add
scas
nop
data16
sbb
or
add
xor
ljmp
add
call
inc
add
cmp
pusha
add
ss
pop
popf
shll
add
add
jmp
add
add
xor
cmp
add
xchg
dec
cmpsb
add
add
daa
add
mov
add
add
mov
cmp
fwait
imulb
dec
jne
add
ljmp
pop
push
sbb
pop
call
mov
repz
movb
cs
add
add
mov
roll
add
adc
ljmp
lock
leave
pop
cwtl
xchg
das
test
add
add
jecxz
std
xor
incl
add
popf
pop
add
add
mov
add
lcall
adc
sub
lahf
out
xor
push
mov
xor
push
add
loope
push
add
loop
xor
sub
arpl
ljmp
add
add
jg
xchg
push
xchg
jae
jmp
add
out
or
add
inc
add
jmp
das
xor
add
pop
addl
add
add
sbb
add
lcall
add
pop
xchg
sub
clc
aad
lock
call
fwait
in
lock
out
daa
add
rolb
nop
mov
push
add
mov
and
mov
and
incl
jo
inc
add
push
out
lds
push
add
add
in
pushf
imul
dec
push
add
mov
add
loope
je
mov
adc
call
je
push
inc
add
pop
or
fimull
add
jns
add
add
dec
cmpsb
add
add
icebp
jecxz,pn
xchg
jmp
jmp
mov
sti
out
mov
push
cmpsl
add
add
mov
nop
imulb
mov
lret
add
je
pop
fdivl
jmp
add
jae
mov
add
and
mov
lea
mov
lcall
mov
xchg
in
adc
call
jp
addl
jns
add
mov
es
std
dec
mov
les
xor
ljmp
add
push
rcrl
pop
test
ds
inc
add
dec
in
mull
inc
add
enter
arpl
jmp
add
add
mov
push
pop
cmp
add
ret
sar
bound
call
adc
fiadds
ljmp
les
je
add
incl
cmp
adc
pushl
add
lret
add
add
add
sub
aas
xor
inc
add
add
add
sbb
ss
sub
imul
add
or
push
jl
add
or
mov
add
inc
add
push
cltd
sub
and
jmp
add
les
xor
jmp
data16
add
inc
add
sub
cmc
lret
roll
test
push
ds
pop
cmc
fistpl
pop
adc
dec
inc
add
mov
mov
ljmp
rcl
popf
and
pushl
popl
decl
lods
ljmp
aaa
adc
add
sbb
sub
add
mov
inc
add
jge
jnp
jmp
movl
fdivrs
mov
roll
mov
mov
out
lret
arpl
in
cltd
sar
adc
dec
data16
data16
add
imul
arpl
jmp
rep
inc
add
jle
add
add
and
mov
addl
sbb
and
pushl
push
in
inc
add
pop
push
add
lods
dec
inc
add
pop
pop
pushf
inc
add
loop
arpl
push
int
add
mov
ret
add
add
dec
sbb
repnz
xchg
shrd
incl
sti
leave
dec
roll
or
movl
add
out
sbb
into
lods
imul
inc
add
sarb
mov
dec
mov
push
add
insl
cmp
or
mov
inc
add
movsb
add
add
call
add
cmp
daa
add
fnsave
decl
nop
int
mov
mov
and
lods
movb
das
scas
test
or
cmpsb
add
push
jmp
ljmp
imul
xchg
add
and
decl
ja
ja
fisubl
incl
lcall
add
lret
jmp
pushl
pop
icebp
sbb
add
fisubrs
mov
pushf
cmc
daa
add
js
dec
je
add
dec
insb
ret
add
sub
add
mov
pop
pop
xor
push
cmp
add
fcomi
dec
jae
pushl
mov
out
pop
add
pushl
adc
pushl
cmpsb
add
add
add
shll
inc
add
cmpsb
add
iret
push
add
ljmp
xor
pushl
or
or
add
daa
add
xor
pushl
jne
xor
fnstcw
add
call
fbld
add
testb
int3
repz
add
incl
add
cmp
call
add
lds
test
jbe
fmuls
movb
add
push
adc
fcmove
addl
in
adc
std
xchg
imul
mov
jns
out
or
jne
roll
fistps
jp
xor
ljmp
cwtl
iret
cmc
sub
mov
add
movsl
add
adc
and
jp
add
imul
jecxz
add
add
add
into
fistl
ret
lcall
add
scas
ljmp
imul
adc
jmp
cs
insb
sbb
pop
cmp
sub
add
add
add
lods
insb
mov
movb
add
cmpsb
add
fildll
adc
cmp
sub
add
ret
add
stc
arpl
call
add
xlat
add
or
xchg
cli
jmp
cwtl
lcall
ljmp
push
add
adc
inc
add
add
lahf
stc
mov
or
add
or
cmpsb
add
add
mov
mov
jno
lcall
rorb
add
add
mov
jne
dec
xchg
jno
mov
pop
jns
std
push
add
cwtl
sbb
add
xor
lcall
repz
icebp
jmp
add
sub
data16
call
lcall
addl
out
les
daa
add
or
jge
and
inc
add
jns
sbb
adc
ljmp
ret
add
xchg
lock
xchg
jecxz
or
dec
sbb
mov
add
adc
fdivrl
add
lock
xchg
push
cwtl
dec
les
in
and
jmp
pushl
add
or
pop
mov
sub
push
add
inc
add
xchg
mov
in
inc
add
inc
add
addb
inc
add
pop
negl
int
push
add
loop
dec
daa
add
ret
dec
addl
test
or
add
ljmp
add
add
into
outsl
xchg
loopne
pop
pop
sti
in
scas
sbb
cld
xor
cmp
mov
movb
add
nop
and
pushl
add
mulb
jl
xchg
dec
jnp
mov
add
add
cwtl
fwait
inc
add
xor
call
add
jg
add
xchg
jae
decl
inc
add
jecxz
hlt
shrl
stos
jmp
addl
add
cmp
ljmp
add
add
xor
pushl
ljmp
add
cmpsl
add
bound
call
pop
and
daa
add
add
jno
lcall
add
pop
leave
clc
addb
std
lods
jp
add
movsb
add
adc
call
mov
add
inc
add
out
int
daa
add
ljmp
add
add
sub
aad
adc
add
inc
add
sub
lcall
les
jb
incl
mov
mov
addb
adc
and
call
add
adc
ljmp
add
xchg
pop
and
add
divps
pop
push
mov
aaa
arpl
ljmp
pusha
add
cmpsl
add
js
movsb
add
add
adc
decl
inc
add
mov
mov
jae
ljmp
push
add
mov
add
add
call
mov
add
stos
scas
inc
add
pop
cld
add
icebp
shl
ja
repz
and
sub
add
xor
add
xlat
fwait
mov
add
pusha
add
push
mov
pop
jge
ss
outsb
int
sbb
jge
pop
add
decl
hlt
sub
cs
jns
stos
or
add
stc
mov
nop
jmp
adc
push
add
nop
jmp
dec
add
xchg
adc
jmp
adc
add
add
dec
add
mov
adc
add
add
add
scas
xor
push
mov
xchg
ret
out
add
push
push
mov
xchg
ret
inc
inc
mov
in
xor
inc
add
add
imul
xchg
add
stos
add
xor
cmp
jmp
dec
jl
add
out
rolb
add
xchg
pushf
push
nop
jmp
test
add
cmp
test
adc
repz
cmp
add
cmp
sti
nop
jmp
xor
hlt
verr
mov
out
and
call
out
aam
add
nop
jmp
movb
jnp
xchg
cmp
nop
jmp
mov
fadd
dec
mov
nop
jmp
add
mov
inc
in
push
mov
xchg
ret
add
and
ljmp
add
add
mov
nop
jmp
mov
add
add
jmp
aas
cmp
dec
mov
jmp
hlt
add
add
mov
push
mov
xchg
ret
add
leave
push
nop
jmp
add
add
add
nop
jmp
add
scas
dec
mov
mov
xchg
ret
fdivrs
lods
and
imul
add
xchg
add
cmp
movsb
nop
jmp
movb
popa
hlt
jnp
popl
jge
nop
jmp
test
aas
ror
sub
add
add
add
add
jmp
nop
jmp
xchg
add
add
or
add
cmp
pop
add
push
mov
xchg
ret
fsub
movb
add
dec
pushl
nop
jmp
add
add
add
cmp
add
add
incl
add
add
push
mov
xchg
ret
pmovmskb
add
nop
jmp
out
add
add
nop
jmp
add
add
add
lcall
nop
jmp
mov
add
and
and
add
out
mov
nop
jmp
out
add
adc
add
jl
stos
mov
nop
jmp
bound
add
add
dec
add
jmp
add
test
xchg
outsb
push
mov
in
clc
add
or
lret
in
lock
cld
sldt
add
scas
add
mov
cmp
mov
xchg
ret
add
cmpsb
bound
add
nop
jmp
mov
push
mov
xchg
ret
add
xchg
int
add
mov
jl
add
add
movb
movsb
add
je
nop
jmp
add
scas
xchg
je
shl
nop
jmp
add
rolb
cmpl
ljmp
inc
nop
jmp
add
fidivrs
jnp
nop
jmp
mov
out
lea
add
or
add
xchg
add
shlb
or
ja
add
mov
sub
jmp
nop
jmp
adc
add
xchg
inc
add
scas
mov
pushl
add
nop
jmp
mov
cmp
add
mov
add
add
decl
or
add
add
xor
add
or
in
add
xchg
add
add
mov
xor
nop
jmp
dec
add
add
adcl
jecxz
mov
call
nop
jmp
add
xor
popa
add
adc
pushl
call
ja
mov
sbb
add
sarb
sub
incl
bound
call
cs
nop
jmp
add
add
add
dec
pop
add
nop
jmp
mov
add
inc
and
nop
jmp
add
nop
aas
mov
nop
jmp
xor
add
add
nop
jmp
hlt
xchg
add
jl
idivb
jae
jmp
add
add
dec
sub
nop
jmp
add
add
add
adc
pushl
sub
jmp
jbe
add
sub
add
add
cmp
testl
nop
jmp
add
add
cmp
jmp
int
add
psrad
mov
cmp
jmp
add
xlat
mov
mov
nop
jmp
adc
hlt
push
add
test
dec
adc
add
jbe
cmp
test
cld
call
add
mov
jno
jmp
add
mov
xchg
ret
lea
add
mov
nop
jmp
xor
sub
popa
add
mov
jmp
fadds
dec
mov
add
add
add
add
add
stos
mov
nop
jmp
add
ljmp
rclb
ljmp
cmp
add
cmpb
add
and
shll
jmp
add
addb
add
jmp
add
mov
add
mov
add
incl
sbb
push
sub
shrb
and
add
add
nop
jmp
mov
add
xor
nop
jmp
add
bound
mov
adc
jmp
fiadds
out
add
rclb
add
mov
out
jne
nop
jmp
jnp
fldl
repz
add
fdivs
sub
mov
xchg
ret
add
lcall
add
fcom
cmp
jmp
mov
dec
aaa
add
add
ljmp
jg
nop
jmp
add
stos
add
or
sti
nop
jmp
mov
call
jne
add
nop
jmp
sbbl
add
and
jmp
bound
xchg
add
add
nop
jmp
fisubrs
add
jl
lret
inc
sti
pushl
add
add
add
add
rolb
add
xor
push
mov
xchg
ret
ds
imul
push
nop
jmp
call
inc
add
dec
push
push
mov
xchg
ret
bound
test
lds
cmp
mov
xchg
ret
add
iret
or
inc
add
jl
js
outsl
loopne
mov
xchg
ret
adc
subl
add
fidivs
add
add
add
add
add
add
rclb
add
scas
inc
add
add
add
add
add
mov
add
ds
jmp
jbe
xchg
add
mov
cmp
popl
add
nop
jmp
add
add
jmp
jbe
add
add
aaa
sti
push
push
mov
xchg
ret
add
nop
jmp
add
sub
inc
jle
adc
add
nop
jmp
add
add
lret
mov
xchg
ret
cmp
lea
mov
xchg
inc
add
scas
add
jo
pushl
add
nop
jmp
jge
pop
mov
call
add
jge
int3
pop
nop
jmp
xchg
add
pop
out
aad
push
mov
fwait
inc
pusha
lret
add
xchg
movb
and
nop
jmp
add
add
repnz
les
add
sub
add
add
xchg
jne
je
nop
jmp
inc
ds
add
nop
jmp
jge
cmp
adcl
pop
nop
jmp
inc
add
push
out
add
push
enter
add
nop
jmp
jbe
fiadds
fildl
add
incl
mov
arpl
dec
push
push
mov
xchg
ret
dec
add
add
jbe
nop
jmp
add
add
sti
mov
nop
jmp
xchg
aaa
jbe
mov
jmp
add
add
mov
jmp
add
push
pop
xor
add
lcall
jmp
sub
cmp
adc
add
add
jmp
cmp
add
nop
jmp
add
mov
nop
nop
or
pause
jmp
add
mov
les
into
jl
nop
jmp
add
call
add
add
inc
add
pause
jmp
jl
inc
xchg
add
jmp
or
add
add
add
cmpsb
add
add
jne
nop
jmp
call
push
call
add
add
nop
jmp
add
ss
lea
nop
jmp
inc
jbe
mov
lcall
nop
jmp
out
cmp
mov
add
mov
push
lret
mov
jmp
dec
fadds
add
rcrb
jmp
ltr
enter
add
inc
add
aaa
add
roll
inc
add
pushl
add
xchg
in
or
add
add
add
es
mov
nop
jmp
dec
out
add
test
jmp
mov
xor
push
nop
jmp
jnp
dec
add
add
ja
pop
nop
jmp
add
mov
add
lea
xchg
ret
cmp
jnp
je
nop
jmp
add
add
nop
jmp
add
jnp
push
add
mov
lods
push
mov
xchg
ret
jnp
add
xor
je
nop
jmp
add
add
add
jmp
push
adc
add
jbe
sub
add
xor
lcall
dec
push
mov
xchg
ret
jge
out
add
je
nop
jmp
xchg
fdivs
dec
add
nop
jmp
movb
adc
pushl
clc
push
mov
xchg
ret
stos
add
add
nop
jmp
int
or
xorl
xor
nop
jmp
add
add
fdivrs
push
xchg
inc
add
dec
and
xor
push
push
mov
nop
jmp
xor
mov
add
xchg
mull
roll
add
les
inc
add
jecxz
cmp
push
mov
xchg
ret
add
add
jl
jg
nop
jmp
add
add
add
jmp
add
xchg
jl
arpl
lock
jmp
shrb
jl
add
seto
std
jmp
add
jbe
cmpsl
add
add
add
add
mov
xchg
ret
scas
aas
mov
repnz
pushl
add
arpl
mov
xor
add
cmp
add
inc
add
popa
add
jno
inc
add
add
cltd
push
nop
jmp
aas
bound
add
jmp
roll
popa
add
sub
js
nop
jmp
add
add
add
hlt
pop
push
nop
jmp
add
sub
cwtl
out
push
mov
mov
add
shll
add
add
movsl
lret
rep
nop
jmp
add
lea
add
nop
jmp
sldt
add
dec
push
cld
test
nop
jmp
add
add
mov
nop
jmp
scas
add
ds
nop
jmp
xor
adc
add
sbb
call
add
xor
and
push
add
and
sbb
dec
adc
add
add
cmp
lret
jmp
inc
adc
inc
add
add
nop
jmp
add
dec
cmp
call
nop
jmp
sub
add
pushl
ljmp
add
add
lea
add
add
adc
incl
add
adc
cmp
nop
jmp
dec
sub
cmp
roll
add
add
nop
jmp
add
bound
xor
push
mov
xchg
ret
rolb
es
jmp
add
cmp
mov
nop
jmp
cmp
jne
nop
jmp
call
mov
add
add
and
sub
rclb
ljmp
inc
add
nop
jmp
add
add
in
push
pop
nop
jmp
add
aaa
cmpsb
jnp
call
fistl
std
or
add
popa
add
add
in
addl
add
add
xor
mov
lret
mov
add
push
mov
xchg
ret
add
push
add
jns
dec
sub
pop
xchg
inc
add
fiadds
mov
push
push
mov
xchg
ret
mov
add
nop
jmp
mov
hlt
add
test
nop
jmp
add
add
add
bound
jmp
add
add
cmp
add
add
decl
nop
jmp
dec
add
xchg
mov
sldt
add
fidivrs
add
push
mov
add
jge
ret
mov
sbb
js
mov
lds
add
add
repnz
xor
nop
jmp
xor
add
pop
add
fdiv
add
and
push
push
jbe
cmp
jmp
add
add
xchg
ljmp
nop
jmp
add
add
cmpl
nop
jmp
add
and
jmp
inc
xchg
add
dec
sub
in
add
sub
sub
bound
cmc
xchg
and
ljmp
pushl
nop
jmp
add
dec
add
and
ljmp
jbe
push
mov
xchg
ret
jbe
decl
push
scas
inc
add
mov
push
in
test
jl
les
nop
jmp
cmp
xchg
stos
nop
jmp
add
test
push
add
inc
add
test
pop
mov
idiv
ljmp
out
add
add
lea
nop
jmp
inc
test
pop
cmp
ja
mov
nop
jmp
add
cwtl
jbe
xor
mov
nop
jmp
add
add
jl
xor
imul
jmp
add
sub
mov
popa
nop
jmp
fadds
dec
xchg
or
jge
mov
add
add
add
add
out
nop
jmp
sub
cmpsb
inc
xchg
add
push
sbb
add
push
mov
xchg
ret
push
stos
add
jnp
mov
add
jmp
add
xor
add
jmp
add
add
jl
and
decl
and
adc
nop
jmp
call
add
add
jmp
xor
add
mov
arpl
add
add
add
add
lcall
nop
jmp
add
add
int
test
cmc
roll
add
pop
pop
nop
jmp
add
xor
add
jmp
aaa
add
xor
add
adc
incl
cmp
cwtl
push
push
mov
xchg
ret
xor
adc
push
nop
jmp
jbe
add
add
add
cmp
push
mov
xchg
ret
xor
add
push
mov
xchg
ret
hlt
and
aaa
jnp
nop
jmp
add
mov
mov
add
adc
decl
add
movsl
fsubrp
xor
ret
add
dec
mov
nop
jmp
add
cmp
movzwl
nop
jmp
add
add
mov
add
pop
pop
nop
jmp
add
add
add
push
mov
xchg
ret
mov
hlt
cmc
inc
add
pushf
les
nop
jmp
add
arpl
jmp
or
add
xor
add
sbb
call
ret
in
fsub
add
add
nop
jmp
xchg
cmp
or
add
nop
jmp
add
add
mov
xchg
ret
xchg
add
mov
xchg
cmp
or
mov
ljmp
nop
jmp
add
push
xor
cmp
mov
add
nop
jmp
add
add
cmp
add
popa
add
addl
add
add
add
add
cmpsb
sub
cmpl
mov
in
jg
add
pushf
add
push
add
fcmovb
jmp
or
add
shrb
aaa
xchg
add
add
jmp
nop
jmp
jbe
cwtl
add
dec
nop
jmp
cmp
arpl
add
cmp
nop
jmp
movb
mov
mov
xchg
ret
dec
add
adc
add
dec
mov
add
nop
jmp
add
xchg
add
pop
nop
jmp
xchg
add
add
mov
ja
rcr
test
push
mov
xchg
ret
add
inc
pop
mov
nop
jmp
add
subl
or
fimuls
mov
add
add
add
add
dec
push
nop
jmp
add
add
add
push
nop
jmp
dec
add
dec
cwtl
cwtl
out
fisttps
in
cmp
add
leave
mov
nop
jmp
add
add
add
jnp
sti
jne
nop
jmp
fiadds
mov
adc
add
cwtl
mov
repnz
leave
nop
jmp
add
stos
xor
sub
cmp
mov
xchg
ret
add
add
ds
push
mov
xchg
ret
xchg
pop
aas
jnp
push
push
mov
xchg
ret
add
sarb
add
mov
inc
add
cmp
nop
jmp
sub
jbe
mov
mov
push
mov
xchg
ret
jbe
decl
mov
dec
adc
cli
sub
push
mov
xchg
ret
mov
inc
insb
insb
nop
jmp
add
inc
bound
incl
add
sahf
pusha
nop
jmp
hlt
add
and
add
add
nop
jmp
xchg
cwtl
jbe
lea
and
jmp
popa
add
out
aaa
addb
rep
push
mov
xchg
ret
xchg
cmp
add
out
movsb
inc
add
ds
pusha
add
add
jmp
add
mov
gs
jmp
dec
cmp
inc
or
jmp
mov
insl
xchg
nop
jmp
add
inc
cmp
cli
mov
nop
jmp
jl
dec
into
shr
nop
jmp
cmp
add
lea
nop
jmp
dec
xor
xor
push
mov
nop
jmp
pop
jbe
call
je
js
mov
xchg
ret
arpl
add
nop
jmp
add
icebp
pause
add
lcall
add
push
mov
xchg
ret
dec
popa
add
pop
or
nop
jmp
xchg
arpl
xchg
fildl
add
ljmp
ljmp
cmc
lcall
xor
fdivrs
notb
incl
rolb
jl
arpl
inc
add
add
jmp
cmp
fsubs
add
add
aam
add
push
nop
jmp
fidivs
add
add
add
add
inc
add
jmp
pushf
inc
add
mov
add
sub
nop
jmp
xchg
xchg
add
mov
add
add
dec
xor
nop
jmp
add
cmp
out
call
incl
jbe
lods
rep
nop
jmp
add
sub
in
mov
imull
dec
in
and
nop
jmp
add
lea
hlt
jbe
mov
nop
jmp
or
mov
cwtl
add
nop
jmp
aaa
call
add
push
outsb
mov
nop
jmp
add
call
jmp
add
jbe
dec
cmp
nop
jmp
fiadds
jl
pop
add
call
add
test
in
pushl
add
cmpsb
jnp
divl
add
nop
jmp
sub
add
mov
mov
push
add
add
call
jmp
add
je
add
nop
jmp
add
add
adc
pushl
dec
add
nop
jmp
add
xchg
dec
stos
add
je
test
nop
jmp
cmpsb
mov
add
add
nop
jmp
and
add
push
cmp
add
jmp
add
popa
add
repnz
cwtl
cmp
nop
jmp
add
out
call
incl
out
fsubrl
incl
add
mov
add
nop
jmp
dec
add
jl
add
iret
mov
nop
jmp
add
jae
inc
add
test
dec
mov
add
nop
jmp
add
add
sub
add
nop
jmp
add
dec
add
aaa
add
pushl
nop
jmp
xor
aaa
or
or
lods
pop
push
mov
xchg
ret
cmp
nop
js
dec
and
push
mov
xchg
ret
add
jmp
nop
jmp
add
add
xor
decl
call
nop
jmp
ds
rclb
sbb
and
add
cwtl
mov
or
mov
xchg
pop
ljmp
jmp
fsubrs
inc
add
incl
call
movsb
nop
jmp
mov
dec
dec
cmp
nop
jmp
add
scas
aaa
pop
mov
push
mov
xchg
ret
inc
int
push
nop
jmp
int
jl
out
add
adc
call
jmp
add
add
add
add
imul
nop
jmp
add
dec
add
pop
push
mov
xchg
ret
movaps
jl
pop
add
push
push
mov
xchg
ret
add
movb
add
dec
jne
nop
jmp
add
cltd
mov
nop
jmp
xchg
add
sub
add
push
push
mov
xchg
ret
add
mov
dec
cmp
jmp
cmpsb
add
add
add
add
loopne
pop
call
nop
jmp
fsubs
add
add
lcall
inc
push
adc
nop
jmp
add
sub
push
outsb
add
nop
jmp
fadds
dec
orl
add
jne
nop
jmp
add
out
je
nop
jmp
xchg
movb
mov
push
mov
xchg
ret
rolb
lods
mov
nop
jmp
addl
pop
xchg
pinsrw
inc
nop
jmp
add
xchg
add
mov
and
jmp
hlt
add
out
push
nop
jmp
xchg
xorl
push
add
add
mov
xchg
ret
mov
inc
add
jne
nop
jmp
subl
xchg
mov
dec
push
nop
jmp
dec
cmp
rep
nop
jmp
add
add
aas
add
call
nop
jmp
sarb
add
mov
int3
dec
nop
jmp
add
add
jbe
rep
nop
jmp
add
add
jbe
sub
jmp
sub
add
sti
lea
push
mov
xchg
ret
movb
add
dec
pusha
nop
jmp
add
mov
add
cld
push
mov
add
mov
push
xchg
mov
nop
jmp
dec
es
hlt
sbb
jmp
add
adc
ret
add
and
mov
xchg
ret
add
cltd
and
nop
jmp
arpl
add
call
mov
xchg
ret
aas
jnp
add
idiv
incl
mov
sub
inc
add
rep
nop
jmp
popa
add
nop
jmp
subl
add
add
call
pop
pushf
inc
add
fadds
jmp
add
pushl
add
lds
roll
add
lods
inc
add
aaa
xchg
sub
jmp
xchg
add
pop
mov
nop
jmp
punpckldq
popa
nop
jmp
add
add
xor
mov
add
adc
dec
nop
jmp
xor
add
testl
jmp
test
arpl
xor
and
mov
nop
jmp
dec
add
dec
aam
add
add
mov
xchg
ret
add
out
mov
nop
jmp
add
xor
lea
nop
jmp
aas
add
or
jbe
in
decl
push
mov
xchg
ret
add
lahf
pop
push
mov
xchg
ret
add
add
icebp
nop
jmp
add
add
add
lret
inc
nop
jmp
hlt
addl
sub
add
add
jge
nop
jmp
aas
add
add
add
add
jmp
cmp
nop
jmp
add
add
pushl
nop
jmp
push
xchg
inc
add
add
icebp
jmp
pop
inc
lea
jl
jnp
incl
addl
add
add
add
mov
nop
jmp
inc
add
add
jne
nop
jmp
ds
add
inc
add
mov
add
xchg
std
call
nop
jmp
add
add
add
push
lea
test
jmp
add
add
call
pusha
nop
jmp
cmp
test
inc
iret
add
nop
jmp
mov
add
ds
nop
jmp
aaa
fcom
jnp
add
sub
ficoms
incl
ds
add
sub
xor
nop
jmp
out
xor
inc
jl
dec
sub
incl
add
add
mov
filds
mov
add
xchg
add
inc
add
add
add
call
jmp
decl
jmp
sub
cmp
mov
nop
jmp
add
add
xchg
imul
add
add
sub
add
incl
add
add
add
push
mov
xchg
ret
mov
imul
nop
jmp
add
add
mov
nop
jmp
xchg
add
cmp
jno
nop
jmp
dec
out
add
mov
or
call
add
inc
cwtl
out
pushl
nop
jmp
add
sub
add
nop
jmp
add
add
add
dec
fldl
inc
movsb
inc
add
out
leave
add
nop
jmp
popa
lea
fadds
fmuls
jmp
add
add
inc
pop
push
jne
mov
nop
jmp
lea
popa
jbe
add
mov
nop
jmp
ficoms
repz
leave
nop
jmp
add
add
pop
mov
nop
jmp
inc
add
add
cmp
jmp
add
mov
sti
nop
jmp
add
fidivrs
push
nop
jmp
hlt
arpl
jbe
add
je
add
push
add
add
decl
rclb
out
add
cmp
movb
mov
xchg
ret
or
add
nop
jmp
add
cmp
add
nop
jmp
mov
add
add
jmp
jnp
add
popa
les
outsb
call
nop
jmp
add
add
mov
mov
lea
dec
xchg
add
loope
push
add
movzwl
nop
jmp
add
rolb
add
dec
jne
nop
jmp
cwtl
mov
cmp
jae
jmp
push
cmp
enter
out
decl
popa
add
fiadds
push
ljmp
dec
add
in
or
add
mov
mov
nop
jmp
add
add
and
lcall
popa
incl
cmp
add
lea
fisttps
test
call
call
xchg
mov
xor
push
mov
xchg
ret
jge
add
clc
repz
incl
dec
sub
addl
inc
in
popa
push
mov
xchg
ret
mov
xchg
push
mov
xchg
ret
out
fists
jmp
add
adc
add
incl
cmpsb
and
inc
adc
jmp
mov
add
add
add
cmc
incl
xor
inc
aaa
test
jns
jne
nop
jmp
add
cmp
add
add
nop
jmp
cmp
movl
lcall
dec
add
add
jl
and
xchg
sahf
inc
add
sti
ror
nop
jmp
add
add
cmp
fdivrp
call
incl
xor
nop
jmp
add
xchg
add
add
mov
call
incl
add
stc
jne
nop
jmp
cwtl
test
cltd
subl
nop
jmp
add
push
nop
jmp
sub
fimuls
decb
icebp
incl
mov
xor
mov
nop
jmp
or
xor
ljmp
xor
add
mov
mov
push
mov
xchg
ret
add
in
pushl
xchg
cmp
mov
add
push
nop
jmp
movb
xor
add
add
pop
nop
jmp
cmp
add
hlt
adc
fadds
repz
mov
xchg
ret
fidivs
jnp
add
mov
xchg
ret
sub
xor
int3
and
push
mov
xchg
ret
aaa
add
xchg
cmpl
decl
add
xchg
pusha
add
addb
jb
nop
jmp
dec
rolb
xor
ljmp
add
nop
jmp
adc
add
mov
nop
jmp
add
jnp
add
mov
nop
jmp
add
add
jmp
add
mov
push
mov
xchg
ret
sub
hlt
hlt
ret
add
outsb
add
add
xchg
add
cmp
mov
shr
push
mov
xchg
ret
xchg
cmpsb
call
jmp
add
inc
xor
loop
jmp
arpl
bound
sub
test
push
nop
jmp
lea
add
cmpsb
cmp
jge
fistl
add
cmp
movzwl
nop
jmp
add
dec
mov
jmp
addl
add
pop
addl
mov
nop
jmp
add
stos
add
add
pusha
push
mov
xchg
ret
aaa
add
adc
jmp
sub
cmpsb
add
ljmp
cmp
popl
nop
jmp
add
add
xor
xor
mov
xchg
inc
add
xchg
add
mov
nop
jmp
hlt
int
add
test
dec
mov
nop
jmp
add
add
push
mov
xchg
ret
dec
pop
adc
fisttps
jmp
add
jbe
add
add
icebp
mulb
add
mov
nop
jmp
add
mov
push
mov
xchg
ret
add
cmp
inc
loopne
mov
xchg
ret
fiadds
loope
popf
add
nop
jmp
add
add
mov
add
add
nop
jmp
add
add
mov
nop
jmp
movb
jl
sahf
jne
nop
jmp
jge
add
add
push
nop
jmp
cmp
out
add
loopne
incl
add
cmp
cmpsb
inc
add
add
in
pop
push
nop
jmp
fcoms
sarb
dec
mov
nop
jmp
ds
fsubs
inc
add
es
mov
scas
inc
add
add
xchg
fistl
jmp
add
add
and
add
jmp
mov
add
push
add
les
add
rol
add
add
adc
incl
incl
pop
nop
jmp
add
dec
mov
sbb
jo
call
incl
dec
xor
add
dec
push
nop
jmp
add
cltd
push
push
mov
xchg
ret
inc
add
jbe
push
push
mov
xchg
ret
popa
xor
add
or
pop
add
add
add
pop
nop
jmp
add
jnp
mov
jb,pt
nop
jmp
fdivrs
test
jmp
cwtl
aaa
dec
sbb
nop
jmp
add
add
add
add
add
incl
add
xchg
faddl
jge
nop
jmp
add
test
xor
in
cmp
nop
jmp
add
dec
cmp
test
call
pushl
fsubrs
add
ljmp
adc
imul
mov
cmp
add
call
insb
idiv
decl
add
cmp
lcall
stc
ljmp
add
testb
ljmp
out
mov
add
add
rclb
incl
jl
fadds
add
out
mov
nop
jmp
fidivrs
dec
add
nop
jmp
push
dec
add
dec
dec
jno
ljmp
push
push
mov
xchg
ret
mov
add
nop
jmp
xchg
add
jge
cltd
add
nop
jmp
aaa
add
add
xchg
enter
ljmp
incl
pop
xor
mov
mov
xchg
ret
scas
or
add
push
nop
jmp
dec
or
dec
add
add
nop
jmp
jl
add
jbe
add
add
inc
add
add
imul
decl
adc
lea
fdivr
call
jmp
add
pop
push
mov
xchg
ret
out
sub
mov
add
nop
jmp
add
sub
loope
movsl
add
and
nop
jmp
aaa
add
add
leave
nop
jmp
add
xchg
rorb
add
add
mov
adc
jmp
int
mov
push
mov
out
add
jmp
add
add
mov
popa
add
add
add
mov
jle
add
rcrl
xchg
std
and
movl
add
arpl
js
addb
add
repz
dec
insb
stos
and
call
jmp
xlat
pop
stos
mov
add
mov
add
xchg
mov
add
mov
cltd
repnz
cmp
or
cmpsl
add
add
into
popf
loope
into
xor
and
call
ret
add
add
inc
add
sbb
add
jb
mov
les
popf
jmp
add
mov
add
scas
movl
sbb
add
call
or
pop
add
add
mov
add
sbb
add
scas
data16
pop
cld
sub
xchg
jne
add
mov
add
incl
add
mov
mov
dec
mov
add
rolb
pop
dec
das
int
xor
decl
add
add
mov
lock
add
inc
add
mov
dec
stos
mov
rolb
mov
or
add
mov
jmp
pop
add
fbstp
add
sahf
and
call
add
fdivrl
icebp
fiadds
add
or
iret
cmpsl
add
incl
add
cmpsl
add
dec
mov
add
mov
add
decl
mov
out
cmp
inc
add
lds
or
add
jns
xchg
jge
roll
add
popf
stos
mov
push
xchg
or
add
add
inc
add
loopne
push
or
je
add
sbb
add
fldenv
add
jno
out
pop
dec
xor
lcall
add
mov
add
push
add
loop
insl
movl
shl
add
test
addb
mov
nop
dec
sbb
add
inc
add
sbb
add
stos
jl
add
jae
ljmp
js
add
cmp
incl
add
dec
or
add
pop
jns
ss
dec
mov
mov
add
notl
pushl
ljmp
mov
cmp
push
add
aas
mull
fbstp
add
cmp
add
adc
jl
cmp
or
jl
add
mov
insb
outsl
dec
roll
mov
insl
adc
incl
jno
decl
add
xchg
ja
pop
xchg
out
push
add
int3
lret
sbb
mov
movsl
add
movb
push
xor
ljmp
test
add
bound
lcall
and
mov
add
add
cli
bnd
sub
pop
into
stos
cli
and
pushl
mov
mov
add
mov
add
add
icebp
inc
add
pop
add
movl
add
add
lods
ret
add
push
sbb
add
popa
add
rorl
imul
mov
adc
cmp
xchg
jne
push
push
mov
add
cmpsb
add
incl
sub
aam
and
ljmp
mov
out
jp
add
push
mov
xchg
sbb
add
cmp
mov
fstpt
pop
push
aas
je
add
xor
jmp
decl
pushf
mov
and
dec
or
cld
pop
add
jo
incl
add
pushl
decl
dec
out
adc
cmp
incl
add
leave
lock
add
jl
sbb
or
add
add
les
nop
xor
push
xor
pushl
fbstp
lret
inc
add
jnp
jmp
add
mov
add
shll
ljmp
add
add
add
xor
decl
add
sub
fdivrl
add
add
data16
std
pop
iret
adc
jmp
add
repnz
js
add
loopne
ja
add
pop
adc
add
cmp
mov
inc
add
or
pushf
ljmp
test
cmp
dec
das
pop
cmp
fsub
add
add
test
jg,pn
ret
add
incl
add
add
dec
popa
add
xchg
pop
mov
sbb
dec
inc
add
add
jecxz
inc
add
add
add
push
add
mov
adc
ljmp
or
add
add
data16
add
ljmp
jl
add
add
push
xchg
js
push
add
sub
pop
jmp
outsb
adc
jmp
push
add
jmp
add
pushl
add
addb
mov
jecxz
aam
add
fldenv
das
xor
add
inc
add
es
add
enter
mov
insl
lret
add
sysret
add
xor
lcall
add
fnop
scas
repnz
add
add
test
dec
hlt
pop
add
add
lret
add
movsl
add
sub
add
pop
rcl
shrb
add
sti
pusha
add
mov
test
aad
out
adc
inc
add
dec
inc
add
pop
loopne
sub
cmp
movsb
add
add
pushl
mov
xchg
je
add
add
xlat
add
mov
add
popa
add
mov
add
movb
add
add
pop
lods
fsubp
add
adc
cli
add
sbb
add
call
jmp
lcall
addb
push
sub
push
lds
imul
enter
mov
add
flds
fstpl
pop
xlat
sahf
cld
or
aam
add
in
aas
lock
add
pop
arpl
jmp
in
jle
add
imul
mov
sub
outsb
jge
mov
mov
cmp
cld
or
mov
mov
and
sti
pushf
repnz
add
dec
shll
popa
add
adc
decl
add
push
pextrw
add
mov
add
ret
add
inc
add
add
add
and
stos
mov
mov
dec
mov
insb
fsts
add
iret
cld
jo
incl
pushl
add
cmp
mov
mov
add
add
jecxz
movl
pop
fbstp
add
iret
ljmp
jbe
add
jbe
add
jmp
popa
add
jns
xor
jmp
add
add
add
add
nop
sub
add
xor
mov
jb
decl
leave
pop
into
gs
xor
lcall
add
addb
add
pop
movb
rol
add
int3
aad
arpl
lcall
add
call
jmp
add
push
sbb
cmp
rcrb
ret
add
add
add
jmp
add
in
lcall
add
jo
ljmp
decl
inc
add
iret
jo
mov
lret
adc
jmp
add
dec
sub
call
bound
pushl
mov
mov
add
dec
lods
out
cld
rolb
add
stc
addb
push
ljmp
add
jle
rolb
pusha
add
repnz
pop
add
add
fdivrs
mov
ds
roll
ret
add
pop
add
mov
enter
mov
add
das
test
jle
in
adc
xor
jmp
add
ljmp
and
add
lcall
add
inc
add
popa
add
jl
push
test
pop
aad
or
add
jmp
addb
lods
add
cmp
fadds
inc
add
shr
mov
movl
call
add
fisubs
sbb
add
inc
add
add
inc
add
or
inc
add
add
ljmp
or
and
out
push
add
aas
dec
les
xor
add
adc
add
leave
in
push
add
mov
repz
add
lods
loope
outsl
jnp
add
pop
adc
call
pushl
xchg
lods
cli
cmp
add
xor
ljmp
add
out
in
outsl
pop
inc
add
in
mov
sub
lcall
cmp
add
add
xchg
pusha
add
pop
jl
aad
add
and
ljmp
add
xchg
mov
clc
push
mov
add
clc
cli
addb
add
pushl
ljmp
mov
out
mov
lock
inc
add
incl
push
cmp
add
addb
rolb
cld
adc
add
add
add
push
cmpsl
add
add
aad
dec
mov
mov
cmp
add
les
xchg
pop
mov
add
mov
cmp
lcall
in
std
pop
ret
add
inc
add
ja
push
sahf
xor
fcmovne
rdtsc
add
jp
jnp
cmpsb
add
mov
mov
add
add
or
ljmp
cmp
pushl
push
add
cmc
in
mov
jmp
jae
call
inc
add
out
add
call
pushl
dec
jne
add
add
fistpl
add
sbb
call
cmpsb
add
sub
cmc
add
ljmp
jno
mov
cld
pop
movsb
add
adc
decl
xchg
jb
decl
pop
out
pop
out
into
sbb
cmp
popa
add
inc
add
add
les
cmp
dec
ja
pop
mov
add
fiaddl
movl
lahf
sub
cmp
lahf
out
dec
jnp
lods
and
xchg
int
jne
stos
xchg
push
push
das
repz
sbb
nop
out
daa
add
pop
out
mov
cmpsl
add
push
addb
add
xor
pushl
push
cmp
sbb
sub
xchg
cmp
mov
mov
add
inc
add
mov
add
add
fnstsw
pushl
incl
add
ljmp
imul
pop
out
xor
add
jg
ds
add
jg
add
dec
rolb
mov
add
or
mov
cmp
ljmp
leave
arpl
pushl
mov
call
adc
push
add
dec
popa
add
ss
cmp
mov
call
xlat
push
add
lock
add
insl
inc
add
aam
add
add
icebp
and
mov
or
xor
ljmp
call
push
add
push
add
sbb
fdivl
xor
decl
xchg
add
incl
decl
dec
rolb
and
lcall
add
add
cs
lcall
or
push
int
add
add
add
pop
ja
icebp
pusha
add
mov
mov
je
mov
add
add
into
test
divb
pushl
add
je
sub
test
sbb
lods
int3
out
cwtl
in
std
movsb
add
cmc
test
movb
lods
int3
jp
mov
add
mov
add
mov
je
add
pop
push
add
jle
add
add
movb
fidivrl
test
int
addb
pop
add
add
add
push
add
add
mov
cmp
shl
mov
shll
add
je
addl
adc
incl
ljmp
add
add
pop
out
adc
sub
dec
dec
sbb
add
add
rcl
add
push
inc
add
add
sub
push
add
mov
adc
add
lret
popf
cmp
cltd
or
jmp
add
xor
cli
sub
add
divb
pop
jp
fprem1
inc
add
rolb
add
in
mov
ljmp
add
stos
bound
call
roll
pop
lea
out
cmp
and
call
shlb
add
add
add
jmp
cwtl
pop
or
mov
cmc
imul
xchg
xor
pushl
add
cltd
cwtl
sub
cmp
popa
add
xlat
xchg
xchg
divl
add
adc
decl
clc
mov
add
pop
sbb
add
lods
add
push
add
mov
mov
pop
mov
dec
mov
add
mov
add
mov
cmp
add
stc
jae
mov
push
cli
cmp
add
icebp
nop
aaa
insl
shrl
cwtl
push
cmp
cwtl
icebp
dec
xor
add
add
add
stc
lods
ret
add
sub
lcall
push
add
xor
add
out
data16
testl
adc
lcall
push
daa
add
add
add
add
pop
fimull
addb
mov
loop
data16
ljmp
sbb
mul
add
xchg
xchg
xchg
xchg
xor
jp
add
pop
out
cmc
test
push
add
or
lret
pushf
mov
mov
in
or
inc
add
jl
add
add
fcmovb
add
pop
sti
pushf
jb
pushl
insl
cmp
add
mov
into
inc
add
push
jb
jmp
add
add
push
movb
add
xlat
cmp
push
jno
clc
inc
add
imul
sub
pushf
test
lea
xlat
roll
dec
mov
inc
add
pop
mov
sub
nop
movl
pop
adc
pushl
mov
in
fmuls
xor
pushl
aas
add
add
ljmp
or
add
nop
adc
incl
add
pop
xlat
or
mov
xor
jmp
add
iret
int3
rorl
jmp
add
add
jp
add
rolb
add
cmp
add
call
sbb
sahf
stos
inc
add
mov
imul
xlat
stos
imul
add
decb
inc
add
test
fwait
dec
mov
test
sub
clc
nop
adc
push
lods
leave
push
icebp
neg
xor
inc
add
cmpsb
add
dec
call
in
jbe
cwtl
addb
inc
add
inc
add
add
adc
sbb
sbb
add
mov
popa
add
xor
incl
add
cli
xlat
popa
add
loopne
xor
lcall
add
std
mov
add
add
mov
hlt
data16
mov
add
add
fstpt
scas
in
jl
aas
sbb
mov
push
add
int
stc
xchg
aas
addb
or
js
adc
mov
and
cmp
cltd
in
aas
and
incl
pushl
jbe
sub
and
ret
add
cmc
dec
loope
daa
add
pushl
lcall
push
loopne
jnp
jne
jb
fimull
stc
xchg
aas
mov
xor
jmp
pop
in
into
xchg
pop
lock
pop
aam
push
fadds
incl
add
pushf
push
cltd
imul
mov
aam
imul
pop
mov
cli
test
add
test
xor
call
call
xor
jmp
and
fdivrs
mov
push
add
movl
add
call
ret
add
mov
rolb
add
out
loop
add
ljmp
lcall
js
sbb
add
ljmp
jecxz
hlt
adc
aas
test
add
add
add
add
fidivl
add
or
push
mov
add
mov
lret
repnz
out
adc
sub
jmp
push
testl
add
cmp
push
hlt
push
roll
js
add
lock
test
add
push
movl
add
pop
add
pushl
xchg
int
add
sub
rcl
nop
arpl
jmp
insb
mov
mov
les
bound
call
jmp
movsb
add
push
add
incl
cmp
add
pop
fstpl
adc
add
jmp
les
pop
xchg
addr16
int
aaa
pop
leave
out
dec
pusha
add
lret
push
add
add
and
jbe
add
mov
leave
jg
add
pop
out
out
push
loop
outsl
jno
lcall
add
pushl
ja
sub
add
or
add
rorb
add
and
incl
lcall
hlt
add
lcall
add
and
pushl
add
lcall
add
xchg
jno
ljmp
lods
adc
add
add
cli
push
shlb
push
add
xchg
ds
add
xor
dec
leave
scas
cmp
rcll
add
dec
inc
add
jns
xchg
mov
push
outsb
xor
add
mov
add
or
inc
add
or
rorl
add
imul
xchg
lock
fs
fcmovnb
add
call
lcall
jns
jae
jmp
decl
xchg
dec
dec
push
add
mov
in
inc
add
mov
pusha
add
mov
push
add
in
lock
add
adc
ljmp
add
test
add
fdiv
push
xchg
stc
ret
jno
jmp
add
xchg
lret
dec
in
leave
adc
jmp
add
add
clc
roll
mov
push
scas
sub
lret
and
jmp
add
mov
out
push
jae
pushl
lcall
shll
add
stc
and
jmp
add
mov
push
add
jmp
out
inc
add
pushl
call
movsl
add
add
lods
mov
add
add
repnz
xor
jmp
add
lea
push
add
jo
jmp
add
aam
scas
jge
cmpsl
add
add
hlt
insl
add
call
js
mov
add
scas
out
push
lea
nop
iret
pop
incl
add
in
adc
lcall
int
xchg
stc
std
mov
add
jno
call
mov
aas
out
xchg
mov
mov
sbb
sti
sub
fnsave
push
add
fwait
add
rep
sbb
testl
in
add
mov
mov
pop
add
and
ljmp
add
add
sbb
add
add
incl
add
xchg
jmp
add
or
repnz
jmp
add
lcall
imul
push
jae
jmp
add
pop
add
and
pop
add
mov
cltd
into
or
mov
mov
and
and
ja
fcompp
and
incl
add
bound
pushl
add
fcmovb
add
in
mov
mov
pop
div
mov
and
mov
mov
add
adc
jmp
add
xlat
aas
popf
ret
shll
add
and
in
mov
dec
sbb
add
add
iret
mov
add
lcall
add
call
add
shlb
decl
sbb
cmpsb
add
pusha
add
add
jp
add
call
in
cli
sarb
add
add
or
cwtl
jge
add
sub
insl
popa
add
pushf
xchg
in
test
lds
jmp
jns
xchg
fisttps
push
mov
sbb
add
data16
cmpsl
add
add
mov
movsl
add
adc
jmp
add
pop
loope
cltd
inc
add
or
push
add
aas
out
mov
neg
mov
adc
add
add
add
xchg
call
add
inc
add
shl
add
add
call
insb
push
add
mov
xchg
loop
jo
ljmp
idivb
push
or
cmp
add
add
add
fidivrs
add
add
decl
incl
jnp
add
mov
call
fstp
sub
add
push
add
xchg
jb
jmp
add
mov
add
xchg
sbb
cmp
and
decl
add
add
add
sbb
add
xchg
test
add
incl
ljmp
iret
mov
add
call
adc
fldenv
xchg
mov
xchg
mov
ljmp
jmp
flds
mov
add
add
mov
addb
add
daa
add
or
xor
dec
sbb
add
repnz
add
add
cwtl
xor
sub
jle
std
pusha
add
add
pushl
mov
mov
pushl
add
loop
in
test
addr16
mov
lds
dec
cmp
sub
nop
dec
mov
xchg
pop
xor
lcall
mov
shl
addb
add
in
mov
xchg
cmp
jae
decl
add
std
or
insb
aam
add
mov
rcrb
pop
mov
data16
incl
add
or
lods
test
jno
lcall
popf
xchg
or
add
js
mov
fwait
loopne
jae
incl
add
add
insl
test
mov
js
imul
dec
and
decl
dec
movb
mov
add
add
or
ljmp
or
add
and
incl
pushl
add
inc
add
icebp
daa
add
mov
fcoms
incl
xchg
idivl
ljmp
pop
mov
clc
pop
adc
dec
or
mov
stc
adc
js
adc
fstpl
pop
lds
add
call
add
cli
loop
xor
pushl
shlb
mov
pop
dec
stos
mov
inc
add
mov
insl
push
add
lcall
jg
mov
shll
add
xor
lcall
pop
sbb
test
les
movb
add
cli
sbb
add
push
add
hlt
addb
add
loop
xor
ljmp
or
add
xchg
or
xchg
lret
add
add
lcall
push
add
push
addl
call
sti
pop
mov
insb
push
adc
call
add
add
shll
add
test
xlat
and
call
push
push
add
jbe
movl
call
nop
testb
dec
insb
rolb
jae
call
add
mov
mov
add
push
mov
add
pop
out
stos
cmp
add
pushl
out
movl
inc
add
shrb
and
decl
or
mov
jno
jmp
add
xor
add
out
jno
decl
add
cmp
mov
decl
mov
cmp
jmp
push
mov
xchg
xor
add
and
aaa
jo
cld
cs
out
pop
stos
pop
fisttpl
cld
dec
mov
add
incl
add
out
addl
repz
addb
and
jmp
xchg
push
movl
and
pushl
inc
add
mov
clc
inc
add
sbb
ljmp
or
add
cmpsl
add
sbb
add
ret
add
add
scas
in
movsb
add
add
dec
push
and
sbb
add
pop
mov
jnp
mov
inc
add
out
xchg
mov
es
add
add
add
mov
and
clc
cli
std
add
add
inc
add
add
adc
lcall
mov
mov
in
les
add
push
or
add
fadd
add
xchg
insb
inc
add
add
add
mov
rolb
dec
into
jecxz
mov
jnp
push
add
cmc
inc
add
jp
add
add
addb
add
dec
rolb
add
pop
add
sahf
add
incl
add
add
push
xchg
aad
clc
lds
push
add
jge
aas
stos
test
push
inc
add
loopne
outsl
adc
call
xchg
push
add
cmpsl
add
add
call
cs
pop
popa
add
fsubp
add
xor
add
mov
mov
add
xchg
movl
pop
add
add
mov
pop
cmp
sbb
decb
incl
add
adc
add
inc
add
test
cmp
aam
add
nop
sbb
cli
mov
ret
add
add
pop
jmp
loope
cs
cs
mov
add
xchg
addl
mov
ljmp
jmp
and
push
pop
ja
mov
add
cmpsl
add
xor
decl
add
add
mov
mov
nop
push
adc
out
or
add
xchg
sbb
decl
scas
loop
not
scas
pop
addb
into
adc
lahf
or
xchg
ficoms
add
mov
add
outsb
jnp
add
sbb
fsubr
inc
add
sub
add
mov
mov
xor
in
ret
icebp
and
jmp
mov
add
fwait
inc
add
push
bound
dec
push
outsl
mov
adc
call
xchg
mov
dec
xchg
dec
mov
mov
add
add
jb
decl
jo
jmp
add
push
dec
sub
push
mov
add
call
add
repz
negb
movb
add
icebp
push
add
pushf
cvtps2pd
imul
add
add
mov
pop
mov
dec
int3
mov
push
ret
sbb
hlt
std
sbb
inc
add
add
mov
add
pop
mov
add
adc
ja
add
fwait
jno
decl
mov
pop
pushf
xchg
repnz
movsb
add
add
dec
fimull
push
mov
add
dec
ffreep
add
daa
add
jbe
add
add
and
decl
add
iret
fidivs
add
sbb
pop
test
push
cld
cmpsb
add
sub
sbb
add
ljmp
mov
push
cli
sbb
add
pop
pusha
add
cmp
xchg
cmp
and
lcall
neg
ljmp
movsl
add
lcall
fdiv
and
inc
add
push
fdivrs
outsb
push
add
fidivl
incl
add
adc
pushl
add
add
mov
pop
mov
add
mov
call
incl
sbb
jne
jl
outsb
inc
add
add
pushl
incl
sub
mov
push
add
loope
sub
out
adc
jmp
add
enter
pop
dec
inc
add
adc
mov
movb
adc
cli
adc
inc
add
incl
adc
call
add
incl
lods
fsubrp
push
add
testl
decl
fldt
paddb
loop
test
dec
fnstenv
jmp
jmp
add
push
dec
addr16
xor
stc
das
mov
add
inc
add
insb
push
dec
jl
fistpll
jp
mov
add
lahf
ret
add
hlt
cmp
decl
or
adc
ljmp
clc
cltd
sub
call
cltd
add
or
add
pop
cwtl
xor
push
add
add
mov
jg
push
pop
aas
scas
popf
ret
arpl
sti
push
add
mov
movb
stos
das
loope
push
loop
jmp
dec
pop
sahf
xor
jmp
add
cltd
mov
add
ljmp
pop
mov
out
xchg
dec
and
jmp
rcrl
js
out
xchg
fsubr
dec
mov
or
add
decl
mov
add
xor
decl
push
or
mov
or
add
mov
add
push
in
add
ljmp
out
cmp
push
add
ja
outsb
dec
lea
out
mov
out
xchg
pop
or
call
jp
add
and
incl
add
add
data16
jno
lcall
cwtl
push
add
push
mov
imul
add
push
add
pop
jae
decl
movsb
add
scas
test
cwtl
les
mov
addb
add
add
xor
mov
add
add
mov
lcall
mov
add
fwait
pop
xor
pushl
add
aad
mov
test
cltd
add
call
add
sbb
add
hlt
out
fwait
jmp
add
movb
call
loop
imul
imul
add
sbb
inc
add
jmp
out
and
ds
add
add
decl
roll
mov
out
jp
nop
dec
jb
call
mov
test
call
pushl
jl
xchg
in
mov
push
xor
test
outsl
insb
xor
lcall
add
mov
addb
icebp
aas
js
addl
sbb
add
xchg
pop
adc
inc
add
pop
testb
sbb
and
leave
and
lcall
xchg
repnz
add
mov
js
add
sub
jno
jge
lock
jb
ljmp
xchg
push
lea
add
dec
cmp
xor
jns
add
dec
mov
cld
adc
pushl
add
mov
mov
adc
ljmp
rorb
incl
push
repz
decl
icebp
iret
in
test
lds
xchg
mov
and
lcall
add
hlt
movsbl
dec
cmpsb
add
call
xlat
dec
shrl
icebp
mov
sub
in
mov
mov
add
fcmovbe
push
sub
nop
jnp
pop
xor
mov
cmp
testl
add
daa
add
adc
popl
decl
add
imul
cmpsl
add
pusha
add
sub
push
add
lahf
mov
add
lahf
mov
push
icebp
test
dec
shlb
add
and
cli
ret
add
mov
add
jmp
add
inc
add
jp
add
add
add
hlt
mov
add
repz
pop
push
aam
and
incl
mov
fucom
add
inc
add
add
cmp
loope
outsl
incl
ljmp
jg
add
pop
cmp
add
or
mov
mov
add
mov
add
ds
out
cmp
add
jmp
add
add
testl
call
lcall
ds
mov
add
pushl
out
xor
mov
add
add
addb
add
incl
scas
pop
inc
add
lea
lods
pop
cli
jmp
add
popf
fmuls
shrl
fdivs
mov
jno
fldcw
int
cs
pop
in
jne
movl
add
fsub
add
lcall
mov
add
fstpt
push
add
psllw
add
stc
aad
int3
pop
mov
pop
add
add
mov
sbb
aam
adc
aam
outsl
adc
incl
sbb
mov
push
add
cmp
addl
add
dec
and
pop
addl
addb
add
cmp
sub
and
jnp
add
add
incl
add
enter
add
xor
lcall
lea
add
sbb
add
out
in
or
add
xchg
dec
dec
sub
add
add
inc
add
add
add
or
jmp
add
add
ljmp
push
ficoms
add
outsl
ror
movl
xchg
push
push
add
les
add
call
adc
ljmp
inc
add
xchg
cmp
lods
lret
xor
lcall
insb
hlt
bound
call
hlt
adc
in
xor
ljmp
push
add
inc
add
cmp
add
call
push
add
add
add
add
cmp
add
shll
lcall
mov
movsl
add
ret
inc
add
bound
jmp
test
inc
add
bound
incl
xchg
xchg
fnstcw
jo
call
lcall
aaa
adc
jmp
add
dec
sub
movl
nop
dec
lcall
or
sbb
jbe
add
push
addb
movb
add
call
imul
cltd
mov
xor
dec
dec
cmp
sub
pop
sbb
jb
jmp
add
inc
add
mov
add
or
add
call
mov
add
adc
lcall
aaa
stc
fidivrl
movl
cmp
popa
add
jp
pop
fists
or
add
loope
xor
pop
shll
idivl
fdivl
add
stos
enter
or
aaa
jmp
fnstsw
add
rcrl
add
cmp
loop
jns
dec
fbstp
arpl
incl
test
add
dec
sub
incl
jmp
mov
incl
add
das
into
sub
add
push
add
pop
adc
mov
call
add
adc
lcall
add
and
ljmp
fstpt
mov
int3
dec
cmc
xor
add
scas
sbb
imul
jae
inc
add
and
dec
push
adc
sub
add
mov
xchg
in
adc
inc
add
jne
add
addl
test
cs
movb
push
sahf
push
add
je
add
add
xchg
jecxz
call
lcall
mov
push
ret
add
daa
add
mov
add
xchg
push
dec
imul
addl
lock
add
or
add
xor
fucom
add
out
add
ss
add
add
ljmp
pop
sbb
push
add
inc
add
mov
ds
add
pushl
add
dec
jo
inc
add
rcrl
fisttpll
dec
mov
add
outsl
outsb
je
add
fsubrp
or
aam
inc
add
add
call
cmp
mov
sbb
pushf
and
incl
push
data16
popa
add
add
add
sub
and
incl
sbb
adc
mov
xchg
jge
and
mov
out
add
add
mov
add
fucompp
mov
add
fisttpll
add
add
add
test
adc
lcall
pop
test
imul
mov
push
rolb
adc
jmp
cmp
xchg
jecxz
fstpl
add
incl
add
scas
cmpsl
add
add
ja
inc
add
ret
add
xchg
sbb
add
jno
call
add
aam
add
sub
arpl
call
decl
add
add
out
addr16
add
test
add
pop
stc
inc
add
call
add
jne
mov
add
shrd
add
test
add
jmp
add
int3
inc
add
roll
add
jmp
addb
add
mov
push
add
add
mov
rol
add
sbb
std
push
jg
add
add
dec
cmp
or
addl
inc
add
mov
adc
add
cmp
adc
arpl
mov
pop
pop
xchg
or
add
jge
sub
shll
out
mov
mov
fidivl
dec
cmp
add
shrb
dec
and
add
adc
decl
pop
add
and
std
jg
fmuls
decl
pop
add
jmp
add
ljmp
xlat
in
imul
xor
mov
in
jge
enter
bound
call
jge
jge
or
pop
push
nop
stc
testl
add
jle
neg
aaa
pop
add
int
adc
push
pop
arpl
call
in
addl
scas
call
incl
aam
add
rolb
xor
ds
fldcw
sub
adc
call
and
das
movl
bound
call
cltd
shrb
add
add
popf
outsl
mov
add
fcmovne
jno
lcall
add
add
fidivrl
xchg
out
jge
add
in
fwait
pop
inc
add
add
inc
add
lret
cmp
jo
pushl
fidivrs
fidivrs
int
add
xchg
pop
adc
and
ljmp
mov
addb
add
push
push
fwait
pushf
mov
fwait
xlat
add
les
pop
imul
add
shll
call
add
mov
fmul
hlt
xlat
and
dec
dec
and
ficoml
cmp
add
dec
test
mov
add
xchg
mov
cmpsb
add
neg
cmpsl
add
lcall
xchg
inc
add
js
mov
add
lods
mov
add
add
cmp
jmp
add
jns
add
incl
adc
ljmp
pop
ljmp
pop
or
ret
add
add
add
jns
repz
push
add
inc
add
mov
add
dec
out
jae
jge
idivb
test
inc
add
lcall
nop
out
scas
sub
lret
add
shll
add
incl
lcall
rcrl
jb
inc
add
cmp
add
negl
lods
lcall
std
push
add
xor
lcall
addl
pop
aaa
push
add
out
adc
incl
add
sub
add
add
add
ds
push
pop
cmp
movb
movb
out
push
add
clc
rep
dec
xor
decl
add
add
scas
jne
repz
sub
rolb
pop
sbb
popf
jl
mov
xor
lods
add
mov
adc
lcall
rcl
sub
pop
dec
dec
mov
and
pushl
pushl
add
rolb
jmp
add
push
sub
add
aad
add
ss
inc
add
mov
inc
add
call
test
add
fs
add
ja
add
addb
add
cltd
stos
xchg
clc
jmp
out
mov
add
stc
fdivp
test
sub
movb
add
sub
je
jp
sbb
add
mov
decl
add
add
add
addb
xor
stc
push
add
loop
jp
inc
add
into
imul
push
cmp
lds
xor
lret
ljmp
sbb
jne
add
push
add
jmp
xchg
jle
add
repnz
xor
jmp
add
movl
and
ljmp
mov
jmp
add
jle
loope
ret
shrb
inc
add
adc
in
scas
jg
mov
ficomps
addr16
icebp
add
add
add
daa
add
ljmp
test
xchg
ss
push
dec
into
xchg
jno
lcall
cmpsb
add
add
roll
test
out
and
call
test
inc
add
mov
pusha
add
mov
jno
cld
stos
iret
in
aad
leave
lret
add
add
sbb
and
pushl
add
inc
add
mov
adc
das
mov
add
les
jmp
push
add
mov
add
mov
add
call
add
jecxz
xchg
dec
cmp
push
add
ljmp
sahf
not
dec
sbb
add
pop
cltd
stos
icebp
xor
ljmp
loop,pn
xor
decl
add
lods
jecxz
mov
dec
add
incl
add
add
decl
xchg
dec
push
pushf
sbb
add
add
into
inc
add
pop
inc
add
push
gs
jge
lahf
mov
jae
call
add
xor
jmp
add
stos
mov
sub
jmp
xchg
jmp
data16
sar
movl
in
movl
lea
add
adc
mov
xchg
outsl
and
inc
add
add
mov
dec
jb
incl
add
add
add
cmp
dec
stos
inc
add
cmpsl
add
inc
add
or
add
pop
insb
pop
aad
add
scas
cltd
or
jo
ljmp
add
sub
add
xchg
cmp
rolb
add
ret
jnp
add
push
aaa
pop
jle
mov
pushf
int
add
lea
cmp
add
add
add
movb
add
fcmovu
stos
mov
test
lds
clc
int3
cmc
imul
pop
mov
sbb
add
adc
jmp
add
add
or
stos
mov
mov
add
dec
data16
xchg
mov
sti
adc
xor
incl
add
dec
sub
add
or
mov
add
jecxz
stc
or
add
cmp
cmp
add
lret
lahf
adc
fsts
add
addb
rolb
add
loop
inc
add
add
clc
mov
add
das
fbld
add
xchg
lds
imul
add
mov
inc
add
sbb
dec
hlt
out
sub
pop
fbstp
jmp
add
inc
add
repnz
test
lahf
xchg
xchg
imul
repnz
mov
cmp
rcl
or
std
add
mov
push
addb
inc
add
add
add
out
dec
ljmp
pushf
fwait
cmp
add
add
test
mov
mov
lahf
jl
mov
fistpl
call
lret
dec
je
add
add
jp
xor
pushl
jmp
and
fsts
add
sahf
mov
inc
add
xchg
lods
enter
cmp
jmp
aad
jg
add
mov
ret
add
add
pusha
add
out
decl
dec
hlt
pushf
pop
add
add
add
add
mov
call
push
xchg
fld
add
or
hlt
pop
xor
add
shl
add
and
lcall
dec
adc
lcall
test
roll
call
enter
popa
add
ret
add
mov
xor
cmp
mov
add
add
pushl
add
add
ret
add
xlat
int3
xchg
xor
pushl
mov
add
nop
inc
add
sub
push
push
add
in
les
add
add
add
add
adc
incl
incl
pop
jb
decl
add
and
jmp
add
jno
ljmp
add
lock
or
stos
pop
imul
jb
jmp
add
add
lds
cs
xor
ljmp
insb
mov
lret
add
jmp
call
movsb
add
add
jbe
dec
pop
sbb
add
add
add
and
inc
add
add
jmp
add
add
add
sub
cmp
mov
mov
add
and
rcrl
sti
pop
and
jmp
add
add
decl
movsb
add
add
cmp
add
mov
jnp
cmc
mov
or
sbb
or
jno
fisttpll
add
add
hlt
xchg
mov
jmp
jle
fdivrp
test
stc
stos
and
ljmp
mov
push
add
das
mov
add
outsb
enter
xlat
fdivs
add
inc
add
ret
add
add
mov
sbb
ja
jns
add
nop
movb
add
daa
add
push
push
inc
add
add
dec
jbe
in
push
mov
clc
arpl
call
ljmp
ret
xchg
dec
add
push
add
int
out
lcall
popf
dec
fisubrl
xchg
test
lds
mov
movb
aam
mov
rcl
sbb
add
or
xchg
sub
adc
lcall
xchg
push
add
jo
call
loop
xchg
push
add
fdivrl
addb
adc
decl
add
data16
jl
sahf
js
add
imul
or
int
add
addb
jmp
jp
xchg
jo
mov
movb
sub
or
iret
cld
ret
add
call
int3
push
xor
mov
cmp
add
lods
shll
xchg
jp
jp
lret
cmp
hlt
jmp
add
movl
add
ljmp
lcall
aaa
pusha
add
cli
pop
mov
mov
ljmp
daa
add
movb
add
add
push
ljmp
add
out
out
in
inc
add
fadds
jno
jl
add
cwtl
cld
les
pop
and
mov
add
xchg
in
loope
mov
outsb
push
add
add
push
add
loopne
push
add
fsubrl
movsb
add
add
inc
add
add
xor
call
out
mov
mov
add
mov
lret
xchg
jmp
in
adc
incl
ljmp
adc
cmp
adc
lcall
aas
mov
fidivrs
xchg
adc
dec
fstpt
add
sbb
add
push
add
mov
call
add
in
add
call
inc
add
pop
jle
fistl
mov
mov
fucomi
dec
xchg
mulb
add
dec
test
bound
lcall
add
mov
add
jmp
mov
pusha
add
test
push
add
jmp
mov
clc
cmp
fwait
sbb
scas
mov
out
mov
xadd
sbb
push
add
push
shll
scas
pop
jnp
mov
add
push
sub
imul
inc
add
lea
add
adc
in
idiv
lahf
add
test
fucomp
fldenv
call
add
insl
jl
add
sbb
add
jb
incl
add
rolb
add
sbb
add
pushf
scas
xor
jmp
add
sub
cli
dec
adc
add
push
push
aas
ret
add
aam
mov
adc
cmp
add
add
and
ss
pop
pop
hlt
les
add
add
movl
add
addr16
out
into
je
mov
mov
sub
xchg
pop
or
add
data16
add
or
add
add
push
dec
jl
aas
inc
add
das
dec
and
dec
mov
add
mov
add
ljmp
add
sbb
add
addr16
add
das
mov
roll
test
adc
pushl
inc
add
mov
push
add
out
mov
add
lcall
add
jne
dec
repz
test
ret
add
cmp
add
lahf
in
bound
call
out
mov
lea
add
add
sar
and
sub
daa
add
int
push
cmpxchg
outsl
adc
pushl
sub
stos
adc
call
daa
add
insl
std
std
add
pop
add
inc
add
add
add
imul
add
in
adc
lcall
add
add
decl
fisubrs
loop,pn
movb
add
movsl
add
ret
add
add
ds
or
mov
mov
enter
add
data16
push
test
scas
imul
fidivrs
sbb
loope
or
aas
pop
dec
jo
mov
add
jg
or
lods
out
outsb
fxch
sbb
rolb
add
add
push
sub
cli
lahf
mov
pop
nop
xchg
push
cmp
pop
add
pop
dec
jmp
rolb
aas
mov
add
add
jle
mov
js
test
adc
lcall
adc
add
jmp
js
add
pop
jo
ljmp
es
stos
outsl
push
add
shll
add
push
mov
dec
js
sahf
dec
inc
add
pop
xchg
pop
mov
nop
push
inc
add
decl
push
add
push
add
lret
outsb
incl
add
xchg
mov
lahf
lret
aas
push
or
sbb
dec
daa
add
call
xor
ljmp
aam
in
xchg
add
push
push
test
xor
call
je
scas
or
lcall
add
incl
mov
add
icebp
xlat
pop
lds
int
add
je
sub
add
cmp
adc
sahf
aam
les
or
mov
mov
les
cmpsl
add
sub
sbb
mov
add
pop
icebp
jbe
cmp
loope
inc
add
les
mov
add
add
xchg
pushf
movsl
add
and
out
xor
add
out
sbb
adc
fldcw
mov
into
dec
jns
push
or
cmp
sahf
syscall
add
addr16
add
dec
inc
add
sub
aas
psllq
add
add
mov
or
lea
add
mov
loop
pop
popa
add
lods
push
ss
adc
dec
dec
push
add
lcall
pop
adc
mov
icebp
sub
push
add
push
sub
cmp
movsb
add
aam
cmpsb
add
add
lcall
cmp
call
add
mov
add
add
test
imull
in
es
ret
add
mov
pusha
add
fwait
movl
sbb
add
out
sub
add
insl
cmovbe
imul
add
jecxz
test
add
fcomps
mov
sub
add
roll
jle
add
ds
inc
add
fbld
add
and
ljmp
pop
push
movb
adc
pushl
mov
leave
push
insb
mov
add
sbb
jl
add
test
xchg
inc
add
js
mov
in
lock
sbb
ret
add
mov
add
test
mov
xor
out
or
jmp
ljmp
add
add
or
add
add
popa
add
sbb
add
incl
add
bound
lcall
test
into
push
add
mov
je
lea
stc
enter
xchg
jle
movl
add
addl
add
shrl
add
fmull
notb
add
mov
repnz
pushf
in
gs
mov
sbb
xchg
out
enter
jmp
repz
push
enter
lock
lahf
jge
nop
xchg
leave
cli
jge
aad
dec
jecxz
and
jno
jmp
or
add
sub
loope
js
add
mov
add
shll
dec
or
insb
roll
add
call
add
fldenv
mov
push
dec
xlat
cmpsb
add
add
add
pop
jae
decl
mov
jb
mov
add
adc
lcall
ret
add
out
xor
call
mov
pushl
sbb
out
data16
and
mov
add
movl
and
jmp
dec
push
dec
loope
xchg
bound
dec
add
jmp
add
adc
pushl
pushl
jge
add
cmc
mov
inc
add
jle
notb
add
cs
mov
mov
ret
add
fstps
push
add
pop
jae
incl
xor
imul
mov
mov
jl
cmp
xchg
add
pushl
cwtl
add
mov
imul
xor
jmp
add
in
mov
add
jae
lcall
ret
add
je
add
stos
arpl
incl
incl
jb
ljmp
sub
xchg
loope
jl
add
addl
add
mov
mov
add
pshufw
pop
aaa
mov
testb
mov
jne
roll
aaa
add
jmp
cmp
add
sub
add
mov
shrl
add
pop
adc
fsubl
scas
das
clc
or
add
enter
mov
mov
add
push
add
pushl
add
add
add
sub
lahf
ret
add
xlat
outsb
cmp
test
add
adc
jmp
imul
roll
pusha
add
jl
pop
add
mov
jmp
add
or
aad
scas
xlat
mov
lahf
lahf
je
test
xchg
jg
add
inc
add
hlt
leave
jge
add
add
pop
inc
add
mov
add
sub
mov
test
jmp
shrl
mov
add
in
dec
addb
call
xchg
not
inc
add
lcall
jecxz
into
push
add
push
xchg
bound
flds
add
mov
add
mov
popf
movsl
add
add
and
xchg
icebp
fidivrl
add
add
add
test
mov
sub
adc
lcall
add
xchg
dec
cs
push
outsb
xor
jmp
jmp
pand
incb
lcall
faddp
add
pop
xchg
xchg
les
mov
mov
xchg
mulb
add
fimull
pushf
jbe
add
xchg
jo
decl
call
into
push
add
mov
push
pusha
add
lcall
stc
fmuls
decl
lahf
fmul
mov
stc
xor
jmp
add
mov
stos
jnp
dec
enter
fmull
jbe
das
mov
jl
add
or
jb
call
call
add
xor
jmp
mov
pop
add
pushl
add
push
iret
and
add
jnp
call
push
int3
in
push
jmp
mov
add
movsb
add
push
add
cli
pop
mov
mov
sbb
loop
jmp
pop
add
out
repz
pop
pop
add
cmp
add
sti
or
scas
pop
push
in
fisubl
add
aaa
sbb
fcoml
add
shrb
xor
ljmp
add
jp
pushf
shr
stos
divb
jmp
fsqrt
push
add
pop
adc
call
call
ljmp
enter
ljmp
les
out
in
pslld
jmp
mov
add
inc
add
add
int3
pusha
add
dec
xor
frstor
inc
add
cltd
jns
ja
add
add
incl
xchg
sbb
addl
push
add
int
test
lea
sbb
clc
or
inc
add
inc
add
cmpsl
add
test
and
mov
add
push
mov
and
jmp
lcall
or
add
dec
fimuls
aas
xlat
pop
add
cli
scas
sub
add
jp
push
add
add
cmp
push
add
pop
insl
dec
cmp
sbb
xchg
mov
test
mov
cwtl
sbb
add
add
pop
pop
inc
add
mov
sub
mov
mov
pop
loope
inc
add
fidivl
add
sbb
mov
ret
add
xchg
and
jmp
sbb
xchg
fcmovbe
mov
sarb
ret
ja
roll
loopne
push
imul
push
aas
ja
dec
mov
insl
mov
add
push
add
cmp
push
mov
int
movb
jo
lcall
scas
mov
add
mov
add
js
out
fsubr
xor
call
mov
xchg
mov
mov
and
add
sub
push
dec
js
loopne
lods
pop
xchg
dec
leave
or
scas
ja
add
jns
pop
add
add
xchg
jge
add
inc
add
push
add
jp
in
jl
lods
xchg
add
pushl
clc
cld
rcr
add
aas
xlat
int3
leave
mov
fdivl
pop
aaa
cwtl
roll
add
pop
in
ss
nop
xor
jmp
add
ds
lret
test
adc
aas
inc
add
mov
xchg
xor
inc
add
add
incl
pushf
scas
sub
sahf
testl
sub
aaa
les
mov
add
addb
cmp
inc
add
jge
add
push
add
or
add
cmp
adc
imul
dec
insb
push
and
mov
jb
ljmp
xchg
add
and
cmp
jge
push
add
les
pop
test
sahf
addl
add
jb
call
rolb
addl
mov
dec
out
in
jne,pt
popa
add
lret
cwtl
mov
gs
lahf
out
sarl
and
lcall
ljmp
rolb
add
xor
jmp
add
sahf
mov
jnp
bound
decl
lods
dec
repz
out
xor
ljmp
decl
lcall
add
add
loop
mov
add
mov
add
int3
sub
add
jne
add
adc
call
call
add
lahf
cmp
pushl
sub
lcall
push
popf
mov
mov
add
add
int
add
jmp
add
lcall
add
jnp
lea
call
xchg
cs
je
pop
addl
sub
das
cmc
loop
mov
mov
mov
xchg
push
enter
pushl
add
add
add
data16
into
adc
call
sti
stos
mov
dec
dec
addl
xchg
addb
add
ljmp
flds
inc
add
add
push
jno
decl
inc
add
sbb
add
fldenv
add
mov
mov
add
sbb
xchg
inc
add
cmpsl
add
dec
addb
add
add
inc
add
push
add
or
add
xor
ljmp
es
pop
in
dec
pop
add
add
mov
cwtl
lods
popa
add
loop
xchg
cmp
add
fabs
add
add
call
pop
cli
push
add
pop
add
jb
call
lds
cmpsl
add
sahf
bound
incl
mov
xchg
in
shlb
cmp
add
cld
jb
ljmp
mov
ljmp
add
push
add
out
add
call
xor
pushl
add
add
ljmp
dec
lret
add
inc
add
add
mov
icebp
in
shrb
das
repz
push
mov
roll
pop
and
ljmp
sub
or
push
xchg
lock
add
inc
add
mov
enter
mov
add
out
sbb
out
xor
ljmp
in
aad
or
adc
sub
add
repz
add
movl
add
daa
add
pmulhw
cmp
les
sti
fsubrl
xor
mov
dec
sbb
roll
jne
mov
add
push
rolb
add
cltd
popa
add
stc
ficomps
in
push
fisttps
movsb
add
rcll
xchg
cli
pusha
add
addl
test
xor
incl
add
mov
daa
add
lahf
pusha
add
movsb
add
enter
add
add
jmp
pushl
add
pop
xchg
or
pushl
add
fsubl
lahf
pop
cmp
into
sbb
add
mov
add
lcall
add
test
sbb
add
add
add
in
bound
inc
add
add
lcall
cmp
incl
pusha
add
adc
pushl
stc
lods
push
add
and
ljmp
push
sahf
xor
ljmp
mov
add
add
pop
inc
add
add
add
das
add
ljmp
push
sbb
inc
add
add
mov
xchg
lret
mov
xor
push
add
movb
add
xor
jg
add
add
mov
jge
sti
outsl
pop
push
xlat
adc
add
push
add
jae
out
ud2
dec
sub
add
add
lahf
int3
testl
data16
xor
dec
inc
add
xchg
iret
xchg
cld
adc
decl
test
out
in
jp
add
insl
addl
add
add
mov
test
ret
and
fisttpll
inc
add
push
add
add
ljmp
repnz
or
ret
sbb
adc
lahf
or
dec
call
outsl
or
add
add
add
sbb
out
clc
mov
cmp
inc
add
push
add
imull
lcall
pop
jns
add
adc
xchg
gs
pop
mov
pop
movl
rolb
add
adc
decl
sbb
add
add
scas
xchg
inc
add
sub
jae
flds
decl
xlat
sub
cwtl
push
add
rcl
add
pushl
inc
add
add
sti
in
pop
add
xchg
mov
xchg
roll
add
mov
add
fidivl
repnz
ljmp
cmpsb
add
mov
add
jno
pushl
xor
incl
add
sub
xor
pushl
call
call
add
incl
add
ljmp
iret
aas
push
ret
add
addb
add
test
cmp
push
xchg
aam
test
and
add
pushf
dec
insb
test
add
push
inc
add
sbb
jl
add
mov
call
inc
add
pushl
xchg
ja
insl
rolb
jne
add
add
loopne
nop
imul
incl
xor
incl
add
mov
xor
jg
push
add
rcrb
call
add
jg
add
xor
dec
out
cli
jmp
add
pop
clc
adc
cvtps2pi
add
add
fldcw
xchg
popf
fwait
mov
add
mov
pushl
lret
adc
mov
jbe
loopne
add
lcall
add
mov
add
mov
or
adc
add
jp
add
mov
add
rcr
or
push
pop
pop
pop
adc
add
jmp
sbb
into
nop
hlt
push
aas
scas
int
arpl
mov
push
add
pop
das
sub
or
inc
add
add
lea
sbb
jb
fcomip
push
or
mov
push
add
sub
pushl
ficompl
idivb
jmp
test
jl
insb
pop
jb
lcall
divl
jno
pushl
pop
insb
jmp
pop
cli
roll
add
aad
add
mov
call
jae
pushl
arpl
decl
jno
pushl
test
nop
aam
add
adc
mov
fnstsw
cmpsb
add
add
sub
push
insl
test
mov
dec
adc
lcall
add
out
xor
lcall
jnp
xor
out
push
cmpsb
add
add
mov
repz
add
roll
add
jg
add
roll
add
or
push
add
lods
mov
sub
jge
add
adc
push
pop
insl
jb
incl
inc
add
cs
push
add
add
add
add
inc
add
add
add
push
je
mov
cmp
add
add
roll
addl
add
add
inc
add
pop
dec
imul
fcmovnu
mov
lret
jmp
add
addb
add
add
jg
inc
add
les
adc
clc
xchg
and
out
dec
test
add
scas
shlb
or
inc
add
or
call
add
pushl
jmp
add
lods
out
fnstcw
add
add
sub
jecxz
sub
add
cmp
add
icebp
inc
add
testb
sub
sbb
mov
or
push
test
xor
fadd
add
loopne
lcall
xor
pushl
add
movl
add
mov
push
add
add
add
call
add
lret
cld
adc
add
sbb
add
fsubs
xchg
fcmove
out
jae
jle
or
add
add
mov
add
add
ljmp
add
rolb
rcll
test
jae
incl
add
in
cmp
mov
xor
jo
jmp
ljmp
in
pop
add
in
pop
jmp
add
add
sbb
cmp
add
jg
syscall
add
jmp
adc
jmp
call
in
cmpsb
add
stos
je
add
cltd
stc
and
jmp
xchg
jno
call
loope
movsl
add
out
pop
add
call
call
and
jmp
add
add
ljmp
add
roll
adc
add
incl
gs
aad
mov
test
and
cmc
jg
add
add
ljmp
adc
push
aaa
addb
add
stos
dec
pop
in
repz
int
add
pop
sbb
add
inc
add
pushf
int3
call
add
add
add
movsb
add
lcall
popf
mov
imul
adc
call
popf
xchg
or
fcomps
add
lods
push
add
add
inc
add
xchg
pop
mov
push
add
test
cli
les
adc
dec
mov
sbb
test
cmpsb
add
add
jne
fisttpl
inc
add
add
and
ljmp
pop
push
add
aaa
pop
add
add
mov
add
mov
mov
add
movl
lahf
ljmp
add
jmp
inc
add
adc
incl
mov
push
add
add
add
int
xchg
cmp
add
add
inc
add
pop
push
cmp
add
add
ficompl
jne
jle
mov
pushl
rcll
ljmp
add
frstor
mov
add
mov
lods
sbb
sbb
stos
xchg
stos
mov
mov
add
rcl
iret
cmp
data16
addr16
mov
xchg
repz
ret
cmp
inc
add
add
add
call
xchg
sub
sbb
pusha
add
inc
add
add
inc
add
push
jecxz
sahf
or
addb
add
add
movl
add
add
lret
push
push
lahf
js
add
push
sub
add
addl
add
data16
add
mov
insb
hlt
fwait
cli
insb
popf
cmc
add
mov
call
incl
inc
add
adc
dec
mov
add
popf
sub
loop
jle
pop
test
add
adc
jg
add
insl
enter
lahf
mov
loop
stos
adc
inc
add
call
add
mov
add
ljmp
xor
mov
ja
lds
in
push
add
test
add
sahf
clc
push
je
int
xor
xor
jmp
fwait
popl
add
int
cli
xchg
test
out
data16
out
test
lret
sbb
aam
jns
add
dec
popa
add
mov
add
add
jbe
daa
add
push
add
xchg
addl
mov
cmpsb
add
cs
add
addb
jle
movb
shrl
add
mov
sbb
out
jmp
call
ds
add
mov
jne
inc
add
outsb
push
repnz
add
shll
inc
add
nop
les
xor
decl
or
inc
add
popa
add
push
out
inc
add
cmp
xor
ljmp
cli
mov
out
cmp
add
sbb
popf
lods
popa
add
mov
sbb
push
je
faddl
add
sub
addb
push
xor
call
adc
incl
xchg
decb
add
test
add
mov
add
add
dec
mov
and
lods
inc
add
add
sbb
cwtl
xchg
xchg
push
lock
add
bound
jmp
test
les
mov
add
call
or
gs
add
cwtl
push
rorb
add
add
pop
mov
add
push
shr
xchg
mov
add
adc
jmp
jle
add
out
mov
lcall
xchg
sti
les
stos
push
add
mov
cmp
jg
pop
xchg
hlt
push
add
fisttpl
and
call
call
mov
out
addl
adc
add
outsb
mov
nop
sub
add
dec
test
mov
ret
add
bnd
call
std
cmp
decl
jns
ficoms
daa
add
add
roll
add
add
add
jg
bound
jp
iret
int
mov
fbld
add
mov
loope
rolb
and
int3
push
add
les
leave
cmp
adc
out
test
add
inc
add
popa
add
test
aad
sub
mov
mov
add
inc
add
and
call
shl
jae
inc
add
mov
stos
das
cltd
mov
add
data16
push
add
add
mov
push
daa
add
inc
add
fidivrl
adc
pushl
add
mov
imul
mov
add
js
add
jbe
add
scas
sbb
pushl
jle
lret
xor
repnz
repz
adc
lcall
pop
sub
dec
and
jmp
add
adc
decl
add
in
push
test
or
pushl
add
pushf
lahf
mov
sbb
test
lahf
insl
nop
mov
lcall
add
inc
add
add
xor
ljmp
dec
call
push
ss
jge
add
cld
or
daa
add
sub
enter
add
xlat
jae
lcall
xor
push
xchg
data16
fucomip
cmpsl
add
add
jb
pushl
add
ja
add
push
data16
add
add
arpl
lcall
ss
ret
sub
outsl
and
call
jp
addb
fisubs
divl
jo
cli
ljmp
mov
add
cmp
fcomps
add
icebp
call
incl
call
lods
cmp
sbb
add
add
push
add
fwait
in
and
jmp
xchg
hlt
js
ss
adc
xchg
mov
mov
add
jo
fsub
add
adc
ljmp
add
push
add
mov
push
jle
mov
add
add
add
xor
add
add
xor
jg
add
ss
je
sbb
arpl
decl
call
je
add
popf
sub
mov
rclb
mov
pop
mov
or
add
adc
ljmp
sub
rcrb
lret
enter
add
mov
or
icebp
mov
sbb
add
into
push
cld
mov
mov
add
cmpsl
add
in
ret
add
add
xchg
jg
data16
data16
add
jmp
and
fistl
add
jae
decl
add
incl
lcall
xor
jmp
add
or
add
mov
add
dec
pop
sahf
sahf
adc
jmp
add
jno
call
cmp
mov
fs
dec
ja
add
mov
mov
mov
int
fsubrl
pop
imul
scas
lahf
icebp
lods
fcmovnb
add
cmp
xor
jmp
add
aaa
mov
sahf
mov
add
ret
sti
mov
xlat
mov
mov
add
negb
jp
xchg
mov
enter
add
add
add
mov
sti
ror
mov
add
mov
inc
add
lahf
xlat
xchg
or
add
add
cmp
push
decb
outsb
clc
mov
pop
fadd
add
scas
je
ret
add
lcall
ja
xlat
rolb
repz
adc
push
add
fadd
add
inc
add
or
mull
add
addl
add
lea
add
movsl
add
inc
add
js
add
add
add
add
add
sti
mov
jmp
xchg
lock
pop
fbld
call
cltd
push
add
loop
inc
add
lret
add
jg
add
dec
fnop
sub
push
add
daa
add
or
aad
in
mov
sbb
add
cs
adc
add
dec
imul
mov
adc
pushl
shll
jmp
xchg
mov
add
jmp
add
sti
aaa
adc
lcall
xor
jmp
je
out
sub
add
jno
push
jns
jge
iret
aaa
roll
add
ljmp
mov
xchg
mov
jae
pushl
add
insb
xor
pushl
add
ljmp
cli
fisubrs
addl
lods
out
inc
add
sub
in
lcall
jne
add
pusha
add
pop
roll
add
cmp
adc
jg
ret
test
pusha
add
jnp
out
call
add
push
push
push
and
sub
popf
cmp
jmp
add
adc
call
xchg
sub
add
push
mov
std
mov
xchg
stc
mull
add
add
shlb
in
lcall
mov
mov
sub
xchg
fyl2x
out
and
movsb
add
push
add
mov
adc
inc
add
add
xchg
in
or
mov
movb
add
movb
add
mov
xlat
mov
dec
cmp
fldcw
insb
roll
sarl
mov
inc
add
or
addb
arpl
cld
xchg
js
add
jecxz
outsb
sub
shl
cwtl
fsubl
add
add
decl
mov
add
add
sbb
jmp
add
in
push
add
incl
or
push
add
jecxz
ja
add
decl
cmp
add
addb
out
inc
add
and
incl
sub
add
mov
inc
add
out
je
add
decl
lds
mov
add
cli
adc
jmp
add
add
sub
loopne
aad
add
lock
roll
or
jle
push
iret
mov
add
outsb
imull
add
add
pop
inc
add
cwtl
das
lcall
leave
insb
es
sub
add
add
pmulhuw
test
addb
mov
mov
sbb
push
add
fmul
fisubrs
add
add
ljmp
das
jecxz
mov
lea
int3
or
jp
add
daa
add
jmp
add
fnstenv
add
dec
sub
add
pop
push
aad
add
add
add
adc
jge
and
incl
add
stos
jg
scas
mov
sti
insb
sbb
add
add
pushl
adc
daa
add
int3
jecxz
outsb
test
sub
xchg
jmp
outsb
jnp
add
ljmp
xor
out
stos
pusha
add
mov
and
arpl
pushl
adc
pushl
and
call
xchg
add
call
add
js,pn
and
mov
mov
add
add
or
shr
in
sar
aam
push
cltd
out
arpl
lcall
add
pop
cmp
add
dec
bound
pushl
add
push
add
add
push
ljmp
add
cmc
jle
add
push
add
bound
lcall
push
add
add
push
sub
add
or
add
dec
or
xchg
notb
lcall
add
sub
enter
adc
push
add
inc
add
inc
add
jge
add
mov
jnp
add
mov
mov
popf
rolb
cwtl
mov
cmp
insb
mov
lcall
add
adc
jg
add
jge
inc
add
add
push
cwtl
xlat
pop
jmp
repz
add
out
or
add
add
mov
jle
mov
add
pop
mov
add
stos
stc
inc
add
jnp
add
push
add
xor
lcall
adc
decl
add
test
vmwrite
ja
and
add
std
inc
add
in
cmp
insl
adc
add
fistps
pop
cmp
decl
test
roll
ljmp
call
push
add
int3
push
fists
add
movsb
add
add
jne
mov
sub
lock
add
push
sbb
add
sbb
js
lcall
pop
cmp
or
jbe
jge
fcomps
leave
sub
add
push
add
ss
add
jno
pushl
roll
sbb
mov
and
lcall
popa
add
sbb
add
call
stos
pop
lods
mov
push
cli
add
pushl
and
incl
add
mov
das
stos
test
lea
add
dec
mov
add
pop
dec
jl
cmc
inc
add
jmp
and
lcall
inc
add
push
add
daa
add
or
add
inc
add
shl
mov
xor
ljmp
js
ja
ss
dec
std
xchg
popf
xchg
int3
mov
imul
stos
repnz
lcall
mov
and
ljmp
lea
sub
push
iret
jg
movb
add
mov
sbb
jns
add
add
jmp
incl
addb
ret
ret
add
lods
or
push
add
std
mov
add
jge
pop
pcmpgtw
ljmp
lock
add
push
mov
daa
add
jnp
add
jge
inc
add
inc
add
addl
jp
sbb
add
add
out
xchg
sub
add
into
mov
cmp
add
fwait
inc
add
iret
in
test
add
cmp
scas
in
sbb
hlt
movb
fwait
jl
aas
popa
add
adc
call
in
xchg
or
js
add
mov
jb
jmp
adc
jmp
add
pushl
cwtl
mov
add
pop
adc
pushl
add
testb
add
dec
push
add
js
push
movb
mov
mov
pusha
add
push
add
stos
xchg
roll
push
add
aad
mov
jg
icebp
fsubl
add
add
inc
add
imul
add
add
lcall
sbb
push
add
and
xor
fwait
addb
lods
movb
js
mov
sahf
movsl
add
add
ret
mov
lcall
add
decl
mov
sub
test
stos
outsb
rol
add
add
add
bound
incl
sub
clc
jns
add
dec
inc
add
add
dec
and
jmp
add
cld
stc
or
jg
pop
inc
add
test
add
jns
std
push
mov
mov
pop
out
lds
or
ret
mov
add
add
rorl
fldlg2
mov
add
pop
ja
loopne
mov
add
fsubrs
movsl
add
push
inc
add
fcompl
and
decl
notb
lea
mov
inc
add
xchg
lea
decl
cmpsl
add
decb
add
xor
decl
or
fmull
cmp
sbb
inc
add
mov
loopne
stos
sbb
jl
adc
pushl
push
xor
call
outsl
fistpl
xchg
push
leave
xor
push
ss
pusha
add
lret
push
add
cmp
test
adc
pushl
cmp
add
mov
jg
test
arpl
pushl
cmp
push
add
push
add
cmp
leave
push
mov
jecxz
mov
push
lods
mov
scas
jl
add
push
add
loope
add
mov
add
sub
add
xchg
mov
add
stos
nop
sbb
jmp
add
mov
add
add
arpl
dec
add
add
xchg
mov
xlat
or
out
fwait
mov
scas
test
insb
fbld
add
out
lds
inc
add
movb
hlt
cmp
add
call
xor
or
mov
pop
dec
add
add
cmpsl
add
push
push
add
add
enter
repnz
mov
lods
jge
dec
fisubl
pushl
add
adc
pop
stos
fcmovnu
fidivrl
or
add
jmp
pop
scas
xor
decl
mov
jle
add
and
ljmp
lahf
add
movsb
add
incl
inc
add
pop
cmp
mov
bound
incl
add
aad
es
add
incl
lods
mov
mov
dec
int
sti
xor
rolb
or
sbb
add
scas
add
lcall
scas
lahf
enter
push
xchg
push
mov
int
rolb
aas
sbb
push
xchg
repnz
add
inc
add
or
adc
push
call
arpl
jmp
add
dec
pop
jno
out
adc
pop
sti
mov
add
decl
push
or
add
add
add
lea
outsl
lds
jno
jmp
add
ffreep
add
add
add
add
add
add
loopne
push
scas
pop
inc
add
add
add
in
rolb
add
leave
mov
jmp
add
hlt
xchg
jmp
ret
add
and
lcall
je
add
lret
add
and
call
adc
ljmp
add
hlt
lods
stos
addb
push
out
add
pop
xor
lcall
add
pushf
inc
add
and
call
jmp
add
sbb
add
jmp
add
call
adc
jmp
add
stos
mov
mov
imull
add
inc
add
add
sbb
aam
ljmp
add
movl
je
roll
xor
mov
fistpl
add
out
xor
mov
lcall
add
adc
inc
add
shrl
add
and
or
decb
cld
mov
je
cmp
add
mov
cs
lahf
jl
addb
testb
jnp
push
add
sbb
add
add
xchg
push
add
mov
cmp
add
mov
add
mov
movsl
add
ret
imul
pop
jge
add
add
decl
iret
into
pop
or
add
xchg
inc
add
cmp
dec
mov
movsl
add
pop
jbe
push
lock
mov
add
cmp
data16
jb
lcall
pushl
int
xor
ljmp
dec
jno
cmp
mov
add
ds
dec
mov
mov
je
add
lods
cmp
mov
add
mov
xchg
add
lcall
cli
jnp
jmp
mov
stc
in
mov
adc
lcall
mov
loop
leave
scas
dec
push
stc
aas
je
add
adc
stos
sbb
ret
add
nop
call
addb
jmp
lcall
push
add
ficoml
or
mov
xor
in
pop
arpl
pushl
fistps
out
dec
mov
popf
les
and
push
add
xchg
jecxz
mov
icebp
push
dec
pop
shlb
lcall
ret
push
add
int
fnstsw
addb
mov
pop
movsb
add
enter
flds
jmp
lock
cmp
add
add
jmp
ljmp
fsubrp
xor
decl
inc
add
cld
inc
add
fnstcw
leave
jecxz
jmp
add
jo
call
aas
gs
bound
jmp
add
lcall
sbb
testl
decl
add
jno
std
int
inc
add
cwtl
roll
cmp
add
rcl
arpl
decl
add
cwtl
sti
imul
xchg
popa
add
addl
or
xor
ss
setbe
jnp
fcmovnu
push
sbb
xchg
pop
fsubrl
ret
inc
add
sbb
incl
mov
fcompl
add
add
rol
add
mov
add
out
cmp
jne
cmc
mov
ljmp
das
push
add
xchg
inc
add
aam
mov
dec
aas
in
pop
inc
add
addl
jbe
ja
push
add
and
dec
call
jne
or
call
add
add
sub
int
repz
add
jg
and
ljmp
xchg
movsb
add
leave
popf
and
incl
movl
add
jns
jmp
push
dec
mov
add
jnp
movl
lcall
test
push
inc
add
cli
xor
ljmp
add
repz
add
fadds
mov
add
test
pop
push
lret
rolb
add
add
add
add
rcl
hlt
add
stos
and
jmp
add
insb
ljmp
add
jne
shlb
sub
mov
add
leave
pusha
add
or
push
add
adc
lea
add
jl
mov
dec
dec
adc
ljmp
cs
add
mov
push
push
add
out
push
cltd
add
and
decl
xchg
sub
push
add
inc
add
ljmp
inc
add
outsl
fistpll
add
fidivrs
mov
add
aas
mov
aaa
sub
arpl
lcall
jbe
or
stos
fdivrs
jbe
mov
test
out
ja
pop
add
add
add
stos
fiadds
add
scas
jle
in
jno
inc
add
or
add
add
push
lea
mov
xchg
into
insb
mov
mov
add
lret
mov
scas
xor
pushl
or
add
pusha
add
mov
cld
add
pop
enter
jge
sub
mov
test
or
incb
push
in
mov
add
lcall
sub
in
adc
pop
shrb
out
outsl
inc
add
mov
mov
add
add
lds
movb
clc
xchg
pop
bound
dec
mov
sub
idivb
ljmp
add
add
ljmp
aam
push
roll
mov
std
push
cmpsb
add
fidivl
cltd
repz
add
adc
lcall
inc
add
js
add
push
add
mov
movl
add
lds
std
addb
aad
fadd
add
jbe
mov
add
dec
sub
fisttps
ficomps
shll
jle
add
add
push
std
aas
mov
mov
add
add
push
add
inc
add
jb
jmp
add
xor
add
pusha
add
and
pop
cmpsl
add
pusha
add
adc
lcall
cmp
fadds
ljmp
nop
mov
add
jbe
aaa
jb
aas
pop
add
add
sbb
mov
and
mov
add
add
out
fwait
mov
adc
dec
xor
jmp
sbb
add
add
je
add
add
cld
jne
add
cmp
adc
inc
add
add
lcall
add
add
mov
mov
dec
cmp
add
inc
add
and
cmp
sub
scas
out
sbb
jmp
add
mov
lret
out
sub
add
add
lds
in
lret
add
add
movb
add
mov
add
cmpsb
add
add
add
push
or
roll
movsl
add
xchg
sub
mov
nop
or
add
sti
cwtl
dec
lock
and
decl
imul
in
push
cwtl
addb
and
call
out
das
push
bound
clc
xchg
sub
imul
jge
add
out
shrl
cld
mov
add
pushl
lret
mov
mov
pop
push
add
lcall
fisttps
xchg
dec
popa
add
jb
incl
pushl
sti
add
mov
add
jae
cmp
lcall
adc
cmp
dec
mov
add
cmpsl
add
pushf
mov
add
and
incl
push
add
hlt
xor
mov
stos
add
decl
add
mov
test
jmp
add
cld
hlt
in
rolb
dec
cmc
and
dec
jp
sub
add
push
movl
decl
outsb
hlt
add
adc
add
sbb
jle
bound
jmp
add
add
sub
into
mov
add
xlat
mulb
add
xlat
xchg
jnp
add
lret
jo
js
adc
decl
push
add
clc
sub
hlt
pop
sahf
xchg
es
add
sbb
loop
pop
repz
cltd
add
fsub
add
xchg
les
fsincos
cmp
sti
add
ljmp
mov
add
dec
std
dec
xchg
aas
mov
ss
addb
rolb
add
clc
es
mov
adc
add
ja
push
add
mov
pop
ds
bound
lcall
add
icebp
push
sub
jbe
add
or
add
inc
add
int3
mov
add
addb
xchg
neg
jmp
cmpsb
add
add
xchg
hlt
fisttps
fwait
clc
cmpsl
add
add
cmp
add
add
pushf
enter
jno
lcall
and
xchg
je
icebp
mov
outsb
dec
xchg
pop
loopne
adc
pushf
sub
or
icebp
cmp
add
push
jns
je
sub
push
sub
jae
incl
add
jns
ret
data16
add
pop
add
inc
add
mov
add
xchg
sbb
lds
sub
das
fisttpll
push
add
jo
pushl
adc
inc
add
repz
sub
xchg
cmp
or
add
data16
add
jg
add
sbb
pushl
jmp
sub
jle
add
adc
decl
jecxz
push
add
iret
jns
mov
pop
xchg
fidivl
sbb
add
repz
fwait
aas
jl
sbb
add
cmp
jecxz
and
nop
lds
mov
repnz
pushl
pop
lcall
repz
add
dec
lret
push
loopne
jp
call
add
decl
addl
pop
add
lcall
mov
dec
lret
add
add
les
xchg
int
add
jmp
decl
sbb
mov
jbe
cltd
movsl
add
mov
add
js
sbb
add
inc
add
xchg
jl
add
add
xchg
stos
loopne
shl
mov
lea
addb
add
and
call
fimuls
sub
outsl
jecxz
jae
fstl
mov
pushl
add
xchg
sub
dec
dec
add
pop
push
roll
push
pop
mov
sub
jmp
pushl
pop
xlat
mov
or
add
mov
mov
mov
add
add
decl
loope
mov
dec
xchg
mov
add
decl
aad
movl
inc
add
fstpl
pop
xor
pushl
xchg
push
arpl
mov
ljmp
addb
aaa
inc
add
stc
mov
add
lcall
add
dec
add
pushl
add
add
add
mov
jbe
scas
push
add
xor
mov
aas
insb
add
jmp
push
sarl
mov
add
add
xor
mov
add
add
repnz
lcall
test
add
mov
addb
push
les
dec
sub
test
xlat
xor
jmp
add
cmpsb
add
add
or
decl
push
add
decl
cwtl
fbstp
xlat
fnstcw
pop
stos
push
scas
xor
push
jbe
aad
add
xlat
adc
add
flds
add
fdiv
out
xchg
negb
mov
aaa
add
or
xchg
fcoml
ljmp
adc
insb
sub
into
ret
movb
addl
call
add
push
add
lods
aas
lahf
ljmp
lcall
add
add
mov
cmp
rolb
mov
pusha
add
addb
lret
imul
add
add
mov
xor
add
add
addl
add
jnp
add
aam
daa
add
xchg
movsl
add
popa
add
cld
mov
mov
hlt
dec
call
add
imul
add
add
xor
call
fnstsw
aas
loope
movsb
add
ret
add
add
das
xor
add
xchg
mov
scas
jl
ret
clc
push
inc
add
add
sub
add
push
ljmp
mov
iret
pop
xchg
faddl
js
test
add
dec
mov
xor
xchg
inc
add
sub
hlt
inc
add
add
aaa
icebp
out
cmp
push
aas
jl
add
mov
cmp
add
imul
xchg
jae
cmp
pop
add
incl
add
inc
add
push
add
inc
add
xchg
adc
push
or
mov
aam
add
sub
lds
sbb
add
and
call
dec
nop
jnp
iret
jo
pushl
add
inc
add
or
add
add
cld
push
ret
add
pop
in
insl
ja
or
push
add
lock
pop
repnz
add
int
cmp
and
inc
add
or
pop
stos
cmc
push
pop
test
mov
dec
outsb
xchg
std
jnp
mov
push
adc
dec
out
inc
add
loopne
add
dec
jns
aaa
cmpsb
add
add
jo
pushl
inc
add
add
call
movsl
add
xchg
mov
jns
add
fstl
xor
incl
call
pop
jle
add
call
movsb
add
add
cmp
add
cwtl
jnp
aam
add
add
call
add
or
addl
mov
xor
jmp
add
hlt
pop
shrl
add
fnstsw
add
ljmp
test
or
or
ljmp
add
jle
add
mov
daa
add
and
pushl
add
jns
add
add
in
fidivrl
fwait
test
or
add
push
add
jle
jle
inc
add
aam
add
jb
fimull
jecxz
mov
popa
add
les
cmp
and
incl
inc
add
pop
outsb
push
push
into
mov
dec
xchg
out
cmp
sbb
mov
addb
cmp
and
int
xor
ljmp
push
adc
add
xor
add
lods
ja
aas
cmc
sub
and
dec
xchg
cmp
scas
pop
add
daa
add
xchg
out
push
fwait
hlt
es
add
add
pop
add
lods
roll
add
add
into
dec
lods
and
decl
ljmp
cld
lds
mov
add
add
ljmp
int3
lret
inc
add
add
movsb
add
ljmp
out
icebp
movsl
add
jl
inc
add
cmpsl
add
add
add
or
hlt
and
add
mov
das
jp
adc
lds
dec
scas
add
sti
pop
add
fiaddl
insb
mov
add
incl
push
mov
stos
dec
fists
add
or
je
outsl
adc
add
add
dec
jae
incl
add
lods
and
ljmp
sbb
add
add
out
push
add
addb
lds
sub
add
xchg
lods
outsl
add
sahf
data16
mov
add
add
and
lcall
je
stc
add
call
add
roll
jg
addl
mov
cltd
jle
push
add
fildl
add
add
movsb
add
add
jb
jmp
mov
pop
pusha
add
and
lcall
and
arpl
jmp
add
ret
add
dec
pop
or
cmp
add
and
cwtl
mov
add
addb
cmp
dec
lods
les
addl
loop
daa
add
add
cli
mov
mov
incl
xchg
ret
pushf
pop
sub
lahf
push
push
add
add
bound
decl
stos
cltd
push
add
push
inc
add
jmp
inc
add
jecxz
dec
xor
sbb
out
or
sbb
enter
add
decl
adc
call
push
popf
xchg
ret
add
call
test
cli
mov
pushl
rolb
call
lds
xchg
cli
add
jo
call
mov
pop
add
add
mov
dec
stos
rorb
sub
add
int
pop
add
out
ds
add
mov
adc
pushl
add
rolb
add
pcmpgtd
outsl
cmc
les
leave
push
add
inc
add
or
xchg
cltd
loopne
pop
jl
mov
inc
add
add
xlat
mov
repnz
add
js
addb
push
mov
pusha
add
ret
add
ljmp
scas
into
pop
add
add
dec
push
dec
movsl
add
into
dec
add
dec
lods
sbb
xchg
lds
jg
add
cwtl
cmp
jnp
sbb
lea
add
add
ss
pop
fisubrs
cmc
dec
popf
add
xchg
xchg
addl
xchg
ret
add
add
add
mov
xchg
xchg
sbb
sti
jge
addb
cmp
ret
addl
fmuls
mov
sub
add
in
imul
loopne
mov
add
or
xchg
out
in
fsubrl
jmp
add
jbe
add
call
jp
add
mov
add
inc
add
fcomip
rolb
add
add
enter
add
add
add
dec
jo
incl
incl
inc
add
pushl
call
lds
gs
add
add
lods
imul
mov
xor
add
xor
or
jmp
addl
add
scas
fwait
sbb
add
fdivrs
pop
je
test
popa
add
sub
add
adc
ljmp
add
loop
movsl
add
fidivrs
add
pop
mov
push
push
add
out
mov
decl
push
scas
mov
and
incl
add
ficompl
dec
jecxz
sbb
jp
add
dec
iret
mov
add
lcall
lods
outsb
and
call
iret
push
addb
push
imul
les
pop
push
add
add
add
flds
call
jp
in
or
add
rolb
add
pushl
add
int
add
fnstcw
fcompl
xchg
movl
adc
lcall
sub
add
mov
pop
lds
icebp
sub
js
add
push
add
cwtl
imul
jb
lcall
mov
add
cmp
add
sub
push
add
adc
mov
add
decl
and
jmp
add
dec
pop
sub
add
add
adc
lcall
add
imul
std
lahf
cmp
push
mov
add
xchg
addl
fidivrs
sub
test
sbb
mov
sbb
add
cmpsl
add
add
sub
xor
ljmp
sub
add
add
imul
add
aaa
xchg
std
bound
call
pushl
dec
cmp
sbb
and
call
mov
hlt
xor
jmp
inc
add
nop
cmpsl
add
add
sbb
and
ljmp
jnp
sbb
lods
movb
dec
jecxz
push
add
and
cmp
add
sbb
lcall
jne
add
or
add
add
sti
sub
fwait
addb
adc
mov
pop
jns
pusha
add
and
ljmp
adc
jae
jmp
test
enter
lcall
add
cltd
addl
sbb
add
mov
insb
daa
add
call
lcall
jecxz
dec
inc
add
jecxz
inc
add
imul
cli
addl
fnstenv
add
shll
lret
ljmp
add
call
pushl
add
jmp
add
movl
add
add
aad
add
mov
call
add
lahf
sub
push
pop
aaa
fmul
add
add
xchg
and
lcall
shlb
add
out
divb
add
enter
pusha
add
out
xchg
addl
rolb
xchg
dec
arpl
jp
add
push
add
fbld
imul
aad
lock
xchg
sbb
dec
pushf
in
dec
pop
imul
fidivrl
add
in
pusha
add
arpl
push
das
pop
or
add
add
int3
stos
leave
insl
bound
call
daa
add
add
mov
mov
adc
inc
add
call
push
add
inc
add
jae
jmp
bound
lcall
cmovno
pushl
fmul
dec
dec
push
add
decl
add
xor
sbb
add
add
cwtl
movsl
add
pop
scas
pop
add
push
mov
lret
data16
push
add
xor
push
or
faddp
add
add
mov
rorl
in
jmp
pushf
call
sub
imul
pop
scas
hlt
jne
testb
lds
ja
jno
incl
cmp
dec
push
adc
cmp
add
movlps
pushl
add
out
cmp
jmp
add
pop
jg
add
xchg
ja
cmp
cld
dec
push
add
rolb
xor
jmp
pop
push
add
push
add
lret
add
out
je
add
push
add
daa
add
add
aas
cltd
fs
adc
jp
add
hlt
mov
inc
add
inc
add
pop
repz
data16
dec
bound
inc
add
add
pop
jb
push
xchg
daa
add
push
fnsave
ljmp
push
add
or
pop
les
dec
mov
ljmp
push
ror
push
jecxz
push
movsb
add
add
adc
jno
lcall
movsb
add
add
add
stc
addl
mov
iret
jae
jmp
hlt
hlt
xchg
ret
add
into
mov
add
data16
decl
adc
jmp
sbb
incl
call
add
and
incl
sahf
xor
incl
add
pop
add
adc
call
mov
add
add
mov
push
ret
add
int
cld
cld
mov
jl
add
add
daa
add
add
push
loope
and
inc
add
jmp
mov
add
decl
xor
decl
and
incl
add
stc
xor
pop
add
and
pushl
lcall
dec
mov
sbb
add
jge
inc
add
xchg
mov
jp
pop
loop
pop
add
mov
jmp
pushl
adc
add
add
nop
mov
add
call
lcall
add
cltd
pop
ja
test
add
add
inc
add
clc
sbb
add
or
add
roll
stos
xor
lcall
hlt
lcall
insb
lds
pop
jb
faddl
fisubrl
ficomps
add
xchg
leave
mov
add
add
repnz
add
jb
jge
daa
add
add
data16
push
jmp
ret
add
lods
sahf
scas
push
sub
sbb
ret
test
testb
sub
dec
jge
jne
punpckhdq
push
pushf
lds
mov
addb
add
add
sarl
push
mov
xchg
or
add
xchg
xor
aam
add
add
jmp
add
add
jmp
jp
mov
rolb
add
dec
mov
inc
add
aam
add
int3
push
and
or
add
add
sbb
in
dec
xor
pushl
movsb
add
daa
add
add
mov
add
stos
adc
decl
ret
add
add
scas
mov
jmp
inc
add
cmp
mov
adc
jmp
test
sub
add
sbb
les
into
sub
add
add
add
scas
xchg
aas
pop
xchg
movsl
add
add
inc
add
adc
incl
movsb
add
xlat
sbb
jg
add
rolb
data16
mov
jns
adc
decl
add
pushl
mov
add
push
xchg
rcll
ljmp
movsb
add
mov
cmpsl
add
add
lcall
xchg
test
loope
add
into
ja
add
lods
movsb
add
mov
popf
lcall
pop
aas
jne
add
icebp
push
add
push
add
lcall
jecxz
xor
decl
jns
xlat
add
jle
pop
aam
add
sbb
dec
sbb
add
mov
add
add
add
sahf
mov
outsb
push
mov
add
jle
add
add
pusha
add
sub
add
mull
add
test
fwait
sub
int3
mov
decl
test
nop
out
xor
lcall
inc
add
xor
fdivrl
fsubl
add
in
inc
add
mov
add
stos
inc
add
or
xlat
lret
xchg
cltd
out
repnz
pop
mov
xchg
ja
movsl
add
ret
jne
add
ds
add
adc
je
push
lds
lret
je
add
lret
stos
sahf
inc
add
sub
and
add
xchg
mov
mov
ret
add
push
rolb
xchg
sarl
cld
xchg
and
pop
or
cmp
cmp
test
cmp
add
add
stos
mov
test
add
data16
and
push
loop
ret
dec
add
out
cs
data16
add
add
decl
add
out
std
nop
jnp
add
push
pusha
add
ret
add
jl
ficoms
cmc
jae
out
and
ljmp
mov
mov
in
lcall
cmc
cmp
leave
cmp
pop
roll
mov
inc
add
cltd
jb
inc
add
roll
add
add
add
push
add
pushl
and
aas
fsts
add
pop
push
push
lahf
repnz
fadds
mov
fdivrs
addb
arpl
jmp
or
cmp
mov
add
pushl
sub
add
inc
add
fwait
fmuls
inc
add
add
add
xchg
test
test
jbe
sub
shr
cmp
js
sub
sahf
loopne
and
decl
dec
inc
add
cmp
nop
jmp
cld
adc
jmp
out
inc
add
sbb
add
call
mov
dec
xlat
inc
add
fwait
sub
popf
sbb
in
and
incl
pushl
jge
add
mov
add
aas
jmp
add
ret
add
push
ja
xchg
fldt
out
sub
mov
dec
in
dec
test
push
scas
or
testb
call
ljmp
add
and
pushl
incl
adc
test
xchg
mov
test
jb
call
cwtl
jmp
add
xchg
mov
add
add
add
add
decl
out
sarb
xor
inc
add
add
cltd
outsb
js
dec
pop
cld
rcll
fwait
jne
loope
jge
push
add
lret
adc
decl
xor
add
and
incl
mov
add
and
cmp
add
imul
mov
aas
in
add
ljmp
add
dec
int
pop
add
fwait
add
dec
sbb
add
decl
cld
or
add
adc
mov
add
cmpsb
add
dec
daa
add
push
scas
sahf
add
in
add
push
test
dec
push
enter
xchg
jne
xor
add
add
and
das
sub
add
mov
add
mov
iret
popa
add
daa
add
add
lea
add
add
pop
mov
outsb
out
xchg
ret
add
sub
fidivs
add
lock
int3
xor
ljmp
fsts
sub
out
push
data16
add
fcomp
mov
add
adc
incl
ljmp
add
add
add
repnz
add
in
push
add
roll
sbb
insb
scas
out
mov
add
nop
sarb
inc
add
cmp
mov
pop
add
mov
incl
inc
add
cld
jbe
xchg
js
add
int
add
dec
sub
add
lcall
inc
add
add
add
call
adc
decl
add
add
add
sbb
loope
jg
mov
ss
add
mov
add
inc
add
mov
xchg
nop
push
add
sti
or
stos
bound
lcall
add
pushl
xor
inc
add
stc
mov
add
aas
sbb
decl
movl
out
cmp
add
test
sub
pop
lods
pushf
insl
xchg
jno
mov
add
lcall
xchg
xchg
lds
and
call
dec
push
ret
add
imul
add
stc
popa
add
ret
add
xor
das
mov
add
popf
inc
add
pop
or
call
add
mov
aad
mov
scas
or
add
sub
add
dec
inc
add
pop
fnstcw
dec
addl
add
les
mov
add
pushl
adc
jmp
out
mov
ret
add
or
add
inc
add
les
or
pop
les
movsl
add
mov
add
rcrb
movsb
add
jl
adc
call
pop
leave
jmp
xchg
mov
add
add
loopne
fldl
add
cmp
add
cmpsl
add
add
mov
jecxz
cmp
sbb
push
inc
add
xor
mov
jge
push
add
add
add
mov
bound
call
add
test
add
fmull
add
out
sarb
add
add
add
mov
pusha
add
xor
call
add
add
incl
enter
mov
add
add
mov
pop
pop
mov
movsl
add
dec
mov
jmp
push
jbe
dec
sbb
popa
add
sbb
add
rcrb
movb
ficoms
dec
sub
mov
add
add
fnstcw
fsubl
add
loope
ret
aad
push
add
pop
imul
movl
arpl
ljmp
add
in
xchg
jb,pt
jmp
add
in
pop
rcll
add
sbb
add
and
in
pop
jle
and
fdivs
push
add
out
test
xor
mov
sti
jb
lcall
push
add
lret
xchg
xchg
cmp
push
adc
pushl
add
in
sbb
out
xchg
push
add
lods
movb
aaa
mov
inc
add
pop
pop
icebp
mov
add
ljmp
add
mov
add
mov
mov
stos
cmp
sub
cs
add
clc
into
das
mov
add
pusha
add
jp
add
add
xor
jmp
ficompl
dec
mov
add
add
fstps
add
dec
movl
daa
add
aad
add
xchg
mov
cli
ss
mov
add
fnstcw
add
call
and
adc
inc
add
ljmp
inc
add
jecxz
push
dec
cli
lea
rorb
mov
idivb
pop
inc
add
jl
or
popa
add
rolb
call
add
mov
push
push
push
dec
jns
or
mov
jmp
add
push
cmc
in
push
jle
cmpsb
add
add
loopne
ds
push
int3
aas
jo
pushl
add
dec
or
mov
mov
jmp
jmp
add
add
add
jmp
or
jl
add
mov
ljmp
add
icebp
xchg
sbb
mov
icebp
mov
fidivrs
add
pushl
add
add
add
adc
pop
addl
sbb
mov
add
lret
addb
add
lock
push
pop
in
imul
add
add
or
add
jo
lcall
add
adc
add
imul
sub
sbb
cmpsb
add
add
and
jmp
add
add
fistps
add
jnp
addl
outsl
sbb
js
xlat
sub
jp
and
lcall
add
add
mov
push
insb
roll
add
lcall
add
aad
add
call
addl
cli
ja
mov
xchg
xor
lcall
pop
xor
call
add
inc
add
js
sbb
inc
add
mov
fistps
mov
leave
adc
pop
xlat
repnz
mov
cmpsb
add
aas
pusha
add
ss
add
mov
daa
add
add
jecxz
cmp
fsubrp
and
call
call
repnz
cmpsl
add
hlt
mov
inc
add
jg
inc
add
adc
ljmp
pop
push
jns
add
scas
cmc
fs
ffreep
add
loope
and
call
add
dec
loope
fadd
add
mov
add
roll
add
mov
mov
pop
test
sti
mov
in
lods
lret
adc
pushl
iret
test
cmp
decl
xchg
icebp
add
call
bound
call
or
jl
aad
cmp
sub
add
pop
add
mov
add
or
call
add
out
push
add
enter
test
in
in
or
dec
sbb
add
jge
in
and
lcall
push
add
add
lcall
add
pusha
add
pop
lds
aas
out
add
add
add
add
call
jle
arpl
out
roll
scas
les
outsl
adc
incl
add
add
pushf
mov
add
inc
add
pushl
call
fdivs
dec
addl
call
sub
xlat
in
js
add
add
xor
sahf
into
notl
or
pop
cli
dec
loopne
out
push
scas
lock
jmp
add
mov
enter
aas
sbb
jl
sbb
out
cmpsl
add
add
sbb
dec
mov
jns
add
clc
ljmp
decl
inc
add
xchg
mov
call
push
jb
lcall
ljmp
stc
mov
add
add
push
cltd
mov
xchg
addl
pop
fidivs
cmp
inc
add
lods
cmp
iret
fdivr
lret
mov
and
lcall
xor
incl
roll
add
or
call
or
inc
add
lcall
les
ret
add
lcall
xchg
mov
cltd
daa
add
add
lds
inc
add
in
ficompl
js
push
add
call
add
fnsave
dec
out
inc
add
jne
add
decl
add
fdivrs
pop
cmp
xor
incl
call
call
add
xchg
add
add
adc
call
add
xchg
dec
in
movsl
add
adc
jmp
add
jmp
add
add
lcall
jle
add
out
xor
sahf
pushf
movb
add
call
cmp
add
pop
int3
adc
incl
push
add
adc
add
jge
pop
xchg
cmp
mov
add
cmp
pusha
add
adc
push
or
sti
or
push
lods
in
adc
clc
fldl2e
xchg
les
mov
pop
add
or
stc
xchg
stos
push
add
pop
cmp
ljmp
pop
mov
mov
xchg
xchg
enter
or
add
out
test
add
cmp
je
clc
pop
pusha
add
inc
add
and
call
add
fstpl
pusha
add
loopne
sub
mov
addl
outsl
testl
loopne
loope
dec
addb
sbb
mov
add
addl
jmp
add
add
adc
pushl
add
add
cltd
xchg
lahf
push
xchg
xchg
jae
pushl
add
dec
cmpsl
add
push
add
dec
cmp
add
add
add
add
ds
pop
cmc
mov
add
pavgb
adc
call
add
test
out
mov
data16
lcall
xchg
dec
cwtl
mov
and
call
add
jne
ljmp
xchg
push
add
pop
rcrl
add
add
pushl
add
cli
cltd
cmpsb
add
add
mov
mov
out
aad
loop
mov
jecxz
addb
lret
call
pushf
pop
xor
xor
ljmp
sbb
jmp
data16
sti
gs
popa
add
adc
popf
cmp
clc
push
add
push
sbb
add
sub
and
out
sub
add
xchg
ljmp
call
fidivrl
jmp
jmp
repnz
lcall
addl
cs
inc
add
insb
adc
jmp
add
push
pushf
inc
add
mov
stc
fldcw
pop
test
stc
and
lcall
add
xchg
loopne
mov
call
ret
add
in
mov
nop
loope
repnz
pushl
sub
add
inc
add
mov
dec
mov
add
jp
ljmp
bound
incl
or
jmp
jle
je
add
insb
shll
add
mov
sub
scas
and
add
add
mov
add
push
ret
cmpsl
add
add
loop
aaa
daa
add
sbb
dec
dec
aam
xor
add
add
aad
out
addr16
cmpsl
add
std
sbb
jmp
addb
add
add
push
add
enter
xchg
adc
lcall
cmp
mov
aam
add
inc
add
call
das
mov
add
push
jnp
aaa
addb
add
xor
inc
add
jo
ljmp
push
fisttpll
push
add
gs
inc
add
add
pushl
and
pushl
add
decl
add
enter
mov
hlt
mov
out
std
or
ljmp
push
push
mov
add
add
lods
data16
addr16
aad
add
jp
adc
incl
add
sbb
add
add
add
enter
pop
mov
icebp
mov
addr16
add
fstps
add
incl
inc
add
ja
stos
or
inc
add
dec
inc
add
rolb
add
rol
add
lcall
icebp
mov
add
cltd
out
aaa
jge
movsl
add
xor
add
add
add
mov
add
adc
lcall
xlat
mov
add
fistl
and
pushl
add
fidivs
jmp
pushl
movsb
add
jl
jns
add
dec
shr
ror
xor
lcall
imul
decl
mov
aam
xor
inc
add
add
ret
add
out
jbe
stos
data16
lea
aaa
addb
add
jae
out
inc
add
in
stc
mov
cmpsl
add
sti
test
mov
in
lahf
cmp
xor
and
inc
add
add
jmp
faddl
mov
rcll
xchg
push
add
repnz
cmp
lcall
xchg
sub
test
and
ljmp
cmp
pushf
cmpsl
add
jb
push
jbe
add
inc
add
ret
add
out
or
push
or
add
sub
pop
jo
fdivrl
add
pop
data16
cmpsl
add
add
decl
imul
sub
add
cltd
sbb
lret
mov
add
jg
add
jnp
and
fisubrl
jg
jle
testb
xor
call
add
arpl
call
add
mov
add
xlat
das
loope
imul
pop
add
sub
ja
ds
add
dec
xchg
jns
adc
lcall
and
mov
add
mov
mov
and
jmp
ljmp
lock
add
add
stc
outsl
pop
out
test
adc
decl
inc
add
incl
insb
sarb
add
and
lcall
aam
add
adc
add
fcomi
in
in
mov
mov
xchg
in
aam
in
cmp
pushf
pop
add
add
jnp
mov
lret
cmc
jb
decl
ljmp
mov
lret
imul
fldenv
add
daa
add
pop
cli
aas
pop
sbb
stos
stos
mov
add
add
push
add
push
add
int
sub
jmp
pop
push
add
popa
add
and
push
push
add
xchg
jbe
jne
daa
add
push
add
pushl
sbb
ljmp
add
add
add
add
jnp
je
or
inc
add
jmp
add
cmc
jg
test
movsl
add
int
add
add
dec
cmpsb
add
mov
xor
mov
push
dec
push
add
add
rolb
add
add
jle
mov
add
sbb
xlat
repnz
lock
lcall
dec
jp
add
pop
nop
lahf
and
push
arpl
jmp
xchg
pop
xor
jmp
ret
add
xor
or
add
add
jg
lods
pop
add
mov
jae
decl
roll
daa
add
jb
lcall
popa
add
std
cmp
rolb
sub
lcall
ror
adc
lcall
movb
xor
lret
mov
add
jmp
lret
jnp
add
sahf
or
or
add
push
add
jno
decl
xchg
pop
in
adc
call
pop
pop
lock
add
test
mov
jmp
add
add
add
pop
pop
add
push
add
movaps
push
add
fcoms
inc
add
outsb
ja
arpl
call
jecxz
push
clc
fisttpll
dec
aad
add
sahf
in
cmp
xlat
add
int
dec
lea
aaa
int3
cmp
mov
shrl
scas
sub
cmp
icebp
out
jb
ljmp
add
js
add
jae
jmp
cmp
in
movnti
xchg
add
decl
lods
loopne
xor
decl
add
out
mov
and
mov
add
inc
add
dec
in
adc
ljmp
add
ljmp
add
pop
fmulp
repnz
push
scas
das
cmp
insl
mov
add
add
sti
cmp
sub
lcall
pop
repz
push
rolb
mov
add
scas
in
and
ljmp
jge
mov
add
decl
add
add
add
movl
jns
repz
add
dec
jmp
add
adc
js
add
push
add
in
test
add
inc
add
jno
pushl
pushl
sahf
mov
add
int3
jle
add
push
insl
int3
stos
test
dec
fisttps
inc
add
mov
add
jmp
jmp
movsl
add
sbb
lcall
insb
cs
add
add
repz
call
jns
add
aaa
xor
cmp
add
adc
jmp
add
add
jp
jae
incl
lcall
scas
xor
ds
mov
pcmpgtw
addb
add
or
add
cmpsl
add
add
jp
push
xchg
xor
incl
test
xchg
dec
lret
jo
call
aaa
xor
ljmp
cmpsb
add
cmp
and
dec
adc
sti
les
addl
add
jg
addl
ljmp
mull
js
into
aam
sahf
sub
sub
push
pop
ja
pop
scas
insb
cmpsl
add
xor
decl
jne
ljmp
cmp
add
push
add
sbb
add
dec
cli
mov
push
dec
dec
inc
add
add
ret
add
popf
mov
shlb
fisttpll
push
push
loope
fldl
add
aaa
inc
add
je
add
cld
into
lods
mov
add
add
push
jo
incl
add
int
cmp
les
xchg
lds
fstps
push
add
mov
add
push
pop
add
mov
loope
sub
aam
cwtl
addl
add
or
inc
add
shll
pushl
xchg
jge
addb
cmp
push
call
call
add
into
xor
pushl
decl
xor
jmp
add
dec
sub
mov
dec
mov
out
pop
out
lock
pop
add
add
jp
add
clc
pop
jne
stos
call
out
mov
lock
add
lcall
cmpsb
add
push
push
add
testl
and
ljmp
add
add
sbb
movl
nop
outsb
and
incl
fistl
decl
mov
add
add
inc
add
test
shll
add
push
add
mov
insl
mov
or
mov
xchg
cs
fwait
mov
pop
xchg
dec
sbb
add
inc
add
jno
push
addb
add
xor
decl
inc
add
add
call
dec
mov
add
add
idivl
push
dec
call
add
jmp
add
xchg
xlat
dec
push
les
ds
mov
in
xor
incl
push
cmp
std
and
int3
xchg
xor
mov
std
cmp
bound
jmp
add
add
ret
add
js
add
jmp
add
add
add
mov
xchg
iret
xor
decl
add
cmp
lcall
decl
jb
lcall
cmp
jmp
add
add
rolb
add
mov
ljmp
jns
fwait
add
addl
add
imul
add
fcomps
add
xchg
lock
push
pop
push
add
insb
push
add
mov
add
rcl
stos
push
add
mov
add
or
add
fadd
add
add
lcall
mov
movsb
add
add
inc
add
inc
add
popa
add
inc
add
repz
add
fidivrs
mov
cmp
push
sbb
add
ja
test
addb
add
inc
add
add
mov
push
pop
fwait
movl
out
call
jl
ljmp
pop
inc
add
adc
jmp
add
sar
add
or
cmp
dec
adc
jo
call
mov
addb
outsl
insl
mov
xchg
icebp
pop
repz
inc
add
les
or
cmc
push
add
call
loopne
fucom
add
incl
daa
add
daa
add
jo
mov
ss
js
jp
sbb
popa
add
inc
add
dec
mov
mov
mov
add
data16
add
mov
in
std
jg
add
or
add
add
pop
sbb
pop
dec
dec
xchg
sbb
pop
add
add
add
or
add
xchg
jecxz
inc
add
jb
decl
push
in
inc
add
sub
add
mov
mov
adc
jmp
add
incb
mov
aam
addl
add
add
add
dec
push
in
js
rorb
mov
add
hlt
je
add
jnp
mov
loop
test
and
jmp
add
jmp
out
add
push
mov
add
fstps
fists
mov
sub
cmp
outsl
sub
add
add
add
mov
push
jecxz
cmp
js
ror
mov
add
pop
aas
leave
inc
add
add
pushf
mul
add
cmp
mov
arpl
pushl
add
fnsave
xor
fldcw
hlt
movb
mov
in
push
cmc
sub
mov
icebp
lea
outsl
pop
or
jae
incl
mov
sub
add
lods
int3
mov
std
ret
or
or
sti
daa
add
test
add
dec
add
incl
jmp
rolb
push
out
xor
call
pushl
ljmp
jmp
loope
sbb
fidivs
lock
mov
shll
and
ljmp
add
push
dec
rcr
stc
add
add
bswap
enter
adc
pop
mov
cmp
add
push
add
les
dec
mov
jmp
add
in
and
je
dec
test
ja
pusha
add
aaa
mov
inc
add
leave
adc
jle
cmp
lcall
cmp
loope
call
fidivrs
xor
jmp
pusha
add
lret
add
jmp
addb
scas
hlt
sub
sub
movl
xor
jmp
add
in
idivb
pop
inc
add
ret
dec
mov
cwtl
pop
sub
mov
add
icebp
jne
add
or
dec
inc
add
call
sub
add
ljmp
cli
dec
jne
stc
jnp
ljmp
mov
cmpsl
add
add
xchg
ljmp
sbb
cmp
cltd
jle
jns
popa
add
pusha
add
cltd
insb
mov
rorb
in
dec
push
jp
aaa
out
jno
jns
lds
inc
add
pop
mov
add
lcall
push
rolb
add
jmp
pop
movl
mov
sbb
jnp
add
xchg
adc
jmp
loopne
mov
jmp
pushl
mov
ret
add
lods
adc
pushl
ds
fwait
or
in
lock
add
hlt
ret
add
xor
call
das
cmpsl
add
lea
add
std
mov
lahf
loopne
movl
add
dec
xor
dec
in
add
cld
adc
add
cmp
dec
insl
sahf
fmul
popf
ror
xor
aad
dec
repnz
daa
add
add
add
cmp
cmpsb
add
add
icebp
test
sti
pop
cmc
stos
xchg
lret
xor
add
add
stc
test
add
movsl
add
stos
add
xchg
or
add
mov
in
mov
incl
int3
sti
movsl
add
mov
ret
lock
jns
add
jg
add
cmpsb
add
add
and
mov
add
push
add
mov
add
jbe
addb
add
xlat
fcoms
jbe
int3
sti
lods
cmp
pop
add
in
dec
lds
jno
inc
add
pop
pop
shll
add
adc
out
scas
push
add
ret
add
add
xchg
adc
add
in
xor
lcall
mov
add
add
add
add
add
add
add
and
jmp
add
add
and
incl
roll
sbb
add
sbb
test
addl
and
decl
inc
add
mov
aad
mov
hlt
fldl
xor
cmp
aad
add
push
add
das
popa
add
or
cmpsl
add
mov
jb
lcall
sbb
push
add
call
add
loope
jns
push
movsb
add
mov
pop
addb
mov
add
fcom
aaa
xchg
test
fnstenv
incl
add
in
fwait
hlt
and
call
add
je
push
lods
and
clc
inc
add
mov
dec
std
xchg
cmpxchg
add
dec
pusha
add
out
addl
cmp
test
cwtl
shll
mov
mov
mov
data16
add
jno
ljmp
mov
lret
decl
decl
add
mov
add
sbb
add
scas
arpl
push
movb
add
pushf
roll
test
out
repnz
ficomps
lods
push
add
adc
jmp
add
lcall
add
gs
dec
adc
add
lods
and
xor
jmp
daa
add
jmp
add
sub
add
fnstcw
mov
pop
xchg
xchg
push
ja
add
lcall
mov
stc
adc
decl
fadd
add
jge
mov
push
mov
cmp
adc
pushl
add
stos
adc
pushl
add
test
bound
fidivs
add
inc
add
loope
jo
decl
stc
and
addb
leave
xchg
test
mov
cld
xlat
adc
aas
xor
incl
iret
insb
push
mov
roll
pop
popa
add
inc
add
mov
decl
add
lds
jl
add
inc
add
add
cmp
xchg
dec
les
dec
add
fdiv
push
push
adc
lcall
bound
decl
add
dec
sub
fs
push
add
mov
shl
in
ljmp
test
stc
test
mov
call
call
out
push
lock
or
add
mov
scas
mov
sbb
scas
cwtl
call
out
xor
decl
ret
add
lea
cmp
stos
je
push
clc
jge
mov
lds
ds
add
hlt
sub
call
add
or
add
pop
mov
or
add
add
movsb
add
add
jmp
jnp
add
add
sub
mov
add
jmp
add
out
sub
cmp
movsl
add
add
sbb
add
push
add
mov
addb
dec
loop
mov
add
out
repz
add
add
mov
call
call
movl
pop
and
ljmp
dec
adc
sarb
add
movsl
add
add
sbb
fidivrs
add
lcall
add
test
cmp
popf
jno
jmp
add
add
add
push
push
or
push
mov
pushl
add
add
ljmp
add
add
add
sub
add
add
pop
sbb
and
mov
imul
in
adc
js
add
pop
mov
jo
ljmp
clc
xlat
call
sub
sub
imul
cmpsl
add
mov
lock
test
or
add
xor
call
add
jbe
add
sbb
ljmp
pushf
jle
mov
add
add
mov
add
push
add
jbe
xchg
sub
cmp
add
add
add
std
dec
dec
xor
decl
add
pushf
daa
add
ljmp
xchg
aam
add
sbb
cmp
inc
add
ss
sbb
sbb
add
outsb
cli
roll
data16
xchg
jg
add
in
add
pop
les
imul
call
pop
inc
add
adc
lcall
pop
imul
add
and
fnstsw
lahf
xor
xor
call
xchg
addl
and
lcall
add
pop
mov
cmp
add
push
push
add
imul
push
add
and
jmp
call
pop
inc
add
jl
add
adc
mov
jbe
int3
xchg
push
mov
xchg
add
xor
ljmp
in
pop
cwtl
clc
popa
add
imul
add
push
int3
cmc
dec
jnp
add
sbb
add
cmp
add
stc
add
mov
add
popa
add
xlat
addb
mov
add
add
lcall
std
mov
jmp
add
unpcklps
add
or
jmp
call
add
rolb
add
jb
decl
add
add
icebp
addl
and
decl
sbb
xchg
decb
add
add
addl
movb
add
pop
mov
jo
pushl
add
add
xchg
jle
in
roll
aam
add
adc
decl
pop
and
incl
stos
cmp
repz
cmp
jmp
jmp
add
dec
lahf
add
add
sahf
cmpsb
add
lock
rcll
add
jnp
add
xchg
test
jle
lcall
add
jge
add
popf
loopne
jle
add
pop
imul
mov
lcall
mov
inc
add
fists
add
sti
aam
leave
lret
xchg
push
test
jle
or
add
cmp
cmp
cmp
dec
or
add
addl
dec
bound
js
scas
outsb
cltd
sub
inc
add
call
add
jnp
push
into
dec
lret
add
inc
add
and
inc
add
ss
add
cmp
xchg
cld
dec
xchg
xlat
sub
lock
mov
mov
mov
add
aad
add
jnp
push
add
jmp
add
ljmp
add
in
push
int
add
mov
sub
dec
sbb
sbb
add
xchg
xchg
mov
add
add
pop
clc
stc
fisubs
jmp
add
fmuls
add
scas
xchg
and
cmp
add
xlat
pop
imul
addl
sub
aad
dec
aaa
cmp
or
pop
out
addb
cmp
mov
add
inc
add
shlb
pop
jnp
in
push
add
ret
add
inc
add
add
inc
add
add
scas
loopne
test
enter
add
add
add
mov
add
dec
mov
add
lods
loopne
sub
hlt
cmc
xlat
test
add
xchg
fisubs
cltd
push
add
jnp
sbb
add
addl
fimuls
sub
add
fisubrl
std
or
call
addb
add
scas
inc
add
movsl
add
jmp
add
aaa
aad
jbe
mov
cmp
adc
jmp
mov
insb
or
ljmp
add
add
in
adc
push
movb
rolb
xchg
clc
or
mov
icebp
repnz
add
xlat
adc
add
jb
lcall
les
inc
add
stos
push
lcall
inc
add
xchg
decb
sub
and
lcall
movb
add
dec
cmp
pop
notl
in
xchg
jp
add
inc
add
push
pushf
sub
add
add
lret
push
std
imul
add
ficoms
push
xchg
fwait
movsb
add
add
inc
add
push
sub
pop
jb
mov
popa
add
imul
add
cmpsl
add
add
add
or
push
or
ja
add
push
lea
and
jmp
mov
movsl
add
imul
fwait
mov
add
add
add
add
add
jmp
decl
icebp
or
dec
movl
loop
or
xor
lcall
mov
add
fstps
lcall
arpl
decl
lcall
add
faddl
incl
call
test
add
daa
add
out
inc
add
dec
stos
mov
add
and
mov
push
xchg
loope
outsb
cmp
out
sbb
xor
incl
call
add
mov
mov
cmovle
and
mov
in
into
inc
add
outsb
addb
out
bound
jmp
mov
cmp
inc
add
ds
add
data16
mov
shr
inc
add
nop
sti
mov
cmc
cwtl
stos
dec
pop
out
lods
mov
add
cmp
dec
and
std
and
lcall
loopne
push
sbb
js
dec
pop
pop
inc
add
insl
loope
add
call
jecxz
les
pop
fcom
dec
mull
or
ljmp
push
std
insl
loopne
mov
add
add
out
int
pop
mov
mov
add
dec
loopne
stc
movl
and
call
jmp
jge
cmp
add
add
add
add
ja
adc
in
push
dec
loope
jp
lds
jns
cmc
cwtl
fisubl
pushl
add
push
sub
pop
adc
jmp
data16
ljmp
add
add
mov
and
pushl
add
cmp
add
xchg
jecxz
xchg
push
push
sub
addl
stc
mov
rcr
movl
movsl
add
add
add
add
push
or
lea
mov
iret
xchg
out
addl
add
add
sub
fwait
pop
push
add
rorl
cmp
clc
or
add
push
xor
pusha
add
cmp
add
je
sbb
mov
add
pop
mov
add
add
mov
je
add
decl
add
fwait
xchg
fldcw
daa
add
aam
pop
iret
les
add
push
adc
dec
repz
add
cmp
adc
lcall
cmp
dec
jle
and
call
mov
add
dec
insl
or
sahf
push
add
add
int
clc
dec
aas
jne
pop
outsb
mov
add
das
jne
addb
add
add
xchg
xor
add
dec
pop
stos
dec
popa
add
ss
ljmp
rclb
incl
sub
pop
sub
pushl
add
pop
xor
pop
jmp
mov
jg
add
xchg
call
or
inc
add
adc
add
add
lcall
add
fcomip
movb
icebp
cld
xchg
xchg
xor
incl
int3
and
pushl
jmp
decl
cmpsb
add
inc
add
mov
add
add
popa
add
in
cld
test
lcall
test
pushf
call
push
add
xchg
add
jmp
mov
into
rolb
add
mov
xor
call
imul
lcall
sti
enter
out
mov
sbb
add
out
in
bound
call
xor
mov
mov
sahf
xchg
push
add
add
sbb
dec
mov
sbb
in
or
test
add
idivb
add
add
push
or
add
add
add
add
mov
add
cli
jle
dec
call
ja
add
jmp
bound
jmp
add
pop
stc
xor
mov
mov
call
pushf
adc
call
in
out
mov
movsb
add
mov
test
xor
inc
add
add
aad
xchg
mov
decl
push
in
sbb
addb
add
sub
add
add
add
pop
fidivrl
mov
data16
ficomps
clc
mov
jns
mov
add
xchg
movsl
add
mov
sbb
add
push
pop
lods
repz
add
lock
insb
roll
xchg
in
in
shrb
jg
xchg
scas
loop
xlat
mov
fbstp
insb
dec
popa
add
dec
mul
add
dec
pushf
dec
sub
add
mov
rcrl
mov
call
leave
jl
ret
add
pop
xor
decl
stos
add
add
bound
decl
pushf
jnp
sti
fnstcw
add
mov
add
outsl
xchg
push
aam
sahf
mov
add
lcall
ss
add
add
and
xchg
das
out
sti
push
add
fucomp
and
jmp
add
in
add
pushl
add
add
pushl
add
stc
xchg
sub
add
dec
mov
xchg
pop
add
add
leave
fmull
adc
add
ljmp
sti
mov
add
add
dec
ljmp
ljmp
add
add
add
inc
add
add
xor
inc
add
mov
jecxz
xor
dec
jo
aas
out
inc
add
addl
sti
fwait
test
aas
pop
movl
sub
push
add
fnsave
mov
and
call
pop
stos
mov
jo
call
sub
add
pop
hlt
adc
call
jne
dec
mov
add
and
incl
add
add
shl
add
mov
mov
add
in
jno
fisubrs
add
xchg
and
call
cli
push
add
aaa
das
jne,pn
add
pop
add
fwait
addb
push
push
add
sti
push
in
push
or
add
ds
add
cmc
pop
out
loop
in
movb
sbb
or
ljmp
outsl
adc
stc
aam
movb
rolb
stos
pop
mov
jg
nop
pop
push
lret
inc
add
mov
jmp
loope
jbe
add
xor
jg
aad
add
or
or
add
mov
xchg
mov
lods
cmpsl
add
sub
add
jecxz
hlt
push
test
dec
push
lret
xor
mov
mov
add
dec
jnp
clc
lds
dec
divl
add
add
call
shlb
popf
cwtl
adc
decl
or
rcr
add
ljmp
add
mov
pop
jg
add
add
fwait
arpl
decl
push
outsb
cmp
fcmovb
add
jl
pop
in
push
add
adc
decl
out
sub
in
pushl
xor
ljmp
fmuls
adc
jle
sti
pop
cmpsb
add
add
cld
mov
imul
push
add
ja
pop
sbb
mov
out
cmp
add
sub
bound
cmp
pop
push
add
lret
mov
push
add
add
mov
cmpsl
add
add
call
shl
sub
in
add
dec
out
pop
pop
sbb
decl
and
ljmp
shrb
sbb
pushl
pop
or
adc
add
inc
add
add
lock
fxch
out
sub
inc
add
cltd
sahf
shl
add
cmp
je
mov
es
pop
insb
sbb
ljmp
movl
mov
add
lods
ds
fs
add
jns
std
out
int
add
adc
cmp
shlb
add
mov
clc
mov
add
ljmp
std
cltd
cmp
add
inc
add
stc
movsl
add
lcall
mov
movsl
add
inc
add
jle
mov
insl
je
loopne
and
jnp
mov
test
add
jmp
add
add
arpl
lcall
rcrb
add
add
call
add
or
stos
cmpsl
add
sbb
add
inc
add
xchg
push
imul
jno
decl
insl
xor
pushl
jns
pop
mov
add
pop
jbe
add
inc
add
lods
mov
add
xchg
mov
add
mov
outsl
les
push
roll
cmp
add
cmp
cmpsl
add
add
add
jp
test
pop
mov
add
sti
mov
add
popf
sub
add
inc
add
iret
add
add
les
dec
add
add
cmp
add
cmp
add
pop
test
pop
xchg
pop
mov
jno
pushl
jno
lcall
add
shll
arpl
ljmp
lcall
xchg
jns
add
cmovnp
decl
pop
insb
ljmp
mov
add
xchg
je
jge
fdivl
mov
add
push
add
bt
iret
lret
push
dec
sbb
add
inc
add
nop
inc
add
fldt
adc
incl
bound
jle
pop
pop
sbb
or
clc
fwait
shlb
sub
add
mov
add
push
add
add
sub
mov
or
add
jmp
call
lcall
and
ja
add
inc
add
test
lcall
inc
add
add
stos
mov
lret
push
pop
movl
outsl
mov
call
insl
push
bound
mov
mov
insb
and
and
adc
decb
inc
add
push
insl
xor
jg
in
repz
add
mov
sbb
add
cwtl
in
hlt
mov
mov
in
mov
rcrl
jle
add
xor
ljmp
mov
cmc
mov
pushf
xlat
fdivr
mov
sbb
call
add
mov
and
decl
xchg
jns
lock
add
jae
jmp
add
leave
and
ljmp
mov
mov
add
lret
add
addr16
lcall
sub
enter
cmp
add
pop
sub
add
add
mov
push
add
out
and
ljmp
fsub
add
add
cli
aad
add
add
push
add
decl
cs
fisttps
xchg
pop
push
add
addl
outsl
inc
add
or
insb
movsl
add
push
xchg
jle
add
out
addl
push
add
dec
mov
add
insb
pop
cmpsl
add
push
xor
add
add
mov
aaa
sbb
sub
movl
call
jecxz
sbb
test
add
jmp
cmp
or
ficoml
ljmp
cmp
adc
pushl
inc
add
movsl
add
jmp
add
push
cmpsb
add
add
xor
incl
add
in
imulb
cmp
add
pop
cltd
push
add
cmc
int
pop
xor
lret
jecxz
das
xchg
pop
mov
cltd
fldl
dec
sbb
out
mov
add
ljmp
pop
pop
pop
movsl
add
push
add
jecxz
pop
pop
clc
in
adc
lcall
mov
ret
test
add
jp
add
pop
nop
stos
fldz
cmp
xchg
sbb
movsl
add
test
xchg
xlat
cmp
cmpsb
add
add
sbb
cli
push
add
insl
scas
lahf
push
add
adc
incl
cmp
xor
ljmp
aas
lods
inc
add
aad
addb
jae
ljmp
dec
xor
pushl
icebp
inc
add
add
ljmp
add
clc
fcoms
sbb
pusha
add
or
add
push
jne
popa
add
xlat
int3
xchg
les
data16
lcall
imul
jno
pushl
out
and
jp
add
lret
mov
ret
fucomip
sub
mov
lds
repnz
add
decl
enter
add
or
add
mov
add
cmpsl
add
add
xchg
sub
mov
add
enter
sahf
icebp
push
add
adc
lcall
add
push
sub
add
sub
call
adc
jl
add
call
addb
add
jmp
or
add
roll
add
jbe
add
add
loopne
pop
or
mov
mov
push
add
pop
add
dec
test
mov
add
lods
and
dec
or
add
loop
mov
cmp
cmp
test
stos
and
ljmp
jns
dec
jns
push
add
add
call
xchg
pusha
add
inc
add
pop
add
add
cs
add
loope
pop
scas
testb
repz
into
lock
dec
nop
in
mov
add
or
add
add
test
pop
sti
outsb
stos
mov
add
loop
cwtl
fidivrs
add
xchg
sbb
dec
imul
sbb
out
sti
int
add
inc
add
add
add
add
fsubs
dec
cmp
add
mov
or
decl
stos
les
rclb
add
sub
add
pop
mov
push
out
xchg
arpl
fstps
dec
jbe
pop
jp
add
int
push
jns
inc
add
push
incl
adc
add
jne
xor
add
test
js
add
out
or
add
jnp
add
add
xchg
push
aam
das
leave
or
add
or
jne
add
add
lcall
lcall
mov
add
add
insb
or
add
add
call
mov
cltd
hlt
in
add
add
add
call
or
fidivrs
mov
add
addb
pop
out
aaa
sbb
xor
fwait
je
add
je
add
lcall
jo
jmp
sub
or
mov
add
add
pop
cmpsb
add
call
add
or
cmp
add
cmp
ds
pop
dec
test
and
pushl
lock
ja
pop
push
inc
add
lea
fiaddl
add
insl
adc
add
mov
add
and
call
cmp
add
int
add
and
mov
push
add
ljmp
push
mov
incl
lea
add
outsb
xchg
sbb
add
mov
add
mov
ljmp
and
call
add
xor
call
add
push
add
mov
cmp
or
mov
add
outsl
bound
decl
xlat
push
cmp
add
mov
add
cmp
movl
add
cmp
push
cmp
daa
add
addl
push
add
stc
xchg
fdivrs
sti
xor
dec
dec
in
xor
ljmp
add
adc
lcall
push
mov
add
add
add
pop
fadd
add
add
add
push
hlt
lods
nop
jns
movb
and
call
incl
jmp
add
xor
sti
jp
decb
jmp
aad
add
test
mov
xor
lcall
sub
addl
add
idiv
inc
add
repnz
add
sbb
cmp
mov
add
add
aam
add
fwait
pop
and
mov
add
add
lcall
ja
pop
xchg
xor
decl
std
ja
dec
pushf
add
imul
aas
lahf
mov
das
sbb
jecxz
in
mov
add
add
movb
lock
dec
int
pop
add
dec
add
stc
popf
mov
aad
mov
sub
add
popf
dec
loope
sub
add
les
jbe
add
sarb
fisubrs
pop
pop
xchg
lods
or
add
add
inc
add
outsb
arpl
jmp
add
add
loope
pushf
daa
add
arpl
jmp
add
add
add
hlt
call
notl
mov
add
add
iret
stos
test
push
repz
cmp
movsb
add
add
out
jae
ljmp
lcall
out
stos
mov
add
add
push
add
in
inc
add
sub
sub
or
add
lcall
pop
cmp
add
add
lods
nop
dec
sub
jno
jmp
add
xchg
stos
in
in
hlt
push
jno
mov
stos
movb
jp
add
data16
call
lods
fwait
outsb
xor
pushl
dec
adc
call
data16
add
add
jne
xor
add
inc
add
add
sub
ljmp
nop
mov
sbb
xchg
arpl
mov
inc
add
sbb
add
mov
aad
ficoms
pop
jg
adc
pushl
mov
mov
incl
add
mov
cmp
add
ds
repnz
pushl
pop
mov
adc
incl
test
jno
jmp
add
fcmovb
add
imul
enter
xor
dec
add
lcall
mov
dec
frstor
push
dec
jg
add
in
mov
add
sub
stos
int3
nop
sbb
movsb
add
and
decl
add
pop
lcall
sbb
add
add
push
stc
jno
ljmp
add
dec
inc
add
adc
lcall
cli
lock
dec
inc
add
dec
cs
push
adc
decl
pop
cmp
add
add
push
call
pusha
add
adc
call
sbb
cwtl
idivb
add
fcomi
fsubl
add
je
daa
add
and
ljmp
add
adc
call
hlt
addl
dec
cltd
cli
mov
sub
add
pushl
mov
add
incl
ljmp
lods
mov
cmp
add
jp
or
mov
cmpsl
add
xor
add
add
out
mov
out
inc
add
add
and
inc
add
jmp
mov
add
jecxz
dec
add
push
add
mov
add
call
add
lcall
roll
xchg
test
xchg
sti
popf
mov
ljmp
add
or
fcoms
ljmp
push
add
outsb
outsl
popa
add
jnp
add
aad
sub
inc
add
add
add
jl
cmp
pcmpgtb
repnz
inc
add
inc
add
add
bsf
decl
add
add
lock
add
fidivl
mov
jmp
add
sbb
fiaddl
incl
add
mov
add
fnsave
test
stos
xchg
mov
adc
add
or
arpl
decl
pop
jg
add
mov
add
add
stos
sbb
add
cmp
mov
cmp
add
xchg
mov
and
add
aas
in
hlt
cmp
xor
jmp
addl
push
inc
add
push
outsb
push
lret
add
xchg
repz
lods
pushf
push
jae,pt
jmp
in
cmc
call
add
cwtl
pop
add
cmp
add
test
add
lcall
xor
add
add
pushl
add
adc
jmp
incl
add
jmp
jbe
mov
add
inc
add
icebp
mov
push
adc
jmp
pushl
add
popa
add
aad
dec
enter
fisttpl
add
cmp
inc
add
testl
add
add
fcmovnb
add
add
add
push
add
lock
bound
jmp
or
addb
out
xchg
xlat
mov
add
push
pop
pop
lds
jo
sti
jnp
into
push
add
mov
pushl
add
inc
add
cmp
xchg
addl
cmc
hlt
call
add
mov
inc
add
add
dec
add
dec
pop
fidivl
in
adc
ljmp
add
arpl
decl
add
fucompp
fdivs
movsl
add
lret
mov
fs
add
ret
pop
jns
addb
add
add
push
cmpsb
add
addl
add
inc
add
dec
gs
add
lcall
into
adc
incl
add
div
pop
sub
shrl
add
inc
add
adc
sub
ljmp
shl
pop
pop
out
lret
xchg
data16
add
aas
in
sahf
scas
push
add
clc
sbb
pushf
loope
test
jo
pushl
add
fidivrs
push
add
sti
stc
jo
call
sub
add
fmuls
addb
add
add
inc
add
add
decl
bound
mov
imul
clc
push
add
mov
repnz
pop
add
dec
dec
mov
stos
pop
in
cli
ss
jo
jmp
add
fwait
ljmp
add
addb
add
add
mov
inc
add
and
incl
add
xor
pushl
add
add
add
inc
add
add
add
mov
add
call
jmp
inc
add
ret
add
in
ret
jnp
add
add
ljmp
out
outsl
sbb
and
decl
lcall
add
add
push
jbe
scas
jle
add
daa
add
push
xchg
arpl
decl
add
mov
mov
cmp
or
xor
push
loope
adc
lcall
add
mov
add
sbb
out
and
pushl
xchg
push
aaa
sti
dec
cmp
cli
push
add
jge
add
mov
adc
decl
jmp
pop
lock
adc
incl
fdivr
les
movsb
add
fidivrs
add
sarl
pop
das
jge
lcall
in
dec
or
sbb
inc
add
rorl
pushl
add
add
or
test
add
mov
add
push
add
call
lret
add
add
call
lcall
add
xchg
scas
add
addb
push
add
decl
test
mul
add
add
mov
mov
add
add
mov
mov
mov
xor
incl
inc
add
add
addb
js
cmp
xchg
lock
jp
add
add
xchg
xchg
inc
add
cwtl
sub
sub
ret
xor
jns
test
out
int
xor
dec
jnp
add
push
add
out
adc
add
mov
loope
aaa
inc
add
mov
decl
je
clc
add
in
movb
dec
addl
mov
add
sbb
call
out
pop
test
mov
mov
mov
mov
add
add
add
mov
jbe
add
sbb
mov
mov
add
loopne
or
add
dec
sub
incl
add
inc
add
js
push
add
repz
add
mov
add
jmp
aad
mov
cmp
ja
add
push
dec
inc
add
or
add
das
jno
jl
add
incl
add
add
push
in
leave
pop
pop
add
xor
faddl
pop
les
add
jl
sbb
sbb
hlt
cmp
add
in
push
add
dec
sub
push
aas
outsl
and
call
add
mov
add
jmp
movsb
add
xchg
inc
add
push
add
sbb
add
add
add
sahf
add
dec
test
mov
add
xor
add
lods
jp
jae
ljmp
cwtl
push
xchg
push
cmp
or
call
jbe
add
jmp
jmp
pop
add
mov
movsl
add
cs
mov
push
dec
pop
lret
push
add
sub
sub
dec
pop
js
jne
add
mov
cmp
enter
add
add
push
add
or
push
add
jnp
sub
lret
mov
add
pushl
jmp
incl
ljmp
mov
dec
xchg
fcomi
and
lcall
outsb
add
push
inc
add
arpl
out
sub
fprem
sbb
adc
lcall
mov
add
add
and
pushl
int3
or
xchg
shr
insl
lcall
fcompl
push
add
jnp
dec
filds
int3
test
inc
add
jmp
mov
mov
jnp
push
add
or
fbstp
add
jmp
fistpl
add
add
add
pusha
add
sub
add
cmp
mov
add
add
sub
std
and
dec
lret
dec
not
fistl
out
adc
fistl
add
jmp
in
arpl
ljmp
jge
movl
mov
mov
test
jne
mov
bound
ljmp
push
add
std
xchg
adc
movsb
add
add
incl
jb
pushl
inc
add
js
jno
js
xor
incl
mov
cmp
add
out
sub
pop
sub
hlt
aad
add
add
mov
lcall
jb
call
mov
data16
jp
push
fsubrl
outsb
fsts
add
popf
in
dec
cmp
jbe
cmpsb
add
push
inc
add
push
add
pop
pop
mov
in
or
out
mov
dec
call
add
push
dec
sbb
add
add
fisubrl
add
push
aad
ficompl
add
mov
push
or
jno
call
or
dec
or
add
mov
shll
add
and
call
add
clc
cmc
sbb
ljmp
lea
xchg
mov
outsb
add
add
dec
leave
inc
add
lcall
lahf
xor
lcall
out
inc
add
mov
dec
xor
jmp
add
and
ds
movsb
add
dec
add
pop
adc
sub
xchg
repnz
call
pop
movl
cltd
shl
dec
repz
dec
jo
dec
pop
xor
jmp
or
inc
add
add
jmp
add
repz
pushf
int3
sub
dec
dec
cmpsb
add
push
add
lds
jmp
add
add
add
adc
mov
xor
ret
add
xor
push
rolb
addb
lds
scas
jbe
adc
incl
add
jg
popf
xchg
pop
cmp
add
xor
ljmp
lcall
mov
inc
add
cmpsl
add
xor
inc
add
out
inc
add
pop
mov
xlat
add
dec
push
dec
leave
dec
shll
incb
fcmovbe
mov
call
push
add
dec
clc
inc
add
adc
jmp
dec
movsl
add
pushf
fwait
xchg
mov
fst
mov
sbb
sbb
or
add
sar
add
call
incl
sbb
in
cmp
aam
push
and
jmp
add
xor
loope
call
addb
clc
pop
pop
dec
in
pop
add
call
dec
cwtl
adc
xor
ljmp
add
les
mov
add
and
sub
icebp
movl
movsb
add
rolb
sarb
add
lods
add
cli
cwtl
loopne
sub
add
adc
call
mov
aam
add
jb
ljmp
xchg
add
add
cs
add
cld
cs
mov
fcompl
jecxz
cmc
lock
add
jecxz
les
dec
insl
xlat
stc
lock
add
cli
lods
aas
adc
ljmp
pop
lods
pushl
das
pop
sbb
les
repz
or
cltd
mov
add
jnp
xchg
or
repz
add
imul
xchg
sbb
and
ljmp
fld
add
add
push
pop
pop
push
sub
cmpsl
add
jae
sti
icebp
cltd
pop
lods
push
inc
add
cwtl
dec
push
add
ret
add
jge
add
jecxz
cmp
add
pushl
ss
mov
fstp
jl
in
mov
popa
add
nop
cmp
dec
adc
lcall
mov
add
movsb
add
inc
add
add
ljmp
ret
add
mov
sbb
stos
push
inc
add
add
jmp
add
ret
jle
jle
cmpsb
add
add
pop
jae
decl
mov
addl
add
mov
cld
ret
addl
jle
add
mov
pop
add
add
or
push
insl
icebp
cmp
add
lret
add
or
inc
add
lock
ret
add
incl
add
add
addb
add
mov
mov
je
jmp
and
add
fimuls
add
push
add
cmp
call
jnp
add
cmp
nop
lods
push
xor
jnp
cmpsb
add
add
add
add
add
insb
jp
add
cmpsb
add
add
add
negb
pushf
fdivrl
add
xchg
ret
aas
inc
add
test
and
pushl
mov
lods
cmp
add
push
add
call
or
add
add
pushl
ud0
imul
pushl
call
inc
add
xlat
fstl
add
adc
call
fimuls
mov
inc
add
lcall
mov
add
push
add
mov
add
mov
jnp
jb,pn
call
add
mov
aaa
or
xchg
cmp
add
push
ret
jl
add
out
cmp
pushf
cltd
xor
out
test
ja
add
mov
add
push
ljmp
inc
add
add
addr16
pop
xchg
mov
call
movsl
add
decl
adc
add
add
jecxz
arpl
inc
add
add
mov
shr
imul
jg
jle
sub
add
mov
dec
data16
lahf
and
lcall
pop
and
ljmp
jno
incl
mov
adc
pushl
xor
pushl
pusha
add
lods
adc
jg
add
xchg
sti
imul
add
dec
inc
add
cmpsl
add
xor
call
xor
pushl
add
dec
daa
add
aad
or
push
push
pop
push
add
jl
rolb
xchg
cs
out
or
add
cli
outsl
jle
out
fsubs
dec
inc
add
add
xchg
in
aam
cltd
loope
popf
data16
inc
add
imul
pop
cmp
add
lods
fucom
add
cli
mov
lcall
xor
clc
cli
jl
cmp
je
xor
decl
bound
lcall
pop
push
mov
outsl
sub
add
pushl
mov
fwait
push
pop
cmp
xchg
xor
lcall
dec
and
pop
cmp
add
movb
aas
add
movsl
add
pop
add
add
call
jae
call
jmp
or
push
pop
inc
add
mov
roll
pop
sbb
mov
add
addb
inc
add
mov
pop
add
add
pop
in
pushf
add
add
mov
or
sbb
leave
pop
add
fisubs
movb
scas
sbb
in
mov
int3
mov
add
std
mov
xor
decl
and
call
repz
pop
nop
lock
mov
dec
imul
jmp
lcall
sarb
add
sbb
mov
cmp
add
add
sub
mov
stc
mov
add
movsl
add
call
add
shrb
add
add
popf
mov
add
call
mov
push
or
add
adc
push
les
and
add
sub
dec
jne
imul
add
pushf
aad
inc
add
movl
icebp
and
jmp
add
add
pusha
add
inc
add
cmp
add
in
xor
add
cmc
lret
dec
movb
xchg
mov
cmp
add
insb
cmp
add
mov
je
faddl
pushl
add
inc
add
mov
mov
test
or
and
lcall
and
incl
lcall
in
js
adc
add
bound
call
jo
call
stos
or
ds
xchg
rolb
ret
add
mov
push
sbb
mov
movl
repz
inc
add
movsb
add
add
add
mov
add
add
add
add
movsb
add
xor
incl
mov
add
sbb
out
add
cmp
add
mov
add
add
jnp
add
push
dec
addb
adc
iret
pushf
mov
addl
test
movsb
add
add
add
cmp
add
xchg
adc
jmp
add
in
fimull
nop
or
add
aam
addl
add
push
add
and
decl
and
pop
fdivrs
add
outsl
mov
add
sub
add
add
jae
decl
add
add
add
stos
mov
add
inc
add
imul
bound
incl
add
xchg
fstl
addr16
lret
add
insb
lods
loopne
pop
xchg
adc
call
call
cmc
lods
xor
add
cmp
popl
ljmp
jecxz
fnsave
lret
add
sub
sbb
add
pop
sub
add
ret
gs
add
xchg
dec
sub
add
or
add
add
jecxz
xor
call
adc
decl
fistps
js
add
das
test
inc
add
addb
cmp
jno
ljmp
outsb
mov
pop
ljmp
addl
jge
jae
push
xchg
aad
out
mov
jecxz
push
cs
mov
add
fdivr
adc
ljmp
test
daa
add
jg
dec
adc
imull
mov
push
mov
pop
les
jnp
xlat
push
cmp
cmpsl
add
imul
add
add
cmp
std
cmp
add
xchg
data16
cmp
add
incl
adc
lock
jge
add
bound
jns
add
mov
cmp
add
dec
push
out
dec
push
lods
cwtl
mov
faddl
add
sbb
dec
icebp
lock
call
cmp
pushl
in
pop
push
add
mov
lahf
popf
adc
dec
mov
aam
loop
fidivs
add
inc
add
jl
push
add
cmp
je
add
add
scas
sub
inc
add
movsb
add
loopne
mulb
add
inc
add
add
cltd
jnp
add
jo
call
add
mov
mov
add
mov
lret
fidivl
ljmp
fadds
in
icebp
dec
das
jnp
into
mov
xchg
sub
and
and
incl
push
sbb
add
add
pushl
add
push
add
add
stc
sub
incl
adc
decl
pop
out
mov
push
pop
add
mov
dec
jg
lods
inc
add
imul
adc
add
ljmp
lret
ror
push
inc
add
fcmovne
and
mov
add
js
insl
in
test
add
ljmp
insl
repnz
jmp
push
mov
aam
add
jl
fcomip
out
hlt
cwtl
sti
repnz
fucomip
rolb
out
push
add
xchg
jp
add
mov
add
stos
sub
inc
add
loope
xor
incl
insb
cld
mov
lds
dec
imul
add
inc
add
call
mov
call
je
rolb
rep
ss
outsl
pop
in
add
insl
ret
add
pusha
add
adc
out
fistpll
rorl
sbb
sbb
lcall
pop
out
pop
out
cs
add
cmc
nop
aaa
rorl
lret
add
incl
hlt
popa
add
and
iret
in
mov
add
scas
insl
xor
mov
add
dec
push
add
pop
adc
decl
add
insl
aad
decb
lds
stos
mov
sub
pop
push
cmp
add
lds
mov
test
adc
mov
ss
xor
lcall
xchg
mov
das
bound
dec
jo
lcall
pop
push
mov
cld
mov
add
ficompl
jle
add
lcall
fwait
cmp
xor
jge
mov
lock
xor
pushl
xor
ljmp
cmc
cli
jnp
repnz
add
dec
iret
adc
add
push
lods
cmp
gs
push
cltd
outsl
mov
inc
add
movsb
add
sub
inc
add
mov
add
pmaxub
movsl
add
xor
call
adc
pushl
mov
mov
xchg
xor
jmp
xor
sbb
addb
xor
jns
jbe
add
jmp
dec
cmp
mov
add
lock
jmp
add
shrb
pushl
rclb
dec
pop
movsb
add
je
add
test
add
incl
add
push
roll
pop
cli
lock
insb
and
and
ljmp
and
pushl
add
add
roll
add
movsb
add
add
movsl
add
add
add
jnp
cmp
mov
push
out
and
decl
int
out
mov
add
out
sbb
add
push
mov
add
jno
pushl
ljmp
scas
testb
out
idiv
js
add
inc
add
iret
lahf
std
xchg
push
add
pop
addl
add
or
jmp
lret
fstps
in
insb
inc
add
cmpsb
add
add
addb
and
cld
out
xor
decl
in
sbb
push
mov
add
addr16
add
ret
fadd
add
mov
popl
call
mov
dec
jle
mov
push
add
stos
sbb
add
mov
push
add
jmp
pop
jb
ljmp
popa
add
scas
fdivp
imul
add
stos
xchg
pop
add
movsb
add
adc
mov
cmp
add
popf
adc
add
add
loope
addl
add
dec
mov
jl
incb
add
pop
jp
mov
lds
mov
test
test
nop
cmp
outsl
inc
add
mov
add
mov
pop
pop
push
xor
call
push
sahf
hlt
fsub
add
pop
outsb
jbe
mov
mov
add
or
pushl
add
sub
push
add
insl
pop
cltd
push
mov
sub
repnz
clc
ror
jg
adc
ljmp
out
cmp
jnp
roll
addl
sbb
add
add
das
int
cmp
sub
sub
hlt
add
add
daa
add
js
adc
jg
cmp
movl
aad
xchg
fadd
add
ljmp
add
add
mov
mov
mov
add
ljmp
add
adc
push
adc
call
pop
pop
ss
rcrb
scas
cmp
pop
dec
in
addb
sub
movsl
add
push
add
add
jns
mov
add
xchg
xchg
mov
jo
jmp
fldcw
stos
mov
add
dec
xchg
rorb
dec
jp
rolb
jg
leave
nop
mov
add
add
add
add
incl
fcmovnu
call
cli
in
enter
ljmp
add
rcr
inc
add
addb
in
roll
add
and
add
loopne
or
mov
ret
mov
mov
dec
push
add
mov
adc
ljmp
add
popf
mov
cmp
add
test
cmp
cld
add
incl
cmc
mov
push
add
jmp
add
add
add
insl
call
ja
dec
jno
push
dec
popf
jo
jl
dec
shrb
xchg
movsb
add
iret
xchg
jmp
push
add
or
fmuls
and
ljmp
push
add
iret
pop
cmpsl
add
mov
add
mov
add
rolb
add
cli
and
decl
cmpsb
add
add
dec
fisttpll
out
stos
pop
add
fsub
add
add
ljmp
pushf
xchg
sub
add
daa
add
sub
stc
data16
cld
pop
mov
fimull
sbb
pop
or
addr16
add
outsb
xchg
pop
xchg
roll
add
dec
stc
cmp
add
inc
add
lds
test
xlat
test
jno
incl
inc
add
in
push
roll
loopne
and
incl
add
jnp
iret
mov
loopne
add
incl
jmp
aam
inc
add
inc
add
jb
ljmp
hlt
xor
decl
fisubl
int3
mov
jl
xchg
rolb
pop
dec
jno
decl
inc
add
sbb
add
push
incl
setb
xor
ljmp
inc
add
and
lcall
lods
ljmp
add
mov
sub
add
dec
xchg
addl
outsl
add
call
sbb
add
addl
add
adc
call
add
sbb
cmp
sub
cwtl
pop
roll
mov
push
add
xchg
jo
fidivl
incl
mov
xor
lods
cwtl
pop
lods
clc
xchg
cltd
sub
add
push
aaa
mov
fmul
notl
pushl
ljmp
call
add
xchg
adc
pusha
add
aam
add
lods
fucomi
cwtl
or
xchg
divl
call
push
add
pop
in
cli
xchg
movsb
add
ljmp
cmpsl
add
add
pop
addl
mov
data16
ret
add
mov
cmp
incl
push
jmp
jmp
mov
add
ror
in
pop
arpl
jmp
mov
sbb
sub
incl
and
mov
movb
lret
insb
out
mov
xchg
dec
jo
call
cli
movsb
add
add
setp
sub
loope
jo
call
fdivs
cmp
pop
imul
pushl
add
imul
ljmp
add
mov
add
ja
dec
ja
add
add
insb
inc
add
cwtl
jge
adc
ljmp
mov
xchg
out
add
mov
iret
ja
add
mov
addl
shlb
push
lods
mov
jmp
lea
sbb
add
jno
incl
push
add
push
add
cmp
sbb
add
je
add
jae
jmp
add
add
cmp
mov
dec
jmp
addb
enter
cmp
decl
add
cmp
fwait
test
pop
fnstenv
jmp
add
out
fcomi
mov
add
dec
jno
jg
add
aad
add
inc
add
xchg
sub
add
cltd
mov
mov
movsl
add
pop
lcall
or
add
or
add
int
add
ss
jb
call
add
mov
push
add
add
add
decl
add
jmp
dec
nop
cld
int
add
pushl
add
addb
stos
ret
add
ljmp
push
xor
jmp
add
add
xchg
xchg
mov
pop
out
cmp
data16
test
add
sub
add
addb
inc
add
inc
add
incl
sahf
add
pushl
add
add
push
add
or
lea
mov
cmp
aaa
xor
add
cs
mov
in
mov
mov
ss
push
add
jbe
add
add
add
decl
dec
movsb
add
pop
mov
or
xor
cwtl
out
stc
or
add
add
ljmp
add
enter
mov
adc
call
add
xchg
or
lcall
ficoml
jmp
cmpsb
add
and
ljmp
outsl
call
movsb
add
je
roll
jno
decl
and
cmp
add
inc
add
sub
decl
ret
add
add
pop
sahf
push
and
cli
addb
fcomps
mov
icebp
adc
decl
pushf
iret
into
adc
mov
mov
cli
xor
call
add
or
decl
bound
jmp
jne
cli
pop
cmp
cmp
add
lcall
cmovbe
fsubrs
clc
push
rolb
roll
roll
add
dec
imul
jp
add
ljmp
add
inc
add
jmp
jmp
push
add
mov
xlat
xchg
cmpsl
add
add
cmp
movb
inc
add
in
push
add
cltd
and
decl
sub
shlb
ds
add
lcall
addb
aam
mov
imul
jl
add
add
pushf
adc
jmp
and
fldt
lea
les
insl
loop
jl
add
and
ljmp
in
gs
daa
add
adc
lcall
add
daa
add
mov
add
sahf
loopne
xor
mov
add
rolb
fisubs
add
jne
add
mov
jl
lcall
incl
add
inc
add
insl
jl
jb
call
add
xchg
sub
jp
add
movsb
add
aaa
mov
adc
call
xchg
addl
lods
pop
imul
lcall
sti
movb
add
inc
add
pop
add
add
jl
add
inc
add
lock
add
lret
cmpsb
add
bound
dec
push
add
push
arpl
call
add
xlat
add
ljmp
lret
mov
in
pop
add
mov
mov
add
cwtl
sar
sub
lods
icebp
and
incl
outsl
mov
movsl
add
popf
or
mov
add
stc
pop
lret
jbe
dec
sarl
inc
add
add
add
sti
test
clc
das
add
in
jl
popf
dec
or
fcoml
add
hlt
aad
add
ljmp
out
jo
decl
sbb
in
lds
test
ljmp
divl
dec
jecxz
pop
mov
add
push
cmp
add
imul
pop
and
push
pushf
adc
inc
add
inc
add
out
push
lcall
adc
inc
add
cld
addl
add
inc
add
mov
mov
in
out
ds
jae
ljmp
jae
push
pop
add
fsubrs
xchg
and
aas
cmp
add
add
sbb
or
inc
add
add
sbb
add
shld
daa
add
imul
fdivl
movl
xchg
pop
lret
adc
js
add
decl
int
lcall
decl
lsl
jmp
xor
ljmp
push
mov
add
jg
add
cmpsb
add
add
and
data16
add
xchg
pop
pop
pop
ret
add
pushf
push
pusha
add
dec
popf
addb
pop
out
aad
add
and
cmp
fimuls
add
add
leave
or
sub
add
sbb
pushl
add
push
imul
jp
add
add
sbb
int
stos
and
call
mov
add
es
add
decl
insb
xor
add
test
pop
inc
add
sbb
dec
cli
addb
repz
xlat
arpl
ljmp
das
cli
roll
fcmovne
pop
push
add
dec
cmc
xchg
mov
scas
lods
cmp
add
adc
call
add
movsb
add
or
popf
imul
lcall
xchg
sub
add
add
add
jmp
add
pop
jae
lcall
data16
jmp
sub
cmp
addl
cmp
add
jo
lcall
add
incl
add
jns
add
add
jecxz
inc
add
push
and
pushl
jno
jmp
inc
add
add
sbb
xchg
lods
in
inc
add
jno
in
inc
add
jle
add
icebp
pop
pushf
addl
add
add
lcall
dec
mov
add
int3
js
jmp
add
jnp
and
incl
add
addb
push
jg
aad
add
jno
jmp
add
or
imul
pop
aas
mov
mov
xchg
jle
dec
ljmp
in
mov
jae
pushl
addb
addb
sub
outsb
mov
cli
in
inc
add
xor
inc
add
decl
add
xor
je
sti
jns
add
faddp
add
add
jb
ljmp
cs
icebp
repnz
mov
rorb
int
add
lret
jne
add
movsl
add
lods
xchg
add
call
add
push
aaa
push
push
add
fld
add
fidivrs
into
icebp
into
sti
fidivl
jmp
add
fadds
dec
in
mov
pushl
add
repz
mov
push
lahf
popa
add
mov
add
fucomip
add
mov
add
loope
cmc
xchg
jne
xor
jns
add
cwtl
mov
add
or
xchg
test
mov
mov
adc
call
pushl
movb
inc
add
fdivp
xchg
in
xchg
push
sub
add
mov
std
popa
add
jns
add
out
push
add
xchg
xchg
pop
add
add
or
add
add
xchg
sti
cs
xchg
data16
add
adc
add
pushl
pushl
inc
add
and
js
or
scas
mov
addl
bound
jmp
add
add
add
test
mov
add
lea
push
add
xchg
ret
xchg
sub
add
sub
add
add
xchg
lods
pusha
add
dec
lods
aad
add
mov
sbb
mov
mov
add
inc
add
jl
cmc
inc
add
movb
adc
mov
shll
add
sub
sbb
mov
add
cmpsb
add
mov
push
add
ficomps
rcr
enter
imul
add
and
lcall
mov
add
addb
add
aaa
lahf
mov
add
inc
add
incl
and
ljmp
mov
push
in
cmp
les
mov
adc
lcall
and
incl
add
cs
test
sub
add
cmp
add
add
add
mov
lret
sub
cmp
lcall
jle
add
inc
add
adc
in
jp
jge
add
add
incl
add
mov
loop
scas
jae
lcall
data16
das
cmc
sub
add
push
ds
add
loop
sbb
decl
add
add
sbb
add
call
jnp
add
addb
pop
pushf
das
out
add
push
add
jmp
add
add
loope
mov
jns
pop
idiv
xchg
loop
addb
add
and
call
pop
popa
add
cs
aad
add
mov
insl
sbb
add
sub
cmp
das
in
jp
aas
call
add
test
inc
add
lcall
or
add
bound
decl
std
out
mov
add
in
fadd
add
mov
dec
adc
jmp
jmp
add
incl
in
bound
call
movsb
add
or
or
movb
sub
out
nop
sub
add
in
loop
mov
movsl
add
pushl
decl
and
jmp
sbb
data16
xlat
fmull
pop
and
dec
mov
hlt
das
insb
mov
out
ds
xchg
jle
test
or
cmpsl
add
xor
jmp
ficoml
add
loope
negb
mov
stos
xchg
adc
lcall
loop
lods
inc
add
cmpsl
add
push
lds
push
add
mov
or
add
lret
adc
cmp
add
dec
cmp
pusha
add
mov
roll
out
mov
inc
add
or
jp
test
xchg
cs
sub
add
push
add
inc
add
add
add
push
incb
mov
and
incl
aaa
jmp
int3
outsb
ja
add
add
add
cltd
pop
insl
into
ficoml
mov
addb
jo
pushl
fldcw
addl
mulb
jp
aam
add
cmpsb
add
add
add
rcr
mov
movb
add
add
mov
roll
add
push
add
or
scas
fistps
pop
pop
adc
sbb
cmp
loop
rolb
mov
test
data16
push
mov
fisttpl
mov
add
and
ljmp
pushl
push
add
and
fiaddl
jg
inc
add
sahf
outsl
mov
int
pop
add
mov
clc
cmp
fidivrs
cmpsb
add
mov
into
push
add
add
mov
jnp
dec
add
outsl
jo
mov
mov
adc
incl
mov
mov
mov
enter
add
push
add
test
lret
jl
ret
add
add
jge
fwait
addl
es
add
add
add
add
add
add
push
add
push
add
outsl
xchg
cmp
add
popf
jb
decl
add
aas
push
int3
adc
lcall
sahf
xchg
fbstp
cmp
in
mov
add
in
and
lcall
ja
add
or
das
mov
fsubr
mov
lret
mov
xor
call
add
mov
lret
adc
fildll
int
xchg
repnz
add
inc
add
les
mov
xchg
jno
ljmp
aaa
sbb
add
cld
ffree
add
add
add
ja
add
fwait
les
outsb
or
add
jno
pushl
add
cld
or
sbb
add
mov
add
ljmp
add
fisttpll
add
mov
lret
sahf
dec
mov
fists
call
xor
call
jmp
add
add
jle
mov
into
aaa
push
push
add
adc
call
fst
cmp
add
roll
add
add
sti
int
roll
addb
pop
mov
cwtl
xor
pop
add
add
addl
or
inc
add
add
jno
js
sub
add
stos
lret
pop
cld
lret
bound
lcall
jg
add
mov
add
add
inc
add
iret
jle
inc
add
inc
add
add
mov
stos
aad
cmp
add
xor
incl
add
stos
jge
add
mov
jp
add
sub
dec
pop
mov
add
adc
jmp
dec
pop
sub
push
add
add
inc
add
cmpsl
add
add
dec
lcall
lock
cmp
add
sub
xor
ljmp
add
repz
daa
add
add
out
dec
pop
mov
sti
out
xor
dec
jmp
out
pusha
add
pop
add
add
pop
dec
cmc
add
inc
add
add
bound
pushl
fucomi
repz
jge
xchg
mov
push
add
sub
jb
fdivr
fdiv
xchg
mov
xchg
iret
sub
rolb
pop
call
ljmp
push
loop
mov
cli
mov
incl
sbb
mov
stc
xor
add
in
je
frstor
add
add
lds
addb
xor
incl
add
lcall
mov
hlt
enter
sahf
mov
cld
push
add
inc
add
scas
add
loop
mov
jle
push
inc
add
sub
jbe
or
add
les
mov
add
and
add
mov
mov
xchg
das
mov
adc
cli
or
shlb
shrb
mov
push
mov
add
and
mov
pop
xor
call
jl
xor
incl
xor
call
lahf
daa
add
sub
add
or
dec
cmc
jo
lcall
add
inc
add
int3
mov
push
add
and
add
xchg
in
jecxz
add
lcall
sbb
out
js
aad
add
call
or
xor
clc
xlat
shlb
add
adc
decl
clc
adc
jmp
add
addb
cltd
fisttpl
adc
jbe
or
add
add
addb
add
push
hlt
xchg
mov
aad
jno
pushl
add
cmc
addb
add
mov
add
lcall
add
push
stc
jbe
add
insb
cmpsl
add
push
in
lret
push
add
mov
push
add
jecxz
mov
inc
add
fiaddl
jmp
enter
xchg
mov
nop
mov
add
or
test
out
lcall
pop
push
and
xor
decl
cmpsl
add
add
rep
movsl
add
add
movb
scas
xor
cmp
sub
jp
hlt
sti
dec
sbb
add
cmp
add
test
jp
add
call
inc
add
add
jge
movb
xchg
insl
je
add
ret
add
add
out
lcall
pushl
add
popa
add
mov
sarb
jge
fwait
lods
mov
add
xchg
xor
out
ja
xchg
std
and
incl
call
add
lea
add
pop
lcall
add
jae
incl
sub
addb
roll
add
pusha
add
pusha
add
lock
add
aas
xlat
xor
cmc
push
add
add
inc
add
add
decl
int
mov
add
jae
call
pop
and
jl
sbb
add
pushl
insb
xor
add
push
pop
insb
and
ljmp
add
add
insb
and
incl
movsb
add
decl
repz
or
mov
iret
push
sbb
mov
dec
addb
jo
call
repnz
or
cld
jbe
cltd
pop
in
xchg
sub
pop
add
imul
add
cmpsb
add
add
std
xchg
in
in
repnz
push
arpl
decl
addb
push
add
stos
sub
add
add
pop
icebp
sbb
add
inc
add
pop
scas
scas
xor
jmp
add
jle
add
add
sub
jecxz
or
test
dec
roll
add
lahf
mov
fisubs
add
xchg
int3
xchg
ljmp
rolb
add
mov
fsubr
cwtl
add
push
idivl
in
lock
sub
inc
add
dec
cmc
rcrl
adc
incl
cmpsb
add
aad
add
add
xor
ljmp
add
sub
add
xor
ljmp
cltd
test
stos
lock
add
add
add
call
cli
bound
in
rcll
movl
sbb
stos
jae
pushl
sti
push
add
ljmp
mov
add
jp
add
or
mov
clc
stc
ret
lss
mov
push
or
add
add
sub
ret
add
add
clc
jo
decl
dec
sub
mov
scas
cld
sbb
push
sahf
jl
and
ljmp
jp
add
shlb
cvtps2pd
add
repz
xchg
add
cld
lret
pushf
inc
add
pavgw
pop
and
jle
add
addl
mov
push
in
call
xor
gs
in
scas
mov
ljmp
incl
dec
nop
fnsave
add
fadds
add
cwtl
cmp
add
xchg
clc
dec
push
or
nop
or
add
fidivrs
add
xor
call
mov
add
add
pop
pop
int
pop
add
jmp
jmp
add
sbb
add
or
dec
xchg
jge
mov
cmc
stos
sahf
inc
add
outsb
mov
rolb
xchg
pop
add
enter
std
xlat
popf
loopne
adc
incl
push
add
addl
int3
dec
sbb
add
test
add
push
mov
add
jl
insb
sbb
and
add
pusha
add
in
mov
mov
push
lahf
test
add
add
add
fbstp
fcomp
xor
decl
data16
add
jae
mov
push
bound
decl
or
add
add
or
shll
xor
pushl
add
sahf
mov
add
call
jmp
add
loopne
daa
add
add
lock
add
std
cmp
loopne
fdivrs
push
add
setp
push
in
dec
movb
add
call
add
inc
add
rcl
jl
add
add
add
ljmp
incl
cli
outsb
out
pop
jle
add
add
jp
add
push
and
loope
rolb
aam
push
add
xor
pushl
add
decb
mov
js
jnp
sub
add
lret
mov
jl
inc
add
add
push
add
jb
lcall
sbb
imul
pop
jb
call
add
jl
xlat
or
faddl
aam
in
adc
add
add
mov
mov
std
push
add
repnz
lcall
sbb
aad
add
aaa
dec
addl
int
add
addb
add
mov
ret
add
add
jmp
add
imul
fwait
leave
push
and
ljmp
xchg
loop
cmpsl
add
and
add
add
sbb
add
scas
or
lret
rcr
push
jae
pushl
sti
dec
leave
inc
add
xchg
dec
addb
imul
add
decl
mov
add
dec
aam
loop
or
loope
ss
aaa
test
add
add
add
xchg
cmp
add
mov
mov
inc
add
add
jecxz
enter
add
mov
push
add
lahf
or
push
push
mov
js
add
add
add
cmp
addl
lcall
push
fnsave
fsubr
mov
ret
add
call
push
add
mov
add
das
cmpsl
add
pop
mov
fcoms
dec
add
fwait
lods
pop
xchg
mov
fistpll
out
push
in
or
or
test
out
repz
xchg
ret
add
fwait
test
jno
call
add
add
int3
outsb
shrl
mov
adc
decl
add
cmpsb
add
out
scas
rcrb
into
dec
jb
lcall
test
daa
add
jbe
popf
pop
out
ds
sub
int
imul
cmp
clc
fimuls
ret
jno
call
ljmp
fsubrs
movsl
add
jns
add
test
add
add
push
mov
cmp
xor
call
add
jno
ljmp
mov
mov
add
jl
test
and
push
les
mov
shll
ljmp
pop
xchg
mov
stc
loopne
jnp
fwait
xlat
paddusb
mov
sbb
repz
lcall
stos
arpl
ljmp
and
ljmp
push
add
xor
mov
push
add
pop
mov
add
enter
add
add
shr
fwait
or
inc
add
add
decl
int
loope
test
push
add
lahf
pop
fwait
mov
loope
aaa
icebp
call
add
add
mov
mov
sbb
in
jno
call
add
imul
decl
push
sub
add
cmp
insl
mov
dec
sub
add
xchg
mov
add
add
mov
mov
add
add
add
jmp
add
das
pop
inc
add
mov
lcall
ret
add
xor
jmp
add
int
xchg
sbb
add
cld
lods
lahf
push
sub
add
adc
or
and
jmp
lcall
xor
decl
out
and
incl
add
lret
jmp
lcall
xchg
scas
enter
movl
jle
add
scas
cwtl
outsl
fistps
and
incl
fmul
sbb
imul
add
repz
mov
add
dec
clc
xor
add
stc
jno
decl
mov
fdivs
pushl
mov
int3
nop
jmp
or
add
pop
mov
xchg
sti
test
add
inc
add
add
add
mov
add
sub
add
icebp
ss
fs
sarb
cmc
and
cmp
out
xchg
xchg
js
push
add
jge
add
xchg
pop
leave
sbb
push
je
fwait
sbb
add
jmp
fwait
test
mov
push
add
aad
mov
push
inc
add
movl
adc
decl
add
dec
not
xor
call
jnp
into
fisttpl
add
push
add
lods
sub
cwtl
in
out
jg
clc
sub
add
add
clc
je
mov
pop
cmp
dec
inc
add
add
rcr
movl
outsb
or
lcall
into
cmc
and
xor
and
sti
in
cmp
hlt
ljmp
scas
or
jge
inc
add
inc
add
xor
lcall
add
mov
addb
daa
add
add
add
fidivrs
push
xchg
cli
mov
add
in
jmp
add
repnz
add
cmc
mov
leave
mov
and
ljmp
mov
add
or
add
inc
add
pop
cld
sub
or
rolb
nop
xchg
push
shlb
outsb
fisubrs
add
ficoml
add
loope
test
add
incl
jg
cmp
cmp
or
inc
add
push
add
dec
xchg
pop
pushf
iret
outsl
and
scas
jmp
add
push
fnstcw
cld
dec
clc
inc
add
add
add
inc
add
xchg
inc
add
or
or
push
xchg
jg
add
in
pop
add
or
add
add
push
mov
jnp
add
mov
add
jno
call
jb
fnstenv
mov
inc
add
pop
inc
add
out
in
lods
jecxz
push
sbb
pop
faddp
add
add
movsb
add
dec
cld
stos
add
sub
jl
aaa
mov
add
mov
add
adc
mov
jb
incl
lcall
cmp
add
mov
xchg
enter
inc
add
mov
mov
push
sbb
addb
test
std
lcall
sub
lcall
jmp
pop
out
int
pop
jnp
add
add
cmp
in
fdivp
in
bound
jmp
add
add
jo
decl
push
cmp
test
call
mov
mov
add
mov
and
lcall
push
add
cmp
jne
or
add
jle
add
call
mov
add
add
jge
stc
cmp
add
push
inc
add
lock
or
add
repz
movb
pop
cli
sub
add
js
das
mov
imul
inc
add
test
add
xor
mov
mov
lret
jl
push
add
lahf
lahf
or
push
mov
lcall
outsb
xchg
dec
push
imul
insl
fwait
addl
lahf
popf
and
decl
add
dec
sbb
add
pop
ret
add
xlat
fisttpl
sub
cmpsb
add
add
out
bound
decl
test
jae
incl
insb
into
cli
sahf
icebp
inc
add
nop
addb
dec
add
call
add
testl
ljmp
cltd
bound
flds
add
mov
add
pop
arpl
ljmp
and
inc
add
in
les
xchg
lods
cmp
lods
mov
sbb
or
call
pushl
lcall
stos
mov
jns
add
ficoms
jmp
stc
xchg
in
sub
lcall
add
dec
or
add
pop
push
shrb
sub
cwtl
scas
mov
ficompl
add
fdivrl
cltd
mov
add
jecxz
mov
xor
lcall
aas
push
ljmp
mov
add
lcall
inc
add
loop
adc
jmp
add
push
add
cmc
dec
or
adc
pushl
add
mov
imul
decl
fisttpll
add
arpl
jl
add
add
mov
dec
sbb
mov
iret
xlat
sbb
jne
in
in
movsl
add
jno
ljmp
scas
or
or
push
mov
add
lcall
jns
in
enter
or
add
ss
add
add
add
cmp
xchg
ja
add
mov
add
dec
add
outsb
mov
add
sbb
insb
pusha
add
aam
ficoms
xor
lcall
sbb
incb
add
push
add
inc
add
jl
mov
scas
dec
bnd
sub
add
les
xchg
mov
pop
inc
add
shll
pushl
add
add
add
mov
pushl
aad
add
inc
add
pop
repz
sub
sti
out
push
add
inc
add
add
test
pop
daa
add
sahf
and
xor
ficoml
mov
ror
out
and
incl
add
js
xor
call
add
jg
stos
jle
add
adc
mov
add
stos
sbb
add
lods
jp
jge
add
js
jbe
outsl
aas
push
jnp
lahf
inc
add
mulb
add
cmp
xchg
sbb
add
fisubrs
mov
add
mov
lods
roll
inc
add
mov
inc
add
shlb
mov
and
ljmp
roll
fdivrl
add
lret
xchg
xchg
fldcw
add
push
xchg
mov
jmp
push
add
mov
push
cld
jecxz
lock
inc
add
ljmp
lock
add
iret
hlt
out
shrb
lds
xchg
pop
add
jns
add
sub
adc
incl
into
inc
add
outsl
ret
les
test
sbb
imul
ret
and
sbb
ss
pop
sub
inc
add
add
fdivrl
add
xchg
lds
mov
data16
jnp
movb
dec
es
arpl
incl
and
mov
add
push
add
pop
int
mov
pushf
mov
out
lahf
sbb
call
ljmp
jno
lcall
dec
mov
movb
add
fprem1
push
lret
mov
add
or
in
jge
mov
out
into
sbb
add
sub
mov
add
mov
pushf
pop
loope
sub
dec
push
in
mov
jmp
and
call
xor
xchg
add
jmp
add
fildl
add
push
add
mov
std
inc
add
add
xor
lcall
mov
or
insl
lret
aas
pop
ret
add
add
icebp
jnp
clc
dec
ret
add
push
and
out
arpl
ljmp
add
push
inc
add
js
push
add
ss
test
clc
pusha
add
imul
inc
add
in
mov
cmp
inc
add
sub
add
imul
sbb
repz
mov
ja
lcall
rolb
add
cltd
jne
pop
ljmp
cltd
pop
sbb
xchg
cmp
ss
sbb
pop
add
or
cmpsb
add
sbb
ljmp
add
xor
repnz
stos
nop
pop
sbb
ret
add
adc
lcall
std
loopne
add
test
add
sti
cmp
popa
add
rolb
sbb
outsb
lret
add
and
cmc
loope
addb
loopne
or
add
icebp
out
xor
aas
pop
add
add
sub
add
mov
jne
int3
sub
add
mov
xchg
jno
pushl
add
push
int
out
xchg
mov
cmp
and
jmp
or
pop
test
add
jae
mov
add
add
add
pop
adc
decl
add
add
aaa
mov
add
pop
mov
insb
push
xchg
push
add
cmp
inc
add
out
test
jnp
add
or
add
mov
call
inc
add
pusha
add
dec
imul
add
adc
lcall
push
pop
pop
mov
mov
lahf
ret
rclb
push
sub
sub
add
add
inc
add
mov
addb
daa
add
add
sub
xor
decl
add
add
les
xchg
cmp
add
lds
sbb
stc
iret
and
pushl
mov
add
mov
les
lahf
xor
incl
add
add
je
add
xchg
lds
loop
and
ljmp
jbe
xchg
clc
rol
add
ss
test
mov
mull
add
in
inc
add
push
push
adc
mov
inc
add
mov
rcl
and
ljmp
popf
lea
add
add
ljmp
enter
jmp
add
xchg
cmc
ljmp
mov
add
adc
xchg
cli
jns
mov
call
add
add
dec
movsl
add
out
and
call
push
lea
cmp
ret
lcall
add
cmp
dec
or
sbb
data16
pushl
loope
sub
js
iret
jl
sub
add
loopne
add
call
mov
add
ja
shrb
addl
inc
add
clc
pop
or
sub
add
call
ljmp
jecxz
outsb
jp
cmp
cmp
jle
add
fmull
fwait
mov
xor
ljmp
lret
add
jbe
mov
bound
jmp
add
and
jmp
push
add
xchg
popf
push
add
mov
adc
incl
add
mov
add
add
xor
jle
inc
add
push
add
jg
add
add
sbb
mov
cmp
lcall
mov
add
sbb
xchg
add
lcall
sub
add
cmp
add
ja
add
add
test
pusha
add
nop
lahf
lds
in
enter
icebp
pop
add
jmp
addb
push
add
push
int3
stos
daa
add
push
in
inc
add
lds
cltd
popa
add
inc
add
xchg
js
add
mov
push
fcmovne
mov
shr
xchg
cwtl
add
decl
add
jg
addl
xchg
aas
jmp
cmp
add
sub
movb
mov
pop
add
out
clc
mov
add
psubusb
jmp
pop
add
add
std
je
addl
dec
enter
popf
das
cltd
insb
sahf
sub
psrad
xchg
mov
add
jp
add
popa
add
aaa
sbb
add
push
add
movb
inc
add
jo
jmp
add
insb
cs
jge
ja
add
mov
dec
xchg
sbb
add
mov
add
lahf
xchg
mov
or
add
cmp
es
jge
addb
push
add
ja
shl
sub
addb
mov
jecxz
pushf
jb
mov
add
out
mov
outsl
pminsw
add
cmc
data16
pop
out
les
jg
lds
add
add
add
lea
lds
and
ljmp
in
sub
jne
add
add
lea
adc
decl
addb
add
loop
push
leave
xor
mov
add
sarl
and
add
adc
add
mov
cmp
das
push
add
push
or
add
add
ja
add
cmpsb
add
lods
ret
cmp
inc
add
outsl
daa
add
arpl
ljmp
fwait
nop
cmp
add
sub
mov
push
add
mov
add
mov
inc
add
add
add
inc
add
aas
or
jmp
adc
adc
dec
xor
jmp
sbb
add
inc
add
and
incl
decl
fsts
popf
push
inc
add
mov
adc
mov
aas
inc
add
lock
call
add
decl
in
sub
out
xchg
enter
add
movl
aam
pop
mov
jmp
add
addl
pushl
call
add
sub
ret
add
sbb
cmp
push
cltd
add
stos
pop
adc
pushl
add
add
inc
add
xchg
lods
mov
add
and
sbb
add
jmp
out
bound
decl
dec
mov
add
mov
cmp
movsb
add
add
push
rol
add
cs
xor
mov
pusha
add
push
add
jle
add
out
insl
in
pop
pop
movsl
add
in
pop
mov
jp
add
add
sbb
add
add
jbe
add
incl
add
push
add
ds
add
add
loope
sub
out
sub
add
fdivrl
add
add
sub
add
mov
add
stos
inc
add
add
sbb
or
mov
inc
add
hlt
jg
and
ljmp
adc
aam
fwait
jl
add
or
jmp
sbb
add
ljmp
scas
pop
jge
mov
push
je
push
push
repnz
jecxz
rolb
dec
pop
add
call
pop
pop
nop
push
mov
add
mov
add
cld
loope
jo
lcall
inc
add
dec
xchg
pop
jle
add
out
js
mov
jl
jb
js
pop
mov
add
add
add
add
addb
add
or
or
lahf
stos
push
add
test
enter
add
mov
add
or
xchg
cmp
leave
inc
add
sub
add
pushl
outsl
xor
in
lods
mov
scas
mov
or
scas
mov
and
or
lock
fldcw
xor
call
rolb
fwait
pushf
xchg
xor
decl
add
add
fmuls
call
popf
pop
jle
add
add
pushl
mov
inc
add
and
jmp
dec
movb
sub
push
add
mov
add
sub
push
add
and
dec
jbe
cmp
inc
add
call
call
jns
iret
in
adc
mov
mov
add
add
aam
ficompl
inc
add
aas
sub
add
push
xor
ljmp
sbb
clc
push
mov
pop
aad
and
mov
add
ja
add
or
fwait
mov
add
add
xor
aas
inc
add
ljmp
mov
daa
add
scas
push
inc
add
pop
in
cld
push
push
add
add
add
add
scas
xchg
fbld
shrl
add
mov
int3
in
lods
popa
add
ds
mov
add
mov
adc
incl
add
test
idiv
push
jmp
jp
sub
add
loop
ret
add
notl
add
cmpsl
add
ljmp
std
and
fdivrl
mov
xchg
rolb
xor
jmp
mov
lahf
cmp
mov
decl
nop
push
je
adc
decl
and
lcall
sbb
int3
dec
pop
mov
add
jbe
push
push
jg
add
jecxz
clc
sub
or
pushl
add
adc
jmp
add
add
add
xchg
faddl
add
jge
push
sbb
jge
out
mov
add
add
stc
in
pop
dec
mov
ljmp
insb
sbb
jle
xchg
rolb
test
add
popf
cmp
add
add
add
ljmp
ljmp
test
jp
mov
fcoms
add
mov
add
mov
add
sbb
outsb
sahf
jns
jbe
add
add
mov
add
addb
sbb
leave
out
mov
add
iret
outsb
je
pop
inc
add
ds
ret
add
or
in
loop
aad
repnz
dec
or
add
pusha
add
inc
add
mov
add
imul
fcmovne
inc
add
jp
mov
fnsave
add
cld
in
mov
sti
inc
add
cli
test
add
das
xchg
das
je
sub
inc
add
add
pop
decl
pop
cmpsb
add
rolb
push
sbb
dec
test
push
cmp
bound
ficomps
jmp
mov
jmp
pop
roll
push
in
xchg
xor
out
aas
and
incl
lcall
mov
add
shrl
ljmp
sbb
add
jmp
add
inc
add
mov
pushl
addl
in
cmp
inc
add
ret
add
pop
mov
mov
iret
mov
push
dec
mov
inc
add
cmp
add
das
scas
cli
cmp
outsl
in
jo
incl
rcl
lods
cs
pop
sub
add
call
xchg
and
decl
and
lcall
add
rolb
add
ljmp
add
push
ss
mov
lock
push
inc
add
push
sub
add
inc
add
movb
add
adc
cmp
add
add
lcall
or
dec
pop
sub
mov
or
add
xchg
adc
daa
add
adc
js
rcrl
outsl
mov
add
add
inc
add
mov
add
add
and
pushl
push
fdivrl
repz
adc
lock
add
jae
pushl
add
popa
add
push
and
decl
or
jns
dec
push
add
add
sahf
out
outsb
fcoms
pushf
cwtl
in
xlat
xor
call
push
push
add
pop
add
loop
cmp
data16
data16
fbstp
add
adc
jmp
add
mov
xor
jmp
fistl
add
add
popa
add
adc
jge
add
xchg
int
add
pushl
cs
sub
cmp
lret
sti
add
add
lods
test
push
add
cmp
rolb
add
and
decl
add
sbb
out
addl
add
enter
add
inc
add
mov
rcrb
add
popa
add
fcompl
jae
lcall
add
mov
add
add
add
inc
add
add
xchg
cmpsl
add
cmp
push
out
sub
adc
ljmp
fildl
jge
add
mov
ljmp
add
add
xlat
mov
imul
push
jp
pop
test
mov
in
add
pushl
push
les
nop
add
jmp
add
add
incl
ljmp
add
add
adc
call
xor
decl
pop
cmpsl
add
lods
sbb
mov
out
movb
add
or
movb
add
add
aaa
in
dec
test
incl
ds
mov
test
push
add
mov
sbb
movb
sub
xchg
ss
pop
add
add
decl
add
mov
dec
jae
push
jp
add
add
xchg
mov
push
sahf
mov
pushl
add
mov
add
add
in
lret
jp
add
add
decl
xlat
push
push
mov
aas
jb
decl
call
scas
push
add
addb
adc
lcall
lock
pop
mov
mov
aam
pop
in
xor
add
xchg
add
add
dec
ret
add
or
lock
movb
testl
push
add
scas
xchg
mov
add
add
add
add
iret
mov
jp
addb
add
mov
in
cmp
jns
add
iret
mov
add
push
add
lods
jmp
add
pushf
movsl
add
add
dec
jmp
stc
xchg
outsb
and
decl
jb
ljmp
add
mov
jp
add
aaa
adc
es
fiadds
testb
js
add
mov
adc
pushl
add
dec
sbb
add
scas
mov
add
or
push
test
add
add
ljmp
xchg
dec
cmp
inc
add
fidivl
jmp
aaa
jb
jg
xchg
inc
add
js
add
mov
sbb
jae
call
jmp
add
inc
add
mov
add
cwtl
mov
stc
addl
out
sub
push
sub
cltd
add
pop
adc
cmp
cmp
inc
add
clts
add
push
add
pushf
sub
sbb
sbb
add
add
call
incl
pop
pop
add
daa
add
insl
int3
add
decl
mov
xchg
jmp
sub
stos
pop
and
push
and
cmp
xlat
roll
add
dec
pop
test
push
jecxz
int
add
push
imul
add
inc
add
addl
push
add
jl
push
add
add
ja
add
jae
call
mov
cltd
imul
call
in
jnp
scas
addb
add
sub
inc
add
repnz
inc
add
xchg
aad
add
sbb
repnz
fnstsw
add
and
cli
addl
lcall
add
lcall
cmp
shrb
and
inc
add
add
add
ret
push
add
add
ss
ja
cmp
fs
push
add
outsl
add
jmp
add
mov
add
add
loop
xchg
scas
add
ljmp
jbe
add
push
cmc
repz
or
cmpsl
add
bound
incl
call
inc
add
push
add
adc
dec
dec
jbe
add
jbe
loop
lock
hlt
in
cmp
add
xor
jmp
hlt
in
int
add
in
sbb
add
dec
and
pushl
and
incl
sti
jmp
pushl
add
mul
add
jmp
add
or
mov
mov
add
add
add
jnp
pop
add
ljmp
add
xor
ljmp
add
mov
add
dec
movb
mov
test
mov
fstps
pop
pop
out
pop
and
call
scas
lret
lret
addb
cli
or
push
lret
ss
inc
add
cwtl
xchg
mov
jnp
add
add
cmp
incl
mov
add
add
decl
add
pop
dec
pop
ret
add
add
add
adc
ljmp
in
dec
roll
push
sub
imul
adc
pushl
and
add
lcall
in
fnstenv
ret
add
aas
outsb
popf
xor
lcall
incl
mov
add
push
add
fwait
imul
std
sub
add
add
addb
outsl
imul
in
enter
xlat
push
add
fsubrp
pop
add
add
fldcw
jge
ds
cmp
add
add
decl
and
push
fadd
add
add
lcall
add
lock
cwtl
cltd
aam
add
jne
sbb
decl
lahf
int
fidivrs
push
push
add
add
imul
mov
or
add
mov
aaa
out
sub
fbstp
add
outsl
adc
incl
lock
add
inc
add
cmp
fs
popa
add
cs
jo
lcall
cld
xchg
repnz
add
bound
mov
add
sub
fwait
inc
add
fsubs
jmp
pushl
lock
call
jmp
lcall
pushf
out
and
cs
test
add
adc
stos
or
js
add
leave
mov
and
dec
mov
jae
pushl
push
mov
fwait
and
jle
add
xor
lcall
add
xchg
sub
sbb
add
cmp
add
and
call
push
adc
jmp
dec
mov
add
into
cmpsb
add
mov
add
decl
lcall
addl
lret
ret
add
dec
std
lds
popf
fistpll
mov
pop
push
add
push
ds
add
push
add
or
add
out
add
pop
add
push
add
inc
add
enter
push
int3
jge
punpckhdq
add
lahf
repz
add
xor
incl
stc
push
jge
sub
js
aas
fstps
xlat
jb
decl
adc
ljmp
int3
test
lds
out
mov
in
data16
scas
outsl
sub
add
jp
loopne
dec
xor
call
add
jge
cmp
push
add
lret
jecxz
add
stc
xor
call
cmp
xchg
fwait
outsb
cmp
cld
lds
rolb
add
fdivl
add
mov
ret
bound
dec
aam
iret
sti
push
js
add
fldl
in
or
add
pop
sub
or
ret
icebp
repz
ret
lcall
rdpmc
add
rcrl
movsl
add
add
decl
and
mov
inc
add
xor
incl
sbb
cmc
adc
xchg
outsl
dec
and
cmp
ljmp
xchg
xchg
sbb
pushf
enter
lcall
lds
mov
test
dec
les
stc
bound
incl
add
push
pop
imul
decl
notb
add
lret
pop
jmp
ljmp
imul
sbb
scas
sahf
loopne
ljmp
inc
add
sub
jnp
adc
call
mov
xchg
rolb
add
call
and
decl
or
add
push
xor
decl
mov
add
lock
cmovp
xchg
outsl
aad
add
jb
decl
movb
dec
sti
les
jne
or
add
addb
imul
popa
add
nop
sahf
inc
add
pushl
call
add
add
add
int3
mov
cmc
fs
pusha
add
pop
push
add
push
add
enter
add
push
add
add
mov
leave
mov
int
add
add
cwtl
mov
out
push
in
jbe
add
add
add
or
add
out
out
mov
fimull
mov
add
je
negl
add
adc
or
fs
dec
lock
inc
add
add
pushl
imul
add
aaa
lods
dec
cmp
xchg
add
xor
ljmp
jnp
add
cmp
push
add
icebp
shll
add
aaa
inc
add
arpl
incl
mov
adc
fadd
add
daa
add
add
xor
stos
ds
push
add
jae
push
ret
add
mov
pop
jbe
pop
fcompl
push
dec
push
add
data16
add
add
add
add
inc
add
fistpl
fwait
jns
addb
add
jg
add
mov
sarb
sbb
mov
inc
add
dec
loopne
out
das
inc
add
push
or
add
xchg
popf
push
cld
test
adc
ljmp
loop
hlt
je
call
xchg
mov
add
xchg
das
push
int3
inc
add
mov
in
mov
add
jne
and
repz
push
mov
add
add
int
add
mov
push
add
popf
xchg
add
ljmp
dec
push
fs
rolb
push
add
mov
add
lods
jecxz
mov
or
pushl
add
js
add
call
jmp
add
add
arpl
mov
add
in
popf
xor
add
das
pop
call
or
adc
call
mov
dec
xchg
out
cmp
add
mov
sbb
inc
add
lcall
xchg
ret
add
jmp
or
add
ja
add
inc
add
add
out
lock
hlt
mov
neg
inc
add
add
add
jg
add
insb
or
sub
ds
add
add
add
stc
movl
mov
add
hlt
pop
xchg
pop
jp
add
add
ljmp
and
push
imul
addb
add
bnd
call
add
repnz
test
jmp
idivb
jecxz
sahf
insb
ljmp
ret
add
add
mov
add
and
cwtl
enter
pop
in
xchg
jle
add
dec
xchg
add
mov
dec
fsub
add
in
pop
xor
lock
cs
je
xor
jmp
add
inc
add
push
add
add
adc
scas
bound
jmp
add
imul
cltd
jge
xor
add
repnz
mov
add
inc
add
leave
adc
cmp
in
popa
add
and
lcall
out
cwtl
cmp
add
add
pop
pushf
inc
add
fwait
adc
pushl
push
sub
add
mov
push
add
sub
add
std
mov
add
cwtl
pop
add
out
addl
add
add
pushl
lret
xor
push
mov
fs
enter
add
mov
add
push
push
roll
add
jg
dec
jo
call
incl
incl
pushl
add
jno
clc
test
cwtl
xchg
push
xchg
lret
add
xchg
lcall
ss
push
loop
pop
es
add
jmp
add
add
xor
push
push
add
mov
lds
dec
inc
add
or
jl
xchg
xchg
movsb
add
mov
int
mov
add
fsubrl
add
xchg
out
add
les
fmulp
mov
out
pusha
add
xor
pop
xor
ljmp
leave
fimuls
push
dec
jmp
inc
add
pop
or
add
idivl
roll
cltd
leave
test
fidivrs
stc
pop
dec
leave
xor
push
add
das
jbe
add
mov
mov
add
jg
add
inc
add
iret
fucomi
sbb
add
or
add
add
sbb
mov
xchg
aad
inc
add
add
adc
scas
das
cmp
add
in
add
inc
add
xor
push
push
add
add
add
push
push
cmp
ficoms
decl
rorb
data16
add
add
fxam
add
icebp
sbb
pop
movsl
add
mov
test
lret
loope
lret
push
in
pop
scas
lcall
add
add
sub
add
pop
add
add
loope
fadds
pop
jmp
stc
mov
ds
adc
add
pop
rclb
outsl
std
lds
add
add
add
add
push
add
jns
add
stc
in
adc
jmp
addl
add
and
inc
add
push
add
lahf
les
sbb
sub
add
dec
sbb
push
add
icebp
mov
mov
add
cmp
insl
dec
pushf
dec
dec
mov
dec
cmc
rolb
js
test
popf
lret
add
aam
or
cltd
inc
add
sub
imul
dec
testl
pop
cmp
jmp
bound
decl
add
and
lcall
sub
inc
add
sub
lods
add
add
ljmp
movl
or
addb
add
add
xchg
inc
add
inc
add
push
mov
mov
adc
mov
je
inc
add
ja
add
lods
or
jae
dec
pop
cmpsb
add
add
iret
into
dec
das
mov
decl
mov
jp
arpl
ljmp
add
cwtl
sub
pop
mov
sub
add
outsl
fstpt
and
pushl
incl
add
mov
add
add
and
mov
sub
jne
mov
add
divb
mov
in
fisubrs
mov
sub
addb
dec
add
fdivr
mov
jo
lcall
test
movb
inc
add
dec
sbb
fsubl
push
cmp
test
cwtl
popa
add
pop
int3
out
inc
add
dec
fdivl
add
jp
add
add
iret
popa
add
adc
jno
out
or
mov
mov
nop
mov
neg
lcall
push
hlt
aam
ret
testl
add
xor
add
mov
add
ds
cmp
mov
add
add
and
loope
cmp
insl
fcmovbe
bound
push
lods
test
push
add
aas
mov
mov
add
add
add
add
push
cli
sbb
add
xchg
cmp
push
add
xor
ljmp
add
add
jb
incl
adc
add
popa
add
mov
add
cmp
mov
movl
incl
roll
jne
add
add
inc
add
pusha
add
mov
call
add
pop
or
cld
sbb
decl
pusha
add
testl
xor
incl
xchg
leave
out
mov
add
addb
jl
add
add
ja
adc
add
in
adc
add
call
sub
mov
movl
testl
lret
aas
jo
dec
add
pushl
call
add
insb
bound
jmp
add
or
add
inc
add
cltd
dec
fldenv
mov
mov
add
add
fistpll
add
pop
data16
add
add
les
scas
addb
add
roll
add
add
jo
pushl
inc
add
jae
call
add
test
add
loop
pop
dec
fistl
ljmp
test
add
leave
int
add
insl
hlt
and
mov
add
filds
add
stc
sarb
pop
jnp
mov
lcall
add
decl
dec
push
add
inc
add
adc
lcall
roll
add
adc
in
out
xchg
out
push
cmc
or
xchg
out
jne
add
fstp
jns
movsl
add
add
repnz
jmp
incl
cmc
fnstsw
mov
cwtl
rorb
add
iret
push
add
stc
mov
add
es
outsl
mov
sbb
xor
pop
pop
out
call
cmpsl
add
call
cwtl
insl
mov
xchg
and
decl
xchg
faddl
xor
decl
cld
xchg
add
sbb
icebp
repz
lcall
js
add
cmpsl
add
inc
add
lcall
add
decl
popf
loopne
push
add
mov
push
add
mov
add
add
stos
sub
inc
add
and
call
and
incl
add
scas
rolb
add
loope
fnstenv
add
add
cmp
decl
add
sbb
add
add
pushl
inc
add
xor
ljmp
add
int
xor
incl
add
lcall
adc
inc
add
setp
add
les
jne
mov
add
test
pop
mov
into
jns
xchg
sbb
pop
add
cltd
xchg
les
sub
jp
aad
add
or
mov
sub
push
repz
fcmovu
mov
adc
xchg
jmp
aad
mov
sarl
mov
bound
in
lds
int
mov
mov
push
add
push
sbb
add
pop
ret
movb
cmp
out
sbb
add
add
mov
mov
ljmp
inc
add
push
movb
fidivrl
jns
add
add
add
fidivrs
mov
jo
dec
loopne
xchg
movsl
add
cmp
mov
inc
add
or
ds
leave
movsb
add
cmp
movsb
add
add
addb
pop
sub
add
movsb
add
add
inc
add
add
ljmp
or
xchg
push
pop
push
pusha
add
stos
stc
cmp
out
mov
adc
jmp
fstpl
test
and
add
cld
testl
mov
add
xchg
pop
ss
mov
out
mov
movl
mov
in
xchg
lock
fcmove
lock
call
adc
inc
add
ds
mov
add
add
imul
pop
add
add
ljmp
in
iret
stos
stos
adc
mov
and
insb
aad
add
test
lcall
cs
add
jmp
lcall
add
add
les
test
add
add
jecxz
jne
add
js
push
stc
dec
dec
fdivrl
pushl
add
or
bound
lcall
out
fwait
adc
in
xor
lcall
mov
jmp
jmp
add
lret
out
push
add
or
aad
add
add
push
add
adc
push
push
lea
je
in
pop
xchg
addb
add
add
pop
and
lcall
mov
inc
add
hlt
loope
mov
add
or
add
lret
jbe
popf
mov
dec
adc
lcall
addl
add
add
cmpsl
add
cmc
and
call
push
mov
sbb
hlt
insb
cmp
out
jae
jp
fdivs
add
cli
sbb
movb
mov
add
dec
addb
mov
inc
add
push
sub
add
ret
add
movsl
add
call
xor
lcall
into
insb
push
mov
jo
mov
daa
add
add
add
or
add
add
ret
in
xchg
stos
pop
add
jmp
ret
mov
add
cwtl
test
sbb
add
mov
daa
add
add
push
add
adc
push
jge
add
add
and
pushl
loopne
xor
jmp
add
mov
testb
call
add
jp
nop
arpl
cmp
aam
add
shrb
testl
call
cmp
or
and
add
cmp
inc
add
push
add
je
jbe
add
xchg
add
jge
add
add
jg
add
mulb
add
dec
sub
add
add
aam
add
adc
call
nop
repnz
pushf
popa
add
push
pop
ret
add
inc
add
dec
mov
cmpsl
add
cmpsb
add
ljmp
cmp
add
xchg
addb
dec
stc
lock
dec
scas
out
out
outsb
adc
push
adc
pushl
add
add
add
push
add
cmp
dec
xchg
xor
cli
addb
add
add
loope
dec
fbstp
add
jne
movsl
add
mov
add
pushl
mov
add
jmp
add
in
popf
dec
add
mov
bound
dec
ret
add
jge
mov
mov
add
jmp
add
lods
mov
testl
pusha
add
dec
jmp
add
incl
mov
test
cmp
add
inc
add
and
add
dec
arpl
ljmp
pushl
cmc
bnd
call
adc
lcall
shll
add
fisubl
pop
add
sbb
or
fcomps
movsl
add
pop
cmp
addl
add
in
pop
int3
ja
add
dec
lret
loop
add
inc
add
mov
decl
insb
out
fcompl
movsl
add
add
arpl
call
call
mov
add
add
jge
pushf
outsl
clc
adc
inc
add
add
addl
imul
psubd
pop
add
out
xchg
rolb
inc
add
in
mov
aad
addl
sub
xchg
repz
pop
add
add
push
sbb
fldl
inc
add
dec
dec
mov
incl
lock
xchg
fwait
jns
jae
call
jns
push
mov
mov
mov
xchg
iret
sbb
imulb
push
fcmovnbe
lods
idivb
add
pop
mov
mov
add
cmp
movl
test
dec
into
ffreep
add
cmp
and
lcall
xor
cmp
mov
jmp
add
dec
dec
pop
mov
add
fdivp
fisttpl
xchg
loopne
jnp
mov
inc
add
add
xlat
jecxz
stc
sub
int
int
pop
pop
push
add
xor
call
cmpsl
add
add
add
scas
lea
add
insl
insl
mov
add
fisubrl
xor
roll
add
sbb
mov
mov
daa
add
pop
ret
stos
int3
push
mov
decl
into
sub
mov
mov
add
lcall
add
push
mov
jp
add
or
add
add
imul
ret
add
mov
in
sbb
add
add
jg
rcl
ja
inc
add
lds
int
lds
insl
inc
add
mov
add
mov
push
and
inc
add
adc
loope
ret
add
and
decl
add
add
add
call
add
scas
push
or
add
xor
decl
in
je
add
jecxz
jmp
add
rcl
inc
add
push
loop
daa
add
jbe
cmp
sub
fsin
scas
idiv
arpl
ljmp
jge
add
lret
jae
jnp
add
add
jmp
add
rorl
shll
add
stc
jecxz
mov
shl
add
add
rcl
les
push
test
pop
add
cmp
mov
int
add
xor
call
add
add
jle
loop
push
sub
add
inc
add
js
addb
pop
movsl
add
add
outsl
insl
data16
add
pop
add
inc
add
out
lret
and
call
add
pushl
add
add
lret
data16
add
add
rolb
and
jmp
add
add
mov
mov
insb
push
or
dec
or
adc
pushl
lcall
aam
add
mov
xchg
in
lcall
gs
ss
add
popf
cmp
xchg
imul
jno
jge
mov
add
push
add
pushf
mov
mov
add
xchg
in
in
sarl
mov
xchg
aam
add
add
cmc
sbb
add
sar
pop
add
dec
imul
jmp
add
pushl
add
loop
fisttpll
xchg
mulps
mov
popa
add
mov
pushf
divl
add
mov
in
adc
mov
inc
add
add
ret
add
sbb
adc
decl
lds
pop
or
pop
aas
or
int
addb
movl
xor
incl
add
insb
out
ds
xchg
dec
adc
jmp
sbb
cltd
popf
cmp
add
mov
add
add
jne
add
push
pop
jg
out
imul
cmp
lret
inc
add
adc
mov
sbb
lea
add
add
push
shl
add
add
stos
notb
add
add
dec
pop
mov
repnz
add
add
add
inc
add
inc
add
and
add
and
ljmp
add
decl
lds
test
pop
mov
dec
pushf
dec
xchg
mov
incl
cmp
les
or
movsl
add
add
test
mov
add
outsl
xor
push
add
sbb
or
xchg
and
call
sbb
push
add
pushl
add
pop
inc
add
mov
add
inc
add
add
mov
xor
clc
fcmovne
pusha
add
add
add
push
mov
mov
rolb
add
aam
pop
add
mov
pop
fnstenv
add
push
daa
add
fs
sti
xor
jmp
xchg
popf
cmc
xor
add
add
add
nopl
pushl
out
sub
add
nop
sub
dec
daa
add
and
cmp
mov
add
jmp
xchg
scas
add
add
aad
movsb
add
add
add
add
adc
xor
jmp
add
out
in
pop
pop
ds
add
inc
add
xor
fdivs
data16
enter
mov
stos
cmp
enter
jge
pusha
add
lods
popf
mov
add
pushl
add
jae
xor
dec
mov
add
add
call
int3
adc
add
test
inc
add
mov
add
call
scas
lret
decl
sub
xor
js
sbb
mov
add
lods
mov
add
xor
lcall
sbb
pop
ljmp
dec
inc
add
xchg
add
lcall
aaa
or
add
ljmp
or
addb
lret
std
mov
fdiv
roll
mov
add
add
add
loop
or
sub
call
decl
stos
mov
fstpt
ds
add
add
sbb
lds
inc
add
pop
mov
cmp
add
inc
add
cmc
xor
push
insl
mov
inc
add
mov
add
dec
leave
daa
add
dec
repnz
mov
push
add
aam
test
jge
mov
xlat
add
call
add
in
mov
mov
jne
lds
jne
scas
mov
inc
add
xor
call
add
pushf
mov
sbb
inc
add
stos
or
pop
cmp
dec
dec
and
jmp
add
mov
push
add
and
ss
fdivrl
mov
loop
ljmp
decl
rorb
outsl
mov
cmpsb
add
jmp
add
dec
xchg
push
cmp
pop
cld
fmull
aaa
rolb
add
fdivs
push
add
pop
xor
sbb
xchg
add
call
pushl
incl
add
inc
add
imul
lret
mov
inc
add
loop
test
enter
jmp
or
add
mov
ljmp
xor
cs
sahf
enter
add
cmpsb
add
or
inc
add
lods
ret
add
sub
add
sahf
dec
inc
add
out
cmp
or
jl
pop
fidivl
sahf
in
or
arpl
fldt
or
call
dec
int
add
sub
pop
movb
enter
jns
add
movb
lods
lret
cmp
add
jnp
push
jae
aas
pop
add
movl
add
add
mov
bound
ljmp
pop
or
add
ret
pop
add
push
cmp
xor
pushl
js
mov
mov
das
insl
and
call
filds
dec
xor
incl
add
dec
dec
std
ret
add
xor
fsubr
xor
decl
lods
inc
add
mov
call
bound
incl
cmp
add
out
call
jle
les
pop
pushf
sub
fisubs
incl
add
xchg
data16
cmpsb
add
cmp
mov
pop
inc
add
jl
add
lret
js
call
lcall
sbb
test
out
repnz
mov
jge
push
add
addr16
push
inc
add
xor
decl
xchg
mov
jo
pushl
call
insl
adc
pushl
add
pop
xchg
fisttpl
add
jmp
mov
insb
incl
pop
add
ljmp
push
sub
push
cltd
add
add
mov
add
sub
sub
dec
add
pusha
add
lea
xor
ljmp
js
add
repz
push
add
hlt
jg
adc
jmp
sbb
pop
pop
add
movb
jmp
add
cmpsb
add
and
roll
add
add
pushl
add
push
rcrb
mov
add
sub
movl
sbb
stos
jne
add
stc
movsl
add
add
add
jl
aam
cmp
add
pushl
add
mov
push
add
pop
or
add
add
decl
add
and
lcall
sti
loope
addb
jg
int
mull
pop
push
mov
add
push
pop
pushf
push
mov
add
mov
add
jbe
cld
xchg
mov
add
xor
incl
pop
repnz
add
sbb
add
stos
icebp
mov
add
jmp
js
add
popf
pop
dec
pop
loope
js
add
je
jle
xor
decl
lock
cmp
movsb
add
xor
fimull
popa
add
sti
sub
lods
mov
sub
cld
cmp
mov
push
add
inc
add
rolb
pop
inc
add
pushl
movb
add
add
add
sbb
add
outsb
dec
scas
movsb
add
add
call
iret
dec
outsb
addl
das
push
or
mov
add
add
std
dec
lea
pop
jnp
add
cmpsb
add
or
add
inc
add
pop
ds
add
lahf
test
add
ss
add
add
add
xor
jmp
add
and
flds
into
pop
jbe
sbb
inc
add
stc
movsb
add
cmp
add
mov
add
xchg
sbb
outsb
loopne
mov
aad
add
pop
add
addl
push
add
jbe
add
cmp
mov
outsl
fwait
mov
cmp
mov
add
add
cmp
xchg
popf
sbb
mov
xor
decl
add
lret
in
jo
jmp
add
test
test
adc
sbb
pop
cld
adc
jmp
add
add
in
or
add
jmp
iret
add
lcall
pop
jb
incl
pop
mul
add
push
cli
loopne
loop
push
add
xor
cmp
and
call
insb
scas
mov
cli
inc
add
sbb
cwtl
cltd
ljmp
push
add
pop
cltd
jge
add
int3
out
cmpsb
add
or
xor
incl
inc
add
mov
add
mov
add
dec
push
add
fwait
add
add
push
sbb
push
das
out
inc
add
add
add
addb
cmp
add
and
lcall
movb
push
add
addl
mov
movl
xchg
mov
pushl
add
aad
and
aad
mov
clc
lcall
mulps
jmp
test
repz
call
mov
and
jmp
jmp
mov
push
pop
mov
shrd
iret
inc
add
pop
add
addl
pand
imul
add
mov
cmpsb
add
pop
fwait
ret
dec
in
int3
imul
pop
push
mov
add
jnp
add
and
iret
mov
enter
add
jmp
ljmp
rolb
mov
add
xor
lcall
add
jge
push
push
add
sub
jmp
add
and
add
ret
addb
insl
js
add
jmp
add
or
ljmp
movl
int
sub
add
test
xchg
xchg
les
dec
mov
inc
add
add
sub
add
add
add
mov
inc
add
sbb
enter
stc
adc
call
pop
lahf
iret
mov
add
cmc
jmp
add
jge
add
jmp
add
add
fwait
insl
cld
mov
add
sbb
add
add
cmp
jnp
add
incl
decl
add
nop
fisubl
pushl
call
sub
call
add
into
jns
add
aad
lods
jo
jmp
add
fstl
add
inc
add
fnstcw
mov
add
and
call
add
call
add
mov
add
add
cmc
xor
pushl
cmp
or
je
add
push
cli
xor
decl
mov
add
push
add
cmp
mov
add
outsl
test
addl
lods
stc
dec
xlat
push
add
mov
add
sbb
cmpsb
add
add
pop
xchg
mov
add
mov
push
add
xor
xlat
jecxz
cwtl
push
aam
or
add
add
fs
add
ljmp
imul
jg
addl
add
fucomip
adc
decl
jl
add
addb
lahf
mov
icebp
leave
fldcw
lods
sbb
loopne
rolb
mov
add
sbb
add
add
add
jnp
inc
add
pop
adc
mov
jns,pn
jb
call
add
out
inc
add
xlat
jae
inc
add
sbb
int
add
dec
add
pop
mov
outsb
cmp
or
add
stc
sbb
xor
call
lods
stos
cli
aad
icebp
mov
call
sub
pop
push
add
cmp
adc
call
add
call
jg
add
lods
or
stos
dec
dec
lret
xor
push
out
movsb
add
xchg
cmp
icebp
cli
out
in
bound
pushl
mov
xor
lahf
rcll
aas
cmp
xlat
xchg
mov
jns
add
mov
mov
or
jnp
add
push
out
mov
mov
add
add
push
negb
add
fcomps
jo
ljmp
pushf
pop
push
sbb
xchg
sub
out
inc
add
mov
add
add
push
in
or
xor
incl
add
add
cmp
incl
ljmp
fwait
out
jge
add
xor
pushl
add
add
loope
jecxz
push
push
add
rolb
cmc
xchg
cmp
test
pop
test
cmpsl
add
jnp
inc
add
bound
ljmp
dec
xchg
and
inc
add
test
mov
pushl
or
or
mov
add
es
add
add
pop
insb
inc
add
aam
addl
add
xchg
aas
shlb
add
jmp
add
add
bound
inc
add
and
call
jmp
push
dec
lret
inc
add
loopne
push
add
push
mov
jecxz
mov
add
mov
and
cmp
rolb
in
mov
add
inc
add
aad
add
sbb
mov
les
std
jo
call
fldenv
lcall
jb
push
pop
mov
jno
ljmp
dec
mov
inc
add
in
mov
mov
add
ss
inc
add
rolb
add
lcall
iret
ja
les
jmp
add
leave
adc
jmp
add
mov
add
add
notl
mov
add
mov
fdivl
mov
sub
sbb
cmp
add
cmpsb
add
push
add
mov
outsb
addl
fimuls
out
sbb
mulb
add
fdivs
jbe
pop
pushf
mov
add
push
add
sub
add
loop
sarb
dec
sbb
popa
add
adc
pushl
ljmp
addl
mov
outsb
pop
xlat
sub
add
dec
jne
pop
pop
sub
ja
icebp
jg
jbe
mov
iret
sbb
in
inc
add
cmp
cmpsl
add
sub
or
cmpsb
add
add
repnz
add
xchg
pop
mov
movl
outsb
lret
pop
mov
pushl
dec
movb
ret
iret
jge
push
icebp
dec
push
add
ljmp
movb
sub
incl
decl
clc
decl
arpl
call
call
nop
sbb
xchg
xor
incl
sbb
add
and
in
lret
pushl
add
add
insb
data16
mov
xchg
leave
dec
popa
add
enter
add
or
add
fidivrs
arpl
pushl
ljmp
add
loop
sbb
xchg
adc
jmp
add
sbb
call
ljmp
imul
xchg
popf
popa
add
je
pop
mov
add
jne
insb
out
xchg
adc
cmp
add
pop
add
push
pop
movsb
add
add
call
jl
cmpsl
add
jmp
mov
and
sub
sti
out
inc
add
int
addl
jbe
pusha
add
or
add
fildll
xchg
cltd
repz
push
ret
push
add
xor
ds
sbb
decl
or
lea
mov
or
pushl
cmp
pushl
fistpl
sub
aas
push
add
test
add
add
fistpl
add
push
add
lea
in
stc
dec
leave
push
addl
inc
add
das
js
add
lds
inc
add
add
add
add
iret
or
mov
add
ja
notb
add
add
iret
xor
call
add
lcall
pop
add
addl
out
xlat
xchg
xor
jmp
cmp
in
mov
add
lcall
call
add
out
lock
mov
call
scas
movsl
add
mov
les
cltd
xor
dec
int
emms
sarb
jg
cmp
outsb
pop
push
add
add
add
ret
add
mov
add
aaa
test
xor
call
dec
leave
out
enter
jecxz
xchg
mov
cltd
pop
rclb
lock
hlt
inc
add
addl
jno
jmp
jb
lcall
cmp
add
or
push
add
jecxz
push
jge
add
adc
call
sti
inc
add
xlat
xor
dec
in
dec
inc
add
test
ret
add
push
add
sbb
inc
add
add
push
dec
aas
cmp
add
add
add
pushl
add
bound
lcall
ffree
add
add
pop
movb
dec
addl
cmpsb
add
add
shll
lcall
dec
fs
add
and
ljmp
jbe
add
test
scas
pop
scas
mov
shlb
mov
pop
add
fnstsw
rcl
inc
add
fistl
jnp
ja
enter
jb
clc
jmp
loope
add
rol
add
cli
mov
add
add
dec
inc
add
pop
inc
add
add
xor
incl
cs
add
mov
shrl
push
jne
xchg
cli
cli
cmp
add
fldcw
jae
xchg
add
decl
add
push
add
movb
popf
pop
cmc
mov
or
pop
loope
jno
inc
add
add
hlt
mov
out
and
call
dec
add
ljmp
add
inc
add
sbb
push
add
lds
add
loopne
and
movl
in
add
lcall
in
mov
and
add
rclb
add
fidivl
add
sub
add
hlt
fdiv
stc
lcall
jns
stc
jb
inc
add
add
stos
pop
data16
inc
add
pushf
cmp
icebp
mov
dec
ds
add
pusha
add
and
cmp
int
add
outsb
pop
pop
ja
xchg
loop
push
xor
decl
shl
dec
fnsave
call
add
add
data16
add
inc
add
add
pop
insb
cmp
and
cwtl
cmp
cmp
add
mov
add
adc
lcall
add
adc
jnp
mov
and
decl
lcall
pop
out
pushf
test
ret
push
adc
push
icebp
insb
mov
sub
pop
adc
incl
add
imul
add
inc
add
push
add
mov
lcall
mov
add
pushl
add
xchg
lcall
int3
inc
add
push
add
inc
add
int3
xor
incl
decl
add
mov
test
test
xchg
cld
xchg
dec
mov
daa
add
call
or
ljmp
push
add
pop
cmc
scas
iret
outsl
sbb
xchg
add
jmp
jmp
rcrb
add
pop
cwtl
cmp
nop
out
cmpsl
add
dec
rolb
call
push
add
mov
int
addb
or
add
jns
add
fstpl
nop
repz
add
pusha
add
sbb
out
rolb
push
fcmovne
iret
xlat
rclb
sbb
incl
movb
dec
cmp
sahf
cli
sub
jg
call
loop
aam
dec
les
into
push
or
mov
dec
lea
sub
pushf
in
scas
add
lcall
rcrl
gs
cmp
add
fistl
add
addb
cwtl
jnp
xlat
mov
add
add
call
sub
inc
add
imul
xchg
in
fmul
je
cmp
add
sbb
jle
dec
inc
add
add
inc
add
add
ds
add
add
cli
pop
popa
add
adc
call
xchg
or
fiadds
ljmp
mov
jmp
add
add
pusha
add
lahf
dec
decb
call
outsl
stc
jnp
pop
add
add
inc
add
fidivs
lcall
push
add
push
adc
push
fsub
add
jmp
push
outsl
mov
mov
ficompl
add
add
aaa
scas
bound
incl
pop
mov
in
add
inc
add
jno
call
mov
lods
in
imul
mov
add
add
and
loope
cld
lock
xor
ljmp
xchg
mov
in
bound
decl
add
or
daa
add
mov
cmp
inc
add
xchg
mov
add
enter
pop
pop
pusha
add
mov
and
mov
add
or
dec
add
add
int3
xchg
xchg
xchg
test
add
add
push
les
lret
cld
leave
fistl
xchg
jecxz
pop
push
add
fcoms
sti
dec
popa
add
loopne
dec
sbb
add
ja
add
add
mov
pushf
loop
cli
clc
inc
add
out
addb
fidivrl
add
data16
xchg
xor
call
add
push
mov
add
sti
repz
add
dec
mov
mov
pop
cmp
pop
xchg
pop
or
xchg
bound
ljmp
or
add
jecxz
push
add
movl
lcall
add
add
movsl
add
adc
add
add
addb
sub
add
inc
add
jns
mov
add
jp
add
add
mov
add
lret
in
scas
popf
mov
je
imul
je
pusha
add
ret
add
outsb
data16
xchg
sti
psllw
std
sub
int3
lahf
xor
lcall
imul
mov
add
fisttps
lods
sti
cmp
loope
adc
add
pop
ret
add
fisubs
lcall
push
and
pushl
push
cmp
inc
add
dec
addl
or
dec
addl
pop
paddusw
add
jmp
bound
cld
shrl
sbb
mov
add
decl
add
aad
add
filds
jnp
movsb
add
lea
pop
cmp
add
jb
ljmp
push
or
add
sub
test
add
ret
stos
xor
add
out
cmc
pusha
add
popa
add
add
cmp
out
pusha
add
hlt
inc
add
lcall
aaa
and
call
add
movsb
add
insl
iret
adc
ljmp
addl
push
add
icebp
add
jnp
add
fisubs
int
mov
mov
sub
xchg
call
mov
and
fucomp
sub
xchg
xor
mov
movsl
add
add
cli
jmp
stc
inc
add
mov
mov
cmp
dec
cmp
jge
add
addl
add
rcrl
mov
add
jp
or
inc
add
xor
xor
inc
add
add
pushl
nop
add
mov
cmovbe
add
add
add
cmp
add
inc
add
repz
int3
or
ljmp
in
clc
add
call
add
inc
add
push
jl
add
jmp
inc
add
jo
call
decl
iret
adc
jmp
add
movsb
add
mov
add
fldt
std
stos
mov
out
push
add
xchg
roll
fucomi
push
add
stc
add
mov
idivb
add
adc
lcall
sbb
ret
sbb
mov
add
call
aam
jb
jmp
cmp
jno
in
inc
add
mov
jg
popf
lock
ljmp
add
mov
movl
add
ud1
mov
dec
imul
add
xchg
push
add
xor
cmp
cmpsb
add
add
call
out
push
in
cmp
fimuls
icebp
jbe
mov
add
add
mov
pop
add
dec
push
add
adc
movb
popa
add
repnz
fidivs
lods
xchg
rcrb
sbb
pop
xor
pushl
lcall
pushf
push
inc
add
jo
dec
addr16
add
xchg
push
add
fidivl
addb
add
inc
add
add
add
sbb
cmc
add
ds
clc
lds
shll
nop
inc
add
or
inc
add
cmpsl
add
add
jmp
add
mov
and
mov
jle
testb
mov
add
aaa
inc
add
xor
mov
add
out
inc
add
cmp
lock
movl
imul
add
fisubrs
add
xchg
popf
adc
incl
add
mov
add
jae
decl
inc
add
mov
and
decl
pop
js
sti
push
movsl
add
jmp
push
pop
imul
add
pop
dec
stos
pop
add
mov
ret
add
fcmovu
ja
add
movb
sti
stos
hlt
jl
inc
add
jmp
add
pop
shrl
roll
push
add
and
pop
sbb
add
pop
rclb
inc
add
clc
pop
sti
test
clc
or
dec
popa
add
sbb
or
add
fcomp
dec
je
sub
add
inc
add
add
fdiv
movsl
add
add
decl
aam
mov
pushf
inc
add
int3
fsubrs
add
adc
decl
add
js
lret
jge
add
roll
insb
rclb
fmulp
test
mov
dec
jne
add
add
sbb
cmc
lahf
mov
incl
and
addl
mov
add
outsb
test
jns
lea
inc
add
add
pop
out
stos
inc
add
mov
fidivl
call
add
xor
cmp
add
add
mov
add
mov
outsb
fildl
pushl
add
inc
add
mov
add
add
add
add
addb
mov
call
pop
shll
add
std
add
fidivrs
inc
add
or
jbe
outsb
mov
outsb
in
add
pop
ret
add
push
add
push
add
mov
addb
add
push
add
cmp
enter
enter
inc
add
mov
pop
mov
lcall
pusha
add
jno
jmp
add
pop
push
out
mov
add
fsts
insb
data16
and
incl
or
stc
xor
call
arpl
incl
push
mov
jmp
add
cmp
adc
incl
mov
decl
pop
imul
int3
pop
ja
adc
int
jno
fmuls
cwtl
ss
add
fcomip
stos
outsb
mov
add
int3
and
jmp
xchg
ret
jne
add
sbb
add
repnz
repz
push
add
push
mov
ljmp
aas
mov
jmp
jae
ljmp
xor
fmul
ds
pop
fxch
aas
mov
add
clc
push
mov
xlat
lods
hlt
mov
add
add
incl
lcall
add
mov
add
inc
add
add
decl
mov
add
call
sbb
add
incl
add
inc
add
and
lcall
sarb
dec
mov
add
call
out
pop
insl
push
add
mov
sub
ja
add
adc
pushl
add
lods
out
sub
sub
mov
cmpsl
add
dec
jno
ljmp
int
movsl
add
sbb
add
fstps
je
mov
push
add
cmp
add
cmp
add
mov
jle
loope
pop
movsl
add
add
cmp
lods
rolb
jle
out
out
fs
loopne
pop
pop
test
decl
cwtl
movsb
add
ret
sub
add
js
mov
lcall
into
call
jmp
icebp
in
jbe
std
insl
mov
imul
mov
mov
aad
add
mov
push
sbb
out
les
add
call
ds
push
add
roll
add
push
mov
add
add
add
dec
cmc
cmp
add
sub
xchg
ja
jg
psrad
repz
xchg
cmp
pop
cmpsl
add
adc
incl
out
hlt
lret
in
out
daa
add
or
shrb
fidivs
add
mov
mov
dec
stos
jge
add
push
or
leave
pop
cmp
repz
add
dec
xor
add
dec
pop
inc
add
adc
push
test
mov
lods
insl
cmp
dec
cmp
mov
mov
add
ljmp
add
sub
sub
into
pop
cmp
std
pop
jns
in
imul
add
daa
add
testl
add
inc
add
jg
dec
and
mov
cmp
jmp
add
mov
add
add
add
lret
cmp
inc
add
sub
or
add
incl
mov
add
lret
add
jb
jmp
add
add
add
das
rolb
sbb
filds
add
fistl
mov
jl
push
popa
add
cld
shr
cmp
add
mov
js
add
push
xor
add
mov
or
jo
ljmp
cmp
call
hlt
aad
daa
add
add
popa
add
mov
call
or
mov
push
sub
fiaddl
pushl
add
jo
push
out
mov
xchg
and
pushl
or
add
mov
sub
std
fcmovnu
adc
call
std
lcall
jmp
add
out
mov
movb
mov
add
stos
bound
lcall
lcall
inc
add
inc
add
jns
cli
mov
stc
aaa
mov
add
pop
cs
cli
rolb
scas
icebp
in
sahf
mov
add
add
cmc
lods
add
push
sbb
add
jb
jmp
out
nop
mov
les
pushf
lret
sub
lcall
jno
call
repz
push
cmc
push
lret
push
add
lock
dec
push
add
mov
cltd
adc
pushl
and
fmull
dec
sbb
add
addb
pop
sbb
outsb
or
add
popf
push
add
fstl
in
ds
lds
xchg
mov
int3
sbb
add
fxch
roll
sub
addl
add
dec
scas
addb
bound
ljmp
movsl
add
sub
xchg
cmpsb
add
inc
add
popa
add
sub
pop
ljmp
nop
sti
mov
test
mov
xor
call
cwtl
outsb
outsl
test
add
lds
fwait
cmc
cmp
incl
add
push
addb
loop
lock
icebp
int
add
sbb
pop
mov
sbb
add
cmpsb
add
add
gs
add
add
dec
scas
lock
lcall
add
xor
ljmp
fiadds
ffreep
add
add
or
lock
add
push
add
mov
or
repnz
push
dec
addl
add
cmp
add
test
jmp
add
add
call
das
out
lods
cmc
push
add
mov
xor
lcall
add
inc
add
add
in
frstor
pushl
sub
mov
add
addb
add
adc
cmp
jg
xor
mov
add
xor
cmp
in
imulb
bound
jmp
add
fildll
addl
pop
data16
hlt
fstpt
add
xchg
notl
jmp
adc
ljmp
leave
and
lcall
push
test
adc
push
add
adc
pushl
add
dec
dec
outsl
add
add
call
add
call
add
add
and
pushl
add
add
xchg
jno
cmp
inc
add
ds
int3
xlat
loopne
loope
jmp
add
add
add
add
daa
add
add
cmpsb
add
jnp
inc
add
test
or
nop
mov
mov
das
xchg
test
xor
incl
add
add
mov
cmp
jg
jns
addl
dec
push
add
pop
mov
add
rolb
add
aas
push
testl
sub
jge
add
fcmovnbe
mov
and
call
inc
add
add
add
jmp
incl
add
mov
outsb
test
int3
lahf
insl
xchg
sbb
mov
std
pushf
inc
add
dec
push
push
push
loope
jne
add
inc
add
push
dec
js
pop
sti
adc
mov
add
add
push
mov
add
mov
add
cltd
mov
push
add
int
add
push
xor
ljmp
sarb
addb
pop
jl
adc
not
lahf
aam
add
movb
into
icebp
in
scas
mov
mov
add
mov
push
add
xor
call
and
decl
int3
lret
aam
mov
out
lcall
add
add
adc
pushl
add
jno
lcall
add
cltd
into
lock
fidivs
add
repnz
scas
push
xchg
add
test
sbb
add
add
push
insb
stos
aam
add
add
call
les
dec
cmpsb
add
add
mov
add
in
movsb
add
je
mov
cmc
pop
and
jmp
lahf
ja
xor
decl
call
jo
incl
rcr
cmc
int3
inc
add
add
and
pushl
inc
add
xchg
test
sub
or
dec
cmp
jecxz
mov
jnp
daa
add
push
mov
scas
adc
call
scas
imul
add
xor
lcall
and
call
shr
mov
fiadds
mov
lret
dec
push
push
add
add
out
adc
lcall
int
rcl
ljmp
sub
add
stc
xchg
mov
mov
add
popf
mov
addb
or
mov
les
or
lret
cli
or
add
push
add
arpl
incl
and
incl
add
add
sub
add
mov
add
das
faddp
add
mov
add
push
jns,pn
xchg
mov
aaa
sub
add
jg
shrl
fsubrp
sbb
movsb
add
fdivs
call
add
mov
repz
add
push
fcomip
in
aam
jb
incl
add
push
add
insl
imul
and
xchg
jns
adc
jmp
add
aad
roll
add
repnz
add
dec
sbb
jle
add
stos
inc
add
push
add
faddl
add
fcmovu
movl
xor
ljmp
inc
add
add
filds
adc
jmp
add
cmc
xchg
push
mov
enter
push
add
pop
mov
ljmp
add
repnz
pop
les
ja
sub
sti
out
lods
push
add
push
add
mov
push
add
data16
jge
push
add
inc
add
imul
add
add
addb
add
add
lcall
inc
add
lahf
mov
mov
xchg
inc
add
addl
scas
add
outsl
les
repz
lcall
ja
add
push
mov
mov
add
pop
jg
mov
add
jae
inc
add
lods
mov
add
rcll
ljmp
sub
out
sub
loope
call
jmp
imul
sahf
jecxz
mov
imul
dec
mov
rolb
add
call
add
movsb
add
out
jg
xchg
addb
add
mov
cmp
stos
int3
mov
mov
dec
out
jb
lcall
addb
add
call
and
pop
ss
jmp
scas
std
lcall
mov
add
add
ljmp
ljmp
dec
sbb
outsl
dec
repz
add
sbb
pop
jmp
addb
or
jl
cmpsl
add
dec
dec
jl
add
mov
xor
cmp
push
xchg
adc
incl
bswap
cmp
movl
add
push
add
loope
loope
in
and
dec
je
add
add
push
cli
inc
add
movb
and
lods
shrb
add
sbb
jg
inc
add
add
mov
clc
dec
adc
mov
in
in
lret
inc
add
lcall
mov
test
mov
js
add
push
add
pop
add
sub
cwtl
adc
cmp
mov
lcall
add
testl
jbe
test
ljmp
add
xchg
fmul
addb
mov
xchg
inc
add
and
aad
add
stc
test
dec
push
sub
add
add
add
bound
lcall
flds
add
jno
fucom
add
fldcw
add
add
adc
jmp
mov
add
daa
add
adc
call
mov
add
mov
cmp
jmp
lcall
insl
mov
les
xor
add
mov
sbb
int3
stos
add
xor
cs
cltd
jl
add
sub
push
push
add
sbb
and
decl
pop
mov
or
sub
mov
mov
add
or
push
test
lods
repz
pushf
cmc
add
dec
mov
addb
xchg
xor
jns
push
cld
xchg
fisubs
lcall
add
add
mov
and
push
ret
add
add
push
cmpsl
add
cmp
add
mov
or
roll
or
add
jns
add
aas
std
pushf
roll
out
mov
add
fs
add
cld
push
sbb
and
ljmp
push
movl
les
inc
add
push
sar
fwait
inc
add
ljmp
add
addl
mov
add
push
add
jbe
jb
lcall
pushl
add
and
xor
pushl
add
inc
add
cs
add
test
shll
jmp
add
push
add
rolb
add
add
jmp
mov
inc
add
add
add
sub
add
push
add
add
add
push
adc
in
lods
mov
adc
push
inc
add
pop
add
lcall
dec
mov
mov
mov
add
push
add
or
add
pop
push
cmpsl
add
add
movl
add
add
addl
popf
add
insb
outsl
lret
fdivrl
icebp
popf
shl
lock
xlat
es
add
ljmp
sub
leave
aas
sbb
dec
movsl
add
add
das
push
jmp
add
push
mov
add
jmp
add
movsb
add
add
xlat
inc
add
inc
add
push
add
in
popa
add
jae
push
in
mov
int
cmp
int3
jmp
mov
mov
mov
rorl
push
add
test
and
jp
add
lret
sete
add
add
addb
insb
or
add
add
js
js
push
jo
lcall
add
in
pop
mov
loop
sbb
add
add
aaa
sbb
cs
push
jbe
sbb
add
pushl
add
dec
in
sub
imul
add
add
add
pusha
add
imul
decl
add
add
add
add
aad
mov
and
decl
cmc
push
stc
pop
cmc
pop
ss
movsl
add
adc
incl
add
lock
into
xchg
test
dec
mov
add
clc
addl
add
push
add
jl
cmpsb
add
and
pushl
call
mov
int3
data16
add
aaa
ja
add
push
ret
fnstcw
add
ljmp
stc
stos
das
cmc
cs
mov
out
out
mov
or
aaa
popa
add
xchg
pushf
dec
push
add
and
fadd
add
pop
fsubr
imul
incl
adc
incl
sti
dec
push
add
push
add
mov
add
rcrl
je
pop
mov
lods
push
dec
jecxz
sub
add
test
rolb
add
dec
test
inc
add
add
ljmp
shll
sub
insl
pusha
add
jecxz
inc
add
or
mov
aam
movsb
add
mov
dec
leave
push
add
mov
addl
add
mov
pop
sbb
repz
fildl
aad
add
call
pushl
dec
dec
xchg
inc
add
add
jnp
and
dec
pop
push
add
sub
add
add
aam
add
out
jnp
add
rol
add
or
fcoms
fiadds
add
add
add
fimull
fucomip
daa
add
test
lahf
adc
ljmp
mov
pop
mov
ret
loope
push
add
pushf
pop
or
add
cmp
les
sbb
push
lret
add
lock
push
dec
pop
inc
add
sbb
add
add
add
add
add
lds
sbb
out
pop
push
add
push
pop
roll
add
add
sbb
jnp
add
add
or
or
push
repnz
addl
jo
jmp
add
data16
stos
add
ljmp
xchg
add
add
sub
push
inc
add
add
dec
sub
add
mov
sahf
push
xchg
movb
aaa
mov
add
add
mov
enter
enter
add
mov
leave
mov
add
push
add
add
addr16
mov
add
jmp
stos
mov
addl
add
test
mov
imul
inc
add
adc
mov
dec
push
add
addb
mov
incb
out
aam
pop
xlat
stc
xchg
jnp
add
movl
fcmovnbe
push
mov
add
les
addl
add
cmp
add
cld
jb
jmp
add
add
push
mov
leave
cltd
test
movsb
add
mov
add
test
decb
add
cmp
out
xchg
lahf
iret
mov
and
movb
notb
and
jmp
lds
jl
add
push
ljmp
inc
add
nop
pop
add
sub
addb
add
fldcw
add
dec
lock
add
or
dec
or
push
cmpsl
add
dec
arpl
call
add
add
bound
jmp
ja
pop
mov
add
xor
add
dec
lret
inc
add
mov
mov
add
pop
cmp
pop
in
cmp
mov
add
push
add
mov
pop
lock
push
add
sbb
inc
add
and
dec
mov
mov
add
out
xor
cmp
testb
inc
add
xor
call
add
pop
add
add
mov
call
imul
add
jp
add
out
movb
add
cmp
cmp
add
inc
add
xor
call
ljmp
sbb
jno
dec
push
add
cmp
je
add
enter
addl
jmp
je
cli
sbb
movl
add
add
add
mov
xchg
idivl
add
sbb
add
xor
mov
add
call
add
pop
inc
add
jle
add
dec
sub
decl
rcrb
jg
push
stc
paddusb
push
jg
mov
iret
xchg
inc
add
fistl
jmp
add
jp
mov
pushf
and
decl
add
inc
add
hlt
push
add
add
stos
test
jle
mov
ja
hlt
mov
push
inc
add
outsl
lock
add
out
jbe
repnz
roll
add
sub
out
inc
add
cmp
insl
leave
jne
imul
jmp
add
adc
ljmp
pop
mov
repnz
mov
push
add
add
pushl
push
cmp
add
sbb
xchg
adc
decl
push
add
aaa
push
aam
adc
fnstsw
add
loop
add
mov
divps
jno
fsubrs
insb
mov
add
add
test
xchg
faddl
popf
in
cmp
into
push
add
push
add
xchg
dec
mov
pop
cmc
mov
add
inc
add
ror
addl
loope
xor
lods
inc
add
lret
in
cmpsb
add
hlt
cmp
add
mov
adc
pushl
roll
inc
add
jmp
mov
jge
lock
add
jo
lcall
jecxz
imul
arpl
call
jo
jp
add
sahf
addb
add
jmp
xchg
add
icebp
outsb
pop
int
add
push
int3
mov
call
aas
sub
daa
add
int
mov
rolb
ja
ffreep
add
add
and
fistl
add
mov
call
dec
out
xor
jmp
add
xchg
sub
out
add
fists
xor
jmp
add
inc
add
repz
aas
sub
mov
call
add
adc
aas
shr
pop
add
inc
add
xchg
outsl
pop
mov
outsl
roll
stos
inc
add
and
lcall
mov
incl
incl
inc
add
repnz
add
mov
dec
in
cld
inc
add
add
add
je
pushf
pusha
add
jl
add
add
pop
xor
decl
cmp
imul
loope
push
add
push
add
mov
test
mov
sti
dec
fisubrs
addl
cmpsb
add
pop
add
xor
lcall
add
add
jge
int3
push
add
and
pop
enter
ljmp
add
cltd
sub
add
jns
nop
sbb
jmp
push
jle
nop
std
ret
add
repnz
add
mov
mov
add
push
add
fcmovnb
add
aaa
or
add
cli
pop
roll
add
pop
sti
test
lock
mov
add
dec
rep
inc
add
mov
add
cmp
loope
mov
push
adc
jl
add
sbb
mov
add
add
xchg
les
scas
les
cmp
scas
in
push
add
and
jl
add
jmp
and
inc
add
jl
cmp
rolb
add
je
add
add
pusha
add
push
add
or
add
inc
add
in
leave
lret
add
rcll
add
and
incl
add
add
test
das
jge
add
xor
add
xchg
popf
rolb
add
in
sti
out
out
or
mov
rcr
insb
fdiv
ret
mov
imul
mov
mov
mov
in
repnz
sub
add
add
popf
test
scas
movsl
add
fcomp
push
mov
fisubs
or
jg
pop
dec
dec
cli
mov
mov
mov
add
cmc
sub
add
xchg
cmc
fwait
sub
push
add
push
out
cmp
mov
cli
dec
fidivrs
pop
or
insb
shl
add
fsubrp
insl
clc
cmc
adc
decl
and
jmp
add
and
scas
cs
jne
add
lret
pop
dec
xchg
xchg
out
pop
add
test
xor
lcall
jp
sub
mov
sub
ss
push
test
lds
xchg
inc
add
dec
pop
mov
add
aaa
xor
incl
add
xchg
rcrb
mov
add
dec
pop
mov
add
add
add
xchg
inc
add
add
add
xchg
scas
mov
xor
ljmp
add
add
aad
xor
call
add
add
add
decl
and
call
imulb
lds
jb
call
scas
dec
mov
aas
in
xchg
cli
xchg
xchg
pop
sarb
dec
mov
and
imul
repz
mov
push
mov
arpl
lcall
mov
add
call
jle
cwtl
rol
add
or
add
cmpsb
add
add
add
add
addb
mov
sub
mov
addb
add
push
test
and
add
incl
sbb
pop
add
add
cmc
inc
add
fcmovnbe
inc
add
add
xchg
xor
aas
mov
incl
mov
add
add
call
or
add
dec
stos
push
mov
add
jmp
add
lret
jge
out
rolb
add
and
out
add
sub
cmp
add
filds
add
data16
add
add
xor
ljmp
add
add
inc
add
lcall
dec
add
push
inc
add
add
dec
jge
add
jb
call
pushl
add
xor
out
sub
in
xor
lcall
push
push
add
inc
add
or
push
adc
inc
add
jle
jno
incl
mov
add
arpl
pushl
add
lods
or
xchg
addb
lret
add
dec
mov
out
roll
push
add
push
add
add
jmp
push
movd
loope
jmp
add
and
jmp
add
cmp
or
dec
ja
mov
mov
jl
add
cmp
decl
imull
mov
ret
add
xchg
pop
add
lcall
add
lock
xchg
push
add
ss
jmp
lret
and
decl
add
add
std
push
add
pop
push
push
fnstenv
gs
xor
jbe
cmp
mov
add
out
mov
bound
decl
add
test
outsl
ja
add
cmp
out
rcrb
add
sbb
ljmp
pushl
lock
adc
call
lcall
add
mov
add
inc
add
js
loope
sbb
add
sub
add
pop
push
add
mov
add
fwait
cmp
add
sub
add
mov
push
jo
jmp
cwtl
push
and
repz
movsb
add
add
mov
mov
daa
add
addr16
add
push
lods
push
add
clc
insb
push
inc
add
push
add
add
jmp
lds
notb
add
add
stos
ljmp
mov
iret
push
dec
repz
add
push
aas
sbb
rol
add
add
xchg
cld
jmp
pusha
add
outsl
xor
dec
ljmp
sarb
outsb
cmp
add
mov
fidivrs
push
pop
sbb
add
dec
fildll
or
mov
in
xchg
sbb
add
stc
insl
jbe
sbb
fwait
or
cmp
fbld
add
mov
jmp
add
lahf
outsb
fisubrl
cltd
inc
add
mov
daa
add
jo
jmp
add
pusha
add
mov
mov
xor
scas
xor
ljmp
add
mov
out
mov
imul
and
add
cwtl
psubq
lret
ljmp
mov
add
insb
pop
push
add
out
int3
ret
int3
xor
incl
incl
add
pushl
ljmp
mov
testb
add
test
and
dec
int
popa
add
popa
add
add
stos
std
movsl
add
addb
movsb
add
int3
and
dec
push
add
cmp
inc
add
pop
imul
xor
call
rorb
add
jl
mov
add
add
gs
enter
ljmp
dec
push
add
pop
mov
pop
jne
dec
lods
aaa
add
sbb
xchg
add
call
les
add
cmpsb
add
or
push
add
inc
add
push
dec
pop
pop
ja
add
fdivl
int
add
mov
add
push
add
add
pushl
add
push
xchg
pop
and
std
sbb
dec
lea
ljmp
add
nop
lods
clc
pushf
repz
in
cmp
xchg
sbb
fdivr
movsl
add
inc
add
and
cld
push
in
xor
lcall
lods
repz
lcall
ljmp
add
or
mov
lret
nopl
add
sbb
decl
sub
jbe
notb
ljmp
inc
add
bound
call
rcrb
cld
jo
decl
pop
cmp
add
mov
add
pop
lret
inc
add
mov
call
add
xlat
and
lcall
add
sbb
add
pushl
inc
add
insl
sarl
inc
add
sbb
dec
in
arpl
incl
add
add
add
shrl
sahf
in
adc
inc
add
test
pop
int
add
hlt
sub
lea
pop
out
push
lods
ljmp
mov
dec
jb
ljmp
cmp
mov
mov
mov
mov
and
decl
scas
xlat
or
jle
mov
add
dec
enter
arpl
fcomp
int
movl
fidivrl
rorl
adc
ljmp
enter
faddp
add
sub
ds
push
add
jecxz
imul
cs
mov
and
incl
fldl
push
mov
jb
mov
add
outsb
sbb
ljmp
xor
call
add
push
xchg
pop
shr
push
adc
jmp
add
roll
add
add
lcall
pop
repnz
ljmp
push
add
sahf
inc
add
sub
mov
add
incl
add
test
xor
mov
test
add
xchg
mov
inc
add
mov
sbb
add
inc
add
add
dec
mov
in
in
cmpsb
add
pushf
mov
test
add
jge
push
add
shll
add
xchg
movsb
add
outsb
xchg
jnp
add
adc
push
jp
sbb
daa
add
jbe
add
int
add
movsl
add
add
repnz
decl
jmp
add
xchg
inc
add
int3
outsl
enter
add
pushl
add
test
add
aaa
jo
incl
add
idivl
data16
add
mov
ret
add
inc
add
sub
dec
test
sti
hlt
mov
add
add
ljmp
mov
loope
sbb
pusha
add
ds
mov
push
add
fsubs
les
repnz
add
call
add
xchg
mov
out
mov
dec
cmp
add
pop
mov
add
or
add
cmovns
call
push
add
jo
lcall
std
mov
xor
fisubrl
add
cli
mov
push
loopne
pop
movsb
add
add
rorb
add
call
add
or
add
fmuls
pop
jbe
push
add
add
call
pop
cmp
add
jbe
ret
add
xchg
mov
xchg
insl
xchg
or
arpl
decl
lcall
add
xchg
cltd
push
add
bound
lcall
adc
add
imul
sbb
add
scas
dec
cltd
stos
jnp
mov
and
ljmp
lcall
add
adc
lcall
addl
sub
fstpl
add
test
mov
add
cmp
out
rolb
fsubrl
ja
in
addb
jg
add
or
arpl
call
lcall
cmpxchg
loope
test
add
call
add
jl
add
xchg
rcrl
icebp
dec
adc
call
add
inc
add
cmp
dec
lock
add
fcoms
and
mov
or
pop
stos
xor
decl
mov
or
push
add
ljmp
xchg
imul
pop
mov
add
add
mov
aas
repz
jmp
addl
mov
push
add
sbb
outsb
call
xor
adc
incl
add
mov
xchg
dec
push
add
lcall
xor
inc
add
add
mov
push
xchg
pop
lahf
xor
xchg
mov
add
mov
add
scas
aam
popf
out
lcall
cs
add
mov
in
pop
add
jl
add
ds
pop
inc
add
bound
jmp
add
mov
shll
mov
cmp
pop
stc
cwtl
lret
add
adc
rolb
call
out
sbb
pop
insl
xor
imul
sbb
bound
ljmp
add
push
rolb
add
jmp
scas
test
mov
inc
add
imul
mov
jo
call
test
leave
cwtl
ss
cmp
mov
stos
test
adc
pushl
leave
push
pop
inc
add
hlt
arpl
incl
add
xor
lcall
popf
icebp
mov
add
fdivs
ljmp
fst
cltd
fs
rcl
or
in
rclb
add
imul
insb
bound
inc
add
push
add
cli
mov
lcall
mov
adc
ljmp
add
add
and
adc
call
incl
add
mov
add
pop
xchg
pop
mov
add
into
in
push
push
nop
lods
mov
xchg
out
in
ds
add
add
in
loop
or
add
jmp
js
mov
movb
add
push
add
outsl
mov
add
sbb
add
add
and
ljmp
add
jnp
clc
pop
dec
negb
and
call
ds
hlt
arpl
jmp
mov
aas
loope
add
add
test
test
add
sub
push
aam
add
xchg
lods
iret
add
add
jle
sub
mov
flds
add
sub
push
add
addl
fmuls
addb
add
aam
mov
ljmp
cmp
add
sbb
add
lcall
adc
lcall
scas
and
cld
addb
addl
add
push
adc
decl
xchg
mov
movb
iret
inc
add
mov
add
xchg
addb
sbb
dec
in
loop
enter
xchg
mov
add
xchg
mov
push
call
jmp
add
mov
mov
jns
int
add
add
iret
or
pop
jmp
or
into
mov
lcall
add
add
in
sahf
and
dec
out
stos
fisttps
imul
push
popa
add
lret
jecxz
add
add
add
aaa
test
movsb
add
add
addb
imul
xchg
test
jns
add
add
int
add
lret
add
test
add
adc
ljmp
les
cld
inc
add
sti
sbb
mov
mov
fs
stc
or
cmpsl
add
add
lahf
sbb
add
sti
and
incl
add
repnz
cmp
test
sahf
jno
out
inc
add
add
mov
mov
add
inc
add
add
dec
int3
jmp
roll
add
inc
add
repz
mov
add
scas
mov
add
dec
pop
pushf
and
ljmp
xchg
adc
sub
mov
add
jmp
add
or
pop
shr
push
xor
lcall
aam
mov
mov
pop
hlt
adc
fisubl
add
jecxz
push
aam
data16
push
dec
or
push
cmc
cmp
add
add
icebp
mov
inc
add
int
pop
xor
jmp
jmp
add
in
arpl
ljmp
pop
push
add
pushf
ds
add
xor
call
fdiv
lods
cmp
testl
adc
add
add
ds
or
add
test
into
scas
and
incl
add
cmp
inc
add
mov
add
or
cmp
repz
add
cmp
push
add
sti
xlat
cmpsb
add
outsl
int3
push
testb
popa
add
addl
test
sti
sub
add
xchg
jns
xor
call
movl
add
pop
sbb
jmp
add
add
lahf
pushf
add
jl
add
cmp
ret
add
cmpsl
add
add
jbe
movsb
add
jmp
decl
sub
add
sub
pop
sub
iret
js
add
inc
add
ret
add
movb
add
hlt
loopne
xlat
jb
decl
pop
fdivrs
int
and
pushl
cmpsb
add
ljmp
jl
dec
sub
call
add
lcall
nop
addl
push
add
das
inc
add
sub
and
mov
jnp
fwait
push
jns
adc
decl
scas
mov
bound
jmp
sub
lock
add
inc
add
add
cli
movsb
add
dec
das
stc
outsb
mov
aaa
sub
movhps
add
ja
add
mov
add
and
push
mov
or
cmp
cmp
add
mov
or
inc
add
add
in
pop
sbb
cld
lock
xchg
ds
dec
dec
push
inc
add
mov
or
add
push
add
lods
loope
mov
add
out
sti
enter
lahf
fwait
lods
ljmp
add
scas
or
addl
icebp
mov
cmc
int3
stos
adc
jmp
sub
add
push
inc
add
add
decl
dec
je
test
mov
add
fidivrl
push
addb
addl
add
ljmp
mov
pushl
scas
mov
add
fidivl
mov
add
push
add
jnp
mov
mov
nop
cli
in
mov
xlat
icebp
sub
sub
repz
add
sbb
add
aad
add
xor
sub
add
cmpsb
add
shlb
test
jmp
dec
data16
add
cwtl
pop
repz
xchg
jno
jmp
add
add
mov
shrb
mov
add
dec
mov
scas
aam
add
lods
dec
ret
add
or
incl
add
ffreep
add
add
jmp
jge
xor
jle
out
das
outsl
lcall
rcl
movsb
add
shl
add
add
add
pushf
add
lcall
out
sub
add
add
mov
sbb
cs
push
xor
call
xor
pop
popf
pop
ss
sbb
repnz
mov
adc
mov
add
lahf
pop
pop
enter
inc
add
add
int
adc
ljmp
jge
add
sti
stos
movsl
add
add
add
sbb
scas
ficoms
enter
mov
add
pop
int3
lret
cmp
add
lret
and
xor
add
push
add
popa
add
mov
mov
add
jbe
add
and
incl
ljmp
add
sbb
jecxz
mov
popa
add
loope
int3
aaa
icebp
and
decl
sub
jnp
add
sbb
and
enter
lea
add
inc
add
leave
outsl
data16
mov
push
add
add
scas
lcall
add
lds
push
addb
add
dec
roll
ret
add
lret
jge
push
xchg
dec
jge
mov
inc
add
mov
inc
add
dec
push
ror
or
leave
xlat
mov
mov
mov
push
add
call
add
add
out
clc
mov
add
cmp
vphaddbd
insb
popf
and
decl
add
mov
add
add
pop
into
movsl
add
add
and
jb
call
decl
and
lcall
out
mov
add
jnp
add
popf
pop
aas
movl
add
decl
add
loop
add
ds
lds
pop
mov
add
mov
mov
push
xor
aas
push
add
jne
add
fsubl
add
addl
pop
out
insb
test
iret
sub
add
imul
add
sbb
enter
inc
add
add
stos
jbe
dec
adc
call
xor
lcall
add
or
jg
add
rolb
pop
xchg
inc
add
add
lcall
movl
cs
movb
test
jno
lcall
cwtl
mov
paddq
xor
decl
mov
add
jns
cmp
add
cmp
aaa
xchg
xchg
pop
mov
iret
outsb
or
pop
aaa
fcmovu
test
add
xchg
cwtl
push
cmp
in
mov
lea
xor
lcall
xchg
jbe
lds
pop
push
add
pushf
push
add
add
ds
push
dec
sbb
add
add
lods
test
iret
cltd
rolb
lods
imul
decl
insl
int
add
add
lds
pop
movsl
add
add
push
add
out
icebp
arpl
call
invd
xchg
enter
add
imul
js
add
pusha
add
shlb
add
add
addl
add
cmp
xchg
insl
dec
jne
pushf
xchg
out
aam
xlat
pushf
clc
cmp
scas
sbb
call
dec
cld
pop
push
add
mov
xchg
and
dec
roll
cmpsb
add
mov
decl
add
add
add
xchg
imul
add
mov
xlat
or
add
mov
cmp
sbb
inc
add
loopne
mov
inc
add
popf
sub
jl
popf
outsb
leave
popa
add
xor
lcall
cltd
aas
ss
out
dec
shl
add
add
int
xchg
mov
adc
pushl
add
jmp
push
add
and
ljmp
add
sbb
push
add
popl
decl
add
xchg
mov
push
jle
mov
incb
stc
movaps
push
adc
decl
and
pop
pop
pop
add
mov
test
ljmp
data16
add
loopne
mov
jnp
cmpsb
add
pushl
add
mov
test
or
fstl
into
xchg
mov
jmp
dec
push
dec
lret
adc
push
adc
mov
add
and
jmp
fldcw
mov
mov
add
add
outsl
adc
jmp
add
out
sbb
add
mov
ret
add
rcll
cmp
mov
add
incl
adc
jmp
xchg
rolb
cltd
leave
ficomps
loope
cmpsl
add
add
xor
lcall
dec
add
loopne
xchg
adc
add
out
add
decl
push
add
shll
rolb
testl
mov
add
insl
roll
mov
add
xlat
jmp
dec
add
addb
adc
iret
adc
movl
add
add
xor
add
xchg
mov
mov
add
scas
addr16
aaa
addl
add
adc
add
xchg
repnz
add
and
incl
jp
mov
movb
add
in
push
push
stos
repnz
das
addl
outsl
mov
repz
push
add
popf
in
push
psubw
ljmp
cs
insl
popf
imul
incl
add
and
cmp
add
out
fldl
into
xor
dec
sub
xchg
xor
std
sbb
add
add
mov
aas
aad
cs
hlt
cmpsl
add
addb
jecxz
pop
xor
flds
incl
decl
pop
jb
call
data16
and
mov
dec
inc
add
jle
rolb
add
insb
sbb
adc
fstpl
imul
add
stc
or
in
mov
das
scas
ret
xchg
gs
add
adc
movb
icebp
dec
movsl
add
leave
push
add
xchg
bound
ljmp
fsub
add
jne
dec
inc
add
add
ffreep
add
or
add
lods
xor
jmp
add
add
bnd
jl
pop
cld
xchg
mov
add
lods
mov
add
push
add
adc
dec
daa
add
add
insb
adc
add
push
mov
in
rcl
pop
das
ja
in
inc
add
xchg
push
add
mov
scas
popl
add
push
outsb
push
inc
add
incl
xchg
fimull
ss
jno
mov
ror
cmp
addb
jo
cmp
and
decl
inc
add
mov
ja
add
scas
cmp
ja
sub
add
int3
fisttpll
xchg
sbb
and
jmp
xor
call
call
add
ret
add
cltd
dec
rcrb
pop
inc
add
add
addb
mov
sarb
pop
mov
push
mov
loope
std
lods
push
add
cli
ds
aad
adc
pushl
add
add
inc
add
std
ret
add
dec
loopne
cmp
xchg
incl
sub
arpl
call
pop
js
mov
jne
pop
pop
bound
call
sub
adc
sti
sbb
jmp
mov
divl
movntq
pop
cs
cmpsl
add
add
jne
add
pop
and
ljmp
sub
out
shl
add
decl
mov
sbb
ds
xchg
cmpsb
add
lea
add
pop
cmp
imul
add
daa
add
lods
fstpl
mov
add
jmp
mov
add
push
add
ror
pop
pop
or
lcall
sub
adc
call
call
sbb
lods
std
in
sbb
add
lret
scas
stc
mov
mov
sti
shrl
xchg
fisubl
push
fisttpll
pop
cmpsb
add
dec
mov
jo
pushl
ljmp
addb
outsl
insb
push
cmp
add
push
mov
sbb
and
jmp
sub
fbld
add
dec
aad
insl
shrb
add
add
add
jmp
add
pop
ds
and
int
add
add
push
test
lock
jp
iret
mov
add
out
movb
shlb
ljmp
xor
mov
lcall
test
pop
push
mov
repnz
dec
clc
mov
rolb
and
incl
mov
add
cld
out
pusha
add
aaa
mov
loop
bound
jnp
add
and
incl
add
jl
add
mov
add
xor
call
pop
push
add
push
push
mov
ljmp
cmp
jmp
dec
mov
fcompl
mov
cld
mov
sub
push
push
nop
movsb
add
add
rolb
sub
add
mov
lahf
xchg
sbb
mov
add
add
adc
pop
loope
push
scas
pop
lahf
xor
sarl
clc
jmp
sub
add
mov
lock
mov
je,pt
ficoms
lcall
add
lods
sbb
ficoms
add
mov
divb
add
xchg
sub
lcall
xor
ljmp
insl
push
and
lcall
add
wbinvd
jg
lahf
in
mov
sub
mov
mov
aaa
inc
add
add
cmpsl
add
fldt
pusha
add
dec
xchg
loop
mov
jae
jmp
add
repz
mov
xchg
dec
add
lcall
jmp
adc
call
int
mov
sub
push
add
push
add
inc
add
roll
add
xlat
cmpsl
add
inc
add
pushf
into
cs
push
add
shlb
data16
testb
ja
add
cmp
xchg
xchg
add
add
jb
dec
cmp
mov
add
stos
mov
add
nop
xor
jmp
add
jbe
add
ss
sbb
pop
sbb
outsl
and
incl
ljmp
out
mov
inc
add
dec
rcll
push
add
or
mulb
add
lcall
hlt
outsb
out
pop
xor
call
add
xchg
push
add
sub
in
test
adc
decl
jmp
push
add
push
add
and
decl
cmp
scas
sbb
xor
movb
in
imul
add
push
repz
jnp
sbb
add
xchg
ret
addl
das
cmpsl
add
add
insl
cmp
adc
and
inc
add
dec
pop
or
pusha
add
es
jne
xor
in
jmp
pop
hlt
data16
pop
adc
das
hlt
movsl
add
cs
dec
xchg
in
sub
mov
jbe
add
add
add
jo
jmp
add
mov
dec
rcll
inc
add
fimull
add
arpl
aas
cmpsb
add
add
add
fmul
add
lcall
movsb
add
mov
add
ljmp
in
jno
dec
jno
lcall
jnp
cmp
mov
movl
lcall
add
push
push
add
mov
xchg
and
incl
lods
movl
add
sub
cmp
lahf
mov
add
xor
movb
add
sub
add
cmpsb
add
call
add
test
insb
fwait
pop
sbb
add
int3
sub
scas
movl
cmp
add
inc
add
jge
dec
push
fistpll
mov
add
mov
div
mov
mov
add
xchg
addb
add
imul
divb
sub
lret
sahf
dec
popf
lds
inc
add
jnp
rolb
add
sub
ss
add
mov
sti
mov
add
jnp
add
cmpsl
add
add
ljmp
test
daa
add
add
incl
jmp
push
push
push
add
push
add
adc
inc
add
add
rolb
and
call
add
push
add
and
sub
movsb
add
add
mov
mov
not
lret
mov
add
add
xchg
xchg
fisubrl
add
mov
imul
lcall
sbb
inc
add
add
ljmp
outsl
push
gs
adc
dec
nop
mov
cltd
or
add
mov
push
add
cmp
adc
out
data16
add
call
add
cwtl
inc
add
xor
add
push
add
xor
incl
xchg
push
add
xchg
fisttps
das
inc
add
arpl
incl
call
add
add
mov
ret
add
add
ror
add
mov
adc
jg
mov
or
mov
add
std
mov
inc
add
add
loopne
es
add
neg
sti
inc
add
add
lcall
mov
push
add
add
lock
xor
ljmp
add
divl
add
into
inc
add
pop
or
popf
cwtl
fsubr
nop
cmp
imul
imul
lods
sbb
inc
add
add
loope
les
inc
add
xchg
push
add
add
xlat
dec
sub
out
xchg
xchg
jg
sbb
call
add
add
xchg
cltd
addr16
add
jp
test
lcall
daa
add
aam
ds
ret
add
jg
push
daa
add
enter
add
call
add
mov
lahf
or
mov
lret
fwait
lahf
mov
add
sbb
add
movb
mov
lahf
lds
xor
pop
xchg
cs
add
jnp
das
add
inc
add
jmp
add
mov
jno
mov
addb
add
add
pop
and
dec
jns
push
jbe
add
fisubrs
xor
pop
stc
dec
bound
ljmp
xor
decl
inc
add
add
in
insl
jmp
add
xchg
mov
cmc
loop
and
daa
add
jae
incb
add
dec
and
add
add
add
jo
ljmp
push
add
cmp
cmpsl
add
push
add
mov
mov
rclb
imul
ljmp
push
add
fwait
xchg
and
add
nop
cltd
shrb
and
jmp
add
add
addb
add
push
add
mov
fildl
xchg
xor
jmp
cmp
mov
xchg
popf
push
testb
lods
inc
add
lods
push
add
jbe
mov
xor
cld
xchg
dec
dec
outsl
roll
add
add
cld
push
aad
cli
push
mov
add
push
add
ret
lret
jno
call
pushl
add
les
dec
aas
fisubs
xchg
testl
add
dec
jnp
xor
dec
mov
lods
and
dec
idivl
ja
jae
jmp
add
jns
jno
call
decl
push
dec
repz
or
ljmp
pop
fsubp
add
loopne
enter
add
inc
add
add
call
add
add
shrl
xchg
push
mov
add
add
aaa
lcall
bound
pushl
add
movzwl
xchg
mov
stos
lahf
push
add
call
add
aas
jg
or
mov
jb
js
add
movl
clc
mov
cld
add
cmp
loope
call
daa
add
add
mov
add
or
push
insl
xor
inc
add
add
push
and
cld
popf
xor
lcall
mov
xchg
fwait
test
add
stc
call
clc
pop
std
sub
mov
add
lea
add
sub
stos
ret
add
pop
add
jmp
jbe,pn
add
add
sbb
mov
dec
sbb
jae
ds
call
dec
ret
add
stos
ljmp
inc
add
jo
jmp
add
mov
in
imul
add
sub
sub
jmp
outsb
out
add
pop
add
scas
jb
incl
add
scas
insb
js
sub
dec
sub
add
add
add
pop
gs
xchg
add
jmp
ds
adc
jmp
repnz
push
add
sbb
movsl
add
add
push
push
add
mov
pop
dec
or
mov
adc
lcall
add
cli
or
stos
mov
test
arpl
decl
add
add
xchg
insl
add
incl
inc
add
jmp
iret
pop
add
xor
cmp
lcall
mov
add
pushl
add
sbb
fisttps
add
jmp
add
into
addl
daa
add
xchg
sbb
xor
dec
push
add
rclb
add
cmp
add
mov
sub
add
popa
add
mov
mov
add
pop
cwtl
xlat
add
xchg
sti
or
lea
imul
jg
mov
mov
int3
xchg
cmpsl
add
les
add
mov
xor
add
cmpsl
add
add
add
xchg
xchg
aaa
dec
les
adc
decl
add
ret
add
adc
incl
add
add
cmp
xchg
lahf
mov
cmp
je
lahf
addl
mov
add
sub
add
fldenv
add
dec
arpl
decl
add
push
movl
movsl
add
adc
jp
test
mov
lahf
addb
lods
cld
and
lcall
dec
add
dec
mov
out
fadd
add
decl
mov
adc
call
add
fcomps
add
or
dec
fimuls
imul
repnz
add
xchg
out
imul
into
or
cmp
scas
cmp
jns
add
adc
ljmp
out
jmp
xchg
icebp
xchg
sbb
add
add
add
xchg
stc
xor
fstps
mov
xchg
or
arpl
mov
push
add
cmp
push
and
lcall
mov
add
popf
mov
sub
loop
fadd
add
inc
add
iret
and
lcall
addl
inc
add
imul
push
lods
adc
add
mov
mov
lret
mov
add
mov
out
cmpsb
add
pop
add
test
jno
incl
pushl
add
test
dec
stc
jo
pushl
dec
cmpsl
add
fst
cmpsl
add
add
mov
or
pop
dec
pop
and
adc
addb
pop
cmp
lahf
jecxz
cmp
decl
add
decl
xchg
adc
jmp
add
add
nop
nop
cmc
xchg
mov
sbb
daa
add
add
fcmovnb
add
add
add
inc
add
jp
lcall
outsl
and
mov
incl
call
int3
daa
add
add
scas
stos
or
xadd
push
add
out
pop
aaa
sbb
dec
jbe
xor
jle
loop
aam
add
add
clc
test
test
addb
add
add
movsl
add
icebp
xor
movsb
add
add
add
call
add
push
inc
add
addl
mov
jmp
add
sti
data16
incb
dec
sub
mov
test
sub
jb
cmp
pop
rorb
add
in
sub
dec
ret
outsl
shr
mov
xor
das
add
jmp
add
add
nop
push
and
decl
and
call
out
fucomi
bound
push
imul
pop
xor
std
in
out
dec
or
mov
mov
add
or
lods
jmp
stos
repz
add
cmp
mov
add
ja
adc
pushl
push
add
add
lock
fsubrp
or
mov
je
dec
cmpsl
add
add
or
sbb
add
add
adc
js
add
mov
pop
and
pushl
jmp
add
in
cmp
add
mov
rolb
dec
mov
add
jl
movsl
add
xchg
xor
jle
les
cmp
ja
fcmovnbe
add
ds
sbb
xor
nop
push
sub
add
inc
add
add
mov
add
out
push
add
decl
pop
test
dec
cs
push
pop
hlt
jae
jge
add
add
mov
fnstsw
xchg
lds
test
inc
add
cmp
mov
fldcw
dec
ljmp
cmpsb
add
pusha
add
fbstp
add
inc
add
call
mov
xchg
jbe
jno
ljmp
push
add
jbe
push
test
sbb
cmp
mov
add
mov
mov
in
inc
add
cmc
or
dec
jo
pushl
int3
scas
xor
ljmp
lods
push
add
push
add
and
inc
add
jge
add
jmp
pop
lret
addr16
and
pop
push
lock
mov
mov
roll
jp
add
addb
xchg
add
decl
push
fisubrs
push
pop
add
data16
jmp
add
cmp
and
ljmp
in
jmp
sbb
add
sbb
push
add
fists
mov
sti
add
sub
add
les
movb
add
dec
xchg
lods
pop
repz
and
out
inc
add
add
add
movsl
add
add
jle
rcll
add
push
lret
push
in
clc
sbb
dec
not
mov
add
mov
rcll
mov
add
or
mov
sub
pop
pop
or
mov
jl
xchg
ja
addl
dec
pushf
dec
nop
aas
pop
add
fdivl
jg
xchg
mov
add
int3
dec
sbb
ljmp
xchg
push
lcall
fcoml
and
ljmp
sub
add
sub
out
lock
mov
data16
clc
in
xor
jmp
add
inc
add
jecxz
stos
jbe
enter
stc
dec
pop
pop
pop
imul
add
pop
movl
leave
jmp
inc
add
xlat
add
decl
add
sbb
sbb
add
add
incb
addl
add
sahf
insl
mov
add
movb
test
fsubl
pushl
lcall
pop
fcomi
push
into
imul
dec
idivb
ret
movl
lds
lods
insl
cmpsl
add
sbb
add
addb
pusha
add
incl
add
ds
dec
xchg
popf
in
xchg
pop
or
add
incl
call
add
cwtl
jns
add
add
push
mov
hlt
mov
std
push
enter
sbb
mov
ret
add
add
jb
js
loope
add
call
movsl
add
add
int3
test
ss
addr16
out
xchg
or
push
clc
push
add
lret
mov
add
mov
and
icebp
iret
jbe
ret
add
ljmp
mov
in
clc
fnstsw
add
add
mov
push
jno
fsubrs
jg
mov
in
mov
xchg
jg
nop/reserved
add
int
add
jge
add
xor
add
decl
lea
add
add
jge
add
add
hlt
cmc
mov
decl
jmp
pop
sbb
add
lea
dec
stos
mov
pop
adc
add
repnz
inc
add
add
add
push
std
xchg
iret
inc
add
cs
fwait
jno
lcall
add
cli
inc
add
movsl
add
mov
bound
jmp
add
push
add
xchg
mov
add
add
mov
xchg
int
xchg
xchg
dec
stos
addr16
cmpsl
add
addl
add
add
push
mov
add
and
lcall
add
dec
fwait
push
insb
cmp
clc
mov
mov
rcrb
arpl
incl
call
lea
ds
cmp
push
xchg
dec
sub
add
mov
mov
jle
insl
add
call
ja
xchg
cmp
add
ljmp
inc
add
mov
add
call
add
movsb
add
inc
add
mov
jno
decl
and
push
popf
lahf
dec
test
add
movsb
add
in
xor
push
pop
pop
mov
xor
ljmp
movl
dec
inc
add
mov
add
in
xchg
pop
adc
pushl
mov
pop
or
ds
cmp
jbe
add
lret
push
jo
lcall
push
dec
data16
incl
incl
incl
enter
add
sbb
jmp
push
add
repnz
cmp
mov
out
and
jo
incl
jmp
pushl
jmp
add
in
aad
add
xchg
push
add
pop
das
and
lcall
pop
stc
loopne
cmp
cmp
dec
sahf
roll
xchg
test
cltd
fwait
imul
inc
add
add
les
mov
add
add
dec
mov
lods
arpl
pushl
incl
add
push
add
addl
arpl
decl
mov
adc
lcall
xor
lea
add
cmp
incl
jns
jge
xor
and
in
or
stc
addb
add
push
test
scas
addl
aaa
stos
iret
aas
pop
inc
add
adc
enter
add
add
lea
call
jmp
ljmp
add
je
insb
jno
call
add
mov
into
test
add
jnp
outsl
xchg
xchg
mov
pop
adc
dec
adc
pop
mov
bound
decl
add
add
add
cmp
je
fidivrl
ja
ret
add
xchg
mov
add
sti
add
add
mov
call
decl
je
add
pop
imul
or
add
nop
xor
sti
mov
clc
xchg
test
pop
sub
mov
sbb
daa
add
pop
add
push
in
mov
or
add
xor
call
test
cltd
lods
movl
pop
add
add
xor
add
shrb
dec
rolb
add
mov
add
jne
adc
incl
aaa
inc
add
int
add
add
stc
cmp
xchg
and
jmp
add
sub
mulb
add
into
fcomip
fmull
add
dec
add
ljmp
add
add
add
pushl
add
adc
add
push
jmp
jmp
jbe
mov
sbb
std
popf
repnz
incb
xchg
xor
add
sub
mov
fidivrs
add
ficoms
adc
push
push
mov
add
je
add
dec
xor
pushl
xchg
sub
notl
add
add
add
loopne
outsl
cli
outsb
sbb
xchg
addb
or
ret
add
add
add
mov
or
sahf
push
add
jmp
add
fsubs
test
add
mov
out
dec
mov
add
fnstenv
mov
mov
mov
dec
roll
and
ret
add
incl
call
adc
decl
add
scas
mov
jb
call
mov
inc
add
ljmp
loope
push
add
cli
les
sti
push
add
add
out
cmp
int3
pop
add
push
add
push
fsts
ljmp
call
xchg
adc
decl
and
ljmp
fnsave
xchg
je
call
mov
add
or
mov
cmpsl
add
add
lcall
add
outsl
pop
xor
std
loop
cmp
incl
lcall
js
call
and
gs
movb
add
push
cmp
add
add
inc
add
pushl
inc
add
jmp
sub
xchg
into
mov
fsub
add
lret
mov
mov
cld
fisubl
add
rcl
call
scas
mov
sbb
jns
mov
add
mov
lock
insl
sbb
add
and
lcall
add
in
lds
addl
pop
pop
leave
xadd
stc
divb
add
inc
add
lcall
jl
cmp
jmp
push
and
decl
jp
sti
add
test
cmpsl
add
add
mov
xor
add
add
dec
mov
adc
fcom
mov
pop
stos
add
dec
and
sbb
add
inc
add
lret
mov
add
test
adc
call
add
add
xchg
jl
fidivrs
into
repnz
out
inc
add
add
test
xor
or
add
inc
add
leave
xor
out
or
add
jns
add
cmc
mov
adc
call
decl
and
jmp
hlt
add
mov
add
add
mov
add
in
sub
xor
cmp
pushf
das
insb
addl
icebp
inc
add
int
add
iret
outsl
dec
out
imul
and
call
ret
mov
in
sbb
pop
imul
stc
sub
test
and
decl
dec
daa
add
mov
loopne
lods
and
addl
jmp
add
add
mov
sub
flds
and
outsb
rcr
pusha
add
jecxz
mov
add
jmp
add
xchg
jbe
add
pop
add
add
incl
test
add
in
insb
out
out
icebp
dec
add
add
sub
add
add
mov
incl
call
jae
mov
pop
out
xor
call
push
jno
lcall
cmp
jmp
add
sub
incl
add
add
pushl
inc
add
int3
sbb
pushl
add
add
add
fwait
ss
fwait
popa
add
mov
push
jnp
ds
add
test
pop
add
shll
add
mov
sub
xchg
xchg
add
imul
add
add
dec
lock
inc
add
sub
push
add
outsb
cmc
cmp
add
add
das
cmp
inc
add
ds
decl
rolb
mov
roll
jb
sti
mov
add
add
cmc
loop
cmc
js
inc
add
jmp
repz
xlat
fists
or
add
popf
push
add
xor
lcall
addl
pop
add
incl
xchg
dec
std
mov
dec
test
add
data16
push
lods
outsl
mov
decl
pop
add
add
sub
sub
ljmp
shll
int
lods
imul
xor
pushl
loope
add
sub
xchg
jge
add
jp
xchg
int
add
sub
insl
jne
xchg
cld
xchg
imul
add
push
add
inc
add
mov
add
xchg
sbb
xor
inc
add
lea
jmp
add
xchg
mov
and
jmp
add
add
add
in
sub
cmp
or
scas
xchg
add
lcall
ds
add
ficoms
fwait
addr16
hlt
fbld
call
ljmp
add
add
sahf
ljmp
push
add
out
add
in
pushl
jbe
push
jg
add
shlb
ljmp
xchg
mov
roll
aaa
out
lods
cltd
mov
xchg
sub
jae
call
add
pop
add
sub
xchg
and
decl
popf
or
push
aam
pop
jge
add
loope
sub
imul
mov
add
cmp
add
cmp
add
fsubl
rcl
push
movsb
add
add
in
adc
dec
addb
clc
lahf
adc
dec
mov
jbe
jae
lcall
jne
sti
arpl
jmp
add
sbb
xchg
xor
jmp
add
imul
lcall
xor
pushl
inc
add
jne
pushf
lea
lcall
std
push
xchg
call
mov
add
ljmp
add
push
mov
stos
cmpsb
add
adc
incl
add
add
dec
xchg
sub
mulb
cltd
inc
add
scas
add
incl
adc
jmp
cli
adc
add
add
iret
dec
push
add
pop
mov
jl
add
scas
pop
dec
imul
jmp
test
mov
push
inc
add
xchg
enter
xchg
faddl
decl
add
and
lcall
inc
add
jmp
add
dec
or
add
stos
mov
test
movb
fsubl
pop
aam
insb
or
add
cmp
mov
mov
arpl
jmp
add
pop
sub
add
xchg
roll
jp
add
or
push
mov
add
add
add
decl
add
jl
add
mov
push
add
in
imul
push
test
add
js
daa
add
add
xor
cmp
sbb
sbb
sti
jne
add
icebp
jno
mov
add
lea
incl
mov
push
adc
lcall
xor
call
fwait
jecxz
sbb
je
add
xchg
push
jnp
add
ret
add
inc
add
call
pop
jae
incl
add
add
lcall
cld
scas
jmp
stos
sbb
jg
add
cld
xchg
add
ficoms
add
dec
gs
leave
adc
movb
iret
cmc
ja
lret
js
rclb
fcmovnb
add
add
sahf
adc
jmp
call
jp
in
addb
fcomi
lahf
and
incl
add
mov
and
ljmp
mov
add
add
stos
stos
cmovbe
scas
cmp
xor
jmp
cs
out
mov
xor
mov
pop
add
add
incl
lcall
push
add
xor
scas
jmp
add
add
test
in
mov
cmp
push
pop
lods
addl
addb
cmp
mov
add
ret
add
cwtl
push
add
fldenv
sbb
sbb
add
js
bound
ljmp
add
les
inc
add
ja
add
add
jne
add
add
fcompl
icebp
push
jae
clc
sbb
mov
inc
add
pop
cltd
daa
add
lret
addb
stos
repnz
mov
pop
add
jb
incl
push
or
jl
add
dec
stos
adc
decl
push
rcr
stos
fsubs
decl
daa
add
and
pushl
add
mov
xlat
and
pushl
add
scas
sti
push
add
inc
add
mov
add
repz
call
imul
or
add
jmp
add
jle
add
add
ljmp
add
fistpll
test
incl
mov
add
jmp
add
ljmp
add
add
call
aaa
daa
add
add
pop
jnp
clc
dec
out
or
jmp
add
add
add
cmp
pop
pop
shll
stos
mov
jb
inc
add
stc
scas
rorl
addl
mov
add
push
adc
call
cmpsb
add
lcall
mov
sbb
add
push
cld
lret
cwtl
mov
sbb
stc
jmp
mov
mov
movb
int3
les
insl
mov
add
jbe
dec
insb
loopne
fwait
rcll
js
movsl
add
in
or
dec
xor
lcall
add
jmp
add
in
aas
jae
decl
jmp
or
add
mov
lcall
decl
add
push
jae
incl
add
out
rcrl
adc
mov
cmp
add
sgdtl
jmp
add
dec
loop
inc
add
mov
in
int
ficoml
xor
loope
sbb
add
outsl
insl
roll
ss
loopne
adc
decl
push
ds
mov
xor
ljmp
fstpt
add
stos
sahf
and
ljmp
lret
movl
add
add
mov
add
jle
xchg
test
xchg
fdivrs
ja
add
add
mov
cltd
and
call
lcall
dec
out
fists
push
sub
jne
lds
dec
addl
incl
dec
iret
push
add
fmul
addl
mov
add
ljmp
add
sbb
mov
mov
add
jns
faddp
add
jbe
pop
xchg
stc
xchg
sbb
add
aad
addl
fisubrl
lds
push
add
cmc
iret
addl
mov
push
mov
push
add
pop
adc
fcomps
enter
pushl
adc
jp
out
ficoml
add
add
imul
xlat
push
add
sbb
push
dec
test
movl
add
repnz
pop
cmp
push
hlt
js
fnsave
das
push
add
add
jge
inc
add
adc
add
fldl
in
jb
decl
outsl
add
decl
int
movl
sbb
mull
add
aas
popf
mov
jb
call
out
scas
mov
insl
mov
sbb
add
lret
jmp
add
lcall
sbb
xchg
mov
mov
add
pushf
test
gs
lahf
add
lcall
in
rolb
xchg
ss
loopne
hlt
jbe
mov
lds
sbb
and
call
dec
sub
add
lods
pop
cmp
pop
fiaddl
add
arpl
incl
push
add
push
add
sub
push
add
in
push
add
test
push
add
mov
push
dec
jge
lret
scas
inc
add
adc
adc
add
add
aas
fildll
loopne
lahf
inc
add
cmp
fld
add
push
push
add
and
jp
add
faddl
pop
sbb
mov
jnp
add
inc
add
test
mov
les
movsl
add
call
roll
test
add
and
decl
cmp
cmc
or
pusha
add
add
jg
rolb
in
and
decl
outsb
adc
dec
pop
roll
arpl
fucomp
bound
ljmp
insl
int3
dec
daa
add
test
icebp
out
mov
inc
add
push
dec
lahf
lea
add
cli
and
jmp
out
dec
in
jbe
add
adc
inc
add
or
add
adc
add
sub
xor
lcall
pop
and
decl
addb
sbb
incl
test
and
pushl
lcall
add
pop
insb
frstor
rolb
cltd
mov
loop
out
and
addl
outsb
or
xchg
popf
sbb
add
mov
shrl
push
add
jo
ljmp
call
in
pop
rol
add
out
lret
std
das
stos
push
add
add
add
sahf
lds
lds
hlt
dec
dec
push
jns
add
lods
insb
adc
pushl
xchg
lea
nop
add
mov
movsl
add
cli
sti
cmp
loope
aas
mov
add
add
insl
add
dec
sub
fbld
jmp
add
mov
add
sahf
pop
clc
pop
repnz
add
inc
add
mov
nop
pusha
add
push
add
into
sbb
cmp
int3
sub
add
dec
jmp
mov
fbstp
add
add
mov
add
cs
lock
push
ljmp
xor
add
sbb
mov
mov
add
add
call
push
add
or
test
imul
cwtl
adc
ljmp
jno
pushl
add
loop
mov
and
incl
add
call
cmp
addr16
add
xor
inc
add
leave
mov
enter
pop
or
jmp
ljmp
xchg
inc
add
add
sahf
jb
fstpl
stc
adc
lcall
add
xchg
xor
es
push
sub
xor
pop
sbb
add
add
mov
sub
dec
lret
add
add
call
repnz
in
push
xor
add
add
push
sub
add
call
add
in
mov
ljmp
fwait
mov
bound
jle
dec
sbb
add
mov
imul
and
jmp
dec
loop
fldt
mov
roll
js
sti
mov
add
add
jecxz
adc
xchg
in
jl
stos
and
pushl
call
mov
add
iret
adc
pushl
add
addb
mov
jge
cli
pop
push
add
dec
out
pop
sar
aam
mov
inc
add
add
cmp
dec
dec
add
incl
incl
add
fidivrl
add
ja
mov
add
loope
mov
mov
fcmovne
iret
out
xchg
repnz
mov
aaa
lahf
mov
add
inc
add
test
sbb
mov
pop
hlt
sbb
add
jne
add
call
xchg
and
ljmp
ret
add
das
sub
lods
inc
add
pop
dec
clc
test
pop
test
call
cmp
add
add
mov
lea
add
out
dec
rolb
add
adc
decl
xchg
sarl
add
lahf
xor
jmp
add
sbb
add
pop
mov
mov
pushl
dec
mov
dec
or
cltd
out
imull
cmp
aaa
fmuls
ljmp
test
call
cmp
mov
add
aad
ss
push
add
enter
pushl
add
inc
add
and
incl
add
iret
or
fidivl
inc
add
dec
add
jmp
mov
add
jne
in
adc
add
mov
jo
call
loop
loopne
xlat
popl
sarb
mov
dec
fistl
add
cwtl
mov
jb
call
hlt
push
test
mov
sbb
jl
sbb
add
decl
add
cmp
mov
outsb
cwtl
or
add
add
or
adc
decl
lret
add
and
jg
cmp
clc
ss
and
ljmp
call
add
push
add
das
bound
lcall
jns
add
pop
add
jnp
lret
movb
loopne
mov
shlb
add
leave
sti
pop
mov
lcall
push
dec
pop
rolb
ljmp
and
incl
jg
xchg
dec
add
jmp
add
or
aad
addb
add
xor
ljmp
ret
add
stos
add
decl
add
add
hlt
addb
add
pop
add
mov
sub
scas
push
jge
add
inc
add
add
lahf
fwait
add
jmp
add
data16
cmp
mov
clc
jo
in
mov
aad
sub
jge
cmpsb
add
lock
mov
jno
lcall
mov
add
incl
add
mov
push
add
mov
inc
add
test
pop
idivb
stc
adc
decl
add
cld
imul
movsl
add
mov
sbb
mov
aaa
mov
add
mov
adc
iret
addb
add
pop
adc
decl
or
out
lds
pushf
sub
sub
xchg
insl
out
xchg
mov
add
xor
ljmp
inc
add
pop
dec
add
jmp
add
mov
pop
and
ljmp
inc
add
insl
xchg
jge
inc
add
jmp
add
push
mov
stc
dec
lret
pop
cmp
add
mov
shlb
jmp
add
fbld
add
add
cmp
add
notb
sub
inc
add
js
insl
bound
decl
and
ja
bound
jmp
jp
call
push
mov
add
add
fildl
add
repz
call
add
fistpll
sub
xor
xor
xchg
push
xchg
jmp
ljmp
addl
add
out
or
xchg
sti
js
sub
stos
loope
inc
add
add
xor
cmp
pop
mov
leave
push
mov
add
ficompl
cmp
in
lods
or
jmp
jp
add
add
add
jns
out
out
mov
bound
incl
pushl
rcrl
fcmovbe
jle
add
add
jle
add
add
movsb
add
arpl
inc
add
outsb
addl
fmull
add
cmpsb
add
cmp
add
sub
call
lret
inc
add
movb
mov
add
or
inc
add
and
pushl
xchg
imul
fs
pop
in
in
mov
add
add
sbb
add
cmp
mov
add
xchg
jb
push
out
pushf
aad
cmp
ret
add
push
imul
sbb
add
in
out
cmp
fnstcw
sbb
scas
add
cmp
add
pop
add
sbb
add
in
inc
add
mov
sub
add
mov
ror
ds
xor
incl
add
xchg
inc
add
mov
pop
ss
push
pop
add
add
std
outsl
mov
inc
add
cwtl
loope
jnp
test
add
mov
jmp
pushl
inc
add
add
mov
lcall
push
xchg
inc
add
cli
movsb
add
stos
dec
xchg
pushf
scas
aas
scas
out
in
loopne
sbb
push
movl
fistl
call
or
ljmp
xchg
loopne
pop
pop
xchg
jnp
xchg
add
popf
mov
mov
out
mov
push
cmp
pop
pop
nop
add
popa
add
out
jp
add
rol
add
pop
and
cli
lret
nop
jge
lret
rolb
repnz
cld
decb
int
add
incl
add
addl
add
pop
cmc
in
shr
cmpsb
add
fwait
addr16
addb
add
outsb
test
add
add
xor
ljmp
dec
test
add
mov
add
cmp
outsb
rorb
out
jl
push
imul
add
cmp
cltd
mov
jl
add
enter
in
fwait
insl
cli
mov
movl
add
xchg
or
xor
ljmp
bound
call
add
pop
adc
jle
jnp
add
add
addb
add
add
pop
aad
cmp
sahf
int
add
sahf
in
ret
jns
addl
add
test
loop
cld
daa
add
add
int
imul
and
jmp
add
pop
popa
add
out
cmp
add
add
xlat
test
mov
push
add
and
rclb
fwait
push
jl
test
add
mov
add
jo
ljmp
icebp
mov
aad
sbb
add
ret
add
add
sbb
mov
inc
add
lock
shl
enter
pop
clts
add
in
sbb
add
cwtl
into
out
aam
add
add
lock
incl
add
inc
add
addb
add
arpl
pushl
pop
add
lcall
decl
add
jb
decl
add
mov
add
and
in
scas
mov
rol
add
lods
mov
add
push
add
fwait
lahf
dec
lock
roll
add
xchg
fwait
and
xchg
addb
xchg
cmpsb
add
add
dec
mov
out
icebp
imul
add
sbb
insl
imul
mov
add
mov
add
add
lahf
inc
add
add
in
inc
add
lcall
push
data16
ljmp
mov
add
addl
add
lcall
cmpsl
add
add
rolb
add
add
push
fstpl
out
and
mov
xchg
push
add
sbb
or
test
push
add
mov
add
add
jne
mov
enter
pushl
jns
add
lcall
and
jmp
inc
add
mov
outsb
mov
add
xchg
xor
incl
mov
add
sub
lret
mov
ret
sar
jl
add
into
daa
add
add
lcall
mov
add
call
xchg
xchg
dec
xor
mov
sub
fstl
jmp
add
ljmp
imul
add
inc
add
jno
ljmp
add
rolb
add
xor
incl
add
das
sbb
lcall
add
mov
inc
add
mov
ljmp
pop
clc
push
add
mov
mov
add
addb
sub
mov
les
push
adc
call
add
decb
sahf
into
test
pop
add
cmp
add
push
xor
add
add
call
mov
xchg
mov
add
mov
loop
mov
repnz
addl
pop
xchg
adc
jmp
pushl
add
sbb
js
add
les
mov
insl
push
xchg
add
in
inc
add
mov
inc
add
scas
je
out
push
xchg
jns
add
data16
inc
add
mov
mov
loop
insl
int
sahf
sti
dec
dec
cld
push
add
add
out
stos
clc
adc
nop
jne
arpl
lcall
add
mov
add
cwtl
stos
repz
lds
push
add
ljmp
sub
cmp
xor
ljmp
xchg
adc
addb
mov
add
lcall
pop
movl
push
xchg
push
cmp
test
or
lods
bswap
mov
pop
jmp
jns
add
add
aas
add
add
test
ret
add
cmp
add
int3
and
add
iret
sbb
sub
mov
add
bound
call
leave
push
mov
das
mov
aas
jb
call
call
add
inc
add
lock
mov
mov
add
add
and
incl
mov
incl
test
pop
xchg
addb
pop
popf
lcall
adc
pushl
hlt
in
addl
sbb
add
enter
in
inc
add
add
jmp
sbb
add
xor
add
add
add
add
fdivrp
push
cmp
inc
add
ficomps
mov
mov
es
fld
add
mov
dec
fwait
test
out
mov
nop
popa
add
dec
movl
adc
decl
add
push
mov
add
les
pop
mov
add
les
pop
aad
fwait
les
jg
push
add
jecxz
push
add
fnstsw
enter
add
sub
fstpl
addb
add
ds
jmp
stc
loope
add
jmp
add
add
inc
add
add
push
movsb
add
nop
fsubrs
sub
or
notb
call
add
in
add
incl
push
mov
dec
stos
xchg
loop
push
add
in
dec
aas
sub
jae
pushl
roll
in
movaps
jg
add
incl
add
pop
in
mov
inc
add
mov
xor
call
push
loop
lods
cmp
add
xchg
and
pushl
imul
jbe
mov
pushl
add
push
dec
insl
test
inc
add
sahf
rcrb
dec
xor
incl
xchg
mov
decl
xor
call
jmp
cmp
adc
lcall
clc
lcall
lock
add
notl
int
mov
lcall
sbb
add
jmp
jns
add
add
add
mov
add
add
in
hlt
insl
mov
loopne
fisttpl
add
lret
jmp
mov
push
add
mov
test
ljmp
add
add
sbb
call
or
inc
add
imul
inc
add
mov
popa
add
sub
mov
add
jmp
jno
incl
add
decl
imul
fwait
dec
cmp
aaa
or
divb
add
les
cmpsl
add
sub
fidivrl
add
pop
lahf
mov
add
fcompl
inc
add
mov
decl
add
xchg
pushl
jmp
ljmp
out
popf
push
popa
add
popf
data16
mov
decl
add
cmp
jecxz
jne
add
clc
roll
imul
mov
lret
pop
pusha
add
je
dec
hlt
testb
dec
inc
add
cmc
bound
call
add
add
add
cmp
jno
jmp
xor
add
jae
pushl
add
adc
inc
add
add
inc
add
add
add
mov
lods
fndisi(8087
add
xor
jmp
jle
add
dec
and
imul
add
popa
add
jb
decl
mov
dec
decb
mov
jmp
add
stos
xor
dec
mov
add
add
lcall
xchg
jg
leave
aam
push
jns
inc
add
adc
jmp
fsts
xchg
mov
add
lcall
dec
adc
call
add
mov
mov
scas
sub
jmp
add
repz
jo
mov
nop
movsl
add
ja
add
cld
ja
jo
jmp
add
add
mov
cmp
xchg
mov
add
or
pushf
sarl
int
jecxz
insb
es
jne
mov
jg
fiaddl
lock
add
pusha
add
aam
xchg
negl
jo
call
inc
add
loope
push
fdivs
insl
rorl
ljmp
cmp
jo
dec
dec
add
aas
mov
nop
decl
sti
jne
add
add
lret
stos
add
pop
filds
adc
inc
add
std
hlt
and
xor
jae
lcall
cltd
pop
inc
add
add
mov
push
add
mov
dec
pop
inc
add
pop
xor
and
mov
add
add
iret
pop
cs
push
add
push
in
inc
add
movsl
add
or
adc
add
sarb
pop
add
call
jnp
mov
push
sarb
and
incl
sbb
add
mov
add
bound
dec
and
incl
jmp
add
add
and
ljmp
cwtl
rcrb
pop
mull
call
add
push
add
jo
decl
sub
test
enter
pop
add
xor
dec
jge
add
or
lcall
stos
test
mov
add
add
sub
add
in
fcmovu
or
add
push
jnp
xchg
fsubs
add
aam
adc
pushl
incl
xchg
adc
jg
push
add
fwait
sbb
sahf
fisubrs
insl
inc
add
xor
mov
add
add
call
mov
add
lcall
add
add
push
add
add
ljmp
xlat
pop
add
ljmp
mov
add
jmp
add
scas
je
or
aas
daa
add
add
cmpsb
add
and
call
or
daa
add
add
call
push
and
call
int
mov
add
pop
add
movsl
add
add
xchg
clc
push
pop
jnp
add
add
xchg
addb
xor
lcall
push
dec
cli
or
add
add
add
and
ljmp
into
fstl
add
lea
incl
add
call
xor
lcall
movl
add
xchg
test
clc
xchg
lods
sbb
lcall
dec
popf
imul
int3
adc
movl
add
in
out
mov
add
cmc
dec
jns
add
addl
pushl
add
ja
stc
mov
add
in
mov
add
fimull
cltd
jl
add
call
jmp
mov
sbb
insb
pop
adc
ljmp
lcall
add
add
xchg
icebp
mov
fiaddl
inc
add
mov
pop
xor
pushl
data16
sub
pop
mov
mov
or
pop
arpl
dec
xchg
lods
xor
incl
add
scas
mov
add
dec
adc
call
popa
add
add
iret
xchg
lea
add
inc
add
xor
popa
add
jp
jge
add
mov
sti
jbe
fisttpll
lret
add
add
icebp
cld
inc
add
jns
incl
imul
cmp
jae
incl
jne
add
out
in
lret
int3
adc
pushl
xchg
inc
add
push
add
pusha
add
loopne
and
inc
add
pushf
imul
add
add
incl
lcall
stos
into
xchg
loop
inc
add
push
mov
add
push
add
mov
dec
or
add
pop
add
add
add
add
add
jne
roll
out
cmpsb
add
pushl
cltd
mov
fdivs
and
push
fidivrl
add
lcall
add
jns
add
add
and
pop
add
addl
or
movsl
add
out
push
add
add
decl
add
add
sbb
arpl
jmp
cmpsb
add
je
test
movsl
add
outsb
xchg
mov
mov
out
bound
dec
sub
fwait
sbb
lcall
lret
inc
add
dec
mov
add
arpl
decl
xchg
lds
dec
xchg
lock
or
inc
add
lcall
add
pop
pop
lock
add
fdiv
inc
add
xor
ljmp
sbb
mov
js
mov
adc
call
cltd
divb
inc
add
mov
jmp
jl
sub
adc
add
ljmp
add
sub
add
mov
push
enter
inc
add
xor
push
stc
dec
scas
stc
xchg
arpl
call
jmp
mov
mov
mov
test
xor
pushl
jge
sarl
loop
loopne
lret
add
cmpsl
add
pop
add
je
dec
popa
add
mov
mov
push
mov
add
pop
in
pop
adc
pop
call
add
ljmp
push
ss
add
sub
call
jl
add
imulb
ds
add
add
mov
int3
mov
jmp
add
add
jl
add
notb
add
add
fstl
call
cltd
sbb
add
and
lds
cmp
movl
push
jae
jmp
add
clc
das
jo
mov
cmpsb
add
fcomp
and
jae
call
dec
jmp
imul
mov
adc
leave
iret
mov
scas
xor
incl
cli
inc
add
sahf
mov
add
push
ret
add
xchg
inc
add
fisubl
jge
add
call
xchg
pop
outsl
enter
lahf
ljmp
sti
jecxz
cwtl
data16
and
incl
mov
das
mov
roll
out
lods
sbb
mov
mov
addl
loop
mov
adc
inc
add
mov
and
jmp
movb
stos
pop
in
pusha
add
cltd
dec
or
out
fists
pop
sub
mov
jl
fadd
add
insb
out
fwait
cwtl
inc
add
jbe
dec
jp
add
jo
jmp
add
lcall
add
dec
mov
jne
test
cltd
rorl
add
add
add
mov
clc
add
pop
xchg
xor
decl
sbb
mov
or
mov
insl
jnp
inc
add
sub
stc
or
xchg
cmp
add
push
add
out
and
jmp
push
add
adc
jmp
add
enter
mov
jge
cmc
lock
lahf
sbb
add
jnp
fs
iret
repz
mov
add
imul
jns
add
adc
into
push
stos
sbb
iret
and
mov
add
pop
ficoml
lcall
das
push
xchg
ja
push
add
fld
add
mov
addl
add
addb
mov
cmp
or
lahf
arpl
cli
xchg
out
inc
add
lods
clc
stos
sti
stos
mov
iret
cmp
xlat
xchg
jae
push
popa
add
fistpl
insl
int3
cld
jmp
lret
jp
add
pop
xchg
cmpsl
add
cltd
lock
decl
xchg
jnp
arpl
fldenv
call
les
add
jge
cmp
add
sub
add
loop
add
faddl
add
push
pop
out
cmp
lcall
add
add
in
ffreep
add
add
add
add
xchg
insl
mov
das
push
dec
cli
iret
addl
jecxz
ficomps
dec
lea
ja
add
jl
add
scas
mov
ljmp
and
incl
pop
or
add
add
cmc
xor
outsb
and
call
decl
add
lcall
add
jp
add
add
imul
cld
into
sahf
xor
incl
add
pop
mov
add
lea
imul
add
add
lods
push
add
add
addb
add
cmp
add
shlb
ljmp
add
call
add
leave
sti
pusha
add
icebp
rorb
add
loopne
cmpsl
add
adc
decl
add
mulb
add
add
test
dec
inc
add
test
and
das
movsb
add
das
in
std
sub
out
and
add
shl
add
scas
outsl
bound
lcall
add
ffree
add
mov
add
mov
pushl
lods
lock
add
sub
jmp
add
push
add
loopne
scas
out
sub
xor
ljmp
inc
add
insl
shr
sub
push
add
addl
pop
fcmovne
addb
dec
pusha
add
and
push
add
jmp
add
cmp
add
sahf
push
add
inc
add
pop
ljmp
test
jns
add
js
mov
aaa
enter
add
shrb
add
mov
pop
lcall
add
cwtl
daa
add
push
cld
ret
add
xor
decl
cli
push
add
jmp
mov
add
mov
lcall
push
jge
add
and
dec
test
push
mov
aaa
pop
jbe
sub
add
inc
add
call
add
sub
mov
add
imul
cltd
or
jg
add
add
out
cli
inc
add
rcrb
mov
test
nop
movb
add
incl
add
add
lcall
add
add
sub
add
imul
mov
inc
add
add
jmp
adc
sub
add
inc
add
jnp
add
inc
add
rcll
mov
pop
cmpsl
add
adc
add
cmc
push
add
decl
mov
out
and
incl
pushl
popf
sbb
in
roll
xchg
mov
iret
cmp
int
xchg
aam
sbb
add
pushl
add
call
add
jb
decl
inc
add
lds
adc
or
xchg
mov
cli
dec
mov
addb
add
ret
add
add
sbb
add
imul
pop
add
add
lcall
add
cmpsl
add
add
aaa
and
decl
addb
jne
add
add
jle
push
pop
add
mov
xchg
roll
add
bnd
jns
lods
enter
lcall
add
movl
incl
outsl
mov
add
xchg
and
dec
add
cltd
jns
add
cmp
and
incl
rolb
sbb
jmp
jmp
push
jle
adc
jmp
popa
add
pop
jp
jno
call
rolb
cmp
add
sub
add
add
mov
mov
dec
dec
sti
rolb
loopne
cwtl
xor
div
and
incl
pushl
pushl
int
movsb
add
mov
add
pop
in
pushf
test
and
movsl
add
add
cmp
xchg
out
ret
add
add
mov
add
add
roll
add
clc
inc
add
icebp
lods
mov
adc
loopne
inc
add
je
add
inc
add
or
add
mov
cvtdq2ps
add
lret
mov
or
mov
ss
push
add
and
test
add
cmp
mov
mov
mov
testl
fcmovbe
movl
adc
jmp
add
push
inc
add
adc
xchg
outsb
pop
inc
add
movsl
add
push
add
hlt
mulb
sahf
jb
pushl
and
dec
push
movsb
add
popf
inc
add
dec
mov
cs
push
and
ljmp
dec
pop
int
jb
mov
mov
sbb
dec
push
in
fwait
out
loop
cmp
test
adc
jb
pushl
add
js
add
inc
add
repz
fwait
adc
decl
xor
decl
xchg
xor
mov
mov
add
add
lcall
call
std
adc
incl
jmp
fwait
lods
in
push
add
stos
push
pop
pop
leave
test
addb
add
clc
dec
xchg
mov
inc
add
add
add
sbb
incl
add
add
inc
add
xor
call
push
add
cmpsb
add
add
sahf
or
mov
arpl
call
in
mov
add
pop
or
daa
add
add
je
or
add
jp
mov
lret
clc
call
repnz
or
rorb
sub
add
push
xor
lcall
add
add
jb
lcall
popa
add
or
push
imul
pushl
decl
inc
add
add
stos
add
lcall
xor
lcall
add
add
add
add
adc
inc
add
add
or
inc
add
mov
add
push
push
je
adc
ljmp
adc
ljmp
and
pushl
jp
mov
xchg
lds
push
add
bound
pushl
add
lods
addl
stos
mov
add
icebp
popf
jp
ljmp
add
ljmp
test
lds
and
jnp
mov
add
sbb
and
lcall
jmp
dec
add
mov
add
add
imul
call
push
add
mov
call
xor
jmp
push
ja
aad
add
call
mov
xlat
xlat
pop
les
jmp
lcall
ja
mov
add
add
add
je
and
ljmp
add
lods
push
add
imul
loope
add
sub
sbb
and
push
sub
cmc
xor
ljmp
push
add
arpl
ljmp
add
jmp
ljmp
out
dec
in
and
dec
shr
call
out
jb
lcall
mov
jmp
add
add
mov
add
jmp
add
jecxz
inc
add
sub
xchg
mov
nop
add
jp
test
arpl
dec
mov
addl
push
add
cmp
cmp
add
mov
jmp
jmp
add
add
aaa
push
add
fisttps
fnstsw
int3
arpl
pushl
repz
add
jecxz
movsl
add
add
call
add
add
add
xlat
push
hlt
jo
call
incl
cmp
push
les
pop
or
lcall
les
jmp
idiv
or
decl
xor
pushl
add
test
cmp
xlat
xor
jmp
decl
dec
fs
jp
add
and
inc
add
lret
stc
add
or
fmul
sbb
addb
pop
std
cmc
lcall
lods
pusha
add
sbb
mov
lea
add
aam
inc
add
inc
add
add
and
incl
push
add
js
add
push
add
mov
mov
and
jmp
fdiv
dec
mov
movsb
add
insb
mov
xchg
loopne
sub
dec
jmp
jmp
add
out
movb
add
ljmp
mov
out
inc
add
add
in
addl
sub
xchg
sub
jbe
or
add
mov
pushl
xchg
movb
add
incl
and
lcall
add
sub
cmc
adc
add
mov
mov
mov
add
or
cli
incl
test
mov
mov
add
rolb
inc
add
xor
pusha
add
mov
cmpsb
add
inc
add
sub
sub
pushl
add
ljmp
xor
cmp
xor
cmp
add
shrd
ljmp
into
and
pushl
push
add
in
arpl
pushl
ljmp
add
or
add
mov
add
data16
cmpsb
add
ss
loope
adc
mov
xchg
ret
add
decl
dec
jl
add
add
add
ret
dec
pop
sub
and
fimull
or
push
popa
add
ja
cmpsb
add
dec
mov
and
jmp
add
jmp
add
inc
add
xor
cmp
out
xor
add
cmp
imul
imul
xchg
push
lcall
loopne
hlt
jne
add
aas
dec
popf
cmp
outsb
call
add
mov
add
mov
ret
add
addr16
mov
or
pop
stc
incb
jo
jmp
push
mov
ljmp
incl
ljmp
add
sbb
addl
and
mov
leave
lcall
pop
shr
les
adc
inc
add
add
add
ljmp
jns
js
mov
add
add
pop
add
les
ret
add
pop
fnstcw
mov
add
or
int3
jl
add
inc
add
addb
add
xchg
movl
call
or
mov
pop
stos
pop
pop
cmpsl
add
add
addb
add
arpl
std
add
mov
shrb
and
addb
xchg
cwtl
mov
push
enter
ja
add
add
mov
decl
and
incl
ret
add
xchg
add
xchg
adc
incl
addl
loope
lds
bound
incl
sbb
incl
add
push
xor
add
aad
out
mov
popa
add
leave
mov
iret
aam
add
add
call
clc
add
add
cmp
pushl
add
lock
adc
dec
pop
lods
add
push
sbb
mov
push
add
mov
sub
inc
add
mov
ret
add
add
xor
jmp
lret
and
jmp
add
fcoml
add
imul
add
mov
add
nop
mov
test
leave
test
ja
add
or
add
frstor
ficoms
decl
push
add
jae
jmp
add
add
leave
test
in
mov
cltd
jo
out
jb
call
sub
in
lds
fucom
add
push
mov
add
or
sub
loop
out
into
leave
sbb
cmp
pop
mov
les
into
inc
add
and
call
into
scas
jp
xlat
out
or
add
add
add
lcall
adc
inc
add
call
add
js
rolb
add
mov
xchg
push
jns
lds
add
pop
mov
add
push
add
cmpsb
add
add
mov
xchg
inc
add
mov
out
dec
loop
or
cli
outsl
mov
add
or
insl
pop
inc
add
adc
add
and
lds
in
mov
insb
dec
pop
add
ljmp
mov
mov
pop
fcmovu
fiadds
add
xlat
data16
add
mov
xor
inc
add
ja
addb
sbb
addb
add
mov
loop
mov
mov
xchg
scas
cs
sub
add
lcall
xlat
xchg
setb
add
jmp
add
cmp
push
add
sbb
add
add
int
movsb
add
xor
ljmp
add
lcall
and
sub
push
aas
popf
loop
nop
lahf
push
fwait
cltd
test
cltd
mov
add
add
add
mov
mov
xchg
jp
add
adc
decl
loopne
mov
add
jmp
lds
mov
xchg
pcmpeqw
inc
add
push
add
nop
outsb
lret
push
stc
out
xor
lcall
adc
call
add
xor
add
push
add
inc
add
or
dec
das
xor
pushl
decl
add
loop
mov
add
inc
add
out
movsl
add
test
addb
push
or
add
les
mov
ficomps
dec
ret
add
pushl
decl
xchg
loope
popa
add
dec
popf
lds
popf
cmp
push
mov
mov
add
jl
add
stos
aam
addl
mov
cli
fsubr
out
js
xor
push
popa
add
scas
popa
add
addb
sbb
add
push
cmp
mov
add
enter
add
mov
add
add
call
cmp
cmc
xor
mov
je
push
iret
push
lods
mov
add
pop
pop
fiadds
add
outsl
push
add
sbb
add
out
insl
xchg
xchg
xor
ljmp
dec
jbe
mov
cmpsl
add
push
add
incl
add
inc
add
and
call
xchg
addb
add
popa
add
push
add
aas
push
bound
jmp
add
xor
incl
add
add
push
add
inc
add
stos
mov
cmc
cmp
or
mov
add
mov
xchg
fistps
add
sub
sahf
call
stos
lret
mov
add
movsb
add
add
or
sub
mov
sub
add
add
add
add
mov
inc
add
add
add
pop
ficomps
mov
decl
repnz
mov
jge
inc
add
fwait
aaa
decb
or
push
mov
das
sub
add
lods
jae
jmp
add
fcoml
cwtl
mov
add
lcall
fwait
push
jno
pushl
add
mov
insb
jp
add
mov
or
pop
add
add
push
add
int
inc
add
repnz
add
push
addr16
add
mov
popa
add
lods
imul
add
aam
jae
decl
cmp
inc
add
shll
sub
xor
add
jge
fidivrs
add
add
push
add
fstp
cwtl
iret
shl
jno
fists
add
add
add
add
xor
call
mov
add
std
mov
aad
out
dec
sbb
fcmovu
pushf
push
add
pusha
add
add
cmp
jmp
out
je
add
add
jae
aas
jl
add
or
cmp
lret
cmp
lock
jbe
lret
gs
fadds
inc
add
rolb
add
out
movl
addl
pmulhw
loopne
adc
decl
pop
mov
lahf
jp
mov
and
cs
inc
add
cmpsl
add
jb
pushl
add
fstp
push
add
pop
ljmp
lahf
xchg
sub
sbb
pop
in
cmc
mov
add
add
fisttpll
push
js
add
sti
test
jo
fbld
add
cmp
jge
ret
aas
pushf
je
add
adc
imull
aam
add
jle
sahf
pop
dec
aad
sbb
addb
add
flds
pop
in
mov
add
pop
lahf
test
add
decl
add
pop
push
add
lret
adc
add
int3
mov
add
xchg
dec
outsl
cmp
add
add
hlt
adc
call
dec
mov
dec
and
lcall
lret
outsb
jle
jp
add
addl
mov
pop
lock
xchg
lods
add
lcall
jno
cmp
add
xchg
mov
xchg
pop
rolb
add
add
decl
addb
push
stos
es
ljmp
lret
add
mov
add
out
dec
data16
enter
mov
add
add
outsb
jb
ljmp
adc
adc
cmp
scas
mov
push
adc
dec
ljmp
pop
sbb
xor
call
mov
jmp
das
fldt
in
movl
unpckhps
add
push
push
or
add
xor
call
add
decl
add
add
addb
repz
mov
xor
call
aas
sub
dec
pop
stc
ljmp
add
dec
ljmp
jmp
mov
add
mov
cmpsl
add
add
lret
add
add
jo
pushl
xchg
push
add
pop
mov
sub
loop
mov
add
imul
arpl
jmp
arpl
ljmp
mov
add
arpl
cmp
add
in
sbb
ficoms
jmp
in
mov
pushl
pop
mov
sbb
cmp
add
jb
inc
add
inc
add
lock
movsb
add
in
ret
add
add
lret
add
iret
movsb
add
inc
add
add
icebp
scas
add
call
add
xor
pushl
add
out
cld
dec
mov
loope
dec
mov
add
add
scas
xor
add
jle
leave
pop
add
decl
sub
je
icebp
push
add
mov
mov
xchg
das
lret
add
jns
jge
add
cmp
neg
enter
xchg
dec
pop
test
add
imul
add
jbe
test
add
jmp
in
roll
pushl
inc
add
mov
adc
lcall
sbb
cmpsl
add
add
icebp
pushf
jmp
add
add
pushl
push
pop
ljmp
cmp
add
call
add
add
push
add
sub
add
fstps
add
scas
iret
xor
cmp
push
add
daa
add
decl
and
lcall
movl
cwtl
js
out
mov
push
adc
loope
add
jp
clc
scas
in
push
fdivrs
add
repnz
or
push
mov
add
movsl
add
decl
in
inc
add
jge
add
bound
call
ljmp
cmp
pusha
add
adc
jmp
lds
test
cmp
pop
cs
hlt
icebp
cli
fstpt
call
stos
pop
aad
mov
iret
fisttpl
or
mov
push
mov
add
add
lret
mov
add
add
imull
movsl
add
aad
jnp
add
or
or
add
jo
mov
jo
inc
add
fprem
adc
jmp
add
inc
add
cmpsl
add
xchg
into
mov
add
mov
mov
fwait
cld
jmp
xor
call
add
add
jne
enter
enter
addb
jp
add
mov
movl
add
xchg
or
inc
add
addb
add
es
add
jg
add
add
pushl
mulb
pushl
out
jl
ficomps
iret
stc
mov
add
pop
push
mov
add
xor
je
push
mov
add
mov
add
cmp
add
sbb
add
or
add
popf
jl
add
push
je
jbe
xor
out
je
add
sbb
fisubs
mov
cs
addl
lock
sub
mov
icebp
xor
pushl
push
aam
pop
pop
inc
add
mov
add
ds
imul
ljmp
add
int3
fildl
or
mov
mov
add
je
mov
add
add
movb
and
cwtl
pop
movsl
add
test
fildl
imul
ficoml
add
decl
roll
mov
add
mov
repnz
dec
pushl
enter
test
stc
jp
add
pop
fnsave
add
dec
adc
add
sbb
stos
ds
pop
imul
pop
in
js
test
add
pop
push
adc
add
loopne
das
push
mov
add
add
sbb
out
cmp
and
jp
add
jmp
out
sub
push
outsb
xchg
and
jmp
pushl
add
and
mov
call
inc
add
lea
data16
decl
add
mov
out
pop
add
inc
add
fcmove
outsb
jb
pushl
loope
push
ret
add
push
pushf
cmp
lcall
add
ds
mov
movsl
add
add
jl
adc
out
scas
pop
je
add
imul
add
test
loopne
sahf
add
lcall
jb
jmp
dec
test
adc
xchg
pop
mov
loope
jno
jmp
add
jmp
addb
int
bound
lcall
and
ret
add
mov
cmp
adc
jg
inc
add
add
xor
mov
add
dec
rolb
pushl
jg
add
mov
xlat
in
xchg
mov
jg
int3
jecxz
cli
sub
popf
shll
xor
call
mov
add
xchg
mov
or
add
mov
add
xor
jne
ds
inc
add
add
rcrl
lods
dec
xor
ljmp
add
out
imul
add
pusha
add
imul
gs
add
push
cmp
loopne
adc
call
add
push
shll
xor
decl
add
rolb
ljmp
xchg
xchg
addl
les
pop
imul
xchg
test
mov
fisttps
mov
mov
fmuls
ss
mov
push
add
pushl
imul
sub
mov
mov
pop
sub
int3
push
leave
sahf
push
add
cmp
lret
mov
add
pop
cmc
jns
lahf
leave
mov
dec
ficomps
sub
add
rcrl
lcall
add
push
add
cmpsl
add
scas
inc
add
mov
add
mov
add
sub
lcall
cmp
pop
fdivs
call
add
pushl
ds
push
jb
decl
mov
iret
divl
add
or
arpl
out
scas
adc
inc
add
add
pop
mov
sbb
push
add
jne
add
add
add
rolb
add
movl
sar
or
rolb
sbb
inc
add
imul
add
negl
adc
jmp
add
add
decl
sbb
add
loop
das
addl
aas
loop
jg
adc
decl
add
pusha
add
leave
shrb
add
ljmp
insb
sets
test
daa
add
jp
sub
incl
add
add
jnp
xchg
lock
lock
call
dec
into
xor
jmp
add
add
movsl
add
jno
dec
mov
push
or
push
lcall
add
adc
inc
add
pushl
add
jge
add
call
dec
add
jae
decl
imul
add
jns
mov
cld
add
jmp
call
lcall
dec
rolb
add
push
sub
loop
pop
lock
pop
rolb
in
imul
xor
jmp
add
pushl
out
ja
leave
push
pop
mov
push
ja
add
nopl
add
mov
xchg
addl
jecxz
xchg
mov
push
add
jmp
cmp
repnz
mov
add
and
loope
mov
in
outsb
xchg
mov
xor
inc
add
add
add
add
pusha
add
test
push
add
xchg
pop
leave
add
jae
cmp
cmpsl
add
add
mov
cmp
fwait
stc
xchg
adc
out
jl
imul
ljmp
call
add
jne
les
add
call
call
cmp
add
sbb
add
add
add
repz
jmp
inc
add
cmpsb
add
jbe
add
mov
daa
add
dec
out
jno
decl
xchg
lret
sahf
stos
lock
out
daa
add
call
lahf
jmp
mov
add
call
scas
xchg
cmp
add
dec
rolb
add
push
aaa
adc
jno
push
cld
cwtl
fadds
inc
add
repnz
movl
jne
repnz
add
dec
int3
fucomi
mov
test
add
call
lcall
add
add
insb
sub
jbe
add
pushl
sbb
push
repnz
fnstsw
dec
push
add
fmull
in
imul
pop
leave
or
add
xchg
pop
jp
mov
add
mov
int
mov
add
mov
loopne
enter
cli
jno
jmp
add
mov
out
ficomps
inc
add
xor
add
adc
stc
sahf
mov
add
push
mov
ljmp
add
sbb
addl
cmovb
jmp
sub
call
add
and
ljmp
jl
add
leave
stos
frndint
cmpsl
add
xchg
jns
add
bnd
mov
add
mov
jae
ljmp
divl
push
fadd
add
leave
out
jmp
fwait
repz
enter
jo
call
data16
mov
add
and
pushl
add
push
pop
fdivl
add
add
adc
add
push
and
pushl
dec
and
jmp
add
ficomps
mov
mov
mov
sub
test
or
arpl
fistpl
add
mov
jmp
cs
xor
xor
pushl
mov
dec
adc
incl
add
movsb
add
add
call
add
nop
movl
test
add
add
push
in
cmp
adc
jmp
add
lock
adc
add
incl
pushl
add
lahf
jmp
jmp
movsl
add
add
call
roll
daa
add
add
add
jmp
dec
data16
cltd
add
xchg
aas
out
mov
push
in
shr
leave
lcall
les
rcrl
push
add
mov
add
ficoms
lahf
mull
inc
add
popa
add
out
adc
jmp
add
stos
jne
scas
add
pushl
js
add
roll
dec
mov
jmp
add
mov
cmpsl
add
adc
jle
add
jo
incl
add
fidivrs
inc
add
enter
sub
out
xchg
push
add
pop
mov
add
ja
hlt
or
mov
sub
push
add
imul
incl
pushl
mov
fisttpll
or
add
add
inc
add
pop
jle
add
stos
ja
add
xchg
icebp
je
add
jne
movsl
add
add
jo
call
aaa
jg
adc
call
add
cltd
pop
popa
add
fwait
addl
add
dec
mov
add
push
add
pusha
add
adc
jmp
inc
add
add
lock
sub
popf
xor
push
jge
rolb
add
mov
lea
jg
lods
cmp
add
push
jno
call
test
addl
xchg
int
movq
add
push
pushf
xor
movsl
add
sarl
and
add
lock
jno
cmp
out
scas
cld
movl
lahf
inc
add
fimull
insl
mov
lahf
push
mov
add
add
sub
decl
jo
lcall
xor
jmp
add
das
dec
test
push
lcall
adc
pushl
dec
push
add
cmpsb
add
jecxz
pop
lret
sub
incl
add
pop
xchg
pop
inc
add
pushf
enter
lock
add
mov
add
mov
dec
add
incl
stos
mov
add
push
add
or
add
cmp
mov
lcall
dec
pop
cmp
add
fiaddl
add
ret
out
loopne
popf
cld
mov
movb
dec
pop
and
jnp
cmp
add
xor
push
mov
add
lret
dec
add
call
enter
loope
arpl
call
add
mov
add
pop
xchg
mov
movsl
add
mov
mov
aad
test
jl
aaa
pop
push
add
sbb
add
pushl
add
ficomps
sub
jns
add
xchg
int3
sbb
aam
add
ljmp
lods
scas
sbb
addl
fstl
add
add
add
movb
sub
add
cli
xor
push
cmp
cltd
jno
pushl
add
push
add
incl
cmp
stc
jb
fsubr
push
sub
ljmp
adc
aaa
gs
inc
add
ret
add
mov
xchg
in
mov
cmp
add
pushl
icebp
pushf
jg
add
dec
popf
sahf
inc
add
dec
and
lcall
xor
call
add
add
xchg
mov
pushl
rolb
cltd
icebp
cwtl
popa
add
sbb
dec
jecxz
popf
xchg
loop
cmp
push
adc
decl
xchg
adc
mov
push
pop
mov
add
pop
add
call
lock
pop
add
decl
ja
fmuls
adc
decl
aam
pop
dec
mov
inc
add
add
mov
dec
xchg
aaa
jg
dec
ret
jne
pop
bound
jmp
cmp
add
sahf
pop
mov
add
dec
and
decl
cld
ds
add
int
jae
jle
add
or
jmp
repz
incl
ljmp
mov
xchg
imul
call
add
adc
incl
mov
ds
mov
jae
incl
lcall
add
clc
push
add
push
add
adc
ljmp
imul
add
enter
mov
sbb
inc
add
divl
jo
push
fdivr
sbb
add
enter
mov
xchg
and
dec
dec
cwtl
and
aas
test
arpl
jmp
add
pop
les
enter
pop
rorl
mov
add
add
lret
fistpl
aad
lea
xor
lcall
insb
dec
jns
outsb
adc
add
fisubl
ljmp
add
inc
add
cmp
ljmp
fdivs
fcom
push
add
pop
pop
out
pusha
add
add
jle
lods
or
xchg
ja
add
mov
add
cmpsb
add
adc
mov
add
jp
dec
push
lcall
lcall
mov
cmp
mov
dec
fucomp
rolb
adc
jmp
pushl
add
iret
sbb
add
push
dec
xchg
stos
out
jecxz
sbb
add
lods
xlat
rorl
cs
sbb
ljmp
in
sub
bound
ljmp
aaa
xchg
in
fnstenv
add
add
mov
add
add
xchg
add
sub
jo
ljmp
stc
sub
adc
call
movnti
sbb
data16
ljmp
xlat
xchg
xlat
aad
adc
jl
insl
or
add
pushl
addl
add
stc
push
dec
fs
pop
dec
mov
add
add
leave
xchg
popf
addb
data16
mov
or
xchg
jl
movb
sub
add
mov
jbe
xrelease
scas
sub
add
add
sbb
add
sbb
add
ret
add
add
jmp
ret
add
sbb
mov
add
jmp
and
ds
add
scas
lret
popf
hlt
xor
push
add
jmp
add
add
or
add
mov
xchg
add
add
add
or
rcrb
pop
cmp
cmp
push
add
jmp
add
aad
adc
sti
movaps
dec
add
sti
add
ret
add
sbb
add
add
adc
pushl
mov
ficomps
jmp
stc
scas
add
mov
lahf
xor
fimuls
loope
ret
add
pop
in
adc
add
fnstenv
jl
add
insb
push
mov
lcall
add
adc
sbb
add
add
and
out
arpl
ljmp
movsl
add
and
dec
sbb
mov
and
push
sbb
jle
add
mov
inc
add
lds
scas
sbb
push
sarl
out
loop
xchg
xor
jle
add
add
test
test
jl
in
repnz
addb
xchg
dec
push
add
lret
pop
addl
xchg
hlt
mov
add
sub
add
jmp
add
add
or
dec
lret
inc
add
into
mov
cmc
lahf
cmpsb
add
push
add
add
add
pushl
cmpsb
add
lcall
add
add
ja
jecxz
push
add
sub
jecxz
or
add
mov
push
add
in
mov
mov
mov
adc
add
fwait
dec
addl
jmp
add
xchg
add
add
add
int
inc
add
mov
sbb
add
pop
dec
sbb
add
call
cmpsl
add
or
or
add
mov
aam
pop
das
out
scas
xor
call
jmp
add
xchg
outsl
push
repnz
shl
add
mov
add
inc
add
xchg
cmp
mov
inc
add
repnz
mov
cmp
push
add
shll
mov
mov
push
add
lea
inc
add
jno
inc
add
add
xlat
ljmp
sub
ljmp
add
addl
outsb
addl
add
cmp
sbb
add
int3
sub
or
mov
call
jmp
xchg
mov
add
imul
mov
int
add
mov
add
add
in
jecxz
xchg
mov
sub
add
addb
add
add
and
ljmp
fisubl
add
push
imul
add
inc
add
or
scas
jp
call
mov
sbb
loopne
lods
imul
aaa
loope
aaa
jge
add
adc
incl
add
add
add
pop
xor
incl
jne
pop
add
or
xchg
add
inc
add
fcomp
lods
pop
movb
movl
add
jbe
sbb
add
fdivl
mov
add
sbb
mov
add
iret
fwait
stos
loop
ljmp
mov
inc
add
aaa
js
add
repz
pop
pop
in
outsl
mov
add
fmuls
add
and
call
add
jnp
out
lods
stos
inc
add
mov
add
mov
inc
add
jle
push
add
out
shr
mov
add
shlb
incl
jmp
pop
xchg
pop
add
add
out
mov
cmpsb
add
in
lret
arpl
incl
add
cwtl
cmp
push
add
incl
dec
arpl
ljmp
push
xor
mov
adc
lcall
push
add
or
cmp
push
add
jmp
int3
sub
pop
pushf
cmp
roll
mov
ret
add
add
stos
xchg
cmp
out
and
jb
decl
pusha
add
icebp
jnp
add
mov
xor
call
stos
in
push
cld
aaa
pop
dec
mov
movb
add
addb
add
movsl
add
jmp
add
add
dec
mov
add
in
int
cmc
and
pushl
addl
leave
cmp
add
add
int3
aad
sub
pop
add
cmp
add
outsb
inc
add
test
add
sbb
mov
sbb
arpl
flds
mov
imul
push
dec
icebp
outsl
adc
addl
aas
mull
add
addl
add
pop
shr
test
dec
leave
out
inc
add
aad
add
add
adc
push
add
add
mov
add
mov
pop
cmc
or
xor
jae
ljmp
lds
mov
xchg
pusha
add
shll
pop
sahf
adc
pushl
and
inc
add
pop
jae
ljmp
sub
add
add
mov
in
add
out
in
pop
out
adc
cld
adc
add
push
test
fidivrs
add
mov
mov
jge
add
into
pop
add
sub
add
and
lcall
mov
pop
jl
or
loope
inc
add
fs
ret
add
add
lcall
decl
add
ret
add
add
fisttps
add
roll
add
roll
or
inc
add
add
xchg
push
mov
sub
rolb
nop
push
and
or
sub
cmp
fldcw
insb
jbe
add
push
mov
test
test
movsl
add
add
cmp
add
adc
decl
int
push
add
jo
jmp
decl
fisttpl
add
loopne
sbb
adc
add
pushl
add
xor
jmp
add
pop
add
add
xor
pushl
xchg
lds
movsl
add
add
jbe
add
repz
cmp
data16
incl
les
pop
nop
mov
cmpsl
add
dec
and
mov
jmp
add
add
adc
jl
add
cli
xor
decl
add
hlt
mov
sub
pop
mov
add
cmc
stos
adc
fisttps
push
lahf
add
inc
add
arpl
call
and
inc
add
jns
sti
clc
jo
dec
jp
add
fmuls
filds
daa
add
rolb
pop
pop
jle
scas
shrl
adc
cmp
out
in
mov
push
add
add
add
pusha
add
jl
pop
mov
add
xor
pushl
add
call
jmp
add
pushf
dec
and
jg
rcrl
int
add
add
add
mov
add
push
xchg
fsubs
incl
lcall
sbb
bound
lcall
lock
clc
mov
push
aad
add
mov
mov
add
incl
add
sbb
pop
dec
or
inc
add
jae
incl
add
push
add
ljmp
xchg
inc
add
sbb
popa
add
pop
xchg
push
add
inc
add
mov
add
scas
mov
mov
aas
sbb
add
mov
add
decl
mov
arpl
jp
adc
push
or
add
pop
mov
add
add
jmp
mov
fcomip
mov
aad
pop
ret
mov
cmp
add
scas
add
ljmp
insb
sahf
movl
test
frstpm(287
add
pusha
add
cmpsl
add
jmp
incl
cli
negl
xchg
cli
or
inc
add
es
add
sarb
add
push
add
dec
jp
add
pusha
add
mov
and
decl
into
cmc
fisttpll
add
push
add
addb
add
nop
mov
pusha
add
adc
dec
mov
add
out
jo
fldt
addb
add
adc
mov
add
and
pushl
jmp
add
scas
ret
add
add
dec
push
mov
mov
ret
fcomps
push
dec
and
inc
add
add
cwtl
lods
shlb
add
sbb
add
ja
test
loope
inc
add
xor
and
push
lahf
jge
add
in
mov
add
mov
ljmp
and
jmp
lcall
cmc
movb
add
add
aam
jns
add
add
add
mov
add
fwait
insb
sub
add
cmp
add
addb
add
add
call
jno
incl
js
jecxz
and
ljmp
sub
idivl
add
je
dec
data16
xor
add
push
jmp
aad
add
jg
add
es
add
jge
insb
out
int3
push
cmp
mov
les
dec
stos
sbb
xchg
inc
add
into
and
jmp
rclb
add
mov
xchg
fsub
add
cmc
adc
out
cmp
enter
fnsave
add
call
int3
rclb
add
mov
xchg
push
add
sub
pop
add
inc
add
mov
adc
pushl
sub
fwait
enter
fsubl
add
dec
fcompl
aas
xor
add
hlt
xchg
mov
add
les
push
add
pop
mov
inc
add
lret
les
xchg
outsb
xstore-rng
cmpsl
add
jp
or
sbb
aad
mov
add
ja
cmp
add
add
outsl
jl
stos
rolb
push
add
bound
ljmp
ljmp
add
cmp
aas
loop
movl
cmp
add
add
push
push
lds
dec
mov
cwtl
bound
stc
mov
xchg
int3
add
incl
add
add
lret
sub
push
add
rorb
call
add
jmp
pop
add
add
les
inc
add
sbb
sub
inc
add
inc
add
add
call
mov
mov
ljmp
das
xchg
adc
pop
dec
push
lcall
inc
add
scas
stos
mov
add
mov
mov
scas
ret
add
test
mov
mov
daa
add
decl
faddl
or
add
shl
and
mov
cwtl
lods
mov
mov
add
add
call
add
lret
rolb
ret
add
dec
arpl
ljmp
mov
decl
sbb
inc
add
lahf
adc
jmp
fistpll
stos
jo
pushl
add
cli
xchg
aaa
movb
movl
inc
add
leave
bound
jp
add
xchg
sbb
arpl
out
cmc
sbb
imul
loop
add
call
inc
add
jo
pushl
push
add
loopne
jne
add
or
add
movl
add
add
dec
notb
fdivr
push
mov
lahf
jbe
fisubl
ret
xchg
out
adc
cs
pop
or
xor
js
add
add
mov
scas
adc
aas
into
jecxz
movsl
add
pop
addb
push
test
mov
mov
add
out
icebp
lods
dec
mov
add
roll
pop
iret
lods
bound
decl
outsb
das
pop
ds
add
mov
add
cmpsl
add
xor
add
in
cmp
outsb
test
push
or
lcall
cmp
add
daa
add
mov
jmp
mov
rclb
add
jne
add
sub
add
das
xchg
hlt
stos
cmp
mov
add
ljmp
jg
add
inc
add
in
hlt
scas
testl
ljmp
add
add
ret
addb
add
jmp
add
test
push
add
ss
push
add
andnps
add
or
leave
inc
add
in
sub
pop
pop
adc
incl
fdivl
add
jecxz
mov
cmp
add
sub
jmp
add
jmp
add
push
add
out
inc
add
lret
push
jle,pn
add
mov
adc
ljmp
add
add
jmp
add
mov
add
add
lds
fst
mov
push
add
push
addb
popf
test
mov
add
pop
test
inc
add
test
out
insl
mov
and
pushl
add
jle
imul
inc
add
push
addl
pop
sbb
pop
jno
dec
imul
sbb
add
inc
add
xor
lcall
dec
cs
sub
add
mov
add
incl
lock
add
mov
imul
in
jae
lcall
sbb
add
faddp
add
add
lea
insl
mov
lock
insl
in
push
add
pushl
add
out
add
incl
cmp
into
sahf
pand
jo
decl
or
test
xchg
dec
daa
add
leave
jnp
icebp
sahf
push
adc
dec
xor
push
push
test
add
lcall
and
sub
add
push
repz
ret
add
call
ljmp
ljmp
nop
les
and
in
mov
call
lods
and
jmp
lret
fildl
add
add
push
sbb
add
iret
sub
lret
xchg
cmp
xchg
sahf
ret
add
add
popa
add
and
jg
xchg
xlat
push
add
add
call
negb
mov
pop
add
pop
jmp
add
jecxz
dec
test
shrl
dec
repz
int3
lcall
add
cmc
gs
pop
jmp
imul
loop
push
add
lods
cmp
xchg
or
add
mov
mov
jp
add
addb
add
add
mov
add
inc
add
mov
nop
pop
das
lods
xchg
nop
mov
pushl
ds
add
add
or
add
jmp
add
jnp
or
add
xor
ljmp
add
add
add
pop
loop
push
test
cmpsl
add
in
push
push
in
out
ljmp
add
xchg
sbb
sub
xchg
sbb
add
adc
add
add
add
pop
addl
nop
repz
add
ds
repnz
push
add
add
sub
add
stos
sub
add
add
decl
or
pop
rolb
cmp
add
add
add
cmp
rorl
add
repz
shr
aam
add
mov
mov
add
and
pushl
test
fwait
cmpsl
add
movsl
add
scas
inc
add
add
js
add
fistps
xor
mov
add
inc
add
adc
cmpsb
add
mov
stos
outsl
xor
test
arpl
pushl
stos
repnz
int3
ss
scas
imul
fcoml
lcall
add
fldenv
add
imul
inc
add
in
dec
sarb
mov
call
add
add
pushf
sbb
dec
push
fsts
add
pop
push
add
roll
add
add
popa
add
outsb
pop
mov
add
add
fisttpl
xchg
cwtl
ja
in
leave
in
leave
mov
add
jbe
mov
add
and
push
jge
ljmp
ljmp
mov
add
xor
addb
add
fwait
mov
fisubs
in
or
jne
rcrb
mov
add
add
lcall
jns
stos
sub
xchg
data16
add
add
ds
add
add
jnp
add
rolb
xor
incl
jg
add
add
or
pop
rolb
dec
imul
shl
add
xor
add
add
lds
jb
stc
lock
sti
pop
js
jle,pn
repnz
mov
add
mov
add
fadd
add
push
add
jne
inc
add
and
test
push
adc
incl
add
mov
add
xchg
add
jmp
lcall
add
sub
jae
decl
lcall
add
add
or
lcall
loop
push
add
sub
add
push
jmp
and
scas
inc
add
add
sarb
mov
add
arpl
push
mov
inc
add
sub
mov
adc
incl
add
jae
jmp
add
or
add
dec
sub
add
fisttpl
cwtl
lods
mov
shlb
mov
test
test
add
pushl
lcall
sbb
add
dec
out
sbb
pop
jecxz
xor
call
jecxz
std
mov
push
lret
jae
decl
ljmp
movl
add
xchg
add
add
in
popf
cmp
ljmp
add
jmp
cs
mov
test
xchg
pop
stos
push
add
push
adc
incl
mov
dec
mov
mov
add
jno
jmp
dec
add
sti
mov
test
pop
add
decl
mov
adc
decl
pop
push
mov
clc
mov
into
scas
xor
sti
ja
out
fidivl
test
pop
cmp
add
xor
ljmp
popa
add
aam
add
push
mov
call
add
add
rorl
xchg
push
lock
add
dec
push
pop
push
add
addl
push
add
xor
ljmp
push
aam
add
lods
sub
std
mov
in
dec
push
lahf
js
add
jne
sbb
dec
pop
sbb
pop
lea
add
jecxz
or
stos
loope
sub
push
add
pop
mov
add
pop
lock
add
add
lcall
not
dec
xor
add
test
nop
pop
mov
pushf
xor
cmpsl
add
mov
into
mov
add
mov
cmpsb
add
ljmp
movsl
add
add
pushl
decl
leave
popf
push
clc
push
or
inc
add
sub
add
sub
pop
insb
cmp
das
bound
lcall
xchg
and
cli
xor
ljmp
int3
jmp
call
cli
movsl
add
xchg
pop
ss
mov
add
rolb
mov
or
aas
and
incl
add
push
sub
xchg
sahf
scas
mov
in
ljmp
out
cltd
adc
call
xchg
shr
dec
mov
add
xchg
jno,pn
dec
je
inc
add
dec
lods
pop
cmp
sbb
dec
xor
pushl
sbb
cmp
jmp
pushl
decl
addb
cmp
clc
pop
pop
mov
sbb
xchg
fwait
addb
and
call
add
inc
add
add
cld
inc
add
mov
divb
inc
add
dec
add
xchg
mov
add
pop
popf
sub
pushf
dec
aas
jbe
cwtl
inc
add
jecxz
push
sub
add
sbb
inc
add
add
incl
add
out
movsl
add
call
incl
std
push
iret
adc
mov
jmp
fmull
mov
in
cld
jno
cmp
push
aas
jns
roll
add
jmp
and
pushl
call
lcall
jl
add
mov
jnp
add
cltd
imul
fcoms
icebp
inc
add
mov
add
xor
call
addb
add
addl
sbb
add
data16
add
push
mov
add
fdiv
jp
inc
add
int3
data16
add
and
jmp
add
mov
and
push
add
sti
aam
ja
add
add
add
rolb
pushl
dec
iret
mov
jo
jmp
add
dec
out
jnp
mov
add
movl
dec
jno
decl
sbb
inc
add
rclb
push
add
cmpsl
add
dec
imull
mov
sub
add
int3
roll
cmp
mov
insb
outsb
push
add
sbb
je
scas
movl
jns
repnz
sbb
push
add
cmpsb
add
call
add
adc
pop
icebp
popf
cli
js
and
call
in
test
add
inc
add
inc
add
xchg
jns
add
add
lcall
aas
negb
in
test
push
jle
push
dec
cmp
lods
stos
lahf
jbe
and
push
dec
mov
incl
add
pop
lret
add
xchg
in
fisubrs
ljmp
add
jp
pop
add
add
daa
add
inc
add
pushf
cmp
shll
jo
lcall
popl
fimuls
dec
mov
mov
add
pushl
or
in
clc
dec
jle
add
add
pushf
push
add
inc
add
push
add
fstl
pop
sbb
das
jle
or
cmp
roll
cli
adc
jmp
add
xor
incl
add
int
movb
push
add
icebp
xor
inc
add
mov
incl
add
mov
add
inc
add
cld
in
mov
dec
pusha
add
and
in
and
repz
cmp
add
pushl
ljmp
add
rolb
jp
add
pop
pushf
add
jmp
add
call
mov
inc
add
add
add
negb
pushl
add
and
jmp
fdivl
aas
pop
xchg
rclb
add
add
cli
rolb
mov
and
lcall
jb
dec
adc
std
add
add
movsb
add
mov
add
adc
decl
add
je
pop
mov
sbb
incl
lea
push
push
add
xchg
add
cli
mov
filds
add
fidivl
add
add
add
adc
aas
mov
or
lcall
adc
ljmp
call
outsb
push
dec
iret
and
call
add
daa
add
fsubrl
add
sub
add
addl
add
cmp
repnz
lcall
int3
daa
add
add
insl
mov
adc
cmp
addb
add
repnz
add
addb
dec
mov
jmp
fstps
push
xchg
fidivs
decl
add
mov
nop
imul
add
mov
xchg
lds
push
add
in
test
bound
jmp
jmp
add
lret
or
xchg
outsl
sub
incl
mov
push
xchg
nop
mov
add
jg
adc
mov
imul
jg
add
roll
add
mov
or
add
jge
add
sub
push
mov
jge
add
add
mov
xor
call
clc
push
add
testl
imul
fbstp
and
push
stos
jne
and
out
jbe
addb
jle
outsb
sub
decl
dec
inc
add
lods
mov
adc
out
mov
cmp
into
dec
sub
add
call
lcall
cmp
add
add
mov
add
xchg
push
push
add
cmp
ljmp
imul
jp
mov
int3
jp
add
inc
add
add
add
add
cmp
popf
out
popf
sarl
and
decl
add
push
filds
add
leave
mov
add
and
pop
pop
add
add
add
rolb
stos
pushf
inc
add
arpl
call
add
pop
jmp
add
out
add
test
push
sbb
mov
adc
decl
loop
rcrb
aam
inc
add
jne
outsb
notb
pushl
jbe
xchg
add
call
pop
mov
cmp
fnstenv
je
call
test
enter
adc
jmp
add
out
sub
add
add
inc
add
add
mov
cld
mov
fucomp
xchg
push
add
jae
call
or
mov
mov
out
mov
add
mov
aas
imul
add
popf
fistl
push
or
sahf
movb
add
mov
daa
add
mov
int3
loop
addl
add
xchg
insl
cltd
jb
decl
xchg
shrb
add
insb
pop
mov
pushl
notl
cmpsl
add
add
adc
jmp
les
push
add
aad
xchg
sub
std
pop
and
lcall
add
movsl
add
aaa
and
ljmp
sub
sahf
dec
cld
das
and
data16
mov
add
movsl
add
add
jnp
mov
add
nop
stos
and
ljmp
mov
mov
dec
push
mov
xor
decl
mov
xlat
loopne
sub
test
xor
roll
add
or
inc
add
xchg
aaa
inc
add
sub
pop
and
dec
mov
add
sbb
addl
jge
xor
add
fistps
xor
lock
incl
add
pusha
add
xchg
sahf
dec
nop
out
pop
add
add
dec
sub
add
enter
mov
add
test
cmp
add
aaa
movsl
add
addl
pop
insl
mov
in
and
dec
push
add
sbb
add
js
insl
cli
dec
mov
xor
jmp
add
add
or
sbb
add
aas
adc
pop
bound
call
aas
loop
shll
mov
cli
and
cmp
incb
jo
jmp
add
in
push
add
fmuls
add
add
add
mov
loopne
inc
add
xchg
mov
dec
movl
rcrb
mov
add
fisttpll
xchg
mov
add
arpl
call
ljmp
cmp
sbb
add
les
xor
inc
add
lcall
stos
add
mov
fisubrs
pop
iret
jnp
movsl
add
sbb
iret
sub
add
inc
add
and
cs
aam
add
movsb
add
movsl
add
adc
jbe
mov
add
ret
add
add
ficoms
ss
fadds
push
dec
xor
inc
add
insb
int
imul
add
dec
test
cs
add
fnstenv
jns
inc
add
lret
leave
addb
push
add
nop
and
test
inc
add
xchg
mov
add
add
add
add
faddl
sbb
cltd
aam
sbb
jno
jmp
mov
lcall
cmp
filds
inc
add
add
push
xchg
add
jg
cmp
xchg
pop
addb
add
ljmp
js
aaa
inc
add
adc
jmp
add
add
fisttpll
jnp
addl
push
add
pop
cmp
sbb
inc
add
add
add
and
xchg
mov
data16
dec
mov
push
add
hlt
movb
add
incl
movb
call
jp
or
add
add
add
mov
add
push
mov
insb
scas
cmp
jne
add
bound
call
dec
dec
cs
add
add
pop
and
lcall
xchg
mov
add
loop
ja
add
fwait
push
add
add
mov
adc
jge
add
add
decl
xchg
mov
lcall
inc
add
push
add
add
mov
add
das
lods
cmp
add
inc
add
dec
stos
addl
inc
add
inc
add
jp
add
xchg
mov
add
popf
pop
out
popa
add
ja
sub
or
add
mov
jnp
add
add
and
inc
add
jbe
fnstcw
xchg
push
ficomps
cmp
in
out
push
adc
notb
add
movb
push
pop
add
popl
decl
dec
dec
or
mov
sbb
xchg
ss
lret
pushl
add
pop
dec
sbb
mov
das
or
mov
roll
mov
mov
sub
call
add
loope
mov
jne
jp
pop
std
hlt
push
pop
lret
add
add
call
add
mov
fstl
dec
mov
in
jmp
ljmp
jg
push
add
xchg
jbe
fwait
addl
loopne
or
pop
jo
jmp
add
push
les
cmp
add
sbb
clc
ret
add
sbb
xchg
gs
addl
pop
pushf
cmp
pop
stos
test
mov
decl
add
dec
dec
call
add
xor
dec
insl
lahf
incl
add
jne
and
jmp
jmp
add
outsb
data16
test
stos
pop
adc
pushl
pop
int
jl
mov
pop
sbb
add
mov
add
jmp
mov
pop
adc
filds
data16
or
fsts
add
aam
add
dec
pop
cwtl
out
sub
lods
jne
lcall
mov
add
mov
add
ret
add
stos
push
lea
jmp
cmc
fwait
add
fstps
fiadds
add
