xchg
sbb
dec
scas
iret
mov
inc
inc
add
add
cs
dec
cld
add
out
dec
lret
lcall
jg
rolb
mov
ja
stos
sbb
cmp
gs
pushl
mov
sub
mov
mov
mov
push
leave
aaa
add
add
jb
mov
cmp
ret
into
mov
sub
pop
jg
jg
mov
sbb
mov
push
enter
add
mov
insb
mov
popa
inc
cld
xor
xlat
push
popf
mov
dec
jae
pop
pop
inc
xchg
mov
scas
iret
outsl
dec
jne
add
add
in
sub
mov
mov
sbb
push
push
jp
lahf
push
jmp
addr16
pushf
jge
or
add
ficoml
imul
pop
lds
cltd
sub
sbb
dec
cltd
push
xor
mov
orl
add
std
pop
push
pop
add
mov
and
mov
test
fwait
test
add
add
cmp
pusha
add
add
inc
mov
xchg
mov
scas
sub
mov
mov
fdivrs
adc
mov
inc
add
sub
push
inc
scas
repnz
add
add
mov
ret
mov
mull
mov
or
test
cmp
mov
arpl
mov
mov
dec
xor
xchg
into
cli
daa
mov
add
add
inc
out
test
inc
and
xor
xor
jae
push
mov
in
out
xchg
add
addb
addr16
add
pop
pop
dec
add
mov
add
cmp
jp
fstp
aam
cmp
push
rolb
cmpsl
sbb
mov
ret
xchg
xor
cs
les
sbbl
inc
dec
sarl
pop
xchg
aas
cmpsb
aaa
cmp
push
push
add
mov
jl
mov
mov
icebp
in
data16
jg
cmp
lcall
push
cmp
add
aaa
or
pop
nop/reserved
movsb
xchg
add
add
cli
xor
mov
xchg
add
add
mov
push
insb
addb
jecxz
add
jl
inc
add
ja
pop
xor
mov
add
add
out
stos
and
add
lods
or
add
mov
add
add
push
cltd
push
out
popa
pop
mov
cmp
out
xchg
xlat
jle
sbb
cmpsb
push
push
int3
mov
xchg
loope
in
cmp
shll
mov
scas
ficoms
dec
add
mov
sbb
in
jmp
adc
mov
psrlq
icebp
pusha
add
mov
and
add
sbb
xor
enter
add
add
xchg
in
testl
mov
cld
cmp
sti
fdivrs
inc
mov
xor
mov
jecxz
jp
sub
cmp
add
lock
addb
xor
jo
mov
fcmovu
inc
and
mov
add
ljmp
push
add
add
push
mov
int3
testb
add
mov
pop
cmpsl
rolb
mov
xor
xchg
add
add
xor
es
pop
test
fs
arpl
mov
or
rolb
mov
pop
xor
push
xchg
stos
stos
or
addb
xchg
mov
aaa
mov
jne
sub
xchg
push
jno
ret
out
or
test
cmp
xchg
cmp
data16
cld
jb
mov
push
sbb
xor
mov
arpl
es
mov
pop
fcomps
lds
and
call
push
pop
push
movsb
rolb
mov
mov
mov
jbe
inc
cmpsl
fwait
cmpsl
mov
mov
hlt
pop
cltd
jmp
mov
mov
fwait
fs
sbb
add
pusha
add
sbb
mov
xor
mov
cmp
shll
popa
or
insb
out
and
push
pusha
add
push
in
outsl
femms
adc
mov
cwtl
addb
push
add
push
add
mov
mov
out
jp
fs
les
mov
lods
fldcw
cli
insb
pop
mov
stos
push
sbbl
adc
mov
add
std
jle
pop
push
mov
jp
out
inc
dec
loope
add
add
pop
pop
sbb
mov
xor
in
pop
pop
push
add
sbb
add
mov
add
leave
sub
ss
add
bound
mov
mov
xorl
rolb
mov
mov
addr16
mov
mov
mov
adc
mov
add
addb
inc
mov
int3
inc
jnp
pop
movsb
loop
mov
mov
fdivl
inc
mov
ret
addb
popf
jge
lahf
int
stos
sub
add
push
pop
and
mov
lea
add
push
add
scas
pop
imul
into
sbb
add
mov
pop
sbb
in
test
loopne
mov
push
mov
and
jns
add
cmp
push
add
aas
sub
add
mov
cmp
push
repnz
or
or
cmp
popf
test
add
mov
jae
pop
pop
mov
xor
repnz
add
add
dec
aam
mov
std
sbb
imul
jp
jne
add
add
lcall
mov
insb
push
xor
stos
pop
cmp
add
mov
inc
push
jmp
imul
or
cltd
inc
sub
pop
sub
fnstenv
pop
popa
rcll
es
sub
adc
add
fimull
adc
push
xor
mov
jl
xchg
movsb
push
sub
aaa
inc
inc
sub
inc
aam
pop
call
shrl
xchg
imul
mov
add
icebp
inc
add
push
xor
add
jmp
add
inc
sub
cli
arpl
mov
inc
add
cmp
xchg
add
xor
xor
mov
mov
sbb
pop
cmp
nop
add
xor
iret
mull
push
lahf
sub
repnz
mov
inc
iret
stos
imul
jbe
ljmp
in
inc
add
sbb
rolb
rolb
mov
js
add
mov
mov
ret
pop
scas
dec
jp
xchg
or
scas
inc
mov
mov
push
add
add
jns
jne
in
scas
ds
stos
push
lods
pop
addb
inc
cmp
pop
clc
movsl
fldl
out
ljmp
insb
mov
jle
es
scas
aas
push
je
add
rol
movsb
loop
mov
inc
push
pop
add
add
loop
mov
pop
leave
dec
jo
mov
and
inc
add
aas
add
sahf
xchg
or
pop
xchg
ss
add
mov
mov
add
bound
mov
mov
add
push
or
lret
jp
xchg
adc
push
adc
mov
or
lahf
add
mov
rolb
mov
or
dec
jb
mov
sti
jl
adc
add
mov
push
mov
pop
xrstors
cmp
pop
adc
push
call
pop
push
jnp
sbb
inc
add
imul
jmp
out
movsl
sbb
add
dec
pop
in
pop
mov
aad
cmpsb
shl
rolb
mov
insb
aas
mov
sbb
lret
or
add
les
test
jl
scas
mov
and
mov
mov
mov
add
mov
push
dec
adc
or
pushl
add
faddp
mov
jnp
sub
arpl
shll
cmpsl
mov
push
cmp
das
aam
in
push
add
or
mov
stos
test
and
mov
add
inc
sub
and
mov
rolb
mov
or
inc
add
push
sbb
rolb
mov
add
sub
adc
add
fcomi
test
mov
add
push
sub
add
mov
xor
add
mov
pcmpgtb
add
add
mov
aaa
mov
sub
mov
add
iret
pop
mov
xor
mov
add
add
xchg
add
mov
cmp
mov
cmp
or
jg
cltd
jmp
call
mov
add
mov
pop
jo
mov
add
jge
xchg
xchg
add
add
mov
push
jnp
ljmp
jno
xor
scas
sub
push
int3
or
or
test
movsb
dec
fdivl
add
add
push
add
inc
addb
inc
add
add
add
and
push
inc
add
ljmp
add
mov
lea
fistl
iret
popl
add
lcall
adc
mov
jno
mov
rolb
mov
add
add
iret
loopne
mov
or
int
add
cmp
ret
mov
jecxz
mov
mov
mov
loopne
mov
dec
fldl
add
and
mov
add
mov
jno
add
loop
mov
stos
popf
push
push
add
mov
jmp
add
mov
mov
mov
mov
jp
int
and
mov
aam
je
add
out
push
stos
push
jns
push
add
pop
fwait
mov
add
lock
das
mov
mov
mov
ret
mov
mov
add
out
enter
dec
jns
mov
inc
pop
or
hlt
mov
cmp
rolb
mov
sti
hlt
mov
or
in
lcall
mov
or
cmpsl
loopne
mov
es
xlat
sar
sub
add
icebp
mov
xor
mov
or
aad
int3
insb
icebp
sarl
add
je
divl
mov
psadbw
jecxz
add
lock
pop
movsb
dec
jns
les
add
cmp
dec
rolb
mov
mov
into
pop
dec
sti
mov
test
iret
in
push
les
dec
add
mov
sub
mov
cmp
push
sub
add
adc
cmpsl
xchg
cltd
imul
cmpsl
xor
mov
cld
and
mov
add
add
test
call
pushf
push
lods
das
pop
addr16
mov
pop
js
fwait
movsb
adc
xor
mov
and
mov
aam
les
jg
scas
pmaddwd
adc
mov
in
out
fidivl
add
mov
popf
cmp
sbb
add
sbb
int3
mov
loope
in
fnstenv
mov
add
mov
mov
inc
aad
pop
dec
jns
jno
or
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
iret
add
jns
lahf
scas
xchg
in
out
in
add
testl
sub
popf
mov
sub
aad
mov
add
lock
mov
nop
add
inc
movaps
mov
sub
mov
mov
daa
mov
scas
or
out
bound
mov
mov
rolb
and
out
out
mov
add
xchg
add
xor
mov
add
sub
fdivrs
insb
cmp
xchg
add
adc
adc
mov
add
test
iret
scas
push
add
xchg
add
pusha
add
xchg
or
xor
sahf
out
mov
dec
mov
pop
push
or
mov
jg
lea
add
fwait
sub
gs
mov
rolb
leave
ds
es
out
mov
test
pop
lods
loop
mov
xchg
cmpsb
lds
add
out
jbe
rolb
mov
data16
ret
bound
mov
add
dec
rolb
cmpsl
test
add
in
in
int
pop
movl
mov
add
jae
xor
jno
sub
add
mov
pop
std
incb
cmc
or
jp
sub
or
pusha
add
inc
add
add
fnstsw
xchg
xchg
mov
mov
mov
or
lods
add
mov
sub
in
inc
cmpsb
push
mov
ficompl
add
xrelease
mov
jg
add
mov
push
in
push
insl
cmp
adc
jp
fsts
inc
add
jl
mov
fisttpl
add
add
mov
scas
xchg
add
lock
lock
add
inc
add
xchg
lock
sbb
push
add
ret
ficomps
mov
nop
add
in
pop
fisubrl
jg
add
imul
jb
mov
pop
mov
arpl
cmp
addb
mov
add
mov
sbb
mov
lds
mov
mov
xchg
sarl
mov
sbb
lods
in
jns
adc
add
cli
cltd
mov
jne
lods
push
push
iret
lcall
lods
cmp
dec
insl
scas
pop
movsl
inc
inc
rolb
sub
sbb
add
mov
mov
lods
hlt
add
mov
test
mov
inc
and
add
sti
aaa
pop
scas
or
or
add
mov
mov
add
fadds
loopne
mov
add
mov
dec
lods
push
shll
negl
xor
xor
mov
sbb
sub
inc
add
add
mov
add
mov
popf
mov
mov
adc
sub
mov
mov
dec
pop
sub
inc
add
push
call
cltd
into
xchg
add
and
cltd
aad
lods
jne
clc
out
sbb
loopne
mov
lret
sahf
cmp
nop
add
add
sti
xchg
dec
cltd
mov
add
test
jp
cmp
inc
or
xor
aaa
add
mov
lods
inc
movsb
jecxz
mov
and
add
scas
ja
add
push
jg
add
das
in
sbb
push
les
mov
aas
or
sbb
add
mov
cmp
fmuls
sar
loopne
mov
movsb
xchg
data16
movd
outsl
pop
dec
lret
fsubrs
icebp
mov
pushf
addr16
pop
into
popf
rolb
mov
xchg
subl
test
mov
jo
mov
mov
mov
inc
add
sub
mov
jmp
pop
adc
mov
push
add
addb
fs
inc
mov
mov
jno
lock
push
add
push
push
sub
add
mov
adc
mov
mov
and
xorl
pop
iret
adc
rep
aam
loope
jne
mov
xor
mov
xchg
jg
imul
push
add
and
out
and
mov
aam
je
pop
mov
pusha
add
lods
lret
addb
add
add
and
mov
add
sti
xchg
into
push
out
sbb
out
jnp
add
sub
movsl
scas
jge
add
xchg
xchg
test
in
mov
add
aaa
bound
mov
mov
notl
or
add
mov
mov
inc
icebp
sbb
cmp
add
mov
std
inc
add
xchg
inc
jne
jmp
xor
bound
mov
fwait
add
int3
ljmp
pop
insb
ss
ja
push
pushf
xor
outsl
pushf
pop
and
mov
add
scas
in
mov
je
lods
cli
inc
mov
cwtl
addb
pop
test
push
add
push
adc
mov
add
popf
arpl
add
movsl
loopne
mov
add
and
mov
test
imul
add
fisubs
sbb
sbb
les
add
push
or
jle
arpl
pop
inc
jle
add
xchg
push
xchg
or
icebp
int
push
popa
loop
mov
imul
addr16
sbb
mov
dec
xchg
mov
jge
pusha
add
pop
xchg
add
pop
dec
aaa
nop
add
mov
xchg
add
fisubrl
int3
scas
xchg
jbe
loope
and
mov
dec
cmp
xor
mov
mov
mov
xor
push
add
movsb
mov
inc
std
imul
add
cmp
sub
cmp
jo
mov
pop
in
push
outsb
mov
add
mov
sub
lds
daa
xor
mov
add
mov
repnz
dec
sbb
femms
pop
xchg
rolb
mov
in
jmp
push
add
stos
pusha
add
jno
outsl
popf
rolb
mov
rolb
push
inc
add
add
jo
mov
or
jp
aas
ficomps
xor
mov
lahf
push
pushf
mov
lahf
pop
es
outsl
pop
push
sub
pop
xor
and
mov
push
add
pop
add
push
add
add
push
test
push
dec
jb
mov
rolb
adc
cmpsl
repz
out
adcl
push
mov
std
les
cmp
add
repz
jb
mov
sub
jmp
iret
fsubl
ljmp
aad
pushf
push
jnp
je
push
push
jb
mov
push
pop
pop
repnz
adc
mov
or
add
lea
add
mov
xchg
dec
mov
adc
xor
mov
test
out
mov
and
add
stos
pusha
add
push
incb
leave
adc
mov
mov
das
mov
add
jp
add
pop
xor
mov
mov
pop
sbb
lock
push
add
add
mov
pop
and
xchg
add
negb
mov
sub
push
add
jg
loope
add
mov
add
das
test
add
jp
shl
jmp
pop
stos
adc
push
stc
std
out
loop
mov
test
lret
or
aam
add
rolb
mov
call
int
into
xlat
xchg
add
and
mov
xchg
inc
add
sbb
xchg
es
test
add
and
mov
int3
iret
cmp
xor
mov
jns
mov
add
scas
data16
fwait
adc
inc
lods
sahf
mov
gs
mov
add
icebp
iret
jnp
pop
mov
dec
and
mov
and
mov
add
add
pop
fsubrl
in
lret
push
add
dec
or
push
add
xor
mov
cmp
jg
js
or
xchg
push
popf
xor
mov
jno
arpl
insl
addr16
pop
lock
arpl
mov
mov
aam
sahf
int
add
pop
jnp
test
add
mov
mov
mov
addb
cmp
cmp
rolb
sub
cltd
test
add
stos
adc
mov
inc
add
add
xchg
mov
mov
mov
imul
call
call
mov
push
scas
outsl
movl
mov
pop
fidivs
add
xor
mov
xor
inc
mov
lahf
xchg
dec
outsl
xchg
push
mov
dec
mov
push
ret
popf
jne
lahf
negl
cli
std
fwait
cld
rolb
mov
lds
ja
jno
gs
inc
repz
cmp
xchg
test
add
mov
adc
mov
js
in
push
cmp
and
mov
pop
das
repz
in
sub
mov
xor
mov
xor
pop
movsb
pop
pop
xor
scas
pop
je
sbb
addb
mov
sbb
mov
out
dec
xor
add
add
sbb
add
out
xlat
lahf
xor
add
cmp
jg
xor
mov
addb
stos
mov
and
rolb
mov
in
add
into
rolb
mov
popf
fldcw
test
add
pop
movb
cmp
stc
call
rep
pop
mov
out
push
dec
ret
daa
imul
cmp
pusha
add
push
xor
mov
xor
mov
add
add
mov
mov
outsl
push
pop
int3
movsb
push
add
in
inc
jle
out
arpl
outsb
sub
and
xor
insb
mov
jmp
or
xchg
mov
mov
lods
rolb
ss
xor
data16
add
xor
mov
add
dec
sbb
pop
cmp
dec
mov
add
mov
xor
mov
inc
add
mov
mov
mov
add
add
or
mov
xor
mov
xor
cmp
les
add
add
and
aam
or
add
add
mov
mov
push
add
pop
or
xor
pop
dec
shll
mov
test
mov
sbb
add
outsl
pop
push
repnz
or
jo
mov
mov
add
or
add
out
add
add
mov
pop
or
in
sahf
mov
cmp
add
into
sub
sub
add
sbb
sub
imul
mov
pcmpgtw
xor
mov
test
pop
push
out
pop
shll
out
int
enter
rolb
mov
loopne
mov
fstps
cmp
add
pop
adc
mov
fs
cmp
pop
push
xor
cmp
daa
mov
mov
lock
in
and
mov
lcall
popf
andl
popf
scas
cwtl
lods
stc
mov
pusha
add
movb
mov
mov
push
idiv
in
movsb
sbb
jb
mov
cmpsb
loop
mov
lods
cmp
into
jmp
rolb
mov
mov
ret
pusha
add
mov
das
arpl
inc
add
xor
out
test
int3
ret
and
mov
add
ret
addb
in
mov
pop
add
inc
sti
ss
xor
mov
add
rolb
mov
add
je
add
ret
outsb
xchg
sub
add
das
popf
leave
dec
dec
repz
gs
negb
out
outsb
cmp
mov
out
lods
jecxz
es
add
cmpsl
jo
mov
mov
mov
out
add
jne
clc
fists
mov
lret
pushf
loop
mov
mov
inc
add
dec
dec
and
mov
dec
cmp
add
mov
pop
adc
mov
push
inc
gs
jle
pop
adc
mov
lock
mulb
add
nop
add
add
xor
mov
fwait
mov
mov
mov
add
inc
add
sti
xchg
adc
mov
ss
and
mov
lcall
xchg
addb
ss
out
push
jp
xchg
es
add
adc
jne
xor
outsl
sbb
ds
adc
sbb
imul
sub
mov
cli
add
mov
or
xchg
add
mov
mov
add
mov
shrl
mov
popf
test
xor
mov
testl
gs
mov
add
int3
xor
mov
out
not
jp
pusha
add
jle
add
iret
insb
jb
mov
sbb
in
pop
rcr
adc
inc
add
add
imul
int3
push
add
mov
jl
add
mov
xor
dec
push
rolb
mov
fidivl
inc
rcrl
xchg
mov
mov
mov
les
mov
cltd
testb
mov
test
pop
jge
add
mov
mov
das
jp
xor
mov
add
aas
mov
jge
add
pop
jle
test
rolb
mov
sub
stc
cwtl
add
mov
add
add
and
bound
mov
mov
fsubs
or
mov
test
push
mov
sbb
mov
lock
xor
mov
mov
push
mov
add
pop
in
jnp
add
add
jle
xor
and
cmp
and
mov
std
je
lds
adc
mov
mov
xchg
jl
add
dec
int3
mov
push
dec
inc
add
push
lock
fsubrp
push
insb
pop
mov
add
out
lds
in
cli
ret
jb
mov
mov
pop
fildl
fidivrs
jl
test
mov
mov
mov
addb
sti
sub
in
rorl
mov
xor
daa
stos
mov
cmc
inc
sbb
pop
imul
mov
imul
xorl
faddp
add
cmc
cmp
insl
adc
mov
or
add
stc
or
dec
inc
lcall
cmc
out
adc
jns
loop
mov
outsb
stos
jecxz,pn
test
daa
daa
pop
jno
int3
addb
push
pop
addb
dec
xchg
or
mov
add
test
cld
enter
xor
pop
in
add
fidivrl
inc
add
add
or
loop
mov
ficoms
pop
xlat
dec
and
mov
mov
pushf
inc
adc
call
mov
sub
les
inc
add
sti
test
popa
out
cltd
je
repz
ljmp
inc
test
fistpll
mov
add
or
or
sbb
addb
or
inc
rolb
mov
data16
out
add
imul
sbb
inc
add
mov
fstl
sub
enter
movsb
out
fwait
xchg
jp
add
cmp
es
add
cwtl
xchg
mov
mov
cltd
lock
add
add
je
xlat
out
lcall
aaa
mull
add
mov
mov
mov
sbb
mov
mov
and
dec
jnp
lods
roll
fcmovnb
sbb
iret
push
pop
sbb
mov
std
stos
into
pop
and
add
mov
sbb
mov
or
dec
ljmp
es
or
mov
add
mov
or
mov
add
rolb
mov
rorl
pop
cmp
mov
push
adc
dec
xchg
push
and
mov
inc
jmp
lods
and
add
cltd
adc
pop
mov
pop
xchg
test
pop
inc
add
dec
insb
mov
xchg
add
add
sub
sub
jle
mov
push
mov
xor
push
add
test
xor
mov
mov
filds
insb
dec
mov
sbb
leave
imul
xchg
and
sub
and
mov
jecxz
mov
jae
cli
aad
int
mov
aad
adc
test
pop
rolb
mov
add
pop
addb
mov
mov
cs
add
mov
mov
lret
add
mov
aas
push
mov
stos
stos
je
mov
mov
pop
loop
mov
dec
push
cmp
mov
push
push
pop
xor
xchg
and
mov
add
add
and
mov
mov
lea
add
into
jo
mov
outsl
sbb
pop
jl
jns
xchg
pop
std
pop
adc
mov
add
dec
ja
aam
add
add
popf
push
idivb
adc
test
mov
lock
cli
pop
and
add
inc
dec
pop
cmp
out
add
pop
clc
pop
lret
imul
cmp
jno
mov
jns
jnp
add
pop
subl
mov
add
mov
xor
int3
fwait
inc
mov
ja
imulb
ljmp
add
testl
and
mov
mov
shrl
mov
bound
mov
das
popf
pop
lods
xor
mov
push
movsb
aam
cmp
push
add
and
dec
mov
mov
add
mov
add
inc
add
xchg
popa
data16
fs
add
mov
add
add
arpl
sbb
push
neg
outsb
enter
pop
pop
divl
sbb
add
mov
or
xor
dec
mov
imul
mov
dec
test
pop
cld
adc
add
adc
mov
add
xchg
push
iret
test
jae
add
mov
mov
mov
popf
pop
mov
push
int3
aas
and
mov
mov
add
insb
jmp
add
add
inc
mov
mov
mov
xchg
or
sub
add
mov
mov
mov
xchg
and
lea
pop
push
inc
add
add
lahf
inc
xchg
in
inc
add
fbstp
sbb
push
add
jle
cmp
mov
inc
les
mov
imul
popf
push
push
insl
add
mov
add
dec
mov
add
into
fisubs
mov
push
adc
add
add
pop
pop
sub
add
imul
sub
rcll
add
popf
lds
bound
mov
ss
or
lret
and
mov
leave
popa
decb
int3
pop
ja
add
sbb
add
mov
add
mov
in
data16
xlat
addb
jne
ja
lock
add
icebp
cmp
test
das
adc
cmp
outsl
cmpsl
lahf
xchg
cwtl
adc
mov
mov
cmp
fucomi
clc
clc
jmp
add
out
xlat
sub
add
pop
inc
enter
xchg
mov
mov
xchg
bound
mov
jnp
cmp
scas
test
daa
xor
jmp
repnz
leave
mov
mov
pop
lret
test
xor
mov
pop
les
in
fs
gs
mov
jno
ljmp
inc
add
xorl
xlat
faddl
jae
add
lahf
push
hlt
mov
mov
lds
and
push
insb
rolb
mov
add
flds
stos
adc
les
add
add
mov
ret
mov
mov
add
push
xchg
mov
dec
inc
loop
mov
in
addb
data16
and
mov
cs
mov
xor
sub
pusha
add
mov
inc
iret
ja
pop
jmp
add
outsl
xor
js
stc
adc
mov
add
add
add
adc
mov
data16
sbb
sub
ret
popl
mov
int
adc
idivl
stc
dec
div
mov
add
mov
add
mov
add
add
pop
aas
fadd
jecxz
xor
add
sbb
scas
adc
sbb
inc
add
mov
jns
add
mov
imul
fsubs
lods
testb
jno
and
mov
add
cmp
xor
mov
jb
mov
ds
cmpsl
pop
call
push
imulb
and
rolb
mov
add
mov
or
jg
add
push
add
hlt
bswap
and
lret
out
sbb
add
add
mov
mov
mov
mov
add
addr16
loope
jle
add
add
mov
mov
mov
mov
jns
and
add
xor
push
ret
popl
stos
roll
jmp
xchg
add
aaa
nop
add
xor
dec
cmp
mov
shl
add
shll
adc
mov
iret
in
sahf
sahf
cs
les
mov
sbb
pop
and
mov
jl
inc
cli
mov
add
fdivs
mov
pop
inc
xor
push
sub
add
mov
jge
mov
pop
pop
repnz
xlat
cmp
mov
mov
mov
mov
jnp
xchg
mov
jmp
lea
cld
and
mov
stos
test
jmp
lods
mov
fnstcw
test
pop
jne
xor
mov
sbb
dec
cmp
push
out
fs
loop
mov
mov
stc
int
addb
xchg
testl
negb
std
mov
test
fldz
or
inc
add
movsl
jno
addr16
add
add
push
add
nop
add
aam
enter
add
add
or
push
mov
xlat
adc
out
mov
push
mov
xor
sub
cld
mov
add
adc
jns
cmp
xchg
leave
push
mov
inc
mov
lea
mov
add
mov
jmp
dec
mov
mov
mov
cwtl
repnz
mov
adc
mov
and
mov
movsb
lock
hlt
xor
mov
rorl
xor
add
scas
das
cld
xchg
push
add
stc
mov
jg
lret
ss
mov
mov
cld
push
popa
sub
mov
addb
in
push
cmp
stc
inc
pusha
add
adc
mov
or
or
sti
mov
sbb
pop
das
inc
test
jl
add
mov
add
add
inc
js
aam
mov
call
in
dec
lret
mov
stc
dec
out
adc
pop
lock
packssdw
jge
mov
cmp
repz
scas
popf
rolb
test
and
adc
add
mov
cmp
mov
cmp
fs
mov
out
mov
aaa
inc
add
sub
xchg
adc
mov
fs
add
push
mov
mov
xor
adc
sbb
fimuls
sbb
xchg
jg
sub
cmp
loopne
mov
mov
mov
es
dec
icebp
add
push
test
adc
push
sub
inc
add
mov
mov
add
jg
and
mov
or
adc
mov
pop
sub
lret
cmp
cmpsb
cmp
add
add
arpl
decl
aas
jo
mov
mov
imul
les
dec
sarl
scas
into
sub
mov
inc
call
mov
scas
dec
lret
sbb
mov
cmc
ljmp
lahf
pop
add
and
fcompl
cmp
inc
xor
add
and
mov
sub
rolb
xor
dec
fs
ds
jmp
mov
into
dec
xor
jle
fwait
xor
mov
lret
test
xchg
stos
hlt
enter
sbb
mov
repnz
add
mov
mov
mov
sti
inc
rolb
mov
loop
mov
rolb
mov
push
add
ds
xor
add
push
jmp
ds
pushf
js
cmp
add
adc
sbb
jns
and
and
into
inc
rol
pusha
add
push
stos
dec
inc
loopne
mov
cmp
mov
mov
mov
jo
mov
push
cmp
addb
sub
lods
nop
add
mov
shl
cmp
adc
mov
push
mov
cmp
push
das
cmp
mov
fisubrl
lcall
mov
sbb
sub
rolb
mov
mov
jecxz,pn
cld
iret
mov
pop
pop
pusha
add
mov
imulb
cmp
or
fsubrs
popf
lds
add
mov
sti
cmpsb
pop
mov
aaa
inc
fsubl
mov
arpl
leave
data16
xor
test
add
sub
rolb
mov
or
mov
push
jne
jo
mov
mov
jmp
mov
mov
add
dec
fwait
dec
lods
ds
scas
cmpsb
inc
inc
add
dec
fincstp
push
insl
lret
jnp
jno
and
ja
cli
lcall
rcll
xor
mov
mov
adc
mov
insl
cmp
mov
pop
ja
push
mov
cmc
adc
inc
mov
push
add
add
mov
push
xor
mov
insb
inc
adc
xor
scas
insb
inc
adc
mov
and
inc
jg
icebp
lods
imul
cs
mov
jle
xchg
aad
add
lret
outsl
adc
aad
popa
test
fidivs
jns
add
mov
add
stos
push
es
ss
clc
or
lods
add
mov
mov
mov
add
jmp
add
loop
mov
push
adc
fiaddl
push
jbe
pop
idivl
mov
mov
sub
and
mov
and
test
loop
mov
add
mov
add
add
cmpsb
jne
xchg
jne
and
push
lret
cmp
adc
mov
enter
push
add
add
mov
ret
push
mov
dec
mov
mov
jp
cli
imulb
mov
mov
sub
sub
inc
xchg
out
add
cli
mov
test
pop
mov
add
mov
push
mov
add
mov
testb
adc
lret
xor
lock
das
adc
call
inc
add
pop
test
mov
in
push
pop
test
std
es
in
xor
jge
pop
lahf
push
jbe
add
mov
push
add
mov
mov
push
bound
mov
dec
fadds
movsl
arpl
mov
ja
add
inc
insb
add
mov
xor
scas
into
and
mov
cmpsl
inc
mov
call
adc
add
add
cwtl
mov
push
test
add
movsl
mov
sbb
jmp
adc
mov
adc
mov
inc
add
add
shl
mov
mov
pop
lock
mov
lcall
fs
and
sub
inc
add
mov
loope
loope
jp
pop
dec
lds
sbb
out
sbb
sbb
xchg
xchg
add
sub
push
testb
daa
inc
out
mov
dec
clc
addb
out
call
push
mov
imul
lods
mov
mov
fs
add
dec
out
lods
lcall
rolb
mov
mov
xchg
add
mov
add
mov
add
mov
pop
xchg
inc
adc
daa
mov
sahf
dec
sbb
jle
pop
pusha
add
test
daa
mov
add
add
add
add
mov
or
int3
mov
insl
jno
or
cmp
std
jbe
cli
gs
ret
push
mov
mov
or
adc
mov
out
add
clc
fs
lock
xor
fisttpll
addr16
out
es
xlat
jmp
pop
stc
nop
add
stos
clc
std
push
call
sub
push
xchg
repz
xor
mov
mov
push
jecxz
jp
jnp
jnp
adc
mov
jge
xor
xor
mov
insb
xchg
sub
push
sbb
add
add
mov
lock
inc
lahf
pop
addb
xor
add
pop
and
add
mov
sub
jns
cmovnp
outsb
and
jge
loopne
mov
je
push
in
fucompp
or
add
les
push
add
ja
loope
add
loope
inc
push
add
dec
subl
inc
inc
xchg
inc
clc
in
aam
movb
jge
imul
xchg
ret
jne
xor
mov
int
out
add
mov
or
xchg
mov
xchg
cmp
shrl
pop
ja
aam
sub
mov
pop
cmp
icebp
cld
adc
mov
es
push
add
lock
add
pushf
sbb
jle
mov
cli
pop
xchg
and
mov
mov
inc
lds
sahf
ljmp
add
repz
inc
add
add
test
or
sub
jae
xchg
cltd
adc
fwait
xchg
mov
das
addb
mov
popf
je
sbb
xchg
jae
cmpsb
or
mov
mov
add
pusha
add
mov
xchg
sbb
fistpll
dec
add
add
hlt
rolb
mov
fnstenvs
clc
repnz
sbb
in
loope
add
mov
mov
mov
call
add
inc
bound
mov
mov
add
dec
jg
add
xchg
pusha
add
mov
fsubrl
test
hlt
daa
das
mov
cmp
sub
mov
add
aaa
pop
pop
bound
mov
iret
jge
lods
popa
and
add
pop
jg
cli
mov
enter
add
mov
pop
roll
add
fwait
aaa
pusha
add
aas
scas
xlat
not
add
out
out
cmp
lods
sahf
stos
sbb
cmp
add
mov
push
inc
jmp
jnp
push
add
and
in
jae
leave
popa
dec
sub
lcall
push
xchg
pushf
pop
xor
xor
lcall
xchg
add
shl
or
in
stos
dec
mov
fdivl
mov
push
xor
mov
out
mov
mov
cmp
out
movsl
inc
cmpsl
dec
test
mov
mov
scas
test
and
mov
mov
js
add
add
fimuls
cli
mov
mov
icebp
lcall
cmp
daa
notl
pusha
add
xchg
mov
xor
mov
out
mov
add
jb
mov
push
dec
pop
adc
and
pop
dec
arpl
adc
lea
sbb
push
pop
lods
xchg
scas
xchg
add
repz
repz
xlat
lods
aam
sahf
cmc
add
arpl
adc
add
xchg
ret
pushf
mov
add
mov
call
adc
add
data16
int
add
or
dec
mov
mov
mov
jle
mov
mov
test
add
sub
mov
addb
arpl
add
xchg
push
add
data16
mov
outsl
push
mov
mov
mov
add
mov
add
mov
jns
das
fisttpl
mov
adc
and
pop
jne
mov
add
sub
jmp
push
xor
mov
add
rolb
ficoml
ret
xlat
mov
dec
insb
sub
add
add
mov
lret
iret
jb
mov
xor
movsl
mov
add
test
xlat
jmp
cmp
push
sti
lahf
sti
in
and
jns
mov
xchg
add
add
mov
daa
add
inc
loope,pn
jo
mov
insb
xor
inc
add
insl
sbb
pop
out
stos
leave
sub
sbb
mov
aad
add
out
int3
imul
sti
push
add
push
rolb
push
enter
mov
idivb
add
pop
fidivrl
imul
mov
cmpsb
and
mov
les
adc
shrl
pop
int3
cwtl
into
mov
arpl
xor
mov
add
mov
dec
push
mov
and
mov
push
jo
mov
leave
xor
mov
add
cmpsl
xor
cmp
add
loopne
mov
add
mov
add
loopne
mov
push
xor
push
inc
add
adc
mov
cmp
hlt
outsl
stc
gs
mov
dec
out
cmp
mov
cltd
sbb
xchg
pushf
into
jne
xchg
add
mov
pop
addb
pop
call
mov
mov
adc
mov
adc
add
iret
xchg
dec
push
cmp
lahf
push
dec
stc
dec
repz
outsb
mov
mov
in
pusha
add
in
cmpsb
rolb
mov
aad
or
out
in
pop
pop
xchg
scas
adc
mov
addb
pusha
add
add
out
xor
fxch
mov
push
adc
mov
pop
mov
mov
negl
lcall
pop
arpl
dec
jno
sbb
adc
aas
xor
and
add
call
xchg
aam
mov
cmp
mov
lret
xchg
xchg
jmp
cltd
add
add
std
jnp
test
loop
mov
sbbl
dec
and
ret
dec
adc
mov
gs
cs
stos
addl
push
add
add
rolb
mov
add
lds
testl
add
dec
push
cmc
push
and
mov
add
mov
push
outsl
and
or
pop
and
mov
mov
orl
mov
sub
or
and
test
movsb
push
mov
mov
mov
out
leave
or
loopne
mov
sbb
inc
sub
add
push
sub
sbb
pmovmskb
cs
cld
push
push
and
daa
sahf
jb
mov
aam
incb
in
mov
mov
adc
mov
sbb
pop
test
add
push
mov
into
or
mov
xchg
dec
ret
enter
repnz
or
pop
lahf
and
sub
adc
mov
loop
mov
fwait
lds
push
add
scas
in
outsl
lods
inc
xor
jmp
sub
cmpsl
cltd
pop
xor
inc
add
mov
pop
pushf
outsb
inc
adc
test
lret
jp
and
add
dec
and
jo
mov
or
mov
mov
or
cmp
add
jmp
sbb
rolb
mov
out
add
jmp
rolb
mov
imul
outsb
negl
pushf
inc
mov
inc
rolb
jp
mov
push
push
mov
push
add
push
int3
mov
push
enter
add
mov
pushf
jns
xchg
lods
sbbl
lods
movsb
stos
cmp
mov
cmc
inc
jns
add
dec
sbb
xor
movsl
stos
mov
ja
cld
lret
fldcw
or
jle
out
addl
aam
add
dec
jae
add
lea
inc
xchg
jae
movsb
fsubs
pop
mov
sbb
add
ficoms
lods
jmp
lahf
lret
add
add
add
mov
sahf
test
jecxz
xchg
out
xor
mov
pushf
push
rolb
inc
mov
inc
jmp
imul
push
push
jnp
mov
cmp
inc
add
xor
mov
add
sbb
mov
test
add
mov
js
fldcw
dec
iret
std
in
outsb
aaa
out
arpl
icebp
xor
mov
test
js
mov
inc
add
jmp
mov
mov
mov
mov
add
push
cmpsl
dec
cmpsw
scas
sub
sahf
dec
jg
sbb
leave
sbb
xor
cwtl
mov
pop
lods
loop
mov
nop
add
xor
mov
xor
sub
push
pop
stc
pop
imul
mov
clc
sub
jnp
daa
xor
addb
cli
fsubrl
mov
mov
test
into
loope
cmp
test
insb
jne
or
or
in
or
pop
std
mov
std
mov
mov
ds
adc
mov
ret
mov
add
out
mov
add
sub
fiadds
add
jle
scas
divb
mov
mov
addr16
and
mov
add
jmp
mov
jp
test
fs
sub
dec
rolb
mov
mov
roll
popf
push
add
add
idivb
and
sbb
add
add
add
daa
adc
mov
cmp
pop
push
cmp
pop
or
add
cmp
lods
push
add
add
jno
pusha
add
sbb
std
adc
fisttps
call
in
mov
xchg
inc
xor
dec
dec
js
inc
mov
xlat
xor
add
fs
add
cli
out
bound
mov
js
mov
cltd
lret
enter
mov
mov
in
mov
add
test
movsb
aad
enter
cmc
xor
fs
mov
mov
insb
test
push
decb
xchg
out
notb
mov
mov
dec
xchg
add
or
mov
or
inc
add
add
mov
out
xchg
pop
outsb
inc
add
push
fwait
adc
movsb
jb
mov
mov
add
jge
mov
sub
dec
fidivrl
popa
mov
or
in
mov
xchg
add
add
mov
add
jle
mov
imul
pop
testb
mov
insl
add
mov
in
stc
xlat
int
out
sub
fstps
jae
jns
aas
pushf
pop
or
jne
add
pop
jno
mov
jo
mov
adc
mov
jo
mov
mov
cli
and
aas
xchg
inc
push
lds
adc
ds
incl
addb
xor
mov
sub
add
lea
jne
sub
cmc
lcall
mov
xor
jae
add
xchg
jbe
add
ficompl
and
or
xchg
add
stos
arpl
mov
mov
inc
add
scas
rorl
push
mov
dec
pop
imul
fstl
inc
cmp
mov
add
push
add
mov
push
sbb
jae
sub
add
dec
lock
ds
sub
add
add
nop
add
push
add
mov
mov
mov
add
loop
mov
aas
inc
add
push
jge
out
inc
fildll
add
lods
fsubl
sbb
dec
pop
push
stos
adc
pop
pop
loope
test
push
fiaddl
pop
test
dec
inc
movsb
dec
or
cltd
jg
dec
mov
in
sub
ret
mov
mov
cmpsb
jns
std
stc
jge
les
pusha
add
ja
adc
mov
xor
mov
adc
add
mov
fucom
mov
pop
cmpsl
inc
dec
sti
and
add
sbb
mov
lods
cmpsl
mov
cmc
int
sbb
ja
mov
jle
push
ds
insl
dec
pop
push
rolb
mov
or
add
and
in
es
or
add
add
mov
mov
xchg
jle
lea
jo
mov
fcompl
mov
xchg
sub
mov
rolb
lahf
cltd
xchg
xor
xor
xchg
in
stos
sub
lret
call
add
push
loop
mov
mov
test
outsb
inc
movsl
ja
seto
mov
or
and
add
xchg
add
fadds
mull
add
and
mov
inc
add
xchg
movsl
mov
push
inc
add
inc
iret
test
xor
mov
add
mov
stos
add
gs
lret
inc
jae
cmp
add
push
add
aad
sub
pop
lods
or
add
pushf
inc
push
jp
add
out
add
or
mov
mov
cltd
ljmp
cmc
sub
sbb
cmp
mov
add
sbb
push
rep
adc
movl
fimull
add
xor
mov
xchg
loopne
mov
and
xor
call
mov
arpl
movsl
and
mov
setns
movsb
aad
int
cmp
push
lcall
cld
lret
adc
lcall
xchg
mov
sub
push
add
mov
faddl
or
es
jb
mov
adc
mov
push
add
mov
xchg
push
leave
sahf
dec
scas
dec
xor
rolb
push
or
xchg
xor
popa
inc
sbb
jecxz
dec
roll
mov
dec
lret
enter
into
mov
push
insb
jmp
bswap
movsb
xlat
sti
out
xor
mov
add
add
add
xor
add
mov
add
movsl
cmp
mov
xlat
pop
mov
bswap
test
add
jg
jae
inc
test
xor
add
mov
cmp
push
fadds
add
dec
in
add
lahf
aam
aaa
mov
das
jb
mov
mov
add
es
and
cmp
lea
aaa
jns
sbb
xchg
scas
out
dec
mov
mov
xor
cmpsb
or
adc
sub
int3
mov
cld
inc
jge
add
mov
cmpsb
push
xchg
add
add
push
cmp
push
add
xchg
add
sbb
add
sub
add
push
ss
sti
pop
popf
rolb
mov
addb
cld
mov
add
push
push
insb
mov
mov
fiadds
add
add
into
in
in
ret
add
mov
and
mov
fdivrs
std
outsl
pop
les
pop
fs
fstp
inc
xor
xchg
add
cmp
movsl
cmp
push
inc
cmpsl
loope
out
loopne
mov
add
cmc
mov
mov
test
les
jo
mov
mov
and
popa
mov
add
mov
xchg
pushf
sub
aam
dec
or
movsb
cmp
mov
mov
pop
sbb
lods
mov
sti
pop
out
mov
mov
ja
xor
std
adc
add
mov
inc
mov
mov
test
pop
fbld
mov
xor
gs
jmp
pushf
ret
mulb
inc
or
mov
mov
mov
inc
add
loopne
mov
adc
mov
int3
or
mov
mov
jmp
mov
es
push
jp
mov
lock
test
add
inc
jge
lret
mov
mov
movsl
push
and
mov
sbb
cmc
je
cmpsl
std
inc
push
nop
add
add
xor
cmp
add
icebp
pop
insl
xor
pop
scas
cmp
mov
add
add
and
add
ja
ds
in
jo
mov
scas
stos
cmp
add
push
sub
bswap
inc
pop
repnz
add
inc
out
ret
adc
test
popf
rcrl
mov
mov
pop
xchg
out
xchg
rolb
mov
xchg
mov
repz
xor
fwait
cmp
roll
pop
mov
dec
fwait
loopne
mov
in
aaa
in
add
mov
add
sub
xchg
dec
repz
pop
in
outsb
mov
bt
repz
add
add
popf
rcrl
and
cld
std
cmpsb
aam
cmp
pop
movsl
jg
jge
jg
outsl
xsha256
cmpsb
push
jnp
in
and
rolb
push
popa
imul
popf
sbb
xchg
mov
fucom
add
pop
aam
or
inc
lret
mov
push
add
add
pop
mov
push
sub
je
push
add
cmp
dec
int3
scas
cmp
mov
push
add
pushf
movlps
mov
mov
mov
filds
pushf
mov
push
cmp
mov
sarl
jbe
cmp
jo
mov
and
test
scas
and
inc
insl
in
cmc
loop
mov
push
add
xor
mov
pop
mov
daa
jge
movsb
pop
or
push
add
add
addr16
mov
mov
jns
stos
dec
ja
mov
jl
test
pop
dec
xchg
pop
mov
push
les
add
jg
pushf
jb
mov
imul
in
imul
clc
mov
mov
jge
scas
or
addb
push
add
dec
push
add
in
popf
repnz
mov
mov
mov
gs
xor
mov
add
mov
add
mov
xchg
gs
add
pop
shl
add
and
add
rolb
mov
adc
mov
sbb
mov
adc
mov
mov
add
mov
adc
in
xor
mov
cs
adc
pop
push
add
pop
inc
push
push
add
mov
add
out
rolb
push
popa
push
pushf
lods
filds
mov
cmp
or
jo
mov
xor
mov
jb
mov
xor
mov
add
add
mov
mov
pop
aam
cmp
jl
leave
mov
sbb
out
movsb
sbb
jp
mov
mov
je
add
dec
popf
push
xor
into
fmuls
test
pop
push
add
incb
add
add
rolb
mov
jbe
sbb
or
fnsave
add
fneni(8087
add
push
add
mov
add
jb
mov
lret
sbb
mov
repnz
mov
mov
push
adc
mov
je
pop
lahf
loop
mov
add
mov
add
or
mov
push
loope
sbb
mov
mov
outsb
test
push
sub
ficomps
inc
mov
popa
mov
div
add
fwait
pop
mov
repnz
aam
mov
mov
lcall
pusha
add
lds
xchg
push
cmp
int3
dec
cmp
add
jno
mov
mov
mov
aam
xchg
cwtl
xchg
pop
xchg
fnsave
push
ljmp
mov
out
sahf
je
jno
jb
mov
mov
add
push
adc
jns,pn
and
mov
xchg
outsb
mov
rolb
mov
mov
int3
xchg
cmp
add
icebp
insb
and
mov
in
mov
mov
xchg
fiaddl
cwtl
cmpl
and
mov
popf
sti
lea
andl
outsl
test
rolb
loopne
mov
fisubrl
mov
rolb
mov
add
in
fstl
sti
sub
add
in
adc
mov
add
push
pop
fmul
and
add
sbb
add
jge
xor
lret
xor
stos
mov
mov
stos
mulb
add
add
xor
sub
dec
mov
cmp
and
mov
xchg
cmp
add
mov
repnz
mov
push
int
pushf
test
in
addb
ret
xor
xchg
add
ja
rolb
mov
mov
mov
mov
aam
sbb
add
jmp
subl
and
mov
cmp
mov
lret
sbb
pop
test
ljmp
xor
adc
mov
sbb
jo
mov
add
mov
push
leave
inc
jg
aas
dec
adc
jp
int3
out
push
mov
push
jmp
dec
scas
je
xor
add
vandps
ds
shr
add
mov
push
cltd
mov
mov
pop
int3
in
das
aad
aas
outsl
lods
test
mov
add
dec
mov
add
and
test
push
and
add
lahf
cmp
inc
add
mov
icebp
ss
lret
cmp
xlat
and
fs
cltd
loope
push
aas
push
in
sub
insl
stos
dec
sub
sbb
jl
cwtl
lock
jae
add
inc
adc
cs
cld
psubb
add
outsb
test
cmp
pop
mov
add
pop
das
mov
mov
pop
xrelease
sub
add
cmpsb
sub
aam
add
mov
arpl
adc
hlt
mov
test
lods
lret
repz
and
xchg
add
add
and
mov
adc
xchg
mov
mov
divl
xchg
add
add
flds
cmc
push
mov
fbld
addr16
fcoms
mov
out
cmp
fsubrl
fldcw
fnstenv
fdiv
push
mov
lds
sti
jo
arpl
lahf
fsubr
aaa
cmpsb
repz
xor
mov
aas
jo
mov
dec
xor
pop
cmp
movsb
adc
mov
inc
fists
jp
add
popa
xchg
jge
mov
add
pop
or
or
pop
push
add
xchg
aad
adc
cmp
in
stos
dec
xor
mov
into
rcll
mov
iret
push
es
lahf
or
push
roll
sbb
sbb
dec
adc
mov
push
mov
filds
fadds
add
mov
mov
out
mull
add
fnstsw
daa
addr16
ret
imul
push
and
mov
add
add
cwtl
jne
add
repnz
sub
mov
add
or
pop
out
cmp
push
xchg
add
add
xor
add
and
xor
sub
pop
push
add
mov
mov
cli
jg
add
pop
or
pop
inc
repnz
add
out
push
add
mov
add
mov
mov
leave
adc
or
inc
push
cmpsb
add
mov
cmpsl
push
push
jnp
fldcw
pushf
repz
mov
popf
pop
cld
rolb
dec
lret
std
cs
jae
scas
fs
insb
cmp
sub
cmpsl
xchg
xchg
add
in
jecxz
sbb
cmp
jne
add
gs
sbb
xchg
xor
mov
mov
bound
mov
add
out
add
adc
adc
jb
mov
and
cwtl
push
push
push
add
inc
stos
ret
ljmp
in
roll
pop
pop
ss
push
add
out
outsl
sub
pop
and
xchg
xor
mov
add
test
arpl
add
pop
lret
mov
mov
sub
and
mov
out
push
sbb
stos
and
mov
rcll
jmp
jg
cwtl
popf
dec
test
shll
cs
imul
push
les
inc
add
push
rol
cmp
movb
mov
push
out
xor
add
add
mov
sbb
add
mov
add
mov
xor
mov
mov
xchg
enter
cmp
dec
mov
lret
pop
test
cmpsb
pop
loopne
mov
dec
push
hlt
mov
add
lds
out
popa
push
xor
add
mov
sub
add
mov
subl
adc
inc
add
add
jbe
sbbl
or
lahf
xor
enter
add
gs
sub
push
jle
adc
mov
add
mov
and
cltd
mov
push
pop
or
jmp
fstl
xchg
add
rolb
imul
addr16
daa
lret
pushf
les
mov
add
pop
fmulp
pop
xor
mov
in
add
add
mov
fcomps
mov
ffree
pop
push
sbb
xchg
xchg
jge
fnsave
and
mov
mov
mov
mov
mov
jnp
pusha
add
fisubs
mov
add
pop
data16
fimull
mov
ja
add
in
test
xor
mov
cmc
pushf
or
mov
mov
pop
xchg
add
xchg
cmp
jne
pop
adc
mov
out
ss
fcoml
push
ljmp
mov
jbe
add
push
arpl
xor
mov
or
xchg
add
mov
add
lret
mov
push
mov
sahf
and
sub
loope
jno
pop
addr16
jp
and
mov
std
cmpsb
daa
dec
cmp
addl
fcoml
addb
popf
mov
and
mov
mov
inc
push
jnp
fdivs
cmp
int3
clc
pop
lods
fnsave
data16
sbb
mov
mov
repnz
inc
jl
mov
stos
in
sbb
cmp
add
or
sub
mov
mov
cmp
add
add
sar
xor
mov
icebp
sub
movb
add
jno
mov
add
cmp
fbld
add
and
mov
ljmp
aam
cmp
add
sbb
jnp
sub
std
mov
pop
sbb
add
lret
add
movsl
cmp
test
mov
icebp
cli
fstl
jge
popf
movsl
push
lcall
sahf
mov
add
lret
jp
add
add
scas
xchg
pop
xchg
add
imul
lret
stos
cltd
adc
add
add
mov
add
sub
push
jmp
xchg
int
cmp
out
test
in
jns
jle
stos
xor
je
ret
mov
mov
lock
sbb
xchg
mov
jle
movsl
fisubl
or
add
shl
call
dec
xchg
leave
addb
mov
stos
js
push
mov
mov
add
mov
and
mov
xchg
ret
js
add
adc
mov
bound
mov
jmp
lods
push
inc
inc
mov
xor
ret
add
gs
sub
push
xchg
dec
xchg
insb
out
dec
pop
dec
popa
push
push
ljmp
mov
stos
push
js
fnstsw
jg
lock
mov
mov
sub
mov
mov
std
mov
add
faddl
adc
mov
stc
js
push
jb
mov
mov
js
add
repz
loopne
mov
add
adc
jge
imull
jb
mov
inc
nop
add
mov
add
add
pop
rolb
mov
je
in
add
movsb
in
popa
sub
icebp
mov
add
add
add
mov
cmp
pop
mov
iret
mov
mov
add
add
sbb
aas
icebp
lret
je
add
pop
mov
mov
cmpsb
fstps
mov
mov
test
dec
mov
outsb
or
add
mov
mov
adcl
rolb
mov
adc
mov
lret
jnp
dec
imul
out
inc
sub
dec
xchg
push
rcll
cmpl
mov
pop
push
xor
xor
je
jo
mov
fisubs
cmp
mov
mov
fsubrs
push
neg
popa
push
cmpsb
je
push
add
outsl
ss
insb
in
jnp
lcall
push
fisubrs
popa
addb
cld
imul
mov
cmpsb
sub
cmpsl
out
jno
hlt
fistps
je
jp
aad
jnp
les
mov
mov
mov
mov
jge
add
xor
mov
add
test
xor
jnp
add
xlat
adc
movsb
pop
inc
add
add
xlat
clc
cld
imul
mov
rolb
mov
mov
cmp
xor
mov
arpl
fisubrs
dec
xchg
xchg
into
dec
aam
stos
jnp
popa
mov
mov
mov
cld
aam
pop
cmp
adc
lcall
mov
mov
mov
mov
adc
add
icebp
insl
jmp
jns
insb
out
add
mov
add
out
mov
mov
mov
add
pop
add
cmp
js
add
add
cmp
std
xor
add
add
jbe
aas
outsl
xchg
xchg
aam
popa
pusha
add
mov
add
mov
adc
add
mov
mov
fdivl
add
sub
or
jns
add
pop
and
mov
mov
je
cmp
pusha
add
fldt
dec
cmp
push
gs
jae
mov
add
add
add
inc
cmp
mov
lret
lret
mov
mov
cmp
mov
std
pop
ljmp
push
xchg
addb
lods
loope
notl
insb
mov
les
mov
bound
mov
cs
mov
in
mov
xor
mov
ret
dec
xchg
mov
dec
movsl
mov
add
stos
lret
mul
add
add
rolb
mov
stos
fcomi
add
xchg
add
mov
jno
add
add
add
rorl
mov
addr16
mov
push
popa
iret
xchg
cld
call
sbb
inc
mov
xlat
dec
xchg
add
mov
repnz
lahf
mov
inc
sbb
addb
jno
mov
mov
test
mov
push
lds
pop
rolb
mov
mov
mov
mov
cwtl
push
add
xchg
mov
pushf
int3
xchg
mov
int
and
pop
push
add
jb
mov
jp
outsl
sub
push
mov
fcompl
lcall
stos
push
xor
add
jmp
pop
cmp
aam
cmp
inc
loop
mov
lods
repnz
cs
xchg
add
mov
out
pusha
add
divb
add
or
es
mov
jge
sub
rolb
mov
and
add
rolb
mov
xor
mov
je
std
rolb
mov
pop
jg
push
mov
add
loopne
mov
js
loope
xchg
add
pop
loop
mov
movsl
pop
mov
pop
mov
adc
mov
mov
sub
dec
aaa
leave
add
mov
add
push
pusha
add
sbb
dec
addb
fisttps
cmp
lock
jecxz
xchg
push
dec
ret
lret
dec
aas
add
test
add
jo
mov
jle
lret
fdiv
add
movsl
mov
mov
mov
clc
in
add
and
mov
mov
iret
push
or
inc
pushf
jg
clc
jecxz
mov
add
xchg
cmp
sub
inc
leave
xchg
bound
mov
rolb
mov
add
idivb
rcll
test
push
aas
rolb
mov
pop
testb
inc
inc
lret
add
test
mov
scas
cltd
mov
adcl
fdiv
add
aam
jae
adc
mov
add
and
mov
jl
add
out
lods
sub
mov
add
cmc
sub
add
iret
jle
xchg
test
sbb
mov
mov
scas
xlat
test
mov
mov
adc
insl
lea
adc
pushf
cmp
pusha
add
into
lahf
outsb
jmp
bound
mov
or
lret
adc
mov
repz
stos
fdivr
jg
test
push
mov
mov
enter
mov
push
add
mov
mov
les
mov
mov
add
mov
xchg
jge
jge
add
inc
das
inc
push
mov
sub
xor
fcomi
mov
add
cmc
mov
jno
icebp
sbb
add
adc
jl
sub
jno
push
sti
ret
arpl
adc
xor
jmp
push
add
int3
mov
mov
leave
movsl
xchg
mov
ret
or
mov
adc
addb
sbb
adc
jg
pop
mov
add
mov
scas
mov
sub
fwait
into
call
mov
imul
sub
mov
add
arpl
notb
mov
add
inc
add
or
popf
fisubl
ja
mov
mov
add
add
inc
call
mov
mov
jg
inc
and
xlat
les
dec
popf
sbb
test
scas
sbb
ret
rolb
mul
sbb
mov
jae
mov
add
xchg
adc
mov
lgdtl
mov
loope
push
scas
cltd
imul
jle
inc
add
add
in
outsl
test
mov
enter
mov
xchg
jnp
add
ret
lcall
and
mov
jl
pop
mov
add
aaa
aad
add
pop
cs
into
in
sbb
cmpsb
mov
mov
mov
iret
cltd
fdivl
fiadds
xchg
push
js
cmp
mov
mov
mov
test
mov
rolb
mov
sbb
add
fstpt
mov
and
pop
xor
bound
mov
rcll
push
cmp
pusha
add
and
mov
mov
cmp
mov
jns
mov
dec
mov
mov
daa
mov
mov
pusha
add
push
jge
addr16
rolb
mov
add
inc
test
test
cmc
scas
es
in
rolb
mov
push
clc
gs
in
or
xchg
add
mov
mov
mov
jp
out
mov
lahf
stos
addb
jp
stos
iret
mov
insb
mov
mov
xchg
nop
add
roll
or
add
imul
xchg
sbb
pushf
fucomip
cs
imul
aaa
out
dec
bound
mov
add
mov
in
dec
jge
add
mov
stc
nop
add
out
enter
mov
jp
cmp
bound
mov
mov
mov
mov
inc
lret
arpl
jns
movsl
sbb
stos
adc
sub
loope
and
mov
clc
mov
pop
xchg
leave
outsb
xor
mov
or
fisttpl
push
push
add
add
mov
jg
sub
add
add
mov
xchg
cmpsl
pop
jns
les
cltd
dec
das
cld
pop
loopne
mov
xchg
xlat
jne
bound
mov
xchg
insl
mov
dec
mov
rolb
mov
add
mov
outsl
inc
sub
int3
mov
mov
roll
jb
mov
add
ret
and
mov
es
or
and
jp
add
jne
popa
cmpsb
ss
inc
stc
loop
mov
push
fiaddl
mov
mov
mov
addb
add
mov
jp
xor
mov
xchg
popf
mov
mov
add
insb
repz
pop
aaa
or
insl
adc
sub
mov
outsb
ret
push
imulb
push
cmpsl
ds
aad
fisubrs
add
dec
push
xor
sub
jns
sub
add
inc
and
mov
add
jb
mov
bound
mov
mov
out
pop
jno
std
scas
jo
mov
adc
push
fcompl
stos
cli
leave
in
data16
inc
imul
mov
jmp
mov
test
cmpsl
iret
hlt
xlat
mov
stos
outsl
xor
inc
add
jg
loope
insb
int3
push
add
add
add
dec
and
sbb
pop
cli
popf
mov
add
add
inc
jb
mov
mov
push
mov
addb
test
lds
mov
dec
dec
cltd
push
cmp
add
mov
lcall
add
mov
sbb
insl
fs
sbb
icebp
mov
push
xor
push
fisttpl
xor
mov
add
push
arpl
adc
mov
cs
mov
add
cmp
push
xchg
add
or
add
xor
mov
add
je
add
mov
add
xchg
jge
add
mov
mov
mov
jge
out
decb
jb
mov
loop
mov
mov
or
xlat
pusha
add
xchg
push
jbe
insl
bound
mov
xor
mov
mov
sti
jno
loope
testb
add
lock
adc
push
mov
pusha
add
data16
mov
mov
mov
fistps
cld
out
movsb
mov
popf
cltd
dec
jp
leave
sub
add
data16
mov
push
mov
or
rol
imul
mov
jecxz
imul
or
data16
dec
push
mov
add
jecxz
lcall
bound
mov
leave
pop
adc
mov
mov
inc
push
xchg
add
jmp
loop
mov
push
lods
jbe
add
add
mov
loopne
mov
and
push
add
scas
and
push
push
pop
aam
mov
imul
jp
xor
hlt
jmp
in
sahf
fsubs
iret
clc
cs
daa
loopne
mov
push
out
fisubs
and
or
pop
mov
out
cmp
sti
mov
cmc
ret
dec
jp
add
and
mov
jmp
outsl
mov
or
fwait
negl
dec
icebp
imul
or
in
dec
pop
data16
mov
push
and
data16
mov
outsl
inc
into
cmp
add
sub
mov
movsl
ljmp
mov
mov
loopne
mov
clc
or
scas
pop
mov
addr16
mov
pushf
int
jle
add
les
inc
add
mov
aaa
inc
add
shrl
adc
test
fcoml
push
mov
ljmp
add
mov
xchg
add
mov
pop
addr16
mov
add
mov
sub
mov
add
add
hlt
pop
sti
push
cmp
mov
inc
and
add
xor
mov
mov
add
mov
push
add
add
fs
fidivs
sub
mov
mov
cmp
add
push
sbb
mov
or
stos
bound
mov
rolb
mov
cwtl
sbb
and
jl
filds
mov
imul
fistpll
xchg
aaa
mov
jbe
cltd
aad
or
movsb
movsl
cmp
out
cld
stos
ret
lret
adc
jns
pusha
add
cmp
jle
add
push
or
jp
scas
mov
bound
mov
pusha
add
and
nop
add
cmp
mov
mov
movsb
insl
out
add
bound
mov
movsb
add
mov
sub
add
mov
add
mov
pop
jle
dec
mov
mov
or
in
add
jl
add
add
mov
xor
mov
add
mov
push
repnz
leave
addb
xchg
add
mov
dec
push
push
inc
add
loop
mov
and
scas
cmc
sbb
add
mov
mov
cmp
push
lret
add
add
sub
dec
adc
je
sub
inc
jns
pop
icebp
in
scas
rolb
xchg
mov
inc
add
inc
cmp
rcll
insb
jecxz
push
es
jns
aas
sarl
mov
push
dec
lods
test
mov
sbb
lret
or
cmp
add
aad
popf
jne
ljmp
jp
push
push
imul
lea
iret
ret
das
adc
aaa
pop
jle
sbb
fisttpll
std
sahf
in
mov
mov
push
add
mov
imul
test
cmpsb
imul
cmp
cld
jp
sub
cmp
lahf
test
es
psubq
pushw
cmp
mov
addb
imul
popa
mov
dec
mov
inc
gs
jge
xchg
cmpsl
mov
sub
add
popf
dec
aam
mov
push
fninit
or
and
dec
add
add
insb
lea
or
idivl
sub
or
outsb
mov
dec
xchg
gs
sub
add
daa
cltd
mov
add
add
jae
mov
mov
mov
jmp
mov
stc
rcrl
sbb
xor
mov
xchg
inc
add
mov
enter
jle
cmp
add
pop
mov
and
mov
and
movsl
cli
jg
fdivrl
inc
add
loope
cltd
jecxz
cwtl
fs
add
pop
out
cmc
cmp
nop
add
xchg
out
push
add
movsb
addr16
jmp
add
data16
inc
lcall
cmp
jp
add
mov
scas
addb
mov
mov
adc
repz
xchg
lds
push
mov
adc
in
add
fisubrl
push
fs
in
adc
mov
xor
ret
repnz
xchg
pop
outsb
add
mov
add
call
imul
shrl
int3
sub
xor
mov
mov
sahf
mov
push
in
push
cmp
aas
je
rcrl
or
popa
dec
cmc
push
add
sbb
es
add
inc
add
nop
add
inc
add
or
dec
pop
sub
daa
add
add
add
pop
into
jl
add
mov
push
cmc
or
add
in
mov
repnz
add
add
rolb
xchg
sub
add
outsb
mov
sahf
cli
xor
mov
add
dec
hlt
push
xchg
ss
in
pop
lods
mov
shll
pop
mov
cmpsb
inc
lds
xchg
hlt
jle
mov
sbb
xor
cmpsb
dec
push
rolb
jge
or
dec
int
addb
arpl
mov
mov
or
fnstcw
cmp
mov
in
mov
add
in
dec
xor
push
add
add
xor
mov
rolb
mov
into
push
rorl
cmpsb
daa
es
jae
add
add
aad
xor
insl
jmp
dec
dec
cld
jns
inc
or
gs
imul
xchg
mov
rolb
fistps
loope
lods
stos
loop
mov
jb
mov
add
pushf
fwait
imul
mulb
add
repz
mov
jle
xchg
inc
lea
mov
mov
adc
xor
test
movsl
cli
add
jle
pop
adc
mov
inc
daa
leave
dec
sti
pop
pop
and
xchg
cmpsb
inc
push
inc
add
out
jmp
fisubs
and
mov
jne
sub
cmp
jae
cmpsl
push
xchg
sub
ret
sub
add
dec
shll
rep
repz
repz
ss
cmp
xorps
inc
add
add
and
fisubrl
or
add
scas
test
imul
fstpt
aad
mov
add
cmp
movsl
dec
lock
addb
sbb
cmp
cmpsb
repz
and
cltd
xchg
out
sti
push
add
mov
add
mov
push
add
add
out
cltd
dec
testb
js
lods
cmp
add
add
add
xchg
ds
xor
std
int3
cmp
pop
adc
jnp
sarl
and
mov
pop
das
rolb
mov
lret
lret
sbb
mov
mov
negb
add
sbb
pop
xchg
push
add
mov
cmp
and
mov
pop
add
mov
push
cmc
jb
mov
movsb
cmp
paddd
loopne
mov
cwtl
adc
inc
add
or
cltd
aad
mov
mov
jg
ret
insl
mov
jl
add
dec
adc
pop
pushf
lock
addl
mov
add
mov
dec
pusha
add
sub
dec
rcr
aaa
rcrl
mov
aad
inc
fsubrs
clc
sub
imul
iret
adc
mov
or
cmpsl
sbb
xor
add
mov
add
mov
mov
rep
mov
sub
adc
ret
outsl
test
mov
inc
cmp
add
lods
jmp
into
mov
inc
mov
add
fnsave
mov
sbb
pop
jl
jae
lret
clc
inc
mov
mov
mov
pop
and
mov
insb
mov
inc
add
add
loopne
mov
add
mov
add
dec
insb
sbb
add
mov
add
xchg
add
mov
push
in
xchg
fistps
dec
inc
add
das
repnz
dec
data16
mov
inc
fisttps
mov
xor
adc
mov
rolb
mov
mov
add
std
addb
loop
mov
mov
dec
lods
add
test
in
add
rolb
in
mov
rolb
mov
cmp
mov
shll
mov
fwait
or
popf
xor
push
adc
sahf
aas
int3
popa
pop
es
add
push
rolb
mov
and
mov
fiaddl
sub
outsb
imul
jp
test
adc
mov
lock
mov
mov
pop
nop
add
in
int
jl
mov
add
mov
push
test
dec
adc
aam
pop
adc
mov
cmp
add
scas
push
call
outsl
pop
push
nop
add
xchg
out
mov
mov
outsb
cwtl
and
mov
je
cmp
and
push
add
mov
mov
insl
ja
jecxz
add
popf
mov
icebp
mulb
fwait
cmp
mov
adc
add
pusha
add
out
fs
mov
out
add
cld
lea
cwtl
rolb
mov
aas
out
mov
sahf
cmpsl
xchg
data16
pop
sub
add
dec
call
lret
add
lds
xchg
and
mov
or
int3
fwait
sub
fiaddl
add
add
mov
mov
add
cs
ja
inc
xchg
or
mov
dec
mov
add
mov
add
pop
sub
mov
or
mov
xchg
repnz
mov
mov
out
push
leave
push
out
mov
mov
jns
lret
add
xchg
shll
fsubp
leave
jg
cmpsl
out
xor
mov
add
add
and
mov
ja
mov
mov
cmp
sub
push
ljmp
mov
sbb
emms
into
imul
jnp
cmp
bound
mov
dec
sub
stos
sbb
dec
jbe
outsl
xor
mov
add
xor
imul
sahf
hlt
scas
addr16
ljmp
and
mov
jmp
jbe
dec
fisttps
imul
inc
ret
jle
push
mov
and
les
add
inc
add
pop
sbb
out
lret
aam
int3
xchg
xchg
add
mov
push
adc
inc
out
or
add
pop
inc
add
add
fists
call
adc
mov
mov
xor
add
jle
mov
or
addr16
out
add
mov
pop
mov
push
mov
nop
leave
jmp
jge
cmp
sub
test
or
add
repnz
nop
cld
jae
mov
pop
mov
push
mov
xchg
ret
hlt
add
add
mov
popa
add
repnz
nop
cld
jae
lcall
incl
sar
repnz
nop
cld
jae
mov
add
pop
add
dec
push
push
mov
xchg
ret
and
cmp
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
push
lea
mov
xchg
ret
adc
add
jp
lock
sahf
mov
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
add
lods
mov
mov
xchg
ret
pop
add
add
add
add
cmp
push
mov
xchg
ret
add
add
add
add
sahf
xabort
nop
nop
cld
jae
add
add
jb
mov
push
mov
xchg
ret
lods
jle
hlt
cltd
add
push
add
in
nop
leave
jmp
lods
add
leave
mov
mov
in
nop
leave
jmp
iret
add
incl
aas
xor
xor
push
mov
xchg
ret
add
add
mov
mov
in
add
clc
repnz
nop
cld
jae
xor
iret
adc
add
add
sub
add
repnz
nop
cld
jae
add
dec
sub
push
mov
nop
leave
jmp
mov
jge
add
push
mov
xchg
ret
jle
add
jge
add
add
repnz
nop
cld
jae
movsb
popf
jns
aas
jnp
lea
push
mov
nop
leave
jmp
mov
add
test
les
clc
repnz
nop
cld
jae
add
add
add
add
fistl
in
cmp
add
add
jecxz
xor
popa
jge
clc
repnz
nop
cld
jae
jns
add
jbe
ja
clc
repnz
nop
cld
jae
lock
mov
add
aas
aas
jge
add
add
add
mov
adc
add
dec
xchg
add
jp
push
in
jns
clc
repnz
nop
cld
jae
pushf
pop
hlt
add
ss
add
clc
repnz
nop
cld
jae
pop
jmp
ljmp
nop
cld
jae
add
jns
addr16
call
clc
repnz
nop
cld
jae
adc
xchg
mov
add
sbb
repnz
nop
cld
jae
dec
jle
loop
mov
dec
sub
dec
testl
pop
add
mov
mov
push
mov
xchg
ret
pop
add
push
mov
push
mov
xchg
ret
adc
push
add
add
push
clc
repnz
nop
cld
jae
add
aas
add
push
add
clc
repnz
nop
cld
jae
push
add
add
add
add
nop
cld
jae
add
add
iret
add
push
push
mov
nop
leave
jmp
and
pushf
mov
add
clc
repnz
nop
cld
jae
add
dec
add
fwait
add
push
add
mov
loopne
bnd
mov
inc
lock
mov
xchg
ret
incl
iret
pushf
sarl
mov
add
xchg
ret
dec
lods
add
add
add
into
mov
clc
repnz
nop
cld
jae
add
add
sbb
iret
inc
add
in
adc
in
add
jmp
je
js
repnz
nop
cld
jae
dec
dec
pop
popf
add
sub
inc
add
lods
add
pop
incl
clc
add
clc
repnz
nop
cld
jae
pop
lahf
adc
xor
push
mov
xchg
ret
add
add
push
mov
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
pop
add
xchg
pop
push
mov
push
mov
xchg
ret
add
lahf
mov
leave
in
call
clc
repnz
nop
cld
jae
add
movswl
clc
repnz
nop
cld
jae
add
mov
nop
add
add
mov
push
mov
add
add
jg
add
in
dec
pop
mov
rcl
jle
jmp
jp
push
mov
nop
leave
jmp
mov
lahf
je
clc
repnz
nop
cld
jae
add
push
push
clc
repnz
nop
cld
jae
add
cmp
rcrl
push
push
mov
xchg
ret
add
pop
add
dec
add
addr16
mov
nop
nop
cld
jae
int3
iret
add
pushf
lods
adc
popa
rolb
xchg
ret
xchg
mov
roll
push
clc
add
push
mov
nop
leave
jmp
mov
decl
or
cli
clc
repnz
nop
cld
jae
pop
pop
add
add
add
mov
mov
mov
xchg
ret
add
add
add
popf
sbb
add
add
add
adc
add
add
add
leave
lods
push
mov
xchg
ret
add
pop
add
roll
mov
mov
jl
add
add
mov
add
add
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
and
xor
add
push
mov
nop
leave
jmp
and
and
mov
xchg
ret
pop
add
add
add
pop
call
clc
repnz
nop
cld
jae
adc
mov
xchg
pop
stos
push
mov
xchg
ret
dec
aas
add
cltd
add
push
mov
or
clc
repnz
nop
cld
jae
in
pop
rolb
in
and
push
mov
nop
leave
jmp
adc
addr16
hlt
scas
lea
clc
repnz
nop
cld
jae
add
jp
push
pop
and
push
mov
xchg
ret
pop
lods
xchg
add
add
cmp
pop
cmp
repnz
nop
cld
jae
lods
xor
adc
add
mov
xchg
ret
push
mov
add
ret
repnz
nop
cld
jae
popf
add
add
cmp
add
pusha
add
clc
repnz
nop
cld
jae
dec
and
decl
nop
cld
jae
xor
adc
cltd
pop
xor
add
dec
cmp
repnz
nop
cld
jae
mov
inc
mov
add
clc
repnz
nop
cld
jae
add
mov
into
jne
clc
repnz
nop
cld
jae
add
add
add
adc
repnz
nop
cld
jae
add
xor
decb
nop
nop
cld
jae
jns
lock
addr16
pushl
clc
repnz
nop
cld
jae
add
add
sbb
inc
add
add
leave
add
cmp
in
out
call
clc
repnz
nop
cld
jae
lods
dec
add
push
push
mov
nop
leave
jmp
add
xchg
add
add
jp
inc
add
add
call
add
add
xor
sub
out
mov
push
mov
xchg
ret
pop
add
add
repnz
nop
cld
jae
add
push
mov
push
mov
nop
leave
jmp
pop
dec
leave
add
cmp
xchg
clc
repnz
nop
cld
jae
jge
add
add
popf
je
push
mov
nop
leave
jmp
jnp
jle
add
mov
add
clc
repnz
nop
cld
jae
add
push
push
roll
push
idivb
mov
push
mov
nop
leave
jmp
pop
add
mov
mov
push
lret
mov
push
mov
xchg
ret
adc
movsb
hlt
and
mov
clc
repnz
nop
cld
jae
dec
push
and
add
add
mov
xchg
ret
add
add
jge
add
mov
in
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
add
pop
cmpsb
cmpl
in
nop
leave
jmp
add
add
mov
repnz
nop
cld
jae
add
cltd
add
mov
push
mov
nop
leave
jmp
add
push
lods
mov
push
mov
nop
leave
jmp
push
mov
pusha
clc
repnz
nop
cld
jae
add
lods
in
call
clc
repnz
nop
cld
jae
pop
add
loop
mov
nop
leave
jmp
add
push
je
add
clc
repnz
nop
cld
jae
add
dec
jecxz
xor
mov
clc
repnz
nop
cld
jae
movsb
add
mov
jmp
nop
cld
jae
push
add
add
mov
js
inc
add
movsb
add
cli
add
jns
mov
clc
repnz
nop
cld
jae
add
jp
add
mov
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
add
add
pop
add
jle
push
mov
nop
leave
jmp
add
add
jnp
add
xor
push
mov
xchg
ret
add
add
add
lods
push
xchg
mov
add
inc
nop
add
repnz
nop
cld
jae
add
in
add
add
add
mov
stos
clc
repnz
nop
cld
jae
rorl
adc
dec
add
pop
add
clc
repnz
nop
cld
jae
jge
add
fimuls
mov
nop
leave
jmp
add
push
add
inc
mov
jbe
add
add
add
lock
add
call
clc
repnz
nop
cld
jae
add
addr16
mov
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
add
add
movb
xchg
addb
jne,pn
clc
repnz
nop
cld
jae
add
jo
mov
cmp
clc
repnz
nop
cld
jae
push
add
adc
repnz
nop
cld
jae
add
add
add
mov
add
int
add
add
sub
add
add
add
clc
repnz
nop
cld
jae
cmp
hlt
test
inc
push
mov
xchg
ret
push
jge
add
add
clc
mov
push
mov
xchg
ret
add
and
add
add
in
and
mov
icebp
push
mov
nop
leave
jmp
dec
pop
xchg
and
add
mov
mov
mov
clc
repnz
nop
cld
jae
movsb
adc
in
add
add
repnz
nop
cld
jae
add
addr16
cmp
jp
push
push
mov
xchg
ret
add
add
shl
clc
repnz
nop
cld
jae
add
test
sub
add
repnz
nop
cld
jae
popf
add
leave
add
jae
and
push
mov
xchg
ret
dec
add
dec
cli
jp
push
clc
repnz
nop
cld
jae
aas
add
jns
add
and
repnz
nop
cld
jae
adc
add
push
jnp
mov
mov
push
clc
repnz
nop
cld
jae
add
lahf
add
clc
push
mov
xchg
ret
add
add
lods
push
dec
cmp
mov
xchg
ret
lock
mov
add
idiv
repnz
nop
cld
jae
push
add
repz
ret
call
nop
nop
cld
jae
add
lods
lea
add
loopne
mov
mov
push
mov
nop
leave
jmp
xor
add
pop
imull
mov
xchg
ret
add
lcall
pushf
movzwl
push
mov
nop
leave
jmp
jle
pop
lods
add
xchg
add
add
clc
repnz
nop
cld
jae
pop
aas
add
push
cmp
nop
leave
jmp
jnp
add
add
add
push
clc
repnz
nop
cld
jae
pushf
jp
in
add
aaa
cmp
nop
nop
cld
jae
jle
ljmp
repz
mov
xchg
ret
push
popf
lods
add
push
mov
xchg
ret
push
add
add
in
push
add
in
nop
leave
jmp
mov
push
hlt
cmp
lds
clc
repnz
nop
cld
jae
lock
hlt
cmp
mov
insb
push
clc
repnz
nop
cld
jae
addr16
push
jp
and
fstpt
clc
repnz
nop
cld
jae
pop
cmp
add
adc
repnz
nop
cld
jae
add
lods
mov
cmpl
jae
add
and
push
mov
xchg
ret
roll
pop
dec
fs
mov
clc
repnz
nop
cld
jae
add
add
je,pn
clc
repnz
nop
cld
jae
push
mov
fs
mov
clc
repnz
nop
cld
jae
cltd
mov
cmp
jbe
clc
repnz
nop
cld
jae
hlt
addr16
lahf
jle
insb
pop
push
mov
xchg
ret
add
jp
hlt
add
scas
push
mov
add
jg
add
pop
jae
dec
push
add
push
pusha
xor
mov
adc
in
nop
leave
jmp
xor
add
fs
sbb
nop
nop
cld
jae
add
lods
push
add
sub
and
repnz
nop
cld
jae
add
cmp
xchg
clc
add
in
nop
leave
jmp
add
cltd
add
mov
je
push
mov
nop
leave
jmp
lods
add
subl
nop
leave
jmp
add
rcll
or
mov
xchg
ret
lahf
add
lods
and
add
bound
mov
push
clc
repnz
nop
cld
jae
mov
pop
add
and
jns
clc
repnz
nop
cld
jae
add
push
mov
sub
repnz
nop
cld
jae
add
add
add
mov
add
xchg
ret
and
leave
hlt
lea
lock
lret
mov
clc
repnz
nop
cld
jae
popf
add
mov
push
mov
nop
leave
jmp
add
rcrl
lea
push
mov
nop
leave
jmp
dec
and
sarl
jge
outsb
ret
clc
repnz
nop
cld
jae
adc
cmp
pop
jp
xor
mov
imul
xchg
ret
add
add
xchg
xchg
add
mov
in
add
sbb
add
dec
data16
push
insb
mov
push
mov
nop
leave
jmp
jp
add
push
mov
xchg
ret
cli
and
dec
cmp
cmp
popl
clc
repnz
nop
cld
jae
push
lods
iret
adc
int3
adc
mov
push
push
mov
xchg
ret
add
pop
leave
pop
mov
xbegin
jae
add
add
decl
push
mov
xchg
ret
add
stc
mov
clc
repnz
nop
cld
jae
push
pushf
lock
mov
xchg
ret
push
add
xor
and
repnz
nop
cld
jae
add
stc
movzwl
clc
repnz
nop
cld
jae
dec
and
add
add
mov
repnz
nop
cld
jae
pop
add
dec
add
add
clc
repnz
nop
cld
jae
mov
jne
clc
repnz
nop
cld
jae
add
int3
iret
push
push
mov
xchg
ret
add
lea
leave
xchg
mov
or
nop
nop
cld
jae
dec
add
pop
add
ficoml
mov
xchg
ret
lods
xchg
add
mov
add
jl
clc
repnz
nop
cld
jae
cltd
pop
add
add
les
jmp
dec
mov
add
jmp
jge
lahf
add
mov
push
lods
leave
clc
repnz
nop
cld
jae
leave
fs
cltd
hlt
pop
cmp
add
pusha
add
push
mov
nop
leave
jmp
incl
pop
pushf
and
call
clc
repnz
nop
cld
jae
lea
in
decl
mov
nop
leave
jmp
add
add
xchg
dec
mov
mov
clc
repnz
nop
cld
jae
in
add
add
js
push
mov
xchg
ret
leave
add
add
push
mov
ljmp
leave
jmp
lods
movsb
lea
addr16
xchg
push
mov
add
jns
pop
add
add
add
add
lods
push
mov
nop
leave
jmp
pop
jge
xor
mov
mov
or
repnz
nop
cld
jae
int3
add
ja
outsb
je
repnz
nop
cld
jae
add
cltd
add
nop
nop
cld
jae
push
adc
add
lods
add
je
clc
repnz
nop
cld
jae
add
inc
mov
push
clc
repnz
nop
cld
jae
add
in
popf
pop
in
lea
aaa
outsl
xor
push
mov
nop
leave
jmp
add
add
jmp
repnz
nop
cld
jae
mov
adc
fsts
repnz
nop
cld
jae
add
lods
jle
add
cli
add
push
mov
nop
leave
jmp
push
add
add
xchg
cli
movzwl
clc
repnz
nop
cld
jae
jp
push
mov
cs
clc
repnz
nop
cld
jae
add
adc
cmp
mov
ret
clc
repnz
nop
cld
jae
movsb
and
add
add
or
add
repnz
nop
cld
jae
add
popa
add
repnz
nop
cld
jae
lods
add
jle
add
repnz
nop
cld
jae
pop
add
add
add
inc
add
hlt
add
popa
clc
repnz
nop
cld
jae
add
add
push
cmpsb
jl
xor
dec
ss
clc
repnz
nop
cld
jae
and
push
mov
xchg
ret
lods
mov
add
jmp
movsb
push
jle
add
nop
nop
cld
jae
lods
add
add
add
in
nop
leave
jmp
add
inc
clc
repnz
nop
cld
jae
cltd
lods
cmp
pop
add
pop
mov
mov
nop
leave
jmp
jp
add
hlt
jp
pop
push
mov
xchg
ret
add
pop
add
nop
nop
cld
jae
add
and
lcall
jae
dec
add
pop
jge
leave
mov
jmp
push
leave
add
add
add
pop
lods
xchg
add
and
repnz
nop
cld
jae
add
addr16
jge
testl
mov
add
clc
repnz
nop
cld
jae
add
add
add
lock
push
push
scas
not
push
mov
xchg
ret
hlt
jp
xor
jge
mov
mov
nop
leave
jmp
in
lahf
lahf
in
pop
push
add
popa
add
mov
xchg
ret
add
add
cltd
in
add
push
mov
xchg
ret
lods
jp
iret
add
leave
xchg
adc
push
clc
repnz
nop
cld
jae
dec
pop
add
in
and
add
push
mov
nop
leave
jmp
jge
jmp
in
jbe
add
push
mov
xchg
ret
add
int3
lods
cmp
fs
fimuls
sub
add
jp
push
hlt
add
jge
add
clc
repnz
nop
cld
jae
add
leave
pop
add
lock
clc
clc
repnz
nop
cld
jae
add
add
xor
push
push
mov
xchg
ret
add
and
add
pop
jge
rolb
mov
cmp
nop
nop
cld
jae
aas
add
in
lock
addb
jg
rolb
repnz
nop
cld
jae
addr16
jnp
add
nop
nop
cld
jae
cmp
jp
mov
mov
mov
clc
repnz
nop
cld
jae
popf
mov
pop
call
push
mov
xchg
ret
jns
add
cmp
add
add
push
mov
nop
leave
jmp
jns
jns
add
push
push
mov
xchg
ret
add
add
lcall
add
in
clc
repnz
nop
cld
jae
cltd
movsb
add
addr16
jl
inc
adc
repnz
nop
cld
jae
add
dec
mov
clc
repnz
nop
cld
jae
add
add
test
mov
nop
leave
jmp
add
addr16
mov
clc
repnz
nop
cld
jae
lods
leave
add
adc
and
mov
nop
leave
jmp
cli
push
jnp
repnz
inc
xor
clc
repnz
nop
cld
jae
dec
add
incl
loopne
mov
add
clc
repnz
nop
cld
jae
add
xor
add
mov
clc
repnz
nop
cld
jae
int3
and
add
adc
mov
clc
repnz
nop
cld
jae
and
adc
dec
mov
jnp
dec
adc
in
nop
leave
jmp
sarl
mov
push
add
add
add
clc
repnz
nop
cld
jae
in
add
test
mov
push
push
mov
nop
leave
jmp
add
add
es
clc
repnz
nop
cld
jae
popf
jns
add
clc
repnz
nop
cld
jae
cltd
add
add
lahf
add
je
clc
repnz
nop
cld
jae
shll
clc
repnz
nop
cld
jae
push
jle
fsubl
jb,pt
push
mov
nop
leave
jmp
lods
pop
dec
and
test
lods
and
imul
nop
nop
cld
jae
xor
add
mov
xchg
ret
in
add
push
xor
xor
push
mov
nop
leave
jmp
mov
in
push
add
add
jecxz
pushl
add
add
leave
cmp
test
adc
add
repnz
nop
cld
jae
lods
movsb
add
mov
clc
repnz
nop
cld
jae
add
lahf
lods
push
push
mov
xchg
ret
iret
rorl
int3
adc
add
xlat
pusha
add
out
clc
repnz
nop
cld
jae
add
aaa
mov
push
mov
xchg
ret
mov
push
add
or
mov
nop
leave
jmp
pushf
add
push
mov
repnz
nop
cld
jae
add
lea
add
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
pop
add
and
add
pusha
add
nop
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
cltd
lock
dec
push
mov
nop
leave
jmp
add
pop
add
repz
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
push
jnp
add
add
imul
mov
jmp
add
push
jmp
add
add
add
lods
pop
push
add
in
nop
leave
jmp
add
cltd
add
mov
pushf
or
repnz
nop
cld
jae
add
int3
add
add
lods
push
xchg
pop
add
xchg
dec
pop
mov
jp
add
mov
popa
add
repnz
nop
cld
jae
add
mov
xchg
pop
sub
nop
nop
cld
jae
add
mov
cmp
jne
clc
repnz
nop
cld
jae
add
add
add
add
add
add
and
xchg
pop
add
mov
push
mov
nop
leave
jmp
push
std
push
clc
repnz
nop
cld
jae
and
fs
add
adc
test
jbe
xchg
in
nop
leave
jmp
push
in
lcall
cwtl
mov
clc
repnz
nop
cld
jae
cli
pop
add
clc
repnz
nop
cld
jae
leave
adc
pop
push
enter
nop
cld
jae
pop
jns
push
add
push
mov
nop
leave
jmp
add
add
mov
lea
clc
repnz
nop
cld
jae
add
pop
aas
hlt
lods
incl
dec
cmp
repnz
nop
cld
jae
pop
add
ljmp
clc
repnz
nop
cld
jae
add
add
add
jne
push
mov
xchg
ret
lods
cmp
add
xor
mov
ret
push
mov
nop
leave
jmp
cltd
popf
mov
mov
clc
repnz
nop
cld
jae
rol
pop
cmp
addr16
push
clc
repnz
nop
cld
jae
lahf
in
add
in
mov
lea
push
mov
nop
leave
jmp
popf
in
add
add
cmp
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
movsb
add
repz
pop
push
mov
xchg
ret
push
movsb
mov
xchg
js
ss
mov
nop
leave
jmp
popf
add
movsb
jle
add
fwait
or
clc
repnz
nop
cld
jae
lods
jnp
jnp
lods
add
and
clc
repnz
nop
cld
jae
aas
mov
mov
push
add
movsb
push
mov
xchg
ret
add
add
call
clc
repnz
nop
cld
jae
push
pop
add
mov
clc
repnz
nop
cld
jae
int3
add
add
add
jne
clc
repnz
nop
cld
jae
add
add
cli
call
push
mov
nop
leave
jmp
pop
cmp
push
push
idiv
clc
repnz
nop
cld
jae
add
ss
pusha
clc
repnz
nop
cld
jae
add
add
add
mov
add
pop
pop
mov
clc
repnz
nop
cld
jae
add
jbe
mov
clc
repnz
nop
cld
jae
cli
add
insb
push
push
mov
xchg
ret
popf
in
add
add
add
cmp
nop
leave
jmp
add
add
add
movsb
lods
add
call
mov
xchg
ret
add
add
add
push
clc
repnz
nop
cld
jae
push
push
lods
and
mov
inc
push
mov
nop
leave
jmp
add
pushf
add
repnz
nop
cld
jae
mov
add
in
nop
leave
jmp
and
add
add
add
and
clc
repnz
nop
cld
jae
add
mov
iret
xchg
frstor
popa
add
mov
xchg
ret
mov
add
add
fisttpll
nop
cld
jae
add
add
lahf
sub
add
in
nop
leave
jmp
pop
add
pop
ret
push
mov
nop
leave
jmp
push
adc
cltd
mov
push
add
mov
nop
leave
jmp
movsb
popf
add
rorl
add
repnz
nop
cld
jae
lods
add
lea
pop
add
add
in
nop
leave
jmp
add
add
in
xor
xor
push
clc
repnz
nop
cld
jae
add
hlt
mov
add
add
mov
inc
add
add
add
add
cmc
clc
repnz
nop
cld
jae
and
in
nop
leave
jmp
add
add
in
add
cwtl
push
clc
repnz
nop
cld
jae
jge
mov
add
cmp
jo
mov
fwait
mov
clc
repnz
nop
cld
jae
add
add
mov
add
xlat
inc
ficoms
repnz
nop
cld
jae
add
dec
pushf
add
jns
sti
mov
push
mov
xchg
ret
push
add
add
push
mov
cmp
dec
add
ds
mov
cli
add
add
rep
clc
repnz
nop
cld
jae
cmp
pop
and
add
pop
push
mov
xchg
ret
lods
incl
pop
add
movsb
add
fs
add
clc
repnz
nop
cld
jae
add
dec
push
sbb
in
nop
leave
jmp
add
add
cmp
lods
test
inc
call
inc
add
add
add
add
clc
repnz
nop
cld
jae
add
lea
jbe
test
mov
xchg
ret
add
adc
clc
repnz
nop
cld
jae
jp
add
adc
cli
mov
call
in
nop
leave
jmp
add
dec
xor
mov
loop
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
leave
jnp
lahf
add
xchg
mov
repnz
nop
cld
jae
pop
xor
popf
lods
add
add
cmp
nop
nop
cld
jae
pop
iret
add
xor
mov
popa
add
repnz
nop
cld
jae
add
shll
sub
clc
repnz
nop
cld
jae
add
add
add
nop
add
mov
xchg
ret
add
add
push
mov
add
clc
repnz
nop
cld
jae
popf
xchg
add
mov
push
mov
nop
leave
jmp
cmp
aas
add
pop
pop
outsb
les
clc
repnz
nop
cld
jae
add
push
add
fmuls
repnz
nop
cld
jae
jle
add
add
clc
repnz
nop
cld
jae
add
add
test
push
mov
xchg
ret
pop
cli
addr16
pop
dec
dec
pop
push
add
push
mov
nop
leave
jmp
cmp
fs
pop
mov
add
push
mov
xchg
ret
roll
jmp
add
add
jo
mov
nop
leave
jmp
lods
lahf
mov
add
add
xor
mov
xor
add
clc
repnz
nop
cld
jae
add
add
sti
test
push
mov
nop
leave
jmp
add
add
add
cs
clc
repnz
nop
cld
jae
add
cltd
dec
add
cltd
test
rep
push
mov
nop
leave
jmp
lods
add
add
popf
add
add
push
mov
xchg
ret
cmp
add
add
add
or
nop
nop
cld
jae
add
mov
stos
push
mov
nop
leave
jmp
add
mov
or
nop
nop
cld
jae
xchg
add
mov
test
add
jnp
add
add
add
mov
jg
add
add
lret
into
jb
mov
add
test
push
clc
repnz
nop
cld
jae
lods
xor
in
cli
add
add
clc
repnz
nop
cld
jae
addr16
add
add
fs
clc
repnz
nop
cld
jae
add
add
lea
and
pop
clc
repnz
nop
cld
jae
jp
and
add
add
mov
imul
clc
repnz
nop
cld
jae
add
xchg
cmp
jp
pop
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
lods
add
pop
in
add
mov
incl
push
add
pushf
iret
add
in
jp
test
push
mov
nop
leave
jmp
add
mov
aas
sbb
rcll
iret
inc
add
pop
dec
and
push
mov
xchg
ret
int3
pop
add
add
add
shll
add
repnz
nop
cld
jae
in
add
lods
pop
add
xchg
mov
mov
xchg
ret
mov
xchg
add
push
add
dec
push
push
mov
xchg
ret
add
mov
pushl
jne
push
mov
xchg
ret
add
add
jp
dec
mov
clc
repnz
nop
cld
jae
add
add
movb
jle
sbb
repnz
nop
cld
jae
int3
cmp
incl
add
repnz
nop
cld
jae
add
cmp
jae
je
push
mov
nop
leave
jmp
addr16
xchg
cltd
or
push
mov
xchg
ret
add
add
add
sub
repnz
nop
cld
jae
add
hlt
lods
incl
add
dec
jl
clc
repnz
nop
cld
jae
add
and
mov
xchg
ret
add
pop
pop
pop
iret
add
popa
test
movb
repnz
nop
cld
jae
and
push
add
sub
repnz
nop
cld
jae
add
out
cmpl
push
mov
nop
leave
jmp
cmp
add
xor
mov
mov
xchg
ret
in
dec
add
jns
mov
int
popa
add
add
repnz
nop
cld
jae
push
sub
clc
repnz
nop
cld
jae
mov
add
in
clc
repnz
nop
cld
jae
add
mov
add
mov
xchg
ret
add
pop
adc
push
cli
pushf
mov
push
mov
nop
leave
jmp
push
cmp
ficoml
mov
xchg
ret
jns
add
add
add
aam
add
clc
repnz
nop
cld
jae
adc
add
roll
and
pop
push
clc
repnz
nop
cld
jae
mov
add
mov
add
push
mov
nop
leave
jmp
push
pusha
clc
repnz
nop
cld
jae
add
pop
add
add
fisubs
mov
xchg
ret
adc
jge
xchg
add
mov
dec
push
clc
repnz
nop
cld
jae
mov
add
inc
add
idiv
clc
repnz
nop
cld
jae
add
lea
mov
clc
repnz
nop
cld
jae
mov
add
jns
dec
imul
cld
jae
lea
add
cmp
push
mov
nop
leave
jmp
add
cltd
pop
inc
mov
clc
repnz
nop
cld
jae
incl
xchg
lock
jmp
nop
cld
jae
add
jge
clc
repnz
nop
cld
jae
mov
push
mov
mov
push
mov
xchg
ret
pop
mov
add
add
clc
repnz
nop
cld
jae
pop
add
pop
and
push
mov
nop
leave
jmp
xchg
add
add
push
mov
popa
push
mov
nop
leave
jmp
incl
mov
add
push
push
mov
xchg
ret
dec
add
add
cld
lea
push
mov
xchg
ret
cltd
addr16
add
pop
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
add
lea
hlt
add
pop
cmpsl
xchg
out
mov
es
incl
add
pop
lods
add
mov
leave
add
sti
clc
repnz
nop
cld
jae
dec
lahf
lahf
hlt
movsb
add
mov
mov
nop
leave
jmp
add
ljmp
nop
leave
jmp
lock
jne
xchg
mov
push
mov
xchg
ret
incl
jp
leave
aaa
int3
push
push
mov
xchg
ret
add
add
cltd
lea
xchg
lods
jne
clc
repnz
nop
cld
jae
mov
mov
sub
test
loopne
clc
repnz
nop
cld
jae
add
pop
jle
push
mov
xchg
ret
add
leave
add
add
add
mov
push
mov
xchg
ret
in
dec
rcrl
add
mov
repnz
nop
cld
jae
add
cmp
cmp
nop
leave
jmp
popf
leave
push
pop
xchg
cwtl
ret
clc
repnz
nop
cld
jae
add
add
add
pop
add
nop
cld
jae
dec
add
cmp
nop
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
addr16
mov
aaa
les
jle
add
in
nop
leave
jmp
xor
push
and
push
mov
xchg
ret
mov
popf
mov
mov
add
add
in
nop
leave
jmp
add
adc
fstl
mov
nop
leave
jmp
pop
add
jns
cmp
add
dec
loop
jmp
add
xor
add
add
test
push
mov
nop
leave
jmp
xor
popf
add
add
in
nop
leave
jmp
dec
aas
mov
add
mov
xor
push
mov
xchg
ret
and
leave
movsb
mov
add
clc
repnz
nop
cld
jae
add
jp
mov
add
clc
repnz
nop
cld
jae
add
mov
in
nop
leave
jmp
add
add
add
jmp
repnz
nop
cld
jae
mov
add
test
xor
add
clc
repnz
nop
cld
jae
add
add
xchg
dec
add
clc
repnz
nop
cld
jae
mov
add
daa
push
push
push
mov
xchg
ret
movsb
lea
add
repnz
mov
nop
leave
jmp
add
add
add
cltd
add
sti
add
xchg
ret
add
mov
add
mov
in
scas
adc
je
add
adc
push
jge
repz
adc
jmp
add
cmp
mov
in
jp
stos
dec
clc
repnz
nop
cld
jae
add
add
add
pop
add
push
mov
xchg
ret
popf
cltd
lahf
add
mov
push
mov
nop
leave
jmp
add
dec
and
add
movsb
push
nop
cld
jae
xchg
add
pop
add
stos
clc
repnz
nop
cld
jae
pop
add
pop
mov
nop
cld
jae
in
xchg
add
add
pop
ror
add
push
mov
nop
leave
jmp
leave
int3
jnp
mov
xor
mov
mov
clc
repnz
nop
cld
jae
in
fwait
and
clc
repnz
nop
cld
jae
and
inc
add
xor
add
push
mov
nop
leave
jmp
add
adc
push
push
mov
xchg
ret
add
and
add
gs
add
clc
repnz
nop
cld
jae
and
lock
mov
clc
repnz
nop
cld
jae
pop
lea
pop
mov
clc
repnz
nop
cld
jae
push
jns
add
push
mov
nop
leave
jmp
add
jle
add
push
ljmp
jmp
add
jns
add
dec
add
xchg
in
inc
add
add
add
add
add
mov
clc
repnz
nop
cld
jae
pop
push
ljmp
nop
cld
jae
push
push
in
test
push
mov
xchg
ret
lods
add
add
add
cld
incl
dec
aas
add
in
jp
add
in
jp
lods
adc
mov
push
mov
nop
leave
jmp
add
cmp
add
mov
in
nop
leave
jmp
dec
add
in
aas
movzwl
clc
repnz
nop
cld
jae
add
add
jb
mov
push
adc
inc
clc
repnz
nop
cld
jae
add
add
fs
in
nop
leave
jmp
add
popf
add
push
jmp
add
xor
clc
repnz
nop
cld
jae
add
add
jbe
push
mov
xchg
ret
xchg
popf
add
popf
add
dec
cmp
repnz
nop
cld
jae
add
cltd
jns
add
dec
push
clc
repnz
nop
cld
jae
add
mov
dec
add
jle
clc
repnz
nop
cld
jae
dec
pop
cltd
lock
or
cs
insb
clc
repnz
nop
cld
jae
add
add
arpl
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
add
mov
add
add
repnz
nop
cld
jae
add
add
cmpsl
mov
popf
clc
repnz
nop
cld
jae
add
push
loope
push
mov
repz
mov
add
nop
add
add
mov
push
clc
repnz
nop
cld
jae
pop
lea
push
enter
push
mov
nop
leave
jmp
jge
add
add
clc
repnz
nop
cld
jae
fs
pop
push
push
mov
xchg
ret
mov
add
mov
rolb
mov
movsb
clc
repnz
nop
cld
jae
add
pop
add
lods
lods
in
call
clc
repnz
nop
cld
jae
pop
dec
mov
addb
clc
mov
clc
repnz
nop
cld
jae
hlt
int3
add
repnz
nop
nop
cld
jae
pop
adc
add
add
add
movzwl
push
mov
nop
leave
jmp
add
add
push
jle
lret
clc
repnz
nop
cld
jae
adc
add
jne
clc
repnz
nop
cld
jae
add
jb
mov
mov
cltd
xor
add
add
pop
add
nop
nop
cld
jae
cli
cmp
add
jnp
fisttpl
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
adc
add
and
jle
push
clc
repnz
nop
cld
jae
pop
popf
cltd
cltd
dec
jle
fisttps
nop
cld
jae
jge
adc
and
jne
clc
repnz
nop
cld
jae
lock
mov
clc
repnz
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
add
xchg
add
add
or
repnz
nop
cld
jae
and
cltd
popa
add
mov
push
clc
repnz
nop
cld
jae
push
sbb
mov
nop
leave
jmp
add
jp
in
iret
add
mov
push
mov
nop
leave
jmp
cmp
in
stos
jmp
add
add
dec
lahf
add
lods
jle
pop
add
pop
clc
repnz
nop
cld
jae
cltd
in
add
add
dec
add
pushl
push
mov
xchg
ret
dec
cli
leave
add
leave
dec
leave
add
push
mov
xchg
ret
add
cmp
add
clc
repnz
nop
cld
jae
jle
lahf
add
pop
clc
repnz
nop
cld
jae
add
pop
pop
add
lea
jne
clc
repnz
nop
cld
jae
add
lock
xchg
test
xor
add
push
mov
nop
leave
jmp
push
hlt
add
mov
add
clc
repnz
nop
cld
jae
pushf
add
add
add
push
mov
nop
leave
jmp
add
loopw
mov
into
inc
add
in
add
add
pop
fs
dec
subl
push
mov
xchg
ret
add
add
lods
in
pop
push
mov
xchg
ret
lea
and
push
add
int3
jae
icebp
insl
push
push
mov
xchg
ret
leave
lods
jns
lock
pop
fcoml
in
addl
js
add
shll
mov
add
lock
adc
repnz
nop
cld
jae
int3
add
jge
mov
mov
push
mov
xchg
ret
add
push
pushf
add
add
and
clc
repnz
nop
cld
jae
mov
add
push
mov
push
mov
xchg
ret
add
mov
in
lea
mov
clc
repnz
nop
cld
jae
int3
pop
add
popf
movb
inc
push
mov
xchg
ret
jns
lea
add
and
outsb
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
dec
xor
lret
mov
nop
leave
jmp
add
add
add
cltd
lods
cmp
nop
cld
jae
cli
xor
add
add
cltd
pusha
clc
repnz
nop
cld
jae
dec
lods
addr16
pop
ljmp
add
push
leave
jp
iret
add
outsl
mov
push
mov
nop
leave
jmp
cltd
mov
cmp
push
dec
lods
addb
xchg
cmpsl
out
mov
push
mov
nop
leave
jmp
add
shl
xchg
sub
repnz
nop
cld
jae
add
jnp
add
jge
xor
icebp
stos
mov
push
mov
xchg
ret
add
add
push
mov
clc
repnz
nop
cld
jae
cli
xchg
add
fs
pop
pop
pop
push
mov
xchg
ret
mov
incl
add
mov
push
mov
xchg
ret
pop
adc
ss
shr
push
mov
nop
leave
jmp
add
add
jp
jmp
mov
nop
leave
jmp
pop
add
movsb
add
mov
adc
mov
mov
clc
repnz
nop
cld
jae
add
lods
decl
repnz
nop
cld
jae
add
and
add
mov
xchg
ret
pop
add
incl
cltd
add
js
push
mov
nop
leave
jmp
add
and
je
push
mov
nop
leave
jmp
add
cltd
out
push
push
mov
xchg
ret
iret
roll
jp
hlt
add
add
add
in
nop
leave
jmp
xor
mov
add
add
mov
inc
add
lock
add
add
sub
mov
nop
leave
jmp
add
xor
cmp
nop
cld
jae
push
add
incl
adc
mov
clc
repnz
nop
cld
jae
cltd
adc
jns
push
clc
repnz
nop
cld
jae
add
add
mov
mov
add
add
je
add
leave
add
add
stc
sub
loop
mov
mov
inc
push
aaa
andl
sbb
add
sahf
addb
adc
jnp
add
mov
mov
mov
lcall
mov
mov
dec
insl
adc
mov
or
push
mov
add
cli
ss
fisttpl
subl
add
mov
add
mov
mov
fwait
fwait
and
mov
or
cmpsl
sbb
jbe
addb
flds
mov
xchg
push
lods
in
mov
add
sub
lock
mov
mov
push
cmp
mov
push
jl
dec
push
xor
fcoml
sti
pop
les
dec
lods
and
mov
inc
inc
cld
and
add
pop
ljmp
outsb
mov
mov
and
xor
add
decl
pop
arpl
dec
es
jge
inc
xor
mov
cmpsl
mov
mov
or
icebp
pop
lods
mov
mov
inc
inc
fs
ds
adc
cltd
inc
add
scas
fldenv
lea
add
push
cmp
insl
add
sahf
push
add
xchg
jbe,pn
movsb
bound
mov
sub
mov
add
mov
xor
mov
pop
out
daa
xchg
add
mov
push
mov
pop
jle
stos
mov
scas
pop
es
or
imul
mov
popa
std
and
mov
mov
add
in
leave
cmpsb
sbb
sbb
push
xchg
and
sub
add
mov
add
add
adc
mov
ljmp
fcos
cmpsl
ret
inc
add
jecxz
inc
inc
add
push
add
das
addl
jo
mov
xor
push
add
fwait
std
inc
add
cmc
nop
add
add
mov
dec
push
pop
imul
mov
mov
inc
pop
xor
ja
cmp
add
mov
repz
push
faddl
add
mov
mov
add
mov
call
add
xchg
popf
fnsave
cmp
iret
lret
mov
xchg
addb
mov
rolb
movsb
orl
add
cmp
mov
mov
add
or
movsb
fnstcw
adc
mov
add
in
mov
test
add
mov
sub
sbb
ficoms
add
idivl
dec
inc
out
lcall
mov
mov
aam
shll
push
ja
lock
addb
in
insl
jnp
add
mov
mov
inc
add
lea
and
dec
icebp
inc
rolb
mov
mov
sbb
fldcw
pop
rolb
mov
pop
xchg
rolb
mov
mov
dec
pop
test
rolb
or
decl
outsb
xchg
dec
mov
jp
addb
sbb
xlat
inc
or
and
inc
and
mov
inc
mov
adc
sub
add
inc
add
xlat
jne
or
pop
pop
out
mov
cmpsb
das
mov
and
dec
es
scas
push
es
mov
mov
out
aaa
dec
idivl
sbb
aad
adc
dec
push
pop
sti
cmp
add
add
movsb
in
test
imul
sti
sub
mov
sub
out
popf
movsb
cwtl
in
push
or
pop
and
jne
int3
inc
add
dec
ss
mov
mov
dec
int
hlt
shrl
int3
jl
addb
xchg
rolb
popa
xchg
mov
add
mov
rcll
add
add
mov
push
add
fistl
and
add
icebp
pop
pop
mov
mov
mov
loop
mov
add
xchg
roll
cwtl
shll
adc
mov
into
into
lcall
inc
mov
mov
cmp
adc
xchg
ds
pop
popf
test
ret
or
jns
je
cmc
js
jp
frstor
cmp
or
add
pop
or
ja
add
inc
in
bound
mov
ja
lods
mov
dec
jno
mov
cmp
cmpsl
cwtl
imul
fadds
leave
psllq
dec
cmp
ret
test
inc
push
orl
test
jp
add
adc
mov
pop
mov
mov
pop
in
pop
fwait
adc
xor
cmp
into
bound
mov
test
pop
sbb
mov
add
mov
push
add
push
into
dec
adc
mov
mov
div
push
add
or
pop
push
sti
rcr
inc
scas
cmc
das
adc
xor
xor
push
fwait
loopne
mov
dec
lods
rcrl
mov
cwtl
loop
mov
jge
push
adc
mov
or
and
mov
arpl
mov
add
fwait
cmp
jp
xchg
inc
add
aam
pusha
add
mov
xchg
jae
ds
jmp
mov
add
bound
mov
mov
add
test
mov
add
sahf
cmpl
js
sbb
ljmp
sti
test
mov
icebp
xor
mov
push
add
and
test
dec
or
ja
push
pop
sbb
add
mov
scas
fistpll
mov
add
mov
fwait
arpl
mov
int
push
mov
insb
call
insb
add
mov
add
jmp
lea
add
dec
mov
push
mov
mov
adc
mov
xor
add
popf
push
out
in
sbb
add
movsl
cwtl
mov
repnz
out
add
insb
dec
rolb
mov
mov
in
cmpsl
mov
sbb
or
fnstenv
jae
jno
mov
xor
mov
mov
imul
mov
xor
add
mov
pop
addb
pop
mov
mov
fdivl
add
outsb
lea
add
lahf
out
fsubrs
add
stos
pop
ds
rolb
mov
stc
pop
sub
sbb
mov
mov
push
add
fwait
pop
mov
inc
mov
mov
iret
loope
ud1
stos
enter
rolb
add
mov
xor
hlt
jle
inc
addb
jns
push
add
divb
add
leave
push
push
add
xchg
popa
jbe
push
mov
lea
add
jbe
and
mov
leave
addb
sub
aaa
inc
add
add
add
ja
or
negb
ja
or
mul
stos
push
sbb
out
dec
std
push
mov
fsubrs
leave
lidtl
push
popa
pop
dec
aas
ret
adc
pop
fwait
push
aam
add
add
jmp
mov
cmp
sbb
mov
add
leave
inc
fidivrs
xchg
push
test
add
mov
mov
add
aaa
rolb
mov
push
add
pop
shl
bound
mov
movsb
jo
mov
rcll
cmp
call
or
xchg
idivb
jp
add
mov
mov
add
call
fs
xor
mov
fdivs
mov
test
sub
jp
adc
movsb
mov
sub
pushf
push
ret
dec
xchg
mov
jb
mov
push
sub
inc
int3
call
clc
pusha
add
dec
mov
mov
mov
outsl
cmp
jle
mov
add
push
pop
xchg
or
and
add
add
mov
movsbl
insl
mov
add
push
cmpsl
incb
leave
cmp
sbb
jns
loopne
mov
sarl
jae
xchg
mov
add
inc
inc
pop
sbbl
int
xchg
add
je
pop
inc
mov
mov
adc
mov
pop
sbb
inc
sub
add
leave
add
pushf
pop
insl
addb
jne
add
add
adc
jmp
mov
add
add
add
mov
mov
dec
repz
mov
aam
jle
in
fwait
punpckhwd
pop
adc
or
add
mov
add
add
mov
mov
mov
mov
sub
add
addb
dec
ret
adc
mov
mov
mov
sub
pop
adc
mov
pusha
add
scas
cmp
in
lahf
and
or
mov
aas
imul
sbb
lea
lods
add
mov
mov
lret
sub
popl
add
mov
pushf
pushf
insb
lods
jo
mov
cmp
add
fldl
pusha
add
push
mov
sbb
insb
sbb
add
jge
push
pop
test
fildl
in
ret
sbb
add
add
add
xor
mov
cwtl
xchg
jp
in
add
add
rolb
test
mov
xrelease
mov
pop
cli
sub
repnz
fstpt
bound
mov
dec
xchg
and
mov
add
mov
add
mov
fxch
cmpsl
clc
fucomi
pop
xchg
jae
add
ficomps
insl
add
add
and
testb
ds
imul
cmp
xchg
les
add
mov
lcall
mov
sbb
mov
mov
add
jg
insl
xor
mov
repnz
add
add
loope
xchg
cmp
ret
sbb
test
add
and
add
idiv
push
cmp
add
mov
sahf
popf
sbb
jp
cld
movsb
gs
ljmp
lret
jl
mov
xchg
add
loopne
mov
fcoms
add
mov
int3
call
ficompl
push
sbb
mov
rorl
or
sti
test
in
add
cmp
cmp
js
sub
pushf
movb
pop
in
or
add
cmpsb
mov
mov
call
add
add
mov
mov
cmc
mov
test
mov
and
fidivs
add
pop
xor
es
mov
mov
mov
add
inc
add
loop
mov
jns
repz
dec
lock
sbb
sub
bound
mov
push
push
cwtl
mov
loope
sub
je
daa
out
orl
lcall
inc
xchg
imul
pusha
add
add
sub
add
daa
sub
add
mov
jle,pt
shll
leave
iret
mov
icebp
jg
xchg
sahf
aas
add
mov
add
push
sub
aam
fdivrl
pop
xchg
or
add
aas
outsl
mov
add
fiaddl
pop
test
add
xchg
insl
inc
divl
ss
mov
sbb
movsb
mov
lock
mov
ret
jnp
add
or
add
sub
mov
xor
mov
and
lds
add
daa
xchg
fdivrl
or
mov
arpl
pushf
xchg
mov
add
add
cmp
cmp
add
pop
pop
jp
add
out
jg
add
add
imul
sti
ss
mov
mov
add
clc
mov
xchg
add
aad
add
xor
rcll
aad
je
mov
add
pusha
add
jl
jmp
mov
mov
add
cmp
fstpl
push
js
jnp
add
push
mov
imul
push
sub
dec
out
shrl
add
cltd
clc
cmpsb
push
and
int3
mov
mov
xor
jne
or
sbb
dec
test
rcll
out
imulb
mov
cli
cmpsl
lret
inc
add
pop
and
add
dec
in
cmp
mov
pop
data16
pop
inc
add
rolb
push
adc
cmp
pop
or
mov
xor
mov
add
addr16
pushf
pop
jo
mov
rolb
mov
or
addb
repz
or
add
add
or
cmp
fnstcw
or
out
or
or
mov
add
xor
mov
out
push
fidivl
int
jo
mov
push
jb
mov
add
mov
add
addb
lds
adc
mov
and
mov
pop
sbb
mov
dec
aad
out
pop
push
stos
loopne
mov
int3
scas
push
push
push
rolb
ficoml
repnz
sbb
mov
pushf
insb
test
add
loop
mov
fldt
rolb
mov
add
add
and
jae
adc
inc
or
movsb
xchg
inc
add
xchg
add
jne
rolb
mov
sub
mov
add
mov
es
add
mov
repnz
ret
push
arpl
push
ljmp
push
movsl
or
cmp
push
add
mov
sti
sub
adc
push
lahf
add
or
loopne
mov
mov
xchg
add
ja
sbb
lcall
jl
add
cmp
jecxz
dec
rolb
mov
mov
push
adc
fcmovnbe
add
into
sbb
add
js
shrw
add
mov
mov
rolb
mov
lods
push
push
mov
insl
gs
add
iret
and
stos
adc
mov
daa
xorl
flds
add
pusha
add
xchg
fwait
and
out
scas
iret
and
mov
das
dec
fwait
push
inc
add
mov
out
fists
add
ds
sub
add
mov
add
jae
fstpl
mov
gs
clc
lret
push
inc
fcoms
mov
add
push
add
lds
inc
aas
sub
stos
xchg
sbb
add
mov
sti
mov
mov
mov
xlat
or
inc
jmp
repz
lret
mov
fdivr
adc
mov
xchg
sub
add
lock
mov
jbe
cmpsb
jns
stos
xor
ljmp
mov
add
and
push
ds
stc
in
add
jl
out
cli
pop
inc
add
mov
mov
mov
adc
rolb
mov
pop
scas
fidivs
mov
popa
adc
mov
adc
mov
adc
out
aam
pop
sbb
xchg
add
mov
outsb
out
add
sub
push
sti
test
lods
add
xchg
add
and
push
leave
fwait
push
int
insb
sub
cld
out
mov
jno
fsubrl
lret
push
xchg
lea
add
mov
ss
mov
cmp
mov
mov
lock
adc
mov
jg
push
lds
inc
jb
mov
mov
add
out
cs
dec
arpl
xor
mov
or
add
add
ljmp
push
pop
into
jno
mov
test
add
push
jle
icebp
cltd
mov
jb
mov
stc
add
add
mov
pop
mov
adc
mov
pop
mov
mov
outsb
jbe
jae
pop
dec
or
mov
cmpsb
and
pushf
or
cmp
outsl
pop
clc
out
incl
add
mov
pop
in
orl
jbe
add
movsl
adc
mov
jae
sub
insl
xor
mov
jae
xor
mov
mov
jle
bound
mov
mov
add
mov
dec
lds
sbb
and
mov
mov
pop
sub
xor
ret
or
or
or
repnz
lahf
xlat
sub
xor
daa
and
mov
xor
mov
mov
jl
insb
ja
add
mov
add
rolb
adc
mov
add
mov
fbld
push
fdivrs
lods
daa
xor
mov
dec
mov
add
sbb
daa
sub
inc
je
adc
mov
mov
mov
mov
insb
fdivrl
fiadds
mov
add
jge
pop
roll
cmpsl
xchg
int
jl
adc
add
jo
mov
inc
rolb
mov
in
adc
xlat
cvtps2pd
adc
mov
add
icebp
mov
mov
xor
mov
or
jns,pt
sti
rcll
mov
push
mov
into
dec
cmp
clc
cmc
in
or
xchg
vpmuludq
jns
add
fwait
cmp
add
mov
cmp
loope
add
mov
add
arpl
add
and
and
mov
in
cmpl
clc
out
add
push
cli
int3
xchg
fstpl
lea
fnstsw
fstl
add
jg
or
mov
fsubrl
mov
aaa
inc
add
add
mov
inc
inc
push
rolb
push
outsb
cmp
mov
and
lahf
sub
cmp
lds
push
dec
lods
ljmp
mov
ret
inc
lds
adc
add
cmpsb
mov
push
call
aaa
data16
cwtl
xchg
out
je
push
xorl
pop
mov
inc
addb
adc
addr16
ds
mov
ficoml
or
test
add
add
inc
enter
rcrl
pop
xchg
roll
mov
mov
rcrl
int
fsubrp
test
add
pop
adc
add
inc
dec
lea
in
jno
add
fsubs
out
cld
xchg
jecxz
add
add
add
mov
xor
xor
clc
leave
sbb
pop
js
iret
adc
cmpsl
adc
shl
sbb
imul
mov
andl
and
int
pushf
xchg
bound
mov
dec
jmp
jge
add
mov
mov
test
int3
aaa
addb
and
add
jl
aam
inc
addb
adc
loopne
mov
mov
xchg
cwtl
jno
inc
das
mov
ficomps
in
jno
add
mov
cs
mov
and
inc
fistl
data16
rcl
mov
pushf
nop
add
inc
xchg
cmp
stc
nop
add
cmp
add
ret
cltd
or
mov
sbb
jg
pop
xchg
inc
out
pop
arpl
or
ds
sbb
test
mov
mov
ja
xchg
das
sub
adc
add
out
mov
out
cmp
shr
aaa
jno
cmp
adc
cmc
imull
jo
mov
adc
mov
test
add
add
iret
cmpl
add
inc
mov
inc
js
push
add
mov
shl
bound
mov
fwait
lods
sub
xor
mov
fisubrl
mov
cs
adc
out
imul
add
mov
add
mov
div
pop
punpckhdq
add
imul
mov
jnp
rolb
mov
add
or
jl
add
sbb
ds
pop
jecxz
add
add
out
dec
push
push
mov
add
dec
repz
loope
xchg
ljmp
mov
mov
mov
lcall
add
mov
inc
int
mov
arpl
cmpsl
out
pop
add
aas
mov
xchg
push
test
or
add
pop
jne
push
sub
mov
sbb
popa
jnp
xlat
fldcw
push
adc
cmp
stc
dec
ljmp
jmp
mov
std
inc
fldt
jmp
or
cmp
cmp
pop
cmp
int3
lock
cmp
sbb
mov
repz
in
jmp
pop
dec
nop
add
and
mov
mov
lret
inc
add
xchg
loop
mov
mov
mov
outsl
sbb
out
or
xchg
add
add
ds
cmp
iret
imul
lods
add
or
sbb
lea
mov
and
addl
mov
mov
mov
mov
mov
cmpsb
mov
stos
mov
inc
add
dec
mov
add
imull
or
push
cmp
nop
add
mov
jmp
add
nop
add
cmp
sub
mov
jge
aad
outsb
xchg
add
out
fsub
sub
mov
rol
addr16
and
mov
mov
stos
loope
add
xlat
xchg
xchg
mov
add
sub
jne
stc
popa
sbb
sbb
fisubrs
dec
inc
mov
dec
js
lock
pusha
add
dec
cmp
mov
inc
add
jg
mov
mov
adc
mov
jnp
int
stc
xor
sarl
movsb
xchg
push
add
jae
aad
orl
pop
and
addb
mov
test
lret
cld
addl
xchg
jmp
fistps
inc
jae
jg
add
nop
add
xchg
aas
inc
sbb
add
cmp
das
popf
add
pop
push
add
sbbl
ja
aaa
adc
popf
ret
int3
jae
rolb
mov
mov
movl
xchg
scas
insb
jb
mov
mov
mov
rolb
mov
jae
jo
mov
or
and
mov
xchg
enter
int3
push
jmp
sti
pop
fs
adc
mov
iret
mov
cltd
in
mov
cmp
mov
push
testl
clc
adc
mov
das
mov
add
sbb
std
stos
pop
mov
push
adc
int
cwtl
cld
mov
xchg
xor
mov
mov
adc
mov
mov
add
dec
xchg
popa
decl
fmull
enter
mov
mov
cs
mov
insb
mov
xchg
cmpsb
mov
pushf
roll
add
mov
mov
ret
sbb
mov
outsl
lds
data16
mov
sbb
push
push
add
daa
pop
rolb
xchg
cld
andl
int
mov
push
pop
jle
mov
das
inc
xor
cmp
rorl
add
mov
jns
ljmp
es
or
mov
in
movsl
inc
pop
xor
and
int
jl
imul
lods
sbb
cmp
add
mov
mov
mov
dec
mov
pop
cld
stos
mov
mov
call
mov
add
incl
lahf
xchg
or
sti
sbb
es
lods
jl
outsb
or
into
lds
and
rolb
mov
add
in
cli
mov
sbb
push
loop
mov
lock
add
sbb
jecxz
movsb
pop
push
add
and
adc
ja
add
mov
lock
inc
test
mov
rolb
mov
insb
iret
repz
add
test
add
sub
pop
push
inc
dec
push
das
arpl
into
loopne
mov
mov
cmc
in
je
add
leave
aad
push
xor
mov
add
xchg
sub
xor
mov
fwait
in
sbb
roll
push
mov
inc
and
popf
push
dec
dec
ud1
rcrl
sub
push
mov
adc
and
mov
jbe
sbb
mov
mov
lods
aam
sbb
mov
pop
inc
in
inc
pop
test
js,pt
out
push
add
in
sysenter
addb
js
insl
mov
into
mov
mov
stos
sub
push
ss
adc
mov
mov
loope
in
and
inc
ret
addb
repnz
rcll
mov
and
push
add
ss
loop
mov
dec
push
mov
cs
hlt
pop
cmc
sub
mov
in
inc
ja
sub
adc
jg
mov
add
insl
cld
cmp
or
mov
add
mov
enter
mov
icebp
push
add
sub
add
rorl
xor
mov
rcrl
popf
into
sbb
insb
push
pop
leave
jno
inc
add
pushf
push
sub
add
in
jle
xor
mov
lock
or
mov
rolb
mov
add
dec
or
add
adc
mov
inc
add
scas
pop
lock
and
pop
test
dec
stc
into
fcomps
add
pop
adc
test
in
ja
mov
addb
fists
and
sarl
add
movsb
clc
cmp
push
stos
sub
jae
add
mov
and
fsubs
test
jae
mov
insl
out
xchg
add
push
cwtl
mov
mov
outsl
inc
add
popa
xchg
fcomp
dec
fbstp
cwtl
or
add
dec
iret
out
mov
in
lds
mov
clc
push
xchg
jb
mov
xchg
jo
mov
jno
add
test
add
xor
mov
add
fistps
mov
sub
sub
add
mov
movsb
and
mov
add
and
inc
leave
test
das
loop
mov
and
add
inc
lods
ret
mov
les
adc
xor
add
pushf
xor
mov
shl
mov
cmp
mov
add
mov
jo
mov
mov
xchg
leave
popa
cs
mov
notl
outsl
push
test
lcall
mov
inc
xor
pop
lods
jbe
cli
xchg
inc
jle
push
mov
add
sub
mov
or
jae
jno
add
push
push
or
mov
mov
sub
in
jle
add
mov
add
mov
add
mov
or
negl
add
add
jo
mov
adc
mov
mov
xchg
or
mov
adc
add
fldl
in
ss
movsb
test
mov
movsb
lock
ds
popa
push
xchg
test
je
stos
xchg
xor
add
mov
cltd
jo
mov
xlat
and
mov
lret
jecxz
lea
sbb
call
sbb
or
sub
lds
fbld
add
push
and
add
mov
adc
mov
adc
mov
mov
add
mov
into
loope
xchg
push
cmp
test
adc
mov
inc
sti
mov
int
sub
lds
jne
inc
shll
repnz
mov
xor
mov
jecxz
xor
add
mov
pop
scas
test
jl
inc
rol
mov
xlat
aam
test
out
lds
add
test
es
add
xchg
sbb
mov
sub
sub
jne
add
je
xchg
mov
add
sbb
imul
mov
stc
xchg
stc
jne
lret
cmp
cmpsl
dec
and
sbb
cwtl
in
mov
mov
fidivrl
scas
xor
fiadds
cmpsl
mov
movsl
jmp
add
mov
mov
enter
add
sti
sub
mov
bound
mov
mov
and
ja
mov
inc
lret
aas
cmp
mov
mov
pop
mov
test
pop
pop
test
cmpsb
or
add
lods
outsb
in
sbb
in
dec
cmpl
mov
mov
loope
enter
mov
outsb
testl
jb
mov
mov
movsl
jge
mov
insb
leave
dec
xchg
add
mov
roll
mov
add
mov
ss
jne
inc
add
adc
mov
mov
insb
or
add
sbb
out
mov
imul
jmp
add
add
add
fnstenv
sti
outsl
imul
jecxz
add
pop
std
ja
xchg
push
and
jbe
clc
push
push
add
sbb
in
mov
push
inc
rolb
dec
sbb
mov
or
std
cmpl
lods
or
mov
adc
inc
or
mov
mov
cmp
sahf
cmp
jno
test
or
fmulp
xchg
add
push
repnz
mov
inc
into
std
jle
add
rolb
mov
roll
mov
pop
mov
out
int
rolb
mov
int
add
inc
aas
insb
cwtl
mov
mov
jno
in
add
xlat
pop
xor
and
mov
mov
sbb
add
movsb
ds
leave
arpl
insl
cmpsl
bound
mov
mov
rolb
mov
in
lds
add
scas
mov
fildll
mov
xor
add
add
cmpl
lahf
mov
inc
add
mov
mov
jae
mov
pop
fs
out
mov
lock
pop
pusha
add
rolb
lock
lea
loop
mov
int3
out
xchg
add
inc
pop
xor
mov
xchg
pop
sbb
xchg
xor
mov
adc
push
sub
add
xor
mov
push
pop
sbb
cwtl
js
mov
jno
rolb
mov
mov
add
outsb
repz
cmp
xor
mov
cmp
rolb
mov
add
push
adc
mov
mov
add
addb
and
mov
mov
push
inc
add
pop
push
add
pop
inc
test
insl
mov
mov
add
add
sahf
hlt
mov
or
pop
gs
mov
mov
push
in
test
dec
pop
push
sahf
jae
fbstp
dec
out
jg
push
mov
mov
ss
mov
sub
add
jb
mov
cs
mov
data16
test
leave
lock
jns
lea
cmpsb
xchg
mov
popf
inc
or
or
lcall
jmp
mov
pop
rolb
xor
in
mov
or
add
add
out
popf
sti
push
std
scas
xchg
jge
test
mov
and
mov
ss
fdivp
add
cmp
shll
xor
add
jb
mov
adc
mov
mov
addb
hlt
push
aaa
inc
and
inc
lods
popf
test
aam
add
in
inc
popa
repz
add
leave
mov
das
add
mov
or
mov
add
mov
mov
inc
scas
sbb
daa
js
adc
add
add
add
mov
fstl
add
scas
dec
aad
outsb
push
push
ret
cmp
mov
mov
pop
stc
inc
add
iret
pop
pushf
insb
loopne
mov
jmp
add
addb
jno
lea
xchg
addr16
xchg
mov
test
in
inc
add
popf
push
out
and
mov
jae
add
int
add
mov
popf
pop
xor
mov
cli
ja
push
add
mov
mov
mov
cmp
bound
mov
pop
hlt
mov
xchg
mov
scas
sub
rcr
shrl
mov
add
mov
mov
add
add
mov
mov
add
mov
add
mov
mov
aaa
sub
add
in
ss
hlt
pop
dec
xlat
insb
aad
aas
fcomi
add
push
repnz
loop
mov
and
xchg
xchg
push
mov
dec
jne
das
pushf
sub
enter
outsl
cmp
mov
aam
lcall
cmc
into
insb
roll
xchg
or
adc
mov
out
sbb
rcll
push
mov
jns
ljmp
xlat
xor
icebp
rolb
mov
gs
out
pop
cmp
add
mov
je
jp
pop
mov
mov
mov
daa
inc
push
mov
lock
sbb
and
shll
scas
pop
in
add
aad
loopne
mov
fidivs
into
and
xchg
or
mov
adc
sbb
xchg
push
pop
push
lahf
lods
mov
push
arpl
ret
scas
jns
xor
xor
mov
mov
add
fsubs
pusha
add
add
out
cmp
sub
int3
add
lods
int
cmp
fistpll
sub
add
jnp
movsb
loopne
mov
out
bound
mov
mov
mov
scas
cli
dec
push
mov
mov
nop
add
repz
add
cs
test
mov
stos
addr16
mov
mov
mov
mov
stos
repnz
cmpsl
pop
mov
es
stos
jp
outsl
add
or
pop
xchg
addb
jno
push
arpl
mov
add
xor
add
adc
mov
jae
ljmp
in
in
nop
add
lret
ja
add
mov
push
mov
mov
xor
add
hlt
jecxz
add
insb
dec
pop
mov
add
add
insb
ror
push
repz
cs
jg
add
add
out
lret
lahf
arpl
pop
arpl
sti
cmpsb
inc
add
add
add
jle
add
and
dec
aas
ljmp
cmovne
add
push
incb
inc
aam
fcmovnu
cltd
inc
daa
mov
mov
mov
call
sahf
mov
lret
int3
adc
out
and
mov
imull
inc
or
push
or
out
icebp
or
and
add
or
and
cmp
rcll
push
mov
add
pop
push
sub
mov
lock
and
mov
mov
add
dec
pop
and
sbb
jecxz
add
add
sbb
idivl
mov
cld
xchg
xlat
and
ret
ficomps
dec
lahf
imul
xchg
inc
fiaddl
cmp
jae
add
mov
add
xchg
xor
sbb
jmp
mov
icebp
testb
inc
das
movsb
sub
xor
mov
add
push
add
mov
pop
addb
mov
mov
adc
pusha
add
sub
sahf
inc
mov
lea
dec
mov
sub
fmull
filds
repnz
nop
add
cmpsb
daa
or
add
stc
xchg
mov
push
lods
mov
add
and
add
inc
pop
stos
dec
out
pushf
or
js
push
pushf
pop
jle
jmp
je
leave
mov
add
pop
rolb
mov
out
xchg
popa
sti
imul
add
add
repnz
mov
pop
dec
adc
push
fisubl
jnp
ja
fs
push
xchg
push
inc
add
and
mov
enter
mov
fucomp
rolb
mov
test
les
imul
icebp
inc
ds
jae
aam
add
mov
add
xor
pusha
add
xor
mov
leave
in
dec
push
fildll
cmp
cmp
add
pushf
xchg
cli
mov
xchg
add
enter
jmp
xchg
pop
call
mov
add
dec
push
dec
mov
jne
call
mov
push
inc
add
mov
sub
or
jne
cltd
or
lock
xchg
adc
pop
inc
add
rolb
mov
inc
adc
pop
outsb
push
push
cmpsl
nop
add
mov
and
cmp
fcomps
add
pop
xor
mov
cmp
add
inc
leave
pushf
xchg
cmpsb
push
cltd
fldz
imul
dec
push
hlt
dec
mov
mov
testb
cltd
mov
pusha
add
xor
push
cli
jo
mov
mov
in
xor
add
cld
pop
push
mov
lods
hlt
push
mov
mov
xchg
cmp
and
repnz
cmp
lcall
dec
in
push
ret
push
test
out
inc
add
mov
mov
aaa
sub
add
add
ss
out
jl
jp
popl
add
jns
push
sub
int
repnz
sub
sub
or
iret
jns
cli
xchg
add
cmpsb
out
mov
mov
sahf
popf
add
mov
pop
sub
add
in
jl
je
xor
lret
add
mov
ds
sub
mov
outsl
shll
mov
sub
mov
jbe
jecxz
loopne
mov
add
mov
pop
dec
inc
add
mov
mov
mov
add
int
inc
or
or
add
cmp
mov
inc
adc
gs
push
sub
mov
push
repz
jo
mov
loope
add
ja
fnstcw
popw
or
testb
add
add
jo
mov
jmp
fnstenv
inc
cmp
fnstenv
int3
test
stos
addb
or
jb
mov
mov
pop
into
dec
mov
mov
rolb
mov
or
or
mov
sub
add
stc
bound
mov
addr16
dec
jmp
mov
sub
dec
pop
add
push
clc
sub
mov
mov
mov
mov
mov
cmc
sub
adc
mov
mov
dec
adc
sub
mov
push
add
mov
stc
rolb
mov
les
fisttps
sti
xor
mov
mov
jecxz
add
xor
add
mov
push
in
push
dec
push
fadds
mov
add
xor
out
and
mov
add
stos
cltd
xchg
jle
or
inc
fidivs
aad
adc
xchg
out
bound
mov
xor
mov
mov
dec
int3
roll
mov
rdmsr
add
into
pop
xor
nop
add
popf
ds
rolb
mov
mov
mov
add
cmp
cmp
add
mov
std
jnp
mov
arpl
push
jle
mov
insb
aad
xor
mov
push
pushf
sbb
xchg
xor
mov
pop
push
push
ljmp
shrl
xchg
and
rcrl
adc
push
xor
mov
jbe
lret
adc
pop
fwait
mov
and
mov
fwait
xor
mov
add
xor
adc
mov
and
inc
add
cmp
mov
dec
cwtl
dec
xlat
ljmp
jnp
add
cmp
jl
test
inc
cmp
cltd
sbbl
test
sbb
pop
jg
sti
ss
pop
push
add
fnstsw
jle
add
rorl
xchg
out
pop
fisttpl
mov
aad
leave
test
addb
adc
pushf
xchg
pushf
and
mov
inc
cmp
dec
inc
clc
and
les
mov
xchg
jns
fsubrl
mov
pop
inc
mov
mov
sbb
mov
sub
stc
addb
xor
imul
mov
sub
mov
std
out
push
rolb
test
jne
jecxz
fadds
mov
dec
aaa
mov
aaa
mov
icebp
dec
cmp
dec
mov
test
jno
repnz
ffreep
inc
and
stos
xchg
out
stos
aas
mov
add
dec
mov
stos
and
sbb
sbb
add
mov
adc
mov
or
jae
sbb
imul
jns
adc
pop
cltd
sbb
dec
dec
lret
ljmp
mov
fwait
lock
std
lea
pop
adc
mov
fistps
out
lret
or
inc
cli
lods
ja
push
loope
xchg
cltd
in
push
and
mov
push
add
push
in
test
add
cmp
inc
add
aaa
mov
mov
pop
xor
mov
inc
pop
mov
test
fstpl
push
movsl
movsl
ljmp
xor
mov
xor
sbb
xchg
repnz
push
cmp
pusha
add
add
movsb
into
and
mov
push
mov
adc
mov
loope
test
idivb
push
adc
pop
jp
sbb
repz
pop
les
mov
test
mov
push
xlat
notb
loopne
mov
xchg
xor
push
dec
idivl
nop
add
adc
mov
lock
add
stos
shll
mov
mov
mov
xchg
dec
test
out
stos
and
xor
adc
cltd
add
mov
movsl
and
stos
inc
mov
mov
push
sub
mov
pop
call
mov
add
jae
out
mov
xchg
pop
jns
stos
add
sbb
add
pop
iret
push
add
add
dec
jl
loopne
mov
stc
jge
sbb
and
dec
push
add
stc
aam
negl
test
mov
mov
iret
pcmpeqd
mov
add
dec
test
cwtl
out
outsb
cmp
in
mov
rep
repnz
test
pop
adc
mov
pop
in
add
mov
fldenv
movb
mov
inc
in
and
inc
movd
aas
or
lock
pop
addb
mov
sbb
std
jne
xchg
push
add
sbb
or
add
add
lcall
xchg
test
clc
push
hlt
xor
mov
bound
mov
dec
jbe
adc
add
mov
mov
jecxz
movsl
iret
inc
addb
jnp
jmp
add
xchg
sbb
add
mov
or
rcl
mov
divb
mov
adc
add
cmp
push
rol
xor
pop
inc
mov
es
sub
jne
mov
rolb
mov
or
mov
lret
mov
mov
add
rolb
shll
mov
repz
dec
add
inc
lds
cmpsb
xor
mov
add
addb
mov
das
push
and
mov
jge
add
mov
imulb
mov
es
sti
xor
in
dec
xchg
jl
pusha
add
pop
dec
push
push
loope
leave
mov
xlat
xchg
lods
add
xchg
clc
sar
sbb
test
add
xchg
jo
mov
add
ret
and
ficoms
dec
nop
add
inc
jecxz
dec
sub
enter
push
addb
cmpsb
inc
add
mov
mov
rcll
add
loopne
mov
mov
mov
add
lock
mov
add
adc
mov
scas
xor
mov
mov
jl
ret
push
add
stos
and
pop
push
call
aas
mov
ds
xchg
pop
addb
push
loope
addr16
sub
insl
movsl
movsb
jnp
jle
and
xchg
popf
mov
adcl
daa
out
lcall
cmc
adc
add
pop
sub
mov
mov
adc
mov
gs
xor
mov
ljmp
xchg
xlat
aad
int3
cltd
rcll
add
mov
scas
sbb
movsl
inc
add
cmp
xchg
ss
rolb
mov
jl
push
cmp
sar
cmp
mov
pop
push
add
fisubs
test
add
sub
adc
lahf
cli
notb
cmp
mov
mov
test
or
dec
movsl
in
and
mov
or
or
dec
pop
or
add
and
pop
scas
inc
les
pusha
add
add
mov
mov
xchg
inc
sub
mov
arpl
lahf
mov
add
scas
loope
pop
out
add
subl
sub
mov
sbb
pushf
stc
fisubl
mov
sbb
add
jmp
mov
rolb
mov
stc
jge
clc
lret
inc
push
add
adc
mov
data16
daa
call
mov
add
mov
add
pop
mov
or
lahf
jb
mov
cwtl
push
mov
push
add
je
add
mov
jnp,pn
add
nop
add
int
ja
arpl
mov
mov
mov
add
test
add
out
int
dec
or
sahf
ss
div
out
sbb
mov
and
std
xor
pop
push
push
adc
mov
xchg
sub
mov
aad
add
fmulp
and
mov
dec
xchg
pop
jnp
jno
inc
add
fdivrp
data16
add
or
xchg
add
rorl
xchg
add
aaa
mov
bound
mov
and
mov
pop
fsub
add
mov
xchg
icebp
rolb
mov
mov
mov
aas
xor
mov
imul
add
xchg
std
dec
ljmp
mov
xorl
add
add
push
jp
dec
cmp
pop
daa
push
sub
cld
dec
cmpsl
or
add
cmpsb
dec
lret
mov
push
insb
or
stos
mov
mov
rolb
mov
adc
mov
add
cwtl
stos
add
call
push
outsb
mov
jae
jp
jmp
gs
data16
push
ds
data16
aaa
daa
call
lds
push
mov
xchg
int3
and
inc
push
xor
add
mov
add
les
fisubrl
pop
aad
popf
add
das
adc
loop
mov
mov
add
rorl
mov
roll
mov
lret
fwait
sarl
popf
call
cmp
mov
aas
or
xlat
cld
iret
pop
inc
push
mov
add
or
push
std
fwait
jl
ret
es
jmp
xchg
call
add
mov
mov
add
loopne
mov
sub
lea
mov
add
add
mov
sub
xchg
test
cmpsb
imul
aad
add
or
jg
add
mov
sub
mov
fidivl
add
pushf
xor
mov
cltd
sbb
mov
addb
mov
mov
jmp
add
fistpl
xchg
push
pop
fwait
inc
popa
nop
add
mov
aas
jmp
in
scas
mov
ds
lds
sbb
adc
pop
jg
mov
xchg
movsb
popf
out
mov
add
cmp
addb
daa
cmp
mov
daa
lcall
jne
add
sbb
sti
pop
leave
pusha
add
mov
push
inc
xor
inc
cmpsb
test
add
mov
add
mov
inc
lgs
cmp
mov
xchg
add
mov
mov
pop
sub
dec
jle
mov
mov
xchg
lock
push
and
insb
arpl
mov
mov
bound
mov
cli
jle
xor
xor
mov
inc
cmp
xor
or
xchg
jbe
adc
mov
mov
mov
call
in
inc
add
lret
faddl
pop
dec
pop
adc
mov
and
or
mov
fisubl
test
jl
inc
js
rolb
mov
or
jl
lea
mov
mov
clc
stos
fsubr
sti
adc
mov
mov
sub
bound
mov
movsb
xlat
dec
je
and
cmc
stos
cmp
pop
iret
jle
add
add
in
mov
mov
xchg
push
add
mov
inc
repz
sbb
loopnew
mov
jnp
dec
rolb
mov
clc
pop
outsl
cmp
add
mov
add
in
scas
popa
and
sbb
aam
xor
mov
cwtl
mov
mov
rcr
add
sub
mov
mov
mov
mov
loop
mov
jno
dec
je
and
mov
dec
ds
xchg
adc
mov
pop
jnp
xor
add
xchg
outsl
flds
mov
ljmp
mov
mov
pop
in
inc
mov
mov
pand
arpl
test
movsb
in
push
pop
dec
enter
mov
add
add
adc
sub
in
popf
leave
or
in
or
add
mov
lret
idiv
sbb
mov
das
je
push
add
imul
out
cmp
add
mov
aaa
jno
sahf
jns
cmp
mov
jg
addb
xor
mov
mov
mov
imul
ret
test
xor
test
add
in
and
mov
testb
xchg
or
pop
cli
inc
mov
cmpsl
dec
mov
mov
xor
imul
add
mov
add
add
mov
add
add
mov
stos
dec
std
inc
lea
pop
push
loopne
mov
mov
jns
sbbl
pop
push
add
leave
enter
ret
push
xor
mov
and
push
sbb
push
or
dec
incl
mov
add
addr16
movsb
sbb
push
lods
jo
mov
add
push
add
mov
push
ret
cs
jbe
jp
add
dec
rolb
mov
arpl
rcrl
mov
cmc
leave
inc
bound
mov
sbb
jb
mov
mov
add
jge
inc
rorl
lea
ret
testl
or
adc
hlt
lods
add
add
out
lret
imul
inc
add
bound
mov
dec
jecxz
ja
xchg
pop
and
loope
negl
jmp
iret
inc
add
addb
movsb
push
rcll
sub
add
push
gs
mov
mov
mov
pop
adc
mov
add
in
push
lretw
mov
add
rolb
mov
lret
sbb
mov
rolb
sub
jb
mov
or
mov
add
loope
xorl
mov
add
addb
mov
pop
nop
add
add
xchg
cmp
add
and
int3
scas
pop
pop
in
movsl
testb
test
mov
mov
or
int
jl
push
and
insb
adc
mov
out
xchg
arpl
jo
mov
nop
add
pop
jmp
mov
dec
scas
hlt
out
ret
cmpl
push
or
rolb
mov
add
mov
leave
sub
sub
inc
je
sub
xchg
rolb
mov
sub
mov
mov
and
mov
ror
jge
cmpsb
cmp
dec
jne
cmpsl
jbe
and
mov
enter
jne
push
jp
arpl
add
lock
cmp
add
loope
add
js
sub
out
jnp
popa
push
jnp
hlt
lock
std
cmc
mov
fdivrl
lods
mov
xchg
push
sbbl
fwait
inc
outsl
in
icebp
insl
sub
jo
mov
push
imul
ss
mov
adc
mov
pop
adc
idiv
and
mov
es
push
aaa
imul
gs
int
mov
mov
mov
scas
ret
je,pn
dec
fcomps
cmovae
add
sub
sti
iret
push
in
xor
dec
and
fcompl
xchg
add
mov
mov
stos
loopne
mov
scas
test
pop
out
xchg
add
xchg
pop
test
cmp
ret
out
add
hlt
dec
popa
add
pop
addb
fwait
pop
lahf
pop
mov
jae
add
mov
jns
push
stos
imul
je
xlat
lds
cmp
add
out
int3
ret
stc
push
mov
sbb
add
xor
imul
mov
add
scas
mov
movl
jmp
outsl
lock
mov
xchg
and
jno
ficomps
push
push
cmc
filds
cmp
gs
mov
mov
add
add
adc
push
inc
jbe
xchg
add
dec
cmp
add
lods
fcoms
mov
mov
fldl
add
loop
mov
jle
into
sub
push
ljmp
fwait
pop
inc
add
xor
sub
mov
mov
dec
mov
nop
add
shll
test
lock
aam
pop
cs
lock
xchg
cli
mov
add
data16
push
movsb
cmp
mov
pop
or
bound
mov
pop
stc
sbb
jecxz
int
add
push
test
int3
ret
xchg
add
mov
xor
mov
jp
add
call
add
mov
mov
mov
adc
mov
or
push
jecxz
lret
mov
jg
out
mov
outsb
pop
push
in
int3
pop
mov
mov
xchg
mov
mov
fcompl
nop
add
push
jecxz
ja
add
out
push
adc
mov
lods
rolb
pop
stos
add
mov
jecxz
sbb
mov
push
xchg
movsb
push
add
mov
jbe
add
add
adc
and
add
or
mov
mov
dec
into
jge
inc
add
mov
mov
xchg
outsb
mov
mov
xor
jae
gs
pop
push
add
add
sbb
call
mov
push
jnp
and
cmc
ljmp
sub
mov
add
xor
mov
mov
pop
xor
mov
or
adc
mov
add
add
movsl
gs
jns
shrl
pop
cmp
mov
decl
repnz
dec
push
ja
mov
dec
xchg
gs
fmuls
cmp
cld
lcall
ret
nop
add
dec
jno
or
or
and
mov
repnz
or
and
cmp
add
inc
call
shrl
xor
ss
xor
mov
fildl
out
cmpsb
rcrl
add
add
mov
dec
cmp
subl
fisubrs
adc
mov
sahf
lea
scas
arpl
mov
xchg
xchg
fcompl
mov
cs
cmp
hlt
outsb
mov
add
mov
mov
mov
sbb
inc
stos
arpl
add
add
daa
sub
sub
sub
scas
insl
mov
rolb
mov
pop
loope
loopne
mov
sbb
jp
lret
inc
out
push
js
mov
imul
add
sub
add
add
add
loop
mov
pop
ja
stos
in
jl
add
fstps
sub
addb
test
stos
int3
pop
nop
add
test
xchg
xlat
stc
movsb
lret
mov
push
add
push
out
movswl
cmp
dec
dec
movsl
fnstenv
pop
outsb
rolb
add
mov
jnp
mov
mov
scas
aad
addb
rolb
mov
inc
sbb
test
dec
inc
movsl
jno
or
cmp
cmp
or
mov
pushl
test
mov
loop
mov
sub
add
cmp
lcall
add
sub
push
lods
mov
xor
inc
add
pop
out
loop
mov
or
jnp
into
xchg
dec
insb
mov
pop
push
add
add
jae
bound
mov
add
mov
arpl
ljmp
orl
mov
popf
sub
add
mov
add
sahf
addr16
xor
imul
jae
add
mov
cmc
sbb
daa
stos
lcall
cld
inc
sbb
enter
add
push
sti
adc
insl
cmp
in
cmp
mov
mov
fistpll
imul
mov
ret
mov
mov
cmp
lods
xchg
add
aad
mov
jmp
jp
pop
push
jb
mov
or
mov
add
mov
add
add
lock
fsubrs
cmc
mov
mov
out
mov
jp
mov
jne
mov
out
fbld
add
add
pop
and
call
sub
add
std
mov
add
mov
sbb
movsb
jl
test
loopne
mov
lret
mov
adc
arpl
scas
in
loopne
mov
mov
out
jns
xchg
and
mov
jge
or
mov
and
gs
push
fidivl
add
inc
mov
jo
mov
mov
jne
push
add
jg
sub
out
push
pop
and
sub
mov
mov
stc
cmc
or
fwait
push
add
mov
mov
daa
adc
mov
std
ret
out
pushf
js
mov
or
lods
or
mov
add
inc
add
and
inc
mov
mov
sbb
pushf
mov
dec
inc
outsb
adc
popf
sahf
fcmovbe
aad
fs
or
adc
mov
test
iret
dec
pop
cmpsb
rolb
mov
pop
hlt
pusha
add
lfs
adc
lcall
add
stos
sbb
mov
add
dec
inc
ret
adc
mov
inc
fidivrl
cmc
adc
mov
adc
mov
add
add
mov
aaa
pop
hlt
scas
dec
iret
mov
mov
add
inc
frstor
rolb
fidivl
int
add
jae
sub
out
sbb
add
in
mov
jmp
bound
mov
mov
imul
cwtl
lods
ret
or
js
lahf
push
jo
mov
or
mov
adc
mov
ja
jmp
test
mov
cmp
mov
addr16
mov
adc
outsl
inc
xchg
mov
sbb
rolb
ja
int
cmp
in
std
mov
pop
push
lret
cmp
mov
mov
arpl
add
mov
mov
aam
add
lods
push
jno
add
nop
add
cmp
cmp
mov
das
mov
cs
cmpsb
or
shll
mov
rolb
jg
sbb
imul
sbb
mov
push
je
jle
add
add
mov
pop
scas
inc
jo
mov
dec
in
push
in
pop
pop
jae
xchg
push
test
mov
and
xchg
add
sub
push
add
cmpsl
jbe
add
xlat
jae
xlat
shl
add
lods
or
add
ja
out
sbb
out
sbb
add
mov
push
xchg
push
add
fisttpll
shll
mov
push
pusha
add
cli
lock
sbb
mov
add
out
test
add
add
inc
stos
addr16
loopne
mov
xor
add
lcall
xor
add
nop
add
add
mov
outsb
push
jl
sbb
push
xchg
pop
mov
mov
cld
out
and
test
inc
add
add
mov
mov
sub
and
mov
sbb
leave
jecxz
outsb
addb
sti
jp
notb
add
xlat
arpl
test
jns
clc
jle
add
jl
daa
cwtl
push
add
add
cmp
fisubl
or
or
mov
xchg
ret
adc
mov
mov
aad
cmp
gs
lods
xor
inc
jb
mov
and
add
and
mov
ljmp
add
pop
jo
mov
fldt
aam
add
mov
xor
mov
xlat
push
rolb
mov
cmp
jle
push
loop
mov
push
adc
mov
out
pop
negl
lcall
fiaddl
add
in
cld
push
aaa
clc
pop
jp
mov
add
pop
pop
stos
aaa
hlt
out
jo
mov
leave
mov
pop
mov
add
repz
out
ds
mov
sub
xchg
mov
inc
pop
mov
orl
mov
out
and
mov
mov
push
add
add
cmp
ss
push
cltd
xchg
and
add
das
cwtl
ror
pop
pop
fcoms
add
mov
rep
inc
cmp
js
xchg
mov
mov
cmp
test
sti
mov
mov
dec
dec
ss
xor
mov
mov
mov
cli
lret
fimull
add
mov
pushf
jecxz
sub
push
jno
mov
cmp
push
xchg
add
mov
outsb
test
mov
sbb
hlt
in
dec
loope
add
inc
push
add
inc
pusha
add
stos
dec
xor
add
sbb
sarl
outsl
sbb
and
cld
cmp
add
mov
out
ffree
movups
mov
call
mov
xorl
andl
mov
mov
push
push
dec
jns
popf
sbb
sbb
push
shr
and
lret
sbb
lods
cmc
lods
mov
add
sti
push
cltd
add
sbb
mov
sbb
pop
mov
sub
add
daa
or
arpl
cmp
inc
add
mov
ss
adc
rorl
jo
mov
or
xor
mov
lea
xchg
add
pop
cmpsl
repz
add
mov
or
lret
and
add
cmpsb
lahf
cs
pusha
add
add
outsl
daa
sbb
add
popl
mov
lea
sub
cmp
addb
ds
dec
lcall
fbstp
in
outsb
and
mov
add
mov
sub
or
sbb
inc
pop
jmp
fstl
inc
pop
xchg
pop
icebp
adc
mov
add
push
xchg
xlat
cmpsl
jg
and
adc
jge
ja
or
add
lahf
xchg
push
ret
movsl
pusha
add
mov
mov
add
adc
mov
fwait
jno
call
dec
mov
add
add
mov
test
in
int
dec
dec
arpl
aad
fiadds
adc
lret
xor
jp
fdivrs
xor
xchg
xlat
loope
dec
rolb
rcrl
xchg
mov
mov
mov
clc
cs
add
add
add
add
add
jae
add
sub
imul
push
pop
mov
rolb
imul
jge
rorl
mov
sbb
push
outsb
mov
add
mov
out
xchg
enter
jo
mov
clc
cmpsb
push
rolb
mov
add
mov
out
jle
into
mov
push
add
pop
xor
ljmp
cmpsb
cmp
mov
mov
dec
pop
adc
into
or
cmpsb
cltd
pop
cli
sbb
xor
std
or
dec
lret
fistps
in
add
mov
add
mov
and
mov
push
add
popf
adc
mov
sub
add
mov
cmp
xor
mov
out
add
movhps
and
mov
add
add
clc
cmp
add
xchg
scas
adc
clc
daa
filds
adc
mov
insb
iret
lret
cmp
lock
leave
dec
pop
js
and
mov
mov
mov
inc
mov
dec
repnz
aad
add
sbb
add
xor
in
jg
test
jp
fldt
sbb
cmpl
into
daa
push
ret
xlat
enter
add
jbe
popa
xchg
jb
mov
xchg
adc
mov
sub
push
adc
adc
xlat
add
mov
or
xor
clc
call
out
imul
add
mov
addl
mov
pop
cmp
xor
adc
mov
mov
fisttpl
into
adc
mov
mov
loope
adc
mov
mov
ljmp
mov
mov
and
mov
and
mov
jle
cmp
dec
xor
fwait
xchg
dec
out
add
mov
mov
in
std
inc
lods
dec
add
add
xor
mov
lods
or
jl
xor
mov
and
dec
jmp
insb
hlt
mov
lahf
rcll
push
leave
bound
mov
mov
js
push
popa
rolb
mov
rolb
mov
iret
xchg
es
mov
mov
mov
mov
mov
mov
add
jbe
rolb
mov
cld
add
pop
xor
ficoml
add
inc
pop
out
sbb
xchg
jno
xchg
or
outsl
mov
inc
xchg
leave
xchg
xor
jle
inc
lods
cld
adc
jp
cwtl
aam
jge
js
mov
push
xchg
in
jne
jg
aas
push
insl
xchg
add
in
scas
sub
sub
dec
mov
cmp
mov
imul
mov
mov
push
loop
mov
adcl
adc
mov
sbb
fucom
add
repz
xchg
mov
sbb
mov
ljmp
gs
fistl
dec
ret
iret
push
cmp
jl
fld
dec
dec
cld
ss
add
dec
mov
and
mov
mov
add
add
push
push
add
mov
rolb
mov
pop
jae
xor
mov
int3
fistpl
pop
int3
and
cmp
and
sub
mov
add
add
bound
mov
jg
dec
lahf
daa
mov
add
cmc
mov
or
sub
add
mov
add
mov
mov
dec
fdiv
add
or
sub
cmp
adc
jo
mov
ret
sub
test
mov
mov
add
test
xor
mov
lcall
jne
add
repz
add
mov
mov
adc
mov
sbbl
hlt
int
add
add
repz
clc
pop
frstor
add
xchg
outsl
sub
jge
ljmp
in
stc
xor
and
add
nop
add
or
mov
add
push
mov
add
xor
push
lret
dec
lea
mov
jmp
insl
insl
add
mov
lds
sub
inc
sbb
add
xchg
add
mov
push
jmp
add
mov
mov
ja
sub
jns
icebp
jmp
aad
add
repnz
add
cmp
xor
mov
cld
mov
sarl
or
ljmp
dec
xchg
or
outsb
jge
jle
add
aam
iret
add
movsb
or
add
fisttpll
test
mov
dec
cmp
add
fbstp
fs
test
add
iret
and
mov
out
dec
dec
sub
jnp
xchg
lock
mov
hlt
ret
or
mov
ret
es
and
inc
add
mov
pop
sbb
and
mov
add
cmp
mov
pop
dec
sbb
xchg
adc
fdivrl
add
out
inc
dec
ds
add
arpl
and
mov
adc
mov
ficomps
aam
popf
mov
mov
pop
addb
loop
mov
sti
into
loopne
mov
dec
aam
out
mov
xchg
bound
mov
push
ret
fucomi
pushf
or
pop
bound
mov
or
scas
xor
sub
call
dec
add
mov
add
je
add
add
push
fisubl
lret
scas
ja
and
mov
imul
cltd
lcall
jmp
out
outsl
mov
mov
fsubrs
pop
dec
insb
lds
mov
subl
stos
aad
and
in
ljmp
outsb
imul
mov
sub
stos
insl
outsb
nop
add
mov
pop
xchg
mov
xchg
fldcw
mov
or
out
or
lahf
add
mov
call
add
xchg
pop
in
or
rolb
mov
mov
mov
aaa
not
pop
js
in
rolb
mov
add
sbb
mov
push
out
arpl
mov
xchg
inc
add
fldt
leave
mov
add
outsb
inc
rolb
adc
add
stos
aad
sti
cmp
and
lcall
mov
test
cmpsb
jmp
test
imul
out
insl
loop
mov
push
push
jno
mov
cwtl
int3
out
lcall
std
mov
aam
mov
addb
push
mov
pop
js
add
pusha
add
mull
add
and
dec
rcll
add
out
imull
add
lret
or
stos
pop
out
cmp
insb
in
cmp
jnp
popf
es
add
mov
add
mov
idivb
xor
pop
roll
mov
add
jle
aas
xchg
mov
add
mov
dec
push
test
add
loope
mov
mov
mov
leave
xchg
in
xor
stc
fs
test
fsts
add
and
sbb
cltd
jp
sbb
jecxz
add
mov
add
fbld
fdivr
clc
lahf
add
mov
add
std
ret
mov
mov
int3
leave
lret
sti
mov
add
push
pop
dec
imul
popa
lahf
mov
jge
pop
je
jne
loop
mov
mov
xor
mov
jno
rolb
mov
loop
mov
add
xchg
lcall
mov
add
aas
xor
test
out
mov
mov
xchg
outsb
mov
daa
pop
sbb
rolb
mov
jmp
pop
fs
push
fsubl
xor
imull
mov
test
ret
mov
call
pop
mov
les
pop
loopne
mov
or
rolb
mov
add
mov
adc
in
push
cmp
hlt
and
mov
dec
ret
and
xor
or
add
cmc
enter
sbb
ss
in
movb
add
mov
pop
xchg
add
mov
jae
mov
lret
mov
mov
xchg
pushf
test
mov
mov
pop
addb
inc
add
xchg
inc
add
sbbl
adc
cmc
cmc
aad
cmp
lahf
std
add
add
add
mov
aad
cmp
jp
lock
mov
mov
cmp
pop
sbb
mov
xor
mov
scas
mov
add
loope
pop
sbbl
fmulp
iret
xchg
xor
mov
inc
add
sub
cmpsl
aas
mov
sub
add
mov
sbb
sub
ret
push
add
js
test
xchg
adc
pop
ret
adc
add
xor
daa
out
push
add
fisttpl
call
push
aad
add
cmp
mov
add
mov
adc
inc
xchg
ret
loope
mov
mov
lahf
pop
leave
adc
int3
test
cmp
call
push
inc
movsb
je
popa
psrlq
jne
add
sti
inc
std
push
out
sub
fstpt
mov
pop
dec
mov
ret
cmp
mov
push
pop
dec
lcall
imul
xchg
and
sahf
mov
test
or
dec
mov
mov
mov
xchg
cmpsl
ficomps
and
push
jecxz
mov
jbe
pop
sahf
push
iret
cs
inc
mov
push
add
mov
loope
xchg
add
cli
in
in
xchg
inc
add
pop
mov
xchg
sbb
jne
adc
mov
arpl
xlat
jp
imul
jo
mov
pusha
add
sub
jg
mov
add
nop
add
ja
add
icebp
add
call
cmp
cmp
std
xor
mov
dec
aam
push
test
ja
inc
lret
dec
test
fildll
gs
and
mov
divb
sbb
cwtl
fwait
nop
add
or
add
inc
aas
andl
add
mov
xchg
mov
mov
adc
mov
lods
xor
add
mov
stos
jmp
das
push
xchg
aam
repnz
cmpsl
aaa
repnz
repnz
movsl
xchg
repz
add
mov
repnz
lcall
add
add
inc
push
rolb
mov
mov
leave
adc
mov
add
sub
inc
cmp
push
jl
test
mov
sbb
movsl
sbb
pop
popf
out
mov
add
add
lods
cli
je
aad
xchg
stc
jns
sub
adcl
loop
mov
mov
mov
add
xchg
inc
movsb
adc
mov
mov
add
mov
mov
scas
add
aam
sub
add
in
outsl
inc
mov
loopne
mov
sub
mov
jnp
inc
ret
loopne
mov
addb
cmpsb
mov
mov
data16
lods
in
ret
and
xor
push
out
cltd
cmpsb
adc
add
insl
sahf
cli
fsubl
adc
add
and
mov
mov
scas
and
mov
cld
xlat
dec
repz
cmp
out
sahf
dec
jge
scas
gs
or
adc
mov
in
push
xchg
mov
add
sti
fldt
cwtl
cmp
add
or
sbb
mov
pop
pop
cltd
or
fnsave
repnz
push
out
and
mov
add
inc
mov
cmpsb
popf
add
ret
pop
aad
adc
dec
push
mov
sbb
mov
mov
outsb
movsl
loopne
mov
add
lea
stos
jp
fs
pushf
mov
fsubl
mov
push
xor
sbb
lods
rolb
mov
mov
xchg
xchg
add
mov
frstor
iret
jecxz
add
xor
add
shrl
jb
mov
add
push
insl
jmp
jo
mov
pop
or
or
inc
xor
jne
gs
mov
xor
mov
dec
add
das
test
add
mov
add
in
test
mov
sub
lea
gs
dec
insb
sub
insl
fiadds
jb
mov
mov
pop
inc
pop
rolb
mov
add
and
and
mov
jns
cmp
push
jle
add
test
movsb
imul
pop
xor
adc
inc
add
cmpsl
sbb
mov
addb
push
sub
push
aas
test
jle
test
mov
addb
cli
int3
or
test
sbb
mov
mov
add
add
add
xchg
and
inc
stos
daa
dec
std
pop
jns
inc
add
leave
pushf
out
push
add
test
idivl
negl
add
xor
loop
mov
add
xchg
add
div
add
push
push
cwtl
adc
push
jne
push
insb
sub
add
cwtl
inc
sub
ret
xchg
add
sub
aam
cmpsb
push
mov
orl
test
fcmovne
mov
sub
out
pop
lahf
xchg
sbb
mov
mov
jnp
fisubrl
int3
in
sub
dec
xor
mov
mov
addb
stc
mov
ret
mov
and
faddl
mov
dec
addb
jbe
enter
pop
aas
jbe
test
adc
mov
jmp
or
loop
mov
repnz
add
mov
push
aaa
xchg
mov
mov
cltd
cld
inc
add
add
mov
add
and
mov
push
xor
mov
addr16
addb
cwtl
loopne
mov
cld
jns
mov
cmp
test
and
mov
cld
pop
daa
lock
add
in
push
xlat
les
add
sar
cmpsb
pop
mov
pop
in
fisubl
add
mov
jb
mov
or
addb
cmp
pop
pop
imull
add
mov
mov
sbb
insl
xlat
sbb
add
test
cwtl
inc
add
jmp
lea
mov
and
add
mov
daa
jg
pop
cmp
mov
inc
add
adc
call
pop
xor
mov
add
enter
sbb
inc
inc
add
das
out
int3
push
js
outsb
add
add
mov
pop
xchg
cli
scas
mov
inc
les
mov
add
pop
adc
mov
cmp
insl
lods
test
pusha
add
addb
cmp
mov
loope
in
add
mov
add
cmpsb
xchg
or
inc
cltd
shll
dec
stc
and
xchg
sub
jmp
or
out
cltd
jne
test
popa
push
test
add
mov
rolb
mov
mov
add
gs
mov
cmpsl
xchg
scas
addb
sbb
sub
add
ss
mov
mov
dec
jae
xchg
lock
cmp
dec
fwait
mov
enter
push
pop
jge
mov
arpl
push
jno
adc
mov
jbe
jg
orl
mov
mov
fstl
lods
dec
stos
fcomi
aas
in
clc
xchg
rolb
mov
in
xchg
inc
addb
jno
rolb
mov
push
mov
dec
and
push
or
xchg
mov
and
or
inc
push
addl
arpl
test
dec
xor
mov
add
add
test
mov
rolb
cmp
rolb
xchg
and
mov
mov
movsb
fs
scas
test
addl
add
or
jbe
in
and
mov
mov
xchg
addb
pop
loopne
mov
push
cmpsl
push
sub
testb
jae
and
jo
mov
addb
push
enter
sbb
cmp
add
mov
add
adc
pop
shll
xor
fidivrs
cmp
lods
sbb
add
and
mov
test
mov
mov
movsb
mov
scas
adc
inc
mov
mov
scas
addr16
icebp
sub
insb
jmp
add
and
mov
mov
imul
jo
mov
adc
add
imul
mov
mov
push
test
dec
out
xlat
adc
mov
add
xor
mov
ret
inc
sub
mov
inc
add
push
dec
xchg
pop
rorl
add
pop
or
dec
adc
add
cld
cmp
and
mov
mov
xor
sahf
cmp
add
arpl
dec
sbb
xor
or
in
push
rolb
mov
add
mov
add
mov
adc
mov
add
mov
loopne
mov
sbb
pop
adc
mov
shll
add
fdivp
cli
xchg
and
add
icebp
mov
jmp
xchg
mov
mov
mov
mov
lea
in
jo
mov
pop
addr16
bound
mov
sub
add
ret
in
cmp
jne
and
mov
add
fiaddl
jecxz
out
jmp
incl
movsl
mov
pop
lock
add
into
inc
ret
mov
sbb
add
and
xchg
cltd
push
xchg
push
jmp
dec
rol
rolb
sub
inc
push
cmp
sbb
lods
addb
jne
dec
sti
xchg
add
cld
adc
add
mov
adc
mov
push
call
push
lret
jne
cwtl
test
pop
and
mov
mov
mov
or
push
mulb
push
cltd
and
mov
ds
sbb
dec
mov
imul
cwtl
int3
sarl
push
bound
mov
pushf
adc
mov
jmp
add
push
add
mov
add
push
mov
mov
mov
aaa
jl
pop
shll
push
mov
sbb
add
das
cmp
int
add
mov
add
mov
add
pop
mov
add
add
ret
scas
lods
cwtl
outsl
out
or
cmp
mov
add
add
and
add
leave
pop
ljmp
in
dec
jge
push
lods
aaa
adcl
add
add
fwait
hlt
pusha
add
rorl
sub
in
pushl
xor
mov
jbe
test
add
mov
stos
jno
xchg
add
test
mov
iret
add
mov
add
mov
mov
lea
addb
inc
stos
sbb
add
dec
pop
aad
repz
hlt
lcall
adc
mov
inc
adc
sub
push
add
pop
shrl
addb
jne
jecxz
xchg
add
adc
mov
stc
push
xlat
cmpsl
leave
xor
mov
pop
out
push
xor
push
stos
ja
cmp
imulb
add
int3
pop
push
mov
xor
mov
or
mov
pusha
add
or
fsubl
adc
cmp
arpl
push
add
outsb
inc
add
inc
stos
ss
pop
outsb
adc
mov
lock
inc
sbb
lret
test
and
bound
mov
out
pop
dec
int
jl
pop
scas
fimull
mov
add
mov
add
mov
cmp
ret
xchg
add
and
add
test
add
addl
jmp
inc
push
scas
and
in
cmp
sbb
pop
icebp
and
cmpsb
fists
insl
jg,pt
push
imul
xlat
pop
aad
lock
add
movlps
mov
sti
mov
add
add
repz
arpl
dec
shrl
ja
and
rolb
push
mov
pmaxub
lock
mov
clc
lahf
adc
mov
in
pop
out
inc
int
cmp
fstpt
addb
call
mov
outsl
inc
add
xor
shrl
stos
jb
mov
aam
into
ds
fwait
sbb
loopne
mov
and
mov
mov
add
in
lret
jno
shll
push
jmp
stos
mov
jp
std
mov
ret
xor
mov
popf
sbb
add
addr16
jl
mov
add
mov
or
pushf
xchg
sar
inc
and
pop
arpl
and
fisttps
stc
loop
mov
inc
in
adc
mov
add
add
cmp
sarl
in
mov
xchg
add
mov
movsl
js
cmp
mov
fsubl
and
dec
rolb
mov
and
mov
inc
add
insb
inc
lds
fisttpl
int3
in
cmc
pop
stos
insl
mov
jge
iret
in
les
xorl
inc
leave
cmp
js
jae
push
repnz
fwait
xchg
loope
aam
leave
in
bound
mov
jle
cmp
pop
mov
pop
xchg
popf
mov
or
or
add
rcrl
mov
push
scas
imul
mov
add
cmp
add
dec
mov
mov
mov
mov
push
add
clc
pop
iret
leave
pop
push
aaa
ljmp
jnp
cmp
mov
pop
mov
add
or
cmc
and
mov
pop
adc
mov
cmp
add
out
cmp
add
mov
addb
popf
xchg
jp
rolb
mov
mov
add
inc
add
loopne
mov
add
xchg
jecxz
push
add
add
mov
mov
aas
and
mov
das
sbb
jb
mov
mov
add
mov
sbb
mov
add
mov
xchg
subl
stos
ret
jmp
cmpsl
cwtl
test
add
add
add
sub
jecxz
insl
clc
push
pop
ds
mov
sub
in
test
mov
insl
sub
lea
pop
lds
scas
inc
mov
push
add
ret
adc
xor
mov
aad
addb
rcl
js
lds
out
or
mov
sbb
push
aam
push
roll
push
aad
jmp
mov
mov
jl
adc
mov
mov
cmp
nop
add
jae
add
js
add
jnp
adc
mov
out
pushl
add
out
mov
sub
jno
rolb
mov
nopl
or
add
inc
push
aaa
or
add
mov
cld
mov
add
mov
loope
es
push
repnz
add
sbb
aad
test
xchg
push
add
add
gs
adc
jl
dec
xchg
ret
fs
cmp
add
mov
sub
popa
mov
mov
add
lret
stc
dec
cmp
les
aad
cmp
xchg
xchg
and
arpl
lea
fisubrs
repnz
add
pop
add
mov
outsb
das
mov
cltd
sub
sbb
sub
add
add
movsb
pop
lods
in
add
mov
pop
or
add
push
sub
int3
inc
or
in
aad
and
mov
ss
shl
sub
lds
aam
add
mov
xor
cmp
add
mov
out
rolb
mov
je
jl
xchg
adc
mov
mov
aaa
ja
lcall
cmp
add
insl
mov
cmpsb
jbe
mov
mov
mov
cs
dec
adc
mov
mov
jecxz
repnz
add
xchg
pop
pop
push
dec
clc
decl
add
leave
dec
daa
fistpll
add
add
inc
addb
stos
sbb
jg
sbb
test
pop
dec
adc
mov
add
in
sbb
inc
pushf
out
sbb
lret
xchg
add
cmpsb
ret
mov
lret
cmpsl
mov
neg
mov
add
mov
jo
mov
ja
push
jp
add
mov
jge
enter
push
add
push
rcll
add
out
push
pop
aam
mov
ljmp
lret
fcoms
adc
or
add
sub
pop
jbe
dec
pop
xchg
insl
cmp
gs
push
jbe
pop
fwait
dec
lods
inc
lcall
mov
lret
lods
popa
mov
add
inc
add
xorl
mov
pop
mov
pop
ja
movsl
testl
sub
sbb
xor
mov
jnp
xchg
pop
negl
and
mov
dec
mov
add
mov
test
add
pop
xchg
stos
pushf
xchg
push
mov
cmpsl
out
jne
into
mov
stos
fs
push
adc
in
push
ret
push
adc
outsl
std
sbb
out
mov
xor
sti
sub
sbb
mov
add
scas
cli
sub
in
lcall
mov
fadds
add
mov
mov
pop
pop
int3
leave
out
dec
xchg
pop
push
mov
add
rolb
mov
sub
add
sub
cwtl
out
sahf
mov
clc
mov
aad
sbb
add
loop
mov
loopne
mov
std
mov
add
pop
or
or
iret
mov
test
and
add
add
add
sbb
lock
out
add
loop
mov
mov
inc
mov
mov
mov
sub
cltd
imul
xchg
popf
mov
mov
sub
add
cmp
pop
repnz
dec
addb
icebp
inc
ret
cmp
inc
add
add
mov
pop
and
mov
mov
cmp
jg
add
lahf
cltd
in
inc
and
aas
or
setae
add
add
addb
es
xor
outsl
cld
push
add
add
loope
gs
dec
mov
add
pop
add
mov
sti
cmpsl
ds
outsl
outsb
mov
mov
in
cmp
and
mov
fiadds
shll
and
mov
add
pop
hlt
mov
jno
mov
push
add
mov
dec
lcall
cmpl
lret
xchg
scas
testl
faddp
add
mov
addr16
mull
out
and
mov
and
mov
in
arpl
add
les
xchg
mov
push
es
sub
add
add
sub
add
mov
xlat
cmpsl
inc
test
mov
sbb
xchg
push
sbb
mov
fistl
scas
sbb
shrl
leave
idiv
cwtl
xor
and
sbb
leave
mov
mov
fnstsw
lods
cltd
movb
mov
add
inc
jns
add
xchg
ret
jne
cwtl
inc
fs
inc
test
lea
jmp
inc
test
sbb
lods
fbstp
into
roll
add
add
adc
cmp
push
shr
cmp
xor
sbb
add
sub
int
movsb
adc
push
add
data16
push
lahf
jl
js
sub
jmp
lahf
rcrl
add
into
pop
mov
push
add
dec
pop
iret
sbb
mov
cmp
repz
lods
pop
xor
mov
xor
cmp
xchg
mov
pop
push
add
jns
mov
mov
shl
mov
add
hlt
mov
lea
dec
xchg
pop
rolb
mov
in
add
dec
mov
daa
add
add
mov
jne
lret
adc
mov
and
popa
loope
or
orl
sub
dec
mov
xchg
xchg
sbb
mov
add
sub
xchg
jp
imul
in
ds
mov
mov
ds
or
xor
adc
lods
scas
fsubp
jecxz
out
cmp
lods
bound
mov
mov
lea
scas
push
add
mov
mov
nop
add
push
data16
pop
hlt
and
mov
or
imul
mov
add
cmpsb
jmp
cs
and
ljmp
mov
sbb
mov
add
iret
movsl
lahf
jns
clc
iret
jmp
and
mov
add
mov
or
xchg
or
mov
mov
add
hlt
mov
mov
dec
sbb
cmp
in
pop
test
xor
mov
xor
cmp
add
pusha
add
mov
punpckhwd
mov
lret
sbb
add
mov
lds
mov
mov
add
mov
mov
jo
mov
outsb
and
mov
mov
dec
iret
sbb
dec
insl
and
add
test
popa
jecxz
push
stc
das
mov
scas
addr16
fs
push
popf
mov
mov
add
xchg
adc
cmpl
rolb
jmp
dec
or
addl
inc
es
jns
inc
adc
xchg
add
mov
xor
mov
sbb
adc
mov
jmp
and
add
out
pop
pop
xchg
fildll
repz
fcmove
inc
cmp
sbb
daa
inc
jbe
imul
pop
pop
push
jbe
lahf
loopne
mov
dec
dec
ret
xor
mov
mov
popa
pop
lcall
js
stc
sbb
add
jecxz
fwait
vpunpckhqdq
xchg
and
add
add
bound
mov
fistpll
pusha
add
mov
popa
adc
jmp
ror
outsb
ret
sbb
mov
test
push
loope
lcall
add
mov
testb
nop
add
popa
pop
jmp
or
mov
int
je
test
inc
add
mov
cs
add
xor
mov
pop
and
mov
lret
mov
mov
cltd
in
bound
mov
mov
clc
shll
dec
xchg
add
jae
mov
lret
jle
sub
lret
mov
mov
inc
push
ss
adc
fwait
jb
mov
push
inc
add
inc
add
pop
outsb
push
sbb
int3
das
adc
cmp
jb
mov
sbb
jmp
ficompl
cli
movsl
gs
pop
pop
xor
mov
push
mov
mov
add
xor
or
mov
call
add
out
add
add
jnp
pop
dec
dec
lea
add
enter
and
lods
adc
mov
in
push
fnstsw
sbb
xchg
cwtl
rolb
mov
add
mov
add
adc
jae
mov
add
lds
add
pop
push
test
pusha
add
cltd
dec
mov
mov
sub
add
in
loopne
mov
and
mov
mov
clc
bound
mov
dec
shrl
lret
xchg
rolb
mov
rolb
inc
dec
push
pop
aad
adc
add
movsl
mov
scas
jge
inc
add
add
out
add
pop
js
adc
push
faddl
clc
and
push
rorl
add
mov
xchg
test
xor
mov
lods
scas
iret
stc
mov
js
or
xor
mov
mov
pop
cwtl
pop
jl
add
add
in
sbb
or
lds
sbb
push
xlat
mov
rolb
mov
daa
mov
sub
iret
sub
imull
popa
mov
mov
mov
out
addr16
lahf
cmp
sbb
lret
add
push
xchg
cmc
jo
mov
pop
or
push
mov
and
xchg
add
add
mov
dec
mov
imul
test
mov
sub
add
mov
fadd
in
loop
mov
mov
add
push
and
mov
stos
push
sbb
out
xor
mov
add
addb
sub
inc
aad
fmulp
or
inc
mov
outsl
call
add
mov
cmp
add
add
cmc
lds
sub
inc
add
nop
add
or
pusha
add
dec
pop
adc
sbb
jmp
ss
test
imul
insl
in
fistpll
imul
and
nop
add
add
ret
and
mov
stos
sbb
mov
xorl
lods
bound
mov
imul
inc
add
inc
cmpsb
push
call
add
leave
rcll
rolb
add
test
in
decb
add
adc
in
jg
add
aaa
and
mov
movsb
ret
and
mov
aad
xorl
push
jne
inc
movsb
jl
or
lret
int
add
mov
loop
mov
sub
das
lea
ficoms
inc
pop
icebp
rorl
hlt
push
lret
dec
sti
loopne
mov
mov
add
add
add
inc
add
int
mov
sbb
mov
add
cmpsb
push
add
and
mov
dec
fwait
mov
mov
cmp
mov
cmp
ds
push
inc
rolb
mov
xchg
pop
ljmp
push
ljmp
mov
add
pop
rcll
pop
outsl
mov
sub
cmpsl
cltd
out
xor
mov
fistl
fidivl
sahf
test
jmp
lods
in
add
mov
in
jle
xchg
add
mov
mov
inc
cld
leave
jge
fisttpl
mov
jmp
mov
mov
and
xchg
jg
xchg
adc
mov
xor
movsb
xor
mov
pop
int3
idivb
mov
add
push
ss
jns
sub
jbe
test
adc
mov
push
and
int3
aad
add
je
mov
fucompp
inc
add
dec
adc
mov
add
rolb
imul
push
push
test
mov
and
push
add
or
push
lock
mov
xchg
sub
int
lods
mov
mov
scas
pop
outsb
push
sub
int
and
mov
inc
add
xlat
daa
mov
js
push
add
inc
loopne
mov
adc
mov
icebp
pop
push
inc
rorl
jno
rolb
fwait
pusha
add
addb
imul
jb,pt
mov
in
leave
dec
mov
push
xor
mov
mov
in
ja
rolb
outsb
mov
xchg
cmp
add
mov
sahf
xor
aas
mov
mov
inc
xchg
inc
xor
ret
test
push
pop
lahf
cmc
push
add
cmp
mov
cmp
push
out
das
fmulp
cmpsb
xchg
lock
cwtl
and
mov
ret
aaa
or
movl
add
inc
fdivrs
add
and
jo
mov
add
jb
mov
add
mov
add
or
mov
sti
jbe
or
test
add
hlt
or
mov
add
fwait
xor
add
mov
adc
jp
mov
test
in
stc
jnp
jns
mov
xor
mov
add
add
jb
out
scas
sub
nop
add
add
pop
in
mov
xlat
filds
and
rolb
mov
mov
jo
mov
int3
outsb
ljmp
repnz
rorl
loop
mov
inc
dec
add
adc
sub
out
mov
add
pop
push
addb
lahf
and
hlt
cmp
dec
ljmp
mov
jnp
ficoml
add
cmp
xchg
pop
imul
inc
rolb
test
sti
lds
into
mov
mov
add
and
dec
jle
fmuls
outsb
movsb
jne
add
test
cmpsb
mov
aad
cli
ret
popa
popa
add
jp
loope
sbb
inc
das
sub
iret
xchg
add
add
fistpll
gs
sbb
mov
and
mov
add
fnstsw
sbb
xor
cmp
std
mov
mov
mov
stc
in
in
leave
or
add
mov
insl
xchg
dec
clc
xor
add
push
jl
jo
mov
add
aam
adc
inc
lds
jecxz
mov
pop
push
ret
shl
daa
scas
mov
sub
mov
ds
add
mov
mov
mov
add
add
mov
nop
add
lret
mov
es
inc
pop
or
fdivrl
dec
loopne
mov
call
pop
aam
and
mov
mov
push
arpl
pop
sbb
jle
add
test
xchg
not
adc
mov
add
inc
push
outsl
call
mov
add
xchg
cmp
pop
add
mov
add
out
xlat
hlt
aad
xchg
add
inc
xchg
cmpsb
mov
sbb
adc
add
insb
jae
insb
push
inc
jge
add
add
enter
jp
cmpsl
lock
cmp
or
add
std
mov
pushf
xchg
push
pusha
add
pop
pusha
add
es
mov
test
add
ret
imull
add
test
push
add
mov
adc
add
out
fld
popa
fcoml
xor
mov
add
inc
mov
mov
add
in
repz
in
and
jp
add
daa
ds
jle
add
fcoml
out
jecxz
sbb
add
or
repnz
mov
xor
in
mov
dec
js
rolb
mov
and
mov
mov
pusha
add
add
test
or
aam
add
fs
add
mov
cmpsb
xor
mov
or
rolb
mov
out
inc
push
add
aad
icebp
jne
ljmp
xor
mov
sub
xor
mov
add
mov
rolb
mov
or
add
xchg
stc
fsubl
add
in
pop
sbb
push
pushl
sub
add
or
lock
xor
mov
dec
cld
and
add
cmc
mov
lods
in
add
enter
xor
mov
aas
pusha
add
cmc
sub
xchg
cmova
mov
xor
mov
arpl
cmpsl
sub
mov
mov
xor
loope
pusha
add
rolb
mov
xor
insl
je
rcrl
pop
or
ret
xchg
fbld
add
mov
scas
lea
pusha
add
add
or
icebp
out
or
imul
jnp
into
flds
in
push
pop
aas
fs
sub
sbb
stos
arpl
decl
arpl
add
mov
mov
add
nop
add
mov
push
add
sbb
add
in
sub
adc
mov
popf
xor
addr16
pop
ja
cmp
out
call
mov
inc
dec
nop
add
push
add
add
dec
adc
push
add
mov
shrd
cwtl
pop
lret
aad
dec
aam
daa
xor
or
daa
insb
rcr
int
lea
add
aam
jmp
aas
dec
add
cmp
ljmp
mov
mov
iret
out
add
jae
les
ret
scas
lret
add
jb
mov
or
cmp
xchg
push
adcl
xchg
fldcw
push
add
add
lret
sbb
jle
xchg
add
pop
pop
sbb
pusha
add
into
addb
add
mov
imul
mov
shll
jecxz
add
and
mov
shrl
cld
repnz
addb
movsl
sbb
add
cmp
pop
or
jo
mov
push
cmc
vaddsd
add
and
add
or
rol
int3
jae
push
lahf
movsb
xchg
mov
mov
add
mov
xchg
divb
mov
push
pop
les
pop
push
stos
roll
dec
mov
adc
addr16
add
enter
sahf
and
das
inc
addb
jge
xchg
movsb
push
add
mov
stc
jae
cmpsb
adc
mov
mov
cmp
cld
push
adcl
mov
push
addr16
out
dec
psllq
jns
mov
mov
mov
add
ret
cmp
cli
rolb
mov
add
mov
and
mov
ja
mov
mov
push
aam
pusha
add
add
int
arpl
sbb
pop
push
in
mov
xchg
repnz
icebp
rolb
mov
sub
sbb
mov
lds
mov
insb
std
ja
neg
xor
add
and
idivb
out
or
jecxz
lea
dec
test
add
ljmp
adc
leave
sahf
scas
mov
add
add
dec
into
fstps
fstpl
jo
mov
jle
in
pop
imul
or
cmp
addb
daa
mov
les
cltd
mov
mov
mov
pop
push
add
addb
jle
dec
imul
push
add
add
fsubs
lahf
ljmp
bound
mov
das
dec
frstor
and
mov
add
int3
push
or
mov
add
jae
add
jecxz
fbstp
in
stos
jp
add
fs
mov
cmpsb
int3
repnz
sbb
fdivr
divb
popf
pop
xchg
and
test
mov
mov
mov
daa
ficoms
sub
add
xchg
inc
mov
add
or
and
frstor
add
rolb
loope
and
mov
in
inc
add
cmp
or
sub
movb
imul
fildl
rolb
mov
add
xchg
int3
add
cmp
je
rolb
mov
ret
push
xchg
sahf
roll
sub
mov
aaa
imul
fs
adc
aam
sbb
mov
lods
js
shll
mov
sbb
nop
add
xor
mov
and
mov
pusha
add
or
add
les
mov
push
xor
mov
or
mov
inc
ja
sub
pop
xor
mov
rolb
mov
mov
mov
fincstp
js
pop
xor
add
mov
lds
and
add
fsubs
icebp
pushf
pop
cmp
inc
and
pushl
xchg
add
or
sub
cmp
dec
aad
add
mov
arpl
insb
ja
pop
cld
scas
addb
imul
mov
sbb
jge
add
dec
fbstp
mov
and
mov
and
add
shll
add
sub
out
je
pushl
aad
mov
das
jg
add
mov
out
call
out
pop
xchg
dec
test
add
add
inc
inc
pop
cmp
cmc
rolb
mov
push
mov
les
xchg
negl
mov
data16
jp
negl
ret
push
fistl
xchg
imulb
jecxz
add
out
xchg
inc
add
in
movsl
cs
mov
sub
mov
add
xor
add
imulb
mov
mov
add
lods
mov
cmpsl
fsubrl
xchg
out
ljmp
out
cmp
cmp
popa
shl
jecxz
negl
lea
jge
in
repz
and
pop
scas
mov
add
popf
mov
mov
mov
xchg
add
sahf
push
dec
push
ret
in
push
add
add
mov
and
jl
mov
mov
and
mov
cmp
cmp
popa
pop
xor
add
mov
add
mov
mov
iret
fwait
pusha
add
cmp
js
add
mov
mov
jne
cmpxchg
add
lahf
cmp
inc
js
and
mov
xchg
mov
mov
and
mov
sbb
fiaddl
mov
pop
jle,pn
add
mov
pop
pop
mov
mov
add
add
inc
js
pusha
add
mov
cmp
and
mov
popf
bound
mov
mov
add
or
lods
mov
xor
mov
adc
mov
filds
add
out
add
mov
mov
dec
mov
add
pop
or
or
negl
bound
mov
notb
fnstcw
mov
sbb
rolb
cmpxchg
mov
xor
cmpsl
rorl
pop
jl
add
and
inc
mov
pop
pop
push
sbb
mov
inc
add
sub
adc
movsl
icebp
mov
repz
fsubs
dec
in
push
daa
cmp
mov
xor
mov
out
mov
mov
mov
add
add
les
popf
loopne
mov
add
or
push
mov
lods
fdivrs
mov
adc
lahf
scas
inc
add
or
int
mov
clc
aaa
sbb
add
in
sti
mov
mov
dec
cmp
daa
dec
cmp
or
popa
and
mov
out
out
popf
out
rolb
mov
xchg
inc
sub
mov
dec
inc
add
pop
imul
add
add
mov
cli
xchg
pop
mov
xor
ljmp
push
add
test
cmp
adc
fldt
add
sahf
scas
out
push
add
add
inc
add
jp
add
or
cs
fcmove
int
fsubrl
adc
mov
pop
push
mov
ja
jge
mov
mov
push
in
fisttps
add
mov
adc
pop
addr16
lcall
add
dec
add
add
scas
add
outsb
mov
ds
dec
fisttpll
sub
fwait
lds
add
xor
sub
and
inc
jge
popf
push
jnp
in
sub
pop
cltd
mov
add
mov
fisubrl
sub
cmp
adcl
inc
add
xor
sbb
mov
sbb
sub
movsl
inc
pop
mov
imulb
jmp
mov
addb
sub
test
cmp
pop
and
pop
fildll
loop
mov
fdecstp
and
add
pop
xchg
xchg
add
sub
add
add
push
mov
mov
jmp
sahf
adc
mov
vpcmpgtb
mov
add
dec
or
add
mov
push
add
into
dec
inc
add
xor
jge
add
xchg
mov
jmp
push
add
jb
mov
mov
add
shll
xchg
mov
inc
add
ret
cmp
xchg
pop
or
mov
popf
cs
les
nop
add
push
pop
movsl
mov
pusha
add
add
mov
mov
pushf
push
mov
mov
add
cmp
ss
mov
mov
add
insl
mov
mov
notb
add
xchg
add
lret
xchg
std
loope
add
cmp
mov
or
add
add
mov
fistpl
mov
jecxz
jnp
fcomps
daa
add
mov
xor
test
add
pop
in
xchg
add
mov
lret
loope
or
gs
imul
pop
sti
sbb
movsb
in
fadd
inc
add
inc
add
mov
add
cmc
jmp
add
inc
jne
dec
das
xchg
out
or
rolb
mov
add
jne
in
push
add
test
push
or
jne
mov
or
fisttpl
test
rolb
mov
add
pop
icebp
cltd
scas
cmp
or
or
jbe
loop
mov
xchg
add
mov
mov
sbb
sbb
add
mov
add
scas
push
faddp
add
loope
jno
out
lock
arpl
xor
inc
mov
scas
es
dec
aam
cmp
mov
sbb
inc
jne
add
mov
sbb
lret
and
ljmp
cmp
xchg
out
add
enter
add
mov
mov
sbb
sbb
pop
lret
cmp
movsb
outsl
shll
mov
pop
gs
cmpsl
inc
or
add
mov
jae
jecxz
adc
mov
and
mov
mov
mov
mov
loop
mov
add
fs
mov
xchg
pop
fistpl
movsl
dec
push
aad
sub
sti
mov
hlt
sub
mov
outsl
mov
dec
xor
mov
jb
mov
xchg
xchg
int
mov
add
out
pop
adcl
divb
sub
jne
dec
ret
stos
divl
adc
mov
add
pop
mov
test
clc
ja
aas
rsqrtps
mov
cmp
mov
aad
sbb
mov
sbb
dec
cltd
push
mov
mov
lock
add
add
mov
add
xor
and
push
jns
in
mov
fistps
cli
addb
cwtl
aas
and
pop
xor
in
divb
add
cmc
pop
cli
mov
mov
jmp
mov
je
lods
imul
cmc
jge
xchg
add
sub
fistps
in
sbb
jbe
daa
popa
sub
sub
jnp
arpl
pop
out
int
add
pushf
jns
push
mov
dec
cli
jne
repz
das
cmp
mov
mov
inc
sbb
test
add
add
das
xchg
xor
dec
push
call
in
and
mov
or
imul
pop
std
dec
pop
outsl
xor
mov
mov
xchg
inc
nop
add
xchg
add
test
adc
mov
mov
add
mov
addb
xchg
sbb
or
es
cwtl
sbb
add
add
mov
add
mov
dec
fwait
push
call
daa
arpl
rolb
mov
fcmovnbe
lea
add
je
test
or
addr16
pop
jae
rolb
cmp
mov
xlat
sbb
push
pusha
add
add
addb
icebp
les
pop
mov
mov
cmp
mov
pop
pop
lds
add
dec
sbb
in
push
mov
mov
stos
jmp
addb
out
iret
cld
lahf
in
push
addl
lds
jbe
loop
mov
stc
aas
fdivl
add
and
inc
add
lock
adc
inc
add
addb
test
inc
sub
adc
in
add
rcll
sub
mov
stos
divl
fwait
incl
xchg
mov
js
sub
ret
les
pushf
mov
add
out
jo
mov
lcall
pop
sti
sti
lea
mov
sub
out
popl
adc
add
pop
cmc
hlt
aaa
push
add
mov
popl
leave
xor
mov
in
bts
mov
lods
xchg
add
loop
mov
fdivrs
mov
mov
xchg
push
lret
sbb
popa
mov
arpl
aaa
dec
mov
sub
shrl
sub
pop
movsb
push
push
xchg
adc
add
ljmp
mov
push
enter
cmc
pop
addr16
outsl
scas
mov
inc
add
fs
push
xchg
sahf
cwtl
push
jle
jo
mov
cmp
lods
mov
mov
mov
pop
mov
mov
in
or
shll
inc
in
rcrl
mov
add
in
call
xor
mov
mov
push
pusha
add
cltd
rolb
mov
mov
mov
or
mov
mov
or
dec
sbb
xchg
add
push
xor
or
lds
xorl
or
or
sub
mov
les
mov
mov
sbb
add
and
mov
sbb
lret
addb
jecxz
repnz
stos
cmc
inc
add
outsb
ja
jo
mov
xchg
in
ret
cli
mov
movsl
xor
inc
add
inc
mov
arpl
cld
mov
enter
mov
sbb
add
jne
lcall
pop
loope
pushl
add
cmp
outsb
bswap
adc
mov
add
adc
mov
mov
add
mov
mov
lea
test
push
imul
insl
test
add
pop
sti
add
mov
add
cmc
cmpsb
xchg
fldenv
or
aad
inc
in
lcall
lds
es
pop
out
fs
out
scas
mov
jecxz
clc
aas
jo
mov
mov
or
mov
call
add
mov
rolb
mov
push
push
outsb
mov
hlt
das
xchg
or
rolb
mov
add
add
pop
sti
fisttps
adc
rolb
mov
adc
mov
add
cld
jle
fisttpll
icebp
lds
mov
lret
cmp
cmp
cmpl
sbb
add
add
pop
mov
mov
fmull
cmpsb
fs
add
dec
ret
sub
push
daa
into
lds
je
std
cmp
dec
out
sbb
lea
or
aad
pusha
add
lods
and
ret
jle
mov
inc
cwtl
dec
loop
mov
mov
add
mov
pop
mov
jae
call
ljmp
addb
lods
test
into
cld
lds
in
add
add
dec
lea
and
pop
xchg
or
add
mov
mov
mov
add
mov
bound
mov
pop
aas
testb
mov
mov
movsl
xor
mov
pop
sub
add
sub
jae
push
add
fbld
xchg
add
add
cmp
jae
add
push
add
mov
sub
lret
call
mov
jg
in
jns
lods
das
stc
mov
or
orl
test
pop
pop
sbb
addb
add
mov
mov
sub
add
loopne
mov
dec
mov
mov
xor
mov
imul
es
mov
sti
aam
add
mov
and
dec
xor
mov
mov
icebp
xor
ljmp
movsl
lcall
mov
enter
mov
add
cmc
rolb
mov
aad
pusha
add
cmp
sbb
pop
or
pushf
mov
je
pop
jno
lds
aam
pop
dec
adc
sbb
cs
cltd
faddl
lahf
jns
call
faddl
add
pushf
jmp
fstl
jle
pop
mov
outsl
xchg
sub
or
testb
addb
mov
movsl
div
cmp
pop
cmpsl
lods
push
mov
add
jmp
ss
mov
mov
jmp
mov
mov
imul
or
mov
mov
push
out
add
add
add
addb
popa
jnp
movsl
enter
push
xor
scas
daa
sbb
inc
xchg
adc
mov
inc
add
push
lret
inc
add
ljmp
mov
mov
lea
mov
pushf
pusha
add
mov
cmpsb
inc
std
repz
mov
into
inc
call
fisttpll
jg
cmp
add
mov
push
push
add
mov
ret
push
jo
mov
jb
mov
inc
mov
and
aaa
lea
movsb
dec
pop
mov
daa
pop
fstl
jo
mov
jl
cltd
addb
or
daa
popf
pushf
jle
add
cmc
push
add
or
push
jge
rcrl
add
jecxz
leave
hlt
pusha
add
dec
aad
pop
pop
cli
sub
out
daa
daa
xchg
call
xor
gs
cmp
ret
pop
sub
jae
daa
dec
or
hlt
and
out
xchg
sub
scas
mov
idivl
add
mov
add
fsub
lret
int
pusha
add
add
and
mov
mov
insl
rolb
negb
add
je
pushf
lds
mov
push
and
mov
jecxz
je
imul
add
icebp
push
rcll
mov
popf
jge
fldl
add
sbb
add
aam
mov
insb
push
iret
mov
pop
jb
mov
int3
add
mov
mov
jns
mov
rolb
mov
add
rcrl
in
or
hlt
ret
sub
lea
push
mov
data16
stos
sub
dec
nop
add
add
testb
int3
jo
mov
xor
lock
addb
or
call
mov
mov
out
add
add
inc
add
push
jp
mov
jb
mov
mov
add
mov
cmc
cmpsl
push
jmp
adc
mov
mov
mov
repz
outsb
ret
mov
loope
dec
push
inc
inc
add
mov
mov
xchg
std
and
mov
push
add
sub
test
test
repz
mov
sbb
jbe
add
mov
imul
jo
mov
outsb
in
rolb
out
loopne
mov
push
addb
sub
int
lods
iret
pop
lods
fldenv
rolb
mov
addb
rolb
mov
dec
mov
addb
ret
cs
mov
cld
mov
icebp
sub
or
into
into
das
scas
nop
add
mov
sti
jmp
mov
pop
fisttps
or
repnz
mov
fwait
jno
jbe
add
test
in
add
add
mov
rolb
inc
adc
in
call
add
push
push
add
jbe
add
add
add
add
