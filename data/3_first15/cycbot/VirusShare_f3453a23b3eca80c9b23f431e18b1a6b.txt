movsl
adc
xchg
movb
int3
sbb
xor
aaa
testl
add
add
adc
xor
xor
adc
lcall
add
js
add
add
dec
iret
xlat
loopne
out
xchg
int3
sbb
jp
and
icebp
and
push
mov
and
mov
shr
mov
sbb
xchg
cmpsl
notb
mov
mov
cmpsb
out
cli
clc
fiadds
dec
mov
jb
mov
pushf
ljmp
in
and
mov
aam
fmull
pop
push
cmp
lock
add
imulb
jne
jns
es
sub
leave
rolb
out
dec
jmp
out
aam
mov
lods
mov
call
pop
inc
add
xor
push
jp
jno
addb
add
add
jae
pop
movsl
add
adc
xchg
jecxz
lea
aam
fidivrl
int3
scas
sbb
mov
mov
loopne
add
rolb
dec
test
add
testl
adc
scas
mov
dec
jo
xor
fidivs
sub
pushf
pop
ss
fdivl
sub
hlt
jl
mov
inc
cmp
push
cli
fidivrl
outsl
mov
frstor
add
add
xor
rolb
xchg
loop
inc
add
iret
das
pop
fnsave
aas
and
dec
test
int3
ja
mov
daa
sub
add
add
xchg
cld
out
xchg
xchg
fs
fldl
sbb
xor
add
testl
stos
xchg
sub
stc
sti
pop
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
repz
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
es
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
xacquire
pop
add
ss
cs
push
push
lret
jmp
add
add
je
aas
inc
add
cmp
and
stos
cwtl
aaa
in
xchg
dec
xchg
mov
repz
jbe
lret
icebp
adc
push
add
aad
mov
aad
mov
lock
fcomp
std
inc
cmpl
add
push
pop
lcall
sub
or
add
and
push
add
dec
pop
add
aas
stos
jb
cli
mov
sti
arpl
je
and
mov
int3
push
add
add
fs
push
bound
fldcw
add
out
insl
mov
mov
push
pop
add
ljmp
add
out
aad
outsl
aaa
cmc
ret
inc
jle
icebp
hlt
movb
pushf
mov
add
fistl
sahf
in
adc
add
negb
add
pop
mov
lods
outsl
push
jle
inc
add
add
pop
sbb
insb
lret
pop
ds
add
mov
outsl
push
or
jg
dec
pop
repz
mov
popf
les
lret
insb
fisttpl
stos
sbb
sub
adc
add
mov
dec
add
dec
hlt
adc
fucom
fbld
inc
cli
push
pop
in
sbb
sbb
int
gs
mov
das
push
jns
addb
push
addr16
pop
bound
out
jo
lods
cltd
or
sbb
pop
inc
sbb
mov
fidivrl
adc
ljmp
xlat
fs
les
jge
add
fadd
pushf
aas
jo
imul
inc
mov
add
and
mov
aam
add
outsb
ret
shll
inc
imul
ret
cmp
out
add
pop
iret
popa
shrl
pop
push
add
push
movsb
jge
jmp
pusha
add
add
leave
jns
jne
idivl
sub
mov
xor
or
loopne
arpl
cmpsl
push
shlb
push
jl
lret
or
fs
jns
xor
pop
adc
dec
int3
sahf
cld
imul
add
jp
add
test
add
lret
mov
jbe
xorl
add
addb
inc
cmp
jle
movsl
push
mov
jmp
mov
pop
xchg
mov
cmp
mov
ljmp
sub
mov
cmp
push
std
sub
mov
mov
lret
xor
pop
adc
mov
push
sub
test
xor
mov
xchg
int
pushf
jecxz
cwtl
fwait
pop
idivl
inc
leave
lahf
inc
add
xor
cld
or
rorl
pop
hlt
test
mov
jmp
dec
mov
fsub
test
pop
pop
clc
sbb
aam
fisubrl
bound
dec
jb
jb
jne
stc
xchg
out
add
cltd
mov
clc
es
stos
push
lret
cmc
or
mov
cmp
fistps
stc
repnz
fs
add
clc
jo
test
rol
andl
fdivr
cmp
dec
in
cmpsl
rclb
pop
test
jl
lods
icebp
test
and
lock
mov
punpckhwd
add
cli
daa
addb
dec
movb
outsl
push
add
sub
dec
pushf
dec
xchg
gs
loopne
movsb
mov
ds
push
out
or
pop
push
xor
mov
jl
adc
das
in
push
mov
cmpsl
scas
stos
inc
add
or
inc
sbb
outsb
leave
or
xchg
dec
das
push
and
addb
add
jae
int
pop
jecxz
add
inc
add
push
add
cmpsb
xlat
sbb
int
add
or
and
sub
sub
push
shrb
lret
dec
std
inc
add
add
jne
inc
insb
add
push
mov
cmp
add
xor
mov
jo
adc
push
add
push
sub
pop
repnz
nop
inc
push
mov
fidivrl
icebp
jl
add
add
xor
inc
add
mov
inc
repz
fs
movsl
pop
loope
outsl
sub
add
das
push
xlat
scas
aas
add
movsb
mov
cmpsl
fwait
inc
xchg
xor
inc
add
pusha
add
scas
sub
mov
addb
sbb
aam
call
loope
mov
out
add
lock
xchg
movb
pop
adc
inc
out
xchg
aam
or
dec
ficomps
test
cs
lock
add
jae
inc
add
movb
inc
dec
je
call
dec
clc
insl
mov
fsub
mov
jcxz
pop
lret
add
xor
or
ret
mov
loopne
and
sbb
mov
add
sahf
mov
add
mov
shrl
push
fwait
pop
dec
icebp
arpl
scas
ljmp
rorb
out
addb
dec
xchg
xor
add
add
scas
or
mov
xchg
mov
pop
add
sbb
pop
inc
sbb
test
dec
inc
mov
inc
add
mov
xor
add
sub
push
mov
call
mov
ret
sahf
push
inc
mov
jnp
movsb
out
std
shlb
add
rorl
adc
pusha
add
bound
aam
rolb
loopne
inc
add
jecxz
or
ja
and
mov
mulb
sbb
sbb
and
lcall
ret
push
loopne
jmp
pop
add
pop
dec
cld
pop
mov
jle
pop
out
cmpsl
inc
cltd
bound
rorb
bound
pop
js
loop
mov
cmp
xchg
mov
stc
cmp
pop
bound
or
ret
mov
mov
cld
les
fimull
jb
test
and
add
xchg
loope
scas
add
and
sbb
test
xorl
jbe
jge
mov
insl
mov
jp
out
inc
add
add
outsl
lret
ret
movb
add
out
mov
xchg
int3
jne
test
rcrl
test
scas
pop
mov
and
xor
cltd
mov
pop
arpl
in
add
mov
loope
dec
mov
inc
mov
insl
test
shlb
in
scas
push
insb
ret
xor
cmp
mov
inc
inc
add
mov
mov
cmp
or
loopne
fimull
nop
pushf
nop
pop
xor
xchg
fnstenv
adc
xchg
cld
test
jecxz
lret
aam
lret
jmp
add
test
add
mov
xor
cwtl
xor
cmp
sub
out
mov
imul
mov
xchg
or
test
xchg
xchg
push
add
out
movsl
xlat
sub
mov
add
push
or
sub
dec
xchg
xchg
int3
pop
leave
fstpl
dec
call
aam
cli
mov
push
ret
jmp
or
sub
xchg
pop
out
es
ss
out
inc
add
scas
lea
cmpsb
stc
mov
inc
add
pop
or
inc
add
mov
jmp
bound
jae
and
add
cmp
or
xlat
inc
add
arpl
jg
out
js
int
call
add
mov
ss
repnz
or
pop
les
mov
test
adc
cld
lret
fdivr
adc
push
lahf
mov
dec
cmpsb
jmp
push
add
inc
add
dec
sub
les
dec
movsl
mov
pop
movsl
fsubs
mov
xchg
cmpl
pop
mov
jns
inc
and
pop
arpl
add
push
adc
or
add
mov
xor
pop
loop
mov
lods
insl
pop
sub
xor
cmp
add
add
daa
test
gs
les
inc
lret
mov
xor
and
addb
loope
arpl
push
stos
adcl
push
orl
js
jbe
frstpm(287
mov
std
fistpll
jae
lahf
ret
xor
push
add
cmp
add
adc
jae
into
bound
push
aam
push
lods
push
incb
pop
cmp
sbb
adc
or
icebp
xorl
jbe
add
cltd
sbb
pop
test
mov
jns
sbb
add
cmp
jge
imul
subl
in
push
or
and
sbb
xor
lahf
and
arpl
mov
inc
mov
pushl
push
mov
pop
negl
cs
mov
xchg
inc
push
mov
adc
add
xchg
xlat
adc
cmp
fsubl
jge
jmp
xchg
xlat
mov
jp
mov
cmp
fnsave
iret
pop
mov
jo
es
xor
add
lret
pop
into
or
imul
movsl
mov
cmp
js
arpl
lar
xchg
mov
ljmp
outsl
inc
add
mov
add
fdivl
fcmovu
mov
pop
jne
pop
dec
sbb
lcall
or
out
loop
bound
ds
add
xchg
sbb
out
fstpt
insb
jmp
ret
and
jne
add
sbb
shrb
sub
xor
fnstenv
pop
cmp
mov
cmp
cmp
ret
repz
push
imull
cs
fsubrp
fiadds
add
inc
mov
push
imul
enter
jbe,pt
daa
push
rcl
dec
xchg
mov
xlat
push
js
sub
add
pop
inc
add
call
and
bound
lcall
mov
dec
inc
sbb
shlb
popa
xor
sahf
fcmovnb
add
add
xor
add
sbb
sti
xchg
push
jns
adc
xor
add
or
xchg
cltd
rcll
push
pop
pusha
add
pop
out
inc
and
leave
xor
add
pusha
add
add
cmpsb
loop
jge
lds
fisttps
push
rcrl
lods
mov
mov
cmp
rolb
add
or
out
scas
xchg
xor
nop
dec
xchg
jbe
dec
and
in
shrl
add
lret
mov
add
jno
mov
jmp
add
inc
add
pop
aad
lret
in
ret
aad
mov
add
push
sti
insb
das
decl
add
addr16
cmp
shlb
push
cltd
bound
xchg
push
cmpsl
call
dec
xor
mov
loopne
jecxz
notb
mov
mov
dec
lahf
adc
xor
fidivl
out
sti
dec
xor
dec
pop
ss
lcall
loop
mov
sarl
cld
mov
xchg
xchg
pushf
fdivs
fcomps
mov
into
cmp
fistpl
mov
push
mov
icebp
fst
jle
shlb
adc
ret
jae
or
out
adc
push
cmp
add
jbe
sub
mov
pop
popf
pop
data16
into
inc
add
std
push
inc
add
add
decb
add
or
or
xchg
scas
cmp
addr16
jecxz
nop
stos
lock
fs
fiaddl
popf
mov
addb
mov
leave
lea
jno
sbb
add
cld
push
jg
add
stc
and
mov
sbb
insl
and
scas
xchg
jo
fidivl
or
sub
add
in
jle
and
add
cmp
or
jle
cmp
adc
or
and
inc
add
xchg
sahf
sbb
aad
dec
add
pop
loopne
outsl
add
pop
cmc
clc
orl
ret
scas
jl
or
and
xchg
jmp
and
xchg
push
outsb
outsb
movsb
mov
addl
in
adc
inc
add
mov
xor
jno
loopne
xchg
jg
and
add
cmp
sbb
add
daa
outsl
dec
or
jge
movb
push
into
and
test
inc
add
xor
pop
pop
dec
mov
adc
xor
dec
pop
mov
mov
iret
call
bound
mov
sub
mov
in
mov
mov
stos
repnz
adc
mov
push
roll
ficomps
fidivrl
ljmp
push
lret
lds
cmpsb
out
and
test
ljmp
mov
fstpl
dec
lea
xchg
bound
fistpll
sbb
adc
insb
mov
and
rcll
pushf
stos
shrl
and
mov
adc
fdivs
xor
jmp
push
mov
add
xchg
dec
jae
push
push
push
add
fwait
lcall
sbb
cwtd
push
push
add
pop
sub
cmpsl
lods
or
sub
push
dec
push
into
inc
lds
hlt
test
jg
push
outsb
adc
fstpt
jae
jl
or
enter
ja
xor
or
lret
arpl
mov
js
adc
jle
pop
inc
add
sti
lds
xchg
pushf
dec
daa
mov
push
jge
sub
xchg
ffree
xor
shlb
fcomps
add
les
cmp
add
sbb
add
xchg
and
xchg
add
mov
aam
add
mov
mov
mov
testl
fwait
mov
lcall
push
hlt
jge
add
push
fsubrl
fists
pop
outsb
dec
mov
call
mov
mov
pop
xor
jo
arpl
ret
std
pop
push
sahf
mov
cli
and
dec
mov
hlt
xchg
mov
test
test
add
stos
ret
mov
mov
jnp
cltd
mov
lahf
movsb
or
push
fldt
mov
adc
add
cwtl
add
lock
mov
aas
lock
mov
enter
sub
push
ret
fucom
sti
jge
cs
and
inc
add
into
dec
fcompl
cmp
pop
das
popf
lcall
and
dec
in
mov
mov
cmp
push
or
mov
add
and
add
xchg
das
cs
dec
mov
add
pop
movsl
addb
xchg
inc
add
jp
loopne
aas
fsubp
aaa
loope
insl
fldenv
or
js
enter
hlt
sbbl
jb
pop
aaa
xor
dec
fistpll
bound
push
mov
mov
pop
and
jge
ret
cmp
push
mov
mov
lods
and
adc
lahf
push
jl
nop
lcall
lret
test
xor
mov
fwait
pop
xchg
push
adc
or
mov
mov
int3
test
fistl
cmp
push
fnstenv
insl
pop
mov
add
sub
xlat
push
addb
xor
dec
lods
jbe,pt
clc
in
scas
test
inc
add
mov
dec
lods
dec
jnp
push
ljmp
and
gs
repz
jp
insl
std
mov
dec
mov
mov
or
jne
imul
call
test
mov
sub
leave
arpl
aaa
push
into
sub
or
cld
ret
add
clc
in
ja
jne
xchg
out
pop
fcoml
add
jl
xlat
decb
add
rolb
mov
fs
sbb
cmc
adc
leave
mov
pop
stc
or
adc
iret
jnp
mov
mov
call
jle
aaa
gs
push
adc
fwait
mov
mov
mov
jl
test
roll
jb
adc
cltd
mull
xchg
push
mov
pop
nop
push
or
addb
pop
mov
mov
inc
add
cmp
jb
fwait
je
push
mov
outsb
cld
jg
sbb
jl
jmp
mov
cli
mov
inc
add
hlt
push
in
je
mov
adc
fimull
jo
cli
insl
int3
cmp
mov
mov
push
add
add
xor
inc
adc
ret
iret
jno
insb
data16
cmp
jo
int3
xchg
adc
data16
in
inc
mov
or
add
xchg
push
mov
xor
scas
sub
sub
xchg
addr16
sar
sub
test
into
mov
enter
mov
push
imul
mov
jno
iret
push
ss
dec
fwait
hlt
push
pusha
add
test
cmpl
imul
sub
ss
mov
push
fcompl
int3
lods
arpl
call
insb
push
add
add
pushf
dec
bound
mov
push
daa
push
inc
leave
test
add
mov
sbb
sub
decb
scas
pop
popf
xor
mov
add
mov
add
xchg
jbe
call
js
cld
dec
clc
ja
cs
das
lods
inc
mov
je
adc
das
adc
fists
pop
cmp
adc
insl
repz
add
les
jbe
fidivrl
jecxz
xchg
daa
addb
mov
iret
iret
fs
leave
movb
add
jo
mov
pushf
lcall
cld
push
mov
or
bound
mov
repnz
cmc
jne,pn
xchg
out
or
in
cmp
xorl
push
or
jp
sbb
mov
mov
insb
add
mov
mov
outsb
stos
push
pop
mov
lods
dec
mov
adc
out
fs
and
add
test
sub
push
sti
fdivs
xchg
cmpsl
xchg
imul
mov
jge
test
cmp
in
sbb
cmp
or
mov
repnz
sbb
outsl
pop
aaa
data16
adc
mov
bound
cmp
stos
movsl
pushl
sbb
sub
pop
and
jno
mov
and
add
add
push
jle
je
cmp
mov
cwtl
adc
add
push
lods
aad
je
and
add
notl
pop
movb
les
xchg
ss
add
mov
enter
fidivl
outsl
es
rorl
xchg
cmp
push
dec
xor
xchg
movsl
ss
aad
push
les
out
dec
xchg
lret
ljmp
jmp
shlb
inc
fisubl
adc
adc
movb
add
es
leave
mov
add
mov
xchg
xor
scas
mov
add
jbe
shl
cs
insl
fisubrs
sub
or
ljmp
ljmp
dec
loop
ret
push
jge
out
add
add
inc
add
dec
fucomi
push
add
jecxz
pushf
mov
add
cli
mov
cmc
xor
mov
fnstenv
loope
imul
insb
jno
aad
or
inc
add
into
push
inc
ljmp
ret
aam
lds
outsb
orl
loope
xchg
test
xchg
push
mov
aam
movsb
mov
add
jle
shll
lret
and
cmp
rolb
jecxz
jg
stos
push
add
std
dec
in
xchg
pushf
std
or
test
sub
jecxz
adc
add
or
addb
ljmp
mov
add
xchg
scas
cmp
jg
test
add
fisubl
pop
xor
scas
xchg
pop
adc
movb
pop
addb
inc
add
movsb
lds
jecxz
fdivs
mov
mov
xchg
popf
push
jae
es
add
cmp
dec
dec
dec
or
pop
push
add
jo
add
add
cmpsl
dec
outsl
xor
inc
iret
int3
int
adc
push
fsubrl
add
add
movsl
mov
popf
movb
mov
adc
jb
std
cmp
adc
pop
inc
add
imul
mov
push
jg
mov
repnz
jp
mov
mov
neg
mov
das
jae
add
sbb
xor
imul
stos
iret
ss
int
lods
pop
xchg
mov
das
xchg
lcall
rolb
add
push
jl
bound
stos
or
cmp
lret
xor
std
mov
imul
ficomps
cmp
lret
loopne
xchg
pusha
add
sub
and
inc
add
and
inc
cmc
dec
fisubrs
cmc
popa
cmp
cmp
lret
and
das
repz
or
inc
dec
push
add
arpl
push
out
sub
lds
adc
dec
cmp
jecxz
sbb
pop
enter
add
pop
lret
adc
jns
lods
sbbl
inc
add
rorb
addb
xchg
cmp
pushf
mov
pop
mov
sub
jne
lock
gs
mov
jle
pusha
add
je
roll
mov
inc
add
xchg
scas
dec
lock
add
cmp
mov
adc
push
pop
fistpl
rolb
cwtl
ret
pop
cmp
ljmp
gs
or
mov
add
in
jmp
mov
add
aad
inc
insl
ret
xchg
ja
pop
aaa
sub
add
or
adc
mov
mov
mov
jecxz
sahf
scas
js
sub
add
push
dec
movsl
cmp
add
cmpsb
fists
ret
addb
dec
or
pop
adc
and
fcoml
sbb
lds
test
ficoms
xchg
popf
push
add
or
dec
js
sub
mov
out
adc
ljmp
shlb
enter
mov
xchg
jge
cmp
sbb
xor
mov
ss
stc
jno
push
add
add
dec
sahf
int
fsubrl
add
cs
add
xchg
mov
mov
popaw
shll
popa
loope
fld
add
loopne
push
loop
scas
and
je
mov
sbb
fnstenv
xchg
ja
lcall
and
add
adc
es
ret
and
mov
aaa
out
sub
test
out
mov
or
incl
sbb
add
adc
lock
or
mov
clc
dec
lret
movsl
jno
add
imul
std
jb
fcompl
int
add
sub
sub
pop
jecxz
push
sahf
inc
add
adc
loopne
or
stos
sahf
xchg
aam
aad
insb
mov
fimuls
mov
mov
ret
push
add
cs
mov
popf
jns
or
jl
mov
add
mov
mov
cmp
arpl
mov
out
pusha
add
mov
add
inc
add
add
fcmove
ss
sub
mov
add
int3
cli
sarb
or
and
add
push
adc
sub
sub
sub
mov
daa
add
inc
add
jnp
push
add
imul
mov
push
lea
enter
jbe
frstor
cmp
sub
repnz
add
sub
add
and
popa
sbb
mov
scas
pop
outsl
mov
movsl
lock
cmp
iret
mov
lds
scas
dec
fdivrl
dec
insl
repz
dec
mov
add
hlt
outsl
addb
mov
xor
add
pushf
test
out
in
sbb
fst
cmp
add
fnstsw
int3
mov
inc
add
jb,pn
add
fildl
add
add
add
mov
test
lret
mov
sub
mov
add
jb
push
xchg
aas
cwtl
push
je
popf
cmp
push
mov
push
into
mov
in
test
aaa
or
cmpsl
jnp
loopne
xchg
int3
cltd
cld
inc
add
push
dec
mov
add
jns
lods
bound
xor
mov
xchg
icebp
and
add
add
pop
cmp
inc
add
lahf
jmp
inc
les
cli
jb
mov
cmp
mov
add
std
rcl
fxch
xor
adc
inc
insl
push
inc
add
stos
aad
aaa
fnstcw
sub
sahf
cmp
fstpl
add
adc
aaa
dec
sbb
add
das
pop
sbb
addb
jnp
outsl
insb
andl
mov
es
pop
out
cmpsl
imull
mov
add
clc
jns
pusha
add
call
cmp
add
pop
movsb
notb
push
lock
mov
mov
insl
dec
les
insl
pop
jne
add
arpl
push
and
cltd
jle
and
xchg
arpl
dec
mov
mov
pop
mov
xchg
leave
dec
nop
pop
mov
in
gs
outsl
jo
hlt
add
mov
inc
adc
hlt
jae
push
xchg
fisubrs
jge
rcrb
mov
mov
mov
mov
jno
cld
cmp
sub
push
xchg
pop
int3
mov
shll
vdivss
fcmovnb
xchg
nop
sub
pop
jbe
pop
xor
sub
jno
lods
testb
data16
pop
insb
mov
nop
mov
add
pop
inc
jns
fsubrs
addr16
add
shlb
mov
add
xor
mov
jl
enter
outsl
sbb
popf
jmp
rcrb
mov
rclb
add
add
jns
ficomps
dec
xchg
dec
daa
jmp
lahf
inc
xchg
jg
std
cmpsb
xchg
aas
push
mov
aam
sbb
add
dec
adc
adc
cmc
addl
stos
mov
add
push
xchg
pop
in
repnz
xchg
lcall
test
mov
out
pushl
cld
roll
mov
clc
jns
push
or
xlat
ss
es
roll
pushf
stos
out
sub
add
inc
in
mov
lcall
sti
sbb
cmp
mov
inc
add
andl
add
mov
in
in
and
leave
popa
fsts
xor
in
add
xchg
je
add
mov
ljmp
sar
push
push
js
xor
adc
jmp
lods
xor
adc
mov
pop
add
jo
icebp
fiaddl
ss
pop
hlt
lahf
cmp
add
sub
pop
movsl
fnstenv
add
cmc
addb
lea
add
dec
dec
mov
addb
nop
mov
jbe
xor
mov
mul
and
and
adc
push
sahf
loopne
xor
movsb
insb
or
add
jae
es
xlat
clc
xor
add
aam
cltd
xchg
inc
add
push
insb
out
sahf
loopne
loope
or
push
mov
out
lods
inc
stos
xlat
jns
lock
clc
test
iret
and
inc
add
sub
add
or
push
fcompl
loope
add
shlb
push
repnz
mov
jno
nop
dec
fwait
iret
out
inc
add
sub
in
mov
bound
repz
call
add
pushf
sbb
insl
inc
add
pop
movsb
divl
sti
sub
xor
sahf
mov
jmp
ss
mov
addb
addr16
out
adc
or
inc
jp
add
push
push
mov
sbbl
sbb
xchg
jp
add
mov
xchg
sahf
loopne
mov
add
or
push
jbe
add
stos
fwait
push
mov
cmp
mov
mov
and
addb
jno
push
xchg
lea
add
dec
out
lea
jno
push
fcoml
sbb
push
cmp
popf
xor
add
movsb
cmc
shrl
mov
leave
jbe
int3
pop
clc
mov
cld
dec
roll
dec
in
pop
xor
stos
ljmp
add
test
fneni(8087
pop
je
in
xor
movsl
and
push
cmc
js
cmp
sub
xchg
or
add
js
addb
into
pop
fsubrl
cwtl
addr16
jb
cmp
dec
cmp
je
pushf
dec
sahf
xchg
jle
sub
xchg
loopne
insb
ss
in
pusha
add
add
cmp
pop
insl
push
mov
add
dec
in
mov
add
mov
je
out
fdivrs
xor
mov
xchg
and
shrl
iret
xor
xchg
mov
cmpsb
and
or
test
and
xor
sub
cmp
shll
cld
mov
adc
dec
pop
lock
add
in
inc
add
lahf
xchg
lods
pop
mov
or
adc
push
mov
movb
sub
mov
les
arpl
into
cmpsb
hlt
xor
bound
popa
testl
lds
mov
das
sub
shl
push
ja
inc
test
xchg
sahf
movsb
add
dec
push
mov
rdpmc
xchg
pop
scas
ret
pusha
add
popa
test
test
fisttpl
jns
stc
mov
lret
mov
push
test
shrb
adc
xchg
inc
pop
popa
and
dec
adc
xor
in
cld
add
jo
cmp
iret
sarb
xor
mov
vmovdqu
jmp
stc
dec
xchg
push
je
ss
sub
lret
xchg
mov
cmpsb
dec
push
add
xchg
push
push
into
and
popf
inc
add
add
pusha
add
scas
lods
testb
dec
add
sbb
push
stc
insl
jo
scas
push
jmp
int3
jmp
xor
dec
xor
in
aas
or
sbb
xchg
xchg
callw
sub
lret
mov
nop
movb
stos
dec
pop
add
dec
ret
cmp
sti
xor
push
lods
jae
sub
test
insb
xor
inc
jge
adc
jns
mov
and
int
sub
or
cmpsl
jno
cmpsb
ret
pop
icebp
push
jge
sbb
outsb
mov
adc
cld
push
xchg
pusha
add
dec
jb
js
or
xchg
sbb
cltd
adc
js,pt
add
mov
loopne
call
add
in
dec
insl
add
sbb
or
and
lcall
in
cs
test
xchg
cmp
mov
jmp
insl
or
push
add
fisubrs
rcr
jmp
cmp
adc
jle
cmpsb
add
test
mov
aad
dec
push
push
imul
int3
rolb
push
jae
int
add
ror
jbe
inc
inc
push
ljmp
jl
inc
add
or
add
iret
jns
js
adc
rolb
out
addb
clc
and
loope
pop
xchg
arpl
mov
adc
add
and
aad
jge
icebp
xor
add
aas
xor
je
add
cwtl
lds
test
add
data16
inc
addb
dec
out
add
pop
cwtl
sti
dec
insb
push
mov
test
lds
nop
xor
jg
repz
imull
push
cmpsb
movb
xchg
fdivr
pusha
add
mov
mov
div
andl
insb
cmpsb
cmp
push
test
push
fsubrl
push
out
jns
pop
popa
jb
lods
es
jg
jmp
add
lret
ficoml
movsb
es
shrl
sub
out
and
inc
add
add
shlb
mov
lds
mov
mov
std
fucomp
push
sub
pop
sub
sub
mov
sub
push
fwait
mov
push
xor
cmp
mov
pop
shlb
and
gs
rcrl
lock
xchg
cmp
lods
pop
push
cmp
idivb
xchg
aaa
add
push
mov
out
mov
clc
fldcw
sub
dec
mov
fxch
mov
pop
mov
pop
out
dec
outsl
mov
stc
pop
ja
mov
mov
push
mul
and
add
aaa
shll
mov
mov
addr16
sbb
xchg
jl
jns
xor
add
jecxz
dec
mov
arpl
jb
testl
bound
jbe
xor
les
mov
xlat
test
jne
icebp
test
rolb
in
dec
jno
push
popa
in
fbld
cmp
outsl
xchg
push
add
mov
jae
lods
cmp
or
or
dec
sub
adc
aaa
out
and
add
test
in
fucomip
cmp
pushf
dec
stc
inc
add
lods
mov
push
mov
xlat
repnz
mov
sbb
ret
mov
push
push
out
test
mov
add
int3
xchg
enter
cmp
and
aas
dec
fsubr
pop
in
fmull
mov
sub
pop
sbb
js
cld
fisttpll
es
xor
sbb
xchg
fmuls
test
push
subl
jno
push
xchg
addb
call
and
push
mov
jmp
scas
enter
mov
sahf
dec
mov
sub
inc
add
daa
or
sbb
cli
xlat
xchg
sbb
arpl
dec
push
and
sub
movsb
mov
pusha
add
push
pop
inc
add
iret
adc
jnp
test
mov
shl
movsb
mov
jb
add
jb
push
push
mov
fsubl
mov
jbe
leave
sub
aaa
lds
push
arpl
dec
inc
add
ja
sbb
arpl
dec
mov
lea
lods
popa
jno
in
dec
jns
mov
add
pop
adc
mov
cli
addb
add
add
sub
mov
ret
dec
xchg
push
jmp
mov
outsb
mov
ret
mov
xchg
dec
mov
add
xchg
addb
daa
pop
insb
push
xor
inc
add
dec
fldl
cli
iret
dec
scas
mov
add
aaa
pusha
add
dec
mov
add
dec
loop
add
clc
jo
adc
mov
mov
add
cmp
inc
mov
xor
stos
data16
xor
xor
cltd
stc
pushf
fildll
add
scas
insb
ret
rcrl
pop
xchg
adc
mov
sahf
mov
adc
cmp
into
in
sahf
jo
inc
jns
dec
mov
xor
pop
stc
jge
movsb
xor
in
pop
inc
mov
or
cmp
std
lock
ljmp
inc
cmp
dec
xor
push
mov
lahf
int3
stc
enter
shll
shlb
xchg
xor
xchg
push
cs
sar
pop
push
and
lret
repz
jmp
cmp
mov
bound
sub
inc
mov
iret
and
and
inc
in
das
sbb
cmp
inc
add
or
cmpsl
cmp
mov
sbb
pushf
aad
add
add
jp
sahf
mov
push
insb
mov
mov
dec
std
fs
mov
in
inc
lods
into
mov
into
test
jl
cmp
jle
out
faddl
cltd
movsl
outsl
out
lret
mov
sti
mov
add
pop
ret
stos
stc
stc
push
sbb
push
fwait
out
mov
add
iret
sbb
insb
sbb
inc
add
test
mov
add
lret
mov
xor
xor
cs
in
icebp
fwait
sbb
out
jbe
add
add
movb
repnz
inc
xor
add
or
mov
add
pop
int
cli
mov
in
jns
add
mov
enter
cs
add
push
sbb
in
sbb
add
lret
icebp
add
mov
cwtl
gs
mov
stc
mov
xor
loope
dec
mov
mov
cs
popa
cs
jne
inc
add
stos
int3
stc
bound
jo
adc
incl
test
mov
movsl
add
push
add
sub
pop
shll
rcr
or
add
push
push
add
sub
cmpsb
enter
iret
sbb
movsb
scas
jp
int
loop
inc
add
cmpl
adc
dec
push
pop
mov
sbb
ds
and
imul
hlt
or
aam
test
dec
xor
pop
in
mov
jecxz
sub
jne
les
mov
movsb
jo
mov
lods
adc
movb
jne,pt
add
inc
add
ficoml
add
sub
pop
je
add
sarb
sub
xlat
push
scas
inc
sbb
jb
push
stc
mov
fs
add
mov
sahf
sub
mov
and
nop
mov
addb
andl
push
int
push
add
shr
pop
xchg
cmpsl
push
arpl
and
xchg
aaa
cmpsl
xchg
cmp
push
in
add
bound
xchg
repz
nop
dec
das
repz
mov
add
clc
push
fwait
mov
cli
push
add
pop
xor
mov
aad
push
addr16
scas
add
cmpsl
test
jle
sbbl
iret
pop
bound
push
pop
leave
sub
adc
std
ja
xchg
pop
jb
fwait
adc
jmp
add
xchg
mov
inc
add
mov
shll
mov
nop
inc
add
lret
movsb
mov
in
sub
jp
or
and
add
or
lahf
loop
add
sarl
xchg
cmp
xor
or
mov
js
out
out
xor
aas
lea
out
popf
push
push
aaa
push
addb
cmp
mov
in
and
je
add
shr
pop
adc
and
icebp
inc
xor
fdivp
scas
mov
sbb
push
push
add
add
lcall
and
mov
lret
arpl
pop
inc
add
xchg
icebp
fdivs
mov
pushf
sbb
xor
xor
ficompl
add
or
scas
lret
leave
jno
addr16
mov
test
nop
out
data16
insb
dec
mov
out
cmc
ret
xchg
adc
fsub
out
dec
xchg
insb
push
insb
arpl
les
inc
add
mov
xor
jl
das
inc
add
and
out
cli
push
hlt
mov
out
jbe
sbb
lret
sbb
pop
movsl
int3
push
add
sbb
out
popf
or
daa
shrb
clc
cmpsb
adc
cwtl
inc
aam
fists
push
jno
test
lret
in
movsb
imul
dec
nop
jnp
mov
movsb
lock
push
cmp
aas
pop
divl
sub
iret
std
push
enter
clc
xchg
int3
cmpsb
xor
addb
popf
push
xchg
xchg
lcall
lods
cmp
cs
mov
cmpsl
push
add
pop
dec
repnz
xchg
mov
lcall
addb
push
mov
movb
movsl
loopne
pushf
scas
pop
ljmp
cmpsb
ret
jp
lcall
aam
dec
fwait
inc
add
bound
cmp
cwtl
loopne
mov
add
jge
xchg
cli
nop
aam
add
addb
add
imul
xor
mov
fisubs
daa
or
pop
out
jne
xor
clc
jle
xor
std
add
mov
mov
cld
fdivrl
dec
arpl
cwtl
dec
and
push
xor
inc
je
push
mov
push
sub
mov
outsl
and
jecxz
push
std
or
imul
pushf
bound
stos
add
adc
mov
dec
jg
mov
bound
jle
js
add
sub
xchg
xchg
sbb
fbstp
inc
add
and
out
lret
xor
sub
add
daa
adc
pop
dec
xor
insl
mov
hlt
adc
jle
add
ss
xor
jae
xchg
sbbl
pusha
add
leave
leave
sub
mov
hlt
std
lock
cmp
mov
push
or
out
mov
sarl
add
addb
xchg
popf
xchg
and
dec
cmp
jae
xchg
popa
sar
addb
test
add
add
popa
loope
xchg
fcoms
ljmp
enter
add
data16
add
xor
xor
cmpsb
in
ret
sbb
test
pop
int3
fidivl
xor
jle
add
add
hlt
aas
mov
mov
addl
pop
pop
push
jno
repnz
xchg
idiv
xlat
dec
xor
xchg
or
xor
imul
adc
jb
cmp
push
repz
push
add
jecxz
stc
outsl
and
negl
cmp
ret
popf
roll
xor
int3
cwtl
dec
mov
add
mov
pop
fimull
sub
add
sub
aad
cmpsb
mov
add
add
jecxz
add
lahf
add
fcomps
fdivr
pop
and
xor
push
push
add
pushf
and
xchg
sub
adc
jb
inc
std
or
rclb
mov
std
jmp
mov
mov
push
pop
add
dec
ljmp
cs
inc
add
pop
stos
jmp
and
sub
mov
lds
popa
mov
add
sub
jp
int3
add
push
test
xor
xchg
rcll
ljmp
movsl
aad
repnz
data16
out
bound
pop
jge
push
cmp
data16
dec
inc
or
fnstcw
into
dec
sbb
adc
jle
fsubp
and
pop
xchg
pop
ja
mov
enter
pop
sarl
xchg
inc
dec
mov
stos
push
mov
sti
or
xchg
bound
inc
hlt
fldenv
and
add
mov
and
in
xchg
mov
pop
jno
loop
add
pop
dec
inc
mov
test
mov
arpl
xor
aad
lea
sub
aaa
aad
inc
pop
rcll
mov
mov
inc
add
sub
jp
aaa
in
pop
mov
ficomps
rolb
in
add
enter
rcrl
in
xor
add
jno
xchg
inc
add
add
arpl
or
hlt
cwtl
aad
lods
mov
inc
add
jno
movsb
push
and
pop
dec
rcrl
rorb
mov
jae
add
and
cwtl
pop
cmp
add
arpl
stos
cwtl
ficoms
xchg
sub
aaa
pushf
repnz
xor
jp
ret
notb
add
out
inc
mov
pop
jb
push
iret
fiadds
xor
mov
xor
adc
mov
outsb
je
inc
add
cmp
add
pop
rolb
dec
jnp
movb
pusha
add
test
add
jge
xchg
jne
add
mov
mov
pop
mov
lret
mov
lahf
aam
hlt
clc
xor
add
push
dec
mov
loopne
out
dec
xchg
inc
push
jb
lods
ret
js
xor
test
dec
lahf
jg
cmp
leave
cli
ja
mov
enter
mov
add
xchg
jnp
and
iret
aad
xor
dec
dec
or
aad
or
lcall
hlt
fs
jb
xrelease
fcompl
inc
add
leave
lods
mov
add
loope
or
mov
daa
push
cmp
mov
imul
push
movsl
repnz
and
dec
out
lods
rorl
stos
sbb
cmpsl
fsubs
sti
ljmp
or
into
je
pop
lea
test
ret
mov
fidivs
xchg
lods
mov
push
inc
add
pushf
and
inc
pop
mov
les
inc
mov
lods
popa
mov
add
add
lods
mov
lcall
add
mov
dec
fcom
idivb
mov
repz
popa
xchg
je
mov
mov
lea
flds
cmpsl
imul
punpckhdq
xor
aam
cltd
xor
icebp
xor
or
add
or
repnz
cmp
mov
cmp
fimuls
add
mov
pop
ffreep
add
mov
stc
loope
mov
dec
xchg
out
daa
stc
test
xchg
cmp
fwait
jl
sbb
das
mov
inc
wbinvd
and
jge
out
sbb
sub
jl
repnz
push
scas
xchg
imul
mov
mov
cld
add
jmp
mov
and
mov
int3
movlps
xchg
mov
out
fildll
mov
dec
inc
add
push
jmp
dec
xchg
adc
fisttps
addb
lock
add
imul
mov
sbb
lahf
jbe
and
cmc
jmp
push
addb
out
das
or
add
xor
mov
fwait
push
stos
add
push
add
loop
xor
das
out
add
in
mov
pop
int3
out
push
mov
int3
test
rolb
mov
sbb
fsubs
test
ret
loopne
pop
lcall
cli
or
mov
add
push
xchg
das
jge
fincstp
test
fwait
roll
mov
sub
lahf
and
pop
popa
sbb
ds
out
mov
pop
sub
mov
add
push
mov
aad
cmpsl
imul
add
xor
pop
push
fnsave
dec
xchg
and
and
dec
pop
lcall
enter
sar
push
cs
xor
rcll
sbbl
popa
push
fidivl
sub
add
mov
call
enter
sbb
dec
jmp
mov
mov
out
xchg
loopne
sbb
testl
inc
std
mov
in
addb
jmp
arpl
pushf
inc
popf
xchg
aad
adc
push
push
pop
addb
adc
xchg
lret
loopne
and
cmpsb
pop
out
stos
fidivrl
pop
sub
xor
add
add
push
cli
or
jno
mov
adc
nop
and
daa
out
testl
mov
xchg
scas
jg
add
dec
jae
cmp
add
imul
push
push
cmc
fcomps
bswap
rcrl
xchg
and
les
cmp
mov
add
repnz
xchg
fnsave
in
shll
addb
adc
dec
cmp
mov
add
aaa
fldt
and
pop
aam
add
clc
test
push
js
into
test
mov
add
cmp
icebp
dec
cmpsb
hlt
loop
lret
popf
jge
sarl
movsl
test
xchg
je
push
jmp
mov
ss
pop
stos
fcomip
and
lcall
in
jno
pusha
add
push
sub
cwtl
xor
mov
mov
pop
lock
mov
add
test
mov
push
sti
pop
lea
pop
push
scas
jae
fistps
adc
jae
fldcw
mov
hlt
mov
or
jne
xchg
cmc
xchg
and
push
adc
adc
mov
fidivl
push
mov
push
inc
jno
in
stos
mov
cmp
sbb
stos
lcall
add
das
mov
add
add
dec
arpl
xchg
repz
pop
pop
and
je,pt
stos
inc
add
lahf
fstps
and
push
inc
add
sahf
sub
ds
test
dec
mov
inc
add
fwait
mov
addr16
add
dec
stos
cmp
push
inc
js
int
mov
or
jns
sbb
pop
mov
add
inc
add
mov
push
mov
insb
sbb
and
lock
push
out
inc
gs
fists
push
addr16
adc
iret
pop
das
aad
repnz
mov
nop
stos
mov
add
rolb
mov
pop
les
aas
add
imul
out
movsl
mov
add
std
jg
xchg
mov
jnp
push
sbb
lret
cmp
shll
jmp
add
add
jmp
repnz
mov
xlat
push
imul
ret
push
xor
or
popf
call
ljmp
pop
stos
pushf
out
and
addb
sbb
rolb
add
insb
xchg
mov
adc
clc
mov
lret
add
repz
lds
cs
sub
in
pusha
add
push
cmp
mov
sbb
addb
add
out
mov
or
outsl
push
jle
xor
pop
imul
fsubrl
das
or
and
imul
test
std
xor
cmp
jecxz
jecxz
mov
add
add
mov
sti
jle
das
stc
cmpsb
xchg
mov
fimull
inc
add
aas
inc
test
sbb
jge
repz
mov
mov
add
mov
add
hlt
movb
cmp
mov
pushf
and
into
popf
in
xor
jb
out
push
cmp
shr
sti
ffreep
aam
ret
push
loop
push
push
rorb
add
adc
jecxz
mov
pusha
add
or
sub
or
in
cmp
clc
pop
aaa
cmp
add
mov
div
scas
jns
test
cmp
push
insb
scas
push
ja
popa
cmp
mov
test
clc
adc
rolb
test
fldl
adc
mov
adc
insl
xchg
and
in
sar
push
inc
cmp
add
dec
cmpsl
or
cltd
in
cld
adc
add
repnz
add
xchg
clc
fadds
mov
clc
mov
daa
movsl
sahf
dec
xchg
mov
cltd
lods
jbe,pt
pop
mov
in
mov
cmpsb
out
inc
add
sub
jmp
sbb
inc
push
movsl
pop
mov
and
sbb
lahf
inc
add
add
add
dec
adc
lret
aaa
mov
add
out
sub
and
jmp
das
sub
cmp
mov
mov
loopne
push
out
mov
pop
in
or
add
lods
cltd
mov
cld
adc
or
repz
push
jg
sub
mov
insb
dec
aas
mov
fwait
sbb
add
add
outsl
cs
mov
xchg
push
sub
sbb
xor
add
fidivl
add
and
es
test
lods
and
dec
xchg
test
and
mov
fisubs
repnz
outsb
cmp
aam
add
cmp
or
mov
mov
lcall
lock
enter
mov
mov
in
imul
je
fnsave
adc
clc
fmull
notl
pop
out
sti
dec
bound
fs
or
insb
and
mov
stos
enter
jb
enter
sbb
add
addb
sbb
sbb
pop
imul
aas
je
jno
push
adc
mov
inc
add
sbb
in
test
fcomip
insl
lcall
lods
loop
adc
shrb
paddb
add
jne
aad
sbb
push
rcrb
xchg
sti
push
adc
add
xor
das
mov
sub
push
jb
rclb
jge
mov
aam
lds
inc
add
add
fsubp
imul
sbb
add
bound
fcomps
inc
add
xor
ret
les
repnz
add
cltd
lahf
cmp
mov
mov
sbb
stc
test
inc
add
push
or
lret
and
sbb
dec
jecxz,pt
fucomip
push
enter
or
repnz
xor
mov
icebp
les
adc
lods
das
cmp
and
gs
clc
mov
mov
mov
inc
add
adc
xchg
rolb
xchg
mov
or
fimull
lahf
out
mov
add
xor
jecxz
push
and
jb
in
push
push
stc
int3
out
sti
jno
push
rorb
addb
cmc
xor
pop
hlt
cld
add
mov
mov
cmc
fimuls
lods
jp
add
mov
and
gs
cli
cld
mov
cmpsl
ret
mov
lods
leave
scas
insb
aas
movb
testl
adc
fsubrl
add
sbb
add
cmp
jmp
sti
addb
push
rolb
dec
xchg
inc
cmp
inc
out
bound
lods
scas
jl
loopne
add
insl
push
dec
loopne
addb
punpcklwd
in
mov
push
dec
cltd
lret
xorl
sbb
imul
je
idiv
dec
dec
adc
adc
lahf
out
das
stos
into
mov
in
movb
sti
cwtl
enter
and
dec
test
xor
sbb
inc
pop
xor
xchg
xchg
into
scas
lods
mov
and
je
popa
and
leave
adc
sub
fnsave
aam
mov
xlat
loope
movsb
mov
sub
sub
enter
test
jo
adc
add
dec
push
es
push
or
pop
jecxz
cmp
addb
loop
push
pop
cmpsl
cwtl
pop
scas
pushf
call
push
or
stos
dec
mov
sub
push
inc
pop
pop
inc
bound
in
cltd
sub
and
fistpl
scas
js
mov
hlt
xchg
mov
in
inc
add
add
fmull
mov
in
mov
cmp
add
rcrb
add
xchg
and
je
push
les
icebp
bound
xor
add
into
cltd
cmp
pop
xor
dec
xchg
add
xchg
mov
add
repz
pop
push
fcomps
adc
imul
add
dec
jb
rolb
fnstsw
add
jle
mov
jae
pushf
test
faddl
sbb
or
inc
cli
or
std
lcall
jmp
repnz
repz
iret
push
sbb
xor
fbld
jecxz
or
int
add
jbe
pop
dec
pop
xchg
decl
sub
int
push
ficoml
inc
add
xor
dec
popl
add
test
outsl
push
add
pop
fisubs
iret
and
add
out
stc
insl
rolb
repnz
arpl
add
push
sub
adc
mov
jmp
xchg
gs
push
push
dec
in
insl
cmp
adc
push
pavgw
arpl
repnz
push
mov
aad
addb
js
dec
add
ret
xchg
push
push
test
ret
jbe
xor
push
push
stos
dec
inc
lahf
add
sbb
sub
mov
shrl
xchg
sbb
adc
shll
add
faddl
loope
xchg
into
mov
in
das
pop
xor
loope
sbb
add
xchg
out
xor
movsl
shrl
mov
add
les
push
jnp
jl
out
add
insb
pop
cwtl
scas
shll
pop
lea
data16
test
cmovae
and
pushl
test
mov
data16
std
xor
dec
push
int
add
std
mov
sub
mov
int
stos
mov
dec
lods
push
add
shlb
add
es
adc
outsl
xor
add
add
jne
icebp
stos
sahf
add
pop
dec
icebp
push
sahf
inc
push
test
mov
push
xchg
mov
lret
add
imul
xor
je
lahf
mov
push
fildl
add
aaa
lahf
pop
lcall
xor
cmp
mov
dec
mov
push
shll
stos
mov
fwait
in
insb
sti
xchg
push
sub
fdivr
jecxz
push
movb
cmpsl
int3
jo
dec
add
aas
sti
loopne
or
jge
negb
xor
popa
inc
add
mov
or
adc
fcmovb
add
jmp
or
cli
lcall
arpl
sahf
mov
lcall
js
fdivrl
fildll
fimuls
jecxz
inc
add
lret
mov
push
lcall
fwait
cmp
jl
mull
fwait
cmpsb
test
push
add
ret
stc
cmc
daa
or
add
mov
jp
in
push
pop
dec
pop
mov
fistps
sub
fnsave
idivb
in
cmpsl
sbb
faddl
add
add
sbb
rolb
pop
add
nop
ljmp
stc
jg
ret
loop
adc
and
in
xor
cmp
lods
xchg
bound
popa
xlat
nop
push
stos
movsb
test
in
insb
sub
inc
add
shl
sti
test
stos
rolb
and
gs
xchg
dec
ss
add
add
loopne
mov
mov
movaps
ljmp
jecxz
pop
in
cmpsb
shrl
repnz
ja
cmpsb
out
ljmp
ljmp
cs
inc
add
add
outsl
enter
lock
mov
pop
jo
mov
stos
fidivrs
pop
xor
test
sub
push
mulb
cmpsl
bound
in
inc
push
ja
jbe
mov
cmp
movsb
fcmovne
xchg
loopne
je
repz
pop
test
fwait
and
imull
sbb
mov
movsl
ret
inc
mov
push
push
andl
add
add
int
andl
imul
lods
fs
clc
push
daa
hlt
xchg
inc
add
ljmp
test
inc
add
div
out
idivb
push
fiadds
sbb
out
inc
add
cli
out
cmp
inc
idivl
aad
mov
scas
iret
pop
mov
or
cmp
loop
push
stc
dec
popa
aas
and
in
fcmovnb
les
daa
insl
cld
push
push
jg
add
stos
or
xor
lods
sub
call
iret
pop
pop
xchg
inc
aas
add
adc
call
sub
add
das
jns
lock
call
pop
adc
fnstcw
dec
rcr
cmp
and
ds
add
and
pop
push
or
xchg
xlat
xchg
cmp
add
jecxz
and
ljmp
cwtl
jecxz
in
xchg
lock
enter
scas
pop
jo
mov
inc
add
mov
filds
add
and
xchg
or
test
cmp
aam
pop
push
mov
xor
test
mov
test
adc
mov
xchg
movsb
jp
and
or
dec
fisttpl
sti
jmp
push
ljmp
pop
pop
sbb
sbb
pop
fsubl
push
movsb
push
mov
add
xor
sarl
inc
mov
add
popf
jge
jp
gs
addb
add
mov
sub
or
pop
les
push
add
push
add
leave
mov
daa
sub
jmp
aaa
xchg
stos
mov
cld
dec
outsb
test
jno
inc
add
add
mov
pop
stos
in
pop
jle
popf
addb
fmuls
and
add
and
jnp
jb
add
add
scas
jecxz
das
out
push
fildl
mov
adc
ljmp
ret
xchg
or
jns
icebp
cmp
add
pop
cmpl
xchg
mov
or
dec
jle
cs
lret
leave
rolb
in
adc
xor
addb
or
bound
lcall
adc
rolb
cmp
inc
lods
and
xchg
pusha
add
mov
mov
pop
rcll
ja
out
add
mov
jnp
mov
add
negl
pop
test
lea
int
aad
ficoms
add
sbb
mov
or
xor
mov
adc
mov
cltd
push
je
and
stos
out
add
add
add
jnp
cltd
cltd
push
push
jmp
add
ljmp
adc
cmp
push
mull
imul
sbbl
mov
icebp
cmp
in
add
add
mov
negb
jo
sahf
jo
mov
icebp
orl
sbb
cwtl
shl
xor
mov
push
add
xor
mov
in
inc
sbb
or
mov
cmc
jne
lds
loope
inc
adc
out
adc
add
push
pusha
add
pop
int
mov
add
fwait
push
in
aad
jbe
pop
dec
movb
scas
sub
pop
pop
cmpsb
into
das
cmc
out
mov
sbb
in
jae
inc
into
cld
jae
mov
inc
add
pop
movb
sbbl
testb
ret
sbb
add
lods
mov
mov
sbbl
jl
pop
mov
sbb
inc
add
add
test
xchg
sbb
mov
pop
popf
sbb
mov
shrb
push
pop
addl
fcmovne
outsb
test
pop
lods
repz
in
adc
call
add
adc
pop
les
pop
imul
add
xor
loope
das
sub
add
in
ficompl
jbe
daa
in
popf
or
mov
jo
push
xchg
xchg
cmp
negl
mov
xchg
incb
add
or
pop
xchg
test
ljmp
push
xchg
mov
pop
add
mov
pop
aas
dec
testb
sbb
dec
xchg
mov
push
aaa
xor
out
lahf
imul
inc
add
sar
push
push
mov
pop
mov
and
es
es
add
jnp
dec
lea
in
cwtl
shlb
mov
xor
xchg
data16
mov
in
andl
lods
xor
in
mov
mov
sbb
mov
aad
or
xor
pop
sbb
mov
cwtl
lods
nop
ljmp
add
dec
xchg
xchg
jns
cltd
fs
les
push
add
inc
add
mov
int3
pop
mov
cmpsl
scas
inc
mov
inc
add
cld
or
mov
mov
pop
ss
push
cmpsl
xlat
scas
dec
xor
inc
jb
das
cld
ficoml
daa
mov
pop
fadd
xchg
xor
aas
add
add
icebp
into
aam
adc
or
mov
cli
mov
xchg
iret
std
sub
push
pop
sub
pop
jg
repnz
add
adc
jne
addb
jae
sub
shrl
add
popf
test
hlt
movsl
inc
add
add
jbe
ret
sub
icebp
gs
loopne
mov
mov
jp
loop
cmp
xchg
xchg
pop
loope
cld
lods
or
fisttpll
clc
lret
xchg
in
lods
nop
jb
dec
cmp
sub
push
outsb
mov
cmpsl
loopne
scas
cmp
add
inc
add
sub
popa
xchg
fs
fsub
pop
adc
sbb
sub
jb
addb
cmc
pop
lds
mov
lods
incl
test
fstl
ret
pop
repnz
add
aas
lahf
enter
add
push
mov
mov
jb
adc
cld
jg
ret
repz
loopne
cmp
test
adc
lods
cwtl
jp
loopne
xchg
add
mov
fisttpl
add
xchg
push
xor
sub
dec
xor
enter
inc
add
adc
add
aad
xchg
sahf
repz
jae
inc
call
cmp
mov
fs
sub
in
lret
out
neg
mulb
adc
xchg
daa
xchg
lcall
xor
call
imull
rcll
dec
out
push
pop
inc
pop
jno
mov
cli
and
sub
popa
cmpsl
push
jge
sub
xor
lock
std
mov
int3
stos
and
push
sbb
imul
out
mov
enter
and
bound
rcll
cltd
int3
das
aaa
inc
add
push
jg
lahf
add
call
mov
inc
add
rcl
push
cmpsl
mov
mov
clc
sub
hlt
xchg
rcr
xor
addb
sub
add
jmp
mov
add
andl
repnz
add
pfrsqit1
mov
test
mov
subl
xchg
addb
sti
scas
pop
sbb
push
stos
les
stc
test
fsubrl
arpl
dec
aad
das
bound
pop
stos
addr16
fmuls
pop
test
popa
sub
arpl
add
pop
sub
clc
ja
out
xor
dec
inc
add
add
add
ficompl
hlt
push
xlat
mov
xchg
addb
incb
jle
sbb
push
add
mov
and
bound
cmpsl
jo
stos
pop
aaa
mov
arpl
sub
add
mov
add
sarl
lret
js
or
repnz
xchg
out
fdivl
test
or
sbb
and
add
push
pushf
dec
jae
sub
pop
pop
cmc
mov
push
mov
mov
jecxz
lret
in
mov
xlat
loopne
jmp
in
nop
fs
jno
or
lea
out
stc
ret
xchg
out
xchg
cmp
int3
je
jle
or
rol
add
jg
add
movb
ret
pop
pop
or
fsubr
pop
clc
xor
cmp
inc
add
imul
and
jns
les
mov
add
and
stc
xchg
mov
add
in
into
clc
pusha
add
sbb
jg
aad
and
in
cmp
cld
es
lea
inc
add
adc
add
jle
add
and
sbb
je
lock
fs
cmp
push
pop
xchg
scas
mov
insl
dec
jae
cltd
and
push
add
imul
hlt
fisubs
xchg
enter
addb
lret
cmp
fadds
sub
fdivp
ja
js
scas
push
cld
pop
add
ds
sbb
ljmp
loope
pusha
add
lcall
out
or
es
inc
add
scas
adc
daa
shlb
into
clc
mov
add
test
lahf
cltd
push
lret
inc
add
jae
mov
popf
mov
mov
add
pop
hlt
mov
and
dec
sub
sub
push
mov
into
pop
push
imul
loopne
jecxz
mov
adcl
add
pop
fidivs
inc
daa
jge
inc
push
outsl
aas
push
call
insb
sarl
add
jne
or
or
add
test
add
imul
hlt
cmpsb
outsl
incb
and
lds
add
pop
fs
imul
add
mov
cmp
add
mov
inc
add
add
push
js
insl
in
and
dec
mov
sbb
cmpsb
addb
dec
sbb
sub
add
shrl
scas
jge
sbb
adc
mov
pushf
push
cmp
inc
imul
xchg
mov
jmp
sub
push
dec
int
add
dec
gs
ja
les
adc
sub
shll
addr16
add
insl
mov
adc
xchg
shl
into
ret
gs
mov
add
inc
test
adc
add
add
scas
mov
mov
pop
in
jb
nop
loopne
xor
pop
push
mov
push
in
bswap
das
cmp
xchg
scas
hlt
pusha
add
add
dec
add
mov
ds
js
in
xchg
out
sbb
adc
lock
push
xor
mov
adc
negb
xchg
jnp
inc
jecxz
cli
pop
dec
adc
xlat
jmp
movsl
mov
sub
in
je
cmp
fiadds
enter
loopne
lcall
or
ret
fwait
cmp
int3
xchg
cmp
xchg
data16
jne
add
add
testl
jle
lret
ljmp
inc
movsl
divl
or
add
add
fistl
xchg
cltd
mov
mov
add
or
scas
icebp
and
fcmovb
jp
cmp
out
mov
sub
add
ja
jge
movsb
insb
in
sub
and
add
ficompl
mov
push
push
add
add
sub
mov
addb
add
xchg
dec
push
push
xchg
sti
and
add
mov
scas
cld
ljmp
jg
ds
das
pop
ret
push
ret
mov
insb
daa
pop
jnp
add
mov
xchg
scas
cmp
ja
pop
lret
mov
mov
pop
fistpll
stc
inc
jecxz
dec
cld
outsl
nop
add
pop
repz
mov
jns
add
xchg
addl
lahf
push
mov
adc
mov
sbb
sub
mov
add
lret
enter
add
mov
imul
or
mov
imul
add
dec
add
js
and
jbe
pop
add
mov
lret
cmp
out
and
mov
cli
and
gs
or
loopne
mov
push
jb
flds
cpuid
xchg
js
insb
mov
rolb
dec
adc
mov
jge
or
out
les
mov
popf
outsb
mov
or
jae
ror
inc
in
adc
inc
add
movsb
rolb
add
and
xrelease
dec
adc
sbb
push
jp
pop
fmull
jno
mov
sbb
ficomps
add
mov
cli
in
mov
das
addb
addb
mov
cmp
sub
pusha
add
test
fnsave
pushf
inc
adc
add
jp
popa
inc
add
sahf
inc
out
cs
inc
add
push
xchg
push
or
jle
add
cmc
sbb
inc
add
push
test
xchg
lcall
mov
mov
xor
xchg
rolb
inc
add
add
in
mov
outsl
mov
lahf
push
clc
cmpsl
in
add
daa
mov
push
jo
addb
cmc
out
fsub
mov
mov
add
adc
insl
pop
mov
adc
and
mov
inc
add
or
ds
inc
cmp
addb
add
jb
imulb
and
inc
add
lods
lods
adc
jp
or
repnz
sti
fiaddl
mov
dec
jne,pt
cmp
je
add
cltd
inc
add
pop
cwtl
pop
pop
jmp
mov
jmp
adc
and
inc
mov
sbb
mov
mov
sbb
xor
and
fdivs
sahf
pop
xlat
ffreep
add
pusha
add
push
add
jecxz
dec
ret
movsb
pop
jmp
inc
add
scas
mov
loopne
loop
jmp
lcall
jo
push
mov
test
repz
popf
pop
mov
adc
mul
sub
add
xchg
inc
xor
cmp
outsb
sub
loop
adc
jge
add
scas
xchg
cmc
push
xchg
cld
mov
in
mov
add
dec
fwait
jmp
add
adc
into
test
movb
mov
pop
aaa
pop
sbb
add
add
push
out
jbe
es
pop
inc
add
int3
stc
call
sbb
stos
je
mov
mov
jp
mov
sbb
jle
xchg
mov
and
jae
stos
lahf
pop
sub
addb
test
and
mov
mov
mov
movb
icebp
push
push
jp
andl
stos
dec
popa
adc
jae
sbb
ja
popl
add
jns
inc
add
cltd
push
push
sbb
jne
rorl
cmpsl
xchg
shll
and
int
inc
add
ficoms
iret
loope
pop
das
jecxz
mov
leave
and
mov
mov
imul
cmp
in
xor
ss
dec
jmp
jae
add
stc
and
inc
add
popa
xorl
dec
pop
xchg
stc
mov
mov
cld
movsb
mov
ss
jno
xchg
mov
lret
loope
sti
ds
sub
repnz
lcall
jae
xor
icebp
mov
mov
dec
push
leave
cmpsl
mov
pop
push
pop
fstp
ljmp
fists
stc
jp
lods
rcr
sbb
int3
nop
rcll
mov
mov
test
out
addr16
out
lock
and
jle
or
addr16
add
xchg
mov
pushf
inc
jne
inc
push
mov
mov
imul
cltd
aam
add
add
xchg
out
xchg
and
xchg
std
cmp
add
inc
mov
add
add
pop
int3
pcmpgtd
lds
cmp
xchg
dec
test
jge
mov
mov
imul
cmp
add
push
lcall
xchg
push
or
add
jae
push
jno
in
mov
mov
mov
jns
mov
sbb
sbb
add
pushf
stos
inc
cmpsl
lcall
jne
sahf
nop
adc
sbb
cmc
cwtl
jge
lcall
push
pop
sub
cmp
xchg
and
jno
mov
pop
int
xor
sti
in
repz
xchg
adc
shl
pop
mov
mov
sub
mov
or
adc
movb
fstpl
inc
or
test
sub
jnp
add
je
mov
arpl
xor
pop
pop
push
mov
in
cltd
sbb
js
roll
lds
dec
cmp
and
inc
add
or
add
jl
jb
xchg
jl
stos
mov
cmp
in
adc
cld
int
dec
sbb
mov
cmp
fwait
aad
test
and
nop
inc
add
out
mov
inc
add
mov
sub
mov
icebp
mov
in
sti
fldenv
mov
add
add
xor
dec
movsl
add
fisttps
jnp
push
ljmp
dec
sub
add
sahf
faddl
fdivrl
lds
pop
jo
ljmp
add
xor
iret
fsubr
push
lcall
dec
inc
add
mov
mov
adc
push
mov
sbb
cwtl
iret
fmull
flds
xor
push
js
or
lea
inc
sub
push
sbb
add
movsl
or
fimull
stos
pop
add
jnp
test
lret
stos
cmp
add
mov
xor
mov
add
lods
gs
int
outsl
xor
cmp
jns
sahf
and
jecxz
xor
lcall
pop
jbe
pushf
bound
inc
mov
lcall
rcll
add
jns
stc
xor
mov
shll
test
and
mov
cmc
dec
pop
add
sbb
add
add
icebp
sub
add
in
jae
sahf
loopne
cmp
mov
ja
pop
xchg
jl
xlat
xchg
xchg
lcall
imul
mov
push
cld
mov
aam
int3
out
push
cmpsb
xor
cmp
xor
push
add
and
push
fwait
inc
sti
mulb
sar
mov
call
xchg
fildl
sbb
mov
std
adc
shl
pop
and
mov
add
and
shl
adc
adc
ret
pusha
add
pop
cmp
call
mov
pop
and
in
mov
mov
roll
add
ss
mov
inc
jg
out
add
in
pop
fcoml
into
fsubp
out
xor
mov
mov
jne
mov
adc
sub
nop
outsl
add
xor
add
jle
mov
out
neg
test
ljmp
and
lea
pop
xor
pop
scas
shrb
add
sub
push
mov
loopne
fnsave
and
adc
das
ja
addb
clc
mov
dec
cwtl
cmp
sub
mov
iret
decl
add
inc
lock
into
test
test
lods
inc
add
or
xchg
dec
cmp
dec
ret
fcoml
lcall
cmp
pop
and
xor
mov
hlt
jbe
negb
stos
lock
arpl
in
nop
repnz
xchg
sub
cltd
or
xchg
cmp
add
cltd
pop
addb
pop
sbb
xchg
cmp
dec
scas
jne
xorl
cmp
mov
je
arpl
mov
and
scas
daa
sub
adc
push
dec
fnsave
addb
addb
inc
add
jmp
lahf
pop
lret
adc
adc
repnz
sbb
idivl
jae
sbb
mov
sbb
adc
inc
scas
jl
jne
lret
lods
rorb
pop
mov
mov
test
daa
add
xor
out
inc
or
lret
push
and
ret
inc
add
push
cmp
add
jne
icebp
fcoml
xchg
inc
mov
rclb
sub
lcall
stos
sub
lret
add
mov
imulb
xchg
cmpl
fsubs
adc
dec
mov
popf
movb
dec
test
lahf
sub
inc
sbb
imul
mov
test
inc
mov
shlb
xchg
nop
rcrb
rolb
inc
add
add
mov
in
shl
andl
dec
cs
add
xchg
ret
xchg
mov
xchg
xor
adc
mov
inc
stc
sub
mov
mov
mov
pop
aad
cli
push
mov
ror
test
or
push
add
cltd
aam
sub
adc
adc
movb
mov
mov
enterw
cld
aad
mov
ljmp
push
scas
cs
cs
insb
pop
jne
shlb
cs
sbb
bound
sbb
jmp
inc
add
cld
arpl
pusha
add
cmp
jo
and
hlt
outsb
mov
pop
cmpsb
push
jns
gs
loopne
cld
and
jnp
and
in
xchg
xchg
add
and
in
jo
push
cmp
push
loope
cmp
imul
iret
cli
bnd
mov
dec
xchg
jae
imul
adc
bound
push
xchg
mov
das
cmp
sub
pop
add
lds
pop
enter
in
pop
in
out
xor
inc
add
mov
addl
mov
mov
fdivrl
test
mov
add
mov
movsb
rclb
or
sbb
add
test
jmp
imul
mov
sub
pop
shrl
push
cmp
cmp
fsts
sub
gs
adc
rolb
scas
int
nop
pop
mov
test
mulb
xchg
jb
pusha
add
sbb
out
adc
lods
into
incl
add
cmp
in
jnp
xor
sbb
dec
dec
mov
addb
adc
cli
xor
lock
fiadds
xchg
cld
push
and
scas
test
in
sub
mov
pop
in
xchg
fs
pop
xor
fistpl
and
lea
aas
sti
stc
jnp
cmp
mov
inc
push
negl
inc
add
mov
add
jo
lret
fcomps
sub
push
lock
call
outsl
cmp
lods
xchg
xchg
push
outsl
out
mov
lods
adc
or
outsb
mov
mov
gs
or
addb
mov
test
ljmp
add
pushf
push
push
daa
int
mov
loope
lcall
push
scas
pop
mov
es
cwtl
xchg
xorl
popf
lret
add
fcmovu
les
cmpsb
rolb
int3
shrl
or
ljmp
int
push
or
imul
jmp
repnz
scas
xchg
arpl
xchg
fsub
cltd
faddl
vmovaps
in
daa
and
fisttps
aam
mov
mov
mov
shl
stos
stos
mov
enter
add
dec
jl
add
scas
mov
test
jne
sub
cmp
add
mov
int3
std
inc
add
les
cli
xchg
cmc
xchg
fs
or
lret
sub
sbb
adc
test
ja
shrl
add
jl
outsb
mov
je
push
icebp
mov
dec
mov
fbstp
mov
orl
pop
scas
pusha
add
repnz
add
push
addb
xchg
cmp
xchg
je
jl
out
sbb
add
mov
pop
repz
inc
sbb
cmpsl
lret
mov
aaa
xor
inc
mov
adc
jno
fwait
jns
add
mov
inc
mov
ret
jmp
int
fldt
jnp
jbe
lock
hlt
imul
dec
outsl
fists
mov
cwtl
sbb
subl
lea
cmc
lcall
add
aam
loopne
sub
and
pop
into
mov
fs
test
jl
push
jae
jle
sti
jge
xchg
es
cmp
pop
inc
outsl
inc
add
add
pop
cwtl
inc
cld
add
xor
movb
add
pop
push
dec
repz
push
loop
mov
add
movb
je
sub
adc
in
jecxz
addb
adc
pop
mov
and
in
into
pop
inc
xchg
insb
fcmovbe
rolb
push
int
add
and
lret
jno
cmpsb
jbe
mov
sub
cmp
push
sbb
fsubl
jb
add
mov
add
add
add
mov
mov
pop
mov
mov
loope
lcall
aas
clc
mov
cmp
addb
xchg
mov
mov
and
clc
jmp
adc
lret
pop
pop
sbb
rolb
fmul
nop
sbb
loopne
daa
mov
jmp
stc
and
add
adc
jno
add
push
add
sahf
leave
xorl
pop
add
inc
add
test
fcompp
fiadds
jno
daa
lods
pop
roll
push
fisttpl
mov
mov
iret
mov
mov
scas
rolb
add
adc
jl
adc
pop
aaa
mov
imul
movb
imul
sysenter
adc
clc
pop
xor
mov
pushl
push
add
ficompl
cmp
xchg
hlt
test
add
jle
jne
adcl
movsb
adc
pop
cltd
sub
jae
add
aam
add
mov
sub
ljmp
addb
insl
je
add
push
ffreep
add
dec
ret
cwtl
addb
sub
dec
xchg
cmpsl
mov
inc
add
mov
sbb
xchg
dec
inc
add
jle
dec
sub
push
lock
mov
dec
fsubrl
outsl
pop
data16
call
or
lock
ret
xchg
jecxz
in
lahf
mov
mov
lcall
cmp
icebp
jnp
js
add
fisubs
movb
mov
jp
out
in
xor
push
jg
cmp
aam
mov
mov
mov
mov
stc
mov
js
add
cmp
dec
aam
out
jp
inc
add
pop
lcall
cmp
rcrl
add
push
jbe
aaa
adc
cmp
dec
nop
repz
pop
aaa
dec
mov
add
mov
sbb
cmpsl
pop
lods
jle
add
ds
push
movb
movb
mov
cmp
cmpsb
xchg
cmpsb
cli
jl
out
lds
push
sahf
into
xchg
add
xchg
add
fisubs
sub
stc
xchg
cmp
mov
pmullw
add
cmp
cwtl
test
shrl
xchg
xchg
jne
es
loope
enter
lahf
enter
sub
and
push
mov
lods
ja
adc
pop
xchg
push
pop
inc
add
jp
sub
push
sbb
jl
and
cmp
mov
movsl
sarl
jae
and
xchg
jae
scas
in
pop
pop
push
adc
inc
add
push
push
pop
stos
mov
jne
add
leave
push
xchg
sahf
inc
add
push
sub
ficoms
jmp
xchg
pop
xchg
sti
dec
add
jp
and
xchg
push
cmpsl
addb
add
or
bound
repnz
push
pop
aaa
xchg
rolb
mov
jl
sub
dec
cmpsl
idivl
imul
lahf
stos
mov
pop
lea
imul
push
stc
dec
xor
add
jle
stos
add
adc
and
in
push
push
orl
mov
push
pop
lock
or
add
push
lret
mov
xlat
adc
cmc
and
call
add
aas
ficoml
cmpsl
cmp
repz
daa
mov
or
rorl
dec
pop
mov
lahf
jnp
inc
add
clc
push
jne
arpl
xorl
or
inc
add
rsqrtps
dec
jbe
std
xorl
mov
jge
out
ret
icebp
aas
sbb
out
jbe
ret
mov
es
mov
popf
sub
dec
add
or
hlt
out
or
sti
and
stos
ds
ret
add
fstps
mov
cmc
pop
jns
dec
jge
push
test
ljmp
idivl
xchg
mov
jge
xchg
ss
lea
push
mov
push
push
cli
and
and
into
insl
pushl
ds
stc
jb
add
mov
rcrb
push
stc
jb
xor
in
or
jmp
popf
pop
icebp
std
add
add
dec
sub
stc
jb
loope
add
jge
add
jb
add
add
popa
sbb
mov
xchg
ret
mov
push
popf
push
push
mov
xchg
ret
add
icebp
add
lret
mov
push
mov
xchg
ret
add
push
mov
mov
add
nop
jmp
add
mov
jecxz
add
stc
jb
daa
aad
cld
mov
push
mov
xchg
ret
add
adc
push
les
jmp
or
lahf
fildl
xchg
ret
in
add
sbb
popa
add
mov
xchg
ret
add
std
jl
pop
stc
jb
pop
add
mov
cmp
imul
add
add
push
call
add
stc
jb
and
add
add
xchg
lcallw
adc
inc
add
add
and
rep
stc
jb
addb
add
dec
pop
push
mov
xchg
ret
add
call
mov
nop
jmp
add
or
add
add
or
clc
mov
add
jne
data16
stc
jb
add
xchg
les
pop
mov
and
inc
push
add
add
add
and
nop
jmp
jmp
push
add
test
and
inc
pop
add
add
push
push
mov
xchg
ret
add
rorb
mov
sub
add
cmp
add
add
push
mov
xchg
ret
pop
add
mov
jb
lea
and
add
add
sbb
jb
push
add
inc
inc
mov
add
inc
add
jmp
imul
mov
add
stc
jb
mov
dec
cmp
jb
add
add
jbe
jno
push
nop
jmp
inc
push
add
out
je
stc
jb
add
test
add
add
jb
jbe
or
sub
stc
jb
inc
add
cbtw
mov
stc
jb
pop
jge
add
sbb
add
stc
jb
std
icebp
add
bound
add
shl
cmp
add
nop
jmp
daa
xchg
add
cmp
xor
stc
jb
add
add
inc
inc
aad
mov
mov
stc
jb
xchg
add
add
add
push
push
push
mov
xchg
ret
add
nop
add
dec
push
push
mov
xchg
ret
in
add
add
incb
add
add
mov
xor
add
stc
jb
add
out
mov
orb
add
add
jmp
sub
xor
add
inc
cmp
xchg
or
jb
add
daa
add
add
mov
push
mov
xchg
ret
pop
add
cmp
jae
jmp
inc
call
mov
stc
jb
push
add
pop
add
sbb
loop
inc
add
pop
push
dec
xor
push
mov
xchg
ret
and
je
nop
jmp
cmp
add
and
stc
jb
xchg
add
movl
jb
pop
rolb
cmp
add
jno
xchg
xor
lock
add
add
fiadds
or
add
in
xchg
mov
rclb
leave
out
inc
add
xchg
inc
add
add
stc
jb
sar
rclb
xchg
outsb
push
stc
jb
add
adc
jbe
test
sbb
inc
add
add
add
add
imul
jb
add
add
jmp
sti
push
in
xor
stc
jb
add
lds
loope
push
nop
jmp
mov
add
mov
stc
jb
add
call
xor
inc
adc
add
sub
stc
jb
or
add
stc
jb
add
add
pop
adc
shl
stc
jb
call
add
stc
jb
add
add
add
mov
xorb
add
jmp
stc
jb
test
shlb
add
mov
jb
test
or
add
or
jle
push
mov
xchg
ret
push
jmp
test
add
stc
jb
std
add
aam
les
jl
push
mov
xchg
ret
jecxz
add
xchg
fdivr
loope
jmp
aad
push
add
cwtl
popf
add
push
stc
jb
add
jecxz
jecxz
add
stc
jb
nop
inc
daa
addr16
shl
rep
nop
jmp
add
popa
jge
jbe
add
push
stc
jb
add
cli
add
or
subb
add
jb
xor
std
add
add
or
push
mov
xchg
ret
jno
add
ss
inc
sti
ret
nop
jmp
add
add
add
push
ret
sbb
sar
cmpb
mov
pop
push
stc
jb
add
mov
cli
lea
nop
jmp
sti
add
xchg
add
les
inc
add
mov
stc
jb
add
jmp
mov
jmp
add
add
add
subb
cld
incl
or
add
add
cmp
mov
stc
jb
push
xchg
clc
cmp
push
mov
xchg
ret
jge
inc
add
add
leave
nop
jmp
nop
cwtl
add
imul
or
stc
jb
add
mov
stc
jb
jmp
jnp
add
stc
jb
push
xlat
add
std
add
add
stc
jb
pop
add
mov
imul
stc
jb
add
jge
ror
mov
imul
out
call
and
movb
add
stc
jb
in
aad
xor
stc
jb
aad
add
mov
roll
xchg
ret
in
mov
jmp
lret
adc
add
add
add
add
xorb
add
add
add
cmp
and
incl
add
add
mov
sub
test
inc
add
add
pop
mov
push
mov
xchg
ret
add
push
hlt
adc
jb
in
mov
stc
jb
add
jnp
add
nop
jmp
xchg
shll
ficoms
add
mov
jb
xor
or
out
mov
stc
jb
mov
mov
mov
xchg
ret
adc
add
lret
adc
jb
add
xor
add
push
mov
jb
mov
or
jmp
stc
jb
add
cwtl
daa
mov
mov
xor
add
add
cmp
push
push
mov
xchg
ret
push
add
insb
insb
stc
jb
inc
add
add
stos
xor
stc
jb
push
add
add
and
loopne
jb
push
nop
jmp
push
inc
add
and
push
jb
push
jb
jb
pop
add
cmp
jp
nop
jmp
jecxz
jge
add
push
add
stc
jb
addb
data16
outsb
stc
jb
add
test
add
stc
jb
rolb
fmuls
add
add
add
add
shlb
inc
fwait
add
stc
jb
inc
adc
push
add
add
stc
jb
add
mov
cwtl
add
add
nop
jmp
add
add
shll
cmp
add
jb
cmpb
gs
adc
cld
add
stc
jb
imul
push
mov
jmp
add
mov
add
inc
pop
mov
add
dec
add
jb
jno
add
sbbb
stc
jb
pop
loope
add
fbstp
rclb
daa
popf
cli
pop
xchg
add
mov
stc
jb
add
ret
add
nop
xor
pop
pushl
stc
jb
add
shll
adc
jb
add
push
push
mov
xchg
ret
add
cmp
add
add
jb
rcl
std
jmp
jb
add
and
push
add
mov
add
add
add
add
adc
push
jb
movb
pop
test
pop
stc
jb
add
add
xchg
push
mov
xchg
ret
add
repz
out
call
stc
jb
cmp
or
add
leave
mov
nop
jmp
add
add
push
add
cmp
lea
stc
jb
jge
pop
add
cli
mov
push
mov
xchg
ret
add
add
bound
dec
mov
stc
jb
popa
std
add
jno
popa
in
add
jmp
add
add
add
nop
jmp
jge
loope
add
fpatan
stos
stc
jb
inc
icebp
add
adc
add
data16
pop
ror
push
mov
xchg
ret
push
out
jge
mov
stc
jb
add
xor
div
nop
jmp
xor
add
sti
add
cli
push
stc
jb
add
push
clc
push
stc
jb
add
test
add
mov
idiv
jge
add
popa
call
mov
push
mov
xchg
ret
add
movl
push
mov
xchg
ret
add
add
pusha
stc
jb
pop
jecxz
add
pop
xchg
dec
add
stc
jb
add
adc
add
add
add
mov
into
xchg
stos
add
rep
push
mov
xchg
ret
add
push
inc
icebp
sub
mov
xchg
ret
loope
adc
jns
add
inc
inc
add
jmp
mov
stc
jb
icebp
or
add
mov
stc
jb
mov
mov
stc
jb
add
aad
sti
add
fucomip
sbb
call
add
add
add
addb
lahf
dec
nop
jmp
cmp
add
or
rolb
or
cmpb
add
fiadds
add
xlat
or
jne
stc
jb
add
push
mov
cmpb
add
cwtl
add
rorl
sub
stc
jb
add
jmp
stc
jb
add
pop
cmp
add
cld
mov
stc
jb
jbe
xchg
stos
xor
nop
jmp
jmp
hlt
fisubrs
add
add
add
test
add
stc
jb
xor
mov
add
stc
jb
std
mov
mov
stc
jb
aad
add
jbe
mov
mov
nop
jmp
test
aad
add
out
aas
mov
stc
jb
or
or
rolb
mov
stc
jb
inc
add
and
mov
mov
nop
jmp
add
add
lea
add
sbb
nop
jmp
test
add
add
jmp
xchg
lcall
stc
jb
inc
add
js
sbb
add
jb
inc
cmp
dec
mov
nop
jmp
cli
nop
xlat
mov
adc
pop
cmp
andb
add
xlat
roll
sub
jmp
inc
push
inc
add
add
rcl
loop
shl
fs
add
decl
stc
jb
mov
xchg
popa
jge
cmpsl
mov
sub
movsb
nop
jmp
add
jmp
fidivrs
jb
add
inc
add
enter
addb
add
cwtl
cwtl
rorb
push
mov
jb
addb
adc
push
add
add
jb
in
add
in
popf
lea
stc
jb
xchg
pop
inc
add
sti
add
stc
jb
call
add
pop
push
mov
xchg
ret
add
cwtl
adc
ss
jmp
cmp
and
xchg
xchg
xor
push
mov
xchg
ret
add
out
je
stc
jb
push
add
mov
stc
jb
add
add
gs
add
push
mov
xchg
ret
or
pop
dec
nop
jmp
xor
add
add
mul
mov
jb
add
in
jno
add
call
stc
jb
fiadds
mov
xchg
ret
add
add
inc
add
add
add
add
inc
mov
out
add
inc
add
add
mov
xchg
ret
test
add
pop
stc
jb
add
add
gs
rcll
out
aad
add
jge
inc
filds
notl
incl
lea
daa
push
xor
stc
jb
rolb
or
and
js
jb
add
add
outsb
lea
push
mov
xchg
ret
inc
pop
xor
add
nop
jmp
nop
adc
add
add
and
jb
pop
sti
add
in
repz
sbb
adc
punpcklbw
jb
add
add
loope
add
push
stc
jb
lea
add
add
push
mov
xchg
ret
test
add
jmp
nop
jmp
add
push
xchg
push
mov
and
nop
jmp
push
ret
rclb
add
nop
jmp
rclb
or
jae
mov
stc
jb
add
daa
add
push
mov
xchg
ret
popa
add
test
or
nop
jmp
add
xor
add
lea
out
add
stc
jb
inc
add
dec
pushl
push
mov
xchg
ret
sti
rolb
add
pop
push
push
mov
xchg
ret
add
add
stc
jb
add
jno
aad
subl
push
mov
xchg
ret
add
mov
jb
add
add
inc
add
bound
dec
cmpw
stc
jb
add
test
add
inc
add
testl
stc
jb
pop
daa
add
xchg
jge
add
nop
jmp
rolb
add
add
jmp
push
mov
xchg
ret
push
add
pop
and
stc
jb
test
cli
in
inc
daa
stos
mov
stc
jb
out
mov
std
jecxz
les
mov
decl
stc
jb
mov
adc
jmp
add
pop
add
roll
mov
jb
add
or
or
push
mov
xchg
ret
imul
push
mov
xchg
ret
ret
std
add
inc
dec
push
nop
jmp
add
add
add
adc
or
jb
nop
jmp
in
add
in
fidivs
add
mov
inc
add
jmp
jecxz
popa
stc
jb
mov
movb
bound
adc
mov
nop
jmp
add
adc
add
mov
div
inc
add
add
and
lds
lods
pop
push
mov
xchg
ret
add
jmp
cmp
jmp
imul
add
test
movzwl
stc
jb
add
xchg
addr16
dec
add
nop
jmp
inc
add
add
call
stc
jb
cld
add
add
push
stc
jb
jmp
or
popf
rolb
aad
add
add
jb
xchg
loope
add
jp
sbb
add
std
jbe
mov
push
stc
jb
add
nop
add
cwtl
add
add
stc
jb
inc
add
inc
movl
addl
fs
inc
jbe
inc
inc
add
fisttpll
add
add
add
or
jg
push
repnz
stc
jb
add
jmp
add
or
sbb
jmp
loope
jge
daa
imul
stc
jb
jbe
jmp
addr16
leave
je
stc
jb
jecxz
or
in
stc
jb
fiadds
jmp
test
or
cmpb
add
add
add
jb
daa
jbe
nop
in
mov
stc
jb
add
add
cld
adc
jb
jbe
add
cld
jmp
cmp
inc
add
add
add
push
stc
jb
add
cmp
cli
push
add
push
mov
xchg
ret
addb
add
push
mov
xchg
ret
add
jbe
addr16
out
mov
stc
jb
add
add
jmp
icebp
stc
jb
mov
mov
stc
jb
rolb
add
lea
mov
call
or
sub
ret
pop
jge
add
xchg
rolb
je
stc
jb
add
rclb
stos
ljmp
in
add
mov
inc
push
mov
xchg
ret
ret
xor
add
stc
jb
mov
or
cmp
jb
push
add
add
addb
cmc
mov
stc
jb
adc
push
push
mov
xchg
ret
and
test
xchg
scas
mov
stc
jb
push
add
cld
dec
add
stc
jb
adc
add
inc
inc
jecxz
push
push
mov
xchg
ret
inc
inc
mov
scas
mov
nop
jmp
jge
add
add
add
add
stc
jb
add
jbe
rolb
sahf
popa
stc
jb
ficoms
cmp
dec
cmp
jb
mov
add
and
jmp
add
add
add
add
mov
stc
jb
add
xor
movl
jge
nop
jmp
imul
add
ret
stc
jb
call
inc
push
movsl
mov
jb
xchg
aad
add
add
data16
lea
push
mov
xchg
ret
nop
xlat
mov
add
stc
jb
add
cli
add
inc
add
orb
pop
daa
jbe
xchg
sub
add
jmp
inc
movsl
or
addb
add
cld
add
cwtl
jmp
dec
nop
jmp
add
cli
movl
sbb
inc
push
mov
xchg
ret
add
push
xchg
stos
add
stc
jb
cmp
and
fcoml
mov
xchg
ret
daa
add
add
faddl
cmpb
incl
pop
lea
add
add
stc
jb
pop
test
xchg
popa
shlb
stc
jb
mov
add
jge
inc
and
jb
push
add
jmp
jecxz
cmpw
nop
jmp
add
add
rorl
mov
xchg
ret
push
add
add
mov
nop
jmp
add
std
add
inc
add
jo
out
jp
repz
jb
ret
cli
cmp
cwtl
jecxz
arpl
mov
xchg
ret
popa
inc
push
add
nop
jmp
add
movb
push
stc
jb
add
roll
add
test
jmp
rolb
sti
add
or
nop
jmp
fidivrs
or
push
or
add
stc
jb
sar
popa
ret
add
arpl
stc
jb
xor
add
in
mov
stc
jb
inc
add
cmp
cld
push
mov
xchg
ret
inc
jmp
jbe
sub
mov
jmp
cmp
xchg
test
cmp
insl
xor
push
mov
xchg
ret
add
push
add
outsb
repnz
incl
inc
jbe
movl
jb
add
xlat
cli
sub
andb
incl
add
add
or
mov
xchg
ret
std
add
mov
pop
stc
jb
popf
add
add
jno
xchg
cmpsb
sti
mov
push
mov
xchg
ret
add
cmp
adc
add
pop
rclb
mov
stc
jb
or
imul
jmp
add
add
nop
add
jne
stc
jb
add
pop
cltd
pop
push
mov
xchg
ret
cmp
add
inc
inc
add
add
stc
jb
std
add
or
jb
jmp
pop
rolb
xchg
rorb
add
add
stc
jb
loope
add
mov
add
nop
jmp
add
imul
jge
add
add
loope
pop
stc
jb
mov
push
sub
icebp
stc
jb
add
out
xor
jge
scas
push
push
mov
xchg
ret
add
add
div
stc
jb
inc
add
and
cmc
sub
xor
add
stc
jb
nop
add
mov
inc
add
adcb
add
mov
xchg
ret
xchg
push
jge
add
stc
jb
and
fiadds
add
mov
rep
stc
jb
add
sub
pop
cmp
mov
xchg
ret
jno
add
stc
jb
jmp
or
add
stc
jb
aad
add
add
push
mov
xchg
ret
add
test
sbbb
in
incl
cmp
adc
aad
std
sahf
sub
stc
jb
jbe
inc
add
lret
add
stc
jb
mov
std
roll
add
mov
xchg
ret
add
mov
nop
jmp
add
xchg
jmp
or
shll
mov
xchg
ret
add
push
lock
pop
push
stc
jb
add
add
stos
inc
push
mov
xchg
ret
add
add
or
test
or
add
jb
push
push
and
nop
jmp
add
add
add
push
jns
test
std
stc
jb
add
add
mov
stc
jb
sti
sarl
xchg
add
inc
scas
add
nop
jmp
add
add
test
add
nop
inc
mov
push
nop
jmp
or
add
add
adc
jmp
add
pop
rolb
subl
stc
jb
add
add
nop
jmp
add
pop
add
popf
popf
sub
stc
jb
lea
add
mov
nop
jmp
push
push
jmp
ficoms
cmp
inc
repnz
add
add
sub
je
inc
add
mov
and
fmull
mov
push
stc
jb
add
xlat
test
lods
sti
stc
jb
xchg
add
in
fildl
lock
out
fprem
push
mov
sbb
adc
jle
stc
jb
add
add
shrb
nop
or
test
jmp
rolb
pop
std
adc
cltd
add
stc
jb
call
js
inc
in
push
mov
xchg
ret
xchg
ret
sti
into
mov
stc
jb
add
mov
add
add
push
stc
jb
add
jge
add
stc
jb
add
add
cmp
or
stc
jb
add
loope
rolb
xor
push
mov
mov
xchg
ret
add
add
insl
add
stc
jb
out
daa
add
sti
mov
push
mov
xchg
ret
ret
cmp
sti
jl
out
stc
jb
xor
aad
or
das
inc
push
mov
xchg
ret
loope
xchg
add
mov
inc
hlt
inc
add
add
icebp
pushf
cmp
push
mov
xchg
ret
add
add
jle
push
mov
xchg
ret
or
add
fisubrs
or
add
xchg
pop
out
add
stc
jb
add
nop
add
add
cwtl
xor
stc
jb
add
jge
imul
stc
jb
fiadds
add
jb
add
add
outsb
mov
stc
jb
add
add
add
in
push
add
push
push
push
mov
xchg
ret
xlat
mov
add
sub
test
add
stc
jb
inc
test
pop
stc
jb
add
rcll
xor
mov
stc
jb
add
imul
adc
jb
mov
cli
test
rol
add
mov
dec
push
mov
xchg
ret
add
inc
imul
cmp
jb
add
mov
add
push
ds
stc
jb
add
daa
add
push
stc
jb
xchg
rcrl
jmp
insb
ret
push
mov
xchg
ret
daa
xlat
inc
add
test
addb
add
inc
or
mov
xchg
ret
std
add
shlb
add
add
icebp
push
add
outsb
mov
nop
jmp
add
push
push
mov
stos
push
mov
int3
cmpsl
cmp
enter
pop
push
push
mov
nop
jmp
in
popa
test
add
loop
jmp
adc
cli
add
add
stos
add
stc
jb
xor
add
inc
push
test
add
jb
aad
add
cmp
xchg
mov
roll
xchg
ret
add
pop
pop
movb
add
stc
jb
jmp
aaa
ja
and
push
stc
jb
add
jno
popf
movswl
nop
jmp
add
sbb
jb
std
add
add
xchg
ja
scas
mov
nop
jmp
inc
xor
sar
push
jnp
jae
nop
jmp
add
pop
add
mov
stc
jb
or
sti
add
icebp
push
sub
jmp
add
add
test
add
mov
push
mov
xchg
ret
add
inc
sarb
es
stc
jb
and
add
pushl
stc
jb
add
add
add
pushf
pop
stc
jb
test
add
or
jb
test
add
pop
test
nop
jmp
or
inc
adc
int3
call
nop
jmp
add
add
dec
cmp
jb
lea
aaa
rcrb
push
stc
jb
adc
add
add
add
mov
push
dec
adc
mov
xchg
ret
sar
inc
icebp
test
stc
jb
add
add
add
test
mov
push
mov
xchg
ret
add
mov
and
stc
jb
jbe
inc
add
add
stc
jb
add
inc
push
lcall
in
mov
out
add
mov
stc
jb
popa
and
lds
jb
cmp
cmp
push
inc
mov
jb
addr16
push
jb
pop
mov
fdivrp
daa
fs
push
push
mov
xchg
ret
add
add
addr16
fisubl
jb
jmp
add
cmp
mov
addb
add
into
push
push
mov
xchg
ret
inc
cmp
in
add
xchg
cs
stc
jb
xor
add
adc
jb
add
add
xor
movb
jmp
stc
jb
sarb
add
inc
add
add
jb
add
in
enter
push
inc
add
add
sarl
or
incl
rcrb
rolb
push
decl
stc
jb
xor
addr16
popa
mov
xor
pushl
add
add
in
sbb
js
nop
jmp
add
jmp
jmp
std
out
popa
nop
jmp
add
cmpb
add
imul
pop
push
mov
xchg
ret
add
inc
push
jecxz
jecxz
nop
int3
mov
stc
jb
cmp
inc
test
add
cmp
nop
jmp
add
or
in
popa
xchg
jo
nop
jmp
inc
add
add
sbbb
add
jb
add
shll
or
sar
sbbb
jmp
jmp
add
mov
stc
jb
out
call
pop
je
stc
jb
add
add
add
pop
push
mov
xchg
ret
add
add
mov
xchg
ret
add
cld
add
push
stc
jb
add
add
std
jno
add
gs
xlat
loopne
add
push
mov
xchg
ret
add
cmc
fcompl
jb
add
rolb
add
add
jne
or
jb
xor
add
add
inc
popa
adc
lcall
orb
incl
xor
add
lock
add
inc
xchg
cli
mov
stc
jb
add
add
add
mov
data16
add
add
fisubs
sbb
sub
ret
xchg
xchg
loope
add
jmp
stc
jb
add
or
stos
stc
jb
jmp
add
add
call
stc
jb
inc
lea
add
jmp
add
add
adc
add
fsubrl
incl
and
jmp
push
cmc
rcr
test
jmp
sahf
idiv
incl
or
add
add
jb
test
add
add
stc
jb
nop
addb
xchg
pop
add
call
nop
jmp
std
inc
add
aad
push
push
arpl
adc
jb
xlat
add
add
test
out
movl
stc
jb
push
jge
outsb
mov
stc
jb
jmp
pop
lret
cmp
stc
jb
std
add
inc
lock
mov
xchg
ret
inc
mov
add
mov
stc
jb
popa
jecxz
std
into
test
nop
jmp
rclb
lea
pushf
add
stc
jb
add
add
add
pusha
add
shrb
gs
inc
add
movl
call
incl
add
jecxz
mov
push
mov
xchg
ret
imul
nop
jmp
add
add
mov
xchg
lahf
rep
stc
jb
add
adc
pusha
stc
jb
pop
add
add
rep
stc
jb
adc
or
out
mov
stc
jb
xchg
add
add
sti
add
mov
stc
jb
aad
call
inc
push
mov
xchg
ret
cwtl
add
dec
push
push
mov
xchg
ret
add
add
dec
add
push
mov
xchg
ret
nop
ret
xchg
pop
out
call
stc
jb
jmp
fiadds
pusha
add
cmc
inc
add
rcll
cwtl
inc
into
add
stc
jb
adc
cmp
add
jp
incl
inc
movl
adc
jb
add
adc
cld
aad
mov
stc
jb
cld
stos
push
push
mov
xchg
ret
push
sti
or
das
pop
nop
jmp
cwtl
add
inc
adc
movb
addb
push
mov
add
add
add
int
add
or
add
jmp
call
and
add
inc
daa
jl
inc
lock
mov
xchg
ret
add
add
in
push
nop
jmp
add
mov
or
inc
add
test
stc
jb
add
inc
jbe
call
stc
jb
fiadds
add
addr16
sar
jb
inc
call
std
mov
jb
push
mov
xchg
ret
out
add
and
push
out
add
push
mov
xchg
ret
add
jne
add
add
in
filds
xchg
ret
roll
push
lcall
stc
jb
add
movsb
repz
mov
stc
jb
xchg
pop
mov
mov
stc
jb
add
add
cli
addr16
mov
xchg
ret
inc
movb
cmp
nop
jmp
xor
add
mov
imul
incl
addr16
std
test
nop
add
stos
push
mov
xchg
ret
roll
mov
mov
xchg
ret
add
in
push
adc
shr
stc
jb
add
loope
mov
dec
push
stc
jb
add
add
add
stc
jb
add
test
push
mov
xchg
ret
add
mov
jb
add
push
inc
aad
adc
mov
push
mov
xchg
ret
add
pop
pop
pusha
add
rep
and
push
mov
xchg
ret
add
jbe
call
nop
jmp
push
pop
add
fidivrs
mov
stc
jb
add
movb
mov
stc
jb
add
adc
nop
jmp
add
std
adc
sti
add
outsb
add
push
mov
xchg
ret
addb
cmp
mov
stc
jb
nop
std
add
jb
add
add
jl
nop
jmp
add
in
pop
test
inc
call
inc
add
or
movzwl
stc
jb
jno
mov
add
cmpl
nop
jmp
jcxz
add
rcrb
call
call
or
push
pop
ret
stc
jb
roll
add
add
add
push
sbb
jge
nop
jmp
test
movb
std
add
imul
stc
jb
add
xlat
add
xchg
sbb
popa
add
mov
xchg
ret
add
pop
and
push
mov
xchg
ret
add
leave
add
nop
jmp
jbe
add
push
call
fs
stc
jb
test
call
mov
stc
jb
add
inc
push
push
loope
movzwl
stc
jb
push
rol
add
stc
jb
imul
add
add
or
mov
xchg
ret
and
add
mov
nop
jmp
popf
imul
stc
jb
or
add
pushf
imul
stc
jb
cmp
add
call
mov
xchg
ret
jecxz
add
add
leave
push
mov
xchg
ret
add
add
pusha
push
mov
xchg
ret
rorl
inc
pushw
arpl
mov
stc
jb
nop
add
pop
stos
mov
stc
jb
jmp
iret
push
nop
jmp
lea
add
mov
mov
stc
jb
xchg
add
mov
lods
xor
push
mov
xchg
ret
cmp
mov
push
out
jmp
add
call
lret
and
jb
pop
mov
xor
jne
stc
jb
loope
add
or
jb
inc
add
add
add
mov
mov
stc
jb
cli
add
icebp
jge
call
add
jmp
lea
cwtl
add
jmp
stc
jb
popf
add
inc
loopne
jmp
add
lea
xlat
inc
jno
leave
les
stc
jb
add
addb
popa
inc
add
pop
stc
jb
addr16
sti
fiadds
pop
add
pop
nop
jmp
add
cli
add
add
mov
stc
jb
jno
inc
push
add
stc
jb
add
and
cs
mov
test
xchg
add
sub
add
fisttps
dec
sbb
mov
dec
xor
sub
imul
jecxz
adc
sub
fldt
or
outsb
popa
ds
cwtl
jl
push
daa
nop
hlt
xor
push
pop
cmp
add
stc
loop
rorl
sub
cs
add
insl
add
and
pop
or
push
in
mov
jmp
mov
sbb
and
insl
jne
pushf
repnz
cmpsl
cs
or
mov
cmp
imul
mov
andl
into
repnz
add
lret
and
outsl
fldt
and
lahf
push
inc
add
icebp
or
enter
stos
cs
jecxz
mov
and
dec
in
jg
fnsetpm(287
movsl
stos
out
bound
rolb
push
aas
mov
dec
inc
add
vcvttsd2si
jbe
cmp
and
icebp
roll
add
mov
cs
cmp
sub
inc
add
cli
movsb
stos
xlat
adc
aam
roll
ret
adc
xlat
stos
es
pop
out
je
mov
ljmp
out
addr16
aaa
int3
adc
loope
sub
rcrb
pop
popa
pop
xor
mov
xchg
outsb
add
in
js
and
add
sti
loopne
popf
fs
add
add
jge
lahf
loope
out
xchg
pop
sahf
push
mov
or
mov
inc
add
mov
add
outsb
imul
or
call
nop
and
add
pop
ljmp
cmp
incb
rcrl
mov
add
mov
adc
xor
into
adc
addb
jnp
bound
imul
jecxz
mov
movb
outsb
jbe
push
lock
daa
gs
int
sub
adc
cli
int
sub
mov
add
adc
movsb
and
inc
add
jecxz
mov
and
push
xlat
pushf
repz
add
loope
pushf
or
lcall
inc
out
aas
mov
adc
jle
scas
pop
sti
dec
std
push
mov
lds
inc
add
xchg
dec
addb
mov
and
addb
imul
and
movb
cmpsl
jb
jae
je
mov
sbb
push
push
test
rcr
ja
test
cltd
ret
jmp
mov
xlat
mov
mov
cmpsb
int3
cltd
aam
adc
cmp
clc
sti
sbb
ret
pusha
add
rcrl
push
pop
adcl
es
in
jecxz
cmp
inc
add
mov
add
adc
pop
ja
add
add
mov
scas
in
dec
pop
fucomi
pop
adc
xchg
pop
dec
out
add
icebp
out
sbb
ret
add
fs
pop
cmp
add
inc
pop
jne
and
push
sbb
xchg
cmp
pop
lcall
rorb
mov
push
sahf
dec
and
loopne
push
call
cmp
inc
ds
cmp
cmp
sub
inc
add
mov
pushf
nop
push
mov
add
push
jbe
add
jbe
fildll
add
or
fidivrs
cmp
cmp
sub
orl
hlt
add
lock
scas
sub
ficompl
mov
cmp
inc
mov
push
xchg
cmc
mov
add
cmc
mov
aam
adc
popa
insl
sarl
inc
add
jle
xchg
or
pop
mov
push
mov
pop
jg
xchg
adc
pop
cmp
lret
subl
mov
xchg
enter
push
xchg
dec
iret
add
mov
xchg
mov
mov
jge
sub
add
sahf
arpl
dec
sbb
enter
lock
stos
push
pop
inc
add
mov
pusha
add
mov
push
test
and
add
add
ret
mov
cmp
jp
add
roll
jl
push
cmpsb
xlat
sbb
hlt
aad
adc
lods
pop
jl
add
loopne
js
mov
mov
add
and
mov
test
call
add
mov
notl
sbb
pushf
jo
les
aad
push
mov
test
sti
mov
pop
xchg
lret
push
movsb
lock
popa
dec
pop
in
fdivr
insl
in
dec
scas
arpl
outsb
push
cld
jmp
shlb
sbb
add
ja
fwait
scas
sarl
xor
add
repnz
push
mov
add
in
ss
insb
sbb
add
iret
movsl
and
jecxz
out
mov
mov
jp
movsb
aad
push
jg
outsl
cmp
call
sahf
dec
out
nop
add
pusha
add
repnz
dec
adc
jns
sarl
addr16
push
iret
lods
jne
cmp
mov
call
ds
and
aad
xchg
cmp
jmp
out
repnz
mov
mov
add
mov
loope
xor
into
dec
dec
jb
ficoml
add
lea
jns
add
rolb
popa
mov
add
movb
imul
push
movsl
cmc
dec
fdivs
jl
pop
xchg
lea
inc
add
in
pop
addl
xchg
sub
mov
movsl
or
and
jl
loop
sbb
outsb
adc
mov
pop
imul
cltd
or
jecxz
sbb
mov
sarl
mov
jg
add
add
imul
xor
cmp
arpl
xchg
pop
inc
or
lea
stos
or
movl
jle
xchg
mov
push
cmpsl
mov
push
lret
cli
jge
addb
test
lock
cmp
leave
arpl
pop
mov
popa
sub
adc
stos
xchg
xchg
xor
cmc
jmp
adc
mov
or
xchg
arpl
inc
add
add
in
daa
setb
icebp
mov
and
cmp
push
cmp
popf
test
push
or
addb
lock
lahf
cltd
inc
add
add
push
imul
sub
add
mov
add
xchg
outsb
pop
fidivrs
cwtl
pop
in
sub
mov
int
outsb
cmpsl
mov
add
je
add
adc
xor
ret
jmp
xor
out
inc
add
std
sbb
jl
jp
ljmp
cmp
addb
sub
push
adc
sbb
sarl
sub
in
dec
and
add
mov
nop
jle
daa
inc
rcll
jne
shll
fwait
mov
stos
add
jns
lret
and
and
jae
pop
daa
and
hlt
cmpsb
popf
mov
push
roll
cld
sbb
jg
add
outsl
xchg
sbb
sbb
in
inc
add
add
repnz
lods
or
dec
cmp
pop
cmp
xchg
jno
xlat
in
inc
stc
lods
push
adc
pop
xchg
jae
add
scas
out
ret
test
cld
jnp
inc
add
mov
add
sbb
xor
mov
loopne
pop
lcall
pop
inc
add
ret
sub
push
mov
mov
xor
das
cmp
add
mov
or
test
dec
add
out
lea
xchg
jmp
sub
add
jl
fmul
mov
sbb
enter
insb
add
jg
pop
out
ljmp
add
leave
lcall
outsb
pop
jp
or
adc
add
insb
sti
out
add
dec
push
cmc
js
into
mov
pushf
jle
mov
cmp
sti
aam
add
add
scas
lods
popf
icebp
sub
add
add
bound
imul
call
mov
sti
fwait
ljmp
mov
mov
mov
pop
adc
pop
xlat
ret
mov
add
jnp
rolb
add
add
pusha
add
test
add
adc
dec
xlat
push
js
mov
mov
jnp
dec
shlb
mov
add
mov
les
imul
insb
pop
std
scas
rol
shrl
aas
sub
stc
xchg
sub
lret
orl
sbb
sbb
ds
fbstp
jns
mov
sub
lods
push
and
fisubs
inc
add
mov
add
adc
shl
jne
push
xlat
xchg
pushf
daa
push
stc
insl
shrl
add
sub
into
or
ficomps
inc
add
clc
cli
insl
mov
sub
dec
test
sbb
or
ret
sti
mov
sbb
cmp
movb
sahf
push
shrb
cmc
mov
and
cmc
rolb
inc
movsb
cmp
mov
mov
add
jb
scas
and
das
cmp
dec
imul
sbb
dec
addb
fnstsw
add
cmp
sub
popf
cld
jne
cs
es
lcall
adc
xor
cmpsl
and
negb
fdiv
sbb
or
hlt
adc
add
adc
dec
xor
bound
test
inc
add
cmp
in
les
mov
dec
or
add
jge
ljmp
mov
jge
jns
mov
int
dec
mov
inc
scas
push
gs
pop
jg
cmp
test
jbe
gs
sbb
mov
cmpsl
xor
lea
enter
mov
add
mov
sbb
sub
daa
lods
xchg
sbb
inc
movsb
jo
inc
add
jg
add
inc
pushf
cli
add
and
push
incb
sub
mov
shrl
je
dec
outsl
mov
and
adc
xchg
jmp
and
iret
loope
fidivs
sbb
mov
or
add
jg
lret
cmpsb
sub
es
ret
addb
jg
inc
cs
and
push
adc
cmc
jge
push
cmpsb
jg
sub
lahf
loop
stos
jmp
and
shrl
xchg
rcrl
jno
push
inc
add
jae
xchg
adc
add
push
sahf
add
adc
inc
add
shll
xor
sbb
scas
inc
pop
adc
aas
stc
xchg
mov
mov
mov
add
shrl
movb
jg
pop
push
mov
jno
cmpsl
pop
jp
xchg
loop
lret
sub
test
add
lcall
jecxz
jge
cmp
xchg
mov
add
push
jp
out
movsb
and
add
int3
fiaddl
fnstcw
xchg
mov
add
pop
test
daa
pop
add
mov
aad
js
daa
mov
icebp
xchg
xor
xor
jae
add
les
insb
sbb
incb
ret
jge
imul
int3
loopne
addr16
jno
shrb
jae
add
and
clc
enter
inc
add
add
popf
in
push
imul
add
nop
sub
push
lods
or
add
mov
inc
int
loope
add
pushf
je
xor
add
hlt
shll
cltd
xchg
fcompl
rorb
jo
arpl
testl
add
mov
imul
mov
insb
sub
jnp
gs
test
bound
sub
jo
shrl
xor
jno
jg
add
out
xchg
dec
into
add
sub
sub
outsl
and
adc
xchg
sahf
in
inc
add
adc
push
sarb
push
and
dec
out
sub
subl
testl
cli
les
add
add
je
cmp
jne
push
in
mov
sbbl
je
fstps
dec
xchg
test
add
mov
mov
loopne
movsb
mov
roll
mov
pop
test
and
cmpl
arpl
dec
mov
inc
bound
in
pop
push
hlt
jo
imul
test
cmp
in
les
mov
xor
push
leave
dec
pop
cmpsl
aam
fsubrs
or
imul
pop
sahf
stos
dec
fistpl
push
add
rolb
push
add
add
xor
lods
test
mov
sbb
mov
sub
xchg
add
jle
sbb
add
pushf
mov
in
stos
sbb
jg
insb
mov
leave
push
stc
jns
cmp
cld
movb
add
mov
shlb
cld
aam
add
in
inc
dec
jbe
mov
call
mov
add
addb
aaa
sub
fdivrp
out
sbb
jno
insb
fisttpll
idivb
imul
repnz
pop
jnp
push
ja
gs
out
dec
int
ja
pusha
add
cld
inc
add
sti
jnp
jae
add
fs
inc
add
add
jl
add
jnp
repnz
xor
add
add
pop
test
shrl
es
inc
push
xlat
js
lret
mov
mov
push
test
and
ja
icebp
mov
sbb
sbb
mov
adc
addb
scas
test
push
ficompl
aas
or
jnp,pn
int3
sbb
mov
mov
jl
fnstenv
inc
add
cwtl
out
lcall
fists
dec
ja
push
lahf
and
xor
xchg
test
add
lea
or
push
push
mov
xchg
out
test
fcomps
xchg
sbb
in
mov
inc
mov
les
gs
xor
pop
jb
add
jle
addb
je
mov
sub
insl
adc
jp
jns
arpl
inc
add
adc
movsb
test
cmpl
je
aam
cmp
dec
dec
ret
inc
les
test
jbe
xchg
lds
pop
dec
sub
xor
inc
and
add
mov
sub
loop
adc
out
xor
fsub
inc
add
add
jmp
push
jecxz
jge
push
xor
and
dec
and
push
and
call
add
sub
adc
ljmp
movb
pushf
decl
icebp
fwait
out
leave
and
mov
pushf
mov
mov
dec
push
sbb
pop
jp
out
iret
jno
adc
cli
sub
cmp
add
repz
arpl
jecxz
dec
cmp
mov
mov
outsl
or
lods
jae
dec
add
and
mov
and
hlt
add
mov
mov
mov
push
adc
add
testl
sbb
and
adc
mov
pushf
cmc
rolb
inc
add
add
jmp
gs
sbb
pop
add
mov
add
loope
outsb
mov
jg
add
addb
int3
das
xchg
xlat
cmp
xor
aaa
cmp
icebp
jle
add
aaa
mov
adc
ret
mov
daa
mov
scas
mov
test
data16
call
adc
scas
aas
cmp
cmc
scas
inc
add
pushf
xor
mov
call
sub
addb
add
call
push
pop
sti
inc
add
rolb
dec
pop
mov
cmp
ret
jp
jae
sbb
or
pop
stos
push
out
pop
pop
dec
in
and
inc
add
sub
out
movsl
jmp
inc
add
out
add
add
xchg
ret
outsb
sbb
out
mov
lahf
jae
shr
les
mov
rclb
je
fbstp
mov
pop
mov
add
rorb
sub
mov
pop
sub
sbb
add
dec
loope
push
scas
mov
and
leave
sub
mov
xor
idivb
stos
rorl
mov
or
push
sbb
je
dec
and
rcrl
pop
fildll
push
push
adc
fs
inc
jl
jae
fbld
jp
cmc
mov
out
pextrw
pusha
add
xor
outsb
xor
iret
mov
mov
sti
cli
ja
add
or
aad
pushl
mov
sbb
movsb
sarl
add
nop
add
roll
sahf
std
stc
inc
stc
pushf
xchg
arpl
xchg
shl
repnz
fidivs
jmp
fsubrl
int
dec
add
sahf
mov
or
mov
cltd
rorb
ret
adc
das
mov
hlt
dec
dec
xchg
out
lahf
sub
inc
add
out
sbb
fwait
sub
repnz
sbb
repz
add
fsubrp
movmskps
bound
lahf
lods
mov
jo
rorl
add
repz
xor
dec
ljmp
cmp
add
inc
push
xchg
lret
dec
loope
add
pop
cs
imul
out
add
mov
imul
add
add
pop
mov
mov
push
pop
sahf
test
imul
pop
test
dec
push
pop
daa
mov
call
push
lret
je
mov
addr16
sbb
insl
pop
and
sbb
mov
mov
fwait
push
push
mov
shll
in
mov
xor
out
outsb
xor
add
adc
jo
jbe
and
ret
daa
movsb
loope
add
aam
ds
jbe
inc
dec
xor
int3
mov
add
cld
jno
mov
cmp
and
and
adc
jbe
add
cmpsb
test
enter
in
ror
mov
adc
xor
jl
mov
sahf
lcall
aas
xor
xor
push
push
les
and
incl
mov
mov
hlt
out
les
sbb
lds
add
lret
add
ds
cli
test
mov
push
add
adc
and
fistl
pop
jb
inc
lods
cltd
in
sbb
xchg
negl
std
lret
or
pop
jle
ljmp
jmp
cmp
leave
push
test
scas
mov
push
dec
dec
imul
int
stc
dec
mov
xchg
and
add
add
pop
xchg
cmc
sbb
sbb
xor
stos
xchg
dec
roll
sub
mov
or
add
inc
pop
outsb
jp
hlt
mov
add
outsl
xor
inc
inc
addb
mov
pop
pop
ds
add
fmull
or
add
iret
cmp
sahf
mov
out
clc
lret
fistpll
jno
and
incl
test
xchg
xor
jge
loopne
test
dec
aas
daa
pop
cmpsb
or
inc
add
inc
add
jecxz
add
or
negl
add
inc
add
or
cmpsb
iret
add
addb
push
pop
add
lret
leave
dec
pop
adc
out
xchg
sub
add
mov
gs
in
xchg
xor
aad
mov
mov
aam
movsb
mov
cmp
es
jl
adc
dec
ja
rolb
das
sub
sub
incl
add
add
dec
pop
pop
mov
push
enter
icebp
adc
jp
clc
dec
cmp
aam
lea
sbb
ds
cmpsb
inc
sub
mov
mov
push
cmp
aam
je
dec
data16
lahf
out
sahf
mov
sbb
push
test
adc
or
jle
mov
sahf
dec
push
inc
inc
add
add
inc
add
xchg
push
mov
cmc
xchg
or
out
add
mov
add
dec
aam
add
xchg
jne
mov
inc
sti
push
lret
lretw
stos
leave
xchg
stc
sbb
and
add
imul
sbb
out
mov
sahf
adc
in
int3
loope
cmp
test
xor
sti
insb
push
dec
add
jle
sbb
xchg
mov
mov
cmp
mov
pop
shl
inc
xlat
inc
fisubrs
dec
mov
aad
inc
popa
es
mov
sti
fiaddl
adc
test
in
les
aas
jg
loop
loop
adc
addb
sub
lods
cmp
call
sahf
sbb
and
loopne
sub
pop
mov
repnz
rolb
adc
lock
data16
sub
push
mov
mov
xor
xor
mov
and
scas
adc
pushf
les
call
stc
xchg
shll
add
inc
add
sbb
das
adc
rcl
loop
mov
pusha
add
adc
add
out
aam
or
adc
sub
xchg
shrb
sub
sub
lds
stos
adc
popa
jmp
push
or
mov
in
jmp
aam
mov
pop
lock
enter
inc
pop
sbb
loopne
sbb
ret
mov
ljmp
xchg
aad
pop
mov
negl
or
lock
movsb
jbe
fisubl
pop
std
lret
jns
mov
outsb
aaa
popa
sub
add
mov
mov
in
xchg
mov
adc
mov
cli
shrl
dec
push
push
jmp
dec
jl
mov
rcll
push
add
fmul
outsl
das
jmp
add
push
fidivl
mov
fists
loopne
pop
mov
mov
push
lea
out
sbbl
mov
push
or
add
pop
pop
cltd
pcmpgtb
out
popa
push
scas
into
inc
mov
xchg
rcl
jp
lahf
pop
mov
and
add
mov
dec
cmp
push
std
sbb
out
cmp
ss
mov
dec
sub
add
scas
xchg
inc
push
jo
mov
xlat
stos
test
inc
add
int3
gs
sub
xor
cmp
inc
add
mov
aad
jbe
in
icebp
xchg
enter
addb
sub
dec
gs
xor
sub
add
fnstcw
aad
and
jecxz
mov
mov
mov
stos
ljmp
xor
into
mov
jle
fnsave
push
xchg
mov
pop
out
arpl
dec
fidivrl
inc
add
add
bound
lahf
int3
jns
aaa
adc
adc
enter
movb
add
in
out
jg
xchg
pop
lods
dec
push
jae
shrb
rolb
es
addb
lret
add
lret
cmp
push
jge
add
or
push
into
inc
jb
inc
repz
cmc
rdtsc
popf
pusha
add
arpl
out
jns
call
aam
stos
sub
dec
mov
dec
in
out
push
addb
add
add
push
pop
mov
add
test
or
lods
imul
push
js
mov
leave
in
add
cwtl
dec
sub
cmp
test
add
sbb
add
adc
mov
adc
add
out
add
fcoml
adc
sub
aaa
icebp
std
rorl
ss
outsl
test
fdivrl
push
add
ret
inc
add
repz
or
imulb
add
fildl
add
data16
or
inc
add
icebp
jp
mov
loope
fcoms
xchg
aam
mov
popf
jns
ror
ja
sbb
and
add
sub
sbb
rcrb
data16
inc
add
add
sbb
cmp
or
xlat
pop
mov
jp
popa
iret
daa
sub
movsl
loop
imul
das
lods
push
mov
and
mov
pmuludq
imul
insl
jnp
jle
lcall
sahf
pop
or
pop
inc
in
dec
fdiv
jg
xchg
inc
add
iret
mov
bound
or
push
fwait
leave
add
and
movsb
mov
lods
inc
add
cmp
jo
jge
addb
or
cmp
mov
dec
xor
add
je
jl
outsl
mov
pop
jmp
pop
call
add
cmp
popa
fsubrs
sbb
adc
add
call
cmp
stc
lods
ja
jge
jno
mov
xchg
nop
ss
cwtl
and
inc
mov
mov
sbb
daa
sub
push
test
mov
push
fsubr
cmpsb
pop
jp
xor
inc
add
add
cmp
sub
addr16
inc
enter
mov
inc
out
xor
testl
add
pushf
sub
popa
add
lret
add
inc
mov
pop
inc
add
add
rcrb
clc
popa
pop
rcrb
mov
push
cmp
jno
mov
test
inc
xchg
aas
push
cmp
add
addb
add
adc
add
add
test
adc
mov
or
out
out
sbb
icebp
ss
jb
and
sub
add
lahf
dec
loopne
add
xor
pop
ljmp
add
std
mov
ljmp
add
sarl
lods
push
push
add
add
nop
cmpsb
dec
or
dec
movsl
je
sub
sbb
xlat
int3
jl
icebp
aad
add
cmpl
inc
add
xchg
mov
cli
jle
pushf
add
js
inc
and
clc
pop
aad
mov
and
sahf
loope
add
out
adc
cmp
pushf
cli
push
xchg
es
clc
add
xor
stos
xchg
movb
mov
push
push
sbb
testl
hlt
int
mov
dec
sub
add
sub
mov
loopne
jne
cld
rolb
or
mov
stos
push
pop
xchg
lret
ljmp
jo
sbb
add
or
jge
cmp
add
pop
incl
mov
sub
mov
punpcklwd
add
inc
adc
repnz
mov
aas
mov
adc
fs
mov
jne
psrlq
mov
sti
pop
mov
jns
mul
sub
sub
sti
xchg
cmpsb
push
movsb
xor
sub
push
mov
or
mov
adc
pop
rorl
xchg
push
pop
pop
adc
imul
add
aam
add
or
push
cmp
xor
add
sub
sbb
outsl
shl
cmc
cmc
cld
pusha
add
and
scas
xchg
sbb
jns
add
fwait
jge
data16
and
xchg
sbb
in
fcompl
test
cmp
cmp
pop
jae
add
and
ss
add
add
inc
add
cmp
mov
xor
jmp
adc
or
jnp
xchg
out
xchg
mov
jbe
xchg
sub
fcompl
repnz
and
mulb
xchg
lcall
sbb
xchg
insb
nop
dec
fdivrl
fdivrs
popa
fbstp
rcrw
add
inc
add
pop
mov
loop
les
dec
call
xchg
mov
cmp
ja
dec
mov
scas
out
addb
push
pop
into
aaa
lea
mov
add
jmp
cmpsl
jl
push
imul
call
std
inc
pop
arpl
and
test
push
or
outsb
inc
adc
stos
xor
popf
lods
lods
mov
xor
fidivl
pop
or
ficomps
clc
xchg
mov
inc
out
outsb
pop
pusha
add
cs
add
flds
imul
test
iret
sti
daa
dec
arpl
hlt
test
pusha
add
lea
sahf
and
add
add
lret
xchg
in
cmpsl
mov
mov
sub
les
mov
in
cltd
xchg
mov
pop
xor
lret
test
getsec
mov
mov
fcmovnu
fs
cmp
jp
in
pop
mov
xor
fwait
mov
mov
test
jle
dec
xchg
mov
dec
addb
xor
arpl
nop
outsb
dec
or
or
mov
scas
ret
mov
pop
imul
dec
clc
dec
loop
lahf
xchg
lahf
push
mov
sub
jge
mov
xchg
movsl
pop
add
push
or
cmp
mov
out
std
cmp
ja
add
mov
test
or
add
cmp
and
loope
in
test
cmp
sbb
minps
pop
mov
mov
add
add
movb
out
jmp
dec
lock
adc
ret
and
loopne
add
dec
jp
inc
add
lret
jno
rolb
xchg
adc
in
add
pop
or
add
aad
cmp
mov
jne
push
inc
jae
pop
add
into
icebp
test
push
sbb
jne
jb
dec
into
pop
xchg
loop
mov
sub
in
ficompl
lahf
jecxz
fnsave
add
add
add
fsubr
lods
iret
sahf
test
lea
pop
fcoml
sbb
addl
push
mov
frstor
adc
in
push
xor
fadd
cwtl
or
lret
dec
jns
add
ret
cmp
jmp
mov
push
cmp
push
jo
ficompl
rorb
mov
gs
and
das
bound
add
adc
pop
lcall
or
jb
lahf
pop
stos
pushf
into
mov
std
jmp
xchg
test
test
mov
cmp
stc
add
mov
dec
cmpsb
in
scas
mov
loope
imul
mov
inc
pop
std
add
sbb
addr16
cmp
sub
fistpll
add
cmpsb
mov
test
xor
mov
pop
sub
sub
popa
scas
jmp
sahf
mov
into
mov
cltd
shll
int3
inc
add
shlb
pushf
out
pop
loopne
fldt
add
push
out
jns
push
add
jbe
add
lock
xorl
jmp
add
add
sti
arpl
push
cltd
aas
inc
add
outsl
insl
daa
adc
sub
fbld
insl
or
xchg
cmp
mov
ja
lahf
es
cmp
xchg
xor
std
inc
or
adc
dec
cmpsb
mov
mov
test
test
cwtl
jmp
add
push
xlat
cwtl
inc
mov
cs
fsub
push
xchg
sti
cmpsb
cli
pop
jl
jmp
push
push
or
mov
add
arpl
sub
or
add
icebp
adc
cmc
sub
push
sahf
mov
jb
nop
movsl
dec
pop
lret
push
pop
pop
cwtl
push
mov
xor
add
sbb
push
add
push
mov
pop
jns
pop
es
js
roll
aam
movb
aad
and
mov
sti
cmp
inc
add
mov
mov
hlt
push
mov
push
sbb
idiv
inc
add
add
mov
gs
test
mov
mov
adc
jb
in
add
test
cwtl
and
inc
add
test
push
push
bound
sbb
icebp
ds
popf
rcrl
mov
add
outsl
or
ret
in
pop
xchg
ffree
add
mov
adc
in
out
stc
fsubl
adc
xchg
mov
xchg
and
push
mov
add
sbb
cmpsb
pop
mov
xchg
outsl
pop
fs
add
add
ljmp
sub
leave
jmp
stos
movsb
pop
xchg
pop
push
lret
pop
inc
add
add
fdivs
inc
add
div
mov
dec
rcll
fwait
movsb
addb
mov
sbb
mov
inc
add
mov
addr16
push
shr
push
add
loopne
or
cmp
add
out
cli
push
rcll
pop
in
add
adc
dec
jb
and
negb
lods
xchg
mov
ja
mov
mov
pop
js
add
mov
dec
sub
cmp
xor
imul
add
addb
sbb
lock
std
test
add
mov
les
cltd
mov
sub
push
mov
xchg
jg
addb
test
push
pop
or
mul
sbb
dec
xchg
adc
nop
sahf
push
mov
out
add
mov
lahf
pop
aam
sahf
ficoms
movsl
mov
cmc
mov
lcall
xlat
sahf
fdivs
adc
or
jge
repz
jecxz
mov
add
pushf
es
lock
or
pop
outsb
arpl
pop
push
sahf
adc
mov
add
push
jo
xor
fsubs
scas
rolb
xchg
add
add
pop
cmp
mov
shr
jns
test
mov
or
add
rcll
adc
int3
pop
std
rolb
sub
lea
in
add
dec
lcall
jmp
jg
arpl
sub
mov
or
add
push
leave
popf
xchg
xchg
cwtl
test
mov
lds
push
jmp
outsl
test
stos
inc
add
fdivrl
outsl
add
bnd
ja
cli
ss
ja
push
add
cmp
or
nop
sar
sar
mov
lret
lret
rcr
jge
add
push
test
xor
pop
ds
out
into
sub
jae
cltd
pop
pusha
add
lahf
adc
test
push
aam
out
pushf
mov
dec
xchg
es
push
xchg
lcall
xchg
insb
dec
cmp
test
sarl
sbb
pop
push
xchg
in
jmp
push
idivb
mov
add
sbb
adc
out
adc
test
push
jb
out
xor
mov
add
add
test
add
dec
mov
fwait
jnp
fcmovbe
mov
sbbl
addb
lahf
fcmovnb
add
jne
sub
jno
js
or
addb
add
push
sub
add
ljmp
fiadds
stos
and
mov
adc
lret
xlat
cmpl
sub
lahf
cmp
mov
je
sub
lcall
xor
adc
add
jmp
jno
xor
add
add
sti
shll
add
fistps
cmc
fucomi
arpl
fsubrp
repnz
loopne
jb
jle
dec
les
mov
xor
dec
push
sbb
mov
shrl
add
add
push
jno
add
jmp
imul
add
out
cmp
pushf
jp
pop
mov
mov
and
int
lock
lds
in
adc
popf
push
jnp
pop
or
push
mov
imul
int
xor
and
cmp
add
add
cltd
push
in
push
push
in
pop
aaa
xor
sbb
int
or
clc
stos
mov
outsb
mov
mov
addl
push
add
add
scas
xchg
xor
jl
fcmovnb
daa
sub
repz
adc
cmp
jmp
fmul
jecxz
mov
cld
pop
or
and
xor
popa
inc
add
fld
cmc
aaa
xchg
jmp
xor
adc
pop
movsb
xchg
clc
and
add
adc
push
add
sub
mov
xlat
ret
ret
push
out
and
int3
ds
push
mov
add
xchg
stos
cmp
and
cmpl
pop
mov
cmpsb
jb
lds
imul
cwtl
xchg
cmp
or
cmpsw
add
add
adc
mov
repnz
xor
mov
xchg
enter
in
inc
add
cmp
sbb
jnp
lods
cwtl
or
or
mov
jge
fstpt
popf
lock
adc
mov
or
bound
iret
cvtpi2ps
inc
jae
int
mov
xor
push
push
push
aas
nop
aad
add
idivl
and
add
iret
add
jmp
lret
icebp
push
test
mov
add
rorb
add
sub
mov
jo
xorl
cmpsl
into
out
jl
repnz
mov
rolb
push
shll
insb
mov
mov
add
iret
bound
xchg
aam
ret
jl
xor
in
xchg
push
xchg
cltd
icebp
inc
xor
loop
icebp
xor
fnsave
or
or
idivb
stos
xor
repnz
jae
and
jp
mull
mov
dec
aaa
cwtl
push
add
fnstcw
and
cli
push
bound
dec
mov
mov
ficomps
test
or
lret
sbb
nop
mov
and
out
cli
mov
ret
test
dec
inc
add
sbb
push
movb
cld
movb
or
rcrl
addb
cld
mov
sub
jo
test
addb
aad
pop
loop
sbb
pop
push
sbb
shlb
loopne
mov
add
es
xor
xor
sti
mov
xchg
movb
aad
repz
cwtl
movsb
pop
xchg
fbstp
sub
sbb
pop
nop
test
jecxz
and
test
insl
add
insb
loop
xchg
out
sub
sub
dec
jb
add
add
mov
add
pop
and
add
inc
jmp
mov
faddp
test
jae
inc
pusha
add
scas
jmp
and
insl
add
out
sub
mov
adc
and
jns
add
add
add
add
jnp
push
xchg
dec
xchg
rol
add
pop
outsb
aas
pop
incl
mov
fsub
imulb
das
pop
pop
ljmp
xchg
ja
scas
dec
aam
scas
fistl
mov
pop
inc
add
mov
add
ficompl
nop
sub
push
dec
cmp
push
inc
cmp
lret
loop
mov
cmp
int3
cmp
add
aad
add
out
cld
fists
add
mov
out
push
jo
lods
das
mov
push
lret
cli
mov
mov
mov
add
adc
mov
pop
dec
cli
call
les
adc
sub
fcompl
adc
push
out
arpl
rolb
ja
add
add
sahf
cltd
and
ret
sahf
ret
mov
es
bound
sub
add
mov
dec
int
pop
cli
dec
cli
loopne
push
es
outsb
cmp
test
loope
in
push
in
cmp
add
pusha
add
add
es
out
sbb
adc
pop
inc
addb
push
nop
mov
loope
mov
sahf
xchg
cmc
add
outsl
jmp
lahf
sub
xchg
adc
add
mov
fnsave
xor
push
movb
scas
sbb
out
add
call
sub
inc
add
push
or
or
lds
add
dec
sti
lods
addb
xor
mov
xchg
mov
xor
test
add
add
cmp
sarl
add
call
aas
push
sub
rolb
add
fcmovnb
add
das
mov
fwait
lcall
mov
jno
clc
xchg
jecxz
cmp
mov
testl
xchg
movsb
mov
loop
ficompl
leave
and
bound
jnp
bound
jno
push
icebp
xor
xchg
push
adc
add
stc
inc
xor
mov
popf
fnsave
cmpsl
cmp
subl
xor
inc
add
out
sahf
loope
add
add
call
push
aad
bswap
data16
movsb
sbb
and
adc
add
add
pop
popa
sub
pop
arpl
dec
mov
and
sub
add
jae
or
adc
dec
pusha
add
push
add
add
adc
and
ds
xlat
mov
nop
xchg
mov
das
pusha
add
arpl
jae
mov
repz
cmpsl
stos
insl
mov
jl
jge
iret
mov
leave
into
pop
mov
fmuls
in
lea
sbb
and
movlps
mov
add
pusha
add
mov
int
test
xchg
mov
notl
fcmove
mov
rcrl
movsb
lret
pop
pushf
inc
add
fdivrp
out
dec
pop
xchg
cmpsb
sbb
std
in
dec
sbb
addb
mov
adc
or
mov
push
das
sub
xor
add
shlb
addr16
mov
arpl
add
push
je
mull
rol
jecxz
loop
pop
out
add
loop
jbe
sbb
mov
xor
jecxz
jecxz
fsubrs
jbe
xchg
jns
rcrl
popf
adc
sbb
or
ss
and
pop
fs
je
arpl
fstpl
xor
mov
aad
lock
repnz
or
push
movb
rolb
adc
push
ja
bound
mov
fcomp
jmp
add
add
icebp
cs
xchg
or
mov
cmp
xchg
xor
add
fisubl
dec
lods
icebp
rolb
sub
jle
ss
aam
insl
dec
std
loope
in
add
inc
sub
loopne
movsl
cmp
sbb
hlt
std
lods
jp
and
clc
cwtl
mov
repz
xchg
repnz
sub
push
xchg
loop
cmp
shrb
cmpsb
fstpt
pop
movb
xchg
scas
loop
ja
and
push
ljmp
mov
jae
mov
ret
pop
pusha
add
push
add
pop
xchg
xchg
lock
sbb
add
lea
lods
lds
lahf
inc
add
filds
sbb
sub
inc
add
test
out
mov
and
add
adc
dec
ret
movb
hlt
dec
and
aad
push
push
imul
pop
fisubrl
xor
lea
jns
add
mov
imul
or
je
mov
jbe
test
sarb
pop
mov
sti
pushf
push
and
imul
xchg
mov
movb
inc
add
popa
adc
cmp
xchg
dec
or
add
xchg
pop
je
xchg
mov
push
fsubs
xlat
mov
lahf
aad
lret
sbb
sub
jns
leave
push
pusha
add
mov
jnp
mov
leave
cld
mov
fcomps
mov
enter
xchg
sbb
dec
mov
loop
test
addb
data16
mov
add
cwtl
sbb
sub
inc
add
cmp
dec
enter
cmp
mov
loopne
sbb
out
jl
lods
and
sub
in
add
mov
bound
lret
out
xor
loopne
add
cmp
pop
jl
pop
sub
and
jecxz
icebp
popa
mov
cmpsb
add
outsl
addb
jecxz
aam
pop
pop
jae
rolb
mov
add
dec
adc
leave
arpl
mov
add
inc
add
sub
loop
add
jecxz
arpl
jns
aaa
inc
add
fisttps
pop
out
add
icebp
shll
icebp
adc
jbe
insl
bound
testl
jmp
cld
jge
outsb
fbld
jmp
add
lods
popa
sbb
add
push
add
fists
push
push
mov
mov
daa
cmp
adc
dec
les
and
sbb
sub
xor
dec
fiadds
fmul
cld
xchg
cmp
in
lahf
test
ret
enter
inc
jae
and
sbb
xchg
sub
push
adc
mov
movsl
movsb
inc
add
aaa
bound
push
fisttps
sar
xor
aad
xor
mov
inc
inc
add
adc
fstl
mov
inc
add
mov
mov
or
push
inc
jbe
fadds
mov
xchg
out
into
inc
add
das
enter
insb
js
inc
sahf
in
push
cmp
outsb
mov
cmp
lds
and
lcall
push
loope
loope
add
das
scas
and
push
dec
mov
mov
les
aas
push
loope
gs
pushf
inc
inc
add
sub
lods
cltd
fwait
mov
mov
xchg
inc
movsb
mov
fsincos
mov
add
or
xor
aaa
popa
aas
jmp
add
sbb
sub
mov
dec
rorl
outsb
mov
mov
mov
jnp
sbb
jle
faddp
xchg
hlt
dec
lock
inc
call
rolb
add
fstps
add
and
dec
shlb
adc
inc
dec
fmul
mov
addb
pop
adc
es
cmpsl
inc
add
mov
adc
sbb
cmp
addb
xchg
das
xor
stc
les
add
je
push
cmp
cmp
cmc
lahf
jnp,pt
daa
or
add
aaa
dec
scas
cmp
mov
movsl
mov
xlat
stos
sahf
addb
lock
out
jle
mov
adc
inc
add
leave
test
xor
leave
lcall
js
jg
fnstenv
xchg
dec
mov
fcoms
test
sbb
xchg
xchg
adc
es
movsl
test
or
xor
sbb
movb
xchg
mov
pop
jns
add
movsl
push
sub
into
xchg
push
leave
out
popa
add
repz
sbb
inc
popf
cmpsl
int3
xchg
ja
add
sbb
sbb
rolb
out
mov
add
ljmp
stc
mov
iret
pop
loop
and
sub
push
cld
loopne
psubsw
sub
add
inc
insb
xor
adc
add
xchg
sbb
and
lret
jnp
fisttpll
aad
gs
cmp
rorl
sub
fs
repnz
jo
mov
or
bound
cwtl
jle
addb
daa
addr16
mov
xchg
je
mov
shl
cmpsl
ss
and
inc
xor
pop
cmpsb
cmp
lock
addb
dec
sbb
mov
imul
icebp
std
stos
mov
jne
rcll
push
and
iret
icebp
mov
lods
push
push
xchg
adc
mov
or
xchg
dec
push
rolb
xchg
pop
jo
push
lahf
in
inc
add
inc
add
mov
loope
out
and
cmc
sub
out
add
cmp
push
sub
mov
jns
inc
add
add
pusha
add
jnp
sbbl
mov
rcrb
xor
fs
popa
jo
fwait
and
sub
mov
add
movsl
jo
or
hlt
xlat
cmp
adc
pusha
add
jge
test
pop
test
fcomp
adc
xchg
sub
jp
cmc
addr16
insb
inc
add
add
or
mov
idivb
or
jle
rorb
or
add
testb
rolb
pop
mov
clc
subl
mov
out
call
out
gs
pop
js
xrelease
insb
xchg
lods
add
fmul
xchg
and
jne
add
sbb
and
fstpl
cmp
add
out
and
lret
hlt
movsl
jb
addb
jns
inc
push
add
adc
push
notb
das
imul
cld
or
add
stc
pop
in
push
movl
xchg
push
jbe
faddl
loopne
mov
push
dec
xor
mov
fadd
mov
enter
push
lret
push
les
add
ja
mov
popa
pop
addb
test
mov
dec
mov
dec
pop
aaa
lret
enter
std
jns
sub
lret
lret
push
fsub
adcl
stc
movsb
fcmovne
push
push
aad
and
mov
mov
xchg
mov
fldln2
pop
loopne
movb
lahf
or
call
cmpsl
mov
inc
add
jecxz
push
adc
imul
int3
in
outsl
and
pop
inc
add
stc
cmpsl
lcall
and
loope
ficomps
inc
add
sbb
leave
out
jg
add
or
dec
jne
shl
fisubrl
cmp
mov
aad
sub
dec
sub
inc
add
xchg
dec
mov
xchg
call
test
mov
das
pusha
add
jno
add
mov
shrb
test
jbe
imul
xchg
adc
jae
xor
push
add
popf
push
inc
add
repnz
and
sub
add
test
out
push
test
add
xchg
cmp
out
dec
xchg
mov
gs
shlb
add
pop
sbb
sub
dec
adc
and
mov
pop
stos
rolb
sub
js
jecxz
and
popa
fs
fimuls
or
ljmp
adc
mov
rcrl
clc
out
out
inc
add
divl
sub
or
test
sub
dec
sub
call
rcrl
scas
jnp
jae
xchg
nop
test
lahf
mov
pop
pusha
add
test
inc
cmp
test
pop
hlt
mov
dec
pop
inc
leave
ss
ficomps
xchg
jle
add
loop
ja
inc
add
lods
ss
ret
xor
loop
jg
jmp
dec
addb
in
sbb
add
sub
lret
push
xchg
loop
call
adc
xlat
sbb
pop
out
cmp
add
lret
rcrl
add
stc
stc
mov
mov
xchg
in
aad
lds
cmp
jecxz
add
je
add
ja
pushf
push
push
data16
jae
pop
lods
test
lea
loope
xchg
sbb
mov
mov
add
pop
lds
in
pop
mov
stc
push
sub
add
inc
adc
push
mov
xchg
add
pop
frstor
inc
add
jg
xlat
inc
add
mov
add
push
push
sbb
in
pop
push
out
cmpsl
xchg
fstpl
dec
pop
xor
inc
cld
push
jno
xchg
jns
nop
out
aad
push
adc
orl
mov
add
sub
lea
decl
and
push
lret
mov
shl
popa
in
mov
shrl
jnp
int
fdivr
mov
pop
shl
out
mov
add
movsl
adc
add
cmp
push
lahf
dec
mov
jmp
add
fstps
gs
in
aad
mov
mov
aam
out
and
out
scas
and
add
push
aad
add
stc
and
std
inc
add
sub
aam
in
add
dec
sahf
std
jns,pn
ljmp
jns
sub
mov
sbb
xchg
add
push
rolb
scas
popa
dec
enter
add
hlt
loopne
inc
add
add
adc
mov
dec
xchg
movl
cmp
fistpl
pop
andl
negl
outsl
jns
pop
mov
add
add
imul
js
arpl
imul
ss
mov
maxps
jbe
fwait
sbb
and
punpcklbw
mov
mov
mov
jne
pushf
movb
add
xor
imul
and
enter
jo
lods
hlt
adc
setbe
pushw
cwtl
or
sahf
idiv
mov
inc
add
scas
adc
sub
rcr
out
or
adc
xor
flds
into
sub
jns,pt
xchg
mov
sbb
mov
aad
pop
ror
adc
xchg
sbbl
dec
fst
mov
add
mov
dec
lock
sub
pop
arpl
add
cmpsb
sbb
pop
and
and
addb
add
je
mov
inc
add
adc
pop
mov
xchg
int3
push
ljmp
aad
add
push
loope
cmp
add
jno
lret
mov
sub
movb
loop
aam
xlat
dec
pop
push
mov
inc
add
cs
cmc
fiaddl
add
fcomp
sub
sahf
jg
dec
inc
cmpsb
adc
inc
addb
frstor
fsubl
xchg
add
inc
add
and
pop
aas
stos
and
jmp
pop
lock
fcmove
mov
enter
mov
cs
out
sub
test
insb
xor
xor
inc
mov
loope
pop
sbb
ds
cmp
xor
pop
in
je
aaa
push
cmpsl
rolb
ds
jo
lahf
mov
adc
fstpl
and
mov
add
ljmp
pop
out
sbb
mov
and
add
add
das
stos
stos
mov
fwait
add
lods
dec
nop
pop
dec
ds
jl
repz
test
and
add
fsubrs
jo
lea
in
xchg
or
push
jnp
sub
mov
mov
mov
mov
cwtl
pop
mov
sbb
pop
fs
xlat
fsubrp
insl
push
pop
jmp
sahf
loope
loope
out
aaa
pop
fsubrl
loopne
ds
add
xchg
mov
xchg
push
or
mov
push
push
lahf
imul
xchg
sahf
sbb
cmc
and
add
das
scas
hlt
loop
popa
pop
pop
lods
addb
cmp
inc
add
jg
add
inc
pushf
movsl
adc
iret
xlat
ja
subl
push
inc
add
in
mov
pop
into
or
stos
cs
lret
xchg
jg
out
add
or
shll
jge
pop
dec
stos
loope
dec
inc
add
and
popf
lods
and
jp
pop
cmpsl
jge
leave
fisttpl
scas
jb
ja
test
ret
mov
lret
add
fidivrs
pop
lods
cmp
mov
or
mov
add
sbb
shr
imul
xor
push
test
imul
add
add
ja
aaa
cli
sbb
stc
aam
pop
sbb
rcl
and
fisttps
stos
jb
add
fcompl
jecxz
sub
add
mov
fldl
cmc
sbb
xor
lea
add
std
mov
add
dec
stc
faddp
lahf
aas
adc
inc
sub
inc
sbb
add
adc
xor
aas
xchg
fs
daa
aaa
jns
push
or
or
xor
das
popf
ret
mov
sub
push
push
add
sbb
orl
add
js
mov
dec
rcr
lock
push
in
test
test
mov
cs
push
std
mov
push
xor
mov
fbstp
movsl
jge
jecxz
adc
out
adc
pop
adc
ljmp
mov
xor
sub
addb
push
push
add
inc
mov
add
rcrb
or
add
movb
mov
lret
in
cli
and
das
pusha
add
repz
push
and
inc
or
and
jae
sbb
cmpsb
dec
mov
enter
rolb
rolb
sub
test
ficomps
out
jae
xchg
shrl
jl
pop
scas
movb
test
xchg
push
inc
add
add
push
xchg
push
addb
mov
sti
adc
mov
popa
aaa
out
push
mov
cwtl
inc
add
add
dec
cmp
xor
in
insl
inc
add
mov
fbld
addb
sbb
notl
cmpsl
and
movsl
movb
xchg
push
push
sub
ljmp
fbstp
pop
fidivrs
push
in
or
add
add
lock
cmp
and
add
adc
test
mov
gs
xchg
lods
cltd
movsb
xchg
sarb
sahf
mov
pop
pop
jl
cwtl
add
std
mov
add
mov
es
xchg
addb
add
sbb
int3
jnp
out
pop
mov
cmp
mov
adc
add
push
add
push
pop
lea
and
lcall
jb
cmpl
xlat
test
sub
lcall
fidivrl
sub
adc
data16
fcoms
inc
mov
add
mov
adc
daa
addb
add
mov
push
push
lea
in
arpl
xchg
data16
jge
fdivs
jns
add
out
push
sahf
das
dec
out
movsb
adc
rcrl
jae
inc
add
mov
iret
dec
lret
sub
xor
incl
cmp
lcall
add
cmpsl
add
adc
inc
mov
add
xchg
insb
sbb
pop
sub
and
sarl
xor
ljmp
inc
add
sti
jle
lods
addb
lcall
movsl
insb
sub
push
sub
data16
inc
add
add
push
push
push
call
pusha
add
fcoms
add
jp
push
loop
sbb
mov
jb
rcll
js
cmpsl
out
inc
test
add
mov
les
dec
das
dec
popf
jb
mov
pop
mov
pusha
add
in
lock
rcrl
push
or
cmpsb
pop
sbb
dec
add
data16
add
movsb
into
xor
xchg
dec
jp
lret
addr16
in
sub
mov
fmul
cmp
mov
shlb
arpl
scas
mov
andl
add
fidivrl
sub
sbb
xchg
mov
pop
push
add
in
in
mov
mov
out
stc
xor
and
mov
xor
cmpsl
push
aaa
inc
cmpl
outsb
mov
mov
call
add
adc
es
add
mov
inc
add
enter
cmp
adc
nop
fisubs
scas
fstps
inc
dec
add
jno
movsb
adc
sti
jno
fucomi
inc
int
add
add
inc
add
lret
lahf
mov
cltd
sbbl
lahf
jno
pop
sub
fwait
addr16
inc
add
lret
push
add
xor
rcrb
push
lods
dec
rolb
push
add
leave
lret
dec
lret
lods
xor
xlat
add
sbb
mov
jb
mov
es
jnp
je
jmp
repnz
or
addr16
sbb
pop
jo
sarl
rorl
pusha
add
or
jno
xor
mov
sbb
xchg
cwtl
hlt
mov
enter
and
lock
in
out
add
aam
movsl
sub
inc
add
add
pop
and
sbb
ret
mov
jg
add
mov
neg
insl
das
cs
xchg
xchg
sub
add
mov
pop
xchg
mov
mov
jge
mov
sub
mov
lret
add
push
inc
adc
nop
lods
ret
xchg
mov
scas
idivl
stc
ror
in
data16
sbb
push
lea
mov
call
add
push
push
mov
cmp
idiv
popa
repnz
inc
lock
xchg
mov
xor
sub
addr16
das
sub
fistl
lcall
inc
add
stos
jp
cmp
mov
or
or
and
popf
jg
inc
mov
xchg
cmp
repnz
clc
or
outsl
test
sbb
xorl
popa
gs
xor
or
pop
int
jnp
in
and
iret
je
stc
invd
rcr
ljmp
testb
mov
xor
rol
arpl
sub
xor
mov
mov
jo
insb
xor
sti
jmp
xchg
add
out
lahf
push
scas
add
mov
mov
and
dec
pop
adc
push
cmp
add
xor
je
fsubs
rol
fdivrs
mov
mov
xlat
xor
add
lods
xchg
mov
mov
sub
add
enter
in
imul
mov
mov
adc
loope
mov
stos
xlat
inc
add
scas
arpl
dec
in
loope
or
imul
add
jmp
gs
mov
notl
or
jo
dec
adc
mov
faddl
add
lahf
loopne
mov
jnp
inc
add
call
adc
push
add
add
push
xor
inc
add
mov
push
sub
out
cwtl
xchg
lret
daa
and
movsb
add
or
sub
cmp
icebp
in
jo
mov
xchg
std
jae
addr16
pop
mov
dec
jmp
pop
mov
andl
jmp
into
or
add
cmp
ret
jecxz
push
in
push
cld
in
jne
sbb
pop
ret
mov
xor
dec
mov
pop
test
hlt
sub
enter
out
stos
inc
add
mov
xor
inc
add
popf
jg
xchg
and
jge
in
inc
ret
add
mov
fdiv
cmpps
lock
loope
pop
mov
lods
cs
xor
ss
push
lods
je
enter
add
rcrb
movb
mov
js
pop
xor
out
mov
xor
lcall
les
pop
push
pop
inc
add
aam
and
stos
jecxz
sub
and
xchg
adc
lea
imul
sub
mull
and
pop
jae
push
orl
stos
mov
fdecstp
jbe
inc
add
or
cmp
or
add
dec
lea
cmpsl
adc
mov
jl
out
jg
test
out
xor
std
incl
mov
aaa
or
inc
xlat
adc
add
out
cmp
xor
loope
mov
inc
add
add
addb
sbb
syscall
mov
nop
icebp
xchg
xchg
sub
insl
mov
aas
outsl
aas
dec
ja
out
sahf
cltd
pop
inc
add
push
popf
rdpmc
out
in
add
inc
mov
add
aas
into
cmpl
imul
in
jae
sbb
adc
jp
dec
pop
dec
pop
xor
addb
and
lcall
or
arpl
lahf
xchg
sub
call
cmc
cmp
adc
add
jmp
dec
je
xchg
push
movsb
mov
aas
jo
sub
aaa
xchg
jmp
or
add
das
add
pop
xchg
addb
add
xchg
sub
dec
xlat
std
push
pop
adc
dec
push
test
jmp
pop
xor
add
add
add
aam
pop
pop
mov
inc
add
stc
in
in
xlat
xor
out
or
xor
jg
dec
daa
fcmovnu
cmp
out
out
jnp
push
addb
cmp
fptan
ljmp
loopne
and
rolb
aas
nop
jge
jns
mov
shl
dec
mov
add
cli
cmp
popf
shrb
mov
filds
loopne
push
stos
xchg
sbb
add
rorl
dec
cmpsl
cmp
jae
dec
mov
test
add
mov
mov
sub
jb
jmp
xchg
mov
rcll
mov
addb
or
sti
sub
das
push
add
pop
sub
pop
dec
fwait
mov
dec
xor
or
fwait
les
mov
hlt
lcall
xor
xor
fwait
lcall
nop
mov
add
fwait
and
add
dec
push
jp
fldcw
sbb
fldt
fcomp
mov
mov
push
lret
inc
add
mov
xchg
mov
add
xchg
mov
fistl
jne
lcall
mov
pinsrw
or
add
push
push
movsl
jns
fdivl
dec
pop
jb
stc
push
add
inc
add
or
hlt
add
pop
in
xchg
jmp
cs
add
mov
lahf
push
jge
rolb
adc
add
mov
add
and
addb
mov
inc
mov
movb
and
sub
add
jo
or
test
pop
int
add
sub
pop
sub
add
or
data16
mov
sub
sub
pop
sub
nop
test
cmp
and
sbb
add
gs
movb
shll
in
xor
int
push
adc
xchg
loop
sbb
pop
add
popa
outsb
xchg
xchg
mov
cmpsl
pop
stos
sub
xchg
fdivp
lcall
sarl
adc
add
out
add
inc
add
sub
stos
repnz
repz
dec
in
cmp
mov
addr16
pop
adc
lcall
xchg
nop
pop
pop
jg
movb
add
repz
notl
xchg
mov
or
and
repz
and
or
call
imulb
push
pop
push
inc
test
push
jmp
jae
pop
sub
push
cmpl
lret
es
push
dec
pop
aas
js
ljmp
mov
idiv
lods
pop
lret
add
in
insl
and
adc
insl
and
stos
adc
das
in
lret
xchg
movsb
and
fists
add
pop
mov
add
rolb
xchg
or
inc
mov
adc
aad
add
sub
sbb
cli
arpl
adc
outsb
push
imul
cld
test
aam
or
or
pop
pop
add
push
and
or
jmp
push
sbb
movb
sub
fbstp
rolb
imul
sbb
push
out
sub
sub
cwtl
adcl
add
outsb
inc
pop
mov
sbb
rcr
insb
scas
js
jne
add
lret
jbe
mov
push
add
test
add
sbb
not
inc
addl
lock
add
xchg
cmpsl
aam
push
mov
pop
into
fwait
mov
stos
bound
xchg
daa
ror
popa
add
sbb
std
mov
xchg
xchg
je
dec
fwait
sbb
add
loopne
ljmp
inc
adc
movsl
push
pop
insb
movsl
inc
add
mov
adc
mov
scas
jns
ds
xor
sti
add
adc
pop
popa
or
jge
aaa
push
loopne
sahf
sbb
gs
and
mov
hlt
push
call
stos
jmp
shlb
push
xchg
leave
popa
aam
add
mov
mov
jecxz
push
add
sahf
or
fisubl
pop
ret
js
add
xchg
out
xchg
scas
out
adc
imul
dec
xor
or
or
xlat
imul
jle
nop
imul
dec
push
mov
mov
lea
dec
push
icebp
mov
das
push
mov
sahf
in
lahf
movsl
add
adc
cmp
dec
icebp
lea
mov
popf
sahf
pop
fstl
hlt
pop
sbb
add
mov
ret
in
movb
std
in
shrl
les
sbb
jbe
jo
pushf
roll
add
pusha
add
or
scas
je
outsl
loopne
mov
xchg
imulb
and
test
stos
cwtl
xor
addb
ret
fneni(8087
jl
or
outsl
xorl
std
add
movsl
mov
mov
outsl
fiadds
nop
add
xor
jecxz
xor
sarb
sbb
repz
dec
mov
shl
ret
fnstsw
xor
pop
std
and
pop
out
dec
leave
test
lods
loope
xchg
cmpsb
nop
test
mov
mov
pop
push
adc
gs
std
pop
jae
add
mov
mov
add
add
imul
adc
cld
jmp
out
movl
sbb
out
repnz
mov
add
xor
addb
test
add
dec
sub
rol
add
xchg
aam
add
clc
rcll
mov
mov
cmp
out
inc
enter
addb
cmp
repnz
jnp
inc
scas
jae
negb
mov
pop
xchg
dec
aaa
jno
jp
push
xchg
xor
add
hlt
and
add
rolb
psubsw
dec
imul
add
inc
out
add
stos
jbe
cmp
add
adc
inc
add
sbb
inc
add
roll
je
cli
mov
jne
les
out
jns
xor
adc
addb
out
sub
sub
sbb
mov
xchg
mov
add
xchg
add
or
add
inc
loop
or
jecxz
cmp
sbb
sub
fmull
movsb
dec
imul
lods
push
xor
dec
cld
int3
out
stc
mov
cmp
lcall
stos
hlt
scas
or
adcl
dec
and
dec
insb
movb
jle
arpl
add
or
add
sub
add
pop
adc
fwait
clc
insl
xor
stc
mov
stos
daa
loopne
jp
push
xchg
pop
movsl
inc
stos
in
dec
imul
lahf
fwait
popl
add
add
repz
add
loope
movsb
mov
jne
adc
ret
out
pop
and
cmp
mov
pop
fstps
sbb
pop
jmp
mov
popa
imul
enter
pop
pop
into
and
lods
loope
inc
add
test
mov
roll
aaa
test
pop
rolb
xor
scas
pop
jecxz
jecxz
sub
jo
inc
loope
cs
sbb
frstor
adc
ja
les
and
loopne
cmpsl
xchg
xchg
pop
mov
mov
enter
addb
out
test
inc
clc
push
nop
push
inc
mov
add
jg
add
lret
add
rorl
mov
add
rclb
in
fidivrs
or
mov
mov
xchg
stos
aaa
add
mov
and
inc
adc
add
add
sub
pop
imul
dec
dec
scas
test
push
roll
test
add
iret
lret
mov
and
mov
lds
loopne
stc
insb
jns
into
jle
adc
pop
or
mov
add
mov
add
xchg
mov
add
addb
insb
or
add
jns
add
shlb
pop
test
mov
lcall
xchg
jo
add
mov
push
sahf
movsb
lea
sbb
gs
fistps
add
add
pop
jns
jno
mov
jl
aad
mov
and
push
lret
fiadds
cmpsb
cmpsl
mull
stc
xchg
pop
pop
int
add
fs
cmp
mov
inc
xlat
add
jmp
mov
push
ds
mov
idivb
pop
ret
std
xchg
adc
cmc
jns
leave
movb
adc
adc
fcmovnb
add
xchg
pop
orl
push
ficompl
add
push
cmp
push
xor
push
cmpsl
mov
mov
add
xor
fiaddl
into
lcall
outsb
dec
insl
mov
movsb
jmp
icebp
je
mov
adc
popf
dec
ss
jecxz
xor
fsub
jl
pop
aas
aas
lods
cmp
and
push
xor
add
fdivs
jecxz
dec
pushf
test
std
mov
add
push
dec
cmpsl
cmpsl
xchg
push
out
dec
and
mov
jb
sbb
test
xchg
jl
bound
adcl
loop
add
insb
roll
inc
test
mov
icebp
popa
push
sub
inc
add
lret
insb
lods
daa
or
add
movsl
xchg
mov
dec
loope
imul
lds
add
inc
add
xchg
mov
fimull
and
fistpll
sub
ficoms
sbb
call
pusha
add
add
daa
xor
adc
xor
adc
popl
mov
xchg
sbb
mov
push
dec
pop
mov
push
mov
ljmp
add
jge
mull
push
xchg
dec
push
int3
or
push
movb
ja
pop
xor
xchg
fwait
lods
out
int3
addb
cmp
cmp
aas
inc
das
fmuls
in
push
fisubs
ffree
ja
inc
add
inc
add
sub
pop
push
adc
add
mov
imul
loope
fdivl
push
test
addr16
push
push
cmp
add
inc
push
lret
dec
stc
addr16
movb
aaa
push
add
xchg
ds
test
xchg
in
push
aaa
inc
hlt
and
clc
xchg
imul
cmp
pop
cmpsl
insb
jmp
repnz
add
sbb
xchg
mov
fstl
pop
pop
aad
or
mov
into
dec
mov
popf
xchg
iret
add
mov
mov
mov
lock
scas
sar
mov
lcall
bound
mov
dec
dec
int
xchg
gs
jg
cld
mov
fmuls
lret
mov
add
in
add
movb
mov
sub
add
or
mov
lock
repz
les
lcall
leave
mov
mov
lcall
imul
mov
jge
or
ds
xor
and
add
fwait
dec
notb
lret
shlb
mov
lock
add
and
dec
repz
mov
dec
out
lock
aam
cwtl
mov
enter
dec
filds
js
mov
cmp
jnp
fldcw
stos
adc
add
pop
imul
push
xchg
addr16
add
add
jno
lcall
add
and
subl
loopne
loope
and
mov
sub
rolb
cmp
bound
aaa
jl
in
dec
push
dec
bound
leave
mov
pop
sbb
lds
add
cmpsb
inc
add
movsb
adc
cmp
cli
mov
je
or
push
jbe
jl
add
add
or
cmpsl
rsm
repz
divb
fcomp
mov
pop
inc
pop
fsubr
repnz
cmp
lds
xchg
jns
pop
cmp
pop
fistpl
cmp
pop
lds
add
int3
pop
push
add
addb
add
push
push
jmp
loope
inc
pop
push
push
cmc
mov
or
movsb
mov
out
jbe
movsb
fs
shrl
mov
adc
cli
inc
add
xor
mov
rorl
std
into
gs
mov
push
inc
add
outsl
sub
mov
add
pop
hlt
stos
addb
shlb
xor
sbb
pop
sub
scas
dec
and
movb
push
add
mov
mov
jmp
cmp
mov
je
mov
ret
sub
loop
mov
mov
ja
sbb
outsb
or
cmpsl
mov
push
mov
sbb
lret
jge
mov
lahf
std
inc
add
repz
pop
push
mov
in
dec
add
inc
ret
pop
rolb
jmp
enter
scas
imul
lcall
jo,pt
pop
or
jl
mov
pop
fadd
add
add
sbb
shrb
xchg
and
cmp
add
jo
icebp
aaa
and
test
adc
xchg
add
sbb
xor
fmuls
fsubs
in
mov
add
sahf
fcmovnb
outsb
xor
cld
xor
scas
leave
sub
mov
add
das
pop
mov
mov
add
sbb
mov
or
popf
xchg
adc
add
or
jne
ss
mov
int
adc
xchg
xchg
xor
mov
add
xchg
pusha
add
push
jae
and
jns
daa
aad
mov
xchg
add
xor
fnstsw
cmp
pop
stos
icebp
addl
inc
add
sahf
in
mov
cld
ds
roll
popl
les
fistpl
lods
rcrl
call
add
jle
hlt
cltd
fcoms
or
fistps
and
cmpl
add
add
dec
jmp
add
nop
xchg
dec
push
stos
cli
mov
mov
add
test
dec
adc
jge
inc
add
pop
mov
lret
imul
or
ficoml
sub
cwtl
add
ss
sub
xchg
pop
mov
bound
jl
int
aaa
push
inc
add
test
and
nop
int
cli
jno
mov
mov
push
add
mov
add
add
into
pop
xchg
push
fwait
pop
in
pop
sub
sub
pop
mov
lods
ljmp
cmp
sub
fidivs
add
mov
xchg
xchg
xor
cmc
jl
cmp
add
xchg
and
bound
add
sti
std
repz
mul
push
add
subl
negl
push
jl
test
pop
inc
add
roll
mov
add
mov
add
jmp
push
imul
sub
jge
out
fldcw
xchg
push
mov
push
xor
xchg
jle
scas
push
cmp
add
add
jmp
lret
xchg
daa
and
inc
xchg
test
stos
xchg
sub
ja
cwtl
fwait
xchg
icebp
loope
xor
ds
fsubrs
add
mov
test
sarl
bound
sub
repz
inc
inc
outsl
nop
mov
xorl
std
push
pop
xchg
dec
data16
addb
mov
addb
lea
mov
sbb
add
jns
jb
add
jb
int3
dec
mov
movsb
mov
int3
stos
push
cli
sub
pcmpeqd
push
xchg
sbbl
add
test
dec
mov
test
pop
xchg
inc
imul
clc
insl
pop
push
repnz
cmp
jle
adc
pop
je
jecxz
mov
add
mov
push
push
xor
add
nop
out
and
out
out
jns
mov
push
pop
cmp
xor
add
jmp
push
push
mov
and
push
jnp
std
mov
add
xchg
fst
xor
in
mov
ficoms
pop
out
daa
xchg
js
in
orl
leave
add
outsb
mov
aam
jbe
out
cmp
das
dec
xlat
sub
cmp
incb
inc
and
icebp
jg
inc
add
aad
test
or
add
int3
popf
imul
mov
add
adc
jge
sbb
popa
sub
add
inc
add
leave
out
addr16
fisttps
xor
adc
jp
movsb
out
add
push
xchg
ja
pop
sbb
sti
js
xchg
out
add
lock
out
xchg
out
mov
mov
aas
mov
movb
insl
popf
mov
fiadds
bound
fmul
push
mov
mov
bound
jae
cmp
adc
add
fsubp
ror
test
fnsave
test
jg
pop
sub
add
popf
mov
dec
pop
scas
aad
mov
mov
pusha
add
mov
add
pop
shrl
or
popf
pop
out
out
fldenv
cmp
add
pop
leave
aaa
sub
jne
cmpsb
xor
enter
pop
push
out
decb
ljmp
cmp
cmp
cmp
mulb
add
stos
xchg
or
fcoml
mov
mov
ljmp
push
addr16
mov
pop
iret
jb,pn
sub
dec
cmc
push
sub
rolb
imul
push
inc
jno
add
sbb
ss
ss
push
xor
fbld
pusha
add
icebp
repnz
pusha
add
xchg
pop
pushf
mov
push
ret
jg
rolb
pusha
add
jmp
adc
mov
test
fisubl
sub
sarb
mov
in
or
pop
es
pop
or
pop
pop
insl
jb
jle
sub
test
add
xchg
mov
aas
cmpsl
and
add
int3
mov
inc
xchg
jmp
cld
rolb
arpl
das
cmp
add
aam
mov
bound
loope
out
fstps
dec
push
sbb
add
fcoml
je
std
aaa
lea
cmp
sub
cmp
pusha
add
icebp
mov
adc
inc
add
xchg
cli
xor
push
add
add
insb
jecxz
or
mov
into
xchg
pusha
add
mov
cmpl
xchg
mov
mov
fisttps
imul
or
lret
mov
lahf
mov
push
pop
mov
jl
dec
ds
sbb
in
les
and
cmp
push
cwtl
loop
fs
fwait
cmpsl
adc
loope
xlat
js
sahf
inc
pop
fisubrl
lock
cmc
int
mov
push
test
fists
pop
push
int3
cltd
sub
in
xchg
fwait
sbb
mov
add
inc
add
lcall
push
or
mov
insb
sub
lret
pusha
add
movsb
pushf
cltd
test
mov
inc
out
jl
mov
pop
xchg
test
rolb
inc
add
inc
add
orl
pop
mov
inc
xlat
add
add
cmpsl
jns
add
push
jno
out
xchg
sub
add
adc
mov
mov
adc
jns
cmp
jecxz
cmc
test
xor
push
mov
ret
push
daa
fisttpll
xchg
dec
repnz
jmp
hlt
cmp
imul
loopne
nop
scas
pop
loop
cli
or
sbb
mov
mov
mov
aas
lock
xchg
jb
shlb
lea
lret
add
or
adc
int
mov
push
add
push
add
and
shrb
leave
pop
dec
dec
shll
pop
lods
or
adc
imul
sub
rolb
es
lcall
adc
jbe
lcall
bound
push
inc
add
xchg
inc
add
cs
inc
add
jne
leave
stos
popa
movsb
dec
cmpsb
mull
idiv
xchg
add
cmp
sarb
ljmp
cmpl
or
out
add
dec
loop
add
adc
scas
xor
test
and
inc
arpl
mov
pop
cwtl
pop
jo
cmpsl
pop
dec
xchg
addr16
scas
push
pop
push
jbe
sub
mov
addr16
sub
lds
mov
lds
fwait
xor
ficoml
cmp
pop
fwait
jl
jecxz
call
sub
jge
into
jno
movsb
push
loope
sbb
mov
es
adc
or
in
adc
cmpsb
mov
mov
mov
fsubl
sbb
lds
je
dec
loope
fistl
sbb
addr16
mov
jl
jns
and
jmp
gs
mov
jnp
ss
cwtl
pop
outsl
jo
add
pop
push
and
loopne
lds
and
aaa
cmp
sahf
inc
mov
add
jmp
jns
push
xchg
xchg
pop
lock
pop
xor
pop
or
stc
cmp
adc
addb
out
xchg
mov
jecxz
or
imul
rorl
dec
clc
mov
inc
pop
addr16
sbb
jecxz
add
test
loopne
insl
pop
mov
sub
dec
sbb
ss
sbb
add
jge
lahf
out
aaa
jmp
add
mov
mov
add
jmp
outsl
sub
cmpsl
in
cmp
rorl
mov
jge
das
and
jne
inc
add
mov
fwait
xchg
xchg
pusha
add
ljmp
ja
insb
mov
mov
insb
shrl
fcoms
xchg
enter
mov
std
pop
inc
xor
jo
stos
ljmp
add
sahf
sub
push
aas
mov
insb
outsb
aam
lahf
je
inc
insb
adc
fs
xor
js
mov
gs
lods
iret
lret
stc
or
stos
fadd
add
or
into
mov
add
fcmovnb
add
addb
dec
les
in
add
add
add
or
loope
ds
out
push
push
add
ljmp
sbb
bound
mov
jl
addr16
cmpl
call
out
or
loopne
out
push
jae
fs
int3
jne
or
les
mov
sbb
lret
shrl
cltd
cli
xchg
arpl
aam
push
stos
push
mov
sbb
scas
movsb
sarl
add
flds
jno
jne
sahf
fcomps
add
popa
pop
sbb
pushf
inc
iret
jbe
mov
ljmp
bound
out
xor
inc
xchg
int
call
or
out
pop
int
adc
jl
xor
dec
mov
sahf
push
push
outsl
dec
mov
or
cs
aas
cmp
pop
movb
stos
add
mov
and
aaa
aas
shr
imul
test
aas
jns
mov
subl
std
cmpsl
sti
sbb
imul
imul
push
scas
sub
inc
add
and
mov
lret
je
bnd
and
pop
loopne
sbb
iret
push
cmp
and
add
cmp
imul
mov
mov
xchg
xor
subl
pop
xchg
lock
insb
fnstcw
es
dec
dec
mov
aad
add
insb
repz
inc
push
loopne
jb
or
xchg
imul
jbe
mov
ret
lcall
rolb
nop
iret
xchg
lea
dec
outsb
sbb
fists
adc
rolb
sbb
xchg
or
dec
icebp
xor
jg
pop
in
jg
rorb
movsb
arpl
adc
mov
aam
sbb
in
add
add
mov
fistl
pop
out
adc
or
sub
mov
xor
stc
es
imul
add
aam
push
nop
pop
mov
push
and
clc
addr16
cmp
mov
mov
ret
dec
xor
fscale
mov
jns
xchg
jae
negl
mov
and
add
mov
outsb
aam
cmp
xlat
or
jo
mov
adc
mov
sbbl
lock
cmp
mov
fsubr
jns
ror
popf
loope
jge
jb
jno
popf
sub
fadd
jge
and
cltd
incb
add
icebp
notl
jecxz
jno
or
jl
stc
repz
fsubr
or
movsb
lret
add
xchg
inc
out
cwtl
imul
je
add
jg
cmp
js
mov
and
testl
out
and
daa
pop
les
mov
add
int
adc
inc
xchg
loopne
add
add
out
insl
sbb
repnz
or
popa
arpl
inc
shlb
add
movb
cmp
and
push
ficomps
scas
xchg
fnstsw
add
mov
cwtl
int3
jl
add
js
into
fdivl
add
push
pop
enter
je
cmp
out
pop
fstpt
add
push
pop
xor
fwait
test
addb
add
int
jns
xor
rorb
mov
lock
and
ss
push
popa
pop
cli
mov
add
mov
add
add
push
icebp
pop
fs
rcr
repz
in
mov
fldenv
add
fisttpl
add
cmp
test
adc
mov
roll
sub
adc
loope
or
ret
sub
mov
pop
jp
xor
fdivp
lahf
jae
xchg
in
ret
nop
push
mov
outsb
or
or
inc
add
add
dec
jl
pop
loopne
add
lret
inc
add
lds
add
cltd
jo
mov
js
jle
ss
add
cmp
add
inc
add
or
shrb
shrl
add
or
and
and
and
outsl
clc
in
add
add
fsubrl
mov
jecxz
mov
add
jp
into
xorl
push
mov
add
mov
jg
add
cs
movb
arpl
sub
int
push
mov
adc
sub
xorl
dec
push
mov
scas
test
aad
sub
ljmp
or
sbb
mov
cli
rcll
test
xorl
inc
add
add
jmp
insb
mov
push
add
lds
mov
test
clc
sub
jge
icebp
xchg
repz
fldt
fistpl
xor
cmp
rcrb
out
cmpsb
out
push
xchg
movsl
ljmp
insb
jne
pop
pop
mov
and
sbb
es
addb
xor
fsubrs
mov
push
outsb
push
cmp
mov
or
push
add
cmp
cmpsb
xchg
movsl
imul
test
mov
cmp
leave
add
stos
pop
pop
jnp
push
xlat
shll
dec
mov
les
arpl
orl
daa
push
repnz
rcr
adc
cmc
mov
add
scas
pop
xchg
push
imul
lods
or
xor
and
pop
addb
xorl
adc
push
lods
inc
add
cs
in
fs
in
sbb
nop
mov
das
or
add
add
sbb
fsubrl
xchg
push
xchg
push
or
test
ret
sbb
add
int
stos
cmp
sbb
addr16
xchg
mov
into
lret
xchg
addb
add
lods
pop
pop
ss
pop
cmp
jbe
jns
fstpt
cwtl
scas
xor
pop
xor
pop
mov
add
dec
pushf
jecxz
sbb
mov
popf
popl
mov
adc
xchg
mov
icebp
or
push
jns
pop
xor
xchg
int3
mov
fldt
add
addb
stc
enter
dec
icebp
and
xchg
fcomp
cmp
aaa
stos
repz
jmp
mov
ds
mov
insl
mov
adc
add
add
sbb
mov
inc
add
mov
add
xchg
into
out
aam
push
mov
addr16
addb
lahf
add
cmp
xor
sti
sbb
inc
add
jnp
jno
pop
aad
cmc
stos
enter
and
add
in
fwait
cmp
xchg
add
in
and
pop
fwait
imul
loope
test
sub
cmpsl
aaa
mov
lret
jns
mov
pop
push
out
decl
sub
xor
or
mov
push
imul
dec
stc
std
inc
pop
xchg
add
int
dec
ret
mov
ljmp
outsb
int3
test
cmp
add
cmp
jne
jnp
popa
loop
movsl
fsubrl
or
push
in
cmp
lahf
add
push
jge
data16
add
cmp
mov
mov
add
in
outsb
adc
jge
mov
jne
inc
add
mov
add
addb
dec
ljmp
cmpl
xor
pop
mov
fildll
add
dec
and
out
sbb
out
mov
add
add
push
setle
imul
punpcklwd
mov
roll
add
jmp
pop
fdivp
and
jbe
bound
xor
jl
mov
insb
jbe
pop
dec
pop
sbb
lods
sbb
ds
data16
dec
pop
in
loope
pusha
add
loope
enter
rolb
and
mov
add
push
jbe
ds
and
inc
add
adc
rclb
xor
test
movsl
mov
lret
lods
mov
cmpsl
cld
mov
mov
aas
mov
dec
movsb
ficompl
icebp
mov
sub
negb
shrb
sahf
rolb
ds
add
addb
movb
add
lock
imul
jp
add
mov
cltd
movsb
out
and
addr16
xor
insl
lret
pop
es
stos
movb
sbb
mov
dec
lods
or
xor
add
cld
pop
cmp
aas
push
fcoms
push
and
add
loope
jno
pusha
add
pop
xchg
push
fcoml
insl
int3
pop
inc
and
add
insb
movb
aad
test
fisubs
push
sbb
lods
mov
addb
lahf
cli
test
xchg
mov
loop
in
mov
ljmp
add
or
aad
add
in
mov
out
les
enter
push
mov
add
inc
in
repnz
mov
dec
js
rolb
push
add
movsb
cmp
fldt
jns
out
cmp
mov
cmpsl
stos
cmp
fdivrs
mov
add
cmp
and
rolb
addb
enter
inc
inc
inc
add
test
mov
xlat
xor
mov
push
fidivrl
jge
push
outsb
push
jge
sub
inc
cmp
add
cmp
add
mov
add
jmp
cltd
repz
addb
js
push
stos
mov
aas
jmp
mov
loop
adc
outsl
mov
loope
arpl
jle
ss
cmp
in
add
push
inc
fs
in
sti
jnp
and
add
add
jo
add
lret
sub
mov
mov
setle
mov
rorb
lret
test
sbb
int3
fidivl
out
ss
lds
icebp
arpl
add
mov
mov
loopne
mov
add
rolb
adc
or
out
sub
int
pop
cmp
add
add
lea
lock
loop
cli
cmpsb
imul
xlat
mov
addb
pop
inc
mov
ret
loope
dec
mov
movl
pop
outsb
es
add
mov
xchg
mov
xor
sub
push
inc
jp
and
ss
ds
int
lret
sub
in
cmp
mov
addb
mov
or
mov
leave
sub
outsb
in
xchg
add
scas
leave
and
inc
add
gs
in
int3
test
adc
scas
int
xor
mov
daa
cmp
out
lret
loop
outsb
ds
mov
push
sbb
xchg
push
ror
pop
xchg
gs
hlt
and
insl
into
idiv
aam
add
into
jno
mov
cwtl
adc
lcall
int3
jns
lcall
jmp
xor
movsb
addb
test
jge
ret
in
shll
decl
or
test
and
and
jae
lods
inc
add
icebp
add
imul
out
push
cmc
rolb
sub
ljmp
jo
dec
pop
xchg
setne
into
cmp
dec
mov
sbb
pop
xchg
lock
jns
aaa
ss
add
cld
adc
mov
or
and
rcl
push
cmp
push
pop
adc
enter
in
pop
inc
pop
pop
jns
sarb
popf
pop
xchg
xchg
lret
jne
shr
leave
mov
mov
jp
and
inc
add
ss
add
add
push
inc
out
pushf
mov
pop
les
faddl
xor
or
add
cmp
xor
add
in
or
or
aad
cmc
cmpsb
nop
ds
in
or
add
cmp
fbstp
add
jb
lock
pop
sub
jp
and
jge
xchg
jo
rolb
sbb
add
add
pop
cltd
into
fadds
mov
and
cwtl
je
pop
lcall
sbb
and
mov
ret
inc
mov
inc
xor
and
insl
gs
fwait
dec
xor
mov
xchg
or
dec
data16
jp
movq
cmp
adc
push
pop
pop
aad
aad
xor
mov
xchg
jbe
push
push
stc
es
xlat
inc
add
sbb
mov
jnp
addb
aam
outsl
lret
stc
imul
jle
xor
cmpsl
sub
push
call
add
sahf
mov
fwait
repz
cmp
mov
mov
jo
aaa
jno
les
sub
push
add
dec
cmp
add
ljmp
xchg
stos
pop
cwtl
xlat
popf
cmp
sub
xor
sbb
loop
mov
dec
xchg
rolb
xlat
imul
dec
scas
pop
lcall
lret
pop
push
dec
and
pop
xchg
and
mov
ret
inc
mov
dec
shl
in
mov
mov
imul
cmpsb
xor
je
addb
or
test
pop
xchg
dec
ret
and
mov
add
mov
out
addb
pop
mov
add
fwait
in
out
xor
jbe
sub
and
push
loope
int3
cmp
scas
dec
psllq
push
sub
jg
dec
sbbl
vpunpcklbw
mov
add
stc
ljmp
pop
cmpsl
lods
sub
into
fldenv
bound
push
cmp
or
push
pop
loopne
mov
loope
rcrl
mov
sub
xchg
ret
insb
or
dec
mov
jp
dec
rcrl
decl
js
mov
mull
add
flds
add
jle
in
ret
jp
fstl
jno
fistl
jnp
push
out
sbb
jl
mov
jg
call
add
les
cmc
adc
add
shl
stos
scas
add
or
rolb
dec
inc
sub
stc
pop
das
pop
sub
mov
ja
pushf
mov
and
jb
add
cmpsb
jecxz
outsl
and
sbb
mov
mov
stos
dec
lods
cmpsb
inc
add
push
inc
add
add
imul
xchg
inc
outsl
pushf
outsb
sub
xlat
mov
push
adc
push
rcl
or
gs
in
xor
mov
movsb
push
fisubrl
or
add
add
push
arpl
fadds
inc
nop
jle
sahf
mov
addb
lods
sub
mov
xchg
mov
mov
add
xchg
and
pop
les
xchg
jns
popa
icebp
out
and
jmp
push
inc
add
cmpsl
cmp
out
rcrb
out
dec
push
sbb
xlat
or
idivb
dec
xlat
addb
aad
inc
add
in
and
mov
stos
pop
je
jge
imul
add
pop
mov
pusha
add
adc
pop
loopne
cmp
mov
mov
fs
add
test
hlt
jecxz
xchg
pushf
push
mov
xchg
mov
test
cs
xlat
xchg
js
pop
pushf
shlb
jmp
jne
cld
and
outsl
leave
fbld
add
inc
add
push
mov
popa
add
dec
pop
out
adc
dec
jbe
lods
dec
push
orl
push
mov
add
sub
mov
test
sti
mov
xchg
cmp
mov
ds
js
cs
xchg
pop
cld
std
add
hlt
aas
dec
clc
cs
mov
sub
push
gs
lods
mov
stos
test
je
neg
flds
adc
rclb
repnz
adc
into
cmp
mov
loop
sahf
movsb
in
and
adc
out
jge
mov
mov
xchg
mov
inc
push
pop
ljmp
fwait
pop
les
mov
pop
lods
je
xchg
pop
rolb
mul
cmp
movsl
sub
or
popa
cmpsb
movsb
aaa
mov
outsl
cmp
shll
es
std
loopne
repz
dec
push
push
or
and
dec
aas
adc
cmp
fwait
mov
into
xchg
test
or
jle
cmp
iret
xor
lcall
stos
out
cmp
xchg
cwtl
ljmp
mov
jle
jle
xchg
out
push
mov
mov
mov
or
imul
mov
mov
and
fnstcw
push
push
adc
fstpl
popf
aam
cmp
int3
mov
pop
and
inc
add
xor
push
adc
arpl
repnz
call
adc
rolb
add
inc
mov
or
sub
and
pop
movb
fimuls
lods
insl
in
addb
rolb
sbb
add
add
mov
iret
je
sbb
xor
loopne
mov
xchg
ret
cwtl
push
add
xor
mov
add
js
push
lock
jo
add
addb
pop
inc
inc
and
xchg
sub
enter
call
loope
add
add
movsl
mov
push
js
add
jns
int
jne
pop
aas
addb
jne
xchg
push
out
jbe
lahf
sub
out
lods
fs
mov
adc
cmp
inc
add
pop
sti
or
xorl
arpl
xor
in
jg
jl
sbb
inc
dec
aaa
and
or
push
mov
pop
and
lahf
xor
stos
push
jb
push
adc
out
cmpsl
out
sbb
mov
sbb
frstor
add
mov
sub
add
cmp
xchg
lcall
sbb
aaa
mov
cmc
movsb
mov
pushf
jle
add
sahf
iret
jl
mov
fsubr
xchg
imul
sbb
dec
fs
movsb
addr16
ja
in
lods
jp
jnp
aaa
imulb
add
push
sbb
pop
push
lret
sub
pop
fdivl
inc
pop
push
cld
pop
mov
movb
ljmp
pushl
jns
jge
mov
fidivrl
mov
add
int
arpl
mov
inc
cmp
les
jbe
add
in
cmc
je
fcmovb
mov
add
inc
add
fiadds
and
add
aam
gs
lods
xchg
addb
cltd
sbb
and
leave
jle
or
add
xor
lea
mov
adc
mov
lea
idiv
push
out
pop
push
out
mov
movb
popf
jp
lret
and
imul
or
and
jecxz
cs
mov
clc
xchg
inc
add
dec
aad
out
inc
fwait
xchg
adc
adc
daa
mov
add
iret
adc
lahf
repz
adc
sbb
sbb
addb
dec
sti
ret
sti
jle
xor
mov
sti
mov
fwait
mov
inc
cmp
ficomps
push
ficoml
aad
push
sbb
cmp
sbb
pop
cmpsl
das
insl
movsl
pop
push
fisttpl
pop
and
jns
and
pop
mov
stos
outsb
pop
shlb
into
inc
addr16
popa
arpl
fldcw
sbb
xor
or
ljmp
jne
imul
mov
jp,pt
push
lock
incl
push
add
add
mov
push
cmpsl
lcall
outsb
xor
cwtl
cmp
add
fldl
push
jle
sbb
mov
add
sbbl
and
add
ret
dec
out
push
pop
xor
cmp
mov
test
add
dec
mov
pop
repnz
lret
enter
jl
les
movb
adc
jl
outsl
shll
inc
cmp
mov
sbb
js
inc
add
lahf
movb
addb
mulb
sub
mov
add
lret
mov
aad
aam
cltd
push
mov
orl
jp
push
ret
neg
cmp
addb
mov
pop
xchg
or
mov
dec
xchg
and
test
xor
rolb
seta
mov
jmp
scas
addr16
xor
jb
pop
mov
popa
fisttps
lods
mov
add
jle
or
fldenv
inc
arpl
imul
stos
mov
push
add
shrl
movb
lret
add
and
sbb
mov
mov
add
addb
and
xchg
dec
and
xor
sbb
adc
push
pushf
xor
mov
rorl
dec
ljmp
es
lds
call
pop
mov
mov
xor
and
movsl
dec
sub
inc
add
push
imul
fs
cmp
loope
dec
mov
int3
mov
jmp
mov
iret
xor
jle
movsb
ret
aas
fimuls
fcoml
dec
inc
aas
mov
jmp
cmp
pop
mov
inc
aas
push
xchg
fldenv
lahf
cld
test
jb
add
fiadds
lods
fmul
lods
aas
xor
push
add
addb
cs
sub
jp
bound
fbstp
mov
sub
fs
test
mov
aaa
dec
xor
jne
add
je
push
xlat
push
push
sbb
pop
pop
pushf
popf
push
out
ja
xor
mov
mov
or
in
add
jp
mov
js
mov
add
dec
std
addb
xchg
iret
pop
push
test
and
cmpsl
out
fmull
sti
and
push
dec
out
xchg
aaa
mov
push
add
dec
lock
push
xor
add
mov
mov
imul
aas
cmp
inc
std
mov
add
add
mov
xor
or
test
mov
jg
into
adc
push
add
add
enter
or
mov
or
sub
js
or
pop
push
inc
movb
sbb
outsl
cs
fisubs
daa
mov
addb
sbb
add
insb
inc
int
sub
enter
incb
xchg
scas
aam
mov
scas
add
ss
repnz
sbb
sub
mov
lahf
movb
push
aas
insb
inc
add
xlat
dec
nop
or
mov
dec
mov
xchg
sbb
das
mov
in
push
cmp
imul
adc
stc
push
negl
mov
xchg
test
inc
ds
incl
in
pop
adc
imull
das
fsubs
or
xchg
mov
sub
test
ret
pop
mov
or
lret
push
pop
jle
fisttps
sub
popa
sub
orl
and
add
xchg
insl
adc
fstp
out
xchg
rcl
insl
testb
pop
or
xchg
cmpsl
stc
push
lods
loop
add
add
fcomps
movsl
inc
push
lock
cld
jecxz
sub
fimull
dec
lods
addb
enter
mov
mov
stos
jns
loop
sbb
dec
mov
mov
mov
add
jl
mov
sbb
add
out
in
push
mov
add
adc
lret
jecxz
ret
mov
xchg
fs
mov
add
add
add
fidivs
aaa
cwtl
lea
jno
pop
jg
jns
jo
push
jae
mov
shll
andl
add
out
rol
xor
lock
insl
ror
cmp
aaa
leave
insb
sub
daa
mov
mov
mov
cmp
dec
mov
push
ljmp
clc
inc
add
push
or
iret
and
mov
mov
sahf
jmp
addr16
sti
and
jae
aam
lcall
pop
xchg
sub
or
dec
add
jnp,pt
lret
xchg
push
imul
pop
mov
add
out
ficompl
adc
add
inc
out
xchg
mov
in
pop
mov
dec
es
push
in
pop
dec
jp
dec
rcrl
std
cs
imul
cmpsb
inc
add
xchg
gs
mov
out
fcomip
cmp
cvtpi2ps
adc
pop
mov
int
and
jne
fs
mov
data16
in
fldcw
rolb
jle
push
jo
mov
pop
call
test
cmpsb
jb
daa
cmpsb
jbe
xor
adc
test
add
xor
out
add
mov
in
jns
cmp
sub
add
and
popa
shl
cwtl
outsl
mov
add
fldl
push
ret
insl
cld
fcmovbe
push
jmp
in
add
mov
mov
aam
push
jg
adc
and
cmp
inc
addb
adc
mov
mov
enter
dec
int3
inc
add
not
dec
pop
add
and
mov
iret
mov
pop
in
mov
cld
cmp
aad
pop
shl
cmp
out
mov
repz
pushf
repz
cld
inc
mov
dec
push
sub
dec
jmp
daa
mov
cmp
in
fdivrl
and
lods
inc
jg
rclb
mov
and
adc
daa
cmpnltps
jne
sti
out
into
xchg
fcmovbe
out
xchg
xchg
sbb
call
into
cmc
fildll
push
xor
mov
add
add
aaa
clc
xchg
stos
aam
dec
popf
cwtl
loope
daa
stos
leave
xor
int3
aas
movb
add
mov
add
xchg
or
fcompl
lahf
and
or
mov
add
adc
pop
movsb
repz
pop
push
push
xchg
aaa
adc
aam
stos
inc
iret
push
mov
dec
xchg
fisttpl
adc
pop
pop
mov
imulb
jg
es
add
in
arpl
xchg
xchg
testl
mov
sub
lods
es
push
sbb
je
fwait
push
add
lods
cmp
sub
in
fisubrs
scas
adc
add
cwtl
loope
pop
repnz
movb
jne
adc
mov
ds
jno
push
es
mov
pop
jne
or
add
or
adc
shlb
mov
andl
ficomps
mov
test
sub
sarb
aad
aam
sahf
lcall
add
inc
add
imul
add
jecxz
and
mov
bound
lea
movb
outsb
push
repz
inc
lret
dec
clc
push
outsb
jno
je
aad
pop
xchg
icebp
sti
push
jno
ss
cmc
sbb
mov
sub
hlt
cmp
mov
stos
pop
add
in
repnz
mov
sar
in
xchg
fnstenv
stos
lret
lret
dec
loopne
bound
push
add
mov
pusha
add
iret
inc
add
or
xor
inc
add
imul
cwtl
cmp
mov
sahf
adc
cli
xor
insb
dec
push
fcoml
arpl
nop
inc
add
je
mov
sub
mov
iret
fimull
jnp
cmc
fisttpl
dec
in
and
es
jp
shrl
ljmp
outsl
subl
ret
pop
repnz
cmpsb
push
test
testl
dec
imul
cmp
cmpsb
clc
dec
mov
mov
push
xlat
outsl
fcmovne
and
scas
cmp
mov
sti
xchg
sub
loop
push
movsb
adc
cltd
or
add
mov
rcrl
add
loope
in
mov
sbb
xchg
insb
cld
mov
ficomps
push
ja
and
sbb
lock
adc
lds
inc
add
arpl
aam
jmp
iret
addb
xchg
ljmp
adc
mov
push
roll
jl
aaa
jmp
add
jbe
push
insl
jbe
ret
test
out
xchg
test
addb
ljmp
sbb
jp
jnp
xchg
je
xor
mov
add
add
add
dec
pusha
add
out
and
in
mov
test
movsl
lret
sbb
push
lock
and
add
pop
in
push
mov
cmp
pop
adc
add
dec
pop
es
and
sbb
pop
mov
push
add
add
dec
rolb
das
mov
fisubs
add
mov
lods
jae
xchg
mov
rcrb
and
push
stc
mov
cmp
jge
popf
adc
pop
in
jb
jb
add
je
int3
jae
xlat
dec
and
inc
add
xor
sbb
or
lcall
push
addb
loope
aaa
aam
dec
xor
add
or
xchg
adc
push
and
dec
sub
arpl
aas
xor
mov
dec
test
mov
add
sub
lret
cmp
es
add
scas
sahf
mov
and
inc
add
fcomps
loope
xor
push
out
jb
gs
and
xchg
scas
int
imul
dec
test
push
inc
insl
stc
pushl
subl
add
jns
lods
xchg
pop
sub
pushf
imul
push
mov
cmpsb
cld
fisubl
push
xchg
push
and
nop
inc
add
sbb
negb
cmpsl
push
repnz
fcomip
jae
loopne
aas
cmpsl
hlt
daa
setne
mov
in
incl
lcall
jo
pop
xchg
or
add
sub
mov
lds
jo
fcom
fsubrs
cmp
loopne
pop
lret
add
pmaddwd
adc
sbbl
lret
test
push
add
fstpt
push
sub
cli
mov
inc
scas
movsl
ss
std
ds
mov
sub
mov
jnp
mov
mov
out
xor
rolb
jb
rorl
or
xchg
jb
nop
adc
mov
cmp
add
lcall
dec
mov
add
test
addb
lods
adc
jg
or
and
hlt
in
lds
shrl
mov
add
adc
inc
add
add
iret
mov
imul
mov
adc
add
mov
stc
jnp
cli
xor
ljmp
lret
and
mov
in
mulb
add
gs
aam
addl
stos
pop
and
sbb
ret
mov
pop
jbe
loop
adc
in
or
arpl
xor
cmp
and
xchg
in
imul
and
sbb
outsl
xchg
adc
aaa
out
int3
jne
or
es
sbb
and
jo
add
push
xchg
lret
add
sbb
les
sbb
fwait
out
lds
add
mov
shlb
shll
add
pop
push
add
aam
sub
cmpsb
mov
sub
pop
inc
cmp
cmc
sbb
jle
loope
pushf
pusha
add
add
pushf
rorl
inc
jmp
cmp
popf
xchg
stc
mov
dec
adc
ja
add
sub
out
dec
clc
push
add
inc
add
push
sbb
pop
jae
mov
mov
mov
cmp
int3
jge
or
add
mov
in
push
int3
stc
in
add
jge
inc
mov
mov
add
call
fstpt
push
adc
jb
int
adc
sub
mov
outsb
mov
dec
lods
ret
and
fisttpll
xor
mov
mov
add
add
push
add
movsb
ret
xchg
popa
sub
xchg
pop
xchg
out
dec
add
rolb
jmp
cld
jno
add
dec
fs
mov
sbb
xchg
mov
js
add
faddl
add
jle
leave
in
mov
cmp
mov
add
repnz
lahf
je
sub
in
sub
cs
push
mov
pop
adc
add
push
movsb
insb
rolb
icebp
sub
dec
sub
add
add
xchg
rcll
addb
xchg
xchg
ret
jge
negl
push
dec
fisttpll
int3
fs
and
ret
jl
xor
add
mov
mov
push
cmpsb
and
or
sub
ret
push
stos
popa
xor
sub
shlb
or
sub
das
and
in
xor
imul
movsb
mov
or
notb
popa
lds
outsl
xchg
cmpsl
and
pavgb
loopne
pushf
mov
pop
dec
inc
add
mov
lea
jl
push
test
inc
add
and
loop
adcl
add
add
or
sub
push
iret
push
or
or
loop
jns
sbb
addr16
int3
ljmp
into
stos
push
pmaxub
ja
dec
bswap
cmp
xchg
xchg
push
xchg
jbe
cmpsb
or
dec
mov
push
jecxz
add
sahf
add
lcall
sub
out
mov
aam
xor
aam
bound
ss
test
add
lods
cwtl
mov
int3
xchg
sbb
pop
inc
dec
or
jg
insb
cld
notb
iret
fwait
xchg
pop
fsubl
aaa
jnp
push
jl
mov
bound
cmp
adc
inc
sbb
add
lds
inc
mov
xor
add
ret
int3
inc
cmp
pop
fisubrl
mov
cs
mov
mov
push
into
cmp
or
mov
push
add
dec
sub
sbb
push
jno,pt
insl
inc
add
fisubl
imul
ss
inc
add
mov
add
test
inc
add
xchg
imul
add
add
xor
stos
fdivs
add
test
lret
loop
dec
cld
cwtl
jbe
sbb
bound
mov
ljmp
mov
jecxz
inc
add
clc
stos
push
add
mov
inc
lods
cmp
ljmp
xchg
lahf
inc
add
int3
inc
mov
sbb
movb
inc
or
add
dec
fildll
and
inc
add
test
xlat
fldcw
jg
adc
and
jns
cmpsl
das
mov
popf
fldl
cmp
adc
push
cmovs
sub
shl
decb
sub
and
mov
rcrl
adc
adc
push
adc
insl
lret
add
add
push
lret
sbb
mov
loop
test
outsl
push
test
add
rcr
inc
add
rolb
clc
das
cmp
add
and
in
stc
mov
in
dec
fbld
cwtl
cmpsb
push
rorb
mov
pop
hlt
mov
add
add
xchg
pop
movb
in
nop
sti
dec
call
icebp
sbb
cmpsb
gs
fcoml
sti
jae
icebp
add
jl
add
add
jp
inc
add
shrb
iret
leave
mov
pop
add
or
mov
add
mov
push
sub
inc
cmc
into
xlat
inc
or
xchg
cld
inc
mov
test
and
add
inc
int3
cli
cld
mov
int3
pop
out
jo
pop
sub
outsl
js
fidivrl
je
out
xchg
mov
mov
scas
xor
aam
adc
andl
arpl
mov
and
les
into
push
call
aas
into
jge
add
shll
pop
shrl
mov
jg
call
xchg
lret
in
xchg
hlt
cld
clc
cltd
inc
add
scas
jg
pusha
add
cltd
rcrl
dec
jb
sub
outsl
mov
xlat
jnp
jns
in
lods
fwait
jmp
push
es
pop
andl
adc
cli
xor
adc
add
fdivs
jp
in
stos
dec
addb
jo
aam
dec
add
lret
iret
scas
in
or
sbbl
loopne
fwait
dec
fadds
pop
pop
xchg
sarl
popl
data16
mov
mov
xor
jmp
fwait
aaa
aaa
dec
pop
ja
mov
clc
shll
mov
and
and
fdivl
mov
xlat
cmp
ret
adc
xchg
sub
ret
mov
imul
xor
orl
xchg
xchg
ds
push
sbb
imul
jb
movsl
jecxz
xchg
sub
cmp
les
dec
imul
jg
shll
sarb
rolb
mov
mov
add
mov
push
ds
pop
cs
ret
mov
adc
test
push
add
lret
inc
add
sub
mov
fwait
inc
add
dec
sub
addb
sub
add
cmp
push
add
adc
or
clc
mov
lods
push
xchg
xor
or
jnp
and
addr16
lods
inc
add
ret
add
cmp
shrl
jl
xor
mov
or
jle
in
fisubrs
mov
loop
into
mov
test
cli
inc
add
mov
sbb
dec
aaa
pop
inc
movsl
sub
bound
ljmp
xor
ficoml
mov
cmp
lcall
add
add
pop
xchg
add
xchg
daa
je
pop
sub
adc
sub
outsb
push
test
ljmp
push
cmp
add
sbb
push
add
mov
add
jbe
cld
scas
imul
xlat
adc
imul
cmp
mov
into
fidivrs
leave
pop
lods
sahf
dec
or
cwtl
and
stos
xor
ds
ror
std
lods
outsl
and
push
loopne
mov
hlt
es
cmovno
lods
ss
rolb
push
pop
add
insb
icebp
adc
jne
cld
xchg
pop
pop
mov
inc
add
hlt
cltd
sahf
push
into
inc
add
xor
add
mov
ja
cmp
loope
sbb
cltd
adc
push
lahf
push
xchg
dec
adc
loope
sbb
test
idiv
mov
fmulp
push
scas
xor
int
aas
or
and
mov
sbb
gs
lret
repz
inc
aaa
dec
arpl
aad
cmp
jg
iret
addl
add
es
jg
jb
add
repnz
aas
rol
test
insb
cwtl
loop
int
mov
xchg
adc
or
xlat
push
jo
or
add
mov
sahf
scas
outsb
lret
and
and
add
pop
push
push
push
mov
and
popf
les
mov
xchg
dec
subl
loopne
add
or
pop
ds
imul
fadds
mov
jl
call
add
mov
mov
in
add
push
inc
add
pop
sar
fstl
xchg
sub
aam
ss
clc
gs
mov
mov
fsubs
fwait
xor
lgs
add
push
jl
ret
adc
stos
test
mov
enter
hlt
pop
cld
mov
ret
cmc
into
mov
sub
mov
and
int
fstp
jb
ljmp
or
pop
insl
xlat
pop
push
mov
insl
popa
jecxz
call
jno
data16
int3
enter
mov
sti
xor
lds
pushl
and
cmp
sub
cwtl
mov
lret
xchg
cmp
push
incb
ds
add
jle
inc
add
mov
fcomps
jge
sub
lock
fisttpll
pop
icebp
js
addl
jae
popf
std
xchg
sbb
inc
add
jbe
lods
add
mov
add
lret
aam
lahf
les
xor
inc
add
inc
add
inc
pop
rorl
push
sbb
in
mov
add
movsl
dec
pushf
inc
jb
lret
mov
insb
scas
ficomps
pop
addb
fbld
repz
test
filds
sub
dec
nop
bound
outsl
xor
jae
sahf
push
jbe
jle
mov
push
int
shrl
inc
out
out
mov
mov
cmp
mov
outsl
lock
pop
xchg
pop
cmp
aad
bound
std
lcall
inc
add
xchg
divb
ss
mov
jg
testb
jbe
enter
mov
mov
pop
cmp
pop
std
or
cmp
out
add
mov
mov
addb
rcrb
rol
je
mov
mov
lods
daa
lds
push
call
je
popf
stc
addb
add
iret
rcl
sbb
mov
add
outsb
or
imulb
lods
fs
insb
fisubrl
mov
sub
pop
lds
mov
push
add
sub
xor
dec
xchg
adc
dec
jnp
xchg
cli
ds
movsl
stos
push
adc
ret
loop
push
cmpsb
push
push
test
daa
mov
and
insl
scas
cs
mov
or
data16
xchg
popa
push
sbb
xchg
lods
lcall
jns
add
imull
jecxz
push
and
add
mov
push
mov
insl
cmp
and
mov
into
mov
ss
adc
add
insb
lock
ror
adc
scas
int
aaa
out
add
scas
or
jns
dec
inc
add
cmc
sub
add
push
icebp
js
push
or
mov
pop
mov
xor
mov
sbb
arpl
gs
mov
mov
out
mull
add
repz
in
aas
insb
lea
cmp
xor
and
add
sbb
test
ljmp
daa
mov
pop
jo
xchg
fidivs
sbb
ror
or
lret
lock
mov
imul
cs
mov
adc
imul
mov
xor
mov
cld
mov
mov
add
and
iret
jne
rcll
loopne
xchg
fmuls
ret
fwait
pop
cwtl
mov
or
xchg
cwtl
scas
jecxz
daa
dec
inc
add
movsl
push
adc
pop
inc
pop
in
sarl
and
inc
aaa
nop
js
pop
adc
enter
mull
inc
add
out
or
mov
push
add
jle
enter
cmp
icebp
push
inc
add
ds
and
cmpsb
insl
rolb
push
jmp
mov
push
mov
add
pop
adc
enter
cmpl
into
sub
add
cwtl
mov
jae
lsl
jp
lret
scas
mov
inc
add
jb
pop
mov
movsl
cld
xchg
push
push
dec
stos
std
je
or
sbb
pop
mov
mov
aam
push
cmp
sbb
xchg
mov
addb
fnstsw
lret
add
sub
fstpt
jg
arpl
jbe
out
pop
int3
cltd
mov
loop
cwtl
int3
jmp
push
xor
das
daa
loop
add
jl
ss
add
inc
fsts
adc
push
adc
or
rorl
add
jp
in
rcrb
cld
rcr
in
ret
sub
jmp
addr16
and
lcall
inc
jno
lret
test
cmp
sbbl
jne
mov
es
inc
mov
rcll
and
mov
shll
addb
cld
mov
fcoml
mov
imul
pop
imul
push
add
lea
and
xor
outsl
mov
cmp
jp
lea
out
inc
jmp
mov
cmpsl
dec
sbb
lcall
add
and
nop
mov
in
lret
jmp
stos
lret
fwait
leave
int
lock
add
dec
sub
xchg
out
inc
add
sahf
xor
movsl
dec
dec
xchg
adc
mov
addr16
pop
call
inc
dec
out
daa
push
das
sbb
and
sbb
mov
js
push
js
repnz
xor
sbb
div
test
popa
and
cmp
out
cmp
inc
mov
inc
add
push
lds
into
sub
addb
add
aad
mov
mov
cs
insb
mov
loope
sub
jecxz
pop
cmpsl
aas
mov
enter
nop
mov
adc
cmpsb
jno
idivb
cwtl
mov
jmp
xor
ret
jmp
jmp
test
mov
fabs
mov
arpl
inc
mov
dec
popf
out
int
and
or
mov
add
add
inc
add
icebp
pop
andl
adc
data16
cmp
daa
sbb
push
cmp
adc
push
addb
dec
std
ja
xchg
lods
out
call
or
sti
adc
stos
sbb
jae
dec
jge
and
cmp
outsb
scas
ds
lds
mov
sbb
push
call
pop
jbe
sbb
sbb
sub
cli
sub
inc
add
inc
add
nop
les
ds
jg
sub
dec
add
cmc
or
add
add
in
cmp
movb
cli
lods
mov
mov
add
xor
bound
out
addb
das
hlt
push
mov
cmpsb
pop
sbb
mov
mov
lods
loope
inc
add
cmp
dec
mov
xchg
daa
in
mov
pop
push
mov
push
add
cmc
sbb
adc
sbb
cmpl
repz
add
js
mov
test
stos
sub
xchg
imul
pop
or
mov
jg
push
je
xor
xchg
lods
pop
push
add
mov
cwtl
lret
rolb
mov
mov
xchg
mov
add
dec
mov
outsl
cmpsl
and
lret
push
pop
gs
enter
ja
add
mov
in
icebp
into
rcl
pop
sbb
stos
push
js
int
rolb
and
adc
mov
fcmovnu
pop
pop
xchg
mov
fs
mov
fwait
sbb
add
sbb
and
fnstsw
or
xchg
jnp
jb
inc
and
mov
mov
xor
mov
je
fsubrl
in
add
cwtl
mov
or
scas
gs
leave
mov
cmpl
call
insb
and
add
lods
test
add
add
xlat
movb
mov
daa
sub
jo
mov
jge
int3
es
mov
ljmp
cmpsl
dec
hlt
int3
pop
outsb
pminsw
adc
xor
add
movsl
sbb
pop
mov
inc
add
mov
das
popa
nop
inc
add
or
es
add
ret
data16
hlt
addr16
data16
imul
lret
imul
daa
adc
pop
jae
mov
mov
popa
mov
xchg
out
add
inc
adc
mov
addr16
mov
add
mov
xchg
bound
mov
out
mov
mov
imul
lods
xchg
mov
mov
addr16
mov
addb
xchg
add
pop
fsts
push
pop
pandn
mov
loope
lea
xchg
push
addr16
cmp
add
dec
subl
xchg
fstps
pusha
add
mov
xchg
iret
loop
shll
add
xor
inc
add
push
add
test
cli
rcrl
mov
pop
mov
lcall
dec
mov
jo
sbb
negb
insl
hlt
addr16
push
movsl
cmc
xor
cmp
inc
jl
mov
lea
cwtl
cmc
repnz
sbb
dec
sti
outsb
shrb
push
scas
xlat
mov
xor
jle
cs
int3
add
lock
pop
movsl
adc
ror
lcall
imul
adc
movsb
mov
test
push
dec
fiadds
mov
out
cmp
test
lahf
sbb
inc
sub
jle
int
lcall
lahf
or
shlb
loopne
test
and
jge
fs
aas
push
dec
mov
xchg
adc
mov
lret
std
leave
int
lock
jnp
add
or
int
xchg
pop
jns
push
add
sbb
test
sub
es
xchg
out
outsl
inc
dec
cld
mov
movl
rorl
mov
dec
insl
mov
popf
fwait
jmp
add
inc
or
jnp
add
add
add
cltd
adc
mov
jl
sahf
inc
add
repnz
fdivrp
fidivrl
fisubl
fs
push
addb
xchg
mov
adc
orl
push
adc
jle
in
addb
mov
mov
adc
into
pop
and
pop
dec
push
add
jg
hlt
xchg
into
or
add
xor
add
add
xor
push
pop
adc
and
pop
sti
addr16
mov
andl
inc
mov
ds
aad
add
aaa
sahf
daa
add
sbb
inc
add
dec
in
jmp
mov
add
addb
aas
sbb
inc
add
mov
adc
stos
addb
sti
cli
xchg
rcr
stos
pushf
out
mov
bound
jp
sub
ja
add
sub
fistps
inc
add
cmp
xchg
dec
rorb
add
jmp
mov
mov
aas
pmuludq
xor
jae
mov
fiaddl
xchg
jmp
push
popa
in
mov
leave
dec
out
insb
jg
cmp
fsubs
movsl
mov
pop
jbe
or
sbb
pushl
dec
push
test
sbb
iret
xchg
push
and
inc
cli
xchg
insl
rcll
xor
adc
xchg
lahf
pop
movsb
jg
add
sub
xchg
sbb
test
add
xchg
xor
cmpsl
addb
aas
jecxz
fcmovnbe
call
es
stos
dec
mov
push
movb
stos
out
cmpl
js
pop
rolb
fstpl
push
jnp
cmp
adc
pop
mov
dec
repz
add
iret
and
xchg
outsl
cwtl
int
lds
push
dec
sub
inc
add
lods
cmpsb
and
sbb
lds
je
sti
push
push
ret
add
les
es
jae
hlt
mov
mov
and
xchg
pop
icebp
xor
xor
cltd
in
xor
sub
hlt
push
add
shll
ficoms
je
add
add
push
adc
aam
ljmp
add
sarb
and
bound
lret
shlb
fildl
in
xchg
push
or
into
test
and
loop
add
and
adc
outsb
inc
add
js
or
pop
enter
jae
jo
lea
sub
jl
jmp
jecxz
bound
imul
sub
arpl
dec
out
mov
add
push
xlat
push
dec
and
cwtl
push
mov
lcall
mov
mov
pushf
mov
mov
or
lret
sbb
cmp
add
shr
dec
add
sbb
cmp
adc
push
xchg
ds
ss
pop
rcll
ljmp
xchg
clc
push
push
or
and
pop
fisttps
adc
lret
mov
add
lea
rolb
cmp
pusha
add
add
cs
lret
subl
push
add
outsl
cwtl
inc
add
inc
add
add
sub
test
push
add
adc
mov
sub
xchg
mov
lret
xor
sbb
xchg
cltd
pop
add
in
mov
push
dec
fwait
dec
loopne
out
lret
xlat
push
add
add
aad
sbb
lea
insl
fwait
push
cltd
bound
in
sbb
dec
add
mov
jnp
in
out
js
scas
mov
mov
test
loope
push
in
movsb
jle
lods
sub
pop
jmp
std
hlt
pop
mov
daa
aad
movb
add
add
push
mov
dec
inc
add
and
lea
lret
jae
sub
sbb
test
adc
pop
cli
pop
je
push
inc
ja
push
and
mov
add
or
jmp
addb
lods
jmp
and
push
xchg
and
outsb
test
lret
fwait
jmp
push
loop
fldl
sub
adc
inc
add
and
and
fdivs
aam
mov
or
pop
xor
test
pop
mov
pop
mov
adc
push
scas
in
pop
mov
test
push
sbb
into
jnp
ljmp
test
test
push
add
inc
lods
repnz
pop
jo
out
das
stos
fbstp
adc
add
rcrl
popf
ret
loop
enter
jae
and
lea
outsb
sub
add
and
push
add
rorb
jno
dec
sbb
xor
les
pop
jl
xor
push
ss
sbb
jo
xchg
fs
addb
jmp
jnp
in
jae
pusha
add
ret
test
dec
jnp
sub
fs
cmp
add
mov
add
dec
pop
adc
lods
add
add
lea
call
dec
add
add
cmp
push
fs
mov
dec
pop
jmp
inc
add
int3
add
push
cmp
adc
mov
add
fmull
mov
cmpsl
xor
out
arpl
mov
aaa
cli
data16
pop
rolb
add
mov
or
out
mov
daa
aad
insl
outsl
pop
sti
push
int3
addb
dec
dec
mov
int
outsl
mov
add
add
movsb
loop
fcmovnbe
cwtl
or
jl
xchg
xchg
sub
add
pop
cmp
imulb
xchg
xor
xor
into
leave
lea
movsb
jne
imul
cmp
iret
call
lods
lret
insb
add
mov
mov
add
sahf
inc
add
ds
or
jle
repnz
movsl
mov
jbe
aad
xchg
sub
ret
jno
lahf
test
out
cmc
daa
movsl
xorl
adc
inc
add
loope
test
cmpsb
lds
push
adc
loope
or
add
fdivrs
mov
add
cmp
in
add
adc
out
and
mov
add
jmp
cmp
push
js
add
inc
add
sub
pop
shlb
ror
das
xchg
daa
add
xor
scas
rolb
outsb
andl
mov
pop
jmp
mov
insl
test
cmp
add
clc
xor
pop
popa
lcall
pop
mov
iret
shl
mov
pop
int
sti
and
aas
mov
sahf
pop
sbb
xor
mov
rcrb
add
xchg
jmp
cld
shlb
outsb
sbb
mov
fwait
sbb
sub
cld
dec
enter
add
inc
add
sub
add
mov
or
sub
mov
pop
test
jbe
inc
add
xchg
fsubr
mov
push
sbb
xor
loopne
fisttpll
cmp
push
xchg
fists
mov
cmp
add
add
push
add
push
inc
mov
add
jmp
or
fs
in
rsqrtps
pop
lret
cld
insl
das
jnp
pop
cmp
mov
ljmp
fwait
in
cmp
std
lret
xor
out
nop
xchg
push
add
stos
jle
or
out
inc
xchg
outsb
xchg
jle
andl
dec
call
rorb
xchg
jo
mov
jecxz
push
jmp
mov
loope
sub
jge
dec
lods
pop
sbb
dec
sti
cmpsb
mov
das
mov
push
aam
push
add
mov
mov
decl
xchg
xor
decl
mov
push
les
push
xor
pop
idivb
mov
add
add
add
inc
add
xlat
pop
adc
mov
add
inc
fidivrl
shlb
mov
movb
and
add
or
dec
mov
push
shrl
clc
jnp
mov
add
mov
int
and
xchg
movb
movsb
mov
adcl
pop
icebp
call
sub
cwtl
xchg
xchg
add
mov
cltd
repz
dec
pop
push
cmp
inc
add
cmc
fisttpll
ja
shrl
mov
dec
and
and
loop
push
sahf
xchg
cmp
movb
add
add
stos
int3
call
mov
mov
jp
add
jno
outsb
ja
or
aam
dec
dec
inc
add
fsts
cmp
add
jle
loop
push
jne
pop
sbb
add
insb
cli
cmpsl
push
adc
icebp
subl
jle
loope
push
mov
lds
test
leave
dec
mov
cmc
xchg
jl
repz
pop
cs
xor
jmp
ret
inc
sub
and
mov
dec
cltd
outsl
cmpsb
jmp
cli
sub
loopne
jg
ret
mov
data16
sub
add
mov
addb
das
and
pop
lods
xor
out
dec
scas
inc
mov
sub
push
jp
pop
add
rcrl
lds
mov
cld
mov
imul
cmp
outsl
xchg
mov
adc
or
aam
popa
xchg
xchg
pop
ret
mov
push
push
outsb
mov
sti
ljmp
shrb
imul
jl
sbb
cmp
mov
mov
gs
fxtract
cmc
push
dec
push
add
jecxz
ja
mov
add
loope
fs
inc
addb
mov
xchg
pop
jo
push
bound
dec
cmc
mov
mov
scas
lcall
insb
xor
sbb
add
cmpsl
call
stc
jne
adc
aas
leave
es
mov
jns
in
test
jmp
addr16
xor
int
xlat
es
push
ds
mov
fxch
jb
push
and
add
add
stc
es
pop
cmp
add
shll
or
repz
jno
data16
std
loop
add
sbb
nop
add
test
out
add
stos
sbb
aas
ret
lea
call
fistpl
arpl
imul
mov
add
sahf
test
js
xchg
inc
fiadds
data16
sbb
push
xlat
test
or
in
xor
add
mov
movsb
and
inc
es
les
cltd
adc
mov
fcomps
mov
push
or
cmp
int3
sub
jne
sahf
mov
out
push
jecxz
push
xchg
push
loopne
add
enter
mov
add
icebp
and
hlt
xchg
test
jbe
sahf
mov
mov
add
lret
pop
je
mov
inc
add
add
mov
jp
sti
mov
leave
addr16
clc
rolb
rolb
inc
add
add
or
fisubs
aam
int
push
fldl
jmp
add
in
subl
push
or
pop
jb
lahf
shll
lret
es
shl
xlat
int
xlat
loope
fdivrs
flds
add
call
xlat
jle
outsl
cmc
movb
pushf
nop
sub
inc
add
mov
rolb
test
daa
sub
jns
addb
popa
pop
mov
loopne
or
sbb
xor
test
fimull
xor
insb
and
sti
in
jo
and
std
mov
aas
push
add
adc
jge
sbb
imul
add
mov
cmpsb
popf
popf
lods
js
adc
mov
repnz
cli
aaa
mov
pop
adc
cmp
shr
lcall
inc
add
jmp
div
cs
jl
sub
lods
jl
fimull
ret
xor
xor
cmpsl
loop
mov
add
ja
mov
cmp
fwait
pusha
add
ljmp
or
sarb
xor
adc
daa
shrl
sub
cwtl
mov
add
xlat
push
fcos
cs
ja
loope,pt
add
cltd
adc
inc
add
push
decl
pop
xchg
add
jo
cli
fistpl
mov
adc
push
roll
jmp
cmpsb
jle
outsb
cmp
sub
in
push
jns
xchg
insl
add
cmpsb
in
movsb
cmc
mov
hlt
mov
ret
dec
or
out
arpl
movb
test
cmp
or
mov
push
mov
movsb
jbe
pop
cmp
incl
imulb
in
mov
sub
and
mov
or
sub
sar
imul
int3
cmp
imul
outsb
dec
pop
xor
incb
jns
addb
dec
arpl
ds
out
pop
jo
xchg
mov
ret
and
lret
fs
or
or
inc
push
dec
clc
jbe
outsl
dec
jge
xchg
mov
movsb
shll
push
dec
add
mov
lcall
in
in
fsubr
inc
iret
aam
xchg
jno
inc
add
push
sarl
imul
add
popa
in
hlt
pushf
pop
mov
lock
push
mov
ljmp
mov
cmpsb
lret
je
lock
test
jg
call
mov
inc
pushf
jecxz
outsl
shlb
pop
les
cli
and
dec
fs
xor
sbb
ss
bts
xor
push
clc
cmp
les
jge
jecxz
daa
fisttpll
into
je
icebp
les
cld
jae
das
insl
push
cmp
adc
and
cmpsb
pop
pop
mov
mov
dec
iret
push
fstl
rcrb
enter
rolb
pop
in
or
fs
cli
mov
in
movb
add
sbb
and
and
scas
sbb
pop
iret
add
xor
repnz
nop
inc
pop
pop
mov
sbb
add
fmuls
or
add
ljmp
test
xchg
insb
pop
xchg
add
add
add
test
and
inc
add
or
hlt
and
mov
jmp
int
jp
out
pop
lret
xchg
pop
scas
js
inc
add
scas
sub
test
mov
dec
lcall
mov
dec
outsb
jne
add
push
dec
or
fadd
add
push
mov
xchg
xlat
lods
test
lea
in
lock
or
add
mov
scas
les
pop
stos
jle
rolb
add
into
mov
out
aad
push
cmp
pop
sub
stos
jge
movsb
mov
ljmp
movb
add
fmulp
adc
filds
add
lret
ret
outsl
arpl
lods
loop
mov
add
aad
lods
xchg
int
insb
pusha
add
add
mov
dec
cmc
inc
add
add
jb
fsubp
adc
sub
add
xchg
push
pop
test
arpl
in
aam
add
out
and
jbe
pop
outsl
in
add
mov
incb
fcmovbe
iret
scas
sub
bound
dec
mov
arpl
mov
cmp
sub
add
int3
add
