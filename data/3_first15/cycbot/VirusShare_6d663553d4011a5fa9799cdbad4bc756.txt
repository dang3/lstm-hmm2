cmp
testl
mov
jl
mov
lahf
lret
pushl
sbb
shrl
aas
jle
add
out
lods
stos
stc
dec
jne
adc
xchg
stos
or
sub
pop
mov
pusha
add
jl
into
roll
clc
xor
in
xchg
scas
jge
add
push
out
pop
scas
stc
and
mov
mov
fisubs
mov
or
mov
fldl
add
sub
add
mov
adc
mov
add
mov
outsb
xor
add
mov
adc
sti
xor
mov
and
int3
dec
icebp
or
add
mov
das
aam
lret
and
adc
fnstenv
lcall
test
add
mov
add
and
inc
inc
xchg
imul
insl
pop
sarl
fcomps
push
clc
sub
xchg
add
pavgb
mov
gs
push
add
test
test
xchg
cmpsl
lock
hlt
adc
xchg
add
imul
mov
sub
mov
inc
in
pop
inc
fldcw
clc
lea
sti
imul
xor
mov
sbb
add
mov
add
mov
jbe
add
and
add
cmpsb
out
mov
dec
xchg
lret
mov
ja
out
das
mov
mov
iret
dec
pop
push
mov
pop
pushf
xor
adc
mov
ss
cltd
cpuid
add
scas
cmc
dec
pop
test
sbb
cmc
sbb
iret
rolb
or
add
mov
pop
jbe
aaa
mov
pop
dec
cwtl
enter
xlat
roll
mov
iret
sti
xchg
pop
adc
mov
mov
cli
rcll
icebp
fsubrl
jge
sbb
and
arpl
leave
dec
repnz
andnps
mov
mov
pusha
add
xor
xchg
add
add
cltd
cltd
adc
popa
add
sbb
mov
lahf
mov
add
cs
mov
inc
sbb
enter
pop
daa
mov
mov
insb
sbb
sbb
test
jmp
add
out
rolb
mov
stc
clc
rorl
lahf
jbe
ja
sbb
icebp
fistpl
add
cwtl
mov
js
add
add
scas
enter
rolb
mov
in
aad
je
pop
add
fsubrs
aam
aad
stos
sbb
mov
xchg
push
push
sbb
loop
mov
enter
jle
xor
mov
mov
add
mov
xchg
cld
fadds
rolb
mov
jb
mov
cwtl
push
stos
aaa
mov
test
jg
xlat
push
and
add
mov
mov
cmp
rep
idivl
inc
jmp
sub
add
or
add
add
or
xor
popa
in
sbb
rolb
mov
test
ret
jecxz
push
cmpsb
scas
mov
push
in
out
sarl
nop
popf
push
inc
int3
mov
add
push
push
add
std
push
sbb
out
xchg
add
bswap
test
push
lock
lahf
xchg
adc
mov
or
les
in
cld
pop
dec
movsb
int
mov
rolb
mov
mov
add
movsb
sti
loopne
mov
in
mov
loope
test
add
mov
jnp
add
jbe
push
sbb
add
mov
int3
scas
into
add
dec
jne
mov
add
xor
mov
xchg
sbb
add
mov
mov
add
jmp
mov
rolb
mov
rolb
mov
ja
subl
mov
push
negb
fcoml
mov
addr16
add
fldenv
add
mov
dec
sub
pushf
pop
cs
mov
test
fstl
push
add
sub
xchg
adc
mov
add
out
adc
lea
mov
lds
ficompl
fs
in
pop
xor
mov
add
add
push
pop
lahf
mov
add
fldl
jmp
mov
sahf
popf
arpl
addb
xor
mov
mov
into
cld
sub
test
mov
jne
addb
xchg
scas
mov
mov
in
mov
inc
jnp
or
inc
pushf
add
insl
lock
mov
fildll
sbb
rolb
mov
pop
aam
xchg
es
out
sbb
add
pop
fisubrl
mov
jns
stc
ret
addb
ds
dec
ret
lcall
or
dec
mov
mov
adc
mov
gs
add
add
clc
push
pop
ret
mov
int
xlat
and
xchg
cmp
mov
inc
add
mov
popa
lcall
nop
add
mov
mov
add
cmpsl
sub
add
add
lret
add
stos
mov
add
popf
adc
adc
data16
add
lods
out
in
rolb
mov
add
mov
lods
jecxz
fdivrl
call
add
stos
je
cmp
pop
cmp
es
jae
xchg
sub
icebp
das
sub
icebp
xchg
adcl
add
cmp
into
lods
out
mov
push
and
mov
sbb
sbb
add
je
jp
dec
push
lea
mov
add
xorl
mov
insl
push
mov
mov
sarl
data16
jb
mov
or
mov
add
add
or
add
mov
bound
mov
in
mov
shll
icebp
ja
jle
pop
in
iret
mov
sub
addl
mov
mov
xchg
mov
push
fiadds
out
sub
stc
pop
push
int3
lock
jne
roll
leave
push
icebp
je
fninit
in
add
xchg
addb
fcomps
repz
mov
jns
and
mov
push
inc
scas
rolb
clc
pop
popf
pop
sbb
jle
add
mov
in
fs
sub
jno
dec
loope
cmp
jmp
jp
mov
jb
mov
dec
stos
dec
inc
dec
xor
dec
dec
into
xor
add
sbb
fsubrs
popf
mov
imul
add
in
gs
bound
mov
push
cmp
add
pop
push
test
cmp
jecxz
in
xchg
push
lret
mov
fucomip
adc
add
add
adc
jecxz
jne
push
sahf
das
dec
sub
imul
inc
jg
cmc
int3
stos
dec
push
adc
fstps
xchg
add
and
mov
xor
mov
add
add
dec
push
jle
lods
dec
push
cli
add
mov
stos
or
add
mov
mov
fwait
stos
imul
push
mov
icebp
push
mov
insb
fs
mov
sahf
sahf
sbbl
imul
lret
fdivrl
adc
xor
mov
xor
add
std
out
decl
lahf
inc
jo
mov
add
mov
inc
inc
aas
dec
adc
mov
pop
mov
mov
int
out
lea
hlt
pop
loop
mov
in
mov
sub
xlat
push
mov
divl
add
mov
mov
cld
lcall
scas
mov
aam
loopne
mov
inc
lcall
cld
test
push
inc
insl
cmp
add
mov
notb
add
jg
cmp
adc
nop
add
xorl
add
mov
daa
mov
jecxz
dec
mov
xchg
xor
mov
mov
rcl
mov
dec
dec
add
mov
mov
sub
and
mov
adc
mov
dec
jne
cmp
adc
sti
cmp
xchg
pushf
adc
mov
stos
add
mov
pop
or
push
movsb
sbb
lds
xor
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
inc
fmul
daa
enter
and
and
popf
scas
or
pop
arpl
dec
push
mov
mov
mov
sub
xchg
mov
mov
movsb
negb
dec
xor
mov
or
cmpsl
jbe
sbb
loopne
mov
xor
mov
add
pop
outsb
lret
push
sti
stos
addb
cs
adc
mov
xchg
add
add
das
or
fsubr
mov
add
jp
xchg
add
or
test
outsb
xchg
push
mov
or
cmp
add
sbb
jbe
cmp
inc
jmp
mov
rolb
mov
or
jmp
jmp
add
jnp
dec
stc
jae
xchg
xchg
xchg
dec
inc
addb
lods
fcmovb
inc
add
sub
lods
pop
push
or
dec
mov
les
pminub
repz
and
mov
gs
cltd
pop
xchg
push
cmp
jns
inc
add
xchg
push
into
bound
mov
fmul
inc
lcall
add
mov
add
or
dec
pop
dec
push
add
add
lock
dec
and
mov
push
add
mov
mov
adc
jns
dec
mov
pop
gs
jmp
push
clc
jg
mov
jno
inc
dec
xchg
mov
mov
dec
movsl
frstor
mov
add
lea
dec
inc
mov
dec
outsl
inc
add
cltd
xchg
out
fildll
mov
add
or
rolb
mov
jbe
push
out
cmp
add
add
cli
inc
adc
cmp
arpl
mov
mov
mov
stc
stos
ret
push
adc
mov
mov
in
cld
mov
mov
scas
mov
jns
sbb
aas
cmp
test
lcall
mov
xlat
gs
nop
add
jno
out
sti
filds
inc
sbb
call
mov
jnp
or
add
pop
or
add
popf
add
ds
mov
fidivrs
cmp
ja
or
inc
pop
xchg
add
mov
add
add
mov
pmullw
sbb
outsl
mov
hlt
pop
data16
fwait
cld
ja
icebp
data16
repz
add
enter
mov
dec
and
jge
lods
mov
dec
xlat
leave
sbbl
add
fs
xor
mov
add
addb
scas
mov
sti
cmp
add
icebp
push
in
mov
mov
call
sub
add
or
push
push
jbe
mov
xchg
popf
out
add
add
push
pop
push
add
sub
add
dec
fwait
idivb
xchg
frstor
lods
cmp
daa
cli
aas
jne
in
jmp
mov
mov
stc
mov
gs
fdivrl
mov
sub
add
mov
add
mov
addr16
fnstenv
fcomps
mov
or
add
pushf
adcl
xor
add
hlt
jmp
xchg
add
gs
lcall
xchg
addb
lock
rolb
mov
test
jp
push
adc
test
add
mov
icebp
sub
clc
data16
push
xchg
scas
xchg
add
jg
jg
or
sahf
ja
or
add
xlat
repnz
add
loope
dec
inc
push
jae
push
dec
xchg
jle
jl
mov
push
imul
add
sbbl
cmp
inc
inc
xchg
add
or
lret
nop
add
sahf
xchg
enter
jmp
fwait
aas
xor
add
es
jae
add
insl
sub
mov
enter
fcmove
xor
mov
aam
popa
aad
movsl
cli
dec
rolb
mov
sub
daa
je
addb
aad
test
scas
sub
movb
lds
mov
add
ljmp
push
jno
lret
in
mov
add
imul
scas
aaa
mov
sar
repnz
mov
or
add
mov
mov
scas
inc
scas
test
mov
xchg
aad
inc
add
movsl
pop
pop
mov
dec
cwtl
xor
mov
lret
sbb
lahf
inc
inc
dec
test
les
add
rolb
mov
lret
nop
add
sbb
inc
imul
lock
int
addb
inc
add
xor
sub
sahf
in
mov
mov
cs
push
lcall
mov
outsl
loope
jl
push
add
mov
lods
imul
mov
daa
push
or
and
jge
call
push
cmc
call
mov
add
mov
js
subl
add
sub
scas
jno
xlat
imul
insl
das
pop
out
push
mov
addb
cs
nop
add
mov
jns
inc
in
sbb
add
cld
outsb
and
inc
dec
aam
sbb
aaa
sub
add
mov
add
and
loop
mov
ljmp
repz
sub
mov
into
dec
or
add
add
aaa
into
pop
mov
out
push
add
mov
sub
xor
jp
add
ds
ja
ret
mov
pop
mov
mov
inc
add
ja
add
dec
mov
inc
or
mov
daa
fistpll
ds
sti
out
daa
test
int3
rcr
xor
add
add
add
add
incl
mov
cmp
cltd
push
inc
add
add
cltd
mov
add
add
adc
mov
add
add
add
int
repnz
mov
add
mov
outsb
fnsave
adc
mov
pop
cli
mov
add
xchg
test
rolb
mov
xor
hlt
add
mov
dec
not
add
xor
xchg
cmpsl
fwait
fs
je
push
dec
jmp
mov
add
cltd
push
push
lods
mov
mov
mov
sbb
in
or
push
iret
js
add
mov
push
cmc
xor
cs
repnz
xor
mov
add
push
adc
mov
add
aas
xchg
mov
sahf
outsl
ss
movsl
movsb
mov
mov
mov
mov
xor
mov
xchg
aad
lea
mov
add
pop
push
lahf
mov
inc
xchg
cmpsl
add
mov
xchg
pop
or
movsb
ds
push
mov
inc
in
cmpsl
and
mov
cltd
xchg
mov
cmpsb
in
cli
jp
push
mov
pop
clc
call
cli
cmpsl
mov
add
inc
repnz
xchg
sub
sbb
add
mov
scas
dec
loopne
mov
test
add
clc
sar
and
jmp
add
mov
push
repz
inc
push
insb
mov
test
jmp
add
out
lods
popa
push
sahf
inc
test
std
test
dec
jge
mov
push
pop
cmp
inc
mov
repz
negw
test
fwait
les
inc
clc
enter
testb
adc
cld
fs
pop
rcrl
or
push
add
push
pushf
in
add
or
jecxz
push
push
fnsave
cld
pop
mov
mov
mov
lahf
int3
lock
popa
enter
sahf
icebp
iret
std
dec
aas
push
adc
push
pop
into
outsl
rolb
mov
mov
int3
das
inc
xchg
mov
push
inc
ficomps
add
xlat
jae
fadds
mov
adc
cli
outsb
ja
sub
in
ljmp
adc
mov
dec
sub
dec
push
xor
mov
loop
mov
cwtl
pop
mov
push
mov
adc
jo
mov
es
movsl
add
pop
xor
lret
into
gs
mov
inc
bound
mov
jo
mov
mov
mov
xor
mov
add
repnz
mov
pop
sub
inc
pop
data16
fisubs
aad
jl
test
int3
pop
cmp
scas
pop
test
sbb
sti
orl
gs
roll
add
ljmp
add
cmp
add
pushf
lods
imul
push
add
mov
mov
xchg
stos
jae
adc
int
inc
pop
jbe
adc
mov
push
mov
int3
cmpsb
xlat
adc
mov
rcr
pusha
add
add
pop
leave
jecxz
dec
ficoms
mov
mov
callw
popa
nop
add
call
cmp
test
aad
add
jns
or
fists
mov
sub
add
add
mov
jle,pt
add
cmp
fucomip
adc
mov
mov
or
addb
and
shr
mov
jbe
fidivl
loop
mov
test
mov
push
roll
mov
outsb
das
push
pushf
pop
ja
movsl
push
add
test
or
sbb
aas
inc
addl
test
repz
xor
mov
mov
push
fxch
mov
xchg
sahf
pop
push
iret
rolb
mov
fsts
iret
addb
gs
sub
inc
add
bound
mov
mov
addb
js
addr16
lock
push
lcall
fnstcw
jg
add
rolb
mov
mov
add
int
mov
mov
adc
mov
into
addb
jp
and
stos
sub
add
mov
jge
mov
mov
in
inc
mov
inc
lahf
fs
inc
je
addr16
add
das
fidivl
loop
mov
push
or
mov
or
arpl
and
jle
pop
or
add
gs
add
jp
sahf
insb
xor
push
adc
mov
jae
xor
addr16
pop
inc
add
dec
ret
mov
imul
fmull
test
pop
in
add
out
jecxz
xchg
mov
mov
sbb
out
lods
inc
out
mov
add
or
push
cmp
add
mov
cwtl
mov
test
or
mov
ficoml
add
adc
rcll
jne
repz
addb
xchg
inc
mov
add
mov
mov
cmp
sub
cmp
mov
or
test
add
and
add
inc
hlt
rolb
mov
ret
popf
push
cmp
jns
cmp
aas
into
mov
mov
add
jmp
inc
cld
sub
xor
add
add
add
xchg
aad
pop
ret
dec
dec
push
cmp
push
jmp
clc
push
add
test
in
or
xorl
mov
mov
add
cmp
mov
adc
cmc
push
sbb
jl
dec
pushf
lcall
push
push
mov
add
scas
xor
mov
lret
insl
cmp
add
mov
fsubrl
cmpsb
pop
test
into
cltd
inc
mov
js
push
or
ljmp
sub
mov
mov
add
sbb
add
lock
inc
add
pusha
add
xchg
xchg
ljmp
pop
dec
pop
jecxz
in
lea
pop
xchg
test
add
mov
mov
push
dec
add
lods
mov
pop
mov
add
btc
cmc
lods
mov
jge
or
mov
add
mov
loopne
mov
mov
out
rolb
mov
cld
dec
jmp
add
sahf
les
push
xchg
cmpsl
cwtl
xor
popf
push
rolb
mov
add
fwait
mov
ret
mov
cli
xor
mov
add
stos
ss
add
rorl
mov
hlt
inc
xchg
mov
and
stos
inc
loop
mov
add
in
jle
pop
lahf
add
mov
call
jno
and
cmc
xor
mov
mov
stc
cld
jle
js
lret
xchg
mov
pushf
push
mov
add
mov
dec
and
add
das
popa
xlat
mov
xor
dec
or
cmp
or
add
mov
es
mov
mov
add
mov
mov
push
mov
gs
mov
leave
outsl
add
mov
jmp
add
mov
into
xlat
adc
jnp
add
cmp
add
rolb
inc
out
jl
add
rcrl
stos
mov
addr16
add
mov
or
mov
shll
fwait
xchg
inc
and
mov
mov
cmp
cmp
pop
scas
pop
adc
add
mov
cmp
mov
movsl
loop
mov
int
dec
add
mov
sub
mov
lods
mov
mov
jo
mov
or
int3
pop
jg
sub
sbb
cmpsb
mov
jb
mov
std
sub
jns
mov
jl
add
stc
je
sub
insb
mov
push
xchg
mov
mov
popa
xchg
in
pop
into
stos
cld
negl
mov
icebp
jb
mov
rolb
mov
lods
xor
add
in
add
jo
mov
cmp
inc
add
dec
push
pop
out
xor
mov
sub
or
cltd
addb
mov
insb
cmpsl
pop
cmp
cwtl
cmc
pop
les
mov
xchg
fisubrl
sub
add
mov
sub
inc
add
mov
lcall
lcall
inc
addb
add
mov
mov
inc
add
mov
aam
stos
xchg
add
mov
shll
mov
pop
add
mov
pop
and
scas
adc
or
scas
xchg
add
or
cmp
inc
jmp
pop
pop
shll
repz
pop
adc
sub
mov
dec
stc
cmc
int3
push
push
shrl
outsb
dec
push
ljmp
cmpsb
cwtl
movsl
daa
in
cmpsb
dec
out
add
mov
test
ret
loop
mov
sahf
jg
push
push
add
pop
gs
shll
mov
xor
cmp
movsb
xchg
or
add
mov
into
jne
mov
and
mov
clc
sbb
add
dec
hlt
push
mov
aas
hlt
lret
xchg
mov
or
mov
mov
imul
outsb
push
out
ds
int3
addb
or
int
add
and
mov
scas
ret
rcrl
mov
test
add
inc
imul
nop
add
xor
data16
xor
scas
or
daa
xorl
add
mov
pop
mov
sti
addr16
jns
rolb
fmuls
mov
mov
inc
fidivl
and
push
sub
scas
int3
loope
in
adc
pop
pop
push
add
dec
dec
enter
vmovss
adc
mov
rolb
mov
cmp
xchg
aas
test
xor
inc
add
hlt
or
xchg
iret
sub
xor
inc
add
and
addr16
lods
push
jg
sbb
scas
sbb
mov
push
pop
call
sbb
add
cmp
dec
pop
out
dec
aaa
add
mov
jo
mov
add
mov
dec
bound
mov
fprem1
add
mov
add
mov
xchg
rolb
mov
mov
xchg
sbb
xor
test
gs
push
add
mov
ds
notl
xchg
adc
mov
pop
mov
add
add
or
xchg
int
fdivrl
jb
mov
mov
push
and
mov
xchg
add
mov
mov
ds
fs
lret
dec
decl
sti
clc
ja
add
in
cltd
inc
add
mov
add
daa
jae
pop
out
filds
addr16
pop
mov
ret
frstor
mov
xor
icebp
adc
mov
data16
add
std
insl
shrl
mov
mov
or
push
enter
add
add
mov
xchg
add
ret
add
mov
add
add
mov
pop
pop
push
test
test
add
cli
cli
dec
xchg
mov
ja
mov
cwtl
pop
xlat
dec
push
inc
fldcw
dec
mov
mov
lods
pop
inc
jno
add
mov
sbb
sub
shrl
rolb
mov
sub
sbb
es
out
jo
mov
mov
lahf
mov
roll
pop
in
adc
in
or
push
cmp
adc
rolb
mov
mov
pop
inc
xchg
cmc
add
add
lcall
jae
in
xchg
jge
sbb
mov
and
pop
mov
icebp
jns
fcoml
mov
popf
xchg
add
test
neg
movsl
daa
xchg
adc
pushl
adc
mov
add
mov
addb
jnp
ret
cmp
sbb
add
mov
add
repz
adc
in
inc
sbb
pop
loope
addl
or
aaa
mov
add
fsub
adc
mov
ds
in
push
add
push
xor
mov
test
shll
xchg
daa
data16
mov
xor
mov
mov
jg
adc
mov
out
int3
fwait
lods
jmp
imulb
push
sti
scas
cmp
sbbl
stos
lea
mov
jb
mov
cmp
out
dec
inc
nop
add
and
mov
add
add
mov
add
mov
xlat
cmp
mov
xchg
add
dec
ret
jae
xor
mov
ljmp
mov
add
testl
mov
add
mov
daa
ljmp
mov
add
jae
add
jnp
cmp
add
add
mov
popa
add
mov
loope
scas
mov
add
enter
imull
or
outsl
rolb
and
add
in
pop
sub
test
jge
adc
jmp
add
xor
add
add
sub
push
int3
nop
add
mov
add
push
scas
lock
cmp
mov
cs
jns
pop
or
test
add
out
push
lahf
pop
xor
add
addb
and
js
add
dec
inc
add
stos
pop
in
clc
loopne
mov
cwtl
jmp
add
mov
imull
sahf
pusha
add
fldcw
aam
jbe
push
rolb
mov
jb
mov
add
mov
lahf
icebp
test
mov
xchg
mov
cli
cld
jno
inc
add
fcoms
mov
dec
cltd
pop
inc
add
cmpl
or
mov
push
rolb
mov
mov
sub
enter
pop
sbb
fistl
fildl
les
pop
push
fimull
test
pop
and
sub
and
out
xor
mov
lret
cmpl
iret
xchg
mov
cmp
and
mov
jbe
add
sub
cmp
mov
jns
or
mov
faddl
add
sbb
stos
outsb
cmc
test
stos
and
mov
imul
rolb
jp
xchg
jmp
ret
cld
mov
mov
mov
push
mov
inc
nop
add
aam
dec
dec
pop
jg
mov
mov
or
loop
mov
aas
push
cwtl
cs
mov
cs
add
les
push
lret
mov
out
loopne
mov
popa
int
add
adc
ja
mov
fldl
mov
stos
leave
outsl
les
sbb
pop
imul
push
pusha
add
mov
pop
shll
add
xchg
imul
outsl
iret
roll
add
add
sti
scas
in
xchg
call
xchg
insl
stos
push
inc
add
xor
mov
add
mov
in
jp
push
sti
fdivrs
pushf
rolb
mov
add
repz
adc
cltd
out
jo
mov
mov
xchg
popa
dec
jmp
jge
add
les
imul
stos
mov
js
mov
pop
lods
cmpsl
cmpsl
scas
push
mov
adc
mov
mov
sub
mov
push
out
mov
mov
mov
mov
std
out
scas
mov
imul
add
mov
add
clc
xchg
mov
gs
add
sbb
add
push
and
mov
cmc
adc
sbb
mov
ret
addb
cwtl
cmp
mov
lock
mov
add
xchg
push
addr16
and
mov
adc
push
test
pop
push
xchg
sbb
nop
add
je
or
dec
jne
fistl
popf
add
imul
mov
cmp
add
mov
jno
jb
mov
add
inc
add
lods
out
mov
add
mov
push
add
pop
push
dec
mov
mov
aad
cmp
pop
gs
cmpsb
imul
add
and
jecxz
nop
add
pop
mov
cmp
add
mov
add
test
add
cmp
sbbl
cmp
add
scas
sbb
aas
dec
add
push
cmp
pop
sbb
cmpl
in
dec
bound
mov
cmp
fldenv
add
mov
pop
test
fistps
push
add
movsw
push
jl
and
mov
mov
push
add
jns
add
mov
inc
in
add
scas
inc
add
scas
mov
out
lret
fmuls
dec
cmp
or
cmp
xlat
xor
mov
xchg
insb
lret
jl
sub
add
inc
mov
add
mov
fwait
jbe
test
das
and
or
inc
mov
jl
sahf
jns
inc
mov
sub
in
cmc
or
add
out
dec
and
inc
lcall
add
popa
int3
push
inc
add
lcall
divb
cld
pushf
shll
inc
scas
sbb
lret
add
fstps
out
push
in
ja
xor
add
nop
add
mov
jae
subl
pop
dec
sbb
xor
dec
adc
pop
rolb
mov
in
add
sub
jnp
mov
xlat
mov
mov
push
cld
stos
movsl
out
dec
repz
mov
test
mov
outsb
addb
pushf
and
mov
mov
out
adc
mov
jge
jecxz
scas
or
push
xchg
into
into
cltd
out
or
lock
jmp
or
xchg
add
test
int
xchg
add
xor
test
mov
jg
add
xor
push
int
jecxz
mov
fmuls
sbb
add
cli
lret
sti
in
subl
sbb
mov
add
mov
add
filds
rolb
mov
popa
push
out
jmp
pop
fcompl
icebp
lret
scas
rorl
push
ljmp
mov
or
outsl
mov
or
or
dec
and
mov
outsb
adc
mov
jns
add
add
jp
imul
add
js
stc
mov
add
mov
lds
loop
mov
in
mov
dec
and
fsubl
mov
add
push
add
mov
out
rolb
mov
push
add
fwait
scas
mov
roll
add
cs
jge
pop
jp
or
xchg
aad
add
imul
imul
mov
and
mov
add
mov
data16
dec
add
lret
test
and
addb
ljmp
jp
ja
dec
and
mov
addb
sbb
fistl
iret
mov
xor
mov
xchg
fnstsw
jbe
mov
add
jns
js
imul
or
xor
test
sub
pop
xchg
rcr
std
dec
inc
sbb
sub
add
aad
cwtl
addb
ljmp
adc
mov
dec
sbb
xor
mov
push
jecxz
sub
pop
shll
rolb
mov
and
mov
push
add
add
aas
icebp
outsb
mov
push
lret
es
in
mov
add
test
add
mov
add
inc
add
and
nop
add
fildll
mov
mov
pop
pop
and
mov
mov
mov
addb
and
int3
xchg
sti
xchg
push
call
mov
call
inc
add
outsl
ret
cltd
outsb
mov
mov
add
add
add
add
add
imulb
pop
pusha
add
pushf
sahf
imul
sub
outsl
fmuls
bound
mov
es
repnz
rcrl
das
inc
add
inc
add
add
int3
push
add
cmp
lahf
addb
pop
daa
inc
add
lcall
add
rorl
call
mov
push
mov
cmp
lret
xchg
mov
mov
jge
xor
mov
add
pop
in
mov
std
ds
pop
pop
test
mov
mov
jecxz
jb
mov
mov
arpl
aaa
pop
pop
scas
mov
sub
cli
cmp
pop
mov
jmp
adc
mov
mov
dec
int3
insb
divb
pusha
add
hlt
pusha
add
sbb
std
cmp
inc
loop
mov
das
pminsw
stc
mov
rolb
mov
mov
add
add
jge
xchg
pop
mov
cmp
rcr
inc
ss
mov
out
mov
cmpsb
lahf
push
lods
ds
jmp
scas
cmp
push
out
bound
mov
add
mov
hlt
mov
mov
add
repz
lahf
rolb
dec
xchg
sub
gs
sbb
fisttpl
inc
push
rolb
mov
mov
add
int
jo
mov
lea
mov
ret
out
movsl
scas
sub
fdivl
sub
mov
cmpsb
mov
sbb
sbb
mov
jg
scas
mov
add
daa
or
cmpsl
shll
mov
rcll
mov
add
sub
fnstsw
sub
xorl
mov
sbb
add
mov
inc
add
add
pushf
lret
pop
pop
in
lret
lret
loope
mov
mov
add
xchg
xor
mov
lock
dec
mov
add
jne
sub
jmp
add
xor
mov
pusha
add
add
xor
out
test
fidivrs
lds
addb
xchg
jb
mov
add
sbb
js
repnz
aam
inc
add
ret
roll
inc
addr16
add
in
push
or
fadd
add
add
mov
adc
mov
negb
mov
in
in
push
imul
pop
pushf
adc
add
add
or
adc
or
frstor
mov
add
and
add
mov
loope
daa
cs
mov
or
sub
btc
or
add
xlat
pop
out
sub
cmc
mov
lds
add
xchg
mov
pusha
add
pop
or
sub
mov
jne
je
mov
mov
mov
sub
add
mov
pop
outsb
call
add
add
mov
cmp
inc
scas
xor
lods
jo
mov
popa
lods
jmp
je
cmp
aas
or
fldl
movsl
cmc
and
mov
mov
mov
mov
dec
xor
mov
dec
cmc
dec
add
scas
and
popf
sub
icebp
fisubs
add
sub
out
mov
cltd
pop
adc
add
sub
pop
mov
or
add
and
mov
fcomp
xor
stos
addr16
out
inc
lahf
sti
adc
mov
add
pop
push
fisubs
out
fldcw
sti
in
adc
mov
jnp
xchg
clc
lods
add
mov
xchg
jle
popf
mov
or
add
xchg
in
daa
adc
mov
add
test
xchg
or
push
xchg
inc
or
sub
push
push
pop
pop
popa
xor
lods
pop
aaa
nop
add
mov
cmpsb
popf
popf
add
insl
or
in
sahf
mov
fstl
add
mov
add
daa
xchg
add
outsb
lret
mov
jl
sub
mov
dec
iret
cmp
clc
jo
mov
popf
sub
add
notl
add
add
divl
fwait
xchg
mov
add
mov
scas
and
xor
mov
mov
cmpsl
xor
mov
inc
cli
cmc
imulb
push
push
add
sub
iret
es
mov
aaa
iret
aad
insl
cmpsl
shll
sbb
imul
mov
mov
mov
cmp
enter
push
add
add
add
divb
xchg
fldt
and
mov
cmp
fisubrl
or
inc
out
and
mov
imul
pop
push
fildll
enter
jnp
push
stos
pusha
add
mov
add
mov
pushf
add
and
scas
test
stos
push
add
mov
call
adc
and
or
adc
mov
je
in
xor
sub
loop
mov
pusha
add
lret
addb
popa
push
add
mov
mov
incb
push
add
cld
sub
push
stc
jbe
jb
mov
ret
xor
mov
add
mov
rolb
xchg
cld
mov
out
lock
jle
in
std
push
lcall
mov
ljmp
mov
xchg
dec
add
mov
cmp
add
pop
add
repz
push
jl
inc
sbb
add
aas
shll
push
push
jb
mov
clc
aam
add
add
sarl
inc
fisubl
push
add
dec
push
mov
loope
add
std
scas
lock
inc
sub
or
loopne
mov
leave
push
pop
stc
into
in
pop
mov
xor
xchg
add
mov
mov
mov
cmp
cmc
fwait
lret
repnz
push
rolb
mov
lcall
leave
adc
jae
pusha
add
and
add
mov
test
dec
add
push
nop
add
and
fcmovnbe
add
mov
sahf
lcall
enter
push
add
mov
and
mov
mov
adc
jecxz
stos
jmp
hlt
test
ja
add
mov
inc
jno
mov
mov
fstl
lea
out
rolb
mov
and
mov
or
sbb
loopnew
mov
sahf
mov
add
dec
outsl
sbb
mov
add
xchg
fdivl
xchg
add
adc
mov
sbb
jmp
loope
xchg
xchg
add
gs
inc
or
aam
leave
pop
lods
popa
subl
stc
or
das
cmpsl
jmp
insb
cmpsb
sbb
jge
jnp
jo
mov
jp
or
outsb
xor
and
pause
add
pop
rolb
mov
add
mov
pop
loop
mov
add
into
iret
xchg
mov
add
dec
push
xchg
jge
add
and
jno
add
jb
mov
mov
repnz
jmp
mov
sub
add
or
fldl
add
add
pop
lods
outsb
mov
jp
iret
dec
sbb
mov
les
push
add
js
fwait
jno
scas
dec
mov
lds
fsts
je
enter
in
push
in
lds
mov
jle
sbb
inc
movsb
xor
fsubs
dec
je
jo
mov
outsb
lods
ret
jmp
lcall
add
nop
add
pop
js
ret
pop
push
add
ret
lock
mov
sbb
or
add
cld
xor
xchg
insb
cmp
pop
pop
inc
add
cmpsb
clc
cwtl
jne
or
inc
mov
or
mov
add
sub
add
add
add
mov
push
sbb
adc
cmp
add
sbb
addb
lahf
mov
add
mov
add
add
mov
xchg
mov
dec
push
call
jp
mov
mov
jb
mov
add
testl
scas
aad
inc
add
lcall
mov
add
mov
jmp
insb
repz
inc
dec
fistl
out
adc
lods
adc
add
jle
push
push
movsb
daa
inc
fidivl
push
cmp
dec
pop
enter
stos
push
cmpsl
fsubs
pushf
stc
inc
sbb
outsl
aaa
pop
mov
mov
ss
sbb
cmp
cld
adc
adc
lcall
test
out
mov
xchg
add
in
mov
lds
fisttpl
mov
add
pop
es
sub
fsubs
ret
push
jp
add
mov
lret
push
lock
add
daa
ja
imul
cltd
std
inc
fistpl
mov
sahf
xchg
imul
into
push
xchg
mov
mov
rcll
scas
push
add
clc
pop
mov
pop
mov
arpl
mov
jmp
mov
fwait
pop
or
test
fsub
xlat
mov
arpl
sti
lods
fsincos
add
ljmp
jmp
dec
cmp
mov
add
add
push
js
xchg
inc
fwait
pop
hlt
addb
mov
mov
adc
and
add
loopne
mov
sub
add
pushl
add
mov
push
add
mov
out
push
lds
and
add
xor
cli
and
mov
out
fstps
shll
sub
mov
mov
test
ljmp
aas
inc
add
bound
mov
test
adc
jne
addb
fidivs
or
data16
daa
xchg
push
add
int
mov
jbe
mov
addr16
and
mov
mov
sbb
jecxz
in
or
pop
jmp
sti
xor
mov
add
mov
xor
mov
fsubs
mov
daa
adc
jmp
jle
dec
and
mov
xor
or
xor
rolb
jmp
or
mov
inc
add
add
mov
lcall
ret
xor
mov
xchg
testl
add
int3
add
mov
add
addb
mov
xchg
les
fnstcw
add
or
aas
xor
popf
mov
inc
fmuls
jmp
aas
mov
cmc
or
add
lods
cmp
rolb
mov
xor
mov
aas
cmpsb
sub
adc
in
loopne
mov
add
test
jle
adc
mov
xchg
add
stos
ss
sbb
mov
jmp
dec
outsb
stc
push
lahf
insb
jb
mov
sbb
mov
mov
inc
lds
out
push
cmp
add
dec
movsl
adc
push
sub
push
fs
mov
jns
xchg
add
and
add
arpl
stos
jb
mov
add
sbb
scas
cmpl
enter
mov
xchg
mov
sbb
out
int
lea
add
inc
push
pop
imul
add
pop
dec
pushf
jb
mov
ljmp
in
aas
loop
mov
pop
bound
mov
push
add
rolb
rolb
mov
inc
xchg
add
add
push
test
test
bound
mov
mov
mov
add
pop
xchg
add
mov
mov
add
fimull
loop
mov
insl
stc
and
or
xor
push
add
cwtl
pop
fs
mov
push
add
pop
mov
add
aas
jb
mov
cmc
gs
sahf
roll
add
or
push
das
dec
or
adc
mov
mov
loopne
mov
lods
xchg
mov
add
pusha
add
cmc
test
fsubrl
call
fs
push
add
icebp
or
das
xchg
leave
pushf
push
or
or
add
or
mov
push
mov
add
sub
xrelease
inc
add
inc
add
mov
add
or
xchg
jle
divl
push
mov
mov
addb
scas
stos
pop
push
add
sub
or
and
fwait
scas
lds
rolb
mov
popf
popa
std
inc
mov
mov
sbb
fyl2xp1
ret
imul
das
and
repz
adc
loope
outsb
xchg
sbb
adc
mov
sbb
mov
add
mov
mov
ret
cwtl
cld
je
outsb
or
stos
mov
mov
cmp
fs
cs
daa
pop
xor
mov
xchg
mov
xchg
adc
mov
add
mov
add
and
lock
dec
out
ror
add
mov
cmp
cmp
rolb
mov
repz
add
push
cmp
ja
add
cmp
out
pop
xor
add
mov
mov
shll
test
and
repnz
out
cmp
mov
xchg
sub
pop
data16
add
cmpsl
pop
cmpsl
bound
mov
mov
xchg
sbb
dec
outsl
ljmp
movsb
inc
add
adc
xor
outsb
lret
push
add
test
inc
add
mov
sbb
lahf
jl
adc
mov
add
rcl
add
xor
arpl
fsub
inc
cmp
repnz
and
add
out
mov
mov
mov
enter
dec
loop
mov
fisubl
add
add
jbe
sar
out
lock
filds
pop
sub
sub
outsb
push
xor
push
cmp
push
aas
popw
sub
and
mov
push
mov
inc
add
pop
sub
shll
dec
cmp
pop
cltd
fdivs
add
add
dec
push
cmc
shl
mov
jbe
push
inc
add
scas
lds
add
mov
data16
sub
xchg
out
arpl
je
mov
add
add
cwtl
pop
and
aad
fs
je
jg
or
lahf
data16
mov
aam
lahf
pusha
add
mov
lds
mov
scas
iret
std
xor
add
mov
cltd
jb
mov
add
or
add
pop
call
mov
icebp
outsl
dec
aas
sub
outsl
daa
jge
outsl
sbb
push
add
mov
ret
jo
mov
mov
adc
push
add
push
add
icebp
push
jns
add
mov
test
roll
jo
mov
std
das
ret
pop
repz
ficoms
add
fwait
mov
sti
mov
xchg
cli
push
clc
mov
push
add
adc
inc
loopne
mov
add
cmp
imul
cmpsl
inc
mov
and
mov
pop
aad
adc
mov
lret
fdivp
add
mov
in
rorl
mov
popa
or
jp
lods
hlt
lds
out
add
les
xchg
fistpl
imul
mov
mov
sub
in
xor
rolb
mov
xchg
mov
push
mov
in
repnz
and
int
add
mov
add
mov
mov
enter
and
mov
cwtl
ds
ret
xor
test
jp
and
mov
nop
add
subps
inc
sub
rolb
mov
push
xor
mov
mov
test
sub
ret
sbb
add
xchg
dec
int
rcll
add
add
sti
inc
lahf
rolb
mov
mov
add
aad
inc
add
scas
mov
add
mov
sahf
jae
test
mov
add
punpckhdq
imul
pop
or
sub
lods
sbb
mov
test
adc
mov
loopne
mov
outsl
jnp
inc
add
dec
jo
mov
add
call
add
decl
std
cmc
xorl
mov
mov
lods
movsb
neg
xchg
mov
and
in
pop
ficompl
add
sub
mov
dec
xchg
push
insb
adc
addb
rcrl
add
cld
cs
mov
add
mov
dec
push
inc
add
mov
into
dec
outsb
sub
arpl
fildl
rolb
mov
dec
and
mov
lret
repnz
xchg
mov
adc
mov
adc
mov
mov
ljmp
xor
mov
mov
inc
push
fsubr
xor
mov
rolb
mov
xchg
mov
add
cmp
jnp
cmc
cli
arpl
scas
jbe
lcall
sub
mov
mov
mov
roll
rolb
push
mov
mov
adc
dec
lea
outsb
pop
push
push
adc
xor
pop
mov
add
jb
mov
ljmp
mov
sbb
push
dec
sbb
cmp
dec
sub
leave
xor
add
enter
add
sub
jb
mov
into
cli
iret
push
add
and
loopne
mov
lods
test
pop
addb
add
sub
xchg
mov
xor
inc
aaa
jae
out
fdivp
add
xor
mov
sub
pop
xchg
fwait
int3
bound
mov
pushf
and
rolb
mov
aas
gs
cmp
pushf
jg
jne
cmp
fnstcw
cltd
jp
call
repnz
or
add
imul
mov
add
add
add
adc
mov
std
mov
lcall
ljmp
dec
mov
add
cmp
mov
scas
jmp
cmp
addb
cli
rolb
mov
pop
ficoml
movsl
cli
ficoml
mov
add
incb
xor
mov
xchg
add
imul
int3
bound
mov
add
popf
insl
push
les
mov
xor
pop
inc
add
xor
into
in
or
out
out
loope
push
add
add
cli
pushf
cmc
mov
xchg
sub
add
outsb
inc
add
mov
out
dec
sbb
push
icebp
xchg
pop
ret
add
add
fs
test
add
sbb
add
add
dec
add
shr
stc
into
pop
push
mov
lcall
sub
add
mov
pop
rolb
mov
movsl
or
mov
push
push
repz
dec
adc
mov
push
add
enter
pop
lds
mov
mov
filds
inc
add
xor
mov
add
les
fwait
add
xlat
imul
sub
pop
sbb
data16
add
mov
mov
add
push
add
cmp
push
jns
lret
dec
cmp
cmpsl
xor
insb
xor
add
xchg
xor
aad
fisttpll
add
insb
lret
inc
push
push
add
mov
push
xor
mov
inc
or
arpl
jg
pop
sbb
jg
fwait
jo
mov
inc
dec
xor
push
cld
addr16
cs
movsb
pushf
or
adc
mov
push
fdivr
add
mov
frstor
lods
pop
into
pop
dec
shll
jecxz
jge
sbb
stos
ret
lahf
out
mov
ficoml
add
or
ret
mov
out
adc
mov
add
dec
scas
loop
mov
std
dec
jmp
fwait
sbb
outsl
add
xor
mov
add
jl
rolb
loopne
mov
add
add
sbb
stos
je
inc
cmc
inc
add
fildll
nop
add
mov
push
stos
pop
test
lret
ja
add
mov
sarl
adc
das
push
add
pusha
add
mov
sub
mov
cwtl
int3
xor
mov
add
mov
add
and
loopne
mov
insb
adc
mov
int
fstl
xor
mov
add
ret
xchg
mov
or
push
stos
push
aam
add
cmp
sbb
push
popf
push
sub
mov
movsb
addl
je
add
cmpsb
or
add
or
movsl
push
add
icebp
adc
mov
inc
mov
mov
jb
mov
lahf
mov
push
push
stc
cmpsb
mov
push
nop
add
test
push
add
lret
mov
cltd
cmpsl
xchg
aas
adc
mov
pop
adc
mov
arpl
xor
jmp
mov
inc
push
push
inc
jle
push
faddl
jbe
into
or
add
mov
mov
or
add
mov
jns
shl
out
push
cmp
xor
mov
mov
adc
mov
dec
adc
mov
ret
mov
dec
cmp
add
mov
jns
add
cwtl
adc
repz
ret
mov
sbb
movsb
mov
push
lods
int3
dec
sub
call
dec
mov
jmp
pushf
jmp
mov
fists
adc
mov
jns
add
pusha
add
dec
ret
adc
mov
xchg
popa
inc
outsl
mov
in
ret
sbb
mov
aas
dec
in
add
mov
or
add
in
movsb
leave
and
push
add
int
xchg
add
push
mov
ljmp
mov
jns
and
pop
insb
mov
jmp
outsl
xchg
sbb
sub
fidivl
add
jmp
adc
das
int
inc
cmp
sub
loope
sbbl
pop
movsl
int3
mov
add
pop
jne
add
sub
cmp
add
jb
mov
xchg
aam
ss
add
popa
imul
add
push
jp
add
loop
mov
leave
inc
add
add
add
hlt
jl
leave
cli
cmpsb
jecxz
add
stc
mov
mov
add
jae
add
add
mov
add
add
repnz
lahf
cmp
pop
leave
dec
ja
xchg
mov
add
scas
sub
mov
add
push
add
cmpsl
jle
jle
fs
mov
mov
inc
addb
pop
mov
frstor
add
dec
push
test
add
and
lods
ret
or
xchg
lret
jge
arpl
add
es
mov
cmp
cwtl
repnz
mov
dec
out
rolb
mov
xchg
add
mov
enter
jge
insl
sub
add
mov
cs
test
cmp
clc
push
add
cmpsl
push
clc
inc
and
push
out
add
nop
add
pushf
fistps
add
xlat
sub
add
les
jmp
sahf
xchg
icebp
dec
enter
hlt
sub
sahf
inc
add
pop
sbb
or
cltd
fdivs
mov
add
in
out
inc
outsl
data16
mov
pop
pop
dec
call
outsb
push
std
cmpl
mov
add
mov
add
imul
jno
pop
rolb
idivl
adc
mov
mov
xchg
addl
jg
aaa
lret
ftst
in
add
jb
mov
sub
movsb
pop
fsts
and
mov
loop
mov
add
addb
cli
enter
sbb
addb
dec
xor
loop
mov
and
jl
mov
pop
insl
pop
or
xor
mov
xchg
test
or
ds
xchg
inc
mov
inc
sub
add
jge
add
addb
rolb
mov
cltd
push
insb
push
xor
mov
push
add
lods
push
jmp
add
mov
mov
rolb
mov
add
mov
fs
mov
outsl
inc
jae
add
fbld
xchg
add
ud0
dec
push
fs
test
add
int3
mov
test
repz
aad
jmp
repnz
adc
mov
add
dec
lock
outsb
jno
or
aaa
dec
jle
add
mov
mov
scas
jle
addl
add
das
cmp
std
adc
add
pop
adc
jb
mov
lea
insl
sti
nop
add
fbstp
mov
pusha
add
push
orl
mov
add
mov
xchg
add
xchg
sti
sti
mov
add
add
mov
sbb
mov
mov
jmp
imul
add
int3
inc
add
add
mov
ljmp
add
or
xchg
cmpsb
addb
mov
or
mov
cmpsb
adc
mov
cwtl
out
lret
xchg
add
inc
jb
mov
pop
rolb
mov
mov
fimull
mov
outsb
sahf
in
bound
mov
into
inc
sub
jp
xchg
cmp
xchg
sbb
dec
in
or
movsb
gs
fsubl
jp
inc
add
daa
cmp
mov
popa
fcoml
add
push
add
mov
loope
fcoms
mov
add
call
repnz
bound
mov
cld
fld
add
add
aam
xchg
xor
mov
rolb
mov
adc
sub
add
addr16
push
sbb
rolb
test
add
arpl
add
cmc
scas
jle
rolb
mov
add
or
inc
lahf
mov
jae
cwtl
sub
pop
push
outsb
sbb
and
adc
push
rolb
dec
cmpsl
scas
xchg
push
aam
xor
mov
add
pusha
add
lret
jle
jmp
adc
mov
push
pop
std
loop
mov
pop
iret
xor
and
mov
mov
rolb
mov
push
add
inc
mov
sahf
adc
mov
add
mov
outsb
pop
test
lods
subl
aaa
cltd
mov
push
fwait
add
xor
fnstenv
add
ret
add
mov
dec
ret
cmpxchg
mov
xchg
arpl
cmc
ret
movsb
jle
xor
addb
scas
inc
add
mov
repnz
adc
mov
pop
xor
mov
add
push
mov
es
ljmp
xor
arpl
inc
inc
add
sub
div
push
sbb
cwtl
in
add
pop
filds
inc
add
test
sbb
xchg
push
jne
sahf
xrstor
ss
or
in
cwtl
cmp
pop
movsb
in
dec
cmc
mov
xchg
add
cltd
mov
inc
push
jo
mov
inc
lret
add
add
jp
iret
int
mov
movsl
mov
ljmp
xchg
fsubl
lods
lds
add
add
add
mov
jecxz
mov
mov
mov
xchg
out
adc
push
xchg
mov
leave
in
xor
loop
mov
dec
and
mov
adc
aad
add
mov
sub
mov
mov
test
cltd
rolb
dec
mov
cmp
xor
mov
xchg
lods
int
add
mov
lods
out
sub
inc
mov
mov
push
stc
les
push
cmc
cltd
es
repz
mov
out
sub
mov
jne
add
stos
ljmp
mov
leave
data16
loop
mov
add
add
and
xchg
add
mov
sti
sar
jne
pop
cmc
test
jae
or
add
or
adc
mov
fwait
gs
lret
loopne
mov
in
push
adc
mov
add
mull
push
fsubs
inc
cmp
dec
jae
addb
jge
or
jl
addb
xlat
or
leave
cmp
and
mov
xchg
pop
fimull
ds
xchg
and
mov
add
mov
add
add
mov
pop
flds
xchg
push
adc
mov
fmulp
adc
mov
add
jmp
xchg
add
mov
or
lea
enter
jns
adc
mov
xor
enter
inc
stc
rolb
mov
repz
pop
xchg
leave
adc
mov
insb
sub
adc
mov
and
xchg
scas
push
mov
scas
pop
add
jp
out
xchg
add
scas
scas
cmp
mov
push
add
add
addr16
test
cmp
mov
jle
cmpl
fdivl
fsubrs
setge
sub
pop
dec
push
add
pop
xor
mov
lcall
add
flds
add
mov
arpl
adc
mov
jmp
fwait
data16
cs
sbb
xor
mov
pop
test
int
movnti
mov
das
jle
sbb
es
call
cmp
scas
aaa
es
das
test
loope
inc
and
mov
jns
movsb
push
cmpsb
loope
and
push
test
xor
sbb
lods
and
mov
add
add
fmuls
add
mov
aad
add
sub
arpl
xor
mov
andl
mov
xchg
fwait
aam
xchg
xor
mov
fcoml
add
inc
clc
cmpsb
dec
out
loopne
mov
stos
aam
sub
movsl
or
daa
test
cmp
add
sub
add
push
pop
icebp
out
or
lcall
xor
in
push
sub
icebp
hlt
cltd
jns
loope
pop
enter
aam
pop
mov
mov
add
fcmovnu
cmp
imul
addr16
adc
hlt
aad
jle
mov
mov
addr16
bound
mov
mov
dec
or
out
pop
and
mov
ficoml
dec
pop
mov
lods
stc
mov
adc
mov
add
cmpsb
test
and
mov
xchg
mov
mov
pop
cli
sbb
mov
add
adc
mov
add
mov
pop
in
pop
cmp
mov
inc
gs
ds
fsubs
fadds
shll
add
ss
or
add
mov
bound
mov
add
pop
out
xchg
pop
fistpll
jne
pop
adc
mov
add
mov
adc
sbb
mov
mov
sub
mov
adc
mov
lds
push
sub
pop
in
dec
or
jge
outsl
mov
add
mov
jo
mov
mov
sbb
imul
sti
in
mov
and
psubusb
stos
sbb
je
add
pop
dec
ret
jg
out
add
adc
push
mov
mov
in
aad
lahf
lods
aas
push
add
add
dec
std
lret
adc
mov
adc
dec
sub
push
add
mov
add
add
mov
stos
push
in
mov
inc
dec
loop
mov
out
jo
mov
lret
dec
stos
mov
ljmp
and
int3
push
cmpsb
sbb
add
cmp
icebp
cmpsb
idivb
adc
mov
add
jmp
xchg
dec
mov
mov
test
test
and
mov
and
outsl
insb
lods
fimuls
xor
xlat
dec
cli
out
inc
xchg
add
dec
rolb
mov
lret
mov
push
out
xor
ja
outsl
pop
cmp
cmpsb
mov
movsl
push
mov
mov
or
adc
faddl
add
mov
pop
sbb
push
mov
cmpsb
xchg
mov
mov
add
stos
mov
clc
fildll
aas
mov
fdiv
sti
xor
mov
pop
fidivl
xchg
addr16
mov
push
sbb
test
cmpsb
adc
cltd
int
addb
fadds
mov
in
repnz
inc
inc
add
jg
sahf
and
xchg
ds
cmp
ja
add
mov
jl
add
lea
add
mov
jns
fdivs
mov
fnsave
cmp
sbb
mov
ds
adc
pop
rcl
mov
add
stos
rolb
mov
xchg
rolb
mov
int3
aad
add
add
jns
faddl
sbb
or
push
filds
add
add
mov
cmp
add
sbb
test
fisttpl
push
adc
popa
das
out
jb
mov
push
inc
lret
lock
mov
or
inc
mov
mov
shrl
mov
pop
mov
cmpsl
inc
std
ja
add
jl
rol
mov
mov
sub
fwait
cld
aad
xor
mov
mov
pushf
or
in
mov
movd
mov
add
jne
xor
mov
cmp
and
xchg
cmpsl
pop
pop
rolb
mov
pop
notb
push
lods
gs
mov
nop
add
cmp
inc
lea
stc
pop
mov
out
mov
rolb
rolb
mov
filds
push
call
out
mov
fcomi
add
push
push
mov
mov
stos
ja
dec
push
inc
add
dec
sbb
inc
lahf
lods
scas
xchg
add
add
js
jmp
notb
testb
cli
fs
fcmovb
cmp
mov
add
pop
push
rolb
jg
jnp
add
movsb
mov
mov
mov
add
mov
ret
and
mov
jle
pop
xchg
inc
add
cwtl
cmp
mov
cmp
adc
pop
rolb
mov
dec
out
cmp
popa
jo
mov
sub
cmp
xor
or
sbb
int3
addl
mov
mov
add
mov
lds
lahf
mov
mov
mov
or
mov
add
pop
mov
add
mov
push
sub
sbb
mov
mov
mov
mov
push
mov
add
xor
mov
cwtl
add
mov
and
mov
jae
popa
inc
lret
mov
add
add
test
mov
int3
bound
mov
pop
xor
mov
inc
fst
and
push
fwait
mov
push
add
cs
sub
sub
jge
repnz
mov
es
push
icebp
fs
sarl
push
stos
lar
mov
mov
mov
mov
ss
inc
xor
add
push
fsubrl
mov
adc
mov
das
xchg
xchg
arpl
jmp
add
push
add
inc
push
js
add
jmp
scas
test
loopne
mov
sub
rolb
mov
stc
sbb
lds
stos
xchg
out
mov
shll
add
add
add
test
roll
and
rolb
mov
or
mov
add
mov
mov
adc
inc
ret
loop
mov
mov
mov
pop
or
sub
notb
outsb
gs
mov
mov
lret
and
inc
push
addr16
mov
test
pop
inc
add
add
jl
xor
mov
ja
xlat
rolb
out
pushw
jl
in
lds
mov
dec
inc
mov
add
mov
lods
fcmovb
icebp
out
adc
mov
ljmp
les
mov
mov
insb
cmp
test
push
push
add
and
add
cs
aam
sbb
add
sbb
fnstsw
mov
mov
sarl
mov
xchg
rolb
out
ds
fsubl
cltd
fisttps
adc
mov
loop
mov
mov
jbe
in
add
mov
push
sbb
pop
call
addr16
scas
xchg
cmp
mov
cmp
ja
jnp
ds
add
das
cmp
fimuls
ja
add
mov
stos
stos
jns
mov
mov
lea
mov
out
mov
mov
mov
or
add
mov
fs
jns
pop
enter
or
leave
imull
add
add
mov
inc
add
add
mov
xchg
pusha
add
mov
roll
sbb
add
jle
add
sbb
in
subl
jne
sbb
jl
and
mov
in
sbb
push
jne
aaa
pop
arpl
into
fsubs
push
sbb
sub
add
add
dec
add
mov
add
mov
dec
pop
mov
add
mov
sbb
sub
jbe
xchg
pop
or
in
add
sbb
enter
sbb
data16
mull
cmp
rolb
mov
add
stos
jne
int
cs
xchg
add
add
mov
add
ljmp
outsl
or
and
mov
repnz
negb
sahf
mov
lahf
cmpsl
mov
dec
test
add
aam
loop
mov
repz
cmpsl
daa
cmpsb
call
cmp
test
jns
xchg
nop
add
jl
mov
aad
push
stos
adc
mov
insb
jmp
sti
aas
push
xor
cmp
mov
mov
add
mov
sub
fldt
je
pop
mov
mov
and
mov
mov
in
jae
insl
dec
add
enter
add
add
xchg
add
jg
pop
jmp
roll
notb
pop
das
mov
test
mov
mov
add
jae
sti
test
fbstp
leave
out
test
push
cmp
add
out
jmp
fimuls
fstpl
ljmp
add
cmp
push
lock
mov
jmp
push
cmpsb
push
jnp
add
add
pop
fs
push
adc
mov
rolb
aad
into
in
or
add
mov
jns
add
sub
loop
mov
iret
std
inc
lahf
stos
shrl
or
cwtl
adc
mov
int3
adc
mov
xchg
sahf
jns
gs
add
test
dec
fstpt
lods
mov
jae
icebp
jne
xchg
ret
adc
sbb
xchg
adc
push
cmpsl
out
insl
mov
xchg
inc
pop
movsl
sti
movsb
xchg
push
add
xchg
mov
add
rolb
mov
inc
stc
enter
mov
sbb
test
xor
mov
add
mov
aad
out
mov
jmp
roll
add
cmpsb
mov
shrl
xchg
ja
mov
add
mov
mov
mov
add
ds
push
add
scas
in
add
jns
je
pop
jno
xchg
scas
mov
push
add
adc
mov
xor
mov
popf
js
add
mov
mov
cmp
mov
aaa
push
add
mov
ret
scas
movsb
xchg
sub
jmp
mov
pop
icebp
adc
mov
add
add
add
leave
fld
add
mov
in
mov
test
push
std
pop
aas
fstp
stos
loope
lods
xor
rolb
mov
lret
stos
mov
pcmpgtw
add
loopne
mov
in
inc
mov
mov
and
mov
mov
test
pushf
dec
fs
in
in
mov
sbb
ficomps
cmp
es
add
xor
addb
test
add
jns
out
mov
pop
push
jle
dec
xor
mov
pop
xchg
sbb
mov
add
mov
loopne
mov
jns
lods
lods
into
cltd
pop
add
mov
insl
fsubl
mov
add
hlt
inc
scas
daa
ret
or
aaa
ds
fwait
jnp
mov
add
addb
rolb
mov
pop
xor
mov
stos
mov
mov
jle
popa
mov
cmp
sbb
add
lock
outsl
adc
ret
pop
mov
add
jl
sbb
out
pusha
add
ja
xor
inc
aad
outsl
add
inc
add
xchg
pop
rcll
add
mov
pop
xor
mov
add
mov
inc
mov
add
dec
or
lods
inc
add
aad
push
and
mov
pop
mulb
add
add
xchg
dec
rolb
mov
pushf
faddl
pop
out
xchg
cmp
decl
sub
mov
fs
in
dec
push
mov
sub
inc
lods
xlat
mov
pop
xchg
add
add
pop
leave
mov
mov
push
add
mov
mov
fstl
mov
jmp
addb
dec
mov
sub
mov
mov
jg
movsb
movsl
mov
stos
mov
mov
test
mov
add
mov
lds
pop
dec
add
mov
mov
mov
pop
fmull
lahf
imul
xor
mov
das
fiadds
mov
add
add
sbb
mov
add
cmp
sti
popf
inc
scas
mov
add
mov
pop
call
mov
in
and
mov
add
dec
pop
das
enter
xor
mov
into
inc
into
mov
add
push
sbb
addb
les
mov
xchg
mov
mov
cmp
sbb
xor
push
add
adc
mov
mov
bound
mov
and
mov
lods
sbb
in
xchg
and
mov
add
cwtl
fsubp
or
repz
pop
nop
add
inc
add
dec
andl
int3
mov
call
leave
mov
or
add
inc
mov
xor
mov
mov
in
jbe
adc
xchg
pop
test
mov
or
fisubl
xlat
push
cmp
popf
loop
mov
shrl
aad
cld
out
adc
jg
ja
jo
mov
pop
jle
loope
or
cmpsl
and
jo
mov
pop
dec
lea
out
int3
cmp
mov
dec
jns
sub
int3
push
mov
jmp
out
xor
mov
dec
mov
stos
jg
ret
cmp
add
cmp
add
add
lret
cli
nop
add
mov
mov
and
push
insl
insb
push
sete
mov
mov
lods
cld
pop
and
movsb
sbb
dec
lea
lods
scas
xchg
mov
inc
inc
lret
roll
add
pop
scas
add
mov
push
shll
mov
popa
inc
cmp
popa
push
add
pop
pop
out
leave
adc
sti
fmuls
push
or
xor
and
mov
mov
xlat
and
mov
int
lcall
lahf
push
mov
or
addb
or
mov
les
add
popf
fisubl
add
mov
add
pop
sub
lgs
fdivrs
mov
add
mov
and
mov
imul
mov
mov
outsb
mov
fwait
lods
sti
test
mov
mov
pop
repz
xchg
hlt
push
enter
xchg
cmp
mov
add
testb
add
mov
mov
sbbl
mov
add
mov
fs
adc
cli
imulb
mov
sti
out
mov
add
mov
add
adc
mov
rolb
or
dec
out
addb
jecxz
jmp
insl
int
dec
stc
sbb
mov
xor
add
xor
scas
out
insl
mov
popl
mov
loope
js
aaa
cmp
xchg
cs
in
sub
lods
dec
testb
jge
iret
and
mov
jno
adc
mov
add
push
xchg
mov
loop
mov
scas
mov
inc
add
insl
xchg
mov
cwtl
addb
repnz
push
in
ds
add
add
add
mov
rep
cmp
add
cmpl
push
add
add
mov
pop
cltd
push
sbb
jmp
push
cmp
mov
insb
mov
push
hlt
outsl
sar
add
pop
mov
sub
mov
jo
mov
pusha
add
scas
inc
inc
int
repz
sbbl
mov
xchg
mov
rcrl
sbb
mov
mov
cli
negb
cli
pop
mov
out
lods
dec
fucomp
stc
xchg
mov
mov
jb
mov
stos
test
inc
sub
xchg
in
cmp
sbb
rolb
mov
xor
dec
inc
mov
mov
xor
imul
mov
cli
filds
pop
jp
std
popf
shl
addl
stos
adc
lret
cmpsb
dec
mov
fstl
jge
mov
mov
xchg
xchg
add
pop
ds
out
dec
lret
mov
mov
imul
push
mov
aas
adcl
and
mov
jns
push
negb
add
inc
add
out
fiaddl
add
loop
mov
mov
mov
push
and
jg
pminub
pop
iret
cmpsl
xchg
roll
add
fnsave
mov
insb
mov
repz
inc
outsb
outsb
mov
add
and
lret
je
jecxz
adc
mov
lods
stos
bound
mov
mov
add
add
jg
xchg
and
sti
pop
imul
mov
lret
pop
mov
add
mov
addr16
in
daa
mov
xor
mov
out
xor
pop
mov
jo
mov
fldl
push
adc
mov
jnp
aas
rcll
lahf
dec
and
dec
cmp
add
aaa
sub
popf
pop
mov
xor
rolb
mov
bound
mov
pop
jb,pt
mov
ret
pop
xor
aas
lea
xchg
aas
loopne
mov
dec
lret
jnp
or
add
lds
mov
add
aad
mov
cld
inc
pop
sbb
xor
mov
and
add
dec
es
sub
mov
add
dec
and
mov
add
ja
add
leave
pop
daa
loope
add
jg
dec
and
mov
mov
mov
lret
push
sub
adc
nop
add
xchg
push
add
mov
sbb
negl
clc
xchg
add
sub
push
std
xor
add
add
push
xchg
and
mov
js
sub
add
mov
pop
or
xchg
push
cld
cld
out
ret
push
das
add
add
mov
inc
cwtl
icebp
test
add
dec
in
lret
xor
add
mov
sbb
pushl
cmp
and
iret
jnp
out
imul
inc
rolb
mov
add
mov
add
jne
add
mov
add
add
mov
inc
jns
mov
lock
pop
movsb
cmp
cmpsb
mov
iret
inc
jecxz
jle,pn
add
and
mov
mov
add
jns
dec
dec
rolb
mov
mov
add
loopne
mov
rcll
iret
mov
dec
xlat
dec
xchg
mov
push
je
sbb
xor
mov
add
add
mov
outsb
pop
sub
pop
pop
push
insl
adc
add
and
xor
in
or
cmc
leave
xchg
add
aam
jae
leave
sahf
mov
ljmp
pop
scas
pop
test
and
in
pop
lock
xchg
push
add
cmp
add
fildll
push
test
add
push
stos
les
add
call
mov
dec
dec
push
outsl
pop
fld
enter
pop
aad
mov
add
imul
rolb
xor
mov
jbe
xor
or
pop
sub
push
mov
nop
add
test
les
mov
ret
cmc
in
repz
imul
sub
mov
mov
addr16
loop
mov
test
add
dec
xchg
subl
bound
mov
and
add
lret
add
in
adc
and
dec
jnp
add
mov
movsb
dec
jne
popa
call
mov
inc
and
mov
pusha
add
call
push
or
add
xchg
add
add
add
push
add
add
add
add
xchg
loope
sub
out
mov
and
rcll
movsb
pop
xlat
iret
mov
or
loop
mov
add
ficoml
push
enter
xchg
add
xchg
add
push
test
repnz
add
jmp
sbb
insl
cmp
sarl
inc
aaa
xchg
adc
mov
es
loop
mov
inc
push
inc
add
into
pop
mov
test
pop
sub
jnp
mov
jge
add
xchg
inc
add
or
addb
mov
add
les
mov
sahf
cmp
stc
sarl
inc
sub
ss
dec
and
or
xor
cmp
lret
sub
ja
mov
xchg
int3
jmp
mov
mov
mov
mov
cmp
mov
add
xor
int3
mov
aam
out
das
fst
add
add
mov
bound
mov
dec
addb
and
mov
sarl
jbe
add
inc
pop
cmp
daa
cwtl
pushf
enter
in
out
jmp
jae
adc
mov
jp
fmuls
lcall
fnsave
mov
xor
mov
mov
add
sbb
and
add
mov
push
jns
sbb
add
mov
pop
loop
mov
cmc
add
mov
add
out
in
push
cld
or
out
dec
addb
and
ret
js
add
add
nop
add
add
add
mov
jns
mov
xor
sub
enter
ljmp
adc
mov
add
adc
mov
inc
xor
rorl
adc
cwtl
in
lock
xchg
add
ja
mov
inc
ret
ficoml
sbb
cmp
sbb
mov
add
fistpl
pushf
enter
mov
cmp
add
mov
sub
icebp
inc
add
fsub
add
inc
add
mov
mov
cmp
stos
xchg
pusha
add
inc
dec
int
pop
push
sub
nop
add
mov
add
add
push
jnp
adc
mov
add
les
mov
xor
sahf
dec
push
mov
pop
mov
lea
lret
dec
repnz
push
int3
loopne
mov
add
adc
mov
outsb
adc
xor
sub
xor
adc
mov
repnz
iret
jns
out
mov
mov
or
insb
outsl
inc
add
mov
in
cmp
push
lcall
push
add
cmp
mov
sub
es
inc
push
pop
daa
and
sbb
shll
add
xchg
btc
loop
mov
add
mov
add
clc
icebp
repz
out
fldt
add
out
add
pop
fcoml
aaa
mov
lea
add
mov
mov
out
or
rolb
xor
dec
cmp
or
jl
fidivs
mov
inc
add
lret
call
jae
push
add
fdiv
das
out
xor
movsb
popa
cmpsb
ds
dec
sbb
mov
cmp
imul
enter
sub
push
mov
jae
add
add
mov
pop
push
out
rcll
pop
lahf
mov
inc
add
add
cwtl
inc
cmpsb
xchg
or
pop
push
js
xorl
fdiv
mov
inc
enter
insl
mov
mov
cmp
add
add
call
cwtl
inc
add
push
rolb
add
mov
mov
mov
push
sbb
and
mov
daa
das
std
xchg
imul
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
mov
imul
xchg
ret
add
and
test
xor
push
mov
nop
leave
nop
jmp
add
in
xor
add
adc
in
nop
leave
nop
jmp
add
xchg
add
mov
xchg
ret
add
add
add
xor
jnp
add
add
add
mov
add
mov
add
clc
repnz
nop
cld
jae
ret
pop
iret
push
clc
repnz
nop
cld
jae
add
mov
sub
mov
lods
call
and
add
add
add
dec
cmp
in
nop
leave
nop
jmp
call
add
add
clc
repnz
nop
cld
jae
roll
cmp
repnz
nop
cld
jae
add
push
mov
pop
loop
mov
out
leave
clc
repnz
nop
cld
jae
add
sub
add
mov
clc
repnz
nop
cld
jae
add
add
dec
cmp
repnz
nop
cld
jae
mov
add
ret
add
push
mov
xchg
ret
add
repnz
mov
dec
add
repnz
nop
cld
jae
add
idivl
clc
repnz
nop
cld
jae
add
mov
mov
lods
add
add
add
in
nop
leave
nop
jmp
mov
rorl
add
push
mov
nop
leave
nop
jmp
add
mov
sbb
inc
add
sub
mov
add
ja
mov
nop
cld
jae
add
add
into
popl
push
mov
nop
leave
nop
jmp
mov
into
pop
add
ss
push
mov
xchg
ret
cltd
imul
add
sbb
repnz
nop
cld
jae
pop
add
clc
repnz
nop
cld
jae
rcl
push
add
add
pop
jmp
mov
lods
mov
mov
add
and
mov
sub
push
mov
nop
leave
nop
jmp
add
sub
mov
push
mov
xchg
ret
add
inc
mov
clc
repnz
nop
cld
jae
add
inc
add
push
in
add
xor
clc
repnz
nop
cld
jae
test
rclb
pop
and
clc
repnz
nop
cld
jae
push
add
test
and
clc
repnz
nop
cld
jae
add
test
xor
push
mov
xchg
ret
popf
and
add
mov
push
rolb
mov
push
clc
repnz
nop
cld
jae
fwait
lods
mov
add
add
repnz
nop
cld
jae
shll
mov
ret
push
mov
xchg
ret
mov
mov
mov
mov
xchg
ret
add
add
repnz
nop
cld
jae
mov
fcomi
negl
add
repnz
nop
cld
jae
add
add
testl
mov
push
add
push
mov
nop
leave
nop
jmp
add
lods
movl
movsb
push
mov
xchg
ret
inc
add
add
add
push
mov
xchg
ret
pop
in
add
ja
pop
add
clc
repnz
nop
cld
jae
mov
in
ret
push
and
inc
add
clc
repnz
nop
cld
jae
roll
orl
mov
xor
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
lods
adc
push
sub
add
add
in
nop
leave
nop
jmp
mov
sub
mov
in
iret
add
clc
repnz
nop
cld
jae
mov
add
mov
popa
add
repnz
nop
cld
jae
add
mov
int3
pusha
clc
repnz
nop
cld
jae
lods
add
add
mov
data16
mov
nop
leave
nop
jmp
add
lods
out
add
push
mov
xchg
ret
add
add
mov
mov
cmp
mov
nop
leave
nop
jmp
add
add
add
pop
push
mov
xchg
ret
mov
add
add
mov
sbb
cmp
ret
repnz
mov
sub
in
int
clc
push
add
insl
add
add
fisubl
add
xor
mov
mov
push
mov
nop
leave
nop
jmp
add
insb
jne
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
push
push
pop
lods
call
mov
loopne
mov
push
mov
xchg
ret
add
add
dec
cli
ret
clc
repnz
nop
cld
jae
addl
add
adc
imul
mov
xchg
ret
repnz
adc
mov
mov
je
inc
push
mov
xchg
ret
lods
jno
jno
add
sub
cmpl
push
mov
nop
leave
nop
jmp
add
in
lods
dec
jnp
clc
clc
repnz
nop
cld
jae
add
add
test
push
mov
nop
leave
nop
jmp
repnz
dec
push
push
mov
xchg
ret
add
add
pop
ja
add
test
jno
movl
add
nop
nop
cld
jae
add
add
add
or
mov
clc
repnz
nop
cld
jae
add
adc
in
nop
leave
nop
jmp
lods
add
mov
add
mov
xchg
ret
add
fcmovne
lods
add
insb
mov
clc
repnz
nop
cld
jae
add
testl
cmp
push
mov
xchg
ret
sub
cmp
add
mov
addl
xchg
mov
nop
nop
cld
jae
push
lock
mov
jnp
rclb
int
add
rolb
daa
enter
push
mov
xchg
ret
popf
mov
repnz
add
push
mov
nop
leave
nop
jmp
add
add
add
cmp
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
test
in
jo
mov
repnz
nop
cld
jae
mov
imul
jae
add
sbb
fwait
dec
and
clc
repnz
nop
cld
jae
in
out
add
push
mov
in
nop
leave
nop
jmp
cmp
rorl
mov
clc
repnz
nop
cld
jae
rol
addl
cmc
sub
test
repnz
nop
cld
jae
shrb
cltd
push
push
mov
nop
leave
nop
jmp
addr16
jno
and
mov
push
mov
nop
leave
nop
jmp
xor
add
sub
push
push
mov
xchg
ret
add
movl
push
daa
bound
mov
mov
add
leave
out
inc
add
sub
add
mov
clc
repnz
nop
cld
jae
roll
roll
add
clc
repnz
nop
cld
jae
add
add
loop
mov
xadd
add
repnz
nop
cld
jae
sbb
add
jno
test
repnz
nop
cld
jae
add
push
inc
sbb
xchg
inc
mov
pop
push
mov
xchg
ret
add
in
add
lret
insb
insb
add
in
nop
leave
nop
jmp
mov
add
ret
add
mov
clc
repnz
nop
cld
jae
push
add
add
jmp
iret
or
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
in
nop
leave
nop
jmp
add
mov
pop
popa
push
mov
nop
leave
nop
jmp
dec
mov
add
add
add
push
movzwl
clc
repnz
nop
cld
jae
add
or
lods
push
mov
xchg
ret
add
dec
in
mov
mov
mov
repnz
nop
cld
jae
sub
dec
mov
je
push
mov
nop
leave
nop
jmp
add
es
jne
clc
repnz
nop
cld
jae
lods
rolb
add
clc
repnz
nop
cld
jae
add
mov
cmpsb
adc
stc
clc
repnz
nop
cld
jae
roll
pop
call
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
mov
shr
into
add
repnz
nop
cld
jae
add
add
fisubrl
jo
cs
repnz
nop
cld
jae
add
cmp
dec
call
push
mov
nop
leave
nop
jmp
add
mov
add
add
repnz
nop
cld
jae
add
mov
add
mov
les
clc
repnz
nop
cld
jae
cltd
out
test
push
clc
repnz
nop
cld
jae
add
add
add
clc
mov
clc
repnz
nop
cld
jae
xor
imull
push
lea
clc
repnz
nop
cld
jae
inc
mov
mov
int
add
add
rorl
add
mov
fstpl
mov
nop
leave
nop
jmp
add
jo
pop
add
add
clc
repnz
nop
cld
jae
repnz
ret
adc
mov
add
dec
push
clc
repnz
nop
cld
jae
test
movl
into
mov
push
mov
xchg
ret
cltd
mov
call
in
pop
and
inc
add
add
int
add
jne
jnp
xor
clc
repnz
nop
cld
jae
mov
jo
add
mov
repnz
nop
cld
jae
add
add
lock
push
mov
xchg
ret
mov
sub
add
fldt
fimull
in
nop
leave
nop
jmp
ret
out
mov
cmp
mov
nop
leave
nop
jmp
ret
pop
add
movsl
adc
add
rorb
nop
nop
cld
jae
imul
jno
mov
push
mov
xchg
ret
imul
add
and
push
mov
xchg
ret
mov
add
pop
add
push
mov
nop
leave
nop
jmp
addl
dec
add
clc
repnz
nop
cld
jae
mov
mov
stc
je
clc
repnz
nop
cld
jae
cltd
or
aaa
jecxz
lret
repnz
nop
cld
jae
shl
test
adc
in
call
clc
repnz
nop
cld
jae
add
add
jmp
xchg
clc
incl
out
add
adc
add
add
xor
mov
adcb
nop
leave
nop
jmp
or
push
clc
repnz
nop
cld
jae
adc
orl
adc
mov
xchg
ret
addl
push
add
or
add
clc
repnz
nop
cld
jae
pop
add
mov
mov
in
add
push
mov
nop
leave
nop
jmp
lods
mov
jno
xchg
mov
mov
rolb
xchg
ret
add
lods
add
jo
out
add
add
clc
repnz
nop
cld
jae
add
out
jne
push
mov
nop
leave
nop
jmp
adc
add
mov
clc
repnz
nop
cld
jae
mov
add
add
or
test
clc
repnz
nop
cld
jae
add
jbe
clc
repnz
nop
cld
jae
mov
pop
imul
roll
add
clc
repnz
nop
cld
jae
addl
mov
in
nop
leave
nop
jmp
add
in
mov
mov
nop
cld
jae
add
frstpm(287
test
mov
xchg
ret
add
fwait
add
inc
adc
insb
push
clc
repnz
nop
cld
jae
add
add
jns
movsb
clc
repnz
nop
cld
jae
rolb
add
xor
push
cmp
popa
push
mov
nop
leave
nop
jmp
add
pop
add
mov
push
clc
repnz
nop
cld
jae
add
and
xchg
cld
and
clc
repnz
nop
cld
jae
in
mov
fwait
mov
add
clc
repnz
nop
cld
jae
addl
ret
addb
das
jmp
add
add
jo
push
add
scas
cmpl
push
mov
nop
leave
nop
jmp
add
dec
add
clc
repnz
nop
cld
jae
in
mov
and
mov
shrb
mov
xchg
ret
mov
add
add
add
fs
lret
jmp
add
sub
add
out
test
mov
in
rolb
add
test
push
mov
nop
leave
nop
jmp
add
lods
xor
add
jecxz
roll
add
clc
repnz
nop
cld
jae
shll
fwait
xchg
inc
add
repnz
nop
cld
jae
mov
add
nop
nop
cld
jae
mov
pop
movl
repnz
nop
cld
jae
mov
call
pop
mov
push
mov
xchg
ret
ret
rcr
xor
pop
add
clc
repnz
nop
cld
jae
push
mov
add
mov
nop
nop
cld
jae
dec
add
lock
jno
add
add
clc
repnz
nop
cld
jae
add
lods
add
hlt
divl
out
add
push
mov
nop
leave
nop
jmp
rcl
add
testl
add
repnz
nop
cld
jae
out
add
testl
rcrb
mov
nop
leave
nop
jmp
push
add
rcrl
pop
shl
clc
repnz
nop
cld
jae
ja
add
add
inc
and
repnz
nop
cld
jae
add
add
fwait
ret
mov
sbb
add
add
loop
pop
and
mov
and
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
mov
add
and
es
jne
clc
repnz
nop
cld
jae
ja
into
sub
mov
nop
leave
nop
jmp
lods
jno
in
add
add
movzwl
clc
repnz
nop
cld
jae
dec
in
xor
incl
push
mov
nop
leave
nop
jmp
add
or
fs
add
add
roll
add
add
sbb
repnz
nop
cld
jae
xor
pop
mov
outsb
add
clc
repnz
nop
cld
jae
or
add
imul
xchg
ret
mov
add
pop
add
push
mov
xchg
ret
add
subl
nop
nop
cld
jae
add
dec
add
add
repnz
nop
cld
jae
movl
fwait
sub
sub
cmp
ret
sub
lods
into
mov
add
leave
push
mov
nop
leave
nop
jmp
popf
add
imul
nop
nop
cld
jae
add
cltd
rolb
add
neg
inc
add
add
add
xor
push
mov
xchg
ret
ja
add
mov
clc
repnz
nop
cld
jae
in
add
mov
mov
add
push
mov
nop
leave
nop
jmp
or
xor
add
add
push
sbb
adc
in
nop
leave
nop
jmp
mov
push
lahf
push
push
mov
xchg
ret
movl
out
add
test
mov
xchg
ret
add
out
add
mov
repnz
nop
cld
jae
add
add
inc
add
add
push
mov
xchg
ret
add
add
inc
add
add
repnz
nop
cld
jae
add
add
dec
add
mov
push
mov
xchg
add
add
push
dec
mov
dec
add
add
clc
repnz
nop
cld
jae
push
add
push
mov
xchg
ret
popf
ja
add
mov
incb
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
add
add
add
push
sub
nop
cld
jae
add
add
repnz
sbb
sar
nop
nop
cld
jae
add
add
fildl
dec
sahf
les
clc
repnz
nop
cld
jae
sbb
and
add
add
push
mov
xchg
ret
push
push
add
cltd
mov
sub
clc
repnz
nop
cld
jae
add
add
cs
clc
repnz
nop
cld
jae
add
rorl
push
mov
nop
leave
nop
jmp
out
jno
jno
movl
ret
sbb
cld
jae
add
add
cld
inc
add
and
inc
cmpl
repnz
nop
cld
jae
jo
test
add
subl
jae
into
add
push
js
clc
repnz
nop
cld
jae
dec
add
add
jb
clc
repnz
nop
cld
jae
add
push
pop
shl
add
mov
nop
leave
nop
jmp
add
add
ds
clc
repnz
nop
cld
jae
sarb
pop
push
xor
add
add
inc
mov
lret
add
adc
pusha
add
or
in
nop
leave
nop
jmp
add
roll
add
das
mov
clc
repnz
nop
cld
jae
add
imul
xchg
ret
add
add
add
mov
mov
nop
leave
nop
jmp
xor
add
add
add
add
clc
repnz
nop
cld
jae
add
mov
mov
jno
pushl
push
mov
xchg
ret
pop
add
add
lods
add
nop
nop
cld
jae
add
jno
add
push
or
repnz
nop
cld
jae
in
mov
mov
pop
mov
push
mov
nop
leave
nop
jmp
add
mov
mov
mov
nop
leave
nop
jmp
fstpt
cmpsb
cmp
clc
repnz
nop
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
add
adc
xor
pop
jae
repnz
nop
cld
jae
out
xor
stos
push
push
mov
nop
leave
nop
jmp
add
roll
push
push
mov
xchg
ret
add
in
mov
mov
xchg
ret
movl
sbb
mov
mov
xchg
ret
mov
add
js
test
cld
clc
repnz
nop
cld
jae
add
test
pusha
clc
repnz
nop
cld
jae
add
add
xor
add
mull
mov
nop
leave
nop
jmp
cltd
add
push
mov
xchg
ret
add
add
add
mov
mov
les
mov
xchg
ret
add
fwait
sbb
add
push
mov
xchg
ret
add
dec
add
add
add
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
add
add
cmpl
push
mov
nop
leave
nop
jmp
fcmovnb
add
adc
push
add
push
mov
xchg
ret
add
add
push
mov
addl
fwait
add
clc
add
in
stos
push
mov
xchg
ret
mov
add
out
repnz
in
nop
leave
nop
jmp
repnz
add
add
rep
clc
repnz
nop
cld
jae
xor
mov
pop
scas
movzwl
push
mov
nop
leave
nop
jmp
mov
pop
add
pushf
add
clc
repnz
nop
cld
jae
add
shr
sub
inc
nop
add
add
dec
or
repnz
nop
cld
jae
mov
add
add
nop
nop
cld
jae
sub
mov
mov
add
add
sub
fildl
mov
add
mov
push
mov
xchg
ret
movl
mov
in
mov
clc
repnz
nop
cld
jae
inc
adc
cmp
nop
nop
cld
jae
add
add
xor
jmp
mov
nop
leave
nop
jmp
mov
sub
inc
add
cmp
push
mov
xchg
ret
lock
mov
mov
daa
xor
mov
xchg
ret
add
add
test
in
jmp
in
sub
add
test
add
add
add
mov
mov
mov
nop
leave
nop
jmp
add
out
shr
clc
repnz
nop
cld
jae
lods
into
mov
inc
add
mov
call
add
add
in
nop
leave
nop
jmp
add
in
nop
leave
nop
jmp
in
add
pop
imull
pop
in
inc
add
add
sarb
dec
pusha
clc
repnz
nop
cld
jae
add
add
cs
push
mov
xchg
ret
mov
lods
add
pop
mov
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
add
dec
sub
addb
scas
shr
jmp
incl
adc
or
dec
add
add
xor
out
and
push
mov
nop
leave
nop
jmp
add
add
add
arpl
add
repnz
nop
cld
jae
mov
mov
enter
sub
mov
add
add
mov
add
clc
repnz
nop
cld
jae
addl
addl
xlat
cmc
call
in
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
mov
add
mov
arpl
mov
nop
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
sbb
push
add
or
push
nop
nop
cld
jae
mov
inc
add
cld
or
nop
leave
nop
jmp
popf
testl
mov
nop
leave
nop
jmp
cltd
add
mov
add
clc
repnz
nop
cld
jae
call
je
js
mov
xchg
ret
xor
pop
add
fwait
in
cld
push
mov
xchg
ret
add
into
add
add
mov
mov
push
mov
nop
leave
nop
jmp
mov
sub
add
or
mov
xchg
ret
add
addr16
add
mov
clc
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
jno
mov
call
repnz
nop
cld
jae
pop
sub
add
xor
lods
loop
mov
adc
incl
add
add
xor
popf
add
add
add
mov
xchg
ret
test
sub
lock
clc
repnz
nop
cld
jae
add
add
rcll
add
repnz
nop
cld
jae
cltd
mov
push
mov
xchg
ret
add
mov
fwait
mov
clc
repnz
nop
cld
jae
add
add
movl
mov
nop
leave
nop
jmp
test
add
sub
jbe
mov
push
mov
nop
leave
nop
jmp
push
add
add
and
push
mov
xchg
ret
mov
mov
mov
clc
repnz
nop
cld
jae
add
sbb
mov
xchg
ret
mov
mov
test
add
jo
mov
mov
repnz
nop
cld
jae
add
add
mov
mov
push
mov
nop
leave
nop
jmp
repnz
add
add
mov
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
popf
popf
sub
add
and
int
push
mov
xchg
ret
add
add
into
mov
mov
pop
out
inc
add
adc
mov
adc
test
mov
repnz
nop
cld
jae
out
add
pop
in
out
push
push
mov
nop
leave
nop
jmp
add
xor
or
call
push
mov
nop
leave
nop
jmp
add
inc
cmp
repnz
nop
cld
jae
out
inc
add
adc
les
add
nop
nop
cld
jae
add
add
add
lock
repnz
nop
cld
jae
add
add
push
add
adc
mov
mov
xchg
ret
add
mov
add
dec
push
mov
xchg
ret
mov
add
jl
add
clc
repnz
nop
cld
jae
dec
call
mov
nop
leave
nop
jmp
mov
mov
popa
add
mov
xchg
ret
rclb
xor
mov
push
add
mov
call
mov
inc
add
mov
add
test
jae
clc
repnz
nop
cld
jae
add
add
dec
mov
clc
repnz
nop
cld
jae
adc
in
add
add
packssdw
sub
repnz
nop
cld
jae
in
test
jno
leave
add
jmp
add
add
add
mov
add
add
add
test
add
mov
xchg
ret
fwait
jo
add
push
mov
mov
clc
repnz
nop
cld
jae
ret
add
fwait
add
dec
and
push
mov
xchg
ret
add
inc
add
mov
nop
nop
cld
jae
add
add
add
mov
nop
cld
jae
pop
ja
add
clc
repnz
nop
cld
jae
out
mov
jno
add
mov
xchg
inc
add
mov
add
lods
add
xchg
call
jae
repnz
nop
cld
jae
rolb
xchg
gs
clc
repnz
nop
cld
jae
sub
add
add
add
push
push
mov
xchg
ret
mov
pop
addr16
scas
push
push
mov
xchg
ret
in
mov
add
add
mov
jne
clc
repnz
nop
cld
jae
jno
adc
push
xor
fidivrs
push
mov
nop
leave
nop
jmp
mov
mov
clc
repnz
nop
cld
jae
mov
mov
add
add
repnz
nop
cld
jae
fwait
ja
mov
push
mov
xchg
ret
add
lods
add
and
push
mov
xchg
ret
mov
sub
clc
clc
repnz
nop
cld
jae
add
fildl
mov
mov
jne
clc
repnz
nop
cld
jae
add
test
add
repnz
nop
cld
jae
sub
mov
add
mov
cmp
pop
push
add
add
xchg
aad
mov
lods
add
stos
fs
mov
call
and
mov
or
mov
add
add
clc
repnz
nop
cld
jae
adc
xor
mov
add
repz
dec
push
mov
nop
leave
nop
jmp
test
adc
jp
sub
decl
add
add
pop
add
lea
push
mov
nop
leave
nop
jmp
out
popf
add
add
push
mov
nop
leave
nop
jmp
add
in
xor
and
mov
clc
push
mov
xchg
ret
add
mov
push
icebp
fimuls
nop
leave
nop
jmp
roll
add
movb
repnz
nop
cld
jae
lods
add
add
pop
ret
insl
mov
clc
repnz
nop
cld
jae
pop
mov
sub
push
mov
nop
leave
nop
jmp
test
add
out
xor
jbe
push
mov
nop
leave
nop
jmp
add
add
popf
cld
mov
clc
repnz
nop
cld
jae
fucomi
sub
add
add
pusha
add
push
mov
nop
leave
nop
jmp
divl
in
add
add
add
jle
add
nop
adc
sbb
in
jb
add
out
add
push
add
add
push
mov
xchg
ret
push
add
add
mov
gs
mov
repnz
nop
cld
jae
add
add
add
movsl
ret
push
dec
and
clc
repnz
nop
cld
jae
or
xlat
aaa
sub
xor
add
clc
repnz
nop
cld
jae
add
popf
sub
clc
repnz
nop
cld
jae
call
sbb
pop
in
call
in
nop
leave
nop
jmp
fwait
lock
cmp
in
nop
leave
nop
jmp
add
add
jl
loop
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
add
dec
mov
add
mov
nop
nop
cld
jae
dec
add
cmp
shll
stc
out
add
add
add
fwait
xchg
clc
repnz
nop
cld
jae
add
add
add
mov
iret
pop
push
mov
nop
leave
nop
jmp
mov
add
add
add
mov
xchg
ret
add
mov
repnz
nop
cld
jae
into
or
addl
xchg
push
mov
nop
leave
nop
jmp
add
add
add
addb
jle
add
repnz
nop
cld
jae
inc
mov
ret
add
push
mov
nop
leave
nop
jmp
add
in
sbb
movl
jae
add
add
mov
nop
nop
cld
jae
mov
push
add
add
lret
leave
insl
dec
push
mov
nop
leave
nop
jmp
mov
add
test
sar
repnz
nop
cld
jae
add
add
loop
mov
nop
leave
nop
jmp
push
test
add
mov
xchg
ret
add
add
lods
shll
jp
jbe
clc
repnz
nop
cld
jae
add
and
ja
add
mov
add
mov
push
mov
nop
leave
nop
jmp
xor
ret
roll
call
push
mov
nop
leave
nop
jmp
mov
add
sbb
pop
call
in
nop
leave
nop
jmp
add
out
lea
add
repnz
nop
cld
jae
add
ja
push
push
mov
nop
leave
nop
jmp
pop
add
mov
add
push
add
clc
repnz
nop
cld
jae
add
add
sub
popa
add
mov
xchg
ret
add
mov
clc
repnz
nop
cld
jae
cltd
add
push
add
int
clc
repnz
nop
cld
jae
shll
ret
cmp
sbb
add
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
ret
test
xor
mov
mov
push
mov
nop
leave
nop
jmp
movl
add
dec
int3
inc
add
add
jno
push
add
es
cmp
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
add
in
lret
push
mov
nop
leave
nop
jmp
add
lods
add
add
sub
clc
repnz
nop
cld
jae
out
inc
rorl
xchg
addb
xor
clc
repnz
nop
cld
jae
test
shr
add
mov
clc
repnz
nop
cld
jae
pop
sbb
call
clc
repnz
nop
cld
jae
mov
out
rolb
popa
add
mov
xchg
ret
mov
add
inc
test
popf
jmp
add
out
lock
add
add
mov
mov
push
mov
nop
leave
nop
jmp
push
std
ja
clc
repnz
nop
cld
jae
mov
mov
jl
add
add
repnz
nop
cld
jae
in
lock
rolb
mov
jle
inc
add
out
fwait
add
add
mov
pop
push
mov
xchg
ret
jo
add
add
xor
ret
ljmp
mov
add
mov
add
call
clc
repnz
nop
cld
jae
dec
add
call
push
sti
adc
add
jo
add
movsb
faddl
in
nop
leave
nop
jmp
pop
pop
add
lods
add
out
call
in
nop
leave
nop
jmp
lods
add
scas
je
clc
repnz
nop
cld
jae
popf
imul
add
repnz
nop
cld
jae
add
add
add
pop
std
rep
push
mov
xchg
ret
push
pop
sub
or
add
pop
pop
mov
clc
repnz
nop
cld
jae
push
xor
add
pop
jmp
add
in
roll
or
add
sub
clc
repnz
nop
cld
jae
add
sub
add
sbb
sbb
repnz
nop
cld
jae
addl
add
mov
repnz
nop
cld
jae
add
add
mov
ss
loope
mov
nop
leave
nop
jmp
dec
sub
add
ret
bound
mov
jne
clc
repnz
nop
cld
jae
add
addl
push
mov
xchg
ret
cmp
add
xorl
mov
adc
repnz
nop
cld
jae
in
mov
add
xor
je
clc
repnz
nop
cld
jae
adc
add
or
inc
add
add
popf
add
add
cld
push
clc
repnz
nop
cld
jae
roll
add
add
add
into
mov
clc
repnz
nop
cld
jae
out
shlb
outsb
mov
clc
repnz
nop
cld
jae
popf
add
xchg
repnz
nop
cld
jae
add
add
out
mov
clc
repnz
nop
cld
jae
add
test
add
xchg
add
clc
repnz
nop
cld
jae
inc
add
jno
add
repnz
nop
cld
jae
lods
call
lea
nop
cld
jae
add
add
into
mov
mov
nop
nop
cld
jae
pop
addl
out
test
mov
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
frstpm(287
mov
mov
add
clc
repnz
nop
cld
jae
pop
fildl
add
mov
add
clc
repnz
nop
cld
jae
or
test
add
pop
push
mov
xchg
ret
add
bnd
and
stos
clc
repnz
nop
cld
jae
add
popf
add
jno
pop
cmpw
push
mov
nop
leave
nop
jmp
add
add
jne
clc
repnz
nop
cld
jae
lods
pop
add
push
clc
repnz
nop
cld
jae
cltd
add
rcl
pop
add
or
repnz
nop
cld
jae
add
add
add
add
cmpsl
sbb
stos
clc
repnz
nop
cld
jae
rorb
pop
add
jno
jne
clc
repnz
nop
cld
jae
dec
add
fcoms
repnz
nop
cld
jae
push
imul
add
lods
mov
clc
repnz
nop
cld
jae
out
add
add
into
clc
div
clc
repnz
nop
cld
jae
add
add
add
adc
add
jmp
ret
or
imul
add
or
push
mov
nop
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
add
dec
adc
xchg
lret
xchg
ret
add
add
in
mov
add
clc
repnz
nop
cld
jae
roll
add
repz
repnz
nop
cld
jae
add
repnz
adc
add
push
test
clc
repnz
nop
cld
jae
mov
add
in
out
pop
push
mov
xchg
ret
mov
cmp
mov
lods
and
imul
nop
nop
cld
jae
pop
repnz
cmc
inc
add
jnp
inc
lock
mov
xchg
ret
add
add
or
repnz
nop
cld
jae
lods
add
add
add
in
clc
repnz
nop
cld
jae
in
mov
lea
push
mov
nop
leave
nop
jmp
adc
mov
xor
add
jle
clc
repnz
nop
cld
jae
in
ret
add
clc
repnz
nop
cld
jae
out
rorl
or
pop
mov
clc
repnz
nop
cld
jae
cmpl
ss
clc
repnz
nop
cld
jae
add
push
sarl
mov
clc
repnz
nop
cld
jae
ja
mov
repnz
nop
cld
jae
add
jno
fs
add
clc
repnz
nop
cld
jae
in
add
adc
fsubr
fwait
sti
clc
repnz
nop
cld
jae
mov
add
in
nop
leave
nop
jmp
add
push
pop
jo
add
push
clc
repnz
nop
cld
jae
add
movl
mov
cmp
ret
pop
mov
add
add
mov
xchg
ret
or
movl
add
mov
add
add
add
add
test
test
and
clc
repnz
nop
cld
jae
mov
fldl
ret
push
mov
xchg
ret
add
add
repnz
lock
inc
adc
repnz
nop
cld
jae
and
add
mov
scas
pop
iret
test
add
add
popf
add
add
lods
adc
mov
clc
repnz
nop
cld
jae
add
loopne
mov
jmp
inc
add
pop
fwait
mov
add
call
add
clc
repnz
nop
cld
jae
add
pop
add
adc
add
push
clc
repnz
nop
cld
jae
add
ja
add
mov
mov
in
nop
leave
nop
jmp
add
fildl
add
add
xlat
rolb
mov
pop
mov
clc
repnz
nop
cld
jae
and
jno
add
je
add
repnz
nop
cld
jae
add
cmp
mov
push
mov
xchg
ret
push
mov
pop
mov
movzwl
clc
repnz
nop
cld
jae
in
dec
add
pop
mov
push
mov
nop
leave
nop
jmp
pop
mov
add
push
add
mov
xchg
ret
add
add
mov
or
clc
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
adc
and
fcmovnb
xchg
decl
scas
enter
nop
cld
jae
inc
add
mov
push
mov
xchg
ret
add
add
dec
call
add
in
nop
leave
nop
jmp
ret
and
shlb
and
push
clc
repnz
nop
cld
jae
inc
add
imul
add
xchg
scas
shr
clc
repnz
nop
cld
jae
mov
sub
pop
add
stc
clc
repnz
nop
cld
jae
add
add
or
jmp
mov
add
mov
clc
repnz
nop
cld
jae
add
mov
add
mov
nop
leave
nop
jmp
cmp
add
add
push
mov
xchg
ret
add
mov
xor
mov
clc
repnz
nop
cld
jae
imul
mov
push
mov
nop
leave
nop
jmp
or
add
add
push
ret
call
fs
repnz
nop
cld
jae
lock
add
push
sbb
mov
sub
shl
add
add
addl
pop
mov
clc
repnz
nop
cld
jae
sarl
or
repnz
nop
cld
jae
add
mov
mov
pop
jne
clc
repnz
nop
cld
jae
addl
int3
push
clc
repnz
nop
cld
jae
inc
cltd
mull
sbb
add
clc
repnz
nop
cld
jae
repnz
pop
nop
add
mov
clc
repnz
nop
cld
jae
mov
test
repnz
nop
cld
jae
add
dec
sub
or
inc
add
xor
add
add
mov
clc
repnz
nop
cld
jae
fildl
jo
out
mov
add
clc
repnz
nop
cld
jae
add
add
in
jb
mov
cld
jae
add
add
cld
add
clc
repnz
nop
cld
jae
add
fistl
add
jl
dec
push
clc
repnz
nop
cld
jae
cltd
add
cmp
push
mov
nop
leave
nop
jmp
sub
mov
add
pop
rolb
mov
jne
mov
mov
clc
repnz
nop
cld
jae
add
inc
sbb
clc
repnz
nop
cld
jae
jo
mov
xchg
clc
repnz
nop
cld
jae
repnz
add
add
rorl
push
mov
xchg
ret
ja
add
add
enter
nop
cld
jae
add
jo
add
outsb
jl
clc
repnz
nop
cld
jae
add
in
mov
clc
repnz
nop
cld
jae
test
add
sub
mov
mov
clc
repnz
nop
cld
jae
dec
inc
mov
pop
repnz
clc
repnz
nop
cld
jae
inc
add
add
xor
push
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
mov
shrl
aam
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
add
addr16
movl
add
xchg
icebp
inc
add
add
dec
shl
into
fbld
repnz
nop
cld
jae
out
add
add
lods
and
pop
inc
push
mov
xchg
ret
add
lods
in
add
add
mov
movb
cmpsl
sarb
cmp
dec
sahf
add
sub
nop
nop
cld
jae
push
adcl
sbb
mov
nop
nop
cld
jae
cmp
add
out
mov
mov
clc
repnz
nop
cld
jae
pop
add
push
mov
nop
leave
nop
jmp
addl
sub
add
mov
repnz
nop
cld
jae
add
ja
cltd
mov
sbb
repnz
nop
cld
jae
add
test
add
repz
repnz
nop
cld
jae
add
pop
rcll
sbb
inc
xor
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
add
sub
cmpsl
fwait
inc
clc
repnz
nop
cld
jae
addr16
add
add
add
nop
nop
cld
jae
add
mov
add
add
or
clc
repnz
nop
cld
jae
jno
add
mov
sub
push
mov
xchg
ret
cmp
rcl
testl
out
lea
push
mov
nop
leave
nop
jmp
add
mov
repnz
nop
cld
jae
add
dec
xor
add
lods
mov
clc
repnz
nop
cld
jae
jo
add
mov
push
mov
xchg
ret
test
add
add
mov
or
clc
repnz
nop
cld
jae
add
sar
repnz
nop
cld
jae
add
add
mov
push
push
and
push
mov
nop
leave
nop
jmp
add
add
add
mov
push
mov
xchg
ret
inc
popf
rorl
jecxz
rolb
mov
adc
add
clc
repnz
nop
cld
jae
cltd
testl
add
xchg
inc
add
or
out
add
dec
push
outsl
mov
clc
repnz
nop
cld
jae
add
dec
add
dec
arpl
xor
rolb
mov
push
clc
repnz
nop
cld
jae
in
sub
mov
add
scas
mov
push
mov
xchg
ret
add
dec
add
orl
repnz
nop
cld
jae
add
mov
add
jmp
nop
nop
cld
jae
xor
add
jecxz
pop
clc
repnz
nop
cld
jae
test
repnz
in
and
push
add
mov
nop
leave
nop
jmp
or
mov
sar
nop
nop
cld
jae
push
mov
mov
popa
push
mov
nop
leave
nop
jmp
sub
pop
add
add
pop
push
mov
xchg
ret
test
call
add
mov
clc
repnz
nop
cld
jae
cmp
imul
jmp
inc
add
add
add
sbb
add
jmp
add
add
mov
add
jno
cmp
push
mov
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
sub
out
jbe
mov
push
mov
nop
leave
nop
jmp
in
mov
add
clc
repnz
nop
cld
jae
mov
addl
dec
add
lods
clc
repnz
nop
cld
jae
adc
dec
add
in
add
push
push
mov
xchg
ret
in
xor
into
add
add
adc
mov
nop
leave
nop
jmp
add
pop
add
add
mov
stos
lea
clc
repnz
nop
cld
jae
add
mov
dec
push
mov
mov
mov
add
add
cmc
loopne
mov
data16
xchg
dec
pop
cmc
jecxz
add
pop
outsl
std
or
xchg
push
out
aaa
and
mov
ljmp
xchg
push
aam
jno
dec
push
add
mov
add
cltd
xorl
add
jno
inc
or
pop
addb
push
pop
ja
mov
jbe
pop
mov
shr
cmp
je
lock
cmp
add
pop
push
jb
mov
pop
cmc
ret
xchg
mov
add
inc
lea
lret
leave
iret
loopne
mov
xchg
inc
add
xor
mov
push
pusha
add
xchg
imul
inc
add
add
mov
adc
add
sbb
xor
mov
dec
cmp
addb
aas
loop
mov
xchg
stos
testb
mov
nop
add
loopne
mov
add
and
add
jecxz
push
mov
subl
std
jmp
and
mov
mov
mov
jnp
add
cmpl
cmp
push
cld
js
repz
incb
repz
cmp
add
aad
scas
outsl
test
jg
rolb
mov
sub
mov
and
scas
pop
or
mov
adc
mov
cmp
xchg
push
out
cmp
loopne
mov
ds
add
movsb
rolb
mov
jg
pop
jo
mov
addr16
imul
repz
mov
and
push
push
cli
sub
and
cltd
xor
mov
movsl
in
pushf
pop
rolb
cmp
repnz
mov
push
pop
dec
lock
repnz
add
lsl
fsubr
mov
or
mov
mov
xor
sub
ds
dec
mov
and
sub
out
addl
mov
loop
mov
mov
add
lret
lock
pop
adc
fbstp
mov
jge
adc
mov
inc
lds
shll
mov
add
pop
or
adc
mov
and
inc
dec
sbb
rol
cwtl
jnp
jp
das
mov
add
add
or
or
aaa
int3
mov
lock
sub
or
add
mov
push
sbb
repnz
jg
push
sub
lea
inc
xchg
pop
lret
sbb
xor
mov
cmpsl
pusha
add
mov
mov
test
add
add
mov
adc
ss
jmp
or
xchg
inc
add
xor
adc
testl
push
mov
push
push
popf
push
add
ret
movsl
and
add
add
dec
xchg
push
dec
es
dec
mov
decb
sub
mov
cld
addr16
mov
add
and
add
mov
dec
or
or
pushf
jl
int
cwtl
pushf
cltd
fwait
mov
test
cmp
rcr
rorl
nop
add
add
pop
dec
add
add
xchg
popa
iret
cmp
dec
dec
xchg
add
mov
repz
ret
ljmp
xor
sbb
add
bound
mov
add
mov
sbb
mov
rolb
mov
xchg
jl
fmull
movsb
out
add
repnz
mov
lds
cwtl
jae
dec
sahf
jne
cld
in
loop
mov
js
sub
pop
dec
adc
xor
mov
sbb
lret
add
jae
ret
clc
pop
adc
es
mov
mov
push
inc
idivl
jnp
sub
test
mov
stos
loopne
mov
adc
push
jl
push
add
addb
mov
add
js
insb
f2xm1
add
lahf
pop
push
cld
fcoml
mov
mov
pop
repnz
mov
mov
sbb
rolb
mov
push
scas
rcll
inc
cmp
jnp
add
hlt
add
lret
mov
mov
call
sbb
aam
repnz
pop
cmc
push
xchg
xchg
jne
rol
sbb
push
mov
je
inc
out
add
mov
cld
sbb
mov
push
int
add
mov
and
inc
fisttpl
add
xchg
xchg
aaa
pop
icebp
mov
xchg
aaa
test
mov
pop
es
push
fsts
sbb
roll
out
inc
stc
adc
mov
add
fists
stos
dec
push
movsb
inc
in
push
stos
push
test
mov
test
out
pop
mov
pushf
rolb
mov
shl
icebp
pop
dec
jae
mov
mov
mov
mov
dec
cltd
pop
jp
imul
xor
mov
add
int
jmp
mov
add
test
leave
sbb
nop
add
cmc
jge
addb
popa
outsb
add
adc
jg
add
and
mov
in
xor
mov
mov
add
sahf
add
outsl
jbe
jmp
sub
aas
aad
cld
jns
test
add
dec
sbb
add
lds
add
mov
xchg
adc
pop
or
jp
push
xor
mov
jns
pusha
add
jmp
rolb
add
mov
jg
and
mov
pop
enter
unpckhps
xor
xchg
js
insb
jecxz
test
adc
mov
ficompl
dec
notb
hlt
xor
mov
stc
mov
mov
iret
mov
jns
mov
aam
adc
mov
scas
inc
add
lea
in
add
stos
sub
mov
mov
cmpl
mov
iret
leave
xchg
rcr
mov
xor
fs
cli
lods
scas
outsl
pusha
add
cmp
sbb
add
add
mov
sbb
mov
add
test
dec
into
sbb
mov
push
dec
ficoms
mov
add
sub
shll
lret
adc
xchg
cmp
mov
mov
xor
xchg
incb
pcmpgtd
lret
mov
fisubrs
aad
inc
add
scas
les
repnz
les
push
add
xchg
and
mov
jmp
pop
mov
mov
add
sahf
dec
leave
roll
push
adc
mov
add
fidivs
mov
sbb
add
out
push
dec
jae
addb
dec
adc
dec
jle
jne
xor
mov
sub
into
out
pop
addb
popa
cmp
pop
imul
scas
adc
add
add
repz
mov
push
cmp
call
fisubrs
nop
add
jae
push
es
js
testl
je
pop
add
leave
test
mov
loop
mov
mov
mov
or
jo
mov
jp
cmp
mov
inc
cld
lahf
pop
movsb
jl
popf
hlt
inc
std
dec
or
add
xor
insb
adc
mov
mov
mov
mov
or
lods
pop
gs
or
add
es
test
mov
fwait
add
pop
dec
dec
inc
jnp
mov
xor
mov
repz
cmpsb
xlat
dec
adc
push
inc
aas
pop
aad
dec
mov
push
inc
mov
addr16
fs
push
add
inc
mov
movsl
insl
jle
ret
fwait
stos
jmp
scas
cltd
cmc
std
notl
cwtl
sbb
test
scas
fsubs
in
cmpsb
mov
mov
mov
cld
jg
adc
sbb
and
pop
mov
inc
add
insb
mov
xchg
out
cmp
movsl
in
lcall
push
mov
add
or
cmp
add
add
in
lret
pop
and
mov
mov
scas
sub
add
imul
mov
ret
mov
negl
movsl
push
mov
and
add
or
push
add
lahf
and
sub
xor
dec
rcpps
jno
es
ret
pop
pop
out
pop
and
mov
pop
xchg
add
add
in
aas
mov
dec
push
faddl
push
lcall
js
sbb
aas
dec
outsb
out
idivl
arpl
mov
lock
bts
out
in
jnp
mov
paddd
pop
ja
pusha
add
jecxz
out
aaa
xor
mov
and
sub
xorl
xchg
add
cmpsb
lods
or
xlat
movsb
add
mov
sbb
pop
sub
ret
in
gs
sub
mov
push
lods
test
mov
pushf
mov
mov
add
mov
adc
jle
push
mov
add
addb
imul
jp
add
mov
cmp
pop
cmp
test
rolb
mov
jno
and
jnp
les
add
adc
mov
add
mov
mulb
cmpsb
dec
and
outsb
ret
add
xchg
push
psubq
cld
or
fstpl
inc
pextrw
fwait
cmp
cmc
addb
mov
insl
inc
and
cld
mov
mov
add
mov
add
mov
mov
mov
int
add
xor
mov
xor
imul
setge
fisttpl
movsl
add
mov
xchg
inc
add
pop
mov
negl
test
add
pop
addr16
pop
cmc
xchg
mov
mov
jns
add
test
adc
mov
cli
jnp
addb
insb
dec
dec
push
add
sti
std
into
out
pop
pushf
adc
pop
fwait
mov
into
cs
push
out
cmpsb
popf
nop
add
mov
and
add
mov
xchg
daa
repz
jecxz
pop
xlat
imul
mov
push
add
add
cmpsb
mov
add
xor
mov
orl
mov
fld
imul
outsl
cmp
jge
xchg
add
inc
cmpsl
pop
jo
mov
or
pop
xor
mov
add
out
imulb
mov
xor
mov
cmp
or
add
add
test
nop
add
dec
popa
repz
mov
bsf
push
inc
add
push
in
in
inc
incb
add
insb
jbe
add
mov
xchg
fcmovbe
gs
and
mov
dec
negb
add
mov
mov
sub
jecxz
or
and
add
aam
cmp
jge
cmp
pop
dec
xchg
aam
das
xchg
mov
add
mov
enter
jne
sahf
dec
dec
cmp
insb
sarl
add
jp
bound
mov
inc
loopne
mov
add
xchg
xor
add
add
loop
mov
adc
mov
push
or
xchg
sub
mov
pushf
inc
lahf
into
rolb
mov
mov
add
js
push
mov
push
movsl
inc
add
dec
mov
inc
xchg
mov
push
mov
mov
add
xchg
pushf
mov
fdivp
repnz
mov
mov
pop
xchg
add
mov
sbb
out
inc
iret
pop
push
xor
xchg
scas
dec
mov
outsb
adc
sub
xchg
xor
iret
xor
mov
add
pusha
add
imull
mov
int
add
ja
test
jmp
xor
xchg
icebp
loope
push
fsubl
add
imul
cs
mov
pop
lcall
scas
cmpsb
lfs
repnz
mov
mov
sbb
es
mov
repz
les
aam
dec
xlat
test
add
mov
push
imull
insl
cmp
mov
loop
mov
ss
mov
fwait
scas
mov
popa
or
or
add
add
xchg
in
push
fdivs
ljmp
push
jge
mov
xchg
in
arpl
push
push
mov
mov
xor
xlat
scas
sub
mov
imul
adc
mov
pop
adc
mov
sub
mov
xor
pop
js
xlat
mov
add
stos
test
add
mov
add
adc
add
ja
dec
cwtl
mov
add
in
add
aam
leave
push
cmpsb
mov
inc
dec
fdivr
mov
push
insb
jecxz
xchg
or
clc
test
add
cmp
add
lret
mov
sub
dec
mov
sti
mov
pop
inc
jp
jecxz
sbb
add
add
ja
jno
lods
lret
fbld
add
inc
mov
jmp
cmc
icebp
ret
sub
adc
jne
filds
int3
dec
cltd
in
out
inc
push
divl
sbb
jle
js
pushf
sti
rolb
mov
mov
pusha
add
addb
mov
dec
frndint
dec
into
call
scas
ljmp
adc
mov
pop
lock
andl
out
scas
test
inc
add
xchg
xor
cs
adc
mov
add
inc
es
or
lds
rolb
jp
addb
mov
in
jmp
push
add
cmp
mov
out
lods
cmpsb
pop
xchg
mov
cwtl
add
cmp
adc
scas
mov
into
inc
mov
mov
add
mov
call
repnz
mov
push
mov
jle
add
lcall
roll
dec
lds
imull
add
mov
jp
ja
std
or
mov
mov
adc
mov
dec
lods
divps
pop
addb
outsl
negb
dec
pushf
mov
jo
mov
add
cmp
add
jo
mov
roll
ja
add
mov
repnz
mov
add
test
push
mov
inc
pop
ja
xchg
mov
mov
stos
imul
insb
mov
mov
mov
xchg
jo
mov
insl
js
ljmp
add
mov
in
dec
sahf
test
and
mov
pusha
add
pop
push
push
lret
mov
fnsave
mov
add
mov
add
ss
scas
je
mov
aaa
fadds
mov
daa
addb
xchg
mov
add
mov
lret
mov
pop
mov
xor
gs
add
push
add
clc
or
mov
loope
int3
add
data16
adc
mov
or
mov
mov
icebp
push
loope
and
iret
addr16
scas
inc
pushf
roll
jg
sub
jp
add
cmp
mov
jo
mov
dec
lret
outsl
pop
jl
mov
add
in
loop
mov
mov
rolb
mov
xor
iret
sbb
push
ficompl
js
mov
mov
inc
add
xchg
xlat
sbb
jae
xchg
rolb
mov
stos
ret
pop
inc
add
mov
mov
cmp
xchg
inc
fwait
jecxz
add
into
addl
add
xor
gs
dec
loop
mov
xor
outsb
and
leave
loop
mov
call
pushf
popa
call
hlt
add
add
fdivp
popf
test
insb
lcall
adc
mov
mov
xchg
es
ret
lret
pop
in
xchg
pop
sarl
jp
popf
dec
push
movsb
je
add
imul
add
inc
cld
ret
xchg
popf
jno
fldenv
ss
add
lret
fmull
mov
add
pop
cmp
adc
mov
mov
loopne
mov
pop
mov
fnstsw
add
push
xor
mov
add
jo
mov
out
or
pop
lret
lret
cmp
es
add
ljmp
stos
arpl
mov
mov
add
mov
lods
bound
mov
jo
mov
ss
stc
fisubs
out
lret
and
mov
inc
test
lea
adc
mov
add
sbb
sar
mov
push
jecxz
mov
daa
out
cmpsl
xchg
in
xchg
push
scas
mov
shrl
mov
imull
repnz
add
add
adc
mov
mov
add
jle
add
mov
lods
cmc
inc
pop
test
mov
mov
pop
xor
sbb
pop
call
fs
mov
sbb
jg
and
loope
mov
das
pop
jae
test
std
lds
dec
adc
and
inc
add
cmp
add
add
in
add
addl
xchg
add
aad
push
in
loopne
mov
mov
mov
pop
lret
addr16
sarl
cltd
push
mov
mov
mov
add
outsb
cmc
mov
add
add
push
mov
in
mulb
fbld
mov
in
adc
mov
mov
jl
repnz
mov
mov
xlat
enter
or
aaa
hlt
sub
mov
pusha
add
add
pop
mov
or
out
adc
aam
add
add
mov
add
loopne
mov
imul
lret
add
daa
addb
jl
lods
fwait
clc
movsb
scas
shr
rolb
mov
sbb
jnp
and
in
add
add
add
xchg
mov
mov
pop
sbb
xchg
jg
jmp
cmpl
cmc
and
mov
add
pop
in
loop
mov
ljmp
add
fimull
lods
arpl
inc
inc
dec
sbb
add
in
je
mov
dec
rol
faddl
add
push
test
fstl
mov
add
add
pop
fidivs
adc
add
pop
lods
loopne
mov
add
stc
rolb
mov
mov
mov
cli
or
push
add
lret
pop
subl
and
mov
mov
sub
sarl
push
cld
adc
add
into
mov
mov
add
movsl
or
test
mov
movsb
push
ret
movsl
stos
mov
mov
popa
mov
je
ja
dec
dec
loopne
mov
jp
jecxz
js
cmp
add
mov
add
mov
xor
cmp
pop
adc
jl
pop
or
lods
outsb
cmp
pop
push
jns
xor
lods
xchg
arpl
jbe
test
aam
or
add
inc
add
shrl
inc
push
jb
mov
std
xchg
pop
int
add
add
mov
add
sbb
cli
dec
lock
mov
inc
bound
mov
mov
neg
mov
push
jne
or
outsb
rolb
mov
pop
mull
sub
push
repz
pop
dec
jo
mov
mov
mov
mov
add
lods
mov
mov
in
loopne
mov
mov
stc
imul
mov
mov
jmp
dec
sbb
mov
into
inc
add
jne
or
pcmpeqw
xor
mov
rcrl
addb
add
add
in
mov
add
das
xor
xor
adc
mov
ficoml
mov
or
adc
and
adc
mov
icebp
jnp
sub
push
fs
movsb
hlt
aad
jne
lret
in
mov
jo
mov
mov
add
mov
mov
or
jb
mov
pop
push
xchg
add
mov
in
in
insb
or
cmp
add
cld
pop
mov
adc
mov
es
sbb
add
jne
or
outsb
mov
jo
mov
add
popl
sti
lock
xor
mov
add
mov
sub
xchg
add
push
sahf
push
rolb
mov
mov
aaa
icebp
insb
mov
js
sbb
xlat
in
mov
add
mov
inc
ljmp
or
mov
inc
pop
xchg
jno
and
add
pop
xchg
ds
add
rolb
mov
inc
leave
mov
add
stc
mov
add
imul
cli
daa
xor
and
mov
mov
push
icebp
nop
add
daa
push
mov
mov
mov
hlt
sub
mov
add
inc
test
lahf
jno
pop
test
mov
add
xor
and
mov
dec
enter
mov
mov
fs
mov
decb
aas
leave
mov
mov
dec
cmp
mov
add
lds
sti
mov
shrd
mov
mov
add
add
add
sub
inc
add
icebp
or
outsl
or
pop
inc
sbb
push
dec
int3
xor
push
xchg
add
push
xorl
add
int
rcl
inc
popf
stc
sahf
pop
addr16
and
mov
mov
add
aas
add
fistl
mov
mov
mov
xchg
xor
mov
add
add
mov
pop
addb
sub
fistpl
pop
lret
pop
iret
mull
addr16
fcompl
jo
mov
in
loop
mov
int
lret
add
add
mov
fnstsw
jnp
xchg
jmp
test
pushf
inc
push
lret
cld
rolb
push
outsb
jo
mov
add
sub
mov
lret
mov
adc
mov
mov
stos
or
xor
add
push
daa
mov
xor
imul
test
fists
popa
inc
mov
mov
add
pop
or
mov
xchg
clc
or
xor
in
jnp
ficoml
inc
dec
les
xor
add
pop
pop
xlat
loope
lahf
cmpsl
and
xor
mov
adc
mov
xchg
aam
icebp
mov
mov
nop
add
and
mov
mov
xchg
sahf
test
stos
xor
push
fbstp
dec
out
mov
add
out
add
dec
jmp
and
out
mov
std
loopne
mov
add
in
mov
and
mov
insb
fs
mov
add
mov
add
aas
xchg
les
pusha
add
jbe
adc
add
add
xlat
push
mov
jecxz
push
add
das
rolb
and
mov
mov
mov
add
nop
add
fwait
inc
add
mov
shll
add
ret
pop
out
xchg
rolb
mov
mov
rolb
mov
js
rolb
cmpl
mov
dec
pop
sahf
sahf
cmp
dec
sub
lret
in
sbb
pop
out
jg
fwait
push
mov
add
loopne
mov
stos
inc
stc
pop
cld
or
jae
pop
jecxz
add
add
mov
fcoms
divb
add
add
ret
je
testl
pop
mov
add
mov
xchg
mov
xor
mov
mov
push
push
add
add
mov
sub
call
test
mov
add
dec
call
sbb
push
push
push
loopne
mov
sbb
mov
pop
jp
mov
pop
call
es
les
push
and
mov
sbb
add
pop
jg
outsl
xchg
bound
mov
and
cmpsl
add
mov
add
mov
add
mov
test
push
mov
adc
insl
or
fcompl
jne
add
cmp
into
ss
inc
nop
add
mov
and
popf
jmp
or
add
and
mov
test
mov
incb
cltd
add
mov
jns,pn
add
push
icebp
ficoms
ljmp
fmuls
mov
ficoms
addr16
add
test
loopne
mov
dec
out
xchg
call
dec
sub
fwait
jecxz
push
or
sub
add
xchg
popf
int3
js
add
mov
add
in
fcoml
push
outsl
out
fdivs
lods
jge
add
dec
or
add
sahf
not
loopne
mov
add
rolb
mov
movsb
rolb
mov
adc
ja
mov
test
stc
addb
out
mov
mov
sbb
xlat
outsb
repz
sbb
aas
jae
push
jbe
push
shll
sub
dec
in
test
add
mov
fnstenv
add
mov
rolb
mov
pop
mov
data16
add
add
lret
inc
push
jnp
fildl
lds
dec
jno
ret
in
mov
sub
mov
leave
imul
mov
mov
int3
mov
push
adc
icebp
xchg
add
cltd
or
mov
pusha
add
cmpsl
mov
jne
loop
mov
xor
scas
mov
sbb
nop
add
popa
lods
push
cwtl
push
cltd
push
add
mov
pop
sbb
add
add
daa
dec
bound
mov
into
sahf
and
adc
mov
fwait
xchg
add
mov
add
xchg
ss
stos
and
fisubrl
fnsave
mov
pushf
xor
mov
jg
testb
ret
imull
xchg
mov
jmp
out
pushf
aas
sub
mov
addr16
jnp
jno
rolb
mov
or
aad
ss
lods
push
add
add
add
mov
add
out
or
or
jbe
xchg
mov
pop
enter
adc
movsl
sbb
inc
loop
mov
xchg
mov
cmp
aas
or
ljmp
aaa
pop
cmp
jbe
push
add
sub
nop
add
pushf
sub
sbb
inc
les
mov
andl
jl
je
xchg
add
add
mov
add
mov
adc
mov
add
inc
adc
add
and
mov
std
jge
add
mov
rcll
mov
data16
mov
add
or
ret
mov
inc
xchg
add
loopne
mov
fmuls
mov
mov
mov
add
lahf
stc
rcrl
add
pushf
bound
mov
add
ret
out
xchg
jb
mov
hlt
push
dec
cmp
fsubrl
dec
inc
cmc
cmpsb
addb
stc
cmp
push
mov
sahf
sbb
cltd
call
out
int3
add
jae
mov
mov
out
pop
scas
jecxz
or
add
xor
movsb
mov
stos
in
add
add
mov
mov
push
add
int
cmc
adc
out
add
cmp
mov
add
ret
mov
and
add
mov
ret
movsl
popf
sub
inc
add
jle
inc
add
mov
fnstsw
adc
rolb
mov
sbb
mov
add
mov
jns
fsubp
or
dec
mov
cli
dec
es
add
sub
stos
leave
out
fcmovnu
mov
es
pop
pop
shll
xchg
lret
sbb
mov
add
movsb
adc
mov
cli
cmp
dec
hlt
repnz
test
dec
fldenv
fwait
into
mov
daa
iret
pop
inc
call
push
and
mov
mov
mov
add
cmp
add
add
and
or
sbb
and
add
daa
xor
mov
sbb
mov
cmp
imulb
xchg
cs
aam
pusha
add
add
add
dec
ss
add
mov
cwtl
push
mov
mov
push
ljmp
and
sarl
xor
cmpl
mov
cmp
cmp
dec
lahf
fildl
rcll
mov
mov
fildl
mov
mov
xor
add
icebp
das
in
jbe
adc
jbe
sub
sbb
das
sti
xchg
add
in
int
pop
inc
fdivrp
mov
mov
dec
pop
addb
jp
mov
mov
add
add
dec
cmpl
add
mov
mov
cs
and
add
lods
jecxz
sbb
adc
out
aas
adc
add
setbe
leave
inc
lret
mov
dec
outsb
cmp
sub
xor
mov
cmpsl
std
xor
ret
iret
jge
pushw
lret
add
out
push
pop
push
push
push
push
mov
stos
xor
jl
xchg
xchg
inc
xchg
dec
gs
ja
or
mov
loop
mov
not
push
cmp
mov
xchg
les
xor
into
idiv
stc
sub
stc
je
pop
iret
insb
in
add
addb
pop
add
cmpsl
pop
sbb
dec
into
add
mov
movsb
dec
or
sbb
dec
imul
adc
mov
addb
mov
jnp
cld
loope
xor
dec
das
add
add
add
mov
xchg
jmp
inc
jmp
lock
push
mov
mov
outsb
push
add
pop
sbb
add
imul
out
add
inc
rolb
mov
add
sub
inc
aam
imul
mov
inc
imul
mov
fld
xchg
dec
imull
and
sub
sub
xor
loope
jbe
push
push
addb
jo
mov
sub
lds
jmp
test
cmc
insb
dec
hlt
jbe
add
add
js
enter
dec
pop
and
add
repnz
add
mov
add
add
add
mov
aam
push
mov
jno
sbb
add
imull
add
adc
ss
and
mov
hlt
xchg
out
sub
pop
je
add
mov
cld
out
sub
mov
test
mov
and
addr16
stc
cmpsb
cmpl
das
imul
push
add
in
hlt
xchg
jp
and
pop
push
add
out
jnp
add
pop
lods
repnz
sbb
inc
add
mov
add
pcmpgtb
mov
sarl
xor
decb
sahf
dec
out
mov
stos
cs
int
aaa
inc
add
cli
insl
and
add
outsl
jne
inc
add
leave
dec
repz
add
add
push
jno
add
or
jmp
dec
cmp
ret
xchg
add
call
je
xchg
aam
push
cmp
xlat
fistpl
cli
incl
adc
add
cltd
and
xchg
dec
cmp
fsubr
push
xchg
dec
mov
push
add
xchg
call
pop
inc
test
outsb
outsb
mov
jbe
and
mov
add
jbe
pop
xor
fdivrl
addr16
mov
aas
aas
adcl
mov
add
push
out
xor
mov
rolb
mov
add
ljmp
pop
imul
pop
bound
mov
add
mov
hlt
fwait
testl
out
add
icebp
jp
add
out
add
mov
mov
pop
sti
data16
xor
mov
mov
push
addb
jmp
setb
mov
fisubrs
sbb
pop
adc
lock
addb
push
add
divb
rolb
or
ss
sahf
pop
mov
leave
loopne
mov
add
iret
aas
aam
xor
xchg
add
pop
mov
imul
imul
add
outsb
cmp
add
rcll
xor
mov
sub
push
adc
mov
sub
push
sub
addb
cmp
cmpsl
and
mov
add
dec
out
or
je
sub
mov
xlat
mov
outsb
push
nop
add
les
add
lods
push
and
not
push
add
add
js
xchg
addr16
ja
das
and
mov
sub
pop
nop
add
lds
into
outsb
push
jns
out
pop
lods
testb
sbb
in
dec
cmpsl
push
mov
mov
add
out
or
sub
fsub
sbb
xchg
add
mov
add
inc
add
or
and
mov
xor
mov
mov
mov
leave
mov
mov
cmp
add
shll
cmpsb
ss
popl
mov
stc
jno
adc
add
xor
adc
adc
mov
data16
adc
push
add
mov
xlat
fwait
cli
lret
add
mov
pand
and
hlt
lret
sbb
movsl
jl
nop
add
flds
mov
mov
popf
cmpsl
xchg
sti
add
jo
mov
or
adc
sbb
mov
aaa
xchg
aas
loop
mov
mov
xor
ja
adc
mov
shrl
clc
mov
cmp
and
mov
sbb
in
sbb
and
mov
pop
lcall
push
add
into
cmp
mov
add
or
mov
pop
inc
imull
lahf
xchg
enter
rcll
out
mov
add
stos
lahf
cmp
xchg
hlt
cltd
sbb
xchg
mov
add
sbb
in
or
dec
lea
addb
pop
pop
cmp
dec
mov
inc
add
inc
xlat
mov
cmp
addb
fsubrl
ss
scas
ss
lea
sahf
push
or
imul
lods
lcall
sub
arpl
push
aad
sti
fimull
add
mov
aaa
sbb
pop
fxch
inc
jmp
enter
push
mov
mov
xchg
add
mov
sub
aaa
adc
mov
add
sub
mov
in
sarl
mov
jo
mov
mov
mov
add
and
dec
fmull
scas
push
mov
adc
mov
outsl
xchg
sub
sbb
xor
mov
xchg
push
add
add
movsb
mov
out
imul
dec
outsl
stos
rcrl
cmpsb
jo
mov
cmp
or
mov
push
add
cmpsl
adc
pushf
clc
movsl
push
add
mov
addl
repnz
sub
push
pop
xor
mov
xchg
int
pop
sbb
mov
in
push
imul
movsl
jecxz
add
mov
xor
pop
in
movsb
fistpll
add
fisubrl
sub
jnp
and
xchg
add
movsb
mov
mov
pop
sti
popa
filds
stos
mov
js
mov
mov
les
sub
and
push
pop
cmp
mov
pop
or
cmp
pop
fld
adc
push
add
add
lds
out
push
xor
mov
add
mov
add
jmp
add
add
dec
movsb
pop
sbb
call
mov
add
pop
and
mov
lods
arpl
sbb
add
pop
xor
mov
dec
lret
pop
cmpsb
ss
add
mov
add
add
add
cmp
addb
repnz
rolb
jo
mov
dec
inc
std
scas
das
sub
std
jecxz
movsl
mov
adc
mov
outsb
sbb
add
js
mov
mul
mov
mov
inc
jne
push
add
and
mov
mov
divl
xlat
mov
mov
add
mull
inc
add
ja
testb
add
jnp
mov
cmpsb
fsubl
fwait
or
sarl
jl
lret
sbb
jmp
add
jb
mov
and
cmc
dec
push
and
mov
cltd
ja
dec
mov
es
or
add
inc
mov
mov
pop
mov
mov
inc
add
in
mov
ljmp
movsl
sub
and
and
mov
xor
and
mov
je
or
repnz
xor
mov
dec
fsubr
popf
or
xor
mov
add
mov
jns
push
mov
sbb
test
cli
add
divb
out
es
insb
mov
add
mov
mov
add
mov
rolb
mov
mov
xchg
mov
jnp
loope
sbb
and
mov
mov
pop
sub
mov
or
mov
loopne
mov
ds
fisubrl
imull
add
insl
popa
push
or
jns
adc
add
test
lock
or
lods
xchg
das
mov
inc
xor
mov
clc
sbb
mov
xor
mov
fs
inc
mov
mov
mov
fwait
sbb
pusha
add
mov
mov
lcall
test
mov
movsb
rolb
mov
push
gs
add
rcll
xor
ljmp
es
push
adc
cmc
stc
xor
push
dec
push
add
mov
addr16
cmp
and
add
outsl
adc
adc
sub
mov
and
mov
add
or
out
shll
test
mov
pop
call
insl
push
dec
arpl
cmp
mov
xchg
xchg
ja
sti
pop
or
faddl
add
add
and
lret
nop
add
addl
add
inc
jb
mov
mov
push
sbb
jae
and
add
jbe
aaa
pop
xchg
fs
xchg
rorl
pop
lret
loop
mov
jb
mov
in
scas
enter
fdivs
push
fcmovnb
pop
pop
repz
add
push
loope
jns
sbb
pop
lock
jmp
adc
fisttps
mov
arpl
imul
pop
and
repz
mov
or
cmpsb
stc
les
mov
mov
ljmp
pop
adc
push
cltd
je
inc
jae
mov
std
mov
push
cmp
mov
mov
ljmp
stos
pop
in
add
testl
and
add
adcl
sbb
add
add
lcall
mov
shll
add
je
pop
gs
or
dec
sub
and
add
hlt
mov
dec
sbb
aad
test
out
repnz
dec
scas
cli
jo
mov
testb
adcl
jl
cli
inc
jnp
sbb
mov
mov
push
mov
add
inc
rolb
ret
adc
push
aad
sub
xor
mov
xchg
or
lock
xorl
add
cmp
lock
hlt
test
add
lods
insl
jp
mov
mov
sub
in
inc
add
xchg
dec
stos
ret
shll
scas
movsb
rolb
mov
mov
jns
xchg
mov
jecxz
fisttps
jne
mov
jmp
imul
je
add
adc
jae
jle
add
sub
filds
inc
dec
push
and
mov
push
xchg
jg
dec
rolb
or
add
add
add
xor
mov
mov
hlt
xlat
repz
in
push
ret
insl
ss
les
movsb
addb
dec
lods
and
add
add
sbb
or
jns
sbb
push
and
mov
mov
into
push
adc
mov
add
popf
int3
movsb
jae
and
and
repz
mov
in
aam
in
jbe
aaa
out
mov
add
add
inc
xchg
add
add
pusha
add
ret
lods
xlat
add
mov
sbb
push
stc
loope
mov
mov
sahf
sbb
jg,pn
xor
mov
or
xchg
dec
cmc
xor
mov
lcall
dec
mov
test
add
ds
mov
nop
add
mov
push
pop
add
stos
lcall
mov
mov
add
inc
out
sti
lret
fisubl
mov
xor
sbb
ret
mov
xchg
addr16
dec
dec
aad
sub
pop
xor
scas
loop
mov
rolb
jnp
inc
addb
ja
push
rolb
test
enter
mov
add
outsl
add
mov
mov
and
add
fdivrs
scas
push
mov
hlt
in
or
xor
repnz
dec
pop
in
xchg
aam
push
add
sub
cltd
cmp
mov
xchg
out
inc
cmpsl
xor
insl
ds
inc
push
add
mov
add
mov
mov
pop
jo
mov
mov
dec
xor
movsl
mov
ret
pop
scas
shr
jge
aaa
pop
sub
mov
and
add
add
mov
mov
fldenv
mov
and
mov
in
loopne
mov
cmp
inc
dec
mov
mov
stos
xor
mov
outsb
cmp
aad
add
or
push
pop
add
add
adc
mov
into
cmp
jge
daa
fisttpll
fadd
fs
cltd
adc
mov
icebp
mov
lret
enter
or
sbb
jp
jecxz
add
loopne
mov
mov
shll
fwait
or
inc
push
push
fwait
out
nop
add
fdivrl
mov
xchg
cld
push
jmp
mov
xchg
add
mov
outsb
lods
insl
int
add
int3
iret
add
mov
cld
ret
out
mov
iret
sub
xchg
jne
inc
clc
inc
xor
mov
dec
push
nop
add
clc
inc
loop
mov
pop
push
int
and
mov
xchg
into
xchg
add
das
add
mov
mov
nop
add
or
les
addr16
ficompl
push
pop
insb
push
mov
mov
aam
mov
mov
ds
xchg
add
mov
ret
movsb
lret
inc
int3
lret
scas
inc
cwtl
jnp
adc
popf
fdivs
in
repnz
imul
jge
negb
dec
popa
ret
mov
mov
out
outsl
jne
out
sbb
inc
stos
insl
dec
arpl
in
dec
mov
clc
jno
add
mov
sub
add
imul
inc
add
ss
ret
pop
sub
arpl
push
nop
add
rolb
mov
js
loope
aas
adc
mov
add
cld
pop
mov
jle
mov
push
and
sbb
xchg
add
ja
je
dec
sub
xor
mov
stos
adc
rolb
mov
ja
repnz
ret
inc
jnp
in
sbb
dec
mov
mov
sbb
shrl
cmp
jb
mov
xchg
mov
fld
push
add
ss
repz
jle
jae
loope
ss
jle
add
stc
dec
daa
adc
jae
mov
mov
mov
lret
push
daa
push
insb
dec
je
xchg
arpl
iret
jo
mov
into
ret
add
mov
jns
sub
in
add
mov
or
popa
sbb
pop
mov
pusha
add
add
inc
add
loopne
mov
and
std
dec
xchg
push
add
clc
dec
daa
insl
stc
lock
in
xchg
fmull
es
lods
inc
les
xor
lods
inc
int
aas
add
mov
outsb
lea
pop
cmp
data16
jne
addl
dec
mov
addr16
pop
cld
sbb
cld
add
mov
mov
push
lea
add
rolb
add
inc
ja
add
jmp
test
cmc
xor
mov
cmp
mov
dec
cs
add
mov
loopne
mov
sahf
push
pop
pop
pop
std
fmuls
pop
inc
add
push
and
mov
and
mov
or
mov
add
nop
add
mov
iret
mov
fdivl
repz
mov
stos
daa
outsb
push
pop
push
add
addl
add
add
cmp
int
mov
xlat
leave
mov
push
sahf
add
mov
and
sub
ljmp
mul
lret
ret
stos
sub
arpl
jge
add
push
add
into
lret
or
xor
pop
arpl
push
cmp
lret
mov
xor
mov
call
xor
loope
movsb
shll
outsl
cmp
sahf
out
mov
pushl
add
add
inc
xchg
fadds
jo
mov
add
push
shll
bound
mov
mov
add
add
mov
push
pop
in
cmp
push
add
add
fbstp
fidivs
lods
add
mov
lock
es
cmp
repnz
mov
outsl
and
mov
mov
add
add
leave
call
mov
add
add
addr16
jecxz
jnp
mov
jbe
mov
pop
mov
fidivrl
lock
mov
mov
outsb
fwait
test
dec
xor
movsb
push
cld
push
mov
mov
out
sahf
xor
and
scas
cmp
dec
mov
fstp
arpl
inc
int
dec
add
and
mov
inc
stc
push
add
inc
loop
mov
mov
push
mov
out
pushf
loope
add
dec
jmp
cmpsl
bound
mov
adc
icebp
and
mov
jb
mov
mov
loopne
mov
mov
jge
add
mov
inc
push
loop
mov
mov
mov
rcrl
jno
mov
mov
mov
or
inc
add
pop
xlat
push
ret
movsl
mov
cmp
add
inc
jne
add
push
mov
jns
jl
mov
mov
fcoml
mov
addb
sub
enter
sbb
add
leave
rorl
adc
sahf
mov
lods
aam
je
xchg
outsb
mov
add
add
pop
lahf
out
add
mov
adc
mov
xchg
inc
jns
outsb
inc
sub
and
in
mov
or
faddl
js
mov
inc
outsl
stc
mov
mov
mov
sub
sub
xor
mov
add
mov
outsb
or
lock
jge
sbb
add
push
add
mov
mov
mov
add
add
push
add
adc
dec
lret
pop
iret
cmp
jle
pushf
dec
mov
mov
sbb
aam
jp
es
add
sbb
dec
out
inc
lock
ret
add
mov
add
rolb
pop
push
sbb
xor
rolb
mov
addr16
mov
sbb
cmp
jmp
xlat
fisubrl
mov
sub
inc
add
ss
or
mov
add
mov
push
add
les
jb
mov
add
mov
mov
xor
shl
add
add
rolb
lret
mov
shll
jno
xor
and
sbb
push
aad
imul
mov
mov
sub
mov
mov
mov
inc
mov
inc
sub
dec
je
rcll
jl
add
sub
mov
dec
mov
jp
mov
add
add
js
push
add
jns
add
pop
mov
sbb
ja
add
mov
sarl
pop
les
mov
fadds
pop
sub
push
daa
jae
nop
add
leave
lock
das
insl
push
add
inc
leave
lcall
xchg
add
icebp
cmc
inc
add
mov
std
xchg
add
ret
pushw
mov
addr16
leave
xor
inc
pop
xorl
jp
sub
cmp
push
in
mov
mov
cltd
js
rolb
mov
cli
cmp
into
loop
mov
xchg
test
add
mov
add
mov
add
mov
lods
call
and
cltd
fisubs
adc
sub
cmpsb
pop
pop
pop
or
add
mov
pushf
mov
or
loope
add
or
data16
add
mov
dec
addb
cmp
mov
aas
xchg
mov
das
adc
gs
pop
xchg
add
add
popf
or
xor
mov
mov
jmp
dec
mov
adc
mov
popf
mov
ds
mov
push
adc
mov
and
lods
adc
repnz
push
inc
push
add
inc
sbb
add
out
push
mov
jbe
add
call
inc
cld
or
fildl
sbb
inc
add
mov
pop
push
movsb
add
out
sbb
or
mov
mov
dec
loopne
mov
add
add
add
mov
hlt
jp
add
test
inc
add
push
js
pop
aad
cwtl
pusha
add
popf
push
add
add
cmpsb
mov
movsl
std
lea
jb
mov
add
mov
pop
cmp
pushl
lret
fcomi
rep
jno
loope
pop
data16
jno
cmp
popl
xor
jno
add
add
mov
pop
mov
mov
xor
mov
rcr
xchg
rolb
mov
push
and
int3
insl
dec
cmpsl
jge
xchg
mov
ljmp
mul
xchg
arpl
cli
cmp
stos
test
scas
mov
and
sub
add
xor
pop
pusha
add
outsl
lret
mov
xlat
inc
add
add
mov
and
mov
test
sub
mov
add
aad
and
add
mov
add
mov
hlt
sub
rolb
mov
fisttps
ss
ja
sbb
test
jns
add
inc
adc
mov
addb
aam
or
daa
cld
daa
inc
and
mov
sbb
sbb
mov
mov
add
xor
add
aas
fwait
xchg
add
stos
or
add
out
mov
out
rolb
mov
movsb
mov
arpl
das
jbe
fldl
add
js
xchg
sbb
mov
add
mov
push
sbb
add
push
ds
mov
iret
sbb
ss
mov
imul
jl
arpl
jl
fldl
dec
jo
mov
xchg
rolb
mov
push
jecxz
aas
dec
xchg
arpl
lock
enter
add
rolb
sbb
jo
mov
in
and
add
enter
add
cmpsl
pop
sbb
loopne
mov
dec
xlat
or
or
fs
mov
mov
sub
dec
in
dec
pushf
adc
xor
mov
mov
outsl
imul
add
call
add
sbb
testl
mov
dec
fwait
push
roll
dec
mov
cvtdq2ps
jg
and
mov
stos
cmp
gs
repz
jns
and
mov
add
add
xchg
mov
push
pop
rolb
mov
jo
mov
mov
lea
int3
pop
or
inc
add
pusha
add
pushf
or
add
add
push
mov
bound
mov
add
lahf
add
mov
pop
sub
jecxz
cmp
mov
test
pushf
push
iret
adc
mov
add
mov
push
add
xor
xchg
add
sbb
clc
dec
xchg
sub
mov
mov
add
mov
xor
mov
push
movsb
cmp
push
ret
inc
pop
outsb
mov
fldcw
add
add
pushf
dec
dec
pusha
add
mov
mov
mov
xchg
jl,pt
cmc
or
jmp
mov
aaa
xchg
pop
inc
add
mov
es
in
xchg
mov
add
das
and
jne
push
movsl
mov
mov
mov
xchg
jns
add
mov
sub
xchg
adc
mov
add
mov
aam
xchg
push
add
xor
pushf
sub
inc
add
mov
add
or
xchg
dec
inc
mov
mov
mov
and
pop
pop
je
dec
or
mov
addb
and
jb
mov
ret
jl
inc
add
push
push
rolb
cmc
mov
shll
add
stc
rolb
mov
and
pop
dec
mov
das
pop
xchg
jle
fidivrl
jle
clc
movsb
cmp
iret
dec
in
mov
mov
mov
jle
jp
cmp
adc
cli
jnp
and
cmpsl
call
add
imul
cmp
insb
jb
mov
test
cltd
xor
push
in
pop
ss
std
adc
sti
repnz
or
and
cmp
je
xor
push
adc
pop
push
adc
adc
mov
mov
aaa
sbb
gs
pushf
call
sub
leave
sahf
or
addb
cs
mov
inc
movsb
push
pushf
cmp
mov
mov
xchg
in
sbb
mov
and
mov
or
out
dec
cltd
cmp
je
lret
enter
fsubs
add
into
mov
xchg
dec
inc
inc
jno
pop
add
mov
cmpsl
lcall
loopne
mov
cmp
into
xchg
xor
mov
sbb
fstps
and
mov
fcmovbe
testl
ret
mov
add
mov
loope
jle
cmp
fcmovnu
mov
mov
cmpsl
mov
mov
or
gs
mov
cmp
les
cmp
in
adcl
mov
add
repnz
and
pop
mov
imul
xchg
add
jecxz
lahf
jnp
out
mov
sbb
add
in
push
add
mov
add
push
adc
mov
pop
cmp
ljmp
mov
rolb
mov
mov
stc
jge
mov
cmp
mov
and
mov
into
jmp
add
je
or
add
lods
stos
mov
call
adc
mov
cmpsb
fidivrl
lahf
lret
sbb
xor
mov
jl
add
mov
jp
add
ret
push
add
orps
mov
mov
mov
xchg
es
shrl
test
icebp
lods
push
fistps
push
add
fnstsw
mov
les
call
cld
test
sub
enter
mov
add
mov
popa
rolb
mov
lods
lods
mulb
or
mov
mov
repnz
push
incb
in
dec
mov
outsb
sub
div
cmpsb
sbb
icebp
les
fcmovnb
pushf
popf
les
sub
jae
std
xor
mov
std
test
add
idiv
fadds
xchg
mov
in
or
outsb
in
es
das
or
add
add
add
adc
pop
mov
hlt
ror
pop
fsubl
fld
add
stos
ljmp
jg
aaa
cltd
out
rolb
mov
add
or
iret
daa
enter
ret
xor
xchg
outsb
dec
fisttpll
cmp
orl
push
xchg
movups
mov
push
and
cmp
aaa
bound
mov
and
mov
lea
add
xor
push
pop
sbb
gs
lret
mov
mov
xchg
fisttps
stos
stos
shll
cmpsb
lahf
ret
cmp
popa
inc
add
rorl
add
loopne
mov
stos
fadds
lock
out
lahf
lods
pusha
add
leave
loopne
mov
addb
mov
xor
add
in
aad
or
ret
dec
cmc
shr
das
cs
xor
mov
add
inc
adc
mov
aam
jbe
ss
pop
pop
shrl
add
jb
mov
add
bound
mov
cs
xor
cmp
mov
push
sub
mov
jg
add
aad
mov
sub
mov
into
mov
loopne,pt
mov
add
push
xor
add
pop
inc
inc
mov
jns
push
add
ljmp
xor
rolb
mov
inc
xor
iret
sub
test
or
stc
jns
add
mov
xor
addb
insl
cmc
ret
xor
add
mov
and
mov
fwait
pop
ss
cmp
fwait
lods
nop
jb
mov
stos
pop
cmp
inc
add
add
cmp
out
aad
sub
outsl
popf
dec
sbb
js
lods
mov
pop
and
mov
sub
les
dec
bound
mov
mov
inc
stos
scas
sub
add
scas
mov
movsl
loop
mov
nop
add
cwtl
add
inc
push
popf
loop
mov
mov
xchg
add
mov
add
mov
lods
popf
fidivrs
add
hlt
and
jb
mov
jmp
jns
add
and
xor
mov
mov
jb
mov
push
lock
mov
test
mov
aas
inc
adc
mov
push
loope
dec
cwtl
xor
mov
jl
add
add
aaa
stos
sub
das
aad
xor
mov
add
add
movl
addb
and
mov
add
mov
push
add
inc
imul
add
or
mov
inc
outsl
or
adc
pop
aad
mov
mov
mov
cs
add
jg
add
sbb
lds
add
mov
pop
cmp
mov
ret
repnz
lret
fs
jae
mov
dec
les
push
and
mov
add
aas
sub
mov
movsb
and
mov
push
add
test
mov
mov
add
cmpsl
dec
inc
pop
pop
movsl
popf
and
sahf
and
mov
push
inc
add
mov
icebp
sbb
pop
adc
ljmp
jp
fnstcw
and
rolb
add
loop
mov
aas
rolb
mov
jbe
add
xlat
pop
pop
int3
mov
ja
adc
vpxor
inc
rolb
mov
jne
cmp
loopne
mov
jg
repnz
ss
fcoms
add
cwtl
bound
mov
fstp
mov
ja
mov
fidivrl
lods
cwtl
pop
cmc
dec
ds
push
add
mov
cmc
loopne
mov
mov
jle
add
mov
or
push
mov
xchg
cltd
inc
xchg
rcll
cmp
add
mov
mov
push
add
push
inc
add
add
mov
jl
enter
jp
rolb
mov
insl
mov
mov
clc
mov
je
lcall
add
push
aaa
xor
mov
add
addb
lcall
mov
nop
add
jbe
sub
cmp
mov
mov
add
enter
pushl
add
arpl
or
cmp
xchg
xchg
pusha
add
pop
pop
dec
imul
dec
sub
mov
mov
add
int3
mov
mov
push
add
jmp
mov
push
jo
mov
mov
mov
mov
adc
cmp
lods
icebp
arpl
adc
mov
cli
out
adc
loop
mov
lods
mov
mov
cmc
mov
addb
pushf
inc
fcmovu
mov
mov
fsubs
pop
insb
pop
cmp
mov
loope
iret
sbb
repnz
mov
cmp
jmp
add
mov
dec
fsubrl
pop
mov
lcall
sub
repz
in
push
xchg
arpl
repnz
dec
pop
ss
test
add
or
add
push
add
das
stos
push
out
jmp
xlat
mov
lds
push
add
insl
dec
loope
pop
dec
dec
push
add
add
add
dec
and
mov
add
or
aaa
pushf
mov
mov
add
add
in
jmp
mov
bound
mov
jmp
cs
out
imul
push
add
and
mov
mov
fiadds
dec
leave
and
in
pushf
push
in
sub
mov
jbe
pop
dec
pop
jb
mov
mov
mov
xchg
add
pop
mov
popl
push
jnp
mov
or
insb
dec
outsl
insl
lods
fiadds
loopne
mov
xchg
das
push
popf
es
mov
mov
pop
nop
add
xchg
xchg
add
and
jge
add
fucomi
inc
lds
cs
sbb
pop
cltd
dec
addb
loope
outsl
push
pop
cmpsb
sbbl
inc
lret
and
add
sbb
fwait
arpl
push
push
xlat
bound
mov
mov
cmp
xchg
jae
das
popf
dec
rolb
mov
es
add
pusha
add
and
cmp
lret
push
daa
loope
sbb
mov
jmp
ss
add
or
push
jne
jl
add
sbb
jo
mov
push
jo
mov
loopne
mov
jge
popa
add
std
jmp
add
add
mov
add
add
sub
jmp
xlat
sub
dec
nop
add
adc
mov
add
hlt
into
push
add
hlt
push
push
lods
mov
fdivs
mov
add
fwait
es
sub
in
push
pushf
out
cmp
popa
lret
imul
mov
jno
cmpsl
pop
stos
mov
or
mov
mov
mov
push
add
mulb
add
repz
add
repnz
mov
and
mov
and
mov
add
add
stos
cmpsb
dec
push
cmp
js
movsb
orl
notb
in
and
mov
add
jb
mov
call
add
and
mov
xor
pop
pushf
add
mov
xchg
ds
ret
pop
mov
add
mov
push
ret
sbb
fcoms
into
xchg
add
mov
ja
test
sbb
push
cmpsl
add
mov
mov
mov
add
stc
lds
add
adc
mov
mov
mov
or
repz
add
dec
je
iret
jp
inc
mov
xor
iret
je
lret
fwait
xor
rolb
mov
add
dec
pop
push
mov
sti
cmc
scas
jmp
clc
pop
adc
mov
mov
dec
icebp
out
in
inc
mov
arpl
add
mov
mov
aam
add
mov
lods
daa
addb
dec
xor
mov
pop
or
sub
cmp
sub
test
gs
aad
mov
mov
fcoms
push
cmp
and
push
es
cmpl
mov
mov
fstps
test
clc
mov
pop
and
mov
add
imul
mov
icebp
dec
and
add
roll
sub
add
mov
mov
mov
aam
lret
fldenv
pusha
add
es
cmpsl
aad
pusha
add
pop
jmp
pushf
mov
add
add
pop
shl
add
jo
mov
popa
rolb
mov
iret
scas
ret
out
inc
push
add
inc
lcall
sbb
lahf
test
mov
ljmp
or
mov
mov
add
mov
dec
addb
add
add
push
push
add
mov
gs
repnz
or
fisubrl
aaa
gs
adc
push
add
mov
test
sahf
mov
in
adc
mov
stos
iret
loope
inc
cld
xchg
dec
or
add
lcall
sahf
xchg
xor
add
cmp
mov
iret
push
add
mov
sub
add
and
mov
mov
das
mov
mov
int
aaa
dec
popf
mov
mov
xchg
push
gs
in
addr16
cmp
pusha
add
movsl
mov
mov
push
inc
mov
xchg
add
fstpl
flds
inc
outsb
xor
mov
mov
push
aam
push
and
ret
mov
mov
mov
adc
mov
dec
xchg
add
outsl
sub
add
jg
pusha
add
lods
std
paddb
add
jmp
mov
xchg
cmpsl
cmp
mov
cmp
aad
into
pop
iret
xchg
es
mov
int
insl
cmp
inc
mov
mov
data16
add
add
push
mov
jl
addb
fcompl
test
outsl
imulb
cld
bound
mov
add
jne
out
cmpsb
cwtl
and
mov
ljmp
lods
clc
repz
mov
ficomps
adc
outsl
std
and
add
xor
mov
sub
xchg
push
sbb
and
xchg
xchg
push
scas
imul
add
mov
stc
popa
hlt
and
jmp
add
xchg
loope
fnsave
or
fs
and
mov
xchg
mov
adc
ret
lods
es
jne
push
add
add
aas
xchg
jp
test
lcall
js
imul
mov
das
in
or
stos
xor
or
ds
or
jo
mov
add
add
adc
mov
sar
test
add
lods
fwait
js
cld
mov
mov
add
arpl
inc
sub
add
dec
shrl
pop
xor
mov
jg
not
add
mov
std
lahf
adcl
push
test
add
test
stos
push
pop
movsl
out
mov
add
into
rcr
pop
rolb
jmp
push
cmp
in
hlt
std
xchg
push
add
mov
lahf
cmp
mov
push
int
test
fmul
addl
mov
sti
jge
add
sub
add
mov
dec
out
xchg
add
mov
mov
dec
addr16
dec
dec
sbb
jns
iret
cmc
push
je
push
add
add
mov
repnz
add
int3
sbb
mov
test
cmc
sbb
test
mov
mov
xchg
test
mov
push
bound
mov
add
mov
mov
add
rolb
mov
rorl
popf
inc
hlt
sbb
mov
and
mov
add
leave
sbb
out
mov
mov
inc
jl
in
pop
test
dec
pop
add
mov
aas
cwtl
fsubrs
add
into
bound
mov
popf
imul
test
and
add
rcl
mov
jecxz
popf
xchg
int
daa
outsl
add
cmp
icebp
aad
and
mov
sub
mov
lock
iret
sub
mov
mov
divl
pop
js
mov
pop
repnz
add
inc
sahf
push
fdivl
add
push
repnz
cltd
clc
xor
add
mov
mov
bound
mov
mov
rolb
mov
mov
je
and
mov
dec
lret
inc
xlat
cmp
add
mov
mov
cli
sahf
mov
sbb
leave
incb
add
aas
imul
es
js
add
out
scas
mov
add
test
lret
add
mov
add
mov
imul
scas
sbb
cmp
test
jbe
pusha
add
testl
repnz
in
lret
cli
je
call
outsl
or
jge
arpl
add
add
movsl
jb
mov
daa
orl
int
cld
mov
jl
sub
dec
out
cs
repz
mov
mov
loop
mov
out
jecxz
ds
shll
or
and
aaa
insl
xor
mov
add
or
lods
sbb
sbb
jns
and
jecxz
dec
pop
mov
mov
jbe
iret
mov
fldcw
add
mov
popf
vpackuswb
add
add
lods
xchg
add
add
daa
test
and
mov
cmpsl
push
daa
rolb
mov
mov
mov
and
push
sbb
mov
mov
mov
cmpsl
es
add
pop
popf
dec
push
jbe
add
mov
notb
xchg
add
mov
or
adc
pop
jb
mov
out
adc
mov
shrl
jne
lcall
add
sbb
jb
mov
loop
mov
mov
mov
pop
imul
jge
push
adc
mov
adc
loopne
mov
inc
add
insb
mov
mov
fs
pushf
aad
push
add
or
add
sti
sub
decb
sub
daa
cmp
mov
mov
pop
mov
or
push
add
nop
add
mov
push
repnz
mov
add
push
dec
jno
add
fcom
testb
jge
pop
jnp
sbb
add
pop
or
lods
xchg
adcl
test
cld
aas
mov
pushw
cmpsb
adc
sub
add
movsb
xor
add
mov
mov
movsb
insb
or
inc
or
mov
add
testb
mov
xor
mov
insl
sahf
arpl
lret
repnz
in
mov
shll
loop
mov
mov
inc
add
mov
add
repnz
sub
add
mov
lods
jo
mov
pop
pop
xor
mov
push
cmp
mov
xchg
test
jo
mov
mov
jno
jno
mov
xchg
fsub
int
cmc
fwait
pop
add
mov
adc
mov
mov
popf
or
ret
xor
gs
aam
popa
push
imul
lods
pop
pop
fld
mov
into
lcall
add
out
push
inc
add
mov
adc
pop
out
inc
add
mov
push
add
mov
mov
nop
add
mov
es
push
cmc
sarl
int
aad
add
sbb
rolb
mov
cmp
add
std
scas
pushf
repnz
jns
addb
add
test
jo
mov
add
mov
mov
cld
insl
sub
mov
add
adc
pop
mov
mov
adc
sbb
loop
mov
pop
hlt
out
jnp
push
sub
sahf
cmp
test
xchg
jno
int
pop
add
mov
xor
dec
jae
add
or
out
and
cmpsb
pop
imul
push
add
mov
out
xor
dec
popf
stc
loop
mov
adc
std
push
mov
in
loopne
mov
ret
insl
in
xchg
or
shl
imul
sub
add
lea
mov
popaw
in
add
inc
add
call
jns
push
or
incb
test
add
jmp
stc
cld
lret
rol
lahf
int
fdivl
hlt
jmp
rolb
aas
cmp
scas
adc
mov
add
lock
adc
sub
fidivl
addr16
pop
icebp
pop
xlat
push
mov
dec
inc
lds
out
fs
xor
xor
iret
mov
sahf
add
js
pop
movsl
fists
in
inc
pop
dec
sahf
imul
add
fisttpll
dec
cmp
push
sub
or
pop
push
add
cmpsl
or
dec
rcll
sbb
jno
inc
js
jne
push
jecxz
retw
push
jae
add
xchg
pop
and
push
add
push
xor
mov
aaa
arpl
add
out
cld
add
es
add
cmp
testl
or
cmpsb
fs
test
xchg
sub
arpl
adc
mov
mov
sbb
fistpl
sub
rolb
mov
div
jmp
pop
stos
xor
mov
mov
and
mov
mov
mov
mov
aaa
mov
mov
ficompl
adc
add
movsb
push
cld
outsb
scas
js
add
scas
scas
in
movd
cmpl
addr16
sub
mov
push
iret
insb
in
xor
ret
or
mov
sub
repz
and
mov
popa
jno
pop
jecxz
and
add
test
cmp
mov
push
mov
mov
ret
jae
repnz
xchg
dec
hlt
xchg
call
mov
mov
sbb
mov
jns
pop
sbb
rolb
mov
add
xchg
mov
popa
xchg
mov
movsb
movsl
and
aas
push
test
jp
add
jle
movb
add
data16
repnz
int3
lds
int3
cltd
mov
ja
or
lcall
mov
mov
dec
sbb
aam
lods
mov
mov
repnz
int
sbb
push
sbb
adc
mov
sti
cmpl
mov
bound
mov
add
pop
ret
std
shrl
mov
or
pop
dec
adc
call
lret
dec
aam
adc
mov
lds
rolb
mov
dec
adc
mov
out
lea
add
push
int
pop
js
mov
pop
mov
mov
ljmp
sub
int3
add
mov
add
jne
jmp
fnstenv
add
add
add
add
mov
ja
add
sbb
mov
movl
test
xchg
inc
xor
in
test
xchg
cmp
les
jl
add
jg
adc
mov
mov
xlat
in
sbb
xor
loopne
mov
loope
add
mov
rolb
push
ret
fbld
push
in
test
sbb
adc
mov
popa
imul
mov
addb
popa
test
pop
imul
add
mov
insl
dec
xchg
jo
mov
das
sbb
mov
xchg
les
add
add
cld
cmp
test
es
jle
xchg
in
aaa
lret
sbb
clts
adc
xchg
and
cwtl
lret
xchg
mov
pop
mov
mov
push
add
xor
xchg
adc
inc
inc
mov
mov
add
insl
xor
add
mov
mov
lds
push
xchg
or
dec
aas
repz
scas
push
xor
mov
add
add
add
or
xchg
addb
repnz
aam
cwtl
es
imul
add
mov
mov
mov
add
jle
inc
add
test
ret
cmp
jge
adc
repnz
mov
inc
add
mov
lcall
jne
jg
nop
add
xchg
fwait
sbb
xchg
hlt
mov
sbb
mov
mov
sub
push
imul
arpl
rolb
mov
es
imul
add
dec
jns
enter
call
dec
push
imul
pop
xchg
cmp
jbe
mov
lret
jp
xlat
mov
ret
inc
xor
mov
mov
fsub
and
leave
cmpsb
mov
and
mov
adc
mov
mov
test
add
out
lock
pop
jae
pop
fwait
jle
ja
stos
push
sbb
or
mov
aam
cmp
mov
xor
mov
mov
mov
fwait
inc
jns
jns
leave
in
jns
popa
pop
ret
int3
dec
test
push
and
or
or
leave
sub
cmp
xor
nop
add
cmp
add
or
jne
lahf
lods
pop
sbb
loopne
mov
push
ja
mov
sub
add
rcll
les
test
out
scas
pop
incl
fwait
sbb
add
add
jo
mov
js
aam
inc
jns
mov
icebp
inc
push
inc
mov
lahf
ja
mov
push
cmpsl
out
push
cmc
mov
add
mov
xchg
lods
push
jle
pop
inc
pop
and
add
xchg
icebp
addl
add
dec
or
or
je
stos
sbb
cmp
fsub
mov
add
mov
mov
out
or
inc
add
mov
out
inc
mov
cli
sbbl
je
inc
add
add
mov
mov
lahf
add
lea
cmp
add
sub
test
inc
push
movsb
sysexit
aas
cmp
sub
sub
add
sbb
push
aam
flds
add
fbld
dec
or
xchg
insl
pop
ret
inc
and
add
adc
or
imul
xor
mov
sub
call
and
lock
lret
add
add
sbb
push
xor
mov
adc
scas
in
pop
mov
mov
fcmovu
adc
pushf
or
mov
addb
cmpsb
in
inc
add
loop
mov
out
je
push
lret
mov
rolb
lods
xchg
or
xor
add
push
mov
mov
lock
ss
xor
fistl
mov
add
repnz
sbb
push
inc
jmp
add
push
mov
fisubl
mov
sbb
movsb
call
add
pushf
mov
add
sbb
add
and
sti
dec
cltd
mov
inc
pushf
dec
cwtl
or
add
add
in
fcmovb
into
jo
mov
sub
push
or
and
mov
mov
xchg
dec
mov
mov
push
add
gs
jbe
rorl
sbb
stc
stos
pop
rcll
add
push
pop
push
lahf
mov
repnz
add
nop
add
int3
xor
in
jno
inc
pop
jb
mov
mov
sahf
outsl
aaa
lds
addb
jmp
and
mov
dec
stos
xor
aad
add
test
addb
hlt
or
add
add
xchg
add
jg
mov
mov
insl
iret
inc
mov
mov
add
mov
rolb
cwtl
rolb
mov
sbb
pop
fbld
sbb
add
pop
push
cli
in
mov
add
mov
pop
jmp
cpuid
add
mov
inc
jmp
mov
cmp
mov
pop
into
or
test
add
outsb
gs
sub
mov
sti
es
popf
mov
into
mov
dec
notl
aas
inc
jp
addb
dec
mov
shll
enter
mov
adc
sub
xor
add
push
add
test
fwait
cmp
aad
jno
into
pop
fisttpll
add
mov
add
or
mov
add
sub
sti
iretw
mov
imul
dec
dec
bound
mov
add
lret
add
mov
out
imul
in
pop
mov
xor
xchg
mov
sub
add
loop
mov
sbb
ret
mov
mov
mov
add
add
cmp
pop
iret
cwtl
dec
addb
outsb
into
xchg
std
lds
add
cwtl
rolb
mov
xor
ljmp
sbb
jl
and
mov
jge
push
mov
adc
lds
cmpsl
dec
sbb
into
jae
ret
mov
xor
adc
fists
sub
or
or
cltd
or
and
push
mov
add
and
movsb
pop
adc
jns
or
imull
sub
inc
add
or
loope
and
sahf
call
mov
push
in
pop
mov
in
pop
jbe
call
out
adc
mov
lods
lret
xchg
jnp
aam
mov
add
enter
mov
add
stc
sub
cmpsb
jo
mov
and
mov
xchg
xchg
lret
add
cs
pop
cmpsb
lret
dec
mov
andl
loop
mov
add
push
mov
aad
pop
sub
outsb
sbb
mov
add
mov
mov
js
aas
pop
in
repz
mov
mov
pop
dec
call
mov
push
in
xor
sahf
dec
mov
and
cmp
mull
movl
cmc
pop
push
fwait
and
and
cwtl
mov
sbb
rcrl
push
inc
lods
sub
xor
inc
add
mov
jae
and
mov
add
stc
xchg
mulb
daa
js
add
imul
stc
lret
jl
cmp
mov
test
inc
add
pop
and
cmp
das
cli
xor
lret
adc
inc
pushf
sbb
mov
mov
jecxz
and
add
in
jmp
jbe
std
stc
sub
test
add
push
cmp
or
mov
mov
scas
cmp
mov
pop
xchg
cltd
push
pop
test
mov
push
icebp
jmp
insl
push
jno
sbb
mov
cli
mov
push
mov
xor
lods
sbb
push
sti
push
pop
xchg
jle
jo
mov
mov
cld
pop
rolb
sub
popa
stos
push
shll
jb
mov
inc
insb
pop
daa
icebp
pusha
add
enter
mov
jmp
stos
ljmp
lcall
rcll
lahf
cmpsb
push
xor
int3
lret
and
mov
jmp
movsb
lret
dec
adc
inc
aaa
xchg
pop
lret
mov
adc
mov
jl
pop
and
xlat
mov
repnz
lret
jecxz
pop
jo
mov
add
stos
sbb
jmp
adc
rolb
mov
testl
test
jecxz
fcompl
sub
sub
mov
mov
mov
push
data16
rolb
test
fists
add
lods
xchg
pushf
adc
mov
ss
out
pop
and
mov
outsb
cmp
fldenv
xchg
movl
pushf
loopne
mov
add
cwtl
and
mov
xchg
xchg
and
add
xor
add
add
lods
add
jns
dec
lds
movsl
xor
xor
aam
push
pop
cmp
jge
jo
mov
stos
lret
push
mov
mov
add
gs
rolb
mov
add
pop
sub
inc
mov
fwait
inc
add
xor
mov
xchg
adc
mov
push
decl
mov
add
sub
adc
mov
cmpsl
add
mov
mov
outsl
js
jo
mov
xchg
push
mov
mov
mov
mov
add
mov
or
mov
add
or
mov
add
add
bound
mov
mov
add
mov
sub
mov
inc
pop
rolb
mov
push
out
addr16
ljmp
sti
fnstsw
lcall
loopne
mov
mov
mov
lods
hlt
clc
leave
daa
out
adc
add
inc
add
mov
mov
xchg
decl
lods
mov
add
dec
xor
rolb
aam
or
push
fwait
pop
sbb
xchg
mov
pusha
add
add
imul
mov
mov
add
test
push
dec
dec
sub
and
xchg
add
push
add
mov
mov
add
rolb
mov
rolb
mov
pushf
stos
movsl
orl
inc
lcall
inc
ljmp
or
pushf
stc
je
repz
push
add
add
adc
mov
pop
ss
lods
push
data16
fcomi
imul
in
push
jl
notl
or
and
dec
push
add
add
add
xor
add
ja
aas
add
ret
push
adc
insb
ret
movsl
or
ficomps
ret
sahf
lahf
dec
loop
mov
and
mov
mov
mov
xor
add
pop
sbb
addb
out
add
jo
mov
inc
mov
mov
fists
mov
sbb
stos
xchg
mov
mov
mov
add
xchg
xor
test
loop
mov
cld
and
dec
in
adc
mov
lds
pop
xchg
adc
mov
add
sbb
add
test
add
and
cmp
jnp
pop
pop
in
jne
add
add
sub
sbb
mov
repnz
mov
add
arpl
sbb
pop
into
sub
cld
mov
xchg
add
addb
test
xor
mov
mov
push
popf
cmp
jle
sub
pop
or
dec
stos
sub
mov
call
por
testl
jae
and
addb
xlat
jl
mov
fnstsw
mov
rolb
mov
outsl
dec
rcrl
add
mov
and
jecxz
pop
movsb
mov
daa
aas
mov
mov
les
icebp
cmpsl
adc
dec
mov
mov
mov
add
mov
fisttps
xor
mov
add
sub
or
add
mov
ljmp
subl
xchg
stos
push
sti
adc
into
mov
fdivrs
mov
int3
mov
mov
pop
cmpsl
stc
jne
rolb
fs
int3
mov
add
div
add
dec
mov
push
jbe
inc
add
in
sub
xor
mov
add
mov
aaa
dec
mov
repz
mov
movsl
and
jge
lods
ret
mov
mov
add
std
ja
jns
pop
push
cmc
xor
mov
push
add
stos
mov
ret
popa
addb
in
and
mov
mov
jo
mov
add
es
sub
add
fcompl
into
fsub
add
rcl
fnstsw
mov
xchg
add
pop
lock
xchg
jnp
xchg
cmp
test
add
push
xor
fsubp
ficompl
out
push
add
add
jle
add
pop
cltd
and
mov
add
out
adc
mov
adc
mov
out
or
add
add
add
mov
js
add
repnz
cmp
movsl
push
lods
cmp
rolb
mov
iret
pop
lods
sbb
push
push
bound
mov
add
mov
ret
fwait
push
inc
add
add
cmpsb
push
mov
add
dec
push
std
mov
shll
mov
jb
mov
add
mov
mov
lods
sbb
jp
lds
add
lcall
sbb
icebp
xchg
add
sub
push
add
or
jnp
add
ljmp
jmp
add
leave
push
add
out
xchg
push
popf
fmull
popf
fisubrl
popf
jne
mov
out
lret
add
xor
mov
add
mov
mov
ss
xchg
test
call
mov
in
outsl
inc
jns
pushf
cs
xor
sbb
leave
cmpsb
jno
jns
add
mov
jo
mov
add
and
mov
jge
aaa
adc
mov
fldenv
ret
mov
mov
int
adc
mov
mov
mov
stc
and
add
add
xor
mov
add
lods
mov
cmp
sti
or
lods
or
mov
mov
add
jns
jle
add
mov
push
pop
mov
push
add
add
nop
add
add
add
fisubl
xchg
inc
pop
sbb
roll
rolb
xor
mov
pop
mov
lods
push
lret
jmp
add
inc
pop
push
lcall
je
or
add
test
add
add
add
mov
dec
xchg
add
mov
ss
in
add
lret
pop
lds
lods
loop
mov
sub
mov
scas
repnz
mov
add
cmp
mov
out
jmp
adc
add
pushf
sbb
sub
sbb
sbb
mov
mov
dec
and
add
mov
cmpsl
jne
inc
cmpsb
mov
mov
repnz
ss
test
rcll
das
jbe
push
add
pop
movsl
test
negb
add
lock
jne
mov
xchg
add
and
mov
popa
mov
push
jne
jl
xchg
and
mov
mov
and
loopne
mov
add
scas
int
add
cli
ret
push
ljmp
jne
mov
add
add
add
inc
es
mov
cmp
sbb
add
mov
push
dec
cmp
fnsave
pop
mov
lock
mov
sti
fnstenv
jge
adc
dec
fnstsw
movl
cwtl
jno
icebp
std
pop
cmp
pop
aad
sahf
sub
mov
xor
loopne
mov
add
mov
add
or
push
add
mov
rolb
mov
adc
mov
test
add
mov
cmovae
hlt
fsubr
push
pop
add
mov
xchg
jo
mov
mov
mov
adc
mov
icebp
stos
push
rolb
mov
pop
ljmp
or
cs
adc
mov
addr16
rcrl
push
pop
je
pop
jae
xor
mov
nop
add
pop
js
add
ret
mov
cmpsb
pushf
jne
test
mov
add
push
lcall
mov
fisttpll
sbb
sbb
dec
enter
mov
movsl
xchg
pusha
add
cmp
nop
add
jge
or
xchg
push
fstpt
cmpsl
jae
sbb
push
add
and
arpl
pop
sarl
fists
add
adc
mov
mov
or
idivl
mov
inc
out
push
cwtl
iret
imul
xlat
and
mov
leave
mov
mov
inc
jo
mov
cmp
iret
mov
inc
pop
and
xor
mov
cwtl
add
mov
addb
mov
js
loope
fwait
sahf
and
fistpl
lcall
mov
stc
jp
fnclex
add
ret
loope
movsl
or
shr
xchg
mov
add
aam
fildll
stos
mov
dec
test
or
int3
shr
cmpsl
movsl
xor
sub
and
mov
shll
and
movsl
incl
rolb
mov
or
mov
mov
add
fmull
mov
mov
ret
sub
push
adc
sbb
adc
mov
loop
mov
mov
mov
inc
repnz
mov
mov
and
mov
lods
sbb
jo
mov
add
sub
cltd
sbb
xchg
cld
not
cmp
rolb
sbb
lds
lods
mov
cld
cld
inc
sbb
call
add
lret
mov
adc
jmp
push
jns
inc
in
add
outsb
dec
or
call
int3
or
sub
lock
mov
test
divb
nop
add
jp
xor
mov
lcall
ljmp
mov
jbe
sub
fidivl
mov
add
mov
add
or
std
mov
xor
jno
mov
add
push
or
js
add
sub
ret
cld
push
adc
xchg
arpl
mov
cmp
mov
add
cmp
stos
adc
outsw
dec
mov
add
jecxz
inc
mov
insl
inc
jbe
pop
jle
pop
out
sti
cmp
test
mov
popa
dec
dec
mov
dec
pop
leave
rorl
add
adc
mov
add
into
lods
rolb
mov
mov
mov
mov
ljmp
xchg
adcl
mov
and
jnp
jne
push
loop
mov
add
push
enter
int
out
push
add
mov
mov
adc
add
push
outsl
cmp
add
mov
icebp
xlat
mov
mov
xchg
cmpsl
adc
mov
cmp
add
add
frstor
jns
mov
mov
inc
add
std
fbstp
gs
and
or
push
mov
test
pop
add
xchg
add
ret
mov
mov
repnz
inc
cmp
pop
add
mov
adc
mov
cwtl
std
les
mov
mov
add
pushf
dec
stc
xchg
add
mov
mov
sahf
test
mov
inc
and
out
stc
pushf
mov
add
mov
ret
hlt
jne
pop
inc
aad
fwait
lods
mov
push
mov
sahf
ljmp
add
cmc
dec
in
push
add
sarl
cmp
rolb
mov
dec
mov
idivb
and
sbb
pop
xorl
add
add
sub
dec
sbb
pop
xor
xchg
popf
push
out
mov
mov
sahf
loop
mov
mov
add
test
mov
js
add
dec
inc
add
add
cli
cmc
stos
push
and
fidivl
pop
mov
mov
add
test
xchg
mov
jmp
rolb
lret
inc
mov
add
inc
clc
add
push
sbb
mov
scas
adc
mov
fwait
and
cmpsb
add
mov
rcll
pusha
add
mov
sti
movsl
xchg
sbb
ret
insb
sbb
xor
mov
jb
mov
cmp
mov
sub
pop
insb
addb
lret
mov
pop
mov
pop
cltd
mov
les
mov
enter
sbb
clc
and
and
mov
dec
int3
mov
mov
dec
push
lahf
nop
add
mov
sbb
mov
rolb
ss
lret
jb
mov
test
cmp
cwtl
std
push
xor
cmpsl
inc
outsb
ja
das
rolb
popf
pop
inc
xchg
or
addb
cmovae
cli
jmp
repnz
mov
push
arpl
add
add
pop
jp
jmp
fucom
add
movsb
std
out
sbb
test
sarl
nop
add
cltd
dec
jp
jbe
lods
stc
mov
loop
mov
add
add
rolb
mov
stc
or
sbb
loope
test
imul
mov
push
xchg
sbb
repnz
jg
repnz
mov
and
fwait
pop
and
mov
fs
add
or
inc
scas
arpl
adc
or
std
fdivl
mov
sbb
and
lret
ret
in
sub
pop
add
outsl
xor
jnp
inc
test
lret
dec
fwait
inc
ret
loopne
mov
add
bound
mov
lods
push
cmpsl
push
es
jecxz
loopne
mov
sub
imul
iret
jbe
add
mov
add
mov
mov
mov
sahf
cwtl
out
xchg
adc
mov
and
shll
mov
add
gs
add
cmp
es
lret
and
cltd
sub
enter
fildll
cli
push
cmpps
outsl
mov
jmp
mov
outsl
test
lock
int3
lret
dec
jo
mov
lds
mov
sub
aas
mov
mov
out
add
add
enter
or
mov
mov
pop
and
sti
adc
addb
imul
lret
sbb
in
adc
mov
jo
mov
cmc
or
fidivrl
rolb
mov
add
pusha
add
xchg
add
movl
add
mov
xchg
popf
xchg
repz
mov
add
push
adc
pop
mov
pop
enter
pop
xchg
mov
rolb
mov
pand
push
add
sub
add
enter
mov
jecxz
pusha
add
push
int3
jae
lea
jge
sbb
mov
add
add
ja
ret
rolb
mov
mov
push
in
jne
das
iret
dec
sbb
sub
and
xchg
add
pop
push
add
push
lcall
adc
inc
stos
fdivrp
aad
pop
add
mov
es
add
mov
mov
mov
pop
sti
push
int
bound
mov
add
icebp
pop
dec
out
rolb
sbb
add
scas
jmp
mov
test
movsl
sbb
add
add
or
test
push
add
cmp
pop
xlat
push
jecxz
je
adc
mov
repz
pop
int3
jne
add
into
pop
cmp
sbb
mov
pushf
push
adc
add
out
adc
add
sahf
lahf
loop
mov
insl
xchg
sar
push
add
xchg
xchg
inc
add
lds
cwtl
stc
outsl
mov
cmc
adc
mov
sbb
mov
mov
jl
fcmovu
ret
movsl
movsl
dec
mov
stos
jae
xchg
xchg
mov
mulb
add
lea
add
add
insl
aam
add
mov
push
stos
out
out
dec
dec
xchg
mov
lret
notb
mov
lret
xchg
dec
addb
out
pop
pop
cmp
fwait
ret
xchg
fbstp
mov
icebp
sub
rcrl
fmull
bound
mov
mov
es
xor
mov
ss
insb
jge
add
cmp
ret
pop
lcall
mov
inc
shll
mov
out
dec
push
std
xchg
call
xchg
and
int
das
jl
jge
es
sub
cld
popa
ffree
popa
pop
addb
add
repz
add
or
xor
mov
js
sbb
rcl
add
and
or
lea
pop
addr16
repz
inc
ja
pop
dec
push
jecxz
mov
and
mov
xchg
fs
xchg
xor
cltd
in
cld
repnz
mov
xor
ficompl
cmc
xor
lahf
in
add
ret
push
sub
mov
mov
mov
xor
mov
cmp
xchg
je
push
push
add
mov
add
inc
add
add
dec
xchg
pop
mov
mov
cmp
into
xchg
das
mov
add
add
jge
inc
imul
add
add
or
lahf
insb
xchg
pop
sbb
mov
gs
mov
ljmp
jl
out
inc
jb
mov
cmp
mov
add
add
push
insb
and
jle
cld
mov
mov
in
lcall
inc
mov
mov
out
idivb
add
fs
mov
add
cmp
and
mov
ret
pushf
dec
mov
mov
out
addb
or
addb
and
mov
mov
mov
mov
add
sub
add
pop
cli
and
and
mov
icebp
mov
lret
xor
mov
jge
inc
imul
pushf
rcrl
add
push
add
push
sub
rolb
mov
out
mov
push
rorl
pop
aam
repnz
push
or
inc
add
jp
dec
adc
sub
fs
pop
ficompl
push
xor
push
pop
addb
lods
rep
clc
mov
mov
data16
test
out
rolb
mov
mulb
aaa
scas
fwait
sti
push
or
lcall
add
mov
gs
lods
push
cmp
push
jmp
dec
push
jge
daa
ljmp
fists
movsb
pop
jno
pop
xchg
aad
mov
mov
cli
jmp
add
mov
add
mov
jmp
repnz
jecxz
hlt
int
and
mov
jbe
add
outsb
mov
jmp
jecxz
rcll
insl
dec
or
pop
fsubrs
jmp
out
rolb
mov
push
je
add
add
jae
aas
cmp
sbb
out
push
fdivl
pop
or
inc
jns
xlat
mov
out
jne
xchg
adc
in
dec
fadds
push
push
test
imul
sub
inc
push
add
mov
stc
adc
mov
add
add
stos
repnz
jl
rolb
mov
add
adc
ret
xor
sbb
mov
sub
jecxz
icebp
sub
lock
mov
cmpsb
out
lods
rolb
or
out
add
inc
and
mov
adc
mov
or
and
add
inc
jo
mov
add
aas
in
pop
push
xchg
insb
test
cmc
xchg
dec
test
add
addb
or
inc
orl
insb
es
jns
test
and
test
fbld
hlt
cmp
addr16
mov
add
pop
enter
mov
cmp
add
mov
push
and
add
dec
jno
fwait
jmp
adc
push
movsl
cmp
scas
inc
fs
lcall
or
and
add
add
mov
leave
popa
mov
fbld
ds
pusha
add
das
mov
add
enter
fisubrl
stos
in
jmp
bound
mov
mov
mov
dec
bound
mov
mov
inc
leave
add
inc
jae
sbb
add
int3
das
pop
fs
mov
add
mov
mov
icebp
test
mov
push
mov
mov
stos
loope
xor
mov
aad
andl
pop
cwtl
adc
mov
add
mov
fucomi
mov
add
insl
sbb
pop
fmull
ljmp
add
pop
pop
in
add
sbb
addb
fwait
cmp
mov
inc
in
pop
and
pop
mov
mov
add
mov
popa
push
sub
add
aam
xchg
or
xorl
push
add
add
fmuls
fwait
sub
mov
rolb
mov
lds
mov
jge
dec
xor
mov
inc
add
lods
lock
ret
dec
pop
icebp
fcompl
add
int
mov
mov
add
pop
xchg
repnz
mov
insb
lret
and
mov
mov
ljmp
in
jecxz
rorl
pop
aaa
mov
add
mov
mov
in
inc
pop
les
add
adc
fcompl
cmp
jno
or
js
cwtl
les
into
in
cwtl
sbbl
sbb
enter
dec
js
ljmp
mov
jecxz
jbe
fldt
xchg
add
xlat
inc
iret
call
add
and
std
xor
mov
fdivl
es
mov
push
add
dec
hlt
lds
jno
cli
stc
pop
cmp
push
fcmove
inc
loopne
mov
test
faddl
pushl
mov
add
rorl
ja
out
insb
add
jp
test
shll
mov
into
inc
add
sub
dec
bound
mov
push
xor
mov
adc
mov
lret
rolb
mov
aaa
add
scas
or
cmc
mov
cltd
ja
leave
push
pop
int3
add
and
mov
or
jnp
add
dec
and
mov
xor
xchg
mov
mov
clc
cmpsl
pop
adc
fmuls
add
mov
sub
add
mov
std
pop
daa
mov
cmp
enter
add
rolb
mov
dec
fs
and
mov
in
repnz
orl
rolb
mov
sbb
fwait
cmp
pop
rolb
or
shrl
rol
and
mov
add
lods
fnsave
cmp
and
cwtl
ficoms
mov
push
rolb
mov
mov
mov
out
aaa
cltd
test
sub
push
xchg
add
cmp
or
or
mov
xchg
add
push
cmp
adc
mov
or
add
add
mov
mov
call
pop
push
or
arpl
ss
out
testb
out
add
mov
or
sbb
je
ljmp
adc
mov
add
add
pop
mov
insl
outsb
jno
jg
mov
mov
pop
and
pop
lock
pop
xlat
mov
pop
pushf
nop
add
lods
lahf
xchg
cwtl
xchg
dec
pop
movsl
movsl
or
cmpsb
out
xchg
xchg
sub
jo
mov
rcll
test
jns
cmc
jbe
mull
add
xchg
and
mov
add
mov
popf
rcl
push
imul
add
daa
cmp
push
xor
loopne
mov
xor
mov
add
outsl
push
inc
pop
xchg
push
pusha
add
std
mov
fwait
psrlq
mov
cld
jmp
mov
xchg
mov
out
inc
mov
lret
sub
lock
fwait
mov
mov
dec
xorl
lahf
icebp
sti
sbb
mov
xor
mov
out
in
into
arpl
js
add
pop
fxch
dec
adc
mov
popf
inc
fs
nop
add
ret
loope
les
inc
add
je
mov
mov
mov
xchg
add
add
je
xor
aad
adcl
repz
stos
mov
mov
mov
xor
loopne
mov
push
aaa
subl
add
out
dec
shr
mov
mov
addr16
mov
insl
xchg
add
mov
ss
mov
mov
shrl
cwtl
mov
push
add
orl
pop
nop
add
mov
xchg
out
daa
pop
and
int3
mov
push
xchg
add
sbb
adc
in
jp
jnp
lods
sbb
pop
fwait
push
pop
add
mov
sbb
mov
mov
std
insl
push
ret
mov
call
mov
sub
jl
xchg
jns
xor
jo
mov
xorl
jl
push
add
insb
pop
and
fstpt
xchg
jae
sub
add
sub
xchg
xchg
in
ds
dec
add
fldenv
add
push
add
mov
fmuls
xor
mov
pop
and
mov
mov
notb
dec
sbb
stc
fbstp
mov
inc
add
mov
lock
cmp
sarl
mov
push
cmp
cmpl
add
dec
sbb
add
inc
add
stos
pop
pop
push
xchg
repz
jl
add
mov
mov
push
pop
arpl
stos
add
xchg
push
fnstsw
in
mov
ja
jmp
mov
or
test
mov
push
dec
fisttpll
sbb
cmc
adc
cld
mov
outsl
mov
mov
scas
add
add
jb
mov
pop
adcl
not
jbe
arpl
xchg
scas
push
outsl
test
insb
xchg
cli
aas
fisubs
mov
jns
popa
xlat
cmp
imul
stc
mov
mov
add
mov
mov
stos
pop
addb
add
adc
mov
in
ja
or
movsb
paddusb
add
pop
inc
movsl
mov
sub
add
arpl
addr16
clc
adc
mov
mov
mov
push
push
inc
xchg
cmp
push
loope
daa
xor
add
inc
not
jae
or
lea
addb
pop
push
push
add
jecxz
or
and
push
dec
inc
daa
mov
mov
add
out
jne
xor
imul
jb
mov
add
mov
int3
add
mov
cs
add
test
icebp
addr16
scas
lods
scas
mov
mov
dec
push
add
push
fcmovnb
sbb
jne
pop
addr16
add
incb
call
mov
in
sub
add
in
jae
jb
mov
ja
push
or
imul
add
add
push
iret
jg
imul
inc
add
idivb
push
cmpsl
lock
mov
inc
pushf
pushf
subl
clc
cli
mov
mov
scas
jmp
xchg
sub
add
push
ja
pop
and
xchg
mov
fcmovnu
rolb
mov
enter
pushf
nop
add
push
dec
mov
in
xlat
add
mov
loope
mov
inc
addb
mov
shll
mov
or
jno
inc
jns
jle
or
mov
int3
pop
lock
or
sbb
outsb
xor
mov
add
int3
xlat
mov
pop
addb
outsb
ret
adc
mov
lods
push
xor
push
pushf
cmp
adc
fsubp
pushf
push
inc
add
mov
inc
add
add
daa
push
pop
adc
mov
test
add
sub
mov
add
sub
xchg
add
mov
ljmp
inc
lods
mov
mov
dec
ret
xor
mov
fcomi
fisubs
jl
sub
xchg
add
sbb
hlt
jl
test
pop
jmp
xor
sub
sbb
ja
ja
repz
push
and
stc
xchg
add
addb
push
mov
mov
test
dec
std
jnp
add
sti
out
mov
add
mov
ss
pop
pop
ljmp
jecxz
idivl
pusha
add
add
adc
mov
popa
sub
inc
rorx
daa
sub
enter
mov
jle
dec
addb
jmp
and
mov
mov
add
mov
sbb
mov
mov
add
mov
pop
sub
in
sbb
add
bound
mov
push
add
mov
js
jo
mov
pop
dec
or
ficomps
cmc
push
addb
jle
mov
cmpsl
bound
mov
xor
mov
fdivrl
daa
frstor
dec
or
rolb
mov
push
sbb
fdivl
jle
xchg
sub
pop
mov
cmpsb
insl
add
out
lcall
jne
dec
and
fmuls
xchg
jno
xor
mov
scas
mov
dec
fcmovnu
das
jne
pop
sub
adc
cmp
ret
sbb
add
in
sub
add
loop
mov
popa
dec
sub
and
mov
ja
and
mov
dec
dec
push
movsb
push
push
andl
add
cltd
jno
mov
inc
mov
add
std
push
add
addb
sbb
in
xchg
add
and
mov
add
or
sti
lods
lcall
pop
add
mov
fidivrs
dec
lcall
push
sbb
mov
pop
dec
push
fwait
rolb
mov
jnp
mov
test
pop
dec
popa
jne
mov
bound
mov
push
add
push
clc
pop
jp
out
fnstcw
adc
mov
ds
clc
aad
outsb
dec
mov
popf
fidivrl
dec
mov
inc
imul
roll
lods
fidivs
sub
and
jp
aam
mov
xchg
push
add
pop
add
pusha
add
add
add
pop
sub
inc
loopne
mov
rcrl
fbld
pushf
imul
mov
mov
mov
mov
mov
add
jle
jne
flds
jo
mov
or
je
inc
fwait
popf
mov
xor
shl
add
fsubs
lea
cltd
inc
add
and
les
jno
mov
cmp
mov
js
lcall
mov
dec
jecxz
rcrl
mov
adc
jl
mov
xlat
stc
xor
mov
movsb
mov
inc
add
sbb
in
int
fiadds
sbbl
and
mov
mov
inc
outsl
inc
daa
lods
adc
mov
pop
in
push
xchg
fs
jnp
arpl
and
push
add
adc
mov
mov
loopne
mov
or
sub
ja
add
and
xor
mov
rolb
mov
je
add
mov
sub
xor
addb
cmc
addb
adc
push
mov
pop
mov
lahf
inc
add
imul
outsl
add
mov
xor
fiaddl
pop
insb
cmp
add
je
call
mov
add
xor
inc
xor
adc
add
repz
push
out
pop
and
mov
inc
jp
ret
fs
cmc
fwait
jle
in
or
add
outsb
add
xchg
add
fcmovnbe
or
pop
icebp
ljmp
mov
add
jae
mov
add
add
out
rcll
xchg
add
cmp
cmp
into
xchg
sub
pushf
daa
jmp
mov
or
or
add
mov
mov
cmovae
add
mov
rolb
mov
mov
add
cld
cmp
lahf
dec
and
mov
call
adc
mov
ljmp
add
lcall
mov
out
cmp
xchg
cld
mov
es
jge
outsb
sahf
sbb
push
inc
cld
fisttpl
lahf
push
add
mov
xchg
inc
dec
ja
push
dec
pop
and
je
mov
mov
cmp
jae
dec
les
or
aas
xor
jb
mov
aaa
hlt
pushf
cmp
adc
clc
fisttpll
sub
loope
add
add
sbb
add
mov
loopne
mov
aas
outsl
inc
pop
call
test
add
ficoml
lods
add
add
std
xlat
xor
pop
xchg
lods
nop
add
mov
adc
mov
inc
lahf
jo
mov
fisttpl
rolb
mov
sub
sbb
fcomps
es
mov
repz
mov
sbb
sti
rolb
and
out
add
add
js
test
call
mov
loop
mov
jl
loop
mov
fdiv
add
inc
nop
add
test
add
mov
mov
adc
mov
movsl
sbb
sbb
data16
add
add
arpl
add
mov
stos
int
insb
mov
pop
js
add
mov
fs
xchg
add
ds
gs
add
xor
mov
sti
gs
jnp
js
ds
sbb
leave
stc
sbb
cmpsl
jae
add
movsb
mov
test
sbb
clc
rcrl
nop
add
add
jnp
out
repnz
jg
mov
sbb
push
sarl
lods
repz
add
nop
add
xchg
mov
add
add
enter
stc
rolb
mov
jmp
xchg
add
mov
ljmp
add
mov
mov
jmp
add
stos
mov
in
add
stc
fisubrl
loope
mov
xchg
lock
lret
movsb
xor
and
popf
ret
ja
add
mov
int3
push
fwait
push
or
add
add
xchg
mov
stc
push
jbe
imul
roll
rolb
addr16
inc
add
movsb
imul
dec
dec
mov
mov
dec
jne
xchg
adcl
add
add
js
aad
lea
ret
fists
pop
lods
dec
pop
cld
std
movsb
push
adc
mov
fst
sub
test
gs
add
lret
sbb
add
pop
fxch
pop
xchg
lock
outsl
repnz
cwtl
jbe
pusha
add
add
mov
mov
addb
add
pop
ja
in
adc
inc
add
pop
pop
iret
loopne
mov
xlat
stc
dec
fucom
add
aad
or
loop
mov
mov
imul
xor
add
dec
adc
mov
jae
cmova
lret
add
pop
in
dec
aam
cmpsb
aam
jge
cmc
aad
adcl
mov
jecxz
fisttpll
jg
add
sub
lret
add
orl
or
std
sub
ljmp
mov
mov
outsb
sarl
mov
add
mov
xchg
mov
sti
cmp
addb
xchg
scas
xchg
outsb
jne
popa
or
add
xchg
add
fstpl
pop
fs
cld
in
jge
jnp
mov
mov
fdivs
add
movsb
jo
mov
mov
push
add
add
mov
addb
pop
mov
add
push
ret
std
pop
fs
leave
lods
sub
sbb
add
inc
xor
mov
mov
and
mov
fadds
mov
stc
outsb
jo
mov
jns
add
in
push
jle
xchg
int3
sbb
sub
dec
std
call
dec
test
cs
into
push
add
mov
jnp
jae
add
iret
nop
add
int3
jb
mov
inc
cmpsb
push
lock
js
jb
mov
movsl
add
cmp
clc
mov
pop
das
dec
stc
mov
les
add
movsb
xchg
inc
dec
jp
add
je
jb
mov
add
aaa
cmp
mov
cmp
lock
cmpxchg
mov
dec
sbb
dec
mov
addb
inc
mov
mov
mov
das
fistl
lods
xchg
push
adc
mov
inc
add
add
test
test
lods
xor
mov
mov
push
dec
leave
fisubs
addb
mov
mov
add
adc
mov
adc
add
rorl
nop
add
mov
mov
bound
mov
mov
add
hlt
dec
dec
lahf
cmp
lods
lds
outsb
cmp
sbb
add
xor
add
xor
add
pop
mov
popa
xchg
imul
jp
add
adc
mov
js
push
scas
popl
nop
add
add
addb
out
and
mov
adc
mov
dec
stc
loope
xor
test
sub
push
add
mov
lret
mov
mov
fs
adc
mov
jo
mov
pop
ffreep
icebp
dec
leave
sub
nop
add
mov
mov
imul
sbb
fisttpl
jnp
in
cltd
mov
out
dec
inc
addl
mov
repz
dec
inc
push
mov
mov
pop
fdivrs
out
xchg
cli
addb
xlat
and
mov
add
sti
out
jge
cmp
pop
mov
data16
ss
jmp
repz
out
push
movsb
push
pop
dec
xor
add
mov
add
shll
push
mov
add
mov
lods
xchg
add
popa
mov
add
mov
sbb
and
scas
and
mov
ljmp
pop
adc
mov
push
sti
mov
add
insb
rolb
mov
jg
xchg
mov
xor
mov
daa
xor
out
sub
sub
repz
cwtl
loope
inc
add
adc
push
inc
mov
adc
add
sub
sbb
jbe
add
das
out
outsl
add
scas
fs
push
add
mov
icebp
call
sbb
icebp
sub
mov
add
mov
mov
dec
icebp
or
into
mov
and
or
push
and
imul
add
xchg
push
mov
dec
fs
sbb
push
jg
xor
mov
pop
movsb
adc
add
pop
jne
add
xchg
mov
stos
loope
imul
mov
loop
mov
cmp
add
test
add
addb
cs
or
and
add
mov
in
cli
fnstenvs
mov
add
lahf
jne
dec
cmpl
adc
mov
add
jne
and
mov
out
mov
lcall
adc
les
mov
mov
add
insl
jmp
je
fs
ds
add
ds
incb
aas
xchg
pop
or
pop
mov
jbe
sub
pushf
push
cltd
xchg
push
pushf
addr16
gs
add
in
mov
fsubrs
mov
sub
in
push
stos
push
addb
add
popf
mov
jno,pt
and
mov
add
std
inc
fsubl
inc
call
add
add
push
xor
mov
xlat
mov
stos
loopne
mov
add
insl
ret
mul
lods
xchg
add
fmul
ret
push
movsb
addb
jmp
add
das
mov
and
mov
push
dec
mov
arpl
mov
mov
mov
fnsave
mov
or
jle
addl
mov
icebp
cmp
ljmp
mov
cmpsb
cwtl
and
mov
mov
or
jmp
addb
and
mov
sbb
add
xchg
add
mov
add
mov
adc
adc
mov
imul
ja
out
cld
xor
jnp
je
popa
sti
addb
mov
adc
and
jo
mov
and
pop
pop
xchg
add
cs
out
mov
and
jbe
rolb
mov
gs
jb
mov
add
and
xor
rolb
mov
outsb
cmpl
xchg
cmp
mov
fbstp
sbb
add
outsl
lock
mov
enter
mov
sti
aas
dec
or
or
add
jp
lea
clc
and
add
enter
add
mov
adc
aas
and
jae
jmp
jb
mov
fists
div
add
jl,pt
out
mov
xor
mov
or
mov
xor
mov
dec
dec
rolb
mov
sub
add
push
mov
pop
mov
add
ret
and
test
pop
add
cmc
out
insl
mov
mov
sub
pop
stos
dec
dec
push
xor
mov
inc
pop
cwtl
cmp
sbb
repz
test
cmpsl
aad
add
sub
inc
aaa
and
inc
add
jbe
es
int
add
xor
mov
mov
bound
mov
mov
aas
mov
cmp
mov
dec
lods
popa
nop
add
test
add
mov
mov
dec
mov
adc
mov
jle
xchg
out
add
mov
mov
dec
mov
cmp
mov
pop
dec
jge
add
dec
dec
test
dec
sub
sbbl
sub
push
add
add
jecxz
dec
cltd
stos
data16
add
addb
sbb
jbe
xchg
and
dec
adc
out
fldt
ficomps
movl
xor
cld
daa
jl
nop
add
mov
add
xor
mov
ret
dec
push
int3
mov
std
popa
mov
lret
fstpt
mov
mov
insl
mov
std
cmp
addb
popa
jb
mov
sti
inc
mov
mov
add
adc
xchg
repz
cmp
cltd
pop
sbb
jae
inc
add
jbe
push
xor
add
and
nop
add
les
mov
mov
rorl
aam
jno
add
add
cwtl
cmc
jo
mov
xor
mov
add
fistpll
mov
mov
add
movsl
sbb
fisttpl
pop
stos
sbb
cld
sti
or
rcll
jmp
std
inc
add
mov
xchg
js
jecxz
scas
addb
clc
jl
test
fldcw
mov
dec
mov
enter
nop
add
and
push
add
add
cmpsl
cs
mov
ret
imul
cs
add
mov
imul
jne
add
add
faddl
lcall
aaa
loope
xchg
dec
sbb
push
dec
or
add
mov
push
xor
mov
and
jmp
add
test
mov
add
mov
jbe
push
add
mov
mov
mov
xor
outsb
aam
addb
jo
mov
add
insb
jmp
mov
pop
inc
mov
mov
and
mov
push
sarl
jl
aad
orl
jae
or
sahf
out
aaa
rcll
idivl
pop
jnp
add
enter
in
add
ljmp
add
add
add
add
dec
gs
test
add
sub
add
add
mov
add
mov
inc
add
add
mov
add
mov
jle
cmpsb
rcll
mov
inc
push
pop
fcmovu
mov
lea
ret
dec
ficompl
push
add
std
sbb
adc
mov
cmp
out
daa
xchg
js
add
negb
add
pop
cmp
pop
xor
push
lret
pop
or
add
mov
mov
cmp
mov
mov
cwtl
pop
lret
icebp
cmpl
xchg
inc
imull
imul
jne
add
ss
fiadds
in
inc
addb
idivl
insb
or
in
loope
lds
imul
push
add
mov
shr
xor
xor
mov
xor
jbe
pop
adc
adc
add
js
jns
fnstsw
sbb
add
fimull
add
mov
stos
sbb
xor
mov
mov
pop
xor
mov
mov
add
add
jae
add
mov
add
call
stos
mov
jmp
movsl
mov
sub
push
lret
popa
scas
xor
jge
fmull
ss
inc
add
push
rolb
xchg
out
mov
mov
mov
sbb
jns
add
push
das
aam
xchg
out
in
jo
mov
pop
inc
jg
outsl
fwait
mov
add
mov
addr16
add
push
lret
mov
adc
mov
repz
add
or
mov
mov
mov
sahf
outsb
ret
cs
inc
outsl
push
sub
ds
loopne
mov
jno
xor
mov
jmp
xchg
add
add
add
mov
mov
xchg
adc
fdivs
lret
push
add
pop
mov
xor
mov
loop
mov
dec
call
mov
insl
jns
icebp
xor
int3
out
add
aad
mov
mov
lds
push
clc
call
mov
dec
bound
mov
add
dec
popa
push
add
aam
es
push
add
dec
jns
inc
lahf
mov
mov
inc
xor
mov
push
add
mov
mov
add
add
in
mov
repz
add
in
mov
add
inc
dec
aad
mov
pop
dec
lret
jl
lret
cmp
sbb
pop
dec
xor
rolb
add
mov
imul
loop
mov
mov
mov
add
insl
mov
or
pop
inc
add
rcr
rol
mov
insb
pop
hlt
aas
pop
xchg
adc
pop
add
mov
lahf
mov
rolb
mov
inc
pop
cmpsl
daa
pop
in
mov
inc
add
mov
add
ss
add
mov
jne
cmp
stos
popf
push
add
inc
xchg
pop
and
mov
movsb
push
sbb
mov
fstpl
mov
inc
add
test
sbb
mov
or
dec
adc
mov
sbb
aam
xchg
add
test
mov
das
dec
push
lods
fstp
jle
add
mov
add
ficoml
mov
cmc
push
stos
push
pop
movl
fbld
mov
mov
mov
push
add
mov
fstpt
sbb
pop
xlat
jg
and
movb
movsb
adc
mov
mov
orl
repz
repnz
add
or
add
stc
sub
mov
adc
xchg
cmp
inc
lahf
mov
jns
or
add
dec
in
addb
cltd
mov
add
cmpsb
out
idivl
push
add
std
out
and
mov
addr16
jmp
jecxz
push
inc
add
mov
test
scas
out
js
mov
enter
repnz
adc
int3
bound
mov
pop
xor
loope
inc
lds
scas
stc
add
mov
inc
add
add
scas
and
jle
push
add
add
sbb
mov
mov
add
imul
add
and
mov
mov
mov
sub
add
hlt
push
add
cmpsl
insl
sbb
out
loope
cmp
stos
lods
fs
pushf
popa
bound
mov
dec
call
sub
and
add
int3
aam
andl
mull
int
cld
outsl
cmp
xchg
adc
mov
mov
add
add
mov
mov
xor
ja
scas
ret
in
stos
dec
fsubs
and
mov
mov
stc
cmp
jns
mov
adc
mov
mov
outsb
push
inc
cmc
outsl
sbb
and
jge
gs
xchg
ljmp
cmp
cmp
push
cmp
dec
sbb
loopne
mov
in
jecxz
clc
inc
jne
mov
sti
inc
add
stc
loopne
mov
mov
call
sbb
add
add
add
pop
repnz
pushf
xchg
pop
addb
adc
je
sub
scas
repz
xchg
je
sub
test
stos
xchg
flds
push
lds
add
cmp
es
jmp
fimull
push
sub
inc
push
repz
cld
push
test
sbb
sub
lcall
jno
pop
push
scas
idiv
jne
jno
mov
hlt
test
mov
lods
fstps
test
cwtl
or
scas
arpl
add
mov
mov
int
out
dec
mov
or
nop
add
push
ret
inc
shl
mov
pusha
add
mov
add
xchg
push
push
add
add
jb
mov
insl
sub
mov
in
es
cli
jae
ret
and
mov
mov
aas
push
jbe
push
cs
sbb
push
int3
cli
fcom
add
das
mov
mov
add
fisubrl
xchg
stos
sbb
jmp
mov
add
sub
ret
in
cmpsb
leave
inc
js
outsb
add
push
in
ss
aam
adc
mov
dec
int
sub
inc
fstps
add
nop
add
add
mov
xchg
mov
and
add
mov
test
out
jp
jns
mov
data16
cmp
pop
add
lea
add
test
add
mov
rcll
arpl
and
sbb
inc
xchg
add
mov
ret
rolb
mov
icebp
mov
mov
mov
add
mov
jns
sub
xchg
xchg
ret
jge
sti
insb
mov
es
ds
inc
add
iret
icebp
test
add
mov
imul
sbb
xchg
adc
mov
add
les
mov
jmp
add
cwtl
popa
rolb
mov
fwait
rolb
mov
add
add
mov
pop
pop
imul
add
pop
xor
pop
push
into
ds
lret
je
adc
xchg
mov
data16
lods
pop
xchg
push
and
adc
mov
dec
mov
daa
adc
mov
repnz
mov
mov
add
cmpsl
jmp
adc
out
pop
stos
orl
loopne
mov
add
in
adc
push
mov
ret
push
mov
in
cmp
dec
data16
dec
add
and
pop
mov
add
sahf
mov
xor
movsl
dec
push
rcll
call
jmp
jns
fsubrl
lods
cli
testb
inc
add
out
add
xchg
push
inc
push
add
add
lds
inc
out
iret
mov
lahf
int
mov
cld
mov
xlat
add
mov
mov
mov
imul
cwtl
imul
sub
sub
ljmp
mov
push
jle
xchg
popa
inc
add
xchg
xorl
mov
mov
push
jmp
cltd
faddp
or
lret
mov
push
test
add
mov
mov
mov
popa
fs
jl
in
cmp
sti
cmpsl
mov
mov
ss
movsb
or
shll
push
add
mov
pop
jns
pushf
outsb
jno
jecxz
roll
mov
movsb
fwait
cmp
clc
in
fwait
fwait
addb
adc
mov
pop
push
xchg
sub
add
pop
jns
int
jg
add
mov
jne
outsb
lock
shll
or
add
or
sub
lds
mov
xchg
movsl
mull
ja
cmp
dec
mov
cwtl
test
jbe
jmp
add
add
jg
daa
cmp
push
add
xchg
rolb
mov
xchg
test
adc
stc
loop
mov
cmp
add
jno
sub
mov
jecxz
jno
push
std
dec
rolb
mov
mov
out
sub
inc
cmp
add
mov
mov
add
and
mov
mov
stos
adc
rorl
out
inc
lock
pusha
add
mov
lods
jb
mov
add
jge
enter
fsubs
in
jecxz
push
js
mov
mov
pop
push
jle
movsl
push
in
sub
xchg
out
pop
pop
inc
mov
rcrl
mov
fisubs
jnp
add
mov
cmp
add
lcall
mov
lret
dec
sub
xchg
mov
jne
jecxz
hlt
mull
dec
hlt
stc
insl
sbb
outsl
test
add
jb
mov
push
mov
ja
add
dec
call
add
xchg
mov
sbb
scas
dec
data16
into
sbb
push
cmp
fisttpl
out
xchg
adc
mov
mov
iret
xchg
sub
mov
pop
lret
jmp
pop
jno
sbb
mov
inc
mov
add
add
pop
inc
or
mov
add
or
inc
add
je
insl
xlat
xchg
mov
mov
sbb
xor
mov
add
add
mov
mov
push
and
or
mov
lds
adc
mov
dec
jno
nop
add
add
add
or
rcll
jl
fstpt
mov
pop
les
add
icebp
cmpsl
mov
mov
jae
imulb
or
push
mov
inc
scas
rolb
mov
cmp
mov
into
lahf
inc
jp
inc
adc
scas
inc
popa
cld
mov
xor
mov
aam
mov
shll
inc
add
mov
mov
imul
add
mov
enter
sub
lea
mov
adc
adc
test
fadds
adc
mov
lcall
cmp
mov
cmpsb
int3
adc
mov
jmp
push
sub
mov
add
sub
testl
xchg
add
test
je
mov
sub
and
in
sub
fnsave
mov
in
movsl
pushf
std
mov
imul
rolb
mov
idivb
outsb
sub
lahf
sub
adc
mov
aam
mov
inc
xchg
ja
jmp
int
outsb
rolb
mov
xchg
xchg
sub
js
adc
or
mov
add
gs
or
push
add
mov
dec
in
sbb
add
mov
mov
and
mov
mov
loop
mov
and
in
fildl
add
mov
imul
scas
clc
adc
mov
push
and
mov
or
pcmpgtd
mov
add
mov
add
add
dec
mov
movsl
xor
mov
add
out
add
mov
imul
pop
std
jne
cs
jmp
out
xchg
jns
push
sahf
in
inc
add
rolb
pop
mov
sbb
add
mov
add
imul
mov
xlat
comiss
add
add
lcall
clc
stos
add
mov
push
es
cmp
rorl
jle
das
mov
adc
mov
mov
xor
mov
add
fsubrl
mov
add
outsl
mov
push
add
add
fpatan
jbe
add
cwtl
mov
sbb
adc
mov
mov
pushf
fmul
push
jo
mov
mov
mov
ss
insl
xchg
imull
adc
mov
stc
and
mov
stc
xchg
hlt
adc
stos
mov
add
sub
mov
scas
fisubrl
mov
jb
mov
mov
mov
cmp
cmp
mov
sbb
loopne
mov
xchg
add
cmp
add
mov
insl
jle
int
pop
ret
lcall
xchg
add
inc
add
cltd
xchg
repz
outsl
out
pusha
add
pop
push
cmpl
and
mov
jp
adc
rolb
pusha
add
mov
mov
dec
fnstsw
and
add
subl
add
lods
mov
mov
mov
lahf
and
mov
inc
cli
ljmp
hlt
sub
pop
mov
xor
shr
cmp
mov
inc
add
adc
or
add
out
stc
dec
loopne
mov
inc
add
hlt
mov
pop
out
pop
pop
xchg
adc
mov
testl
das
pop
cwtl
inc
and
mov
dec
ret
xchg
pusha
add
jb
mov
jb
mov
out
sbb
jae
xor
add
cli
push
pop
pop
ds
sti
imul
mov
cmp
add
mov
jae
jb
mov
pop
jnp
or
xchg
mov
lret
addb
and
in
call
xor
outsl
in
push
insl
dec
adc
adc
mov
mov
movsl
lahf
out
xlat
xchg
mov
inc
jae
mov
clc
insb
lahf
stos
lret
mov
add
push
test
add
leave
or
cltd
repnz
sub
insb
xchg
cmp
mov
fs
psllq
pop
dec
and
mov
loope
imul
inc
add
bound
mov
loop
mov
jecxz
fcmovu
or
xor
or
int
push
add
mov
inc
dec
cmp
std
push
add
xchg
repz
cmp
add
out
xchg
outsl
and
sti
inc
loop
mov
pop
cltd
adc
pop
les
mov
xchg
xor
bound
mov
add
in
pop
and
into
xor
rcl
add
add
or
clc
jb
mov
mov
sub
leave
icebp
cmpsb
sbb
xor
mov
in
and
mov
lock
sub
jg
mov
es
xchg
mov
lahf
or
add
les
scas
xor
lds
test
fcomip
in
add
dec
xor
push
addb
jo
mov
outsb
dec
or
add
push
add
arpl
inc
setp
dec
jmp
test
sahf
pop
inc
and
mov
inc
sub
loop
mov
pop
xor
