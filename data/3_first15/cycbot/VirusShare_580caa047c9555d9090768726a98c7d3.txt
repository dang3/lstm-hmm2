lock
loopne
shlb
loopne
push
mov
loopne
jmp
mov
loopne
push
movsb
loopne
fldt
loopne
mov
movsb
loopne
outsl
mov
loopne
je
loopne
sbb
loopne
outsl
mov
loopne
cld
movsl
loopne
loope
loopne
repnz
loopne
sbb
cmpsl
loopne
leave
mov
loopne
cmc
movsl
loopne
test
loopne
inc
mov
loopne
outsl
mov
loopne
and
loopne
in
mov
loopne
cltd
mov
loopne
in
loopne
jecxz
loopne
push
cmpsb
loopne
jmp
movsl
loopne
cmp
loopne
inc
cmpsb
loopne
xchg
cmpsb
loopne
mov
loopne
shlb
loopne
and
loopne
aad
loopne
and
loopne
xchg
movsb
loopne
cmpsb
movsl
loopne
std
cmpsl
loopne
cmp
loopne
clc
mov
loopne
pop
mov
loopne
mov
loopne
jl
loopne
mov
loopne
and
loopne
mov
mov
loopne
mov
loopne
fisubl
loopne
xchg
loopne
shlb
loopne
scas
movsb
loopne
frstor
mov
test
loopne
mov
loopne
push
movsl
loopne
into
mov
loopne
movsl
loopne
mov
mov
loopne
imul
loopne
dec
movsl
loopne
sbb
loopne
jmp
loopne
dec
cmpsb
loopne
mov
loopne
cpuid
loopne
lahf
cmpsb
loopne
cmpsl
loopne
mov
movsl
loopne
in
loopne
adc
loopne
mov
movsl
loopne
or
loopne
into
mov
loopne
cmp
loopne
shll
mov
movsl
loopne
pop
cmpsb
loopne
movsl
loopne
xchg
mov
loopne
pop
cmpsl
loopne
xor
loopne
test
mov
loopne
mov
loopne
test
loopne
dec
movsl
loopne
andl
mov
cmpsl
loopne
sbb
loopne
or
loopne
push
cmpsl
loopne
in
loopne
repnz
loopne
push
movsl
loopne
out
loopne
fbld
loopne
and
loopne
mov
loopne
aaa
test
mov
movsb
loopne
loopne
loopne
and
loopne
mov
movsl
loopne
shll
mov
cmpsb
loopne
mov
loopne
sub
loopne
cmpsb
loopne
pop
cmpsb
loopne
shll
mov
mov
loopne
add
loopne
xor
loopne
jecxz
loopne
lds
loopne
sti
mov
loopne
stos
mov
loopne
push
cmpsb
loopne
andb
mov
mov
loopne
xchg
loopne
mov
loopne
adc
loopne
sub
loopne
loop
loopne
cmpsl
test
mov
test
mov
cmpsl
loopne
mov
loopne
jo
loopne
xchg
mov
movsb
loopne
jecxz
loopne
jge
loopne
pop
mov
loopne
mov
loopne
int
loopne
iret
mov
loopne
sub
movsb
loopne
imul
mov
mov
loopne
add
loopne
jecxz
loopne
hlt
test
mov
movsl
loopne
mov
loopne
fbld
loopne
insl
test
mov
cmpsb
loopne
insb
mov
loopne
adc
mov
cmpsb
loopne
jmp
movsb
loopne
fsubl
loopne
fldenv
loopne
push
test
mov
mov
loopne
mov
mov
loopne
jbe
loopne
pop
cmpsb
loopne
test
loopne
in
mov
loopne
test
loopne
lcall
mov
movsb
loopne
out
test
mov
test
loopne
dec
movsb
loopne
fisubs
loopne
dec
cmpsb
loopne
les
loopne
xor
loopne
adc
loopne
add
cmpsb
loopne
call
movsb
loopne
mov
loopne
mov
test
mov
movsl
loopne
shrb
loopne
dec
test
mov
movsl
loopne
mov
loopne
jmp
cmpsb
loopne
in
loopne
sub
loopne
mov
loopne
addr16
mov
loopne
les
loopne
inc
movsb
loopne
push
movsl
loopne
mov
movsl
loopne
scas
test
mov
test
loopne
cmc
test
mov
test
mov
test
mov
mov
loopne
mov
loopne
inc
movsl
loopne
cmpsb
loopne
mov
test
mov
movsb
loopne
push
movsb
loopne
mov
mov
loopne
lcall
mov
movsl
loopne
or
test
mov
mov
loopne
loope
loopne
test
movsl
loopne
push
test
loopne
fsubs
loopne
pushf
test
mov
cmpsb
loopne
in
loopne
sbb
loopne
adc
movsb
loopne
loopne
bound
loopne
stos
mov
loopne
les
loopne
movsb
test
mov
movsl
loopne
dec
mov
loopne
cwtl
cmpsb
loopne
inc
movsb
loopne
jle
loopne
test
loopne
iret
movsl
loopne
lret
cmpsl
loopne
adc
loopne
mov
test
mov
movsl
loopne
in
mov
loopne
shll
mov
cmpsl
loopne
fsubl
loopne
das
movsl
loopne
mov
loopne
popa
cmpsl
loopne
mov
cmpsb
loopne
aaa
mov
loopne
repz
loopne
cmpsl
mov
loopne
push
cmpsb
loopne
dec
movsb
loopne
mov
loopne
xchg
loopne
pop
mov
loopne
test
mov
loopne
pop
test
loopne
aad
loopne
jge
loopne
mov
loopne
mov
mov
loopne
push
test
loopne
andl
mov
cmpsl
loopne
sub
loopne
xchg
mov
loopne
jo
loopne
jg
loopne
bt
mov
mov
loopne
test
loopne
iret
mov
loopne
ljmp
mov
cmpsl
loopne
xchg
movsb
loopne
movsb
loopne
das
mov
loopne
add
test
mov
cmpsl
loopne
dec
cmpsl
loopne
andl
loopne
mov
loopne
cmp
cmpsl
loopne
push
test
loopne
dec
mov
loopne
cwtl
movsl
loopne
jge
loopne
adc
loopne
daa
movsl
loopne
pop
movsb
loopne
mov
loopne
xor
loopne
fs
mov
mov
loopne
popa
mov
loopne
in
loopne
mov
cmpsl
loopne
lret
mov
loopne
pusha
test
mov
cmpsl
loopne
jno
loopne
inc
mov
loopne
andl
fisubl
loopne
jmp
loopne
or
loopne
popf
mov
loopne
add
loopne
call
movsl
loopne
int3
cmpsl
loopne
aam
loopne
jb
loopne
sub
loopne
das
test
loopne
mov
movsl
loopne
outsb
cmpsl
loopne
nop
test
mov
movsl
loopne
mov
loopne
fldenv
loopne
shll
loopne
nop
movsl
loopne
loope
loopne
mulb
loopne
pusha
cmpsb
loopne
andb
mov
mov
loopne
scas
mov
loopne
pushf
movsl
loopne
push
cmpsl
loopne
repnz
mov
cmpsl
loopne
mov
loopne
fsubl
loopne
imul
mov
cmpsb
loopne
mov
cmpsb
loopne
loopne
andb
mov
cmpsl
loopne
adc
loopne
sub
mov
mov
loopne
pop
test
mov
cmpsl
loopne
repnz
loopne
push
movsb
loopne
jbe
loopne
std
test
mov
mov
loopne
das
mov
loopne
cmp
loopne
in
cmpsl
loopne
push
cmpsb
loopne
mulb
loopne
shll
loopne
mov
loopne
scas
movsl
loopne
je
loopne
into
mov
loopne
imul
loopne
les
loopne
inc
cmpsb
loopne
into
mov
loopne
sbb
loopne
aaa
mov
loopne
dec
test
mov
mov
loopne
das
mov
loopne
andl
mov
cmpsb
loopne
int3
cmpsl
loopne
repz
loopne
dec
mov
loopne
movsb
loopne
shll
mov
mov
loopne
andl
loopne
repnz
loopne
or
loopne
and
loopne
and
mov
loopne
add
mov
loopne
fsubs
loopne
sti
mov
loopne
or
loopne
bound
loopne
aaa
test
loopne
jmp
loopne
add
loopne
mov
loopne
inc
cmpsb
loopne
ja
loopne
lea
mov
cmpsl
loopne
sahf
mov
loopne
insb
test
mov
cmpsb
loopne
dec
cmpsl
loopne
mov
loopne
insl
mov
loopne
adc
loopne
dec
mov
loopne
jl
loopne
movsl
mov
loopne
jecxz
loopne
scas
movsl
loopne
or
loopne
lea
loopne
out
loopne
imul
mov
cmpsb
loopne
shll
loopne
lock
mov
mov
loopne
pusha
mov
loopne
shll
mov
movsl
loopne
sbb
mov
test
mov
cmpsl
loopne
outsb
cmpsb
loopne
sahf
mov
loopne
mov
loopne
int3
mov
loopne
and
loopne
dec
test
mov
cmpsl
loopne
lret
mov
mov
loopne
cmp
loopne
jle
loopne
cli
test
mov
mov
loopne
or
loopne
test
loopne
lods
mov
loopne
das
mov
loopne
repz
loopne
shll
loopne
xor
mov
cmpsb
loopne
insl
cmpsl
loopne
cmp
loopne
int3
mov
loopne
outsl
mov
loopne
insb
movsb
loopne
cmpsb
movsl
loopne
mull
mov
mov
loopne
xlat
movsl
loopne
jl
loopne
xchg
cmpsl
loopne
sub
loopne
repz
loopne
push
movsb
loopne
lret
mov
loopne
out
loopne
jmp
loopne
loopne
into
mov
loopne
sbb
loopne
or
mov
loopne
inc
mov
loopne
insb
mov
loopne
push
cmpsb
loopne
test
movsb
loopne
aaa
cmpsl
loopne
in
test
mov
movsb
loopne
mov
loopne
lret
mov
loopne
ljmp
mov
mov
loopne
adc
loopne
sub
loopne
test
cmpsl
loopne
out
mov
loopne
cmc
cmpsl
loopne
loop
loopne
fbld
loopne
loopne
movsb
loopne
andl
mov
loopne
inc
movsl
loopne
push
cmpsl
loopne
mov
test
mov
movsl
loopne
mov
movsl
loopne
jne
loopne
or
loopne
test
loopne
andb
mov
movsl
loopne
mulb
loopne
xchg
mov
loopne
mov
loopne
shld
mov
test
mov
movsl
loopne
movsb
loopne
dec
test
mov
cmpsl
loopne
sbb
loopne
sub
loopne
popa
movsb
loopne
je
loopne
adc
loopne
hlt
cmpsl
loopne
mulb
loopne
inc
movsl
loopne
jo
loopne
loopne
loopne
xchg
mov
test
loopne
cmpsl
loopne
and
cmpsb
loopne
aas
movsb
loopne
mov
cmpsb
loopne
fwait
movsb
loopne
cli
mov
loopne
cld
test
mov
cmpsl
loopne
into
movsb
loopne
mov
loopne
popa
cmpsb
loopne
test
mov
movsb
loopne
nop
cmpsl
loopne
ret
mov
cmpsb
loopne
push
cmpsb
loopne
popa
mov
loopne
push
cmpsb
loopne
or
mov
movsl
loopne
pusha
mov
loopne
mov
loopne
jp
loopne
std
cmpsb
loopne
out
movsb
loopne
sbb
loopne
andb
mov
cmpsl
loopne
shll
loopne
mov
movsb
loopne
inc
mov
loopne
in
cmpsb
loopne
xor
loopne
sbb
loopne
in
loopne
cmp
loopne
leave
movsb
loopne
jle
loopne
aam
loopne
pop
mov
loopne
xlat
movsl
loopne
jp
loopne
pop
movsb
loopne
inc
cmpsl
loopne
shld
mov
movsl
loopne
frstor
loopne
pop
movsb
loopne
insl
cmpsb
loopne
xchg
movsb
loopne
ljmp
loopne
jmp
loopne
adc
mov
loopne
sbb
mov
loopne
test
loopne
mov
loopne
jno
loopne
dec
cmpsl
loopne
xchg
mov
loopne
fbld
loopne
adc
loopne
pop
cmpsb
loopne
call
movsl
loopne
sbb
loopne
scas
cmpsl
loopne
mov
test
mov
mov
loopne
jne
loopne
fisubs
mov
mov
loopne
les
loopne
dec
movsl
loopne
push
test
loopne
jmp
loopne
ja
loopne
lds
loopne
andb
jp
loopne
sub
loopne
mov
loopne
icebp
test
mov
mov
loopne
outsb
mov
loopne
insl
movsb
loopne
pop
movsb
loopne
stc
cmpsb
loopne
test
mov
mov
loopne
pop
cmpsl
loopne
jmp
test
mov
movsl
loopne
andl
loopne
out
loopne
pop
mov
loopne
add
loopne
jle
loopne
shrb
loopne
bound
loopne
inc
test
loopne
sub
loopne
jmp
cmpsb
loopne
aas
mov
loopne
xchg
test
mov
mov
loopne
andb
mov
cmpsl
loopne
cmpsl
loopne
mov
mov
loopne
ret
cmpsl
loopne
jns
loopne
lds
loopne
je
loopne
add
mov
movsl
loopne
mov
loopne
cmpsl
loopne
out
mov
loopne
sbb
loopne
daa
movsl
loopne
push
movsb
loopne
xor
loopne
lret
test
mov
cmpsb
loopne
push
cmpsl
loopne
leave
movsl
loopne
inc
mov
loopne
cmp
mov
loopne
lret
mov
cmpsl
loopne
sahf
mov
loopne
jns
loopne
jge
loopne
dec
test
mov
movsb
loopne
jl
loopne
js
loopne
xchg
cmpsl
loopne
inc
mov
loopne
mov
loopne
in
loopne
dec
cmpsb
loopne
jl
loopne
cmpsl
cmpsl
loopne
mov
loopne
mov
loopne
mov
loopne
jo
loopne
fisubl
loopne
sbb
loopne
adc
mov
cmpsb
loopne
iret
mov
loopne
fldenv
loopne
dec
movsb
loopne
jne
loopne
ss
loopne
test
loopne
sbb
cmpsb
loopne
push
cmpsb
loopne
test
loopne
cmp
loopne
fldenv
loopne
push
mov
loopne
mov
loopne
jae
loopne
popf
movsl
loopne
mov
movsl
loopne
insl
cmpsb
loopne
dec
cmpsb
loopne
adc
loopne
add
loopne
jle
loopne
clc
movsb
loopne
pop
movsl
loopne
jno
loopne
pop
mov
loopne
cmp
loopne
int3
mov
loopne
sbb
loopne
add
movsb
loopne
shll
loopne
adc
loopne
inc
movsl
loopne
add
loopne
outsl
cmpsb
loopne
ja
loopne
mov
loopne
jl
loopne
mov
cmpsl
loopne
mov
loopne
clc
movsl
loopne
inc
cmpsl
loopne
lods
mov
loopne
xor
mov
loopne
mull
mov
test
loopne
push
cmpsl
loopne
mov
mov
loopne
adc
loopne
push
movsl
loopne
cmpsl
loopne
mov
loopne
jg
loopne
clc
movsb
loopne
icebp
mov
loopne
sub
loopne
movsl
loopne
enter
fsubl
loopne
pop
cmpsl
loopne
dec
movsb
loopne
pop
mov
loopne
inc
movsb
loopne
push
test
loopne
xor
loopne
imul
pushf
mov
loopne
sbb
loopne
mov
loopne
add
loopne
or
loopne
aas
movsb
loopne
js
loopne
repnz
loopne
inc
mov
loopne
cwtl
test
mov
movsl
loopne
es
loopne
fldenv
loopne
mov
loopne
pop
cmpsb
loopne
inc
test
loopne
imul
mov
cmpsb
loopne
push
test
loopne
andb
mov
mov
loopne
and
loopne
cmpsb
loopne
pop
movsb
loopne
bound
loopne
mov
test
loopne
cmp
loopne
mov
cmpsl
loopne
dec
test
loopne
outsl
mov
loopne
jb
loopne
mov
loopne
ret
mov
loopne
ljmp
mov
movsb
loopne
jl
loopne
push
test
mov
mov
loopne
jae
loopne
add
loopne
in
loopne
push
cmpsl
loopne
jnp
loopne
in
loopne
outsl
mov
loopne
jecxz
loopne
xor
movsl
loopne
xchg
mov
loopne
add
cmpsl
loopne
js
loopne
jno
loopne
mov
loopne
sti
cmpsl
loopne
and
loopne
cwtl
mov
loopne
pop
movsl
loopne
mov
loopne
leave
mov
loopne
daa
cmpsl
loopne
xchg
movsb
loopne
scas
movsl
loopne
in
loopne
mov
loopne
push
cmpsb
loopne
hlt
movsl
loopne
or
loopne
jno
loopne
scas
mov
loopne
push
movsl
loopne
xchg
movsb
loopne
in
loopne
addr16
lea
mov
movsb
loopne
mov
loopne
and
loopne
push
test
loopne
outsb
mov
loopne
cmpsl
loopne
xor
loopne
sti
movsl
loopne
mov
loopne
loop
loopne
out
loopne
shll
loopne
outsl
movsb
loopne
fs
mov
test
mov
test
loopne
sub
loopne
test
mov
loopne
adc
mov
mov
loopne
test
loopne
in
loopne
shlb
mov
mov
loopne
mov
mov
loopne
andl
mov
mov
loopne
daa
mov
loopne
mov
loopne
mov
movsb
loopne
aad
loopne
aaa
movsl
loopne
or
mov
loopne
cmp
loopne
insl
test
mov
cmpsl
loopne
dec
test
mov
cmpsb
loopne
sub
movsb
loopne
push
test
loopne
hlt
cmpsb
loopne
cmpsb
loopne
movsl
loopne
inc
test
mov
test
mov
test
loopne
movsl
loopne
jmp
loopne
adc
loopne
scas
cmpsl
loopne
inc
mov
loopne
stos
test
mov
mov
loopne
jecxz
loopne
sub
loopne
mov
loopne
jmp
loopne
data16
loopne
loopne
hlt
mov
loopne
in
cmpsb
loopne
movsb
cmpsb
loopne
movsl
loopne
loopne
loopne
sbb
mov
loopne
xchg
movsb
loopne
mov
test
mov
mov
loopne
adc
loopne
lret
mov
loopne
popa
mov
loopne
and
loopne
movsl
cmpsl
loopne
and
loopne
lods
cmpsl
loopne
cmc
movsl
loopne
scas
cmpsl
loopne
repz
loopne
inc
movsl
loopne
test
mov
loopne
fisubs
loopne
insl
cmpsl
loopne
jl
loopne
fisubl
loopne
int
loopne
js
loopne
shlb
loopne
jne
loopne
frstor
loopne
push
mov
loopne
jmp
loopne
lock
loopne
cmpsb
movsb
loopne
imulb
loopne
fwait
mov
loopne
mov
movsb
loopne
cmp
loopne
out
mov
loopne
pushf
mov
loopne
sbb
cmpsb
loopne
scas
mov
loopne
mov
loopne
icebp
movsb
loopne
arpl
loopne
push
cmpsl
loopne
add
loopne
xchg
movsb
loopne
outsb
movsl
loopne
mov
loopne
leave
mov
loopne
mov
mov
loopne
adc
movsl
loopne
scas
mov
loopne
xor
loopne
adc
loopne
sti
test
mov
movsl
loopne
or
loopne
test
test
mov
movsl
loopne
scas
mov
loopne
iret
cmpsb
loopne
test
mov
movsb
loopne
dec
cmpsb
loopne
pop
test
loopne
das
test
loopne
pop
cmpsb
loopne
pop
test
loopne
shll
loopne
cli
movsb
loopne
sahf
movsl
loopne
andl
mov
cmpsb
loopne
fisubl
mov
cmpsb
loopne
out
movsl
loopne
add
loopne
movsb
loopne
in
test
mov
mov
loopne
mov
loopne
enter
sub
loopne
loopne
loopne
xchg
mov
loopne
push
cmpsl
loopne
lock
loopne
bound
loopne
dec
cmpsb
loopne
shlb
loopne
inc
cmpsb
loopne
pop
movsb
loopne
cmp
loopne
out
mov
loopne
aam
loopne
stos
mov
loopne
cmp
loopne
jns
loopne
mov
cmpsb
loopne
movsb
loopne
jge
loopne
lods
mov
loopne
pop
mov
loopne
mov
loopne
sub
loopne
mov
movsb
loopne
add
mov
loopne
js
loopne
hlt
test
mov
test
mov
mov
loopne
andb
or
loopne
ret
cmpsb
loopne
jae
loopne
mov
cmpsb
loopne
ret
mov
cmpsl
loopne
movsl
movsl
loopne
cli
movsb
loopne
cld
movsb
loopne
push
loopne
jne
loopne
inc
test
loopne
test
loopne
cmpsl
mov
loopne
pop
test
loopne
lea
loopne
stc
mov
loopne
in
loopne
cwtl
cmpsl
loopne
subb
mov
test
mov
movsb
loopne
pop
cmpsl
loopne
shlb
mov
movsl
loopne
mov
cmpsl
loopne
in
cmp
hlt
mov
pop
nop
sub
mov
push
sbb
clc
scas
xor
add
add
sub
insl
js
or
mov
fnstcw
xor
add
add
dec
xchg
ret
or
xchg
icebp
dec
xchg
pop
imul
clc
adc
add
clc
or
add
mov
and
add
and
add
adc
add
add
xchg
inc
add
push
inc
clc
lock
clc
cmp
jmp
and
clc
mov
add
dec
push
add
sar
bound
add
add
clc
sub
add
push
clc
cmp
add
jbe
push
add
adc
add
jp
fists
bound
add
xchg
dec
cmp
jmp
fsubrs
loopne
jg
clc
xor
jmp
xchg
lods
mov
clc
sub
mov
add
jmp
call
jecxz
pop
inc
clc
mov
clc
inc
add
adc
add
lods
and
outsl
ljmp
add
jns
aad
pop
mov
mov
add
mov
add
xor
xchg
cmpsb
clc
fnstenv
xchg
add
add
dec
fimuls
arpl
add
ds
push
clc
add
bound
add
add
add
add
into
dec
mov
aad
into
addr16
inc
clc
cmp
jbe
sar
adc
mov
jns
loope
clc
std
mov
test
mov
jp
gs
arpl
add
push
pop
aaa
popa
add
clc
jb
add
aaa
mov
cmpsb
clc
cmp
cmc
push
add
int
loopne
jno
add
enter
jmp
clc
xor
clc
imul
inc
add
rcll
add
in
iret
and
add
jp
add
stos
aas
or
insb
dec
es
pop
mov
add
inc
add
sahf
jp
addr16
sub
xchg
negb
gs
in
add
add
add
add
lret
lock
cmp
adc
add
clc
pop
clc
and
add
pop
xor
add
iret
inc
add
fdivl
and
aad
sub
clc
push
clc
add
xchg
out
and
add
cmp
filds
mov
sbb
cmp
ljmp
clc
test
jo
add
mov
loopne
mov
xchg
data16
outsb
mov
mov
cwtl
cmp
test
cwtl
aam
test
dec
fwait
inc
add
or
mov
mov
test
mov
movsb
clc
xor
add
xchg
mov
inc
clc
fcompl
xchg
aas
data16
ficomps
mov
clc
fs
imul
jge
arpl
add
add
jnp
pop
pop
cld
adc
add
clc
clc
stc
mov
out
mov
and
add
add
sub
add
mov
stos
add
add
mov
mul
clc
mov
xor
add
sti
dec
or
roll
jmp
add
mov
and
add
test
mov
gs
fistl
clc
clc
inc
add
inc
add
arpl
add
cmp
mov
xor
add
xchg
inc
add
stc
pushf
inc
clc
ljmp
add
je
ds
xor
add
add
jne
jl
xchg
imul
call
dec
int
loope
or
clc
jae
add
add
mov
mov
sbb
bound
add
mov
sub
xchg
or
mov
clc
dec
jle
jg
jbe
xor
add
add
popa
add
dec
stos
lea
clc
js
je
bound
add
clc
leave
ret
clc
inc
clc
mov
clc
das
adc
stos
test
shrl
out
xor
add
add
cmpsl
clc
pop
scas
mov
jo
add
clc
mov
lods
imul
add
outsb
dec
push
bound
add
clc
hlt
sbb
inc
clc
or
jae
add
clc
adc
clc
cmpsb
clc
mov
aad
sbb
add
loope
pop
dec
push
sar
ds
add
loop
push
add
idivb
fistps
mul
clc
push
xor
add
clc
push
add
js
cltd
pop
jmp
sub
add
mov
add
jl
clc
and
lahf
sub
inc
add
sbb
inc
clc
pop
mov
clc
xor
add
add
pop
and
add
clc
cmp
js
insb
mov
clc
pop
cmp
adc
add
jo
add
clc
ss
and
add
mov
sbb
clc
ss
mov
clc
jo
add
fisubl
add
pop
clc
gs
mov
clc
daa
clc
mov
iret
adc
add
add
ja
mov
fwait
cmc
pusha
add
inc
add
jmp
pop
adc
add
add
mov
rcll
cmp
xlat
pop
add
add
lcall
clc
lret
add
mov
add
pop
adc
add
jno
add
aam
add
lods
xchg
xchg
cld
sbb
add
fwait
push
cmp
jae
add
aas
lods
and
add
add
cwtl
loop
pushf
dec
dec
cli
or
jns
add
fcmovnu
xchg
ret
and
add
dec
fs
arpl
add
incl
and
sbb
jo
add
mov
jg
insl
cmp
sub
cmp
cltd
adc
add
sub
mov
leave
outsb
jge
jle
out
loope
inc
add
mov
add
jp
clc
cmpsl
clc
jbe
add
xchg
js
add
out
inc
add
bound
add
add
fnstcw
mov
out
daa
clc
lods
out
pop
mov
pop
inc
add
jno
add
sub
xchg
clc
mov
stos
inc
clc
fsubp
clc
sbb
clc
into
jmp
xchg
fwait
loop
and
add
shlb
add
push
add
fsubr
stos
fcmovnbe
jp
jns
push
test
clc
cmc
xchg
adc
jmp
cld
cmp
add
jmp
mov
cmp
movsl
clc
jns
push
add
test
psubsb
add
aad
pop
xabort
mov
repnz
cwtl
xchg
loopne
push
mov
fs
aas
out
arpl
add
add
add
scas
test
bound
add
and
mov
xchg
adc
add
fcomps
clc
arpl
add
das
cmp
add
adc
add
add
into
pop
popf
pop
cmp
negb
clc
dec
out
jmp
add
bnd
lods
and
add
adc
dec
in
ret
add
pop
pop
mov
clc
jb
add
add
inc
add
out
loop
mov
divl
add
jnp
inc
add
inc
clc
pop
clc
mov
ret
xor
clc
jge
dec
xor
add
out
add
mov
add
call
jecxz
mov
lret
pop
inc
clc
sub
jge
adc
ljmp
push
mov
push
sub
push
push
push
push
push
push
call
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
xchg
sub
add
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
ret
pop
jmp
jmp
andl
mov
lea
push
push
push
mov
push
lret
mov
pop
clc
push
aas
xor
add
mov
inc
clc
xchg
xor
add
mov
mov
data16
shlb
add
xor
add
add
mov
ja
clc
xchg
sar
add
shll
dec
adc
add
jnp
icebp
cld
sbb
clc
dec
jo
add
xbegin
insl
mov
jae
add
sbb
push
dec
mov
add
adc
add
add
jno
add
int
pop
inc
add
push
add
stos
or
clc
push
jno
add
push
clc
int
clc
dec
movsl
clc
stos
jns
lods
sbb
clc
fsubrp
push
clc
not
lret
add
clc
cmp
addr16
sti
dec
call
mov
mov
sub
ret
xor
adc
add
push
add
setb
add
pop
inc
clc
sbb
clc
lods
mov
or
add
dec
jp
jp
sar
jg
ja
call
clc
add
push
add
pop
and
add
add
or
int
push
clc
icebp
jns
in
lods
rolb
clc
xor
or
add
or
clc
push
add
mov
adc
pop
push
add
add
loope
sar
clc
jbe
add
out
mov
lods
push
and
add
add
add
add
cmp
fcomps
stos
adc
add
add
addps
dec
in
imul
clc
xor
add
push
add
or
jo
add
add
and
ja
clc
or
shlb
add
mov
clc
inc
clc
stos
mov
add
add
add
clc
pop
cmp
xor
add
daa
clc
roll
add
jae
add
clc
pop
rcl
mov
xchg
das
es
xor
add
inc
add
scas
push
pop
jo
add
fcomps
mov
and
add
clc
jnp
clc
das
push
ret
clc
sbb
pop
aas
xchg
ds
inc
clc
jne
ljmp
sub
sbb
push
loopne
add
add
add
insb
aam
cmp
mov
fcoml
add
ds
in
xchg
int3
dec
stc
jne
clc
call
add
xor
add
clc
cmp
sbb
xor
add
add
clc
popa
add
add
add
clc
cltd
inc
add
cltd
addr16
inc
add
sub
cmp
gs
push
mov
data16
xbegin
add
dec
jmp
stos
pop
scas
xchg
nop
adc
add
bound
add
inc
add
xor
ds
clc
cmpsl
clc
add
add
in
adc
add
arpl
add
clc
adc
add
add
clc
lcall
loopne
cmpsb
clc
mov
clc
paddd
add
cmp
add
lcall
clc
pusha
add
or
add
pusha
add
mov
jae
add
add
mov
test
add
pop
in
aas
sub
clc
daa
clc
add
add
add
add
add
fwait
fs
mov
xabort
or
pop
gs
xchg
xbegin
clc
push
add
das
and
sub
add
stos
xchg
nop
cmp
clc
cmpsb
clc
inc
add
jne
jp
add
mov
add
gs
pop
xchg
ds
xor
fcomip
hlt
cmpsl
clc
gs
ficoml
add
int3
inc
clc
loop
mov
leave
mov
xor
add
add
cmp
cmp
sub
add
add
icebp
sti
add
jge
adc
add
movsb
clc
nop
scas
in
xbegin
cmp
iret
ss
into
mov
lret
clc
jne
add
jae
add
lock
push
ss
and
add
add
mul
clc
addr16
cmp
add
xchg
clc
ds
lock
mov
clc
xchg
fs
xchg
or
sub
clc
add
add
test
ret
clc
and
add
sub
clc
repnz
test
sub
fisubrl
das
sar
add
arpl
add
clc
inc
clc
std
sub
ja
push
lret
or
add
aas
xabort
clc
imul
add
add
cmp
sub
call
clc
in
mov
mov
add
bound
add
fcoml
xchg
cmp
pop
clc
fsub
clc
dec
jl
into
call
aad
clc
pop
cld
ljmp
add
popf
sarb
cmp
cmp
lods
lret
adc
add
push
add
push
clc
sub
add
jmp
in
sub
movsb
clc
and
add
add
cs
pop
jno
add
clc
mov
add
jge
jbe
sbb
lods
icebp
iret
xbegin
clc
xchg
rcr
cmp
pop
jg
jge
mov
add
add
clc
cmp
clc
adc
add
and
add
adc
add
add
adc
add
cmp
dec
loop
jge
lcall
sbb
sbb
clc
roll
adc
add
inc
add
dec
mov
clc
sbb
fs
test
adc
outsb
sub
test
add
add
aas
shll
add
mov
lock
pop
dec
test
lret
jge
sahf
stc
mov
clc
aad
sub
insl
dec
cmp
loopne
xor
add
and
add
add
shll
add
xlat
push
add
xor
add
mov
clc
popa
add
cld
mov
add
add
lods
stos
push
add
in
pushf
test
jnp
add
test
clc
fcmovnu
xor
add
add
rcr
insb
fwait
sar
add
jl,pt
xchg
cld
jmp
add
aaa
cmp
cmp
test
mov
inc
add
cmp
jp
xchg
push
pop
jno
add
clc
mov
mov
int
pop
inc
clc
leave
cli
dec
arpl
add
add
jnp
out
sbb
clc
punpckhbw
sbb
insb
clc
sar
fisttps
xor
add
clc
mov
clc
cmp
aad
pusha
add
cmp
das
fidivl
add
shlb
push
push
add
cmp
fdivl
add
popa
add
cli
jae
add
dec
pop
clc
jno
add
pop
clc
push
clc
sbb
clc
adc
add
jae
add
fs
cltd
out
fisubrl
add
test
scas
pop
xchg
mov
and
add
clc
shrb
pop
mov
and
add
sbb
add
push
add
stos
mov
clc
jne
add
mov
dec
daa
clc
adc
add
cmp
fsubl
mov
mov
push
clc
stos
fs
push
xor
add
add
add
xchg
call
ss
dec
sub
sbb
out
jns
divb
and
add
jns
add
add
add
cmp
insl
stos
mov
cmp
and
add
pop
aam
mov
pushf
shlb
stos
inc
clc
cmpsl
clc
fs
fwait
enter
pop
sti
lods
loop
xabort
clc
ja
clc
aaa
lcall
add
clc
iret
sar
movsl
clc
es
push
loop
dec
popa
add
aad
stos
inc
clc
inc
add
fwait
daa
clc
push
clc
xor
cli
clc
ds
cmpsl
clc
out
ljmp
pop
sub
rolb
add
add
add
cltd
sub
add
add
mov
pushf
push
inc
clc
cmp
add
xchg
stos
scas
lahf
jae
add
ja
jg
sub
cmp
mov
mov
add
adc
add
arpl
add
add
adc
add
push
and
add
clc
loope
push
or
add
ret
adc
add
clc
and
add
clc
xchg
sbb
mov
pop
xlat
lock
gs
shrl
xabort
repnz
clc
inc
clc
pop
xchg
cwtl
inc
clc
pop
scas
dec
pop
mov
add
add
mov
and
add
dec
daa
clc
sbb
aam
inc
add
jae
add
hlt
stc
das
xchg
pop
sbb
add
rcrb
jno
add
add
roll
mov
add
sbb
pop
cs
add
push
gs
xbegin
movsl
clc
sub
inc
add
imul
das
pop
and
add
and
clc
push
mov
clc
jns
clc
jle
push
add
das
lods
pushf
xchg
dec
imul
add
jge
push
add
cli
mov
adc
add
add
cmp
clc
push
outsb
sbb
add
stos
lock
mov
clc
nop
mov
add
mov
mov
pop
stos
cmp
add
jae
add
test
add
dec
insb
push
dec
dec
adc
inc
add
sqrtps
add
add
cli
push
stos
in
sar
sub
add
add
add
ja
outsb
inc
add
aaa
mov
push
clc
pop
mov
add
clc
sub
clc
jne
clc
mov
sti
popa
add
xchg
fxch
cmp
clc
idiv
pop
mov
jge
add
add
clc
lea
add
add
mov
add
add
out
xbegin
push
add
mov
add
push
add
sub
out
imul
popa
add
mov
popf
dec
repz
inc
add
and
add
scas
das
mov
test
add
inc
add
fwait
ss
or
adc
add
data16
test
clc
jnp
add
ret
add
out
hlt
ljmp
lods
pop
lods
cwtl
dec
test
lcall
in
sti
lea
add
lret
xchg
jle
arpl
add
clc
xchg
inc
add
dec
test
in
jbe
add
or
mov
jp
add
push
add
fnsave
add
cmp
xor
sub
sub
sub
js
add
sti
sbb
arpl
add
add
add
xor
add
clc
push
add
sbb
and
add
clc
push
data16
xchg
and
add
scas
mov
clc
lods
es
bound
add
clc
add
add
ret
clc
fwait
ljmp
xchg
jecxz
outsb
adc
add
insb
xchg
jbe
mov
call
clc
icebp
cmp
clc
test
add
dec
jmp
dec
inc
clc
jmp
mov
mov
jno
add
add
mov
add
cmp
jge
jne
clc
scas
sti
sub
mov
add
jge
sbb
push
add
pop
cli
lock
push
pusha
add
test
clc
sbb
test
cmp
addr16
xor
add
mov
inc
clc
test
ret
or
movsb
clc
mov
cwtl
insl
jns
clc
mov
in
lahf
lret
sbb
inc
clc
push
add
loope
sbb
add
clc
dec
lods
rorl
popf
push
int
xchg
ud0
cltd
adc
add
add
lods
dec
out
fwait
inc
add
lret
add
call
add
outsb
and
add
xor
add
dec
inc
clc
cmp
out
cmp
xor
add
add
out
in
ja
clc
mov
add
mov
not
pop
mov
or
add
iret
int3
xor
repnz
inc
add
sbb
xlat
cmpsb
clc
cmp
leave
xbegin
inc
clc
gs
mov
cltd
adc
out
add
loop
stc
mov
cmpsl
clc
hlt
test
pop
fildll
mov
add
in
sti
sar
adc
add
clc
xchg
mov
or
hlt
in
decl
je
cli
data16
repz
add
movsb
clc
movsl
clc
xchg
dec
mov
adc
add
add
sar
rorl
rorl
dec
push
inc
add
ds
push
add
je
mov
cmp
add
and
xchg
mov
mov
jl
sub
sub
fdivs
clc
in
jl
add
add
add
es
lret
enter
add
dec
cmc
popa
add
fistl
int
clc
hlt
xchg
push
adc
add
mov
sub
and
add
xabort
rorl
pop
xchg
or
cmova
test
xchg
pop
jmp
xor
clc
cmp
sbb
leave
xchg
dec
in
mov
ret
xchg
es
test
mov
clc
sbb
nop
pop
repnz
add
mov
add
outsb
adc
pop
clc
or
add
add
inc
add
pop
std
aas
push
mov
divl
fwait
mov
add
inc
clc
inc
add
out
out
ljmp
add
clc
lock
pop
pop
clc
push
clc
xchg
mov
mov
mov
add
clc
pusha
add
fcomp
and
add
mov
clc
icebp
mov
jle
add
mov
mov
shrb
mov
setg
add
lock
add
jl
dec
clc
mov
clc
push
aas
sbb
add
xchg
pop
mov
mov
add
add
add
pop
clc
dec
iret
inc
add
jmp
add
add
cmp
std
sbb
clc
scas
jge
scas
bound
add
shll
xor
pop
jo
add
add
adc
add
add
push
cmp
cli
sbb
and
add
and
mov
in
out
int
test
in
clc
stos
push
add
test
clc
pop
sbb
clc
inc
add
hlt
call
es
aam
lods
cmpsl
clc
jb
add
add
xor
jl
add
out
push
add
dec
in
nop
add
add
fmulp
sbb
mov
and
add
add
daa
clc
gs
push
clc
leave
sub
push
add
loopne
int3
outsb
lods
ja
mov
pop
jbe
add
add
add
mov
cltd
outsb
loopne
pop
mov
js
dec
dec
clc
xchg
cltd
sbb
add
cwtl
in
imul
add
add
add
push
pop
xchg
mov
ret
mov
cli
outsl
cmpsb
clc
xabort
mov
add
mov
in
in
ja
push
data16
mov
sar
clc
jo
add
pop
cli
movsb
clc
mov
ret
clc
or
and
fstpt
clc
push
loop
flds
add
incb
pusha
add
add
add
cmp
add
sbb
push
push
clc
jg
clc
inc
clc
fs
sbb
bound
add
add
pop
adc
add
sbb
clc
and
add
fidivrs
inc
add
rcll
and
or
clc
iret
or
cmp
clc
inc
clc
jp
hlt
jae
add
add
lret
pop
clc
frstor
add
xbegin
pop
cmp
mov
push
push
push
add
mov
cmp
clc
scas
stos
loope
add
add
clc
insl
jnp
aas
ljmp
jge
xor
add
clc
and
and
add
push
add
mov
fisttpll
add
add
addr16
imul
add
xor
add
push
jnp
adc
pop
jbe
add
int
add
jl
add
cld
adc
clc
lods
cmp
clc
or
clc
pop
dec
push
inc
clc
cmc
in
sbb
clc
dec
sbb
clc
jl
cmp
clc
insb
mov
clc
imul
add
test
or
addr16
mov
mov
add
outsb
cmp
fstps
fs
xchg
insb
sbb
add
add
ret
aam
add
add
clc
jge
clc
xor
add
xor
add
out
aad
mov
fcom
and
add
ljmp
jg
mov
jge
aad
or
add
adc
add
clc
xchg
dec
adc
add
add
dec
pop
cs
jmp
mov
cli
jno
add
xchg
push
xchg
mov
clc
inc
add
in
dec
mov
clc
xchg
cld
vmulps
jmp
clc
pop
je
int3
fmuls
adc
add
sub
clc
mov
and
add
jo
add
stc
and
add
ficoms
add
cmp
clc
loopne
mov
and
add
add
stos
cmp
jmp
xchg
dec
enter
add
jb
add
add
sbb
jns
out
fidivl
add
scas
mul
clc
lret
fadds
add
pop
adc
add
jg
add
je
jg
xchg
jmp
dec
push
dec
lcall
out
adc
add
xchg
adc
add
clc
in
cmp
xchg
and
add
clc
mov
sar
pop
movsb
clc
adc
add
and
cld
adc
clc
sbb
sti
cmp
loop
mov
or
push
sar
clc
or
lods
mov
clc
or
sbb
pop
mov
add
ljmp
scas
ud1
add
add
popa
add
mov
clc
sub
or
loope
adc
clc
cmp
add
xchg
and
in
stos
iret
out
cmp
sub
inc
add
lret
movsl
clc
or
clc
cld
jle
lods
and
add
sub
jge
pop
mov
pushl
ret
clc
arpl
add
inc
clc
cmpsl
clc
and
add
add
imul
xchg
out
aas
inc
clc
and
add
test
mov
loop
sub
clc
jo
add
add
add
ret
clc
or
clc
icebp
cld
dec
outsb
stc
ljmp
imul
ss
dec
push
add
sahf
lret
xor
add
dec
inc
add
imul
in
clc
call
add
cmp
scas
cmp
clc
test
and
add
ficomps
imul
mov
shrb
xlat
pop
int
mov
add
test
push
enter
clc
imul
xchg
cmpsl
clc
je
sub
mov
mov
push
inc
clc
xor
clc
jp
pop
call
clc
cmp
repnz
negl
push
add
add
add
mov
jle
int
ljmp
pop
clc
ljmp
add
cmc
mov
clc
pop
adc
repnz
jmp
cmp
and
add
add
mov
clc
pop
sar
insl
int3
cmp
dec
pusha
add
cmc
test
inc
add
jge
bound
add
clc
test
js
lcall
lock
jl
pusha
add
mov
clc
sbb
pop
clc
sub
clc
xchg
jnp
and
aas
sub
ret
clc
aas
and
add
scas
cmp
clc
xchg
out
js
clc
mov
cmpsl
clc
repnz
aas
sub
clc
mov
test
add
push
add
imul
mov
mov
add
jmp
push
and
add
leave
xor
add
xbegin
lret
or
inc
add
add
in
outsl
mov
xchg
jp
jbe
add
mov
jnp
xor
clc
leave
cmpsb
clc
inc
add
cmp
push
xor
add
add
cmp
int3
jle
repnz
jns
inc
add
dec
mov
ljmp
adc
add
std
outsb
repnz
mov
add
call
clc
ret
clc
xchg
dec
mov
stc
jmp
fdivp
rcl
iret
push
insb
imul
outsl
stos
sub
arpl
add
sti
cmp
mov
clc
pop
push
mov
jo
add
negl
xchg
cmp
mov
clc
pop
xchg
add
pop
sub
dec
inc
add
shl
clc
dec
loope
or
or
add
lret
mov
pop
mov
clc
jnp
cmp
aad
test
mov
add
xchg
xbegin
clc
stos
mov
xchg
jmp
push
add
sub
add
add
insb
out
sbb
cmp
cmp
clc
jne
pop
in
call
jle
clc
jecxz
daa
clc
jae
add
test
mov
add
add
rorl
ret
clc
ss
add
inc
add
stc
gs
xbegin
arpl
add
ficompl
std
in
scas
arpl
add
aaa
mov
lahf
inc
add
mov
xlat
cld
out
cmpsl
clc
cmp
insb
lods
pop
clc
and
adc
add
cmp
add
add
add
loopne
mov
ret
clc
fildll
inc
clc
add
out
jns
stos
push
add
mov
add
lret
add
jnp
pushf
push
imul
clc
pop
iret
sbb
dec
mov
add
push
clc
dec
fildll
add
scas
iret
addr16
mov
add
loope
sahf
sbb
add
xchg
pusha
add
imul
out
scas
addr16
dec
clc
arpl
add
add
mov
int3
stos
xor
add
lret
sub
movsb
clc
stos
add
add
mov
cltd
mov
clc
add
add
pop
dec
jecxz
lcall
add
loope
in
jecxz
fnsave
cmp
hlt
pop
stc
insb
pop
dec
inc
add
enter
out
std
add
mov
add
pop
add
and
add
dec
mov
cmp
lcall
pop
pushf
cmp
add
clc
nop
aam
mov
add
clc
lods
jl
fimull
clc
int3
push
lods
xor
mov
adc
add
int3
inc
clc
out
out
out
jae
add
jo
add
lcall
pop
cmp
sub
pop
cmpsl
clc
xchg
sti
sub
mov
clc
pop
clc
pop
clc
inc
clc
mov
sbb
clc
push
mov
add
mov
xchg
jg
add
cmp
sbb
clc
in
xchg
cmp
in
std
push
cmpsb
clc
pop
pop
lods
inc
add
int
add
add
add
prefetchnta
add
add
arpl
add
push
add
add
add
cmp
add
jnp
dec
push
inc
add
mov
add
loope
cltd
in
xor
add
movsb
clc
lret
add
inc
clc
sub
pop
jo
add
in
pop
out
and
decb
clc
push
add
add
add
add
push
clc
movsb
clc
loop
mov
mov
and
add
push
add
adc
add
clc
insb
xchg
out
je
das
stos
xchg
inc
add
fs
xchg
repz
add
jp
scas
stos
sub
add
jl
inc
add
sar
shll
add
add
mov
jb
add
call
test
add
shll
repnz
clc
jle
add
add
ss
and
add
add
xor
clc
ljmp
xchg
lock
int3
jae
add
insl
or
dec
sahf
adc
add
add
adc
add
xchg
add
sbb
fstpt
clc
lods
sbb
clc
xchg
mov
push
int
cltd
and
jo
add
clc
aaa
inc
clc
shr
call
pop
gs
and
add
test
popa
add
fcomi
data16
repz
mov
add
enter
test
fwait
call
setp
add
nop
ljmp
add
add
add
mov
test
xchg
loope
mov
mov
add
aad
imul
add
adc
add
add
sbb
sub
add
call
inc
add
cmp
xchg
push
inc
add
mov
stos
mov
xchg
int
clc
loopne
mov
aam
add
xchg
cmp
loop
sbb
add
jecxz
adc
add
add
dec
mov
lods
add
add
jb
add
jae
add
outsb
repz
clc
push
add
std
test
jbe
clc
jae
add
ret
xor
add
inc
add
lret
jl,pt
cmp
aam
clc
or
jg
jge
add
ja
outsb
clc
fdivrs
es
cmpsl
clc
xor
add
clc
cmp
pop
clc
fistps
clc
dec
cmp
clc
cmp
dec
icebp
adc
cld
inc
clc
nop
dec
mov
xor
add
jnp
mov
fmuls
mov
mov
clc
rcll
jle
xchg
adc
add
clc
stc
and
add
add
clc
pop
or
add
rclb
add
adc
clc
pushf
outsb
filds
add
clc
and
add
add
popa
add
push
add
not
jne
clc
cmc
icebp
fmull
clc
lock
push
dec
fsubr
in
xchg
mov
clc
daa
clc
fucomi
frstor
clc
push
dec
bound
add
add
add
or
jmp
out
repz
test
enter
sub
negl
add
add
test
ret
clc
sbb
jne
fisttpl
add
loop
pushf
nop
jg
ds
clc
pushl
nop
cmp
dec
shl
clc
js
add
add
add
clc
cmp
fbstp
hlt
cmc
mov
stos
jl
pusha
add
jb
add
push
clc
mov
clc
not
or
push
add
mov
clc
out
in
and
add
out
inc
add
hlt
dec
enter
lock
es
cmp
test
mov
add
repz
ljmp
pop
jge
movsb
clc
or
cmp
in
sbb
je
adc
add
lea
cs
push
mov
je
clc
out
mov
pop
rcll
daa
clc
sar
clc
mov
mov
shrl
mov
add
mov
mov
add
mov
cmp
cld
pop
xchg
loopne
int
inc
clc
scas
loopne
call
jp
push
inc
add
rolb
add
lcall
stos
adc
add
clc
fcoms
clc
mov
loop
cwtl
insl
or
inc
clc
xor
out
fs
jne
es
ja
or
lea
in
jl
clc
push
clc
lahf
test
out
cwtl
cwtl
sub
clc
es
pop
bound
add
or
add
stos
invd
repz
clc
repz
clc
mov
sbb
enter
clc
sbb
aaa
adc
clc
cmc
xchg
xor
cmp
das
xchg
jl
clc
jo
add
mov
mov
sahf
push
gs
dec
int
clc
adc
mov
xchg
aas
adc
add
xchg
jp
clc
mov
xor
add
add
clc
pop
fs
cmp
push
add
outsb
jne
data16
aas
mov
pop
and
add
insb
insb
clc
mov
clc
call
pop
stos
adc
add
movsb
clc
in
add
add
and
add
addr16
in
arpl
add
add
add
test
fs
mov
push
add
in
mov
add
sbb
clc
mov
js
cmp
dec
lea
mov
clc
dec
dec
add
loop
negl
dec
pushf
and
add
inc
add
pop
inc
add
outsl
pop
or
push
add
in
call
add
inc
clc
lret
clc
enter
and
add
xor
add
and
clc
mov
add
popf
push
add
in
sub
cmp
sbb
add
fcompl
inc
clc
mov
jnp
add
clc
pop
xor
add
add
sti
sub
clc
cmp
cld
test
jno
add
loop
mov
jno
add
popf
pushf
faddl
add
add
inc
add
mov
das
push
add
inc
add
test
add
pop
cltd
or
data16
or
jle
cmp
add
nop
mov
sbb
aad
ds
push
fwait
cmp
cli
faddp
clc
jno
add
clc
xor
add
pop
jbe
in
mov
and
inc
clc
insl
lock
add
xchg
pop
stc
xchg
cmp
clc
fistpl
or
clc
ljmp
fsub
clc
fs
sti
jnp
inc
add
fstpt
push
xchg
loop
mov
aas
dec
cli
adc
add
dec
sbb
pushf
ss
xor
add
arpl
add
add
cmp
sar
clc
sbb
clc
mov
and
add
add
push
adc
add
push
add
xchg
or
add
add
lods
fcoml
xchg
add
add
clc
mov
mov
add
cmpsb
clc
clc
add
add
pop
inc
clc
fldt
and
add
ds
push
pop
pushl
add
clc
xchg
enter
dec
xchg
mov
add
clc
aaa
movsl
clc
bound
add
gs
in
jle
dec
lock
ret
push
fisttpll
xchg
insl
mov
jbe
pusha
add
mov
imull
and
add
add
call
clc
jae
add
push
add
lcall
add
cs
clc
xor
add
add
jbe
mov
jbe
cmp
icebp
or
cmp
sub
add
mov
mov
xor
add
add
mov
add
add
clc
lock
add
ss
xor
add
jno
add
sub
ds
sub
clc
int
scas
adc
add
clc
or
scas
loope
add
add
dec
fildl
add
inc
add
es
mov
clc
insb
add
add
xchg
int
pushf
xor
add
clc
test
int3
mov
mov
clc
test
sub
loopne
arpl
add
add
cld
mov
jl
add
add
add
lea
loop
dec
or
sbb
mov
sti
fimuls
pop
std
push
add
add
hlt
dec
jle
mov
insl
sub
pushf
mov
sub
dec
push
clc
int
clc
mov
xchg
push
sub
ljmp
add
xchg
jle
push
add
adc
cmpsb
clc
push
clc
mov
cmpsl
clc
add
aam
into
fsubr
frndint
aad
mov
add
adc
add
mov
in
fwait
rorl
jmp
cmp
ucomiss
and
add
clc
xchg
add
add
clc
aam
push
adc
cmpsl
clc
test
inc
clc
js
adc
add
clc
cli
out
sub
cmp
add
jmp
add
cmp
filds
add
cli
lcall
add
outsl
and
add
clc
adc
add
push
cmp
dec
xchg
mov
popf
mov
int
push
aad
jbe
mov
cmpsl
clc
das
pop
cmp
jl
xbegin
push
jne
clc
lret
add
cmpsb
clc
sbb
add
clc
cmpsb
clc
sahf
mov
aad
jmp
add
add
movsl
clc
dec
icebp
aas
mov
roll
in
add
add
cmp
jne
add
sub
data16
inc
clc
mov
clc
aam
clc
mov
add
lock
add
inc
clc
pop
lret
mov
add
add
sub
in
and
cmp
add
or
clc
sub
add
mov
clc
daa
clc
xchg
or
xor
add
add
add
add
or
add
mov
clc
in
hlt
dec
dec
push
mov
cltd
xchg
movsl
clc
xor
jmp
add
add
add
push
ss
fdivr
dec
mov
add
xchg
ficomps
ss
fidivs
add
add
cmp
jmp
push
add
sti
stc
and
add
or
or
into
int3
pinsrw
clc
xchg
xlat
pop
lahf
xor
pop
push
xor
out
test
add
xchg
sar
mov
addr16
shl
lods
ss
out
mov
dec
xchg
mov
fdivs
clc
adc
add
jg
fstpl
xor
add
push
add
das
sbb
add
add
or
stos
shrl
popa
add
cmp
testl
fbstp
sbb
add
mov
and
add
sub
pop
mov
inc
add
fcoms
add
imul
push
imul
std
mov
xchg
outsb
divb
add
sar
cmp
adc
add
mov
clc
out
mov
in
scas
push
add
inc
add
test
cmp
jle
sahf
or
xor
add
jp
mov
ds
push
aam
mov
pop
into
lret
clc
ret
clc
sbb
pop
jp
popa
add
and
add
add
push
jne
push
lock
popa
add
push
clc
xchg
lods
lods
sub
mov
add
add
inc
clc
cmc
rorb
inc
clc
fisubrs
push
popa
add
push
js
cmpsb
clc
imul
adc
add
xor
add
imul
outsl
sub
ljmp
mov
lods
add
int
lea
dec
inc
add
and
add
clc
or
add
add
loope
mov
clc
hlt
inc
add
inc
add
cmp
out
sbb
popf
outsl
jno
add
in
cs
lea
lahf
mov
aaa
jge
ja
xor
xchg
or
insb
or
js
lock
mov
add
and
add
mov
cmc
add
add
mov
push
bound
add
xor
add
fistps
pop
pop
mov
push
clc
mov
clc
jae
add
cmp
add
fcomip
mov
and
or
add
dec
mov
add
push
jns
clc
int
sar
daa
clc
mov
and
add
add
jae
add
add
pop
fwait
and
add
mov
sbb
dec
loope
insl
push
xchg
mov
clc
cmp
clc
jp
xchg
movsl
clc
cmp
clc
inc
add
insb
movsl
clc
sub
add
dec
xor
movsl
clc
rolb
push
xchg
dec
xchg
mov
or
clc
aad
add
aad
loop
mov
clc
ret
outsb
repz
push
mov
cmp
xchg
mov
add
jecxz
fsubl
add
test
repnz
push
hlt
pop
jmp
js
xor
add
add
rcrb
inc
add
add
add
push
and
add
push
xchg
xchg
test
hlt
jecxz
in
loope
jno
add
jecxz
xbegin
clc
sub
add
jl
scas
fs
mov
clc
inc
clc
pop
cmpsl
clc
sti
cmp
push
add
add
cs
xchg
fstpt
add
push
clc
int
sub
clc
sub
sar
jmp
clc
xor
add
int3
jb
add
add
jge
or
or
hlt
in
push
sbb
add
push
pusha
add
push
repz
aad
das
sub
lcall
add
clc
addr16
mov
pop
mov
push
clc
aas
cmp
daa
clc
inc
add
outsl
mov
clc
push
loop
out
push
inc
add
std
dec
jp
add
xor
mov
loopne
sbb
ret
sub
cld
jns
mov
loop
or
add
lods
mov
clc
sub
test
lahf
ljmp
jmp
xor
lahf
ja
add
mov
pop
push
clc
cmp
dec
sbb
add
pop
bound
add
add
fdivrl
sar
add
mov
clc
sub
in
inc
add
or
ret
cmp
dec
sub
xchg
mov
add
sbb
xchg
sbb
movsb
clc
jg
mov
sbb
clc
sub
add
stc
stos
sub
xchg
ds
add
add
add
clc
enter
lea
add
pop
call
lock
add
sbb
xor
cmp
xchg
mov
sbb
push
mov
and
add
cmpsb
clc
das
cld
or
mov
mov
add
clc
cmp
add
mov
leave
sahf
push
add
lret
jecxz
dec
lahf
dec
adc
or
lea
mov
clc
cmp
add
ja
clc
mov
add
gs
data16
cli
or
mov
add
add
push
aam
out
fdivrs
clc
mov
lcall
cmp
flds
clc
ss
add
clc
in
popf
xchg
out
repnz
add
pop
jecxz
out
push
mov
add
arpl
add
lahf
mov
bound
add
js
clc
mov
pop
mov
clc
dec
sbb
adc
add
inc
clc
cmp
jne
xchg
cmpsl
clc
dec
pop
jle
jle
mov
ds
inc
clc
push
add
inc
add
sub
add
scas
and
add
add
out
int3
mov
inc
add
cmp
sbb
stos
fisubrl
sub
clc
xor
fnstsw
add
push
add
cmp
popa
add
mov
cld
or
lret
clc
daa
clc
pop
clc
jle
add
mov
cmpsb
clc
xor
add
dec
imul
fld
clc
pushf
cmc
or
add
in
pop
mov
adc
add
sbb
add
out
mov
clc
pusha
add
jecxz
movsl
clc
enter
pusha
add
fwait
rcrl
sbb
add
clc
add
add
clc
sarl
clc
fwait
loope
cmpsb
clc
fisttpl
cmp
xchg
sahf
sbb
clc
xor
outsl
inc
clc
js
add
add
fisttps
clc
cmp
pop
clc
cs
add
stc
mov
js
push
shlb
add
clc
jl
xabort
mov
sbb
xabort
push
shrl
cmp
clc
shlb
clc
xchg
and
add
cmp
jno
add
add
and
add
clc
inc
clc
out
je
mov
stos
pusha
add
mov
mov
add
inc
clc
sub
ret
jg
clc
ret
clc
mov
sbb
dec
or
ret
div
mov
fucom
clc
out
popf
rcr
cmc
mov
aad
push
mov
clc
add
push
push
mov
pop
xor
add
arpl
add
add
add
sub
cmp
rcl
jb
add
add
clc
fldt
add
std
pop
or
clc
mov
sbb
clc
xchg
sub
add
hlt
cmp
dec
ret
clc
out
xor
add
add
jge,pt
clc
sbb
cmp
daa
clc
and
jmp
mov
sub
mov
add
pop
clc
cmc
test
fidivrs
mov
sbb
clc
repnz
xchg
and
add
ds
xor
jne
jne
int
aam
add
cs
repnz
je
add
addr16
lret
jp
clc
cmp
add
clc
lret
cld
divl
sti
jnp
lret
add
arpl
add
sub
movsb
clc
imul
lahf
cmp
scas
arpl
add
clc
xabort
stc
cwtl
and
add
add
pop
cmp
aas
aaa
fisttpll
inc
add
mov
add
jb
add
jg,pn
out
int
mov
add
in
xor
add
mov
add
repz
cltd
mov
add
jg
fists
inc
add
popf
adc
idivb
mov
repz
pop
clc
std
mov
jg
clc
lret
dec
jb
add
add
pop
call
add
mov
add
into
cmp
clc
in
xchg
fldl
nop
pop
jle
clc
lahf
push
pusha
add
in
push
add
xchg
xor
add
add
add
add
adc
sub
xor
add
or
add
and
add
adc
mov
and
add
jns
inc
add
sbb
fdivs
add
shll
add
clc
imul
and
add
clc
sub
mov
repnz
sub
dec
or
adc
add
fstps
clc
jno
add
cs
in
sti
or
lock
sbb
insl
push
add
das
out
mov
out
inc
clc
repnz
sub
add
jb
add
push
clc
mov
add
add
fs
push
add
dec
jne
xor
add
icebp
cld
adc
add
and
add
je
leave
inc
add
clc
lret
xchg
pop
cmp
add
xor
add
mov
add
or
push
addr16
leave
ja
int3
xchg
test
jecxz
sub
add
dec
sub
idivb
out
int3
or
data16
shll
add
lea
and
add
sub
add
mov
add
pop
xchg
bnd
clc
iret
rcll
fcoml
add
sub
add
clc
in
push
add
mov
dec
imul
clc
sbb
lret
add
push
sub
add
xchg
popf
jmp
clc
int3
jo
add
clc
movsl
clc
in
jmp
cmc
jno
add
std
loopne
push
add
pop
mov
cmp
clc
cmp
pop
mov
roll
clc
mov
loope
and
add
push
add
mov
lods
xor
add
clc
sub
add
imul
popf
mov
clc
pop
jo
add
lods
inc
add
mov
mov
pop
sbb
clc
fwait
jo
add
or
pop
push
leave
xor
add
inc
add
cwtl
sub
clc
mov
fwait
pop
popf
fsubl
add
in
mov
leave
cwtl
cmp
xchg
xor
add
clc
pushf
jge
clc
pop
insb
cmc
mov
add
imul
cmp
sar
clc
fwait
sbb
outsb
or
loope
imul
rcl
cmp
clc
hlt
mov
sar
clc
or
shll
add
cltd
sbb
clc
sbb
dec
mov
add
fstpl
xlat
mov
jne
and
add
push
clc
addr16
daa
clc
push
stos
mov
clc
sub
xchg
cmp
clc
jbe
clc
inc
clc
inc
add
xchg
add
and
sti
out
bound
add
aas
cmpsb
clc
jb
add
jne
es
sbb
xlat
pushf
jne
clc
sub
and
cmp
push
mov
or
sub
jg
out
bound
add
adc
add
sarb
push
clc
outsb
insl
outsb
mov
clc
xor
add
mov
or
movsl
clc
inc
clc
in
sub
clc
push
faddl
add
mov
scas
psrad
inc
add
xchg
mov
xchg
loope
cmp
ljmp
mov
add
add
fmull
cwtl
lret
in
hlt
jl
testl
clc
lea
clc
inc
add
repz
rolb
jg
ljmp
dec
repnz
mov
clc
inc
add
jb
add
std
mov
xbegin
sbb
push
clc
push
clc
cmpsb
clc
mov
add
add
out
test
cmp
push
add
out
ret
add
aas
ljmp
cwtl
pop
cmc
pop
pop
mov
add
inc
add
mov
cmp
jmp
add
test
sbb
push
daa
clc
fbld
and
add
insb
in
xchg
or
add
repnz
push
cmp
insb
mov
cmp
inc
clc
lret
pop
imul
ret
add
pop
sarb
xchg
push
add
in
and
add
dec
add
add
mov
and
add
add
push
jbe
xor
add
xor
add
xchg
insb
pop
clc
mov
je
mov
add
fucomi
outsl
jns
clc
data16
shll
add
xchg
bound
add
mov
xor
add
sub
leave
in
sbb
aas
cmp
daa
clc
clc
clc
call
je
clc
das
mov
movsl
clc
ds
clc
imul
pop
xor
push
jae
add
add
jecxz
sub
adc
add
mov
in
leave
sbb
enter
add
int3
push
clc
mov
clc
mov
jbe
mov
cwtl
xchg
lods
xchg
sbb
add
xchg
js
xor
imul
inc
clc
cli
mov
clc
jbe
add
add
cmc
sub
scas
repnz
add
add
add
adc
push
sti
fsubrl
and
add
gs
push
add
lock
ss
fbstp
add
push
add
mov
add
pusha
add
xabort
popa
add
adc
add
bnd
add
bound
add
dec
cld
push
xlat
xbegin
add
dec
push
xchg
pop
stc
stos
outsb
add
add
add
cli
loopne
loopne
inc
clc
sub
clc
add
add
neg
outsl
cmpsl
clc
outsl
pop
push
clc
sub
es
out
and
pushl
add
aam
clc
fidivrl
pop
sub
add
rclb
add
clc
aad
clc
xchg
adc
add
add
adc
add
add
or
or
add
add
add
mov
inc
clc
sbb
add
push
add
mov
clc
adc
add
inc
clc
xor
add
pop
pop
inc
add
xchg
mov
test
push
fwait
jmp
lods
or
xor
add
add
cmc
icebp
add
sub
clc
adc
add
clc
pop
bound
add
clc
jle
clc
je
pop
or
clc
push
pop
clc
inc
add
pop
clc
adc
add
pop
add
add
push
sti
repnz
add
add
clc
fs
jno
add
add
nop
push
or
xchg
jns
sbb
ret
clc
cmp
cs
gs
jne
add
pop
sbb
xabort
add
and
add
clc
ds
and
dec
xchg
testb
aas
outsb
xor
add
mov
xor
add
clc
dec
repnz
sub
inc
clc
test
iret
cmpsl
clc
in
sub
rolb
jmp
sub
push
repz
add
sub
clc
xor
add
push
clc
jae
add
mov
pop
fwait
jmp
add
xor
dec
jl
mov
mov
add
pop
lock
mov
clc
jo
add
pop
cltd
pop
adc
test
daa
clc
xlat
loopne
fwait
xchg
stc
push
xor
add
mov
clc
pop
out
arpl
add
add
outsb
add
sub
cmp
mov
cld
push
ret
mov
add
mov
add
arpl
add
clc
scas
jecxz
pop
cs
das
in
xchg
mov
add
add
push
adc
jg
mov
hlt
mov
fbstp
sub
stos
jl
lods
cmc
pop
lcall
or
ljmp
int3
outsb
push
xbegin
dec
push
fwait
jmp
fs
mov
clc
lret
enter
adc
ret
clc
push
add
adc
add
cmp
add
fdivrl
xchg
test
xchg
push
add
in
lret
clc
clc
cs
clc
add
gs
jb
add
lcall
test
push
add
xchg
sar
dec
xchg
pop
sub
add
add
clc
mov
js
clc
xbegin
popa
add
add
add
add
add
out
sar
clc
xchg
into
pop
clc
cmc
or
clc
fisubrl
adc
sbb
add
mov
clc
hlt
mov
add
add
std
sub
add
es
inc
add
mov
data16
and
and
inc
add
aam
clc
lea
cmp
push
add
mov
clc
repnz
add
test
mov
add
lods
in
mov
stos
add
add
add
pop
clc
mov
add
fwait
jo
add
add
sbb
movsl
clc
xbegin
inc
clc
pop
clc
into
dec
dec
sbb
xor
add
rcrb
mov
decb
mov
cmp
push
fwait
jmp
push
arpl
add
pop
xchg
mov
xchg
and
add
add
sub
xchg
lret
setle
sbb
addr16
sbb
push
ret
sahf
sub
nop
adc
add
clc
outsl
imull
clc
sbb
add
es
sub
popa
add
add
or
clc
test
mov
inc
add
cmpsb
clc
sarb
jmp
sahf
add
aaa
fwait
push
jnp
gs
clc
cld
mov
xchg
cmp
mov
add
clc
gs
mov
repz
jb
add
cld
push
ret
aaa
test
pop
cmc
push
movsl
clc
mov
clc
dec
push
mov
mov
imul
pushf
add
add
stos
and
add
jp
es
dec
mov
dec
adc
add
clc
xchg
test
sub
outsb
daa
clc
xor
test
dec
ret
add
xchg
in
inc
clc
adc
add
push
clc
std
dec
lahf
push
mov
fwait
jmp
dec
test
dec
xbegin
clc
cwtl
fs
sbb
adc
clc
lahf
out
pop
insb
popa
add
test
rcrb
cmp
cmp
add
clc
aam
jae
add
add
pop
jne
pop
cmc
ja
mov
jg
clc
fists
clc
xor
add
sub
clc
ds
pop
jmp
add
mov
add
mov
lods
lret
push
add
push
mov
mov
xor
mov
fildl
clc
sar
adc
add
push
jmp
popa
mov
jmp
jl
stos
cmp
add
cmpsl
clc
xor
add
add
fisttpll
or
iret
jp
add
std
aad
clc
lods
test
xchg
add
add
gs
cltd
jne
negl
clc
into
data16
shll
add
clc
rorb
mov
mov
lea
je
je
fwait
jmp
mov
clc
sub
cmp
dec
push
add
cmp
std
add
add
mov
sbb
xchg
movsl
clc
push
add
jmp
mov
xabort
clc
push
clc
fldl
popa
add
xor
add
add
rcrl
test
inc
add
push
jmp
fwait
jmp
jge
jg
clc
adc
or
lea
dec
lret
fdiv
lods
fsubrp
or
clc
lahf
stc
lods
out
adc
add
popa
add
xor
add
xchg
or
add
add
test
mov
xchg
outsb
inc
add
fwait
subb
dec
adc
add
fnstenv
add
out
xchg
ficomps
add
push
add
jge
add
push
test
pushf
inc
clc
cmpsl
clc
xchg
in
xchg
incl
and
add
pop
xor
clc
push
dec
call
sub
xor
add
add
clc
leave
xor
add
add
sub
jl
mov
aaa
mov
sar
add
cmp
add
scas
push
clc
xchg
imul
xchg
das
sbb
dec
sub
pop
cld
push
ret
cmp
or
xor
clc
out
stc
mov
xor
add
add
and
or
pusha
add
nop
fxch
nop
jae
add
add
clc
call
add
aaa
push
inc
clc
or
add
mov
or
inc
clc
lret
add
clc
pop
cmp
arpl
add
sti
rolb
add
sti
adc
add
dec
adc
add
mov
inc
clc
or
cmc
dec
iret
inc
add
push
out
in
push
add
inc
add
xor
adc
add
add
in
fimull
add
push
mov
mov
add
aas
adc
add
fmulp
fisubl
add
adc
cltd
mov
in
push
clc
imul
add
mov
push
fwait
jmp
jge
or
sub
mov
add
fbld
add
dec
cmp
addr16
fmull
inc
clc
jge
pop
clc
xor
add
xlat
std
dec
fmuls
sub
clc
insl
xchg
in
std
xchg
push
jmp
sbb
or
clc
sti
movsb
clc
sbb
push
or
add
clc
cmp
clc
out
sub
ja
add
fwait
jmp
sub
imul
cmp
clc
shrb
mov
mov
adc
sub
add
jg
add
push
add
outsb
fiadds
add
fwait
jmp
xchg
jno
mov
or
fwait
jmp
cwtl
imul
clc
dec
jge
add
shl
cmpsb
clc
inc
clc
scas
jae
add
dec
bound
add
add
cmpsb
add
insb
inc
das
lods
ja
pop
pusha
add
lods
movsb
clc
cwtl
xchg
aaa
outsb
sbb
clc
mov
add
add
add
add
mov
cmp
add
or
pop
clc
mov
clc
dec
sub
pop
clc
out
mov
clc
bound
add
sbb
test
jmp
push
add
push
sub
mov
add
mov
add
xor
add
mov
dec
cmpsb
clc
pushf
sub
cmc
push
push
clc
and
add
pop
clc
xor
add
scas
jmp
adc
mov
add
mov
inc
add
mov
pop
cmp
mov
fwait
jmp
fwait
mov
add
out
in
pop
sub
fs
sub
inc
clc
icebp
cmp
add
int
or
imul
xor
add
lahf
aad
add
dec
mov
clc
or
jle
clc
pushl
rcrb
add
test
push
add
ret
bound
add
add
dec
xor
add
fs
js
call
mov
fs
lock
mov
clc
inc
add
sar
clc
sar
cmc
mov
xor
add
clc
test
jmp
fwait
jmp
sub
push
dec
cmp
add
fwait
jmp
lea
add
in
inc
add
ds
add
add
clc
push
add
and
sarb
add
fwait
jmp
imul
lahf
ss
clc
jnp
and
add
add
add
outsl
fs
dec
cmpsb
clc
push
push
add
loop
fcoms
repz
add
add
popa
add
mov
adc
add
out
mov
lcall
xabort
clc
xor
add
sbb
add
add
stc
jge
idiv
dec
cmp
es
shll
add
clc
sbb
or
stc
mov
es
xor
adc
add
sbb
add
dec
je
and
add
add
clc
popf
adc
add
pop
mov
add
sti
inc
add
sub
add
push
clc
out
lahf
out
cmp
add
test
shufps
clc
dec
sub
clc
add
shrl
insl
stos
loop
sbb
push
clc
lcall
or
gs
push
sbb
clc
adc
add
cmp
add
adc
add
in
push
add
mov
jg
clc
mov
clc
cli
and
add
rolb
in
mov
clc
adc
add
add
and
sbb
fwait
jmp
imul
jl
stos
data16
jl
add
jo
add
sub
clc
cmp
add
xchg
in
sti
sub
add
clc
jg
add
ret
clc
cmp
clc
bound
add
jl
clc
xabort
clc
pop
xchg
int
in
mov
clc
popf
bound
add
gs
push
data16
xchg
jl
clc
sub
sbb
shrl
add
push
add
inc
clc
jb
add
clc
cmp
add
ja
mov
add
sar
inc
add
push
add
add
stc
ret
fdivl
push
add
into
bound
add
clc
incl
ret
cld
push
ret
sub
inc
clc
jo
add
add
jnp
add
mov
mov
add
add
clc
ljmp
add
pop
pop
cli
sbb
cmp
xchg
jae
add
clc
pop
sub
clc
ret
clc
sub
add
mov
out
mov
mov
out
mov
add
int3
xchg
ljmp
clc
pushf
clc
dec
dec
arpl
add
inc
cld
push
ret
pop
adcb
lea
scas
jl
data16
inc
clc
leave
and
add
cmp
cmp
aam
mov
clc
push
add
fistpll
scas
pop
add
add
add
jg
clc
inc
add
jo
add
popf
pushf
add
add
clc
leave
sti
movd
xor
add
mov
clc
movsl
clc
jbe
clc
cmp
clc
lods
stos
mov
ja
clc
push
xchg
data16
data16
xchg
xchg
call
lcall
add
ds
aad
clc
fucomp
pop
outsl
push
add
in
sar
vrsqrtps
add
jp
clc
pop
mov
ret
scas
mov
clc
add
add
pop
inc
clc
sarl
test
add
dec
cmp
fwait
jmp
data16
sub
dec
cmp
stos
sahf
clc
inc
clc
je
mov
xchg
pusha
add
daa
clc
pop
jp
je
clc
std
xor
add
inc
clc
ret
clc
sbb
xor
add
insl
in
lret
sbb
push
lret
or
xor
add
dec
fcoms
fcmovb
clc
fsubl
or
push
add
pushf
cmpsb
clc
dec
xor
add
jge
sahf
jnp
mov
clc
mov
inc
add
mov
fwait
jmp
add
clc
mov
clc
aad
sbb
stos
xor
test
scas
dec
push
fcomps
jp
lock
xor
add
add
imul
sbb
in
xchg
inc
clc
flds
add
icebp
cmp
cmp
clc
inc
add
mov
add
cmp
lea
push
nop
xchg
fsub
clc
or
fxch
iret
fisttpl
xor
add
clc
adc
add
add
addr16
sbb
push
pop
sub
enter
lcall
dec
add
add
and
add
add
xchg
das
push
jg
add
xor
das
adc
imul
arpl
add
clc
mov
add
push
add
aam
fidivl
add
push
cli
push
inc
clc
out
jae
add
repnz
add
mov
adc
add
sub
or
fstl
add
add
add
shrl
push
add
into
pushf
pusha
add
jecxz
and
add
js
jnp
sbb
cwtl
ja
clc
sbb
sar
xchg
mov
fimull
clc
std
sti
nop
sbb
add
into
jbe
clc
or
jo
add
clc
out
push
mov
pop
insl
push
xor
add
add
add
fwait
jmp
fwait
pop
sub
fmul
fcmovu
out
mov
push
add
imul
add
aad
sub
push
in
into
es
lcall
push
ret
inc
adc
clc
cmp
inc
add
and
add
pop
iret
push
mov
inc
add
add
add
add
cmp
add
sub
cmpl
hlt
pop
add
fs
clc
aam
clc
add
clc
inc
clc
aad
add
cmp
cmp
mov
fcmovb
clc
in
dec
mov
sbb
add
xlat
push
clc
loope
mov
sbb
out
xabort
out
sub
clc
lret
adc
add
push
add
push
add
movsl
clc
cmp
clc
jecxz
or
clc
mov
popf
test
jle
in
imul
xchg
xchg
add
ja
sub
stos
and
add
cmp
ss
cmp
clc
aad
leave
xor
add
clc
mov
add
loopne
incl
push
ret
sbb
jl
add
imul
add
adc
add
ret
clc
mov
mov
mov
clc
outsl
push
inc
clc
insb
setns
xor
add
ret
lahf
enter
add
dec
mov
add
cmp
xor
add
add
ss
xchg
mov
add
clc
jecxz
inc
add
ds
fbstp
adc
add
in
mov
es
push
mov
add
or
xchg
push
xchg
icebp
push
fsubs
xchg
sbb
clc
jbe
add
mov
lret
mov
clc
loop
rolb
add
dec
jmp
clc
cli
xchg
push
sub
add
lea
jle
push
clc
pop
pop
mov
mull
clc
and
add
clc
mov
add
sar
fwait
stc
and
add
xchg
sbb
jmp
aas
insb
int3
xchg
pop
movsl
clc
fwait
xchg
bound
add
rcrb
cs
add
add
xor
add
add
mov
sub
fiaddl
add
rol
clc
xlat
adc
add
test
lret
or
sub
add
add
adc
add
shll
sub
jns
mov
clc
pusha
add
inc
add
mov
lods
xlat
cmp
fs
adc
add
clc
test
cmp
clc
xor
add
insl
adc
add
add
add
add
xor
fwait
jmp
mov
data16
xor
add
clc
mov
scas
dec
pop
cmc
mov
inc
add
xchg
pushf
xchg
push
sahf
mov
and
add
add
repnz
clc
lods
mov
inc
add
int
pushf
xchg
into
aaa
mov
inc
add
push
add
sbb
mov
add
insl
sahf
adc
add
sbb
add
jae
add
xchg
or
or
xor
cs
clc
and
add
jo
add
ret
clc
fwait
push
add
fdivrl
clc
sub
clc
ret
leave
and
add
sub
clc
inc
add
xchg
fstpt
pop
fwait
jmp
scas
mov
add
int3
xor
add
out
inc
clc
divb
sbb
sbb
cmp
clc
cmp
cltd
mov
inc
clc
hlt
mov
sar
push
ret
inc
sahf
xchg
ja
clc
outsl
or
mov
aas
repnz
in
aad
add
popa
add
iret
sub
push
jb
add
add
jnp
push
dec
nop
cmp
add
jg
clc
sub
test
push
push
fwait
jmp
and
das
imul
cmp
scas
jmp
clc
cltd
out
adc
clc
push
add
cld
push
ret
cmpsb
sub
scas
stos
popf
add
add
add
fnstenv
pop
mov
clc
xchg
sub
adc
add
add
add
add
add
clc
or
test
pop
adc
add
add
add
pusha
fwait
jmp
cmp
clc
sar
jmp
xchg
bound
add
add
stos
jge
clc
in
loopne
add
add
aam
lret
in
xor
loope
dec
mov
repnz
cmp
mov
push
jmp
test
add
add
add
push
mov
clc
jle
clc
or
push
jo
add
lods
cmp
out
dec
sti
jno
add
clc
add
add
or
clc
mov
or
xor
add
jno
add
cs
bound
add
out
out
leave
fs
js
mov
push
add
ds
adc
add
clc
rorb
clc
das
gs
mov
xor
add
dec
mov
in
lret
lahf
cmp
mov
sub
add
and
clc
fiaddl
add
loope
sbb
jmp
insb
xchg
adc
outsl
and
add
pop
cld
push
ret
jno
sub
addr16
xor
jle
xabort
vrcpps
add
je
add
xor
add
aam
push
add
scas
gs
stos
dec
xchg
sar
add
lcall
test
shlb
add
cmp
lods
rorl
cld
scas
or
loopne
stos
or
add
xchg
lcall
out
cmc
pop
cwtl
jg
pop
mov
clc
jp
add
jle
icebp
adc
scas
leave
decl
pop
add
xchg
mov
xor
add
jno
add
add
add
clc
in
or
jbe
add
xor
pop
imul
or
inc
clc
mov
add
ljmp
xor
add
fnstsw
clc
repz
xchg
pop
and
lahf
lret
lea
mov
fwait
jmp
and
sub
xlat
add
add
stos
fildll
add
adc
add
inc
clc
std
cld
jb
add
add
jmp
insb
pop
movsb
loope
push
add
push
add
sbb
test
jmp
hlt
fistl
add
add
add
ja
dec
lcall
je
add
cmc
sahf
add
fnstcw
clc
dec
push
xchg
jb
add
sub
fcmovu
cmpsl
clc
sti
dec
int
loopne
jbe
xlat
frstpm(287
clc
pusha
add
scas
incb
add
mov
add
and
add
sub
mov
bound
add
and
fwait
jmp
sub
test
add
dec
fildll
add
pop
pop
mov
add
clc
loop
fwait
ljmp
jbe
dec
ljmp
bound
add
push
add
das
push
mov
cmp
mov
add
add
add
xchg
hlt
inc
clc
js
pop
mov
sbb
clc
ret
clc
outsl
fsubs
add
aas
lea
add
das
pop
repz
adc
add
shll
clc
out
rol
clc
cmp
in
incl
dec
cmp
jmp
test
clc
sub
add
pop
xor
add
daa
clc
xchg
xchg
mov
ret
dec
cmp
inc
add
sar
shl
clc
adc
add
incb
add
shrb
push
add
add
inc
add
xabort
xchg
cmp
scas
mov
inc
clc
and
add
fistpl
clc
stos
sub
add
add
cmp
clc
int
mov
and
add
lods
outsl
push
cmp
fst
movsl
clc
leave
stos
ficoml
cmp
je
xchg
mov
add
aad
xabort
mov
add
jl
clc
out
in
mov
outsl
pop
call
cmp
add
sub
fwait
jmp
sub
jno
dec
into
in
stos
pop
push
inc
clc
ss
cltd
inc
clc
in
push
add
fwait
jmp
in
and
add
add
jmp
sub
adc
add
dec
stos
fs
dec
push
add
mov
dec
push
add
fildl
sub
push
ret
add
add
add
lods
test
test
into
sar
or
clc
mov
clc
push
add
inc
add
mov
add
loopne
gs
xchg
movsl
clc
mov
aad
clc
xor
add
sbb
test
add
clc
cmp
cli
mov
xor
add
add
inc
add
and
add
pop
mov
add
test
add
dec
addr16
pop
cmp
add
enter
enter
pop
mov
imul
mov
aas
add
add
add
add
pusha
add
jbe
cli
sar
push
cli
inc
clc
xor
add
dec
test
adc
add
mov
add
loop
cmp
mov
imul
in
add
add
add
rcrb
xchg
push
sub
xor
sub
cld
push
ret
pop
test
mov
fwait
jmp
aas
xor
enter
decl
cld
push
ret
inc
sub
adc
add
or
clc
adc
mov
in
adc
clc
sar
mov
ljmp
clc
adc
add
test
inc
add
and
inc
clc
cltd
test
add
insb
inc
add
or
cmp
clc
mov
add
add
cltd
hlt
mov
xabort
adc
add
in
mov
addr16
dec
data16
adc
lock
cmp
clc
popa
add
aaa
sbb
imul
ret
inc
sub
clc
imul
inc
clc
cmp
bound
add
xchg
sbb
outsl
popa
fs
jmp
adc
popf
fidivrs
clc
pusha
add
sbb
jne
fwait
jmp
sub
clc
xchg
ljmp
neg
inc
add
sub
je
pusha
add
in
lods
jno
add
add
xor
add
clc
pop
sub
jmp
clc
inc
clc
vmulps
add
add
test
ret
clc
jbe
out
push
add
xchg
mov
push
test
in
push
jl
inc
add
in
lret
push
pop
cmpsl
clc
xlat
dec
repz
and
add
mov
mov
dec
and
add
xor
add
sar
clc
xchg
or
cmp
adc
add
scas
inc
add
inc
add
jns
clc
push
clc
jbe
clc
add
add
add
add
add
clc
addr16
jnp
add
aam
scas
pop
mov
sbb
add
mov
sub
sbb
add
clc
push
mov
cld
push
ret
cmpsb
rorl
sub
add
push
es
fcoml
add
mov
xchg
or
fdivl
cli
out
lret
jge
fnstsw
inc
clc
hlt
jnp
clc
mov
jmp
int
ret
clc
insb
cmp
pop
sbb
xchg
sub
ds
jp
lods
pusha
add
push
add
loopne
jecxz
add
add
clc
notb
cmp
dec
daa
clc
and
add
mov
add
dec
jge
mov
clc
jg
push
jp
add
add
ficoml
add
xor
pop
xchg
sub
clc
fdivrl
add
mov
outsl
insb
sub
add
dec
popa
add
ret
clc
mov
jle
fildl
test
sar
clc
daa
clc
cmp
dec
add
add
ljmp
movsb
clc
push
pop
clc
xchg
pop
aam
pushf
ret
clc
mov
clc
jl
clc
jmp
imul
clc
leave
scas
pop
clc
push
stos
sbb
add
and
sub
or
add
shrd
clc
iret
mov
clc
inc
add
sti
cltd
xlat
inc
clc
lret
inc
clc
push
inc
add
pop
sar
sub
clc
push
jle
clc
dec
sbb
clc
pop
pop
push
add
dec
and
add
and
add
aam
je
dec
dec
pop
ret
dec
push
cmc
imul
clc
jp
add
test
clc
insl
cwtl
xor
lret
sbb
sahf
dec
dec
shlb
clc
cmpsb
clc
mov
sbb
je
test
pop
jnp
clc
aas
pop
add
add
clc
mov
enter
add
fwait
jmp
sub
data16
cmp
lret
cmc
nop
stc
lods
fimull
mov
add
nop
dec
inc
add
push
push
jle
clc
into
jb
add
push
add
add
out
and
add
aas
xchg
xchg
dec
mov
outsb
and
add
xor
clc
in
outsb
test
or
add
xchg
sub
inc
clc
mov
add
enter
add
pop
sbb
clc
xchg
cmp
add
xbegin
add
xlat
sub
fisubl
add
lods
outsb
fisttpl
cmp
clc
mov
clc
sbb
fwait
jmp
das
or
xor
ret
clc
mov
adc
add
in
icebp
pop
stos
js
cmp
pop
popa
add
fdivr
clc
mov
int3
and
add
clc
cmp
ret
xbegin
jmp
mov
mov
jmp
sub
jge
ja
insb
inc
clc
mov
add
clc
pushf
adc
fstps
add
fwait
jmp
scas
jg
clc
in
dec
outsb
data16
aas
pop
mov
add
sbb
push
add
xabort
ret
clc
dec
dec
cmpsl
clc
pop
lods
pop
loope
out
sbb
in
cmp
pop
jle
jo
add
test
pop
inc
clc
add
add
ja
cmp
mov
mov
add
add
ljmp
push
cld
jo
add
xchg
cmp
mov
add
sub
clc
mov
and
add
add
pop
mov
and
add
pop
clc
std
shlb
mov
pop
cmp
push
push
pop
mov
outsb
pop
clc
inc
add
out
and
add
pop
add
fwait
jmp
pop
push
mov
mov
clc
xor
add
fcompp
xor
or
add
add
clc
out
cmp
sub
adc
or
movsb
clc
cmp
clc
mov
data16
aas
stos
pop
call
fwait
jmp
inc
imul
clc
jb
add
add
xor
fwait
jmp
insb
fidivs
add
add
cmp
add
shrb
add
and
fmull
add
mov
ja
xor
and
add
and
add
fisubl
or
cmp
aam
add
sub
adc
add
clc
out
add
add
daa
clc
mov
xor
add
imul
add
jmp
jmp
das
dec
lea
xchg
or
cmp
mov
cmp
clc
sub
clc
push
push
push
aam
add
cmpsb
push
mov
ss
mov
add
fwait
pop
cmpsb
clc
jae
add
add
jb
add
clc
xchg
mov
clc
pop
mov
icebp
ret
clc
test
data16
cmp
adc
add
imul
add
add
push
add
cli
xchg
and
cmp
mov
add
sar
cmp
clc
push
ret
mov
stc
mov
inc
clc
xchg
adc
push
add
outsb
mov
xchg
lcall
pop
outsl
xchg
mov
mov
jb
add
add
add
push
dec
mov
testl
lods
insb
pop
fildl
clc
and
add
loope
cmp
pop
sbb
jbe
fwait
jmp
sbb
scas
aam
int3
mov
add
push
jge
xchg
xor
xchg
mov
inc
add
cmp
sub
add
push
in
sub
clc
pop
clc
popa
add
adc
add
movsl
clc
mov
out
mov
out
and
cmpsl
clc
imul
pop
jp
lret
mov
inc
clc
and
push
sbb
xabort
clc
lods
jb
add
push
clc
mov
in
mov
arpl
add
pushf
std
mov
clc
mov
sbb
test
push
add
fwait
jmp
inc
clc
cmpsb
clc
ds
clc
sub
cmp
and
push
add
and
jg
and
clc
pop
cmp
jle
clc
repz
add
xor
add
add
clc
ja
movsb
clc
ret
clc
fs
cmp
clc
mov
data16
mov
clc
sti
push
pop
fwait
jmp
das
test
cmp
cltd
ja
mov
ret
add
add
adc
add
jb
add
add
add
stos
fidivl
add
cld
and
add
bound
add
pop
sbb
add
add
clc
inc
clc
fisubrs
clc
fldl
add
clc
sub
pop
jl
dec
sbb
pop
jp
inc
clc
pop
add
add
add
sub
clc
aas
insb
imull
cld
push
ret
andb
clc
ret
add
or
incl
outsb
add
jg
push
and
clc
popf
test
xlat
and
add
clc
test
inc
add
jmp
inc
add
int
xchg
test
mov
dec
fcoml
clc
xchg
push
sbb
or
fwait
jmp
and
add
pop
mov
outsl
cmp
clc
add
mov
mov
ljmp
add
nop
lea
dec
xlat
rorl
dec
mov
into
mov
clc
dec
sub
das
adc
and
add
clc
fldenv
add
sbb
ror
fcmovnb
clc
fdivl
and
add
add
add
xchg
in
insb
out
in
incb
add
sub
vunpcklps
clc
roll
jne
fwait
jmp
lahf
mov
xor
add
loopne
pop
mov
fs
jae
add
add
iret
cltd
fs
inc
clc
test
or
clc
xor
add
aas
es
mov
mov
lret
int3
frstor
clc
and
lahf
lea
iret
outsb
sub
xchg
adc
add
mov
sub
sbb
jmp
clc
fnstcw
clc
mov
int
dec
dec
mov
clc
jmp
mov
pop
jo
add
clc
daa
clc
ljmp
or
sti
sar
lock
add
jae
add
jne
fwait
jmp
cmpsl
clc
cld
adc
jbe
cmp
clc
xbegin
jecxz
sti
mov
sbb
push
ret
scas
sbb
stos
push
add
sarb
outsl
cmp
jmp
clc
mov
arpl
add
adc
add
sbb
clc
jge
clc
sar
xchg
fdivp
add
add
int
mov
cmp
sbb
enter
pop
pop
xchg
adc
add
mov
add
xor
add
or
mov
insb
fwait
jmp
mov
xlat
xor
add
popf
mov
movsb
clc
repnz
jmp
or
add
push
push
add
test
pop
add
cmp
lods
pop
aad
push
add
xchg
stos
in
xchg
jno
add
jbe
jmp
clc
stos
in
lods
jo
add
clc
inc
clc
xchg
iret
mov
add
add
in
cwtl
or
clc
fwait
in
into
or
clc
cmp
xchg
push
add
fwait
jmp
or
push
clc
inc
add
cmp
and
add
lock
imul
or
clc
pop
xor
add
fcmovb
clc
fwait
ds
inc
add
ret
clc
inc
add
mov
add
cmp
xor
add
fldcw
addr16
jo
add
add
mov
cmp
jp
data16
mov
pop
std
ds
cltd
inc
clc
cmp
jnp
mov
clc
pop
cmpsl
clc
jle
clc
vmovntps
icebp
mov
lahf
movsl
clc
movsb
clc
adc
add
mov
cmp
clc
popa
add
mov
add
pop
insb
cltd
sub
add
cmp
clc
gs
out
bound
add
std
inc
add
pop
dec
sub
push
or
clc
test
bound
add
aaa
ret
clc
adc
add
and
add
clc
fs
cmp
add
push
xor
add
clc
and
icebp
xor
add
cmp
dec
xchg
repz
xchg
repnz
xchg
xlat
inc
clc
pop
leave
filds
clc
add
sar
fnsave
ret
mov
xchg
in
clc
dec
data16
lea
add
add
dec
in
push
add
outsl
pushf
pop
lret
mov
stos
es
and
add
push
add
lods
out
dec
jg
adc
clc
pop
fildl
fwait
insb
sarl
add
divb
xabort
add
jae
clc
jnp
clc
cli
xchg
jae
add
jbe
xchg
push
lods
fsubrl
push
adc
add
xor
add
clc
lahf
push
dec
movsb
clc
inc
clc
imul
add
mov
aaa
lock
dec
fwait
jmp
or
std
sar
add
push
add
cmp
clc
cmp
add
clc
sub
clc
lods
call
test
clc
mov
popa
add
xor
add
push
add
add
add
or
sbb
pop
pop
in
lret
jne
addr16
cmp
jl
sub
mov
add
sub
clc
call
push
add
out
inc
add
xor
add
clc
shrb
out
mov
clc
mov
jmp
cmp
es
mov
inc
add
into
lock
mov
stc
jns
xchg
fwait
jmp
add
mov
pop
or
clc
lcall
clc
icebp
fmul
jnp
or
xchg
movsb
clc
imul
clc
mov
mov
sbb
add
xchg
scas
pop
fmul
or
add
mov
cmp
mov
out
xchg
rol
clc
jb
add
cmp
mov
push
xor
lret
jns
pop
inc
add
pop
sbb
cld
push
add
dec
out
sbb
mov
clc
cmpsl
clc
dec
xor
push
add
js
add
xchg
scas
shll
add
lret
mov
data16
jmp
fimuls
and
add
sub
shrl
loopne
mov
nop
sub
loopne,pn
add
add
clc
paddb
cmp
add
es
pop
or
sti
sub
xchg
push
mov
xor
shr
fwait
jmp
cmp
sub
xor
pop
lock
dec
xchg
mov
push
add
movsl
clc
push
clc
cmp
ds
clc
mov
call
aam
add
sub
clc
bound
add
clc
inc
add
cmp
add
cmp
add
add
icebp
cmc
loop
aas
int3
cs
aad
mov
jns
test
loopne
lret
dec
jge,pt
aam
movlps
add
jne
clc
add
ds
and
add
add
sbb
add
sar
sbb
jmp
push
add
or
inc
add
in
sub
ret
fwait
jmp
or
add
std
sar
xor
add
sbb
xchg
sbb
dec
jne
lods
sar
addr16
pop
je
in
jbe
add
add
clc
add
add
cmp
inc
clc
js
fs
ljmp
sub
call
inc
jg
clc
adc
add
sbb
mov
mov
inc
add
movsl
clc
xchg
mov
add
cmpsb
clc
dec
in
push
clc
pop
clc
out
js
clc
inc
add
xchg
jge
test
jle
add
add
and
add
add
sub
mov
add
xor
sti
stos
sarl
pop
adc
add
inc
clc
test
ljmp
inc
jb
fwait
jmp
add
cmp
push
pop
fs
sub
cmp
clc
inc
add
cmp
scas
cmp
mov
out
jno
add
add
dec
cmpsb
clc
fstpt
add
mov
mov
cmp
out
cwtl
push
cmp
movsb
clc
movsl
clc
pop
xor
add
mov
xor
add
and
sbb
add
clc
dec
sub
add
lret
je
clc
data16
fwait
in
rcll
ja
stc
cmpsl
clc
jnp
movsl
clc
out
xabort
add
out
movsl
clc
cs
add
inc
clc
push
add
fisubs
add
add
push
add
arpl
add
xor
add
add
gs
out
test
test
sub
in
cmp
add
jg
imul
icebp
jne
popa
add
imul
clc
lods
call
push
ret
lea
push
xchg
fstl
pop
fadd
clc
cmp
movsbl
loopne
cs
add
in
jecxz
dec
lret
add
add
loope
jmp
out
xabort
clc
rcrb
add
add
pop
or
mov
add
xbegin
add
data16
push
mov
pop
call
dec
cmp
add
and
imul
fwait
jmp
cmp
jne
clc
ret
clc
push
dec
imul
add
push
idivl
clc
cmpsl
clc
mov
mov
clc
ffreep
clc
pop
pop
xlat
adc
add
leave
incb
clc
jge
das
popf
push
add
jmp
clc
inc
clc
imul
adc
add
test
movsl
clc
scas
gs
sub
push
add
mov
stos
xchg
inc
clc
jge
nop
jae
add
add
xbegin
sub
clc
fcoms
icebp
fwait
mov
je
fwait
jmp
mov
add
dec
arpl
add
jmp
aas
sub
std
cmp
clc
in
loop
bound
add
outsb
pop
pushf
and
add
add
add
dec
int3
data16
nop
insl
dec
mov
add
movsb
clc
cmpsl
clc
sbb
fwait
jmp
sub
xabort
clc
sar
scas
sbb
enter
std
es
or
out
mov
push
jmp
aaa
xchg
es
clc
ljmp
int
inc
add
movsb
clc
mov
and
add
add
mov
adc
int
clc
lods
arpl
add
in
pushf
and
add
fwait
pop
movsl
clc
adc
add
ja
int3
lahf
insb
dec
lret
add
inc
clc
repz
add
pusha
add
lods
gs
mov
add
push
add
arpl
add
push
add
adc
add
dec
push
je
fwait
jmp
mov
mov
insl
out
test
cmpsl
clc
cmp
push
arpl
add
add
add
add
adc
add
aas
push
repz
mov
js
cmpsl
clc
dec
dec
inc
add
testl
clc
sar
in
pop
cmp
mov
clc
sbb
clc
ss
xor
add
stc
mov
add
add
and
push
push
add
add
add
fildl
dec
cltd
adc
pop
or
clc
lret
xabort
add
enter
clc
xor
cmp
add
fstpt
aaa
test
popf
scas
or
cld
cmovo
add
add
xchg
inc
clc
clc
enter
clc
sti
pushl
fwait
jmp
pop
jbe
push
add
jo
add
insl
fiadds
mov
add
xchg
mov
inc
clc
std
repz
jno
add
in
cmp
adc
sbb
add
rcrb
je
fwait
jmp
and
add
clc
mov
add
sub
clc
cmc
fmull
add
or
add
clc
mov
lret
add
clc
clc
xor
cmp
popa
add
lcall
call
ds
dec
pop
call
clc
adc
fadds
add
loop
jecxz
fs
sar
test
inc
add
mov
out
inc
add
sbb
fwait
mov
dec
sub
clc
dec
jg
jge
mov
and
in
loop
jb
add
add
lcall
mov
fcoml
scas
push
push
add
xchg
sbb
dec
test
imul
clc
out
or
fisttps
inc
clc
add
add
add
stc
xchg
xchg
xor
lahf
pop
bound
add
add
or
mov
and
aad
clc
push
push
clc
cmp
adc
add
inc
inc
add
add
lea
add
sarl
jmp
mov
and
out
movsl
clc
jg
clc
int
cwtl
lret
push
clc
loop
cmp
clc
fs
mov
clc
es
into
pop
pop
cmp
push
inc
add
pop
cmp
adc
add
add
add
mov
jb,pt
fwait
jmp
or
mov
es
sahf
pop
mov
add
stos
popf
cmpsb
clc
out
shrl
push
adc
add
lock
dec
mov
mov
sbb
arpl
add
clc
loop
lods
outsl
cmp
lahf
fcompl
xor
add
decb
dec
sub
inc
clc
mov
lcall
add
add
test
cmp
add
xbegin
add
loope
push
adc
add
add
jg
add
mov
clc
sbb
in
cwtl
mov
sar
cmp
aas
call
out
fcos
jmp
add
push
add
jecxz
loop
mov
clc
test
lods
or
clc
repnz
xor
jp
sbb
clc
aaa
test
cli
pop
xabort
ret
clc
dec
pop
mov
cmpsl
clc
fwait
pop
cmpsl
clc
jo
add
add
clc
jne
sbb
clc
lods
jb
add
xor
add
add
jo
add
cmpps
clc
pop
xor
add
ss
add
testl
inc
add
rorb
in
popa
add
cmp
add
xlat
sub
push
add
mov
clc
mov
mov
add
jp
and
cs
clc
test
jmp
clc
or
cmp
cmp
pop
test
loopne
sbb
clc
fwait
jmp
test
or
push
fadd
clc
dec
mov
add
sbb
ds
cld
js
test
clc
dec
push
clc
mov
cmp
clc
push
adc
inc
clc
aaa
cmp
add
mov
or
adc
add
cmp
int
mov
clc
bound
add
clc
adc
add
mov
fwait
jmp
aas
cwtl
dec
lcall
repnz
push
xchg
adc
add
add
shl
jae
add
test
add
inc
clc
mov
add
fwait
jmp
pop
clc
roll
add
dec
inc
clc
filds
in
fwait
xor
add
cmp
cmp
add
stos
addr16
aam
outsl
es
mov
add
inc
clc
clc
cmp
mov
lcall
mov
loopne
jecxz
cmp
sbb
add
fnstcw
pop
mov
cli
sub
push
roll
push
add
or
add
add
cmp
add
aad
clc
push
add
stos
js
jle
sub
clc
outsl
xlat
push
xchg
push
add
popa
add
sub
ds
stc
jg
adc
add
clc
test
jno
add
mov
add
fwait
jmp
dec
sub
jg
sbb
sbb
jmp
sub
cld
cmp
add
cmp
or
aaa
cmp
mov
aas
jle
add
sub
clc
test
ss
add
out
or
add
jl
jo
add
clc
cmpsb
clc
loopne
cmp
lret
cmc
daa
clc
test
inc
add
sbb
popa
fwait
jmp
sub
pop
pop
dec
mov
xabort
add
or
clc
test
clc
add
add
add
in
dec
dec
inc
add
fbld
lcall
cld
inc
add
test
or
add
call
es
imul
dec
mov
adc
add
outsb
mov
inc
add
fisubl
add
test
insb
push
push
jmp
add
push
outsb
or
mov
add
repz
add
add
pop
xchg
fbld
cmp
add
add
clc
inc
add
push
mov
outsb
out
pop
pop
dec
out
sti
or
add
sub
outsl
punpckhdq
clc
mov
clc
mov
add
jecxz
inc
add
test
test
pusha
add
addr16
aam
push
cmp
ja
clc
sbb
je
add
add
enter
pop
adc
add
xabort
push
aas
shll
popa
add
lea
add
xor
add
dec
adc
add
clc
sar
add
mov
clc
push
fwait
jmp
dec
push
sub
cltd
inc
clc
jae
add
dec
jmp
clc
icebp
fcomps
clc
in
flds
add
clc
jge
clc
mov
add
xor
xchg
mov
lods
shlb
cmp
lahf
or
out
and
add
add
cmc
add
dec
stos
int3
xor
add
clc
inc
clc
xor
add
push
cmp
mov
mov
clc
pop
popa
add
mov
cltd
lret
stos
cmpsb
clc
mov
add
pop
outsl
dec
adc
add
pusha
add
and
add
mov
xchg
jbe
mov
sbb
sbb
jmp
cmpsb
sub
clc
sub
clc
ljmp
clc
adc
add
dec
pop
outsb
xchg
xchg
lods
jge
mov
hlt
mov
insb
add
add
xchg
add
add
cmp
lcall
adc
add
add
nop
adc
add
roll
in
mov
ljmp
popf
loop
xabort
add
test
leave
adc
add
inc
add
ret
inc
clc
sub
lcall
aas
cmpsb
clc
pop
xchg
inc
clc
or
clc
ret
add
add
add
mov
clc
icebp
aas
adc
add
clc
scas
fsubrl
mov
shrl
stos
enter
dec
dec
out
clc
add
add
add
jecxz
cmpsb
clc
call
xbegin
jmp
push
pop
aaa
sub
test
inc
add
rorl
pop
into
cmp
add
sub
add
jo
add
out
das
sub
mov
add
dec
data16
jp
mov
clc
scas
add
packsswb
add
add
add
mov
push
lret
mov
das
arpl
add
add
lea
cmp
mov
mov
clc
xchg
lock
push
ret
jg
sbb
stos
xor
add
push
add
call
clc
es
repz
fmull
add
and
add
fdivl
add
clc
cmp
shrb
jg
jae
add
stc
pop
jl
add
mov
or
push
cmp
fwait
jmp
mov
jl
mov
clc
mov
push
ret
test
add
mov
sbb
add
popa
add
out
js
aas
or
inc
cld
push
ret
imul
or
mov
add
add
cmpsl
clc
cmpsl
clc
adc
add
jne
shll
add
dec
lods
push
stos
imul
dec
icebp
inc
clc
jle
jae
add
add
aam
and
add
clc
xchg
xor
add
add
push
add
lcall
add
mov
fwait
jmp
sub
scas
cmp
scas
inc
clc
push
xor
xchg
mov
scas
insl
jg
or
movsb
clc
push
or
mov
jmp
sub
clc
add
add
jge
clc
mov
clc
add
add
add
add
clc
sbb
push
ret
pop
sahf
sub
into
clc
insl
pop
xor
mov
clc
pop
int3
lods
add
add
clc
sbb
push
ret
pop
test
clc
add
add
mov
push
add
sahf
movsb
add
jg
add
lods
sub
clc
dec
cs
and
add
add
cld
divl
xchg
stos
lock
into
jo
add
clc
mov
jmp
arpl
add
push
je
fwait
jmp
xabort
or
mov
mov
clc
loope
mov
outsb
insb
mov
mov
std
pusha
add
lock
clc
pop
insb
adc
add
clc
sbb
adc
add
jg
clc
insb
aaa
shl
clc
daa
clc
stos
je
mov
add
mov
mov
add
jno
add
sarl
sbb
push
xor
add
pop
add
add
je
cmp
add
jecxz
loopne
imulb
clc
or
stc
js
jge
incb
add
add
popa
add
jae
add
xor
add
add
add
cmc
jns
jle
rorb
repz
cmp
clc
mov
add
mov
outsb
sub
movsb
clc
sub
add
clc
cld
popf
fwait
lods
add
add
clc
popa
add
or
cmp
sar
ret
clc
cwtl
sahf
decl
mov
add
jmp
add
xchg
in
mov
fistpl
clc
jg
xchg
mov
in
stos
jnp
add
and
add
hlt
dec
xchg
movsl
clc
jne
add
pop
clc
repnz
add
clc
mov
outsb
mov
xchg
cmp
jecxz
inc
clc
sti
data16
dec
mov
clc
rorl
jb
add
add
out
dec
jmp
in
clc
gs
iret
in
add
add
clc
loope
sub
loope
enter
add
fistl
add
ss
inc
clc
lret
mov
add
sbb
add
or
mov
clc
jecxz
jle
xchg
in
out
sub
sub
loop
jne
clc
pop
dec
xchg
add
add
int
clc
data16
aad
jnp
clc
mov
lret
sub
inc
add
outsl
xchg
adc
mov
add
add
hlt
fs
mov
jae
add
lcall
stos
jbe
mov
ds
icebp
mov
add
xor
add
daa
clc
or
add
aad
scas
stos
dec
sar
sbb
mov
add
fwait
jmp
data16
cmp
add
lcall
clc
cltd
xor
imul
fcmovbe
adc
add
add
add
mov
adc
push
daa
clc
out
add
inc
add
mov
add
adc
add
add
clc
or
jnp
in
cmp
add
sbb
add
or
leave
jg
jno
add
add
cld
adc
add
add
lods
leave
push
add
leave
bound
add
fiaddl
clc
imul
fscale
add
add
fldenv
clc
lcall
pop
add
add
lods
adc
add
clc
add
clc
and
xor
out
data16
clc
cwtl
addr16
adc
add
ret
clc
pop
imul
jl
jnp
clc
data16
xchg
and
add
add
cmpsb
clc
xor
add
add
add
nop
testb
stos
fisttps
add
or
jecxz
xchg
popf
fwait
fwait
lea
fnsave
add
jp
jno
add
clc
rol
clc
or
sbb
ljmp
fwait
jmp
mov
add
in
popa
add
sub
mov
das
xchg
rclb
cltd
cmp
add
or
mov
cmc
sub
add
fnstsw
addr16
jmp
imul
sti
pop
mov
rcl
hlt
loopne
push
add
sarl
fsubs
mov
push
fwait
jmp
or
pop
insb
pop
data16
mov
es
lods
xchg
mov
loope
daa
clc
dec
mov
loope
xor
clc
adc
add
fidivl
add
pop
or
clc
pop
mov
and
clc
ret
clc
push
pop
push
mov
cld
push
ret
insb
add
aam
push
rcrb
lcall
mov
add
push
inc
add
ja
add
xor
add
sbb
clc
jbe
add
cmp
mov
arpl
add
std
insl
push
jmp
inc
sahf
test
cli
xor
cmp
scas
leave
lods
and
push
add
arpl
add
clc
movsl
clc
xchg
mov
pop
xchg
cltd
mov
cmp
add
or
movsb
clc
movsb
clc
iret
fdivrs
clc
pop
aad
clc
pop
clc
aas
xor
add
insl
shrl
clc
ljmp
cmp
lcall
push
ret
sub
and
jge
cmp
clc
fs
outsb
lcall
jg
incl
inc
test
add
mov
outsb
sarb
sahf
das
aam
adc
push
fwait
jmp
push
sub
mov
add
cwtl
xor
inc
in
js
add
fsubrs
or
clc
aas
testl
clc
adc
sub
sub
clc
fidivs
and
dec
out
in
jns
lea
jno
add
stc
cltd
add
add
add
clc
ljmp
aaa
push
subb
sbb
add
pusha
add
push
mov
add
lret
sahf
sar
fwait
sbb
fwait
test
data16
dec
xor
xchg
mov
jmp
cmp
and
add
inc
clc
sub
add
clc
adc
add
or
bound
add
clc
cld
pop
fiaddl
add
loopne
popf
mov
mov
push
dec
mov
mov
add
add
add
clc
repz
clc
mov
add
add
cld
push
ret
sub
sub
clc
outsb
inc
clc
sar
call
clc
pop
clc
icebp
icebp
into
push
dec
lock
lea
add
test
sub
bound
add
fmull
clc
cmc
lret
add
popl
jns
sbb
icebp
jg
clc
push
add
inc
add
push
jb
add
or
mov
add
add
add
add
stos
int3
ss
daa
clc
outsl
sbb
ss
ds
insl
pop
or
js
add
test
clc
sub
clc
ds
popf
data16
setg
sbb
push
out
addr16
in
sbb
fwait
sub
mov
add
mov
clc
dec
jg
fistl
imul
add
push
clc
cld
and
add
add
adc
add
mov
inc
clc
inc
clc
lahf
xor
gs
cmp
clc
mov
mov
add
rcll
add
add
scas
ret
clc
xchg
sub
lea
decl
cld
push
ret
data16
jae
add
outsl
inc
add
push
pop
xchg
fldcw
clc
lcall
lods
cmp
mov
clc
nop
pop
stos
in
inc
clc
ficoms
add
mov
add
add
mov
add
add
add
add
test
stos
adc
lcall
icebp
bound
add
clc
imul
mov
mov
addr16
sub
add
add
add
pusha
add
jg
add
sbb
mov
jmp
clc
xchg
cmp
aaa
clc
in
shrl
sbb
adc
add
ret
out
cmp
and
add
jo
add
add
test
fs
test
add
out
dec
stos
repz
pop
out
push
add
test
cmp
mov
clc
mov
cmp
clc
cli
sub
sub
add
xbegin
add
out
xor
clc
add
add
inc
clc
dec
shll
add
inc
add
fld
clc
mov
add
xor
add
clc
mov
add
xchg
pop
fmull
clc
int3
mov
add
mov
clc
pusha
add
mov
fisttpl
js
mov
ds
clc
in
xabort
add
ja
clc
out
aaa
in
lahf
push
mov
xchg
lods
rcr
cs
scas
push
mov
cmc
fwait
mov
xor
add
add
dec
jl
add
fwait
jmp
sbb
scas
xchg
inc
add
mov
loop
lret
je
clc
cmp
in
pop
jg
mov
push
add
dec
push
jmp
mov
add
gs
fs
cmpsl
clc
adc
sbb
or
enter
add
int
xor
add
add
clc
push
add
cli
pop
mov
add
hlt
stos
mov
clc
mov
popl
add
loope
leave
lods
cs
add
popl
add
push
outsb
add
mov
movsb
dec
push
or
xabort
clc
scas
js
out
fstps
and
cld
push
ret
inc
sub
clc
pop
leave
add
add
lods
mov
idiv
incl
lods
test
lahf
decl
rorl
add
sub
lods
cmp
clc
xchg
aas
xor
add
fdiv
scas
ja
js
clc
mov
add
jg
add
add
add
clc
xor
cmpsb
clc
mov
dec
adc
xchg
loopne
sar
xbegin
jmp
add
add
clc
not
popa
add
mov
xor
add
inc
clc
fwait
and
add
add
pop
aaa
fmuls
add
xchg
icebp
int3
mov
jle
shrl
xchg
pop
out
ss
faddl
add
dec
test
dec
enter
and
add
das
enter
mov
or
add
mov
adc
add
lret
add
push
sub
add
jp
sub
imul
jae
add
pop
fwait
jmp
push
inc
dec
or
clc
mov
sbb
mov
cld
pop
mov
and
push
add
cmp
aas
add
add
int3
add
add
rcr
jmp
clc
lret
and
add
jae
add
inc
add
sti
xor
add
decl
inc
sti
cmp
sub
xchg
xchg
dec
xabort
iret
mov
add
je
push
add
leave
fnstcw
aas
push
add
add
int3
xchg
add
pop
in
adc
add
mov
add
jns
clc
xor
add
push
cmpsb
clc
adc
add
clc
jmp
fmuls
add
add
and
ja
xchg
ss
clc
xlat
mov
loopne
cltd
jmp
or
cmp
clc
in
sbb
add
add
mov
push
into
pushl
or
clc
mov
ret
clc
pop
repz
add
add
pop
fcomps
je
add
loopne
icebp
pop
add
add
clc
aad
popa
add
dec
xbegin
test
push
int3
cmp
xchg
mov
fcmovu
jo
add
lods
repz
clc
lods
pop
cli
jmp
xchg
mov
mov
movsl
clc
divl
jl
push
clc
add
js
clc
adc
add
and
add
pushf
pop
or
addr16
imul
xchg
outsb
lods
mov
add
clc
lret
add
add
pop
adc
add
das
sti
repz
clc
je
lock
add
lret
pop
popa
add
xor
data16
or
mov
clc
bound
add
add
cli
cmp
add
add
add
xchg
ret
clc
ds
add
mov
mov
xlat
pop
repz
adc
add
clc
cmp
add
inc
add
push
add
pop
clc
cmp
add
add
cmp
clc
fs
mov
and
jmp
pop
test
clc
stos
test
mov
push
push
cld
push
ret
mov
or
push
mov
add
dec
lock
das
cltd
cld
pop
in
jne
cmp
add
test
clc
cmp
xchg
pop
fimull
jo
add
mov
clc
jmp
imul
add
ds
add
ljmp
adc
add
adc
add
repz
add
cmp
cli
jns
jl
xchg
sar
push
sub
fwait
jmp
xor
cmp
clc
data16
or
dec
xchg
xchg
rclb
icebp
sar
lcall
add
fs
inc
clc
out
push
xor
add
sbb
adc
data16
mov
clc
imul
je
xbegin
sti
clc
enter
clc
xchg
push
pop
insb
hlt
jg
xchg
mov
inc
add
imul
punpckhwd
mov
sub
add
pop
lods
sub
cmp
add
popa
add
ret
add
arpl
add
icebp
mov
clc
rorb
and
add
add
aam
xor
pop
adc
xor
clc
mov
jge
add
daa
clc
cmpsl
clc
or
clc
push
add
or
popa
add
in
push
add
mov
cmp
outsl
sub
lret
xor
add
pop
std
test
mov
lods
insb
lock
scas
stos
mov
fnstenv
cmp
gs
ss
out
xchg
int3
cmp
clc
leave
test
add
pop
sbb
mov
jmp
std
ret
clc
pop
or
sbb
out
jb
add
push
or
cmc
arpl
add
xor
inc
add
mov
cmp
decl
add
add
add
clc
adc
add
lods
daa
clc
inc
clc
jg
clc
pusha
add
dec
xchg
inc
add
pop
dec
fbstp
add
popf
call
fwait
and
add
add
push
sarl
or
clc
repz
inc
clc
pop
call
cmpsb
clc
test
push
mov
ret
clc
mov
inc
add
mov
clc
gs
stc
fstpl
add
cmp
adc
add
dec
and
add
clc
inc
add
stc
jecxz
loopne
stos
mulb
clc
loope
and
add
add
add
cli
mov
clc
sar
std
push
xchg
fs
adc
add
add
in
mov
adc
add
mov
addr16
daa
clc
push
clc
fdivr
sub
push
clc
inc
clc
cmpsl
clc
in
out
rcll
xor
add
clc
stos
xchg
mov
add
mov
add
jnp
add
nop
or
xchg
icebp
pop
sbb
dec
lock
add
test
push
add
clc
jne
and
xchg
arpl
add
mov
clc
insl
pop
imul
add
add
add
clc
cwtl
xchg
or
xchg
pop
pop
cmc
ds
add
xchg
imul
shr
cld
push
ret
nop
xor
jecxz
cmp
inc
add
repnz
notl
add
add
hlt
mov
into
add
cmp
add
mov
btc
mov
add
mov
fs
pushf
xor
jno
add
or
and
cwtl
xor
add
mov
add
das
stos
ret
clc
cs
mov
jne
fwait
jmp
ret
clc
cmp
mov
clc
adc
add
clc
lods
pop
xchg
lods
cmp
add
inc
clc
xabort
movsl
clc
push
mov
fwait
jmp
dec
cmpsb
lods
pop
jmp
clc
shll
adc
add
adc
add
aaa
jge
repz
clc
push
sub
add
shrb
mov
aam
clc
fidivrl
popf
mov
out
imulb
add
daa
clc
leave
js
adc
add
add
add
mov
add
add
cli
int
stos
sbb
or
jns
clc
lahf
mov
add
jle
add
mov
pop
mov
jg
add
movsb
cmpsb
sub
add
add
add
jecxz,pt
std
xchg
cmp
cwtl
pop
dec
addr16
ret
clc
sar
xchg
xchg
out
xor
add
cmpsl
clc
je
inc
clc
sub
clc
imul
imulb
adc
add
add
dec
aas
sub
clc
dec
xor
add
xlat
and
add
add
jl
jns
push
cld
push
ret
pop
xchg
sub
cmpsl
clc
cwtl
pop
call
adc
add
add
gs
pop
add
add
adc
add
faddl
add
mov
add
pop
add
add
cmp
push
mov
cli
in
pop
jecxz
mov
add
push
add
and
add
add
add
push
dec
ljmp
push
add
cld
push
ret
es
gs
mov
inc
clc
aaa
sahf
mov
clc
sbb
add
fwait
jmp
mov
outsb
jno
add
lahf
cmc
arpl
add
add
push
clc
stc
push
clc
jl
xor
add
add
sbb
cmp
xbegin
add
or
cmpsb
clc
sbb
cmp
sub
clc
push
ret
xchg
pop
push
add
jno
add
add
jae
add
add
inc
add
ret
clc
test
mov
add
aaa
cwtl
pop
enter
xabort
mov
ja
jb
add
mov
clc
imul
push
add
lods
pop
clc
fiadds
add
add
cmp
clc
stos
cmp
clc
rolb
daa
clc
push
xbegin
sbb
cmp
add
cltd
pop
mov
clc
xabort
clc
sub
pop
clc
ss
cmp
jmp
cmc
sar
add
sbb
cld
push
ret
and
cmp
add
xor
add
into
xbegin
mov
roll
ret
sahf
and
jp
add
dec
daa
clc
jp
out
and
add
xchg
daa
clc
push
add
pop
mov
inc
clc
or
push
add
sbb
add
xchg
iret
negb
sar
pushf
push
rep
fwait
jmp
jno
je
cmp
ljmp
out
loopne
xor
add
fmul
repz
aam
clc
arpl
add
ret
xchg
push
jbe
add
cmp
mov
js
ljmp
add
mov
dec
fwait
jmp
popa
aas
sbb
jnp
push
xlat
lcall
jnp
clc
sbb
mov
sbb
add
sbb
cltd
jns
clc
in
bound
add
imull
dec
inc
clc
pop
movsb
clc
negb
mov
sbb
cmp
xor
xchg
pop
xlat
insl
fxch
sar
adc
add
clc
fbld
add
xor
add
mov
add
or
aas
cmp
movzwl
fwait
jmp
add
aas
push
xabort
clc
xor
add
data16
xchg
xlat
cmpsb
clc
mov
pop
imul
mov
mov
push
push
cld
push
ret
sbb
and
scas
int3
mov
and
add
lcall
out
pop
lods
aas
dec
shl
sub
push
cmp
or
jb
add
fidivrl
out
cmp
push
clc
push
clc
pop
clc
cmpsl
clc
jecxz
shll
add
dec
inc
add
cli
mov
mov
clc
push
add
addr16
adc
add
mov
clc
int
clc
mov
add
jecxz
addr16
idivb
lods
stos
push
cmp
add
jae
add
push
inc
add
es
cmpsl
clc
cmp
nop
mov
shll
clc
push
add
push
jecxz
test
pusha
add
aas
fimuls
add
into
jnp
bound
add
add
cmp
enter
push
mov
push
mov
add
add
push
add
ds
mov
pop
clc
xor
and
add
mov
out
xchg
xchg
notl
outsl
xor
add
add
inc
add
lahf
cmp
add
in
test
clc
repz
clc
out
stos
insl
mov
clc
mov
add
add
nop
cmp
add
gs
push
push
jmp
and
lods
adc
add
fwait
mov
clc
jp
movsb
clc
cmpsl
clc
jecxz
mov
cmp
in
xor
add
das
or
test
clc
sbb
clc
adc
popf
inc
add
nop
outsl
outsb
cmp
dec
mov
pushf
repnz
inc
clc
cmp
add
cmp
mov
add
loope
push
add
fwait
jmp
lods
sub
clc
mov
cmc
fs
psubd
adc
add
clc
std
mov
and
add
adc
adc
stos
adc
add
outsl
stos
add
push
ljmp
add
mov
lret
mov
lcall
clc
xbegin
clc
pop
incl
jne
inc
add
sbb
sub
sbb
add
push
das
push
add
aad
mov
xchg
sbb
xchg
fcos
lcall
jmp
bound
add
jbe
clc
inc
clc
push
add
dec
mov
push
insl
scas
mov
bound
add
add
insl
xchg
aas
and
add
clc
repz
or
jne
fwait
sar
mov
jb
add
add
jbe
cwtl
jnp
inc
clc
test
jge
clc
lods
jecxz
mov
fwait
aas
mov
clc
push
sbb
les
inc
push
pop
and
add
xor
clc
std
imul
mov
data16
adc
add
mov
cmpsb
clc
cltd
roll
add
sub
mov
sub
xor
jo
add
or
xor
xbegin
add
mov
aas
add
add
clc
lret
add
add
loop
sahf
or
add
clc
jns
mov
and
in
ret
clc
aaa
imul
add
add
push
in
outsb
insl
jmp
cmp
das
kmovw
clc
mov
add
clc
hlt
push
xor
add
add
leave
pop
sbb
push
add
stc
scas
out
adc
add
clc
or
push
das
icebp
clc
data16
cmp
inc
clc
add
add
popf
out
imul
add
push
test
fwait
jmp
cmpsb
loopne
mov
sbb
lock
test
popa
add
adc
add
add
lea
clc
repnz
stos
push
add
sub
add
fs
das
and
add
clc
dec
mov
mov
clc
clc
mov
gs
mov
clc
imul
mov
int
jl
clc
ret
clc
fcmovnu
call
add
add
cltd
xchg
adc
add
add
clc
pop
clc
aad
cmp
pop
mov
adc
add
in
in
sti
cmpsl
clc
xchg
flds
add
add
clc
clc
xchg
leave
mov
clc
xor
add
ds
or
rclb
add
clc
xbegin
push
ret
movsb
test
sbb
push
ret
push
sub
add
xchg
adc
add
dec
push
je
clc
dec
arpl
add
add
xchg
add
dec
dec
inc
clc
into
test
clc
jg
fwait
add
add
add
inc
clc
adc
add
push
cmpsb
clc
xor
add
fidivs
add
insl
and
add
jmp
in
mov
push
add
fwait
jmp
sub
arpl
add
xchg
lcall
mov
xor
add
ret
clc
pop
cli
mov
pop
lods
fcmovb
clc
clc
lock
add
hlt
inc
add
sub
cmp
add
push
add
dec
mov
add
sub
add
dec
fisubrs
pop
dec
cmp
inc
add
mov
pop
cmp
int3
pop
std
imul
scas
sbb
ret
add
popf
outsb
int
push
push
add
cmp
jge
gs
aad
mov
fwait
jmp
sub
inc
clc
clc
add
add
stos
push
add
int
adc
clc
inc
add
insl
xchg
cmp
clc
pop
mov
xor
add
push
add
shl
sahf
or
imul
add
clc
xor
lcall
clc
and
add
clc
push
data16
push
add
dec
adc
add
clc
xlat
pop
sbb
aas
pop
push
add
add
add
add
add
cmp
dec
mov
add
add
test
xor
mov
clc
js
clc
or
jecxz
aam
push
add
xor
add
add
add
test
sbb
sar
push
ret
push
dec
insb
sar
jnp
clc
test
push
in
push
ret
cmpsb
dec
add
push
lods
pop
cmp
push
add
bound
add
adc
add
call
push
ret
scas
movsb
xchg
and
push
add
mov
mov
clc
outsl
gs
test
test
clc
dec
jb
add
and
add
setns
mov
cmp
data16
jnp
clc
pop
aam
sbb
ljmp
add
xor
lods
test
cs
mov
clc
sbb
fs
lcall
cmp
add
cmp
clc
ljmp
jmp
sbb
sub
push
add
fucomp
dec
pop
jne
jae
add
inc
add
and
add
xchg
add
add
xor
into
movsb
clc
mov
add
lods
mov
add
add
mov
add
out
xor
add
rcl
ss
adc
push
add
and
rep
insb
and
add
jl
add
and
add
push
add
add
add
add
clc
and
add
xor
repz
clc
xor
clc
pop
out
mov
adc
add
in
clc
inc
clc
lcall
xchg
lock
pusha
add
sbb
add
clc
inc
clc
pop
adc
add
add
dec
xchg
mov
add
add
add
mov
cmp
loop
daa
clc
adc
add
sbb
test
pusha
add
outsb
xchg
xor
pop
inc
add
pop
clc
addr16
nop
shll
mov
add
clc
stos
jmp
clc
sti
fadds
ficompl
mov
dec
cmp
adc
add
push
add
pop
in
sub
clc
and
add
add
fcoml
add
clc
shlb
add
cmp
clc
shll
add
push
add
cmp
add
mov
inc
clc
aad
xchg
in
popa
add
fcoml
clc
popa
add
sbb
repz
add
xchg
nop
pop
and
add
loopne
and
rol
clc
clc
sub
mov
pop
add
and
ja
and
add
sub
jae
add
adc
cmp
sti
ret
clc
or
popl
fwait
jmp
or
add
clc
imul
mov
aam
incl
icebp
fwait
jmp
cmp
aam
push
ja
cltd
fwait
loopne
popa
add
dec
adc
add
loope
sub
sbb
clc
int3
popf
pop
pop
clc
faddl
sub
add
mov
mov
cmp
sbb
pop
mov
clc
mov
pop
dec
dec
pushf
fmull
clc
add
sti
in
shlb
aam
xbegin
clc
xor
add
xchg
mov
clc
lcall
cmp
mov
hlt
je
add
inc
clc
pop
jno
add
jmp
cmp
jns
and
mov
mov
xchg
mov
xchg
fisubrl
adc
add
xchg
xabort
in
je
test
leave
cmpsb
clc
shlb
or
clc
daa
clc
data16
xchg
mov
fwait
mov
scas
bound
add
clc
sbb
add
cwtl
dec
idivb
cmp
lods
mov
jae
add
in
sahf
dec
sahf
test
add
mov
idivb
add
or
and
clc
mov
add
into
sub
clc
test
mov
call
add
xor
mov
push
add
ja
inc
add
lock
add
scas
leave
lahf
inc
add
and
add
sbb
sbb
jmp
aas
xor
pop
and
cs
sub
pop
cli
cmpsb
clc
push
push
xor
add
jecxz
iret
dec
xchg
push
sahf
pop
sub
cwtl
dec
xbegin
aad
sbb
imul
add
inc
add
cmp
imul
add
clc
cld
sub
fiaddl
add
cmp
in
adc
add
add
jmp
ljmp
add
xchg
add
add
clc
mov
inc
add
rolb
add
mov
pop
lret
mov
pop
movups
add
add
cltd
mov
clc
add
add
add
cmc
and
add
clc
cmp
sar
mov
add
pop
call
clc
dec
dec
sbb
lock
in
mov
pop
dec
push
clc
into
push
gs
add
add
clc
scas
test
push
cmp
nop
lret
clc
in
cmc
movsb
clc
bound
add
add
js
fistps
imul
stos
push
cmp
add
das
dec
jp
add
loopne
movsb
clc
xor
add
js
stos
xchg
cmp
clc
stos
loopne
ret
clc
repz
incl
int3
rolb
ret
or
sub
add
inc
clc
xlat
adc
add
in
mov
add
lods
enter
clc
cmp
add
fmull
add
push
add
push
popa
add
mov
inc
add
pop
rolb
add
pop
inc
add
stos
iret
add
cmpsl
clc
jo
add
outsl
pop
cmpsb
clc
dec
adc
add
jge
lret
push
add
in
es
adc
clc
cwtl
fistpll
and
adc
clc
leave
cmc
sub
divb
add
cmp
mov
cmp
es
das
xor
add
adc
jl
dec
jbe
add
jno
add
adc
insb
data16
mulb
add
aaa
inc
add
push
jo
add
shrb
repnz
fs
mov
jp
add
pop
xor
add
call
inc
add
push
or
pushf
aas
jle
scas
sahf
or
pop
aaa
inc
add
dec
mov
sub
add
mov
pop
cmp
xabort
clc
fs
repnz
add
add
add
mov
test
mov
test
xlat
addr16
sbb
imul
add
lock
popf
out
sbb
mov
pushf
stos
pop
xchg
jne
sahf
or
clc
mov
adc
add
incl
cmc
dec
add
mov
insb
pop
das
je
notb
jbe
outsl
jb
add
mov
fwait
jmp
cmpsb
inc
clc
ffreep
clc
mov
clc
movsb
clc
mov
lret
sar
clc
jp
add
jle
fwait
mov
pop
insb
sub
add
add
add
dec
pop
in
cmp
mov
dec
inc
add
fwait
jmp
push
sub
sub
sbb
pop
in
and
add
repnz
add
mov
sar
in
dec
mov
or
inc
clc
sar
add
jno
add
push
mov
into
incl
jne
fwait
jmp
imul
xor
add
lea
fwait
jmp
imul
nop
pop
leave
inc
add
mov
clc
inc
clc
pop
jnp
add
lods
mov
jg
dec
adc
add
xabort
pop
cltd
and
add
mov
punpckhwd
add
add
lret
or
add
xor
jmp
xbegin
clc
mov
pop
fisttpll
pop
xchg
adc
add
mov
std
jae
add
mov
pop
lods
ljmp
add
add
js
cmp
fisubrl
clc
sub
dec
psubusw
add
out
cld
in
push
mov
fwait
jmp
test
cltd
popa
add
ret
clc
aad
out
push
in
sub
add
push
add
in
adc
add
clc
jle
outsl
push
add
mov
lods
cmp
imul
xabort
inc
clc
leave
pop
adc
add
lret
jp
add
jb
add
pop
clc
cli
ret
clc
sar
clc
adc
add
mov
fwait
jmp
test
jno
jo
add
inc
add
pop
in
mov
xchg
add
lret
gs
mov
ds
mov
clc
mov
add
jecxz
pop
fs
imul
gs
bound
add
mov
dec
pop
or
mov
int3
cmp
add
add
cmp
clc
xchg
jle
xchg
das
rorb
jns
fwait
jmp
add
cmp
cmpl
fwait
jmp
outsl
fs
rolb
clc
mov
clc
das
xchg
jno
add
add
add
addr16
loope
jb
add
cld
xor
sbb
clc
adc
inc
clc
das
mov
dec
push
add
fildl
add
hlt
jb
add
push
fcoml
add
xor
lods
in
aas
scas
sbb
inc
add
push
clc
out
std
pusha
add
cmc
in
repz
add
adc
add
push
cld
aas
inc
add
hlt
adc
add
fsts
add
add
mov
mov
push
jmp
dec
fs
fwait
outsl
push
mov
add
aas
jge
sub
aam
popa
add
inc
add
mov
setb
aad
add
fwait
jmp
dec
add
shlb
lea
add
add
cmc
fs
xchg
jb
add
add
add
mov
add
shll
xchg
fstl
int3
clc
mov
add
clc
and
leave
and
or
add
clc
mov
aam
sti
loope
mov
push
es
dec
ss
inc
adc
jmp
and
dec
ljmp
aaa
mov
add
jbe
in
xlat
mov
or
clc
dec
arpl
add
cmp
add
mov
loop
cmp
mov
mov
add
push
sar
cmpsl
clc
pushl
add
fwait
jmp
or
aaa
pushf
je
add
or
clc
cmpsl
clc
or
xor
add
push
add
imul
inc
add
dec
pop
clc
jns
scas
in
or
jmp
and
lea
clc
push
add
shlb
cmp
loope
jp
clc
xbegin
push
cwtl
into
cmp
insb
test
sar
clc
pop
scas
adc
add
add
fsubl
add
je
clc
sub
mov
pusha
add
push
add
fwait
jmp
lods
xchg
ficoms
test
stos
lods
dec
cmp
clc
repz
dec
popa
add
mov
add
sub
mov
cmp
lock
add
add
sub
add
add
add
cmc
xor
add
imul
ljmp
cmp
xchg
out
int
repnz
add
leave
daa
clc
xchg
jmp
lret
clc
dec
loop
ljmp
or
adc
add
cmp
ficoms
inc
add
cmp
clc
in
imul
add
sar
sbb
mov
push
add
enter
mov
fistps
pop
jge
mov
clc
mov
adc
add
clc
pop
lock
and
in
imul
push
lcall
incl
pop
ja
inc
clc
test
clc
jnp
clc
and
repz
stc
cmp
clc
cmp
leave
repnz
hlt
negb
sbb
add
clc
nop
cmp
mov
clc
sbb
add
add
add
add
sbb
clc
lcall
mov
add
es
aas
push
add
es
clc
popa
add
push
add
sar
int
jnp
jmp
jmp
aaa
push
dec
push
and
clc
cltd
mov
inc
add
inc
add
enter
sub
clc
pusha
add
xchg
sbb
scas
enter
cmp
add
sub
add
adc
add
add
add
and
std
xchg
cmp
jns
clc
and
add
ljmp
add
cld
add
inc
fwait
jmp
test
outsl
sbb
fs
ds
aad
cmp
fdivrp
addr16
test
leave
sub
push
add
mov
cmp
decl
cmpsb
inc
add
and
cs
mov
cmp
cmp
clc
inc
add
adc
add
sub
scas
daa
clc
pop
fmuls
lods
xor
add
add
jns
clc
xchg
dec
xor
add
clc
rorb
clc
sbb
dec
popf
push
lods
jmp
or
ja
adc
add
add
ljmp
clc
adc
add
clc
gs
cmp
add
push
imul
pop
cmp
outsb
push
inc
add
adc
insb
dec
in
cld
xchg
das
dec
in
dec
jp
loope
mov
lret
out
ret
clc
cmpsl
clc
aas
jns
sub
clc
push
ja
pop
cmp
add
add
add
cmp
movzwl
fwait
jmp
xor
mov
clc
addr16
stos
mov
je
add
cs
sbb
add
clc
scas
int3
lods
popa
add
loop
jne
mov
add
add
or
fdivs
add
push
loop
lret
inc
clc
dec
cmp
cmp
cmp
add
mov
add
ss
cli
clc
sahf
cmp
jae
add
and
lock
add
clc
mov
int
clc
in
ficoms
add
xchg
mov
xabort
xbegin
movzwl
cld
push
ret
adc
clc
lret
add
inc
clc
add
add
jnp
adc
add
push
sbb
add
or
xchg
sbb
lea
dec
fs
fs
xbegin
add
fwait
jmp
test
hlt
xor
add
ret
add
imul
fisubrl
dec
cli
repz
loopne
enter
cmp
clc
outsb
in
jnp
mov
cld
push
ret
cmp
push
sar
fistpll
jmp
sub
pop
js
mov
push
add
and
sub
add
jnp
clc
sbb
clc
cmp
clc
xchg
fimuls
and
add
xor
add
insb
mov
cli
add
add
clc
push
xchg
add
add
in
xbegin
xlat
and
popa
add
xchg
dec
or
clc
mov
add
add
push
jle
in
std
pop
prefetch
or
movsb
clc
shl
and
add
out
sub
add
pusha
add
decl
jmp
push
cwtl
pop
into
add
mov
sub
add
add
clc
push
mov
fwait
jmp
add
sbb
xchg
mov
add
dec
add
dec
sub
sub
cmp
xor
add
mov
mov
clc
outsl
mov
clc
in
push
enter
mov
xor
add
pop
xchg
or
mov
sub
mov
cld
push
ret
data16
clc
dec
testl
repz
in
ds
and
add
add
dec
aad
push
pop
cmp
cld
dec
adc
add
add
add
inc
add
jp
lahf
dec
and
add
movsl
clc
push
add
jbe
add
sbb
in
jp
cwtl
mov
xchg
in
push
and
mov
dec
cmp
inc
clc
outsl
adc
add
xchg
push
add
sbb
or
jmp
insb
outsl
outsl
scas
sub
sbb
add
add
stos
mov
fldt
nop
lcall
cmp
inc
clc
arpl
add
add
jmp
jbe
int
cmp
xor
add
sahf
sbb
xor
sbb
sbb
sbb
test
jmp
pop
add
add
xchg
mov
xchg
xchg
outsb
fnstenv
add
pusha
add
pusha
add
mov
clc
inc
add
mov
mov
gs
loope
fildll
dec
jmp
sbb
fdivs
add
sub
or
xor
add
daa
clc
add
add
pop
clc
insl
sbb
clc
mov
cmp
clc
loopne
arpl
add
inc
add
adc
inc
add
adc
add
or
jle
fadds
add
sbb
clc
pop
pop
mov
clc
int
adc
add
clc
loope
out
outsl
push
ficomps
add
inc
cwtl
dec
aaa
xor
add
add
add
add
out
das
sub
add
aad
repz
add
add
inc
clc
push
clc
popa
add
setl
clc
mov
or
push
ret
pop
mov
push
add
lods
fdiv
add
add
jo
add
popa
add
lods
mov
xor
add
call
in
add
xchg
add
add
fnstcw
clc
mov
aam
clc
xlat
adc
clc
mov
xchg
fs
inc
add
arpl
add
mov
mov
add
and
outsl
fdivrs
clc
lahf
cmc
cmp
inc
add
sbb
pop
daa
clc
push
clc
and
lods
push
cwtl
cwtl
inc
add
cwtl
dec
cmp
add
dec
cmp
add
mov
cmp
clc
hlt
cmp
jmp
push
sub
mov
xor
add
clc
call
push
ret
push
mov
clc
stc
push
sub
push
add
jge
clc
jno
add
dec
sti
xchg
and
add
add
sarl
push
xor
add
add
push
add
cmp
dec
xbegin
push
add
inc
add
mov
sub
push
ret
mov
cmc
fidivrl
clc
pop
adc
add
add
test
or
add
movsl
clc
dec
and
add
add
pop
hlt
aam
add
cmp
test
pop
pushf
pop
scas
aas
push
add
out
lahf
adc
add
adc
add
clc
inc
add
adc
add
fistps
js
sti
and
add
add
ja
clc
pushf
xor
add
dec
add
add
std
sti
lods
mov
jmp
imul
mov
clc
lock
fmull
in
push
lea
fwait
jmp
aaa
push
insb
cmp
cmp
add
sbb
lods
fsubl
add
xchg
cli
ss
add
lock
ret
clc
mov
arpl
add
add
cld
push
ret
inc
adc
mov
pop
pop
fsubr
in
mov
in
xchg
jg
add
xabort
clc
popf
imul
add
clc
lret
mov
jg
mov
cwtl
into
rorb
call
sti
jbe
add
sbb
rol
clc
adc
add
add
sti
xor
sti
pop
clc
jle
xor
add
add
xabort
add
push
clc
mov
cmp
clc
outsl
js
add
lahf
mov
cmp
cmc
xchg
mov
pop
clc
sahf
cmp
add
push
add
gs
mov
push
call
jmp
lea
rorl
test
sbb
add
add
fstpl
clc
mov
add
add
inc
and
add
add
add
add
clc
jle
mov
clc
ret
mov
clc
insl
dec
mov
testl
jno
add
add
clc
ja
nop
insl
movsb
clc
inc
clc
inc
add
leave
add
add
push
sar
push
pop
fwait
jmp
inc
add
adc
sar
cltd
cmp
clc
daa
clc
mov
mov
std
js
mov
sbb
jmp
jmp
sbb
push
pop
jp
nop
in
and
add
leave
mov
add
jo
add
add
inc
clc
into
mov
xor
add
jl
sbb
jmp
fs
add
cld
push
ret
fs
icebp
cs
clc
cmp
clc
mov
clc
popf
ja
jecxz
or
lods
dec
cmp
test
sbb
clc
pusha
add
sbb
and
add
add
dec
enter
mov
clc
int3
aam
xchg
jno
add
clc
jmp
add
repnz
pop
mov
and
add
xchg
sbb
add
inc
add
ret
clc
xchg
call
add
cmp
cmpsl
clc
push
js
jmp
add
clc
push
add
addr16
mov
xor
add
add
sar
adc
add
clc
sahf
loop
outsl
add
add
fdivl
add
dec
push
push
fwait
jmp
sbb
pop
add
mov
lea
sbb
jmp
jno
push
mov
jl
dec
dec
sar
push
xor
add
mov
clc
ss
lock
ljmp
add
inc
cmp
add
lock
gs
inc
clc
xor
add
stos
mov
add
pop
rcrl
clc
add
add
add
add
gs
sti
or
outsb
mov
pop
int3
lods
inc
clc
lods
ret
clc
testb
div
jne
clc
je
lea
movsb
clc
loop
sbb
add
jns
push
add
icebp
int3
pop
jg
pusha
fwait
jmp
sub
push
fwait
jmp
or
pop
sub
jle
clc
push
into
out
hlt
lcall
add
add
test
jmp
adc
add
clc
and
sahf
pop
clc
lock
adc
add
and
clc
mov
add
push
add
or
inc
clc
xabort
clc
and
add
add
loope
mov
clc
clc
js
push
add
sbb
add
cld
push
ret
sub
sbb
push
inc
clc
gs
aad
addr16
jno
add
ret
xlat
inc
clc
xor
add
sahf
test
call
add
xor
iret
jecxz
lcall
xor
add
sbb
add
incl
cmp
push
clc
jge
clc
pop
cs
out
rcl
mov
clc
push
clc
rclb
add
insb
popa
add
lods
and
inc
clc
insl
push
or
clc
sahf
jne
mov
add
cmp
clc
push
add
dec
sahf
in
pop
ds
mov
cld
push
ret
pop
fiaddl
add
or
add
or
pop
push
jge
clc
xor
sub
ficoml
lods
cmpsl
clc
cmp
out
int
inc
clc
jp
add
push
add
into
cmp
clc
pop
adc
add
add
lea
lret
lret
lods
jnp
add
mov
ret
xbegin
mov
fwait
jmp
imul
add
add
add
or
clc
xlat
or
add
pop
divl
clc
imul
daa
clc
addr16
sar
clc
cwtl
leave
jnp
add
data16
push
mov
sbb
add
std
call
addr16
fimull
clc
int
inc
add
dec
in
sub
sar
xabort
add
loopne
xor
add
clc
lcall
clc
sahf
pop
jno
add
add
add
sub
mov
push
ret
push
push
pop
sbb
clc
inc
clc
gs
popa
add
mov
mov
add
add
inc
add
mov
jne
clc
jb
add
clc
mov
jecxz
sti
lods
pop
addr16
jmp
adc
add
lcall
in
push
sub
add
test
sub
add
add
or
clc
sub
add
fistpl
aaa
push
pop
hlt
mov
cmp
clc
xchg
sar
aaa
lea
sbb
lea
clc
test
clc
cmp
sar
xchg
mov
clc
int3
inc
clc
lcall
clc
daa
clc
mov
and
add
in
scas
and
add
add
jnp
clc
mov
test
hlt
inc
clc
and
add
or
and
add
addr16
adc
add
clc
vxorps
jnp
mov
xbegin
neg
fs
jns
jb
add
clc
dec
cmp
clc
xor
add
mov
xchg
or
jl
add
fistpl
call
jb
add
aam
xchg
inc
add
das
adc
cmp
pop
std
push
ror
fwait
jmp
xor
xchg
gs
jl
cmp
push
fs
add
add
sbb
cmp
clc
jmp
push
push
fwait
jmp
sub
ja
sub
add
clc
and
add
add
repnz
add
clc
adc
add
clc
adc
clc
movsb
clc
jmp
add
add
sub
clc
js
lods
ret
clc
push
sub
inc
add
cmp
in
and
add
outsb
std
roll
jp
lods
fwait
jmp
and
or
int3
sbb
sbb
add
push
cmp
clc
push
lahf
insl
jb
add
imul
add
jmp
fwait
jmp
sub
clc
addr16
xor
add
rcrb
sbb
mov
cmpsl
clc
enter
push
add
cmp
std
sahf
push
jp
clc
jle
xchg
clc
sar
add
cld
insb
in
xor
cmp
add
xor
add
add
loop
rorb
pop
clc
sar
lahf
lret
add
add
gs
sahf
mov
add
mov
add
sbb
fisubrs
int
hlt
in
xor
clc
adc
add
inc
add
push
jno
add
pop
adc
clc
mov
push
add
cmp
xchg
call
add
scas
jl
cmp
add
fucomi
std
jg
add
xor
sbb
add
gs
cmp
jmp
outsb
mov
add
dec
sub
fbld
clc
popf
sahf
lods
inc
clc
outsl
xabort
clc
in
push
add
inc
add
decl
cltd
call
inc
inc
add
add
add
clc
es
add
sbb
data16
inc
add
stc
sbb
fmulp
pop
testl
add
add
add
pop
pop
pop
clc
jg
cmc
cmp
out
pop
push
add
cld
push
ret
test
clc
shll
add
add
xchg
sbb
out
mov
xor
add
sbb
lcall
inc
clc
faddp
clc
xchg
mov
das
mov
iret
inc
add
mov
mov
xchg
mov
out
pop
jns
je
add
mov
clc
add
add
movsb
clc
sahf
adc
add
and
clc
push
add
mov
cmp
sbb
sti
fwait
jmp
andb
add
push
clc
pop
popa
add
sbb
add
push
mov
cmp
push
rclb
mov
fwait
jmp
or
andb
hlt
fiaddl
jecxz
dec
popf
jge
clc
clc
push
xchg
inc
add
stc
jecxz
sub
fwait
fwait
mov
adc
add
and
in
push
ret
dec
push
pop
push
cmp
ljmp
add
clc
push
add
or
es
scas
js
pusha
add
and
push
add
cmp
movsb
clc
push
aam
inc
add
or
nop
inc
add
mov
jmp
fwait
jmp
push
pop
outsl
or
clc
mov
jbe
clc
in
cmc
pusha
add
fdivl
add
aas
xor
add
sarb
push
push
add
add
sti
ja
cltd
pop
sub
clc
inc
add
sbb
in
mov
add
add
and
add
add
add
repz
add
clc
xchg
call
add
mov
clc
dec
xor
add
das
imul
jno
add
aaa
jle
sar
shlb
sub
add
xchg
or
add
mov
sar
shll
mov
add
xor
cmp
fcom
sbb
jecxz
std
es
inc
clc
mov
lods
mov
clc
data16
pop
loope
cmpsl
clc
clc
and
add
clc
call
cmp
aaa
pop
mov
loop
insb
pop
outsb
jbe
cli
adc
add
add
gs
xchg
mov
add
cs
dec
adc
add
cmp
mov
mov
fwait
cmp
clc
ja
scas
sub
lcall
test
adc
add
add
addr16
cmp
push
add
and
sub
clc
mov
dec
jno
add
add
and
add
sar
add
in
fstpl
jg
std
pop
nop
mov
add
push
clc
dec
inc
add
scas
ror
lret
mov
cs
add
cld
mov
ss
add
or
add
clc
mov
clc
fs
pushl
cld
push
ret
je
js
out
addr16
push
add
mov
clc
divb
add
je
dec
xor
add
add
clc
das
xor
add
clc
fwait
in
nop
push
and
add
add
lret
push
fstps
jbe
clc
mov
or
add
add
adc
add
add
fsubl
clc
push
and
add
clc
addr16
mov
add
in
or
add
sahf
xor
clc
push
test
mov
fwait
jmp
jp
scas
gs
cwtl
xor
sbb
clc
repz
clc
data16
bound
add
push
add
push
fstl
dec
enter
test
ss
add
incl
negl
add
imul
in
add
add
add
dec
adc
clc
stos
push
jne
and
add
insb
jecxz
cmp
add
cmp
add
add
icebp
sbb
inc
clc
mov
add
mov
pop
clc
ds
clc
jecxz
mov
popa
add
jnp
outsb
mov
push
ret
aas
adc
add
dec
add
mov
fwait
xbegin
int3
mov
clc
clc
cs
add
mov
fwait
jmp
fs
das
pop
adc
add
mov
inc
clc
fmulp
inc
clc
adc
add
clc
pop
dec
push
dec
adc
add
push
clc
jne
mov
jmp
xlat
sbb
add
add
xchg
stos
add
js
clc
jno
add
fstpt
stc
pop
clc
ja
clc
movd
add
call
jmp
or
xchg
cmp
jbe
push
lcall
add
inc
add
cmp
adc
add
loopne
jp
je
jmp
mov
loope
push
push
fwait
jmp
sbb
add
cmp
push
stc
gs
mov
cld
hlt
jmp
aaa
popf
rcrl
push
clc
lret
cld
inc
clc
popf
jnp
pop
clc
mov
add
fwait
jmp
pop
sub
lods
lock
push
es
fadds
jnp
mov
jbe
sub
push
cmp
cld
push
ret
mov
add
adc
mov
push
sub
add
notl
add
pop
dec
stos
aas
jbe
push
add
fsubrl
test
add
adc
add
and
add
cld
push
ret
sub
mov
add
mov
clc
int
mov
clc
push
ret
clc
scas
rcl
ljmp
push
clc
lahf
xor
js
rclb
pop
fisubs
add
cmp
add
lods
inc
clc
dec
into
mov
out
xor
add
ljmp
inc
clc
xchg
xchg
ret
clc
mov
clc
test
xchg
std
push
mov
clc
fdiv
and
add
jbe
sub
or
add
addr16
fsub
clc
daa
clc
in
std
push
pop
js
add
addb
cmp
adc
add
ret
clc
mov
mov
imul
mov
scas
xchg
fwait
jmp
insb
and
or
pusha
add
xchg
cmpsb
clc
mov
clc
lods
out
hlt
cmpsl
clc
push
add
dec
mov
jmp
adc
loope
adc
add
add
add
pop
iret
mov
jne
fwait
jmp
push
imul
add
add
test
mov
add
clc
sub
pop
leave
xchg
pop
adc
add
cmp
add
add
and
push
in
push
ret
push
xor
pop
out
add
add
popf
jle
fmuls
push
push
cld
push
ret
sub
ljmp
ds
into
pop
jno
add
rorl
cld
push
ret
lods
and
ss
insl
push
jmp
mov
add
mov
lock
inc
clc
xlat
mov
clc
jecxz
enter
add
adc
push
mov
add
repnz
cmp
clc
mov
cmp
or
mov
jmp
cmpsb
jno
dec
mov
sub
fwait
gs
xor
add
mov
cmpsb
clc
repnz
push
mov
clc
rolb
add
stos
popf
sar
insl
cmc
aad
mov
add
push
ret
sbb
xor
dec
xor
add
daa
clc
lahf
dec
pop
sub
add
jbe
add
cwtl
xchg
data16
mov
data16
imul
add
mov
add
push
mov
fwait
jmp
aas
sub
xchg
sti
xbegin
clc
mov
mov
clc
xor
in
insb
mov
and
mov
add
pop
pop
sbb
jno
add
jne
cmp
imul
clc
out
cltd
mov
clc
or
push
lea
ret
push
push
lods
or
add
jl
add
shl
fisubrl
inc
clc
sbb
clc
fs
fsubrs
and
add
clc
pop
push
add
dec
push
add
mov
add
or
push
mov
add
mov
xchg
vunpcklps
add
sbb
mov
cltd
cwtl
jbe
clc
insl
cwtl
in
test
inc
add
arpl
add
dec
rcrb
xor
add
push
repz
sub
cmp
mov
clc
ret
or
sbb
xchg
scas
mov
icebp
lcall
add
fs
mov
jmp
inc
add
mov
pop
push
jle
sbb
dec
xor
add
xchg
dec
outsl
xbegin
sar
clc
push
add
fwait
jmp
pop
cld
pop
fistpll
jecxz
or
jmp
mov
inc
add
cltd
imul
ds
clc
push
add
jae
add
cmc
mov
add
data16
xchg
aam
add
or
sgdtl
add
xchg
imul
fadds
clc
repnz
jne
mov
mov
lcall
add
mov
fstl
loopne
cmpsl
clc
mov
clc
decl
jmp
inc
add
je
sub
add
clc
or
out
in
rorb
cmp
add
push
clc
fwait
lea
mov
add
ljmp
sar
or
jmp
nop
lods
pop
mov
aam
clc
adc
add
dec
push
adc
jo
add
add
add
fistl
push
add
xchg
xor
add
pusha
add
inc
add
in
jae
add
add
adc
add
cmpsl
clc
rclb
add
xor
add
mov
cli
movsl
clc
fnsave
clc
enter
ss
pop
push
add
int3
in
fldl
push
add
pop
clc
mov
popa
add
push
xor
cld
push
ret
cwtl
or
push
add
outsl
sbb
mov
push
ret
push
inc
iret
mov
mov
jge
clc
and
add
xbegin
jb
add
adc
add
cmp
and
mov
clc
jns
add
fcmovnb
clc
imul
data16
stc
mov
sbb
add
testl
push
xor
add
add
push
call
cld
push
ret
xor
add
add
std
xor
add
add
push
inc
add
ds
dec
pop
test
stc
push
add
mov
or
sub
cmpsb
clc
data16
xchg
and
add
ds
sbb
clc
and
dec
clc
push
add
pushf
out
or
mov
leave
out
jae
add
xchg
and
add
cmp
add
dec
mov
test
push
add
cld
clc
rolb
add
clc
aad
add
and
add
pusha
add
ja
sbb
jmp
pop
nop
push
nop
inc
stc
mov
clc
sub
clc
in
jecxz
pop
sub
xchg
loope
sub
push
add
push
mov
into
add
add
test
add
fwait
push
add
fwait
jmp
cmp
nop
scas
or
push
push
push
add
mov
jmp
sahf
es
xor
sub
xchg
test
adc
mov
adc
add
and
add
mov
or
clc
gs
jno
add
leave
movsl
clc
mov
movsb
mov
scas
cwtl
adc
gs
data16
jmp
add
dec
loopne
mov
jecxz
sahf
insb
xchg
dec
stc
inc
add
gs
inc
add
mov
cmpsl
clc
adc
add
add
clc
push
add
jge
clc
mov
clc
pop
add
add
cmp
inc
add
mov
pop
bound
add
add
jne
sub
and
add
clc
pop
mov
ficoms
mov
cmp
popf
stos
xchg
pop
adc
add
add
pusha
add
push
add
in
add
mov
clc
out
cmc
push
aam
xchg
je
rcll
fstpt
cwtl
repz
mov
push
and
clc
xchg
je
mov
jg
pusha
fwait
jmp
sub
add
cmp
jb
add
pop
loope
pushf
negl
dec
cmp
clc
dec
es
push
stc
inc
add
xor
add
ja
mov
clc
sbb
fwait
jmp
cmpsb
sub
pop
sbb
mov
mov
loope
push
movzwl
fwait
jmp
es
fwait
loope
mov
push
test
fwait
jmp
mov
clc
bound
add
clc
pop
push
loop
fs
dec
leave
sar
or
add
pop
cmp
or
cs
sbb
cmc
lret
add
dec
pop
inc
clc
sbb
stc
push
add
hlt
sti
or
pushf
mov
inc
clc
leave
pop
clc
add
add
out
mov
clc
jb
add
sar
out
cltd
push
add
xabort
inc
add
lods
js
jnp
clc
sgdtl
add
sahf
and
clc
add
lret
clc
stc
je
clc
cmp
or
clc
xchg
fldl
mov
pop
adc
add
clc
test
data16
add
add
clc
jge
cmc
jo
add
fsubrs
ss
xchg
sahf
enter
jge
test
std
fnstenv
add
mov
xchg
out
add
add
add
add
dec
and
test
cld
push
ret
test
push
add
mov
add
into
je
lods
rcll
clc
mov
mov
clc
cmp
sbb
fwait
jmp
aaa
aaa
or
cmc
sub
clc
test
faddl
clc
dec
xchg
jnp
gs
jecxz
scas
ds
mov
clc
adc
add
add
repnz
add
loopne
or
add
gs
xor
add
add
clc
sar
dec
out
pop
ret
cmp
out
test
aad
clc
inc
clc
xor
add
jne
fwait
jmp
adc
add
add
lret
and
add
movsb
cld
push
ret
and
xor
clc
rcr
shl
clc
shlb
add
add
aam
clc
mov
in
dec
push
mov
divl
add
sbb
mov
mov
fwait
jmp
subb
outsl
ret
clc
data16
and
add
sub
gs
hlt
sbb
call
fwait
jmp
sub
sub
clc
into
scas
mov
clc
jb
add
clc
mov
imul
add
dec
adc
add
sbb
dec
adc
add
xor
add
add
add
xor
add
push
jns
test
ret
push
add
fwait
jmp
pop
pop
inc
clc
adc
add
pop
sub
jmp
jecxz
sub
push
clc
mov
add
decl
add
clc
or
cmp
pop
sar
clc
out
xchg
push
add
test
mov
jg
push
sbb
clc
insb
mov
clc
into
inc
add
mov
sbb
stos
mov
add
add
dec
jne
fwait
cltd
xchg
pop
clc
or
clc
mov
clc
xchg
push
dec
mov
clc
daa
clc
ss
out
in
sub
add
xchg
sub
clc
imul
add
add
xlat
cld
cmp
add
aad
jg
rorl
clc
cmp
add
add
jl
scas
pusha
add
xor
add
pop
mov
pusha
add
arpl
add
mov
add
or
pop
clc
push
clc
cmpsl
clc
sti
mov
mov
aam
push
add
pop
sti
push
add
inc
clc
sar
dec
movsl
clc
fs
xor
add
cmp
cs
clc
xor
add
inc
add
test
clc
inc
clc
fs
or
clc
xor
add
add
add
add
lcall
add
add
mov
add
enter
add
jae
add
clc
adc
fwait
jmp
and
push
shlb
test
shr
adc
add
clc
test
jecxz
in
cld
pop
js
clc
cmp
sbb
clc
cld
fsubrs
negl
int3
rcrl
fwait
adc
add
mov
leave
mov
ds
cs
xchg
and
add
add
aas
mulb
add
aam
daa
clc
adc
add
dec
outsl
push
add
jp
jne
fwait
jmp
and
add
clc
cli
pop
repz
mov
je
pop
sbb
sbb
add
cmp
arpl
add
pop
mov
cmc
jp
pop
fwait
jmp
aas
scas
xor
add
add
adc
sub
and
cmp
dec
fwait
sub
das
push
es
push
add
xbegin
add
lock
add
cwtl
sbb
cmp
add
out
clc
mov
or
add
add
inc
clc
cmp
int3
in
push
add
push
jge
pop
clc
mov
add
xlat
xlat
sahf
loopne
xbegin
dec
popa
add
pop
arpl
add
imul
clc
daa
clc
mov
cmp
clc
mov
dec
fimull
add
add
addr16
or
test
cld
push
ret
ja
outsl
mov
xor
add
add
adc
add
pop
cmp
clc
inc
add
loop
outsb
jns
pop
clc
sbb
cmp
jmp
xor
adc
xchg
ret
clc
cmp
cmp
pusha
add
jge
bound
add
jmp
add
clc
sbb
clc
pop
pushf
cld
in
or
mov
pushl
cld
push
ret
cwtl
push
sub
xor
add
bound
add
dec
inc
clc
lea
add
sahf
in
and
sbb
cmp
pop
clc
pusha
add
push
xor
fwait
jmp
sahf
push
sub
xchg
popf
std
pop
stc
mov
add
jbe
bound
add
daa
clc
mov
jno
add
push
ja
mov
aam
inc
add
ljmp
fwait
jmp
xorb
or
add
in
icebp
imull
xor
add
add
clc
xlat
pop
pop
sar
add
frstor
lret
outsl
push
or
inc
add
sub
daa
clc
es
outsl
test
add
mov
data16
xor
add
add
xchg
cmp
mov
or
jns
clc
jbe
clc
std
adc
add
out
push
out
push
and
add
or
mov
fwait
jmp
sub
and
mov
add
into
push
clc
clc
mov
sbb
clc
xchg
aad
cmp
cmc
lods
dec
imul
push
or
clc
adc
add
mov
test
sub
clc
and
add
add
jg
push
das
lret
cltd
sti
loop
mov
iret
test
jne
add
aas
imul
rcl
cltd
push
xchg
sbb
mov
div
fwait
jmp
sub
scas
and
add
test
jns
jg
sub
cld
push
ret
scas
fs
sbb
sbb
clc
mov
push
add
sahf
push
mov
add
fwait
jmp
sub
jg
int3
fstl
add
dec
cmp
push
add
cld
out
sbb
clc
xchg
adc
add
add
inc
fwait
jmp
adc
clc
xor
clc
shl
clc
cwtl
or
add
iret
push
in
cwtl
push
add
iret
shlb
add
cmp
add
mov
xchg
add
add
loopne
cmp
clc
inc
add
gs
pop
mov
inc
clc
addr16
or
add
adc
add
addr16
cld
adc
clc
in
jmp
push
add
pop
xchg
cmc
mov
data16
cwtl
cmp
es
cld
daa
clc
sti
jl
and
ljmp
mov
inc
add
dec
xor
add
add
pop
and
add
test
cmp
jg
add
popf
es
ret
clc
sar
push
lea
fwait
jmp
movsb
push
mov
inc
clc
cmp
dec
push
leave
rcrl
nop
cmp
xchg
dec
sbb
out
mov
pop
lock
mov
clc
decl
test
sbb
add
incl
clc
or
clc
test
ret
clc
clc
pop
hlt
or
sub
adc
add
xabort
add
aas
pop
pop
aaa
out
add
add
add
icebp
cmp
add
xor
add
mov
clc
test
fwait
test
aaa
sbb
test
push
add
fwait
jmp
popf
aas
stc
xchg
xabort
mov
inc
clc
out
xor
push
in
shlb
fs
jg
xchg
inc
add
and
dec
add
add
add
pop
mov
hlt
add
clc
push
add
cli
add
add
ret
clc
xchg
jl
add
add
xbegin
jae
add
aam
add
out
clc
aad
pop
enter
pushf
insl
in
je
clc
lods
shrl
sbb
mov
mov
movsb
test
cltd
cmp
sbb
clc
cmpsl
clc
in
or
mov
add
repz
popf
inc
add
nop
sar
pop
clc
mov
add
data16
xchg
cwtl
cld
inc
add
dec
mov
hlt
movsb
clc
outsb
pop
int
mov
pop
rorl
add
pop
cmp
clc
jge
out
push
clc
pop
aam
push
clc
mov
sti
cmpsl
clc
pop
fisubrl
jb
add
mov
sub
cmp
clc
out
mov
sbb
sub
pop
cld
push
ret
fwait
add
clc
cmpsb
clc
test
insb
adc
add
clc
scas
jge
clc
or
lcall
add
cmp
jge
add
fwait
jmp
fs
sub
add
ret
out
sar
add
aad
ret
imul
cmp
and
add
add
clc
pop
sarb
loope
jmp
pop
push
xor
clc
outsl
inc
add
daa
clc
rorb
add
dec
das
push
cmp
sahf
mov
into
ja
clc
jp
push
fwait
jmp
push
xor
popa
sub
xchg
and
add
adc
xor
push
add
aam
clc
cld
pop
jecxz
es
xor
add
pop
fwait
jmp
dec
or
insb
test
mov
lea
cld
push
ret
fs
pop
inc
add
add
add
addr16
xchg
mov
add
xbegin
mov
fdivr
incl
movsb
test
pop
clc
adc
add
jnp
ss
mov
scas
and
add
scas
scas
add
add
add
add
add
add
add
mov
cld
push
ret
fwait
xchg
lods
sub
repz
incb
add
xabort
test
je
pusha
add
xor
add
addr16
es
es
daa
clc
pop
xchg
pop
mov
xlat
mov
outsb
fs
pop
jo
add
dec
fwait
jmp
inc
add
add
iret
out
add
add
mov
clc
sub
inc
clc
lods
mull
clc
popf
xbegin
cmp
cmp
add
fisttpl
adc
mov
addr16
mov
clc
push
pop
fs
push
add
pop
jne
in
mov
imul
ret
add
add
fwait
or
ret
clc
out
loop
test
mov
fwait
jmp
popa
mov
lods
xchg
pop
inc
add
scas
sub
or
clc
mov
jnp
mov
fwait
jmp
outsl
cmp
bound
add
sti
cmp
clc
pop
mov
cmp
ljmp
cmpsl
clc
call
jns
sub
adc
add
data16
xchg
mov
add
sub
cld
push
ret
xor
aas
jge
mov
arpl
add
add
and
add
clc
inc
clc
jbe
shrb
sub
jg
je
clc
repnz
jb
add
clc
js
cld
mov
sbb
push
ret
mov
add
add
add
fwait
jmp
add
cmpsl
clc
push
in
jnp
sbb
fwait
jmp
pop
nop
test
scas
shll
fs
mov
inc
clc
xor
add
jae
add
add
push
add
inc
fwait
jmp
dec
xchg
push
inc
sub
gs
sar
clc
inc
clc
or
gs
sbb
clc
fdivrl
jbe
clc
cmp
cwtl
mov
push
fwait
jmp
imul
add
add
loope
loope
lret
gs
dec
xchg
sbb
sub
ja
jmp
add
mov
sub
inc
clc
mov
add
or
in
jg
sbb
cmc
mov
clc
movsl
clc
sahf
ja
add
add
pop
test
add
hlt
mov
loope
lods
loop
pop
clc
sub
clc
nop
fdivs
add
loop
adc
add
clc
dec
mov
clc
xchg
lock
jno
add
mov
add
scas
xchg
mov
add
loope
inc
add
pop
adc
add
lock
clc
arpl
add
add
inc
clc
stc
push
clc
cmp
add
jp
cmpsb
clc
xchg
sar
clc
push
add
push
add
jp
lock
lods
or
lock
add
add
add
fwait
jmp
dec
sub
dec
sbb
lahf
mov
clc
ds
mov
clc
icebp
popa
add
out
rcl
mov
add
jbe
clc
push
push
repz
pop
ds
jb
adc
add
add
add
inc
out
fwait
jmp
push
imul
loopne
cmp
in
test
lock
add
jecxz
lock
mov
ja
clc
clc
inc
clc
pusha
add
test
clc
inc
clc
add
add
rcrl
fcoms
clc
push
leave
rcll
fwait
jmp
sbb
sub
jae
add
std
dec
leave
push
add
xchg
or
add
and
lods
test
addr16
daa
clc
add
add
clc
sub
clc
psubw
add
sar
clc
hlt
xor
and
add
jbe
clc
mov
hlt
push
push
sub
add
jp
ror
inc
clc
aas
sub
jge
dec
aas
sbb
dec
dec
push
xchg
sub
add
mov
xchg
or
clc
mov
scas
dec
pop
push
lcall
push
lret
xor
add
push
xor
add
xchg
je
lods
ror
sub
add
mov
test
xchg
test
repnz
lock
mov
xor
add
add
out
inc
clc
repnz
insl
jno
add
in
push
jge
jmp
movsb
test
push
push
loope
decb
xor
add
es
jecxz
jge,pt
add
jns
pop
mov
clc
inc
clc
lcall
clc
cltd
ret
clc
out
xchg
xchg
dec
stos
es
popa
add
and
xor
xor
add
add
adc
inc
clc
leave
sbb
clc
dec
clc
leave
test
xchg
xor
sgdtl
add
clc
cltd
push
clc
mov
clc
inc
clc
sbb
lods
inc
clc
or
add
cmp
add
xbegin
jmp
xor
xor
add
add
add
fld
clc
sar
add
jo
add
nop
std
add
add
clc
cmp
jmp
pop
jae
add
out
test
xor
add
xlat
mov
inc
add
fs
xchg
dec
mov
add
fwait
jmp
stos
fstl
xchg
pop
sarl
les
fwait
jmp
jno
repz
sub
add
test
insl
es
decl
jmp
pop
lea
aad
clc
js
clc
cltd
add
add
clc
mov
arpl
add
clc
data16
pop
add
inc
clc
loop
inc
clc
xchg
dec
and
add
stos
cmp
push
sub
das
inc
popa
dec
imul
xchg
sbb
fcom
ds
xchg
jecxz
cli
xchg
mov
insb
push
add
push
clc
insl
jmp
fwait
jmp
xchg
pop
call
popa
add
xchg
and
add
add
pop
iret
mov
add
sar
cmp
sbb
mov
sar
mov
xchg
add
add
repnz
and
add
lods
int
pop
roll
add
add
jecxz
es
daa
clc
loope
mov
scas
jl
add
cltd
sub
add
clc
das
mov
enter
cltd
pop
xchg
data16
lods
add
leave
sbb
ror
dec
sub
insl
cmc
aaa
add
cmp
pop
cmp
insb
push
clc
pop
mov
adc
add
add
stos
lahf
cmp
ror
sbb
lret
cmp
and
add
adc
add
add
xor
add
add
imul
add
sub
add
sub
insl
xchg
pop
mov
adc
insb
inc
add
xbegin
add
push
add
cs
jnp
sub
clc
cs
mov
std
xchg
adc
cmpsb
clc
adc
add
jp
testb
add
mov
js
push
fnsave
mov
xor
add
je
fwait
jmp
mov
mov
sbb
add
add
add
pop
ds
jae
jmp
xor
je
add
fwait
dec
bndstx
enter
enter
xchg
cwtl
push
jmp
fwait
jmp
pop
je
push
mov
fwait
jmp
xor
cmpsb
or
divb
ss
add
arpl
add
cmp
add
push
clc
out
sar
jecxz
inc
add
jp
mov
mov
lock
ja
loope
stc
cmp
add
scas
mov
jb
jmp
insb
xchg
or
push
clc
ljmp
add
mov
or
cmc
xbegin
add
add
fisttpl
jb
add
add
add
mov
jmp
or
clc
insl
fwait
jmp
shlb
add
ficompl
mov
fwait
jmp
movsb
sub
xor
add
add
mov
push
clc
pop
insl
push
push
push
add
repz
clc
ss
idiv
fcmovnu
add
add
repz
jmp
push
jno
mov
mov
orb
add
sub
clc
jnp
clc
mov
sahf
and
add
add
inc
clc
aam
loopne
pop
jns
clc
rclb
clc
adc
add
add
add
shrb
mov
sbb
incl
or
mov
pushl
rcrb
ljmp
popaw
test
shll
mov
jl
stos
pusha
add
jb
add
cld
jbe
and
add
inc
add
push
add
pop
pop
cmpsb
clc
jno
add
or
add
mov
fwait
jmp
push
or
clc
mov
xlat
dec
xor
add
clc
leave
std
aad
push
adc
add
das
inc
add
mov
pop
pushf
cld
ret
test
clc
mov
clc
ret
clc
arpl
add
mov
aam
psubb
mov
test
add
ja
add
bound
add
bswap
aas
jns
jns
push
push
ret
cwtl
sahf
pop
cmp
xabort
or
in
add
jns
push
or
add
pop
inc
add
adc
push
jge
fcomi
mov
mov
xabort
clc
decl
jmp
sub
mov
daa
clc
mov
add
xor
add
clc
push
push
add
add
pop
pushf
imul
jge
mov
fwait
jmp
jg
sbb
mov
cld
push
ret
dec
or
roll
add
xchg
sub
lock
jae
add
repz
push
ret
sub
sub
add
jecxz
sub
stos
or
popf
xor
add
clc
adc
add
jmp
clc
xchg
data16
inc
add
adc
add
dec
das
jbe
std
lahf
mov
push
loop
popa
add
mov
int
or
add
add
add
add
outsl
insb
movsl
clc
inc
add
inc
clc
cmp
clc
cs
jnp
incl
and
or
arpl
add
clc
insb
or
mov
fldcw
shl
push
fs
aas
jno
add
data16
in
xor
clc
mov
jmp
cmp
push
pop
jae
add
push
cld
push
ret
pop
push
push
sub
inc
add
mov
std
push
inc
add
dec
es
fmul
or
clc
movsl
clc
test
fs
lcall
add
or
imul
clc
sti
shll
clc
test
out
bound
add
adc
dec
cmp
sub
add
dec
popa
add
and
add
daa
clc
or
ffree
clc
cmp
cmp
sar
clc
sbb
jnp
clc
and
in
lods
movsb
clc
dec
sbb
clc
aad
js
popf
sbb
mov
daa
clc
push
add
mov
lcall
clc
lea
clc
pop
aas
or
adc
add
add
cld
push
ret
add
ret
hlt
popa
add
cmp
jle
scas
clc
dec
stc
add
add
clc
or
clc
inc
clc
lret
mov
clc
or
movsb
clc
test
sahf
outsl
push
not
inc
add
movsb
sub
add
push
add
stos
jmp
add
xor
add
add
xor
add
adc
add
dec
lcall
jmp
pop
lea
pop
adc
jmp
popa
lods
sub
add
inc
clc
test
clc
cmp
in
inc
add
jbe
pop
incb
xbegin
dec
cmp
push
push
ret
mov
sbb
jge
adc
add
mov
fwait
jmp
pop
dec
imul
add
mov
jmp
fwait
jmp
or
sbb
sbb
push
ret
addb
into
push
jmp
cmpsb
aaa
inc
sahf
aaa
daa
clc
and
add
clc
push
sub
cmp
jb
add
mov
fwait
jmp
fs
sbb
addr16
mov
and
add
push
cld
push
ret
scas
adc
sbb
jmp
ja
sub
sub
sbb
sbb
cmp
jnp
nop
inc
add
and
add
mov
js
lcall
jp
lea
xbegin
jp
clc
and
add
add
xchg
sub
clc
loop
adc
add
xabort
clc
push
jb
add
pop
mov
test
pushl
cld
push
ret
mov
imul
or
rcll
add
clc
adc
add
add
cmp
movsb
clc
add
add
mov
sar
jge
add
fnstenv
rclb
mov
inc
add
adc
add
clc
cltd
mov
rcrl
sahf
xchg
fsubrl
cmp
push
push
xor
fwait
jmp
je
push
push
outsb
xabort
push
jnp
clc
sub
adc
add
clc
cmp
cli
jne
clc
xor
add
add
add
add
jmp
add
mov
clc
mov
clc
cmp
clc
or
clc
fadds
add
ja
xbegin
clc
int3
dec
adc
clc
sbb
clc
lahf
stc
xchg
dec
sbb
cmp
add
data16
aaa
aam
mov
clc
xchg
cld
cltd
roll
jno
add
add
rcrb
clc
mov
fldt
mov
add
push
fidivs
add
jmp
cmp
xor
add
pop
and
push
add
cmp
add
add
xchg
pushf
add
add
in
cs
or
clc
stc
pop
outsb
push
ret
sarl
clc
push
add
fwait
jmp
push
fwait
scas
arpl
add
arpl
add
gs
pop
sub
pop
cmp
inc
add
adc
add
in
out
nop
inc
add
xchg
cmp
ljmp
call
add
jg
scas
stos
jnp
das
inc
clc
int3
sub
add
lock
mov
clc
clc
call
xchg
call
lcall
xchg
dec
cmp
into
jns
fwait
xor
add
jmp
hlt
fcoms
cmp
add
add
sarb
test
call
fwait
jmp
fwait
outsl
xchg
js
clc
lods
add
dec
das
inc
add
notl
add
clc
ffree
clc
cmc
fbld
clc
inc
clc
in
mov
lcall
clc
adc
add
loope
ret
clc
mov
add
adc
add
test
cmc
lahf
arpl
add
dec
mov
xchg
push
push
ret
ja
push
add
cmp
lcall
clc
cmp
outsb
mov
mov
cltd
jmp
pop
cmpsl
clc
dec
mov
out
or
mov
mov
clc
sar
clc
stc
inc
clc
das
popa
add
dec
inc
add
fmull
jecxz
testb
sub
inc
add
mov
add
faddl
add
pop
in
sub
mov
and
add
clc
xlat
mov
sahf
pop
push
add
adc
out
ss
jnp
and
add
add
jle
int3
scas
push
clc
cli
pop
add
add
clc
cmp
mov
ss
lcall
inc
sub
popa
add
cmp
jmp
clc
adc
add
jno
add
jp
add
je
and
add
mov
dec
frstor
pop
fwait
jmp
dec
sub
jp
cmp
pop
std
imul
xabort
mov
add
ds
aam
clc
aam
add
dec
mov
inc
clc
stos
lret
stc
mov
xor
add
scas
push
mov
sar
push
add
add
out
cmp
clc
arpl
add
add
fstpt
add
pop
outsb
sar
cmp
dec
out
cmp
repz
pop
sub
add
add
fldt
add
sbb
arpl
add
add
push
or
add
clc
cmp
mov
in
xchg
push
xchg
jae
add
ljmp
add
cmp
clc
scas
bound
add
ljmp
adc
add
adc
add
mov
lods
movsb
clc
jmp
push
pop
es
push
clc
jo
add
mov
jbe
inc
add
scas
mov
cmp
clc
lods
cwtl
sub
loop
dec
fsubrl
push
clc
cmp
cmp
imul
clc
pop
push
add
femms
and
add
add
std
fisubs
cmp
popf
out
into
icebp
adc
add
mov
or
cmp
add
add
adc
add
outsb
push
inc
clc
lods
sub
ds
mov
inc
clc
push
add
aam
push
sar
cmpsl
clc
imul
xchg
ja
into
std
cmpsb
clc
cmp
add
fnsave
loop
pop
and
pop
pop
dec
dec
fwait
cs
popa
add
dec
loopne
daa
clc
jae
add
add
inc
add
lock
clc
popf
enter
ret
clc
out
iret
mov
sahf
cmp
clc
icebp
loop
cmp
nop
sub
cmp
jmp
pop
or
mov
clc
ja
xchg
hlt
cwtl
xabort
xor
and
and
sahf
mov
stc
pop
and
gs
enter
add
fsubrs
pop
clc
pop
pop
clc
pushf
adc
add
clc
decl
push
ret
cmp
clc
lock
push
ret
jno
scas
cwtl
das
divb
add
int
je
repz
add
add
dec
testb
or
fwait
push
clc
lret
clc
jmp
mov
cmp
cmp
add
mov
data16
cli
jns
pop
in
out
daa
clc
adc
add
add
incl
pop
and
jmp
lods
dec
sub
daa
clc
add
add
xor
add
add
add
int
clc
cmpsb
clc
mov
clc
inc
clc
mov
or
add
adc
add
xor
add
add
adc
add
add
in
frndint
pop
jg
and
add
mov
add
adc
add
cs
sbb
int3
and
add
clc
aam
clc
or
incl
jg
fwait
jmp
sub
cmp
fisttps
mov
fwait
jmp
dec
sub
add
daa
clc
xor
add
mov
clc
mov
test
ljmp
inc
push
push
xor
iret
rorl
pcmpeqb
clc
inc
add
cmc
or
jecxz
lock
sbb
clc
inc
clc
sar
clc
sar
inc
add
push
push
add
aas
jb
add
xor
add
cmp
clc
rclb
add
mov
dec
sub
mov
clc
xor
add
or
xabort
add
mov
xchg
pushf
scas
pop
sub
clc
loop
shlb
add
adc
clc
pcmpeqw
add
out
sub
das
into
jge
clc
xchg
ljmp
call
push
pop
mov
arpl
add
out
push
pop
hlt
daa
clc
add
repnz
aaa
fimull
clc
adc
add
insb
fnsave
test
mov
sbb
fists
clc
push
add
cltd
pop
adc
pop
mov
add
add
or
mov
fwait
jmp
sub
inc
nop
fcoml
add
bound
add
push
fwait
jmp
fwait
sub
pop
inc
clc
aam
jmp
jge
add
add
jnp
test
scas
cmp
add
fs
or
clc
ljmp
sub
xchg
sar
lea
mov
push
add
jmp
add
jns
call
add
adc
add
clc
sti
movsb
clc
inc
add
cmp
mov
mov
mov
pop
dec
pop
mov
inc
add
lret
cmp
jmp
test
icebp
mov
clc
ss
mov
clc
sub
mov
or
clc
cmpsb
clc
xchg
and
add
add
stos
mov
lods
aas
jl
cmp
push
aad
mov
call
xchg
jl
mov
repz
repz
je
mov
add
cmp
cmpsb
clc
ret
clc
lea
clc
xor
add
clc
xor
add
mov
sbb
jns
clc
mov
mov
xbegin
jl
clc
mov
popa
add
cmp
add
mov
pop
mov
aam
xchg
push
add
mov
clc
sti
xchg
outsb
and
add
jge
or
cmp
inc
clc
addr16
icebp
mov
lahf
lret
inc
push
or
out
test
pop
jp
insl
je
fsin
gs
movsl
clc
dec
mov
aad
dec
push
call
fwait
jmp
add
shll
clc
mov
mov
push
dec
inc
add
stc
icebp
xor
add
mov
clc
sbb
popf
call
inc
xchg
and
add
test
push
add
hlt
jle
sbb
add
adc
add
clc
jo
add
lods
out
and
add
inc
clc
xchg
xor
xchg
add
push
add
adc
add
add
add
jbe
and
add
popa
add
pop
data16
cmp
sub
arpl
add
clc
mov
jmp
clc
cmp
loop
pop
sub
jle
insl
mov
adc
adc
add
in
movsl
clc
addr16
jo
add
pop
mov
add
lahf
lcall
xchg
into
xor
add
clc
jno
add
pop
shll
clc
and
add
pushf
jecxz
adc
add
clc
or
clc
or
add
dec
adc
add
push
call
jge
mov
xchg
movsl
clc
shlb
jecxz
ja
jno
add
xor
add
push
xbegin
stos
mov
jmp
sub
loop
shrl
fbstp
add
enter
test
add
mov
int
clc
add
add
xor
add
clc
jnp
clc
xchg
inc
add
or
clc
in
loope
sub
in
repnz
scas
or
mov
lret
scas
cli
and
add
push
jl
clc
movsb
clc
call
jmp
pop
adc
inc
clc
mov
push
inc
clc
outsl
push
jl
testl
add
mov
inc
add
stos
push
add
xor
clc
aad
add
add
xor
add
adc
add
mov
add
fwait
jmp
sub
aas
mov
mov
mov
cld
push
ret
sub
mov
jae
add
add
lcall
add
cmp
rorb
cmp
clc
mov
pop
dec
sub
push
push
imul
pusha
add
in
push
add
pushf
sub
clc
mov
stc
iret
sbb
mov
shlb
clc
add
or
clc
sub
lods
cld
push
ret
sub
inc
cltd
xchg
and
add
clc
mulb
clc
or
add
and
add
clc
mov
add
push
decl
cmp
fwait
dec
faddl
add
jle
mov
add
ret
aas
ficompl
mov
fwait
jmp
push
pop
dec
ret
clc
pop
xchg
mov
fmul
mov
pop
mov
cwtl
cmp
mov
jmp
adc
push
and
test
cwtl
pusha
add
mov
sub
jmp
sub
nop
xchg
iret
xor
call
je
jns
popa
add
push
add
add
add
clc
sbb
push
repz
ljmp
mov
out
inc
add
xchg
enter
clc
xor
add
clc
cmpsb
clc
fcoms
clc
mov
clc
std
cmp
pop
insb
dec
push
fwait
dec
add
fisubrs
cmpsl
clc
jle
dec
scas
xchg
cmpsl
clc
xchg
ds
das
sub
mov
clc
jmp
out
mov
sub
add
add
clc
movsl
clc
and
add
lahf
jae
add
inc
add
lea
leave
in
cmp
clc
xlat
adc
mov
clc
mov
mov
test
movsb
clc
xbegin
fneni(8087
clc
imul
pop
add
xor
add
repz
clc
test
add
sbb
clc
and
jb
add
clc
ja
add
dec
inc
add
mov
add
jo
add
out
xor
add
and
jmp
xchg
sub
xlat
loop
adc
clc
sar
pusha
add
inc
clc
inc
add
cmp
insb
pop
mov
push
lcall
add
pop
xor
clc
xchg
inc
clc
in
int3
scas
scas
test
push
mov
cmpsl
lcall
add
xor
add
out
lcall
incl
lods
xchg
fmull
sub
add
mov
ret
fwait
jmp
sub
cmpsb
addr16
shll
rorl
xchg
jo
add
ss
add
mov
loope
and
add
rcrl
je
clc
xchg
ja
cmp
fwait
jmp
dec
mov
movsl
clc
in
fisttpl
cmpsl
clc
test
rcrb
clc
sar
clc
jp
clc
cmp
mov
push
jnp
jl
clc
stc
es
icebp
cmpsb
clc
clc
inc
clc
push
add
dec
mov
xchg
and
add
mov
inc
add
out
xor
add
fs
mov
inc
adc
jmp
es
mov
mov
dec
jg
pop
cmp
jmp
das
mov
das
inc
add
test
clc
or
cmpsl
clc
dec
or
insb
fsubl
add
int
mov
add
push
cmp
add
jl
clc
cmp
jg
clc
push
add
push
lock
popa
add
aad
clc
inc
add
mov
xchg
test
xchg
leave
xor
jmp
pop
push
arpl
add
add
mov
add
sub
clc
mov
add
stos
imull
clc
xor
add
add
xchg
mov
add
clc
xchg
mov
and
add
xlat
or
popa
add
dec
ljmp
add
add
add
lods
push
push
and
add
push
add
jmp
jne
fwait
jmp
jmp
sub
ss
mov
add
add
cmp
clc
inc
clc
add
insl
icebp
pop
test
scas
mov
clc
cmp
add
pop
in
sub
mov
dec
sub
mov
fwait
jmp
popa
cmp
popf
xchg
cld
mov
aaa
cmp
add
mov
xabort
xchg
pop
inc
add
ds
sub
and
add
xchg
xchg
jp
add
fwait
jmp
sub
sub
clc
in
je
add
add
push
in
push
ret
jp
icebp
ja
dec
pop
xchg
sbb
jmp
cwtl
fwait
and
popa
stos
push
push
add
push
outsb
xchg
cwtl
sub
or
clc
push
or
ret
jg
add
arpl
add
xlat
push
push
add
fwait
jmp
jge
incl
jne
fwait
jmp
sub
and
add
clc
pop
clc
out
pop
fdivs
add
mov
pop
test
clc
aaa
mov
clc
mov
cs
imul
add
add
fwait
jmp
cwtl
and
xchg
inc
add
mov
jmp
ja
sub
push
mov
add
add
movl
out
fs
jmp
add
jb
add
clc
lret
scas
pop
in
mov
repz
add
pop
inc
add
xchg
fsubs
add
or
clc
cmp
shl
clc
or
cs
add
push
pop
clc
stos
cmp
add
faddl
add
sub
mov
pop
adc
out
adc
jnp
clc
cmp
cmp
in
out
gs
ja
inc
add
mov
das
and
add
mov
sbb
add
lahf
sub
jb
add
popa
add
addr16
cmpsb
clc
xlat
mov
sub
clc
cs
mov
cmp
mov
test
xor
add
cmp
jle
push
add
mov
ljmp
pop
pop
and
add
jae
add
dec
push
fnstenv
call
je
ja
and
mov
pop
lcall
incl
add
cwtl
or
add
cwtl
cmpsb
clc
push
outsb
lea
add
repz
add
xchg
cmp
sbb
clc
scas
dec
push
xor
mov
clc
movsl
clc
pop
mov
add
rcrb
arpl
add
pop
cmp
ja
or
cwtl
push
add
cmp
data16
inc
add
insb
dec
xbegin
out
in
xor
add
xbegin
clc
add
add
clc
mov
vandps
in
ljmp
movsb
dec
adc
mov
icebp
insb
std
out
fnstcw
inc
data16
decl
and
mov
sar
clc
add
add
add
mov
or
sub
fwait
jmp
dec
and
cwtl
and
add
cld
push
ret
sub
add
adc
add
mov
clc
pop
mov
xchg
clc
jb
add
add
add
mov
sbb
clc
push
je
clc
fidivrl
sar
add
add
arpl
add
out
adc
add
cmc
lret
icebp
push
adc
add
mov
or
add
or
dec
inc
add
and
add
clc
pop
clc
push
pushf
nop
adc
pop
clc
cwtl
shll
inc
clc
lret
stos
fisttps
xor
add
pop
mov
jmp
nop
xchg
push
mov
cli
jg
data16
cmpsb
adc
add
clc
mov
and
add
nop
jne,pn
or
mov
add
push
jmp
pop
inc
test
and
add
int
mov
mov
or
ljmp
push
pop
icebp
mov
add
clc
ror
enter
ret
clc
negb
xor
add
out
in
xor
add
jmp
xlat
jle
pop
clc
outsl
pop
dec
call
inc
clc
xchg
cmp
push
add
loope
fnstsw
clc
lods
jge
lret
addr16
clc
pop
pushf
adc
add
adc
add
clc
lret
addr16
mov
jecxz
dec
inc
clc
mov
popf
jg
jbe
scas
test
mov
insl
data16
xchg
outsl
sti
sahf
in
lods
mov
sar
clc
inc
add
imul
ds
lret
push
ss
ja
push
xchg
popf
jl
add
and
clc
mov
loopne
cmp
xor
add
clc
mov
clc
and
clc
and
add
shrl
clc
sub
add
add
adc
clc
or
clc
xchg
add
add
clc
or
clc
add
add
or
lcall
fwait
sub
je
xchg
dec
test
push
fwait
jmp
sub
lea
jg
jno
add
add
mov
pop
push
jecxz
fcompl
aas
rolb
add
fwait
jmp
xor
je
repnz
add
add
add
add
pop
test
in
jle
ds
xchg
mov
jb
add
sub
add
fidivl
add
pop
negl
mov
clc
xchg
xabort
add
add
addr16
pop
clc
aad
add
fwait
jmp
sub
xor
xchg
mov
add
or
mov
jns
clc
mov
clc
daa
clc
mov
clc
push
add
dec
jmp
clc
mov
mov
push
add
push
sar
inc
add
std
test
shr
dec
add
mov
add
cmp
sahf
xor
add
add
push
std
out
lcall
jge
in
mov
in
push
push
ret
lea
aad
clc
sbb
lahf
sub
sbb
add
scas
inc
clc
sti
loope
mov
clc
fsubrs
clc
clc
and
push
fwait
jmp
inc
cmpsb
mov
clc
push
add
inc
add
icebp
sbb
outsb
push
sub
fwait
jmp
or
lea
add
push
fidivs
loope
add
cmp
adc
add
mov
mov
jb
add
adc
add
clc
test
mov
add
aad
and
add
lret
stos
aad
pop
enter
push
clc
dec
xor
add
or
add
fimull
pushf
je
mov
add
add
sbb
pop
fwait
jmp
add
add
ljmp
loopne
ljmp
sub
fwait
jmp
jg
sub
xor
repnz
dec
lea
clc
inc
add
into
cmp
pushf
outsb
decb
xchg
js
pop
clc
push
add
mulb
clc
push
xor
add
add
clc
insb
hlt
jo
add
gs
dec
mov
clc
out
outsb
and
add
mov
push
sbb
add
push
add
out
pop
in
mov
movsb
clc
cmpsb
clc
roll
add
and
add
repz
jmp
add
or
add
addr16
je
adc
add
clc
dec
aas
sti
fwait
ds
add
inc
add
xor
add
add
mov
add
test
pop
sub
inc
add
out
test
jnp
ja
test
xchg
and
add
test
dec
jne
popf
and
push
out
ret
clc
rcrl
in
push
clc
pop
mov
movsb
clc
ja
add
push
clc
push
add
mov
sbb
dec
clc
movsl
clc
fldcw
aas
fwait
jmp
outsl
lea
cmp
mov
fwait
jmp
sub
je
fidivl
push
adc
xchg
es
sbb
lcall
push
xchg
mov
clc
add
add
clc
push
clc
pop
daa
clc
nop
in
pop
popa
add
movsl
clc
repnz
and
push
add
xchg
xlat
stos
pop
lock
jmp
std
mov
xor
add
add
add
add
add
gs
push
imul
pop
xabort
xchg
or
clc
adc
movsb
clc
pop
xchg
pop
mov
push
or
pop
mov
js
call
in
inc
add
add
leave
jmp
clc
push
clc
inc
clc
popa
add
cld
aam
add
mov
add
push
into
add
add
clc
lods
cli
inc
clc
fnstsw
add
push
adc
add
mov
add
int
clc
jae
add
clc
sbb
mov
clc
inc
clc
gs
adc
add
ret
clc
mov
fstps
pop
adc
add
clc
popa
add
or
mov
jo
add
mov
add
add
lods
loop
add
hlt
mov
add
clc
pop
mov
or
add
add
mov
cmp
add
cmpsb
clc
xchg
sub
ja
clc
inc
add
mov
add
add
clc
adc
add
or
fwait
jmp
push
mov
add
imul
data16
sub
add
jbe
or
xbegin
xchg
jle
cld
xchg
sbb
daa
clc
cmp
loop
in
sub
outsl
das
lock
add
divl
add
clc
in
add
add
fmuls
clc
dec
icebp
mov
mov
clc
test
ffreep
clc
clc
clc
gs
mov
fwait
jmp
sub
jecxz
jo
add
int3
scas
mov
clc
push
test
rcl
pop
data16
fwait
mov
dec
add
cmp
dec
loopne
fstpt
mov
testl
add
stos
data16
xor
mov
clc
or
mov
sti
loopne
test
clc
push
loopne
fwait
jmp
mov
loopne
idivl
jmp
inc
pop
das
je
clc
xchg
mov
fwait
jmp
sub
clc
sbb
mov
mov
out
aaa
lahf
lods
or
add
push
fwait
jmp
push
scas
cmpsb
outsl
das
es
data16
rclb
add
lock
sbb
add
clc
mov
xchg
lcall
incl
mov
push
add
inc
add
cmp
clc
xchg
or
lret
aaa
push
add
repz
clc
inc
clc
dec
sbb
add
add
sub
lcall
mov
fwait
inc
add
inc
clc
mov
jle
insb
rcr
sub
xor
sbb
sub
xabort
mov
sbb
mov
std
outsl
cmc
xor
inc
add
sbb
add
cmp
add
into
das
shrl
cld
loope
mov
fsubl
call
fwait
jmp
ja
mov
jmp
mov
rdtsc
add
das
cmp
cmp
add
scas
in
sbb
add
clc
into
mov
add
nop
loope
scas
cmp
pop
iret
lods
mov
add
adc
add
in
cmp
stc
stos
ljmp
fsubl
add
push
cld
push
ret
fs
andb
insb
sar
inc
clc
push
arpl
add
cld
push
xor
fwait
jmp
outsl
nop
sub
pop
mov
fimull
cld
push
ret
and
xlat
mov
cmp
clc
movsb
clc
inc
clc
das
sahf
scas
jecxz
cmpsl
clc
das
xchg
cmp
ret
fwait
dec
xlat
ljmp
sub
dec
mov
mov
clc
mov
adc
mov
imull
lea
add
jl
add
and
sahf
in
adc
add
push
mov
clc
int3
dec
push
lds
ret
sub
or
clc
xchg
jp
jne
add
aaa
or
push
call
push
mov
inc
clc
ss
add
push
add
lea
dec
or
add
cmp
add
lcall
sub
mov
stc
dec
and
add
add
xchg
mov
jmp
scas
or
cli
ret
clc
mov
clc
rcr
cmp
or
or
je
sub
push
ret
xor
clc
sub
pop
testb
push
add
fidivs
cmpsl
clc
mov
pop
out
sbb
sub
call
insb
in
fisubrl
pop
or
and
add
clc
push
add
mov
aad
insb
mov
clc
adc
add
out
movsl
clc
loop
or
add
lret
xchg
mov
call
ja
insb
arpl
add
xbegin
dec
rolb
add
mov
add
iret
dec
gs
int
jno
add
inc
clc
call
ret
js
stos
mov
xor
gs
test
ja
add
or
xabort
fistpll
mov
cmp
add
dec
inc
add
pushf
fisubl
popa
add
mov
gs
fimull
popf
lods
clc
sbb
add
pop
xor
rcll
jmp
or
mov
call
pushf
or
ja
clc
xchg
mov
add
test
mov
jo
add
pop
test
add
push
add
shll
add
or
fs
bts
call
fwait
jmp
add
sbb
inc
add
jne
push
add
push
fwait
jmp
data16
add
mov
repnz
push
add
adc
add
fisttpl
cld
push
ret
jge
imul
push
add
push
clc
jne
testl
push
mov
push
lock
push
add
cmp
mov
and
add
pop
and
xchg
lock
add
mov
addr16
dec
add
fnstenv
enter
jno
add
xchg
pop
sbb
jmp
subb
xchg
cmpsb
lret
jge
clc
lcall
sbb
add
lcall
pusha
add
fbstp
add
inc
add
ljmp
pop
dec
cmp
add
xchg
lahf
jae
add
test
sub
data16
sbb
shrl
clc
std
add
test
or
add
mov
mov
clc
jno
add
fldl
add
jl
xor
add
add
std
sbb
add
cmpsb
clc
xor
add
sub
inc
add
fld
clc
or
add
add
mov
jp
clc
icebp
cli
xchg
fimuls
clc
cmp
mov
shlb
add
xchg
xor
cmp
jmp
sub
add
mov
pusha
add
cmp
sub
push
push
ret
inc
add
shr
fwait
jmp
movsb
cmp
mov
add
je
or
cld
push
add
jno
add
dec
mov
adc
add
mov
add
aad
clc
or
and
xor
add
add
data16
pop
jo
add
mov
xor
add
lock
adc
add
xlat
sbb
fwait
jmp
sub
add
clc
cli
cmpsb
clc
jg
push
sar
out
stc
iret
in
push
jne
fwait
jmp
daa
clc
xor
add
clc
jbe
clc
enter
add
stc
lret
mov
clc
fdivrl
dec
inc
clc
jmp
clc
or
lcall
add
and
add
add
add
add
data16
or
mov
xor
add
and
jl
mov
jge
inc
add
inc
clc
lcall
mov
sbb
dec
fxam
clc
enter
clc
cltd
push
sub
jmp
lods
xchg
cmp
and
mov
sub
and
je
addr16
sub
clc
xchg
pop
je
add
popa
add
pop
mov
fimuls
ljmp
clc
add
add
clc
aad
clc
lret
mov
jns
clc
lret
adc
add
clc
cmp
jmp
cwtl
movsb
cwtl
aaa
jp
jo
add
jne
xor
add
aaa
in
mov
stos
and
mov
outsb
leave
jo
add
adc
add
cmp
jle
push
clc
inc
clc
xor
add
clc
test
lret
imul
lcall
stos
sub
ss
add
divb
hlt
jb
add
inc
add
pusha
add
mov
mov
sbb
add
jg
dec
iret
fsubs
stos
cmp
in
mov
xor
add
add
xabort
sbb
push
in
cmp
inc
clc
cwtl
xbegin
cltd
xchg
push
add
xchg
or
add
xor
add
jns
add
cmc
pop
adc
clc
lret
ficoml
in
popf
push
mov
pushf
insl
fnstsw
mov
mov
clc
lret
clc
mov
lret
jns
adc
add
clc
sbb
clc
lods
sbb
cmp
add
fs
mov
sub
clc
push
add
iret
out
into
fcmovbe
mov
add
add
pop
or
add
xor
add
xor
add
das
adc
add
add
add
add
clc
mov
mov
clc
in
mov
mov
inc
clc
dec
mov
pop
clc
pop
mov
test
pop
clc
test
stc
lock
add
adc
add
hlt
xchg
xchg
cmp
push
xchg
xchg
icebp
mov
cmp
ljmp
cmp
add
daa
clc
adc
add
add
clc
loopne
or
clc
or
pop
in
daa
clc
pop
jmp
ret
clc
in
push
sub
clc
mov
push
stos
fwait
test
or
mov
xor
add
clc
sub
mov
popf
idivl
sbb
add
addr16
aam
add
sbb
clc
outsb
sar
add
add
in
dec
insb
aam
sub
aaa
push
mov
xchg
int
pop
xor
add
lock
int
add
in
sahf
sbb
push
sahf
xchg
sbb
add
cmp
sub
int3
fbstp
scas
cmpsl
clc
dec
inc
clc
jmp
fstpt
pushf
push
add
cltd
sbb
dec
mov
cs
clc
cmp
clc
sbb
add
xor
mov
clc
adc
clc
ret
clc
lret
aas
loop
fistpll
or
pop
adc
addr16
jmp
lock
cmp
sbb
add
adc
add
leave
pop
xabort
adc
add
add
xor
mov
mov
out
sbb
loope
pop
idivl
stos
push
cmp
push
add
add
add
add
pop
arpl
add
add
dec
into
mov
lcall
leave
mov
mov
clc
fbstp
out
leave
pusha
add
inc
add
xchg
lods
lcall
add
add
add
xchg
aam
or
popa
add
add
add
nop
or
inc
add
testb
dec
in
or
mov
or
add
push
add
ss
hlt
pop
addr16
pop
insl
pop
cmc
gs
enter
imul
daa
clc
idiv
inc
clc
mov
inc
clc
cld
lahf
and
mov
clc
push
imul
inc
clc
enter
mov
mov
push
add
ds
sub
imul
mov
rol
clc
aad
jge
clc
es
pop
jl
clc
xchg
syscall
clc
adc
add
pop
mov
add
mov
cmp
daa
clc
loop
ja
or
dec
adc
add
pop
clc
push
xchg
lods
jg
add
arpl
add
add
add
add
jbe
add
dec
int3
cli
inc
add
xor
add
mov
clc
dec
mov
jl
mov
test
iret
loopne
popa
add
xchg
stos
pop
xlat
adc
add
jne
outsb
jl
leave
jnp
clc
cmp
clc
repnz
clc
mov
clc
or
nop
leave
cmp
rcr
pop
and
add
push
clc
mov
add
mov
insl
adc
add
add
inc
clc
std
gs
xchg
add
cmp
clc
pop
cmp
adc
add
mov
clc
mov
xor
add
add
scas
mov
scas
mov
jl
scas
sahf
lret
imul
cwtl
and
add
add
add
insl
add
add
adc
xchg
cmovo
add
xor
add
add
int
inc
add
fldenv
lret
add
in
mov
push
popf
sbb
cmp
add
adc
pop
outsl
push
rclb
inc
add
icebp
cmpsb
clc
mov
out
and
add
xbegin
add
inc
clc
adc
clc
sub
pop
inc
clc
push
int3
push
cs
sbb
lods
cmp
dec
pop
scas
cmp
add
shrl
clc
xor
jmp
add
mov
clc
pop
sub
jae
add
pop
clc
pop
ret
ljmp
add
clc
int
cmp
add
clc
fidivl
add
sar
test
adc
add
push
insl
cmp
mov
clc
lock
clc
clc
or
test
add
sti
pop
xchg
jb
add
pop
xor
add
add
mov
data16
mov
add
mov
mov
mov
jb
add
add
cmpsb
clc
add
add
cmp
add
ret
mov
clc
fcmovnu
out
loopne
push
add
pop
cmp
and
add
jge
mov
loopne
aam
rolb
adc
jbe
add
aaa
and
add
add
mov
sbb
clc
sahf
jno
add
jno
add
cmp
in
xchg
mov
ds
in
or
add
push
add
repnz
add
aad
clc
sub
inc
add
movsl
clc
xchg
repnz
popa
add
lahf
cmp
add
add
cmpsb
clc
or
and
add
xabort
add
mov
clc
das
sbb
push
or
clc
ss
add
pop
clc
xor
add
add
cmp
clc
pop
clc
jb
add
das
std
pop
mov
pop
clc
ss
add
lret
sub
clc
mov
clc
out
mov
clc
ret
dec
mov
clc
mov
lods
aam
clc
xchg
ds
add
xbegin
xor
aaa
insl
cmp
mov
mov
lcall
cli
push
cmp
cli
jge
test
lret
jmp
aam
jge
mov
ret
test
test
dec
inc
add
jg
test
test
sbb
adc
add
jo
add
pop
clc
mov
add
fistpll
and
add
in
inc
clc
jns
push
mov
fisubrs
adc
add
fs
test
pop
cwtl
mov
add
clc
adc
add
stos
add
add
outsl
stc
add
add
add
clc
adc
add
clc
xchg
jae
add
out
cmpsb
clc
mov
ficompl
mov
clc
enter
dec
jae
add
out
jmp
push
add
xchg
js
xchg
repz
ret
xchg
cmp
pop
outsl
inc
add
pushf
jp
clc
push
clc
mov
push
stos
jns
jbe
add
add
add
mov
clc
cmp
notl
xchg
sbb
add
xchg
cmpsb
clc
mov
clc
and
add
scas
test
stos
fnsave
inc
clc
sbb
add
add
add
popf
cltd
push
xor
add
jns
jecxz
sar
clc
shlb
enter
jbe
lret
jno
add
sti
insl
pop
mov
out
sub
movsl
clc
ss
in
fists
add
jnp
insb
repnz
dec
std
mov
adc
add
dec
lock
and
je
clc
adc
add
inc
clc
pusha
add
adc
clc
out
sbb
add
aad
inc
clc
cmp
cmp
jp
jb
add
xor
add
add
clc
push
add
sub
clc
movsl
clc
cmp
add
dec
xor
add
jmp
mov
nop
addr16
push
clc
cmp
clc
xor
add
sbb
test
inc
clc
dec
dec
mov
clc
aam
adc
clc
loope
xor
add
insb
call
movsb
clc
mov
adc
add
lret
xchg
fs
cmpsl
clc
inc
clc
jbe
sbb
clc
and
add
add
ret
clc
cmp
add
or
mov
insl
aam
push
add
shll
dec
mov
cmp
or
pop
ret
clc
sub
cmp
mov
add
cmp
clc
fwait
cmpsb
clc
fcoml
clc
pop
adc
add
sar
sbb
popa
add
mov
clc
push
add
nop
xchg
push
jl
fsubs
jp
xchg
xchg
dec
ret
das
test
clc
into
fmuls
xor
add
clc
xor
add
sub
mov
data16
insb
mov
clc
and
add
add
in
or
clc
movsb
clc
jp
clc
adc
clc
clc
mov
jb
add
add
div
push
clc
dec
jp
enter
sti
aaa
adc
clc
mov
jb
add
lahf
and
add
clc
xchg
fmuls
clc
int
add
clc
cmp
pop
sar
clc
mov
ljmp
fwait
fs
cmp
cmp
sbb
clc
dec
imul
clc
cmp
sub
out
xor
add
add
mov
mov
cmp
clc
test
add
pop
test
mov
clc
or
add
lcall
add
adc
sarl
add
xchg
sub
clc
cmp
cmp
add
mov
clc
icebp
icebp
loopne
lea
cmp
call
or
push
iret
cmp
add
enter
add
cmp
add
xchg
sahf
jecxz
jb
add
add
gs
pusha
add
test
cli
ss
imul
mov
add
cmp
clc
push
push
add
test
sbb
mov
sub
jne
add
inc
add
ret
fs
dec
mov
jge
in
pop
clc
jmp
and
aaa
sbb
sbb
add
popf
pop
add
add
clc
clc
ljmp
fs
push
jo
add
movsb
clc
repnz
add
xchg
cmp
adc
add
mov
loop
shll
add
adc
add
clc
pop
clc
push
add
lea
xor
dec
cmp
sub
adc
add
cmp
clc
adc
or
icebp
xor
add
dec
and
xor
add
or
add
pop
test
jmp
xchg
mov
add
stc
cld
pusha
add
imul
pop
lret
add
aaa
pop
jmp
mov
int3
pop
mov
rorl
push
test
cltd
fstl
clc
movsl
clc
int
ds
ss
inc
clc
cmp
pop
mov
or
clc
mov
inc
clc
loopne
jbe
add
xor
cmp
add
cmp
xchg
enter
clc
clc
mov
sbb
dec
jge
int
sub
cmp
je
psubusw
add
adc
add
clc
jg
adc
add
add
mov
add
in
lret
adc
add
movsl
clc
out
sub
imul
adc
add
mov
clc
xchg
popa
add
sub
and
add
sub
clc
loop
lock
clc
fisubrl
add
add
add
out
mov
dec
cmp
push
dec
iret
xchg
insl
mov
out
fstps
xchg
lods
xabort
push
clc
outsb
loope
out
scas
sub
clc
sbb
add
clc
jle
adc
add
dec
cmp
add
mov
mov
or
dec
adc
and
add
clc
sar
add
jg
inc
clc
test
add
ss
jo
add
dec
jmp
repnz
out
fsubrs
xchg
push
push
insl
inc
clc
mov
daa
clc
cmp
or
add
clc
stc
push
dec
lret
fisubrl
call
add
add
pop
test
shrb
jns
add
ret
es
out
pushf
push
add
ja
sti
mov
loope
movsb
clc
in
lcall
xchg
sar
xor
xchg
inc
clc
push
add
popf
jnp
dec
imul
jl
out
add
add
pop
bound
add
clc
int3
faddl
clc
aaa
mov
add
sar
clc
icebp
pop
push
jnp
add
jb
add
fiaddl
dec
lahf
es
sbb
xor
add
clc
xbegin
jle
mov
das
pop
call
jo
add
mov
test
pop
clc
aaa
iret
outsl
scas
xchg
scas
xor
add
mulps
sub
int3
or
or
clc
push
loop
inc
add
imull
mov
pushf
test
clc
arpl
add
lcall
mov
mov
clc
fdiv
jns
mov
clc
lcall
jmp
int3
jne
xchg
insb
push
add
and
add
lock
sar
stc
mov
clc
mov
call
jg
add
mov
clc
gs
hlt
mov
add
push
add
cmpsb
clc
inc
add
pushf
xchg
jne
jae
add
clc
cmc
or
clc
push
push
add
adc
clc
decl
test
add
lods
pushf
cmp
jmp
outsb
cmc
test
clc
mov
ret
add
shll
add
add
cltd
push
mov
adc
add
bswap
idivl
or
mov
addr16
jae
add
das
mov
pop
in
pop
clc
loopne
shr
push
xchg
cmp
jbe
pop
fbstp
add
xor
add
clc
test
add
add
and
add
pop
movsl
clc
add
add
fucomip
stc
mov
inc
clc
in
xor
add
push
add
lahf
xchg
adc
add
sub
add
cmp
mov
and
sar
cmp
lock
fildll
add
xabort
cmp
sbb
jns
ret
clc
mov
lods
xlat
push
add
xchg
pop
inc
clc
and
ss
pusha
add
clc
stos
jb
add
mov
sbb
add
inc
clc
cli
xchg
sbb
xchg
ds
jg
push
clc
repnz
pop
push
nop
pusha
add
ds
and
add
add
cltd
add
add
adc
add
sub
arpl
add
add
sbb
add
aas
jg
pop
lahf
outsb
pushf
cmpsl
clc
in
sti
test
jmp
clc
into
aam
int
cmpsb
clc
mov
add
add
popa
add
insb
inc
clc
cmp
clc
rcrl
movsb
clc
ficomps
sub
add
xlat
sar
mov
clc
fwait
sbb
lahf
cmc
aad
cmp
pop
inc
clc
clc
lods
dec
cli
sbb
mov
out
push
dec
into
xchg
dec
in
or
std
cmc
lahf
mov
add
inc
clc
inc
add
sqrtps
add
out
aaa
xchg
movsl
clc
pop
inc
clc
jbe
aaa
leave
sar
mov
leave
xor
add
pop
mov
clc
sub
xchg
xor
add
clc
fistpll
mov
pop
cmp
clc
sarb
clc
or
xor
icebp
sub
cmpsl
clc
jb
add
adc
add
mov
movsl
clc
push
add
fistps
xchg
mov
add
add
jp
lcall
ljmp
pmaddwd
and
add
jne
add
xchg
in
imul
xor
push
add
scas
je
lret
clc
mov
jg
dec
imul
mov
add
daa
clc
xchg
sub
or
add
int
clc
in
dec
mov
sbb
adc
add
clc
sbb
cmp
enter
std
inc
add
fisttps
adc
add
cmpsl
clc
inc
add
xbegin
mov
cld
push
or
add
cmp
addr16
adc
add
ljmp
inc
clc
addr16
out
inc
clc
jae
add
in
push
add
scas
inc
clc
mov
dec
sbb
xchg
inc
add
ss
mov
mov
add
in
ficompl
add
cmp
add
aaa
or
lahf
sbb
das
shrb
jg
sarb
xor
add
jl
clc
out
mov
outsb
clc
pop
adc
add
sbb
clc
mov
repz
add
sbb
std
jns
pushf
jo
add
sar
idivb
imul
jp
cli
nop
adc
sti
inc
clc
sar
addr16
pop
shrl
ja
clc
xor
add
ret
clc
and
kmovw
adc
add
push
add
xchg
mov
add
inc
clc
or
test
dec
mov
push
add
lods
push
cmpsl
clc
lods
xchg
aas
hlt
stc
vmovhps
xlat
lret
xor
add
insb
es
cld
fcmovu
sub
clc
dec
rcrb
and
clc
adc
push
sub
fs
icebp
xor
add
clc
jno
add
or
cld
sbb
clc
mov
add
lods
or
mov
clc
neg
xchg
mov
add
jnp
clc
sbb
addr16
dec
addr16
cmpsb
clc
mov
mov
fnstcw
clc
mov
clc
jbe
aas
sbb
cmp
add
sar
inc
clc
ja
add
add
dec
pop
add
add
popf
gs
movsb
clc
and
add
push
xchg
cmp
clc
lods
cmpsb
clc
hlt
enter
add
popa
add
sub
add
das
pushf
pop
inc
add
enter
xor
ret
cmp
cmp
jnp
dec
fisubrl
add
adc
push
add
push
add
mov
cmpsb
clc
aam
add
test
add
add
or
ficomps
sbb
es
and
clc
mov
insl
out
sahf
clc
sub
add
push
clc
das
pop
cmpsb
clc
cmc
popa
add
push
clc
sub
clc
fwait
adc
add
add
jne
jge
sti
stos
or
clc
enter
push
lock
push
and
add
cmpsl
clc
jae
add
add
push
pop
incl
add
out
test
mov
add
jbe
sbb
xor
add
jnp
clc
clc
push
add
xor
add
clc
gs
sub
jg
fdivrs
clc
int
out
push
pushf
ds
clc
mov
aaa
fcompl
out
mov
adc
jo
add
test
mov
clc
bound
add
add
pop
jne
clc
xchg
in
mov
pop
pop
test
fstpt
push
cmp
push
add
xbegin
push
mov
inc
clc
or
jo
add
xchg
and
add
dec
lods
loopne
add
mov
or
jbe
xchg
mov
cmp
aaa
xor
add
into
stos
sub
loope
loopne
pop
cmp
clc
fwait
push
push
sar
xchg
inc
add
dec
clc
xor
lret
add
xor
add
clc
rcrb
sbb
mov
add
loope
jp
sarb
pause
mov
pop
mov
clc
int
test
rcr
mov
mov
clc
lcall
clc
add
add
ja
clc
lcall
psubusw
xchg
dec
scas
or
jb
add
loop
cmc
pop
outsb
xabort
test
sub
adc
add
add
sar
jo
add
ret
clc
test
clc
or
mov
pop
pop
vminps
adc
add
sar
add
mov
add
mov
add
lea
stos
in
in
dec
ret
add
ljmp
xor
hlt
add
clc
pop
mov
add
stos
repz
add
xor
clc
xchg
dec
cmc
ret
clc
adc
lea
addr16
fcmovbe
jae
add
sti
push
psubsb
inc
add
sbb
adc
add
push
add
inc
add
int3
ja
popf
mov
clc
xor
add
or
add
add
add
add
pop
inc
add
mov
fnstenv
mov
push
xchg
mov
rolb
popf
fwait
pop
cmp
sub
clc
and
xchg
mov
clc
cmp
push
add
push
push
cmc
lret
jl
cld
je
sbb
add
inc
clc
fisubl
add
mov
add
shll
add
pusha
add
fwait
xor
add
outsl
lret
jmp
sbb
add
sbb
dec
mov
bound
add
sahf
lods
inc
add
mov
scas
mov
inc
clc
out
ljmp
and
add
dec
cmc
mov
mov
cmp
inc
add
push
clc
jge
cmp
add
add
xchg
mov
cmpsl
clc
fdivrp
add
add
jae
add
divb
jg
push
add
scas
movsb
clc
testb
insb
fstpt
add
dec
mov
sar
popa
add
push
shl
push
out
rcrb
mov
pop
test
fwait
or
mov
add
ja
mov
cmp
xchg
or
jp
pushf
insl
in
pop
out
sbb
imul
add
jo
add
sub
loope
cmp
add
add
add
ds
adc
add
movsl
clc
lret
clc
dec
js
clc
push
mov
adc
add
clc
sub
add
cmc
dec
and
adc
add
add
sub
icebp
add
add
in
inc
clc
in
sbb
sbb
push
add
arpl
add
clc
push
add
xlat
jnp
lahf
cmp
pop
mov
clc
js
clc
mov
pop
xchg
mov
stos
and
add
add
add
pop
pop
outsb
cmp
clc
ljmp
sbb
mov
mov
loopne
xor
add
sbb
leave
popa
add
inc
clc
popa
add
mov
mov
xor
add
js
clc
inc
clc
nop
fwait
mov
pop
je
loop
adc
add
xor
add
in
clc
jmp
inc
add
pushf
add
add
adc
add
add
adc
add
clc
or
sbb
xor
clc
mov
jbe
xchg
add
add
add
test
add
mov
add
push
add
rclb
add
sar
clc
pop
test
insb
stos
ror
data16
and
add
clc
mov
clc
das
or
ljmp
dec
cmp
pop
clc
sti
xchg
sar
push
adc
add
add
js
das
loope
push
es
lods
sar
clc
cli
xabort
mov
out
ja
xor
clc
addr16
push
test
push
add
add
add
and
add
push
sbb
add
xchg
mov
clc
sbb
into
dec
xchg
push
add
dec
sub
clc
in
cmpsb
clc
cmp
clc
push
test
call
mov
xbegin
jge
popf
fldl
add
clc
cmc
pop
daa
clc
fwait
dec
jnp
pop
lret
loope
jns
or
mov
clc
clc
xbegin
add
mov
clc
mov
and
add
jb
add
push
in
jmp
ret
clc
stos
mov
add
push
jnp
add
lret
dec
push
clc
inc
add
mov
add
clc
push
xor
add
rcll
idivb
psubusb
sbb
imul
dec
ss
add
ss
out
int3
into
pop
cmpsl
clc
cmc
jge
pop
std
test
popa
add
insb
cmp
add
pop
sbb
clc
sub
out
stos
mov
clc
sub
pop
clc
cmp
negb
mov
cmp
out
out
stc
mov
add
adc
xbegin
clc
cltd
lret
mov
clc
add
xchg
and
add
clc
mov
add
dec
lods
rcrl
testl
add
pop
clc
lcall
jne
add
add
and
and
clc
sbb
add
pop
testb
jnp
push
clc
mov
xchg
std
and
push
add
add
aad
sub
add
add
add
push
add
dec
out
int
add
push
and
add
and
add
cmp
clc
lcall
clc
in
out
into
jle
add
bound
add
xchg
loopne
inc
add
pop
addr16
dec
js
mov
cmp
cmp
outsl
cmp
sahf
jg
clc
sar
lret
add
decl
cld
inc
clc
loope
sbb
add
pop
sar
es
dec
shrb
add
add
add
sub
clc
lret
push
push
loope
fnop
out
sti
push
xor
add
clc
nop
sub
aas
sbb
pop
mov
jge
clc
std
add
add
sbb
add
dec
ds
xchg
inc
clc
ret
popf
inc
add
stos
pop
clc
xor
add
add
sar
mov
add
lods
ds
mov
add
imul
int3
and
rorb
or
jmp
inc
clc
pop
clc
sbb
add
icebp
sarb
repz
ja
pop
pop
push
add
imul
sub
je
daa
clc
jno
add
add
add
scas
xor
mov
jbe
clc
sbb
movsb
clc
xchg
fldcw
addr16
dec
add
add
clc
int
clc
sar
out
cmp
clc
ja
fiaddl
clc
sar
clc
pop
clc
pusha
add
push
lods
or
addr16
faddl
clc
call
stc
pop
clc
xor
cld
ret
clc
push
clc
sar
mov
sbb
and
add
add
sub
out
or
add
insb
and
add
fs
dec
adc
add
xor
add
mov
jo
add
add
jp
clc
insl
push
push
xbegin
loopne
pop
xchg
jno
add
add
loop
daa
clc
jp
xor
sbb
add
mov
clc
jl
cmc
addr16
out
add
cwtl
push
sub
clc
call
jg
clc
lret
cmpsb
clc
mov
add
xor
add
clc
cmp
sahf
pop
imul
clc
nop
pop
cmpsb
clc
jecxz
into
rolb
ffree
clc
pop
lahf
sbb
loop
filds
clc
lahf
sar
pusha
add
mov
add
lock
add
pushf
out
adc
scas
mov
lret
mov
push
js
cmp
test
cli
lock
push
cmp
mov
add
std
pop
xchg
cmpsl
clc
add
add
lcall
xchg
mov
sar
add
push
clc
das
cli
add
add
dec
mov
aam
clc
push
lea
lock
cmp
repnz
bound
add
add
mov
fwait
pusha
add
lcall
clc
inc
add
mov
or
inc
clc
mov
sub
sub
aam
iret
pop
shll
add
ja
test
cmp
lahf
mov
clc
daa
clc
stc
pop
add
add
aas
cmpsl
clc
inc
clc
mov
mov
fcmovb
clc
pop
adc
add
cmpsb
clc
inc
add
xabort
mov
clc
sbb
gs
in
int3
xchg
std
sahf
xchg
sub
add
adc
add
test
dec
clc
inc
add
hlt
push
add
xchg
and
hlt
mov
clc
sbb
sub
add
jp
inc
add
dec
xchg
int3
and
add
ret
clc
clc
inc
add
out
cmp
clc
mov
insl
mov
js
pushf
rcll
add
clc
push
add
add
add
add
cltd
rclb
movsl
clc
push
mov
xchg
hlt
pop
inc
clc
ficoms
sarb
lcall
add
jp
inc
clc
mov
movsl
clc
adc
cmp
jo
add
loope
stos
sbb
pop
jmp
cli
dec
or
clc
int3
push
inc
clc
push
clc
push
add
inc
add
mov
test
add
aam
add
int
adc
add
add
loope
cld
xchg
lahf
inc
clc
mov
clc
or
clc
out
mov
out
sbb
mov
loop
mov
je
inc
clc
test
clc
dec
mov
clc
shr
xchg
or
xabort
clc
xchg
test
clc
cmpsl
clc
push
test
lods
imul
add
add
sub
cltd
mov
inc
add
dec
jle
push
fildll
ret
xchg
push
push
mov
and
add
add
in
psraw
fldl
xor
ja
sti
jo
add
mov
movsl
clc
mov
xabort
clc
imul
sub
iret
xor
lret
arpl
add
ficompl
dec
dec
dec
lea
push
inc
add
xabort
in
adc
add
insl
sar
out
dec
xor
add
sbb
xor
add
in
mov
push
add
push
add
cmp
clc
jp
shlb
adc
add
into
mov
sub
adc
xchg
cmp
clc
push
add
cmp
ljmp
repnz
incb
call
xchg
and
add
lock
add
clc
sarl
add
push
jle
mov
add
add
mov
cmp
add
shrl
jp
shrb
clc
cmp
shlb
jge
dec
std
sahf
addr16
and
add
add
jmp
fsubp
clc
pusha
add
mov
adc
add
jae
add
fldenv
and
add
leave
mov
jmp
xor
clc
push
add
movsb
clc
push
add
pop
mov
add
movsl
clc
xbegin
inc
clc
inc
add
xlat
jae,pt
add
sub
add
pop
add
add
cmp
mov
add
or
add
add
xbegin
outsb
adc
add
sbb
clc
nop
jmp
clc
jl
cmp
sbb
clc
inc
clc
push
add
shlb
or
add
cs
clc
adc
add
das
leave
lahf
dec
ret
clc
das
or
mov
mov
push
add
and
add
cmp
in
dec
and
add
xchg
mov
pop
clc
pop
clc
push
add
add
mov
cmp
push
push
stc
add
add
push
add
cmc
je
add
push
shrb
incb
clc
add
add
clc
mov
clc
or
xor
lret
icebp
adc
dec
add
add
add
add
or
add
ret
clc
pop
jne
imul
sub
xchg
cltd
xor
clc
imul
add
jae
add
push
fisubl
je
fwait
xor
add
repz
in
sub
repz
xor
add
clc
scas
xchg
mov
sbb
shrb
sub
cmpsl
clc
xor
mov
mov
clc
mov
add
mov
clc
xor
add
fildl
push
in
cld
jmp
cmp
add
leave
pop
test
push
adc
add
add
sbb
fistpll
and
push
add
mov
push
add
add
add
icebp
in
pop
loopne
jle,pt
popf
push
xor
add
mov
lea
inc
add
cmp
test
repz
das
mov
psubsw
lea
or
pusha
add
jecxz
adc
add
add
add
fildl
icebp
mov
fstl
xchg
sbb
cltd
pop
mov
imulb
and
cld
out
pop
jne
xchg
aas
fnstsw
clc
xbegin
shlb
xchg
mov
in
nop
fs
jg
hlt
sar
adc
add
xchg
mov
decb
sbb
add
mov
clc
jns
stos
jns
add
or
add
add
jg
push
or
clc
cmpsl
clc
leave
sub
je
clc
xchg
rolb
and
outsb
cmp
cs
add
cwtl
xchg
in
mov
bound
add
clc
jno
add
jbe
icebp
icebp
pop
push
lcall
or
jns
or
or
add
lods
enter
xor
add
add
cmpsl
clc
mov
sbb
lcall
shll
inc
clc
addr16
fcompp
or
push
clc
xor
add
push
add
lods
fstpl
mov
push
clc
inc
add
add
add
inc
clc
test
mov
pop
fs
dec
stos
data16
lods
popf
sarb
xchg
out
jae
add
insb
mov
xor
add
aad
and
add
xchg
jp
aas
pushf
pop
cmp
cmp
clc
div
scas
sub
data16
push
mov
cmpsb
clc
stos
inc
add
mov
imul
clc
repnz
xchg
mov
add
clc
call
add
add
add
hlt
mul
clc
test
call
add
xabort
add
push
movhps
push
push
rcl
sbb
xbegin
daa
clc
mov
scas
sub
out
lahf
and
add
ret
clc
scas
imul
nop
test
ljmp
mov
add
shrb
clc
das
adc
add
clc
xabort
lret
mov
add
push
cmp
call
add
add
add
dec
arpl
add
clc
jge
clc
mov
jno
add
dec
cld
pop
clc
mov
push
clc
test
mov
cmpsb
clc
and
add
xchg
jne
add
xbegin
loop
xchg
aam
clc
dec
out
and
clc
sub
clc
cwtl
cmpsb
clc
jo
add
jb
add
sbb
add
lock
clc
dec
lods
gs
pop
cmpsl
clc
and
lcall
jmp
sti
popf
ss
cwtl
loopne
pop
push
sub
in
shr
jge
or
cmp
dec
xchg
cmp
std
adc
mov
loop
sub
aas
dec
xlat
mov
add
mov
inc
clc
js
movsb
clc
mov
jge
clc
sar
clc
jp
xchg
dec
adc
leave
mov
add
push
add
inc
clc
sbb
lcall
xchg
cmp
cmpsb
clc
jo
add
sahf
xor
add
clc
xlat
xor
into
hlt
test
lret
in
ss
add
fidivl
sarl
jle
clc
pusha
add
repz
clc
cmp
dec
jno
add
add
ds
pop
kmovw
sar
inc
clc
jbe
pop
clc
iret
mov
add
repz
cmpsb
clc
xabort
call
repnz
sar
xchg
adc
jbe
xchg
mov
add
sub
icebp
or
add
push
icebp
mov
loopne
pop
cld
lret
movsl
clc
iret
ret
clc
push
add
push
add
pushf
rcrb
lods
ud1
mov
lods
jb
add
push
aaa
cmp
mov
dec
jge
cwtl
sar
add
add
add
or
clc
lock
clc
pop
push
xchg
cmp
or
xchg
cltd
mov
clc
dec
push
add
out
imul
add
mov
or
in
cli
ficomps
lock
or
add
push
mov
fisubs
sbb
nop
std
pop
fistpl
pop
mov
popf
popa
add
clc
sub
clc
pop
sub
jmp
in
mull
add
fildll
arpl
add
add
clc
bound
add
clc
jl
cld
bound
add
clc
dec
cmp
sahf
mov
clc
jne
insb
aas
icebp
cmp
ret
clc
ljmp
clc
pop
pop
stos
push
add
test
adc
add
cmpsl
clc
gs
test
test
icebp
cwtl
sahf
ret
clc
mov
loop
or
add
jb
add
clc
mov
in
test
aam
into
movsl
clc
cmpsb
clc
daa
clc
gs
jg
clc
xor
mov
xabort
add
out
cmp
pop
aas
stc
mov
lret
es
into
stc
mov
clc
adc
add
add
into
add
add
add
sbb
add
xbegin
add
mov
mov
sub
sbb
ljmp
addr16
sbb
xor
add
fcmovne
pop
lret
clc
and
add
add
cmp
add
clc
jae
add
add
mov
mov
clc
inc
add
std
sub
clc
clc
cmp
clc
insl
lods
repz
pop
dec
xor
add
clc
mov
cltd
out
rclb
clc
mov
add
imulb
and
cmpsl
clc
jnp
clc
lret
sub
clc
push
mov
add
clc
aam
add
std
idivb
jbe
clc
mov
fdivrl
or
xchg
fwait
inc
add
movsl
clc
xchg
mov
push
add
add
xbegin
loope
jl
mov
clc
and
add
rorb
ja
ljmp
add
inc
clc
movsb
clc
stos
lahf
mov
clc
mov
adc
add
cmp
clc
enter
repnz
clc
jmp
pop
testb
add
add
clc
daa
clc
bound
add
cmp
add
into
cld
sar
enter
rorb
mov
xbegin
cmp
clc
repnz
and
add
clc
pop
loope
and
add
fisttpl
add
push
push
add
mov
loop
push
push
add
int3
push
aad
out
cld
pop
mov
clc
pop
cmc
add
cs
pop
clc
jmp
inc
clc
xchg
mov
clc
cmp
dec
and
add
or
xlat
and
add
add
clc
and
outsb
xor
pop
sbb
lcall
mov
push
clc
insb
sub
clc
fistpll
jge
add
or
inc
add
mov
dec
repnz
int3
xchg
je
icebp
dec
fsts
add
loopne
mov
fwait
lods
adc
add
clc
cmp
gs
cltd
mov
push
clc
sbb
mov
add
adc
add
enter
mov
cmp
jp
add
std
cld
scas
pop
rcr
push
aaa
add
clc
lods
cmc
mov
fs
inc
clc
faddp
clc
push
enter
mov
add
xchg
add
dec
test
pusha
add
jp
push
push
das
and
add
lock
fcoml
clc
scas
adc
add
mov
clc
and
sti
fisubs
daa
clc
in
mov
js
mov
sar
inc
clc
out
lcall
or
lcall
clc
movsl
clc
cmp
and
add
lods
lret
jo
add
add
dec
fwait
pcmpeqb
clc
scas
ss
clc
pop
mov
clc
cmp
call
cmp
clc
sti
xchg
push
add
stc
jbe
daa
clc
lods
shl
clc
xchg
jp
clc
pop
push
stos
mov
add
mov
out
ret
clc
mov
add
dec
cmpsb
clc
pop
push
add
add
push
dec
aam
fwait
nop
aam
out
xchg
dec
je
clc
int3
add
add
clc
fs
sti
pop
call
add
clc
sub
gs
inc
clc
jnp
add
sub
pusha
add
popf
addr16
ret
xlat
push
add
push
pop
adc
add
aaa
popf
ss
clc
dec
and
pop
mov
or
clc
lahf
scas
stc
insb
pop
add
add
enter
add
cmp
clc
xor
add
insl
jmp
add
add
push
mov
and
add
cmp
ss
xchg
jno
add
xor
add
clc
add
add
add
std
inc
clc
mov
sti
addr16
gs
or
cmp
clc
cmp
cmp
mov
add
fsubl
add
sub
cmp
cld
jbe
clc
bound
add
pop
nop
push
add
adc
jmp
jbe
cmp
fld
clc
rorl
add
xor
add
js
adc
clc
mov
aaa
in
cmp
pop
mov
test
lret
mov
fs
std
pop
out
aam
cmp
jge
add
iret
jg
call
out
xchg
mov
clc
dec
add
xor
add
pop
clc
negb
sbb
es
push
push
add
dec
rorb
lret
mov
push
adc
sub
add
add
cwtl
dec
add
iret
push
add
das
daa
clc
push
add
mov
in
mov
mov
cmp
and
push
scas
mov
jl
clc
xbegin
xchg
or
clc
mov
clc
in
pop
xchg
fstl
dec
sar
arpl
add
or
add
mov
test
inc
clc
xchg
cmpsl
clc
lcall
clc
inc
add
sar
jge
fcomi
jne
pop
pop
cmp
xor
or
add
sub
clc
loopne
mov
je
xor
in
iret
mov
xor
add
add
outsl
dec
mov
clc
test
fdivrl
add
sbb
fbld
inc
add
mov
add
fidivrs
fmul
aaa
hlt
cmp
cmp
mov
call
cli
cli
cmp
mov
cmp
add
stos
fiaddl
aam
xchg
pushf
xor
dec
push
stos
in
data16
outsl
test
into
xor
xchg
sub
add
imul
cmp
add
jg,pn
clc
enter
add
ficoms
icebp
mov
add
fwait
rcll
dec
and
add
repz
lahf
call
add
and
push
pop
outsb
bound
add
mov
pop
pop
clc
push
clc
or
sbb
clc
push
xchg
and
add
add
pusha
add
pop
movsl
clc
fsubrs
iret
or
add
pop
cmp
clc
cmp
mov
outsl
mov
clc
aam
std
cmp
sar
add
mov
test
mov
lods
mov
dec
xor
add
rorl
add
clc
stos
jmp
mov
test
mov
add
clc
adc
add
add
add
jns
leave
filds
cmp
mov
mov
jl
clc
cmc
aam
cmp
mov
xabort
stos
mov
push
add
lock
add
sbb
mov
clc
stc
sbb
clc
icebp
loop
test
into
out
ljmp
test
jb
add
clc
and
add
ss
clc
mov
mov
add
pop
scas
in
mov
or
xbegin
add
das
or
incl
add
imul
add
adc
jmp
clc
or
xchg
pop
aad
scas
cmpsl
clc
adc
add
test
sub
xchg
jecxz
fstpt
jno
add
and
add
clc
fwait
xchg
dec
cmp
f2xm1
mov
cmp
sbb
int3
test
movsb
clc
pushf
shrb
fnsave
aad
or
das
ds
loopne
loopne
outsl
add
cld
mov
inc
clc
aas
fsubrs
mov
pop
lcall
jbe,pn
in
pop
add
add
shll
add
mov
lods
and
mov
xor
jbe
clc
pusha
add
push
adc
add
rclb
fimull
clc
rcll
or
sbb
clc
outsb
sub
add
push
add
iret
and
add
clc
inc
add
and
xchg
fisubs
add
add
add
ret
pop
inc
add
mov
outsl
push
add
xabort
insb
cmp
js
clc
std
out
sbb
clc
mov
ret
clc
cli
mov
adc
add
mov
mov
dec
or
mov
or
sahf
jge
mov
add
das
nop
iret
sar
nopl
inc
clc
or
data16
xchg
std
pop
xchg
es
xbegin
add
and
add
push
add
dec
jp
mov
shlb
jl
clc
call
xchg
xchg
add
pop
push
mov
cltd
push
add
dec
rcrl
add
or
lods
mov
cmp
add
cmp
std
adc
add
movsl
clc
add
mov
mov
push
add
mov
add
add
clc
hlt
xor
es
pop
clc
push
icebp
or
ljmp
xchg
xchg
cmp
add
call
clc
jbe
clc
hlt
in
lods
inc
add
out
sub
add
aas
cmp
and
add
aam
clc
shlb
xor
add
clc
push
add
mov
mov
cmpsb
clc
push
add
push
call
clc
vcomiss
add
add
add
sti
adc
add
clc
inc
clc
outsb
mov
clc
cmc
mov
pop
add
add
aam
clc
lcall
clc
xchg
push
add
or
movq
add
add
lea
clc
xor
add
add
add
es
sbb
adc
add
mov
cmp
mov
xchg
add
lock
subps
cmp
cli
xabort
mov
idiv
ds
clc
cmp
mov
cmp
jae
add
clc
push
add
fimull
add
cs
std
call
add
daa
clc
sti
xchg
es
aam
xor
add
dec
pop
pop
pop
pusha
add
mov
mov
adc
clc
xchg
sub
clc
cmp
enter
lcall
hlt
int
clc
inc
clc
jl
clc
jecxz
lret
outsb
and
add
add
cmp
xabort
test
fstpl
xchg
dec
in
and
add
inc
add
mov
clc
ret
clc
mov
add
aaa
pop
aam
add
cli
xor
add
test
idiv
mov
test
or
lahf
xchg
dec
xor
add
scas
sar
cld
and
add
clc
xbegin
test
stos
std
xor
add
pop
inc
clc
pop
out
loopne
into
mov
fsubp
clc
sub
clc
pop
sub
mov
add
not
mov
pop
mov
lret
inc
add
enter
mov
or
lret
ret
clc
sarb
scas
jno
add
add
push
fs
daa
clc
dec
mov
fdivr
popf
sar
jno
add
add
add
popa
add
jg
dec
jae
add
imul
ret
clc
insb
xchg
or
adc
add
mov
dec
jg
mov
add
cmp
inc
clc
in
in
cltd
add
add
jae
add
leave
mov
ficomps
roll
jle
mov
pop
clc
jo
add
outsl
dec
fisttps
dec
dec
add
add
dec
add
add
clc
push
clc
and
inc
add
sar
clc
add
inc
add
fdivrp
pop
cmp
std
in
hlt
and
cmp
ja
out
popf
or
clc
lahf
and
cld
cmp
clc
cmp
cmpsb
clc
sub
test
add
add
xchg
cmp
clc
dec
mov
clc
mov
mov
push
fsubr
test
cmp
adc
add
data16
mov
sbb
add
push
add
ficompl
icebp
adc
add
add
insl
jecxz
xchg
jae
add
clc
ficompl
jo
add
inc
add
add
add
cmp
daa
clc
repz
add
add
add
or
clc
daa
clc
push
add
clc
xlat
xlat
stos
sbb
clc
cmp
cmp
cmp
clc
loop
cmp
clc
mov
add
test
clc
mov
aas
out
jne
add
mov
arpl
add
aad
dec
dec
xor
add
clc
sbb
clc
pop
sbb
clc
arpl
add
out
loope
lcall
add
loopne
stc
jo
add
ds
add
pop
out
add
add
jle
aas
out
aaa
inc
clc
fadd
clc
pop
and
xchg
mov
fbstp
clc
or
add
cmp
clc
and
cmp
clc
dec
sbb
loope
xlat
jp
in
xchg
add
add
sub
add
clc
aas
js
inc
clc
adc
rolb
clc
jge
add
insl
adc
popa
add
nop
lahf
dec
aam
out
dec
movsl
clc
in
and
add
imul
add
sar
jo
add
add
fstpl
add
clc
pop
mov
clc
jge
sub
ret
clc
imul
daa
clc
xor
add
add
dec
enter
fstl
sbb
clc
ja
mov
xchg
push
add
enter
aas
jo
add
xchg
dec
test
xchg
ds
mov
add
and
add
insl
xchg
sti
pop
xor
add
inc
add
push
data16
arpl
add
nop
pop
cmpsl
clc
aam
cld
pop
sbb
pop
mov
clc
pop
xor
ljmp
lcall
xchg
bnd
jno
add
add
sub
add
or
dec
adc
add
fimull
movsb
clc
mov
leave
xor
add
clc
mov
add
clc
xchg
lods
push
add
pop
and
add
add
mov
mov
sbb
clc
loop
jl
mov
dec
add
add
es
push
inc
add
inc
clc
in
mov
out
dec
int3
cmovne
inc
add
ret
mov
sub
pop
aad
and
add
insb
aam
fsubrl
insl
das
push
xabort
fstpt
clc
and
xor
test
add
ds
mov
in
in
mov
ret
clc
mov
mov
clc
inc
clc
adc
std
jle
hlt
in
mov
mov
lock
push
pushl
clc
pop
lret
pusha
add
test
popf
pop
jne
xchg
mov
lcall
sbb
cmp
clc
mov
popa
add
xchg
outsl
ficomps
jmp
clc
popf
add
mov
sub
clc
cltd
not
or
std
out
in
ljmp
mov
sub
jg
cmpsb
clc
jmp
test
xor
add
add
jge
jp
clc
jecxz
ljmp
add
dec
out
out
jnp
jbe
jo
add
mov
clc
inc
clc
out
jae
add
clc
ss
pop
adc
sti
xchg
pop
adc
add
add
clc
das
std
dec
loope
xchg
push
add
loope
xchg
fnstcw
mov
add
shlb
hlt
lahf
cmp
test
add
add
push
xor
add
add
ret
stc
and
add
pop
jbe
ss
inc
add
das
addr16
vunpckhps
add
add
mov
mov
cli
xchg
pop
stos
lock
clc
pop
or
xchg
es
jne
call
clc
mov
inc
clc
nop
dec
xchg
or
hlt
cmc
sub
repz
clc
pusha
add
std
sbb
leave
sub
clc
add
add
push
add
add
push
mov
add
add
xchg
xlat
mov
add
push
icebp
xor
add
add
lock
inc
add
ficoms
cmp
add
xabort
jp
sbb
shlb
add
mov
leave
lret
add
clc
ljmp
xor
add
bound
add
popf
add
add
add
add
add
clc
jp
add
pusha
add
push
loop
or
sub
cmp
lahf
ror
and
add
mov
cld
and
add
add
sbb
or
cwtl
adc
inc
add
leave
jg
fsubrs
and
add
clc
popa
add
inc
add
dec
xchg
ret
push
clc
mov
leave
inc
clc
xor
add
xchg
mov
cmp
jp
pop
sar
add
mov
xor
add
imul
jl
mov
add
xchg
add
add
clc
inc
add
scas
mov
add
cmp
clc
mov
mov
aas
es
inc
clc
adc
add
repz
clc
dec
jl
xor
add
add
sub
xor
add
icebp
dec
cmp
lcall
pop
mov
adc
mov
int3
adc
pop
stos
lea
gs
ret
ss
pop
iret
fsts
add
clc
movsb
clc
test
mov
daa
clc
cld
jne
clc
fcompl
inc
add
and
add
cwtl
test
imul
icebp
pop
nop
pop
push
add
sbb
clc
test
push
add
cs
xchg
addr16
mov
and
add
movsb
clc
cmp
cmp
sub
int
xor
add
sar
clc
cmp
jmp
add
jle
xor
add
add
testb
clc
sbb
nop
scas
sub
adc
cmp
std
aam
stos
or
lret
std
mov
push
add
test
xor
add
add
arpl
add
xor
add
add
fdivrs
add
add
imul
cmp
clc
and
add
or
dec
push
add
jge
add
ja
mov
clc
and
add
shll
add
outsb
and
add
add
clc
ds
cmp
cmp
pop
nop
daa
clc
inc
add
xchg
mov
lea
add
call
add
pop
clc
sahf
mov
or
add
clc
lock
in
cli
in
mov
xchg
or
push
add
pop
out
xchg
dec
inc
clc
jno
add
cmp
clc
jle
mov
add
xchg
je
popa
add
cmp
cmp
enter
in
and
dec
int3
cmp
lahf
clc
mov
fdivs
or
clc
lahf
clc
ret
dec
cli
faddl
add
xor
repz
or
fldcw
icebp
inc
add
mov
sar
mov
fistpl
add
popf
fnstenv
add
clc
mov
shrb
inc
clc
or
bound
add
xchg
pusha
add
adc
add
add
add
push
add
jge
xchg
cmp
clc
add
add
ret
clc
mov
es
popa
add
into
cmp
in
jl
mov
add
mov
int
mov
pop
mov
test
ja
clc
xchg
pushf
mov
clc
cmp
add
dec
dec
ret
clc
or
xor
add
inc
clc
adc
add
clc
call
clc
fisubrs
aaa
mov
xchg
shr
and
dec
dec
sbb
clc
lods
push
add
push
cmpsb
clc
or
clc
gs
mov
add
mov
push
insl
push
into
push
clc
sarb
sub
clc
dec
js
clc
repnz
add
test
xor
add
add
clc
mov
sub
mov
ret
clc
pusha
add
cmp
je
lods
xbegin
jb
add
add
test
aad
clc
es
lahf
cmp
or
clc
imul
xchg
jb
add
loop
push
add
clc
and
add
inc
clc
push
jle
mov
and
add
push
ffreep
clc
stos
imul
mov
idivl
fistl
add
add
movsb
clc
cli
mov
clc
lcall
sub
sti
and
cmp
mov
add
add
lods
sti
xchg
lcall
clc
dec
cmp
add
and
add
fcoms
add
pop
ret
scas
outsb
jno
add
clc
mov
fisttps
add
adc
add
sub
or
hlt
sub
clc
fwait
mov
add
cli
sar
clc
jmp
push
add
nop
test
add
cmpsl
clc
rolb
lock
inc
add
dec
lcall
int3
ja
add
sbb
add
stos
clc
push
add
aaa
sub
dec
jmp
add
and
push
cmpsl
clc
testl
cmp
clc
out
jo
add
add
jae
add
add
add
bound
add
push
add
clc
jl
lock
sysret
clc
insb
mov
add
or
push
sub
xchg
mov
and
add
sub
sahf
xor
add
xor
clc
leave
jne
clc
jl
push
add
xchg
mov
clc
inc
clc
fcompl
xchg
xchg
ljmp
add
xor
repnz
je
add
mov
add
daa
clc
jg
pop
divb
add
cmp
clc
lods
aad
push
add
push
jecxz,pn
fsubs
add
cmp
cld
push
pop
mov
dec
xchg
or
clc
pusha
add
int
clc
out
loope
out
cmp
cmp
scas
xor
mov
add
add
fisubrl
inc
add
inc
clc
xbegin
int3
sar
mov
clc
fchs
clc
repz
test
inc
clc
jns
icebp
inc
clc
test
sub
mov
add
add
pop
out
lods
fldcw
cs
add
mov
xlat
xchg
push
add
adc
add
add
jo
add
mov
add
push
add
in
and
add
jg
push
add
ja
clc
cmp
add
mov
sar
rcl
bound
add
clc
in
outsl
cmp
jge
clc
mov
add
add
in
push
inc
clc
cmpsl
clc
mov
clc
cltd
and
add
imul
jmp
movsb
clc
stc
dec
pusha
add
mov
iret
cmpsl
clc
cs
add
mov
pusha
add
addr16
cmp
add
je
clc
test
sar
cmpsl
clc
sub
inc
clc
xlat
sbb
clc
data16
imul
cld
test
add
or
mov
add
pop
cmc
cmc
ret
clc
shrl
add
cmp
dec
fisubs
add
xbegin
clc
adc
add
int
cmp
clc
add
add
sar
pop
enter
add
add
out
push
clc
adc
add
add
mov
mov
add
aaa
push
add
mov
imul
clc
xor
add
test
stos
icebp
jae
add
fs
out
ret
clc
xchg
add
jecxz
aam
addr16
cld
cmp
ljmp
mov
push
add
bnd
xor
push
movsl
clc
xbegin
inc
add
clc
jecxz
mov
clc
pop
ds
cmp
add
jg
mov
es
push
dec
mov
sbb
add
jne
add
stc
shr
aam
dec
insl
push
add
sbb
push
clc
mov
jl
or
sahf
call
sbb
clc
sbb
pop
cmp
jp
push
add
sbb
add
add
mov
add
xchg
inc
add
and
add
xchg
sbb
add
sub
mov
add
add
clc
test
aas
sbb
add
and
add
push
add
aaa
aam
clc
mov
add
lods
mov
jbe
mov
add
adc
add
into
or
mov
clc
mov
out
je
clc
pop
clc
mov
mov
movsl
clc
pop
add
add
mov
clc
jne
add
clc
sbb
outsl
int3
xor
add
sbb
xchg
nop
add
add
inc
add
or
pusha
add
shrb
mov
sub
add
mov
test
push
add
data16
pop
clc
mov
sar
call
in
sbb
add
cmp
xor
add
add
mov
jl,pn
jnp
fs
fimuls
sbb
push
cmp
mov
mov
int
add
sub
add
aad
add
cli
sti
push
or
in
xchg
pop
clc
js
loopne
loopne
cmp
mov
lods
dec
xor
xchg
xbegin
sbb
add
jmp
xor
add
clc
idiv
out
pop
enter
dec
and
add
or
stc
xor
add
or
pop
jp
add
jae
add
mov
clc
into
add
add
clc
xchg
inc
clc
test
aam
cmp
add
bound
add
movsb
clc
cmp
push
call
sub
clc
jae
add
add
mull
add
cmpsb
clc
lods
iret
fisubl
mov
cmp
clc
and
xbegin
adc
clc
push
add
dec
call
jae
add
add
scas
pop
mov
cmp
iret
push
push
add
xor
add
fsubp
clc
dec
mov
clc
jno
add
ror
repz
pop
daa
clc
cmp
pop
cmp
fldenv
add
clc
aad
imul
clc
inc
clc
aam
clc
or
add
pop
in
jl
sub
cmp
stos
mov
clc
in
scas
inc
clc
cmp
rolb
clc
xor
add
loopne
or
clc
rclb
cmp
sub
adc
add
xor
mov
add
push
add
clc
lcall
inc
clc
and
add
clc
jo
add
clc
loopne
add
cwtl
mov
add
mov
pop
outsb
clc
pop
insb
negb
sub
clc
add
add
ss
clc
in
mov
clc
pop
sbb
add
add
lahf
push
out
in
adc
and
add
jbe
cmp
pop
cmpsb
clc
sub
out
jnp
adc
ret
add
ret
add
mov
sub
aad
clc
xchg
leave
mov
sbb
clc
cwtl
in
xchg
out
cmp
in
mov
movsb
clc
fwait
inc
clc
lock
jl
xchg
jmp
jne
clc
fnstsw
add
pop
scas
xchg
dec
xlat
dec
adc
inc
add
inc
clc
pusha
add
pop
ss
clc
xor
add
lret
clc
xchg
jp
add
add
cmpsl
clc
ret
clc
leave
popf
cmpsl
clc
cmpsb
clc
sbb
out
xchg
test
fadds
or
mov
pusha
add
cmp
push
das
cmpsb
clc
in
imul
clc
call
clc
stos
xchg
mov
lock
pop
das
push
clc
mov
and
mov
clc
fbstp
push
sbb
test
push
add
adc
cmp
inc
add
push
cmp
ret
clc
sub
outsb
inc
clc
xchg
or
xor
clc
sbb
pop
and
jmp
and
add
leave
out
fdivl
ja
lods
in
repnz
add
fdivrl
addr16
jge
fsubrs
fmuls
mov
clc
mov
add
add
aam
in
xchg
fistl
out
mov
sahf
cltd
inc
add
push
cmpsl
clc
or
mov
fucom
clc
xchg
push
data16
xchg
test
ss
add
sub
or
clc
add
xor
lods
in
lods
hlt
cmpsl
clc
daa
clc
xlat
cmc
sbb
adc
add
clc
xchg
sbb
mov
test
dec
stos
ret
clc
dec
loopne
jo
add
clc
ds
pop
or
xbegin
fwait
aas
jle
pop
imul
aam
sub
cmp
insb
rcll
add
jno
add
in
out
mov
clc
sar
clc
xchg
mov
movsl
clc
xchg
rolb
sbb
sahf
test
add
cmp
loope
lahf
imul
repnz
test
clc
inc
clc
stc
xlat
xchg
pop
shlb
add
dec
xabort
jae
add
mov
cltd
in
and
add
add
pop
rcrb
gs
aaa
cmp
ja
add
mov
clc
sub
mov
push
cmp
jl
clc
sar
sar
cmp
test
loopne
mov
fcoml
add
jb
add
es
mov
adc
add
clc
sahf
fisttpll
add
adc
add
cmp
pop
mov
add
inc
add
addr16
imul
xor
sub
push
mov
pusha
add
cmp
and
add
clc
sub
clc
out
daa
clc
vmread
or
clc
lock
jmp
add
add
sub
leave
cmp
mov
clc
mov
inc
add
faddp
clc
rcrl
fimuls
out
mov
add
iret
jge
cmp
inc
add
inc
clc
enter
xor
add
sbb
clc
jg
cmp
popf
imul
cmp
add
add
add
mov
mov
clc
into
lods
pop
repnz
xchg
in
push
add
arpl
add
mov
add
mov
add
stc
nop
xabort
clc
pop
dec
mov
clc
fld
clc
xchg
fidivrs
lahf
leave
fmull
add
sub
clc
inc
add
test
dec
gs
test
decl
pop
setb
add
add
pop
sahf
jbe
clc
xor
add
add
jecxz
jp
clc
or
pop
clc
and
lods
sbb
add
jp
clc
popf
xor
add
clc
mov
mov
insl
shlb
pop
movsb
clc
icebp
cmp
adc
or
in
xchg
cwtl
ljmp
add
outsl
sar
pop
pop
in
pop
clc
add
add
insl
pop
in
cmpsb
clc
cmp
insl
xor
add
cld
mov
into
push
scas
ror
cld
cmp
imul
out
clc
xor
add
add
fwait
jo,pt
add
xor
and
sahf
cltd
add
add
clc
mov
sub
aaa
pushf
mov
mov
ret
or
clc
xor
add
jb
add
sahf
sarb
nop
cmp
clc
arpl
add
add
call
xchg
xchg
outsb
fsubr
es
pop
jnp
adc
add
add
mov
lock
mov
add
add
test
jmp
clc
mov
add
clc
mov
add
fisttpll
ss
in
test
rcrb
clc
loope
jbe
dec
imul
arpl
add
dec
into
ljmp
pop
sar
clc
cs
ss
inc
add
mov
add
cwtl
clc
xbegin
daa
clc
out
mov
jp
cmp
add
clc
dec
ret
clc
mov
add
mov
add
clc
popf
aaa
movsl
clc
test
clc
cwtl
xchg
lahf
in
dec
cmc
xlat
ja
add
push
push
add
je
xchg
mov
pop
pop
clc
mov
jnp
loop
jmp
xchg
lods
punpckldq
add
aam
mov
jae
add
pop
inc
add
mov
add
pop
adc
shrb
push
stos
hlt
clc
in
aas
roll
add
scas
inc
clc
fimuls
in
fcomps
adc
jmp
ret
xchg
mov
mov
loop
ret
cli
cmp
clc
ja
jnp
adc
add
add
and
add
cmp
mov
mov
loope
repnz
mov
clc
mov
outsl
fs
push
add
mov
sub
push
add
movsb
clc
jp
add
mov
clc
add
add
repnz
roll
jne
xor
add
loop
lods
aas
pop
in
clc
jns
add
inc
clc
cmp
mov
mov
cmc
outsl
jns
mov
cmp
mov
stc
inc
add
sar
jl
imul
pop
xchg
and
xor
add
leave
rdtsc
add
cmc
sbb
clc
cmp
cmp
data16
sub
add
cmpsb
clc
popa
add
test
push
add
mov
clc
jns
add
or
clc
push
in
inc
add
testl
clc
test
loope
fbstp
add
or
stos
scas
test
clc
xchg
idivb
dec
sub
add
shrl
sub
jae
add
or
dec
loope
imul
inc
clc
mov
adc
add
mov
pop
lret
out
sub
fisubl
add
add
add
mov
clc
ss
mov
xchg
scas
push
pop
in
sub
mov
fsubl
dec
add
add
lods
movsl
clc
leave
mov
clc
push
dec
imul
aam
aad
clc
xchg
nop
mov
insb
inc
add
mov
sub
sahf
and
add
add
clc
xchg
aaa
dec
repnz
clc
or
pop
pop
enter
jecxz
mov
pop
clc
xor
add
clc
mov
add
add
enter
add
or
clc
push
sub
stos
and
clc
inc
clc
lret
xchg
push
fwait
dec
test
mov
add
xchg
cmpsl
clc
sub
mov
inc
clc
outsl
jl
xor
add
sub
inc
clc
jno
add
mov
prefetch
clc
flds
data16
pop
sbb
adc
add
lods
mov
pushl
add
mov
clc
jns
dec
sub
mov
adc
or
clc
adc
add
aad
mov
dec
clc
in
dec
out
pop
clc
adc
add
cmp
sub
shlb
add
int3
out
fcomps
mov
add
out
cltd
cmp
clc
cmp
sub
add
sar
aas
sbb
add
xbegin
cmp
clc
cmp
repz
jbe
mov
mov
add
lods
in
ret
clc
sbb
pushf
sti
daa
clc
cmpsl
clc
xchg
lcall
push
leave
iret
fucomp
jne
leave
lea
or
test
add
and
add
push
add
and
negb
mov
inc
clc
lret
sbb
dec
out
div
xchg
lret
je
dec
push
pushf
aas
call
add
pop
lods
xchg
sub
clc
mov
add
iret
sbb
or
jno
add
xchg
push
add
pop
inc
clc
lods
je
clc
sarl
mov
xor
push
cmc
push
mov
add
mov
test
cmp
cmp
sub
clc
js
add
add
add
pop
mov
es
push
or
or
cld
push
cli
std
imul
pop
mov
call
sahf
mov
ljmp
fcmovu
xor
clc
push
addr16
jmp
clc
xlat
sub
in
xchg
mov
roll
add
add
clc
or
clc
mov
adc
clc
popf
xchg
sar
jb
add
add
sub
add
sar
and
add
add
add
xchg
mov
clc
movsl
clc
push
jns
cmpsl
clc
lret
pop
xor
fs
in
in
or
mov
add
scas
js
and
add
cltd
mov
mov
ret
add
sar
add
cld
jmp
mov
clc
dec
inc
clc
sbb
clc
push
jns
clc
xor
add
add
inc
clc
or
je
clc
sti
pop
shr
icebp
sub
or
sar
mov
add
xor
add
in
adc
add
jecxz
xchg
mov
into
pop
imul
add
lahf
in
test
enter
nopl
mov
push
test
add
add
push
clc
mov
and
clc
add
add
add
inc
clc
daa
clc
arpl
add
pop
out
inc
clc
xlat
mov
clc
mov
add
test
clc
stos
cli
xchg
lods
or
clc
jnp
push
add
mov
clc
lock
clc
add
add
push
nop
mov
cmp
add
mov
test
mov
cmp
aad
clc
sbb
clc
xor
add
sbb
jbe
push
mov
mov
hlt
fstl
add
je
pop
bound
add
fidivl
add
clc
ljmp
add
nop
push
clc
leave
inc
clc
mov
mov
mov
clc
pusha
add
dec
sar
jl
fsubrl
clc
mov
clc
fs
sub
mov
jbe
push
dec
cmp
add
inc
add
push
add
jge
lods
push
add
dec
push
or
clc
sbb
and
add
add
cltd
ja
popf
mov
add
add
js
ds
adc
dec
xor
aam
hlt
test
cmp
add
dec
ret
clc
scas
mov
mov
aad
cmp
icebp
cmp
into
test
fwait
and
add
push
cmp
clc
scas
lret
repz
add
add
js
sub
add
iret
xchg
pop
dec
out
cmc
lea
int
out
xor
jbe
add
std
push
add
mov
add
xor
mov
out
aad
clc
push
imull
and
add
add
sar
ss
clc
add
add
jmp
mov
clc
or
sbb
add
add
push
fadds
add
push
inc
add
test
inc
add
sbb
jo
add
clc
std
bound
add
add
popa
add
jnp
ja
clc
mov
add
nop
mov
mov
iret
and
add
scas
jb
add
jne
test
nop
mov
xchg
daa
clc
cwtl
xbegin
push
add
sub
out
cwtl
sbb
add
sbb
clc
cli
add
sub
fnsave
add
add
clc
sub
cmp
xor
add
push
push
add
sarl
mov
add
dec
pushf
aaa
mov
shlb
add
inc
clc
add
add
dec
cmp
sub
or
add
shrl
add
sbb
clc
cmc
xlat
popf
bound
add
xchg
and
add
xchg
mulb
lock
sub
test
push
inc
add
outsl
call
mov
add
in
shrl
mov
add
cli
loop
adc
add
lods
pop
xor
add
lock
add
movsb
clc
cmp
add
and
add
jl
clc
jo
add
clc
xchg
sub
clc
push
mov
add
scas
add
add
add
ret
clc
cmc
test
push
lret
in
push
jbe
clc
sub
clc
je
jae
add
dec
outsb
adc
add
cmc
mov
clc
dec
clc
mov
cmp
mov
xlat
push
sbb
xor
fsts
out
movsb
clc
xchg
enter
push
add
inc
clc
mov
in
add
add
add
xchg
aam
clc
aaa
iret
mov
neg
mov
clc
gs
inc
clc
insb
ss
das
lcall
dec
insb
xchg
push
cmp
mov
outsl
push
clc
cmp
add
sbb
jg
clc
push
popa
add
negl
dec
or
fists
pop
sbb
cmp
add
or
jbe
jmp
ret
clc
pop
jg
add
xchg
mov
add
mov
add
sti
inc
clc
test
adc
add
fwait
add
add
clc
dec
xchg
push
pusha
add
inc
add
addr16
data16
mov
sbb
cld
or
add
clc
cmp
jmp
add
stos
into
jl
mov
gs
ret
clc
dec
mov
add
loope
adc
add
scas
pop
test
adc
add
pop
aam
rorb
clc
cmp
add
add
push
add
mov
clc
mov
jno
add
clc
inc
clc
pop
ljmp
add
out
lcall
xchg
sar
adc
add
add
xor
add
popa
add
sbb
adc
add
nop
or
cmp
cmp
add
clc
pop
inc
clc
dec
or
add
fists
insb
cmp
movsb
clc
jge
cmp
loop
pop
push
mov
js
rorl
add
xor
add
xor
add
mov
nop
js
in
ja
sbb
clc
sub
test
jge
jmp
mov
pop
jecxz
es
xor
add
add
loope
xor
add
and
outsb
sub
jnp
push
clc
sbb
popa
add
cmc
push
add
out
mov
stos
adc
fwait
xchg
sarb
cmpsl
clc
testb
add
neg
pop
repnz
clc
jecxz
xlat
sub
clc
or
add
clc
test
inc
add
mov
add
clc
fisttpll
jp
sub
cli
jnp
aas
je
clc
xlat
pop
lret
add
loopne
jb
add
mov
jae
add
lret
xchg
cmp
adc
add
aas
out
in
xor
sub
add
add
or
add
pop
clc
pop
mov
sbb
add
aam
push
imul
test
movaps
imul
dec
sub
add
add
jae
add
clc
jmp
imul
inc
add
sti
or
data16
dec
leave
sti
push
add
add
add
stos
push
add
or
add
testl
xor
add
or
mov
xchg
mov
test
add
clc
sbb
add
mov
lea
aas
out
mov
clc
sbb
clc
mov
jne
sbb
xchg
lret
sub
add
pop
and
repz
inc
clc
add
clc
or
xchg
add
add
push
add
cmpsb
clc
jo
add
pusha
add
and
sbb
add
aas
arpl
add
add
clc
fnstenv
sbb
add
sbb
inc
clc
dec
push
clc
shr
and
add
mov
sbb
add
sub
clc
inc
add
cwtl
adc
rcrl
pop
aas
push
xabort
add
sbb
clc
or
into
mov
clc
push
clc
repnz
clc
fistpll
add
lret
movsl
clc
loopne
or
daa
clc
or
ret
sub
add
sub
mov
pop
clc
into
push
add
mov
cmpsb
clc
stos
out
adc
clc
push
in
add
add
jns
add
push
add
mov
clc
mov
push
pop
push
add
loopne
mov
jns,pt
xchg
jle
clc
dec
mov
imul
inc
clc
jo
add
clc
ffree
clc
mov
add
mov
pusha
add
push
add
pushf
lods
fstpt
mov
gs
cmpsb
clc
clc
mov
add
dec
in
out
fmull
add
pop
inc
add
pop
mov
clc
cmpsb
clc
fs
dec
stos
push
aad
jge
popf
jp
pop
lcall
add
add
aad
loop
imul
pop
fisubrl
add
xlat
inc
add
sub
into
test
sub
and
add
add
add
add
adc
rcll
add
add
divb
add
mov
clc
cmp
xchg
icebp
sbb
jno
add
rolb
std
mov
clc
daa
clc
test
cmp
clc
mov
clc
int3
xor
add
bswap
out
push
add
in
fwait
dec
fs
mov
loope
pop
data16
rorb
xor
add
add
std
aam
add
loopne
lods
fs
aad
loop
xchg
pop
push
fistpll
add
fucomip
scas
and
mov
add
addr16
jmp
push
push
add
xor
adc
add
add
cmp
clc
inc
add
lret
xchg
pop
rclb
ret
add
and
add
rcrl
clc
xchg
insl
cwtl
mov
add
cmp
mov
add
pop
lods
pusha
add
mov
clc
mov
clc
into
or
jmp
add
popf
shl
clc
js
bound
add
fwait
stc
or
clc
and
add
add
pop
mov
pop
adc
add
cli
cmp
clc
adc
add
clc
inc
add
cmp
out
push
mov
jne
ja
out
sub
add
xchg
pop
or
or
add
ret
clc
pop
das
bound
add
mov
dec
xor
add
in
pusha
add
inc
clc
mov
add
inc
clc
popf
inc
add
div
fcoml
test
jnp
adc
add
es
lea
inc
add
push
add
jne
sbb
jle
add
cmc
loop
das
xbegin
out
jge
out
mov
xchg
es
js
dec
jbe
into
incb
xor
clc
cmp
dec
sarl
or
clc
sar
clc
lcall
cmp
xchg
and
add
mov
clc
outsb
mov
clc
adc
add
add
add
xchg
xbegin
lods
loope
xor
add
push
clc
std
cmpsb
clc
inc
clc
fstl
clc
mov
clc
xor
mov
clc
or
cli
add
mov
add
clc
in
jmp
add
add
push
push
add
outsl
mov
lret
aaa
sbb
xlat
jns
lock
es
inc
add
jno
add
cwtl
mov
test
mov
in
xor
add
shrb
ljmp
clc
sahf
jp
rolb
cmp
in
pop
popa
add
ret
fs
push
out
xor
lock
into
xbegin
clc
push
cmp
and
add
clc
push
clc
dec
clc
dec
in
lock
add
nop
push
lahf
lahf
xchg
in
repz
mov
sub
add
mov
mov
fwait
loope
xchg
pop
cmp
dec
icebp
repnz
jo
add
jge
or
inc
clc
inc
add
adc
add
add
sbb
or
pop
mov
mov
cmp
gs
adc
add
div
mov
mov
add
mov
add
dec
mov
mov
inc
clc
jns,pn
xchg
je
or
or
adc
add
add
mov
add
add
pop
clc
lahf
sti
popa
add
add
dec
fnstsw
fs
xabort
mov
clc
or
sar
clc
mov
pop
pop
fisubs
add
ja
std
leave
adc
add
add
adc
add
clc
clc
push
mov
imul
add
out
xor
add
stos
rclb
add
cmp
shlb
clc
call
sub
cmp
fcomi
lea
clc
mov
push
sar
add
mov
imul
push
add
aam
mov
clc
scas
ret
clc
mov
testb
add
sar
add
or
adc
add
add
xchg
add
ret
clc
js
adc
add
add
or
ret
sahf
cmp
imul
add
and
add
je
jge
gs
push
add
add
dec
into
xor
add
add
outsb
xor
add
or
add
xchg
and
in
dec
mov
lock
add
ret
clc
adc
add
add
out
ret
clc
inc
add
sar
imul
in
sub
jmp
aam
cmp
jno
add
jne
fcomi
fnstcw
into
data16
pop
clc
xabort
xor
add
into
xchg
jg
clc
dec
dec
push
lea
mov
popf
pop
xchg
lods
in
jns
or
add
push
add
sar
out
decb
add
js
sahf
pop
mov
scas
out
js
jbe
push
add
fdivs
add
sbb
clc
mov
lret
add
clc
push
add
sub
add
insb
sar
mov
add
jmp
add
clc
fldcw
inc
clc
mov
bnd
add
sbb
add
insl
or
add
cmp
clc
mov
mov
pushf
out
icebp
mull
clc
pop
mov
clc
clc
lret
cmp
pop
jne
add
repnz
jmp
sti
jle
clc
xor
add
xchg
pop
push
add
inc
add
cltd
inc
add
insl
or
and
popf
and
inc
add
stos
adc
stos
inc
clc
cmpsb
clc
imul
push
and
cwtl
popf
and
pop
or
sti
std
js
clc
xor
add
dec
jg
mov
add
popa
add
sbb
sbb
call
mov
clc
insb
lret
dec
pop
mov
jo
add
jge
aam
clc
pop
loope
pop
dec
aad
sti
jnp
bound
add
clc
insb
arpl
add
aam
push
add
inc
clc
clc
outsl
or
in
mov
add
sub
mov
clc
movsl
clc
into
daa
clc
lods
data16
mov
add
popa
add
fldl
add
cmp
clc
cs
ds
add
mov
gs
mov
ljmp
lea
mov
clc
fimull
push
add
ret
clc
mov
fnstenv
add
clc
je
add
mov
fists
add
insl
pop
push
mov
add
mov
hlt
stos
aam
and
add
push
dec
sub
add
loopne
xor
add
aam
sbb
clc
add
add
pop
clc
xchg
data16
mov
mov
clc
inc
add
dec
outsl
in
ret
sbb
mov
insb
mov
clc
sub
jbe
clc
bound
add
add
push
rcrb
add
add
sbb
pop
clc
mov
popf
add
add
add
add
xor
add
add
clc
call
aam
sbb
jecxz
icebp
icebp
adc
add
and
add
dec
or
add
add
ss
push
clc
stos
mov
es
cli
push
cwtl
cmc
push
sar
gs
shlb
clc
ret
clc
pop
jg
decb
into
aaa
sar
in
mov
loope
stos
mov
add
lahf
cmp
or
mov
jnp
sahf
mov
xchg
cmp
add
or
sarb
clc
cmp
add
and
add
popa
add
jbe
in
sbb
xor
xor
add
add
inc
add
lods
cmpsb
clc
arpl
add
scas
inc
add
in
pushf
or
jo
add
loop
xchg
pop
xchg
inc
clc
mov
add
add
add
clc
mov
xor
sar
es
jbe
cmp
cmc
enter
lahf
push
add
mov
sbb
clc
negb
adc
add
clc
cmpsb
clc
push
add
icebp
out
sub
clc
pop
jle
dec
mov
pop
mov
add
fsubrs
call
xchg
pop
cli
dec
pop
scas
inc
add
push
clc
pop
out
and
add
clc
adc
add
jle
add
mov
add
xor
add
clc
movsb
clc
fbstp
sbb
clc
dec
cwtl
out
xor
add
mov
data16
jae
add
clc
je
sbb
insb
dec
jg
add
sbb
cmpsb
clc
jae
add
sub
clc
fs
cmp
clc
add
imul
clc
addr16
pop
in
adc
add
add
jp
mov
xchg
xor
clc
jbe
cmp
fxtract
test
arpl
add
clc
data16
in
push
clc
and
mov
clc
imull
repnz
jb
add
jns
cmp
add
push
ret
clc
jbe
and
add
add
xchg
dec
cmp
add
out
cmc
leave
mov
pop
pushf
add
add
add
in
into
mov
clc
xchg
dec
lods
sub
sub
out
add
add
sbb
sub
add
jnp
jge
cmp
test
and
add
fimull
and
add
pushl
adc
push
clc
aaa
and
add
cmpsl
clc
jne
in
cmp
add
daa
clc
mov
adc
xchg
jle
push
add
shrb
jge
clc
ret
clc
sub
add
add
jne
adc
add
inc
clc
fiadds
or
xchg
fistps
insl
jge
scas
add
push
add
in
jno
add
ja
cmc
pop
cmp
add
add
ds
push
cmp
add
add
incl
clc
mov
jno
add
clc
push
add
mov
bnd
clc
dec
popf
cmp
pushf
sbb
mov
clc
push
cmc
inc
add
fadd
clc
sti
xchg
insb
sbb
pop
sbb
add
std
sar
out
pop
loope
mov
cmp
mov
add
push
add
ret
clc
arpl
add
sar
add
mov
fwait
xbegin
add
add
dec
xor
add
clc
ja
sbb
popa
add
es
pop
fists
mov
add
xor
lcall
push
add
out
or
lret
clc
cmp
clc
dec
cmp
push
add
popf
mov
push
dec
inc
clc
cmp
add
add
out
inc
clc
leave
dec
mov
add
jo
add
add
or
inc
add
push
fcomps
shrl
add
inc
clc
xor
add
xabort
sar
popa
add
dec
lcall
jnp
jno
add
in
mov
add
add
add
add
lods
stos
cmp
arpl
add
cmp
cs
mov
add
cmp
jbe
push
mov
imul
pop
clc
inc
clc
cltd
xor
add
dec
call
call
ud2
scas
jb
add
add
inc
clc
add
add
mov
clc
fidivrs
cmp
clc
adc
add
add
rorb
xchg
inc
add
adc
add
push
add
clc
pop
repz
add
add
xor
add
clc
minps
clc
adc
add
add
mov
fidivrs
add
inc
add
and
add
clc
pmuludq
fnstcw
add
sub
or
or
testb
push
clc
push
add
je
cmp
push
add
adc
add
add
add
bound
add
add
in
rcrb
push
add
rclb
or
clc
pushf
repnz
clc
mov
sub
add
and
mov
jle
add
sbb
mov
mov
inc
clc
push
add
xor
add
add
movsl
clc
fimuls
mov
clc
mov
clc
inc
clc
lret
xabort
xor
gs
ljmp
test
mov
jbe,pt
arpl
add
add
add
clc
sar
and
xor
xchg
inc
add
pop
jle
cmp
xchg
or
add
add
add
bound
add
clc
sar
aaa
sbb
inc
add
jle
add
add
jno
add
add
insl
sar
adc
add
add
jno
add
clc
sbb
clc
jno
add
sar
popf
dec
add
clc
xchg
clc
cmpsb
clc
mov
xbegin
lea
clc
lret
sar
sbb
leave
out
jp
stos
mov
dec
push
add
scas
inc
clc
adc
add
cmc
dec
add
add
sar
clc
xor
add
xchg
out
enter
and
add
add
xchg
jle
clc
push
add
or
add
das
mov
push
add
jns
clc
roll
mov
addr16
mov
add
xchg
cmp
xor
add
aaa
fnstenv
add
add
inc
add
mov
cmpsb
clc
adc
add
clc
ror
loop
ss
mov
add
call
xchg
jne
adc
add
clc
sub
xchg
sub
or
outsl
std
push
add
ret
clc
mov
clc
mov
ljmp
add
or
push
or
add
nop
popf
aas
cs
sub
jnp
sar
push
add
and
add
add
cltd
mov
adc
inc
clc
add
fwait
loopne
shrl
clc
insl
clc
push
inc
clc
inc
add
imul
adc
add
mov
and
clc
pop
ret
clc
pop
xlat
test
cwtl
dec
int3
call
clc
mov
clc
lock
adc
add
add
add
pop
jne
add
out
clc
lret
insb
mov
test
xlat
call
int3
fiadds
idivl
inc
add
scas
mov
add
add
add
in
sarl
add
jo
add
mov
add
sbb
mov
jb
add
or
add
or
out
mov
and
sub
jnp,pt
add
or
out
dec
mov
add
stos
or
int
data16
cmp
mov
clc
push
jle
clc
add
sar
mov
insl
pop
out
lret
adc
add
clc
pop
xor
add
add
sbb
inc
clc
pop
cmp
lcall
add
and
jb
add
popa
add
in
sub
loopne
cmpsb
clc
jg
pop
movsb
clc
fs
push
outsl
jecxz
hlt
pop
sti
std
mov
pop
scas
inc
clc
jmp
mov
sbb
and
adc
add
je
add
jecxz
mov
jno
add
clc
or
cld
adc
add
clc
nop
cli
cmp
clc
shlb
clc
addr16
xchg
sahf
jge
clc
sbb
clc
adc
add
fstps
xchg
mov
mov
fildll
clc
data16
rcrb
clc
fists
add
repnz
add
add
clc
jle
sbb
add
dec
mov
add
push
add
gs
mov
jns
pop
outsl
and
add
and
mov
xor
add
sti
and
add
add
add
ja
int3
sti
ret
clc
repnz
clc
pop
test
pop
insb
in
cmp
clc
adc
add
je
data16
jecxz
loopne
sbb
cmc
inc
clc
dec
xchg
dec
aaa
ret
clc
sahf
in
dec
rolb
add
leave
sub
add
in
int3
mov
mov
mov
imul
push
xor
fiadds
das
mov
jno
add
add
inc
add
je
add
out
cs
xbegin
add
insl
sarl
ljmp
xchg
and
push
xor
add
imul
or
clc
push
fmull
inc
clc
popa
add
and
add
clc
js
mov
add
add
add
sbb
outsb
mov
mov
add
xor
add
clc
call
clc
test
fsubrs
mov
xabort
out
in
popf
inc
add
imul
clc
mov
mov
aaa
inc
add
dec
mov
sar
lahf
imull
mov
mov
ficoms
clc
imul
sub
scas
fmull
dec
mov
push
clc
xchg
sbb
cmp
clc
test
sub
cmp
ja
mov
mov
mov
clc
dec
out
jl
add
or
clc
scas
xchg
jl
call
add
mov
clc
pop
clc
pusha
add
sub
add
cmp
imul
add
shll
popf
xchg
lock
jno
add
js
add
jae
add
clc
cmp
inc
add
jg
sbb
clc
sti
frstor
add
adc
add
in
mov
lods
add
add
insb
outsl
es
push
add
mov
or
clc
xor
add
and
add
jmp
clc
sbb
clc
sar
clc
imul
add
add
add
testl
dec
sbb
sub
call
ss
rcll
add
clc
mov
movsl
clc
mov
jecxz
jnp
pop
sti
mov
adc
add
inc
add
insb
xor
add
mov
add
iret
fisttpll
cmpsb
clc
movsl
clc
sti
mov
dec
aaa
pop
mov
add
dec
inc
clc
mov
sbb
mov
clc
push
mov
addr16
fs
notb
mul
clc
jmp
add
out
sti
push
clc
insb
test
movsl
clc
push
add
mov
sti
aad
pop
out
aam
ja
clc
stos
insl
fisttps
clc
outsl
call
inc
clc
sar
add
nop
lret
fisubl
mov
cwtl
clc
adc
add
add
cmp
add
or
add
cmp
inc
add
in
add
add
add
add
push
shr
xchg
sahf
xchg
xchg
fcmove
mov
fdivrl
leave
jns
add
pop
clc
call
xchg
es
lock
idivb
cmpsl
clc
dec
add
add
bound
add
add
bound
add
add
add
clc
mov
sar
movsl
clc
leave
push
add
adc
add
add
rclb
pushf
xchg
ret
clc
cmp
jbe
sahf
sarl
adc
into
mov
clc
or
mov
fcoml
add
mov
add
cmp
clc
aam
add
inc
add
xchg
inc
clc
jnp
out
xor
add
test
in
fists
add
add
inc
add
lea
lret
add
push
cmp
mov
add
add
add
add
ret
clc
add
add
je
clc
ds
add
addr16
aam
mov
add
bound
add
cmp
add
jge
add
mov
dec
sahf
cmp
clc
jbe
add
mov
fwait
sub
add
mov
outsb
enter
push
dec
sar
loop
add
add
add
sub
cwtl
add
add
imull
clc
and
push
add
sub
fwait
pushf
mov
and
jp
lea
mov
adc
add
mov
sarl
jmp
jge
cmp
add
dec
push
add
into
bound
add
add
clc
dec
mov
add
adc
ret
clc
jns
add
mov
add
xchg
jg
clc
jnp
add
mov
scas
in
sbb
push
dec
sub
clc
xor
add
jp
clc
dec
xchg
insb
ret
clc
xor
add
xor
add
outsb
ds
xchg
add
add
push
add
mov
xchg
push
imul
sub
or
gs
jno
add
clc
sar
mov
ret
clc
hlt
sub
add
das
fdivr
pop
call
sbb
lock
clc
mov
cmp
dec
fnstsw
mov
clc
jnp
clc
sub
xabort
data16
xor
add
inc
clc
in
lock
add
fdivp
adc
fdivrp
xor
add
add
push
xbegin
clc
ret
clc
mov
mov
cltd
or
push
add
jge
lock
add
clc
mov
icebp
cli
xor
add
clc
xchg
cwtl
sbb
clc
test
adc
add
add
sbb
add
inc
clc
add
add
jmp
push
sub
xchg
or
pop
jmp
lret
dec
push
add
xor
add
dec
add
add
push
clc
dec
stos
negl
clc
cmp
pusha
add
mov
jb
add
add
pusha
add
dec
push
clc
add
add
add
add
clc
cmp
xor
jp
xchg
aam
cs
cmp
clc
cwtl
mov
daa
clc
pop
cwtl
cmp
lret
xchg
cmpsl
clc
in
dec
ret
clc
inc
clc
pushf
addr16
lods
data16
popa
add
out
add
add
add
or
ror
loop
mov
int
mov
clc
sub
sar
jge
and
add
clc
xchg
mov
cs
clc
mov
je
clc
icebp
fwait
push
add
rcrl
out
jg
dec
push
clc
gs
push
loop
ljmp
insl
stos
cmp
clc
xor
add
mov
cmp
push
add
xchg
fisttpl
out
or
jno
add
clc
pop
mov
cli
push
add
mov
clc
sar
clc
jg
pop
sub
cld
sahf
pushf
add
add
clc
call
ja
xabort
sub
add
popa
add
cs
sub
add
xchg
shr
rcll
clc
jl
ljmp
or
xchg
inc
add
pop
negb
xchg
pop
cmc
push
push
into
rclb
add
and
fiadds
add
in
pop
mov
test
add
rcrl
cmc
out
negb
mov
test
bound
add
clc
adc
add
test
insl
add
inc
clc
xchg
std
ret
add
cmp
clc
pop
sar
add
inc
add
add
rcr
jbe
adc
add
add
push
jg
sub
push
add
lcall
clc
jle
pop
jmp
clc
cmp
xbegin
vmovaps
lahf
inc
clc
cmp
xor
lret
jle
clc
stos
xchg
vucomiss
dec
sahf
pop
or
pop
sbb
dec
inc
add
ret
add
or
and
add
add
inc
add
fidivs
pushf
jg
push
mov
xchg
jae
add
insb
out
cmp
das
fwait
push
xchg
daa
clc
and
add
or
out
sub
push
imul
test
out
sbb
add
jae
add
std
pop
xchg
int3
fs
pop
sub
add
push
clc
ret
lahf
inc
add
cmp
add
dec
das
cmpsl
clc
pop
inc
clc
cwtl
adc
add
add
add
adc
add
add
in
clc
cmp
clc
loop
sbb
pushf
xchg
mov
lret
clc
lea
popf
ss
push
add
add
add
lods
dec
cmp
pop
pop
clc
lret
fucomi
jbe
clc
fwait
mov
sar
xor
add
xchg
cmp
add
sbb
mov
add
hlt
and
add
rcrl
divb
out
pop
xchg
lret
shrb
jmp
or
fcomps
stos
lret
jge
scas
cwtl
mov
jge
mov
add
pop
mov
and
add
add
sub
into
sub
jae
add
clc
test
rol
clc
xchg
jne
popf
pop
sub
stc
inc
clc
sbb
inc
add
cmp
mov
and
add
clc
cmp
in
ret
mov
add
ret
clc
xlat
js
inc
clc
cmp
clc
push
add
mov
mov
cmp
xchg
cmp
repnz
pop
inc
add
jbe
icebp
inc
clc
pop
movsl
clc
clc
je
cmp
pop
sbb
add
push
xchg
cmovp
clc
xor
add
jg
clc
scas
hlt
jge
clc
mov
in
imul
cmp
sar
xchg
ret
clc
dec
movsl
clc
das
loopne
sub
xchg
add
add
js
sar
inc
add
jl
div
jp
sub
mov
shlb
mov
push
add
xchg
lods
lahf
or
add
inc
clc
sub
imul
add
sar
lock
and
add
jecxz
cmpsl
clc
mov
clc
shl
clc
in
ja
lods
out
stc
insl
push
xor
clc
push
lret
and
add
or
clc
test
mov
es
loopne
jmp
stc
cmp
cs
dec
lret
cmp
stos
jmp
xor
add
and
add
loope
cld
addr16
mov
cmp
pop
cmp
clc
loop
divl
in
sub
and
outsl
shlb
add
stos
sbb
clc
inc
add
filds
add
scas
mov
insb
push
push
add
jne
pop
mov
add
mov
clc
in
fisubrs
clc
xor
add
clc
xchg
xor
add
add
mov
sbb
add
inc
clc
loopne
or
clc
inc
clc
jecxz
sub
mov
dec
adc
add
add
fistl
into
imul
inc
add
popf
push
add
mov
push
sbb
add
sub
add
add
add
pop
xchg
lahf
dec
mov
imul
add
cmpsl
clc
cmp
es
test
cmp
xchg
add
add
clc
je
push
add
enter
testl
add
sbb
clc
mov
clc
call
outsb
out
inc
clc
sahf
xor
push
add
movsb
clc
out
aas
or
sahf
loop
fists
add
insb
and
add
xor
add
add
clc
pop
jae
add
fucompp
incl
add
iret
ja
dec
xor
add
xchg
mulb
aas
mov
sbb
clc
mov
clc
sahf
xor
loopne
jge
clc
stos
dec
jge
xchg
fnstenv
add
push
sbb
or
xor
pushf
xlat
addr16
xchg
incl
add
jle
mov
clc
notl
not
pop
arpl
add
mov
cmp
mov
dec
jge
out
pop
clc
adc
add
clc
mov
clc
data16
sti
push
xor
add
in
cmp
outsb
push
sub
add
adc
add
insb
sahf
add
add
lret
cmp
insl
add
add
clc
mov
add
lea
fisubl
add
add
add
ds
push
clc
sub
adc
add
pushf
and
add
aam
ljmp
or
popf
mov
clc
add
add
mov
add
stos
xabort
scas
sub
sbb
xlat
adc
add
sub
xor
add
mov
add
add
sbb
add
rol
clc
cmp
mov
cs
clc
xlat
loope
cli
jns
xchg
movsl
clc
dec
enter
or
insb
loopne
mov
clc
clc
mov
xchg
jp
mov
nop
jb
add
pop
fwait
stos
mov
ror
adc
add
add
lahf
sti
cmpsl
clc
ja
push
popf
out
das
inc
clc
je
cmp
lret
push
clc
mov
add
mov
jo
add
push
sbb
xchg
sub
shl
xabort
adc
pop
cmp
add
cmp
cmp
add
out
push
clc
xbegin
loope
or
mov
add
add
sbb
sub
xchg
fucomip
xchg
mov
repnz
std
insl
cld
push
jge
sub
push
adc
add
fdivr
push
in
xor
push
clc
mov
mov
clc
sbb
clc
faddl
cmp
add
incl
push
add
mov
mov
jne
imulb
add
pop
daa
clc
data16
dec
fbld
add
or
enter
inc
clc
mov
clc
dec
insl
popa
add
test
clc
repz
jae
add
add
jnp
add
mov
sti
icebp
dec
rorb
add
cs
int3
sar
add
xchg
shrb
jge
fistpl
fldenv
ret
clc
lahf
das
insl
cmp
clc
clc
and
add
clc
mov
cmp
mov
add
or
es
mov
fwait
and
mov
add
xchg
sub
clc
aaa
mov
mov
insb
adc
add
es
sub
add
add
cwtl
mov
add
pop
std
cs
add
add
sbb
add
sar
clc
adc
add
mov
aad
xor
add
test
mov
test
add
lret
sahf
inc
clc
add
sar
lret
pop
aas
mov
clc
add
add
push
add
ror
scas
sub
clc
inc
add
mov
out
pop
add
in
fwait
scas
adc
inc
clc
es
data16
pop
das
je
push
sub
mov
dec
mov
out
pop
daa
clc
xlat
das
mov
sbb
repz
inc
clc
roll
add
gs
cwtl
mov
adc
add
clc
adc
add
int
clc
xchg
mov
fwait
dec
add
add
add
mov
clc
pusha
add
bound
add
inc
add
xchg
out
jb
add
xchg
mov
clc
test
out
push
clc
stc
cmp
jne
mov
clc
cmpsb
clc
icebp
pop
movsb
clc
cmp
add
mov
add
mov
mov
pop
repz
pop
cmpsl
clc
pop
xor
add
cmpsl
clc
lahf
cmp
inc
add
ret
clc
inc
add
or
stos
sub
mov
add
xor
add
add
in
adc
inc
add
push
add
imul
daa
clc
int
clc
xor
add
add
mov
push
sub
adc
add
clc
sbb
push
add
and
cmp
adc
clc
mov
and
add
xchg
pushf
cmp
bound
add
add
test
jo
dec
and
add
add
mov
xchg
mov
clc
cwtl
mov
clc
lock
lods
or
pop
push
or
dec
dec
lods
and
add
adc
add
mov
ret
add
dec
push
add
xchg
dec
inc
clc
mov
add
arpl
add
inc
add
js
pcmpeqw
fdivl
add
adc
pushf
gs
xchg
jecxz
add
ja
push
add
aas
sbb
adc
add
push
add
sbb
insb
mov
cmc
das
push
jbe
cmp
push
or
sbb
and
add
cmp
clc
push
add
test
clc
or
xabort
add
outsb
sar
cltd
movsl
clc
test
es
int3
in
mov
stos
pop
xchg
lret
test
inc
clc
cmc
out
outsb
call
stos
fildl
clc
push
pop
add
add
addr16
aas
jecxz
mov
add
movsl
clc
mov
cmp
cmpsb
clc
pop
xchg
test
pop
bound
add
add
pop
ss
fwait
mov
stc
cmp
clc
jp
fs
outsb
jnp
clc
push
sub
dec
sub
jge
jae
add
int3
aaa
sub
mov
add
and
add
xor
add
clc
cmp
jmp
and
mov
push
pop
pop
and
add
add
paddusw
clc
sarb
and
add
xchg
insb
clc
xlat
pop
mov
add
je
sbb
test
add
jge
add
mov
jge
insb
jmp
sahf
xchg
cmp
xchg
and
cmp
aaa
xor
pop
fsts
data16
cli
push
add
pop
movsl
clc
mov
bound
add
cmc
pop
cmp
clc
mov
mov
pop
push
jge
xor
add
js
movsl
clc
ds
cmp
clc
mov
pop
shrl
clc
dec
xchg
lods
js
clc
xlat
rcl
mov
adc
add
add
adc
add
mov
mov
clc
mov
gs
adc
clc
mov
dec
bound
add
popf
jnp
clc
lcall
sti
aas
adc
es
daa
clc
and
add
mov
cmpsb
clc
dec
mov
repz
or
fsubs
inc
clc
test
dec
inc
clc
push
scas
jge
imul
mov
mov
rorl
cwtl
and
ss
outsb
ja
data16
enter
xor
xchg
mov
clc
movsl
clc
popf
mov
cmp
fs
mov
clc
add
add
shr
jb
add
in
or
mov
testb
ds
in
sub
clc
fucomi
mov
insl
push
add
push
xchg
mov
sub
add
ss
add
int
clc
jp
sub
clc
sbb
add
leave
pop
sti
sti
sar
xchg
push
lods
shll
lret
xlat
xchg
dec
cmp
test
call
lahf
aad
add
fdivrl
das
xchg
nop
loope
fcmovne
and
xchg
mov
pop
mov
clc
paddsb
add
cmp
xlat
ret
clc
cs
outsb
js
push
clc
xchg
movsl
clc
fadds
add
or
clc
inc
add
stos
popa
add
stc
sbb
add
clc
push
add
es
clc
push
test
push
stos
or
add
sbb
sbb
clc
aas
fsub
clc
stc
aam
clc
sbb
clc
rclb
add
and
add
repz
xchg
mov
fs
sahf
mov
add
ja
imul
add
add
mov
mov
clc
cmp
add
nop
pop
stos
ret
clc
pop
and
int3
js
add
fcmove
test
in
jp
add
hlt
icebp
lahf
mov
std
sub
mov
clc
mov
sub
add
ja
stos
popf
sub
add
jle
push
pop
mov
jne
clc
xor
add
xor
add
clc
mov
cmpsl
clc
fisubrl
sti
xchg
mov
lods
in
negb
cwtl
mov
mov
pop
xabort
xchg
jl
clc
test
add
lahf
jnp
cmp
add
pop
aam
add
cmp
data16
or
add
add
lret
pmaddwd
inc
add
mov
clc
mov
mov
mov
jno
add
aad
lods
push
mov
clc
pop
dec
sub
clc
mov
dec
dec
jae
add
sbb
clc
xor
add
xor
add
xchg
lret
data16
cmp
clc
mov
jo
add
adc
add
add
fisttpl
add
leave
bound
add
clc
clc
or
add
or
scas
iret
mov
test
loope
sbb
inc
add
pop
mov
add
clc
clc
mov
push
clc
pop
pushf
loopne
ja
clc
popf
or
add
add
scas
sub
ljmp
dec
xchg
ljmp
add
push
add
cld
int
clc
mov
mov
add
xlat
popl
add
lea
xchg
jno
add
clc
push
ja
or
pushf
or
jbe
call
mov
xlat
ret
clc
or
clc
cmp
es
sar
clc
test
mov
add
mov
add
clc
jbe
pop
movsb
clc
imul
jbe
xchg
xchg
mov
in
adc
add
add
pop
scas
mov
clc
and
add
mov
add
dec
imul
add
stos
add
add
ret
test
mov
fisttps
lcall
jecxz
dec
inc
add
jge
jmp
xchg
sub
stos
in
pop
js
add
mov
loopne
call
imul
test
testb
mov
and
add
inc
clc
lods
test
pop
or
cltd
pop
jge
mov
movsl
clc
push
clc
bsr
xor
add
shrl
add
cmp
add
addr16
cmp
cmp
dec
insb
out
cmp
add
addr16
iret
cld
mov
mov
xchg
addr16
movsl
clc
xchg
data16
pop
xor
pop
pop
mov
divl
add
popa
add
pop
clc
pop
clc
lods
push
cmp
clc
xor
clc
arpl
add
cmp
xor
add
push
cmp
cmp
jne
inc
clc
sarb
sbb
add
jmp
arpl
add
add
add
shrl
bound
add
add
add
add
pop
dec
xchg
and
mov
push
icebp
add
add
add
mov
clc
addr16
cmc
shrb
dec
xlat
mov
mov
clc
jb
add
popa
add
shrb
mov
clc
test
insl
shll
sbb
add
or
fcomip
lock
jnp
clc
movsb
clc
andps
sbb
mov
pop
adc
add
pop
js
clc
push
je
pop
clc
jp
add
adc
add
cmp
add
ja
outsl
cmpsb
clc
clc
mov
add
pop
ja
dec
pop
xchg
decb
ret
clc
test
and
add
add
popa
add
add
fsubl
add
add
xor
adc
add
push
clc
fs
aaa
xor
add
add
mov
insl
jmp
push
add
lcall
jbe
clc
fdiv
ret
clc
ja
jb
add
jle
in
cmp
add
xchg
adc
cmpsb
clc
jp
clc
mov
add
add
add
add
and
add
add
mov
add
xlat
pop
fiaddl
add
add
add
movsb
clc
lods
sub
push
arpl
add
xchg
and
add
clc
fldl
fcmovbe
arpl
add
sar
mov
push
cmp
es
dec
shlb
add
enter
pop
clc
enter
inc
clc
jge
adc
add
add
js
aaa
repnz
xchg
iret
jbe
std
aaa
jecxz
movsb
clc
jecxz
jb
add
xbegin
imul
add
test
add
shll
add
fmull
clc
sbb
clc
ja
add
in
lret
mov
push
clc
jne
inc
add
js
clc
xor
add
ljmp
mov
psubq
clc
mov
add
clc
push
test
mov
or
mov
cmp
clc
cmpsb
clc
insl
inc
clc
pushf
xor
add
sub
cs
mov
clc
fmul
aas
sub
jo
add
add
cmp
clc
add
add
push
stc
sti
mov
xabort
fdivrl
add
and
inc
clc
in
mov
cmp
inc
add
inc
add
insl
add
add
add
sub
push
add
js
push
aad
xabort
clc
jg
pop
imul
add
push
pushf
adc
clc
fst
repnz
jmp
loopne
data16
test
or
aam
fidivrs
enter
clc
repnz
xor
add
sbb
sbb
mov
mov
add
idivl
sahf
data16
out
or
test
insb
jne
adc
add
mov
add
mov
fildll
stos
cmp
clc
jo
add
fs
int3
clc
mov
or
add
enter
add
clc
mov
cwtl
loop
pop
jg
clc
cmpsl
clc
cmp
clc
or
and
or
clc
push
jne
add
aas
pop
xor
add
insb
jl
enter
cmp
aas
add
das
mov
lods
ljmp
clc
jge
clc
dec
gs
pop
stc
addr16
and
add
pop
test
adc
add
clc
ja
adc
add
jnp
and
and
add
notb
xchg
enter
add
data16
ja
mov
clc
pop
mov
je
sar
lods
jecxz
xabort
clc
cld
jmp
cmpsb
clc
cli
pop
lods
push
cmp
fcoms
outsb
shll
hlt
test
mov
add
xchg
bound
add
push
add
inc
add
jno
add
dec
bswap
cmp
stos
sar
and
add
clc
lahf
repz
and
jl
clc
mov
lahf
pop
repz
add
mov
aad
lea
adc
add
data16
sahf
xchg
push
add
pop
pop
cmp
inc
add
jmp
clc
aad
out
cmpsb
clc
xchg
in
dec
add
add
sub
add
and
add
xor
int3
into
and
add
push
add
pop
push
add
push
stos
jl
add
adc
adc
add
add
mov
pop
cmp
add
out
push
add
pop
clc
movsb
clc
stc
movsb
clc
addr16
hlt
jnp
test
dec
test
fwait
fwait
lret
jg
out
push
add
pop
stos
and
clc
ja
clc
mov
add
clc
lods
cmp
clc
gs
cltd
inc
add
jns
add
jmp
test
cmp
sar
pop
or
clc
pop
pusha
add
pop
push
sbb
sbb
clc
push
add
out
into
mov
jb
add
add
ret
mov
aam
clc
cmpsl
clc
mov
clc
cmp
clc
jp
inc
clc
mov
jae
add
add
sub
clc
in
xbegin
clc
scas
dec
jle
push
stos
scas
test
pop
daa
clc
and
add
fsubrs
clc
popf
pop
pop
sbb
sub
add
shr
jp
popf
imul
insl
cmp
clc
scas
ds
dec
xchg
ljmp
push
repz
add
outsl
notl
add
imul
mov
add
lods
cmp
test
inc
add
dec
push
mov
shl
outsb
fsin
cmp
xor
add
clc
mov
popf
xchg
imul
clc
pop
ror
mov
or
add
push
add
mov
mov
jns
jl
add
loope
in
sub
clc
inc
add
sub
add
push
clc
aad
ljmp
clc
movsb
clc
dec
jnp
inc
clc
xor
mov
fstl
add
lahf
add
add
clc
sub
test
and
push
jnp
xor
sub
xor
add
test
mov
mov
fs
mov
jae
add
add
inc
clc
cmpsb
clc
mov
pop
stc
or
clc
notb
ficoml
add
clc
push
add
xlat
cmp
clc
sub
clc
adc
add
imul
push
mov
xor
add
pop
xlat
or
or
mov
dec
je
or
jle
clc
mov
sbb
add
loopne
cli
mov
adc
and
add
add
jecxz
add
add
outsl
repz
out
rolb
add
sahf
push
iret
xchg
mov
add
add
add
add
dec
mov
sar
clc
mov
cmpsb
clc
enter
add
cmpsl
clc
jnp
sahf
ss
fcompl
add
dec
popf
xlat
jl
lods
mov
xor
add
adc
add
sahf
dec
lods
pop
add
add
movsl
clc
ss
pop
into
adc
mov
mov
cs
xlat
dec
adc
add
divb
add
jae
add
clc
outsb
pop
es
pop
out
stc
sti
aad
clc
inc
clc
push
mov
ds
mov
out
jns
mov
clc
add
push
bound
add
fcmovnb
clc
jl
push
add
add
add
jae
add
mov
clc
xbegin
or
inc
clc
push
add
sub
jg
sbb
clc
sub
add
mov
es
insl
in
arpl
add
xor
add
clc
int3
xlat
clc
push
clc
fldenv
sbb
leave
mov
inc
clc
cmp
ja
clc
in
ljmp
push
add
mov
aas
mov
add
add
pusha
add
adc
add
in
gs
jns
addr16
dec
ficomps
fs
fadds
add
cmp
clc
jmp
sahf
in
and
add
and
add
jl
clc
mov
std
pop
pop
xbegin
clc
jnp
clc
add
add
jo
add
xchg
push
es
out
jl
arpl
add
clc
and
add
inc
clc
mov
add
sub
add
jp
rcll
data16
aad
add
and
test
pop
loop
aaa
xor
add
sti
jmp
jmp
cmp
lea
add
idiv
imul
clc
or
and
outsl
xor
add
test
popf
sbb
add
push
adc
add
cmp
mov
add
xchg
push
add
add
add
ja
pop
loopne
daa
clc
loop
push
jge
add
add
add
data16
cmp
mov
mov
xor
add
mov
dec
lods
xchg
sub
popa
add
cwtl
jge
dec
xbegin
xchg
xor
scas
sar
and
add
ds
jp
clc
jle
negl
add
add
clc
cmp
sub
ja
xchg
xor
add
ret
clc
loope
mov
clc
cmp
scas
lods
js
xchg
or
in
das
sti
repz
xor
adc
add
repz
push
push
or
or
popl
add
or
into
stos
lock
sahf
mov
inc
add
es
or
cmp
clc
mov
je
push
fs
sub
clc
push
inc
add
arpl
add
clc
inc
clc
mov
xchg
outsb
call
in
into
xor
add
dec
sbb
repnz
mov
adc
add
add
adc
hlt
cmp
sar
popf
in
xlat
inc
clc
cli
xchg
jecxz
dec
dec
mov
pop
cmp
cld
rcr
and
add
mov
clc
and
add
clc
and
add
inc
add
dec
inc
clc
mov
pop
aad
clc
and
add
mov
sar
clc
fs
ss
clc
repz
add
dec
inc
clc
cmp
int
add
clc
neg
push
fwait
mov
clc
inc
clc
repnz
cmp
xor
stos
in
popf
inc
add
cmp
clc
daa
clc
push
test
mulb
dec
jne
in
xchg
loopne
insb
xor
ja
push
push
sar
testb
fdivrp
cmp
clc
jmp
inc
clc
out
ja
lahf
dec
mov
out
mov
lock
add
push
sub
ljmp
mov
add
clc
inc
clc
lret
sub
add
add
addr16
add
add
mov
test
push
mov
into
je
add
ret
clc
or
mov
add
stc
add
add
add
inc
clc
xchg
int3
clc
or
add
into
dec
xor
add
and
add
loop
jp
sbb
add
clc
in
jo
add
clc
into
sbb
mov
jns
mov
clc
cmc
sub
clc
and
push
nop
sti
js
bswap
pop
and
add
add
sar
add
es
roll
pop
ljmp
or
clc
and
add
add
xchg
mov
add
add
add
add
sbb
in
cmp
add
mov
rcll
jbe
add
jo
add
add
mov
repnz
ljmp
mull
clc
inc
clc
aaa
ja
pop
clc
push
add
in
mov
loopne
mov
imul
cmp
ds
rorb
ds
push
clc
es
in
inc
add
incb
add
add
jae
add
es
fidivrs
add
clc
add
add
test
add
mov
imul
sub
add
mov
je
mov
addr16
sti
push
add
or
clc
sbb
push
clc
dec
jae
add
clc
ss
and
xchg
std
arpl
add
mov
and
add
jo
add
clc
aas
xor
add
pop
dec
lret
add
xor
aas
push
clc
dec
testl
dec
dec
sti
iret
cmc
pusha
add
push
add
clc
mov
xor
add
leave
in
sbb
std
xchg
jo
add
fldl
push
aaa
into
mov
or
clc
aam
clc
and
add
or
add
in
mov
adc
add
clc
out
test
lods
mov
mov
add
clc
dec
pop
pop
mov
dec
mov
add
push
add
jns
inc
clc
push
and
add
add
aaa
xchg
cmpsl
clc
push
mull
clc
cmp
cli
movsb
clc
jmp
add
movsb
clc
sub
mov
es
pop
mov
clc
adc
add
cmpsl
clc
outsl
jno
add
lret
add
add
clc
mov
outsb
shlb
push
clc
mov
fwait
mov
jmp
jmp
int3
lret
fdivs
add
xor
add
mov
add
repnz
lcall
add
jge
sar
shll
cmc
cmp
jecxz
add
add
clc
xchg
sub
jge
add
and
mov
in
gs
iret
dec
ret
xor
add
clc
fidivrl
iret
dec
mov
dec
nop
leave
xor
add
push
add
or
clc
dec
dec
dec
loopne
or
jge
aaa
mov
insl
loop
imul
cmp
clc
ficomps
lods
jb
add
sar
arpl
add
add
arpl
add
imul
jbe
aad
dec
repnz
mov
clc
test
sub
pop
xor
add
add
xor
add
mov
sub
xchg
pop
clc
mov
ljmp
add
outsl
pop
fldpi
inc
clc
clc
pop
pop
sbb
xchg
sbb
add
jp
add
hlt
inc
add
pop
pop
cmp
pop
and
xor
add
test
sub
add
gs
pushf
ja
xabort
lahf
or
popf
push
nop
sub
sar
mov
add
cmp
mov
cmp
push
hlt
xchg
arpl
add
cs
sub
add
add
clc
push
adc
add
clc
push
add
jg
add
pop
filds
add
imul
cmp
add
sub
jno
add
clc
or
daa
clc
int3
jns
in
push
add
popf
xchg
sbb
pop
js
mov
push
add
fcompl
popf
out
fcmovnb
clc
xchg
es
cltd
cli
pop
test
dec
add
cmp
xchg
adc
add
gs
insb
imul
add
add
sbb
xabort
iret
mov
add
add
add
movsb
clc
mov
cmc
jmp
and
add
add
cwtl
sub
clc
cmp
leave
sbb
or
std
mov
xor
add
std
cmp
dec
pop
or
add
scas
hlt
fs
mov
xor
add
jge
clc
into
enter
add
pushl
ret
clc
adc
pop
cltd
pusha
add
cmp
lret
adc
out
cwtl
jbe
add
lock
daa
clc
fmul
sbb
fbstp
add
sub
nop
jmp
popf
repnz
xor
add
js
clc
es
cmpsb
clc
cmp
clc
dec
out
sbb
clc
fstpt
push
stc
outsb
mov
and
add
out
aam
jecxz
add
add
or
clc
ds
sub
add
loop
pop
cmp
jge
jl
imul
clc
frstor
cmp
sub
jo
add
data16
repnz
mov
hlt
mov
add
inc
clc
aam
scas
mov
and
add
clc
pop
test
clc
jbe
xchg
mov
call
clc
push
imul
clc
mov
cmp
or
add
mov
clc
popl
clc
flds
pop
push
push
add
dec
push
sbb
add
add
mov
clc
sbb
jns
jbe
or
add
add
add
or
add
xlat
push
clc
cmp
and
pand
add
add
inc
add
mov
clc
stos
mov
js
clc
loope
and
add
inc
clc
lock
jno
add
pop
fwait
adc
add
pop
int3
mov
insb
daa
clc
sarb
jne
repnz
scas
in
cmp
jnp
clc
aas
loopne
stos
pop
and
fwait
mov
add
flds
add
lock
clc
dec
mov
or
add
shrb
mov
in
cmp
inc
add
jg
clc
mov
push
jbe
out
sub
dec
imul
imul
jns
mov
add
add
ss
dec
jae
add
sbb
repz
sub
clc
arpl
add
clc
clc
cmc
xabort
xor
add
icebp
mov
adc
int
jae
add
sub
sbb
aad
mov
mov
icebp
in
stc
xor
add
clc
mov
add
cmp
jbe
inc
clc
pushf
xor
add
xchg
movsb
clc
push
push
add
es
out
xor
add
add
adc
jo
add
fdiv
inc
clc
je
lret
lahf
pop
jns
and
add
clc
insb
movsl
clc
adc
cmpsb
clc
mov
jl
dec
inc
add
mov
out
jne
mov
clc
imul
xor
add
outsb
loope
push
clc
and
add
lret
notl
daa
clc
inc
add
cmp
clc
mov
adc
add
ja,pt
fildl
nop
mov
mov
out
jecxz
jmp
clc
es
adc
add
aam
clc
mov
sub
lods
jns
xor
add
add
add
add
and
add
add
xchg
xabort
stos
inc
add
lcall
clc
pop
pop
lret
pop
pop
xor
add
pushl
mov
fcoms
push
add
shrl
clc
pop
mov
or
pusha
add
es
jmp
mov
cmpsb
clc
mov
add
add
jnp
pop
sub
add
iret
and
lods
add
add
in
mov
clc
bswap
sahf
dec
call
add
clc
cli
leave
call
shr
dec
jno
add
add
add
es
dec
mov
clc
ja
add
ret
push
clc
aas
lock
clc
sub
ljmp
dec
mov
add
fnstcw
add
cltd
pop
lods
sub
clc
mov
imul
clc
test
clc
or
jbe
add
fistpl
sbb
mov
clc
sbb
sar
xchg
cli
sar
clc
int
out
inc
clc
mov
add
std
push
cmp
and
add
jnp
in
push
pop
addr16
insb
gs
mov
clc
lods
fsubp
clc
in
push
adc
jle
enter
adc
mov
add
push
inc
add
call
add
sub
add
push
shrl
fs
bound
add
pop
fidivrs
out
pop
mov
clc
es
mov
sub
test
mov
arpl
add
clc
daa
clc
jg
add
mov
scas
cmp
add
pushf
pop
jo
add
add
xor
add
data16
cmp
push
cld
mov
add
fs
call
add
clc
push
or
jno
add
add
out
xor
add
pusha
add
push
pop
jb
add
clc
sbb
loope
punpcklbw
add
mov
clc
cmp
clc
sub
add
pusha
add
mov
cmp
pop
rorl
or
dec
xchg
jp
clc
mov
jne
add
xchg
lahf
clc
jnp
mov
jmp
clc
and
add
add
add
inc
clc
and
add
aaa
pop
cmp
dec
fs
sbb
in
push
xabort
clc
popf
push
jmp
or
clc
ja
clc
dec
pushf
scas
push
add
sti
loope
adc
add
jle
and
add
data16
insb
adc
add
clc
inc
add
sbb
jl
mov
sbb
add
jge
int3
fisttpll
or
dec
nop
sbb
movsb
clc
jne
in
out
hlt
cltd
or
xor
add
out
xor
and
cmpsb
clc
inc
clc
mov
idivl
sahf
and
adc
add
clc
mov
adc
add
leave
lods
mov
add
add
stos
push
pusha
add
cmpsl
clc
mov
cmp
lods
out
idiv
leave
pop
repz
cwtl
loope
pop
add
add
iret
fisubrl
not
cmp
das
jl
out
mov
fcoms
arpl
add
push
repnz
lods
hlt
push
insb
push
mov
xchg
push
jmp
stos
mov
clc
xor
add
or
add
add
out
sbb
add
mov
ret
cmp
inc
clc
add
add
clc
add
add
loopne
add
add
aad
popf
xor
add
add
add
or
outsl
daa
clc
mov
das
ret
cld
gs
aas
ret
mov
addr16
adc
xchg
push
jg
clc
je
xor
add
clc
xchg
xchg
pushf
es
sub
and
add
pop
add
add
add
shll
lret
add
add
clc
cmp
or
inc
clc
icebp
leave
cltd
data16
xchg
ret
clc
es
dec
mov
clc
bound
add
movsl
clc
jbe
add
insl
push
je
loope
mov
test
xchg
sub
clc
jmp
clc
sub
add
imul
es
scas
cmc
sti
aad
push
clc
push
add
iret
fdivs
or
mov
xchg
lret
add
sub
clc
mov
fwait
jmp
clc
sub
data16
pop
jp
pop
leave
push
xchg
push
bound
add
add
hlt
rolb
add
jo
add
add
inc
clc
dec
dec
push
jae
add
jns
mov
mov
add
leave
dec
dec
bound
add
or
mov
clc
stos
sar
add
psadbw
add
jo
add
add
daa
clc
popf
scas
call
addr16
pushf
je
clc
add
add
icebp
in
and
jl
sub
ja
push
inc
clc
adc
add
notl
in
cmpsl
clc
notl
add
jo
add
sub
sar
lock
clc
adc
add
cmp
clc
imul
cltd
add
add
pop
sbb
add
test
clc
sbb
outsl
fistpll
aad
cmp
sbb
add
add
std
mov
clc
dec
in
repz
clc
jg
imul
push
add
mov
shrb
add
xchg
xchg
js
clc
rorb
add
push
xchg
pop
cmp
clc
imul
cli
inc
clc
in
xchg
push
add
jmp
stos
hlt
xchg
test
fwait
repz
add
clc
sar
cmc
fidivrl
clc
jae
add
clc
es
add
add
xchg
imulb
pop
and
fdivrl
mov
add
add
pop
inc
add
test
ja
sbb
clc
rorl
dec
xor
add
pop
lods
out
js
je
adc
mov
out
or
clc
sub
imul
sub
adc
jp
lods
sbb
ret
clc
scas
dec
shll
cmp
dec
outsl
mov
cmp
sub
ljmp
add
clc
repnz
add
mov
adc
add
add
outsl
aaa
insl
pop
fs
pop
clc
cli
push
add
adc
add
clc
sbb
enter
bswap
or
dec
fisubrs
and
add
add
pop
inc
add
scas
mov
add
add
inc
clc
fistl
add
jb
add
add
cmp
out
xchg
cmc
and
sbb
xchg
cmp
cmp
pop
sbb
add
daa
clc
call
pop
sbb
scas
jo
add
mov
jmp
arpl
add
add
jo
add
xchg
sbb
adc
add
ja
add
mov
clc
loop
lret
sbb
clc
sar
mov
pop
clc
mov
repz
out
xlat
cmp
mov
nop
mov
ja
clc
ret
clc
repnz
add
jle
addr16
pop
pop
adc
add
jle
das
sub
push
xbegin
ds
mov
sqrtps
add
clc
call
xchg
cmp
cvtps2pd
clc
pop
movsl
clc
addr16
push
add
rorb
pop
or
clc
sbb
fsubr
sbb
fs
mov
xchg
jo
add
add
scas
mov
clc
scas
sbb
clc
in
jp
call
lcall
clc
mov
adc
add
add
cwtl
nop
pop
sub
clc
mov
clc
jae
add
rclb
add
push
push
add
add
add
lret
add
mov
add
inc
clc
jg
add
imull
sbb
xbegin
add
dec
lahf
mov
dec
or
clc
xor
add
pop
mov
dec
inc
add
dec
rcrl
insl
mov
adc
add
ja
negb
iret
xor
jle
in
imulb
lock
or
push
loope
ret
clc
rcl
and
loope
bound
add
add
ret
out
inc
add
adc
insl
lods
sahf
cmp
adc
add
push
or
clc
mov
add
mov
sub
add
mov
clc
xchg
cmp
add
xchg
mov
pushf
push
add
aaa
scas
nop
push
clc
ds
fs
fldcw
jns
mov
sub
push
clc
cli
jmp
add
cmp
jg
adc
add
mov
into
out
fsin
ud0
xchg
insb
jae
add
fucomp
jns
fiadds
iret
mov
xor
add
ja
add
scas
insb
or
clc
and
add
in
imul
cmp
clc
movsl
clc
jno
add
dec
pop
xchg
ficomps
pop
cmp
cmpsl
clc
pop
clc
jnp
in
fs
pop
cwtl
pop
xor
add
jo
add
clc
into
imul
movsl
clc
shrl
or
push
sbb
add
add
add
add
jne
clc
and
sbb
add
sbb
add
sub
jae
add
add
mov
cs
cltd
cmp
test
inc
clc
jae
add
add
mov
clc
push
add
cmp
mov
sbb
jmp
push
sar
clc
pop
lods
xor
clc
mov
sub
and
add
clc
xchg
aas
pop
jp
dec
iret
jae
add
push
add
and
mov
add
jle
clc
adc
clc
icebp
xor
add
add
and
add
add
lods
aas
mov
loopne
mov
xor
add
add
add
clc
mov
add
mov
std
add
add
jge
xchg
js
adc
stos
das
outsb
lock
pop
sub
add
aad
mov
cmpsb
clc
pop
outsb
gs
in
and
add
cs
aas
mov
aam
clc
icebp
and
add
and
clc
out
pop
out
aaa
mov
add
test
clc
adc
add
add
clc
lret
inc
clc
cmp
xchg
dec
mov
xchg
add
add
add
cmpsb
clc
fldt
stos
dec
inc
clc
enter
clc
or
push
int
mov
inc
add
push
add
adc
add
clc
xchg
mov
arpl
add
mov
add
add
mov
insb
clc
cld
and
pushl
sar
add
fbstp
notb
add
clc
push
clc
ljmp
clc
or
mov
clc
jnp
clc
jno
add
clc
outsb
xchg
cmpsl
clc
std
xchg
test
cmp
clc
lahf
ret
adc
pop
jp
dec
pop
sar
clc
jp
shll
xchg
add
fimuls
xor
sbb
inc
clc
testl
clc
lods
loop
bound
add
mov
aad
pop
std
xchg
out
cltd
test
add
gs
jp
jmp
clc
inc
add
xchg
or
cmp
clc
incl
clc
movsl
clc
test
mov
or
clc
mov
add
sar
add
add
push
out
xchg
sbb
add
inc
clc
repnz
mov
int3
cmp
fscale
mov
test
mov
mov
dec
jbe
aad
add
aaa
add
add
mov
clc
cmp
push
iret
dec
xor
add
ss
in
push
add
mov
fdiv
aas
cmp
add
cmp
ja
jle
add
ss
add
clc
bound
add
jmp
fnstenv
cmpsl
clc
sub
mov
add
xor
clc
loope
cmp
cltd
stc
mov
or
sub
mov
mov
add
and
add
pop
cmp
fisubrl
xchg
cli
out
jo
add
cs
mov
pop
add
push
add
xchg
iret
pop
clc
xchg
mov
clc
add
add
clc
add
add
imul
data16
out
xor
add
ljmp
or
push
negl
das
dec
stos
xor
add
xchg
pop
jg
clc
enter
stos
lea
clc
iret
jae
add
add
add
push
add
jno
add
dec
ret
clc
push
push
add
out
repz
add
test
clc
lahf
cmp
mov
clc
stos
rcll
add
roll
lods
sub
jmp
sbb
add
add
or
dec
lea
out
push
inc
clc
sub
add
inc
clc
jno
dec
push
add
dec
js
add
and
add
loop
mov
xchg
loop
xor
add
pusha
add
sbb
clc
call
jb
add
add
add
push
clc
and
add
std
out
and
mov
call
jmp
add
scas
ret
jl
sbb
mov
mov
clc
cmp
popa
add
in
push
add
cmp
add
sbb
scas
dec
data16
cld
stos
xchg
mov
xor
add
data16
fwait
lret
clc
mov
push
clc
notl
add
pusha
add
loop
xor
add
inc
clc
pavgw
mov
mov
clc
sti
dec
insl
cmp
mov
jmp
bound
add
clc
push
add
add
clc
mov
cld
movsl
clc
xlat
mov
in
xchg
cmpsl
clc
mov
clc
push
add
add
add
dec
cmp
gs
sub
cwtl
je
mov
das
out
and
add
pop
clc
add
add
xor
add
add
daa
clc
popl
add
jo
add
dec
or
clc
clc
mov
mov
add
add
out
ds
jae
add
dec
cmpsl
clc
popa
add
aaa
push
inc
clc
and
add
add
stc
cmp
jp
sbb
jecxz
dec
xabort
data16
xchg
fldcw
or
test
lret
test
not
mov
add
sbb
add
fidivrs
jbe
mov
add
clc
mov
repz
sbb
shlb
out
outsb
jns
hlt
and
add
cmp
add
add
add
aaa
or
add
shlb
add
inc
clc
cmp
clc
push
mov
inc
clc
icebp
cmp
add
add
movsb
clc
jne
dec
std
and
lods
xchg
push
cmp
add
jmp
add
int3
test
out
mov
sar
clc
fs
and
add
int
sub
xchg
sar
clc
push
clc
es
movsl
clc
adc
add
int3
outsb
jl
and
add
add
add
push
add
add
mov
add
add
clc
mov
mov
imul
inc
add
test
xlat
test
outsl
cmp
dec
inc
clc
or
clc
in
sahf
test
cmpsl
clc
loopne
mov
mov
push
add
loope
movsb
clc
imul
cmp
add
pushf
cwtl
cmpsl
clc
jae
add
cmp
pop
pusha
add
aas
aaa
jbe
clc
ljmp
cltd
daa
clc
cmp
xchg
add
test
clc
imul
jge
lret
add
jbe
adc
clc
movsb
clc
push
ja
clc
and
add
cld
cli
xchg
or
push
sbb
add
add
add
lahf
dec
push
clc
aam
add
aad
clc
mov
or
mov
mov
in
jle
add
sbb
clc
insl
fdivr
mov
sar
jne
push
psllq
push
mov
add
es
push
lret
add
inc
clc
decb
add
add
insl
cmp
clc
outsl
push
clc
jle
inc
add
jecxz
leave
out
frstor
add
clc
mov
clc
sar
add
add
popa
add
test
insl
jle
push
add
cltd
sub
add
stos
mov
mov
iret
mov
faddl
dec
jne
clc
stos
xabort
mov
clc
outsb
clc
aad
add
mov
add
xabort
std
dec
push
jns
clc
cmp
sub
stos
iret
pop
add
add
inc
add
mov
lods
adc
add
clc
bound
add
clc
and
add
clc
or
add
add
mov
add
out
cmp
cmpsb
clc
out
fdivrs
xchg
rorl
clc
call
repz
add
add
dec
rclb
add
jbe
pop
dec
enter
stos
bound
add
add
lods
pop
sub
cmp
jno
add
js
clc
cmp
testl
pop
clc
jbe
add
or
adc
add
add
pushf
mov
clc
mov
clc
out
pop
and
add
push
mov
out
jne
push
add
pop
cmp
add
fsts
xbegin
clc
dec
hlt
mov
add
inc
add
xchg
sub
xbegin
add
add
xor
add
fadds
push
pop
mov
add
cmp
add
add
sti
fs
data16
sbb
add
dec
cmpsl
clc
push
clc
push
add
testl
clc
inc
add
xchg
je
mov
std
mov
push
or
cld
mov
test
sub
add
cmp
repz
add
inc
add
jg
into
sahf
clc
mov
clc
mov
clc
stos
in
ljmp
clc
add
add
out
xchg
jp
clc
fsubl
mov
rorb
loope
add
add
jl
mov
sar
clc
inc
clc
test
pusha
add
mov
xchg
sub
ret
clc
or
clc
stc
jmp
push
cmc
inc
clc
add
cld
lods
mov
rolb
cmc
sbb
mov
je
or
add
sub
mov
pusha
add
sbb
jge
cmpsb
clc
je
jle
and
mov
clc
pop
rorb
insb
push
cs
popf
xchg
cwtl
leave
pop
push
add
cmpsb
clc
inc
clc
fsts
add
inc
clc
mov
loope
cmpsl
clc
mov
insb
sbb
clc
aaa
iret
leave
ret
clc
data16
out
dec
inc
clc
pop
clc
mov
mov
or
scas
cs
add
shlb
xchg
pop
icebp
in
flds
mov
add
clc
mov
add
dec
sub
cmp
jg
ss
pop
cltd
xor
add
clc
and
add
imul
cmp
add
clc
mov
clc
gs
insl
and
add
arpl
add
in
mov
clc
ret
clc
cmp
dec
lods
data16
clc
decb
jle
fwait
imul
aas
dec
adc
test
push
fs
arpl
add
nop
adc
add
outsb
in
xbegin
or
int3
dec
addr16
js
movsl
clc
mov
dec
mov
mov
add
mov
add
xor
push
add
shrb
clc
in
ret
lock
add
jge
clc
push
fwait
sbb
add
push
jno
add
add
shll
scas
insl
cmp
add
add
push
mov
add
clc
popa
add
dec
rorl
bound
add
aaa
aam
dec
sbb
out
scas
jb
add
fs
shrb
or
add
mov
clc
push
pop
pop
inc
add
or
xchg
clc
adc
add
sub
add
sahf
adc
add
add
insl
lcall
jbe
xchg
xchg
gs
loop
data16
mov
stc
pop
mov
clc
mov
stos
out
jmp
ja
adc
add
fwait
daa
clc
xlat
je
ss
icebp
add
add
clc
js
clc
add
add
clc
pop
lahf
in
loop
std
test
fs
mov
add
es
shlb
and
ret
xor
add
rorl
pop
call
out
int3
pop
sar
push
movsl
clc
das
lcall
movsl
clc
dec
dec
mov
add
popl
mov
xchg
push
jmp
or
stos
mov
sahf
popf
jo
add
in
ret
iret
push
add
ja
dec
call
add
repz
mov
add
popa
add
inc
clc
imul
jle
std
inc
add
cmp
fwait
mov
repz
jnp
fsub
clc
fcomip
push
clc
nop
enter
mov
jp
clc
dec
and
add
gs
mov
dec
pop
add
jg
clc
mov
clc
cmp
add
or
clc
pop
push
fbstp
into
pusha
add
cmp
or
dec
arpl
add
mov
or
add
mov
imul
clc
jge
clc
ja
inc
clc
push
dec
push
add
dec
xchg
push
repnz
add
mov
cmpxchg
add
mov
insl
xchg
mov
clc
into
rcl
jne
add
sbb
clc
data16
clc
dec
jo
add
cmp
mov
add
scas
cmp
push
test
add
push
addr16
cld
pusha
add
mov
lods
add
cmp
add
dec
stos
stos
loopne
jne
add
imul
repz
mov
adc
jo
add
pop
sub
clc
in
rol
clc
push
popa
add
leave
rcr
xchg
ficompl
cmp
push
cmp
jmp
clc
push
cmp
pop
addr16
mov
fcoml
add
je
clc
cmp
fmul
pop
push
add
or
clc
mov
add
push
pop
clc
lods
lret
xor
adc
add
sti
lock
sub
sarl
mov
mov
jo
add
sar
cwtl
xor
outsl
cli
pop
lods
dec
fsubl
jecxz
xchg
lea
icebp
push
and
add
adc
add
clc
push
sbb
xor
es
inc
clc
jae
add
add
std
jg
sub
insb
xor
add
mov
mov
clc
cwtl
inc
clc
pop
and
add
clc
xchg
ljmp
clc
clc
movsl
clc
xchg
cmp
clc
imul
iret
push
add
cmp
clc
add
add
lods
jp
sub
add
repnz
rclb
add
add
add
add
pop
test
mov
out
insb
and
add
add
or
sar
xchg
bound
add
sti
adc
add
cmp
clc
jecxz
sti
add
pop
clc
sub
add
ss
mov
add
add
mov
clc
ret
clc
cmp
cmc
jecxz
inc
add
stc
mov
adc
add
or
pop
cmp
mov
mov
mov
dec
pop
cmpsl
clc
push
and
add
or
xchg
xchg
inc
add
scas
cli
pop
leave
sub
add
dec
push
jns
out
dec
cli
das
mov
cmp
inc
clc
fstps
and
add
push
add
pop
cmp
lods
aaa
and
add
add
daa
clc
jno
add
add
into
cli
enter
aad
adc
add
mov
add
or
add
and
jmp
clc
xor
fisubs
adc
add
mov
xor
add
xchg
mov
out
insl
fs
push
sub
test
jns
push
sbb
and
pop
mov
mov
dec
icebp
xchg
adc
add
clc
aam
iret
aad
xor
add
xor
add
xchg
push
mov
fsubrs
cmpsl
clc
and
add
nop
clc
sub
push
fwait
jp
add
or
inc
clc
lea
bound
add
jmp
cli
imul
adc
add
pop
xchg
loop
mov
add
lock
push
cmp
add
cmp
add
aaa
pop
stos
xor
add
mov
mov
add
xabort
imul
add
add
nop
mov
test
jne
sar
dec
stos
push
mov
mov
mov
add
imul
jbe
clc
inc
clc
test
jecxz
dec
test
dec
shll
add
push
lods
pop
xchg
sti
sbb
push
loopne
push
pushf
cmp
clc
dec
in
push
clc
or
pop
cmp
into
jae
add
clc
aam
mov
clc
mov
ret
repnz
clc
push
clc
cmp
add
mov
jb
add
add
bound
add
lock
mov
clc
pop
xor
add
mov
fdivs
add
outsl
mov
call
clc
xor
add
sub
bound
add
ficomps
pop
mov
clc
jno
add
add
add
ss
adc
mov
stos
aam
leave
insb
daa
clc
popa
add
pop
movsl
clc
fistpl
clc
mov
inc
clc
mov
popa
add
mov
add
jo
add
push
add
pop
inc
clc
es
testb
fmul
cwtl
fsubr
repz
stc
clc
cmp
add
scas
mov
add
pop
test
and
jle
clc
dec
cld
dec
leave
sahf
adc
add
mov
add
add
repnz
jecxz
mov
cmpsb
clc
jl
add
xbegin
add
cmp
clc
nop
cld
dec
add
add
clc
or
clc
sub
shr
xor
add
add
push
lea
add
add
add
and
add
jge
leave
add
add
add
add
cmp
add
clc
jl
push
clc
sbb
ljmp
in
mov
add
idivl
xor
add
dec
mov
sub
addr16
push
pop
mov
loop
ret
clc
repz
aaa
push
fadds
add
fbstp
popf
jnp
clc
scas
sub
popl
lea
add
lahf
sti
jge
mov
pop
clc
xchg
ja
clc
xbegin
clc
insb
jno
add
add
xor
add
clc
lods
jecxz
dec
xchg
xor
add
xor
add
pushf
push
add
popa
add
adc
es
pop
add
add
xlat
std
inc
add
dec
sbb
mov
add
dec
sbb
clc
or
add
xor
add
xchg
mov
loopne
jg
xlat
cmp
ficomps
clc
adc
add
pop
pop
jne
clc
push
outsl
clc
jo
add
add
and
add
popf
mov
clc
mov
push
xchg
in
inc
clc
pop
nop
out
mov
fistl
clc
cmpsb
clc
cmp
test
clc
cmp
add
add
es
sbb
lods
xchg
cmp
clc
xlat
push
add
popa
add
out
sar
mov
mov
xchg
or
add
clc
mov
data16
sub
pop
jo
add
addr16
mov
add
shr
sub
dec
bound
add
xchg
std
out
test
push
aaa
xchg
outsb
adc
add
clc
nop
cmp
arpl
add
testl
clc
jnp
dec
mul
clc
aas
ffreep
clc
pop
in
js,pn
mov
jecxz
dec
lcall
mov
test
fisubl
aas
test
icebp
sub
mov
ficompl
inc
clc
push
add
cmc
sarb
xchg
inc
clc
fisubrl
clc
and
xchg
es
lahf
mov
clc
pop
xchg
push
inc
clc
out
push
add
loopne
mov
push
add
push
jle
add
mov
cmp
clc
mov
sahf
test
or
mov
xor
add
push
add
inc
add
mov
inc
clc
push
add
cli
and
add
clc
or
pop
outsl
imul
and
mov
std
push
add
fldlg2
es
sbb
fs
lret
gs
mov
aaa
js
clc
movsl
clc
dec
jns
fs
dec
shll
daa
clc
outsl
sub
fistpl
clc
hlt
adc
mov
test
gs
test
iret
push
stc
jge
clc
mov
cmp
xor
add
mov
jbe
clc
cmpsb
clc
xbegin
sbb
aad
hlt
sbb
into
fldl
add
pop
jl
push
clc
mov
mov
sar
xchg
jle
rorb
notl
add
and
add
add
minps
add
out
xor
add
lock
push
sub
jmp
clc
out
sub
jp
mov
and
add
add
sub
add
jg
int3
and
mov
add
clc
and
add
cli
shld
xor
add
popl
and
add
add
insb
mov
clc
insl
mov
add
xor
add
stc
addr16
stos
push
clc
sub
outsb
pop
ss
sub
test
sub
jnp
jmp
into
xchg
gs
xchg
push
test
mov
fsts
add
and
clc
pop
aam
mov
clc
fs
xchg
push
add
mov
clc
or
add
pop
clc
push
and
lea
xor
add
add
inc
add
jbe
sub
dec
cmp
add
adc
add
push
clc
test
mov
clc
sub
clc
add
add
add
jo
add
push
leave
mov
cmp
roll
add
sbb
flds
push
ret
clc
adc
add
jnp
mov
mov
loopne
scas
notl
add
clc
pop
sub
clc
mov
xor
jge
add
pusha
add
dec
xlat
out
in
hlt
sub
int3
out
mov
fmul
loope
mov
lret
das
test
mulb
clc
adc
add
add
bnd
add
mov
xchg
cwtl
test
in
js
mov
add
pushf
xor
add
add
cmp
scas
mov
inc
clc
xabort
add
and
add
push
dec
mov
clc
xbegin
add
test
clc
lret
lea
add
add
es
sub
in
mov
pushf
jge
loop
add
add
pop
pusha
add
cld
int3
mov
outsl
mov
clc
int
dec
push
scas
daa
clc
ss
add
jge
clc
cmp
sbb
sbb
clc
push
bound
add
hlt
sub
push
add
jmp
bound
add
add
bound
add
imul
clc
pusha
add
push
clc
dec
loopne
xchg
xchg
clc
aaa
and
ss
add
add
mov
clc
xchg
stos
cmp
mov
pop
shrl
mov
jg
add
leave
push
mov
dec
std
movsl
clc
jns
imulb
push
xor
add
and
iret
lea
mov
sbb
out
xchg
cli
mov
addr16
pusha
add
and
add
add
clc
push
clc
repnz
add
insb
cwtl
sub
clc
je
add
mov
ds
stos
fisttpll
clc
cmpsl
clc
push
or
popa
add
mov
js
movsl
clc
jge
adc
clc
fs
leave
fdivrl
mov
clc
aad
push
rorb
cmp
out
clc
hlt
aad
add
mov
clc
icebp
fistpl
lods
loop
in
dec
call
clc
jo
add
add
pop
into
out
mov
add
aas
ljmp
add
or
inc
clc
fldcw
inc
add
outsb
push
add
in
dec
add
es
hlt
lret
mov
adc
js
mov
out
jmp
lea
icebp
push
add
sbb
loope
sub
mov
xor
add
bound
add
xchg
jge
clc
cli
mov
add
add
add
jns
add
sar
add
xor
add
add
add
push
add
inc
add
test
clc
dec
mov
add
add
pop
int
add
outsl
mov
clc
loopne
popf
and
add
dec
jg
push
push
add
xor
add
clc
aaa
jmp
jnp
clc
mov
clc
jp
clc
cli
ljmp
popf
dec
ljmp
mov
arpl
add
ljmp
add
push
and
add
or
daa
clc
mov
mov
sub
sub
dec
addr16
xchg
jle
clc
and
add
add
out
pop
jmp
clc
push
add
outsb
insb
and
in
imul
add
push
mov
lret
sbb
in
mov
loop
das
jne
xor
ljmp
add
jecxz
jg
clc
mov
aad
ret
mov
add
outsb
inc
add
arpl
add
push
outsl
cmp
add
dec
jle
pop
jns
ficoml
add
vmulps
mov
add
add
add
std
sti
dec
sbb
divl
jg
clc
add
add
das
mov
call
stos
mov
add
mov
add
cli
into
jl
xchg
cmp
stos
mov
das
xor
add
fcompl
mov
add
xor
add
clc
std
out
cmp
ja
mulb
xor
add
ret
popa
add
clc
ds
push
add
mov
jl
pop
cmpsb
clc
push
enter
clc
insl
mov
jg
clc
test
clc
inc
clc
push
mov
xor
add
adc
cmp
xor
add
test
out
ss
add
out
cmp
add
mov
add
sar
aad
decl
add
cs
movsb
clc
mov
fcomps
add
push
addr16
add
add
sbb
push
mov
and
imul
or
xchg
test
insl
clc
pop
sbb
add
add
clc
stc
push
clc
in
dec
clc
push
popa
add
dec
cmp
mov
xchg
sti
push
add
xlat
mov
jb
add
clc
and
add
jmp
inc
add
mov
adc
add
mov
add
add
mov
lea
add
out
mov
clc
mov
add
movsb
clc
in
cmpsb
clc
addr16
or
add
jge
clc
push
clc
cmpsl
clc
das
ret
clc
icebp
loop
rorl
fcmovb
clc
cli
jbe
ret
clc
repnz
add
pop
clc
ret
clc
aaa
loope
adc
jne
or
add
push
clc
sub
daa
clc
xchg
add
jge
loopne
lods
fdiv
jmp
fisttpl
scas
lods
jle
mov
add
cmp
enter
add
mov
lret
idivb
clc
into
clc
jmp
clc
cmp
clc
inc
clc
rclb
add
pop
faddl
add
cltd
mov
loop
cmp
add
es
sub
sbb
pop
out
jnp
clc
jno
add
add
sub
cmp
mov
lods
loopne
xchg
fisubl
jo
add
clc
dec
inc
clc
mov
jae
add
jecxz
push
add
mov
stos
push
pop
clc
nop
and
add
jle
xor
add
add
insl
popa
add
in
pushf
push
jae
add
xor
add
clc
dec
pop
inc
add
repz
jle
inc
clc
imul
add
clc
mov
jne
inc
clc
cs
insl
negl
in
or
add
shrl
faddl
cmp
adc
add
add
push
push
add
inc
clc
jns
add
int3
jb
add
ret
clc
mov
add
test
clc
out
or
and
jl
mov
add
push
add
bound
add
sbb
pusha
add
jb
add
add
das
clc
out
mov
cmc
fwait
push
clc
pushf
mov
repz
sahf
xchg
out
lea
clc
je
sbb
push
xor
add
add
push
mov
movups
add
negb
cmp
insb
inc
add
shll
add
cmp
leave
clc
daa
clc
inc
add
pusha
add
mov
xchg
push
pop
jp
clc
adc
add
movups
add
add
inc
clc
in
enter
jmp
add
lret
test
xlat
and
add
iret
and
pop
clc
out
mov
clc
int
sbb
cmpsl
clc
add
add
sar
clc
int3
push
shrb
sbb
clc
lods
fcom
shl
jmp
xabort
mov
fnsave
fs
lahf
mov
add
jno
add
jmp
insb
or
call
and
add
repz
clc
push
add
icebp
lahf
mov
xabort
enter
jp
clc
outsl
loop
push
add
stos
xchg
mov
jnp
pushl
xor
add
dec
iret
and
add
pop
aas
xchg
jae
add
clc
std
xchg
inc
add
xchg
sub
add
sahf
sbb
add
pop
push
lods
sti
scas
jnp
insl
sub
add
add
pop
cs
and
add
jb
add
add
push
add
cmp
clc
xchg
xchg
jmp
mov
add
add
fwait
cmp
inc
add
mov
into
ds
adc
add
inc
clc
insb
xor
add
xchg
inc
add
lods
fwait
push
add
jp
stos
pop
cmp
add
clc
push
add
aad
daa
clc
es
data16
gs
div
mov
cmp
dec
inc
clc
leave
xor
add
out
xchg
jo
add
mov
sub
clc
add
add
pop
xor
add
call
sub
shll
test
mov
jecxz
cmp
add
push
add
and
add
bound
add
pop
sar
and
add
rorl
int
sub
call
adc
add
clc
leave
out
xor
add
aas
xchg
ds
mov
adc
fsubp
clc
rclb
add
lea
add
clc
clc
fsubl
pop
sbb
stc
mov
or
add
dec
fldt
clc
rol
clc
xor
clc
xor
add
jbe
cmp
add
leave
jg
cmc
sbb
std
call
mov
clc
push
clc
jns
pop
sbb
add
clc
xor
add
sub
pop
arpl
add
sahf
out
loope
fbld
add
mov
cmpsb
clc
sbb
imul
add
iret
jns
clc
fs
add
add
add
clc
out
in
mov
jl
clc
dec
outsb
aam
clc
push
add
ffreep
clc
sbb
dec
sar
xabort
clc
and
clc
mov
add
clc
pop
adc
xbegin
ret
out
cmp
popa
add
jle
imul
fimuls
mov
xor
add
ret
clc
pop
inc
add
xchg
ret
clc
pop
inc
add
add
or
jb
add
outsb
shll
add
add
pop
xchg
sbb
mov
clc
push
lods
push
add
fistl
clc
scas
ljmp
stos
fcomps
clc
shrl
dec
mov
sbb
clc
xor
mov
clc
and
add
adc
add
je
sub
mov
clc
ljmp
pop
lods
push
cld
rclb
dec
adc
add
add
jns
push
frstor
mov
cltd
ficomps
and
add
clc
fnsave
add
push
out
scas
aaa
clc
mov
mov
ds
mov
lea
adc
add
inc
add
loope
insl
sbb
mov
cmp
test
test
clc
and
add
testl
push
clc
cli
mov
mov
xlat
and
add
sbb
outsl
nop
lret
xchg
imul
mov
add
push
sub
cmp
pop
repz
add
add
sub
mov
add
int3
xchg
pop
and
dec
cmp
lret
add
inc
clc
test
adc
mov
aaa
push
clc
lock
add
add
xor
pop
jp
clc
mov
arpl
add
add
pop
adc
add
ret
sub
add
xor
add
add
jno
add
gs
int
clc
sahf
hlt
push
cmp
sub
out
clc
icebp
jns
mov
clc
fs
xchg
xbegin
xor
xlat
test
clc
dec
int3
leave
sub
jle
outsl
bound
add
aam
js
dec
fcomps
sar
add
dec
mov
clc
fdivrs
add
clc
lods
adc
clc
jae
add
cmpsb
clc
push
jge
cwtl
call
add
mov
inc
clc
fbld
clc
add
add
add
and
push
add
xchg
aaa
aam
add
add
and
inc
add
inc
add
shlb
test
aas
call
imul
xchg
mov
add
and
int3
sub
add
icebp
jo
add
psubusb
push
ficoml
add
adc
add
cld
mov
clc
outsb
dec
insb
jle
pusha
add
call
es
and
add
xchg
dec
push
cmp
clc
aas
aaa
pop
mov
lods
std
leave
dec
adc
add
sub
dec
push
clc
or
push
jmp
clc
jbe
clc
ds
loope
loope
push
clc
pop
sar
add
movsb
clc
mov
push
ds
fldcw
clc
scas
inc
add
jg
xchg
push
frstor
xor
lahf
mov
ss
clc
std
push
add
lret
in
cs
xchg
stos
into
gs
inc
clc
mov
in
jnp
loopne
fdivs
add
add
add
sbb
add
add
jge
outsb
pop
clc
repnz
cvttps2pi
add
imul
clc
xor
add
mov
pop
push
jle
push
clc
xlat
fisttpll
clc
inc
add
shll
or
mov
add
mov
stos
xchg
pop
rcrl
mov
clc
cltd
inc
clc
ds
push
mov
add
mov
call
cmp
push
aam
and
add
add
imul
dec
aad
push
add
mov
clc
jno
add
enter
cld
cmp
add
add
shll
inc
add
pop
mov
clc
bound
add
mov
xor
add
loopne
sub
clc
or
push
add
fsubs
add
jo
add
imul
scas
popf
xchg
jb
add
add
clc
in
fcompl
out
mov
add
push
es
lods
xor
add
push
add
aaa
dec
push
lret
dec
jns
sar
sbb
cmp
add
scas
push
stos
cltd
fisubrl
xchg
mov
sub
outsb
imul
cmp
clc
xbegin
clc
imul
add
test
xchg
enter
clc
ja
repz
xchg
insl
mov
push
add
das
sti
xabort
ffree
clc
mov
add
and
scas
xchg
lahf
fcom
cmp
add
aas
add
add
outsl
xor
mov
in
je
repz
clc
in
sub
clc
mov
clc
or
jmp
sub
clc
lock
stos
and
add
cmp
clc
movsl
clc
push
add
pop
cmp
add
clc
dec
insb
dec
jne
add
mov
add
dec
cwtl
inc
add
pop
cs
mov
mov
clc
xchg
add
add
adc
add
add
push
cld
pop
mov
test
std
int3
xchg
sti
or
test
scas
xchg
ficoml
add
dec
xor
add
add
in
inc
clc
fdivr
mov
add
add
clc
stos
push
xor
add
test
cmpsb
clc
mov
fnstenv
clc
or
aaa
shrb
clc
or
sub
cmp
or
aad
lret
push
add
fidivrs
add
pop
clc
int3
popa
add
push
add
xor
lret
add
cmp
mulb
add
rcr
mov
test
push
inc
clc
int3
push
fwait
mul
clc
xor
aas
mov
mov
mov
sub
sub
add
dec
fstpt
clc
push
add
xchg
mov
and
add
clc
pop
test
jno
add
adc
add
pop
mov
clc
lods
adc
mov
inc
add
mov
clc
loop
xchg
fmull
add
icebp
jecxz
xchg
add
add
xchg
pop
mov
clc
inc
clc
inc
add
xchg
sbb
clc
adc
add
add
sub
push
clc
fucomip
sub
add
leave
dec
push
add
data16
addr16
jg
clc
xchg
enter
add
testb
sar
dec
stos
xchg
pop
out
pop
mov
sub
test
cmp
xchg
add
add
test
clc
mov
adc
add
add
sbb
jbe
clc
sub
popf
cmpsl
clc
xor
add
add
dec
aas
cmp
call
pushf
xchg
mov
clc
and
or
mov
or
cmpsb
clc
test
push
mov
xchg
xchg
gs
sub
inc
clc
pop
aaa
mov
push
add
bound
add
stos
lahf
push
push
add
addr16
imul
add
clc
sub
or
xchg
sbb
dec
cs
rcrl
pop
lods
xchg
mov
clc
and
add
clc
push
mov
sbb
inc
clc
mov
mov
add
dec
std
cmp
clc
jmp
clc
daa
clc
cmp
clc
int3
clc
inc
add
xchg
fwait
test
iret
mov
test
out
sar
mov
clc
xchg
mov
mov
std
cmp
add
mov
leave
daa
clc
mov
scas
enter
add
clc
arpl
add
mov
mov
add
js
clc
mov
mov
clc
pushf
ret
sbb
je
sahf
mov
repz
or
aad
std
stos
sub
jb
add
add
xchg
insb
push
clc
pop
clc
jbe
sar
clc
push
clc
and
add
add
insl
jne
into
mov
jbe
clc
hlt
gs
and
pop
sub
xchg
cwtl
mov
add
out
mov
xor
add
mov
aaa
pop
ds
fisubrs
dec
jmp
sar
xlat
add
add
add
scas
xchg
xchg
mov
mov
jb
add
clc
fisubs
je
cmp
jmp
jmp
clc
pop
clc
pop
inc
add
fwait
or
jg
repnz
dec
jmp
clc
into
pop
clc
es
into
jb
add
clc
sbb
add
fnstenv
mov
sub
dec
sarl
ss
out
fdivr
mov
imul
hlt
mov
clc
sti
ret
inc
add
sar
clc
pop
cmp
adc
in
gs
jns
nop
pop
aaa
fildl
out
push
int3
lock
add
and
je
insb
jl
xchg
or
mov
jb
add
xchg
pop
xor
add
imul
add
dec
jnp
mov
clc
add
add
repnz
pop
clc
mov
mov
clc
test
sbb
xor
add
mov
mov
ljmp
mov
je
cmc
and
add
clc
std
iret
pop
dec
mov
add
jbe
jle
lcall
push
clc
jmp
add
cld
ss
add
jmp
aas
out
inc
add
fs
loope
cmp
add
add
daa
clc
xor
add
lret
cmp
mov
add
mov
cmp
clc
repnz
dec
stos
lcall
push
add
call
add
loope
jmp
xor
add
add
add
nop
pop
mov
pop
test
fadd
clc
jnp
add
ds
xchg
add
add
clc
clc
aaa
clc
mov
sbb
clc
cmp
add
or
and
add
mov
cmpsl
clc
int3
data16
jnp
adc
add
sti
sahf
push
add
jbe
incl
clc
adc
clc
outsl
sti
pop
gs
cmpsb
clc
jae
add
clc
fsubrl
and
add
xchg
xor
ljmp
cs
clc
rcr
mov
clc
xor
add
ss
adc
add
add
add
add
clc
imul
cmp
clc
cmp
push
mov
clc
ret
dec
pop
sarb
test
pushf
jbe
mov
add
mov
clc
inc
add
or
add
add
add
add
mov
mov
and
add
add
add
pop
xchg
fists
out
adc
push
add
and
add
fscale
es
adc
add
ds
sub
add
add
gs
push
sti
sbb
es
cs
clc
repnz
add
out
mov
sbb
clc
loopne
bound
add
xchg
pop
and
add
push
add
nop
jo
add
mov
outsl
clc
add
add
fcmovne
sarl
mov
clc
fcmovbe
sub
clc
mov
mov
leave
jne
pop
dec
and
add
add
add
jge
mov
mov
inc
clc
xchg
push
add
packuswb
pop
imul
cmc
arpl
add
movsb
clc
inc
clc
jmp
clc
mov
add
aaa
and
add
jmp
jl,pt
sbb
in
push
clc
push
or
add
ja
add
push
cltd
js
dec
adc
fnstsw
mov
pop
sar
clc
adc
add
add
add
sub
outsb
lahf
inc
clc
lret
and
add
add
daa
clc
leave
insb
mov
leave
mov
divb
add
push
jno
add
clc
mull
cmpsb
clc
js
and
and
adc
add
add
pushf
pop
mov
inc
add
test
push
add
adc
add
push
bound
add
push
add
dec
clc
loop
jnp
add
sub
adc
add
nop
sbb
add
ret
test
dec
in
fcomps
stc
fwait
xor
mov
add
clc
mov
cmc
test
cmp
shr
and
add
stos
iret
clc
ljmp
jne
and
add
clc
mov
mov
sbb
clc
js
mov
mov
sub
add
mov
or
mov
add
cmp
int3
and
add
lcall
stc
push
jle
clc
mov
outsb
das
mov
mov
and
add
xor
cmc
enter
add
jno
add
xchg
pusha
add
cmp
clc
inc
add
test
dec
or
xchg
nop
jecxz
cmc
xchg
cld
pop
or
clc
enter
add
cmc
inc
add
lods
xchg
mov
adc
cmp
imull
add
lods
jg
outsl
push
cmp
xchg
into
icebp
pop
inc
add
and
stos
push
sti
xor
add
in
rcll
pop
xchg
fsubl
adc
add
add
mov
xchg
jne
clc
lret
and
add
aas
std
ss
push
add
shll
clc
jg
clc
iret
out
inc
clc
and
add
clc
mov
push
mov
leave
xchg
aam
cmpxchg
mov
add
repz
pop
xchg
cmpsb
clc
roll
add
clc
mov
dec
stc
lods
shlb
add
fimull
push
clc
sbb
jbe
add
add
data16
cmp
clc
ss
stos
jb
add
clc
pop
cmp
pminsw
dec
lret
sub
es
mull
add
call
push
clc
in
mov
fidivrl
mov
add
pop
push
clc
mov
sub
clc
jg
clc
mov
clc
or
pusha
add
ja
cmp
fwait
jns
add
fisubs
in
js
sub
add
shlb
push
and
add
add
test
add
add
xchg
xlat
outsl
mov
add
or
loope
es
pop
jle
pushf
outsl
jecxz
fidivl
add
sbb
add
clc
cmp
mov
clc
pushf
push
or
or
clc
repnz
add
into
dec
nop
sbb
xchg
dec
imul
or
clc
jne
or
clc
push
es
mov
add
testb
clc
cmp
cmp
clc
cmc
clc
out
pop
mov
mov
jg
mov
gs
xor
add
clc
clc
test
das
and
add
jg
movsl
clc
cmp
clc
xchg
leave
stos
pusha
add
jmp
cs
imul
clc
sahf
adc
add
jle
xchg
in
fs
add
add
or
pop
aaa
inc
clc
and
add
cmp
push
add
or
add
adc
shlb
adc
add
jp
test
pop
inc
clc
gs
std
xchg
lock
in
mov
and
add
sub
add
add
clc
cwtl
inc
clc
cmp
add
mov
cmp
lea
jmp
clc
add
add
into
mov
cld
fdivs
add
jo
add
push
dec
rorb
mov
clc
adc
add
add
dec
repz
or
jns
rorb
sub
mov
push
cmp
add
fidivrs
clc
ss
sbb
xchg
jp
clc
inc
add
inc
add
mov
leave
dec
mov
dec
data16
push
stc
dec
cmpsl
clc
push
sub
out
scas
push
clc
xor
add
mov
add
cmp
test
or
sbb
add
clc
inc
add
test
add
inc
clc
pop
pop
notb
add
in
enter
loopne
int3
cmp
dec
sub
pop
clc
rcrb
clc
jg
adc
add
out
dec
test
add
sahf
sahf
lock
and
add
clc
icebp
fldcw
mov
or
in
lret
jbe
add
jecxz
cmp
rorb
add
inc
add
popf
push
scas
in
int
add
add
clc
lock
and
add
fmuls
push
clc
stos
out
inc
clc
fs
loopne
aaa
sbb
add
dec
out
stos
insb
jg
cmp
inc
add
ss
es
or
inc
clc
iret
push
aas
bound
add
mov
clc
mov
aas
ret
lods
sar
clc
sub
clc
mov
xchg
in
icebp
mov
in
sub
xor
add
int
jno
add
add
mov
push
repz
pop
inc
clc
ficoms
push
push
add
mov
cmp
stos
clc
pop
or
add
adc
add
cmc
fxch
and
clc
inc
add
adc
add
sahf
or
pop
adc
add
lea
mov
add
adc
add
clc
pop
or
add
xchg
pusha
add
dec
dec
xor
add
xor
add
cmp
xchg
push
mov
add
mov
jb
add
inc
clc
lods
inc
clc
jno
add
mov
inc
clc
sub
dec
mov
jmp
add
pushf
jmp
clc
sub
clc
mov
clc
arpl
add
clc
das
in
addr16
push
pushf
stc
and
add
mov
mov
pop
cld
movsl
clc
sbb
dec
clc
leave
xchg
pop
clc
push
add
sbb
cmp
add
mov
fs
sub
add
push
sub
add
xchg
scas
sbb
daa
clc
xbegin
inc
add
je
sbb
inc
add
aam
add
xchg
pushf
xchg
mov
out
out
sub
sbb
clc
loopne
stos
jle
clc
sti
arpl
add
sub
add
clc
dec
and
add
clc
std
in
mov
adc
add
out
sub
frstpm(287
clc
adc
add
add
mov
ret
clc
adc
add
clc
fdivl
mov
mov
add
pop
insb
push
and
insl
ja
sti
sub
call
stos
jge
jae
add
add
add
sahf
fwait
jge
jl
clc
push
repnz
mov
clc
xor
add
ja
mov
xchg
sbb
fwait
repz
add
add
test
add
lea
add
fdivrs
mov
in
mov
add
mov
jno
add
clc
daa
clc
add
mov
arpl
add
add
pop
fwait
pop
cmp
js
add
movsb
clc
push
mov
rcrb
add
xchg
es
fildl
sub
push
xchg
or
clc
mov
push
add
sbb
mov
add
clc
inc
add
shlb
add
xchg
xchg
movsl
clc
fmuls
cmp
pop
hlt
in
push
sar
cmp
add
imul
inc
clc
movsl
clc
dec
mov
shrl
sub
sar
das
xabort
popa
add
imul
stc
mov
loope
dec
inc
clc
xor
add
dec
test
leave
pop
out
imul
imul
add
test
clc
out
loopne
or
clc
ret
clc
lret
push
hlt
lea
clc
add
add
mov
dec
in
dec
mov
daa
clc
fists
sub
into
pop
aas
inc
clc
mov
clc
stc
in
dec
xchg
hlt
out
insb
cmp
xchg
jmp
clc
notl
push
aam
add
xbegin
stos
cmpsl
clc
xbegin
hlt
dec
pushf
inc
add
fs
mov
clc
ja
clc
addr16
sti
adc
add
clc
dec
add
add
sbb
dec
jmp
in
pop
loop
pusha
add
pop
or
lea
cmp
cmp
clc
dec
mov
push
adc
add
add
lcall
xabort
adc
add
dec
xchg
sbb
clc
adc
add
inc
add
cmc
adc
push
or
push
mov
xor
add
pop
add
add
add
fs
scas
pop
jmp
sub
add
add
clc
xbegin
mov
test
fcoms
mov
xchg
dec
and
add
add
nop
pop
xchg
pop
and
mov
or
repz
add
mov
jno
add
rcrl
clc
pop
ffreep
clc
push
pop
insb
sub
add
bound
add
fwait
push
add
cs
ffreep
clc
cmpsl
clc
enter
and
add
clc
inc
clc
jns
inc
clc
mov
clc
bound
add
clc
cmc
pushf
xchg
sahf
inc
clc
arpl
add
clc
mov
xchg
xor
add
add
leave
lea
mov
add
cmp
inc
add
pop
pop
fs
dec
push
sbb
cmp
add
mov
add
clc
mov
cwtl
test
add
mov
add
pop
clc
movhps
data16
xor
clc
aam
cmp
clc
dec
fcom
jg
cmp
clc
xor
add
clc
add
add
cld
add
add
fistl
aaa
mov
ret
lret
fdivrl
clc
push
add
push
add
cmp
sub
jbe
sub
out
cs
xor
add
rcrl
inc
clc
cmp
add
sti
xchg
mov
rcrl
jne
cwtl
sub
jecxz
loopne
into
in
add
add
pop
cld
dec
xchg
mov
ror
xor
add
mov
por
add
sti
pop
repz
clc
push
sar
clc
push
clc
cwtl
jae
add
dec
xchg
aam
xchg
dec
mov
test
clc
pop
jg
clc
sub
add
fs
or
lahf
fadds
clc
pop
sub
bound
add
cmp
dec
mov
mov
arpl
add
sbb
add
push
clc
fs
lcall
jecxz
jb
add
clc
cmp
clc
pusha
add
sub
cmp
add
sub
scas
lock
sbb
jnp
or
fwait
mov
sbb
pushf
lods
push
xor
arpl
add
jmp
inc
clc
in
in
repnz
clc
pop
stos
fdiv
xchg
xabort
push
clc
ja
or
ret
jmp
movsl
clc
adc
add
sub
pop
xchg
pop
cmp
clc
or
push
add
mov
clc
jmp
enter
add
clc
dec
aas
arpl
add
xchg
daa
clc
scas
adc
add
add
adc
add
and
out
mov
std
outsb
xabort
mov
jb
add
clc
dec
cli
jmp
cmc
jns
clc
scas
xchg
push
push
cmp
add
scas
repnz
jp
clc
into
mov
adc
add
je
push
data16
cmp
clc
push
clc
rorb
clc
arpl
add
mull
add
sbb
push
jae
add
add
add
add
add
fimull
aas
push
and
mov
bound
add
test
sarl
gs
adc
add
sar
clc
rolb
add
clc
jns
cmp
cmpsb
clc
sub
adc
add
jg
cmp
pop
and
add
ljmp
mov
mov
pusha
add
adc
add
clc
pop
clc
imul
std
mov
adc
add
clc
stos
cmp
aad
cmc
and
mov
add
pop
ret
clc
pop
clc
sti
xchg
dec
jp
add
fisttps
add
bound
add
insl
add
add
psrlq
imul
cmp
clc
pop
pop
xor
add
pushf
jl
add
pushf
mov
fsubrs
cmp
jb
add
loop
test
scas
jp
clc
mov
dec
int
popf
mov
jnp
mov
adc
add
add
or
clc
into
outsl
std
add
add
clc
lret
idivb
cmp
mov
clc
inc
add
jecxz
out
sahf
ret
clc
mov
lea
jnp
clc
loopne
xchg
push
push
scas
call
mov
fcmovb
clc
imul
fcmovnu
into
data16
xor
add
xchg
pushf
inc
add
xor
add
add
sahf
ror
mov
jns
pop
fildl
add
xchg
push
stc
lcall
dec
sub
into
mov
add
imul
add
repz
cli
pusha
add
in
out
cmp
in
cmp
xchg
xor
add
jecxz
cmp
scas
jb
add
cmp
add
sub
jns
clc
mov
stos
xor
dec
push
add
xor
add
sbb
add
clc
mov
add
push
mov
xor
add
addr16
movsl
clc
jle
gs
mov
pop
mov
cmp
clc
sub
sti
repnz
test
cmp
test
clc
cmp
testl
test
out
mov
repnz
mov
add
rcr
and
add
clc
or
dec
test
movsl
clc
int
add
jle
fimuls
push
xor
add
cmp
add
sbb
in
pop
push
add
rorl
popa
add
cmp
clc
adc
xor
mov
cmp
add
xchg
popf
adc
add
add
addr16
fisubs
aad
out
sbb
and
add
clc
or
mov
cmp
add
es
outsb
pop
fistpll
dec
push
clc
popa
add
test
jecxz
clc
push
add
out
inc
add
in
iret
outsl
or
ret
fbstp
jp
cmp
jmp
clc
cld
mov
pop
mov
inc
clc
lods
iret
and
add
push
clc
loopne
xchg
repnz
clc
push
sub
out
sbb
clc
out
out
xor
add
jne
mov
iret
pop
testl
jb
add
clc
imul
arpl
add
add
dec
lret
push
xor
fadds
cmp
enter
clc
pop
mov
add
and
add
push
add
cmp
xor
mov
clc
loopne
and
add
push
cmp
clc
mov
add
ja
xchg
fcoml
int
dec
scas
add
add
jb
add
in
cmp
add
clc
dec
mov
loopne
fbstp
clc
in
mov
outsb
pushf
cmovle
clc
fisttps
add
push
add
bound
add
sub
xchg
cmp
cltd
xchg
adc
add
xor
clc
mov
popa
add
jecxz
cmp
inc
clc
mov
push
and
add
add
imul
data16
addr16
iret
mov
dec
fmull
sbb
mov
add
gs
data16
leave
lcall
add
icebp
mov
mov
cmc
pop
xchg
loope
btr
inc
add
addr16
popf
shrl
xchg
or
mov
add
lea
xor
add
mov
and
add
mov
or
pop
or
lods
in
pop
mov
or
add
ret
clc
or
add
push
daa
clc
mov
aam
push
add
hlt
push
add
outsb
adc
add
mov
fistps
loope
shll
add
decl
mov
rcr
lahf
xchg
mov
xor
add
jecxz
aas
sbb
clc
js
clc
xor
add
js
add
lcall
add
add
clc
test
push
add
fnstcw
scas
es
adc
add
cmp
add
adc
add
xbegin
sbb
clc
movsb
clc
mov
and
add
add
sub
sahf
cmc
push
sar
sub
add
add
test
and
inc
clc
pop
xabort
cmc
mov
mov
add
clc
push
push
clc
add
cmp
sbb
clc
mov
pop
and
es
pop
push
jb
add
add
clc
enter
add
mov
cmpsl
clc
test
clc
call
popf
inc
clc
outsl
cmp
ds
fistps
add
in
cld
jmp
iret
cmpsl
clc
inc
clc
fdivs
add
jmp
clc
inc
add
inc
add
mov
nop
jg,pn
sahf
out
mov
cmp
mov
add
mov
cmp
jno
add
clc
jo
add
clc
ret
clc
mov
jmp
clc
fst
es
cmp
jae
add
rcl
push
imul
testl
into
push
or
clc
mov
scas
repnz
into
mov
clc
push
stos
xchg
sbb
pop
mov
jne
popa
add
xlat
dec
xchg
cs
dec
cwtl
adc
add
clc
sti
vxorps
clc
out
stos
js
add
xlat
stc
jl
and
add
add
and
add
inc
clc
mov
add
in
decl
decl
add
sbb
clc
mov
jo
add
clc
mov
repnz
add
inc
add
ficoml
add
dec
xchg
rorl
clc
xchg
out
xchg
mov
and
add
mov
mov
clc
dec
cmp
mov
add
mov
mov
add
add
inc
clc
inc
clc
in
cmp
fisubs
add
add
mov
incb
add
gs
push
pop
ljmp
clc
stos
hlt
sbb
cwtl
xbegin
dec
push
add
pop
lods
lret
add
sahf
xchg
and
add
add
add
mov
cld
xlat
enter
xabort
pop
adc
add
clc
cmp
fbld
in
mov
out
sub
ja
jno
add
clc
bound
add
clc
lods
in
dec
mov
add
jae
add
clc
push
clc
aaa
das
jecxz
setge
add
fdivr
mov
xchg
movsb
clc
adc
clc
loop
test
daa
clc
push
add
fistpl
cmp
xchg
dec
xchg
cmp
mov
push
push
add
mov
add
sbb
push
add
mov
inc
add
xchg
inc
clc
imul
push
mov
cmp
xchg
jle
fnstcw
mov
out
adc
add
xor
add
xchg
jbe
mov
add
add
lods
out
and
lret
xabort
xlat
xor
cld
popf
xor
movsb
clc
cmp
clc
jge
jbe
clc
repz
das
mov
and
sub
sbb
mov
clc
test
pop
clc
push
inc
add
xbegin
cmp
or
cmp
into
aad
xchg
xor
add
add
mov
cmp
cmpsl
clc
fstpl
jno
add
sub
leave
cmp
add
add
clc
stos
inc
add
push
clc
xabort
add
lret
xchg
data16
insl
rclb
fsts
clc
push
add
xabort
add
jl
pop
clc
xchg
pop
lea
add
mov
add
clc
cmp
push
fs
push
sbb
cltd
movsl
clc
jns
adc
add
xchg
dec
jg
add
xor
add
add
jge
clc
ljmp
mov
clc
dec
dec
xchg
aam
idivl
test
in
cmp
inc
clc
push
add
fs
push
mov
push
mov
clc
mov
cmp
clc
bound
add
adc
add
imul
inc
clc
test
clc
mov
lcall
push
clc
add
jge
clc
jecxz
mov
xlat
xchg
push
test
mov
int3
mov
daa
clc
pop
fucomip
icebp
xchg
imul
or
adc
add
cmpsb
clc
push
in
jp
clc
scas
fcompl
clc
out
mov
fs
mov
aas
dec
fisttpl
es
je
clc
imul
notl
add
dec
mov
clc
cmp
add
add
stc
and
add
add
mov
clc
fstp
cmc
inc
add
cmp
add
add
mov
add
lret
test
or
clc
lcall
icebp
cmp
add
jae
add
add
stc
das
and
add
xchg
and
add
movsl
clc
call
add
add
adc
add
cmp
clc
lods
xchg
sub
and
add
add
lea
jb
add
lea
add
mov
call
dec
adc
add
add
pusha
add
sub
add
add
inc
clc
sti
daa
clc
mov
nop
test
dec
cmp
clc
xchg
aaa
sbb
xabort
clc
out
pop
ja
mov
mov
add
repz
add
enter
or
jb
add
add
pop
clc
mov
mov
clc
aas
js
je
xchg
pop
or
addr16
in
push
je
lahf
xbegin
test
in
jbe
cmpsl
clc
test
lcall
add
mov
enter
repnz
add
mov
inc
clc
xabort
add
add
mov
clc
ja
clc
cmp
add
es
adc
adc
mov
add
or
clc
adc
addr16
xor
add
push
push
cltd
xchg
dec
cmp
xor
add
pop
imul
cmpsl
clc
shrl
xor
add
add
dec
xbegin
jnp
clc
xchg
mov
add
insl
imul
cmc
nop
sub
sub
add
clc
cltd
inc
clc
frstor
ss
pop
mov
out
testl
jl
inc
add
and
add
add
sub
clc
int
or
clc
mov
jno
add
cmc
jns
sub
add
add
mov
clc
insb
bound
add
cmp
pop
or
xbegin
cmp
jp
add
outsl
adc
add
add
add
add
xchg
test
and
add
mov
cmp
add
imul
push
add
xor
add
mov
int
jp
in
push
push
add
adc
add
add
ret
clc
mov
clc
and
add
gs
jecxz
in
data16
xor
add
or
add
push
sub
push
out
cltd
mov
clc
ror
fucomp
xchg
push
or
inc
clc
mov
add
dec
push
outsb
dec
dec
nop
call
into
adc
mov
scas
popa
add
fimull
push
clc
lods
xabort
clc
mov
or
outsl
mov
push
into
mov
lods
cld
in
cmp
lods
faddl
add
sbb
inc
clc
stos
mov
leave
push
cmp
add
xchg
hlt
or
clc
pop
cmp
out
inc
add
movsb
clc
jae
add
clc
mov
add
rcll
int3
fstl
add
clc
lret
cmpsl
clc
fs
xchg
lret
cli
sarl
in
mov
mov
clc
or
pop
clc
cmp
add
sbb
and
sub
mov
fistpl
movsl
clc
jbe
add
push
add
cmp
clc
or
clc
inc
add
xabort
dec
scas
aad
xbegin
hlt
fimull
stos
mov
add
xchg
cmc
int3
jnp
inc
add
jl
clc
loope
addr16
pop
sar
pop
mov
mov
add
loop
push
add
jno
add
rcrb
dec
cmp
fists
ret
xchg
push
pop
mov
std
gs
push
xchg
popf
cmpsb
clc
fcomp
and
add
add
mov
xor
add
gs
add
add
lret
out
cmp
ljmp
xchg
sbb
add
jb
add
push
add
std
jo
add
xchg
push
aas
inc
clc
push
cmp
sbb
stc
pop
mov
bound
add
sbb
add
clc
mov
push
clc
mull
testb
sub
cltd
mov
clc
inc
add
fistl
cmp
stos
je
fsubrp
arpl
add
push
add
push
add
addr16
sub
pop
aam
clc
xor
add
mov
nop
jne
clc
jge
and
add
inc
clc
idivl
stos
cmp
sub
cmpsb
clc
sbb
add
sbb
iret
rol
clc
insb
xchg
ret
clc
bound
add
add
add
xchg
mov
fiaddl
add
pop
clc
mov
add
push
clc
xchg
cmp
clc
xchg
into
inc
add
push
xabort
add
pop
nop
add
add
cmp
add
add
sbb
clc
cmp
push
fisubrl
pop
scas
mov
mov
int3
lahf
popf
dec
xchg
sar
clc
popa
add
hlt
fnstcw
add
aad
clc
mov
jns
jns
clc
pop
ds
sti
sbb
mov
out
xor
add
data16
inc
add
mov
clc
dec
call
xchg
cmp
pusha
add
cld
neg
adc
pushf
cmp
add
add
loope
lods
push
clc
jno
add
xor
add
clc
in
adc
add
dec
nop
pop
pop
add
add
es
inc
clc
adc
add
cmpsl
clc
stos
adc
add
add
add
add
insb
adc
add
inc
add
mov
das
xchg
lret
and
out
insl
jae
add
clc
mov
jg
adc
add
add
lods
add
add
ffreep
clc
stos
push
call
add
cld
popf
sub
pop
sbb
add
lahf
sbb
clc
mov
into
inc
clc
mov
clc
add
das
jmp
mov
push
add
stos
add
add
int
clc
dec
test
mov
int3
daa
clc
stos
jle
fimull
inc
clc
and
add
clc
mov
test
jne
xor
xor
add
dec
mov
add
pop
imul
add
add
add
add
clc
cmp
clc
mov
add
ja
add
lods
imul
add
clc
test
shrb
sarl
daa
clc
jb
add
notb
shrb
fists
add
or
push
ss
add
inc
add
xor
add
cmp
in
fwait
mov
bound
add
inc
clc
mov
pop
add
add
leave
push
std
outsl
int3
lret
stos
sarb
leave
lods
or
clc
adc
add
fiadds
xlat
ja
aaa
insl
cvtps2pd
add
add
mov
add
add
add
gs
pop
xor
leave
cmp
clc
mov
mov
cltd
mov
jle
clc
xor
add
movsb
clc
mov
xor
clc
xor
cs
clc
cmp
add
mov
pop
stos
pop
sub
js
clc
mov
add
cs
sub
add
clc
jg
or
pushl
push
mov
push
clc
daa
clc
loopne
fs
mov
add
icebp
push
mov
outsl
je
clc
sub
lahf
dec
ss
xbegin
push
xor
add
mov
jp
push
add
stos
or
add
fistl
add
ss
insb
mov
add
lods
repnz
add
add
dec
clc
add
add
mov
test
add
xor
xchg
jae
add
fbld
int3
lea
clc
gs
mov
xbegin
dec
fsub
clc
repnz
mov
clc
shrl
fucomip
or
xor
add
dec
sub
mov
add
sub
or
add
js
add
lret
sti
popf
aad
adc
add
add
mov
pop
mov
sub
fistps
sar
test
aad
inc
add
fxch
das
mov
pop
es
xchg
xchg
jns
add
push
clc
xor
add
sub
in
jbe
clc
push
jge
add
inc
clc
sub
adc
jbe
clc
mov
ljmp
outsl
loop
lods
mov
or
lcall
add
push
add
sbb
mov
and
add
dec
vpcomub
adc
add
push
clc
sahf
movsl
clc
iret
jecxz
ret
fnstenv
imul
adc
add
mov
lods
aaa
mov
add
add
add
pop
mov
mov
flds
add
cmp
das
xchg
movsb
clc
jo
add
test
pop
lods
popa
add
push
add
ja
dec
cwtl
movsl
clc
and
iret
lahf
outsb
leave
xor
add
add
add
sbb
clc
stos
loop
pushf
sub
add
sub
adc
js
add
cmp
xor
clc
mov
push
or
lods
lahf
loop
out
popa
add
push
loope
insl
jp
ret
clc
es
imul
inc
add
and
add
add
jae
add
into
mov
add
in
xor
add
clc
cmp
add
add
add
add
add
inc
add
add
outsb
fs
mov
lahf
sbb
xchg
test
fcoms
jecxz
lock
clc
loope
xchg
lods
shrb
add
test
fidivrs
add
pop
pop
mov
repz
mov
clc
push
add
inc
clc
in
cmp
clc
cld
cmp
jo
add
push
pop
push
fstps
mov
clc
in
inc
add
lret
pop
cmp
cld
mov
xchg
movsb
clc
dec
sbb
out
mov
int3
mov
add
jmp
popl
add
int3
push
add
ss
mov
cmp
int3
push
test
fnstenv
pop
fiadds
clc
sub
mov
xchg
mov
mov
add
add
fwait
push
add
adc
add
push
aaa
clc
vpshlq
popf
inc
clc
sbb
add
adc
clc
into
mov
fwait
push
clc
lahf
jbe
clc
push
jae
add
arpl
add
add
dec
xor
mov
repz
adc
add
clc
dec
and
add
clc
test
mov
outsb
mov
mov
add
addr16
jnp
mov
mov
adc
add
ret
sub
and
add
cwtl
push
ret
clc
inc
add
aas
popa
add
add
jb
add
jp
ret
gs
movsl
clc
imul
pop
mov
ss
gs
push
add
push
jp
sbb
add
jbe
add
xor
add
add
xchg
aam
add
outsb
xor
clc
es
int
clc
fwait
or
clc
mov
iret
sbb
adc
lock
mov
add
clc
and
add
add
add
testb
add
js
jl
clc
pop
stc
pop
mov
add
mov
lock
mov
xchg
sar
mov
add
std
dec
mov
clc
stc
fsub
clc
jae
add
fwait
sbb
push
add
dec
or
clc
mov
add
fwait
jmp
scas
movsl
clc
jb
add
add
dec
mov
int3
mov
mov
sbb
push
add
cmp
add
mov
enter
jp
push
adc
add
fisubs
add
ja
cmp
scas
push
dec
xchg
inc
add
jecxz
stos
loopne
push
pop
out
xor
clc
sbb
jp
cmp
push
add
jb
add
add
jp
clc
ss
adc
out
fiaddl
arpl
add
cmpsl
clc
adc
add
adc
add
cs
incl
add
clc
or
int
clc
std
outsb
fcoms
add
sbb
sub
dec
ja
icebp
pop
jns
cmp
in
push
add
mov
mov
add
mov
add
clc
dec
sub
add
clc
sub
add
mov
pop
stc
daa
clc
outsb
ret
clc
rcl
or
clc
pop
xchg
add
add
outsl
xor
add
lcall
add
clc
and
add
sub
push
xlat
mov
std
jo
add
shl
mov
mov
add
imul
pop
dec
mov
jg
xlat
frstor
cltd
test
clc
cmp
iret
or
cmp
mov
add
clc
mov
loope
sbb
jbe
sub
clc
test
clc
gs
lods
sub
icebp
jecxz
jns
clc
sub
clc
mov
clc
or
clc
xor
add
clc
push
cli
mov
push
inc
clc
cmc
bound
add
fldcw
inc
add
daa
clc
es
in
add
pop
mov
pop
clc
jp
das
cmp
mov
fisubl
add
dec
jg
fstpt
es
cmp
xor
add
jno
add
adc
add
xchg
cmp
xor
add
add
clc
add
clc
popa
add
jbe
ret
clc
lock
arpl
add
add
iret
and
add
push
pop
out
xchg
mov
add
adc
add
scas
push
in
sub
jge
add
push
clc
adc
imul
add
add
pop
clc
xlat
mov
add
push
scas
dec
icebp
jae
add
xor
pop
int
jg
add
mov
cmp
pop
pushf
adc
add
jno
add
add
into
popf
or
sub
int
bound
add
pusha
add
scas
fucomi
xor
add
add
dec
test
scas
sbb
adc
add
iret
enter
bound
add
in
sbb
ss
aas
ret
add
push
adc
add
adc
add
std
cmp
jbe
push
test
push
adc
clc
sahf
mov
adc
add
add
add
clc
jp
mov
lret
jge
fs
sbb
out
xabort
add
xor
add
push
clc
test
xchg
repnz
push
add
jg
loop
mov
je
mulps
clc
add
add
loopne
stos
pop
xor
add
pop
das
or
pop
xor
add
add
fcompl
push
add
jmp
outsl
cmp
add
stc
cmp
movsl
clc
dec
cmp
clc
scas
fisubl
add
mov
ret
call
mov
jg
jl
xchg
das
push
dec
push
enter
cld
jae
add
ljmp
dec
mov
incl
clc
es
clc
lret
clc
mov
jge
mul
clc
xor
add
mov
mov
sub
cmp
out
adc
add
clc
sar
sub
clc
clc
test
dec
jmp
data16
adc
add
pop
push
add
push
aas
xchg
mov
mov
fiadds
clc
js
test
fwait
fs
iret
clc
cli
sti
adc
xchg
adc
add
roll
xor
cmpsl
clc
inc
clc
ret
clc
ljmp
push
add
clc
popa
add
mov
cmp
add
inc
add
stos
xor
add
cmp
push
clc
cmp
xor
xchg
stos
cmp
clc
insb
or
add
fisttpl
adc
add
clc
xor
add
outsl
mov
or
or
js
xchg
daa
clc
gs
adc
add
jecxz
and
jmp
clc
lods
sbb
xchg
sub
sbb
add
test
jmp
clc
ja
scas
or
push
add
adc
add
add
int
xor
add
pop
pop
and
add
clc
xor
add
add
add
fiadds
push
pop
mov
add
adc
add
add
xchg
cmp
and
add
add
cmp
add
lods
shll
clc
movsb
clc
or
add
push
das
sub
into
dec
add
add
pop
add
add
add
jle
xchg
pop
mov
pop
xchg
out
xabort
cmp
clc
sar
pop
add
add
scas
mov
mov
gs
xor
add
dec
pop
bound
add
aam
add
mov
dec
mov
clc
or
push
cmp
xchg
mov
or
xchg
leave
lods
stc
ret
clc
sub
mov
xor
mov
clc
xor
add
clc
adc
add
call
add
sbb
add
js
inc
add
add
clc
adc
add
lea
add
clc
pop
clc
fisubrs
jns
cltd
cwtl
call
add
mov
add
xchg
cmp
clc
cmp
add
movsl
clc
clc
int
clc
xor
mov
imul
add
adc
clc
cli
and
add
clc
cmpsl
clc
jmp
cmp
clc
xchg
mov
jecxz
xor
dec
insb
cmp
lock
add
add
xabort
out
push
add
lea
imul
add
cmp
cmp
movsl
clc
popl
jae
add
enter
add
int
clc
add
add
fimuls
add
popf
loop
clc
lea
inc
add
pop
push
scas
stos
jnp
xchg
jmp
jns
add
add
add
xchg
xor
mov
push
cmp
movd
clc
cmp
pop
or
ret
jmp
add
clc
stos
ss
or
mov
push
or
cmp
es
jle
cs
sbb
clc
xor
add
xchg
pushf
movsl
clc
xor
add
out
data16
xchg
shlb
clc
push
clc
pop
jo
add
loop
mov
lret
mov
repnz
mov
pop
jmp
clc
movsl
clc
jl
sub
clc
ds
mov
mov
clc
dec
pop
ja
clc
shl
clc
or
clc
lea
aam
or
mov
clc
xchg
arpl
add
cmpsl
clc
cmp
lcall
mov
and
add
clc
inc
clc
sub
add
aas
mov
popl
xor
add
popf
popa
add
mov
in
pop
mov
mov
cld
lahf
inc
add
clc
in
dec
jns
clc
and
add
add
xchg
int3
xchg
xchg
push
add
pop
shlb
add
popf
imul
clc
mov
xchg
cmpsl
clc
fdivrl
cmp
add
inc
add
push
add
inc
clc
pusha
add
lock
add
cmp
je
clc
add
add
lea
add
push
mov
mov
jae
add
add
fadd
clc
mov
repz
jbe
or
ret
popf
mov
jmp
or
add
push
add
aad
push
xor
add
cmp
mov
push
add
data16
imul
add
xchg
lods
data16
pop
pushf
mov
push
add
out
das
adc
add
clc
sub
shlb
pop
out
sbb
push
mov
clc
stc
pop
ss
add
add
add
aad
fidivrs
xor
add
clc
inc
add
outsl
enter
clc
cmp
add
sbb
cmp
sahf
sahf
dec
fnsave
add
inc
add
cmpsl
clc
rol
clc
mov
mov
std
sti
inc
clc
sub
xchg
xor
add
cmp
aam
clc
jp,pn
clc
lock
cmp
add
into
out
pop
adc
add
add
stc
mov
push
mov
add
add
sub
sahf
repz
clc
vxorps
pop
mov
jns
clc
movsb
clc
loop
mov
clc
pop
clc
jno
add
add
roll
mov
ret
cmp
clc
scas
jbe
clc
inc
add
inc
add
xchg
fldl
add
imul
mov
add
cmp
fmulp
mov
dec
mov
clc
sti
in
adc
add
xchg
daa
clc
lods
inc
clc
out
and
add
add
add
fucomp
mov
clc
nop
ret
clc
loop
fwait
push
add
fldcw
inc
clc
jne
addr16
push
jmp
mov
xor
add
add
bound
add
xchg
fcmovb
clc
movsb
clc
jne
shrb
in
add
add
clc
testb
mov
ret
clc
pop
push
js
arpl
add
clc
loope
jg
and
test
or
daa
clc
mov
add
sub
clc
int
add
rorl
clc
jecxz
sar
add
ret
sbb
add
add
in
and
or
clc
loopne
outsl
jmp
jle
jne
in
cli
or
repnz
ljmp
bound
add
add
cmp
xchg
gs
adc
add
xor
add
dec
jno
add
clc
mov
add
dec
add
test
mov
mov
stc
test
mov
clc
repnz
jp
dec
sub
and
dec
imul
add
xor
clc
xchg
divb
add
xchg
insl
jge
add
inc
clc
cmp
sahf
inc
add
addr16
push
cli
cmp
sub
dec
and
lret
add
xor
add
loope
sbb
clc
mov
add
test
clc
mov
clc
lcall
mov
pop
cmp
mov
cmp
add
into
cmp
inc
add
jns
shrb
repz
cmp
daa
clc
jmp
jmp
mov
inc
clc
enter
add
sub
add
cmp
mov
data16
adc
add
add
repnz
jmp
sbb
out
sar
cwtl
movsb
clc
loopne
xor
adc
xlat
imul
add
add
add
push
cmp
pop
into
mov
inc
clc
cmp
adc
add
clc
sbb
sar
ljmp
sbb
clc
jno
add
add
imul
pop
bound
add
in
fsubrl
ss
pusha
add
mov
xor
add
cmp
mov
mov
clc
cltd
xor
add
clc
sahf
or
clc
mov
add
clc
jmp
clc
inc
clc
aam
mov
dec
insl
push
sub
test
add
add
add
add
pop
es
jmp
repnz
vmovhps
cmp
out
fwait
sti
push
add
add
add
add
jmp
xchg
jns
add
sbb
pushf
and
add
je
clc
leave
repz
dec
ja
or
push
add
call
clc
dec
dec
data16
adc
add
neg
cmp
aas
aam
add
arpl
add
movsb
clc
jbe
add
push
add
push
add
loopne
adc
add
push
add
aam
fcomps
out
insb
inc
add
bound
add
add
adc
add
add
dec
push
loop,pt
or
jne
add
add
add
push
lods
jnp
add
outsl
mov
mov
add
clc
push
pop
xchg
test
data16
das
clc
hlt
xchg
outsb
inc
clc
lods
fwait
test
pop
js
gs
lcall
adc
add
add
add
pop
clc
lahf
xchg
pop
stos
cmp
add
add
or
push
call
add
mov
cld
jns
notl
add
movsb
clc
sar
clc
jl
clc
enter
sub
mov
rolb
add
out
xchg
mov
xabort
dec
mov
clc
std
xchg
push
add
add
add
pusha
add
jmp
clc
push
imul
dec
fs
roll
add
mov
sbb
nop
and
add
clc
xchg
xor
and
add
push
pop
or
pop
jmp
push
or
clc
mov
pushf
inc
clc
loop
scas
cmp
pusha
add
je
aam
mov
clc
mov
xchg
movsb
clc
pop
pusha
add
cmp
clc
sahf
xor
clc
xor
add
bound
add
xchg
ret
clc
out
dec
cld
mov
clc
mov
add
dec
stc
lcall
jnp
je
clc
pushf
fidivl
add
ja
and
jecxz
daa
clc
sub
or
fmuls
or
clc
fsts
imul
clc
mov
adc
add
lods
cmp
or
shll
add
add
xor
add
pushl
cs
add
test
clc
add
aaa
push
add
jmp
clc
pop
call
je
clc
je
clc
mov
jbe
clc
cmp
and
out
addr16
cmp
clc
in
daa
clc
push
std
push
pop
sbb
clc
mov
xlat
bound
add
clc
enter
fcomp
cltd
mov
insb
cmp
clc
repnz
adc
add
add
fstpl
fcomps
shlb
xor
add
lret
mov
push
xor
add
imul
jmp
cld
loope
pushf
aad
clc
dec
test
std
std
inc
clc
sar
jp
pop
lret
add
add
clc
int3
jns
cld
imul
cmc
push
adc
movaps
add
imulb
dec
push
add
es
ret
clc
mov
add
add
test
add
add
aaa
jne,pt
movsl
clc
call
lock
clc
fwait
cli
mov
add
mov
mov
add
cli
fwait
xor
popf
sub
fdivrs
out
stos
fwait
mov
add
je
shrb
add
add
dec
loop
xchg
xabort
int3
cmp
pop
cmp
xor
sbb
aas
icebp
pop
push
add
jl
xbegin
clc
or
clc
stos
jge
xabort
or
clc
xor
add
mov
fdivs
add
mov
sub
or
bound
add
inc
add
and
add
clc
push
outsl
loope
mov
add
jge
add
mov
bound
add
out
xlat
ss
out
cld
add
add
pop
cmp
cmp
add
and
add
clc
lea
call
clc
imul
pusha
add
pop
clc
aad
loop
sahf
pop
aam
mov
add
or
jl
out
lret
add
lea
sbb
push
cmc
and
jb
add
add
pop
sub
add
xchg
mov
add
jno
add
mov
add
add
loopne
or
add
sar
cmpsb
clc
push
add
int
cmp
add
aas
add
inc
clc
pushf
cmp
clc
xchg
js
clc
add
add
add
xor
add
stos
xchg
lea
int
mov
jne
clc
es
xchg
int
xchg
popf
flds
add
sub
mov
push
pushf
xchg
imul
clc
call
xlat
repz
pop
and
add
cmp
add
xabort
xchg
bound
add
clc
call
pop
inc
add
mov
clc
cmp
iret
jp
clc
rcrb
fs
xchg
inc
add
mov
add
mov
xbegin
add
clc
push
clc
mov
add
dec
mov
out
cmp
clc
lcall
sbb
add
loop
sub
add
add
ja
add
cmp
mov
int
adc
add
jecxz
out
xor
insl
push
mov
add
add
jp
idivl
inc
clc
enter
push
add
not
cwtl
inc
add
add
add
lods
fcoms
add
add
add
clc
sbb
clc
xor
mov
pop
and
rcrb
push
add
lret
bound
add
clc
jns
rcll
cmpsb
clc
cmpsb
clc
lahf
scas
loopne
outsl
and
sub
xchg
sbb
add
mov
clc
mov
dec
lods
pop
gs
and
add
test
and
add
out
jp
and
add
in
cmpsl
clc
stos
mov
cmp
loopne
gs
sti
cmp
movsl
clc
pop
push
mov
pop
xor
add
push
add
jge
clc
cmpsl
clc
mov
jb
add
loop
sub
add
lock
xchg
pushf
popf
pop
cwtl
call
mov
mov
add
xchg
dec
lods
iret
je
clc
sub
call
clc
push
and
dec
cmpsl
clc
inc
clc
ret
clc
dec
dec
lret
clc
dec
dec
jp
add
outsb
push
add
cmp
xor
arpl
add
cmp
mov
pop
xchg
mov
add
inc
clc
and
lcall
out
cmp
cmc
cmp
mov
mov
add
mov
sahf
std
push
cmc
jle
clc
stos
out
fisubl
xchg
cmp
sbb
clc
sbb
add
lret
mov
cmp
add
ror
add
add
outsb
repz
xchg
addr16
push
add
std
mov
clc
imul
es
mov
clc
das
cmp
cmp
clc
dec
push
push
mov
loopne
mul
clc
mov
clc
mov
clc
inc
add
pusha
add
cmp
add
lea
add
dec
inc
add
pop
out
sbb
emms
jge
lods
jmp
push
outsb
mov
mov
add
sahf
or
push
jmp
dec
and
add
je
out
or
aaa
cmc
psllw
gs
inc
clc
jnp
pop
xor
shll
sub
pop
push
jg
cmpsl
clc
xchg
popa
add
repnz
jecxz
gs
mov
out
mov
push
clc
outsl
adc
add
mov
aas
in
jno
add
testb
push
test
loope
pop
and
mov
mov
and
add
shrl
ja
mov
xor
add
clc
and
add
adc
add
lahf
jmp
fistps
inc
clc
btc
fimuls
clc
xor
add
add
popa
add
incl
sar
add
repz
clc
jae
add
cmp
outsl
xchg
repz
mov
jns
clc
cs
fidivrs
nop
pop
dec
clc
mov
or
es
xor
add
push
lret
sti
and
add
outsl
sar
add
push
pushf
and
add
add
add
add
clc
pop
loopne
sub
cmp
dec
adc
add
clc
movsb
clc
out
jl
or
cmp
clc
pop
js
fsubs
jno
add
mov
clc
xchg
mov
clc
cmp
clc
mov
clc
pop
filds
mov
clc
popf
sar
pushl
add
lret
sub
sar
mov
add
jl
fists
out
mov
mov
mov
add
cmp
mov
movsl
clc
xchg
mov
xchg
pop
repz
clc
clc
inc
add
sbb
pop
out
push
cli
jno
add
push
add
cmp
clc
adc
add
adc
add
mov
add
icebp
push
test
sub
jecxz
or
xchg
out
nop
jbe
jecxz
dec
sub
pusha
add
repnz
pop
jl
adc
add
clc
mov
dec
mov
mov
clc
ss
or
clc
dec
insb
jg
loope
test
sti
mov
mov
pop
push
fdivr
adc
add
clc
cmp
cmp
clc
cmp
into
movsl
clc
pop
push
add
add
mov
add
pop
clc
not
ret
clc
out
sub
sbb
divl
stc
add
add
sub
rclb
mov
sub
adc
clc
rcrl
clc
mov
add
xor
add
clc
out
xchg
pop
clc
add
jne
decb
xchg
mov
mov
pop
shr
pusha
add
and
mov
add
mov
add
add
add
inc
add
push
add
xlat
jmp
add
repnz
add
jbe
sbb
sbb
int
clc
dec
inc
clc
mov
clc
or
xbegin
out
sub
sar
xor
add
ss
cmp
and
add
mov
add
jle
xor
add
add
clc
int3
adc
add
lret
push
xchg
je
clc
frstor
repz
mov
test
sahf
outsb
mov
clc
fcoml
mov
clc
stos
jo
add
clc
xchg
pop
pop
shr
cltd
mov
clc
fstpl
mov
add
add
inc
clc
xor
add
mov
add
aad
aas
scas
or
ret
clc
das
xbegin
movsl
clc
pop
lahf
pop
lea
clc
push
clc
mov
loope
sar
add
test
cmc
adc
add
and
fmulp
add
cmp
ja
clc
push
outsb
sbb
add
add
test
clc
xchg
fcmovu
hlt
js
add
push
add
test
mov
add
cld
add
movsl
clc
loopne
and
add
and
add
add
sbb
add
add
add
cmp
dec
test
je
clc
stos
stc
sub
lock
pop
pop
xchg
sar
lret
test
outsb
imul
add
clc
out
push
add
inc
add
cmpsb
clc
sbb
clc
inc
add
iret
add
add
clc
push
add
adc
add
test
outsb
pop
adc
mov
inc
add
add
add
dec
cmp
xchg
dec
insb
lock
insb
ret
clc
out
mov
mov
add
cmp
fucom
clc
pop
call
enter
imul
stc
mov
push
sbb
add
jecxz
insb
mov
xchg
sub
jnp
add
add
clc
ja
add
hlt
negl
mov
clc
outsb
inc
clc
jl
in
cwtl
jg
clc
into
sbb
clc
lahf
adc
xabort
jnp
mov
xchg
sbb
add
inc
clc
xor
clc
and
add
cli
stc
sbb
add
clc
js
clc
in
mov
loopne
push
add
push
add
es
and
add
sbb
mov
imul
cmp
repnz
add
add
jae
add
xlat
lahf
xchg
jecxz
bound
add
mov
add
jge
int3
in
mov
push
add
xor
add
lods
jne
pop
sbb
add
push
xchg
js
lock
add
xchg
mov
sbb
pop
clc
mul
clc
push
mov
add
outsb
or
add
adc
clc
mov
clc
scas
and
add
xabort
call
xchg
sti
inc
clc
xchg
push
fisubl
clc
cmp
pop
shlb
packuswb
fsts
mov
push
add
dec
cmp
mov
adc
add
clc
pop
div
fdiv
jo
add
mov
clc
jl
aam
add
add
psubd
add
aaa
sbb
push
add
loop
push
add
xchg
xabort
add
ret
clc
sbb
out
mov
ficompl
clc
mov
mov
ret
clc
mov
push
add
mov
add
add
add
sbb
xchg
sub
jge
xbegin
scas
stos
bound
add
add
scas
hlt
or
addr16
sti
stc
fbstp
add
cmp
push
add
and
push
add
push
add
insl
pop
inc
add
mov
push
add
sub
add
icebp
pop
clc
cmc
xor
add
cmp
dec
push
add
rcll
add
in
push
data16
cmp
add
dec
scas
aam
add
cmp
jp
clc
cmpsb
clc
pop
sar
add
jg
add
popf
cmp
clc
cs
mov
clc
inc
add
jns
pop
push
sar
sbb
inc
add
into
add
add
pop
fbstp
daa
clc
jle
mov
add
add
clc
sti
sub
add
lock
mov
add
cmpsb
clc
ss
xor
add
cmp
pop
pop
lret
das
sbb
sub
pop
pop
daa
clc
adc
add
loopne
cmp
and
add
cmp
clc
jnp
int3
pop
mov
pop
jne
mov
add
outsb
into
or
xchg
shl
clc
call
out
cmp
inc
add
imul
inc
add
into
outsb
faddl
add
insb
roll
cmp
clc
push
clc
imul
gs
shll
xchg
in
iret
push
in
sti
sbb
mov
dec
outsl
add
add
xchg
mov
push
icebp
movsb
clc
pop
or
je
sbb
jle
inc
add
mov
into
fsubs
add
or
push
add
adc
add
add
fptan
outsb
jl
clc
cltd
jg
clc
cltd
push
clc
ss
add
ss
push
pop
cmp
dec
mov
stc
leave
mov
sub
aas
insb
or
fnsave
add
adc
clc
loope
mov
repz
add
xchg
inc
clc
adc
add
pop
mov
inc
add
xor
add
add
in
mov
rclb
sahf
es
jmp
adc
mov
enter
incl
insl
je
dec
push
add
mov
add
adc
add
xchg
mov
aas
mov
popf
inc
clc
or
clc
fisubrs
mov
and
add
gs
cs
jl
dec
mov
call
clc
xchg
dec
cmp
clc
frstor
xchg
mov
mov
leave
sar
clc
and
pop
sbb
dec
mov
fidivs
jbe
ja
clc
sub
inc
add
push
mov
mov
dec
fmuls
clc
mov
xor
cmp
sti
mov
add
ja
ret
clc
popa
add
and
add
rclb
fdivrl
aas
jo
add
mov
add
push
jecxz
aaa
sub
cwtl
cltd
cltd
sbb
inc
clc
outsb
mov
push
clc
cmp
or
or
add
adc
add
and
add
mov
fistps
and
movsb
clc
dec
es
jno
add
push
pop
clc
dec
pop
clc
mov
dec
mov
add
je
pop
xbegin
ret
clc
bound
add
cmp
jo
add
lret
dec
repz
push
add
xchg
cmp
lret
xchg
rcl
es
test
clc
sub
add
push
outsb
sbb
pushf
into
xchg
lahf
sub
add
fstl
mov
int
adc
add
add
add
clc
sbb
add
lea
add
out
cmp
add
sub
clc
ror
xor
add
clc
cmp
clc
adc
clc
lret
js
add
pop
pop
addr16
out
cld
add
add
dec
xchg
bound
add
movsb
clc
or
mov
clc
jns
jle
mov
clc
test
or
clc
iret
push
add
pop
fildl
in
sub
out
inc
add
fnstsw
das
je
clc
aas
push
or
mov
add
test
movsl
clc
lea
clc
fildl
clc
aam
push
add
and
add
xor
je
or
cmp
gs
in
add
add
sbb
faddl
add
sahf
push
jmp
outsb
sub
push
ficoml
add
push
test
sti
call
clc
mov
adc
add
adc
aam
add
inc
clc
ljmp
jl
sar
mov
pop
cmp
inc
add
in
mov
in
lods
adc
sub
in
lahf
leave
std
clc
jo
add
add
std
movsb
clc
out
enter
cmp
push
add
sar
clc
cmp
push
sti
mov
add
add
icebp
xor
ljmp
fstps
add
add
clc
aad
or
lock
mov
add
jne
loopne
ffreep
clc
and
add
clc
mov
sub
sub
clc
sar
aaa
inc
clc
dec
mov
and
and
add
add
cli
ds
pop
adc
add
clc
pop
aaa
cli
fimull
mull
xchg
rcrb
sahf
test
add
clc
test
lahf
or
xchg
nop
dec
in
cmp
xbegin
shlb
add
xor
clc
jnp
sti
dec
mov
adc
add
cwtl
das
mov
add
pushf
mov
adc
add
lea
adc
add
mov
loopne
lock
clc
pushf
aaa
lret
clc
mov
jle
add
out
mov
fldcw
clc
std
out
scas
aam
push
add
add
dec
push
clc
cmp
add
mov
add
xor
add
bound
add
mov
sbb
clc
js
ret
add
push
in
jge
inc
clc
sbb
add
jge
outsl
jo
add
xchg
xchg
sbb
add
xor
add
or
add
int3
mov
fldenv
add
sbb
jb
add
clc
jbe
dec
out
test
pop
jb
add
dec
pop
jb
add
xor
add
clc
es
and
and
add
ret
clc
sub
sar
jbe
insb
mov
clc
lock
push
clc
mov
add
add
ja
cli
repz
data16
addr16
test
clc
cmp
cltd
pusha
add
ss
cmp
test
sub
xchg
pop
push
add
add
imul
adc
adc
add
adc
add
push
xchg
movsb
clc
mov
sbb
dec
pop
cwtl
cmpsb
clc
jns
add
jge
rol
clc
pop
mov
add
sub
add
cltd
into
outsl
jle
add
call
inc
add
cmc
fnstcw
lods
call
repz
stc
jne
jne
stos
mov
xchg
inc
clc
fisubl
add
repz
add
loopne
loopne
push
jbe
sub
mov
clc
ljmp
ret
clc
lock
jbe
add
sahf
xchg
mov
clc
ljmp
adc
and
dec
movsb
clc
repnz
xchg
fisttpl
mov
push
clc
lods
iret
push
xor
add
add
push
add
je
lock
add
loopne
or
add
clc
imul
xchg
add
add
add
inc
clc
jle
add
xor
add
and
add
jnp
cmp
push
clc
imul
add
cwtl
pop
xor
add
negl
test
fistpll
aad
clc
push
outsb
cld
xor
push
add
bound
add
dec
mov
add
clc
sbb
clc
adc
add
cs
mov
clc
in
cs
push
add
fistpll
in
or
dec
pop
stos
xchg
or
data16
fucomp
sub
add
cmp
leave
mov
lcall
or
clc
sub
jmp
cltd
in
cmc
sbb
or
jecxz
mov
cmp
pop
xchg
pop
sar
clc
test
ss
out
hlt
xchg
add
add
add
xchg
mov
and
add
add
test
pop
dec
add
add
add
jnp
nop
jmp
clc
adc
add
clc
mov
clc
jg
cmp
add
pop
setnp
xor
add
mov
add
lock
clc
xbegin
dec
xor
add
data16
sbb
test
clc
filds
add
ret
clc
and
sub
add
add
add
cltd
ljmp
clc
lock
add
clc
inc
add
pop
enter
push
add
mov
jmp
xchg
jp
xor
add
add
fidivrl
mov
decb
dec
push
cmp
xchg
test
add
ret
inc
clc
std
clc
in
xabort
clc
or
das
sbb
or
aad
add
mov
and
fstpl
add
aad
clc
jne
and
add
mov
clc
nop
pop
sar
jae
add
lock
add
clc
daa
clc
aas
sub
clc
sbb
clc
jbe
pusha
add
lea
clc
dec
aam
sub
xor
add
cmp
clc
push
mov
xabort
or
sar
cmp
add
mov
add
dec
sbb
dec
sti
adc
cmp
add
mov
call
sbb
cmp
add
pushf
jo
add
jno
add
clc
cwtl
loopne
and
add
cld
push
scas
push
add
mov
add
mov
clc
bound
add
jno
add
gs
clc
filds
filds
add
aas
push
add
iret
dec
mov
mov
add
add
sti
cmp
mov
jne
cmpsb
clc
in
je
daa
clc
push
loope
cmp
add
add
add
clc
clc
mov
and
add
into
test
testb
inc
clc
and
cmc
imulb
mov
push
push
add
je
mov
sbb
rep
or
or
xchg
add
add
push
in
xor
add
popf
cmp
out
push
clc
mov
jnp
mov
pop
mov
loopne
cmp
stos
or
mov
sub
mov
jl
dec
push
std
pop
clc
inc
add
xlat
sti
inc
add
leave
jnp
or
clc
movsb
clc
aaa
out
xor
add
inc
clc
data16
sub
jmp
push
add
outsb
cld
pop
fdivs
clc
cmpsb
clc
pop
and
xchg
and
add
test
mov
outsl
push
add
sbb
xlat
test
lahf
sar
pop
iret
divl
decl
sbb
clc
mov
clc
push
sbb
clc
or
out
jne
jp
clc
sub
cmp
ss
inc
clc
imul
xchg
in
out
sbb
add
add
mov
lret
push
add
push
out
ficoml
clc
leave
out
call
xor
add
or
push
lahf
ret
clc
mov
clc
outsl
clc
clc
inc
add
aas
mov
aad
dec
adc
add
xabort
add
dec
jb
add
bound
add
out
or
add
in
notl
in
push
add
push
clc
imul
push
es
dec
inc
clc
cmc
std
or
sub
ret
clc
push
repz
enter
loopne
pop
adc
and
aas
xchg
xor
add
inc
add
aam
clc
xor
add
clc
fnstsw
push
add
jno
add
add
pop
rol
clc
xor
popa
add
xor
add
mov
jge
cmp
mov
add
addr16
aaa
data16
imul
clc
cmp
clc
clc
sbb
cmp
push
in
cld
into
mov
aas
iret
out
mov
add
jne
adc
dec
mov
add
mov
adc
add
add
xchg
xchg
ljmp
pusha
add
or
ss
daa
clc
push
clc
arpl
add
cwtl
out
cmp
hlt
out
stos
outsl
cmp
mov
clc
push
clc
cwtl
cmpsl
clc
mov
aas
mov
clc
sub
and
mov
sbb
sub
add
lret
cmp
call
add
pop
lcall
jmp
inc
clc
fisttpll
cmp
add
js
mov
stos
stos
out
dec
push
stos
xchg
cmp
adc
in
inc
add
ret
clc
jmp
ds
iret
arpl
add
add
and
hlt
push
mov
cmp
sub
clc
aam
add
sar
jmp
add
lods
scas
xor
add
call
clc
mov
pop
add
add
clc
xchg
pop
pop
popf
xchg
and
stc
lods
je
pushf
adc
add
data16
add
add
dec
cmp
loopne
mov
and
add
cmp
ret
mov
lock
add
test
add
add
add
add
sub
pop
clc
add
add
inc
add
mov
lret
outsb
sar
jns
or
jl
sub
add
lahf
fbstp
adc
add
scas
dec
mov
adc
add
dec
xor
add
jp
xabort
add
mov
leave
cmp
enter
push
inc
add
jmp
dec
cmc
dec
inc
add
sbb
push
lock
xchg
data16
mov
inc
add
cmc
leave
fs
pop
add
clc
cld
mov
clc
cld
jmp
clc
dec
leave
test
in
adc
test
rcll
cmpsl
clc
lret
xor
add
dec
or
add
clc
and
add
add
add
cmp
neg
repz
add
clc
arpl
add
add
push
and
add
imul
add
inc
add
pop
popf
jp
divb
clc
xchg
mov
adc
add
mov
lcall
add
ljmp
add
adc
add
xchg
xbegin
fiaddl
inc
add
push
add
fdivrs
rcrl
cltd
fstpt
es
mov
add
cmp
clc
adc
add
add
ja
adc
add
lret
xor
sbb
call
adc
add
clc
jo
add
add
dec
fidivl
add
outsb
inc
clc
out
movsb
clc
leave
es
push
incl
clc
jle
cmp
clc
cmp
daa
clc
mov
pop
cmp
fstps
mov
pop
mov
mov
pop
inc
add
ljmp
add
sar
add
sbb
cltd
pop
add
clc
jp
clc
inc
add
fcmovbe
adc
add
clc
sbb
push
rcr
cmp
add
out
xlat
or
and
add
aad
add
lock
lods
cmp
adc
add
pop
adc
add
ljmp
lahf
mov
add
jnp
add
mov
out
in
pop
cmp
pop
lods
pop
jg
fcomi
pop
clc
sar
add
add
test
clc
popa
add
cwtl
jne
clc
arpl
add
inc
add
int
repz
clc
xor
add
divl
xor
add
and
hlt
shr
sar
xchg
mov
js
arpl
add
sarl
sub
in
dec
testl
add
pop
pmaxub
clc
sbb
and
add
pop
std
xchg
sahf
xor
add
mov
outsb
jl
clc
call
inc
add
mov
clc
cmc
mov
xbegin
add
stc
xchg
mov
stc
sbb
clc
sbb
jle
clc
int
sti
and
add
sbb
stos
ja
and
pop
lret
outsb
mov
dec
mov
add
xor
add
clc
aad
clc
sbb
push
add
cmp
push
sub
pop
clc
push
jb
add
add
fstl
add
jae
add
enter
test
outsb
push
clc
in
adc
cmp
mov
cltd
or
add
out
nop
cmp
jmp
ja
in
ret
add
je
push
pop
mov
call
clc
mov
clc
inc
clc
aam
adc
add
add
loope,pt
inc
add
std
lahf
pandn
ja
xor
std
mov
clc
fadds
std
loop
in
and
add
clc
test
jp
pop
adc
dec
jg
cmp
movsb
clc
adc
add
sbb
clc
nop
push
clc
mov
pop
add
add
xchg
xor
sbb
ret
clc
data16
jmp
and
add
xchg
push
lea
test
imul
into
pop
dec
sub
clc
je
add
jg
clc
xabort
pop
xbegin
jb
add
ljmp
mov
or
push
test
cmp
add
cmp
xchg
push
add
mov
das
jg
imul
repz
mov
push
add
or
or
ja
loopne
jl
jne
call
add
or
add
js
xchg
int
into
inc
add
cmp
pop
push
mov
sub
fwait
in
mov
insl
pop
cmc
insl
push
add
out
sbb
xchg
sbb
pop
clc
sbb
clc
jo
add
into
decl
dec
xor
add
clc
movsl
clc
xchg
sbb
aas
loopne
sub
mov
add
ljmp
clc
cmp
cmp
cmp
clc
aaa
or
popa
add
sub
add
mov
add
pop
clc
das
xchg
lods
adc
add
xor
add
pop
nop
pop
push
add
xor
inc
add
sbb
iret
xchg
xor
add
data16
aaa
addr16
cmp
adc
add
ret
add
pop
and
add
cmp
clc
or
xor
add
test
clc
enter
add
ds
pop
pop
imul
add
lods
not
ss
inc
add
cmp
clc
cmp
je
sbb
add
fmull
clc
das
fidivrs
clc
out
cli
jle
clc
ds
clc
sub
pop
std
lret
xor
add
add
clc
pop
xabort
fiaddl
add
iret
mov
add
clc
int
add
add
clc
sbb
pop
out
sbb
loop
and
add
lea
add
bound
add
dec
jge
fidivrs
clc
xchg
jge
sub
lock
jne
mov
clc
clc
mov
xchg
test
loopne
adc
xchg
not
es
jg
icebp
mov
clc
sbb
jno
add
add
cmp
add
inc
clc
xor
stc
jp
movsb
clc
xchg
fldl
clc
xor
add
clc
mov
push
test
shufps
arpl
add
mov
outsb
test
xchg
fidivs
aaa
xchg
dec
cmp
ss
or
mov
clc
jmp
test
je
je
outsl
adc
add
add
out
in
push
lret
xchg
lods
lock
clc
xlat
out
mov
add
add
out
incl
add
icebp
pushf
mov
add
add
add
in
lahf
lods
mov
or
call
adc
add
add
add
out
mov
sbb
sbb
nop
call
clc
mov
add
int
clc
xor
add
mov
inc
add
dec
dec
lods
cmpsb
clc
sub
clc
jae
add
add
clc
dec
setns
inc
clc
sbb
mov
mov
jmp
insl
fsubs
add
nop
mov
je
add
add
ds
out
hlt
pop
sub
xabort
dec
outsl
lods
aaa
and
add
inc
add
imul
sahf
in
sbb
clc
pop
sbb
clc
push
pop
sbb
mov
add
dec
jg
pop
int3
lcall
dec
pop
int3
cwtl
and
inc
add
negl
push
add
cmp
cmpsl
clc
jl
jl
sbb
clc
mov
mov
xchg
popa
add
mov
and
pop
cmp
cmp
clc
sub
loop
clc
dec
inc
add
sbb
sahf
lcall
ror
mov
add
and
add
add
es
mov
dec
scas
inc
add
dec
pop
clc
and
add
clc
fidivrs
call
rolb
clc
enter
jecxz
js
and
add
clc
fwait
push
test
jae
add
add
dec
out
stos
fwait
or
insl
and
add
sub
mov
lock
clc
leave
aaa
inc
add
push
xor
add
mov
add
data16
inc
add
xchg
aam
into
imul
adc
add
add
aam
pop
push
pop
nop
loope
lcall
inc
clc
cmp
pop
clc
outsl
fldl
clc
das
aas
mov
inc
clc
fmull
cli
dec
int3
pop
sbb
add
cli
inc
clc
jne
es
out
add
mov
clc
dec
inc
add
cmc
cld
fs
mov
add
jo
add
xchg
in
nop
mov
sbb
clc
pop
bound
add
inc
clc
mov
mov
add
cmp
clc
int3
jp
clc
popa
add
jmp
fstpt
test
in
clc
dec
out
xchg
lock
ss
mov
lret
out
imul
into
cmp
nop
in
stos
mov
inc
add
mov
jb
add
push
jo
add
mov
fidivrl
pop
sub
dec
xor
jge
inc
add
xchg
sbb
inc
clc
ss
cltd
sbb
mov
pop
enter
mov
shll
clc
dec
push
test
jl
sbb
clc
mov
or
clc
inc
add
es
pusha
add
das
pop
clc
add
loop
dec
lods
mov
mov
add
fiaddl
out
dec
jg
fildll
push
or
and
add
inc
add
pop
mov
hlt
cmp
add
sar
clc
scas
pop
jle
sub
lret
sbb
xor
add
daa
clc
pop
clc
mov
mov
xchg
push
add
iret
pushf
and
and
add
mov
mov
xor
add
loop
mov
mov
add
push
add
cmp
add
pop
in
mov
clc
push
xbegin
imul
in
out
stos
in
pushf
scas
sbb
arpl
add
clc
and
add
xchg
out
push
clc
aaa
pop
jae
add
add
dec
jp
sub
add
insb
lret
xchg
pop
inc
add
pushf
dec
scas
push
add
inc
add
fisttpll
dec
pop
imul
mov
push
add
ficomps
pushf
xchg
loope
cmc
mov
mov
clc
dec
and
add
pop
or
jl
or
push
add
je
mov
jo
add
shl
jno
add
clc
std
sub
add
push
movsl
clc
das
das
stos
push
add
insl
int3
add
add
clc
pusha
add
pushf
jo
add
jno
add
inc
add
insb
xchg
xbegin
sbb
mov
clc
mov
add
sub
clc
js
clc
fmull
clc
push
sbb
dec
divl
fadds
sub
ja
pop
nop
lret
add
cmp
push
jb
add
data16
mov
imul
clc
adc
push
clc
shrb
push
or
or
pop
mov
push
into
inc
add
xor
add
in
das
or
add
out
ja
imul
clc
add
adc
add
cmpsb
clc
fstps
pop
es
pop
cmp
sub
clc
xchg
jno
add
inc
add
shld
mov
mov
add
xchg
jae
add
cmp
clc
xchg
out
fiaddl
add
cmp
add
add
add
clc
daa
clc
mov
clc
adc
add
cmp
clc
and
add
dec
inc
clc
dec
in
cmp
add
fcoms
mov
repz
mov
psubusw
xbegin
mov
fcomip
push
mov
icebp
mov
add
add
test
add
xlat
cmp
imul
push
cmp
jmp
push
add
jbe
mov
ja
fs
jno
add
add
enter
add
clc
jge
add
xor
add
cmp
adc
add
test
fdiv
pusha
add
fldcw
dec
pcmpgtb
cmp
outsb
ja
sbb
fdivr
xor
add
inc
add
add
add
add
add
pop
add
add
clc
daa
clc
sbb
jle
jne
add
xchg
dec
jl
mov
mov
clc
jg
jno
add
cltd
mov
dec
inc
add
lcall
fwait
scas
mov
add
out
cmp
call
loopne
pop
idivl
rorl
xlat
cmp
inc
clc
and
add
cld
cmp
add
add
clc
ror
repnz
push
jg
xor
add
sbb
pop
scas
lods
and
add
pop
and
cmc
mov
idivb
lods
pop
inc
add
xchg
rcll
cmp
enter
inc
clc
insl
pop
push
cld
jg
dec
lahf
push
clc
lods
xchg
out
aas
cmp
pop
adc
movsb
clc
cmp
dec
stos
jp
dec
pushf
loopne
loope
mov
push
lahf
add
test
out
cmp
clc
sar
imul
call
clc
inc
clc
cmp
hlt
enter
or
dec
xchg
push
add
stos
sarb
cmp
leave
dec
cmp
fdivs
add
or
xchg
push
add
test
mov
clc
xchg
daa
clc
cmp
lret
loopne
cld
fstpl
mov
add
jbe
and
add
leave
mov
divl
add
sub
clc
test
xchg
push
add
je
mov
clc
lea
add
add
add
xor
sub
clc
sub
das
cmpsl
clc
sub
in
rcll
add
add
cmp
dec
push
lock
add
sti
xchg
adc
add
xchg
cmp
in
add
add
cs
clc
inc
add
pop
stos
sbb
clc
mov
clc
mov
outsl
pop
cmp
mov
gs
test
cmp
clc
dec
ret
clc
and
or
add
push
clc
rcrb
push
adc
add
jb
add
clc
mov
cmp
dec
and
add
fadds
out
push
add
push
push
add
jnp
ret
out
clc
test
push
clc
test
call
add
test
ja
jle
pop
or
lret
mulb
mov
add
enter
jmp
clc
jne
cmp
das
push
sub
daa
clc
clc
mov
mov
xor
clc
clc
leave
push
add
hlt
jnp
jge
add
pop
leave
gs
lock
clc
cli
dec
dec
sub
add
cli
and
add
loope
mov
cmp
insb
testl
clc
dec
xabort
inc
add
sbb
clc
or
clc
xor
add
clc
test
aas
and
add
clc
push
push
bound
add
scas
push
cmp
clc
data16
jbe
pop
sarb
jno
add
lret
clc
scas
pop
std
mov
push
jns
push
cmpsl
clc
xchg
add
add
add
push
icebp
lock
js
xchg
adc
add
movsl
clc
sbb
xor
add
fdiv
imul
or
stc
push
adc
add
out
insl
filds
add
clc
mov
add
mov
clc
testl
and
add
imul
lods
cmp
imull
mov
and
add
in
sub
clc
nop
loope
or
xor
add
sahf
add
add
xor
add
test
call
add
ficompl
call
add
cmp
cltd
xchg
stos
ss
jle
xor
add
push
clc
adc
add
mov
mov
cmc
fs
xor
add
add
add
push
cld
mov
pop
clc
or
mov
add
popa
add
cli
push
push
ss
clc
arpl
add
clc
cmp
mov
cmp
xchg
inc
clc
sub
add
add
clc
push
mov
push
rcll
add
hlt
test
jecxz
sub
lcall
insb
push
xchg
dec
std
mov
add
hlt
dec
lahf
jecxz
pop
stc
xchg
add
adc
add
push
mov
je
clc
pop
mov
lcall
inc
clc
rcrl
into
iret
outsl
in
adc
add
out
mov
add
hlt
sar
xchg
dec
pop
lods
movsl
clc
xlat
sbb
add
loope
fidivl
outsb
pop
pop
dec
and
and
add
sub
add
add
dec
mov
mov
add
add
clc
in
aam
xchg
sub
ret
leave
ret
ud0
test
arpl
add
add
aam
ds
fsts
xchg
pop
shl
loop
sahf
in
dec
ret
clc
sub
or
fwait
and
add
xor
add
insl
xchg
fs
rcl
mov
clc
cmp
clc
pop
cmp
clc
pop
jno
add
mov
stc
mov
clc
pop
out
mov
cs
ja
xor
ret
clc
int
cli
movsb
clc
inc
clc
adc
add
lea
xor
add
push
add
cmp
in
pop
sbb
clc
ljmp
ficoml
add
mov
nopl
clc
xchg
xchg
xchg
or
add
push
clc
xbegin
and
add
add
sub
and
add
add
fadds
add
mov
xor
clc
sar
cwtl
xor
add
add
xchg
cmc
sub
and
add
add
pushf
and
add
lods
sarb
in
je,pt
clc
adc
pop
clc
xor
add
add
hlt
mull
add
cmpsb
clc
and
adc
add
add
mov
inc
clc
or
imull
xchg
loope
push
add
cmc
mov
fs
push
sar
xchg
das
push
test
clc
sbb
add
cmp
clc
mov
mov
fldcw
stos
cmp
add
add
add
mov
pop
cs
pushf
inc
clc
scas
and
or
fldl
add
es
sub
jne
fcompl
insl
sbb
push
add
and
add
fisubrs
add
repnz
add
aas
pop
adc
ret
clc
mov
add
ds
push
cmp
clc
in
and
add
mov
push
add
nop
cmc
out
not
cmp
clc
mov
pop
aaa
repz
fwait
jge
add
add
add
bound
add
cmp
into
outsb
push
sar
fstpl
icebp
mov
lret
clc
mov
clc
mov
add
mov
clc
pop
cld
fnsave
add
fiaddl
xchg
mov
ret
clc
cltd
in
mov
fsubs
or
add
test
mov
add
inc
clc
stos
sbb
clc
out
test
dec
xor
add
add
push
dec
lret
jmp
clc
lret
clc
sbb
out
loope
xor
add
jle
sub
aad
jbe
sahf
mov
add
loopne
aad
fwait
cltd
jb
add
out
mov
cmp
cmp
mov
clc
mov
sbb
add
mov
sbb
add
and
add
clc
iret
jg
sbb
das
sub
jmp
cmp
adc
add
fwait
sbb
lods
mov
mov
xchg
into
mov
shll
mov
outsb
daa
clc
xchg
lock
cmp
sti
or
lock
js
sar
insb
push
mov
arpl
add
add
add
stc
imul
cmp
shlb
clc
ret
clc
in
sub
clc
ds
cwtl
xor
add
add
outsl
mov
clc
pop
adc
test
add
add
or
cmp
dec
movsb
clc
lock
pushf
in
xchg
adc
add
mov
je
rcll
add
neg
adc
add
clc
cmp
mov
lcall
clc
inc
clc
jle
data16
insb
loopne
in
pop
mov
insb
jge
xor
add
pop
jg
cmc
inc
add
scas
adc
adc
add
jecxz
leave
mov
outsl
add
add
pop
sbb
adc
pop
test
in
inc
clc
push
add
mov
cmp
sub
add
add
insl
push
add
pop
pop
pop
cmp
test
das
repz
rcrl
add
push
clc
sbb
clc
loop
xchg
push
add
pusha
add
jecxz
xchg
xor
add
cmp
sub
sti
pop
and
add
testl
filds
add
cmpsl
clc
data16
and
mov
add
or
mov
clc
or
push
aad
fsubrl
add
sbb
or
add
add
insb
push
clc
scas
mov
enter
divl
xor
add
clc
pop
dec
push
clc
fs
bound
add
cmp
clc
outsl
fnstsw
mov
and
add
leave
es
ljmp
out
cmp
clc
cld
jp
iret
in
dec
movsl
clc
sbb
loope
or
mov
clc
dec
sahf
and
add
add
mov
leave
or
add
mov
cmp
add
mov
in
mov
imul
or
neg
inc
add
lcall
mov
xchg
das
or
add
out
or
loopne
mov
adc
add
stc
lock
aaa
inc
clc
nop
lea
add
add
sar
imul
add
clc
fwait
pop
insb
dec
sub
add
add
add
inc
add
int
int
mov
repnz
clc
loope
sbb
repnz
clc
dec
push
add
dec
pop
jle
mov
push
pop
xchg
fcoms
add
or
test
clc
mov
repz
pop
pop
sbb
add
scas
decb
mov
pop
aas
scas
or
dec
adc
add
shll
lret
fiaddl
add
test
fs
imul
add
addr16
sub
add
lods
push
clc
imul
sub
push
jle
popa
add
cmp
add
add
movsl
clc
sbb
rolb
clc
xchg
xor
add
adc
add
add
ss
add
je
jle
fimuls
add
sbb
divb
inc
clc
loope
mov
outsl
inc
add
add
add
sub
stos
ror
cltd
test
clc
pop
lods
jnp
mov
add
ss
loopne
pop
jne
add
or
dec
je
ret
in
popa
add
pop
and
add
add
add
adc
imul
call
xchg
arpl
add
clc
dec
aad
xabort
add
sub
clc
mov
clc
cld
jns
pop
stc
test
hlt
cmpsl
clc
dec
xlat
cmp
add
fisubrl
fbstp
add
sbb
clc
mov
dec
shll
xchg
scas
scas
jno
add
clc
lahf
xor
add
dec
popf
cmp
mov
cmp
jl
mov
scas
xchg
dec
aas
mov
ret
mov
jg
jnp
pop
bound
add
clc
sub
jnp
fwait
add
add
jo
add
cltd
sbb
clc
pop
inc
clc
or
out
ret
and
add
out
pop
hlt
vmaxps
xchg
pop
mov
mov
add
cli
rolb
add
rcl
popf
and
add
inc
add
xor
add
cmp
shl
push
adc
fsts
add
mov
add
movsb
clc
sar
pop
pop
clc
jle,pt
cld
mov
clc
dec
test
adc
pop
ja
bound
add
xlat
aas
xor
dec
call
enter
xchg
leave
movsl
clc
das
jge
add
sub
fs
mov
xchg
cmp
clc
and
add
lcall
jnp
xbegin
add
sub
clc
sub
clc
xor
add
pop
rcrl
add
lods
xchg
ss
add
test
ja
pop
or
mov
rcpps
add
clc
aas
inc
add
insb
and
add
clc
leave
mov
add
dec
lea
pop
scas
push
sti
inc
clc
jmp
push
fnsave
and
add
and
clc
inc
clc
int
lods
xbegin
clc
lret
adc
xor
add
lods
and
add
clc
xchg
inc
clc
sub
add
xor
fsubp
clc
push
pop
xchg
test
das
xchg
aaa
inc
clc
pop
sbb
adc
loopne
clc
pop
add
add
add
xchg
cmp
clc
mov
clc
clc
inc
add
xchg
jo
add
add
sbb
sub
pop
jno
add
incl
add
das
mov
scas
in
jb
add
icebp
push
add
cmp
inc
clc
inc
add
cmpsb
clc
clc
push
aaa
mov
add
push
add
or
add
push
clc
cmp
add
mov
cmpsl
clc
data16
push
add
xchg
push
lret
je
clc
sbb
lods
and
add
add
add
inc
add
mov
add
push
add
add
add
xchg
sub
xchg
sbb
xor
add
mov
adc
add
aam
clc
pop
xor
add
xchg
cmp
add
rcl
imul
push
add
pop
fs
jno
add
clc
outsb
lret
add
clc
inc
clc
mov
add
add
imul
dec
adc
add
push
daa
clc
adc
add
clc
cmp
testl
clc
mov
xor
mov
adc
add
pusha
add
movsb
clc
cmp
clc
pop
clc
gs
in
jp
clc
in
sub
clc
not
xchg
loope
xor
add
dec
pop
addr16
mov
jns
cwtl
pop
clc
call
insl
xchg
outsb
sbb
out
aas
jbe
or
ja
clc
outsl
in
ss
xor
add
add
mov
adc
sahf
pop
lret
or
add
cltd
dec
outsl
vdivps
pop
inc
clc
js
clc
out
push
jmp
clc
xchg
inc
add
mov
mov
repz
scas
xor
add
add
or
or
clc
mov
sar
push
add
inc
add
mov
sar
out
push
clc
lahf
push
into
sbb
clc
mov
fsubr
inc
add
add
add
clc
push
add
cwtl
push
clc
mov
add
add
lret
leave
cmp
es
cmp
clc
cmpsl
clc
sbb
clc
mov
in
sbb
clc
dec
jg
add
cmc
pop
clc
ret
clc
adc
add
loopne
mov
add
add
add
stos
jne
clc
xor
add
clc
mov
sub
add
dec
push
add
add
sar
sahf
jae
add
jge
clc
xor
add
clc
push
mov
stc
jecxz
hlt
xor
cwtl
loope
jmp
add
insl
aas
mov
sub
iret
or
add
divl
add
jne
cwtl
iret
loope
repnz
imul
call
dec
iret
add
add
mov
add
mov
add
vmovhps
out
cmp
add
sub
cmp
add
leave
cltd
aas
pop
xlat
lods
sti
popf
push
clc
add
add
add
xchg
inc
clc
xbegin
lret
clc
sub
movlps
add
sbb
inc
add
icebp
push
add
fidivrl
sar
inc
add
cmp
clc
pop
xor
add
cmpsb
clc
sysret
clc
sbb
ss
int3
mov
inc
clc
or
or
clc
adc
add
add
push
add
mov
je
clc
xchg
nop
or
clc
jne
jno
add
dec
cmpsl
clc
inc
clc
pop
call
push
mov
clc
clc
dec
dec
and
add
xor
add
clc
xchg
pop
clc
sub
and
pop
pusha
add
xor
add
in
stos
dec
push
inc
clc
ds
pop
mov
mov
daa
clc
cltd
mov
clc
clc
jge
jo
add
imul
popf
shrl
clc
jmp
repz
jbe
mov
clc
xchg
push
xchg
cmpsb
clc
xlat
lods
xchg
int3
punpckldq
add
test
jb
add
clc
mov
sub
add
lock
outsl
loopne
lret
dec
or
clc
or
rcl
das
pop
in
inc
clc
ret
clc
scas
jns
add
std
fs
inc
clc
or
mov
movsl
clc
sbb
clc
lret
fsubrp
daa
clc
push
add
fstl
add
push
sbb
jns
cli
rcl
out
loopne
mov
add
clc
mov
or
clc
sbb
sbb
cvtps2pd
add
clc
inc
clc
mov
pop
imul
popa
add
push
add
jmp
clc
mov
inc
clc
in
scas
insl
xbegin
pop
push
push
add
jp
clc
mov
add
add
clc
and
cli
out
cmp
fcomps
cmp
fstpl
js,pn
mov
jns
out
xchg
xor
mov
add
outsb
add
add
add
inc
add
ss
clc
stos
pop
xchg
lret
pop
pop
dec
cs
nopl
sub
xor
add
pop
sar
das
jecxz
out
inc
clc
rorb
cli
dec
aad
jecxz
sbb
clc
fistl
clc
xbegin
scas
push
or
clc
imul
clc
movsl
clc
add
add
clc
sbb
add
add
mov
dec
and
add
mov
clc
add
pop
scas
push
cmp
add
and
add
dec
jb
add
add
xor
add
mov
xchg
or
clc
in
or
add
mov
or
add
clc
jbe
repnz
into
lods
xor
add
add
adc
in
repz
xor
add
add
dec
loope
mov
iret
xor
add
and
add
bound
add
push
add
or
add
jge
in
xchg
mov
in
stos
imulb
hlt
jg
add
sahf
iret
lea
clc
sahf
mov
add
call
pop
inc
add
notl
add
adc
cld
and
add
add
js
push
sar
clc
cltd
xchg
or
pop
push
aam
clc
jne
clc
jmp
cmp
data16
insl
idivb
mov
add
or
jae
add
add
add
add
dec
or
add
mov
clc
je
xchg
push
mov
ja
clc
dec
fcomps
clc
dec
inc
clc
and
add
adc
add
clc
add
add
testl
xchg
inc
add
cmp
or
add
sub
push
nop
lock
into
mov
add
pop
int3
xor
sub
clc
out
lods
fwait
cmpsl
clc
cli
adc
add
ss
jp
clc
add
add
add
adc
add
add
cmp
mov
out
xchg
pop
push
add
push
add
xor
add
pop
cmp
clc
das
into
inc
clc
in
ljmp
push
push
pop
imul
fcmovnbe
sub
loopne
sub
add
sahf
cmp
xbegin
outsl
test
ret
clc
ret
shll
or
out
movsb
clc
sub
pop
divl
arpl
add
xor
fucomi
xlat
fcmovbe
mov
push
in
popa
add
popa
add
data16
sub
sahf
mov
inc
clc
adc
add
add
mov
dec
push
cmp
cmc
pop
mov
cmpsb
clc
stos
ret
clc
js
clc
sbb
clc
cmp
dec
xor
add
dec
mov
xor
mov
mov
sar
lock
cmp
xor
add
hlt
or
lcall
mov
add
jns
jecxz
inc
clc
mov
adc
add
clc
int3
lret
add
add
push
add
xchg
shlb
int
add
fwait
test
add
clc
mov
mov
jo
add
fidivl
mov
mov
mov
int3
sub
jo
add
add
cli
out
das
adc
add
data16
add
add
mov
or
add
sarb
adc
add
clc
js
mov
mov
hlt
pop
push
enter
mov
clc
mov
sar
add
imul
stos
aas
lock
clc
sbb
clc
inc
add
dec
cmp
mov
jne
int
add
mov
add
add
jbe
clc
mov
gs
pop
adc
add
jo
add
ss
add
sub
pop
cmp
add
push
add
sub
out
iret
sahf
xabort
clc
cmp
add
nop
rcr
pop
rorl
clc
mov
xchg
push
or
mov
pop
or
add
mov
dec
sbb
add
rolb
lods
mov
jno
add
dec
mov
cmp
add
add
add
sub
push
bnd
lock
ficomps
jecxz
push
movsb
clc
dec
dec
jge
clc
xorps
fistpll
rol
clc
pop
inc
add
pop
add
push
add
pop
out
enter
shrl
out
into
int
cmp
push
add
sub
mov
clc
nop
rclb
clc
insl
pop
add
rorl
inc
add
andnps
jge
push
add
sub
xor
add
clc
inc
clc
daa
clc
dec
push
pop
mov
add
adc
add
std
adc
pop
dec
imul
push
dec
je
mov
add
test
clc
jg
and
add
add
add
dec
in
sbb
test
mov
iret
xor
add
add
clc
jl
add
mov
data16
cli
loopne
xlat
mov
pusha
add
xchg
mov
mov
icebp
pop
mov
idivl
pop
imul
add
ret
test
add
cs
push
add
iret
stos
pop
aaa
push
mov
enter
clc
out
mov
add
xchg
sbb
stc
jecxz
lock
jle
clc
cmp
lods
lret
cmp
fbld
sar
clc
jnp
mov
test
jb
add
clc
stos
pop
sub
lret
clc
xor
add
add
dec
call
and
add
inc
add
or
add
hlt
or
cmc
pop
in
push
sbb
add
clc
add
add
outsl
pop
lods
push
clc
and
fwait
inc
clc
mov
repnz
add
cmpsb
clc
cmp
fmuls
xbegin
jae
add
clc
sbb
movsb
clc
jo
add
clc
adc
clc
cli
inc
add
jnp
push
dec
xor
add
clc
loop
into
shrb
add
pop
jmp
push
add
data16
mov
mov
mov
pop
mov
clc
fmuls
lock
dec
add
add
mov
pusha
add
cmpsb
clc
repnz
clc
imul
add
ret
clc
fmull
jle
clc
inc
add
ja
insb
in
call
add
xlat
es
sub
es
mov
jb
add
inc
add
ljmp
clc
loope
mov
xchg
or
jle
xchg
push
inc
clc
xlat
in
loopne
push
add
int
clc
popf
movsb
clc
dec
sbb
daa
clc
outsl
push
clc
jge
ljmp
xlat
push
in
lahf
inc
clc
daa
clc
and
add
add
clc
mov
daa
clc
inc
clc
ret
push
add
sahf
push
add
add
clc
and
add
push
js
add
mov
jecxz
lcall
and
add
jl
clc
push
add
push
add
daa
clc
cwtl
cltd
or
pop
das
js
adc
add
add
inc
clc
xchg
add
add
clc
dec
pop
int3
in
push
jno
add
xchg
stc
gs
dec
sbb
adc
add
sbb
cmp
dec
xlat
pop
pop
repnz
jb
add
adc
add
cltd
mov
add
sub
add
jl
add
nopl
into
imul
push
adc
add
cltd
or
clc
jmp
clc
fsubrs
xchg
sar
jo
add
clc
xchg
or
lahf
xor
fs
dec
sub
cmp
and
gs
ja
stos
in
jl
sbb
outsb
pop
mov
bound
add
xchg
in
cmp
lret
jge
nop
xchg
nop
pop
sahf
jb
add
rcl
divl
sar
pop
mov
in
imul
pushf
xor
iret
fcompl
add
flds
add
add
sbb
push
cmp
clc
pop
inc
clc
push
int3
fldcw
rclb
add
clc
aaa
popa
add
mov
pop
jp
clc
repz
js
out
ret
or
inc
clc
mov
clc
lcall
mov
or
sub
add
in
ljmp
fs
inc
add
in
leave
addr16
xchg
insb
iret
xor
add
int
clc
scas
sarl
xor
add
mov
add
mov
sub
push
xchg
fisttps
mov
xchg
push
add
mov
or
sahf
push
add
mov
clc
mov
mov
lret
inc
clc
lcall
push
add
xor
add
clc
or
xor
add
movsb
clc
lea
add
add
add
ret
clc
int3
nop
cmp
jp
clc
sbb
add
cwtl
xor
add
test
adc
test
out
dec
mov
leave
sar
add
add
je
jecxz
pop
clc
fldl
pop
jge
imul
add
dec
jge
clc
cmp
add
leave
sar
add
in
test
add
mov
add
or
clc
popa
add
sahf
nop
rcrl
sahf
adc
add
sbb
xchg
push
add
ja
pop
add
add
clc
mov
clc
push
add
add
add
pop
clc
or
clc
icebp
jnp
add
add
mov
mov
ja
int
add
add
cld
lret
jge
xchg
daa
clc
mov
add
push
sarl
int3
push
mov
and
add
fnstsw
clc
fnsave
pop
xor
stos
gs
mov
add
clc
fcom
arpl
add
clc
jle
add
add
add
outsl
pop
xor
add
add
lret
xchg
addr16
cli
sahf
repnz
movsl
clc
add
add
in
ret
clc
jecxz
xor
add
cmp
lahf
mov
add
push
clc
cmp
add
mov
dec
jo
add
clc
mov
sbb
hlt
repz
clc
stos
mov
mov
clc
sub
imul
add
clc
push
pushf
bound
add
add
sbb
add
test
jmp
clc
mov
push
cmp
clc
lret
jmp
dec
fldt
add
mov
je
call
inc
clc
dec
int
jp
or
add
inc
clc
push
adc
add
clc
cmp
clc
mov
call
inc
clc
es
loopne
xchg
mov
lock
xor
add
fisttpll
inc
clc
mov
clc
loop
clc
add
jbe
mov
add
sbb
inc
clc
stos
xchg
fldcw
xchg
sub
add
add
enter
add
add
and
add
clc
adc
add
clc
and
push
cmpsb
clc
xbegin
pop
je
mov
xchg
gs
lods
mov
inc
clc
test
int3
add
add
dec
xchg
push
add
and
popa
add
aad
ficomps
dec
add
icebp
xor
bound
add
dec
and
add
clc
push
mov
mov
add
pop
popf
ljmp
mov
add
push
add
cmpsb
clc
stos
pop
sbb
cmp
clc
cmp
outsb
in
aad
into
inc
add
mov
mov
add
mov
fcmovnu
and
add
clc
addr16
mov
jnp
clc
or
mov
sub
add
clc
loop
cltd
cltd
repz
pop
aaa
xor
add
js
mov
leave
dec
test
cmp
xchg
testb
out
jmp
int
pop
aam
clc
cmpsb
clc
mov
scas
pop
clc
inc
add
mov
or
add
repz
add
loope
mov
add
add
clc
jg
add
lock
add
jge
mov
add
add
add
add
jno
add
ja
mov
clc
addr16
test
jae
add
test
clc
mov
repnz
pop
xchg
mov
je
hlt
std
cld
mov
notl
add
jae
add
or
clc
hlt
aad
sarl
ljmp
add
add
or
clc
inc
add
mov
lea
hlt
and
add
clc
jg
and
add
dec
aaa
clc
push
add
sar
xchg
cmc
push
clc
xor
add
mov
ret
clc
cmp
imul
add
test
data16
jp
lret
adc
mov
clc
aas
mov
add
gs
dec
sub
add
clc
loopne
push
jbe
clc
pop
popf
sar
adc
add
add
pop
cmp
mov
clc
jle
clc
lock
clc
jmp
clc
loopne
je
and
lret
cmpsl
clc
jl
into
dec
fisttpll
inc
clc
je
push
mov
add
adc
pop
cmp
jl
xor
add
lock
clc
cmp
into
rorb
ret
jb
add
cs
sbb
pop
cmc
loopne
pop
xchg
xchg
mov
fldcw
jl
mov
xchg
mov
add
mov
add
xchg
or
add
enter
xor
add
add
fs
sahf
jle
add
ret
clc
push
mov
sarb
mov
push
imul
xchg
pop
push
push
ret
clc
mov
ljmp
xchg
es
aaa
adc
add
in
popf
aaa
push
add
sub
cmp
xchg
pop
clc
out
xor
add
add
push
add
mov
clc
lods
adc
popa
add
xor
fldcw
xor
add
add
sti
mov
add
add
clc
cmp
xchg
test
add
std
mov
clc
popf
mov
clc
jl
clc
xchg
fcmovu
sar
push
add
test
jmp
clc
out
cmp
pop
mov
and
add
xor
push
imul
add
clc
dec
sub
int
add
add
sub
xchg
loope
jg
add
int3
pop
scas
shlb
clc
push
clc
push
cmp
add
xchg
int3
or
clc
ret
clc
adc
clc
xor
push
clc
dec
notl
add
loope
pop
hlt
or
clc
sbb
adc
add
clc
sub
mov
add
or
pop
test
or
clc
jmp
add
clc
pop
popa
add
push
push
cmp
inc
clc
test
es
jne
add
loop
out
pop
ljmp
sbb
aam
inc
clc
div
fiadds
clc
sub
push
fnstenv
lret
xabort
clc
fs
cs
cmpsl
clc
xchg
scas
arpl
add
jmp
out
add
add
add
cmp
cmp
dec
jle
add
add
test
fdivp
xbegin
ja
add
enter
cmp
and
add
mov
xor
add
and
add
lret
imul
add
dec
xchg
add
add
nop
aad
mov
pop
inc
clc
sbb
add
iret
not
aas
push
add
leave
in
in
and
add
xchg
pop
pop
stos
xchg
mov
jg
clc
ficoml
loopne
lea
jbe
clc
in
cmc
mov
lcall
clc
repz
pop
mov
out
jmp
je
add
insb
pop
jl
add
mov
in
fistl
jnp
cmp
gs
adc
add
xchg
into
pop
jg
xor
add
clc
in
fbstp
add
mov
in
push
and
vzeroupper
cmpsl
clc
sbb
add
test
add
or
dec
fcomps
and
add
mov
mov
sbb
clc
xchg
and
add
loopne
notb
clc
rolb
add
push
xor
add
add
mov
adc
push
pop
mov
lea
fsubrs
data16
lea
fst
or
clc
arpl
add
add
lods
adc
add
pop
add
mov
or
xchg
sub
cltd
repz
sbb
fists
add
clc
sar
repnz
cmp
arpl
add
stos
mov
clc
fcomps
sar
aas
je
clc
cmpsl
clc
fwait
dec
jns
add
push
xlat
lea
xchg
sbb
clc
leave
push
add
inc
clc
outsb
adc
jne
add
mov
clc
fisttps
int
clc
cmp
in
push
add
jmp
popl
icebp
add
add
vmovlps
add
test
add
fcomps
sar
ret
clc
idivl
into
pop
inc
add
adc
add
clc
xor
and
add
add
stc
push
nop
mov
clc
clc
jg
mov
and
sar
clc
adc
add
pop
mov
enter
add
test
cmc
ds
add
pop
cmpsb
clc
sub
ljmp
or
imul
test
adc
add
pop
clc
sub
add
inc
clc
jnp
clc
gs
ljmp
clc
cld
fcmovnbe
pop
sub
add
push
or
mov
ret
mov
mov
jne
clc
xlat
pushf
ds
pusha
add
insl
das
in
mov
clc
mov
cltd
or
add
jns
cmpsb
clc
mov
clc
testl
data16
fists
add
add
lahf
int3
push
xlat
test
push
loop
cmp
aaa
adc
add
mov
ljmp
or
mov
xchg
sub
add
out
dec
ljmp
inc
clc
sar
movsb
clc
mov
cmp
lcall
xchg
stos
inc
add
jbe
dec
sbb
and
popf
inc
clc
mov
ret
inc
add
push
aad
add
dec
test
xabort
popa
add
inc
clc
daa
clc
or
dec
jecxz
dec
cmpsl
clc
inc
clc
pop
hlt
and
add
clc
mov
in
int3
inc
clc
ret
clc
faddp
clc
adc
add
je
add
mov
mov
clc
sbb
add
clc
xlat
inc
add
adc
add
sti
mov
add
pop
clc
adc
clc
aam
dec
decb
aas
mov
add
cmp
mov
lret
lcall
jge
mov
clc
dec
xchg
push
fisubs
add
sahf
sar
jg
clc
jns
inc
clc
int
clc
jne
inc
clc
mov
in
pusha
add
add
add
cmp
adc
add
ljmp
imull
clc
lahf
mov
pop
test
mov
add
sbb
or
clc
xchg
dec
insb
jbe
xor
add
rcll
daa
clc
xchg
xbegin
push
cmp
clc
pop
mov
add
add
add
ja
add
ds
add
xchg
or
and
add
clc
jle
mov
outsl
mov
add
aaa
inc
clc
jg
jl
cmpsb
clc
iret
sti
pop
imul
add
lcall
xor
add
sbb
inc
clc
mov
ljmp
xchg
sar
jg
loopne
pop
sub
test
inc
add
sahf
push
std
test
out
jg
clc
mov
fcomip
push
add
icebp
cmp
clc
mov
sub
sub
clc
fmuls
sbb
clc
fimull
jnp
cmp
ljmp
clc
idivl
add
imul
push
cmp
in
sbb
clc
scas
and
pop
xor
add
add
or
clc
jb
add
sub
jl
clc
or
cmp
add
xor
add
insb
lahf
mov
clc
inc
clc
cmp
add
add
lea
xchg
push
mov
mov
cmpsb
clc
mov
fsubrs
imul
add
add
adc
add
xchg
shll
pop
fistpll
mov
add
clc
sti
imul
clc
adc
add
add
sar
clc
aas
mov
daa
clc
cmp
clc
lock
insb
xor
mul
clc
arpl
add
int
clc
sbb
movsl
clc
clc
cmp
add
adc
add
clc
inc
add
cmp
add
lea
loop
push
clc
std
imul
sbb
cmp
inc
add
lcall
add
in
arpl
add
cmp
adc
add
fdivl
inc
clc
aad
daa
clc
sti
leave
or
jg
cmp
add
stos
mov
clc
aad
push
or
add
add
add
pop
push
mov
aad
mov
add
xor
add
push
clc
cmp
pop
jno
add
int3
xor
add
add
cmc
pop
mov
clc
xchg
int
in
out
add
add
add
lock
add
imul
add
inc
add
mov
lret
clc
je
adc
push
in
mov
out
ss
clc
push
clc
int
push
add
inc
clc
movsl
clc
clc
addr16
add
add
pusha
add
test
inc
add
stos
cmp
clc
out
mov
jmp
clc
or
clc
popa
add
push
xchg
dec
cmp
pop
inc
clc
or
ds
clc
pop
mov
sbb
clc
inc
clc
loope
sub
add
push
add
add
clc
pop
call
add
add
mov
clc
in
loopne
or
add
cmp
clc
pusha
add
jbe
xchg
or
cmp
clc
pop
push
xchg
fwait
nop
fwait
sbb
fs
sti
es
icebp
out
dec
lret
add
dec
cmpsb
clc
fwait
imul
cs
xchg
mov
adc
add
clc
fsubrl
es
xchg
lock
pusha
add
pop
clc
adc
add
xchg
mov
sar
jo
add
clc
mov
out
stc
sbb
add
mov
clc
aam
clc
cmp
test
nop
hlt
cltd
jae
add
add
xchg
push
add
or
out
push
lret
cmp
xchg
aad
lret
xbegin
je
jge
aas
push
mov
imul
mov
push
sbb
addr16
or
out
dec
sbb
jae
add
add
loopne
jecxz
and
add
movsb
clc
pop
adc
add
cltd
stos
pop
and
add
loop
adc
jl
sar
clc
cmp
loop
push
clc
or
add
add
xchg
push
jbe
push
jg
clc
int
add
push
mov
bound
add
pushf
ficoml
pop
mov
or
or
jp
imul
fs
mov
cmp
add
test
pusha
add
leave
pop
lea
clc
xor
add
xchg
cmp
add
sar
cltd
movsb
clc
jmp
icebp
pop
mov
sub
add
adc
mov
clc
cmp
lahf
sbb
and
add
ficoms
cmp
clc
stos
jecxz
and
inc
clc
push
fistps
sub
add
mov
gs
outsb
push
fisubrl
jae
add
pop
push
push
nop
js
cltd
rcrb
inc
add
sub
clc
or
dec
cmp
bound
add
bound
add
loope
xchg
imul
add
bound
add
clc
test
add
push
gs
adc
add
xabort
add
xchg
sbb
xor
add
mov
clc
icebp
pusha
add
ret
clc
inc
clc
add
add
fndisi(8087
clc
mov
add
fwait
outsl
test
pop
mov
and
add
cmp
leave
add
add
xbegin
sar
out
imul
cmpsb
clc
loop
and
add
clc
cmp
clc
and
add
clc
sahf
push
add
sub
clc
js
add
stos
pop
clc
out
fistpll
iret
popf
jne
clc
dec
pop
icebp
xchg
xchg
add
mov
jp
clc
out
gs
cmp
or
cwtl
mov
sbb
clc
xchg
mov
add
inc
clc
nop
popa
add
cmp
mov
nop
test
imul
clc
gs
add
mov
jg
pop
dec
mov
scas
test
lods
stos
mov
outsb
sub
push
add
fcmovbe
cmc
mov
pop
pop
rolb
add
fdivrl
add
xchg
leave
dec
lcall
sub
mov
cltd
das
xchg
add
add
or
jecxz
xor
cli
je
jle
add
push
add
xor
add
arpl
add
je
clc
ss
add
nop
mov
push
add
pop
push
add
leave
int3
daa
clc
lcall
add
mov
or
jl
clc
hlt
or
clc
push
xor
add
clc
ret
and
insb
jp
rolb
cmp
clc
scas
cltd
sbb
clc
je
sub
jp
add
cs
add
pop
fst
clc
stos
sbb
jns,pt
cmpsl
clc
and
add
add
aam
leave
dec
out
cmp
add
push
hlt
mov
aam
xor
add
push
add
mov
add
hlt
mov
clc
ds
or
clc
dec
adc
add
clc
and
jp
clc
mov
add
sbb
add
mov
fistpl
add
cmp
clc
popf
push
add
call
push
rcrl
outsb
lret
xor
add
clc
dec
cmpsb
clc
lock
add
shll
add
hlt
dec
popf
hlt
sub
div
xchg
clc
mov
sbb
xchg
push
adc
add
add
clc
push
push
add
js
clc
mov
insl
push
fcoms
clc
mov
or
clc
gs
jnp
add
mov
mov
cmp
add
notb
inc
add
xchg
lock
sbb
mov
push
pushf
xchg
jae
add
mov
outsl
popf
mov
mov
add
add
xor
add
add
cmp
push
popa
add
xchg
imul
pop
fwait
pop
dec
aas
aas
push
add
xor
add
xlat
jbe
xchg
pop
rcrb
ljmp
inc
add
or
clc
stos
jnp
clc
js
pushf
scas
lahf
or
xchg
push
add
push
add
or
arpl
add
add
mov
push
xchg
outsl
xor
clc
cmp
addr16
imul
sub
xchg
xbegin
add
push
add
add
sub
clc
hlt
insl
jne
clc
lret
std
pop
stos
xchg
in
adc
add
lock
mov
clc
inc
add
scas
clc
sbb
hlt
pusha
add
xchg
mov
filds
mov
mov
clc
and
add
clc
test
xor
mov
fidivs
add
push
add
push
dec
fidivrl
mov
pusha
add
std
jbe
clc
inc
add
sar
pop
scas
adc
add
xchg
and
lods
cmc
adc
add
add
cmp
lcall
dec
xchg
jne
dec
xor
add
add
mov
clc
movsb
clc
sti
ss
xor
add
push
mov
clc
push
fistl
cmp
add
in
faddl
add
mov
jg
xor
clc
sub
imul
ja
mov
dec
xchg
push
add
dec
dec
lahf
aam
sub
shll
imul
add
add
add
adc
add
inc
add
xabort
add
mov
clc
pop
add
add
clc
loopne
inc
clc
cmp
add
bound
add
sbb
add
pushf
test
out
jb
add
and
xchg
pop
cmp
cs
ljmp
push
inc
add
pop
scas
pushf
jbe
sbb
clc
sub
add
add
cmpsb
clc
clc
and
add
mov
clc
add
add
mov
dec
sbb
xchg
sub
clc
shrb
add
fidivrl
cmp
clc
pop
sbb
mov
xlat
in
shl
mov
out
into
sar
int
rolb
add
aaa
fs
cli
xlat
dec
cli
test
iret
cmp
pop
add
sub
int
xchg
not
adc
add
loop
cmp
add
xchg
pusha
add
lods
mov
sbb
imul
insl
mov
clc
push
push
cmp
jge
hlt
out
push
add
add
clc
int3
mov
sub
repnz
clc
aam
and
add
jmp
adc
add
clc
add
add
clc
add
add
push
add
aad
jmp
push
cmp
clc
mov
mov
clc
cs
sar
jb
add
mov
add
repnz
mov
xor
add
add
push
xabort
push
jbe
clc
and
add
inc
add
push
add
mov
jle
clc
xor
push
dec
insl
cmp
lock
cmc
movsl
clc
test
sub
cmp
leave
aaa
dec
sub
insl
movsb
clc
cmp
incl
test
jl
mov
sbb
and
add
ret
jbe
loopne
icebp
dec
pusha
add
pop
or
add
enter
sub
adc
add
mov
xchg
mov
jb
add
clc
sub
mov
insl
mov
mov
pop
ficompl
xchg
pop
outsb
sub
rolb
add
inc
clc
or
add
cmc
mov
lods
dec
adc
add
dec
mov
clc
pop
sub
leave
or
add
sbb
push
cmp
pop
cmp
xchg
ficoms
stos
outsb
cmp
xchg
hlt
dec
add
xchg
mov
xor
add
add
jmp
clc
cltd
fisttps
or
xchg
lcall
clc
push
clc
dec
lret
clc
dec
mov
clc
sbb
add
pushf
iret
leave
and
add
inc
add
lock
lock
mov
add
popf
cmp
clc
je
add
jg
xor
jl
push
add
pop
lock
add
rcrl
fcoms
add
popf
mov
test
add
xor
add
add
inc
add
cmp
push
add
lret
cmp
sbb
add
add
enter
inc
clc
push
add
inc
clc
dec
jp
clc
out
dec
cmp
jmp
add
sar
ljmp
sub
adc
push
push
dec
cmp
jns
clc
loopne
repnz
xchg
sahf
sub
add
in
and
add
lcall
clc
push
mov
add
enter
mov
pop
cmp
dec
cli
push
add
cmpsb
clc
std
sar
add
lret
push
in
std
push
clc
xchg
std
mov
outsl
clc
insb
insb
inc
add
aad
aaa
jg
pop
enter
call
out
push
nop
nop
scas
fldcw
adc
add
clc
jno
add
add
add
add
add
insb
popa
add
popa
add
data16
cmp
daa
clc
adc
add
shll
adc
add
mov
arpl
add
cmp
jns
sysenter
loop
xor
add
clc
cli
insb
mov
add
xor
add
add
cmp
clc
insl
insb
cmp
bound
add
adc
add
int3
lret
xchg
sub
add
mov
add
mov
sub
arpl
add
add
clc
add
add
lea
movsl
clc
lock
sub
arpl
add
add
add
add
stos
hlt
mov
mov
add
cmp
cmc
ss
aam
add
mov
fldz
xor
add
pushf
push
push
add
data16
jbe
jbe
nop
roll
inc
clc
mov
add
add
das
fadds
movsb
clc
repz
movsb
clc
or
dec
pop
xor
add
push
clc
mov
and
add
add
mov
dec
or
add
jmp
clc
enter
xor
push
pop
xchg
aas
mov
clc
sbb
clc
movsl
clc
sarl
out
loopne
xchg
data16
jo
add
adc
clc
daa
clc
cmpsb
clc
mov
add
mov
add
out
mov
stc
xlat
test
repnz
adc
add
clc
loop
sar
sub
pop
lcall
iret
sbb
aaa
mov
cwtl
test
add
cli
pop
dec
stos
inc
add
in
fwait
sar
mov
stc
mov
add
or
add
cmp
or
inc
clc
cmp
jle
sti
sub
clc
jno
add
clc
or
clc
hlt
xchg
inc
clc
cli
mov
lahf
dec
push
std
add
add
aad
add
popa
add
pop
gs
insb
jg
clc
dec
and
add
pop
fsts
add
leave
fs
dec
and
add
add
mulb
scas
andps
push
add
sar
xor
add
sarb
clc
adc
add
in
int3
mov
dec
vucomiss
stc
jp
inc
clc
jle
clc
fdivrs
dec
dec
jge
cwtl
outsl
mov
xchg
mov
clc
sub
adc
mov
cmp
add
clc
xchg
sahf
pop
jne
outsl
and
add
mov
add
test
clc
lcall
lock
add
lock
cld
js
and
addr16
pop
shll
jl
xchg
xor
pop
push
add
ret
or
fimull
adc
mov
or
clc
xchg
sar
dec
push
inc
add
fbstp
add
imul
mov
shrl
push
add
xchg
mov
clc
xor
add
clc
sbb
clc
pop
xor
outsb
ja
arpl
add
je
pop
fcoml
add
clc
or
addr16
sahf
test
stc
lret
std
pop
or
add
test
add
push
call
mov
add
mov
imul
add
xor
add
clc
adc
clc
daa
clc
int3
adc
add
pop
lahf
fwait
mov
movsl
clc
sub
clc
pop
loop
push
pop
cmp
jp
mov
dec
inc
clc
adc
add
add
jno
add
xbegin
arpl
add
push
cmp
mov
add
mov
clc
out
cmp
clc
je
jb
add
mov
notb
add
clc
shll
add
sub
clc
mov
add
inc
clc
mov
pop
pop
clc
jp
jge
sbb
outsl
imul
cmp
dec
jmp
mov
shrb
xchg
sub
sbb
add
cmp
add
cmp
insb
in
pop
stos
jmp
rolb
add
sar
mov
imul
mov
add
xor
pop
hlt
and
add
push
add
and
add
not
sar
add
daa
clc
cmp
cmp
decl
sar
push
add
pop
or
insb
outsb
fisubs
mov
lret
ds
adc
add
clc
adc
add
add
popa
add
push
and
add
add
out
jbe
sbb
mov
stc
arpl
add
dec
imul
clc
data16
pop
nopl
xchg
and
add
xlat
das
and
add
cmp
xor
ja
mov
clc
xor
add
mov
std
jno
add
add
or
movsl
clc
jecxz
aaa
pop
inc
add
out
out
data16
arpl
add
mov
adc
add
mov
cli
xbegin
jmp
mov
imul
mov
sub
clc
mov
and
add
clc
test
push
inc
clc
add
add
lods
cmp
push
clc
inc
clc
sete
and
xchg
xchg
inc
add
push
cmc
ljmp
ljmp
clc
xabort
dec
push
mov
ss
clc
mov
pop
mov
add
imul
add
xor
add
lret
loopne
mov
out
or
xchg
int3
test
icebp
mov
or
and
add
fstps
loopne
push
cmp
cmp
add
in
xchg
movsb
clc
and
mov
sub
lret
add
out
push
add
movsb
clc
pop
and
stos
ret
mov
push
cmp
push
add
fimuls
push
xchg
mov
in
out
rcll
add
popa
add
push
bts
cmp
clc
jb
add
clc
push
adc
pusha
add
test
xchg
mov
cmc
xchg
mov
adc
add
clc
pop
popf
pop
repz
inc
add
xchg
add
xor
add
sub
mov
addr16
call
mov
and
add
clc
inc
add
pop
sbb
clc
cmp
je
mov
addr16
cmp
clc
dec
mulb
add
mov
add
jnp
xchg
dec
adc
add
mov
clc
pop
clc
fcompl
clc
aas
push
add
cmp
clc
xor
add
fnstenv
xor
add
add
ficoml
add
add
sbb
xor
divl
adc
inc
add
dec
std
sub
sar
fildl
clc
hlt
add
add
cwtl
enter
mov
clc
hlt
jo
add
clc
lods
addr16
jle
and
add
xchg
ficoml
add
int
shrl
shlb
add
mov
adc
add
repz
mov
push
add
pusha
add
sar
add
test
xchg
fldl
push
add
or
sub
lret
add
cmp
sbb
jecxz
sti
enter
mov
fsts
add
add
xchg
mov
clc
dec
pop
mov
addr16
cs
xlat
pop
clc
and
add
add
clc
das
mov
fsub
clc
dec
jmp
popl
push
insl
jnp
add
test
clc
ljmp
arpl
add
mov
lahf
mov
or
sbb
std
cmp
xabort
inc
add
clc
js
in
outsb
dec
lock
add
push
clc
test
cld
ret
sbb
push
add
cli
xchg
push
pop
clc
sbb
inc
clc
mov
pushf
data16
jp
lods
sub
sub
cmp
clc
sar
clc
adc
add
cmc
and
add
pop
negb
fsubs
add
add
clc
cli
addr16
jp
int
add
cmp
jmp
clc
repz
dec
bnd
jp
inc
clc
mov
fiaddl
clc
int
clc
mov
add
