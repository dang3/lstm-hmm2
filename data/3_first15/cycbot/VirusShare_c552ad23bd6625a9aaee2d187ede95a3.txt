add
add
add
std
std
std
std
std
std
add
addr16
lahf
and
and
and
or
or
lret
lret
lret
lret
repnz
inc
add
add
add
ret
add
cmp
add
add
add
add
add
push
push
push
push
push
in
sbb
sbb
sbb
sbb
lods
mov
add
add
add
add
rcl
rcl
rcl
rcl
rcll
stc
test
test
test
test
test
add
jecxz
jecxz
inc
pop
pop
pop
pop
pop
aam
aam
add
add
ret
decl
es
dec
rol
ret
loop
add
or
push
add
add
add
mov
push
push
push
push
add
add
mov
addb
or
or
add
add
add
add
insb
insb
jge
jge
addl
rol
rolb
add
add
call
call
int
add
push
push
fiaddl
cmp
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
sti
sti
sti
sti
sti
sti
add
test
add
das
das
add
or
or
add
add
sub
lea
pop
bound
dec
add
add
add
add
js
js
js
inc
inc
inc
add
add
mov
mov
add
das
add
scas
scas
scas
scas
scas
scas
push
push
push
push
adc
adc
and
and
xchg
out
out
out
out
out
out
out
out
out
out
out
xor
xor
add
add
add
add
mov
lcall
out
xor
xor
xor
xor
xor
add
jae
and
and
addb
popa
popa
popa
rol
outsb
outsb
outsb
outsb
outsb
add
push
push
adc
adc
out
out
add
cmp
stos
stos
stos
stos
stos
add
ds
ds
ds
add
pop
pop
pop
pop
add
add
mov
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
dec
dec
dec
dec
dec
mov
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
push
push
push
push
push
push
cli
cli
cli
add
add
cmc
dec
dec
dec
dec
dec
dec
dec
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aad
aad
add
mov
mov
mov
mov
add
stc
stc
lret
pusha
pusha
pusha
add
cmp
xchg
xchg
xchg
add
add
sub
sub
sub
sub
jge
inc
inc
inc
add
add
push
push
push
push
cld
add
sub
add
add
add
add
add
ljmp
add
dec
dec
mov
adc
bound
add
add
add
iret
cmp
cmp
cmp
cmp
add
mov
into
into
into
into
mov
mov
mov
mov
data16
cs
andl
arpl
arpl
xor
outsb
jo
jo
icebp
icebp
icebp
icebp
icebp
icebp
aaa
cmp
add
add
addb
int
int
add
jp
jp
lods
add
add
add
push
push
push
pop
pop
pop
mov
mov
or
or
repz
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
xor
add
add
add
aam
aam
xor
xor
fcomi
cmc
cmc
cmc
cmc
cmc
dec
test
test
test
mov
mov
add
add
add
faddl
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
jg
sbb
ds
or
add
jb
jmp
jmp
jmp
scas
scas
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jge
jge
add
add
add
add
push
push
pop
pop
pop
add
add
sub
incb
cmp
cmp
repnz
in
movsl
movsl
loop
loop
enter
dec
dec
dec
dec
dec
push
or
add
add
xchg
xchg
xchg
xchg
xchg
xchg
add
sbb
sbb
sbb
rcrl
add
test
test
mov
add
or
or
addr16
sbb
sbb
jmp
adc
adc
push
push
push
fcmovu
fcmovu
add
add
add
xor
xor
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
lret
lret
lret
lret
lret
lret
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
loopne
loopne
jno
jno
mov
mov
add
add
add
jmp
mov
mov
mov
add
add
out
pop
pop
pop
pop
pop
push
push
push
push
push
add
add
adc
add
push
add
insl
insl
insl
insl
insl
insl
aam
aam
aam
aam
aam
aam
and
and
and
and
and
adc
add
pop
stos
push
push
push
push
push
push
push
push
push
push
push
mov
cltd
cltd
cltd
cltd
cltd
cltd
cltd
dec
dec
dec
dec
gs
cli
cli
lahf
lea
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
movsl
add
inc
inc
inc
cmpsl
cmpsl
cmpsl
cmpsl
add
sub
sub
sub
sub
add
add
add
dec
dec
add
ds
and
and
and
and
and
add
aam
inc
inc
inc
add
add
mov
add
add
fcmovnu
fcmovnu
fcmovnu
fildl
add
add
add
and
jne
add
add
stos
stos
sbb
sbb
sbb
pop
cltd
cltd
cltd
cltd
cltd
cltd
cltd
adc
and
and
add
rcl
add
filds
inc
or
or
cs
add
out
out
out
out
out
imul
pop
pop
pop
pop
pop
inc
inc
inc
add
add
inc
test
add
add
je
add
push
push
push
push
push
push
push
push
push
mov
mov
mov
ljmp
jae
jae
jae
jae
jae
jae
add
add
pop
pop
pop
push
push
push
push
incl
add
add
add
leave
leave
leave
leave
leave
leave
fwait
add
add
add
adc
add
add
addb
add
cmp
add
rcl
rcl
rcl
rcl
add
add
add
add
add
clc
clc
clc
clc
clc
clc
imul
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
mov
xchg
push
push
push
add
dec
dec
dec
dec
dec
dec
add
add
lods
lods
add
add
add
mov
inc
inc
inc
inc
aas
mov
add
pop
pop
pop
pop
pop
add
add
add
add
dec
dec
dec
dec
add
add
pop
pop
adc
add
add
cmp
add
add
std
add
cmp
mov
add
add
mov
add
add
add
add
add
add
add
or
push
push
push
push
push
mov
fcmovu
fcmovu
fcmovu
fidivl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
fstp
fstp
fstp
fstp
fstp
fstp
fstp
dec
jb
jb
jb
add
add
pop
pop
pop
push
push
add
add
or
mov
bound
and
add
push
push
add
popa
popa
popa
popa
popa
mov
movsb
movsb
sub
sub
scas
scas
scas
scas
scas
add
add
add
aad
push
add
je
mov
cs
add
stc
stc
stc
stc
stc
stc
stc
add
and
and
and
and
clc
clc
clc
add
sbb
sbb
insb
add
sub
ss
add
add
adc
adc
adc
adc
or
or
rcl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
add
or
add
add
add
fwait
fwait
fwait
fwait
fwait
fwait
lods
fs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fs
bound
dec
mov
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jge
jecxz
jecxz
jecxz
jecxz
jecxz
add
stos
add
add
arpl
pop
pop
pop
ficomps
add
adc
adc
adc
adc
adc
add
add
mov
sbb
sbb
bound
bound
add
add
add
add
inc
inc
add
add
add
mov
add
add
add
test
test
rcr
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
add
jmp
push
push
push
push
push
push
push
push
push
add
jmp
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
mov
mov
mov
fs
add
add
add
add
out
out
out
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jle
arpl
adc
adc
add
add
push
push
push
push
push
add
jle
jle
jle
icebp
add
imul
mov
mov
mov
mov
mov
mov
mov
dec
jb
jb
jb
jb
mov
mov
sub
sub
sub
sub
sub
pop
pop
pop
pop
pop
add
add
add
inc
inc
inc
jne
imul
jle
jge
add
add
or
add
add
add
add
inc
inc
inc
inc
inc
inc
sbb
data16
data16
inc
inc
popf
dec
dec
dec
dec
dec
dec
dec
mov
mov
adc
hlt
mov
pop
pop
pop
es
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
jo
jo
aaa
aaa
jbe
jbe
jbe
jbe
jbe
jbe
ds
rolb
add
add
add
add
ret
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
bound
add
pop
pop
pop
pop
pop
pop
add
lock
add
add
out
out
out
out
out
out
add
add
add
movsb
movsb
movsb
movsb
movsb
add
add
add
rcl
rcl
rcl
rcl
rcl
xor
ss
pop
pop
pop
pop
fwait
fwait
fwait
fwait
fwait
fwait
add
add
loope
cmp
cmp
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
jbe
jbe
jbe
ret
ret
ret
loopne
popf
popf
popf
popf
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
lods
lods
lods
lods
lods
pop
jbe
jbe
jbe
lods
lods
lods
lods
lods
lods
lods
and
and
fcmovu
outsb
bound
bound
inc
inc
inc
inc
inc
imul
mov
mov
mov
add
add
fiaddl
add
add
add
adc
dec
dec
dec
dec
dec
lds
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
call
call
call
cmp
cmp
mov
add
je
je
je
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jo
jo
add
add
add
int
int
and
add
add
fiaddl
add
add
add
cli
cli
cli
fadds
es
int3
mov
mov
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lods
mov
add
push
push
push
push
push
addl
addl
add
pushf
pushf
pushf
pushf
pushf
add
add
dec
add
add
add
add
jbe
jbe
xchg
xchg
xchg
xchg
add
fs
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
in
lods
lods
lods
lods
ss
add
add
add
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
xchg
xchg
xchg
xchg
mov
add
add
push
leave
push
push
push
push
push
data16
aaa
aaa
aaa
aaa
mov
jb
jb
add
add
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
sahf
sahf
sahf
sahf
sahf
pop
add
add
xor
xor
xor
arpl
arpl
arpl
cmp
cmp
cmp
cmp
fcmovnu
fcmovnu
fcmovnu
add
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
jnp
jnp
pusha
pusha
pusha
pusha
pusha
pusha
jmp
add
add
out
out
out
out
out
out
out
out
out
push
push
fwait
fwait
fwait
fwait
cmp
cltd
cltd
cltd
cltd
add
add
add
add
out
out
out
out
out
out
add
or
ss
scas
scas
scas
scas
scas
push
push
push
push
push
push
push
push
push
push
push
mov
imul
add
cmp
cmp
cmp
pop
pop
add
pushf
pushf
pushf
rcl
rcl
inc
inc
inc
inc
inc
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
dec
addl
mov
add
sub
sub
cmpsl
cmpsl
cmpsl
xchg
add
add
add
popa
popa
popa
add
add
add
push
add
add
testl
mov
call
add
add
add
std
sbb
sbb
sbb
fadd
aam
aam
aam
aam
aam
aam
aam
cmc
cmc
das
add
lcall
data16
rol
les
jb
jb
mov
mov
pusha
pusha
pusha
pusha
pusha
adc
mov
add
add
fadds
add
add
add
add
add
jmp
cmp
cld
cld
cld
cld
loop
or
scas
scas
add
add
add
add
call
add
inc
pushf
pushf
pushf
add
xchg
xchg
loop
loop
mov
add
and
add
add
add
ds
mov
mov
add
and
fiadds
mov
rol
rol
sbb
sbb
sbb
add
add
add
add
jnp
lods
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fbstp
add
test
add
pop
pop
pop
pop
pop
pop
rol
rol
rol
rol
rolb
xchg
add
inc
push
push
push
ljmp
stos
stos
stos
stos
stos
sub
sub
sub
sub
sub
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
fcmovu
fcmovu
ficoml
adc
adc
add
out
out
out
das
sub
pop
pop
leave
leave
leave
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
add
add
add
jp
add
add
add
pop
pop
pop
pop
cli
cli
cli
cli
cli
cli
cli
add
leave
leave
mov
je
add
cli
cli
cli
cli
cli
add
mov
add
xor
xor
xor
add
add
jb
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
add
add
add
xor
xor
xor
push
add
add
add
add
fs
ret
add
add
sub
sub
pop
incl
add
add
add
add
movsl
movsl
add
inc
div
sti
sbb
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
mov
daa
push
push
push
push
add
mov
mov
xor
add
fs
add
add
add
idivb
aas
cmp
jnp
jnp
cmp
cmp
aad
aad
aad
add
add
add
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
push
mov
mov
das
das
das
das
das
das
das
das
das
das
cmp
cmp
lahf
lahf
lahf
lahf
lahf
nop
add
add
add
inc
test
push
push
push
push
push
push
push
add
in
in
in
in
in
in
in
in
in
add
add
sbb
add
add
add
add
add
add
pushf
bound
pop
xor
add
add
out
out
add
add
movsb
movsb
add
jg
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
out
out
add
add
cmpsb
int3
int3
int3
xor
xor
push
push
push
into
into
mov
add
jg
fcomp
fcomp
fadds
test
test
inc
inc
inc
add
add
ljmp
add
add
add
push
push
push
push
add
add
add
popf
es
scas
scas
scas
scas
scas
scas
or
or
cmp
add
jecxz
jecxz
jecxz
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
add
dec
dec
dec
dec
dec
mov
mov
mov
add
repz
in
adc
fs
adc
add
add
add
pop
pop
pop
imul
imul
add
into
into
into
into
add
adc
adc
div
div
div
add
add
cmp
imul
add
add
fadd
add
add
sbb
aas
aas
aas
add
add
add
in
dec
add
inc
mov
lcall
addb
mov
add
into
into
add
add
add
rcl
rcl
rcl
sar
cld
cld
cld
cld
cld
add
add
xorb
jae
jae
jae
out
add
add
ret
ret
ret
ret
ret
ret
ret
ret
mov
pop
add
add
xchg
xchg
add
add
add
in
in
in
in
sbb
sbb
lret
pop
pop
pop
mov
mov
adc
adc
add
in
add
add
imul
xlat
xlat
xlat
xlat
xlat
add
add
sub
sub
ss
add
ds
fcmovu
fiaddl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
inc
add
mov
add
add
add
add
add
dec
add
dec
dec
dec
adc
add
add
add
add
loop
loop
loop
loop
loop
loop
loop
cmc
cmc
cmc
cmc
add
test
test
add
add
loope
stos
stos
stos
stos
stos
stos
add
add
add
add
push
push
push
push
add
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
push
push
push
push
push
push
push
add
ss
add
mov
sbbb
add
in
in
in
iret
iret
iret
iret
iret
iret
mov
rcl
rcl
rcl
nop
add
add
add
es
pop
add
add
add
add
add
add
add
add
add
add
rcl
rcl
roll
add
jno
aaa
aaa
aaa
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
sti
sti
sti
sti
mov
mov
mov
pushf
pushf
pushf
pushf
pushf
hlt
hlt
hlt
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
in
in
in
in
inc
inc
inc
cmp
cmp
add
add
add
add
out
out
out
out
out
add
xor
xor
dec
dec
dec
dec
dec
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fiadds
add
cmpsb
cmpsb
cmpsb
cmpsb
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
es
nop
nop
nop
inc
inc
inc
inc
insb
bound
push
push
push
push
mov
popl
add
add
add
ret
mov
jo
jo
cmp
xchg
ret
add
add
cmp
cmp
xchg
mov
sub
div
div
testl
popf
popf
popf
popf
mov
dec
dec
pop
pop
add
xchg
xchg
xchg
add
add
add
shlb
rol
pop
pop
pop
pop
pop
pop
pop
pop
outsl
mov
add
rcl
rcl
imul
imul
rolb
add
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
mov
mov
add
inc
inc
inc
inc
inc
inc
inc
mov
repz
or
add
add
add
pop
ret
ret
ret
ret
ret
ret
ret
add
cmp
mov
in
add
add
xchg
xchg
xchg
xchg
jne
jne
jne
jne
jne
jne
add
add
add
repnz
or
rol
rol
imul
imul
add
add
add
xchg
add
enter
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
add
add
lret
add
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
add
add
add
scas
dec
dec
dec
ss
push
push
push
add
add
add
sub
sub
repz
add
add
add
pop
pop
xchg
cli
cli
add
add
add
clc
add
in
in
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
add
mov
add
xchg
xchg
xchg
xchg
xchg
add
adc
adc
add
add
jmp
mov
add
add
add
add
add
jbe
jbe
add
add
add
popa
popa
popa
add
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
add
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
outsb
rcl
rcl
rcl
rcl
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
ret
ret
ret
ret
out
out
out
out
out
out
out
out
out
out
out
jmp
add
add
add
add
add
add
in
mov
mov
mov
mov
movsb
popf
ret
ret
lret
lret
jmp
jmp
jmp
add
add
add
xor
xor
xor
xor
sahf
adc
adc
in
das
daa
add
add
cmp
loop
loop
add
add
iret
arpl
arpl
arpl
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
add
bound
and
and
and
and
and
and
cmp
cmp
cmp
cmp
cmp
jl
jl
jl
add
add
icebp
icebp
icebp
icebp
jno
jno
jno
add
add
cld
cld
cld
cld
cld
cld
cld
call
add
dec
dec
dec
dec
incb
add
add
pop
pop
xor
inc
inc
inc
inc
inc
inc
arpl
jmp
out
out
add
lods
lods
lods
lods
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
test
pusha
pusha
add
add
test
add
sldt
add
imul
test
fcmovu
ficompl
push
fcomp
fcomp
add
mov
mov
fcomp
fcomp
fsubr
jmp
add
sub
mov
cld
cld
cld
cld
cld
cld
add
rolb
add
stos
stos
add
add
add
das
add
push
push
mov
call
call
call
call
inc
add
jno
jno
jno
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
loopne
rol
rol
or
or
pop
pop
sub
sub
xor
xor
xor
xor
incl
mov
add
add
sub
sub
add
add
add
sub
sub
test
test
mov
add
add
sbb
into
into
into
into
into
into
into
into
into
add
add
add
add
movsb
addb
in
xchg
xchg
xchg
add
add
add
add
add
add
add
add
ret
add
add
cwtl
cwtl
cwtl
test
pop
pop
pop
pop
pop
pop
jl
jl
add
mov
mov
mov
mov
mov
mov
add
stc
stc
stc
add
add
add
sbb
mov
or
xchg
mov
add
add
mov
cmp
jecxz
jecxz
mov
add
add
add
or
or
lods
lods
add
add
les
mov
mov
mov
pop
add
add
add
add
add
adc
adc
add
add
add
aas
aas
aas
add
add
add
loope
loope
loope
loope
add
rcl
rcl
rcl
rcl
add
add
add
add
add
add
mov
add
add
add
jmp
jmp
jmp
cmp
cmp
cmp
cmp
cmp
add
add
add
jle
jle
jle
jle
jle
jle
jle
mov
mov
scas
scas
scas
scas
fldt
cmp
popa
jns
jns
fiaddl
add
add
add
or
push
sub
sub
sub
sub
sub
sub
xchg
xchg
add
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
jg
adc
adc
add
add
add
add
push
repz
add
fcmovu
fcmovu
fiaddl
es
add
add
add
add
sub
sub
add
pop
pop
pop
add
add
repz
leave
adc
adc
adc
adc
jnp
jnp
jnp
jnp
mov
dec
dec
dec
dec
dec
faddl
add
add
add
add
mov
mov
add
add
iret
iret
add
lret
lret
out
out
add
data16
mov
dec
dec
dec
dec
dec
jle
add
add
add
insl
insl
insl
insl
insl
insl
insl
add
add
out
out
imul
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
and
and
and
and
and
add
push
push
push
push
push
push
push
push
push
sub
sub
sub
add
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
add
add
xor
xor
add
add
pop
pop
jbe
or
or
add
xchg
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
insl
insl
add
mov
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
inc
inc
inc
inc
inc
add
add
add
add
sub
cs
mov
mov
mov
mov
mov
cld
add
add
flds
add
add
add
and
adc
adc
rol
mov
mov
mov
and
das
das
jmp
dec
testl
or
or
mov
add
sbb
add
inc
inc
add
cmp
cmp
cmp
cmp
xlat
xlat
xlat
xlat
mov
jmp
jmp
mov
mov
mov
addl
add
sub
or
add
add
repnz
addb
add
test
jge
jge
jge
jge
jge
jge
lock
add
add
lcall
jae
jae
jae
jae
jae
jae
jae
cs
ret
add
and
and
and
and
and
and
mov
rol
rol
rol
add
or
or
js
js
js
js
js
add
lahf
mov
ds
mov
push
push
push
push
push
add
add
std
std
xor
add
add
sub
es
add
xor
xor
xor
in
fcmovu
in
jmp
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
pop
pop
pop
ret
ret
ret
ret
ret
ret
or
rcl
rcl
rcl
rcl
rcl
rcl
inc
mov
inc
adc
adc
aam
loopne
std
std
std
xchg
xchg
xchg
xchg
xchg
div
div
outsl
add
lock
add
xor
xor
xor
xor
push
push
push
or
add
add
jbe
pop
test
inc
add
loopne
mov
dec
mov
cmp
pop
add
dec
nop
loopne,pn
dec
inc
rorb
loopne
daa
adc
sub
movsl
aam
dec
push
loopne
inc
cmpsb
rolb
push
ljmp
out
inc
mov
mov
cld
pusha
sti
ljmp
ljmp
incl
into
jmp
mov
push
lods
pusha
rcrb
test
inc
push
outsl
and
loopne
xchg
pop
jp
sbb
aaa
mov
sarb
add
cmp
sub
sahf
jb
xor
pusha
loopne
mov
sbb
rol
lret
or
dec
dec
push
out
imul
dec
das
aaa
or
jbe
push
lods
loopne
shl
or
and
and
dec
enter
and
and
and
mov
mov
andb
xchg
mov
mov
add
lds
test
mov
dec
fmull
add
rorb
mov
push
add
push
outsb
adc
pop
movsl
idivb
lret
xor
push
setne
out
iret
fldenv
pop
out
pusha
add
xchg
xchg
xchg
out
or
sbbl
pusha
xor
jo
push
aaa
jbe
fnstenv
add
add
pop
inc
and
jne
push
addb
sar
or
rcl
dec
shl
data16
pusha
int3
in
xor
andb
xchg
cmp
inc
and
dec
in
pop
fstp
pop
loop
outsl
lcall
ret
add
repnz
sbb
push
int
and
pop
cld
rcr
mov
and
mov
addb
inc
sbb
push
cmpsl
add
cs
cmpb
iret
inc
xor
adc
cwtl
mov
mov
xlat
or
jg
mov
rclb
divl
add
stc
cmp
pusha
push
rol
and
pusha
jmp
lcall
adc
and
shr
dec
rcr
adc
shlb
or
jb
addr16
pop
inc
adc
pop
addr16
cs
loopne
and
subb
orb
xor
mov
loopne
leave
iret
ljmp
addb
loop
jnp
add
add
or
inc
clc
movsl
lods
add
inc
pusha
mov
shlb
mov
mov
jbe
ret
insb
test
add
pusha
sbb
les
addb
xchg
ret
mov
hlt
dec
push
xchg
test
sub
shlb
addr16
ret
ds
xor
pusha
andb
repz
add
ja
clc
sbb
mov
mov
lret
lods
cmp
lcall
xchg
sub
sar
cmp
ret
addb
xchg
andb
pusha
add
cmpsb
loopne
xchg
aad
inc
xchg
push
mov
inc
inc
cmp
jg
pop
xor
add
fisubrs
shll
inc
negb
push
clc
lcall
sar
lods
loopne
mov
xor
stos
addb
das
pop
pushf
cld
dec
ds
adc
out
test
and
dec
push
fildl
js
jecxz
gs
sbb
enter
adc
addb
loopne
or
mov
add
nop
shrb
mov
push
loopne
hlt
mov
bound
shlb
shrb
jno
mov
cmpsl
leave
adc
inc
jns
aas
mov
out
outsb
mov
add
mov
and
mov
test
add
mov
ljmp
push
ret
sub
cmpb
mov
rclb
aad
inc
xchg
mov
loop
gs
add
sbb
pop
lock
add
lret
clc
aad
jb
lcall
mov
inc
mov
push
xchg
inc
mov
les
test
inc
push
daa
push
dec
shl
mov
loop
xchg
lock
int3
ljmp
cmpsl
inc
adc
add
loopne
xor
inc
mov
shrb
adc
add
sbb
pusha
adcb
and
and
scas
adc
and
out
inc
in
pop
pop
and
sub
loopne
sub
add
pop
lds
icebp
leave
lret
rclb
inc
mov
and
cli
fbstp
or
loopne
xchg
mov
adc
mov
loopne
jg
insl
daa
cs
dec
jl
andb
mov
jne
dec
fidivl
jmp
fucomi
enter
add
adc
xor
movsl
dec
xor
out
es
inc
or
add
inc
cmc
stc
stos
lcall
adc
fdivr
inc
sub
mov
mov
mov
rorb
imul
cltd
mov
or
push
push
jne
jnp
test
rclb
ds
inc
jle
dec
mov
in
mov
mov
in
es
shrb
and
or
cmpsl
fdivrl
cmpsb
inc
andb
aaa
mov
andb
push
jl
inc
add
mov
ret
aaa
push
mov
cmc
hlt
jns
loopne
pop
mov
sti
xor
loopne
in
mov
add
cmp
mov
adc
push
mov
sti
inc
fistpl
rcrb
ss
in
add
jp
nop
das
jecxz
test
cltd
inc
test
in
add
inc
mov
inc
cmp
cmp
sbb
sub
or
andb
inc
or
lods
insl
mov
inc
dec
add
cli
pop
stos
add
jmp
loopne
scas
and
repnz
lret
test
inc
lods
add
test
or
push
shl
std
fwait
scas
and
mov
mov
jb
fcompl
pusha
fcmove
sbb
loopne
test
and
mov
pusha
aaa
rolb
stos
addb
out
rorb
push
sub
shlb
push
and
negb
dec
shrb
outsb
aad
ljmp
mov
imul
sbb
lods
popf
repnz
loopne
jmp
sarb
rclw
jp
ror
mov
inc
mov
in
push
add
mov
add
jle
pusha
and
cli
mov
sbb
dec
outsl
cmpsb
mov
add
pusha
push
and
add
push
push
addb
insl
adc
add
inc
pop
mov
rorl
or
or
push
pop
test
and
and
lcall
aas
push
or
xchg
and
inc
mov
fildl
mov
or
mov
mov
imul
mov
pusha
subb
xchg
pusha
push
addl
xchg
pop
add
popa
xchg
jg
push
loopne
and
mov
dec
xchg
int
shlb
add
pop
popa
lahf
inc
dec
push
sahf
lcall
add
gs
push
std
fisubs
or
inc
xchg
xor
sbbb
adc
shlb
enter
movl
cwtl
es
shl
cmpl
gs
inc
inc
jecxz
mov
xchg
loopne
pop
shrb
push
add
and
add
and
test
in
cmp
and
mov
ss
out
into
jae
push
dec
or
inc
loopne
jne
cmp
mov
rolb
xchg
rorb
imul
out
pusha
inc
in
ret
inc
add
out
dec
lods
pusha
loopne
mov
mov
inc
pusha
aad
mov
hlt
out
fs
lret
sahf
das
mov
aad
aaa
pop
loopne
sbb
or
pusha
or
jbe
cmp
mov
and
and
loope
andb
mov
adc
out
rcrb
ljmp
dec
test
and
or
outsl
pushf
ja
loopne
lcall
pop
inc
mov
pusha
cld
jbe
or
test
pusha
js
and
pusha
pop
aam
out
inc
jbe
xor
add
loop
mov
pusha
push
pusha
loopne
or
loopne
pop
adc
cmc
and
mov
int3
pop
mov
in
and
test
dec
and
inc
out
mov
and
scas
add
jbe
jns
sbb
fdivrl
clc
mov
enter
and
xchg
repz
andb
fildll
cmp
cs
mov
jb
xchg
jae
pusha
subb
pusha
sbb
add
push
je
lret
addr16
add
inc
loopne
out
fadd
mov
add
and
pusha
dec
dec
test
add
test
inc
mov
mov
mov
gs
sbb
in
push
sahf
xchg
sbb
push
imul
andb
jg
dec
stc
mov
or
fcompl
jp
and
add
xlat
mov
in
pop
push
daa
cmpsl
push
in
test
xor
aaa
rorb
mov
movsl
or
inc
mov
cmpsl
mov
loopne
lods
rolb
sarl
and
and
out
add
addb
or
call
rolb
add
dec
dec
ja
xor
pusha
inc
insl
les
repnz
mov
sub
xor
mov
shlb
std
xchg
andb
xlat
jl
and
rcrb
dec
clc
js
jl
arpl
insl
rorb
dec
push
jo
andb
lods
loopne
stos
inc
loopne
cli
jbe
les
inc
lahf
push
stos
mov
mov
roll
loopne
pop
nop
aad
pushl
lcall
loopne
enter
xchg
push
dec
push
call
ss
leave
or
outsb
sub
andb
addb
pusha
mov
mov
cmp
mov
and
rolb
dec
fptan
and
push
pop
pushf
cmp
push
jne
add
addb
pop
pop
adc
hlt
clc
enter
loopne
mov
mov
test
or
sbb
push
addl
int
or
add
or
jno
inc
cltd
loopne
addb
pusha
ret
pusha
xchg
push
or
shlb
add
fcoml
idivb
xor
mov
cltd
add
addb
and
add
push
aad
sub
rcrb
shrl
xchg
fcoms
ret
xchg
fs
and
sub
mov
dec
pop
xor
cmpsl
or
and
arpl
repz
filds
adcb
outsl
xchg
outsb
test
mov
inc
or
repz
cmp
cmpsl
loopne
push
loopne
je
in
cmp
cmp
rclb
hlt
addb
insb
loop
jo
repnz
push
dec
dec
mov
push
push
xor
add
das
outsl
push
imul
and
rorb
inc
add
and
fidivs
lods
and
dec
ret
scas
sti
mov
insb
push
leave
jae
ds
xor
std
jbe
sbb
insb
insl
fists
add
inc
adc
sbb
dec
cmp
inc
mov
call
mov
js
cmp
ja
insl
imul
pusha
mov
andb
push
call
and
add
xchg
xor
outsb
adc
xlat
fmul
mov
rorb
inc
rclb
jl
adc
dec
jns
insb
cmp
mov
pop
add
mov
loopne
inc
and
and
add
ljmp
pusha
test
pop
sahf
data16
clc
icebp
cmp
gs
rclb
adc
rclb
mov
push
adc
or
rcrb
sub
inc
andb
mov
invd
andb
push
inc
sbbb
add
mov
and
and
add
push
repnz
inc
cltd
pop
jo
addr16
movsb
pusha
rolb
pop
sub
pop
jb
xchg
in
push
and
and
loopne
loopne
rclb
and
pusha
push
popf
sahf
mov
inc
mov
add
add
shlb
mov
in
push
pusha
shlb
out
sbbl
lret
mov
lret
loopne
cmp
pusha
add
int3
push
sbb
jne
push
inc
pusha
int3
ret
addr16
mov
inc
and
cmpsb
and
int
pop
dec
lea
enter
in
xor
dec
and
push
adc
adc
call
inc
subb
inc
and
outsb
jno
mov
cwtl
cmp
rorb
and
xor
jmp
cmpsl
dec
clc
jns
mov
and
mov
lahf
enter
pop
outsb
rdmsr
pop
out
sti
pop
mov
shl
mov
enter
xchg
adc
dec
jmp
mov
pusha
mov
fsubl
cltd
ret
int
pushf
cmpsb
mov
pop
fists
loopne
ja
loop
packuswb
sub
mov
add
lds
inc
cmp
sbb
xchg
pop
mov
jae
mov
shlb
inc
imul
add
mov
xor
pop
mov
mov
idivb
xchg
dec
arpl
cmp
push
fsts
adc
and
and
mov
movsb
and
inc
inc
jne
inc
push
push
test
rcr
mov
mov
andb
cmpsl
adc
int3
iret
in
cmp
test
stos
shlb
xorps
jns
clc
lds
pop
pop
xlat
push
shl
pop
repnz
loop
mov
mov
fwait
xor
js
xlat
loope
xchg
loopne
mov
pop
or
rclb
cmp
scas
loopne
les
cmpsb
inc
mov
and
rclb
jne
add
shlb
rolb
rol
inc
incb
jno
inc
pusha
shrl
jge
jno
shlb
lret
add
cmp
xchg
pop
ljmp
sahf
pop
das
jg
pop
fisubl
loop
lcall
inc
lcall
pop
repnz
cmp
mov
and
inc
add
push
jno
add
adc
scas
push
or
mov
sub
mov
dec
inc
cmp
div
and
cwtl
sbb
mov
pop
and
mov
xorl
add
int3
mov
andb
je
sti
rcrl
addr16
lret
leave
in
jne
pushf
mov
and
and
out
xchg
jo
push
pusha
into
int
pop
cmpsl
iret
out
jecxz
sub
inc
mov
and
popa
sbb
and
adc
pop
scas
int3
lahf
sub
loopne
cwtl
lret
sti
push
and
pop
mov
and
mov
rol
xorl
addr16
aaa
xchg
push
add
mov
inc
sub
pop
dec
cmp
cmp
pop
push
cli
and
cmp
arpl
cmpsl
adc
out
stos
js
jecxz
dec
fidivs
push
pop
in
and
and
imul
and
iret
es
mov
insl
aaa
cmp
out
movsb
mov
daa
dec
out
add
mov
add
fstps
out
add
mov
xor
andb
mov
pusha
pusha
cmpsl
lret
lret
fisubs
pusha
fs
xchg
sub
pop
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
inc
add
inc
sub
div
xchg
mov
rorl
adc
addb
xchg
in
jp
pop
inc
ss
push
mov
cmp
nop
jp
dec
sbb
addl
fnstcw
mov
outsl
rorb
and
shlb
pusha
add
test
mov
xor
cmp
cmpsb
and
cs
adcb
movsb
loopne
add
mov
repnz
jmp
pusha
pusha
jo
jle
cmp
mov
and
subb
jle
test
xor
popaw
repz
adc
push
push
pusha
and
sub
rcl
and
mov
sbb
shl
icebp
push
fldenv
js
inc
fadds
les
pop
add
sub
mov
data16
addb
movsl
cmp
xor
pop
jp
xchg
add
mov
scas
and
lods
and
scas
ret
add
loopne
aaa
push
out
nop
cmp
lret
mov
add
imul
mov
ds
aad
cwtl
adc
out
jp
jmp
xchg
leave
xor
shrl
mov
inc
push
add
out
push
xor
test
mov
mov
les
pusha
inc
into
cmp
and
shrl
add
iret
rclb
inc
and
push
ret
xchg
ds
inc
movsl
jecxz
inc
fnstcw
lock
sbb
sub
and
fldl
add
imul
inc
call
lcall
mov
shll
cli
or
lcall
movsb
addb
shlb
pop
jmp
mov
fisubs
and
cmp
add
popf
cmp
jno
lods
loopne
jb
and
mov
jmp
mov
test
pusha
xchg
dec
mov
rorb
addb
and
xchg
sahf
push
lret
jae
pop
mov
adcb
or
inc
cmp
out
jl
dec
leave
xorl
mov
push
add
test
jnp
jns
cmp
call
loopne
dec
push
dec
imul
pop
jbe
adc
ficoml
pop
mov
and
mov
adc
add
cltd
pop
mov
adcb
mov
addb
mov
pop
lcall
and
ret
sbb
mov
out
fdivs
es
and
add
mov
cltd
cmp
ds
andb
mov
orb
xchg
ljmp
adc
add
inc
inc
jns
cmp
orb
push
pop
frstor
jp
in
dec
mov
sahf
jecxz
mov
stos
shlb
loop
ljmp
jae
add
adc
inc
xchg
push
int3
push
mov
stos
pusha
pusha
cmp
xor
sub
mov
and
jg
add
call
mov
sub
pusha
jl
mov
sbb
mov
mov
mov
mov
loope
sub
add
inc
arpl
bsr
loopne
mov
inc
add
rolb
js
pusha
rorb
rcrb
pusha
mov
xchg
scas
inc
inc
in
or
mov
popa
inc
xchg
outsb
xor
in
fcompl
in
les
jmp
and
fidivrs
inc
mov
and
clc
cmp
inc
inc
pop
and
loopne
or
sub
mov
es
adcl
shl
mov
mov
mov
xchg
mov
repz
gs
mov
icebp
push
aaa
aaa
mov
andb
inc
test
pusha
jb
add
and
movsl
push
sub
sbb
scas
or
pusha
push
add
insl
sti
dec
in
sbb
mov
mov
cmpb
and
inc
cmpsl
mov
or
mov
push
sub
inc
mov
pusha
and
and
sub
and
outsb
or
fisttpll
push
sub
arpl
adc
jle
je
hlt
mov
dec
or
add
and
add
ljmp
pop
jl
nop
sub
addb
cmp
loop
add
cmpsb
pusha
inc
test
lock
les
xor
fcoms
lea
rolb
and
and
adc
inc
adc
sbb
sub
mov
pop
test
shr
or
aaa
mov
sub
enter
mov
pop
dec
xchg
cli
sbb
mov
and
ret
shlb
test
and
lret
arpl
or
loopne
jnp
and
cmp
mov
loopne
enter
fidivl
xchg
repz
push
dec
in
xchg
cmpsl
mov
pop
inc
nop
sub
movsb
and
mov
mov
and
push
jae
mov
loopne
popf
sub
xor
jno
cld
mov
lea
in
sahf
aam
add
mov
inc
aam
ret
mov
arpl
stos
aaa
aas
fwait
lds
in
pusha
shlb
inc
mov
out
jnp
fdivs
bound
mov
xchg
and
pusha
add
or
pusha
push
sarb
divb
dec
hlt
loop
aad
xchg
push
test
orb
mov
xchg
lahf
push
pop
pop
in
cld
sbbl
fcoms
push
dec
mov
outsl
cli
ret
repnz
clc
sbb
xchg
bound
fs
dec
cmp
andb
jbe
roll
sahf
xor
pop
xor
inc
pusha
mov
xchg
loopne
repnz
mull
mov
icebp
aad
dec
jmp
inc
push
enter
int
in
xor
mov
sbb
add
mov
mov
loopne
xchg
pop
cmp
cmp
jmp
sbb
cwtl
inc
test
cwtl
lahf
add
imul
dec
adc
addb
or
roll
mov
pop
cmp
sbb
inc
mov
xchg
lcall
repz
subl
mov
adc
mov
pusha
add
lds
imull
and
ror
mov
mov
loope
mov
sbb
mov
pusha
push
dec
scas
rolb
jnp
inc
inc
jle
loopne
dec
rorb
add
loopne
xchg
mov
fimull
push
andb
mov
js
pusha
and
and
inc
inc
jle
jecxz
jbe
pop
add
mov
out
jmp
and
addb
ljmp
mov
pusha
pusha
data16
inc
add
or
and
and
mov
adc
in
xchg
and
inc
ds
add
jmp
cmpsb
and
xchg
inc
ficoms
add
stos
rolb
push
enter
sbb
mov
mov
sub
xchg
inc
xchg
insl
dec
jecxz
fstpl
fistps
mov
xchg
aaa
pushf
jo
adc
stos
adc
add
add
rolb
mov
mov
call
xor
and
movsb
add
and
pusha
mov
rclb
test
and
add
andl
mov
ret
jo
xor
fdivr
adc
xchg
hlt
cmpsl
jp
cmp
or
pusha
loopne
push
add
loopne
out
push
push
shlb
pop
jle
pusha
inc
pop
ret
insl
inc
mov
adc
add
je
mov
movsl
divl
inc
out
cmp
adc
push
dec
lds
pop
push
push
insb
sahf
repnz
lret
push
mov
pop
js
add
jle
and
les
fisubs
and
ret
xlat
push
pop
mov
lcall
leave
addr16
or
mov
out
les
andb
sbb
sub
sbb
mov
sub
fwait
in
sub
shlb
xchg
lcall
xor
mov
rclb
inc
xor
cmp
dec
xor
loopne
ret
and
cmp
mov
xchg
ds
loopne
push
leave
or
mov
shl
dec
fadds
xor
pop
mov
add
jecxz
jo
ds
repz
pop
xor
icebp
mov
xor
cmp
or
cmp
pusha
xchg
push
inc
loopne
dec
cmp
xchg
and
loopne
pop
shlb
in
pop
fwait
pusha
jl
mov
or
push
andb
test
loopne
addb
cmc
or
and
dec
hlt
dec
pop
lret
mov
xor
mov
loopne
test
mov
xor
inc
inc
and
inc
push
add
shlb
test
mov
mov
andb
repnz
dec
and
sti
mov
or
and
mov
cmp
mov
pop
fimull
pushf
dec
xchg
push
les
dec
popa
jmp
ret
inc
jecxz,pt
mov
loopne
cld
xchg
add
add
and
fidivl
mov
cs
loopne
cmpsb
rolb
jg
cmc
cmpsl
and
cmc
adc
sbb
je
inc
and
loope
int3
dec
movsl
movsl
arpl
inc
and
xchg
cmp
insb
cwtl
mov
xchg
xor
cltd
pop
or
pusha
mov
inc
ljmp
push
loopne
nop
add
add
jns
push
push
aas
xlat
cmp
xor
andb
mov
add
sub
das
adc
push
push
adcl
out
add
loopne
xchg
add
addb
mov
leave
imul
jl
pop
into
ret
pop
mov
add
pop
jnp
mov
add
insb
movsl
int
and
bound
and
sub
mov
cli
mov
arpl
adc
dec
lock
xchg
adc
and
pop
mov
adc
mov
out
inc
imul
in
push
xor
mov
loop
add
mov
adc
clc
mov
shl
or
sarb
push
push
push
add
dec
scas
sub
ds
aas
ljmp
sbb
lret
pusha
out
dec
loopne
rorb
xchg
mov
pop
jecxz
mov
lcall
sub
sbb
jge
leave
shrb
shll
rolb
les
xor
inc
mov
and
loope
lcall
mov
push
das
or
jnp
jae
movsl
cmp
push
pusha
inc
in
jae
cwtl
and
loopne
dec
pop
cli
add
mov
or
and
or
pop
mov
cmp
mov
ja
in
negl
and
inc
shl
popa
push
aaa
scas
pusha
pusha
mov
nop
push
shrl
pusha
mov
jo
mov
dec
jmp
jmp
ficompl
cwtl
int3
pop
dec
mov
into
mov
inc
and
pusha
add
imul
fsub
push
movsb
pusha
mov
popf
imulb
and
cmpsb
add
xchg
xlat
or
leave
sub
mov
xor
add
sarb
push
pushf
jmp
pop
cmp
dec
addb
lret
sub
add
mov
orb
xchg
loop
pop
scas
shlb
iret
lods
add
jp
mov
outsl
push
lea
shlb
pusha
mov
push
fstl
xchg
cmc
xor
pop
cs
cwtl
bnd
andb
ret
dec
pop
inc
dec
mov
ljmp
or
inc
mov
repz
mov
add
or
xorb
adc
subb
mov
adc
loopne
push
pop
and
insl
xchg
inc
std
rcll
ds
mov
add
insl
int
and
loopne
fs
pusha
add
sbb
mov
into
xor
imul
fisubs
mov
jns
movsl
and
scas
mov
nop
push
mov
enter
movsb
shl
fs
in
add
into
jp
clc
in
mov
repnz
sarb
test
faddl
and
loopne
and
and
and
int3
inc
xchg
dec
cmp
mov
fimuls
bound
shlb
lcall
stos
rcrb
and
andb
jecxz
pusha
inc
outsb
fdivrs
sub
shrb
nop
filds
sbb
dec
inc
loopne,pn
inc
in
lcall
addb
aam
int3
mov
dec
xor
push
and
mov
addl
in
mov
cmp
daa
icebp
mov
sbb
dec
and
adc
xor
mov
enter
push
stc
mov
imul
lahf
jbe
dec
xor
scas
andb
mov
and
push
cli
adc
pusha
xchg
add
inc
rol
adc
rolb
inc
imul
inc
or
pusha
mov
std
sahf
sbb
int3
cltd
mov
inc
and
loopne
mov
and
push
ja
mov
js
fs
mov
and
xchg
cmc
lea
stos
mov
add
int
mov
or
mov
addb
add
loopne
daa
das
cmp
dec
sti
out
sti
int3
sbb
add
inc
inc
jecxz
loopne
xor
mov
mov
adc
mov
in
adc
ja
js
int3
scas
mov
push
addr16
xor
sub
insb
lcall
test
subb
pushl
dec
xorl
sbb
negb
jle
push
nop
push
mov
leave
nop
jmp
jg
add
add
push
push
mov
xchg
ret
add
add
add
mov
pusha
loopne
repz
clc
repnz
nop
cld
jae
or
add
fadds
imul
mov
and
add
test
sbb
add
repnz
nop
cld
jae
add
dec
adcl
jae
push
add
xchg
adc
mov
nop
push
mov
leave
nop
jmp
add
roll
test
push
add
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
dec
test
push
in
into
xor
pop
push
mov
xchg
ret
roll
jecxz
mov
mov
push
mov
nop
push
mov
leave
nop
jmp
add
xchg
mov
nop
push
mov
leave
nop
jmp
pop
out
and
sbb
add
repnz
nop
cld
jae
add
daa
lock
push
mov
leave
nop
jmp
add
jns
add
add
cltd
movzwl
push
mov
xchg
ret
add
push
add
movsb
rolb
add
repnz
nop
cld
jae
jle
dec
cmpsb
mov
push
andb
add
clc
repnz
nop
cld
jae
add
stos
lret
jmp
leave
nop
jmp
add
test
add
arpl
and
mov
xchg
ret
add
stos
add
imul
add
mov
or
bound
xor
add
repnz
nop
cld
jae
mov
cwtl
add
sbb
add
clc
repnz
nop
cld
jae
sbb
add
push
sub
clc
repnz
nop
cld
jae
add
add
jb
clc
repnz
nop
cld
jae
out
pop
add
add
pusha
js
pop
push
mov
xchg
ret
jns
add
dec
fadds
jg
aas
pop
nop
push
mov
leave
nop
jmp
add
fadds
test
stos
or
inc
clc
repnz
nop
cld
jae
add
add
mov
inc
jp
nop
push
mov
leave
nop
jmp
in
add
add
addb
nop
cld
jae
into
add
add
push
es
jecxz
repnz
nop
cld
jae
mov
add
sub
add
repnz
nop
cld
jae
das
popa
cmpsb
add
add
jne
push
mov
xchg
ret
test
lea
add
add
add
clc
repnz
nop
cld
jae
fdivrs
push
push
sbb
and
add
clc
repnz
nop
cld
jae
push
add
imul
rclb
clc
repnz
nop
cld
jae
add
out
rep
clc
repnz
nop
cld
jae
add
jg
in
out
mov
clc
repnz
nop
cld
jae
add
xor
mov
sbb
nop
jmp
out
jns
rcrb
dec
add
nop
push
mov
leave
nop
jmp
add
mov
repz
repnz
nop
cld
jae
jle
dec
or
into
mov
pop
jne
clc
repnz
nop
cld
jae
jns
out
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
repnz
nop
cld
jae
add
adc
sbb
nop
cld
jae
jg
add
test
imul
daa
fistpl
push
mov
xchg
ret
jns
dec
daa
popa
jmp
xchg
cwtl
pushf
and
pusha
inc
add
clc
repnz
nop
cld
jae
push
push
nop
push
mov
leave
nop
jmp
add
dec
add
jns
inc
subl
clc
repnz
nop
cld
jae
test
xor
xchg
add
clc
repnz
nop
cld
jae
add
dec
and
nop
nop
cld
jae
add
mov
pop
push
nop
push
mov
leave
nop
jmp
add
popa
in
lea
jmp
pop
nop
push
mov
leave
nop
jmp
out
or
daa
add
mov
jmp
push
mov
xchg
ret
pop
add
add
daa
in
sbb
pop
clc
repnz
nop
cld
jae
rorb
incl
add
add
clc
push
mov
xchg
ret
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
add
add
mov
push
add
mov
clc
repnz
nop
cld
jae
bound
add
adc
add
xbegin
jae
rcr
mov
add
pusha
mov
repnz
nop
cld
jae
add
add
shl
stos
jns
and
aas
call
clc
repnz
nop
cld
jae
add
in
or
clc
repnz
nop
cld
jae
push
popa
add
out
insb
adc
pop
call
nop
jmp
add
test
inc
adc
repnz
nop
cld
jae
add
add
jecxz
fisubs
inc
and
clc
repnz
nop
cld
jae
add
add
xor
push
clc
repnz
nop
cld
jae
add
mov
and
in
leave
nop
jmp
jle
add
dec
add
mov
add
push
mov
xchg
ret
gs
sbb
add
add
mov
clc
repnz
nop
cld
jae
add
clc
pop
mov
clc
repnz
nop
cld
jae
add
roll
add
mov
clc
repnz
nop
cld
jae
into
incl
or
repnz
nop
cld
jae
add
add
mov
pop
nop
push
mov
leave
nop
jmp
sbb
add
add
add
nop
nop
cld
jae
add
mov
stos
pop
push
clc
repnz
nop
cld
jae
out
imul
xchg
ljmp
rclb
in
leave
nop
jmp
add
add
imul
lock
clc
repnz
nop
cld
jae
add
out
push
sub
nop
jmp
add
out
pop
inc
out
call
clc
repnz
nop
cld
jae
push
add
mov
clc
add
pop
pop
inc
add
add
loop
add
add
clc
repnz
nop
cld
jae
shrl
add
jne
movb
nop
nop
cld
jae
das
cs
add
loop
push
clc
repnz
nop
cld
jae
jle
add
xchg
push
clc
repnz
nop
cld
jae
test
roll
rclb
repnz
nop
cld
jae
add
add
inc
sbb
and
add
mov
icebp
inc
dec
es
repnz
nop
cld
jae
mov
add
incl
nop
push
mov
leave
nop
jmp
add
test
push
push
mov
xchg
ret
sbb
add
add
and
mov
fwait
push
mov
xchg
ret
add
add
test
sub
rorb
clc
repnz
nop
cld
jae
push
out
cmpsb
test
in
loop
xchg
push
mov
xchg
ret
testb
add
test
mov
rep
nop
push
mov
leave
nop
jmp
push
jle
test
shl
push
mov
xchg
ret
add
mov
loop
sub
nop
in
pop
clc
repnz
nop
cld
jae
add
add
mov
fld1
push
mov
xchg
ret
add
dec
out
add
add
enter
in
leave
nop
jmp
add
add
repnz
nop
cld
jae
jle
sbb
roll
xchg
das
cmpl
nop
push
mov
leave
nop
jmp
mov
add
sub
clc
repnz
nop
cld
jae
add
test
pusha
dec
lea
clc
repnz
nop
cld
jae
sbb
add
rcl
cmp
in
leave
nop
jmp
pop
add
add
jle
add
pop
pusha
inc
add
test
sbb
dec
add
dec
call
clc
repnz
nop
cld
jae
xchg
add
out
test
mov
leave
nop
jmp
add
rcr
add
mov
test
push
mov
xchg
ret
jmp
lahf
add
out
add
push
or
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
test
and
rorb
in
leave
nop
jmp
out
jmp
add
pop
sbb
jp
jbe
nop
push
mov
leave
nop
jmp
into
dec
addr16
or
add
nop
jmp
daa
sbb
push
mov
xchg
ret
pop
jns
add
add
and
mov
leave
nop
jmp
add
sbb
shl
fld1
nop
push
mov
leave
nop
jmp
mov
add
bound
add
lahf
fistpl
clc
repnz
nop
cld
jae
add
imul
inc
jno
sbb
clc
repnz
nop
cld
jae
add
in
add
push
cmp
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
dec
add
add
add
nop
nop
cld
jae
add
gs
pop
adc
nop
nop
cld
jae
xor
add
add
push
mov
loope
add
add
mov
leave
sub
repnz
nop
cld
jae
add
add
sbb
repnz
nop
cld
jae
add
add
stos
or
fsubrl
mov
nop
cld
jae
add
dec
add
add
clc
repnz
nop
cld
jae
jle
roll
rolb
cmp
sar
nop
nop
cld
jae
roll
add
inc
add
cltd
ret
clc
repnz
nop
cld
jae
add
add
dec
pop
add
cmp
sar
nop
nop
cld
jae
add
test
repnz
nop
cld
jae
out
test
dec
fsts
mov
xchg
ret
add
add
dec
push
adc
fistpl
clc
repnz
nop
cld
jae
push
add
add
jmp
add
das
out
rolb
imul
mov
xor
test
repnz
nop
cld
jae
jns
in
roll
cmp
push
mov
leave
nop
jmp
add
rolb
imul
adc
mov
xchg
ret
jmp
add
jns
loop
fwait
push
mov
xchg
ret
daa
cmpsb
add
add
add
add
orl
cld
jae
add
loop
add
pop
jae
je
add
clc
repnz
nop
cld
jae
out
test
cwtl
add
lods
add
clc
repnz
nop
cld
jae
xchg
add
add
cld
inc
xchg
pop
push
mov
xchg
ret
add
add
ljmp
push
loopne
repnz
nop
cld
jae
add
add
add
scas
mov
clc
repnz
nop
cld
jae
out
gs
mov
push
mov
leave
nop
jmp
add
roll
test
add
pop
loopne
add
clc
repnz
nop
cld
jae
push
add
call
clc
repnz
nop
cld
jae
add
test
clc
repnz
nop
cld
jae
add
mov
test
pusha
pop
aaa
mov
nop
push
mov
leave
nop
jmp
out
xor
xchg
add
xchg
call
clc
repnz
nop
cld
jae
test
pop
clc
repnz
nop
cld
jae
pop
cmpsb
add
and
nop
cld
jae
mov
add
add
repnz
nop
cld
jae
push
add
add
lea
xchg
adc
repnz
nop
cld
jae
add
bound
pop
add
mov
xor
push
mov
xchg
ret
add
imul
add
fwait
push
mov
xchg
ret
add
pop
sbb
adc
pusha
inc
sub
xchg
rep
nop
push
mov
leave
nop
jmp
add
test
jle
add
filds
popa
inc
add
add
add
add
adc
clc
repnz
nop
cld
jae
dec
add
add
push
mov
xchg
ret
or
add
and
nop
cld
jae
jns
add
jbe
clc
repnz
nop
cld
jae
dec
add
add
push
inc
inc
fldl
nop
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
add
add
xor
mov
push
clc
repnz
nop
cld
jae
add
dec
popa
add
out
xor
iret
or
cld
jae
xor
add
addl
subl
incl
add
incl
jbe
clc
repnz
nop
cld
jae
add
rorl
add
add
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
mov
mov
push
clc
repnz
nop
cld
jae
test
add
shl
or
fcoms
adc
repnz
nop
cld
jae
push
fmuls
jmp
pop
dec
push
mov
xchg
ret
fcoms
rolb
or
jns
push
in
nop
push
mov
leave
nop
jmp
add
in
add
stos
shlb
sbbb
add
repnz
nop
cld
jae
add
out
rep
clc
repnz
nop
cld
jae
lea
add
add
outsb
loope
insl
push
add
clc
repnz
nop
cld
jae
test
add
clc
repnz
nop
cld
jae
test
add
lahf
fld
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
cs
mov
dec
cmp
repnz
nop
cld
jae
sbb
test
add
pusha
clc
repnz
nop
cld
jae
out
xchg
add
jecxz
push
and
cmp
stos
notl
nop
jmp
or
add
movb
repnz
nop
cld
jae
mov
incl
add
cmp
mov
xchg
ret
jmp
addr16
mov
add
andb
nop
nop
cld
jae
add
ljmp
add
adc
add
repnz
nop
cld
jae
add
add
pop
dec
and
shrb
imul
leave
nop
jmp
pop
xchg
das
pop
xchg
add
push
mov
xchg
ret
add
in
dec
out
add
mov
clc
repnz
nop
cld
jae
push
add
call
and
addr16
clc
repnz
nop
cld
jae
inc
add
add
stos
dec
add
fld1
clc
repnz
nop
cld
jae
add
sbb
daa
mov
sbb
push
mov
xchg
ret
add
add
inc
and
push
mov
leave
nop
jmp
sbb
add
roll
mov
push
mov
xchg
ret
sbb
or
push
clc
repnz
nop
cld
jae
add
loop
roll
inc
into
call
nop
nop
cld
jae
dec
add
add
rolb
add
stos
nop
push
mov
leave
nop
jmp
add
popa
out
add
add
mov
xchg
ret
add
cmpsb
stos
add
add
jne
nop
push
mov
leave
nop
jmp
xor
sbb
cltd
push
clc
repnz
nop
cld
jae
rcll
inc
sbb
push
push
mov
xchg
ret
add
pop
in
add
add
xchg
nop
push
mov
leave
nop
jmp
bound
add
xor
add
push
mov
xchg
ret
imul
xor
imul
add
clc
repnz
nop
cld
jae
add
ror
add
loop
mov
ljmp
add
popa
add
add
test
out
mov
push
mov
xchg
ret
add
add
mov
call
clc
repnz
nop
cld
jae
or
stos
test
lret
mov
push
mov
xchg
ret
arpl
test
add
test
push
clc
repnz
nop
cld
jae
or
add
dec
add
or
add
repnz
nop
cld
jae
fadds
push
fisttps
nop
cld
jae
out
add
push
daa
dec
jmp
add
add
add
pop
add
add
add
push
xlat
jmp
add
into
add
add
jle
fadds
jle
imul
clc
repnz
nop
cld
jae
imul
dec
pop
out
xor
aas
sub
clc
repnz
nop
cld
jae
add
cmpsb
add
dec
cmp
cld
jae
xor
add
dec
add
add
not
nop
push
mov
leave
nop
jmp
dec
mov
into
das
add
mov
push
mov
xchg
ret
jns
add
jmp
add
clc
call
nop
jmp
mov
push
test
sarb
jge
clc
repnz
nop
cld
jae
daa
or
fadds
push
add
push
mov
xchg
ret
out
add
test
inc
jb
clc
repnz
nop
cld
jae
add
rclb
sub
add
mov
add
dec
push
clc
repnz
nop
cld
jae
add
jecxz
in
add
sub
cmp
nop
nop
cld
jae
das
dec
pop
pop
pop
add
imul
jae
add
out
mov
push
clc
repnz
nop
cld
jae
add
into
add
inc
pop
nop
push
mov
leave
nop
jmp
add
pop
fcomps
pop
fmul
sbb
dec
test
xchg
ret
jg
pop
add
or
add
mov
clc
repnz
nop
cld
jae
jg
add
add
pop
fistpl
clc
repnz
nop
cld
jae
test
add
ljmp
nop
nop
cld
jae
add
add
add
cltd
dec
nop
push
mov
leave
nop
jmp
rcl
into
incl
add
jmp
aaa
add
clc
repnz
nop
cld
jae
mov
add
lret
mov
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
in
add
add
movb
mov
xchg
ret
add
add
add
add
repnz
nop
cld
jae
loop
test
test
pusha
adc
ret
clc
repnz
nop
cld
jae
add
add
popa
add
mov
andb
add
mov
push
mov
xchg
ret
cs
add
add
cs
clc
repnz
nop
cld
jae
test
mov
push
mov
leave
nop
jmp
daa
add
jmp
decl
jecxz
loop
clc
repnz
nop
cld
jae
cmpsb
rorb
push
clc
repnz
nop
cld
jae
xchg
add
mov
clc
repnz
nop
cld
jae
add
arpl
imul
popa
clc
repnz
nop
cld
jae
add
add
add
add
ret
repnz
nop
cld
jae
add
add
add
pop
cmp
repnz
nop
cld
jae
pop
popa
out
cmpsb
dec
push
xor
clc
repnz
nop
cld
jae
add
mov
fwait
push
mov
xchg
ret
loop
stos
lahf
add
add
sub
mov
inc
add
lea
add
add
fs
and
inc
fld1
clc
repnz
nop
cld
jae
addr16
add
adc
jle
add
jle
add
dec
add
pop
add
call
clc
repnz
nop
cld
jae
add
nop
push
mov
leave
nop
jmp
out
add
pop
add
test
repnz
nop
cld
jae
imul
data16
mov
push
mov
xchg
ret
add
mov
icebp
clc
repnz
nop
cld
jae
daa
daa
inc
imul
lret
call
nop
push
mov
leave
nop
jmp
rolb
add
jbe
xor
neg
sbb
clc
repnz
nop
cld
jae
push
or
add
rolb
pusha
mov
mov
leave
nop
jmp
bound
push
add
add
sbb
insb
inc
add
test
push
shrl
leave
sub
repnz
nop
cld
jae
pop
add
add
cmp
repnz
nop
cld
jae
arpl
add
daa
add
jp
add
add
out
out
add
nop
push
mov
leave
nop
jmp
add
push
pop
add
nop
push
mov
leave
nop
jmp
or
add
test
adc
add
repnz
nop
cld
jae
xor
pop
mov
mov
out
sbb
leave
nop
jmp
add
ror
in
and
add
nop
cld
jae
daa
out
add
lahf
add
je
xchg
clc
repnz
nop
cld
jae
add
rolb
add
add
add
mov
test
pop
add
mov
clc
repnz
nop
cld
jae
add
add
add
scas
fwait
clc
repnz
nop
cld
jae
jmp
add
fcom
sbb
nop
or
repnz
nop
cld
jae
or
bound
xor
repnz
nop
cld
jae
add
arpl
jns
sar
push
mov
leave
nop
jmp
test
test
add
push
mov
leave
nop
jmp
add
stos
add
daa
add
xor
clc
repnz
nop
cld
jae
arpl
clc
repnz
nop
cld
jae
test
in
jecxz
test
mov
adc
push
mov
leave
nop
jmp
sarb
xor
push
mov
xchg
ret
add
out
add
ret
jmp
bound
xchg
ret
in
mov
jns
clc
repnz
nop
cld
jae
add
add
dec
add
pusha
fwait
fwait
clc
repnz
nop
cld
jae
daa
test
dec
add
arpl
push
mov
xchg
ret
dec
add
add
test
test
mov
xchg
ret
add
test
popa
shrb
adc
nop
nop
cld
jae
add
add
jns
jno
add
clc
repnz
nop
cld
jae
add
testb
pop
hlt
aas
movzwl
clc
repnz
nop
cld
jae
in
pop
add
call
popf
insb
inc
add
mov
shlb
add
add
mov
mov
call
cld
jae
add
xchg
out
add
cmpw
nop
push
mov
leave
nop
jmp
add
add
xor
add
clc
repnz
nop
cld
jae
add
add
add
shll
ljmp
test
add
add
add
int3
mov
repz
mov
xchg
ret
push
add
pop
add
jns
clc
repnz
nop
cld
jae
add
push
add
shr
nop
push
mov
leave
nop
jmp
add
jmp
cs
mov
clc
repnz
nop
cld
jae
test
add
push
mov
xchg
ret
out
add
into
add
xchg
push
push
mov
xchg
ret
or
add
stos
repnz
nop
push
mov
leave
nop
jmp
add
daa
add
add
xchg
nop
push
mov
leave
nop
jmp
test
add
add
add
out
incl
add
add
shl
add
add
add
addr16
stos
clc
repnz
nop
cld
jae
daa
test
shrl
fcomp
push
clc
repnz
nop
cld
jae
add
jns
in
das
daa
jnp
add
repnz
nop
cld
jae
add
dec
mov
nop
cld
jae
rolb
inc
rorl
daa
arpl
pop
clc
repnz
nop
cld
jae
add
fsubr
mov
xabort
nop
nop
cld
jae
jmp
mov
lea
add
xor
nop
push
mov
leave
nop
jmp
push
addl
xchg
xchg
ret
out
add
mov
fistpl
push
mov
xchg
ret
add
add
add
lea
push
mov
xchg
ret
add
add
loop
call
movzwl
clc
repnz
nop
cld
jae
add
add
add
test
add
clc
repnz
nop
cld
jae
push
add
fstl
mov
xchg
ret
rclb
add
inc
test
je
and
shl
clc
repnz
nop
cld
jae
add
imulb
cmpsl
push
mov
add
add
add
cmpsb
add
fcomps
add
and
repnz
nop
cld
jae
add
sahf
pop
mov
clc
repnz
nop
cld
jae
add
loop
fmuls
repz
repnz
nop
cld
jae
jle
add
pop
add
push
mov
leave
nop
jmp
add
add
repnz
nop
cld
jae
add
add
shlb
add
clc
repnz
nop
cld
jae
add
mov
test
ljmp
cld
jae
jmp
inc
ret
clc
repnz
nop
cld
jae
add
add
stos
add
jb
inc
add
into
out
jmp
dec
rol
dec
nop
push
mov
leave
nop
jmp
xchg
add
roll
dec
add
xor
lret
mov
leave
nop
jmp
daa
in
mov
pusha
xor
in
ret
sbb
mov
enter
mov
clc
repnz
nop
cld
jae
add
xchg
add
add
das
pop
clc
repnz
nop
cld
jae
push
add
pop
nop
push
mov
leave
nop
jmp
daa
mov
add
bound
es
andb
sbb
push
mov
xchg
ret
add
add
push
xor
call
cld
jae
add
add
add
fdivs
cmp
jns
xor
nop
push
mov
leave
nop
jmp
add
stos
add
add
dec
mov
push
mov
xchg
ret
xor
inc
add
add
lea
clc
repnz
nop
cld
jae
add
add
add
pop
shr
clc
repnz
nop
cld
jae
add
out
lahf
mov
and
ss
clc
repnz
nop
cld
jae
gs
mov
pusha
inc
add
add
in
push
test
xchg
add
jmp
clc
repnz
nop
cld
jae
add
add
lock
clc
repnz
nop
cld
jae
lea
add
adc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
jecxz
add
add
dec
divl
add
clc
repnz
nop
cld
jae
mov
add
fwait
clc
repnz
nop
cld
jae
add
incl
add
pop
in
push
clc
repnz
nop
cld
jae
or
add
add
mov
clc
repnz
nop
cld
jae
add
jg
jmp
jle
jmp
mov
xchg
ret
jmp
add
stos
push
add
xor
clc
repnz
nop
cld
jae
pop
jns
stos
loop
jmp
push
test
nop
push
mov
leave
nop
jmp
add
in
lahf
add
add
cld
jae
add
rorb
add
sarl
adcl
jae
add
add
ret
clc
repnz
nop
cld
jae
in
shlb
lahf
xchg
add
sbb
nop
nop
cld
jae
mov
shl
add
nop
push
mov
leave
nop
jmp
ljmp
mov
lea
scas
add
clc
repnz
nop
cld
jae
xor
stos
add
jl
clc
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
stos
add
cs
stos
andb
decl
clc
repnz
nop
cld
jae
arpl
sbb
add
add
nop
jmp
add
mov
jne
clc
repnz
nop
cld
jae
test
in
add
add
mov
leave
nop
jmp
pop
add
add
add
mov
clc
repnz
nop
cld
jae
dec
dec
test
pop
push
mov
xchg
ret
sbb
test
out
add
or
mov
xchg
ret
dec
add
rclb
inc
push
clc
repnz
nop
cld
jae
push
out
add
rcll
dec
jne
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
add
das
push
pop
clc
repnz
nop
cld
jae
cs
out
pop
add
pop
ret
jne
clc
repnz
nop
cld
jae
mov
add
jg
nop
push
mov
leave
nop
jmp
pop
rolb
jns
daa
adc
mov
nop
push
mov
leave
nop
jmp
add
imul
add
push
mov
xchg
ret
jle
add
test
push
mov
xchg
ret
sbb
out
ja
pop
adc
mov
cmp
ret
test
daa
add
gs
aaa
test
nop
push
mov
leave
nop
jmp
das
add
test
push
clc
repnz
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
dec
lahf
addr16
inc
or
mov
clc
repnz
nop
cld
jae
lahf
in
gs
xor
mov
xchg
ret
mov
add
and
and
mov
mov
clc
repnz
nop
cld
jae
mov
arpl
sbb
push
mov
xchg
ret
sbb
dec
jg
add
cmp
fld1
push
mov
xchg
ret
add
add
xchg
rolb
dec
jne
push
mov
xchg
ret
add
add
add
mov
incl
add
or
xchg
add
add
repnz
nop
cld
jae
jle
add
add
in
add
clc
repnz
nop
cld
jae
add
add
jle
in
pop
push
mov
xchg
ret
rolb
inc
pop
add
mov
clc
repnz
nop
cld
jae
add
into
pop
add
les
mov
xchg
ret
add
add
add
cmpw
clc
repnz
nop
cld
jae
push
push
loopne
std
pop
clc
repnz
nop
cld
jae
add
add
nop
cmpsb
mov
repnz
nop
cld
jae
jmp
add
add
add
jmp
repz
mov
xchg
ret
add
add
xor
ljmp
add
add
add
or
push
push
mov
xchg
ret
add
mov
pop
clc
repnz
nop
cld
jae
or
mov
in
roll
sti
clc
repnz
nop
cld
jae
daa
add
sbb
add
and
sbb
nop
nop
cld
jae
dec
mov
add
add
clc
repnz
nop
cld
jae
add
loop
add
pop
clc
repnz
nop
cld
jae
add
add
out
test
js
pop
clc
repnz
nop
cld
jae
imul
rolb
jecxz
fstps
repnz
nop
cld
jae
add
jecxz
add
add
loopne
sbb
loopne
clc
repnz
nop
cld
jae
in
stos
add
push
mov
xchg
ret
loop
or
out
in
iret
sub
push
mov
xchg
ret
or
add
add
test
aam
pop
jg
clc
repnz
nop
cld
jae
add
dec
popa
add
addr16
fsts
repnz
nop
cld
jae
in
imul
add
add
mov
nop
cld
jae
add
push
add
push
add
in
cmp
clc
repnz
nop
cld
jae
daa
push
popl
clc
repnz
nop
cld
jae
rolb
add
cli
ret
test
add
clc
repnz
nop
cld
jae
pop
xchg
add
repnz
nop
cld
jae
bound
add
mov
add
lock
sub
clc
repnz
nop
cld
jae
stos
addr16
add
test
inc
mov
clc
repnz
nop
cld
jae
in
lea
mov
push
clc
repnz
nop
cld
jae
addr16
add
imul
clc
repnz
nop
cld
jae
push
pop
sarb
pop
push
mov
xchg
ret
add
xchg
pop
add
nop
nop
cld
jae
sarb
imul
xchg
or
nop
nop
cld
jae
add
test
cmp
jge
add
add
daa
lea
mov
push
mov
xchg
ret
cmpsb
imul
add
add
ljmp
in
leave
nop
jmp
sbb
test
out
lahf
ss
jmp
add
jle
decl
add
jns
roll
sbb
pop
inc
add
test
add
add
andb
repnz
nop
cld
jae
add
daa
add
mov
dec
clc
dec
inc
clc
repnz
nop
cld
jae
add
add
pop
jne
nop
push
mov
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
jns
bound
rolb
mov
xchg
ret
fdivs
shrb
test
ljmp
nop
cld
jae
test
add
add
add
mov
push
mov
xchg
ret
add
add
pop
add
pop
push
clc
repnz
nop
cld
jae
jmp
roll
push
inc
jle
pop
mov
clc
repnz
nop
cld
jae
sbb
xchg
enter
push
push
clc
repnz
nop
cld
jae
mov
add
ja
inc
sbb
nop
jmp
add
pop
or
inc
add
nop
push
mov
leave
nop
jmp
jmp
mov
fld1
push
mov
xchg
ret
imul
xor
inc
loopne
mov
xchg
ret
dec
add
out
add
or
clc
repnz
nop
cld
jae
add
push
arpl
add
mov
test
clc
repnz
nop
cld
jae
dec
mov
clc
repnz
nop
cld
jae
add
rolb
add
dec
orl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
push
or
add
nop
jmp
mov
add
push
mov
xchg
ret
add
add
add
into
testl
nop
cld
jae
add
popa
sub
rclb
push
mov
xchg
ret
add
gs
loop
cs
push
cmc
dec
clc
repnz
nop
cld
jae
jmp
dec
add
add
add
mov
scas
add
repnz
nop
cld
jae
add
add
out
add
movb
repnz
nop
cld
jae
add
shl
add
scas
add
nop
push
mov
leave
nop
jmp
imul
add
arpl
ret
enter
nop
nop
cld
jae
pop
lahf
das
add
add
inc
push
mov
xchg
ret
dec
dec
mov
add
jle
or
nop
cld
jae
jns
sbb
add
in
add
add
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
add
add
add
add
add
fcomip
clc
repnz
nop
cld
jae
lea
jns
clc
repnz
nop
cld
jae
add
add
or
gs
daa
rep
push
mov
xchg
ret
lea
or
daa
add
mov
add
repnz
nop
cld
jae
inc
add
add
add
inc
and
repnz
nop
cld
jae
add
mov
fwait
push
mov
xchg
ret
jle
imul
in
sbb
ret
cld
clc
repnz
nop
cld
jae
add
sbb
jg
add
shlb
test
repnz
nop
cld
jae
push
add
add
push
mov
xchg
ret
push
roll
into
testl
cmp
ret
loop
add
das
shlb
repnz
nop
cld
jae
jmp
mov
call
int
pop
jae
repnz
nop
cld
jae
add
add
leave
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
pop
add
add
push
push
pusha
inc
push
inc
daa
pop
clc
repnz
nop
cld
jae
mov
roll
jns
add
and
orl
cld
jae
into
or
dec
bound
inc
push
adc
lahf
clc
repnz
nop
cld
jae
add
pop
jbe
movsb
add
ffreep
jmp
in
leave
nop
jmp
add
add
mov
seto
in
leave
nop
jmp
xor
in
inc
or
push
mov
leave
nop
jmp
add
dec
add
sbb
lea
clc
repnz
nop
cld
jae
not
add
push
add
fs
repnz
nop
cld
jae
arpl
sbb
nop
push
mov
leave
nop
jmp
dec
jecxz
add
mulb
mov
xchg
ret
add
arpl
mov
sub
push
mov
xchg
ret
jns
popa
add
imul
je
add
push
mov
xchg
ret
in
roll
add
add
inc
cmp
mov
xchg
ret
jg
test
cmp
in
leave
nop
jmp
ljmp
mov
add
push
pusha
and
or
in
leave
nop
jmp
gs
push
add
add
sahf
sbb
xlat
rep
clc
repnz
nop
cld
jae
rolb
bound
arpl
add
mov
xchg
ret
sbb
dec
mov
sub
clc
repnz
nop
cld
jae
rolb
add
pop
clc
repnz
nop
cld
jae
mov
dec
add
xor
nop
nop
cld
jae
push
add
dec
dec
mov
clc
repnz
nop
cld
jae
add
add
push
push
clc
repnz
nop
cld
jae
add
arpl
cmpsb
test
loopne
xchg
nop
push
mov
leave
nop
jmp
add
jmp
mov
popf
mov
clc
repnz
nop
cld
jae
add
loop
add
pop
clc
repnz
nop
cld
jae
jns
sbb
add
addr16
call
clc
repnz
nop
cld
jae
add
add
fld1
push
mov
xchg
ret
add
add
testb
das
push
clc
repnz
nop
cld
jae
jg
out
jle
jecxz
pusha
jno
test
add
clc
repnz
nop
cld
jae
add
add
sbb
in
leave
nop
jmp
or
shl
add
imul
add
repnz
nop
cld
jae
jns
shll
add
push
mov
mov
xchg
ret
jmp
add
shrb
add
mov
mov
mov
leave
nop
jmp
dec
test
add
add
sub
loopne
icebp
test
nop
push
mov
leave
nop
jmp
add
add
adc
in
leave
nop
jmp
pop
add
fcomps
add
add
dec
gs
add
or
add
pop
add
inc
dec
nop
push
mov
leave
nop
jmp
pop
test
add
loopne
ret
shrb
add
add
add
add
add
add
repnz
nop
cld
jae
add
add
test
cmpsl
pop
nop
push
mov
leave
nop
jmp
add
push
or
repnz
nop
cld
jae
add
add
push
pop
aas
movswl
clc
repnz
nop
cld
jae
into
add
add
ja
push
mov
xchg
ret
pop
shll
daa
das
add
out
pop
clc
repnz
nop
cld
jae
push
add
or
pusha
ror
push
mov
xchg
ret
dec
add
addr16
mov
mov
roll
push
pop
or
cmp
aaa
add
nop
cld
jae
add
rolb
mov
lea
sbb
push
mov
leave
nop
jmp
or
mov
test
clc
repnz
nop
cld
jae
push
in
sbb
and
incl
dec
add
mov
jle
in
mov
cwtl
sbb
push
push
mov
xchg
ret
test
add
push
loop
mov
adc
mov
nop
push
mov
leave
nop
jmp
arpl
add
into
pop
mov
nop
cld
jae
cmpsb
out
add
add
outsl
movzwl
clc
repnz
nop
cld
jae
das
idivb
clc
repnz
nop
cld
jae
daa
fmuls
daa
or
pusha
pushf
adc
mov
leave
nop
jmp
jle
inc
inc
in
rcrl
nop
nop
cld
jae
add
sbb
xchg
add
clc
repnz
nop
cld
jae
jns
add
dec
add
pusha
cmpb
roll
mov
xchg
ret
addr16
rolb
pop
daa
mov
nop
push
mov
leave
nop
jmp
add
add
call
daa
add
shl
out
fdivr
repnz
nop
cld
jae
test
add
push
and
and
shlb
add
jp
push
nop
push
mov
leave
nop
jmp
pop
add
push
dec
add
cmp
repnz
nop
cld
jae
add
lea
lahf
dec
roll
inc
push
clc
repnz
nop
cld
jae
add
mov
add
add
xor
clc
repnz
nop
cld
jae
push
dec
add
insl
mov
clc
repnz
nop
cld
jae
inc
sarl
push
clc
repnz
nop
cld
jae
test
lret
pop
nop
push
mov
leave
nop
jmp
dec
add
add
mov
pop
mov
clc
repnz
nop
cld
jae
mov
das
cmp
nop
push
mov
leave
nop
jmp
jecxz
add
nop
cld
jae
add
add
ret
push
clc
repnz
nop
cld
jae
cmpsb
add
das
add
add
nop
push
mov
leave
nop
jmp
add
test
add
mov
and
lret
movzwl
clc
repnz
nop
cld
jae
sbb
test
add
test
clc
repnz
nop
cld
jae
add
add
nop
cld
jae
mov
daa
add
add
xor
add
in
leave
nop
jmp
pop
loop
push
lea
clc
repnz
nop
cld
jae
add
loop
mov
mov
clc
repnz
nop
cld
jae
dec
add
pop
mov
clc
repnz
nop
cld
jae
out
add
out
insl
mov
nop
push
mov
leave
nop
jmp
out
add
xor
jnp
je
js
push
mov
leave
nop
jmp
test
mov
call
nop
jmp
add
stos
mov
mov
leave
nop
jmp
mov
add
add
mov
push
mov
leave
nop
jmp
lea
add
lea
sbb
repnz
nop
cld
jae
add
sbb
decl
clc
repnz
nop
cld
jae
add
add
out
adc
add
clc
repnz
nop
cld
jae
add
add
not
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
into
popa
dec
test
add
shlb
pusha
inc
push
fdivs
add
clc
repnz
nop
cld
jae
xor
add
fcmovnu
sbb
nop
push
mov
leave
nop
jmp
pop
xor
jns
add
push
push
mov
xchg
ret
into
pop
add
lea
pop
clc
repnz
nop
cld
jae
add
shll
add
mov
clc
repnz
nop
cld
jae
mov
arpl
add
mov
lcall
add
add
daa
add
test
mov
cmp
xorl
clc
repnz
nop
cld
jae
into
out
add
clc
repnz
nop
cld
jae
add
add
push
stos
inc
mov
sar
nop
nop
cld
jae
lahf
das
add
pop
or
ds
push
clc
repnz
nop
cld
jae
add
lahf
add
add
pop
mov
push
mov
xchg
ret
popa
into
add
daa
add
add
cmpl
cld
jae
bound
daa
add
fcoms
nop
jmp
add
roll
dec
mov
inc
add
repnz
nop
cld
jae
add
test
out
lea
clc
repnz
nop
cld
jae
add
push
add
push
shl
clc
repnz
nop
cld
jae
add
popa
pop
addr16
je
clc
repnz
nop
cld
jae
push
add
repnz
nop
cld
jae
daa
mov
add
add
inc
jmp
add
add
add
in
out
add
jge
add
jle
dec
jns
fadds
push
cltd
mov
clc
repnz
nop
cld
jae
push
out
dec
test
add
dec
push
jmp
add
dec
bound
bound
add
add
rolb
clc
repnz
nop
cld
jae
pop
popa
add
add
fdivs
call
inc
add
rolb
add
push
clc
repnz
nop
cld
jae
add
testb
add
rcr
lods
push
mov
xchg
ret
add
add
test
addb
pusha
loopne
jl
and
mov
jle
add
cs
add
pushf
test
mov
nop
nop
cld
jae
pop
add
test
add
adc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
xchg
lea
clc
repnz
nop
cld
jae
add
add
enter
nop
push
mov
leave
nop
jmp
out
jle
sbb
adc
repnz
nop
cld
jae
add
add
add
sbb
repnz
nop
cld
jae
push
arpl
lcall
in
leave
nop
jmp
gs
add
add
mov
push
clc
repnz
nop
cld
jae
add
jg
dec
out
in
push
mov
clc
repnz
nop
cld
jae
add
add
push
dec
mov
nop
nop
cld
jae
sbb
add
test
mov
mov
xchg
ret
add
add
add
sbb
add
mov
xchg
ret
add
mov
push
mov
leave
nop
jmp
add
xchg
out
add
imul
repnz
nop
cld
jae
jns
in
add
and
repnz
nop
cld
jae
pop
add
add
lods
mov
idiv
incl
add
jmp
add
pop
imul
add
clc
repnz
nop
cld
jae
add
add
test
clc
repnz
nop
cld
jae
lahf
jns
dec
lahf
mov
clc
repnz
nop
cld
jae
addr16
jmp
cmpsb
or
shll
clc
repnz
nop
cld
jae
rcr
into
pop
or
inc
add
pop
add
add
test
xchg
js
mov
clc
repnz
nop
cld
jae
add
add
xchg
xchg
inc
mov
pusha
add
pop
push
clc
repnz
nop
cld
jae
out
add
lea
xchg
and
and
pop
mov
clc
repnz
nop
cld
jae
xchg
add
add
mov
rorb
xchg
repnz
nop
cld
jae
test
add
add
cmp
cs
clc
repnz
nop
cld
jae
test
add
rorl
mov
xchg
ret
add
xchg
add
xchg
movzwl
clc
repnz
nop
cld
jae
rolb
fmuls
add
dec
cmp
repnz
nop
cld
jae
push
add
fadds
mov
clc
repnz
nop
cld
jae
add
add
bound
inc
and
clc
repnz
nop
cld
jae
add
xchg
clc
repnz
nop
cld
jae
push
cmpsb
add
daa
add
add
pusha
out
clc
repnz
nop
cld
jae
add
add
jno
clc
push
mov
xchg
ret
add
sbb
add
dec
arpl
and
clc
repnz
nop
cld
jae
add
test
add
in
clc
repnz
nop
cld
jae
add
daa
push
sbb
mov
xchg
ret
add
add
out
add
add
je
clc
repnz
nop
cld
jae
shlb
shrl
clc
repnz
nop
cld
jae
add
jmp
inc
add
stos
add
xor
add
jecxz
mov
clc
repnz
nop
cld
jae
roll
add
mov
out
clc
repnz
nop
cld
jae
add
push
jnp
mov
repnz
nop
cld
jae
imul
lods
push
push
mov
xchg
ret
add
add
add
cs
out
fimull
sar
repnz
nop
cld
jae
lea
add
jle
out
fld1
push
mov
xchg
ret
add
notb
xor
clc
repnz
nop
cld
jae
arpl
add
mov
add
push
clc
repnz
nop
cld
jae
add
push
mov
inc
add
movnti
fadds
add
pushf
lods
enter
movb
inc
xchg
mov
andb
loop
push
test
mov
mov
push
loopne
cmpsl
movsb
pusha
mov
icebp
push
mov
sub
xchg
sub
mov
leave
mov
cld
push
std
test
inc
aaa
xchg
mov
pop
push
cltd
or
push
std
sub
andb
in
sub
jo
clc
leave
wbinvd
hlt
xchg
test
shlb
lods
sbb
inc
pop
pop
mov
addb
negb
loopne
jo
fimuls
and
push
pop
cld
xchg
xor
rolb
shr
arpl
add
add
push
incb
inc
scas
stos
pop
mov
push
push
stos
and
dec
sbb
ret
xchg
add
add
jb
fsubl
and
inc
cmp
outsl
adc
into
dec
pop
mov
div
and
lods
jge
cmp
cmp
imul
mov
inc
in
push
add
push
sbb
mov
or
add
xorb
je
push
mov
or
and
mov
sarl
and
outsb
add
scas
and
xchg
dec
fwait
imul
xorl
arpl
sub
sbb
cmc
xlat
test
add
dec
lock
add
mov
rcll
pop
test
add
loopne
push
xchg
out
mulb
lret
jmp
rolb
inc
xchg
inc
sbb
sbb
in
push
mov
shrl
loopne
mov
sti
aam
pop
sub
and
add
cmc
sub
orb
loopne
and
dec
or
add
pusha
add
sbb
mov
imul
add
lods
and
nop
daa
fwait
adc
sub
xchg
sbbb
loopne
mov
cmp
rolb
fldcw
pop
gs
inc
out
lea
std
and
loopne
jnp
loopne
pop
insl
popf
push
std
scas
shlb
pop
int3
test
ficoms
jo
push
inc
loopne
jecxz
sub
pop
cli
test
mov
arpl
pusha
inc
call
jmp
popa
ds
stos
xor
push
ja
and
mov
pusha
rorl
mov
add
shll
mov
sbb
xchg
mov
fldenv
or
lahf
test
add
xor
outsb
aaa
popa
jge
adc
loopne
loopne
pop
sub
add
mov
movsl
pop
out
pop
daa
or
jmp
adc
js
in
pop
fdivrl
add
mov
dec
jmp
push
dec
fdivs
test
ja
jge
mov
cmp
mov
arpl
shlb
fbstp
daa
push
pop
inc
mov
rcrb
clc
or
loop
mov
in
repz
sarl
shlb
add
add
inc
pop
lds
shll
mov
das
inc
mov
inc
or
sbb
stos
sbb
shlb
scas
sbb
adc
in
jbe
add
inc
inc
push
inc
push
and
mov
fistpl
pop
mov
mov
std
push
scas
sub
sbb
jge
dec
fnstsw
jl
mov
or
mov
xchg
add
call
loopne
and
adc
loopne
cld
je
cmpsl
ljmp
add
rolb
push
xor
inc
fiaddl
dec
in
or
inc
mov
xor
fs
cmp
cmp
rol
add
lock
out
and
fistl
stos
mov
adc
mov
addl
inc
lcall
inc
stos
into
jb
xchg
sub
inc
dec
mov
lret
sbb
mov
add
and
scas
loopne
ds
divb
repz
arpl
rcrb
fsubl
loopne
sbb
imul
cmpsb
mov
mov
ja
and
ret
cltd
add
sbb
pop
mov
aam
fnstcw
pop
cmp
sti
mov
stos
and
fadd
jmp
add
jle
rolb
add
fnstsw
cs
add
in
mov
mov
test
rcll
ljmp
data16
jno
adc
or
rcrb
loopne
lcall
mov
adc
out
ds
fs
pop
movsl
jp
dec
mov
mov
mull
push
loopne
dec
inc
pop
add
and
jle
mov
sti
mov
inc
mov
push
mov
cltd
loop
out
shrb
je
sub
rorb
jp
sbbl
sub
fld
cmp
popa
stos
inc
cmpb
loopne
dec
movsb
pusha
and
cmp
je
jg
rcrl
fists
arpl
lahf
ret
insl
sbb
popa
leave
mov
shlb
adc
insb
out
outsl
fildl
stc
outsl
daa
les
add
je
loopne
mov
call
loope
pusha
pusha
jns
lcall
hlt
jl
cmpsl
xchg
iret
cmpsb
pusha
mov
enter
pop
jg
daa
push
or
lds
popf
aam
sbb
mov
mov
mov
loopne
test
xchg
shl
xor
pop
cmp
shlb
mov
loopne
xchg
test
inc
daa
iret
dec
outsl
sub
loopne
jecxz
jbe
adc
xchg
pop
pop
xlat
aas
xchg
pop
mov
inc
pusha
cmp
mov
add
cmp
dec
movb
lea
pop
stos
jae
sbb
inc
adc
or
rolb
sbb
mov
cwtl
inc
add
loopne
rol
pusha
pusha
jne
sub
xorb
fnstsw
cmp
outsb
sub
rolb
fwait
and
mov
push
lcall
test
xchg
jmp
mov
mov
cmp
add
outsl
dec
jle
push
jae
and
jle
adc
data16
outsb
iret
dec
test
pusha
dec
cmpsb
addb
call
jge
pop
idivl
xor
inc
and
inc
adc
or
mov
sub
mov
mov
out
add
xlat
out
xchg
scas
mov
inc
mov
in
sbb
divl
fdivs
clc
data16
or
hlt
in
and
addb
out
cltd
add
aam
nop
mov
clc
in
in
std
aam
in
loope
fldt
adc
gs
and
pusha
ljmp
adc
enter
insl
fiadds
stos
test
shlb
das
pop
push
sbb
test
fs
push
mov
push
orl
sti
add
shlb
loop
jecxz
add
pop
testl
mov
inc
xor
ja
add
hlt
push
icebp
jbe
lods
testl
pusha
dec
test
mov
addb
inc
push
dec
inc
daa
addb
xor
xchg
ret
sbb
ds
aam
out
and
or
mov
sbb
or
add
mov
add
mov
cmp
movsl
bound
and
mov
into
ss
dec
sbb
repz
add
out
fcompl
loopne
enter
aad
shl
xor
out
leave
push
xchg
sbb
addb
dec
mov
aas
adc
test
adc
mov
add
mov
add
subl
rcl
fisubrs
test
inc
or
and
loopne
xchg
mov
inc
adc
scas
stos
rol
mov
xor
cmp
mov
xchg
and
jo
pusha
rol
xchg
mov
and
stos
lahf
loop
les
xor
adc
fsubrl
mov
push
and
push
ja
movsl
jp
cmpsb
shlb
and
insb
xor
inc
lock
rcrl
jno
sbb
push
ds
add
loopne
jge
pusha
inc
add
subl
loopne
pop
aas
mov
push
add
and
scas
enter
loop
jl
loopne
dec
in
mov
movsl
inc
pop
lods
shl
les
out
loopne
and
mov
std
add
inc
icebp
pop
shr
out
imul
dec
jnp
sub
mov
cli
xchg
in
and
and
add
inc
xor
dec
fildll
add
xor
and
mov
and
mov
jne
sbb
sub
loopne
mov
xlat
add
sub
add
add
push
sbb
test
sub
inc
sbb
add
inc
das
incb
addr16
jg
stc
jmp
cmpsl
je
sub
rcrl
and
ret
int
push
jno
int3
outsl
out
into
cmp
adc
scas
shlb
inc
mov
push
test
add
jmp
xchg
push
sub
sbb
int3
jmp
incl
fsubs
or
loopne
adc
push
pop
jnp
jae
movsl
test
int
incb
mov
pusha
loopne
gs
dec
stc
jnp
addb
xor
sbb
mov
test
mov
into
mov
pusha
inc
mov
mov
pop
xchg
movsl
decl
loopne
movhps
divb
push
xchg
mov
pop
inc
xchg
cmpl
fstpt
stc
xchg
pop
pop
and
rolb
sti
fstpt
iret
addb
mov
push
xorl
ja
push
pusha
add
inc
xchg
jmp
addb
jbe
mov
jne
mov
mov
or
aas
dec
cmpsb
pusha
adcb
add
lret
push
mov
pop
js
adc
mov
xor
add
inc
adc
lds
pop
sub
jne
scas
out
and
stos
addb
push
push
out
outsb
sub
sarb
incb
cld
lods
loopne
add
inc
xor
mov
fstl
inc
mov
orb
and
xor
test
sbb
shll
sbb
in
inc
aaa
mov
inc
mov
loopne
repz
or
inc
inc
repz
loopne
xor
pop
mov
out
cmp
mov
inc
jp
subl
sbb
sub
out
dec
jae
mov
sbb
cmp
dec
xor
out
add
shl
imul
xor
scas
xlat
imul
pop
int
addr16
add
ljmp
mov
aad
dec
sti
shll
loopne
xor
shlb
mov
add
iret
push
and
inc
xchg
aaa
bound
jbe
cmp
inc
mov
dec
ja
loopne
cwtl
test
and
mov
mov
add
jae
fmull
jb
rolb
mov
icebp
lock
ja
dec
icebp
ror
fdivl
lret
scas
loopne
cmp
sub
mov
xchg
jmp
xor
and
in
stc
and
pusha
cmpsl
mov
aad
pop
hlt
sbb
and
andb
into
in
fldlg2
sub
in
loope
jns
mov
mov
push
adc
pop
pop
nop
jae
sub
jo
and
movsl
xor
rcrb
xor
dec
addb
mov
daa
mov
mov
fildl
mov
aad
cmp
mov
mov
js
cmp
mov
mov
loopne
stos
and
ficoml
xchg
add
mov
sub
and
adc
loope
stos
out
cmp
jno
adc
ret
cmc
stos
pop
dec
cltd
or
sbb
shll
cmp
push
add
ret
jns
inc
and
add
rcl
jbe
lods
mov
cli
gs
rorb
push
andb
dec
add
and
adc
mov
adcb
pusha
xchg
lcall
push
loop
inc
sti
adc
popf
scas
pusha
pusha
fcos
addb
addb
enter
les
inc
push
addb
fwait
xor
ljmp
jl
sarb
aad
fmul
insb
int3
add
sbb
mov
mov
fisttpll
mov
fdiv
insl
or
cmpb
inc
and
inc
hlt
sub
pop
inc
sbb
mov
inc
mov
pusha
inc
mov
mov
mov
xorl
sub
les
mov
inc
and
pop
insb
jge
inc
fsubp
add
mov
add
out
addb
pop
in
xchg
dec
test
add
mov
andb
aaa
jns
aam
nop
mov
int
and
pusha
and
sti
call
or
loop
add
loopne
icebp
fstl
jnp
jmp
repz
and
jbe
loope
or
push
sbb
mov
pop
jns
mov
xlat
frstor
les
sbb
adc
stc
lods
bound
andb
stos
andb
dec
inc
aas
movsb
add
or
and
lret
and
inc
dec
cmp
js
mov
rolb
and
sub
addb
or
add
in
stos
sub
js
and
test
loopne
loopne
lcall
rolb
ljmp
out
cltd
sti
andb
fcomps
or
and
and
sub
mov
addb
sarb
adc
dec
xchg
and
mov
shll
pusha
loopne
aad
iret
or
and
mov
loopne
xchg
adc
test
shlb
fisttps
add
pop
jle
xchg
rcrb
jl
andb
mov
stos
add
ret
xadd
aam
cmpsl
push
ror
in
xchg
and
mov
push
scas
mov
and
sub
inc
out
mov
dec
add
or
and
and
and
or
pusha
mov
and
cmp
es
add
or
and
and
xor
jne
cmp
adc
test
and
icebp
stc
pop
and
sub
cmpsl
leave
push
xor
adc
cmp
inc
dec
push
andl
aad
fildl
jge
cmp
push
int
pop
les
js
loope
addb
and
cli
test
call
or
inc
movsl
outsb
or
pop
addb
je
jmp
negb
test
pusha
jb
addb
sbb
cmpsl
dec
mov
in
mov
jmp
pop
jge
add
jg
xchg
jg
adc
add
or
pusha
push
dec
pop
divl
mov
and
movsb
andb
mov
pop
imulb
pusha
pusha
sub
jns
fnstcw
mov
mov
mov
rcr
and
inc
adc
adcl
or
shlb
andb
cmpsb
pusha
rcrb
xchg
sbb
inc
inc
lea
fwait
or
jbe
mov
roll
push
sub
sbb
sub
and
aas
pushf
aad
inc
in
cmp
mov
cwtl
inc
das
push
mov
mov
inc
push
push
repnz
jns
ss
jo
cli
jmp
loopne
aaa
sub
pusha
imul
push
incb
jl
cmpsb
loopne
or
xlat
and
int
mov
or
jge
enter
dec
pop
cmp
mov
mov
inc
bound
out
or
addb
mov
inc
xorb
arpl
dec
les
cmpsb
inc
inc
jbe
push
int
call
inc
shll
mov
aam
pop
push
and
pop
iret
mov
push
scas
addb
mov
jecxz
pop
aaa
jnp
sub
mov
nop
inc
mov
sub
outsb
sar
sti
sub
mov
and
mov
fisttpll
inc
or
out
imul
lahf
ds
and
adc
mov
and
sub
dec
push
add
sbb
sub
mov
mov
shl
addb
mov
lods
add
sarb
or
sarb
and
add
clc
addr16
pusha
pop
jge
jmp
jo
addb
fstps
jae
xchg
pusha
popf
xchg
jae
push
faddl
xor
mov
pop
scas
add
sbb
je
stc
rol
out
daa
dec
xor
loopne
js
pop
insb
int
inc
sahf
int
xor
or
in
cmp
aas
in
setns
rolb
xchg
inc
mulb
cmp
pusha
loopne
mov
pop
xchg
stos
loopne
addr16
cmpsb
and
mov
lock
xchg
pop
xchg
push
inc
dec
lahf
adc
popf
add
rorb
xor
leave
add
adc
ds
xchg
inc
popf
lea
addb
or
inc
jne
rolb
loopne
mov
loop
jmp
push
test
pusha
lret
nop
push
cwtl
cli
call
fcomps
pop
jp
xor
add
sbb
loop
sub
lahf
and
mov
mov
je
cs
rclb
sub
andb
sbb
jmp
or
jecxz
jae
addb
adc
int
shrb
loop
andb
ja
push
loopne,pn
pop
xchg
je
bswap
adc
jp
adc
rorl
push
push
mov
and
out
popf
bound
lret
inc
push
sarl
and
and
pusha
jge
andb
sbbl
loope
clc
pop
or
loopne
mov
loopne
aas
das
shll
jo
andb
div
and
loopne
inc
out
fidivs
or
and
inc
std
in
or
pop
cmpsb
inc
mov
xor
cli
jb,pt
inc
shlb
inc
verr
xchg
jne
sub
in
and
and
jle
ja
ljmp
jo
loopne
mov
inc
jle
loop
lret
add
fcompl
lcall
loopne
int3
lea
arpl
pop
insl
mov
test
inc
inc
jmp
ret
in
enter
lods
mov
test
pop
sbb
inc
mov
sbb
adc
test
andb
andb
push
loope
rolb
movd
pop
sbb
push
mov
push
mov
loop
scas
inc
pusha
inc
or
inc
inc
and
sub
imul
pop
mov
add
add
adc
xor
add
push
dec
out
sbb
sbb
addb
cld
push
inc
ret
dec
es
scas
and
and
jg
or
test
addr16
arpl
andb
xor
push
loopne
cs
inc
lea
adcl
jmp
movsb
and
mov
shlb
push
popf
dec
inc
dec
int
sub
adcb
popa
xor
jbe
jl
out
and
mov
andb
sub
sahf
icebp
aas
pop
lds
je
outsl
fs
aad
mov
aad
mov
loopne
sbb
pusha
push
lahf
ljmp
fldenv
cwtl
adc
orl
je
cmp
enter
movsl
sub
add
or
and
push
imulb
addr16
jl
dec
sbb
andb
leave
insl
out
int
jno
jle
or
or
push
cmc
add
mov
rolb
lods
cmp
dec
popf
addb
inc
mov
test
add
in
sub
inc
add
shl
pop
inc
inc
out
nop
push
lock
mov
cli
dec
loope
sbb
lahf
imul
adc
aam
inc
cmp
xor
mov
sbb
idivb
pop
leave
xor
fcomp
cmp
xlat
adc
sub
daa
in
addb
mov
inc
mov
push
repnz
insl
xchg
jmp
andb
ljmp
mov
jg
cmp
sbb
mov
out
std
addl
cmp
sbb
push
loope
cltd
sub
pop
les
out
mov
cmp
xchg
jno
lret
clc
jno
shl
call
mov
inc
add
xor
sbb
andb
mov
xchg
movsl
xchg
lock
imul
and
repnz
subb
inc
cmp
hlt
ret
push
add
cmp
inc
inc
mov
sahf
outsl
lcall
rol
jg
xchg
inc
push
adc
mov
imul
loopne
sub
sbb
dec
inc
es
pusha
je
add
inc
rorb
outsb
ficomps
sub
and
repz
mov
mov
sub
and
stos
andb
andl
shl
mov
enter
lds
adc
std
jl
push
mov
loopne
in
imulb
aam
dec
sbb
out
in
sbb
sbb
call
in
mov
aaa
cmp
push
add
lahf
das
mov
fdiv
and
add
dec
and
add
mov
push
jnp
mov
aas
ret
and
pop
iret
push
enter
test
inc
loop
push
sub
int
cwtl
loopne
out
ljmp
mov
sbb
loopne
or
inc
lock
jo
adc
inc
jo
push
inc
mov
and
pop
rorl
mov
addb
loopne
cmp
and
in
jmp
push
and
test
xchg
out
fwait
mov
sbb
sahf
test
and
pop
mov
xchg
cmpsb
add
push
mov
cmp
mov
pop
jno
sti
push
mov
out
addb
fldt
rol
add
ficompl
pusha
mov
mov
mov
rclb
ret
pusha
sti
bound
dec
cmp
shl
aas
jo
push
std
adc
inc
imul
jnp
loopne
cmp
pop
jae
mov
movsl
push
movsb
add
subl
xorl
cmp
cmp
neg
sti
cmpsb
and
ret
loop
lds
sti
dec
les
dec
mov
loopne
mov
mov
in
cmp
xchg
sarl
pusha
pusha
leave
mov
aad
pop
push
lods
jge
into
push
rol
bound
test
out
push
imul
fwait
xor
out
movsb
pusha
rclb
or
inc
pusha
cmp
inc
and
sarl
and
rol
sahf
imull
pop
or
inc
ljmp
push
mov
pusha
shrb
movaps
sbbb
mov
pop
test
dec
stos
loopne
and
dec
push
xor
mov
sbb
loopne
fwait
dec
or
popf
lock
popa
mov
add
mov
inc
push
add
add
ret
add
punpckldq
sar
jecxz
leave
imul
mov
pop
adc
lret
insb
scas
loopne
sarl
push
fdivrp
gs
jp
pop
ret
shll
push
jg
jb
call
xor
loopne
addr16
jl
sbb
std
or
andb
cltd
lcall
push
and
loopne
into
push
js
jg
jbe
and
mov
js
xor
out
mov
xchg
sbb
xchg
dec
movsb
addb
pop
pushf
notl
aas
jns
lret
loopne
popf
aaa
ficompl
loopne
push
fwait
cmp
pop
mov
lcall
and
add
cmpsl
sub
mov
dec
jb
pusha
test
inc
imul
and
mov
xchg
shll
test
mov
in
addb
pusha
inc
xchg
lds
inc
inc
stc
pop
mov
jp
adc
inc
and
mov
inc
cmp
shrl
mov
pop
cwtl
rcrl
xchg
mov
ja
sub
cltd
sbb
leave
adc
and
popf
pop
xor
iret
or
movsb
inc
inc
pop
fsubp
pop
lds
stos
sub
xchg
notl
ret
pop
outsl
add
inc
mov
add
and
pushf
loopne
inc
outsb
insb
loopne
filds
push
xchg
xchg
sbb
sub
mov
and
pop
sbb
and
and
pusha
cmpsb
inc
inc
fcmovb
xchg
mov
adc
jae
loope
loopne
iret
dec
jecxz
or
mov
shl
out
testb
loopne
mov
inc
jns
inc
cmp
lods
andb
dec
lods
inc
pusha
out
xchg
lods
add
mov
and
pushf
mov
pop
or
sbb
shlb
andl
in
jp
cmc
aam
add
loopne
fsts
lds
jecxz
or
add
mov
dec
sub
sbb
jo
inc
inc
sbb
jbe
push
stos
loopne
gs
shrb
cmp
jge
mov
movsl
lret
and
and
rolb
rolb
push
mov
and
enter
lcall
xchg
add
rolb
shl
mov
cmp
imul
data16
ret
addr16
loopne
mov
test
jb
ljmp
pop
test
std
or
mov
rcll
mov
push
pusha
rclb
notb
mov
mov
jnp
sub
push
pusha
sarb
shlb
in
and
push
add
and
loopne
rol
xchg
fisttpl
and
dec
dec
scas
mov
xchg
lcall
fcmove
cwtl
popa
loopne
std
lret
outsb
jge
inc
add
add
add
sbb
add
loopne
test
shr
xchg
stc
inc
add
iret
mov
sar
enter
aas
dec
mov
pusha
xchg
in
lock
std
cmpsl
mov
lods
inc
mov
andb
hlt
mov
repz
pandn
jge
loop
push
sbb
pop
repz
add
shlb
pop
xchg
je
jge
add
mov
iret
mov
jle
js
int3
mov
cmp
mov
xchg
cld
push
xchg
pop
mov
dec
and
cwtl
add
sarb
loopne
fcomps
and
dec
out
daa
mov
enter
nop
popf
lods
loopne
add
call
inc
addb
adc
leave
movsl
or
and
mov
sbb
out
add
inc
pop
testb
jns
adc
and
add
push
loopne
jns
push
enter
pop
je
sahf
adc
scas
xchg
mov
loopne
loopne
sub
stos
pusha
add
popa
pop
xchg
pusha
lret
xor
cmp
push
pop
sub
mov
inc
adc
mov
inc
inc
adc
ljmp
add
xor
pushf
rolb
pusha
jnp
jge
add
inc
in
xrelease
shl
loopne
into
lcall
mov
inc
inc
shrb
add
jns
add
mov
lahf
test
fstps
ficompl
sub
int
inc
jl
insb
icebp
int3
jbe
fwait
mov
push
inc
jecxz
cmpsb
and
mov
push
addb
push
js
or
andb
xchg
inc
jae
cmpsb
mov
jg
scas
and
arpl
ret
dec
sbb
lret
dec
bound
cmc
pop
sub
inc
inc
lcall
add
loopne
movsl
lods
loopne
mov
mov
imul
jbe
aad
and
add
mov
add
xorb
ret
in
jns
aas
lds
and
add
fiaddl
mov
aad
sub
pushf
cmp
stos
and
mov
leave
in
test
shlb
pop
xchg
into
aas
push
test
mov
fistl
pusha
outsl
mov
lret
push
das
rcr
hlt
test
add
mov
mov
push
pop
std
xchg
add
iret
inc
xor
fs
psubw
and
and
mov
dec
cmpsl
stc
test
jmp
jnp
pushf
mull
int
sub
add
or
pop
xchg
fcomi
cmp
mov
loopne
ret
push
pop
fnstsw
test
std
pop
je
mov
rolb
adc
sbb
addb
loopne
xchg
loopne
add
inc
jns
sub
rolb
ficoms
mov
lcall
addb
mov
xchg
aas
cmp
pop
jl
dec
adc
and
sbb
inc
fidivl
mov
mov
add
rolb
or
mov
or
loopne
mov
icebp
ss
fcomps
ret
fsubrs
lcall
std
add
mov
divl
das
sbb
lods
sub
js
xchg
mov
push
adc
fs
jns
sahf
aad
add
dec
jp
dec
cs
inc
pop
or
pusha
inc
mov
ret
pop
sbb
jbe
pop
fs
adc
popl
and
inc
in
lahf
test
ret
pusha
jns
push
movsl
int
outsl
cmp
xor
into
xor
inc
pusha
test
js
hlt
movsl
dec
shlb
pop
cmp
outsb
xchg
orb
jbe
mov
scas
xchg
ljmp
andb
repnz
add
movsb
add
mov
sub
pusha
and
mov
fs
jl
add
lret
pop
shlb
mov
insl
mov
in
jp
mov
add
call
dec
push
mov
sbb
fsts
faddl
in
inc
pop
cltd
add
xchg
and
pushf
dec
mov
fcompl
mov
shlb
daa
je
mov
rolb
fwait
mov
leave
pop
rol
lcall
mov
dec
mov
rclb
inc
mov
adc
sbb
hlt
rorl
xorb
out
imul
push
jmp
stc
jmp
or
movsb
inc
inc
jmp
popf
jg
pop
je
sub
andb
icebp
fimull
mov
add
inc
xchg
or
mov
pop
data16
pop
popa
and
in
nop
push
iret
ror
popf
add
stos
addb
fistpll
js
sub
add
test
pusha
subb
jmp
movsl
push
loopne
fldl
gs
sub
icebp
enter
rorb
sub
add
daa
pop
fcoml
push
loopne
pop
jg
loopne
fadd
push
out
mov
bound
xchg
mull
add
add
pop
pop
dec
outsl
and
xchg
lods
rol
loop
mov
pop
fwait
add
and
sbb
inc
mov
sbb
mov
addb
push
in
or
rcrb
inc
jecxz
shll
jle
jmp
cwtl
sbb
jge
fsincos
scas
stos
or
icebp
cmp
add
pusha
ficoms
jge
or
add
mov
or
mov
xor
or
pop
lods
inc
add
jb
data16
mov
loopne
inc
cwtl
enter
jne
int3
pop
andl
or
add
neg
inc
ret
dec
push
pop
xchg
mov
test
mov
call
jo
sbb
inc
adc
and
xor
ret
dec
mov
sbb
mov
addb
shrb
aaa
idivl
ret
sti
add
cmc
or
and
xor
lahf
nop
dec
adcl
dec
ret
adc
pusha
subb
mov
sub
xor
bound
gs
mov
in
lock
mov
orb
xchg
cmpsl
and
and
jbe
cli
sbb
in
rolb
mov
add
jnp
rol
sbb
inc
dec
jnp
insb
push
and
sti
mov
mov
xchg
mov
rolb
push
div
mov
inc
imul
jae
jns
lahf
and
inc
and
je
inc
mov
mov
movsb
add
jae
dec
int
mov
mov
mov
iret
pushf
mov
dec
xchg
jb
add
fldcw
xchg
inc
jo
dec
or
pop
mov
outsb
cmp
loopne
xor
stos
movsb
and
add
and
int
imull
pop
test
and
stc
mov
insl
das
push
push
sbb
mov
and
icebp
or
pop
mov
mov
loope
sbb
pop
pop
testb
and
xorb
sbb
sub
andb
hlt
jp
add
cmp
dec
icebp
daa
stc
sbb
outsb
icebp
fnsave
mov
inc
mov
es
or
add
mov
and
mov
in
push
stos
loopne
clc
lret
cmp
xchg
popa
imul
leave
push
jecxz
loopne
and
inc
decb
sarb
pop
ficomps
mov
fildl
in
xchg
or
rcr
icebp
lahf
lods
mov
jns
pop
stc
cmp
pop
lock
pop
cltd
xor
loopne
data16
orl
or
and
inc
jnp
mov
inc
stos
mov
andb
dec
inc
shlb
mov
std
add
loopne
test
inc
inc
lods
cmp
ret
push
call
in
xchg
sub
and
push
enter
or
jmp
add
hlt
xor
and
rol
shlb
mov
rcl
lea
inc
and
lea
push
pop
cwtl
inc
lcall
rcr
aam
push
aas
dec
mov
sbb
in
add
mov
sbb
ds
flds
loopne
out
sub
push
lcall
inc
cmp
jmp
xchg
cmp
cmc
clc
mov
movsl
mov
fwait
out
jae
mov
out
inc
or
inc
inc
lret
iret
movsb
andb
adc
hlt
xchg
lods
pusha
sahf
xlat
dec
sarl
xorl
xor
insl
mov
add
adc
jae
stc
adc
jo
pusha
shr
inc
mov
inc
push
into
push
push
ret
xchg
rcl
adc
in
mov
out
ret
aam
shlb
xchg
loop
jns
lret
ja
add
xchg
pop
jnp
mov
loopne
xor
in
lods
andb
loopne
stos
add
mov
mov
add
and
xor
sub
in
int
adc
or
xor
and
imul
js
in
loope
rcrb
jmp
inc
rcrb
and
loopne
js
icebp
aad
inc
jmp
xor
fs
and
pop
and
cmp
cld
fcmovb
adc
add
repnz
fsubs
mov
enter
mov
mov
lahf
jg
sarl
jecxz
pusha
rcrl
jo
jp
pusha
pop
sbb
adc
jl
lock
test
push
rorl
arpl
pusha
test
mov
mov
fcmovb
pop
xor
data16
adc
addb
add
jno
push
imul
jbe
pusha
loopne
push
pusha
pusha
aam
pusha
inc
clc
jle
arpl
inc
mov
jae
inc
jmp
aas
rorl
mov
add
sar
loopne
lock
popa
mov
sete
out
repnz
pusha
adcb
in
and
sub
cmc
addl
iret
pop
push
aaa
pushf
sub
inc
sbb
das
aas
popa
and
push
nop
mov
inc
mov
mov
cli
mov
pop
cmpsl
cmp
cmp
and
dec
incb
pusha
loopne
imul
push
dec
add
sub
orb
cmp
roll
rcrb
jg
fcmovbe
jle
inc
fst
enter
cmp
xchg
dec
push
ja
pushf
stos
vmovdqu
sub
loopne
imul
outsb
cmp
mov
rcr
scas
mov
cmpb
pusha
out
jl
andb
not
fbld
pop
or
scas
addb
in
fcmovnu
in
test
mov
and
xchg
imul
mov
imul
loopne
inc
cld
jne
shl
out
xchg
iret
inc
dec
popa
andb
cmp
pusha
and
inc
or
int3
jae
pop
adc
push
or
add
push
hlt
pop
loope
sub
aaa
mov
shlb
shl
push
jnp
inc
mov
mov
and
mov
or
loopne
jp
pop
add
pop
rorb
mov
ret
cmp
adc
push
and
mov
mov
faddl
jg
loopne
retw
mov
xor
or
and
loop
mov
imul
xor
push
loopne
dec
stos
rolb
add
cmp
pusha
rolb
dec
repz
mov
mov
dec
xchg
negb
mov
push
sub
shlb
mov
stc
icebp
and
inc
leave
mov
fadds
loopne
imul
int
sub
jnp
mov
les
mov
je
cld
jecxz,pt
jl
and
sub
orb
shlb
cmpsl
or
mov
push
mov
leave
xor
lcall
f2xm1
out
lea
inc
xor
and
mov
scas
add
rcrb
sarb
data16
leave
mov
cmp
push
arpl
and
test
pop
jnp
frstor
lcall
pop
xor
or
loop
cli
and
ret
jle
pop
sub
push
xor
ds
js
ficoml
lds
scas
fcoml
loopne
inc
clc
out
inc
jle
xchg
data16
pusha
xchg
lcall
or
nop
lods
call
daa
jecxz
xchg
into
leave
push
daa
fmuls
inc
add
and
sbbl
jle
pop
cmp
mov
cmpsl
movsl
and
loopne
push
std
inc
sub
and
mov
add
adc
mov
loopne
mov
stos
jbe
dec
adc
jbe
lea
sbb
nop
push
xchg
insb
cmc
pusha
insl
adc
jge
add
rcrb
xor
mov
sbb
push
push
lods
loopne
sub
ror
and
scas
out
loopne
sub
pusha
xchg
sub
jle
mov
add
popa
push
rol
ficoms
or
sub
pusha
aam
cmp
mov
push
mov
dec
arpl
iret
enter
mov
shrb
mov
outsb
call
loopne
imul
fninit
adc
inc
dec
fldcw
xchg
mov
fsubrl
hlt
cmpsl
std
push
shlb
jecxz
jns
enter
adc
dec
sub
pusha
inc
mov
xlat
push
idivb
mov
inc
mov
hlt
cmp
and
and
popl
subl
pop
pop
cmpl
and
lds
pop
popa
push
notl
inc
xor
not
jne
cmp
and
stc
pop
mov
add
ljmp
pusha
mov
mov
call
mov
popa
loopne
pusha
add
xchg
std
mov
or
inc
pusha
jno
cwtl
adc
loope
lret
sub
loopne
mov
mov
clc
daa
in
mov
mov
xchg
leave
dec
inc
xor
imul
cwtl
cwtl
arpl
cmp
sti
and
loopne
adc
inc
lahf
xchg
inc
push
cld
divb
in
leave
sbb
sti
sub
pushf
leave
push
sbb
sub
sbb
add
inc
sti
int
inc
and
and
jo
jns
and
sahf
jae
cmp
mov
ret
rcr
mov
and
fisttps
loopne
add
mov
loope
or
outsl
mov
in
adc
in
rolb
or
push
pop
ds
inc
inc
or
shl
shlb
pop
fcmovnbe
nop
hlt
mov
mov
loop
mov
xchg
lods
and
cmpsb
add
mov
popf
inc
mov
out
test
pusha
int
jns
push
pusha
loopne
in
ds
rcrl
sub
inc
js
lods
pusha
and
jae
dec
cmp
adc
pop
pop
nop
or
add
or
inc
sbb
inc
test
mov
mov
sub
push
and
loopne
mov
jge
in
cmp
pusha
sar
or
inc
bound
imul
clc
mov
inc
rcll
push
push
shl
push
mov
jo
push
mov
outsl
mov
inc
ficompl
mov
mov
inc
pop
sbb
or
rclb
hlt
pushf
push
and
pop
xchg
jbe
popf
es
repnz
add
lahf
and
sub
xor
out
pop
popf
frndint
inc
push
arpl
inc
daa
in
inc
jns
test
addb
call
shrb
shll
sub
and
dec
xor
adc
repnz
leave
iret
cmp
rolb
stos
mov
jecxz
arpl
sub
shlb
or
and
imul
or
andl
mov
add
xchg
dec
add
jo
aad
and
mov
clc
cmp
addb
nop
cmp
sbb
cmp
xor
cmp
add
pushf
pusha
out
inc
push
jbe
sar
test
cmp
sbb
xchg
or
fwait
mov
jns
into
sbb
rolb
rclb
inc
and
lret
mov
imul
pop
rcll
dec
cli
sti
es
mov
jnp
push
jno
pusha
inc
mov
push
rolb
popf
call
jmp
xor
insl
lret
pop
aad
pusha
aaa
or
sub
push
xchg
xchg
and
mov
or
and
in
adc
mov
imul
add
pusha
pop
and
pusha
jg
or
rcrl
jecxz
bound
mov
pusha
addl
and
xchg
imul
lret
jne
in
sub
or
loopne
sub
and
or
add
lahf
shl
pop
jle
pop
sbb
je
rcr
cmp
and
addb
testb
shrb
pop
or
and
xchg
xchg
shlb
mov
decb
loopne
rcll
loope
scas
testl
jecxz
mov
filds
add
hlt
movsb
pusha
and
negb
pop
dec
sbb
cli
das
pop
mov
aam
clc
pop
shlb
shlb
push
dec
imul
and
pop
lock
dec
pop
jl
add
dec
jo
fsts
mov
sub
mov
add
sub
mov
int
ja
pop
movsl
out
inc
xor
subb
pop
lock
add
lahf
scas
loop
adc
xchg
xlat
pushf
outsl
xchg
sti
jle
cmp
adc
cmp
fcmovnbe
rolb
cwtl
push
pop
push
loopne
mov
sbbb
cmp
aaa
mov
rolb
aaa
mov
mov
mov
or
loopne
or
and
pusha
pop
aaa
add
loopne
shlb
es
sbb
inc
add
loopne,pn
ja
fadds
mov
je
or
adc
xchg
sbb
add
and
aam
mov
rclb
or
subb
mov
aaa
negb
aam
inc
and
js
outsb
cmovs
xchg
scas
inc
pusha
dec
rorl
rolb
lds
dec
mov
fs
mov
sub
cmp
pop
xchg
divb
leave
pop
cli
inc
fs
xchg
mov
mov
add
cli
jne
enter
in
and
loopne
nop
sbb
shlb
in
push
pop
repnz
loopne
pop
cmovbe
mov
mov
jmp
mov
loopne
inc
shlb
cld
or
and
sbb
and
inc
sub
sbb
js
adc
repz
mov
pusha
aas
push
ss
xchg
xor
xchg
dec
insb
xchg
or
arpl
xchg
or
add
btc
aad
pushf
add
out
jmp
inc
ret
xchg
sbb
ds
xor
ljmp
jae
cwtl
jmp
not
scas
loopne
test
cmp
dec
xchg
dec
inc
push
and
pusha
movsl
les
inc
into
mov
pusha
cs
mov
scas
cmpsl
and
loopne
push
fnstenv
inc
pusha
jecxz
call
and
push
add
fdivs
inc
loopne
mov
scas
inc
rclb
pusha
jb
pop
xchg
inc
lret
scas
add
loopne
jns
push
notl
call
lods
inc
or
sbb
shll
jge
sbbl
push
sahf
and
mov
aam
cltd
rol
mov
cmp
arpl
sub
lcall
add
rcrb
fbld
and
jmp
mov
mov
mov
xchg
pusha
test
pusha
adc
scas
add
pushf
lahf
scas
add
in
in
xor
jne
add
addr16
mov
xchg
or
pusha
andb
adc
pushf
mov
xor
jecxz
inc
dec
xchg
fxch
mov
add
ds
leave
jb
mov
subb
jb
rcrl
adc
adc
xchg
inc
add
stos
inc
inc
test
mov
and
outsb
push
and
rcll
cs
add
inc
sahf
roll
pusha
fisubl
sbb
cmovne
cld
lret
cmc
cmpsb
loopne
lret
add
jg
and
in
mov
pusha
add
daa
pushf
movsl
push
and
addb
pop
rolb
pusha
and
fists
or
test
push
mov
or
pusha
mov
jbe
inc
rclb
rolb
and
mov
fidivrl
sbb
adc
ljmp
mov
iret
mov
ja
adc
xchg
test
lcall
in
add
fists
mov
mov
loop
test
scas
sub
repnz
addb
xchg
push
arpl
or
pusha
push
cmpsb
loopne
push
add
leave
or
out
jl
lret
jge
movsb
inc
and
and
and
mov
cmp
add
push
outsl
scas
add
popa
test
pop
andl
lea
mov
cltd
movsl
sub
cmp
decb
jns
je
or
cmp
scas
adc
lcall
mov
push
pusha
add
aas
sub
insb
ret
jbe
mov
ror
sbb
stos
andb
mov
cmp
add
into
xchg
shl
outsl
jl
inc
mov
pusha
adc
ljmp
jnp
cmp
mov
mov
push
pop
mov
aaa
mov
add
or
pusha
push
cmp
and
pop
loopne
jne
nop
push
fisubrl
dec
dec
push
dec
xlat
mov
gs
andl
dec
aad
lods
loopne
jo
pop
sbb
cwtl
and
jbe
dec
xchg
pop
sahf
fidivl
or
popa
nop
xchg
xor
shr
pusha
adc
scas
andb
mov
inc
mov
fisubrs
les
add
ret
lea
adc
sub
push
or
in
movsl
mov
mov
popl
cmp
mov
sbb
mov
out
inc
add
push
in
vunpcklpd
pusha
add
imul
dec
sub
sub
or
jo
sbb
mov
pop
clc
pop
mov
mov
mov
dec
out
sbb
or
and
add
mov
xchg
push
inc
jo
add
dec
cli
jle
addl
shl
dec
or
scas
pusha
mov
sahf
lret
arpl
call
jae
loopne,pn
push
loop
lods
xchg
nop
sub
lods
rolb
dec
adc
das
mov
inc
or
loopne
xor
loop
push
mov
mov
xchg
xor
stos
rolb
xor
rcr
xor
scas
out
push
shr
cmp
fsubl
mov
inc
aam
mov
pop
movsl
ljmp
loopne
dec
test
subb
jecxz
inc
ds
pop
push
cmp
subl
rol
xchg
jbe
push
pop
sub
push
cmp
pop
xor
aaa
mov
rclb
pusha
mov
inc
ror
adc
int3
jecxz
scas
mov
ja
mov
pusha
mov
addb
xchg
repnz
jbe
mov
das
jnp
mov
pop
sbb
inc
pusha
mov
inc
jae
adc
dec
add
lret
jl
mov
test
shrl
add
lret
cmp
lret
mov
outsl
repnz
repz
cmc
loop
lds
or
mov
loopne
movsb
pusha
loopne
nop
jp
inc
in
out
inc
jns
inc
adcb
shl
mov
lods
std
and
test
rclb
ljmp
fnstsw
jne
int3
mov
xor
shrl
fwait
addr16
ret
mov
mov
mov
clc
cmpl
out
or
loopne
loopne
jnp
sub
or
mov
insb
std
and
and
js
and
cmp
jmp
xchg
js
data16
fsts
mov
xchg
pop
popl
popa
fcmove
or
mov
inc
xlat
mov
pusha
mov
shlb
bound
ficoml
mov
insb
xor
xor
dec
jecxz
lret
and
mov
mov
jno
mov
sbb
push
in
push
xchg
movsb
loopne
xchg
xor
adc
fimuls
shl
push
mov
cli
add
cmp
xor
push
or
shlb
dec
mov
addl
pusha
and
xchg
sub
stos
loopne
xor
movsb
andb
jle
les
ljmp
or
shlb
mov
adc
sbb
inc
inc
test
pop
xor
add
xchg
and
shll
and
add
pop
loop
push
jo
cld
imul
and
in
mov
das
push
mov
les
fnstcw
xchg
fdiv
mov
into
lahf
cld
rcll
popa
aam
pushf
and
inc
add
inc
loope
mov
inc
pop
push
mov
sub
repz
and
push
insl
add
pusha
and
pop
ja
fsub
fcoms
cmp
dec
mov
xchg
outsl
mov
add
test
add
pop
add
and
testb
inc
jecxz
jge
dec
jmp
pop
ficompl
mov
add
ror
mov
popf
jg
mov
aas
data16
xor
xor
pusha
shr
inc
cmc
stc
mov
loopne
push
mov
in
enter
ret
sub
and
push
adc
inc
push
popa
mov
push
cld
mov
dec
pop
mov
rcll
pop
xchg
sub
cmp
add
stos
loopne
cmp
negb
shlb
or
out
rcr
inc
xorl
frstor
mov
scas
andb
mov
add
rolb
cli
cwtl
out
test
xchg
xchg
adc
mov
int
mov
cmp
xchg
jne
lret
ret
dec
fistps
arpl
insb
lret
mov
mov
mov
add
pusha
imul
movsb
inc
pusha
adc
int3
data16
inc
subb
mov
inc
push
add
inc
inc
repnz
das
int
or
inc
daa
jb
jp
adc
push
outsl
ret
out
sbb
jg
push
sbb
fwait
mull
ds
jns
cmp
push
pusha
andb
sub
ror
dec
mov
and
fcomps
lret
or
movsl
ja
fcoms
jnp
je
rorb
push
shl
lock
lgs
out
scas
add
xor
bnd
clc
std
aas
jmp
call
aaa
dec
sbb
std
dec
jae
xchg
sbb
sbb
dec
adc
xchg
aam
lcall
dec
sub
add
test
mov
rcrl
xchg
sbb
adc
shlb
mov
aad
mov
push
mov
and
inc
mov
les
inc
test
decl
dec
lods
and
lret
sbb
mov
add
dec
xchg
scas
add
idivl
jecxz
xchg
pop
mov
in
add
sbb
pusha
mov
imul
and
jmp
push
insb
fdivr
test
cmpb
imull
loopne
test
rcl
sahf
cli
arpl
test
sbbb
lock
and
inc
sub
mov
pop
cwtl
sbbl
call
pusha
and
mov
mov
imul
inc
jo
int
shlb
dec
fs
cltd
xor
pusha
loopne
rol
loopne
lret
mov
jno
xchg
sbb
jecxz
xchg
mov
addb
shrb
aad
movsb
pusha
inc
jne
push
xor
mov
mov
inc
rcr
pop
shlb
lds
mov
inc
and
cmpsb
and
stc
ds
cld
fstpl
sbb
iret
cmpsb
pusha
mov
in
insb
add
loopne
leave
cmp
movsb
and
shl
pop
testl
add
jl
push
out
fmull
scas
add
and
pop
and
shlb
imul
dec
movsb
rolb
inc
je
jae
ret
je
iret
inc
xchg
aad
push
add
lahf
mov
mov
pusha
inc
imul
push
pop
addb
sbb
loopne
lods
mov
icebp
inc
cmp
dec
mov
les
inc
dec
cltd
repz
ljmp
hlt
cmp
and
sbbl
and
cli
sbb
lds
xor
loopne
addr16
mov
inc
test
add
pop
dec
jmp
movsl
adc
adc
mov
loopne
loopne
sub
sbb
cmpsl
adc
imul
sub
in
mov
shrb
fwait
xacquire
pop
clc
or
adcb
lret
mov
add
bound
pusha
add
loopne
fwait
scas
fwait
dec
mov
lahf
decb
vmovapd
ljmp
shlb
loopne
xchg
call
call
rolb
pop
pushf
inc
mov
inc
fistl
or
ss
cmp
jns
adc
sarl
mov
dec
ljmp
pusha
pusha
mov
cmc
xchg
or
fnstcw
xor
mov
xchg
adc
test
fdivr
imul
loopne
fisubl
shlb
loopne
mov
arpl
notl
mov
lret
or
inc
pop
test
xchg
into
in
test
out
inc
fldenv
cmp
inc
hlt
mov
and
loopne
add
and
and
shlb
ljmp
sub
xchg
scas
sub
mov
cmp
add
test
fst
pop
mov
jno
xor
or
jg
in
iret
mov
jecxz
iret
addb
push
mov
pusha
mov
rclb
mov
pusha
and
loopne
movl
hlt
ret
pop
out
popa
cwtl
cmpsl
pop
loopne
shl
rolb
bound
sub
arpl
pusha
loopne
out
pushf
push
mov
and
inc
cmp
jbe
and
xor
pop
cs
loopne
test
orb
rorb
pop
in
cwtl
outsb
jl
lds
mov
adc
push
loop
pusha
mov
aam
insb
or
pusha
stc
mov
lods
inc
mov
sahf
pusha
jbe
andb
mov
inc
push
pop
mov
mov
jb
and
ss
add
push
out
pop
fistps
popf
xchg
test
out
negb
jp
out
das
fbld
sub
mov
mov
push
and
shlb
clc
std
xor
andb
hlt
xchg
xor
pop
aas
sub
inc
adc
add
mov
stos
add
mov
aam
hlt
jecxz
pop
roll
into
and
mov
pop
aam
ljmp
fcomps
jne
fnstcw
mov
and
lods
inc
andb
test
loopne
loopne
pop
and
lahf
xchg
cli
sbb
cmpsb
add
daa
mov
pop
fsubr
test
loopne
sub
inc
scas
aas
fldl2t
aas
lahf
movsb
rolb
or
addb
pop
std
or
mov
dec
addb
adc
dec
push
gs
lds
andb
aam
test
add
movsl
dec
pop
shrd
sub
shl
outsb
fcmovb
out
or
int
pusha
loopne
mov
sbb
push
or
fs
adc
adc
dec
add
loopne
rorl
int3
jbe
fisubl
rorb
add
sbb
add
mov
add
pusha
or
mov
cmp
repz
pop
pusha
mov
repz
pusha
add
lea
and
fldl
sub
inc
mov
and
xchg
sahf
dec
sub
lahf
push
rolw
imul
fwait
xor
pusha
loopne
data16
aam
or
repnz
inc
out
scas
mov
or
inc
inc
pop
pop
and
and
pusha
add
pusha
add
jne
enter
loopne
rorl
and
testb
xor
cmp
aad
shrl
mov
inc
adc
imul
clc
ja
mov
test
xorb
or
sahf
ljmp
and
mov
mov
and
xchg
adcl
mov
stos
add
stos
push
xchg
faddp
sub
lcall
jbe
mov
repnz
addb
into
push
mov
imul
mov
outsl
in
and
mov
and
xchg
xchg
and
or
mov
add
add
jae
pusha
shlb
pusha
into
push
popa
push
shlb
jmp
cltd
mov
pop
add
inc
ss
rol
jbe
sbb
pusha
cmp
je
loop
lods
in
xor
repz
xchg
sub
jg
hlt
cld
stos
ficoms
add
inc
loopne
sbb
andl
add
mov
loopne
ds
loopne
cmp
mov
xor
push
pusha
andb
mov
adc
fmuls
loope
push
mov
adcb
ror
mov
loopne
shlb
rorb
and
dec
out
add
cmp
lret
into
clc
mov
xchg
mov
adc
psrlw
pavgb
fstps
cmp
xor
dec
jne
jl
mov
mov
das
popf
mov
fisttpll
pusha
iret
outsl
iret
inc
jge
sub
loopne
pop
dec
shlb
xchg
push
bound
or
mov
sbb
pop
xor
add
mov
and
sarb
out
inc
addb
or
pusha
jae
scas
addb
jnp
out
lret
pop
mov
adc
in
addb
inc
push
cmp
mov
loopne
add
inc
jbe
and
and
dec
xchg
ds
mov
fnstenv
add
inc
sbb
push
imul
loopne
pop
ss
hlt
jae
fdivl
adc
int3
mov
sbb
out
cmp
xor
pop
mov
jbe
in
movsl
cmp
shlb
push
push
sti
out
sbb
cmp
test
sub
push
mov
add
mov
cmpsl
xlat
das
mov
loopne
aas
fiadds
jnp
mov
cmp
sbb
lods
rcr
add
sbb
jmp
jmp
xor
loopne
sbb
rolb
loopne
icebp
add
jmp
les
mov
fmuls
inc
add
movsl
js
pusha
and
dec
inc
add
inc
jbe
andb
mov
dec
fldenv
mov
pusha
test
into
sub
gs
cld
in
pop
jle
adc
shll
xchg
lcall
mov
or
dec
jge
andb
and
inc
inc
pop
imul
leave
in
pop
mov
imul
shlb
dec
sub
pusha
rorb
push
push
xor
loopne
popa
or
loopne
arpl
adc
pop
push
xor
nop
jnp
loopne
notl
xor
push
rolb
rcl
repnz
or
or
stc
jb
lahf
bound
mov
pusha
aas
push
inc
fdivs
sub
stos
addb
adc
or
inc
pop
or
shrl
pop
mov
inc
test
pop
iret
sahf
mov
add
fistps
dec
jae
cmp
and
mov
mov
inc
add
add
sbb
push
daa
jns
xor
or
xchg
das
push
mov
int
xchg
mov
sub
mov
xlat
inc
pushf
add
add
popa
aas
mov
cltd
ret
movsb
add
int3
adc
and
testl
adc
pop
and
mov
mov
pusha
mov
mov
ss
mov
push
lods
mov
jne
and
add
mov
add
das
clc
lods
fs
subl
push
and
popl
inc
loopne
out
pusha
pusha
pop
mov
push
stos
inc
jno
cld
call
pusha
and
pop
jne
sarl
xchg
cli
fwait
pop
shll
sub
inc
ret
mov
add
pusha
add
es
pusha
inc
out
xor
inc
loopne
add
jb
pushf
in
rcrb
icebp
jne
push
movsb
mov
push
xchg
push
jmp
pop
sarb
lcall
xlat
jb
jp
lds
jmp
fdivr
sbb
movsb
rol
lods
add
dec
aaa
arpl
ds
mov
and
pop
mov
fnsave
adc
lods
pusha
inc
cltd
aas
jecxz
jle
out
dec
mov
or
inc
test
test
ss
mov
pusha
pushf
out
sub
mov
add
cmpsb
addb
sahf
mov
scas
pusha
inc
and
rcl
outsb
sub
or
es
rorb
addb
imul
out
inc
ds
cmp
in
xor
clc
xor
pop
dec
mov
andb
pusha
add
push
add
outsl
icebp
aas
repnz
push
mov
loopne
push
and
mov
sub
adc
cwtl
mov
lcall
sbb
dec
mov
inc
clc
rolb
sbb
rclb
fsubp
pop
lods
jle
adc
aam
and
popf
popa
add
cmp
mov
pusha
shrb
subl
add
mov
add
bound
rcrb
xrelease
cmc
out
mov
mov
mov
pop
mov
mov
addb
add
loopne
sbb
mov
sarb
scas
lret
or
mov
jge
loopne
stos
loopne
dec
or
pop
cmp
shlb
test
pusha
lret
test
mov
inc
xor
loopne
pmulhuw
jg
push
inc
fldl2t
pop
fnsave
jl
xor
inc
xor
imul
inc
loope
pop
xchg
jnp
cmp
scas
or
cmp
shrl
outsb
cmc
sub
outsl
inc
imul
ret
stc
adc
mov
xorb
out
je
and
lcall
fwait
hlt
inc
enter
pushf
pop
mov
inc
arpl
fs
mov
std
pop
fwait
je
jbe
mov
push
and
inc
cs
shlb
outsl
jnp
loopne
jmp
call
or
rorb
inc
and
jle
sbb
popa
imul
sub
mov
notb
xor
and
shl
fiadds
or
push
adc
lock
adc
sbb
and
rcl
mov
xchg
gs
mov
pop
aas
flds
pop
inc
cmc
xlat
sbb
dec
xchg
jae
rcrl
out
mov
sub
mov
sbb
pop
pop
mov
cmp
or
loopne
dec
push
out
out
dec
pop
add
andb
cmpsb
addb
sbb
or
sar
popa
jp
sbb
movsb
pusha
inc
sub
popf
pop
and
loopne
scas
add
mov
in
call
push
cltd
inc
int
jno
iret
icebp
pop
ficoml
je
inc
and
add
push
loopne
scas
shlb
push
mov
push
pushf
cwtl
push
xchg
jp
mov
sar
loopne
push
adc
pusha
cmp
mov
jnp
iret
add
sbb
mov
or
fisubl
mov
repnz
pop
out
adc
psubw
mov
adc
rcrb
and
and
fisttpl
dec
fiadds
inc
loopne
mov
jmp
into
push
xor
ljmp
cmp
and
mov
or
std
rcrl
lds
dec
jb
in
aad
int3
icebp
lahf
jae
xor
sti
mov
daa
addb
xchg
test
rclb
das
ret
add
mov
mov
sub
addb
push
lahf
outsl
or
fsts
pusha
add
mov
cwtl
call
sar
xlat
loopne
scas
inc
add
aas
cmc
push
test
adcb
andb
mov
xor
or
mov
ffreep
dec
sbb
leave
xor
add
out
scas
and
mov
mov
push
fisubrl
stc
out
jne
std
lds
mov
mov
jecxz
or
cmp
ja
inc
inc
les
jmp
divl
adc
jle
negl
cmp
push
and
lock
cltd
and
mov
xchg
xor
scas
rolb
iret
int3
enter
loopne
push
out
imulb
sti
stos
loopne
inc
dec
popf
nop
lock
mov
outsb
jg
rcll
sahf
and
push
jg
and
add
jge
sub
mov
xor
sub
shrb
and
ss
rolb
jp
movsb
add
cli
or
mov
loopne
cltd
and
int
adc
add
inc
out
imul
pusha
add
xchg
pusha
xlat
xor
fists
in
push
loopne
pop
inc
das
pop
cmp
cmp
sub
inc
aam
lea
scas
and
and
insb
and
inc
pop
push
add
pusha
cmpsl
fdivrs
and
sub
loopne
mov
pop
adc
sarl
cmp
int3
ljmp
cmp
sbb
aaa
push
ds
xor
frstor
inc
pusha
pop
cmpsl
sub
imul
push
mov
test
fildl
mov
pusha
xchg
fdivrl
cmp
sbb
add
sub
and
pusha
aam
and
mov
push
popf
pop
mov
psubusw
xor
dec
mov
push
inc
mov
xchg
ljmp
cmp
inc
in
rol
mov
add
adc
mov
mov
lret
cmp
clc
inc
mov
lods
loopne
pop
mov
iret
add
rclb
dec
pop
lcall
add
add
mov
sub
pop
cltd
ja
add
add
mov
lret
insb
lods
addr16
jmp
inc
and
adcb
add
movsl
dec
int3
dec
push
addr16
iret
shufps
sub
and
jl
cmp
das
mov
inc
stos
cmp
pop
inc
lods
call
xor
jns
push
and
ret
lahf
pushf
popa
xor
jae
mov
je
loopne
rol
lret
shrb
add
inc
and
mov
imul
orb
push
xchg
add
loopne
sub
push
jae
inc
ret
mov
push
repnz
and
mov
add
adc
andb
sbb
gs
lahf
inc
jbe
jle
cs
xchg
repz
and
sub
mov
or
pusha
not
fimull
jl
jae
or
mov
shlb
fsts
jb
push
ja
pop
outsb
stc
mov
and
add
add
push
pushf
jp
arpl
mov
mov
in
sbb
test
subb
push
pop
iret
mov
pop
fdivl
pop
les
cmpsl
adc
sub
fwait
adcl
jb
xor
insl
in
fwait
aaa
push
inc
shl
add
addb
mov
icebp
idivl
cmpsl
inc
or
cmp
inc
xchg
xor
lea
mov
in
adc
cwtl
andb
mov
and
leave
imul
push
and
jp
outsb
cmpsl
mov
andb
rcrb
addr16
inc
loopne
cmp
in
xor
and
cmpsb
add
aas
imul
sbbb
adc
pop
xor
cli
or
adc
xchg
xchg
add
in
lods
insl
out
and
mov
ret
push
ss
inc
or
mov
sbb
andb
cmp
int3
jo
jp
mov
flds
push
sbb
leave
sub
and
dec
bound
xchg
shlb
gs
cwtl
adc
adc
mov
and
out
xchg
add
imul
cld
je
inc
js
push
rolb
push
push
xchg
in
jne
inc
shl
sub
loopne
and
testl
pop
add
pop
pop
in
out
adc
out
pusha
mov
stos
mov
jle
mov
loopne
push
and
loopne
test
pusha
inc
into
imul
jg
cmpsb
shlb
les
andb
fsubp
or
aas
popa
ret
inc
aas
inc
icebp
cmp
ret
aad
aad
xor
icebp
add
jp
sub
ret
repnz
dec
scas
addb
sub
inc
sbb
out
popf
cmp
inc
add
sub
inc
jne
cmp
push
mov
xchg
idivl
cmp
aaa
mov
xorl
inc
iret
movsl
lock
mov
andb
repnz
jle
cmc
or
inc
mov
stos
push
inc
xchg
xor
inc
outsl
lods
add
add
add
sub
shr
mov
add
jno
gs
jbe
sarb
pop
imul
rcrb
cli
lret
mov
pusha
sub
add
adcl
pop
inc
lods
stos
adc
cmc
sbb
and
rcl
fimull
fs
icebp
mov
jb
ret
loope
lods
fisttps
ljmp
enter
jno
add
xchg
add
sbbb
add
stc
lret
shlb
mov
pushf
lret
scas
pusha
add
dec
sub
and
mov
sbb
inc
xorb
and
add
pusha
or
add
adc
sub
shlb
sub
xor
sbb
mov
mov
divl
shll
pusha
pusha
mov
leave
cmp
fists
xor
sbb
in
loopne
sub
loopne
jg
xor
add
andb
and
inc
inc
jae
pusha
mulb
lods
rolb
cmp
adc
jle
inc
inc
sahf
in
loope
mov
in
std
xor
jp
aaa
iret
testl
push
rorb
sbb
cmp
mov
pop
jecxz
data16
lret
push
scas
and
iret
push
mov
inc
mov
ja
test
mull
xor
pop
into
xor
cli
dec
mov
or
pushf
testb
add
sub
mov
sbb
sub
add
bswap
shl
loopne
and
shlb
das
add
inc
test
inc
mov
loopne
mov
shl
out
jle
or
or
push
sub
loopne
fs
mov
jge
ja
repz
cmpsb
add
shlb
shlb
or
inc
lea
shlb
mov
and
scas
inc
mov
cmp
outsb
dec
nop
mov
mov
or
pusha
fsubl
add
rcrl
sarb
inc
rorb
pop
pop
das
mov
lret
add
cld
jmp
jb
leave
pop
inc
jl
sub
sbb
add
xor
test
enter
lds
std
in
push
xchg
mov
loopnew
mov
fsincos
addl
shlb
and
lea
add
add
cmp
xchg
lods
loopne
pop
xchg
mov
rcrb
psubsb
mov
mov
fstpt
adc
in
jmp
push
cmpsb
loopne
xchg
lea
loopne
lods
add
or
ror
jp
pop
mov
fchs
and
loopne
cmpsl
dec
jl
or
inc
xlat
jge
sahf
adc
sub
out
loopne
jno
stos
rolb
cmp
xchg
fwait
int3
xchg
test
dec
test
pop
and
add
inc
dec
adc
out
cmc
sti
sub
xor
addl
shll
popf
adc
retw
leave
push
bound
pusha
out
or
dec
shll
add
pop
sbb
pusha
loopne
xchg
mov
andb
ss
int3
lods
shlb
sub
aam
jmp
out
and
arpl
xchg
add
arpl
andb
sub
pusha
mov
push
cmp
pop
imul
rolb
sarb
popf
ljmp
lret
inc
push
mov
lock
mov
add
test
and
or
loopne
inc
addb
inc
jb
aad
dec
jl
inc
sub
shlb
push
jb
adc
xchg
clc
dec
in
inc
and
add
loopne
les
inc
mov
cmpsb
loopne
cmc
rorl
in
push
add
and
pusha
xorb
mov
loop
pop
cmp
popf
fiadds
jne
jmp
pusha
add
loope
mov
sbb
or
mov
jp
test
mov
jecxz
aam
pop
int
std
test
add
add
dec
cmp
sub
ret
inc
lds
pusha
inc
daa
je
fsubl
jnp
pusha
mov
fs
stos
loope
jl
push
shlb
xchg
imulb
push
jno
mov
in
in
leave
cld
stos
mov
leave
mov
pushf
jecxz
or
loopne
in
fstps
sbb
orl
test
rcrb
adcb
xlat
inc
les
lds
pushf
es
add
sub
inc
scas
mov
mov
cltd
popa
and
mulb
into
cltd
es
shlb
lret
out
jae
xchg
sbb
shlb
xchg
mov
pop
jnp
out
sbb
mov
inc
sbb
pusha
inc
insb
jle
inc
enter
inc
mov
stos
pop
xchg
mov
clc
into
cmc
inc
sahf
out
lods
clc
lret
push
shl
aaa
fisubrl
ret
out
or
jae
add
add
hlt
dec
sbb
jbe
repz
fimull
cmp
adc
mov
fmull
jb
jle
rclb
test
or
inc
xchg
outsl
push
dec
mov
repnz
push
jecxz
jo
addb
ljmp
adc
xchg
mov
fwait
enter
outsb
mov
mov
pusha
pusha
mov
jl
xchg
mov
rcl
mov
adc
rcrl
sbbb
adc
daa
mov
jge
addr16
xor
and
add
or
dec
adc
popa
test
pop
popa
dec
data16
push
push
rolb
or
pusha
pop
andl
jle
push
jbe
sti
fs
sub
add
aad
addb
mov
pop
and
and
shl
xor
and
loopne
or
inc
or
arpl
add
fs
aad
mov
inc
lea
roll
mov
xor
mov
out
add
nop
mov
and
out
lret
mov
inc
xor
pusha
inc
cli
sub
inc
subb
lcall
dec
fadd
mov
and
and
push
inc
mov
sub
je
xchg
out
mov
cmp
iret
mov
andb
and
pusha
inc
dec
jl
clc
pop
fs
push
jae
fwait
sbb
xchg
int3
mov
and
add
pusha
mov
mov
inc
xor
jno
test
pusha
pop
mull
jns
loopne
into
inc
stos
add
std
add
mov
or
loopne
mov
iret
jnp
inc
sar
and
inc
jl
shlb
cmp
add
cmp
jle
arpl
jge
or
decl
arpl
test
loopne
mov
mov
add
push
inc
jp
setg
mov
lods
add
rcrb
add
inc
enter
fwait
and
cli
push
push
mov
push
adc
ret
xchg
or
inc
dec
cmp
andb
andb
jmp
rcrl
sarb
and
mov
insb
js
roll
in
out
mov
add
push
sub
nop
pop
inc
sub
inc
and
loopne
sub
sbb
mov
cmp
mov
adc
add
pusha
gs
xor
mov
pop
popf
mov
jg
mov
add
mov
and
xchg
das
repnz
pushf
addb
sbb
loopne
pop
cmp
daa
inc
xchg
xchg
push
fadds
sbb
pop
sub
addb
pop
dec
fnstenv
or
add
and
and
inc
sarb
pusha
adc
dec
xchg
andb
mov
cld
outsl
imul
and
jb
or
and
xor
fidivl
rcrb
hlt
jmp
repz
dec
out
xchg
add
mov
addr16
into
xor
add
jle
cmp
add
rolb
adc
inc
clc
sbb
mov
inc
fcmovu
loope
loopne
lret
addb
lock
cs
inc
dec
aad
lahf
ja
andb
cmpsb
and
push
pusha
inc
mov
rclb
dec
xlat
fiaddl
icebp
xchg
mov
shl
in
shl
ret
pop
lret
jge
push
in
mov
and
test
or
scas
mov
mov
push
and
pop
adc
addr16
enter
add
xor
jns
pop
aaa
outsl
ja
and
mov
addb
xor
ficomps
sahf
sub
push
mov
add
add
inc
dec
lahf
fs
or
add
loopne
sub
mov
cmp
lea
inc
mov
or
or
ficoms
jnp
mov
jbe
add
ja
jo
icebp
fstpl
inc
decl
rolb
mov
push
rcl
mov
loopne
cltd
xor
jg
rolb
sahf
loopne
xchg
add
in
loopne,pn
jmp
outsb
sti
push
mov
rcll
in
mov
xchg
dec
mov
cmp
jmp
je
mov
notb
cmp
push
inc
add
xchg
xor
cwtl
xchg
or
nop
push
jns
andb
js
mov
and
rcrb
loopne
mov
sahf
fdivs
rolb
jae
and
into
rorb
push
mov
es
jno
rol
pusha
dec
mov
cltd
repz
pusha
rorb
mov
pop
scas
lock
lds
loope
sub
and
jo
jbe
add
add
push
pusha
sbb
add
pusha
add
pop
adc
dec
mov
xchg
push
push
jb
pusha
mov
xor
leave
mov
rcrb
sbb
mov
ljmp
leave
sahf
test
loopne
mov
add
les
mov
outsl
push
add
loopne
in
push
inc
test
or
pop
shlb
push
xchg
xchg
test
inc
xchg
clc
adc
add
or
in
xchg
and
les
loopne
jle
or
out
frstor
sar
test
add
add
pop
hlt
and
and
bts
enter
ss
pusha
cwtl
loope
jecxz
mov
adc
inc
nop
xchg
or
add
and
mov
enter
pop
rorb
pusha
mov
and
and
and
pop
adc
clc
rclb
jmp
js
lds
imull
push
push
mov
mov
inc
int
push
add
inc
push
jmp
inc
iret
test
pusha
mov
out
inc
xchg
les
pusha
orb
fimull
mov
rcrb
lahf
dec
mov
pop
repz
mov
xchg
add
sub
cmpsb
inc
sarb
and
insb
sbb
sbbb
sub
adc
dec
mov
loopne
js
lds
out
insb
jo
pop
xor
cmc
jl
stos
addb
repnz
mov
xor
cltd
jae
inc
loopne
pop
jo
lret
add
push
inc
xchg
inc
sbb
mov
sbb
and
push
rcll
cld
xchg
movsl
mov
inc
mov
aam
add
pop
aam
xchg
popf
int
data16
int3
insl
mov
mov
shll
enter
or
pusha
mov
daa
mov
pop
cmpsl
and
movsb
rolb
icebp
sub
inc
int3
and
loopne
add
sti
xchg
xor
add
xchg
dec
test
mov
test
and
mov
push
inc
mov
push
and
mov
pop
mov
inc
push
cmp
adc
lods
mov
add
mov
test
test
cmpsb
add
in
pop
mov
jle
mov
cmp
xchg
stos
cmp
in
push
out
adc
mov
fbld
jl
sub
sbb
push
and
rclb
pusha
repz
into
and
rcrb
leave
shlb
iret
mov
mov
movsl
fsubrs
mov
push
or
add
cmp
shlb
ret
and
mov
jne
out
jp
clc
lods
sub
subb
push
addb
lods
aam
lea
shlw
sub
and
fldl
xlat
cmpsl
test
loopne
bound
out
enter
add
leave
sti
mov
hlt
xor
scas
dec
mov
ret
imul
rol
daa
test
ss
mov
add
pushf
jg
negl
dec
in
loop
xor
and
jecxz
outsl
pusha
xchg
sub
jg
xor
sub
pop
stos
lea
lcall
clc
and
in
mov
push
mov
loop
bnd
loopne
xchg
int3
lds
pusha
jle
shl
adc
xor
add
cmp
stc
push
adc
out
test
shlb
push
pusha
rolb
and
mov
inc
orb
out
xorl
idivb
cmpsl
daa
add
and
pop
mov
rolb
sbb
pusha
inc
jne
sarl
popf
mov
pop
ds
add
add
or
aam
inc
lods
pusha
loopne
adc
or
and
mov
lcall
sub
mov
rcrb
andb
inc
inc
test
pusha
je
fdivl
mov
shl
pop
iret
or
inc
adc
xchg
testl
out
sub
icebp
rorl
and
mov
mov
loop
mov
pop
inc
jecxz
loopne
xor
mov
lahf
aaa
daa
jnp
jne
lcall
and
cltd
subl
jecxz
dec
lods
or
jmp
lahf
fs
add
mov
loopne
addr16
xor
and
sub
inc
imul
push
fcom
ds
imulb
loopne
push
movsb
pusha
mov
stos
and
jae
sub
pusha
shrb
mov
loopne
jecxz
or
mov
in
enter
mov
mov
xchg
fmull
pusha
popl
push
add
loopne
jecxz
mov
insb
jns
ret
cmp
into
scas
pusha
sub
jge
or
mov
adc
xor
pop
sbb
xorb
test
sti
lods
pusha
loopne
adc
ss
insb
and
mov
clc
sbb
loopne
xchg
cmp
mov
mov
push
and
and
loop
pop
xchg
lcall
lret
mov
lahf
roll
and
loopne
fsts
adc
outsl
mov
sub
and
dec
xor
fs
mov
push
movsb
andb
add
pusha
and
cmp
das
xchg
out
cld
cwtl
imul
push
add
sbb
adc
les
mov
je
xlat
hlt
inc
loope
sbb
inc
add
inc
in
aad
mov
add
cld
rcl
stos
and
jno
icebp
outsl
pop
cmpsl
ss
cmc
mov
lfs
roll
loop
mov
inc
arpl
test
pusha
shlb
jo
xchg
dec
les
lods
loopne
fstps
in
inc
xchg
cmp
test
sub
push
incb
and
outsb
jecxz
jg
aas
and
adc
push
fs
mov
and
inc
or
sub
std
add
subb
shlb
das
xchg
and
push
mov
mov
aad
xchg
test
loop
rorb
andb
mov
imul
leave
outsb
mov
loopne
nop
into
cltd
mov
mov
and
or
jp
movsl
xchg
lea
je
repz
jo
push
hlt
mov
pusha
xlat
pop
in
xchg
cmp
clc
mov
movsb
pusha
shr
pop
xor
cmpsl
lcall
popa
test
sahf
add
mov
mov
push
pusha
pusha
push
and
orb
add
xchg
sbb
test
stos
mov
lods
loopne
dec
and
adc
cmpl
inc
mov
mov
stos
andb
rcr
clc
in
or
and
mov
mov
cltd
lret
loop
sub
or
push
aam
cmp
inc
dec
lret
pop
or
dec
push
test
lret
addr16
mov
and
loopne
xor
sahf
sahf
fildll
mov
push
and
and
mov
scas
addb
in
sub
push
out
pop
ja
and
shrb
repnz
lret
pop
popf
mov
lods
inc
mov
or
mov
dec
xor
in
es
sti
push
loope
arpl
imul
imull
push
mov
pusha
add
loopne
and
pusha
add
jae
cmp
pop
push
cmp
loopne
cmp
scas
and
arpl
loopne
jmp
test
add
sbb
lock
sub
adc
mov
jg
iret
pop
bound
filds
pusha
mov
andb
js
inc
add
mov
cmp
xchg
scas
pusha
mov
jbe
andb
mov
sbb
mov
xchg
test
xchg
shrb
inc
mov
fstl
popa
rcrb
sbb
shrb
mov
pop
shll
pop
push
imul
repz
mov
loopne
loope
pusha
pusha
loopne
pop
jle
xchg
lods
and
or
loopne
arpl
mov
mov
inc
inc
jle
pusha
loopne
loopne
dec
ss
add
subl
xor
pusha
shlb
and
mov
pop
mov
add
orb
or
cmc
movsl
dec
fcoml
mov
hlt
jno
jl
or
rorb
in
pop
cli
and
fildll
ret
add
mov
cwtl
xor
pop
push
add
rclb
mov
sbb
inc
repnz
fidivrl
insb
sar
jae
aaa
in
inc
icebp
repnz
and
inc
inc
js
mov
pusha
maxps
fnstsw
mov
mov
xchg
fidivrs
jge
std
popa
add
movsl
mov
inc
push
and
sub
stos
fiadds
pusha
loopne
xchg
idivl
addb
inc
pusha
rorl
lods
xor
cmp
je
loopne
jge
inc
and
add
rcrb
dec
pusha
cmp
stos
shl
mov
ret
leave
mov
in
fnstcw
enter
mov
pusha
mov
out
mov
loopne
adc
sbb
and
and
pusha
lds
pop
push
jno
loopne
mov
addb
dec
faddl
test
jbe
leave
jae
inc
enter
sbb
add
push
daa
inc
pop
dec
sbb
and
sub
and
sub
mov
inc
or
rcrb
rorl
inc
in
jns
dec
adc
sub
and
mov
sbb
mov
add
and
mov
and
shlb
jae
addr16
adc
fcompl
jae
push
nop
in
and
daa
addr16
fs
xor
jl
add
int
sub
loopne
cmp
mov
loope
sbb
jno
add
and
push
loope
cmp
fcmove
inc
cmpsl
pop
xchg
lret
jns
pop
push
cmp
inc
rolb
rclb
xchg
dec
rcrl
ljmp
and
nop
pop
sbb
pusha
rorb
and
mov
int3
jae
daa
lret
mov
fadds
mov
addb
push
jae
inc
shll
icebp
gs
cmp
js
fwait
sub
loope
mov
loopne
mov
add
sbb
adc
xchg
mov
mov
push
pop
pop
push
adc
inc
shl
addl
shl
notl
add
push
push
jb
dec
das
shlb
add
outsb
js
mov
add
lock
mov
jle
mov
push
and
popa
lea
pusha
xor
in
out
dec
lods
and
inc
addb
aad
add
loop
add
fwait
fwait
jbe
pop
inc
cmpsb
pusha
loopne
outsb
ljmp
xchg
add
inc
sti
cmpsl
fwait
aad
loop
sahf
push
add
add
andb
add
jbe
mov
jp
addb
std
popa
dec
pop
sbb
adc
daa
and
adc
jns
push
mov
xor
mov
pusha
fldcw
or
rclb
sub
sub
mov
out
fbstp
xchg
das
les
scas
pusha
shlb
mov
sub
mov
dec
lret
mov
ss
pop
mov
sub
aas
cmpsl
repnz
cmp
push
shlb
inc
jp
repz
pop
ret
sub
jmp
sbb
pusha
loopne
fiaddl
sub
and
xlat
push
cmc
lock
loopne
mov
mov
and
mov
rcrb
repnz
fistps
and
mov
out
cmp
mov
es
push
pop
mov
clc
rcrb
and
add
mov
clc
jb
and
mov
mov
sub
pushf
daa
jns
rcll
and
fsubrs
fstl
lds
jbe
aas
fbstp
test
add
jno
xchg
xor
addb
shlb
idiv
jmp
aaa
jle
or
rorb
jecxz
sbb
sbb
dec
lcall
xor
inc
lock
jno
rcl
push
add
stos
mov
ds
mov
movsb
add
test
mov
mov
arpl
adc
out
and
je
popf
enter
mov
cmp
inc
mov
aam
outsl
inc
push
fidivl
clc
sbb
fnstsw
fdivr
into
pop
sbbl
fwait
jmp
mov
outsb
orl
sbb
mov
loopne
rolb
mov
imul
negb
out
shlb
sahf
pop
sub
stos
pusha
inc
leave
fisubrl
shl
pop
outsl
mov
mov
inc
mov
inc
add
jl
mov
arpl
xchg
daa
rorl
and
mov
and
fstpl
pop
stos
jnp
jge
mov
cltd
pop
jb
es
and
and
xchg
inc
insb
xor
mov
fsubrs
add
orb
loopne
mov
or
inc
pusha
movsl
adc
loopne
push
pop
jo
arpl
loop
into
in
in
push
pusha
add
sub
add
loope
inc
loopne
clc
push
pop
fwait
push
fwait
popa
mov
jle
jp
xlat
cld
jg
shlb
aam
test
inc
enter
psrlq
add
mov
insb
and
mov
out
or
imul
adc
ljmp
rol
push
pusha
mov
jae
cmp
and
scas
add
lock
pop
test
rcr
cs
ret
pop
xlat
nop
sbb
mov
xor
dec
push
fwait
test
jge
mov
cmp
sbb
pop
xor
fcoml
call
into
sahf
imul
icebp
jg
movsb
add
test
add
testb
mov
or
adcb
jmp
or
jae
lret
fcoms
in
insl
mov
sti
mov
adc
movsb
loopne
jl
mov
and
ret
loope
aas
push
iret
std
outsl
imul
jbe
fucom
mov
loopne
add
or
das
int
mov
mov
pop
aas
incb
push
pusha
loopne
mov
pusha
sti
adc
scas
adcl
xchg
mov
xor
jnp
addb
addl
rclb
push
insb
and
cmpsl
sub
shlb
add
adc
and
and
mov
pusha
inc
inc
push
inc
rorb
and
test
add
jae
lock
mov
pop
jmp
shl
lea
shl
inc
orb
hlt
sub
push
data16
jmp
inc
sbb
xorl
clc
pop
mov
repnz
bound
sub
loopne
cmp
clc
jo
pusha
mov
shrb
and
int3
adc
or
add
jne
and
add
lds
jb
inc
mov
push
mov
jecxz
push
inc
inc
inc
push
imul
jmp
inc
or
pusha
enter
hlt
cmp
pop
mov
inc
mov
jne
loopne
pop
mov
xchg
pop
mov
in
fimuls
inc
add
fidivl
mov
repz
cmc
sub
or
pusha
sub
pop
cltd
fstpt
adc
and
add
fistl
arpl
fcom
std
xchg
lods
inc
mov
orb
add
stc
push
aaa
mov
adc
add
mov
add
inc
rclb
inc
add
loope
push
mov
mov
addb
and
aad
negb
insb
fs
sub
addb
cwtl
jl
scas
shlb
push
xchg
scas
mov
dec
imul
sarl
imul
shrb
mov
std
std
rcrb
add
and
stos
shlb
mov
add
mov
in
js
push
ret
fnstcw
jl
jecxz
inc
mov
mov
mov
mov
outsl
lahf
pusha
shrb
in
add
shrb
mov
xchg
or
sub
pusha
test
loopne
mov
or
leave
stc
xchg
and
ds
xor
or
scas
add
xor
sahf
addb
cmp
stc
dec
add
pusha
jo
mov
add
pusha
xor
cmp
mov
rclb
adc
and
and
call
dec
pushf
int
mov
adc
push
rcr
or
jecxz
fidivrs
std
lcall
push
and
loope
orl
lcall
sbbb
push
mov
and
push
ds
rorb
mov
into
adc
call
cmp
adc
shr
mov
cmp
mov
jbe
incb
loopne
mov
xlat
jl
mov
add
movsb
and
inc
pop
shll
aas
dec
cmp
or
and
sub
xorb
dec
popa
fsubrl
andb
mov
cmp
jge
arpl
sub
rcrb
jo
xchg
jp
xchg
loop
stos
pusha
int
cmpsb
add
or
shlb
mov
mov
push
andb
sub
out
in
loopne
lcall
loopne
lods
aas
adc
test
and
ror
popa
add
pusha
mov
push
bound
movsb
pusha
inc
fisubrl
xchg
aas
repz
sahf
sahf
negb
subl
sub
inc
rolb
push
sbb
mov
xchg
mov
add
inc
fcoml
addb
into
pusha
stc
xchg
inc
cmp
pop
mov
xchg
sahf
push
pusha
mov
push
inc
mov
sub
xorb
stos
mov
scas
cltd
push
jecxz
xor
jo
cmp
mov
pusha
daa
scas
jb
xchg
repnz
mov
inc
mov
adc
sahf
gs
into
add
pusha
repnz
mov
xchg
mov
mov
xor
pusha
inc
inc
popa
jg
adc
lea
or
and
test
mov
and
xchg
clc
into
lds
and
push
int
div
es
and
jl
mov
cli
fwait
sub
fisttpl
sbb
lahf
or
mull
and
xor
and
sub
loopne
mov
andb
inc
inc
sbb
xchg
push
outsb
lret
or
inc
out
sbb
add
addb
mov
mov
hlt
or
sub
pusha
fbld
xchg
popa
sarl
movsb
and
or
mov
andb
adc
xlat
jo
pop
pop
jne
inc
rol
mov
pusha
cmp
push
lcall
aad
or
jge
inc
mov
sub
loopne
out
push
cltd
pop
outsb
or
and
cmpsb
rolb
hlt
mov
sbb
popf
shll
negl
fldcw
loop
push
push
sbb
sub
loopne
inc
pusha
push
icebp
inc
mov
ud1
jno
mov
sbb
ds
stos
loopne
jns
jp
xchg
loopne
and
andb
and
lds
inc
lods
add
inc
rclb
add
inc
mov
sub
cmp
aad
jno
testb
std
pop
mov
rolb
addb
das
pop
loopne
sub
add
jecxz
xchg
mov
into
push
inc
add
sub
mov
mov
lea
push
or
hlt
mov
mov
lcall
add
adc
shlb
mov
iret
cmpl
iret
sbb
fdivs
mov
cmp
mov
mov
mov
add
es
insb
inc
and
mov
push
adc
rcrl
pop
cmp
rol
add
mov
inc
mov
insb
test
and
or
and
cmpsl
dec
lcall
add
push
dec
das
jbe
push
push
repnz
xorb
loopne
loopne
pusha
mov
xchg
lret
test
inc
and
leave
sbb
rolb
pusha
outsl
test
mov
pop
dec
movsb
mov
std
mov
icebp
repz
jmp
dec
push
add
push
adc
jmp
adc
push
sarb
insl
data16
mov
pusha
sarb
and
inc
mov
jo
lods
push
inc
jne
mov
lock
push
mov
add
mov
sub
jg
cmp
adc
shrb
mov
cmc
lds
sbb
jo
mov
out
andb
mov
loop
push
and
shlb
loop
negb
mov
fwait
jg
sahf
and
ja
mov
dec
rolb
shl
sub
mov
cmp
push
das
movsb
pusha
mov
int3
push
pusha
pop
push
insb
dec
or
sbb
popf
shlb
pop
lea
jo
or
inc
mov
iret
xchg
add
cmpb
loope
mov
sub
shlb
enter
inc
insb
clts
andb
popa
loop
in
nop
xlat
aam
pop
shrb
pusha
pop
ret
or
mov
fisubrs
aam
mov
bound
imul
sti
popf
xchg
ficomps
iret
clc
and
jecxz
loopne
out
jbe
fidivs
sti
dec
xchg
lock
mov
call
push
lock
daa
sti
add
add
mov
jbe
push
adc
cmp
dec
hlt
ja
ds
aam
pop
pop
dec
lret
lock
out
sar
cwtl
test
mul
xor
ret
addl
loopne
and
jge
lcall
add
stc
inc
mov
jo,pt
jle
dec
adc
loop
lahf
sbb
cmpsl
push
cld
jecxz
mov
jnp
sbb
mov
loopne
and
test
pusha
out
movsl
data16
test
iret
nop
mov
dec
mov
or
or
jae
and
ds
lds
bound
mov
dec
clc
push
int3
sbb
andb
xchg
ss
loopne
push
mov
andb
and
mov
mov
je
lret
adc
pusha
add
repnz
pop
fsubrp
xchg
cmp
mov
and
gs
lret
enter
lret
xor
mov
dec
sub
mov
leave
lods
rcrl
xor
or
inc
push
insl
mov
xchg
shlb
dec
lahf
jecxz
pop
out
mov
inc
sub
loop
loopne
pushf
das
test
sub
orb
in
cmpsl
cltd
push
mov
add
loopne
roll
add
mov
cli
push
xor
pop
jecxz,pt
inc
adc
testb
adc
xor
enter
pusha
xchg
aaa
mov
sbb
xchg
mov
data16
mov
shlb
pop
inc
inc
in
inc
push
inc
pusha
ret
pusha
bound
xchg
sub
shlb
inc
pop
lea
adc
ss
out
ljmp
test
dec
cmp
mov
adc
cmp
jne
and
mov
aad
enter
mov
jbe
jmp
sbb
xor
inc
and
push
jecxz
push
add
outsb
add
mov
xlat
mov
cmc
cmp
rolb
aad
jmp
scas
loopne
sub
sub
pop
out
or
and
dec
pusha
mov
add
loopne
pop
int
xchg
in
loopne,pn
push
sbb
cli
in
lea
add
nop
pop
mov
push
idivl
inc
ficoms
dec
jmp
sbb
subb
sahf
add
pusha
lock
cmp
cmp
mov
push
xor
or
xor
out
pusha
jno
in
push
rorb
push
dec
fs
jbe
dec
addb
rorb
inc
cli
loopne
mov
and
int3
lcall
push
adc
movsb
rol
js
test
sub
jge
gs
psubusb
inc
inc
dec
jne
bound
out
pusha
push
add
movsb
and
or
das
mov
lret
dec
lahf
fxsave
inc
or
inc
pop
push
iret
hlt
fcomps
aad
rcll
xchg
loop
es
add
mov
addb
bound
push
inc
jmp
pop
gs
xchg
add
add
ret
test
addb
push
lock
pop
dec
or
mov
movsb
inc
orb
add
andb
mov
and
xor
pusha
andb
jbe
lods
loopne
mov
lods
ja
cli
dec
mov
inc
cs
and
insl
push
ds
jae
jno
push
adc
mov
mov
addr16
push
xchg
in
fnstsw
pusha
pusha
inc
cmp
pop
or
inc
lcall
push
inc
sub
inc
jo
cmp
rol
xchg
lods
loopne
inc
sub
xor
int
add
inc
movsb
shlb
xchg
mov
push
rcrl
rcll
pop
loop
jbe
and
loopne
sub
push
mov
xor
inc
pop
outsb
call
sbb
pusha
push
push
sub
rolb
mov
mov
add
aaa
popa
rorl
inc
lods
fsubr
sub
pop
and
xor
aad
rol
pop
cmp
ja
add
std
cmc
dec
lcall
les
fstl
xor
or
sti
pop
mov
cli
fucomip
dec
or
jge
repnz
icebp
stc
stos
bound
movsb
mov
lds
dec
loopne
push
adc
jnp
xchg
xchg
pop
sub
jb
mov
push
in
adc
fldl
negb
rolb
xchg
jmp
nop
cmp
mov
add
mov
rolb
pop
stos
pusha
mov
sub
push
push
sub
rolb
testl
mov
pusha
inc
pop
cmp
inc
mov
cmc
cli
xchg
jl
add
add
shlb
add
ss
shlb
in
lcall
jne
addb
mov
pop
mov
sub
add
lods
jl
xchg
cwtl
or
and
repnz
sahf
aas
rolb
mov
inc
sub
and
in
data16
orb
inc
leave
fsts
cmp
das
icebp
push
sti
imul
pop
testl
js
shll
pop
mov
test
pusha
mov
mov
fistpll
jge
add
nop
addl
fwait
sub
dec
cltd
adc
lea
nop
dec
in
adc
xchg
dec
aas
jmp
jmp
insb
inc
and
aam
stc
pop
mov
mov
pusha
scas
inc
mov
sbb
push
andb
sub
je
repnz
call
into
popf
jb
andb
dec
and
rolb
loopne
pop
adc
loopne
push
push
mov
sbb
pusha
and
inc
cwtl
add
inc
or
add
loopne
in
push
loopne
jl
pop
aaa
dec
and
add
xchg
xor
add
orl
lret
sbb
das
loopne
inc
data16
pop
xchg
xchg
add
mov
sti
push
cli
andb
stos
inc
mov
mov
pop
cmpsb
and
xlat
jb
or
inc
les
rolb
enter
push
pusha
outsl
jg
and
fstl
enter
and
repz
pusha
push
clc
mull
aam
out
mov
std
imul
fcomp
pushf
sub
out
lcall
dec
jno
push
jnp
aaa
cmc
jmp
xor
dec
out
or
sub
sbb
inc
adc
gs
sub
lcall
inc
int
or
pusha
or
outsb
dec
in
mov
mulb
and
jnp
pop
sbb
std
inc
pop
adc
mov
inc
pop
pop
dec
scas
loopne
adc
cmc
mov
addr16
nop
adc
inc
xchg
jmp
cmpb
leave
into
stos
mov
mov
sub
push
outsb
mov
icebp
mov
stos
pop
or
andb
and
sbb
aam
pusha
sub
add
adc
add
or
dec
dec
sbb
adc
rol
xor
arpl
add
fcomp
sbb
xchg
mov
shlb
lahf
add
cmp
arpl
cmp
mov
mov
add
mov
push
and
jle
loopne
mov
cmc
mov
loop
lods
inc
pusha
sub
pusha
repnz
ja
pop
cld
js
inc
jbe
add
add
dec
pop
sub
add
ror
andb
mov
in
imul
out
lock
fxam
test
rcrb
imul
std
decb
jmp
xor
pusha
int3
inc
scas
shlb
add
jb
sub
inc
mov
add
push
out
inc
cmpsb
and
outsl
out
pop
or
inc
ss
pusha
loopne
loopne
in
pusha
shlb
mov
stos
inc
loopne
cld
sbb
add
dec
fcomps
addb
int3
push
lret
cmpsl
dec
and
inc
jbe
shlb
mov
addb
iret
cmp
jno
pusha
sarb
mov
addl
fcoms
mov
mov
addb
sbb
pusha
pusha
sub
jo
inc
rcrl
sbb
jb
push
fldl
inc
test
jge
lret
add
loopne
fcmovbe
push
inc
jmp
ja
bound
xchg
mov
cwtl
add
loopne
push
pop
mov
mov
aas
jo
xchg
add
in
mov
dec
jno
pop
inc
adc
lret
sbbb
insb
dec
out
fistl
andb
addb
add
dec
pop
out
dec
xor
out
imul
cmp
mov
aas
mov
inc
jmp
xor
cmp
ficoms
jg
into
int
repz
mov
add
negb
movsb
add
subl
push
mov
daa
dec
sub
shlb
pop
add
inc
stos
divl
mov
pusha
popf
mov
adc
insl
test
pusha
hlt
lret
push
rol
xor
je
jmp
dec
in
push
adc
nop
cmpsb
inc
inc
jnp
sub
subb
add
int
loopne
lds
loopne
push
xor
push
add
dec
jno
add
lods
les
popa
les
test
mov
add
pusha
add
inc
int3
dec
mov
and
scas
xor
in
dec
xor
mov
fcmovb
sub
ljmp
sbb
jge
inc
nop
xchg
fisubs
dec
push
cmpsb
loopne
repnz
xchg
mov
inc
sbb
decl
enter
sbb
pop
adc
hlt
sub
jle
in
insl
lret
mov
les
andb
mov
out
lahf
dec
scas
inc
push
xlat
cmc
divl
pusha
or
loopne
iret
dec
lcall
and
loopne
sub
inc
pushf
out
inc
lahf
repnz
leave
fidivs
lcall
loopne
in
out
cmpl
imul
cmp
outsl
mov
in
mov
xlat
inc
pop
pop
adc
pop
push
sbb
mov
xor
mov
xchg
insb
pop
dec
leave
lret
sbb
mov
cld
jp
and
pusha
sub
mov
pop
lods
inc
loopne
adc
incl
inc
inc
dec
lret
stc
xor
or
mov
mov
inc
xor
rcl
rolb
pop
les
cld
or
mov
jo
push
cltd
icebp
push
pusha
inc
mov
andb
sarb
pop
aas
jmp
sahf
imul
test
xchg
scas
jle
das
cwtl
mov
loop
jecxz
push
popf
pop
xor
jp
lahf
sarl
movsl
inc
loopne
ret
pusha
fistl
inc
cli
mov
adc
mov
pop
insl
or
inc
mov
xor
push
call
add
lret
sti
fildl
xor
xchg
and
dec
mov
lahf
fstps
movsb
add
and
pusha
xor
mov
sbb
cmp
das
lea
loopne
xchg
cli
mov
pop
xchg
add
les
xlat
inc
icebp
and
jno
dec
mov
and
sahf
bound
inc
adcl
add
xchg
cmp
rolb
inc
aaa
dec
lds
add
sbb
stc
sarb
sar
addb
pop
mov
sahf
add
shlb
mov
mov
cmp
adc
shlb
fdivrl
ret
rclb
std
xchg
mov
orb
fwait
jle
div
call
loopne
loopne
mov
inc
mov
sub
and
jmp
loope
stos
adc
mov
push
sub
cmp
and
insb
loop
adc
mov
loopne
mov
push
mov
jp
pop
loopne
mov
jbe
mov
popf
aam
add
adc
add
push
mov
fwait
jne
xor
inc
xor
rcrl
or
sbbb
test
add
and
pop
cld
lret
addb
outsl
and
mov
andb
add
dec
mov
cli
das
pop
shl
imul
rol
loopne
mov
add
dec
push
push
pop
pop
jmp
rolb
nop
push
aam
jecxz
iret
dec
and
push
dec
mov
inc
in
fucomi
mov
andb
das
xor
andb
adc
xchg
adc
shrb
push
cmc
mov
loopne
shlb
pop
mov
insl
lea
jge
dec
xchg
movsb
addb
pusha
int3
add
or
shlb
in
xor
stc
or
add
and
push
movlhps
rclb
rol
push
mov
push
lods
dec
in
and
push
enter
shlb
mov
out
or
inc
add
pop
and
rorb
add
sahf
les
mov
pusha
loopne
mov
cmp
jae
les
adc
and
and
inc
add
cmpl
rolb
jne
inc
out
loope
rolb
aad
mov
andb
push
add
mov
mov
mov
loopne
out
loopne
es
pusha
fiadds
addb
push
mov
jne
stc
pop
mov
cmp
xor
push
jecxz
cli
jb
fcmovnb
cmpsl
sarb
mov
inc
daa
fnstsw
or
push
mov
mov
push
icebp
dec
stos
mov
cltd
in
mov
rcrb
mov
and
je
in
sub
pop
fisttpl
out
icebp
les
in
lods
and
xor
scas
sub
loopne
and
lret
shl
push
cltd
push
hlt
aad
repz
pop
hlt
fstpt
imul
cmpb
cmp
js
inc
ror
lds
and
mov
jae
mov
pop
cli
push
fsubl
push
popf
mov
jno
dec
push
push
jmp
sub
shrl
xchg
pop
or
adc
push
jno
aad
scas
push
xor
shr
or
add
inc
inc
dec
pop
jns
mov
add
rcrb
aad
add
push
jmp
loopne
dec
aam
mov
cmpsb
loopne
mov
cmpl
and
push
inc
js
aad
and
loopne
sbb
sbb
das
and
mov
popf
dec
push
fsubrs
xchg
mov
arpl
adc
and
fwait
add
mov
or
lcall
lds
cmp
dec
mov
scas
and
jmp
out
aas
ja
aad
push
xorl
popf
jecxz
mov
pop
pushf
jmp
loopne
fcoml
or
mov
shll
add
mov
adc
lahf
lea
sahf
sbbl
aad
add
and
jecxz
push
xchg
mov
enter
and
mov
inc
sbb
add
push
jecxz
icebp
fmuls
adc
shr
xchg
jmp
and
cltd
mov
cmp
subb
cmp
add
aaa
ljmp
jnp
rolb
pop
and
inc
sbb
nop
sub
ret
adc
dec
aam
mov
cld
lods
add
mov
notl
pop
inc
and
sar
jmp
xlat
sbb
pop
pushf
mov
notl
lret
stos
lahf
enter
std
test
sahf
dec
cld
cmp
adc
xchg
fimuls
add
cwtl
and
scas
pusha
inc
icebp
xchg
cwtl
movsl
pop
and
inc
sub
std
or
loopne
insb
inc
sbb
mov
mov
ja
lcall
repz
pop
lahf
fnstcw
jno
fiaddl
leave
sbb
and
lret
sti
lcall
int3
sub
inc
outsb
movsl
outsl
addr16
sarb
or
loop
mov
inc
addb
add
and
in
enter
ja
inc
add
sarl
sub
or
js
cmp
insb
dec
dec
mov
cmp
and
mov
sub
and
ret
mov
mov
movsl
lods
add
jb
inc
inc
pop
cmp
dec
add
pop
pop
and
or
inc
add
sub
cld
int3
mov
and
jno
mov
xorb
xchg
fnstsw
jo
arpl
jb
neg
pop
fstpl
aaa
addr16
push
mov
ret
and
or
sbb
cmc
ficoms
lods
andb
pusha
sarl
jns
lahf
xchg
add
lahf
pusha
aad
add
in
xchg
int
roll
lea
cmp
jecxz
iret
out
call
add
ret
xor
scas
mov
push
dec
add
pusha
mov
sub
xorb
cwtl
ja
clc
iret
into
xor
mov
dec
fs
clc
mov
shr
add
add
repz
scas
mov
pop
mov
aam
lahf
das
test
pusha
in
cld
mov
and
sbb
jp
xchg
addb
dec
lret
fsubrl
shlb
adc
add
aam
or
and
or
cmpb
mov
jp
pusha
and
xor
shll
insb
push
pop
mov
lea
mov
mov
push
mov
icebp
mov
xor
addb
add
mul
mov
mov
mov
and
pusha
cmp
dec
add
inc
xchg
lahf
mov
push
or
dec
cmc
iret
rorl
mov
pop
scas
loopne
js
sub
pop
imul
inc
jg
stos
inc
add
mov
das
lock
mov
enter
mov
loopne
prefetch
rolb
add
mov
push
andb
je
jns
ljmp
hlt
sub
insl
cmpsb
loopne
inc
icebp
into
leave
fldl
inc
inc
mov
testb
shlb
call
and
out
mov
inc
rolb
and
int
data16
pusha
and
xlat
pushf
icebp
push
inc
pusha
shlb
cmpsb
and
and
loop
mov
aaa
cmp
mov
ja
and
sub
loopne
jae
push
add
outsl
inc
outsl
inc
iret
lahf
xor
and
testb
stos
mov
jg
das
cmp
outsb
cmp
ret
fwait
jae
cmp
and
loop
es
inc
mov
dec
pop
inc
mov
loopne
sbb
sbb
jl
or
aas
or
data16
push
test
pusha
dec
add
out
popf
cmpsl
mov
rcrb
iret
ret
loopne
xchg
or
push
out
pusha
add
cmpsb
add
nop
ret
cmp
xor
lret
movsb
and
icebp
mov
adc
xchg
loop
xor
cmpsb
and
pusha
and
fcmovnb
loop
and
or
addr16
add
shr
addr16
mov
mov
stc
dec
and
loopne
shrl
movsl
mov
jg
xor
xchg
xchg
adc
and
loop
add
cmpb
jo
pushf
dec
cmp
adc
inc
adc
hlt
jl,pt
mov
add
sbbb
cmpsb
inc
and
inc
loopne
mov
loopne
test
and
loopne
adc
and
repz
test
loopne
xor
shlb
jle
xchg
out
and
ret
dec
imul
ret
dec
xchg
sub
loopne
scas
adc
cmpsb
add
imul
cmp
jo
mov
imul
andb
mov
mov
negb
stos
inc
and
movsb
and
or
shlb
loopne
fisubl
sub
pusha
gs
cmp
shlb
xor
mov
pop
dec
clc
cmp
arpl
loope
xchg
andb
scas
hlt
and
add
les
inc
inc
leave
mov
andb
or
rclb
fisttps
loopne
movsl
pop
add
pusha
leave
sub
int
dec
cmpsl
xchg
mov
incb
xchg
js
mov
add
mov
mov
and
pusha
and
rolb
and
cwtl
sub
add
inc
test
jle
pusha
and
enter
in
fidivrs
loop
mov
mov
bound
cmp
push
bnd
lods
fimuls
pusha
add
inc
imul
sbb
mov
push
cmpsb
inc
and
mov
and
jl
loope
ret
test
inc
mov
add
shlb
jl
loopew
push
pop
inc
pop
in
leave
push
roll
and
adc
xor
xorl
addb
add
mov
sti
cli
incl
out
push
stos
xor
add
adc
rclb
mov
ret
add
add
mov
jb
and
xor
stos
inc
test
inc
dec
push
cmpps
inc
and
cmp
inc
imull
push
and
or
cmp
xchg
ja
push
filds
cld
jmp
fwait
arpl
and
je
dec
in
ja
mov
lret
add
or
pusha
test
push
mov
inc
movb
mov
mov
jo
pusha
mov
push
cmpsl
sub
inc
test
lods
sti
in
shrb
cmp
iret
int3
mov
jb
add
addb
loopne
andb
ljmp
repnz
dec
es
js
mov
fldl
addb
pop
into
dec
xor
insb
rolb
mov
lcall
rolb
or
andb
inc
add
mov
and
pop
out
mov
push
fstpl
dec
push
into
pop
gs
shlb
into
imul
sub
add
test
pusha
jle
xchg
js
sahf
jno
outsl
xchg
and
mov
mov
and
aad
dec
pop
pop
add
inc
adc
mov
ret
mov
sub
pusha
mov
and
scas
add
sbb
mov
mov
pusha
push
inc
push
lods
pusha
and
ds
xchg
fcmovnbe
into
mov
scas
les
mov
into
adc
dec
mov
pop
arpl
rep
pop
sbb
inc
aas
dec
insb
bnd
add
ja
jecxz
cmp
adc
pop
mov
fnstenv
test
push
das
and
loopne
pop
divl
and
shl
xchg
scas
mov
leave
mov
xchg
mov
dec
les
shl
fisubrl
test
pop
mov
mov
int
fidivrl
fldcw
inc
sbb
and
test
adc
push
in
out
addb
rcll
push
pop
push
dec
mov
and
add
addb
mov
out
idiv
arpl
mov
mov
mov
and
daa
jmp
add
addr16
or
rorb
loopne
scas
in
movsb
inc
sbbb
vpsrld
int3
xchg
lea
adc
and
adcb
stc
sub
pusha
in
mov
shlb
stc
test
cmpb
cmp
loopne
adc
sbb
or
xor
mov
notb
xchg
sbb
rolb
popa
cmp
jmp
pusha
xorb
xchg
repnz
inc
adc
fstpt
ss
stos
add
ljmp
cltd
rolb
jbe
in
and
imul
pop
sarl
add
inc
loopne
mov
jmp
pop
push
repz
cld
mov
and
into
data16
and
pusha
loopne
int3
ljmp
cwtl
enter
mov
pusha
and
xchg
outsl
mov
jg
in
insb
in
in
and
ja
push
or
add
std
jns
fiadds
mov
pusha
in
push
shll
xor
push
inc
jmp
out
js
jle
imul
mov
mov
mov
pop
lret
or
outsl
sub
shrb
cmpsb
rolb
jmp
push
fstps
and
or
repnz
xchg
outsl
or
mov
jg
cs
shl
out
inc
fdivl
loope
ljmp
xor
inc
pop
dec
ret
push
mov
movsl
sar
adc
or
js
loopne
cwtl
or
pusha
inc
scas
xchg
sahf
xchg
mov
xchg
mov
pusha
movl
add
xor
and
mov
pop
cli
or
and
mov
xor
cmp
sti
jg
sub
loopne
jb
mov
inc
addb
mov
lods
lock
mov
test
lea
fldt
adc
adc
enter
jae
push
or
rolb
and
and
add
and
mov
cwtl
daa
or
gs
pushf
fs
out
inc
testb
call
and
stos
mov
xchg
sbb
loopne
les
lahf
push
jge
popf
imul
cmp
js
insb
pop
lods
mov
inc
or
loopne
out
cwtl
or
and
sub
and
cmp
xor
add
addr16
sahf
mov
shrb
mov
xor
data16
loope
std
adc
xor
pusha
pop
and
inc
mov
out
sub
not
adc
inc
shl
sub
mov
inc
lods
jbe
in
add
xor
test
das
enter
push
sub
shlb
jmp
dec
sbb
fisubrs
shl
loopne
in
fsts
cmp
add
inc
or
dec
pusha
mov
loopne
rcrb
push
inc
mov
mulb
shlb
daa
popf
faddp
scas
add
dec
push
inc
cmpb
mov
push
add
pop
sub
loopne
mov
mov
pushf
and
fsubrp
jge
jno
fmuls
shlb
jbe
idivb
mov
loopne
mov
jnp
and
insb
push
mov
add
aas
and
add
outsb
cmc
add
mov
push
dec
outsl
js
movsb
and
cmp
popf
jbe
push
dec
sti
push
pusha
in
jge
loopne
jp
fdivr
sbb
lock
lret
cmc
test
xor
lcall
in
lcall
add
test
and
loopne
cwtl
scas
addb
push
movsb
add
call
push
inc
push
out
out
call
add
sub
in
das
ja
test
inc
add
xchg
and
fistpl
in
scas
mov
and
imul
andb
lret
test
mov
xor
inc
loope
mov
cld
add
and
loopne
dec
mov
test
loopne
and
stc
orl
mov
add
xchg
inc
pop
or
pop
cmp
loopne
jbe
imul
loopne
stos
inc
rclb
cmpsl
pop
xor
mov
icebp
mov
and
mov
push
fs
pop
lahf
mov
push
xchg
jno
mov
xor
jns
sbb
jne
cmpsl
sub
add
push
ss
lock
inc
jmp
mov
push
xor
roll
dec
fisubrl
sti
adc
xor
pop
lods
loopne
dec
or
and
xchg
sub
mov
xor
cmp
aaa
or
daa
rcl
out
in
scas
and
inc
rcr
mov
jge
mov
add
mov
std
repz
les
and
loopne
jle
test
test
pusha
cmc
test
pusha
dec
out
ret
icebp
rcll
mov
jmp
inc
outsb
dec
and
mov
pop
xor
iret
add
pop
or
loopne
stos
xor
add
mov
imul
mov
bound
inc
lock
push
stos
mov
andb
test
add
xchg
ss
lods
mov
add
sub
push
cmp
add
lea
pop
jg
cs
loopne
stos
loopne
adc
orl
dec
or
and
ret
int3
icebp
adc
movsl
dec
gs
xchg
shlb
pop
add
pusha
out
sti
add
inc
pop
test
push
mov
dec
outsl
add
pop
fucomp
xchg
mov
mov
notb
and
push
pusha
shll
andb
mov
test
addb
mull
rolb
or
xorb
andb
ffree
imul
and
pop
scas
je
push
jnp
or
xchg
movsl
dec
xor
or
xchg
cmp
cmp
and
xor
popa
inc
pop
or
jp
xchg
mov
addb
loopne
xor
xchg
inc
pop
ja
flds
add
mov
cmp
out
mov
mov
inc
stos
addb
push
inc
int3
out
jno
jns
je
jecxz
mov
andb
iret
adc
adc
inc
ja
sbb
add
shrb
and
popf
mov
fdivrl
outsl
test
rcrb
add
pop
inc
cmp
jnp
lahf
inc
mov
or
add
outsl
andb
out
sbb
test
push
int3
int3
mov
inc
pop
ljmp
mov
arpl
xchg
insl
pop
lock
aaa
lds
fcompl
pop
push
pop
mov
fcmovbe
cmp
xor
fcomps
lods
mov
inc
pusha
sbb
clc
push
int
mov
loop
add
jnp
ja
les
loop
jns
sub
loopne
add
add
shr
adc
nop
les
loopne
sub
nop
xor
jecxz
cmp
jp
mov
mov
dec
pop
andb
and
aad
cmp
arpl
add
or
mov
add
or
out
lahf
bnd
inc
adc
loopne
insl
adc
jle
push
stc
js
pusha
loopne
fidivrl
out
or
jp
sub
pusha
fwait
dec
andb
and
leave
lock
adcl
xor
subb
dec
add
scas
lods
inc
mov
mov
jp
je
jno
in
nop
andb
and
mov
jle
xchg
stos
adcl
shlb
adc
mov
add
orl
xorb
fwait
cmp
in
push
adc
icebp
sub
lret
mov
call
inc
loope
mov
mov
popa
and
imul
or
loopne
mov
cmpsl
fcomps
pusha
cmpb
cmovb
imul
cwtl
call
mov
and
ret
cmp
in
lods
add
add
andb
cltd
mov
pop
and
pusha
movb
fldcw
mov
add
inc
sbb
rcll
adc
dec
stos
mov
xor
andb
jmp
loope
xchg
outsb
sbb
inc
push
mov
pusha
arpl
pop
add
mov
pop
or
or
mov
shlb
add
test
mov
fsubrs
cld
or
lock
dec
add
mov
into
sbb
sahf
pop
and
fdivl
mov
push
lret
sub
and
mov
and
push
pop
or
mov
fnstenv
fcmovnb
pop
fdivp
mov
and
shlb
call
loopne
divb
mov
out
outsb
or
inc
test
and
addr16
out
iret
pop
or
pusha
test
inc
lods
mov
mov
loope
inc
jg
pop
mov
ftst
mov
cli
adc
fs
inc
mov
scas
inc
je
pusha
and
dec
pop
xchg
cli
lcall
daa
mov
mov
jbe
pop
and
pusha
shlb
add
xor
les
or
inc
mov
rolb
in
in
push
mov
popa
cmpsb
inc
add
and
push
push
ret
pusha
xlat
mov
and
loopne
repnz
sti
and
mov
push
and
sarb
pusha
loopne
mov
rep
iret
mov
jo
movntps
gs
test
dec
and
dec
mov
inc
rolb
aas
mov
and
xchg
pop
cmpsb
rolb
aas
test
ljmp
and
pop
fidivl
dec
out
push
inc
inc
sarb
outsb
mov
push
add
lods
mov
leave
adc
and
movsb
mov
add
js
xor
iret
push
add
rol
push
jne
sbb
or
pop
push
xchg
andb
fcmovu
ljmp
mov
fcom
adc
xchg
cltd
sbb
test
inc
mov
je
repnz
ret
das
mov
hlt
push
push
pop
dec
popf
pop
xor
fimull
faddl
push
jbe
and
add
rclb
pop
fxch
cmc
sbb
imul
mov
stos
sbb
mov
sub
pop
hlt
cmc
or
rclb
pusha
and
icebp
push
sarl
mov
mov
out
jb
xchg
sahf
in
mov
mov
xor
add
push
mov
adc
hlt
lahf
je
je
addb
mov
jno
in
sbb
mov
pusha
in
fsubs
clc
jns
push
stos
pusha
shlb
fimull
pusha
fwait
es
jmp
sbb
pusha
cs
addb
pop
pushf
sbb
loopne
mov
dec
adc
popf
jne
imul
lea
inc
sub
movsb
loopne
pushf
pop
add
xlat
mov
jmp
inc
mov
mov
xchg
ret
jge
addr16
dec
enter
pop
pop
mov
sti
pop
mov
add
inc
add
aas
mov
movsb
loopne
mov
jle
movsb
rol
scas
xchg
clc
add
and
or
and
dec
mov
mov
sti
loop
fldcw
outsb
add
dec
dec
pop
aas
xchg
loopne
imul
cmp
pop
jmp
jae
inc
and
rol
xor
gs
test
loopne
add
testl
je
pop
jb
outsb
rcrb
mov
jmp
add
lret
movsb
addb
idivl
inc
dec
xlat
mov
inc
inc
pushf
popa
cmp
out
pop
xor
rolb
mov
cwtl
loop
adc
out
pop
fldln2
push
mov
pop
daa
loopne
int
jae
inc
stc
mov
lret
jnp
adc
lods
inc
add
popa
test
xchg
cmp
cmp
add
add
cmp
clc
sbb
mov
mov
xor
mov
lret
lret
pusha
andb
fwait
mov
loop
xor
pusha
test
sar
mov
inc
cld
mov
lahf
add
xchg
fmul
aaa
incb
pushf
sbb
mov
and
push
xchg
cmp
sti
sbb
xchg
ss
add
jg
outsb
jmp
jne
js
push
and
insb
movsl
dec
shr
cld
adc
sbb
xor
sbbl
insb
mov
shl
jae
jmp
lds
pusha
inc
lret
inc
dec
cmovg
pusha
add
popa
jno
jnp
add
cmpsb
add
pop
sbb
ret
push
out
adc
fnsave
and
lods
and
sarb
mov
push
loopne
jle
cltd
aam
cmpsl
dec
fwait
inc
mov
inc
loopne
sti
or
and
pusha
add
jno
enter
jno
das
scas
sti
add
ds
int
int3
dec
push
inc
cmp
repnz
ds
je
mov
xor
mov
inc
scas
and
into
aam
inc
xchg
mov
les
mov
sahf
jecxz
orl
push
sbb
enter
jmp
adc
pusha
jl
loopne
movntq
out
pop
insb
sbb
addb
imul
mov
inc
mov
and
mov
sub
mov
add
sub
cmc
aam
shlb
mov
cmc
or
jae
add
jecxz
mov
mov
pop
jbe
and
push
and
pop
pop
cmp
cld
adc
insl
cmpsl
rol
cmp
flds
out
ja
xchg
add
cmpb
mov
mov
lahf
ret
inc
adc
lret
lds
clc
pop
adc
xchg
push
leave
xchg
enter
add
iret
push
addr16
in
cld
stc
dec
sub
shr
and
mov
ss
add
xchg
idivb
xchg
xchg
cmp
out
inc
lock
and
sbb
or
mov
inc
jp
dec
or
inc
pop
subl
push
xchg
xchg
shlb
insb
push
sub
jnp
add
in
call
mov
xchg
jmp
ficompl
fnstsw
imul
xor
iret
pop
loop
sbb
push
jae
insb
sub
movsl
outsb
xlat
or
rolb
cmp
mov
xlat
test
imul
jns
fadd
push
aas
outsb
into
mov
mov
adc
pusha
mov
inc
ljmp
rolb
pop
mov
test
loopne
loop
or
out
adc
addb
rol
scas
test
adc
add
aas
adc
aaa
pop
mov
arpl
fstpt
sbb
out
push
lret
insb
cli
sbb
dec
lea
loopne
addr16
jo
jns
xchg
leave
jmp
ss
and
add
clc
les
add
addb
mov
ret
add
and
pop
and
sbb
cmp
lret
stos
lcall
fistl
lahf
and
mov
jae
aaa
js
push
loopne
and
jmp
inc
clc
dec
js
push
inc
mov
mov
sub
pop
or
fprem
cmp
dec
pop
idivb
cli
out
sbb
xor
jge
inc
insl
das
push
inc
add
xor
jns
cmp
add
addb
lret
inc
fcmovnb
clc
dec
jle
mov
sbb
push
cwtl
lahf
push
pop
jle
or
rcrb
jge
cmp
pop
xlat
hlt
push
add
js
mov
and
das
in
jnp
insl
xlat
push
jp
pop
movsb
addb
lret
xchg
daa
cli
int
stos
shlb
nop
mov
fmuls
pop
mov
or
into
pop
loop
xchg
adc
xchg
jno
mov
push
mov
daa
jle
sbb
sarb
inc
lods
inc
and
insb
inc
add
loope
inc
lahf
data16
int3
xor
data16
and
nop
in
inc
inc
lret
out
loopne
push
lock
pop
std
out
into
and
in
xlat
insl
cmovae
inc
rolb
inc
out
pusha
loopne
inc
push
adc
jl
push
outsb
lea
inc
pusha
xor
jl
insl
rorl
sbb
and
lds
fs
repz
pop
or
insl
sbb
and
jg
es
inc
inc
psubsw
xchg
loop
sbb
and
xchg
xlat
out
in
pushf
inc
daa
icebp
mov
in
lds
xor
mov
and
pop
movl
pop
fisttpl
in
dec
movsb
and
mov
inc
inc
sbb
add
add
push
jne
or
loopne
add
pusha
rolb
subb
add
addl
jg
and
out
sub
pusha
cmpsl
lock
inc
xchg
mov
lret
je
cltd
add
repz
fmull
popf
mov
imul
rorl
addb
xorl
in
je
mov
inc
add
int3
xor
xchg
sub
inc
sub
loopne
mov
pop
roll
loopne
rclb
cmp
idivl
push
xor
xchg
cld
xor
cmp
test
addb
pop
dec
mov
test
out
clc
ss
mov
and
push
sub
add
in
fadds
add
fwait
or
mov
out
fisubl
inc
jp
sub
mov
mov
inc
cmp
rcr
sbb
inc
and
mov
cmp
lretw
loopne
jo
int3
sub
dec
js
jns
sub
add
sti
addb
inc
cmc
mov
shlb
lret
stos
shll
cmpsb
mov
inc
lret
push
jb
repnz
pusha
sahf
aaa
out
mov
je
sub
add
dec
arpl
dec
movsl
mov
loopne
pusha
inc
xor
jmp
dec
es
jb
aam
iret
test
stos
pusha
sarb
push
add
adcb
aaa
sub
mov
and
xlat
loop
jl
scas
and
mov
adc
cmp
test
andb
pusha
inc
sbb
sub
add
and
outsb
xchg
loopne
cmovne
pop
cld
cmpsb
and
jnp
fiaddl
adc
pop
dec
imul
xorl
mov
push
cmpb
cmp
mov
mov
stos
outsb
fimuls
nop
outsl
bound
sub
push
push
imul
addr16
test
shl
data16
xor
subb
sbb
inc
sbb
out
call
js
cmp
and
sub
rclb
push
pop
data16
and
xchg
lds
mov
and
mov
push
pop
cmp
inc
std
xchg
jmp
and
mov
or
rolb
sub
addb
pusha
subb
mov
and
cmc
or
loopne
jb
pusha
ds
inc
pop
dec
pusha
jg
js
inc
and
gs
sti
and
add
addb
pop
popa
stc
jg
mov
cmpsl
pop
push
imul
and
mov
stos
fwait
or
and
enter
call
andb
adc
mov
or
movsb
rol
push
mov
pop
std
std
fstpt
pop
shr
cwtl
bound
add
ror
adc
dec
push
notl
push
shlb
mov
mov
sbb
pop
mov
xchg
stos
and
popa
pushf
mov
inc
mov
add
mov
inc
push
add
dec
lret
mov
or
dec
popa
push
add
test
pusha
push
hlt
adc
das
push
jne
shl
cli
mov
imul
push
bound
rcll
rclb
movsl
cltd
loopne
sbbl
andb
in
rcrb
push
shlb
fcoms
outsl
movsl
and
mov
fcmovne
je
mov
sahf
stos
and
sahf
mov
ret
add
imul
xchg
xchg
sti
repnz
push
and
iret
mov
and
xor
jae
jg
mov
push
push
add
pop
ficoml
jno
lds
pusha
lret
jge
xchg
movsl
sub
push
and
xor
and
jnp
pop
imul
and
pusha
push
shll
mov
das
rolb
push
pop
dec
aad
dec
mov
inc
repz
hlt
cs
loopne
rolb
aas
mov
xchg
add
sahf
pop
outsl
push
gs
rclb
iret
std
push
jae
pop
dec
xchg
scas
pusha
and
jne
stos
pusha
mov
ss
mov
cmpl
pusha
in
inc
call
and
rcrl
pusha
cmpxchg
iret
adc
lock
mov
sbb
in
adc
push
push
mov
pusha
pusha
or
jbe
mov
sub
xor
fdivp
xchg
addr16
loopne
dec
xchg
add
stos
cld
fdivp
hlt
hlt
fistps
xchg
nop
sbb
lods
and
jg
pusha
shrb
fmull
inc
loopne
rolb
xchg
pusha
inc
push
icebp
jl
aas
clc
mov
xor
xchg
shl
addr16
inc
adc
add
jae
add
lret
xchg
add
add
push
pop
and
cmp
jno
int
in
or
andb
xor
fisubs
add
or
loopne
fsubrs
xchg
push
and
loopne
mov
inc
add
psllw
jle
shl
gs
ljmp
cmp
loopne
clc
cmp
mov
inc
loopne
sbb
sbb
mov
das
cmpsl
cmp
jmp
nop
or
pusha
cmp
cmp
popf
iret
pop
fxam
aaa
lahf
bound
mov
jmp
mov
inc
jo
pusha
loopne
shl
out
jnp
push
adc
add
loopne
xorl
xchg
add
repz
test
jbe
jnp
leave
out
jmp
aas
dec
les
cmp
data16
mov
mov
inc
loopne
push
repnz
add
mov
mov
inc
cmp
sub
stos
and
mov
imul
lods
mov
clc
stos
pusha
pusha
in
sbb
les
pop
out
mov
sbb
fldenv
dec
fcomps
and
sub
movsl
mov
ja
vpunpckhbw
out
iret
mov
hlt
cmp
icebp
pushf
jns
filds
and
and
sub
mov
add
ja
insb
push
xor
adc
push
adc
inc
pop
fbstp
jb
inc
jo
std
mov
dec
adc
ss
jnp
andb
add
decl
fdivl
in
das
test
add
and
icebp
cmc
xor
add
cltd
lods
mov
push
ss
cmp
stc
jle
sbb
loop
ret
lret
inc
fildl
add
mov
pop
je
into
jae
adc
fisubl
mov
rolb
maskmovq
idivl
int
jl
push
adc
ds
jns
xchg
mov
mov
loopne
leave
bound
rcl
sarb
add
and
mov
mov
adc
ret
ss
jge
icebp
sub
mov
and
fcoml
add
out
scas
shlb
nop
push
bound
jns
jmp
shlb
out
push
loopne
rcrl
pop
jns
xor
add
sbb
and
loopne
add
pushf
int3
outsl
pop
mov
rcl
xor
fisttpll
push
lret
add
pop
popf
mov
xchg
sub
add
into
lods
cmpsl
rsm
and
ja
jl
xorl
shrb
adc
dec
mov
cmp
loopne
or
sub
inc
jl
xor
cmp
lods
pusha
loopne
imul
cmp
mov
pop
adc
jae
and
sarb
mov
int3
aam
mov
lahf
xor
inc
jo
inc
mov
add
inc
fisubrs
mov
inc
pushf
and
shlb
jp
idivl
mov
fcoms
jno
bswap
repnz
shlb
inc
loopne
insl
lea
cmp
arpl
jno
shl
fs
jo
mov
aad
rol
aam
mov
dec
fldl
imul
pusha
ja
loopne
mov
push
loopne
cmp
test
pusha
add
inc
mov
jo
scas
add
pushf
cmp
mov
inc
mov
loopne
fwait
inc
mov
rcr
je
sub
mov
inc
pusha
stc
cmp
repz
jmp
add
sbb
inc
hlt
insb
jle
sub
inc
cltd
int3
cmp
mov
mov
xor
mov
mulb
mov
and
mov
shrb
sarb
inc
lret
fisubl
inc
subb
xor
popf
loop
sub
shlb
ja
mov
mov
loopne
add
xchg
leave
jo,pt
sbb
out
lds
rolb
add
cmp
fwait
shl
add
push
push
dec
lret
lea
outsb
sbb
sub
mov
mov
sub
inc
lret
mov
rol
sbb
inc
loopne
in
cmp
sbb
adc
and
gs
or
loopne
rolb
add
sar
stos
shlb
pushf
ja
and
subb
leave
xchg
or
or
xchg
repnz
cld
mov
pop
sub
cmp
rolb
scas
and
mov
ljmp
add
add
rcrb
pop
add
andb
pushf
dec
out
imul
mov
mov
dec
int3
pop
in
dec
sbb
rcll
cld
loopne,pn
lahf
jp
xchg
popf
in
lret
movsb
mov
xlat
imul
mov
jmp
push
and
roll
mov
nop
in
jp
inc
add
inc
mov
mov
repz
out
stos
mov
adc
push
arpl
mov
scas
mov
stc
cld
jns
xor
mov
mov
int3
or
loopne
mov
add
subl
imul
inc
jl
adc
jne
inc
pusha
cmp
and
clc
dec
into
lock
shlb
and
mov
xor
stc
cmpsl
and
cmp
mov
lret
push
out
leave
mov
loopne
inc
aas
cwtl
gs
lds
ficoms
jmp
mov
test
add
loop
and
mov
add
orb
add
add
adc
mov
shlb
and
nop
loopne
out
jle
pop
sub
and
jecxz
andl
xchg
ss
fisubrs
decb
mov
clc
hlt
ret
sahf
mov
fistpl
into
scas
add
loopne
les
dec
cmp
inc
push
jge
sbb
sub
sub
stos
push
pop
ja
sub
gs
stos
addb
cmc
stos
shlb
and
or
outsb
notl
xor
daa
or
fdivs
fdiv
pop
inc
sbb
add
sbb
aaa
cmc
adc
std
sbb
out
dec
or
loopne
and
add
mov
and
subb
mov
add
jo
in
push
mov
or
inc
xchg
xor
jp
jmp
shlb
sub
and
dec
mov
lahf
daa
add
loopne
adc
inc
mov
and
les
test
sub
lret
jecxz
ja
mov
lds
mov
pusha
xorb
clc
mov
pop
popa
divl
and
cmp
mov
xchg
mov
adc
push
dec
xchg
loopne
ret
inc
sbb
std
loope
inc
hlt
cs
inc
aam
inc
cmpb
pop
push
sbb
inc
add
cli
pop
repz
mov
lret
shrb
pusha
add
fidivrl
fldt
sbb
mov
xor
mov
mov
je
inc
test
add
adc
jae
pop
or
inc
and
xchg
pusha
dec
enter
add
jnp
loopne
xor
pop
and
pusha
shrb
and
loopne
adc
cmp
je
push
addr16
and
and
or
daa
punpckhwd
pusha
add
xchg
xchg
pop
arpl
in
inc
popa
mov
in
jnp
int
shrb
pop
loope
mov
imul
jle
loopne
clc
and
pop
insb
mov
mov
rolb
fldl
mov
daa
dec
repz
pop
dec
cmpsb
mov
adc
fwait
dec
into
and
and
jmp
xchg
int3
sti
lds
xchg
inc
xor
adcl
or
mov
xlat
lahf
fidivrl
push
xchg
inc
cmp
mov
mov
cs
inc
das
mov
jmp
fldenv
out
inc
xor
and
jbe
and
bound
inc
sbbb
lcall
pop
mov
or
andb
rorb
addr16
nop
push
add
cmp
xor
test
andb
pop
and
push
rclb
mov
addr16
xor
pop
hlt
sbb
mov
mov
pusha
xor
hlt
jp
add
jae
xchg
addb
push
xchg
popf
xor
and
and
loopne
sub
add
xchg
loopne
sbb
mov
test
mov
sub
loopne
dec
rcrl
and
rorl
scas
inc
and
inc
xchg
jne
xchg
sub
imul
push
je
lea
loopne
cmc
dec
outsb
fcmovnb
cmp
inc
out
and
test
lock
jne
push
mov
pop
mov
int
into
clc
in
ja
pop
push
loopne
xchg
ds
mov
addr16
sti
cli
mov
shrb
push
mov
sub
xor
out
aaa
cmp
push
add
or
xor
loope
ja
pop
push
fnstsw
sub
push
mov
push
shl
sub
xchg
xor
and
jns
cmp
and
shrl
addb
int3
jle
inc
push
mov
adc
rclb
mov
sub
pusha
fisttpll
jle
pop
xor
cmc
jns
mov
xchg
mov
sbb
mov
scas
shlb
pusha
sbbl
lret
dec
mov
and
and
and
fucom
rclb
add
insb
pop
out
xchg
mov
subps
lods
inc
subb
xchg
outsl
ljmp
daa
sbb
inc
or
jns
push
aad
xlat
fdivrs
mov
hlt
jbe
add
pusha
cmpl
les
pop
xor
mov
adc
push
xchg
jbe
ja
inc
cmp
push
inc
sahf
inc
repz
mov
lret
jge
or
cmp
pop
cmp
mov
adc
mov
fstpt
clc
add
sub
xchg
das
stos
xor
subb
adc
ret
push
pop
sbb
jmp
mov
sub
test
imul
cmp
daa
jno
mulb
and
inc
and
mov
mov
stos
pusha
and
shr
andl
insb
popf
in
ds
xchg
enter
cmp
je
imul
add
loop
loopne
adc
jnp
dec
jbe
ljmp
insl
sbb
sbb
mov
pusha
push
nop
fcmovnbe
pop
iret
sub
shlb
mov
scas
psraw
add
shrb
jmp
cmc
neg
sub
pusha
mov
sbb
mov
and
inc
push
xchg
addb
fldl
pusha
add
adc
mov
xor
test
mov
gs
add
insb
test
add
leave
pop
push
jmp
andb
nop
ds
pusha
loopne
addr16
idivl
daa
movsl
in
jae
jecxz
push
sahf
dec
push
pop
adc
repz
adc
not
rcrb
inc
sbb
add
mov
pop
dec
rcrl
inc
pusha
sbb
jmp
dec
xrelease
jl
inc
pop
inc
jb
mov
and
add
push
sbb
cmp
xchg
sbb
and
js
cltd
cld
push
lcall
shrl
add
movsb
and
les
add
flds
inc
push
shlb
sti
and
rcl
into
mov
inc
loopne
and
test
mov
adc
andb
clc
lock
loopne
cmpsb
add
stc
hlt
out
into
das
stos
and
dec
ja
pop
pop
sbb
cmpsb
and
push
arpl
ret
je
loopne
iret
movups
addr16
loopne
pop
mov
xchg
testl
push
add
mov
test
add
daa
xor
shlb
gs
andb
and
inc
xorl
xor
mov
mov
loopne
out
sub
inc
cld
in
and
pusha
gs
jge
lret
pushf
cmpsl
xchg
shlb
inc
xchg
mov
mov
adc
jno
inc
push
lock
std
dec
sti
ret
push
pop
pop
lods
rolb
pop
into
popf
push
imul
cmp
push
sub
fimuls
shlb
test
mov
mov
icebp
loopne
xchg
hlt
data16
inc
dec
xchg
sub
orb
mov
int3
pop
ja
jbe
mov
xor
pusha
adc
mov
xchg
lock
pusha
mov
adc
ret
sti
cmp
sbbb
lods
add
fcmovnbe
imul
loop
dec
pop
lds
mov
mov
aam
cmc
pop
and
pop
in
sbb
jmp
dec
and
push
test
and
xchg
addb
outsl
pop
and
rorb
sbb
mov
mul
add
int
dec
dec
inc
ja
maskmovq
idivl
fcmovb
and
cmp
add
rolb
cmp
adc
pusha
xor
rcl
mov
addb
mov
jg
xchg
jb
xchg
shll
adcl
stos
mov
dec
or
and
into
push
xor
adc
rorb
adc
add
and
lods
inc
add
add
test
addr16
pusha
pusha
imul
and
shlb
sbb
pusha
and
xchg
cltd
inc
insb
add
enter
sbb
fmuls
test
mov
add
shlb
aam
xchg
fwait
pop
cltd
aaa
pop
push
adc
mov
inc
mov
rcrb
decb
in
loop
mov
ret
mov
aas
aad
push
ss
add
adc
mov
jge
fs
aad
pop
and
adc
repz
inc
loopne
and
pop
push
pop
add
pusha
jmp
xchg
mov
cli
rorl
imul
dec
sub
loopne
je
and
iret
shrb
andb
push
and
jns
push
inc
jg
addb
mov
dec
pop
scas
cmp
test
test
rol
fldt
push
xchg
ljmp
push
bound
add
or
enter
or
jmp
leave
and
loopne
movsb
add
stos
into
movsl
or
add
cmc
aam
dec
sbb
and
ficoms
pusha
xlat
mov
rorl
and
cmpsl
xor
add
and
mov
push
stos
mov
and
mov
pop
shll
clts
inc
add
adc
call
cli
dec
adc
pop
outsl
ret
mov
loopne
ja
shlb
jb
pushf
fidivrl
inc
sub
add
pop
stos
mov
adc
ds
aaa
inc
add
loopne
jo
and
ret
std
std
int3
and
rclb
pusha
mov
rcrb
jo
into
jnp
addr16
test
or
movsl
mov
jle
adc
or
mov
jmp
addr16
pusha
ror
mov
inc
fs
xor
and
pop
je
mov
mov
leave
hlt
mulb
dec
ds
mov
lahf
push
cmpl
xchg
mov
psadbw
or
add
and
rorb
ljmp
shlb
and
push
xchg
out
dec
cwtl
sbb
pop
pop
ds
and
das
xor
andb
jb
cmp
in
lcall
hlt
fwait
rcll
fisttps
in
or
shll
pusha
imul
adc
shlb
mov
aas
mov
inc
inc
and
mov
popl
pop
xor
ret
xor
jl
cmp
in
scas
pusha
pusha
xchg
imul
add
cltd
aas
loopne
cmp
xchg
mov
add
movsl
repnz
rol
fstpl
add
and
fcomps
jbe
les
orb
jmp
dec
xor
clc
add
mov
fwait
pop
hlt
adc
ja
inc
mov
and
lods
addb
sbb
aaa
xor
loopne
add
loopne
add
arpl
shr
inc
call
push
daa
mov
and
or
and
inc
or
pop
in
nop
jns
pusha
cmpb
mov
mov
insb
mov
sbb
js
add
or
xorb
pusha
inc
dec
mov
cmpsb
andb
in
stc
cmp
cli
dec
mov
andb
sub
pop
dec
int3
mov
ds
mov
adc
pop
rcr
mov
jl
push
mov
in
in
dec
pop
jno
mov
shrb
add
fistpll
jno
push
mov
in
cmp
jne
inc
and
adc
cld
psubsb
push
or
push
mov
add
subl
or
pop
mov
mov
dec
es
rorb
cmpsb
loopne
mov
in
stos
inc
add
add
add
subl
aam
ret
daa
loope
push
fnstsw
adc
int3
dec
xchg
sub
xor
fisubs
sbbl
dec
mov
clc
jne
or
xor
inc
jo
outsb
xchg
inc
popa
lea
lods
jp
pop
fs
inc
sbb
js
addb
test
jl
add
rorb
scas
andb
mov
jp
adc
mov
add
mov
bound
icebp
pop
inc
test
add
dec
mov
shlb
cmpsb
shl
mov
shlb
and
dec
jns
pop
lret
push
loop
negb
aas
insl
cmp
addb
push
fadds
es
add
mov
cmpsb
loopne
or
xchg
cmp
movsb
addb
pusha
stos
out
add
mov
lock
in
and
mov
lods
pusha
add
cli
mov
and
pop
mov
sbb
inc
mov
loopne
jg
inc
mov
cmp
inc
lret
cwtl
andb
das
dec
orl
cmc
mov
xchg
loope
inc
and
bound
jg
sbb
ljmp
xchg
out
stos
push
pop
and
aad
xor
sub
mov
jl
add
sahf
lcall
mov
dec
int
ret
inc
xor
inc
rolb
jl
push
mov
test
rep
jne
out
mov
sub
mov
mov
icebp
call
and
andb
mov
add
add
out
sub
add
lock
jnp
testl
inc
xor
jle
movsb
add
outsb
fsts
mov
iret
out
xor
push
mov
fidivl
lds
pusha
cmpb
mov
pop
cltd
shlb
orb
sbb
leave
sub
dec
cmp
aaa
push
fimull
xchg
xor
and
inc
scas
mov
mov
loopne
nop
not
pop
sbb
rclb
jae
cmc
add
adc
sbb
add
loopne
mov
mov
push
lods
enter
jg
dec
cmp
pusha
pusha
cmp
mov
movsb
shlb
mov
loopne
sbb
pop
cmc
movsb
add
inc
mov
push
shl
push
or
or
or
and
inc
mov
pop
inc
ljmp
cmpsl
sub
dec
dec
rolb
subb
adcb
mov
jle
leave
xor
add
xlat
aad
out
ss
or
adc
xchg
and
subb
shl
std
lods
out
mov
fistpll
aam
fimull
jge
sbb
int3
pop
in
fnsave
or
mov
add
xchg
add
inc
arpl
pop
popa
adc
loopne
cs
mov
mov
jo
mov
or
ret
shl
mov
xor
aad
stos
jae
addb
push
addb
mov
bound
ffree
sbb
cmp
pop
push
je
fcomi
insb
or
pop
jle
bound
and
out
je
push
andl
mov
jge
cmc
inc
push
adc
sub
mov
jle
test
and
or
stos
rcr
jno
lcall
fnsetpm(287
pop
outsb
je
and
cs
mov
and
add
lods
pusha
inc
mov
mov
aam
mov
cmp
jg
jno
andb
cld
push
push
aad
shrb
push
adc
or
fstl
nop
mov
mov
cli
or
mov
push
addb
loope
lahf
insl
fstpt
call
inc
and
and
inc
cmp
popa
sbb
addb
push
pusha
add
jecxz
ret
test
shlb
int3
mov
adc
iret
mov
push
push
in
andb
repz
pop
adc
rcrb
mov
xor
andb
shl
xchg
clc
xor
add
test
outsl
pop
sub
dec
inc
shl
iret
cltd
fldt
mov
xor
mov
loopne
mov
outsb
aad
andl
cld
mov
xchg
sub
popf
ljmp
adc
loopne
inc
or
and
push
xchg
push
lahf
fwait
jne
mov
in
adc
mov
aas
pop
adc
out
aaa
pop
pushf
lods
lret
daa
cld
rcrl
inc
aad
and
stos
lods
push
out
test
les
pushf
fdivr
insb
add
loopne
daa
mov
add
mov
decb
jmp
adc
cs
shlb
sbb
ret
mov
shlb
mov
mov
inc
mov
hlt
push
sbb
add
and
out
loopne
leave
mov
push
imul
mov
loop
mov
inc
pusha
and
pusha
pop
mov
dec
mov
cli
mov
loopne
lods
rolb
and
test
and
dec
cmpsb
pusha
inc
in
les
pusha
fadds
add
shl
xchg
cmpsl
popf
dec
loope
mov
add
jmp
mov
xor
scas
cmp
pop
dec
fs
je
rolb
test
add
rol
mov
dec
push
sub
mov
popf
and
inc
sub
sbb
jno
and
popa
mov
fisubrs
aad
pop
dec
adc
outsb
mov
cltd
pop
inc
jb
add
sub
test
sub
and
push
into
push
jo
cmp
mov
mov
adc
lahf
cmp
mov
pop
call
aad
push
add
and
loopne
push
andb
jb
fwait
xchg
clc
xchg
add
jnp
and
lret
lret
add
loopne
mov
fstpl
ficoms
out
shrl
add
movsl
add
pop
jae
and
push
iret
mov
push
dec
and
out
mov
cmp
push
inc
pusha
push
push
fwait
push
pusha
inc
sub
dec
into
mov
cltd
pop
cltd
jbe
push
or
and
add
sbb
xlat
or
mov
inc
sub
ficoms
mov
repnz
mov
repnz
xor
mov
outsb
jecxz
aam
fdivrl
xor
jmp
add
pusha
adc
jle
mov
and
add
sbb
ret
popf
in
loope
xchg
loopne
ja
add
sub
mov
xor
stos
clc
dec
push
xor
xor
std
cmp
andb
rcrl
xchg
xchg
dec
xchg
lods
inc
sbb
inc
mov
movsb
shlb
iret
inc
mov
cmc
loopne
xchg
sbb
call
or
and
xchg
lock
xlat
xchg
psrad
leave
pop
mov
repnz
sub
call
and
fs
shl
push
mov
lea
add
ret
mov
pop
pop
cltd
pop
test
dec
incb
imul
pop
pop
add
ret
mov
lds
loopne
bound
insl
aaa
imul
dec
orl
push
ret
in
lea
iret
mov
adcb
sahf
inc
test
insb
mov
shlb
movsl
mov
inc
subb
pusha
mov
push
xor
mov
or
or
pop
jo
lods
roll
push
outsb
stos
push
lock
jo
and
jbe
cltd
xchg
add
adc
adc
jne
and
cmp
testl
sbb
add
jle
sub
sub
inc
lds
mov
dec
dec
sub
and
pop
pop
add
xor
pop
mov
mov
idiv
mov
pusha
inc
xchg
js
or
hlt
inc
ror
in
jp
lret
loopne
shrb
ret
int3
das
mov
les
mov
std
cwtl
add
pusha
sub
add
push
dec
inc
sbb
popa
xchg
rolb
and
jl
loopne
sbb
lds
add
sub
pusha
sarl
rolb
mov
dec
push
jno
pusha
and
andb
ja
dec
in
shl
mov
lods
and
aas
cmpsl
out
inc
aad
mov
movsl
aam
dec
repz
jmp
mov
call
scas
pusha
mov
pop
and
shrb
sub
cmp
cld
pop
cmp
and
add
sti
shrl
adcl
in
or
and
rcll
loopne
cmpsl
in
cmp
adc
and
loopne
in
pop
fisttpl
in
inc
hlt
cltd
fnstenv
ljmp
mov
pop
enter
pop
shll
mov
das
pusha
stc
addr16
push
inc
insb
mov
jo
push
push
rolb
loopne
pushf
xlat
out
mov
xchg
fisubs
loopne
or
outsl
xor
addb
dec
adc
ljmp
jecxz
lea
insb
lcall
adc
shll
out
pop
dec
cltd
test
inc
push
jp
sub
imul
nop
jns
dec
fwait
lea
pop
pop
clc
scas
fbstp
sbb
push
and
lock
push
sub
pusha
mov
fimull
jno
mov
mov
fwait
into
adc
sbb
dec
ret
inc
mov
mov
fnstenv
push
mov
sti
lcall
andb
int3
idivb
or
inc
iret
xchg
cmp
test
orb
dec
mov
pop
outsb
mov
mov
and
sbbb
mov
mov
inc
pusha
pop
push
xchg
movsl
cmpsb
pusha
cmpb
and
cli
mov
loopne
cltd
jnp
pop
mov
add
pop
jle
addb
mov
inc
jg
in
icebp
ds
out
les
xchg
xchg
push
add
stc
ds
mov
push
inc
and
inc
add
mov
sbb
hlt
mov
outsb
sub
cltd
sarl
add
dec
xchg
cmp
fbstp
je
mov
pusha
add
xor
jg
add
int3
inc
xlat
cmp
xchg
gs
and
xchg
and
fildll
mov
mov
xchg
popf
enter
xchg
dec
mulb
lods
mov
je
scas
dec
fwait
push
add
push
pop
jge
aas
lds
loopne
andb
add
or
pusha
cmp
stos
mov
je
adc
insb
and
mov
inc
cmp
xchg
repnz
out
pop
mov
mov
test
jmp
mov
and
add
and
add
xor
in
sub
sar
pop
dec
cmpsb
add
mov
aam
sbb
loopne
cmp
xor
rclb
scas
repz
mov
shl
push
mov
add
xchg
andb
cmp
pop
dec
nop
leave
repz
rorl
xchg
pop
test
fdivs
or
loopne
inc
xchg
mov
fimuls
vmovlpd
in
inc
rclb
sbb
int3
sub
loopne
sub
mov
fwait
repnz
shrl
sub
inc
dec
adc
mov
aam
pop
sub
cltd
loopne
and
push
and
popf
aas
test
pusha
and
mov
loopne
cmp
inc
mov
inc
pop
stos
pusha
pusha
mov
scas
add
push
push
mov
jo
and
push
mov
dec
mov
cmc
daa
or
mov
push
insb
adc
insb
pop
adc
aaa
dec
lods
jo
lret
mov
xchg
and
shlb
stc
sbb
sbb
jbe
and
popa
push
or
rclb
or
or
shr
mov
inc
mov
xchg
ss
pop
sahf
daa
dec
jne
pop
sbb
jnp
lea
inc
rclb
popa
bound
loopne
mov
pusha
dec
fsubs
popf
jnp
imul
hlt
add
jp
loope
inc
adcb
loope
dec
and
and
int
dec
hlt
test
sbb
pop
cmp
shrb
inc
andb
addb
bound
imul
sub
pop
cmp
mov
shrl
dec
testb
andb
enter
inc
inc
push
mov
loopne
mov
adcb
scas
out
and
loopne
mov
dec
dec
mov
repnz
jno
in
pop
out
and
shlb
out
lret
xchg
lods
rol
add
add
sub
mov
push
push
stos
push
jge
mov
pusha
add
adc
add
adc
insb
out
or
aas
and
hlt
rclb
pusha
mov
sbb
jle
inc
call
cmp
pop
mov
add
lds
test
mov
shrl
pop
repz
loopne
dec
mov
mov
push
scas
call
shlb
mov
les
aad
mov
addb
mov
sti
xor
xchg
nop
pop
push
rcrb
jg
bound
data16
or
movsl
testb
adc
add
add
rcl
push
mov
hlt
dec
xor
inc
mov
out
adc
dec
adc
scas
cmp
pusha
xchg
test
jns
cmc
stc
aas
pop
push
arpl
in
out
dec
fldt
shlb
fstps
hlt
shrb
subl
stc
and
cmp
gs
imul
inc
popa
mov
or
and
inc
test
loopne
mov
push
jl
mov
aas
test
inc
mov
and
mov
dec
ds
and
rclb
movsl
andb
shl
xchg
andb
sub
inc
and
loope
mov
mov
pop
inc
enter
jne
test
int3
fsub
daa
and
lods
rolb
cmp
pop
dec
insl
ja
mov
cmpsb
mov
pop
sub
addr16
mov
loopne
insl
test
inc
mov
jl
sbb
filds
adc
or
dec
jg
dec
or
clc
in
fs
and
call
cmp
push
xor
jge
sub
mov
into
iret
mov
and
xor
inc
insb
cmc
mov
ret
mov
imul
orl
sbb
or
xchg
outsl
jl
rolb
pop
xchg
sbb
aas
jno
sub
mov
mov
xor
movsl
popf
insl
jns
xchg
mov
mov
mov
into
sbb
int
add
out
mov
pop
pop
iret
push
rolb
ret
lahf
xchg
cmpsl
in
test
and
call
jbe
xchg
pop
lds
inc
sbbb
mov
jp
pop
sti
inc
outsb
push
jbe
shlb
inc
xchg
aam
popa
idivb
jp
incb
dec
xor
es
cmp
ljmp
orl
and
aaa
jbe
mov
cltd
in
pushf
in
xor
aas
xor
add
add
ljmp
or
jmp
jg
divl
xor
mov
inc
sub
sub
inc
sbb
jb
push
pusha
adc
ror
fisttpl
loopne
pop
sub
push
int
push
addb
push
inc
xor
and
sub
add
push
loopne
xorl
jl
std
loop
outsb
pop
test
loopne
pusha
inc
hlt
fisubrl
cmp
mov
jbe
sub
and
outsl
rcll
cmp
leave
stos
inc
sbbb
sahf
nop
or
clc
popf
aam
mov
cltd
adc
std
jmp
pop
pushf
mov
loopne
push
inc
mov
test
loopne
mov
pusha
andb
outsb
cwtl
and
jle
add
push
add
sbb
jb
mov
hlt
or
insb
sbb
inc
xchg
inc
pop
mov
jmp
mov
add
and
repnz
jge
inc
and
call
sbb
fs
push
push
call
mov
pusha
loopne
xor
cmpsb
and
and
andb
inc
dec
mov
addb
test
adc
cmp
jnp
test
shrb
sarb
mov
mov
mulb
loopne
cmp
loopne
jge
cmp
stos
pusha
and
lcall
mov
dec
push
push
mov
push
push
call
cs
mov
jae
pusha
add
arpl
mov
insl
sbb
shlb
push
aam
inc
pusha
mov
pop
or
inc
fs
jge
sbb
pusha
add
sbb
xchg
movsb
mov
lds
popa
adc
push
arpl
loopne
test
xor
in
pop
mov
push
iret
push
and
or
shr
js
cmp
sti
jl
rcr
dec
dec
jbe
add
movsb
inc
mov
add
dec
jge
dec
fldcw
rolb
mov
add
inc
xor
andb
add
sub
loopne
mov
loopne
addb
mov
push
mov
jnp
ret
xchg
xchg
pop
dec
cmp
outsl
cmp
iret
dec
inc
pop
add
rclb
jge
mov
inc
sbb
xor
mov
jge
mov
pusha
shr
outsb
leave
insl
mov
pop
rcll
pop
roll
gs
cmpsl
addr16
andb
add
and
loopne
add
cmpb
test
lock
xchg
xchg
pop
sti
xor
mov
insl
jle
in
sub
mov
dec
jp
xor
loopne
xchg
and
mov
cmc
add
loopne
and
and
in
adc
out
test
add
mov
daa
sbb
cltd
mov
dec
lret
mov
jns
pusha
andb
arpl
addb
ja
mov
aaa
das
mov
push
fwait
lods
mov
pusha
shrb
ret
scas
and
rolb
loop
aaa
enter
mov
inc
push
sbb
flds
add
jp
rorb
call
rorb
sti
or
add
shll
cmp
iret
cli
push
cltd
js
add
mov
addb
loopne
jbe
add
addb
test
mov
xchg
pusha
subl
loopne
push
dec
lock
mov
cmp
rolb
add
cli
repz
inc
orb
out
add
fwait
xchg
push
push
inc
mov
mov
and
inc
jo
gs
lret
mov
std
pop
mov
out
aad
add
or
test
cmpsb
and
xchg
push
in
pop
mov
mov
or
out
or
inc
and
idivl
add
aad
jg
popa
jge
fcom
and
dec
cmpsl
jmp
pop
xor
outsl
out
xor
inc
xorb
mov
mov
and
xor
push
sbb
inc
dec
iret
sub
push
fwait
pop
pop
sahf
fsts
dec
pop
mov
cmp
fistpll
insl
sbb
mov
inc
shl
incl
ret
mov
mov
inc
jp
les
lock
insb
xchg
lock
lret
xor
sub
add
pop
mov
push
test
out
cmp
dec
add
js
cld
push
sbb
mov
push
jb
xchg
rorb
mov
xor
scas
loopne
leave
fdivr
pop
cli
pop
xchg
cmp
sbb
andb
mov
out
xor
pushf
rorl
ds
jae
sub
mov
rolb
addb
pop
cmpsb
add
inc
inc
stc
movsb
pusha
xor
lret
jecxz
inc
ror
xor
clc
jp
xchg
jb
dec
dec
gs
jp
call
decl
add
jnp
and
xlat
scas
mov
push
outsb
imul
xlat
jp
sbb
ja
and
cmc
cli
adc
sbb
sbb
mov
add
fmull
cs
pusha
inc
ret
addb
shlb
pop
out
pop
xchg
mov
mull
andb
xor
and
add
add
push
push
inc
and
add
push
clc
inc
sbb
js
and
imul
cmc
cmpsl
jae
pmuludq
mov
pusha
andb
mov
movsb
rolb
add
outsl
test
cltd
mov
idiv
cli
push
ja
adc
xor
test
inc
fucom
mov
pop
cli
adc
leave
cmp
pop
outsb
lods
popa
sub
repnz
dec
push
and
mov
in
cmp
mov
shlb
add
pop
xor
pop
in
ss
mov
loope
imul
fsts
cwtl
icebp
not
lock
add
inc
push
roll
mov
and
fcoms
hlt
ja
push
mov
dec
addb
add
cmp
or
fnstsw
jmp
cmp
ja
mov
clc
aas
adc
and
insl
imul
and
and
xchg
in
mov
out
mov
mov
and
imulb
xlat
in
mov
and
inc
xchg
sub
stos
pusha
loopne
sbb
sbb
jae
cmp
sbb
jle
inc
loopne
add
inc
or
lea
icebp
fcmovbe
insl
sbb
insl
push
in
adc
stos
mov
add
add
add
and
pop
je
loopne
and
inc
cmpsb
mov
paddsb
js
bound
in
pop
mov
test
inc
hlt
adc
and
mull
or
jno
imul
cltd
sti
jbe
ret
mov
jo
dec
push
push
loope
shr
cmp
mov
loopne
movsb
andb
add
and
cmp
int3
dec
sbb
jg
in
daa
dec
cmpl
sbb
add
inc
or
add
popf
loopne
sbb
mov
int3
enter
jl
mov
rolb
enter
add
aas
in
inc
test
sbb
xor
mov
push
mov
mov
mov
and
imul
pop
dec
in
repnz
loopne
out
ret
inc
jne
pusha
pusha
xchg
fdivr
jmp
add
and
movsb
add
xlat
push
pop
mov
mov
data16
cmp
fcomip
fists
dec
mov
fcoml
shl
loopne
imul
push
push
cmpsl
ljmp
shll
call
sahf
adc
loopne
test
push
mov
jmp
ror
inc
mov
insb
mov
pusha
mov
std
out
sub
mov
pop
clc
add
lea
add
lock
xchg
rcl
popa
fimull
jnp
ja
xor
out
mov
xlat
xchg
out
shlb
push
xchg
mov
sbb
pusha
and
std
jl
xor
lds
push
repnz
xor
lahf
addl
out
neg
in
sub
loopne
mov
cmc
idivb
or
dec
cmpsb
addb
inc
push
and
jp
out
push
scas
inc
push
ljmp
shrb
dec
ficoms
imul
pop
and
jge
lahf
mov
shl
inc
cmpsb
shlb
pop
call
and
js
mov
inc
pop
lock
sub
orb
inc
push
cmp
inc
sub
inc
sti
mov
addr16
push
or
negb
test
pop
cmpsl
xlat
iret
stc
pop
push
mov
insl
xchg
or
ds
loopne
loopne
in
xor
push
mov
and
sbb
add
popf
daa
fidivrs
mov
cmpsl
mov
add
pusha
out
cmp
dec
cwtl
out
pusha
rclb
pusha
aaa
pop
loope
ret
mov
mov
mov
and
inc
into
xchg
and
sti
test
add
and
add
mov
daa
enter
inc
inc
xor
and
pusha
mov
push
xor
sub
mov
jne
inc
fscale
cmp
inc
inc
xor
mov
rol
movsl
loopne
pushf
call
aas
insl
insb
jae
mov
push
jbe
addb
adc
aas
push
cltd
mov
mov
pop
icebp
push
pusha
rorb
movzwl
inc
pusha
cli
add
pusha
sti
xor
in
xchg
push
pop
scas
loopne
adc
add
sbbb
xchg
jle
iret
sbb
push
push
mov
add
roll
mov
fldl
mov
pusha
and
push
pop
out
loop
sbb
and
dec
dec
jle
and
add
dec
mov
inc
or
xchg
in
mov
pusha
nop
and
add
sub
mov
mov
icebp
fiaddl
inc
sbb
jmp
xor
adcb
inc
fucomip
outsb
sub
xor
and
add
dec
and
mov
fld
rcrb
es
das
sarl
lret
daa
lods
pop
dec
nop
pop
inc
jl
movsb
rolb
sub
mov
sbbb
enter
loopne
or
jns
inc
imul
stos
push
or
loopne
pop
movsb
add
add
push
sub
addb
into
fistpll
cmp
sbb
clc
stos
in
inc
sbb
nop
pop
add
sahf
mov
rorb
into
push
mov
jle
sbb
into
dec
inc
rcl
ja
add
shlb
inc
sub
aam
jp
push
cli
inc
xchg
out
aad
jae
ficoml
idiv
cmp
mov
push
aas
add
adc
shr
sbb
xor
sub
addb
mov
push
notb
mov
sub
pusha
xchg
dec
popa
push
lods
mov
and
pusha
and
or
push
into
fstps
sbb
mov
loopne
jnp
jae
sbb
sbb
iret
xor
inc
das
test
fbld
mov
int3
inc
xchg
fwait
jl
jge
sub
mov
repnz
aaa
outsl
xor
or
or
inc
stos
lcall
add
add
imulb
pop
pusha
pop
mov
cwtl
movsl
cltd
cltd
nop
enter
xorb
xchg
mov
repz
add
outsl
repz
dec
inc
jb
lcall
mov
loopne
lahf
mov
test
pusha
mov
lret
cmp
lret
mov
imul
sbbb
pusha
lahf
pop
and
and
mov
rorb
mov
and
cmp
mov
mov
outsl
push
leave
sbb
and
lahf
cmc
cld
jnp
rcrb
add
mov
or
mov
cwtl
xlat
aas
in
push
add
add
pusha
inc
dec
int
sub
movsl
nop
mov
pop
ret
and
pushf
jl
lret
lahf
pop
mov
dec
dec
imul
xchg
shlb
xorl
and
call
mov
maxps
fdivl
and
mov
movsl
ret
and
push
andb
adc
xchg
lods
inc
andb
mov
dec
subl
and
and
add
mov
and
add
lds
cwtl
daa
fldenv
inc
inc
cli
int
and
mov
and
shlb
or
jno
test
rclb
mov
and
lods
iret
mov
rolb
add
rol
subl
mov
stos
enter
jmp
addb
scas
pusha
mov
and
cmp
push
popa
mov
rcrl
punpckhwd
mov
outsb
push
shl
in
cmp
sbb
and
negb
ficoms
mov
jg
int
dec
jbe
out
adc
les
mov
rolb
add
iret
pop
lahf
sub
and
dec
sub
pop
mov
mov
je
andb
addb
das
dec
xchg
push
sbb
inc
add
stos
loopne
xchg
lahf
jg
and
pop
add
mov
loopne
mov
cmpsb
and
ds
jbe
sahf
int
icebp
lret
and
add
push
dec
ss
ljmp
andb
roll
pusha
sbb
adc
pushf
sub
shlb
add
xchg
mov
xor
mov
dec
std
fidivs
xchg
jb
lea
xchg
push
xchg
mov
jmp
inc
rolb
add
sahf
mov
pop
cltd
stc
sahf
sti
pop
pusha
xchg
push
shlb
push
pusha
loopne
xor
popf
inc
add
pop
cltd
inc
xchg
std
inc
iret
adc
add
pusha
add
cmpb
mov
mov
fcomip
pop
inc
lea
add
addl
mov
inc
push
mov
push
push
fildll
jno
sub
add
jmp
xor
pop
xor
rolb
sub
insb
outsl
mov
mov
icebp
and
inc
pop
popf
pop
mov
lods
add
pusha
and
out
enter
leave
xor
xchg
mov
xchg
xor
jl
test
jo
fwait
mov
fcomip
scas
push
lods
andb
and
adc
sti
fldcw
lahf
daa
cmpsl
shlb
dec
pop
sbb
les
ret
addb
mov
ret
dec
add
loopne
inc
xchg
mov
shlb
xchg
int3
sbb
mov
mov
mov
inc
mov
fimull
movsl
lds
stos
mov
cmpb
adc
xlat
sbb
inc
inc
cwtl
test
pushf
cltd
movsb
add
dec
mov
fistl
mov
sbb
imul
mov
mov
mov
pop
cmp
addb
loopne
pop
jo
push
arpl
mov
inc
sbb
lds
subl
xor
shlb
mov
aam
bound
repz
cmc
outsb
loopne
mov
andb
rcll
mov
mov
pusha
mov
sub
bound
lods
shl
mov
je
idivb
ret
gs
pop
mov
aam
pop
cmpsb
rolb
push
pop
gs
movb
and
xor
fnsave
push
insl
faddl
ret
jnp
test
loopne
sub
pushf
ss
out
xor
jle
adc
xchg
das
in
sbb
add
mov
add
add
stos
andl
add
add
add
mov
sbb
je
push
ret
cli
das
sub
and
sub
lods
daa
mov
push
mov
jecxz
push
ret
rcll
xor
add
jge
lcall
mov
in
or
mov
jae
dec
ret
dec
loope
shl
stos
jg
cmp
movsl
and
mov
pop
ret
add
sarl
mov
fsubrp
call
jo
stc
ret
and
mov
add
rolb
add
xchg
lcall
popa
jo
sbb
add
das
pusha
push
mov
std
scas
push
add
roll
cmc
inc
gs
ljmp
dec
pop
and
and
xchg
dec
adc
js
shl
out
test
add
addb
sbb
pop
in
in
adc
jmp
add
and
mov
cmpsl
imul
pusha
and
ficomps
push
dec
stc
popfw
cs
xor
aam
pusha
loopne
jbe
adc
push
adc
scas
loopne
jne
push
test
addb
inc
and
out
fwait
ljmp
push
sub
fwait
mov
sahf
loopne,pn
jne
xchg
addr16
inc
jecxz
pop
cmpsl
xchg
jmp
mov
dec
repnz
xorb
pop
push
dec
fildl
ljmp
shlb
jle
andb
adc
dec
xor
or
and
divl
dec
push
test
jno
push
xorl
adc
inc
inc
popf
jb
cmp
loope
mov
popa
cmp
gs
jmp
pop
mov
jae
xor
ss
pop
ds
xchg
repz
insb
test
push
inc
add
mov
sbb
inc
ljmp
inc
sti
sahf
out
cmpsb
pusha
add
cmc
and
mov
jo
mov
cmp
dec
push
rolb
aam
mov
std
inc
fidivrs
cld
cmp
repz
inc
ror
pusha
addb
jp
lahf
sbb
mov
mov
shrb
movsl
pop
ljmp
add
data16
inc
ljmp
xor
fwait
push
andb
and
orb
dec
test
sar
and
add
and
cmp
lcall
repnz
loopne
fildl
sub
ror
inc
and
dec
bnd
jp
cli
ret
pusha
and
loopne
int3
test
mov
hlt
fwait
pop
aas
inc
scas
and
andb
inc
pusha
push
hlt
xchg
fisttpll
sbb
fs
icebp
sbb
popf
frstpm(287
or
add
test
cmpsl
mov
cmp
mov
iret
and
pusha
loopne,pn
ljmp
jnp
push
cli
mov
ret
rolb
cmp
dec
pop
add
rolb
pop
andb
dec
addb
lods
shlb
cmp
loopne
cmpsb
pusha
loopne
idivl
cmpsl
ljmp
test
and
or
add
pusha
shlb
inc
push
popa
mov
rolb
add
inc
and
icebp
outsb
dec
dec
pop
es
push
leave
out
aas
es
ret
lahf
cltd
mov
shll
jnp
cmp
lods
loopne
imul
int
cltd
add
and
loopne
and
and
cmpsb
add
and
lods
inc
push
in
decb
addb
nop
inc
and
pusha
sbbb
iret
mov
pusha
add
add
dec
mov
out
stos
push
iret
mov
mov
addb
repnz
pop
outsb
or
add
loopne
imul
xor
and
push
pop
pop
iret
arpl
ja
and
pop
sbb
jae
addb
lcall
shlb
push
pusha
and
addb
xor
fs
shlb
inc
out
push
sub
and
pop
or
mov
mov
mov
push
inc
sarl
adc
mov
and
mov
out
out
fcoms
pop
loopne
mov
pusha
mov
and
shlb
jle
icebp
jg
jns
sub
or
inc
enter
mov
inc
rcrb
roll
cmp
loopne
stos
loopne
cmp
inc
inc
xor
and
cmp
inc
ss
fcmovbe
xor
jg
cli
or
inc
call
das
pop
iret
in
dec
pusha
negb
cwtl
or
movsl
shrb
addb
pop
enter
mov
cld
shlb
sti
push
dec
lcall
bound
or
push
les
out
cltd
sahf
cmp
cmp
mov
shlb
inc
mov
xchg
dec
clc
ret
fimuls
mov
outsl
sahf
push
xlat
xchg
lret
lret
add
push
cmp
cltd
les
add
or
inc
and
pusha
sbb
inc
orb
sarl
dec
or
jle
gs
movsb
rolb
jmp
icebp
hlt
nop
fildll
adc
mov
inc
inc
das
fwait
jle
inc
inc
push
movsl
xchg
adc
mov
leave
shll
inc
fnstenv
add
mov
stos
pusha
inc
fidivl
scas
aaa
enter
fwait
and
inc
jmp
lret
or
mov
popf
aas
jmp
outsb
mov
rcr
ret
dec
test
rclb
cmc
nop
cwtl
or
int
mov
mov
sar
fisubl
pusha
xor
mov
test
aaa
ja
shll
add
add
cli
sbb
test
jp
loopne
rolb
sub
add
push
push
out
cmp
rclb
pop
dec
mov
ds
and
pushf
mov
mov
inc
mov
addr16
scas
xchg
aam
in
das
jns
push
sub
sbb
add
mov
pop
insb
push
dec
ret
rolb
cmc
fldln2
andl
jb
add
dec
loopne
cli
jbe
add
outsb
xor
and
jno
hlt
test
or
and
sahf
jecxz
stos
shlb
pusha
xor
scas
add
jmp
pop
xor
mov
leave
aaa
fidivl
ljmp
xor
out
loop
out
pop
push
push
inc
ficoml
stos
scas
mov
push
xchg
sti
mov
jbe
add
rolb
cmp
sub
imul
lcall
inc
dec
inc
sub
sbb
sub
call
adc
xchg
add
cmp
fistpll
rolb
dec
outsb
push
sub
je
adc
sarl
and
and
sbb
jg
xchg
loopw
sub
andb
add
push
repnz
rorl
sub
mov
stos
mov
pusha
inc
icebp
es
add
jmp
rol
mov
inc
and
xor
cmc
mov
stos
inc
add
mov
and
mov
rcl
mov
pusha
mov
adc
push
mov
negb
pusha
mov
idiv
std
inc
xchg
lock
jp
sub
jge
xchg
addb
push
fadds
xchg
das
and
push
add
mov
shlb
lret
push
rol
inc
and
js
aad
mov
loopne
gs
out
xor
ljmp
addb
pop
sbb
fidivrs
mov
loopne
addb
lods
and
pop
sub
mov
adc
inc
or
push
popf
fisttps
adc
sbb
adc
inc
add
and
lret
stos
and
inc
scas
mov
and
push
in
jge
out
inc
imul
and
test
aas
adc
cld
pop
decb
and
add
adc
mov
jmp
add
mov
clc
xor
divb
jo
sbb
mov
mov
add
outsl
add
inc
inc
imul
add
mov
adc
jno
jp
add
xor
push
into
stos
imul
cmp
mov
xlat
push
jg
int
hlt
dec
xor
pop
aam
inc
mov
inc
in
das
adc
sub
enter
outsl
push
mov
in
add
or
fsts
jle
jne
inc
add
mov
leave
into
idivl
mov
dec
cmp
rcrb
sub
mov
popa
mov
pop
mov
pop
shlb
inc
rcrb
jmp
xor
in
push
jno
in
inc
mov
add
inc
in
incb
inc
mov
sub
andb
sub
and
loopne
jle
iret
sub
add
pop
loopne
jg
rolb
bound
repz
inc
push
dec
sbbl
mov
mov
imul
cwtl
fwait
repz
mov
and
pusha
out
lret
jo
and
pop
test
loopne
out
shlb
insb
xchg
pop
into
out
fcmovnu
mov
shlb
addb
inc
data16
push
mov
scas
add
ret
je
andb
cli
inc
cmp
cltd
test
adc
loopne
mov
ret
loopne
test
pop
xchg
repnz
shlb
mov
ljmp
iret
int3
movsl
idivl
loop
daa
movsl
or
inc
loopne
lret
mov
inc
sub
shl
cld
lcall
mov
lcall
addb
lods
inc
sbbb
cmc
in
addb
sarb
lds
cmpsl
adc
inc
mov
das
jno
xor
loope
sbb
mov
mov
cmp
fsubrl
pop
js
hlt
sub
inc
mov
sbbb
inc
mov
ds
mov
pusha
loopne
fs
mov
add
subb
loopne
fisubrl
loopne
or
sub
loopne
sub
out
adc
scas
mov
and
xchg
and
stos
jbe
pop
push
or
js
in
fldt
add
push
sub
and
jnp
lcall
inc
rorl
pop
jns
pusha
pusha
xor
data16
mov
pop
xor
mov
gs
hlt
xor
loopne
and
and
mov
add
or
add
and
push
andl
rclb
pop
cmpsb
loopne
adc
ret
shll
mov
xchg
jnp
ret
icebp
jle
lahf
sub
add
adc
loopne
jae
fstl
bound
and
mov
pusha
mov
gs
dec
xor
inc
vcvtsd2si
loope
mov
arpl
sub
pushf
adc
das
sbb
sti
cmp
andb
cmpsb
mov
loopne
insb
daa
jae
ds
dec
and
add
xchg
push
addb
sub
cmpsb
mov
add
iret
gs
mov
and
jp
pusha
loopne
add
adc
bound
add
leave
inc
inc
dec
cmp
mov
ret
and
push
bnd
andb
leave
std
or
add
mov
push
loopne
stos
mov
xchg
cmp
cmp
inc
testb
aad
stos
push
std
sub
dec
adc
mov
shrb
ds
sbb
scas
pop
call
inc
xor
insb
repz
mov
lret
pop
xchg
inc
fsubl
and
scas
inc
and
inc
push
jmp
lahf
imul
and
or
loopne
mov
adc
mov
jmp
int3
lcall
jecxz
popf
mul
inc
out
sub
xchg
in
mov
push
ficompl
cmpsb
inc
loopne
mov
in
es
add
out
dec
mov
loopne
loopne
xor
fbstp
pop
adc
test
cmp
std
xor
lret
xlat
adc
in
outsl
addr16
xchg
scas
shlb
shrl
rcl
lahf
sbb
icebp
pop
fcoml
mov
fistpl
sbb
sub
loopne
into
rolb
js
lahf
mov
push
inc
loopne
sbb
mov
and
pop
aas
inc
inc
inc
clc
add
and
sbb
add
nop
xchg
and
repnz
add
addl
jne
push
and
pop
jl
pop
add
rcrb
jg
lods
lahf
push
and
pusha
mov
pusha
inc
gs
in
cmp
fidivrl
or
loopne
pop
ret
mov
lahf
dec
cltd
fisubs
pop
lret
and
xchg
push
arpl
daa
cmc
mov
loopne
cmp
push
outsl
test
jecxz
sbb
add
sbbl
test
mov
outsl
lds
cmpsb
add
mov
call
sub
cs
ret
dec
icebp
test
and
sti
or
idivl
in
outsb
cltd
mov
and
dec
lea
pop
mov
xchg
push
sahf
sbb
pop
out
test
pusha
push
mov
shll
dec
jle
mov
popf
sbb
fwait
pop
lods
mov
loop
mov
movb
mov
mov
mov
xor
test
test
inc
xor
movsl
sbb
inc
retw
popa
imul
inc
or
inc
insl
cmp
cmp
cmpsl
cmc
adc
jg
and
or
add
andb
loopne
loopne
cmp
and
add
push
nop
stos
shlb
pusha
loopne
fsubrl
cmp
incl
inc
and
xchg
jmp
pusha
nop
mov
adc
add
inc
lahf
jb
cli
jmp
movsb
add
sub
inc
sub
pop
int3
faddl
rolb
xlat
and
mov
fstpl
and
fmulp
push
push
shl
sub
dec
ds
lods
int
shl
je
out
jle
mov
add
fimull
jnp
pusha
dec
push
sub
movsl
icebp
loop
leave
decb
out
and
pusha
and
mov
sub
xor
mov
fstl
sbb
sar
mov
jno
sub
arpl
loopne
jp
jns
inc
and
jns
pusha
orb
notrack
in
push
pusha
mov
adc
cld
push
mov
testl
xor
aad
jg
out
sti
sarb
lds
sub
and
mov
add
lret
mov
jecxz
pop
das
dec
pop
fidivrs
lods
shlb
xchg
insl
ror
mov
push
mov
ud1
test
dec
cwtl
pop
jno
aas
aad
add
cli
out
push
mov
mov
sbb
inc
add
test
subb
mov
mov
mov
mov
addb
dec
add
les
inc
add
adc
and
jmp
mov
add
xorb
stos
inc
add
pushf
in
mov
jne
xchg
insb
jge
mov
jbe
rol
add
cmp
loopne
in
xor
mov
and
test
dec
cmp
loopne
push
shl
fistpll
add
xorb
rolb
and
inc
xorb
dec
pop
sti
aam
in
and
mov
mov
loopne
mov
and
xchg
fisttpll
rcrl
rolb
into
xchg
jmp
fdiv
sub
rcr
sub
mov
pusha
add
dec
ret
sbb
dec
icebp
add
add
loopne
enter
sub
rorl
stc
fmuls
mov
dec
adc
shl
and
leave
xchg
or
xor
inc
ss
or
jnp
shll
pop
lret
jecxz
inc
add
and
loop
and
scas
andps
pusha
and
push
mov
mov
xor
and
mov
sbb
lcall
pop
mov
test
sahf
imul
mov
cltd
loopne
pop
push
sub
sub
and
mov
pop
test
inc
lods
das
pop
lock
sarb
xor
rclb
mov
fwait
dec
sbb
fwait
ljmp
jp
and
lds
addb
adc
movsb
and
push
or
std
cltd
cmp
mov
mov
mov
add
pop
outsl
mov
push
rclb
ret
call
rclb
xchg
mov
stc
clc
xorl
jp
inc
mov
andb
and
shrl
loopne
cmp
or
push
cmc
pop
fcmovnbe
lret
xchg
ret
std
repz
aad
lahf
mov
mov
pusha
addb
lods
jp
repnz
xchg
loopne
and
sarb
loopne
push
mov
sub
jmp
shl
cmpsb
mov
mov
ds
lock
adcb
mov
jb
pop
imul
mov
or
pop
ja
cltd
data16
xchg
gs
lret
dec
pop
jne
add
scas
pop
jne
cs
dec
divl
inc
mov
iret
jae
and
mov
push
add
pop
and
xor
scas
push
fnstcw
lea
inc
mov
mov
imul
inc
xchg
cmp
push
jmp
add
clc
and
ja
aad
add
mov
test
shlb
test
loopne
bound
sbb
rolb
stos
pusha
ror
add
and
pop
push
mov
push
xchg
repz
or
and
ljmp
loopne
mov
mov
lahf
sahf
jge
lods
loope
sub
sbb
xchg
fcmovne
or
shrb
cltd
bound
imul
xchg
adcb
out
and
stos
imull
mull
shl
pusha
shlb
sbbb
into
and
dec
sti
sub
into
lods
inc
rcr
adc
xchg
cld
and
sti
mov
jmp
loopne
or
loopne
ret
mov
sbb
pop
jmp
aaa
jg
mov
jl
or
pusha
add
hlt
bound
rolb
cmc
outsl
roll
fcmovnbe
mov
pusha
insl
xlat
lods
in
andb
add
shlb
mov
inc
and
sub
loopne
pop
icebp
push
aam
popf
loope
data16
or
mov
xchg
and
loope
ds
imul
mov
pusha
cs
xchg
fwait
add
pop
pop
cmpsl
mov
jmp
sbb
cmp
push
lahf
dec
pop
mov
pusha
pusha
mov
inc
insl
mov
add
pusha
mov
jo
push
mov
movl
inc
cvtpi2ps
fldl
xchg
aaa
push
cmp
dec
test
shrb
jge
mov
mov
sub
test
and
add
cmp
adc
and
sbb
xor
mov
jo
std
cli
stos
scas
andb
xchg
and
cld
loop
add
and
jns
cmp
addr16
rclb
pop
call
dec
jl
sti
xchg
test
andb
inc
loopne
inc
and
negl
fucom
scas
sarl
fwait
bound
sub
leave
xor
adc
into
lea
addb
push
mov
cmp
icebp
std
add
xorb
les
pusha
dec
js
mov
pop
mov
mov
dec
xor
and
inc
sti
into
in
inc
pop
mov
xor
clc
add
fadds
inc
and
sbb
sti
leave
dec
test
das
fucomip
insb
lahf
jno
sbb
inc
and
mov
and
inc
rep
inc
pusha
and
daa
ret
xor
mov
ja
scas
in
lcall
ret
and
cli
in
imul
jl
xchg
xchg
xor
insl
jle
add
add
pop
add
push
mov
jmp
inc
and
mov
xchg
mov
rolb
inc
and
adc
loop
add
xorb
enter
inc
lahf
xchg
mov
mov
xor
pusha
cmp
scas
rcll
cmp
jb
add
aad
in
and
pop
adc
xlat
xor
and
and
nop
fsubp
call
jae
mov
inc
cmp
fldcw
push
imul
push
adc
mov
push
ja
jbe
xchg
ja,pt
shrl
jmp
inc
loopne
stos
add
popf
int
and
push
mov
dec
or
out
and
rcrb
out
or
loopne
xorl
lret
aad
mov
inc
mov
cli
dec
fs
inc
and
aaa
jg
divb
mov
fildl
mov
loopne
rcr
out
or
pusha
out
xor
shll
mull
add
mov
stos
cmp
pop
cmpsb
pusha
pusha
pusha
jne
int3
jo
pop
mov
fdivrl
ret
xor
xor
loopne
lret
out
fnsave
rolb
or
sbbb
cli
dec
mov
sub
mov
test
fstpl
or
push
add
xor
sbb
jp
or
and
int
jb
in
movsl
in
loopne
cmpsl
loopne
fnsave
dec
xchg
rcrl
pusha
shlb
jbe
inc
xorb
shll
cwtl
mov
pop
push
sub
andb
mov
aad
fmuls
jge
inc
pusha
cmp
pusha
sarb
xchg
cli
or
bound
rol
loopne
pop
push
sub
xchg
and
das
mov
mov
add
add
and
lret
adc
lcall
sarb
ficomps
push
jae
sahf
xchg
push
and
mov
stos
loopne
sbb
sbb
movsb
addb
jb
mov
sbb
jb
popf
mov
mov
mov
loopne
loopne
cmpsl
aad
outsl
lea
jle
pusha
mov
nop
fidivrl
and
fstps
mov
addl
add
imul
sub
or
add
inc
xor
sbb
xorb
xchg
or
shr
pusha
pusha
jle
push
add
and
or
xor
inc
mov
push
negl
fistpll
jecxz
sbbl
scas
add
iret
sub
mov
fwait
insb
xor
addb
jg
stos
addb
and
imul
loopne
pop
mov
mov
mov
pop
dec
inc
lock
cmp
or
in
xor
vprotw
add
and
jbe
add
add
fdivrl
loopne
mov
and
push
dec
scas
das
lahf
lods
mov
jle
test
inc
add
loopne
mov
xor
add
fmuls
ret
push
inc
pop
out
xor
loop
jnp
test
loopne
pusha
mov
cmp
jnp
shl
lods
pusha
and
mov
loope
add
loopne
rorl
addb
imulb
add
cmc
dec
xor
outsl
pop
lcall
xor
lcall
pop
sub
pusha
push
or
mov
inc
and
dec
in
lock
dec
insb
scas
or
dec
mov
shll
sub
orb
xchg
stc
jns
jnp
aam
sub
shrb
add
mov
inc
add
and
test
int3
and
and
mov
mov
jnp
ljmp
addb
cmp
ja
pop
imul
insl
mov
insl
pop
jp
shlb
in
rcll
loop
imul
mov
mov
or
mov
subl
adc
add
fisubrl
xchg
add
rolb
push
shlb
scas
pusha
inc
insl
jb
fldcw
movsb
rolb
mov
ja
push
pusha
and
addb
call
loopne
pop
add
add
jmp
and
sub
addb
fdivs
and
jb
jecxz
mov
fidivs
mov
add
insb
sub
mov
jmp
push
adc
add
dec
mov
pusha
jno
in
jne
mov
mov
fldcw
pop
xor
and
mov
std
dec
jle
minps
sti
fs
andb
nop
push
loopne
push
add
int
jecxz
test
or
movsl
push
int3
addb
ja
out
cmp
mov
loopne
inc
iret
leave
rsqrtps
xchg
mov
mov
addr16
xchg
in
sbb
inc
push
rol
mov
sbbb
nop
loop
dec
or
loopne
pusha
add
xchg
cmpsl
jmp
dec
xor
or
andb
add
stc
or
mov
and
pop
dec
divb
jmp
cmp
and
adc
std
test
shlb
fcmovbe
sbb
sub
andb
mov
add
cmpsl
cmpsb
rolb
sbb
std
je
inc
and
mov
inc
mov
into
add
loopne
xchg
loop
add
fisubrs
mov
subb
and
movb
xlat
popf
mov
dec
dec
or
in
dec
mov
and
in
sbb
in
cmp
movsl
xchg
xchg
daa
aam
idiv
es
mov
mov
xchg
pop
daa
pushf
mov
mov
xchg
in
sbb
lcall
rorb
push
rolb
and
mov
inc
loopne
imul
cmpsl
adc
add
add
cltd
xchg
jnp
and
adc
dec
jb
fsubl
adc
mov
pusha
movsb
loopne
repnz
out
inc
add
shrb
and
and
and
in
loopne
and
jmp
and
sbb
and
pusha
loopne
pop
rorb
shlb
imul
push
lahf
ret
mov
add
jo
ret
push
sub
push
xor
and
popa
cmp
dec
dec
popa
mov
and
cltd
xchg
outsb
push
loopne
or
mov
inc
pop
int3
xchg
divl
xor
stos
pusha
mov
and
pop
mov
adc
lods
andb
loopne
fldcw
icebp
cmpl
or
dec
call
mov
insb
xor
push
test
and
lret
mov
sbb
fadds
negb
addr16
imul
rclb
stos
loopne
call
push
rol
pusha
and
mov
push
imul
into
jno
scas
addb
ficomps
pusha
inc
xchg
idivl
bound
inc
lds
test
daa
popf
xchg
jbe
cs
and
pusha
pusha
sbb
lahf
jno
push
leave
fwait
sub
cmpb
add
inc
jbe
inc
mov
cwtl
out
xchg
cmp
movsl
dec
jmp
inc
push
daa
inc
hlt
xchg
sub
pusha
xlat
lock
nop
aaa
pop
push
fcmovne
xchg
xchg
ret
movsb
pusha
and
adc
pop
int
dec
movsl
pushf
incl
rolb
inc
and
mov
mov
sahf
call
push
dec
xor
pusha
inc
lahf
inc
dec
sbb
and
push
xchg
cmp
inc
call
loopne
cmpsl
out
lret
xchg
xchg
xor
sbb
sub
fmul
or
inc
and
aam
cmp
out
mov
enter
mov
mov
jecxz
jle
fwait
xor
jns
xchg
xlat
add
loopne
cmp
pusha
push
fsubs
sub
jge
call
ja
pusha
loopne
fdivr
jle
int
scas
pusha
subb
and
outsl
xchg
fsubrs
push
rolb
imul
je
fimuls
frstor
adc
mov
fs
pop
mov
cli
jb
dec
arpl
cmp
inc
out
out
shll
std
daa
pop
daa
data16
xchg
mov
mov
std
out
stos
mov
add
xchg
mov
frstor
push
pop
mov
xor
push
test
loopne
jle
mov
sti
scas
inc
add
mov
add
addb
pusha
sbb
pusha
or
pop
movsb
inc
xor
inc
add
mov
and
mov
pusha
lahf
pop
das
mov
adc
mov
add
add
jne
sub
mov
and
ljmp
mov
adc
loopne
shlb
sbb
adc
dec
mov
sbb
sbb
test
insl
pop
or
lods
cmc
fdivrl
or
or
cld
jbe
cld
ret
push
inc
pusha
aaa
sub
iret
lret
sbb
and
pop
and
mov
fstl
int
and
jae
adc
and
inc
test
adc
idivb
jl
mov
repz
xchg
add
les
icebp
and
pusha
xchg
test
shlb
lretw
cmp
cmp
shr
sub
xchg
fwait
mov
add
xchg
push
inc
cld
cmpl
cmp
xor
scas
loopne
xor
push
cli
mov
xchg
pop
jle
fucomi
adc
js
call
repnz
in
fs
stc
pop
mov
add
rcrb
test
adcb
gs
mov
mov
add
insb
cmp
lcall
xchg
stos
loopne
sub
mov
inc
pop
add
or
dec
daa
and
add
mov
add
out
adc
and
sar
into
lahf
outsb
fidivl
lods
mov
push
push
and
loopne
pop
aas
pusha
xchg
adc
test
and
and
inc
rcrb
add
mov
mov
adc
shlb
xlat
ja
lods
lea
loopne
push
push
and
shll
pusha
inc
pop
jmp
jp
mov
mov
push
cmp
add
push
jle
fildll
inc
lahf
hlt
movsb
andb
test
and
xchg
outsl
xlat
pop
xor
cwtl
or
fstpt
xor
lods
inc
push
ss
repz
add
add
jae
pusha
in
sub
std
imul
and
and
je
pop
ss
mov
mov
and
add
inc
jne
sar
int3
aas
loop
mov
sbb
cld
jno
call
jmp
rolb
inc
cwtl
and
nop
inc
adc
loopne
gs
jno
repz
xchg
jge
add
and
pop
arpl
mov
aas
adc
xor
add
divl
int
addb
pop
outsl
scas
fwait
xchg
and
mov
clc
cmp
andb
repz
dec
jb,pt
and
pop
xor
adc
push
rorb
or
lods
and
push
adc
sti
or
push
loop
aaa
je
insl
arpl
mov
movsb
addb
mov
xchg
dec
add
push
pusha
add
loopne
andl
fwait
sub
pusha
pushf
adc
dec
shll
cmp
daa
fidivrl
push
addr16
enter
push
mov
inc
loope
cmp
addr16
xchg
mov
sarb
test
mov
xchg
pop
lret
mov
inc
and
adc
push
pop
test
shrb
sub
mov
mov
mov
sarl
rcl
lea
cld
xor
adc
cmpsb
pusha
mov
mov
add
pop
cmc
cmc
loopne
push
xchg
inc
pop
fmulp
popf
or
andb
inc
mov
dec
ljmp
or
add
je
outsl
mov
jnp
ret
inc
push
stos
loopne
mov
int3
nop
and
pop
loope
sbb
jle
pop
jle
fstps
and
inc
in
xor
jbe
addb
xchg
dec
xchg
andb
inc
add
bound
addb
in
addb
adc
rol
pusha
pusha
in
popf
xor
ficompl
dec
xchg
jbe
jo
rol
les
mov
inc
xchg
sub
andb
inc
pusha
dec
mov
push
mov
inc
dec
jp
roll
mov
sarb
mov
mov
xchg
mov
hlt
ret
stos
push
inc
add
add
movsb
add
mov
dec
cmp
test
shlb
sti
repz
sahf
sub
add
jns
std
xchg
pusha
adcb
mov
pusha
movsl
jle
outsl
cs
mov
shl
inc
inc
mov
mov
jns
lock
loopne
mov
mov
pusha
bsf
gs
fcmovnu
dec
into
push
pusha
shrb
stos
push
and
lea
dec
xor
jl
xchg
loopne
push
test
inc
les
and
and
mov
or
and
ror
addb
pop
mov
and
sbb
sbb
and
push
jp
sub
shlb
test
sub
subb
mov
push
rcll
cmp
je
mov
sahf
xor
stos
ja
stos
or
push
insb
xchg
out
int
cmpsl
in
adc
hlt
pop
fstpt
adc
mov
shlb
adc
mov
pop
sub
mov
inc
loopne
aam
ret
std
add
mov
cltd
jp
xchg
in
sbb
test
jb
iret
insl
dec
rcrl
inc
cmp
imul
in
gs
cmpsb
pusha
rolb
fs
pop
mov
loopne
inc
stos
rolb
inc
mov
call
mov
add
test
add
pop
jl
jne
test
mov
popf
xchg
jmp
inc
adc
mov
and
inc
call
and
add
add
mov
loopne
lods
lods
loopne
iret
xchg
rep
xchg
sbb
pop
lock
and
testl
int
fidivrl
sahf
lock
aam
and
push
mov
sbb
xchg
fnstenv
xchg
adc
add
cmpb
pusha
and
mov
add
outsb
push
or
les
das
inc
test
mov
mov
xchg
pusha
int
mov
data16
fcomps
mov
sti
filds
pop
add
inc
lret
push
loopne
pusha
rclb
pusha
sarb
pop
cmp
inc
mov
ret
jo
mov
mov
jge
bound
fisttps
cmpsb
addb
ja
test
add
andb
cmp
adc
mov
imul
and
and
push
mov
orb
cmp
loopne
out
lcall
lahf
push
lods
mov
push
ljmp
inc
outsl
xor
mov
mov
aam
mov
inc
fnstcw
movsb
add
fisubrl
cmp
gs
adc
jo
ret
lea
sub
sub
pusha
mov
push
in
sarb
icebp
mov
test
sbb
das
jg
inc
cmp
push
out
test
cmc
adc
jecxz
mov
pop
mov
ret
daa
ljmp
loopne
cmc
jmp
add
ret
jecxz
pop
inc
xor
lret
and
cmp
fldl
mov
stos
inc
and
jae
sysexit
test
add
push
rolb
inc
and
jne
pop
xor
dec
cmp
out
and
and
mov
outsb
fnstenv
lahf
es
add
dec
push
inc
mov
rolb
aad
mov
cli
cmp
xor
scas
xor
and
subb
xchg
push
pop
sub
pusha
push
mov
push
stos
stos
mov
cmp
add
cmc
imul
loopne
jl
test
xorb
mov
jo
dec
and
xchg
cmp
roll
fwait
sti
adc
cmc
int
sub
sbb
pop
scas
loopne
ss
aaa
and
push
push
data16
add
or
cs
lret
push
mov
shlb
aam
add
enter
mov
out
ror
stos
andb
cs
inc
mov
test
mov
pushf
xor
addb
push
lret
cmc
inc
das
jnp
xchg
aaa
insb
cltd
mov
imul
cmpsl
lds
add
cmp
mov
pushf
push
mov
inc
lret
loop
push
cmp
popa
sbb
or
orb
jo
mov
cmp
rcll
ds
lea
andb
loopne
add
rorb
add
inc
jl
cmp
in
sti
dec
mov
xchg
jp
andb
sbb
and
and
xor
mov
leave
inc
out
and
repz
out
rolb
add
add
mov
mov
mov
jecxz
in
or
sub
test
hlt
push
movsb
mov
outsl
test
inc
push
pusha
inc
dec
xor
daa
xchg
cmpsb
loopne
inc
outsl
nop
cmp
shlb
inc
repz
mov
sbb
in
jns
pop
outsb
lds
lret
add
div
dec
insl
mov
test
loopne
dec
test
cmp
sub
ret
es
mov
push
inc
ret
inc
adc
inc
add
xchg
sahf
stos
and
flds
popa
out
mov
ljmp
addb
inc
dec
stos
sbb
cmpsb
pusha
xorb
fsubrl
add
add
lahf
mov
push
xor
test
mov
adc
mov
cmp
jbe
sub
aas
shrl
jno
sbb
inc
add
pop
xchg
mov
adc
or
mov
test
stos
inc
and
mov
inc
xchg
movb
and
xchg
jbe
mov
clc
jns
repnz
test
inc
push
lock
call
fs
js
add
fistpl
loopne
mov
pusha
pusha
push
loop
adc
push
pusha
and
and
pop
jo
add
std
sub
push
je
add
lods
loopne
pop
sub
mov
inc
pop
add
loopne
pusha
and
fs
addr16
dec
repz
push
push
sbb
cmp
dec
out
inc
pusha
out
cli
test
cltd
jns
addl
inc
fs
sbbl
xchg
js
or
pusha
push
andb
or
mov
pusha
mov
xorb
sarb
xlat
in
fcomi
mov
mov
mov
repz
mov
jmp
mov
lcall
mov
xchg
or
aas
stos
mov
mov
loopne
sahf
sub
cmp
leave
cld
cmp
sbb
jge
incl
andl
out
movsl
push
fsub
adc
pop
cli
cmp
pusha
loopne
movsb
addb
movsl
mov
push
and
cmp
aas
jnp
fistpll
ds
xchg
addb
mov
subb
pop
xor
loopne
cmp
dec
cmp
movsl
repnz
fldcw
pushl
fsubrs
vcmppd
pusha
add
and
dec
cli
and
xchg
adc
in
into
sub
mov
insb
inc
inc
cmp
test
sub
and
sti
jo,pt
test
shrb
inc
push
pusha
mov
inc
jno
and
inc
pusha
or
add
push
jle
loop
loopne
add
daa
cvtps2pd
and
je
mov
pushf
xchg
cld
hlt
fistpll
pusha
rclb
fs
pusha
pusha
adc
jae
mov
arpl
inc
rclb
adcl
sbb
in
mov
mov
and
add
xor
cmp
shll
loopne
mov
sbb
mov
xor
fsubrl
mov
push
pop
out
pop
pop
daa
mov
data16
inc
inc
pop
aaa
into
cwtl
in
std
sarb
enter
sbb
xor
divl
xchg
fiadds
fiaddl
jl
mov
jl
mov
sar
pop
arpl
dec
das
outsl
les
popf
mull
rcrb
iret
lret
fwait
inc
mov
rcrb
lahf
mov
sbbl
jno
loop
pop
xchg
sti
int3
scas
add
fstp
inc
lock
cltd
xchg
dec
repnz
aas
dec
inc
repz
in
inc
xor
pop
mov
xor
pop
test
loopne
mov
daa
xchg
xchg
pop
mull
in
fdivl
push
push
and
mov
add
or
inc
out
adc
inc
push
pop
jmp
sbb
movb
sub
lcall
lcall
sbb
and
xlat
dec
rcll
pusha
sbbb
addb
jbe
adc
fs
leave
mov
andb
xlat
ret
push
adc
loopne
call
xchg
sbb
jmp
cmpsl
enter
loop
addl
cmpsl
pop
push
mov
arpl
orb
loopne
fidivrs
sti
imul
cli
pop
push
add
cli
sahf
testl
mov
mov
ja
pop
loopne
sti
and
aad
pop
mov
or
iret
in
repz
shr
add
sbb
fisttpll
loope
rcll
jbe
xor
inc
pushf
sub
and
push
test
inc
sbb
add
pop
inc
mov
mov
and
stc
jbe
mov
push
test
and
cmpb
pusha
xchg
cmpb
pusha
jg
mov
cld
add
loopne
add
mov
out
mov
lock
jne
sti
dec
push
pusha
xor
mov
jmp
loopne
in
mov
add
andb
scas
add
sub
and
mov
jecxz
xchg
and
ss
popf
jecxz
movsb
loopne
fstp
lds
mov
mov
shl
test
pop
pop
dec
or
addb
pusha
add
push
inc
sub
imul
or
and
sub
sbb
add
add
fisttpll
sti
mov
cmovle
andps
and
cld
imulb
shlb
dec
andb
addb
dec
and
pusha
push
loopne
jecxz
add
pusha
pusha
inc
pop
add
xchg
xchg
mov
push
pop
ja
add
cltd
xchg
loop
std
inc
xlat
ret
out
jge
and
dec
inc
mov
sbb
cmp
movsb
mov
std
cli
rorl
out
jo
xor
pop
jo
add
pop
imul
cltd
decb
push
add
shlb
das
fmuls
sub
adc
sbb
jo
ljmp
mov
stc
mov
xchg
add
lods
mov
ret
jbe
icebp
ds
add
stos
mov
daa
cmpsl
cmp
sarb
nop
mov
arpl
aam
test
mov
in
enter
lds
pop
pop
test
shlb
out
pop
or
loopne
repnz
sbb
stc
push
xor
mov
stos
mov
shll
pop
mov
inc
arpl
mov
data16
shl
jmp
sbb
mov
cmp
loope
mov
ret
sti
dec
mov
repz
mov
mov
pusha
lock
mov
push
adc
push
mov
imul
in
xchg
andb
out
int3
and
andb
and
or
loopne
jg
daa
das
add
and
adc
fcmovbe
or
push
mov
bound
ds
dec
inc
add
jbe
inc
mov
iret
dec
cltd
pushf
cmp
and
fwait
jbe
insl
aam
mov
in
ds
push
cltd
out
jge
inc
sub
sub
fcmovbe
imul
push
stos
rolb
cmp
pop
mov
test
inc
loope
pop
cmpsb
pusha
pusha
ficompl
aas
iret
xor
lret
and
pusha
pusha
mov
loopne
insb
mov
push
into
mov
pusha
pop
rorb
ds
jp
add
add
out
mov
daa
sbb
xor
js
cmc
add
and
xchg
shlb
add
stos
mov
mov
cmpsl
add
mov
mov
inc
mov
stc
ficoml
mov
data16
pop
adc
mov
dec
stc
or
pusha
lahf
addb
xchg
cmpsl
or
shl
add
mov
dec
data16
dec
bound
push
jmp
dec
sbb
pusha
or
pusha
pop
and
imull
rcrb
std
xchg
pusha
int3
inc
aam
addb
aad
and
jmp
icebp
movsb
and
mov
and
insl
pop
loop
add
inc
xor
push
loope
pop
test
inc
daa
loopne
or
ror
rcrb
add
add
in
shl
mov
aam
popf
bound
iret
daa
adc
cltd
and
into
pop
sbb
mov
sbb
add
inc
inc
dec
movsl
jo
fldenv
pop
xchg
jmp
sbb
mov
mov
pop
movsl
bnd
test
test
jnp
jo
ret
cmp
add
mov
mov
cmc
push
inc
mov
inc
jle
mov
cmp
and
xchg
jne
fstps
mov
aaa
not
mov
xchg
daa
loope
mov
test
bound
cmc
jp
mov
mov
and
mov
add
std
or
mov
xorl
push
and
pushf
add
or
inc
into
inc
out
repz
movsb
pusha
and
jge
cwtl
push
gs
xchg
mov
mov
adc
gs
addb
int
push
pop
mov
add
xchg
and
addb
ss
rorb
adc
outsl
ljmp
loopne
mov
rolb
call
jne
aaa
mov
jecxz
or
sarb
les
and
jg
les
mov
cwtl
imul
inc
cmpsb
mov
mov
pushf
xchg
xor
inc
loopne
and
lods
rcrl
aad
lret
add
addb
jmp
add
gs
pop
test
mov
mov
xchg
xchg
iret
stos
add
xchg
leave
xchg
mov
rclb
mov
fnstenv
xchg
mov
and
or
add
jle
les
pusha
sar
push
add
test
xor
and
loopne
inc
mov
adc
fbstp
inc
in
or
xor
dec
and
mov
sbb
pop
dec
lds
mov
mov
fadd
mov
and
shr
testl
or
js
sti
lret
add
mov
inc
das
mov
sub
pusha
cmpsb
add
in
jno
dec
repnz
inc
ss
stc
ror
paddsb
jecxz
ljmp
jb
arpl
int3
push
aaa
test
imul
mov
and
inc
and
andb
mov
inc
or
add
iret
ljmp
pusha
and
add
inc
mov
add
das
lret
push
iret
std
es
push
stc
jns
xchg
fiaddl
inc
pop
push
or
xchg
inc
sub
sbb
push
jle
add
gs
nop
jb
push
jno
cld
int
call
rolb
jmp
notb
rep
add
mov
mov
jae
clc
or
incl
ret
mov
push
mov
nop
std
out
lods
icebp
jmp
and
xlat
dec
cmp
fnstenv
cs
loopne
lea
psubusb
xor
sbb
popf
and
inc
andb
mov
mov
inc
mov
add
push
es
ror
in
aaa
mov
addl
aam
xchg
lret
rcrb
and
inc
mov
mov
mov
xorl
pop
shll
inc
sbb
mov
popa
inc
inc
and
xorb
push
push
mov
and
ffree
cli
cmc
sti
pusha
clc
push
repz
scas
mov
rolb
out
movsl
int
test
cmp
int3
and
add
aas
xchg
not
lret
psubusw
fimuls
mov
and
test
pusha
daa
jge
pop
mov
mov
mov
add
rorb
inc
fldcw
cmpsl
dec
add
inc
lea
insl
mov
inc
inc
or
daa
sub
test
movsb
add
mov
or
scas
sub
loopne
out
and
shlb
inc
shl
mov
mov
pop
dec
xchg
in
repz
insb
xorl
mov
loopne
add
pop
jl
and
adc
addb
inc
add
jle
in
es
jno
and
mov
adc
outsl
movsb
mov
popf
negb
ss
ret
ljmp
rcrb
lahf
push
aam
xor
lahf
movsl
cwtl
pop
das
insb
sub
out
sbb
jecxz
imul
or
shr
movsl
stc
cmc
jmp
lds
lods
add
sub
xorb
andb
fwait
mov
mov
adc
rcll
aam
mov
inc
and
push
sbb
insl
push
loope
and
add
mov
addb
fbstp
lahf
mov
pop
xchg
inc
push
or
xorb
pop
push
aad
fidivl
pop
xchg
cmp
xchg
mov
rcr
add
mov
lods
shl
push
outsb
sbb
inc
lods
and
mov
add
stc
dec
mov
loopne
hlt
cmp
pusha
inc
stos
loope
push
inc
outsl
pop
adc
call
pop
xor
pusha
adc
mov
jbe
shlb
inc
push
xchg
adc
rcr
inc
inc
inc
inc
and
insb
popl
mov
ror
dec
mov
add
lods
andb
lds
mov
rolb
and
decl
sub
rorb
add
int3
js
mov
inc
or
test
mov
push
mov
pop
cmc
push
sbb
shl
pusha
fcomi
mov
mov
jl
shrl
shlb
xor
mov
lds
or
shl
shlb
and
ljmp
movsb
inc
and
iret
adc
inc
rorb
mov
into
jo
and
loop
add
stos
and
dec
jo
pop
xchg
xchg
mov
inc
sbbb
shl
lods
add
in
loopne
lcall
nop
cmc
into
add
inc
xor
out
sbb
andb
cmp
push
mov
jle
and
push
xlat
sub
push
jnp
mov
and
shlb
out
mov
addb
mov
pop
ffreep
nop
idivb
mov
rolb
les
mov
and
mov
imull
mov
inc
ljmp
test
and
inc
stos
shlb
addb
daa
nop
or
out
leavew
sub
mov
test
outsl
mov
add
and
mov
sub
cltd
mov
pusha
gs
neg
imulb
mov
mov
and
popa
aam
arpl
mov
shl
dec
inc
sbb
mov
mov
decb
rol
push
hlt
mov
loop
pushf
mov
shll
cmpl
sbb
imul
jns
sarb
jo
mov
orb
and
imul
adc
pusha
das
lods
and
addb
and
mov
lods
and
outsb
insb
adc
mov
orb
enter
bound
pusha
mov
pusha
ds
testl
push
add
jae
jmp
test
pusha
cmp
pusha
loopne
mov
cmc
movsl
cmp
repz
mov
inc
mov
loopne
shlb
shlb
dec
ficompl
jae
jbe
xchg
and
and
inc
imul
add
push
test
pop
mov
and
repnz
int3
jl
jl
and
into
ret
mov
shlb
scas
addb
inc
or
and
push
hlt
enter
rcrl
add
rolb
xor
jo
shlb
add
pusha
pop
call
pushf
push
inc
lods
inc
mov
add
pop
stos
add
fs
xor
inc
sti
add
add
mov
inc
add
mov
loopne
fidivrs
loopne
popa
inc
in
inc
je
sbb
stos
pusha
loopne
out
add
adc
or
add
sub
andl
andb
jmp
pop
mov
and
adc
addb
ljmp
and
lds
sti
mov
add
adc
mov
insb
inc
clc
xor
sbb
nop
dec
sbbl
mov
and
aam
pop
jno
dec
inc
aam
std
in
fs
add
pop
sub
js
sub
rcrl
fwait
push
stc
into
stos
inc
shr
dec
pop
xchg
dec
xchg
xor
or
inc
popf
test
add
mov
mov
sbb
or
pusha
cmp
xchg
aaa
lds
mov
stos
mov
cld
bound
add
push
jl
and
shlb
loopne
aaa
rolb
loopne
mov
pop
inc
push
idivl
or
and
loopne
cmc
dec
jno
jns
add
dec
fadds
and
lods
cltd
add
mov
das
rolb
pusha
inc
xor
inc
sbb
rclb
movsl
adc
lods
stc
add
or
jge
ja
enter
icebp
and
xor
out
out
push
shlb
mov
pusha
inc
jecxz
push
ja
jl
aaa
imul
mov
loopne
jnp
xchg
flds
out
dec
shlb
sbb
or
add
add
in
push
dec
sbb
into
pushw
inc
and
inc
cmovne
mov
push
addb
inc
js
xor
fsubr
int
add
add
out
fists
pop
adc
shlb
push
shlb
pusha
cs
and
test
mov
dec
adc
push
and
pop
popa
mov
mov
shlb
nop
jnp
mov
mov
and
out
inc
nop
sti
push
pop
imul
and
add
in
dec
fwait
xchg
dec
movsl
insl
inc
add
sub
add
mov
inc
pusha
fs
out
pusha
enter
out
fwait
stc
dec
jno
rolb
sbb
mov
inc
pop
out
out
push
pop
mov
pusha
std
in
mov
xchg
and
sar
cmp
add
scas
mov
xor
dec
xor
pusha
leave
and
pop
or
mov
adcb
adcl
inc
lahf
jmp
sub
mov
add
dec
push
adc
add
mov
xor
jge
xchg
push
xchg
enter
lahf
cmp
mov
clc
and
sbb
mov
and
inc
cmpb
fbstp
and
pusha
pusha
pop
movsb
add
xchg
push
ja
pusha
loopne
loopne
mov
push
add
jp
xchg
int
fwait
lock
add
bound
std
mov
jp
aam
add
sar
nop
movsl
std
mov
push
push
inc
rol
gs
or
fadd
or
fmuls
lret
jo
inc
out
mov
sbb
add
mov
andb
adc
and
xor
xor
idivl
loopne
cmp
dec
test
and
movsl
or
inc
adc
xor
mov
cmpsb
pusha
cmp
loopne
add
out
xor
inc
xor
je
mov
lcall
iret
or
add
cld
andb
out
and
jg
nop
jmp
or
inc
jg
jge
sub
mov
sbbb
mov
mov
nop
lret
push
iret
or
adc
pop
mov
jp
and
ret
rol
mov
cli
test
rcl
xchg
pop
pop
push
loopne
inc
cmp
lock
xchg
movsb
shlb
js
jne
jle
push
mov
loopne
cmp
push
xchg
pop
in
cmp
push
inc
andb
add
rorb
rclb
movsl
out
test
and
imul
push
inc
fistpll
inc
imulb
addb
inc
push
cwtl
in
push
mov
fsts
xchg
add
mov
pop
inc
lds
xor
dec
fidivs
insl
pop
sti
cmp
add
rcr
inc
addb
loopne
aad
push
add
and
sub
and
loopne
pop
mov
fidivrs
inc
cld
mov
in
pusha
dec
movsb
add
sbb
pusha
inc
fcom
sahf
pop
mov
ret
push
pusha
subb
gs
rcrl
mov
jecxz
push
pop
leave
pusha
push
cli
gs
jb
add
andb
mov
push
ss
add
mov
insl
lods
imul
mov
and
adc
andb
add
mov
sar
xor
adc
icebp
imul
xchg
flds
nop
pop
mov
andb
jb
dec
aam
dec
divb
loopne
mov
mov
hlt
mov
push
stc
jns
andb
dec
movsb
addb
mov
outsb
jecxz
add
ret
pop
lahf
jno
ljmp
ficoml
xchg
cmpsb
andb
mov
shrl
mov
test
xor
push
fsubp
int
inc
icebp
cmp
and
jg
pusha
shrb
rolb
mov
loopne
test
xchg
faddl
loope
inc
je
ja
js
pop
lret
pusha
cmp
enter
mov
mov
loopne
int3
cld
xchg
sbb
inc
shr
and
mov
xor
or
xor
jbe
sarb
out
fbstp
cmp
loopne
shrl
pusha
or
lcall
mov
fldl
push
daa
inc
lret
push
pusha
mov
sbb
aam
jecxz
xor
mov
js
enter
loopne
sub
adc
insl
mov
pop
mov
ret
insl
push
fmuls
test
push
push
xlat
or
jb
jnp
mov
jmp
cld
lods
test
imull
adc
icebp
mov
andb
cmpsb
inc
rol
addb
ss
test
pop
adc
mov
andb
jecxz
int3
push
mov
mov
loopne
incb
lea
pop
jmp
and
gs
jae
inc
dec
sub
mov
les
sbb
mov
enter
mov
xor
in
mov
and
mulb
sbb
clc
je
xchg
cmp
xchg
into
xor
rolb
add
inc
lret
aad
adc
enter
mov
fstl
shl
push
push
out
out
sarl
xor
push
sub
xor
test
mov
cmpsl
lods
adc
pop
in
sub
insl
xor
sbb
loopne
and
pusha
pop
fs
jns
push
pusha
inc
int3
mov
cmp
aas
inc
or
das
ret
hlt
pop
fistpll
lds
loopne
int
cwtl
stos
addb
outsl
mov
in
cmp
inc
sarb
test
and
iret
mov
xor
pop
iret
xchg
test
stc
push
push
dec
rcll
sub
cld
out
adc
data16
aas
fiaddl
mov
adc
loopne
js
xchg
sbb
push
cmp
pusha
hlt
pop
push
inc
add
dec
or
inc
sbb
sbb
hlt
dec
in
in
push
lea
into
cwtl
loope
cwtl
jg
xor
addr16
or
loopne
and
rclb
subb
or
stc
push
adc
inc
pusha
lret
push
push
mov
and
inc
ret
dec
scas
addb
cmpsl
mov
rol
sub
mov
inc
mov
dec
mov
hlt
push
pusha
xorb
fwait
js
push
pusha
mov
jne
pop
js
add
imul
mov
rol
mov
shlb
jmp
add
dec
in
mov
xor
ljmp
inc
adc
inc
sarb
sti
stos
add
dec
add
dec
lcall
ret
test
dec
call
out
mov
inc
add
cmp
js
sbb
mov
xchg
pop
pop
or
les
sub
add
and
fwait
cwtl
testb
loopne
leave
push
jge
adc
ds
sub
mov
and
rol
mov
inc
int
dec
add
and
fs
or
cs
inc
add
and
lret
mov
sarb
jg
jb
push
mov
aaa
or
shll
jae
or
shlb
cld
push
sub
push
pop
hlt
adc
shlb
mov
inc
loopne
int3
cmc
push
lret
xchg
aad
lcall
mov
mov
cmp
add
andl
xchg
aam
add
adc
js
push
je
add
loopne,pn
ret
inc
fidivrl
or
cmp
add
mov
andl
pusha
pusha
inc
popa
push
pusha
mov
in
rolb
mov
addr16
sbb
xor
scas
jg
cmp
ljmp
jns
call
add
and
jl
dec
xchg
xor
sub
pusha
jmp
add
xor
pusha
hlt
jo
pop
mov
loopne
sub
inc
or
mov
fildll
inc
add
pop
cltd
outsb
shrl
scas
and
mov
test
addr16
arpl
int3
jl
or
loopne
and
ljmp
daa
ds
or
mov
xor
outsl
mov
add
pusha
pop
add
les
cmp
out
pop
adc
sub
orb
inc
ja
inc
loopne
mov
pusha
jne
leave
cmpsl
and
and
les
orb
aaa
sub
jl
cmpl
gs
cmp
popf
andb
jns
pusha
loopne
add
out
fs
ljmp
and
mov
and
in
push
mov
sub
inc
pop
mov
jle
fcmovnb
mov
stos
aas
jmp
into
push
mov
jns
pop
mov
shlb
add
push
lock
jle
mov
pop
int
jmp
aam
loopne
nop
jg
add
jecxz
loopne
mov
mov
ja
popa
cmp
frstor
pusha
loopne
shr
jg
mov
iret
mov
cmp
orb
loopne
cltd
pop
dec
daa
mov
test
inc
outsl
cmpsl
lds
inc
mov
leave
movl
shlb
cld
mov
sbb
mov
sar
inc
repz
out
cwtl
mov
popf
shlb
pusha
mov
hlt
aad
dec
xor
sti
movsb
loopne
outsb
test
subb
iret
fildll
inc
xor
xchg
lret
jl
shl
pop
imul
lahf
aaa
ficompl
jg
ret
in
pop
xchg
in
pop
or
mov
cmp
push
dec
mov
ja
aaa
adc
xor
or
and
ja
dec
pop
hlt
out
add
and
xor
cmc
aad
pushf
push
shlb
icebp
and
inc
dec
jbe
jns
fsubr
cmp
loopne
cmpsb
shlb
cmp
jge
lret
adc
scas
int
mov
push
ja
pop
xor
fisubrs
push
xchg
xor
mov
mov
mov
pusha
sub
loopne
lret
sti
call
mov
adc
mov
and
push
rolb
adc
push
and
hlt
push
int3
mov
xor
daa
roll
rclb
leave
cmpsl
add
rcrb
pusha
add
ljmp
and
inc
sub
loopne
jmp
inc
pusha
icebp
iret
xchg
scas
adc
xchg
test
test
loopne
push
or
inc
shrb
jecxz
and
mov
mov
mov
mov
push
je
in
mov
pop
andb
add
add
loopne
scas
cmp
shlb
les
mov
aad
leave
scas
rolb
shlb
shlb
popa
and
pop
adc
pop
mov
pusha
and
inc
mov
push
shl
xor
dec
sbb
addr16
adc
and
push
pop
mov
rolb
repz
push
jecxz
mov
mov
cmpsl
movb
fcomps
repz
lret
dec
je
pushf
sar
jne
push
push
fs
mov
jb
mov
mov
icebp
sbb
jp
jno
push
cmc
cmc
testb
or
add
adc
loop
rolb
