add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
or
add
add
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
or
add
add
or
add
or
add
or
or
add
or
add
or
add
add
add
or
add
or
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
or
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
or
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
or
add
add
add
or
add
or
or
add
add
or
add
add
add
add
add
or
or
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
or
or
add
add
or
add
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
or
add
add
or
or
add
add
add
add
add
or
or
add
add
add
or
or
add
add
add
or
add
add
add
add
or
add
or
add
or
or
or
or
or
add
add
add
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
add
or
or
or
or
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
or
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
or
or
add
or
add
add
add
add
or
or
or
or
add
add
or
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
or
or
or
add
add
add
add
add
or
add
add
add
or
or
add
add
or
or
add
or
or
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
or
or
add
or
or
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
or
add
add
add
or
add
or
or
add
or
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
or
or
add
or
or
add
or
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
or
or
add
or
add
or
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
or
or
add
or
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
or
add
or
add
add
add
or
or
add
or
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
or
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
or
or
or
or
add
or
add
add
add
add
add
or
or
or
add
add
or
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
or
or
add
add
add
or
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
or
or
add
add
or
or
or
add
or
add
add
or
add
or
or
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
or
add
add
add
or
add
or
add
add
or
or
add
or
add
or
add
add
add
or
add
add
or
add
add
or
add
add
or
add
or
or
add
or
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
or
add
add
or
or
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
or
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
add
or
add
or
add
or
or
or
add
add
add
add
or
add
or
or
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
or
or
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
or
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
or
add
add
add
or
or
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
or
add
add
add
or
add
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
or
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
or
add
add
add
add
or
add
add
or
add
or
add
or
add
or
or
add
or
or
add
add
or
add
or
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
or
add
add
or
or
add
add
add
or
or
or
add
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
or
or
add
add
or
or
add
add
add
add
or
or
or
add
add
add
add
or
or
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
aaa
stos
fs
push
dec
ret
movsb
gs
sbb
stos
inc
mov
fdivs
iret
rorb
mov
lcall
add
add
mov
mov
lea
loop
sbb
mov
lcall
popa
pushf
inc
sbb
shll
add
stos
mov
pop
and
jb
add
or
add
add
cmc
nop
xchg
out
sbb
ret
orl
stos
cld
dec
mov
adc
pop
add
add
add
ja
or
add
add
cmp
out
jp
and
add
add
dec
add
add
cmp
mov
add
jb
cmp
jbe
cmpsb
sub
push
inc
inc
or
add
sub
mov
jnp
pop
jae
push
sahf
ret
jns
mov
mov
jecxz
imul
roll
push
add
lea
add
pop
imulb
lret
add
add
add
or
add
add
push
cli
lea
stos
lahf
in
lahf
dec
mov
insb
mov
aad
lds
push
or
adc
mov
jbe
mov
cmp
and
shrb
sub
ss
add
cmp
pop
mov
out
jo
nop
jecxz
orb
stc
pop
ja
cltd
jle
hlt
scas
push
mov
stc
cmp
xchg
sub
inc
rol
push
and
dec
sarb
repz
pop
rcrl
idivb
dec
mov
pop
in
cmpsb
mov
and
add
add
push
xchg
add
mov
mov
xchg
mov
sbb
fldenv
mov
aam
inc
lock
mov
xchg
dec
mov
psubsw
pop
push
rclb
mov
xor
push
ds
mov
push
lret
xchg
mov
cmp
or
add
add
mov
pusha
mov
ljmp
add
lds
jno
cli
les
sbb
add
loop
mov
add
add
add
add
jns
mov
xchg
testl
pop
sbb
xlat
sbb
xlat
pop
mov
imul
sub
fwait
movl
push
jnp
outsb
fstpl
pop
mov
ja
sbb
lea
cwtl
ret
mov
mov
rcr
mov
add
add
xchg
mov
movsl
in
out
push
mov
jnp
loope
mov
jae
mov
push
out
ret
mov
in
mov
mov
out
out
push
sub
add
repz
mov
add
into
movb
jbe
sbb
add
andb
pop
add
mov
inc
add
add
push
pop
mov
movsb
sbb
std
fadds
add
add
add
add
in
stos
mov
cmp
ds
ja
jecxz
jno
jnp
subb
jae
popa
mov
lods
fstps
mov
mov
xlat
xchg
in
add
add
in
icebp
arpl
mov
add
ret
scas
pop
insl
fwait
and
add
add
add
dec
lret
sbb
jecxz
mov
add
cmp
loop
arpl
push
and
add
add
mov
add
xchg
ja
in
inc
in
pop
adc
lods
cmp
divl
cli
jle
scas
ja
cli
and
pusha
mov
mov
xor
mov
in
rcll
add
or
add
add
jecxz
add
add
add
iret
adc
aam
int
hlt
js
inc
inc
mov
sub
add
cmp
sub
jns
sbb
cmpsb
push
or
inc
rorb
inc
sub
je
out
fimuls
add
add
add
ret
mov
mov
fisubrs
add
add
add
ficomps
cmpsb
jge
jg
jno
cmp
add
jecxz
test
adc
push
and
sbb
ret
dec
xor
outsl
imul
or
sbb
or
add
add
add
add
or
push
out
and
add
add
lock
clc
arpl
cmp
pop
inc
repnz
add
add
hlt
cmp
es
out
xchg
cmp
andb
push
xchg
pop
add
add
sub
arpl
jae
scas
push
movsb
xchg
push
xor
hlt
xchg
lret
inc
or
xor
fimull
addr16
mov
insl
and
iret
mov
pop
xor
add
add
ljmp
add
add
in
rcrl
mov
aam
add
add
idivl
ljmp
popf
stc
lock
nop
xor
adc
add
mov
jg
add
add
sub
into
das
add
mov
sub
or
jg
inc
loopne
jmp
push
es
push
test
push
dec
xchg
gs
xchg
ja
dec
add
add
mov
xlat
mov
and
addr16
push
int3
out
jl
test
add
add
or
add
add
cmp
movsb
imul
add
add
add
adc
insb
mov
lds
add
add
nop
mov
add
add
jbe
cmp
test
addb
add
push
outsb
addr16
xchg
loopne
ds
jns
call
je
popa
movsb
and
add
add
mov
lret
popf
sub
push
sbbl
pusha
mov
push
lds
aas
xchg
add
add
and
and
push
sbb
push
mov
dec
mov
dec
add
add
pop
jg
inc
mov
add
mov
je
push
sarb
add
add
jl
mov
add
push
mov
add
rcrb
dec
fidivs
fisubrs
je
pop
mov
mov
jbe
pop
stc
fstpt
mov
loope
inc
aas
pop
iret
fdivrl
push
lods
cmp
xlat
push
pop
jbe
mov
repz
mov
jg
out
pop
inc
cs
les
int
jne
lods
cwtl
mov
add
add
mov
clc
les
lret
mov
add
dec
mov
add
add
mov
inc
xchg
cmp
or
add
xlat
xchg
testb
subb
cmp
es
dec
mov
lcall
add
add
daa
and
aas
mov
and
pop
cmp
into
in
xor
clc
pusha
mov
cwtl
xor
add
add
add
add
rcrb
mov
cmc
lock
push
jbe
out
or
add
add
sub
and
add
add
dec
mov
int
jl
scas
in
mov
jno
jp
pop
hlt
sbb
or
pop
aad
ret
popl
ljmp
in
movsl
in
repz
imul
mov
jg
and
or
adc
ds
xchg
jmp
in
inc
pop
mov
jmp
in
xor
add
hlt
cmpsb
divb
cmp
pop
mov
add
pop
clc
cld
sbb
push
adc
fcomps
decl
add
add
shl
and
mov
add
add
add
mov
movsb
stos
cs
push
fcmovnb
lret
fdivrl
add
rcrl
test
enter
mov
fisubrs
add
add
roll
loopne
mov
cmp
add
add
cwtl
mov
movsl
jns
lret
cmc
mov
test
int3
outsl
orb
jne
xchg
mov
pushf
jbe
lea
add
shlb
stc
repnz
mov
gs
xorl
lret
addr16
aas
jnp
jb
fsubp
dec
add
add
adc
dec
inc
mov
dec
mov
jmp
mov
outsl
movsl
cmp
out
scas
sahf
aad
add
add
pop
dec
mov
jecxz
mov
sub
pop
push
aas
fs
movsl
loopne
dec
jecxz
sar
add
add
add
add
jae
mov
lods
rolb
add
add
mov
lret
or
cli
and
add
add
dec
add
cld
mov
mov
cmp
stos
ja
xor
add
in
sub
add
add
inc
add
add
loop
icebp
mov
sbb
add
sti
bound
sti
push
cltd
cmp
add
mov
mov
sub
popa
xor
out
sbb
and
jns
das
mov
mov
jp
add
add
add
scas
pop
loop
push
call
add
or
ljmp
pop
into
sbb
mov
fidivrl
imul
ljmp
sub
add
add
xchg
xor
mov
mov
stos
adc
adc
pusha
mov
add
add
add
sbb
cmp
fwait
repnz
loope
cmpsl
inc
mov
adc
leave
pop
push
mov
clc
mov
xor
add
cmc
nop
xchg
mov
add
or
lock
add
dec
stc
push
out
pop
xchg
in
mov
sub
pop
push
pop
sbb
pop
sti
clc
ficoms
cmp
popa
mov
jecxz
jno
mov
adc
add
ss
loope
cmp
inc
cld
stos
fstpt
pop
data16
cmp
cld
sub
iret
sbb
mov
std
ret
in
sub
add
jmp
std
movsl
push
out
jnp
mov
mov
cs
add
add
or
test
xchg
imul
repnz
mov
lahf
pop
es
add
add
inc
int3
fcoml
fildll
add
add
and
add
add
push
and
testl
inc
xor
push
mov
jle
mov
adc
push
in
dec
or
add
add
cli
jle
or
insl
pop
out
add
test
mov
inc
pushf
jmp
xchg
test
adc
jmp
shll
add
add
or
add
add
ret
push
sub
cld
mov
add
add
fwait
bound
cli
dec
and
mov
pop
jp
bound
add
add
lcall
adc
int
ret
add
add
add
add
mov
bound
cmp
arpl
add
xchg
mov
pop
hlt
cmc
stc
rolb
add
test
jmp
mov
mov
add
add
dec
test
and
pop
outsb
bnd
inc
std
pop
adc
and
add
add
add
mov
jae
cmpsb
dec
add
fimull
aas
pop
out
mov
xor
push
push
inc
add
add
add
in
test
mov
mov
pop
lret
aaa
popf
jecxz
lods
das
push
mov
xor
std
lcall
insb
add
add
cltd
rcrl
aas
pop
in
mov
add
inc
add
add
jo
push
les
cmovge
mov
pop
adc
mov
movsb
or
add
add
push
jne
repz
jb
repz
pop
jne
xor
mov
inc
cmp
add
add
dec
inc
push
pop
icebp
addl
dec
mov
dec
mov
call
add
xchg
call
adc
leave
cld
mov
add
add
int3
aam
mov
mov
mov
xchg
jo,pt
clc
dec
jns
ljmp
or
add
add
jecxz
sub
add
add
ret
mov
std
xor
xchg
mov
mov
jmp
jle
push
cmpsl
adc
sti
and
and
add
add
popa
aaa
add
add
add
cmp
add
add
hlt
ret
gs
xor
lods
in
jg
sbb
js
cld
inc
sti
adc
mov
ret
sahf
mov
imul
lea
add
add
adc
adc
cld
jle
lcall
xchg
mov
mov
pop
daa
sbb
mov
in
jg
dec
pop
pop
push
inc
xchg
push
fwait
sub
repz
pop
add
add
add
xchg
sub
add
add
xchg
inc
enter
out
cmp
das
add
mov
int3
jmp
xchg
jnp
and
test
movsb
mov
add
add
sti
cmc
mov
cwtl
lods
and
mov
mov
add
add
or
loop
mov
jns
out
push
loope
iret
ds
popa
pop
movsl
sub
add
add
add
add
xor
out
jb
jbe
aaa
jecxz
pushf
xchg
enter
sub
nop
jb
movb
add
add
andb
shll
test
jnp
pushf
sar
lcall
cmp
pop
xor
loopne
jmp
adc
xchg
fidivs
pop
ja
mov
pop
or
add
fadds
out
mov
jne
cwtl
and
add
adc
add
add
mul
mov
inc
add
add
ljmp
add
adc
pushf
jle
and
mov
clc
push
mov
xor
les
paddsb
add
add
test
add
add
mov
scas
sbb
mov
push
push
lds
nop
ljmp
imul
mov
imul
leave
mov
or
dec
push
imul
dec
add
add
xchg
pop
jmp
adc
outsl
ficompl
nop
loope
loopne
mov
xchg
mov
adc
add
add
and
add
add
mov
out
std
inc
ljmp
sub
popf
rorb
mov
fldz
inc
scas
ss
sub
add
add
add
data16
and
add
add
outsl
lcall
xchg
push
iret
or
add
add
add
add
add
add
jno
xchg
mov
mov
and
push
mov
lock
js,pt
cmp
add
sbb
sarb
addr16
frstpm(287
icebp
sbb
push
rcrl
lock
or
aaa
nop
into
mov
add
add
ja
pop
and
shlb
data16
add
add
add
aas
daa
ds
or
adc
adc
stos
sarb
data16
pushf
clc
scas
repz
aas
inc
mov
les
push
add
pop
aaa
adc
mov
add
add
mov
jb
scas
jo
cmc
jae
sbb
test
pop
cmpsb
mov
mov
aaa
mov
xor
add
add
nop
mov
call
js
mov
cld
ret
push
jns
imul
jg
or
add
add
mov
add
add
add
push
jg
mov
sub
cmpb
jns
testb
and
and
fcompp
iret
lretw
add
add
sti
sub
in
jbe
dec
aad
and
insb
mov
cmp
jo
add
add
cmp
adc
add
add
fucom
in
add
into
sbb
aas
mov
shl
sub
es
loope
das
cltd
push
add
add
add
xor
fimuls
xchg
xchg
mov
add
sbb
ret
mov
dec
negl
push
nop
outsl
cwtl
push
dec
xchg
xchg
addl
aad
in
fistl
enter
xor
dec
xor
ret
sub
xor
add
add
addr16
mov
mov
inc
in
pop
repnz
add
add
dec
xor
adc
cwtl
lahf
xchg
mov
add
or
push
repz
xchg
loope
or
add
add
add
xchg
sti
xchg
mov
adc
sti
cmp
imul
imul
push
sub
push
sahf
out
lcall
add
pop
push
iret
add
shl
add
add
sub
loopne
popf
imull
add
add
inc
mov
pushf
fdivrl
lock
xchg
xor
loop
jb
add
add
dec
push
adc
nop
or
add
inc
pop
and
add
add
add
sarl
inc
jmp
xor
add
addr16
xor
pop
xor
mov
lret
jno,pn
scas
push
js
xor
jne
test
add
add
negl
jne
xor
add
add
or
roll
ds
push
push
inc
cmc
push
or
adc
and
add
out
and
add
add
lret
adc
int
mov
xchg
jp
lds
xchg
negb
mov
mov
imul
insb
mov
fidivrl
cmc
aad
lcall
loop
mov
mov
jle
out
cmp
pop
repz
cmp
lcall
jecxz
jp
in
test
xor
dec
movsb
cmp
in
int3
push
js
push
movsb
inc
add
add
add
test
popf
mov
add
add
pop
out
jmp
cmp
bound
cmp
add
push
mov
movsl
cmp
or
add
add
incb
add
add
push
inc
mov
jl
lea
lret
push
clc
xchg
xchg
mov
dec
test
fbld
pusha
add
add
ret
xchg
inc
test
popf
cli
inc
mov
testl
movhps
add
add
nop
add
add
add
adcl
adc
shr
pushf
sbb
add
cli
mov
add
add
lods
cmp
pop
inc
jg
xor
add
add
xchg
add
add
add
daa
xchg
xor
stos
or
addr16
lret
rcrb
inc
xor
and
add
add
jnp
lea
mov
push
xorb
imul
add
add
loopne
lcall
inc
or
andb
add
roll
add
add
in
cmp
xor
mov
cmc
ds
popa
ror
in
mov
add
add
add
add
jb
cwtl
mov
idivl
mov
das
inc
xchg
filds
cmp
add
add
dec
add
add
adc
add
ja
inc
dec
ss
repnz
add
add
mov
pop
mov
add
add
mov
clc
popa
sarb
sbb
add
add
push
mov
add
add
in
imul
insb
mov
jg
mov
push
jle
int3
cmp
mov
mov
hlt
add
add
add
mov
jb
mov
mov
insb
add
add
cmp
add
add
mov
add
add
xor
fldlg2
gs
sub
add
add
fcompl
inc
push
mov
pop
inc
aaa
pop
add
aad
pop
aad
push
xor
adc
es
lea
cmpsb
mov
test
cltd
in
inc
mov
adc
add
add
in
pushf
aad
add
add
sub
sbb
mov
imul
mov
add
push
push
outsb
js
fisubl
sti
pop
repnz
push
inc
sbb
gs
repnz
xchg
pop
and
xor
sub
jp
xor
xchg
ss
iret
adc
ljmp
stc
nop
fldenv
mov
and
mov
movsb
or
add
add
sub
add
add
push
cmp
lods
or
add
add
je
outsb
mov
jns
xchg
ret
xor
push
cmpsb
stc
and
add
add
add
add
add
aam
dec
js
dec
mov
cmovae
std
adc
mov
jne
mov
insl
cmpsb
outsl
sub
aad
sub
inc
add
add
mov
add
add
jmp
push
lods
pop
xchg
je
pop
inc
lea
inc
popa
mov
mov
jle
push
push
movsb
out
out
pop
popa
hlt
subb
adcb
pop
and
lock
mov
outsl
or
add
add
imul
add
add
das
orb
mov
andb
std
fistl
pop
aas
mov
push
pop
data16
xchg
lds
lock
test
xlat
int
sbb
inc
jle
mov
adc
je
push
cmp
or
add
add
scas
sub
int3
lock
add
test
cld
int3
inc
sbb
add
add
sbb
or
inc
jae
xor
int3
iret
mul
ss
lods
into
sub
rcrb
add
dec
mov
ret
psadbw
ficomps
call
in
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
mov
jmp
sub
outsb
mov
negb
mov
mov
mov
and
add
add
add
add
sarb
push
inc
push
ret
mov
adc
fisubl
adc
enter
add
add
sub
mov
push
jp
and
add
add
test
ficoml
sub
test
jge
lds
in
add
add
fwait
add
ljmp
mov
mov
pushf
dec
and
std
aam
pop
mov
cmp
negb
pop
inc
mov
dec
add
jmp
aam
mov
xorb
add
add
adc
jl
gs
test
arpl
fistpl
out
xlat
sti
adc
mov
mov
add
add
dec
fwait
bound
mov
mov
push
dec
mov
out
dec
add
add
les
inc
cmp
xchg
and
mov
add
mov
hlt
mov
jae
cld
mulb
mov
daa
and
push
cmpsl
loop
pop
int3
jnp
mov
sbb
inc
mov
aam
jl
and
pop
leave
pop
clc
lods
mov
sbb
add
add
or
xchg
jle
shlb
add
add
add
jns
fmuls
mov
ja
je
push
mov
out
adc
in
xorb
mov
inc
adc
lock
mov
jl
in
fcmovne
andl
repnz
imul
pop
xlat
xor
in
repnz
add
add
rol
xchg
loop
jge
lods
js
add
cmp
cwtl
xor
jmp
add
adc
xor
flds
and
jnp
inc
jnp
in
push
mov
int3
arpl
out
fwait
push
add
add
lret
lahf
push
pop
movsl
jno
xchg
xor
adc
pushf
outsl
dec
inc
fwait
out
inc
test
movsl
in
icebp
xor
or
jns
adc
jge
hlt
or
and
add
test
dec
xchg
jb
xlat
push
cmp
popf
aas
vmovaps
jmp
shr
adc
push
push
mov
out
or
mov
mov
jmp
bnd
fmuls
stos
inc
add
scas
movsb
and
in
push
mov
add
push
addl
addb
add
lock
or
add
add
lret
mov
or
popf
jne
incb
sti
out
fisubrs
add
adc
xlat
push
nop
rorl
divb
adc
mov
shrb
and
xor
xor
add
add
mov
frstor
repnz
add
add
jp
imul
in
sbb
add
add
jmp
cwtl
jb
subb
add
add
sbb
pop
pop
test
orb
add
or
ret
fs
nop
mov
inc
push
loop
fdivs
iret
or
add
mov
push
jl
push
jmp
scas
call
sbb
jp
mov
mov
fdivrl
add
add
sbb
inc
sub
inc
enter
ja
call
jne
mov
jno
lea
add
add
sub
add
add
inc
imul
add
shl
add
sbbl
shll
add
daa
mov
ret
shlb
call
das
fcomp
cld
mov
loope
popa
call
push
dec
mov
pop
cmp
jle
inc
xlat
mov
cmp
adc
mov
adcl
pop
std
ja
or
add
add
inc
add
add
add
add
add
pop
dec
dec
xor
negl
dec
sarl
mov
add
sub
addb
mov
insl
push
mov
pop
decb
mov
dec
ds
std
std
into
xchg
mov
pop
fildll
xchg
jge
dec
inc
rcll
inc
dec
jae
mov
add
add
cmpsb
inc
pop
stos
ret
outsl
add
ret
leave
and
xchg
int
cltd
push
xchg
xor
rcll
enter
pop
mov
add
cltd
and
add
add
add
sarl
ret
push
rolb
dec
shl
add
add
inc
xchg
cltd
sbb
inc
enter
jl
cmp
jle
call
gs
push
or
or
add
add
push
cmp
leave
mov
inc
std
decb
pop
add
add
cld
mov
cmp
xchg
lret
stc
lret
js
out
hlt
and
add
add
movsb
iret
andb
sub
add
call
fwait
loopne
push
loopne
and
add
add
push
adc
mov
aam
in
sbb
test
sti
add
sbb
cmp
bound
adc
mov
xor
mov
adc
xor
sbb
jno
dec
mov
jne
pop
push
loopne
int
xchg
jnp
repnz
jae
lods
fwait
jne
pop
inc
add
add
sub
push
push
and
add
lea
lret
ljmp
ljmp
add
add
add
cmp
mov
fsubs
inc
add
add
scas
inc
cmp
add
pop
adc
lahf
into
add
add
add
cmpsb
ljmp
ja
sbb
push
cmp
pusha
mov
add
mov
pop
cmp
inc
ret
in
movsl
inc
leave
sub
lret
cwtl
lock
popa
imul
sub
add
add
pop
jne
dec
pushf
adc
mov
xchg
push
sub
add
add
and
add
add
pop
xchg
push
nop
data16
xchg
jne
stos
insl
popa
and
add
add
mov
shlb
ds
test
sti
outsl
mov
push
leave
jl
test
jns
dec
and
add
add
cmp
mov
fldt
mov
push
fdivl
es
add
add
pop
stos
sarl
xchg
adc
out
aas
lods
jle
sbb
push
jbe
push
mov
aas
jb
lock
adc
ror
and
add
inc
imul
push
mov
fimuls
add
hlt
mov
mov
sub
add
add
fwait
dec
mov
ret
subb
add
add
cmp
adc
add
add
add
add
mov
xchg
push
adc
add
push
insb
mov
mov
fimuls
shll
mov
mov
das
and
xchg
lock
pusha
mov
mov
jb
mov
in
mov
pusha
add
add
mov
es
arpl
and
inc
fmull
daa
xchg
jge
inc
mov
sub
nop
sub
mov
sbb
add
loop
shl
in
repnz
dec
ljmp
ja
dec
xchg
in
mov
rcrl
jbe
dec
jmp
shrl
in
out
ja
inc
cwtl
mov
mov
lret
in
xorb
or
and
lret
add
add
dec
cmp
add
add
add
add
movsl
jae
jle
nop
clc
cmc
mov
add
sub
lret
mov
xchg
mov
pop
mov
mov
fnstcw
lahf
mov
adc
and
add
add
and
and
test
or
test
dec
xor
notl
imul
fcmovne
fsubr
sti
outsl
inc
xchg
leave
enter
add
add
mov
les
push
push
je
jp
ret
mov
int
sub
add
add
and
add
add
add
cmp
mov
push
pop
sub
and
in
clc
jecxz
sti
jne
xchg
xor
lods
cltd
sbb
jns
mov
sbb
cmc
popf
push
and
test
push
js
inc
in
sub
add
add
add
mov
stos
popf
out
sbb
mov
mov
rcll
adc
add
add
mov
inc
add
add
and
test
sbb
cmc
sbb
dec
pop
test
in
lea
loopne
sbb
adc
test
incl
add
add
add
add
stos
push
aam
das
cmp
mov
sub
lods
xchg
pop
push
or
mov
cmc
mov
insb
mov
cmc
adc
into
mov
mov
inc
gs
and
add
push
sbb
mov
daa
mov
pop
add
out
sub
in
ss
mov
add
psllw
dec
movsb
adc
add
add
ljmp
add
and
in
test
and
push
test
das
mov
xor
dec
call
push
mov
mov
js
das
or
add
add
int3
fwait
daa
pop
vcvtps2pd
xchg
sarl
jno
add
add
pusha
mov
dec
out
push
adc
pop
and
add
add
jns
mov
mov
lock
sub
mov
rcrl
cmp
movsb
dec
mov
jo
aaa
aad
jmp
je
or
mov
das
mov
sub
add
add
es
push
div
xchg
push
loop
loope
pop
fcoml
add
ds
mov
loop
push
mov
pop
dec
adc
into
cmp
dec
cwtl
ficomps
mov
inc
add
add
jo
xchg
mov
std
out
mov
pop
test
xchg
push
jp
ret
inc
out
out
mov
mov
cld
pop
add
loopne
pop
inc
jbe
push
mov
mov
add
imul
outsb
ret
aam
lcall
cld
cld
ds
add
stc
cli
es
jbe
sbb
adc
push
sbb
out
cmp
testb
fwait
adc
cmp
push
pusha
mov
aas
enter
rorl
aad
insb
add
add
cmpsl
jle
mov
add
movsl
jbe
jno
and
sub
ret
push
or
mov
data16
add
xchg
cmp
jno
jg
add
mov
aad
shll
mov
and
add
add
mov
cmp
cmpsl
lret
out
mov
add
inc
add
aam
dec
cmpsl
adc
push
fwait
xchg
dec
mov
or
out
mov
push
popa
scas
cmpsb
mov
add
add
add
push
push
adc
add
add
add
add
add
add
lret
mov
add
add
loopne
gs
out
das
sysenter
pop
cmp
ficoms
add
mov
add
add
jae
pop
xor
jnp
imul
xchg
roll
out
mov
fsubrl
xchg
add
xorl
xor
les
sahf
cmpsl
out
enter
add
add
es
mov
insb
mov
mov
mov
and
add
add
mov
repz
dec
push
rcl
out
leave
stos
out
jle
mov
xor
add
add
popf
add
dec
push
mov
jb
mov
cs
add
add
add
mov
mov
jo
jp
leave
mov
xlat
sbb
nop
mov
add
add
mov
pextrw
rcpps
mov
push
adc
mov
xor
ret
cmp
push
mov
aad
fisubrs
adc
in
pusha
mov
add
add
add
mov
sahf
jp
ljmp
mov
aaa
mul
into
mov
add
add
ret
pusha
mov
sbb
roll
incb
xchg
pushf
jge
movsl
negl
adc
notb
push
xchg
add
mov
add
pop
pusha
mov
inc
and
nop
mov
adc
stc
inc
pusha
mov
gs
add
add
ss
adc
movsb
cmp
jg
sbb
sub
add
add
add
cwtl
sub
and
add
add
stos
cmpl
push
pusha
mov
cmc
idivb
pushf
jg
mov
adc
add
add
stos
inc
or
mov
popa
jmp
jp
mov
ret
mov
jne
scas
push
es
inc
jge
pop
adc
cs
jmp
mov
mov
jg
sti
pinsrw
fists
imulw
inc
add
add
in
imul
xchg
fwait
or
insb
add
add
push
or
xchg
repnz
add
add
jmp
aad
movsl
addl
add
add
jae
sub
out
gs
shrb
add
mov
push
lret
xchg
jle
ret
ljmp
outsb
stos
push
pushw
xor
test
push
cmp
stc
mov
jnp
cld
xchg
fsubrp
xchg
lds
xchg
adc
sub
mov
js
or
scas
cmp
dec
xor
or
add
add
stos
mov
pop
xchg
ja
daa
lods
push
and
add
rorl
mov
mov
repnz
push
add
push
push
inc
daa
cs
adc
fimuls
push
movsl
mov
inc
mov
notw
mov
out
scas
repz
ds
xchg
dec
push
adc
ret
jmp
dec
xchg
clc
adc
das
loopne
les
add
add
add
add
lahf
inc
sbb
jae
jle
out
roll
ficompl
add
fmuls
movsl
pop
test
mov
cld
pop
imul
add
add
cmp
adc
sbb
dec
icebp
pop
inc
xchg
clc
test
add
nop
out
xor
mov
test
dec
mov
push
mov
addb
jne
dec
sahf
mov
insl
cmp
jae
ret
and
pop
pop
cld
cmp
or
add
add
insb
add
add
repnz
inc
add
add
inc
enter
pop
xor
sub
and
push
clc
repnz
nop
nop
jae
add
sbb
add
add
clc
repnz
nop
nop
jae
les
jne
add
xchg
push
add
lea
cld
nop
nop
jae
push
in
push
fmuls
cmp
ljmp
inc
clc
repnz
nop
nop
jae
les
add
push
push
mov
xchg
ret
jl
add
sub
outsb
adc
outsb
add
mov
repnz
nop
nop
jae
add
std
sub
add
add
mov
sbb
push
clc
repnz
nop
nop
jae
ja
add
sub
pop
mov
add
ja
push
clc
repnz
nop
nop
jae
add
mov
fadds
lea
add
movswl
clc
repnz
nop
nop
jae
jge
adc
add
mov
jne
push
mov
xchg
ret
mov
add
add
add
xchg
ja
clc
repnz
nop
nop
jae
add
rcll
pop
pop
clc
repnz
nop
nop
jae
add
add
outsb
add
add
add
into
in
nop
push
mov
leave
nop
jmp
fadds
les
adc
imul
mov
leave
nop
jmp
add
clc
add
fdivrs
test
je
clc
repnz
nop
nop
jae
fdivrs
add
add
mov
clc
repnz
nop
nop
jae
sbb
fadds
sbb
ja
cwtl
enter
add
clc
repnz
nop
nop
jae
add
add
outsb
add
fwait
push
mov
xchg
ret
xor
add
mov
add
add
aam
mov
jne
call
nop
jae
adc
add
mov
cmp
fcoms
call
clc
repnz
nop
nop
jae
ret
add
add
mov
cmp
repnz
nop
nop
jae
push
add
add
xor
cltd
add
adc
add
nop
push
mov
leave
nop
jmp
xchg
xor
mov
loope
and
add
add
mov
xchg
ret
add
fcomps
ja
mov
push
lahf
pop
clc
repnz
nop
nop
jae
add
fsubrs
xor
add
add
jg
sub
add
repnz
nop
nop
jae
adc
add
add
sbbb
push
mov
xchg
ret
add
push
add
imul
add
nop
jmp
in
add
add
jge
mov
nop
push
mov
leave
nop
jmp
add
jl
xchg
add
add
add
cli
mov
jnp
movsl
or
aam
push
nop
push
mov
leave
nop
jmp
add
sldt
lea
add
sub
ja
add
add
iret
xor
clc
repnz
nop
nop
jae
fwait
rolb
add
add
loopne
jne
clc
repnz
nop
nop
jae
add
add
sub
mov
loope
incl
add
repnz
nop
nop
jae
sub
pop
add
sbb
push
mov
xchg
ret
add
fildl
adc
add
add
add
add
repnz
nop
nop
jae
fildl
jge
xor
add
jne
cs
nop
push
mov
leave
nop
jmp
fcomp
ja
add
push
add
call
inc
add
add
add
add
adc
inc
outsb
inc
add
add
mov
add
add
jl
inc
inc
clc
repnz
nop
nop
jae
add
jge
xchg
ja
jnp
clc
repnz
nop
nop
jae
fadds
jge
add
fcomps
mov
mov
leave
nop
jmp
or
jae
add
push
xor
xor
nop
pop
sub
repnz
nop
nop
jae
push
add
add
std
mov
push
mov
xchg
ret
add
cltd
add
add
add
push
mov
xchg
ret
add
add
add
xor
add
imul
pop
xchg
xchg
ret
sub
mov
rclb
sub
clc
repnz
nop
nop
jae
fisttpl
rolb
xchg
push
add
push
stos
pop
and
push
mov
xchg
ret
loopne
add
add
add
sarl
push
mov
leave
nop
jmp
jl
add
cltd
jl
add
push
add
nop
push
mov
leave
nop
jmp
pop
add
add
movl
in
leave
nop
jmp
lldt
push
add
add
add
in
loopne
lcall
add
ret
sbb
add
jge
movsb
jle
mov
nop
push
mov
leave
nop
jmp
mov
imul
add
add
pop
push
clc
repnz
nop
nop
jae
fsubs
adc
les
cltd
cltd
adc
mov
mov
push
mov
xchg
ret
push
add
je
push
shll
ja
es
jns
mov
repnz
nop
nop
jae
adc
or
add
test
mov
xchg
ret
add
push
adc
ljmp
push
clc
repnz
nop
nop
jae
add
add
add
push
add
outsb
and
mov
xchg
ret
add
jge
data16
leave
pop
push
mov
xchg
ret
push
add
incb
or
mov
mov
leave
nop
jmp
clc
add
add
or
ljmp
add
add
push
mov
leave
nop
jmp
jne
cmp
mov
mov
rorb
push
inc
add
add
xor
adc
ja
push
push
into
push
sarl
nop
push
mov
leave
nop
jmp
fldl
fwait
mov
sarl
clc
repnz
nop
nop
jae
push
aas
add
adc
mov
clc
repnz
nop
nop
jae
add
add
fdivr
je
ror
push
mov
xchg
ret
ja
add
add
push
jge
push
add
shlb
mov
aas
xchg
pop
jne
add
add
loopne
test
nop
push
mov
leave
nop
jmp
add
aas
add
push
push
clc
repnz
nop
nop
jae
add
add
rcrb
lods
pop
fldt
nop
push
mov
leave
nop
jmp
adc
jae
mov
fwait
clc
repnz
nop
nop
jae
add
jge
add
fadds
add
fdivrs
shlb
add
push
mov
xchg
ret
add
loope
fwait
add
rcrb
adc
xor
push
xchg
cmp
nop
push
mov
leave
nop
jmp
add
incb
add
add
xchg
push
mov
xchg
ret
std
add
add
mov
rolb
repnz
nop
nop
jae
imul
add
ja
push
push
sti
rep
clc
repnz
nop
nop
jae
mov
fildl
add
add
xor
mov
leave
nop
jmp
add
mov
inc
add
jl
add
clc
repnz
nop
nop
jae
rclb
add
push
inc
jne
clc
repnz
nop
nop
jae
xor
add
lds
rcl
dec
mov
nop
push
mov
leave
nop
jmp
add
in
mov
xchg
push
roll
pusha
mov
lods
push
mov
xchg
ret
add
add
mov
mov
clc
repnz
nop
nop
jae
loope
xor
add
add
clc
repnz
nop
nop
jae
cmp
push
ljmp
pop
call
clc
repnz
nop
nop
jae
add
add
add
add
push
push
mov
xchg
ret
add
add
add
jl
pop
mov
clc
repnz
nop
nop
jae
mov
data16
mov
add
clc
repnz
nop
nop
jae
shrl
push
pop
sub
lds
jb
nop
push
mov
leave
nop
jmp
add
add
lea
popf
lea
push
mov
xchg
ret
jge
dec
add
add
push
jno
roll
mov
xchg
ret
add
loope
xor
ljmp
clc
repnz
nop
nop
jae
fisttpll
fmuls
push
mov
leave
nop
jmp
add
add
push
loopne
add
ss
nop
push
mov
leave
nop
jmp
mov
add
add
int3
aaa
xor
push
mov
xchg
ret
mov
add
ret
add
data16
push
aaa
mov
clc
repnz
nop
nop
jae
sbb
jne
add
adc
fs
inc
add
push
add
les
cmp
mov
xchg
ret
add
sbb
add
push
add
loopne
mov
clc
repnz
nop
nop
jae
add
add
add
ja
scas
mov
mov
clc
repnz
nop
nop
jae
std
clc
add
add
add
push
loope
icebp
clc
repnz
nop
nop
jae
add
add
add
add
inc
add
add
sbb
jae
add
adc
aas
add
add
push
add
pop
les
nop
nop
jae
add
mov
mov
addr16
nop
push
mov
leave
nop
jmp
add
add
add
loopne
pop
incb
add
cld
clc
repnz
nop
nop
jae
add
pop
add
fstpl
les
add
fwait
clc
repnz
nop
nop
jae
cmp
ja
add
add
outsb
push
add
add
add
jge
add
loope
add
add
add
add
add
add
clc
repnz
nop
nop
jae
add
fldl
add
add
rolb
push
rcll
fwait
push
add
data16
fsub
rcll
add
add
test
push
mov
xchg
ret
ret
add
rol
clc
mov
sar
repnz
nop
nop
jae
add
add
mov
add
leave
nop
push
mov
leave
nop
jmp
add
add
data16
aad
repnz
nop
nop
jae
fcoms
imul
add
pop
clc
add
xor
push
mov
xchg
ret
je
push
xor
data16
fwait
ja
add
nop
nop
jae
xor
add
add
jge
dec
add
jge
add
nop
push
mov
leave
nop
jmp
add
add
mov
add
clc
and
add
repnz
nop
nop
jae
add
add
push
aam
push
add
clc
repnz
nop
nop
jae
add
jge
add
add
add
repnz
nop
nop
jae
sbb
or
fwait
add
add
sub
addr16
inc
add
add
fadds
ljmp
adcw
pusha
imul
mov
jb
loop
add
mov
dec
add
nop
push
mov
leave
nop
jmp
xor
add
aas
add
popa
clc
repnz
nop
nop
jae
pop
cltd
add
rolb
add
add
lret
mov
mov
repnz
nop
nop
jae
adc
fcoms
pop
add
push
imul
cld
nop
nop
jae
rol
push
lahf
add
push
mov
xchg
ret
outsb
jge
lds
add
sarl
mov
clc
repnz
nop
nop
jae
add
adc
add
add
outsb
xlat
push
clc
repnz
nop
nop
jae
ja
add
add
fstpl
lea
push
mov
xchg
ret
add
add
add
add
push
pop
add
clc
repnz
nop
nop
jae
add
mov
imul
push
clc
repnz
nop
nop
jae
mov
fildl
add
add
fcompl
cld
nop
nop
jae
imul
add
add
add
jae
in
mov
jno
add
std
add
adc
add
stos
repz
clc
repnz
nop
nop
jae
xor
add
mov
add
add
clc
repnz
nop
nop
jae
add
dec
stc
fistpl
nop
push
mov
leave
nop
jmp
fldl
add
add
mov
gs
jo
clc
repnz
nop
nop
jae
mov
incb
add
sub
add
nop
jmp
add
cmp
add
je
cmpb
cld
nop
nop
jae
dec
cltd
data16
mov
jmp
nop
push
mov
leave
nop
jmp
mov
add
dec
add
push
sahf
testb
xchg
pop
nop
push
mov
leave
nop
jmp
jl
outsb
add
push
mov
fistl
nop
test
xchg
ret
add
fistl
pop
jl
sbb
mov
add
xor
inc
add
ja
push
ja
imul
jl
add
push
push
mov
xchg
ret
add
lea
xor
add
add
mov
outsl
sub
add
repnz
nop
nop
jae
mov
cltd
add
mov
push
mov
leave
nop
jmp
push
pop
push
imul
mov
dec
push
nop
push
mov
leave
nop
jmp
movlps
mov
add
add
aam
popa
dec
push
mov
xchg
ret
xchg
in
add
xor
je
dec
add
pop
xor
repnz
nop
nop
jae
mov
fstpt
dec
int3
andl
jae
mov
ljmp
xchg
call
clc
repnz
nop
nop
jae
add
add
hlt
repnz
jmp
add
add
rol
fdivrs
xchg
push
add
add
rol
fistpl
clc
repnz
nop
nop
jae
add
push
add
add
or
add
add
nop
push
mov
leave
nop
jmp
loope
add
add
add
fldenv
add
xchg
jne
add
mov
add
add
outsb
jmp
aas
add
imul
jmp
add
or
mov
mov
clc
repnz
nop
nop
jae
xor
std
std
loopne
add
sub
mov
mov
clc
repnz
nop
nop
jae
mov
add
add
aas
add
stos
push
pop
clc
repnz
nop
nop
jae
fldl
rcrb
add
in
mov
clc
repnz
nop
nop
jae
imul
add
add
pop
push
mov
xchg
ret
data16
outsb
jge
mov
add
sar
rclb
out
push
inc
add
sub
mov
add
mov
sbb
push
push
mov
xchg
ret
push
pop
lds
add
fdivrs
lods
adc
in
leave
nop
jmp
jae
dec
add
or
jl
ljmp
add
pop
adc
add
mov
add
add
clc
fcoms
add
pop
add
andl
add
jne
lds
add
data16
add
pop
clc
repnz
nop
nop
jae
roll
add
add
loopne
add
mov
add
mov
add
jl
jne
jae
add
add
test
and
add
repnz
nop
nop
jae
in
add
mov
rcrb
repnz
nop
nop
jae
push
in
clc
sbb
dec
fistpl
clc
repnz
nop
nop
jae
add
add
add
data16
push
mov
clc
repnz
nop
nop
jae
add
jl
fildl
imul
dec
fistpl
push
mov
xchg
ret
pop
dec
add
dec
imul
push
nop
push
mov
leave
nop
jmp
fldl
xchg
add
add
inc
add
add
lcall
cld
nop
nop
jae
add
dec
add
jne
mov
add
fisubrl
test
shrl
xchg
ret
add
push
cmp
fwait
add
std
imul
jle
add
mov
add
mov
xor
jl
add
inc
mov
push
push
mov
xchg
ret
add
add
add
rclb
ja
mov
clc
repnz
nop
nop
jae
incb
add
add
mov
mov
clc
repnz
nop
nop
jae
add
add
ffree
sub
loop
inc
push
mov
xchg
ret
add
add
add
cltd
xor
sbb
mov
adc
repnz
nop
nop
jae
ja
add
add
aas
add
jno
clc
repnz
nop
nop
jae
dec
pop
loope
ja
ja
lds
add
data16
stos
clc
repnz
nop
nop
jae
mov
add
add
sbb
dec
pop
push
mov
inc
inc
fcmove
add
fisubrs
test
add
stc
mov
push
mov
xchg
ret
adc
mov
add
pop
or
jge
nop
push
mov
leave
nop
jmp
add
add
adc
add
jnp
inc
and
clc
repnz
nop
nop
jae
add
mov
push
push
mov
xchg
ret
jl
add
add
jo
fld1
clc
repnz
nop
nop
jae
push
mov
ljmp
inc
add
add
sbb
add
nop
push
mov
leave
nop
jmp
jl
add
cmp
imul
add
mov
xchg
ret
add
mov
push
je
dec
add
add
add
mov
repnz
nop
nop
jae
imul
lds
add
or
data16
cld
aad
cld
push
inc
sbb
repnz
nop
nop
jae
pop
add
pop
add
pop
push
mov
xchg
ret
add
dec
add
ja
or
add
add
sbb
mov
xchg
ret
add
add
add
add
cmp
ja
dec
test
nop
push
mov
leave
nop
jmp
mov
add
data16
shlb
call
add
clc
repnz
nop
nop
jae
add
add
lds
clc
repnz
nop
nop
jae
xchg
ret
or
sub
add
test
add
add
repnz
nop
nop
jae
mov
std
add
repnz
nop
nop
jae
add
pop
add
add
push
add
add
add
add
mov
push
add
sbb
sub
xchg
add
push
enter
and
repnz
nop
nop
jae
add
outsb
add
imul
add
mov
clc
repnz
nop
nop
jae
fmuls
fcomp
xor
adc
add
mov
clc
repnz
nop
nop
jae
jge
cltd
fnsave
mov
jmp
sti
add
add
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
nop
push
mov
leave
nop
jmp
sbb
jae
push
add
shr
in
and
add
repnz
nop
nop
jae
add
add
lcall
inc
add
imul
add
add
add
push
clc
repnz
nop
nop
jae
fildl
dec
cltd
add
xor
dec
aas
add
nop
push
mov
leave
nop
jmp
add
jl
imul
add
add
inc
or
xchg
rcrb
repnz
nop
nop
jae
mov
add
add
mov
imul
or
or
add
mov
outsb
jl
sub
test
push
mov
leave
nop
jmp
cmovge
cmovl
add
rep
clc
repnz
nop
nop
jae
add
jae
std
in
icebp
test
nop
push
mov
leave
nop
jmp
mov
mov
add
add
xor
sub
repnz
nop
nop
jae
add
add
add
fsub
pop
dec
aas
xor
clc
repnz
nop
nop
jae
add
adc
mov
add
js
add
clc
repnz
nop
nop
jae
fldl
outsl
push
clc
repnz
nop
nop
jae
add
fisttpll
xchg
add
inc
lcall
or
repnz
nop
nop
jae
add
add
add
add
push
push
mov
xchg
ret
loopne
add
mov
push
add
pop
clc
repnz
nop
nop
jae
add
ret
add
jl
add
xor
repnz
nop
nop
jae
add
fwait
fwait
add
mov
push
mov
xchg
ret
add
std
add
add
je
mov
cld
nop
nop
jae
pop
add
add
adc
std
add
shlb
testb
xchg
clc
repnz
nop
nop
jae
add
cltd
add
add
outsb
add
add
add
je
nop
push
mov
leave
nop
jmp
sub
or
push
jne
std
push
clc
repnz
nop
nop
jae
add
add
fldl
add
cmp
cld
nop
nop
jae
add
mov
add
ret
clc
repnz
nop
nop
jae
ljmp
adc
ja
add
jg
clc
repnz
nop
nop
jae
add
add
imul
adc
add
add
clc
repnz
nop
nop
jae
or
add
add
mov
push
clc
repnz
nop
nop
jae
push
add
add
imul
imul
nop
nop
jae
add
mov
incb
add
clc
repnz
nop
nop
jae
add
add
add
push
add
add
repnz
nop
nop
jae
ja
xor
add
add
add
lea
repnz
nop
nop
jae
fadds
push
add
data16
add
add
add
fldl
dec
popa
inc
add
jge
add
push
mov
lret
xchg
nop
push
mov
leave
nop
jmp
add
decb
add
push
ret
fld1
clc
repnz
nop
nop
jae
add
dec
add
add
add
push
add
clc
repnz
nop
nop
jae
add
add
add
pop
rolb
add
and
nop
nop
jae
add
add
sbb
imul
cld
nop
nop
jae
cltd
or
add
imul
nop
jns
lret
nop
push
mov
leave
nop
jmp
in
add
add
mov
rclb
pop
inc
add
roll
xor
cmp
add
add
xchg
clc
repnz
nop
nop
jae
fldl
aas
add
add
xchg
add
lds
clc
repnz
nop
nop
jae
add
rolb
push
clc
repnz
nop
nop
jae
add
add
mov
pusha
nop
push
mov
leave
nop
jmp
ljmp
roll
add
mov
adc
repnz
nop
nop
jae
add
add
je
push
xor
pop
push
mov
xchg
ret
jge
add
incb
mov
add
add
ja
clc
repnz
nop
nop
jae
loope
add
sub
mov
lret
inc
xor
clc
repnz
nop
nop
jae
push
add
add
in
push
add
lret
mov
leave
nop
jmp
rcrb
add
xor
loope
xor
repnz
nop
nop
jae
xchg
add
add
add
clc
repnz
nop
nop
jae
lds
add
mov
add
outsl
arpl
add
repnz
nop
nop
jae
add
adc
ds
repnz
nop
nop
jae
pop
add
add
add
add
dec
add
add
inc
xor
nop
push
mov
leave
nop
jmp
push
mov
aas
add
add
add
mov
xchg
ret
add
add
in
add
jl
pop
nop
push
mov
leave
nop
jmp
add
jge
add
mov
jl
lret
leave
pop
push
mov
xchg
ret
add
add
dec
sub
outsb
add
fcomps
repnz
nop
nop
jae
add
add
add
pop
lds
stos
clc
repnz
nop
nop
jae
adc
add
fcoms
jmp
mov
test
add
ljmp
add
add
add
add
stos
mov
clc
repnz
nop
nop
jae
add
add
add
imul
clc
repnz
nop
nop
jae
add
loope
add
push
ja
add
nop
push
mov
leave
nop
jmp
imul
add
adc
dec
and
push
inc
add
add
mov
adc
dec
mov
pop
push
mov
xchg
ret
add
data16
push
add
adc
add
mov
clc
repnz
nop
nop
jae
fsub
pop
add
jge
ret
mov
nop
push
mov
leave
nop
jmp
mov
mov
add
add
add
add
in
leave
nop
jmp
add
add
add
add
imul
mov
pop
and
clc
repnz
nop
nop
jae
add
add
push
dec
add
pop
mov
nop
push
mov
leave
nop
jmp
add
loopne
rcr
fdivrs
add
mov
add
clc
repnz
nop
nop
jae
xor
dec
sbb
xchg
les
add
lret
popl
add
nop
jmp
aas
or
fimull
mov
clc
repnz
nop
nop
jae
fldl
fldl
add
ja
xor
mov
pop
mov
clc
repnz
nop
nop
jae
xor
xor
add
add
push
mov
xchg
ret
pop
jae
loopne
ja
add
add
push
lea
nop
push
mov
leave
nop
jmp
mov
rolb
dec
stc
push
clc
repnz
nop
nop
jae
sub
jge
loopne
sbb
mov
clc
repnz
nop
nop
jae
add
add
movlps
ret
mov
add
clc
repnz
nop
nop
jae
xor
xor
add
add
add
jnp,pt
in
leave
nop
jmp
jl
xor
add
add
clc
repnz
nop
nop
jae
push
add
fildl
data16
adc
inc
cmp
mov
xchg
ret
add
add
add
outsb
mov
jne
clc
repnz
nop
nop
jae
add
add
inc
cs
cmp
mov
add
cmpsb
dec
jl
cwtl
int3
xchg
add
add
add
hlt
mov
clc
repnz
nop
nop
jae
add
add
xor
imul
mov
inc
add
add
add
jl
outsb
add
arpl
cmpsl
popl
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
mov
add
aas
add
sub
fld1
clc
repnz
nop
nop
jae
fwait
clc
add
add
add
ja
push
push
push
mov
xchg
ret
les
roll
add
push
xor
imul
add
add
or
ret
clc
repnz
nop
nop
jae
mov
std
ja
add
adc
imul
nop
nop
jae
pop
data16
clc
jge
push
push
out
je
clc
repnz
nop
nop
jae
cmp
data16
add
addl
andl
add
add
add
fucom
fists
mov
xchg
ret
ljmp
fwait
add
pop
or
jne
clc
repnz
nop
nop
jae
loope
adc
jge
lods
dec
aas
fwait
nop
push
mov
leave
nop
jmp
push
xor
ljmp
dec
notb
nop
jmp
add
fildl
xor
jl
fwait
clc
repnz
nop
nop
jae
add
add
mov
xchg
mov
clc
repnz
nop
nop
jae
mov
ffree
mov
pop
push
push
mov
xchg
ret
std
xor
add
add
jne
adc
add
add
add
push
push
clc
repnz
nop
nop
jae
add
add
mov
cltd
adc
fwait
push
mov
xchg
ret
rcll
add
add
add
add
cmp
inc
push
clc
repnz
nop
nop
jae
add
add
outsb
xor
or
add
mov
leave
nop
jmp
add
fcoms
add
adc
mov
xchg
ret
add
cmp
fadds
shlb
repnz
nop
nop
jae
dec
adc
add
pop
add
rcll
mov
leave
nop
jmp
data16
add
add
lret
and
push
mov
xchg
ret
mov
roll
mov
jnp
les
add
add
repnz
nop
nop
jae
loope
jl
push
fwait
add
repz
push
mov
xchg
ret
add
sarl
add
push
inc
add
add
add
imul
add
and
js
add
add
ja
add
add
inc
lea
clc
repnz
nop
nop
jae
jae
ja
sbb
imul
insb
mov
pushf
not
sub
clc
repnz
nop
nop
jae
adc
outsb
add
sub
add
add
mov
xchg
ret
pop
push
add
dec
mov
add
dec
xchg
sub
push
mov
xchg
ret
mov
outsb
je
add
sbb
mov
fisubs
loope
lock
mov
xchg
ret
incb
imul
dec
adc
dec
aas
ja
adc
in
leave
nop
jmp
xor
mov
jge
add
add
add
lods
sbb
add
repnz
nop
nop
jae
fwait
jae
add
jl
sub
add
nop
jmp
push
push
push
add
test
call
nop
jmp
loope
clc
rclb
dec
in
jg
clc
repnz
nop
nop
jae
add
push
add
add
aas
sub
clc
repnz
nop
nop
jae
adc
in
pop
data16
repnz
nop
nop
jae
ljmp
xor
lods
mov
push
loopne
mov
xchg
ret
jne
add
add
add
fistps
mov
xchg
ret
add
les
loope
add
xchg
pop
push
mov
xchg
ret
imul
xchg
cltd
in
roll
jge
cmp
nop
nop
jae
mov
pop
xchg
jge
lea
add
mov
add
clc
repnz
nop
nop
jae
add
jl
add
loopne
push
and
pop
add
sub
mov
fwait
add
add
add
xor
mov
nop
push
mov
leave
nop
jmp
add
add
add
xor
add
mov
leave
nop
jmp
add
mov
add
ja
add
add
nop
push
mov
leave
nop
jmp
add
loopne
add
add
pop
add
mov
xchg
ret
clc
std
add
add
add
add
add
xchg
orb
nop
jae
add
aas
pop
add
add
cltd
add
dec
nop
push
mov
leave
nop
jmp
jge
add
push
xor
movb
push
mov
leave
nop
jmp
add
shll
add
add
add
jl
add
add
add
push
mov
xchg
ret
imul
mov
add
xor
xchg
adc
push
push
mov
xchg
ret
sbb
xor
add
les
add
repnz
nop
nop
jae
in
add
add
jae
clc
cltd
add
clc
repnz
nop
nop
jae
adc
add
pop
add
fwait
jl
mov
sar
repnz
nop
nop
jae
sbb
imul
add
mov
clc
repnz
nop
nop
jae
mov
add
std
add
mov
add
clc
repnz
nop
nop
jae
imul
add
add
clc
repnz
nop
nop
jae
cmp
imul
lea
adc
decl
push
mov
xchg
ret
add
xchg
ljmp
jge
mov
pop
mov
push
mov
xchg
ret
xor
fildl
rolb
in
add
add
push
nop
push
mov
leave
nop
jmp
ljmp
add
cmp
jae
inc
add
add
lret
clc
repnz
nop
nop
jae
add
aas
ljmp
jne
fcomip
adc
nop
push
mov
leave
nop
jmp
add
add
std
add
je
aaa
repnz
clc
repnz
nop
nop
jae
imul
ja
add
adc
sbb
test
sbb
add
nop
jmp
xchg
add
out
rclb
jmp
imul
je
push
loopne
fadds
add
jne
clc
repnz
nop
nop
jae
fwait
dec
add
dec
adc
adc
mov
xchg
ret
add
add
add
fmuls
fcomps
push
loope
clc
repnz
nop
nop
jae
jl
mov
add
xor
loopne
rolb
add
add
push
fld1
push
mov
xchg
ret
add
xor
add
mov
push
insl
fistpl
clc
repnz
nop
nop
jae
jl
add
mov
add
arpl
nop
nop
jae
xchg
emms
add
adc
mov
pop
clc
repnz
nop
nop
jae
add
push
rolb
les
add
push
mov
repnz
nop
nop
jae
add
cmp
add
push
jnp
aaa
nop
push
mov
leave
nop
jmp
loope
add
lea
je
pop
data16
out
xor
add
add
cs
push
loopne
mov
xchg
ret
add
add
push
add
jmp
les
clc
repnz
nop
nop
jae
add
add
jne
add
jge
add
push
mov
xchg
ret
add
or
add
fnstsw
imul
nop
push
mov
leave
nop
jmp
mov
cmp
add
add
dec
add
add
lret
cld
nop
push
mov
leave
nop
jmp
add
add
add
dec
or
add
pop
push
dec
push
mov
xchg
ret
outsb
loope
ja
lds
add
testl
jg
add
add
je
add
addl
nop
nop
jae
sub
add
into
out
movzwl
clc
repnz
nop
nop
jae
add
or
add
add
adc
push
clc
repnz
nop
nop
jae
add
xor
imul
fildl
lds
shll
mov
adc
repnz
nop
nop
jae
add
roll
imul
test
je
sub
pop
jle
add
add
loope
push
pushl
push
mov
xchg
ret
ja
adc
std
add
add
add
mov
clc
repnz
nop
nop
jae
imul
data16
add
fisttpl
insl
inc
add
add
fwait
add
add
and
add
add
push
mov
leave
nop
jmp
add
add
add
popf
jne
clc
repnz
nop
nop
jae
add
add
fadds
add
add
jl
lret
xorl
clc
repnz
nop
nop
jae
add
add
push
add
dec
and
clc
repnz
nop
nop
jae
add
add
dec
fmuls
adc
fldenv
add
add
ja
push
add
add
add
mov
push
mov
xchg
ret
add
fwait
sar
add
mov
push
push
mov
xchg
ret
add
ret
add
outsb
push
add
add
jns
add
repnz
nop
nop
jae
fildl
mov
add
dec
xchg
mov
dec
jns
movsl
jmp
jmp
pop
std
add
data16
xor
dec
add
add
jae
jmp
push
mov
xchg
ret
push
loope
add
add
add
mov
push
push
mov
xchg
ret
rolb
add
add
adc
lea
std
inc
push
push
mov
xchg
ret
mov
ret
loopne
add
repnz
nop
nop
jae
add
add
add
add
loope
sbb
cld
nop
nop
jae
add
ret
mov
add
idivb
dec
inc
clc
repnz
nop
nop
jae
rcl
mov
test
mov
sub
repnz
nop
nop
jae
les
adc
add
imul
inc
push
add
clc
repnz
nop
nop
jae
add
add
jge
add
push
in
xabort
cld
nop
nop
jae
add
mov
je
add
or
addb
mov
leave
nop
jmp
add
add
aas
add
add
jl
mov
sbb
push
mov
xchg
ret
xchg
add
loopne
add
add
xor
push
clc
repnz
nop
nop
jae
add
imul
adc
adc
std
add
jmp
add
clc
repnz
nop
nop
jae
add
add
add
add
fs
add
clc
repnz
nop
nop
jae
add
add
add
add
repnz
nop
nop
jae
jae
add
rolb
add
dec
mov
add
nop
jmp
push
add
add
fadds
lea
repz
clc
repnz
nop
nop
jae
outsb
add
jge
lea
add
add
pop
push
clc
repnz
nop
nop
jae
loope
rcr
lds
add
xor
clc
repnz
nop
nop
jae
add
jl
les
push
push
fadds
add
push
nop
push
mov
leave
nop
jmp
add
std
dec
clc
add
fwait
mov
scas
movsl
mov
push
mov
xchg
ret
fnsave
je
add
ljmp
js
repnz
nop
nop
jae
pop
xchg
or
add
add
rorl
test
clc
repnz
nop
nop
jae
data16
jge
loopne
orl
cmp
ret
adc
jl
loopne
cltd
ret
add
push
nop
push
mov
leave
nop
jmp
imul
fstpt
fcomps
dec
add
add
lret
mov
fistpl
push
mov
xchg
ret
add
mov
add
add
xor
nop
nop
jae
jge
push
fcoms
add
add
add
popa
nop
push
mov
leave
nop
jmp
add
ljmp
adc
ja
pusha
clc
repnz
nop
nop
jae
imul
add
mov
add
lahf
add
clc
repnz
nop
nop
jae
add
loopne
xor
fadds
add
out
dec
push
clc
repnz
nop
nop
jae
add
ja
add
cmpsl
mov
nop
push
mov
leave
nop
jmp
add
lea
add
add
outsl
pop
push
mov
xchg
ret
sub
std
add
rsqrtps
je
add
movsl
pop
clc
repnz
nop
nop
jae
outsb
push
adc
les
add
je
nop
push
mov
leave
nop
jmp
add
push
add
repnz
nop
nop
jae
adc
data16
fadd
jl
mov
push
mov
xchg
ret
fldl
push
ljmp
add
fwait
clc
repnz
nop
nop
jae
add
mov
add
add
push
test
push
clc
repnz
nop
nop
jae
ljmp
jl
jae
jae
push
clc
repnz
nop
nop
jae
je
add
or
fstpt
jl
in
mov
dec
push
mov
xchg
ret
adc
add
jae
add
lds
bound
test
mov
cld
nop
nop
jae
add
je
sldt
add
popa
mov
clc
repnz
nop
nop
jae
pop
add
mov
in
pusha
clc
repnz
nop
nop
jae
decb
std
add
add
add
jne
clc
repnz
nop
nop
jae
add
push
add
add
sahf
xor
rol
push
mov
xchg
ret
mov
add
push
mov
es
add
add
jb
repnz
nop
nop
jae
add
pop
add
imul
imul
sbbl
incl
add
add
add
loopne
adc
shr
xbegin
jae
push
adc
imul
fildl
test
clc
repnz
nop
nop
jae
adc
add
in
addl
nop
nop
jae
add
mov
add
add
add
add
mov
push
mov
xchg
ret
push
mov
add
add
lea
mov
leave
nop
jmp
mov
mov
loopne
lahf
mov
push
mov
xchg
ret
imul
add
dec
mov
leave
pop
clc
repnz
nop
nop
jae
vpextrw
lds
mov
add
test
repnz
nop
nop
jae
add
fwait
add
add
repnz
repnz
nop
nop
jae
xchg
add
add
fdivrs
fsubrl
push
clc
repnz
nop
nop
jae
aas
add
decb
add
add
push
jmp
clc
repnz
nop
nop
jae
data16
je
sbb
loope
add
in
subl
push
mov
xchg
ret
rclb
add
jne
add
cmp
mov
add
add
or
nop
push
mov
leave
nop
jmp
ja
add
lea
push
mov
fidivrs
add
clc
repnz
nop
nop
jae
pop
add
ja
add
mov
repnz
nop
nop
jae
add
imul
add
mov
clc
repnz
nop
nop
jae
add
outsb
add
push
ret
push
add
clc
repnz
nop
nop
jae
add
sbb
push
je
add
mov
repnz
nop
nop
jae
adc
add
add
mov
sub
jmp
mov
xchg
ret
push
cmp
add
add
clc
repnz
nop
nop
jae
in
push
add
ffree
push
add
add
mov
clc
repnz
nop
nop
jae
mov
add
clc
jae
or
cld
nop
nop
jae
add
add
in
add
add
push
mov
add
add
add
add
mov
add
cmc
add
jae
add
test
sar
clc
repnz
nop
nop
jae
xor
add
add
or
add
test
repnz
nop
nop
jae
add
add
ja
ljmp
mov
inc
add
pop
mov
mov
les
add
shl
daa
add
sub
lea
clc
repnz
nop
nop
jae
fadds
add
add
add
add
add
push
mov
leave
nop
jmp
add
add
clc
add
add
clc
repnz
nop
nop
jae
loope
mov
add
add
je
pop
push
mov
xchg
ret
add
ja
add
les
add
add
mov
add
add
add
add
push
mov
mov
add
pop
popl
add
fdivp
out
add
add
cmp
nop
push
mov
leave
nop
jmp
push
cltd
jne
aas
jl
fadds
add
ret
clc
repnz
nop
nop
jae
add
xchg
je
add
add
ret
clc
repnz
nop
nop
jae
ljmp
les
push
mov
leave
nop
jmp
add
mov
aas
push
clc
repnz
nop
nop
jae
add
add
data16
clc
repnz
nop
nop
jae
add
add
jl
add
test
push
mov
leave
nop
jmp
add
add
add
xchg
ja
add
add
fwait
pop
add
add
lret
adc
inc
in
push
mov
xchg
ret
mov
add
jns
adc
repnz
nop
nop
jae
add
add
add
add
aas
dec
jbe
fisttpl
test
clc
clc
repnz
nop
nop
jae
mov
jge
out
ss
and
nop
push
mov
leave
nop
jmp
les
add
adc
sqrtps
ljmp
xchg
inc
add
xor
verw
je
lods
loop
cmp
cld
nop
nop
jae
rorl
add
add
je
clc
repnz
nop
nop
jae
add
loopne
add
test
dec
push
nop
push
mov
leave
nop
jmp
adc
add
jecxz
clc
clc
repnz
nop
nop
jae
lds
fcoms
add
add
adc
pop
clc
repnz
nop
nop
jae
or
add
add
mov
sbb
outsb
push
add
clc
repnz
nop
nop
jae
add
fldl
ja
add
pop
push
jo
mov
clc
repnz
nop
nop
jae
imul
add
add
lds
push
add
add
fdivs
push
push
mov
xchg
ret
inc
mov
sbb
sbb
cmp
in
scas
add
repnz
decl
or
incl
add
lret
add
int3
add
push
js
fwait
push
mov
xchg
ret
add
push
fdivrs
push
ljmp
pop
nop
push
mov
leave
nop
jmp
dec
add
jae
add
rolb
add
jl
mov
clc
repnz
nop
nop
jae
xor
add
add
aad
idiv
repnz
nop
nop
jae
fwait
cltd
jl
invd
add
je
fdivs
mov
imul
adc
add
jge
push
outsb
ja
add
mov
push
mov
xchg
ret
add
add
add
mov
cld
nop
nop
jae
add
xor
add
add
mov
sbb
ljmp
add
add
sub
ljmp
jge
add
add
mov
nop
push
mov
leave
nop
jmp
pop
fadds
xor
or
repnz
nop
nop
jae
add
fadds
push
add
add
fldl
testl
nop
push
mov
leave
nop
jmp
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
cmp
lea
jge
clc
repnz
nop
nop
jae
xor
push
add
incb
add
sahf
xchg
cld
clc
repnz
nop
nop
jae
loope
cmp
add
add
push
nop
push
mov
leave
nop
jmp
mov
add
cld
nop
nop
jae
jae
add
add
fwait
add
xor
stos
clc
repnz
nop
nop
jae
add
sbb
jl
add
imul
in
push
push
mov
xchg
ret
add
outsb
add
add
inc
shrb
sar
clc
repnz
nop
nop
jae
fwait
sbb
pop
in
cmp
jmp
fildl
add
fnsave
add
add
xor
fdivs
add
add
add
clc
repnz
nop
nop
jae
add
add
jne
push
nop
push
mov
leave
nop
jmp
mov
mov
mov
cld
nop
nop
jae
std
add
add
add
jb
push
clc
repnz
nop
nop
jae
ja
mov
xchg
add
lea
add
imul
repnz
nop
nop
jae
std
add
setbe
adc
add
ret
add
add
or
add
add
call
in
leave
nop
jmp
add
fadds
fisttpl
clc
add
fstp
push
clc
repnz
nop
nop
jae
lea
imul
add
add
movsb
int
push
mov
xchg
ret
push
sub
fwait
jne
loope
jl
fisttpll
mov
test
clc
repnz
nop
nop
jae
add
add
inc
inc
clc
repnz
nop
nop
jae
mov
jne
add
add
ja
stos
clc
repnz
nop
nop
jae
adc
add
add
ja
add
add
and
mov
nop
push
mov
leave
nop
jmp
mov
add
add
xchg
cmpsb
push
jno
sbb
clc
repnz
nop
nop
jae
add
aas
add
add
jae
les
add
cli
cli
push
stos
clc
repnz
nop
nop
jae
push
push
add
xor
std
jne
sahf
repz
clc
repnz
nop
nop
jae
add
add
loope
fadds
stc
dec
push
mov
xchg
ret
adc
add
xchg
cltd
or
add
clc
repnz
nop
nop
jae
push
dec
push
add
add
add
add
adc
push
mov
int3
add
mov
xchg
mov
push
inc
decl
mov
stos
repnz
add
pop
add
add
nop
jmp
push
add
add
add
fwait
xchg
cld
nop
nop
jae
cmp
adc
fcmovnu
add
push
out
pop
fistpl
clc
repnz
nop
nop
jae
jl
add
add
add
push
add
jp
nop
push
mov
leave
nop
jmp
pop
add
adc
push
adc
enter
mov
xchg
ret
mov
add
loope
jne
jmp
clc
repnz
nop
nop
jae
sldt
incb
sbb
jae
push
add
aaa
lea
clc
repnz
nop
nop
jae
rcl
dec
add
add
rep
push
mov
xchg
ret
add
adc
adc
fldl
add
push
imul
clc
repnz
nop
nop
jae
add
incb
add
test
mov
xchg
ret
add
incb
add
outsb
cmpsb
mov
clc
repnz
nop
nop
jae
jne
sub
mov
xor
xor
out
jnp
cld
nop
nop
jae
sub
mov
les
test
jmp
repnz
nop
nop
jae
aas
clc
add
adc
add
jne
clc
repnz
nop
nop
jae
add
adc
add
jle
clc
repnz
nop
nop
jae
add
jne
push
ja
jmp
add
je
jl
xchg
mov
sarb
push
adc
or
je
iret
fistpl
clc
repnz
nop
nop
jae
outsb
add
add
add
shrb
sbb
ret
pop
push
mov
xchg
ret
in
add
add
clc
pop
std
loopne
add
add
add
add
shrb
repnz
nop
nop
jae
in
aas
add
jae
pmulhw
add
add
add
rep
clc
repnz
nop
nop
jae
ret
add
std
dec
add
shr
xor
add
add
outsb
jne
jae
push
add
loopne
add
mov
adc
dec
out
mov
add
lods
xchg
mov
pop
add
xchg
add
rcll
cld
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
sbb
adc
push
add
jge
nop
imul
cld
nop
nop
jae
ja
push
add
jl
add
push
and
mov
xchg
ret
add
dec
add
je
push
mov
add
add
add
xchg
test
lret
clc
repnz
nop
nop
jae
shrb
fldl
add
xchg
mov
clc
repnz
nop
nop
jae
lea
add
add
add
ja
popa
jne
clc
repnz
nop
nop
jae
add
lds
add
xchg
in
leave
nop
jmp
add
add
imul
outsb
add
ja
jmp
nop
push
mov
leave
nop
jmp
add
add
or
incb
cltd
xor
jno
and
nop
push
mov
leave
nop
jmp
add
push
xchg
add
insb
gs
repnz
nop
nop
jae
add
add
xor
repnz
nop
nop
jae
add
add
add
mov
ljmp
mov
xchg
ret
add
add
add
add
add
pop
pusha
push
mov
xchg
ret
add
add
add
push
add
pop
clc
repnz
nop
nop
jae
jae
cltd
add
add
jl
mov
inc
or
repnz
nop
nop
jae
dec
add
ja
add
add
adc
shl
clc
repnz
nop
nop
jae
add
mov
incb
add
shr
clc
repnz
nop
nop
jae
adc
add
add
add
jl
jne
push
mov
xchg
ret
add
add
data16
fwait
add
add
or
jae
mov
add
push
add
pop
call
add
nop
nop
jae
imul
jae
push
add
roll
xchg
repnz
nop
nop
jae
add
loope
add
push
mov
xchg
ret
add
add
loopne
push
adc
jl
xchg
call
clc
repnz
nop
nop
jae
dec
add
adc
ja
add
add
fistpl
inc
add
fcomps
add
add
pop
sahf
in
push
push
mov
xchg
ret
add
mov
outsb
mov
int3
sub
clc
repnz
nop
nop
jae
add
movlps
add
cmp
add
outsb
stos
je
clc
repnz
nop
nop
jae
or
add
add
add
repnz
add
push
mov
xchg
ret
add
fldl
add
add
nop
push
mov
leave
nop
jmp
add
pop
ja
push
push
add
in
ja
push
mov
xchg
ret
dec
add
add
jl
je
xor
aas
xor
neg
sbb
clc
repnz
nop
nop
jae
ja
clc
add
je
add
push
dec
xor
push
mov
xchg
ret
add
cltd
ja
adc
jge
add
les
incl
add
aas
loope
les
clc
add
adc
add
add
mov
mov
clc
repnz
nop
nop
jae
fstp
xor
push
dec
push
mov
mov
clc
repnz
nop
nop
jae
mov
mov
mov
clc
repnz
nop
nop
jae
dec
add
jl
adc
fcompl
cmp
add
push
mov
xchg
ret
outsb
add
xor
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
sub
and
test
inc
add
add
add
or
mov
repnz
clc
repnz
nop
nop
jae
add
adc
add
add
clc
repnz
nop
nop
jae
push
add
add
fwait
xchg
call
clc
repnz
nop
nop
jae
add
add
adc
xor
adc
and
add
fadds
ljmp
popa
nop
push
mov
leave
nop
jmp
add
add
add
ret
add
add
add
sti
clc
repnz
nop
nop
jae
add
add
fdivr
add
clc
repnz
nop
nop
jae
mov
xor
mov
pop
push
mov
xchg
ret
push
std
add
dec
jge
divb
clc
repnz
nop
nop
jae
add
lds
shlb
ja
add
mov
jmp
add
add
xchg
ja
add
pop
add
cmp
repnz
nop
nop
jae
add
clc
add
push
add
add
rclb
mov
add
xor
mov
rcrl
aaa
fld1
push
mov
xchg
ret
add
push
add
lds
add
jb
inc
add
add
add
fmuls
add
add
loope
push
mov
xchg
ret
push
loopne
add
add
add
add
mov
xor
pop
sbb
jne
nop
push
mov
leave
nop
jmp
ja
adc
loope
push
mov
aam
add
add
inc
add
push
pop
mov
add
mov
dec
add
nop
jmp
add
add
loope
add
cmpw
nop
push
mov
leave
nop
jmp
push
je
fmuls
nop
push
mov
leave
nop
jmp
adc
add
imul
in
push
add
rol
jp,pt
add
shll
adc
gs
fwait
je
clc
repnz
nop
nop
jae
add
or
rol
mov
cld
nop
nop
jae
add
add
mov
pop
add
add
add
xor
push
mov
xchg
ret
clc
add
lds
or
add
add
add
cld
ret
stos
add
clc
repnz
nop
nop
jae
add
mov
cmp
push
mov
xchg
ret
add
xor
je
pop
add
add
add
mov
xchg
ret
adc
fcoms
add
jl
inc
clc
repnz
nop
nop
jae
adc
add
fistl
add
push
mov
leave
nop
jmp
xor
add
loope
push
aas
add
inc
push
mov
xchg
ret
push
add
add
add
std
push
add
cld
nop
nop
jae
outsb
xor
add
ja
xor
je
clc
repnz
nop
nop
jae
sarb
jb
mov
clc
repnz
nop
nop
jae
jl
xor
adc
jo
fwait
clc
repnz
nop
nop
jae
imul
add
sub
imul
lods
push
clc
repnz
nop
nop
jae
add
push
xchg
add
add
add
adc
xor
shl
push
mov
xchg
ret
add
xor
loopne
add
push
mov
xchg
ret
add
adc
aas
add
cmp
dec
xor
jmp
nop
nop
jae
add
fcomps
shll
clc
repnz
nop
nop
jae
imul
shlb
je
sqrtps
out
inc
add
jge
add
xchg
imul
scas
adc
mov
push
mov
xchg
ret
jge
add
jge
sbb
add
add
mov
xchg
ret
add
add
ljmp
push
mov
xchg
ret
add
imul
push
jge
outsb
add
clc
repnz
nop
nop
jae
jae
mov
push
test
clc
repnz
nop
nop
jae
fwait
je
sarl
clc
repnz
nop
nop
jae
add
fildl
ja
push
outsb
ja
add
add
repnz
nop
nop
jae
add
fstpt
add
clc
repnz
nop
nop
jae
add
ja
fwait
add
mov
and
mov
xchg
ret
adc
fwait
jge
ja
jb
jge
add
repnz
nop
nop
jae
add
add
adc
add
fildl
add
mov
cld
nop
nop
jae
add
jae
mov
repnz
nop
nop
jae
add
push
ja
ja
add
add
add
inc
mov
clc
repnz
nop
nop
jae
push
add
add
push
test
adc
nop
jae
add
add
add
add
add
adc
clc
repnz
nop
nop
jae
push
invd
push
add
dec
add
add
add
andl
nop
nop
jae
add
sub
mov
xchg
ret
add
rsqrtps
jge
ljmp
aas
adc
nop
jmp
lea
add
mov
in
jne
clc
repnz
nop
nop
jae
add
add
add
add
add
add
repnz
nop
nop
jae
std
lea
jl
add
push
add
iret
cmpl
nop
push
mov
leave
nop
jmp
add
jge
ja
jne
nop
push
mov
leave
nop
jmp
data16
add
add
imul
nop
push
mov
leave
nop
jmp
push
add
ljmp
add
add
add
shr
clc
repnz
nop
nop
jae
pushw
add
jge
lea
mov
sbb
or
call
nop
jmp
imul
mov
mov
mov
call
clc
repnz
nop
nop
jae
add
push
scas
das
push
nop
push
mov
leave
nop
jmp
pop
xor
shlb
movsb
fwait
popa
push
mov
xchg
ret
add
adc
add
ret
nop
push
mov
leave
nop
jmp
add
adc
pop
mov
mov
mov
sub
add
clc
repnz
nop
nop
jae
add
mov
push
jmp
add
add
je
add
add
add
add
push
add
nop
push
mov
leave
nop
jmp
add
add
ffree
mov
push
mov
leave
nop
jmp
add
or
std
dec
add
add
jle
mov
push
inc
add
jae
jne
ljmp
add
add
add
mov
mov
xchg
ret
pop
jae
mov
or
sub
clc
repnz
nop
nop
jae
add
je
fildl
adc
add
add
mov
dec
mov
cmc
push
pop
xchg
add
add
inc
xor
pop
mov
or
mov
cmp
sub
add
add
mov
aam
mov
lahf
add
mov
inc
add
mov
in
idivb
jg
out
lret
neg
inc
add
add
jg
mov
mov
jp
push
and
mov
sub
add
add
lret
pop
rcrl
fdiv
push
or
add
add
div
test
add
gs
mov
add
add
mov
mov
les
lea
xchg
or
jmp
test
aad
push
mov
mov
mov
outsb
aad
fidivrs
in
mov
jg
jb
decb
mov
adc
lds
ficoms
insl
add
xor
jge
jge
inc
add
popa
jo
lret
jmp
mov
out
mov
xchg
mov
xchg
ljmp
cmp
cltd
shrl
xor
gs
add
add
add
and
xchg
cmp
add
dec
push
add
add
pop
add
pop
sbb
and
mov
jmp
add
add
out
jg
imul
jne
pushf
scas
std
call
adc
scas
push
inc
fiadds
lret
add
add
mov
xor
add
add
sbb
hlt
fidivs
add
push
push
jp
mov
pop
fcom
mov
fbld
mov
xor
cwtl
add
sbb
in
add
mov
nop
fs
mov
shrl
xchg
sub
xchg
data16
pusha
mov
popa
test
stc
movsb
pop
dec
mov
jge
add
add
inc
add
add
aam
clc
dec
es
and
add
add
enter
jmp
mov
mov
or
add
add
jge
or
test
or
add
push
jno
lods
mov
mov
inc
xor
add
add
adc
out
inc
xchg
add
add
add
add
clc
jle
mov
dec
add
add
fdivrp
inc
inc
mov
inc
cltd
movsb
mov
rorb
add
add
rorb
clc
hlt
mov
mov
aad
testb
push
add
xchg
aas
aad
xchg
sbb
sub
add
add
test
add
add
push
adc
out
imul
mov
and
add
addl
cmp
scas
push
lds
or
fs
mov
fildl
adc
mov
data16
rorl
push
dec
mov
xchg
pop
jle
push
inc
add
add
push
mov
shll
fsubrs
add
add
and
add
add
push
iret
jbe
pusha
mov
outsl
push
cwtl
arpl
aam
dec
cmc
int
mov
add
mov
mov
test
out
leave
pushw
add
pop
or
aas
test
imul
test
stc
fnsave
jle
mov
out
pop
mov
cmp
jl
xor
lret
insl
divl
dec
mov
fnstsw
cmp
mov
out
mov
loopne
inc
gs
scas
leave
cmp
mov
ret
js
dec
add
add
xchg
sub
add
add
repz
add
add
leave
lret
fcoml
xchg
push
mov
cwtl
aaa
test
repnz
ja
push
hlt
jnp
xchg
add
add
add
aaa
std
push
mov
insb
mov
cmp
jae
sub
add
popa
adc
lods
cltd
xlat
test
inc
ret
mov
repz
adc
das
cmpsl
ret
sub
add
adc
cmp
cwtl
xor
mov
mov
outsb
roll
push
aaa
sti
mov
push
mov
ja
fidivrs
xchg
aaa
and
add
add
jbe
gs
das
or
sbb
jae
push
or
push
iret
in
jno
xchg
mov
stos
sbb
push
into
addr16
sub
add
add
iret
int3
into
cmpsb
cs
mov
inc
and
add
jecxz
in
std
cmp
sti
cwtl
popf
jne
push
cwtl
push
adc
or
ret
jbe
fisubrs
rep
inc
push
mov
push
xchg
repz
fld
jo
fstl
jl
lret
jbe
jae
out
push
cmp
popf
leave
push
movsl
add
add
add
lea
pop
sub
fst
iret
in
stos
push
xchg
hlt
xor
cwtl
push
cmp
ljmp
add
push
and
add
add
loopne
add
lahf
pop
stos
push
or
add
add
adc
xlat
pcmpgtw
mov
cld
int3
mulb
add
add
adc
out
daa
mov
sub
add
add
aaa
cmpsl
push
jno
pop
iret
mov
lahf
int3
clc
icebp
sbb
add
add
mov
add
add
mov
fldl
in
outsl
sub
or
int3
xchg
mov
cmp
sti
pop
sub
clc
shll
add
add
and
push
rorl
lret
jp
mov
inc
jg
ljmp
add
and
lods
sarl
mov
fisttpl
sub
aad
adc
test
in
cmpsb
cmp
je
and
add
add
or
add
add
outsl
shl
in
push
lahf
fidivs
stc
test
add
push
mov
xchg
push
xchg
imul
push
and
add
add
mov
push
dec
add
add
dec
or
sbb
add
add
cwtl
orl
add
jle
add
add
add
xchg
dec
push
add
add
jp
mov
add
add
add
pop
inc
add
add
ljmp
rorb
mov
fidivrl
repz
icebp
int3
cli
sub
aas
int
dec
inc
or
add
or
test
cmc
push
inc
jb
mov
in
push
inc
rep
cmp
pop
fildll
add
add
inc
add
add
pop
pop
dec
cmp
test
cmc
mov
cmp
sub
add
cmpsl
fsubs
shll
mov
add
add
add
sub
add
add
addr16
pop
test
sbb
stos
js
mov
pop
adc
mov
jl
sub
add
add
jge
pop
push
daa
iret
mov
sti
jae
push
stos
test
ret
or
add
add
repnz
inc
add
add
jbe
jg
mov
add
inc
clc
test
bound
gs
repz
cmp
mov
add
add
xchg
add
add
fsub
xchg
dec
mov
lret
and
and
push
das
add
add
add
cld
mov
sbb
add
add
push
mov
test
andl
mov
rclb
stos
out
fwait
bound
pushf
push
and
fwait
add
push
scas
ds
xchg
xor
dec
stos
pop
movsb
lods
ffree
or
xchg
jb
and
es
ja
in
jmp
mov
shlb
add
fwait
mov
inc
jo
add
add
mov
jno
ds
mov
push
ja
pushf
mov
xchg
addl
add
add
fs
movsb
stc
jo
shrb
push
adc
push
inc
out
jecxz
jle
nop
movsb
mov
xchg
mov
pop
dec
std
rclb
or
add
add
cmpsl
and
add
add
add
pop
aas
cmpsb
test
dec
adc
cmp
lahf
xchg
jg
or
add
add
mov
lock
xchg
push
xor
inc
adc
out
mov
mov
push
lret
mov
lea
dec
lea
aas
js
dec
mov
es
xchg
ja
dec
xor
mov
jl
sbb
add
add
add
rorl
hlt
dec
or
fistps
faddl
add
testb
js
addr16
jg
jmp
lcall
xor
adc
enter
sbb
ss
push
hlt
lods
dec
add
add
and
int
jle
push
lock
add
add
mov
and
add
add
popf
adc
iret
push
adc
pop
xlat
lcall
pop
lods
adc
fwait
xor
fwait
inc
add
add
lds
add
add
xchg
sbb
mov
cld
and
mov
outsl
in
push
mov
dec
add
add
mov
push
iret
test
outsb
bound
jl
and
sub
xchg
mov
inc
mov
xor
mov
cmc
das
jecxz
push
lcall
add
out
hlt
add
jns
adc
add
add
les
test
orl
bound
cwtl
in
xor
pop
mov
in
shrl
pop
jbe
sub
fwait
inc
mov
add
or
add
add
sbb
add
add
pop
lret
mov
scas
loop
fcos
sub
add
adc
add
add
add
adc
loope
xor
add
sub
mov
and
add
add
and
xchg
add
inc
xor
lds
xchg
lret
or
sar
sub
xchg
pop
mov
mov
les
frstor
pop
fmull
aas
mov
add
fcmovb
adc
aad
xorl
int
dec
out
push
outsl
insb
add
add
xchg
out
mov
loop
inc
je
xchg
imul
add
xchg
lods
lcall
insb
add
add
insl
add
add
add
sbb
jae
push
je
ja
xchg
mov
int3
daa
sub
sbb
add
add
cli
shlb
mov
dec
add
add
fstl
add
xchg
mov
adc
nopl
pop
mov
lods
mov
add
add
sbb
fisttpll
jmp
add
add
xor
icebp
inc
fists
ret
sarl
mov
fs
sti
stc
adc
add
add
mov
add
add
clc
dec
xor
cmpsb
test
test
je
iret
fdivrl
arpl
dec
push
nop
jecxz
stos
sub
sub
or
jecxz
addl
addb
add
dec
mov
aad
adc
add
add
inc
rolb
mov
xchg
ret
xchg
mov
daa
sub
enter
rorb
cmp
pop
mov
ja
hlt
add
add
add
shl
addl
sbb
add
add
test
push
cmp
sub
lret
nop
mov
sbb
mov
mov
fidivs
dec
push
scas
imul
xrelease
jg
mov
cld
cmpsl
pusha
mov
push
insb
mov
jae
pop
inc
cmp
add
add
or
add
mov
mov
add
add
jg
mov
outsl
mov
xchg
mov
fisttps
xor
mov
push
xor
mov
jmp
rcrb
sbbl
cld
cmp
dec
insl
xor
push
add
insl
ret
roll
bswap
jnp
aam
pop
xchg
mov
xor
pop
hlt
ficompl
push
xchg
cmp
in
lcall
loope
xchg
popf
pop
jmp
les
add
add
mov
dec
add
sub
add
loopne
add
sub
cmp
dec
leave
pushf
cwtl
addr16
add
add
add
push
test
les
lcall
push
stc
in
adc
add
add
add
sub
sti
mov
mov
xlat
in
test
inc
loop
aas
aas
arpl
or
adc
add
xchg
xor
push
in
aam
mov
lds
adc
decb
lret
add
add
push
xchg
repz
fcoml
mov
and
mov
push
dec
and
pop
pop
push
sub
add
add
add
jnp
ficoml
clc
dec
mov
or
mov
push
cmp
out
int
lret
jecxz
pop
cmp
jnp
aas
pop
adc
pop
sub
sub
into
adc
ljmp
pop
sbb
push
fnstcw
shr
push
in
fsubrs
js
xchg
imul
ret
cmp
lods
mov
ror
jp
arpl
mov
add
add
popl
repz
push
lock
sbb
add
add
pop
jnp
loop
jns
sbbl
mov
sub
loop
out
jmp
jbe
mov
dec
sbb
cmp
or
jno
arpl
xchg
pop
es
pop
xor
cmp
sub
adc
fidivl
add
sub
sbb
add
inc
add
add
sub
push
fcoms
sub
add
add
andl
jecxz
and
inc
inc
mov
mov
addr16
fwait
mov
add
add
jp
xchg
add
add
mov
add
add
call
mov
push
cmp
jg
iret
push
cwtl
mov
mov
insb
add
add
loope
push
into
jl
sbb
negl
int3
mov
test
sahf
mov
add
out
pop
jo
xchg
inc
cld
jne
or
lret
jo
xlat
mov
bound
add
jo
add
add
jo
outsb
test
add
add
data16
add
add
add
leave
rcr
mov
sti
xor
add
adc
pop
fbstp
cmp
inc
mov
mov
pushf
in
inc
add
add
push
ljmp
mov
add
shr
add
add
mov
lods
pop
jo
daa
test
add
add
add
add
lcall
add
gs
imul
xchg
sub
pop
int
dec
dec
fistpll
int3
or
shlb
test
add
add
push
xor
mov
lock
sub
sarl
add
gs
fucomi
jmp
sarl
add
cmp
pop
pop
sbb
add
test
add
xchg
popa
test
mov
add
add
add
enter
or
cwtl
mov
out
jbe
sub
pop
test
cltd
int3
ja
cmp
add
add
add
pop
loopne,pt
mov
add
aad
mov
xor
in
pop
incb
xor
and
gs
jg
xor
add
add
mov
in
stos
dec
mov
push
imul
test
enter
into
stos
xchg
test
add
sub
add
add
inc
add
add
rolb
pop
aad
sbb
stos
jnp
add
xlat
cli
push
cmp
add
add
add
mov
xor
out
adc
add
out
pop
xor
and
add
add
lahf
inc
mov
mov
mov
add
add
lahf
mov
repz
xchg
dec
loope
cwtl
push
pusha
mov
daa
jp,pt
add
add
or
aad
jecxz
fstpt
sub
add
add
or
push
lds
fsts
pusha
mov
sbb
mov
cmp
xor
ja
imul
xor
add
add
enter
stc
rorl
sbb
es
add
and
lcall
in
lret
scas
test
xchg
xor
fdivl
pop
arpl
ss
dec
daa
dec
lods
pop
dec
lods
xchg
dec
dec
add
add
ss
sahf
push
lea
gs
dec
add
sub
ret
xlat
sub
mov
jp
ret
xor
lret
arpl
xchg
mov
mov
ljmp
jns
xor
arpl
cwtl
jmp
or
add
add
cmpsb
mov
sub
add
add
sbb
push
cld
repnz
jg
add
add
dec
mov
ljmp
jbe
jo
cltd
imul
xor
push
xchg
xchg
pop
xlat
das
popf
push
and
aad
add
sbb
pop
test
cmp
aad
sbb
test
imul
inc
mov
jae
add
repnz
imul
test
and
roll
add
add
dec
gs
add
add
stos
jns
call
call
add
gs
add
pop
ja
or
add
add
fnstenv
jo
jno
imul
add
sbb
jb
int
add
add
add
fs
xorl
movsl
dec
cs
arpl
call
add
subl
add
add
ljmp
add
add
push
jmp
add
add
dec
dec
mov
add
add
add
add
add
xchg
add
add
inc
mov
and
pop
cld
pop
pop
mov
lret
dec
sub
in
ja
push
adc
rclb
cmpsl
je
push
adc
icebp
push
lods
xor
mov
lahf
icebp
pushf
sub
add
xorb
das
stc
inc
mov
into
out
adc
push
xchg
addr16
add
add
fisubl
add
add
lods
scas
mov
add
add
mov
pop
add
icebp
sub
add
add
bound
sbb
out
sbb
xchg
fsubrp
mov
fcmovbe
jge
cmpsl
test
lret
fnstcw
fwait
pop
mov
inc
sbb
ja
inc
mov
cmc
fadds
clc
or
cmp
push
mov
mov
and
add
add
outsb
xor
gs
mov
jl
mov
shrl
cli
cmpsb
and
mov
jecxz
and
shrl
add
jecxz
or
sahf
lcall
inc
add
add
xor
les
push
mov
jg
and
dec
addl
add
add
pop
adc
lahf
mov
sbb
lahf
sbb
arpl
addr16
mov
add
add
add
xchg
into
aam
lret
or
add
add
movsb
xor
mov
cs
lahf
das
xchg
cmp
add
outsb
aam
in
aaa
cmc
mov
and
add
add
fwait
pop
add
dec
mov
aam
addr16
outsl
mov
add
mov
sub
add
add
add
pop
sub
int
push
outsb
ss
ret
je
sub
cmp
fs
jne
push
movsb
and
inc
sbb
mov
mov
inc
pop
dec
jnp
sub
add
add
repz
popa
repnz
push
int
and
add
add
mov
xor
fldt
or
jecxz
loop
pop
push
test
add
add
sub
add
add
jge
mov
adc
rolb
push
xor
xorb
imul
sbb
and
movsl
out
dec
into
xchg
cmpsb
insb
add
add
inc
in
dec
xchg
and
add
add
icebp
pop
jne
push
jl
mov
mov
out
mov
cmpsb
dec
loope
cs
xor
mov
push
jae
lret
mov
sbb
bswap
jl
aam
dec
add
add
shll
mov
mov
pop
and
xchg
pusha
add
add
cmp
mov
cmp
in
mov
mov
sbb
ffreep
rorb
add
xor
mov
push
addr16
in
outsb
sbb
lock
adc
add
jle
clc
pop
add
add
add
hlt
pop
or
pop
or
add
add
add
add
sbbl
nop
jns
and
jl
cs
mov
add
add
mov
imul
mov
add
add
clc
fldenv
add
add
and
add
add
int3
pop
mov
movsb
and
add
add
push
push
fmul
push
dec
add
add
cmp
loope
into
repz
lret
add
add
push
add
jge
mov
xchg
popf
dec
xchg
leave
repnz
add
add
mov
add
add
ficomps
nop
jae
sub
jp
xorl
and
inc
xor
mov
or
mov
in
adc
out
shl
xor
rcrl
movsl
fisubl
jns
in
faddl
sub
or
fwait
call
add
add
jmp
add
mov
mov
add
xchg
div
mov
add
out
push
into
cs
shll
sub
add
add
shrl
add
sbb
add
add
pop
push
fwait
lret
sbb
dec
mov
dec
inc
test
stc
sub
mov
mov
sti
mov
mov
sub
ljmp
lods
push
sbb
outsl
cmc
stc
nop
pop
fisttps
mov
inc
insl
cs
in
adc
dec
mov
lahf
sub
repnz
cmp
int3
pop
rcl
sbb
add
push
ficomps
jecxz
jecxz
sbb
and
test
insl
sbb
test
jno
ds
mov
call
pop
add
in
jno,pt
sbb
out
fdivs
pop
sbb
pop
add
jl
lcall
inc
add
add
dec
add
add
or
mov
out
mov
stos
cwtl
jmp
arpl
jnp
jle
xchg
arpl
mov
pop
add
pop
xor
inc
or
add
add
addl
add
inc
imul
xchg
test
fmuls
add
add
dec
add
add
aas
dec
mov
and
popf
imul
ljmp
insl
daa
out
mov
sbb
rolb
add
add
add
add
push
movsb
icebp
and
aaa
cli
dec
add
add
pop
sub
cmpsb
in
cmp
test
popa
jecxz
and
add
add
into
inc
dec
add
add
loop
enter
cmp
cld
mov
dec
ret
rorl
add
add
int
shll
add
add
out
movsl
mov
inc
mov
scas
jne
outsb
push
xor
add
and
add
add
in
cld
je
pop
inc
dec
mov
scas
arpl
mov
ret
mov
jecxz
mov
pop
xor
sub
add
add
xchg
sbb
add
push
pop
fdivrs
clc
pop
jg
rolb
mov
fcmovne
push
xchg
sbb
push
aam
clc
pop
outsl
sarb
roll
pop
addr16
push
cwtl
sub
cld
js
mov
leave
xchg
mov
es
sub
jno
mov
add
add
je
xorl
mov
sbb
js
xchg
jbe
pushf
sub
adc
jmp
push
xchg
hlt
lea
lock
addr16
jb
mov
enter
popa
xchg
fwait
jno
xor
leave
adc
dec
imul
mov
shll
add
movsb
mov
push
and
xor
insb
mov
pushf
addr16
fistpl
jge
jnp
sbb
xchg
scas
pop
gs
std
dec
mov
test
jl
pop
stos
int
inc
dec
mov
jmp
add
add
std
les
add
add
clc
push
sbb
add
add
add
ljmp
add
call
fsts
jl
dec
jmp
mov
popf
add
add
add
gs
sti
mov
add
add
daa
sarb
sub
js
add
add
cmp
loop
jns
lods
fdivrl
stos
inc
fimuls
lahf
pusha
add
add
rcrb
sysret
rcrl
mov
mov
cltd
mov
in
outsb
scas
xlat
mov
mov
ret
outsl
loop
ret
mov
xchg
or
add
add
add
jbe
cld
push
into
jmp
out
adc
out
adcb
and
ss
stos
dec
js
jp
sub
xchg
mov
cmp
xchg
pusha
mov
or
add
add
shl
or
jns
movsb
jae
lcall
pop
rcrl
lahf
adc
add
push
or
pop
push
and
pop
jge
mov
sbbl
test
sub
mov
imul
insl
mov
add
mov
jae
cld
xor
sbb
sub
sub
add
add
push
mov
mov
sub
inc
out
mov
dec
adc
mul
ss
test
inc
mov
add
loop
daa
rolb
scas
mov
jns
mov
jecxz
sub
ret
push
and
add
add
int3
fstpt
add
mov
add
add
inc
out
lods
sub
add
cmpsl
icebp
or
mov
insb
add
add
jge
jle
xchg
vunpckhps
addb
mov
lds
cmpsb
nop
jecxz
jae
add
add
pusha
mov
mov
add
repnz
outsl
arpl
lret
xor
add
push
addr16
in
xor
lods
std
pop
jae
mov
jne
jl
push
xor
inc
rclb
scas
or
out
scas
jle
push
jmp
dec
add
add
lods
ret
lahf
insb
mov
mov
int
testl
call
add
add
fsts
mov
pop
popf
inc
adc
add
add
add
add
lret
stos
xchg
add
pop
scas
inc
sub
add
add
jmp
insl
xchg
ret
jae
or
ret
adc
pop
rorb
cmpsb
xchg
or
roll
adc
cmp
fstps
jg
lds
test
rolb
add
add
inc
dec
adc
loope
jne
cmp
add
cmp
cmpsl
repz
add
add
shll
je
mov
add
adc
inc
add
add
inc
loope
pop
inc
mov
in
lcall
cs
out
addr16
xor
test
adc
mov
lock
mov
lahf
pop
hlt
push
sub
xor
rclb
jmp
pusha
mov
pop
mov
adc
pop
fwait
push
out
push
out
jl
add
add
sbb
add
add
dec
add
add
jle
jo,pt
dec
inc
add
add
xlat
xchg
imull
push
popf
or
aam
out
into
call
add
sti
fidivrl
mov
mov
inc
jge
or
dec
dec
xchg
add
cmp
mov
push
inc
cmp
jle
push
or
xor
push
scas
lea
fcompl
testl
push
iret
mov
jecxz
into
inc
mov
sbb
fwait
jl
push
fmull
sbb
int3
popa
shll
movsb
jbe
xor
add
add
out
ljmp
jl
xchg
or
add
add
pop
push
add
add
cmp
fsubl
test
add
add
es
or
cmp
sub
add
add
imul
add
add
xor
int3
cmp
sbb
xor
adc
aas
cwtl
imul
dec
xlat
xchg
fmull
mov
outsl
aaa
adc
pushf
std
ds
imul
add
add
add
jns
adc
scas
cld
movaps
jle
outsb
mov
push
xchg
xchg
imul
adc
ss
es
out
leave
enter
call
out
jno
jp
sbb
dec
mov
mov
push
dec
mov
leave
push
push
sbb
popa
adc
and
sub
add
add
push
xchg
mov
xor
mov
push
jns
sti
lcall
xor
cmp
leave
fs
adc
push
mov
hlt
push
outsb
xor
inc
aas
das
jg
test
fnstcw
or
ds
sbb
dec
xchg
mov
pop
adc
popf
xlat
xchg
shll
cmp
xor
add
hlt
cmp
les
ljmp
iret
movsw
jns
adc
icebp
mov
lods
mov
ljmp
cltd
std
mov
rorb
inc
mov
cmpsb
dec
xchg
aad
popa
adc
jge
test
add
add
ja
cli
mov
into
addr16
jne
sub
lods
nop
jg
add
add
add
cmpsb
mov
add
add
test
add
jle
sub
repnz
sub
xchg
lds
gs
add
loope
dec
add
add
mov
pusha
add
add
aaa
and
add
add
lahf
lds
pushf
adc
out
lods
dec
lret
adc
rcrl
or
add
movsb
push
mov
add
add
jbe
sub
mov
cmp
cmp
add
ficomps
inc
adc
sbb
scas
adc
ss
in
pop
mov
mov
out
ja
add
add
in
pop
mov
inc
fucomip
cmp
inc
add
add
inc
jne
xorb
xor
call
mov
lods
xchg
sarb
mov
inc
mov
les
imul
imul
scas
cmpsl
clc
push
popa
jns
mov
or
mov
cmp
cmp
in
jecxz
out
add
add
mov
ja
mov
jb
orb
inc
and
add
add
mov
in
pop
jbe
insl
sub
add
add
add
add
add
add
aaa
sub
add
add
jg
mov
jo
mov
pop
cs
xchg
jae
add
add
call
test
lock
add
add
ljmp
pop
es
stc
stos
xor
mov
sbb
jo
stc
cwtl
jg
jno
fdivrl
lods
shrl
pop
mov
push
out
out
mov
add
xor
or
outsb
mov
cmpsb
add
add
sbb
jmp
loope
mov
inc
push
inc
add
add
sti
ret
pusha
add
add
scas
dec
outsb
adc
xchg
mov
mov
push
push
mov
mov
push
jecxz
out
stos
lods
push
mov
dec
ljmp
clc
or
xchg
std
inc
daa
inc
ficoms
cli
xor
subl
add
ja
cli
jno
sub
pop
loop
mov
or
mov
sbb
insb
mov
cli
mov
add
fstl
outsl
cmp
ja
xor
aam
sub
sub
ljmp
dec
mov
xor
dec
cld
xor
add
add
fisubs
adc
xor
xor
frstor
dec
test
cmp
repz
out
push
testl
or
mov
cmp
mov
mov
add
add
xor
sbb
push
mov
rcr
inc
cmp
popa
lcall
and
cmpsl
mov
inc
add
add
fidivs
sbb
rcrb
jbe
rolb
sbb
shll
adc
cmp
out
mov
scas
push
mov
cli
and
add
add
add
add
lods
inc
fcmovb
movsl
cmp
bound
inc
add
add
inc
mov
lods
dec
pushf
add
les
push
add
testb
add
lret
aad
cmpsb
mov
mov
fcmovnu
pop
inc
adc
scas
pop
scas
jmp
mov
sub
push
testb
jg
add
mov
push
imul
loope
inc
mov
jno
adc
xchg
repz
push
mov
adcb
add
test
cwtl
rclb
add
das
movsb
mov
xchg
cld
xor
pop
bound
jecxz
push
xchg
jg
add
add
mov
outsl
stc
dec
mov
xor
shll
push
in
cmp
pop
into
inc
add
add
les
or
sub
add
push
or
xchg
pop
imul
jecxz
lret
xchg
xchg
outsb
mov
imulb
mov
and
add
add
test
mov
sbb
add
add
lcall
loopne
dec
add
add
aam
decb
fisttps
lods
mov
push
lods
adc
sbbb
add
cli
or
adc
test
lret
add
add
mov
inc
sub
iret
mov
add
add
mov
add
add
cmp
dec
xorps
leave
movsl
call
mov
rcrl
add
add
insl
icebp
mov
rcrb
add
sbb
mov
add
add
jecxz
mov
gs
sub
add
add
add
add
in
movsb
xor
mov
sub
add
add
add
in
clc
roll
data16
add
add
or
add
add
dec
movsb
popf
inc
gs
xchg
jp
or
testb
add
inc
fwait
jmp
add
add
sbb
add
add
cmp
leave
push
sbb
or
add
add
rep
add
add
and
sbb
mov
cmp
dec
and
add
add
cmp
jne
ret
sbb
inc
mov
cmpsl
pop
or
or
xor
add
add
add
movsb
dec
in
stos
dec
in
add
add
subl
or
add
add
add
int3
iret
ss
mov
jle
fbstp
repz
imul
add
jbe
repz
pop
xchg
aad
insl
call
sub
add
add
cmp
icebp
aam
mulb
sub
dec
sub
adc
mov
push
cmp
stos
xchg
int3
dec
mov
lods
sahf
cmp
shrb
add
add
add
add
add
mov
test
loop
scas
fldcw
sbb
add
roll
add
imul
movsl
pushf
mov
stos
cwtl
cli
and
sbb
add
stos
xor
sbb
stc
cmp
cmp
ss
add
xor
es
add
add
out
jo
add
add
out
ljmp
movsb
lahf
push
sub
add
add
mov
lds
jb
jg
sbb
popa
push
pop
and
cmpsl
imull
fsubrs
sub
popf
sahf
xchg
cwtl
testl
add
test
dec
add
add
imul
push
int
fwait
sarb
leave
aaa
cltd
cmp
add
or
push
mov
icebp
push
sbb
add
add
cmpb
pop
fadds
loopne
jmp
pop
sti
lds
pop
mov
ja
jno
lcall
xchg
rorl
scas
ja
cli
imul
add
add
xchg
mov
mov
mov
rorb
and
or
add
add
mov
outsl
iret
testl
lea
int
xchg
inc
mov
xlat
daa
lds
push
adc
jecxz
ret
popf
ljmp
pop
and
add
add
mov
mov
lds
out
add
add
add
or
xchg
fadds
imul
add
add
rorb
push
cmp
arpl
lahf
loope
xchg
movsl
dec
add
add
loopne
call
repz
dec
aad
sub
fcomi
clc
xor
stc
mov
jbe
sub
push
add
mov
sub
sbb
insl
es
add
add
aad
jmp
mov
adc
jle
push
inc
or
add
add
add
add
and
aaa
sbb
xchg
cli
and
jno
xor
add
sbb
mov
add
imul
add
lods
imulb
add
pop
jmp
in
mov
sbb
mov
inc
mov
and
add
add
lret
sub
daa
rolb
nop
sbb
or
jecxz
and
add
add
mov
sti
mov
fcompl
leave
popa
out
xchg
mov
sar
mov
call
add
cmp
cmp
lcall
lock
xor
or
adc
add
in
sbb
jb
orl
add
add
mov
cmpsl
std
cld
xchg
add
popa
xor
pop
adc
mov
mov
or
lret
loopne
push
or
add
add
lods
mov
mov
jecxz
adc
push
sub
mov
add
out
imul
jnp
clc
lods
xchg
adcl
mov
add
add
es
test
and
add
add
fidivs
mov
mov
xchg
cmc
mov
cltd
xchg
mov
enter
mov
xchg
sbb
xlat
adc
add
add
add
out
inc
adc
cmc
xor
cmc
cmpb
xchg
and
jecxz
add
add
add
sub
push
rorl
mov
xor
ja
mov
mov
mov
add
outsb
mov
scas
jb
lods
dec
mov
fidivs
movsb
rorl
inc
test
and
je
or
subb
add
add
add
add
neg
pop
movsb
and
sti
pop
jp
aas
test
jl
push
jbe
rcll
icebp
add
mov
add
std
lcall
add
add
add
xlat
cli
mov
add
add
sbb
and
clc
pop
adc
mov
jnp
adc
xor
addl
add
andl
add
loop
das
mov
mov
insb
add
add
dec
mov
fnstsw
outsl
addr16
aaa
push
sbb
arpl
xchg
cmp
pop
inc
pop
ljmp
out
jo
fildl
pop
jg
jbe
cmp
mov
mov
add
inc
ret
pop
add
add
outsl
mov
add
adc
cs
xchg
scas
jb
push
ja
aaa
rclb
fbstp
jns
push
adcl
mov
mov
push
cmp
add
add
adc
popf
gs
mov
scas
fcmovne
aas
outsb
in
popw
or
mov
fstps
sub
inc
mov
mov
xchg
adc
push
mov
and
add
mov
add
add
pusha
add
add
mov
adc
mov
into
jge
repz
sti
dec
mov
add
xlat
lahf
cmp
add
add
movsb
imulb
add
add
lcall
sub
add
add
mov
mov
dec
icebp
pop
outsl
xchg
mov
pop
and
and
ds
or
lock
mov
pop
push
xor
ret
cltd
lcall
mov
lcall
add
popa
es
in
sub
cs
ja
mov
arpl
mov
add
add
inc
ljmp
sbb
lret
jno
pop
mov
add
xlat
repnz
mov
inc
div
sbb
jo
mov
loopne
mov
sbb
and
mov
xchg
call
cltd
mov
aad
cli
xor
push
pop
push
mov
jo
adc
rcr
test
mov
imul
add
mov
enter
mov
cld
and
mov
add
add
add
fwait
sarb
add
add
pop
xchg
add
add
adc
mov
mov
fdivrs
out
mov
leave
das
sbbl
movsb
lret
push
inc
std
cld
jno
jmp
outsl
or
pop
push
xor
mov
pop
cwtl
imull
xchg
fistpl
je
mov
cmp
jge
add
add
je
jle
rolb
add
add
dec
mov
mov
insl
xor
cmp
ljmp
ss
inc
mov
pop
inc
mov
dec
mov
add
add
in
cmpsl
and
add
add
sbb
inc
mov
add
pop
lahf
shrl
movsb
cli
test
add
bound
push
ret
jnp
aaa
sarb
into
inc
aas
jg
and
add
add
add
add
xchg
add
mov
add
add
pmaddwd
or
cwtl
mov
js
or
add
add
add
add
or
add
add
mov
aad
in
imul
mov
jno
dec
cmc
inc
fisubl
repz
sbb
rorb
insb
mov
and
or
add
lock
in
push
push
pop
cwtl
ds
add
jmp
add
add
lahf
mov
xor
mov
lods
lods
outsl
movsl
xor
jno
jmp
mov
pop
cmc
dec
jbe
add
push
inc
sbb
mov
loope
lods
leave
jns
out
push
push
sbb
pop
cmp
stos
mov
jns
inc
mov
push
lret
dec
popf
dec
imul
add
add
add
mov
insl
daa
hlt
rclb
jae
mov
or
add
add
fcoms
mov
pop
fadds
addr16
pop
imul
xchg
jg
xchg
and
sub
jno
xchg
jmp
adc
dec
jmp
sub
ror
aaa
out
xor
icebp
cmp
dec
js
inc
add
add
inc
add
add
fisubrs
jp
lret
and
add
mov
shll
mov
stc
push
dec
test
add
add
mov
or
add
add
sbb
dec
cmp
add
jmp
add
add
pop
adc
mov
or
aam
push
inc
call
mov
cmc
js
mov
add
add
pop
jg
and
aas
add
add
pop
xchg
mov
ret
sbb
add
and
sbb
add
in
pop
push
jl
hlt
xchg
sbb
mov
mov
add
add
in
fisttpll
leave
imull
subl
popa
mov
mov
leave
icebp
ret
xor
scas
cli
pop
jp
test
js
call
inc
jl
add
add
je
xlat
dec
ucomiss
add
arpl
cs
cli
ss
std
out
or
mov
add
lahf
add
add
add
xlat
dec
cld
repnz
aas
imul
in
cvtpi2ps
notb
cli
xchg
mov
add
add
push
iret
add
add
add
mov
add
add
mov
sbb
push
cmpsb
pop
imul
xor
add
add
pop
lods
xchg
loopne
cld
shrl
shll
cmp
add
add
mov
mov
repnz
aaa
out
faddl
add
add
sti
mov
sbb
and
jae
push
push
lods
roll
lret
pop
push
mov
inc
sub
and
dec
xor
jmp
rorl
lret
cmpsl
fsub
imul
out
add
add
sub
add
add
add
add
mov
in
mov
xlat
fisttps
add
out
jp
int3
xor
add
add
add
add
ljmp
dec
add
add
and
test
mov
test
xchg
xchg
push
xchg
pop
dec
ds
or
arpl
outsl
mov
push
fstp
enter
stc
and
test
jecxz
mov
mov
in
adc
ljmp
mov
add
add
sbb
lret
xchg
add
add
pop
outsb
mov
fimull
lds
inc
mov
cmp
fnstcw
insl
inc
das
arpl
xor
adc
aam
lock
bound
xchg
cli
loope
or
dec
pusha
mov
shrl
mov
cmp
jnp
std
shll
add
add
jge
pushf
scas
cld
lock
std
loop
mov
pop
adc
repz
les
add
add
mov
add
rclb
lock
movsl
mov
fwait
xchg
popa
or
sarl
into
sbb
add
adc
add
add
xchg
insb
mov
or
add
add
pop
add
xlat
add
in
xchg
push
sub
add
add
cltd
inc
mov
mov
jmp
into
lock
jl
cmc
sub
leave
test
xchg
dec
out
in
imul
push
cmp
inc
and
imul
cmp
lds
add
dec
mov
pusha
mov
ds
movsl
in
add
add
stos
push
nop
lods
fisttps
add
jb
stc
adc
mov
jle
das
popa
push
out
sub
addr16
mov
add
adc
dec
mov
add
add
nop
mov
shr
movsl
add
add
xchg
or
cmpsl
push
add
mov
add
add
xor
add
sub
jbe
add
add
sahf
push
hlt
push
test
fst
inc
pop
jg
mov
cmp
mov
add
das
adc
mov
stos
negb
rcrb
mov
push
xchg
btrl
dec
and
pop
add
out
dec
jg
pop
sub
mov
and
add
add
stos
mov
cmp
cld
addl
pop
sarb
mov
add
add
push
popf
pcmpgtw
add
in
loopne
cmp
mov
add
inc
or
cmpsl
dec
jecxz
pop
cmp
cmpsb
aam
add
add
scas
adc
mov
inc
jmp
add
inc
movsl
and
arpl
add
shll
jno
dec
jno
adc
scas
mov
add
loopne
add
test
mov
xchg
nop
inc
and
dec
mov
imul
in
cltd
xchg
into
inc
adc
jmp
xor
mov
xor
daa
xchg
cmp
adc
pop
and
add
add
fildll
jnp
jge
in
xchg
sbb
or
sub
add
sarl
push
mov
push
jecxz
nop
xor
add
add
mov
pop
mov
outsl
push
clc
sub
add
add
jecxz
mov
cs
mov
fcmovnbe
into
sub
mov
add
sub
call
cltd
mov
add
adc
sahf
aam
pop
mov
push
or
cld
in
fdivrp
jl
pusha
add
add
fisubrs
inc
mov
add
add
inc
dec
cmp
push
xchg
mov
jg
xchg
push
pusha
mov
jnp
out
ja
stc
pop
pop
aam
pop
adc
jnp
pusha
mov
and
add
add
lret
enter
xchg
add
dec
mov
ret
movsl
push
ret
jle
arpl
fidivrs
mov
mov
or
mov
jle
xor
dec
shlb
and
xlat
cmc
pop
push
mov
outsl
call
add
add
push
ret
pop
adcl
or
test
sub
mov
aad
jle
sub
cltd
dec
mov
push
sbb
loope
xchg
mov
std
negb
loopne
sub
add
add
rorb
add
add
or
add
addb
sbb
fbstp
sbb
jno
call
arpl
addr16
sbb
das
into
loop
sbb
sub
add
lods
test
mov
mov
adc
in
mov
ret
pusha
mov
and
sbb
and
ja
cmc
notl
ret
mov
decl
add
add
xor
fstpt
and
add
and
add
add
sbb
xchg
ds
xchg
bound
shr
jne
mov
inc
cli
xchg
cmpsb
pop
and
cltd
pusha
add
add
ljmp
mov
cld
sti
pop
adc
jg
or
sti
mov
daa
push
jmp
add
jbe
mov
adc
mov
scas
pusha
add
add
pop
lods
idiv
int3
aam
inc
lcall
add
add
add
add
mov
xor
add
sbb
and
outsl
test
adc
mov
mov
pop
insb
add
add
sbb
add
std
ss
or
ret
add
or
add
add
add
in
out
stos
inc
cmpb
scas
jg
not
or
add
add
movsl
into
fidivrs
hlt
xchg
cmp
mov
sbb
in
mov
enter
add
add
push
adc
add
add
mov
fbstp
jg
jae
sbb
call
sbb
cwtl
cli
mov
fucom
fmul
mov
es
pusha
mov
dec
add
cltd
mov
sub
adc
jmp
adc
mov
mov
xchg
imul
in
leave
stc
leave
lret
subl
add
in
add
add
add
jle
add
add
add
popf
fldenv
add
jecxz
adc
aaa
cwtl
xchg
aas
xchg
dec
mov
unpcklps
add
add
sahf
mov
add
stc
cmp
add
add
mov
add
add
stos
mov
inc
mov
jne
cmpsl
idiv
pop
pop
push
mov
mov
dec
sub
fnstenv
mov
cltd
mov
ret
dec
add
add
lahf
sti
mov
add
add
add
popa
clc
int3
sub
loop
popf
gs
push
out
xchg
scas
loope
mov
cmp
cmp
mul
test
inc
and
test
push
popf
fistpll
mov
mov
scas
movsl
in
adc
add
add
add
inc
mov
add
add
les
cltd
mov
add
movsb
sar
out
add
add
add
lds
ds
dec
add
add
jg
mov
out
adc
dec
popf
pop
subl
jl
sub
xorl
mov
or
mov
add
add
add
xor
shll
jo
jecxz
rcrb
pop
in
stos
jmp
shrb
sbb
add
and
add
add
push
fisubrs
sub
adc
xor
cld
xchg
pop
push
imull
jbe
aas
cmpb
push
push
repnz
sahf
sub
add
pop
arpl
add
add
add
and
xchg
xchg
orl
repnz
mov
cs
jg
add
add
repnz
sub
mov
mov
mov
lds
and
popl
add
scas
push
repnz
cltd
repnz
add
add
cmp
imul
add
add
or
add
add
inc
add
add
xchg
sbb
pop
pop
ds
adc
popf
daa
or
sti
xor
or
xor
in
aas
or
push
fwait
std
loope
sub
les
add
add
add
ss
call
jge
mov
mov
pop
push
movsl
arpl
mov
push
out
pop
cwtl
or
iret
xor
or
lret
xchg
fists
das
hlt
or
add
add
loopne
fwait
les
add
add
and
popa
mov
add
test
add
adc
popa
sbb
add
add
add
inc
mov
ror
sti
sub
add
xchg
pusha
mov
cmp
lcall
jbe
out
ds
scas
pop
int3
es
loope
fwait
mov
jb
jbe
loop
push
and
sub
and
pop
dec
mov
jmp
aaa
jbe
xchg
stos
fsubrs
push
in
lea
xchg
push
xchg
push
dec
mov
test
push
fwait
pushf
xor
jle
hlt
cmp
add
add
add
xor
add
push
sar
xchg
push
cmc
imul
inc
add
xchg
pop
xchg
adc
push
daa
in
push
lret
subl
add
add
add
add
pop
jg
and
insl
pop
push
dec
lret
cld
pop
ljmp
dec
cmp
sbb
inc
push
jns
nop
sub
fldenv
sub
sub
add
add
fldl
add
add
add
push
rol
pop
push
lahf
push
push
sbb
out
pushf
inc
push
push
push
rorl
sbb
sbb
add
add
pop
clc
jb
orl
add
add
rorb
add
add
pop
leave
push
divl
mov
dec
mov
sub
cmp
test
mov
ret
mov
sbb
add
aas
clc
repz
insw
mov
pop
pop
fisubl
loop
int3
icebp
pop
fdivl
ljmp
dec
push
dec
add
add
stos
leave
popf
pushf
and
jl
push
cmp
mov
jns
movsl
repz
mov
add
loop
lods
inc
or
cmc
out
in
cmp
lea
push
add
ret
xchg
sbb
and
add
add
dec
mov
mov
push
repz
add
add
mov
xchg
daa
push
mov
into
test
cltd
js
inc
neg
push
pushf
push
fsubp
jnp
mov
jle
xchg
les
add
or
dec
dec
mov
mov
sub
add
add
push
push
xchg
push
pop
jne
lods
mov
pop
les
mov
inc
sbb
outsb
dec
inc
rcl
loop
xchg
pop
scas
mov
inc
add
add
and
out
mov
fistpll
xchg
mov
dec
aad
xchg
jae
push
loop
insb
add
add
jecxz
cld
lods
push
xchg
sub
mov
xor
add
lcall
add
add
cmpb
push
push
pop
push
mov
jge
aam
dec
mov
jmp
fcoms
push
pop
xchg
addr16
ret
push
sbb
loope
pop
xchg
jbe
test
ret
into
pop
ret
and
pop
repz
ja
xor
add
add
pop
cwtl
mov
insb
add
add
inc
es
in
push
mov
cli
out
cltd
addb
sbb
inc
add
add
les
lock
ja
push
out
mov
gs
push
bound
sbb
in
xchg
xor
jne
scas
ret
mov
add
add
add
push
adc
clc
push
push
aam
jge
jl
jmp
cmp
or
add
add
faddl
or
and
out
mov
mov
lods
xor
mov
xchg
cmp
push
xlat
cmp
fisubl
fisttpl
mov
dec
leavew
sub
cmpb
iret
fs
leave
mov
enter
mov
push
xor
enter
lahf
outsl
es
mov
dec
mov
add
loop
sbb
add
add
fisubl
add
mov
pop
mov
pop
and
add
daa
iret
pop
jle
out
cld
xlat
or
xchg
ja
stos
inc
add
add
loope
repz
neg
sbb
mov
xor
pop
pop
lahf
leave
mov
cmpsb
ja
adc
es
xor
sbb
jmp
xor
sub
jb
mul
and
add
sbb
cld
stos
out
push
pushf
mov
loope
dec
cmp
and
or
add
add
mov
repnz
pop
adc
stos
js
mov
in
push
fimuls
rcrb
das
jbe
ret
pop
jmp
xor
das
xchg
push
xchg
add
add
add
in
rcr
jle
mov
mov
jmp
mov
add
fcoml
add
stos
mov
add
add
lret
pop
jbe
or
pop
cld
xchg
add
mov
add
or
add
add
mov
sub
add
add
add
add
pusha
add
add
sub
mov
cltd
mov
jo
add
add
dec
and
add
mov
add
add
int3
pop
pop
pop
push
out
mov
or
idivb
pop
js
cmp
pop
pop
out
lock
ja
shlb
add
dec
adc
dec
push
shrl
sub
mov
outsb
mov
add
add
add
add
jbe
xchg
xlat
or
push
clc
or
add
add
mov
scas
inc
push
enter
dec
dec
call
push
jno
insb
mov
stos
and
dec
mov
jmp
xchg
add
add
xlat
loop
outsl
scas
xor
add
add
and
push
xlat
clc
andl
cmpsb
xlat
int
cld
hlt
jl
outsb
adc
repnz
pop
inc
xchg
into
xchg
out
add
adcb
data16
loop
add
add
mov
mov
subl
xorl
mov
fsubs
add
and
add
add
stos
push
cmpsb
fcmovnb
ljmp
add
sbb
add
in
les
mov
mov
jbe
in
mov
add
pop
test
es
test
in
cltd
jno
dec
add
add
nop
and
add
add
mov
subl
xchg
cmpsl
enter
push
out
fidivl
cmp
add
add
inc
xchg
testl
and
mov
add
cld
jl
push
mov
sahf
stos
adc
subb
mov
fdivs
add
add
cld
repz
or
add
cmpsb
inc
push
push
outsl
pop
cltd
cld
sbb
jbe
sbb
shlb
xchg
repnz
add
and
hlt
xor
dec
popa
dec
push
jnp
orb
adc
sbbb
push
lds
pushf
xor
jge
outsb
lea
or
xchg
in
xchg
call
mov
push
xchg
mov
ss
add
mov
sti
jne
xchg
movsb
in
push
lret
outsl
lock
gs
add
add
or
loop
test
stos
shrb
xchg
insb
add
add
test
insb
add
add
jle
fs
mov
fldt
xchg
xor
cld
push
add
add
add
add
add
fadds
add
xchg
add
add
add
dec
jp
and
pop
pop
test
and
add
stos
fsts
mov
sahf
mov
add
add
dec
adc
ds
and
push
xchg
sbb
loopne
sub
mov
inc
shlb
aas
fcmovnb
jge
into
mov
jecxz
cwtl
inc
insl
scas
mov
jbe
lds
es
mov
pop
xor
sbb
xor
pop
xchg
subb
xchg
mov
addb
sub
adc
mov
fmuls
jnp
mov
xchg
inc
add
add
fld
js
icebp
lock
fistl
adc
lds
loope
xchg
aad
push
push
or
int
cld
mov
jg
fs
cmp
popa
adc
mov
xchg
xchg
test
cmp
sub
test
mov
xchg
fs
sbb
mov
add
mov
add
add
add
add
fiadds
add
add
add
add
loop
add
add
add
repnz
int
imul
add
lock
fistps
sub
cmpsl
mov
mov
pop
push
lock
jmp
cmc
adc
test
mov
mov
xor
fcmovb
inc
add
add
js
es
imul
out
and
pop
mov
ja
jne
mov
mov
int
cli
enter
xor
add
add
sub
add
add
add
add
mov
sub
sub
add
add
es
dec
jg
ljmp
adc
xor
pop
rorb
sbb
cmp
add
add
dec
jp
adc
andb
add
add
fsub
popa
movsl
sbb
add
add
mov
dec
shll
add
add
mov
mov
add
push
or
add
add
inc
add
add
sub
shr
lock
in
mov
testl
jb
mov
add
test
inc
imul
mov
fistl
and
lods
icebp
xchg
pop
inc
rcr
lret
int
inc
test
test
jmp
ror
jns
das
xor
mov
cltd
dec
mov
in
insb
mov
push
lea
sbb
aas
sub
add
add
inc
sub
add
add
xchg
dec
fisubrl
pop
add
xor
popa
jne
les
mov
add
add
add
add
add
cmp
pop
xor
add
xchg
mov
cmp
je
pop
jp
fwait
imul
add
add
pop
hlt
imul
xchg
dec
mov
push
inc
sbb
add
add
dec
mov
jmp
adc
aas
mov
dec
iret
mov
dec
cmp
jae
sub
add
add
js
add
add
add
xchg
add
add
in
pop
sub
scas
xchg
sub
cwtl
pop
insl
sahf
insb
mov
and
in
push
cld
mov
mov
add
xor
xchg
aaa
mov
mov
es
mov
jmp
jle
pop
rcll
add
int3
rorl
dec
jl
jmp
pop
and
addr16
fsubrl
add
push
sub
loopne
add
add
pop
aam
or
mov
add
inc
add
add
cwtl
js
cmp
cmp
mov
xchg
adc
popa
jp
cltd
roll
in
inc
sbb
lods
mov
mov
mov
paddusb
mov
add
data16
mov
std
and
add
add
jne
and
cmpsb
add
add
pop
shll
sub
fmull
mov
js
ja
and
add
add
js
test
shl
push
cwtl
mov
out
or
xchg
mov
ljmp
pop
and
jp
pop
test
add
and
ljmp
mov
jne
jo
pop
stos
xchg
dec
mov
fdivrs
roll
jnp
pop
pop
int3
loope
xchg
shl
ljmp
mov
or
add
add
add
add
bound
pop
push
pop
into
add
test
add
add
sahf
dec
push
cltd
cmpsl
mov
jbe,pn
mov
add
in
lret
enter
push
sbb
pop
xor
insb
mov
push
fdivrs
sub
push
lock
add
cmc
cwtl
mov
pushf
inc
je
push
iret
cmp
loop
sub
add
add
sub
and
scas
inc
add
add
xor
icebp
negl
mov
xorl
push
sub
add
add
jne
dec
add
add
sub
jl
aaa
jae
repz
mov
xchg
popf
cpuid
xor
xchg
dec
add
add
mov
pushw
mov
lock
je
and
add
aas
lret
add
add
add
mov
lcall
cmpsb
sub
add
add
adc
xchg
or
aad
cltd
fstps
push
ror
mov
xchg
hlt
cmp
popa
into
xchg
dec
mov
adc
inc
mov
xor
add
add
sti
sahf
test
hlt
addr16
lods
cmp
sarb
aaa
hlt
mov
or
add
add
inc
add
add
data16
and
push
push
outsb
mov
add
add
shrb
sahf
enter
mov
dec
in
mov
es
xor
fistl
sti
jne
xchg
ja
mov
popf
sbb
xchg
jno
or
rorb
cmp
in
hlt
mov
mov
mov
lods
test
pop
mov
xorl
mov
sub
sbb
and
dec
add
inc
mov
bound
lods
lods
xchg
std
movsl
cmp
add
add
sub
dec
cmp
cli
or
jne
divl
push
gs
add
or
testl
insb
mov
sbb
jg
ds
mov
add
add
ss
outsl
lods
xrelease
push
push
inc
js
je
ret
sub
add
add
mov
mov
add
ds
sarb
add
add
push
adc
push
cmp
mov
adc
mov
ret
add
add
add
loopne
aaa
pop
add
push
sub
add
add
add
imul
sub
int3
xor
pop
aam
mov
add
add
add
icebp
and
and
mov
add
loopne
xchg
popf
dec
sbb
adc
add
loope
xchg
add
jmp
mov
cmp
aad
in
pop
lahf
push
aam
or
or
gs
test
sti
in
dec
dec
mov
loopne
shrl
rorl
loope
out
ljmp
adc
lods
lods
sbb
sbb
test
add
and
sub
add
je
jecxz
ds
add
add
add
add
push
mov
mov
cmp
pop
dec
mov
mov
or
in
push
pop
subl
add
enter
xor
jae
fs
mov
sub
bnd
cs
mov
ja
iret
sub
push
test
pop
nop
pop
sbb
xor
add
add
xchg
adc
cmp
cmp
mov
sbb
add
add
push
mov
pop
cmp
cmp
adc
insb
mov
add
mov
xchg
dec
dec
add
add
test
add
add
jl
stos
mov
jns
std
orb
mov
rcl
inc
add
add
ss
pop
cwtl
or
add
add
jbe
mov
inc
mul
add
dec
add
add
sbb
movsb
inc
mov
mov
rcrl
inc
aaa
mov
sub
jmp
or
push
ret
pop
aas
dec
mov
jbe
mov
call
mov
fidivrs
dec
adc
add
scas
pop
movsb
jnp
pop
ret
mov
inc
add
add
ljmp
mov
mov
add
cmpsb
icebp
js
sub
add
add
leave
push
inc
sbb
sti
rolb
stc
sub
dec
add
add
movsl
pop
dec
addr16
insl
xor
or
xchg
gs
dec
stos
fidivl
repz
sub
rolb
push
fsubs
ret
repz
aad
lcall
add
js
or
iret
lods
push
jg
jl
dec
mov
decb
in
mov
test
sahf
test
sub
rolb
add
aas
ss
dec
cmp
ss
outsl
ror
jns
add
add
sub
loope
push
rclb
cld
or
mov
dec
popa
lock
jae
fcmovne
aam
aad
je
and
and
push
leave
adc
mov
cmp
mov
push
shrl
mov
add
add
sub
add
add
pop
push
cs
cld
adc
iret
push
mov
add
add
dec
movsl
fistpl
push
rol
dec
fidivrs
testl
stc
das
xor
movsl
rorl
sarb
mov
das
pop
pop
and
clc
das
arpl
xlat
nop
hlt
repnz
mov
mov
cld
sarb
mov
mov
shlb
int3
outsb
test
xchg
push
test
fs
les
repz
add
add
fmuls
add
add
jecxz
push
lret
cmc
push
or
mov
mov
sub
and
call
dec
push
clc
lock
pop
and
or
jmp
andl
cli
pusha
mov
mov
nop
or
inc
jmp
in
gs
mov
adc
jns
add
add
jae
fwait
rcrb
outsb
xor
mov
sbb
or
add
cmp
fistpll
mov
in
out
aaa
shl
popa
mov
idivb
jae
add
add
add
jo
jbe
dec
mov
mov
jb
movsl
mov
add
add
shrl
add
jge
mov
repnz
cmp
pop
sub
cmc
enter
movsb
xor
pop
jl
mov
inc
mov
aam
cmpl
bound
add
add
test
out
pop
sub
add
add
cli
cwtl
jae
mov
aad
cs
js
push
dec
lea
cmp
bound
cmc
insl
inc
mov
lret
les
outsl
pusha
mov
sbb
xor
dec
jp
cli
out
jp
imulb
push
dec
dec
add
add
xor
mov
add
and
pop
mov
shrl
add
mov
jl
mov
xor
add
add
pop
enter
hlt
and
and
add
out
add
add
add
inc
pop
or
add
add
jne
ja
cmpsb
dec
data16
repz
jecxz
xchg
out
lea
inc
adc
not
push
xchg
fisubl
out
aam
push
fstps
clc
scas
sbb
shll
add
aaa
sti
rclb
dec
or
leave
or
std
cmp
jmp
jno
inc
mov
push
mov
jne
nop
jl
mov
add
ss
es
pop
popa
shll
out
or
add
int3
data16
add
cmpb
and
add
mov
test
lret
add
add
pop
sbb
add
inc
jp
xchg
inc
cli
in
andb
inc
or
insb
add
add
jne
adc
inc
lods
aad
sbbl
and
stos
pop
mov
inc
mov
nop
sbbl
add
add
cmp
push
xor
inc
scas
stos
insb
mov
add
mov
lret
outsl
ds
rcl
dec
and
lods
and
add
add
bound
add
add
ja
loop
vmovdqa64
outsb
xchg
rcll
mov
test
into
mov
testl
je
dec
add
add
sahf
add
add
add
add
outsl
js
mov
jno
sub
lea
mov
std
cmpsb
push
or
shl
mov
cmpsl
pop
ljmp
or
mov
loop
clc
or
add
add
push
into
les
jmp
sbb
add
add
ror
das
cmp
add
das
jmp
jae
dec
add
add
mov
add
scas
cmp
test
dec
repz
or
cmp
in
dec
loop
push
pop
scas
lret
adc
pusha
mov
cwtl
rclb
cwtl
daa
inc
xor
mov
enter
or
add
add
stos
mov
dec
add
add
push
jno
and
add
add
nopl
add
sub
add
add
jnp
dec
mov
mov
popf
dec
jmp
add
add
divl
test
or
sbb
mov
mov
scas
mov
sub
add
add
add
add
sub
add
add
add
jp
cmpsb
mov
lds
cmp
mov
test
int3
or
rolb
inc
mov
cmp
aad
mov
sub
xor
cmp
pop
in
sti
jnp
push
gs
dec
mov
push
enter
lahf
jecxz
jno
cmp
or
mov
add
loope
popf
ds
and
add
add
lcall
scas
mov
add
add
add
add
pop
lds
lea
jae
call
mov
je
aaa
mov
incl
and
add
add
mov
push
daa
lods
dec
ret
add
add
test
sbb
adc
loope
add
add
mov
and
add
add
add
adc
outsl
add
add
add
add
ficompl
mov
push
sahf
push
push
jg
daa
int
or
push
test
add
shlb
icebp
ds
xchg
addl
jo
data16
ss
inc
add
add
loope
ja
test
sbb
addl
pop
lods
rol
subb
add
call
xor
inc
add
add
loope
lcall
outsb
inc
stos
sahf
mov
out
andb
add
pop
xchg
jnp
mov
sahf
bound
add
add
jne
mov
push
mov
lahf
push
sub
add
add
fxch
std
xor
ret
negb
lds
aaa
xorl
cmpsb
fwait
push
rorl
das
pop
stos
mov
repnz
cmp
sub
pop
not
pop
sbb
dec
add
fidivrs
int
add
add
mov
ja
and
add
add
add
add
add
add
lcall
adc
mov
dec
mov
mov
add
add
push
jo
pusha
add
add
sti
and
add
add
add
xchg
or
mov
mov
xor
or
add
add
add
add
xchg
mov
cwtl
mov
pusha
add
add
mov
pusha
mov
das
loopne
std
aaa
dec
pop
in
mov
iret
inc
and
add
pcmpeqw
pop
sbb
and
adc
sub
out
sub
xchg
sbb
lcall
mov
add
rol
push
jle
push
lcall
sbb
add
add
add
sub
add
add
shrl
or
mov
ja
sbb
inc
inc
repz
std
pop
sti
loop
outsb
int
or
scas
jmp
adc
add
add
add
add
movsl
cld
test
cmp
add
ffreep
daa
inc
lock
lods
jo
scas
mov
add
add
xor
add
add
add
mov
xor
roll
add
add
test
push
lret
imul
add
add
ret
sbb
xchg
fsubl
aaa
cmp
sahf
das
xchg
xor
mov
push
shrb
pusha
add
add
mov
mov
pusha
mov
jmp
cmp
mov
mov
and
hlt
hlt
loope
mov
jle
mov
imul
mov
enter
popa
and
test
popf
push
pop
out
imul
cmp
sti
mov
pop
xor
mov
dec
int
mov
fdivrl
lds
scas
jge
outsl
jnp
push
mov
push
pop
xchg
jg
addb
outsl
shl
sbb
jo
clc
scas
sub
add
add
jne
adc
lahf
shlb
add
add
sbb
adc
inc
push
mov
fstpl
adc
mov
xor
xchg
push
sbb
add
add
sbb
adc
mov
fmull
imul
mov
mov
fs
pop
mov
jp
mov
seto
lods
pushl
mov
jmp
out
clc
mov
rcrb
add
add
movsl
rolb
in
lcall
mov
add
add
add
add
dec
mov
dec
sbb
inc
add
add
out
popa
inc
add
add
and
add
add
dec
mov
sub
mov
pop
cmp
push
push
in
mov
sbb
mov
inc
add
add
lock
jb
add
push
shlb
cmpsl
and
pop
inc
or
inc
jge
pop
jne
pop
jge
sub
lret
jb
scas
adc
addr16
push
xorb
out
jp
lahf
sub
mov
fs
xor
in
sub
add
add
xchg
lods
in
pushf
xchg
in
in
out
test
int
out
fbstp
lcall
cmp
lods
lcall
stc
cmpsl
mov
imul
sub
nop
notl
icebp
xlat
xorl
and
add
add
mov
lahf
andl
mov
xchg
pop
xchg
jne
mov
insl
bound
pop
subl
fwait
shll
jp
dec
mov
sti
aad
mov
ss
rolb
mov
out
sbb
sbbl
add
in
js
fwait
lahf
clc
mov
add
add
add
ss
add
add
jle
pusha
mov
in
add
add
or
or
cmp
into
adc
aas
jmp
test
movsb
jp
fs
sub
add
add
pop
ds
add
add
lock
stos
jle
sub
add
add
add
aam
adc
add
add
leave
adc
lods
add
add
add
out
test
pop
xlat
clc
xor
add
add
scas
mov
add
add
mov
push
jae
mov
add
pop
and
or
loope
les
push
push
lock
lods
ret
jno
mov
inc
fsubrs
sub
je
stos
setg
inc
add
add
cmp
jp
dec
mov
push
mov
cwtl
dec
add
add
ja
mov
mov
pop
adc
push
dec
mov
sbb
aam
and
pop
ror
mov
jle
fists
sbb
and
add
add
fs
inc
add
add
jno
mov
add
shrl
inc
dec
mov
enter
add
add
mov
data16
scas
fiaddl
inc
nop
xchg
frstor
jp
fwait
xchg
mov
mov
jo
iret
xor
cli
mov
xorb
rclb
insl
sbb
or
in
dec
jle
enter
add
and
imul
mov
mov
xchg
clc
mov
add
stos
daa
or
hlt
out
and
aad
inc
cli
mov
mov
sbb
add
dec
test
sub
add
add
outsb
pop
xchg
mov
lods
and
xor
cmp
adc
push
push
fwait
push
movsb
or
shlb
push
ja
rclb
dec
jo
mov
cmp
jle
stos
rolb
mov
repz
adc
into
mov
imul
add
or
add
add
lods
cmc
bswap
mov
push
mov
cwtl
ja
rclb
jge
popa
insb
add
add
loopne
ja
xchg
fidivl
test
gs
fiaddl
add
dec
add
add
jmp
jne
shll
loopne
xor
cwtl
stos
icebp
imul
andl
ss
or
shrl
sub
add
add
pop
xchg
mov
shll
fistpl
popf
dec
add
add
loop,pt
lock
add
add
jge
pop
xchg
jp
test
jne
das
cmpsb
mov
lret
or
add
add
fs
sbb
jl
jb
fdivrs
mov
pop
ljmp
add
add
push
inc
scas
lahf
das
mov
xchg
push
sti
es
mov
sub
call
inc
shlb
sti
fsubl
lahf
test
xchg
stc
jecxz
mov
jp
negl
mov
lds
jb
sarl
add
add
sar
popf
sbb
add
add
js
roll
enter
mov
mov
mov
sbb
mov
dec
orl
xchg
lcall
shl
adc
jmp
enter
mov
add
xor
add
add
adc
xchg
pop
cltd
call
call
shrl
add
add
xchg
xchg
mov
mov
push
inc
cmp
sbb
add
add
xchg
idiv
mov
cltd
jle
push
sbb
add
xchg
cld
and
mov
add
add
mov
pushf
sahf
fdivrp
pop
cmp
pop
cmp
add
das
mov
add
int
or
fistl
cmp
add
scas
cld
les
add
add
adc
outsb
ret
inc
sub
js
out
pop
push
xchg
xlat
mov
stos
jbe
pop
xchg
xchg
push
div
movsb
mov
inc
mov
std
repnz
sub
and
mov
lods
sar
cmp
rcrl
add
add
cmp
pop
ja
mull
movsl
jae
add
add
pop
repz
std
push
inc
lock
add
add
iret
xor
test
test
xchg
mov
add
add
xor
jmp
sbb
add
add
add
add
sbb
add
add
pop
mov
dec
mov
dec
ss
adc
shrl
add
add
mov
pop
fisubs
cmp
xchg
dec
mov
int
test
and
cmpsb
or
add
add
xchg
pop
in
fs
xlat
push
sub
jp
push
cwtl
mov
add
add
mull
add
add
mov
pop
push
jecxz
js
jno
jbe
pushf
mov
js
popa
loopne
loopne
add
fisubrl
add
add
push
push
cmp
mov
dec
mov
lea
scas
mov
mov
mov
add
add
cli
mov
and
imul
add
lock
add
add
add
cmc
add
add
add
std
cltd
mov
ds
and
add
add
and
add
add
push
adc
add
add
add
pop
fcomi
stc
popf
cli
ret
push
popa
outsb
inc
mov
xchg
in
mov
adc
mov
and
stc
and
or
add
add
jne
icebp
mov
idivl
xor
cltd
pop
xchg
cmp
add
sub
add
add
add
add
nop
adc
lea
mov
and
inc
xor
test
push
xor
mov
out
movl
cmpsl
jl
sbb
enter
gs
je
jns
push
iret
lods
test
test
dec
sbb
mov
sbb
add
pop
in
hlt
lock
mov
nop
nop
mov
cwtl
ss
add
in
in
pushf
cmp
rcll
sti
movsl
rolb
lea
xchg
movsb
cmp
sub
add
jnp
push
sarb
lret
pop
jb
jp
mov
jo
pop
js
fwait
or
add
add
hlt
mov
dec
dec
cli
xchg
in
pop
aas
xchg
ret
add
add
cmp
pop
push
jns
mov
mov
mov
in
outsl
sub
add
add
xor
aas
outsb
pop
repz
add
add
mov
out
scas
fcomp
ds
lods
hlt
aad
addr16
pushf
dec
pop
insl
sar
mov
jp
ret
fbstp
lods
mov
fidivrl
add
add
add
pop
lahf
dec
mov
add
add
add
add
mov
sarb
and
add
add
into
insb
add
add
lahf
ljmp
and
add
add
xchg
sti
mov
call
add
add
pop
fcmovnb
adc
jb
loop
inc
scas
add
aas
xchg
sbb
sbb
and
clc
mov
stos
stos
repz
sahf
and
add
add
data16
jae
pop
push
std
inc
push
dec
sub
add
add
or
add
add
mov
xchg
adc
inc
mov
and
test
add
add
adc
fisubl
add
sahf
clc
pop
fdivrp
insb
mov
mov
and
add
add
jno
adc
pop
push
sarl
dec
je
das
and
loop
or
add
push
rcrb
inc
add
add
fwait
jo,pn
les
loope
push
mov
add
andl
or
daa
pop
shrl
call
pop
dec
sub
add
out
mov
insl
xchg
sbb
cli
lret
cmp
fimuls
add
ss
push
sbb
jle
sbb
jg
and
stos
xchg
rcrl
mov
add
add
inc
out
mov
sub
push
add
xor
out
daa
popf
mov
mov
mov
mov
test
divl
ret
mov
pop
pop
adc
imul
cvtps2pd
add
rolb
mov
cmpl
add
xchg
dec
add
add
mov
add
in
nop
or
sub
mov
outsl
lret
shll
pop
add
add
jmp
lods
xchg
repnz
and
mov
loopne
mov
insl
mov
jg
jns
and
cwtl
mov
les
out
cmp
mov
dec
fisttpll
add
cli
push
lret
imul
fsubl
add
adc
mov
mov
test
scas
push
jbe
loop
jo
push
jge
into
gs
lea
add
dec
or
add
add
scas
ljmp
or
stc
shlb
cmpsl
cld
mov
adc
mov
mov
test
add
add
sbb
or
nop
xchg
psubsb
jne
pop
xchg
in
sub
add
addr16
imul
add
add
jb
push
lds
lods
out
push
jns
mov
jae
outsb
mov
mov
fstpt
pop
fcmove
ja
leave
rclb
test
gs
and
add
add
hlt
loope
hlt
adc
fs
jno
push
dec
push
inc
cld
jbe
lret
out
into
lds
scas
add
ss
mov
movsb
dec
lret
sbb
mov
fwait
pop
sbb
ja
sbb
xchg
ficoms
add
jb
xchg
stos
std
out
and
add
add
xlat
jbe
mov
addl
sti
sbb
xchg
lock
pop
mov
stc
pop
jecxz
xchg
xor
iret
cmpsl
dec
mov
xchg
push
push
cmpsl
test
shlb
insb
add
add
and
push
inc
cld
mov
pushf
aad
add
add
or
mov
push
push
pop
xchg
sbb
shl
cld
xchg
or
add
add
add
xchg
jae
pop
je
je
js
add
mov
lods
movsb
and
mov
in
inc
add
add
mov
adc
pop
xor
fwait
and
jnp
xchg
stos
fcompl
lods
cmp
test
cmpsl
mov
xchg
jne
jg
xchg
arpl
hlt
mov
xor
enter
add
add
scas
lods
push
stc
lret
jno
int3
mov
sbb
lret
leave
add
add
add
inc
add
add
cmpl
add
arpl
add
test
mov
push
cmp
inc
shl
ds
std
in
mov
jle
mov
jl
xor
xchg
add
push
stos
mov
addr16
lds
add
xchg
clc
iret
in
sbb
mov
add
add
cli
andl
mov
sbb
es
add
add
mov
add
add
cmp
mov
imul
call
inc
mov
sbb
mull
fnstsw
cltd
int3
cltd
jne
movsl
inc
pusha
mov
dec
mov
clc
test
xlat
adc
add
add
add
add
bound
sub
pop
mov
mov
sub
add
sbb
mov
inc
mov
xor
sahf
pop
lret
stc
mov
pop
pop
pop
sbb
or
subb
add
adc
mov
enter
add
add
popa
dec
sar
cmp
push
repnz
jge
mov
in
cmp
icebp
in
rorb
out
pop
pop
pop
xchg
dec
call
cmp
mov
or
add
add
push
xchg
push
mov
mov
bound
mov
fdivp
pop
mov
jp
mov
leave
fistl
add
scas
into
pushl
enter
dec
loop
cmpsl
test
das
mov
addr16
fwait
pop
das
adc
mov
mov
bound
mov
mov
ret
mov
pop
fidivrs
push
adc
add
mov
cltd
je
mov
push
out
lret
or
fcoml
sbb
inc
cmpsl
enter
jbe
mov
jnp
mov
mov
mov
aas
lds
add
jbe
imul
add
rcrb
pop
mov
loopne
fiaddl
mov
mov
andb
jae
push
insl
xor
xor
ljmp
add
pop
fdivp
jnp
mov
lret
lcall
add
rcll
push
outsb
jle
bound
mov
inc
aas
nop
aas
push
mov
fucomi
dec
add
add
les
test
rolb
outsl
xchg
add
add
add
fstps
data16
mov
jnp
jne
adc
pop
cmp
mov
add
add
cwtl
sbb
or
add
add
pop
fwait
adc
roll
loopne
lret
ror
icebp
imulb
in
fists
sbb
inc
mov
ds
aad
jae
ret
inc
add
add
add
inc
mov
jb
add
add
xchg
xchg
xor
out
mov
popl
and
mov
mov
adc
add
dec
sub
add
add
adc
pop
xchg
add
add
push
into
out
adc
mov
fiadds
dec
pop
scas
push
cmp
sbb
fdivs
mov
add
add
mov
mov
push
flds
add
add
loopne
aad
mov
popa
dec
inc
pop
add
mov
into
jge
jge
add
add
imul
stc
ja
xor
sub
testl
pcmpgtb
add
add
pusha
mov
or
lahf
stos
outsb
lods
lock
je
out
pop
and
add
add
cmp
push
mul
sub
push
push
mov
dec
add
add
cmpl
mov
add
fsubs
add
add
jmp
out
xchg
in
pop
xchg
in
cld
inc
mov
jmp
inc
mov
and
add
add
jl
add
add
push
mov
mov
add
add
inc
add
add
repz
pop
inc
imul
scas
cmp
xlat
cmp
adcl
mov
add
add
and
dec
arpl
push
int
pop
test
repnz
mov
jg
pop
hlt
sbb
fistpl
adc
dec
es
or
add
add
and
pop
iret
lret
add
cltd
cmp
add
add
inc
mov
pop
push
addr16
repz
add
add
in
xor
fidivs
add
add
add
fcmove
and
out
inc
dec
pop
xor
mov
push
lret
cmpb
rol
or
sahf
mov
mov
adc
icebp
push
pop
push
or
add
add
inc
jb
lea
aad
mov
ljmp
int3
in
add
mov
outsl
fs
xlat
int3
call
mov
xchg
loopne
ret
repz
push
in
in
das
lahf
add
add
add
or
jecxz
rcll
lea
add
mov
out
mov
push
test
push
cmp
or
add
add
into
addl
dec
push
arpl
jmp
jb
push
push
sub
add
add
add
add
push
out
xchg
add
xchg
rcrb
jae
or
add
add
subb
hlt
aaa
test
add
add
and
lahf
minps
add
add
add
sbb
xor
int3
jno
sub
add
add
pop
fadd
push
int3
pop
cli
sub
es
add
mov
sub
fwait
loopne
aas
leave
rcr
add
add
xchg
mov
out
test
inc
cli
mov
stos
push
stc
test
lcall
push
lods
fimull
sub
out
pusha
mov
mov
nop
jge
add
add
sti
rclb
cmp
add
inc
mov
jnp
pop
aas
cmpsl
daa
cmpsb
push
add
add
pop
mov
add
add
mov
adc
xlat
dec
lock
mov
sarb
add
add
idiv
cmpsb
in
pop
mov
jle
sbb
rcrl
push
stc
xchg
pop
orb
test
ljmp
dec
inc
push
mov
add
add
add
sub
jno
leave
lods
mov
div
xchg
jns
dec
sarl
add
std
shll
test
add
lock
mov
addr16
inc
mov
ja
inc
leave
int3
bound
dec
sbb
cmpsl
iret
lcall
adc
mov
addb
or
cmp
out
pusha
add
add
adc
or
add
add
sub
sahf
add
add
add
add
add
xor
add
add
or
hlt
cmp
add
add
pop
test
mov
add
add
mov
mov
lahf
or
add
add
in
pushf
push
push
iret
pop
iret
lahf
loope
lock
mov
mov
add
mov
cmpsb
inc
mov
jge
js
push
adc
dec
test
dec
mov
or
adcl
push
lcall
add
add
sbb
mov
sbb
pop
in
bound
push
jecxz
cltd
pop
dec
mov
inc
add
add
mov
aad
pop
int3
sahf
lret
push
push
inc
mov
and
inc
inc
mov
fnstenv
movsb
daa
lcall
add
sbb
add
add
jb
cmpsb
cs
mov
sahf
mov
sbb
fidivl
xor
mov
add
sub
mov
ret
cmc
adc
imul
add
add
fistl
daa
xchg
mov
add
sub
xor
andl
stos
mov
in
dec
in
pop
cmp
mov
inc
jle
push
iret
sahf
popa
fisubrs
add
add
mov
out
ja
imul
add
add
cld
xchg
movsb
push
cmp
sbb
xor
or
sarl
fistpl
mov
in
std
add
mov
mov
hlt
repnz
pusha
mov
sub
add
add
mov
lods
out
fists
xchg
jb
pcmpgtb
push
les
add
add
cmp
cmc
sbb
mov
push
imul
add
add
jno
pop
enter
and
inc
or
add
add
test
mov
add
int3
jo,pt
and
add
add
divb
sbb
ds
stc
xlat
repnz
les
insl
push
mov
add
add
and
add
add
mov
and
cmp
mov
xchg
fimuls
mov
adc
sub
mov
sub
add
add
out
mov
mov
add
add
or
add
add
ds
scas
xor
add
add
add
push
xchg
test
push
cmc
add
movsb
pop
sub
in
cmp
add
add
sub
xchg
stc
lahf
shr
test
xor
pop
push
mov
pop
xor
push
push
bnd
outsl
dec
add
add
add
mov
dec
add
add
and
addr16
or
lods
cltd
fwait
sbb
cltd
push
jecxz
out
sub
mov
cli
roll
cmpsl
sahf
xor
std
fimuls
test
jp
sbb
add
add
in
xchg
mov
shlb
or
add
add
add
add
push
mov
add
adc
daa
vcvttsd2si
mov
js
push
jne
fimull
fcmovb
mov
sbbl
inc
add
add
cmc
inc
add
add
dec
mov
add
add
test
and
add
add
and
pop
inc
add
add
in
cli
iret
mov
js
ja
addr16
mov
popa
int
mov
push
lock
in
sbb
sahf
cmc
jmp
add
add
inc
adc
add
add
arpl
or
add
add
cltd
in
loop
lods
mov
xchg
jnp
scas
ret
mov
mov
sub
cmp
add
add
inc
inc
add
add
int3
or
add
data16
lods
add
add
add
dec
bound
inc
mov
shll
inc
mov
les
clc
stos
mov
mov
sub
mov
lock
mov
sar
in
dec
aam
daa
dec
test
mov
xchg
xor
adc
add
mov
test
popa
xchg
outsl
mov
fwait
push
sahf
bound
out
add
add
adc
pop
or
movsb
inc
mov
fnstenv
jge
sbb
cmp
mov
cwtl
sub
pusha
mov
jmp
xchg
add
cmc
pop
mov
add
call
test
jno
cmpsl
sbb
add
xor
xchg
add
test
popa
or
or
add
add
inc
add
add
popa
popa
out
inc
add
add
add
add
add
cmpsl
xor
mov
lret
xlat
nop
push
sbb
pop
mov
stos
jecxz
xchg
stos
rcrb
xchg
and
add
add
add
add
add
adc
and
add
add
ficomps
sbb
arpl
add
add
test
pop
push
popa
cltd
aam
sub
adc
and
add
add
cmc
cmc
jl
and
stc
sub
add
add
jnp
xchg
iret
or
add
add
push
push
sbb
jne
inc
inc
mov
mov
rolb
xor
std
stos
push
fmuls
add
cmp
adc
dec
mov
xchg
imul
imul
mov
xor
movsb
nop
test
popa
fmulp
mov
lahf
inc
outsb
jae
mov
pop
or
add
add
jbe
xchg
sbb
movsl
in
sbb
int
mov
add
add
popf
push
in
add
add
daa
add
data16
push
dec
iret
rdpmc
add
movsl
push
mull
leave
fiadds
imul
ljmp
add
dec
add
add
repnz
mov
sbb
add
mov
mov
gs
dec
push
mov
pop
jg
mov
cli
aad
jb
rcll
fucomp
xor
pushf
shl
jbe
in
dec
ret
inc
mov
xor
push
add
push
jne
pop
rorb
mulb
fwait
push
jle
in
pushf
stos
add
cmp
decb
add
mov
and
xchg
aam
insb
mov
lds
mov
shlb
jl
aad
imul
rol
xor
icebp
push
in
out
shrb
stc
push
ljmp
inc
add
add
inc
add
add
mov
idiv
dec
out
push
sub
add
add
data16
sub
sahf
adc
repz
notb
sub
add
add
ja
pop
mov
jb
mov
ljmp
aad
std
and
enter
lcall
cltd
orb
add
movsb
xchg
inc
jo
add
add
lahf
pop
pushf
loope
mov
mov
data16
jb
aaa
push
jo
lds
cwtl
ror
xchg
push
cmpl
stos
flds
mov
or
cli
out
cld
jnp
lock
dec
mov
add
add
repz
pop
ds
nop
mov
aas
sbb
add
mov
jne
sbb
add
add
inc
loopne
add
add
push
fisubs
mov
cli
jo
mov
in
lret
add
add
push
rcrb
popa
inc
mov
dec
jo
sbb
add
add
fnsave
jae
fldcw
add
add
lret
push
add
xchg
add
add
add
fldcw
add
pop
sub
add
add
xchg
adc
mov
mov
fwait
leave
pop
xchg
push
sbb
add
add
push
dec
add
add
jle
inc
lret
into
dec
insl
sub
add
add
leave
push
and
add
add
push
xor
pop
pop
aas
sub
mov
cmp
mov
sbb
rclb
dec
mov
mov
push
sti
xchg
imul
xchg
loopne
add
imul
lret
xlat
in
jae
testl
insl
xchg
outsb
lods
test
sub
add
add
sbb
cmp
sar
pop
rol
or
cmp
insb
add
add
xor
out
fs
dec
pushf
dec
out
loope
sub
jp
push
fwait
dec
pop
and
xor
je
test
add
add
not
scas
loope
sar
mov
or
in
push
add
mov
mov
in
push
repz
add
push
push
cs
fidivrs
adcl
stos
gs
cmp
shll
adc
adc
add
cwtl
inc
push
adc
lock
leave
out
adc
sub
cmp
mov
movsl
icebp
mov
pcmpgtb
insl
inc
and
inc
daa
cmp
call
xchg
leave
insb
mov
pop
sub
add
add
subb
fimuls
js
insb
mov
or
in
or
jbe
out
xchg
push
mov
orl
in
mov
pop
jae
mov
mov
cmp
loope
popa
outsl
ds
mov
or
stos
pop
ret
out
scas
int
dec
jb
mov
or
add
add
into
sahf
in
add
ret
sub
mov
std
inc
gs
sub
add
or
add
add
mov
add
add
shll
mov
dec
ret
stos
mov
mov
cwtl
loop
popa
or
cld
ss
adc
mov
loopne
or
mov
add
add
add
add
cld
gs
lods
cmpsl
jecxz
gs
fs
mov
pop
xchg
cmc
push
mov
repz
mov
sbb
fcoms
or
add
add
adc
push
pop
jg
mov
xor
mov
jno
adc
xor
add
cwtl
sbb
lea
lock
add
movsb
jecxz
pop
cwtl
rcrb
insb
add
add
aad
mov
xlat
outsl
repnz
pop
loope
inc
add
add
mov
add
mov
mov
jl
loopne
pmaxub
push
and
outsl
mov
addl
xor
sbb
lahf
add
add
ja
incb
lret
or
sub
inc
lods
out
out
outsl
xchg
dec
jmp
outsb
sbb
adc
adc
pop
cmp
lea
adc
mov
dec
mov
hlt
push
xor
imul
lcallw
push
mov
push
cmc
push
mov
jnp
cmp
sti
aad
lods
pop
in
dec
add
add
data16
add
add
xchg
push
mov
xchg
pop
mov
aam
mov
arpl
or
add
add
lods
pop
mov
add
add
add
add
add
add
add
add
add
lcall
lds
mov
dec
jle
cmp
fwait
dec
mov
inc
mov
jge
das
jno
push
add
add
add
xchg
mov
shl
sub
rcll
xchg
sbb
add
cmpsb
int
push
sbb
jns
insb
mov
add
add
jl
sarb
cli
aad
imul
xchg
and
in
mov
loopne
push
in
jne
ret
inc
mov
jae
adc
add
add
jae
out
jmp
rolb
das
xchg
push
or
add
add
ret
ret
mov
or
mov
imul
mov
sub
gs
mov
ja
cmp
fidivs
mov
add
add
dec
fisubrl
add
or
mov
fwait
push
pop
inc
add
add
test
lret
push
pop
mov
aad
fistl
adc
add
add
lods
test
mov
rcll
je
push
icebp
cltd
ret
add
add
cmp
lods
jge
cmpsb
loop
sahf
jecxz
mov
mov
fdivl
xchg
jbe
mov
mov
dec
mov
ljmp
mov
cmp
add
ss
pop
xchg
xchg
lahf
cmp
call
sahf
inc
je
mov
add
add
add
xchg
push
push
mov
dec
pop
pop
dec
inc
add
jp
test
repz
ficomps
pop
xorl
stos
pop
sbb
repz
mov
mov
lock
add
add
pop
dec
lock
mov
into
pop
stc
pop
add
jae
adc
push
test
add
add
cmp
and
add
add
xchg
mov
xchg
in
sbbl
add
add
jbe
stc
or
push
cld
xchg
dec
cmp
stos
jg
aas
xchg
mov
xchg
adc
mov
add
mov
ret
stc
xor
mov
or
add
add
push
sbb
inc
cmp
cmpl
sub
inc
arpl
inc
je
jo
sbb
fcoml
cltd
pop
mov
jle
fistpll
pop
jge
aad
dec
mov
cld
testb
add
add
xor
fnstcw
push
adc
dec
pop
mov
dec
out
pushf
or
add
mov
lock
xchg
mov
insb
add
add
loop
xchg
sub
cmpsl
jne
pop
pushf
pop
inc
xchg
and
add
add
loop
ds
jo
lds
xor
add
test
push
lods
push
inc
add
mov
add
add
movsb
jmp
pushf
push
dec
mov
add
add
inc
fsub
shlb
inc
mov
mov
mov
adc
test
xor
popf
and
add
add
add
aad
sbb
add
add
aaa
xchg
xor
xchg
jnp
mov
add
insl
mov
add
add
xchg
popa
jl
pop
testb
pusha
mov
cmp
jne
mov
movsl
loop
data16
jae
es
jge
subb
mov
pop
jno
and
xor
int
inc
testb
mov
mov
ds
lret
je
ja
push
imulb
mov
jae
cmpl
add
add
jmp
fxtract
rol
rorb
pop
adc
or
loope
lea
shrb
pop
xchg
add
add
outsl
decb
mov
add
add
or
sbb
pop
dec
add
add
sub
add
add
add
push
out
add
mov
out
scas
lret
out
lret
rcrl
xchg
pop
pop
push
push
dec
or
pop
popl
insl
push
jae
leave
ret
jnp
jl
les
jp
mov
jne
fisubrs
movsl
mov
cmc
lfs
je
push
mov
sarl
add
add
mov
fs
mov
sub
aas
xchg
push
pop
in
add
sub
mov
add
add
cltd
movsb
nop
movsl
lea
in
dec
push
fildll
xchg
cli
cmc
sahf
sub
add
add
add
add
push
mov
sbb
pop
stc
movsb
mov
inc
daa
jbe
ss
jmp
clc
leave
add
and
dec
mov
lret
and
add
pop
sub
add
or
imul
loopne
outsb
cli
or
jb
jmp
mov
add
add
loop
stos
mov
loop
sub
add
add
add
insb
mov
mov
cmp
cmp
add
add
add
add
pop
dec
test
out
xchg
xchg
push
cmp
jp
mov
mov
addr16
dec
add
add
popa
pushf
dec
mov
add
mov
push
cmpsb
add
add
add
add
insl
scas
adc
mov
inc
xchg
sbb
mov
add
add
add
jl
mov
jnp
stc
cld
aam
jp
or
or
add
outsl
xchg
data16
mov
xchg
add
add
add
adc
aam
cmp
mov
into
sbb
add
add
xchg
add
add
call
test
add
pop
cmp
add
add
add
notl
push
inc
xchg
popf
fwait
outsl
add
mov
pop
call
add
add
xchg
xor
into
mov
mov
ja
cmpsl
idivl
add
jp
add
lock
pop
call
add
cmp
out
pop
mov
xchg
into
scas
mov
clc
inc
cmp
push
mov
pop
clc
sarl
nop
sbb
add
add
sub
std
test
jecxz
sbbl
jle
bndstx
scas
arpl
xor
mov
repz
fnsave
jmp
and
or
add
add
mov
cli
add
add
ss
psllq
idiv
lods
mov
add
add
les
ja
adc
in
out
pop
jmp
test
aaa
pop
nop
sub
sub
add
add
cwtl
jl
cli
into
cmpsl
ljmp
add
add
add
loopne
sbb
or
add
add
mov
lock
sub
test
add
add
push
sbb
movsl
dec
xchg
insl
in
jge
das
adc
sbb
cmpsl
cmp
and
add
add
push
out
push
addr16
aad
jns
jb
dec
into
push
lahf
mov
mov
add
and
jns
inc
mov
jle
mulb
add
jns
add
add
stos
test
rcll
and
add
add
push
pand
ficompl
mov
or
push
jb
lock
mov
push
stos
ret
xor
mov
leave
sub
ret
pop
jmp
adc
sub
jns
xchg
in
sahf
hlt
adc
sub
xchg
push
sub
mov
xlat
adc
mov
int3
cmpsl
push
pushf
inc
add
add
push
cmp
add
add
mov
push
or
xor
push
test
arpl
add
add
push
xor
add
dec
push
fwait
sbb
pop
ret
mov
push
je
mov
int
dec
add
add
loop
scas
es
mov
js,pn
cmp
add
pop
rcrb
add
or
xchg
testb
rclb
cli
and
add
add
add
add
jle
xorl
pop
mov
lahf
jnp
xchg
jbe
pushf
es
add
aaa
inc
mov
in
mov
sbb
dec
adc
cmp
sbb
cmp
or
add
add
stos
sti
jae
movsl
in
pop
push
out
xor
cwtl
ss
pop
iret
sbb
and
lods
subb
lret
rclb
mov
add
add
push
or
jo
aad
incl
jp
pushf
mov
xor
add
mov
shll
add
leave
ljmp
mov
jecxz
inc
lea
push
jo
add
add
insb
add
add
add
push
hlt
push
xchg
les
xor
loopne
mov
jp
aad
cmpsl
ss
cmpsb
pop
popa
loopne
xlat
push
stos
cltd
repnz
sub
add
add
sub
add
add
je
sbb
add
push
sub
je
mov
and
add
add
add
add
pop
sub
aaa
cltd
mov
cli
inc
stc
pop
xchg
mov
js
lea
aam
mov
rcr
call
in
sti
repnz
and
sbb
push
xchg
in
call
add
aad
ja
movsb
sbbb
or
cmpsl
mov
push
and
add
add
xchg
test
xchg
xchg
aas
push
cmp
sbb
int3
jp
addb
add
mov
enter
jle
jmp
test
inc
add
add
movsl
jecxz
test
xchg
sub
lret
mov
lds
pop
sub
xor
enter
leave
popa
in
push
out
mov
mov
add
push
mov
xchg
inc
mov
cwtl
dec
add
add
inc
and
add
add
sahf
jl
add
add
ret
out
repz
imul
sbb
sbbb
ret
add
add
shrl
bound
xlat
pop
cmp
xchg
add
add
add
add
sbb
insl
hlt
or
add
add
cmpsl
js
add
mov
nop
andb
add
imul
out
xchg
or
add
add
pop
clc
sbb
mov
repnz
mov
scas
or
add
add
mov
into
negb
cmpsw
int3
dec
sbb
mov
loop
push
aam
xlat
jo
insl
lret
and
and
mov
decb
cmpb
add
add
mov
or
add
add
or
add
add
mov
in
lea
fldenv
add
jbe
adc
sbb
mov
fisttpll
inc
roll
add
add
nop
insl
lods
and
mov
pop
pop
nop
fists
sub
sbb
mov
or
add
jnp
cmp
xchg
cs
das
xchg
loop
inc
dec
fimuls
rcll
outsb
and
cmp
insb
add
add
xchg
mov
pop
and
add
add
xchg
xchg
push
outsl
outsb
xchg
dec
jg
mov
add
add
icebp
and
jle
pop
sub
pushf
int
lcall
sub
mov
adc
add
pop
add
je
xchg
decl
push
inc
ja
add
add
mov
inc
mov
mov
mov
xchg
lods
pop
in
push
int3
imul
lahf
cmpsb
and
icebp
jo,pt
sti
pop
mov
jmp
popa
lahf
icebp
decl
or
in
mov
loop
js
aaa
push
test
adc
ljmp
test
aas
mov
add
add
sahf
popa
shrb
out
ud1
stos
fdivrp
mov
xchg
inc
xchg
in
or
int3
movb
add
xchg
js
push
iret
lods
inc
sarl
lahf
loop
mov
aad
jl
leave
xor
incl
sub
add
add
sbb
std
cmp
inc
jnp
jns
mov
add
sbb
rcrb
add
dec
xchg
jg
ja
mov
mov
inc
fists
cmpsl
mov
jns
or
add
add
lea
insl
mov
add
add
sbb
push
loopne
adc
add
add
push
call
or
pop
push
mov
ds
mov
sbb
fwait
mov
adc
inc
add
add
cmp
cwtl
and
add
add
add
add
sub
scas
cmpsb
mov
loope
int
push
xchg
add
add
jmp
inc
fldcw
sub
dec
mov
cmpl
sub
add
add
adc
mov
cmp
push
lods
cmp
std
subb
add
add
add
add
std
mov
mov
mov
add
add
add
inc
sbb
add
add
add
add
divb
and
nop
add
add
and
mov
pop
andl
adcb
rcrl
mov
cld
jle
imul
mov
sbb
mov
add
filds
add
add
insb
add
add
xor
int3
jmp
daa
out
fchs
es
add
add
add
lret
inc
add
add
pop
nop
ja
mov
add
add
and
insb
mov
nop
jns
and
add
add
add
add
add
out
std
shlb
add
mov
inc
pop
das
scas
pusha
add
add
je
mov
imul
mov
jl
mov
adc
mov
aam
cmp
loope
jecxz
and
add
add
push
sbb
insl
jmp
xchg
jecxz
add
add
adc
pop
push
mov
mov
mov
add
add
fcompl
jl
inc
sub
add
add
std
jl
inc
inc
mov
jno
jg
add
add
and
xor
sahf
inc
add
add
shl
dec
call
push
mov
add
adc
out
or
push
js
test
movsb
lock
jb
stc
and
outsb
outsl
aad
into
ss
push
rclb
sbb
daa
inc
push
sbb
cli
dec
jne
xor
cmc
push
inc
xor
repz
add
add
add
add
movl
inc
pop
ljmp
les
mov
pop
arpl
mov
add
add
lea
loope
inc
and
xchg
fadds
aad
lods
hlt
inc
push
push
ret
es
add
add
cmp
xor
jmp
xor
xchg
mov
mov
imul
sub
add
add
jmp
add
push
nop
rcrl
cltd
push
mov
jle
lea
test
add
and
add
add
sub
sbb
cmp
dec
sbb
adc
fstl
stc
mov
es
adc
mov
push
in
test
dec
xchg
clc
jo
adc
lahf
repz
sbbl
add
sbb
mul
sarl
inc
add
add
loope
cs
dec
cld
adc
dec
add
add
inc
lret
idiv
repnz
jb
cmp
cmp
add
add
add
xchg
and
add
add
xor
js
pop
dec
mov
sbb
dec
test
inc
out
mov
imul
test
shrl
add
mov
cmp
add
pop
sbb
mov
add
cmp
sub
add
add
add
add
gs
sub
faddl
es
sbb
xchg
pop
cmpsl
inc
icebp
ret
jp
jae
mov
pop
je
jmp
cli
jne
test
stos
pop
xchg
mov
add
push
sub
add
add
jle
lret
popf
dec
add
add
lret
int
std
mov
shlb
sub
add
add
into
xlat
fidivl
test
push
in
ret
andb
dec
mov
test
add
jns
mov
mov
add
add
popa
arpl
mov
cmp
add
add
mov
cmpsb
xchg
test
dec
jo
pusha
mov
in
dec
bound
es
add
add
stos
imul
push
mov
cmp
hlt
jmp
testb
cmc
imul
scas
mov
push
adc
lcall
cs
add
mov
add
mov
std
fwait
and
push
enter
push
enter
xchg
jmp
xchg
out
xchg
jb
xor
sub
mov
sub
cli
dec
mov
jecxz
out
mov
jbe
push
mov
mov
inc
mov
mov
add
add
inc
jae
pop
inc
bound
add
ficompl
xor
and
into
cmpsl
push
adc
add
fisubrl
call
test
fistpl
pop
dec
cmp
mov
add
shrl
pop
icebp
push
dec
stc
imul
mov
cltd
gs
shll
stc
mov
jp
insb
mov
jp
inc
push
jge
mov
mov
inc
inc
mov
hlt
or
add
add
add
add
cmp
cltd
ja
mov
jno
icebp
js
cli
out
jl
sub
inc
les
add
xor
outsl
addr16
or
add
add
xlat
out
mov
add
xchg
add
add
loop
mov
add
lcall
xor
enter
add
add
jne
inc
add
add
fbld
xchg
mov
mov
out
pop
rorl
loope
add
xchg
cmp
cmpsb
int3
movsl
shlb
cmp
inc
sbb
mov
mov
push
push
push
jo
loop
pop
mov
dec
notb
jmp
push
pop
test
ret
sbbb
movsb
out
pushf
sub
add
xchg
aad
out
loop
xor
loop
jne
mov
add
imul
cmp
add
add
in
mov
mov
aaa
lahf
dec
mov
ds
into
pusha
mov
and
add
add
stos
push
divb
das
pop
loop
sbb
mov
lcall
add
add
out
add
add
test
mov
loopne
rclb
imul
or
sub
and
aaa
es
jae
fucom
mov
ret
mov
out
and
sbb
inc
clc
jmp
add
add
add
mov
fs
lret
xchg
and
dec
pop
dec
addb
add
dec
pop
jge
xor
xor
fndisi(8087
xlat
push
movq
jae
into
or
mov
cld
shll
and
add
add
pusha
add
add
loope
aaa
fs
call
imul
jns
add
add
xor
sbb
scas
fs
nop
ret
icebp
pop
sbb
add
add
dec
push
inc
add
mov
clc
pop
movsb
inc
aas
adcb
and
add
das
sti
leave
dec
cmp
ljmp
inc
repz
cmp
add
add
push
pop
test
mov
rorl
test
mov
jle
sbb
sub
repnz
fadds
pusha
mov
mov
add
add
test
xor
add
add
dec
xchg
or
add
add
cmpsl
xor
mov
mov
jl
inc
dec
orl
or
add
rcrb
mov
int
cmp
add
cmp
test
adc
inc
xchg
xor
mov
sub
mov
mov
aaa
or
lret
insb
add
add
sahf
das
into
lods
mov
mov
push
shrd
outsl
iret
xor
dec
inc
cmp
add
xchg
push
sbb
and
add
inc
mov
sub
push
mov
test
sub
add
add
push
add
adc
mov
mov
push
and
cmp
arpl
add
add
jmp
mov
or
pop
movsb
cmp
shll
fisubrl
xchg
sbb
push
pop
out
sub
add
fs
fimull
add
add
xlat
fiaddl
in
push
sbb
aaa
jle
cs
ss
dec
mov
inc
arpl
add
movsb
aas
pop
mov
add
cmp
shll
add
jmp
es
orb
jmp
mov
push
jp
ror
push
add
add
add
add
add
dec
test
xor
in
out
cltd
pusha
add
add
ficompl
jo
add
jb
shrl
and
add
add
clc
popa
stos
rol
fsubs
int3
sub
add
add
sbb
add
xor
insl
jmp
mov
add
jmp
mov
int
mov
enter
add
and
add
add
mov
cmp
loop
mov
sbb
or
add
add
sti
fisubrl
enter
cmp
xchg
les
add
adc
in
ds
insl
pop
into
data16
inc
mov
out
mov
lcall
inc
xorl
pop
mov
inc
mov
inc
mov
mov
xchg
add
jg
add
add
cmp
mov
aad
in
mov
dec
add
add
or
test
imul
lods
popf
test
fscale
pop
adc
mov
pusha
mov
lret
imul
cmovae
das
mov
push
in
mov
add
add
mov
xor
push
sahf
stc
dec
dec
mov
add
add
dec
xchg
call
add
out
lahf
dec
pushf
cs
fildl
add
add
sbb
sbb
xor
lds
sbb
stos
push
into
jbe
fildl
mov
orl
add
add
push
mov
cmp
sahf
inc
adc
mov
out
xchg
adc
add
mov
mov
rcrb
add
push
and
add
stos
dec
sbb
imul
mov
mov
test
lret
nop
mov
push
lahf
rcrl
arpl
push
pop
xchg
adc
addb
sub
add
add
cmpsb
pop
jp
in
mov
dec
icebp
lahf
mov
sub
inc
cs
shl
sbb
cs
or
das
ficoms
movl
pop
scas
jecxz
dec
jns
pop
imulb
mov
or
mov
mov
pop
cmp
push
std
sub
mov
int3
in
push
push
push
lds
mov
push
dec
add
add
add
cmc
dec
xor
adcl
add
add
add
insl
iret
cwtl
daa
sbb
add
add
std
mov
pop
daa
fdivrs
push
shll
add
xchg
loop
bound
movsl
addr16
cmp
mov
popa
rol
jo
and
int3
mov
or
add
add
loope
and
push
or
cltd
sub
dec
mov
pop
int
push
lods
mov
std
adc
adc
stos
push
ror
fwait
jmp
jg
or
sub
add
add
add
ds
mov
push
mov
sahf
pop
jle
jae
ss
add
add
or
lods
or
add
sub
hlt
cmc
sbb
test
inc
movzbl
add
add
pop
aam
add
add
cmp
aaa
aam
mov
hlt
loopne
das
add
add
add
mov
inc
sbb
add
add
push
mov
je
mov
pushf
mov
mov
sbb
repz
add
add
add
add
add
jg
je
lcall
add
ljmp
arpl
imul
and
add
add
pop
sbb
adcb
dec
sbb
jo
loopne
add
add
cmp
sub
add
sbb
jp
mov
adc
add
add
mov
adc
inc
in
das
enter
or
repz
pop
aaa
sub
xchg
sahf
mov
jl
pop
xor
sbb
data16
add
add
add
ss
gs
cltd
push
cli
cli
test
lahf
jb
ljmp
add
rorl
cmp
push
inc
das
idivl
push
sbb
repnz
mov
ret
fiadds
sub
cmp
fists
add
add
mov
add
add
loope
in
xchg
xchg
scas
rcrl
stc
sahf
cmpsl
dec
std
int
jecxz
mov
cmpsb
or
add
add
mov
mov
loopne
pop
cmpsb
cmpsb
or
add
add
sbb
imul
add
cmpsb
push
idivl
and
mov
push
iret
test
cmpsb
loop
xor
testl
xlat
loop
xor
sbb
add
add
cmp
xchg
mov
push
jo
lds
add
add
add
inc
mov
test
add
add
mov
xor
add
add
add
fisubs
cld
ds
add
add
cmp
add
dec
mov
xchg
xor
pop
or
add
add
and
test
adcl
mov
add
add
repnz
add
add
add
mov
add
aam
mov
aas
xor
not
lods
pop
fisttps
fildll
cld
push
out
jo
jl
int
mov
add
add
adc
pop
add
sbb
clc
xor
add
add
ds
roll
and
insl
iret
dec
push
sub
push
mov
popa
dec
in
sarl
notb
enter
mov
lret
cmc
aaa
leave
fstl
push
rorl
add
add
sahf
loopne
movsl
xchg
pop
add
and
xor
jmp
std
clc
jp
dec
out
mov
add
pop
pusha
mov
or
mov
in
sarb
clc
jnp
clc
push
adc
fadd
mov
fdivrl
push
fidivrl
add
cld
xor
outsl
push
in
repnz
or
mov
xor
and
push
shl
add
jae
in
sub
mov
out
pushf
fnstenv
inc
sbb
add
add
add
mov
mov
mov
out
sti
into
push
add
out
push
fmull
js
push
add
ret
lahf
fsubrs
arpl
add
repz
cmp
add
add
repnz
int3
imul
add
add
mov
inc
add
add
dec
loopne
cwtl
nop
arpl
add
add
xchg
jbe
faddp
scas
inc
out
loopne
or
mov
icebp
sub
sbb
insl
jae
inc
xchg
leave
mov
push
pop
imul
add
add
fiadds
vpsubusw
popf
jmp
leave
mov
adc
adc
xor
pop
loopne
push
cwtl
sub
mull
adc
ss
pop
rorl
mov
add
add
cmp
lahf
ficompl
xchg
jbe
xchg
andb
or
pop
add
dec
mov
xchg
mov
cmp
and
add
das
popa
andl
adc
sahf
sub
cmp
js
jle
mov
stos
hlt
jg
fsubl
inc
cmp
pop
sub
or
add
add
or
std
insb
add
add
flds
repz
dec
inc
arpl
push
popf
outsb
in
xchg
int3
out
fisubl
add
add
cltd
ja
add
add
mov
xchg
in
dec
add
add
lret
mov
ror
int
cmp
cmpsb
push
and
add
add
mov
push
sub
add
add
xchg
lahf
xchg
repnz
ret
push
aaa
mov
aad
jne
add
add
jo
mov
sahf
push
stc
add
je
xor
jno
insb
add
add
mov
inc
mov
pop
cwtl
lret
daa
mov
add
and
mov
cmp
pop
jo
mov
add
add
lcall
mov
push
push
adc
arpl
add
pop
push
ret
mov
mov
cwtl
lret
adc
out
or
add
add
and
add
add
mov
add
add
int3
js
imul
pushf
cmpsb
pop
adc
pop
in
adc
mov
inc
add
add
and
and
hlt
xchg
inc
jne
xchg
gs
lret
faddp
iret
xchg
xor
jge
pop
cmp
aam
in
mov
inc
mov
or
xchg
mov
cmc
iret
jmp
inc
mov
addr16
mov
xor
add
add
mov
mov
dec
add
add
adc
inc
enter
ss
mov
mov
xor
jmp
sub
inc
sbb
add
add
add
add
xor
mov
mov
xor
mov
xlat
ret
and
jnp
push
cmp
mov
daa
orb
add
add
fldcw
add
js
xor
fcoms
je
jg
fidivs
add
or
sahf
adc
xor
and
xor
jae
int3
jg
push
sbb
movsb
mov
shll
add
add
lcall
or
cmpb
add
mov
shld
jle
mov
stos
mov
jne
add
stc
hlt
inc
or
add
in
clc
jmp
insb
mov
mov
mov
xchg
inc
mov
jb
pop
push
repnz
jmp
iret
mov
add
add
das
mov
add
add
add
out
aad
or
lcall
rolb
insb
mov
pushf
out
lds
aad
das
lret
sub
sbb
imul
mov
rol
fxch
ljmp
dec
push
push
int3
es
fiaddl
xchg
movsl
push
push
out
add
add
add
add
repz
adc
or
sti
bswap
clc
inc
jns
add
add
cmp
cmp
add
add
sbb
sub
inc
pop
shll
aad
ficompl
add
add
dec
xor
stos
mov
inc
dec
les
jbe
ljmp
insl
imul
or
lret
dec
fwait
idivb
das
and
add
add
loope
pop
fwait
jbe
push
inc
add
add
push
jmp
jb
lods
pop
xor
cmc
pushf
pop
fs
cmp
add
add
mov
add
dec
xchg
push
pop
lcall
fmull
and
add
add
shld
xlat
sbb
dec
jecxz
daa
and
ds
push
arpl
cwtl
dec
add
add
add
add
add
repz
jno
enter
and
push
repnz
pop
adc
xor
and
mov
cwtl
xorl
mov
andl
out
adc
inc
add
add
mov
adc
enter
pop
xchg
mov
dec
inc
add
add
out
push
or
je
ret
ss
addr16
pop
cld
stos
sbb
or
movhps
cmpps
mov
mov
lcall
clc
push
jp
adc
scas
test
push
push
cs
scas
repnz
jno
rcll
pop
add
mov
xor
mov
repnz
jmp
push
mull
icebp
movsl
and
pop
and
xchg
add
add
inc
add
add
popf
mov
cmpl
add
add
pusha
mov
jbe
xor
stos
adc
mov
mov
fcoml
inc
sbb
add
loope
test
pop
add
dec
data16
xor
add
add
or
pcmpeqb
imul
add
add
mov
mov
pop
imulb
push
das
pop
cli
stos
test
loopne
xchg
mov
out
test
ret
and
test
add
mov
stos
lret
cs
add
xor
aaa
mov
add
pusha
add
add
out
pop
test
in
shll
sub
add
add
xorb
add
add
inc
mov
repz
xor
add
fcompl
add
or
or
add
add
add
add
jmp
mov
inc
dec
mov
pop
aaa
fnsave
sub
add
add
aam
pop
cmp
outsl
mov
ja
push
sbb
aaa
adc
push
orb
insl
lea
add
and
jbe
inc
lret
imul
add
ret
push
mov
mov
and
dec
add
add
rcll
pop
push
xchg
pushf
jae
aaa
out
sbbb
inc
add
add
das
mov
shrl
movsl
sub
add
add
inc
hlt
xchg
xchg
enter
js
ja
mov
cs
dec
mov
stc
lods
mov
shrb
jl
test
hlt
ja
mov
clc
data16
mov
add
mov
mov
repz
sub
add
add
int3
adc
add
add
mov
in
call
jle
xchg
lahf
pop
sbb
lods
shr
mov
add
inc
sub
add
add
mov
ret
rorb
add
add
add
lods
pop
sub
jmp
sti
dec
mov
enter
or
pop
add
rolb
enter
stc
shlb
fistpl
sbb
dec
pop
sti
imul
adc
or
add
add
jle
mov
add
imul
scas
cld
movsb
scas
shrl
dec
in
pop
pop
mov
clc
mov
add
dec
daa
or
add
inc
test
cwtl
pop
loope
pop
sub
push
decl
add
mov
dec
mov
add
xor
dec
add
add
add
and
in
arpl
andl
add
add
mov
adc
fs
test
dec
mov
pop
jge
inc
mov
daa
out
xchg
mov
inc
or
mov
mov
add
or
imul
mov
lock
outsb
or
mov
add
add
mov
add
mov
ficoms
push
lahf
cmc
pop
adcb
repnz
jno
cli
mov
out
ds
xlat
cmp
icebp
push
lods
dec
add
add
stos
cld
mov
loopne
add
add
dec
mov
loope
testl
mov
push
aad
cld
pop
iret
jbe
mov
loopne
rorb
inc
add
add
movsl
out
data16
add
add
in
push
ja
mov
aaa
pop
mov
pop
scas
push
rcrl
xchg
mov
adc
data16
mov
clc
sbb
xchg
push
dec
adc
sub
add
add
inc
lea
and
push
push
push
dec
ret
or
add
adc
xor
jg
sar
ret
mov
mov
pop
lcall
add
add
add
add
xchg
testl
mov
mov
mov
cwtl
dec
addr16
add
pop
ror
shlb
sub
add
add
sbb
and
xlat
dec
jmp
pop
jg
dec
mov
test
mov
addr16
leave
and
add
add
add
out
inc
rcl
call
lret
push
pop
adc
dec
roll
cmp
in
sbb
cltd
cmp
pushf
sbb
xchg
push
dec
mov
mov
out
push
stos
push
sbb
roll
loopne
imul
mov
push
xchg
mov
aad
loop
les
add
jge
adc
add
push
adc
dec
add
add
mov
mov
jp
les
mov
xchg
sub
ja
sbb
add
add
add
add
fsubrl
mov
and
add
add
push
add
add
add
icebp
dec
cmp
jmp
xorl
shr
arpl
push
addb
cmpsb
add
add
jno
ds
jo
xchg
xor
xor
in
jb
lock
dec
cmc
mov
loop
enter
sahf
sbb
pop
xor
mov
lea
repz
mov
inc
imul
push
pop
mov
jne
cmc
dec
sbb
adc
inc
mov
xor
jo
cmc
es
xchg
add
pop
adc
pop
cmp
or
add
add
add
add
jbe
mov
popf
pop
mov
add
add
xorb
shrb
dec
cs
add
add
sub
add
add
pop
cmp
mov
push
cmp
sub
adc
or
sahf
mov
std
xlat
minps
pop
cmp
stos
sbb
pop
sbb
inc
mov
mov
mov
fbld
out
lea
add
adc
in
xchg
xchg
jmp
xor
fldenv
add
pusha
mov
xor
outsb
pop
xor
imul
mov
cmp
push
imulb
stos
fcoml
icebp
add
add
dec
int
inc
or
adc
add
aaa
jmp
les
fwait
xchg
mov
inc
push
jg
push
adc
pop
jbe
lret
sub
rcll
sub
xchg
fisttpl
inc
pusha
mov
adc
jb
inc
mov
cmpsb
icebp
arpl
test
jg
jge
aas
xchg
cli
push
dec
inc
dec
add
add
daa
mov
mov
int3
fldcw
cmp
xchg
call
mov
cs
outsb
or
jle
push
imul
adc
orl
mov
mov
or
pop
movsb
sbbb
mov
add
test
les
les
jge
sub
xchg
jle
div
adc
mov
adc
in
mov
inc
pop
rclb
add
add
add
cmp
cld
adc
in
and
into
das
sub
jns
push
sub
adc
adc
cmpsl
dec
mov
xlat
sbbb
xchg
sbb
add
add
add
add
and
mov
or
mov
jmp
add
mov
add
clc
arpl
leave
inc
xchg
sub
add
add
cld
loope
cmpsb
out
inc
arpl
jnp
jne
pop
push
std
mov
mov
add
add
bound
out
cmpsl
call
xchg
jne
mov
aad
xor
adc
sbb
imul
add
add
and
add
add
and
push
scas
cli
int
std
rep
sub
sub
pop
out
cmp
adc
sbb
out
pop
call
add
jno
sbb
xchg
mov
xchg
add
arpl
aas
int3
cmpsb
ret
add
add
add
add
add
xorb
add
add
add
mov
fsub
mov
push
xchg
add
add
iret
aad
into
ret
lds
int
inc
sub
add
add
add
add
add
mov
jae
stos
cmp
mov
subb
xlat
mov
sbb
stos
adc
add
add
jne
push
mov
pop
test
sub
mov
pop
fistpl
add
ret
lods
lret
shrl
add
sbb
mov
test
stos
sub
adc
and
add
add
add
add
pusha
add
add
push
sub
add
add
lahf
xchg
sub
enter
add
add
xlat
sub
bound
or
add
add
add
add
inc
add
add
jl
or
aaa
movsb
jae
push
test
push
fidivrs
push
jne
jne
add
add
add
pop
fwait
push
loop
mov
lock
popa
aam
or
inc
mov
je
and
add
add
fstps
jae
mov
mov
hlt
add
add
add
jb
sub
add
adc
movsb
jne
outsl
add
sub
add
add
shll
xor
lods
ds
das
push
adc
mov
in
cwtl
lock
xlat
out
cmp
add
add
add
add
add
mov
mov
push
add
add
add
mov
push
insb
mov
mov
mov
ljmp
sbb
lods
insl
push
push
sarb
stc
pushf
add
push
jl
aad
jmp
lret
pop
adc
fwait
ljmp
cs
cmp
mov
pop
imul
push
push
mov
cmp
add
cmc
leave
lret
add
sub
dec
loopne
into
sbb
xor
nop
into
test
test
xlat
dec
ds
mov
fmull
sub
add
adc
shlb
test
sbb
dec
push
inc
xchg
gs
add
add
stc
xor
jnp
notb
jmp
dec
mov
loopne
test
mov
add
lods
xor
imul
jmp
cli
jmp
jl
mov
stos
adc
mov
in
sub
mov
cmpsl
mov
mov
add
add
sbb
push
es
sbb
add
jo
arpl
mov
xor
fcmovne
mov
inc
js
mov
adc
mov
rol
bound
outsl
ret
mov
das
fnstsw
mov
mov
mov
mov
inc
mov
scas
jne
daa
sahf
ja
inc
ret
mov
dec
add
add
mov
jl
aam
loop
call
add
add
xchg
icebp
lret
fsubrl
cmp
mov
out
or
and
add
add
dec
fs
inc
out
cld
mov
xor
adc
loop
add
pushf
mov
jns
pop
addr16
scas
nop
clc
lret
imul
mov
inc
add
add
add
lea
mov
mov
mov
xchg
pushf
pop
ss
imul
add
add
sti
jge
nop
inc
iret
mul
sbb
negb
dec
lock
pop
adc
cmc
inc
add
add
push
pop
dec
lcall
xor
add
push
inc
out
lcall
mov
xchg
faddl
push
in
fidivrs
data16
sbb
mov
xchg
ljmp
ss
dec
fcomi
mov
lods
ds
jo
xchg
mov
add
flds
lods
in
idivl
jb
divl
pop
push
mov
sub
mov
scas
test
aam
push
scas
mov
jo
push
movsb
and
add
add
jbe
inc
mov
jecxz
fwait
add
sub
fisttps
push
or
repnz
int
dec
and
add
add
cmp
xchg
test
add
enter
cmpsb
xchg
mov
inc
mov
insb
mov
xlat
jb
mov
mov
lock
popf
and
add
add
jl
mov
push
push
out
pop
aad
out
push
jnp
add
add
sbbb
jg
jo
bound
fdivl
add
add
es
add
add
mov
jo,pt
js
jl
loopne
and
pop
mov
sbb
dec
mov
xor
stc
inc
roll
sbb
push
and
inc
in
push
mov
dec
ret
sub
add
add
outsb
js
mov
mov
js
xchg
mov
add
jmp
test
adc
test
outsl
lea
dec
mov
fwait
std
xor
ljmp
add
xor
add
add
add
orl
sub
add
xchg
push
lea
imul
cmp
xchg
sti
fistpl
lods
insb
mov
sbb
fwait
sub
add
add
add
add
add
test
and
or
lods
sub
add
add
push
int
dec
imul
inc
or
inc
shlb
shrl
add
xchg
mov
pop
out
jg
hlt
hlt
in
aad
outsb
mov
cmp
add
inc
test
aad
dec
mov
pop
mov
iret
pop
into
push
in
mov
icebp
and
les
inc
loop
jmp
mov
pop
icebp
fistps
mov
sub
inc
mov
cmp
add
fs
mov
mov
enter
mov
xchg
sub
add
add
xchg
dec
sbb
pop
ja
pop
lret
mov
inc
add
add
cmp
cmp
cmp
push
mov
mov
xchg
popa
mov
jae
mov
add
add
js
dec
xchg
mov
or
push
sahf
lret
pop
add
out
aam
ss
fmul
out
mov
clc
sbbl
in
cmp
jge
sbb
sub
add
add
inc
enter
lods
jno
cltd
roll
cmp
xor
insl
cmp
pop
sbb
add
mov
sti
push
lock
iret
rcr
add
add
arpl
mov
add
add
sub
repz
xchg
sbb
sub
lods
sbb
bound
les
dec
jp
int3
xchg
jmp
mov
icebp
pop
xor
into
mulb
add
in
ficoml
jae
adc
push
pop
dec
mov
add
add
mov
dec
add
add
dec
add
add
int
cmp
addl
add
mov
inc
rcr
push
mov
add
stos
lock
lret
test
pop
clc
loop
inc
add
add
rorb
pop
stc
pop
outsb
inc
inc
mov
mov
stos
loopne
or
push
add
add
and
jg
stos
cwtl
jg
aam
dec
mov
cli
fdivl
pop
fildll
push
xchg
add
js
in
pop
and
add
add
add
aaa
and
cmpsl
imul
jmp
lcall
xlat
and
cmpsb
rolb
push
jge
lret
sahf
cwtl
cwtl
mov
add
jecxz
mov
add
add
into
pop
adc
lds
push
or
add
add
lea
add
add
into
adc
mov
xor
add
and
add
add
ret
add
add
out
push
inc
push
jmp
aad
aaa
cmpsl
mov
outsb
ljmp
stos
arpl
xchg
mov
adc
fldcw
leave
cmpsl
sbb
cmpsl
icebp
mov
add
add
mov
add
add
icebp
mull
call
idivb
adc
lret
cmp
add
add
add
cmp
stc
shl
sbb
xchg
push
rolb
add
add
add
push
jns
xchg
push
xchg
and
hlt
and
add
add
repz
push
gs
ds
out
jne
jecxz
and
dec
ret
xchg
rcll
clc
fildll
arpl
xchg
or
add
add
cmpsb
pushw
movsb
arpl
aaa
mov
clc
mov
sti
add
add
add
or
add
add
add
add
add
pusha
mov
rcrb
add
add
mov
repz
add
add
repz
mov
xchg
add
aaa
push
ss
pop
lahf
mov
add
mov
pop
or
add
add
popa
push
mov
add
xchg
dec
cmp
mov
hlt
push
out
jg
adc
popf
test
add
mov
inc
mov
xchg
xor
sub
xchg
in
jb
idivb
rorl
outsb
push
dec
addr16
lods
aad
cmp
test
push
mov
in
mov
cmp
sub
add
add
fstp
idivl
test
daa
jmp
mov
mov
sbb
add
add
idiv
in
dec
jb
sub
add
add
ds
sbb
sbb
jno
pop
xor
adc
cwtl
js
in
xor
repnz
mov
or
add
add
mov
mov
stos
scas
movsb
jno
adc
add
push
pushf
inc
jne
mov
add
pop
fdivrl
inc
xchg
aad
mov
sti
cmpsb
cmpsb
and
cmpsl
mov
aaa
xchg
inc
mov
mov
add
or
and
push
mov
cmc
push
xchg
mov
mov
pop
add
jl
mov
mov
testl
jns
mov
cmp
adc
add
mov
sbb
in
xor
loop
mov
test
adc
pop
cmp
insb
add
add
daa
flds
stc
fsubp
xorb
push
loop
in
xchg
add
mov
jns
notb
push
lea
movsb
cld
dec
fdivrs
add
add
dec
mov
in
test
add
cmpsl
mov
add
adc
iret
adc
lret
orb
orl
pop
shlb
arpl
movsl
jae
dec
mov
pushf
mull
dec
inc
mov
cmpl
jo
inc
add
add
rclb
mov
ret
mov
mov
shl
pop
xchg
test
pop
jle
pop
xchg
gs
fsubl
xchg
test
mov
add
add
add
rolb
add
add
add
add
cmp
add
add
xor
or
jl
out
lret
cld
or
add
add
aam
cli
dec
jg
and
pusha
add
add
jb
popf
push
popa
cmp
xchg
cmp
add
add
xorl
ljmp
pop
xchg
push
and
pop
ss
test
popf
cwtl
xchg
imul
sbb
jo
pop
xlat
lock
mov
sbb
outsl
adcb
in
mov
call
test
ja
pop
cmpsb
mov
mov
add
add
add
ficomps
ret
jne
lods
imul
add
lcall
add
add
test
mov
add
add
adc
sar
push
subl
mov
add
add
sbb
pop
adc
test
mov
inc
arpl
in
mov
jle
lods
mov
dec
dec
jg
mov
cmp
xor
pop
lret
or
test
sub
add
imul
mov
sbb
add
add
loopne
jne
cmp
and
add
add
mov
adc
inc
cmpsb
pop
inc
ret
and
add
add
sub
imul
jnp
movsb
aam
inc
mov
cs
mov
cmp
xchg
ds
fstpt
dec
mov
add
jmp
mov
mov
into
je
push
out
cs
add
add
add
mov
lods
lea
rcrb
sbb
fisttpl
inc
gs
addl
mov
add
loop
lret
push
and
mov
into
out
or
add
push
inc
repnz
jne
jo
fcoml
pushf
gs
movsb
in
jne
jecxz
and
pop
dec
mov
push
mov
xchg
dec
add
add
mov
es
xor
mov
add
jg
test
add
add
sub
lcall
and
add
hlt
inc
in
push
inc
mov
pusha
add
add
ljmp
js
sub
add
add
dec
jnp
dec
les
paddd
mul
pop
test
add
add
ja
adc
xchg
mov
dec
add
add
jnp
xchg
jae
jmp
cmp
loope
out
sub
pop
js
lds
mov
aam
xor
pop
sbb
adc
push
es
fistl
add
add
add
add
add
pop
insl
into
sub
ss
cltd
repnz
add
add
inc
or
add
add
popf
movsb
sub
fs
or
add
add
ljmp
sarb
stos
dec
pop
xchg
or
add
add
add
add
mov
stos
inc
jbe
fdiv
test
add
jl
mov
nop
sbb
add
add
scas
push
mov
mov
dec
inc
enter
xor
add
sub
loop
jg
pop
adc
xor
and
mov
mov
addr16
test
and
mov
inc
add
add
lods
and
push
adc
stos
push
sbb
jle
sub
test
mov
push
push
fistps
pop
adc
add
add
fwait
inc
pop
scas
addr16
xchg
jecxz
fadd
addr16
imul
pop
sbb
leave
and
jnp
mulb
dec
cs
adc
xor
cwtl
stc
push
sub
add
add
fistpl
push
cmpsb
rorb
add
add
add
fists
shll
lret
lods
add
add
fnstcw
add
inc
mov
mov
cli
fnstcw
adc
cmp
sub
add
add
ucomiss
cmp
lods
mov
cs
add
add
add
add
inc
clc
sub
dec
add
add
lahf
outsw
inc
mov
add
add
inc
out
icebp
sbb
jnp
es
gs
pushf
imul
idivb
jb
or
repnz
xor
add
add
sbb
pop
ss
push
cmp
mov
or
add
add
or
push
sti
movsl
pusha
mov
dec
push
hlt
cmp
mov
test
xorb
jecxz
or
test
negb
push
push
push
scas
dec
add
add
add
je
xchg
and
mov
mov
cli
out
lds
imul
push
aad
xor
nop
cmp
ficompl
nop
or
mov
mov
mov
ret
cmp
cmp
inc
pop
jbe
mov
cmp
jle
cmpl
add
add
fstl
mov
add
jle
add
add
add
add
adc
push
or
rcr
mov
add
shr
or
add
add
mov
mov
add
add
add
add
sarb
js
inc
add
add
add
add
jl
int3
inc
popf
xchg
ret
andb
into
xor
xchg
mov
sub
add
add
rcrb
test
sub
adc
xor
xor
mov
stc
loope
dec
cmpsb
pusha
add
add
dec
loopne
mov
fimuls
and
add
add
cmp
add
add
jb
inc
add
add
xchg
lock
add
add
mov
loopne
leave
dec
into
es
mov
ds
dec
mov
pop
or
lcall
jge
repz
rorb
add
cmp
cmp
jle
and
add
add
or
test
pop
push
hlt
inc
dec
add
add
scas
xor
cmp
scas
inc
imul
mov
mov
pop
daa
jbe
sub
add
add
push
dec
add
add
and
jbe
push
sbb
add
add
add
ja
dec
jg
mov
add
jle
mov
add
add
test
adc
out
div
call
cmp
clc
fsubr
aam
xor
popf
push
clc
scas
cld
and
add
add
in
nop
icebp
or
xor
pop
mov
inc
outsl
push
xor
inc
rorb
test
stos
jo
stc
add
and
mov
add
add
xchg
mov
scas
dec
add
add
pushf
pop
sbb
mov
mov
pop
mov
add
add
push
mov
ficoml
popf
jnp
dec
jne
jo
add
add
je
mov
inc
dec
mov
out
mov
insb
add
add
push
hlt
mov
in
mov
add
mov
in
add
add
add
ret
xor
hlt
leave
data16
cmp
cmp
push
cmc
add
add
add
mov
jmp
mov
cmp
add
push
les
mov
adc
mov
stos
lock
fstpt
sub
cmc
inc
ss
fsubl
imul
ljmp
sbb
aaa
aaa
lahf
popa
sbb
out
rorl
add
stos
jb
ja
mov
mov
jp
popf
cmp
or
jp
hlt
out
lock
pushf
cmp
add
add
leave
lahf
shrl
push
add
add
je,pt
test
add
push
cmp
mov
test
inc
mov
out
and
add
add
add
add
add
add
add
add
ja
push
les
jg
out
adc
iret
jge
add
add
jne
add
fcompl
cmp
call
pop
dec
add
add
push
test
sbb
or
dec
fisttps
pop
mov
mov
pop
pop
out
and
add
add
enter
mov
xor
out
cli
xorb
add
out
mov
out
and
inc
cltd
nop
xchg
xchg
popa
std
lahf
pushl
pop
sti
test
daa
inc
inc
mov
xchg
xchg
cltd
sbbb
cli
mov
or
mov
mov
fwait
outsl
xorl
add
mov
mov
add
test
xor
sbb
cmovle
add
add
add
add
ficomps
add
mov
les
dec
cmpsl
ds
nop
push
pop
fcoms
add
movsb
jge
sti
andl
add
add
lods
push
fs
clc
daa
popf
pop
pop
inc
add
add
sahf
pop
cmpsb
mov
and
aam
out
loope
jg
mov
fldenv
xor
cmp
add
add
jg
mov
lcall
orl
add
adc
add
add
dec
mov
jne
mov
inc
add
add
addb
add
std
push
in
mov
sub
push
mov
add
add
add
add
add
or
add
add
jecxz
xchg
cs
out
push
addr16
out
xchg
dec
sbb
shll
add
sbb
test
push
out
sbbb
nop
pop
in
scas
mov
add
add
xchg
arpl
sbb
pop
adc
fldt
aaa
imul
imul
fs
addr16
add
add
add
add
xchg
out
jmp
add
pop
pop
insl
lea
aaa
jge
push
int
cmp
cmpsb
mov
aaa
out
add
ret
add
add
pop
stos
mov
add
add
pop
mov
add
cmpsb
dec
fldl
jnp
mov
inc
mov
cmp
add
add
add
sarb
mov
inc
movntps
or
lret
insl
xor
jae
cmp
adc
mov
push
in
stos
or
lds
add
add
popa
add
add
add
out
sti
outsb
adc
add
xor
dec
adc
xchg
std
lcall
add
add
jmp
cmp
or
add
add
jmp
stos
mov
cmp
imul
psubb
xchg
inc
pop
ss
pop
idivl
stos
aad
pop
movsb
adc
sbb
lods
sub
mov
sahf
cli
cmp
jecxz
les
add
mov
or
fidivrl
add
jg
dec
mov
lea
and
std
push
cmpsb
xchg
push
mov
movsb
jg
xchg
jp
leave
xor
je
mov
addr16
xchg
imulb
lods
jle
cmpsl
jb
add
add
push
lcall
ja
cmp
pop
mov
or
sti
daa
sbb
push
cltd
xchg
ucomiss
xchg
bound
push
mov
bound
test
and
mov
mov
mov
in
ljmp
pop
cltd
mov
xchg
cmpsb
mov
mov
add
add
and
xor
mov
pop
cmpsb
pop
add
adc
cmpsb
jno
jle
add
add
xchg
jbe
sbb
lods
arpl
and
repz
in
xchg
push
pushf
push
hlt
cmp
vpsllq
leave
les
aas
and
popf
repz
cwtl
sbb
repnz
mov
pop
popf
or
xchg
push
push
mov
cmc
push
push
jle
or
mov
call
inc
sub
pop
mov
xchg
stc
jmp
xchg
pop
loop
dec
fsubs
add
add
mov
imul
popf
cltd
sbb
add
mov
adc
xchg
cwtl
lock
add
add
enter
sbb
add
add
mov
call
imul
add
jmp
push
sbb
xor
clc
shrb
rcll
jne
jb
lods
lock
pop
lret
dec
and
pop
addr16
addb
mov
rcr
xor
je
fdivs
decl
sub
add
add
mov
add
add
sbb
addr16
gs
xor
add
add
add
add
dec
add
add
lds
bound
mov
sbb
fs
jmp
add
add
stc
dec
jg
out
xchg
jno
sbb
repnz
outsl
pop
mov
icebp
pop
dec
pop
pop
ficompl
cmpsb
popa
outsb
ljmp
add
add
popf
jns
mov
or
fs
push
dec
sub
push
sub
jae
xchg
mov
and
les
inc
jnp
adc
and
lea
fiadds
orb
sub
add
add
cmpsb
test
psubsw
jns
test
adc
push
xorl
add
add
pop
out
mov
dec
add
or
dec
fscale
outsl
dec
inc
aaa
xchg
xchg
int3
push
mov
sub
add
add
push
imul
int
or
jecxz
lods
sbb
push
aad
mov
add
into
lock
in
push
popa
adc
mov
ret
enter
jge
mov
dec
mov
xor
hlt
xor
sbb
pop
loope
std
jp
mov
adc
pop
aas
cs
add
add
and
push
fsubrp
mov
imul
jmp
mov
add
add
outsl
inc
add
mov
xchg
clc
imul
ret
adc
shlb
add
pop
fldt
add
jg
sarl
pop
lods
or
ret
jb
stc
test
xor
add
add
cmp
stc
sbb
add
add
add
loopne
ss
inc
lret
mov
xchg
push
in
jl
jnp
popa
dec
or
push
pop
mov
and
sbb
int
imul
pop
movsb
in
shlb
add
add
jbe
or
add
add
lea
add
xor
sub
jge
dec
daa
lods
xlat
sbb
add
cmp
or
fsubrs
fisubl
sub
icebp
push
mov
inc
jnp
mov
cmpsb
lcall
adc
addr16
mov
ffree
inc
movsb
and
add
adc
jmp
out
ja
test
mov
inc
jno
data16
cmpsb
mov
cmp
push
stc
test
imul
pop
dec
cmpsb
dec
sub
add
add
jo
test
test
dec
aad
sahf
add
add
add
add
subw
shrl
mov
sti
push
mov
test
nop
jg
mov
adc
ds
lods
fsubl
fmull
or
mov
xorl
jnp
aas
in
test
push
sub
add
add
pop
ror
xchg
adc
decl
pop
adc
jbe
mov
test
out
out
out
add
add
adc
test
mov
add
sbb
rorl
pop
mov
lods
or
cmp
sahf
xor
fnsave
and
sub
cmp
cwtl
xchg
and
mov
jmp
add
add
sbb
add
imul
mov
mov
push
jo
sub
pushf
imul
addr16
in
xchg
ja
xchg
jbe
int
rclb
or
mov
fcoml
fcomps
pop
in
subb
fs
cld
or
add
add
clc
scas
and
cmpb
into
push
ja
pop
jle
mov
icebp
mov
fildll
add
add
icebp
cltd
xor
sbb
js
cmp
jo
mov
out
loopne
stos
mov
dec
mov
add
add
jb
sub
faddl
add
mov
sub
add
add
outsl
add
movsl
in
and
divb
pop
les
rcll
testl
add
pop
mov
mov
pop
jnp
mov
and
add
add
jg
pop
jl
jmp
sbb
popa
pop
and
add
add
pop
or
mov
popa
repz
stos
pushf
dec
stos
ss
cwtl
nop
sub
add
add
repnz
add
arpl
and
add
add
add
add
add
add
xor
cmp
add
add
dec
jl
mov
imul
push
shlb
inc
fucom
stos
insb
mov
insl
mov
mov
xor
mov
mov
mov
mov
add
add
cltd
stos
mov
or
fidivs
in
sbb
dec
enter
xor
mov
std
xorb
push
add
add
add
mov
push
push
push
fistps
add
arpl
jg
outsb
cmpsl
pop
mov
out
mov
add
and
pop
jmp
scas
popf
repz
cmpsl
loope
ljmp
mov
test
lahf
push
test
popa
aas
jle
mov
add
out
sbb
add
cmc
mov
xchg
call
data16
jne
popa
jb
mov
mov
sub
dec
iret
adc
dec
adc
push
test
add
add
xchg
mov
xchg
xor
add
xor
push
jmp
jl
jbe
sbb
sbb
cs
fstps
mov
cmp
out
pop
aad
mov
arpl
add
add
add
ja
clc
mov
mov
popf
cmpsb
stos
jne
dec
dec
mov
mov
in
stos
mov
mov
push
jne
push
jmp
mov
add
loopne
push
xor
xlat
outsb
pop
je
jge
add
inc
mov
jp
nop
cmp
popf
je
aam
rcrl
sti
push
mov
es
push
jle
lahf
int3
cwtl
or
sub
xor
adc
pop
mov
mov
adc
add
arpl
add
mov
test
fisubrs
icebp
mov
add
add
or
add
add
fiaddl
add
int3
mov
add
add
add
or
add
add
add
add
add
mov
cmp
test
rcrl
jae
sub
add
add
add
push
inc
mov
add
add
add
mov
daa
lods
cmc
in
pop
aam
sub
lahf
and
add
add
repnz
inc
xor
lcall
xlat
mov
pusha
mov
mov
add
mov
pop
frstpm(287
add
pop
out
inc
mov
fmul
xchg
push
cli
rcl
jnp
aas
imul
hlt
roll
inc
inc
inc
mov
pop
les
sarl
sbb
outsb
mov
pop
mov
arpl
std
mov
gs
jmp
add
add
add
dec
jne
add
loopne
push
xchg
push
cmp
jl
cmpsb
test
cmp
add
jge
or
jb
lea
shll
xor
add
in
jg
push
sahf
mov
cmp
fwait
imul
mov
push
ret
loop
and
add
add
jle
adc
add
cmp
mov
sub
cmc
xchg
out
iret
push
cwtl
ljmp
jmpw
push
cmp
das
push
jl
sub
add
add
imull
xchg
sub
add
add
popf
call
or
add
add
add
add
sub
mov
xchg
or
dec
cltd
sahf
loopne
inc
mov
andb
xor
hlt
mov
repz
ljmp
xchg
xchg
add
add
adc
ret
repz
pushf
adc
xor
xor
or
add
add
add
test
adc
or
dec
divb
and
call
jno
mov
xlat
pop
or
divl
hlt
test
ja
xchg
xchg
xchg
sub
add
add
pushf
mov
cmp
pop
cmp
add
add
clc
jb
push
jle
pop
lds
inc
mov
mov
nop
or
xor
pop
jb
push
ds
cmp
cmp
cmpsb
pushf
mov
std
fidivs
mov
inc
jb
fstl
add
add
gs
pop
subb
add
sub
mov
mov
add
adc
repz
adc
pop
cmp
dec
pushf
aam
mov
add
inc
in
jmp
pop
lret
xor
pop
or
aas
sub
incb
stos
inc
cmp
push
sti
xchg
movsl
sbb
imul
fiaddl
lock
ja
add
add
inc
mov
mov
mov
add
add
pop
iret
faddl
xchg
sbb
mov
add
push
cmp
push
xchg
mov
add
add
leave
adc
cmc
les
les
loop
loop
mov
movsl
andb
mov
daa
push
jnp
das
cli
dec
add
add
cmpb
fiadds
add
push
fistpll
loop
adc
lahf
ljmp
add
ds
mov
add
sahf
ficomps
std
sbb
inc
fimull
adc
mov
cmp
dec
add
add
dec
fcomps
add
ret
out
add
stos
xchg
imul
pop
dec
pop
xchg
push
cmp
inc
sbb
jge
int
cli
ret
pop
xchg
or
pop
out
xchg
rorl
xchg
iret
jb
cmc
rolb
add
add
pushf
loopne
in
imul
mov
pusha
mov
adc
mov
cmp
fiaddl
fs
mov
dec
outsl
ret
xchg
adc
mov
hlt
fwait
or
add
add
bound
pop
pushf
pop
push
int
inc
pop
stc
clc
inc
xor
pushf
adc
or
add
add
push
test
pop
out
mov
outsb
pop
in
mov
jnp
add
add
add
add
jmp
cmpsl
jge
mov
out
push
imul
cmc
mov
rolb
cld
ss
mov
mov
pop
add
add
add
adc
add
add
lods
stos
sub
add
add
ss
xchg
cmp
or
xor
mov
mov
clc
ficoml
fisttps
add
add
shr
in
pop
dec
sahf
cld
scas
add
add
lea
fdivrs
jae
pop
push
jmp
add
or
ror
das
or
sti
repnz
add
out
pop
in
or
mov
jg
inc
mov
push
dec
ljmp
fisubs
xor
add
add
add
mov
in
xchg
pop
xchg
je
add
add
mov
mov
add
push
pop
aad
ror
cmp
add
push
mov
cmp
jp
outsb
xor
add
mov
adc
xor
add
add
push
jno
xchg
jnp
mov
aas
mov
insl
bound
push
adc
xor
lods
sub
imul
mov
stos
inc
xchg
adc
add
add
add
inc
xlat
inc
mov
psrld
loop
imul
add
add
ljmp
mov
enter
sti
repz
dec
call
sbb
and
clc
test
dec
orb
fs
ss
and
jecxz
cs
negb
pusha
add
add
mov
hlt
test
sbb
mov
mov
or
sbb
add
add
daa
rcll
lds
ds
dec
mov
inc
fwait
and
dec
sbb
adc
pop
dec
jp
mov
aaa
dec
sbb
or
add
add
pop
mov
aas
sbbb
cmp
add
add
stc
ljmp
hlt
cmp
jg
cmp
fxch
scas
mov
inc
and
push
cvtdq2ps
add
add
movsb
inc
cmp
out
movsl
dec
push
aas
mov
and
add
add
add
add
scas
fwait
cmp
test
dec
add
add
sub
jmp
shll
imul
add
sahf
cmpsl
stos
les
mov
movsb
insl
int3
mov
cmpb
cmp
dec
and
jmp
add
add
cwtl
ja
mov
push
jnp
gs
addr16
cltd
sbb
push
jmp
cmp
rcll
xlat
adc
add
in
mull
add
add
repnz
nop
and
add
add
add
add
ljmp
dec
add
add
mov
outsb
sub
rorl
jbe
sbb
sub
push
jns
xlat
sub
in
mov
add
outsl
fsubrl
divps
shrb
out
jae
xchg
mov
push
cs
xor
add
sbb
and
pop
sti
mov
mov
call
mov
stos
dec
fcmovnbe
jmp
sbb
sub
mov
lret
sahf
mov
add
cwtl
mov
fwait
jno
cmp
push
div
jmp
outsl
enter
xchg
ror
cmp
jp
dec
sub
xchg
xchg
popfw
shl
iret
and
adc
mov
sub
add
add
mov
out
rclb
adc
cltd
mov
fistpl
or
xchg
push
adc
pop
insb
mov
lret
sti
aas
hlt
mov
jg
sbb
lret
cmpsb
outsb
sahf
and
add
add
imul
add
sahf
sahf
or
adc
and
cmp
add
add
test
or
xchg
movsb
fisttpl
or
flds
sub
fdivs
adc
fs
mov
xchg
push
add
sub
add
add
stos
les
sbb
aas
push
inc
xchg
push
add
add
clc
hlt
loope
lods
sub
pop
xchg
or
add
add
cmpb
jb
xorl
test
loop
imul
add
add
inc
add
add
sub
jo
scas
mov
push
jg
add
add
add
fnstenv
inc
add
add
cmp
leave
and
pop
popa
jb
xchg
add
add
sbb
hlt
pop
ret
dec
sbb
jecxz
js
cwtl
cld
sbb
or
mov
push
dec
xchg
popa
push
pusha
add
add
repz
jp
cmp
aas
pusha
mov
mov
fisttpll
mov
xchg
lahf
pop
adcl
icebp
flds
add
add
xchg
jbe
negl
mov
pop
out
das
push
cmpsl
test
mov
out
scas
ss
fsubrl
sahf
xor
std
sbb
adc
add
add
cmc
mov
jl
jp
cmp
stos
imul
jl
fistpll
xchg
dec
mov
add
add
push
mov
pop
pusha
add
add
out
sub
sub
add
add
mov
cmp
xchg
movsb
mov
or
add
add
cld
or
or
inc
mov
add
add
stos
add
add
add
rorb
add
add
add
xor
lock
sub
add
add
stc
cmc
repz
cltd
je
or
ss
cwtl
dec
push
out
out
inc
add
add
out
mov
add
add
add
decb
ss
fistpll
sbb
cmpsb
xchg
pop
mov
mov
sbb
sub
add
inc
lret
jl
sbb
pop
cwtl
test
into
or
adc
aad
lahf
pop
aam
stos
cmp
sub
cli
loope
push
pop
push
or
xor
push
mov
xor
mov
inc
adc
cmpsb
stos
pop
mov
push
pop
cmpsb
testb
cmp
add
add
or
cmp
push
adc
scas
cmpsb
jns
sbb
cmp
mov
rcrl
out
jge
je
mov
add
add
pop
cmp
fucomi
xchg
dec
sub
fwait
stos
push
mov
add
add
add
jb
jb
jno
incb
cmovno
idiv
cltd
inc
mov
jecxz
sbb
add
repz
das
jno
imul
mov
sarl
add
push
jmp
out
mov
add
add
mov
cltd
test
add
add
out
inc
add
add
jmp
in
loope
les
mov
test
mov
jne
mov
mov
mov
cli
sbb
fstpl
loopne
cmpb
or
add
add
dec
add
add
push
lock
std
dec
subb
icebp
pop
fadds
ljmp
xor
mov
mov
add
add
add
cmc
or
fldenv
js
mov
mov
popf
fwait
enter
fnstsw
add
add
add
add
add
pop
xor
add
add
int
lret
add
add
xor
push
movsb
sbb
orb
sbb
xchg
add
add
cmpsb
mov
add
add
mov
jb
cmpsl
stc
arpl
test
push
pop
scas
testb
mov
ljmp
test
add
add
add
int
shll
out
xor
insl
xchg
loopne
mov
inc
outsl
xor
std
in
dec
cmpsb
out
fcomps
add
add
movsl
pusha
mov
dec
addr16
mov
mov
ja
add
add
jo
repnz
lahf
fsubs
xchg
stc
insl
int3
sub
mov
cmc
rclb
pop
ss
push
adc
push
xchg
stos
xchg
ss
mov
adc
add
add
fwait
add
add
add
punpckhdq
add
add
jge
testl
dec
fbld
cmpsb
inc
enter
ret
out
movsb
into
insl
fldlg2
outsl
pop
mov
jae
mov
push
push
mov
add
add
and
inc
mov
test
or
add
add
fdivs
movsb
ret
ljmp
fists
push
ret
cmp
int
je
push
imul
dec
pop
mov
inc
sub
mov
hlt
mov
je
lahf
repz
rolb
mov
cmpsb
in
and
lcall
scas
clc
mov
push
adc
add
cmp
mov
loop
mulb
xor
int
or
das
adc
jge
idivl
fisttpl
mov
inc
outsl
cmp
mul
xchg
mov
arpl
ja
jle
lret
sbb
test
cmpsl
daa
pop
xor
scas
xchg
mov
addr16
xor
cmp
cli
nop
inc
sub
cmp
add
add
add
in
mov
jp
in
pcmpeqd
xchg
cmp
xchg
and
pop
pop
adc
aam
sub
push
lret
test
ficoms
test
iret
xchg
sbb
mov
add
pushf
fsubrl
add
add
xchg
jecxz
mov
adcl
add
add
xchg
mov
icebp
scas
lcall
push
push
movsl
mov
in
pop
jo
xchg
fdivrl
mov
xor
repnz
lock
add
add
add
add
in
fdivl
xchg
sub
add
add
adc
repz
stos
jge
popf
push
dec
leave
push
dec
shll
rorb
jmp
dec
lahf
out
mov
fldcw
packssdw
sbb
ss
fcmovnb
mov
in
cmp
pop
mov
or
mov
pop
push
mov
fcmovu
mov
mov
cmp
repnz
xchg
pushf
nop
imul
ret
insb
add
add
push
outsl
andl
clc
fildl
mov
call
mov
sbb
pusha
mov
cmpsl
clc
mov
xchg
pop
data16
lret
dec
mov
push
xchg
cmp
mov
out
mov
andl
mov
cld
add
lcall
push
aam
out
cs
inc
gs
mov
dec
dec
mov
cmp
cs
repnz
popf
insb
add
add
sub
add
add
mov
out
fidivs
test
add
add
jmp
sbbb
add
fs
es
sub
add
add
xor
icebp
and
add
add
sub
lret
inc
mov
pop
push
adc
fwait
aad
movl
pop
imul
sarb
icebp
mov
jle
hlt
cmp
or
lea
xorl
mov
dec
lcall
aam
add
add
add
enter
sbb
xchg
jb
ret
xchg
clc
rorb
inc
and
add
and
add
add
popf
out
or
repz
push
xchg
add
add
add
inc
pusha
add
add
in
mov
dec
outsl
mov
adcb
and
push
mov
cmpsb
dec
xchg
push
cmp
add
add
cwtl
cmp
hlt
cli
sub
pop
gs
pop
push
pusha
add
add
inc
clc
cmp
add
cli
xchg
int
test
and
cmp
jne
mov
pop
or
repnz
push
cli
xor
sbb
add
add
jmp
sub
and
mov
pop
dec
mov
nop
leave
cs
outsb
sub
add
int3
stos
or
xchg
fwait
mov
imul
push
sub
add
add
cmp
cmc
xlat
test
pop
or
add
add
and
dec
hlt
mov
xchg
fnstenv
cmp
ja
jns
dec
cs
add
add
ret
pop
push
push
inc
das
and
test
add
add
lds
fbstp
xor
fwait
ss
xor
mov
adc
mov
data16
lock
shll
cmp
out
cwtl
push
mov
pop
xchg
pop
xor
lahf
movsl
push
ds
cmpl
pop
sbbl
inc
sub
add
add
add
add
loop
mov
out
mov
push
dec
sbb
adc
mov
in
mov
stos
mov
sti
push
cmc
push
sti
in
mov
jae
dec
mov
jae
add
add
inc
mov
nop
adc
push
scas
jbe
movsl
cmc
push
mov
jmp
mov
fimull
jmp
ds
insb
add
add
in
xor
lods
lock
shl
rcrb
int3
pop
xor
mov
adc
out
cmp
add
sbb
xor
fsubs
sub
ss
jns
mov
fdivrs
ret
mov
sbb
jae
pop
scas
mov
cli
xor
gs
test
mov
in
add
add
add
add
xchg
jmp
add
pop
loopne
mov
fldenv
ret
mov
mov
push
outsb
mov
mov
lahf
sbb
or
lcall
enter
lds
add
add
pop
pop
lock
sub
es
insl
jne
inc
mov
inc
cmpsb
into
std
cmpsb
sub
jne
push
std
test
add
add
add
mov
add
lock
insb
mov
pop
jg
les
xchg
in
gs
add
add
popf
add
in
adc
out
data16
sbb
leave
xchg
xchg
mov
dec
outsb
testl
or
sarl
xchg
push
orb
add
add
ret
inc
mov
pusha
add
add
popa
dec
ljmp
add
add
add
add
pop
sub
ret
pop
pop
repz
and
repz
add
add
sbbb
pop
xlat
mov
or
push
xor
cwtl
or
idiv
insb
mov
add
add
add
xor
mov
lds
insb
add
add
lret
add
add
mov
clc
iret
adc
xor
cli
and
add
add
loope
cli
in
jae
cmpsl
mov
add
add
add
mov
inc
sub
rclb
adc
sub
add
add
jne
sarl
add
sahf
sbb
push
ds
jne
inc
out
fdivs
xor
push
push
fists
out
arpl
mov
insb
mov
shll
push
xor
add
rcrl
mov
or
lahf
mov
add
nop
or
lock
jns
mov
mov
mov
fcmovnbe
push
cltd
fcmovne
ret
adc
mov
mov
push
sbb
add
add
sub
xor
mov
jno
mov
add
add
and
add
add
loope
lret
pop
and
add
add
add
inc
inc
pushf
xchg
out
data16
mov
lock
mov
test
adc
add
add
or
add
add
repz
insb
mov
mov
fucomp
rclb
mov
aas
push
fsts
lock
les
mov
push
lcall
jecxz
fcoms
loope
mov
cwtl
nop
push
cli
mov
outsb
lock
inc
sub
add
add
xchg
dec
sbb
push
or
jb
aaa
enter
insl
loop
xor
add
stos
fimull
add
sub
mov
dec
dec
nop
cmp
jne
sti
inc
push
mov
add
push
imul
add
add
aas
or
or
add
and
add
add
pushf
xor
leave
call
and
js
push
shll
add
add
add
xor
mov
add
add
add
add
imul
stos
dec
xchg
mov
outsb
pop
sub
movsl
and
lcall
add
add
push
and
add
add
pusha
add
add
push
jl
mov
jnp
inc
add
add
mov
aad
add
add
mov
pusha
mov
sbb
shrl
cld
sub
add
add
add
add
add
push
fisubl
or
add
add
push
sbb
enter
xchg
xor
adc
push
sbb
push
int3
inc
xor
xchg
sbb
add
pop
sub
add
add
aad
add
add
int
inc
add
add
cwtl
cmp
add
add
aas
cltd
pop
mov
dec
add
fildl
je
sbb
mov
sbb
es
inc
mov
insl
popa
mov
idivl
sbb
popa
inc
mov
imul
lea
sbb
orb
lock
mov
icebp
jb
lds
pop
cmpsl
js
fwait
add
xchg
js
dec
idivl
xchg
inc
push
xor
and
sbb
push
lods
adc
add
sbbl
lods
jo
aam
aam
out
pop
push
cli
scas
mov
xchg
cld
adc
shll
and
outsl
pop
repz
jecxz
enter
add
jno
and
les
sbb
icebp
in
test
add
test
das
daa
jle
in
iret
cmp
aas
mul
mov
xchg
imul
mov
test
dec
xor
dec
mov
lret
add
inc
add
add
es
setg
imul
repz
sbb
bound
add
add
pop
into
and
add
mov
jmp
sub
add
add
popa
xor
add
dec
adc
lret
popf
outsb
bnd
sub
cmpsb
jnp
test
inc
add
add
mov
je
or
sahf
in
fimuls
sub
mov
add
add
mov
add
add
adc
xchg
cmpsl
cmp
push
jecxz
test
add
sbb
jns
cmc
loope
cmp
jnp
jne
pop
pusha
add
add
bound
add
sbb
adc
mov
and
push
lea
sbbb
pop
jge
insb
mov
add
add
sub
add
add
sub
mov
add
test
fnstcw
xor
aas
repnz
and
add
add
add
add
fcoml
jnp
add
add
add
repnz
push
lods
mov
add
add
adc
mov
pop
icebp
movd
pop
andb
add
add
stos
jl
int3
test
in
add
repnz
popf
movsb
call
test
xor
daa
sbb
adc
mov
in
cmp
mov
mov
shlb
aam
in
cld
movsl
and
sbb
add
add
je
lods
lret
out
movsb
std
lahf
cmpsl
push
jns
test
subb
and
mov
add
mov
cmpsl
stos
fdivp
rcrl
mov
add
add
popf
movb
add
out
adc
add
add
adc
add
cmp
or
add
add
push
add
rorl
mov
inc
js
or
mull
lcall
movsl
bound
or
add
add
imul
dec
mov
scas
push
inc
mov
loopne
mov
mov
xor
dec
idivl
xchg
jne
cmp
mov
add
add
and
scas
mov
fiadds
cld
das
mov
mov
sbb
inc
add
add
fdivrl
pop
or
add
add
cwtl
mov
jnp
pop
dec
mov
roll
insb
add
add
sbb
add
js
jp
push
mov
add
add
add
divb
jne
sbbb
les
adc
add
add
iret
sub
add
repz
pop
cmc
imul
add
add
inc
rorl
add
add
mov
pop
xor
lods
repnz
mov
mov
lods
or
add
add
inc
mov
mov
add
lock
inc
add
add
add
xor
cmp
es
scas
lret
inc
push
lahf
xchg
test
add
add
mov
cmp
add
add
cmp
ja
cmp
dec
add
add
inc
mov
mov
sub
stos
adc
test
add
sahf
cmp
add
add
pop
jno
cmp
pop
test
in
or
repnz
sbb
int
les
jmp
add
xchg
adc
jecxz
and
clc
mov
into
inc
add
add
insb
mov
add
add
add
adc
fsubs
add
add
sub
add
add
add
aad
add
add
test
lods
pop
jecxz
cltd
push
xor
push
enter
out
mov
mov
enter
mov
sbb
pop
outsb
jns
add
add
lock
push
lcall
inc
dec
cmp
add
add
push
aam
pop
int
mov
add
add
das
cld
cmc
xchg
inc
imul
jb
pop
mov
sub
add
add
jp
ljmp
pop
mov
test
mov
mov
loopne
test
test
add
add
add
add
pop
pushf
lea
mov
in
vcvtpd2dqx
rcr
add
jmp
lea
add
fisubl
scas
imul
cltd
mov
adc
xchg
insl
sub
subb
out
mov
mov
sahf
xchg
lea
add
call
int
lret
push
push
xor
in
dec
add
add
out
add
or
push
inc
mov
inc
insb
add
add
aaa
jmp
add
add
mov
lock
mov
cs
mov
mov
add
add
fcmovnbe
cld
roll
push
fildl
and
iret
add
add
add
ret
inc
mov
test
adc
add
add
push
nop
insl
or
sbb
push
test
and
add
test
push
aaa
sub
mov
subb
xchg
shll
mov
sti
out
dec
rorb
add
add
xchg
rcr
add
add
leave
call
add
je
in
dec
mov
add
in
sub
sub
add
add
insb
mov
pop
adc
jb
sahf
lods
ficoml
mov
xchg
add
mov
sbb
mov
dec
and
nop
jae
punpckhwd
out
or
add
add
push
xor
popa
lods
mov
add
add
adc
ljmp
dec
jecxz
icebp
inc
mov
sub
or
scas
pop
inc
pop
or
sub
jp
jbe
sub
add
add
xor
add
jge
and
xor
add
jle
mov
rorl
fdivl
out
fwait
gs
fcomip
scas
test
jl
add
add
mov
pop
pop
out
and
and
add
add
add
rcrl
mov
mov
jl
jle
xor
cmpsl
punpckldq
stc
das
cmp
test
test
cmpsl
add
pop
nop
push
dec
lods
in
jno
and
dec
das
push
fmull
pop
jg
add
add
stos
add
add
add
xor
outsb
push
mov
push
ret
sub
xchg
mov
push
mov
popf
cmpsb
fs
sub
mov
jb
outsb
test
mov
sbb
insl
sbb
jg
sub
add
add
out
ret
mov
pop
mov
test
add
mov
push
or
test
add
add
faddl
into
jmp
mov
xchg
add
cli
cmp
mov
fildll
mov
adc
xor
cmp
lret
movsb
lds
add
data16
add
add
in
cmp
call
adc
sar
mov
lods
lret
and
mov
fdivl
mov
xchg
mov
add
add
cli
adc
add
add
inc
jo
test
arpl
aad
mov
add
add
mov
stos
lds
sub
add
pop
in
and
add
in
and
add
sbbb
mov
repnz
add
xor
popf
xorl
xor
mov
adc
add
add
aam
icebp
aaa
sub
add
add
push
fwait
or
inc
add
add
call
int3
sbb
stos
push
or
repnz
nop
mov
jmp
dec
mov
add
pop
lret
jae
lock
dec
and
or
test
adc
fcoms
popa
insb
mov
pop
test
push
mov
add
add
cmp
sbb
push
adc
mov
add
sbb
mov
mov
outsb
test
add
fwait
and
out
mov
andb
xchg
inc
xor
mov
hlt
inc
orb
add
add
add
mov
insl
sub
add
add
or
dec
test
gs
sub
add
add
movsb
adc
icebp
add
add
add
fs
insb
mov
test
lretw
add
add
add
repz
jge
cmp
xor
mov
dec
mov
xchg
jbe
arpl
sub
add
add
inc
mov
ret
mov
jge
sahf
movsb
outsl
js
cmc
cmpsl
into
test
and
push
dec
mov
jbe
clc
xor
xchg
lret
lods
xor
pop
stos
cld
add
shlb
xor
push
jmp
ret
or
lea
mov
loope
mov
hlt
ss
pop
int3
sti
test
push
dec
fdivrl
shlb
xchg
mov
add
test
enter
pop
mov
inc
pop
sbb
clc
and
add
add
pop
xor
push
cld
push
jo
xchg
mov
push
cmp
add
gs
pop
cmpsl
pusha
mov
ret
or
sub
add
cmpb
adc
sub
add
add
add
cwtl
inc
add
adc
mov
call
and
or
dec
mov
fmull
xlat
sbb
add
dec
lahf
sbb
add
je
aaa
xchg
sbb
push
out
mov
and
add
add
daa
cmp
cmp
add
add
repz
mov
add
add
or
jne
out
je
dec
add
add
stos
inc
add
add
lahf
add
test
dec
mov
addr16
push
pop
repnz
xchg
mov
ret
or
add
add
dec
jmp
add
add
xchg
scas
mov
add
and
test
mov
xchg
pop
or
loop
mov
hlt
pop
jle
mov
dec
xchg
fnstenv
mov
mov
add
add
push
push
enter
push
cmp
mov
pop
pop
jle
adc
ss
mov
leave
mov
adc
cmp
leave
fidivrl
add
add
addl
imul
pop
and
add
add
and
add
jns
orl
add
add
xchg
jns
add
add
aas
lock
xor
imul
fbld
cmp
fs
dec
test
lods
or
add
add
inc
mov
and
jae
clc
popa
mov
bound
add
push
shr
jo
fs
dec
inc
je
in
or
add
jmp
jg
push
jo
push
push
mov
punpckhwd
dec
clc
cmp
sub
add
add
stc
push
inc
jle
stos
mov
dec
pop
pop
subl
jae
daa
add
dec
add
add
js
mov
pusha
add
add
int
out
fdivrs
inc
add
add
iret
into
push
lds
ljmp
add
dec
add
add
sarl
mov
stos
sub
jno
enter
jecxz
jo
dec
lea
mov
add
dec
jb
fildll
mov
mov
outsl
scas
pop
or
sbb
and
add
add
cmpl
push
es
dec
movsl
arpl
mov
and
imul
imul
dec
mov
push
outsl
das
mov
jns
xchg
hlt
jmp
jle
out
ds
std
xor
add
repnz
imul
dec
push
jmp
inc
xchg
push
lret
jb
popf
push
cmp
aaa
add
stc
gs
outsb
xchg
jae
ret
push
lret
sbb
pop
nop
popf
jne
movsb
jae
bound
mov
sarb
mov
pop
cmp
mov
in
mov
in
stc
clc
xlat
mov
shrb
lahf
xlat
lea
xor
dec
add
add
mov
inc
add
add
imul
mov
inc
mov
mov
pop
aad
movl
pop
and
mov
dec
add
add
lret
lds
add
pop
mov
dec
and
sbb
sub
dec
pop
mov
pop
rol
mov
or
add
test
xor
mov
cmp
push
fpatan
pusha
mov
adc
cltd
rol
loop
or
jbe
inc
jo
jbe
add
add
adc
cmp
stos
and
cmc
cmp
fidivrs
mov
rcl
inc
mov
dec
push
ja
test
pop
aaa
stos
int
mov
shlb
cmp
mov
add
lahf
and
add
add
in
stc
xor
pusha
mov
and
add
add
add
add
add
xor
jle
gs
pop
test
push
add
mov
add
add
mov
pop
sahf
xchg
push
jnp
mov
mov
pop
clc
imul
add
add
add
rcrl
add
add
shlb
in
lcall
jns
iret
inc
dec
add
add
cmpsb
jb
sti
movsl
fldl
xorb
leave
andl
add
stos
or
mov
jae
out
stos
jg
fsubp
sub
xchg
inc
movsb
mov
add
cmp
cmp
jle
call
std
test
and
mov
pop
sbb
and
mov
aas
sbb
iret
sub
add
mov
sbb
jo
sub
pop
push
inc
nop
push
lods
jmp
sti
and
pop
lock
add
add
hlt
xor
ds
inc
rcrl
add
mov
scas
dec
inc
out
pusha
mov
or
sahf
adc
push
jae
mov
pusha
mov
outsl
scas
insl
arpl
add
dec
fisubrs
xchg
pop
subl
dec
or
xor
inc
mov
push
outsb
outsl
mov
test
inc
xchg
push
shufps
pop
data16
pushf
cwtl
adc
and
add
add
sub
push
shl
dec
ljmp
sbb
dec
fsubs
out
add
push
push
imull
test
stos
iret
aad
test
push
loope
mov
in
xor
dec
and
and
test
popf
and
test
mov
dec
add
add
sarl
sbb
les
add
add
mov
jns
dec
ss
mov
pusha
mov
aaa
lahf
push
add
add
push
xor
test
adc
jecxz
outsl
xor
movsl
ja
mov
sub
lret
add
add
sub
dec
mov
add
add
mov
fwait
aaa
cmc
ja
mov
movsb
dec
shrb
sbb
add
add
push
js
andl
sti
scas
out
sub
jo
cwtl
rcrl
jg
xchg
cmp
loop
fwait
pusha
mov
mov
or
add
add
jecxz
movl
jae
cmp
aaa
jb
adc
ljmp
add
add
add
imul
mov
or
int3
jle
sbb
mov
icebp
mov
les
inc
jb
xor
jmp
add
xchg
pop
ret
mov
xlat
loopne
pushl
mov
ljmp
add
pop
xor
xor
add
add
push
push
mov
mov
add
cmp
add
lea
sahf
xorb
push
add
add
pop
jge
ja
les
mov
outsb
jbe
xchg
vsqrtsd
outsb
xchg
aam
arpl
fldt
icebp
iret
xor
inc
nop
push
push
aam
lds
or
add
add
jle
sahf
testb
add
add
add
add
add
mov
inc
sub
add
xchg
dec
adc
sbb
add
add
mov
lret
adc
mov
add
add
jnp
repz
cltd
out
xchg
jl
rcr
jnp
lret
and
stos
add
das
sub
or
cmpsb
cmpsb
scas
inc
dec
frstor
aas
test
xchg
mov
out
or
mov
sti
mov
cld
push
jnp
repz
push
inc
mov
and
add
add
inc
subl
mov
repz
rcr
sahf
out
insb
mov
jbe
cmpsb
xor
adc
popf
fdivs
adc
adc
out
outsl
inc
loop
fld
and
add
in
sahf
push
cld
add
add
add
nop
pop
mov
sub
xchg
pop
mov
add
mov
addr16
inc
add
add
leave
xlat
scas
and
jg
cmp
loope
in
repnz
add
pop
fwait
and
stos
mov
iret
fiaddl
add
add
movsl
pop
jo
cmpsl
push
mov
add
pop
loope
pop
stos
mov
or
xor
sbb
mov
scas
cmp
pop
jbe
inc
ss
sub
enter
dec
shl
add
add
mov
pop
jns
mov
xlat
inc
aaa
mov
push
fistl
mov
outsb
jge
mov
leave
mov
in
inc
add
add
inc
add
add
sbb
es
popa
addb
dec
or
push
cld
fwait
repz
push
xchg
insl
sarl
incb
mov
push
sarb
inc
push
std
jae
roll
es
pop
mov
fadds
lahf
imul
ds
ds
cmp
jne
mov
cltd
fcomip
pop
int
incb
xchg
shlb
or
mov
add
add
xchg
jb
mov
out
nop
scas
xchg
fnstenv
push
inc
add
add
sbb
sbb
xorl
das
loopne
xor
mov
and
add
add
mov
add
or
cmc
xchg
shrl
pop
dec
inc
adc
bound
xor
addr16
mov
inc
js
add
add
or
mov
mov
aad
ds
add
add
adc
add
mov
lcall
pusha
add
add
xor
add
add
bound
mov
sub
dec
lret
stos
fimull
outsb
test
mov
cmp
in
sub
jnp
sub
add
add
rol
add
cmp
push
jg
dec
xchg
outsb
xor
add
add
add
aad
dec
add
subl
and
push
popf
cld
inc
int
shrl
add
add
fadd
push
out
cmp
aaa
mov
push
subb
std
pop
add
repz
hlt
shr
jb
dec
or
mov
add
jmp
or
xchg
ss
loopne
xchg
ss
sub
add
add
jl
fwait
xor
rcrl
mov
gs
add
add
cmp
inc
bound
mov
add
add
lods
sahf
pop
mov
jns
jnp
mov
xor
jae
dec
and
mov
ds
and
add
add
add
add
pop
xchg
sub
cmp
add
dec
add
add
mov
imul
fs
mov
int3
dec
mov
push
pop
pop
fnsave
stc
nop
shrl
add
add
inc
shrb
and
cwtl
sub
add
add
inc
push
lret
mov
and
mov
mov
fisubs
mov
sub
add
add
insl
cmc
lret
ret
movnti
add
add
and
dec
pushf
sahf
hlt
rorb
sbb
ja
add
add
add
sub
mov
add
add
mov
mov
mov
aas
icebp
mov
inc
mov
repz
shrl
push
mov
insb
mov
aaa
or
insl
xchg
in
xor
mov
daa
xor
dec
jmp
sti
push
adc
out
hlt
insl
das
out
dec
pop
loop
fcomps
rcll
mov
xchg
push
dec
and
mov
sub
add
add
ljmp
add
jl
push
sbb
testl
mov
xchg
dec
cmp
push
xchg
push
shrl
jl
insb
add
add
jne
test
mov
fcomip
lods
xchg
or
cmpl
fstpl
mov
add
or
pop
push
mov
pop
out
xor
sbb
jb
sahf
push
sbb
in
imul
dec
mov
lods
fdivl
dec
add
add
push
dec
mov
mov
mov
xchg
aad
jg
bound
aad
push
dec
mov
movsb
xchg
stos
into
test
addr16
mov
jae
mov
mov
movsl
sub
add
add
fs
push
cld
push
pushf
outsb
mov
add
lret
sub
ds
das
cmp
mov
std
inc
add
add
mov
jg
push
mov
xor
push
loope
and
ds
mov
push
cmp
sub
pushf
nop
pop
cmp
sub
push
ljmp
scas
ds
in
inc
in
mov
add
add
cmp
add
add
add
add
mov
add
add
outsl
pop
jle
mov
sub
mov
fistl
cmp
add
popa
adc
lea
add
loope
stc
cmpsl
adc
adc
mov
xchg
enter
lahf
fbld
aas
pop
jb
rclb
add
add
dec
dec
add
add
mov
and
add
add
lods
fsubr
mov
aas
xchg
lcall
add
add
add
out
add
pop
push
mov
pop
add
loopne
xor
sbb
repz
add
test
sbb
insl
rcr
stos
xchg
scas
or
icebp
add
xchg
out
fwait
adc
pop
cwtl
jle
pop
xor
imul
fistl
out
test
cmova
sub
push
insl
sbb
sub
add
add
add
add
or
add
add
shll
ja
cmpsb
ret
testl
jge
in
sbb
add
add
addb
test
pop
push
stos
cmpsl
cmp
test
add
add
add
add
imul
mov
mov
int3
leave
popa
test
je
mov
push
dec
enter
add
add
sub
add
add
sbb
cltd
lret
pop
iret
pop
sbb
mov
inc
add
add
mov
and
add
add
pop
mov
jge
shrl
loop
cs
lock
mov
add
add
add
repz
add
add
cmp
xchg
int
add
add
jp
in
enter
orl
mov
sub
ss
cmp
sbb
add
add
repnz
mov
and
sbb
movsb
sub
add
add
add
add
bound
daa
dec
jnp
add
add
add
and
sbb
outsb
outsb
sub
push
xor
daa
fucom
subb
imul
jo
mov
iret
into
ljmp
cmpsl
lods
pusha
mov
jae
mov
add
test
cmp
rclb
clc
xchg
dec
lea
pop
sub
test
mov
leave
movsl
pop
pushf
into
xchg
xor
in
add
add
add
xchg
pop
adc
xor
add
add
and
add
ds
in
mov
mov
xor
sub
add
add
dec
push
jae
jb
mov
add
mov
mov
mov
pop
insl
or
add
add
add
add
jecxz
mov
test
xchg
mov
cli
and
xchg
inc
mov
jp
adc
lret
jmp
aas
fsubs
je
iret
fwait
jl
add
add
mov
jle
sbb
cmp
rolb
out
jbe
dec
cmpb
inc
add
add
fwait
stos
shll
add
add
mov
das
mov
repz
xchg
jo
pop
in
shlb
dec
mov
out
mov
dec
pop
aam
iret
aam
lock
add
es
dec
shlb
xchg
js
out
pop
aas
sub
in
add
pop
ds
add
add
push
mov
mov
mov
fwait
dec
in
xchg
test
add
add
popa
and
push
mov
stos
sbb
cltd
lahf
out
sbb
mov
test
sti
fcompl
sbb
mov
cmc
aam
lods
mov
mov
jge
jae
sub
add
add
xchg
lret
push
sub
sub
add
add
add
push
or
push
imul
ljmp
out
je
push
ret
int
pop
pop
mov
dec
mov
push
ja
mov
jmp
add
xor
stos
daa
fs
sub
decb
add
add
setle
fmuls
dec
inc
mov
jb
into
lahf
add
shlb
and
add
add
mov
aad
frstor
pop
and
das
inc
sbb
test
or
imul
in
mov
and
push
add
add
xchg
lahf
xchg
subb
popa
in
dec
add
add
int
fwait
add
hlt
and
add
add
faddp
jmp
aam
iret
jb
lods
mov
add
lods
mov
mov
loopne
divb
test
or
xor
das
and
add
add
fs
mov
add
add
add
imull
add
rcrb
cli
rsqrtps
add
or
adc
mov
xchg
imul
add
lea
ds
add
clc
push
sbb
and
cltd
jle
jmp
js
push
scas
or
add
add
add
xor
inc
mov
fistl
mov
out
ret
lds
push
jmp
cmp
mov
xchg
adc
add
add
loop
add
add
les
push
sbb
adc
inc
ljmp
scas
inc
mov
roll
fdivrp
insl
cmp
dec
add
add
cli
fwait
push
mov
call
xchg
jnp
test
jl
out
insb
add
add
add
call
xchg
add
sbb
push
out
sub
aad
in
addr16
fldt
aam
mov
or
clc
into
test
sub
pop
push
pop
pushf
ret
sub
fwait
mov
cmpsb
jo
test
mov
je
leave
inc
int3
add
mov
mov
sub
add
add
xchg
insb
mov
rolb
add
add
sub
add
or
in
add
mul
push
mov
add
add
xor
loopne
fsubrl
sarb
jecxz
popf
stos
aad
in
rep
mov
pop
int3
and
in
adc
add
add
invd
mov
xor
and
pop
xchg
lods
hlt
sub
lock
rolb
sub
lea
pushf
xchg
shll
ds
adc
add
add
mov
adc
xor
pop
repnz
jb
or
add
add
mov
cmp
inc
mov
mov
dec
mov
js
inc
mov
mov
bnd
insb
mov
fwait
mov
push
aad
add
jg
fcmovnu
xchg
loope,pn
out
add
add
pop
jecxz
jae
mov
mov
jnp
and
sbb
aam
xchg
push
xchg
rcll
clc
rcrb
push
rcrb
xchg
xchg
sbb
add
add
fsubs
mov
and
add
add
xchg
dec
repz
int
int
mov
sub
add
add
adc
ret
add
add
mov
adc
bound
or
hlt
int3
fildll
add
add
shrl
add
add
add
mov
sub
daa
xor
adcl
fucomip
add
sbb
aas
outsl
mov
add
add
sub
or
add
add
pop
hlt
int3
lcall
daa
fiadds
add
rclb
addr16
ljmp
and
mov
adc
fwait
out
sti
adc
jne
adc
jmp
xchg
pop
stc
test
add
aam
ss
pop
dec
add
add
aaa
in
jae
aas
or
xor
jb
cwtl
mov
add
add
add
inc
mov
or
insl
dec
in
orb
push
push
xchg
adcb
push
mov
clc
push
sbb
cs
mov
pop
and
out
adc
jnp
leave
pop
add
add
mov
mov
mov
add
add
addr16
mov
add
add
mov
ja
jmp
mov
daa
pop
dec
test
add
add
in
fsubp
and
add
add
pop
mov
add
ljmp
ja
in
add
mov
dec
les
mov
xchg
dec
mov
lahf
sub
incb
pop
dec
or
iret
dec
jns
scas
xor
xor
repz
jno
clc
or
add
add
xchg
das
nop
data16
sbb
add
popa
and
add
mov
add
add
in
icebp
adc
mov
fnop
mov
out
mov
cmpsb
mov
jns
fimuls
push
hlt
das
cmpsl
or
movsl
sub
add
add
add
fwait
mov
out
sarl
sbb
add
add
xlat
ljmp
pusha
mov
lock
add
add
pop
push
mov
mov
loopne
aam
js
mov
mov
lret
ja
push
pop
sbb
ljmp
add
add
xor
sarb
mov
sub
movb
push
cmpb
xor
jg
push
add
add
add
ljmp
adc
pop
mov
in
add
add
add
add
jnp
xlat
pop
ficoml
cltd
pop
xor
ja
andl
addr16
add
add
sub
add
add
add
push
and
xor
shr
aas
sub
out
sbb
jae
mov
mov
imul
mov
xchg
jae
xor
scas
pop
sbb
inc
popa
loope
lahf
sbb
jae
into
rcll
adc
add
ss
repz
jl
fwait
dec
mov
or
sub
mov
mov
test
dec
mov
push
or
add
add
movsb
cmp
daa
shlb
out
mov
mov
enter
xchg
adc
sub
add
add
pusha
add
add
or
add
add
scas
out
in
fists
out
stos
inc
adc
add
ja
sbb
add
mov
jecxz
fwait
testl
add
xor
out
sbb
cmpsl
dec
xor
sbb
and
mov
data16
js
xor
ret
cmp
int3
call
ljmp
push
rorb
add
add
jo
mov
inc
lcall
cmp
xchg
jnp
das
popf
push
mov
mov
lret
add
sbb
int3
inc
add
add
outsb
inc
add
add
aaa
in
outsb
rolb
push
leave
ja
cs
mov
add
add
add
add
jmp
pushf
adc
into
ja
xchg
fadd
jno
cwtl
mov
arpl
add
push
scas
dec
mov
test
pop
out
xchg
mov
cmp
cmp
pop
addr16
jmp
stc
hlt
xor
and
in
push
dec
rcr
pop
sub
add
in
jno
inc
mov
cmp
outsb
mov
roll
ja
jp
add
add
mov
sbb
mov
shlb
lret
xchg
sti
mov
jne
loope
loopne
adc
lds
add
dec
sub
sbb
mov
pop
xchg
pop
mov
ds
ljmp
add
inc
mov
add
add
lods
mov
mov
stos
mov
xor
and
les
add
add
ficompl
out
in
sbb
outsl
fwait
aad
mov
fcomp
stos
mov
dec
mov
push
hlt
xor
repz
cmp
insl
and
and
add
add
add
add
fucomi
lret
aaa
cltd
in
jne
xor
mov
test
sub
adc
jnp
fdivs
add
ror
adc
sub
negb
adc
add
mov
xorb
add
push
imul
jnp
jl
mov
pop
jno
xchg
cmpsb
mov
mov
inc
cs
outsl
icebp
fsubr
xchg
mov
and
aaa
sbb
sbb
mov
or
push
std
daa
leave
ficompl
js
popf
loope
pusha
mov
clc
pushf
xchg
testb
movsb
push
ret
sub
add
inc
mov
pushf
jbe
cs
dec
dec
mov
mov
push
insb
add
add
xor
sbb
mov
fwait
xor
ja
das
popf
jne
sub
test
cmpsb
xchg
lcall
add
pop
inc
lret
xlat
cmp
lods
shl
fstpl
int3
jmp
push
dec
push
dec
mov
sub
add
add
add
add
inc
inc
mov
cmp
enter
ret
xchg
mov
sarb
orl
es
mov
mov
add
lods
fisubl
sbb
add
add
ds
stos
scas
cli
test
mov
add
add
jno
stos
mov
xlat
or
dec
mov
idivb
dec
pop
xchg
fisubrs
mov
and
repnz
dec
jecxz
and
add
push
pushf
inc
mov
add
add
pop
dec
mov
rep
xor
mov
add
push
cld
cmp
test
ds
cmpsw
cmp
sub
out
repnz
push
mov
xor
push
jnp
jnp
cmp
jmp
jmp
add
add
xor
mov
jle
mov
mov
xchg
mov
loop
ja
or
push
movb
add
push
fists
dec
inc
add
add
imul
mov
sar
stos
rclb
add
push
test
dec
add
add
lods
loopne
push
pop
xchg
ret
imul
adc
fstps
cmp
insb
mov
cmpsb
dec
push
call
rorb
cmp
push
and
icebp
xchg
dec
cmpsl
cltd
lods
mov
sbb
cmp
daa
add
add
inc
push
jne,pn
push
jb
or
mov
adc
sbb
jg
stc
add
adc
cmp
negb
cmp
add
inc
scas
and
jns
jns
mov
out
sahf
adc
add
xor
xchg
rcr
stos
dec
mov
lock
iret
movsb
mov
add
les
les
add
add
add
inc
sub
add
add
add
pop
mov
mov
out
dec
mov
outsl
jp
std
adc
rcrl
or
adc
add
add
mov
dec
mov
jl,pn
mov
nopl
add
add
cmp
pop
mov
in
rcr
push
ljmp
iret
fistl
dec
dec
add
add
sub
add
add
dec
call
das
pop
and
add
add
add
add
sbb
push
out
cmp
adc
int3
loop
add
add
mov
add
popf
or
add
add
pop
add
cmp
and
add
add
lahf
cmp
aad
mov
add
neg
mov
mov
orb
add
add
push
lds
jo
cmpsl
ret
cwtl
pop
incb
test
mov
pop
and
add
add
add
cmc
lea
push
jge
cvtps2pi
add
dec
fcmovu
fdivrl
lock
sbb
insl
stos
xor
dec
xor
test
aas
sbb
dec
mov
add
push
lods
add
int3
cmpsb
sbb
into
jnp
hlt
inc
add
add
enter
mov
jmp
mov
xlat
std
pop
out
sbbl
add
add
mov
cmpsl
sahf
sbb
sbb
mov
mov
movsb
enter
add
add
sti
inc
inc
mov
inc
das
fwait
int3
sti
dec
adc
add
add
xchg
inc
push
xchg
out
in
movsb
int
inc
loopne
mov
cmpsb
pop
mov
test
dec
mov
or
fdivrl
movsb
test
add
jecxz
loopne
mov
xor
adc
imulb
xor
dec
add
add
outsl
rorb
shlb
xadd
into
mov
jae
mov
int3
insb
add
add
fistpll
icebp
or
add
add
in
xchg
out
out
orb
sahf
xor
mov
fnstsw
xchg
ja
mulb
hlt
xlat
or
inc
lahf
rorl
lods
pop
pop
out
shlb
mov
fwait
jbe
std
dec
add
add
mov
and
fucomip
and
push
repz
xor
push
cmp
in
mov
out
jge
add
add
cmp
mov
fistl
hlt
gs
mov
imul
lock
or
add
sbb
xchg
pop
sub
psrld
add
notb
dec
mov
push
jecxz
mov
roll
pushf
mov
sbb
pop
divb
ds
cmp
add
add
mov
xchg
pop
ss
mov
cmp
pushf
arpl
dec
mov
subl
std
adc
mov
inc
loop
push
imul
pop
hlt
inc
mov
or
mov
scas
push
dec
lods
adc
mov
add
add
shlb
mov
xchg
jbe
cltd
int3
pop
mov
xchg
sub
adc
rcll
mov
ljmp
add
add
cli
mov
xchg
rorb
add
shll
xchg
inc
mov
jmp
inc
mov
jmp
lret
ss
addr16
ljmp
stos
fldlg2
out
ss
call
add
data16
sub
inc
inc
iret
dec
test
add
add
mov
mov
mov
out
mov
add
fs
imull
orl
cwtl
mov
shlb
add
aas
cmpsl
fcmovnu
ljmp
test
out
cld
fs
imul
cmp
add
inc
pop
mov
sbb
mov
jae
rorb
add
add
add
add
add
loopne
add
or
add
add
xchg
adc
mov
das
enter
insl
aam
pop
mov
ljmp
jnp
fsubrl
sti
push
xchg
mov
add
je
lcall
add
addl
inc
addl
sbb
mov
int3
out
aaa
pop
call
add
or
fsin
mov
sbb
adc
mov
aad
pop
jae
cmc
pop
cmp
xchg
lcall
dec
add
add
jp
xorl
add
add
arpl
cli
add
add
add
push
lock
sbb
jl
lret
mov
clc
sbb
repnz
dec
add
fadd
push
scas
mov
inc
add
add
jmp
lods
jbe
cmp
lods
adc
mov
popf
push
sbb
loop
mov
mov
mov
jg
dec
mov
xchg
mov
add
add
dec
jecxz
rol
cmp
jns
movlps
cmpsb
mov
decl
insl
xchg
shll
fwait
push
lock
pop
popf
add
add
xor
mov
add
adc
loop
jns
mov
add
adcb
pop
jg
stc
jns
sub
add
add
and
sub
fwait
aam
add
add
fwait
aas
xor
inc
out
mov
sahf
enter
insl
push
rol
pop
imul
add
add
mov
xchg
xor
dec
aaa
mov
scas
xchg
inc
jmp
rcpps
es
cmpl
jge
and
add
add
pop
sbb
test
outsl
loop
imul
aaa
push
sbb
test
adc
jle
mov
pop
orl
lods
daa
ss
je
int3
inc
mov
gs
fnstsw
push
and
add
add
js
xchg
xor
adc
add
add
pushf
pop
aam
fwait
mov
xor
add
add
add
inc
imul
scas
outsl
fimull
pop
mov
lea
add
sub
add
add
imul
mov
incb
add
add
add
add
mov
cmpsl
mov
push
jne
test
jae
adc
xchg
jg
out
icebp
movq
mov
jo
push
push
sarl
xchg
adc
add
fstps
pop
pushf
inc
jns
jg
or
add
add
and
add
add
mov
add
mov
pushf
in
mov
gs
insb
add
add
adc
xlat
shr
sub
cld
mov
pusha
mov
mov
cmpsb
add
into
push
add
push
sahf
out
pop
xor
aas
imul
sbb
mov
and
add
add
mov
mov
dec
add
add
dec
fidivl
xchg
imul
add
and
adc
xchg
xchg
jecxz
icebp
push
mov
or
orb
xchg
dec
cwtl
jge
sti
and
add
add
jecxz
cli
nop
push
inc
mov
fs
xchg
test
mov
dec
push
daa
lahf
and
push
loope
and
add
add
mov
mov
int3
xchg
sbb
in
sub
push
add
add
push
stc
mov
push
out
enter
sbb
cwtl
hlt
jp
cmpl
std
fwait
mov
push
pop
mov
mov
push
rcrl
and
pop
or
inc
dec
add
add
push
and
imul
cmp
das
jo
jo
cmp
jns
ljmp
sub
rcll
xchg
mov
or
push
loope
pop
xor
movsl
inc
fwait
sub
push
lcall
add
add
mov
mov
inc
mov
mov
insl
inc
nop
movsb
cmp
out
test
jns
push
or
or
bound
mov
mov
cmp
out
ret
mov
push
ds
insb
mov
add
add
lahf
dec
add
add
test
out
fucomip
sbb
pop
or
repz
subb
add
add
out
dec
mov
jne
xchg
rorl
inc
xchg
fiaddl
xor
sbbb
or
insb
add
add
jg
mov
jnp
pop
sub
idiv
jae
push
stc
xchg
decl
imul
gs
int3
ret
pop
xchg
sub
add
add
nop
jne
push
cmp
mov
inc
imul
add
add
add
dec
mov
dec
add
add
cmp
sub
filds
add
add
xor
mov
cmp
outsb
ljmp
cmpl
mov
fs
repnz
add
add
hlt
es
and
or
outsl
fwait
lods
mov
out
add
pushf
and
cmp
adc
insl
ja
outsl
aad
into
mov
add
ds
lret
lds
mov
adc
adc
subl
insb
add
add
add
add
add
outsl
mov
ja
ljmp
repz
add
add
sub
push
mov
mov
add
out
daa
push
adc
pop
ret
mov
pop
movsb
hlt
aam
mov
scas
mov
inc
fs
out
insl
sub
imul
add
cmp
add
add
add
mov
add
add
mov
aas
xor
dec
mov
pop
test
push
lcall
add
fstl
aas
fidivl
jbe
js
into
pop
sub
add
add
ja
pop
jmp
push
pushf
clc
xchg
movsb
mov
add
add
xchg
jo
add
add
shr
ljmp
add
add
rorl
xor
jge
inc
std
sub
dec
add
sbb
pop
push
push
mov
mov
ljmp
push
or
mov
push
cmpl
aaa
xor
inc
cmp
mov
mov
add
sub
mov
xchg
into
xor
jae
lahf
mov
js
pop
fists
cli
fwait
mov
add
mov
inc
cs
and
pop
std
scas
or
mov
mov
mov
dec
out
and
adc
cs
pop
cltd
cmpsl
add
add
xchg
pusha
mov
push
insl
lea
mov
push
and
xchg
and
sbb
xor
ret
xchg
rorb
mov
jns
int
dec
jnp
lock
dec
sbb
inc
fcoms
stc
stc
test
cmp
cmp
roll
add
clc
mov
lock
sysenter
setge
add
xor
dec
pop
sbb
lcall
inc
mov
lahf
jno
cld
or
fildl
add
add
ja
fiaddl
mov
add
add
add
cmp
fnstcw
icebp
rcll
in
jp
add
add
add
add
xchg
lcall
jne
imul
lret
cmp
xor
sub
push
daa
sbb
and
jbe
mov
xor
or
js
testb
add
aas
bound
add
add
outsb
jp
or
call
add
cli
mov
mov
fistps
nop
daa
mov
push
push
stos
adc
jo
sub
or
pop
addr16
xor
leave
outsl
incb
cmpsl
aam
addr16
jne
sbb
push
push
pop
filds
sahf
dec
mov
jns
nop
jl
shrl
push
cmp
jnp
scas
into
dec
sahf
dec
testb
adc
add
add
aad
add
mov
add
add
mov
ljmp
xlat
adcb
shrb
ss
mov
xchg
loopne
pop
mov
fiaddl
adc
push
pop
mov
out
mov
push
push
and
jle
in
iret
aad
in
cmpb
sub
add
mov
movnti
lret
jnp
jnp
pop
inc
mov
popf
or
cmp
subl
xor
mov
je
cwtl
fmull
xor
icebp
jl
fmuls
into
mov
test
arpl
jmp
add
add
pop
jnp
mov
int3
test
inc
add
add
addr16
hlt
xor
imull
add
add
add
insb
add
add
dec
fsubl
push
andl
jnp
jmp
and
loopne
sub
add
add
xor
push
std
sub
jo
loop
add
add
test
pop
xchg
scas
and
push
xchg
js
dec
xor
xchg
jns
out
add
jp
mov
mov
xor
and
mov
subb
mov
insl
push
insb
mov
sahf
jge
dec
jno
data16
ljmp
fucomip
mov
sbb
cwtl
mov
add
lret
dec
add
add
std
das
jb
mov
jns
andl
mov
add
xchg
les
xchg
scas
gs
loop
dec
add
add
into
dec
xchg
pop
cmpsb
sub
cli
pop
cmp
xlat
int
adcb
sub
mov
add
or
mov
mov
add
loopne
sub
add
add
add
add
add
add
scas
adc
repz
dec
mov
add
xorl
rcr
repz
fcompl
dec
add
add
sbb
lods
lea
xchg
cmp
xchg
jbe
jnp
mov
fs
fadds
loope
addr16
jl
or
add
add
or
dec
mov
sub
inc
popf
aaa
or
add
add
lcall
mov
ret
ret
test
add
add
cli
adc
add
or
add
add
int3
cld
mov
fstpt
push
in
sar
xor
add
add
push
cmpsb
adc
movsl
mov
or
add
add
or
adc
or
xchg
test
push
repnz
test
adc
mov
jge
mov
mov
mov
cmpsl
bound
push
add
mov
mov
les
add
das
add
je
and
add
add
add
add
dec
cmp
ja
icebp
push
rorl
ret
jbe
idivl
test
add
xor
add
cmp
pushf
jecxz
fimull
pop
sahf
aaa
and
loop
mov
cmp
mov
sbb
add
add
int
in
pop
or
cmp
add
add
xlat
push
lock
or
clc
jnp
iret
test
outsl
push
lock
xchg
scas
sub
add
mov
pop
cmp
call
adc
mov
daa
daa
repz
iret
jae
sbb
add
icebp
add
add
mov
into
popa
or
lret
arpl
movsl
adc
into
addl
movsb
cmp
insl
scas
stos
push
loope
sbb
xchg
out
aaa
divb
cmp
cld
xchg
cmp
sahf
adc
cwtl
jp
cwtl
fucom
mov
sub
add
add
jno
lds
inc
xchg
sub
lcall
mov
mov
mov
mov
repnz
aas
push
sub
mov
imul
out
push
rolb
mov
icebp
and
xor
add
add
bound
out
sbb
push
je
jnp
mov
push
inc
add
add
mov
add
add
iret
xor
cmc
icebp
xor
ja
pop
sub
add
notl
aas
mov
sub
add
add
add
add
add
jno
jmp
push
dec
imul
inc
testl
iret
adc
jmp
add
add
add
add
add
jbe
aas
jl
ss
add
add
add
mov
loope
inc
xchg
mov
pusha
add
add
das
xor
mov
xchg
inc
dec
inc
icebp
xchg
sbb
dec
lods
rcll
les
add
add
call
fdivrp
push
lods
scas
mov
inc
mov
inc
and
shl
push
dec
sub
mov
je
sahf
sbb
aad
pop
dec
and
add
add
ret
push
cmp
pop
idivb
push
xchg
jl
mov
add
pop
jbe
xchg
out
cmpsl
pop
out
xchg
cmp
outsl
or
stos
cmc
cmpsb
xor
addr16
mov
adc
enter
add
call
add
sbb
mov
adc
or
add
add
filds
mov
add
add
mov
aad
or
inc
jae
frstor
adc
fnstcw
negl
mov
ret
lret
iret
add
add
jae
out
ficoms
mov
mov
jl
dec
or
cmp
cmp
lods
pop
scas
push
js
andl
add
and
add
add
fwait
scas
mov
roll
cmp
add
add
sub
add
add
lcall
jns
cli
pushf
ljmp
push
fs
jp
insb
add
add
mov
add
add
pop
cmpsl
in
push
adc
cmp
lret
test
imul
add
add
out
aas
push
sbb
cmp
movb
add
dec
add
les
cmp
sti
dec
mov
or
jno
mov
push
mov
aas
xchg
push
icebp
hlt
mov
add
sbb
sub
les
mov
fildll
sarb
ret
mov
inc
and
add
add
mov
mov
mov
mov
loopne
clc
ja
mov
cltd
movsl
dec
jge
sarl
dec
mov
xor
in
adc
mov
add
add
mov
setb
mov
out
mov
mov
mov
xchg
jae
lahf
fucomip
call
call
add
add
dec
pushf
inc
mov
mov
jp
icebp
adc
out
pop
inc
hlt
lods
jle
stc
loop
imul
sub
cli
xchg
or
fs
jmp
cmpsb
int3
jmp
fldl
in
dec
add
add
mov
es
add
add
add
add
add
ss
xchg
xchg
add
ficoms
insb
add
add
adc
popf
outsb
inc
mov
test
add
add
mov
push
ds
cmpsl
bound
cmp
mov
push
loope
popa
jns
push
mov
add
add
int
xor
pop
outsb
jns
xchg
dec
daa
movsb
scas
aad
add
add
adc
push
adc
jnp
scas
cmpsb
mov
add
add
inc
cmc
daa
mov
std
insl
mov
daa
mov
adc
mov
sahf
pop
mov
cmpsb
xchg
sub
js
add
add
add
add
cmp
xchg
xchg
inc
inc
fs
or
mov
in
movsl
in
imul
sub
add
add
andb
xor
add
add
jns
or
int
cs
call
into
repnz
add
adc
out
mov
xlat
mov
bound
shll
jp
dec
int3
lea
aam
inc
add
add
in
and
add
add
xchg
xchg
cli
int3
jecxz
bnd
inc
jge
add
add
in
pushf
inc
mov
push
add
into
scas
pop
pop
mov
or
and
ds
sub
cmpsb
out
les
sarl
es
inc
cmp
jns
sub
add
add
stc
adc
add
add
mov
add
add
xlat
pop
pushf
inc
pushl
ss
mov
add
pusha
mov
pop
jae
mov
shl
cltd
mov
mov
dec
add
add
xorps
sub
add
add
dec
shr
push
sub
insl
es
rcll
sbb
cmp
fistpll
adc
iret
cwtl
into
pop
cmc
repnz
adc
add
mov
adc
pop
sbb
sbb
cmpsl
imul
lahf
cmp
xor
add
add
add
add
in
lret
test
pushf
inc
imulb
aaa
sar
aad
inc
ss
sbb
and
add
add
push
and
pop
inc
add
add
hlt
mov
and
sub
add
add
xchg
cmp
sub
std
add
add
add
lret
jle
xsave
add
add
in
adc
add
add
add
add
es
jns
lahf
add
add
add
mov
mov
push
in
add
and
or
iret
in
nop
pop
push
std
call
push
or
jmp
xlat
sub
mov
notb
sbb
jl
mov
xlat
sbb
push
add
add
sub
pop
dec
outsl
push
push
adc
insl
sti
test
push
lret
pop
scas
cmp
aam
mov
fdivrs
clc
push
and
push
xor
lret
mov
mov
out
call
insl
inc
pop
sub
add
add
lret
push
mov
add
mov
push
fidivrs
cmp
and
repz
int
or
rcrl
les
add
add
jp
sbb
dec
rclb
ret
hlt
popa
addr16
out
push
lcall
mov
movsl
into
sbb
hlt
cmove
add
add
add
data16
sarb
sbb
outsl
mov
ja
fdivrs
add
add
push
movsb
ret
enter
mov
dec
push
pop
imul
fisubrs
nop
stc
dec
aaa
enter
pop
xor
fisttpll
add
add
inc
repnz
push
mov
mov
jo
mov
add
xchg
shll
stc
imul
mov
aad
lds
cmp
push
movsb
and
add
add
and
idivl
add
adc
xor
in
cmp
sbb
mov
insb
mov
pop
cmp
pop
xchg
and
add
add
push
insl
xchg
adc
add
add
cld
out
test
dec
add
add
push
mov
ljmp
xor
popa
stc
mov
sub
adc
add
ret
mov
gs
sbb
xchg
loope
mov
jne
ds
call
push
push
sub
imul
popf
sub
cmp
add
add
pop
cmp
and
jno
iret
xchg
cmp
popf
ss
push
jns
loope
add
add
jne
mov
fcomps
push
and
aad
movsb
mov
sti
stc
mov
add
int
mov
fcmovnu
loop
nop
xor
fldt
dec
add
add
dec
jo
inc
mov
addl
mov
mov
add
add
dec
jmp
cli
popa
ljmp
xor
jbe
or
add
add
add
mov
incb
push
xchg
fwait
inc
add
add
xlat
xor
ret
pop
fdivs
imul
or
add
add
mov
rcl
shlb
mov
lods
stc
aas
in
mov
pop
sbb
dec
add
add
mov
jecxz
xor
jge
fwait
lahf
hlt
cmc
test
rclb
mov
fisttpll
mov
push
inc
add
add
push
mov
add
cmpsb
rorb
jae
jno
aaa
pusha
add
add
mov
or
push
sbb
add
push
or
jle
inc
es
stos
lods
and
ficoml
jecxz
shl
jmp
jle
cwtl
addr16
sbb
aad
dec
mov
iret
push
cmp
pop
mov
lret
push
repnz
in
repz
mov
xchg
sub
add
push
inc
loopne
fcomps
shl
jnp
test
and
add
jp
fistpl
mov
mov
cmp
daa
rol
sbb
mov
add
add
add
mov
push
pop
mov
outsb
pop
leave
or
rcrb
mov
popf
pop
inc
and
sbb
std
aas
clc
arpl
fadds
adc
add
add
div
mov
jnp
xchg
add
add
sti
xchg
add
push
mov
stc
jb
xor
lock
notl
xor
sub
mov
cmovne
dec
fcmovbe
xchg
daa
inc
mov
faddl
pop
adc
jl
jge
hlt
out
mulb
or
pushf
cmp
and
mov
pop
mov
jae
xor
xchg
jns
push
or
repz
test
add
or
add
mov
test
ds
mov
shrb
add
add
cmc
xor
ss
iret
push
mov
push
sbbb
xchg
in
pop
mov
jle
inc
mov
add
add
lcall
push
jmp
outsb
mov
add
and
add
add
sub
sbb
add
add
mov
add
add
sub
push
repnz
dec
cmp
adc
lds
push
dec
add
add
sub
add
add
ss
push
pop
mov
add
add
add
adc
stc
cs
ret
in
cli
jnp
hlt
cwtl
mov
dec
push
ljmp
mov
jge
rorl
add
adc
gs
add
addr16
jb
shlb
mov
and
mov
add
pop
mov
xor
add
filds
xor
es
mov
out
mov
in
negl
fisttpl
sbb
cmpsl
jo
fstpl
hlt
fimull
outsl
pop
xchg
lods
insb
add
add
movsb
inc
push
in
mov
sub
add
add
pop
int
shl
and
add
add
lods
jo
cli
fnsave
rcll
add
add
add
cmp
jo
jmp
sbbl
cmp
add
add
mov
or
or
pop
push
jmp
call
add
push
sbb
pop
mov
add
std
loope
xor
mov
xchg
fst
leave
mov
add
add
jmp
add
add
push
pushf
aas
jns
xor
inc
out
jno
mov
lock
jg
push
cmp
lahf
mov
rclb
sub
pop
cmp
jle
mov
lds
or
mov
insb
mov
push
aas
mov
es
out
add
mov
imul
mov
mov
test
imul
jp
fdivrs
and
outsl
js
aam
out
and
xor
loope
cmp
add
sub
lock
insb
add
add
out
insl
mov
lds
xchg
iret
movsl
mulb
add
add
jb
cwtl
mov
mov
in
sub
aam
push
jmp
xchg
push
xor
sub
rol
adc
push
popa
sbb
dec
inc
fnsave
scas
xchg
aam
out
out
jg
out
sbb
mov
jnp
cli
push
imul
fsub
aam
shll
push
movsb
pop
sbb
xchg
sbb
cmpsb
stc
xor
les
jnp
add
add
add
fldl
add
add
push
int
adc
bound
nop
mov
add
add
sbb
popa
in
inc
fldt
cld
sti
sbb
movsb
andb
pop
mov
add
scas
xchg
and
xchg
mov
adc
lock
add
add
cld
neg
xchg
sbb
sub
outsb
das
dec
mov
jge
insb
mov
push
cmpsb
lock
push
cmp
sub
add
add
and
stc
sarl
pop
xor
lods
mov
nop
mov
add
add
mov
add
sar
ret
scas
mov
aaa
inc
push
cltd
lea
add
add
add
add
or
pop
std
ja
les
out
jle
loop
xorl
jle
icebp
mov
and
rclb
jno
mov
stos
pop
cld
sub
or
add
add
add
fs
les
mov
rcll
sti
cmc
or
ja
lds
xchg
ja
js
sub
jb
mov
xchg
ljmp
cmpsb
test
add
add
add
sub
add
add
mov
add
add
in
pop
nop
fmuls
mov
dec
add
add
mov
inc
jnp
lret
test
test
or
add
add
cmp
cmp
add
add
pop
out
leave
repz
insb
mov
add
add
mov
sbbb
imul
mov
mov
je
push
or
jae
adc
int3
jno
add
test
add
pop
pop
inc
cltd
loop
dec
sub
je
loopne
jl
cwtl
push
adc
test
cmpl
push
gs
fcompl
into
out
leave
cmp
out
js
sbb
int
hlt
pop
jae
fdivrl
cmpsb
cwtl
adc
cmp
lock
ret
jecxz
arpl
decb
les
mov
mov
data16
lea
add
add
add
add
dec
pop
cmc
inc
add
push
push
jge
push
mov
cmc
xchg
sub
mov
and
pop
inc
mov
push
lea
std
sbb
lods
daa
adc
add
add
int
repnz
dec
mov
mov
mov
add
add
add
aad
add
add
pusha
add
add
cld
insl
lods
inc
xchg
loopne
inc
adc
sbb
aaa
sarl
ret
dec
pop
sti
jg
bound
loope
mov
jecxz
sbb
add
add
data16
add
add
add
cld
sub
outsb
sub
add
add
repz
dec
fdivrl
push
jecxz
xor
fsubrl
add
add
mov
ret
mov
add
add
testb
cmp
add
add
lret
mov
cs
adc
int
lods
aam
mov
insl
gs
mov
dec
mov
sub
lods
or
add
add
lret
insb
mov
out
out
in
call
mov
cmp
icebp
jo
add
add
ficomps
mov
add
push
daa
push
aaa
fwait
leave
stos
out
movsb
cmp
add
add
lcall
add
lds
sahf
insl
scas
cmovs
add
add
add
fisttpll
sub
add
add
lcall
out
jbe
pop
inc
mov
cld
mov
xor
test
add
add
adc
xlat
scas
and
add
add
out
inc
jo
push
push
mov
loop
fmuls
add
out
push
add
add
add
cli
dec
outsb
aas
loopne
mov
or
add
add
lret
mov
jbe
xchg
pop
les
jle
bnd
mov
sbb
inc
add
add
adc
lret
enter
lret
dec
jp
sbb
pop
ficomps
dec
sarb
iret
jno
mov
sbb
fisttpl
add
add
lds
and
add
add
mov
add
add
imul
ljmp
mov
add
repnz
xchg
jae
lods
fwait
adc
mov
lret
out
int3
pop
int
jnp
andl
subl
xor
cld
mov
add
push
jns
clc
iret
in
mov
adc
lahf
fwait
mov
push
mov
in
inc
push
sbb
popf
cmp
mov
add
shlb
cmp
lcall
inc
push
lods
ret
mov
add
add
aas
gs
jmp
sbb
and
clc
loop
test
jg
test
outsl
pop
ret
ljmp
add
mov
cmp
clc
into
cmc
fiaddl
loope
stc
and
add
and
dec
add
add
dec
cs
in
lret
add
add
xor
test
and
push
daa
fsubrl
add
test
aad
stc
push
sahf
adc
je
or
enter
or
add
add
aam
pop
xchg
inc
dec
add
add
jnp
in
push
lret
mov
les
out
sbb
mov
mov
pop
ljmp
sbb
push
clc
sub
shl
pop
aaa
cmp
xor
mov
mov
mov
add
add
xor
add
add
arpl
je
mov
and
pop
clc
xchg
adc
xchg
clc
push
mov
inc
in
mov
cmp
mov
xchg
mov
sti
inc
xchg
mov
add
dec
mov
mov
out
or
jns
pop
aas
cmp
pop
add
xchg
movb
imul
mov
and
and
add
add
icebp
sub
add
add
pop
push
inc
add
add
dec
or
xchg
lds
cmc
pop
test
add
aam
movsl
lret
add
add
in
ja
subb
jb
pop
mov
mov
mov
std
mov
push
call
mov
pop
sub
pop
ficompl
add
push
pusha
add
add
cmp
mov
test
mov
mov
fimuls
scas
pop
jbe
dec
lret
aam
movsb
jmp
jae
mov
cltd
add
add
add
add
loope
faddl
mov
add
sub
prefetchw
or
sbb
jno
sub
fucomi
out
test
add
iret
rorl
sti
jnp
lret
pop
imul
add
add
add
or
mov
in
loopne
push
aaa
adc
insl
sbb
shll
fs
int3
pop
imul
jo
add
add
add
cwtl
icebp
frndint
test
lcall
lret
sti
sbb
arpl
add
add
push
iret
mov
xor
test
add
mov
xor
cld
add
test
aad
add
add
movsl
push
inc
add
add
add
mov
jns
filds
adc
add
add
mov
in
dec
data16
sbbb
mov
cmp
fbld
lods
add
movsb
addr16
add
add
out
movsl
jg
movsb
pop
mov
add
add
mov
xor
xorb
add
add
scas
stos
cwtd
sbb
lods
and
aaa
xchg
mov
aas
push
fwait
add
xchg
mov
xchg
pop
inc
add
add
push
loope
arpl
push
sub
or
insb
mov
jnp
push
mov
xor
shl
dec
xchg
mov
xor
in
inc
add
add
imul
outsb
jo
sub
push
cwtl
cmp
js
shlb
mov
mov
lods
lock
add
cltd
je
addr16
cmp
loopne
inc
inc
ljmp
xchg
std
cmpl
mov
xor
sbb
movb
add
and
add
dec
cmp
sti
pop
mov
stos
xor
dec
sti
test
cld
mov
adc
push
inc
das
outsb
mov
adc
out
jecxz
ds
jmp
push
fidivs
jno,pt
movsb
pop
sbb
inc
sub
mov
push
dec
mov
daa
sub
add
add
xor
xor
popf
xor
fdivrl
insb
mov
and
xor
mov
arpl
jge
xchg
adc
sub
pop
js
pop
out
shll
imul
xor
sti
scas
xor
outsl
incl
popa
jecxz
pop
mov
xchg
pushf
out
cltd
loope
arpl
xchg
mov
add
les
xchg
add
cs
mov
rclb
fucom
or
mov
pusha
mov
add
add
mov
subb
mov
xlat
adc
loope
xor
jecxz
cmc
xchg
cmp
lahf
or
push
cmpsl
inc
mov
outsl
aad
and
pop
xchg
rclb
and
xchg
nop
push
aaa
lods
sbb
dec
bound
ds
lret
hlt
pusha
add
add
xor
into
mov
add
xor
sbb
stc
arpl
add
jg
shlb
rol
add
aam
sub
test
mov
inc
push
stos
repnz
rcll
ret
js
popf
inc
mov
shrl
add
add
mov
sub
cltd
ss
fwait
jae
jne
pop
fnsave
mov
sbb
cltd
divb
pop
push
inc
mov
popa
xor
iret
pop
rolb
jge
push
clc
in
lret
cmc
in
jle
xchg
call
enter
push
inc
test
outsl
mov
ss
add
add
add
add
push
push
in
mov
aam
xor
adcb
ds
dec
jecxz
insl
daa
es
mov
loop
rorb
mov
cmp
add
add
scas
jbe
insb
add
add
jl
push
call
add
add
add
cmpsb
imul
mov
adc
sti
adc
insl
mov
cmpsl
fwait
nop
loop
sbb
add
call
add
add
add
add
push
outsb
fs
push
je
fcomi
movsl
sbb
xchg
outsl
std
jmp
add
add
sahf
rcr
add
jae
lcall
bound
rolb
call
adc
add
add
add
add
add
xlat
mov
mov
dec
rorl
mov
enter
push
shll
sub
add
add
jo
scas
mov
test
and
add
add
and
jae
pusha
add
add
add
inc
pop
mov
jmp
bnd
add
add
add
xor
xlat
cs
and
and
add
add
jp
jg
lods
xchg
fs
cmp
adc
cmc
xor
add
add
adc
loop
cmc
lahf
jge
mov
add
shrl
lds
adc
pop
mov
loop
std
popf
mov
pop
lods
jmp
pop
push
dec
mov
repnz
mov
sbb
mov
dec
das
and
add
add
vpackuswb
int
pushf
xlat
xchg
mov
aaa
add
mov
sbb
and
dec
scas
xor
mov
cmpsb
cld
nop
adc
out
cmp
add
add
mov
add
shl
mov
pushf
mov
or
add
clc
rolb
mov
push
scas
inc
dec
mov
xor
jo
dec
in
scas
xor
add
in
xchg
fcoml
mov
pop
cli
in
mov
fwait
adc
inc
pop
dec
dec
pop
and
stos
push
mov
test
xchg
stos
and
add
mov
fs
fsubp
mov
and
lods
pop
sbb
xor
mov
mov
or
aad
add
add
addl
mov
lahf
dec
jno
xlat
hlt
outsl
xlat
es
dec
adc
data16
into
ss
sahf
sub
imul
sub
or
fimuls
pop
mov
xlat
lods
bound
sti
cmp
inc
mov
loopne
imul
mov
mov
lret
inc
cltd
xorb
into
push
mov
xor
gs
mov
add
add
dec
mov
add
add
mov
jle
add
add
in
and
mov
or
jmp
add
js
pop
roll
iret
repnz
lahf
mov
and
sbb
addl
inc
lds
mov
push
aam
add
add
sub
nop
cmp
test
pop
icebp
add
add
add
jge
mov
mov
sbbb
iret
pop
push
sbb
xchg
mov
mov
out
movsb
add
cmp
add
imul
push
pop
rorb
add
aas
add
mov
scas
ds
sahf
mov
and
repz
cmp
or
stos
cmpsb
push
adc
add
cwtl
in
out
sub
addr16
iret
pusha
add
add
icebp
pop
arpl
loopne
push
mov
add
add
dec
mov
aam
inc
mov
std
mov
add
push
cld
ret
popa
inc
add
add
pop
xchg
aam
inc
mov
jo
push
mov
dec
popa
ljmp
clc
inc
pop
mov
imul
jne
mov
outsb
jle
data16
add
jmp
add
add
cwtl
rcrl
jmp
shll
test
movsl
or
add
add
mov
add
add
das
xchg
pop
dec
lret
cwtl
lea
add
add
cmp
xchg
out
ss
mov
cld
pop
outsl
call
fcmove
bound
call
gs
adc
test
test
stos
mov
add
add
add
xchg
stc
shlb
inc
add
add
imul
lahf
sbbb
and
inc
sub
add
add
pop
cwtl
sbb
adc
bnd
bound
test
nop
addl
xor
adc
adc
pop
and
daa
imul
mov
sub
add
add
testl
xlat
mov
xchg
xchg
sbb
icebp
mov
xchg
mov
inc
sti
push
xor
and
sub
out
call
les
push
xchg
lahf
mov
cmpsb
mov
push
push
mov
fstpl
adc
xor
aad
cmovo
mov
or
add
add
cwtl
mov
jg
lds
mov
mov
mov
and
sub
mov
pop
cmpsl
adc
mov
xor
cli
adc
aaa
pusha
add
add
push
aam
sbbb
scas
pop
dec
mov
lds
nop
pop
and
add
fwait
jmp
mov
pop
es
cmc
xchg
add
add
in
mov
push
pushf
sbbl
push
add
add
add
lret
shlb
pushl
push
roll
push
jmp
fsubrs
add
std
xlat
add
jmp
je
xor
loopne
push
cmp
repnz
les
add
add
inc
mov
xchg
ret
les
add
repz
mov
ljmp
out
hlt
test
sub
jne
jmp
jns
stos
stos
cmp
add
add
add
sub
add
add
pop
mov
ds
sbb
mov
pop
push
in
xchg
cmp
out
lds
add
add
mov
lock
mov
inc
pop
xor
xchg
shrb
pop
rsqrtps
popf
mov
sub
add
add
adc
cmp
out
or
lea
movsl
mov
add
xchg
jb
pop
xchg
xchg
or
add
add
and
mov
or
pop
aaa
add
jecxz
scas
xor
xchg
jecxz
mov
mov
fdivr
lods
push
shlb
jmp
push
mov
test
sarl
add
add
sbb
cmp
add
daa
cmpsb
pop
fwait
xor
add
add
cli
mov
jmp
add
add
add
add
es
inc
mov
out
sub
mov
jb
inc
add
ljmp
add
xchg
in
adc
inc
ret
add
add
cmpl
mov
add
add
push
imul
mov
add
add
adc
test
nop
mov
adc
lods
adc
dec
nop
outsl
lods
and
sub
add
add
xorl
popf
xor
add
dec
fnstsw
addr16
and
add
add
sbb
mov
insb
mov
xchg
test
inc
add
add
rcrl
sbb
aad
lods
lods
rcrb
sti
or
ret
xor
std
mov
dec
add
add
hlt
mov
mov
iret
jmp
add
repnz
sub
add
add
fistps
fwait
call
add
popf
xchg
or
add
add
test
add
add
std
stos
inc
mov
test
je
scas
faddl
xor
add
add
fwait
cmp
mov
lea
rolb
add
dec
mov
out
xchg
or
cli
jno
pop
dec
call
add
add
sub
insl
in
inc
add
add
lods
or
push
movlps
rorl
iret
ror
movsb
sbb
and
nop
push
movsb
xor
loope
mov
add
add
mov
add
pusha
mov
mov
loope
dec
xor
mov
xchg
shr
inc
mov
outsl
idivl
add
mov
add
add
notb
add
lret
sbbl
add
test
into
in
ljmp
add
lods
or
loopne
lock
sub
fisubrl
icebp
ljmp
out
test
push
pop
fsubrs
fcmovnbe
imul
mov
jg
movsl
addr16
pop
mull
mov
in
aaa
xchg
fstl
xor
add
add
adc
push
clc
pusha
add
add
pop
enter
cli
movsl
stc
pop
insl
push
sub
add
add
mov
scas
xor
cmpl
in
add
cmpl
or
mov
add
add
fisttps
inc
rorb
push
scas
mov
cld
sub
sbb
lret
or
mov
cli
popf
push
and
jne
sbb
add
add
mov
pusha
add
add
std
outsb
lcall
out
stc
sub
sbb
push
sarb
adc
pop
adc
cmp
add
add
add
pop
pop
adc
push
or
lods
sahf
jb
add
xchg
or
into
push
jae
add
add
add
jge
pusha
add
add
adc
adc
call
add
add
mov
and
add
add
fcompl
xchg
mov
push
icebp
scas
call
add
jb
js
lret
add
add
sahf
inc
jg
push
lahf
add
cmp
lock
mov
jp
mov
mov
add
add
mov
cltd
mov
add
jo
or
mov
dec
add
add
mov
cli
leave
dec
mov
mov
push
jle
pusha
add
add
iret
fimull
jle
adc
adc
andb
or
mov
xor
ret
cmp
pop
cs
xor
sub
add
add
lret
mov
icebp
push
add
clc
dec
jae
jo
pop
xadd
es
dec
in
cmp
rorl
add
add
icebp
out
push
out
dec
pop
dec
xchg
add
pop
cmp
add
add
xor
push
pop
push
shrl
dec
add
add
jle
paddq
stos
xchg
leave
push
repz
stc
insl
and
push
inc
add
mov
aad
pop
and
add
add
push
ss
clc
int3
insl
xchg
jp
lea
xchg
or
pop
fwait
mov
add
add
add
fstl
in
aaa
mov
inc
dec
jg
push
cmp
addl
cld
hlt
cmp
dec
push
xor
and
movsl
fdivr
stos
xlat
mov
xor
shlb
add
add
inc
loop
in
mov
pop
jle
fidivrl
std
jg
pusha
add
add
stos
test
icebp
rcrb
loopne
popf
inc
add
add
push
leave
xor
jecxz
subb
jp
bound
add
add
es
cmp
nop
pusha
add
add
iret
je
or
add
add
iret
nop
aam
and
mov
pop
fisubs
jmp
mov
divl
pop
mov
inc
push
call
shlb
inc
in
xchg
xor
cmp
inc
sahf
call
pusha
mov
add
out
and
dec
sub
add
add
add
add
insl
fs
inc
mov
movsb
cmp
aaa
enter
arpl
xchg
sbb
faddl
or
popf
push
jp
das
das
cmpsb
adc
pop
pop
add
add
add
xor
add
add
add
add
add
jb
push
or
add
add
add
add
mov
aam
loope
pop
xchg
outsb
push
loope
pop
sub
add
add
jae
xor
xor
div
aam
xor
xchg
arpl
and
sarb
and
add
add
lods
push
sbb
fldt
add
fcompl
mov
in
push
nop
add
pop
dec
mov
pop
dec
mov
sahf
aaa
xchg
dec
mov
lahf
gs
inc
jne
push
xchg
mov
cmp
movsl
sub
fiaddl
in
add
add
jb
and
add
outsb
dec
push
lea
insb
add
add
xchg
sti
lock
in
lock
aaa
jg
stos
jae
mov
shll
mov
out
and
add
add
fcmovne
push
pop
or
out
adc
test
add
mov
add
jp
mov
push
pop
xor
outsl
pop
fidivl
xor
xor
cltd
hlt
cmc
loop
movsb
mov
daa
inc
jmp
fistps
fwait
lcall
adc
add
push
imul
pusha
add
add
int
int
stos
ffree
dec
scas
cmp
xor
mov
rcll
mov
mov
jl
cmp
or
add
add
mov
outsb
pop
pushf
andb
enter
add
add
das
sti
in
adc
mov
js
add
fidivrs
jmp
mov
in
pop
dec
mov
out
mov
adc
lret
xor
jbe
add
add
int
or
sbb
insl
scas
mov
add
add
dec
jae
jne
test
pop
pop
fists
aad
jmp
mov
add
add
mov
and
addr16
mov
add
push
cmp
add
mov
sti
xor
sub
add
add
add
add
rol
mov
lods
mov
inc
lret
add
add
xor
and
das
inc
inc
push
aad
sti
std
mov
push
adc
mov
mov
jns
xchg
leave
mov
loop
and
add
add
in
repnz
adcl
mov
add
add
lret
xchg
mov
aam
and
iret
cmp
mov
inc
lahf
lahf
xor
roll
jg
inc
nop
mov
lock
ret
sbb
add
add
add
in
lods
push
and
push
sub
xchg
shlb
push
sbb
add
add
testb
js
mov
inc
push
add
mov
adc
and
jo
add
add
mov
and
rep
orl
xchg
into
sar
das
out
mov
mov
push
pusha
add
add
xchg
inc
add
pop
ficomps
stos
scas
in
mov
jg
sub
add
add
movsl
out
xchg
mov
pusha
mov
cmp
pop
iret
sbb
sub
fcom
out
std
push
mov
jbe
cltd
into
test
mov
loope
inc
xchg
daa
push
sub
add
add
add
add
add
add
dec
mov
xchg
inc
mov
cmp
clc
and
lock
test
add
add
dec
mov
mov
test
push
xchg
inc
add
aam
push
hlt
nop
sbb
bound
xchg
sbb
mov
jns
dec
add
add
pushf
sti
mov
aad
jb
inc
pop
sbb
sbb
mov
lahf
fs
adc
les
sahf
and
dec
dec
xchg
cmc
mov
add
ret
fwait
shl
lahf
cmc
and
adc
mov
popf
push
cmp
icebp
cwtl
xchg
fisubrs
test
add
add
sarl
dec
stos
mull
add
add
test
add
das
sar
add
add
add
popf
xor
cmp
sbb
add
mov
ds
push
outsb
jecxz
or
clc
or
add
add
es
call
pop
or
aam
psubsb
stos
faddl
fiadds
lock
add
add
xchg
xlat
dec
mov
sti
movsb
test
or
rorb
rorb
add
mov
mov
cmc
js
jmp
fcmovnbe
cmc
mov
add
fisttps
mov
inc
dec
jbe
jle
popl
sti
cmp
in
mov
add
gs
add
shll
cmp
sbb
mov
pop
int3
sbb
mov
add
add
gs
or
add
add
sub
mov
int
jnp
jne
jg
imul
inc
cmpsb
xchg
sub
mov
add
aam
or
add
add
xor
jb
mov
adc
mov
leave
mov
sar
andnps
rolb
inc
mov
call
jg
xor
or
add
add
push
hlt
jle
xchg
xor
movsl
in
rclb
test
jb
cld
inc
in
add
mov
add
add
pushf
fnsave
sub
xor
add
cmp
or
shrb
mov
add
add
aas
or
mov
leave
daa
std
and
popa
pop
add
fmull
mov
fistpll
mov
movsb
fcmovb
xchg
out
fisubs
stos
movsl
mov
out
fbld
add
add
cmp
in
leave
scas
cwtl
testl
insb
mov
sub
pop
mov
push
scas
xchg
mov
leave
inc
test
pop
out
add
add
jl
movsl
xchg
rclb
loop
cmc
add
add
add
clc
fdecstp
fnstcw
testl
iret
dec
stos
jle
push
mull
in
mov
sub
aas
test
testb
mov
jns
imul
sub
add
add
mulb
pop
ret
mov
sub
add
add
jmp
ret
pop
lock
xlat
or
add
add
fadds
add
add
pushf
mov
mov
divl
add
pop
orb
arpl
or
mov
cmpsb
pop
sbb
add
add
fucomp
inc
loop
movsl
fwait
or
inc
outsb
aam
mov
hlt
inc
and
adc
add
add
pop
les
or
lret
adc
add
add
nop
das
mov
add
add
xlat
aaa
sub
outsb
test
outsl
out
inc
jg
ret
sbb
hlt
call
add
push
lahf
xchg
push
mov
xchg
xchg
inc
mov
mov
adc
clc
sub
mov
dec
mov
jge
sub
hlt
pushl
add
add
pushf
clc
loope
add
add
add
add
add
push
pushl
shrb
mov
mov
scas
lcall
subb
mov
add
fs
sbb
in
xor
mov
fiaddl
pop
sbb
movsl
call
mov
sub
add
add
out
fs
add
add
and
add
add
cltd
loop
or
sbb
fiaddl
jo
mov
mov
cltd
loope
repz
es
dec
lods
fimull
adc
and
xchg
and
inc
jmp
sub
es
jge
call
add
add
inc
jl
dec
add
add
sbb
sbb
add
mov
and
shlb
push
cltd
lock
and
test
xlat
inc
sbb
xor
add
cmp
test
jg
push
jno
cmc
insb
add
add
arpl
mov
call
ja
dec
mov
sub
out
stc
mov
jg
cmp
push
shrb
jmp
push
sbb
ret
mov
loope
jne
jmp
roll
les
add
push
ja
lahf
mov
add
jo
or
add
test
pop
cwtl
adc
add
add
or
add
add
je
ja
pushf
jnp
sbb
add
add
and
shlb
push
fwait
jg
and
add
add
dec
add
stos
lahf
jg
or
aas
sub
add
mov
add
add
add
jl
xchg
fnstenv
clc
call
jb
push
in
mov
mov
jp
imul
out
add
mov
fcmovnu
mov
xor
add
add
jae
loopne
ljmp
add
jnp
adc
or
insb
add
add
mov
insb
add
add
aas
ret
pusha
add
add
lret
xor
js
mov
movb
add
add
les
movsl
js
cmpsb
test
mov
bound
xor
and
add
mov
out
cmpsb
jb
subb
js
fadd
loopne
cmpl
xorl
sarb
out
sub
add
add
jmp
inc
into
out
call
mov
push
dec
mov
inc
sahf
inc
add
add
add
sarl
adc
in
ljmp
add
jnp
call
add
add
int3
dec
outsb
jne
sub
mov
add
add
mov
movsb
nop
xor
push
ja
sub
jmp
in
imul
add
scas
out
stos
pop
sbb
add
add
outsl
loop
cmp
jne
mov
sahf
fdivrl
pop
jae
and
mov
add
add
xchg
fistpll
mov
sbb
or
sti
xchg
or
add
add
sub
add
in
add
add
add
push
cmpsb
cltd
mov
xchg
cmp
bswap
push
testb
add
add
jne
or
add
add
jae
cmpxchg8b
nop
lds
or
popf
mov
sbb
sbb
test
lcall
test
mov
fnsave
jge
add
mov
sbb
mov
cmp
push
ljmp
xor
fldt
sbb
sbb
loop
pop
inc
addr16
pop
pop
inc
int
test
add
add
mov
add
mov
or
sub
mov
dec
xor
sbb
add
add
xor
add
add
shl
bound
push
das
push
ss
adc
add
add
mov
add
add
pop
push
nop
or
and
push
sub
and
push
repnz
sub
mov
fldcw
push
out
mov
movsb
dec
das
dec
js
mov
push
and
mov
mov
test
mov
add
stos
scas
lds
jmp
ret
add
add
add
and
add
add
inc
mov
cmc
dec
add
add
mov
jns
pop
jg
add
add
and
push
into
adc
fwait
repz
add
movsb
insl
outsb
dec
dec
mov
jo
fadds
lcall
cmovae
mov
fisttpll
pop
jbe
popf
and
dec
sbbb
nop
push
cld
shl
push
push
add
jmp
inc
add
add
jp
add
std
push
gs
lret
mov
ds
adcl
xchg
lea
push
sub
xor
mov
in
pop
fwait
int3
cmp
xlat
push
sub
xor
add
jg
jne
insb
add
add
fsubrs
xchg
stos
inc
lret
or
add
add
mov
mov
inc
mov
imul
sub
add
add
pop
mov
inc
pop
lds
inc
mov
xchg
dec
add
add
xor
test
inc
push
mov
xchg
shrb
loopne
fmull
pop
fidivrs
repnz
in
mov
mov
add
bound
add
add
adc
inc
add
add
sub
add
add
aam
xchg
inc
mov
ror
push
pop
in
push
lret
mov
mov
test
sub
sub
fs
loop
es
mov
push
insb
mov
nop
mov
lods
push
mov
add
add
js
jbe
adc
dec
ret
popf
push
sarb
test
jge
add
add
lret
ljmp
add
add
adc
add
mov
add
add
arpl
dec
push
andl
add
scas
out
dec
out
mov
repnz
sub
add
or
test
lret
shr
stos
sub
int3
jge
inc
add
add
out
iret
stos
sahf
in
push
addr16
add
rcrb
xchg
in
mov
dec
daa
int3
shr
jo
hlt
stos
shl
inc
scas
stos
fistpll
jnp
pop
enter
cmp
out
shll
test
mov
movsb
rcrl
enter
nop
ret
adc
pop
pop
addr16
scas
sub
ja
pushf
mov
mov
lods
or
pusha
add
add
or
je
shl
pop
cli
ret
cwtl
imul
in
or
dec
pop
mov
cmp
add
add
add
out
aad
stc
inc
add
add
pop
jo
outsb
dec
icebp
sbb
xchg
xlat
sbb
mov
mov
movsb
jae
pop
jmp
mov
stos
dec
jno
add
add
les
loopne
mov
lea
or
es
popf
mov
pop
addr16
out
adc
and
mov
push
js
into
std
int3
jge
adc
add
add
notb
xor
adc
sub
add
add
addr16
lahf
rcl
out
repnz
mov
inc
jge
in
pop
push
into
shl
and
add
add
add
add
scas
roll
int
mov
lea
inc
mov
add
cmp
test
add
add
push
call
add
add
shr
push
testb
aas
cmp
add
or
add
add
stc
cwtl
xchg
lea
add
shll
pop
jnp
add
add
inc
add
add
jno
mov
and
add
add
sbb
in
scas
mov
cmc
adc
aas
sti
scas
std
iret
lea
add
add
sub
add
add
faddp
add
add
add
add
add
sbb
out
push
std
mov
sub
insb
add
add
and
add
add
or
std
and
add
add
mov
xchg
mov
jbe
mov
lods
clc
xor
negl
or
xchg
mov
insb
mov
xchg
mov
add
add
insl
fcoms
add
mov
imul
add
or
push
pushf
jo
add
dec
inc
mov
rorb
push
inc
xor
inc
stos
sti
or
dec
push
push
adc
bound
add
add
jmp
loopne
jl
jbe
add
std
cmp
push
jo
int3
fwait
jmp
in
lods
mov
mov
mov
pop
int
add
add
aam
mov
cwtl
sbb
push
aad
loop
or
add
call
xchg
repnz
sbb
cmp
xchg
test
fwait
dec
mov
mov
pop
ja
rcrb
mov
xlat
call
shrb
sbb
sub
lea
lret
add
add
add
lods
mov
mov
add
and
add
add
not
test
pop
jmp
outsb
xor
cmpsl
cmpsl
push
xchg
rcll
add
add
stos
js
mov
dec
mov
mov
sbb
jl
push
xchg
call
add
test
mov
or
add
add
mov
jae
push
cmp
or
test
aam
cmpsl
add
add
add
or
mov
add
mov
idivb
add
add
mov
fsubl
mov
mov
rcrb
xor
mov
fistl
outsl
mov
mov
pop
dec
mov
jae
pop
gs
add
add
pop
pop
cmp
mov
push
out
je
ljmp
ljmp
pop
xor
cmp
add
aam
add
add
arpl
adc
add
jmp
arpl
mov
bound
in
movsl
inc
jns
push
add
add
add
ret
xlat
aad
and
mov
jle
push
shl
mov
dec
das
int
icebp
xchg
mov
add
add
mov
mov
stos
dec
mov
ror
ret
mov
hlt
or
add
add
data16
icebp
cwtl
adc
decl
pop
pop
pop
aad
jge
cld
addr16
sbb
or
add
add
add
or
add
add
add
add
mov
scas
cmpsb
stos
pop
dec
add
sub
add
inc
roll
inc
in
push
xchg
ljmp
add
add
cmpb
pop
scas
out
imul
pop
scas
lods
mov
lock
cwtl
xor
outsb
or
add
insb
mov
inc
cmp
cmp
adc
add
add
ret
push
ds
add
add
jnp
leave
fidivl
cmc
sbb
dec
add
add
mov
add
mov
inc
add
add
pop
movsl
xor
cmp
mov
mov
fildll
pop
fadds
push
xchg
decb
jl
add
add
stos
in
cmpsl
scas
jbe
or
add
add
sub
inc
shll
xor
and
add
inc
xor
xchg
shll
in
push
cli
fst
jb
je
scas
scas
scas
mov
mov
sbb
rorb
add
add
add
add
icebp
mov
mov
and
mov
shll
add
or
mov
mov
jl
cmpsl
push
cmp
mov
jmp
dec
inc
and
nop
inc
repnz
jg
outsb
gs
mov
imull
mov
das
sub
mov
add
mov
add
add
dec
mov
jge
mov
sti
xchg
push
cwtl
jb
sub
push
cmp
cltd
adc
jp
mov
in
mov
jmp
pushf
cli
movsb
aam
clc
mov
pop
lods
cmp
mov
xlat
and
add
add
jns
and
add
add
add
cmpsl
in
pop
les
adc
lahf
lret
hlt
jg
push
mov
add
add
push
pop
xchg
dec
add
add
or
inc
pop
aam
dec
add
add
test
pop
mov
inc
leave
adc
cmpsb
mov
sbb
mov
test
scas
mov
inc
shrw
call
push
mov
add
add
add
add
add
pushf
sahf
or
stos
inc
jmp
fldenv
pop
insb
add
add
in
mov
xchg
push
inc
and
jl
jecxz
aam
les
add
test
lret
mov
scas
mov
or
sub
add
add
xchg
cmc
mov
xchg
cmp
mov
add
adc
add
add
add
add
add
inc
das
xchg
das
sbb
add
add
int3
xor
cmp
mov
mov
and
add
stos
push
sbb
mov
mov
add
jne
jo
inc
add
add
enter
add
es
xchg
push
push
out
xchg
pop
jmp
pop
testb
mov
push
test
add
add
jg
out
jno
lret
sahf
test
loop
or
ficompl
fwait
cwtl
inc
cmp
movsb
mov
imul
sub
adc
mov
or
add
scas
push
mov
pop
iret
sub
add
add
sbbb
lcall
aas
xor
mov
addr16
xchg
mov
xor
cmp
mov
in
int
cmp
add
add
add
mov
xor
xchg
imul
push
sub
lret
out
or
fdivp
mov
scas
bnd
xor
idivb
icebp
das
and
insl
testl
add
cwtl
popf
call
add
add
add
xchg
dec
cltd
sbb
in
inc
add
add
cmpsl
subl
pop
xor
scas
out
dec
pop
push
mov
outsb
stc
pop
xchg
inc
mov
mov
sbb
stos
fbstp
into
cmp
pop
sahf
mov
push
ljmp
add
insl
and
mov
hlt
and
add
add
scas
cli
mov
icebp
pusha
add
add
ror
add
cmpsb
mov
in
mov
add
add
mov
jne
jb
mov
mov
int3
dec
rclb
inc
mov
push
xor
mov
mov
hlt
pop
jl
cmpsl
inc
add
mov
cmp
or
jbe
mov
imul
inc
xchg
lods
outsb
dec
mov
js
push
inc
test
loope
push
mov
ja
mov
mov
push
push
sub
add
cli
xor
cmp
out
push
fadds
push
jp
xchg
add
add
add
xor
adc
pop
fdivrp
jmp
in
repz
add
lock
add
add
test
pop
push
jo
fwait
push
sbb
fstp
out
sti
into
add
add
add
jns
call
add
sti
sbb
mov
sub
add
in
test
xchg
out
xchg
push
xchg
test
dec
mov
jmp
cmp
into
or
inc
subb
add
jns
js
insl
sub
loopne
aad
cmpsb
imul
xor
add
add
js
js
call
dec
sub
sub
mov
mov
add
sbb
pop
add
add
andl
jnp
arpl
dec
mov
out
adc
add
xchg
xor
xor
das
sahf
icebp
into
mov
add
inc
push
nop
mov
mov
add
add
add
cmp
add
das
lret
insl
sarb
xchg
in
fistps
dec
sbb
insl
stc
xchg
cmpb
inc
add
add
mov
add
xchg
or
jno
inc
ljmp
frstor
jmp
lret
xchg
bound
das
mov
add
add
add
jnp
mov
jmp
pushf
inc
lret
xlat
xor
push
jo
xor
daa
push
out
xchg
bound
cwtl
iret
icebp
add
add
add
push
fucom
jp
shr
into
or
int3
sub
popa
shll
lahf
rorl
add
je
xchg
les
add
add
js
xor
aas
mov
movsb
mov
data16
mov
iret
cs
dec
test
add
cmp
mov
fs
stc
inc
add
add
mov
mov
and
enter
mov
filds
sub
add
mov
dec
popa
xor
mov
mov
add
add
cmp
mov
rcll
push
mov
add
add
ret
scas
ret
leave
jno
cmpsb
push
and
lods
lcall
sti
orb
dec
add
add
es
mov
add
add
in
in
dec
outsb
aas
dec
mov
push
jae
sub
imul
add
add
sub
or
add
add
out
adcb
xchg
lret
pusha
mov
lcall
add
lock
push
sbb
cwtl
add
popa
je
push
xor
ret
xchg
mov
enter
mov
fdivs
ljmp
stos
dec
add
add
int
ss
mov
add
out
dec
cmc
addr16
mov
mov
xchg
mov
xchg
dec
add
add
aam
push
dec
mov
or
outsl
push
sub
fs
lds
xchg
add
add
push
sub
loopne
lret
in
adc
int
add
add
dec
mov
mov
pop
mov
add
add
in
loopne
mov
jae
clc
pushf
imul
add
fcompl
xor
adc
xlat
fimull
loopne
mov
mov
scas
lret
adc
add
add
inc
add
add
sbb
mov
and
add
add
push
movsb
int
dec
xchg
push
xlat
adc
push
push
sub
add
add
or
mov
es
push
add
fdiv
cmp
cltd
daa
pushl
ss
hlt
adc
jnp
fldl
stos
lods
les
add
add
add
aam
in
mov
rclb
or
ret
popa
insl
lods
mov
insb
add
add
xor
mov
add
add
cmp
ss
jne
xor
ja
jecxz
add
add
pusha
mov
mov
loop
add
add
aaa
dec
out
aas
les
lret
adc
jno
inc
add
add
lock
add
add
jg
pushf
or
fstp
add
add
add
dec
mov
mov
pop
lret
les
add
or
mov
push
pop
mov
and
push
test
xchg
imull
add
add
xchg
sub
xchg
clc
ljmp
repz
ljmp
pcmpgtw
add
add
mov
dec
fwait
test
pop
movsb
or
sub
sbb
test
and
xchg
out
out
mov
mov
cltd
outsb
lret
mov
cmp
push
call
mov
add
add
add
xchg
mov
mov
push
mov
pop
push
mov
add
add
mov
test
xchg
iret
mov
adc
mov
mov
popa
add
sbb
add
adc
add
xor
ljmp
add
add
movsl
lret
pop
fdivl
sub
push
daa
cld
inc
add
add
aam
or
sub
add
add
xor
push
sbb
push
andl
mov
repz
pop
sub
add
add
lret
enter
mov
lds
xor
ds
aad
add
dec
das
nop
ja
movb
fiaddl
add
mov
lret
mov
jne
sbbb
shr
adc
outsl
dec
mov
stc
push
jbe
pop
bound
add
sub
add
add
mov
mov
and
add
add
popf
sub
add
add
insl
les
mov
int
mov
arpl
or
add
add
xchg
add
mov
add
add
add
add
lock
pop
pop
adc
add
rolb
insl
out
rolb
jg
test
sbb
mov
add
ja
add
add
mov
add
add
dec
dec
sub
add
arpl
add
add
jmp
add
mov
xchg
adcb
dec
sahf
sti
fwait
repnz
add
mov
mov
pop
es
fistl
jmp
mov
pop
push
xlat
sbb
jo
mov
and
loop
daa
scas
call
out
lods
fistl
push
jb
scas
scas
in
xchg
add
add
cmp
sarl
fwait
or
add
add
xchg
jo
xchg
mov
and
pop
lret
flds
loope
mov
sbb
sahf
xchg
adc
pop
mov
dec
xor
shrl
rol
mov
add
add
iret
jle
or
add
add
cmp
xchg
mov
mov
jbe
mov
push
inc
mov
dec
jecxz
pop
out
pop
or
add
icebp
xchg
jl
push
call
out
xchg
push
sbb
add
add
mov
inc
aad
push
mov
sbb
push
sbb
sbb
pcmpgtw
add
sbb
sub
add
add
add
not
js
pop
ret
aam
mov
subb
loopne
add
add
add
int3
test
add
push
adc
add
add
jb
imul
sti
add
inc
ret
or
out
bsf
shll
in
imul
call
dec
jns
std
ffree
lahf
into
cmp
xchg
clc
xchg
push
mov
cs
add
add
inc
aaa
pushf
inc
ljmp
cmpsl
test
cmp
mov
xor
lds
add
jle
mov
pop
mov
out
repnz
shrl
add
add
mov
cli
sahf
int
mov
pop
stos
loop
pop
mov
pop
dec
add
add
cmp
andb
mov
mov
shrl
rcrb
cmp
js
jo
mov
add
add
add
fucom
ret
rorb
add
add
sub
add
loop
arpl
mov
push
add
or
add
add
inc
test
lods
pop
or
pusha
mov
mov
repz
inc
mov
mov
xor
cmp
inc
push
pusha
add
add
mov
xor
jb
pop
das
xchg
cs
jno
arpl
roll
jns
jmp
cli
clc
popa
sti
fnstsw
mov
mov
add
add
mov
fists
out
mov
int
xchg
inc
out
ret
je
xor
lds
cld
in
nop
pop
mov
lcall
jnp
or
imul
add
add
sbb
add
sbb
fisttps
adc
add
int
mov
ret
je
outsl
int3
stc
push
cmp
and
and
xchg
mov
adc
iret
repnz
mov
push
or
add
add
push
data16
outsl
aaa
js
push
loope
outsb
imul
add
add
inc
mov
xor
mov
mov
scas
fists
mov
pusha
add
add
inc
rorl
mov
pop
dec
mov
xchg
push
jmp
dec
jmp
or
jb
jecxz
add
add
add
mov
test
aas
iret
jae
scas
out
pop
jo
and
cmp
mov
leave
push
out
add
add
add
cmpsb
pop
inc
pop
aam
and
mov
pop
test
push
or
add
add
psubw
dec
sub
sti
add
mov
lret
lock
add
jne
insb
mov
cmp
sub
add
add
sbb
into
fcmovnb
push
cld
mov
pop
xchg
dec
scas
dec
addl
add
lock
adc
ds
imul
daa
insb
add
add
push
and
pop
mov
loopne
aad
cli
cmpsl
sbb
jl
ret
mov
test
add
sbb
ss
pop
or
add
add
mov
cld
jmp
dec
cld
push
fiaddl
aad
mov
mov
std
dec
das
in
adc
push
test
shrl
add
mov
mov
push
and
mov
add
cmp
cmp
add
add
sub
or
jb
lods
scas
ror
addr16
jle
mov
mov
adc
push
pop
jmp
add
add
add
fsubl
cld
sti
pop
das
test
mov
add
add
mov
cmp
test
scas
sub
add
add
cld
pop
mov
loope
push
xor
imul
pop
jl
addb
xchg
movb
add
add
add
add
add
push
lods
or
add
add
add
add
inc
movsl
je
mov
cld
lret
shrl
les
js
sti
imul
add
sub
add
add
ljmp
aaa
in
ret
in
mov
jge
mov
in
ljmp
sbb
pop
mov
fcoml
popf
inc
push
popa
test
or
pop
arpl
test
clc
cmp
arpl
mov
add
mov
movsb
push
mov
xchg
sub
add
add
dec
add
add
inc
scas
outsb
sbb
cmpsb
cmpsb
scas
sbb
pusha
mov
cmp
fsub
mov
movsb
and
add
add
insl
outsl
sti
xchg
stos
pop
jp
mov
add
add
imul
mov
cld
xorl
push
jecxz
imul
push
movsb
lds
pop
adc
add
ds
dec
push
jae
iret
test
xchg
std
popa
popf
or
add
add
and
add
add
jl
lods
push
pop
bound
mov
sbbb
mov
mov
ss
out
sbb
xor
pushf
xchg
stc
clc
imul
pop
xchg
into
pop
xchg
cltd
test
xchg
push
xchg
inc
add
add
lret
ja
add
add
out
mov
add
or
add
add
mov
xor
test
inc
out
insl
test
cmpsb
cmp
add
sbb
add
hlt
cmpsb
push
out
cwtl
shlb
adc
dec
mov
sbb
add
sbb
add
add
sub
add
add
mov
xchg
or
mov
loop
fsts
adc
and
add
add
add
inc
mov
jne
repz
negb
jns
ja
cmp
stc
mov
scas
pop
aas
lock
imul
ja
aad
movsl
loopne
inc
enter
mov
dec
movsb
add
add
add
add
add
push
mov
add
add
add
add
fcoms
lea
mov
mov
js
ret
insl
inc
add
add
xchg
dec
jge
inc
jne
pop
rorl
inc
pop
addl
push
or
add
add
push
aaa
mov
add
add
cwtl
push
lret
pop
jb
movsb
mov
sarb
arpl
roll
add
add
mov
add
mull
and
xchg
lret
daa
push
pop
dec
mov
mov
add
ljmp
dec
add
add
test
inc
xor
add
add
and
add
add
add
add
push
dec
jno
push
lret
and
rcrb
cmpsb
aam
fwait
pop
fsubrp
lods
push
push
adc
or
leave
nop
push
dec
add
add
test
mov
add
add
push
cmpsl
ljmp
mov
mov
add
test
mov
maxps
cmp
add
add
pop
xor
scas
dec
jb
or
int3
push
pop
scas
iret
cmc
push
cmc
dec
pop
push
push
xor
pop
push
imul
jae
lea
test
xor
movsl
xlat
pop
dec
mov
add
js
js
cs
push
hlt
lea
and
rcrb
inc
add
add
subb
add
add
add
repz
and
jp
xor
add
add
add
lds
push
push
aaa
fsubl
call
sbb
mov
mov
add
add
orb
mov
sub
and
add
add
fisubs
scas
lcall
xchg
mov
shr
inc
mov
add
add
add
loopne
mov
mov
lcall
sbb
mov
xchg
cmp
addl
jne
cs
add
mov
iret
add
add
cmp
cli
mov
out
cmpsb
movsl
popf
sub
dec
sub
or
add
add
in
pop
and
add
add
gs
push
movsl
aad
mov
fs
popl
jnp
mov
shl
cmp
cmpsb
mov
imul
add
add
inc
adc
icebp
rorl
xchg
in
scas
xchg
mov
jo
mov
xor
enter
ljmp
lods
and
xor
ljmp
scas
adc
in
mov
add
add
add
mov
add
add
push
addl
add
pop
push
lcall
sbb
add
mov
mov
sub
add
add
add
add
femms
pop
push
cmp
rorl
add
push
xchg
icebp
dec
movsb
push
pop
movsl
ja
stos
xlat
cmp
dec
pop
jne
mov
pop
scas
dec
cli
fcomps
add
loope
scas
push
push
clc
mov
add
xlat
fimuls
xor
sub
cmp
adc
push
inc
mov
pusha
add
add
ja
addr16
sub
ds
mov
add
mov
ficomps
push
jnp
mov
sub
mov
pop
dec
aaa
mov
add
add
and
add
add
add
mov
xor
mov
aaa
mov
loopne
fimull
push
call
mov
stc
ss
push
stos
mov
iret
sti
jecxz
pushf
negb
push
cltd
mov
sub
add
add
aam
test
xchg
cmp
sbb
enter
mov
xor
and
add
add
push
inc
mov
xor
dec
mov
jl
push
mov
loopne
push
adc
cmc
les
or
pusha
mov
dec
test
lahf
arpl
popf
inc
mov
movsl
aaa
repz
lods
xchg
ja
cmp
add
add
add
nop
mov
push
into
pop
jns
cmpsl
sub
or
add
add
icebp
fcomps
shll
add
fadds
add
add
add
add
fs
test
add
add
lods
or
add
push
jecxz
push
cmp
in
scas
lea
push
pop
arpl
mov
jp
into
repz
pop
xor
ja
dec
add
add
fisubl
out
rorl
out
les
add
add
filds
add
add
jl
adc
je
cmp
or
xor
jno
stos
push
sub
cmp
inc
sub
leave
cmpsb
in
mov
add
add
popa
movsb
rcrb
cli
adc
daa
adc
ljmp
sbb
mov
and
cltd
and
add
dec
shrl
add
add
mov
jo
push
ficoml
clc
pusha
add
add
dec
mov
mov
mov
bnd
push
jge
sub
add
add
test
add
add
xchg
xor
sti
push
cwtl
aaa
sar
bound
aaa
adc
xchg
sub
add
add
out
fisttpll
add
add
dec
mov
out
int
and
jl
push
or
mov
cmp
jle
cwtl
lods
inc
rorb
add
or
push
stos
orl
push
enter
je
aad
mov
fwait
xchg
lods
fwait
push
jo
add
add
add
outsl
sub
daa
out
mov
aas
test
mov
jp
add
cld
jecxz
add
add
shlb
iret
inc
sbb
or
xchg
xor
cld
inc
mov
das
inc
mov
sbb
push
jno
dec
in
push
in
xchg
lods
xchg
add
add
mov
enter
arpl
fdiv
into
sub
mov
sbb
add
add
lret
mov
fwait
mov
jnp
icebp
es
sub
add
loope
into
rcr
push
fldcw
mov
int
fwait
sbb
mov
cltd
xor
inc
call
add
pop
mov
pop
shrl
aam
call
mov
test
imul
pop
mov
cwtl
mov
sbb
add
xchg
fimull
add
add
or
add
add
notb
sbb
enter
pop
mov
mov
push
mov
fisttpl
sbb
adc
add
sahf
mov
xchg
insl
mov
sbb
mov
lahf
mov
add
add
loop
call
mov
das
bound
jae
arpl
add
fcmovnu
push
push
or
mov
pop
cmpsb
jle
rolb
add
add
mov
and
add
add
add
lcall
dec
aad
xor
lea
cwtl
jecxz
repnz
pushl
add
add
out
cmp
outsl
int3
stos
push
and
push
int3
icebp
inc
mov
pop
popl
ret
push
imul
xchg
push
ret
sub
jl
push
enter
add
lcall
cwtl
sub
mov
cmp
add
add
add
add
dec
mov
jp
mov
xor
or
out
outsl
add
add
insb
add
add
lret
xchg
in
cli
mov
jbe
sbb
jl
cwtl
divl
call
adcl
add
add
lock
cmp
repnz
dec
mov
rcrl
imul
out
dec
mov
add
or
in
lds
hlt
rol
test
lods
mov
add
mov
sbb
add
add
add
add
lds
add
add
out
rclb
out
or
add
add
lahf
sub
add
add
jl
sbb
add
add
push
jae
adc
in
aad
jp
mov
pop
xchg
shlb
mov
hlt
sarb
mov
fists
shrl
mov
add
dec
cwtl
mov
lds
add
add
fstps
stos
mov
jmp
mov
pop
daa
outsb
and
mov
mov
repz
add
jle
rclb
scas
icebp
shlb
cltd
outsl
mov
pop
loopne
cmp
inc
pop
mov
out
mov
push
mov
std
mov
add
add
add
push
xchg
in
push
pop
es
and
adc
cmpsl
pop
fdivs
add
add
out
or
add
add
out
xor
movsb
xor
enter
mov
pop
test
add
add
xchg
hlt
cmc
lea
xor
in
jnp
push
int3
faddl
add
add
andl
jecxz
mov
cld
jns
dec
push
iret
mov
cmp
xor
add
or
mov
add
add
lock
js
and
fwait
pushw
mov
adc
add
add
mov
mov
and
lret
aad
jbe
shl
into
mov
jl
clc
mov
adc
and
push
xor
and
ja
add
or
lock
add
add
add
popf
lods
ret
jmp
mov
mov
scas
mov
add
sbb
add
add
mov
sbb
add
iret
insb
add
add
push
hlt
mov
cmp
or
add
aam
xor
jb
adc
sbb
pop
hlt
mov
or
add
add
xor
add
add
push
and
add
add
cmp
jp
sub
jle
inc
call
add
dec
fbld
loopne
inc
add
add
push
outsb
jecxz
lret
push
inc
notb
push
inc
rorl
mov
mov
inc
add
add
addr16
mov
sbb
ficoms
xlat
divb
xor
hlt
test
xchg
andnps
add
add
add
add
xchg
outsb
push
or
add
add
mov
gs
mov
int
cmp
pop
dec
stos
inc
sahf
fdivl
in
das
rcrb
add
add
push
jecxz
mov
out
test
fwait
add
add
dec
in
xlat
lock
add
add
jbe
jb
mov
cmp
das
xor
and
xchg
loopne
sub
icebp
push
es
popa
popf
fcmovnb
pushf
and
add
add
and
xchg
and
mov
push
jp
xchg
adc
jge
shlb
add
add
cmpsl
shll
add
add
insb
mov
inc
fidivs
mov
icebp
ret
adcl
add
add
adc
pop
jecxz
push
and
add
add
xor
mov
test
neg
fbstp
or
add
add
and
xchg
dec
add
add
xor
pushl
adc
pop
cld
pop
pop
xchg
push
mov
dec
add
add
lock
ss
sub
rcll
and
add
add
push
sbb
mov
add
add
add
mov
jnp
inc
fsubp
test
sub
add
add
sbb
jb
in
sub
es
dec
fwait
lahf
push
mov
shlb
outsb
or
add
add
fiadds
imul
lcall
out
jbe
mov
add
add
pop
inc
jo
cmpsb
lahf
gs
dec
add
add
jmp
xor
enter
pop
idiv
idivl
daa
xor
cmp
call
add
add
cli
test
jne
mov
cmp
cmp
adcl
mov
sub
js
adc
add
add
jle
add
push
lret
in
aad
outsb
ret
mov
push
les
cmp
lret
xchg
xchg
add
test
pop
fwait
xor
rclb
in
popf
lcall
es
lods
push
and
cs
add
mov
add
and
popf
cmpsb
fstps
add
add
insb
mov
testl
mov
add
add
add
add
icebp
inc
mov
int
mov
in
mov
outsb
push
or
lret
pop
sahf
push
test
pop
mov
mov
in
dec
mov
cwtl
cmp
pop
int
jno
inc
or
add
add
in
popf
dec
xchg
imul
xlat
mov
xchg
rcll
das
sub
add
add
jno
loop
fdivs
mov
add
sub
mov
push
cli
push
and
scas
sahf
cmpsb
int3
dec
cmpsl
inc
push
cmp
mov
add
add
stos
add
add
add
fisubl
dec
mov
dec
test
leave
xor
ljmp
ja
mov
test
adc
add
add
xchg
mov
pop
add
test
lock
jo
inc
xchg
and
sub
fcoml
xchg
fimull
push
cli
enter
xor
loopne,pn
sti
xchg
ret
add
add
add
cmp
mov
shr
lds
pop
mov
pop
in
test
or
pop
test
fbstp
add
jne
pop
cs
cmc
pushf
xchg
clc
clc
mov
mov
test
jge
dec
mov
add
add
fwait
std
pop
cltd
push
jnp
jbe
xlat
or
inc
das
mov
push
cmp
cmp
fsts
and
xchg
std
cmp
add
inc
jecxz
push
orl
push
rclb
js
lcall
sti
lahf
cmp
pop
add
lret
insb
add
add
adc
push
mov
cmp
mov
xchg
push
push
sarl
rorb
lea
jmp
repz
sbb
and
add
add
out
adc
out
sbb
mov
add
push
shlb
mov
inc
pop
sub
cltd
lret
xchg
xchg
dec
rclb
push
adc
insl
insb
mov
lea
insb
add
add
je
and
insl
and
sub
jmp
faddp
jb
mov
jp
test
jp
jmp
xchg
inc
flds
js
les
xchg
addr16
cmp
mov
scas
adc
add
add
fwait
shld
add
add
mov
ljmp
mov
mov
add
add
add
add
mov
push
es
repnz
jecxz
inc
mov
adc
dec
mov
movsl
test
sbb
aas
aas
sbb
xor
icebp
ja
mov
subb
into
js
sbb
sahf
mov
mov
andl
and
test
cmp
inc
out
pusha
mov
lds
and
add
add
in
mov
daa
push
movsl
aad
stc
in
fmul
inc
add
add
negl
scas
cli
aas
mov
push
sub
add
add
add
add
add
add
inc
sub
scas
arpl
mov
lea
jp
sub
std
outsb
ss
mov
pop
outsb
and
add
add
mov
add
fidivrs
mov
pop
mov
add
rorl
add
lods
mov
xor
add
inc
mov
fldt
add
add
dec
mov
lds
push
add
add
add
test
add
add
dec
mov
mov
sbb
pop
repz
fadds
xchg
mov
mov
repz
rol
mov
fisttps
repnz
mov
out
xchg
mov
cs
and
les
or
jge
stc
cmp
movl
incl
xchg
mov
outsb
add
cmp
mov
out
xchg
push
jae
loopne
dec
sbb
cmpl
push
arpl
mov
mov
cmp
mov
cmp
pop
mov
orl
dec
mov
outsb
jo
mov
lcall
ret
mov
jl
scas
subl
test
stc
mov
inc
mov
enter
add
add
lds
and
inc
pop
jae
cs
mov
clc
loop
push
xchg
add
add
or
icebp
dec
ret
punpcklbw
cli
clc
push
fiaddl
loopne
mov
sbb
add
add
std
test
ret
cmp
scas
pop
sbb
push
movsl
nop
push
pusha
mov
adcl
add
add
add
add
mov
shlb
lret
sbb
movsb
dec
ss
mov
nop
das
jns
push
inc
in
adc
and
push
push
add
add
add
add
add
sbbl
add
adc
imul
add
jae
adc
add
add
dec
pop
xor
loopne
aad
ficoms
lea
or
mov
mov
pop
loop
add
add
sbb
jmp
cs
es
mov
cld
lods
xorb
jp
jg
enter
sysret
or
mov
pop
xlat
mov
add
jg
out
mov
movsl
dec
add
add
and
cli
or
add
add
add
add
xor
mov
add
add
add
add
dec
add
add
std
loopne
scas
cltd
leave
rorb
adc
adc
add
add
in
or
add
add
stos
jle
ljmp
ljmp
add
scas
add
inc
dec
xchg
cmp
hlt
gs
rcll
sub
adc
and
lret
mov
jl
mov
jg
roll
sbb
xchg
ja
sar
dec
mov
xor
popa
test
fwait
insl
testl
add
xor
and
or
js
add
add
dec
mov
inc
add
add
xchg
jo
xchg
dec
add
add
xor
and
add
add
mov
in
inc
lret
sbb
pop
pop
dec
mov
add
add
xor
mov
int
fld
into
pop
xor
mov
add
mov
adc
pushf
add
mov
mov
cmp
mov
or
add
das
inc
inc
and
int3
addr16
in
adc
subb
add
mov
mov
push
stos
fiaddl
jo
stos
negb
jp
in
inc
mov
shlb
gs
das
enter
dec
add
add
add
push
xchg
cli
xor
push
jne
add
add
jnp
addr16
pusha
mov
cli
cmpsb
jnp
xchg
adc
mov
cmpsl
mov
add
add
xchg
and
mov
sub
add
add
push
xchg
clc
out
rclb
add
cs
push
stos
ret
mov
pushf
pop
cmp
cmp
or
cmp
fisttpll
mov
std
pop
push
push
sub
add
add
leave
ret
inc
mov
test
popa
stos
shl
cmp
addl
jae
orl
mov
cmpsl
lret
stos
pop
bound
fs
fisttpl
add
add
rolb
add
add
add
add
add
add
cwtl
ds
add
add
push
rorl
in
data16
fildl
add
add
fistpll
jg
sub
add
add
je
dec
je
pop
lahf
adc
bound
xor
sti
xlat
xchg
add
add
add
or
mov
xchg
int3
insb
mov
je
pop
orl
xchg
jmp
pushf
in
push
test
sub
cs
test
dec
cwtl
pop
sub
cmpsb
mov
ds
idivb
mov
cmp
add
add
mov
mov
addl
dec
add
add
js
sub
inc
mov
fdivrl
xchg
add
jl
sub
dec
mov
gs
sub
ret
or
mov
add
add
add
add
add
jmp
sub
mov
jae
or
add
add
inc
into
test
pop
push
js
or
add
add
in
ja
push
push
xchg
clc
pop
sahf
pop
inc
mov
cld
sbb
pop
ljmp
fidivrs
repnz
call
int3
cmp
je
fwait
pop
jns
loope
sbb
andl
pop
inc
jo
push
mov
call
add
add
stos
adcb
jbe
movsb
outsl
fcoml
shr
rcll
mov
xor
add
add
add
mov
jg
or
sbb
mov
in
es
jl
in
sti
rolb
mov
ja
jle
adc
popf
outsb
test
scas
jg
fdivrl
mov
mov
daa
cwtl
aad
je
sub
mov
sbb
sub
filds
add
cmc
dec
adc
inc
das
test
xchg
imul
imul
mov
cmc
xor
in
fidivl
or
add
add
insl
jnp
mov
int3
mov
add
adc
stos
inc
les
xchg
in
add
add
cmp
repnz
leave
add
mov
xchg
add
mov
lock
scas
and
inc
xchg
sub
push
imul
add
popf
add
add
add
add
add
insl
fcmovb
mov
enter
lea
decb
xor
nop
inc
sub
mov
add
and
sbb
cmp
xchg
movsb
jnp
mov
add
fucom
push
shrb
ja
stos
repnz
jecxz
xlat
pop
jnp
in
pop
and
sbb
dec
add
add
pop
test
jle
shl
jg
jmp
out
sbb
jae
jg
rcrb
and
add
add
pop
fimull
adc
add
testb
int3
mov
lahf
mov
aas
repz
lds
mov
inc
sub
pop
or
mov
mov
push
pop
xchg
std
jno
and
add
add
and
stos
sbb
mov
frstor
add
add
adc
mov
sbb
add
add
xchg
sbb
add
add
add
es
add
add
or
idivb
add
je
hlt
repnz
dec
jnp
add
or
mov
frstor
add
sar
push
push
add
sbb
inc
shl
pop
stos
sahf
xchg
addr16
jmp
pop
fldt
add
inc
fidivl
mov
xchg
mov
mov
mov
push
cld
shrb
mov
rcrb
stos
daa
int3
les
or
add
add
lret
mov
pop
out
push
adc
fcoml
es
dec
mov
or
add
add
lods
mov
add
add
sarb
mov
shll
les
aam
jb
out
add
add
push
cmp
pushf
das
push
sub
add
add
xor
dec
add
add
das
rorb
add
xchg
lahf
sub
add
ljmp
add
xchg
push
pop
and
mov
mov
xchg
mov
hlt
jnp
and
push
add
shl
mov
xchg
sub
imul
cmpb
xchg
jmp
jg
cmp
mov
dec
xchg
ds
sub
or
add
add
cmp
add
mov
scas
xchg
or
xor
rolb
sbb
cs
pop
pusha
mov
xchg
inc
jl
lret
mov
add
add
pop
int
add
add
mov
or
loop
mov
push
dec
ja
dec
sub
jo
sub
add
add
lods
ret
jg
push
fsts
mov
mov
add
add
add
add
add
mov
inc
add
add
add
jecxz
cmp
xor
addr16
shl
lahf
fsubrl
cmp
mov
repnz
lahf
in
pop
mov
xchg
sub
add
add
mov
les
sbb
pop
popa
jecxz
repz
jae
cltd
mov
add
mov
jmp
loop
mov
add
push
sbb
add
add
add
test
loopne
xor
pop
mov
sbb
cli
mov
nop
cmp
mov
pop
stos
test
add
add
add
fidivs
inc
xchg
jne
jno
cli
fiaddl
insl
cwtl
xchg
das
ljmp
push
inc
notl
icebp
fisttpll
mov
and
jg
mov
sahf
mov
aam
aam
fmulp
and
cmc
test
cmpsb
cmc
and
add
mov
xchg
scas
sahf
bnd
loop
clc
sbb
cs
stos
insb
add
add
adc
imul
jbe
add
add
mov
sti
jge
iret
dec
addr16
sbb
mov
add
add
jmp
xchg
adc
adcl
loope
mov
fsts
divb
cmp
aam
testl
imul
add
imul
push
xor
inc
add
add
js
fwait
pavgw
fwait
dec
mov
or
add
add
push
nop
push
std
pop
lds
je
adc
add
add
add
pop
pop
push
jg
cmp
sbb
add
lahf
cmp
sbb
jae
pop
mov
out
pop
imull
mov
push
fwait
std
arpl
es
sub
cltd
sub
add
adc
add
pop
inc
sar
sub
add
add
add
add
xchg
enter
sti
add
ja
mov
jge
test
enter
jl
pop
dec
cwtl
add
stos
sub
xchg
mov
pop
inc
xor
push
jp
mov
add
add
push
push
in
and
mov
add
add
in
or
adc
rclb
shl
fwait
jl
mov
out
xor
cmp
in
jne
jp
dec
ret
and
push
sbb
sub
add
add
mov
lock
add
enter
lea
outsb
jp
scas
movsl
mov
and
xor
lret
xlat
out
jecxz
xorl
add
scas
dec
pushf
fcoml
inc
xlat
xor
nop
pop
sarb
pusha
mov
pop
fbstp
inc
pop
mov
mov
add
add
mov
mov
jle
jle
cmp
mov
ret
push
mov
inc
test
rorb
push
aad
in
add
outsl
pop
pop
adc
dec
jge
fwait
pop
mov
hlt
outsb
stos
jmp
rcrb
test
out
jbe
call
mov
or
add
add
dec
rcll
add
iret
mov
addr16
sub
add
add
add
ds
jp
jecxz
jmp
mov
inc
inc
mov
inc
scas
insl
inc
mov
inc
push
pushf
and
cmp
add
add
cmpsl
cmpsb
add
fistl
pop
sbb
test
fcomp
lahf
repnz
aaa
or
shlb
mov
cmpsl
arpl
mov
inc
aas
add
cmp
mov
inc
fwait
inc
movsb
cmp
add
mov
ds
std
cmp
add
add
or
sbb
daa
xor
daa
test
aam
dec
mov
or
add
add
xor
push
sbb
popa
or
testb
std
jp
in
sub
in
push
push
cmp
ret
inc
or
jl
push
jge
and
shl
insb
mov
out
scas
dec
int
jo
jno
adc
add
and
cs
scas
mov
jle
pop
loopne
push
pop
jecxz
imul
push
std
add
testl
int3
pop
and
add
add
xor
add
sahf
subb
add
push
dec
inc
sbb
add
add
xchg
mov
mov
inc
sbb
and
pop
inc
lea
xor
and
hlt
dec
mov
add
add
arpl
ficomps
xor
xchg
scas
sub
gs
jns
fistpl
bound
fidivrs
mov
in
jno
xor
andb
add
sub
mov
add
mov
dec
mul
fbstp
jg
fwait
in
mov
pop
push
pusha
add
add
es
notb
pop
jg
imul
shr
inc
fidivrl
daa
jg
xlat
dec
and
jne
sbb
cwtl
pop
adc
xor
mov
dec
push
add
hlt
aad
xor
adc
pop
cld
push
lret
test
push
movsl
xchg
jle
fisttps
mov
mov
call
add
add
push
jne
xchg
imul
daa
cld
movsb
mov
insl
fildll
jp
mov
mov
cmp
pop
repz
fidivrl
and
jnp
sub
lret
mov
add
add
mov
xor
movsl
or
mov
outsb
outsb
dec
and
add
add
cmp
add
dec
fnstcw
loope
or
cmp
add
add
enter
out
mov
add
add
xor
cmc
mov
and
xor
add
sub
add
add
mov
fsubs
add
sub
add
add
pop
dec
mov
lret
repz
sbb
or
add
add
jp
pop
jno
loope
hlt
imul
inc
mov
pop
xor
or
sbb
add
xchg
cmpsb
mov
in
push
xor
lea
pop
je
push
cmpsl
cmp
mov
jno
mov
testb
add
add
add
add
push
out
testb
ja
pop
sbb
js
into
mov
imul
add
fdivs
xor
ror
stc
dec
cmp
mov
je
or
xchg
iret
sbb
mov
aas
sbb
pop
cli
jecxz
pop
add
scas
loope
jne
aad
sti
sub
xchg
repz
xchg
cmp
movsl
mov
stos
adc
add
add
xchg
pop
push
cmpsl
flds
in
loop
sbb
add
add
lea
push
jnp
cltd
iret
fadds
cmc
jno
arpl
add
add
pop
inc
pop
and
fwait
xchg
mov
movsb
xchg
dec
add
add
rcl
cmpsb
in
mov
cmp
push
xacquire
loope
rcll
add
add
mov
mov
add
mov
gs
divps
push
test
add
add
add
xorl
lods
inc
mov
jo
in
hlt
aam
fcmovbe
jns
add
add
push
dec
icebp
push
cmp
add
add
arpl
jecxz
or
cmpsb
dec
push
mov
inc
in
lds
aam
imul
add
repz
cmc
xlat
ljmp
ds
sub
xchg
cmp
jo
sbb
jns
aas
cmp
add
add
andb
jbe
js
lock
add
add
neg
xchg
stos
out
inc
nop
add
add
add
xchg
adc
add
cmp
mov
cmp
add
xchg
add
mov
jno
add
adc
popa
sub
jp
fistpll
jl
nop
or
out
mov
loop
negl
and
add
add
add
cld
sbb
add
add
adc
shll
roll
add
add
xchg
mov
and
push
sbb
les
mov
aam
xlat
out
addr16
cmc
cmp
adc
add
add
dec
add
add
inc
mov
or
sarb
and
aam
xlat
mov
mov
mov
push
leave
pop
ror
mov
xchg
xor
sbb
ror
js
je
mov
call
fmull
add
add
push
test
add
jge
cmc
or
add
add
inc
jb
mov
pusha
mov
sub
jne
push
fcomps
addb
jl
ds
add
add
push
outsb
out
aaa
pop
lds
pushf
pop
xor
or
test
cld
add
movsl
into
dec
sbb
repz
addr16
imul
aad
in
inc
xchg
ds
cltd
int
ret
sbb
jnp
gs
insl
in
lock
add
add
adc
inc
jle
fdivrl
fsincos
pop
jns
adc
cli
sarl
xor
sti
popf
mov
pushf
clc
push
add
lea
fdivr
fcoml
gs
sub
push
stos
ficompl
scas
loope
inc
mov
dec
cmpsb
add
xchg
jnp
sub
add
add
jl
push
add
add
add
adc
insl
cmpsl
mov
mov
nop
enter
mov
jb
and
add
add
lods
jmp
jle
popf
mov
add
or
int3
push
jne
cmpsl
xchg
repz
inc
les
add
and
nop
lahf
lahf
cs
pusha
mov
xchg
ficoms
in
add
loopne
add
add
add
imul
jnp
cmpb
add
fwait
sbb
mov
js
leave
dec
inc
mov
jne
daa
lret
adc
daa
push
or
pop
jecxz
dec
xchg
std
rclb
jg
mov
pop
or
mov
call
cmpsl
xor
ret
push
push
add
add
add
add
ss
mov
adc
icebp
jne
stos
mov
loopne
outsl
add
inc
mov
mov
cld
outsl
push
mov
add
jo
movsl
test
mov
pop
pop
push
sub
add
add
add
add
add
add
inc
sub
add
add
xchg
fmull
add
repz
sbb
in
ret
setb
mov
add
and
shlb
xchg
add
mov
outsl
sub
add
add
add
add
in
jbe
mov
cmc
sbb
daa
or
cmp
and
add
add
cltd
dec
add
add
lret
cmp
add
add
test
jns
jg
and
inc
into
cltd
mov
mov
pusha
add
add
jmp
xor
notl
sbb
and
fisubs
push
fists
xor
pusha
add
add
or
pop
push
rcrl
adc
add
add
aaa
adc
pop
push
ljmp
and
add
mov
pop
in
mov
cld
and
add
add
pop
inc
adc
dec
add
add
lock
add
add
pop
sub
add
add
std
enter
mov
pop
pop
mov
mov
xsha1
cmpsb
dec
push
add
popf
cltd
inc
enter
mov
add
movsl
cmpsb
leave
adc
stc
push
mov
adc
jp
sub
sahf
pushf
repz
mov
add
add
mov
xchg
fcompl
cmp
adc
add
ja
lods
push
lds
mov
pop
mov
shll
je
rorb
add
add
xchg
clc
dec
xchg
das
pop
inc
add
add
rclb
add
mov
popa
pop
mov
idivb
out
sub
add
and
or
jae
mov
push
ds
mov
repnz
add
add
add
add
adc
loop
mov
inc
add
add
xchg
and
add
xor
call
aad
push
add
mov
add
in
push
stos
fidivs
mov
cmpsl
mov
jmp
cmp
out
mov
cmc
orl
jp
xchg
add
add
add
adc
movsb
push
into
aaa
mov
xor
mov
shlb
add
cmp
add
add
push
xchg
dec
mov
add
add
repz
dec
mov
add
add
add
add
xchg
icebp
popf
cmp
mov
int
clc
mov
call
punpcklbw
add
add
add
add
aaa
inc
add
add
cmpsb
push
sub
mov
add
add
cmp
add
les
fwait
sub
mov
xchg
cltd
insb
mov
mov
jno
push
ficoml
add
insb
add
add
aam
fistpl
jno
inc
add
add
addr16
sbb
xlat
lret
inc
add
add
sahf
cmpsl
cmpsl
jns
mov
mov
ds
add
xor
je
adc
add
pop
std
adc
cs
scas
mov
negb
cmpsb
and
out
inc
out
sub
cmp
dec
fisubs
mov
sti
push
lods
xchg
fbld
xchg
mov
jnp
sbb
add
add
add
movsb
mov
mov
sub
cmp
data16
mov
std
xchg
jo
mov
pop
xor
add
add
js
adc
jp
cmp
inc
or
add
add
inc
fldenv
test
out
sbb
std
movsl
jecxz
mov
orb
int
and
jbe
cwtl
aas
xor
add
fistl
add
add
mov
rorb
mov
mov
adc
fdivl
imul
out
add
add
add
cmp
cmpsl
sti
push
xchg
mov
movsb
into
push
add
sti
push
mov
cmp
lock
int3
loopne
or
pop
and
xchg
movsl
jb
test
hlt
mov
stos
pop
xchg
sahf
hlt
fwait
nop
mov
inc
or
mov
pop
fstp
mov
jns
or
xlat
lret
test
add
add
mov
add
add
add
dec
nop
mov
imul
aas
mov
hlt
xchg
dec
mov
sbb
mov
jns
inc
fs
es
icebp
jge
adc
rcrb
sbb
pop
xchg
pop
lods
inc
or
inc
add
add
iret
mov
idivl
and
enter
cli
orb
add
mov
push
pop
int3
aam
mov
lea
add
add
add
pop
repz
sub
add
loop
dec
add
add
xchg
imul
icebp
adc
sub
loop
cmp
add
add
add
add
repnz
add
add
add
mov
and
add
add
div
stos
xor
int3
xchg
int3
shl
jnp
mov
clc
hlt
jns
lret
imull
add
add
sarb
test
imul
fst
repz
add
loope
mov
jmp
xor
arpl
cwtl
out
push
mov
add
push
loopne
rclb
cmpsb
in
stos
add
aas
mov
pop
test
pop
ficomps
mov
subl
aam
xor
mov
dec
ds
inc
sub
add
int3
subl
mov
lds
xor
sti
xchg
mov
lcall
add
add
mov
mov
pop
xor
or
jno,pt
cwtl
test
xor
add
add
sti
mov
cwtl
or
push
xor
sbb
add
add
imul
loop
jg
ja
sbb
add
push
xor
leave
mov
fcompl
or
and
add
add
pop
insb
mov
sbb
jecxz
int
dec
mov
fidivl
add
add
add
pushl
sub
outsb
cmp
push
mov
dec
mov
pop
xor
lret
scas
std
insl
xchg
sub
mov
mov
pop
xchg
loopne
pop
dec
add
add
cmpsl
sbb
add
add
jecxz
dec
mov
scas
mov
inc
aam
jle
adc
mov
int
or
add
add
movl
xchg
sbb
shll
add
add
inc
pop
xorb
mov
popf
shll
add
add
loop
and
add
in
and
pop
out
fdiv
cltd
inc
push
scas
adcb
add
xchg
push
inc
mov
aam
pushf
fwait
cmpsl
cmc
jne
es
add
add
push
mov
adcb
in
insb
add
add
loopne
test
add
imul
stos
pushf
push
cmp
mov
rolb
aaa
mov
dec
add
add
push
shll
adc
mull
add
add
mov
test
out
insb
mov
dec
dec
mov
ds
push
jl
adc
pop
or
add
add
mul
pop
in
js
sbb
stc
dec
add
add
jg
pop
loopne
outsl
into
lds
and
mov
sub
add
add
insb
add
add
popa
xchg
sub
and
add
add
add
add
xchg
push
mov
jne
jmp
add
add
pop
jl
jbe
push
xor
es
cmp
add
add
test
and
ss
add
add
add
add
outsb
fsts
add
add
mov
add
aas
sbb
xchg
pop
jb
jno
mov
repnz
aam
add
add
sbb
inc
rorl
mov
mov
push
jp
cltd
xor
stos
sbb
mov
add
add
test
inc
sahf
fisttpll
je
xchg
and
mov
int
jp
in
and
ja
lret
adc
push
adc
inc
add
add
and
sbb
push
mov
pop
mov
dec
push
rolb
push
xor
add
and
les
aad
mov
jo
mov
fcmovbe
and
add
add
lcall
add
add
lods
and
sbb
push
push
jmp
daa
push
dec
ds
aam
call
outsb
pop
in
pop
sub
shrb
lahf
scas
push
fstpt
adc
jb
pushf
cmpsl
punpcklwd
jo
add
add
add
int
call
inc
bound
sub
dec
add
add
js
xor
jl
jecxz
and
mov
push
enter
xor
mov
cs
faddl
xchg
mov
dec
lea
add
add
add
add
cwtl
in
cmp
sub
dec
insb
add
add
leave
push
sub
add
add
cs
es
outsl
xchg
adc
add
add
test
xlat
xor
add
ret
int3
adc
jno
push
ds
dec
repz
out
outsl
fisubrl
pop
push
jecxz
inc
mov
int
xor
fwait
adc
push
ja
sbb
xor
add
jne
mov
out
in
int3
push
popa
pop
pop
out
add
test
xchg
add
add
add
mov
movsl
jns
push
aad
bound
xchg
adc
pop
cmp
shlb
imul
ret
adcl
dec
xor
cmp
sarb
or
add
add
jo
ljmp
add
jg
aam
xchg
adc
add
mov
push
jmp
mov
pushl
cltd
mov
ds
and
add
add
in
inc
push
add
pop
sbb
add
add
popf
add
add
inc
mov
add
test
add
add
add
outsl
xor
ss
pop
sub
add
add
adc
lock
or
scas
jae
xor
mov
int3
pop
sbb
and
mov
adc
pushf
fcomps
dec
rolb
add
add
adc
xchg
leave
adc
mov
push
imul
push
call
dec
fmul
rcrb
gs
test
xchg
dec
js
les
andb
add
aad
fisubrl
je
call
add
add
negl
out
jne
mov
add
add
dec
add
add
pop
mov
out
and
add
add
ret
int3
xchg
push
cmp
imul
sti
dec
mov
mov
mov
sbb
mov
mov
pop
xchg
mov
add
add
int
iret
in
and
pop
loope
sbb
xorb
xchg
pop
popf
cmp
xchg
mov
mov
jge
sahf
movb
add
inc
insb
add
add
int3
sub
add
mov
fnstsw
faddl
lods
pop
hlt
aad
test
mov
sub
add
mov
sbbb
xchg
cmpsl
sbb
xchg
or
add
add
and
add
add
dec
xchg
mov
and
cld
add
jno
pop
icebp
mov
and
sbb
lock
clc
cmp
push
or
or
ss
or
scas
in
sbb
xor
out
aam
jb
mov
add
cmp
rcrb
inc
mov
jmp
cli
or
add
add
push
mov
test
call
cld
pop
pusha
add
add
inc
push
pop
shr
scas
gs
xchg
or
add
add
or
xchg
dec
mov
xchg
or
add
add
and
mov
and
and
sti
popf
int
push
loop
add
add
add
add
add
inc
mov
mov
add
ret
lods
add
add
add
push
cmp
sub
jbe
push
push
jl
in
xchg
loope
push
mov
add
mov
add
add
sbb
push
xchg
fidivrl
inc
lds
mov
ret
test
sub
add
add
insb
add
add
imul
data16
imul
dec
add
add
xchg
cmc
mov
bound
xchg
push
mov
fistl
xorb
mov
data16
mov
sub
sahf
bound
mov
xor
xor
ljmp
mov
adc
mov
pop
sti
lods
test
clc
inc
mov
movsl
roll
mov
or
add
add
add
or
mov
mov
inc
sbb
and
dec
insl
fadds
add
or
add
add
add
jns
dec
and
test
add
add
xor
cmp
frstor
xchg
das
fcoml
xchg
jle
push
popa
push
dec
nop
cli
dec
add
add
sub
andb
add
fidivs
add
add
in
sahf
add
lret
leave
outsl
in
divl
jb
dec
pop
cmpl
xor
mov
push
fnsave
jmp
mov
lods
mov
and
mov
data16
xor
mov
shll
mov
pop
adcb
and
and
add
add
nop
jb
inc
add
add
add
adc
shr
sbb
sub
inc
mov
mov
popa
insb
add
add
xchg
cmpsb
in
inc
or
add
add
add
clc
or
movsb
mov
mov
push
in
xchg
stos
std
add
add
je
add
sub
add
add
inc
int
dec
mov
aas
movsb
dec
cmp
stos
lret
cli
ret
out
gs
pop
or
add
add
pop
mov
cmp
and
jne
js
decl
sbb
scas
test
lods
mov
stos
in
add
add
leave
cmpsb
lds
add
scas
cmp
mov
adc
add
add
mov
add
mov
lea
jns
mov
adc
movsb
movb
add
add
push
dec
int
daa
push
jnp
mov
mov
aam
xchg
fs
test
mov
loope
mov
fnstsw
loopne
fstl
idivb
sub
lcall
cmpsb
inc
add
add
scas
xor
or
add
add
mov
and
push
int3
iret
js
mov
or
add
add
lods
adc
dec
loopne
orb
lcall
inc
mov
jecxz
sub
xchg
scas
dec
call
mov
mov
std
addr16
sub
test
mov
mov
push
das
sub
filds
xsha1
cmpsb
dec
loope
inc
stos
outsb
add
mov
xchg
rorl
loopne
test
lahf
cli
lea
add
dec
mov
mov
imul
cmp
push
ss
scas
mov
add
add
add
mov
insl
ss
or
test
shrb
inc
pop
testl
out
inc
add
add
outsl
hlt
in
ret
push
in
mov
fldenv
push
cmp
jnp
mov
mov
out
xchg
call
push
ljmp
push
dec
add
add
xor
add
add
add
push
in
mov
out
andb
test
rcrl
mov
jecxz
jbe
enter
mov
pushf
push
pop
mov
adc
icebp
mov
in
iret
sahf
jne
push
cmc
jmp
cwtl
sahf
mov
inc
mov
incl
xchg
cs
scas
aas
test
loop
push
shr
fbstp
xor
inc
add
add
into
mov
inc
mov
jbe
fisubrs
dec
mov
mov
add
add
xor
popf
push
push
movsb
mov
add
in
adc
out
add
dec
call
lds
mov
dec
cmp
xchg
movsl
pop
inc
sub
push
jecxz
xor
and
add
add
hlt
mov
clc
xchg
xchg
je
aaa
flds
jno
scas
dec
ror
fdivrs
mov
add
add
add
add
jge
dec
xor
subl
push
push
jl
xchg
cmp
pop
int
dec
sti
sub
aam
sbb
imul
sub
loopne
jae
xor
push
and
add
add
pop
loopne
stos
jp
stos
inc
pop
xchg
mov
xor
repnz
pop
int
or
jmp
inc
xor
push
iret
cmp
arpl
push
fisttpll
mov
jo
addr16
insb
add
add
xchg
mov
cmpsb
test
jno
and
fsubrp
pop
insb
add
add
cli
lcall
imull
add
shrl
mov
cmp
sbb
adc
add
push
adc
and
add
add
mov
stos
and
adc
repz
in
inc
sub
mov
push
push
sub
imull
add
add
or
add
add
call
lods
jge
gs
data16
add
add
mov
mov
mov
pop
jg
clc
mov
stos
push
outsb
fwait
jle
jne
add
add
mov
in
pop
bound
scas
bound
add
ss
les
inc
shrb
shlb
jnp
pop
mov
lret
incl
dec
inc
and
mov
add
add
add
test
call
cmc
lods
sbb
pop
mov
pop
jmp
mov
add
xor
mov
sbb
push
lret
ret
pushw
inc
pop
xor
rol
neg
or
push
push
fisttpl
add
add
xchg
xor
das
clc
cmp
je
jnp
aam
dec
lahf
pop
add
add
add
sub
rcll
fimuls
add
add
ret
push
test
add
leave
popf
lret
addr16
cmp
gs
test
xchg
add
add
addr16
inc
repz
mov
mov
xchg
jae
popf
adc
push
pop
flds
ja
fwait
mov
sub
inc
mov
add
dec
xchg
fwait
aas
dec
cmp
loopne
pop
popf
adc
jae
das
cmpsb
jo
roll
cmp
adc
mov
mov
dec
or
sbb
inc
sbb
jae
push
es
or
jge
xor
and
jae
cltd
cmc
das
repz
shlb
inc
jmp
inc
pop
jmp
add
add
fwait
xor
mov
sti
je
add
add
lds
cltd
ffree
adc
mov
cmp
sbb
je
aad
shlb
and
test
cmp
pop
cld
scas
call
add
cmp
add
sub
add
add
add
add
add
enter
sbb
mov
ljmp
insl
cmp
dec
popl
add
mov
mov
push
adc
add
add
adc
xor
and
push
dec
enter
and
popa
enter
cmp
sbb
add
add
jnp
mov
sbb
pop
and
add
add
dec
inc
add
add
pop
pop
jge
shl
movsl
aas
js
jl
movsb
lods
movsb
inc
jle
int
or
mov
add
mov
notl
decl
add
sub
xor
loopne
pop
add
jae
add
xchg
test
jo
cmc
ret
inc
adc
mov
in
bnd
mov
add
add
fidivrs
cwtl
ror
cmc
add
mov
add
add
add
add
add
add
mov
inc
loopne
cmp
stc
sbb
cs
sbb
lods
sub
add
add
xchg
dec
jb
add
outsb
push
arpl
add
cmp
mov
in
push
imul
ljmp
jbe
popf
xor
out
sbb
dec
mov
jae
movsb
sbb
mov
js
or
cli
add
add
add
xor
mov
adc
add
aas
dec
add
add
jnp
and
aas
outsb
aas
mov
sub
pop
dec
mov
pop
mov
or
pop
jno
xorl
adc
arpl
adc
in
inc
add
add
pop
lret
dec
cmc
icebp
mov
fildll
add
mov
push
lock
xor
sahf
popf
arpl
or
xor
cmp
arpl
call
inc
or
add
add
dec
sbb
cmc
cmp
pop
mov
out
inc
add
add
loopw
adc
int
add
add
add
sub
int3
sbb
idivb
mov
int
pop
mov
add
mov
insl
xchg
add
add
add
test
gs
sbb
mov
adc
das
clc
adc
stc
xor
jp
xor
pop
jp
add
add
loop
insb
mov
fadds
add
lods
je
mov
jae
popa
fcmovb
sub
cmp
sbb
add
add
inc
mov
cltd
int3
into
out
cltd
fisubrl
inc
popa
notb
lcall
gs
mov
sbb
es
ror
pop
call
add
add
aam
bound
add
add
push
lea
add
sbb
mov
sub
popa
mov
push
xchg
xor
scas
cmpsb
imul
add
adc
jle
data16
ret
or
add
add
pop
imul
insl
mov
xorps
xchg
push
aaa
pusha
add
add
push
jl
stos
adc
pop
pop
movsl
mov
pop
dec
xor
add
mov
inc
mov
aam
nop
ficoms
mov
insb
mov
bound
and
out
sbb
in
insb
mov
mov
xchg
cvtpi2ps
mov
sub
add
add
mov
movsl
sahf
aas
aad
mov
pop
sbb
sub
fidivs
xchg
cmp
loopne
sub
push
inc
add
add
xchg
add
add
add
add
add
xor
mov
cmp
stos
cltd
inc
leave
dec
adc
ss
adc
and
add
add
dec
scas
xchg
ja
mov
jmp
std
xchg
imul
mov
adc
inc
adc
add
mov
dec
aam
daa
bound
inc
push
add
jne
mov
pushf
gs
dec
out
jb
lea
xlat
inc
inc
mov
xchg
adc
and
add
cmp
push
push
lahf
iret
sti
mov
sbb
jo
push
jne
add
add
das
dec
add
add
add
shll
add
add
adc
mov
inc
add
add
in
cli
push
faddp
enter
add
add
add
sbb
mov
push
dec
pop
and
add
add
sbbw
lret
out
test
push
and
add
add
pop
in
adc
jl
enter
sub
adc
in
pop
outsb
push
add
js
push
jno
lret
inc
fdivl
mov
mull
add
add
add
add
add
and
movsl
xchg
scas
mov
add
out
popl
nop
pop
icebp
ret
outsl
sahf
shrl
add
mov
les
fmul
jne
lahf
in
push
sub
add
add
or
xchg
push
imul
push
sbbb
inc
out
cmp
scas
lds
cwtl
xor
push
inc
inc
mov
adc
or
add
add
and
add
add
dec
adc
mov
hlt
adc
adc
cmpsl
rcrl
inc
xor
pop
bnd
mov
add
dec
popf
mov
stos
mov
pop
sub
add
or
sbbl
jmp
add
icebp
in
jmp
in
inc
cmpsl
cmpl
sbb
jb
and
add
add
mov
loop
pop
out
mov
sbb
pop
dec
push
pop
xor
add
add
add
add
push
inc
movsb
cli
daa
loope
fprem1
or
aad
mov
push
test
xchg
dec
lcall
or
in
cmc
dec
mov
dec
outsl
inc
inc
andl
in
lock
jmp
jno
xor
pop
mov
inc
sbb
in
ficomps
std
and
add
icebp
outsl
jecxz
push
stos
ret
lahf
xlat
dec
mov
xlat
mov
mov
or
or
incb
js
lds
push
js
dec
mov
outsl
sbb
add
or
sub
add
add
dec
mov
mov
xchg
ret
cmc
or
adc
jmp
mov
push
lods
stos
xlat
push
push
push
mov
push
push
mov
xor
or
add
add
add
add
fildll
pop
jae
jmp
sub
xor
dec
mov
push
mov
negl
pop
adc
sub
pop
out
out
call
add
adc
fs
xchg
leave
cmc
add
out
and
repnz
jl
mov
add
movsl
fildl
add
add
cmpsb
jp
out
pop
or
add
add
jne
push
iret
dec
dec
push
pop
inc
mov
jne,pn
mov
adc
add
add
add
and
add
inc
into
shrb
lret
xchg
mov
outsl
mov
add
add
aad
and
or
add
mov
cli
pmuludq
mov
mov
iret
ds
or
mov
and
add
add
ret
dec
mov
scas
sbb
add
je
push
xchg
dec
lods
push
add
ret
ja
sbb
je
jmp
mov
mov
sub
add
add
mov
data16
xchg
xchg
dec
jb
loopne
je
imul
add
adc
inc
orb
inc
xor
inc
test
add
sub
add
add
adc
bound
xor
mov
ljmp
dec
dec
add
add
add
sbb
stc
pop
and
add
add
cmpsb
add
add
iret
icebp
ljmp
jecxz
inc
mov
out
in
fimull
and
add
add
movsl
gs
and
aaa
adc
push
popf
pop
and
add
add
rclb
cmp
fcoml
xchg
mov
and
and
repz
add
add
cmpsl
mov
test
jmp
mov
xchg
xor
and
add
ret
push
out
xor
fnstcw
arpl
xchg
add
mov
add
add
clc
lcall
jns
inc
mov
mov
jbe
dec
jae
aas
push
inc
mov
stos
icebp
mov
push
jae
out
out
aaa
and
arpl
add
add
mov
add
add
stos
inc
ss
das
xchg
xor
dec
push
test
dec
mov
lret
repnz
mov
add
add
push
jmp
das
inc
add
add
xchg
add
inc
mov
pop
pop
aam
loop
mov
cmp
mov
stc
mul
dec
ja
aad
xchg
or
mov
pop
popf
rsqrtps
or
dec
scas
movsl
inc
aam
std
xchg
adc
cmp
add
add
adc
andl
arpl
jnp
xorl
jp
aad
cld
test
add
aaa
mov
cmp
inc
mov
adc
sarl
in
jg
sbb
aad
dec
ret
adc
add
add
fisttpl
add
add
pop
lahf
push
push
inc
add
add
mov
pop
ret
xchg
in
in
popf
and
add
add
mov
xor
mov
or
cmpsl
shll
cld
sbb
ret
cmpsl
pop
mov
or
nop
pop
lods
pop
sbb
pushf
push
mov
lahf
sbb
or
test
sbb
loop
movsl
pop
aad
sub
mov
mov
stos
push
lods
cmp
movsb
add
in
sbb
add
add
or
mov
addb
rorb
loopne
sub
popa
iret
mov
bound
add
inc
rcr
hlt
sbb
add
add
jge
add
add
sub
add
add
mov
cwtl
adc
add
add
testl
lods
push
daa
inc
or
sub
mov
fistpll
mov
push
int
sbb
dec
std
inc
jbe
cmp
loope
hlt
jmp
lods
adc
add
cld
fsts
fnsave
inc
push
filds
add
dec
push
and
add
add
mov
stc
daa
cmp
lods
mov
or
xchg
inc
pop
inc
push
aam
adc
add
mov
mov
mov
stos
xor
fnstcw
cmp
shrl
fs
mov
add
outsl
and
jnp
fldenv
das
inc
mov
jb
out
mov
mov
mov
ja
data16
aaa
in
ljmpw
nop
pop
sbb
test
popa
jge
mov
pcmpeqb
subb
loopne
mov
loope
xor
stos
lret
inc
es
cmp
icebp
dec
mov
dec
cld
enter
adc
push
xor
loope
push
std
xabort
cmp
outsb
jg
mov
dec
adc
cmp
sub
add
add
nop
popa
outsl
int3
out
and
push
pushf
and
stos
enter
sub
push
add
add
notl
add
push
xor
inc
mov
mov
in
data16
add
add
arpl
cmc
adc
lahf
or
and
jge
adc
add
add
push
adc
adc
add
dec
daa
or
sarb
adc
xchg
pop
imul
aam
incl
repz
shrb
sbb
mov
nop
add
add
daa
fstpt
xchg
call
mov
and
mov
push
lret
xor
mov
add
lods
repnz
add
xchg
mov
add
cld
or
adcl
push
pusha
add
add
sarb
xchg
repnz
loop
mov
xor
imul
push
add
mov
inc
mov
inc
mov
mov
das
rorb
add
add
test
test
scas
shrb
mov
dec
dec
xchg
and
sbb
add
mov
dec
ds
adc
jg
pop
ja
rcr
test
idivb
dec
or
inc
pop
dec
cmp
add
mov
sbb
aad
test
add
or
jecxz
jns
ljmp
sub
add
add
mov
cld
cld
fldcw
mov
pop
push
test
add
add
mov
add
add
mov
je
add
mov
pushf
orb
mov
or
add
testb
push
push
or
xor
movsl
inc
sbb
mov
daa
and
lds
push
xchg
into
or
inc
or
les
in
lcall
xlat
dec
add
je
pushf
mov
cmp
jmp
sbb
dec
mov
cmc
pop
jbe
xlat
and
add
add
mov
pop
adc
fstp
push
jne
mov
pop
pusha
mov
adc
es
push
data16
jmp
pop
icebp
repz
adc
add
js
mov
add
pop
movsl
push
sub
pop
xor
mov
ficoms
pop
gs
dec
mov
push
mov
iret
out
add
sti
outsl
pop
imul
mov
cld
aaa
xor
test
xchg
push
push
jno
pop
in
mov
ficoml
pop
call
add
add
xor
outsl
lcall
add
sub
add
add
and
add
add
aam
push
inc
add
add
shrb
push
inc
add
add
dec
mov
xor
andl
xchg
cmp
add
ljmp
cmc
imul
loop
jbe
outsb
adc
mov
adc
xchg
xchg
addl
rolb
dec
ss
lret
cmp
push
jo
enter
jle
add
add
cmp
js
pop
test
add
add
pop
add
sub
add
add
stos
xchg
jb
inc
add
add
and
mov
mov
cld
or
aaa
add
add
add
jge
cmp
mov
mov
add
sbb
mov
ret
int3
pop
andl
pop
fistpl
jmp
mov
add
xchg
insl
ret
sbb
dec
dec
les
popa
or
rorb
add
add
out
push
pop
sti
cmp
add
lret
repnz
xor
jmp
cld
dec
lea
adc
dec
xchg
cmpsl
lea
add
add
jl
push
rcrl
push
lcall
add
xchg
and
and
push
mov
jno
jecxz
xlat
cmc
stos
movsl
push
push
jmp
add
lock
xchg
push
in
mov
cmpsb
and
scas
xor
pusha
add
add
or
loope
add
add
outsb
clc
or
add
add
inc
xor
sub
bound
add
add
sbb
cltd
int3
call
lcall
and
xchg
gs
insb
add
add
push
mov
and
add
add
jg
js
mov
daa
daa
jmp
mov
out
out
jns
das
pop
or
out
add
pop
jb
out
pop
icebp
mov
pop
enter
cltd
mov
cmp
dec
movsb
cmpsb
inc
sarb
mov
add
add
add
mov
xchg
sub
add
add
add
mov
into
add
dec
call
aad
mov
lahf
addl
add
push
mov
je
inc
stc
push
clc
loop
out
and
mov
pop
dec
add
add
mov
pop
loop
pop
mov
iret
sbb
add
add
add
out
or
mov
sub
add
mov
loope
xor
jmp
mov
or
lret
outsl
inc
mov
or
cli
out
sub
mov
sub
sbb
mov
in
xor
pop
sbb
lret
or
add
add
xchg
pushf
arpl
pop
mov
pop
aad
dec
divb
jp
arpl
add
add
add
mov
insb
mov
decl
movsb
pusha
mov
imul
popa
cs
loopne
mov
dec
nop
dec
add
add
outsb
in
cltd
icebp
sahf
sub
rcl
shll
add
add
add
aas
lcall
cld
ret
aam
movsb
sub
mov
add
aad
insl
scas
cld
inc
inc
or
add
add
add
fidivs
push
adc
add
add
das
ljmp
add
add
insl
dec
roll
add
add
outsb
rorl
add
pop
xchg
ret
inc
add
add
adc
add
add
sti
jmp
mov
into
and
loop
jmp
ja
fucomi
xchg
test
scas
notb
mov
mov
add
mov
add
loopne
adc
in
iret
mov
pop
dec
sahf
jmp
mov
dec
stos
call
inc
sub
jg
xchg
xor
add
add
pop
xchg
call
add
lcall
imul
notb
jae
lret
fcoml
xchg
and
add
add
jge
lods
cs
add
dec
adc
add
add
add
add
sahf
es
in
mov
xchg
mov
jae
lods
adc
into
aas
fistl
dec
add
add
icebp
aas
es
sub
scas
mov
and
xor
insb
add
add
xchg
fwait
repnz
add
add
xor
stos
test
inc
popf
mov
mov
jp
hlt
jmp
mov
cmc
pop
mov
subl
mov
mov
mov
sub
add
add
mov
mov
or
add
add
add
and
add
add
and
add
add
cwtl
add
mov
sahf
pop
mov
add
std
lahf
fwait
adc
pop
push
bound
mov
sbb
js
mov
insb
mov
imul
add
add
add
lcall
add
mov
or
add
add
mov
add
sarb
loop
mov
xchg
loop
mov
sbb
outsl
cmp
add
mov
mov
or
in
cmp
pusha
mov
xor
adcl
add
insl
pop
and
add
les
mov
fnstcw
pushf
push
jb
andl
mov
pop
sub
add
add
mov
aaa
shrl
add
add
loopne
push
int3
mov
repnz
mov
dec
ja
mov
and
mov
mov
pop
les
push
jne
push
ror
lahf
or
add
add
cmp
dec
pop
add
add
add
sub
mov
bound
cmp
xor
or
push
inc
cld
or
insb
add
add
sbb
mov
cld
lds
adc
add
add
add
add
add
dec
pop
movsb
out
movsl
fdivl
xorl
loop
add
add
xchg
sbb
push
sub
inc
add
mov
mov
add
add
leave
rcrb
ljmp
sti
cmc
lea
out
xchg
mov
mov
dec
sub
xor
push
adc
cmp
adc
cmp
imul
mov
add
add
out
push
dec
push
dec
add
pop
sub
xor
scas
adc
add
js
or
sub
add
add
push
scas
push
lock
xchg
loopne
out
push
lods
test
mov
mov
push
dec
lods
xchg
imul
add
add
push
dec
add
add
jl
js
test
jae
mov
jbe
into
filds
sub
push
cmp
xchg
mov
lea
sar
sub
add
add
fnstsw
add
add
addr16
subl
add
mov
ficompl
push
imul
mov
stos
push
or
mov
testb
mov
mov
mov
daa
xor
