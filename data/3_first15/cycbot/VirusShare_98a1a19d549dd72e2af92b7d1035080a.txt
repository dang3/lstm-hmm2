mov
loop
pop
loop
in
jecxz
in
in
in
call
loop
shl
loop
adc
loop
std
loop
in
loop
in
loope
in
call
loop
mov
call
loop
aaa
out
in
jecxz
in
loope
in
loop
in
loope
in
in
in
loop
in
loop
in
loope
in
jmp
loop
adc
loop
out
loop
in
loop
cmpsl
in
in
in
in
in
in
loop
in
out
in
out
in
call
loop
cmpsb
loope
in
loop
in
in
in
jmp
loop
loope
loop
into
loop
in
in
in
out
in
jmp
loop
inc
call
loop
xchg
out
in
out
in
loop
in
jecxz
in
out
in
out
in
call
loop
icebp
loop
in
in
in
call
loop
repz
in
jmp
loop
sbb
loop
mov
loop
in
call
loop
cmc
jecxz
in
out
in
in
in
loop
in
loope
in
loope
in
loope
in
out
in
out
in
out
in
loope
in
in
in
call
loop
or
loop
pusha
out
in
out
in
call
loop
sub
loop
sbb
loop
mul
loop
cmp
in
in
jmp
loop
and
in
in
jmp
loop
popf
jecxz
in
jecxz
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
in
in
loop
in
out
in
out
in
out
in
out
in
loop
in
in
in
out
in
out
in
out
in
jecxz
in
loop
in
out
in
in
in
call
loop
ljmp
in
in
in
out
in
call
loop
xor
loop
jb
loop
add
loop
movsl
call
loop
int
loop
sub
loop
mov
in
in
call
loop
ljmp
in
in
in
out
in
out
in
jmp
loop
in
loop
movsl
out
in
jmp
loop
mov
loop
xchg
out
in
loop
in
jmp
loop
push
out
in
loope
in
in
in
in
in
out
in
jmp
loop
or
loop
stos
loop
in
out
in
loope
in
in
in
call
loop
add
loop
and
loop
cmp
loop
sbb
loop
scas
in
in
in
in
loope
in
call
loop
pop
out
in
loop
in
out
in
out
in
loope
in
loope
in
jecxz
in
jecxz
in
in
in
jecxz
in
out
in
call
loop
cmp
loop
mov
in
in
in
in
jmp
loop
arpl
loop
sbb
loop
call
loop
cmpsl
out
in
out
in
out
in
loope
in
loop
in
out
in
loope
in
in
in
out
in
in
in
in
in
jecxz
in
loop
in
in
in
out
in
jecxz
in
jecxz
in
jmp
loop
xchg
in
in
out
in
jecxz
in
loope
in
out
in
out
in
loop
in
out
in
jecxz
in
jecxz
in
call
loop
jnp
loop
cmp
loop
inc
out
in
loope
in
loop
in
call
loop
lret
in
in
in
in
in
in
in
call
loop
ret
out
in
out
in
loop
in
in
in
call
loop
sub
loop
loop
mov
out
in
call
loop
cmp
loop
in
loope
in
in
in
jecxz
in
jecxz
in
in
in
call
loop
stos
out
in
jecxz
in
loop
in
loop
in
jmp
loop
xchg
jecxz
in
in
in
in
in
jecxz
in
call
loop
je
loop
repnz
in
jmp
loop
mov
loop
xchg
call
loop
and
loop
add
loop
in
jecxz
in
call
loop
push
loop
in
in
in
out
in
call
loop
push
loope
in
jmp
loop
clc
out
in
loop
in
jecxz
in
jecxz
in
out
in
jmp
loop
loop
loop
cmp
loop
xchg
loop
xchg
out
in
in
in
jecxz
in
loope
in
out
in
out
in
out
in
in
in
jmp
loop
cmpsl
in
in
loop
in
loop
in
loop
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
jecxz
in
out
in
call
loop
ret
in
loop
in
out
in
in
in
jecxz
in
in
in
jecxz
in
in
in
call
loop
ret
in
out
in
in
in
call
loop
into
out
in
out
in
jmp
loop
lret
out
in
call
loop
and
in
out
in
in
in
in
in
in
in
in
in
in
in
out
in
jmp
loop
shl
in
call
loop
push
out
in
out
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
in
in
in
in
in
in
in
in
jmp
loop
test
loop
mov
loop
xchg
loop
push
jmp
loop
mov
out
in
out
in
in
in
call
loop
and
loop
push
out
in
call
loop
and
loop
cwtl
loop
in
in
in
out
in
out
in
loop
in
jmp
loop
cld
out
in
jmp
loop
lods
in
in
out
in
out
in
jmp
loop
pop
call
loop
mov
in
in
call
loop
imul
loop
xor
loop
repz
in
in
in
call
loop
mov
loop
fsub
loop
dec
in
in
out
in
loope
in
jecxz
in
out
in
in
in
jecxz
in
in
in
out
in
loope
in
jmp
loop
ds
loop
sub
loop
pop
call
loop
sub
loop
cmpsb
in
in
in
in
jmp
loop
insb
out
in
loop
in
call
loop
push
in
in
in
in
loop
in
call
loop
pop
in
in
in
in
out
in
loope
in
out
in
jecxz
in
loope
in
loop
in
call
loop
int
loop
cmc
loope
in
jecxz
in
loop
in
loop
in
out
in
in
in
out
in
jecxz
in
in
in
loop
in
in
in
loope
in
jecxz
in
out
in
out
in
loop
in
out
in
jecxz
in
in
in
jmp
loop
dec
out
in
loop
in
call
loop
mov
loop
xchg
in
in
jecxz
in
out
in
call
loop
test
loop
mov
in
in
out
in
in
in
in
in
in
in
call
loop
mov
loop
jp
loop
push
in
in
out
in
call
loop
and
loop
fs
in
in
in
in
in
loope
in
loop
in
loop
in
in
in
in
in
out
in
in
in
out
in
out
in
in
in
out
in
out
in
jecxz
in
in
in
loop
in
out
in
jecxz
in
call
loop
mov
loop
xor
loop
mov
in
in
in
in
out
in
in
in
out
in
loope
in
out
in
call
loop
insl
jecxz
in
in
in
out
in
loop
in
in
in
jecxz
in
out
in
call
loop
push
jecxz
in
jmp
loop
and
loop
jnp
loop
pop
out
in
in
in
in
in
jecxz
in
in
in
jecxz
in
call
loop
add
loop
or
loop
inc
jecxz
in
loope
in
call
loop
ljmp
in
out
in
in
in
call
loop
push
jmp
loop
dec
call
loop
inc
jmp
loop
add
loop
or
loop
fsubp
loop
inc
in
in
loop
in
out
in
out
in
out
in
in
in
loop
in
in
in
call
loop
test
loop
in
in
jmp
loop
inc
jmp
loop
mov
loop
in
loop
in
out
in
call
loop
inc
jecxz
in
jecxz
in
call
loop
out
jecxz
in
out
in
jecxz
in
out
in
in
in
in
in
in
in
jmp
loop
xor
loop
je
loop
nop
call
loop
cmp
loop
jbe
loop
jo
loop
pushf
jecxz
in
in
in
out
in
in
in
in
in
loop
in
out
in
out
in
loop
in
in
in
loop
in
in
in
out
in
call
loop
aad
loop
xchg
loop
aaa
jmp
loop
push
in
in
in
in
jecxz
in
out
in
loop
in
in
in
loope
in
out
in
call
loop
and
loop
shl
loop
add
in
in
in
in
in
in
out
in
jmp
loop
pop
in
in
call
loop
and
loop
daa
in
in
out
in
out
in
in
in
out
in
out
in
jecxz
in
call
loop
mov
loop
add
loop
and
call
loop
or
loop
scas
in
in
out
in
call
loop
cli
out
in
out
in
out
in
out
in
loope
in
in
in
call
loop
inc
in
in
in
in
call
loop
daa
out
in
loop
in
in
in
in
in
out
in
in
in
out
in
out
in
out
in
jecxz
in
in
in
in
in
in
in
in
in
in
in
jecxz
in
call
loop
push
out
in
out
in
in
in
jecxz
in
loop
in
call
loop
sub
loop
mov
loop
in
loop
jge
loop
stc
loop
in
out
in
out
in
call
loop
test
in
in
out
in
call
loop
js
loop
jge
loop
jge
loop
ret
in
jecxz
in
loop
in
jmp
loop
call
loop
gs
in
call
loop
mov
loop
in
in
in
loope
in
out
in
out
in
loope
in
out
in
out
in
out
in
jecxz
in
in
in
out
in
out
in
out
in
in
in
jmp
loop
insb
call
loop
enter
and
in
in
in
in
out
in
in
in
loop
in
in
in
call
loop
pop
in
in
out
in
out
in
jecxz
in
loop
in
jecxz
in
out
in
jmp
loop
and
in
out
in
in
in
loop
in
out
in
loop
in
in
in
loope
in
jecxz
in
out
in
loop
in
in
in
loope
in
out
in
jmp
loop
mov
in
in
call
loop
and
loop
out
in
jecxz
in
call
loop
test
out
in
loope
in
in
in
loope
in
out
in
out
in
jecxz
in
call
loop
out
loop
ds
loop
and
in
out
in
loop
in
in
in
out
in
call
loop
imul
loop
repz
in
call
loop
and
loop
call
loop
mov
loop
in
loop
in
jecxz
in
loope
in
in
in
out
in
jecxz
in
jecxz
in
in
in
in
in
loop
in
in
in
loop
in
out
in
in
in
out
in
loope
in
in
in
out
in
loop
in
in
in
out
in
in
in
call
loop
pop
in
in
loop
in
loope
in
call
loop
cli
jecxz
in
loop
in
out
in
loop
in
loop
in
in
in
in
in
in
in
out
in
jecxz
in
out
in
jmp
loop
xchg
jecxz
in
in
in
jmp
loop
in
out
in
jecxz
in
jecxz
in
in
in
loop
in
loop
in
in
in
out
in
jecxz
in
call
loop
aas
loop
in
in
in
jecxz
in
jecxz
in
out
in
loope
in
in
in
call
loop
pop
jecxz
in
call
loop
jmp
loop
push
call
loop
stos
out
in
loop
in
out
in
call
loop
jle
loop
lock
in
jecxz
in
jecxz
in
in
in
in
in
out
in
call
loop
scas
call
loop
shl
loop
aaa
in
in
out
in
in
in
loop
in
jecxz
in
jecxz
in
out
in
loop
in
in
in
call
loop
call
loop
fucom
loop
insl
out
in
jecxz
in
loope
in
in
in
out
in
loop
in
out
in
loop
in
loope
in
out
in
jecxz
in
in
in
out
in
jmp
loop
mov
call
loop
sbb
loop
in
in
loop
in
loop
in
jecxz
in
in
in
jecxz
in
loop
in
loope
in
jmp
loop
pop
jecxz
in
in
in
out
in
in
in
in
in
call
loop
sbb
loop
sub
loop
sbb
loop
out
loop
out
loop
sbb
loop
cltd
in
in
in
in
jecxz
in
out
in
in
in
loop
in
call
loop
dec
jecxz
in
call
loop
dec
jecxz
in
out
in
in
in
in
in
out
in
loop
in
out
in
out
in
in
in
call
loop
addr16
in
jecxz
in
call
loop
dec
out
in
call
loop
push
out
in
in
in
in
in
in
in
jmp
loop
and
loop
call
out
in
in
in
out
in
out
in
loop
in
in
in
out
in
out
in
out
in
out
in
loop
in
loope
in
out
in
jmp
loop
push
in
in
out
in
out
in
in
in
out
in
call
loop
sbb
loop
mov
loop
in
in
in
in
in
call
loop
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
call
loop
dec
in
in
in
in
loop
in
call
loop
outsb
call
loop
jae
loop
pop
out
in
call
loop
mov
loop
add
loop
lcall
in
jmp
loop
inc
in
in
call
loop
loop
loop
push
loop
xlat
loope
in
loope
in
out
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
call
loop
out
loop
mov
loop
out
in
call
loop
popf
out
in
jmp
loop
out
loop
mov
loop
inc
out
in
call
loop
adc
loop
mov
loop
ret
in
out
in
in
in
in
in
out
in
loop
in
call
loop
push
out
in
in
in
out
in
jecxz
in
loop
in
call
loop
pop
out
in
call
loop
sbb
loop
add
jmp
loop
sub
loop
jno
loop
sub
loop
ja
loop
xchg
in
in
call
loop
and
in
loope
in
out
in
out
in
in
in
in
in
in
in
call
loop
jecxz
loop
es
in
out
in
out
in
loop
in
out
in
out
in
loope
in
call
loop
add
in
in
in
in
in
in
loop
in
loop
in
call
loop
imul
in
call
loop
add
loop
xchg
in
in
call
loop
in
loop
out
in
in
jmp
loop
pop
out
in
in
in
in
in
out
in
out
in
out
in
jecxz
in
loop
in
out
in
in
in
jecxz
in
in
in
jecxz
in
loope
in
loop
in
jecxz
in
out
in
call
loop
je
loop
pop
loop
in
out
in
jmp
loop
xchg
in
in
in
in
out
in
call
loop
icebp
in
in
out
in
loop
in
out
in
jecxz
in
out
in
jecxz
in
out
in
loop
in
loop
in
call
loop
loop
in
call
loop
movsb
loop
in
loope
in
call
loop
jne
loop
sbb
loop
arpl
loop
inc
call
loop
mov
loop
in
out
in
loope
in
out
in
loop
in
in
in
out
in
loope
in
out
in
out
in
out
in
in
in
jecxz
in
jecxz
in
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
in
in
loope
in
call
loop
mov
call
loop
mov
loop
xor
loop
xchg
in
in
jecxz
in
jecxz
in
out
in
loop
in
loope
in
loop
in
loop
in
out
in
in
in
loope
in
loop
in
out
in
in
in
in
in
in
in
in
in
out
in
in
in
loop
in
out
in
out
in
loope
in
loop
in
out
in
jmp
loop
or
loop
in
in
in
in
in
loop
in
loope
in
in
in
call
loop
adc
loop
add
loop
frstpm(287
loop
jno
loop
shl
in
in
in
call
loop
iret
loop
in
out
in
in
in
in
in
jecxz
in
jecxz
in
out
in
jmp
loop
in
in
in
in
in
in
in
loope
in
loop
in
loope
in
out
in
call
loop
xor
loop
xor
loop
mov
jmp
loop
in
loop
add
out
in
out
in
in
in
in
in
in
in
jecxz
in
in
in
call
loop
lret
in
in
out
in
out
in
out
in
in
in
jecxz
in
jecxz
in
jmp
loop
xchg
out
in
in
in
in
in
in
in
jmp
loop
test
loop
clc
loop
in
jecxz
in
loope
in
loope
in
loop
in
jecxz
in
in
in
call
loop
pop
loop
in
in
in
jecxz
in
out
in
in
in
call
loop
shl
in
out
in
loop
in
out
in
in
in
loope
in
in
in
out
in
in
in
out
in
jmp
loop
push
jecxz
in
in
in
loope
in
loope
in
in
in
loope
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
out
in
call
loop
aad
loop
ss
loop
jl
loop
lods
call
loop
loopne
loop
xchg
out
in
jecxz
in
in
in
loope
in
out
in
call
loop
inc
loop
in
jecxz
in
loop
in
call
loop
xchg
loop
adc
loop
loop
and
loop
sbb
loop
sub
in
in
loope
in
call
loop
shl
loop
cmp
loop
adc
loop
aas
jecxz
in
loope
in
call
loop
imul
loop
test
in
in
in
in
jecxz
in
out
in
in
in
out
in
call
loop
ret
in
in
out
in
jecxz
in
in
in
jecxz
in
out
in
loop
in
jmp
loop
push
in
in
call
loop
mov
call
loop
jp
loop
add
loop
imul
loop
jmp
loop
push
in
in
out
in
jecxz
in
out
in
jmp
loop
call
in
in
in
in
jecxz
in
jecxz
in
out
in
jecxz
in
jmp
loop
repz
in
loop
in
out
in
in
in
in
in
out
in
in
in
jmp
loop
pop
out
in
in
in
call
loop
or
in
in
in
in
jecxz
in
in
in
call
loop
xor
loop
pop
call
loop
int3
loope
in
out
in
out
in
in
in
out
in
out
in
in
in
loop
in
out
in
in
in
jecxz
in
loope
in
loope
in
in
in
clc
loop
out
fistpl
push
and
xchg
mov
clc
std
inc
add
dec
push
cmp
sarb
das
arpl
add
popa
add
outsb
and
or
mov
add
adc
add
loop
mov
clc
sub
cmp
add
adc
xbegin
js
add
cmp
and
mov
sub
fwait
inc
clc
mov
xor
in
movsb
clc
dec
jb
add
clc
push
add
mov
cs
cltd
mov
stos
push
add
xor
add
add
in
pop
enter
sbb
pop
pushf
pop
mov
jb
add
clc
xchg
cmp
clc
iret
add
add
cmc
jbe
fistpl
pop
clc
cmc
lret
sub
and
adc
add
dec
or
add
clc
xor
dec
cmovns
add
or
jl
cmp
dec
lcall
bound
add
push
add
xor
add
add
test
inc
clc
imul
jo
add
add
out
icebp
iret
xor
add
add
stc
pop
scas
stos
fists
add
clc
push
push
cwtl
mov
aaa
stos
lret
rcl
sar
adc
add
cmp
add
inc
clc
xor
add
add
in
dec
mov
dec
sbb
add
cltd
push
clc
push
add
ret
sbb
scas
cmp
sti
pop
daa
clc
int
int3
fs
aaa
or
clc
ljmp
mov
mov
lahf
out
cmp
incl
add
push
in
sub
lcall
add
mov
add
mov
xor
add
clc
mov
imul
sub
add
mov
imul
dec
nop
imul
dec
outsb
mov
aad
push
repnz
xor
add
clc
push
add
sbb
xchg
inc
add
and
repz
pop
sbb
inc
clc
mov
add
add
add
inc
clc
sub
pop
xchg
pop
popf
jnp
or
add
mov
vsqrtps
add
loop
bound
add
adc
clc
push
add
xor
outsl
cmp
adc
dec
push
mov
clc
xchg
js
clc
xchg
adc
add
mov
xabort
xor
add
add
add
fidivs
add
addr16
add
add
add
and
add
add
clc
pop
mov
jle
clc
inc
clc
leave
stos
popa
add
push
clc
mov
inc
add
dec
jl
jbe
xbegin
std
pop
dec
aam
sti
mov
ds
add
mov
int3
xor
in
pushf
xor
clc
jno
add
add
add
or
cmp
add
cmp
xor
add
add
cmp
dec
inc
clc
push
clc
mov
and
sahf
push
clc
add
add
jp
lret
add
bound
add
clc
insb
jns
xchg
popa
add
or
or
cltd
lock
scas
or
add
neg
mov
mov
cltd
push
add
mov
fisttps
push
add
pop
clc
pop
out
adc
add
push
add
in
repz
clc
mov
push
xchg
sub
dec
daa
clc
loopne
push
rdmsr
add
sub
add
pop
mov
imul
cmp
xlat
add
inc
add
ja
add
jecxz
test
mov
clc
imul
xlat
test
clc
sbb
clc
lods
adc
add
add
clc
aam
insb
dec
push
pop
dec
cmp
ret
clc
daa
clc
cmpsl
clc
cmpsl
clc
sub
das
sarl
sub
loope
inc
add
daa
clc
sub
ja
cmp
cwtl
imul
scas
cmpsb
clc
push
clc
in
dec
dec
sti
loope
mov
add
leave
out
loopne
cltd
in
jle
cmp
pop
scas
cmp
add
xchg
cld
loopne
in
lods
sahf
mov
mov
clc
stos
bound
add
sub
or
add
cwtl
bound
add
add
cmp
dec
mov
sub
and
add
mov
clc
xor
aad
inc
clc
lahf
test
ljmp
cs
add
clc
add
arpl
add
add
mov
add
fstl
add
clc
imul
xlat
xor
add
jge
scas
adc
add
clc
ljmp
or
add
and
add
lahf
dec
adc
add
in
xor
add
pop
lock
sbb
xchg
inc
add
in
popa
add
mov
add
add
es
aaa
jbe
clc
mov
sub
or
add
jp
ds
xchg
and
add
mov
clc
dec
loope,pn
fs
sub
add
xor
add
pop
movsl
clc
dec
ror
das
dec
iret
pop
jne
jnp
add
pushf
aam
sar
int
clc
pop
clc
stc
enter
add
lods
sbb
add
pop
repnz
rolb
test
add
loope
lret
mov
jno
add
in
mov
and
add
add
inc
clc
xchg
lock
ret
xchg
push
add
std
push
push
mov
test
jle
in
scas
add
add
xchg
push
cmp
clc
push
lock
mov
adc
add
test
push
data16
sbb
clc
cmp
xor
add
add
and
add
ret
fnsave
add
adc
clc
lret
cmp
add
and
add
clc
mov
clc
fimull
sub
fcomps
clc
mov
iret
stc
dec
add
jl
and
add
or
and
add
add
mov
frstor
push
add
ficompl
pop
mov
je
xor
add
add
and
add
repnz
js
add
cli
pop
xor
add
lods
adc
add
pop
fsubl
clc
add
or
scas
sar
mov
clc
dec
pop
clc
sub
inc
add
fs
ja
insl
mov
xor
add
clc
jnp
adc
add
ja
mov
aas
sar
and
add
hlt
gs
mov
pop
lahf
ret
clc
out
arpl
add
and
add
pop
jg
add
add
push
inc
add
fsts
add
add
sub
add
lods
iret
inc
add
xchg
cmp
add
jo
add
mov
add
popf
sub
jae
add
add
paddsw
clc
jp
out
xor
add
hlt
mov
clc
flds
clc
push
add
imul
addr16
scas
mov
test
jle
popf
scas
sar
add
ret
clc
in
inc
clc
mov
jp
ss
sub
dec
pop
jb
add
cs
clc
mov
jg
bound
add
movsl
clc
lea
add
fcomi
nopl
clc
jge
add
stos
movsl
clc
cld
inc
clc
sar
mov
add
repnz
add
iret
cmp
clc
or
clc
outsl
in
repz
outsl
xor
add
cmp
cmc
fbld
mov
add
lea
inc
clc
jg
dec
cmp
std
sar
mov
add
cwtl
insl
push
push
add
or
pop
and
add
jl
clc
sub
push
add
arpl
add
clc
sbb
add
test
push
in
xlat
incl
add
clc
scas
stos
js
push
lock
mov
pop
clc
data16
xchg
sbb
pop
clc
add
add
clc
add
add
clc
jnp,pt
push
add
push
add
loop
xlat
jecxz
xor
add
adc
xchg
mov
jne
clc
stos
jo
add
shlb
scas
fsubs
lcall
fcomps
inc
add
test
push
mov
imul
dec
sar
int3
cmp
push
lahf
lods
or
adc
add
mov
add
dec
out
dec
popa
add
xbegin
mov
cmp
clc
add
add
add
add
pop
daa
clc
pop
mov
dec
vsubps
push
mov
fnstcw
mov
push
jecxz
out
xlat
in
sbb
add
add
add
push
jns
clc
and
outsl
sub
add
lock
imul
cmp
push
cmpsl
clc
mov
push
add
mov
add
sbb
mov
xor
add
clc
xlat
cli
pop
jge
add
mov
mov
add
clc
pusha
add
dec
cmpsb
clc
and
add
mov
sub
jae
add
push
add
jg
clc
sub
clc
out
mov
inc
add
movsb
clc
jge
mov
clc
cmp
pop
xchg
xor
out
add
add
jno
add
clc
push
clc
mov
add
cs
adc
inc
clc
dec
xchg
sti
xor
add
filds
push
scas
pop
or
add
clc
stc
out
push
cltd
mov
and
add
push
fsub
clc
lcall
sub
into
sti
stc
aaa
mov
clc
mov
clc
mov
mov
add
cmpsl
clc
mov
add
mov
lock
std
sub
clc
insb
mov
ss
clc
insb
add
add
ficompl
mov
outsb
cmp
sub
rorb
outsl
pushl
fcoms
fcmovu
psubq
add
fsubs
add
add
xchg
mov
mov
hlt
imul
mov
clc
addr16
mov
mov
push
clc
insb
ljmp
ljmp
bound
add
fisubs
add
iret
loopne
xchg
pop
clc
xor
add
arpl
add
clc
pop
mov
add
into
stos
cmpsl
clc
inc
clc
mov
add
push
mulb
add
movsb
clc
push
add
sti
test
mov
pop
mov
fwait
in
jbe
arpl
add
in
push
sti
cmp
clc
sbb
mov
add
add
add
clc
iret
movsb
clc
std
mov
clc
test
pop
adc
add
or
clc
adc
add
arpl
add
pop
mov
lods
xchg
fcmovbe
xchg
fstpt
jns
add
or
add
jno
add
xchg
push
add
or
stos
aad
ror
xor
add
add
cmp
clc
xchg
mov
rorb
clc
cmp
ficomps
push
add
inc
add
sbb
cmpsl
clc
imulb
xor
sar
pop
jmp
add
leave
fldenv
mov
adc
add
clc
xchg
roll
add
adc
add
clc
scas
cmp
add
addr16
add
add
pop
clc
arpl
add
xor
add
add
sahf
push
add
sub
pop
inc
add
push
clc
xor
add
rcrb
add
pop
cmp
and
sahf
fs
ret
cs
clc
dec
pop
mov
inc
clc
sbb
clc
mov
cltd
inc
clc
loope
idivl
dec
adc
add
clc
push
jp
add
adc
pushf
mov
int3
xor
add
loope
fistpll
test
mov
aad
clc
xchg
addr16
lods
hlt
or
mov
fisubl
add
add
add
xchg
imul
mov
add
and
jl
rcrl
add
sub
inc
add
pop
mov
outsb
mov
loopne
jae
add
add
pop
push
loop
mov
clc
push
jl
dec
mov
dec
inc
add
psrld
push
pusha
add
mov
ret
inc
add
in
stos
out
mov
clc
cmp
test
xchg
roll
add
add
xor
add
clc
mov
ljmp
insl
push
add
dec
inc
add
or
mov
pushf
arpl
add
and
jb
add
pusha
add
test
sti
lods
add
add
mov
adc
clc
cmp
mov
mov
add
mov
sub
sbb
xabort
fdivrs
add
add
add
add
xor
std
test
fdivrp
push
loopne
sar
mov
pop
out
into
or
test
pop
pop
popf
push
clc
pusha
add
lea
add
add
loop
addr16
push
clc
mov
cmp
jns
add
test
cmp
out
bound
add
jp
mov
stc
mov
clc
sar
clc
ss
sub
pushf
mov
sbb
aam
sub
ss
add
clc
sar
test
adc
add
fstl
or
add
aas
movsl
clc
jecxz
mov
or
clc
inc
add
ds
sub
add
mov
test
push
imul
scas
jne
inc
clc
imul
add
add
out
sbb
clc
shlb
cmp
aam
call
add
and
add
sbb
add
popa
add
js
sub
add
add
add
clc
dec
sbb
clc
mov
push
inc
add
ja
jno
push
push
pop
push
push
push
or
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
call
inc
clc
shlb
inc
add
xbegin
out
pushl
add
pop
cwtl
movsb
clc
mov
add
add
clc
pop
sar
imul
add
add
add
add
cmp
notl
lahf
lea
mov
add
aas
sub
lahf
loopne
das
xor
fdiv
addr16
cmpxchg
add
mov
sub
roll
clc
sbb
xchg
movsb
clc
add
add
loop
mov
clc
je
add
add
add
arpl
add
sub
sbb
jmp
clc
sub
add
xor
add
sub
sbb
clc
fsubs
clc
cmp
aam
clc
gs
inc
clc
outsb
mov
clc
clc
mov
lcall
jl
clc
mov
add
sub
add
add
cltd
imul
add
mov
add
fistpll
clc
daa
clc
fisubrl
std
aas
enter
cltd
push
loop
leave
xor
cmp
add
fs
xbegin
xor
add
out
dec
cmp
clc
arpl
add
or
fwait
popa
add
mov
leave
adc
add
add
leave
call
movsb
clc
repz
add
sub
clc
add
add
push
add
jno
add
inc
add
out
outsb
daa
clc
sti
clc
fwait
lods
lods
outsl
xor
add
loop
pop
divl
pop
mov
jecxz
mov
add
clc
outsl
dec
dec
dec
inc
add
notb
das
and
add
add
xor
add
dec
ret
clc
sbb
clc
dec
inc
clc
aad
sbb
dec
jg
inc
add
mov
pushf
xchg
sbb
add
fimull
loopne
int
xor
add
add
scas
arpl
add
insl
mov
loope
push
jnp
dec
stos
movsb
clc
jmp
adc
add
clc
jl
clc
xor
add
and
add
jnp
pop
pop
cmp
add
add
cmp
add
jmp
outsb
std
or
mov
shll
add
jp
cmp
inc
add
inc
clc
xbegin
jae
add
jne
clc
cmp
ja
clc
shr
loope
jns
call
mov
add
mov
add
jns
test
mov
add
cmp
mov
in
and
add
mov
jnp
push
icebp
out
idivb
outsl
cs
jae
add
or
mov
pushf
es
clc
inc
clc
popa
add
cmp
clc
xchg
mov
clc
jmp
add
in
shll
fcmovnb
clc
fidivl
add
mov
add
imul
loopne
out
cmp
push
leave
arpl
add
add
add
test
push
mov
clc
pop
clc
jp
mov
data16
sar
clc
pop
and
outsb
add
add
mov
arpl
add
mov
lods
shlb
clc
aas
and
add
add
fiaddl
aad
sbb
mov
add
pop
pop
cltd
sub
clc
sar
pushf
cmp
loop
inc
add
sbb
add
mov
scas
pop
es
push
add
sub
add
insl
mov
add
fbld
add
dec
bound
add
clc
and
add
clc
lods
int3
dec
xor
add
clc
pop
xabort
add
imulb
cs
add
loopne
in
clc
test
add
xchg
hlt
jl
add
lret
in
shl
mov
cltd
cmp
clc
xor
add
scas
fwait
push
gs
mov
clc
daa
clc
fistps
add
fs
lret
aas
data16
aam
ficompl
into
mov
sub
or
lock
add
dec
das
and
add
cmp
clc
fcoml
add
clc
loopne
xor
add
jl
add
add
jg
sbb
and
add
frstor
add
fidivrl
sbb
es
scas
pop
push
data16
rcll
add
mov
xchg
cmp
data16
adc
add
bound
add
outsl
inc
clc
dec
flds
add
fdivrl
clc
sbb
clc
outsb
mov
xchg
push
add
push
add
insl
cmp
push
mov
mov
adc
clc
xlat
cmp
test
add
fmull
add
add
rdtsc
add
bound
add
std
cmp
mov
scas
pop
pop
clc
repnz
outsl
pop
cmp
clc
xbegin
add
push
add
lahf
mov
add
add
and
add
add
mov
push
aam
add
add
cld
and
add
and
add
sub
add
and
add
jl
imul
dec
xor
add
mov
add
dec
and
sar
clc
push
into
inc
clc
scas
rol
clc
adc
call
add
add
aam
add
rolb
sahf
and
add
add
out
sbb
push
add
mov
or
cmp
fnstenv
mov
fiadds
addr16
xor
add
dec
jo
add
mov
add
inc
clc
js
push
add
insb
pop
dec
in
pop
test
and
add
clc
fidivs
add
imul
insl
das
aaa
sub
bound
add
jecxz
dec
xchg
xchg
xchg
mov
xchg
insl
ja
imul
cmp
xor
add
inc
add
lret
out
cmp
add
cltd
jle
xabort
jle
in
cmp
clc
ss
clc
inc
add
ds
jae
add
add
push
jnp
ret
clc
ljmp
icebp
xlat
dec
imulb
add
mov
popa
add
nop
testb
js
push
add
and
cwtl
xor
add
enter
loopne
xor
add
mov
fs
dec
fwait
nop
popa
add
mov
mov
cs
xbegin
out
sub
clc
shlb
pop
testl
and
add
clc
xchg
jle
clc
mov
ljmp
mov
in
insb
movsb
clc
push
xor
add
daa
clc
cmpsb
clc
dec
fsubs
add
clc
push
jg
inc
add
js
mov
or
cmp
scas
pop
dec
fmuls
clc
into
cs
xchg
pop
push
in
ret
clc
fsts
add
sbb
adc
addr16
lret
or
jns
xor
outsl
push
mov
mov
pop
and
add
outsb
cmp
add
add
dec
pop
lahf
fldenv
mov
clc
iret
mov
add
pop
sbb
movsl
clc
movsl
clc
not
and
add
add
clc
cmp
add
xlat
xchg
jo
add
xchg
stos
sar
add
jmp
or
in
cmp
clc
sub
clc
mov
clc
jle
cmc
or
cs
cmp
ret
clc
in
jb
add
bound
add
clc
ss
clc
push
add
movsl
clc
lret
add
shl
sti
pop
icebp
sti
push
scas
cltd
push
out
nop
add
add
clc
hlt
pop
jb
add
add
mov
pop
lods
adc
add
cli
popf
mov
fcmovne
sar
stc
in
xchg
mov
add
sbb
fs
mov
scas
in
aam
clc
enter
add
push
add
cmp
add
adc
add
mov
inc
clc
pop
clc
int
inc
clc
xabort
add
xor
scas
sbb
add
es
jecxz
push
icebp
enter
add
stos
dec
jecxz
and
add
xchg
js
add
clc
js
sub
add
mov
mov
add
hlt
mov
ljmp
clc
lret
call
clc
pop
dec
pop
outsl
out
sar
clc
jg
sar
clc
xor
add
pop
aam
adc
add
std
pop
mov
lock
push
add
push
add
inc
clc
fimull
fwait
outsl
stos
lret
jl
clc
xchg
in
pop
jnp
add
inc
clc
cwtl
push
clc
outsl
pop
dec
gs
ljmp
or
pop
fs
mov
lahf
jmp
sar
add
repz
mov
jne
clc
das
jo
add
jmp
push
jo
add
inc
clc
aad
adc
add
or
adc
add
mov
clc
mov
add
push
add
scas
call
adc
add
mov
clc
mov
clc
inc
add
dec
hlt
mov
mov
add
addr16
loop
pushf
xchg
outsb
pop
jbe
out
lea
add
clc
pushf
jnp,pt
stos
sbb
sbb
mov
clc
sar
popf
cmp
pushf
mov
sub
test
clc
xabort
cmp
add
adc
clc
jae
add
lock
cltd
lret
xchg
jne,pn
jg
clc
mov
sub
add
vmovlps
add
dec
sub
sub
gs
movsb
clc
push
lcall
jmp
push
ljmp
xor
ja
push
add
push
test
jae
add
cmp
cmp
or
bound
add
jp
inc
add
pop
insl
ss
insb
dec
and
add
clc
mov
inc
clc
js
sahf
std
sbb
clc
es
push
add
ffree
clc
jl
jmp
push
xchg
fcoms
add
enter
add
add
or
cmpsl
clc
add
add
xchg
pop
bound
add
add
dec
mov
fs
and
add
mov
popf
sub
clc
dec
in
enter
pop
shl
clc
aas
xor
add
add
dec
js
in
dec
out
inc
add
fwait
and
outsb
xchg
mov
jnp
clc
ret
adc
add
clc
cmp
sbb
add
and
add
add
bound
add
mov
add
gs
add
add
andnps
xor
pop
sub
mov
add
xlat
mov
mov
clc
xabort
es
xchg
sbb
add
xor
add
xor
add
mov
clc
xor
add
sar
ds
sub
sub
xchg
pop
pop
es
jecxz
stos
jne
jbe
ret
clc
xchg
mov
clc
ret
clc
dec
inc
clc
inc
add
test
test
add
inc
clc
adc
add
es
mov
mov
data16
xor
add
mov
data16
popa
add
cs
dec
rclb
add
mov
ficoms
sbb
add
mov
clc
sti
mov
clc
add
sbb
add
ret
add
sub
add
clc
in
movsl
clc
arpl
add
clc
pop
hlt
pop
fsubrl
clc
jl
push
add
stos
dec
or
add
mov
add
add
aaa
lods
data16
leave
pop
dec
adc
mov
movsl
clc
mov
pushf
sbb
add
mov
add
or
add
sbb
mov
add
jnp
add
add
clc
stc
or
mov
add
add
add
test
cli
das
dec
into
or
out
loopne
jae
add
mov
add
aad
fisttps
pop
add
add
jg
clc
jnp
stos
mov
iret
mov
cmp
pop
mov
clc
jg
int
clc
adc
add
clc
iret
outsl
push
stc
cmp
add
lahf
xchg
or
xchg
cmp
mov
add
add
clc
scas
xabort
add
adc
add
sub
xor
add
add
clc
in
pop
pop
fildl
lret
clc
push
add
movsb
clc
xabort
push
clc
xabort
xor
add
push
data16
negb
cmp
nop
aaa
inc
clc
dec
fs
mov
dec
push
mov
data16
mov
in
push
test
push
movsl
clc
xbegin
clc
mov
jns
ljmp
add
sarl
mov
push
fdivrl
clc
aaa
cs
je
shll
outsl
jnp
mov
je
add
push
add
nop
repz
add
cmp
clc
cmp
jge
adc
add
mov
popa
add
mov
fstpt
mov
arpl
add
add
add
mov
dec
cmp
das
sbb
jne
daa
clc
lock
sub
sbb
xchg
lcall
push
cmp
clc
fld
clc
hlt
sub
repnz
add
icebp
jp
iret
and
add
in
ljmp
sarb
ret
imul
cmp
je
clc
pop
xor
add
sbb
bound
add
add
pop
scas
inc
add
pop
push
add
xbegin
jne
add
add
add
add
aam
cltd
add
out
xbegin
add
and
add
add
add
inc
add
mov
inc
add
movsb
clc
xor
add
push
addr16
cmp
nop
ds
lods
in
mov
push
add
ss
cmc
cmp
test
add
add
inc
clc
lock
int
mov
add
out
xbegin
clc
jbe
adc
clc
push
pop
jb
add
add
inc
add
or
rol
clc
push
inc
add
adc
add
das
movups
add
clc
jo
add
clc
aas
imul
add
neg
dec
int3
mov
xor
add
xchg
fdivrl
ss
adc
add
out
cltd
or
mov
xor
add
sub
pop
xor
add
stc
stos
addr16
mov
push
mov
add
mov
adc
add
cld
sti
sar
add
loop
sti
push
add
mov
add
mov
imul
add
add
add
pop
mov
ret
clc
cmpsl
clc
arpl
add
add
pop
cmp
clc
jns
cmpsl
clc
das
cmp
into
add
pop
pop
jecxz
ret
clc
and
je
jecxz
scas
jno
add
cwtl
cmpsl
clc
xor
push
mov
push
jge
add
push
or
mov
mov
mov
or
clc
fs
mov
mov
and
add
xchg
mov
add
icebp
inc
clc
popf
lahf
sub
inc
clc
out
lcall
inc
clc
mov
push
icebp
cmp
inc
clc
clc
dec
fcmovu
add
add
mov
xchg
pop
xlat
sbb
cli
pop
cmp
add
pusha
add
out
pushf
push
clc
fcomps
clc
iret
pop
lret
xchg
jg
clc
jecxz
sar
ja
clc
adc
js
out
out
lods
pop
xchg
adc
dec
sub
inc
add
lret
in
inc
clc
lahf
cmp
nop
inc
clc
inc
add
mov
mov
clc
iret
fwait
clc
cli
aas
daa
clc
mov
push
add
pop
cmp
add
xchg
daa
clc
stc
pop
push
cmp
sbb
add
sub
clc
xor
in
mov
lahf
aam
add
repnz
ret
clc
lcall
scas
mov
clc
test
push
add
call
test
jmp
cli
xchg
stos
fs
push
sub
add
xchg
loope
ficoms
xbegin
je
aam
clc
fcomi
mov
clc
inc
add
adc
add
clc
jnp
adc
out
movsb
clc
dec
fcmovne
mov
loop
hlt
sbb
test
in
cmp
clc
dec
lods
ds
loopne
mov
add
inc
clc
cmp
clc
into
loopne
sti
add
add
xchg
push
stos
and
add
mov
inc
clc
cmp
lods
fisubs
add
out
pop
enter
add
clc
dec
cs
sar
into
int3
sub
imul
jg
lret
scas
fwait
mov
clc
data16
mov
clc
add
or
clc
fiadds
enter
or
add
mov
mov
mov
iret
push
fstpl
mov
push
fidivrl
and
add
jle
add
icebp
sar
into
add
push
add
lock
or
add
js
add
and
add
pop
adc
add
add
inc
add
jge
clc
mov
add
dec
add
add
mov
push
in
mov
mov
ss
sbb
add
clc
pop
inc
clc
pop
into
sub
push
inc
add
inc
add
inc
clc
sbb
inc
clc
cmp
hlt
add
or
out
fucomp
sahf
inc
clc
clc
rorl
out
mov
clc
push
inc
add
cmc
sahf
push
imul
clc
dec
jnp
jl
ljmp
add
xbegin
add
dec
or
or
addr16
mov
pop
movsl
clc
jp
pop
pop
clc
fisttpl
mov
lock
or
clc
sar
ss
mov
out
sub
sbb
sub
adc
add
push
add
fs
out
iret
jecxz
cltd
shll
add
mov
clc
push
int
movsb
clc
lea
clc
jl
clc
or
jne
fimull
sub
cltd
mov
add
clc
jbe
add
insl
or
clc
addr16
or
clc
cmpsb
clc
cmp
push
push
adc
add
in
xchg
aad
clc
or
out
mov
imul
shr
ffree
clc
dec
pop
pmaxub
jno
add
mov
clc
inc
clc
jmp
push
add
push
pop
push
add
mov
cmp
clc
dec
push
int3
cli
std
lcall
add
jg
add
add
ret
clc
dec
xor
add
add
sbb
cld
push
add
stos
mov
gs
pushf
cmp
clc
sub
push
ljmp
clc
inc
add
mov
clc
jl
movsb
clc
movsb
clc
test
push
clc
mov
add
and
add
clc
cmp
jmp
add
stc
sbb
sbb
xbegin
cmp
icebp
adc
add
repz
clc
fs
push
clc
cmp
pop
test
and
add
add
mov
call
inc
clc
iret
add
ret
iret
sub
push
insl
fs
ret
clc
aad
test
and
add
adc
jo
add
xor
add
and
mov
mov
or
clc
push
dec
inc
clc
dec
in
sub
add
hlt
inc
clc
mov
and
dec
push
add
lock
push
add
fdivrl
sbb
fidivl
adc
add
cmpsb
clc
leave
jmp
clc
std
adc
add
clc
fwait
mov
xchg
int3
je
mov
push
add
jb
add
jnp
sub
clc
xor
add
add
add
jp
add
add
clc
mov
add
add
pop
inc
clc
or
pusha
add
pushf
call
add
mov
clc
call
push
add
out
mov
clc
dec
nop
inc
clc
ret
clc
adc
add
fidivrs
xor
add
pushf
xor
add
in
pusha
add
mov
data16
movsb
clc
fs
xchg
xchg
sbb
clc
jo
add
clc
popa
add
cmp
jl
clc
xchg
jb
add
push
stos
xabort
dec
clc
sbb
enter
pop
clc
adc
add
mov
clc
bound
add
add
jnp
fisubrl
sar
mov
stc
sbb
xchg
imul
out
int
and
add
jecxz
cmpsl
clc
push
add
leave
pushf
sub
mov
aad
add
fnsave
clc
in
dec
add
add
adc
add
faddl
aam
repz
icebp
mov
jb
add
add
clc
call
sbb
sar
insl
sar
clc
xlat
lret
scas
fcmovbe
jns
popa
add
inc
add
mov
rcrl
adc
add
insb
addr16
sbb
negl
js
jge
js
scas
add
add
sub
inc
add
cmp
dec
lret
insb
push
jmp
add
add
mov
cmpsl
clc
inc
add
and
add
inc
clc
sbb
add
cmp
jp
add
inc
add
dec
bound
add
adc
add
out
cli
int
mov
push
add
push
add
xchg
dec
bound
add
clc
cmpsl
clc
adc
add
adc
add
and
add
inc
add
mov
add
outsl
sahf
xor
repz
jo
add
clc
data16
jnp
sub
mov
push
xchg
data16
cwtl
cmp
addr16
je
push
clc
sbb
inc
clc
ds
xchg
popa
add
shrl
test
adc
sub
insb
and
fwait
test
xchg
jno
add
aad
pop
xor
add
out
cltd
inc
add
incb
add
add
bound
add
repnz
clc
mov
clc
scas
bound
add
clc
ljmp
pop
clc
jp
clc
mov
dec
arpl
add
clc
repnz
clc
sbb
add
or
insb
mov
add
enter
xchg
rorb
mov
add
inc
add
cmc
into
fs
fwait
and
add
add
jbe
clc
xabort
push
dec
idivl
dec
incl
add
xlat
xchg
enter
xchg
xchg
cmp
clc
data16
out
push
add
inc
clc
jmp
mov
repz
sub
mov
dec
sub
push
add
sub
push
out
insb
rolb
add
add
lahf
sarb
clc
xchg
jle
cld
lcall
cld
data16
inc
clc
push
gs
loop
cli
xor
add
sub
fmulp
add
test
sbb
xabort
add
inc
clc
cmpsb
clc
mov
popa
add
enter
fstl
add
ficompl
mov
pop
push
push
add
lea
clc
mov
inc
add
fildl
clc
sub
cmpsl
clc
mov
jle
cmp
add
add
clc
mov
add
clc
dec
and
add
clc
xor
lahf
cmp
add
sar
js
add
lock
xsave
pop
pushf
ss
dec
jo
add
clc
dec
and
icebp
push
add
sbb
clc
adc
add
rorl
inc
clc
inc
add
jp
and
clc
jae
add
in
and
imul
add
jp
adc
clc
mov
push
add
jecxz
rcrl
push
add
mov
add
add
clc
data16
push
xbegin
push
clc
mov
mov
add
lea
arpl
add
movsb
clc
aas
sub
sub
icebp
or
push
add
imul
clc
adc
add
push
mov
mov
clc
addr16
jp
push
iret
frstor
jmp
je
add
stos
or
add
pop
pop
out
or
and
add
add
outsl
or
clc
pusha
add
repz
clc
add
and
add
lea
clc
jmp
clc
test
xchg
in
jge
push
mov
jno
add
add
mov
add
cli
xchg
lcall
xor
add
add
cmc
fwait
je
dec
mov
ffreep
clc
call
xor
add
add
add
daa
clc
cli
shll
add
or
inc
clc
scas
xlat
xor
add
nop
std
xchg
add
in
sub
add
inc
add
xor
add
clc
es
mov
mov
clc
pop
sub
xor
add
add
cld
insl
incl
add
arpl
add
inc
add
xchg
popa
add
fwait
or
fldt
push
jo
add
sub
mov
add
add
add
mov
std
adc
add
cmp
or
xor
add
test
outsl
inc
clc
in
scas
or
clc
mov
mov
cmp
pushf
lea
inc
clc
test
aaa
adc
sub
clc
gs
cmpsl
clc
sbb
insb
xor
add
leave
sahf
pop
jge
add
cmp
movsb
clc
in
adc
clc
mov
xor
add
mov
int
clc
cmp
add
lcall
or
add
lea
add
mov
add
push
add
ljmp
jo
add
aam
add
mov
test
nop
rclb
add
test
clc
fcmovne
js
mov
add
leave
or
clc
inc
clc
sti
mov
and
add
aas
popf
clc
clc
popf
cmp
fs
jae
add
fldt
jbe
clc
mov
adc
add
cmp
pop
or
add
imul
mov
push
adc
add
jg
or
add
fwait
mov
call
add
int
dec
and
add
push
add
jge
jnp
mov
add
loopne
sar
aad
clc
mov
fstl
add
dec
pusha
add
lcall
mov
adc
add
add
clc
sub
clc
dec
cmp
lock
pop
xor
add
in
push
add
es
sub
add
into
pop
call
inc
add
jl
clc
add
add
and
add
add
clc
add
xbegin
scas
out
rorl
inc
add
mov
or
lock
scas
ja
add
loope
push
add
pop
mov
add
dec
add
add
sti
cmp
outsb
bound
add
clc
jp
inc
clc
pop
jp
clc
dec
por
add
cmp
out
ljmp
clc
enter
mov
push
sar
in
xchg
es
daa
clc
stc
adc
add
clc
ds
cli
pop
std
xchg
in
mov
roll
add
add
add
pop
mov
jo
add
movsl
clc
lods
popa
add
repnz
dec
pop
cmc
scas
imul
dec
adc
fstpt
nop
and
add
add
out
or
xchg
push
adc
clc
ret
clc
adc
add
sbb
js
out
cmc
sbb
add
dec
fistpll
mov
fidivrl
cltd
jle
in
sti
cmp
test
imul
jl
aas
push
add
mov
clc
inc
clc
cmp
xlat
sbb
add
push
jne
xchg
mov
outsl
pusha
add
jmp
clc
sti
iret
cmp
imul
clc
push
cmp
clc
scas
lods
daa
clc
scas
inc
clc
pushf
xchg
xbegin
clc
dec
outsl
stos
xchg
dec
ficomps
push
add
mov
scas
sub
and
clc
js
add
movsb
clc
sbb
dec
mull
add
clc
sub
clc
inc
clc
loopne
jne
mov
lock
add
pop
icebp
pusha
add
and
mov
add
mov
add
incb
es
add
add
clc
pop
jno
add
mov
das
pop
sub
daa
clc
pop
xchg
clc
cmp
push
clc
xchg
sar
sbb
push
pop
clc
cmc
jne
pop
dec
out
jns
push
or
enter
clc
int3
push
add
mov
adc
jnp
or
add
mov
sub
jg
inc
add
cs
in
ds
add
clc
pop
inc
clc
jmp
clc
das
push
cmp
insl
test
jbe
test
mov
mov
push
and
add
mov
clc
mov
add
stos
cmpsb
clc
cwtl
cmp
adc
add
ljmp
or
iret
in
and
add
jnp
cmp
sahf
mov
clc
test
imul
add
stos
inc
add
pcmpgtd
pop
push
out
mov
mov
add
jg
add
fildll
lret
jmp
add
int
ss
aam
mov
cmp
add
or
mov
iret
jge
ret
clc
sahf
outsl
add
add
mov
std
clc
cmp
add
cmpsl
clc
out
adc
pop
js
imul
clc
test
jns
clc
loope
jns
pop
inc
clc
sbb
sbb
clc
in
and
add
jp
sub
mov
fucomp
xor
add
inc
add
stos
add
pop
xbegin
lcall
add
dec
out
repz
imul
sar
or
add
or
into
lcall
pop
pop
out
shll
leave
adc
add
inc
clc
fiadds
clc
xchg
dec
push
imul
add
cmp
loope
ret
nop
sar
adc
add
add
jno
add
mov
data16
mull
clc
push
add
fcoms
jne
jbe
shll
push
add
data16
mov
pop
xor
add
sar
push
inc
clc
pop
clc
fidivrl
clc
push
clc
sbb
or
add
fildll
clc
mov
inc
clc
je
xchg
in
push
add
arpl
add
add
repnz
ja
or
clc
int
add
dec
mov
gs
aas
leave
call
add
dec
cmp
idivl
mov
clc
ret
clc
and
sbb
mov
inc
clc
sar
xchg
bound
add
clc
push
and
add
add
sar
not
idivl
clc
adc
loop
and
add
add
jb
add
in
mov
popf
lret
rdpmc
add
fisubs
add
add
mov
mov
stc
mov
add
sub
movsb
clc
test
mov
add
lcall
inc
clc
inc
clc
aam
xchg
xchg
xabort
test
cmpsb
clc
sub
clc
dec
in
aam
add
add
add
mov
or
outsb
cmpsl
clc
mov
sub
add
xor
adc
add
xor
add
nop
mov
clc
xchg
shlb
add
mov
clc
daa
clc
lahf
dec
int3
lret
push
add
ja
clc
gs
es
push
in
and
clc
push
push
add
pop
mov
clc
mov
xor
add
add
jl
clc
jmp
adc
add
add
aad
sar
xchg
cmp
clc
sub
outsb
cmc
and
add
push
add
lods
jnp
loopne
or
xchg
xbegin
push
add
push
cmp
dec
in
xor
fbstp
and
add
xchg
pop
notb
add
add
add
ja
push
gs
inc
add
sbb
add
cmp
clc
das
cmp
add
sar
rcrl
popf
pop
or
clc
test
mov
cmc
xchg
cld
sbb
add
xor
add
add
jns
aam
sbb
add
pusha
add
xor
add
clc
mov
imulb
sub
add
cld
push
add
add
add
ds
je
clc
mov
add
je
not
shrb
sbb
stos
lret
sar
clc
jmp
cwtl
jmp
cmp
imul
add
mov
cltd
pushf
push
add
clc
pop
clc
ja
add
mov
xbegin
rolb
add
add
outsb
mov
push
clc
ret
clc
cmpsb
clc
mov
and
inc
clc
dec
push
add
leave
pop
jmp
add
loop
out
mov
es
dec
or
add
clc
sub
add
dec
in
pop
sti
sub
clc
shlb
add
add
clc
cmp
mov
sub
add
jecxz
xor
movsl
clc
xchg
pop
sub
nop
xlat
or
sarb
jmp
add
scas
xchg
lods
dec
in
mov
or
es
das
jbe
mov
stos
and
add
mov
lret
cmp
clc
xchg
scas
pop
clc
cmpsb
clc
xlat
mov
cmp
mov
clc
mov
mov
punpckhdq
aam
enter
mov
clc
sbb
add
sub
movsl
clc
adc
add
push
add
ret
pushl
int3
gs
fmuls
imul
clc
mov
clc
out
mov
clc
xor
add
cs
bound
add
clc
sbb
dec
clc
scas
cmp
fsts
add
add
push
ss
lock
ss
insb
rcrb
jns
add
adc
add
clc
cs
clc
xchg
icebp
int3
sar
lock
mov
sbb
adc
add
clc
pushf
cmp
cltd
fcomps
add
pop
add
add
lcall
jns
clc
test
mov
iret
imul
inc
clc
mov
add
fcompl
outsb
mov
add
add
sahf
data16
add
add
sbb
int3
sub
clc
fbstp
jle
popa
add
and
add
add
clc
sbb
lahf
inc
clc
mov
clc
enter
stos
add
mov
scas
mov
add
pop
jno
add
mov
cs
cs
inc
add
stc
and
add
inc
add
mov
mov
adc
add
jmp
cmp
clc
arpl
add
add
addr16
adc
add
outsl
fsubs
add
bound
add
add
ja
jno
add
hlt
add
add
out
pop
mov
div
addr16
mov
loope
xor
add
add
clc
adc
add
add
out
and
cmp
gs
xor
add
js
movsb
clc
pushf
into
movsl
clc
pop
xor
add
ljmp
sbb
adc
add
clc
adc
clc
push
add
fcoms
pop
mov
clc
out
outsb
jns
add
or
clc
cmpsb
clc
stos
push
sbb
add
add
push
cmp
xor
add
add
cmp
add
pushl
cmp
add
sti
add
fldcw
xchg
imul
popa
add
xor
add
clc
data16
imul
gs
mov
add
inc
add
out
mov
in
jge
clc
sar
clc
mov
sar
add
stc
stc
cmp
fidivs
adc
sbb
ja
add
push
sbb
mov
or
xor
add
bound
add
pop
lret
in
mov
add
addr16
push
push
add
pop
xor
add
mov
clc
mov
or
add
mov
clc
adc
push
nop
addr16
and
add
add
sbb
add
clc
popf
lcall
add
pop
enter
repnz
sub
add
mov
add
sub
mov
add
xlat
addr16
std
ja,pn
clc
adc
add
sbb
int3
inc
clc
mov
insb
push
clc
cld
push
clc
mov
clc
mov
sar
lock
add
jge
aad
mov
add
add
clc
adc
add
sub
add
add
add
mov
out
ds
mov
mov
jge
in
add
add
mov
jno
add
sub
movsb
clc
jb
add
and
add
clc
es
add
mov
hlt
cmp
clc
shr
test
inc
add
mov
add
es
jecxz
sub
pop
sbb
jo
add
add
clc
sub
js
int
clc
add
add
and
add
add
repz
jno
add
mov
lock
clc
inc
add
cmp
jae
add
add
out
mov
mov
add
add
push
add
fs
push
aaa
in
out
pop
test
sbb
xor
add
push
add
add
add
clc
cmp
daa
clc
out
inc
add
inc
clc
inc
add
sbb
dec
rclb
add
clc
ds
ljmp
in
mov
imul
clc
cmp
loope
sbb
add
add
push
pop
jg
sbb
jno
add
lret
mov
dec
sbb
jno
add
push
out
and
cmp
mov
add
pop
jnp
mov
pop
and
add
jne
cmp
xbegin
hlt
jmp
jmp
add
fwait
inc
add
pusha
add
xor
add
or
gs
jmp
daa
clc
mov
add
xlat
mov
ja
cmp
loope
ljmp
cmpsl
clc
rcl
aaa
jmp
int
clc
xchg
fstl
decl
push
add
xbegin
pop
clc
mov
clc
in
flds
add
jb
add
add
mov
add
add
outsl
xor
add
add
clc
sub
add
cmp
fs
or
mov
pop
test
clc
pop
out
insb
sbb
arpl
add
adc
push
clc
imul
aad
xlat
jecxz
je
mov
test
jne
sub
mov
add
mov
clc
andnps
xlat
inc
clc
dec
pusha
add
push
add
scas
clc
mov
ret
push
sbb
nop
dec
test
lods
std
into
movsb
clc
lret
add
dec
sar
add
lods
and
xbegin
add
add
mov
xchg
jnp
imul
cmp
push
loopne
inc
clc
loopne
jle
add
inc
clc
pusha
add
pushf
mov
outsb
mov
add
add
mov
test
ret
clc
push
add
cmp
mov
clc
mov
test
int3
popf
aaa
jnp
insb
stos
rclb
add
ss
xor
add
add
inc
clc
xchg
lcall
add
push
sub
nop
enter
aaa
sub
dec
cmp
jge
clc
cli
jns
clc
cltd
test
clc
insl
flds
and
add
aam
sbb
adc
add
add
add
xor
add
jns
clc
jge
push
add
pop
pop
mov
xbegin
out
mov
dec
sbb
clc
inc
add
rcrl
clc
sar
add
jmp
add
fstl
add
test
sbb
stos
insl
sub
movsb
clc
add
add
add
clc
jno
add
clc
stc
mov
xlat
arpl
add
clc
lods
out
or
aas
fisubrs
in
leave
cmc
in
or
clc
aam
lods
xchg
call
sbb
jno
add
sbb
repz
test
inc
clc
clc
out
repz
adc
loopne
adc
add
add
push
cli
divl
add
clc
test
ds
fyl2xp1
cmp
add
dec
scas
fwait
adc
add
pop
clc
arpl
add
cmpsl
clc
or
add
add
dec
pop
clc
mov
scas
mov
pop
das
call
insb
lcall
out
enter
js
aaa
out
xchg
xor
and
add
out
imul
or
addr16
add
mov
das
jg
lret
jne
rep
mov
lahf
sub
xor
add
movsl
clc
pop
fmul
push
dec
in
sar
cmp
or
push
add
faddl
add
add
sub
push
mov
loope,pt
add
add
add
mov
cmp
popa
add
fwait
shll
fstpl
leave
mov
add
push
fadds
dec
pusha
add
pusha
add
pop
sub
clc
lret
out
xchg
sub
pop
je
add
daa
clc
lahf
add
add
clc
xabort
clc
add
add
add
or
por
inc
clc
and
add
add
out
adc
add
mov
mov
inc
add
adc
add
add
scas
dec
pop
fiaddl
add
bound
add
xchg
pushf
es
xchg
push
clc
jp
clc
jmp
push
add
add
add
sub
inc
add
sbb
inc
add
loope
xchg
pop
pop
out
and
add
into
out
ja
clc
cld
sub
add
notb
std
adc
add
seta
clc
insl
cmpsl
clc
or
out
adc
xor
add
sbb
add
mov
add
sbb
loop
clc
repnz
fcompl
pop
mov
xchg
arpl
add
sbb
clc
dec
push
xchg
int
test
and
add
clc
mov
add
mov
add
add
clc
sub
clc
aad
add
das
and
add
xchg
dec
aad
sub
mov
clc
xor
add
adc
add
dec
or
add
add
clc
jae
add
sub
movsl
clc
scas
testb
test
imul
mov
add
setg
gs
into
filds
lret
clc
movsl
clc
scas
xor
add
test
pop
sar
adc
push
add
push
clc
mov
cmpsb
clc
push
mov
add
mov
add
fsubrs
inc
clc
loope
aaa
pop
mov
mov
cli
rcrb
sub
clc
mov
das
adc
cmpsl
clc
sbb
fiadds
pop
lret
clc
testl
std
pop
and
je
or
jnp
xchg
movsb
clc
mov
sbb
push
mov
clc
adc
add
add
mov
cmpsl
clc
jae
add
std
mov
add
add
js
xor
push
add
insl
inc
clc
imul
add
int
clc
sub
clc
or
pop
add
add
add
sarl
add
mov
incl
push
mov
clc
pushf
adc
add
out
inc
add
xor
add
cmp
cwtl
or
and
add
clc
stc
ds
inc
clc
adc
add
add
clc
push
push
ss
lret
rclb
dec
pop
pop
sahf
repz
add
mov
lock
clc
xchg
leave
mov
test
cwtl
arpl
add
leave
and
add
add
stos
mov
shr
jle
clc
test
mov
ljmp
sbb
inc
add
iret
xchg
add
add
jno
add
clc
mov
lods
repnz
lahf
scas
rcll
add
push
movsb
clc
fmulp
in
and
add
out
adc
in
sbb
sarl
nop
jo
add
scas
cmp
dec
fwait
and
add
push
add
cmpsl
clc
shrd
fs
or
clc
sub
cmp
and
add
stos
std
stc
inc
add
xchg
mov
mov
jmp
add
inc
clc
xchg
and
jno
add
adc
add
and
add
add
pusha
add
adc
add
clc
in
dec
cmp
clc
inc
clc
int3
stc
lods
add
add
jle
mov
into
cmpxchg
nop
pop
xchg
loopne
cmc
ss
das
mov
stos
loop
adc
xor
add
add
hlt
adc
add
clc
push
and
add
add
clc
fsubrl
addr16
shlb
clc
gs
mov
sahf
dec
pop
mov
leave
push
jnp
pop
mov
lcall
add
ss
add
mov
add
lods
cltd
push
loopne
sti
test
data16
mov
fbstp
sub
add
add
bound
add
xor
and
add
add
push
das
jl
clc
fwait
push
inc
clc
mov
add
add
clc
fcompp
inc
add
jle
add
flds
jg
repz
clc
bound
add
stc
sub
fstl
sub
lret
add
add
push
lock
or
fisubrs
clc
mov
and
jae
add
dec
ja
add
pop
sub
or
sbb
nop
cmp
add
std
loope
lods
xor
add
sbb
add
jb
add
add
lret
xchg
push
clc
push
add
sbb
add
lahf
invd
xchg
lock
xchg
xbegin
add
push
clc
ret
clc
ret
clc
test
push
mov
clc
add
add
add
clc
stos
out
negl
clc
ret
clc
mov
cmp
lret
add
jge
lods
clc
pop
pusha
add
push
adc
or
add
clc
in
jo
add
clc
je
clc
xor
repnz
xchg
jecxz
or
sti
ret
clc
adc
gs
cmp
mov
ret
add
aam
clc
adc
add
add
add
mulb
add
fldenv
jo
add
add
lret
push
pop
cmc
outsl
ds
add
popa
add
sub
push
add
cwtl
xor
add
or
add
loopne
and
add
add
lahf
es
push
mov
repz
clc
pushf
pop
xchg
sub
add
scas
outsl
mov
inc
clc
leave
cld
push
movsb
clc
fsin
mov
or
sub
test
js
jl
add
pop
in
pop
sub
insb
mov
sub
pop
xchg
xchg
fwait
adc
add
jno
add
mov
loopne
arpl
add
lcall
je
xor
add
clc
adc
add
ret
clc
inc
clc
cmp
add
mov
inc
add
in
lcall
add
test
outsl
stos
pop
lahf
lock
pop
aas
fwait
stos
and
add
into
test
fnsave
clc
jecxz
inc
add
inc
add
xchg
xor
add
clc
in
xor
add
clc
dec
std
stc
push
add
and
add
inc
add
or
sbb
je
clc
xchg
xchg
out
enter
add
test
cwtl
xchg
dec
lods
test
xchg
sar
add
jno
add
xchg
and
add
inc
add
popa
add
push
and
add
dec
and
add
push
add
inc
add
dec
pop
pop
out
push
clc
out
cmp
mov
add
adc
add
mov
adc
insb
inc
add
data16
cmp
add
jb
add
clc
sub
addr16
xchg
cmp
in
in
pop
cltd
into
es
mov
out
sbb
mov
add
add
add
add
scas
xor
lret
mov
repnz
mov
out
jmp
pop
out
jno
add
es
inc
add
jbe
mov
mov
jmp
cld
sarb
add
and
scas
sbb
gs
mov
outsl
jno
add
push
ret
sbb
pop
out
lret
sbb
out
mov
add
gs
inc
add
push
rcrb
cmpsb
clc
sbb
inc
add
push
cmp
sub
clc
jle
cli
or
in
jle
xchg
fistps
add
out
sar
insb
jecxz
shll
add
add
jle
clc
push
add
cmp
clc
sbb
add
cltd
mov
das
testl
popa
add
test
out
fisubrl
sub
dec
push
or
add
add
inc
add
pop
cmp
inc
clc
cmpsb
clc
push
add
std
or
add
imul
pusha
add
inc
clc
sbb
add
or
insl
and
add
pop
lods
rcrb
add
inc
clc
jle
cli
cwtl
jmp
clc
aad
clc
movsb
clc
bound
add
add
clc
dec
mov
sbb
adc
add
leave
fdivrp
inc
add
mov
jne
clc
cmp
add
adc
add
xchg
not
inc
add
fcomip
aas
adc
add
clc
jge
clc
iret
fisttpll
sbb
push
and
add
sbb
mov
add
push
fldl
add
push
jmp
test
add
inc
add
and
add
add
clc
out
std
iret
in
loop,pn
or
add
dec
fidivrs
add
call
or
rcrb
jo
add
dec
insb
push
cmpsl
clc
sub
mov
inc
add
sahf
mov
mov
loope
sbb
lods
jbe
fnstsw
test
ret
clc
fcomps
add
clc
fiaddl
mov
icebp
pushf
mov
sub
das
push
arpl
add
clc
inc
clc
mov
add
cmp
pushl
add
icebp
scas
sar
imul
or
sub
add
lock
add
fxch
sar
jmp
add
fwait
es
mov
and
add
add
clc
sar
add
call
loope
xchg
scas
daa
clc
or
test
out
cltd
mov
jb
add
push
mov
add
mov
clc
mov
lahf
sbb
adc
add
add
dec
push
clc
push
add
xbegin
add
clc
sbb
add
add
pop
jg
js
push
add
mov
clc
sub
push
or
push
fdivrp
sar
clc
sub
clc
mov
clc
aam
xchg
aaa
dec
inc
clc
or
xchg
repnz
scas
fisubrs
cmp
in
sti
inc
add
inc
add
repz
add
mov
pop
xabort
clc
fisubs
add
inc
clc
sub
clc
sar
inc
add
sarl
clc
cmp
jge
xor
add
scas
dec
aam
pop
fwait
add
add
xbegin
jge
xor
add
clc
test
clc
test
es
das
gs
fidivrs
jae
add
pop
adc
add
push
movsb
clc
out
dec
fs
fbstp
mov
jmp
pop
pop
out
pop
dec
jb
add
adc
clc
pusha
add
int
add
cmp
sahf
cmp
das
pop
xchg
dec
adc
add
push
mov
mov
int3
fs
je
add
addr16
in
outsl
push
in
adc
mov
add
sar
pop
cmp
add
sbb
add
jns
clc
int
add
sub
popf
hlt
mov
scas
push
add
mov
cmp
xabort
jle
clc
or
inc
clc
popa
add
jno
add
clc
inc
clc
ljmp
inc
add
aaa
cld
inc
add
loopne
mov
clc
push
inc
clc
fucomp
loop
mov
adc
add
outsb
inc
add
push
and
mov
pop
clc
xchg
imul
aad
clc
testl
pusha
add
mov
xchg
cltd
xchg
psllq
add
dec
rolb
add
fistpl
pop
xchg
mov
xchg
hlt
cld
out
mull
add
std
imul
clc
mov
mov
add
bound
add
add
add
dec
and
add
flds
dec
int3
cmp
clc
incb
clc
sar
clc
jbe
clc
in
cmp
clc
icebp
popf
mov
push
add
cmp
mov
dec
ja
and
add
iret
gs
test
je
addr16
xchg
insb
scas
leave
mov
sub
clc
mov
clc
mov
es
mov
repnz
mov
out
xchg
jmp
clc
xchg
ja,pt
mov
mov
clc
xchg
aaa
fldenv
add
or
aaa
jmp
jo
add
add
pop
pop
js
cmp
icebp
rorb
clc
mov
dec
ds
sbb
jbe
sbb
add
dec
jbe
ror
bound
add
add
sub
incb
daa
clc
adc
cmp
clc
cmc
cmp
add
cmp
clc
insb
sti
xchg
cmp
clc
mov
clc
dec
clc
push
cmp
clc
pop
adc
add
outsb
lahf
dec
push
jle
clc
push
sub
add
add
push
add
call
pop
jae
add
divl
fwait
jmp
xbegin
cmp
xchg
popf
push
clc
cmp
mul
clc
jb
add
sti
xor
add
int3
addr16
jle
mov
add
add
nopl
stos
cmp
ljmp
je
add
mov
push
mov
loope
nop
fcomps
adc
add
add
test
aad
repz
clc
clc
out
mov
jl
clc
jnp
clc
clc
pop
loop
mov
inc
clc
ja
clc
pop
shll
add
clc
fs
sub
clc
out
cmp
clc
cmp
push
add
fistps
cli
inc
clc
and
add
add
sar
clc
sbb
hlt
cmp
fistpl
push
sub
xabort
fs
adc
add
dec
lcall
fcomi
add
add
loope
leave
cmpsb
clc
outsl
mov
shlb
clc
sahf
cmp
add
mov
div
sbb
add
clc
fwait
dec
push
sub
cltd
ljmp
jno
add
stos
xchg
mov
into
aas
cltd
xchg
cmp
clc
cmp
dec
mov
add
clc
add
add
mov
jno
add
clc
push
add
out
xor
add
add
cltd
jnp
xchg
leave
in
adc
add
push
jo
add
add
xlat
mov
loopne
jp
clc
lods
loope
pop
xchg
sbb
jae
add
sub
clc
and
add
leave
add
add
inc
clc
fistl
add
adc
add
pop
lret
adc
clc
aaa
and
add
stos
sub
ja
hlt
dec
mov
add
pop
test
sti
xchg
mov
clc
dec
xchg
jl
in
cmp
insl
outsb
mov
add
fdivl
enter
clc
lcall
add
add
sarb
push
roll
scas
xor
add
mov
mov
clc
pop
cmc
arpl
add
or
cld
enter
jnp
loope
xchg
jbe
add
inc
clc
mov
call
in
sub
clc
xor
add
fldz
mov
imul
call
cld
cli
mov
nop
lcall
push
clc
scas
pushl
add
add
pop
jne
hlt
add
add
clc
push
clc
adc
add
push
insl
mov
add
sar
lock
dec
fcmovnb
clc
aad
clc
fs
cmp
cli
cmp
clc
lret
sahf
ret
clc
mov
push
lods
add
add
clc
call
lret
clc
mov
add
clc
pop
adc
add
clc
adc
add
push
pop
cmpsl
clc
insb
sahf
icebp
mov
xor
add
cmc
push
ds
add
cmp
add
ret
clc
jnp
ret
clc
inc
clc
popa
add
push
lcall
clc
out
or
lret
adc
add
mov
sti
in
mov
clc
cwtl
imull
lcall
add
inc
clc
lods
insb
push
and
mov
popl
mov
sbb
jecxz
cmp
jg
add
adc
add
sub
add
jo
add
add
mov
clc
mov
icebp
mov
adc
add
scas
xor
add
add
loope
mov
cwtl
jb
add
add
insb
push
clc
fcomp
mov
clc
addr16
cmc
mov
adc
add
fwait
cmp
add
or
add
mov
cmp
imul
fwait
sbb
cmp
pushf
sbb
xor
add
clc
add
add
push
sbb
clc
xchg
and
add
cmpsb
clc
cmp
or
lcall
mov
or
clc
cli
push
pop
or
add
add
add
add
clc
push
inc
add
cmp
in
sub
test
mov
enter
loop
sub
xchg
push
mov
xchg
into
xor
arpl
add
cmp
lahf
dec
cmpsb
clc
mov
clc
sub
sbb
add
push
add
data16
mov
clc
and
add
out
lea
shlb
add
iret
mov
ret
sub
sub
popf
clc
sub
nop
cmp
add
pop
icebp
xor
add
out
dec
add
add
push
nop
push
clc
jle
clc
scas
imul
lahf
pop
jmp
clc
jb
add
movsb
clc
mov
mov
clc
movsl
clc
ds
jp
aaa
mov
clc
cmp
test
filds
add
add
ret
clc
in
xchg
or
xchg
and
adc
std
lret
clc
xchg
mov
arpl
add
sub
clc
pop
jnp
aad
inc
add
push
mov
push
mov
jne
xor
clc
in
fs
adc
mov
pop
daa
clc
dec
mov
and
add
jb
add
jbe
add
and
add
add
ret
scas
jp
clc
das
cltd
leave
mov
cmpsb
clc
push
add
add
add
mov
lret
sar
cmpsb
clc
cmp
clc
add
add
clc
dec
dec
aam
dec
loop
or
xchg
js
dec
stc
clc
mov
xchg
jbe
addr16
cmpsl
clc
xabort
hlt
or
mov
add
add
add
jnp
int3
lahf
out
scas
mov
clc
push
clc
lods
rorl
dec
fistps
add
in
pop
adc
mov
add
add
outsb
mov
in
mov
or
stos
mov
jo
add
stc
mov
add
mov
clc
sar
clc
in
push
loop
sub
add
pop
lcall
clc
sub
clc
pop
pop
adc
add
insl
fwait
inc
clc
or
in
insb
push
add
adc
add
add
add
clc
test
clc
lods
cmpsl
clc
mov
repz
es
add
add
jbe
clc
xabort
clc
popf
fldcw
add
jl
lret
pop
aad
clc
fwait
aas
jge
push
jnp
clc
dec
cwtl
or
clc
int
adc
add
sub
lods
scas
mov
mov
push
jnp
clc
fdivs
add
aam
mov
clc
daa
clc
lret
push
clc
jne
add
lods
cltd
loop
cld
das
cli
decl
aaa
loopne
jnp
movsb
clc
pushf
je
add
aas
data16
dec
cmp
imul
test
loopne
pushf
addr16
inc
clc
js
push
xchg
movsl
clc
pop
mov
clc
ret
clc
xor
add
sub
xor
add
add
cmp
add
out
xchg
fcomps
xchg
cmpsb
clc
pop
push
add
pop
test
fwait
cld
repnz
clc
fsincos
in
dec
std
clc
mov
iret
aaa
jmp
xchg
pushf
jo
add
clc
push
xor
leave
cmp
and
add
add
dec
jb
add
sahf
and
daa
clc
cmp
imul
push
cmp
bound
add
push
add
pop
xabort
dec
in
jbe
add
popf
xchg
cwtl
mov
clc
or
mov
clc
js
ret
clc
sti
iret
vucomiss
cmp
add
out
adc
dec
pop
clc
dec
mov
int
jne
lock
ljmp
mov
clc
insl
mov
sub
add
clc
cltd
loop
cmp
loopne
cmp
add
sar
add
xabort
xabort
xchg
and
add
add
clc
xchg
mov
push
mov
test
push
add
xor
add
mov
inc
add
mov
dec
test
xlat
mov
out
and
cmp
fwait
mov
or
sbb
clc
adc
add
clc
arpl
add
aam
loope
and
add
or
data16
add
add
faddl
clc
xabort
jae
add
cmp
add
sar
lods
mov
dec
adc
add
jge
imul
add
mov
clc
push
mov
clc
adc
add
and
add
add
add
mov
xor
add
add
test
adc
add
movsl
clc
jbe
sub
es
notb
mov
sbb
sbb
mov
add
pushf
push
add
out
inc
add
push
push
out
out
xabort
and
add
add
call
cmp
clc
gs
xchg
fmulp
stos
cmp
inc
clc
mov
jle
cmp
add
add
add
inc
clc
cmp
clc
jecxz
pop
insl
adc
clc
pop
or
clc
xabort
mov
clc
push
jns
sar
lea
add
mov
push
gs
cmc
das
cmp
dec
push
add
sub
clc
sbb
bound
add
mov
mov
sti
lock
clc
enter
dec
js
push
pop
test
clc
lahf
cmc
pop
loop
push
popa
add
in
cltd
ss
clc
dec
xor
add
and
sbb
clc
cmp
add
loope
fildll
cs
add
lods
loop
xor
add
cmp
out
ss
dec
std
in
inc
add
scas
sbb
repnz
xor
add
pop
mov
sar
push
data16
adc
mov
cmc
jmp
clc
sbb
pop
out
mov
clc
cld
gs
jmp
adc
add
mov
pop
dec
push
add
inc
clc
in
and
bound
add
clc
bound
add
add
call
add
add
add
cmp
add
mov
jb
add
push
clc
mov
xchg
dec
inc
add
stos
push
add
clc
test
dec
push
sar
mov
cmp
aaa
sub
xchg
adc
lock
push
clc
cs
cwtl
pushf
jl
addr16
cmp
clc
in
fsts
add
cmpsb
clc
in
cmp
es
lea
inc
add
test
jne
add
add
sub
add
in
mov
sub
clc
sbb
lcall
cmp
mov
bound
add
sub
dec
ret
clc
cmp
or
jno
add
lods
imul
clc
and
bswap
xchg
dec
lcall
loope
mov
jmp
arpl
add
sub
add
cmpsb
clc
repz
add
mov
jns
mov
cmp
clc
add
add
test
push
cmp
dec
cmp
inc
add
adc
cmp
or
clc
std
fists
and
loopne
push
add
jmp
add
cltd
cwtl
cmpsl
clc
popa
add
dec
mov
add
or
clc
mov
xchg
sub
add
pushf
out
add
add
add
cmp
jb
add
add
push
xchg
shl
out
insl
sahf
hlt
lods
dec
adc
add
xor
es
dec
fdivl
std
inc
clc
mul
clc
adc
clc
mov
add
fidivl
push
dec
daa
clc
psadbw
jecxz
mov
frstor
add
clc
sub
jns
sbb
add
push
arpl
add
repz
stos
pop
cmp
dec
js
xchg
mov
stos
cltd
add
add
clc
pusha
add
ds
leave
imul
mov
push
add
push
outsl
repnz
dec
movsl
clc
fsubs
scas
mov
clc
inc
clc
insl
out
aas
clc
dec
mov
cmp
dec
dec
pop
inc
clc
lret
push
je
clc
sbb
clc
push
test
ret
clc
push
clc
sahf
lock
add
jge
daa
clc
outsl
in
sub
sti
packuswb
pop
adc
scas
cmpsb
clc
icebp
push
sbb
add
cld
adc
add
add
mov
add
fiaddl
fs
cmp
add
dec
daa
clc
nop
loop
jl
dec
mov
pop
loope
and
add
popa
add
mov
xor
add
cmc
jae
add
pop
mov
pusha
add
dec
mov
clc
fistpl
push
push
add
imul
icebp
ss
insl
or
clc
mov
mov
mov
dec
sub
insl
sar
dec
icebp
push
test
mov
add
cmp
add
xor
sar
clc
jge
outsl
mov
add
clc
fdivl
add
nop
cmpsl
clc
ror
xor
add
clc
push
add
jne
cmp
or
clc
sti
pop
cmp
add
mov
clc
xchg
cmp
or
add
or
push
mov
add
cmp
stos
and
imul
adc
lock
test
mov
clc
push
call
clc
mov
cmp
xchg
sbb
clc
pop
in
mov
clc
out
xlat
popl
sub
clc
in
outsl
pop
pop
inc
clc
stc
aaa
or
dec
out
mov
pop
push
add
notl
insl
jle
stos
mov
clc
clc
fmull
das
sar
add
add
mov
clc
cmp
inc
clc
test
add
dec
sar
clc
xchg
bound
add
pushf
scas
mov
sub
cltd
cmc
bound
add
enter
adc
add
sar
adc
inc
clc
dec
pop
xor
push
add
push
mov
clc
xchg
xchg
aas
js
mov
loope
mov
daa
clc
cmp
pusha
add
mov
adc
add
sub
bound
add
aaa
fs
sar
aas
push
mov
jbe
mov
out
add
lock
rorl
inc
add
jae,pn
add
or
jne
dec
ret
clc
sbb
cmp
cmp
inc
clc
dec
out
pop
popf
mov
push
add
xchg
xor
add
sar
add
es
xchg
inc
add
and
add
add
cmp
pop
pop
inc
clc
mov
mov
je
int
sbb
or
sub
clc
dec
cmp
clc
push
add
mov
jae
add
js
add
mov
jnp
nop
jo
add
xchg
pop
mov
push
mov
add
push
add
fsubl
lahf
test
mov
lock
xor
add
iret
mov
pop
clc
xchg
lock
aaa
sbb
std
roll
add
clc
jg
clc
mov
add
in
adc
add
clc
outsb
xabort
clc
or
add
roll
add
jecxz
cmp
dec
or
add
jecxz
test
mov
mov
popa
add
sahf
out
push
sbb
clc
add
add
dec
dec
mov
mov
or
adc
add
pop
jge
cltd
pop
out
xor
add
add
sti
lcall
jecxz
mov
out
xor
add
xor
add
push
add
add
mov
nop
adc
add
add
jne
imull
dec
outsb
mov
clc
stc
and
add
daa
clc
bound
add
xchg
mov
test
pop
mov
rcll
sub
lcall
incb
add
mov
push
dec
enter
add
add
pop
inc
clc
mov
sbb
add
jl
mov
jl
pushf
adc
add
loop
xchg
jecxz
stos
add
add
leave
sub
arpl
add
cmpsl
clc
jo
add
clc
jl
popa
add
jp
clc
cmp
jmp
add
jle
add
fs
sar
mov
aas
shrl
mov
add
mov
add
xor
mov
insb
stc
lea
adc
add
into
cs
clc
data16
pop
lock
jg
pop
icebp
push
add
gs
mov
xabort
outsl
stos
fs
add
dec
dec
in
mov
cmp
js
add
xchg
out
out
mov
inc
clc
nop
dec
pop
cmp
add
fildl
add
add
cld
jo
add
clc
sbb
pop
push
inc
add
xchg
mov
cmpsb
clc
cmp
popf
adc
add
lret
xchg
dec
ljmp
clc
mov
add
cld
testl
add
pop
add
add
clc
jle
xchg
cmpsb
clc
mov
jmp
ljmp
adc
mov
clc
das
mov
dec
adc
add
add
mov
pop
jp
scas
repnz
add
add
jbe
mov
add
pop
iret
xchg
out
jb
add
sar
ljmp
sub
add
movd
clc
xchg
cli
cmpsb
clc
inc
clc
pop
and
add
add
sar
clc
mov
popf
icebp
push
clc
in
pop
insb
loopne
ja
mov
xchg
in
push
mov
clc
inc
add
add
add
repnz
pop
addr16
and
add
cmp
not
mov
call
xchg
addr16
testl
sub
add
add
clc
test
xchg
ds
and
add
in
clc
imul
cmp
add
mov
sub
mov
shrb
jl
push
enter
roll
adc
add
mov
add
mov
add
clc
mov
inc
add
inc
add
dec
add
add
xor
add
jns
popa
add
or
inc
add
lcall
jmp
clc
inc
clc
pusha
add
mov
add
lahf
sub
addr16
sar
clc
and
add
add
cmp
clc
push
ds
or
add
je
clc
mov
add
inc
add
addr16
fsin
push
add
add
test
xabort
mov
cmp
add
pop
insl
cmc
fs
imul
clc
add
adc
clc
inc
add
pusha
add
dec
xlat
inc
add
xchg
aas
mov
loop
adc
mov
mov
lret
enter
mov
clc
ljmp
aad
sbb
cmp
clc
xchg
mov
push
xor
add
add
mov
add
cli
lret
jo
add
clc
imul
mov
fwait
jl
cmp
cwtl
cmp
clc
sbb
add
clc
dec
pop
rcll
lock
out
jae
add
clc
add
add
clc
testl
add
lods
pop
lods
sar
clc
lods
mov
xchg
cli
rsm
lcall
and
rolb
mov
pop
push
test
mov
mov
js
add
outsb
cli
inc
clc
es
push
add
jmp
sar
mov
lahf
cmp
xchg
es
cmpsl
clc
add
add
add
cmc
sahf
ds
adc
add
in
pop
or
aam
out
mov
xor
add
add
inc
add
clc
aas
shr
xor
add
gs
push
clc
sbb
add
ficompl
add
add
and
lock
xchg
xchg
sarl
add
test
pop
dec
jb
add
mov
repnz
add
push
add
mov
je
clc
cmp
add
mov
add
or
das
add
add
xchg
out
push
add
sbb
jae
add
cmpsl
clc
cmpsb
clc
jne
add
sub
clc
pusha
add
mov
clc
nop
xchg
sbb
push
sbb
add
insb
inc
add
mov
fnstenv
fbld
add
push
adc
add
add
mov
clc
xor
add
mov
lea
add
sbb
xabort
dec
icebp
dec
jp
mov
add
push
add
jl
fdiv
cmp
add
adc
add
push
add
mov
cs
out
imul
clc
cltd
jae
add
jbe
clc
call
push
add
inc
clc
mov
outsl
cmp
add
mov
pusha
add
std
xor
add
aaa
mov
pop
jb
add
rcll
add
mov
clc
lret
fwait
icebp
pop
jnp
aaa
sbb
ja
ljmp
fistl
mov
add
cmp
data16
out
int3
sbb
je
clc
out
mov
int3
push
fistps
add
inc
add
and
add
rcll
add
cmc
mov
call
xchg
mov
cmp
cmp
add
mull
adc
add
ds
ret
clc
test
xor
add
jg
nop
adc
add
sahf
repnz
push
cmc
push
add
or
test
add
jbe
mov
fwait
cmp
dec
lret
sbb
ret
clc
mov
xchg
lret
xor
add
pop
insb
loopne
add
add
fwait
ja
clc
jecxz
lea
sbb
mov
push
xlat
in
je
clc
jae
add
hlt
mov
stos
loop
sub
outsl
push
xchg
mov
mov
sbb
outsb
xbegin
clc
inc
clc
inc
add
shrb
push
clc
cwtl
pop
xchg
cltd
jb
add
dec
xchg
in
mov
mov
sub
sub
add
dec
movsb
clc
pusha
add
push
clc
jns
gs
jae
add
add
pop
jbe
mov
clc
repz
shl
leave
xchg
jl
mov
enter
dec
pop
bound
add
adc
clc
push
add
add
pop
cmovle
test
add
lahf
xor
add
xor
add
clc
cmp
inc
add
jge
xor
add
es
sub
cmc
scas
xchg
pop
jno
add
jo
add
push
add
push
scas
push
pop
aam
mov
cmp
clc
sahf
lcall
clc
sub
clc
sbb
add
add
add
pop
xchg
jno
add
add
mov
sahf
adc
add
xor
add
clc
xchg
fistpl
insl
sbb
mov
je
clc
gs
mov
clc
pop
push
jae
add
push
add
int
push
add
pop
inc
clc
xlat
outsb
leave
xchg
xchg
repnz
push
es
mov
mov
fstps
xor
add
dec
fadds
lahf
cmp
add
mov
add
inc
add
in
icebp
mov
clc
jge
into
repz
add
mov
cmp
adc
add
pop
clc
bound
add
out
sahf
ret
sbb
fists
add
add
int3
and
pause
push
lods
movsb
clc
ret
jno
add
cmp
mov
data16
lahf
mov
cmpsl
clc
enter
add
mov
es
pop
push
add
mov
cmp
add
repz
and
add
mov
clc
cmp
aaa
pop
lcall
clc
adc
add
mov
add
iret
add
add
sar
fisttps
fstl
mulb
out
mov
add
test
add
add
mov
bound
add
pushf
sar
testb
add
xbegin
mov
clc
cmp
hlt
dec
cld
inc
add
mov
lods
fisubs
clc
mov
clc
dec
mov
clc
mov
push
cmp
std
imul
out
out
xbegin
out
lret
jl
clc
add
js
xor
add
add
dec
xbegin
add
jb
add
in
scas
mov
push
add
xabort
stos
test
fadds
clc
xlat
fdivrl
incb
add
pop
clc
adc
add
add
jge
mov
sti
test
cltd
ret
add
cmp
add
jl,pn
add
data16
fiadds
clc
sbb
push
dec
inc
add
jne
clc
xchg
call
mov
add
psubsw
inc
clc
insl
cmp
sub
sbb
add
cmp
dec
lret
pop
sar
push
xabort
clc
stos
movsb
clc
mov
enter
pop
test
inc
add
bound
add
adc
adc
add
add
sub
cmp
jl
clc
into
mov
cmp
add
iret
insb
mov
int
dec
sar
data16
mov
clc
mov
add
sbb
sbb
mov
add
cld
xor
add
add
outsl
and
add
cld
mov
cltd
sbb
mov
xchg
jb
add
add
inc
add
sahf
cltd
xlat
add
add
repz
mov
add
pop
xchg
inc
clc
leave
mov
push
bound
add
in
sar
fcomps
notl
add
data16
lods
lock
clc
dec
xchg
fnsave
hlt
js
clc
es
pop
clc
push
pop
push
add
add
mov
add
add
mov
nop
jmp
add
aam
jnp
push
or
in
jnp
out
and
cmp
clc
nop
push
popf
pop
push
add
xor
push
clc
insl
mov
add
stos
stos
jae
add
jg
addr16
adc
add
sbb
clc
add
add
out
jg
mov
out
mov
clc
mov
xor
enter
nop
jmp
lods
leave
add
xchg
cld
or
movsb
clc
out
mov
clc
add
add
ds
movsl
clc
mov
add
add
add
pop
hlt
mov
pop
sbb
sbb
test
cmpsl
add
nop
jmp
add
lods
add
push
dec
outsl
sar
add
xchg
cmp
xchg
jns
clc
aad
clc
pop
in
aas
xor
mov
adc
clc
aas
jb
add
add
stos
test
mov
add
add
add
xchg
clc
nop
arpl
add
fwait
sti
inc
add
xlat
sbb
add
jne
cmp
add
xor
ficoml
clc
mov
jmp
gs
out
add
add
pop
mov
pop
dec
adc
add
add
in
sar
add
inc
add
sbb
or
repz
fwait
cmc
mov
mov
out
or
inc
clc
inc
add
add
nop
jmp
xchg
mov
clc
push
imul
adc
add
cltd
jg
mov
sbb
out
pop
cmp
jp
movsl
clc
push
inc
add
int3
pop
pop
int
lret
push
mov
nop
inc
add
call
cmp
mov
and
add
clc
adc
add
clc
cmpsb
clc
push
add
adc
dec
pop
sub
add
mov
test
aad
pop
bound
add
std
mov
add
clc
js
hlt
int3
jno
add
add
fiaddl
add
xabort
sub
clc
dec
jbe
std
cmp
bound
add
das
repnz
pushf
push
xchg
adc
clc
iret
cwtl
aas
pop
arpl
add
mov
ja
push
add
xchg
pop
inc
add
scas
cmpsl
clc
mov
add
add
add
nop
jmp
std
stos
or
add
and
movsl
clc
jmp
insl
sub
je
stc
ds
cli
pop
xchg
call
xchg
mov
ja
pop
push
mov
sbb
add
popa
adc
sbb
mov
clc
in
sbb
aam
clc
or
add
add
add
add
adc
add
clc
push
add
clc
lea
push
mov
mov
add
add
out
stos
dec
in
ds
dec
push
add
xlat
lods
fstps
clc
or
sub
clc
jp
clc
xabort
add
mov
std
jl
clc
lods
dec
mov
loopne
push
jecxz
mov
clc
cmp
inc
add
mov
std
cli
jae
add
clc
xchg
sti
hlt
cmc
xor
add
clc
fcmovnu
and
add
clc
add
add
add
clc
mov
fs
arpl
add
clc
inc
add
nop
testb
cwtl
mov
mov
nop
jmp
mov
pushf
ds
clc
push
clc
sahf
push
iret
adc
sbb
jmp
fldl
add
sti
push
clc
fs
sbb
adc
add
aam
clc
in
sub
add
push
cmp
xabort
adc
add
add
pop
add
add
clc
outsl
cmp
jbe
in
mov
or
add
cmp
xor
add
clc
cwtl
dec
insl
cmp
xchg
add
fcmovne
insb
xchg
xabort
sti
cmpsl
clc
cmp
or
clc
sub
cmpsl
clc
aaa
lea
xbegin
clc
fwait
sub
testb
add
pop
test
scas
sbb
add
aas
std
jb
add
clc
fstps
xor
clc
add
add
add
and
add
clc
lods
cmpsb
clc
rclb
add
clc
test
clc
or
ja
clc
sar
add
mov
loop
add
nop
jmp
fwait
lahf
adc
clc
ss
add
fwait
scas
arpl
add
sarl
mov
dec
js
clc
sbb
push
stc
jge
inc
add
dec
xchg
mov
jmp
pop
aam
and
aaa
xlat
xor
sub
pop
nop
xor
shl
clc
out
fiaddl
sub
mov
xchg
xchg
push
add
pop
jge
add
lock
or
clc
je
xor
insl
jb
add
in
mov
scas
push
add
sbb
mov
xchg
ret
cmpsl
popa
pop
pop
int3
outsl
fwait
and
mov
adc
add
clc
cmpsl
clc
icebp
inc
add
repnz
clc
pushf
sbb
jmp
gs
out
pop
inc
pushf
mov
clc
push
add
push
mov
xchg
ret
cmpsl
cmc
pop
dec
xor
add
or
xchg
sub
add
and
fsubrs
sbb
or
nop
jmp
cmp
add
add
clc
cmpsl
clc
and
add
insl
jmp
fs
inc
clc
dec
xor
add
jae
add
cld
jns
add
adc
add
cwtl
pop
xor
add
mov
nop
jmp
jno
cmc
lahf
cmpsl
and
mov
sub
clc
push
add
lock
add
popa
add
inc
add
aam
clc
test
pop
inc
clc
mov
jmp
push
xor
sti
fmuls
gs
adc
add
clc
mov
mov
clc
clc
mov
clc
clc
xchg
stc
cmp
mov
clc
stos
sub
adc
pop
mov
dec
cwtl
xlat
mov
clc
mov
add
into
dec
mov
dec
sub
pop
pushf
sbb
and
nop
jmp
mov
inc
clc
cld
add
jmp
cmp
ret
add
dec
test
pop
inc
add
add
add
mov
sub
addr16
jge
xor
adc
int3
insl
out
std
lret
clc
mov
mov
cmpsb
clc
push
ret
clc
fucomi
mov
xor
add
lods
jle
inc
add
fimull
or
add
ljmp
xbegin
cmp
cli
decl
test
imul
nop
jmp
enter
add
add
clc
jp
out
inc
add
stc
sub
mov
add
mov
in
sub
add
add
or
clc
stc
xor
fstps
pop
outsb
xor
push
add
fs
dec
xor
add
imul
cs
add
mov
out
xor
add
mov
addr16
int
xchg
fcmove
cld
xchg
rclb
fadds
add
cli
out
pop
xabort
scas
repz
add
add
sbb
push
add
lahf
ljmp
movsb
clc
cmp
clc
sbb
outsl
push
xor
add
inc
add
cmp
xchg
loop
inc
add
mov
clc
jne
jno
add
push
push
mov
xchg
ret
xchg
enter
ret
clc
jnp
je
nop
jmp
lods
enter
clc
cmp
mov
cli
shl
clc
out
fsubl
fwait
sbb
scas
jl
adc
add
add
movsb
clc
add
inc
clc
insb
addr16
pop
es
dec
call
in
gs
pop
call
cmp
clc
dec
clc
cmp
add
mov
pop
cmp
sbb
add
nop
jmp
adc
out
out
mov
fbstp
jp
xchg
mov
jns
jle
clc
mov
cmc
fucomp
inc
clc
pushf
pop
mov
sbb
imul
clc
inc
add
mov
inc
add
xchg
mov
clc
enter
add
fwait
xchg
or
xor
add
xchg
or
add
clc
movsl
clc
add
add
mov
fs
xlat
xchg
or
add
push
aad
sbb
enter
std
xor
add
std
addr16
arpl
add
adc
add
and
add
xchg
or
adc
add
enter
lahf
sub
fdivrl
shl
repnz
divb
xabort
test
mov
mov
add
add
xchg
xchg
daa
clc
inc
clc
or
ds
clc
in
push
add
jo
add
sahf
jge
das
mov
cmp
lods
adc
add
adc
add
mov
dec
jle
add
mov
add
clc
iret
jbe
pop
cs
add
gs
mov
mov
pop
popa
add
inc
add
test
nop
jmp
popa
popa
add
inc
add
mov
add
mov
jae
add
stc
cmp
pop
lret
xor
add
lret
out
cli
jb
add
xlat
dec
dec
jae
add
add
xchg
push
jge
fs
repnz
cmpsb
clc
push
push
add
pop
push
mov
xor
add
jmp
js
gs
push
out
cmpsl
enter
testb
add
cli
test
and
add
dec
nop
jmp
jno
push
lods
lods
std
enter
xchg
add
add
add
add
adc
add
inc
clc
add
add
add
add
clc
clc
jecxz
pop
stc
int
sub
pop
aam
clc
loope
sahf
jecxz
outsb
push
add
ficompl
push
add
and
add
clc
cmp
add
fwait
push
dec
jecxz
int
aas
push
add
xabort
lret
mov
add
dec
cmp
clc
jmp
out
mov
xchg
mov
sub
add
mov
add
push
adc
add
dec
xor
add
cmp
int
nop
outsb
push
add
cwtl
enter
shll
pop
mov
clc
xor
add
sar
inc
clc
inc
clc
mov
bound
add
clc
mov
arpl
add
clc
jge
sub
dec
lret
clc
xabort
inc
clc
nop
mov
add
in
out
xchg
push
add
jbe
out
outsb
and
add
fistpl
pushl
push
mov
xchg
ret
pop
add
call
nop
jmp
sub
enter
rolb
fcom
add
add
jle
add
xchg
fdivrl
imul
jmp
clc
outsl
and
add
sbb
cmp
add
mov
clc
sub
stc
inc
clc
xbegin
add
test
cmp
clc
dec
mov
sub
fistpl
jb
add
cmp
test
clc
mov
clc
dec
cmp
clc
inc
add
aam
cli
jne
add
pop
in
xabort
add
movsl
clc
sar
out
out
pop
or
lods
stc
mov
jns
sub
incl
loope
add
add
loope
sub
add
push
arpl
add
add
or
arpl
add
mov
xchg
ret
gs
sub
xor
add
add
xlat
add
imul
add
mov
setbe
add
clc
cld
int3
jge
jle
testl
mov
xchg
ret
dec
enter
clc
lcall
add
call
xbegin
add
xor
add
clc
mov
std
pop
xchg
insb
pop
cmp
xchg
fdivs
sarl
popa
add
xor
mov
pusha
add
ret
clc
sub
fisubs
add
add
enter
or
xchg
adc
add
clc
in
lock
clc
mov
and
mov
lods
dec
xor
add
das
movsb
clc
popf
stos
mov
add
pop
mov
clc
fisttpl
add
add
dec
cmp
add
aaa
push
hlt
fs
pushf
sub
call
nop
jmp
xchg
push
mov
movsb
clc
mov
add
cmpsb
clc
cltd
out
out
iret
xlat
mov
stos
insl
gs
inc
clc
addr16
and
add
repnz
js
push
xlat
inc
clc
fnsave
add
nop
xbegin
stos
cmc
xor
add
add
xor
add
sbb
jb
add
clc
cmp
add
arpl
add
add
inc
clc
adc
push
cmpsb
clc
js
push
clc
loope
adc
add
add
mov
dec
or
pop
jge
insb
in
fs
call
sbb
call
das
xchg
imul
sar
fwait
mov
xchg
jns
clc
aad
std
scas
cltd
scas
arpl
add
cmp
xor
add
jo
add
jmp
jmp
add
add
mov
mov
sar
adc
add
add
add
add
push
add
sub
mov
cmp
nop
jmp
add
dec
idiv
pop
gs
jns
or
or
lods
lahf
mov
clc
xlat
and
add
add
insl
je
push
sar
add
mov
cmp
iret
inc
clc
xchg
int
cmp
add
and
clc
in
sub
push
add
xchg
mov
clc
and
push
lahf
mov
dec
add
adc
or
sub
push
jmp
xchg
push
ret
inc
cmpsl
leave
add
add
int3
int
and
add
xor
add
clc
add
mov
roll
add
xchg
pusha
add
jno
add
cmp
mov
rol
clc
sahf
xchg
pop
js
clc
insl
mov
pop
icebp
arpl
add
and
sub
clc
in
loop
pop
xor
add
test
or
lret
clc
push
pop
cmp
add
add
mov
xchg
enter
xchg
add
add
inc
clc
aas
imul
jb
add
fwait
mov
cmc
popa
add
add
cmp
push
add
cmp
cld
scas
push
sbb
dec
cmp
jmp
push
addb
seto
xchg
cld
mov
pushf
cmp
mov
ret
clc
or
rsm
in
pop
sar
xabort
test
clc
ret
dec
movsl
clc
lods
adc
add
mov
mov
das
cmp
std
jmp
sub
clc
sub
clc
in
cmp
jecxz
clc
fwait
pop
mov
clc
fstpt
push
clc
leave
cmc
lods
push
js
aam
mov
push
add
xor
mov
jge
clc
icebp
cmp
xchg
lods
nop
movsb
clc
aam
jb
add
cwtl
push
add
nop
jmp
fwait
add
js
xchg
clc
dec
mov
int3
pop
push
jne
nop
jmp
adc
stos
mov
add
clc
out
mov
inc
clc
incb
cmp
idivb
push
nop
jmp
js
out
xchg
or
clc
mov
or
inc
clc
xor
add
test
push
test
push
add
xbegin
and
add
push
nop
jmp
adc
add
cwtl
mov
pop
nop
jmp
and
sahf
roll
mov
cmp
movsl
clc
jge
add
sub
incl
add
cmc
add
and
clc
clc
icebp
cmp
inc
add
xor
add
sub
mov
cmpsb
clc
cmp
clc
loopne
adc
add
add
xor
add
add
xor
add
add
es
dec
mov
jo
add
imul
ja
sub
dec
push
add
or
ds
sbb
iret
or
add
sub
add
lods
loopne
movsl
clc
jmp
lea
add
jge
nop
jmp
aam
stos
pop
test
insl
daa
clc
xor
add
adc
add
clc
pop
xabort
lret
roll
imul
xbegin
mov
add
dec
pop
fistl
data16
cmc
fs
sar
cmpsb
clc
adc
add
sets
mov
sbb
xor
add
inc
add
pop
rol
clc
adc
add
clc
in
mov
out
xor
add
adc
add
add
pop
fadd
clc
loop
push
add
popa
add
cmp
pop
dec
and
inc
add
out
jne
imul
add
adc
add
shrl
clc
imul
clc
mov
cmpsb
clc
or
cld
jbe
sarb
mov
sar
cmp
and
add
test
mov
clc
and
add
xor
add
clc
popa
add
ret
clc
dec
call
clc
call
add
add
add
lahf
jnp
jp
outsb
sbb
out
insl
into
mov
xor
xor
add
sbb
add
xchg
xchg
lret
jae
add
mov
nop
jmp
lods
popa
lods
std
ret
pop
sbb
sub
clc
scas
pop
adc
rcrl
dec
aad
add
xchg
cmp
mov
clc
inc
add
or
cmp
into
adc
add
clc
fidivl
push
add
ficomps
add
nop
jmp
pushf
add
push
js
pop
jp
add
jg
iret
ficoml
or
gs
popa
add
popf
pusha
add
cmp
push
nop
jmp
pushf
add
out
leave
xchg
add
test
loopne
jnp
fwait
push
clc
test
dec
mov
inc
clc
or
addr16
adc
add
add
add
sar
fdivs
inc
clc
gs
inc
add
cmpsb
clc
mov
imul
sbb
or
inc
add
xorb
adc
add
add
movsl
clc
mov
stos
adc
cs
lods
jns
clc
scas
xchg
xchg
pop
push
clc
stc
add
aad
and
clc
loop
inc
add
inc
clc
adc
add
adc
add
nop
jmp
adc
add
ret
or
jp
mul
clc
pop
clc
movsl
clc
xchg
cmc
xor
add
push
add
clc
pop
mov
add
nop
insl
add
add
dec
pop
jne
add
out
test
cwtl
adc
add
clc
mov
push
nop
jmp
add
cmc
dec
xchg
mov
insl
sub
xor
es
inc
add
mov
cli
sbb
sahf
jl
clc
lcall
pop
add
mov
add
out
xchg
push
add
mov
stos
das
cmp
mov
xchg
scas
push
test
sub
ret
popa
mov
clc
jb
add
aaa
dec
sbb
add
jl
stos
clc
jecxz
push
add
inc
add
cli
mov
dec
ret
clc
cmp
xbegin
add
popf
cmp
add
add
ds
jb
add
clc
sysenter
movsb
clc
aas
adc
add
xchg
sub
sbb
add
insb
inc
clc
arpl
add
mov
and
add
mov
add
dec
outsb
bound
add
add
add
xor
add
adc
add
clc
ss
add
sub
cld
cwtl
leave
add
add
mov
add
add
ret
add
xchg
cmpsb
clc
xor
add
jp
clc
and
add
pop
lret
adc
add
add
dec
or
add
add
cmp
add
mov
fs
out
fsubrp
mov
add
add
inc
add
or
mov
loopne
xor
add
add
add
push
test
xchg
rorl
outsl
push
clc
and
add
add
add
clc
inc
add
imul
xchg
int3
jns
in
pop
jns
clc
sti
sbb
jmp
add
out
aam
shr
fwait
and
pop
aam
bnd
add
and
add
clc
sub
add
xlat
pop
clc
pushf
dec
js
clc
add
xor
add
scas
int3
pop
inc
add
fs
fnsave
add
ja
mov
cmp
and
add
sbb
fistl
mov
xchg
ret
xchg
aam
inc
clc
scas
aad
and
add
aas
aaa
ljmp
lea
add
fnstenv
lret
add
adc
add
clc
mov
mov
add
add
add
add
jl
in
push
add
xlat
mov
sub
jne
cmp
add
clc
imul
adc
add
addr16
notb
add
setbe
fistl
clc
fdivrs
inc
clc
or
add
add
add
add
inc
add
pusha
add
sbb
xlat
push
add
std
push
push
pop
xor
add
inc
add
and
sub
out
iret
stos
cli
lahf
mov
xabort
inc
clc
adc
xchg
push
cmp
mov
mov
and
stos
cmp
sti
adc
add
add
mov
daa
clc
arpl
add
clc
mov
out
popf
and
add
clc
daa
clc
sbb
cli
hlt
dec
pop
addr16
cmp
dec
stos
add
add
clc
sub
push
clc
mov
add
std
mov
lret
enter
jb
add
add
out
outsb
cmc
or
push
add
add
add
mov
sti
out
mov
lods
jg
fcmovnbe
xabort
pop
sbb
jae
add
add
xlat
xchg
cmpsb
clc
repnz
jbe
clc
pop
mov
adc
adc
add
gs
jg
add
scas
leave
icebp
out
and
add
addr16
mov
add
and
add
clc
pop
lcall
add
add
add
cmp
add
nop
jmp
cli
lahf
mov
jnp
sbb
mov
clc
in
or
clc
or
xchg
popa
add
adc
add
cmp
inc
and
nop
jmp
fwait
and
lods
add
cli
nop
jmp
pop
dec
orb
clc
adc
add
add
and
add
jl
clc
xbegin
add
push
add
xchg
aas
scas
insl
or
add
add
add
add
pop
cld
pop
push
dec
add
sahf
stos
mov
and
add
inc
add
stos
ja
add
bound
add
add
clc
jle
sbb
out
cmp
inc
add
xor
add
aaa
sbb
xchg
inc
add
addr16
scas
mov
mov
bound
add
gs
pop
mov
clc
cmp
add
int
mov
jo
add
add
add
test
adc
add
sbb
add
add
add
es
lea
add
in
sub
clc
push
int
add
add
add
dec
inc
clc
mov
sbb
out
dec
shl
clc
jmp
clc
push
jne
nop
jmp
add
xchg
clc
cld
mov
sbb
cmp
call
jmp
cmp
add
mov
sbb
clc
mov
sub
clc
jg
jp
adc
pop
imul
add
adc
clc
rorl
pop
dec
push
inc
clc
jge
mov
add
add
lods
lods
add
leave
cltd
jo
add
add
test
aas
and
add
pop
sub
inc
clc
leave
pop
dec
add
add
clc
cwtl
in
push
sub
push
mov
add
psadbw
xor
add
xchg
xchg
mov
add
mov
dec
aaa
jo
add
mov
ja
add
in
stc
mov
mov
mov
clc
and
add
add
add
cmp
ret
clc
cmp
dec
lret
clc
data16
mov
xchg
nop
jmp
xchg
sub
ret
enter
add
add
clc
test
lret
and
add
clc
jmp
clc
mov
loop
and
data16
dec
bound
add
pop
mov
xchg
add
adc
lahf
cmpsl
mov
clc
dec
test
cmp
push
clc
jae
add
pop
ficompl
xchg
cmp
clc
je
jne
outsl
dec
pop
out
dec
adc
add
or
mov
mov
fs
push
psadbw
sahf
sub
jecxz
icebp
enter
xor
add
cmp
add
push
mov
nop
jmp
or
gs
add
add
push
push
clc
xchg
bound
add
adc
add
jns
out
mov
stos
lahf
std
mov
add
clc
cmpsl
clc
je
jo
add
push
shrb
add
add
pushf
cmp
clc
push
clc
sahf
or
pusha
add
test
out
xchg
xchg
int3
mov
mov
xchg
ret
adc
add
add
add
clc
popf
sbb
jmp
lods
pop
out
add
movsl
clc
es
sub
add
add
pop
sub
clc
pop
inc
clc
shll
add
je
cmp
clc
jnp
cmp
lods
aam
and
insl
dec
xchg
push
add
cwtl
mov
dec
cmp
clc
sub
xchg
jg
add
mov
ja
loope
dec
daa
clc
add
add
clc
insb
mov
add
cmp
jns
add
push
clc
adc
ds
sub
outsl
mov
add
pop
mov
clc
mov
clc
movsl
clc
xor
add
push
mul
clc
cmp
nop
jmp
aam
add
add
out
loop
push
add
ss
dec
dec
sbb
mov
es
icebp
mov
jmp
add
into
int
cmp
hlt
mov
add
int3
adc
add
mov
inc
clc
push
clc
pop
insl
test
lahf
testl
movsl
clc
push
and
and
add
clc
mov
insb
inc
add
or
add
aam
aaa
mov
add
mov
jge
stos
pop
fiadds
add
jo
add
test
dec
sti
popa
add
popf
mov
jmp
int
add
cmc
ret
cmc
add
mov
nop
jmp
pushf
cli
add
mov
hlt
test
sbb
jle
clc
cmp
xchg
fwait
test
jo
add
insl
icebp
push
cmp
cmp
push
push
mov
xchg
ret
and
pop
jl
dec
cmp
daa
clc
in
int
jnp
fwait
scas
and
add
stc
sub
jb
add
add
ja
jmp
in
sub
add
nop
jmp
xchg
cltd
call
ficoml
mov
rolb
clc
xchg
jbe
clc
sbb
add
aad
imul
add
sub
clc
rcll
movsl
clc
test
or
add
add
mov
or
clc
psubw
cmpsb
clc
push
add
mov
sbb
div
nop
jmp
or
mov
pop
adc
stc
jno
add
mov
popl
add
add
add
sbb
dec
pop
push
mov
jbe
fiaddl
or
mov
clc
jge
add
mov
outsl
cmpsb
clc
and
test
xor
call
jmp
or
cli
push
out
pop
sahf
fnsave
add
dec
das
imull
add
incl
lret
inc
add
push
hlt
and
add
pop
add
cld
cltd
testl
nop
jmp
lods
add
enter
push
lods
add
icebp
adc
add
add
add
add
jecxz
mov
sbb
add
add
or
dec
test
fsts
add
push
clc
fisttps
lahf
lea
pop
mov
movsb
clc
sbb
clc
test
xor
int
fsubp
clc
sub
insl
aam
clc
pusha
add
faddl
add
cmp
cmp
clc
and
push
add
test
xor
add
lcall
pushf
xchg
mov
jne
jb
add
push
add
imul
dec
mov
clc
loopne
leave
push
clc
in
sahf
leave
add
inc
clc
and
xchg
cmp
repz
out
cmp
and
add
clc
repz
jmp
xchg
ficoms
clc
cmp
adc
add
add
stc
dec
lcall
jle
shrl
decl
add
pop
or
add
clc
mov
add
add
mov
clc
dec
dec
and
sub
clc
adc
add
clc
mov
add
add
lock
clc
jns
add
sub
mov
movsl
clc
mov
add
sbb
lock
add
in
jg
add
jle
push
imul
push
add
or
add
mov
in
jl
clc
rclb
add
out
nop
int3
into
jbe
imul
mov
inc
clc
mov
push
nop
jmp
pop
mov
add
mov
popf
nop
jmp
add
out
add
ret
int
add
addr16
test
push
clc
sbb
pusha
add
mov
push
pop
iret
jecxz
add
add
fstpt
ret
clc
xchg
xchg
push
sahf
pop
int3
int
add
iret
mov
mov
pop
cmp
pop
xchg
loop
jge
clc
push
insb
xor
add
xchg
xchg
jbe
fstpl
out
pop
jecxz
xchg
inc
clc
into
cli
or
clc
ret
clc
int
add
addr16
inc
clc
sar
je
clc
pusha
add
inc
clc
flds
add
mov
cmpsl
clc
mov
cmp
push
mov
push
mov
xchg
ret
add
enter
loop
std
aaa
jno
add
add
cmp
clc
dec
fildl
add
clc
clc
ss
clc
iret
jecxz
xchg
mov
cmp
add
add
jae
add
add
mov
inc
add
loope
int3
aas
or
lods
pop
loopne
mov
clc
jae
add
add
mov
and
add
adc
arpl
add
cmpsb
clc
cmpsb
clc
sar
in
xchg
out
scas
out
stos
std
addr16
sbb
add
xchg
cmp
add
add
clc
ret
clc
clc
jl
push
test
add
int
push
add
outsl
jb
add
aaa
aam
or
clc
movsl
clc
add
add
movsb
inc
add
lods
shrd
mov
add
push
add
or
outsl
int3
jnp
add
nop
jno
add
test
clc
fistl
enter
add
add
add
jb
add
add
jle
clc
divl
add
clc
adc
add
stc
clc
cmp
clc
jne
lret
insl
jbe
clc
dec
hlt
sbb
or
clc
dec
fwait
mov
cmp
clc
loopne
inc
clc
fildl
add
pop
aad
clc
xbegin
sahf
cmp
fadd
clc
decl
test
add
nop
jmp
adc
mov
clc
mov
mov
xchg
xchg
lea
add
mov
jns
stos
incb
int
mov
and
add
add
dec
mov
lods
repz
jne
fwait
mov
clc
mov
add
pop
push
add
in
in
cwtl
pop
pop
xchg
sub
imul
jecxz
add
add
add
aas
mov
jmp
clc
cmp
clc
jb
add
add
out
repz
jo
add
pusha
add
cwtl
adc
add
clc
xbegin
int3
sti
aas
and
add
call
rcll
add
clc
fcoml
mov
add
jge
arpl
add
clc
jo
add
aam
clc
fs
popf
xchg
lock
sub
clc
dec
pop
pop
push
out
es
push
shr
cmp
clc
test
sahf
or
jne
clc
mov
clc
sti
icebp
cmp
mov
je
nop
mov
cmc
outsl
cld
shrb
pusha
add
mov
add
dec
aaa
pusha
add
ja
clc
mov
pusha
add
fwait
scas
pop
jecxz
insb
daa
clc
dec
cmp
loop
sar
daa
clc
fdiv
stos
clc
daa
clc
jb
add
push
clc
mov
mov
clc
cmp
jle
ja
clc
push
popl
add
out
out
add
dec
pop
inc
clc
and
add
fisubs
test
insb
shll
add
clc
and
sbb
clc
in
int3
mov
add
mov
add
fwait
idivl
into
add
add
sbb
pop
xor
add
add
mov
push
jae
add
mov
jne
add
adc
mov
cmp
clc
xor
add
and
add
imul
clc
xchg
or
push
fs
fdivrs
movsl
lret
xchg
ret
add
push
add
and
add
in
stos
int
mov
daa
clc
xabort
js
stos
xor
or
ljmp
lret
push
add
xchg
in
inc
add
mov
mov
push
mov
xchg
ret
jno
int
push
or
cmpl
nop
jmp
jnp
add
clc
sti
xchg
pop
lea
add
push
add
xchg
adc
clc
cmpsl
clc
lea
mov
nop
jmp
popa
gs
adc
or
lret
pop
sar
loop
cmp
jmp
nop
jmp
leave
lods
shrd
cmp
add
xchg
and
mov
xchg
cmp
mov
or
or
add
arpl
add
clc
mov
punpckhwd
pop
clc
mov
jecxz
cmp
outsl
xor
add
mov
pop
icebp
push
add
lods
pop
clc
es
sub
outsl
xchg
insb
xbegin
add
pop
std
movsl
clc
dec
icebp
inc
add
xchg
mov
pop
cmp
pop
mov
clc
cmp
imul
inc
add
hlt
shlb
add
gs
dec
pop
clc
jo
add
push
mov
xchg
ret
add
inc
push
add
inc
add
cmc
test
add
clc
adc
add
stos
scas
xchg
sub
std
mov
add
nop
jmp
xchg
add
repnz
data16
inc
add
repnz
inc
clc
push
push
mov
xchg
ret
cmc
in
inc
clc
imul
add
cmp
clc
fucomp
xor
sar
in
jmp
mov
cmpsl
clc
xor
add
cmp
add
daa
clc
jbe
das
pop
sub
sub
add
nop
jmp
cmp
xchg
push
add
mov
clc
inc
add
cmp
lea
clc
adc
add
movsl
clc
pop
cmp
inc
add
iret
vcvtdq2ps
repz
pop
dec
dec
sbb
mov
xchg
ret
mov
mov
popf
sbb
dec
out
sbb
incl
add
fwait
js
xlat
decl
test
jmp
jns
out
clc
mulb
clc
xchg
arpl
add
add
pop
mov
setno
add
xor
adc
out
idiv
mov
pusha
add
jne
add
mov
mov
adc
add
clc
push
mov
push
clc
inc
clc
nop
push
inc
add
jmp
imul
jbe
icebp
inc
clc
add
push
jmp
sahf
cmc
add
xlat
mov
or
lret
clc
and
add
add
mov
clc
lret
cmpsl
clc
aas
xor
add
fisubs
bound
add
sub
mov
clc
addr16
ficoms
add
mov
clc
popa
add
xchg
xchg
imull
jo,pt
add
scas
dec
inc
clc
enter
jb
add
add
movsb
clc
mov
jge
add
dec
cmpsb
clc
cmc
cld
push
add
outsb
xor
add
clc
add
add
in
dec
jg
push
dec
test
add
inc
clc
inc
clc
cltd
aad
add
out
aas
xchg
loope
lods
pop
fisttpll
add
jecxz
pop
sar
and
sbb
mov
jmp
cmp
imull
clc
jl
mov
nop
jmp
jns
test
popl
or
sbb
clc
call
mov
xchg
ret
add
imul
lret
jns
fisubrl
fldcw
jae
add
ret
add
pop
cmovp
add
cs
clc
dec
negb
clc
outsb
lods
inc
add
loope
aad
xor
add
hlt
faddl
add
jecxz
xor
add
adc
push
add
out
arpl
add
in
jns
add
mov
adc
add
cmp
jno
add
and
add
add
outsl
test
lahf
movsl
clc
das
imul
fistpll
add
dec
or
scas
bound
add
stos
inc
clc
mov
dec
mov
sahf
rcr
xlat
adc
jp
dec
popa
add
sti
ret
xchg
jl
clc
and
add
es
and
add
push
lods
pop
push
add
jno
add
add
push
aaa
in
pop
clc
and
add
outsb
shr
add
add
mov
add
popf
mov
in
jo,pt
add
jns
sbb
jae
add
sbb
nop
jmp
adc
and
std
xor
cmp
clc
nop
xor
add
xchg
fcompl
scas
or
mov
xchg
ret
aam
add
sub
clc
sub
pop
xor
add
add
out
dec
out
sub
add
sbb
add
idiv
lea
add
cmp
xor
add
aad
push
mov
xbegin
push
add
inc
clc
daa
clc
aas
cmc
adc
add
add
imul
add
sar
add
jae
add
clc
insb
cltd
jmp
arpl
add
add
add
sbb
jl
add
nop
jmp
leave
sarl
push
pusha
nop
jmp
lods
add
xchg
aam
inc
add
loope
incb
adc
add
clc
sbb
xchg
add
cli
and
mov
jg
nop
jmp
mov
ds
jg
add
inc
add
xor
add
clc
out
aaa
inc
add
out
stos
or
jecxz
adc
add
mov
cmc
or
push
mov
add
add
outsb
inc
clc
imul
mov
scas
sbb
and
std
test
and
daa
clc
pop
std
adc
add
add
cmp
scas
vorps
stc
dec
lret
imul
inc
add
xchg
notl
cmp
jmp
pop
sahf
pop
out
add
movsb
clc
mov
sub
pop
mov
xchg
in
jne
pop
clc
loopne
js
add
repnz
popa
add
loopne
int3
pop
fs
clc
test
mov
add
sahf
ss
cli
or
add
loopne
push
add
push
xchg
in
xchg
sbb
cmp
mov
insb
inc
jb
nop
jmp
jno
pop
adc
stc
int3
cmp
clc
mov
clc
repnz
inc
add
add
sbb
nop
jmp
pop
mov
scas
sub
cmp
add
lret
cmp
add
clc
xabort
clc
dec
or
add
mov
negl
add
mov
add
mov
sbb
push
lods
cmp
clc
inc
add
cmp
add
add
in
mov
aas
fs
push
add
jbe
pusha
add
mov
mov
xor
add
pop
cmc
stc
jl
jb
add
clc
outsb
notb
aaa
out
jne
int3
aaa
repnz
mov
add
outsl
test
aaa
fstp
dec
sub
push
rcll
add
iret
ja
add
add
add
inc
add
clc
mov
mov
jne
add
gs
into
loopne
hlt
je
das
pop
lret
add
cwtl
fisubrl
pop
insb
cld
loop
lcall
add
push
add
and
add
cmp
add
and
pop
and
lret
jecxz
gs
stc
xbegin
clc
mov
stc
ret
clc
cmpsl
clc
rorb
test
jbe
shll
add
add
mov
aaa
add
ret
xor
adcb
pop
push
sbb
mov
push
add
cmp
sub
cmp
xchg
dec
out
cmp
out
fwait
jecxz
sbb
mov
dec
aaa
int3
xbegin
sar
cmp
xor
add
int
pop
cmp
clc
xor
add
add
push
add
inc
add
jmp
nop
jmp
add
xchg
dec
pop
dec
lret
fidivs
xor
add
sahf
hlt
stos
xor
add
lcall
sarb
inc
clc
add
add
mov
add
add
insl
dec
adc
clc
xbegin
stc
int
push
add
mov
fdivrp
into
addr16
movsl
clc
inc
clc
jmp
adc
add
add
gs
adc
add
clc
xor
add
clc
sub
jle
jb
add
data16
lods
sub
jl
clc
add
add
shlb
xor
xor
add
adc
imul
dec
xor
add
and
mov
lea
add
add
inc
clc
cmp
pop
clc
loop
jp
mov
and
adc
add
add
sub
pop
lods
mov
add
xlat
and
add
add
or
or
gs
xor
add
cmpsl
clc
nop
enter
jle
sbb
nop
jmp
lods
cli
adc
xchg
add
add
nop
jmp
add
ud2
or
or
pop
lret
jmp
add
je
add
mov
movsl
clc
xor
add
jbe
jecxz
nop
dec
add
add
pop
xchg
cmp
js
adc
add
sub
cvttps2pi
add
clc
into
xchg
punpckhwd
clc
in
mov
clc
arpl
add
add
daa
clc
mov
fdivrp
push
call
enter
inc
clc
lods
aas
jl
mov
jge
sbb
add
sti
mov
addr16
iret
or
add
out
pop
clc
data16
or
jnp
movzwl
nop
jmp
out
fwait
add
and
add
stos
add
ljmp
add
in
mov
xchg
call
xlat
mov
hlt
hlt
cwtl
jno
add
pop
rorb
adc
roll
add
lock
clc
mov
lcall
jmp
inc
aam
add
das
popf
dec
fcoms
add
xbegin
clc
jmp
add
nop
jmp
lods
add
add
clc
dec
or
clc
or
stos
mov
add
cmpsb
clc
pop
test
fistl
add
sbb
pop
daa
clc
and
push
add
adc
add
cld
mov
push
add
add
es
cmpsl
clc
sbb
add
aaa
or
push
xchg
xor
add
movsb
clc
pop
push
add
sti
aaa
dec
ljmp
inc
add
mov
adc
clc
fidivl
add
mov
aaa
mov
nop
add
add
add
fwait
or
je
clc
dec
mov
lcall
arpl
add
xor
add
jb
add
inc
clc
mov
jg
jo
add
add
cmc
mov
test
cltd
add
add
clc
cmp
clc
cmpsl
clc
mov
add
jae
add
clc
mov
xabort
jmp
shlb
add
cwtl
into
cmp
inc
add
add
add
stos
or
add
add
bound
add
add
add
mov
clc
mov
clc
std
in
xor
add
and
add
jl
cmp
clc
jmp
in
add
add
clc
test
loope
fs
jge
cwtl
clc
rcll
xor
mov
add
leave
sub
and
add
add
mov
mov
xchg
inc
clc
xabort
clc
insl
sbb
jmp
and
add
inc
add
icebp
lods
pushf
test
fucomip
adc
add
sar
xbegin
lods
stc
jg
cmc
cmp
pop
in
pop
push
add
mov
mov
nop
jmp
push
or
lods
add
jno
pop
notb
add
ljmp
pop
push
mov
xchg
ret
stos
inc
adc
das
rcr
xchg
test
push
clc
testl
clc
or
push
mov
xchg
ret
add
nop
iret
jno
add
fdivr
fwait
or
xchg
out
loope
rcrl
and
add
fldl
cmp
jbe
cmp
clc
or
in
sub
add
add
clc
idiv
aas
out
mov
fbstp
add
and
add
iret
push
add
and
popa
add
aaa
xor
add
ds
add
pop
fwait
outsl
pop
and
add
clc
xchg
mov
mov
xchg
ret
xor
jmp
sub
add
inc
clc
cmp
cld
pop
insl
fcoms
mov
insl
jo
add
out
repz
add
mov
xchg
inc
clc
inc
clc
mov
stos
dec
lret
cmp
add
sbb
clc
fwait
loopne
or
dec
ljmp
add
cmp
add
divb
add
pop
cmp
inc
clc
test
or
or
nop
jmp
out
pushf
adc
lods
add
add
imul
and
add
test
inc
clc
icebp
adc
testb
jnp
clc
sarl
out
insl
ret
clc
flds
ja
stos
pop
clc
ret
fildl
add
adc
add
les
nop
jmp
js
mov
push
mov
xchg
ret
and
sub
clc
sub
cwtl
mov
clc
xabort
ljmp
clc
jge
pop
pop
roll
add
sbb
add
add
clc
scas
aas
xabort
jo
add
adc
clc
jmp
clc
push
jae
add
xchg
popa
add
in
cmp
leave
and
add
dec
sar
or
cmp
clc
sbb
add
pusha
add
add
add
aaa
or
xor
add
add
push
clc
scas
push
fsubrl
jb
add
clc
fldcw
and
add
xor
add
jp
clc
shlb
addr16
sub
mov
add
add
adc
pop
cmp
push
mov
xchg
ret
add
test
xor
lahf
fcmove
xchg
stos
mov
add
stos
fcomps
mov
cwtl
push
add
nop
jmp
add
mov
add
and
and
paddsw
clc
push
adcl
add
add
push
xchg
aad
clc
adc
add
cmpsb
clc
gs
add
add
xchg
leave
pop
mov
pop
pop
xchg
test
mov
lods
aas
xchg
mov
cmpsb
clc
imull
jmp
ja
insb
mov
push
mov
sbb
pop
sbb
psubw
test
jl
mov
lahf
push
dec
push
mov
xchg
ret
add
add
cltd
dec
dec
loopne
sbb
nop
jmp
push
xor
cmp
add
clc
pop
mov
jns
xchg
inc
clc
jb
add
fdiv
into
mov
or
js
add
inc
add
xor
add
pop
push
out
scas
sbb
je
mov
clc
int3
xchg
mov
add
iret
push
sub
notb
imul
clc
push
add
dec
jecxz
call
jg
or
add
jne
fstl
fwait
sbb
xor
add
pushf
pushf
es
pop
mov
sar
stc
aaa
lcall
push
subl
nop
jmp
popa
jno
cmp
xchg
idivl
aad
aam
jo
add
add
mov
clc
jb
add
jns
addr16
fucom
clc
mov
out
jmp
ret
fs
ljmp
clc
aad
clc
outsl
bound
add
cmp
fimull
pop
mov
xabort
clc
lret
jge
lock
add
clc
add
clc
dec
adc
add
clc
adc
add
clc
sub
sub
lea
push
inc
clc
and
add
add
pop
clc
xor
add
test
dec
push
clc
or
jae
add
clc
aaa
xchg
pop
sar
jl
ret
sub
add
movsl
clc
outsl
mov
clc
xchg
mov
clc
dec
pop
cmp
add
adc
add
add
add
mov
jle
pop
sbb
jge
clc
mov
ljmp
or
add
fidivrs
adc
add
add
mov
cltd
out
loopne
pop
scas
mov
mov
jbe
xor
add
rolb
add
stos
pop
scas
mulb
loope
data16
cmp
add
and
push
jb
add
add
add
xlat
sar
clc
sub
clc
fs
mov
ret
nop
jmp
or
sahf
stos
add
pop
mov
mov
pop
clc
xor
add
add
pop
dec
inc
clc
add
add
pop
icebp
adc
or
pop
xchg
scas
cmpsb
clc
push
repnz
add
cs
enter
clc
dec
loopne
xor
addr16
pop
data16
js
mov
add
sub
imul
inc
add
or
add
or
clc
insl
push
add
js
jecxz
icebp
xchg
push
mov
loopne
movsb
clc
data16
jecxz
add
add
stos
gs
out
adc
cmp
cld
nop
jmp
enter
mov
cmp
add
out
lcall
sub
scas
mov
jmp
jnp
add
mov
cmp
and
add
ficomps
leave
mov
sub
in
inc
add
add
add
add
add
cmp
stos
pop
popf
mov
aaa
inc
add
pushf
mov
dec
inc
add
or
inc
add
cmp
clc
sti
int
mov
lods
fnstenv
add
sahf
cmp
push
or
mov
jmp
add
ss
repnz
jg
popf
inc
clc
mov
add
mov
inc
add
mov
add
call
sar
out
lcall
lret
mov
push
movsb
clc
ss
jmp
or
enter
xor
mov
clc
imul
add
xchg
add
cmp
clc
inc
add
inc
clc
imul
jmp
lods
enter
in
mov
jne
add
movsl
clc
jp
add
jo
add
add
fbld
jmp
clc
lea
add
out
cli
movsl
clc
mov
mov
push
add
add
js
std
or
in
inc
add
cmp
clc
std
xchg
and
add
or
add
mov
clc
in
push
push
pop
add
enter
ret
add
add
nop
jmp
adc
aam
add
and
add
add
inc
clc
lods
xabort
clc
std
xbegin
add
clc
outsl
adc
add
cmpsb
clc
scas
cltd
ret
mov
int
out
jbe
clc
stc
mov
mov
es
popf
nop
xchg
cmp
xbegin
xchg
fld
clc
adc
add
idivb
push
clc
xchg
int3
xor
clc
cld
fbstp
add
rorb
aas
push
dec
fldenv
aaa
mov
imul
xchg
cmp
push
stos
stos
or
add
clc
scas
aas
or
add
add
xchg
pop
iret
xor
add
cli
xabort
clc
fs
push
pop
nop
jmp
jns
xor
sbb
pop
clc
cmp
mov
mov
and
add
jo
add
add
add
add
lock
add
add
jg
add
inc
add
pop
cld
outsl
jns
gs
mov
nop
xabort
clc
jns
clc
scas
or
clc
cwtl
scas
test
in
ljmp
mov
out
nop
cmp
add
cmp
add
mov
sbb
push
and
add
clc
sbb
bound
add
add
xchg
adc
add
scas
ret
clc
jns
scas
pop
pop
clc
mov
inc
clc
cli
sahf
and
add
add
add
fwait
sahf
push
lea
push
push
add
pop
int3
cmp
clc
xor
add
add
pushf
jb
add
push
add
xor
mov
clc
mov
or
xor
add
sub
add
pop
cmc
in
xor
add
adc
cmp
clc
xabort
int3
xor
add
adc
add
clc
addr16
sahf
enter
add
or
ljmp
mov
bound
add
xchg
xlat
gs
scas
cs
jmp
clc
mov
lods
stos
and
xor
add
fisubrl
in
fistl
add
adc
add
add
or
popf
cmp
clc
lock
add
inc
clc
pop
pop
push
sbb
push
add
shlb
add
addr16
sarb
mov
cs
jno
add
clc
or
clc
dec
xchg
push
nop
jmp
pop
add
clc
mov
add
fidivrl
xchg
sbb
mov
clc
into
dec
sbb
inc
add
out
add
add
inc
add
pop
adc
add
dec
mov
and
add
add
and
clc
dec
fmull
dec
add
cmc
jne
clc
mov
pop
clc
stc
inc
clc
std
mov
sar
mov
add
in
add
add
add
faddl
add
jl
sbb
push
mov
nop
jmp
add
add
jns
add
lcall
sbb
push
shl
nop
jmp
out
add
and
add
push
shl
clc
cmp
std
into
addr16
adc
add
add
sahf
cmpsb
clc
and
add
add
cmp
jnp
rorb
aaa
adc
add
push
mov
push
dec
ja
mov
xor
add
add
cld
push
add
std
push
add
testl
fcoms
add
loopne
inc
clc
addr16
lods
cmp
out
jns
add
pop
out
jbe
add
add
dec
xor
ss
cmpsb
clc
pop
in
cld
xor
add
lock
roll
sbb
clc
icebp
pop
loopne
xchg
pop
clc
cltd
fs
sub
xchg
and
add
pop
cmp
clc
adc
add
add
or
add
pop
xabort
adc
add
xor
add
clc
faddp
clc
test
loopne
popf
js
lock
cmpsl
clc
mov
add
clc
push
clc
lock
add
jmp
mov
add
incl
dec
cmp
jmp
popa
xchg
aam
mov
nop
jmp
out
stos
cmc
cmc
mov
insb
call
loop
aas
cmovnp
mov
aaa
into
int3
cmp
leave
negb
push
add
mov
out
xchg
inc
clc
xor
add
rcrb
add
cmp
fs
sub
insb
into
scas
aam
inc
add
stos
cwtl
jecxz
clc
fcomps
aaa
loope
pop
insb
movsb
clc
das
in
cmp
clc
jl
push
add
movsb
clc
sarb
int
jecxz
dec
cmp
add
das
ret
clc
push
clc
outsb
pop
lods
jb
add
add
repnz
mov
movsl
clc
jb
add
sar
aas
sbb
push
mov
xchg
ret
add
popa
ljmp
loop
xlat
pop
in
and
add
add
inc
add
aam
clc
jecxz
rclb
add
sub
and
sub
clc
gs
scas
push
sarl
mov
clc
jae
add
sar
pop
mov
push
mov
pop
cli
aad
jns
clc
sti
xchg
jns
clc
add
add
add
add
mov
clc
in
ror
bound
add
jo
add
clc
mov
incl
lods
popl
cmp
mov
xchg
add
add
mov
clc
pusha
add
nop
push
add
mov
clc
imul
xor
add
scas
xchg
ret
clc
adc
add
mov
adc
stc
clc
cld
lea
mov
clc
clc
loopne
sahf
xor
imul
xchg
mov
clc
mov
ficompl
mov
clc
lock
sar
mov
mov
push
cltd
push
add
pop
shlb
add
pop
mov
jb
add
nop
jmp
jno
adc
add
add
imul
or
clc
movsb
clc
push
push
add
stos
notb
add
out
popf
dec
dec
cmp
mov
clc
mov
ss
add
fs
xor
aam
inc
clc
insb
pop
popf
sti
scas
mov
jae
add
insb
xor
add
cmpsb
clc
dec
inc
clc
mov
testb
sbb
add
mov
clc
sbb
clc
pop
adc
addr16
cmpsl
clc
dec
repnz
clc
pop
imul
jg
js
clc
cmp
cmp
outsl
scas
sub
add
clc
fiaddl
or
xor
add
out
add
test
stc
filds
mov
mov
add
movsb
clc
sbb
add
fidivl
push
pop
fwait
mov
clc
sub
lods
or
mov
shll
add
loopne
pop
mov
mov
clc
mov
add
nop
jmp
add
add
in
testb
into
out
xchg
mov
nop
jmp
add
popl
clc
rorl
sub
clc
xabort
clc
sbb
cmp
add
push
add
and
add
enter
add
and
add
scas
gs
lret
pop
out
faddl
xbegin
add
dec
push
rolb
add
bound
add
sti
mov
add
popa
add
fcoml
add
dec
std
mov
adc
das
ljmp
int3
cli
add
add
add
clc
add
add
sar
add
jae
add
addr16
cmp
cli
and
add
xchg
dec
add
add
call
ret
clc
fisttpll
test
adc
add
add
daa
clc
sti
sbb
xor
add
fildl
add
add
dec
sub
int3
jo
add
fcmovbe
cmp
dec
mov
add
imul
add
mov
sub
xchg
ret
add
add
out
cmp
int
push
mov
add
and
add
add
mov
fidivl
add
add
decl
dec
pop
add
popa
adc
lahf
or
pop
loop
jp
mov
xchg
repz
jmp
nop
jmp
out
sub
or
push
mov
clc
jno
add
jecxz
inc
clc
and
add
xchg
push
clc
push
push
call
add
clc
mov
xchg
dec
push
xor
push
mov
xchg
ret
enter
jp
clc
insl
jmp
nop
jmp
add
add
sub
add
shl
icebp
je
jbe
adc
add
add
pop
cmc
sbb
int
add
jl
cs
js
js
test
vmulps
xor
jecxz
clc
jle
pop
mov
jb
add
add
mov
icebp
imul
xchg
movsb
clc
in
cmp
jmp
out
mov
clc
cmp
cwtl
or
outsl
xchg
or
je
add
lahf
mov
sbb
cmp
add
nop
jmp
xchg
fwait
mov
clc
and
add
jbe
clc
pop
mov
out
insl
and
add
ret
clc
rolb
add
fnstsw
mov
add
xchg
cmpsb
clc
loop
ds
std
or
clc
popf
or
cmp
xchg
jb
add
data16
cmp
dec
fwait
imul
add
add
in
mov
cmp
stc
or
notb
dec
push
add
or
lret
sarl
test
cs
pop
rorl
clc
imul
clc
in
ja
data16
icebp
pop
mul
clc
out
std
lods
adc
pop
mov
lret
xchg
jnp
xor
add
arpl
add
mov
adc
add
add
mov
fldl
sbb
aas
test
popl
add
and
add
imul
clc
jl
add
leave
mov
mov
push
mov
xchg
ret
pop
pop
push
clc
and
add
or
pop
lock
outsb
bound
add
lahf
mov
jns
popf
int3
std
mov
add
mov
nop
jmp
mov
add
add
stos
cmp
mov
in
movsb
clc
pushf
xor
add
ja
adc
mov
movsb
clc
add
mov
ja
clc
mov
test
push
insl
repnz
loope
bound
add
icebp
add
add
add
ret
clc
add
add
pusha
add
or
add
adc
jne
nop
jmp
add
cmpl
mov
adc
stos
jg
ja
stc
xchg
aad
cmp
or
jmp
pop
cmc
adc
movl
add
nop
jmp
xor
enter
hlt
push
add
out
out
adc
add
add
add
pushf
and
add
adc
add
mov
nop
jmp
mov
pusha
add
cwtl
cwtl
adc
push
pusha
nop
jmp
or
enter
clc
stos
jge
push
add
sbb
add
ss
pop
aas
outsl
add
add
xchg
psllw
add
movsl
clc
jl
clc
adc
out
addr16
jge
clc
lods
pop
scas
add
int
add
inc
add
stc
pop
jp
ljmp
pop
sar
clc
xchg
inc
add
int
sar
cmp
mov
nop
jmp
cli
out
add
clc
jge
add
dec
cmpsb
clc
mov
clc
lahf
je
test
add
xchg
dec
ret
push
mov
ret
clc
jno
add
clc
pop
fldt
add
ret
jle
sbb
add
icebp
inc
clc
addr16
std
jmp
in
pop
pop
mov
inc
add
iret
push
test
insl
fwait
clc
mov
add
fcom
or
add
or
nop
jmp
sbbb
sub
or
sbb
nop
mov
clc
int3
inc
add
mov
push
nop
jmp
jnp
js
pop
mov
cmpsl
clc
push
add
call
cmp
jmp
lods
jno
xchg
push
sbb
inc
clc
jno
add
pop
in
pop
jge
clc
dec
jge
jmp
pop
dec
sar
imul
test
push
dec
out
inc
add
inc
add
inc
add
cli
decl
jmp
mov
pop
push
gs
sbb
pusha
nop
jmp
adc
and
xchg
rep
mov
add
add
clc
scas
mov
push
add
pop
xbegin
loop
popf
jns
mov
ss
add
nop
inc
clc
xlat
popf
pop
xor
add
dec
aam
pop
push
add
push
jecxz
lods
adc
add
mov
push
add
add
into
pop
sub
clc
in
cmc
inc
clc
sbb
add
lea
fildll
mov
sub
aad
ja
and
add
xor
add
pop
pop
push
fs
sar
enter
adc
add
or
add
xor
dec
enter
inc
add
sti
dec
sbb
clc
imul
dec
sti
or
add
add
std
mov
add
int
clc
jno
add
clc
sbb
clc
xchg
push
add
sub
dec
cmpsl
clc
test
sbb
outsl
arpl
add
add
xchg
mov
add
popf
psubsb
mov
cmp
add
fists
stc
mov
add
and
add
addr16
cmc
stos
inc
clc
mov
clc
movsb
clc
xchg
cs
sahf
xor
shld
movsb
clc
mov
clc
cwtl
jo
add
mov
add
cmp
adc
add
add
mov
jo
add
fiadds
add
testl
add
lret
sar
add
jbe
add
sahf
adc
add
clc
mov
adc
add
repnz
push
add
dec
mov
jb
add
add
cmpsb
clc
push
jge
add
and
ja
add
data16
xchg
mov
clc
xchg
dec
and
add
clc
sti
cwtl
sub
clc
bound
add
clc
mov
sti
and
mov
inc
add
mov
add
imul
clc
shrb
fdivr
adc
add
addr16
movsl
clc
es
sub
decl
incl
sub
stos
jns
jno
add
lods
dec
ljmp
pushf
sahf
not
and
add
or
mov
add
in
imul
adc
lret
cmpsl
clc
cmc
adc
add
add
sbb
add
push
jg
clc
jo
add
add
fmull
clc
dec
dec
push
push
add
iret
push
sbb
aas
ret
clc
sub
push
add
fnsave
add
imul
inc
clc
add
add
insl
xabort
cltd
iret
sar
adc
ret
clc
sbb
inc
add
clc
sbb
lods
add
add
aaa
jb
add
mov
xchg
ret
pop
mov
mov
push
add
pop
push
add
mov
std
fsubp
clc
out
push
and
movsl
clc
jle
int
add
notl
pusha
add
xchg
xchg
push
clc
sbb
enter
jns
add
sub
imul
clc
test
lcall
push
clc
xchg
loop
mov
add
arpl
add
or
add
jb
add
add
cmpsb
clc
int
pop
pop
ljmp
push
add
scas
mov
add
stos
imul
fisubrl
lods
clc
pop
jns
ss
int
pop
loope
enter
push
dec
fdivrs
add
lods
cld
jp
add
stos
fistpl
add
pop
sar
mov
clc
push
add
dec
xor
mov
in
test
mov
or
sahf
dec
jge
add
lret
mov
add
add
into
fildll
cmp
sbb
push
clc
sbb
clc
push
out
mov
clc
pop
mov
clc
inc
add
pop
push
add
neg
xor
add
lret
pusha
add
adc
add
dec
adc
add
add
push
add
mov
cmp
jle
push
mov
nop
jmp
mov
clc
xchg
cltd
jae
add
cmpsl
clc
pop
clc
fsts
add
add
mov
nop
jmp
adc
xchg
push
add
call
mov
add
or
je
nop
jmp
adc
jle
add
pushf
js
inc
clc
pop
clc
pusha
add
ja
mov
cmp
aas
je
and
add
pop
clc
loope
jmp
clc
dec
mov
mov
nop
jmp
jns
add
xor
add
jle
dec
insl
inc
add
mov
cmp
cmp
jmp
mov
and
lock
clc
faddl
clc
lods
jle
clc
scas
in
int3
or
clc
xchg
jne
jns
clc
xabort
cwtl
test
loopne
shl
xor
add
clc
add
add
clc
out
pop
mov
push
clc
cmp
xchg
xchg
frstor
add
nop
jmp
jnp
add
sub
xchg
pop
xabort
xchg
sar
stos
push
clc
adc
add
lcall
jmp
pop
xor
pushf
mov
mov
push
add
push
stos
nop
jmp
add
popa
cmc
adc
cmpsl
clc
sti
fs
sbb
mov
call
clc
sar
mov
add
pop
inc
clc
and
add
add
jmp
sub
clc
adc
add
push
add
lods
xchg
inc
add
push
gs
mov
clc
movsb
clc
dec
xchg
add
add
add
add
add
mov
aaa
ljmp
clc
xlat
xabort
add
cmp
pop
adc
add
gs
clc
pop
jp
add
scas
mov
jnp
jne
loop
and
add
mov
cmp
insb
push
pop
aaa
hlt
test
mov
mov
push
nop
jmp
add
std
push
mov
jge
aaa
stc
sar
add
fs
xchg
fidivrl
mov
and
add
add
loop
jae
add
mov
mov
fadds
add
mov
adc
add
lahf
loop
inc
add
or
mov
push
inc
add
add
add
clc
mov
repz
sar
clc
ret
clc
jge
insl
and
add
add
sbb
jmp
popa
out
cli
add
or
pop
clc
lret
mov
add
push
loope
xchg
jle
add
xor
add
mov
repnz
add
cmp
cld
mov
jmp
sarb
clc
call
clc
sar
mov
nop
jmp
std
mov
xchg
jle
fsubrl
leave
loope
xor
add
mov
xchg
xor
add
pop
mov
add
stc
or
sahf
gs
popl
add
nop
jmp
roll
adc
popa
add
push
add
jbe
imul
mov
adc
add
loope
xchg
insb
sbb
aas
pop
push
ja
add
xchg
enter
xchg
sar
imul
nop
jmp
xchg
sub
enter
clc
pop
dec
stc
adc
add
and
add
push
dec
negl
sbb
gs
mov
add
cmp
add
inc
add
hlt
mov
add
add
pmulhw
popa
add
and
sbb
in
sar
mov
sar
sbb
add
clc
sub
add
sub
clc
cmp
clc
lahf
in
shrl
clc
movsb
clc
leave
or
add
clc
push
or
add
or
adc
test
pop
adc
add
adc
add
js
sub
inc
add
cmp
std
sti
lahf
ja
mov
mov
xchg
ret
and
add
loopne
mov
add
dec
mov
clc
lahf
pop
shrb
clc
ret
clc
aas
mov
or
push
stc
pop
adc
add
cmp
icebp
and
add
ja
call
add
xbegin
inc
add
sbb
cwtl
inc
clc
mov
stc
xor
add
add
add
stc
jbe
add
inc
add
xchg
sbb
mov
xchg
ret
gs
lods
bound
add
icebp
scas
ret
sub
sar
sar
dec
xbegin
clc
cwtl
xor
or
clc
enter
clc
inc
add
pop
imul
out
in
add
add
mov
jnp
add
testl
xbegin
push
mov
xchg
ret
xchg
enter
add
xor
nop
jmp
rcrl
dec
inc
clc
inc
clc
pop
pop
dec
ss
in
push
jbe
clc
bound
add
clc
jecxz
add
add
add
mov
add
mov
clc
clc
and
push
add
add
clc
fwait
sarb
in
inc
clc
xchg
sub
aaa
sti
xor
inc
clc
js
add
inc
clc
xlat
leave
push
clc
push
sub
lret
je
fs
mov
clc
cmp
mov
add
jno
add
jmp
jno
stos
mov
aaa
in
pop
dec
xchg
sbb
adc
mov
add
jo
add
xchg
popa
add
sbb
push
add
xor
add
add
add
add
mov
add
jb
add
insl
cmc
out
xor
add
hlt
clc
xabort
mov
cmovns
sub
mov
test
clc
pop
or
add
stos
into
incl
pause
jmp
xchg
gs
sahf
add
sbb
inc
clc
pop
out
cli
clc
iret
xbegin
pop
lahf
rorl
jle
lcall
out
mov
ljmp
test
repz
add
push
pop
clc
pop
adc
sar
test
add
xor
mov
dec
gs
inc
add
cmpsl
clc
cld
xor
add
add
sbb
add
add
add
add
aam
add
adc
add
add
stc
cmp
ja
hlt
inc
clc
pop
and
add
mov
xchg
ret
add
clc
dec
jno
add
out
dec
imul
clc
pop
adc
add
clc
pushf
mov
icebp
mov
cli
cmp
or
add
pop
dec
sub
popa
add
and
add
clc
ds
mov
clc
test
cli
push
add
cmp
push
add
or
cltd
inc
add
popa
inc
out
clc
pop
movsb
clc
fnstsw
push
nop
jmp
out
add
xchg
and
jmp
clc
and
add
clc
fwait
vmovaps
imul
addr16
rolb
add
jge
dec
push
add
xchg
xchg
push
test
nop
jmp
and
or
jg
shr
nop
jmp
enter
roll
mov
imul
clc
mov
clc
add
jg
into
xchg
clc
cmp
clc
mov
cmpsl
clc
xchg
sub
loopne
negl
cld
stos
lcall
add
es
cmpsb
clc
jno
add
fsts
add
loope
add
add
add
push
clc
lahf
or
clc
sbb
nop
jmp
add
add
fsubs
dec
cmp
in
jg
add
push
mov
nop
jmp
adc
sahf
add
fwait
loope
leave
iret
hlt
or
mov
nop
jmp
add
add
lods
std
jno
stc
mov
mov
add
clc
jns
or
pop
aas
add
nop
jmp
jno
or
or
pop
clc
push
sbb
clc
push
jbe
clc
cmc
jecxz
jmp
mov
push
add
addr16
out
insb
cld
xor
add
clc
cmp
lret
add
xor
add
fisubrl
add
cmp
cld
cmp
rclb
add
scas
pop
add
inc
clc
adc
add
sti
rcl
xchg
mov
clc
cwtl
sub
xor
fiadds
adc
mov
out
pop
hlt
cli
hlt
or
clc
jno,pn
add
inc
clc
xchg
lods
or
clc
mov
pop
add
add
lahf
sub
iret
inc
add
cmp
push
clc
dec
sub
clc
mov
lods
dec
cs
adc
add
in
and
and
add
mov
clc
mov
add
xor
clc
aad
cmp
dec
std
test
cli
sahf
scas
inc
add
sbb
add
int
cmpsl
clc
push
std
gs
lret
clc
sbb
and
mov
ja
clc
dec
push
cmp
ja
push
clc
int
push
add
adc
add
bound
add
clc
push
jmp
popa
nop
jmp
std
gs
gs
add
add
fwait
push
out
cmp
add
xchg
sub
js
clc
mov
cmp
rcll
clc
lea
repz
mov
xchg
ret
mov
ja
cmpsb
clc
cmp
mov
clc
lea
add
add
xabort
dec
dec
das
push
dec
movb
sub
ret
mov
stos
es
dec
and
add
das
inc
add
icebp
pop
scas
in
mov
std
stos
mov
dec
jbe
js
and
add
sar
push
add
xor
add
add
add
sub
sub
test
pushf
inc
add
out
addr16
jno
add
jae
add
xchg
jnp
leave
ja
clc
jbe
enter
test
mov
add
pop
cmp
or
jo
add
add
sbb
jmp
pop
jno
mov
pop
jl
mov
nop
jmp
or
sub
ret
gs
insb
cmp
jge
scas
xor
add
clc
mov
lahf
xchg
filds
push
jg
inc
add
fdivrs
inc
add
sbb
dec
fbstp
into
sbb
sbb
call
gs
mov
push
call
cmc
test
cmp
add
mov
adc
add
loop
sar
jno
add
stos
addr16
int
lea
nop
jmp
ret
mov
clc
inc
add
xor
add
add
stos
loopne
aas
rclb
add
cltd
ljmp
add
outsb
cmpsb
clc
imul
out
inc
clc
sldt
add
add
mov
clc
dec
pushf
aaa
stc
xchg
outsl
int3
sar
sub
imul
popa
add
js
clc
je
push
call
lcall
add
jp
add
mov
add
add
mov
mov
rep
push
mov
xchg
ret
add
add
test
clc
filds
inc
clc
sbb
sti
js
clc
jecxz
scas
push
push
call
add
insb
mov
cmp
add
adc
test
push
gs
cmp
or
jmp
add
add
add
mov
nop
jmp
out
js
mov
add
fistps
and
add
push
sar
add
jmp
xchg
daa
clc
fildl
clc
fwait
dec
add
and
add
rcll
mov
add
mov
add
clc
and
add
clc
sub
call
and
nop
jmp
cmpsl
dec
std
and
xor
push
mov
xchg
ret
cmc
add
clc
inc
add
cmp
push
add
sub
add
cmp
clc
or
shrb
clc
mov
jb
add
add
pop
jnp
clc
out
std
pop
arpl
add
repnz
in
fisubrl
xor
add
or
fdivl
mov
clc
mov
mov
add
mov
icebp
adc
add
and
fildl
push
addr16
test
wrmsr
add
add
add
clc
mov
jne
add
cmpsl
clc
dec
cmpsl
clc
out
in
push
daa
clc
popa
add
xor
add
clc
mov
jo
add
cmp
mov
sbb
ret
add
adc
add
push
adc
add
enter
stos
or
hlt
adc
add
add
or
mov
nop
jmp
lods
push
add
adc
add
or
xor
add
and
add
xabort
sub
mov
movsb
nop
jmp
pop
std
add
clc
scas
adc
add
mov
and
add
data16
cmp
jnp
clc
mov
add
mov
dec
xchg
insb
jns
clc
lret
add
cs
cmp
dec
sub
sub
add
sbb
notl
add
add
add
cwtl
movsb
clc
loope
dec
jle
add
pop
jg
dec
aaa
inc
add
repz
jnp
out
inc
clc
cmp
dec
aas
lret
arpl
add
add
clc
test
xlat
adc
add
clc
fmull
add
add
or
xor
add
add
inc
add
gs
stc
test
pop
ret
clc
sub
add
lods
cmp
and
add
mov
cltd
jae
add
sub
pop
or
add
add
pop
sbb
sub
pushl
mov
int
std
aad
test
in
insb
adc
add
cmp
mov
add
cmp
clc
cmpsb
clc
fdivs
add
clc
in
sub
xchg
aas
insl
aaa
es
push
push
add
mov
jecxz
nop
aam
or
add
negb
push
and
sub
incl
add
xchg
jo
add
sbb
clc
cmpsb
clc
cli
aas
add
add
rcl
jns
clc
ja
cli
aaa
std
push
clc
out
repz
out
push
add
popf
adc
pop
clc
es
jne
clc
cmp
nop
mov
mov
add
add
clc
xbegin
clc
cmc
adc
add
push
jb
add
clc
cli
test
mov
jns
dec
adc
add
aad
in
test
add
pop
push
repnz
repnz
call
nop
jmp
out
add
in
cmp
jne
sbb
out
movsl
clc
call
add
push
adc
add
inc
add
or
add
imul
mov
pop
pop
jmp
add
incb
push
clc
xor
add
clc
loopne
inc
add
adc
add
xor
mov
push
add
clc
fs
mov
test
pop
xchg
daa
clc
scas
lock
sar
add
cld
push
clc
es
mov
add
pop
push
mov
xchg
ret
add
add
aam
sbb
sar
arpl
add
xor
add
cmp
test
push
mov
xchg
ret
mov
pause
jmp
add
sbb
ficoms
xchg
push
cld
mov
clc
xbegin
xor
mov
cltd
loop
imul
xor
inc
add
cmpsl
clc
leave
and
add
mov
add
clc
push
push
add
int
mov
nop
jmp
cmp
and
add
add
scas
sbb
add
push
and
add
inc
add
jmp
pop
js
add
and
adc
in
mov
jb
add
add
jl
aas
sar
inc
add
hlt
xchg
pop
xor
add
add
insl
lock
sbb
push
nop
jmp
pop
fwait
lahf
add
into
mov
add
in
adc
adc
add
add
add
inc
add
mov
push
test
pop
jnp
clc
arpl
add
add
mov
lcall
lock
add
imul
clc
jno
add
add
push
push
nop
jmp
add
xchg
dec
mov
in
xabort
xchg
inc
clc
dec
sahf
clc
stos
jno
add
clc
xchg
pop
dec
scas
sbb
lret
fiaddl
cmc
call
nop
jmp
enter
jg
add
daa
clc
loop
push
mov
xchg
ret
sahf
add
clc
or
clc
bound
add
add
push
add
cmpsl
clc
ds
cmp
cwtl
repz
cmp
add
add
sub
and
add
imulb
rcll
nop
jmp
or
xor
add
lods
or
cltd
xbegin
enter
mov
lcall
add
out
inc
add
clc
dec
pop
ss
dec
cltd
xor
add
and
add
jno
add
clc
ljmp
jg
jmp
add
pop
pop
pop
or
cwtl
out
xor
add
cmp
or
nop
jmp
xchg
aas
rol
clc
mov
iret
aas
mov
sti
mov
iret
sub
mov
jmp
clc
and
add
dec
push
sub
clc
cmp
scas
test
mov
add
clc
aam
ja
inc
clc
movsb
clc
fimull
addr16
mov
add
sub
add
insl
data16
and
add
stc
divl
imull
mov
ror
lcall
xbegin
pop
stc
push
sbb
xor
add
fisttpl
fwait
dec
add
add
clc
xchg
in
adc
add
fdivs
add
popf
call
xchg
aas
jno
add
js
or
inc
clc
xchg
scas
decb
clc
push
add
ret
mov
or
add
clc
or
fwait
push
add
mov
scas
out
daa
clc
movsb
clc
pop
adc
jae
add
clc
lcall
clc
sub
clc
idiv
xabort
fldt
jle
cmp
clc
aad
add
and
add
pop
outsb
div
out
mov
clc
adc
add
rorb
add
out
push
inc
clc
add
xchg
test
arpl
add
clc
test
clc
faddl
lahf
std
ss
int3
repnz
jne
gs
ljmp
aad
add
mov
jmp
xchg
insl
stc
nop
test
adc
add
int3
popf
xchg
je
add
mov
mov
clc
cwtl
xchg
cmp
add
add
js
clc
loop
mov
sbb
jmp
add
data16
hlt
pop
dec
xor
add
arpl
add
ss
addr16
mov
or
jmp
dec
push
push
add
bound
add
add
add
add
push
cmp
add
stos
xchg
mov
mov
insb
mov
and
add
test
xchg
std
jmp
add
xchg
sub
dec
push
inc
add
jno
add
aam
add
jmp
inc
clc
xchg
rcll
add
call
cmp
add
inc
add
mov
push
clc
sahf
mov
push
mov
xchg
mov
push
daa
clc
scas
ror
pop
into
adc
add
mov
xor
add
adc
add
mov
mov
cwtl
int
add
xor
add
cmp
xor
jl
add
std
inc
add
jle
clc
mov
bnd
clc
pop
xchg
jmp
add
push
out
jecxz
mov
clc
fistpll
xor
add
clc
add
mov
mov
sbb
pop
xor
add
int3
pop
int
sar
or
leave
cmpsl
clc
jae
add
repz
sarl
fld
clc
fildl
clc
mov
in
push
mov
nop
jmp
lods
sahf
add
pushf
cmpsl
mov
clc
movsb
clc
enter
pushl
nop
jmp
stos
popa
xchg
aad
add
ljmp
pop
xor
add
add
add
xchg
pop
add
nop
jmp
aam
mov
cmp
add
mov
into
fisubs
add
jno
add
leave
fdivrs
stos
movsl
clc
add
add
clc
movsb
clc
mov
hlt
lcall
adc
pop
dec
inc
add
add
jmp
add
call
clc
xchg
rcrb
sarb
addr16
xor
add
lock
xor
add
xor
add
xlat
fcoms
add
leave
movlps
add
add
or
mov
add
add
add
clc
xor
add
repnz
clc
sbb
movhps
add
pop
cmpsl
clc
mov
or
mov
dec
fxch
dec
pop
imul
dec
push
add
mov
sbb
test
jmp
test
and
gs
pop
stos
sti
cld
and
add
ret
pop
clc
sahf
cmp
clc
out
sar
add
fisttpl
cmpsb
clc
xabort
sub
pop
jnp
mov
dec
aam
add
add
jmp
add
adc
clc
fiadds
add
jl
push
push
nop
jmp
leave
cmpsl
add
repz
cmp
mov
clc
push
bswap
incl
add
mov
loop
scas
add
add
add
xor
add
movzwl
mov
rcl
aas
ret
clc
add
add
adc
add
mov
dec
sbb
jmp
and
inc
add
bound
add
clc
sub
fbstp
rorl
xor
add
add
jae
add
jae
add
daa
clc
mov
add
nop
jmp
adc
clc
xchg
push
ds
add
push
pop
rclb
add
cmp
clc
mov
clc
mov
nop
in
xchg
fistpll
cli
lods
fisubrl
xor
clc
mov
jnp
clc
adc
add
fadds
jge
dec
xchg
push
clc
std
add
add
xchg
mov
mov
sub
add
movsb
clc
addr16
sub
xor
clc
push
inc
add
loopne
nop
xor
add
out
cmp
xor
add
add
add
outsl
xchg
fdivs
mov
add
add
mov
nop
jmp
mov
mov
clc
not
xor
add
clc
imul
add
add
push
add
mov
cli
jb
add
cmp
addr16
sbb
cmp
xchg
frstor
add
sbb
movsb
clc
jne
inc
add
inc
add
dec
out
scas
cmp
clc
loope
dec
jp
push
cltd
popf
mov
inc
clc
pop
enter
outsl
mov
or
or
cli
lahf
inc
add
xbegin
xlat
cmc
sarl
scas
push
insl
dec
cmp
sahf
imulb
xchg
hlt
pop
mov
gs
or
add
sub
clc
pop
xchg
or
je
nop
jmp
add
icebp
call
add
es
jns
dec
add
add
jne
clc
imul
mov
sub
clc
fsubl
xor
add
xchg
and
add
testl
push
push
mov
xchg
ret
adc
call
loope
adc
add
clc
fwait
push
push
nop
jmp
push
cmp
pop
imul
sub
pushf
push
out
or
add
or
pop
sbb
mov
jmp
adc
jno
mov
or
add
add
adc
add
xchg
das
push
inc
add
pop
jg
and
add
loop
pop
in
hlt
push
inc
clc
mov
add
add
add
push
jmp
sahf
add
adc
add
cltd
push
rcrb
add
add
lret
push
add
dec
pop
aam
out
adc
sub
shll
mov
xabort
push
add
das
notb
rorl
push
jb
add
add
clc
gs
movsb
clc
imul
xor
add
add
sub
idiv
sahf
mov
stos
xor
add
add
add
clc
mov
add
sahf
pop
cmp
cmp
xor
add
test
xlat
xchg
push
add
and
add
mov
data16
js
xchg
mov
add
fadds
jae
add
ret
fs
pusha
add
adc
add
test
jl
bound
add
add
fstps
sahf
fdivs
add
fcmove
div
notb
add
pop
fbstp
dec
cli
cs
gs
fwait
push
sahf
test
jb
add
mov
pop
out
sarb
sub
in
loop
push
iret
xor
add
inc
clc
fisubrs
mov
clc
movsl
clc
repnz
or
leave
inc
clc
adc
add
stc
add
pop
xor
add
jl
jle
add
add
pop
jmp
mov
ret
clc
jo
add
add
decb
fldt
repnz
clc
daa
clc
gs
cwtl
lock
das
movsl
clc
jp
pop
cmp
xbegin
add
gs
xor
add
cmp
clc
into
sub
mov
clc
and
clc
enter
es
mov
xchg
dec
cmc
push
ja
popa
add
call
ret
add
ljmp
jecxz
inc
clc
scas
mov
lcall
add
arpl
add
clc
divl
or
mov
add
sbb
movsb
clc
sub
add
loopne
inc
clc
and
add
clc
scas
mov
mov
push
lahf
sar
outsl
sub
mov
add
clc
loope
scas
shlb
mov
add
push
call
nop
jmp
and
and
cmpsb
clc
insb
cmp
add
mov
clc
es
sbb
addr16
mov
clc
fisubrs
daa
clc
push
popa
add
push
adc
add
popf
push
lahf
sahf
ljmp
imul
dec
pop
clc
int
inc
add
xchg
aad
mov
ror
and
add
add
sbb
or
add
add
mov
clc
in
or
clc
dec
push
rcrb
push
mov
cmp
clc
ja
clc
jns
xor
add
dec
test
add
clc
data16
bound
add
add
add
divl
add
mov
add
mov
dec
push
gs
std
mov
clc
jae
add
sar
cmp
mov
cmp
clc
stc
sbb
push
add
and
ret
cmp
add
aad
clc
filds
add
add
scas
add
add
push
iret
inc
clc
lods
push
ss
push
jecxz
scas
mov
dec
in
cwtl
je
pop
nop
jmp
std
mov
cmc
std
cs
ror
xlat
push
clc
hlt
insl
xchg
mov
ret
clc
mov
ljmp
clc
in
xchg
mov
cmp
clc
or
push
nop
jmp
add
gs
cmp
clc
and
add
sub
xchg
out
clc
repz
outsb
adc
add
clc
adc
xlat
mov
add
add
push
clc
pop
sbb
clc
popf
add
add
jg
add
sar
clc
and
pop
fildll
jle
cmp
leave
loopne
push
add
sar
clc
cmp
int3
dec
data16
pop
sub
xor
add
imul
add
jge
clc
mov
iret
clc
inc
clc
xlat
jae
add
add
imul
add
clc
fcmovne
leave
dec
repnz
outsb
sar
not
dec
cwtl
into
xchg
add
xchg
mov
jmp
push
enter
add
add
clc
cmp
mov
fidivrs
out
nop
jmp
add
addb
loop
mov
adc
fisttpll
call
or
clc
leave
inc
clc
push
mov
jne
xor
add
in
jns
add
outsl
inc
clc
das
mov
xor
repz
mov
cmp
mov
loope
loopne
leave
or
fsub
clc
push
add
lea
fiaddl
add
dec
js
add
leave
adc
fbstp
ljmp
mov
push
nop
jmp
add
add
aas
ss
mov
stos
or
jne
or
test
add
dec
pushl
rclb
add
xchg
enter
xchg
mov
add
push
add
cs
ret
push
add
hlt
add
add
test
lea
jo
add
mov
add
stos
outsb
add
in
push
addr16
add
add
add
stos
fwait
or
add
and
pop
shlb
add
movsb
clc
pop
call
xchg
loopne
fidivrs
sbb
clc
ret
adc
add
mov
clc
jno
add
clc
mov
add
jne
sti
rcrl
add
enter
add
lods
and
add
shlb
clc
xabort
rcll
add
out
out
fwait
push
stc
arpl
add
cld
outsb
xchg
cmp
clc
jne
cmp
call
insl
jns
mov
xabort
clc
mov
add
arpl
add
clc
sbb
xor
add
ret
clc
inc
clc
mov
adc
decl
clc
xor
add
movswl
nop
jmp
add
pushf
mov
sar
clc
add
jbe
adc
add
add
add
jae
add
push
int3
fmuls
adc
mov
nop
jmp
enter
jbe
es
test
in
xor
add
and
add
scas
adc
add
clc
sar
imul
pop
arpl
add
adc
add
clc
mov
inc
add
jnp
push
loope
push
add
out
and
add
ja
ja
add
movsb
clc
shll
cmp
add
sub
cmp
clc
xor
inc
add
xchg
pop
xchg
in
inc
add
xchg
xbegin
add
add
inc
add
inc
add
jge
test
jge
clc
and
mov
roll
mull
mov
and
add
or
inc
clc
mov
clc
inc
add
lret
mov
movsb
clc
jecxz
mov
add
sbb
add
or
jne
xchg
push
jmp
and
jl
jo
add
cmp
add
dec
mov
adc
add
out
adc
ret
clc
xor
add
add
clc
imul
ds
fcoml
add
cmp
add
inc
add
sub
cmpsb
clc
rorb
push
add
jge
stc
in
enter
sub
clc
xbegin
and
add
sbb
and
add
or
add
aas
sub
popf
imul
add
aas
xchg
add
xchg
fbstp
xchg
test
daa
clc
cmp
sub
add
gs
scas
imull
sub
div
mov
mov
pop
stos
stc
jge
jae
add
add
fsubr
push
add
pop
mov
cmp
nop
jmp
popl
xchg
mov
push
add
mov
adc
sbb
push
nop
jmp
or
pop
mov
xchg
dec
mov
add
jnp
jnp
adc
dec
inc
sbb
inc
add
je
mov
gs
xchg
ret
scas
test
xor
add
add
mov
clc
push
inc
add
bound
add
add
xabort
pop
push
xchg
sub
jne
clc
adc
add
clc
out
cmp
add
xor
add
jns
clc
flds
push
mov
out
mov
mov
ret
clc
out
mov
mov
pusha
push
mov
xchg
ret
adc
sub
clc
das
cs
sbb
mov
test
push
add
and
add
add
add
sub
fsub
clc
into
mov
int
clc
dec
xor
add
lret
fisubs
add
nop
out
in
mov
push
sub
test
dec
xchg
xchg
fidivl
add
mov
cld
pop
insl
xor
add
dec
xor
add
clc
mov
clc
data16
push
adc
call
nop
jmp
add
das
sbb
sldt
ret
add
js
add
add
imul
add
adc
add
std
sti
jle
xchg
shll
xbegin
sti
push
jae
jmp
add
add
adc
add
mov
sbb
mov
in
push
adc
add
call
jmp
jnp
add
ficoml
clc
push
mov
add
push
add
adc
enter
add
sub
clc
ljmp
mov
xchg
cld
lret
loopne
jl
clc
loope
je
clc
mov
testl
lahf
in
lods
mov
jmp
lret
nop
fbld
clc
push
add
lods
sub
clc
mov
clc
mov
clc
outsl
sbb
cmp
pop
mov
and
bound
add
clc
testl
stos
sbb
lock
clc
insb
and
add
add
enter
and
jmp
adc
jno
sahf
adc
xchg
push
add
pop
movsl
clc
ljmp
add
out
xor
add
xchg
mov
add
aas
sbb
clc
or
aaa
pusha
add
cmp
add
test
adc
push
cmpsl
clc
nop
add
add
movsl
clc
jp
add
push
add
cmc
cmp
adc
ret
mov
push
stos
adc
add
clc
bound
add
ljmp
call
add
or
popa
add
xchg
jae
add
and
jl
clc
and
add
test
add
sbb
jmp
popa
push
mov
lahf
pop
and
push
add
jecxz
xchg
mov
clc
sbb
push
inc
add
mov
clc
and
add
pop
lahf
aaa
pop
xor
add
add
dec
aas
lret
sti
dec
aaa
push
adc
inc
clc
sub
jg
scas
cld
sti
or
vcvtdq2ps
add
sub
mov
nop
jmp
xchg
orb
add
mov
test
fwait
test
jae
add
jle
arpl
add
leave
in
xlat
pusha
add
decl
test
xchg
movsl
pushl
or
bound
add
add
mov
test
and
add
push
mov
inc
add
add
jns
or
dec
daa
clc
test
nop
test
test
fld
clc
sub
clc
jae
add
clc
cli
sar
clc
fnsave
and
add
cmp
clc
nop
xabort
clc
mov
add
jbe
add
add
jle
xabort
add
jecxz
add
mov
cmpsl
jns
xchg
add
lods
adc
add
push
dec
movsb
clc
icebp
fldcw
jns
mov
dec
aas
jno
add
mov
push
add
pop
in
test
mov
add
and
add
into
scas
push
clc
fdivr
adc
add
clc
clc
mov
add
xabort
outsb
inc
add
fcoml
add
ja
add
pushl
rcll
adc
adc
lock
add
inc
clc
dec
ret
clc
sub
clc
scas
dec
cld
dec
leave
cmp
sub
jb
add
dec
icebp
mov
adc
add
nop
jmp
cmc
jno
jno
ret
jbe
xbegin
mov
mov
clc
cltd
fxch
mov
jmp
std
js
pop
gs
enter
add
cmp
mov
cmc
imul
clc
int
clc
xchg
pop
imul
and
add
hlt
icebp
pop
in
mov
add
fs
cmp
clc
cltd
sbb
add
mov
xchg
jns
inc
clc
mov
loopne
or
es
jp
mov
mov
faddl
add
aad
xor
add
cmp
xbegin
push
icebp
incl
push
push
add
xchg
cli
sub
add
dec
mov
add
sti
cmp
hlt
jmp
jmp
mov
add
inc
add
sbb
clc
stos
push
add
insb
mov
add
fcoms
daa
clc
mov
dec
pop
bound
add
clc
jp
ljmp
aam
push
pusha
add
lahf
fistl
add
push
rorl
push
add
xbegin
frstor
add
clc
stos
dec
loopne
jmp
cmp
jb
add
mov
pushf
adc
add
clc
cmp
add
xchg
int3
sti
insl
add
add
pop
leave
negl
xchg
stc
cmp
push
pop
stc
inc
push
std
add
leave
mov
sub
push
shrl
jb
add
add
daa
clc
clc
jnp
clc
push
add
insb
je
add
add
clc
cmp
rcrb
mov
nop
jmp
cmpsl
push
push
clc
addr16
mov
xor
clc
add
add
inc
add
mov
adc
add
add
clc
testb
push
add
ja
add
daa
clc
fstps
loope
fildl
clc
ret
clc
xor
mov
or
nop
jmp
push
sub
cmp
xor
add
aaa
push
add
cmp
add
jge
loopne
jnp
mov
push
mov
xchg
ret
add
clc
mov
cmp
and
add
ljmp
lock
push
add
push
pop
and
add
xor
add
out
mov
clc
mov
cwtl
aad
jbe
cmpsb
clc
mov
add
jbe
repz
cltd
add
aam
and
add
or
inc
clc
dec
lods
and
push
pop
clc
cli
sub
mov
add
mov
cwtl
imul
push
dec
nop
jmp
pushf
adc
add
imul
movsb
nop
jmp
xchg
aam
clc
into
xor
add
mov
xchg
jo
add
jne
imul
add
addr16
loope
inc
clc
mov
clc
pop
clc
jecxz
aas
dec
mov
clc
inc
add
rclb
add
add
insb
mov
push
jl
xchg
lods
jl
mov
add
nop
jmp
adc
cli
test
add
dec
add
stos
sub
cltd
test
imul
jmp
out
mov
or
clc
movsl
clc
sbb
clc
jl
and
add
add
add
jne
test
pop
pop
popa
add
push
jmp
cmp
clc
or
cmp
clc
xor
popa
add
or
clc
push
filds
add
inc
add
push
pop
clc
mov
jg
xchg
adc
add
clc
lock
add
add
cmp
add
jg
cmpsl
clc
pop
sti
arpl
add
xor
add
push
fs
inc
clc
push
and
dec
sub
or
insb
xor
add
pop
jg
jl
clc
cmpsb
clc
maskmovq
divl
repnz
icebp
fstpl
add
mov
inc
add
push
push
mov
push
mov
xchg
ret
jnp
lods
gs
lcall
ljmp
enter
mov
movsl
clc
mov
or
push
jmp
stos
stos
lods
add
clc
dec
mov
or
adc
add
add
mov
mov
add
nop
dec
cli
stos
push
xbegin
dec
push
inc
clc
and
add
scas
jp
lret
and
push
xchg
ljmp
clc
into
rcrb
lret
mov
lods
xor
clc
sbb
enter
gs
and
add
add
addr16
loopne
cmp
jne
movsb
clc
jb
add
add
lcall
add
adc
add
mov
cmp
nop
jmp
rorl
xor
add
or
jge
clc
rorb
clc
lods
jg
sar
leave
pop
notl
arpl
add
aad
mov
jmp
clc
nop
jbe
gs
fucompp
jbe
fdivl
fisttpl
sar
adc
add
in
ret
clc
xor
add
add
jge
xbegin
je
add
inc
add
mov
push
bound
add
add
frstor
add
lcall
add
pop
inc
add
out
sbb
cmp
or
loope
pop
fidivs
add
sahf
cmp
test
inc
clc
mov
cmp
add
loop
cli
jbe
add
cwtl
movsb
clc
adc
add
clc
jl
mov
push
clc
or
sub
in
cmp
mul
clc
loop
sbb
add
mov
adc
add
test
push
add
cmp
clc
jne
scas
js
push
xor
add
popf
cli
push
popa
add
bound
add
fs
out
dec
aam
clc
dec
push
pop
in
mov
mov
mov
nop
jmp
add
cmp
clc
iret
fadd
clc
xchg
sarl
adc
add
mov
imul
jmp
and
add
add
add
xchg
clc
mov
call
clc
sub
clc
pop
stc
outsl
mov
jne
repnz
xchg
movsl
clc
popf
mov
repz
sti
ljmp
adc
mov
add
adc
add
dec
jae
add
or
add
sub
clc
pushf
or
icebp
sub
lods
inc
clc
icebp
fsubl
pop
jg
in
loope
and
add
add
es
ret
insb
das
scas
inc
clc
xor
lret
inc
clc
es
mov
into
test
and
add
add
add
data16
push
add
mov
add
clc
rclb
imul
cmp
inc
add
mov
mov
clc
jae
add
add
clc
sbb
lods
sub
rclb
jno
xchg
popa
sub
jg
add
xchg
dec
fnstcw
adc
add
es
or
clc
test
adc
add
add
jmp
add
clc
cmpsl
clc
je,pt
clc
ret
cmpsl
clc
push
clc
cmpsl
clc
test
ret
clc
sub
clc
xchg
popa
add
jmp
jmp
adc
js
cltd
pop
fbstp
inc
add
push
add
cmp
mov
add
ljmp
xchg
scas
xor
add
cwtl
cmp
clc
mov
xor
add
clc
aaa
push
xor
xchg
fisubrl
xchg
lret
jg
clc
push
clc
mov
nop
jmp
sub
lods
movsl
clc
dec
push
sbb
cmp
add
sub
sub
lods
mov
and
add
clc
aas
out
dec
add
add
popa
add
daa
clc
fwait
ds
cmp
cmp
stc
nop
pop
ret
clc
adc
add
in
jecxz
es
mov
push
sub
clc
aaa
adc
add
add
and
add
mov
xchg
adc
add
xabort
inc
clc
add
add
clc
mov
fcomps
int3
xbegin
or
adc
add
fs
push
clc
push
add
sub
clc
jp
jbe
mov
inc
add
jnp
add
lret
insb
jecxz
and
clc
loope
lock
add
push
mov
add
test
ret
clc
or
mov
add
inc
clc
loope
mov
ja
data16
fstpt
or
clc
scas
xabort
dec
jb
add
add
pop
int3
int
dec
or
clc
lods
jge
xabort
outsl
add
add
inc
add
js
xchg
pop
mov
dec
push
mov
xchg
ret
cmc
jnp
add
add
pusha
add
aas
scas
jo
add
or
arpl
add
pop
mov
jg
pop
out
insl
cmp
sar
ja
xabort
clc
das
aad
ror
cmp
add
hlt
cmp
inc
add
enter
mov
sbb
add
int
jle
mov
nop
jmp
adc
add
test
add
adc
mov
pop
mov
clc
jecxz
jno
add
clc
adc
cmp
add
push
add
movsl
clc
cmp
xchg
cs
out
ret
clc
inc
clc
pop
inc
clc
cmc
push
clc
adc
clc
inc
add
mov
cmpsl
clc
icebp
fbstp
mov
sar
clc
out
jmp
clc
cmc
psllq
sub
or
add
aad
mov
nop
jmp
enter
test
popf
and
add
movsl
clc
xbegin
inc
clc
call
adc
cmp
clc
shl
clc
insb
add
add
icebp
pop
loope
out
dec
in
xchg
clc
xchg
ret
clc
repz
into
test
push
shlb
cmpsb
clc
inc
add
dec
daa
clc
mov
fdivr
int3
push
add
cmp
dec
mov
nop
mov
add
stos
sbb
rclb
jmp
adc
cmc
adc
add
mov
pop
mov
test
repnz
dec
stos
gs
lock
int
mov
add
ds
clc
mov
out
dec
push
add
rcll
add
adc
add
fldenv
add
icebp
adc
dec
xchg
add
clc
add
add
negl
popa
add
jge
inc
clc
enter
cld
jp
and
or
mov
pop
dec
daa
clc
add
add
push
add
mov
clc
push
lea
push
sahf
lods
das
movsb
clc
popf
popa
add
iret
xor
add
add
mov
imul
and
mov
add
arpl
add
add
dec
xor
add
clc
in
or
mov
mov
nop
jmp
jno
mov
mov
es
push
add
data16
adc
add
dec
lret
clc
pop
xor
add
jmp
add
sub
add
push
add
lock
add
popf
je
ret
clc
cmp
hlt
cmp
push
add
aas
lahf
cli
in
inc
clc
pop
negl
lret
inc
add
xchg
mov
sbb
add
imul
add
je
add
and
add
add
clc
hlt
mov
xor
add
nop
jmp
stos
fwait
cmpsl
sub
or
cmpsl
enter
add
push
aam
int3
fsubs
shlb
add
lret
add
add
cld
icebp
xchg
fs
mov
sahf
push
pushf
xor
aas
add
add
push
test
nop
jmp
lods
add
cmpsl
ret
js
mov
add
adc
add
mov
sub
xor
inc
add
xchg
xchg
daa
clc
movsb
clc
ret
jle
add
jno
add
mov
out
and
add
clc
outsb
mov
fbstp
add
mov
shr
nop
jmp
sub
out
orb
push
xor
xchg
ret
add
xor
add
add
sbb
dec
xchg
add
add
add
jbe,pn
add
jl
in
enter
inc
clc
loop
out
add
add
clc
jg
clc
fnstsw
ja
sub
add
xchg
imull
ficoms
push
adc
pop
mov
sub
mov
add
daa
clc
sahf
pop
clc
xchg
jg
cmpsl
clc
fstpt
mov
adc
add
mov
lret
shlb
push
add
inc
add
loope
aaa
and
xchg
insb
dec
pop
loopne,pn
jo
add
sub
mov
sub
sub
adc
add
pop
in
fdivrl
sub
add
mov
add
fbld
add
adc
add
sar
push
adc
add
sbb
xchg
mov
add
xor
add
and
add
add
add
add
jge
clc
cwtl
filds
add
leave
jle
add
das
mov
aam
clc
test
fstpt
and
add
clc
push
inc
clc
lcall
add
clc
mov
add
mov
add
int3
pop
dec
sbb
and
xchg
xchg
call
inc
clc
and
add
clc
je
add
out
xchg
mov
clc
jne
mov
mov
clc
mov
mov
call
add
inc
add
sub
jmp
add
aam
fwait
mov
push
clc
in
jno
add
popa
add
cmp
dec
int
or
into
add
cmp
clc
es
cld
dec
enter
add
push
cmp
xor
lock
movsb
clc
fs
and
add
inc
clc
int
add
push
add
pop
fsubrs
shll
add
enter
ja
add
xchg
out
sub
mov
mov
mov
clc
inc
add
mov
fists
call
lahf
sahf
dec
add
add
cli
cmp
xor
add
daa
clc
lahf
xor
xchg
aas
xchg
lret
add
mov
clc
lahf
cmpsl
clc
loope
cs
inc
add
cld
xor
add
add
cmp
add
add
xchg
fistpll
add
insl
xchg
bnd
clc
and
pop
adc
add
mov
clc
sahf
xchg
dec
test
clc
cltd
mov
add
sbb
add
or
add
clc
xchg
out
ret
clc
add
add
add
clc
push
jg
lret
mov
add
fldenv
add
xchg
nop
jmp
sahf
adc
out
cmpsl
iret
add
add
ret
clc
mov
add
clc
xchg
in
je
add
in
scas
nop
fs
xchg
je
clc
int3
enter
jb
add
ret
clc
adc
add
add
call
mov
xor
add
nop
jmp
lods
mov
and
clc
adc
add
ror
fcoms
shrl
add
add
inc
clc
xabort
add
in
daa
clc
pop
popa
add
outsb
pop
adc
gs
and
add
arpl
add
xor
add
test
dec
int3
pop
insb
lea
cmp
cmp
mov
lea
movhps
clc
popf
repnz
clc
jecxz
data16
lock
sbb
clc
das
mov
add
mov
mov
dec
xchg
xchg
mov
jg
in
cmp
mov
stc
cmp
and
add
mov
mov
and
add
enter
xor
add
clc
push
punpcklwd
add
call
nop
jmp
add
or
add
xchg
adc
dec
setnp
not
xabort
xor
add
pop
dec
inc
add
gs
cld
xor
dec
push
cmp
nop
jmp
addb
add
xor
cmc
adc
add
add
push
add
data16
hlt
das
or
add
push
nop
jmp
xcrypt-ecb
cmpsl
cmc
mov
adc
add
jmp
push
mov
incl
nop
jmp
cmc
pop
push
lahf
imul
addr16
loop
pop
xor
add
sbb
dec
and
xor
add
outsb
mov
stc
push
daa
clc
push
add
adc
add
cmp
pop
clc
cmp
clc
gs
jb
add
mov
push
clc
int
testl
nop
jmp
pop
add
add
loopne
add
add
push
add
inc
add
jmp
cmp
cmp
and
add
clc
and
add
add
lahf
jno
add
fidivs
add
in
dec
adc
int3
jmp
clc
imul
add
lods
pop
outsl
fisubs
add
clc
out
lods
ret
clc
stos
and
sar
out
lret
out
xchg
lea
mov
push
mov
xchg
ret
pop
pop
push
mov
aaa
mov
jns
lret
push
into
stos
push
sar
add
call
aas
sub
add
adc
add
add
mov
clc
dec
adc
add
lcall
clc
adc
add
nop
jmp
and
mov
or
jg
add
sub
clc
repz
clc
fidivs
add
adc
add
add
xchg
imul
out
xchg
sarb
add
adc
add
and
add
pop
fcmovne
mov
clc
or
clc
dec
pop
xor
add
clc
std
loopne
xbegin
popa
add
cld
ss
add
add
add
popa
add
mov
add
mov
add
or
mov
lods
cmpsb
clc
push
add
or
adc
add
clc
pop
fxtract
adc
add
daa
clc
and
add
add
repnz
push
push
mov
xchg
ret
aam
mov
test
jecxz
outsl
pop
jns
rolb
xchg
mov
dec
in
movsb
clc
iret
sub
mov
clc
lods
xlat
add
add
clc
and
cmp
sti
mov
clc
ret
clc
daa
clc
inc
clc
xbegin
adc
jmp
dec
adc
pop
ss
inc
clc
dec
dec
sti
pushf
not
ret
clc
or
in
push
xchg
xor
movzwl
nop
jmp
adc
jnp
and
clc
bnd
clc
xchg
and
add
add
outsb
fadds
clc
inc
clc
push
je
xchg
stos
filds
add
in
dec
jo
add
imul
movsb
clc
add
loope
and
add
cmp
add
clc
movsb
clc
outsb
sub
and
add
mov
sub
mov
call
add
lret
add
test
mov
nop
jmp
pop
cmc
lods
xchg
adc
clc
or
adc
add
xchg
sbb
das
inc
clc
and
shlb
add
add
add
clc
dec
mov
aam
test
repz
inc
add
push
mov
test
ret
cmp
mov
xbegin
nop
jmp
or
cmc
shrl
mov
in
cs
xchg
imul
clc
dec
or
divb
add
aas
outsl
fildl
add
pop
xchg
divl
pop
clc
pop
push
add
pop
clc
mov
ss
sub
lods
push
mov
xchg
ret
add
rclb
pop
test
add
jne
and
add
add
add
mov
push
clc
jno
add
gs
jb
add
clc
lods
sub
je
sti
lcall
jmp
or
enter
mov
add
fistpl
add
mov
sbb
xchg
clc
jecxz
in
sbb
add
cmp
pop
lock
mov
push
nop
jmp
out
mov
inc
add
sar
call
nop
jmp
add
lahf
jno
clc
cmp
clc
dec
inc
add
xor
add
inc
add
std
cmpsb
clc
push
ds
xchg
cmp
movsb
clc
push
clc
mov
push
add
push
jle
add
xchg
jge
and
add
clc
push
add
out
xlat
xchg
lahf
and
add
adc
add
push
add
cmp
add
mov
fadds
add
and
or
clc
mov
mov
add
jmp
cmc
add
sub
roll
add
or
mov
sbb
ds
addr16
sub
sub
ret
add
xchg
sub
jl
add
inc
clc
add
xchg
add
repnz
add
jbe
clc
loop
int3
cmp
ret
idiv
cmp
dec
xchg
out
and
add
clc
dec
mov
sub
mov
jmp
or
adc
add
aas
inc
clc
sahf
inc
clc
push
pop
outsl
arpl
add
test
cmp
leave
gs
dec
das
inc
add
repz
sti
inc
clc
push
add
mov
add
ret
dec
inc
add
push
loop
rcrb
add
add
ret
clc
outsb
es
jecxz
push
add
adc
pop
clc
call
nop
jmp
pop
and
pop
addr16
mov
push
clc
nop
lock
pop
clc
sti
adc
add
and
add
adc
add
add
aad
arpl
add
mov
cmc
or
xchg
leave
fisttpl
clc
repnz
mov
mov
sbb
daa
clc
bound
add
cs
adc
mov
add
cmp
loope
xchg
in
gs
mov
popf
dec
pop
std
ja
push
sub
add
test
decl
mov
lcall
cmc
js
add
add
xabort
fnsave
add
or
xabort
clc
jb,pt
add
aaa
push
jb
add
das
rol
clc
ljmp
mov
clc
sar
add
mov
clc
cmc
mov
inc
nop
jmp
add
add
xor
add
int3
pop
lock
cmp
add
xor
add
and
mov
add
push
add
aas
test
daa
clc
or
add
jo
add
clc
push
add
sbb
jo
add
sbb
icebp
xbegin
fs
clc
inc
clc
jmp
mov
js
adc
add
add
adc
add
test
mov
sbb
add
add
lret
or
adc
add
jg
mov
add
sbb
clc
push
pushl
nop
jmp
lods
xchg
pop
inc
fwait
sar
mov
xor
add
inc
add
xchg
cmp
ss
xor
add
jnp
cmpsl
clc
addr16
test
jmp
add
add
das
cli
rcll
push
mov
xchg
ret
pushf
out
cli
jl
add
nop
jmp
add
mov
add
clc
and
add
push
mov
xchg
ret
roll
cltd
ja
cmp
sub
add
lret
xor
leave
xchg
xchg
insl
movsl
clc
fisubrs
mov
dec
imul
add
int3
sbb
js
add
xchg
add
add
clc
pop
mov
sbb
add
jmp
fcoml
add
adc
clc
pop
inc
clc
gs
add
add
adc
inc
clc
cmp
clc
mov
add
cmpsl
clc
test
push
mov
nop
jmp
popa
mov
add
leave
nop
mov
jecxz
stos
lret
lods
aad
cmp
jle
clc
cmc
clc
es
sub
clc
jl
clc
incb
add
popf
std
xbegin
add
adc
add
push
clc
or
clc
add
add
data16
jmp
jbe
push
pop
push
clc
lods
int
mov
push
dec
cmp
jmp
nop
jmp
jnp
cli
dec
inc
clc
imul
je
jbe
sar
adc
add
rorl
call
mov
data16
pop
std
in
push
mov
call
js
jnp
lahf
shll
fcmovnbe
in
je
fists
xchg
imulb
xor
cmc
in
cwtl
fcomps
gs
sub
mov
add
mov
sbb
mov
xchg
ret
cmc
pop
sahf
adc
mov
cli
cmp
clc
xor
add
add
mov
clc
cwtl
push
add
sub
sarb
ss
out
cmpsb
clc
es
sbb
test
testl
adc
add
adc
clc
mov
shl
clc
mov
repz
sar
clc
push
mov
push
mov
xchg
ret
add
or
fs
je
add
clc
cli
mov
add
gs
je
add
xchg
sbb
push
mov
xchg
ret
sahf
mov
add
jno
add
call
cmp
fildll
dec
mov
loope
add
jg
add
mov
ret
clc
call
clc
vcvtdq2ps
sub
in
jecxz
bound
add
rcr
out
loopne
mov
pop
nop
jmp
add
add
cmc
outsl
outsb
repnz
ja
xlat
adc
add
push
sbb
clc
mov
add
xor
mov
sbb
jle
jb
add
mov
xchg
incl
mov
fwait
cmp
push
mov
jmp
and
add
jecxz
insb
xchg
mov
add
and
add
clc
sbb
mov
xchg
ret
jno
rcll
sub
clc
mov
clc
add
add
and
add
loope
fisubs
inc
clc
inc
add
in
mov
jg
add
jbe
lret
add
mov
leave
inc
add
cli
int3
out
cmp
add
add
out
mov
ficoml
xbegin
add
nop
sbb
clc
cs
iret
xor
add
clc
data16
icebp
dec
iret
into
pop
inc
clc
or
mov
inc
clc
ret
clc
add
add
std
ds
fsts
clc
clc
cmp
clc
xor
add
add
mov
add
out
loopne
xor
and
add
mov
psrld
add
nop
jmp
or
popa
mov
clc
imul
clc
pop
add
xor
jmp
fwait
adc
add
cmc
in
dec
xchg
and
add
in
dec
jne
pop
inc
clc
mov
inc
clc
addr16
cmpsb
clc
sbb
add
out
incl
das
in
incl
cmpsl
add
enter
add
call
xor
clc
popa
add
cwtl
iret
push
jns
push
mov
pop
stos
mov
clc
fisttps
mov
clc
or
add
scas
pop
popf
inc
add
adc
clc
push
add
inc
clc
aas
fwait
sbb
or
movsl
clc
clc
lock
das
mov
pushf
scas
je
fnstsw
loopne
xchg
mov
call
add
add
clc
dec
pop
insl
das
dec
enter
dec
inc
clc
pop
bnd
pusha
add
nop
add
add
mov
mov
and
add
add
sbb
pop
stc
jno
add
clc
xchg
je
pop
aaa
pushf
xlat
roll
jno
add
clc
push
clc
jg
mov
addr16
rcrb
clc
sbb
push
nop
jmp
stos
add
xor
sbb
cmp
clc
dec
inc
add
das
inc
add
gs
mov
lods
and
add
mov
or
add
push
pop
xor
mov
clc
jge
add
mov
clc
fs
or
fldcw
jecxz
dec
mov
clc
and
add
add
bound
add
inc
add
inc
clc
jg
mov
clc
mov
clc
scas
push
movsb
clc
mov
cmp
testb
clc
add
add
clc
push
jmp
pushf
and
ret
lahf
cli
call
into
and
add
xor
add
add
clc
hlt
das
pop
bound
add
xor
add
add
aas
dec
fdivrp
leave
or
add
xchg
xor
pop
xchg
pop
fiaddl
clc
lock
cmp
dec
add
push
and
add
add
popa
add
in
cmp
add
mov
add
je
clc
and
mov
add
clc
push
add
arpl
add
add
jbe
clc
mov
jmp
lods
test
mov
lret
xchg
loopne
xor
add
sub
mov
mov
scas
mov
icebp
shlb
dec
nop
pop
popf
jecxz
ja
xchg
push
decl
push
mov
xchg
ret
adc
cmpsb
clc
xchg
dec
mov
cs
clc
imul
ljmp
ljmp
adc
add
add
mov
push
je
push
and
add
test
jno
add
loopne
mov
test
ror
jns
add
arpl
add
mov
shl
clc
repnz
ljmp
clc
popf
mov
jb
add
xchg
fchs
clc
push
add
pop
push
add
scas
or
mov
std
rcrl
sbb
test
pop
add
nop
jmp
xchg
fwait
and
add
add
mov
clc
adc
add
repz
add
sub
add
inc
add
mov
std
adc
add
mov
das
sub
add
inc
add
xbegin
mov
out
int3
push
clc
cmp
add
nop
jmp
mov
clc
push
mov
xchg
ret
add
sub
mov
stos
dec
push
mov
xchg
jae
add
clc
mov
pop
sahf
inc
add
insl
pop
fs
add
add
clc
mov
add
loopne
mov
sub
inc
add
arpl
add
dec
mov
iret
int3
sbb
add
arpl
add
pop
pop
test
inc
add
mov
cs
mov
clc
lahf
mov
mov
nop
jmp
sub
pop
jns
mov
clc
inc
add
xlat
sub
cwtl
cmp
cmp
pop
add
add
clc
cltd
mov
int3
cmp
hlt
lret
mov
mov
mov
nop
jmp
inc
enter
add
inc
clc
dec
setno
add
xor
nop
jmp
add
and
add
add
push
add
add
add
jmp
clc
cli
mov
ds
call
add
xchg
ret
mov
add
pusha
add
sbb
lret
jmp
add
add
rcr
mov
add
cmp
add
pushf
or
pop
adc
add
scas
jb
add
fcomp
outsl
aam
cmp
cmp
inc
clc
xor
add
add
add
insl
mov
add
jg
sub
ret
movsl
clc
enter
in
push
pop
nop
jmp
adc
cmpsl
inc
test
push
add
lods
gs
or
add
mov
out
sbb
cs
rcrl
in
push
add
mov
clc
cmp
inc
jp
nop
jmp
add
in
cwtl
mov
sbb
clc
cwtl
sar
pop
inc
add
int
add
rcr
dec
jnp
clc
xchg
dec
push
insl
cs
fdiv
jle
clc
negb
xchg
sub
xor
nop
jmp
stos
enter
bswap
jbe
cmp
inc
add
mov
push
add
xabort
clc
es
and
add
mov
cwtl
push
add
fs
sahf
sbb
jne
sub
mov
add
clc
out
pop
inc
add
inc
add
fisubl
mov
clc
lock
int
xchg
popa
add
daa
clc
cmp
clc
sti
repnz
push
nop
jmp
xchg
xchg
inc
clc
cmp
add
pop
shlb
mov
lcall
add
push
fxch
cmp
es
incl
xor
leave
pop
cld
sbb
jmp
add
orb
add
xchg
loop
imul
clc
add
push
clc
pusha
add
inc
clc
add
add
add
ficompl
add
cmpsb
clc
sub
ror
or
mov
nop
jmp
leave
xchg
adc
lods
push
add
xor
add
daa
clc
out
clc
std
xor
add
fistps
and
add
clc
mov
insb
fldcw
nop
jmp
adc
xchg
adc
add
cmp
test
xbegin
jns
add
lret
repz
dec
sbb
jo
add
dec
inc
add
ljmp
nop
jmp
jnp
xchg
jno
shrl
gs
ljmp
pop
mov
cs
clc
and
add
add
jg
clc
dec
cmp
add
out
or
test
add
add
popf
lahf
pop
push
mov
pop
clc
inc
add
je
out
out
inc
add
clc
and
add
add
jo
add
ds
mov
add
fildll
lods
scas
hlt
pop
cmc
cltd
cmpsl
clc
ds
add
in
jnp
or
clc
outsb
lret
pop
aad
bound
add
xchg
mov
test
mov
clc
mov
test
xchg
dec
lods
cmp
in
fcmovnu
or
mov
add
or
adc
clc
push
add
mov
jg
push
pop
nop
jmp
add
lods
xchg
add
add
fs
xbegin
add
outsl
stc
mov
add
sar
push
cmp
and
add
inc
add
pop
adc
add
add
adc
add
add
add
add
cmp
clc
mov
dec
sub
cmp
mov
nop
jmp
std
xchg
test
clc
in
mov
aam
pop
sub
clc
out
xchg
aad
add
data16
data16
data16
sub
rcl
push
add
jns
cmp
pop
jmp
push
clc
mov
popa
add
pop
clc
push
mov
incl
add
add
or
add
bound
add
clc
insb
and
add
add
ficompl
add
jbe
ja
cmp
mov
popf
ds
clc
pop
xor
shll
sub
xor
xchg
enter
push
push
gs
jle
clc
sahf
test
jg
clc
or
add
popa
add
rol
clc
lahf
xchg
mov
clc
push
inc
add
mov
and
add
adc
push
add
xchg
push
pop
nop
jmp
mov
push
add
clc
rorb
add
jl
clc
gs
pop
pop
fcos
je
nop
jmp
xchg
out
clc
push
pop
xchg
movsb
clc
in
pop
adc
add
inc
clc
popf
sbb
nop
jmp
mov
dec
cmp
sub
dec
jno
add
mov
out
jge
add
xor
add
jns
test
mov
adc
add
add
dec
dec
pop
or
or
add
ret
clc
jae
add
add
clc
push
add
lods
test
in
push
clc
aam
sub
jne
inc
clc
jns
or
add
pop
clc
jle
rorb
test
jbe
add
mov
inc
add
pop
clc
mov
mov
add
add
cmp
insl
clc
fisubl
add
push
clc
push
add
push
xchg
ljmp
jno
xchg
clc
ret
clc
cmp
clc
add
add
clc
ficompl
out
ret
nop
jmp
lods
push
enter
fldt
clc
lahf
jg,pt
add
sub
add
add
and
add
add
divl
clc
out
ficomps
jmp
mov
add
in
cmpsl
clc
xor
clc
aas
cmp
adc
add
lea
add
add
add
add
sarl
lods
inc
add
jge
clc
outsb
fsubs
clc
sbb
lods
sar
add
cmp
hlt
call
jmp
sub
clc
adc
clc
in
repnz
add
loop
mov
xchg
call
testl
add
arpl
add
fsubr
cmpsl
clc
outsb
dec
sbb
jmp
mov
lods
subps
pop
jno
add
clc
pop
loopne
xlat
push
mov
into
dec
push
add
mov
scas
int
clc
je
dec
aam
call
in
icebp
jo
add
and
daa
clc
cmp
or
pusha
add
aaa
and
add
add
pop
lods
imul
mov
jae
add
mov
clc
push
add
cs
mov
pop
xchg
mov
mov
push
test
sub
sub
add
cmpsb
clc
or
add
jg
je
clc
pushf
mov
mov
and
leave
sahf
push
and
pop
xor
add
cmpsb
clc
mov
push
in
fcmovb
clc
ja
clc
rorl
fidivl
add
add
clc
cs
jnp
popa
add
xabort
or
xchg
sub
clc
inc
clc
test
loop
inc
add
nop
push
cltd
cmp
mov
mov
inc
in
nop
jmp
add
adc
pop
xbegin
clc
pop
repz
add
push
clc
xor
add
sub
aam
xchg
or
or
or
out
pop
add
add
add
add
movsl
clc
scas
sub
nop
jmp
add
add
pop
leave
and
add
lcall
add
sar
mov
or
add
jbe
sar
mov
pop
mov
sub
add
mov
add
nop
jmp
add
and
call
adc
add
sbb
add
ljmp
mov
pop
std
pop
aad
scas
sub
clc
or
clc
call
or
add
mov
xchg
ret
dec
xchg
push
jbe
add
jg
xchg
inc
add
hlt
jbe
sbb
call
ljmp
cmpsl
lahf
aad
clc
outsb
sub
clc
push
jmp
add
test
sbb
ret
clc
sbb
stos
xchg
fbld
add
decl
test
call
ljmp
add
push
popf
mov
daa
clc
fs
cli
cmp
data16
repz
bsf
dec
ja
add
and
clc
push
fmul
cmp
fcoml
add
add
cmp
inc
clc
data16
dec
adc
add
add
xchg
stos
cmp
fistps
push
add
je
mov
nop
jmp
pushf
and
out
mov
and
clc
jmp
out
popa
add
daa
clc
mov
clc
ss
add
or
clc
lret
jae
add
mov
nop
jmp
adc
pushf
out
cmc
and
mov
je
pop
lods
mov
arpl
add
xlat
rorb
pop
mov
add
call
nop
jmp
adc
rcl
xchg
jmp
clc
shlb
dec
xor
add
cli
imul
mov
nop
jmp
add
adc
and
adc
add
clc
push
mov
nop
jmp
subps
dec
add
sub
sbb
mov
xchg
ret
pop
add
xor
enter
mov
incl
push
cmc
jns
push
mov
mov
add
nop
jmp
lods
std
pushf
mov
add
hlt
add
gs
push
xchg
sbb
add
cmpsl
jno
lret
movsb
clc
ljmp
add
stos
das
in
inc
clc
leave
roll
add
clc
sbb
mov
add
pop
cmpsl
sahf
jl
loope
arpl
add
mov
add
pop
xor
add
clc
push
mov
clc
lea
out
or
stos
test
lods
mov
ret
lcall
out
bound
add
add
dec
or
clc
xchg
cmp
sar
clc
add
add
clc
out
inc
add
enter
cmpsb
clc
incb
add
out
in
in
mov
mov
inc
clc
mov
add
mov
lcall
jo
add
sbb
add
jecxz
sbb
clc
lock
clc
ljmp
iret
jbe
scas
fwait
sar
clc
pop
cli
push
enter
mov
mov
add
mov
lods
popf
out
inc
add
jmp
add
sti
lret
and
add
pushf
push
clc
mov
add
push
add
mov
enter
pop
jae
add
jl
adc
add
std
cmp
add
jp
es
nop
cld
jno
add
sbb
pop
bound
add
ret
mov
jae
add
clc
adc
add
xor
scas
or
add
add
clc
in
sbb
adc
add
ret
cmpsl
pop
adc
push
add
clc
mov
add
dec
sbb
cmpsb
clc
pop
inc
clc
daa
clc
xchg
jo
add
es
scas
jl
add
push
clc
mov
clc
xchg
loop
jns
add
jl
clc
scas
cld
aam
mov
clc
pop
jno
add
lock
jecxz
sahf
inc
clc
or
mov
ljmp
fisttps
clc
dec
mov
cmp
adc
add
imul
push
add
inc
add
mov
adc
add
cmpsl
ret
add
add
cmp
add
add
cmp
repz
je
sar
push
push
mov
xchg
ret
fwait
or
mov
nop
jmp
adc
add
jge
jp
clc
clc
and
add
mov
add
repnz
ret
clc
add
add
sbb
pop
jbe
mov
add
add
mov
and
jb
add
add
bound
add
add
sar
xchg
sub
add
mov
clc
xbegin
js
insb
popa
add
rcr
icebp
push
add
push
stc
iret
xchg
jp
insb
into
sub
in
add
add
push
clc
xchg
fwait
mov
jmp
cmp
add
leave
lahf
pop
cmp
jno
add
inc
clc
bound
add
call
add
sub
out
fsubrs
push
jno
add
jnp
sar
arpl
add
add
xchg
add
add
out
mov
sahf
hlt
mov
add
or
daa
clc
sbb
clc
mov
aaa
cmp
add
in
es
es
in
mov
clc
clc
push
mov
add
sub
outsb
dec
push
clc
mov
clc
leave
stos
jno
add
clc
and
add
and
add
out
cli
test
add
jno
add
outsb
mov
sbb
nop
jmp
add
stos
int
add
push
xchg
and
fwait
pop
sar
clc
or
add
lcall
xor
add
cs
cmp
cmp
add
jmp
inc
add
js
mov
fdivr
sbb
clc
xbegin
int
clc
jmp
clc
movsl
clc
inc
add
jne
clc
aas
cmpsb
clc
pop
sub
shrl
fwait
out
adc
ds
or
mov
add
adc
add
scas
mov
dec
or
push
clc
adc
add
fnsave
add
imul
lods
dec
in
adc
add
add
sti
repz
sbb
clc
pop
and
mov
add
mov
imull
ret
clc
and
xchg
aam
clc
jg
clc
jnp
sub
clc
movsl
clc
and
add
sub
jg
clc
cmp
inc
clc
adc
add
not
test
repnz
pop
repz
add
clc
mov
mov
xor
add
cs
sub
cmc
mov
add
nop
or
imul
sub
dec
jmp
inc
clc
call
data16
sub
add
ret
dec
mov
pop
fidivrl
sbb
xchg
pop
or
test
sub
into
cmc
fsub
clc
xchg
mov
es
std
pop
fidivl
add
jns
clc
cwtl
inc
add
std
cld
cmp
clc
cmpsl
clc
jp
add
sub
clc
shlb
add
test
lret
sbb
add
enter
sti
icebp
testl
add
cwtl
pop
in
mov
fldcw
inc
clc
mov
xchg
and
dec
push
nop
jmp
adc
leave
cmp
xchg
mov
jmp
cmc
add
pusha
add
aas
push
clc
popl
add
add
cmp
xor
add
clc
xabort
add
sub
mov
clc
ja
add
movsl
clc
jecxz
push
test
clc
adc
mov
pop
cwtl
xchg
cmp
clc
movsl
clc
mov
mov
pop
cs
lret
lods
push
add
push
add
ds
pop
arpl
add
sbb
add
dec
or
add
push
add
aas
out
cmp
or
add
ret
add
pop
adc
add
clc
clc
cmp
add
sub
clc
push
push
hlt
xchg
jae
add
xchg
pusha
add
mov
clc
daa
clc
insl
lret
filds
add
pop
mov
adc
add
clc
mov
jae
add
movsl
clc
bound
add
add
mov
push
xchg
es
imul
mov
out
cmpsl
clc
fidivs
add
add
mov
clc
pop
imul
add
mov
stos
mov
scas
roll
nop
jmp
cmp
rcll
lahf
add
dec
sub
hlt
push
dec
sub
clc
and
add
clc
cmpsb
clc
push
clc
test
mov
insb
pop
or
clc
lock
cmp
xchg
adc
add
push
insb
push
add
cmp
or
add
xchg
jecxz
repz
pop
mov
jmp
repz
jg
xchg
mull
add
inc
add
out
out
outsb
and
loop
pop
clc
std
mull
add
clc
add
add
mov
nop
jmp
addb
mov
add
add
add
jo
add
sar
pop
sar
ja
add
add
xchg
and
add
cmpsl
clc
in
or
sarl
jl
jb
add
add
clc
enter
mov
inc
clc
pop
fstpt
and
add
cmp
add
loop
cwtl
cmp
clc
mov
add
inc
add
jne
push
sbb
pop
mov
xchg
add
add
cwtl
test
movsl
clc
outsb
lret
repnz
arpl
add
push
ret
add
movsl
clc
add
add
add
pop
pusha
add
nop
push
das
pop
sub
sbb
xchg
mov
sbb
nop
jmp
cmpsl
pop
mov
pop
xchg
mov
push
mov
nop
jmp
out
push
mov
add
xbegin
clc
popa
add
ljmp
add
add
lcall
mov
xchg
push
jne
nop
jmp
mov
gs
lock
jb
add
aas
in
inc
add
xchg
insb
dec
push
clc
out
clc
mov
clc
into
push
pop
clc
cmp
pop
stc
push
add
idivl
cmpsl
clc
xchg
aam
je
clc
xor
add
test
loop
cmp
add
jp
inc
add
hlt
mov
mov
imul
loope
adc
add
pop
ss
add
push
sahf
out
mov
lcall
mov
inc
add
sub
add
adc
add
test
jns
clc
push
ljmp
clc
fidivrl
clc
jl
clc
test
in
ja
push
add
adc
add
cmp
xor
add
mov
add
add
xor
add
mov
clc
cmp
clc
push
insb
incl
xchg
and
fnstsw
clc
into
js
clc
cmc
loop
mov
mov
add
iret
popa
add
push
add
jns
clc
mov
push
nop
jmp
xor
dec
or
fwait
mov
ret
icebp
push
xbegin
add
sub
nop
jmp
cli
add
ret
clc
int3
into
pushl
nop
jmp
enter
mov
cs
clc
dec
and
add
xabort
aas
xchg
sbb
inc
add
add
add
mov
add
nop
jmp
jno
aam
sar
sub
clc
cmp
and
add
pop
test
popa
add
das
shr
in
stc
repz
jg
xchg
or
sbb
nop
jmp
lahf
and
add
pusha
add
xchg
xchg
inc
add
dec
or
pushf
sub
and
nop
jmp
enter
pop
gs
clc
insb
insb
insb
mov
xchg
mov
insb
inc
insb
insb
nop
jmp
xchg
rclb
incl
and
mov
sbb
clc
fidivl
add
addr16
or
imul
sub
sub
add
mov
clc
push
add
mov
popf
fbstp
sbb
clc
cmp
jp
clc
xchg
mov
or
gs
dec
add
add
jmp
jb
add
clc
test
pop
lahf
in
pop
dec
inc
add
pop
cmp
clc
dec
mov
push
or
es
pushf
sbb
add
xchg
fidivrl
jmp
and
gs
or
lods
enter
arpl
add
clc
js
out
sbb
clc
stc
sbb
jbe
add
xchg
add
add
clc
jno
add
add
aas
sahf
addr16
push
add
ja,pt
add
out
lret
xor
add
mov
clc
popf
cmc
sub
add
xor
add
cmp
adc
add
add
mov
mov
mov
add
push
cli
cmp
mov
sub
mov
clc
test
inc
add
fmul
xchg
sub
call
sbb
sar
and
movsl
clc
and
add
mov
test
stos
dec
loopne,pt
jb
add
mov
xor
add
add
mov
clc
jo
add
das
mov
lcall
ja
aaa
sti
lret
add
stos
jg
xchg
dec
iret
gs
addr16
sub
sbb
xchg
clc
xchg
rcrb
jno
add
clc
jbe
sar
inc
add
mov
lcall
xchg
bound
add
add
jae
add
pushf
jns
sbb
cmp
add
cmp
xchg
js
clc
test
push
es
jbe
pop
pop
scas
imul
xchg
push
add
add
jne
ja
jnp
add
out
or
sbb
pusha
add
scas
iret
xchg
repz
mov
sbb
add
add
clc
inc
add
or
popf
pop
hlt
scas
and
or
clc
cld
outsb
cmp
clc
cmp
ret
nop
jbe
add
inc
clc
push
add
cld
inc
add
cmp
dec
clc
xor
add
fs
divb
clc
or
clc
mov
add
sbb
cmp
fdivrl
sub
clc
jb
add
push
add
test
add
cwtl
add
sbb
add
sub
pushf
addr16
mov
repz
add
shll
add
mov
call
add
pushf
enter
add
mov
ret
clc
cwtl
sbb
jmp
pop
xadd
add
adc
std
arpl
add
ss
add
xlat
lods
jmp
clc
mov
adc
add
inc
add
mov
add
enter
sar
out
lret
or
cmp
add
jbe
clc
lock
clc
pushf
cs
add
cwtl
fcomp
cmp
add
xchg
pop
clc
xor
add
aaa
rolb
clc
sbb
aaa
ret
add
push
sub
shl
push
add
mov
fnsave
add
pushf
in
fwait
cli
jns
add
imul
clc
jp
out
out
data16
lahf
cmpsb
clc
imul
add
outsb
outsl
je
clc
ss
gs
test
scas
hlt
push
add
xchg
insb
dec
mov
mov
mov
mov
clc
inc
add
pop
cmp
add
cwtl
add
add
clc
xlat
lock
sub
and
mov
clc
test
stos
nop
jmp
adc
add
xchg
cmp
clc
cmp
clc
and
add
bound
add
add
das
sahf
xchg
jae
add
pop
jnp
sti
push
add
cld
pusha
add
pop
add
xlat
nop
jns
pop
loopne
nop
xchg
mov
clc
stc
fnsave
popf
adc
add
add
mov
add
cltd
mov
clc
pop
add
push
lods
xchg
jle
clc
mov
jge
clc
push
or
xor
add
int
clc
xor
add
in
xor
add
add
nop
jmp
popa
xchg
mov
test
add
clc
aad
clc
inc
add
inc
clc
pop
hlt
test
sub
clc
or
clc
push
dec
ljmp
jns
sbb
add
push
add
mov
insb
mov
clc
in
dec
sbb
adc
nop
cmpsl
clc
mov
add
movsb
clc
jge
clc
mov
std
xchg
push
mov
jmp
jno
out
std
lods
out
scas
mov
cld
push
add
lret
mov
add
mov
xchg
ret
cli
mov
clc
out
bound
add
add
mov
or
pop
clc
lock
nop
imul
or
add
jl,pt
test
mov
shll
lret
and
add
push
gs
xabort
popf
ljmp
pop
jge
add
xchg
popf
or
lret
push
add
push
insl
cmp
out
sbb
clc
mov
add
out
push
add
fs
push
add
scas
pop
mov
add
or
cli
mov
add
lcall
mov
xchg
ret
cmc
sbb
cs
clc
mov
dec
pushf
xchg
cmp
mov
out
nop
xabort
iret
mov
mov
clc
or
test
pop
imul
push
mov
popa
add
sbb
clc
xor
add
add
and
add
in
mov
lahf
push
clc
cmp
fstl
popa
add
idiv
xor
nop
jmp
and
cmpsl
pushf
pmulhw
mov
push
stc
sbb
adc
ljmp
pop
repz
add
adc
sub
or
enter
xor
add
clc
pop
push
add
jne
cmp
popf
xor
add
sub
inc
clc
jmp
lcall
xor
insb
dec
jo
add
clc
repnz
clc
fsubr
push
add
add
js
data16
jp
xchg
push
clc
sbb
mov
fisubs
incl
add
xchg
push
adc
clc
jo
add
clc
xlat
cmp
jp
add
xabort
clc
lcall
push
xchg
stos
pop
lods
clc
lret
popa
add
cmp
clc
fwait
pop
ret
and
add
enter
mov
add
clc
sbb
add
cli
sar
clc
cmp
add
or
clc
cmpsb
clc
push
add
rcrb
add
or
nop
test
clc
es
cmp
add
aaa
sbb
mov
sub
ret
mov
scas
jge
jp
clc
mov
mov
add
mov
mov
add
jno
add
or
add
adc
add
add
gs
insl
add
add
add
pushf
test
dec
and
add
add
clc
int
clc
pop
jnp
filds
add
nop
jmp
sahf
add
lods
mov
clc
xor
int
sub
pop
push
clc
sub
js
sar
add
iret
fdivl
inc
clc
js
pop
push
add
or
mov
mov
icebp
gs
out
mov
call
incl
adc
lahf
js
pop
jl
xchg
int
cmp
mov
add
push
add
in
push
sahf
lods
test
out
xor
add
outsl
enter
xor
add
add
add
dec
lahf
mov
add
adc
add
add
clc
in
mov
add
pusha
add
xchg
cmp
aad
or
clc
adc
add
add
push
nop
jmp
cmpsl
cmpsl
sahf
add
aam
mov
sub
icebp
add
add
adc
add
ror
mov
add
aam
sub
mov
add
inc
add
out
mulb
clc
iret
shll
add
test
fucomp
cmp
insb
adc
add
push
xor
add
add
sub
cmp
sbb
lods
jno
add
mov
call
incl
adc
push
add
aaa
adc
mov
clc
dec
aad
add
inc
clc
incl
pop
cmp
mov
xchg
ret
add
pop
dec
adc
add
add
mov
clc
mov
sbb
push
add
push
add
cmp
add
cmc
push
sub
idiv
xchg
and
add
mul
clc
testl
inc
add
ja
inc
add
lock
inc
add
sub
add
add
or
popa
nop
jmp
xor
cmp
shl
clc
sti
adc
add
clc
lods
pop
xor
popa
add
lods
cmp
repz
xchg
cmp
add
lret
cmp
dec
nop
jmp
movups
cmc
movups
clc
stos
in
jnp
clc
aad
clc
dec
aas
clc
jp
push
jmp
dec
add
push
test
sbb
into
mov
pop
inc
add
push
and
sub
add
testb
mov
add
jle
clc
fcomip
ficoml
cmp
scas
mov
bound
add
cmp
clc
jmp
jne
add
push
adc
xor
mov
add
clc
xchg
dec
sar
lahf
es
dec
jecxz
lahf
lcall
jmp
pop
push
sub
sub
add
inc
clc
nop
add
add
pop
idivl
mov
clc
sbb
test
mov
jecxz
add
nop
jmp
mov
movsb
clc
xchg
das
mov
and
add
sti
and
add
clc
out
out
inc
clc
xor
add
dec
jb
add
out
loopne
add
add
sub
inc
clc
movsl
clc
xchg
in
repz
in
cmpsb
clc
inc
add
jl
clc
pop
clc
inc
add
sar
add
mov
mov
nop
jmp
add
std
xchg
push
clc
xchg
and
add
add
mov
clc
scas
fs
lods
jl
sub
pop
cltd
cmc
in
push
xchg
xlat
jno,pn
add
add
repz
clc
push
clc
je
sbb
clc
fimull
lcall
adc
add
add
add
nop
jmp
xchg
add
add
test
fistl
lods
cmp
scas
test
clc
pop
pop
inc
add
fnstenv
add
shrd
add
mov
insl
mov
add
and
mov
push
nop
jmp
add
xor
clc
fmul
jmp
popa
add
imul
cltd
clc
add
icebp
xor
add
movsb
clc
or
imul
mov
out
in
pushf
or
repz
cmp
notb
test
call
add
push
sbb
rcl
xchg
or
aas
jbe
cwtl
push
add
or
add
mov
jmp
mov
out
shl
clc
dec
mov
fs
pop
sti
nop
lock
clc
add
in
pop
aad
es
scas
inc
clc
jbe
clc
or
add
pop
push
add
nop
jmp
sahf
push
add
pop
fimull
jns
clc
mov
clc
jle
mov
nop
jmp
and
lahf
cmc
push
add
shl
in
push
cmp
clc
jp
add
test
sar
clc
xchg
add
xchg
stos
push
or
add
clc
inc
add
sbb
or
clc
push
icebp
call
lods
sahf
push
xchg
ret
clc
inc
clc
xor
add
clc
jle
mov
fistpl
out
push
add
nop
jmp
xchg
pushl
rclb
fiadds
xchg
ret
std
add
in
insb
repz
pop
je,pt
add
clc
inc
clc
adc
iret
scas
out
test
enter
decl
adc
xchg
ret
sahf
psubd
add
int
popf
push
clc
cmp
add
push
mov
or
mov
nop
jmp
cmp
ja
add
ss
inc
add
jbe
or
cld
xor
add
push
mov
xabort
mov
lsl
add
mov
mov
nop
jmp
adc
gs
cmpsl
mov
lahf
jbe
and
add
xabort
clc
mov
mov
and
add
test
sbb
cmp
or
clc
pop
lret
stos
cmpsb
call
ljmp
push
add
cwtl
arpl
add
add
add
dec
add
add
add
mov
clc
or
out
test
xor
add
mov
out
aaa
int
push
add
nop
jmp
aam
sbb
add
loope
jbe
cmp
addr16
jmp
add
cmp
add
lcall
add
xchg
lret
clc
push
add
jae
add
rcr
adc
add
dec
push
icebp
xchg
pop
clc
int3
leave
sub
sarb
cmpsl
clc
pop
and
add
pop
push
enter
xor
add
push
hlt
sub
mov
ja
clc
jo
add
jl
test
mov
pop
nop
push
add
std
push
add
cmp
shlb
add
jmp
mov
clc
push
add
push
add
aad
addr16
lcall
xbegin
rorb
cmp
xor
add
in
sbb
lret
ret
clc
adc
add
push
movsl
clc
sub
mov
cmp
clc
in
cwtl
sbb
clc
iret
push
add
push
add
call
mov
add
add
std
and
add
mov
xchg
ret
roll
jb
add
add
sarl
jp
xor
add
push
pop
incl
add
add
cli
aam
pop
cltd
push
pusha
add
loope
pusha
add
xchg
dec
xchg
inc
add
cli
cmp
sar
jno
add
xor
add
add
int3
sbb
fsubp
clc
std
inc
add
outsb
mov
add
sub
jb
add
or
imul
addr16
cli
and
add
add
fst
sbb
test
call
incl
sub
jae
add
jmp
clc
lods
jae
add
outsb
mov
xlat
inc
add
ret
clc
push
popf
stos
in
jp
icebp
iret
xor
add
add
nop
mov
out
jmp
mov
cmpsl
add
add
jb
add
clc
loop
stc
in
push
clc
loopne
inc
add
xchg
xchg
jae
add
add
clc
sub
clc
inc
clc
popf
push
jmp
sub
add
xchg
xor
add
clc
cmpsl
clc
push
arpl
add
clc
int
clc
pop
inc
add
sar
clc
clc
dec
mov
clc
mov
bound
add
shlb
clc
push
add
and
sub
popf
xchg
inc
add
lods
aad
add
aas
cmp
pop
adc
rorl
cmp
and
clc
inc
clc
push
dec
insl
into
add
jbe
add
faddl
clc
ja
inc
add
adc
add
add
insb
jo
add
iret
and
int3
cmc
ljmp
mov
aas
jl
add
nop
jmp
add
push
loopne
lret
add
add
add
add
fsubr
mov
pop
sub
xlat
icebp
and
add
movsb
clc
lock
inc
clc
adc
fs
adc
add
mov
jmp
push
cmpsl
aam
jnp
mov
xchg
sub
sbb
xchg
notl
or
add
mov
mov
pop
es
fmul
jge
stos
jge
push
add
inc
add
insl
inc
add
stos
pusha
add
jbe
add
stos
and
add
add
punpcklwd
add
dec
push
mov
add
scas
sub
je
js
add
stos
mov
clc
xchg
pop
clc
jg
clc
shrl
inc
add
out
pop
push
add
adc
add
clc
mov
cmpsl
clc
adc
add
add
clc
clc
sgdtl
add
clc
inc
clc
call
clc
mov
rcr
cmp
or
add
jbe
lea
bound
add
inc
clc
outsb
xchg
cmp
clc
fisubs
faddl
add
inc
clc
leave
cmp
add
imul
clc
scas
arpl
add
fstl
push
sti
mov
clc
push
loopne
lea
mov
jmp
sahf
add
xor
add
add
dec
shll
add
mov
rcrl
cltd
cmc
xchg
add
add
nop
jmp
lods
and
jno
ret
cwtl
aaa
gs
jge
je
add
scas
adc
add
mov
lahf
adc
add
ja
add
jp
pop
mov
imul
movsl
clc
mov
js
ss
call
decl
add
jno
add
popa
nop
jmp
sahf
add
adc
or
adc
add
aam
pop
test
ficompl
clc
lret
add
add
mov
clc
push
ret
adc
add
add
sub
add
in
jb
add
add
aam
jbe
test
outsb
push
add
iret
clc
iret
pusha
add
imul
mov
xchg
ret
jnp
stos
push
push
add
stos
ja
clc
pop
mov
out
scas
ja
clc
push
clc
in
dec
popa
add
test
clc
loopne
mov
clc
fdivr
nop
mov
xor
add
add
pop
fstps
dec
push
jne
add
jno
add
add
loopne
insl
arpl
add
xchg
cmp
clc
lret
aad
aas
mov
cmpsb
clc
loopne
mov
cmp
clc
mov
clc
add
sahf
mov
add
mov
stos
out
gs
add
add
xchg
cmp
in
lock
add
repz
add
nop
int
call
inc
adc
inc
add
insl
dec
std
or
add
mov
clc
out
test
xlat
lock
push
push
add
jno
add
inc
add
dec
jne
fwait
rorb
jb
add
clc
sbb
loop
nop
jmp
std
pop
push
pop
jno
add
add
jg
mov
clc
push
mov
clc
lret
sbb
jmp
xor
add
add
add
sub
dec
stc
cli
xbegin
add
clc
in
adc
add
dec
mov
clc
mov
test
lret
add
add
mov
loopne
dec
clc
sar
pop
lods
push
sbb
add
pop
adc
add
sub
inc
add
dec
test
sub
xchg
iret
or
clc
sbb
fcomps
clc
insl
xor
add
dec
mov
push
mov
mov
test
jns
mov
clc
mov
test
loopne
xchg
addr16
in
mov
scas
or
rcrb
add
nop
jmp
lahf
adc
cmc
add
pop
idivl
outsb
in
pop
dec
sar
fistl
stos
xor
add
clc
daa
clc
xchg
mov
xchg
sbb
add
inc
add
add
lods
fisubrl
jns
add
add
add
sbb
clc
imul
add
jno
add
xlat
adc
sbb
clc
xor
add
xbegin
ljmp
add
jp
insb
xchg
adc
add
repz
push
add
xchg
xchg
fs
inc
add
outsb
and
add
sar
jno
add
bound
add
add
push
add
add
dec
mov
clc
mov
call
decl
jecxz
mov
popa
add
jae
add
mov
clc
sti
dec
mov
push
add
and
add
push
add
push
aas
es
dec
in
mov
sub
mov
and
add
sub
and
nop
jmp
and
out
adc
adc
add
cld
adc
add
mov
cmp
cwtl
add
add
ja
inc
add
adc
xchg
adc
add
xlat
jo
add
je
clc
and
icebp
jg
repz
fdivr
imul
sar
push
sub
xor
add
add
inc
clc
lret
mov
add
lret
cmpsb
clc
jb
add
mov
clc
push
add
inc
clc
sub
imul
lock
mov
aad
clc
cmpsb
clc
pop
sbb
add
or
add
fiadds
int3
mov
pop
push
add
add
add
xchg
and
add
xchg
push
add
xor
add
add
clc
cmp
push
cmp
pop
or
cmp
push
mov
aas
inc
add
jle
add
test
decb
add
sbb
clc
pop
mov
call
ljmp
cmp
clc
xor
push
jbe
sar
popl
sbb
cmp
clc
xabort
mov
add
mov
sbb
mov
jnp
clc
stc
test
test
icebp
mov
loopne
inc
clc
jbe
adc
add
pop
push
inc
clc
not
xabort
add
imul
pop
xabort
sbb
clc
fwait
cmp
mov
lret
in
adc
pop
rcrb
clc
mov
ror
rol
clc
add
add
nop
jmp
stos
add
cmp
add
std
pop
clc
jo
add
add
xchg
rcrl
mov
nop
jmp
inc
and
add
add
ret
mov
cs
clc
mov
fcom
dec
jmp
adc
add
push
cmp
xor
add
add
std
outsl
out
xbegin
mov
xor
add
or
clc
push
add
leave
dec
adc
add
sbb
sar
push
add
in
adc
add
add
sar
dec
call
arpl
add
in
inc
add
aas
push
repnz
outsl
cmp
call
add
clc
insl
cmp
dec
es
cmp
cmp
or
mov
xchg
mov
add
add
mov
add
jmp
clc
int
fdivrl
nop
test
or
dec
mov
add
jge
int3
mov
jge
cmc
pop
xchg
imul
or
ja
call
rcpps
add
or
loop
mov
mov
add
sbb
push
nop
jmp
adc
add
add
imul
push
sbb
xor
nop
jmp
add
jnp
insb
and
add
or
clc
xor
add
out
daa
clc
cli
jg
out
inc
clc
test
and
add
clc
popf
mov
clc
in
cmp
clc
imul
aas
loopne,pt
xlat
cwtl
test
add
nop
jmp
or
mov
cmc
pop
pop
cmp
mov
add
jb
add
nop
jmp
xchg
or
add
sbb
adc
mov
mov
shrl
mov
sbb
push
add
scas
mull
cli
jmp
add
lret
and
add
clc
xor
add
add
data16
gs
notb
add
xor
repnz
clc
mov
pusha
add
fs
dec
ds
clc
cmp
pop
in
ss
add
das
xchg
fcompl
mov
insb
or
add
cmp
and
add
inc
clc
popa
add
push
inc
clc
jae
add
stc
pop
aad
add
sti
imul
cmp
mov
add
cmp
clc
hlt
and
add
add
pusha
add
mov
mov
xchg
ret
sub
test
jne
aas
xchg
fwait
sbb
clc
sbb
add
and
add
cmp
lods
mov
mov
xchg
ret
jno
stos
push
add
mov
add
inc
clc
ja
bndldx
add
mov
nop
jmp
add
cmp
sub
add
clc
lock
rep
data16
fstpt
ss
sbb
jmp
leave
add
add
ret
lods
sub
xchg
mov
movsb
clc
clc
mov
nop
jmp
dec
add
leave
pop
clc
sbb
mov
push
mov
xchg
ret
add
add
lahf
bound
add
rdmsr
add
inc
add
mov
mov
clc
pop
jnp
ja
repz
pop
add
clc
lahf
lock
push
mov
clc
cwtl
cmp
jnp
add
xchg
dec
arpl
add
push
mov
xchg
ret
popl
enter
icebp
nop
jmp
xchg
pushf
add
xchg
adc
clc
cli
popf
pop
sub
clc
inc
clc
je
clc
insb
push
jp
mov
add
add
add
ja
push
insl
in
decb
add
add
lock
shlb
add
xor
add
scas
pop
add
add
mov
clc
jns
pusha
add
rcr
pop
clc
and
add
mov
add
add
fldl
add
popf
in
pop
nop
fstpt
jae
add
inc
add
arpl
add
loop
add
add
pop
lret
clc
ss
jmp
clc
cmp
or
add
ffreep
clc
pop
jg
cmp
clc
sldt
add
lods
jns
bound
add
int3
lret
add
add
xchg
xabort
incb
push
test
sar
imul
and
add
clc
fistps
mov
mov
cmpsl
clc
cmp
add
into
bound
add
idivl
clc
pop
fsubs
clc
cmp
rol
clc
lret
cmp
add
add
add
idivl
repnz
sub
sahf
jg
sub
add
std
lods
cmp
mov
clc
lret
daa
clc
out
inc
clc
inc
clc
call
jmp
inc
clc
inc
clc
mov
stos
inc
push
cmc
jns
or
js
jl
dec
repz
mov
clc
pop
and
add
lahf
loopne
jae
add
loopne
sbb
pop
lahf
jle
add
cli
shrl
add
mov
ljmp
mov
jl
cmc
lahf
mov
add
loop
jecxz
aad
clc
insb
stos
add
lcall
clc
xbegin
out
test
push
jle
clc
gs
outsl
sub
jmp
add
and
movl
in
adc
fisubrl
daa
clc
pop
add
mov
xchg
push
ja
sahf
inc
clc
fisubrl
push
sbb
clc
dec
je
mov
add
dec
popf
enter
add
mov
out
and
add
adc
jmp
add
xchg
add
clc
mov
decb
add
aas
out
aas
repz
mov
lods
xchg
jnp
clc
xor
add
mov
inc
add
in
shrl
cld
push
ljmp
mov
push
add
xor
add
push
pusha
add
ljmp
adc
add
nop
jmp
shll
int3
sbb
push
imul
fisubrl
jmp
inc
add
imul
add
nop
loop
fs
in
shll
add
ljmp
loopne
loop
mov
mov
popf
std
or
jmp
mov
fnsave
xabort
lret
nop
jmp
add
stos
js
lods
imul
add
xchg
xchg
in
xor
add
test
push
hlt
or
push
adc
add
clc
js
sbb
clc
iret
pusha
add
xor
add
add
into
cmp
clc
pop
pop
clc
cmp
sub
push
mov
dec
mov
add
je
clc
xchg
xchg
rcrl
mov
clc
cmc
data16
xor
add
clc
cmpsb
clc
cmp
mov
add
ljmp
ljmp
popf
mov
fcmove
fildl
add
movsb
clc
xor
dec
je
dec
xchg
idivb
or
add
test
dec
jnp
mov
mov
sbb
jnp
scas
cmp
sub
ret
clc
loopne
loop
hlt
outsb
in
dec
mov
imul
cmpsl
clc
add
add
gs
gs
jb
add
inc
clc
hlt
and
fnstenv
or
clc
mov
mov
inc
add
nop
out
pop
inc
add
xor
add
clc
iret
xchg
daa
clc
dec
mov
jo
add
clc
mov
add
add
add
push
sub
nop
jmp
add
mov
push
mov
xchg
ret
cmp
repnz
mov
jge
aaa
pop
and
add
add
leave
mov
flds
clc
push
add
add
add
add
push
mov
xchg
ret
xchg
lock
inc
clc
sahf
stc
jle
xchg
int3
mov
stos
pop
out
inc
add
pop
mov
jno
add
stos
stos
imul
xchg
mov
cmp
ss
add
add
cmp
clc
mov
xor
add
add
decl
fiaddl
xchg
ret
jnp
add
clc
xchg
sub
flds
je
popa
add
inc
clc
mov
clc
mov
xor
clc
inc
clc
mov
add
in
jne
int3
jno
add
or
pop
jmp
clc
test
xlat
outsb
xchg
ljmp
jb
add
clc
inc
add
int3
lea
xor
add
mov
add
or
and
add
clc
xchg
in
jo,pt
add
data16
lcall
pop
and
add
add
repnz
add
sub
sar
clc
jle
mov
xor
add
gs
add
xor
add
clc
add
add
lea
sbb
clc
sbb
sub
lcall
push
mov
clc
mov
lods
in
or
cmp
clc
lods
cmpsl
clc
outsb
shr
adc
add
add
sbb
add
mov
jmp
add
rorb
add
cmpsb
clc
inc
clc
cmp
clc
cmp
and
cmp
std
or
clc
sbb
sti
jbe
clc
mov
movsl
clc
jg
jmp
jne
add
pop
mov
aam
add
mov
adc
mov
mov
mov
pop
sar
add
data16
cmp
ret
clc
divb
add
in
fnstsw
addr16
pop
push
mov
aam
fwait
cmpsl
leave
lods
movsl
clc
int3
pop
outsb
mov
repnz
clc
dec
dec
mov
stos
repnz
add
iret
or
add
xchg
cmp
clc
sub
lea
pop
enter
int
push
add
jge
clc
sub
clc
push
pop
push
mov
xchg
ret
pop
and
cli
fdivl
add
add
clc
popa
add
test
cmp
add
clc
inc
add
mov
sbb
adc
add
out
aam
add
add
add
ret
clc
sub
or
leave
inc
add
cmp
add
into
clc
cmp
add
cmc
pushf
clc
lea
add
add
addr16
movsb
clc
sti
mov
pop
mov
in
shlb
imul
xchg
iret
add
add
pop
clc
outsb
out
mov
add
shrl
in
out
pusha
add
push
clc
xchg
add
add
and
xchg
mov
clc
stc
scas
or
lea
lcall
mov
clc
nop
fdivr
outsb
shl
or
clc
or
pop
sti
stc
test
jne
clc
mov
out
pop
adc
add
outsb
xlat
adc
xor
add
mov
mov
add
scas
mov
add
iret
fldcw
xchg
test
and
add
xabort
inc
add
fcmovnbe
gs
sbb
clc
mov
and
add
jge
clc
jne
inc
add
fs
test
ret
ret
clc
sub
xor
add
inc
clc
mov
add
js
clc
jg
out
sbb
pop
lret
add
sub
scas
movsl
clc
xchg
rcll
add
clc
call
icebp
nop
jmp
addb
jno
add
clc
and
add
clc
insb
xor
add
add
sub
clc
sar
icebp
sbb
clc
pushf
imul
clc
in
pop
pusha
add
adc
add
add
cmp
rcrb
sub
xchg
adc
add
clc
sub
cmp
clc
scas
mov
and
add
mov
popa
add
dec
xchg
push
lods
push
mov
xchg
ret
adc
add
sbb
nop
jmp
and
mov
add
add
clc
mov
fwait
xabort
subl
nop
jmp
js
adc
dec
fcmove
and
add
fidivrs
add
jmp
add
and
add
clc
pop
sbb
inc
clc
push
add
push
add
incl
xchg
add
dec
push
mov
push
mov
xchg
ret
jnp
xchg
xabort
aas
and
mov
lea
cwtl
jl
clc
iret
ror
lret
in
pop
adc
add
mov
xor
add
add
inc
clc
xchg
test
lret
pusha
add
push
lea
nop
jmp
add
adc
add
add
sub
clc
int
in
mov
sti
mov
clc
inc
add
js
mov
nop
mov
add
scas
dec
addr16
jle
add
sbb
inc
add
mov
add
stos
mov
xabort
push
clc
pushf
push
clc
xor
cmp
add
cld
xbegin
aam
scas
jo
add
in
mov
clc
mov
add
aam
clc
mov
clc
sar
cmpsl
clc
lea
add
das
lahf
and
ret
clc
add
cmp
rcrl
add
decb
fucomip
std
test
add
adc
add
clc
scas
mov
xor
add
jge
mov
ret
clc
inc
add
push
clc
xor
add
clc
cmp
ret
mov
mov
add
add
in
dec
jle
clc
sub
cmp
add
cmp
mov
repnz
iret
mov
clc
inc
add
xor
sub
lods
es
mov
xchg
add
xchg
test
push
jbe
arpl
add
rolb
jmp
add
cmp
add
js
clc
inc
add
popf
mov
jg
clc
push
inc
clc
shlb
bound
add
sbb
sti
and
add
xchg
mov
iret
dec
mov
cmp
clc
push
cmp
adc
add
add
cmovg
sub
add
gs
add
add
dec
mov
clc
cmc
insb
test
daa
clc
xchg
and
lret
add
mov
nop
jmp
jnp
lods
leave
xchg
std
push
adcb
xor
into
add
add
clc
mov
clc
xor
pop
clc
call
clc
pop
xchg
sbb
push
add
movsb
clc
cwtl
dec
in
dec
sub
es
adc
loope
sbb
cmp
mov
adc
cmpsl
cmp
add
daa
clc
mov
add
mov
clc
push
scas
movsb
clc
or
pop
push
push
addr16
sbb
bound
add
out
es
adc
dec
or
fcoms
add
femms
cmp
add
add
add
xor
add
and
add
ja
add
inc
clc
mov
pop
cli
jae
add
adc
add
mov
clc
fidivrs
cmp
pushf
sar
push
sub
clc
dec
cmp
out
xchg
fldt
movb
xchg
ret
and
insl
jmp
clc
ljmp
clc
gs
into
daa
clc
mov
imul
movsb
clc
push
add
dec
mov
into
shl
push
pusha
add
and
add
jnp
add
sub
nop
jmp
add
lods
adc
gs
add
mov
fnstsw
sub
das
and
add
imul
xchg
mov
lret
adc
mov
sbb
cmp
mov
popf
cmc
in
jno
add
add
daa
clc
iret
xchg
jg
sub
add
mov
clc
fists
mov
scas
psllw
clc
jae
shl
clc
sbb
lods
into
call
ljmp
stos
lods
mov
jno
dec
add
aam
xchg
xchg
xchg
movsb
clc
jl
repnz
out
cmp
arpl
add
dec
push
add
lret
xchg
jns
mov
xor
add
in
ret
clc
rcr
repz
inc
clc
outsl
xbegin
adc
add
add
dec
xor
into
call
in
add
add
push
das
popa
inc
clc
sti
sub
ljmp
cmp
dec
inc
add
push
add
mov
mov
sbb
enter
cmp
mov
mov
add
add
xor
add
imul
rcrb
sub
add
scas
add
mov
xbegin
daa
clc
xor
add
clc
pop
push
lea
add
xchg
inc
add
pop
sti
jp
add
cltd
mov
das
aam
enter
test
add
dec
cmp
mov
clc
pushf
jo
add
xor
add
outsl
ficompl
push
adc
add
cli
in
mov
iret
cs
lcall
add
clc
mov
sbb
push
add
adc
add
jg
add
xchg
sahf
mov
add
add
stc
dec
das
and
and
add
stc
inc
add
lahf
sar
push
push
mov
jmp
add
mov
pop
add
add
sar
clc
push
stc
cli
pop
addps
add
clc
popf
jl
and
add
fwait
xchg
lret
jns
das
clc
in
push
or
clc
aas
pop
add
lods
sar
mov
clc
xor
add
xor
add
arpl
add
imul
clc
sbb
mov
sar
clc
jnp
clc
inc
clc
dec
mov
add
add
clc
flds
add
cmpsl
clc
xchg
cmp
pop
mov
lea
push
mov
clc
mov
cmp
jne
clc
in
push
fsub
clc
je
clc
outsl
cmp
clc
push
jmp
or
add
add
dec
sub
clc
mov
addr16
jp
shll
in
adc
inc
add
cmp
clc
mov
add
loopne
or
jg
out
stos
cmp
clc
movsl
clc
aas
push
jle
push
mov
out
jnp
add
add
add
add
stc
bound
add
fsubrl
xchg
stos
jne
adc
cmp
add
dec
lock
lods
adc
add
jmp
addr16
insb
inc
clc
jns
aam
add
add
add
outsb
push
fwait
jl
inc
add
push
add
icebp
lock
clc
aad
addr16
pop
js
sub
mov
dec
idivb
clc
cmp
pushf
pop
jge
stc
sarl
test
jp
add
xchg
iret
jmp
add
dec
push
sub
enter
clc
gs
jmp
cmp
push
xor
add
sub
clc
cmp
adc
add
mov
clc
xor
add
clc
stc
cltd
data16
xbegin
clc
rcrl
cmc
push
push
ljmp
roll
inc
add
sti
cmp
loop
xor
jae
add
lea
clc
hlt
push
add
pop
pmaxub
dec
push
lahf
loop
dec
xlat
dec
lods
loop
lahf
xchg
in
das
xchg
pop
insl
add
add
add
clc
mov
add
mov
inc
clc
mov
pop
clc
stos
push
add
es
cltd
sar
cmp
mov
add
inc
add
xchg
mov
jecxz
sub
add
clc
inc
add
mov
test
clc
rcrb
push
clc
out
mov
add
jmp
lea
inc
add
mov
cmp
sbb
mov
add
add
dec
loopne
clc
or
clc
ds
test
sar
int
sub
jg
mov
lcall
inc
clc
aas
xor
add
clc
mov
clc
jb
add
add
add
jge,pn
enter
add
add
pop
inc
clc
mov
clc
movsb
clc
je
sub
add
test
gs
fwait
testl
lea
clc
icebp
sahf
call
push
add
dec
push
add
mov
cmp
clc
sti
mov
clc
fiadds
add
loopne
imul
sub
push
add
jnp
jmp
out
int
add
sbb
adc
add
dec
fildll
clc
loopne
inc
clc
fchs
clc
pop
inc
add
jl
clc
inc
clc
leave
xor
add
clc
adc
jecxz
cmp
cmp
mov
test
jmp
test
add
je
loopne
push
clc
fdivrl
inc
add
mov
je
pop
adc
clc
and
add
clc
cmp
push
test
pop
xor
add
add
out
mov
add
mov
mov
clc
lea
jg,pt
clc
inc
clc
xbegin
adc
add
sub
std
ret
clc
shr
adc
add
pop
pop
clc
inc
add
jae
add
xlat
mov
clc
sub
cmp
clc
addr16
testl
call
dec
inc
add
sbb
add
lea
pop
sar
cmp
outsl
mov
sub
push
jl
clc
arpl
add
add
in
idivl
jge
add
jbe
mov
push
add
mov
cmp
clc
xor
add
add
nop
xchg
fcmovnbe
ret
clc
xor
add
mov
xor
add
dec
test
mov
add
xor
add
roll
clc
pusha
add
loopne
and
add
jecxz
mov
add
loop
sbb
pop
push
clc
add
add
add
inc
add
fisubl
imull
ljmp
add
dec
stos
insl
fwait
mov
fwait
sar
fwait
nop
mov
mov
clc
mov
sbb
cmp
clc
cs
add
mov
clc
mov
rorb
dec
jle
jecxz
pop
pop
negb
add
lock
lret
push
gs
sbb
add
xchg
sbb
jne
clc
inc
clc
mov
and
add
xchg
cmp
mov
outsb
aam
jp
fucomp
xbegin
cwtl
sub
xchg
xchg
lods
iret
call
out
dec
add
add
sbb
pusha
add
xor
clc
addr16
xchg
iret
test
cmp
mov
clc
mov
clc
test
clc
sbb
and
fidivs
add
lahf
cwtl
aad
clc
push
adc
add
add
inc
add
bound
add
mov
cmc
mov
clc
mov
sbb
add
lods
jnp
test
xchg
push
addr16
and
add
sub
jge
jb
add
add
clc
faddl
clc
adc
add
sub
xchg
insb
pop
clc
js
clc
out
jae
add
call
xor
add
clc
adc
add
aas
aam
cmpsb
clc
daa
clc
imul
clc
scas
pop
arpl
add
imul
add
xor
add
testb
insl
mov
clc
or
cld
fisubl
add
pop
add
or
add
rorb
dec
repnz
std
imul
bound
add
add
cltd
mov
xor
jbe
int3
ljmp
jns
xor
add
insl
nop
pextrw
movsb
clc
xchg
push
adc
add
test
jmp
call
fwait
in
pop
scas
dec
jnp
clc
push
add
inc
add
mov
mov
sahf
add
add
adc
add
insl
push
add
adc
xchg
add
add
clc
out
mov
jmp
mov
mov
xchg
xchg
fucom
clc
or
sub
clc
xor
add
clc
in
ret
clc
push
sahf
lock
sti
cmp
int3
jecxz
pop
clc
sub
add
sub
add
iret
jle
loop
cltd
jo
add
clc
divps
aam
pop
xchg
insb
lret
popa
add
jns
stos
push
pushf
inc
clc
or
xor
add
stos
sub
add
loopne
sar
clc
inc
clc
xchg
cmpsb
clc
push
sub
adc
add
dec
sar
mov
xchg
adc
dec
bound
add
int
add
dec
dec
in
pop
xor
add
dec
and
add
jp
jns
pop
mov
pop
rolb
add
pusha
add
cwtl
push
lret
repz
cwtl
bound
add
adc
add
mov
mov
jg
xchg
insb
mov
clc
repz
iret
xchg
je
lcall
sub
adc
add
or
addr16
pushf
cmc
movsb
clc
bound
add
repnz
mov
clc
mov
loop
in
sti
xor
clc
or
add
aad
xlat
add
daa
clc
pop
fsubl
clc
sub
add
out
mov
xchg
stos
popa
add
pop
clc
fisttps
sbb
clc
lods
xchg
imul
add
pop
sbb
mov
pop
pop
jl
or
push
testl
add
outsl
pop
sbb
add
push
add
test
cwtl
pop
movsl
clc
dec
data16
push
add
mov
mov
in
sub
add
sub
sub
stos
mov
mov
clc
adc
add
lret
jb
add
xchg
xabort
ret
add
in
jb
add
mov
jb
add
fnsave
pop
in
cmp
clc
fadds
clc
xchg
mov
push
cmp
fists
out
loop
xor
clc
xchg
mov
imul
scas
mov
gs
idiv
ss
das
data16
mov
add
fsubrp
fcom
inc
add
push
outsb
and
add
push
notb
ds
test
jno
add
push
and
add
clc
xchg
xchg
mov
clc
mov
push
clc
sbb
add
add
fwait
add
stos
cmp
push
add
pop
clc
imul
inc
add
pop
daa
clc
sarb
add
add
inc
add
sbb
sub
clc
push
lock
fisubl
add
add
out
xchg
sbb
clc
clc
jns
add
cmp
clc
mov
clc
sahf
fdivrl
mov
push
fisubrl
mov
pop
aam
faddl
add
add
xor
add
into
mov
add
adc
xor
add
cli
mov
add
adc
add
gs
repz
add
add
push
inc
clc
sub
loop
cltd
cmpsb
clc
js
adc
add
add
xor
add
clc
rorb
ret
push
fs
ret
clc
xbegin
clc
jmp
add
mov
lret
dec
ljmp
add
add
push
pop
mov
add
adc
sbb
clc
sub
add
mov
loope
mov
add
imul
add
mov
or
mov
clc
pop
popa
add
jg
xlat
lcall
add
inc
clc
ret
sbb
xor
vmovhps
daa
clc
sbb
movsb
clc
inc
clc
cmp
mov
in
cmp
sahf
push
clc
call
int3
mov
jl
add
dec
mov
mov
pusha
add
das
dec
lcall
add
mov
add
add
dec
sub
push
dec
test
mov
pop
aam
push
add
sub
out
es
push
sbb
int
clc
sub
sbb
add
xor
add
add
xor
add
cltd
arpl
add
add
fiadds
add
cmp
movsl
clc
sbb
lock
add
cmp
shrb
add
add
sbb
clc
and
add
fwait
cmp
cmp
repz
es
or
lahf
xbegin
push
test
gs
sbb
ja
cmp
clc
arpl
add
inc
clc
cli
pop
inc
clc
fwait
loope
inc
add
stos
sahf
adc
add
mov
clc
fmuls
cmp
clc
sahf
pop
jg
clc
or
add
clc
cmp
add
add
clc
push
clc
jl
add
sub
pop
cmpsb
clc
pop
adc
clc
lods
pop
mov
clc
push
jge
mov
add
clc
push
jne
sbb
loop
sub
out
sub
and
add
clc
enter
xabort
clc
ret
xchg
sbb
add
mov
popa
add
rcrb
xbegin
cli
int3
shr
dec
sub
add
clc
sar
adc
add
add
mov
popf
aam
shlb
add
xchg
jae
add
dec
flds
mov
shll
add
imul
add
ja
adc
add
mov
rclb
dec
cs
cmp
fdiv
not
mov
cmp
xor
add
add
cmp
movsl
clc
and
and
add
clc
xchg
push
arpl
add
or
add
or
clc
xor
add
add
clc
out
in
fisttps
dec
std
mov
add
or
clc
cmp
push
mov
clc
push
jae
add
add
jae
add
add
add
mov
out
xor
dec
jbe
mov
clc
lock
jg
mov
clc
movsb
clc
sbb
add
movsl
clc
sub
out
das
movsb
clc
in
dec
cmp
xchg
clc
sbb
cmp
cmp
clc
lret
xor
daa
clc
cmp
clc
data16
push
dec
adc
add
mov
cmp
and
test
and
add
add
jno
add
push
add
xchg
ds
mov
add
clc
mov
xbegin
or
and
in
and
add
ret
clc
push
or
adc
add
repnz
add
daa
clc
imul
cwtl
and
cli
mov
daa
clc
pop
out
lods
lcall
fwait
mov
mov
or
clc
jl
cmp
lret
add
add
sub
sub
clc
ss
mov
adc
add
add
sbb
clc
aad
lods
or
fisttpll
xlat
mov
lret
scas
lcall
imul
add
sar
mov
clc
dec
nop
ja
clc
out
dec
sbb
mov
inc
add
push
cmpsb
clc
popa
add
or
xchg
dec
cmpsl
clc
inc
add
pop
pop
pop
lret
or
xchg
pusha
add
cmp
push
clc
jmp
and
add
fistl
div
in
stos
nop
mov
pop
roll
mov
clc
xor
add
cmp
add
mov
sub
add
mov
add
push
dec
cmp
lcall
loop
repz
lock
add
jl
add
add
add
es
aaa
lret
add
scas
enter
add
xor
add
dec
sub
cmp
add
test
lcall
sub
sbb
scas
dec
cmp
mov
test
fcmove
jg
and
data16
or
clc
push
jno
add
mov
clc
mov
and
add
clc
jno
add
cli
stos
jnp
sbb
clc
jbe
scas
lahf
out
mov
insb
data16
cmp
clc
cmpsb
clc
mov
inc
clc
cltd
ds
mov
jecxz
scas
add
add
add
push
in
mov
sub
add
clc
lret
and
add
clc
xor
push
add
fwait
clc
and
clc
icebp
push
loope
jno
add
decb
clc
sbb
mov
add
add
scas
cmp
add
ja
push
fimuls
mov
notb
add
clc
out
cmpsb
clc
sti
adc
add
clc
xor
add
mov
fbstp
add
insl
mov
outsl
xor
add
clc
repnz
xor
add
push
push
add
jo
add
fld
clc
pop
jb
add
call
jo
add
push
add
add
cmp
clc
jmp
add
ficoms
cwtl
ljmp
push
add
mov
xor
add
fstl
push
push
clc
sar
inc
add
data16
int
add
int3
and
add
clc
inc
clc
push
pop
cmp
or
repnz
shll
add
push
clc
inc
clc
pop
lea
push
ja
xor
add
add
inc
clc
cmp
clc
or
mov
xbegin
clc
lret
sub
xor
clc
lret
mov
xchg
sbb
sub
popa
add
repz
xor
add
je
leave
mov
clc
xbegin
add
shll
dec
push
clc
dec
div
in
xor
add
xchg
mov
pop
negb
inc
add
jp
add
xchg
icebp
pop
stos
pusha
add
stos
stos
pop
sub
dec
cmp
clc
mov
ljmp
cmp
xchg
fsubrl
xor
jl
sub
scas
jge
cmpsb
clc
jae
add
sub
lods
cmp
clc
inc
add
int3
jb
add
or
in
insl
dec
add
add
lods
lcall
cmp
mov
clc
inc
add
loope
mov
clc
inc
add
xchg
push
add
xor
add
inc
clc
call
pop
fistpll
jle
sub
add
add
add
in
cmp
clc
enter
sbb
or
xor
xor
sar
scas
dec
into
ljmp
clc
mov
add
add
clc
cmp
stos
mov
fs
iret
and
add
add
add
clc
cli
aam
or
clc
add
push
mov
xchg
jg
clc
inc
add
cmp
ds
in
dec
sti
xor
add
and
add
shr
inc
clc
pop
sub
pop
fcoml
flds
add
ficomps
cmp
int3
jp
js
test
clc
xlat
push
int
ljmp
cmp
rcll
or
movsl
clc
gs
arpl
add
add
das
cmp
clc
push
add
pop
clc
outsl
pop
jge
push
inc
add
mov
cmp
dec
hlt
dec
out
int
add
ljmp
inc
add
sahf
lods
mov
sbb
jecxz
daa
clc
sti
daa
clc
cltd
pop
jbe
xchg
int3
mov
clc
in
xor
add
clc
pcmpgtw
adc
add
add
clc
in
ja
mov
clc
loopne
lret
pop
adc
add
es
sar
clc
nop
lret
mov
mov
add
add
clc
mov
clc
cmp
loopne
dec
icebp
cmc
mov
mov
mov
pop
rorl
inc
add
cmp
insb
pop
stc
in
js
or
clc
adc
add
cmp
xchg
push
loop
push
lcall
cs
in
adc
add
mov
xor
add
jo
add
sar
data16
loopne
dec
mov
into
bound
add
pop
dec
xor
add
inc
add
ret
pop
divb
push
pop
mov
add
loop
inc
clc
or
add
mull
fstpt
jecxz
sub
add
popf
sbb
loop
push
sbb
cmp
movsl
clc
pop
clc
adc
add
mov
add
sub
nop
inc
clc
imul
popa
add
or
pop
push
push
clc
mov
add
dec
sbb
and
add
add
and
add
dec
jg
dec
inc
add
out
xor
add
mov
sub
push
add
popf
int
mov
add
mov
mov
add
add
push
mov
cmc
ficoml
add
clc
mov
add
cmp
add
sbb
mov
add
dec
pop
jecxz
mov
cmp
clc
movsl
clc
sar
add
ljmp
cmp
sbb
clc
loope
jns
add
jmp
mov
dec
adc
add
sbb
scas
and
add
push
dec
mov
outsl
inc
clc
movsl
clc
push
add
or
clc
pop
addr16
outsl
mov
jmp
xchg
add
add
add
add
add
rclb
add
clc
push
sub
add
hlt
jns
mov
sub
mov
in
stos
pop
enter
add
add
out
mov
add
pop
clc
sub
add
inc
add
pop
clc
dec
dec
jo
add
add
xor
add
mov
inc
clc
cmp
mov
add
icebp
adc
add
imul
movsl
clc
in
lret
sar
dec
push
add
add
add
adc
add
inc
add
fidivrs
sub
clc
jmp
cmp
mov
dec
rorb
pop
clc
es
js
es
cmp
mov
popa
add
std
jbe
mov
xchg
and
add
add
sub
adc
xlat
add
add
fistpll
sbb
aam
dec
lahf
std
clc
mov
adc
add
lret
push
mov
xbegin
add
gs
mov
sar
mov
add
mov
add
adc
add
addr16
cmp
clc
test
adc
add
clc
push
add
add
test
and
shlb
cmp
clc
ja
bswap
movsl
clc
cmp
cmp
decb
fs
mov
clc
adc
add
add
loop
sar
inc
add
fbld
add
push
je
xchg
int3
cmp
adc
add
test
lcall
add
add
cmp
aam
add
add
add
add
lods
push
add
and
add
lcall
jno
add
das
inc
add
shll
add
lods
jne
into
mov
clc
jp
push
xchg
cmp
push
daa
clc
cmp
insb
pop
cli
fcoms
sub
clc
mov
jae
add
add
sub
clc
jecxz
mov
clc
xbegin
add
popf
cwtl
sub
cmp
add
das
xchg
cmp
das
cmp
mov
gs
cwtl
push
sbb
lahf
outsb
mov
fnstcw
xor
add
add
dec
and
inc
add
xchg
push
clc
cmp
add
in
cmp
add
add
outsb
es
dec
adc
add
add
loopne
lret
clc
sub
jg
cwtl
clc
jae
add
add
add
add
lods
cs
and
add
jo
add
aas
fs
jp
clc
inc
add
rorl
add
push
lea
cltd
shll
cmp
repz
clc
xchg
jne
clc
xor
add
fsts
add
cwtl
pop
arpl
add
adc
add
cmp
add
add
add
add
add
clc
testl
mov
clc
mov
jle
and
rcll
add
int
jg
clc
mov
sbb
add
ret
or
clc
xchg
movsb
clc
mov
sub
imul
xor
add
add
cmp
dec
imul
push
pop
or
and
add
clc
add
add
clc
mov
add
fstpl
xchg
lcall
sar
dec
out
mov
bound
add
clc
fs
stos
insb
sti
dec
xor
or
clc
jo
add
pop
xchg
jno
add
clc
fistl
sbb
loope
stos
fisttpl
inc
clc
clc
sbb
clc
sar
push
roll
add
add
clc
jl
sar
clc
repnz
add
inc
clc
sahf
jo
add
clc
xchg
sbb
es
sbb
sbb
dec
pop
call
clc
dec
jb
add
clc
lods
popa
add
call
cmpsb
clc
popl
add
incl
jmp
clc
fdivrl
jno
add
repnz
icebp
mov
clc
dec
mov
cmpsl
clc
sub
pop
test
fnstcw
xor
add
clc
inc
add
aas
sub
and
add
clc
inc
add
mov
adc
add
jne
mov
or
clc
ja
add
or
clc
sub
dec
jge
add
pop
xor
add
add
xor
add
and
inc
clc
and
add
fs
xchg
jns
push
mov
xchg
and
add
clc
jb
add
bound
add
and
xor
clc
xor
add
add
dec
stos
insb
mov
ficompl
jmp
cmp
clc
inc
add
out
adc
add
fildl
sbb
add
jge
add
iret
push
sub
jmp
dec
cmp
clc
jno
add
loope
rclb
jo
add
in
bound
add
add
mov
fnsave
and
add
int3
rcrb
add
dec
lret
mov
stos
push
bound
add
jnp
clc
mov
dec
fsubs
clc
xchg
cmc
push
inc
clc
leave
xlat
mov
or
clc
mov
add
cmp
pop
sbb
cwtl
or
clc
arpl
add
add
es
inc
clc
pop
std
enter
pushl
add
clc
mov
cld
es
dec
outsb
test
inc
add
enter
add
mov
clc
jnp
add
in
rol
clc
xor
add
clc
add
add
mov
add
pop
xchg
into
add
add
clc
fwait
shr
sbb
mov
mov
dec
lea
clc
rol
clc
cmp
lock
loop
or
cltd
jp
add
imul
cmc
test
inc
clc
insl
loopne
pop
inc
add
imul
clc
pusha
add
mov
scas
xchg
pop
loopne
jl
add
daa
clc
push
add
aam
loope
xor
add
add
mov
movsb
clc
fisttpl
add
mov
clc
jnp
mov
clc
arpl
add
add
jg
xchg
add
add
mov
and
add
add
cmc
cli
in
ficompl
and
add
clc
xchg
lfs
xbegin
es
negl
jmp
incl
clc
xabort
pop
adc
add
mov
outsb
sub
add
mov
clc
push
add
mov
mov
pop
push
add
in
sub
jae
add
add
clc
scas
fucom
clc
mov
adc
add
add
clc
imul
add
cmpsb
clc
icebp
jnp
xor
add
mov
sahf
lea
add
add
dec
cli
push
clc
mov
push
add
ret
clc
enter
test
jnp
clc
adc
add
add
clc
pop
cmp
es
inc
add
movsb
clc
xabort
mov
fsub
clc
jmp
out
outsb
pop
mov
aad
sbb
push
sti
pop
mov
mov
jl
test
pop
je
iret
pushf
xbegin
push
add
or
or
mov
popa
add
lcall
aam
ss
add
adc
cmp
clc
mov
rcrl
data16
pop
movsl
clc
mov
add
add
add
jg
and
add
add
inc
clc
mov
pop
xchg
sar
rcrl
clc
push
stos
sub
add
mov
clc
mov
mov
add
xabort
add
jle
add
cmp
xbegin
and
push
add
pop
xchg
ljmp
out
mov
add
and
lret
cmp
loop
push
add
sahf
and
add
add
xor
add
mov
jo
add
xchg
int
clc
sar
clc
add
add
clc
cmpsb
clc
xchg
push
clc
cmp
sub
lea
popa
add
int3
data16
loop
lea
or
stos
pop
iret
inc
add
mov
data16
sub
fucomp
icebp
fwait
data16
or
sti
gs
in
push
add
pop
daa
clc
xchg
sbb
mov
out
jo
add
clc
movsb
clc
sbb
or
push
mov
arpl
add
jns
std
sbb
add
inc
clc
mov
jge
clc
jg
adc
pop
xor
add
add
add
adc
clc
outsl
inc
add
jae
add
clc
std
pushf
mov
add
jo
add
mov
stos
test
add
inc
add
ss
int
repnz
mov
sub
cli
xor
add
fadds
add
add
lcall
add
mov
clc
dec
adc
add
lea
aas
gs
daa
clc
mov
movsl
clc
aas
mov
adc
add
mov
add
movsl
clc
lock
gs
scas
sbb
arpl
add
mov
xchg
pop
clc
jnp
add
fldenv
sub
clc
dec
mov
push
push
clc
imul
int
inc
clc
cmpsl
clc
enter
add
out
xor
add
pop
push
nop
or
and
dec
jl
cwtl
jns
clc
iret
pop
inc
clc
lods
pop
leave
inc
clc
decb
push
mov
add
add
imul
fidivrs
clc
cmp
repz
add
add
repz
add
xor
add
add
add
clc
ror
sub
clc
xor
xbegin
in
mov
xor
add
clc
mov
add
push
add
mov
clc
mov
lcall
or
cmp
push
add
fsubrs
cmp
testl
loope
scas
xlat
xchg
adc
add
clc
jb
add
jg
mov
push
clc
in
mov
pop
test
lret
aas
mov
clc
jne
std
imul
pop
leave
frstor
add
es
sub
push
clc
push
test
or
cltd
cmp
inc
add
sahf
out
mov
leave
xchg
dec
in
insl
add
add
add
js
clc
pop
xor
add
jl
clc
sub
clc
lock
sbb
add
test
adc
add
dec
bound
add
lret
rcll
cwtl
dec
sub
dec
jo
add
clc
out
push
into
push
clc
insl
sbb
je
out
push
add
dec
xor
clc
and
add
cmpsl
clc
sbb
add
fs
mul
clc
stc
sub
gs
or
adc
add
mov
cmc
jne
push
sbb
std
outsb
mov
clc
out
pop
aaa
nop
nop
sahf
or
lahf
cmpsb
clc
fldenv
add
add
stos
jns
clc
pop
arpl
add
add
add
in
enter
add
pop
mov
clc
arpl
add
add
in
ja
clc
scas
dec
stos
pop
mov
ss
jmp
mov
add
call
cld
nop
int
add
addr16
scas
inc
clc
inc
clc
inc
clc
and
in
ljmp
jl
mov
clc
rcrl
clc
push
clc
mov
cs
cmp
clc
icebp
and
add
add
ret
cwtl
mov
add
dec
lcall
cmpsl
clc
repz
test
sub
cvttps2pi
push
add
add
add
and
add
pop
dec
cli
faddl
add
cmpsb
clc
fsqrt
arpl
add
add
pop
fstp
adc
add
out
mov
dec
jecxz
clc
bound
add
cmp
clc
into
and
add
push
stc
out
jmp
pop
rcll
add
cmp
and
scas
test
hlt
out
arpl
add
clc
push
add
insl
popf
xchg
bound
add
add
cmp
arpl
add
jo
add
jb
add
jns
insl
adc
add
dec
inc
add
inc
add
stos
jle
pop
pushf
fs
jge
dec
lods
add
add
mov
mulb
add
fists
loope
sar
add
sub
add
data16
mov
cmpsb
clc
adc
add
xlat
xchg
pop
repnz
clc
sub
clc
sar
fmull
lock
add
dec
mov
sti
and
cli
lods
stos
fs
lods
dec
sub
lret
pop
insb
call
cmp
clc
mov
stos
xchg
bsf
add
fs
pop
sub
fildl
pop
out
leave
call
xchg
stc
mov
int
daa
clc
or
lods
mov
pop
dec
add
add
clc
ja
clc
dec
push
push
add
pop
jg
lret
mov
or
int
cmpsb
clc
jb
add
and
xabort
mov
scas
push
clc
jge
cmp
push
add
pop
cmp
add
addr16
daa
clc
cmp
decb
fnstcw
jbe
clc
mov
ss
push
add
or
sub
add
jmp
clc
fldcw
clc
or
scas
cmc
push
add
je
clc
dec
inc
add
scas
dec
lock
inc
add
mov
push
out
cltd
lret
add
jbe
add
addr16
xchg
inc
clc
addr16
jg
movsb
clc
pushf
shrl
mov
xor
add
clc
inc
clc
or
call
out
add
add
gs
sahf
das
out
pop
dec
xchg
cmp
pop
xor
clc
cwtl
cmp
lods
cltd
dec
jle
scas
shll
clc
or
clc
mov
mov
add
cmp
aaa
and
add
add
dec
jecxz
sbb
iret
sbb
inc
clc
push
add
lret
pop
fwait
cmp
rorb
xchg
cmp
push
mov
mov
in
outsl
outsb
jb
add
jnp
add
in
fdivrs
add
mov
fcoms
add
xbegin
in
sti
push
clc
fcompl
sbb
add
adc
add
enter
lods
cmp
nop
dec
push
add
insl
out
adc
add
fwait
mov
clc
lods
mov
mov
adc
add
add
add
sbb
dec
loope
pop
adc
add
jg
cmpsl
clc
xchg
ret
clc
and
xchg
jp
testl
sbb
push
or
add
repnz
add
add
cmovp
addr16
or
push
xchg
adc
add
inc
add
sar
clc
das
outsb
jb
add
jae
add
clc
mov
add
sub
clc
call
add
add
inc
add
adc
add
clc
cwtl
and
add
cmovns
inc
clc
cmp
sub
cmp
clc
adc
add
sub
scas
in
sar
add
mov
clc
mov
inc
add
mov
clc
add
add
loopne
clc
cmp
ja
jecxz
xchg
sub
cmp
fcompl
add
push
clc
pusha
add
bound
add
cwtl
xchg
lods
pop
pusha
add
lret
mov
data16
sub
add
out
sbb
shl
ret
add
ret
clc
lahf
mov
and
add
clc
mulb
push
add
mov
xabort
pop
cmp
cmp
clc
imul
clc
jl
xor
add
xor
cmp
adc
add
dec
add
add
mov
xchg
test
icebp
mov
cmp
sub
mov
xor
add
add
cmpsl
clc
sub
lret
sub
clc
or
ja
xor
add
and
add
clc
xchg
pushf
sti
pop
cmpsb
clc
mov
pop
int
clc
or
bnd
clc
jp
add
jl
clc
mov
loope
nop
pop
sar
add
jbe,pn
jo
add
push
add
xor
add
add
mov
clc
sar
clc
mov
jo
add
arpl
add
out
cmp
ljmp
lods
movsl
clc
ds
mov
jae
add
clc
mov
pop
xchg
adc
add
and
add
add
push
add
lret
fcompl
fwait
sub
test
dec
aas
imul
clc
movsl
clc
lods
arpl
add
in
or
inc
add
aam
add
sti
mov
test
iret
sub
clc
mov
arpl
add
pop
ja
clc
cmp
cmp
mov
clc
stos
jbe
test
mov
add
pop
ja
mov
jae
add
test
fdivrl
lods
filds
add
mov
addr16
or
and
add
add
add
clc
xbegin
pusha
add
lods
pushf
pop
cmp
add
arpl
add
inc
clc
xbegin
clc
cmpsl
clc
mov
clc
xchg
repnz
sbb
clc
loop
add
add
xor
add
add
nop
pop
lret
and
add
xchg
inc
clc
addr16
or
clc
das
push
mov
dec
dec
xor
add
add
add
add
add
jg
jmp
imul
add
pop
data16
gs
mov
adc
add
add
dec
pop
call
jne
pop
neg
or
mov
adc
add
shlb
add
clc
shrl
dec
cld
jo
add
test
shlb
aas
jmp
cmp
cmp
clc
sahf
mov
sub
xor
pop
popa
add
dec
enter
add
add
xor
daa
clc
aam
jb
add
add
shlb
add
aaa
gs
jne
fwait
mov
cmp
clc
enter
scas
cmp
push
mov
mov
push
pop
lods
stos
mov
add
add
clc
dec
xchg
pop
pop
imul
in
cli
jbe
push
mov
loope
repz
inc
clc
xchg
mov
pop
fldl
add
sar
mov
clc
aam
add
shrl
clc
ret
fidivs
pop
inc
add
or
outsb
mov
clc
cmp
test
clc
fcompl
add
adc
add
add
icebp
sub
cld
mov
inc
add
dec
movsb
clc
test
sbb
dec
xchg
pop
out
xor
add
addr16
xchg
inc
clc
jno
add
add
adc
add
sti
xbegin
fwait
daa
clc
push
sub
cmp
clc
bound
add
jp
xchg
cmpsb
clc
imul
cmpsb
clc
mov
mov
mov
shlb
push
inc
clc
xchg
or
test
test
loop
ss
ficoms
jl
pop
jmp
jae
add
data16
std
ds
jo
add
clc
ds
cmp
pop
fcoml
add
pushf
nop
cmp
jns
add
or
mov
repz
add
clc
and
add
add
fstpt
sub
mov
sbb
lock
push
add
outsl
push
mov
pop
push
add
dec
inc
add
mov
jns
stos
out
xchg
imul
cmp
test
lret
add
and
add
cmp
add
add
inc
clc
inc
clc
dec
sar
cwtl
xabort
test
xor
add
add
xor
add
adc
push
add
and
add
adc
add
out
cmpsl
clc
jecxz
fmull
add
ja
sbb
pop
cmp
add
add
clc
jns
test
push
punpckhbw
lret
icebp
jno
add
repz
add
add
cmpsb
clc
iret
adc
add
add
pushl
and
add
clc
ret
clc
mov
movsb
clc
xchg
cmp
and
push
pop
fidivs
add
or
clc
xor
add
xchg
xchg
dec
loop
sub
mov
add
adc
add
push
and
add
add
adc
add
add
add
cmp
pop
push
adc
add
cmpsl
clc
in
inc
add
cltd
push
clc
cwtl
jmp
mov
add
push
push
clc
dec
pop
mov
inc
add
std
ds
clc
adc
enter
clc
negl
add
sbb
mull
push
add
out
in
push
inc
add
or
add
cmp
gs
cmp
iret
xchg
out
push
and
add
clc
js
adc
add
clc
and
clc
xor
mov
add
cmp
pop
fadd
clc
sbb
sar
adc
add
add
add
movsb
clc
imul
insl
cmp
clc
mov
adc
sbb
add
pop
clc
lods
mov
mov
mov
fsub
clc
pop
push
clc
fcomip
test
enter
pop
iret
pushf
test
add
add
adc
xor
insb
ret
clc
ds
push
add
cmpsb
clc
std
pop
inc
add
stos
test
or
clc
int3
jnp
sbb
cmp
sbb
jecxz
das
test
clc
data16
lret
stos
add
insl
mov
pop
jp
xchg
xlat
clc
pusha
add
cmp
jno
add
jnp
clc
jge
sub
mov
clc
outsb
cmp
dec
movsb
clc
clc
add
and
add
pop
pop
popa
add
out
lods
push
cmp
or
push
imul
pop
pushf
aas
lods
pusha
add
pop
ja
clc
xor
add
clc
sahf
sahf
jbe
pop
adc
in
adc
add
add
add
lock
mov
sub
clc
in
jns
das
flds
add
adc
add
sub
push
add
xchg
mov
push
test
incl
mov
ret
mov
add
xor
clc
push
and
add
dec
xchg
fidivs
add
clc
lcall
dec
fs
xor
pop
sub
and
add
clc
mov
cltd
dec
ret
clc
mov
clc
outsl
cmp
ret
mov
shl
clc
push
add
jp
clc
xor
add
cwtl
add
adc
add
inc
add
lods
sbb
xbegin
add
insb
and
add
add
lock
push
addr16
fsubs
add
add
add
clc
fldenv
mov
clc
idiv
push
ja
je
in
push
add
sbb
dec
pop
dec
addr16
imul
add
jmp
jne
add
fs
xor
add
sbb
clc
mov
xchg
int
loope
imulb
lods
mov
bound
add
mov
inc
clc
call
outsb
jle
and
add
add
fbstp
add
mov
inc
add
rcll
add
add
push
cltd
xor
add
clc
pusha
add
cmp
push
xor
add
inc
add
xor
add
dec
clc
mov
cmp
movsb
clc
and
mov
mov
lahf
add
add
fildll
outsl
jbe
lret
mov
sti
mov
clc
or
mov
add
out
sti
dec
push
clc
pop
push
lea
clc
or
xor
cs
clc
adc
xor
add
add
or
add
scas
ljmp
cld
xchg
fbld
clc
dec
push
sbb
sbb
add
mov
add
add
add
clc
or
add
and
add
add
mov
iret
dec
sub
clc
das
dec
mov
clc
push
add
xchg
shll
add
cltd
and
add
add
test
cmp
add
jns
test
stos
jo
add
mov
cmp
add
clc
and
add
add
add
insl
sub
clc
fsubr
test
mov
jmp
push
int
popf
fs
xor
add
ficoml
popa
add
loop
out
dec
pop
and
inc
add
aas
cmp
push
jno
add
clc
mov
call
and
add
add
push
add
add
inc
clc
mov
add
lahf
xor
add
in
repnz
push
ss
xchg
pop
mov
lock
xor
add
into
xbegin
mov
add
xchg
mov
addr16
test
enter
inc
clc
movsb
clc
push
mov
sbb
push
clc
push
test
cmp
sbb
pand
inc
add
mov
add
xchg
iret
scas
incb
pop
in
cmp
pusha
add
rcr
clc
cmp
sar
add
adc
mov
push
add
enter
xabort
clc
mov
mov
add
mov
and
movsb
clc
jb
add
or
clc
movsb
clc
lcall
xabort
clc
leave
mov
aad
adc
add
add
stos
xor
add
outsl
inc
clc
add
xchg
repnz
pop
iret
scas
mov
xchg
shlb
add
mov
add
insb
movsl
clc
mov
clc
dec
inc
add
and
in
icebp
test
out
push
into
jae
add
clc
nop
test
sbb
clc
in
mov
clc
jns
add
dec
sar
clc
cmc
xchg
mov
cli
dec
jge
insl
inc
clc
mov
add
clc
movsl
clc
arpl
add
clc
in
loop
mov
lods
ja
clc
testb
clc
pop
push
cmp
int
cmpsb
clc
bound
add
add
nop
dec
pop
clc
out
in
inc
add
cmp
jb
add
add
and
add
xchg
cmp
sbb
clc
mov
pop
nop
xlat
sar
mov
sti
sub
and
add
lret
add
cmc
cmp
sbb
cmp
mov
cmpsb
clc
pmulhw
bound
add
clc
adc
add
mov
xor
add
push
add
jmp
into
dec
ds
lea
push
pop
sbb
jmp
pop
fcmovne
es
filds
add
out
push
add
negb
clc
aaa
dec
or
clc
mov
cld
push
xor
insl
xchg
adc
add
push
clc
xlat
add
loopne
xchg
rcrl
cmp
das
dec
cmp
add
mov
add
add
test
sub
clc
data16
cmpsl
clc
gs
or
nop
lods
arpl
add
mov
mov
clc
cs
xor
add
jecxz
push
pop
xor
add
je
pushf
inc
add
ljmp
clc
and
xor
add
aad
add
xchg
inc
add
scas
mov
clc
sub
add
push
lea
clc
scas
fbld
add
fisttpl
fistpll
sbb
mov
add
push
xor
add
add
add
cmp
push
jecxz
jecxz
and
sbb
pop
inc
clc
cwtl
pop
push
clc
ret
xbegin
mov
scas
mov
in
jge
outsl
add
repnz
add
add
add
clc
push
add
add
clc
cmp
clc
push
jne
clc
sbb
clc
addr16
enter
jmp
add
add
ja
test
fdivrl
insl
mov
and
add
add
movsl
clc
outsb
mov
cmp
clc
push
in
int
clc
imul
in
dec
stos
cmp
pop
push
add
leave
sub
add
mov
mov
testb
sbb
clc
aaa
lret
mov
clc
ss
and
add
jne
or
clc
enter
add
jne
clc
cmp
add
mov
or
mov
call
aam
mov
add
push
aam
sub
gs
lret
jl
loop
into
xor
add
aad
sbb
pop
idivb
add
outsl
ret
dec
mov
clc
dec
dec
repnz
clc
lret
scas
xchg
or
or
mov
add
dec
jp
xchg
or
in
inc
add
sub
clc
insb
sub
sar
notb
add
adc
add
add
mov
clc
enter
add
mov
inc
add
out
sbb
clc
pop
out
jl
das
cmp
loop
cmp
inc
add
adc
add
mov
enter
cltd
ss
clc
pop
fimull
xor
cmp
jg
add
loope
jb
add
test
jge
clc
sbb
clc
test
addr16
pop
leave
sahf
in
sbb
fidivrl
imul
add
xchg
push
scas
push
push
ficompl
aas
das
sbb
adc
into
clc
adc
add
add
cmpsb
clc
fwait
icebp
leave
push
add
jb
add
add
clc
mov
jp
push
repz
cs
aaa
xor
add
sbb
clc
xabort
mov
jp
arpl
add
add
bswap
sub
movsb
clc
leave
data16
xlat
jb
add
add
faddl
add
dec
fstps
xabort
xor
add
addr16
or
mov
add
add
popf
jne
loop
loopne
cmp
ret
ficoms
shrl
xor
add
gs
sar
clc
lret
jne
adc
add
inc
add
std
into
and
dec
movsb
clc
cmpsb
clc
mov
mov
sub
call
scas
adc
mov
add
push
jnp
add
push
in
test
icebp
xor
add
and
add
decl
aas
fstpt
insb
negb
clc
xor
add
rorl
xchg
jne
dec
test
or
adc
add
add
fldpi
push
adc
gs
into
and
cmp
gs
mov
push
sub
xor
clc
mov
add
lcall
jmp
in
int
add
ret
clc
jg
add
sub
add
xlat
test
adc
jb
add
clc
popa
add
inc
add
adc
add
xbegin
clc
jne
add
add
push
clc
je
clc
das
or
push
cmp
and
add
pop
outsl
mov
jnp
hlt
push
clc
cwtl
enter
add
ja
jae
add
ret
clc
pop
lods
adc
add
movsb
clc
push
dec
mov
pusha
add
inc
add
pop
jo
add
add
and
clc
fwait
cmp
repnz
mov
cmp
stos
dec
mov
or
nop
add
add
add
add
iret
xor
add
add
clc
xlat
rolb
add
xor
clc
nop
mov
add
in
cmp
mov
add
in
in
in
stc
aad
dec
dec
movsl
clc
add
add
pop
je
icebp
dec
adc
clc
fldcw
iret
daa
clc
ljmp
clc
ss
popf
fisubl
add
clc
inc
clc
pop
lock
int3
in
and
adc
sarb
scas
dec
mov
ss
aaa
addr16
push
cld
xchg
call
clc
dec
lahf
test
clc
push
imul
sub
add
add
add
dec
arpl
add
add
out
aas
xchg
push
add
dec
sbb
add
xchg
in
cmp
out
mov
inc
clc
repz
xor
add
xchg
cs
cmp
hlt
int3
pop
lret
pop
mov
pusha
add
xchg
inc
add
add
add
sub
clc
or
pop
das
roll
clc
add
add
mov
into
aam
call
mov
add
jnp
sub
add
add
add
es
sub
mov
add
mov
cmp
fdivl
xchg
dec
jle
dec
lods
xchg
clc
add
pop
lea
movsb
clc
mov
sar
add
roll
insb
cmp
clc
fcoms
jb
add
clc
out
or
das
sti
out
dec
push
add
cmp
mov
clc
pushf
sar
add
add
leave
fcoms
test
pop
popa
add
or
pop
clc
mov
jmp
clc
divb
add
gs
lret
lcall
push
call
sti
and
add
fs
ror
mov
pushf
jae
add
pop
pop
bound
add
xchg
push
clc
es
xchg
rorl
push
ss
mov
es
mov
jnp
inc
add
fld
clc
sub
dec
adc
add
cmp
insl
stos
enter
inc
add
jg
xchg
hlt
fldcw
xor
add
xlat
xchg
adc
add
clc
pop
jge
stos
jmp
dec
mov
clc
mov
cld
xchg
add
add
mov
pusha
add
sbb
scas
jge
add
pop
pop
imul
clc
xlat
test
adc
add
iret
loop
adc
jo
add
pop
mov
push
in
mov
mov
add
mov
call
add
iret
dec
bound
add
sahf
add
add
xor
add
mov
cmp
dec
lcall
jecxz
sbb
xchg
sti
mov
jge
dec
imul
clc
mov
add
add
clc
jo
add
xchg
add
add
ret
clc
dec
popf
lods
push
aam
mov
jl
clc
pusha
add
rclb
js
lcall
mov
adc
add
clc
jmp
mov
outsb
adc
jne
adc
mov
clc
leave
jle
pushf
iret
gs
mov
clc
iret
sub
mov
cwtl
push
dec
xor
add
push
add
test
jns
push
sub
sbb
push
scas
scas
test
push
clc
pop
cmp
insb
ss
add
mov
mov
clc
and
add
add
mov
arpl
add
adc
add
clc
xor
dec
idiv
shlb
add
xchg
jmp
sti
jbe
je
adc
cld
nop
lret
clc
fstl
add
pop
xor
add
movsb
clc
mov
clc
xor
add
add
clc
sbb
repz
arpl
add
mov
cmp
sarl
inc
clc
into
jns
xchg
cmp
clc
int
clc
scas
ja
in
or
add
add
aam
cmp
push
cltd
sub
add
in
nop
inc
clc
fwait
dec
enter
scas
or
add
jmp
sti
jns
in
inc
add
dec
daa
clc
and
add
test
daa
clc
xlat
xor
add
add
sar
sbb
xlat
popa
add
jb
add
aas
inc
add
leave
dec
pop
dec
inc
add
mov
mov
add
clc
popf
add
add
out
sub
mov
stos
cmp
add
dec
pop
cmp
add
inc
add
inc
add
mov
out
sar
and
mov
add
push
xor
add
clc
arpl
add
xchg
sbb
push
repnz
clc
lock
pop
cmp
push
mov
jo
add
add
add
add
fmull
clc
jg
out
jle
test
add
into
jp
clc
jecxz
adc
in
lcall
add
ret
xchg
pusha
add
sbb
mov
xchg
out
pop
xor
clc
mov
cmp
test
and
add
clc
push
movsb
clc
nop
adc
add
add
cltd
xbegin
and
add
mov
mov
mov
out
data16
cmpsl
clc
mov
clc
mov
xor
outsl
test
and
add
shrb
add
xchg
cmp
lods
fadds
mov
into
test
popa
add
ja
test
clc
mov
clc
loopne
dec
inc
clc
in
push
mov
mov
dec
jbe
clc
int
clc
fwait
cmp
je
clc
js
clc
jecxz
jne
mov
add
pop
lods
push
bound
add
sbb
add
fwait
mov
add
in
jle
or
lret
stc
adc
xchg
stos
outsl
cld
dec
jno
add
mov
ds
int3
lret
and
add
out
mov
mov
dec
mov
add
push
mov
mov
mov
pop
and
add
mov
insb
lcall
add
mov
add
pop
fmull
clc
fisubrl
cmpsb
clc
xor
clc
popa
add
das
xor
add
add
add
rcl
je
clc
and
add
mov
cmpsb
clc
push
sbb
mov
sbb
add
jb
add
pop
cmp
test
outsb
mov
dec
cmp
aad
aas
out
jge
clc
and
add
adc
add
gs
add
add
add
add
add
bound
add
clc
jnp
enter
ja
mov
xchg
cltd
out
hlt
dec
jmp
add
jnp
clc
sub
and
add
clc
mov
clc
and
jno
add
ffree
clc
pop
cmpsb
clc
xchg
inc
clc
fadds
call
clc
cld
ret
clc
push
int3
mov
jp
adc
add
mov
add
in
lods
fwait
xchg
test
xor
add
movsl
clc
add
add
mov
aaa
and
add
mov
out
rdseed
aam
iret
jns
mov
lahf
lods
inc
add
fmuls
inc
add
gs
iret
mov
sub
clc
push
pop
adc
add
mov
add
outsb
pop
dec
sbb
xchg
lock
movsb
clc
leave
sbb
add
dec
cmp
push
add
jl
xor
add
clc
out
or
inc
clc
xlat
cmp
clc
in
popa
add
testl
loopne
ljmp
pop
aaa
stos
sti
popa
add
sar
add
add
xchg
daa
clc
jge
add
das
dec
pop
loop
inc
add
int3
cltd
fstl
jae
add
scas
repz
dec
xor
push
push
add
out
mov
jne
sahf
mov
xchg
dec
repnz
push
add
outsl
out
jnp
clc
dec
mov
xchg
adc
add
sub
test
cs
clc
cmp
popa
add
add
add
dec
shl
cli
sbb
pop
clc
or
add
clc
dec
mov
cmp
xchg
cmp
clc
lret
sbb
jbe
push
insl
ds
jge
jmp
fucom
clc
pusha
add
sar
clc
push
movsl
clc
push
clc
popa
add
inc
add
lock
dec
inc
clc
sub
and
add
inc
clc
data16
pop
arpl
add
add
add
push
addr16
roll
mov
aas
test
lahf
test
clc
add
add
push
int
fisttpll
lret
enter
pop
ret
cmp
mov
clc
das
insb
and
repz
lock
clc
xchg
cmpsl
clc
test
add
clc
jg
xlat
aas
in
into
and
add
adc
add
add
lods
add
add
add
movsl
clc
jge
jmp
cmp
jo
add
test
imul
pop
clc
outsl
jge
clc
repz
inc
clc
sub
hlt
insl
cmp
add
xchg
out
mov
dec
popf
cli
xchg
cwtl
pop
clc
fisubs
pop
addr16
xadd
add
dec
push
add
ds
clc
and
into
hlt
pop
int3
mov
xchg
outsl
sar
add
and
add
clc
stos
lahf
mov
jno
add
lods
cwtl
mov
clc
inc
add
mov
add
inc
add
jg
outsl
or
lock
sub
fstpt
movsb
clc
pop
data16
lea
clc
mov
clc
inc
clc
xor
add
and
lret
mov
add
loop
dec
sub
mov
add
add
mov
add
insl
movsb
clc
adc
out
fs
in
sar
sar
clc
pop
add
pop
clc
add
repnz
push
dec
loop
inc
clc
imul
add
sub
and
jnp
clc
fisttpl
add
mov
pop
aaa
jbe
lods
jb
add
fs
dec
cltd
icebp
into
dec
and
cwtl
inc
clc
push
pop
mov
inc
add
lock
cmp
ret
scas
out
stos
mov
dec
pop
arpl
add
jns
add
add
add
add
mov
add
fldl
clc
jl
push
clc
dec
sub
mov
cmp
add
add
arpl
add
clc
or
call
xchg
sbb
clc
mov
clc
pop
clc
mov
mov
clc
pop
cs
mov
add
into
cs
add
cmp
mov
clc
aaa
ljmp
ljmp
stos
or
add
data16
add
add
clc
addr16
ret
clc
scas
xchg
js
add
jnp
adc
add
and
add
call
sub
add
lods
push
cmp
and
push
add
and
add
add
add
add
cmp
mov
add
bound
add
add
push
add
or
mov
or
xabort
clc
mov
sti
scas
repnz
lret
mov
ret
clc
out
xchg
das
pop
clc
ret
clc
push
lret
mov
add
add
lods
dec
push
sar
add
mov
add
add
popf
add
aaa
or
or
insb
xor
clc
mov
mov
add
int
clc
jl
scas
jle
cmp
push
xlat
arpl
add
cmpsl
clc
test
out
cmp
add
add
jp
push
pushf
mov
add
pop
and
add
add
push
add
pop
stc
dec
cmp
mov
push
add
jge
clc
sub
and
add
mov
add
jnp
fcoms
add
xchg
nop
ror
mov
std
push
cli
popf
fcompl
push
into
sbb
and
add
xbegin
mov
push
jo
add
add
fdiv
lret
xchg
dec
mov
clc
pop
pop
aaa
sub
add
popf
gs
push
clc
sahf
pop
xchg
jg
stos
xchg
add
aas
cmp
add
out
jae
add
pmulhuw
or
cmp
clc
xchg
xchg
mov
clc
bound
add
arpl
add
lahf
inc
clc
mov
or
add
add
mov
add
loop
sub
add
inc
clc
or
clc
fsubs
out
aad
mov
clc
jmp
clc
mov
test
add
adc
add
cmp
add
add
inc
add
out
mov
add
add
add
clc
jae
add
out
jbe
clc
es
into
sub
add
icebp
xor
clc
mov
or
loopne
jo
add
xor
loop
ficoms
pop
jl
sbb
inc
clc
mov
mov
test
cmp
clc
mov
jge
add
clc
bound
add
clc
pop
or
test
mov
clc
cmpsl
clc
cmp
add
jl
mov
mov
sub
mul
clc
jp
jl
clc
cmpsl
clc
cmp
mov
push
leave
push
rorl
sub
xchg
rcrl
add
stos
cli
leave
push
shl
cmp
sub
clc
lods
dec
inc
clc
inc
clc
aaa
push
add
adc
add
repz
cmp
add
add
aaa
and
add
clc
mov
clc
xor
add
fsubl
clc
push
add
add
add
push
pop
mov
call
clc
cmp
add
pop
mov
into
ss
shrl
cmp
movsb
clc
jl
nop
pop
clc
ret
clc
mov
cmp
mov
ja
clc
cltd
enter
pop
gs
push
enter
add
add
xchg
ljmp
clc
hlt
jge
xchg
add
add
clc
inc
add
out
insl
sbb
rorl
xor
add
add
xbegin
add
loopne
aam
push
clc
or
add
clc
mov
add
xchg
push
add
push
push
add
ror
call
add
add
notb
out
fldln2
pop
in
inc
clc
movsl
clc
test
jle
clc
lods
cmp
mov
clc
pop
xlat
cmp
clc
dec
sbb
pop
bnd
scas
icebp
std
scas
pop
pop
xchg
or
repnz
push
dec
cmp
add
fucom
clc
pop
xchg
adc
add
add
add
sbb
clc
add
xor
add
clc
std
mov
clc
clc
xchg
dec
push
add
sbb
clc
repz
test
or
inc
add
mov
arpl
add
xchg
out
cli
js
sti
test
xor
je
clc
xchg
pusha
add
xor
add
clc
pop
xor
add
loopne
inc
add
mov
add
dec
sar
pop
pop
cmp
sar
mov
add
mov
pushf
and
jnp
sbb
clc
jbe
add
mov
in
jle
mov
clc
jp
or
sahf
and
add
jg
clc
sbb
inc
clc
inc
clc
dec
es
repnz
enter
adc
push
add
mov
adc
add
inc
add
sub
clc
pop
fwait
mov
dec
mov
shrl
popf
loop
push
xchg
dec
pop
inc
clc
adc
add
dec
rcll
push
jbe
outsl
test
mov
xchg
xchg
test
add
enter
jge
clc
sub
imul
lea
out
dec
pop
pop
clc
lods
loope
mov
dec
sti
push
clc
outsb
lock
add
jge
clc
imul
clc
inc
add
fwait
ret
and
add
clc
cli
mov
add
stos
nop
xchg
dec
in
push
add
sbb
jle
jb
add
add
add
nop
pop
test
arpl
add
adc
add
adc
add
add
insl
adc
add
std
fcompl
and
cwtl
ljmp
aad
push
add
jecxz
adc
lcall
mov
clc
fldln2
int
scas
pop
sar
pop
adc
add
add
xor
add
inc
add
mov
add
aas
stos
inc
clc
pusha
add
sbb
add
pushf
ret
clc
aas
shl
clc
add
add
mov
add
testl
fwait
popf
dec
inc
clc
inc
add
ja
imulb
add
pop
mov
insb
jae
add
jns
fimuls
fsubrl
loopne
push
outsb
clc
adc
clc
cmp
xor
add
inc
clc
xchg
inc
add
or
clc
cmp
cmp
jbe
add
add
add
xchg
cmp
clc
pop
push
push
insb
fcmovnu
xlat
aas
mov
add
clc
aaa
cmp
mov
dec
cmp
popa
add
jo
add
lea
add
jge
add
int3
xor
xchg
add
aad
mov
push
inc
clc
rol
clc
fs
lock
cwtl
sub
mov
clc
xor
add
jmp
add
lods
sbb
or
clc
shrl
mov
clc
frstor
add
cmc
fcomi
shlb
add
mov
or
add
es
lea
add
add
cwtl
lods
mov
mov
jg
clc
data16
or
and
add
add
int3
fwait
jno
add
in
outsl
or
clc
test
call
sbb
out
mov
clc
mov
bound
add
clc
xchg
cmp
jmp
enter
sub
add
mov
add
test
out
and
add
inc
clc
out
pop
xchg
cmpsl
clc
dec
pushf
sar
cmp
icebp
jo
add
cmp
and
add
pop
inc
clc
adc
add
adc
add
add
psubq
fcoms
adc
add
sti
outsl
cltd
pop
pop
clc
add
add
add
add
add
clc
xchg
push
add
sbb
call
dec
or
cwtl
sub
jb
add
cld
mov
add
stos
and
add
rcll
add
and
daa
clc
clc
push
push
stos
decl
sub
out
dec
in
icebp
fucom
clc
in
jecxz
mov
clc
push
and
add
add
ret
cmpsb
clc
jno
add
sub
clc
jb
add
fldl
fs
fs
sar
fstps
push
mov
js
clc
mov
in
xchg
cmp
clc
xchg
negb
pop
xor
add
clc
or
and
out
fistpll
mov
add
push
clc
jl
add
cmp
push
out
pushf
loopne
mov
add
add
pop
adc
add
mov
iret
in
xchg
dec
je
add
pop
lret
mov
add
clc
mov
add
adc
addr16
mov
cld
pop
das
push
clc
dec
dec
mov
clc
jg
jae
add
push
mov
aas
loopne
pop
loopne
pop
pop
clc
popa
add
jecxz
loope
or
jnp
dec
pop
xchg
je
clc
hlt
jmp
add
add
add
adc
xor
add
bswap
data16
jo
add
jnp
clc
add
add
add
inc
clc
jp
sbb
add
push
insb
xchg
cmp
test
add
add
das
das
mov
pop
test
add
call
and
jecxz
pop
clc
xchg
jmp
hlt
ljmp
xlat
jmp
dec
mov
aad
lock
loop
cmpsl
clc
test
lods
lea
sbb
aaa
sub
xlat
fst
lea
clc
mov
push
add
sub
mov
roll
lret
mov
clc
cld
pop
sbb
add
push
cmpsl
clc
push
add
repnz
clc
ficoml
add
add
xor
add
add
xchg
xbegin
fsubrl
inc
clc
xor
add
clc
ds
dec
cmp
clc
cmp
cmp
mov
add
inc
clc
es
imul
add
inc
clc
dec
sbb
add
fs
xchg
inc
add
out
mov
shld
scas
cmp
add
add
clc
pop
fsubs
test
outsl
and
add
jg
xbegin
or
add
add
ret
clc
out
aas
pusha
add
sbb
add
sbb
sub
ret
clc
js
clc
cmc
fwait
jo
add
add
loop
lods
push
xchg
sub
add
adc
add
add
dec
das
mov
test
cmpsb
clc
sub
clc
cmp
cmp
loopne
in
xlat
imul
push
push
mov
mov
clc
xchg
sar
xchg
cmp
adc
add
add
clc
push
add
mov
aas
adc
add
add
ret
jle
js
clc
cmp
add
iret
add
clc
popl
mov
jg
add
int
clc
pop
lcall
clc
mov
ret
ja
clc
inc
clc
dec
leave
aaa
hlt
sahf
in
adc
add
add
add
mov
jne
clc
clc
dec
lcall
pop
clc
push
movsl
clc
xor
repnz
stos
inc
clc
dec
fisubl
add
lods
sbb
cmpsb
clc
or
mov
add
add
sar
in
imulb
sbb
add
fwait
call
clc
sbb
add
jp
clc
sub
clc
outsb
fidivrl
shlb
clc
popa
add
aad
sub
movsb
clc
mov
inc
clc
popf
lcall
test
pop
xabort
jbe
clc
sar
push
inc
clc
add
add
add
xchg
bound
add
add
adc
add
mov
sbb
add
pop
and
clc
jmp
fwait
mov
add
xor
cmp
call
clc
std
addr16
adc
add
clc
inc
add
daa
clc
push
xor
cmp
jle
mov
mov
add
int3
clc
jmp
add
test
popf
pop
jo
add
xchg
stos
dec
xchg
push
mov
scas
mov
jo
add
push
add
sar
sar
repz
daa
clc
cmp
xabort
clc
xchg
std
cltd
xchg
lock
xchg
sub
int3
inc
add
cmp
flds
add
cmp
mov
clc
rcrl
leave
push
add
jo
add
add
in
dec
rolb
clc
popa
add
icebp
popa
add
mov
je
popa
add
out
mov
sbb
clc
lock
mov
add
clc
gs
push
clc
or
add
adc
add
jb
add
fistpl
clc
push
fstps
add
stos
adc
add
add
xchg
cwtl
lcall
mov
rclb
add
mov
add
sub
ljmp
or
pushf
inc
add
push
xchg
outsl
int
add
mov
js
add
testl
popf
pop
jge
cmpsb
clc
movsl
clc
clc
sub
clc
call
add
dec
int
add
add
mov
pop
jb
add
mov
clc
daa
clc
cmc
mov
push
sbb
cli
cs
idivb
add
ljmp
dec
xor
test
test
sub
sbb
jmp
fildll
and
int3
add
add
clc
sar
sbb
dec
pusha
add
and
add
push
add
cld
sub
clc
mov
std
gs
test
movsb
clc
cmp
shlb
lea
jnp
clc
inc
add
xor
add
sar
icebp
repnz
add
scas
cmpsl
clc
sahf
out
add
add
int3
lock
jae
add
push
add
jnp
clc
xor
add
movsl
clc
imul
cmp
sbb
rolb
add
inc
clc
call
clc
xor
add
sar
add
lret
int
xor
add
clc
insb
jae
add
jns
repnz
popf
push
xchg
jmp
fidivrs
xchg
scas
cmc
sahf
inc
clc
je
sub
inc
clc
push
add
shrb
je
push
cmp
clc
in
xchg
gs
out
testb
dec
mov
add
inc
add
jge
cmpsl
clc
sub
add
cli
ret
clc
xchg
xor
adc
add
sub
ljmp
push
add
pusha
add
or
clc
add
clc
imul
scas
test
aas
mov
push
fstpt
clc
pop
sub
clc
in
add
add
add
add
inc
add
ds
add
inc
clc
xchg
dec
fiadds
pop
test
outsb
js
dec
xor
inc
add
sub
imul
clc
mov
fxch
xlat
cmp
add
add
add
and
add
fstpl
clc
add
add
xbegin
popa
add
xchg
xchg
enter
clc
imul
push
cmpsl
clc
push
xchg
cmp
sarl
jno
add
mov
inc
add
mov
jp
mov
clc
cmp
add
jecxz
add
add
pop
popf
sar
clc
push
add
cli
es
or
add
mov
add
xbegin
mov
loope
dec
popf
pop
enter
mov
add
jbe
test
out
sbb
pop
icebp
jno
add
sub
add
mov
clc
mov
repz
lret
clc
and
xor
inc
clc
mov
add
outsl
iret
mov
lret
sub
dec
insb
fpatan
icebp
test
pop
call
leave
imul
outsb
mov
pop
call
add
add
sar
out
ret
out
iret
mov
and
add
add
loop
push
add
push
sub
dec
sahf
loope
add
pop
adc
add
sbb
add
clc
jns
push
add
add
add
clc
sbb
add
stos
out
jmp
jnp
dec
movsl
clc
out
inc
add
mov
add
stos
in
test
outsb
push
add
mov
push
test
in
outsb
stos
mov
fsubs
add
sbb
dec
pop
sbb
jmp
lods
cmp
mov
int
and
add
rorl
mov
ljmp
and
add
jae
add
cmp
in
push
xchg
mov
xor
dec
add
add
lea
ljmp
add
mov
fisttps
enter
add
add
add
mov
sbb
mov
adc
add
clc
sbb
sahf
inc
clc
punpckhwd
add
pushf
icebp
je
and
add
add
add
sahf
arpl
add
fistpll
jmp
clc
ror
jae
add
sbb
inc
clc
cmp
inc
clc
popa
add
mov
add
push
clc
xchg
lock
pop
clc
adc
add
mov
lret
mov
add
adc
add
lods
mov
fwait
into
stos
mov
jae
add
scas
test
aaa
ja
and
add
clc
sti
dec
sbb
xor
add
cmp
clc
cltd
pop
mov
sbb
or
clc
or
add
sub
clc
adc
add
aas
jns
in
in
fbstp
jno
add
jl
ja
mov
lock
aad
data16
xchg
xabort
jae
add
clc
out
cltd
mov
dec
inc
clc
test
and
cmc
sahf
mov
add
stc
aas
lahf
fidivrl
iret
repnz
clc
push
popa
add
sahf
loop
testl
clc
lcall
frstor
add
clc
cmp
sub
clc
push
add
cmp
push
clc
xor
add
cmp
outsb
push
clc
stos
dec
sub
jmp
aad
clc
movsb
clc
in
lock
clc
cmc
fs
push
mov
aaa
cmc
xor
add
add
icebp
out
push
lret
or
add
xchg
out
test
add
or
clc
pop
clc
mov
add
aam
cmp
scas
cmp
add
dec
mov
clc
repnz
pop
test
clc
and
mov
cmp
and
add
add
cltd
fwait
sbb
fnstsw
test
fs
or
clc
incb
cli
fnstcw
lea
loop
scas
push
div
hlt
sub
add
clc
call
clc
call
add
xor
test
loope
imul
add
scas
loop
iret
fcmovnbe
movsb
clc
adc
clc
cmpsl
clc
test
xchg
insl
pushf
cmpsb
clc
mov
adc
add
xabort
mov
bound
add
add
pop
sar
push
cli
push
add
lock
add
test
add
add
sub
clc
cmp
adc
push
leave
arpl
add
clc
push
push
xlat
adc
add
add
sti
xor
add
add
clc
pop
cmp
add
insb
mov
clc
and
clc
push
dec
fisubrl
add
add
xchg
gs
clc
je
clc
mov
clc
push
gs
rcrb
js
mov
add
clc
pop
xbegin
xchg
adc
add
xor
add
jl
clc
fcoms
xor
dec
icebp
enter
clc
movsb
clc
adc
add
clc
pop
clc
aad
and
add
movsb
clc
repz
clc
sub
sub
or
add
cmp
xchg
jns
or
clc
mov
push
notl
add
add
clc
sar
jmp
push
jmp
rcr
dec
lret
cmp
add
add
inc
clc
lea
into
fdivl
add
push
add
cmp
clc
cmp
jecxz
pmulhw
insb
fimuls
xor
cmp
add
dec
add
add
je
push
add
in
jl
in
data16
dec
fbstp
add
iret
das
cltd
cmp
add
mov
clc
xor
add
test
clc
pop
daa
clc
sbb
dec
or
scas
sar
clc
aam
jbe
stc
mul
clc
dec
sahf
xabort
pop
clc
fsubs
and
add
test
call
mov
add
clc
out
push
clc
dec
pop
gs
int
add
push
and
push
out
or
clc
inc
add
xchg
jg
pop
jge
cmp
xchg
sti
xchg
xor
add
shrl
add
add
sub
clc
loopne
xchg
int3
fimuls
push
clc
xor
add
add
lcall
add
lret
fld1
popf
xchg
daa
clc
jbe
cmp
add
lret
rcrb
mov
add
inc
clc
mov
cmp
clc
sbb
jmp
in
xabort
dec
inc
add
enter
cmp
stc
push
add
clc
fldcw
cmp
add
add
data16
test
nop
xchg
and
add
add
cs
jge
bound
add
xchg
adc
add
add
repz
cmp
pop
ljmp
js
sub
cmp
add
scas
test
inc
add
loop
lods
mov
jmp
mov
clc
mov
xchg
mov
xor
jne
add
dec
xor
add
aad
clc
sbb
add
mov
gs
adc
add
jae
add
scas
lods
ljmp
add
in
sbb
add
xchg
sti
sub
add
std
cltd
pop
clc
sti
inc
add
inc
add
into
cmc
lock
loop
jg
xor
add
cs
add
jns
ss
add
xbegin
insl
call
pop
sbb
jp
clc
cmp
clc
jg
dec
add
add
out
nop
mov
jmp
cmp
clc
dec
dec
fimull
lods
mov
add
add
inc
add
out
or
clc
fbstp
clc
adc
add
call
lods
xchg
in
adc
pop
sub
test
add
adc
add
lods
push
mov
jne
pusha
add
pop
aaa
popf
mov
add
xor
add
jo
add
iret
int
insl
mov
popf
es
mov
add
pop
in
ljmp
clc
bound
add
fcmovnb
clc
cltd
cmp
lea
add
clc
and
add
push
add
mov
cmp
iret
stc
dec
cmp
inc
add
jb
add
clc
loop
shrb
jno
add
pop
xor
pop
call
dec
dec
sub
add
imul
or
dec
add
add
cmp
bound
add
jmp
stos
outsl
shrl
xor
add
add
dec
push
adc
add
popf
inc
clc
add
xor
cltd
std
lods
mov
sti
pop
cmpsl
clc
jl
hlt
sub
add
xchg
mov
in
faddl
clc
xchg
out
inc
clc
pop
notb
add
and
ret
clc
xor
xchg
cmp
add
or
add
jmp
popa
add
jno
add
sbb
clc
jne
clc
fcom
push
clc
std
or
push
test
xchg
ret
jecxz
sbb
or
clc
jl
adc
add
add
bound
add
cli
xor
add
repnz
add
sub
add
pop
sub
xchg
das
push
inc
add
cmpsb
clc
lods
sahf
sbb
add
or
arpl
add
arpl
add
clc
or
fimull
mov
push
add
pop
pop
sub
add
pop
imul
fwait
add
clc
insl
int3
push
add
cmp
data16
sti
cld
mov
xor
add
clc
gs
or
arpl
add
and
or
add
add
xor
add
fsubrl
into
pop
xlat
add
add
xchg
in
xor
add
inc
clc
cld
ja
sub
fcompp
nop
addr16
inc
add
xchg
inc
clc
pop
cmpsb
clc
pop
dec
inc
clc
fiaddl
clc
push
add
adc
clc
movsl
clc
push
add
test
dec
inc
add
jae
add
inc
clc
rolb
clc
mov
inc
clc
lret
clc
in
cmp
cmp
cwtl
inc
clc
ljmp
clc
and
mov
xchg
sub
add
cld
icebp
mov
pop
pop
jmp
repnz
rol
clc
pushf
and
add
cmp
add
ja
push
mov
clc
mov
mov
push
add
call
push
add
adc
add
add
stos
adc
add
add
in
cmp
jno
add
push
clc
int3
outsl
in
and
add
clc
popf
sbb
clc
cmp
rol
clc
sub
add
loop
mov
clc
xchg
jmp
and
add
dec
sub
popf
pop
int
jecxz
imul
jmp
add
mov
jp
mov
sub
add
add
ljmp
add
cmp
inc
clc
xchg
out
adc
add
jl
jg
xbegin
testb
dec
std
cmp
cltd
in
insb
adc
ds
clc
jp
pop
xor
add
cmp
clc
push
add
mov
add
mov
and
add
clc
sbb
test
clc
jle
jns
lea
jnp
mov
cmp
clc
xchg
xchg
jno
add
cmp
ds
popf
cli
jmp
push
clc
cmp
imul
add
arpl
add
add
add
jbe
clc
sbb
mov
clc
outsl
shr
cld
and
add
and
add
jmp
clc
enter
xbegin
clc
add
add
xchg
daa
clc
jge
pop
clc
push
mov
or
leave
pop
inc
add
xchg
mov
add
lock
mov
add
outsl
out
bound
add
xchg
imul
add
mov
addr16
insl
scas
sub
cmp
add
leave
adc
add
cmp
pop
xchg
std
sub
jp
add
xchg
stos
xchg
dec
xor
add
popa
add
mov
rcrb
add
mov
shlb
add
clc
add
add
int
add
add
ret
clc
rorb
aaa
jge
mov
int3
stos
sahf
jmp
add
gs
sub
cmp
add
ljmp
inc
add
or
and
add
add
jmp
data16
jle
add
dec
jns
clc
push
sbb
xabort
fs
add
add
jb
add
sbb
push
add
adc
add
out
call
or
or
xor
flds
add
add
push
add
mov
xor
add
data16
jg
add
or
clc
aam
push
hlt
addr16
mov
jne
sahf
loopne
ret
adc
add
clc
lcall
enter
test
sar
clc
arpl
add
jno
add
es
sbb
out
movsb
clc
sbb
push
add
clc
xchg
dec
mov
pop
clc
xabort
clc
and
add
clc
fs
inc
add
imul
push
mov
movsb
clc
scas
push
sub
aad
cmc
add
add
jmp
add
aaa
popa
add
std
notl
inc
clc
cwtl
stc
adc
add
pusha
add
inc
clc
and
add
lods
dec
loope
push
cs
add
clc
or
add
xor
add
stos
mov
in
pop
pop
adc
add
add
jmp
iret
xchg
test
and
add
lahf
cmp
add
sub
cmp
rolb
clc
mov
add
sbb
clc
fistl
xadd
in
repnz
popa
add
imul
cltd
or
add
add
clc
xchg
mov
mov
or
insl
and
or
ret
clc
mov
xchg
jle
clc
loope
ljmp
daa
clc
pop
xchg
clc
sub
add
mov
add
dec
jecxz
clc
pop
cmp
movsb
clc
out
pop
imul
cltd
xabort
cmp
clc
fstpl
imull
ja
clc
inc
add
shl
out
push
mov
add
mov
add
xchg
loopne
mov
ljmp
shrb
inc
clc
cmp
loop
fimuls
clc
cmp
out
cmp
mov
clc
pusha
add
fists
add
je
stc
sub
repz
add
lahf
loope
outsb
push
stos
cs
mov
nop
push
add
icebp
aas
sbb
add
inc
add
xchg
cmp
enter
lret
cld
ret
clc
clc
gs
cltd
popa
add
pop
out
sub
sub
or
xor
add
and
add
clc
pop
cmc
fbld
clc
leave
push
jge
clc
mov
clc
loopne
lret
clc
mov
pop
inc
add
cmpsl
clc
xor
movsb
clc
jp
add
das
xor
add
pop
call
clc
inc
clc
arpl
add
add
repnz
add
add
add
add
cmc
xor
add
add
add
clc
outsb
sar
push
mov
clc
stos
outsb
arpl
add
or
add
jnp
addr16
or
mov
clc
jmp
add
clc
gs
xchg
mov
mov
out
jge
pop
lcall
xchg
xchg
push
seta
test
adc
add
arpl
add
movsl
clc
bound
add
rclb
adc
add
add
test
add
cli
mov
into
dec
push
mov
ljmp
cmp
data16
inc
clc
or
clc
mov
mov
sahf
adc
fisttpl
test
dec
je
jne
dec
xchg
sahf
mov
mov
clc
jmp
clc
mov
add
push
pop
mov
adc
add
rorl
add
push
add
adc
mov
or
cli
idiv
lret
jecxz
fildl
add
clc
dec
mov
clc
adc
add
jge
add
sub
clc
repnz
dec
dec
test
out
aaa
cmp
add
add
sub
add
cmp
pop
pop
jp
clc
jg
clc
and
add
in
rcr
mov
popl
clc
bound
add
clc
or
add
push
clc
push
scas
and
add
push
pop
lcall
cmp
add
outsl
jae
add
push
mov
lock
neg
mov
pop
aam
add
mov
data16
rclb
add
mov
or
enter
int3
ljmp
test
mov
xchg
lock
mov
xlat
imul
pushf
jo
add
clc
xor
clc
mov
add
jno
add
es
std
mov
jl
clc
adc
add
cmp
cmp
cmp
clc
jnp
clc
add
inc
add
int3
stos
iret
data16
and
add
mov
mov
or
add
scas
ficomps
mov
loope
int
or
lods
xchg
xchg
sar
and
add
inc
add
js
jo
add
shll
add
xabort
add
into
push
clc
gs
adc
data16
notb
sub
clc
rolb
add
pop
dec
xchg
adc
add
add
aaa
repnz
int3
mov
jmp
sub
loop
wbinvd
out
pop
sar
clc
icebp
cmpsb
clc
mov
clc
sub
adc
add
sub
fldt
call
add
adc
adc
clc
pushf
sbb
clc
sub
add
clc
addr16
pop
and
add
or
add
push
sar
dec
inc
clc
loop
call
sbb
cs
fildl
add
iret
xchg
dec
clc
add
add
push
add
scas
xor
add
roll
add
ljmp
jp
call
test
pop
adc
add
add
cmpsl
clc
shll
dec
into
movsl
clc
std
sahf
cmp
push
cmp
pop
cmpsl
clc
sub
clc
fdivl
scas
bound
add
or
outsb
cmp
push
push
add
clc
mov
addr16
out
xor
add
rorl
test
rep
pop
xchg
jle
das
pop
int3
mov
clc
js
pop
push
xchg
scas
lock
arpl
add
sbb
add
daa
clc
xor
add
clc
outsl
popa
add
pop
cmpsb
clc
daa
clc
xbegin
add
xchg
push
scas
or
sti
add
add
leave
xchg
push
add
std
idiv
outsb
scas
jnp
fldenv
add
and
add
test
inc
clc
nop
scas
dec
jmp
push
push
add
icebp
clc
inc
clc
jnp
lcall
jg
push
in
fs
mov
clc
pop
psubd
movsb
clc
sbb
ret
pop
cmpsb
clc
push
add
sub
inc
add
or
add
daa
clc
fabs
clc
sar
clc
daa
clc
add
inc
clc
out
sbb
add
dec
or
add
xchg
pop
push
clc
popl
clc
jo
add
clc
lock
cmp
fsubrs
cmp
rclb
add
add
and
add
xchg
jmp
imul
add
adc
add
or
loopne
jg
in
xchg
xor
add
add
mov
repnz
lea
add
push
add
or
out
int
ss
clc
cmp
stos
pop
clc
sub
add
pop
jg
pop
clc
test
popf
pop
stos
mov
ja
dec
push
add
popf
xchg
sub
jle
clc
xlat
stc
xor
clc
imul
pop
jp
mov
scas
fisubrs
sar
into
xchg
jmp
add
xbegin
or
or
jno
add
add
sahf
cmp
add
sbb
or
mov
add
jmp
push
clc
pop
dec
push
mov
dec
out
or
xchg
int3
cmp
clc
jl
lea
inc
add
arpl
add
mov
xor
add
xchg
cmp
sub
add
sar
push
popf
mov
clc
cmp
lcall
pop
jns
add
arpl
add
insb
mov
ret
clc
mov
sub
add
lahf
cmp
clc
ss
add
ds
clc
mov
stos
sbb
xchg
out
push
mov
sbb
and
jb
add
rcll
sbb
lcall
lcall
and
add
pop
cmp
clc
sbb
stc
jae
add
clc
or
mov
clc
lahf
jae
add
add
repnz
iret
push
pop
mov
jge
clc
mov
add
inc
add
ret
mov
rcll
jns
clc
mov
inc
clc
test
repz
sti
push
clc
jecxz
mov
sbb
add
adc
lret
push
mov
ja
push
mov
or
sbb
ja
outsb
int
and
aam
cmp
clc
pop
lea
add
in
inc
add
sti
add
cld
cmp
cmp
add
cmc
push
jl,pn
clc
lea
add
aas
clc
add
add
mov
clc
inc
clc
popa
add
popa
add
std
and
add
cwtl
xor
pop
and
and
add
add
add
mov
outsb
mov
add
test
xchg
push
add
cmp
add
pop
outsb
pop
gs
loope
dec
jg
mov
jbe
fadds
clc
mov
clc
cmc
bound
add
add
add
mov
pusha
add
mov
push
add
gs
daa
clc
bound
add
cmp
add
mov
xor
add
clc
es
mov
pop
lods
pusha
add
cmp
clc
mov
clc
mov
fcmovb
clc
inc
clc
sub
push
lods
in
mov
sbb
add
inc
add
into
fs
add
add
out
cmp
ss
clc
cmp
xor
sbb
stos
mov
add
xor
cmp
imul
add
xchg
xchg
fsubl
add
inc
clc
jb
add
cmp
adc
add
sbb
clc
mov
cld
xor
add
add
aad
into
jecxz
in
pusha
add
jecxz
test
mov
clc
cmp
in
or
push
and
add
clc
cmp
pop
scas
inc
clc
sub
add
jg
icebp
sub
clc
xchg
iret
clc
pop
ret
add
or
out
lods
add
add
jl
pop
clc
pop
ret
clc
pop
out
jge
add
scas
stos
sbb
fistps
pop
ds
pop
cwtl
inc
add
jb
add
add
or
add
add
add
adc
add
dec
pop
push
clc
lret
repz
clc
jp
jg
inc
clc
std
inc
clc
cmp
add
fs
cmp
dec
inc
clc
sub
fidivs
mov
xchg
xchg
pop
out
add
add
adc
add
sar
clc
jae
add
add
pushf
mov
xchg
cmp
add
lods
jno
add
negl
add
mov
clc
ja
lret
lods
ficompl
add
adc
add
int
clc
loopne
sub
int
adc
add
test
sub
clc
sub
adc
add
pop
clc
inc
add
mov
adc
cmp
dec
fldt
add
push
push
fdivs
mov
add
std
test
mov
jnp
mov
clc
test
pushf
inc
add
stos
rcrl
mov
mov
add
cmp
add
add
mov
in
mov
mov
xor
add
and
add
jns
dec
sbb
add
clc
rol
clc
sar
fstps
adc
inc
clc
and
add
clc
mov
out
mov
dec
bound
add
lods
mov
push
add
sbb
out
add
add
pop
clc
push
add
and
add
clc
push
add
fs
cmp
and
add
inc
add
fucomi
filds
fildll
aad
clc
jmp
stos
fisubrs
add
cld
mov
add
and
add
jl
and
add
mov
add
rcll
add
iret
xor
inc
clc
sbb
cmp
add
sti
jl,pt
fimull
mov
jbe
enter
fwait
lcall
add
jnp
cmpsl
clc
mov
cmp
in
xchg
inc
add
in
xchg
mov
add
aad
xchg
add
add
imul
clc
arpl
add
pop
dec
sti
sahf
pop
dec
dec
xor
add
cmp
add
fistps
jmp
clc
out
jmp
mov
jl
clc
sbb
pop
test
std
inc
clc
clc
out
sti
aas
scas
xor
add
add
pop
mov
fistl
add
int
scas
pusha
add
mov
sub
es
mov
clc
enter
aaa
bound
add
clc
add
add
add
cmc
mov
push
jns
clc
mov
popf
enter
clc
mov
push
mov
add
outsl
test
fadds
add
not
pop
xchg
fdivl
clc
bound
add
jnp
ljmp
add
adc
add
add
mov
add
add
pop
pop
mov
push
jle
add
aas
test
icebp
inc
clc
repz
dec
lcall
clc
scas
cmp
dec
xchg
cwtl
or
clc
dec
cmp
clc
fsubr
outsl
cmp
add
sub
lret
scas
push
add
pop
and
add
jmp
mov
dec
jnp
add
xchg
jae
add
jge,pt
cmp
push
je
mov
push
and
add
mov
add
rclb
add
js
xchg
sbb
add
sub
mov
hlt
cs
pop
sbb
add
cmp
stc
pop
lea
sub
sub
clc
cmp
jnp
clc
dec
and
mov
inc
clc
push
xor
add
clc
aad
movsb
clc
adc
inc
clc
movsl
clc
scas
leave
fstl
hlt
stos
mov
in
bound
add
mov
add
clc
mov
add
adc
add
add
out
push
add
sbb
fs
icebp
lret
out
mov
sar
out
xabort
pop
push
add
xlat
test
clc
xchg
loope
sahf
lea
xor
add
add
xor
add
data16
insl
mov
clc
fs
inc
add
dec
repnz
mov
add
clc
dec
mov
mov
cltd
int3
xor
add
cmp
or
add
mov
clc
pop
outsl
add
add
fs
xchg
jo
add
add
and
add
xbegin
out
aad
pmuludq
sub
mov
fsts
clc
outsb
fwait
xchg
adc
clc
cwtl
push
clc
stc
jns
clc
test
scas
xor
add
aam
push
fistpll
insb
test
call
cmpsb
clc
aaa
sti
in
mov
add
jge
xchg
add
add
add
pop
pop
cmp
mov
mov
add
mov
fsubs
pusha
add
cmpsb
clc
fdiv
pop
popa
add
xchg
push
sbb
clc
push
out
sti
ljmp
xor
add
fimuls
addr16
lods
sbb
ror
das
push
add
jle
xchg
xchg
jo
add
push
cmp
jb
add
cltd
adc
add
xabort
aas
fsubrl
pop
lods
ret
clc
loop
popa
add
jle
in
add
add
test
xchg
or
mov
add
cmp
push
add
inc
clc
insl
mov
cmp
pushf
pop
jp
add
inc
clc
xchg
pop
fstl
add
fnstenv
add
sbb
daa
clc
int
dec
inc
clc
mov
cmp
addr16
mov
cmp
add
cmp
mov
clc
cmp
add
xor
add
add
jne
and
add
add
enter
xbegin
cmp
int
clc
dec
inc
clc
and
add
cli
mov
stos
sub
jle
mov
test
popf
int3
arpl
add
push
clc
cmp
icebp
cmp
clc
push
lcall
inc
add
cmpsb
clc
sar
fdivrl
and
add
js
add
pop
test
test
mov
ja
add
add
pushf
loop
xchg
cmp
add
sub
clc
inc
add
ror
ja
lock
add
int
ret
cmp
cmpsb
clc
out
sub
ss
jo
add
dec
sbb
clc
test
lgs
aas
mov
and
add
hlt
data16
xor
add
cltd
call
add
mov
clc
jge
mul
clc
pop
insb
push
add
sub
movsb
clc
pop
jne
fiadds
clc
jmp
in
inc
add
xchg
rcrl
clc
fsubrl
xor
add
add
xor
int
clc
dec
jmp
adc
xchg
mov
inc
add
scas
mov
leave
imul
clc
lods
add
add
jnp
cmp
clc
xchg
push
add
add
add
je
inc
clc
adc
add
stos
out
pop
repz
or
add
mov
xchg
ret
cs
add
lcall
leave
cmp
xchg
push
add
add
in
jle
adc
add
mov
mov
arpl
add
lret
adc
out
xor
add
add
fildll
mov
je
clc
adc
add
clc
jne
sub
clc
or
sti
push
add
stos
add
add
fisttps
add
add
clc
dec
fildll
or
sub
cltd
xor
add
add
xchg
test
jle
frstpm(287
clc
xchg
mov
out
pushf
add
add
pop
sbb
rorl
clc
ss
add
loop
data16
into
aad
dec
sbb
aad
sahf
dec
gs
aaa
mov
clc
add
add
push
add
or
add
add
fimuls
clc
push
mov
daa
clc
pop
jns
in
mov
push
add
pop
clc
idivl
cmp
adc
clc
hlt
xor
add
sti
scas
outsb
mov
popf
add
inc
clc
cli
xchg
adc
add
je
clc
sar
cs
mov
clc
aaa
imul
add
add
cmpsl
clc
push
add
mov
add
add
test
stos
sub
sbb
clc
xbegin
or
add
xabort
scas
pop
xbegin
clc
mov
jle
enter
clc
push
inc
add
mov
call
add
add
clc
xchg
sar
loop
out
enter
aaa
xchg
je
aam
repnz
jle
sar
mov
add
cli
and
add
adc
add
pop
clc
insb
in
stos
sub
xabort
insb
nop
mov
jae
add
data16
int
xchg
or
xor
add
daa
clc
xchg
or
ret
clc
sti
cmc
xchg
sub
clc
xor
add
cmp
clc
fdivrl
add
xbegin
add
add
stos
lock
cmp
push
add
add
add
out
pop
sub
clc
repz
clc
cmp
clc
movsl
clc
jno
add
clc
mov
inc
clc
adc
add
mov
lods
insl
aas
mov
add
xchg
xabort
clc
ret
clc
adc
add
xor
add
clc
addr16
mov
add
add
push
mov
pop
inc
add
pop
adc
add
add
mov
add
clc
insb
jmp
add
push
cmp
insb
test
mov
shll
add
notb
add
aam
clc
sbb
clc
xchg
pop
clc
jno
add
mov
inc
clc
test
mov
cmc
in
imul
jo
add
cmp
add
jae
add
push
jp
add
add
test
xchg
or
imul
clc
xchg
mov
clc
jae
add
add
add
push
add
add
add
xor
add
cmpsb
clc
inc
clc
clc
movsl
clc
cld
or
add
mov
clc
add
add
add
lods
sbb
adc
add
clc
jns
aaa
jmp
sub
add
jge
loopne
scas
sub
add
mov
mov
in
mov
clc
cwtl
push
fldenv
add
mov
add
outsb
lock
lea
test
movsb
clc
pusha
add
jns
clc
scas
stos
cmp
clc
xbegin
push
add
add
add
add
and
add
gs
clc
jbe
into
pop
jp
adc
add
xchg
sbb
ss
jns
add
inc
add
jmp
push
lods
and
add
repz
add
test
jecxz
adc
add
ficomps
cltd
push
jne
pop
sbb
clc
pop
push
outsl
xlat
pop
inc
clc
mov
push
sub
add
xor
add
add
testb
xor
add
add
jo
add
or
add
jo
add
pop
adc
add
clc
adc
add
clc
xor
add
lods
mov
cs
cmp
addr16
inc
clc
popf
aas
jo
add
cld
lods
dec
dec
xchg
iret
push
add
xchg
lea
add
add
mov
cmpsl
clc
aaa
or
cmp
mov
inc
clc
or
clc
nop
das
sbb
test
sub
or
je
add
loope
js
clc
outsl
mov
mov
cmp
push
dec
lahf
cmp
clc
in
bound
add
inc
clc
pop
mov
clc
sarl
clc
dec
sahf
fildl
add
clc
cmp
clc
mov
js
add
aaa
mov
add
xchg
cmpsl
clc
add
and
pop
xor
add
mov
mov
sbb
inc
add
repz
test
sub
dec
inc
clc
pop
xchg
lret
clc
test
sti
shrb
clc
mov
xchg
cmp
or
clc
js
jg
cmp
xor
sarl
rcll
add
pop
cmp
xchg
popf
sub
cmc
mov
fimuls
inc
add
call
add
clc
outsl
push
mov
lods
int3
stc
mov
sbb
add
pop
clc
xchg
mov
jnp
jo
add
test
inc
add
adc
or
hlt
or
clc
mov
clc
sar
clc
fstpt
fdivrs
clc
fidivrs
das
scas
aam
add
add
clc
icebp
fdivrl
add
ret
clc
mov
clc
sbb
add
push
add
xor
clc
xchg
out
addr16
mov
dec
cmp
clc
scas
scas
outsb
test
and
add
add
gs
mov
pushf
jno
add
stc
inc
add
es
add
jne
add
push
lea
repnz
add
push
lea
clc
ja
sub
mov
lcall
inc
add
pop
jp
pop
in
inc
add
movsb
clc
arpl
add
lods
sbb
xabort
add
ds
xlat
jecxz
fucomp
je
pop
int
push
inc
clc
cmp
pusha
add
mov
cmp
clc
lock
sub
clc
xchg
arpl
add
push
cmp
shll
add
clc
mov
sbb
or
mov
rorl
mov
insl
sbb
xbegin
cmp
cld
adc
add
inc
add
sub
out
xchg
dec
xchg
shll
add
mov
push
clc
cmp
add
fwait
add
add
sar
xlat
scas
mov
aas
cs
jge
clc
mov
decb
ss
or
add
movsb
clc
cmp
xchg
push
clc
js
je
add
testl
clc
cmpsl
clc
or
cmp
divl
cmp
push
clc
add
add
in
push
add
cmp
mov
es
into
sub
clc
out
cld
jns
add
and
add
clc
push
clc
insl
scas
outsl
add
add
sarb
add
add
add
clc
or
xchg
sub
cmp
jge,pt
add
sub
clc
jbe
add
in
lea
sar
fldcw
add
xor
add
iret
data16
add
xor
add
add
out
xchg
mov
add
data16
lret
jmp
add
dec
pop
cltd
xchg
mov
movsb
clc
mov
icebp
sbb
clc
dec
ret
push
add
sbb
clc
sub
fildl
mull
arpl
add
mov
clc
pop
imul
add
cmp
cmc
dec
lahf
imul
add
xor
add
add
and
push
adc
add
mov
jp
jecxz
clc
mov
pushf
insb
adc
add
clc
cmp
loop
mov
adc
add
add
jl
inc
add
adc
add
xchg
movsb
clc
cmp
aam
sbb
clc
clc
push
clc
ret
cmp
loope
mov
stc
stos
pushf
cmp
ret
clc
or
clc
adc
add
push
add
ret
sbb
clc
or
cmp
clc
loopne
cmp
clc
bound
add
add
add
xor
add
decb
dec
call
rol
clc
test
lock
stos
nop
and
add
jbe
clc
mov
mov
add
fildl
jbe
js
fidivrl
ljmp
and
add
nop
mov
or
xor
add
gs
sub
push
clc
and
add
add
add
add
mov
add
pusha
add
cwtl
adc
add
mov
mov
pop
clc
mov
add
test
clc
loope
int3
sahf
pop
test
in
mov
jle
mov
pusha
add
pop
inc
clc
push
mov
jg
sub
clc
stos
xor
fs
and
add
push
add
add
ss
add
add
add
cmp
sub
add
add
rolb
inc
clc
jno
add
lret
pop
xor
outsl
xbegin
cmpsb
clc
dec
cmpsl
clc
mov
clc
loop
push
pushf
jg
clc
js
adc
clc
out
in
sar
in
xchg
aam
and
add
mov
add
add
jbe
jecxz
aaa
inc
add
pop
xor
add
xchg
add
add
scas
add
add
test
push
add
cmp
add
add
nop
test
clc
xbegin
xlat
adc
add
xor
add
push
sbb
add
and
mov
clc
aaa
insb
xbegin
add
clc
xchg
xchg
mov
dec
int3
shlb
aas
fdivrs
dec
sbb
arpl
add
add
add
out
xchg
sarl
fnsave
insl
clc
xchg
pop
lea
clc
out
mov
clc
clc
xor
add
hlt
jne
and
sbb
add
insl
in
sbb
add
gs
mov
add
sar
add
repnz
add
push
and
std
mov
clc
xchg
test
outsl
mov
add
popf
cmpsl
clc
outsl
jnp
addr16
inc
clc
lret
add
ljmp
xor
pop
cmp
fsubrp
mov
add
scas
aas
enter
mov
add
clc
mov
out
in
aas
decb
inc
clc
push
add
adc
add
aam
jns
xlat
xchg
test
dec
mov
add
out
cld
shlb
add
clc
pushf
insb
jb
add
int
insb
fcmovnb
clc
int
outsl
loop
mov
fwait
push
or
add
xlat
fcmovbe
roll
add
cli
jno
add
pop
addr16
rorb
rclb
add
clc
js
fsub
clc
clc
in
dec
xor
clc
push
outsb
ss
and
add
out
inc
add
pop
cmp
mov
scas
add
add
clc
daa
clc
gs
push
out
daa
clc
in
out
xchg
adc
add
cmpsb
clc
adc
js
or
lods
mov
clc
iret
data16
imull
popa
add
xchg
fildll
js
jmp
sar
dec
mov
cmovne
push
add
bound
add
add
add
push
mov
and
clc
jb
add
push
clc
xchg
add
add
in
ljmp
or
jmp
iret
and
add
clc
clc
sar
add
cmp
call
popa
add
pop
clc
knotw
jo
add
jae
add
add
stc
lret
push
cmp
mov
add
rorb
mov
mov
sub
sar
outsb
and
add
add
adc
add
imul
add
add
add
adc
add
clc
in
and
add
xchg
adc
add
add
mov
clc
dec
in
loope
outsb
clc
mov
jle
cmp
clc
pop
clc
xor
add
fcomps
pop
iret
push
add
push
xor
add
clc
add
add
add
cld
mov
clc
das
fs
shr
mov
mov
sahf
mov
pop
cs
clc
fwait
mov
clc
xchg
lock
popf
mov
bound
add
pop
inc
clc
cli
sub
cld
pop
cmp
jle
clc
or
sub
clc
or
nop
loope
push
add
or
sbb
pushf
and
movsb
clc
add
add
add
aas
cmpsl
clc
and
add
mov
cmp
clc
xor
add
clc
sbb
or
clc
xchg
xbegin
ja
cltd
jge
int3
xabort
clc
fistpll
sar
dec
pop
pop
mov
cmc
repz
xor
add
dec
jecxz
repz
in
adc
add
mov
pop
cmp
clc
dec
scas
cmp
clc
jno
add
clc
mulb
mov
pop
cwtl
fs
rcr
mull
out
adc
add
clc
icebp
adc
add
insl
aad
mov
clc
movsl
clc
pop
or
aam
add
add
add
clc
movsl
clc
in
xlat
mov
clc
mov
add
xor
dec
fidivl
add
mov
shll
clc
jp
jl
shlb
add
add
add
pop
loopne
inc
add
fcomp
addr16
mov
add
cli
cmp
out
scas
movsl
clc
scas
insl
xor
add
mov
add
push
jbe
fwait
mov
rclb
addr16
jbe
clc
add
add
xchg
xor
add
clc
pop
push
sbb
add
add
clc
cmp
add
aas
outsl
in
add
add
clc
mov
addr16
lods
cmpsl
clc
data16
aam
push
add
iret
fdivrs
xor
clc
mov
add
add
nop
inc
clc
fstpt
add
add
leave
jge
sti
jbe
stos
push
cltd
jnp
bound
add
clc
pop
jbe
add
bound
add
out
add
pop
mov
push
int3
jb
add
push
adc
add
sub
neg
mov
mov
xchg
xchg
jno
add
outsl
outsb
or
popf
scas
mov
clc
jb
add
dec
and
add
out
data16
sbb
push
sub
daa
clc
shlb
jle
idivb
inc
add
and
add
cmpsb
clc
das
ljmp
adc
add
add
sbb
and
add
pop
mov
xor
clc
fwait
pop
cmc
mov
clc
dec
dec
lea
add
aaa
mov
add
add
es
aaa
dec
sti
mov
add
fwait
data16
xor
cwtl
pusha
add
pop
mov
scas
ret
repz
sbb
inc
clc
mov
das
insl
mov
xor
xchg
mov
rcrl
add
xchg
adc
add
aaa
push
test
sbb
push
stc
cmp
push
das
or
push
add
fists
mov
add
push
std
cmp
add
inc
add
push
clc
testl
add
sub
std
aaa
pop
xchg
arpl
add
add
add
clc
push
jbe
fs
push
inc
add
fwait
mov
xlat
stc
or
mov
add
sub
push
add
repz
pop
repz
add
fidivl
add
sbb
sbb
clc
inc
clc
gs
and
add
pop
inc
clc
pop
push
clc
dec
imul
clc
loope
jp
xor
add
clc
imul
fcomp
inc
add
mov
clc
test
jmp
add
jb
add
clc
sbb
add
or
mov
add
dec
push
xchg
je
clc
scas
lods
cmp
inc
clc
cli
mov
insl
mov
add
mov
leave
inc
clc
lock
inc
clc
mov
sub
sbb
fisttps
ja
add
loopne
cmp
pop
clc
sub
clc
jno
add
gs
mov
add
adc
add
add
cltd
xor
add
mov
aas
push
or
adc
add
clc
js
add
push
clc
cltd
xor
add
iret
idivb
mov
inc
add
inc
clc
push
add
dec
cmp
add
add
add
testb
ret
clc
jecxz
adc
add
mov
jmp
add
xchg
or
clc
add
add
clc
mov
ljmp
pmaxub
inc
add
mov
clc
int
add
and
clc
lods
insb
nop
inc
add
pop
pop
dec
xchg
cmp
sbb
add
inc
add
std
or
add
cmp
add
add
add
add
add
add
aas
pop
sbb
fs
xchg
pop
mov
in
adc
add
cmp
mov
clc
jae
add
sub
jge
clc
or
in
jmp
imul
clc
bound
add
in
cs
inc
add
sti
add
add
scas
mov
add
pop
xbegin
pop
out
imul
add
mov
fs
in
sbb
mov
fucomi
test
jmp
push
pop
cmpsb
clc
xchg
or
fwait
in
add
add
cwtl
setnp
jl
inc
add
push
adc
test
clc
mov
add
inc
add
jns
jno
add
clc
mov
cmp
stos
es
push
mov
clc
mov
mov
clc
mov
add
add
add
aad
and
add
ds
mov
pop
clc
mov
clc
cs
add
icebp
lods
lahf
push
bound
add
pop
or
add
lods
hlt
imul
dec
xchg
pop
pop
mov
mov
ss
clc
shl
clc
insb
jb
add
clc
mov
jbe
scas
test
xchg
xchg
jno
add
inc
add
enter
add
xchg
push
add
iret
cmp
push
clc
lret
scas
mov
out
repnz
movsb
clc
fcoml
in
rol
clc
mov
aaa
lods
inc
add
add
test
push
aad
xor
add
clc
das
sbb
add
cmp
add
ss
add
xchg
push
add
pop
and
add
clc
cmp
inc
clc
ja
cmpsb
clc
aas
push
add
inc
add
ss
loopne
sti
mov
add
loopne
notb
jp
clc
movaps
shlb
pop
pushf
int3
mov
add
test
arpl
add
jg
clc
sahf
aad
clc
iret
bound
add
or
clc
pop
mov
jnp
xor
add
add
pushf
test
sbb
add
insb
mov
jle
fnsave
push
mov
clc
loop
loop
sbb
or
adc
add
clc
mov
add
push
add
lods
mov
and
in
imul
or
sub
fistl
add
dec
mov
xchg
xlat
out
cmp
lods
fistpll
clc
loopne
scas
and
add
fcoms
or
ret
clc
addr16
lcall
xor
add
fisubs
pop
add
add
loopne
fdivrl
clc
popf
xor
add
clc
int3
or
add
adc
add
sbb
adc
add
clc
mov
js
push
inc
clc
repnz
fldt
ss
xor
add
imul
add
aad
add
mov
pop
dec
into
ds
mov
inc
clc
cmc
inc
add
mov
add
pushf
clc
fnstcw
clc
add
add
gs
xor
clc
aaa
out
aam
sbb
jns
and
inc
clc
sbb
clc
stos
sub
clc
ss
cmp
clc
rorl
clc
mov
test
sar
clc
cmp
loop
fisttpll
add
push
int
add
imul
jbe
push
aam
add
ret
clc
addr16
xchg
mov
int3
sbb
clc
in
mov
mov
fcoms
add
out
pop
mov
sbb
add
add
into
inc
add
cmp
clc
inc
clc
outsb
cmp
pop
arpl
add
mov
pop
jnp
clc
into
aas
mov
adc
fidivrl
add
test
dec
mov
inc
add
lea
add
cmpsl
clc
jns
inc
add
repnz
pop
add
add
add
cs
in
rcrl
sti
sti
movsb
clc
xor
pushf
call
inc
clc
mov
das
push
cmp
and
add
mov
inc
add
sahf
fcmovnbe
xlat
xchg
sar
cmp
add
cmp
clc
and
add
insb
mov
ss
pop
mov
sar
aad
ljmp
add
add
clc
rcrl
clc
mov
sbb
clc
xor
add
clc
dec
push
ja
add
rorb
clc
lock
lcall
add
push
add
loope
xor
or
xchg
pop
jno
add
repz
clc
push
pop
scas
ret
clc
jecxz
lods
test
loopne
add
add
push
cmp
mov
jbe
add
mov
mov
clc
dec
mov
out
mov
pop
call
xchg
mov
xor
add
add
cli
fimuls
movsb
clc
or
insb
mov
pop
cmp
fisttpll
clc
or
mov
add
mov
sarl
jge
aad
mov
push
xchg
and
add
xchg
es
out
xor
add
add
fimull
mov
sahf
sbb
xchg
rolb
add
add
add
add
add
add
int
clc
stc
or
dec
leave
scas
data16
sbb
test
bound
add
add
movsb
clc
lea
clc
pop
out
pop
pop
cli
or
add
and
add
sub
add
test
hlt
imull
add
outsl
dec
push
mov
add
sar
popl
jne
or
adc
push
repnz
clc
mov
clc
rol
clc
lret
sbb
add
cmp
add
mov
clc
mov
clc
push
clc
adc
add
cld
jo
add
push
add
xbegin
pop
adc
and
daa
clc
mov
clc
adc
add
pop
mov
add
clc
aam
add
push
and
sub
xor
add
clc
arpl
add
add
js
imul
add
mov
pop
jl
push
add
mov
clc
mov
add
test
out
jo
add
gs
xbegin
clc
cmc
nop
mov
lcall
lods
mov
lods
adc
in
fstp
mov
into
xchg
out
jno
add
clc
in
lods
imulb
in
add
add
add
call
add
xchg
data16
mov
add
pushf
mov
clc
push
add
mov
clc
bts
clc
lret
xchg
adc
pop
pushf
or
sbb
and
add
jge
add
dec
add
add
clc
sub
in
aad
mov
push
dec
mov
clc
xor
add
adc
add
add
clc
mov
add
loopne
hlt
adc
insl
aaa
gs
cld
mov
cmp
mov
cmc
pop
mov
add
and
add
inc
add
lret
outsb
fisubl
add
add
bound
add
sar
mov
xchg
inc
clc
xor
cwtl
sub
lea
and
add
out
lret
jbe
movzwl
clc
pop
in
loop
repnz
jp
lahf
cmpsb
clc
mov
mov
lea
je
mov
clc
inc
add
iret
mov
cmp
clc
cmp
stc
mov
clc
push
mov
adc
clc
rorl
mov
aaa
push
add
out
das
pop
push
add
shl
push
add
jo
add
clc
adc
lret
add
or
push
mov
mov
mov
add
clc
cmp
cmp
add
das
mov
push
add
cmp
cmpsl
clc
sub
clc
jbe
or
mov
push
inc
add
das
pop
pop
data16
add
clc
cmp
add
pop
shrl
insb
mov
ficomps
test
clc
call
cltd
inc
clc
adc
add
leave
scas
jp
mov
push
add
and
in
iret
pop
flds
add
outsb
mov
test
add
pop
lods
or
mov
mov
mov
stos
rorl
testb
mov
data16
cmp
outsl
sarb
lcall
add
add
and
add
jnp
add
xchg
dec
jg
icebp
aam
add
and
add
add
add
popf
shll
pop
fs
mov
add
out
and
add
clc
scas
mov
int3
adc
add
push
add
jg
dec
std
loop
lock
clc
or
push
add
xor
add
mov
push
pop
add
add
and
add
add
and
add
fimull
outsl
ja
add
jmp
clc
lret
mov
add
sarl
xchg
mov
inc
clc
push
add
lods
sar
jae
add
add
push
add
daa
clc
sub
in
push
ret
clc
sarb
enter
add
add
add
cmc
stos
sbb
add
add
bound
add
add
iret
add
inc
add
dec
xchg
sbb
pop
xor
lahf
mov
iret
add
add
inc
clc
mov
cltd
imul
xor
jno
add
clc
aaa
or
clc
sub
add
fidivs
sbb
clc
je
cmp
dec
into
cmp
add
adc
add
aam
add
add
inc
add
int3
ja
inc
add
std
cmpsb
clc
adc
add
repz
add
imul
add
pop
arpl
add
fldcw
mov
add
sbb
add
sahf
sub
clc
loop
loope
cmp
clc
push
mov
es
lods
adc
or
add
mov
or
cmc
pop
pop
mov
inc
add
pop
clc
ljmp
fmul
js
jg
sbb
pop
pop
xchg
in
sub
add
xchg
add
add
mov
leave
and
add
sub
add
jnp
nop
and
jp
sub
pop
push
add
pop
xchg
or
adc
add
clc
mov
push
pop
cs
xor
add
add
add
mov
push
jo
add
push
xchg
jnp
xor
add
clc
fists
jle
mov
add
jge
clc
push
clc
mov
imul
sar
clc
fwait
xor
clc
in
imul
add
adc
data16
or
add
rcrl
sbb
dec
lcall
add
push
add
xchg
loope
sar
clc
popf
jo
add
fsubrs
jge
pop
xor
leave
and
add
mov
clc
and
or
lret
mov
movsl
clc
stc
js
jno
add
fcmovu
jle
ss
outsb
in
std
call
add
mov
add
lea
lret
lahf
stos
sbb
jle
clc
loopne
jne
xchg
stos
push
cmp
lea
clc
enter
mov
clc
sbb
add
xor
add
xor
repnz
add
out
dec
dec
xor
add
adc
add
clc
inc
clc
sbb
into
cmp
cld
lret
push
lcall
clc
xchg
push
add
mov
mov
add
add
sub
jmp
clc
iret
loop
outsl
dec
xchg
mov
outsl
push
cwtl
inc
add
lcall
push
add
adc
add
add
clc
divl
fsub
clc
jmp
sahf
lret
push
pop
push
mov
loopne
dec
hlt
pop
inc
add
es
aad
or
add
imul
clc
mov
pop
clc
mov
aad
inc
clc
mov
jmp
popa
add
jno
add
and
add
cmp
jg
jl
call
in
inc
add
in
int
jg
dec
aad
clc
pop
cmp
clc
stos
add
add
add
pop
ss
sub
mov
popf
dec
xchg
movsb
clc
ja
add
add
add
test
clc
fstpt
pusha
add
icebp
shlb
cld
cmc
xor
add
add
test
dec
jecxz
loop
das
pushf
pusha
add
mov
xor
stos
popa
add
mov
add
xor
add
jp
int3
adc
add
add
add
jmp
stc
jo
add
add
dec
outsl
rcr
or
mov
or
clc
mov
cmc
cmpsl
clc
mov
add
and
mov
mov
scas
pushf
mov
clc
push
add
mov
clc
cmp
test
ljmp
push
add
xor
add
add
popa
add
mov
mov
leave
jb
add
in
cmp
inc
clc
int3
push
add
add
inc
add
and
add
and
add
lret
push
add
cmp
fildl
clc
inc
clc
inc
clc
lods
mov
add
out
js
int3
jns
dec
and
add
lret
addr16
das
bound
add
sbb
xor
add
mov
mov
add
ret
clc
ljmp
xor
imul
lret
out
xchg
scas
adc
add
lahf
call
out
push
and
add
clc
jbe
add
jecxz
ret
clc
fisubrl
xor
add
push
test
arpl
add
jb
add
or
push
cli
sti
mov
xor
test
imul
pop
and
add
add
mov
sub
pushf
cmp
sub
lock
clc
loop
dec
mov
mov
sub
clc
fnstsw
clc
xchg
mov
inc
clc
mov
jp
xchg
inc
add
inc
clc
cmp
add
mov
add
mov
scas
test
ss
push
add
enter
push
add
mov
cmp
clc
aam
add
int3
fsts
in
pop
fwait
push
add
mov
loope
jns
push
add
inc
add
js
add
cmp
push
add
dec
ljmp
or
in
out
push
enter
pop
jmp
clc
inc
clc
scas
xchg
xor
add
cli
gs
ja
inc
clc
lods
sub
cmp
add
jge
gs
adc
add
nop
cmp
clc
jecxz
test
xor
cld
inc
add
add
adc
add
cmp
clc
cs
jmp
sti
dec
or
mov
leave
clc
data16
xor
add
arpl
add
fwait
inc
add
or
hlt
jp
fstpl
mov
clc
fiadds
clc
fadd
clc
aaa
pop
cmpsl
clc
mov
popa
add
mov
clc
js,pt
add
jne
add
lock
add
or
jmp
ficoms
inc
clc
cmp
jns
jb
add
jle
add
sbb
add
add
clc
push
add
aaa
je
clc
push
je
clc
jl
adc
add
push
clc
mov
popa
add
and
fnsave
add
jmp
sub
add
and
add
inc
clc
jp
add
add
ds
push
cmpsb
clc
ficompl
adc
add
sti
fiaddl
add
add
clc
dec
sub
dec
insb
jmp
call
push
in
insb
lods
aam
clc
shrb
movsl
clc
pop
cmp
dec
inc
clc
sbb
das
xchg
mov
sub
cmp
xor
add
xchg
pop
mov
dec
nop
cwtl
in
mov
add
xchg
loope
lret
imul
add
jbe
outsb
mov
mov
fldt
jne
clc
scas
xchg
js
clc
scas
xor
add
add
mov
pextrw
clc
outsl
push
add
xchg
shlb
add
push
scas
popa
add
push
clc
jae
add
clc
hlt
std
inc
clc
cmp
jne
clc
dec
pop
in
enter
lods
mov
jl
push
inc
clc
xor
add
mov
pop
popa
add
xchg
popf
jp
jne
push
in
ja
clc
in
cmpsb
clc
or
flds
clc
or
pop
sub
clc
adc
add
add
rcr
repz
cmp
add
sub
add
sbb
dec
fs
push
add
jno
add
jbe
out
bound
add
lret
fcomp
jmp
lahf
xor
add
insb
push
clc
push
add
jl
jno
add
adc
add
mov
cli
test
iret
dec
lock
push
icebp
hlt
inc
add
stos
jle
clc
leave
sub
clc
hlt
xchg
add
stc
leave
ss
outsl
arpl
add
and
inc
clc
cmp
sahf
jnp
fistpll
clc
jle
and
add
lahf
gs
call
sub
mov
add
adc
add
lea
lahf
push
add
or
in
jmp
fsubrs
and
ret
clc
mov
xbegin
jp
gs
xor
add
pop
test
bound
add
lock
add
cmp
clc
xbegin
mov
cli
testl
jge
imulb
ds
xlat
pop
push
data16
std
jae
add
mov
add
clc
test
xor
add
add
push
clc
mov
cmp
addr16
cmp
push
mov
jle
clc
inc
add
jb
add
daa
clc
js
scas
movsb
clc
scas
inc
add
sbb
sar
out
adc
add
jo
add
out
sbb
clc
out
xor
add
mov
roll
add
mov
add
mov
addr16
mov
push
cmp
int3
mov
js
clc
imull
cmp
xchg
mov
clc
idivl
xor
add
clc
jae
add
shrl
jecxz
loopne
cmp
mov
fisttpll
icebp
or
add
xlat
scas
xor
imul
enter
add
jae
add
add
popf
out
movsb
clc
in
dec
dec
or
push
clc
loopne
xor
clc
mov
clc
repnz
xchg
into
mov
inc
add
js
push
cltd
mov
push
sub
mov
cmpsb
clc
outsl
dec
aaa
out
adc
lret
mov
out
or
mov
add
add
cmp
add
dec
leave
add
add
add
imul
clc
fwait
ret
clc
pusha
add
out
mov
add
push
add
mov
ja
neg
mov
clc
mov
clc
mov
add
add
sar
cltd
pop
clc
or
jb
add
clc
mov
add
adc
add
mov
jno
add
add
cmp
or
cmp
lcall
out
lahf
lret
clc
out
sub
add
sahf
mov
repz
clc
cmp
and
add
inc
add
add
dec
pop
lods
pop
xchg
pop
es
cmp
clc
in
inc
clc
lret
int3
fwait
popf
push
mov
jb
add
dec
xor
pop
out
popf
std
ror
push
add
xabort
stc
cmp
clc
leave
pop
scas
jp
push
add
mov
mov
mov
clc
repnz
clc
pop
jmp
cmp
push
add
out
mov
xor
add
adc
add
aad
push
sub
js
clc
mov
clc
sub
add
cmpsl
clc
inc
add
pop
clc
adc
add
cs
out
sub
cmp
inc
add
jne
or
loop
dec
cmp
add
adc
add
cmp
clc
and
add
add
add
hlt
pop
clc
mov
mull
add
jecxz
mov
add
pop
std
xor
add
cmc
push
clc
cmp
clc
std
inc
clc
fld
clc
sub
add
data16
add
add
add
roll
add
clc
pop
lahf
add
cmp
je
lret
xchg
ficoms
clc
push
add
test
sub
lcall
cmp
push
clc
jl
add
push
mov
arpl
add
lcall
jne
add
pop
outsb
dec
in
mov
add
rcrl
add
mov
clc
movsl
clc
test
add
mov
clc
js
clc
pop
clc
ret
clc
js
dec
outsb
aas
roll
add
mov
std
push
in
cmpsl
clc
jb
add
clc
xchg
pop
mov
ds
stos
and
sbb
add
clc
imull
mov
add
pop
push
jecxz
lea
std
cltd
mov
jnp
jb
add
add
or
pop
inc
clc
sti
fs
call
add
cltd
xor
add
jnp
push
add
lcall
rcl
push
lods
repz
js
pop
cmp
add
dec
nop
sar
in
loop
lcall
jmp
clc
stos
add
add
add
pushf
enter
test
mov
add
cli
inc
clc
filds
clc
ret
clc
mov
add
lret
loopne
repz
add
cli
xor
add
lcall
push
mov
scas
repz
add
dec
lock
sbb
icebp
sarb
out
cmp
add
call
clc
pop
int3
sub
add
push
mov
fisubrs
adc
add
inc
add
xchg
aam
in
inc
clc
pop
mov
add
imul
add
mov
clc
sub
clc
inc
add
xchg
add
add
add
add
add
mov
outsl
pop
xor
add
jle
nop
xchg
jno
add
push
mov
mov
mov
mov
clc
std
cld
jp
daa
clc
das
dec
es
pop
ret
clc
or
adc
add
mov
or
xchg
stos
xor
add
ss
cld
scas
gs
sbb
bound
add
add
jmp
sbb
add
clc
inc
add
xor
add
fs
mov
add
or
add
inc
clc
es
and
add
add
adc
add
repnz
sub
lcall
push
add
sub
aam
mov
pop
adc
add
add
and
add
clc
jns
clc
bound
add
add
cmp
add
adc
add
add
add
out
adc
add
rep
mov
pop
repz
add
mov
lea
add
xor
add
sub
ljmp
push
push
add
push
jp
faddl
sbb
clc
fsubrl
scas
lock
add
push
mov
sti
pushf
mov
mov
insb
je
xor
add
clc
lock
enter
add
push
add
daa
clc
fnsave
adc
add
cmp
popa
add
xchg
loope
std
adc
or
hlt
bound
add
clc
adc
add
clc
xchg
repnz
clc
mov
clc
inc
clc
and
add
xchg
lcall
mov
add
mov
clc
sar
hlt
fnstsw
data16
and
add
and
add
jno
add
cli
mov
jle
cmpsb
clc
pusha
add
xchg
clc
xor
shrl
clc
jns
add
jl
iret
inc
add
outsb
int3
pop
sahf
mov
clc
aad
mov
mov
add
xlat
mov
pop
icebp
xchg
xchg
imul
sub
clc
outsl
xchg
stc
mov
test
or
add
enter
and
add
clc
mov
hlt
js
lcall
cmp
mov
cmp
clc
inc
clc
sar
add
xchg
xchg
adc
add
jmp
mov
ret
pop
mov
mov
lahf
dec
or
add
push
clc
mov
cmp
je
clc
inc
add
aas
add
add
add
sar
jle
imul
add
add
mov
loop,pn
popf
mov
clc
clc
sub
add
clc
lods
cmp
push
lods
ret
clc
fs
out
xchg
data16
cwtl
in
outsl
cmc
stc
ret
clc
in
pop
mov
clc
push
mov
add
stos
aaa
pop
aam
js
lret
dec
fs
cmp
and
add
fcom
addr16
jno
add
stos
pop
scas
lret
add
popl
add
add
mov
movsl
clc
xchg
outsb
inc
clc
xor
add
add
inc
clc
sbb
mov
shll
loope
xor
add
pop
gs
dec
pop
pop
notb
add
bnd
add
jne
mov
or
add
loopne
mov
clc
cmp
mov
xchg
jle
inc
clc
inc
add
scas
push
add
in
xor
add
adc
add
mov
rol
clc
add
add
sar
dec
cltd
cmp
add
add
add
clc
mov
jecxz
mov
pop
es
pushf
int
and
add
out
pop
pop
push
clc
push
testl
adc
add
cmp
cmp
xchg
loop
push
ret
roll
add
and
xchg
push
clc
out
sahf
mov
mov
divl
mov
add
pushf
jecxz
pop
jno
add
inc
clc
xchg
out
cld
mov
inc
add
cltd
mov
add
and
add
clc
sbb
pop
iret
outsl
sbb
insb
push
adc
add
enter
xchg
lahf
pop
mov
add
enter
pushf
or
clc
lret
dec
test
mov
add
cwtl
test
xchg
jne
aas
clc
xchg
repz
sbb
add
sbb
add
add
or
mov
push
add
inc
clc
push
clc
stos
stos
inc
add
jl
ficomps
js
pop
aad
dec
out
pop
clc
aad
add
adc
add
xor
lock
mov
clc
sub
nop
add
add
inc
clc
and
add
clc
movsl
clc
inc
clc
stos
sbb
clc
mov
sbb
clc
fisubrl
fisubrs
sbb
add
xchg
outsl
dec
dec
loope
test
jmp
sbb
clc
mov
xor
add
clc
sbb
sub
push
push
add
cmp
xchg
xor
sbb
push
add
mov
scas
mov
jnp
cmp
mov
jno
add
add
adc
add
iret
pop
or
inc
clc
popf
dec
add
mov
add
jbe
ret
push
ret
mov
clc
inc
add
xchg
je
cli
or
scas
inc
add
mov
jo
add
add
pop
sub
clc
ljmp
repz
ds
clc
add
add
rolb
xor
add
and
add
clc
int
dec
and
add
clc
mov
sar
pop
aad
inc
clc
pop
push
add
ss
stos
dec
cmp
clc
hlt
push
add
mov
xchg
out
inc
clc
lret
mov
push
add
jb
add
jbe
add
adc
xor
add
add
jns
jnp
jne
movsl
clc
dec
mov
jge
add
fadds
popa
add
sar
cmp
add
push
add
mov
add
or
jmp
into
sbb
clc
and
add
add
add
dec
idivl
nop
cmp
add
push
cmc
jge
add
jns
xchg
shrb
pushf
fwait
and
add
scas
shl
clc
iret
sbb
clc
lahf
insb
js
mov
ret
clc
loop
clc
fcompl
clc
mov
test
fistps
stos
mov
xor
add
stos
sar
clc
rorl
mov
mov
pop
sub
fmull
pop
clc
std
cmp
cmpsb
clc
mov
sub
insl
cs
pop
out
mov
add
fstpl
loopne
mov
mov
test
push
add
mov
cld
dec
lock
clc
ret
xor
int
clc
adc
add
clc
push
outsb
jo
add
test
clc
fldz
cmp
clc
pop
sar
clc
sub
mov
dec
inc
clc
mov
add
out
clc
imul
clc
push
add
sbb
clc
stos
out
in
cmp
in
lcall
pop
outsl
sub
add
xor
cmp
add
ror
pop
mov
add
sub
jne
repnz
wbinvd
or
add
repnz
clc
mov
mov
clc
push
imul
add
add
add
add
pop
or
xor
in
or
add
mov
clc
push
lods
push
clc
mov
arpl
add
inc
add
push
pop
inc
add
pop
insb
sti
lea
clc
icebp
shll
add
mov
int
fadd
clc
clc
aad
clc
and
add
mov
popf
bndldx
add
movsl
clc
jnp
clc
js
inc
clc
pusha
add
je
add
mov
add
sbb
pop
clc
enter
and
add
pop
scas
jnp
and
add
add
mov
clc
cmp
add
inc
add
cmp
add
add
clc
icebp
lret
push
pop
test
inc
clc
repz
clc
sbb
clc
bswap
push
add
xchg
xor
aam
stc
sbb
mov
clc
adc
adc
add
add
js
jb
add
add
add
mov
add
out
pop
in
jno
add
clc
insb
insl
scas
cltd
out
xor
jbe
cmp
jae
add
popf
xabort
clc
shlb
jae
add
lcall
loop
das
pop
clc
call
add
lret
clc
adc
add
jns
mov
add
dec
stos
adc
add
pop
sbb
adc
enter
adc
add
add
or
dec
std
dec
pop
sub
mov
mov
push
cmc
cmp
jno
add
pop
inc
clc
mov
or
mov
clc
jge
clc
inc
clc
in
and
push
pop
out
lahf
sub
dec
jg
add
cmp
cmp
clc
mov
add
loop
jae
add
sub
add
int
mov
mov
clc
frstor
out
mov
fsubs
clc
and
jns
or
testb
add
add
call
cld
sbb
adc
clc
cmp
sar
clc
outsb
cltd
or
xor
add
add
cmp
clc
cmp
mov
add
add
cmp
xchg
sar
push
into
negb
add
pop
dec
cmpsl
clc
testb
add
dec
xor
add
mov
clc
cwtl
cmp
cltd
faddl
add
mov
adc
add
clc
in
jne
clc
jp
add
imul
jae
add
movsl
clc
xchg
mov
add
out
mov
jae
add
std
sub
iret
push
clc
push
inc
clc
mov
test
pop
xchg
pop
imul
clc
cmp
add
ret
clc
inc
clc
movsl
clc
mov
add
jp
clc
out
add
xchg
mov
and
add
clc
mulb
add
add
add
cmp
mov
mov
cmp
jb
add
jbe
xbegin
add
push
test
clc
dec
clc
adc
lea
mov
xchg
add
add
aam
and
add
mov
iret
mov
dec
cmc
iret
std
xchg
jge
dec
arpl
add
add
scas
imul
in
dec
aaa
mov
mov
pop
pop
jb
add
xor
add
clc
xor
clc
pop
cld
dec
int3
loope
mov
clc
pop
data16
xor
mov
clc
dec
ja
push
add
push
add
add
add
clc
fmull
aas
ret
clc
push
add
or
sub
xbegin
stos
xbegin
cmp
push
dec
xchg
add
clc
inc
add
sti
or
add
or
in
filds
clc
cmp
inc
add
fdivs
xchg
jle
add
push
mov
clc
outsl
mov
add
xchg
jbe
clc
aad
or
add
sub
stos
cmpsl
clc
mov
sarb
je
xchg
sub
xchg
cmpsb
clc
dec
cltd
adc
add
add
add
jl
jg
es
popf
aam
mov
in
clc
jle
jns
add
xchg
pop
cmp
icebp
or
clc
insb
xor
add
clc
clc
out
cmp
add
jge
add
dec
adc
add
cmp
add
adc
clc
push
add
mov
mov
add
mov
fsubrs
clc
sub
xchg
mov
add
sub
add
or
xor
add
clc
xor
add
add
mov
out
int3
adc
add
movsb
clc
mov
mov
add
add
adc
add
clc
xor
add
clc
xor
add
mov
clc
dec
test
mov
add
mov
inc
clc
loopne
push
add
sbb
fs
mov
push
mov
add
mov
or
push
add
divl
xchg
mov
add
inc
clc
lods
mov
clc
xchg
and
add
pop
cmpsl
clc
pop
clc
negb
movsl
clc
mov
sub
add
add
cmp
lahf
test
fs
pop
mov
add
mov
clc
push
dec
xchg
jmp
add
add
add
add
es
push
clc
outsb
or
clc
adc
add
add
xchg
mov
add
js
fcmovne
cmp
add
xchg
jmp
jne
dec
mov
clc
fcomip
cwtl
sbb
movsb
clc
or
add
dec
repz
cmpsb
clc
notl
add
add
add
mov
clc
mov
cmp
cmp
xor
add
sahf
dec
lods
repz
out
outsl
aaa
in
cmp
jbe
imul
cmp
inc
add
xlat
incb
add
add
add
or
xchg
fdivl
add
mov
clc
or
adc
je
ret
outsb
scas
sbb
push
repz
clc
dec
mov
int
xchg
leave
jae
add
mov
mov
mov
stos
pop
push
clc
lods
cmp
imul
cmp
imul
add
clc
push
add
xor
add
call
in
jge
push
add
pop
je
add
sbb
sarl
cmpsb
clc
rorl
jmp
sub
out
mov
cmp
add
push
cmpsb
clc
jmp
add
mov
data16
fadds
loop
call
add
shl
cltd
sbb
xor
xchg
xor
add
test
and
mov
push
hlt
cmp
jg
dec
mov
adc
add
aaa
daa
clc
inc
add
rclb
jmp
clc
out
pop
add
add
xchg
movsl
clc
adc
add
test
jge
inc
add
std
fadds
add
add
ja
and
add
and
add
add
test
out
cmp
clc
clc
ret
clc
fiaddl
add
test
stos
in
mov
clc
popa
add
or
inc
add
mov
clc
pushf
add
add
clc
clc
mov
dec
insb
pop
push
add
add
mov
clc
xor
sub
xor
pop
push
xchg
and
clc
add
jp
add
pop
cwtl
cld
xor
add
clc
mov
xor
add
xor
add
clc
repz
add
clc
add
add
sbb
jg
mov
push
popa
add
sub
pop
out
adc
fwait
pop
adc
add
push
add
gs
xchg
jae
add
and
enter
adc
add
pop
fcmovnu
sar
outsl
xlat
fcmovnb
clc
arpl
add
and
call
enter
adc
add
pop
ja
clc
xchg
cmp
dec
fistpl
aas
inc
add
clc
mulb
push
add
test
and
add
add
pop
dec
or
imul
jge
loope
lcall
add
test
pop
adc
add
add
add
test
inc
clc
jae
add
xor
add
movsb
clc
pushl
cmp
ret
add
incb
pop
gs
add
add
add
add
fimull
push
pop
mov
clc
out
adc
add
or
ficomps
adc
add
jmp
mov
pop
cmp
dec
cli
cmp
rol
clc
or
clc
cmp
pop
popf
lock
dec
out
xor
add
add
aaa
add
add
xor
add
clc
jmp
addr16
fisttpl
xchg
jnp
lock
xbegin
lcall
sub
add
add
clc
cmp
mov
mov
pop
or
xchg
mov
clc
xchg
hlt
adc
add
clc
pop
xchg
and
call
jnp
or
sbb
inc
clc
inc
add
stos
push
adc
add
add
add
or
sub
loopne
clc
sub
mov
add
sbb
jecxz
xchg
stc
add
add
daa
clc
sar
mov
movsb
clc
cmp
push
out
scas
lahf
ja
jmp
pop
clc
pop
dec
xor
add
add
sbb
enter
dec
dec
xor
add
xbegin
cmp
outsb
inc
clc
cmp
cmpsb
clc
cmp
push
adc
inc
add
rorl
add
jbe
mov
popa
add
loopne
or
clc
cmpsb
clc
lret
add
loope
mov
pop
cmovp
rcll
loopne
int
and
add
mov
clc
repnz
add
mov
mov
add
fcomps
push
add
test
sub
push
add
arpl
add
clc
ja
aaa
jg
jnp
loope
sar
clc
addr16
shl
movsl
clc
fisttps
add
xchg
clc
ljmp
mov
add
add
ret
clc
push
sub
clc
test
mov
sub
rdseed
adc
add
fs
lock
add
add
add
add
pop
clc
test
out
push
mov
lods
lcall
clc
xchg
outsb
xchg
sub
clc
popf
pop
call
add
ds
sub
pop
push
clc
mov
bound
add
mov
stos
aad
xchg
dec
int3
ret
clc
lods
or
mov
add
rorb
addr16
cmp
add
pop
pop
lahf
xor
add
imul
add
sti
cs
out
lcall
add
iret
adc
cmpsl
clc
cltd
sbb
xchg
adc
add
adc
mov
sarb
add
add
clc
push
stos
jnp
pushf
or
add
in
push
clc
repnz
clc
in
cltd
jl
clc
or
sti
xchg
scas
sub
stc
cs
pop
in
and
es
iret
sar
clc
test
cmp
daa
clc
fucomi
out
xor
add
icebp
ret
scas
pop
int3
scas
cmp
popa
add
lea
push
clc
pop
dec
pusha
add
push
pop
mov
je
clc
rcr
out
add
add
cmp
out
push
xor
add
clc
cwtl
adc
add
mov
loop
out
clc
bound
add
shrl
pop
iret
movsl
clc
push
clc
or
in
movsb
clc
and
add
clc
test
inc
clc
cmp
rcl
lret
mov
inc
clc
jmp
clc
imul
add
arpl
add
cltd
lahf
lods
in
dec
mov
std
xor
add
mov
clc
mov
clc
inc
add
adc
add
sub
add
test
ret
add
into
cmp
clc
loopne
in
mov
clc
movsl
clc
jnp
clc
dec
mov
mov
cmp
stos
sar
mov
scas
cmp
mov
clc
sar
test
mov
inc
clc
popa
add
loop
mov
fbld
xabort
push
cmpsb
clc
kmovw
das
inc
add
arpl
add
ds
scas
mov
add
add
dec
mov
mov
clc
mov
jge
cmp
sub
clc
pop
sti
push
cmp
and
add
and
jg
fisubrs
add
dec
cmc
push
add
xchg
jbe
jb
add
lahf
je
jmp
lret
jne
add
insb
pop
sub
lret
add
into
pop
lock
add
pusha
add
fwait
out
pusha
add
mov
mov
cmpsl
clc
add
add
dec
leave
jns
sbb
cmp
push
cmp
jno
add
fs
out
adc
shll
add
add
cli
or
sub
inc
clc
lcall
add
out
jns
clc
pop
je
bound
add
mov
sub
add
add
lahf
in
icebp
or
mov
pushf
mov
clc
divb
add
and
sub
add
xchg
cltd
leave
adc
mov
add
sub
push
out
inc
clc
daa
clc
test
push
data16
into
sub
into
jne
add
fistps
add
xor
iret
imull
xor
add
or
in
mov
and
mov
clc
fimull
mov
cmp
add
mov
cli
or
clc
mov
add
stos
jno
add
or
enter
add
cmc
fdivr
xlat
sub
clc
pop
push
stc
push
push
jne
pop
lea
addr16
inc
add
fldenv
clc
mov
clc
mov
add
mov
lock
int
sbb
rcl
sar
add
lahf
imul
jnp
clc
fstps
add
icebp
jnp
shl
adc
add
clc
sub
adc
add
add
dec
push
add
imul
sub
mov
ret
adc
add
into
sahf
sbb
clc
hlt
fistpl
add
lods
mov
clc
jle
clc
jo
add
add
jmp
mov
fistpll
fdivs
clc
in
add
add
clc
pushf
inc
clc
scas
inc
add
sub
jae
add
mov
loopne
jmp
pop
cmp
jg
pop
push
ss
pop
clc
nop
mov
mov
add
mov
sub
xchg
in
push
add
call
lret
cmp
fs
icebp
jnp
xor
add
clc
sbb
jle
clc
gs
lods
in
mov
and
pop
mov
popf
sbb
ljmp
scas
inc
clc
scas
dec
push
test
sar
add
dec
leave
mov
jb
add
and
cli
aad
clc
add
sbb
clc
or
fldcw
sbb
int3
int
jbe
clc
loop
add
add
imul
cs
add
cmp
xor
add
add
sbb
xchg
addr16
adc
dec
mov
or
dec
clc
cmp
add
dec
in
jb
add
xchg
pop
popf
and
add
pushf
pop
xor
add
clc
inc
add
inc
add
push
add
xlat
dec
nop
push
inc
add
cld
adc
add
push
pushf
lret
mov
xor
add
push
add
inc
clc
cmpsb
clc
out
push
imul
clc
ret
int3
mov
dec
in
fnstenv
clc
enter
hlt
test
pop
jae
add
clc
jp
xchg
stos
or
clc
xor
add
imul
clc
pusha
add
iret
push
and
sbb
out
ja
xlat
mov
cmp
cmp
sub
cmp
shlb
add
clc
test
and
add
je
jg
dec
xor
add
and
add
clc
pop
clc
xor
add
dec
mov
imull
inc
add
xchg
cmp
xchg
dec
jns
clc
cmp
mov
call
movsb
clc
hlt
mov
add
dec
mov
jnp
adc
fldl
cmp
clc
clc
cmp
lret
sub
clc
popf
add
add
clc
roll
xor
push
mov
clc
scas
mov
out
lret
clc
mov
add
xor
lods
inc
add
mov
push
xchg
mov
add
ja
clc
pushf
lea
jbe
add
nop
lret
pop
cli
cmp
clc
iret
sbb
push
add
fadds
add
stc
jb
add
adc
jbe
jae
add
sbb
jo
add
pushf
xchg
cmp
add
inc
add
shl
clc
sahf
cmp
add
add
cld
pop
push
xchg
vsqrtps
add
add
add
xchg
mov
adc
dec
add
add
jmp
ds
inc
clc
int
adc
add
inc
add
sbb
jae
add
add
xchg
fnstenv
add
aad
dec
loopne
sub
cltd
ljmp
sub
add
push
add
ljmp
push
add
std
sti
or
add
mov
fnstenv
add
clc
ss
testb
mov
cmp
add
ss
clc
lock
add
inc
clc
into
dec
das
dec
xchg
add
and
add
add
mov
add
clc
loope
push
lods
loope
mov
pop
clc
mov
clc
mov
xabort
fwait
xchg
fbld
clc
clc
cmp
clc
adc
add
add
add
add
or
xabort
pop
imul
and
lret
loope
mov
add
sbb
jge
sbb
ljmp
clc
lahf
jb
add
add
clc
cmc
and
jbe
add
add
fdiv
cld
imul
scas
popa
add
fdivrs
inc
clc
xchg
jp
adc
add
out
pop
mov
xor
add
pop
out
push
clc
lea
xchg
cli
and
clc
push
add
add
add
add
jle
lahf
adc
add
cltd
lret
add
daa
clc
shl
sub
clc
inc
add
fiaddl
add
add
test
or
scas
loope
data16
xor
add
and
add
daa
clc
cwtl
jbe
clc
add
add
cmp
lret
clc
sar
clc
outsb
out
and
add
clc
and
lcall
ljmp
cmp
into
adc
add
dec
sbb
cld
xor
add
ja
clc
stc
xchg
cli
loopne
dec
movsb
clc
mov
clc
lea
mov
js
add
and
add
mov
or
or
add
push
sti
fistpl
pop
jne
dec
add
add
into
add
add
test
dec
xchg
pop
clc
fdivrs
add
test
es
add
add
jbe
xor
add
mov
mov
add
hlt
sar
and
mov
std
push
pop
enter
push
jns
in
out
pextrw
js
clc
add
add
clc
daa
clc
inc
clc
jecxz
mov
pop
cmp
cmp
clc
repnz
mov
dec
or
fstp
pop
int3
push
out
aaa
loope
repz
add
inc
add
jne
jno
add
or
sub
sbb
clc
jmp
insb
sar
clc
aad
lret
add
clc
sub
inc
clc
mov
mov
sub
jmp
hlt
data16
add
ret
push
div
fdivp
mov
clc
outsl
pushf
in
dec
inc
add
out
ret
clc
test
lods
or
add
adc
add
ds
cmpsb
clc
cld
sub
outsl
xlat
sub
xor
add
sbb
sub
add
in
test
addr16
dec
add
add
add
sti
pusha
add
and
movsl
clc
pop
mov
fsubrl
adc
add
std
movsl
clc
cmp
jnp
or
add
test
cmpsl
clc
add
add
add
cmp
add
cmp
clc
jno
add
std
xor
add
ss
int3
cmp
icebp
or
clc
sar
imul
clc
sti
in
sbb
in
sub
jns
clc
pusha
add
pop
xlat
pop
mov
pop
jp
cmp
ljmp
cmc
ds
xor
add
inc
clc
jb
add
insl
fmul
add
add
pop
push
add
je
and
add
mov
clc
cmc
sub
stos
mov
sub
cmp
outsl
push
add
imul
add
cmpsl
clc
push
jno
add
stc
ss
add
add
add
cmpsl
clc
negb
xchg
sar
pusha
add
or
xor
fwait
sar
clc
mov
lods
aam
clc
loop
cmpsl
clc
mov
es
in
push
lock
add
rclb
clc
and
add
ja
add
add
mov
pop
jno
add
roll
add
add
push
hlt
scas
push
loope
mov
jmp
clc
jno
add
stos
sbb
clc
outsb
lods
bound
add
es
xchg
fstl
sti
or
add
fsubp
clc
lods
push
add
pop
fs
push
cmp
out
push
lods
adc
add
add
add
nop
xchg
mov
lods
cmpsl
clc
addr16
push
clc
scas
fisttpl
add
rorl
push
add
cmp
into
or
add
lea
push
add
inc
clc
insl
test
dec
push
std
and
add
and
add
jmp
add
sar
clc
std
xchg
popf
fsubl
add
nop
in
sbb
xor
add
add
fcoml
sub
add
add
xor
add
clc
and
add
mov
jge
out
xor
clc
cmpsl
clc
aaa
repnz
pusha
add
pop
dec
ret
adc
add
push
mov
jp
clc
nop
popf
fnstenv
add
push
imul
xchg
mov
add
push
cltd
pop
sbb
int3
add
pop
seto
or
aad
sbb
in
sub
xchg
cmp
clc
jp
clc
xchg
xlat
xchg
lret
cwtl
aam
pop
mov
icebp
or
daa
clc
gs
imul
add
idivl
add
clc
fcompl
pushf
js
add
and
add
clc
fldl
add
add
clc
ret
clc
inc
add
jl
clc
out
adc
add
clc
add
jp
out
adc
iret
shrl
xor
add
add
push
clc
scas
add
add
add
clc
mov
clc
mov
aas
xor
pushf
mov
hlt
adc
add
clc
and
fs
pop
in
aas
scas
jae
add
clc
push
in
and
add
or
jg
inc
add
xchg
movsb
clc
shll
clc
lods
cmpsb
clc
cmpsb
clc
setb
clc
xchg
insl
push
leave
mov
shll
add
or
clc
scas
ret
clc
in
xchg
int3
xor
add
and
add
add
aad
clc
lods
cmc
out
jecxz,pn
cli
test
clc
mov
addr16
test
pop
leave
cmpsl
clc
mov
push
add
clc
lret
add
ret
data16
xor
add
sbb
xbegin
sub
xchg
jbe
clc
push
mov
push
add
push
add
ss
push
add
mov
sar
inc
clc
mov
clc
arpl
add
out
xor
add
clc
dec
enter
mov
clc
pop
lret
cs
xor
add
daa
clc
insl
push
dec
or
aaa
cmp
lcall
sbb
clc
stos
jle
cmp
clc
push
jbe
shrd
add
dec
imul
loope
lret
add
sbb
pop
sbb
cmp
add
mov
add
pop
sbb
add
add
stos
lahf
or
fnsave
add
testl
and
popa
add
push
stos
int
data16
and
add
int
add
cmp
add
or
cltd
add
add
sub
mov
clc
ljmp
add
mov
mov
add
lret
enter
incb
add
imul
clc
test
jae
add
lods
test
push
add
lret
mov
add
add
add
add
loope
jl
push
test
xlat
arpl
add
sti
loop
stc
scas
adc
add
ss
shl
clc
sub
jo
add
clc
jns
xchg
bound
add
xor
leave
dec
push
js
xbegin
add
add
fs
sbb
and
mov
add
dec
xchg
aad
add
mov
jae
add
test
int3
jmp
loope
sbb
clc
or
mov
clc
cmp
imul
mov
sbb
adc
clc
cmp
add
sar
jle
sahf
lcall
popf
jns
push
mov
add
std
into
and
add
add
imul
xor
jmp
mov
stos
push
add
lock
test
js
mov
clc
xchg
xor
add
scas
xchg
mov
jge
add
or
mov
loope
inc
clc
mov
push
clc
test
jle
clc
lea
add
repz
and
add
sbb
fisttpl
mov
jb
add
out
das
or
fistl
add
add
or
cmp
clc
or
add
jl
clc
pop
xchg
cmc
mov
adc
add
insb
jno
add
add
ljmp
add
xor
add
mov
push
add
aas
jmp
mov
cld
addr16
std
mov
clc
mov
mov
sbb
clc
adc
add
clc
jns
or
add
nop
mov
pop
sbb
scas
sahf
xchg
pop
push
in
scas
add
add
ja
fsubrl
test
in
xchg
push
add
lods
push
clc
clc
fstpl
clc
mov
xor
add
add
in
ret
imul
add
scas
fs
or
ja
test
jnp
arpl
add
inc
add
or
pushf
add
add
add
pop
adc
loop
jmp
jmp
xchg
cmp
pop
push
xchg
push
sar
clc
sarb
add
mov
ds
lret
iret
shld
sbb
bound
add
sbb
insb
xbegin
clc
or
jbe
xchg
dec
and
add
iret
jns
clc
cmp
scas
int
and
add
add
inc
add
cli
and
add
sbb
clc
lea
add
adc
add
ror
jb
add
lea
inc
add
cmp
add
cmpsl
clc
das
xchg
std
pop
pop
clc
push
inc
add
es
clc
push
movsl
clc
stc
or
loop
xabort
bswap
xchg
scas
int3
mov
pop
inc
add
mov
mov
sub
add
mov
stc
pop
pop
aam
xchg
xchg
sbb
in
mov
lods
mov
mov
mov
jg
lock
add
fsts
add
inc
add
xor
add
adc
add
clc
data16
js
test
clc
inc
clc
wrmsr
add
mov
add
test
xchg
push
add
movsb
clc
add
add
outsb
out
xbegin
pop
test
dec
js
add
pop
dec
test
stc
rep
inc
clc
push
pop
popf
in
mov
xchg
and
add
clc
pop
clc
in
push
in
or
lea
add
pop
clc
lcall
scas
pop
fnsave
xor
add
sti
ret
clc
pop
jmp
add
push
add
push
arpl
add
pop
xchg
clc
aaa
pop
clc
add
je
cmp
out
pop
xor
add
iret
aaa
aad
sar
cmpsb
clc
sub
add
sbb
pop
cmp
imul
clc
xor
add
add
add
sahf
xchg
sbb
pushf
add
add
pop
lods
sbb
clc
sar
sti
sub
imul
and
stos
cmp
clc
mov
imull
inc
add
inc
add
pop
jae
add
inc
clc
imul
out
iret
xchg
sbb
inc
add
jb
add
clc
add
rcl
mov
add
pop
mov
adc
add
dec
cmp
enter
add
xchg
in
fstl
jno
add
fs
lahf
fiaddl
add
movsl
clc
cmp
loope
jb
add
add
or
add
clc
outsl
lock
clc
fstps
outsb
cmp
or
pusha
add
dec
or
mov
clc
sbb
cmp
lcall
add
add
cmp
add
sbb
mov
aaa
cs
jbe
clc
add
mov
leave
insb
mov
inc
add
cmp
je
add
mov
clc
call
clc
add
add
mov
push
ret
clc
pop
or
clc
je
add
ffreep
clc
mov
lcall
add
and
add
cld
pusha
add
das
movsl
clc
fxch
mov
xor
add
clc
add
add
add
add
add
jnp
add
jns
int
clc
mov
clc
jno
add
fcompl
clc
inc
add
pop
sbb
clc
jp
xor
add
dec
cmp
cmp
add
sti
and
add
mov
scas
xchg
fucomi
std
inc
clc
idivb
push
gs
dec
mov
es
out
dec
jmp
clc
bound
add
enter
mov
add
add
add
jl
pop
add
jle
jmp
je
sbb
add
je
jge
add
es
mov
pop
clc
mov
insb
xchg
mov
clc
push
clc
out
cmp
sbb
test
icebp
ljmp
pushf
cld
and
add
clc
testb
divl
add
add
xchg
shrl
inc
clc
lcall
or
add
add
mov
inc
clc
adc
add
clc
xor
lret
jb
add
add
fcompl
mov
cmpsb
clc
nop
xchg
test
inc
clc
adc
add
clc
xor
add
loop,pt
rcrb
add
sbb
clc
test
adc
or
add
jecxz
cmp
add
jo
add
sbb
jnp
ljmp
add
inc
clc
inc
clc
jg
cmp
add
add
clc
xchg
mov
popa
add
and
xchg
int3
in
in
cmp
enter
add
hlt
stc
test
fistpl
shlb
lret
push
add
jns
add
pop
push
clc
cmp
js
add
ja
cwtl
xchg
arpl
add
jb
add
inc
clc
cmpsl
clc
xchg
jecxz
in
and
add
mov
push
std
jmp
aaa
sub
sub
clc
add
add
sub
cmp
shl
insb
mov
stos
inc
add
ja
dec
sti
pop
adc
dec
daa
clc
push
clc
popf
cwtl
sub
in
cmp
xlat
iret
dec
ljmp
cmp
outsb
nop
shr
insb
arpl
add
dec
jmp
jmp
clc
clc
push
mov
pop
fwait
cmc
pop
or
add
sbb
mov
lea
loope
inc
add
fistps
add
pop
mov
add
loopne
dec
and
add
push
pop
rcrb
fmuls
cmp
mov
in
fcmovbe
jg
test
clc
out
lcall
xbegin
outsb
xbegin
into
imul
cltd
cmp
loopne
loope
stos
cld
dec
cmp
mov
mov
std
mov
clc
dec
in
adc
add
sbb
pop
cltd
mov
or
cs
mov
push
dec
lahf
sbb
add
aad
add
add
xor
add
clc
inc
clc
push
add
add
sub
cmpsl
clc
push
add
lahf
mov
add
cld
sarb
sbb
decb
inc
clc
dec
xor
add
add
clc
jo
add
out
movsb
clc
xbegin
testl
add
clc
in
mov
jbe
clc
cmp
add
cmpsb
clc
inc
clc
add
add
mov
mov
int3
andnps
mov
add
loope
push
push
clc
hlt
dec
outsl
or
push
clc
dec
test
push
xchg
pop
clc
pop
ja
rorb
clc
jge
clc
mov
clc
dec
test
and
mov
inc
clc
lods
sub
clc
out
adc
call
mov
outsl
mov
add
jno
add
jmp
clc
mov
sbb
add
mov
aas
ficomps
jmp
vmovaps
js
mov
clc
pop
xchg
sub
jne
stos
inc
clc
ror
fistl
pushl
add
add
hlt
in
cmp
clc
cmp
ljmp
dec
aaa
sahf
gs
inc
add
cmp
js
sub
add
add
stc
xchg
into
dec
outsl
test
cmp
adc
clc
ss
and
add
int3
enter
clc
ljmp
mov
add
add
or
pop
incl
add
int
pop
bound
add
mov
xlat
dec
inc
add
jno
add
dec
mov
add
mov
add
inc
add
jecxz
sbb
clc
movsb
clc
add
add
add
clc
cmp
adc
jle
sub
fsubl
stc
dec
in
insb
or
clc
or
add
mov
gs
add
add
outsb
cwtl
mov
in
add
add
sbb
xchg
pushf
out
into
aam
mov
sub
add
add
mov
clc
in
sarb
xchg
nop
in
fs
xchg
pop
pop
ret
clc
adc
jmp
sbb
xchg
pop
ficompl
ffreep
clc
jns
clc
cmp
adc
add
ret
mov
iret
call
cmp
mov
xchg
call
es
push
xlat
mov
leave
jae
add
mov
clc
sbb
aam
pop
vdivps
js
sbb
clc
inc
clc
arpl
add
movsb
clc
jne
daa
clc
cli
imul
add
jge
clc
lods
inc
add
and
add
xor
dec
leave
loop
fisubrs
mov
dec
mov
add
add
clc
xor
mov
add
clc
pop
pop
adc
add
pop
dec
adc
add
scas
xor
jae
add
adc
test
or
sbb
outsl
cmp
rcrl
iret
mov
aaa
cmpsl
clc
xbegin
or
add
clc
aam
cld
iret
stos
test
clc
pop
push
test
adc
clc
outsb
pop
and
add
lcall
add
push
cli
dec
jns
clc
sbb
sub
xchg
jno
add
clc
cmc
loopne
testl
jle
mov
dec
int
mov
clc
inc
clc
mov
je
add
mov
mov
jno
add
out
sub
dec
fisubrs
add
fcomp
es
fistpl
idivl
and
add
dec
cli
adc
add
or
jb
add
clc
push
add
xor
add
cmpsb
clc
out
gs
and
add
clc
jg
pop
mov
add
in
loopne
aaa
pop
out
xlat
cmc
mov
cmp
xor
fucomip
or
clc
ljmp
ret
clc
sub
clc
mov
mov
add
adc
repnz
clc
bound
add
fbld
je
out
inc
add
push
test
or
add
popa
add
and
cmp
sbb
clc
jmp
clc
lret
loop
dec
flds
add
popf
mov
ss
icebp
mov
add
add
add
dec
dec
pop
jae
add
clc
mov
add
add
add
gs
fdiv
jne
jmp
add
in
sar
add
add
clc
mov
clc
enter
int
loop
in
out
pop
hlt
enter
clc
xabort
clc
lahf
lret
add
xchg
mov
clc
outsl
inc
add
mov
aad
mov
xchg
shlb
add
adc
add
and
add
push
sar
clc
mov
pop
dec
imul
jb
add
add
aam
xlat
cmp
clc
filds
clc
cld
testb
pusha
add
mov
jnp
xchg
call
add
add
add
xchg
aas
repz
clc
in
jmp
clc
cmp
xlat
fs
add
add
add
add
adc
popa
add
mov
addr16
jmp
dec
push
add
xabort
and
shl
clc
or
in
cltd
mov
arpl
add
mov
cmc
xchg
xchg
sbb
clc
cmp
sub
add
bound
add
push
add
sub
cmovnp
add
mov
cli
lcall
push
add
push
lods
cs
adc
add
clc
ja
clc
xchg
mov
imul
add
cwtl
adc
clc
sub
sahf
jno
add
int
and
mov
or
mov
push
fwait
outsl
push
push
inc
add
or
jo
add
dec
fidivrl
out
xor
add
and
pop
repnz
push
add
in
gs
loop
xor
mov
add
mov
out
dec
ret
clc
clc
hlt
and
sar
sub
clc
mov
add
shll
bound
add
add
mov
scas
aad
add
popa
add
xbegin
add
xor
add
mov
cmpsl
clc
nop
fistpl
addr16
insl
lret
ret
push
and
xchg
sub
inc
add
mov
and
add
xchg
rcr
inc
add
add
cmp
add
fwait
repz
xor
add
or
imul
inc
add
mov
ret
clc
fisubl
add
shll
cmp
add
clc
test
dec
enter
add
adc
pusha
add
add
add
pop
jne
dec
xbegin
out
inc
add
in
cli
jbe
lret
pop
loope
and
aas
sub
loopne
stc
das
stc
pop
mov
xabort
add
and
add
xor
add
mov
mov
gs
and
add
clc
add
add
add
add
add
clc
clc
icebp
xchg
cmp
clc
sub
add
arpl
add
and
add
adc
add
clc
ljmp
loope
aas
jp
add
mov
xchg
push
jl
aad
fadds
clc
dec
out
test
test
mov
add
clc
cld
jle
out
dec
ret
clc
add
add
fcompl
sub
clc
jnp
repz
clc
mov
jecxz
out
adc
add
add
jecxz
insl
mov
clc
mov
cmp
cli
ret
xchg
pop
adc
add
add
add
in
mov
clc
fiadds
add
and
int
add
push
cltd
icebp
clc
data16
jo
add
jne
inc
add
mov
clc
sub
inc
clc
dec
pusha
add
fstpl
xchg
pop
clc
adc
add
sub
push
js
xor
add
out
lret
mov
add
sub
add
pop
push
mov
add
push
cmp
cmp
fdivs
add
jecxz
cwtl
fistps
mov
divl
add
inc
add
movsb
clc
pop
jg
pop
and
add
xchg
pop
mov
into
xchg
jae
add
clc
lcall
fiadds
add
std
mov
lret
jbe
adc
add
add
sbb
repz
inc
clc
mov
iret
test
cmp
fmuls
push
daa
clc
mov
and
cmp
shr
popa
add
js
add
jo
add
push
or
mov
clc
jbe
and
cmp
stc
mov
add
imul
clc
repnz
dec
push
repnz
push
lcall
add
xchg
or
and
add
stc
movsl
clc
push
stc
jno
add
add
lret
add
mov
clc
push
add
push
pusha
add
clc
clc
clc
out
adc
add
add
lcall
cmp
clc
xor
add
lahf
push
xchg
and
add
clc
in
xchg
pop
test
xor
or
sub
clc
stos
clc
out
sar
pushf
sbb
or
mov
mov
add
icebp
fbld
cmp
clc
cmp
mov
imul
mov
movsl
clc
lret
out
or
outsb
dec
sub
clc
jl
mov
iret
cmp
xchg
mov
jbe
add
jnp
clc
jns
gs
das
dec
fs
xchg
cmp
lret
cli
xchg
sar
clc
sub
into
and
jo
add
add
sbb
add
push
add
gs
dec
mov
cmp
arpl
add
cmp
pop
data16
rol
clc
cmp
cmp
int
mov
clc
mov
setb
rclb
add
add
adc
add
cmp
fcmovnb
clc
jge
aad
gs
flds
clc
xchg
pop
loopne
cmp
mov
sbb
or
clc
cmp
adc
cmp
cmp
push
stos
lods
mov
mov
in
scas
fs
xor
dec
sar
in
add
add
cmp
mov
adc
xchg
call
scas
popf
sub
testl
add
mov
popa
add
sbb
lcall
fistps
clc
add
add
add
sub
clc
clc
scas
mov
xchg
mov
mov
sti
jp
clc
sbb
clc
clc
scas
jge
jge
push
insl
lock
nop
jecxz
xchg
mov
mov
add
pop
mov
clc
iret
in
std
mov
test
add
pop
mov
inc
add
imul
push
xlat
jne
add
movsb
clc
xchg
stos
ss
clc
pop
xor
add
add
dec
dec
fcomps
add
ss
mov
or
cmp
pusha
add
cwtl
int
clc
pop
push
inc
clc
jns
leave
in
cmpsb
clc
sbb
daa
clc
jb
add
in
cmpsl
clc
xlat
repnz
add
mov
add
test
rcll
add
lret
mov
mov
add
mov
bound
add
clc
lock
sbb
clc
pop
loop
mov
lahf
jno
add
clc
xor
mov
mov
test
xchg
xor
add
fiadds
clc
pusha
add
push
pop
cmc
sub
jnp
clc
arpl
add
add
inc
clc
shl
or
arpl
add
add
nop
and
add
clc
jnp
and
add
add
rcll
add
cmp
xlat
stos
aaa
push
and
add
push
add
out
test
sar
clc
sahf
movsb
clc
cmp
loop
push
fisubrs
xabort
imul
in
into
aad
scas
pop
inc
clc
ret
lahf
imul
clc
or
add
loopne
cmp
xchg
ds
pop
and
add
lods
cwtl
xchg
sarb
add
add
mov
test
or
clc
mov
xlat
jae
add
leave
popa
add
xor
add
clc
dec
mov
js
jne
std
lods
dec
add
and
and
add
clc
aaa
or
xchg
pop
cmp
ret
sbb
xor
add
imul
jb
add
jl
sar
clc
sahf
pop
adc
add
aaa
jno
add
out
arpl
add
sub
and
or
enter
aas
inc
clc
ret
addr16
sbb
or
clc
ficomps
mov
mov
clc
hlt
adc
add
clc
shrl
enter
fnstenv
cmp
and
add
clc
or
push
mov
loope
add
pop
xor
lods
movsb
clc
sbb
cmp
leave
std
adc
add
add
cltd
mov
lods
adc
add
xor
add
xor
stos
xor
add
clc
int
out
sub
add
dec
add
add
dec
daa
clc
out
dec
jg,pn
inc
clc
popf
jnp
add
dec
xchg
inc
clc
add
add
clc
adc
add
fisttps
test
adc
push
add
xchg
sub
xchg
dec
mov
clc
int3
push
dec
jecxz
cli
xchg
clc
dec
fbld
out
jbe
clc
mov
xor
clc
sti
push
inc
add
mov
sbb
int3
stc
pop
pop
inc
clc
gs
and
add
add
lods
enter
xor
add
cmp
clc
mov
mov
cmpsl
clc
push
push
add
test
pop
cmp
clc
push
ja
jo
add
clc
push
add
rcrb
add
xor
add
test
add
dec
pop
cltd
push
add
dec
push
add
lcall
in
rclb
gs
inc
add
jmp
clc
push
pusha
add
push
add
jl
fidivs
adc
add
seto
mov
adc
add
cmp
jmp
adc
clc
notb
fs
jne
clc
cmp
xchg
jg
clc
scas
cmp
cltd
jmp
add
add
add
mov
sbb
stos
repnz
mov
xlat
clc
push
add
add
or
outsl
icebp
xor
push
inc
add
hlt
fbld
add
add
mov
push
sbb
clc
and
test
add
or
clc
inc
add
xor
add
clc
push
add
push
jmp
fisttpl
in
fidivl
popf
xchg
movsl
clc
enter
clc
xchg
and
add
add
mov
cmp
xor
add
test
jmp
add
lods
inc
add
dec
cltd
jb
add
nop
mov
cmp
sub
sub
int
inc
add
dec
rcr
push
cmp
jp
pop
mov
push
add
dec
mov
ss
add
nop
jle
jno
add
sub
fmull
adc
add
clc
cmp
clc
sub
sub
sub
in
incb
add
mov
clc
aam
pop
loopne
xchg
outsl
add
add
add
add
dec
cwtl
test
add
add
clc
sbb
lods
cmp
shl
clc
sti
mov
loope
add
add
xlat
stos
mov
mov
shll
lea
add
data16
pop
mov
jnp
aad
or
movsl
clc
scas
aas
aaa
cltd
fisubrs
add
add
xchg
sub
xor
add
fwait
push
add
adc
add
add
pop
rclb
mov
xor
scas
push
es
or
loop
xor
add
lods
popf
add
add
lcall
add
shl
clc
loop
pop
outsl
shr
leave
push
mov
mov
push
roll
in
or
add
add
pop
addr16
or
inc
clc
je
out
xchg
mov
pop
sbb
add
adc
add
cwtl
lock
xlat
clc
es
lahf
mov
mov
jl
fcmovbe
dec
aam
inc
add
repz
add
roll
insl
pop
jnp
push
add
fldcw
fimull
clc
jbe
jnp
inc
add
sar
mov
loopne
adc
add
clc
lret
aam
daa
clc
cltd
ror
push
xor
add
jns
out
and
or
movsl
clc
bound
add
and
adc
add
fwait
xchg
push
jp
sar
lret
mov
mov
cltd
sub
add
int3
inc
clc
in
notb
push
add
icebp
fs
lahf
inc
clc
mov
add
jle
clc
enter
outsl
lods
stos
pop
clc
jmp
add
and
add
cmp
push
sub
add
pop
sub
add
or
sbb
add
stc
xchg
pop
loope
into
insl
push
add
add
jbe
cmp
clc
dec
or
addr16
iret
test
add
and
add
cmp
addr16
ss
inc
clc
in
jmp
add
mov
clc
xor
cmp
clc
pop
es
aas
xlat
sbb
fnsave
mov
loopne
imul
lods
test
inc
add
add
add
add
rcrb
pop
push
add
jne
clc
mov
mov
sti
or
inc
add
push
add
jmp
pop
loopne
sbb
sar
add
cmp
mov
inc
clc
jge
cmp
lods
jns
cmpsl
clc
sbb
xlat
fidivl
add
mov
mov
push
out
xbegin
clc
imul
cltd
mov
clc
pushl
clc
iret
sar
add
jmp
add
add
test
jl
fisubrs
das
ljmp
clc
mov
add
and
cmp
clc
pop
fdivrl
add
add
fdiv
mov
add
ss
and
add
add
dec
adc
add
das
cmovb
add
add
fwait
mov
xbegin
clc
fs
dec
mov
xor
add
xor
add
add
clc
jbe
add
adc
add
mov
add
add
jnp
lock
clc
mov
clc
imull
mov
data16
test
and
add
mov
add
xor
cmp
adc
outsb
xor
clc
sahf
aaa
js
clc
ret
clc
mov
jae
add
mov
test
adc
clc
dec
repnz
mov
movsb
clc
movsb
clc
jnp
add
add
clc
js
and
add
add
repz
jne
or
add
repz
mov
push
cmp
clc
mov
add
das
and
add
dec
or
add
movsl
clc
popa
add
clc
cmp
aaa
ds
xlat
loopne
or
add
outsb
push
add
add
loopne
mov
add
dec
aas
daa
clc
push
test
test
xabort
add
rep
clc
test
cli
addr16
fxtract
mov
xor
add
clc
mov
loope
xchg
cmp
aaa
or
clc
cmp
add
xchg
pop
out
push
add
das
pusha
add
leave
pop
es
dec
sar
clc
fs
adc
add
clc
dec
pusha
add
inc
clc
movsb
clc
dec
lret
and
add
jg
sub
pusha
add
push
adc
add
adc
or
add
xor
add
clc
mov
clc
xchg
dec
xor
lcall
add
mov
cmc
iret
arpl
add
add
add
jg
or
aaa
sti
ret
clc
rclb
cmp
clc
gs
test
jmp
clc
add
add
nop
aam
loope
dec
out
lods
imul
sub
data16
inc
clc
xor
gs
gs
mov
and
add
ss
mov
sbb
imul
adc
add
clc
mul
clc
push
add
inc
add
sarb
mov
xchg
mov
mov
add
aaa
jecxz
pop
push
clc
icebp
lcall
rorl
pusha
add
shlb
cmp
out
fmuls
add
into
jnp
xor
add
mov
mov
cmp
cmp
jmp
inc
add
sar
aad
clc
clc
jecxz
mov
clc
sub
clc
mov
mov
js
clc
push
sar
add
popf
aas
or
inc
add
pusha
add
adc
add
add
clc
and
add
clc
icebp
dec
adc
clc
mov
dec
adc
std
inc
add
jg
ljmp
call
adc
add
add
fisttpl
inc
add
sub
add
sahf
xchg
dec
cmp
and
add
push
aad
bound
add
push
add
inc
clc
aam
add
faddp
clc
cmc
pop
mov
adc
add
add
call
xchg
cmp
add
bound
add
add
sub
cmpsb
clc
adc
add
clc
cmp
sub
aam
mov
vshufps
push
fld
clc
icebp
xor
add
clc
xor
add
or
mov
add
add
out
mov
add
add
jns,pt
je
mov
clc
in
inc
clc
sub
pop
push
mov
xlat
inc
clc
in
or
add
push
dec
or
jne
stos
jno
add
adc
add
js
nop
movsl
clc
aaa
test
pop
outsl
add
add
cmpsb
clc
dec
gs
jae
add
sbb
add
cli
into
ja
cs
jecxz
push
add
fidivl
iret
outsl
jo
add
out
lahf
add
add
jl
clc
hlt
call
add
pusha
add
sar
add
dec
in
inc
add
or
out
xbegin
dec
pusha
add
cmpsl
clc
mov
clc
or
mov
fmulp
inc
add
pop
adc
cmpsb
clc
ret
mov
insl
cmp
mov
push
clc
dec
int3
std
fdiv
movsb
clc
shll
add
clc
xor
add
pop
out
and
add
clc
es
jne
clc
sbb
notb
add
fstpt
in
fnstenv
push
add
sar
clc
das
sbb
cmp
stos
pushf
fstl
add
add
inc
clc
adc
add
addr16
leave
push
cmp
mov
mov
clc
in
mov
clc
inc
add
mov
mov
add
push
add
insl
cmp
add
add
test
popa
add
stos
adc
add
dec
and
add
add
clc
lods
ficomps
clc
adc
add
or
stos
mov
cwtl
faddp
clc
cmp
add
sub
and
add
shlb
add
adc
add
add
popa
add
test
test
clc
int
jnp
clc
shrl
jmp
decb
cmp
cs
pop
mov
sbb
clc
dec
insb
js
repz
stos
xor
add
je
clc
iret
sbb
in
adc
mov
clc
sbb
or
syscall
clc
or
clc
adc
add
adc
add
clc
cmp
clc
ficomps
pop
faddl
out
sarb
add
cmp
clc
cwtl
xchg
test
lret
dec
dec
mov
sar
movsl
clc
jns
clc
inc
clc
sbb
clc
imul
data16
sarb
add
add
mov
add
add
add
pop
add
add
add
mov
outsb
push
mov
cmpsb
clc
jae
add
cmp
add
and
add
cmp
add
hlt
test
jne
clc
pop
jnp
pcmpeqw
add
outsb
clc
jmp
sbb
add
int3
push
mov
shlb
add
inc
clc
fdivl
add
aam
popf
ljmp
clc
bound
add
stc
lahf
inc
add
or
cmp
add
push
add
mov
aaa
ficomps
leave
lods
mov
add
add
clc
je
push
fimuls
or
inc
add
xchg
test
clc
push
repnz
ljmp
ljmp
clc
scas
jmp
sti
inc
add
insl
insb
aad
clc
test
movsb
clc
mov
out
pop
addr16
ror
cmp
lea
add
bound
add
cmpsb
clc
pop
mov
add
cmp
popf
and
add
sbb
add
dec
sbb
cmp
bound
add
sbb
clc
enter
mov
fdivl
add
add
and
or
mov
cltd
into
push
clc
xchg
push
add
sahf
out
and
mov
cli
in
or
outsl
rclb
add
and
sbb
clc
fpatan
fldt
sub
aam
add
jo
add
dec
rcr
cmp
mov
xor
add
std
lea
add
out
cmp
sub
pop
fstpt
push
push
nop
icebp
mov
add
ljmp
test
lahf
scas
call
cmpsl
clc
mov
inc
add
jp
and
add
das
cmp
xchg
aam
mov
repz
leave
jbe
clc
data16
xchg
dec
push
mov
add
outsl
cmp
cs
clc
and
outsb
scas
out
pop
and
add
add
push
xchg
lock
out
loope
lret
and
add
add
mov
sbb
xchg
lea
add
clc
jmp
mov
insb
jno
add
adc
add
inc
add
adc
add
clc
push
add
add
add
clc
push
mov
jo
add
mov
cmp
clc
adc
add
add
pop
call
add
sbb
add
das
pop
sbb
add
or
push
jecxz
stc
ret
clc
cwtl
push
jmp
pop
xor
add
es
cmp
clc
cmp
or
xor
add
clc
imul
add
push
icebp
pop
loope
xor
add
clc
push
clc
pushf
lea
cli
imul
clc
out
inc
add
and
add
add
clc
fcmovnu
and
add
faddp
clc
loop
mov
clc
test
nop
mov
inc
add
in
outsb
push
add
mov
test
mov
shlb
add
push
movsb
clc
scas
cmp
outsl
cmp
add
add
add
add
clc
enter
and
add
push
sub
add
sub
add
push
xchg
mov
cmp
add
mov
out
aad
clc
testb
mov
mov
int3
clc
fwait
ds
clc
xchg
scas
mov
add
add
dec
clc
ds
inc
clc
js
clc
ja
hlt
lret
nop
sbb
sar
insl
cwtl
stos
out
or
or
add
clc
pop
push
dec
fildl
nop
inc
clc
shl
loop
cmp
sub
popf
imul
cmpsb
clc
lcall
mov
sub
out
ljmp
add
and
in
mov
dec
lcall
jp
add
ficoms
add
sub
add
add
jo
add
sbb
je
xchg
cmp
push
sahf
dec
ja
clc
sar
stos
es
js
clc
push
add
dec
push
cmp
clc
cwtl
cmpsl
clc
sub
add
xchg
pop
clc
imul
gs
pop
lods
adc
add
pop
sar
aad
clc
ficompl
ja
mov
add
mov
idivl
cmp
jmp
in
sar
inc
add
xor
add
clc
jp
adc
clc
imul
loop
std
lcall
cmp
clc
jmp
test
cmp
clc
data16
mov
clc
mov
clc
and
add
add
shlb
mov
clc
cmpsl
clc
pop
sti
adc
add
clc
imul
enter
lret
scas
ds
add
add
add
sar
mov
xor
add
clc
test
mov
mov
clc
and
add
sub
out
test
outsb
in
cltd
pop
dec
or
add
xabort
or
cli
cmp
loop
and
add
mov
fcomip
test
push
mov
gs
push
add
push
add
cmpsl
clc
lock
clc
je
cmc
inc
clc
jl
mov
outsb
mov
add
push
xabort
add
mov
clc
mov
add
add
clc
imul
clc
cmp
xabort
add
cmpsl
clc
push
mov
or
clc
mov
fldcw
add
mov
add
clc
cmp
dec
mov
movsl
clc
sar
mov
jo
add
cwtl
cmp
jecxz
outsl
add
add
sub
jg
cmp
inc
add
push
add
jno
add
add
add
outsb
pop
xchg
mov
mov
clc
pop
jp
clc
out
adc
add
fnsave
pop
sar
pushf
data16
mov
xchg
gs
lahf
stos
add
add
clc
push
mov
fimuls
add
add
clc
jnp
push
cwtl
enter
clc
or
clc
xor
add
pop
cmpsl
clc
fucomi
adc
add
cli
outsl
mov
add
mov
clc
aaa
mov
add
clc
adc
add
xchg
rorb
cmp
add
ret
clc
insb
pusha
add
inc
clc
xchg
imul
pusha
add
out
xchg
out
xchg
cmp
add
add
adc
add
add
add
js
clc
xchg
inc
clc
movsb
clc
mov
xor
add
add
fwait
jg
xor
add
add
out
mov
add
pop
dec
push
ds
pop
outsb
hlt
mov
movsl
clc
mov
add
stc
daa
clc
lcall
add
clc
jecxz
ret
clc
ret
clc
mov
cmp
cmp
inc
clc
inc
clc
sbb
add
mov
lods
lea
fwait
clc
pop
ja
into
sub
push
cmp
clc
and
add
pop
mov
insb
lods
ret
clc
lods
pop
dec
adc
add
clc
incb
mov
movsb
clc
into
or
test
rcll
icebp
inc
clc
jnp
add
enter
popa
add
mov
sahf
jnp
add
push
add
nop
mov
fwait
inc
clc
jno
add
push
sub
add
push
add
shll
clc
sbb
clc
sbb
xchg
mov
add
test
clc
mov
mov
fwait
insl
imul
add
pop
adc
clc
cmp
dec
pop
rcrb
or
clc
pop
mov
clc
or
add
inc
clc
inc
add
js
sub
fwait
enter
cmp
clc
loop
push
addr16
negl
inc
add
call
lea
add
in
and
or
add
sbb
clc
repnz
sahf
pop
mul
clc
cmp
sbb
clc
mov
sbb
add
loop
icebp
fadds
add
movsb
clc
ret
clc
scas
out
clc
sub
clc
sbb
add
pop
lahf
xor
add
cli
bound
add
pop
adc
add
clc
mov
mov
dec
and
add
add
or
pop
adc
inc
clc
pcmpgtw
daa
clc
sbb
test
mov
clc
popf
ds
add
scas
mov
add
cmpsl
clc
or
add
xchg
outsb
call
insl
lret
pop
clc
jg
add
mov
add
mov
popf
out
mov
out
lock
jge
mov
out
mov
clc
cwtl
rep
clc
push
into
mov
das
dec
sub
mov
lock
mov
scas
and
and
add
clc
out
lods
dec
sti
mov
add
fistpll
cmp
movsb
clc
and
add
dec
push
pop
cmp
dec
cli
nop
xchg
mov
clc
clc
add
dec
sbb
stos
or
push
add
add
clc
xor
clc
xor
add
clc
inc
add
push
add
push
mov
ds
clc
cmp
xchg
lahf
out
and
add
in
push
add
xor
add
clc
xchg
push
add
dec
pop
pop
push
clc
dec
fsts
add
in
lock
das
mov
mov
xchg
add
add
sub
xor
clc
pop
clc
mov
push
push
cs
stos
xchg
imul
push
push
sbb
add
pop
stos
js
aad
add
mov
roll
add
pop
jb
add
add
dec
cmp
clc
cmp
mov
clc
sar
clc
lock
add
and
mov
jnp
jns
and
cs
push
add
cmpsb
clc
push
insb
mov
hlt
dec
lock
ljmp
insb
push
test
lahf
mov
adc
add
jne
js
je
cmpsb
clc
pop
cwtl
lahf
inc
add
loop
or
add
add
add
cmp
clc
or
xlat
iret
lahf
movsb
clc
sbb
ret
clc
in
inc
clc
ficompl
pop
outsl
fwait
loope
ljmp
int3
loope
scas
mov
inc
clc
movsb
clc
in
pusha
add
jno
add
gs
dec
add
add
or
cmp
add
lcall
jae
add
add
jg
xor
add
add
add
and
mov
add
repnz
push
aas
mov
mov
sbb
push
daa
clc
or
mov
or
push
add
inc
add
and
add
fstpl
clc
push
repz
insl
dec
push
out
out
repz
clc
xlat
data16
xlat
dec
inc
clc
cmp
pop
clc
into
test
mov
xor
xchg
sbb
lcall
pop
or
add
clc
dec
frstor
clc
icebp
out
test
add
add
adc
add
out
pop
adc
add
add
clc
jb
add
xchg
jle
scas
xchg
jle
clc
add
add
or
in
jo
add
inc
add
mov
icebp
cmp
clc
arpl
add
add
sbb
in
hlt
idivl
cmp
pop
inc
clc
into
in
dec
sbb
jl
int3
popa
add
dec
fldl
je
push
pop
popf
cmp
cmpsb
clc
sbb
add
cmp
clc
fcomi
mov
xchg
pushf
popf
xchg
stos
inc
add
in
jae
add
push
sub
gs
test
sub
pop
ljmp
pop
xor
add
cmc
mov
adc
add
add
pop
clc
shl
es
push
clc
inc
clc
insl
sub
rorb
xchg
fcoms
clc
cmp
js
ret
clc
pop
repz
xchg
xchg
es
sbb
clc
fidivrl
loope
iret
dec
out
int3
sbb
add
xchg
jns
inc
clc
cld
jb
add
clc
out
fs
inc
add
or
fs
cmp
mov
pop
mov
mov
fs
xchg
jno
add
add
or
pusha
add
in
cmc
int
clc
sub
add
adc
add
insl
adc
add
xchg
pop
push
insb
iret
sub
sub
mov
add
push
xor
jne
add
sub
add
out
fdivs
popf
sub
sbb
clc
xchg
stos
in
into
cmpsb
clc
push
add
sbb
add
cmp
clc
mov
dec
sub
add
ss
outsl
bound
add
jnp
clc
sub
imul
add
add
mov
clc
int3
and
add
add
xchg
xor
add
sbb
mov
xbegin
add
mov
clc
popf
or
add
push
clc
xchg
jmp
xbegin
aad
out
push
popf
not
dec
lcall
clc
mov
dec
jle
clc
mov
add
insl
clc
mov
popf
bound
add
hlt
inc
clc
add
add
add
add
ficomps
xbegin
jmp
sbb
mov
fs
daa
clc
in
cmp
or
pop
sub
movsl
clc
lret
repz
mov
and
add
aam
clc
insb
adc
add
add
xabort
clc
add
sbb
adc
add
mov
or
jp
sahf
push
adc
add
ret
clc
out
pop
rorb
mov
clc
xor
add
dec
add
add
loope
pop
clc
pop
pop
clc
push
pop
into
xor
add
cmp
clc
ljmp
push
add
stos
push
clc
xchg
imul
xlat
inc
add
dec
outsl
dec
xchg
mov
imul
mov
dec
mov
and
add
pop
clc
out
add
fwait
inc
add
pop
int3
sbb
sar
sbb
add
ret
clc
imul
lret
cmp
clc
repz
add
inc
add
loop
test
lock
add
lea
enter
mov
sti
int3
aam
add
iret
cmp
popa
add
ljmp
mov
bnd
rcrb
or
scas
push
mov
xchg
imul
add
clc
cmp
jae
add
adc
add
xor
add
popf
sbb
out
imul
add
sbb
mov
sub
add
js
clc
ret
clc
mov
imul
cmp
fcoml
lret
xchg
pusha
add
sbb
pop
push
addr16
mov
jo
add
sti
cmpsl
clc
jge
sti
push
add
in
arpl
add
pop
add
add
jge
add
jb
add
inc
add
and
add
add
outsb
push
clc
sahf
jne
jl
sub
add
add
ret
sub
xchg
dec
frstor
add
clc
ftst
clc
sbb
and
add
add
jl
clc
cmp
push
jl
out
scas
xchg
sbb
jle
xlat
sti
cmp
pusha
add
pop
sbb
add
add
imul
ret
repz
mull
add
mov
idivb
nop
movsl
clc
mov
mov
or
movsl
clc
inc
add
inc
clc
jnp
fs
or
sbb
pop
push
add
out
fcoms
add
sar
jns
sub
add
int
clc
mov
loope
es
imul
inc
add
sbb
dec
xor
add
xor
add
push
add
arpl
add
jnp
add
xlat
rolb
add
sub
jno
add
clc
icebp
inc
clc
hlt
daa
clc
int
mov
ret
clc
inc
add
push
add
push
mov
xchg
adc
add
clc
cmp
add
add
outsl
inc
add
cmp
lret
mov
add
mov
sbb
and
add
xchg
pop
gs
aam
aas
mov
add
cmp
clc
pusha
add
mov
dec
daa
clc
sbb
arpl
add
clc
pusha
add
out
test
add
nop
int
imul
addr16
xlat
aaa
sub
cmpsl
clc
daa
clc
add
add
outsl
xchg
insb
xchg
xabort
imul
cli
add
adc
clc
fwait
xabort
sbb
add
jp
add
add
jmp
xchg
or
clc
icebp
jno
add
jge
jge
push
mov
push
add
and
add
push
sub
cmp
xchg
inc
clc
cld
sub
add
jo
add
clc
loop
pop
insb
ret
clc
shrb
add
data16
jg
fiadds
add
cltd
xchg
jnp
xor
add
stc
push
add
loope
cmp
add
adc
add
add
adc
add
add
jle
push
add
lcall
mov
clc
out
push
add
adc
add
add
xor
add
clc
hlt
sbb
sbb
clc
and
add
lret
imul
add
cmp
add
jge
stos
aam
add
stos
mov
cmp
clc
xchg
cmp
add
mov
aaa
jns
decl
ljmp
and
add
shrl
add
pop
add
clc
lock
add
lods
icebp
pop
push
add
loop
fcomi
arpl
add
clc
lods
mov
fwait
stc
push
add
xor
add
inc
add
adc
add
call
lods
and
add
add
loope
out
push
mov
add
cmp
add
dec
jne
sub
in
inc
add
add
add
arpl
add
mov
insb
push
add
test
sbb
fidivl
xchg
lods
data16
out
cmpsl
clc
pop
mov
fbld
outsl
sbb
imul
add
jge
mov
xor
add
clc
or
cmpsl
clc
fs
mov
clc
outsl
inc
add
push
dec
addr16
repnz
add
add
ljmp
pop
movsb
clc
mov
enter
adc
add
clc
mov
add
add
test
mov
ror
adc
add
adc
add
clc
inc
clc
call
clc
imul
cmp
add
pop
push
shl
clc
sar
add
ljmp
out
mov
jge
cmp
mov
cmp
in
pop
sub
add
js
add
fwait
jno
add
aaa
push
clc
pusha
add
dec
cmp
add
aas
ret
clc
adc
add
add
addr16
jl
dec
aaa
jl
clc
cmp
push
add
mov
clc
inc
clc
cltd
out
out
dec
call
int3
jmp
add
sbb
cmpsl
clc
lods
push
clc
stos
ret
jmp
add
into
mov
inc
add
and
add
clc
lods
pop
xor
rcll
ret
clc
ret
int3
add
add
xor
add
fmull
dec
cmp
sbb
add
add
aaa
pusha
add
int
out
je
push
pop
xor
add
daa
clc
je
clc
and
mov
jecxz
pop
dec
imul
pop
je
clc
dec
cltd
loopne
inc
add
test
pop
test
out
mov
add
sbb
stc
out
test
outsl
sbb
add
mov
clc
jo
add
imul
add
pusha
add
mov
sbb
and
add
loop
imul
js
clc
sbb
dec
dec
stos
sub
cli
adc
add
shlb
jmp
repnz
imulb
pop
cs
pop
push
stos
adc
clc
dec
push
test
gs
xchg
gs
adc
add
test
add
add
or
movsl
clc
test
add
add
int
clc
xor
sbb
fdivl
xbegin
aam
inc
add
int3
xchg
aad
add
xor
add
add
and
add
lods
dec
jmp
add
jg
clc
es
jecxz
cli
sbb
sub
add
notb
call
aam
in
jns
insb
jnp
push
push
add
mov
cmpsl
clc
loopne
jno
add
bound
add
cmp
clc
inc
add
mov
clc
add
push
and
add
lret
and
add
dec
dec
or
mov
add
je
add
ja
sub
pop
test
jmp
mov
pop
lret
cltd
dec
aam
cmp
add
popf
xabort
pushf
add
ss
dec
and
add
push
add
push
add
cmpsb
clc
push
add
pushf
cwtl
dec
sahf
push
add
dec
or
add
sbb
dec
cmp
add
lods
cs
sbb
add
leave
jle
lret
clc
cmp
dec
xor
add
push
add
pop
out
mov
xlat
sub
clc
jl
xor
add
lahf
add
add
enter
add
xor
popa
add
mov
mov
pop
dec
pushf
sub
push
add
ret
clc
push
add
xor
call
push
sahf
scas
jb
add
add
add
cmpsl
clc
lock
clc
mov
add
iret
shr
movsl
clc
mov
lock
sbb
pusha
add
inc
add
add
add
xchg
int
in
jecxz
sbb
clc
ret
and
test
add
clc
insl
mov
loopne
cmp
dec
mov
cmp
lods
in
dec
fs
xor
add
clc
pushf
jb
add
add
xchg
loop
cmpsl
clc
arpl
add
out
push
add
adc
jb
add
leave
cmp
jl
add
dec
add
add
sbb
clc
lea
clc
xor
add
rol
clc
add
add
clc
iret
mov
adc
clc
jg
add
hlt
xlat
cmpsb
clc
stos
and
or
mov
inc
clc
xbegin
inc
add
in
jbe
popa
add
rclb
add
mov
fwait
xor
add
xor
add
add
add
nop
dec
mov
xchg
sub
adc
clc
push
clc
sbb
gs
outsb
jno
add
rcr
aad
cmp
dec
stos
test
fucomi
movsb
clc
arpl
add
out
pusha
add
data16
cmp
or
xor
add
add
dec
pop
mov
adc
add
or
clc
out
cmpsl
clc
inc
add
jg
loop
clc
scas
pop
pop
stos
fcoms
mov
int
add
pushf
addr16
out
inc
add
pop
lahf
daa
clc
cmp
jb
add
mov
clc
push
jg
icebp
sbb
inc
clc
dec
sbb
xchg
daa
clc
cmp
xor
add
popf
mov
fnstenv
cmc
out
call
cld
sbb
add
popf
dec
sar
or
das
jae
add
or
repz
mov
dec
movsl
clc
movsl
clc
cs
mov
add
mov
ja
jbe
pop
dec
shrl
cmp
clc
jp
mov
xor
add
popa
add
popa
add
clc
clc
push
add
cmp
clc
jns
xor
add
mov
add
data16
push
add
push
clc
jbe
add
fnsave
mov
xor
add
add
add
pop
sub
adc
add
aad
clc
xchg
ja
xchg
dec
mov
dec
cmovb
add
repnz
add
add
mov
adc
cmp
cmpsl
clc
pop
dec
jecxz
aaa
loop
mov
dec
mov
mov
mov
clc
flds
add
into
loope
mov
add
sub
add
push
add
xor
add
add
add
add
ds
mov
clc
fcmovne
clc
jg
add
int
cmp
add
mov
jb
add
clc
sbb
add
adc
clc
out
push
pop
lahf
out
clc
repz
xor
mov
lods
out
sti
pop
xabort
imul
add
das
bound
add
pushf
punpckhbw
cmp
out
es
cmp
add
mov
inc
add
clc
addr16
inc
clc
test
push
add
ret
add
and
clc
xchg
hlt
add
add
cmp
clc
mov
mov
add
stos
xchg
scas
mov
lret
add
jo
add
int
mov
clc
pop
clc
gs
outsl
popf
repnz
clc
mov
mov
and
mov
xbegin
jns
cmp
push
add
hlt
test
mov
or
add
jg
out
sub
sbb
sub
add
ds
xchg
cld
stos
arpl
add
sub
inc
clc
bound
add
mov
push
add
add
add
jno
add
add
jge
add
ljmp
add
inc
clc
push
ds
inc
clc
push
sti
xor
add
clc
sub
clc
fldcw
mov
lea
and
add
clc
stos
adc
add
clc
mov
outsb
ret
clc
dec
mov
cwtl
cmp
jg
adc
add
clc
jo
add
add
mov
ds
add
add
dec
cmc
push
mov
clc
sub
add
push
clc
stos
xabort
clc
ss
popf
stos
pop
cli
iret
pop
data16
pop
ret
stc
fnstenv
add
bound
add
add
shl
pop
jle
clc
cmp
clc
jp
jmp
push
jmp
push
notl
mov
xor
add
add
xor
adc
clc
mov
lahf
inc
clc
xor
add
loope
dec
xbegin
add
xchg
sub
add
cmp
in
pusha
add
jmp
cmp
inc
add
adc
lret
daa
clc
std
add
add
loope
arpl
add
add
or
stc
sub
xabort
mov
faddl
cwtl
cmc
fwait
sub
xor
sub
clc
inc
clc
in
inc
clc
cltd
in
movsb
clc
mov
add
xchg
cmp
dec
inc
clc
mov
jle
in
int
clc
aam
clc
pop
lret
add
or
adc
add
xlat
imul
imul
clc
mov
ds
cli
pop
int3
adc
add
push
loope
xor
hlt
fwait
sbb
add
fnstenv
test
repnz
stc
popa
add
test
clc
cmp
stos
in
push
stos
aas
push
ret
ret
clc
js
clc
repnz
stos
cmp
adc
add
sbb
push
add
push
add
cmp
gs
mov
clc
cmp
pop
icebp
fadds
inc
add
bound
add
add
pop
or
xor
add
icebp
cld
jne
clc
xchg
mov
ljmp
aas
push
clc
lcall
jmp
add
or
add
push
ja
add
push
loope
cmp
add
pop
mov
pop
and
add
sbb
jp
inc
clc
out
rolb
add
clc
inc
add
pop
xabort
or
cmp
add
push
cmp
add
arpl
add
push
nop
shlb
add
mov
dec
mov
add
hlt
scas
jl
add
add
clc
inc
clc
mov
xabort
clc
or
xchg
mov
xchg
or
sbb
jbe
es
dec
inc
add
ret
clc
xchg
jne
mov
add
pusha
add
scas
fcmovnb
clc
and
add
lock
xor
or
push
xchg
insb
imul
or
add
ds
add
ss
and
add
jecxz
pop
scas
lahf
fstps
clc
pushf
aam
adc
add
clc
mov
in
std
aas
enter
add
push
jb
add
jbe
add
pop
popa
add
add
add
enter
clc
fwait
test
clc
adc
clc
jmp
lea
ljmp
adc
add
xor
add
add
add
cmp
dec
addr16
rcrb
add
nop
pop
mov
add
add
push
clc
push
clc
push
mov
clc
adc
add
add
out
mov
fs
gs
and
adc
clc
adc
sbb
mov
push
cmp
add
das
fwait
xchg
push
clc
push
add
add
mov
pop
cmp
add
pop
sub
rcl
pop
imul
clc
sbb
mov
add
mov
clc
sub
out
lahf
xchg
call
adc
add
clc
jmp
push
clc
popf
into
cs
xor
add
outsb
xor
clc
adc
add
push
and
add
add
mov
or
add
test
mov
clc
imul
clc
mov
jo
add
clc
push
mov
clc
mov
clc
sub
imul
add
test
js
jnp
mov
clc
sarb
clc
sub
mov
add
inc
add
movsb
clc
cmp
clc
sub
or
add
or
mov
leave
aaa
mov
lret
aad
and
cmpsl
clc
shrl
add
in
arpl
add
inc
add
add
clc
lahf
sub
add
clc
mov
inc
add
fs
outsb
xchg
int
jge
loopne
fistl
add
out
dec
mov
ja
clc
push
ret
divb
jns
sbb
fxam
clc
cld
shl
clc
xor
add
sbb
iret
test
mov
hlt
cmp
repz
add
add
clc
insb
mov
push
aam
out
lods
in
inc
clc
pop
inc
add
lahf
loope
cmp
clc
lea
clc
sbb
clc
loop
mov
cltd
push
add
xchg
sar
clc
out
imul
in
mov
fs
and
adc
sbb
pusha
add
jmp
clc
aad
das
cmp
test
repz
test
jne
lea
clc
das
cmp
add
test
clc
cmp
cs
add
dec
mov
mov
add
clc
push
rol
clc
insb
add
add
add
adc
clc
aaa
xbegin
hlt
add
lods
lret
pop
int
cmp
clc
cld
mov
clc
mov
push
cmp
add
test
cwtl
data16
xabort
push
decl
jl,pt
ds
mov
fsubrl
fists
add
lods
lret
pop
repz
test
clc
or
add
scas
test
inc
clc
outsl
mov
push
add
repz
and
add
add
push
loop
mov
clc
gs
fmuls
lock
cmp
clc
das
xor
add
dec
push
clc
push
add
xor
inc
add
push
dec
mov
jns
xchg
adc
add
add
mov
cmpsb
clc
imul
clc
ljmp
add
popf
pop
adc
add
adc
add
push
add
insl
dec
mov
push
out
mov
jmp
add
and
add
add
in
jns
cwtl
cs
enter
rcrb
dec
or
add
xlat
sbb
gs
in
inc
add
xchg
test
clc
pop
jg
add
sbb
clc
mov
clc
pop
xor
add
add
in
stos
rcll
add
cmp
clc
lods
fcoms
push
clc
negb
add
push
sub
aaa
mov
clc
sbb
in
data16
test
cmp
and
add
add
xor
add
add
mov
mov
out
enter
cltd
shrl
add
add
imul
add
clc
sbb
add
dec
sahf
pushf
into
test
cmp
clc
daa
clc
adc
add
add
dec
mov
push
ret
xchg
fists
push
jl
clc
jl
fsincos
test
fs
sbb
in
pop
fldt
insb
push
xor
add
adc
add
clc
sub
bound
add
jp
clc
mov
add
xchg
daa
clc
bnd
mov
fdivrs
int
int3
push
clc
enter
sbb
adc
xor
add
add
jecxz
insl
jmp
clc
and
add
xchg
out
push
add
sti
not
sbb
cltd
inc
clc
stos
loope
std
ljmp
lret
clc
mov
add
es
push
clc
stc
in
aam
sahf
movsl
clc
push
pop
sub
repz
clc
popf
ljmp
mov
out
jbe
sar
jnp
mov
push
add
leave
sahf
xbegin
cmp
jno
add
sar
add
imul
clc
jecxz
scas
xor
std
mov
clc
ss
shrb
shrb
aam
clc
xchg
push
clc
movsb
clc
cmp
clc
clc
dec
dec
pop
push
add
fs
pushf
push
add
or
loope
sahf
das
and
adc
add
daa
clc
mov
xchg
dec
daa
clc
adc
add
add
data16
rep
arpl
add
add
add
adc
inc
add
insb
cmpsb
clc
aad
clc
lods
je
icebp
outsl
int
clc
sub
dec
cs
dec
push
jg
sahf
dec
cmpsl
clc
mov
pop
xor
mov
dec
push
sub
sub
cld
jle
cmp
add
stos
pop
inc
clc
cltd
js
clc
fistpl
adc
add
mov
cli
fcmovbe
into
sbb
sti
imul
push
mov
bound
add
clc
mov
stc
data16
sar
mov
xor
lods
in
arpl
add
mov
add
dec
sbb
cmpsb
clc
push
add
mov
or
clc
incb
sub
or
outsb
mov
scas
lret
dec
ret
or
aam
add
in
cmc
mov
add
daa
clc
ja
cld
sbb
mov
call
addr16
fbstp
add
inc
clc
cmp
test
add
mov
xchg
lods
inc
clc
jge
clc
aas
clc
mov
cmp
cmp
xor
add
add
adc
clc
push
in
xchg
call
add
cmp
add
lcall
add
sbb
loopne
popa
add
adc
gs
stc
jecxz
jb
add
arpl
add
scas
mov
pop
mov
or
sub
or
lahf
and
add
dec
dec
adc
add
cld
outsb
data16
xor
out
push
clc
xchg
push
add
mov
clc
jb
add
jbe
clc
imul
clc
imul
add
add
push
clc
or
cmp
lea
clc
xchg
cmp
clc
cltd
pop
lret
add
std
repnz
sub
adc
add
jmp
inc
clc
fwait
lods
aam
jecxz
push
clc
xchg
ljmp
loopne
cmp
xchg
out
insb
daa
clc
or
cmp
xabort
data16
adc
add
das
ret
clc
jmp
scas
mov
gs
movsb
clc
insb
aam
add
push
add
ss
clc
iret
data16
push
mov
sbb
add
fbstp
add
rcrl
clc
mov
sub
jmp
cmp
jl
clc
cmp
clc
ss
movsl
clc
xor
testl
stc
jns
cld
jne
outsb
cld
fsubr
mov
jp
cmc
push
add
sbb
or
clc
adc
add
add
fdivrs
ret
clc
lock
fidivs
add
add
aad
xchg
jmp
jmp
decl
cld
mov
ret
cmpsb
clc
mov
adc
mov
repz
sub
ret
clc
jno
add
add
adc
add
rcr
adc
outsb
xchg
out
leave
fdivrp
and
dec
clc
addr16
es
inc
clc
and
add
mov
push
mov
rol
clc
jns
dec
data16
and
add
outsb
out
ja
mov
add
addr16
aad
cmp
push
push
add
pop
mov
sbb
rol
clc
xabort
in
mov
clc
pop
inc
add
jecxz
sbb
clc
insb
inc
add
or
adc
clc
shl
jno
add
repnz
add
clc
xchg
ljmp
fistps
mov
out
pop
sbb
mov
clc
mov
cld
jne
add
in
xor
add
fcmove
imul
clc
stos
dec
fbld
pop
cwtl
scas
jmp
pop
add
clc
xor
add
clc
cmp
add
or
std
or
add
xchg
add
add
add
mov
add
insb
lret
or
add
jb
add
add
sar
cmp
clc
lods
das
adc
outsb
movsb
clc
jecxz
jae
add
mov
sahf
or
add
lock
adc
add
pop
ror
stc
clc
out
data16
sbb
and
add
pop
or
add
lods
pop
push
lods
repnz
out
imul
add
fs
inc
clc
mov
inc
add
enter
jle
push
cmp
loope
xchg
fisubrl
clc
mov
cmp
sbb
inc
add
inc
clc
push
push
rcll
add
adc
add
clc
adc
add
add
xor
add
add
pop
pop
xor
add
clc
pop
and
add
push
clc
xchg
test
jne
xor
add
int3
jmp
movsl
clc
imul
sub
add
add
clc
add
add
add
push
cs
clc
jo
add
dec
pop
es
pop
adc
add
pop
clc
call
clc
iret
scas
mov
loopne
push
clc
mov
push
nop
sub
clc
or
adc
add
adc
add
add
sub
clc
or
push
and
add
repz
sub
roll
insb
stos
push
fdivrl
out
aam
data16
and
add
mov
add
popa
add
ret
and
add
int3
pop
cmc
push
idivl
out
xchg
cmp
clc
insl
test
sub
clc
test
insl
xor
add
dec
mov
mov
ret
jbe
addr16
cli
pop
in
repz
mov
push
add
test
adc
add
lahf
ret
fists
add
xor
clc
sbb
clc
push
clc
mov
xchg
xchg
outsl
mov
add
add
add
add
inc
add
scas
cmp
inc
add
lock
add
or
adc
mov
push
aas
inc
add
or
out
loopne
push
add
dec
add
push
add
sbb
out
cmp
sub
add
mov
push
out
or
mov
fs
hlt
cmp
popa
add
mov
clc
sbb
xchg
xchg
pop
js
jns
mov
jno
add
fstl
push
inc
add
inc
add
and
repnz
add
add
popa
add
adc
sub
add
imul
mov
popa
add
clc
xchg
sbb
xchg
stos
arpl
add
clc
mov
or
cmp
xchg
xor
add
popf
aas
pop
xabort
int
clc
mov
push
sbb
add
adc
add
clc
mov
kmovw
inc
add
and
adc
add
imul
jae
add
leave
lret
int3
adc
add
shlb
pop
nop
mov
pushf
mov
mov
clc
dec
in
jb
add
std
out
mov
jb
add
add
mov
adc
add
pop
mov
jecxz
dec
sahf
xchg
test
repz
pushf
or
add
fldt
push
clc
xchg
or
add
xor
add
fisubl
add
add
jns
test
lea
adc
add
adc
add
xchg
dec
insl
sar
das
bsf
add
xchg
loope
addr16
cmp
mov
adc
adc
add
add
stos
jle
add
int
clc
mov
add
xor
nop
mov
and
add
outsl
cmp
lods
into
in
nop
mov
dec
push
stc
and
add
mov
add
dec
xlat
inc
add
cmpsl
clc
ds
add
lret
dec
mov
pop
mov
clc
pop
cmp
lret
push
add
jmp
add
arpl
add
push
add
movsl
clc
lahf
mov
fcomp
inc
clc
pop
jo
add
popf
jge
add
aam
icebp
mov
cmp
jae
add
add
cmp
jp
xbegin
cmp
add
push
xchg
sub
test
push
sbb
adc
add
push
push
xchg
out
or
pop
sub
lods
sub
add
and
add
xor
xchg
test
clc
lods
or
enter
clc
or
pop
loope
imul
clc
call
clc
inc
clc
sarb
add
add
add
aad
insb
sti
int3
dec
jle
clc
and
add
add
mov
fsts
add
cmpsb
clc
lahf
jle
das
push
xor
add
scas
dec
mov
sbb
clc
sbb
fsubrl
in
cmp
fcomps
mov
add
movsl
clc
pop
push
add
in
sbb
clc
push
add
adc
add
leave
mov
das
cmp
in
add
add
movntq
out
inc
add
fwait
adc
add
cmp
mov
test
test
push
add
adc
add
clc
loopne
push
sub
lret
iret
pop
mov
fidivl
dec
mov
jmp
add
cs
clc
dec
out
mov
outsl
sub
add
add
in
mov
clc
ljmp
sbb
mov
fdivl
add
pop
ret
clc
sar
clc
out
mov
add
aad
mov
dec
ss
or
rorb
add
clc
jne
add
lea
add
mov
std
jne
push
mov
xlat
jg
add
push
push
jnp
lea
add
test
out
sub
mov
add
pop
fdivr
and
add
jne
clc
inc
clc
jns
mov
mov
fidivs
add
pop
and
movsl
clc
and
add
add
adc
not
push
lods
clc
jmp
add
ret
clc
push
fiadds
add
sahf
into
shrb
push
add
mov
sar
dec
adc
xor
add
es
out
push
dec
and
leave
ljmp
mov
clc
pop
cmp
add
mov
add
mov
add
repz
mov
clc
cmp
add
sbb
scas
mov
add
add
pop
push
xor
data16
dec
aaa
cmp
test
jo
add
mov
scas
popf
fwait
mov
add
clc
bound
add
add
push
clc
out
sub
clc
sbb
rclb
push
sbb
inc
add
or
add
add
clc
jg
adc
add
add
mov
add
mov
ficomps
add
scas
and
mov
add
inc
add
repnz
clc
inc
clc
push
add
cs
cmp
out
sbb
add
aam
add
and
add
clc
fimull
or
clc
mov
push
mov
popa
add
fstpt
clc
cld
fs
jbe
xbegin
push
clc
das
dec
inc
add
int
clc
mov
cmp
movsb
clc
arpl
add
fdiv
inc
clc
gs
inc
clc
lret
mov
stos
xlat
das
push
jb
add
clc
popa
add
adc
add
add
mov
clc
cmpsl
clc
cmc
js
cld
push
jbe
pop
test
pop
xor
add
clc
std
mov
clc
push
add
sarl
jle
mov
xor
add
fisubrl
clc
repz
pop
push
jle
clc
jnp
add
stc
adc
add
aam
cmp
lods
sub
sub
int3
rorl
shrb
call
add
mov
bound
add
push
add
xor
clc
adc
iret
xor
add
add
add
dec
mov
clc
sub
jo
add
cmp
xabort
jb
add
clc
add
ret
clc
in
sti
push
clc
xchg
out
roll
sub
cmp
xchg
mov
jo
add
add
jnp
mov
add
clc
repz
pop
mov
add
pop
pop
es
xchg
mov
js
xbegin
nop
xor
mov
add
and
add
dec
cltd
popf
or
clc
cmp
stc
push
add
arpl
add
clc
clc
jg
push
cmp
cmp
add
test
clc
scas
aas
aam
xor
add
add
clc
jmp
clc
insl
in
cmpsb
clc
push
cmp
pop
ret
xor
add
xchg
cltd
add
add
outsb
movsb
clc
scas
out
cmc
push
aam
cmp
clc
fimuls
mov
mov
jb
add
clc
push
mov
outsl
sub
add
cmp
add
add
lret
add
xchg
ja
add
jns
sub
add
push
add
daa
clc
mov
pop
clc
and
add
xchg
xlat
cmp
clc
jb
add
pop
loopne
and
add
add
add
and
add
cmp
add
xor
add
mov
clc
xor
add
scas
pop
lahf
out
pop
scas
mov
clc
jns
clc
lods
sar
mov
mov
push
test
and
add
add
frndint
sub
mov
clc
jg
push
and
add
clc
xor
add
inc
clc
push
pop
sar
int3
mov
clc
sub
movsb
clc
xchg
imulb
clc
sub
ret
clc
jmp
add
add
mov
mov
xbegin
clc
movsl
clc
and
add
in
inc
clc
or
daa
clc
push
clc
fs
js
add
add
push
clc
inc
clc
vsqrtps
add
scas
mov
test
add
mov
clc
clc
int
clc
into
movsl
clc
mov
mov
insl
dec
inc
add
inc
clc
repz
push
fcmovnu
push
mov
cli
icebp
xor
add
out
adc
add
cmp
xbegin
scas
insb
int
pushl
add
clc
xor
add
add
test
mov
adc
push
add
mov
dec
in
jle
add
mov
sub
and
add
add
std
sbb
add
cmp
add
cs
outsl
sub
pop
pop
hlt
add
add
sbb
ficoms
add
popf
jle
push
dec
mov
clc
inc
clc
adc
add
clc
push
or
mov
call
clc
add
add
shll
mov
clc
mov
out
mov
pop
inc
add
in
gs
test
loop
pop
aas
xor
aaa
inc
clc
fisttps
in
inc
add
pop
jp
pop
jbe
clc
inc
clc
addr16
ds
mov
add
or
and
add
add
sub
clc
enter
clc
das
push
clc
ret
mov
pop
add
add
clc
xchg
stos
cmp
sbb
jb
add
imull
clc
or
cmp
clc
lods
ret
clc
xor
mov
mov
add
clc
sub
gs
daa
clc
pop
pop
clc
xchg
pop
or
dec
dec
in
mov
mov
out
mov
xchg
mov
ds
push
add
test
mov
add
test
int3
cli
dec
arpl
add
add
add
mov
add
and
add
add
enter
ja
cmc
dec
add
in
into
jb
add
xor
add
add
push
push
add
add
mov
mov
mov
jmp
clc
insl
fs
int3
mov
jbe
clc
hlt
sub
dec
sub
add
add
hlt
push
mov
push
add
leave
arpl
add
push
add
sub
add
cs
sub
or
daa
clc
loope
or
clc
lea
clc
aam
decl
jg
push
jne
clc
out
push
sar
clc
mov
int
clc
mov
inc
add
lock
sahf
decl
dec
test
add
addr16
imul
ffree
clc
das
ljmp
add
cmp
add
mov
add
js
add
push
lcall
clc
stc
enter
inc
add
fdivl
inc
add
cmp
fst
xchg
cli
adc
add
nop
push
clc
insl
xor
notb
clc
mov
clc
sar
sar
add
ss
lret
pop
add
add
sbb
lcall
sbb
fstpl
push
add
lret
cltd
push
shl
or
add
push
adc
add
and
add
jl
jmp
clc
cmc
in
pop
xabort
add
fstl
scas
pushf
data16
loop
xor
jbe
shr
loopne
std
mov
lahf
int
clc
mov
jns
aaa
push
add
ja
clc
call
or
clc
xchg
mov
pop
cld
inc
clc
pop
lcall
dec
int3
push
fs
jge
sub
xchg
jle
sti
mov
lcall
add
aaa
fldt
and
add
lcall
sub
mov
clc
mov
mov
sub
mov
mov
test
clc
int3
fs
popf
fnsave
sbb
clc
cmp
lahf
sub
clc
fisubrs
fisubl
add
push
add
ss
clc
loop
pop
ret
out
clc
fistpll
xchg
mov
add
or
clc
xchg
inc
add
insl
mov
inc
clc
inc
add
mov
popf
inc
clc
inc
add
es
stos
xchg
sub
call
add
adc
add
mov
add
jbe
int
movsb
clc
adc
add
cmpsl
clc
addr16
cwtl
adc
add
add
bound
add
clc
xchg
xchg
pop
sub
and
add
and
add
and
jg
add
add
push
add
in
inc
add
xbegin
cs
das
jmp
add
lahf
in
pop
clc
and
add
add
jmp
add
call
mov
imul
mov
add
or
clc
je
inc
clc
inc
add
push
cmp
pop
or
clc
cmp
add
movsl
clc
popa
add
js
int
cmpsl
clc
leave
pop
clc
sub
clc
push
mov
xchg
roll
lods
cmp
push
test
dec
pusha
add
and
add
iret
clc
jg
jnp
clc
mov
push
loopne
ret
clc
xchg
mov
sbb
jge
nop
insb
xchg
mov
movsb
clc
pop
pop
xbegin
xchg
sahf
push
add
ds
clc
ljmp
push
mov
repnz
mov
test
add
cmp
pop
sbb
clc
imul
add
add
and
add
jecxz
sub
add
mov
cmpsb
clc
push
clc
hlt
out
mov
mov
sar
push
fs
dec
int3
out
aaa
loopne
clc
rcr
xchg
lods
jl
xchg
xbegin
add
clc
fistpl
int3
add
add
add
mov
dec
jmp
jo
add
add
inc
add
jmp
inc
add
lahf
mov
add
mov
fisttpll
fisubl
add
adc
sub
clc
rcr
jp
push
clc
xabort
jge
clc
fsts
cmp
pop
jbe
sar
mov
add
add
clc
xlat
jno
add
and
cmp
sub
or
add
adc
add
push
add
cmp
lcall
jo
add
add
bound
add
pop
ss
lods
mov
imul
test
test
repnz
idivb
loop
call
lcall
add
sub
add
clc
cmp
clc
dec
leave
push
add
scas
jb
add
inc
add
cwtl
xor
add
add
dec
clc
ja
clc
and
add
xor
add
add
enter
adc
push
add
add
fdivl
repnz
enter
or
dec
inc
clc
sub
xchg
xor
add
roll
cmp
cmp
jno
add
add
add
loop
mov
clc
in
cmp
clc
adc
add
push
add
and
add
add
cmp
add
cltd
cmp
sub
xor
add
and
add
jl
mov
clc
sub
clc
xor
add
push
pop
out
pop
out
enter
clc
adc
add
outsl
repz
nop
lods
cmp
mov
add
jl
mov
jno
add
clc
xchg
inc
add
faddl
clc
aaa
push
cmpsl
clc
fimuls
or
in
or
pop
push
xor
add
mov
jno
add
add
add
pop
cwtl
scas
decl
adc
mov
lock
dec
mov
lahf
iret
sar
xor
add
mov
push
add
icebp
push
enter
clc
clc
bound
add
add
add
add
lea
push
clc
cmp
mov
clc
ret
cmp
sahf
or
clc
xchg
add
add
inc
clc
leave
bound
add
add
imul
cli
xchg
sahf
notl
sub
movsl
clc
in
cwtl
inc
add
test
std
mov
xchg
sbb
jno
add
je
mov
cwtl
pop
popa
add
inc
clc
push
clc
cmp
mov
cld
jo
add
scas
jl
clc
icebp
mov
clc
dec
ret
clc
add
add
add
pop
in
sub
adc
jp
adc
add
clc
pop
leave
xor
sbb
mov
pop
xchg
clc
adc
xor
sbb
inc
clc
jge
add
or
dec
movsb
clc
dec
shlb
cmc
xor
rolb
add
add
mov
fistpll
add
pop
clc
mov
add
dec
dec
push
pushf
pop
push
cmp
bound
add
aad
xor
adc
push
mov
xor
add
sub
mov
or
imul
xchg
leave
xbegin
clc
cltd
in
sub
mulb
clc
in
mov
clc
das
repz
outsl
stos
cs
insb
mov
or
adc
movsl
clc
ret
out
lea
add
add
sbb
add
clc
je
push
ror
sbb
ljmp
cltd
call
inc
add
loope
aaa
insl
jg
clc
bound
add
add
adc
add
add
fwait
mov
clc
jne
cmpsl
clc
push
add
mov
enter
fs
or
clc
in
mov
clc
enter
xchg
outsl
mov
lret
push
add
xor
clc
mov
or
mov
fisttpll
cwtl
inc
clc
jge
dec
mov
pop
jp
clc
pop
adc
jae
add
clc
ret
clc
or
inc
clc
pop
das
data16
push
inc
add
mov
repz
pop
std
cmp
sarl
push
sbb
clc
mov
add
pop
cmp
add
add
and
adc
jo
add
add
push
add
mov
xchg
cmp
or
mov
sahf
movsb
clc
pop
pop
jmp
mov
cmpsl
clc
mov
add
sbb
ss
add
and
ffree
clc
outsl
push
clc
outsl
sti
mov
jmp
inc
clc
mov
mov
notl
clc
lcall
clc
or
add
lock
clc
or
clc
or
sar
add
pop
inc
add
mov
add
gs
mov
sbb
sbb
add
clc
data16
in
or
std
mov
loope
and
add
add
clc
cmpsl
clc
mov
mov
add
mov
cmpsl
clc
jnp
cwtl
pop
push
mov
or
add
mov
hlt
xchg
jmp
sahf
in
ret
cmp
mov
jne
xlat
pop
arpl
add
out
call
and
add
outsl
lods
mov
add
cmp
popf
out
adc
add
add
jo
add
clc
sbb
add
in
jne
xbegin
clc
or
clc
mov
rolb
add
or
fcomip
jae
add
add
stos
or
pop
pop
xor
add
imul
loopne
cmp
mov
add
arpl
add
fimull
cmp
add
decb
cltd
and
add
add
sub
mov
clc
mov
add
div
loop
pushl
fistpl
lock
inc
clc
call
add
out
push
add
clc
mov
clc
mov
add
clc
insl
push
and
add
stos
rorl
loop
jbe
add
push
push
insb
fldl
inc
add
inc
add
pop
pop
lods
out
or
ret
clc
mov
or
add
mov
adc
add
jne
aad
clc
inc
clc
cmp
mov
rclb
add
stos
movsb
clc
dec
in
xor
cwtl
jns
pop
into
dec
dec
push
mov
clc
enter
aam
or
add
adc
add
add
mov
lret
push
clc
jo
add
insl
cmp
push
scas
or
fs
sbb
push
mov
add
bound
add
clc
sahf
mov
ljmp
lods
sbb
mov
inc
add
aaa
call
sbb
add
add
add
add
mov
add
add
push
pop
clc
sub
lods
mov
add
ficoms
add
ds
add
mov
clc
daa
clc
add
push
add
sub
std
call
pushf
insb
clc
add
add
sub
clc
cmc
and
mov
lods
jmp
out
nop
icebp
lods
cmp
lret
adc
add
inc
clc
and
add
clc
push
ret
sub
add
jns
pop
sarl
inc
clc
jo
add
add
cmp
cmp
rol
clc
pop
jp
add
and
dec
out
test
loopne
xlat
mov
xchg
icebp
xchg
mov
adc
add
add
rcrb
mov
or
lods
cwtl
sti
stos
or
sbb
add
add
add
insl
enter
clc
cmp
clc
cmc
pop
cmc
imul
push
or
clc
and
add
mov
clc
sahf
mov
jnp
add
add
ja
std
or
add
fildl
clc
icebp
jle
clc
stos
mov
fisubl
clc
add
leave
or
mov
sub
dec
leave
push
in
xchg
adc
add
add
cli
or
add
add
clc
mov
clc
fwait
push
cmpsb
clc
scas
loope
jp
stos
push
add
mov
gs
cmp
cmp
outsl
clc
fcomp
stc
push
lea
add
add
mov
gs
sbb
add
cmp
jno
add
add
cmp
es
ds
sub
fmull
cmp
clc
pop
fimuls
cld
xchg
cmp
lock
mov
mov
cmp
and
add
lods
mov
jmp
sbb
push
cmp
clc
xor
add
add
add
add
into
negb
int
and
jl
es
adc
add
js
clc
jp
clc
inc
clc
imul
xchg
inc
add
add
add
cmp
jae
add
mov
cld
sbb
repz
sub
sub
clc
adc
add
addr16
adc
add
push
cld
push
pop
shrb
mov
mov
cmp
clc
nop
sub
jg
xchg
sub
add
clc
mov
add
add
test
add
dec
adc
add
dec
fsin
dec
xor
add
inc
clc
mov
in
test
mov
clc
mov
in
cli
push
clc
sub
xor
add
adc
add
sti
pop
mov
lahf
inc
clc
push
rorb
add
pusha
add
pop
fsubr
clc
add
add
sub
and
jns
outsb
and
int3
push
clc
jne
xor
add
push
cmpsb
clc
cmp
xchg
push
jecxz
adc
add
push
clc
mov
mov
icebp
or
mov
clc
jmp
imul
xor
add
adc
ss
add
jae
add
xchg
das
insb
jmp
aam
out
sub
pushl
add
dec
out
idivl
jle
xchg
or
or
hlt
inc
clc
pop
repz
push
bound
add
and
add
add
xchg
lret
xor
fwait
xchg
clc
inc
clc
in
or
clc
or
dec
sub
bound
add
mov
clc
int
clc
add
add
add
push
ja
hlt
mov
clc
repnz
mov
add
push
in
into
lcall
int3
icebp
xlat
iret
outsl
add
add
clc
div
test
clc
adc
add
bound
add
add
jecxz
mov
cmp
cli
mov
clc
pusha
add
or
add
dec
add
add
mov
cs
das
pop
xchg
outsl
jne
negb
jnp
clc
cmp
clc
mov
aad
clc
mov
clc
inc
clc
nop
add
add
add
sub
negb
add
add
ret
clc
fbld
add
lods
push
cmp
movsl
clc
loope
repnz
clc
add
add
adc
add
add
inc
add
fnstenv
iret
lret
fnstenv
add
in
mov
out
cmp
clc
insb
sub
into
repnz
add
in
arpl
add
xchg
or
sub
add
dec
fldt
mov
clc
mov
add
mov
push
fdiv
lcall
mov
push
add
mov
mov
clc
mov
clc
sub
aaa
push
hlt
insl
test
pushf
xchg
movsb
clc
xchg
mov
hlt
sub
xchg
ja
and
jns
add
dec
cmp
and
add
or
xchg
sub
clc
dec
ljmp
clc
stos
xabort
clc
jge
xchg
shlb
add
xchg
lret
jecxz
xor
mov
lahf
adc
inc
add
cltd
sub
add
clc
dec
jo
add
add
clc
jne
jo
add
in
adc
add
rorl
clc
mov
add
pop
mov
adc
add
mov
add
int3
es
scas
and
add
clc
cmp
push
adc
add
add
ret
mov
clc
jge
clc
xchg
insb
jns
and
add
sub
add
push
sar
push
add
push
lods
mov
and
cs
clc
sub
dec
adc
push
cli
push
jnp
add
and
add
lahf
xbegin
cltd
or
push
ret
add
mov
jb
add
mov
adc
add
fs
dec
cmp
clc
leave
iret
sbb
aam
out
cmp
jnp
inc
add
pop
vmulps
jp
pop
rorl
sub
in
test
push
popa
add
pop
pop
popf
sub
mov
inc
clc
fwait
ret
clc
fs
pop
clc
mov
or
pop
leave
dec
in
cld
and
add
imul
ljmp
adc
add
sub
sti
mov
cmp
clc
data16
js
ret
pop
push
add
inc
clc
dec
daa
clc
mov
sarb
fldl
and
add
clc
hlt
hlt
adc
add
insl
sar
mov
add
lods
scas
or
pop
add
add
stos
scas
scas
inc
clc
lods
pop
cs
popa
add
add
add
das
mov
clc
mov
ret
mov
pop
mov
add
add
add
add
roll
daa
clc
fcom
mov
add
cmp
push
clc
and
add
int3
popa
add
pop
aas
sarb
lods
pushf
cmp
stos
ljmp
enter
sub
add
dec
iret
mov
add
out
jp
clc
cmp
mov
clc
test
jle
clc
fstpt
pop
in
adc
add
clc
jl
mov
imul
add
add
push
add
jg
lcall
popf
mov
jmp
je
mov
mov
jbe
flds
add
sub
add
mov
clc
into
jae
add
clc
push
add
sarl
jmp
pop
clc
jle
clc
mov
add
lret
dec
mov
clc
mov
add
mov
adc
add
clc
inc
add
aas
push
add
xchg
call
insl
sub
out
in
lock
cwtl
daa
clc
out
fucomip
sahf
icebp
dec
aam
adc
add
aaa
cmp
lret
jmp
jl
clc
loope
ss
js
push
add
not
cmp
add
jmp
clc
push
add
xchg
and
add
add
clc
add
add
clc
push
add
push
add
inc
clc
pop
ret
and
lock
imul
pop
xchg
or
clc
fcmovnb
clc
pop
xchg
sbb
cld
stos
fs
pop
and
mov
add
inc
add
mov
jecxz
mov
clc
mov
out
popa
add
nop
dec
dec
dec
push
clc
gs
ficomps
dec
clc
push
jg
add
xor
add
jle
xchg
popa
add
jecxz
cmp
movsb
clc
pop
fbstp
add
push
add
dec
repz
inc
add
fs
pop
in
imul
cmp
pop
dec
and
add
xlat
ja
mov
jmp
clc
add
add
in
fwait
and
add
jge
clc
or
adc
add
jg
add
es
pop
out
das
daa
clc
popf
dec
sub
add
adc
add
mov
add
xchg
dec
cltd
xlat
sbb
cmpsl
clc
out
mov
and
add
int
clc
cli
push
add
pop
js
push
pop
cld
popl
jge
pop
jne
popf
sti
ret
pop
clc
test
repz
clc
mov
aaa
adc
add
xor
add
push
add
sbb
pop
adc
add
jmp
scas
cmc
scas
loop
sbb
clc
enter
add
inc
clc
in
js
clc
shl
xchg
fdivl
and
add
clc
aam
clc
lret
js
clc
sbb
sar
pop
jge
jbe
clc
mov
call
pusha
add
jp
clc
xchg
mov
or
fnsave
push
cmp
cmp
imul
clc
lods
rcll
add
clc
sub
enter
add
fs
pushf
pushf
sub
mov
jle
clc
pusha
add
ljmp
gs
fldlg2
in
out
jmp
add
add
lods
push
not
inc
add
lods
mov
add
nop
jp
xchg
movsb
clc
cmc
jnp
sub
je
or
mov
sbb
in
push
clc
mov
cmp
cmpsl
clc
cld
xchg
sar
add
mov
sub
clc
cli
mov
xchg
push
clc
lods
addr16
divb
add
stc
sar
add
insl
shl
lods
fs
xchg
sar
and
add
or
add
clc
sub
sub
jge
sbb
dec
cmp
add
je
cltd
dec
pop
sbb
sbb
sbb
clc
xor
clc
test
int3
mov
mov
clc
cmp
clc
inc
clc
xlat
lret
dec
cmp
adc
add
add
xabort
test
insb
hlt
jmp
clc
test
mov
clc
es
pop
cmp
ret
pusha
add
aam
jp
add
rdpmc
add
cmp
iret
mov
clc
pushf
jne
repz
or
daa
clc
out
xor
add
add
add
lcall
dec
pop
jo
add
add
in
gs
ret
jmp
lcall
pushf
mov
mov
add
clc
imul
nop
xchg
pop
adc
loope
jno
add
stos
ds
pop
ja
sbb
xor
add
clc
jmp
clc
xchg
xabort
clc
mov
clc
jecxz
jle
cmp
xlat
aas
int
das
bound
add
clc
scas
jne
clc
pop
clc
push
add
dec
sbb
out
sar
add
sbb
clc
into
push
pop
cmp
in
aam
jge
adc
clc
xchg
dec
cmp
jl
ss
clc
scas
loopne
or
mov
clc
dec
jge
es
mov
imul
push
add
mov
mov
xlat
pop
sbb
mov
cld
aam
add
xor
clc
xchg
arpl
add
sbb
jecxz,pn
mov
scas
fimuls
clc
aad
xlat
lods
test
lea
add
notb
test
add
stos
ss
leave
aam
add
shll
add
ljmp
cmpxchg
clc
mov
gs
pushf
int
sbb
clc
insl
sti
fwait
ss
clc
movsl
clc
xchg
mov
mov
insl
outsb
outsl
jge
clc
ret
add
dec
xor
add
add
jno
add
add
sub
clc
mov
push
scas
or
add
xlat
jbe
mov
add
or
negl
test
xchg
add
mov
mov
gs
xchg
dec
mov
cltd
or
jnp
add
xchg
hlt
inc
add
pop
mov
scas
imul
icebp
fwait
jl
jno
add
add
add
rcl
sbb
in
movsb
clc
and
add
clc
cmp
fildll
inc
clc
cmp
clc
jge
out
xchg
jle
add
add
ret
clc
and
dec
mov
and
add
xchg
out
sub
inc
clc
inc
add
inc
add
adc
add
arpl
add
add
lock
dec
mov
das
push
add
jmp
or
pop
inc
add
xabort
pusha
add
js
add
aam
clc
jae
add
mov
int3
jl
rcll
push
add
mov
jmp
clc
scas
test
test
cmp
clc
cmp
add
flds
clc
daa
clc
ja
out
and
add
jmp
add
add
clc
mov
sub
jne
sti
jl
inc
clc
test
pop
inc
add
icebp
lcall
cmp
cli
and
add
or
push
sar
push
test
push
clc
in
pusha
add
das
outsb
or
clc
push
pop
repz
std
lock
mov
scas
sub
pop
notl
adc
nop
dec
add
add
clc
idivb
inc
clc
lods
js
dec
in
imul
clc
jb
add
add
loop
sbb
testb
add
clc
xor
add
jno
add
dec
movsl
clc
dec
std
ss
fidivrs
outsl
and
mov
add
inc
add
sub
jae
add
clc
xchg
sbb
jmp
jp
loop
cmp
clc
jno
add
lcall
cmp
xchg
xchg
idivl
cmp
dec
push
add
clc
and
add
add
stc
fs
or
add
add
add
mov
in
pop
sar
jmp
push
add
shrb
outsl
fsubs
clc
add
add
mov
mov
push
movsb
clc
aaa
cmp
clc
clc
or
or
add
adc
pop
and
scas
lock
ja
add
inc
add
add
add
inc
add
nop
in
incb
add
cmp
enter
add
pushf
daa
clc
push
mov
addr16
push
add
data16
xor
add
sub
dec
or
clc
and
add
mov
add
xor
push
or
flds
jecxz
cmp
lea
or
mov
xor
clc
mov
push
clc
adc
add
clc
ret
clc
outsb
xbegin
lret
dec
or
cmpsb
clc
mov
lahf
pop
clc
inc
add
push
add
data16
fcomps
mov
clc
xchg
arpl
add
jmp
xchg
fistps
das
dec
mov
add
rclb
add
pushf
cltd
jecxz
inc
clc
adc
add
fnstsw
clc
push
add
inc
add
add
add
add
clc
stos
in
pop
jae
add
sub
clc
scas
lods
cmp
shll
arpl
add
lods
mov
add
rorb
xor
cmp
add
jp
dec
gs
lods
imul
add
xchg
int3
icebp
jbe
add
pushf
pop
adc
add
add
add
xchg
xchg
repnz
adc
add
push
movsb
clc
push
sub
in
outsb
and
add
add
add
clc
insl
mov
push
out
jmp
inc
add
sbb
fnstenv
mov
mov
pop
pusha
add
push
clc
or
add
scas
mov
clc
xor
add
ror
adc
add
add
popf
jb
add
inc
clc
or
sbb
in
jmp
pop
add
add
jle
rcrl
mov
clc
scas
add
add
sbb
ret
clc
xor
clc
and
clc
sub
scas
pop
ss
in
lret
clc
lcall
icebp
jg
sbb
or
push
mov
rcr
sub
clc
lea
add
add
pop
add
add
into
pop
clc
push
mov
add
pop
pop
mov
aad
clc
jle
xor
add
add
pushf
jg
fisttpll
data16
movsl
clc
std
adc
mov
or
cmp
clc
xchg
cmp
repz
add
add
fstp
insb
call
dec
pop
push
add
add
clc
jb
add
push
add
mov
clc
inc
add
pop
xchg
mov
clc
in
loop
pop
jmp
add
xabort
sub
clc
jecxz
adc
add
sbb
insl
inc
clc
cmp
clc
cmp
xchg
jo
add
aas
movsl
clc
inc
add
mov
test
aaa
leave
inc
add
out
push
jecxz
cs
add
clc
add
add
push
add
and
add
in
and
add
sarb
es
sbb
add
add
clc
cmp
add
bnd
clc
movsl
clc
ret
clc
sbb
cmp
cmp
dec
rcl
dec
xchg
test
test
rcr
inc
add
inc
add
sbb
add
mov
clc
dec
cmp
push
inc
clc
add
add
clc
add
or
or
clc
add
add
add
push
add
mov
clc
and
add
jnp,pt
clc
fs
fisubrl
jp
xor
add
icebp
jne
sar
jge
lea
add
call
pop
fs
cmp
clc
and
add
jmp
addr16
movsl
clc
jns
in
push
cmpsl
clc
inc
clc
xabort
add
in
cmp
clc
mov
mov
mov
clc
int
pop
lret
add
ja
jmp
push
test
cmp
add
jp
clc
aaa
pop
pop
into
sbb
aas
fcmovnb
clc
mov
add
add
jo
add
pop
xchg
add
add
pushf
sar
clc
cmp
push
xchg
push
popf
outsb
xor
add
ss
mov
add
clc
xchg
push
sub
stc
sbb
sbb
xchg
adc
pusha
add
inc
add
jmp
push
add
adc
add
mov
jge
clc
mov
clc
test
ds
sub
add
cmp
inc
clc
inc
clc
inc
clc
cmp
cmp
clc
imull
fistl
add
in
mov
clc
mov
add
ret
fst
inc
add
daa
clc
pop
jge
icebp
sub
clc
test
daa
clc
inc
add
inc
clc
dec
sahf
sbb
clc
clc
aaa
pop
mov
stos
mov
add
add
lea
cmpsl
clc
sub
xchg
lods
mov
cmp
clc
pop
mov
mov
add
jl
push
fisubrl
test
pop
lods
cmp
push
cmc
mov
mov
fcoms
add
jle
clc
fdivrl
clc
int
clc
jl
movsl
clc
aad
clc
fmul
aam
mov
clc
jl
clc
mov
int
clc
jae
add
clc
dec
fldenv
add
add
clc
stos
dec
jmp
jb
add
add
fwait
xor
add
xchg
fnstcw
mov
scas
sbb
add
das
in
push
imul
ret
clc
cmpsb
clc
aad
rorb
sbb
sub
cwtl
je
xchg
fwait
cmp
clc
aas
bound
add
sub
clc
push
clc
mov
js
cmp
mov
or
xchg
fnstenv
clc
dec
adc
add
aam
add
add
dec
push
push
test
arpl
add
clc
sbb
js
pop
push
aam
clc
jo
add
gs
lock
add
inc
clc
dec
fcomps
fstpt
xchg
xor
add
popa
add
ljmp
lods
jecxz
lea
clc
inc
clc
add
add
ret
jg,pn
clc
mov
or
test
add
add
out
cwtl
mov
and
add
xchg
cwtl
mov
imul
jp
clc
out
movsl
clc
test
add
add
dec
shlb
add
cmp
rorb
clc
inc
add
sbb
add
add
add
add
jb
add
add
mov
add
sbb
fimuls
add
xor
add
or
sbb
js
pop
sbb
arpl
add
pop
or
add
xlat
inc
clc
js
dec
int3
sarb
scas
jnp
clc
out
or
sbb
or
add
fmull
add
cmpsb
clc
mov
and
add
add
or
add
add
clc
dec
adc
add
add
das
xchg
adc
add
cmp
add
icebp
add
add
sbb
add
pop
outsl
test
sbb
iret
or
clc
sti
xchg
xchg
cltd
jbe
cmpsl
clc
out
out
movsl
clc
jecxz
lcall
xchg
out
je
mov
mov
mov
clc
jne
add
jg
and
arpl
add
add
add
in
dec
movsl
clc
mov
inc
add
inc
add
adc
cmp
mov
sub
push
jo
add
icebp
loopne
dec
or
mull
add
add
mov
mov
clc
data16
stos
rcll
jno
add
or
clc
adc
add
out
xabort
sub
movsb
clc
pmulhw
ljmp
sar
clc
jo
add
jns
pop
or
add
in
repnz
sarb
popa
add
pop
std
jp
inc
clc
cld
test
clc
inc
add
aas
push
das
push
add
daa
clc
sti
test
call
cmp
cmp
stos
pushl
add
and
add
push
add
push
add
popf
loopne
xchg
mov
das
gs
inc
add
mov
ret
clc
cmp
setno
stos
add
sahf
dec
cmpsb
clc
pushf
add
add
and
add
sbb
clc
jecxz
js
add
fldl
movsb
clc
mov
fcmovnu
xchg
outsb
xor
add
add
jno
clc
fs
cmp
shrl
jmp
cmp
clc
scas
cmp
push
lock
add
xor
add
add
and
test
scas
inc
add
or
add
mov
xor
or
add
xor
xor
add
pop
clc
aaa
push
add
sbb
clc
jno
add
jno
add
clc
adc
add
clc
xchg
bound
add
inc
clc
cmp
enter
jge
xor
add
mov
nop
sub
ss
clc
adc
arpl
add
push
add
xchg
cltd
shll
rorb
and
add
add
add
adc
add
clc
jecxz
aas
xchg
and
add
add
aaa
jne
and
add
add
jl
movsb
clc
cwtl
repnz
mov
or
clc
push
adc
add
xabort
clc
mov
pop
out
jge
ret
clc
das
adc
add
ss
clc
mov
scas
jae
add
add
addr16
in
adc
add
clc
mov
movsl
clc
lock
loope
imul
test
clc
shll
add
clc
jl
imul
add
jae
add
add
xchg
movsb
clc
adc
add
xor
clc
repz
add
add
jno
add
add
out
push
sub
sbb
iret
pop
iret
cld
int
out
push
add
test
pop
ja
add
pop
add
add
add
pushf
push
lret
mov
xor
add
ret
add
in
xchg
outsb
push
mov
inc
clc
stos
and
in
ds
jo
add
add
add
sbb
or
add
jo
add
add
add
or
add
mov
scas
mov
insb
pop
incb
add
add
iret
negl
add
xchg
or
add
movsb
clc
mov
jge
add
sub
fcomi
xchg
mov
imul
jne
add
rcrb
fistps
dec
lret
sub
fidivrs
and
dec
out
hlt
popa
add
mov
jb
add
aam
sar
clc
jp
test
push
cmp
dec
cmp
push
cli
mov
inc
clc
push
or
mov
jno
add
pop
jnp
dec
sbb
add
movsb
clc
repnz
pop
mov
fstp
xlat
mov
mov
testb
inc
add
sbb
add
pop
vmovaps
mov
clc
jg
jle
clc
push
add
in
sub
lea
inc
add
pop
js
dec
lcall
clc
clc
adc
add
push
pcmpgtw
jge
xchg
mov
repnz
add
inc
add
arpl
add
add
clc
into
fadd
clc
cltd
xchg
push
rorb
aad
and
add
outsl
mov
clc
xchg
push
enter
repz
mov
clc
hlt
and
adc
add
sbb
clc
sbb
mov
add
pop
out
iret
xor
add
add
out
mov
mov
clc
stos
dec
xor
add
pop
clc
mov
add
add
mov
push
add
or
lcall
leave
ror
pop
cwtl
cmp
add
ret
clc
fcompl
decl
or
xchg
ds
js
clc
insb
scas
popa
add
es
add
add
or
popa
add
lock
loop
push
mov
clc
mov
shll
clc
adc
cmp
clc
sbb
jbe
in
push
push
cmpsl
clc
mov
call
mov
clc
xor
cld
nop
cltd
push
popa
add
jl
inc
clc
push
add
mov
bound
add
mov
push
mov
add
or
add
add
push
jle
jbe
sar
clc
int
sbb
dec
icebp
jno
add
push
add
jl
add
lcall
inc
add
std
jg
or
test
clc
loop
insb
jb
add
add
sub
sbb
mov
clc
int
add
je
mov
aas
cmpsb
clc
and
das
cwtl
fs
jg
scas
cwtl
daa
clc
or
mov
add
cli
xchg
jo
add
add
jecxz
mov
das
js
cli
fwait
ret
clc
push
add
mov
fnstsw
sub
cltd
jne
sub
cwtl
push
add
scas
outsl
pushf
and
add
mov
clc
sub
clc
cmp
outsb
jno
add
data16
roll
add
sbb
add
test
push
sub
mov
push
sti
leave
inc
clc
cmp
dec
pop
xabort
clc
in
popa
add
xbegin
loop
jecxz
ficoml
jle
jae
add
js
clc
hlt
pop
jl
clc
inc
add
cwtl
lods
rorb
ja
bound
add
sbb
mov
add
mov
clc
test
cmp
add
jl
add
insl
dec
test
imul
clc
scas
adc
add
add
mov
mov
leave
je
mov
fwait
xchg
jge
daa
clc
inc
add
fdivrl
clc
clc
js
push
sub
mov
cs
into
or
clc
shrl
in
iret
pop
cmpsl
clc
sub
adc
add
aad
mov
push
xor
add
cmc
clc
cltd
jg
clc
fsincos
mov
dec
and
add
add
add
xchg
add
add
add
clc
mov
push
test
xor
add
add
insb
in
insl
ss
cmp
lret
clc
xchg
arpl
add
jbe
cli
ss
loop
or
xor
add
cmp
test
sbb
test
jo
add
add
jp
add
std
and
add
std
outsb
mov
clc
mov
push
add
bound
add
loope
clc
int
cmp
add
pop
mov
sbb
push
cmp
add
nop
out
int
clc
cmp
dec
stos
stos
push
add
out
cmp
aad
jmp
add
hlt
and
lock
add
movsb
clc
add
add
clc
and
jge
clc
xlat
xchg
pop
fistpll
add
sub
call
sbb
xor
add
add
in
mov
add
mov
clc
xor
add
clc
sbb
push
in
fwait
xbegin
clc
xor
jp
clc
mov
jnp
sbb
leave
cmp
sub
pop
sub
mov
mov
adc
clc
sub
adc
pop
clc
sar
add
cltd
xchg
xchg
add
add
jecxz
mov
add
xlat
dec
cmp
out
rorl
mov
sbb
push
arpl
add
xor
clc
test
cmp
push
clc
sahf
psubw
cltd
clc
sti
enter
sub
clc
mov
and
add
add
add
lock
add
mov
jge
dec
mov
stos
xchg
out
ret
adc
add
pop
sub
clc
mov
stc
sub
clc
xchg
ret
sub
xor
add
pop
adc
add
add
fmull
add
cs
inc
clc
jp
leave
sbb
add
add
add
rclb
push
insl
mov
clc
fisubs
add
in
test
clc
mov
stos
loope
addr16
lcall
in
cmc
or
mov
jp
xchg
movsb
clc
or
add
rorl
out
repnz
lahf
icebp
in
inc
clc
and
mov
daa
clc
js
lock
mov
inc
add
ret
clc
lahf
jae
add
add
or
clc
mov
clc
push
outsb
ret
pop
mov
clc
call
repnz
sbb
clc
dec
call
clc
lret
insl
in
daa
clc
dec
push
nop
mov
add
test
clc
ret
clc
add
add
cmpsl
clc
ljmp
into
add
add
add
jns
xchg
cmpsl
clc
stos
inc
clc
repz
nop
xchg
jne
in
dec
cmpsb
clc
stos
int3
pop
push
add
jne
clc
adc
add
clc
xchg
stos
cwtl
jmp
cmp
sbb
rol
clc
mov
adc
add
mov
popa
add
btc
clc
test
movsb
clc
mov
clc
cmpsl
clc
sub
add
test
add
pop
mov
add
nop
in
dec
dec
mov
add
pop
clc
add
add
dec
and
mov
clc
dec
int3
or
clc
mov
clc
sahf
xchg
adc
add
xchg
push
or
mov
aas
movsb
clc
sbb
mov
hlt
sbb
clc
pop
mov
add
mov
clc
and
add
add
in
push
xchg
lcall
ret
cmp
add
pushf
cmp
rorl
push
clc
lcall
clc
sar
lahf
mov
test
stc
cli
xchg
push
add
loope
je
scas
fisubl
lea
push
fs
ja
adc
add
add
sahf
lock
ds
lahf
in
mov
or
and
aas
jp
mov
clc
fdivr
jb
add
xbegin
jmp
je
clc
and
add
add
pop
aam
add
or
clc
ret
clc
stc
xor
add
clc
mov
xchg
cmp
push
clc
test
xchg
jae
add
xlat
push
gs
call
fisttpl
push
add
cwtl
push
add
add
add
add
insb
jb
add
add
data16
clc
scas
mov
movsb
clc
xchg
sbb
xchg
popa
add
dec
mov
dec
sbb
push
xor
add
jmp
lock
add
mov
test
es
push
cmp
test
js
clc
jbe
fucom
clc
pop
clc
fidivs
sti
cmp
pop
ficomps
scas
jae
add
pop
clc
pop
loop
lods
mov
arpl
add
clc
ljmp
add
add
push
sub
sub
cmp
add
adc
call
stos
sar
mov
add
out
stos
cmp
sar
adc
add
fisttps
pop
bound
add
or
clc
test
cs
loopne
cmc
js
icebp
sub
pop
adc
add
add
cmp
add
and
add
mov
cmp
cltd
adc
add
clc
xchg
jbe
clc
cltd
ja
clc
mov
das
outsb
mov
incb
inc
clc
xchg
daa
clc
movsl
clc
clc
cltd
adc
clc
inc
add
divb
mov
xor
clc
daa
clc
scas
imul
add
clc
fisubrl
inc
add
out
inc
clc
mov
idiv
and
dec
adc
decl
fidivrs
dec
imul
mov
clc
test
and
clc
int
pop
cmp
clc
in
xchg
hlt
push
add
sahf
xabort
add
cmc
jmp
lcall
clc
cmp
cmc
sbb
addr16
in
xchg
clc
jmp
in
rorl
clc
xchg
sub
clc
mov
add
add
cmp
add
push
jle
fiadds
or
fdivs
cmp
clc
xchg
mov
test
push
add
ficompl
sar
ds
clc
cli
ds
clc
add
loopne
inc
clc
cs
das
ljmp
aad
jl
lret
clc
mov
pop
cmpsl
clc
int3
push
ret
add
push
pushf
rep
je
add
mov
cmp
cmpsl
clc
imul
cmp
add
dec
pop
sub
adc
add
sbb
mov
mov
clc
inc
clc
push
push
clc
fstl
add
pop
inc
clc
clc
sbb
or
push
xchg
sbb
xor
add
clc
dec
movsb
clc
fucom
clc
mov
lods
push
inc
clc
mov
xor
add
inc
clc
in
inc
add
jge
clc
add
add
push
lock
clc
gs
cmc
cmp
inc
clc
insb
leave
repnz
sub
sar
cmpsb
clc
sbb
pop
negb
xchg
pop
inc
add
push
add
pop
add
hlt
lret
sub
pop
jne
xor
add
add
add
add
sbb
cmp
xor
add
lret
jle
adc
add
add
clc
scas
jo
add
scas
jmp
jecxz
add
add
add
adc
add
stos
pop
adc
add
add
add
push
push
add
js
sub
clc
out
cmp
insb
int3
xabort
pop
jbe
jb
add
inc
clc
jmp
out
fiadds
sar
rorb
pop
xor
add
mov
fsub
clc
jg
clc
dec
push
clc
dec
out
mov
es
cmc
dec
lret
jmp
mov
popf
ds
adc
add
dec
mov
clc
hlt
fdivrl
lahf
jo
add
xchg
jb
add
ss
dec
mov
inc
clc
jb
add
inc
add
jb
add
add
lcall
clc
add
add
add
mov
add
inc
add
mov
clc
xchg
push
add
xchg
mov
clc
add
add
clc
out
sub
clc
xchg
adc
add
gs
std
das
es
xor
add
test
dec
ret
clc
enter
jnp
data16
pushf
cmpsl
clc
xchg
das
push
ja
clc
aaa
leave
jne
jmp
cltd
das
jb
add
add
rcrb
inc
add
jns
ret
clc
mov
jnp
clc
dec
sub
add
out
dec
mov
add
jb
add
add
cli
ficoml
add
cmp
rorl
movsl
clc
xor
clc
imul
clc
insb
insb
sbb
add
scas
in
ss
sbb
inc
clc
adc
add
sar
cmpsb
clc
or
incb
add
out
push
add
xchg
aas
das
popf
fcmovbe
pop
and
add
int3
scas
sar
clc
leave
int3
mov
cltd
mov
in
xor
xchg
bound
add
add
clc
popf
dec
dec
movsb
clc
add
add
or
data16
push
clc
fidivrl
jg
add
or
aas
dec
aas
rcll
sbb
adc
add
sar
aas
or
add
xchg
sarb
in
jl
or
add
mov
clc
add
add
and
add
sub
test
add
ja
push
push
xor
inc
clc
adc
add
clc
lahf
mov
clc
stos
push
cmp
clc
jecxz
addr16
jge
push
aam
add
xchg
int
cmp
inc
add
push
add
mov
cmp
add
cmp
clc
cmp
test
and
mov
add
add
or
inc
clc
outsl
inc
clc
mov
add
and
add
clc
sahf
cmpsb
clc
stc
mov
pop
add
add
sub
clc
lock
lea
xor
add
add
add
pop
or
add
daa
clc
xabort
push
inc
add
mov
int
xchg
lahf
pop
clc
frstor
add
clc
and
add
clc
mov
push
xor
add
push
mov
and
add
cltd
pop
sub
dec
mov
xchg
outsl
inc
add
dec
cmpsb
clc
ds
mov
add
or
add
clc
push
clc
aaa
in
addr16
dec
cmp
jmp
mov
add
jb
add
add
enter
or
add
lea
clc
xor
clc
xchg
jmp
int3
ret
add
and
xchg
cld
repz
add
push
mov
inc
clc
push
clc
sar
add
dec
push
add
fnstcw
into
sahf
fs
mov
xor
add
add
in
stos
push
cmp
xchg
push
push
add
test
repnz
add
clc
dec
pushf
or
clc
clc
push
add
scas
jno
add
mov
or
clc
jmp
hlt
xchg
jne
mov
and
add
add
inc
add
in
ss
push
cmpsl
clc
dec
mov
in
sar
imul
test
cmp
fmull
stos
mov
xchg
mov
sub
mov
mov
add
pop
jle
movsb
clc
jb
add
add
pcmpgtw
arpl
add
ret
clc
movsb
clc
cltd
dec
xor
add
mov
clc
pusha
add
mov
add
int
gs
pop
fldcw
jle
js
xchg
scas
loope
and
add
xchg
iret
popa
add
pop
cmp
mov
clc
mov
testb
out
jecxz
push
add
push
mov
sub
fimull
jg
fwait
in
mov
jmp
add
jo
add
add
clc
jl
out
dec
cmpsl
clc
mov
add
clc
mov
clc
stos
mov
sti
in
lret
add
add
add
popa
add
stos
ljmp
mov
add
push
add
add
add
icebp
mov
aaa
adc
add
add
jg,pn
jns
clc
int
jno
add
push
scas
jge
add
dec
push
in
sbb
add
and
add
fs
scas
push
fs
or
add
add
pushf
cmp
xlat
rcr
adc
add
add
mov
cltd
loopne
push
jecxz
lahf
ret
cmpsb
clc
and
add
movsl
clc
addr16
movsl
clc
push
clc
add
add
mov
add
xchg
cmc
filds
inc
add
mov
jno
add
mov
clc
push
jg
clc
sbb
clc
cltd
lret
jne
and
pop
stos
xor
add
imul
imul
loop
sub
add
imul
or
add
jbe
add
jae
add
ret
clc
pop
fwait
clc
jmp
add
pop
ret
clc
aam
lret
push
clc
mov
add
sub
cmp
add
aaa
mov
lret
adc
clc
jno
add
push
clc
mov
insl
add
add
lret
data16
jge
add
add
cs
idivl
ja
outsb
mov
loop
fidivs
int3
jl
or
and
add
clc
shll
push
clc
fnstcw
mov
cmc
sti
mov
mov
repnz
clc
or
aam
negl
dec
inc
add
in
xor
add
hlt
dec
sbb
cmp
jle
cltd
pop
xor
add
xor
add
cmp
add
out
lods
cwtl
and
dec
pop
ds
clc
adc
add
pop
dec
rcll
add
sbb
cmp
mov
add
insl
jecxz
into
adc
add
clc
push
mov
add
cmpsb
clc
sbb
bound
add
mov
clc
inc
add
sbb
mov
add
cmp
clc
cmp
jecxz
jecxz
gs
xor
in
xchg
sub
mov
clc
or
inc
add
or
fwait
in
push
aas
mov
movsb
clc
icebp
add
add
ljmp
xchg
mov
dec
cmpsl
clc
clc
push
scas
adc
add
clc
or
add
clc
pop
lahf
cmp
mov
test
dec
push
out
dec
jns
pushf
xor
add
add
in
sbb
movsl
clc
mov
xor
add
das
mov
or
add
xchg
sub
add
cmpsb
clc
mov
imul
add
add
pop
or
clc
pop
xlat
repnz
stos
sbb
clc
in
lret
inc
clc
sar
sub
push
lahf
repz
popa
add
loope,pt
shl
clc
cmp
xor
add
add
sbb
jbe
cmc
in
aam
clc
jmp
mov
add
imul
test
and
add
clc
push
mov
mov
clc
mov
add
iret
ljmp
mov
ja
adc
add
add
jge
lret
aas
mov
mov
or
push
inc
clc
enter
add
sbb
push
add
pop
clc
fdivl
add
add
add
clc
xchg
lcall
stc
jo
add
cmc
mov
outsl
adc
add
add
xchg
push
mov
inc
add
push
add
xchg
shrl
stos
xchg
mov
popf
fmuls
pop
jns
and
add
clc
incb
add
dec
inc
add
adc
add
es
int3
mov
jbe
mov
push
and
add
mov
push
repz
adc
add
out
sub
add
add
add
clc
xchg
jle
pop
cmpsb
clc
pop
leave
sbb
nop
jns
icebp
stos
adc
ljmp
jmp
fstl
add
xor
add
mov
clc
pushf
fidivl
add
inc
add
cmp
mov
in
pop
out
jp
hlt
outsb
xbegin
rcrl
mov
mov
xor
pop
ret
clc
ja
and
div
pop
clc
rorb
xchg
and
inc
add
lods
pushf
pop
jge
sbb
jle
or
out
mov
sub
and
add
jbe
add
jo
add
mov
sbb
fnstcw
fdivrl
testb
add
add
fmull
popa
add
daa
clc
test
leave
mov
lods
ret
clc
lret
into
dec
pop
popa
add
sub
in
sbb
dec
mov
jne
clc
push
cli
and
add
out
test
add
mov
add
cmp
push
fwait
insl
cmpsb
clc
mov
jae
add
clc
es
mov
add
mov
cmp
clc
mov
clc
adc
add
push
lods
in
das
mov
inc
clc
arpl
add
sub
ss
adc
add
add
jo
add
xbegin
add
mov
add
jge
mov
pop
mov
sub
mov
cltd
and
add
mov
clc
pop
aam
outsl
cli
xor
add
add
add
cmpsb
clc
je
inc
add
sub
push
and
add
loop
jno
add
clc
cmp
sbb
add
clc
std
jo
add
leave
insl
jns
clc
xlat
cmp
cmp
rolb
add
pop
sub
add
cmp
add
stos
imul
sbb
add
pop
sub
mov
fsubs
add
gs
inc
clc
sub
jo
add
and
cmp
sub
add
add
and
add
push
add
and
add
clc
cmp
dec
push
clc
pushf
adc
add
push
add
pusha
add
sub
adc
cs
mov
imul
or
out
sti
loope
jbe
inc
add
in
mov
mov
push
pop
dec
lea
add
clc
arpl
add
pop
in
dec
push
add
push
aam
xchg
fldt
fbld
int3
clc
push
mov
add
out
push
add
ljmp
add
mov
into
insb
dec
arpl
add
js
add
movsl
clc
xor
add
add
sbb
xchg
nop
inc
clc
cmc
and
add
cmpsl
clc
popa
add
out
or
sahf
mov
insb
jle
xchg
add
int
dec
dec
sar
clc
xbegin
clc
ret
clc
js
addr16
in
or
aad
pop
scas
add
add
add
imul
add
mov
and
add
push
add
add
add
cmp
add
decb
add
and
add
xbegin
clc
mov
add
mov
clc
fwait
loope
pop
or
add
sbb
clc
in
stos
mov
sbb
fcomip
cmp
stc
push
mov
repnz
add
mov
push
jp
add
push
jg
jmp
clc
push
add
pop
push
add
movsb
clc
hlt
std
movsl
clc
and
add
add
clc
xchg
decb
add
sub
clc
mov
shll
push
add
mov
add
push
mov
inc
clc
dec
fistpl
sub
clc
mov
in
jnp
add
add
mov
test
fstl
int3
in
in
push
add
add
xchg
xchg
mov
movsb
clc
or
add
xor
add
add
add
add
sub
cmp
clc
push
testl
gs
sti
cli
cmp
push
lods
rolb
mov
out
lret
sub
ret
clc
ljmp
fs
jns
out
pop
mov
lahf
dec
test
add
jmp
arpl
add
or
clc
aad
aaa
sahf
std
or
insl
clc
cmp
mov
sbb
and
and
add
sar
pop
je
cmp
cltd
cmp
add
adc
add
clc
ret
int3
sbb
mov
add
mov
clc
add
add
jge
mov
clc
adc
xor
add
imull
clc
xchg
cltd
lret
mov
clc
inc
clc
ror
cmp
pushf
jno
add
xchg
push
movsb
clc
mov
ror
mull
dec
out
xabort
mov
mov
xabort
cmp
dec
inc
clc
push
xchg
and
add
clc
mov
push
inc
add
push
and
clc
pusha
add
inc
clc
fs
mov
add
stc
pop
xchg
sub
or
ss
dec
adc
add
add
clc
jb
add
clc
jnp
inc
clc
jp
clc
leave
xchg
jnp
push
daa
clc
ljmp
arpl
add
add
inc
add
loop
xchg
das
mov
add
add
dec
scas
lret
nop
cmp
xbegin
add
add
fisubs
test
clc
adc
add
stos
es
xchg
popf
cmpsb
clc
sbb
dec
push
je
clc
jo
add
nop
bts
push
roll
adc
add
sbb
clc
fs
rcl
int
clc
dec
cmpsl
clc
ljmp
add
add
cmp
jno
add
cwtl
pop
movsb
clc
jno
add
cwtl
data16
mov
and
add
xchg
push
pop
pop
test
clc
jb
add
iret
xchg
adc
add
add
dec
fidivl
xchg
fsubrs
mov
and
lock
push
cmp
clc
aad
clc
pop
xabort
clc
xbegin
add
add
outsl
scas
sub
xchg
lods
dec
data16
sbb
jmp
add
or
fs
into
pop
iret
lock
xchg
or
pop
jae
add
push
add
push
add
or
add
fwait
jb
add
clc
or
clc
pop
es
pop
addr16
jns
add
cli
inc
add
xor
add
mov
dec
pop
mov
lret
clc
or
and
add
std
mov
adc
add
outsb
loopne
bound
add
inc
clc
cld
inc
clc
data16
cmp
ret
clc
nop
xchg
or
fcomip
test
call
test
pusha
add
xchg
or
clc
cmc
cltd
add
add
in
add
add
xchg
lock
mov
clc
cs
clc
cmp
clc
or
rcrl
ret
inc
clc
xor
add
push
add
dec
nop
push
leave
popa
add
and
mov
jnp
add
inc
add
add
add
add
mov
add
add
add
mov
clc
or
aam
add
or
add
clc
iret
insb
jnp
clc
or
inc
add
test
insb
data16
sbb
clc
sar
add
sub
fsts
add
in
or
add
add
out
arpl
add
clc
dec
sbb
push
jne
out
out
pop
cmpsb
clc
sbb
clc
add
add
clc
push
hlt
lahf
pushf
cs
fstpt
jge
clc
xchg
xchg
ja
sub
clc
sub
cmp
int
clc
add
add
pop
push
movsl
clc
dec
xor
add
lret
arpl
add
inc
add
dec
dec
push
cmp
xchg
testb
addr16
aam
add
lcall
cmp
jecxz
push
pop
lock
push
jge
pop
gs
stos
repz
stos
inc
add
divb
add
inc
add
cs
add
pop
jp
clc
hlt
jecxz
inc
clc
xor
clc
mov
xchg
pop
loopne
push
dec
addr16
sti
xor
sbb
mov
ret
clc
sar
clc
cltd
push
add
and
add
sub
xor
add
lods
xor
add
add
add
clc
inc
add
xbegin
daa
clc
pop
fsubrs
add
add
clc
sub
add
pusha
add
clc
mov
vmread
add
repnz
stos
xchg
jno
add
adc
add
adc
add
pop
ds
or
imul
cmp
sub
add
dec
aad
mov
jp
clc
test
pop
fsubrp
dec
jge
clc
cli
cmp
xchg
shrl
fdivl
xor
add
add
outsl
daa
clc
jb
add
add
xlat
mov
sbb
clc
lcall
adc
add
add
jns
push
clc
jo
add
bound
add
out
and
add
mov
push
mov
clc
notb
xchg
push
xchg
daa
clc
repz
out
jl
add
cmp
add
or
clc
mov
adc
add
xchg
pushf
xor
add
dec
push
pop
mov
clc
inc
clc
lret
test
and
add
sub
clc
dec
xabort
add
inc
clc
mov
lods
popf
leave
lea
push
xchg
sub
or
loopne
dec
enter
lcall
jmp
into
ret
add
adc
add
add
mov
add
js
pop
mov
cmp
clc
cmp
clc
mov
xor
add
add
add
clc
clc
sub
add
mov
lcall
lock
pop
insl
sbb
clc
in
cmpsl
clc
int3
sbb
add
fcomps
sti
inc
clc
xchg
jp
xchg
lcall
clc
jno
add
dec
loope
imul
fisubs
add
or
add
push
sbb
or
loope
or
lret
test
cmpsb
clc
rolb
bound
add
mov
add
add
inc
add
clc
loop
sbb
add
je
clc
and
add
test
or
sub
clc
xor
add
scas
adc
add
scas
loop
push
add
enter
clc
addr16
clc
and
add
sbb
push
add
clc
mov
and
add
mov
cld
stos
test
ljmp
add
add
add
lea
test
out
fstl
add
sub
clc
jl
insl
cmp
mov
clc
stc
inc
clc
fidivrl
and
add
xor
add
aas
loop
dec
pusha
add
out
cmp
add
mov
in
clc
add
add
out
icebp
cmc
mov
pop
add
add
jge
sub
gs
cwtl
pop
out
lea
mov
add
inc
add
sbb
add
movswl
add
ljmp
std
mov
clc
xor
add
push
clc
push
add
test
rcll
ret
clc
rorb
inc
add
adc
movsb
clc
mov
jns
clc
mov
lret
cmp
sub
push
add
aaa
add
add
clc
lea
jecxz
push
add
and
add
add
aas
fsqrt
pop
bound
add
add
sub
fwait
mov
cmp
sbb
add
pop
mov
ret
clc
gs
arpl
add
jo
add
add
and
inc
add
adc
add
add
add
xchg
dec
in
mov
or
fdivl
clc
dec
sub
clc
push
movd
mov
add
insb
divb
add
add
clc
sti
sub
pop
mov
mov
fnsave
out
mov
xchg
pop
jne
bound
add
clc
push
sti
push
jecxz
inc
clc
inc
add
mov
ret
clc
add
add
or
clc
adc
add
es
add
add
add
jns
add
insb
cli
mov
xor
add
repnz
inc
clc
mov
in
sbb
pop
aad
add
outsb
sbb
xor
cld
push
and
add
clc
mov
mov
ja
ja
daa
clc
mov
cmp
clc
cmp
add
dec
dec
or
repnz
clc
lcall
push
add
or
push
ljmp
pop
jg
xchg
clc
pop
pop
clc
pop
repnz
and
add
clc
xor
add
mov
xor
add
mov
push
push
cmp
mov
push
clc
icebp
jg
cmpsl
clc
and
add
clc
xor
add
insb
aas
sahf
hlt
xchg
xchg
popa
add
xor
add
es
