inc
pop
sbb
div
sbb
aaa
aaa
cmp
cmp
repz
cmp
shr
arpl
out
call
mov
imul
and
rep
sub
out
out
out
out
out
out
lea
out
out
mov
lcall
xchg
xchg
xchg
rcl
xor
loope
loope
loope
mov
out
out
out
out
out
out
sub
mov
rcl
rcl
rcl
rolb
add
bound
inc
inc
out
out
out
jp
icebp
icebp
out
out
iret
iret
iret
iret
iret
stos
loop
jns
out
mov
add
add
and
lods
lods
push
shrb
je
cmp
dec
dec
dec
aas
aas
lret
in
in
push
push
jno
jno
push
or
pop
pop
pop
lret
rcl
rorl
xchg
pop
popa
popa
popa
popa
popa
pop
pop
pop
sub
or
js
js
push
aaa
aaa
aaa
aaa
shlb
inc
inc
inc
inc
inc
mov
mov
into
into
xchg
mov
sub
fmuls
jecxz
mov
addr16
fs
outsb
outsb
gs
lds
and
xor
repnz
push
push
es
nop
nop
nop
es
jnp
jnp
push
push
test
jge
jecxz
cmc
cmc
mov
mov
mov
out
pop
pop
out
mov
repnz
ljmp
push
push
inc
push
push
ljmp
insl
insl
add
add
add
arpl
sub
sub
fcomp
popa
ret
popf
std
std
std
std
shll
aaa
aaa
aaa
aaa
lahf
addb
mov
mov
fwait
fwait
mov
out
out
push
sti
stos
fidivrs
adc
sub
test
insl
xchg
xchg
ret
ret
ret
cmc
cmc
mov
xor
sub
decb
or
push
sahf
dec
adc
push
push
push
cmp
sub
fidivrl
mov
rol
roll
insl
insl
insl
lret
lret
sbb
adc
inc
inc
mov
out
out
imul
mov
fwait
fwait
pop
imul
rcl
ret
leave
mov
sbb
sub
iret
iret
iret
adc
lea
jae
jp
mov
mov
mov
mov
cmpsl
cs
mov
push
nop
nop
mov
sbb
leave
leave
leave
leave
leave
leave
or
or
out
xor
lret
lret
lret
out
repz
mov
fiaddl
ret
ret
ret
out
imul
mov
lock
adc
adc
mov
inc
inc
popa
popa
dec
icebp
out
adc
mov
fwait
fwait
fwait
fwait
sti
rorb
cs
pop
out
mov
xchg
xchg
xchg
ja
leave
leave
xor
call
xchg
call
sub
scas
scas
scas
scas
lret
inc
inc
inc
inc
inc
inc
inc
mov
sbb
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
rol
inc
jb
xchg
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
test
imulb
in
fcmovu
fcmovu
fisubl
mov
imul
inc
inc
out
out
out
inc
xchg
xchg
out
mov
pop
and
mov
addr16
xor
adc
push
push
jmp
and
pusha
push
adc
jmp
jmp
sbb
sbb
sbb
inc
lods
addr16
clc
xor
push
mov
mov
rol
ret
ret
push
pop
mov
mov
dec
fstl
xchg
xchg
into
pop
pop
or
daa
daa
daa
mov
es
jmp
mov
test
insl
insl
pop
lea
jmp
cmc
cmc
adc
adc
mov
xchg
xchg
clc
clc
or
sub
enter
inc
inc
inc
addl
ljmp
sub
mov
pop
pop
jge
cmpsb
cmpsb
cmpsb
add
xor
jle
push
jne
lahf
and
and
mov
test
fwait
push
lods
lods
xchg
xchg
dec
shl
jb
test
ljmp
rcl
rcl
rcl
rcl
rcl
and
xchg
int
test
adc
aad
jle
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
icebp
or
or
cli
cli
cs
in
mov
inc
ljmp
test
outsl
xchg
es
lods
lods
lods
lods
and
and
push
mov
rcll
add
add
hlt
sbb
sbb
inc
inc
inc
inc
inc
inc
fcomp
fcmovnu
div
scas
div
div
div
rcl
mov
mov
stos
stos
dec
dec
aaa
aaa
sub
jl
das
pop
pop
dec
mov
scas
scas
jbe
les
and
pop
pop
pop
lahf
lahf
lahf
lahf
lahf
lahf
enter
pop
out
sahf
addb
pop
sub
sub
call
loope
jb
inc
fdivl
mov
adc
add
pop
lcall
mov
sub
out
out
out
mov
push
sub
imul
inc
addl
dec
out
mov
ret
lahf
jg
outsb
jmp
out
lods
lods
je
je
fsubl
and
push
jmp
les
add
sbb
jle
int3
int3
pop
pop
loop
or
or
or
jns
ss
mov
and
or
pusha
mov
pop
cli
cli
cli
add
mov
adc
add
inc
inc
adc
cli
cli
cli
cli
sub
lcall
test
test
cs
in
push
and
fwait
out
xchg
mov
mov
xchg
das
mov
or
and
and
mov
jle
jle
jle
jle
dec
dec
dec
dec
mov
pop
pop
jno
stos
stos
js
mov
mov
mov
mov
aam
push
lret
imul
inc
inc
pop
pop
pop
pop
lea
cmp
fcmovu
fcmovu
fisubl
lcall
out
rcl
xor
xor
xor
cwtl
pop
pop
pop
pop
pop
pop
pop
outsb
outsb
xor
mov
jb
xor
mov
mov
pop
scas
adc
adc
or
imul
loopne
daa
daa
push
push
scas
scas
sbb
mov
ss
unpcklps
adc
lods
mov
mov
data16
ja
mov
in
mov
sub
sub
sub
and
repz
loope
loope
imul
xor
sub
sub
sub
sub
adc
divb
xchg
xchg
push
mov
adc
adc
leave
mov
pop
fcoms
adc
push
push
push
push
push
dec
pop
popf
sbb
sbb
xchg
xchg
xchg
mov
dec
dec
dec
cmpsb
cmpsb
data16
fwait
fwait
fwait
movsb
into
into
push
push
adc
pop
das
mov
cli
cli
cli
cli
cmp
std
add
insl
in
mov
xor
jno
add
jecxz
jecxz
jecxz
or
dec
dec
dec
dec
dec
cmpsl
and
jl
add
sub
sub
add
push
lock
aad
div
mov
je
je
in
add
mov
mov
push
push
push
icebp
sbb
sbb
ret
outsl
outsl
stos
stos
stos
adc
add
add
xor
js
js
aaa
aaa
aaa
aaa
aaa
aaa
xor
enter
pop
pop
leave
shlb
jecxz
jnp
stc
stc
stc
stc
mov
sub
cmp
push
or
sub
mov
xor
xor
cmp
sub
sub
xchg
xchg
mov
or
xchg
adc
or
or
cmc
cmc
shl
jbe
imul
jge
jge
ss
icebp
icebp
imul
call
xorl
add
lret
or
xchg
ljmp
enter
fnstenv
mov
push
push
dec
dec
jl
out
out
out
outsb
cltd
cltd
dec
shr
in
push
xlat
sbb
ret
fnstcw
fcmovnu
gs
mov
mov
dec
cmc
inc
mov
adc
adc
add
add
add
xor
xor
add
popa
popa
popa
popa
popa
vmread
cmp
mov
cmp
pop
pop
addl
insb
pop
sub
mov
push
push
push
sbb
sbb
scas
addl
test
rcl
icebp
icebp
icebp
icebp
icebp
icebp
jle
mov
mov
fildll
icebp
and
and
xchg
call
push
push
data16
pushf
pushf
pushf
lahf
lahf
dec
dec
mov
pop
pop
push
cli
cli
test
push
push
push
push
push
popf
testb
pop
pop
rcl
mov
leave
leave
lods
inc
inc
sub
lods
lods
lods
add
js
fadd
shr
in
mov
call
or
cmp
jmp
repnz
pushf
rcr
fbstp
out
out
out
popa
popa
popa
popa
arpl
movsb
push
push
push
push
push
dec
dec
inc
inc
repz
gs
das
pop
pop
pop
data16
ret
loop
loop
and
and
adc
loope
loope
loope
call
andb
pop
pop
out
cmp
cmpsl
cmpsl
and
xchg
adc
fcoms
cltd
cltd
cltd
cltd
adc
push
push
jns
push
push
push
push
ss
pop
adc
lea
sub
sub
add
jecxz
jl
jl
jl
sbb
cmc
jmp
cmc
mov
mov
inc
dec
mov
mov
out
out
mov
mov
xor
in
in
in
jne
sbb
push
push
inc
inc
inc
roll
add
add
add
mov
repz
add
mov
in
in
in
in
in
push
loopne
jne
je
je
je
mov
clc
clc
mov
movsl
adc
xor
xor
xor
xlat
sti
mov
sub
add
inc
sub
insb
lds
sti
sti
sti
aam
insl
insl
insl
mov
jae
cmp
cmp
sbb
idiv
inc
mov
movsb
loopne
mov
sti
pop
add
rol
sahf
popa
inc
inc
out
sub
aad
nop
nop
nop
jb
mov
fsubs
xchg
rcl
shl
adc
inc
inc
div
div
stos
stos
stos
xchg
test
pop
iret
daa
aam
sbb
in
scas
mov
pusha
pusha
jae
inc
inc
out
mov
ret
ret
ret
ret
ret
ret
lea
push
cwtl
cwtl
xchg
sahf
sub
lret
lret
data16
inc
inc
scas
int
xchg
shrb
ror
lret
sbb
hlt
mov
js
test
repnz
and
ss
iret
iret
pop
mov
cmp
add
add
lret
rol
sbb
push
push
push
push
push
arpl
dec
dec
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
fwait
fwait
clc
rol
rol
jb
jb
push
push
push
push
push
push
push
jb
arpl
inc
inc
inc
dec
js
js
cmp
sbbb
aam
jl
jl
jl
mov
push
inc
imul
imul
rcl
stos
ret
xchg
xchg
xchg
fidivl
pop
pop
add
mov
push
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lods
cltd
cltd
push
push
push
push
test
mov
xlat
js
js
aas
aas
aas
hlt
hlt
hlt
adc
mov
push
jl
jo
sarl
cmp
cmp
das
cmp
out
ds
sub
test
inc
pop
adc
rcl
rcl
rcl
icebp
icebp
ret
daa
pop
xlat
mov
sbb
sbbl
push
push
nop
nop
mov
icebp
xor
xor
jae
jae
mov
rcl
rcl
add
pop
addl
mov
and
and
or
or
repz
rcl
dec
or
or
jmp
ljmp
lret
in
in
out
out
out
out
out
xchg
jno
jno
or
rcll
adc
fistpl
stos
stos
cmp
out
pop
pop
jo
xchg
xchg
jge
xor
fmuls
mov
lret
dec
xchg
xchg
test
cli
cli
jl
jl
fnstcw
jns
cs
jne
jne
jne
xor
mov
hlt
hlt
hlt
hlt
jmp
ds
dec
dec
xor
push
push
pusha
or
and
add
sti
lret
or
in
in
aad
aad
jb
fstpt
pushl
mov
mov
mov
ljmp
lret
lret
lret
xor
sbb
sbb
sbb
aas
nop
aam
add
aam
and
push
push
jne
aam
aam
fcmovu
ficompl
test
sbb
or
or
out
or
mov
ret
mov
mov
xchg
cmp
cmp
lret
inc
inc
inc
lea
mov
mov
cmc
jl
scas
scas
sbb
add
mov
mov
jl
jl
jl
int
es
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
imul
clc
or
or
fimuls
xor
pop
pop
mov
cwtl
inc
insb
insb
insb
mov
mov
jmp
or
jno
jno
jno
xor
adc
push
push
push
daa
sub
push
stos
xor
xor
loopne
and
ljmp
sub
sub
cmp
aaa
pusha
pusha
pusha
push
decb
jg
mov
pop
daa
daa
daa
daa
daa
push
and
and
mov
push
push
push
sbb
push
sti
sti
sti
sti
sub
mov
lahf
scas
scas
scas
sbb
xlat
xlat
fidivrs
pop
pop
sbb
cmp
cmp
cmp
dec
dec
in
or
adc
mov
cmp
jmp
int
push
fs
test
push
in
in
repnz
xchg
loop
loop
loop
jno
cld
mov
repnz
or
pop
pop
pop
pop
pop
pop
pop
mov
stos
stos
push
push
push
sahf
aas
xor
subl
mov
lock
in
mov
inc
inc
inc
sti
lods
sbb
aam
hlt
hlt
fwait
fwait
fwait
div
testb
sbb
sbb
lcall
repnz
push
push
push
pop
pop
inc
test
test
test
in
in
in
in
mov
into
sti
jb
xchg
xlat
xlat
idivl
inc
cmp
cmp
stos
stos
stos
test
iret
out
mov
mov
ljmp
mov
mov
mov
pop
lods
hlt
hlt
hlt
hlt
daa
daa
lret
cld
cld
pop
sub
sub
hlt
hlt
or
and
and
add
ret
out
out
pop
jae
jae
stos
stos
jo
jo
jo
mov
cli
cli
cli
jge
addb
leave
leave
xchg
fdivrs
adc
and
and
and
js
data16
xchg
ljmp
je
pop
xchg
addl
fisubs
arpl
roll
push
enter
lods
lods
lods
lods
mov
jl
stc
loop
add
jmp
out
cmp
cmp
jmp
mov
lret
lret
mov
stc
jns
jns
sbb
mov
sub
xchg
xchg
add
movsb
cwtl
and
jbe
mov
into
pop
pop
enter
or
cltd
cltd
pushf
pushl
jb
sbb
in
insb
out
or
data16
es
mov
hlt
push
push
push
push
push
xlat
xlat
xlat
xlat
shlb
gs
cmpsl
lea
pop
pop
pop
ss
stos
test
or
or
fcoml
les
pop
int3
int3
int3
addb
inc
test
jns
or
or
sub
repnz
jge
jge
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
and
and
jge
jge
fwait
inc
xchg
mov
mov
outsb
dec
dec
mov
pop
inc
inc
repnz
cs
and
icebp
xchg
or
inc
test
cmpsb
xor
xor
inc
xchg
xchg
xchg
push
cmp
outsl
outsl
outsl
jg
in
in
in
gs
mov
div
scas
scas
scas
testl
mov
lea
and
pop
pop
push
fwait
fwait
pop
lods
lods
lods
lods
mov
test
out
out
lds
cmp
cmp
cmp
cmp
cmp
negb
sti
and
jae
sahf
sahf
sahf
sahf
push
push
insl
insl
insl
insl
insl
insl
stc
stc
stc
stc
stc
stc
bound
sub
sub
push
cmp
dec
xchg
test
test
add
movsl
and
mov
sbb
dec
dec
dec
xor
icebp
icebp
icebp
mov
pop
pop
pop
ljmp
mov
mov
or
or
add
add
loopne
pop
pop
push
xchg
mov
dec
dec
sbb
xchg
rcl
rcrb
xor
test
mov
inc
inc
inc
rol
lds
inc
inc
inc
in
in
xchg
cltd
jb
pop
sub
sub
pop
pop
pop
pop
pop
incl
lods
lods
lods
sub
mov
out
out
aas
aas
nop
xor
sub
inc
xor
jecxz
jecxz
jecxz
bound
and
push
add
xor
addb
or
pmulhw
in
outsl
outsl
outsl
outsl
jl
xchg
xchg
xchg
xchg
or
out
xor
lock
mov
into
xchg
or
sar
stc
stc
inc
inc
inc
daa
loope
loope
iret
inc
nop
jmp
add
add
inc
inc
inc
imulb
sub
xchg
xchg
xchg
bound
bound
das
xor
pmaxsw
out
out
fidivrs
aas
aas
out
dec
stos
stos
jns
push
inc
inc
inc
add
js
jg
repz
les
movsl
movsl
into
into
loope
cmp
and
xchg
pop
aaa
aaa
mov
and
push
push
inc
jbe
push
push
into
inc
sbb
adc
gs
or
aam
aam
aam
lods
lods
lods
mov
out
out
out
out
push
push
push
xor
movsb
bound
incb
push
push
push
push
jmp
xchg
mov
push
cmc
lock
add
mov
mov
jo
cmp
pop
push
rol
sarb
push
push
push
pop
pop
pop
mov
mov
fstp
loopne
loopne
jne
jne
jne
jne
jne
jne
test
daa
daa
daa
cld
adc
stos
stos
test
leave
leave
leave
push
push
rcl
sub
jecxz
imul
imul
fwait
addb
test
jo
rcl
rcl
test
arpl
fstp
and
mov
fimuls
or
sub
fcomp
fcomp
das
inc
inc
inc
addb
jmp
insb
repz
div
testb
dec
dec
dec
inc
inc
les
sbb
dec
insl
scas
scas
out
ss
ret
ret
xor
sbb
sbb
cwtl
xchg
xchg
xchg
inc
jbe
fistpll
mov
cmpsl
cmpsl
out
sti
rol
rol
add
clc
xchg
inc
inc
inc
popf
sub
int
xor
cmc
cmc
ja
jnp
jnp
push
fisubs
into
rcl
and
jmp
dec
dec
dec
xchg
popf
mov
iret
iret
bound
fs
test
inc
xor
xchg
lret
addb
push
pusha
fs
rcl
shrl
outsl
outsl
outsl
outsl
outsl
lods
dec
test
cmp
dec
dec
push
push
push
cmp
and
and
and
and
and
fdivl
mov
pop
xchg
xchg
imul
imul
push
push
push
sbb
mov
or
or
sbb
cs
mov
add
in
js
subb
fprem1
add
mov
pushf
cwtl
or
adc
sub
sub
sub
sub
sub
sub
popl
jne
jne
cwtl
push
mov
mov
cmp
rcl
rcl
rcl
stc
stc
stc
stc
stc
stc
stc
mov
sbb
mov
ss
das
das
div
negb
ficompl
popa
in
in
add
out
out
addb
js
aas
xchg
mov
add
xchg
xchg
lahf
repz
in
pop
pop
pop
lock
mov
mov
pop
pop
pop
jae
loop
loop
bound
xor
jae
xchg
rcl
rcl
mov
ds
sahf
xor
gs
sahf
sahf
cmp
pushl
insb
insb
insb
xor
xor
stc
stc
stc
leave
mulb
daa
mov
out
out
leave
leave
dec
dec
dec
dec
dec
dec
daa
daa
daa
daa
daa
sub
xor
xchg
xchg
xchg
xchg
jmp
sub
jno
jno
jno
jno
jno
repz
mov
mov
adc
int
bound
mov
push
push
fcom
call
mov
cltd
cltd
sub
lea
jp
lret
lret
lret
out
out
out
out
out
sub
sub
inc
inc
inc
inc
or
andb
gs
mov
pop
pop
rcrl
ss
mov
in
sbb
xchg
mov
shll
fcomp
fsubs
outsl
outsl
xchg
push
pop
je
test
insl
lea
cli
cli
cli
cmp
cmp
and
repnz
test
fcmovu
jg
insl
push
adc
adc
adc
push
out
or
or
or
and
and
jge
jns
aad
aad
div
dec
dec
add
je
cmpsl
dec
cmp
cmp
inc
ss
out
out
out
popf
popf
popf
popf
popf
popf
popf
lods
lods
or
pop
pop
pop
pop
cld
cmp
movsl
cmp
rcl
rcl
test
pop
shll
or
iret
jmp
xor
movsb
movsb
movsb
movsb
push
push
push
xor
std
sti
sti
add
iret
cmp
cmp
cmp
cmp
test
into
lea
sub
sub
sub
ss
into
pop
pop
pop
ret
stc
loope
stos
mov
dec
xor
rcl
ds
push
push
push
xchg
xor
xor
mov
aas
sbb
les
push
push
and
aad
jmp
inc
inc
inc
inc
inc
lahf
lahf
lahf
lahf
mov
popl
pop
sbb
cmpsb
jge
mov
mov
arpl
arpl
into
negl
inc
inc
inc
inc
inc
inc
imul
enter
test
test
cld
lret
lret
push
push
push
push
push
push
lcall
bound
cs
cmp
cmp
cmp
dec
dec
dec
int
andl
int
pop
outsb
outsb
outsb
movb
and
and
mov
data16
sub
mov
mov
fs
in
aam
dec
dec
dec
dec
dec
in
rcl
js
js
scas
scas
scas
scas
icebp
icebp
icebp
pop
das
ja
ja
ja
inc
cs
pusha
pusha
pusha
pusha
ljmp
dec
ja
xchg
jecxz
rol
add
sub
in
in
in
aaa
aaa
mov
lahf
mov
pushf
pushf
xor
inc
aas
scas
ret
ret
mov
aas
stos
stos
stos
outsl
scas
scas
scas
scas
out
div
pop
dec
xor
xor
fcmovu
fisubrl
add
cmpsl
cmpsl
cmpsl
xchg
sbb
vpunpcklbw
out
out
push
push
push
popf
popf
popf
add
fldcw
sub
fisttpll
dec
movsb
movsb
movsb
mov
mov
rep
lods
in
in
in
out
out
out
out
out
or
sbb
adc
pushf
dec
dec
mov
addr16
sbb
sub
loop
loop
loop
loop
loop
xchg
insb
mov
mov
fidivs
jbe
popf
popf
pop
pop
out
stc
mov
mov
add
xor
loopnew
mov
sub
sbb
popf
sbbb
xor
push
aad
add
add
adc
add
rcrb
mov
mov
cs
fdivrp
in
xor
cwtl
into
dec
add
sub
mov
add
lods
sbb
dec
add
adcl
test
mov
stc
xor
test
pop
sbb
lret
pop
loop
cmp
mov
clc
lea
add
add
mov
add
fisubs
xchg
rcr
mov
add
cli
outsl
adcl
test
sub
outsl
cwtl
add
adc
movsl
inc
add
test
add
jp
std
mov
add
inc
cwtl
sar
push
add
loope
mov
les
ljmp
mov
bound
cmpsl
filds
xchg
aam
inc
add
out
add
mov
mov
icebp
push
adc
subl
add
mov
mov
add
int3
outsb
add
pushf
popf
add
cmp
imulb
add
or
cmp
stos
mov
scas
or
lea
add
std
mov
out
fwait
dec
xor
add
out
cmpsb
xor
sub
je
cld
loope
ficoms
sbb
add
xorb
sahf
dec
or
data16
and
fisttpl
add
sub
sub
seta
add
scas
into
jecxz
mov
cs
dec
add
adc
dec
add
add
cwtl
mov
ja
call
add
pop
jecxz
mov
add
int3
inc
add
adc
mov
arpl
sub
lods
mov
pop
dec
adc
mov
pushf
inc
dec
mov
cwtl
push
add
add
add
jmp
add
add
add
jb
xor
add
lahf
icebp
out
add
dec
push
add
repnz
mov
add
and
sbb
add
jbe
enter
pop
and
or
pop
add
jmp
add
jnp
sbb
add
sbb
push
add
cli
addb
and
inc
add
and
xchg
inc
add
add
dec
xchg
sbb
mov
add
inc
mov
sub
add
add
add
add
and
lcall
push
add
add
dec
add
jnp
xor
cmp
cwtl
sub
push
add
xor
xor
sbb
mov
pop
add
or
jns
xchg
pop
je
in
test
push
aad
mov
xor
aam
test
iret
push
push
in
add
mov
jno
add
sbb
add
or
inc
add
imul
push
aam
pop
mov
mov
inc
add
jne
jno
mov
adc
popl
sbb
aad
add
add
or
dec
add
sbb
mov
inc
add
mov
in
aad
mov
add
dec
add
push
add
ret
shll
pusha
add
out
sti
lahf
sbb
test
mov
add
add
mov
sbb
cmp
aaa
xchg
leave
or
xor
add
pop
add
xchg
inc
adcb
xor
pop
add
add
pop
and
add
bound
pop
mov
add
lcall
xor
push
add
pop
pop
jp
add
dec
add
or
inc
cmp
cmp
add
add
int3
mov
add
sti
sub
add
add
bound
fs
jae
data16
mov
popf
ret
cld
add
adc
cmovle
das
adc
lahf
test
insb
add
adc
aam
cmp
adc
jmp
jb
inc
add
add
jns
bound
sub
inc
mov
add
lods
dec
add
add
sahf
repnz
rorb
pusha
add
lret
jmp
add
mov
inc
shlb
adc
jge
inc
add
sub
sti
fisubrs
push
add
mov
pop
jl
cmc
std
imul
add
xor
sub
lock
mov
call
int
mov
add
push
add
gs
add
dec
add
xchg
sub
in
imul
add
add
inc
sbb
xchg
inc
add
add
add
xor
add
add
xchg
push
add
sbbb
dec
add
push
add
mov
mov
sub
jle
add
sbb
push
mov
mov
mov
mov
mov
je
sub
dec
add
sbb
jge
add
add
add
dec
repz
add
add
add
jae
pop
push
add
lcall
pop
mov
cmp
pop
inc
lahf
dec
add
or
fcomp
icebp
imul
add
out
repnz
sub
mov
les
inc
add
enter
std
xchg
push
add
mov
les
mov
dec
add
stc
and
dec
add
mov
dec
add
jo
in
xchg
in
mov
aas
cld
jbe
sub
cmp
cmp
push
pop
add
sbb
cmpsb
mov
data16
xchg
add
lods
mov
add
xchg
xchg
inc
mov
push
add
add
add
inc
add
add
ret
add
leave
popf
add
xor
mov
or
in
call
shll
or
jmp
into
xchg
fstps
lods
mov
adc
scas
into
mov
add
pop
roll
sbb
add
add
dec
add
cmp
out
sub
popa
popa
xchg
push
add
cmp
sbb
enter
scas
das
ja
iret
fisubrl
add
in
in
or
inc
sbb
test
enter
xor
push
jle
cwtl
xchg
sti
mov
add
and
pop
add
sub
cmp
mov
jmp
mov
shrb
add
xor
push
mov
outsl
popa
mov
mov
inc
jo
xor
dec
add
inc
add
cmp
xorl
and
add
cmp
add
jmp
shrl
add
pop
add
aas
movsl
pop
add
addl
push
add
add
out
imull
push
insl
mov
add
scas
xchg
pop
pusha
add
adc
pop
fwait
jp
mov
jbe
in
es
dec
test
add
leave
mov
movsb
dec
dec
inc
xor
dec
add
inc
test
jecxz
jl
mov
dec
add
imulb
add
add
je
push
out
data16
add
bound
push
add
add
cmc
lods
pusha
add
lock
mov
add
imul
aaa
sahf
insb
add
sti
test
or
mov
push
add
jle
inc
add
mov
in
jnp
adcb
fucomip
xor
inc
dec
add
aaa
add
xchg
es
jmp
inc
xor
sbb
leave
add
call
jl
jmp
mov
outsb
add
push
add
jnp
pushl
cmc
lds
loopne
add
or
stos
push
add
add
mov
cmpb
add
add
test
add
add
out
or
xchg
xchg
cmp
inc
add
add
and
add
add
inc
add
mov
mov
add
scas
xchg
repz
add
addb
rol
rcll
cli
add
dec
jbe
sahf
jl
mov
add
add
nop
into
cmp
aaa
pusha
add
add
sbb
ljmp
rcll
add
add
mov
addl
xchg
fimuls
add
add
call
mov
push
add
add
sub
lahf
push
add
add
add
push
lods
cmpsb
mov
fsubr
dec
add
ja
add
add
dec
add
xchg
cmp
fisubs
add
ljmp
sub
add
mov
xchg
mov
jl
mov
decb
dec
fcmovbe
add
mov
jg
sub
out
and
daa
inc
add
test
loopne
icebp
mov
add
imul
jmp
add
add
push
std
push
add
add
xlat
pop
push
add
dec
movsb
insb
add
jp
mov
cmp
dec
data16
inc
add
fucomp
jp
mov
add
add
mov
add
mov
repnz
add
add
adc
pop
add
jmp
sbb
inc
adc
add
add
jne
add
jecxz
add
add
ret
add
adc
add
add
testb
mov
add
push
gs
add
imul
and
jge
xchg
cmpsl
into
leave
xchg
jne
adc
scas
push
add
lahf
sbb
xor
inc
inc
hlt
js
add
call
add
add
adc
push
add
push
add
daa
lds
test
lds
je
fildll
add
cmp
iret
stos
shl
add
mul
jnp
xor
test
mov
add
call
add
lock
aaa
pop
hlt
pop
fwait
push
out
jno
xor
ret
jge
jnp
add
inc
add
add
leave
or
and
lods
pop
shl
dec
add
add
add
xchg
hlt
xor
xor
dec
push
add
add
add
add
pop
add
mov
add
in
sbb
add
adc
add
add
push
fisttps
push
out
into
cmp
out
insl
mov
insl
sbb
adc
aam
add
add
lcall
pop
add
mov
add
inc
fadds
or
and
add
int3
jnp
xchg
les
mov
push
inc
out
add
pop
inc
add
add
add
add
add
add
scas
mov
add
mov
add
in
push
add
dec
int
mov
scas
das
mov
cmp
loopne
pop
add
rorl
adc
pusha
add
fwait
popl
add
jnp
mov
leave
mov
or
add
add
mov
xchg
jb
push
sub
les
adc
arpl
pusha
add
push
add
lods
inc
add
repnz
add
add
movsb
addl
aas
jge
mov
inc
insl
add
rorl
dec
add
sbb
push
add
ljmp
sub
mov
jno
xchg
inc
aam
jle
sbb
xor
jb
out
mov
add
add
out
cli
xchg
sti
inc
ja
repnz
fwait
lea
jae
mov
jl
push
add
add
add
add
cwtl
bound
std
xchg
pop
add
imul
es
mov
dec
test
add
data16
xorb
push
add
jle
sahf
and
dec
add
xor
es
mov
push
add
popa
into
xor
repz
arpl
or
fwait
xchg
sbb
add
add
dec
add
add
push
aaa
cmp
arpl
out
sbb
push
add
test
lret
dec
add
add
push
add
inc
movsl
mov
inc
add
mov
cwtl
imul
add
and
mov
je
adc
or
inc
bswap
mov
xchg
into
arpl
add
pop
dec
add
mov
inc
add
stos
push
add
out
mov
add
and
cmp
xchg
dec
cmp
add
push
add
pop
add
add
daa
or
or
cmp
xchg
jnp
outsb
add
jmp
mov
add
and
adc
ret
push
add
add
test
add
add
add
mov
xor
add
data16
jle
pop
aad
ljmp
add
jg
add
pop
dec
add
dec
add
mov
xchg
add
jbe
xchg
loop
adc
das
inc
add
sti
mov
add
dec
add
roll
data16
sbb
add
lea
sub
mov
or
loopne
sbb
pushl
in
mov
add
loopne
fistpl
pop
ljmp
jno
add
loopne
add
clc
movsl
bound
hlt
jne
aam
pop
enter
imul
add
daa
loopne
rorl
add
add
add
lahf
mov
in
leave
movsl
pop
add
add
add
push
inc
aad
jecxz
add
lock
mov
popf
push
add
cmc
arpl
lock
mov
and
cmpsl
ret
icebp
xor
adc
call
loopne
and
loope
movsb
cltd
push
add
add
xchg
sub
das
ljmp
mov
add
inc
add
push
add
lret
rcrb
add
test
addl
lock
add
jg
add
add
pop
div
cmpb
roll
xor
iret
popf
jl
mov
add
adc
in
iret
mov
faddp
or
mov
add
out
sub
popf
lods
sbb
sbb
icebp
lcall
add
stos
push
add
pop
add
xor
cmpsb
scas
mov
leave
lea
loopne
negl
adc
jb
test
in
add
add
dec
icebp
add
ret
negb
rorb
outsb
add
jp
mov
mov
sti
dec
and
inc
add
call
add
xchg
xchg
fidivl
add
lret
pop
add
jo
sar
pop
loop
mov
mov
jecxz
cmpsl
sbb
add
sbb
adc
adc
add
xchg
fsubp
push
add
mov
imul
add
pushf
mov
add
jge
out
shrb
jno
insl
lods
mov
call
stos
ja
add
xor
sub
xchg
jg
add
mov
das
jle
ja
rcrb
data16
adc
jo
pushf
pop
loope
fildl
add
jns
add
scas
aas
mov
data16
xor
in
mov
add
test
add
sub
sbb
les
add
sub
pop
add
add
addl
movswl
add
mov
add
out
jno
mov
lea
mov
mov
iret
xor
add
add
xor
mov
add
or
sti
mov
test
cmp
adc
ret
adc
sub
fdivl
add
add
push
add
fsubrl
iret
out
fsubp
sarb
cwtl
cmp
mov
jb
sahf
push
add
arpl
imul
cmp
lods
xchg
stos
stc
jl
clc
in
in
sub
ret
jmp
adcb
add
cli
in
jmp
add
data16
aas
aas
add
push
add
cltd
aad
add
fldl
inc
push
jb
arpl
push
add
mov
outsl
and
inc
add
add
inc
add
imul
pushf
sar
mov
dec
dec
outsb
add
xor
add
push
add
in
sbb
jle
ret
push
jno
lea
pop
add
push
add
pop
jbe
stc
jmp
aaa
std
ss
popf
mov
out
sub
mov
add
cltd
jne
divb
and
add
add
les
cli
imul
outsb
add
add
shll
loopne
outsb
add
sub
dec
add
jge
mov
pop
add
cli
shlb
dec
add
in
xor
data16
pop
mov
sarb
dec
add
mov
inc
lahf
fcmovu
xor
sbb
add
add
xchg
or
add
add
xorl
and
mov
push
sub
daa
ja
movl
xchg
pop
jo
xchg
enter
movsb
pop
add
adc
jns
add
add
inc
add
inc
add
push
add
sub
add
scas
imulb
mov
xor
xorb
mov
inc
mov
adc
fcomps
push
cmp
cwtl
mov
pop
add
pop
add
jbe
sub
fldt
mov
inc
add
cmp
fld1
pop
jno
push
add
pop
push
addb
xor
add
push
add
mov
sahf
imul
das
fsubs
scas
lret
and
lret
cmp
lods
nop
sbb
shrb
sbb
add
lret
decl
add
xchg
lods
xlat
into
mov
add
add
lcall
popf
push
add
testl
xor
jge
add
dec
add
mov
insb
add
jb
pop
add
mov
mov
inc
add
pop
ljmp
add
fcoml
setg
add
add
test
add
jbe
push
add
call
xchg
or
push
dec
add
stos
dec
add
hlt
test
or
aam
cwtl
test
insl
testb
add
add
cli
push
xchg
sbb
pop
inc
cmp
scas
cmp
or
ficomps
mov
sub
pop
ljmp
sarb
rol
iret
push
add
sbb
jmp
jmp
dec
add
add
sbb
mov
add
add
bound
sbb
or
or
sbb
mov
xchg
add
sub
pop
lret
inc
dec
call
add
js
or
out
add
mov
imul
xor
cltd
sbb
out
rcll
mov
dec
add
add
cld
cmp
push
add
pop
add
sahf
push
or
mov
rcrl
add
imul
insb
add
or
push
add
sub
add
mov
ret
fstps
sbbb
cltd
shl
mov
dec
cmp
push
add
push
lods
add
fldenv
popa
pop
add
les
add
mov
data16
insb
add
xchg
push
in
sub
cmp
fbstp
add
das
repz
cmp
lods
mov
mov
add
adc
adc
jl
add
test
fisttpll
or
fldz
sar
add
add
rol
xchg
mov
out
popf
xchg
mov
add
mov
adc
lock
add
xchg
faddl
fistpll
cmpsl
in
mov
inc
add
cmp
or
cmpsl
add
or
jmp
cwtl
outsb
add
dec
cmp
sub
nop
enter
ss
out
push
add
out
sub
shld
scas
and
mov
inc
xchg
cmc
mov
add
add
inc
xlat
lret
and
mov
jl
xor
in
push
add
add
mov
add
add
add
xorl
cmpsl
sub
push
add
fcmovb
fisubrl
add
adc
mov
fnstcw
dec
sbb
mov
jp
bound
div
inc
add
aaa
ficoml
lods
stos
sbbl
add
push
add
sub
mov
testl
rcrb
adc
popa
dec
adc
xor
dec
incl
gs
sbb
out
ret
scas
loop
sahf
jo
mov
mov
hlt
jge
add
add
push
cmp
mov
out
cmpl
mov
movsl
in
jmp
add
sbb
in
adc
outsb
add
jb
shl
jp
stos
fdivrp
rcrb
push
add
addr16
gs
roll
repnz
mov
loope
add
mov
in
add
adc
add
jnp
into
mov
xchg
pop
sahf
insl
mov
dec
add
xchg
mov
add
jp
cmp
add
imull
add
add
cltd
les
std
roll
pop
add
dec
add
xchg
add
add
cmp
xlat
scas
imul
mov
sub
push
xchg
xchg
mov
mov
add
lahf
pushf
int3
lahf
pop
add
in
fdivrs
jmp
in
inc
add
add
mov
jle
dec
mov
insb
add
pop
sub
outsl
leave
cwtl
add
ret
sbb
mov
add
out
add
and
popa
ja
jmp
xorl
add
cmp
es
cmp
fldt
inc
lret
adc
lods
in
pop
pop
add
rolb
nop
aas
xor
mov
push
add
sbb
xlat
ret
movsb
je
sbb
sub
add
or
jl
lret
mov
and
mov
out
pop
shlb
sub
add
testb
jge
add
add
aas
fcmovne
faddl
and
in
imul
add
addr16
sub
fwait
push
add
fdivrp
scas
or
push
push
add
jmp
das
inc
in
aam
or
cmpsl
mov
or
inc
add
sbb
pop
cmp
push
add
je
mov
add
inc
add
adc
add
add
add
jl
push
add
lods
cld
sarb
add
xor
pop
lret
xchg
test
rcll
xchg
cmp
or
mov
add
add
adc
dec
add
or
call
add
add
cmp
lods
notl
out
fnstsw
cld
loope
xor
xchg
push
cmp
adc
shll
add
popf
mov
mov
add
int3
and
test
add
lea
jae
pop
add
jg
mov
in
adc
push
mov
mov
sub
lea
movl
std
andl
clc
cld
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
clc
jne
mov
add
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
test
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
jmp
cmp
mov
mov
mov
inc
or
lea
lea
add
shr
lock
sub
and
cld
je
push
mov
jne
push
test
add
inc
add
call
lret
sbb
cmp
mov
jp
sub
pushf
inc
jmp
data16
add
mov
and
out
lods
scas
cmp
inc
add
adc
sbb
push
andb
sbb
nop
jle
jo
test
movsb
mov
mov
jns
mov
jae
jp
in
jmp
jl
aas
sub
add
jmp
sti
lret
aaa
out
or
push
add
mov
pop
xor
xchg
xor
es
data16
add
inc
mov
and
in
pop
add
dec
add
pop
add
lcall
orb
jns
out
cmp
xchg
in
lods
frstor
push
add
imul
repnz
add
lea
pushf
push
add
sbb
jmp
add
xor
push
pop
das
xor
pop
bound
mov
out
sbb
pop
ror
cmpsl
lret
inc
add
mov
inc
add
pusha
add
aas
jecxz
and
mov
xchg
in
das
test
lcall
inc
int
xchg
frstor
add
xor
push
cmc
inc
sub
push
mov
add
dec
add
mov
add
mov
popf
aaa
pop
add
add
push
jp
dec
add
add
or
dec
ja
sub
pop
outsb
add
clc
add
add
in
fidivrs
push
lret
pushf
test
jmp
pop
gs
mov
push
add
and
icebp
sahf
or
add
pop
pop
test
dec
stos
ljmp
add
insl
mov
pop
add
nop
and
xor
add
push
arpl
add
add
push
add
loop
rcrl
add
stos
adc
xchg
xor
pop
add
add
fisubrs
add
sbb
das
jne
rorb
out
and
test
add
or
add
xchg
cmc
sbb
mov
sbb
or
fsubl
add
sub
jg
fidivl
add
add
iret
mov
jae
lcall
mov
pop
add
push
shll
add
mov
push
add
jp
lods
rol
test
xchg
rcrl
add
rcll
jl
inc
pop
fxch
mov
pop
mov
sbb
mov
int
les
push
add
es
sti
add
sahf
lock
add
clc
mov
ljmp
cmp
add
out
add
in
add
sbb
add
out
fists
add
cmp
push
add
add
sbb
mov
add
das
ror
add
mov
cmc
out
pusha
add
repnz
jb
repnz
mov
hlt
lahf
and
out
add
xor
add
add
movsb
push
add
or
addl
add
jle
pusha
add
xor
cli
out
mov
psubusb
add
add
add
mov
add
je
push
push
adc
push
fnstcw
out
add
cmpsl
out
mov
xchg
sub
lods
arpl
or
dec
add
das
mov
or
mull
xor
daa
cld
div
test
rcll
cmp
fcmovne
mov
push
add
mov
push
add
lret
xchg
or
jnp
inc
add
fdivrl
add
sbb
gs
sbb
cmp
pop
add
orb
dec
pop
add
stos
xchg
add
jnp
dec
stc
jo
adc
cmp
sub
stos
cmp
or
push
insb
add
cltd
daa
out
add
cmp
add
jns
add
adc
test
push
sub
pop
add
or
sbb
into
sbb
scas
fnstenv
mov
lea
add
add
and
aam
test
dec
add
add
xchg
fistps
lds
cmp
jp
pop
mov
sbb
jne
shll
or
pop
aad
jnp
mov
add
cs
cmpsl
into
push
lcall
add
test
jne
dec
add
jg
pop
lock
add
mov
xor
push
add
lds
add
sub
jmp
xchg
sub
xchg
les
sbb
test
pop
jno
sub
adc
leave
xor
adc
mov
aas
bound
sahf
arpl
ficomps
and
mov
add
push
jg
add
mov
pop
fisubrs
mov
mov
lret
push
add
adc
xor
push
add
adc
sbbl
dec
mov
flds
add
icebp
push
add
int3
jge
add
lods
cld
scas
pop
push
add
mov
mov
loopne
inc
add
add
push
add
add
rolb
xor
add
in
push
add
add
gs
adc
jo
in
add
add
push
add
nop
push
add
add
adc
imull
mul
or
push
add
cmp
mov
data16
cmp
das
inc
stc
mov
xlat
jne
enter
sub
dec
jecxz
pop
add
adc
add
addb
js
pop
add
int3
shr
sahf
in
add
and
add
inc
cld
jno
add
aaa
sbb
arpl
sahf
daa
adcl
push
sbb
mov
idivb
inc
add
inc
add
add
lea
mov
add
push
call
add
into
movsl
sbb
add
ja
shll
out
out
cmpsb
mov
add
add
push
add
add
cs
test
orl
shll
and
pop
mov
adc
mov
sbb
inc
add
into
jno
sbb
jne
sbb
inc
cmp
xor
xor
mov
lahf
and
fstp
pusha
add
pushf
sub
add
push
add
mov
jecxz
ret
mov
inc
xchg
int
add
push
add
pop
add
xorb
out
jo
or
adc
add
jle
call
add
add
xchg
jns
or
pop
bound
outsb
add
add
jb
cmc
in
int3
loopne
outsl
data16
add
push
add
pop
push
add
push
add
inc
ret
enter
xchg
sbb
add
mov
adc
mov
in
mov
add
add
cmp
cli
mov
out
or
adcb
cmp
sbb
push
add
push
add
sbb
add
cltd
jp
bound
adc
fidivl
jmp
cmpsl
test
add
call
into
add
arpl
dec
dec
add
clc
push
cld
jns
sub
inc
push
add
adc
out
add
add
add
lods
inc
outsb
add
stos
inc
and
arpl
add
push
add
add
push
add
adc
lods
mov
pop
lret
add
aam
cmpsl
add
add
add
fcmove
dec
mov
xor
add
mov
dec
pop
add
mov
mov
lods
xchg
sub
add
enter
test
jns
repnz
push
add
sub
mov
add
cmp
adc
in
in
sub
add
ljmp
mov
or
jg
dec
add
push
add
mov
out
mov
add
fcoml
add
fnsave
cs
fisubrl
mov
add
fildll
add
add
sbb
incb
add
jg
add
add
aam
add
sub
add
mov
add
jle
mov
add
add
aad
sahf
sbb
or
jp
in
add
add
loopne
test
add
subl
in
das
sub
popf
fcmovb
or
adc
push
add
xchg
lods
xlat
negb
add
dec
frstor
cmc
xchg
xchg
or
std
fsubs
or
jle
test
cmp
add
add
jb
jle
xchg
scas
jnp
add
inc
jle
add
inc
inc
cmc
jle
imul
aaa
dec
add
inc
add
mov
fstpt
jge
fcomip
scas
fstpl
add
stos
xchg
out
adc
inc
add
dec
add
add
leave
sub
cmc
xor
and
add
ret
adc
dec
add
out
adc
shlb
adc
pop
add
add
aas
shll
push
add
rclb
rcrb
add
mov
mov
js
jne
add
sbb
add
mov
add
sub
pop
fisubs
cmp
mov
pop
cltd
xchg
inc
add
inc
add
dec
add
lret
in
fcompp
jecxz
aad
push
add
inc
fwait
iret
daa
mov
pop
add
sarb
mov
xor
ljmp
std
lcall
aam
mov
add
add
add
xchg
mov
add
inc
add
mov
add
add
jno
or
mov
nop
and
jge
add
data16
hlt
mov
push
inc
add
repnz
add
loopne
call
jae
call
push
add
movsb
pushf
jg
jge
sub
hlt
sbb
push
add
add
out
add
out
popa
jge
xchg
ficomps
orl
sbb
xchg
jne
outsb
add
loop
inc
add
jl
inc
icebp
les
jge
add
dec
add
add
shrl
add
in
clc
sub
movsb
mov
fildl
xor
movsb
inc
out
add
test
fnstsw
jmp
ret
shrl
add
ja
fldt
push
fwait
rol
sub
adc
ret
loope
xlat
adc
aam
add
add
insl
imull
add
add
test
das
arpl
and
stos
jmp
mov
fwait
adc
fmul
add
cmpsl
mov
stos
and
mov
daa
js
ficoml
inc
add
fildll
add
push
add
das
sahf
pop
mov
bound
out
add
roll
pop
outsl
les
iret
sub
add
mov
or
add
popf
ret
repz
add
pop
and
into
or
pop
add
lcall
call
sbb
add
call
mov
adc
sti
dec
scas
add
in
mov
repz
fildll
add
mov
push
add
adc
ret
add
dec
mov
data16
insl
jl
xchg
std
dec
add
lret
jae
add
and
shrl
push
add
push
add
jg
fldt
lret
stc
mov
xor
sub
cmp
push
add
add
scas
and
cwtl
cli
pop
push
add
int
add
mov
xchg
pop
xchg
or
in
shll
cmp
data16
mov
add
xchg
aam
push
add
add
loop
add
pushf
lret
imul
jg
jo
mov
dec
add
insl
jle
call
or
cmc
stos
xchg
mov
enter
mov
add
cltd
jnp
add
jno
mov
add
cwtl
pop
add
add
inc
add
lret
inc
add
or
add
daa
call
add
add
push
fwait
aas
add
sti
cmp
push
add
sbb
xchg
in
sbbb
or
fmuls
in
pop
lods
bound
xchg
divb
inc
add
arpl
imul
sbb
fsubs
and
push
add
insb
add
into
pop
add
fcmovbe
mov
insl
mov
add
add
cmc
frstor
mov
add
jg
repnz
or
inc
add
sub
or
mov
xchg
loope
add
jg
cld
mov
jle
stos
add
test
fidivrl
add
leave
cld
push
add
mov
stos
lret
push
add
add
sub
xor
add
enter
xchg
stos
cmp
rcrb
cwtl
imul
pop
xor
cmp
ret
jg
mov
mov
dec
fcompl
mov
cmpsb
outsb
add
pop
iret
subb
xor
cmp
in
mov
subb
cmp
out
add
cs
mov
add
dec
add
jmp
add
add
repnz
lea
loopne
decb
add
stc
pusha
add
gs
add
push
pop
add
add
dec
nopl
aaa
daa
jge
xchg
xor
add
lret
imul
inc
jge
xchg
daa
ja
inc
shl
insb
add
xchg
jmp
jecxz
loopne
ljmp
add
ret
xor
in
jns
add
add
hlt
in
inc
clc
ret
shll
mov
mov
sbb
ljmp
push
add
jae
mov
pop
clc
mov
inc
add
cmc
in
push
add
add
subb
xlat
fldl
aas
test
in
push
add
sti
cltd
mov
jae
sub
mov
or
sub
sbb
pop
add
sub
xchg
add
xchg
les
add
add
dec
add
shrb
icebp
or
test
add
add
outsb
add
mov
xor
add
pop
inc
shrl
push
insl
jne
push
add
adc
data16
xchg
add
add
adc
mov
cltd
push
add
dec
add
add
xchg
or
dec
sbb
sub
fcmove
shll
out
clc
repnz
nop
nop
jae
sub
add
cmp
xchg
clc
repnz
nop
nop
jae
add
add
cwtl
add
add
add
push
mov
xchg
ret
add
out
jge
add
fwait
add
add
add
repnz
nop
nop
jae
pop
add
adc
add
or
mov
xchg
ret
sbb
inc
add
int3
add
mov
ret
sbb
nop
jae
mov
inc
add
mov
xchg
ret
add
and
add
add
pop
ret
clc
repnz
nop
nop
jae
add
jns
sahf
mov
lret
sub
clc
repnz
nop
nop
jae
test
mov
add
add
adcb
pop
push
mov
xchg
ret
add
lret
add
add
add
dec
clc
dec
inc
clc
repnz
nop
nop
jae
add
add
add
add
xchg
jmp
aad
or
add
pop
add
inc
add
add
add
push
fwait
clc
repnz
nop
nop
jae
add
add
add
jge
clc
repnz
nop
nop
jae
add
aad
inc
fwait
add
cmp
repnz
nop
nop
jae
and
cwtl
int
sub
add
mov
dec
add
sti
pop
push
mov
xchg
ret
leave
add
sbb
pop
add
leave
mov
ret
clc
repnz
nop
nop
jae
call
add
add
nop
xchg
fistpl
push
mov
xchg
ret
add
add
test
adc
add
add
fwait
add
mov
add
push
mov
leave
nop
jmp
add
add
add
add
call
clc
repnz
nop
nop
jae
int3
fidivl
add
add
inc
mov
clc
repnz
nop
nop
jae
add
cmp
add
add
negl
add
sub
mov
xchg
ret
add
add
ret
inc
add
call
mov
xchg
ret
insb
sbb
lret
test
push
add
mov
outsb
and
add
add
jne
out
add
add
or
add
xchg
xlat
pop
clc
repnz
nop
nop
jae
mov
ret
cwtl
sbb
add
add
push
push
mov
xchg
ret
add
sahf
int
std
add
pushf
add
xor
mov
and
add
repnz
nop
nop
jae
fcmovb
add
add
fistpl
push
mov
xchg
ret
lds
add
ja
leave
mov
nop
push
mov
leave
nop
jmp
add
or
inc
cmp
push
add
pop
push
mov
xchg
ret
addb
add
adc
push
add
push
imul
cld
nop
nop
jae
add
testl
mov
xchg
ret
xchg
add
add
add
add
add
mov
adc
repnz
nop
nop
jae
add
add
add
in
xchg
mov
xchg
ret
lds
adc
jns
inc
insb
pop
add
insb
add
rep
clc
repnz
nop
nop
jae
add
add
fwait
add
cmp
add
push
mov
leave
nop
jmp
add
push
lret
push
into
fidivrl
or
mov
xchg
ret
test
add
std
jp
int3
add
push
push
cmp
add
repnz
nop
nop
jae
add
cwtl
jns
add
repnz
nop
nop
jae
out
add
pop
add
add
cwtl
and
cld
nop
nop
jae
add
add
add
xchg
add
add
rorb
add
repnz
nop
nop
jae
call
mov
fs
push
push
mov
xchg
ret
addb
inc
out
add
add
lea
repnz
nop
nop
jae
add
sbb
inc
mov
add
or
pop
call
nop
jmp
add
sahf
leave
add
movsb
sbb
pop
pop
clc
repnz
nop
nop
jae
int
add
inc
add
cmp
push
mov
xchg
ret
sub
test
add
add
add
add
data16
mov
jp
sbb
clc
repnz
nop
nop
jae
sahf
push
add
add
nop
jmp
add
pop
cwtl
leave
call
mov
clc
repnz
nop
nop
jae
jns
fiaddl
add
mov
repnz
nop
nop
jae
add
or
pop
push
add
in
arpl
cs
repnz
nop
nop
jae
push
lret
js
xor
in
leave
nop
jmp
add
add
add
jge
add
rcr
call
leave
nop
jmp
mov
add
xchg
add
sub
push
push
mov
xchg
ret
jge
add
push
add
add
test
rclb
jmp
add
int3
add
add
add
sbb
inc
call
nop
push
mov
leave
nop
jmp
out
out
test
add
add
inc
add
pop
push
clc
repnz
nop
nop
jae
fwait
inc
mov
add
xchg
add
push
mov
xchg
ret
lret
jns
int3
add
add
pop
push
mov
xchg
ret
imul
cmpb
xchg
add
mov
je
clc
repnz
nop
nop
jae
add
jne
test
add
repnz
nop
nop
jae
shrb
add
jg
mov
add
add
sub
add
add
add
cmpsl
xor
out
icebp
or
xchg
fistpl
push
mov
xchg
ret
add
cmp
xchg
insb
std
add
bound
jle
fimull
test
cmp
add
repnz
nop
nop
jae
add
int3
add
add
clc
repnz
nop
nop
jae
add
and
xchg
jmp
add
push
clc
repnz
nop
nop
jae
add
mov
add
add
pop
clc
repnz
nop
nop
jae
aad
add
pop
add
add
fld1
nop
push
mov
leave
nop
jmp
add
add
push
aas
sub
push
mov
xchg
ret
add
fwait
add
in
inc
inc
int
xchg
sbb
clc
repnz
nop
nop
jae
jge
add
add
or
pushf
ljmp
cli
clc
repnz
nop
nop
jae
add
addb
add
inc
add
add
mov
push
mov
xchg
ret
add
push
jge
std
adc
add
repnz
nop
nop
jae
add
add
mov
lea
xchg
ret
mov
ja
test
add
cwtl
push
in
fwait
push
mov
xchg
ret
add
add
sub
add
jmp
xor
test
repnz
nop
nop
jae
pop
add
adc
and
add
mov
sbb
cwtl
inc
jne
clc
repnz
nop
nop
jae
inc
int3
es
mov
clc
repnz
nop
nop
jae
push
push
add
add
xchg
add
mov
push
mov
xchg
ret
add
xchg
add
push
add
rol
add
nop
push
mov
leave
nop
jmp
add
std
add
add
ret
mov
push
mov
xchg
ret
leave
add
and
add
add
sbb
add
add
jge
add
add
ja
add
mov
test
pop
repz
clc
repnz
nop
nop
jae
push
add
fiaddl
add
pop
clc
repnz
nop
nop
jae
testl
add
imul
movl
repnz
nop
nop
jae
insb
add
add
jp
std
ret
mov
sti
clc
repnz
nop
nop
jae
adc
add
lret
pop
jge
andb
nop
nop
jae
xchg
ja
ja
and
add
add
jnp
repz
repnz
nop
nop
jae
fiaddl
add
cwtl
bound
add
clc
repnz
nop
nop
jae
inc
cmp
add
add
add
add
jns
add
add
add
sahf
inc
add
mov
test
sti
repnz
nop
push
mov
leave
nop
jmp
add
add
addb
add
clc
repnz
nop
nop
jae
add
jp
sahf
cmp
mov
jmp
in
leave
nop
jmp
and
mov
test
add
sar
repnz
nop
nop
jae
mov
inc
bound
or
push
les
add
add
repnz
nop
nop
jae
jns
mov
add
roll
adcl
mov
leave
nop
jmp
pop
add
insb
movl
mov
leave
nop
jmp
pop
call
add
es
mov
add
add
clc
repnz
nop
nop
jae
addb
add
int
add
ror
push
mov
xchg
ret
add
add
add
push
dec
push
clc
repnz
nop
nop
jae
add
cmp
aad
inc
inc
cld
cmpsl
mov
clc
repnz
nop
nop
jae
es
inc
add
add
and
shl
test
add
nop
push
mov
leave
nop
jmp
add
out
add
leave
add
cmc
add
clc
repnz
nop
nop
jae
testb
push
add
movsl
lea
nop
push
mov
leave
nop
jmp
add
add
add
insb
in
dec
add
add
sbb
push
mov
xchg
ret
testl
add
push
add
lods
and
push
mov
xchg
ret
call
add
in
add
lea
push
mov
xchg
ret
add
ja
int
add
std
xchg
cs
rol
clc
repnz
nop
nop
jae
add
cmp
sahf
add
cmp
adc
cld
nop
nop
jae
add
xchg
xchg
add
sahf
push
add
add
nop
push
mov
leave
nop
jmp
mov
add
add
add
nop
nop
jae
jns
sbb
add
mov
adc
xor
clc
sar
clc
repnz
nop
nop
jae
add
movl
cmpsl
call
nop
push
mov
leave
nop
jmp
ret
mov
mov
nop
nop
jae
add
add
ret
add
mov
clc
repnz
nop
nop
jae
aad
add
add
push
mov
call
add
in
add
lock
inc
shr
push
nop
push
mov
leave
nop
jmp
mov
add
add
testb
je
clc
repnz
nop
nop
jae
add
add
add
push
scas
pop
clc
repnz
nop
nop
jae
es
insb
ja
adc
push
movsl
push
mov
and
scas
push
add
xchg
add
and
add
add
add
add
xor
test
nop
push
mov
leave
nop
jmp
fiaddl
add
mov
add
add
adc
repnz
nop
nop
jae
add
cmp
add
mov
not
clc
repnz
nop
nop
jae
lds
cmp
add
add
in
leave
nop
jmp
jmp
test
fiaddl
inc
push
add
clc
repnz
nop
nop
jae
cwtl
aad
add
inc
inc
add
push
mov
leave
nop
jmp
add
add
and
test
inc
dec
test
nop
push
mov
leave
nop
jmp
add
xchg
push
jmp
add
out
fld1
push
mov
xchg
ret
add
add
mov
add
mov
jecxz
dec
cmp
repnz
nop
nop
jae
xchg
xchg
xchg
add
std
insl
push
mov
into
dec
xor
and
xlat
add
daa
or
imul
pop
std
hlt
add
icebp
jmp
jge
add
add
adc
lret
pop
add
add
add
repnz
nop
nop
jae
leave
add
add
add
jp
cwtl
test
mov
call
nop
jae
add
aad
add
mov
cld
nop
nop
jae
add
add
add
sahf
rolb
sub
fistpl
push
mov
xchg
ret
lret
add
add
add
lret
adc
mov
nop
nop
jae
pop
add
add
add
add
leave
jns
mov
fld1
clc
repnz
nop
nop
jae
push
in
testb
call
mov
push
mov
xchg
ret
push
add
add
add
add
add
daa
call
clc
repnz
nop
nop
jae
add
int
add
jge
push
add
cld
nop
nop
jae
inc
add
add
inc
out
outsb
add
push
clc
repnz
nop
nop
jae
sub
call
add
jp
ljmp
or
repnz
nop
nop
jae
add
pop
add
add
fwait
add
push
push
mov
xchg
ret
mov
add
add
add
push
add
push
push
mov
xchg
ret
fwait
add
add
mov
pusha
clc
repnz
nop
nop
jae
add
sahf
add
mov
push
mov
xchg
ret
or
add
ficoml
call
nop
jae
out
rclb
or
add
xchg
add
dec
push
clc
repnz
nop
nop
jae
add
and
inc
add
add
ds
fldcw
push
mov
xchg
ret
add
lret
add
add
add
nop
nop
jae
add
add
testl
xor
clc
repnz
nop
nop
jae
and
add
push
inc
mov
les
add
add
push
mov
xchg
ret
add
sbb
add
inc
add
push
add
lret
mov
clc
repnz
nop
nop
jae
add
leave
add
jmp
fwait
clc
repnz
nop
nop
jae
aad
cmpb
pop
add
mov
mov
xchg
ret
add
add
add
aad
in
outsl
fistpl
push
mov
xchg
ret
mov
inc
pop
inc
add
ja
cmp
dec
add
jno
clc
repnz
nop
nop
jae
add
std
and
cmp
std
xor
push
mov
xchg
ret
pop
sahf
add
jns
leave
movsl
je
clc
repnz
nop
nop
jae
add
add
jns
add
jne
clc
repnz
nop
nop
jae
jp
add
sahf
mov
xor
icebp
pop
push
mov
xchg
ret
mov
mov
lret
sbb
clc
repnz
nop
nop
jae
add
xchg
in
add
out
add
cmpl
repnz
nop
nop
jae
std
add
push
add
out
cmp
fld1
push
mov
xchg
ret
bound
call
add
pop
add
pop
xor
push
mov
xchg
ret
ja
testl
add
repnz
repnz
nop
nop
jae
pop
std
ja
pop
add
add
sub
clc
repnz
nop
nop
jae
add
add
add
push
add
nop
nop
jae
add
cmp
inc
add
clc
repnz
nop
nop
jae
aad
mov
inc
add
add
mov
leave
nop
jmp
cmp
push
add
int3
xchg
jmp
pushl
clc
repnz
nop
nop
jae
mov
add
add
mov
test
call
nop
jmp
add
out
mov
imul
clc
repnz
nop
nop
jae
movl
pop
push
add
add
inc
add
add
add
leave
nop
jmp
pop
add
add
add
mov
jne
clc
repnz
nop
nop
jae
cmp
add
add
mov
jne
je
repnz
nop
nop
jae
add
add
add
add
dec
jne
clc
repnz
nop
nop
jae
xchg
add
add
push
add
mov
clc
repnz
nop
nop
jae
add
imul
add
add
rolb
mov
add
clc
repnz
nop
nop
jae
int
add
add
jge
testl
in
leave
nop
jmp
push
add
add
inc
add
add
pop
push
mov
xchg
ret
add
mov
add
add
clc
repnz
nop
nop
jae
add
add
lds
test
clc
repnz
nop
nop
jae
xchg
mov
xchg
push
nop
push
mov
leave
nop
jmp
pop
add
add
add
add
out
pusha
clc
repnz
nop
nop
jae
add
pop
add
add
xchg
ret
mov
imul
add
in
sub
push
sti
add
add
nop
push
mov
leave
nop
jmp
int3
test
xchg
pop
push
add
and
add
add
add
mov
mov
inc
clc
repnz
nop
nop
jae
add
add
push
add
add
stc
clc
repnz
nop
nop
jae
adc
add
leave
aad
arpl
cld
nop
nop
jae
add
insb
sub
pop
testb
adc
cmpw
clc
repnz
nop
nop
jae
mov
mov
jae
inc
adc
nop
jmp
lds
cmp
add
jns
push
mov
xchg
ret
add
jns
add
add
add
rep
clc
repnz
nop
nop
jae
and
add
add
sbb
add
add
mov
cmp
add
push
rcrl
add
add
mov
mov
mov
clc
repnz
nop
nop
jae
inc
push
adc
add
add
cmp
ret
call
clc
repnz
nop
nop
jae
mov
add
notb
add
add
nop
jmp
es
ja
add
cmp
call
nop
jae
and
jge
push
add
push
clc
repnz
nop
nop
jae
int
mov
add
inc
add
imul
cld
nop
nop
jae
add
add
add
or
call
push
push
mov
xchg
ret
add
movl
add
or
call
repnz
nop
nop
jae
pop
bound
add
add
add
clc
repnz
nop
nop
jae
xchg
xchg
add
mov
add
push
push
mov
xchg
ret
add
ja
movl
push
add
pop
add
mov
pop
inc
add
add
lret
xchg
inc
add
add
sbbl
inc
jne
add
push
add
add
jns
std
std
add
fstpl
mov
xchg
ret
add
call
add
daa
shl
clc
repnz
nop
nop
jae
pop
push
sbb
addb
inc
mov
nop
push
mov
leave
nop
jmp
add
sub
add
push
add
add
jge
add
or
cmp
xchg
aad
add
jne
add
inc
xchg
add
push
lret
add
push
add
sbb
jnp
push
mov
xchg
ret
add
mov
add
add
add
shlb
add
sahf
out
test
stos
clc
repnz
nop
nop
jae
inc
add
add
add
jge
xchg
inc
negl
add
add
repnz
nop
nop
jae
mov
cmp
add
mov
and
push
ja
clc
repnz
nop
nop
jae
add
push
add
clc
repnz
nop
nop
jae
fiaddl
addb
add
add
cld
nop
nop
jae
add
int
add
add
add
int
pop
jae
repnz
nop
nop
jae
adc
jns
cmp
push
lods
clc
repnz
nop
nop
jae
add
add
add
cmp
nop
nop
jae
inc
add
lds
add
aad
cmpsl
test
nop
push
mov
leave
nop
jmp
lds
add
add
ja
sbb
mov
mov
clc
repnz
nop
nop
jae
add
sbbb
push
mov
xchg
ret
jns
xchg
add
aad
add
mulb
mov
nop
push
mov
leave
nop
jmp
and
sbb
std
leave
pop
add
xor
clc
repnz
nop
nop
jae
sahf
add
mov
or
clc
repnz
nop
nop
jae
add
xchg
add
add
rolb
add
add
mov
nop
push
mov
leave
nop
jmp
mov
add
adc
lods
mov
push
mov
xchg
ret
add
add
in
cmpsl
push
push
mov
xchg
ret
add
xchg
add
in
xchg
stos
clc
repnz
nop
nop
jae
add
ja
add
jns
sbb
add
fwait
push
mov
xchg
ret
add
jge
shrb
add
mov
sbb
push
mov
xchg
ret
jp
add
in
out
add
add
jecxz
inc
cmp
push
mov
leave
nop
jmp
add
xchg
add
inc
add
in
pop
ret
clc
repnz
nop
nop
jae
jp
add
add
add
testb
push
mov
leave
nop
jmp
test
lret
inc
adc
lret
sar
repnz
nop
nop
jae
add
add
pop
push
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
ja
movl
pushf
jecxz
repnz
nop
nop
jae
out
cmp
add
xchg
add
add
nop
jmp
mov
xchg
add
mov
nop
push
mov
leave
nop
jmp
idivl
sarb
mov
clc
repnz
nop
nop
jae
add
bound
jmp
pushf
jle
rcl
add
push
mov
xchg
ret
ret
sub
add
nop
nop
jae
add
add
mov
add
add
clc
repnz
nop
nop
jae
fwait
jge
insb
add
leave
add
add
sub
xchg
ret
int
add
sahf
add
or
dec
pop
push
mov
xchg
ret
add
add
cmp
sbb
scas
loop
push
mov
leave
nop
jmp
pop
jns
xchg
mov
mov
push
mov
xchg
ret
jns
xchg
add
es
lret
dec
add
decl
clc
repnz
nop
nop
jae
ret
add
ror
fwait
add
fisttps
addb
clc
repnz
nop
nop
jae
jp
add
adc
add
fld1
push
mov
xchg
ret
xchg
add
int3
add
add
sahf
add
cmc
push
push
mov
xchg
ret
test
std
leave
std
add
cmp
out
inc
add
or
xlat
fistpl
push
mov
xchg
ret
or
add
add
jns
mov
clc
repnz
nop
nop
jae
and
out
add
icebp
jmp
clc
repnz
nop
nop
jae
push
add
add
add
adc
add
inc
clc
repnz
nop
nop
jae
mov
cmp
push
ret
add
clc
repnz
nop
nop
jae
adc
test
idivl
add
clc
repnz
nop
nop
jae
add
push
add
add
clc
repnz
nop
nop
jae
mull
add
add
push
clc
repnz
nop
nop
jae
xchg
aad
ja
addb
push
add
cs
mov
clc
repnz
nop
nop
jae
adc
add
add
and
jge
jge
clc
repnz
nop
nop
jae
ja
add
add
add
xor
sbb
nop
nop
jae
testl
aad
add
add
ret
out
mov
add
add
out
jmp
or
clc
repnz
nop
nop
jae
add
push
add
add
add
add
movsb
test
orl
xchg
ret
add
xchg
mov
pop
mov
lods
clc
repnz
nop
nop
jae
int
push
cmp
add
add
add
dec
add
out
clc
repnz
nop
nop
jae
add
add
add
mov
add
push
mov
xchg
ret
pop
int3
add
sub
add
test
nop
push
mov
leave
nop
jmp
push
sub
inc
push
adc
add
mov
mov
add
push
mov
leave
nop
jmp
add
addb
sahf
pop
add
mov
push
mov
xchg
ret
cmp
add
add
add
add
add
clc
repnz
nop
nop
jae
pop
add
jns
int
add
pop
cwtl
pushf
add
mov
or
lcall
sbb
jecxz
add
mov
repnz
nop
nop
jae
inc
add
add
fiaddl
add
mov
icebp
inc
dec
es
repnz
nop
nop
jae
inc
add
pop
lds
add
repnz
nop
nop
jae
es
jns
leave
inc
push
inc
testb
jne
cmp
cld
nop
nop
jae
jge
add
sbb
int
push
add
and
clc
repnz
nop
nop
jae
bound
add
inc
inc
mov
add
leave
cs
nop
push
mov
leave
nop
jmp
add
ja
pop
cmp
add
add
aam
shr
push
mov
xchg
ret
int
cmp
aad
push
sti
add
push
mov
xchg
ret
insb
add
pop
inc
mov
add
add
cmpsb
inc
inc
mov
add
loope
add
mov
push
add
mov
clc
repnz
nop
nop
jae
add
add
int
xchg
dec
push
push
mov
xchg
ret
add
add
add
fstps
inc
add
add
aad
xchg
lret
ret
add
bound
mov
adc
add
ret
add
pop
push
mov
xchg
ret
pop
add
add
cmp
add
sbb
nop
nop
jae
add
add
mov
add
adc
pop
and
repnz
nop
nop
jae
push
mov
cmp
in
leave
nop
jmp
push
add
lds
add
push
xchg
pop
add
call
nop
nop
jae
mov
xchg
add
sbb
adc
add
nop
jmp
add
add
push
add
or
repnz
std
pusha
clc
repnz
nop
nop
jae
or
add
add
add
push
mov
xchg
ret
insb
testl
inc
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
xchg
push
sbb
add
repnz
nop
nop
jae
add
add
inc
fwait
clc
repnz
nop
nop
jae
sbb
aad
idivb
nop
push
mov
leave
nop
jmp
mov
mov
mov
add
cld
nop
nop
jae
add
or
add
je
mov
add
push
mov
xchg
ret
cmp
add
add
cld
nop
nop
jae
push
mov
add
out
add
loop
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
mov
idivb
add
add
inc
clc
repnz
nop
nop
jae
push
add
std
pop
pop
add
clc
repnz
nop
nop
jae
add
add
sbb
outsb
and
mov
xchg
ret
add
add
adc
add
add
cmc
mov
clc
repnz
nop
nop
jae
add
bound
out
add
adc
cld
nop
nop
jae
add
add
cmp
add
add
mov
clc
repnz
nop
nop
jae
or
aad
add
std
push
cmp
add
mov
nop
push
mov
leave
nop
jmp
ja
add
int3
call
add
mov
clc
repnz
nop
nop
jae
add
and
rolb
stos
mov
add
push
mov
xchg
ret
push
add
add
into
or
cmp
in
nop
push
mov
leave
nop
jmp
add
add
test
add
xor
pop
clc
repnz
nop
nop
jae
add
int3
adc
add
mov
clc
repnz
nop
nop
jae
out
add
add
mov
clc
repnz
nop
nop
jae
add
add
ja
mov
mov
xchg
ret
add
mov
inc
inc
add
push
add
fists
mov
xchg
ret
push
in
add
adc
xchg
sarb
gs
repnz
nop
nop
jae
in
jge
insb
add
jns
loope
incl
add
nop
jmp
add
cmp
add
cld
nop
nop
jae
add
add
add
adc
test
repnz
nop
nop
jae
add
lret
add
ja
clc
repnz
nop
nop
jae
add
add
add
mov
add
push
mov
xchg
ret
sarb
add
add
dec
push
clc
repnz
nop
nop
jae
int3
add
fwait
add
add
ret
fwait
clc
repnz
nop
nop
jae
in
add
std
add
add
nop
mov
add
clc
repnz
nop
nop
jae
testl
cmc
add
clc
repnz
nop
nop
jae
add
sahf
fwait
bound
add
fwait
mov
repnz
nop
nop
jae
leave
fidivl
add
call
repnz
nop
nop
jae
call
inc
lds
add
add
pop
jae
push
mov
leave
nop
jmp
add
jns
add
mov
repnz
nop
nop
jae
and
and
push
xchg
mov
xchg
ret
jge
add
jp
sbb
add
jp
int
fld1
clc
repnz
nop
nop
jae
add
ja
add
add
cmp
cld
nop
nop
jae
add
add
add
add
add
data16
cld
nop
nop
jae
add
add
mov
add
push
mov
lret
add
fbld
add
push
add
add
adc
call
nop
nop
jae
movl
jp
mov
clc
repnz
nop
nop
jae
jp
sbb
cmp
int3
jae
clc
repnz
nop
nop
jae
add
add
pop
fisubl
inc
test
add
mov
clc
repnz
nop
nop
jae
add
xchg
mov
push
add
push
clc
repnz
nop
nop
jae
add
add
add
add
fists
repnz
nop
nop
jae
add
pop
add
jge
add
add
aas
xor
clc
repnz
nop
nop
jae
add
pop
add
add
testl
add
jecxz
inc
add
ja
add
add
push
mov
add
mov
clc
repnz
nop
nop
jae
mov
add
cmp
aad
and
test
dec
add
nop
push
mov
leave
nop
jmp
int
add
int
repz
mov
lcall
add
inc
popf
cltd
js
data16
add
push
add
nop
nop
jae
add
add
lds
cwtl
add
popa
push
clc
repnz
nop
nop
jae
xchg
add
add
addb
repnz
nop
nop
jae
add
add
add
mov
lods
push
clc
repnz
nop
nop
jae
add
jge
push
cmp
add
inc
add
imul
clc
repnz
nop
nop
jae
add
leave
pop
mov
cwtl
add
add
negb
mov
clc
repnz
nop
nop
jae
add
add
add
lret
xchg
and
test
clc
repnz
nop
nop
jae
add
add
add
inc
nop
or
stos
scas
jl
nop
push
mov
leave
nop
jmp
or
mov
push
nop
push
mov
leave
nop
jmp
rcrb
add
add
xchg
fmuls
xchg
clc
repnz
nop
nop
jae
mov
add
std
fwait
add
jns
fists
repnz
nop
nop
jae
inc
lret
add
add
rorb
mov
mov
leave
nop
jmp
rolb
mov
add
cmp
push
mov
leave
nop
jmp
int
add
add
push
push
push
add
clc
repnz
nop
nop
jae
add
and
test
add
clc
repnz
nop
nop
jae
ret
add
mov
add
les
push
mov
xchg
ret
fiaddl
add
xchg
push
sub
add
add
mov
clc
repnz
nop
nop
jae
add
xchg
test
mov
clc
repnz
nop
nop
jae
mov
fiaddl
fcmove
pop
clc
repnz
nop
nop
jae
push
fiaddl
mov
movl
repnz
nop
nop
jae
add
pop
xchg
xchg
rolb
inc
add
orb
repnz
nop
nop
jae
jge
add
add
clc
repnz
nop
nop
jae
aad
inc
adc
call
int
sub
add
mov
leave
nop
jmp
xchg
add
adc
add
clc
repnz
nop
nop
jae
lret
or
add
xchg
nop
nop
jae
cwtl
test
mov
add
add
pop
push
mov
xchg
ret
int
add
add
in
cmp
push
pop
pop
clc
repnz
nop
nop
jae
inc
std
mov
and
mov
clc
repnz
nop
nop
jae
jmp
add
add
add
add
add
push
mov
xchg
ret
push
ja
mov
add
es
lcall
add
add
add
add
int
aad
jge
lret
rep
clc
repnz
nop
nop
jae
xchg
push
push
add
add
cmp
add
add
ljmp
ret
mov
add
add
add
gs
add
add
cmpb
add
push
clc
repnz
nop
nop
jae
add
add
add
add
test
cmp
mov
clc
clc
repnz
nop
nop
jae
add
add
testl
xchg
clc
repnz
nop
nop
jae
mov
cwtl
add
add
sbb
add
add
addr16
mov
add
add
add
jmp
sub
iret
dec
lods
stos
sub
sub
cld
nop
nop
jae
add
in
bound
push
cmp
cmpl
nop
push
mov
leave
nop
jmp
int
cmp
add
xchg
repnz
nop
nop
jae
aad
insb
add
bound
add
add
dec
mov
push
mov
xchg
ret
add
xchg
testb
cwtl
add
mov
mov
sub
ret
mov
mov
add
fldenv
clc
repnz
nop
nop
jae
add
ja
jns
fwait
add
xor
or
add
add
mov
cmp
fsubrs
frstor
mov
xchg
ret
lds
jmp
mov
divb
sbb
add
add
or
add
int3
add
add
add
add
inc
mov
mov
xchg
ret
ret
and
inc
adc
add
add
cwtl
add
sahf
movsb
xchg
jmp
adc
notl
add
aad
pop
add
add
test
nop
nop
jae
add
add
add
xchg
iret
add
nop
push
mov
leave
nop
jmp
jns
jmp
leave
add
xchg
push
mov
sbb
fiaddl
lret
add
add
push
pop
pop
mov
add
mov
push
mov
leave
nop
jmp
sahf
add
pop
add
cmp
mov
add
jae
inc
add
add
add
out
jmp
sub
mov
cld
nop
nop
jae
inc
add
sub
add
add
jmp
add
mov
leave
nop
jmp
add
and
mov
add
lea
clc
repnz
nop
nop
jae
fcmovb
add
cmp
sbb
lret
enter
mov
xchg
mov
dec
mov
add
add
clc
nop
push
mov
leave
nop
jmp
pop
add
add
add
mov
aaa
dec
push
mov
xchg
ret
and
std
add
inc
adc
add
ljmp
repnz
nop
nop
jae
push
add
add
sbb
mov
nop
push
mov
leave
nop
jmp
add
std
int
push
or
add
clc
repnz
nop
nop
jae
mov
pop
xchg
test
repnz
nop
nop
jae
movl
add
add
xchg
cld
nop
nop
jae
add
add
push
mov
leave
nop
jmp
add
mov
jge
arpl
sar
cld
nop
nop
jae
add
leave
add
test
push
clc
repnz
nop
nop
jae
ja
push
inc
push
add
mov
nop
nop
jae
mov
or
cmp
or
add
adc
jb
push
mov
leave
nop
jmp
es
add
xchg
add
mov
xchg
ret
add
ja
jp
add
ja
add
or
dec
add
clc
repnz
nop
nop
jae
add
add
add
shrb
nop
nop
jae
push
lds
flds
pop
addb
cmp
ret
fiaddl
push
xchg
ja
push
add
add
repnz
nop
nop
jae
int
sahf
inc
mov
jp
add
nop
push
mov
leave
nop
jmp
xchg
sahf
int3
notb
add
clc
repnz
nop
nop
jae
lret
add
add
addl
jmp
add
mov
add
pop
jne
clc
repnz
nop
nop
jae
mov
xchg
xchg
add
clc
repnz
nop
nop
jae
ja
add
rolb
mov
in
leave
nop
jmp
xchg
add
cmp
mov
and
int
scas
enter
nop
nop
jae
ret
xchg
add
ficoml
fmull
nop
push
mov
leave
nop
jmp
pop
mov
cmp
aad
lea
clc
repnz
nop
nop
jae
add
add
inc
movl
outsl
nop
push
mov
leave
nop
jmp
and
xchg
clc
repnz
nop
nop
jae
cmp
test
add
inc
add
mov
clc
repnz
nop
nop
jae
test
xchg
xchg
out
add
inc
add
push
add
pusha
bound
xchg
ret
inc
add
sbb
inc
add
add
nop
push
mov
leave
nop
jmp
add
add
out
rclb
push
add
add
inc
add
add
insb
int3
add
insl
pop
clc
repnz
nop
nop
jae
add
test
add
mov
ret
add
clc
repnz
nop
nop
jae
add
add
in
add
mov
clc
repnz
nop
nop
jae
cmp
adc
mov
add
add
leave
push
nop
push
mov
leave
nop
jmp
xchg
add
add
out
jp
add
cmp
clc
repnz
nop
nop
jae
sahf
add
add
add
into
mov
mov
xchg
ret
pop
add
sahf
mov
mov
add
add
nop
jmp
add
sahf
cmp
or
sub
in
leave
nop
jmp
add
add
mov
test
push
mov
leave
nop
jmp
add
inc
xchg
add
push
xlat
cmp
nop
push
mov
leave
nop
jmp
leave
add
and
xchg
pop
clc
repnz
nop
nop
jae
add
int3
add
add
rolb
sub
xchg
xor
clc
repnz
nop
nop
jae
xchg
add
push
pop
call
clc
repnz
nop
nop
jae
and
add
out
testb
sub
mov
add
repnz
nop
nop
jae
add
ret
add
mov
repnz
nop
nop
jae
add
add
mov
cmp
shrl
add
aad
movl
call
movswl
nop
push
mov
leave
nop
jmp
pop
add
add
ret
clc
repnz
nop
nop
jae
push
shlb
call
sbb
call
inc
add
insb
pop
add
add
add
add
add
rclb
sbb
cmp
ret
xchg
add
add
xchg
out
inc
add
or
mov
leave
nop
jmp
pop
out
and
jns
mov
push
mov
leave
nop
jmp
add
inc
pop
add
jge
rorl
leave
nop
jmp
call
add
add
xchg
add
imul
jmp
add
add
pop
sbb
leave
in
pop
add
dec
add
add
aas
nop
push
mov
leave
nop
jmp
fcmovu
add
add
push
add
push
mov
xchg
ret
add
add
int
add
add
nop
push
mov
leave
nop
jmp
inc
mov
leave
ja
cmp
mov
clc
repnz
nop
nop
jae
inc
sbb
sahf
add
out
arpl
clc
repnz
nop
nop
jae
testb
mov
das
add
clc
repnz
nop
nop
jae
sub
add
cwtl
add
add
rclb
clc
repnz
nop
nop
jae
jns
mov
mov
add
push
mov
xchg
ret
add
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
mov
add
add
test
jne
clc
repnz
nop
nop
jae
mov
fwait
jge
add
mov
leave
nop
push
mov
leave
nop
jmp
jns
add
add
add
add
add
add
clc
repnz
nop
nop
jae
add
add
and
and
sbb
cld
nop
nop
jae
sbb
and
add
ja
add
xor
nop
push
mov
leave
nop
jmp
or
adc
add
sbb
push
mov
xchg
ret
add
mov
add
cwtl
add
clc
repnz
nop
nop
jae
add
insb
inc
adc
mov
repz
mov
xchg
ret
leave
fidivl
add
jns
mov
fwait
push
mov
xchg
ret
add
add
add
movl
xor
clc
repnz
nop
nop
jae
jp
sub
and
push
add
lds
add
mov
add
imul
cmp
ret
insb
cmp
fwait
xchg
negl
mov
leave
nop
jmp
insb
lds
add
add
fistpl
clc
repnz
nop
nop
jae
cmp
pop
inc
add
div
add
cld
jo
cld
jl
sbb
repnz
nop
nop
jae
add
insb
idivb
mov
jmp
add
add
adc
aad
mov
add
add
or
mov
xchg
ret
bound
add
push
mov
xor
xor
sahf
outsb
add
dec
sub
repnz
nop
nop
jae
negl
std
sub
int
mov
pop
insl
inc
add
add
jge
adc
ret
push
mov
add
repnz
nop
nop
jae
mov
add
add
repnz
push
clc
repnz
nop
nop
jae
aad
inc
lds
add
insb
rcrb
add
push
push
mov
xchg
ret
add
cwtl
xchg
sahf
add
int
push
pop
rcr
test
clc
repnz
nop
nop
jae
add
ret
push
nop
push
mov
leave
nop
jmp
cwtl
inc
add
test
cmp
jmp
clc
repnz
nop
nop
jae
add
adc
cmp
std
jge
push
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
leave
push
int3
add
push
mov
add
pop
clc
repnz
nop
nop
jae
out
lds
adc
add
daa
pop
add
add
add
aam
add
cltd
adc
enter
add
test
pop
inc
add
add
add
add
add
add
clc
repnz
nop
nop
jae
cmp
add
mov
fwait
add
adc
fiaddl
cld
nop
nop
jae
and
xchg
and
clc
repnz
nop
nop
jae
add
add
pop
or
sbb
add
clc
repnz
nop
nop
jae
std
add
fwait
ja
fwait
clc
repnz
nop
nop
jae
ja
aad
cwtl
add
add
mov
sbb
faddl
pop
inc
add
mov
add
int3
and
add
ret
clc
repnz
nop
nop
jae
push
push
cwtl
add
add
sahf
add
call
mov
xchg
ret
push
jge
add
add
xchg
add
or
adcl
cld
nop
nop
jae
test
inc
bound
add
jns
add
dec
add
inc
in
nop
push
mov
leave
nop
jmp
mov
cmp
adc
and
enter
nop
nop
jae
xchg
mov
cmp
add
add
fiaddl
rclb
mov
and
push
add
int
lds
sub
clc
repnz
nop
nop
jae
fwait
jns
jge
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
xchg
push
mov
leave
nop
jmp
push
add
jge
add
ficoml
inc
clc
repnz
nop
nop
jae
add
add
add
lds
movsb
clc
repnz
nop
nop
jae
add
cwtl
mov
cmp
nop
push
mov
leave
nop
jmp
add
or
adc
sub
push
clc
repnz
nop
nop
jae
add
inc
sahf
mov
inc
and
clc
repnz
nop
nop
jae
add
add
add
negl
add
sub
mov
adc
push
mov
leave
nop
jmp
push
add
add
add
add
loop
add
shr
nop
push
mov
leave
nop
jmp
xchg
inc
inc
xchg
aad
add
cmp
repnz
nop
nop
jae
cwtl
pop
ret
add
in
cmp
clc
pop
xor
clc
repnz
nop
nop
jae
add
addb
add
add
addb
nop
push
mov
leave
nop
jmp
sahf
insb
add
add
fwait
out
jne
clc
repnz
nop
nop
jae
ja
push
int
roll
repnz
nop
nop
jae
add
pop
mov
push
std
es
add
mov
clc
repnz
nop
nop
jae
leave
and
test
leave
es
add
adc
repnz
nop
nop
jae
xchg
ret
jns
add
mov
xchg
ret
out
cwtl
add
ret
std
bound
mov
clc
repnz
nop
nop
jae
leave
xchg
movl
push
clc
repnz
nop
nop
jae
pop
insb
aad
cmp
ja
out
leave
mov
clc
repnz
nop
nop
jae
inc
add
inc
add
repnz
nop
nop
jae
pop
movl
add
add
repnz
nop
nop
jae
testl
add
inc
ja
out
dec
add
clc
repnz
nop
nop
jae
add
add
int3
xchg
and
int3
cmp
stos
add
nop
push
mov
leave
nop
jmp
insb
int3
or
cmp
lret
pusha
push
mov
xchg
ret
add
add
add
jns
ja
add
out
ja
loop
clc
repnz
nop
nop
jae
add
add
add
sub
repnz
nop
nop
jae
add
mov
idivb
je
clc
repnz
nop
nop
jae
inc
xchg
mov
push
push
mov
xchg
ret
add
push
jge
push
insb
push
add
mov
clc
repnz
nop
nop
jae
add
aad
push
ja
mov
fwait
push
mov
das
push
into
add
add
add
adc
xchg
add
add
sbb
cld
nop
nop
jae
add
add
push
add
cmp
jle
nop
push
mov
leave
nop
jmp
add
add
add
pop
add
ret
inc
clc
repnz
nop
nop
jae
add
add
add
xchg
insl
mov
clc
repnz
nop
nop
jae
add
add
jge
pop
add
jne
clc
repnz
nop
nop
jae
inc
add
mov
add
push
mov
xchg
ret
add
inc
add
ja
add
nop
nop
jae
add
add
ja
push
out
xchg
bound
cwtl
or
repnz
nop
nop
jae
sbb
add
adc
add
roll
push
mov
xchg
ret
add
in
mov
xchg
rclb
repnz
add
add
add
in
add
add
je
clc
repnz
nop
nop
jae
add
add
add
aad
push
mov
xchg
ret
in
add
jp
add
add
int
mov
nop
push
mov
leave
nop
jmp
ja
add
divb
mov
clc
repnz
nop
nop
jae
sbb
and
add
push
mov
leave
nop
jmp
add
add
leave
testb
push
cmp
nop
push
mov
leave
nop
jmp
mov
jmp
cmp
push
mov
xchg
ret
add
lret
lret
add
lock
in
leave
nop
jmp
add
insb
leave
add
add
out
test
es
jecxz
repnz
nop
nop
jae
push
fiaddl
mov
nop
push
mov
leave
nop
jmp
pop
add
add
test
clc
repnz
nop
nop
jae
leave
test
int
and
pop
push
clc
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
jp
or
add
add
jmp
pop
rep
clc
repnz
nop
nop
jae
pop
add
mov
fiaddl
lcall
clc
repnz
nop
nop
jae
adc
testl
sub
pop
xchg
inc
add
inc
testl
add
mov
clc
repnz
nop
nop
jae
out
add
mov
mov
mov
add
add
xchg
xchg
mov
clc
repnz
nop
nop
jae
add
in
pop
push
mov
xchg
ret
add
add
es
xchg
add
and
sbb
clc
repnz
nop
nop
jae
sbb
pop
push
add
rcll
jmp
add
add
mov
dec
add
add
mov
leave
nop
jmp
jge
ficompl
add
xchg
xor
popf
mov
clc
repnz
nop
nop
jae
es
out
inc
test
add
std
pop
mov
nop
push
mov
leave
nop
jmp
add
cmp
add
stos
jl
mov
mov
xchg
ret
add
bound
mov
fisubrl
add
nop
push
mov
leave
nop
jmp
test
push
add
add
inc
add
repz
push
mov
xchg
ret
add
add
add
add
testl
cmp
ret
pop
add
mov
add
add
xchg
xchg
xchg
clc
repnz
nop
nop
jae
or
add
cmp
fdivrp
clc
repnz
nop
nop
jae
add
xchg
pop
add
pop
nop
push
mov
leave
nop
jmp
inc
add
bound
xchg
in
inc
add
xchg
scas
xchg
push
clc
repnz
nop
nop
jae
inc
inc
inc
add
add
add
fiaddl
add
clc
repnz
nop
nop
jae
and
xchg
shr
pop
push
push
mov
xchg
ret
add
add
add
mov
add
add
push
clc
repnz
nop
nop
jae
add
cmp
mov
add
jmp
int3
clc
repnz
nop
nop
jae
add
xchg
jp
jbe
clc
repnz
nop
nop
jae
add
sbb
addr16
push
mov
xchg
ret
cwtl
add
call
sahf
add
add
fistl
negl
add
cmp
sub
add
add
ljmp
nop
jae
add
add
mov
add
add
call
push
mov
xchg
ret
add
add
aad
add
jns
int
shr
clc
repnz
nop
nop
jae
fisubrl
add
addb
int3
add
mov
xchg
ret
mov
aad
sahf
jmp
cli
aam
sub
clc
repnz
nop
nop
jae
out
add
xchg
adc
add
adc
clc
repnz
nop
nop
jae
adc
insb
add
add
add
or
add
add
pusha
add
stc
pusha
clc
repnz
nop
nop
jae
xchg
adc
es
add
fwait
add
repnz
nop
nop
jae
ja
add
add
push
mov
add
and
mov
leave
nop
jmp
jmp
or
out
xchg
push
nop
push
mov
leave
nop
jmp
int
cmp
orb
xchg
add
test
repnz
nop
nop
jae
inc
add
inc
add
mov
adc
repnz
nop
nop
jae
add
xchg
test
mov
add
and
movsl
jle
add
add
testl
add
or
mulb
test
clc
repnz
nop
nop
jae
bound
add
ficompl
push
nop
push
mov
leave
nop
jmp
ja
add
add
add
stos
nop
push
mov
leave
nop
jmp
ja
add
fisubrl
add
add
add
and
clc
repnz
nop
nop
jae
adc
add
lock
mov
xchg
ret
add
mov
ret
add
inc
adc
repnz
nop
nop
jae
int
add
add
cmpl
nop
push
mov
leave
nop
jmp
add
call
add
jo
clc
repnz
nop
nop
jae
pop
add
inc
add
int3
jl
ret
add
push
mov
xchg
ret
in
rolb
add
add
push
add
lock
insl
jmp
add
sahf
add
add
push
xchg
std
repz
clc
repnz
nop
nop
jae
add
std
lds
add
lret
add
gs
std
mov
add
add
inc
inc
mov
bound
xchg
pop
nop
push
mov
leave
nop
jmp
rolb
add
add
add
mov
je
clc
repnz
nop
nop
jae
mov
add
sbb
add
repnz
nop
nop
jae
ret
xchg
int3
add
int3
add
bound
pusha
add
xor
push
mov
xchg
ret
call
insb
add
add
bound
repnz
nop
nop
jae
inc
add
add
int3
and
add
dec
stos
push
mov
xchg
ret
test
mov
mov
xchg
add
dec
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
sub
loope
push
mov
xchg
ret
pop
add
std
cmp
add
sahf
add
or
mov
add
clc
repnz
nop
nop
jae
add
inc
int
inc
notb
dec
call
nop
push
mov
leave
nop
jmp
xchg
add
or
nop
nop
jae
adc
add
add
add
es
mov
sbb
clc
repnz
nop
nop
jae
add
add
std
sub
repnz
nop
nop
jae
add
push
adcb
addr16
nop
push
mov
leave
nop
jmp
ja
leave
aad
add
add
ja
into
sbb
fcom
leave
movzwl
push
mov
xchg
ret
mov
add
add
add
ja
jmp
in
leave
nop
jmp
add
sub
ja
pop
fiaddl
mov
add
add
repnz
nop
nop
jae
add
sub
fdivr
clc
repnz
nop
nop
jae
mov
ret
jne
loopne
push
mov
xchg
ret
add
mov
mov
ret
sti
movswl
clc
repnz
nop
nop
jae
add
add
jns
add
add
push
mov
leave
nop
jmp
xchg
adc
out
add
push
sub
loopne
mov
clc
repnz
nop
nop
jae
add
cmp
pop
dec
stos
nop
push
mov
leave
nop
jmp
add
ja
xchg
sub
xor
test
repnz
nop
nop
jae
push
add
add
add
aaa
rep
clc
repnz
nop
nop
jae
mov
add
idivl
es
add
sti
push
clc
repnz
nop
nop
jae
addb
add
sub
add
push
nop
push
mov
leave
nop
jmp
add
aad
add
std
fwait
mov
add
pop
clc
repnz
nop
nop
jae
mov
cwtl
add
sbb
add
pop
add
les
repnz
nop
nop
jae
jmp
mov
cmpsb
fnstsw
clc
repnz
nop
nop
jae
jns
add
add
add
or
repnz
nop
nop
jae
inc
add
sub
or
jbe
sti
dec
nop
push
mov
leave
nop
jmp
add
and
ja
pop
insb
add
add
mov
xchg
ret
jns
inc
movl
push
int3
add
sbb
sti
nop
push
mov
leave
nop
jmp
cmpb
out
push
aad
adc
sbb
in
add
rorb
add
test
xchg
add
add
clc
lds
cwtl
add
add
add
clc
repnz
nop
nop
jae
add
pop
xchg
add
addb
pop
add
in
leave
nop
jmp
add
add
testl
idivb
mov
clc
repnz
nop
nop
jae
lret
pop
add
xchg
push
mov
add
sub
add
pushf
scas
add
mov
std
or
add
sahf
xor
mov
pop
add
add
add
pop
push
add
mov
fidivrs
stos
stos
imul
push
fldenv
in
fdiv
xchg
addr16
out
add
add
add
adc
lret
aas
dec
add
inc
fdivrl
leave
and
out
or
mov
jne
rcrb
add
xor
mov
add
mov
or
jnp
pop
in
sti
mov
pop
out
add
neg
incl
or
cmp
sti
jae
jns
insb
add
sbb
mov
fmul
jb
imul
cmpsb
fwait
mov
add
imul
int3
mov
add
add
imul
add
inc
dec
xchg
cli
inc
pop
add
xor
bnd
fwait
add
add
scas
cli
loopne
xor
push
add
add
int
xor
loop
cmp
lea
add
add
arpl
add
aaa
pop
ret
std
loop
add
dec
add
mov
stos
xchg
push
add
adc
add
add
lahf
xor
sti
mov
sti
push
add
mov
loopne
clc
pusha
add
add
fldpi
stos
mov
add
mov
mov
push
add
mov
js
sub
pusha
add
jo
mov
shrl
add
sbbl
iret
out
xchg
xchg
add
push
cli
xor
sub
and
xor
push
add
insl
inc
imul
mov
jne
rcll
pop
add
test
test
mov
enter
sbb
pop
aam
scas
xor
fsubrs
xor
test
out
repz
mov
add
sbb
out
in
add
mov
mov
add
cmpsl
gs
sti
fstl
and
ret
insb
add
xor
pusha
add
movsl
jmp
arpl
add
add
mov
jg
fldt
add
incb
dec
xor
clc
xor
add
xchg
dec
xchg
push
add
ja
sub
sub
int
loop
push
loopne
sarl
cwtl
jge
adc
adc
mov
add
inc
fcomi
pop
movsl
fsubl
ja
or
stos
or
add
cmp
xor
scas
out
xchg
clc
fldenv
add
dec
iret
jg
repz
scas
cmc
xchg
xchg
test
inc
pop
lret
dec
add
js
inc
add
mov
aas
push
add
fwait
leave
mov
ds
sbb
jle
cwtl
pop
add
cmp
pop
add
test
mov
ret
jno
jl
and
cltd
das
aas
call
jbe
jbe
imul
pop
xchg
test
add
lods
sub
inc
jg
mov
dec
or
adc
in
repz
xchg
sti
mov
push
add
mov
out
sbb
add
cmpsl
idivl
cmp
in
mov
add
nop
sub
gs
add
stc
mov
add
fbld
push
add
fdivl
cmp
iret
std
loopne
add
add
mov
adc
mov
hlt
fsts
cld
jne
mov
cld
or
add
xlat
outsl
xor
sbb
imulb
add
push
add
sti
aam
add
cmp
bound
xlat
rorb
xchg
add
add
arpl
push
add
inc
add
lret
jo
jge
add
cmp
or
lds
shlb
mov
test
icebp
rcrl
mov
in
nop
mov
jp
mov
add
mov
dec
add
or
xlat
jbe
incl
je
mov
add
faddp
jecxz
add
inc
add
pop
add
mov
and
call
addr16
add
lods
pusha
add
popa
scas
sub
rcrb
jecxz
add
add
pop
repnz
js
inc
add
loope
stc
and
mov
sbb
jb
aas
dec
add
sbb
stc
xchg
add
fiadds
mov
rolb
call
dec
dec
add
cmpb
push
add
xor
and
and
add
repz
add
cmp
outsb
add
sbb
sti
stos
int
add
in
add
inc
add
pop
add
pusha
add
mov
mov
pop
add
addr16
scas
out
add
cmp
add
mov
dec
add
add
add
push
adc
test
cmp
sub
add
idiv
or
xchg
jbe
push
add
add
add
add
add
cmp
ret
cmp
xor
gs
mov
sub
add
add
xor
xchg
into
mov
adc
fwait
stos
sub
sar
enter
jmp
daa
clc
inc
add
aam
add
xchg
iret
rcl
xchg
xlat
mov
mov
and
scas
in
and
in
inc
add
sahf
les
mov
movsb
je
and
cmp
sub
sbb
lcall
mov
add
icebp
xchg
pusha
add
mov
stc
dec
add
push
add
test
add
add
and
cld
aaa
adc
bound
ret
fwait
stos
nop
adc
fstl
shr
mov
xor
dec
add
pop
adc
sub
add
or
push
add
and
jp
cmp
jmp
jno
add
lea
sbb
pop
scas
or
cli
sub
add
pop
add
add
jl
push
add
cs
aad
movq
in
lods
mov
jle
sub
mov
add
dec
add
add
scas
pop
sbb
add
xlat
insb
add
inc
add
cli
jmp
add
sbb
jp
fmul
sbb
dec
sarl
push
add
add
lock
stos
loopne
jno
mov
std
sub
stos
add
lds
arpl
jb
lahf
fldenv
test
imul
fldt
clc
jecxz
aaa
js
hlt
mov
rcr
insl
shr
test
sbb
in
xchg
je
adc
dec
fmul
test
imul
clc
aas
xor
cmp
mov
dec
add
ljmp
jb
int3
in
dec
mov
or
add
mov
ljmp
xchg
sbb
cli
pop
push
add
daa
sbb
loop
push
add
sbb
jb
fidivrl
add
add
pop
add
mov
add
add
fimull
add
cltd
adc
add
add
lret
jae
mov
add
aas
std
imul
add
stos
scas
popf
pop
add
je
lds
dec
add
and
loop
add
sub
adc
int
fldcw
xchg
dec
cli
push
insl
inc
add
movsb
lcall
mov
add
call
add
hlt
inc
cmp
or
movsb
stos
lahf
sbb
out
and
mov
movsb
xchg
jno
add
mov
add
xchg
scas
pop
add
inc
js
sbb
xchg
sbb
stos
cmp
lock
ja
push
cmp
push
add
push
add
int3
pop
cltd
lods
aas
push
filds
add
pusha
add
mov
mov
add
mov
add
add
enter
outsl
mov
pop
add
add
add
xchg
mov
jne
nop
mov
insb
add
add
in
aad
rol
iret
push
jnp
add
add
dec
add
popf
push
add
pop
adc
or
cli
fstpl
jle
inc
push
inc
pop
jp
mov
xchg
negl
mov
idivb
sahf
mov
jle
clc
adc
lods
rcrl
xor
rcrl
add
add
inc
or
sbb
rorl
add
adc
negl
repz
int3
sbb
mov
add
mov
repz
fdivl
scas
or
movsb
ficoms
ficompl
aaa
mov
add
add
scas
xchg
pop
add
in
cmpsl
xchg
push
add
push
jecxz
lds
jno
add
jl
jo
iret
or
lds
addl
mov
sbb
jl
jbe
jbe
xchg
add
adc
add
lds
add
aam
shll
jge
mov
jle
test
add
cmp
sub
test
push
add
cwtl
xchg
add
inc
add
lcall
add
add
aaa
add
add
out
stc
pop
mov
pop
add
popf
jle
sbb
pop
add
mov
inc
in
inc
add
sahf
cwtl
xacquire
pop
aaa
add
add
ja
nop
int
mov
jle
shr
add
mov
imul
adc
fcomip
push
add
repnz
add
loop
mov
icebp
add
cmpsl
mov
loope
xlat
inc
add
shr
pop
in
mov
push
adcb
clc
jmp
or
andb
mov
mov
inc
and
xor
cmovs
sbb
repz
outsb
add
mov
in
push
push
sub
cmp
push
fnstcw
add
jnp
add
mov
cmc
ret
test
add
inc
pop
jb
lods
ja
add
mov
add
lods
test
pop
sbb
dec
add
mov
outsl
mov
shll
add
and
cmp
aaa
pop
mov
test
ret
data16
adc
and
loope
popa
pop
add
imul
add
sbb
mov
cli
stos
dec
push
push
add
mov
dec
mul
cltd
int3
mov
call
mov
add
add
add
add
add
inc
add
mov
jne
mov
pop
add
mov
test
inc
or
or
cmpsb
add
add
add
test
mov
lcall
add
into
mov
mov
insl
cli
scas
aas
add
sbb
pop
lods
inc
hlt
lahf
fsubrl
mov
add
cmpl
adc
das
shlb
and
test
loope
imul
sbb
cld
jnp
add
insl
or
dec
add
mov
xlat
mov
jg
out
add
das
xchg
orb
je
cld
daa
ret
fistpl
adc
sbbb
pop
and
leave
dec
add
daa
jb
dec
add
mov
add
mov
add
add
add
add
and
dec
add
xor
mov
insb
add
loope
add
mov
push
add
int
add
sub
xchg
add
je
mov
lcall
stos
imul
inc
sub
out
test
mov
fldenv
sub
mov
lods
cmp
aaa
pop
add
inc
add
jns
push
and
pop
add
scas
cmc
xchg
xor
mov
xchg
adc
push
add
sub
stos
fwait
xlat
fs
int
jb
mov
fiadds
mov
int3
icebp
mov
add
nop
fcoml
inc
add
xchg
aas
mov
add
fadd
rorb
fsub
insb
add
xor
lea
mov
add
inc
insb
add
xchg
add
mov
adc
add
bound
xchg
adc
dec
dec
mov
aad
leave
jecxz
jle
push
popa
rclb
int
fcoml
add
and
in
popa
imulb
add
xchg
add
add
push
sub
sbb
sub
adc
pop
pop
add
cmp
adc
lret
add
push
add
add
sub
insl
dec
cwtl
lods
orb
add
jl
movsl
mov
xchg
push
add
xchg
imul
jnp
add
int
mov
nop
daa
or
lds
ret
inc
add
add
adc
add
pop
ja
cld
sbbb
add
ficoml
insl
sub
add
outsb
add
add
xchg
fisubrl
into
repz
or
jecxz
push
add
mov
adc
shrl
xorb
push
popl
cmpsl
adc
or
mov
add
add
ja
jbe
inc
add
add
xchg
mov
add
mov
add
mov
add
add
ja
add
add
nop
xchg
jo
cltd
fsubp
dec
add
add
mov
xchg
int3
cli
xchg
jnp
xlat
pop
in
jo
xchg
scas
faddl
popf
adcl
add
fisttpl
scas
repnz
mov
pop
ret
sub
cld
pop
add
add
testl
stos
jno
imull
test
jno
xchg
shll
sbb
or
cmovo
pushf
sbb
or
pop
jbe
add
rolb
jno
cmpsl
mov
adc
push
jle
mov
outsb
add
xor
push
add
mov
fcompl
push
add
adc
inc
pushf
rcll
push
push
add
fidivs
xlat
add
fbstp
push
add
mov
imul
xchg
adc
mov
cmc
negb
jle
add
andl
dec
fsubrp
mov
and
dec
dec
xchg
std
dec
test
scas
dec
sbb
scas
fisttpl
rcrl
add
dec
add
mov
and
ret
insb
add
data16
add
pop
shll
movsb
dec
add
out
adc
add
add
and
data16
shll
enter
insb
add
test
pop
inc
add
add
mov
mov
add
jne
xor
xor
aam
cld
clc
ja
xor
out
and
add
mov
incb
sbb
aad
dec
sbb
lods
adc
stc
inc
pop
sar
push
add
xchg
stos
icebp
insl
mov
fsubs
push
add
add
into
std
testl
lea
divb
sub
mov
cmpb
call
add
call
and
add
mov
sbb
loopne
add
in
mov
add
mov
add
adc
fptan
sahf
mov
iret
or
stc
cwtl
jmp
sarb
fwait
or
kortestb
cli
adc
bound
xchg
inc
sarl
add
ds
cmpsb
cmp
sti
shrl
add
pop
xchg
mov
add
leave
sbb
mov
adc
mov
lds
add
push
push
add
mov
es
mov
push
movb
or
jmp
add
repnz
jae
lret
dec
jge
mov
insb
add
jle
mov
add
add
je
test
add
out
inc
add
imul
cmp
add
add
add
add
add
repz
add
jnp
sti
daa
add
push
aam
sbb
out
and
mov
add
daa
test
insb
add
sub
pusha
add
add
scas
test
xor
inc
loope
add
iret
lret
or
xchg
jl
xor
mov
out
push
add
pusha
add
sbb
ret
ljmp
add
mov
add
pop
test
pop
add
push
add
out
push
inc
add
xor
loopne
rcrl
cmp
xchg
dec
ss
pop
mov
push
sbb
clc
fwait
add
add
sbb
xchg
cmp
dec
jbe
mov
in
jecxz
add
add
in
adc
add
add
add
mov
idivb
test
add
xor
pop
add
mov
cmp
push
add
push
and
fdivr
out
vdivsd
xchg
pop
dec
dec
add
sarb
lds
add
add
xchg
add
add
out
pusha
add
icebp
pop
popa
sub
pop
cmp
xor
sti
scas
test
sub
js
lock
stc
xor
mov
add
mov
cmp
out
sbb
add
rorb
clc
into
mov
pushf
jle
adc
into
in
stc
jle
sar
mov
std
xlat
pushl
inc
add
out
dec
add
imul
cmp
les
repnz
lods
stos
dec
add
pop
xchg
and
inc
pop
lods
push
xor
lret
cmp
sbb
inc
add
add
push
jecxz
int
xchg
mov
outsb
add
add
lahf
and
adc
mov
cmpl
ret
inc
mov
pop
js
add
add
jno
push
add
mov
je
fcoml
mov
push
fcomps
scas
add
mov
filds
or
cwtl
repnz
add
xchg
arpl
shlb
popf
popf
je
mov
in
push
rclb
add
loop
aam
adc
jno
sbb
jge
pop
pop
add
mov
pop
add
rolb
aam
outsb
add
add
mov
out
arpl
push
add
int
insb
add
add
add
test
add
rcll
pop
xchg
idivb
inc
loop
mov
js
or
cltd
cli
push
add
add
movsb
sub
adc
call
sahf
and
add
pop
movsl
orb
mov
sahf
mov
scas
inc
jns
mov
or
pop
pop
icebp
aam
mov
fsubrs
add
lret
pop
add
das
fistl
dec
add
test
fst
icebp
gs
fsubr
pop
add
cld
xchg
sub
rcrb
pop
add
add
add
jecxz
scas
test
push
clc
sub
call
add
pop
add
add
and
sub
add
add
sub
push
fwait
mov
cmpsb
and
inc
add
data16
add
mov
add
mov
add
add
pusha
add
adc
xlat
xchg
dec
lret
xchg
lods
xchg
pop
popa
sbb
mov
add
out
call
sahf
stos
out
xchg
sbb
cmp
xchg
sbb
add
cltd
jle
jmp
jmp
rolb
add
xor
in
jl
lods
loope
xorb
sar
xor
cmpsb
add
int
dec
push
add
jle
push
add
and
mov
dec
scas
cmp
lret
lods
push
add
shrb
addr16
jnp
add
test
and
nop
jge
add
mov
in
sub
cmp
inc
inc
popf
pusha
add
daa
fisubl
pop
mov
popf
call
mov
jns
sti
sbb
inc
add
not
sbb
cmp
add
aad
add
scas
pushf
lods
adc
in
add
add
lret
nop
push
add
push
addr16
and
lret
add
push
int3
pop
xchg
icebp
cltd
jbe
xchg
cmp
add
sarb
into
xor
addr16
outsb
add
in
push
std
mov
push
add
out
sarl
xchg
jle
leave
sub
sub
das
mov
and
sub
sar
aad
jnp
xchg
mov
cmp
and
mov
insl
cld
mov
fsubs
test
add
adc
dec
mov
sub
insl
stos
mulb
xchg
sbb
ds
daa
xchg
popf
dec
add
lcall
or
add
fisubs
mov
and
inc
add
mov
mov
add
jg
add
test
in
mov
clc
push
add
push
add
xlat
fcmovbe
inc
push
add
add
push
add
stos
and
shlb
dec
jbe
mov
sub
inc
aaa
shll
adc
sbb
aam
add
xor
iret
dec
add
stc
dec
outsl
pop
ja
pop
add
jl
ret
or
fs
in
mov
out
xchg
outsl
add
bound
sub
into
mov
les
add
and
outsb
add
iret
or
inc
inc
add
push
add
adc
jp
rcrb
repnz
add
mov
in
data16
push
add
loopne
enter
add
mov
inc
add
fcomps
add
add
add
dec
mov
ret
int3
mov
add
add
jmp
add
imul
add
mov
popf
dec
xchg
inc
dec
add
or
inc
lods
sub
ja
mov
and
mov
push
add
sbb
aad
add
dec
test
inc
add
add
daa
mov
add
iret
rcrl
cmp
xchg
or
insb
add
dec
add
mov
sbb
add
add
shl
or
push
add
add
add
push
aam
arpl
xchg
xchg
dec
add
dec
push
pop
add
cmpsb
gs
scas
pop
push
add
xor
cmp
in
inc
push
mov
pop
add
je
iret
mov
nop
sub
xchg
inc
add
push
add
add
add
add
or
sbb
lds
js
add
clc
inc
pop
and
inc
add
shll
sub
xor
ljmp
mov
bnd
outsl
scas
adc
mov
stos
hlt
mov
inc
add
add
dec
lret
adc
cmp
add
jnp
aad
xor
pop
add
add
jmp
add
jle
test
add
xlat
and
and
dec
add
xor
cmc
jns
inc
add
add
sbb
scas
lcall
mov
out
leave
push
rolb
dec
add
add
add
xchg
fists
mov
adc
in
bound
pop
xor
pop
add
jno
add
mov
in
pop
daa
das
mov
sarl
add
add
xchg
dec
cmp
push
test
add
add
add
add
shrb
add
pop
push
scas
test
sub
sub
mov
enter
push
inc
add
add
movswl
add
mov
add
jns
mov
outsl
mov
dec
add
addl
jo
dec
add
cmp
add
sahf
movsl
push
add
adcl
push
add
movsb
cmp
shlb
jo
icebp
push
add
add
add
add
add
xor
xor
xchg
xor
mov
inc
add
stos
mov
add
add
insl
jno
add
gs
add
jo
addr16
icebp
je
or
mov
stc
sahf
loope
inc
inc
push
push
add
out
outsl
add
pusha
add
add
add
fldenv
dec
add
jb
ja
jl
jg
fldl
dec
add
cmpsb
xlat
xchg
add
add
add
push
add
add
lock
cmpl
add
add
int
sub
cmpsb
sbb
pop
jecxz
cltd
dec
add
stos
pop
add
int
xor
sbb
add
aaa
sub
pop
dec
pop
add
add
add
add
add
add
outsb
add
add
lods
arpl
add
pop
add
add
nop
cmp
mov
ljmp
pop
xlat
inc
bound
dec
add
add
add
loope
jo
mov
or
in
push
aaa
add
ds
xor
add
in
ja
cmp
ret
mov
inc
pop
add
add
test
mov
and
mov
cmp
cmp
mov
scas
cltd
test
add
lea
adc
fucomip
sar
or
add
add
pop
pop
jmp
add
stc
xor
jle
push
add
fwait
rorl
in
and
int
add
mov
add
orl
or
dec
add
push
jnp
push
add
fistpl
movsl
imul
movsl
sbb
cwtl
cmp
mov
add
add
lea
cmc
jle
jmp
into
add
aaa
adc
stos
pop
leave
and
push
leave
cmp
xchg
mov
lock
enter
and
pcmpgtd
mov
add
push
add
cmp
cmp
sub
std
pop
mov
add
xchg
insl
add
xor
pop
imul
je
sub
shlb
add
add
add
add
add
lock
mov
adc
enter
ljmp
std
push
add
adc
sub
xchg
dec
add
and
mov
les
add
xchg
add
das
push
add
inc
add
xor
xchg
in
push
add
in
out
outsb
add
popf
fidivrl
adc
pop
pop
out
lods
adc
push
add
sti
aam
mov
add
add
test
ja
add
add
sbb
fldcw
jno
lcall
push
rorl
add
imul
or
outsb
add
mov
jg
jbe
outsl
push
add
addr16
popf
nop
divl
add
add
add
popf
and
fidivrs
add
add
add
iret
lock
add
xchg
cmp
mov
insl
addr16
cmpsl
hlt
fldcw
in
dec
mov
xchg
clc
cmp
or
push
add
adc
int
and
or
pusha
add
scas
lods
loope
sbb
outsl
jp
xlat
pop
add
dec
add
bound
out
cmp
and
and
test
cmp
addr16
sub
out
test
add
fstl
aas
fstl
add
add
test
push
add
add
xor
add
or
aaa
jne
or
add
iret
sbb
mov
pop
add
xor
lds
add
jae
add
xrelease
mov
dec
add
frstor
sbb
mov
or
adc
fsubrs
mov
subl
fdivrl
pop
push
add
sub
mov
add
pop
add
pop
jg
mov
pop
add
fcomp
add
mov
rcrl
add
pop
push
add
je
repz
pop
add
push
add
insl
lcall
add
lret
fwait
push
add
add
add
cmpsl
pop
add
xor
add
xchg
into
adc
mov
sbb
add
add
cld
cld
sbb
test
add
push
cmpb
or
sub
sub
add
jg
add
jecxz
iret
dec
into
xchg
es
cld
dec
pop
and
mov
push
add
in
iret
mov
xor
and
pop
mov
add
insb
add
xor
in
cltd
fcomps
add
add
mov
mov
sbb
push
add
js
addl
lds
add
data16
and
add
and
pop
mov
bound
aaa
scas
cld
and
ja
add
mov
pop
sub
add
add
js
popa
into
jbe
push
pop
add
jmp
cld
iret
inc
adc
push
add
push
pop
and
repz
xor
mov
jmp
inc
add
add
jmp
add
jno
dec
push
xchg
push
jp
cld
jle
fs
mov
stos
xchg
cwtl
dec
add
add
outsl
test
add
in
add
fwait
xchg
push
add
jmp
repz
add
add
add
xchg
div
stos
inc
add
pop
test
es
in
sbb
lcall
inc
add
movsb
clc
mov
add
jge
in
ret
inc
add
pushf
push
fisubs
je
clc
cmpsb
icebp
sub
stos
sbb
sub
sbb
add
bound
inc
add
fcmovnb
sub
adc
jnp
add
add
add
in
mov
popf
movsb
out
xchg
mov
ret
jge
stc
in
add
mov
add
dec
jle
stos
lahf
mov
je
daa
ret
jge
add
add
lock
add
mov
cmc
cmp
jae
repz
pop
add
out
push
or
xchg
incl
sub
sub
xchg
sbb
aad
add
cmp
aad
xchg
adc
xchg
nop
sub
add
jge
add
sahf
jp
cld
ljmp
add
or
scas
jge
into
in
stc
mov
nop
sbb
push
lcall
dec
add
clc
scas
daa
pop
add
filds
fsubrs
add
sti
jb
inc
pop
in
jae
mov
inc
mov
icebp
pop
addb
lods
call
or
mov
add
dec
and
sbb
jle
push
mov
add
add
mov
sub
cmp
pop
add
stc
push
add
sub
mov
aaa
out
add
push
add
add
add
ljmp
push
add
fistps
inc
add
cmp
mov
test
add
xor
add
outsb
add
cs
push
add
add
push
add
add
add
repz
stos
gs
sbb
add
je
ds
xchg
cmp
add
push
add
inc
add
and
fimuls
add
out
add
add
lea
or
dec
in
int
push
add
add
shll
orl
push
mov
mov
add
ja
add
nop
add
fstl
add
daa
shll
add
mov
add
mov
mov
xor
push
aad
pop
and
mov
insl
ljmp
add
add
push
xor
or
int
scas
pop
mov
add
cmpsl
fisttpl
scas
mov
inc
add
and
mov
inc
mov
sub
jno
sub
pmaxub
data16
loopne
add
jb
pop
ficompl
addr16
movsl
dec
popf
jg
jb
xor
push
add
in
add
cmp
mov
or
pop
add
aaa
cld
cwtl
out
or
add
add
cmp
pop
add
test
aas
mulb
adc
mov
fisttpl
ja
cwtl
push
add
rclb
add
add
sbb
imul
inc
cmp
pop
mov
cmpsl
mov
add
dec
mov
add
fisttps
mov
pop
sbb
imul
add
add
add
loopne
sbb
arpl
test
adc
push
add
in
push
add
rolb
mov
add
cli
aaa
xchg
mov
hlt
imul
cmp
je
and
sbb
dec
add
lea
mul
call
mov
cld
cwtl
sbb
add
add
cwtl
repz
pop
xlat
lods
push
add
xchg
cmp
xor
test
sahf
dec
add
add
outsb
add
and
inc
add
add
lods
clc
sub
mov
lods
or
add
xorl
iret
pop
ja
add
insb
add
xor
cmp
loope
add
add
jb
add
sbb
gs
push
lret
lea
add
push
add
lcall
data16
jmp
xor
loop
push
add
push
add
add
jmp
fisubl
add
fstpt
add
jns
add
xlat
lods
pushf
data16
add
cmp
idiv
mov
dec
add
add
mov
fisttps
mov
filds
ret
aad
rcll
mov
fcomps
or
add
add
xchg
mov
mov
sbb
inc
es
add
add
arpl
int
push
xor
cltd
lret
add
arpl
mov
mov
push
cmp
gs
ljmp
add
mov
jb
xchg
pop
add
pushf
and
jo
jecxz
clc
loop
lahf
inc
dec
xchg
mov
roll
sub
aas
and
add
das
push
jle
add
xchg
add
cmp
sub
mov
mov
push
add
cmp
or
rcrl
add
fdivrl
add
shll
add
jae
inc
rolb
cmpsb
sbb
xchg
jbe
subl
add
xchg
stos
lds
mov
addr16
xor
incl
sub
js
add
dec
add
lahf
mov
negl
or
in
fists
outsb
add
dec
mov
sbb
aaa
dec
and
add
add
sbb
inc
add
ret
dec
add
add
xchg
bound
inc
int
add
add
add
add
test
add
into
and
repz
adc
pop
add
push
repnz
rcr
stos
arpl
jge
inc
mov
or
or
add
stc
rorb
stc
jmp
sub
mov
les
ja
stos
clc
pop
bound
pushl
add
outsl
daa
sbb
add
add
cmp
or
add
repnz
inc
out
mov
jno
add
jnp
add
dec
add
or
xor
cmpb
call
add
add
lret
lahf
test
lret
outsb
add
push
adc
repz
dec
add
add
bound
cmp
add
add
shrb
add
fisttps
add
sahf
scas
into
sarl
add
or
or
fisttpl
xchg
nop
sti
in
sbb
ret
shll
lret
add
and
add
dec
add
or
mov
dec
add
gs
add
jg
call
test
cmpsb
inc
add
add
rcr
stos
insl
shlb
add
loope
mov
ja
cmp
adc
xchg
xchg
shll
sarb
loop
add
cmpsl
shrl
mov
push
add
out
pop
ja
ljmp
mov
or
mov
sub
dec
popf
mov
dec
add
add
mov
push
ss
packsswb
unpcklps
or
inc
rcr
movsb
int
imul
jnp
out
sbb
out
and
lcall
push
add
addr16
xchg
addr16
adcl
adcl
pop
sub
push
add
push
add
mov
stos
je
add
cmp
push
cmpsl
mov
sub
leave
sub
add
jbe
div
fbstp
dec
mov
add
add
add
xor
mov
push
movsl
inc
add
or
push
add
mov
inc
daa
hlt
mov
add
cli
sbb
das
add
lret
pop
add
aam
mov
fsts
gs
inc
add
add
push
mov
and
clc
xchg
das
sub
notl
lods
repz
arpl
insl
and
mov
mov
dec
mov
mov
movsb
sbb
inc
push
jmp
jmp
mov
adc
in
mov
ljmp
add
jge
fwait
mov
aam
pop
pop
add
adc
add
push
add
sbb
lret
xchg
int
ret
dec
add
int
fisttpll
sahf
cli
fwait
das
lret
rorb
js
imul
sbb
pop
add
add
repnz
enter
push
add
add
jo
jge
xchg
xlat
inc
xor
mov
out
stos
cld
pusha
add
jl
sbb
adc
cmp
fistpll
add
add
std
rcll
mov
mov
mov
mov
add
ja
xlat
rep
sub
sub
sbb
inc
or
rcll
adc
jp
lea
cli
mov
cmp
add
stos
jle
lcall
es
pusha
add
dec
fnsave
and
dec
mov
add
xor
lcall
inc
add
add
mov
jo
push
add
add
mov
dec
cld
xchg
lds
imul
add
dec
cmp
cmp
shll
jle
pop
add
adc
aas
cmpb
and
pop
add
insb
add
stos
mov
shrb
mov
add
mov
add
std
enter
add
xchg
nop
cld
adc
pop
mov
shlb
add
cmc
aaa
fcompl
mov
imul
out
mov
lret
mov
hlt
inc
add
add
pop
mov
lcall
xchg
mov
add
test
add
add
add
inc
mov
add
jns
add
add
je
sbb
add
xlat
pop
mov
xchg
fdivl
mov
mov
xor
xchg
and
insb
add
popa
imul
cmp
push
add
add
sbb
push
lcall
add
xchg
out
add
fadds
pop
out
test
add
add
xchg
mov
rolb
add
sbb
stos
fld1
or
cld
leave
add
add
add
xchg
jb
cltd
xor
jmp
add
mov
insl
add
add
scas
jp
clc
push
iret
movsl
cld
dec
adc
repz
stos
out
add
mov
sub
and
jb
sbbb
call
sub
daa
aas
jo
popa
loop
add
add
add
mov
push
jge
icebp
adc
loope
add
inc
add
incl
add
inc
sub
lcall
out
lcall
add
or
into
xor
jns
add
orb
add
mov
jl
adc
add
dec
add
mov
mov
and
dec
add
mov
add
cmc
push
add
add
ret
add
lret
scas
add
push
add
add
test
lock
test
scas
adc
into
pop
repnz
int
push
cmp
or
lock
add
add
add
jne
add
adc
add
add
das
mov
push
mov
push
add
clc
add
adc
inc
push
add
lods
das
dec
add
movsl
insl
add
add
pop
adc
cmpsl
xor
adc
gs
xchg
pop
iret
stos
in
into
sub
popa
pop
add
ss
enter
xchg
jl
dec
mov
int
pop
rol
gs
ljmp
add
add
add
scas
mov
add
push
add
add
gs
mov
push
add
jns
add
add
sub
arpl
enter
add
mov
mov
iret
fistpll
add
std
pop
add
pop
je
loopne
add
push
cmc
lods
sbb
add
mov
add
call
add
cmp
pop
sbbl
scas
jo
sti
stos
test
sbb
inc
in
dec
mov
add
add
arpl
sub
pop
mov
arpl
dec
repz
shrl
add
mov
mov
sti
push
scas
pop
scas
xchg
test
das
sti
pop
rcr
aaa
or
ret
adc
daa
das
sbbb
add
push
add
mov
xchg
call
add
stos
jb
or
mov
add
and
aas
pop
add
iret
clc
leave
jmp
out
nop
imul
bound
sbb
in
lar
jmp
decl
cmc
cmp
lds
xchg
shrb
add
fcmovbe
xchg
jbe
sub
mov
jno
add
pop
add
mov
pop
sub
sbbb
les
add
adc
jo
dec
add
test
add
add
add
popa
and
pop
adc
dec
dec
add
mov
loopne
add
ljmp
stos
mov
out
js
sbb
and
sar
mov
add
pop
mov
loopne
adc
mov
mov
xlat
mov
inc
mov
xor
jg
out
sub
in
mov
gs
cmp
rclb
push
jg
add
or
aas
jge
in
push
add
ret
in
add
mov
sbb
xor
les
xchg
data16
add
add
loop
add
out
xchg
jno
push
das
lods
jb
mov
lods
sbb
cmove
stos
xor
data16
add
mov
add
add
sarb
add
add
add
sti
inc
add
sub
subl
insl
repnz
mov
sbb
adc
cmp
lahf
mov
add
imul
and
data16
aad
add
fsubrl
pop
jecxz
mov
loopne
das
mov
inc
add
add
loop
xchg
and
lret
test
stos
es
or
sahf
das
xchg
stos
push
add
push
push
push
add
and
add
pop
inc
icebp
ret
xchg
outsb
add
inc
pop
add
mov
sub
aas
sub
leave
mov
fnsetpm(287
xchg
xchg
mov
add
or
and
add
push
out
test
xor
add
add
add
push
jnp
ljmp
mov
sub
lods
int
xchg
repz
addl
mov
pop
fstps
add
aas
mov
xchg
sbb
add
aaa
dec
jmp
add
add
rcll
hlt
push
add
jns
xchg
pop
dec
fwait
push
add
push
add
add
nop
in
add
fisubl
xorl
lret
lods
testb
in
and
mov
add
ja
or
jne
scas
inc
movsl
adc
sub
mov
add
dec
dec
add
testb
imul
add
lahf
int3
mov
sub
stos
mov
cli
push
add
test
popa
fcompl
add
add
pop
add
fsubrs
add
adc
aaa
adc
add
add
stos
sbb
sub
and
fwait
sbbb
add
add
js
mov
mov
jl
test
add
add
mov
movsb
jmp
cltd
inc
add
stos
dec
add
popf
jbe
cmp
or
or
and
push
add
sub
xchg
xchg
mov
fldt
mov
test
add
add
sub
stc
push
add
cmpsb
test
mov
jne
cltd
and
out
lods
mov
sbb
push
pushf
push
add
add
loope
in
inc
add
add
add
shl
mov
mov
add
inc
pushf
xchg
xor
sti
sbb
add
or
pop
sbb
bound
pop
add
mov
loope
push
add
add
sub
cmp
lret
or
push
rol
subl
add
sub
mov
in
dec
add
lea
cmpsl
adc
dec
jle
sub
stc
add
push
add
mov
add
cli
fisttps
repnz
nop
mov
add
aaa
cli
shl
mov
add
push
add
xor
jle
stc
dec
add
imul
jmp
fidivrl
add
inc
add
or
or
das
scas
mov
sub
into
push
or
dec
and
dec
aam
add
fisubl
xor
add
xchg
lea
add
add
mov
and
xchg
mov
sub
repz
xchg
outsb
add
pop
add
add
add
add
adc
xor
cvtdq2ps
add
imul
out
mov
inc
add
loopne
add
add
dec
add
dec
add
cmp
iret
jle
pop
add
jbe
pusha
add
cmp
lmsw
pop
inc
add
nop
add
and
cmp
add
push
jmp
test
mov
add
adc
or
and
push
add
xor
push
add
add
add
popa
inc
add
jl
jne
pop
add
mov
add
nop
in
add
add
pop
pop
in
pop
add
repz
dec
add
dec
add
sar
sbb
leave
lret
frstor
add
pop
add
add
xchg
lret
add
icebp
jbe
sbb
mov
enter
add
and
pop
xor
shlb
insb
add
iret
jns
imull
sub
push
add
ret
imul
enter
imul
xorl
add
call
sub
nop
lret
fdivrl
cmpsb
js
lods
mov
add
pop
int3
mov
mov
and
add
pop
add
outsl
inc
add
out
add
fwait
leave
pop
pop
aas
lods
loope
add
jecxz
push
add
cli
push
pop
add
test
add
push
add
bound
movsl
int
addb
ja
rep
pop
sub
outsl
xchg
mov
add
loope
les
punpckldq
jb
lods
js
icebp
add
add
movq
or
add
push
add
flds
rolb
dec
mov
mov
imul
movzbl
hlt
mov
adcl
in
mov
add
mov
push
add
clc
mov
add
pop
add
mov
mov
sar
data16
movsb
sub
inc
add
pop
mov
pop
jb
pop
add
cli
cmp
xchg
add
mov
dec
sbb
in
add
cmpsl
jns
gs
push
add
adc
loope
add
inc
jp
xchg
imul
lds
test
add
push
dec
add
pop
add
sbb
mov
dec
add
add
outsl
push
add
push
xchg
int
xchg
push
test
xlat
mov
dec
add
insl
shrl
test
lock
in
imul
and
iret
inc
mov
add
add
dec
test
lcall
cmpsl
mov
xchg
mov
inc
add
fnstcw
pop
lods
push
lahf
ffreep
in
lds
inc
test
lcall
add
add
int3
fldt
add
out
pop
sbb
add
mov
add
js
sub
add
mov
add
addl
add
call
add
adc
scas
aam
inc
outsl
xchg
enter
hlt
or
xchg
nopl
push
add
mov
jge
inc
add
and
mov
push
add
leave
cld
xchg
jle
daa
pop
add
stos
sbb
inc
add
ret
xchg
jp
push
lds
loop
adc
fsubl
add
jecxz
add
ret
add
divl
icebp
cmc
jnp
inc
dec
mov
lock
aam
add
add
mov
cs
push
add
add
push
add
mov
xchg
sub
out
inc
aas
mov
sub
outsl
sbb
testl
pop
daa
fists
lock
loopne
pop
inc
add
bnd
and
mov
inc
add
repnz
test
push
out
sbb
mov
sub
jle
inc
add
rcll
add
and
leave
nop
lods
or
mov
lret
mov
aas
rol
sub
test
push
add
xorl
add
add
stos
ret
imul
add
add
add
subl
add
dec
andb
and
popa
leave
sbb
sub
cmp
mov
in
sub
lods
mov
add
add
add
jp
clc
or
imul
dec
add
add
sub
pusha
add
mov
add
inc
add
xchg
lods
jae
add
add
test
pop
pop
int
pop
lcall
test
rclb
inc
add
in
stos
push
add
mov
add
xor
mov
enter
jl
pop
jno
into
fimull
xor
loop
add
add
and
dec
add
bound
adc
repnz
cwtl
jbe
dec
loopne
mov
sbb
mov
add
mov
add
inc
in
adc
fsts
mov
stc
dec
xor
jo
mov
iret
loope
add
add
loope
dec
cli
lock
int3
jp
repz
fidivrl
add
dec
add
add
jmp
and
pop
add
mov
pop
add
inc
add
jbe
push
push
add
inc
cmp
push
sub
mov
enter
scas
repnz
push
add
cvtps2pi
out
and
add
add
scas
rdtsc
cmpsb
in
in
sub
dec
add
add
les
add
testl
sbb
test
sti
cmp
or
push
add
xchg
mov
adc
mov
data16
in
inc
add
cmp
xchg
adc
add
add
jne
idiv
cli
jb
out
add
add
mov
outsl
and
xchg
jb
sbb
cwtl
insl
sub
jno
add
add
mov
add
xchg
and
push
dec
push
add
adc
data16
test
add
lods
mov
sbb
add
jle
dec
add
adc
lods
repnz
pop
mov
fisubs
popa
repnz
xor
jae
mov
imul
mov
fisttpll
insb
add
push
js
add
add
add
push
add
into
daa
ds
add
add
dec
pop
add
out
sbb
add
fdiv
pop
add
inc
popa
xor
std
pavgw
add
add
loopne
push
mov
add
scas
jo
cmpsb
mov
add
pusha
add
jecxz
add
push
ret
jmp
lds
sbb
add
bnd
xchg
lcall
pop
les
jl
mov
arpl
mov
testb
divl
add
add
push
subl
xchg
cmp
dec
add
pop
add
or
add
or
scas
je
rorl
add
jge
xor
and
mov
mov
add
jb
xor
add
push
xor
xor
pop
xor
into
mov
add
add
scas
int3
es
rcl
lret
pop
add
xor
div
fsts
add
je
push
add
adc
add
cmp
pushf
jb
pop
add
lret
aaa
pushf
xor
sub
pop
xchg
and
pop
outsl
and
xchg
cmpb
adc
xor
add
add
adc
mov
nop
adc
outsb
add
add
insl
fdivrs
sub
sbb
movsb
mov
add
sbb
mov
mov
mov
fmuls
mov
mov
add
loopne
add
jae
adc
xchg
xor
pop
jno
inc
filds
lods
movsb
fwait
mov
add
add
mov
add
add
and
cmp
bound
add
cmpl
push
fstpl
mov
mov
add
fdiv
psubsb
mov
sar
inc
lock
icebp
ja
dec
add
add
add
sub
mov
cli
push
add
xchg
imul
inc
cmp
lock
or
mov
fidivrs
cmp
add
add
leave
lea
add
jno
sbb
scas
jae
mov
sub
push
pop
mov
cmp
jmp
in
pop
or
xchg
jns
popf
fcmovbe
scas
sub
xchg
int
add
add
insl
xor
pop
add
mov
je
loop
add
or
mov
movsl
je
jae
shlb
add
add
movsl
sub
pushf
pop
out
out
ret
jmp
add
and
leave
or
jbe
imul
inc
push
in
rclb
xor
mov
add
add
xchg
daa
add
dec
mov
cmp
push
xor
insb
add
mov
mov
add
add
xchg
and
push
add
xchg
test
lock
mov
or
mov
repnz
add
aam
xchg
or
jmp
xor
xor
mov
add
fcoms
loope
add
add
add
daa
xor
adc
lcall
lock
inc
mov
cmc
push
add
pop
inc
add
mov
cmpsl
push
mov
inc
enter
add
loope
sub
pop
add
mov
mov
loope
inc
sahf
addr16
add
in
icebp
daa
add
inc
add
cmp
add
add
inc
add
add
add
andb
add
lods
mov
add
xor
adc
add
add
adc
inc
xor
add
out
nop
mov
add
mov
mov
add
add
nop
jae
add
adc
jo
punpckhbw
xchg
jge
mov
lea
xchg
push
add
mov
lret
icebp
lcall
out
jecxz
test
jo
sub
sbb
mov
add
js
inc
xor
add
xchg
mov
std
mov
xchg
movsb
cmp
mov
add
sub
push
incl
pop
add
pop
jb
sub
push
or
popa
gs
add
and
jmp
add
and
mov
jmp
jge
jp
add
dec
add
cmp
jae
int
add
sub
cwtl
xchg
repz
add
fmuls
add
lds
add
or
push
add
push
add
lret
sbb
add
iret
inc
add
dec
add
mov
sub
xchg
inc
add
mov
sbb
lahf
jmp
cmp
rorb
add
jmp
add
add
jne
add
add
and
int3
arpl
xchg
push
add
or
mov
addr16
mov
and
push
add
fcompl
add
lods
xor
pop
add
adc
gs
xchg
xorb
xor
lret
add
push
jmp
inc
jb
xor
inc
add
cmp
dec
dec
rol
add
add
mov
add
add
add
push
jmp
loopne
std
jae
stc
pop
sbbl
push
add
add
add
fcmovb
xor
jne
in
mov
add
mov
fstl
fidivrs
push
cwtl
pop
push
add
mov
add
loope
out
mov
xlat
jl
xchg
jb
pop
add
add
dec
xchg
add
mov
add
loope
idiv
inc
cmp
cmpsl
mov
insb
add
lods
dec
mov
out
sub
cmc
add
testb
rcrl
movsb
xor
aam
adc
mov
mov
or
xor
je
or
add
imul
and
add
cwtl
jb
testl
pop
add
scas
xor
and
add
int
mov
add
popf
js
rcl
loopne
iret
movsl
cmpsb
fimull
xor
addb
fsubr
push
add
int
sbb
add
add
enter
dec
pushf
mov
mov
bound
mov
mov
and
xchg
xorb
and
cmc
outsb
add
add
les
add
mov
add
imul
dec
lret
loope
xor
jb
cmp
stos
jbe
outsb
add
add
inc
add
mov
out
lea
into
xor
pop
jg
add
movsl
clc
dec
add
bound
dec
add
adc
js
daa
fidivrs
add
frstor
sub
mov
fbld
in
add
popf
insb
add
rolb
add
push
add
add
adc
mull
jle
mov
cmpsl
lret
std
loope
jns
add
xchg
sti
sbb
aas
pop
cmp
add
push
add
push
add
jecxz
xchg
popa
xor
dec
add
and
popf
xor
pop
add
and
cli
xchg
xadd
orl
pop
mov
sahf
iret
sub
pop
add
iret
hlt
mov
jns
ja
test
jno
ja
pusha
add
add
pop
add
orb
mov
movsb
scas
mov
add
or
fnsave
in
jg
pushf
jl
rorl
add
push
add
aam
outsb
add
call
enter
incb
add
mov
mov
push
add
push
add
orl
and
pop
add
push
sub
repnz
repz
mov
dec
jne
add
shlb
pop
scas
hlt
fildl
and
push
add
lcall
add
aas
mov
mov
xchg
outsb
add
mov
add
arpl
add
jns
add
jns
mov
fsubrs
or
imul
pop
adc
shrl
push
add
add
test
outsb
add
jle
cmc
push
add
add
add
jb
sub
je
pop
add
pop
call
cmp
push
add
cmp
out
aas
mov
int3
pop
fidivs
rolb
push
add
push
add
pop
add
pusha
add
push
mov
cmp
out
mov
dec
add
dec
add
pop
push
jg
add
iret
mov
into
enter
add
xlat
mov
xchg
rcl
mov
push
inc
add
add
add
add
popf
jmp
fistl
dec
das
cmp
enter
push
add
push
push
add
add
add
iret
pop
clc
cmp
xchg
mov
xchg
cmp
sbb
pushf
sahf
sub
sbb
mov
scas
sti
xor
fndisi(8087
or
dec
add
add
add
mov
sbb
imul
sti
pop
sub
add
iret
adc
cmc
cmp
pop
add
sbb
jne
add
jecxz
add
lret
lret
jl
pusha
add
lea
add
cmpsb
add
call
add
add
sarl
xlat
push
add
add
add
xchg
div
cltd
mov
sbb
aaa
lock
add
leave
jb
cmpsl
sti
xor
das
mov
xlat
dec
add
mov
test
add
fldt
add
jg
and
add
scas
int3
hlt
xchg
shrl
add
mov
stc
push
add
add
adcb
cmpsl
mov
push
add
shlb
add
sub
mov
jae
inc
add
add
lcall
lret
add
add
mov
test
pop
add
imul
add
xchg
rorb
xchg
add
add
add
pop
sub
jge
add
rclb
add
add
and
mov
into
mov
mov
pop
pop
xor
cmpsl
mov
dec
sub
pop
add
or
imul
add
add
test
and
jg
out
sarb
outsl
outsb
add
and
or
fistpll
add
jmp
inc
add
add
push
add
mov
push
add
add
add
push
adc
add
add
add
push
fwait
roll
sub
repnz
test
add
add
jae
pop
add
fstl
mov
add
fdivr
mov
adc
loop
add
add
add
cmpsb
imul
cmp
lods
jns
xor
sbb
iret
ficoml
cltd
call
add
sbbl
popf
outsb
add
and
xchg
imul
add
mov
lahf
push
add
xor
mov
out
into
popf
mov
xchg
jmp
sarb
add
mov
add
dec
lea
repz
or
in
or
repnz
lds
sbb
popa
arpl
add
add
std
add
loop
notb
movb
lock
jecxz
div
and
and
lods
bound
xchg
xchg
jne
add
add
mov
add
mov
daa
cltd
mov
add
add
pop
pop
adc
fiaddl
add
xchg
mov
push
popf
pop
add
lods
ljmp
add
add
les
xchg
mov
sub
pop
xchg
xor
dec
add
inc
xor
push
cmp
mov
lahf
pusha
add
add
dec
add
dec
add
aam
xchg
out
push
pusha
add
xchg
sbb
add
jae
add
mov
push
add
cmp
push
add
movsb
mov
repnz
loop
mov
add
xlat
pop
add
jae
add
mov
add
in
add
orb
orb
jge
adc
gs
add
mov
into
fbstp
add
mov
arpl
push
add
inc
add
xchg
xchg
stos
jge
bound
pop
cli
jp
push
add
mov
jecxz
jo
add
mov
add
push
add
cmp
data16
mov
add
push
add
test
bound
call
add
add
jne
mov
ljmp
jo
mov
add
mov
fdivr
and
mov
xor
add
or
and
or
add
fmul
push
or
scas
icebp
mov
jmp
sarb
add
dec
xchg
out
add
xchg
mov
add
fldcw
arpl
fcmove
dec
add
lock
insb
add
add
or
in
mov
dec
in
push
add
loope
xlat
rcrl
cmc
ja
sub
add
insb
add
dec
add
add
cmp
int
lea
sub
stos
and
mov
add
out
add
add
xchg
repnz
fistpll
loop
xchg
push
add
and
add
mov
mov
add
adc
out
or
mov
out
mov
addl
xor
push
leave
rcrl
add
inc
add
notl
arpl
cwtl
jl
jmp
and
mov
cmc
orb
arpl
xlat
movsb
pushl
leave
aam
adc
jae
add
cmpsl
cmp
add
movsl
addr16
add
xchg
popa
data16
add
pop
vminss
mov
gs
dec
add
add
add
add
add
add
add
cmp
xchg
lods
jne
add
mov
into
push
add
mov
sbb
inc
add
cwtl
mov
mov
add
cwtl
jno
add
dec
add
mov
add
and
add
add
mov
and
push
add
sti
insb
add
cmpsb
or
mov
mov
add
or
jne
mov
add
sub
shlb
pusha
add
add
stos
sbb
and
shlb
jbe
mov
dec
add
and
xor
push
add
adc
or
test
and
icebp
mov
add
pop
sbb
addr16
add
add
jecxz
stc
xor
gs
or
sarb
sub
lahf
mov
pop
add
add
loope
cmp
push
test
add
movsb
fwait
inc
add
and
jnp
add
scas
fscale
add
std
scas
lds
inc
add
add
cwtl
xor
negl
mov
roll
clc
fisttpl
dec
dec
add
lods
xchg
jae
rcrl
add
add
cltd
inc
jb
cmp
cs
test
aam
stos
leave
cmc
pop
in
cmp
sbb
jecxz
sbb
xchg
pop
add
add
add
gs
add
add
inc
add
std
into
mov
mov
test
ljmp
bound
mov
add
add
inc
cmp
mov
das
pop
fidivl
stos
jmp
lock
push
hlt
out
add
add
add
add
jb
or
add
data16
nop
cmpl
adc
adc
add
add
test
jae
aaa
adc
adc
cmc
sbb
add
jnp
rclb
mov
mov
xor
and
addl
inc
add
adc
in
jl
pop
inc
dec
add
add
xor
add
cmc
sbb
push
add
mov
lods
dec
fstpl
mov
or
push
add
jnp
cmpsb
cli
fistl
add
pop
pop
add
push
movsb
icebp
mov
scas
xchg
pop
add
add
cmp
insl
punpcklwd
call
mov
inc
stc
std
ret
jno
loopne
add
add
push
add
inc
add
mov
add
mov
pop
add
sub
orl
add
and
mov
pop
jp
cmpsb
lds
es
pushf
notb
push
add
mov
inc
add
inc
mov
push
jns
shll
add
add
iret
loop
adc
jl
std
stos
rcrl
icebp
hlt
add
mov
add
jae
adc
add
add
xor
xor
jecxz
ret
sti
sarl
cli
xor
inc
in
add
shlb
add
mov
add
nop
hlt
pop
sbb
xor
bound
inc
add
test
mov
xor
inc
sbb
jnp
mov
pop
cmpsb
test
jbe
push
add
je
add
add
add
pop
leave
inc
mov
add
lods
popa
adc
lea
adc
add
add
mov
negb
sub
add
add
xchg
and
push
pop
add
in
cwtl
inc
add
jae
pop
aas
out
test
jbe
repnz
arpl
add
rolb
xor
lds
mov
add
dec
incl
add
ljmp
add
scas
jns
add
add
repz
add
add
add
add
add
lds
jno
dec
add
add
cmp
lds
mov
inc
add
add
test
add
in
repz
add
add
loop
mov
xchg
je
adc
ja
outsl
nop
push
push
add
cmp
xor
push
add
insb
add
dec
add
test
testb
add
mov
mov
add
add
adc
outsl
lret
dec
idivb
add
push
dec
add
add
pop
add
add
add
push
pop
mov
xor
fs
mov
xchg
and
sti
inc
add
out
mov
add
mov
sbb
pop
add
xor
push
add
add
jmp
inc
or
cltd
xchg
je
jle
adc
jnp
xchg
mov
pop
pop
insl
test
inc
cld
cwtl
das
pop
push
add
cmp
daa
xchg
pop
sub
inc
add
add
mov
data16
add
add
xchg
push
add
aad
xchg
xchg
add
xchg
add
dec
add
or
push
add
lret
leave
outsb
add
inc
add
add
ds
sub
mov
je
dec
push
add
push
add
cltd
rorl
pop
adc
shlb
inc
add
scas
gs
add
or
mov
adc
push
add
add
add
mov
lret
add
adc
mov
ret
loop
outsl
gs
cwtl
xorl
or
xor
les
sbb
jge
fists
mov
xchg
scas
lods
push
jp
loopne
push
adc
into
push
add
or
outsl
push
add
and
inc
pop
or
dec
stos
popf
imul
push
add
out
or
lock
add
push
dec
add
push
add
adc
std
adcl
mov
pop
add
add
push
jmp
xor
pop
add
rep
dec
add
les
ljmp
add
jge
mov
mov
sbb
rcll
add
inc
add
dec
add
add
and
or
add
add
add
pop
mov
add
push
push
add
cmpsb
mov
adc
sbbb
test
and
add
add
xor
add
add
sbb
add
add
aaa
cmp
cld
movsb
add
adc
mov
add
add
sub
and
or
mulb
adc
sahf
adc
xchg
add
xchg
insl
aaa
lds
lret
xor
insb
add
xor
insb
add
fistpl
adc
addr16
ja
cmc
xchg
rclb
or
pop
sub
push
cmp
mov
add
jns
add
add
adc
jnp
cmp
mov
jge
sbb
std
jb
movb
rcl
add
jle
movsb
fwait
jg
out
cli
sub
push
add
push
add
xor
sbb
jb
fistpl
sub
loop
add
jne
inc
sbb
dec
inc
or
stos
ret
cmp
pop
add
inc
xchg
mov
into
push
iret
pusha
add
orl
add
das
sahf
cmpsb
adc
jg
dec
int3
mov
xlat
leave
dec
xor
push
lret
in
fdivr
or
dec
mov
hlt
in
pop
imul
push
add
mov
add
aaa
loope
andl
push
add
ret
add
sbb
dec
add
sub
pop
xor
data16
cmpsl
iret
jge
push
pop
and
mov
xchg
mov
movsb
mov
in
call
mov
add
daa
dec
add
fwait
into
ret
into
sub
roll
add
xor
dec
add
mov
imul
add
lea
mov
adc
push
add
dec
cmp
mov
push
mov
cmp
cmpsl
sub
jp
test
mov
and
aas
imul
ja
mov
add
inc
adc
nop
iret
roll
popa
pop
pop
lock
add
fisttpll
fcomps
bound
out
push
add
rorb
jecxz
mov
inc
out
add
add
jns
or
cs
in
mov
mov
add
frstor
push
add
fdivl
add
jnp
add
xchg
add
add
hlt
cmpsb
pop
add
movsb
aam
add
rorb
sbb
add
mov
push
push
ja
mov
add
xor
add
and
out
mov
daa
pop
icebp
stc
xor
shr
add
stc
les
inc
add
or
aaa
orb
inc
add
fldl
jecxz
add
pop
add
pop
mov
pop
aam
mull
mov
outsl
xlat
push
add
add
jae
ljmp
sbb
and
jg
or
or
dec
roll
aaa
pop
bound
stos
push
add
enter
add
rclb
add
pop
mulb
in
arpl
and
js
push
add
repnz
mov
lahf
cwtl
mov
add
xor
push
add
add
add
mov
scas
pop
ja
fwait
sbb
pushf
test
jo
pop
push
fwait
jge
add
add
outsb
add
add
mov
adc
mov
adc
mov
pop
fs
stos
incb
add
and
shlb
cli
into
add
mov
test
out
xor
outsl
sbb
mov
add
add
sub
test
adc
pop
sbb
cmp
cwtl
adc
mov
add
jne
mov
das
scas
jl
cltd
cltd
and
jns
push
xor
push
add
add
f2xm1
dec
add
out
xchg
std
cmp
loope
push
add
stos
pop
mov
inc
fmull
loop
js
andl
pop
push
std
push
push
add
xchg
jne
into
dec
cmpb
repnz
and
das
xor
adc
jnp
mov
je
outsl
adc
cwtl
sub
orb
mov
jo
in
mov
cmp
dec
and
outsl
and
add
jns
add
push
insb
add
sub
dec
add
add
rcrl
xor
loop
orl
loope
in
push
test
adc
sbb
xchg
dec
push
repz
sbb
jp
sbb
aas
mov
cmp
push
ja
inc
add
mov
push
add
add
into
mov
cmp
sahf
add
add
movsb
xor
or
xchg
nop
js
add
cltd
aaa
xor
in
not
cmp
mov
loop
out
dec
add
mov
add
add
cmc
fwait
shrb
popa
movsb
mov
icebp
push
add
stc
scas
sbb
add
or
push
add
loopne
or
push
sti
cltd
sub
add
mov
and
add
add
xchg
jbe
stc
add
ja
jle
or
sub
push
add
pop
decb
cmp
lcall
cwtl
test
sbb
inc
add
add
dec
adcl
add
add
sub
hlt
leave
rclb
dec
testb
add
lock
and
shll
jne
add
jo
adc
add
cltd
mov
cmp
cmpsl
adc
iret
stc
scas
xchg
sub
mov
int3
ficompl
in
add
arpl
cmpsl
leave
pop
insb
add
rcl
mov
xor
mov
and
fs
adc
mov
sahf
pop
add
xchg
fldcw
ret
add
adc
add
xor
sbb
mov
fcompl
ds
mov
lret
pop
add
add
jb
ljmp
add
je
aas
in
test
lahf
stc
adc
mov
push
add
add
pop
add
xchg
inc
xor
add
aam
pop
inc
add
shlb
iret
data16
add
dec
add
add
add
repnz
jl
add
fdivr
test
or
push
sarb
add
mov
cmp
mov
add
out
fcmovnu
xlat
sbb
dec
cmp
enter
add
insb
add
stos
out
fnstcw
sub
or
xorb
test
jbe
mov
add
or
or
xor
adc
xchg
rolb
inc
mov
sbb
fninit
lahf
int
addr16
add
inc
add
xchg
in
add
cmp
movsl
mov
ljmp
inc
jae
xchg
jg
add
or
mov
dec
addr16
add
ds
lods
inc
add
mov
mov
mov
mov
inc
add
xchg
call
xchg
lea
std
mov
stos
sub
and
sbb
sbb
arpl
sarb
xor
gs
stos
adc
xchg
pusha
add
and
in
test
add
adc
loop
push
lcall
add
jle
lret
add
add
xchg
mov
inc
rolb
pop
and
aas
mov
mov
scas
dec
push
jb
pop
mov
shlb
push
mov
fists
outsb
add
push
xor
push
add
mov
add
sbb
add
sbb
push
mov
lret
mov
mov
daa
push
add
inc
add
or
fadds
es
xor
pop
sbb
jmp
jle
aam
dec
add
je
inc
cmpsb
mov
add
mov
ds
cmp
sahf
xchg
test
pop
jecxz
add
pop
add
icebp
xchg
mov
add
add
add
add
lret
das
in
add
adc
add
xor
sahf
adc
test
add
dec
add
dec
add
sti
sub
mov
add
mov
add
gs
push
add
shll
mov
into
aam
add
add
cwtl
mov
add
jle
dec
add
cmpsb
push
push
jle
mov
adc
jns
push
add
out
jno
add
stos
dec
mov
add
add
and
push
add
dec
stos
cmp
xchg
add
add
movsl
pop
xor
xor
inc
jge
pop
add
xchg
push
add
fsubrl
and
push
add
cmpsl
jmp
jns
mov
add
jmp
decl
pop
add
xor
sbb
loop
add
xor
js
addr16
mov
sub
xor
mov
add
gs
add
jge
lret
add
or
ret
gs
inc
add
mov
inc
xchg
subl
push
pop
add
pop
ss
sub
add
jb
cmp
in
clc
mov
movsl
cmp
sub
scas
fiadds
inc
add
cmp
jae
test
xchg
add
sbbl
pop
andl
cmp
push
pop
xchg
push
mov
jl
scas
mov
and
scas
xchg
add
add
xchg
iret
nop
iret
cmpsl
xlat
xor
stc
sbb
and
sbb
repz
dec
add
add
fdiv
sub
sbb
cmp
outsl
or
inc
loope
add
add
add
or
mov
loopne
push
add
ret
add
xchg
lods
into
xor
push
mov
push
add
xor
lahf
or
inc
add
or
sbb
call
push
add
notb
out
jbe
dec
xchg
push
repnz
add
jl
lock
sbb
add
lahf
scas
popa
in
cltd
aaa
add
mov
les
add
add
ret
sub
add
inc
add
cmpsl
mov
add
add
ficoml
jge
dec
rolb
add
pop
add
add
inc
fsubrl
add
daa
subb
add
shll
mov
xor
dec
rolb
add
add
inc
add
insb
add
add
adc
adc
in
sbb
sub
mov
imulb
mov
stc
xor
add
add
sbb
bound
push
out
mov
aam
mov
sub
add
add
xchg
ror
sub
jecxz
int
add
roll
addb
jne
data16
pushf
imul
add
cwtl
push
add
stc
jle
sbbl
adc
add
lods
mov
fmull
mov
pop
add
stos
fsubrs
add
sahf
sbb
lods
add
lret
add
cmc
shlb
add
mov
movl
add
add
arpl
add
data16
pop
and
jns
loope
cltd
sbb
incl
cmp
or
mov
in
movsl
jnp
rolb
dec
add
call
add
dec
adc
loop
dec
add
lods
paddb
rorb
xchg
jge
dec
dec
add
xchg
sub
ja
xchg
add
jne
add
js
push
add
imul
and
les
shrl
int
loop
add
inc
push
add
add
outsl
xchg
jb
mov
call
out
bound
inc
daa
sbb
or
sub
push
add
sub
or
push
add
add
push
add
mov
in
sti
aam
add
subb
sbb
add
mov
or
ja
lret
cli
sbb
pop
or
jbe
add
hlt
std
lock
data16
test
add
add
add
test
test
mov
push
add
xlat
pop
cmpsb
hlt
mov
add
wbinvd
imul
adc
out
cmp
xchg
add
ret
insb
add
add
add
arpl
mov
add
outsb
add
add
or
lcall
and
aas
popa
jo
sarl
add
subl
add
cwtl
xor
sub
inc
gs
add
or
sti
orl
push
mov
add
add
xor
cmp
push
iret
sti
sar
adc
shr
pop
pop
add
push
add
add
mov
add
gs
add
add
sar
jmp
dec
add
sub
mov
dec
rcll
push
add
mov
add
xchg
mov
add
add
and
sbb
mov
lret
pop
imulb
add
add
add
xchg
push
add
ret
push
add
push
add
cmpsl
push
add
dec
inc
add
add
and
gs
movsb
dec
jnp
jno
cmpb
nop
mov
or
jbe
pop
add
add
xchg
push
add
out
test
and
scas
lods
lcall
iret
cmp
out
jbe
adc
mov
add
ret
test
dec
add
leave
das
and
inc
sarb
icebp
inc
add
add
cwtl
push
ffreep
xchg
outsb
add
popf
outsl
pusha
add
add
add
push
add
add
mov
add
mov
add
clc
push
add
xchg
mov
je
mov
mov
add
loope
xchg
adc
jmp
lcall
jle
add
fldl
lock
mov
aas
test
imul
add
and
mov
daa
add
mov
xchg
dec
add
lahf
xor
add
lret
sbb
or
add
cld
insl
aam
aam
add
shlb
add
data16
add
add
outsb
add
pop
arpl
add
mov
adcb
xlat
movsb
xchg
push
add
pop
lcall
fs
mov
add
movsb
pop
dec
add
fcompl
inc
add
add
jns
push
test
aam
xchg
inc
les
mov
pop
in
ror
adc
shlb
movd
fisubl
push
inc
shlb
add
adc
cmp
ss
dec
inc
add
xlat
cmpsl
lret
pop
add
add
gs
adc
xchg
dec
sub
inc
sub
mov
add
ljmp
dec
add
out
mov
add
inc
add
add
push
sbbl
cmp
lods
pusha
add
or
in
mov
in
push
add
movb
add
add
adc
push
add
xor
call
mov
add
int3
out
add
pushf
and
and
jp
rclb
les
jnp
add
xor
je
xor
fwait
das
jns
int
xor
or
stos
loope
cltd
sbb
add
push
add
movb
jmp
sbb
sti
or
nop
sahf
data16
add
cmpsl
add
pop
add
mov
call
fisttpll
js
fs
cmp
jg
mov
hlt
mov
in
lcall
rolb
add
lret
jmp
dec
dec
mov
movsb
or
test
bound
js
mov
loop
lret
imul
sti
push
add
add
cld
stos
sub
rcll
push
add
aam
cmp
imul
push
dec
cmpb
and
add
mov
popf
loope
ss
stos
test
fldt
add
xor
dec
add
add
enter
add
rcll
and
jns
test
jne
lcall
shl
aam
rcrb
popf
incb
jl
mov
shll
push
rcrl
notl
add
xlat
into
sbb
repz
scas
and
add
inc
add
stos
icebp
repnz
jp
and
sar
fs
lcall
inc
fisttpl
bound
push
add
dec
add
enter
addr16
mov
add
mov
sti
xchg
cltd
and
std
arpl
dec
mov
add
js
mov
push
jbe
mov
cmp
iret
stos
inc
add
in
int3
sbb
push
add
add
inc
mov
jmp
movsb
jno
mov
fsubrp
cli
jmp
add
lds
adc
in
jle
es
fdivr
xchg
movsl
push
add
adc
subl
add
pushf
stc
out
add
add
lcall
sub
clc
stos
lods
cs
out
add
stos
out
test
cmpsb
cmp
push
add
movsb
xchg
pop
stc
jp
ljmp
add
or
xor
add
repnz
mov
in
pusha
add
add
mov
sbb
das
lock
loope
call
add
cmp
lods
std
mov
clc
out
add
jns
add
add
movsl
cld
inc
add
and
cmp
dec
add
lods
sub
xor
push
xchg
push
xchg
xor
test
sar
in
dec
add
adc
sub
out
xchg
fnstcw
sbb
add
repnz
add
add
xor
sbb
fwait
xchg
hlt
cmp
add
out
jbe
cwtl
sub
add
pop
jl
adc
js
inc
add
add
xchg
pop
arpl
and
xchg
mov
add
ljmp
add
xlat
dec
add
in
stos
mov
pop
jle
add
mov
adc
cmp
adc
sub
sbb
roll
lret
xchg
test
push
pop
leave
xlat
hlt
sbb
add
add
add
das
fistps
add
sub
jecxz
mov
cmp
in
cmpsb
mov
adc
std
imul
nop
inc
mov
add
mov
std
jecxz
test
push
add
int
push
sbb
stos
push
add
xchg
xchg
jge
ja
jmp
or
or
push
add
mov
adc
lods
sbb
pop
add
mov
sbb
xlat
sbb
adc
jbe
xor
ja
xchg
enter
loop
jge
add
movsb
add
add
push
add
add
push
adc
in
insb
add
sbb
insl
js
sub
addr16
add
test
add
add
test
js
sbb
add
mov
int3
fmull
xor
cld
arpl
and
jae
sbb
xchg
imul
add
bound
mov
jg
cltd
and
cmpsb
jbe
pop
mov
rclb
pop
nop
lds
add
enter
add
in
xchg
or
imull
inc
add
adc
add
call
mov
jbe
js
pop
js
pop
or
int
inc
cmp
mov
inc
add
xlat
xchg
jmp
add
xlat
pop
add
add
jge
movsb
jle
or
jecxz
add
add
popf
shrl
add
add
fsubrp
outsl
movsl
jle
push
add
dec
repz
ret
bswap
adc
rclb
push
add
xchg
cmp
add
leave
jge
pop
add
daa
out
ficoml
pop
add
test
and
in
add
leave
jns
push
add
lea
fldenv
xchg
xchg
mov
pop
call
add
sar
testb
cmpsb
add
insb
add
sub
inc
add
dec
push
add
sub
sbb
iret
les
push
add
ja
loop
xor
popf
clc
imull
add
add
add
xchg
jge
add
mov
push
xor
jno
repnz
add
add
lds
add
dec
xor
jmp
sub
sbb
inc
add
out
mov
add
push
add
sub
movsb
loope
or
push
add
xor
inc
mov
dec
inc
pop
je
push
add
sbb
jae
mov
add
or
stos
fstpl
add
xchg
loop
xor
mull
in
mov
add
enter
into
xchg
lret
mov
pop
add
and
scas
jg
nop
movsl
sub
gs
xchg
addb
inc
aad
dec
inc
add
add
push
push
add
mov
push
add
mov
in
pop
outsb
add
dec
out
add
and
insb
add
gs
or
jl
mov
inc
mov
out
aaa
cmpsl
inc
jle
shrb
jne
xchg
push
aad
popa
mov
add
fdivrs
andb
mov
add
sbb
imul
add
mov
add
lcall
mov
hlt
inc
add
adc
add
lock
enter
mov
nop
dec
add
dec
add
jge
jns
cmc
mov
xchg
dec
add
push
dec
les
mov
sub
push
out
les
cmp
lahf
add
lahf
subl
cmpsl
push
xchg
rorb
pop
add
lds
mov
add
cmp
rcrb
add
ror
dec
fldcw
add
add
push
add
mov
movsb
filds
adcl
xchg
pop
sbb
cmp
out
ret
cwtl
add
push
cmp
xorb
add
sub
pop
add
add
add
add
sub
shll
add
clc
add
xor
adc
jbe
out
mov
dec
add
add
insb
add
add
xor
push
sub
pop
repz
push
add
xchg
jb
adc
mov
ret
add
add
pop
dec
add
into
pop
add
movsl
arpl
test
repnz
add
jnp
add
push
xor
repnz
mov
add
add
mov
cmp
add
mull
popa
mov
roll
jecxz
add
mov
push
ja
inc
add
xchg
in
mov
add
cmp
outsl
or
repnz
out
or
push
add
xor
in
fidivl
mov
mov
add
pop
add
adc
xchg
push
add
and
fcmovnbe
fstps
add
push
shl
pop
clc
push
or
add
fwait
ljmp
mov
xor
add
add
rolb
jecxz
push
mov
js
dec
scas
lock
in
bnd
xchg
or
icebp
mov
xor
pop
xor
repz
add
add
add
add
std
pop
mov
add
pop
clc
insl
jmp
add
adc
xor
cmp
mov
es
or
dec
cld
sbb
inc
add
jnp
call
add
in
and
nop
xchg
add
add
add
imul
mov
and
or
lcall
add
dec
add
cli
ja
xchg
jge
add
fadds
inc
add
cmpb
cld
and
inc
mov
sub
xor
rclb
dec
add
add
negl
mov
pop
loop
add
adc
mov
lret
pushf
daa
adc
movsb
mov
add
paddsw
xor
std
in
push
add
add
insl
xchg
inc
sub
out
add
cmp
cli
inc
add
mov
mov
and
test
push
add
add
jb
xchg
pop
lahf
aad
aaa
dec
add
jmp
sti
push
add
mov
shr
dec
add
lods
ss
mov
dec
xchg
je
adc
adc
add
add
mov
add
xchg
test
into
cltd
pop
add
add
adc
stos
int3
cs
sub
add
add
add
add
add
add
mov
rorl
add
popf
nop
inc
add
mov
enter
add
sbb
insb
add
mov
mov
lret
xor
jb
lret
fcomip
adc
inc
add
add
in
inc
add
jmp
repnz
or
inc
cmp
lcall
pushf
xchg
xchg
stos
pop
add
adc
add
shll
add
insb
add
fpatan
in
adc
mov
add
push
adc
pusha
add
icebp
out
add
ret
pop
add
mov
sub
xchg
sahf
or
adc
into
das
jb
shl
inc
add
add
or
adc
mov
outsb
add
add
addl
adc
xchg
loop
daa
sbb
mov
push
add
cwtl
mov
stos
cmp
add
pop
rcr
jle
addr16
pusha
add
pusha
add
add
mov
leave
movsb
jp
js
jmp
jo
mov
add
cmp
add
into
ljmp
dec
jbe
roll
stos
add
and
outsb
add
data16
add
test
int3
aaa
xchg
inc
jl
ret
sbb
std
mov
jne
add
xor
ret
add
inc
add
xor
outsl
xor
icebp
dec
mov
add
mov
add
nop
mov
jae
dec
pop
xor
add
add
mov
add
adc
add
decb
add
add
add
push
add
add
push
sub
mov
mov
push
leave
push
sub
or
push
add
or
add
add
or
and
add
add
cld
mov
add
lea
mov
add
add
enter
inc
dec
mov
mov
cli
mov
push
push
push
add
xorl
pushf
sub
or
mov
add
add
cld
rol
add
ja
xchg
ror
hlt
mov
pop
add
dec
xor
adc
popf
sbb
mov
or
lea
fwait
xor
sub
cmpsl
pop
jp
mov
add
add
insl
addr16
xor
push
add
mov
icebp
insb
add
orb
movsl
xor
jp
add
into
subl
add
cmp
mov
sbb
push
add
adc
push
mov
imul
movsb
mov
push
add
movsb
outsl
pop
dec
add
jp
das
jnp
jno
adc
insb
add
and
pop
add
and
je
cmp
clc
jecxz
repz
or
into
pop
push
add
insl
and
push
add
adc
and
adc
lea
movsb
lret
sar
cltd
rcl
stc
aaa
addr16
cmp
aaa
sbb
outsl
lock
inc
add
nop
dec
add
mov
add
data16
iret
fld
or
outsl
jb
loop
sarb
add
imull
rorb
push
add
add
mov
sub
cmpsb
out
aad
pop
sub
arpl
add
mov
movsb
pminub
in
sarl
sbb
rcrl
add
ja
mov
add
add
adc
inc
add
jns
add
mov
daa
outsl
sbb
or
lahf
xchg
mov
sub
andb
add
add
and
add
or
mov
add
sbbb
pop
lea
out
repnz
hlt
rcll
add
addl
aad
roll
or
and
addr16
dec
add
mov
aaa
aad
jmp
pop
add
add
cli
daa
xor
pop
add
jg
in
adc
add
and
and
or
mov
push
ret
push
add
inc
in
insb
add
add
cmp
add
or
mov
lret
pop
add
xchg
pop
stc
pop
add
add
add
andl
cmpsl
jb
cmp
sub
shlb
and
cli
add
call
sub
pop
and
mov
sbb
xchg
or
jge
fstp
sub
inc
add
mov
ret
add
ret
add
mov
add
xchg
cmpl
cmp
ffree
and
inc
add
xor
xor
jge
add
add
aad
andb
inc
fdivrs
cmpsl
movsl
in
push
dec
add
and
bound
loopne
cmc
test
loop
ret
and
cmpsb
inc
add
dec
add
aaa
cmp
out
bound
pop
mov
dec
xchg
jecxz
add
mov
inc
add
pop
xorb
add
imulb
fistl
inc
jge
or
gs
add
lock
add
data16
jns
mov
jge
inc
fdivr
pop
lods
jo
add
add
insb
add
pop
lcall
shll
and
scas
test
fbstp
jmp
mov
fstpt
rcr
movsb
dec
add
add
pop
cmp
add
fistl
or
inc
sahf
cmp
sbb
xchg
xchg
mov
fnstsw
xlat
mov
xchg
mov
push
fists
push
add
add
shll
pop
sti
shr
add
lahf
iret
mov
push
add
add
lahf
jp
and
loope
add
sub
mov
mov
sbb
popa
ret
shlb
add
or
inc
add
push
in
sub
stos
dec
add
insb
add
add
test
sahf
pop
aaa
hlt
mov
mov
sbb
in
add
mov
add
ljmp
mov
out
add
fcoms
xchg
rorl
sti
push
add
fsubrp
imul
dec
and
dec
lds
sub
mov
xchg
add
mov
xor
leave
push
add
push
loopne
add
sbb
arpl
loope
shlb
add
add
icebp
loope
into
and
or
shlb
loopne
add
dec
add
sbb
adc
jno
add
add
add
jge
bound
inc
add
add
xchg
add
subl
lahf
int3
and
fwait
push
add
or
fsincos
fsubr
subl
and
inc
add
lret
hlt
loope
and
cli
mov
movsb
add
test
jnp
adc
adc
inc
add
jle
loopne
add
lret
add
pop
shr
add
add
int3
out
add
inc
add
sub
xchg
insb
add
jo
jne
sarl
mov
fsubrs
or
add
inc
sahf
mov
adc
and
sub
adc
mov
insl
mov
cld
pop
xchg
movsl
sti
jg
imul
push
add
add
add
add
push
add
flds
or
lock
adc
je
jmp
jae
adc
or
icebp
add
repz
les
in
inc
addb
lret
mov
xor
or
leave
pop
clc
out
and
mov
dec
add
add
hlt
sti
add
add
add
in
inc
add
xor
xor
dec
adc
add
rcl
ds
xor
arpl
xchg
incl
dec
and
add
or
movsl
mov
loop
add
test
add
fst
test
jnp
clc
sub
dec
add
sub
push
jne
clc
sbb
add
add
lcall
add
aaa
dec
add
push
loope
add
xor
mov
add
inc
add
add
in
lock
imul
add
arpl
cmpl
xor
add
sbb
sti
cmp
aad
leave
sbb
pop
cmpsb
jecxz
in
add
pop
inc
mov
add
add
jl
mul
jne
je
push
add
add
add
xor
int3
mov
jl
mov
push
add
loop
nop
xlat
test
add
fwait
xchg
arpl
repz
dec
add
out
rol
and
adc
adc
iret
leave
or
dec
popa
or
les
mov
lock
mov
push
add
lock
add
cmp
pop
add
pop
and
lret
add
dec
add
mov
fldl
scas
mov
aas
mov
add
fstpl
and
dec
dec
add
add
rcrb
add
lahf
xchg
xor
mov
sub
lcall
fldenv
add
ret
inc
add
cmc
rcl
or
jnp
xchg
cmpsl
adc
ljmp
out
gs
add
add
or
xor
cwtl
push
add
add
adc
mov
add
add
dec
data16
cmc
test
mov
arpl
add
sar
mov
cmp
cmp
mov
add
and
ficoml
xchg
cmp
call
add
cmp
jg
add
sub
mov
mov
pusha
add
iret
rorb
add
xchg
add
dec
movsb
iret
dec
or
add
nop
jns
add
or
mov
or
push
add
add
and
add
insb
add
sti
xchg
push
adc
mov
add
add
xchg
inc
sub
xlat
xor
add
std
add
add
lahf
data16
xor
jo
sarb
fldcw
jecxz
push
xchg
cmpsb
int
bound
mov
dec
add
mov
sub
xor
push
add
popf
pop
add
and
aaa
and
sub
add
xor
jecxz
cmpsb
add
pop
add
fs
cmp
dec
add
add
lcall
test
xchg
lret
add
jns
in
dec
add
add
out
push
add
add
add
popf
fistpll
and
fldenv
adc
pop
xor
add
add
incl
add
add
in
push
mov
lahf
jne
jg
nop
push
add
cmc
mov
orb
add
repz
ds
es
adcb
xor
in
lret
add
int3
add
and
mov
jo
adc
test
sub
lret
lcall
add
add
push
les
mov
std
mov
sub
add
xor
hlt
or
dec
rorb
mov
add
or
les
lret
add
sub
out
push
add
loop
add
shlb
add
add
arpl
arpl
and
add
add
push
gs
ss
movsb
dec
add
jmp
das
mov
add
mov
or
sub
pop
add
movsl
xchg
dec
sub
mov
pop
add
insb
add
mov
scas
add
mov
pop
sbb
out
add
add
loop
mov
mov
jp
push
lods
dec
add
fsubrl
add
add
add
aas
add
cmp
loopne
stos
push
je
and
or
xor
lock
sti
jnp
xlat
mov
bound
out
cmp
rcll
lods
popf
jns
outsl
jae
sti
mov
mov
xchg
mov
mov
push
add
mov
add
push
add
sbb
aas
push
jg
daa
sbb
pop
cmp
iret
cmp
add
or
add
insb
add
xor
jp
repz
lcall
add
sub
rclb
rcll
add
clc
stos
mov
mov
mov
outsl
lds
insb
add
in
xchg
push
add
jae
add
push
add
pop
add
mov
add
mov
push
add
add
xor
fmuls
mov
rdmsr
add
fwait
mov
fnstenv
add
mov
add
or
add
mov
in
mov
add
add
mov
dec
add
inc
lahf
pusha
add
add
cltd
mov
nopl
add
add
mov
add
xor
insb
add
movsl
and
add
imul
adc
pop
mov
add
insl
mov
repnz
add
add
add
shll
stc
adc
mov
add
xchg
jnp
repz
es
lods
mov
fwait
jecxz
lcall
inc
add
add
xchg
add
adc
xchg
and
jmp
insb
add
pop
repnz
dec
jbe
or
imul
mov
cltd
push
dec
add
dec
or
add
xor
adc
movsb
out
add
data16
lea
cmp
movsl
stos
mov
repnz
pop
add
add
mov
jbe
mov
es
lret
sub
dec
sub
lret
jmp
pop
jge
loope
sub
jge
mov
add
negl
add
add
inc
lcall
add
pop
add
pop
add
add
jae
inc
add
jno
pop
je
mov
and
push
add
cmp
jbe
inc
add
mov
pop
or
in
push
add
daa
outsl
cmpsl
jne
sti
data16
or
inc
add
add
inc
inc
dec
out
packssdw
popf
cmp
aaa
adc
sti
out
pop
add
add
add
add
cmp
iret
xchg
cmp
push
rorb
cli
inc
add
lahf
int
ficomps
cmp
iret
jno
add
add
push
xor
dec
sar
dec
ds
mov
subl
cmc
aad
cmpsl
in
pop
dec
mov
jb
cmpsb
jp
sbb
sbb
and
aaa
mov
sub
lahf
jbe
or
sbb
insl
dec
cmp
mov
clc
push
add
add
jb
nop
mov
and
jl
xchg
lods
pop
xor
add
ret
adc
push
add
add
add
orb
xchg
fdivrl
add
popf
sahf
dec
add
in
gs
add
add
test
mov
inc
pop
add
testb
xor
pop
and
fwait
xor
jnp
ret
movsb
insl
add
add
add
sbb
popa
test
enter
mov
and
and
in
loop
movsl
inc
add
xor
mov
jmp
and
xchg
clc
rcll
mov
add
push
add
test
add
loop
add
aas
dec
add
loope
imul
stc
neg
push
stos
adc
cld
jp
sti
aas
sbb
test
add
add
lods
gs
shlb
dec
add
xchg
into
fwait
pop
add
lret
push
add
sub
repz
mov
pop
add
add
aaa
outsb
add
mov
sub
mov
add
add
cmp
das
push
push
push
add
das
mov
fwait
std
ret
cmp
lcall
stos
xchg
data16
mov
add
mov
enter
scas
add
xchg
add
mov
add
add
ljmp
add
mov
or
rolb
insl
xor
dec
jle
in
add
push
add
cmp
int3
pop
add
rcll
stc
push
push
jl
pop
mov
mov
mov
imul
cltd
shrl
sahf
mov
xchg
fildll
cmpl
add
inc
fdivrs
and
cmp
data16
add
aad
adc
add
add
and
mov
add
add
inc
add
mov
cs
ret
inc
filds
add
jne
scas
mov
add
add
pop
jnp
cld
test
add
pushf
jge
add
add
leave
mov
adc
push
add
add
or
and
xchg
dec
lods
int
dec
add
mov
pop
cmp
push
pop
add
leave
sbb
scas
fcom
mov
add
push
fmuls
sbb
jb
add
out
add
fadds
dec
jne
sti
adc
push
add
jne
or
in
out
addr16
mov
in
mov
mov
mov
xchg
push
add
lret
push
add
add
mov
pop
add
xchg
push
popf
jmp
gs
jge
mov
add
cmpsb
test
outsl
adc
sbb
ljmp
push
add
push
add
cmc
lahf
bound
icebp
lods
jecxz
mov
add
push
lods
xlat
popf
and
cwtl
dec
add
cltd
adc
pop
sti
pop
add
xchg
out
mov
mov
in
jno
icebp
dec
add
xchg
push
add
xchg
inc
cmpsb
sarb
and
addl
aad
push
and
xor
add
mov
cmpb
cld
sub
xor
jecxz
lret
iret
enter
nop
jns
popf
imul
cltd
nop
or
fucomip
lods
and
inc
sarl
into
into
inc
add
scas
in
mov
add
inc
add
add
mov
les
jb
sbb
shll
insb
add
add
sbb
mov
loope
fnstsw
add
les
add
mov
test
enter
jecxz
loop
call
jle
mov
xor
add
loopne
call
push
add
or
xor
cmp
fsqrt
and
and
nop
aaa
imul
mov
xchg
cmpsb
adc
dec
add
outsb
add
xchg
sub
add
lods
loope
add
push
xor
mov
and
add
or
adc
xor
add
mov
pop
cmpsb
add
aam
add
lret
fmul
adc
test
daa
jne
in
insl
adc
cmc
test
add
add
fstps
and
or
cmp
gs
pop
inc
add
int3
iret
mov
add
add
add
add
add
popa
push
add
leave
mov
push
add
add
xchg
dec
add
xchg
dec
inc
scas
stos
shrb
add
add
aas
jge
add
add
test
pop
int3
dec
pop
dec
out
cld
test
call
add
sub
add
test
fiadds
add
fldl2e
dec
add
je
adc
cmp
aas
sub
rcr
mov
add
add
inc
add
scas
loope
movsl
in
ja
mov
sub
or
lds
je
bound
orl
enter
insl
mov
push
add
adc
std
push
add
add
ja
add
sub
jo
ljmp
pushf
mov
push
add
add
mov
jl
fldenv
add
rcll
cmp
jge
test
push
add
xchg
sarl
add
cmp
cmpsb
loope
xor
repnz
jge
add
inc
add
jae
scas
icebp
into
add
or
outsb
add
add
add
push
add
add
movsl
inc
add
add
adc
arpl
push
add
push
fildll
mov
push
add
sahf
fisubrs
dec
add
jle
notl
dec
add
ds
movsb
jo
insb
add
add
jo
cmc
rorl
inc
add
xchg
cld
ja
pusha
add
mov
add
fdivrl
es
js
jne
add
mov
add
daa
call
fsubrs
add
xor
aaa
out
into
cmpsb
sbb
xchg
dec
dec
add
hlt
add
add
xor
outsb
add
dec
add
add
aad
push
add
mov
add
imul
push
insb
add
loope
add
sbb
jl
jnp
add
aaa
fld
hlt
in
js
jno
nop
nop
add
dec
add
outsl
or
std
push
sbb
xchg
cltd
dec
add
dec
and
cmpsl
in
and
bound
inc
add
movsb
add
xlat
std
lods
aam
add
mov
xchg
jb
xchg
pop
sub
jo
cmp
push
add
mov
add
loopne
and
and
push
push
add
add
jl
gs
dec
test
daa
jnp
pusha
add
psllw
ja
repnz
in
pop
add
add
sbb
mov
dec
add
mov
aas
mov
andl
mov
mov
sub
andps
xchg
push
add
lock
xchg
pop
add
stos
inc
add
scas
cmpsl
pushl
add
jne
cmp
and
mov
push
add
add
or
adc
cltd
imul
cmp
scas
in
not
addb
mov
mov
add
or
das
xchg
setle
jl
movsb
loope
and
adcl
andnps
add
add
test
mov
add
xchg
adc
adc
xchg
dec
cltd
js
xchg
inc
popf
sub
add
dec
testb
add
das
xchg
pop
add
testb
add
sbb
add
jb
inc
add
aam
add
gs
push
xchg
jo
sub
imul
hlt
aad
lret
into
test
sbb
xchg
in
mov
jle
sbb
cmpsl
cltd
test
mov
dec
add
in
inc
fldt
jge
add
xor
and
mov
dec
mov
push
inc
add
repnz
add
aad
test
or
xor
cmp
clc
ret
stc
data16
dec
cmc
test
lds
add
add
pop
and
fadd
adc
xchg
jge
sbb
add
add
test
add
add
add
add
fsubl
in
jmp
jge
add
imul
add
lods
iret
movsb
mov
sbb
add
add
add
pusha
add
mov
push
add
loop
add
out
les
test
add
pop
add
add
cmp
pop
add
mov
pop
add
mov
sbb
xorl
out
add
mov
add
pop
xchg
outsl
jp
les
add
pop
add
cmp
in
add
lods
idivl
dec
jnp
add
add
xchg
mov
xor
mov
ret
fs
fwait
mov
notb
lret
jno
add
push
or
xchg
mov
pop
xchg
inc
ja
aas
pop
or
cmp
fxch
xchg
or
ljmp
add
add
mov
add
add
lret
and
in
add
fstpl
add
cmpsb
xor
mov
push
add
mov
sarl
add
add
mov
xor
add
push
xlat
inc
das
dec
add
cmpsb
cmp
dec
and
std
sbbb
dec
negl
gs
lock
add
cwtl
ljmp
mul
arpl
push
add
mov
add
roll
add
push
nop
xchg
fwait
scas
jno
add
add
shll
add
cwtl
push
add
mov
loopne
int
sub
xchg
and
les
add
arpl
mov
lcall
insb
add
add
fidivrl
pop
add
add
mov
add
mov
fmul
outsl
sti
pop
add
add
out
add
add
js
pop
arpl
iret
pop
add
add
arpl
pop
xchg
xchg
notb
movsb
sub
mov
adc
mov
push
add
xchg
imul
add
addl
xchg
dec
add
and
scas
data16
dec
sub
popa
xor
arpl
imul
sub
push
add
data16
add
shrb
js
push
jmp
in
mov
stos
xchg
and
inc
add
add
out
mov
sub
jnp
jns
add
fimuls
pop
mov
out
test
aaa
cld
add
in
iret
or
add
push
add
inc
dec
in
fstpt
jmp
push
add
subb
mov
add
lock
xchg
mov
xlat
or
lcall
mov
pushf
xchg
jp
add
std
push
ja
add
addb
add
leave
adc
cmp
and
mov
add
ljmp
movsl
adc
js
loopne
jb
mov
mov
test
push
jge
xchg
fcomip
scas
pop
std
pop
mov
add
dec
pushf
test
add
add
pop
enter
pusha
add
and
add
pop
add
add
lea
mov
push
add
fists
lea
mov
sub
jae
cmp
fs
ljmp
pop
jb
jg
ret
add
jecxz
add
sti
je
std
pushf
ret
xchg
popa
sbb
add
add
icebp
mov
add
fsubr
scas
mov
lcall
scas
sbbl
ja
add
rolb
add
add
add
imul
mov
dec
subb
jb
jmp
fisubrs
xchg
sub
lcall
repnz
push
cmc
inc
add
xlat
mov
fdivl
add
xchg
sbb
xchg
pop
test
add
add
add
xor
out
add
add
das
mov
stc
cmp
dec
in
movsl
or
movsl
inc
sarb
and
add
shlb
movsb
lods
movsl
sbb
add
popf
inc
add
inc
inc
or
cmp
out
aad
or
leave
gs
sbb
cmpsl
mov
jle
adcl
lods
and
bound
repz
add
jb
push
out
add
push
add
mov
orl
stos
xor
lods
jae
movsb
les
sbbl
add
arpl
data16
xorb
int3
sbb
xchg
pop
add
ss
lcall
add
pop
push
xchg
adc
xchg
int3
add
int3
jnp
push
add
add
or
add
cmp
hlt
xchg
pop
add
add
push
movsl
jg
add
xchg
cmp
add
or
sub
in
xor
fiaddl
test
and
add
inc
add
add
pop
add
cmp
mov
push
add
add
xchg
xchg
xor
filds
add
mov
fwait
popa
mov
les
insb
add
add
adc
push
add
jge
or
out
add
lock
popa
hlt
mov
sbb
add
cli
and
enter
add
push
add
add
rcrl
and
pusha
add
cltd
ffreep
pop
add
add
cwtl
push
mov
cmp
add
mov
lret
outsb
add
add
outsb
add
ffreep
enter
cmp
mov
cmp
add
test
xor
mov
add
iret
cmp
popf
sub
xchg
pop
add
gs
stos
jecxz
and
xchg
faddl
sub
lods
inc
add
adc
sbbl
mov
sub
add
add
fisttpl
add
pop
addr16
push
add
add
mov
cmp
add
push
repnz
mov
sub
jge
cmpsb
xchg
or
pop
add
shll
test
or
mov
jecxz
imul
rclb
stos
int
add
cmp
xlat
pop
std
push
adc
enter
test
jg
cmp
jnp
leave
rolb
push
add
nop
insl
jnp
add
jb
stc
test
adc
jne
pusha
add
add
pop
jmp
sbb
push
add
mov
add
add
in
mov
add
and
test
aaa
shlb
xchg
mov
cmp
add
add
push
add
add
sub
cmc
lcall
add
xor
mov
add
mov
rorb
add
add
xchg
cmp
add
mov
test
aam
sub
inc
add
rcrb
insl
rol
adc
pop
aad
add
bound
mov
add
stc
push
add
add
mov
test
mov
add
cmp
add
add
add
add
dec
jb
fisubrs
into
add
jne
mov
xor
testl
xchg
out
repnz
pusha
add
mov
inc
add
rcl
dec
dec
add
add
add
rorl
inc
int3
pop
add
insl
in
adc
push
add
xor
add
les
leave
clc
xor
or
add
sbb
push
add
andb
jg
ljmp
xchg
xorb
xchg
jle
xor
add
shll
jae
add
or
mov
jmp
outsb
add
add
and
out
fwait
push
add
and
sub
subb
in
add
add
movsl
sahf
push
add
dec
or
mov
hlt
pop
sbb
fimuls
add
adc
mov
rol
pop
add
cli
je
test
xchg
pop
pop
js
push
add
inc
dec
frstor
dec
test
inc
dec
dec
add
cmp
dec
das
movsl
jge
dec
add
cltd
and
sub
sub
orb
mov
mov
stos
mov
sub
jge
jmp
test
cmp
mov
mov
add
lock
mov
pusha
add
add
cmc
test
add
test
aas
test
add
add
insb
add
jbe
xchg
push
add
sbb
cwtl
out
popa
ja
roll
dec
inc
add
xchg
test
into
jne
popf
stc
push
xor
xor
stos
in
idivl
or
loop
add
add
cmp
add
push
adc
xor
cmp
adc
cmp
insl
sahf
xor
pop
add
cmp
daa
out
sub
add
into
or
movsb
and
add
add
add
mov
roll
add
add
loopne
pop
pushl
add
adc
adc
cmpsl
arpl
movsl
inc
and
add
fmull
pop
xor
xchg
pop
add
pusha
add
idivl
and
ljmp
dec
mov
add
add
add
mov
mov
test
add
add
icebp
add
test
add
std
add
adc
stos
sbb
call
dec
add
pop
lea
pop
add
cmp
bound
test
pushf
orb
push
leave
out
xor
pop
inc
adc
out
js
add
adc
outsb
add
enter
pop
add
fdivl
jmp
xor
add
addr16
add
and
and
and
std
sbb
insl
push
mov
xor
sbb
xchg
mov
cltd
movsb
lcall
cmp
push
add
dec
add
jne
add
sub
adc
push
in
xchg
jmp
xor
std
inc
add
cwtl
cmp
aam
lods
ret
dec
mov
add
add
pop
hlt
jp
in
pop
dec
faddp
inc
add
pop
add
cmp
daa
rcrl
mov
add
mov
and
imul
add
xor
add
sahf
lea
lea
pop
add
add
push
inc
or
lock
add
mov
out
int
xchg
adcl
jg
mov
inc
scas
cmp
mov
add
add
sarb
rcrl
adc
ja
dec
add
mov
mov
add
push
add
pop
mov
mov
jge
push
insb
add
xchg
xor
arpl
add
xchg
test
mov
rclb
bound
dec
jmp
mov
push
add
sub
jne
add
add
stc
adc
mov
sub
mov
cmp
call
pusha
add
insl
out
frstor
add
add
stc
mov
shrl
add
test
divl
add
add
aad
ret
add
push
add
shll
sub
cmp
and
add
gs
sbb
add
jns
inc
add
out
push
add
add
cwtl
out
andb
dec
add
add
lret
lods
mov
cmpsb
loopne
ja
sbb
je
popl
add
call
lds
add
sbb
jae
add
jns
mov
rcll
mov
add
repz
cltd
mov
loopne
sarb
cmpl
or
add
inc
sahf
dec
add
dec
inc
add
out
popf
call
adc
add
pop
add
add
lret
test
jbe
mov
xchg
loope
pop
lahf
cmp
xlat
pop
cmpsl
xchg
out
int3
ds
push
mov
add
test
je
mov
add
cmpsl
mov
add
adc
lock
add
lahf
pop
add
mov
xor
icebp
or
add
test
jg
add
push
add
add
sbb
out
mov
add
add
fwait
pop
mov
pop
add
shlb
nop
xchg
xlat
or
mov
add
rcr
stc
cmp
jb
pop
add
inc
push
add
orl
add
imul
xchg
add
inc
add
inc
lcall
ljmp
in
pop
add
add
mov
add
push
add
mov
adc
repz
ficomps
xacquire
dec
add
push
add
pop
leave
fidivrs
shrl
add
xor
fisubl
mov
into
pop
add
cmpsl
mov
iret
xor
sub
jge
add
xchg
add
dec
add
ds
mov
cmp
pop
rclb
add
mov
add
pop
rorb
inc
add
add
add
movsb
fsubrs
sub
repnz
imul
ret
bound
insb
add
jecxz
gs
lea
and
scas
or
cli
xchg
add
or
add
js
adc
inc
movsl
into
scas
cmp
add
add
sbb
das
adc
push
add
add
mov
add
les
test
xor
xchg
sub
movsl
fwait
jg
inc
fstpl
iret
sub
movsl
loope
add
sahf
push
leave
fsubs
scas
nop
and
inc
add
mov
xor
cmp
xchg
idivl
jno
add
fmuls
mov
add
out
pop
add
add
sub
les
push
daa
loop
test
shr
push
add
add
add
add
or
add
add
dec
outsb
add
and
mov
loope
xor
daa
sbb
daa
icebp
not
adc
cmc
cmp
int
mov
add
add
sub
push
xchg
jo
cmp
fnstsw
loop
add
add
add
cmp
data16
mov
sbb
inc
lock
adc
add
add
xchg
sub
sub
jb
pop
mov
hlt
in
add
add
lret
loope
add
add
or
cld
mov
fnstsw
add
pop
xor
aas
ja
add
inc
cmp
adc
and
in
in
stos
add
push
add
adc
xchg
ficomps
sbb
mov
add
add
fisttpll
test
bound
xchg
icebp
sub
dec
add
add
add
in
or
ja
bound
fisubl
call
add
mov
movsl
aad
and
loop
inc
add
push
mov
add
lds
cmpsl
mov
mov
xchg
sar
pushf
lods
out
out
cwtl
add
mov
loop
inc
add
loopne
cwtl
or
out
dec
xor
add
pop
add
sub
lret
inc
add
pop
pop
cli
outsb
add
add
in
ja
add
add
enter
cld
jb
test
or
jns
pop
fadds
add
push
stc
xchg
stos
clc
mov
push
jmp
add
insl
mov
or
cli
xor
movsl
in
pop
inc
add
pop
add
add
lods
add
push
es
mov
mov
mov
add
lahf
into
mov
neg
repz
ja
stos
dec
add
sbb
or
into
mov
lea
cmp
sub
push
add
test
add
ret
ret
add
cld
mov
jl
mov
ret
into
lret
pusha
add
daa
pop
jb
cmc
mov
mov
bound
xchg
sarl
cmp
leave
add
and
add
pop
fwait
mov
movsl
push
jno
add
add
mov
inc
add
imul
movsl
adc
xchg
add
add
hlt
mov
push
add
outsl
repz
enter
add
pop
js
jge
incb
lea
jnp
add
lahf
cwtl
inc
add
lods
jl
pop
out
inc
jp
push
leave
xchg
fcmovnbe
mov
add
gs
add
pusha
add
add
and
in
mov
add
shrl
sbb
and
xchg
xor
repz
flds
test
jne
push
and
xchg
and
add
add
xchg
sarb
add
ja
dec
add
mov
add
add
inc
push
add
mov
mov
add
rolb
inc
add
mov
adc
jbe
cmp
ret
popf
or
inc
sub
add
add
mov
pop
add
pop
push
add
add
test
add
add
mov
and
loopne
sbbl
add
adc
xor
jo
sbb
adc
adc
lret
inc
xor
inc
add
pop
imul
fists
sbb
sbb
inc
add
das
sti
test
stos
sbb
pop
lods
movsb
in
adc
add
add
lock
test
and
aam
test
add
mov
add
add
pop
mov
add
sbb
mov
push
call
mov
add
xor
and
call
push
dec
add
pop
dec
add
mov
push
jae
add
je
push
pop
add
mov
add
sbb
add
frstor
add
mov
xor
add
sbb
mov
xor
outsl
inc
add
add
xchg
repz
shr
lret
hlt
ret
mov
fwait
divb
pop
mov
add
add
add
outsl
sbb
jl
push
mov
mov
add
add
pop
add
ret
imul
mov
mov
xchg
mov
int3
addl
iret
fldlg2
das
add
dec
jp
push
add
mov
das
fistpl
add
add
es
movsb
addr16
push
add
call
push
jae
mov
cmp
daa
aad
lock
add
insl
iret
inc
inc
add
sbb
mov
stc
push
mov
pushf
jb
xchg
pop
add
xchg
and
mov
sub
mov
cmp
xchg
out
sbb
lret
in
jl
fcmovnu
jl
xchg
pop
mov
sub
jl
mov
add
xchg
data16
add
push
leave
sahf
sbb
add
ljmp
add
add
scas
xchg
jbe
xlat
jg
add
mov
add
jae
stos
xor
xchg
mov
add
add
or
mov
add
js
imul
lret
or
sub
push
out
add
push
sub
mov
fists
adc
call
outsl
and
sub
pushf
sbb
jb
stos
and
cltd
pop
jmp
int
add
add
cwtl
push
add
add
xchg
scas
bound
data16
cmc
dec
add
outsb
add
xchg
je
stos
pop
xchg
sub
sub
mov
stos
mov
mov
xor
pop
fistps
das
adc
je
cmc
js
mov
cmpsb
or
jo
cmpl
sbb
out
xchg
movsb
xor
movsl
js
jle
insl
and
outsl
lea
out
mov
jge
dec
add
js
ret
xchg
xor
add
je
arpl
xchg
pop
inc
add
insl
aas
not
inc
add
fnsave
imul
cmpl
jle
sahf
mov
mov
and
bound
cmp
jp
xchg
xlat
add
add
not
out
movsl
icebp
cmpsb
push
adc
push
add
sbb
loop
loope
into
out
roll
aas
add
outsb
add
repz
movsb
outsl
cmp
sbb
xchg
aaa
pop
add
mov
outsl
inc
xor
pusha
add
aas
jo
jo
or
or
mov
lahf
dec
add
dec
insl
push
add
test
jmp
add
sbb
adc
mov
je
add
add
pop
xchg
out
sub
add
xor
divl
scas
mov
add
add
pushf
mov
out
and
add
in
jne
add
mov
out
notl
add
add
add
add
add
iret
fnsave
pop
mov
mov
pop
mov
rolb
xchg
push
add
and
fnsave
mov
mov
stc
dec
add
pop
jl
adc
loope
cmp
add
scas
sub
or
sarb
xchg
call
add
push
add
mov
add
pop
add
and
test
pop
add
pop
add
dec
fimuls
sub
int
add
mov
aam
inc
add
add
out
adc
outsb
add
popa
scas
sbb
adc
push
mov
add
push
add
add
icebp
inc
cmp
popf
inc
add
loopne
dec
add
inc
add
add
add
hlt
out
scas
cmpsb
and
pop
ror
dec
xor
cmp
add
test
fnsave
lahf
adc
aam
jo
adc
or
mov
add
add
dec
pop
je
test
bound
push
xlat
incl
add
mov
shll
das
scas
sub
xchg
jno
fucomip
and
add
add
movsl
xor
arpl
sti
mov
test
in
push
add
add
inc
add
fmull
add
mov
add
ret
test
add
adc
sbb
pop
add
ret
negl
jmp
push
add
flds
cmp
add
fldenv
inc
mov
rol
mov
jecxz
mov
inc
add
add
mov
in
add
add
lret
cmp
mov
mov
mov
add
push
add
push
add
xorb
inc
add
add
add
push
add
dec
rcll
cwtl
dec
add
xchg
xchg
mov
add
xchg
mov
dec
add
add
popa
hlt
inc
add
jns
sub
push
add
mov
mov
add
add
add
fdivrs
add
mov
add
add
sub
fnstcw
pop
add
in
add
add
add
ffreep
pusha
add
xor
sub
inc
push
add
add
xchg
mov
adc
mov
ja
or
testb
xlat
out
pop
add
outsb
add
insb
add
dec
cmp
sti
ds
fldl
lret
mov
add
pop
sub
xchg
push
add
test
je
mov
add
test
adc
jbe
pop
mov
jo
les
add
imul
add
xor
mov
cmpl
lea
add
xor
loopne
add
add
xor
or
mov
push
add
push
imul
repnz
jp
nop
mov
add
mov
add
mov
add
fmuls
mov
mov
mov
add
add
xor
add
scas
xchg
ds
inc
add
daa
or
dec
add
inc
mov
call
sbb
daa
inc
add
add
shlb
or
push
sub
or
push
add
cmp
add
das
outsl
jbe
repnz
hlt
rolb
dec
loop
insl
cmp
and
add
push
add
add
jp
sarl
add
setnp
sbb
sbb
add
enter
add
add
add
add
mov
shll
jno
repnz
xchg
mov
add
add
shlb
pop
out
add
stos
push
add
add
aam
xchg
stos
sub
aas
pop
dec
add
mov
add
hlt
and
lcall
ficompl
add
mov
xlat
jo
xchg
mov
add
add
pop
push
push
add
and
test
mov
fistl
aas
mov
loopne
imul
sub
mov
lea
add
clc
inc
add
add
cmc
xor
js
jbe
dec
add
and
lcall
or
jle
fldcw
xor
push
xlat
or
xchg
lahf
fnclex
imul
push
add
sarl
rclb
xchg
dec
add
addr16
sahf
out
add
mov
inc
add
add
data16
mov
out
out
loop
pop
sbb
maskmovq
idivl
add
xchg
add
and
push
aam
mov
add
cmp
xchg
push
shll
mov
pop
fld1
mov
add
aaa
pushf
push
fdivs
int
jmp
testb
mov
arpl
loop
pop
movsb
add
leave
in
cwtl
jne
push
add
mov
or
add
lea
mov
cmp
jb
pop
lret
xorl
pushf
mov
add
add
mov
mov
popa
fists
jg
push
sub
cli
dec
add
into
mov
inc
add
js
sub
insb
add
cmp
push
add
sub
out
test
add
add
add
fstpt
daa
out
add
jmp
and
adc
pop
fwait
loopne
sbbl
test
add
pop
lea
add
add
push
sarb
push
add
in
pop
add
add
add
pop
add
ja
and
jge
hlt
cwtl
cmp
jg
add
sbb
test
sub
stos
test
add
xlat
mov
xchg
subb
and
lret
push
or
pushf
pop
jnp
xchg
mov
add
add
cmp
scas
add
sbb
add
inc
add
mov
fidivs
add
scas
sub
xchg
out
jae
pop
add
sbb
mov
add
jbe
cmpsb
add
add
adc
xchg
aaa
lret
inc
add
out
push
add
jae
fmul
push
add
jno
ljmp
shrl
jbe
xchg
push
add
add
add
add
add
mov
js
mov
jle
clc
repnz
pop
add
mov
or
test
into
jle
outsl
jb
pop
hlt
int3
xor
mov
add
add
out
push
add
add
and
outsl
scas
pop
pop
add
test
ds
ljmp
dec
add
sahf
je
sub
or
adc
and
xor
ja
xchg
jmp
jne
add
jle
mov
cmp
gs
mov
test
push
lret
loopne
andl
add
dec
add
out
lcall
add
jge
add
pop
into
mov
add
and
adc
js
insb
add
insb
add
sub
lods
dec
add
push
sub
xchg
repz
or
call
add
dec
add
push
aaa
lods
fdivl
dec
mov
jo
or
dec
add
xchg
out
clc
test
xor
push
add
push
add
dec
add
pop
xchg
mov
lret
and
jmp
or
int3
add
add
add
pop
mov
add
sbb
sbbl
pop
add
stc
into
jne
inc
add
add
sub
lahf
dec
stos
in
push
add
pushf
pop
test
add
jno
jne
sbb
addr16
je
mov
sbb
push
shlb
rolb
jo
icebp
add
push
cmp
sbb
or
jne
sti
jp
or
cmpsb
shrb
add
sub
adc
jp
dec
add
add
data16
lods
je
sub
ljmp
adc
xchg
mov
decl
out
std
scas
jl
popf
bound
push
add
ret
out
stc
testb
test
fwait
xchg
mov
rorb
add
add
pop
ds
push
lcall
lahf
or
xor
add
packuswb
add
sbb
inc
add
add
add
jne
jne
add
add
out
xorb
add
stc
jl
js
pop
add
repnz
add
test
test
push
add
scas
lret
mov
add
jnp
push
add
add
sub
negl
add
push
add
and
pop
sub
pop
add
aam
add
add
je
test
push
add
inc
add
dec
xor
pop
pop
add
outsl
cltd
addl
add
or
push
add
fstpl
add
add
outsl
xlat
dec
bound
sub
add
aam
push
add
dec
aas
and
cmpsl
push
lods
stos
mov
lock
add
inc
jecxz
push
add
lahf
adc
shll
mov
adc
and
pushf
cs
js
cmp
shll
add
or
insb
add
pop
outsl
mov
add
loopne
cmpsl
adc
test
xor
in
add
subl
mov
loopne
enter
and
pushl
in
in
mov
ja
and
adc
mov
pop
pop
jle
jbe
or
dec
add
jbe
imul
add
add
into
or
fcmovnbe
iret
add
imul
sbb
addr16
pop
add
iret
pop
add
add
dec
mov
bnd
add
cmpsb
cmp
sub
push
push
cmpb
add
add
add
push
add
fs
out
rol
xor
mov
add
add
fdivrl
clc
cmp
jae
pop
cmp
pop
add
lret
add
loope
mov
mov
push
add
mov
add
sub
pop
add
mov
loopne
aas
outsl
jb
mov
orl
jmp
cmp
icebp
gs
repz
sti
inc
clc
mul
push
add
mov
add
add
cmp
ret
mov
sahf
cli
mov
pusha
add
jnp
sbb
das
jne
lea
push
add
outsb
add
add
decb
scas
lahf
into
jp
add
add
add
mov
fdivs
add
add
dec
add
mov
push
add
iret
or
loop
add
add
add
mov
add
sub
inc
add
aaa
call
scas
cmp
movd
mov
inc
add
ljmp
add
add
add
add
dec
cmpsl
cmp
imul
jmp
cmp
add
bnd
add
shrb
cltd
push
xchg
sbb
inc
adc
inc
add
stos
sub
cmp
add
add
push
xor
bound
add
in
loopne
jle
sbb
adc
inc
or
pop
add
addr16
aas
ss
mov
and
sahf
mov
jle
xchg
inc
add
inc
mov
add
add
xchg
and
out
add
and
xchg
aam
shr
mov
movsl
push
add
aad
xchg
mov
push
rorb
xchg
in
push
add
add
add
cmp
fadd
shlb
hlt
xor
mov
ficoms
xchg
mov
in
mov
dec
lret
movsb
in
clc
sbb
or
mov
clc
cmpsb
push
fnstcw
sahf
mov
lcall
fstl
lret
ja
add
inc
add
cmp
ret
sbb
mov
repz
push
add
add
push
add
daa
xor
lock
int3
push
movsl
aad
pop
lea
sbb
add
test
popf
and
inc
bound
push
insl
dec
add
add
add
dec
or
inc
add
xchg
push
add
mov
mov
and
mov
cwtl
loop
daa
dec
add
adc
incl
lods
pop
add
add
inc
int3
stc
ret
fisubs
add
out
out
enter
fmull
xchg
into
or
ds
data16
je
std
dec
add
outsl
xor
sbb
sbb
rorl
into
mov
dec
call
add
add
add
add
ss
rol
or
fsubrl
adc
mov
les
xchg
mov
pop
xor
fsub
jnp
lods
add
xor
push
in
imul
lahf
clc
pop
xor
test
dec
add
push
pop
sbb
adcl
test
add
mov
jl
mov
mov
cmp
fistl
sbb
push
add
stc
clc
jae
leave
mov
outsb
add
inc
nop
movsl
sahf
adc
pop
add
lahf
ret
dec
add
roll
mov
lret
data16
pop
sub
and
pop
jbe
shl
cmp
fwait
add
cwtl
loopne
out
outsl
nop
cmp
add
dec
add
add
push
enter
xchg
decb
or
xchg
out
add
sahf
xlat
add
fldenv
dec
add
int3
add
cmc
xor
arpl
fbstp
pushl
adc
mov
add
mov
add
out
adc
stos
adc
negb
pop
add
jle
mov
insl
xor
xchg
bound
xchg
int3
sub
push
test
add
fldcw
add
cmp
inc
sbb
xlat
xchg
xor
lret
leave
pop
add
dec
add
add
icebp
add
cmp
add
sub
out
insb
add
sbb
mov
add
test
pop
push
add
pop
dec
add
stc
or
loop
or
cld
inc
add
add
add
outsl
test
sub
fcompl
add
mov
jns
mov
cmp
adcb
inc
add
scas
xor
push
add
loop
arpl
loop
adc
cmc
sub
mov
pop
ds
dec
push
repnz
sahf
fwait
add
or
hlt
sete
lods
adc
addr16
add
and
icebp
popl
add
ljmp
mov
mov
or
add
pusha
add
add
fstpl
add
add
inc
add
pusha
add
aad
inc
push
inc
call
into
into
lods
push
add
shl
add
test
or
sti
sbbl
add
push
sbb
jae
add
xchg
add
jecxz
and
adc
adc
inc
push
add
lock
pop
mov
push
jg
mov
add
outsl
dec
add
add
xchg
aas
sbb
mov
add
cmp
jp
movsl
mov
jle
imul
push
add
mov
add
dec
add
add
jl
sarb
and
jae
sahf
outsb
add
outsb
add
or
xor
pop
add
mov
xchg
je
xorb
bound
insl
je
ljmp
negb
add
fstps
dec
add
add
and
mov
xchg
ficomps
add
add
jns
xchg
add
mov
dec
add
cmp
and
fistpl
jbe
mov
add
inc
add
lds
push
add
add
add
sbb
out
pop
add
add
sub
jecxz
aas
push
add
add
shlb
push
push
add
mov
fsubp
xchg
xor
jb
shll
test
call
sti
dec
in
or
add
daa
cmp
es
xor
add
add
jge
jge
adc
push
jb
lods
inc
add
fstl
add
add
or
in
adc
sub
add
pop
pop
lahf
insb
add
mov
fsubrl
push
add
fld
jecxz
add
outsb
add
call
add
stos
mov
shr
fsubrl
add
int
mov
fnstcw
addr16
jmp
add
jp
mov
add
and
add
or
dec
add
add
test
add
xchg
or
push
add
sbb
fidivl
test
add
sbb
jbe
push
add
arpl
add
inc
lods
sub
push
add
xchg
jno
loope
add
add
add
out
mov
xor
pop
adc
or
rcr
cwtl
mov
sub
jnp
aaa
push
jno
jmp
jnp
test
mov
add
add
pop
xchg
ror
lcall
add
in
data16
pusha
add
fimuls
pop
xchg
add
jns
add
add
add
add
lret
sub
sbb
cmp
add
push
add
clc
lret
data16
add
xchg
test
push
add
add
test
in
outsb
add
arpl
push
sub
push
dec
shr
mov
rolb
popa
cmp
arpl
push
add
fwait
push
add
add
add
unpcklps
outsb
add
jmp
scas
iret
data16
cmp
mov
mov
jp
pop
push
xchg
lahf
rcrl
mov
clc
adc
les
add
xchg
cmp
jmp
or
add
imul
or
pop
add
enter
mov
out
add
les
push
add
inc
add
daa
pop
add
mov
add
sbb
or
pop
cmp
inc
add
add
push
add
pop
add
add
add
ret
repnz
dec
add
jl
aas
xchg
test
notb
add
sarl
in
xor
loop
fs
imull
inc
add
std
leave
cli
daa
ss
ljmp
pop
add
add
add
add
jne
les
inc
add
add
add
in
add
add
pop
lds
add
push
add
movl
imull
add
idivb
movsl
xor
adc
sub
add
shll
jl
inc
add
mov
daa
clc
or
and
adc
push
adc
push
sub
and
dec
add
and
push
add
add
mov
xchg
shll
add
jno
add
dec
into
ja
xchg
mov
sbb
test
and
out
aad
enter
dec
add
rorb
jo
dec
add
sti
mov
push
sti
add
arpl
jmp
dec
call
xchg
fcmovnu
les
mov
pop
sbb
cmp
inc
add
gs
add
negl
out
or
add
outsb
add
mov
lds
push
mov
fwait
push
add
data16
sarl
add
add
imulb
je
pop
add
add
add
add
add
adc
fsubp
int
add
loop
iret
push
cmp
push
rorb
add
fstp
inc
cltd
lea
scas
or
stos
cmp
cmp
ljmp
arpl
js
jp
add
add
cmp
xor
add
add
daa
repz
add
or
xor
rol
xchg
jno
fsubrs
fldenv
xor
add
in
lcall
cld
jb
pop
inc
xorb
xchg
movsl
pop
add
push
jp
mov
lret
add
lret
push
add
add
and
add
add
shll
add
push
push
add
add
jns
add
add
shll
add
cmp
dec
or
mov
add
lock
add
shlb
mov
cltd
dec
mov
ror
push
add
add
roll
xor
add
add
dec
sub
lret
mov
inc
lahf
xchg
sbb
mov
fnstsw
add
add
shrl
cmp
add
out
inc
add
and
pop
add
fmull
add
cmp
call
neg
std
test
lcall
fiadds
in
sub
push
dec
add
out
and
sub
xor
cmpsl
fucom
sub
decb
rorb
xchg
sub
js
xchg
icebp
xor
sub
scas
mov
clc
outsl
loop
push
add
adc
stos
popa
or
push
add
sub
add
test
cmp
and
add
cmpsb
inc
add
aam
add
popf
push
xor
dec
add
adc
add
int3
loope
pop
lcall
hlt
jl
andb
xor
xchg
xchg
jecxz
dec
add
and
add
mov
add
add
lea
pop
adc
or
push
add
mov
lods
shl
stc
mov
xchg
jmp
jp
fldlg2
mov
mov
add
outsb
add
popa
mov
adc
jg
add
stos
sti
sahf
push
add
aam
jb
in
mov
icebp
xchg
loope
add
add
push
add
stc
mov
cld
imul
sete
in
mov
add
add
loope
xchg
nop
je
int
add
lods
scas
dec
subl
dec
add
pop
pusha
add
add
add
cmp
add
ficoml
add
imul
stc
dec
add
mov
lahf
adc
imul
mov
iret
sbb
das
dec
cmp
jne
pop
add
add
mov
sbb
add
sbb
or
mov
adc
or
bound
lods
rcll
and
nop
adc
pop
je
mov
fwait
dec
add
leave
outsl
xchg
cli
lahf
lock
mov
aas
inc
mov
in
or
stc
or
shl
test
decl
out
add
cmp
add
jle
dec
imul
aam
les
test
adc
movsb
mov
add
pusha
add
add
add
or
dec
add
daa
enter
bnd
xchg
push
add
sahf
mov
add
in
scas
pop
les
add
add
testl
add
push
add
mov
sti
pop
mov
pushf
inc
add
add
in
add
into
popf
adc
add
aad
out
ret
and
sti
fimull
andl
pop
mov
mov
aad
add
sahf
hlt
adc
and
scas
sbb
pop
in
adc
inc
add
in
cld
mov
movsb
mov
add
add
mov
xorl
add
jno
mov
aad
inc
add
add
or
aam
in
add
add
out
xchg
sub
sbb
add
fldcw
lret
lock
add
cmp
pop
sbbb
bound
inc
add
ja
add
out
xchg
pop
jb
adcl
jp
call
add
inc
add
xor
ret
add
bound
out
in
or
adc
add
pusha
add
mov
pop
add
xchg
cmp
dec
add
inc
add
mov
shll
cmpsb
xchg
mov
xor
daa
jp
lods
or
push
add
add
add
fs
sub
sbb
nop
add
add
in
xorb
ss
lock
sbb
arpl
cld
push
add
negb
out
gs
add
cmp
loopne
sbb
push
add
inc
mov
shrb
add
cmp
rorb
pusha
add
cmp
sub
adc
in
call
in
add
popf
pop
cmpsl
pop
add
stc
jns
add
push
add
out
aad
add
mov
add
add
jb
ret
push
pop
pop
js
pop
add
add
add
das
movb
add
dec
add
sub
inc
add
mov
subb
sti
mov
cmc
ja
pop
hlt
or
lahf
sahf
insl
in
add
test
inc
cmpsl
cmc
sti
or
mov
cmp
sub
mov
add
movsl
jecxz
cmp
inc
add
mov
xlat
xchg
lods
jns
fiadds
mov
rorl
js
stos
pop
add
or
mov
xor
sbb
in
movb
jl
movsl
std
adc
lret
arpl
or
pop
pop
add
cld
cli
into
repnz
test
inc
add
dec
ljmp
add
add
stos
nop
sbb
in
or
dec
in
cmp
lahf
xor
lahf
add
inc
in
into
pop
add
lea
popa
shll
push
add
pop
add
add
and
ja
imul
jns
subl
pop
sti
daa
mov
add
adc
iret
dec
sbb
push
add
add
add
push
or
jge
add
test
iret
out
inc
add
test
cli
sbb
fldt
add
daa
stos
mov
call
adc
add
fwait
jnp
inc
rclb
jmp
add
dec
repnz
out
xchg
jno
mov
daa
lahf
push
add
pop
mov
cmpsl
flds
test
test
or
adc
mov
movsb
pop
dec
add
xchg
out
sbb
xchg
or
adc
testl
aam
movsl
mov
mov
add
lcall
pusha
add
aaa
pop
adcb
jmp
add
ss
jl
xorl
sub
dec
add
add
fidivl
notb
repnz
mov
add
imul
pop
push
cmp
cwtl
aad
sahf
add
cvttps2pi
adc
push
add
repz
xor
mov
pop
add
mov
add
xchg
test
jae
add
add
orb
add
movsl
js
pusha
add
in
movsb
call
adc
inc
leave
addl
and
inc
pop
add
inc
mov
add
fmul
cmpsl
cmp
jecxz
add
add
add
hlt
lock
into
dec
xchg
mov
jecxz
mov
mov
sub
bound
mov
add
dec
add
pop
pushl
add
in
mov
add
adc
xchg
ficompl
add
inc
out
sahf
stos
popa
ret
sbb
notl
dec
jmp
add
rorb
push
add
cmc
pusha
add
lods
ljmp
js
inc
jno
iret
mov
stos
sub
add
pop
jae
add
out
jbe
dec
add
pop
add
jl
cmp
mov
add
sti
mov
add
cld
push
add
inc
mov
add
xor
push
add
dec
mov
movsl
ficompl
je
xor
jns
in
adc
loopne
pop
adcb
addr16
xchg
mov
pop
inc
cmp
and
sarb
sti
dec
add
pusha
add
sub
rorb
fnsave
add
lret
in
sbb
lods
fidivs
icebp
lret
loop
add
mov
add
add
add
cmp
xor
add
push
lods
popf
out
push
add
ret
stc
mov
add
add
std
outsl
enter
cmp
mov
lret
add
push
add
add
or
xchg
leave
not
inc
add
stos
adc
add
jbe
test
mov
xchg
inc
add
mov
loop
xchg
arpl
aad
push
xor
jbe
lock
aad
ja
jp
ljmp
inc
cmpsl
or
and
aas
mov
push
add
lret
mov
inc
pop
and
cmpsl
or
stc
aaa
cmpl
add
add
sahf
pop
ljmp
inc
xchg
imul
sbb
mov
add
cmp
mov
rcrb
add
lret
xchg
out
aad
add
scas
scas
enter
inc
add
cmp
jmp
push
add
and
add
jmp
or
fs
jae
lahf
ret
push
scas
iret
xchg
jge
xor
push
sbb
jae
add
add
adc
sub
fsubp
fxch
in
les
inc
add
xchg
push
add
pop
or
sti
and
and
push
add
cltd
jp
xchg
lds
loop
add
push
arpl
sbb
pop
fs
pop
add
jns
add
cmp
pop
add
pop
inc
add
add
xchg
jmp
mov
cmp
add
cmp
mov
add
mov
test
dec
add
scas
dec
add
jae
adc
sbb
int3
mov
in
lods
jg
jge
sbb
jno
push
add
add
add
andl
jae
add
add
flds
pushf
push
add
xchg
push
add
cmp
fnstenv
das
clc
inc
cmp
jp
imul
add
in
mov
add
aaa
hlt
out
imul
lret
add
sbb
jae
xor
sbb
xchg
mov
cmp
add
shll
jns
fdivrs
dec
and
mov
mov
popl
add
mov
mov
and
lods
sbb
icebp
and
scas
mov
add
dec
add
add
rcrb
fimull
lcall
ja
cmp
sbb
dec
imul
add
orb
pop
add
xor
fucomp
pop
das
sub
cmpsl
mov
xchg
cmp
xor
ja
xchg
jle
jp
cs
mov
repnz
sub
jb
jbe
sub
add
adc
outsb
add
arpl
add
fs
ret
push
add
add
add
mov
add
jecxz
popa
xchg
xchg
add
mov
add
popa
pusha
add
mov
sbb
sbb
push
nop
imul
insb
add
cld
in
mov
jmp
loopne
push
inc
add
nop
sbb
push
jne
out
lds
sti
lret
sub
xor
jge
or
push
add
push
add
icebp
mov
xchg
add
add
mov
ret
mov
xchg
dec
add
cmp
add
mov
aam
cmp
add
pop
add
and
sti
push
add
pop
sbb
sbb
xor
xlat
and
cmp
popf
xor
add
dec
jmp
cmp
ud1
in
pop
add
jmp
stos
mov
std
js
sbb
stc
std
fnsave
add
push
add
icebp
fmul
add
daa
jns
sub
add
sbb
pop
cmp
or
stos
ror
push
add
hlt
sbb
imul
cmp
add
ljmp
xchg
cmp
imul
sub
imul
add
popf
lods
fwait
icebp
sub
xchg
jp
push
add
sbbl
add
mov
mov
add
mov
sbb
push
add
ljmp
push
add
ljmp
add
in
cmp
add
xchg
sbb
into
mov
cltd
out
insb
add
ss
or
push
add
cld
pop
add
mov
add
add
jbe
fldl
hlt
fdivrp
lret
add
add
add
add
mov
adcl
add
sub
pop
xor
orl
jae
fcmovu
mov
fldl
add
xlat
add
idivl
sub
sbb
add
mov
add
fwait
or
leave
mov
rcr
out
out
sub
add
add
add
data16
add
add
add
xchg
lahf
test
or
push
xlat
lods
mov
mov
add
dec
lret
sti
inc
sub
scas
push
add
add
and
imul
adc
or
jo
mov
ror
and
arpl
push
add
notl
into
inc
pop
add
fcomps
add
addr16
cmovno
leave
js
pop
in
mov
pushf
jae
add
xor
shlb
pop
add
add
pop
add
and
stos
mov
lock
xchg
lods
or
lea
stc
jecxz
add
add
push
add
add
shll
add
fwait
pushf
lods
or
sub
xchg
shrl
add
bound
in
cmp
stos
or
nop
mov
into
inc
add
mov
xor
mov
inc
add
dec
lea
inc
and
jle
mov
push
push
add
pop
sbb
sti
je
into
dec
add
pop
add
dec
add
xor
test
add
gs
add
and
push
sub
test
nop
adc
fcmovbe
fnsave
sbbb
dec
rcl
addb
xchg
rolb
clc
cwtl
push
iret
mov
add
add
das
jmp
lea
popa
insb
add
les
scas
ljmp
shrl
add
andb
dec
add
sbb
jnp
mov
add
push
cmp
add
jmp
int3
test
aad
sub
jle
mov
adc
lahf
sbb
add
loope
pop
add
inc
add
add
push
add
jle
mov
cmp
mov
add
xchg
lret
jae
add
cmpb
add
sahf
inc
add
pushf
sti
push
add
or
sti
pop
pop
adc
add
add
aad
and
nop
lods
std
popa
loop
das
inc
mov
add
aad
add
repz
add
add
lret
cld
cmpsb
lods
pop
add
and
add
jae
add
xchg
sbb
sub
lds
lock
cmp
adc
divb
data16
push
add
add
mov
mov
jp
in
out
testl
mov
sub
add
mov
xor
add
aam
add
add
shrl
stos
xchg
or
xchg
dec
leave
fwait
cmp
addr16
jno
jo
add
inc
push
add
pop
add
and
cmp
ljmp
add
adcb
add
xchg
jecxz
bound
add
cltd
movsl
mov
add
fwait
ret
or
xor
jne
xchg
xchg
xor
mov
add
mov
push
mov
cmp
or
add
fstpl
mov
mov
out
ret
insb
add
fstpt
add
push
sub
pop
scas
mov
shlb
add
fdivrl
sbb
dec
add
les
add
sbb
mov
movsl
adc
push
add
add
cltd
imul
mov
add
js
jl
lahf
iret
xchg
pop
add
sbb
mov
popf
sub
orb
fdiv
rdpmc
mov
jmp
dec
sahf
push
xchg
pop
xchg
jmp
sub
push
popa
dec
mov
outsb
add
push
add
dec
add
inc
movsl
mov
and
or
daa
mov
arpl
mov
and
push
add
xchg
mov
add
movsl
call
inc
add
out
mov
jne
jle
pop
add
out
pop
dec
add
add
xchg
add
add
jns
loopne
test
or
or
xor
icebp
push
inc
add
mov
data16
add
sbb
add
add
sub
inc
or
cs
and
pop
gs
sahf
ja
inc
cli
lret
and
mov
add
movsb
sbb
jge
push
xchg
sar
xchg
shl
adc
jbe
cmp
sub
push
add
push
add
mov
xchg
mov
xchg
sti
scas
push
bnd
add
add
sub
xchg
mov
or
push
push
add
mov
add
pop
mov
fsubp
shrb
ret
inc
ljmp
sub
add
and
xchg
sbb
adc
add
push
add
jp
xor
lret
hlt
mov
outsb
add
push
add
fsubrp
xor
loopne
test
iret
jmp
mov
mov
lds
mov
call
arpl
add
stc
or
mov
call
and
mulb
add
add
and
mov
bound
inc
cmpsl
xchg
sub
fdivs
mov
les
cmp
mov
jno
add
dec
jmp
add
popa
test
or
lcall
xor
into
ret
mov
loope
fistpll
add
and
add
faddp
in
mov
add
add
add
sub
xor
daa
int
xchg
movsl
fwait
movsb
adc
add
dec
cmp
mov
scas
or
adc
mov
testl
mov
mov
add
add
leave
dec
add
jb
mov
add
ret
and
add
add
xchg
jne
dec
add
loop
add
rep
data16
sahf
jb
mov
sub
pop
inc
clc
loop
mov
xchg
dec
add
mov
add
mov
jns
or
lods
add
mov
clc
cli
xchg
fsubrl
push
add
lahf
insb
add
pop
out
xor
hlt
dec
add
add
data16
adc
push
iret
mov
js
xor
not
imul
int
js
in
mov
mov
add
adc
jl
mov
push
cmp
shrl
in
dec
out
int3
xchg
or
mov
rcrl
add
cmp
xor
mov
test
xchg
pop
add
cmp
mov
iret
pop
add
add
dec
add
xchg
pop
add
push
add
fists
mov
mov
scas
iret
mov
add
into
jnp
add
add
test
pop
movb
loope
sarl
add
xchg
mov
add
aaa
vmwrite
push
add
cmp
je
mov
sbb
lods
cltd
mov
sub
add
jmp
add
fucomip
dec
add
sub
jecxz
push
add
pushf
xor
fwait
pop
dec
add
scas
pop
popa
adc
mov
push
add
mov
mov
add
loopne
dec
xchg
add
mov
add
add
add
add
add
add
pop
add
jp
in
rorb
test
add
nop
or
jae
mov
sbb
nop
mov
roll
cmp
jo
movsb
pop
add
mov
outsb
add
lcall
add
inc
jg
add
dec
add
out
pop
stc
push
push
pop
or
fidivl
xchg
push
add
lock
sub
add
sbb
mov
pushf
push
aam
add
out
daa
sub
and
and
add
and
cmpl
cmp
add
jmp
rclb
xchg
add
add
adc
in
ret
xlat
cld
pop
add
pop
sbbb
sbb
inc
inc
aad
add
in
rcll
subl
popf
arpl
add
loop
cltd
stos
jbe
xor
cmpsl
out
lret
add
xchg
adc
loopne
jge
sbb
filds
les
and
pop
idivl
add
clc
out
mov
jno
xor
add
cwtl
xor
out
add
add
fs
or
pop
sub
inc
add
fnstenv
add
dec
jge
clc
icebp
addr16
cli
loopne
dec
add
fildll
jg
jmp
cli
gs
add
cmp
aas
pop
loopne
add
pop
add
inc
mov
dec
add
stc
mov
inc
add
enter
jno
sahf
push
test
scas
sbb
or
add
add
xchg
add
divl
hlt
stc
cltd
and
pop
add
xlat
aam
add
test
sahf
cmpsl
and
imul
ficomps
add
cltd
stc
xor
cmpsl
bound
adc
inc
add
mov
inc
cmp
imul
and
xchg
ret
and
mov
xor
cmp
fabs
icebp
popf
add
jae
stos
sbb
inc
lcall
push
add
adc
add
sti
aad
add
shll
clc
imul
mov
data16
add
scas
faddl
xlat
push
add
sbb
sbb
hlt
push
popf
insl
cmpb
ror
mov
add
mov
adc
shlb
std
movsb
and
in
outsl
sbb
mov
add
outsb
add
das
add
cltd
ret
add
xchg
jmp
lea
inc
add
add
push
add
or
add
cld
adc
add
clc
add
add
push
add
mov
dec
sbb
add
out
sbb
cmp
icebp
push
add
dec
imul
add
clc
push
test
inc
inc
add
adc
arpl
mov
xchg
outsl
and
std
pop
add
add
std
adc
sub
sbb
sub
mov
push
and
fdivrs
or
iret
out
out
inc
or
add
push
add
add
jno
out
ret
out
push
add
mov
adc
sahf
add
add
dec
add
aaa
cmp
test
pop
dec
push
add
add
add
popl
scas
addr16
mull
add
mov
add
add
sub
mov
or
mov
out
pop
add
add
sbb
cmp
add
jmp
mov
into
cld
pop
add
mov
add
in
add
mov
add
stc
in
fstl
mov
cmc
push
icebp
notb
add
rcll
pop
mov
jmp
addl
jne
xchg
jne
movsl
dec
add
pop
add
xor
add
ret
push
int3
adc
sbb
cs
into
roll
or
add
sbb
adc
add
add
mov
add
cmp
enter
pop
dec
add
cmp
mov
mov
sub
movsb
mov
adc
inc
add
popf
ja
int3
in
push
jge
call
jge
insb
add
and
pop
call
xchg
xor
mov
push
add
mov
add
inc
fdivrl
add
pop
add
add
scas
dec
or
iret
pop
add
and
fwait
int
add
mov
fisttpll
gs
mov
out
add
iret
mov
add
add
rolb
add
cwtl
mov
enter
or
xor
cwtl
xchg
mov
or
data16
jns
add
add
pushf
cmp
xchg
test
repz
rcrl
int3
pop
add
add
push
cmp
mov
and
mov
cmp
mov
add
add
add
add
cmp
cmp
mov
fists
mov
add
popa
cld
xor
add
cmp
dec
pop
mov
add
pop
add
inc
add
and
cmp
in
mov
add
movsl
ret
jl
jbe
icebp
and
jmp
adc
mov
into
inc
add
aam
push
add
cmp
xor
popa
insl
and
int3
inc
pop
pop
dec
add
div
pushf
pop
imul
shr
add
aas
stos
fstpl
pushf
arpl
add
xchg
lds
hlt
mov
cli
into
insl
jle
mov
add
sbb
icebp
fcmove
sbb
pop
orl
mov
dec
pushf
int3
push
cltd
inc
or
pushf
std
mov
add
add
imul
imul
fistpll
dec
add
add
pop
cmp
dec
add
add
dec
and
out
sub
cmp
cmc
rolb
fists
add
push
push
xchg
mov
add
aad
add
cmp
push
xchg
push
add
sbb
rcll
add
push
add
mov
mov
aas
or
jl
rcr
leave
ja
popa
inc
add
mov
test
cmpsb
test
popa
dec
add
jp
loopne
and
mov
xchg
jg
lods
and
add
ret
movl
mov
cmpsb
pop
and
lock
cmp
bound
lods
push
add
out
push
add
add
test
inc
add
addr16
lods
adc
add
in
sbb
outsl
mov
add
outsl
mov
add
add
les
add
add
sbb
xorl
mov
jo
push
add
xchg
ss
push
add
mov
adc
cwtl
fidivl
add
mov
nop
or
mov
bound
xchg
stc
fdivl
xlat
inc
jecxz
add
add
sahf
add
inc
bnd
xor
sub
arpl
and
and
and
and
loope
jo
sbb
mov
cmpsb
setge
sbb
add
das
in
add
mov
mov
dec
sub
insl
pop
andl
jbe
pop
add
mov
add
dec
pop
mov
sbb
jmp
xchg
jb
call
add
addb
loope
test
pop
add
jp
test
add
je
out
jnp
mov
fdiv
sub
cmp
push
add
add
add
or
cmpsl
fsubr
aam
xchg
pop
lcall
sar
gs
adc
dec
add
inc
xlat
mov
add
sbb
add
dec
add
add
daa
push
scas
int3
xor
add
xchg
stc
push
add
jo
dec
add
pop
loop
add
jecxz
add
insl
add
jmp
add
add
stos
sbb
mov
cmp
gs
adc
out
aad
add
add
add
sub
mov
add
add
add
mov
add
add
mov
add
pusha
add
cmpsl
mov
imul
lret
push
add
cmp
aaa
aad
push
add
add
add
push
add
inc
add
sub
cmc
and
sub
pop
fnstsw
add
into
out
das
fldl
add
add
lea
mov
jp
sbb
sub
repz
fdivrs
push
fisttpl
mov
push
dec
add
dec
dec
mov
add
xchg
dec
add
movsl
pop
and
in
xor
fcomp
lock
adc
xor
sub
inc
mov
mov
add
xchg
jo
movsb
fsubr
loopne
mov
jbe
cmpl
rcrl
add
sahf
fimuls
in
mov
xorl
clc
xor
pop
aam
xor
push
add
pop
leave
jmp
pop
and
add
inc
jnp
scas
icebp
scas
outsl
lods
mov
addr16
js
mov
push
and
xchg
pop
add
jl
mov
lret
cmp
rclb
add
out
testb
testl
jnp
loop
mov
add
dec
sbb
xchg
lcall
add
or
rorb
add
outsl
mov
out
hlt
xor
adc
add
add
add
mov
push
jno
or
dec
insl
inc
push
stos
inc
xor
mov
lock
lods
dec
fcoms
add
out
lods
hlt
imul
cmp
in
adc
jmp
add
test
fsub
jne
rol
add
add
xchg
cld
cmp
jg
mov
inc
popf
mov
sbb
add
divl
and
jp
push
add
mov
js
push
add
add
inc
push
cli
loopne
mov
int3
out
fisubrl
add
add
daa
dec
add
push
add
lds
add
cwtl
push
xchg
jno
push
add
or
adc
scas
jecxz
adcb
fimull
add
xchg
or
mov
mov
ljmp
add
sub
add
add
test
mov
mov
subl
push
in
push
add
arpl
dec
mulps
inc
aam
lret
stos
bound
fnstcw
or
jno
mov
push
pop
add
pop
add
cmpl
jno
push
out
pop
add
out
add
or
imul
test
xchg
rorb
in
xlat
sbb
add
adc
add
cld
stc
imul
xor
add
xchg
inc
mov
or
enter
fmulp
mov
lret
adc
fldl
add
cli
add
in
lret
lock
inc
jb
add
add
add
sahf
add
add
jns
add
add
and
add
or
add
mov
fcmove
pushf
and
xchg
cmpsb
dec
add
dec
add
add
stc
xchg
push
add
cli
xor
push
add
cli
jge
scas
adc
iret
into
stos
pop
add
push
add
add
add
xor
dec
add
sub
push
add
xchg
sbb
pop
add
xchg
add
lret
mov
push
add
add
pushf
mov
outsl
imul
dec
add
sub
mov
add
add
jbe
ljmp
data16
or
lods
push
add
inc
add
div
inc
add
add
mov
add
sbb
mov
push
jno
mov
scas
jge
push
or
xor
add
adc
pop
scas
je
hlt
aad
dec
add
inc
add
lcall
add
cltd
xchg
push
add
clc
xchg
dec
je
pop
add
add
out
xor
fidivs
push
movsl
adc
lcall
jno
and
xor
imul
cmp
mov
adc
negl
cltd
movsb
jp
ret
jecxz
xchg
mov
in
mov
push
add
add
add
daa
mov
push
add
add
test
add
loope
pop
ret
jbe
jne
push
add
dec
mov
and
add
dec
cli
icebp
popf
cmp
jo
sub
fs
inc
add
jmp
add
sbb
fnstcw
add
or
push
jl
repz
shlb
lods
iret
insb
add
mov
insb
add
cmp
sti
loopne
add
lds
popf
jle
aaa
lahf
sbbl
jnp
add
and
cli
imul
lods
dec
add
push
add
add
adc
icebp
fbstp
add
xor
movq
add
sub
negl
repz
gs
add
adcl
mov
int3
fildl
add
jmp
cli
push
pop
inc
add
out
ja
test
in
add
add
je
fwait
cmp
jecxz
and
int
add
dec
insb
add
xor
add
push
add
add
jae
add
fucomip
insl
insl
addr16
add
sbb
dec
popa
pop
sarb
push
add
sub
push
sbb
insb
add
jg
das
ss
ret
in
outsl
fucom
fcmovne
outsb
add
daa
gs
or
push
add
js
push
add
add
add
xchg
cmpsb
outsl
nop
cli
ds
and
add
add
pop
and
jns
aam
add
lds
add
lahf
add
inc
add
cltd
nop
and
ss
adc
pop
std
mov
jno
scas
pop
add
add
mov
rep
pop
jg
ljmp
add
add
sub
idivl
adc
int3
lods
add
cmp
lods
push
add
xchg
out
in
add
push
add
xchg
mov
daa
sub
mov
add
cmp
es
in
test
inc
and
xchg
subps
adc
mov
jecxz
addr16
add
mov
add
test
mov
mov
in
push
fisubl
mov
and
add
fadd
cmovns
add
dec
add
sub
mov
loope
fwait
test
xlat
hlt
pop
add
jmp
fmuls
jno
into
dec
ljmp
stc
pop
xchg
push
daa
js
mov
push
add
push
lods
lods
ret
call
test
inc
mov
push
add
or
lock
jmp
cmpsb
xlat
xchg
sti
xor
jge
add
xchg
fstenv
add
rolb
stos
imul
add
sub
pop
add
jne
std
cmp
pop
rcrl
xor
insb
add
das
sub
or
add
adc
mov
push
add
sub
add
add
add
sti
in
jp
inc
add
jecxz
or
jl
xchg
add
add
lea
xchg
aas
sbb
add
jae
mov
add
mov
sti
jle
jg
out
and
inc
cli
stc
add
mov
std
xchg
xchg
sub
add
add
add
inc
scas
out
add
add
scas
dec
add
imul
xor
in
add
xchg
stos
bound
jno
add
cs
xchg
jmp
dec
das
pusha
add
test
sbb
sti
xlat
mov
bound
jns
add
add
add
push
add
sbb
cld
mov
clc
mov
loope
push
or
or
xlat
insl
lret
cmp
fwait
mov
add
sbb
add
push
int
jmp
add
mov
add
add
lret
bswap
mov
and
adc
popf
xchg
test
jg
jmp
add
movl
int3
shr
push
add
pop
add
inc
push
add
jl
mov
lcall
add
call
xchg
adc
and
lahf
mov
outsl
sub
and
mov
inc
add
mov
inc
add
add
push
and
jo
movsb
mov
xor
lods
xlat
sarb
rolb
pop
test
add
adc
add
lcall
add
add
xchg
adc
hlt
mov
adc
sub
mov
je
dec
into
jne
test
sub
adc
sti
into
pop
add
int3
add
dec
add
xlat
dec
add
cmp
jo
adc
les
cmpsb
xorl
add
add
out
or
lcall
add
pop
out
hlt
cmp
lock
dec
dec
mov
ret
fsubr
add
cmp
inc
lock
shrb
hlt
lret
add
add
push
pushf
mov
add
ljmp
push
add
leave
sbb
mov
das
push
add
pop
fwait
fs
push
add
mov
add
dec
add
sbb
xor
dec
add
aas
int3
call
shll
inc
add
pop
cld
fsts
jecxz
or
movsb
mov
mov
mov
mov
sub
pop
add
add
add
fsubrl
orb
dec
add
subl
mov
lahf
dec
inc
idivb
add
sbb
ret
scas
fcompl
mov
lods
push
add
insl
iret
in
add
sti
xor
arpl
xor
push
fwait
add
add
lock
cmpsb
adc
add
push
push
std
leave
aad
pop
testb
insb
add
repnz
mov
xchg
mov
arpl
loop
out
add
enter
pushf
mov
xchg
fnstcw
jg
imul
lods
push
int
mov
inc
lcall
dec
ja
mov
fwait
adc
add
mov
cli
rcll
int
or
mov
add
dec
add
fidivrl
adc
add
add
xchg
unpckhps
dec
add
mov
loopne
jo
loop
dec
add
add
lods
push
add
xorb
mov
mov
add
push
cmpl
add
lea
sub
je
outsb
add
lcall
jne
add
cwtl
mov
adc
enter
stos
sub
sbb
sti
test
mov
push
mov
movsb
les
xor
mov
ljmp
lcall
data16
add
shll
testb
add
jne
add
clc
inc
add
jecxz
pusha
add
mov
add
fidivrs
add
pop
sub
mov
xor
out
push
add
lods
inc
cltd
aad
add
movsb
xor
nop
in
es
add
test
add
arpl
xlat
lret
dec
add
dec
cmp
inc
adcl
add
pop
or
add
popf
jbe
setno
sti
sbb
jp
mov
lds
xchg
add
daa
mov
sub
sbb
or
dec
add
xchg
or
add
mov
jecxz
add
fwait
jge
xchg
xlat
hlt
ljmp
pop
pop
push
add
sbb
add
add
cld
repnz
jle
push
add
add
add
add
add
fsubp
adc
add
mov
js
mov
add
xor
push
add
cmp
sub
dec
add
add
shll
or
add
les
add
add
rcrb
lods
filds
inc
pop
mov
jl
movsl
loopne
add
lahf
pop
add
outsb
add
mov
inc
dec
or
mov
fcoms
add
add
dec
push
add
sbb
mov
inc
mov
add
cwtl
int
pop
adc
mov
mov
add
mov
scas
mov
add
in
test
add
xor
and
insl
movsb
mov
dec
out
out
add
ret
sbb
push
jne
inc
add
aas
adc
in
xorl
mov
add
rcrl
mov
add
add
and
pop
inc
add
aas
mov
xor
or
mov
add
xor
push
add
sub
jbe
xchg
xor
mov
adc
jmp
xor
mov
inc
outsl
sub
mov
movsl
jns
add
lcall
push
mov
stc
push
shrl
add
out
push
ret
add
add
js
add
adc
cmp
pop
loopne
add
adc
pop
iret
lods
mov
ret
in
in
sti
adc
addr16
cmp
icebp
inc
add
adc
fdivs
cli
popf
gs
add
into
rcrl
add
inc
add
into
inc
add
inc
or
or
cvtdq2ps
mov
dec
add
pushl
jnp
push
add
add
mov
add
scas
lea
add
push
and
mov
enter
jno
adc
lods
shll
jns
add
xchg
sbb
xor
orb
cmc
inc
sahf
sbb
cmp
or
jo
and
imul
fs
push
add
imul
jne
mov
js
call
mov
jl
das
jne
inc
jp
pop
insl
aas
enter
add
mov
mov
mov
push
add
add
pop
lds
mov
add
add
jp
in
jbe
sbb
call
data16
shrb
add
add
fistpll
pushf
mov
add
add
inc
jmp
and
fnstenv
add
add
dec
inc
mov
hlt
fcoml
add
ret
pusha
add
je
xchg
movsl
add
ja
add
rorb
inc
insb
add
add
mov
popf
push
add
add
or
mov
mov
push
add
shlb
sbb
test
sub
mov
insl
xchg
insb
add
mov
dec
les
add
fst
jno
insb
add
outsb
add
add
xchg
push
add
add
dec
aas
and
jmp
cmp
fildll
add
cmp
xchg
dec
cli
push
adc
mov
pop
sbbb
push
fs
push
mov
cmpsb
cwtl
push
add
add
jne
add
add
stc
leave
aam
ret
push
aad
add
nop
adc
test
add
add
pushl
add
out
add
outsl
ljmp
cli
push
add
add
addr16
push
test
add
add
add
mov
add
add
mov
scas
jo
fdiv
out
or
xchg
cmc
mov
stc
push
iret
or
or
xlat
pop
jns
in
ja
stc
sbb
lock
xor
jg
add
dec
add
add
int
mov
dec
add
sub
lds
ljmp
pop
add
out
add
sub
add
add
arpl
add
cmp
xchg
in
or
sub
mov
add
pop
pop
add
outsb
add
xchg
sti
push
add
imul
or
sbb
test
add
cmp
push
sarb
ret
jns
inc
add
and
adc
add
sbb
test
inc
add
sbb
add
push
add
add
loop
add
jle
popa
arpl
add
inc
add
push
add
add
in
pushf
movsb
xchg
mov
mov
jg
push
add
adc
pop
add
xchg
cmp
jbe
and
pop
add
cli
or
sbb
and
xor
add
mov
add
sub
lock
push
add
repnz
cmp
add
pop
add
sub
sbb
dec
popa
inc
adc
inc
add
fldenv
add
test
cmp
pop
add
mov
add
jns
mov
daa
popa
pop
and
cmp
test
fiaddl
add
scas
sarb
lds
lret
adc
adc
dec
add
add
adc
cmpsl
cmp
add
mov
add
notb
icebp
cmp
cmp
dec
lods
aad
aaa
in
xchg
loope
xor
hlt
mov
loop
inc
add
loop
je
inc
dec
add
mov
out
push
add
add
adc
and
mov
push
test
add
aas
addl
popa
mov
ficoml
add
add
pop
lods
daa
ljmp
sub
jns
in
add
xchg
push
add
lea
push
add
dec
add
mov
sub
jb
ficomps
addl
sbb
rclb
pop
sti
repnz
out
rolb
mov
jbe
inc
js
pop
xchg
or
add
add
punpcklwd
add
mov
add
lea
push
add
out
add
rcll
inc
jge
inc
jno
and
add
mov
add
add
lea
add
shl
js
adcl
inc
pop
xor
mov
imulb
adc
sub
ljmp
mov
addr16
add
add
and
movsb
subl
movsb
mov
pop
pop
push
add
add
nop
or
cltd
pop
mov
jmp
xchg
cmpsl
jo
pop
add
popf
xor
push
pop
test
insl
xchg
xorl
or
add
pop
js
mov
add
xchg
lea
xlat
add
push
add
and
loope
daa
out
dec
xchg
mov
lea
xor
xchg
and
in
out
cld
imul
add
lods
xchg
add
mov
sub
ret
sub
push
data16
outsb
add
add
dec
add
fwait
xor
dec
add
aas
or
add
outsl
popf
in
xchg
push
lcall
lret
rcll
jle
adc
nop
lcall
popa
repnz
out
jle
movsl
dec
jnp
add
repz
add
rol
aad
jmp
fstpt
fwait
push
add
lods
pop
add
add
and
jl
mov
fidivs
sbb
push
add
cmc
fadds
add
ret
jp
xchg
imul
add
inc
add
aam
jno
loopne
cld
add
and
in
xchg
sub
out
or
lea
add
jo
mov
sub
xchg
movsl
loope
inc
add
push
add
call
popf
enter
bswap
outsb
add
cmp
mov
add
add
mov
arpl
inc
add
iret
lcall
add
cmp
pop
add
push
add
int
push
loopne
stc
sbb
mov
sub
add
add
xor
fadd
xlat
mov
lahf
arpl
and
adc
mov
add
add
int
cmpb
xor
jo
outsl
inc
mov
sbb
bound
div
dec
cmpsl
fisubs
lods
call
add
add
imul
dec
clc
sbb
enter
adc
cmp
and
testl
add
add
mov
adc
pop
lock
xor
pop
jnp
mov
add
add
add
pop
xchg
ffree
mov
int
xchg
adcl
xor
cmp
mov
xchg
inc
das
add
mov
inc
add
add
add
int
mov
pop
add
sub
add
mov
push
pop
dec
add
push
add
pop
add
jp
ja
aas
jb
pop
int3
xor
vmovss
jp
in
add
mov
push
add
pop
add
or
inc
add
jle
je
inc
add
pusha
add
add
add
or
ja
cmp
add
add
decl
cmc
lcall
add
outsl
push
add
ja
add
outsb
add
mov
roll
repz
jo
xor
push
push
out
out
pop
insb
add
fidivl
in
add
fldlg2
in
lret
in
ret
pop
add
inc
and
add
bswap
std
xchg
mov
fwait
sbb
and
sub
push
add
lahf
leave
gs
push
ret
fisubs
push
add
das
cmp
add
pop
add
add
test
xchg
mov
rolb
mov
and
into
bound
or
fcompl
add
movb
cltd
push
add
add
add
or
pop
imul
lret
sbb
les
fmull
xchg
push
add
iret
xor
xor
sahf
jge
int
add
or
add
shll
add
add
cmpl
out
sarl
leave
out
add
add
dec
add
xor
fnstenv
insb
add
cmc
lds
add
nop
icebp
out
mov
test
xchg
add
add
add
add
outsl
popf
sub
mov
xor
ss
or
sbb
pop
add
adc
pusha
add
xlat
test
add
push
add
xchg
pop
add
lret
add
lret
mov
call
pop
xorl
add
call
xchg
nop
mov
sub
cmp
mov
out
mov
add
lret
add
xor
inc
add
add
mov
out
mov
sbb
add
push
add
pop
or
outsl
adc
lock
or
gs
jns
rorl
loope
xor
cmp
xchg
insb
add
add
dec
add
add
add
bound
xchg
movl
test
out
inc
push
pop
cld
sbb
pop
fisubl
daa
mov
mov
add
mov
mov
xchg
sarb
cld
adc
xchg
dec
loopne
add
gs
add
mov
add
add
mov
add
cmp
push
add
mov
mov
add
add
bound
movsb
jmp
add
mov
add
les
add
adc
fisttpl
inc
add
inc
sahf
inc
add
mov
movsl
cmp
mov
loop
xor
das
xchg
cmpsb
ret
xchg
xor
pop
scas
stc
mov
cs
jb
push
add
inc
add
pop
add
mov
jnp
mov
out
push
add
mov
jecxz
add
in
add
loop
add
inc
add
gs
mov
movsl
repz
loope
adc
push
and
pop
add
mov
jp
bswap
pop
add
mov
or
add
mov
fildll
mov
pushf
outsl
sbb
rcll
int3
stos
and
out
add
mov
dec
add
fimuls
bts
add
add
add
in
add
add
jl
dec
dec
add
lds
jg
add
outsl
jo
adc
ret
jmp
jg
push
shlb
sbb
pop
testb
adc
pushl
inc
add
out
add
sub
fbstp
add
add
xchg
push
sub
inc
add
add
mov
xor
xchg
mov
push
add
pop
add
pop
add
lock
cmp
pop
add
mov
gs
pop
repz
call
ret
aaa
pop
dec
add
jb
dec
add
js
mov
ret
aaa
outsb
add
pop
jg
add
aaa
push
mov
jno
push
js
aas
stos
mov
jecxz
add
aad
add
cltd
and
sbb
sbb
push
add
test
enter
jno
add
add
jmp
add
push
add
add
sarl
add
in
xchg
dec
pop
add
xchg
xor
sub
sahf
out
subl
add
add
add
mov
ljmp
and
cmp
cwtl
out
inc
iret
sbb
push
add
inc
scas
insl
cmc
add
bound
mov
aad
inc
add
adc
divl
add
aam
add
in
jnp
cmp
or
add
add
scas
sbb
in
jne
or
cmpsl
xchg
push
fisubrl
xor
dec
cmpsb
inc
test
add
adc
sbb
mov
pop
mov
add
outsb
add
add
add
jb
xor
into
sti
js
jbe
cltd
jl
push
add
add
ret
sbb
and
leave
stc
pop
mov
or
pop
mov
add
add
outsl
adc
in
add
add
add
nop
and
shrb
mov
add
fists
push
add
add
je
mov
add
xor
xchg
shl
jle
mov
add
add
imul
add
add
sbb
xor
lret
outsb
add
add
outsb
add
jg
bound
jecxz
jg
test
and
scas
aas
mov
stc
and
pop
add
rol
xchg
or
add
push
add
xchg
pop
loope
xchg
out
in
add
pop
aaa
add
dec
das
mov
stos
mov
xor
add
sub
ja
xor
sub
sbb
mov
out
mov
xchg
jl
lock
gs
mov
add
sbb
lods
dec
call
popa
sub
pop
xchg
inc
add
roll
mov
pop
add
add
jecxz
cmpsb
dec
add
add
clc
add
inc
add
inc
add
inc
cmp
xor
sub
pop
mov
fists
aaa
out
cmp
adc
and
xchg
ja
clc
icebp
adc
dec
add
adc
shr
lret
scas
rcrl
pusha
add
pop
mov
cltd
cmpsb
lahf
jg
adc
cmpsl
or
mov
add
mov
mov
xchg
jg
dec
sbb
dec
and
add
or
xlat
arpl
pop
test
movb
lcall
xor
lock
xorps
add
pop
sbb
add
repnz
xor
push
add
jl
loop
in
dec
add
add
inc
add
mov
data16
sbb
cmp
or
dec
add
movsl
ja
add
iret
mov
mov
les
push
add
lds
adc
or
loope
jb
data16
lret
lock
stc
lock
mov
add
in
and
push
add
dec
aad
add
loop
add
or
aaa
iret
jl
jp
sbb
nop
cmp
push
adc
inc
fsubp
jge
movsb
push
add
add
out
add
inc
cli
daa
or
adc
insb
add
and
mov
add
outsl
mov
jmp
sbb
ret
xchg
push
inc
add
and
iret
push
add
add
mov
hlt
pop
adc
iret
dec
add
decb
std
dec
push
add
push
add
inc
add
stos
add
imul
add
lret
sbb
add
pop
cmpl
jb
test
add
jl
ds
stos
scas
dec
pop
sub
add
push
add
add
xor
repnz
pop
outsb
add
xchg
fcomi
jmp
rolb
or
adc
mov
aas
rcrb
clc
xor
push
add
add
sbb
insl
sub
arpl
sti
pop
cwtl
stos
lds
add
les
mov
and
test
add
stos
or
cwtl
jl
cmp
imul
xlat
cmp
repz
add
addr16
pop
stos
loope
xchg
imul
sbb
inc
add
fnstsw
jecxz
add
lahf
mov
xchg
js
test
into
stos
sbb
rol
jne
push
xor
sub
addr16
add
and
add
mov
das
mov
mov
push
add
xchg
inc
add
sub
sub
out
ficompl
and
push
dec
add
in
add
add
add
cld
push
call
jp
push
add
dec
add
add
fstps
and
push
pop
or
add
add
mov
mov
mov
add
add
dec
je
cmp
dec
add
add
aas
mov
arpl
sbb
mov
std
mov
dec
add
mov
sahf
cmp
jns
and
sbb
ja
lods
ljmp
add
cmp
inc
js
out
cli
fdivrl
add
addr16
stos
sti
xor
adc
inc
add
inc
add
mov
rcrb
repz
and
movsb
push
add
cmp
xchg
into
xor
xchg
inc
ret
sti
mov
mov
mov
dec
xlat
dec
add
add
fisubs
add
mov
enter
xchg
push
add
add
xchg
xchg
or
or
sti
pop
inc
add
icebp
xchg
mov
ret
mov
add
add
pop
sub
ret
scas
insl
mov
add
fidivrl
aad
add
add
xor
sub
shll
add
add
in
jo
add
jbe
imul
add
jbe
les
repz
jae
jge
xor
mov
add
mov
into
pop
add
bound
jbe
inc
add
add
add
out
shlb
or
adc
xchg
add
add
fldcw
pop
add
add
pop
xchg
push
shlb
aaa
mov
ret
repz
aaa
mov
jp
or
iret
adc
lods
sahf
xor
cmp
inc
or
xor
and
add
enter
inc
xor
andl
push
add
xchg
inc
pop
add
sahf
jle
push
add
mov
decl
je
lcall
fcmovnbe
mov
pushf
cmp
jns
add
and
dec
add
lret
mov
add
popf
frstor
out
mov
gs
mov
in
add
adc
xchg
xor
xlat
sarl
sbb
ret
jae
vshufps
add
add
cmc
push
add
add
fiaddl
stc
in
movsb
pop
cmp
sti
mov
adc
bound
cmp
mov
add
mov
in
xor
popf
mov
cwtl
lret
imul
or
mov
cwtl
mov
xchg
mov
add
inc
add
cmp
ljmp
add
dec
add
and
pop
inc
add
push
cmp
add
gs
inc
int
cmp
adc
mov
xchg
loop
push
add
add
insb
add
dec
add
fsubr
std
mov
add
movb
sbb
add
or
add
fbld
out
insb
add
add
cld
insl
mov
pand
push
add
sub
sub
xor
fdivrl
repz
xor
pop
sbb
clc
in
add
dec
dec
and
push
add
and
hlt
scas
cmp
scas
xorl
add
and
das
xlat
jo
scas
push
inc
jo
xchg
cmpsb
push
add
add
xchg
jmp
add
add
in
mov
sub
push
adc
cwtl
pusha
add
mov
add
je
lock
add
movsb
push
arpl
add
sbb
push
or
mov
add
add
push
add
adc
cmpsb
xorl
lret
and
jo
mov
add
mov
adc
paddsb
in
xor
add
fistps
test
inc
add
xchg
xor
mov
adc
arpl
out
cltd
cmc
or
jg
add
xchg
aas
push
add
add
xor
fwait
mov
out
xorl
cmp
rorl
add
dec
pop
add
fucomip
mov
outsb
add
loopne
jb
repz
pop
mov
jae
lea
movsb
ret
cmp
imul
push
mov
lea
add
add
repz
jecxz
sbb
add
add
add
add
add
stos
pop
loope
aad
mov
lcall
mov
jl
orb
xor
add
add
xlat
and
sbb
fwait
arpl
add
ret
iret
mov
adc
mov
rclb
scas
movsl
test
add
jg
les
out
pop
lcall
adc
loopne
add
add
data16
mov
mov
das
lock
subl
adc
ljmp
nop
jne
add
repz
add
add
or
mov
push
nop
repnz
rorl
sub
add
push
add
cmp
xor
push
add
lret
pop
clc
fwait
gs
add
xchg
bound
cmp
sbb
bound
or
incb
cmp
jo
xor
push
add
movsb
js
xchg
mov
add
pop
mov
add
add
int
adc
test
cmp
pop
daa
movl
imul
add
add
xchg
push
add
mov
add
pop
fcomps
shrb
xchg
add
add
or
dec
add
roll
mov
cmp
xlat
mov
xor
add
movsl
push
outsb
add
mov
dec
add
add
push
add
lds
add
xchg
mov
in
xchg
push
add
rolb
mov
add
xchg
in
jmp
jne
pop
mov
aad
call
lret
sbb
cmp
mov
pop
add
dec
add
add
mov
mov
jae
add
call
jl
add
push
add
add
orb
out
pop
add
enter
cmpb
push
add
ret
add
sub
adc
in
add
out
lds
pusha
add
sbb
xchg
sbb
xchg
ret
lods
dec
pop
add
add
dec
fcompl
rcrb
fdivrs
add
rolb
enter
js
aad
push
add
add
sub
add
push
add
add
data16
add
fsubrs
add
mov
add
add
adc
push
add
jmp
mov
imul
add
lock
aas
push
add
nopl
decb
pushf
mov
or
jge
adc
pusha
add
add
add
adc
daa
jl
pop
add
jo
jnp
jne
into
cmp
mov
lods
loope
insl
mov
lock
xor
jno
fsub
ljmp
cmp
or
jecxz
add
jbe
mov
dec
into
mov
sbb
xchg
shll
movsl
cs
cmp
push
shlb
add
fwait
jb
adc
add
add
repnz
out
add
and
mov
push
add
adc
sub
pop
add
fucomi
int
lret
add
mov
or
cmp
out
xchg
inc
add
sub
xor
mov
xchg
jge
fcmove
stos
lock
jb
in
dec
imul
mov
ljmp
dec
add
daa
adc
add
add
adc
mov
push
add
mov
loope
add
push
mov
mov
mov
clc
cmp
push
add
cmpb
add
add
fimuls
lret
pusha
add
cli
mov
gs
inc
shlb
add
dec
movl
add
add
inc
pop
add
jae
inc
mov
aam
out
sbb
mov
cld
into
adc
mov
add
adc
xor
and
add
add
add
mov
js
push
add
add
sub
mov
add
je
jl
xor
addr16
add
add
jecxz
mov
cli
test
xchg
popa
int
add
divl
lret
daa
and
dec
pushf
pop
add
mov
inc
add
add
add
cld
mov
add
idivb
xor
bound
neg
mov
push
fistl
lods
mov
add
pop
xor
add
or
ret
sub
push
add
cli
push
add
add
fstpt
add
das
mov
add
movsl
out
ret
add
iret
cmpsl
push
add
ja
outsb
add
mov
enter
fidivl
push
jns
add
push
add
int3
adc
sbb
mov
inc
add
aas
mov
push
add
push
add
imul
add
push
sbb
pop
inc
xchg
stos
mov
mov
add
mov
bound
mov
mov
xor
xlat
push
add
cmpsb
popa
outsb
add
mov
rcr
sbb
shl
lock
mov
out
lods
fcmovnbe
sub
xchg
add
lea
popa
dec
add
dec
add
orb
arpl
arpl
add
add
add
xchg
sub
out
mov
cli
lcall
lret
pop
jg
orl
int
cld
xor
popf
pop
add
add
sahf
out
rclb
mov
nop
pop
fwait
or
cmp
jge
imul
sti
xchg
out
jb
adc
cmp
idivb
and
pop
add
sub
popl
add
add
pop
add
sysret
or
lods
popa
sub
aaa
xchg
das
xor
inc
add
sub
adc
fs
pop
add
xchg
addr16
mov
add
aaa
jecxz
rcrb
push
or
add
xor
add
dec
add
shll
add
out
add
sbbl
inc
mov
ret
xor
popl
mov
inc
add
push
sub
mov
cltd
and
call
fmuls
and
shrb
clc
push
add
push
jge
pop
push
xchg
fstpt
add
ljmp
add
fisttpl
lods
cld
rorl
das
adc
out
ret
mov
in
movb
bound
out
cltd
jp
orb
add
add
dec
dec
std
repz
mov
in
fstl
sub
push
add
add
add
add
cmc
pop
add
or
mov
add
push
add
add
add
push
add
sub
push
loopne
add
add
inc
add
add
out
inc
cmp
mull
aam
bsf
xor
cmp
ret
ja
dec
add
jnp
jmp
dec
add
add
push
add
dec
dec
cmp
out
rcrl
inc
add
inc
add
loope
add
data16
out
xchg
push
add
gs
add
add
dec
dec
faddp
inc
out
cwtl
xor
iret
dec
add
inc
add
popa
cmp
xchg
movsb
iret
out
add
sbb
mov
push
stos
lds
push
mov
addr16
and
jle
push
add
outsl
push
add
dec
add
dec
add
in
add
orb
add
inc
rcll
add
sub
outsb
add
inc
add
jle
mov
add
add
add
mov
leave
inc
add
aad
xor
out
xchg
add
push
add
jecxz
cmpsb
add
add
sub
ja
or
das
imul
add
es
xchg
add
add
xchg
cs
daa
jnp
sbb
data16
lahf
dec
jnp
lds
data16
or
xchg
add
adc
push
repnz
movsb
cmp
add
add
stc
stc
mov
outsb
add
jns
add
outsb
add
int
dec
add
add
orb
ljmp
mov
add
ret
mov
push
add
movsb
dec
add
sub
pop
add
cs
mov
add
xor
pop
push
add
bound
xor
nop
rorb
or
pshufw
xor
ljmp
rcrb
insb
add
or
icebp
pop
push
add
cmpsl
add
jne
xchg
mov
xchg
fldl
mov
add
ret
cld
push
add
add
fucomip
lret
sub
call
sbb
ljmp
add
scas
test
add
inc
sbb
mov
fiaddl
dec
mov
xchg
and
add
ficoml
cmp
add
push
add
stos
dec
mov
add
adc
and
cmp
sub
fistpl
aam
mov
sub
in
cmp
jecxz
mov
or
xchg
push
add
fcompl
add
out
add
inc
scas
mov
push
add
xor
lods
mov
rcl
add
add
jl
int3
jne
mov
inc
imul
inc
add
outsl
sbb
add
test
pushf
inc
mov
adc
sub
les
clc
pop
enter
clc
cmp
add
push
int3
cmpsl
frstor
add
lret
pop
add
add
pushl
add
mov
das
enter
cmpsl
xlat
pop
mov
add
push
add
pop
add
orl
adc
ds
out
sar
je
out
sahf
jb
stos
add
movaps
jmp
je
add
add
xchg
mov
loopne
lds
add
inc
lcall
sub
add
dec
add
push
add
daa
call
in
xor
and
push
add
sbb
xchg
imull
div
sbb
mov
and
xor
data16
ret
push
loopne
add
mov
add
pop
jle
push
add
sahf
arpl
dec
add
push
add
mov
out
nop
or
xor
mov
fnsetpm(287
mull
cmpsl
repnz
mov
add
xchg
mov
pop
js
mov
in
insl
mov
pushf
sahf
sbb
pop
add
add
and
xor
out
xlat
loop
push
add
lds
add
imul
jmp
lahf
and
fcmovnb
shl
or
push
add
add
pop
mov
add
mov
cs
stc
neg
int
add
add
sbb
mov
dec
or
sub
inc
add
movsb
test
xor
add
add
sahf
sti
ja
add
fidivrl
stos
lods
fwait
das
je
ret
add
test
lret
jae
push
lds
loope
into
xchg
jp
loop
adc
jno
mov
jp
movsb
adc
pop
add
lods
faddl
add
int
inc
add
outsb
add
jl
icebp
and
adc
call
add
stos
mov
mov
mov
pop
aad
fbld
add
add
or
sub
add
shrb
adc
jl
je
mov
add
add
in
ret
add
add
mov
outsl
cwtl
out
mov
push
sahf
cmp
test
scas
movsl
vorps
push
insl
add
fiaddl
add
hlt
mov
add
push
add
pusha
add
jp
lcall
test
add
cmp
sub
dec
add
xlat
ljmp
ficomps
cmpsl
ljmp
jecxz
lahf
dec
add
inc
add
andl
pushf
mov
arpl
adc
mov
or
pop
add
cmp
add
and
and
add
inc
add
add
insb
add
gs
inc
scas
adc
incb
add
dec
add
lahf
adc
xor
mov
mov
xchg
add
enter
out
lods
cltd
pop
add
add
add
add
loope
cmpsl
add
add
cmp
push
add
mov
sub
out
mov
add
sub
inc
add
mov
add
add
sub
outsb
add
add
or
add
pop
xchg
leave
cmp
inc
stos
cmpsb
xchg
lock
shrb
cli
aam
add
jb
push
add
add
xor
popf
jne
inc
add
pop
inc
call
movsb
sub
shlb
dec
outsb
add
inc
mov
data16
add
loopne
mov
add
adc
and
push
insl
cltd
outsb
add
std
jmp
jecxz
adc
inc
jp
aaa
int3
dec
add
andl
std
into
iret
push
add
std
and
sub
in
push
xlat
mov
insl
add
inc
enter
shll
pop
add
xchg
clc
push
add
add
mov
inc
add
clc
pop
push
add
incl
dec
add
add
adc
dec
add
add
shrl
add
mov
add
add
mov
pop
add
outsb
add
add
jl
jecxz
repz
or
nop
add
fimull
add
dec
inc
pop
add
adc
xor
dec
nop
jne
mov
cld
mov
add
pop
jns
in
int
aad
push
push
add
icebp
outsl
jns
inc
xchg
mov
and
ljmp
add
bound
mov
sahf
push
add
fsubl
inc
add
mov
add
adc
pop
jae
daa
data16
pusha
add
adc
xchg
xchg
lock
gs
pop
add
out
push
add
loopne
add
push
test
lret
jle
fistps
test
cmp
dec
add
cmpsl
pop
out
stc
inc
add
add
push
add
jle
dec
fists
xor
push
add
faddl
dec
adc
push
sub
jb
scas
daa
xchg
mov
add
inc
add
add
sti
cmp
or
inc
dec
jge
outsl
fs
cwtl
les
mov
imul
xor
add
xor
jp
or
jle
fwait
js
sbb
add
data16
push
xchg
add
add
add
in
ret
popa
xchg
test
out
mov
jae
fimuls
xor
push
add
gs
add
push
add
dec
add
ret
push
repnz
adc
dec
push
add
add
cmp
add
std
cmpsl
jns
notl
push
add
jge
pop
add
and
add
sbb
sti
add
xchg
in
add
xor
add
js
aaa
rolb
push
add
mov
lds
add
imul
inc
add
and
fucompp
jae
notl
inc
add
or
add
in
xchg
adc
out
jp
daa
and
add
xor
pusha
add
add
clc
add
pop
add
ljmp
pop
leave
rol
mov
mov
add
sub
mull
add
add
je
insb
add
pop
add
and
adc
add
mov
in
cwtl
fcoms
add
cmp
mov
cmp
sub
add
ror
mov
sbb
lret
sub
in
sub
clc
lret
jl
xlat
fidivrl
add
add
add
movsl
pushf
xchg
inc
add
shll
out
dec
add
mov
or
imul
popf
pop
insl
xchg
dec
stc
dec
add
fisubrs
mov
cmp
and
cmpsb
pushf
lock
leave
xor
pop
sub
cmp
push
mov
xor
shlb
add
mov
xchg
stc
test
adc
ret
repnz
add
push
add
in
xlat
mov
out
cli
sarl
add
clc
int
lock
fsubrl
aad
add
xor
test
jl
inc
add
out
inc
dec
add
jge
add
fsubp
inc
inc
add
daa
sarb
pop
or
push
mov
fdivr
cmpsb
les
xchg
int
xchg
sti
leave
pop
dec
jge
xchg
jns
add
add
stos
lods
add
xchg
testb
xor
dec
add
sahf
sti
and
ja
add
sbb
adc
leave
sub
mov
pop
shlb
push
add
shl
hlt
scas
push
std
imul
cmp
daa
lods
int
add
add
jle
sti
cmpsl
sub
lods
sub
xchg
fwait
push
add
repnz
rorb
and
push
add
lret
and
pop
rorl
popf
daa
push
add
and
mov
pusha
add
test
add
cmp
add
cltd
in
gs
mov
out
cmp
dec
add
push
add
or
xchg
aad
sar
jno
push
add
mov
add
xchg
pop
jbe
outsl
lock
add
and
movsb
xchg
mov
ja
pop
ror
outsl
or
push
cmpb
add
jle
scas
push
add
int
paddb
add
add
pop
add
sbb
add
push
add
and
les
jne
aad
dec
int3
lods
push
add
mov
add
adc
xchg
pop
add
cmpsl
imul
xlat
mov
out
or
add
popf
adc
std
mov
jbe
mov
add
roll
mov
gs
out
add
jb
clc
add
pop
lcall
scas
cld
lods
pushf
fisttpl
sbb
mov
dec
add
data16
mov
add
pop
int
add
push
add
lea
add
push
add
jno
add
sarb
mov
das
clc
pop
add
push
add
add
add
mov
add
jmp
xor
xchg
and
ljmp
pop
adc
pop
add
fmuls
test
add
aad
cltd
jbe
add
call
lea
push
mov
bound
and
outsl
lret
test
pushf
dec
cmc
mov
jnp
add
sbb
mov
ja
pusha
add
pop
add
pop
add
sub
sarl
or
adc
push
sbb
arpl
add
add
mov
or
dec
add
xchg
cmp
lods
push
add
add
into
sub
push
add
ret
add
jo
call
xchg
add
and
push
add
add
xor
push
add
xor
sti
out
stos
mov
sbb
sahf
ret
test
pop
xchg
or
mov
add
fbstp
sub
mov
add
cli
push
xor
repnz
push
add
mov
ljmp
add
cld
cmp
sbb
lock
loopne
add
add
sbb
dec
add
dec
hlt
enter
add
test
jecxz
add
add
push
add
xchg
dec
push
pop
je
sbb
push
add
jg
add
xchg
into
ror
scas
cmp
fists
icebp
ret
push
add
mov
dec
fadd
out
mov
add
add
test
add
pop
add
popl
mov
icebp
cld
push
add
inc
push
add
pop
lcall
add
in
dec
fwait
loop
add
stos
ja
adc
add
mov
add
and
mov
dec
add
and
add
jnp
in
cli
inc
add
cmp
test
add
cltd
out
add
hlt
rclb
add
out
lret
push
rol
pop
add
jmp
bound
jne
xchg
mov
mulb
pop
shlb
test
push
xor
mov
mov
jnp
lret
xchg
popa
or
add
sub
or
sbb
pop
pop
popf
dec
sbbl
add
or
add
jb
aas
repz
add
add
add
push
add
add
in
aaa
data16
xor
mov
imul
aam
int3
addr16
lods
add
mov
out
lret
les
outsl
adc
fidivs
in
clc
std
in
ja
cmpsb
sbb
hlt
mov
call
add
add
pop
add
leave
and
xor
hlt
mov
add
add
mov
pop
call
andb
icebp
sub
pop
pop
add
scas
jecxz
mov
fdivs
pop
add
push
add
sbb
or
fdivp
mov
add
and
cmpsb
push
add
add
mov
repnz
adc
jge
repz
mov
add
rorb
jno
rcr
sahf
sbb
adc
sbb
cmpsl
rorb
add
dec
incb
aas
inc
ret
repz
cmc
jne
mov
mov
xor
cmpsb
mov
and
aas
cmp
and
fistpl
inc
and
test
jb
sbbl
add
fdivrs
test
pop
out
jecxz
add
jo
xor
mov
notl
add
popf
pop
add
add
lret
popf
out
and
adc
add
jb
hlt
jbe
and
lret
add
xchg
sub
call
mov
push
je
mov
mov
add
add
cmp
add
add
sbb
add
sub
or
add
add
cmp
std
jo
mov
add
into
shrl
inc
add
pop
or
out
sub
add
push
add
cltd
and
mov
aad
ljmp
add
mov
dec
add
add
mov
add
int3
cli
xchg
imul
out
jae
enter
aas
inc
aad
ja
adc
filds
add
xchg
aas
sbb
jg
jle
pop
add
nop
add
mov
lret
sbb
pop
adc
and
push
add
test
fsts
add
add
mov
cmp
in
dec
fs
imul
add
out
mov
cli
xchg
jle
mov
add
add
jmp
mov
add
jb
roll
add
cmp
push
add
add
repz
add
pop
jecxz
scas
data16
lret
add
push
jg
mov
stos
jge
js
adc
jb
adc
pop
fdivrs
test
and
setge
iret
push
add
add
adc
ss
popf
scas
pop
add
inc
cld
repnz
adc
xchg
addr16
xchg
push
rcr
lcall
and
add
push
add
add
mov
add
aaa
jg
jo
jmp
or
add
add
adc
jecxz
add
add
add
rcrb
dec
add
xchg
inc
add
xor
mov
and
loope
add
out
dec
add
xor
jle
rcrl
mov
push
add
out
ret
add
add
push
add
jmp
add
add
add
mov
sbb
in
idiv
jbe
mov
mov
mov
add
and
mov
add
lock
fnstcw
test
add
add
add
lret
push
add
cltd
xchg
jne
push
popf
mov
add
pop
aad
sbb
dec
add
sbb
adc
xor
mov
add
sub
jnp
test
fistl
cmpl
mov
in
scas
jne
data16
loope
mov
add
mov
xor
cmpsl
cmp
sbb
sub
add
cmp
mov
insb
add
jecxz
add
xchg
cmp
sub
out
inc
add
fimuls
jo
sbbl
push
push
add
subl
add
test
add
xor
xor
push
add
inc
inc
add
aad
mov
out
out
inc
and
add
push
add
dec
mov
mov
jbe
stos
push
add
aaa
ret
add
sbb
inc
add
les
jbe
xor
jecxz
add
xchg
add
push
add
add
inc
lea
xor
cmp
insl
mov
inc
add
xchg
dec
add
jb
popf
gs
jbe
cmpsl
and
mov
jns
inc
jbe
cmp
push
add
sbb
add
jo
add
inc
add
inc
andl
add
add
notb
add
cmpsb
es
push
add
sub
or
add
push
add
adcb
add
jl
aas
sub
jle
add
hlt
lret
push
add
push
add
cwtl
movsb
add
pop
add
leave
mov
add
jp
ljmp
add
movsl
mov
mov
rcr
sub
sbb
iret
inc
loopne
xor
rorl
lahf
mov
add
push
dec
sbb
inc
pop
add
mov
enter
sbb
aas
fcmovnbe
loop
decb
pop
mov
inc
add
dec
add
aad
add
push
add
cld
add
mov
or
cmp
mov
add
dec
add
jp
stc
xor
cmpsb
cmp
add
sahf
mov
insl
add
add
ljmp
adc
adc
mov
mov
adc
fcompl
add
add
lahf
sti
out
add
add
outsl
aad
data16
push
out
jmp
lock
add
loop
add
mov
add
popa
cmp
daa
adc
or
add
inc
les
lret
inc
add
sbb
add
push
add
add
xchg
orl
sbb
add
mov
cwtl
sub
js
out
inc
add
cmc
and
jecxz
add
scas
push
add
jecxz
ja
add
adc
mov
pop
add
cli
push
aam
add
add
aad
dec
add
adc
mov
pop
dec
add
mov
add
add
fnstcw
pushf
sbb
out
add
jge
add
xchg
add
jle
daa
scas
out
add
add
mov
add
mov
adc
add
fidivrl
mov
test
add
in
lods
pop
cld
out
aad
xchg
jae
add
pop
mov
mulb
add
pop
add
add
imul
mulb
add
add
lods
jmp
aam
cli
mov
imul
mov
add
ret
mov
add
loop
inc
and
scas
std
sbb
in
xchg
jae
popf
and
nop
mov
add
add
js
cltd
lret
or
fnstenv
pop
add
or
add
pop
lcall
add
lods
out
insb
add
inc
push
add
mov
push
adc
xchg
adc
sub
loopne
add
and
pop
shlb
add
shrb
lcall
out
jmp
aas
push
add
aam
add
popf
sub
aad
push
add
mov
test
fwait
mov
dec
add
into
or
add
xchg
inc
add
in
mov
pop
add
add
mov
cltd
stos
sbb
cwtl
mov
pop
or
add
xor
inc
and
jl
jecxz
push
add
or
mov
mov
add
movq
std
dec
add
call
outsb
add
add
mov
cmp
cmp
mov
mov
mov
mov
add
pop
add
add
repz
pop
add
icebp
ljmp
or
cmp
imul
mov
add
mov
add
lret
add
jmp
jae
int
cmp
push
jns
pop
pop
insl
mov
add
add
rolb
add
add
cmpsl
sub
xchg
fcomps
pop
lods
mov
add
push
add
add
jne
rorl
ret
mov
fsts
add
or
decl
insl
nop
dec
add
cmp
mov
ds
mov
mov
add
add
insb
add
bound
add
in
inc
popf
inc
add
pop
add
jg
add
cld
mov
mov
dec
add
push
add
repnz
inc
xor
cmp
in
adc
add
push
add
add
xorl
add
xchg
mov
add
cltd
mov
gs
xor
es
out
add
add
add
out
fistpl
add
adc
loop
add
mov
pop
cmc
fcomip
bound
clc
sbb
int3
add
movl
add
hlt
out
add
xchg
xchg
rcrl
icebp
pop
add
add
mov
adc
mov
sub
push
add
pop
add
xchg
ret
pusha
add
add
cpuid
rcll
lahf
fisubrl
popf
inc
in
push
add
popa
cs
in
jmp
std
xor
loope
cmp
add
add
xchg
fisttpl
jbe
fstpt
leave
jns
pop
aas
or
push
add
push
int
cmp
add
adcb
insb
add
jno
push
add
or
add
arpl
add
lds
cmp
dec
out
push
add
add
add
mov
push
nop
dec
jns
add
jbe
les
push
add
add
jmp
inc
and
daa
push
fwait
aam
pusha
add
add
add
push
add
sub
or
cmc
dec
lahf
mov
xchg
decb
enter
mov
add
jmp
mov
cld
je
scas
repz
mov
hlt
ret
cmp
cmp
cli
and
movsb
xchg
addb
sbbb
stos
sahf
mov
add
xchg
mov
jne
push
mov
test
aad
pop
add
pop
add
mov
mov
add
add
lds
loope
xchg
lcall
add
cmp
cmc
mov
jne
push
xor
xchg
push
add
sbb
and
movsl
jmp
jg
add
pop
xor
xor
data16
add
mov
add
bound
fucomp
call
mov
push
dec
in
loopne
add
add
jge
add
inc
add
sub
movsl
mov
lock
ret
jp
mov
add
add
add
out
cmpl
add
ja
push
dec
add
in
add
pusha
add
and
in
mov
cmpsb
adc
mov
add
add
fstpt
mov
sahf
or
fwait
movsb
jbe
sbbb
inc
cmp
push
add
loope
cld
mov
add
xchg
push
add
stos
pop
add
lds
jle
test
mov
mov
and
aam
or
pop
add
add
or
push
mov
cmpsb
jns
and
add
and
cwtl
fwait
jnp
sar
mov
js
lock
add
mov
add
add
add
mov
xor
add
and
cs
aam
push
add
add
add
add
xchg
add
cmp
add
dec
cmp
sbb
lcall
leave
add
xchg
mov
mov
push
add
cwtl
mov
add
iret
inc
add
mulb
jnp
pop
jo
fisubs
xchg
lea
jecxz
mov
or
je
stc
jmp
mov
add
rorl
add
fsts
rorb
pop
insl
jmp
add
push
add
rol
repnz
inc
add
or
and
cmp
rcll
leave
mov
je
xor
out
pop
add
daa
clc
push
add
add
add
pop
add
cmc
sub
add
out
add
push
add
cmpsl
pop
pop
add
frstor
add
ds
dec
mov
sarb
lret
imull
or
stos
add
add
pop
add
orl
dec
add
mov
add
add
xchg
movsl
outsb
add
imul
notb
stos
in
mov
das
cmp
jge
dec
add
add
loope
add
and
add
mov
pop
push
add
fistl
ds
adc
inc
popa
push
test
std
stos
shll
mov
pop
out
add
add
push
add
mov
sti
loope
in
add
ficompl
fwait
out
push
gs
add
dec
and
pop
adc
add
or
sbb
push
add
push
add
jo
xor
mov
add
add
fmull
adc
mov
add
into
cmpsb
loope
cmp
xor
or
add
pop
add
add
jmp
add
add
jnp
jecxz
pop
sbb
fldt
idivl
sbb
push
add
outsl
push
add
add
pop
out
outsl
add
mov
repz
add
andl
roll
jne
adc
mov
lret
adc
jbe
rcrb
add
xor
jne
add
bound
nop
push
mov
inc
add
dec
add
sub
add
mov
adc
or
dec
add
fiadds
mov
arpl
pop
push
add
aas
ret
add
clc
fcompp
sbb
add
sub
cmpsb
movsb
outsl
fndisi(8087
inc
add
dec
add
adc
push
add
add
xsaveopt
cmp
add
repz
lcall
stos
jb
addl
inc
cmp
jge
add
cmp
push
cmp
stc
cmpsb
cmc
lea
add
add
dec
ficompl
int3
rorl
push
add
stos
rclb
add
scas
add
push
add
adc
mov
imul
mov
sahf
cli
dec
or
out
pop
add
inc
pop
add
pop
add
jnp
or
fisubrl
lcall
mov
push
add
lods
mov
aas
enter
pop
xor
add
data16
add
test
lea
pushf
fcomps
sub
enter
sti
mov
nop
insb
add
mov
dec
ret
mov
into
inc
dec
add
in
xor
scas
mov
add
push
fldlg2
shlb
popf
aas
ja
jb
mov
push
les
mov
push
add
sbb
lea
or
and
pop
add
test
add
repnz
add
add
add
jo
and
mov
xor
loope
fdivr
pop
add
sub
cmp
or
dec
add
or
mov
add
lret
sbb
cltd
js
andl
fwait
adc
add
jns
js
jg
cmc
leave
leave
xlat
ljmp
xchg
add
jle
dec
data16
mov
add
add
adc
andl
add
jb
xor
jecxz
pop
movsl
cwtl
in
xor
outsb
add
add
dec
pusha
add
add
sti
sub
lds
dec
push
add
xchg
mov
test
cwtl
in
call
xor
lods
add
xchg
sahf
dec
or
data16
mov
cwtl
jno
sti
sbb
sub
add
or
adc
jmp
mov
xchg
enter
mov
cltd
and
aad
fmuls
add
add
and
out
adc
mov
xor
cmc
dec
mov
add
mov
into
cmpb
test
mov
cmp
push
sahf
add
jmp
add
xor
add
imul
movsl
movsl
and
add
clc
inc
add
add
and
sub
aad
push
xor
lock
pop
aad
in
in
mov
inc
add
pushf
inc
lcall
mov
add
mov
add
arpl
add
dec
repz
cmp
rcrl
mov
loopne
repnz
fisttps
fcomps
inc
add
test
add
stc
add
lret
loope
pusha
add
add
call
and
in
sbb
scas
xlat
jne
mov
arpl
pop
mov
in
add
testb
inc
add
and
test
sub
filds
add
add
dec
add
and
inc
in
cli
ja
add
add
je
cmp
sahf
test
add
mov
arpl
add
add
enter
in
or
add
lret
jl
sbb
add
in
mov
cmp
sarb
xchg
adc
mov
mov
add
pop
add
mov
add
inc
add
jl
jmp
cmpsb
rcrb
add
repz
add
outsl
mov
xor
jmp
movsb
or
push
sub
add
scas
mov
cwtl
mov
add
out
cmp
icebp
aam
xchg
add
add
divb
aas
mov
add
push
add
xchg
int
out
pop
inc
add
out
out
add
jecxz
jnp
xchg
jl
cmp
mov
add
mov
add
mov
jae
add
add
fcmovnbe
jle
in
jbe
xor
push
pop
xchg
ret
mov
popa
cmpl
jmp
sub
adc
inc
and
push
add
ret
pop
sub
arpl
push
out
push
add
flds
add
and
and
cltd
mov
add
mov
lods
xor
out
mov
and
add
ljmp
in
popa
imul
fwait
hlt
movsl
xchg
jge
lahf
mov
add
in
push
add
push
add
cmp
cltd
jp
dec
stos
and
pop
add
imul
add
add
mov
add
sar
cs
jl
ljmp
dec
add
mov
lahf
out
add
mov
mov
popa
dec
push
add
sbb
aaa
mov
sub
outsl
insb
add
xor
push
mov
sbb
roll
add
pusha
add
add
xchg
push
test
add
shlb
jbe
or
xchg
insb
add
jo
adc
stos
test
cmpsl
jne
or
insl
ret
int
push
cwtl
clc
adc
dec
xchg
popa
and
sbb
sbb
nop
call
leave
sti
mov
add
push
mov
add
xchg
add
enter
pop
push
jno
jo
jae
sub
jmp
add
xorb
mov
add
mov
loopne
repz
lods
dec
add
add
add
xor
xor
jecxz
push
sbb
jp
ret
cmpsb
jno
es
dec
mov
mov
pop
add
add
sub
or
fsubrl
leave
repz
pop
lcall
pop
add
in
dec
iret
inc
in
scas
bound
pushf
mov
addr16
add
repz
ret
icebp
ud2
cltd
enter
add
dec
add
xor
mov
add
imul
jg
rclb
sahf
test
add
cmc
dec
jns
stos
adc
inc
dec
add
add
aad
add
add
fstl
scas
xor
js
push
mov
arpl
add
adc
add
fwait
mov
into
ljmp
lcall
add
out
xor
push
test
add
mov
cmp
xchg
test
rorl
add
xchg
stos
add
add
or
pop
add
loop
cltd
fsubl
add
add
into
shlb
aaa
pop
add
add
sbb
gs
add
lret
cmpl
jecxz
ja
jmp
jge
mov
lea
outsl
dec
xchg
dec
add
nop
int3
mov
add
adc
test
adc
add
add
mov
pop
xchg
add
lret
add
pusha
add
lods
adc
into
ret
stos
in
in
add
dec
mov
xchg
cltd
jns
cmpsl
inc
fcomps
pop
inc
sahf
jae
rolb
add
and
and
xor
popa
lock
add
hlt
lea
pop
add
mov
add
or
push
add
jp
pusha
add
shrb
push
pop
jne
sub
add
sbb
xor
dec
cmp
jmp
outsl
shlb
inc
sbb
jmp
push
add
shll
add
filds
add
shrb
cmp
add
popf
and
jmp
push
add
and
shrb
add
add
add
ljmp
cmp
and
push
add
iret
push
jnp
add
cmpsb
jae
sbbb
inc
add
popa
sbb
add
test
mov
push
push
ljmp
mov
add
sbb
dec
mov
sub
mov
add
mov
gs
out
inc
add
int3
xchg
neg
addb
add
push
add
or
mov
fmull
jb
incl
push
jp
sti
repz
add
add
add
mov
add
addl
mov
fcomip
test
jp
sbb
adc
jne
xchg
les
add
gs
push
add
and
repnz
in
mov
add
iret
pop
add
shrb
lret
pushf
dec
pop
add
repz
ds
inc
add
add
jp
jo
pop
push
add
imul
out
loop
insl
inc
testl
add
push
add
cmpsl
mov
mov
add
push
add
inc
stc
add
and
pop
in
add
lods
out
imul
mov
mov
sub
mov
enter
sbb
xlat
pop
inc
add
lahf
movb
lods
pop
cwtl
cmp
inc
jecxz
sub
loopne
add
push
add
dec
add
in
jne
add
cmp
mov
jb
xchg
cld
test
les
add
adc
ljmp
push
add
inc
int3
add
and
enter
mov
push
push
in
std
dec
add
lods
jg
imul
jbe
add
lds
add
enter
xor
mov
add
pop
add
add
testl
xor
xchg
xchg
jp
out
push
add
add
or
test
adc
add
sahf
or
inc
and
adc
fistpl
fdivl
jno
jge
add
pop
add
pop
add
mov
add
cmp
mov
mov
xorb
push
add
pop
add
mov
pop
sub
test
bound
jl
sub
adc
outsb
add
add
shl
mov
sar
add
lret
outsb
add
xor
adc
pop
cmp
jle
fidivrs
push
or
gs
add
adc
inc
add
xlat
movsb
xor
mov
jne
mov
jno
mov
cmp
push
add
scas
cli
push
add
les
out
push
add
movsb
lods
ret
add
add
sub
or
pop
add
jp
and
dec
and
out
popa
jo
mov
fcmovne
push
add
add
outsl
push
add
add
jae
bound
popa
call
mov
lret
insl
int
xchg
cmp
jl
mov
xchg
xchg
inc
add
mov
pop
addr16
aaa
mov
loop
cld
add
sub
sub
and
fdivrs
pop
icebp
fs
xor
xchg
mov
jo
and
fnstenv
xor
xor
jg
mulb
add
xchg
adc
add
add
lret
lahf
lds
repnz
and
arpl
js
add
mov
mov
xchg
rcrb
cmp
aad
add
push
fcmovnbe
out
pop
ja
mov
test
push
sub
mov
and
cli
add
jbe
adc
pop
add
les
add
imul
adc
push
add
or
aas
incb
or
adc
jns
add
add
cmp
ret
pop
popa
xorl
add
in
sub
mov
sub
pop
sbb
call
mov
add
add
push
add
shll
ja
add
add
push
mov
add
or
imul
std
notb
add
hlt
mov
add
cmpsb
paddw
mov
xor
sarl
cmpsl
data16
or
adc
insb
add
sub
lahf
hlt
movsl
push
add
fcmovnu
lods
sub
ss
mov
mov
add
lcall
sub
dec
add
add
out
cwtl
fbstp
push
add
jp
mov
pop
add
lods
lods
mov
mov
add
mov
shlb
ret
jae
sbb
mov
add
pop
xorb
add
adc
shr
icebp
jnp
add
add
lcall
scas
ret
pop
xchg
ja
int3
loop
mov
sbb
fldenv
add
aam
cmp
pop
dec
add
add
dec
add
cltd
ret
lock
jp
mov
cmc
mov
rcll
sahf
insl
mov
add
xor
pop
add
cli
out
lret
frstor
sbb
jmp
ret
iret
push
add
xor
clc
ljmp
push
add
add
pop
add
icebp
jg
add
out
mov
add
push
add
das
fwait
xlat
pusha
add
and
xchg
aad
or
out
lods
dec
add
xor
xlat
cmp
inc
out
pop
out
add
add
loopne
add
xlat
jns
stos
pop
add
leave
jecxz
cwtl
loope
add
jp
pop
add
sbb
mov
or
dec
add
jae
add
lods
cmp
add
dec
push
jae
xchg
pusha
add
iret
cmp
addl
bound
ja
into
aad
adc
daa
cwtl
lds
scas
adc
add
jle
dec
xor
daa
sbb
sub
pop
jns
xor
sbb
repz
fbld
add
push
sub
pop
pop
add
xchg
les
xor
imul
outsb
add
lods
pop
mov
mov
ja
xchg
add
add
data16
xchg
push
add
mov
add
add
je
jl
arpl
add
loop
add
pop
add
adc
sub
repz
cmp
cwtl
mov
add
jle
xor
cmp
jne
in
in
sahf
pop
jnp
dec
add
xor
pop
cmovge
or
and
add
lahf
imul
add
pop
mov
xor
xchg
call
mov
add
add
add
add
xchg
sbb
lock
adc
jmp
cmp
add
cmp
and
xlat
arpl
test
arpl
add
push
add
aam
add
add
add
imul
add
das
and
inc
add
shlb
bound
sub
and
roll
aas
es
in
cwtl
sub
dec
mov
clc
pop
push
add
nop
pop
add
sub
jae
sub
hlt
inc
stos
inc
sbb
test
add
repnz
ljmp
repnz
or
pop
add
add
xor
add
add
imul
stos
aam
leave
scas
xor
pushf
shl
xor
rol
add
pop
out
mov
addr16
loop
add
fcoml
lahf
shrb
or
loop
push
add
aam
sbb
sub
arpl
add
int
add
mov
add
gs
xor
imul
add
mov
sbb
mov
rcrl
sbb
push
in
push
add
mov
stos
add
repz
fisubs
loopne
in
push
add
add
add
ret
adc
mov
lods
in
aaa
out
sub
js
out
lcall
add
fsts
cmp
adc
int
add
mov
add
add
loope
dec
insl
pop
fisttpl
divb
add
add
pop
push
mov
pop
add
and
fsubs
pusha
add
xstore-rng
cmpsl
inc
inc
add
imul
mov
int3
sbb
fadd
and
hlt
jp
int3
add
add
ja
add
push
add
add
shrb
add
ds
inc
add
push
add
fistl
mov
and
add
cmp
adc
rcr
loopne
cltd
adc
sbb
xchg
xor
add
and
push
or
dec
pushf
dec
add
add
outsl
jle
xchg
mov
add
lahf
imull
push
add
xchg
hlt
jmp
movsl
loopne
cmp
repnz
adc
pushf
gs
dec
add
push
ret
mov
inc
js
lret
in
daa
stos
cmpsl
insl
std
dec
les
dec
add
and
adc
test
fwait
sbb
enter
and
jecxz
add
add
div
cld
sbb
dec
lret
les
cmp
inc
add
ret
fwait
rcr
or
ret
jge
pushf
pop
test
call
push
add
jb
aaa
push
add
mov
repnz
add
push
xor
lods
fdivrl
ret
js
xor
xor
and
leave
jmp
test
xlat
cmp
movsb
cltd
fwait
dec
pop
cmp
xchg
pop
dec
pusha
add
fcmove
mov
enter
jg
cmpsl
lret
popa
cltd
push
add
cmp
inc
add
mov
orb
add
add
ret
jo
imul
add
push
add
shll
sub
add
dec
popa
loopne
fistpll
jecxz
add
mov
inc
push
loopne
mov
aaa
xor
ljmp
xchg
push
xchg
pushf
into
jb
sub
pavgw
or
mov
cltd
filds
push
add
pop
mov
mov
add
test
cmpsb
sarl
cmp
add
lds
inc
test
mov
xor
test
stos
push
add
push
add
leave
out
add
or
add
fbstp
rcl
fwait
insb
add
adc
insb
add
add
std
mov
cli
cmpsb
outsl
sub
add
cltd
mov
add
rclb
adcl
ret
nop
fwait
pop
jmp
lcall
cmp
movntq
movsl
rcll
add
addr16
pop
add
out
ret
icebp
push
add
xchg
or
aad
fcmovbe
bnd
add
incb
pop
dec
add
xor
insb
add
mov
and
inc
call
popa
mov
dec
dec
add
add
push
mov
and
dec
stc
mov
dec
subb
add
aas
inc
add
xor
stc
adc
mov
loopne
imul
add
sub
dec
add
add
add
add
ret
pop
add
sub
add
add
jg
mov
lahf
shll
add
add
add
push
es
in
adc
push
add
nop
pop
sub
lahf
mov
sub
push
add
sub
lods
add
andl
add
add
in
and
aas
push
add
xchg
xchg
adc
add
jnp
add
jne
mov
add
dec
in
add
loop
adc
dec
add
repnz
add
dec
add
sbb
lea
dec
add
dec
mov
mov
add
add
lds
and
push
pop
add
sti
lret
add
jge
insb
add
out
out
add
sbb
add
jnp
and
aaa
xchg
add
add
divb
mov
add
add
mov
into
mov
lret
and
push
test
sub
push
add
sahf
ret
pop
add
and
nop
mov
pusha
add
or
sbb
scas
push
add
add
add
dec
push
add
jl
fwait
mov
fsubrl
pop
add
add
sbb
shrl
hlt
shlb
add
shll
add
clc
adc
into
lods
test
xor
cmpsl
push
add
stos
pushf
sub
push
add
sbb
mov
add
xchg
mov
add
inc
add
loopne
jbe
rorb
xlat
data16
add
push
add
add
ja
inc
add
adc
xchg
lret
add
shlb
add
out
mov
add
or
add
add
stc
cld
pop
ja
add
xchg
rcr
pop
jns
xchg
push
ja
sub
add
adc
jmp
push
add
sub
lret
cmp
jge
incl
outsl
or
arpl
ret
xlat
jge
push
sub
std
popa
fisttps
sub
dec
sahf
inc
or
sbb
dec
or
xorb
cmpsl
sbb
inc
add
add
add
pop
ja
jecxz
inc
add
outsl
idivl
mov
mov
in
lea
leave
sbb
lods
decb
movsb
int
sti
fidivs
mov
loop
lcall
cli
mov
fcomi
xor
imul
add
xchg
int3
dec
dec
icebp
flds
and
repz
fnstenv
pop
inc
subb
aad
fwait
and
cmpsb
cmc
popf
bound
repnz
mov
subl
add
xor
xor
jo
int
mov
add
add
out
jno
add
inc
loope
hlt
insb
add
add
fs
rcl
clc
xchg
and
fsts
call
cli
sti
xchg
repz
test
imul
nop
mov
add
out
in
add
pop
cli
cmp
fnstsw
adc
push
movsl
lret
lcall
lahf
cli
sub
and
add
arpl
adc
add
out
jbe
adc
or
loope
fstps
jbe
data16
test
fstl
add
les
leave
popf
jmp
add
or
imul
or
push
clc
add
add
movsb
mov
or
mov
jnp
add
div
test
insb
add
cmp
add
mov
add
mov
insb
add
into
sbb
lret
pop
add
mov
push
jbe
or
jo
and
mov
add
push
add
push
add
popa
scas
jbe
adc
stos
cmp
jae
inc
pop
out
dec
lret
rclb
add
aam
jns
cmp
xchg
inc
add
add
je
push
add
pop
add
ds
push
add
insb
add
fldl
add
adc
add
sbb
adc
add
dec
jg
xchg
pop
sbb
sbb
arpl
add
mov
xchg
lods
ds
aam
add
pop
or
outsl
cmp
out
and
sub
test
mov
cmc
cli
addr16
add
pop
add
add
sbb
push
cmp
xchg
vunpckhps
scas
jmp
mov
cmpsl
add
push
cmp
loop
negl
add
test
in
imull
push
add
xor
push
or
aas
sbb
add
mov
jb
je
js
adc
call
add
add
jae
add
cmp
in
add
loopw
std
sub
add
add
int
sub
cmp
add
and
add
lcall
xor
add
iret
and
inc
xor
addb
sbb
in
and
add
mov
xor
xor
mov
add
push
add
stos
sahf
cmp
add
xchg
inc
jp
pop
repz
movsb
push
movsb
jae
daa
outsl
or
andb
add
mov
xchg
dec
add
in
jb
sahf
mov
sub
add
aad
add
add
add
test
ljmp
inc
add
pop
test
inc
stc
decl
inc
add
add
add
add
in
fwait
or
mov
pop
add
pushf
addb
add
add
add
fisttpll
add
xchg
mov
mov
ficoml
add
dec
add
jbe
jg
dec
add
bound
sub
ret
arpl
out
add
add
pop
jmp
dec
add
lcall
ljmp
out
and
mov
add
mov
dec
fwait
shrl
pop
jmp
cmp
sahf
fmuls
add
sub
andb
adc
popa
popf
out
mov
add
xor
or
add
xchg
daa
dec
punpckhwd
movsb
scas
pop
imul
or
and
add
add
add
xor
sub
xchg
fcomps
scas
pop
out
fsubrl
add
std
fisubl
jo
mov
fildll
pop
add
add
mov
xchg
xlat
in
mov
out
test
xchg
adc
mov
add
scas
pushf
mov
jne
push
dec
xor
add
mov
adc
outsl
gs
popf
pusha
add
add
fisubrs
push
add
push
outsl
cltd
iret
adc
xchg
mov
cli
dec
add
push
push
add
mov
mov
or
dec
add
push
add
fimull
cmc
popf
loope
xor
pop
inc
cmp
into
push
add
cli
dec
add
add
jmp
jg
add
mov
add
add
jno
adc
aaa
fcom
lret
pop
fistpll
add
add
add
dec
add
icebp
fwait
mov
out
jns
add
add
add
jo
data16
addb
out
adc
aaa
aas
xchg
cli
jne
sbb
add
add
push
add
das
data16
icebp
into
cmp
dec
pop
pop
add
xchg
sbb
iret
mov
sub
lea
add
add
add
add
dec
add
sbb
cld
jnp
add
pop
add
stos
imul
jmp
and
add
dec
pop
add
inc
add
add
dec
add
inc
bound
testl
jmp
dec
add
add
sub
jb
mov
out
jns
movsb
inc
sub
xchg
data16
add
pop
mov
inc
add
add
sub
mov
pop
add
inc
ljmp
es
cli
fwait
sbb
dec
inc
add
insl
js
or
and
cmp
pop
cli
pusha
add
add
xor
sbb
sub
inc
mov
and
shll
mov
pop
push
add
psraw
add
int3
das
pop
add
scas
mov
dec
xchg
leave
in
or
dec
add
xor
add
add
xorb
adc
sbb
cwtl
pop
or
popf
fisubs
add
xchg
add
push
add
add
ja
add
pop
add
test
cltd
pop
add
jno
mov
inc
add
leave
repnz
add
pop
stos
outsb
add
cmc
hlt
out
xorb
add
xchg
aas
stos
stos
xor
mov
push
add
lods
mov
mov
or
fimuls
fcompl
push
cmc
mov
add
add
add
into
fcomps
roll
movsl
pop
add
add
add
add
and
add
cmp
loop
add
jle
pushf
in
inc
add
clc
mov
out
cmp
add
fsubl
push
out
push
scas
movl
out
dec
add
lret
push
add
add
lahf
es
je
push
or
sbb
cwtl
orl
inc
sub
jmp
imul
ljmp
clc
xchg
xor
jle
xchg
sub
lods
sub
les
add
add
add
jns
xor
lea
add
push
add
insb
add
push
add
xor
add
dec
pop
add
mov
add
add
pop
add
inc
add
mov
add
sub
mov
add
push
push
add
out
lahf
aam
lods
sub
aad
sub
mov
add
inc
add
pop
in
inc
inc
add
ljmp
adcl
stos
and
jb
cmp
aaa
mov
xchg
inc
add
push
lods
mov
dec
test
add
popf
inc
add
lods
xchg
add
add
pop
mov
mov
ljmp
jae
add
mov
add
or
stos
adc
add
add
add
pop
add
mov
addr16
adc
mov
jbe
cltd
fisttpll
in
mov
out
stc
dec
das
lret
push
add
add
frstpm(287
sub
lock
sub
add
cltd
mov
xchg
call
add
inc
add
xor
cmp
imul
and
and
mov
mov
push
jl
pop
mov
xchg
ds
cmc
ljmp
add
add
pop
add
mov
mov
add
pop
mov
add
mov
add
aad
pop
mov
test
cltd
sbb
cmp
push
add
pop
add
and
add
pop
inc
fwait
push
jmp
pop
cmp
push
add
cmp
leave
rcrb
faddl
in
mov
test
add
mov
and
lods
xchg
pmovmskb
rcr
add
add
xlat
jo
mov
pop
lcall
add
add
xchg
insb
add
in
sti
movsl
push
add
xchg
pop
pop
sbb
scas
das
stos
sarl
add
add
test
add
add
add
add
add
add
mov
push
sbb
shrb
add
add
xchg
fisttps
add
add
add
icebp
dec
add
rcll
or
cld
lods
jl
fadd
pop
loopne
add
jno
data16
and
mov
add
push
mov
imulb
add
add
into
loope
jecxz
push
roll
fldenv
add
or
cli
push
add
mov
dec
add
jb
repz
add
sbb
mov
pusha
add
cmp
add
in
add
cmpsb
stos
or
add
js
xchg
mov
sub
jae
add
cmp
sbb
sahf
or
aad
add
xchg
mull
add
jecxz
add
add
mov
ret
push
add
pusha
add
pop
add
mov
cli
xchg
dec
jne
add
push
pop
add
mov
int
add
push
or
pop
add
pusha
add
sbb
add
mov
mov
pop
add
loop
das
inc
add
pop
jecxz
shll
add
add
pop
out
andb
outsl
and
das
xchg
iret
add
arpl
fsub
push
add
mov
scas
xchg
xorb
nop
outsb
add
inc
add
add
add
mov
icebp
jns
add
xchg
push
jne
gs
pop
add
xchg
add
add
mov
add
add
add
lods
xchg
xchg
sbb
pop
pop
add
add
jnp
int
outsb
add
xchg
icebp
and
add
lock
adc
int
pop
add
add
mov
add
dec
mov
subl
xchg
fstpl
or
inc
add
hlt
dec
add
add
cli
data16
add
sub
lcall
mov
jno
mov
add
add
add
dec
or
enter
push
add
add
in
cmp
stos
mov
int3
inc
outsl
lds
cltd
lret
and
dec
fucom
xchg
movsb
test
test
mov
sbb
add
int3
mov
lds
mov
ret
jns
add
pushf
ret
aad
and
sahf
shlb
cli
xchg
add
daa
stc
xchg
mov
cld
dec
cs
in
add
fwait
adc
sub
cltd
xor
dec
shl
add
orl
add
out
lock
pop
add
dec
aaa
fwait
ja
add
add
fldcw
or
loope
add
add
dec
add
add
popf
sbb
push
add
fmul
push
testb
xcrypt-ofb
cmpsl
imul
add
rcrl
and
out
mov
jl
sub
call
sub
cltd
cmp
add
jl
push
cld
std
push
mov
push
add
scas
shrl
add
mov
add
nop
adc
jle
push
add
jno
push
add
jl
ficomps
ficoms
in
pop
sahf
stos
inc
add
cmpsl
pop
jns
aaa
add
add
add
stos
sti
push
add
add
ret
mov
gs
mov
out
lods
pushf
adc
ret
add
sub
sbb
fistl
shl
cs
in
push
mov
mov
add
stos
insb
add
add
into
or
std
cwtl
mov
inc
icebp
stos
shl
fdivrs
bsr
shlb
add
dec
add
mov
push
adc
fnsave
idivl
and
rcrb
fnsave
cmp
pop
add
arpl
dec
add
add
add
pop
add
mov
add
testl
pop
push
xor
mov
ret
pusha
add
add
btc
add
mov
mov
sub
sub
sub
pusha
add
fsubrl
mull
push
add
add
add
dec
sub
pop
mov
add
sub
mov
fadds
cmp
add
cmp
pop
fbld
add
into
inc
int3
nop
lods
or
sarb
add
faddp
jp
addr16
lods
rclb
lcall
test
jecxz
iret
mov
and
enter
pop
std
ret
xor
js
mov
add
mov
add
add
add
jae
fs
clc
push
test
add
add
jmp
push
js
popf
lock
add
push
add
add
lock
jle
mov
lods
xchg
push
inc
add
repz
add
or
or
aad
insb
add
loope
push
add
add
mov
sbb
push
add
insb
add
dec
sbb
cmp
stos
jns
mov
add
adc
out
add
subb
mov
add
add
cmpsl
dec
add
loopne
mov
inc
rcrb
insl
rcl
add
jle
or
cmp
push
add
jle
sbb
add
add
and
pop
dec
fbstp
and
data16
add
push
mov
add
add
gs
sbb
inc
pop
add
add
outsb
add
or
add
insl
rcr
xor
hlt
adc
xor
adc
mov
add
add
jns
add
incb
add
imul
push
negb
and
sti
inc
pop
add
addr16
idivl
aam
loop
out
jnp
cmp
cmp
call
add
shrb
xchg
js
lds
loop
mov
add
ror
add
pusha
add
jo
psrld
and
enter
pop
outsb
add
add
add
jo
mov
or
sub
add
push
add
in
mov
jae
add
jbe
lds
addr16
test
and
or
add
jge
pop
add
loopne
add
add
add
xchg
cmp
add
add
add
push
add
cmp
dec
add
mov
add
pop
add
add
cmc
sub
add
pcmpgtd
lea
xor
cmpsb
mov
mov
jmp
imul
add
ljmp
add
mov
stos
dec
add
mov
mov
into
and
push
add
test
subb
or
add
movsb
push
add
sahf
data16
add
daa
and
stos
sbb
movl
fst
mov
push
add
andl
lock
cmp
pop
or
mov
add
fstpl
shll
xlat
dec
add
mov
leave
cmp
pop
add
fstpl
ss
lea
adc
jb
scas
mov
and
iret
cwtl
lahf
inc
add
test
repnz
push
add
stos
outsb
add
inc
and
test
test
add
out
call
loope
xlat
add
jmp
jg
ja
xchg
insl
out
cld
pop
sub
add
inc
data16
dec
add
jne
movsb
and
xchg
pop
add
add
pop
mov
add
jae
jnp
test
add
scas
imul
pop
add
xor
and
rcrb
insb
add
cmp
xor
popa
pop
add
int3
outsl
add
fdivrp
stos
push
add
jae
sbb
jae
repnz
mov
push
add
push
add
dec
dec
add
mov
and
add
test
mov
add
pop
add
add
or
sub
lret
adc
int3
mov
dec
pushf
sub
cmp
or
add
sub
lcall
push
add
jno
cmpsl
dec
add
sub
stos
push
add
ret
sbb
mov
add
jg
add
inc
xchg
sbb
aad
or
add
xchg
push
clc
adc
jbe
cli
ret
mov
sub
imul
cltd
sarl
add
add
add
addr16
scas
subb
test
add
add
mov
test
add
dec
test
add
xchg
cmp
jno
add
add
lahf
aad
cmpsb
and
adcb
add
mov
psllw
pop
add
push
add
arpl
test
mov
ret
lcall
pop
ja
or
push
add
add
das
dec
add
add
sti
adc
pop
add
inc
jmp
pop
add
add
add
xchg
sahf
pushf
jmp
add
or
jmp
add
add
mov
sub
rcll
add
ret
out
test
and
icebp
inc
add
test
add
call
je
mov
mov
mov
pushf
aam
pop
pop
imul
xchg
aad
mov
mov
mov
xchg
adc
add
rcl
add
data16
in
and
pop
sub
push
add
mov
or
dec
aad
lcall
mov
mov
ja
jo
loopne
cmp
or
mov
push
ja
cwtl
xchg
push
add
adc
inc
add
jb
and
xchg
xchg
dec
add
sar
cli
push
add
mov
dec
inc
add
cs
orl
jb
dec
cmc
sub
scas
add
and
sbb
xchg
cmpsb
cmp
xchg
pop
add
add
js
pushf
testb
sub
add
lods
mov
sar
push
or
adc
fwait
icebp
into
inc
addr16
mov
addr16
out
fimull
outsl
or
cmp
fdivl
push
lods
sbb
push
add
add
test
dec
add
stos
movsl
clts
add
std
mulb
test
inc
add
popf
adc
sbb
inc
xlat
out
xor
pusha
add
out
push
xor
or
mov
hlt
enter
add
add
inc
add
cmp
jg
cmp
popa
mov
test
shl
testb
inc
add
movsl
adc
jae
cmp
sub
adc
loope
enter
add
add
enter
inc
movsl
jge
xchg
pop
push
add
add
add
add
icebp
div
call
insb
add
mov
xchg
repz
lret
arpl
lds
daa
out
jmp
add
push
add
add
cmp
add
repnz
pop
sbb
mov
add
stos
shrb
les
add
add
loopne
imul
lods
aaa
out
out
add
leave
jg
add
outsb
add
dec
add
lcall
mov
incb
ret
fistpl
mov
jns
add
add
push
add
and
test
test
cmp
inc
rorb
push
inc
popa
adc
shll
icebp
scas
scas
mov
add
push
out
faddp
xchg
mov
lods
pushf
pop
add
dec
fiadds
xor
or
and
mov
mov
add
imul
pushl
hlt
lret
je
int3
adc
mov
out
adc
inc
add
add
add
add
xor
ret
popf
dec
sti
cmp
aad
xor
in
icebp
les
push
adc
mov
inc
add
shl
mov
out
mov
pop
add
sets
pop
mov
add
sbb
sub
jbe
ret
sub
or
outsl
jle
adc
mov
jno
add
push
add
sahf
add
push
add
cwtl
push
add
ret
add
jl
xor
lcall
fwait
dec
add
ljmp
jp
shl
in
aam
add
add
scas
lock
in
add
xchg
and
fisttpll
xlat
xor
add
stos
inc
add
jae
mov
cmpsb
dec
add
repz
mov
add
add
repnz
add
add
add
add
sbb
pop
jb
lea
add
jb
push
add
pop
insb
add
push
add
cld
scas
mov
fmul
mov
sbb
test
sbb
add
mov
add
arpl
ljmp
xchg
insl
pushf
pop
stos
xlat
filds
pusha
add
cmp
fwait
or
push
add
add
sti
cmp
xchg
daa
scas
or
or
into
faddl
or
push
add
scas
xchg
add
pushf
cmp
or
mov
daa
adc
xor
outsl
cmp
mov
add
inc
add
jge
pop
rcl
mov
pop
dec
add
mov
js
adc
pop
add
add
fisubs
add
xchg
adc
add
add
out
push
int3
lock
icebp
cmp
fnstenv
sbb
repz
cmpsl
cmp
stos
loop
dec
add
call
stos
sub
addr16
das
out
jl
mov
add
inc
add
aas
inc
or
jl
bound
enter
sbb
push
add
add
jecxz
lods
add
push
add
std
dec
movsl
in
add
sbb
ljmp
sub
add
sbb
add
mov
dec
in
ror
pop
or
add
jne
add
xchg
sbb
incb
call
jno
int
add
adc
add
mov
jecxz
inc
add
fsubl
mov
xchg
jmp
add
mov
shll
add
movsl
sbb
pushf
cli
jl
insl
addr16
mov
add
sub
fwait
movsl
loope
add
loope
add
mov
pop
add
mov
jbe
jg
adc
repz
fisubs
pop
add
sbb
jle
mov
stos
inc
add
and
je
pop
pop
fsubrl
fwait
movsb
lea
add
push
add
cmpsl
sub
fnstsw
test
fmull
popa
jmp
add
add
mov
and
imul
mov
adc
xchg
jno
add
gs
add
mov
add
xor
les
jmp
jae
je
iret
lahf
cmp
and
jo
aas
push
add
add
push
add
pusha
add
mov
sbb
sbb
mov
jge
push
add
add
push
gs
test
std
pop
add
mov
adc
fmuls
jnp
add
icebp
sub
sub
add
or
in
imul
stos
mov
std
sub
pop
add
imul
xor
fdivp
jne
icebp
dec
out
test
jae
xor
ret
out
les
add
bound
out
add
add
xchg
icebp
flds
add
add
sbb
fidivs
aas
add
xchg
decl
mov
test
and
or
add
fdivr
push
add
pop
cltd
lea
push
add
add
mov
push
add
add
add
lods
data16
je
sbb
lock
add
add
xchg
mov
mov
cli
outsb
add
test
loope
jg
into
mov
add
dec
jmp
add
add
sbb
mov
pop
test
adc
sub
sbb
pushf
push
outsb
add
loopne
add
add
mov
cmp
add
add
fstpl
inc
fwait
in
push
add
movsl
loop
add
shll
das
arpl
imul
add
cwtl
in
fst
cmpsb
jge
lods
pop
add
cltd
adc
mov
dec
pusha
add
sbb
insl
ja
aas
mov
fdivr
in
cmp
add
test
jo
leave
adc
mov
adc
outsl
jmp
ljmp
mov
test
cwtl
bound
cld
pop
inc
mull
or
push
add
mov
xchg
das
jo
cmp
cli
push
es
add
je
cld
test
icebp
mov
add
add
rcrl
mov
sub
in
outsb
add
mov
pop
aad
mov
adc
mov
cmp
add
add
stc
lods
mov
pop
dec
add
mov
or
sbb
or
sub
faddp
push
adc
add
adc
xchg
aas
jp
mov
add
les
xchg
cmp
jl
je
repz
lcall
add
mov
mov
rolb
add
and
add
inc
jns
out
sar
cld
jno
fimull
popf
mov
int
nop
cmc
add
fwait
adc
es
pop
aam
fxam
jp
xchg
icebp
lahf
mov
movsl
fwait
loop
jnp
xchg
les
jg
add
lock
outsb
add
je
mov
and
add
addr16
add
push
loopne
shl
mov
nop
mov
in
push
add
cwtl
mov
add
dec
add
add
dec
add
add
pop
add
sbb
push
add
push
popf
or
add
cmp
cmp
fsincos
dec
add
add
ljmp
add
inc
hlt
cmpsl
cmpsl
in
pop
mov
add
jbe
mov
mov
popa
pop
add
sbb
add
les
add
mov
add
cs
push
out
minps
add
inc
outsb
add
movsb
icebp
add
jp
push
add
xchg
paddw
mov
add
add
jne
add
pop
inc
popf
cmp
fldenv
add
mov
jb
into
and
inc
cmp
out
cmpb
push
add
sbb
mov
add
add
mov
xchg
out
or
lds
inc
add
add
add
add
out
add
sub
xorl
lods
push
add
push
add
add
cmp
fstps
subb
insl
adc
imul
add
add
in
out
lods
inc
add
add
push
add
xchg
out
data16
mov
mov
cmp
add
bound
xchg
pop
add
add
jp
jle
push
dec
outsb
add
add
add
mov
aam
push
call
sbb
or
xor
xor
mov
add
xor
in
cli
cld
xchg
lahf
outsl
out
sbb
or
stc
xor
inc
mov
add
call
mov
das
jae
loop
add
add
in
test
adc
xchg
xchg
mov
dec
add
jae
movsb
mov
pushl
add
push
xchg
pop
cli
mov
popf
movsl
out
lahf
mov
sti
lea
lods
pop
fldcw
into
add
inc
outsl
sahf
pop
add
stc
adcb
add
add
xor
push
add
add
clc
test
stc
ror
push
add
loope
mov
stos
xchg
add
cmp
lret
mov
es
hlt
dec
add
adc
add
add
notl
bound
mov
push
add
icebp
les
adc
cmp
dec
jle
insl
ret
ja
les
cmc
sarl
add
imul
add
push
add
rcll
adc
out
or
sub
jle
sbb
mov
cmp
add
inc
xlat
ret
enter
jb
xor
sahf
shrl
stos
cmpsb
mov
jg
lret
xlat
cwtl
loope
add
stc
dec
add
jg
or
into
decl
dec
hlt
lahf
and
or
cwtl
dec
sub
sbb
jecxz
add
stc
sub
js
jg
add
add
sub
pop
add
mov
scas
sbbl
xchg
cmpsb
std
mov
xlat
iret
cli
pop
add
addr16
test
mov
fcom
mov
add
mov
or
inc
mov
xchg
and
dec
add
popf
stos
jecxz
add
cltd
push
add
in
sbb
jb
add
test
sbb
addb
xchg
add
mov
adc
xorl
pop
scas
mov
or
add
mov
dec
add
inc
add
adc
insl
mov
andb
ffreep
add
add
ss
mov
mov
add
mov
xlat
rclb
jb
nop
imul
add
imul
cmpsl
pop
add
inc
add
dec
add
mov
add
push
add
leave
add
imul
cmc
cmpsb
sbb
loopne
shrb
andl
and
or
xor
pushf
sarb
add
cli
adc
pop
and
in
sub
jne
ror
cwtl
pop
jge
pop
add
nop
out
faddl
insb
add
rol
je
loope
fisubs
sub
mov
test
add
push
fidivrl
sbb
push
add
add
or
fimull
decb
add
add
push
mov
xchg
mov
out
or
lcall
add
push
xor
mov
add
add
fstps
push
xor
xchg
mov
cmp
add
jp
xlat
negl
daa
bound
out
add
push
mov
leave
stos
and
mov
out
aad
into
jecxz
test
loopne
repz
add
fistl
loop
mov
ljmp
add
pusha
add
int
je
into
lock
add
movl
add
mov
enter
mov
add
jno
add
add
pop
add
in
jno
add
sub
aad
lods
fistpl
lcall
or
loop
cwtl
add
aaa
sub
in
and
add
fldcw
jne
add
mov
lcall
cmpsb
mov
and
add
push
add
pop
xchg
out
jbe
fstpl
scas
sbb
mov
add
jmp
movsl
dec
sbb
mov
add
jmp
outsl
jp
push
fsub
lds
add
add
push
add
andl
aas
aam
add
fcompl
in
das
mov
jne
add
in
mov
into
and
add
mov
fmuls
and
imul
dec
add
mov
mov
add
sbb
or
mov
add
dec
add
imul
add
pop
das
cld
cmp
jl
outsb
add
mov
push
push
add
jno
add
add
add
sub
mov
and
add
outsl
sbb
mov
movhps
out
push
add
into
stos
mov
add
add
add
inc
shlb
data16
push
cld
jae
jge
xor
pop
cld
dec
and
sbb
loop
shrl
icebp
cwtl
and
push
add
mov
jne
mov
add
insl
add
add
pop
add
add
lds
add
dec
add
and
aad
xchg
inc
test
dec
aas
mov
xor
scas
out
fadd
push
add
jnp
pop
add
test
and
int
add
ret
inc
or
lods
inc
add
add
add
mov
cmpl
jecxz
sti
push
add
lods
loop
lods
test
add
mov
add
mov
add
lret
test
add
mov
jle
imul
popf
in
inc
add
aas
mov
add
cmp
pop
add
and
xlat
xor
bound
adcl
add
inc
add
pop
add
add
ret
stc
stos
ret
js
xchg
mov
lcall
bound
jle
xor
adc
out
push
add
and
mov
jl
mov
add
pushf
sahf
std
pop
xchg
xor
xchg
push
add
and
push
test
add
xchg
xchg
push
in
add
imul
test
fistpl
xchg
xchg
ret
cmpsl
repz
pop
mov
adc
push
sbb
fstl
mov
pop
add
cmp
and
add
rolb
sahf
ret
or
pop
add
ja
add
sub
inc
add
lods
jge
sub
mov
add
add
push
movsbl
add
test
push
add
add
jl
movsb
ljmp
xorb
mov
jmp
sub
adc
xlat
and
push
add
enter
inc
test
pop
dec
loopne
add
push
add
pop
add
mov
xchg
sbb
fistps
aaa
ljmp
cmpsl
pushf
test
mov
add
add
pop
add
pusha
add
add
add
add
dec
add
add
xor
inc
mov
mov
cmpsl
mov
frstpm(287
leave
sbb
mov
insb
add
sar
stos
mov
mov
call
add
adc
imul
sbb
add
sub
loop
pop
add
stos
sub
push
add
add
mov
push
add
push
cmp
dec
dec
push
add
lock
add
sbbb
lret
jmp
hlt
or
add
aas
das
adc
fmul
sbb
rcl
xor
pop
add
add
add
add
scas
adc
add
scas
lahf
arpl
add
fwait
addb
and
lahf
mov
popf
jne
dec
add
add
popf
or
jo
cmpsb
int3
push
fisubs
nop
cmp
dec
push
daa
idivb
push
add
fadds
jns
popf
xchg
out
mov
jecxz
add
add
push
add
add
push
add
add
sub
iret
je
mov
lret
add
jo
movaps
clc
dec
add
dec
add
out
clc
insb
add
add
add
fimuls
aam
int3
decl
ret
scas
jecxz
test
imul
add
negb
jb
leave
data16
mov
mov
adc
jae
add
sbb
push
add
mov
sbbl
add
push
add
rolb
add
xchg
jnp
add
mov
gs
aaa
jae
sub
outsb
add
daa
outsl
cmp
inc
add
fld
mov
mov
add
cmp
xor
in
or
add
push
add
jns
lahf
dec
pop
add
rorl
int
add
lods
das
adc
cmpsl
xor
decl
mov
or
push
add
adc
lods
mov
jp
imul
cmp
dec
data16
in
add
cltd
mov
in
movsl
cmp
add
leave
fcompl
add
inc
or
jo
cmp
push
mov
add
jg
in
aad
sub
cld
das
mov
xor
xchg
rcr
mov
aam
push
add
fisubl
ljmp
aad
outsl
out
and
repnz
mov
sbb
push
add
jo
add
add
push
out
mov
sbb
hlt
imul
dec
movd
mov
js
arpl
inc
jbe
jmp
pop
jo
xor
add
push
add
dec
out
movl
lea
pop
add
bound
mov
add
pop
cmpl
push
add
dec
sub
sub
jecxz
add
adc
xchg
das
scas
jno
sbb
xchg
inc
add
stos
xor
sbb
xchg
mov
stos
cltd
push
add
add
mov
add
popf
push
add
sbb
mov
out
xchg
jg
mov
cmc
xor
push
in
lcall
cwtl
mov
js
and
jne
dec
and
popa
mov
int
loope
add
iret
pop
add
fistpl
and
mov
push
jno
pusha
add
pop
fidivl
jg
push
add
cmp
ds
jmp
pop
mov
jecxz
outsl
decb
das
imul
add
mov
jns
fcoms
jecxz
add
xlat
adc
cmp
movsb
sub
jb
cmp
add
add
cmp
xor
into
add
sbb
push
add
ja
jle
test
sar
inc
mov
add
mov
in
dec
add
das
call
outsl
in
add
jns
sbb
add
push
pop
negl
or
rep
cmpsb
mov
add
repnz
add
mov
jle
mov
add
inc
jns
aaa
jo
test
ret
ljmp
add
inc
ret
insl
rol
add
adc
mov
and
rorl
add
cmpb
dec
add
add
jecxz
sbb
jmp
enter
sti
xchg
xchg
stos
add
xor
inc
add
rcrb
xor
shll
add
je
nop
xchg
xchg
mov
test
mov
ror
mov
xor
ret
mov
add
outsb
add
test
add
or
cltd
outsb
add
add
shr
ja
insb
add
jno
lds
add
jnp
cmc
or
add
xchg
sbb
enter
mov
xor
add
add
loopne
cmp
cmp
les
sarl
repz
das
mov
sub
movsl
ljmp
call
dec
repz
dec
add
rol
stc
mov
xchg
das
xor
pushf
cmp
data16
test
add
mov
adc
iret
mov
je
ret
jne
add
add
mov
loope
pop
and
loopne
add
or
mov
and
or
jo
rclb
fbstp
or
cmp
push
add
inc
clc
popl
movsb
fistl
add
lods
jnp
push
add
fsub
mov
ret
js
inc
out
add
mov
add
pop
icebp
dec
push
add
push
nop
sbb
cmp
int3
xchg
and
xor
aaa
xor
push
add
int3
call
add
adc
addr16
fmuls
loope
inc
pop
add
aas
hlt
push
sub
test
lds
or
test
add
adc
push
add
rol
mov
push
add
xchg
mov
in
cmp
lret
or
xor
sub
add
stc
iret
and
dec
add
aad
add
mov
test
add
mov
aam
adc
jb
sarb
add
cmp
loop
mov
add
jp
fidivl
add
lret
add
and
cli
aas
subb
daa
mov
push
add
push
std
aaa
sub
xor
les
and
inc
add
orl
push
add
or
xchg
xchg
mov
pop
and
int3
movsl
sahf
imull
cltd
dec
add
add
jl
jg
cs
out
pop
inc
add
mov
out
add
stos
push
cltd
and
call
add
cwtl
push
add
pop
jge
add
loopne
jo
pop
mov
push
add
js
testl
sti
ds
popf
cmpsl
sub
jne
pop
out
outsb
add
repz
ret
addr16
xor
inc
sbb
add
mov
add
add
sbb
mov
mov
in
jmp
push
or
jecxz
stos
and
sbb
inc
add
lock
jb
and
stos
sbb
and
lahf
lods
jo
loope
add
mov
pop
add
push
fists
mov
rcl
or
dec
add
hlt
pop
add
add
daa
arpl
inc
add
cli
aad
dec
loope
addb
or
xchg
cmp
das
fisubs
pop
add
add
sub
mov
shl
xchg
subb
jns
add
in
add
push
mov
add
rcl
jle
cmc
cmp
pop
mov
push
lcall
mov
pop
mov
and
add
movsb
aam
outsl
mov
add
xor
add
sbb
rcr
mov
add
pop
add
arpl
and
clc
dec
add
sahf
push
add
and
jb
add
pop
add
add
add
bound
push
add
call
add
sbb
enter
out
fimull
enter
repnz
sbb
cmp
cmp
cmp
rol
or
mov
xchg
sub
add
mov
add
leave
in
stc
push
mov
mov
fistpll
pop
cld
adc
popl
lret
out
pop
orb
inc
sbbb
ret
test
add
adc
add
cmpsl
mov
jo
or
mov
rcr
aaa
or
add
add
cltd
das
popf
test
lahf
and
sbb
add
mov
add
pop
sbb
mov
lahf
popl
add
lods
nop
push
add
add
dec
inc
add
add
ja
inc
shr
ds
mov
sbb
push
pop
mov
js
iret
sub
and
das
shrl
sub
add
push
or
adc
mov
in
mov
jbe
stos
cmp
enter
cmpsl
out
xchg
sub
dec
aad
add
loope
mov
lock
inc
mov
bound
pop
add
adc
cmpsl
pop
xchg
ljmp
cmp
add
add
xchg
pop
pop
xchg
push
add
dec
sub
mov
mov
cmp
in
outsb
add
mov
xchg
xchg
sub
sti
pushf
das
outsl
lret
xchg
sbb
xchg
push
add
dec
add
ret
add
rorl
fldcw
in
pop
add
cmpsl
fbld
add
add
pop
jge
mov
add
xor
sub
iret
js
jbe
outsb
add
cmp
jae
add
dec
add
loope
add
clc
and
mov
or
add
imul
add
push
test
lcall
add
bound
push
add
fbstp
out
push
add
in
into
and
push
add
xor
fisubrs
sub
sub
imul
add
jno
jns
add
xor
data16
cmp
mov
roll
mov
mov
jmp
add
add
or
jle
dec
out
add
push
pop
mov
add
idivb
and
push
add
add
sbb
and
add
cmc
push
add
arpl
add
cwtl
mov
xor
dec
add
add
add
add
enter
popa
push
add
mov
outsl
rcrl
cmp
add
adc
add
test
jne
xchg
push
add
in
dec
ret
sub
and
inc
and
gs
addb
lcall
dec
sbb
pop
adc
add
jl
nop
mov
sub
test
jge
or
mov
stos
dec
add
mov
lret
mov
push
add
push
test
adc
arpl
add
inc
add
mov
mov
fwait
idiv
xchg
enter
pop
add
push
out
mov
xchg
movsl
cltd
pop
movsl
and
and
add
fmuls
ja
inc
add
add
scas
push
add
mov
bound
addb
xchg
or
std
lds
addr16
mov
cmp
xor
jnp
and
inc
add
mov
dec
add
add
add
arpl
sub
imul
fdivs
xchg
int3
out
add
pop
pushl
and
vcvtsi2sdl
pop
add
push
add
enter
out
push
cli
lret
add
insb
add
mov
rcll
add
clc
sbb
leave
adc
and
pop
fidivs
mov
fsubr
fisubs
xchg
les
icebp
in
add
dec
add
add
pop
push
xor
add
add
add
add
scas
push
add
int3
mov
fidivrl
inc
add
mov
add
iret
add
add
add
call
add
in
out
mov
pushf
sbb
jecxz
call
add
repnz
test
add
imul
push
inc
mov
add
mulb
add
add
mov
pop
add
push
popf
ret
and
add
lock
add
movsl
movsb
sbb
jmp
pop
sahf
mov
mov
add
xor
dec
add
mov
xchg
fisubs
fnstenv
mov
lret
and
shll
mov
add
jl
mov
mov
shll
gs
call
push
xchg
stc
dec
shlb
repnz
sub
cmp
ljmp
add
jge
inc
add
add
push
pop
add
setg
add
add
sbb
lock
add
aaa
aas
cld
jmp
or
push
add
sub
and
mov
pop
push
add
mov
mov
lods
nop
lcall
ds
add
adc
xor
mov
add
negl
and
lret
lret
or
jae
mov
cmp
xor
fisubs
mov
mov
add
add
loopne
popa
dec
add
add
push
add
jns
jl
popa
push
add
add
ljmp
add
cmp
aaa
jmp
imul
lods
mov
mov
add
loop
cmc
jle
push
pop
out
std
or
test
add
add
add
jecxz
jmp
shl
add
add
push
add
add
cmp
call
outsl
jp
xorl
add
sbb
and
add
cmp
add
in
or
scas
mov
add
loopne
int3
daa
mov
clc
stos
xor
mov
out
fdiv
add
add
add
jns
mov
cld
xor
sub
adc
add
add
lods
or
add
aas
mov
mov
lea
push
fldenv
add
dec
add
add
cld
add
mov
mov
decb
popl
add
outsl
mov
push
add
out
inc
mov
add
inc
adc
add
lret
ds
in
pop
add
or
push
fucomip
movsl
sbb
dec
add
orb
scas
fldt
std
repz
adc
lds
loope
add
push
add
add
fwait
jl
push
xor
sub
in
repz
jnp
sbb
cmp
add
add
add
jne
je
clc
pop
pop
add
mov
add
out
dec
cli
adc
push
add
add
repnz
mov
clc
adc
shlb
imul
add
test
add
jmp
stos
or
xor
add
sti
adc
or
daa
sbb
jnp
add
outsb
add
add
mov
jbe
jns
gs
add
out
cmp
cwtl
sbbl
cmp
mov
add
pop
test
add
pop
add
dec
add
xor
add
add
dec
add
pop
push
add
aaa
jge
jns
inc
add
add
insl
rorb
add
push
add
into
adc
add
enter
push
js
inc
add
js
push
mov
add
mov
add
ja
add
pop
rcll
cmpsb
sarb
add
jl
xchg
jo
xchg
xchg
jb
sub
js
cmp
add
add
mov
or
lret
push
pop
or
push
or
mov
cmpl
mov
jp
pushf
aaa
and
test
dec
xchg
rcll
inc
pop
out
inc
add
cld
into
add
add
add
leave
jmp
adcl
add
outsl
add
mov
mov
mov
mov
loop
pop
imul
lea
mov
add
stos
xchg
add
add
adc
jnp
gs
xor
data16
mov
jle
lcall
ret
or
cli
pop
add
add
mov
loope
add
insl
sahf
in
shll
add
mov
pusha
add
test
add
add
cmpl
add
divb
cli
sub
cmp
jnp
repz
xchg
inc
add
mov
sbb
xor
xchg
dec
add
syscall
sub
dec
add
xchg
add
add
xlat
icebp
fcoms
add
repnz
xlat
pop
pushf
mov
add
outsl
jecxz
out
stos
inc
dec
add
push
add
dec
add
mov
push
dec
add
push
add
sbb
imull
pushf
xor
jmp
stos
or
add
add
jnp
sub
fistpll
and
jecxz
frstor
repnz
add
add
aaa
pop
add
dec
add
push
jo
adc
sar
repnz
loopne
popa
in
jl
addl
lahf
mov
push
add
xor
cmpsb
mov
je
mov
inc
add
jae
add
add
divl
ret
xchg
adc
add
add
add
or
xchg
scas
add
dec
jecxz
fldt
add
mov
or
xor
or
sub
jle
xchg
jge
popf
imul
rcll
sbb
iret
ret
sub
xchg
iret
clc
and
add
add
adc
das
pusha
add
in
lods
pop
add
mov
add
xchg
adc
addr16
int3
rcrl
add
adc
xor
add
xchg
cs
andb
add
ja
add
sub
sbb
mov
add
mov
mov
leave
mov
cmp
add
xchg
cmp
outsb
add
mov
pushf
lods
add
inc
xchg
cmpsl
xor
jnp
add
xor
outsb
add
aas
test
data16
ljmp
scas
pop
push
test
daa
push
mov
iret
subb
add
push
add
dec
movsl
and
mov
or
add
inc
pop
add
xchg
std
push
add
cmp
mov
inc
clc
aas
iret
push
add
push
add
popf
cmc
mov
fstpl
pop
orb
add
xchg
cmp
cmp
dec
pop
gs
adc
pop
add
jnp
jg
int3
add
je
into
fcmovnbe
in
cltd
addr16
subb
fadd
sub
in
jnp
adc
pop
repz
movsb
dec
cltd
leave
ret
fnstsw
add
dec
add
ja
divl
add
add
cmc
js
jle
sub
cmp
incb
bound
push
add
sub
icebp
nop
stos
cmp
xchg
and
push
imull
xor
or
add
add
jmp
xchg
nop
insl
or
add
add
dec
dec
add
xchg
in
insl
mov
popf
pop
add
ret
dec
add
add
cmc
or
rclb
nop
xor
sbb
mov
add
add
imul
add
fwait
sub
mov
jb
add
add
add
out
sarb
lahf
nop
pop
xchg
stc
dec
add
add
sbb
push
cmp
cmp
add
mov
cmpsl
jne
add
xor
cmpb
js
addr16
les
orb
add
push
add
movsl
jae
and
jge
sti
arpl
add
lret
movsl
xchg
mov
in
mov
aad
add
jnp
and
or
pop
sub
push
add
add
test
clc
xchg
add
dec
cmc
inc
adc
push
add
mul
mov
inc
add
mov
mov
mov
sbb
sti
jb
add
xchg
pusha
add
in
aas
adc
mov
js
dec
cli
pop
add
sub
popa
adc
popa
scas
out
sub
add
adc
inc
add
jns
mov
add
call
pop
add
in
xor
movsl
jne
or
sbb
sarl
pusha
add
dec
mov
add
adc
adc
push
add
pop
add
icebp
or
jp
repnz
add
add
sbb
out
xlat
bound
arpl
out
popf
mov
mov
add
add
push
pusha
add
or
jno
lds
add
pop
add
sbb
and
add
push
add
add
lret
outsb
add
mov
xorb
jg
add
add
add
add
mov
aam
xor
dec
and
sub
xor
scas
ret
cmp
push
add
stos
add
jae
popa
xchg
push
add
push
add
cli
xor
lea
push
add
dec
fbstp
clc
and
add
add
mov
cmp
outsl
mov
add
insb
add
pop
pop
add
aad
ficoml
mov
lods
in
pop
cli
repnz
cmc
adc
dec
add
cmp
add
jno
add
xchg
inc
addb
push
stos
movsl
add
add
push
add
add
out
sarl
mov
add
stc
sub
sbb
add
in
add
push
add
mov
mov
add
xchg
enter
add
pop
push
aam
outsl
cmp
adc
push
aam
cmp
add
push
add
adc
pop
add
rclb
data16
int3
pop
ret
jg
test
sbb
lods
popf
push
add
add
cmp
out
add
add
pop
add
dec
add
adc
mov
add
sbb
js
xor
jns
add
mov
sbb
cmpsb
repz
mov
aaa
or
das
adc
push
add
repz
add
adc
jg
addl
out
je
imul
xchg
mov
xchg
test
add
sbb
push
jnp
add
and
popf
mov
jbe
bound
inc
add
ret
dec
add
outsl
add
mov
scas
or
int3
ret
add
fisttps
inc
mov
push
add
mov
lock
add
jl
out
mov
add
dec
add
cmp
fisubl
jnp
cmc
and
jmp
sahf
add
inc
add
and
push
hlt
lds
mov
mov
add
fstl
icebp
mov
mov
add
sbb
lcall
fsub
xor
popf
sub
pop
popf
jns
popa
sbb
adc
sub
add
sbb
lret
xor
rcl
popf
jg
add
cmpsl
mov
add
jno
cmc
insb
add
cltd
add
inc
cld
ret
add
add
add
jb
push
mov
mov
rclb
add
in
sub
dec
add
bound
xchg
pop
add
xor
call
shr
lahf
popa
add
jne
xchg
jns
in
rorb
popa
pop
mov
jl
push
add
add
hlt
dec
sbb
adc
and
cld
iret
sub
jle
stc
xchg
dec
or
lea
aas
imul
add
shr
sbb
jecxz
jle
cmp
or
add
push
add
push
add
adc
dec
add
add
add
lahf
ss
ljmp
push
add
add
rcll
push
add
pop
call
mov
push
sub
and
jo
mov
add
insl
mov
enter
loopne
dec
add
insl
cmpsb
addb
notl
add
jp
ret
dec
outsb
add
scas
cltd
aad
xchg
add
loope
scas
ret
mov
ret
add
stos
lods
mov
jmp
mov
or
repnz
js
ficoml
out
out
clc
ss
testl
sub
mov
add
lods
lods
bound
out
add
add
xchg
jge
stos
adc
mov
repnz
cmp
sbb
dec
in
aaa
scas
mull
jg
popa
inc
mov
add
add
cmpsl
xchg
add
daa
popa
cvttps2pi
jecxz
inc
add
add
add
or
inc
add
mov
repz
adc
and
and
dec
jle
popa
test
fstps
dec
add
icebp
test
and
popf
mov
push
add
jne
aad
add
xchg
sbbl
xchg
ret
mov
ljmp
mov
inc
add
add
enter
add
cld
jo
imul
cmp
not
ja
add
xchg
dec
add
inc
add
jp
add
xchg
je
repnz
add
cmpsl
sub
add
add
pushf
push
add
or
pop
int3
shr
shrl
popa
or
mull
inc
add
add
mov
out
adc
in
shl
imul
sahf
xchg
sbb
fidivs
mov
xchg
sub
add
lcall
or
ja
dec
add
aad
divps
ret
mulb
pop
mov
enter
add
add
hlt
loop
add
cmp
aas
cmp
mov
in
mov
and
inc
add
dec
or
mov
cmp
add
add
std
js
test
arpl
test
add
cmp
mov
add
pop
xchg
mov
aad
ljmp
add
add
add
add
int
clc
adc
add
add
add
add
inc
add
and
mov
pop
les
add
jnp
add
les
xor
stos
movsl
stc
stc
mov
or
add
mov
add
jg
insb
add
or
iret
sbb
and
add
imul
decb
cmpsl
cmp
clc
std
cld
xchg
jmp
cmp
fbstp
int
and
xlat
push
movsb
lahf
inc
mov
adc
out
int3
jo
lret
add
add
scas
in
lret
add
aad
add
jbe
jecxz
lret
in
repz
jmp
shrb
add
sub
mov
add
or
jl
pop
add
int3
pushf
xor
ja
add
sahf
mov
rcrl
shrb
in
add
adc
test
add
movsb
push
shrb
xchg
hlt
jne
sbbb
add
add
inc
add
test
add
xor
ja
add
inc
add
outsb
add
dec
into
push
add
mov
add
cmp
add
sahf
or
adc
cmpsl
jbe
fwait
aas
cmp
add
add
add
add
add
aaa
dec
xor
and
sub
lds
mov
std
int3
jb
fdivl
add
lds
ficompl
stc
xor
mov
add
movb
mov
jo
adc
lcall
imul
inc
ljmp
push
add
lods
lcall
negb
push
add
aam
add
cmp
dec
add
cwtl
cwtl
mull
stc
test
add
xchg
sbb
arpl
out
add
add
add
add
xchg
divl
add
xor
push
add
add
bound
mov
add
jl
das
ror
or
add
jbe
or
cmpsb
loopne
add
rcrl
add
xor
xor
cmp
in
mov
loope
add
std
mov
add
repz
and
nop
inc
add
cmp
cmp
movsb
data16
add
bound
andl
ds
or
mov
add
data16
in
add
addr16
adc
push
add
mov
xchg
or
add
jne
cs
lock
xchg
sarb
push
add
sbb
xor
add
xor
add
add
jns
movsb
loopne
jp
stc
ficomps
add
jle
cmp
mov
xchg
cmpsl
sbb
std
jb
add
xchg
jmp
or
add
scas
pop
push
inc
add
pop
sub
jo
mov
push
popf
xlat
and
jge
mov
lret
pop
repz
and
js
movsl
cs
jae
and
jnp
add
add
and
add
add
xchg
int
add
add
add
add
scas
or
and
add
push
add
and
add
add
cmp
cmc
push
mov
and
pop
das
les
nop
cmp
pop
pop
scas
sbb
add
add
test
add
and
aas
repz
add
dec
add
mov
add
imul
and
out
add
add
xlat
push
pusha
add
add
add
mov
jge
cmpsl
inc
add
or
jl
hlt
jbe
test
leave
sti
xor
mov
push
pushf
repz
add
das
lods
cmpsl
xor
fmulp
add
add
sub
subb
setg
dec
add
add
fisubl
fsubrs
add
add
add
imul
add
add
dec
nop
fsubrl
fwait
push
testb
jg
mov
daa
add
int3
and
cmp
add
add
add
add
int
add
xchg
mov
sbb
pop
add
pop
xchg
inc
add
push
add
arpl
test
add
and
or
aas
inc
add
cmpb
outsl
cmp
icebp
inc
lea
adcb
sub
lods
xchg
rcrb
push
add
rcll
pop
mov
add
fistpll
rcrb
fwait
cld
je
int
cli
xchg
out
add
jle
or
daa
add
mov
shll
add
outsb
add
mov
add
add
ljmp
push
addr16
cmp
pop
add
lcall
arpl
xchg
mov
or
push
add
add
add
enter
xchg
addr16
idivb
add
add
test
test
lea
andl
adc
mov
sarl
scas
mov
in
scas
sub
xor
xchg
add
mov
and
lret
add
xchg
data16
rcr
test
mov
dec
fists
add
out
aas
data16
mov
add
or
add
add
xor
ja
add
sahf
inc
add
imul
js
in
sub
sub
ja
inc
push
shll
add
cmpl
add
add
and
insl
cli
int3
cmp
mov
jmp
rcll
or
add
scas
jbe
shrb
ss
ret
xchg
inc
fwait
mov
cmpsb
cmp
mov
inc
pop
pop
and
xchg
lcall
call
cwtl
sarl
mov
cmpsb
stos
cs
adc
pop
mov
add
add
dec
add
ficoms
add
add
sysenter
add
add
jp
fcom
jmp
or
lods
xchg
pop
dec
add
dec
add
add
add
xor
xchg
and
push
add
lret
push
add
add
dec
jae
xor
pop
and
cwtl
inc
lods
stc
or
add
les
or
dec
add
xchg
add
add
and
mov
in
fisubl
add
adc
ret
aas
xor
add
sti
dec
out
int3
xor
adcl
add
pop
cld
shll
cmp
add
or
pop
adc
adc
add
dec
dec
add
ljmp
jmp
cld
in
mov
loope
shll
fmuls
lret
scas
add
add
sti
inc
repz
lock
inc
inc
mov
fcomp
popa
inc
mov
add
cmp
push
fwait
ljmp
push
add
inc
push
add
in
ret
test
mov
add
icebp
rorl
xor
in
out
add
sahf
dec
cmpsl
test
add
add
idivb
icebp
sub
insl
ljmp
das
push
add
addl
xchg
dec
andl
iret
jne
bound
cmp
adc
xchg
ja
sub
add
dec
loope
add
jae
push
add
filds
adc
ljmp
add
xchg
sub
xchg
icebp
xorb
add
add
stos
jne
jbe
xchg
add
xchg
xchg
fsqrt
imul
cmp
sbb
in
mov
cwtl
dec
add
mov
add
adc
pop
add
inc
add
call
mov
std
sbb
add
push
cli
dec
add
add
shl
and
repnz
pop
add
imul
sahf
add
les
add
pop
xchg
insl
pop
pop
shll
add
fcomi
pop
add
push
sti
xchg
and
lret
leave
dec
pusha
add
dec
jmp
xor
mov
or
mov
jno
add
sti
or
mov
add
mov
xchg
jne
add
push
std
repnz
adcl
add
sub
or
xor
daa
xlat
add
add
cltd
xor
ret
mov
add
ljmp
nop
xchg
add
cmpsl
ljmp
sbb
sbb
cmp
popa
rol
push
mov
inc
push
add
add
pop
shrl
xchg
xchg
sub
add
in
add
mov
add
add
xorb
daa
out
jae
add
add
mov
or
add
add
mov
out
mov
sbb
add
inc
icebp
lret
add
movsb
addb
or
std
and
mov
mov
mov
add
imul
xlat
cmovo
fistpll
dec
add
push
xor
add
movb
pop
jge
dec
call
fiadds
add
jp
adc
pop
mov
loop
jge
add
insb
add
inc
add
add
fst
jp
fcoms
mov
std
cmpsb
cli
jg
add
xor
jmp
sub
out
add
dec
add
add
inc
mov
or
xor
add
das
lahf
ficomps
repz
repz
loop
mov
std
jns
add
or
shlb
add
push
mov
out
leave
movsb
mov
lods
or
and
sar
rcll
add
add
push
add
push
dec
cmp
xchg
push
add
push
adc
sub
and
xchg
ret
dec
cmp
sub
xlat
scas
xorl
sub
cli
cmp
in
in
js
add
xorl
stos
jne
jne
cmp
jbe
scas
pop
add
add
scas
or
add
dec
arpl
in
add
mov
add
xlat
data16
je
and
sub
add
sub
stos
popf
fwait
pusha
add
pop
add
add
idivl
add
js
popf
into
ret
lret
jg
mov
mov
add
pop
push
add
xor
add
dec
mov
aad
add
je
add
imul
pop
add
jge
inc
add
add
gs
add
jge
enter
add
in
jmp
lcall
add
pop
js
inc
lea
data16
iret
daa
repz
sti
fadds
cld
insb
add
cmc
cmp
add
pop
popf
outsb
add
enter
aas
add
lds
add
add
add
lods
loop
mov
shl
imulb
add
cmp
movsl
push
andl
adc
lods
lds
and
push
std
into
adc
sbb
in
add
add
lods
mov
jp
arpl
inc
xchg
je
xor
add
pop
add
push
cmp
add
mov
inc
add
scas
xchg
cmp
sbb
mov
aas
mov
add
mov
push
add
test
cmp
jne
inc
jno
bound
add
add
add
add
add
cmpsb
enter
popf
test
les
das
scas
xchg
xor
add
jge
add
add
aam
add
arpl
add
cmpsb
inc
add
push
add
loopne
lcall
stos
jmp
jns
fldt
jb
das
dec
add
add
shl
fistl
add
or
mov
les
sti
imulb
incl
dec
add
movsl
rcll
add
add
add
sbb
popa
mov
add
add
test
lds
add
add
mov
js
mov
imul
pop
add
add
add
xor
std
sub
push
add
sbb
inc
das
out
add
cmp
cwtl
xchg
jo
xorl
add
xchg
jbe
mov
add
and
test
fldcw
inc
xchg
rclb
lcall
sbb
pop
add
jo
mov
outsl
fldl
rclb
or
add
mov
mov
inc
data16
sub
add
or
cmp
mov
cwtl
mov
adc
sbb
sbbl
or
xorl
or
iret
sahf
sbb
xor
add
add
mov
mov
out
fiaddl
add
add
mov
add
add
lret
push
add
out
mov
xor
mov
adcb
add
out
and
lcall
cmp
sbb
mov
add
pop
sub
out
cmp
pop
mov
lahf
pop
pop
das
leave
or
add
add
adc
sub
inc
adc
lods
sbb
add
mov
cwtl
adc
add
add
sbb
and
imul
cmp
add
pop
mov
scas
mov
pop
scas
lret
lcall
xor
add
xor
add
cwtl
jecxz
xor
add
cmp
push
add
xchg
mov
test
xchg
mov
add
test
cmp
mov
add
sbb
hlt
and
data16
adc
sar
outsb
add
js
sbb
add
add
add
mov
add
cmc
je
xchg
and
push
add
sti
das
jb
arpl
mov
xchg
inc
add
xchg
pop
push
lock
cmc
in
xor
add
leave
push
cmpsl
lock
pop
ret
jnp
add
aad
enter
daa
xchg
add
imul
sub
outsb
add
imul
fstps
push
add
add
fstps
cltd
mov
add
sti
xchg
out
test
add
cmpsb
inc
mov
nop
push
add
fadds
pop
add
add
sbb
sbb
mov
adc
inc
mov
or
imul
pusha
add
add
add
add
push
jge
leave
icebp
mov
mov
mov
into
push
out
out
xor
out
movsb
pop
movsl
mov
adc
mov
xchg
or
xor
repz
in
mov
mov
lret
sahf
lret
jle
test
add
cmp
pop
add
add
sbb
push
add
add
inc
add
sbb
and
add
insb
add
mov
outsl
imull
add
in
xor
jge
and
sub
sti
add
lcall
loop
div
adc
jno
pop
les
cmp
out
aad
pop
jbe
mov
pop
shll
sub
adc
sahf
push
add
lret
les
adc
idiv
jno
out
mov
int3
dec
add
inc
sub
gs
lahf
mov
push
add
add
mov
add
imul
jmp
cmovnp
jo
fistpll
ret
sub
test
mov
add
add
sbb
nop
int3
cmc
mov
lods
test
pop
add
sub
add
and
cmpsb
sbb
add
sub
push
add
scas
cltd
jmp
outsl
jmp
add
add
adc
cmpsb
mov
lock
or
jno
push
add
add
int
xchg
xchg
gs
dec
jg
push
add
adc
dec
add
es
jmp
imul
aas
pop
add
jge
add
clc
inc
add
and
repz
mov
cli
xor
test
push
inc
add
rcll
adc
out
add
inc
add
cmpsl
mov
add
add
add
shrl
add
mov
push
add
add
lods
mov
fcmovnu
jmp
lret
scas
xor
lock
add
sbb
std
fld
xchg
push
fldl
add
rcr
insl
enter
dec
mov
add
mov
add
add
mov
leave
push
add
push
scas
push
sti
or
test
lcall
into
fcmovb
add
fcomp
mov
push
add
mov
sub
lcall
lcall
adc
xor
pusha
add
sbb
add
rorb
mov
pop
or
jns
sub
push
add
mov
pop
enter
add
ja
movsl
insl
xchg
sbb
push
add
add
js
dec
add
add
hlt
fstps
mov
add
bound
xchg
pushf
jbe
jbe
adc
add
push
fsubr
jecxz
xlat
sub
and
mov
xchg
inc
movsb
xchg
sbb
das
hlt
mov
test
fnstenv
lea
add
jg
add
cmp
popa
aad
add
cmc
stos
jae
or
mov
lret
aas
fisubl
add
rclb
loopne
mov
sti
dec
add
inc
shrl
inc
add
add
cmp
pop
adc
gs
mov
xchg
add
add
out
nop
fdivs
add
jae
jb
hlt
loop
fsubrs
clc
push
fdivl
iret
or
add
imul
sbb
imulb
lret
sti
fcompl
cmpsl
jmp
testl
int
add
add
sub
jge
add
pop
shlb
add
add
sahf
xor
xchg
push
add
inc
out
dec
add
icebp
aas
sub
add
into
and
in
xchg
pop
sbb
add
add
add
add
out
mov
ja
loope
add
push
loope
add
mov
push
add
sub
or
inc
add
aad
aad
mov
bnd
mov
fidivl
int
or
mov
and
out
out
adc
jno
arpl
add
add
sub
xor
jno
dec
add
scas
pop
outsl
js
add
add
add
repz
mov
push
and
sub
or
add
scas
mov
sbb
cmpsb
push
bound
inc
xor
mov
out
add
jge
shl
mov
sub
loopne
add
fwait
sbb
xlat
rcll
add
add
lret
adc
roll
fbld
out
bound
loopne
and
dec
icebp
adc
jg
shlb
addr16
cld
push
add
add
add
in
add
push
mov
add
xchg
arpl
add
sub
and
fs
inc
dec
or
inc
add
push
add
cltd
in
and
mov
xor
stos
out
mov
add
adc
testb
cli
sar
cmp
cld
add
orl
insl
jbe
dec
add
jl
xor
pop
aam
data16
aam
sbbb
adc
ret
add
sub
aad
sbb
push
pop
jle
mov
add
cmp
cld
mov
jbe
sub
outsl
or
imul
push
add
and
aas
pop
iret
idiv
es
bound
mov
inc
add
add
add
adcl
daa
aaa
push
add
insl
inc
mov
fistps
sub
jge
jns
lahf
mov
add
pushf
cmp
xchg
sbb
sbb
scas
insb
add
lahf
insl
pop
add
fwait
mov
jae
add
add
adc
fstps
xor
jg
addb
pop
mov
add
leave
lahf
adc
xor
sarb
add
adc
jno
add
push
enter
ds
push
shll
popa
mov
dec
add
jecxz
or
adc
daa
lods
jns
loope
add
loop
add
hlt
xchg
add
bound
repnz
add
std
lret
sub
push
add
jmp
xlat
shrb
push
add
std
test
std
popf
inc
fwait
imul
push
inc
push
xor
popa
es
call
dec
push
pushf
pop
add
cmp
stos
pushl
add
sub
jae
add
adc
aad
push
shll
add
repz
cmp
xor
stos
cld
jns
fadd
psubd
jmp
add
out
add
scas
ds
ds
loop
sub
nop
mov
shrb
push
mov
adc
push
or
psubusw
ret
add
out
mov
ds
pop
add
add
push
add
fmuls
add
or
or
dec
add
xchg
lret
jle
out
cltd
loopne
add
mov
pand
mov
cmpsb
pop
push
add
fwait
outsb
add
cmpsl
insl
xchg
sbb
push
add
pusha
add
add
pusha
add
pop
stc
into
inc
add
dec
add
add
add
pop
cmp
push
add
pop
lock
add
dec
and
add
leave
pcmpeqd
sarb
mov
sbb
popa
cmp
mov
shlb
add
repnz
pop
sti
test
cmp
push
mov
stos
dec
add
xor
add
ret
inc
add
icebp
inc
add
fstps
sahf
lock
mov
add
shl
lock
adc
dec
roll
xchg
roll
mov
adc
lds
nop
das
sub
inc
cld
cld
int3
inc
add
lds
add
pextrw
add
lahf
insl
cmp
push
out
dec
dec
add
inc
add
pushf
and
pop
push
add
add
rcll
add
push
add
add
add
mov
outsb
add
mov
xor
bound
gs
cltd
aaa
cmp
or
add
add
ret
test
lods
xchg
push
lock
and
mov
mov
inc
add
jp
lock
add
add
mov
add
iret
mov
adc
xchg
imul
push
add
test
inc
add
rolb
xchg
cmpsb
arpl
xchg
add
add
lds
xor
shlb
std
add
jns
jge
popa
sti
mov
push
add
das
pushf
pop
mov
add
add
scas
adc
movsl
xchg
push
add
xchg
out
scas
xadd
pop
inc
leave
sbb
ja
testl
loop
add
das
mov
add
mov
jbe
aas
aam
inc
mov
fsub
js
lret
scas
jle
ficomps
stos
mov
lods
jge
sbb
mov
cltd
mov
jbe
mov
dec
sbbb
xchg
add
add
or
xchg
pop
add
rcrl
add
insl
add
loopne
lds
add
mov
frstor
stos
gs
and
arpl
sbb
loopne
add
add
lock
popf
mov
stos
and
and
xor
add
push
jmp
add
or
xchg
stc
mov
add
push
add
outsb
add
scas
pop
add
add
push
add
sub
imul
add
add
mov
xorb
mov
add
mov
popf
aas
or
cld
pop
out
add
add
add
andl
scas
out
jg
mov
push
push
pop
js
xor
push
out
xor
and
mov
enter
flds
add
add
xor
js
push
xchg
add
jo
outsb
add
sbb
xor
add
testl
repz
inc
add
pop
add
add
dec
js
mov
cmpsb
in
dec
negl
push
add
ret
add
test
loop
add
pextrw
jnp
cmp
bound
dec
add
and
dec
std
shrl
add
lret
idivb
cmpsb
dec
add
add
add
lahf
mov
pop
add
enter
push
fisubs
lret
decb
push
add
xlat
mov
pusha
add
aad
add
add
adcb
add
add
add
push
add
mov
sbb
xchg
in
dec
add
add
aaa
dec
add
cwtl
xchg
fsubrs
fidivrl
test
or
sub
test
shr
divl
addr16
mov
cmp
sbb
arpl
jle
xchg
jne
add
add
sbb
dec
cld
sub
sub
push
jmp
pop
add
dec
out
jns
dec
add
aad
shlb
jp
test
push
add
add
add
int3
sbb
test
sbb
fisubs
mov
or
add
mov
mov
add
add
rolb
nop
pop
add
xor
push
dec
mov
cmpsl
pop
inc
sbb
xlat
cmpsb
movsb
jo
inc
ljmp
pop
add
add
add
test
loope
add
imul
pushf
cmpsb
lahf
push
add
insl
sti
xlat
xchg
or
or
cmpsb
mov
cmp
data16
pushf
pusha
add
pushf
and
ljmp
add
cwtl
add
add
or
add
dec
outsl
or
ret
xchg
insb
add
sbb
xor
test
mov
push
add
mov
movsb
fmull
repz
negb
add
add
mov
leave
sbb
in
sbb
stos
ret
out
repnz
ja
add
cmp
add
inc
add
rol
and
mov
add
movlps
cmp
mov
mov
add
or
inc
outsb
add
loop
add
in
cltd
inc
pop
cli
or
lret
dec
add
cltd
scas
mov
outsl
mov
and
adc
fwait
xchg
and
mov
add
ret
outsb
add
loope
add
dec
add
lahf
jne
stc
push
push
add
mov
lret
bnd
mov
add
lock
or
xchg
xor
jno
stc
adcb
push
add
cltd
movsb
jne
aaa
cltd
or
hlt
or
jb
fidivs
mov
xorb
in
lahf
aaa
inc
add
cmp
daa
inc
add
loop
cmc
in
add
bound
mov
out
and
cmp
add
rorl
in
test
mov
mov
sbb
fsubrs
xchg
fisubs
add
add
add
adc
aaa
mov
dec
add
mov
ss
inc
dec
dec
add
std
fldcw
mov
add
add
sub
mov
push
add
es
ljmp
stc
sub
ret
sbb
xchg
xchg
rcrb
mov
add
adc
inc
add
inc
inc
jmp
pushf
xchg
pushf
rcrl
flds
int3
and
xor
add
push
add
test
xor
leave
mov
mov
xor
sahf
pop
add
ja
lods
and
add
xor
cmp
shll
add
add
dec
add
xlat
addr16
scas
in
adc
push
cmc
rcrl
adc
loope
je
xchg
adc
add
loop
mov
add
mov
add
xchg
call
mov
add
imul
out
inc
add
or
add
add
push
add
icebp
das
or
add
jle
aad
cli
add
mov
cmp
sbb
loop
movsl
xor
rcr
sti
rorl
push
aas
ljmp
mov
adc
mov
fcomip
inc
pop
add
add
int3
mov
add
mov
sub
add
lods
jnp
data16
pop
in
pop
pop
add
dec
popa
das
jae
ret
out
xor
sti
xor
push
push
add
adc
bound
clc
jl
mov
sti
loopne
call
pop
xchg
dec
add
sub
inc
imul
imul
sbb
add
mov
lret
mov
inc
or
mov
or
data16
inc
add
add
add
add
add
or
mov
mov
mov
and
sub
fimull
push
add
add
popf
or
inc
add
sub
dec
add
aam
shrl
popa
mov
repz
add
xchg
add
mov
aas
enter
sbb
outsl
loop
call
cmp
test
add
jp
outsb
add
add
into
test
ret
in
add
add
xchg
add
bound
xor
pop
add
xor
xchg
jle
movsb
daa
test
add
add
add
dec
stc
jbe
in
faddp
jne
xor
add
movsb
stc
ja
jns
lock
mov
add
popa
lods
into
nop
mov
add
pop
inc
sbb
movl
call
sub
add
jmp
mov
add
pusha
add
pop
cmp
xchg
sti
mov
ja
dec
xor
or
jl
pop
mov
pop
add
push
add
pop
add
add
lock
mov
sbb
sub
imul
scas
mov
adc
push
add
sarl
add
jbe
cmpsb
hlt
je
cltd
ljmp
add
push
sbb
dec
or
sbb
mov
frstor
jmp
lcall
add
fbstp
add
add
movsb
pop
add
add
add
sbb
jb
inc
add
add
les
hlt
dec
add
lods
mov
aam
dec
add
movsb
stos
jecxz
mov
iret
push
and
ret
mov
cltd
test
pop
add
dec
pop
add
add
stos
outsl
data16
sbbb
add
jno
add
add
sub
mov
ja
ffreep
std
mov
daa
clc
addr16
dec
in
add
aam
outsb
add
add
xor
ret
icebp
xchg
fisttpl
add
pop
std
addr16
mov
dec
mov
leave
popa
roll
add
ljmp
add
jecxz
sub
push
add
loopne
push
jl
mov
test
fldt
add
add
bound
cmpsb
fbld
xchg
xor
cmpl
bound
fcomps
pop
add
sub
stos
mov
repz
dec
divl
out
ret
xor
dec
add
sbbb
leave
mov
add
add
sub
add
mov
add
lds
add
mov
test
mov
fwait
xor
add
add
adc
outsb
add
ret
add
in
add
call
push
scas
mov
add
add
roll
rcr
imul
add
and
push
add
jp
pop
jmp
and
pop
ja
and
das
jg
xlat
or
cmp
jmp
jmp
popf
imul
leave
mov
add
je
aas
sarb
iret
sbb
aam
repnz
add
add
nop
into
pop
add
add
loop
ret
cmpsl
loop
sbb
int3
xor
fs
dec
dec
add
adc
mov
stos
pop
sbb
add
sbb
lods
stos
jmp
add
add
add
loopne
pusha
add
add
fnsave
jmp
add
ljmp
movsl
mov
adc
imul
cmpb
mov
lea
pop
lret
push
add
aad
mov
cmpsl
mov
push
add
sar
add
test
mov
insb
add
ss
mov
add
ret
add
pushf
or
lcall
lock
pop
xor
nop
push
lock
insb
add
jnp
inc
add
add
add
dec
add
inc
add
lret
and
add
xlat
mov
pop
add
imul
mov
cmp
add
add
imul
add
pop
add
dec
adc
add
out
popf
xchg
fnsave
sub
sbb
pop
add
clc
lods
int3
popf
cmp
in
adc
sti
das
out
cmpsl
mov
inc
add
add
bound
add
add
add
arpl
jo
daa
cli
sub
pop
fstl
cmp
mov
push
add
add
test
lock
repz
add
pop
add
loop
add
push
testl
lahf
add
pop
push
add
sar
dec
add
pushf
aad
add
addr16
cmpsb
mov
xchg
out
popa
popf
bound
sbbl
add
xchg
sbbb
lock
into
lds
cltd
add
add
mov
add
push
out
xchg
mov
cmpsb
sub
xchg
sub
pop
rcll
in
add
cmp
add
add
xchg
add
inc
mov
add
add
push
add
sahf
push
xlat
adc
mov
fcmovnu
mov
mov
add
int
add
or
in
add
add
mov
int3
mov
mov
pop
dec
sahf
scas
xor
mov
add
and
add
pop
add
add
shlb
add
int3
pop
dec
xchg
jecxz
xor
sarb
add
adc
in
enter
add
sub
jmp
xor
or
sub
jp
sbb
add
and
lea
popf
mov
add
adc
sub
icebp
lahf
jns
or
add
pop
clc
int3
inc
add
das
insl
and
jge
add
stos
enter
lret
inc
add
add
sbb
sbbl
dec
ret
loop
mov
cmp
push
add
or
popf
aas
push
add
mov
jae
mov
lock
sbb
dec
sbb
mov
add
rol
mov
ja
mov
vmovss
mov
out
add
pop
add
ja
insb
add
add
add
test
jge
test
sbb
pushf
xor
popf
loop
pop
insb
add
scas
pusha
add
add
sub
cmp
aad
sbb
mov
cmp
incl
cltd
or
or
xlat
imul
add
add
mov
add
jns
add
add
sbb
das
cmpsl
push
movsb
jo
mov
jmp
inc
add
rcrb
fwait
xor
jle
sahf
andb
add
cmc
test
add
jge
sbb
scas
aam
add
add
adc
dec
add
lcall
and
add
add
mov
mov
push
add
add
add
add
repz
add
in
add
ljmp
cmp
in
stos
sub
push
add
daa
sbb
outsb
add
add
std
xor
cltd
adc
add
or
mov
add
add
add
pop
add
insb
add
lock
sub
add
adc
add
jg
loopne
add
xchg
pusha
add
add
mov
add
push
add
ja
bound
jo
add
push
add
repnz
mov
mov
adc
int3
pop
add
in
aaa
pop
jae
call
repz
test
shll
jns
decl
dec
add
push
add
or
push
add
jnp
jne
ss
dec
inc
xchg
add
pop
add
adcb
push
jno
add
add
shlb
arpl
dec
push
fsubrl
add
or
aam
add
pushl
pop
add
imul
jb
or
sub
outsb
add
adc
xor
mov
fbld
add
sub
mov
jmp
and
gs
mov
add
bound
lcall
mov
mov
lahf
into
xor
test
pop
add
mov
push
add
xchg
lret
clc
xor
mov
sbb
das
imul
cmc
jg
or
pushf
jge
adc
cwtl
lock
popa
add
nop
movsb
outsl
pop
cmpsb
arpl
add
add
or
cmpsl
test
lds
push
add
cs
inc
add
das
sahf
xchg
jle
shlb
and
jbe
and
idivl
add
add
adc
sbb
xchg
add
add
push
add
inc
and
add
push
add
add
sbb
xchg
push
add
movsb
iret
cli
fwait
inc
add
pop
add
lret
mov
inc
push
lods
sbb
mov
mov
or
add
in
mov
inc
add
popf
inc
xchg
dec
add
repz
xchg
in
pop
fcmovbe
push
add
nop
test
push
sub
add
loope
push
add
inc
add
jmp
or
repnz
jg
sbb
insb
add
push
movsl
sub
pop
sbb
add
arpl
add
add
sbb
jbe
jb
add
add
xor
insl
push
lcall
add
add
add
sti
add
ret
in
pop
add
mov
repz
cmp
mov
inc
sub
cmpsl
mov
or
inc
cwtl
jl
lret
jmp
jle
pop
sbb
dec
int3
rclb
add
scas
lret
add
mov
jmp
xchg
pushf
inc
fwait
push
add
and
je
jl
dec
add
sbb
mov
ror
or
sbb
mov
xchg
fwait
jo
dec
add
sarl
sub
xlat
std
or
cmp
fcmove
mov
loop
add
clc
clc
fisubrs
aam
xchg
addr16
cli
int3
je
add
sahf
pop
daa
sub
mov
imul
add
jns
js
push
add
pop
add
ficomps
add
xchg
out
call
xchg
add
rcrb
add
pop
dec
add
cmp
cmpsb
clc
sarl
stos
pop
adcb
add
pop
add
add
jno
lret
lahf
dec
add
push
add
cwtl
hlt
pushf
sbb
ds
loopne
or
js
cmpsl
push
lcall
mov
add
gs
hlt
mov
add
sbb
lea
add
inc
add
bound
push
fidivs
movsl
xchg
push
inc
add
cwtl
icebp
sub
int
sub
push
add
repz
fisubrs
repnz
mov
jmp
cmc
out
scas
out
jle
mov
mov
add
pusha
add
push
add
scas
pop
cmpsb
mov
dec
cmc
sub
in
or
dec
xchg
xchg
jg
add
dec
add
loop
add
lcall
fmuls
inc
xchg
shl
mov
xor
or
icebp
push
add
fwait
xchg
fldcw
add
add
lock
incb
add
xchg
sbb
jo
xor
sbb
add
add
add
mov
add
lret
jae
add
aaa
mov
jge
stc
orl
inc
pop
jg
inc
mov
add
add
sub
ss
sbb
xor
push
int3
jecxz
dec
movb
add
inc
sbb
cmp
inc
add
shrl
shlb
pushf
dec
add
add
or
add
sti
ror
xchg
leave
insb
add
or
mov
add
dec
add
aam
add
xchg
adc
or
mov
add
outsb
add
cmp
andb
cmp
add
mov
data16
sti
into
dec
add
sub
push
xchg
gs
decl
add
add
cmp
pop
lods
insb
add
add
push
add
pop
ret
mov
sub
mov
xchg
sub
adc
clc
stos
jmp
add
jbe
mov
mov
mov
repz
fdivrs
push
push
repz
sbb
jle
add
add
inc
adc
jmp
pop
xor
jp
leave
pop
add
shl
add
loopne
sub
mov
push
and
and
hlt
stos
shrl
je
add
add
add
jns
inc
outsl
sbb
add
add
div
adc
add
cmp
pop
int3
loopne
add
subb
mov
jle
inc
xchg
popf
adc
add
add
add
arpl
out
xchg
stos
inc
cmp
std
enter
cmp
movsb
add
add
sbb
add
add
sub
scas
inc
xor
or
sbb
inc
add
int3
jbe
aad
pop
add
add
xor
adc
leave
jne
push
jo
lret
pop
lahf
data16
fcom
clc
ret
sbb
add
add
testl
add
jge
jl
dec
aas
mov
add
sbb
add
adc
pop
add
and
jle
mov
add
fistps
pop
rcrb
shrl
add
jge
mov
scas
int3
cmc
xchg
icebp
fcos
inc
jno
add
xchg
jae
add
mov
add
add
adc
lea
add
mov
dec
adc
cli
int3
and
enter
shl
add
les
add
insb
add
popf
lret
scas
dec
add
adc
mov
or
cld
inc
add
add
stos
pusha
add
adc
add
push
mov
ja
and
idiv
xlat
add
add
cmp
dec
inc
test
add
xor
ja
aad
nop
push
add
add
xor
lods
in
daa
in
stc
add
pushf
mov
add
daa
test
cwtl
insl
xlat
int
scas
jecxz
add
movsl
je
add
cwtl
hlt
loopne
sbb
pop
movsl
xchg
add
add
imulb
mov
push
add
test
mov
js
cmp
pop
inc
add
cmp
in
cmp
push
add
rclb
sarl
into
pop
rcl
mov
mov
pop
add
jbe
mov
add
pop
add
test
adc
or
aam
out
pop
add
add
sbb
movsb
daa
pop
mov
mov
cmp
cmp
lods
cmp
test
mov
add
add
sbb
and
add
jmp
add
xchg
push
add
insl
icebp
cli
fdivrl
test
hlt
insb
add
arpl
rcrl
add
or
push
pusha
add
pop
fstpl
mov
add
aas
leave
jnp
xchg
add
mov
ljmp
xchg
mov
imul
mov
movsb
cmp
into
dec
inc
add
push
sub
adc
add
out
fimull
add
add
add
jp
out
fldt
push
or
jl
mov
addr16
inc
movsl
into
jbe
leave
mov
sbb
out
dec
add
aas
lods
icebp
jno
clc
push
outsl
xor
or
xchg
pop
add
aad
aas
inc
add
add
add
add
and
or
add
flds
add
xor
rcrb
std
pop
add
aaa
aaa
or
outsb
add
mov
jae
xchg
cmp
lret
mov
enter
cli
sahf
nop
in
je
jl
dec
mov
push
add
arpl
aaa
fwait
aad
unpcklps
cmpsb
leave
shr
mov
mov
add
add
mov
sbb
or
mov
add
add
dec
add
mov
rolb
add
insl
inc
xor
inc
add
rolb
add
test
cli
rcrb
sub
xchg
or
mov
add
xchg
pop
add
add
add
add
pop
cmp
mov
cmp
inc
add
add
jmp
inc
dec
add
sbb
adc
mov
add
inc
jns
aam
cmp
movsl
sbb
add
push
add
sbb
stos
cmc
push
add
add
xchg
and
inc
ja
pop
jae
out
mov
add
add
imul
scas
mov
sbb
mov
scas
pushf
lds
dec
pusha
add
bnd
add
add
fsub
addr16
sub
jbe
mov
inc
jl
pop
add
mov
push
lea
adc
add
jg
pushf
pop
mov
or
push
add
repz
push
add
mov
ja
add
add
loope
incb
inc
mov
add
fsubrs
jl
inc
add
cwtl
mov
adc
fdivp
fnsave
add
mov
add
iret
out
jbe
sub
lods
shll
add
cmp
adc
xor
orl
jae
jne
push
ljmp
add
xor
loopne
cmc
jg
fistl
jo
xor
push
add
dec
add
sub
push
add
repnz
xor
pop
add
iret
lcall
cmp
ffreep
or
mov
add
call
add
lds
dec
pop
movsb
fimuls
outsb
add
add
pop
jb
in
or
xchg
mov
or
add
pop
lahf
std
add
cmpsl
jae
add
rcrb
xor
cmp
jge
cwtl
ja
push
add
add
add
aas
pop
add
dec
adc
insb
add
stos
ret
and
nop
sti
xor
pushf
mov
fwait
jg
push
add
adc
pushf
ljmp
add
push
mov
jae
pop
nopl
xchg
iret
fcoms
inc
add
ror
std
fwait
jecxz
and
adcb
fs
cltd
testl
rcrl
fbld
cmp
xor
add
cmc
icebp
cwtl
test
jg
rcr
inc
sarb
int3
adc
cmp
sbb
sub
nop
and
ljmp
add
into
sti
lock
add
add
add
and
pop
add
sub
cli
sarl
lahf
lds
add
sbb
add
adc
repz
mov
sbb
mov
std
sahf
ds
shrl
int3
outsl
loop
iret
lock
ret
sbb
lea
sub
dec
add
mov
add
xchg
add
mov
add
xor
test
aad
add
xor
push
add
xchg
add
gs
push
sahf
sbb
or
inc
add
add
stc
popf
add
aam
and
popa
xor
add
add
mov
adc
aad
inc
or
push
and
jo
mov
lods
insl
movsb
in
je
bound
push
repz
add
add
iret
pop
add
cmp
add
movsb
mov
xor
add
inc
js
xor
sub
repnz
add
lods
sub
adc
add
in
add
mov
cli
mov
add
lret
xchg
into
int
jns
aad
xchg
pop
add
in
mov
adc
pop
cmp
add
lret
jl
popa
jo
sbb
sub
pop
sub
pop
add
mov
lods
cmc
xor
adc
jno
sti
stos
push
pop
inc
add
lret
out
xchg
dec
jmp
subl
mov
in
imulb
mov
add
pop
mov
xchg
add
ret
add
lea
push
add
cwtl
push
add
add
gs
stos
sbb
jl
in
push
add
inc
add
ret
mov
cwtl
bound
fcom
jbe
mov
pop
mov
cmpsb
cmp
mov
inc
mov
add
add
jmp
add
push
add
sbb
cmp
dec
pop
mulb
add
add
xchg
lods
or
and
rclb
mov
sarl
add
dec
add
add
jnp
add
add
stos
repnz
hlt
or
add
add
mov
jo
pop
in
push
insl
fildl
rorb
push
rcrb
adc
lret
sub
inc
cmp
sahf
in
pushf
fidivrl
jmp
leave
scas
fs
mov
ret
ret
fsubr
mov
add
push
dec
lods
mov
sub
cmp
cmp
add
movsb
add
lods
pop
add
pop
lahf
and
cmp
fwait
loopne
stos
or
adc
pushf
pushf
adc
mov
add
add
stos
and
jns
mov
jnp
mov
pop
add
insl
jp
and
jg
aas
mov
add
xor
and
in
push
add
add
ficoms
xchg
mov
andl
add
bound
pop
and
jno
movb
add
into
sub
xor
adc
mov
stc
stos
jl
dec
mov
testb
jno
cmpsb
jge
add
add
sbb
lea
jne
lcall
sub
add
mov
cmp
lahf
xor
add
int
adc
pop
test
sbbb
dec
add
sbb
add
fs
pop
add
cmp
adc
pop
add
mov
jbe
dec
pop
add
add
leave
mov
add
cld
lds
repnz
daa
jmp
mov
sub
fidivrl
lea
add
insl
insl
mov
mov
xchg
mov
add
adc
test
and
mov
ja
inc
ret
mov
ror
push
cmpsb
xchg
rcr
aaa
dec
mov
add
push
adc
add
fxch
push
hlt
or
int
jecxz
int3
pop
add
into
insb
add
jb
inc
shl
leave
adc
mov
mov
add
mov
cli
movsl
adc
add
mov
rorb
test
xorb
mov
adc
pop
out
xorl
test
add
add
mov
jnp
add
cmp
cmp
in
mov
insl
lds
add
sbb
into
jae
and
mov
pop
add
add
jo
outsl
lea
cmp
lahf
pop
add
cmp
add
add
adc
add
lods
adc
or
sahf
in
adc
sti
add
rol
add
mov
cmpsb
rcrl
inc
add
xor
jne
rcll
xor
rcll
add
pop
adc
xor
mov
jno
mov
add
xchg
adc
add
mov
mov
sahf
push
xchg
das
sarl
mov
popf
pusha
add
jo
bound
add
add
add
dec
xor
add
xchg
and
aad
xor
add
add
popf
cltd
in
shr
fnsave
add
cmpsl
mov
subb
inc
add
adc
movsl
mov
add
lods
cmp
cli
loope
add
mov
pushf
out
add
and
insb
add
test
lods
pop
adc
jae
xchg
jns
sub
pop
add
or
or
mov
add
loopne
jno
test
adc
mov
test
xchg
xchg
lea
loopne
add
aad
add
daa
nop
push
add
push
add
ja
pop
cmp
or
jle
xlat
repz
loopne
jno
inc
jmp
pop
add
idiv
mov
jne
movsb
cmp
ret
xchg
push
add
sub
in
xor
outsl
repnz
add
std
lahf
pop
adcb
add
lods
mov
add
add
enter
testb
inc
add
mov
add
add
and
int3
xchg
mov
movsl
out
cwtl
or
mov
inc
add
xchg
js
push
mov
xor
outsl
jnp
jns
add
dec
sub
xchg
cmpsl
mov
inc
scas
pop
add
mov
loopne
mov
or
ja
inc
add
adc
jnp
pop
add
iret
inc
add
add
pop
loop
push
add
add
jmp
loope
add
add
sahf
adc
sarb
outsb
add
add
stos
int3
mov
sub
rorl
add
add
add
fistl
aam
jle
mov
js
sbb
popf
test
jnp
add
xchg
xor
lret
push
or
cmpsb
push
add
pop
aaa
and
add
add
nop
lea
inc
add
movsb
nop
movl
sub
sti
mov
add
add
loopne
push
add
push
add
sub
inc
add
adc
or
mov
inc
nop
push
push
add
jp
loop
add
aad
add
pop
cmc
and
cld
inc
add
add
add
in
imul
test
add
add
data16
rcrl
cmp
or
cmp
jmp
pop
add
cmpsb
repnz
insb
add
data16
pcmpeqb
add
add
jns
aas
rcrb
mov
add
add
popf
jmp
xor
movsb
inc
add
sti
iret
subl
into
mov
add
mov
inc
add
or
in
push
add
add
add
jl
sbb
and
loope
add
jecxz
add
adc
cli
pop
pop
add
add
popf
jecxz
xchg
cmc
or
adc
jno
add
ljmp
add
fcmovnbe
or
xchg
xor
test
inc
add
insl
push
dec
add
sbb
dec
add
jbe
mov
ret
add
pop
add
cmp
sub
addr16
mov
mov
mov
mov
inc
std
aaa
pushf
aaa
mov
add
rolb
jmp
add
scas
rolb
mov
add
dec
add
pop
add
add
add
nop
lods
mov
add
xor
enter
sub
xor
addb
in
xor
xor
mov
fwait
jg
cmpsl
jno
aas
jne
add
aad
add
mov
out
lcall
and
pop
add
add
fmull
sbb
jecxz
out
add
nop
cmpsl
inc
add
std
orps
dec
add
or
inc
add
dec
add
mov
jg
cltd
fildll
dec
add
mov
sti
push
or
aad
icebp
or
push
sbb
push
add
xlat
jecxz
inc
add
out
data16
xchg
movsl
arpl
add
jmp
rcrl
add
push
add
push
add
mov
add
mov
xchg
adc
xchg
or
pushl
and
popa
mov
xchg
mov
add
popa
lahf
test
push
add
pusha
add
int3
dec
jmp
ds
sub
add
add
sti
adc
jb
fs
mov
add
inc
out
das
mov
xlat
ljmp
sub
sbb
inc
add
xchg
push
hlt
dec
jae
add
test
add
sahf
ret
push
add
xor
push
add
sbb
cmpsb
inc
fldenv
add
popa
pop
sub
loopne
add
sbb
xor
push
and
scas
mov
adc
pop
add
iret
or
jg
add
add
jo
lods
fwait
std
mov
gs
leave
fcomps
gs
add
enter
pop
add
test
lret
or
xlat
in
ret
jle
enter
jae
dec
lods
out
mov
inc
add
adc
add
add
idivl
push
add
outsb
add
add
loopne
repnz
shrl
pop
pop
add
push
jp
jb
dec
add
fcmovbe
adc
add
mov
fistl
negl
les
repnz
sub
inc
add
jmp
add
insb
add
add
xchg
add
pop
dec
ret
inc
add
xchg
repnz
add
push
and
not
mov
add
add
mov
add
sub
sti
inc
mov
mov
lods
aaa
je
push
rcl
lods
arpl
mov
add
pop
add
sub
pop
add
shll
mov
xor
add
add
add
push
lea
add
inc
add
xor
push
adc
ljmp
jb
add
out
push
add
je
and
add
add
add
bound
mov
ficoms
cmp
movsb
insb
add
ljmp
xor
ret
jns
fdivrl
xor
add
dec
add
cld
mov
mov
push
xchg
subb
outsl
addr16
dec
add
push
add
mov
add
stos
mov
push
outsl
pop
mov
ljmp
push
mov
ret
xchg
enter
xor
sub
mov
in
sbb
add
add
push
sbb
pop
test
ds
inc
add
lret
and
add
sub
das
pop
add
add
add
cmp
mov
add
leave
push
add
jae
add
add
sbb
sbbl
sbb
test
adcl
adc
mov
add
je
hlt
sub
or
add
add
dec
inc
add
dec
jnp
mov
add
neg
sub
or
repz
xor
ja
sahf
jp
mov
or
pop
add
add
adc
sub
pop
cs
inc
add
jmp
xchg
out
add
loop
iret
scas
sub
xchg
int
dec
jno
imul
adc
add
add
add
sub
jle
add
jecxz
inc
add
mov
sub
outsl
insb
add
stos
mov
imul
add
outsl
das
mov
fwait
cmpsb
push
mov
jns
adc
fcompl
cmpsb
xchg
imul
adc
mov
dec
mov
cltd
adc
cmpsb
mov
add
mov
mov
add
push
add
lods
add
aam
add
out
xchg
dec
add
loope
add
mov
dec
scas
movsb
loopne
push
jg
add
add
add
add
cmc
xorl
mov
mov
add
add
fs
add
pop
xchg
aaa
mov
lock
dec
add
pop
add
add
pop
add
add
dec
mov
add
in
sub
daa
stos
push
inc
movsb
sti
adc
enter
outsl
or
or
inc
lods
push
add
mov
ljmp
xorl
in
add
ffreep
mov
mov
push
add
and
sbb
sahf
mov
lret
shll
or
lea
in
add
notl
pop
inc
das
mov
lods
pop
std
fmulp
dec
cmp
ljmp
hlt
adc
divl
shrl
cwtl
inc
add
or
or
push
mov
cld
ret
mov
cld
pop
jno
add
ret
add
push
add
add
xor
call
cmp
inc
add
sub
pushf
loope
add
leave
fdiv
enter
add
cmp
add
insl
inc
ret
pop
add
arpl
mov
aas
lods
shlb
lods
jp
cmp
loop
pushf
mov
btcl
mov
add
add
sbb
ljmp
add
add
push
add
push
lcall
xchg
sahf
outsb
add
jmp
out
repnz
test
popf
dec
pop
add
mov
xchg
lea
add
ds
out
dec
add
add
add
xor
and
push
add
rol
jns
lcall
stc
repnz
int
test
add
push
add
dec
add
adc
add
mov
add
sub
add
faddl
add
cmp
ss
imul
insb
add
add
add
inc
pushf
xor
addr16
out
loopew
sbb
fistpl
gs
ficomps
add
add
jp
cmp
or
out
mov
fcomps
sbb
shrl
pusha
add
add
mov
nop
mov
add
loopne
dec
inc
add
xchg
lea
xchg
and
hlt
out
jle
cmp
add
or
es
xchg
aaa
add
test
push
xchg
add
clc
enter
fsubr
push
ret
and
add
xor
shlb
addr16
adc
xchg
cmp
xchg
fcompl
adc
out
out
outsb
add
pop
das
rorb
xchg
sub
jne
inc
xor
inc
add
shll
cmpsb
ret
inc
add
pop
jns
inc
add
outsb
add
adc
test
xor
adc
or
dec
das
adc
add
sub
pushf
mov
add
add
pop
add
inc
mov
inc
add
add
repnz
js
mov
icebp
idivb
cli
and
mov
enter
add
loopne
xor
lret
shl
mov
push
add
loopne
rclb
add
jnp
add
out
add
add
iret
lahf
js
in
dec
add
lret
add
loop
add
add
add
adc
sarl
add
data16
nop
inc
add
mov
ss
mov
or
add
add
add
sti
fwait
cmpsl
add
add
sbb
mov
mov
pop
add
loope
add
jl
cmc
adc
mov
mov
popa
popf
imul
sub
mov
rol
dec
mov
dec
pop
cmpsb
sbb
mov
add
psubd
jo
xorb
add
add
push
add
dec
add
mov
add
mov
imul
and
pop
add
mov
sbb
mov
add
std
lds
add
add
add
inc
lods
cmp
loopne
xor
ja
add
cmp
pop
add
add
out
jo
xchg
ja
xor
jmp
rcrl
mov
in
les
add
add
mov
test
pop
add
pop
add
add
int
les
test
mov
mov
aad
xchg
fistps
mov
incb
add
dec
add
cmp
stc
mov
cmp
outsb
add
imul
jmp
push
add
jns
ret
ret
xchg
test
add
mov
add
aas
in
or
mov
call
ret
lahf
adc
add
loopne
add
add
mov
testl
jno
add
and
add
add
test
xchg
aas
jecxz
add
add
cmp
add
xor
std
lods
xchg
adc
clc
sarb
add
add
mov
inc
test
add
add
push
add
dec
add
mov
add
and
pop
add
js
xor
add
mov
xor
fisubrs
add
sub
add
lcall
add
sub
adc
call
add
add
add
mov
pusha
add
cli
mov
cmpsb
sub
adc
or
and
inc
add
repnz
dec
xchg
pushf
movsl
aas
cmpsb
test
mov
cld
icebp
fsubp
sub
sub
pushf
inc
add
imul
xchg
jg
add
xchg
jg
add
add
mov
mov
int3
jp
lret
jbe
inc
add
mov
dec
mov
pop
add
arpl
rclb
repz
jbe
nop
ljmp
pushf
xlat
xlat
mov
mov
jmp
push
add
add
dec
add
inc
add
fistpl
add
add
leave
dec
add
fcomps
add
push
mov
mov
and
add
add
scas
jmp
add
loop
jae
push
es
mov
add
add
rorl
xchg
testb
lcall
dec
add
cmp
or
xchg
out
fisttpl
cwtl
adc
enter
arpl
inc
adc
add
jb
jae
dec
and
xor
dec
add
lret
pop
mov
sti
lods
movsl
dec
add
clc
cmp
arpl
adc
sbb
ret
lahf
mov
call
or
inc
add
mov
mov
fidivrs
add
xlat
pop
and
in
imul
add
dec
add
call
mov
add
dec
add
sub
and
bndldx
fsubrs
imul
je
add
fists
add
mov
xor
insl
sahf
lock
out
dec
add
xchg
cmpsb
jl
arpl
sbb
add
or
flds
daa
xchg
shlb
int
add
inc
add
and
repz
test
leave
xlat
pop
addr16
pop
add
add
add
enter
pop
fldt
jb
data16
fcomps
pop
clc
data16
xor
mov
dec
shl
stc
xchg
xor
ds
add
out
cmpsl
lds
ficomps
add
pop
add
and
jp
daa
stc
inc
mov
pop
lahf
popf
lods
push
pop
sahf
clc
orl
adcb
cmc
repz
pop
or
enter
add
jmp
repnz
test
jb
pop
sahf
mov
lret
inc
push
push
add
mov
add
in
adc
push
add
add
add
dec
dec
add
xchg
in
and
imul
xor
add
push
add
add
sbbb
push
bound
cmp
adc
lcall
sbb
push
int
inc
add
cwtl
divb
add
add
xor
hlt
sbb
sub
and
lret
sbb
xchg
push
pop
orb
add
arpl
push
mov
add
repnz
sub
insl
shlb
nop
cltd
or
mov
and
ja
add
mov
scas
enter
add
add
aas
mov
xchg
pop
inc
je
movsl
loop
add
fdivr
insl
imul
mov
mov
add
push
add
shl
loopne
fidivs
push
add
add
fidivrl
adc
lret
add
in
add
cld
rorl
loope
cmc
add
lds
lock
fldt
push
mov
cmpsb
mov
add
repnz
scas
sub
cli
mov
iret
jge
or
jp
cmpsl
dec
add
xchg
gs
sub
decl
sub
into
call
ret
push
call
add
pop
add
pop
mov
inc
xor
sub
flds
mov
out
das
mov
adc
popa
aas
test
add
jbe
in
pushf
push
add
push
add
sub
add
loop
cmc
add
add
cmpsl
data16
ret
push
add
out
mov
sub
mov
pop
add
push
add
add
rorb
pop
mov
add
or
jne
inc
and
scas
decl
shrb
lock
dec
add
dec
add
mov
add
mov
jge
das
fidivl
push
add
loope
add
mov
xchg
sbb
cmovl
jno
xchg
mov
mov
cmp
push
sbb
out
fbld
testl
cmp
jle
cmc
sub
add
cmpb
sub
js
into
test
pusha
add
push
sbb
repz
add
add
test
cmpsb
or
add
sbb
add
shlb
add
xor
test
pop
inc
mov
add
sarb
jae
xchg
jno
pop
mov
data16
in
pop
stc
movsl
push
add
mov
add
or
cld
out
jg
or
into
cmp
jge
andl
bound
loope
iret
xchg
dec
add
sbbb
add
into
inc
add
bound
mov
mov
pop
daa
cmp
fwait
test
dec
mov
jg
push
add
sub
xchg
gs
or
jecxz
and
mov
inc
add
add
mov
add
jb
mov
add
xchg
