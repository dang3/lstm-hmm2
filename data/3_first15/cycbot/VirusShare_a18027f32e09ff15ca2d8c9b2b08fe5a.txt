add
test
test
incb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
mov
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
mov
mov
mov
mov
mov
mov
mov
mov
jns
jns
jns
jns
jns
jns
jns
jns
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
notl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
nop
nop
nop
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
aad
aad
aad
aad
aad
aad
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
pusha
pusha
pusha
sub
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
std
std
std
std
std
fcmovnu
fcmovnu
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
sbb
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
and
nop
nop
nop
nop
nop
nop
nop
jns
jns
jns
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
addb
addb
addb
addb
addb
addb
inc
inc
inc
inc
push
push
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
push
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
std
std
std
std
std
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
into
into
into
into
into
into
into
into
into
into
into
into
into
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
nop
nop
nop
ljmp
ljmp
ljmp
ljmp
ljmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
arpl
arpl
arpl
arpl
arpl
arpl
arpl
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jl
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ljmp
ljmp
ljmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
push
push
out
out
out
out
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
movsl
movsl
movsl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fidivrl
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
xchg
xchg
xchg
cs
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushf
pushf
pushf
pushf
pushf
pushf
imul
push
push
push
lods
lods
lods
lods
lods
lods
lods
lods
lods
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
nop
nop
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
out
out
out
out
xchg
xchg
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
cli
cli
cli
cli
cli
cli
cli
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aam
aam
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rorb
lea
lea
bound
bound
bound
bound
bound
bound
bound
bound
bound
nop
nop
nop
nop
nop
int
int
int
int
int
int
int
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rol
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
loope
loope
loope
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
data16
data16
addl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
enter
enter
enter
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
test
mov
mov
mov
mov
mov
mov
mov
xchg
cs
cs
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
bound
bound
bound
bound
sub
sub
sub
sub
sub
sub
sub
sub
ret
ret
ret
movsb
movsb
movsb
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
les
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
add
add
sub
sub
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
es
es
es
es
es
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
push
push
mov
mov
mov
nop
nop
stos
stos
stos
stos
stos
int
int
int
int
pop
pop
pop
pop
pop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
cs
std
std
std
std
lcall
push
push
push
push
push
push
push
push
push
push
push
xor
xor
xor
rol
rol
rol
rol
sar
std
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
notl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
or
or
or
or
or
sbb
sbb
sbb
sbb
sbb
sbb
ljmp
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
loope
loope
loope
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
jns
jns
jns
nop
nop
mov
rol
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
or
or
or
or
or
fs
fs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
aam
aam
aam
aam
aam
aam
aam
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
and
and
and
and
and
and
and
and
and
and
and
and
and
into
into
into
into
div
div
testl
cmp
lcall
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
sub
sub
sub
sub
sub
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shlb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
jg
addb
addb
xor
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
nop
jecxz
jecxz
jecxz
in
in
in
in
in
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
aad
aad
aad
aad
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jne
jne
jne
jne
jne
jne
mov
mov
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
mov
es
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
mov
mov
mov
aam
aam
aam
aam
aam
aam
aam
cli
cli
div
div
div
div
div
div
div
notb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
es
scas
scas
scas
scas
addb
addb
addb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
ret
ret
ret
ret
ret
ficoms
nop
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
nop
fcoml
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
loopne
cmp
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
emms
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
nop
nop
nop
nop
nop
mov
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
aaa
aaa
aaa
mov
mov
mov
ds
ds
pop
pop
pop
pop
pop
pop
mov
mov
mov
push
push
push
push
push
push
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
imul
imul
imul
imul
imul
imul
imul
imul
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
inc
inc
inc
inc
inc
inc
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sbb
gs
fwait
fwait
fwait
fwait
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loop
loop
loop
loop
loop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ljmp
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
jne
jne
jne
jne
jne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
jb
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
cmp
cmp
cmp
cmp
cmp
nop
nop
rcl
rcl
rcl
rcl
rcl
mov
mov
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
js
js
js
js
js
js
js
js
js
lea
lea
lea
lea
lea
lea
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rol
rol
rol
rol
rol
rol
rol
shll
bound
hlt
hlt
hlt
hlt
hlt
hlt
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lahf
lahf
lahf
lahf
lahf
lahf
lahf
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fistps
pop
pop
pop
pop
pop
pop
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
mov
mov
mov
mov
mov
mov
mov
aas
aas
aas
aas
aas
aas
aas
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
out
out
out
out
out
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
not
aad
aad
aad
aad
aad
aad
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jge
jge
jge
jge
jge
mov
mov
mov
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
lea
lea
gs
gs
nop
nop
nop
nop
test
mov
mov
push
fsubl
insb
add
stos
add
movsb
mov
add
add
xor
lahf
imul
divl
out
add
sub
and
lods
clc
ds
add
xor
stos
sbb
popf
aas
stos
xchg
pushf
or
shll
pop
pop
add
xchg
repz
sti
pushf
aaa
sbb
pop
pusha
add
pop
adc
xchg
jecxz
mov
aad
xchg
les
sub
add
ret
sti
or
mov
pop
add
push
add
add
int3
pop
ljmp
add
add
test
jbe
push
add
mov
add
add
jns
les
add
stos
mov
add
push
add
add
push
add
add
mov
mov
cmp
movsl
repz
aam
icebp
push
or
lds
xchg
mov
pop
add
lds
mov
add
sbb
cmp
jg
adc
enter
std
pop
fs
xchg
aam
in
dec
jmp
out
pop
jae
lea
or
add
repnz
xchg
dec
lods
repz
les
add
inc
add
add
mov
xchg
lock
stos
mov
or
data16
pop
or
fnstcw
movsb
test
xchg
stc
jbe
sub
jno
xor
sbb
sub
mov
mov
xchg
lahf
aad
loopne
pop
fcoms
xchg
movsb
movsl
in
mov
int3
sbb
add
sbb
and
mov
data16
add
add
pop
jbe
or
gs
cltd
fists
add
add
adc
lret
mov
add
add
popa
add
roll
xchg
jb
jo
inc
sahf
add
adc
mov
add
push
add
mov
push
add
mov
mov
mov
popa
sbb
xchg
jne
gs
shrb
xor
xchg
or
outsl
mov
push
add
add
add
sub
aad
pop
add
popa
shll
mov
add
push
add
test
add
leave
mov
filds
lods
inc
enter
js
sarl
and
pop
add
mov
add
add
sbb
ja
add
add
into
popf
adc
stc
int
add
add
adc
xchg
fldenv
add
cmpsl
cmp
mov
cmpl
stos
scas
sahf
jmp
int
xchg
mov
add
inc
imul
mov
push
xor
data16
adc
sub
out
cli
cmpsl
mov
in
add
inc
add
hlt
je
nop
aad
sub
loope
adc
jl
and
test
enter
insb
add
add
add
test
lds
movb
add
jmp
arpl
xor
adc
mov
add
xor
adc
add
mov
lret
fnstcw
jp
out
or
inc
add
add
jo
push
add
add
pop
add
leave
insb
add
add
cmp
add
add
xor
mov
mov
std
push
mov
popa
fwait
lahf
sbb
fisubl
in
clc
in
add
in
add
and
cwtl
repz
sub
rcrb
in
dec
lods
jg
add
xor
dec
popa
inc
sbb
sahf
inc
rorl
and
data16
dec
or
mov
push
add
add
fcmovb
test
lret
pop
test
add
cltd
sti
mov
mov
setae
add
arpl
pop
cmpb
int
pop
add
add
add
cmp
lods
dec
add
into
xor
lods
sti
dec
and
movsb
sub
sub
gs
out
fldenv
add
add
mulb
test
cmp
sarb
popa
mov
lret
lods
test
add
in
into
inc
xchg
inc
add
aaa
jle
pop
mov
lahf
das
inc
push
add
add
add
add
int3
dec
aas
add
jecxz
movsl
int3
fcmovnu
lods
jmp
in
cmp
xchg
add
xor
nop
mov
les
mov
pop
repnz
inc
add
aad
movd
in
mov
inc
add
push
add
mov
add
add
loopne
add
add
add
imul
movsl
stos
std
adc
dec
cmp
add
add
add
arpl
add
mov
add
nop
stc
pushf
xchg
xchg
stos
dec
add
aaa
lea
lcall
add
cltd
iret
insb
add
jns
into
mov
add
xchg
dec
add
fimuls
insb
add
mov
xchg
push
add
add
dec
aad
add
andl
lods
lock
add
fists
je
xorl
add
ret
fcmovnbe
sahf
loopne
dec
add
and
iret
mov
into
pop
add
add
add
out
call
xchg
lret
fstpl
sti
pop
cld
loopne
ret
popa
outsl
stc
fisttpl
mov
add
loop
lahf
and
adc
movsl
jne
fdivs
pop
jl
sbb
cli
mov
sub
fadds
sahf
lods
pop
add
insb
add
mov
add
dec
add
das
ja
imul
add
mov
add
add
push
outsb
add
add
pusha
add
xchg
cmpsb
and
add
add
iret
mov
in
xchg
insb
add
add
cmp
sbb
orb
add
add
mov
add
add
sarl
inc
mov
pop
add
sti
cmp
ror
cmpsb
mov
add
inc
add
add
add
adc
add
add
xchg
out
and
xchg
ficomps
aam
aad
add
mov
add
pop
add
and
jle
sbb
sub
add
push
adc
fidivs
fcmovbe
mov
pushf
adcb
mov
add
adc
cltd
cli
and
cmp
lock
sbb
aad
and
cwtl
sahf
xchg
pop
dec
add
xchg
jmp
xchg
sub
add
add
push
adc
cmc
dec
add
add
push
add
shlb
inc
mov
add
add
pop
pushf
dec
aaa
dec
sbb
mov
add
rcrl
or
add
shrl
rcrl
add
add
mov
add
cmp
xlat
or
cmp
orb
fdivs
add
and
in
mov
or
add
or
loope
dec
add
add
sti
lret
xchg
xchg
add
adc
lea
and
mov
in
pop
add
daa
cmp
aad
lahf
mov
movsb
add
imul
cltd
add
insb
add
jmp
add
mov
in
dec
add
cmp
jecxz
add
xor
dec
add
xor
cli
sbb
add
or
and
lea
sbb
jecxz
add
pop
pop
add
loope
test
cmp
add
test
sub
decb
enter
pusha
add
add
divl
movsb
sub
pop
add
add
add
lds
adc
xor
loop
and
push
add
sbb
enter
add
add
iret
inc
add
xor
sub
data16
sbb
push
add
add
cmp
push
ljmp
shlb
jb
mov
lock
dec
xor
pop
add
or
popf
shlb
add
cltd
dec
add
add
sbb
cmc
and
mov
or
push
add
xchg
mov
pop
or
jg
add
adc
add
addr16
sbb
adc
push
add
out
movsb
out
lahf
pop
add
inc
add
add
jmp
mov
in
iret
pop
ja
stc
xchg
xchg
aam
aaa
hlt
lods
xor
dec
add
outsl
nop
sbb
movsb
ret
jp
scas
ret
sbb
lods
lret
out
outsl
inc
push
xorb
mov
xorb
cltd
add
jae
adc
loope
cmp
add
push
add
inc
mov
cmp
dec
add
cwtl
sti
out
divb
mov
add
pop
add
add
loop
add
scas
jge
addr16
push
add
sub
ret
cmc
mov
add
pop
cmp
jp
sub
sti
in
outsb
add
je
out
inc
add
sbb
xchg
in
popa
scas
call
test
jmp
int3
iret
cli
divb
add
mov
mov
mov
add
add
add
inc
push
sbb
scas
ret
ljmp
add
adc
lret
add
mov
mov
ja
add
cmp
push
lahf
push
pop
stos
lret
push
mov
add
add
add
pop
add
dec
aas
pop
repnz
add
add
fwait
mov
fwait
scas
lods
nop
mov
add
push
jno
nop
dec
add
add
xorb
push
add
xor
push
add
fldl
aam
xor
aas
add
mov
add
pusha
add
add
arpl
les
add
add
push
add
xor
data16
xor
add
inc
and
cmp
out
aam
and
mov
mov
add
popl
jo
aad
pop
jl
fsubs
mov
add
jne
lahf
push
add
add
stos
or
mov
aam
push
add
add
add
xor
add
add
bound
addr16
mov
out
add
add
dec
add
xor
enter
add
adc
cltd
fadd
jae
add
add
addr16
gs
jmp
int3
ljmp
test
das
pusha
add
enter
add
mov
nop
popl
outsb
add
add
pop
add
dec
inc
add
add
pop
push
mov
xchg
mov
not
add
sub
push
add
roll
mov
add
bound
push
add
ja
mov
add
gs
add
pop
insb
add
and
lock
ficompl
push
push
fisubrs
aaa
lock
add
add
add
add
cmp
aaa
add
ret
loop
jp
dec
add
mov
add
outsb
add
mov
bnd
not
mov
and
cmpl
imulb
add
or
test
mov
xchg
lock
lock
cli
mov
or
push
add
mov
into
xor
adc
inc
add
or
lcall
int
jg
add
jnp
add
repz
fwait
lret
adc
dec
in
jo
sbb
test
lds
dec
inc
adc
int3
mov
adc
push
cwtl
push
add
mov
xchg
push
add
xor
xchg
sbb
add
inc
adc
jno
cmp
data16
inc
pop
add
stos
xchg
mov
xor
push
add
shlb
sub
mov
add
xchg
pushl
fiadds
add
ds
sub
add
sub
add
or
inc
add
mov
push
add
mov
xchg
mov
xchg
in
and
jno
or
sbb
add
inc
xor
lcall
ja
cmp
add
or
negl
sub
add
add
add
mov
add
imul
filds
aas
or
mov
imul
jne
lahf
fdivs
add
push
add
cmp
mov
sbb
and
test
andl
xor
fidivl
test
jl
inc
add
and
cmp
and
aam
jnp
loop
sub
jae
lahf
inc
push
add
dec
andb
lds
mov
cltd
mov
ret
outsl
loope
add
popf
pusha
add
sbb
pop
sub
add
mov
adc
ljmp
add
cmp
mov
add
imul
imul
mov
add
les
pop
push
gs
xlat
add
jmp
jo
int
add
call
add
pop
int
insb
add
add
mov
cltd
lea
sahf
inc
adc
add
mov
add
mov
lods
add
in
xlat
std
fisubl
xor
push
add
pop
xchg
inc
inc
cmp
add
add
xor
cld
imul
xchg
fbstp
mov
xchg
mov
add
aaa
dec
lock
inc
add
add
mov
push
loope
pop
add
and
ds
je
push
add
xchg
xchg
rcll
pop
add
add
pop
lods
inc
add
cmp
inc
add
add
aaa
fsubrl
mov
lock
xchg
mov
adc
ljmp
insl
inc
add
aad
lahf
repz
sbb
mov
pop
inc
add
rol
sbb
push
fwait
loopne
add
sbb
pop
aas
insl
adcl
add
sub
rcr
lods
iret
sub
xlat
mov
dec
mov
push
add
repz
cmp
cmc
push
repz
pop
mov
add
scas
aas
movsl
mov
inc
push
add
push
add
push
add
lods
dec
add
imul
orl
push
add
hlt
adc
pop
add
test
mov
mov
add
sbb
xchg
sahf
gs
sbb
hlt
xchg
inc
add
mov
cmp
sti
inc
int3
push
add
jge
cmp
push
add
icebp
inc
add
or
test
add
sub
add
adc
add
fwait
push
add
mov
pusha
add
push
xchg
jmp
add
out
sbb
dec
or
shrb
add
add
or
loope
outsb
add
mov
pushf
xchg
sbb
pop
in
add
lea
pop
es
cli
pushf
xor
inc
daa
jae
add
add
mov
das
pop
add
ficoms
add
fsub
in
dec
add
test
add
aam
cmp
add
add
notl
add
push
add
test
push
add
ja
loope
repnz
add
cmp
xchg
add
lcall
sub
push
ljmp
jg
add
inc
or
mov
add
pop
inc
test
sbb
cmp
into
pop
mov
rol
jp
pop
sbb
dec
flds
add
out
add
imul
add
daa
xchg
xchg
sbb
enter
jnp
ret
or
sub
into
mov
mov
cld
out
lock
mov
add
push
add
mov
fidivs
fildll
rcrl
movsb
push
add
rorb
in
stos
jb
test
jmp
test
mov
cmp
lcall
push
fnstenv
add
add
add
mov
lock
mov
or
adc
ja
fnstenv
rcrb
add
add
adcb
add
adc
sbb
mov
es
lods
stos
insb
add
mov
out
pop
sti
adc
cmc
rcrl
or
js
filds
add
fidivs
mov
push
add
scas
rolb
pushf
test
test
xor
xchg
popa
in
aam
leave
mov
dec
leave
dec
jo
mov
inc
add
std
add
add
sbb
mov
dec
adc
add
add
cmp
mov
mov
cwtl
aas
adc
xchg
sub
rcl
add
iret
jo
adc
jb
fmull
add
jno
inc
add
mov
pop
add
jl
out
dec
sbb
mov
js
or
xor
xchg
aam
xor
sbb
sbb
pop
push
add
sarb
push
add
or
insb
add
imulb
int3
pop
jmp
add
rol
pop
fucom
sarb
add
pop
dec
lock
roll
mov
adc
pop
stos
jge
xor
jle
or
add
inc
call
inc
decb
imull
or
lods
add
jmp
sti
jmp
inc
add
adc
jae
stc
xor
jge
repnz
push
mov
sarl
test
add
add
in
dec
add
daa
ffree
cld
jmp
inc
daa
cld
loop
nop
mov
add
and
add
out
cmp
mov
test
mov
pushf
dec
add
and
sbb
add
jg
cmp
lret
add
add
in
adc
jmp
cmp
jg
or
add
add
insl
in
add
or
push
add
hlt
add
popf
xlat
pop
icebp
sbb
cmp
call
add
xchg
push
add
dec
jp
in
inc
add
add
inc
fcoms
mov
inc
add
lods
mov
sbb
dec
bound
add
xchg
dec
add
xchg
inc
add
stos
rorl
sbb
outsb
add
and
xlat
pop
pop
pusha
add
aam
lcall
add
push
add
sti
xor
subl
add
inc
add
fsts
out
fcmove
pop
and
inc
add
add
pop
add
jno
scas
adc
ret
pop
add
jns
add
add
and
cmpsl
fbld
inc
add
sar
clc
addr16
or
jle
in
add
mov
push
xlat
dec
add
push
pushf
out
mov
xor
xor
sahf
aaa
xchg
push
add
mov
mov
adc
je
sub
jbe
and
ret
mov
xor
in
push
pushf
movsl
lock
sbb
syscall
jmp
push
add
shrb
mov
les
or
pop
add
pop
add
add
cwtl
sub
sbbb
mov
push
add
add
nop
cwtl
jl
and
dec
add
call
lds
jno
add
ja
mov
xor
xchg
or
cmpsl
inc
add
out
pop
add
jg
ja
add
add
add
loopne
testb
in
xchg
fisubrl
pop
movsb
inc
call
adc
cmpsl
fidivrs
add
pop
mov
sub
inc
add
mov
push
lock
add
enter
add
sbb
add
cmp
add
add
xchg
cmp
in
loop
add
test
into
add
xchg
insb
add
inc
add
cmc
sub
repnz
jo
lods
mov
add
pusha
add
test
lock
push
jbe
pop
add
xchg
daa
sub
lds
add
jae
add
mov
add
js
jp
subl
movsl
fcmove
ret
xor
jmp
int
add
add
test
cs
add
fwait
mov
rcl
arpl
jl
iret
mov
scas
loop
add
leave
nop
xor
mov
xor
add
sbb
shll
add
insl
jg
in
lods
mov
ja
mov
imul
out
add
mov
jno
mov
add
add
lret
add
inc
add
test
add
into
sti
add
add
jno
inc
data16
scas
stos
aas
push
add
add
popf
push
add
test
inc
add
add
pop
mov
fcomi
xor
shll
push
mov
add
fdiv
ret
jmp
add
repnz
pop
adc
cmpsb
pop
add
cmpb
mull
sub
imul
add
add
lock
add
sbb
cmp
mov
adc
add
rcrl
add
add
cmpsl
push
add
cltd
adc
sub
add
add
or
xchg
xchg
lahf
mov
add
mov
dec
inc
push
mov
push
and
adc
jmp
stos
pushf
mov
add
sub
daa
jle
imulb
inc
push
jmp
loopne
sub
add
enter
out
mov
add
mov
adc
dec
test
push
testl
sub
pushf
mov
dec
jmp
outsb
add
push
jnp
add
adc
and
jmp
leave
hlt
sub
add
je
adc
xor
push
mov
jmp
daa
xorl
sahf
les
add
in
stos
xchg
push
add
jp
or
inc
add
add
lds
add
xor
inc
add
into
push
add
enter
mov
inc
stos
mov
mov
aaa
insl
js
cmpsl
jge
add
add
mov
jp
clc
mov
mov
add
push
add
jns
lds
test
add
je
mov
iret
in
xchg
push
inc
add
cli
inc
add
mov
mov
add
dec
add
adc
jne
in
std
jge
aaa
lret
stos
add
add
sti
sbb
jns
je
and
jne
jb
mov
scas
mov
cli
aaa
test
pop
push
mov
mov
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
nop
jns
add
xchg
sub
cmc
fcmovnbe
inc
add
add
mov
jb
cld
cmp
jbe
test
pop
mov
out
subl
ret
lcall
add
fistpl
add
add
outsl
xlat
clc
and
dec
add
mov
add
pop
xchg
cmp
gs
sahf
icebp
jo
lret
mov
testb
test
scas
sub
jnp
mov
mov
add
add
lahf
aam
mov
add
add
rclb
mov
cmc
pusha
add
or
mov
popa
pop
roll
add
sub
pop
lahf
mov
jbe
lods
mov
test
sub
jmp
cmp
cli
push
add
rorl
mov
sbb
daa
test
sbb
pop
inc
sbb
js
ja
into
ljmp
stos
dec
pop
scas
mov
push
add
add
mov
bound
je
mov
test
mov
mov
inc
inc
add
fwait
mov
add
mov
hlt
push
add
push
xchg
sbb
in
mov
adcl
add
jg
add
ja
add
add
inc
mov
add
add
test
fwait
mov
add
jmp
cld
and
sub
jne
call
mov
add
push
ficoml
add
lahf
sbb
jae
adc
ficomps
add
mov
mov
imul
jl
popf
hlt
loope
add
add
pushf
les
add
fxch
sti
daa
cld
mov
add
add
xlat
and
add
jecxz
add
mov
imul
add
add
and
cmpsl
and
add
add
sub
or
adc
repz
inc
add
scas
dec
add
sbb
add
es
add
add
pop
add
xlat
fs
daa
cmpsl
data16
xchg
subb
lret
mov
sbb
sub
pop
add
pop
cmc
cmpsl
jecxz
add
sbb
out
testb
outsl
cmp
mov
lahf
jecxz
dec
add
pusha
add
fistpll
pop
push
and
dec
add
test
enter
data16
mov
pop
jp
pop
add
sub
orl
cmpsb
mov
data16
pop
add
icebp
subb
insb
add
pop
in
and
or
inc
add
cmc
loop
int
pop
add
scas
add
call
aas
adc
mov
mov
add
add
adc
or
fadd
xor
jg
add
lea
pop
into
mov
add
adc
ret
mov
add
jl
mov
outsl
dec
jbe
out
orb
sbb
mov
add
xlat
add
add
pop
test
in
or
sbb
mov
and
les
add
sub
push
lcall
lock
dec
add
cld
adc
add
gs
jnp
in
add
fldenv
add
add
pop
add
add
ret
add
add
add
add
add
push
add
add
jmp
add
adc
fwait
movsb
push
fadd
lret
and
imul
leave
pusha
add
cmpsl
cmp
add
add
mov
jae
add
xchg
movsb
sub
test
jg
add
add
add
lods
imul
add
add
jnp
int
sub
cmc
fneni(8087
adc
scas
rol
add
cmc
fld
add
add
xchg
push
add
sub
jo
mov
scas
jnp
add
add
add
movsb
lods
dec
xor
neg
jno
add
outsl
add
xchg
fisubrs
aaa
lret
xchg
pop
jmp
loop
and
add
add
cld
sbb
add
xchg
xor
sti
xchg
xor
mov
jnp
loopne
pop
add
mov
mov
call
vmovntps
add
leave
add
add
mov
push
rcll
insb
add
add
push
add
add
in
pop
add
add
shr
push
or
cmpsb
pop
push
sbb
fwait
shll
add
lcall
and
sub
pushf
inc
add
dec
pop
adc
and
inc
js
repnz
out
insl
pop
add
or
add
push
std
push
sbb
add
sub
sahf
xor
push
add
push
xor
insb
add
and
sub
adc
add
xchg
iret
test
jb
negl
fstpl
fimull
add
insl
sbb
xchg
call
cmp
jae
xchg
in
ljmp
add
add
lea
mov
adcl
mov
jecxz
push
add
imul
shll
imul
stos
jge
stos
and
jg
inc
add
xchg
jle
add
mov
scas
into
pushl
cmp
jecxz
push
add
aad
sbb
mov
add
add
add
idivb
js
sti
mov
std
fmuls
xor
repnz
test
jge
add
mov
push
add
mov
xchg
adc
add
inc
jnp
push
add
add
adc
mov
dec
add
pop
add
insl
push
add
and
das
aaa
sub
and
sbb
add
cmp
cwtl
and
roll
add
add
sub
fdivr
out
addr16
testl
xor
dec
rcl
push
add
add
rorb
ss
outsb
add
hlt
aad
or
ficomps
add
push
xchg
div
shll
mov
jns
lods
outsl
loope
imulb
add
es
call
xor
in
xchg
and
imull
stc
lods
sub
pop
add
dec
scas
dec
add
add
movsl
popa
inc
add
orl
andl
or
rclb
aas
adc
enter
xor
push
jp
bswap
mov
add
add
sbb
xlat
dec
add
add
add
mov
rorl
movsl
jbe
mov
imul
add
pop
pop
add
adc
inc
jg
icebp
jb
jne
or
cs
filds
lods
or
push
insl
inc
add
lcall
mov
add
lods
or
push
add
daa
and
js
cmp
dec
add
repz
sahf
adc
fldcw
add
adc
add
mov
pop
push
add
mov
pop
das
sbb
pusha
add
xor
rcrb
adc
imul
and
dec
add
add
addr16
ljmp
popf
dec
add
jle
inc
insl
sbb
dec
pop
add
test
add
dec
lcall
in
xlat
fdiv
jl
or
test
jbe
mov
add
add
or
repnz
add
mov
cltd
data16
add
push
add
add
add
add
jge
add
sub
mov
hlt
cmove
xlat
pop
add
jg
add
das
jecxz
add
shll
nop
jo
mov
aas
adc
ret
push
add
sub
out
add
add
adc
xor
mov
aam
sbb
push
jbe
cmc
inc
sbb
in
xor
add
jo
cli
aas
fs
aad
add
lock
sbb
cmpsl
insb
add
add
adcl
add
or
in
jae
xchg
xchg
mov
int3
aaa
test
cmpl
add
add
mov
jg
add
cmp
add
mov
pop
dec
add
add
scas
int3
xchg
imul
add
mov
push
arpl
and
xor
fcomp
add
or
aam
add
push
and
jnp
or
add
das
or
iret
push
push
aas
ret
inc
fstpl
add
jbe
sbb
or
add
mov
out
out
mov
mov
or
inc
pop
add
mov
add
adc
shlb
stc
in
mov
inc
mov
mov
out
and
or
cmp
or
push
add
cwtl
adc
es
and
cmpsb
in
push
add
notl
iret
jbe
into
movsb
sarb
dec
pop
add
and
out
jmp
xor
xchg
sahf
inc
jae
shr
adc
pop
into
test
out
cltd
test
add
pop
scas
mov
mov
idivl
popa
bound
movsb
mov
add
add
mov
add
dec
cmp
fildl
mov
dec
add
sti
data16
scas
lret
mov
add
sub
sbb
subb
push
add
pop
add
add
fistpl
add
mov
in
sahf
sub
scas
movsb
setb
add
test
aas
mov
and
shrl
add
add
imul
into
test
add
repnz
arpl
pusha
add
add
xor
into
scas
add
add
add
xchg
nop
in
and
mov
lods
and
jge
mov
mov
add
loope
loop
mov
adc
fidivs
dec
bound
rclb
jnp
popa
add
sub
jp
mov
add
add
sbb
test
hlt
pop
add
add
cmc
mov
jmp
dec
add
dec
add
add
add
xchg
pop
mov
xchg
jno
pcmpgtw
mov
or
fs
sbb
xchg
outsl
jno
inc
sub
pop
add
add
insl
mov
xchg
add
add
add
sub
sub
adc
xchg
or
ljmp
add
add
ret
lods
nop
xchg
xlat
jle
mov
add
out
faddp
jl
and
fwait
sub
sbb
aas
mov
add
into
lcall
mov
stos
sub
pop
pop
ficomps
or
jno
add
pushf
pop
int
xor
and
shrl
loop
mov
mov
adc
mov
xchg
popa
cmp
mov
mov
add
repnz
add
add
add
add
add
mov
add
inc
add
pop
push
add
inc
add
push
add
add
mov
shrl
sbbb
pop
add
call
iret
mov
in
pop
add
sti
dec
add
mov
idivb
add
aam
fdiv
jmp
cwtl
push
add
mov
pop
mov
add
pop
add
dec
cs
pusha
add
in
push
jg
arpl
std
mov
xchg
push
add
sbb
pushf
push
add
shlb
loopne
add
call
add
add
sbb
xchg
mov
add
lahf
frstor
and
call
fbld
idivl
addb
mov
sub
test
test
mov
int
add
add
add
fcomps
add
inc
add
add
popa
das
add
repz
or
mov
movsl
stos
pop
jbe
mov
adc
stos
pushf
sub
adc
movsb
xchg
shl
mov
add
add
lock
addr16
dec
xor
flds
add
add
xchg
jb
pop
add
mov
add
add
sub
dec
add
and
dec
push
add
sti
dec
add
pusha
add
sar
add
xor
out
mov
add
add
add
ret
and
lods
add
add
add
les
loop
push
add
mov
add
lock
sbb
inc
add
add
gs
iret
imul
pop
add
xchg
cmpsl
rorb
daa
mov
ret
lods
inc
out
add
dec
add
int3
push
add
test
add
loopne
stos
and
call
iret
cmovnp
out
push
pop
dec
mov
and
stos
cmp
push
pop
stos
jns
cmc
imul
mov
jo
enter
add
aam
and
sub
adc
cmpsl
jp
and
jns
adc
aad
xchg
out
add
sti
xchg
ja
out
add
push
add
pop
in
sub
pop
pop
in
or
add
jmp
inc
add
dec
xchg
mov
mov
pop
sbb
pop
add
add
or
add
xchg
and
pop
cmp
xor
fsubs
xor
add
stos
arpl
pop
add
loop
push
add
sub
ret
and
add
xor
in
sbb
adc
daa
dec
jecxz
cwtl
mov
adc
or
filds
add
add
movsl
lds
in
inc
fistpl
sub
js
arpl
adc
sbb
add
scas
lds
ror
loope
add
add
add
fisubl
std
lret
push
add
pop
add
daa
fbstp
and
jbe
into
mov
add
add
add
outsl
inc
jnp
test
jle
imul
dec
add
loopne
mov
negb
mov
sbb
cwtl
les
mov
jb
fmuls
add
push
out
jmp
add
mov
jmp
add
add
bound
sub
and
add
add
add
sbb
add
fisttps
cmp
xchg
sub
std
rol
mov
shrb
dec
and
jmp
add
inc
add
mov
add
add
jmp
mov
cmpsb
pop
xchg
mov
push
clc
repnz
nop
nop
jae
imul
nop
jae
add
add
test
add
add
test
add
clc
repnz
nop
nop
jae
daa
mov
loop
ja
clc
repnz
nop
nop
jae
bound
aas
shlb
cld
nop
nop
jae
add
insb
add
fwait
add
mov
cld
nop
nop
jae
icebp
add
sbb
sub
push
mov
clc
repnz
nop
nop
jae
jg
jg
and
pop
add
mov
add
clc
repnz
nop
nop
jae
xor
add
nop
cmpsl
push
clc
repnz
nop
nop
jae
add
add
in
add
jbe
clc
repnz
nop
nop
jae
add
add
mov
inc
sub
repnz
nop
nop
jae
popa
push
lret
insb
sahf
xchg
pop
mov
clc
repnz
nop
nop
jae
stos
sahf
add
add
fsubl
cld
nop
nop
jae
pop
add
in
fwait
icebp
lret
dec
mov
clc
repnz
nop
nop
jae
lret
add
add
movsl
lds
clc
repnz
nop
nop
jae
xor
mov
push
mov
xchg
ret
add
add
add
xor
cltd
push
clc
repnz
nop
nop
jae
add
mov
add
popa
push
clc
repnz
nop
nop
jae
add
xchg
in
add
sbb
repnz
nop
nop
jae
add
add
add
push
add
mov
jmp
in
leave
nop
jmp
add
add
add
xor
add
repnz
nop
nop
jae
add
stos
mov
test
nop
push
mov
leave
nop
jmp
popa
add
add
add
push
mov
xchg
ret
icebp
add
insb
add
add
push
mov
leave
nop
jmp
add
icebp
repnz
mov
cmp
ret
add
insb
sahf
mov
or
in
pop
mov
clc
repnz
nop
nop
jae
test
xor
nop
push
mov
leave
nop
jmp
jnp
sub
nop
push
mov
leave
nop
jmp
testl
into
jle
xchg
push
clc
repnz
nop
nop
jae
cmp
push
daa
push
mov
clc
repnz
nop
nop
jae
insb
add
ljmp
clc
repnz
nop
nop
jae
jg
bound
mov
and
sti
rep
clc
repnz
nop
nop
jae
mov
popa
add
add
adcl
jae
pop
stos
add
add
out
movsl
mov
pause
push
mov
leave
nop
jmp
add
mov
mov
mov
leave
nop
jmp
stos
outsl
add
popa
add
or
add
nop
jmp
push
add
repnz
mov
xchg
ret
push
add
xchg
repnz
add
dec
push
clc
repnz
nop
nop
jae
add
push
cs
pop
adc
repnz
nop
nop
jae
mov
add
mov
movzwl
nop
push
mov
leave
nop
jmp
mov
ljmp
add
adc
lret
sbb
add
push
clc
repnz
nop
nop
jae
test
add
std
es
clc
repnz
nop
nop
jae
insb
test
add
add
xor
push
mov
xchg
ret
add
xchg
add
add
jg
mov
nop
push
mov
leave
nop
jmp
push
add
stos
mov
nop
push
mov
leave
nop
jmp
add
fwait
bound
iret
fistpl
push
mov
xchg
ret
add
add
test
pop
xor
mov
repnz
nop
nop
jae
repnz
add
add
xor
mov
add
nop
nop
jae
sub
bound
add
push
in
and
clc
repnz
nop
nop
jae
mov
add
aas
push
lret
add
fldl
cld
nop
nop
jae
cs
add
add
lea
nop
push
mov
leave
nop
jmp
add
jle
dec
mov
clc
repnz
nop
nop
jae
add
insb
mov
add
mov
leave
nop
jmp
dec
mov
push
pop
xchg
data16
sbb
clc
repnz
nop
nop
jae
add
or
add
ret
clc
repnz
nop
nop
jae
add
popa
add
dec
clc
repnz
nop
nop
jae
push
xchg
std
add
cmp
std
in
mov
clc
repnz
nop
nop
jae
icebp
add
add
and
mov
sbb
jne
clc
repnz
nop
nop
jae
repnz
mov
add
mov
clc
repnz
nop
nop
jae
shrl
add
in
mov
les
push
mov
out
adc
pop
lods
dec
add
data16
xchg
mov
out
jns
dec
cmp
push
mov
leave
nop
jmp
std
add
pop
add
push
adc
jl
add
clc
repnz
nop
nop
jae
or
movsl
push
push
jne
jb
clc
repnz
nop
nop
jae
add
add
add
lcall
inc
add
insb
add
ficomps
add
pop
sub
clc
repnz
nop
nop
jae
add
roll
shl
lds
nop
jae
add
imul
repnz
nop
nop
jae
fyl2x
add
add
add
add
mov
leave
nop
jmp
inc
add
ret
push
push
mov
xchg
ret
add
imul
cld
nop
nop
jae
add
pop
pop
imul
or
push
add
add
nop
push
mov
leave
nop
jmp
add
and
dec
add
clc
repnz
nop
nop
jae
pop
addl
jae
push
mov
xchg
ret
add
jg
mov
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
std
pop
push
ljmp
clc
repnz
nop
nop
jae
add
outsl
sbb
mov
fcoms
nop
jmp
add
movsl
sub
cld
nop
nop
jae
push
add
mov
sub
in
leave
nop
jmp
add
sub
add
movsl
xor
clc
repnz
nop
nop
jae
add
shrl
addl
add
add
add
out
mov
add
nop
nop
jae
add
negl
fiadds
mov
and
push
mov
xchg
ret
add
testl
push
add
clc
repnz
nop
nop
jae
shr
mov
fwait
cmp
pop
or
add
cmp
sbb
or
fdivl
mov
xchg
ret
fwait
bound
xlat
jmp
movsl
add
mov
xchg
add
push
repnz
les
fwait
clc
repnz
nop
nop
jae
rorl
sbb
std
add
add
add
nop
push
mov
leave
nop
jmp
in
daa
test
test
sub
add
repnz
nop
nop
jae
sahf
popa
add
mov
clc
repnz
nop
nop
jae
dec
in
pop
add
push
mov
dec
sub
jae
inc
add
lret
add
add
xchg
inc
add
push
mov
xchg
ret
add
add
push
nop
push
mov
leave
nop
jmp
add
sub
addr16
clc
repnz
nop
nop
jae
add
add
pusha
clc
repnz
nop
nop
jae
bound
add
add
add
push
mov
xchg
ret
cld
add
add
push
add
and
lahf
mov
push
mov
xchg
ret
add
xchg
stos
shrl
repnz
mov
xchg
ret
add
add
inc
stos
bound
mov
add
repnz
nop
nop
jae
push
push
mov
push
add
clc
repnz
nop
nop
jae
add
add
roll
js
clc
repnz
nop
nop
jae
add
aas
add
add
mov
leave
nop
jmp
mov
sbb
push
push
mov
xchg
ret
add
and
insb
jnp
bound
shl
jmp
repnz
nop
nop
jae
outsl
add
push
add
pop
mov
clc
repnz
nop
nop
jae
insb
stos
sub
lret
pop
add
fwait
nop
push
mov
leave
nop
jmp
push
add
roll
add
sub
adc
add
movl
in
leave
nop
jmp
ljmp
mov
leave
nop
jmp
in
add
add
add
sbb
clc
repnz
nop
nop
jae
popa
in
add
add
pushl
clc
repnz
nop
nop
jae
dec
add
add
ficoml
cld
nop
nop
jae
sub
add
sub
push
pop
clc
repnz
nop
nop
jae
add
add
sub
or
mov
out
add
clc
repnz
nop
nop
jae
mov
dec
stc
push
push
mov
xchg
ret
pop
add
add
add
add
test
xchg
ret
sbb
and
and
jnp
add
jbe
leave
pop
push
mov
xchg
ret
add
insb
add
add
andl
in
leave
nop
jmp
push
outsl
cs
xchg
pop
nop
push
mov
leave
nop
jmp
add
imul
test
popl
clc
repnz
nop
nop
jae
add
insb
mov
jmp
add
push
dec
std
add
cmp
add
fimull
mov
leave
nop
jmp
add
push
add
mov
popa
nop
push
mov
leave
nop
jmp
sub
push
add
pop
add
inc
add
mov
rclb
nop
jmp
add
add
add
in
xchg
push
mov
add
adc
adc
rcl
push
les
add
mov
add
add
push
mov
leave
nop
jmp
pop
add
sbb
add
inc
test
nop
push
mov
leave
nop
jmp
addl
add
cmc
fwait
nop
push
mov
leave
nop
jmp
sub
add
add
ljmp
in
inc
add
add
add
clc
repnz
nop
nop
jae
add
pop
mov
add
mov
insl
add
add
repnz
nop
nop
jae
xor
add
in
clc
repnz
nop
nop
jae
add
xor
push
add
push
dec
add
xor
adcl
repnz
nop
nop
jae
add
push
add
dec
push
clc
repnz
nop
nop
jae
jnp
sahf
add
dec
and
inc
lea
push
mov
xchg
ret
fincstp
sbb
add
add
cld
nop
nop
jae
add
adcl
repnz
nop
nop
jae
subl
add
push
mov
xchg
ret
fiadds
inc
insb
jnp
adc
mov
xchg
ret
ljmp
add
push
add
clc
repnz
nop
nop
jae
roll
sub
aas
clc
repnz
nop
nop
jae
add
sub
dec
stos
jo
add
xor
clc
repnz
nop
nop
jae
out
add
push
add
mov
sbb
addb
add
nop
push
mov
leave
nop
jmp
fisubrs
push
add
add
clc
repnz
nop
nop
jae
add
sub
add
nop
push
mov
leave
nop
jmp
add
mov
push
jne
clc
repnz
nop
nop
jae
add
or
pusha
inc
add
add
add
push
push
mov
xchg
ret
and
add
add
repnz
nop
nop
jae
push
push
pop
add
mov
xchg
ret
push
roll
cld
add
pop
add
addb
cmp
ret
aas
repnz
sahf
in
add
add
add
push
mov
xchg
ret
aas
xchg
and
cmp
ja
push
mov
xchg
ret
add
out
add
add
add
scas
push
mov
clc
repnz
nop
nop
jae
add
add
xor
xlat
push
push
mov
xchg
ret
add
add
ljmp
repnz
nop
nop
jae
pop
sahf
popa
add
add
sub
cld
nop
nop
jae
add
pop
pop
xchg
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
add
aas
add
lods
push
push
mov
xchg
ret
and
repnz
out
mov
enter
in
leave
nop
jmp
and
mov
add
lea
mov
xchg
ret
xchg
and
or
inc
add
add
add
repnz
nop
nop
jae
add
movb
mov
xchg
ret
add
movsl
xchg
add
rcl
outsl
not
push
mov
xchg
ret
jnp
dec
push
add
add
filds
sub
repnz
nop
nop
jae
add
xor
repnz
nop
nop
jae
push
add
repnz
cld
nop
nop
jae
in
cmp
push
cld
and
xchg
nop
push
mov
leave
nop
jmp
daa
add
cld
add
insb
int3
and
mov
add
or
clc
repnz
nop
nop
jae
mov
add
jmp
clc
repnz
nop
nop
jae
std
add
je
clc
repnz
nop
nop
jae
stos
add
push
clc
repnz
nop
nop
jae
fwait
push
mov
flds
in
add
dec
add
push
nop
push
mov
leave
nop
jmp
lret
add
add
insb
std
aam
mov
push
mov
xchg
ret
insb
cld
or
add
add
push
add
add
nop
push
mov
leave
nop
jmp
add
add
aam
sub
clc
repnz
nop
nop
jae
push
add
push
add
cli
es
push
push
mov
xchg
ret
add
add
xor
add
sar
cld
nop
nop
jae
in
add
sub
daa
add
addr16
add
add
add
bound
push
je
pop
push
clc
repnz
nop
nop
jae
sbb
fwait
add
sbb
arpl
add
repnz
nop
nop
jae
add
push
adc
clc
repnz
nop
nop
jae
pop
add
cs
or
mov
sbb
push
mov
xchg
ret
sbb
add
add
sbb
repnz
nop
nop
jae
add
add
add
add
cmp
in
cmp
lret
lahf
and
roll
add
ficoml
add
xchg
mov
clc
repnz
nop
nop
jae
cld
mov
lret
lahf
sub
clc
repnz
nop
nop
jae
xor
sub
add
dec
add
xchg
bound
xchg
ret
add
add
cmp
xor
xchg
mov
clc
repnz
nop
nop
jae
add
sub
clc
repnz
nop
nop
jae
imul
ret
push
mov
xchg
ret
add
sbb
add
add
add
clc
repnz
nop
nop
jae
push
test
add
add
clc
repnz
nop
nop
jae
fstps
pop
add
add
add
cmp
add
ss
repnz
nop
nop
jae
flds
mov
les
mov
clc
repnz
nop
nop
jae
add
add
push
push
pusha
add
fld1
nop
push
mov
leave
nop
jmp
add
ljmp
pop
add
push
mov
xchg
ret
add
xor
add
add
and
push
add
clc
repnz
nop
nop
jae
adcl
lods
icebp
call
nop
jmp
add
push
in
shrl
repnz
nop
nop
jae
jnp
add
dec
add
repnz
nop
nop
jae
insb
add
add
add
add
repnz
nop
nop
jae
dec
imul
mov
xchg
ret
add
in
fwait
imul
fld1
push
mov
xchg
ret
cs
add
add
xor
gs
clc
repnz
nop
nop
jae
add
add
add
add
push
nop
push
mov
leave
nop
jmp
add
add
popa
mov
repnz
nop
nop
jae
xchg
mov
repnz
add
add
mov
xchg
ret
in
stos
add
push
push
testl
nop
nop
jae
sbb
or
popa
bound
nop
nop
jae
xchg
add
mov
lahf
mov
clc
repnz
nop
nop
jae
push
add
mov
enter
nop
nop
jae
add
out
add
or
sahf
inc
add
mov
clc
repnz
nop
nop
jae
sbb
push
cmpw
nop
push
mov
leave
nop
jmp
add
add
add
cld
nop
nop
jae
stos
add
add
push
mov
xchg
ret
insb
add
ljmp
push
mov
xchg
ret
add
add
pop
sub
add
cs
jmp
fwait
sbb
add
movsl
icebp
cmp
addl
jl
xorb
loopne
push
mov
xchg
ret
in
add
and
stos
add
clc
repnz
nop
nop
jae
sahf
xor
mov
lret
insb
cmp
repnz
nop
nop
jae
add
xchg
xchg
aas
add
add
fidivl
rcll
and
add
add
add
push
jg
add
fwait
clc
repnz
nop
nop
jae
sbb
mov
jl
add
clc
repnz
nop
nop
jae
popa
mov
or
lea
xchg
ret
add
add
add
call
adc
add
repnz
nop
nop
jae
pop
push
fidivs
movsb
nop
push
mov
leave
nop
jmp
stos
sbb
add
sbb
add
nop
push
mov
leave
nop
jmp
icebp
add
add
ficoms
and
cld
inc
std
stos
sbb
pop
xchg
std
fwait
clc
repnz
nop
nop
jae
add
add
add
mov
add
nop
jmp
add
inc
das
imul
clc
repnz
nop
nop
jae
add
push
jg
add
jno
clc
repnz
nop
nop
jae
mov
and
sub
push
nop
push
mov
leave
nop
jmp
pop
mov
add
pop
push
mov
xchg
ret
fwait
sub
add
and
add
div
clc
repnz
nop
nop
jae
add
in
add
xchg
lret
cmp
clc
repnz
nop
nop
jae
jnp
dec
aas
xchg
jmp
add
repnz
add
push
add
add
mov
xchg
ret
out
add
add
add
jg
add
clc
repnz
nop
nop
jae
outsl
add
in
or
push
mov
xchg
ret
sub
aas
add
mov
or
cld
nop
nop
jae
push
add
imul
mov
xchg
ret
stos
dec
fwait
add
push
jnp
add
test
nop
push
mov
leave
nop
jmp
add
and
add
add
add
clc
repnz
nop
nop
jae
pop
add
add
call
clc
repnz
nop
nop
jae
flds
jnp
dec
fld1
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
daa
add
add
add
clc
repnz
nop
nop
jae
add
fiadds
fidivs
roll
repnz
nop
nop
jae
add
mov
jno
add
dec
cld
lret
popa
out
stos
aas
push
add
inc
add
add
jae
add
mov
add
sbb
add
dec
add
sarb
add
cld
nop
nop
jae
popa
add
add
pop
add
ret
mov
nop
push
mov
leave
nop
jmp
movsl
add
cmc
jne
clc
repnz
nop
nop
jae
sbb
movsb
cmp
nop
push
mov
leave
nop
jmp
add
add
and
je
clc
repnz
nop
nop
jae
insb
stos
jg
add
clc
repnz
nop
nop
jae
add
imull
xor
push
sbb
nop
nop
jae
dec
add
dec
add
mov
mov
clc
repnz
nop
nop
jae
out
add
stos
cs
insb
cld
push
mov
xchg
ret
add
imul
mov
xchg
ret
rorl
push
add
sahf
add
movsl
xor
clc
repnz
nop
nop
jae
jg
cmp
xor
repnz
nop
nop
jae
add
and
mov
xchg
mov
xchg
ret
add
out
add
fwait
add
adc
repnz
nop
nop
jae
aas
add
dec
xchg
in
xchg
push
mov
repnz
nop
nop
jae
add
jg
add
mov
xchg
ret
mov
in
add
dec
add
add
leave
sub
nop
jmp
add
fldcw
push
sti
pop
nop
push
mov
leave
nop
jmp
add
xchg
add
add
daa
lea
nop
push
mov
leave
nop
jmp
add
cs
jmp
je
add
mov
add
add
orb
push
mov
xchg
ret
movsl
add
sbb
outsl
add
nop
push
mov
leave
nop
jmp
imul
add
add
jmp
add
pop
add
daa
mov
xor
add
add
ljmp
nop
jae
sub
imul
mov
nop
nop
jae
push
add
idiv
push
mov
xchg
ret
sub
movsl
add
add
add
je
nop
push
mov
leave
nop
jmp
add
push
mov
leave
nop
jmp
popa
push
std
sub
jg
lret
mov
dec
add
repnz
nop
nop
jae
subl
pop
push
mov
xchg
ret
bound
cs
add
mov
add
clc
repnz
nop
nop
jae
icebp
add
insb
call
pusha
add
cmp
and
add
cld
dec
subl
clc
repnz
nop
nop
jae
add
in
stos
pop
add
add
add
call
repnz
nop
nop
jae
add
popa
add
addl
std
inc
add
add
sbb
add
jg
fcompl
lret
sub
push
mov
xchg
ret
sub
ljmp
mov
xchg
ret
mov
jg
add
testl
mov
xchg
ret
sub
add
outsl
mov
aas
push
sub
mov
xchg
ret
insb
add
add
add
clc
repnz
nop
nop
jae
push
add
aas
add
add
mov
into
mov
cld
nop
nop
jae
jnp
in
add
mov
clc
clc
repnz
nop
nop
jae
xchg
push
add
in
mov
sbbb
inc
add
add
push
add
outsl
out
inc
sub
nop
nop
jae
add
popa
add
add
jl
and
repnz
nop
nop
jae
add
add
cs
push
clc
repnz
nop
nop
jae
add
imul
add
nop
push
mov
leave
nop
jmp
xchg
ljmp
movswl
clc
repnz
nop
nop
jae
add
repnz
pop
add
and
adc
nop
jae
add
pop
sub
clc
repnz
nop
nop
jae
insb
xchg
insb
sarl
outsl
notl
push
mov
xchg
ret
in
mov
cmp
mov
dec
cmp
repnz
nop
nop
jae
add
dec
add
dec
add
pop
cmp
mov
xchg
ret
imul
add
add
lea
mov
xchg
ret
in
sbb
aas
add
add
mov
push
mov
xchg
ret
dec
dec
or
dec
stos
inc
mov
clc
repnz
nop
nop
jae
add
imul
add
clc
repnz
nop
nop
jae
test
cs
cmp
push
mov
xchg
ret
fwait
daa
add
imul
add
repnz
nop
nop
jae
add
and
mov
adc
mov
xchg
ret
imul
out
add
clc
repnz
nop
nop
jae
add
add
add
in
nop
push
mov
leave
nop
jmp
cld
add
in
add
sub
add
repnz
nop
nop
jae
daa
add
push
loopne
repnz
nop
nop
jae
add
add
inc
fwait
mov
inc
or
repnz
nop
nop
jae
add
movsl
bound
mov
xor
sbb
mov
dec
sub
repnz
nop
nop
jae
imul
mov
mov
clc
repnz
nop
nop
jae
popa
cmp
push
lret
add
xor
clc
repnz
nop
nop
jae
add
fsubrp
add
orl
xor
add
nop
push
mov
leave
nop
jmp
mov
add
sbb
push
mov
xchg
ret
add
xchg
add
push
mov
push
clc
repnz
nop
nop
jae
add
mov
add
add
repnz
nop
nop
jae
push
add
insb
hlt
fldl
dec
cmp
push
mov
leave
nop
jmp
fwait
stos
stos
sbb
adc
push
mov
leave
nop
jmp
push
add
pop
icebp
mov
clc
repnz
nop
nop
jae
std
jnp
push
add
sti
test
nop
push
mov
leave
nop
jmp
in
mov
add
lds
add
test
sub
add
nop
push
mov
leave
nop
jmp
add
in
push
addl
clc
repnz
nop
nop
jae
popa
add
inc
and
repnz
popa
add
clc
repnz
nop
nop
jae
sbb
add
pop
aam
inc
mov
clc
repnz
nop
nop
jae
add
movsl
push
adc
clc
repnz
nop
nop
jae
add
testl
repnz
nop
nop
jae
add
add
push
lea
clc
repnz
nop
nop
jae
add
pop
jmp
push
sbb
add
cld
mov
xchg
fld1
clc
repnz
nop
nop
jae
sbb
fscale
sbb
aam
and
jne
clc
repnz
nop
nop
jae
sub
repnz
daa
imul
mov
leave
nop
jmp
and
mov
lret
pop
pushl
nop
push
mov
leave
nop
jmp
fwait
xor
or
cmp
mov
xchg
ret
add
add
movsl
add
inc
mov
push
mov
xchg
ret
add
push
lret
add
add
nop
push
mov
leave
nop
jmp
add
fwait
push
or
clc
repnz
nop
nop
jae
cld
xchg
xor
xchg
add
daa
roll
dec
push
add
add
daa
add
pop
add
pop
clc
repnz
nop
nop
jae
sub
movsl
add
add
repnz
nop
nop
jae
mov
stos
xor
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
pop
add
pop
clc
repnz
nop
nop
jae
dec
stos
test
cmp
mov
clc
repnz
nop
nop
jae
in
xor
add
push
add
rcrb
mov
xchg
ret
add
icebp
push
std
mov
repnz
nop
nop
jae
sahf
dec
add
stos
add
add
nop
push
mov
leave
nop
jmp
imul
jg
mov
add
pop
add
clc
repnz
nop
nop
jae
add
jnp
leave
or
add
repnz
nop
nop
jae
mov
cs
push
push
mov
xchg
ret
mov
xchg
push
and
popa
stos
cmp
add
repnz
nop
nop
jae
ljmp
sub
add
add
jg
add
std
sbb
repnz
repnz
nop
nop
jae
test
bound
xorl
clc
repnz
nop
nop
jae
jg
add
sbb
add
jne
clc
repnz
nop
nop
jae
ljmp
sti
nop
push
mov
leave
nop
jmp
fwait
movsl
cs
push
mov
add
daa
add
nop
push
add
cwtl
add
in
dec
add
xlat
mov
push
mov
xchg
ret
add
dec
add
add
push
clc
repnz
nop
nop
jae
add
add
add
repnz
scas
or
jns
clc
repnz
nop
nop
jae
repnz
sub
add
sbb
inc
add
call
clc
repnz
nop
nop
jae
add
std
dec
lret
sar
repnz
nop
nop
jae
in
add
mov
mov
fcmovnu
sbb
push
mov
xchg
ret
rcrl
add
add
nop
push
mov
leave
nop
jmp
add
xchg
push
clc
repnz
nop
nop
jae
sub
adc
repnz
nop
nop
jae
sbb
mov
mov
pop
inc
add
add
add
add
imul
mov
clc
repnz
nop
nop
jae
add
push
add
add
repnz
nop
nop
jae
add
mov
add
ret
mov
clc
repnz
nop
nop
jae
add
add
push
call
nop
push
mov
leave
nop
jmp
popa
bound
add
add
push
mov
leave
nop
jmp
popa
add
add
add
repnz
nop
nop
jae
add
add
mov
jne
inc
add
add
imul
add
cmp
nop
push
mov
leave
nop
jmp
add
in
mov
clc
repnz
nop
nop
jae
mov
pop
add
mov
xchg
ret
push
xchg
imull
add
andb
nop
push
mov
leave
nop
jmp
add
roll
insb
add
sti
not
nop
push
mov
leave
nop
jmp
add
test
movsl
divl
xchg
push
mov
xchg
ret
add
xor
imul
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
mov
imul
arpl
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
popa
and
sti
sub
clc
repnz
nop
nop
jae
xchg
fwait
std
pop
add
out
add
nop
push
mov
leave
nop
jmp
add
add
push
jae
add
insb
add
jg
add
cmp
pause
push
mov
leave
nop
jmp
imul
test
sub
outsl
call
clc
repnz
nop
nop
jae
add
stos
add
pop
clc
repnz
nop
nop
jae
fwait
add
add
add
mov
leave
push
clc
repnz
nop
nop
jae
add
add
stos
daa
add
scas
lahf
jl
nop
push
mov
leave
nop
jmp
add
movzwl
clc
repnz
nop
nop
jae
add
outsl
add
push
add
sub
pop
add
push
mov
xchg
ret
fwait
std
flds
add
add
push
mov
xchg
ret
addl
add
push
add
add
repnz
nop
nop
jae
in
std
push
test
cld
nop
nop
jae
add
add
fld1
clc
repnz
nop
nop
jae
and
add
mov
add
ror
push
mov
xchg
ret
cs
flds
cmp
sub
mov
xchg
ret
outsl
std
fnstenv
add
test
add
nop
push
mov
leave
nop
jmp
sub
add
testl
cld
nop
nop
jae
jnp
add
add
or
add
loop
inc
add
push
movsl
imul
add
mov
xchg
ret
popa
jnp
mov
add
test
pop
stc
incl
addl
std
xchg
add
xchg
add
ret
daa
test
fwait
add
push
mull
push
add
add
add
repnz
nop
nop
jae
or
sbb
test
add
dec
inc
clc
repnz
nop
nop
jae
add
or
nop
push
mov
leave
nop
jmp
add
add
xchg
fwait
sub
jmp
add
add
nop
jae
sub
test
repnz
nop
nop
jae
repnz
add
xor
ljmp
clc
repnz
nop
nop
jae
mov
and
cs
in
leave
nop
jmp
addl
add
jp
mov
push
mov
leave
nop
jmp
fwait
shr
sub
mov
nop
push
mov
leave
nop
jmp
xchg
add
pop
imul
nop
push
mov
leave
nop
jmp
sub
test
dec
insb
filds
cld
nop
nop
jae
push
jnp
flds
add
fwait
clc
repnz
nop
nop
jae
insb
popa
icebp
add
ljmp
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
sbb
mov
sahf
cld
jnp
cmpl
nop
push
mov
leave
nop
jmp
add
std
imul
cld
nop
nop
jae
add
add
inc
and
sub
sti
push
mov
add
fdivp
into
add
fwait
aam
mov
repnz
repnz
nop
nop
jae
jnp
add
xor
call
nop
jae
daa
stos
imul
in
leave
nop
jmp
sub
fldcw
pop
add
mov
repnz
nop
nop
jae
add
pop
push
mov
xchg
ret
insb
or
add
test
nop
nop
jae
add
daa
add
add
inc
add
negb
pop
add
cld
nop
nop
jae
outsl
add
add
imul
and
clc
repnz
nop
nop
jae
add
mov
mov
add
add
ljmp
and
pop
clc
repnz
nop
nop
jae
xchg
stos
in
add
push
out
add
add
push
clc
repnz
nop
nop
jae
xchg
bound
inc
add
stos
sbb
in
rorl
repnz
nop
nop
jae
insb
mov
or
repnz
nop
nop
jae
jnp
add
insb
add
add
repnz
nop
nop
jae
dec
add
mov
add
push
mov
xchg
ret
bound
push
xor
add
nop
push
mov
leave
nop
jmp
and
xchg
add
in
jne
clc
repnz
nop
nop
jae
push
add
clc
repnz
nop
nop
jae
mov
cs
xchg
sbb
mov
push
mov
xchg
ret
popa
cmp
add
add
dec
mov
nop
push
mov
leave
nop
jmp
sub
filds
inc
cmp
repnz
nop
nop
jae
cld
add
push
cmp
pop
add
sbb
mov
xchg
ret
imul
sbbl
clc
repnz
nop
nop
jae
add
jg
cmp
sub
inc
add
test
nop
push
mov
leave
nop
jmp
in
dec
add
push
clc
repnz
nop
nop
jae
add
fisttps
nop
nop
jae
add
xor
add
int3
push
push
push
mov
xchg
ret
pop
mov
push
andl
or
fstpt
add
add
add
imul
push
push
mov
xchg
ret
fwait
add
add
clc
repnz
nop
nop
jae
add
cld
in
add
and
xor
clc
repnz
nop
nop
jae
mov
add
adc
repnz
nop
nop
jae
add
add
push
add
div
nop
push
mov
leave
nop
jmp
and
movsl
cli
mov
jne
inc
add
add
xchg
add
sub
ljmp
add
nop
jmp
test
stos
push
imul
clc
repnz
nop
nop
jae
push
imul
add
cld
push
inc
sbb
repnz
nop
nop
jae
popa
sahf
cmp
clc
repnz
nop
nop
jae
push
sbb
in
sbb
repnz
nop
nop
jae
add
movsl
sub
add
jae
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
sub
popa
add
add
dec
call
jmp
mov
xchg
ret
dec
insb
add
add
dec
rol
push
mov
xchg
ret
aas
cs
test
jne
push
mov
xchg
ret
stos
test
push
add
pop
xor
clc
repnz
nop
nop
jae
cmp
pop
mov
cld
clc
repnz
nop
nop
jae
push
add
shl
push
insb
add
sti
nop
push
mov
leave
nop
jmp
add
add
popa
andl
add
cmp
fwait
xchg
add
push
mov
cld
nop
nop
jae
add
repnz
repz
clc
repnz
nop
nop
jae
add
pop
outsb
inc
add
inc
test
pop
sub
sub
lea
push
mov
xchg
ret
insb
icebp
add
add
add
fisttpll
push
mov
leave
nop
jmp
fisubrs
ftst
add
xchg
push
clc
repnz
nop
nop
jae
out
add
add
add
add
cld
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
popa
in
fwait
mov
clc
repnz
nop
nop
jae
push
popa
fwait
stos
add
ljmp
nop
nop
jae
pop
and
add
jb
mov
add
cwtl
loopne
add
push
es
jecxz
repnz
nop
nop
jae
add
xor
xor
cwtl
mov
add
movzwl
clc
repnz
nop
nop
jae
out
sahf
imul
add
clc
repnz
nop
nop
jae
inc
popa
add
jmp
pop
push
mov
xchg
ret
repnz
add
inc
push
mov
xchg
ret
add
add
stos
add
bound
jnp
push
mov
xchg
ret
add
add
imul
mov
add
je
xor
clc
repnz
nop
nop
jae
add
mov
test
clc
repnz
nop
nop
jae
add
push
fldcw
mov
xchg
ret
add
sub
mov
push
mov
xchg
ret
subl
jbe
nop
push
mov
leave
nop
jmp
mov
add
in
leave
nop
jmp
push
icebp
add
add
jns
clc
repnz
nop
nop
jae
add
out
in
add
sub
add
movzwl
nop
push
mov
leave
nop
jmp
daa
repnz
daa
sub
push
mov
leave
nop
jmp
add
out
fiadds
insb
roll
addr16
push
mov
xchg
ret
out
push
add
xchg
add
jne
clc
repnz
nop
nop
jae
add
mov
repnz
nop
nop
jae
outsl
add
test
std
lret
dec
add
sbb
and
lret
add
add
add
sub
inc
jne
clc
repnz
nop
nop
jae
add
and
add
push
mov
xchg
ret
add
rcrl
add
fistpl
clc
repnz
nop
nop
jae
pop
pop
push
in
dec
imul
call
add
sub
add
dec
mov
add
add
repz
nop
push
mov
leave
nop
jmp
add
icebp
ficoms
repnz
nop
nop
jae
push
cmp
add
push
add
cli
insb
add
lcall
sbb
imul
out
in
add
mov
repnz
nop
nop
jae
fiadds
add
add
repnz
nop
nop
jae
add
repnz
add
mov
leave
nop
jmp
and
dec
add
into
adc
nop
nop
jae
mov
xor
add
mov
clc
repnz
nop
nop
jae
fimuls
pop
repnz
add
add
clc
repnz
nop
nop
jae
cld
add
movsl
data16
fistpl
clc
repnz
nop
nop
jae
sub
add
add
loopne
add
clc
repnz
nop
nop
jae
add
add
out
stos
push
push
mov
xchg
ret
add
insb
shll
orl
add
nop
jmp
test
dec
add
jle
aad
push
mov
xchg
ret
add
sub
imul
push
clc
repnz
nop
nop
jae
pop
imul
in
movsl
add
push
mov
xchg
ret
xchg
sub
sub
inc
add
xbegin
jae
xor
add
fincstp
sub
clc
xor
lret
mov
clc
repnz
nop
nop
jae
add
imul
repnz
nop
nop
jae
aas
ljmp
add
mov
stc
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
sub
add
nop
push
mov
leave
nop
jmp
add
add
add
daa
subl
nop
nop
jae
add
add
fisubrs
clc
repnz
nop
nop
jae
sub
sub
movsl
fwait
sbb
add
dec
nop
push
mov
leave
nop
jmp
dec
in
add
add
sbb
test
add
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
add
add
je
clc
repnz
nop
nop
jae
stos
ljmp
jns
add
push
roll
add
add
mov
fwait
push
mov
xchg
ret
add
outsl
add
add
test
dec
xor
push
mov
xchg
ret
push
add
sub
xor
push
aas
dec
clc
repnz
nop
nop
jae
pop
add
xchg
add
xorl
fld1
clc
repnz
nop
nop
jae
imul
add
nop
nop
jae
add
mov
add
enter
pop
add
arpl
add
repnz
nop
nop
jae
push
mov
push
add
nop
nop
jae
test
add
aas
add
nop
push
mov
leave
nop
jmp
add
sub
shl
clc
repnz
nop
nop
jae
add
add
add
es
pop
clc
repnz
nop
nop
jae
sahf
add
add
add
xchg
add
clc
repnz
nop
nop
jae
add
sub
cld
nop
nop
jae
outsl
add
add
add
std
call
nop
jmp
add
test
cld
nop
nop
jae
add
add
cmpsb
jo
pop
add
clc
repnz
nop
nop
jae
push
push
add
pop
add
repz
clc
repnz
nop
nop
jae
sahf
mov
add
mov
jbe
clc
repnz
nop
nop
jae
add
add
mov
adc
push
mov
leave
nop
jmp
icebp
cmp
add
sbb
push
fwait
clc
repnz
nop
nop
jae
jg
push
add
add
sbb
mov
xchg
ret
add
push
or
in
aad
nop
push
mov
leave
nop
jmp
sbb
imul
push
mov
clc
repnz
nop
nop
jae
in
testl
out
jge
clc
repnz
nop
nop
jae
add
dec
out
add
adc
nop
nop
jae
add
add
mov
mov
leave
nop
jmp
add
add
mov
movsb
clc
repnz
nop
nop
jae
add
mov
add
add
add
clc
repnz
nop
nop
jae
add
add
add
cmp
cld
nop
nop
jae
fnstcw
add
mov
nop
push
mov
leave
nop
jmp
pop
add
mov
push
mov
xchg
ret
add
add
lea
test
add
clc
repnz
nop
nop
jae
insb
stos
add
add
mov
push
mov
xchg
ret
add
add
add
sahf
add
mov
leave
nop
jmp
add
fwait
popa
add
add
add
add
clc
repnz
nop
nop
jae
imul
push
mov
xchg
ret
and
ljmp
call
nop
jmp
add
add
clc
repnz
nop
nop
jae
mov
inc
mov
clc
repnz
nop
nop
jae
cs
add
stos
stos
stos
pop
adc
je
fsts
repnz
nop
nop
jae
pop
jnp
in
add
imul
add
out
out
clc
clc
repnz
nop
nop
jae
add
pop
bound
add
inc
push
mov
xchg
ret
insb
mov
add
add
push
jne
clc
repnz
nop
nop
jae
mov
add
lret
in
pusha
clc
repnz
nop
nop
jae
mov
cld
add
xchg
mov
nop
push
mov
leave
nop
jmp
push
add
sbb
push
dec
nop
push
mov
leave
nop
jmp
push
add
mov
dec
add
jmp
imul
stos
in
add
add
out
add
cmp
push
mov
xchg
ret
add
in
push
clc
repnz
nop
nop
jae
add
add
popa
clc
repnz
nop
nop
jae
fisubrs
push
sub
add
push
add
push
mov
xchg
ret
aas
push
add
mov
mov
repnz
nop
nop
jae
add
testl
dec
add
test
mov
leave
nop
jmp
icebp
testl
call
clc
repnz
nop
nop
jae
push
add
push
dec
mov
push
mov
xchg
ret
sbb
add
dec
add
add
clc
repnz
nop
nop
jae
aas
add
into
mov
clc
repnz
nop
nop
jae
add
bound
add
cmp
push
mov
xchg
ret
push
add
add
add
xor
clc
repnz
nop
nop
jae
add
push
add
sbb
rep
clc
repnz
nop
nop
jae
in
add
stos
push
add
mov
repnz
nop
nop
jae
fwait
imul
sub
sbb
push
mov
xchg
ret
add
add
out
add
push
mov
xchg
ret
add
add
add
add
xor
pause
push
mov
leave
nop
jmp
add
mov
mov
repnz
nop
nop
jae
add
out
icebp
add
and
push
mov
xchg
ret
lret
add
inc
outsl
add
add
nop
push
mov
leave
nop
jmp
icebp
add
in
add
outsl
mov
clc
repnz
nop
nop
jae
add
add
xchg
add
pop
call
nop
jmp
pop
in
add
add
clc
repnz
nop
nop
jae
push
push
add
add
dec
bound
nop
push
mov
leave
nop
jmp
mov
add
cld
add
mov
xchg
ret
add
pop
add
flds
add
lret
push
push
mov
xchg
ret
push
add
add
add
pop
js
out
pop
clc
repnz
nop
nop
jae
fwait
add
and
mov
clc
repnz
nop
nop
jae
add
add
fdivrp
clc
nop
push
nop
push
mov
leave
nop
jmp
add
popa
add
add
add
push
and
add
add
insb
add
add
mov
cmp
jae
push
mov
leave
nop
jmp
and
insb
add
cmpsl
push
clc
repnz
nop
nop
jae
add
imul
push
mov
leave
nop
jmp
in
add
imul
add
push
cmp
nop
push
mov
leave
nop
jmp
std
sbb
add
xor
cltd
pop
nop
push
mov
leave
nop
jmp
sub
sub
push
add
in
leave
nop
jmp
aas
fiadds
sub
jmp
add
addl
sub
add
add
jge
add
add
add
ljmp
mov
clc
repnz
nop
nop
jae
mov
mov
clc
repnz
nop
nop
jae
or
insb
add
jmp
xchg
xchg
ret
add
add
imul
push
mov
leave
nop
jmp
stos
mov
cs
add
push
mov
xchg
ret
add
add
add
imul
cmp
loope
repnz
nop
nop
jae
add
add
jns
dec
push
clc
repnz
nop
nop
jae
add
add
insb
push
mov
nop
push
mov
leave
nop
jmp
push
xchg
popa
lea
repnz
nop
nop
jae
movsl
add
mov
add
sbb
pop
add
in
leave
nop
jmp
rcrl
pop
add
outsl
in
ja
lret
clc
repnz
nop
nop
jae
add
stos
stos
bound
jne
loopne
nop
push
mov
leave
nop
jmp
add
add
add
cld
nop
nop
jae
add
push
in
cs
jecxz
sbbl
nop
nop
jae
add
xchg
push
push
mov
xchg
ret
push
add
add
add
jg
fldl
mov
leave
nop
jmp
sahf
add
add
add
nop
push
mov
leave
nop
jmp
add
out
cs
push
add
sub
add
jge
inc
add
aas
sahf
add
stos
jns
jns
clc
repnz
nop
nop
jae
imull
push
add
push
clc
repnz
nop
nop
jae
add
out
xchg
sbb
cld
nop
nop
jae
lret
add
outsl
xor
in
adc
repnz
nop
nop
jae
and
add
add
add
push
mov
leave
nop
jmp
and
imul
in
add
add
enter
add
sub
inc
sub
sbb
pop
add
fs
jns
add
cltd
hlt
cmp
jno
sub
add
add
scas
sbb
mov
mov
lret
sub
mov
add
popa
lods
pop
call
add
out
add
pop
jb
dec
add
enter
dec
aam
push
add
stos
fadd
cmpsl
xor
mov
add
iret
push
int3
cmpsl
mov
jb
jge
jns
jo
bnd
adc
mov
or
mov
rorb
inc
add
add
adc
pop
add
or
pusha
add
mov
inc
add
insl
and
add
add
cmp
ljmp
add
dec
add
sbb
push
stc
rol
in
lods
gs
jbe
ror
sbb
mov
push
add
add
pop
jno
lret
mov
cmp
mov
loop
add
cmc
mov
add
add
add
movsl
xchg
leave
add
add
or
push
add
inc
mov
sti
ficoms
lret
jle
aaa
inc
add
add
mov
push
jmp
pop
add
or
xchg
repz
movsb
test
cmpsl
pop
or
xchg
add
push
add
xchg
add
rcll
jg
add
lds
inc
and
jno
xchg
jne
loopne
add
add
gs
movb
ljmp
adc
or
or
jns
xor
adc
lahf
das
in
bound
frstor
pop
push
dec
add
add
add
xchg
add
test
sbb
cld
sub
sub
das
xor
fisubrl
mov
movsb
pusha
add
sbb
sbb
add
aad
loopne
add
sub
add
pusha
add
add
fisubs
or
adc
shlb
rclb
add
pop
inc
add
cmp
mov
mov
add
test
movsl
std
and
in
adc
es
xlat
lods
std
cmpsb
xchg
cld
xchg
stos
stc
and
add
add
dec
push
nop
scas
adcl
test
and
push
add
add
into
in
xchg
les
and
pop
loop
add
jmp
mov
xor
fcoml
add
insl
sbb
cmp
mov
add
sbbb
inc
fprem1
push
testb
add
add
add
mov
into
xchg
or
push
add
xchg
mov
mov
add
jae
sbb
add
stc
jae
mov
sbb
push
mov
sbb
cmc
push
add
fdivs
sub
rol
mov
cwtl
lret
xchg
stos
add
loopne
cmpsb
sbb
subb
add
cmp
sahf
or
adcb
add
add
add
bound
add
pop
xor
fcomip
in
xchg
sub
dec
push
inc
and
ljmp
add
or
sub
mov
add
sbb
sub
push
dec
add
push
add
popa
push
add
add
movsl
aaa
adc
nop
xor
push
pop
add
and
add
filds
add
hlt
in
add
pop
pushf
pop
enter
add
fwait
cmpsl
fstpl
xor
lret
in
dec
jbe
pop
ss
push
add
add
add
add
iret
pusha
add
icebp
xor
idivl
adc
add
stos
pop
add
fcomps
movsb
insl
ljmp
lahf
shrb
add
inc
or
mov
jge
jmp
add
outsb
add
scas
call
xlat
xchg
filds
inc
add
xor
cld
jmp
add
add
xchg
jg
fisttpll
test
int
fstl
pop
scas
mov
add
add
fstpt
jge
adc
cmpsl
aad
add
push
add
test
lods
shlb
pusha
add
mov
add
lods
add
dec
mov
mov
jmp
cmpsb
test
mov
btr
xor
fs
je
mov
pop
and
test
add
add
pushf
imul
or
scas
jno
insl
or
add
push
jmp
sub
pusha
add
sbb
add
pop
mov
jne
add
lods
cmpsb
and
cmpsb
push
add
repz
mov
lods
add
add
lahf
mov
test
pop
xor
and
js
add
pop
add
pop
add
add
sub
and
jae
add
and
mov
add
sbb
call
add
dec
mov
add
jne
divl
sub
add
mov
fs
push
add
jno
add
sub
lahf
enter
data16
add
xor
mov
mov
push
sarl
movsb
cmc
add
aam
ss
pop
add
or
lds
daa
sub
and
xchg
mov
pusha
add
pop
add
pushf
repz
sub
mov
add
jle
sub
test
add
add
stc
out
js
xchg
repnz
xchg
leave
pushf
daa
js
push
add
sub
test
add
add
lahf
add
add
push
add
add
cmpsl
movsb
repz
scas
inc
add
add
or
add
jo
jae
fistpll
and
and
call
and
gs
adc
xor
aas
fdivrl
inc
scas
adc
mov
add
cmpsl
sub
sub
jne
jecxz
das
dec
add
dec
mov
in
roll
jnp
push
pop
add
add
and
ljmp
cltd
sub
mov
cmp
add
sub
scas
andb
push
add
push
dec
push
add
add
push
add
jno
add
cmp
imul
mov
mov
add
pop
sub
mov
push
pop
add
add
fcompl
out
xor
sahf
imul
ret
inc
mov
daa
mov
icebp
stc
fsubl
mov
adc
add
cmp
je
loope
add
sbb
cmp
outsb
add
cmp
mov
into
sub
arpl
inc
add
mov
les
hlt
outsl
mov
fwait
xchg
mov
out
add
push
cmpsb
mov
and
add
add
and
add
add
aam
dec
add
add
pop
jbe
cmc
loop
sub
jae
add
fidivrl
or
ret
sbb
xor
add
push
add
mov
dec
xchg
xchg
faddl
add
in
add
iret
adc
test
add
mov
pop
add
test
mov
add
add
xor
fisubl
mov
add
mov
lea
add
lcall
add
add
add
test
stos
sar
arpl
mov
and
push
add
test
add
add
insl
inc
add
daa
test
add
add
pop
xchg
shrl
mov
outsl
adc
add
and
add
adc
and
mov
cmp
push
add
mov
add
add
add
mov
imul
add
je
shlb
popa
scas
je
loopne
shrb
das
jb
fs
decb
mov
loope
add
sar
ror
push
adc
dec
xor
test
add
xchg
pop
add
dec
dec
mov
add
out
push
cld
mov
test
mov
add
cld
mov
add
add
fidivrl
xchg
pop
push
add
fidivrs
cmpsb
mov
add
popf
adc
push
in
jge
add
shlb
add
push
add
jb
cmp
mov
jmp
inc
repz
or
cs
mov
cmp
push
imul
in
not
mov
leave
and
imul
lret
mov
into
push
test
arpl
sbb
xor
and
add
js
mov
add
mov
sbb
loop
push
add
push
dec
lret
repz
add
rcll
push
add
inc
add
xchg
fisttps
push
and
out
fstpt
data16
add
push
repz
pop
add
les
arpl
add
mov
repnz
xchg
out
mov
sub
mov
add
sub
push
add
sbb
fmul
jns
sbb
rcl
jbe
repnz
ja
hlt
and
add
movsl
xor
and
add
icebp
cmp
dec
add
push
lds
jne
add
pop
jb
int3
fsubr
outsb
add
iret
shrl
add
test
add
and
dec
sbb
mov
sarb
jmp
lods
mov
ss
fstl
outsl
fwait
xchg
and
jae
imul
pushf
bound
xchg
popf
test
data16
paddw
add
add
add
and
inc
aas
cmp
loope
add
stc
fwait
inc
or
mov
add
and
popa
add
add
cmpsb
and
invd
add
dec
jns
pop
add
decb
push
add
add
loope
add
lcall
jae
fmul
ja
stos
mov
jae
mov
lods
jno
add
add
cmp
add
in
jbe
shl
into
mov
test
or
add
imul
mov
mov
into
push
add
jg
gs
push
add
ds
leave
je
jl
mov
adc
addr16
cmp
sbb
int3
mov
add
std
xchg
jns
dec
out
mov
out
cmpsb
fstps
push
add
push
or
add
add
mov
add
add
mov
xchg
scas
inc
add
xchg
cmpl
dec
add
push
add
jg
loop
jp
xor
cmp
fdivs
mov
cmp
sub
sub
out
cld
inc
add
dec
add
xlat
testl
mov
or
out
mov
dec
add
xlat
cmc
imul
jo
andb
add
and
aad
add
sub
insb
add
add
push
add
lods
xorl
adc
push
faddl
xor
push
call
pop
hlt
jnp
lds
cmp
call
add
add
hlt
sub
pusha
add
sbbb
addr16
push
add
mov
sbb
add
int
inc
fwait
outsl
pop
loope
and
popa
arpl
push
add
mov
xchg
pop
add
testb
pop
add
fs
add
sbb
bound
xor
data16
mov
sub
int
fs
dec
mov
add
cmp
adc
hlt
jo
pop
movsb
add
add
lret
cmp
jns
add
xchg
pop
repz
mov
lods
xor
mov
jmp
add
fdivl
add
in
adc
xor
pop
dec
add
sahf
cwtl
sbb
add
dec
add
pop
sbb
dec
add
mov
rorb
and
out
push
add
add
mov
lods
add
mov
rclb
lcall
popf
pop
lods
lret
xlat
push
add
add
jmp
adc
ret
add
sub
lods
fdecstp
mov
aad
icebp
lods
ja
add
inc
add
dec
and
je
outsl
inc
sbb
jmp
sub
daa
test
cmp
dec
add
add
aas
fprem1
cltd
ret
inc
dec
xchg
ficoms
pop
add
mov
jge
es
test
orb
add
add
sti
dec
and
push
in
add
add
data16
pushf
cmp
push
sti
data16
add
clc
fucom
lea
pushf
adc
add
pop
lods
setns
adc
cmp
nop
cmc
push
add
aaa
xor
and
sbb
lret
cmpsl
mov
sbb
jp
mov
dec
add
add
jno
loopne
imul
inc
add
stos
pop
mov
dec
add
addr16
test
in
mov
push
add
add
add
add
inc
add
dec
pusha
add
xor
or
add
add
cld
mov
mov
add
jne
cmpsb
push
add
jb
mov
jne
add
add
add
cmp
insl
hlt
jl
add
movsl
test
add
rolb
add
addr16
sahf
xorb
notl
add
pop
add
add
add
xchg
push
std
rolb
fisttpl
out
push
lret
xor
negl
stos
fwait
jmp
sti
out
jle
in
repz
add
mov
bound
sub
mov
popf
pushf
movsl
rcl
xor
scas
insl
jb
test
add
jmp
mov
pop
jge
adc
jb
sub
imul
jne
fucomi
adc
dec
add
ficomps
iret
rol
or
sbb
mov
mov
in
add
mov
xchg
ljmp
bound
roll
add
add
inc
add
cli
push
outsl
fwait
xor
mov
xchg
mov
pop
add
je
push
add
push
add
add
and
xchg
mov
add
add
sub
mov
inc
jge
and
out
jp
xchg
ds
add
dec
pusha
add
stos
mov
add
mov
loop
add
lea
push
add
call
into
cwtl
insb
add
push
add
xchg
loope
dec
add
fsubl
add
lret
add
push
add
add
dec
add
add
xchg
mov
imul
add
adc
add
in
std
aad
scas
pop
add
push
jge
mov
ficompl
arpl
daa
insb
add
les
adc
icebp
and
test
xchg
js
xor
add
scas
add
ja
add
lea
add
pushf
outsl
gs
add
push
mov
inc
add
insl
out
xor
dec
add
jle
shr
add
or
mov
xchg
pop
adc
xchg
aam
jno
xchg
xchg
ret
xchg
adcl
add
movsb
std
dec
add
mov
adc
into
insb
add
xlat
pushf
dec
add
jg
nop
gs
test
push
fdivl
add
push
or
cmc
jge
sahf
shl
into
scas
push
add
add
add
push
add
sbb
push
add
sbbl
add
int3
filds
add
ja
dec
add
add
in
fs
mov
or
jo
dec
and
jns
sbb
mov
jg
add
iret
setg
or
sub
add
nop
dec
add
dec
add
add
fstps
add
adc
mov
mov
arpl
mov
pop
movsb
ds
rclb
jge
mov
mov
int3
jo
jbe
xchg
rcrb
shll
cmp
test
pop
add
cmp
ds
dec
add
push
fstps
mov
and
mov
add
add
add
int3
sbb
call
pop
add
xlat
sti
repz
icebp
sbb
fidivl
push
mov
cld
mov
lods
pop
add
add
sahf
inc
add
push
add
outsl
dec
add
or
add
aas
xchg
xlat
dec
pusha
add
mov
stos
iret
push
add
and
mov
xchg
add
mov
loope
scas
dec
add
push
add
fsub
hlt
shrl
add
bound
stos
inc
das
decl
mov
pop
sarl
xchg
mov
add
hlt
xlat
jmp
jne
inc
add
add
and
cltd
jnp
add
inc
fimull
jge
add
add
bound
cwtl
cmp
pop
sub
mull
incb
dec
sub
jae
shl
outsb
add
xor
cmp
add
and
aad
lret
mov
add
dec
add
mov
shr
mov
add
and
dec
ja
add
lea
add
xlat
les
cmp
pop
push
add
push
xchg
add
add
xchg
mulb
lahf
pop
jno
mov
ljmp
jmp
pop
add
movsl
lock
inc
add
or
inc
jnp
fmull
add
lahf
push
or
add
push
add
lahf
pop
sub
inc
push
add
add
nop
add
sub
rolb
add
lea
mov
add
mov
jb
or
push
add
test
pop
hlt
push
fistl
dec
add
sub
lret
ret
push
add
cmpb
mov
loope
add
imul
mov
pop
add
hlt
out
add
add
aad
dec
push
jne
add
mov
mov
arpl
daa
pop
les
add
call
fstps
shlb
cmp
push
adc
fidivrl
add
lock
pop
out
sbb
mov
rcr
or
sub
rol
sti
out
jo
cmpsb
ficoml
mov
out
cmp
fildll
add
add
ror
xchg
out
test
in
pop
inc
popf
add
xlat
fbld
loopne
add
pop
add
shl
data16
add
icebp
fcoms
push
sahf
popa
in
and
sbb
or
lahf
sub
dec
enter
push
add
add
add
mov
lea
mov
mov
std
mov
add
cld
mov
pusha
add
sub
dec
add
bound
jae
mov
xorb
clc
bound
lcall
and
arpl
daa
int3
adcb
add
add
add
bound
mov
sti
icebp
into
jl
jns
sti
ljmp
add
test
push
fdivrs
std
jo
push
add
and
fildll
add
pop
add
popf
mov
xor
test
daa
insl
mov
pushf
jbe
inc
add
add
adc
daa
das
test
add
inc
jno
dec
jbe
shl
add
sbb
xchg
scas
pop
add
jle
loop
add
test
adc
add
cmpsl
stc
shll
push
add
dec
add
xchg
inc
add
scas
xor
inc
add
repnz
imul
add
add
add
xchg
push
add
rcrb
push
add
sbb
add
mov
xchg
shlb
cmp
xlat
sti
xchg
mov
pop
adc
add
add
cmpb
jp
push
add
dec
add
movb
mov
mov
xor
mov
lea
mov
add
add
jae
ja
loopne
arpl
outsb
add
idivl
add
and
into
mov
pop
mov
and
xchg
pusha
add
jns
adc
inc
add
adc
mov
add
mov
fstps
pop
pshufw
sahf
mov
add
icebp
les
clc
add
add
pushf
xchg
inc
add
ret
pop
add
add
in
sub
shll
frstor
fidivl
jne
sysret
testl
dec
add
adc
in
jne
cwtl
pusha
add
mov
add
dec
cmc
cmp
pop
fsubrl
add
data16
xlat
lcall
xor
pop
add
outsl
xchg
xchg
add
add
jbe
fdivrs
add
movb
jae
pop
mov
add
fdivl
movsl
int
daa
xchg
enter
adc
add
mov
add
push
add
jle
cmp
loope
add
ret
jnp
cmpsl
lods
out
out
or
add
imul
cli
mov
popf
add
aas
add
add
fcmovnu
hlt
add
shlb
repz
and
add
add
dec
gs
ljmp
dec
add
dec
add
add
add
push
add
test
add
add
push
add
xor
rorl
add
imul
add
frstor
xlat
xchg
mov
inc
add
add
add
and
mov
addr16
dec
add
add
decb
add
sarl
shll
icebp
jecxz
or
cltd
xchg
bound
adc
xchg
sub
add
mov
add
jbe
jae
mov
cwtl
sahf
dec
add
ds
jge
mov
xchg
mov
push
add
jo
mov
push
add
iret
xchg
pusha
add
outsl
push
add
lock
xor
outsb
add
or
add
nop
and
add
cmc
mov
add
aas
test
scas
push
add
mov
xor
rclb
out
adc
add
xchg
jb
daa
pop
add
add
add
shll
add
icebp
movsb
pusha
add
add
arpl
xchg
inc
add
lods
jge
add
sub
nop
call
add
in
int3
lret
push
scas
add
add
inc
add
add
aaa
inc
add
push
add
dec
mov
aam
add
daa
and
shlb
cld
jb
mov
add
insl
sub
jo
fdivl
mov
pop
xor
pop
and
lahf
out
add
call
es
and
adc
das
decl
jne
loop
add
sub
cmp
data16
add
pop
add
shrl
add
jmp
idivl
add
mov
add
inc
roll
add
shr
jle
shll
add
inc
jl
dec
xor
repz
cmove
push
add
hlt
add
push
pop
add
sub
add
add
mov
add
jae
std
nop
add
dec
add
add
stos
xchg
fisubs
add
add
mov
icebp
mov
adc
cmp
pop
test
add
add
dec
and
mov
push
add
sti
push
add
add
add
add
ret
mov
xchg
scas
mov
test
push
add
out
test
add
popf
int
add
cmp
and
mov
dec
add
es
mov
add
pushf
test
push
int
cmp
fwait
mov
pop
add
out
lcall
xchg
imul
mov
add
iret
mov
add
jb
cmp
mov
add
cmp
xor
shrb
sahf
jnp
lds
xchg
mov
and
pop
sbb
add
jle
stc
adc
bound
cli
mov
pop
add
add
push
add
add
cmpb
js
xor
or
sbb
sbb
mov
in
add
movsl
pop
cmp
sbb
ret
dec
cli
xchg
sbb
jns
sbb
mov
and
pop
mov
inc
add
div
popf
test
xlat
fbld
test
add
imul
rolb
inc
add
xlat
sarl
scas
mov
pusha
add
add
push
pushf
adc
or
movsb
add
pushf
cld
xchg
or
pop
jle
arpl
add
pop
push
jns
mov
add
cld
pop
add
mov
add
cmp
shlb
add
add
cwtl
cltd
cwtl
ret
and
shlb
add
add
in
add
xor
in
aam
add
hlt
mov
xchg
shlb
or
add
dec
mov
mov
ds
jb
ret
add
pop
int
ljmp
mov
add
add
and
sarb
sbb
xlat
jb
mov
add
jl
xchg
leave
psubb
adc
jl
add
cltd
stc
repnz
aaa
adc
add
mov
add
imul
sub
jne
mov
add
cwtl
mov
jge
push
add
push
das
lea
or
ret
lret
pop
add
imul
orb
push
add
add
xor
daa
stos
out
and
xor
jnp
add
mov
fcmovnu
mov
xor
adc
add
add
push
push
dec
dec
add
dec
add
mov
add
adc
push
add
add
push
add
std
mov
je
js
mov
jl
je
mov
sbb
pop
add
repz
add
xlat
sbb
add
add
add
xchg
xchg
add
test
sub
adc
popf
mov
andl
popa
dec
add
aaa
daa
xchg
dec
add
mov
add
mov
add
add
test
inc
out
mov
enter
les
inc
push
add
add
icebp
hlt
adc
add
xor
imul
sbb
and
mov
testl
push
add
addr16
add
je
or
testb
add
js
hlt
jl
jbe
mov
stos
xchg
sub
dec
add
fisubrl
add
pop
movsl
push
add
mov
add
pushf
jae
dec
mov
add
add
add
and
je
dec
add
aas
inc
fisubl
sub
repz
add
add
add
xchg
in
js
mov
jg
fistps
cmp
cmpsl
addr16
cs
loop
jae
call
pop
aad
mov
stc
insl
jae
sub
add
out
add
add
inc
jmp
or
inc
sub
lock
add
mov
add
fwait
sbb
dec
add
add
mov
mov
add
iret
push
add
stc
xor
jbe
movsl
fucomi
arpl
out
push
add
jns
add
add
add
stos
xor
cwtl
push
add
push
add
sbb
or
stos
sub
or
repnz
in
into
repz
add
pushl
dec
add
add
adc
cltd
xor
pop
mov
add
sbb
fisubs
add
cmp
add
inc
add
dec
fdivrs
push
sub
add
nop
push
add
sub
fwait
jbe
or
orl
mov
fisubs
mov
add
jl
sti
or
cmp
mov
add
dec
add
mov
ljmp
xchg
push
add
add
lds
lods
sbbl
sbbb
add
jae
mov
push
add
fcmovb
lret
leave
and
cmp
movsl
adc
popf
js
inc
add
add
pop
add
ljmp
mov
inc
add
out
jbe
add
mov
push
add
add
sub
adc
and
add
or
cmp
or
add
add
sub
mov
add
idivl
movsb
xlat
mov
fsts
cmp
push
add
push
cmp
addr16
add
inc
pop
add
add
add
imul
scas
jp
ja
aad
add
iret
mov
fwait
pushf
jecxz
add
stos
fwait
clc
sub
inc
sbb
xor
imul
shll
add
add
push
add
test
adc
push
jo
sti
mov
sbb
add
ja
cmp
mov
add
mov
jo
lds
out
je
push
add
fsubrl
push
add
pop
add
cmpsb
or
cmpl
dec
add
add
cmp
sub
jmp
mov
add
add
dec
add
push
add
add
fldenv
xchg
xchg
push
add
mov
cmp
leave
sarb
ljmp
push
add
add
data16
add
push
add
add
iret
lahf
cwtl
loopne
push
add
rorb
add
test
add
push
add
add
push
add
cmc
sbb
add
add
and
jne
inc
adc
out
mov
mov
shll
imul
pop
scas
xor
pop
data16
mov
in
imul
add
jnp
cmp
mov
add
add
pusha
add
pop
add
cmp
loopne
rorb
stos
bound
mov
push
add
hlt
data16
fdivl
add
sbb
gs
dec
push
add
cmc
cmp
rolb
or
add
push
cmp
loope
add
and
xor
mov
xchg
faddl
mov
pop
add
add
push
push
add
dec
int3
addb
add
dec
push
add
mov
notl
pop
add
add
sub
push
add
fcmovnb
adc
loopne
xchg
ja
xchg
push
dec
mov
leave
xor
fwait
lret
pop
inc
add
sbb
pop
pushf
cmc
jo
push
add
lret
out
stc
pop
add
add
movsb
in
push
ret
pop
inc
lret
add
popa
xchg
jg
lock
loopne
add
adc
sub
in
add
inc
add
outsl
mov
icebp
ljmp
jle
dec
add
add
mov
add
shrl
push
cli
hlt
push
add
add
outsb
add
stos
insb
add
add
mov
add
lods
sub
add
js
sbb
add
jne
stc
xor
arpl
jns
add
pop
add
int3
xlat
mov
lods
mov
adc
sbb
xchg
pop
inc
add
fsts
sbb
xchg
and
adc
sahf
cmpb
cwtl
mov
es
push
js
jae
add
xor
adc
addr16
add
add
add
add
push
inc
add
mov
add
push
add
jp
inc
add
cmp
sti
sbb
out
add
jecxz
add
add
add
sub
add
mov
gs
scas
adc
push
add
leave
ljmp
lods
hlt
adc
jecxz
imul
mov
add
add
add
add
popa
mov
xchg
xchg
jbe
cltd
sub
loope
testb
fstpl
fcoml
add
adc
dec
pop
gs
push
add
add
push
add
andb
add
push
add
push
aaa
add
or
xchg
pop
add
jae
cltd
xor
mov
pop
inc
add
push
add
add
pop
or
add
iret
xlat
addb
jno
add
mov
add
sub
sub
mov
dec
add
or
loop
add
add
add
add
add
add
or
scas
shrl
lret
loopne
add
sbbb
sub
mov
mov
add
jo
mov
add
and
shr
scas
xchg
cmpsl
adcl
pop
add
jp
arpl
xor
lret
repnz
add
jns
mov
add
add
mov
add
loope
insl
pop
clc
sub
and
filds
aas
test
mov
popf
in
cmp
add
aam
xor
push
add
add
jle
lahf
jnp
inc
add
daa
mov
add
add
add
push
add
adcb
repz
add
adc
cmpsb
add
add
icebp
lods
cli
push
add
add
add
stos
push
push
add
insb
add
sti
inc
dec
xchg
add
ret
addl
imul
add
add
hlt
mov
add
or
xlat
xchg
lcall
add
sub
push
add
cli
pop
add
enter
cmp
test
pop
fisubl
ljmp
xchg
mov
xor
das
sbb
movsl
xor
add
dec
xchg
lods
adc
inc
add
jne
add
xchg
test
mov
mov
rol
xlat
scas
or
jg
add
add
xor
das
js
jg
push
add
push
add
int
add
jle
jecxz
or
push
add
mov
add
repnz
jl
add
add
and
pushf
xchg
or
in
rcrl
dec
lods
nop
dec
add
andl
mov
mov
jbe
hlt
xor
cmc
fldenv
add
adc
inc
add
or
testb
and
cmc
arpl
add
leave
dec
add
adc
fmuls
jae
xchg
rolb
dec
add
add
add
loopne
fcompl
leave
sbb
jnp
notl
sub
aam
testb
jne
xchg
pop
add
or
mov
insl
mov
mov
dec
add
add
add
add
cmp
add
lret
xorl
add
ror
test
pop
inc
add
push
movsl
push
add
dec
jge
add
add
add
and
push
fisubrl
adc
add
mov
jbe
setno
addr16
add
push
add
lret
icebp
fnstenv
add
xlat
sbb
dec
add
add
jg
in
inc
insb
add
je
add
add
jo
add
add
mov
andb
add
jnp
add
jne
adcb
add
je
sub
data16
call
push
add
out
loop
shlb
mov
xchg
add
xchg
pop
jno
or
add
add
jb
xor
data16
jp
inc
add
jle
repnz
fdivrs
xchg
and
add
and
mov
add
scas
mov
push
jecxz
add
add
sti
rorb
pop
sbb
or
or
mov
and
adc
cwtl
int3
lret
xchg
jbe
push
add
arpl
add
jbe
inc
add
add
add
jge
clc
jae
push
or
sbbl
and
rcrb
stos
ret
add
into
push
add
jmp
add
jecxz
add
add
add
push
add
iret
inc
add
add
and
loop
pop
rorb
dec
add
mov
lea
add
add
add
xor
xchg
xchg
inc
add
mov
add
and
and
jge
lret
add
outsb
add
push
add
rcl
push
add
leave
pop
jle
lds
add
add
push
add
xlat
push
mov
dec
add
dec
test
add
arpl
arpl
mov
fidivs
out
xchg
push
add
pop
repz
lds
xchg
add
jbe
sub
add
jle
fcomp
xchg
add
arpl
mov
add
ja
add
leave
int3
lahf
mov
sbb
xor
fidivrs
add
in
mov
test
add
xor
pushf
push
cld
jno
pop
add
ljmp
mov
mov
add
js
fstpt
jo
dec
icebp
iret
xchg
cmp
add
fwait
aam
pushf
mov
add
inc
add
add
mov
and
sub
repz
addr16
dec
add
mov
add
rclb
dec
and
add
push
rcll
mov
mov
jmp
lahf
je
or
add
mov
pop
lods
loope
add
out
inc
add
mov
clc
push
add
inc
add
pushf
xchg
add
add
cmp
movsl
testb
push
add
sub
aad
es
ljmp
leave
cld
lods
sahf
mov
jne
data16
add
mov
add
add
add
bound
fldcw
jb
add
and
push
pop
add
sbb
stos
inc
add
sub
das
jne
jge
das
mov
dec
add
push
add
add
or
fwait
addr16
dec
jns
aas
jb
test
fld
cmovge
xchg
pop
mov
xor
xchg
pop
add
jmp
add
add
jae
add
daa
fwait
lret
add
add
dec
add
add
cmp
add
add
inc
add
cmpsb
in
add
add
mov
mov
sti
inc
hlt
dec
add
icebp
popf
dec
add
xchg
loopne
add
ljmp
sbb
aam
jno
xorl
xchg
mulb
test
pusha
add
fiaddl
add
mov
add
iret
test
add
jne
add
push
add
inc
add
jp
das
xor
cmpsb
hlt
lds
add
add
stos
add
add
sbb
rolb
add
pop
or
pushf
cld
inc
add
add
xchg
in
call
lea
mov
rcr
and
scas
les
add
add
aam
add
add
add
icebp
pop
add
sub
andl
jmp
jae
pop
lret
xor
xor
sarl
jo
dec
add
inc
scas
lds
cmp
push
add
add
leave
adc
add
insl
mov
jle
lcall
out
sbb
sbb
addr16
inc
call
out
mov
jae
mov
movsb
inc
add
add
add
push
add
sahf
mov
add
lcall
inc
dec
or
add
stos
dec
add
data16
add
movl
lods
xorb
sub
shlb
inc
cwtl
icebp
jecxz
ficoml
cltd
dec
adc
mov
lock
or
mov
jp
pop
jo
add
push
add
add
shll
ret
ficompl
fsubrp
inc
add
add
jne
push
add
outsl
xlat
dec
testl
sub
jge
add
mov
add
pop
js
stc
imull
aas
fimuls
mov
lcall
rol
popa
jle
cli
rorl
in
fdivs
incb
jle
adc
sbb
insb
add
cmp
push
add
mov
stos
mov
push
pop
and
pop
popf
enter
mov
mov
sysret
push
add
fnsetpm(287
cmp
sbbl
add
add
test
rorl
imul
add
xor
pop
mov
lods
aas
jmp
add
stos
in
cmp
dec
add
mov
xor
xor
and
jb
xchg
xor
mov
mov
fisubrs
inc
add
outsb
add
xchg
xchg
xor
sti
out
lds
shrl
add
shrb
add
or
add
test
movsb
sti
add
in
clc
call
adc
and
shl
outsl
sbb
aaa
mov
dec
add
mov
push
add
add
stos
call
add
in
mov
andl
add
inc
cli
outsb
add
inc
into
mov
js
inc
add
inc
add
push
movsb
pop
loop
add
or
mov
les
scas
or
ja
ror
out
xor
xchg
xor
stos
adc
mov
movb
adc
adc
arpl
xchg
jg
add
sahf
pop
add
int3
mov
mov
add
add
add
cmp
push
add
in
add
mov
stc
lret
fbstp
iret
xchg
mov
add
roll
sbb
push
add
inc
inc
adc
and
fimull
add
cwtl
mov
sahf
aas
jo
outsb
add
fmull
aam
add
or
fidivrl
lods
adc
es
andps
mov
popa
dec
add
inc
add
enter
dec
cmp
add
repnz
in
mov
icebp
out
sahf
dec
add
cmc
hlt
jmp
out
add
imul
cli
mov
std
xchg
adc
popa
cmp
add
addr16
adc
fwait
dec
jb
js
jmp
sbb
add
add
mov
cltd
popf
push
add
icebp
jp
insl
gs
xor
pop
push
jge
stos
xchg
aas
andb
jb
shlb
xchg
or
filds
sub
jno
xchg
ds
decl
add
add
lods
pop
sub
dec
add
add
add
and
add
mov
dec
add
int
add
loopne
pop
mov
add
xlat
sarb
in
sub
stos
icebp
fwait
jbe
shll
add
fdivs
cs
pop
xchg
rcr
je
add
mov
jb
xchg
addb
sbb
outsb
add
pop
add
sub
incl
jg
mov
outsb
add
add
add
out
push
lret
xor
push
jno
and
sbb
add
add
fidivrl
sbb
push
add
add
int3
aam
fucomi
loopne
add
dec
add
add
call
fdivrl
add
add
push
xor
repnz
add
add
and
mov
push
add
lock
mov
or
ret
arpl
bound
jbe
out
add
pop
mov
hlt
mov
int
into
pop
into
rorl
jae
mov
mov
sbb
inc
xor
testl
sub
push
add
rolb
in
psllw
pop
mov
lea
fstl
into
jle
sub
aas
cmp
mov
shlb
add
leave
adc
dec
add
add
add
shrl
push
add
repz
adc
fisubs
add
add
mov
or
jle
call
sbb
xlat
jmp
jmp
stos
cmp
add
enter
add
pop
inc
fadd
stc
cmc
xchg
sub
mov
and
add
add
add
scas
add
repz
add
fisttpl
push
sub
mov
add
pop
add
xchg
sub
scas
adc
add
cltd
jb
jmp
loopne
pop
xor
jno
ja
jns
push
fdivr
cli
xor
pop
daa
repnz
add
add
add
sub
add
imul
jp
gs
push
add
sub
xor
add
arpl
mov
add
add
dec
or
mov
add
sub
ljmp
fimuls
cwtl
dec
mov
add
data16
add
and
push
in
mov
add
inc
mov
sub
daa
aad
cmp
imul
mov
pop
add
cmc
lcall
mov
add
add
in
addb
add
add
xor
jb
pop
add
xor
divl
push
add
std
inc
sbb
outsb
add
inc
add
stos
pusha
add
xchg
subl
pop
xchg
add
cmc
mov
add
sar
mov
or
fwait
ss
sbb
cmpsl
mov
fcoml
not
scas
cmpb
jne
scas
jg
xchg
add
add
inc
jecxz
xor
aaa
push
add
xchg
pop
pop
add
jbe
push
mov
int3
mov
add
test
test
dec
add
dec
add
and
enter
sbb
int
push
add
add
clc
dec
add
imul
sbb
shll
jl
fsubp
pop
push
addr16
lock
push
add
stos
scas
xchg
test
repz
dec
add
or
or
xchg
jae
or
cmpsl
cmpsl
clc
inc
leave
xchg
xchg
mov
mov
cmpb
add
les
gs
add
popf
xchg
add
pusha
add
or
cld
loop
add
add
add
rorb
and
stos
testb
sbb
cs
inc
sbb
add
inc
add
add
inc
xor
add
add
pop
push
add
lds
mov
sbb
jl
aaa
push
dec
add
daa
xchg
in
add
add
jp
sub
mov
fwait
sti
lock
sarb
fdivrs
add
bnd
aam
add
fiadds
and
vpaddw
pusha
add
add
adc
push
add
cwtl
pop
add
icebp
pop
inc
add
add
push
add
mov
addr16
bound
loope
add
adc
cltd
lock
icebp
push
lahf
mov
add
bound
pop
adc
xor
pop
cmp
add
in
adc
sub
pop
icebp
lock
in
aaa
aaa
nop
addr16
add
add
js
jo
dec
dec
add
xor
add
add
sar
sub
push
add
jp
ds
insl
xorb
lock
subb
add
xor
arpl
mov
or
lods
mov
dec
add
add
sub
enter
subb
pop
add
add
push
mov
mull
push
into
dec
add
icebp
lock
add
scas
das
jmp
xchg
xchg
xor
sub
sbb
lock
and
sarb
xchg
push
add
add
stos
nop
pop
add
in
and
and
adc
xchg
dec
add
in
and
xor
insl
sbb
xlat
mov
lds
icebp
fs
dec
add
add
push
add
jns
repz
add
ljmp
add
add
add
add
addr16
call
sbb
shll
and
dec
fwait
movsb
loop
add
push
dec
add
pusha
add
mov
add
sbb
push
xchg
in
fs
mov
bound
xorl
add
add
popf
or
js
sar
fldcw
xorl
sbb
add
out
add
imul
jle
xchg
or
clc
xchg
sahf
jp
bound
out
cs
lea
jb
mov
stos
pop
add
pusha
add
and
out
shl
inc
dec
add
add
dec
add
xor
cli
popa
add
decb
dec
add
add
div
inc
push
test
pushf
mov
add
das
add
outsb
add
push
movsb
je
je
stos
dec
hlt
mov
add
mov
scas
fstl
jb
rorl
loop
add
out
ret
loope
arpl
jns
mov
scas
lods
in
add
add
movsl
lret
enter
mov
sub
mov
add
mov
outsb
add
dec
lcall
mov
push
xchg
clc
shrl
sub
jo
xchg
std
xor
mov
jnp
add
mov
adc
cmp
push
xchg
or
fidivl
imul
adc
jbe
mov
fadd
sub
fcompl
xchg
inc
or
add
dec
xchg
mov
test
pop
pop
mov
add
mov
mov
add
popf
mov
insb
add
or
imul
mov
jb
mov
ret
movsb
pop
xchg
leave
add
fdiv
rolb
adc
jo
aas
test
push
sbb
incl
add
test
add
lods
stos
mov
add
push
add
jne
sbb
in
mov
or
shld
add
mov
add
cmpb
add
adc
rcl
cld
add
add
add
cmp
sbb
rorl
sbb
mov
pop
pop
push
jmp
mov
icebp
lods
xor
loope
xchg
pop
add
imul
ss
fnstenv
push
add
pusha
add
mov
cli
jbe
rcl
gs
sbb
lcall
pop
add
or
cmp
push
lods
pop
add
xor
adc
add
cmc
ljmp
add
jno
mov
add
add
leave
pop
jbe
jge
fiadds
int
mov
psubq
mov
xor
aas
mov
aas
xor
pop
add
cmpl
fdivs
add
cwtl
adc
add
data16
dec
add
and
ret
fst
aas
xor
imul
ret
jge
mov
push
clc
xorl
dec
add
outsl
add
mov
add
add
push
add
adc
and
mov
add
fcoml
stos
scas
jle
jns
imul
and
stc
int
stos
sbb
popf
lahf
lods
sarl
add
cltd
sti
xchg
pushf
push
fisubrl
add
xchg
mov
cld
push
add
add
and
repnz
rorb
inc
add
js
mov
push
add
cmp
pushf
popa
sbb
dec
add
jb
iret
cmp
sbb
sahf
rcrb
xchg
insl
push
mov
addr16
fwait
sub
leave
lahf
outsb
add
adc
popa
fiaddl
lahf
lock
push
add
scas
sbb
add
mov
mov
dec
mov
test
add
xor
dec
add
loopne
add
mov
add
lahf
aaa
fldt
xor
push
add
stos
inc
jmp
fimuls
mov
mov
stos
push
sbb
sub
popa
adc
mov
mov
clc
cmp
mov
add
sahf
push
add
add
mov
cmp
push
jmp
add
add
mov
jl
push
jl
rolb
add
std
cwtl
mov
shll
add
mov
pop
push
add
add
pusha
add
jecxz
jl
repnz
add
add
adc
mov
xchg
dec
add
add
bound
cmp
jb
xor
add
stos
cmp
add
shlb
nop
iret
sbbl
dec
add
inc
add
imul
and
insb
add
aas
dec
test
mov
in
adc
insl
jle
mov
scas
mov
add
lcall
xchg
insl
scas
push
add
mov
push
and
pop
or
sub
push
add
bound
dec
gs
popl
pop
xchg
inc
add
ljmp
add
fmull
mov
xchg
mov
jge
inc
dec
add
jns
js
pop
add
adc
add
add
add
mov
sahf
imul
cvttps2pi
daa
or
dec
add
push
add
push
lcall
add
scas
pop
add
scas
vdivpd
push
orl
add
stos
push
add
add
mov
jb
in
add
add
mul
ror
stc
repnz
add
mov
addl
sub
mov
add
add
mov
add
xchg
xor
xchg
mov
sahf
xchg
imul
mov
out
lcall
add
xchg
adc
add
add
sbb
jne
push
ja
sbb
add
cmp
add
add
out
add
jmp
jno
and
lock
add
mov
cltd
cmpsb
mov
add
loop
mov
pop
add
add
incb
hlt
adc
push
mov
mov
leave
push
add
xlat
gs
sar
in
add
add
pop
and
inc
add
add
mov
test
mov
or
add
or
sub
dec
outsb
add
inc
add
adc
std
push
or
cmp
add
fldt
mov
fadd
mov
cld
gs
test
movsl
jmp
call
mov
in
and
cmp
xor
add
inc
add
mov
add
and
sub
add
sbbb
jmp
lods
xor
enter
lds
out
pusha
add
imull
sub
sbb
inc
add
add
sub
popa
push
add
faddp
and
popa
push
add
sub
pop
insl
or
cmp
mov
cld
pop
icebp
out
insl
das
mov
add
call
add
sub
adc
dec
add
lods
and
inc
mov
and
xchg
xchg
jb
scas
ret
fistl
add
add
add
sbb
mov
and
jge
add
add
notb
pop
fs
test
add
sub
add
and
out
jle
bound
cli
cmp
add
pop
add
je
sahf
inc
dec
add
xor
xorb
es
je
loope
add
dec
add
scas
inc
add
icebp
sbb
ret
inc
add
faddp
or
popl
add
push
add
add
mov
cmp
jmp
mov
add
add
nop
push
add
cmp
add
mov
inc
mov
nop
dec
pop
mov
mov
pop
pop
pop
push
add
add
mov
push
and
adc
rcrl
dec
add
xlat
or
add
add
fstpt
outsb
add
scas
lahf
aam
add
push
add
add
add
repnz
add
add
mov
push
sub
and
pop
add
sub
dec
add
cmp
dec
cmp
test
pop
mov
xchg
fidivl
cs
addr16
xlat
mov
push
add
add
push
add
pop
add
outsl
inc
dec
add
and
jg
add
shlb
add
lea
add
mov
daa
shlb
push
add
add
lcall
mov
xor
push
add
jb
dec
adc
mov
and
add
rcll
jae
stc
aas
push
push
add
nop
adc
add
cwtl
ret
hlt
mov
mov
push
ret
add
sub
pushf
inc
mov
sti
mov
pusha
add
cmp
add
dec
add
xchg
mov
insl
adc
rolb
xchg
bound
lcall
stos
jle
inc
lods
stc
pop
mov
add
cmp
cmpsb
mov
or
push
add
fists
repnz
bound
or
add
pop
pop
add
add
adc
mov
inc
mov
fldl
fucomi
negl
std
ret
js
sbb
ljmp
sbb
iret
addr16
lds
mov
test
testl
fsubrl
xchg
mov
push
outsl
or
clc
adc
adc
js
jge
mov
push
ret
mov
ret
jl
cmp
lock
lds
fmul
xchg
mov
mov
add
add
push
add
add
jb
pop
outsb
add
icebp
dec
add
xchg
jno
mov
cli
sub
pop
rcll
xchg
ud2
mov
fs
sub
sahf
rcrl
cmp
sbb
pop
aad
xlat
sbb
rolb
add
jl
fprem1
faddl
adc
aaa
rcrl
mov
dec
add
fstpt
inc
add
lods
mov
mov
push
mov
or
push
add
adc
add
ss
jl
mov
fbld
pop
mov
add
ret
mov
loop
add
in
cmp
test
lods
inc
xchg
mov
mov
in
jp
adc
jge
push
adc
sub
testb
loope
aas
sub
shr
aam
add
jno
add
jne
adc
add
xchg
mov
out
jmp
add
push
add
cmpsb
sti
sbb
add
dec
ljmp
add
and
and
aaa
mov
add
add
ja
mov
and
in
imul
adcl
ja
popa
xor
pop
add
xchg
jecxz
clc
cmp
stos
por
xchg
cmovs
adc
add
out
push
sub
test
push
add
adc
add
pop
add
and
pushf
and
push
add
std
fwait
lds
dec
cmpsb
mov
add
or
inc
add
pop
xorb
xchg
xor
cmp
push
xchg
pop
sub
pop
inc
add
sbb
mov
cmp
jns
pop
dec
add
add
aaa
gs
add
lods
cmpsl
adc
jbe
addr16
add
lahf
test
shrl
add
or
stc
out
add
data16
push
add
cmpsb
ljmp
xor
add
daa
mov
add
orb
int3
adc
testb
lock
add
in
add
hlt
jne
cli
add
aam
loope
xor
ds
je
push
add
adc
mov
test
inc
ret
pop
pusha
add
outsb
add
cmp
add
add
jnp
pushf
xchg
mov
mov
add
dec
add
cmp
inc
notl
pop
loope
sahf
mov
imul
fisubl
inc
add
push
ja
add
add
jb
shrb
jle
push
add
fsubp
sbb
pop
pop
add
pop
mov
add
in
test
inc
add
pop
add
add
loop
pop
inc
add
add
mov
lret
scas
call
or
xchg
out
dec
out
mov
xchg
enter
add
pop
and
cmp
mov
rcll
dec
push
xchg
or
test
add
mov
add
dec
cmp
out
mov
shll
sbb
test
xor
gs
dec
mov
pop
adc
inc
scas
mov
adc
jbe
mov
add
dec
add
test
add
pop
fbstp
daa
sub
outsb
add
fwait
cmp
adc
lret
xchg
push
push
add
cli
int
jp
into
jecxz
add
add
cmp
adc
xchg
fisubrs
insl
and
call
repz
mull
xor
mov
add
mov
dec
xchg
insb
add
push
add
sub
inc
enter
add
add
add
push
add
add
adcl
inc
add
add
rorl
push
rcrl
sub
aas
push
sub
xor
xor
xchg
jns
jne
daa
sbb
add
push
add
into
add
cmpsb
sbb
pmulhuw
std
pop
jl
bsr
xor
add
add
sahf
mov
and
cmp
insb
add
aaa
pusha
add
sbb
add
pushf
mov
xchg
pop
add
in
jmp
inc
and
and
and
incb
add
fsubp
adc
xchg
out
out
repz
pop
push
shl
ret
mov
mov
add
fstpl
add
inc
add
add
in
pop
lods
or
jo
test
add
fnstsw
add
out
push
add
std
jns
push
add
add
add
nop
test
lcall
or
add
add
cmp
add
gs
js
je
mov
add
add
pop
sbb
and
cmp
mov
int3
push
test
icebp
cmp
loop
or
mov
aam
aas
jnp
add
sarl
inc
pop
pop
adc
xchg
mov
sbb
jae
add
add
test
js
insb
add
cmp
sub
jbe
mov
scas
sbb
fiadds
fisubrs
dec
mov
insb
add
push
mov
jb
movsl
outsl
shll
or
faddl
mov
xor
movsb
imulb
xchg
mov
add
add
int
and
mov
addb
add
add
in
jp
ljmp
stos
mov
in
cmc
gs
sub
add
dec
add
lcall
mov
jb
jne
in
cmp
lret
sbb
dec
or
stc
inc
mov
xlat
imul
out
jb
ljmp
call
add
or
nop
lret
jmp
push
jecxz
divb
add
popl
sub
inc
add
adc
push
das
cli
loope
add
mov
jae
push
add
ljmp
and
mov
int3
je
adc
insb
add
ret
xor
pop
xor
add
and
or
cmpsb
mov
mov
leave
inc
add
or
jmp
es
lret
test
fnstcw
add
cltd
cwtl
push
push
xchg
outsl
xor
push
add
jg
mulb
and
add
mov
xor
les
or
push
add
cmp
push
add
js
imul
push
add
add
mov
jae
ja
add
out
je
lahf
push
add
inc
add
xchg
add
add
add
movl
adc
push
push
add
and
jge
add
xchg
mov
xor
add
je
dec
jp
push
add
lcall
and
push
and
dec
add
in
adc
add
sub
xchg
jg
add
and
inc
jns
stos
sub
cli
cwtl
xor
jo
pop
nop
xor
repz
dec
mov
add
jle
mov
add
add
cltd
gs
inc
add
clc
cmp
cltd
push
add
dec
add
in
ret
cmp
into
rol
lret
rolb
or
mov
cmpsl
sbb
js
sbb
push
add
lods
lcall
add
add
jnp
add
add
jle
mull
stos
mov
sti
cmpb
add
mov
out
adc
mov
inc
pop
sarl
jp
pop
dec
add
mov
aam
add
pop
adc
push
add
mov
sbbl
add
add
adc
add
out
cmp
stos
fsubr
out
cmc
nop
mov
or
jl
in
xor
mov
fs
shlb
loope
outsl
mov
inc
xchg
dec
add
cmp
out
insb
add
clc
popf
test
or
clc
jp
xchg
dec
in
xlat
push
add
fistpl
jp
jno
jg
gs
pop
ja
add
mov
add
add
add
add
add
sub
add
mov
mov
sti
lds
imul
push
add
les
push
add
test
add
push
pusha
add
add
add
adc
mov
dec
add
pop
enter
add
out
add
inc
add
fwait
scas
aaa
inc
add
movsb
pop
adc
movsb
mov
xlat
add
and
xchg
cmpsb
daa
jg
sub
clc
pop
add
push
jl
xor
adc
push
add
fwait
cmp
pop
add
adc
mov
mov
test
pushf
shl
adc
jecxz
cmpsl
xchg
stc
shl
mov
lods
dec
lcall
push
add
in
add
cmc
mov
repnz
cmp
lea
gs
jns
out
mov
popa
lods
dec
add
add
mov
add
int
add
mov
hlt
cmp
fildll
xchg
mov
fsts
shlb
sub
jmp
lods
jle
adc
clc
movsl
daa
enter
jecxz
jne
add
lods
call
and
add
jno
sbb
icebp
pop
add
ret
xor
aam
sub
les
add
adc
aas
daa
fisubs
add
lret
xor
adc
mov
add
sub
int
mov
inc
mov
add
adc
jle
stos
sbb
xorl
nop
ret
xor
mov
xlat
enter
sti
inc
sbb
movl
sub
add
in
add
mov
mov
sbb
daa
adc
adc
shl
mov
out
add
mov
add
add
add
cmp
mov
add
add
mov
test
call
cmp
sub
add
add
jbe
daa
int
mov
mov
je
sub
xor
push
add
xchg
stc
outsb
add
fwait
add
les
mov
dec
or
sbb
add
jp
shrb
jo
mov
fldcw
jmp
xor
add
push
cmp
icebp
fldcw
jp
xor
xor
pop
add
repnz
cmp
dec
push
add
test
pop
push
add
pushf
aas
push
add
push
add
das
fcomps
lcall
aam
add
add
add
jae
popf
into
xchg
xor
jecxz
and
insb
add
lock
add
mov
and
mov
xchg
adcl
sbb
sbb
dec
push
add
add
adc
add
pop
jae
scas
out
and
jo
mov
cmp
loope
xchg
dec
add
lcall
fwait
shr
cmpsl
imul
add
addr16
cwtl
mov
in
jle
mov
mov
int3
sbb
add
push
add
push
add
add
add
and
dec
adc
lds
imul
xchg
mov
lahf
mov
rcr
loop
iret
sbb
pop
data16
mov
inc
cmp
push
add
dec
add
add
lock
fwait
imul
push
add
add
add
cmpsl
mov
pop
nop
add
or
fcomps
out
iret
push
call
lahf
jbe
jl
sub
sti
push
add
jno
je
add
les
in
mov
cmp
push
js
out
shlb
add
aas
or
pop
data16
xchg
add
add
add
stos
in
add
add
adc
sahf
adc
call
inc
icebp
mov
add
out
add
cmpsb
mov
add
mov
cmpsl
push
add
out
outsl
jns
push
add
bound
lods
cmpl
add
push
add
cmp
fsubl
add
shll
add
add
add
adc
dec
add
lods
and
pusha
add
mov
int3
mov
aaa
add
mov
add
data16
imul
lock
xlat
sbb
xchg
push
cld
and
inc
add
pop
mov
out
jbe
xlat
lock
add
sbb
xorb
loope
sahf
imul
pop
inc
add
add
or
cmc
jle
and
xor
pop
mov
lret
xorl
pop
cmp
inc
add
add
dec
add
pop
or
insl
in
push
add
push
add
lods
jmp
loope
add
add
std
addl
xchg
add
add
test
xchg
pop
add
inc
leave
sti
les
mov
fidivs
fmuls
cmpsl
out
add
add
add
inc
add
mov
xor
add
add
pop
test
or
icebp
dec
add
int
add
pop
fucomip
sti
jno
shlb
aam
adc
pop
cmp
sub
inc
pop
add
movsb
loop
add
add
out
add
movsl
jp
clc
loopne
es
cmp
add
roll
add
add
adc
mov
add
std
add
sub
add
movsb
repz
add
add
add
sahf
fs
shlb
cltd
lds
push
mov
lods
int3
out
jne
add
add
add
out
popf
inc
add
mov
adc
add
xor
add
cmp
and
or
add
aam
addr16
sub
movsb
sub
mov
clc
add
add
add
inc
push
add
mov
mov
add
repnz
addl
std
xchg
dec
add
iret
mov
cmpsb
dec
add
add
mov
stos
sbb
out
js
mov
xor
out
pop
xor
rcr
fisubl
dec
add
add
in
jge
leave
loope
loope
cmp
mov
push
add
mov
mov
enter
xor
pop
out
pop
lea
aas
ljmp
add
mov
jb
mov
add
fsin
push
xchg
inc
iret
and
int3
dec
add
xchg
aam
jns
add
arpl
add
xchg
outsl
stos
dec
add
add
jnp
fadd
sub
inc
push
add
and
sbb
mov
data16
jo
clc
xchg
iret
xchg
xor
add
mov
test
xor
subb
xchg
jmp
dec
mov
test
cmp
repz
ljmp
pusha
add
rsm
sti
sarl
add
aaa
enter
add
pop
adc
sub
cmpsl
jmp
add
shlb
push
dec
add
add
in
sbb
jecxz
xchg
call
add
add
dec
add
clc
cmpsl
orb
mov
mov
loop
data16
xchg
mov
nop
arpl
jg
add
add
add
lcall
add
inc
add
add
push
add
bound
mulb
push
lods
fldln2
adc
jb
lret
call
add
aam
int
add
pusha
add
mov
std
addb
sub
sbb
xlat
xchg
sub
pop
xchg
dec
hlt
out
clc
subb
aaa
pop
add
ror
xor
mov
inc
sahf
pop
add
add
xor
in
imul
xor
cmpsb
xchg
add
add
jmp
add
leave
xchg
into
and
fldl
mov
popf
jg
mov
inc
add
push
add
add
push
add
xchg
pop
jno
insl
inc
add
mov
addr16
push
add
xchg
adc
jp
lods
cwtl
mov
sub
add
xor
push
dec
xchg
inc
add
in
xorl
xor
add
sub
sbb
fs
and
xor
push
add
add
mov
scas
aaa
and
ja
mov
jnp
lahf
push
add
fisubs
cld
mov
jne
fcompl
add
mov
add
xor
subl
cli
and
dec
imul
fldenv
add
add
add
orps
je
add
cmp
push
add
inc
adc
clc
xor
cld
adc
fildl
add
scas
mov
xchg
outsb
add
leave
inc
add
dec
popf
pop
cmpsb
or
arpl
sub
sub
fwait
roll
in
sub
scas
shlb
ljmp
and
push
add
add
add
add
outsb
add
stos
in
xlat
and
das
mov
mov
xor
and
push
add
or
mov
mov
push
daa
push
add
push
cwtl
dec
inc
add
add
add
add
xor
add
sahf
int
sub
stos
inc
cmpsb
hlt
cmp
add
add
stos
pop
dec
add
mov
lret
or
sub
jl
cmpsl
cmp
xchg
add
outsb
add
lods
cli
std
icebp
lods
lahf
stos
add
in
in
ret
std
loop
add
insl
shrb
fistps
notl
or
mov
fwait
jle
mov
inc
add
xor
or
scas
jbe
leave
mov
in
add
mov
aas
and
movsl
fcoms
pop
add
stos
mov
add
or
and
or
add
push
add
mov
dec
add
push
add
addr16
psraw
stos
xorb
add
ss
aas
dec
add
add
pop
jge
lods
xchg
add
in
inc
add
das
inc
add
lret
es
sbb
sahf
rcl
sbb
iret
ljmp
jge
push
add
add
add
fcomps
jle
pop
jbe
daa
add
jp
loopne
mov
fimull
add
add
mov
add
mov
cmpsb
push
push
add
inc
add
add
out
add
xor
mov
xor
lods
leave
dec
dec
add
add
mov
test
into
jne
data16
mov
or
jecxz
pop
int3
adc
inc
cmp
dec
dec
hlt
repz
add
popa
movb
push
add
push
add
add
loope
add
cmp
push
add
add
jnp
add
add
cmp
add
cwtl
fs
lds
sbb
add
arpl
adc
insb
add
ja
jg
xor
dec
add
add
inc
add
mov
add
sub
xor
add
mov
xchg
dec
test
ljmp
add
add
adc
dec
sbb
shlb
lret
lcall
sbb
add
jecxz
add
and
iret
insb
add
add
outsb
add
cli
std
shrb
mov
add
and
push
add
dec
dec
add
push
or
mov
lds
push
add
subl
cld
jae
sub
ret
or
movsb
mov
in
add
dec
add
add
inc
add
xchg
mov
mov
xchg
stos
mov
jb
add
sahf
or
or
cmp
dec
mulb
jb
push
add
add
aad
lea
add
inc
arpl
loopne
popf
push
jg
test
add
dec
add
or
push
add
divb
mov
add
dec
add
mov
add
mov
inc
add
xchg
fcmovu
dec
rorl
loop
add
gs
jns
xor
jl
sbb
sub
imul
movsb
add
jae
add
ds
leave
cmp
add
shrl
repnz
sbb
cmp
add
hlt
imul
add
dec
mov
dec
out
in
add
xchg
sbb
add
cmc
push
add
mov
jge
adc
adc
fisubs
add
xchg
cmpsb
data16
add
test
icebp
pop
out
cmpsl
jp
idiv
imul
add
mov
divb
stos
scas
xchg
push
add
mov
fptan
je
dec
add
push
loopne
add
add
inc
add
xchg
and
shl
inc
pop
fdivrl
add
sub
fsubrs
jecxz
xchg
pop
add
and
add
movsb
adc
and
cmp
mov
ljmp
test
add
stc
pop
xchg
add
mov
std
sub
sub
scas
pop
push
scas
jmp
dec
add
cmp
add
add
add
mov
xchg
jns
inc
cwtl
cmpsl
add
mov
cmp
fwait
ret
nop
mov
stos
mov
add
add
add
jge
and
mov
add
cmp
add
cli
cmp
cmp
ficomps
out
cmp
xchg
xchg
add
add
stc
cmp
add
les
pop
add
cwtl
ljmp
pop
and
dec
add
or
push
add
jmp
cmpsb
mov
bound
push
add
add
fstl
cmp
testl
mov
leave
iret
mov
call
add
mov
sbb
jbe
pop
add
loop
add
mov
test
sbbb
in
test
sbb
jae
add
out
add
xchg
fwait
mov
xchg
lcall
insl
add
adc
dec
nop
cmp
ja
iret
or
xchg
xor
mov
aas
lds
mov
push
sub
add
pop
imull
cld
dec
add
add
icebp
mov
cli
iret
dec
add
mov
popa
nop
mov
xor
jae
add
daa
mov
add
into
or
pop
cmp
pop
and
aam
sbb
push
push
das
and
add
add
add
out
into
movsl
or
das
mov
jl
scas
shrl
add
add
cli
test
and
push
add
mov
in
hlt
xchg
mov
xchg
les
add
add
jecxz
push
add
popf
mov
ret
mov
add
add
dec
jns
in
add
fnstsw
sub
rorb
stc
or
inc
mov
add
pusha
add
lods
pop
add
fistps
stos
mov
hlt
sti
sbb
out
sub
sbb
sahf
insb
add
cmpsl
pop
add
add
add
add
cmpsl
inc
add
sahf
sbb
add
enter
ja
out
sub
add
out
or
inc
lret
lods
sbb
add
and
xor
add
or
shll
add
add
int3
xor
adc
movsb
or
add
ret
mov
mov
and
inc
std
lahf
movsb
adcb
add
add
call
adc
add
dec
add
adc
add
add
add
cmp
ficoml
xorl
add
jp
mov
add
divb
add
add
mov
add
or
fsts
hlt
test
out
push
add
loop
int
test
in
jg
int3
aad
add
add
fisttpll
add
dec
pop
add
adc
xor
xchg
jmp
jo
dec
or
addr16
pop
add
inc
add
and
add
pusha
add
add
add
or
jle
add
add
imul
add
add
add
stos
jae
add
in
inc
add
xchg
aas
insb
add
addb
mov
out
fsubrs
add
mov
or
pop
cmpsl
push
add
add
pop
add
push
jg
add
add
cmp
ficompl
rolb
cmc
lret
sarb
add
add
cmp
ja
push
add
pop
add
or
icebp
ljmp
cmpsl
imul
fisubl
mov
lds
add
add
jecxz
add
mov
or
sbb
fs
clc
push
lea
loop
pop
add
add
jb
cwtl
jnp
add
enter
add
jnp
sarb
cwtl
xlat
enter
inc
mov
and
mov
add
fdivr
or
xor
add
fs
push
loope
bound
js
paddsw
add
add
adc
xchg
aas
cmp
aaa
pop
data16
mov
add
inc
fucomip
sub
test
call
add
jno
mov
add
xchg
jge
mov
ficomps
xchg
popa
mov
xor
mov
add
repz
inc
add
add
add
sbb
test
bound
sbb
mov
sbb
rorl
add
cmp
add
or
pop
add
jl
shll
push
mov
xchg
mov
add
loop
adc
or
sahf
push
jmp
add
nop
roll
adc
sbb
jne
add
pop
add
add
test
add
inc
fstpt
cmpsl
xor
cmp
mov
jns
add
pop
add
xor
mov
add
cmp
xchg
mov
and
jno
add
rcl
repz
add
cld
sbb
ret
sbb
xor
repz
sbb
das
push
add
adc
dec
mov
leave
add
icebp
add
stos
mov
adc
add
cli
add
or
jge
data16
xchg
rcl
popa
imul
pop
sti
fsubrp
and
adcb
add
add
repz
icebp
xchg
lahf
lods
sub
push
add
das
js
mov
inc
adc
loopne
mov
test
push
add
dec
cmc
int3
mov
inc
add
rcll
cmc
mov
ret
adc
adc
out
xlat
scas
push
sbb
pop
add
dec
or
push
add
add
push
add
sub
arpl
loopne
adc
add
pop
add
lret
xor
jb
stc
mov
std
out
mov
add
jns
add
cmp
add
sub
cmc
sub
add
inc
add
pop
add
add
mov
add
inc
add
add
add
lea
add
clc
pop
add
push
mov
mov
fadds
andl
add
inc
add
fldcw
add
add
clc
shl
mov
data16
sub
add
loopne
add
inc
add
push
add
aas
and
decl
test
add
int
lds
add
pop
into
inc
add
push
loop
shr
clc
idiv
outsl
push
jmp
xor
lahf
call
sub
mov
scas
xor
test
pop
dec
add
adc
call
mov
mul
mov
adc
mov
jae
add
clc
add
sub
add
imul
add
cmp
test
repnz
aad
add
xchg
xor
add
mov
mov
push
add
jb
or
and
or
mov
in
adc
fildl
mov
fidivrs
add
xorl
rorb
loope
dec
mov
push
nop
pop
and
or
sbb
data16
and
cs
push
jp
cmpsb
dec
add
cmp
add
xor
add
add
cli
scas
lret
jl
dec
sarb
add
add
sub
add
or
sub
in
add
push
add
and
test
in
mov
add
add
xchg
lahf
dec
fimuls
mov
out
add
push
add
test
mov
div
sub
jb
pop
add
sub
mov
icebp
out
mov
and
add
hlt
fcoms
xlat
mov
add
push
add
adc
xor
pop
inc
jl
lcall
xchg
shll
jae
inc
add
jle
jle
stos
sub
incb
add
push
add
insb
add
add
cld
jo
add
imul
mov
or
scas
sbbl
repz
add
inc
dec
add
dec
mov
push
jbe
add
add
add
mov
sbb
adc
lret
inc
add
mov
fdivs
pop
sarb
add
add
mov
pop
add
add
pop
add
pop
add
add
daa
xchg
or
cmpsl
pop
xor
cmpsl
pop
add
xor
pop
add
mov
lods
popa
xor
sbb
inc
add
inc
add
fwait
gs
outsl
outsb
add
and
cmp
arpl
sarb
add
stc
add
mov
add
mov
jae
and
cmp
cmpsb
jnp
push
add
mov
add
inc
add
add
dec
add
sti
aas
lods
lcall
inc
add
pushf
dec
add
mov
ret
enter
add
and
and
fisttps
hlt
xchg
jecxz
mov
or
push
add
mov
add
add
dec
add
or
xchg
mov
add
ja
adc
mov
testl
sarb
add
jnp
and
pop
lahf
mov
repnz
add
add
jo
mov
dec
movsb
or
inc
cmp
inc
add
add
ret
push
xlat
sarb
ss
mov
fsub
ret
int
cli
pop
orb
add
mov
mov
inc
add
xchg
iret
inc
add
movsb
into
xor
roll
adc
dec
add
jbe
outsb
add
add
sbb
mov
cld
or
lret
hlt
out
int3
pop
fcmovnb
loopne
add
jns
test
cmp
mov
mov
out
leave
xchg
xor
push
add
sbb
nop
push
add
mov
add
xchg
stc
xlat
ffreep
sbb
fxch
flds
loopne
xchg
jbe
xchg
mov
or
bound
loope
fisubrs
sarl
add
inc
fistpll
xor
cwtl
ret
add
mov
dec
add
cli
add
jmp
or
add
cld
add
mov
nop
mov
mov
push
add
ret
jmp
add
cli
mov
lcall
inc
sbb
push
push
or
add
xchg
and
daa
mov
mov
test
outsb
add
ret
cmpl
xor
addb
add
dec
add
cmpl
sub
in
add
dec
aam
js
add
icebp
jne
sahf
xor
in
pop
sub
add
lods
cmp
ja
sbb
pop
inc
add
notl
lret
outsb
add
ja
add
push
add
pop
inc
jl
iret
push
add
add
add
xchg
push
add
pcmpgtd
push
add
dec
add
add
add
inc
push
add
daa
push
sahf
mov
xchg
sbb
in
dec
add
xchg
lea
add
add
mov
sbbl
add
scas
insl
lods
mov
pop
shll
iret
pop
add
test
jmp
pop
out
add
push
add
ucomiss
pop
dec
cmp
mov
xlat
pusha
add
add
xor
add
mov
in
int3
arpl
add
insb
add
lods
rorb
add
sub
mov
dec
add
add
inc
add
js
sub
incb
fcmovnb
shrl
add
or
push
add
add
ret
popa
std
cmpsb
int3
mov
test
mov
stos
jb
leave
jne
shrb
add
rolb
aaa
mov
add
add
xchg
dec
jge
mov
xchg
jl
pop
sti
lcall
pop
or
or
repnz
pop
xlat
and
int3
push
lds
out
mov
lds
imul
ja
push
jle
mov
roll
arpl
adc
dec
add
jp
stos
push
enter
mov
pop
pop
add
pop
add
imul
mov
add
add
sti
add
ret
mov
xor
stos
lods
jg
andb
adc
adc
mov
jp
jae
ljmp
mov
jp
cmpsb
pop
push
add
add
push
add
insl
in
inc
push
add
inc
mov
inc
add
add
lcall
add
cmp
mov
inc
add
add
cmc
mov
mov
and
sub
mov
fsub
push
sbb
add
add
cmpsb
dec
add
ret
or
rcrb
mov
scas
dec
xor
lret
cs
push
in
fsubs
mov
xor
xlat
in
add
stc
std
fimull
and
or
les
add
add
cmp
fwait
jge
mov
js
insb
add
nop
mov
mov
loope
add
jne
pop
pusha
add
lea
imul
add
mov
mov
inc
add
outsb
add
pop
aas
rcll
push
scas
loop
add
cltd
iret
fcomp
aaa
addr16
or
repnz
clc
mov
jne
mov
sbb
mov
lret
sahf
mov
add
pop
add
jb
daa
push
add
push
ljmp
add
add
add
jnp
pop
add
data16
daa
or
sub
repz
add
add
fcomp
push
add
sub
xorb
add
cmp
pop
dec
std
sub
loope
and
adc
add
hlt
sarb
or
dec
pop
and
scas
movb
jns
cld
pop
add
xchg
push
add
inc
add
add
xchg
adc
movsl
cmp
loop
mov
shl
and
cmp
arpl
add
push
int
jbe
cmc
inc
pop
mov
add
daa
sbb
add
or
add
xchg
push
mov
mov
jge
push
fsubs
jecxz
add
sbb
add
enter
mov
repz
add
sbb
sahf
sahf
ret
fstl
mov
test
push
add
mov
mov
adc
inc
xor
xor
adc
add
popf
xchg
fwait
jno
mul
pop
shrl
jmp
into
pop
pusha
add
fsts
add
jg
mov
sub
popa
inc
clc
out
scas
jae
add
cmp
xor
inc
add
or
sub
pminub
add
jmp
and
nop
test
mov
add
add
aaa
shl
pop
add
lahf
jmp
lods
fsubr
push
add
jmp
arpl
add
cmp
cli
sbbl
push
add
dec
mov
sub
xor
popa
repnz
out
aad
je
out
je
loopne
add
add
movsb
bound
dec
add
xchg
pop
add
or
stc
outsl
stos
adc
add
mov
push
sub
shl
lea
ljmp
mov
fwait
cltd
mov
mov
mov
mov
add
test
push
addr16
into
sbb
es
cmp
add
mov
in
mov
aas
add
das
xchg
pop
iret
xchg
xchg
dec
add
add
add
add
add
ljmp
add
lahf
pop
add
movsb
xchg
out
insl
inc
adc
mov
mov
scas
fsts
add
add
add
cmp
push
std
je
in
dec
add
add
popl
test
add
add
jo
xchg
add
or
cmpsb
jns
add
adc
jbe
aam
lds
sahf
pop
add
jns
inc
add
sub
int3
stc
sti
fsubs
add
inc
dec
add
jnp
lahf
dec
add
add
cmc
push
add
outsl
call
adc
fldenv
rcl
into
dec
dec
pop
add
add
adc
lods
lcall
mov
add
add
shll
outsb
add
mov
or
in
ret
filds
pop
inc
add
mov
mov
insl
jbe
add
add
outsb
add
pop
ja
adc
mov
mul
mov
adc
jle
jmp
push
add
adc
aaa
aaa
fstp
addb
sbb
insl
stc
cmpsl
or
pop
add
jo
jo
nop
adc
cmp
test
xor
call
jae
dec
out
test
sti
repnz
xorl
fbld
fisubrl
jg
xchg
lahf
lahf
sbb
cmpsb
fwait
xchg
int3
pop
add
jle
decb
push
add
sub
shr
adc
sub
cld
sub
incl
push
add
cmpb
lret
int
add
sbb
add
xchg
xlat
mov
sub
pop
roll
add
addr16
add
add
clc
xchg
push
add
adc
jb
cmp
add
adc
inc
pushl
sub
or
xchg
jmp
add
sbb
loop
mov
inc
cmp
jns
jp
adc
xlat
test
mov
add
shrl
add
fcompl
movsb
pop
xlat
test
mov
pop
add
push
mov
jecxz
lods
pop
jns
fdivl
mov
jmp
add
add
sbb
mov
fldz
add
je
lods
jno
inc
add
dec
add
lret
out
ss
into
mov
lods
inc
adc
jecxz
insl
xchg
xchg
test
jne
int3
loope
add
je
dec
add
ja
add
mov
ret
add
add
cs
mov
sbb
jge
add
or
mov
in
aaa
out
bound
lods
lods
mov
and
call
add
mov
add
lods
scas
inc
or
and
jmp
xchg
and
and
dec
add
outsl
xor
add
push
pop
aad
jno
add
mov
lahf
ror
arpl
addr16
sbb
jge
imul
or
add
jecxz
mov
add
ds
xor
cmp
add
xchg
and
inc
add
push
sub
repz
mov
xchg
int3
aad
adc
xor
jns
xchg
lea
add
push
add
and
out
and
mov
add
adc
data16
imul
mov
pop
add
and
sbb
add
aad
add
lahf
enter
cmp
insl
repz
mov
adc
add
add
inc
add
add
add
add
nop
dec
add
dec
sbb
daa
add
movsb
cmp
pop
lock
bound
repnz
js
cmpsb
and
aad
mov
mov
mov
jp
cmp
rcrl
movsb
xor
int
push
xchg
sub
addr16
mov
mov
pushf
jmp
mov
bound
cli
out
add
mov
add
jecxz
jmp
fs
loop
add
add
cltd
movb
cwtl
cmp
push
add
adc
and
mov
mov
or
add
adc
add
inc
add
inc
add
add
lret
xchg
cmpsb
out
add
int3
test
add
stc
xor
push
add
mov
jns
add
std
mov
add
sahf
lds
or
loopne
add
out
hlt
cmpb
add
movsb
sahf
jne
jg
call
dec
add
jo
mov
mov
lea
lcall
pop
clc
mov
jp
cmp
jecxz
rcl
xchg
sbb
add
shlb
mov
cmp
push
add
add
push
pop
add
jle
sti
mov
mov
add
inc
insl
addb
ret
sahf
inc
pop
arpl
add
or
repz
mov
sarb
push
mov
pop
add
jge
gs
and
je
pop
js
aam
add
xchg
rcr
add
dec
and
roll
add
cmp
dec
add
cld
push
add
scas
xor
imul
fsub
sub
mov
dec
cs
inc
sub
and
adc
mov
add
sub
cmp
in
pop
add
daa
fwait
xor
arpl
out
mov
pop
add
out
aam
fidivl
inc
mov
jb
jmp
jmp
add
popf
mov
jnp
cltd
in
loopne
add
push
sarl
loop
lret
jle
add
je
out
aaa
ret
xchg
and
mov
add
cltd
adc
sub
je
inc
add
out
sub
pop
sbb
fbstp
inc
add
xor
loope
add
xchg
jmp
clc
nop
sahf
subl
ret
and
add
add
mov
xor
mov
lret
push
and
push
fistpll
frstor
testb
ret
mov
arpl
mov
bnd
xchg
lret
les
add
stos
xchg
sti
add
fcompl
add
push
cmp
jne
sub
stos
pop
fwait
jl
out
popf
cmc
xor
shlb
mov
ja
add
jne
add
dec
add
dec
sbb
sbb
fisttps
aaa
push
add
pop
add
mov
clc
in
xlat
and
or
xor
push
sbb
movsl
push
jg
jns
push
add
pop
xchg
push
add
dec
jnp
test
add
push
add
ljmp
cs
dec
pop
add
fsubs
das
jnp
enter
push
add
dec
pop
cmp
adc
je
xchg
xchg
jmp
ret
rcl
sub
ljmp
mov
mov
push
add
add
mov
hlt
mov
add
jmp
jbe
popf
bound
xchg
rcrl
inc
add
outsb
add
inc
add
inc
add
jbe
xchg
push
pop
and
test
add
scas
add
shlb
sbb
xor
fidivl
add
popa
lret
lret
mov
add
sbb
push
mov
add
push
add
mov
jp
scas
insl
sbb
sarl
addl
sbb
imul
add
out
add
pop
add
jnp
and
jne
pop
add
add
cmp
outsl
jb
pushl
lds
or
sbb
inc
loope
loopne
in
push
xchg
lahf
imull
add
mov
jecxz
add
add
add
jbe
add
jecxz
add
lea
cs
cmp
add
lods
repnz
dec
add
add
sub
add
push
mov
add
repz
rorl
les
aas
ja
cmp
inc
add
out
cmpsl
loop
or
jl
mov
add
pop
fcoml
fstps
pop
cmpsb
mov
das
pusha
add
add
dec
add
add
cli
js
sub
or
sub
out
inc
adc
daa
pushf
pushf
test
add
cwtl
int3
addr16
or
ret
add
add
mov
add
xchg
jge
dec
add
add
pop
aaa
push
mov
add
dec
jns
lock
jns
aam
movsb
out
nop
jae
add
sub
pop
scas
xor
lcall
and
sbb
jo
lcall
rcr
mov
add
pop
les
sbb
test
jae
imul
in
aas
jne
sti
dec
add
movl
adc
outsb
add
cwtl
jl
jnp
add
add
jmp
mov
int
rol
imul
hlt
mov
xlat
or
push
add
jg
mov
adcl
add
add
js
adc
mov
add
xlat
dec
add
cwtl
outsb
add
leave
xchg
lods
ret
rorl
add
sub
in
rorl
push
add
add
add
add
add
add
lcall
aam
mov
mov
jne
pusha
add
cmpsl
xorb
add
mov
add
loope
fbld
rclb
adcb
add
adc
sti
sub
fsubrs
shll
ficomps
add
pop
add
movsb
jo
cmc
sub
in
dec
sub
int
add
sbb
mov
add
ss
scas
inc
sbb
xchg
addr16
mov
out
sbb
xchg
inc
add
lret
mov
sbb
sub
mov
lret
add
add
pop
dec
imul
mov
cmc
mov
sub
mov
test
inc
add
cmp
or
mov
mov
mov
xchg
add
enter
add
cmp
xor
and
mov
and
add
aas
outsl
lret
inc
add
add
enter
cmp
test
or
sbb
add
push
add
sub
mov
add
add
add
fldenv
add
fidivs
jnp
jnp
xchg
imul
and
int
ljmp
repz
xchg
negb
add
std
sub
jns
add
test
fistpll
addr16
xor
insl
sbb
mov
add
fucomp
fwait
bound
mov
pushf
cmpsl
fwait
repnz
orb
mov
add
jp
outsl
lds
add
adc
shll
add
iret
xchg
fcomp
or
mov
add
mov
add
add
add
jge
fstl
add
xor
mov
loope
add
roll
add
sub
mov
cmp
add
jmp
pop
pop
pminub
outsl
inc
cld
jns
rcll
add
pop
jp
popf
push
add
xor
adcl
pop
add
sbb
push
and
jae
add
lods
pop
add
cmpsb
movsl
push
cmp
pusha
add
dec
lods
arpl
out
sub
fucomp
add
pop
add
fucomi
je
lock
pop
add
insb
add
add
add
lcall
lods
shrl
movsl
rorl
pop
imul
stc
mov
cmp
lea
aaa
stos
pusha
add
add
sbb
daa
das
or
push
stc
xchg
dec
add
enter
call
adc
add
add
add
mov
add
data16
lret
mov
stc
or
jno
add
loop
dec
add
popf
jge
ret
dec
add
dec
add
pop
fwait
ljmp
xor
enter
add
lods
mov
call
push
add
push
add
cli
add
arpl
add
popa
aas
mov
in
add
mov
inc
push
sbb
inc
add
add
ret
stos
and
call
and
and
or
clc
movsb
addr16
mov
add
loop
add
fdivrs
inc
add
add
xor
into
dec
pop
mov
nop
mov
xchg
mov
das
bound
xchg
xchg
imul
mov
jecxz
dec
add
jecxz
add
add
rcll
add
ucomiss
sbb
add
cmp
pop
in
pop
add
cs
xchg
and
pusha
add
add
sbb
repnz
andl
add
popf
shll
ss
iret
pop
or
in
adc
mov
xchg
lods
in
fs
fwait
bound
pop
add
icebp
add
fwait
push
dec
lahf
xlat
enter
dec
adc
add
add
add
add
filds
push
add
or
mov
xor
rclb
mov
mov
inc
xchg
add
call
mov
rorb
add
pop
loope
push
add
notl
jnp
mov
inc
sbb
out
mov
fistpll
add
xor
adc
test
pop
add
xor
sub
test
add
repnz
testl
in
xchg
sti
rolb
add
notb
push
add
sub
lock
repz
add
cmp
add
jmp
add
lret
add
push
mov
add
xchg
inc
add
mov
in
add
xchg
clc
enter
adc
add
sarb
add
cmp
push
add
sti
movb
aam
sub
or
add
ljmp
adc
fistpll
bound
mov
inc
cmp
mov
add
add
jb
pop
add
pop
add
cli
dec
adc
push
add
jns
jbe
in
add
pop
add
add
out
shrl
mov
fwait
into
xor
add
add
and
scas
aas
push
add
xor
add
js
mov
add
add
xchg
inc
add
mov
jae
jle
or
outsl
out
and
sub
pop
out
jb
inc
mov
add
and
add
add
cmp
cmp
fisubs
mov
loop
rcl
jno
aaa
inc
inc
add
add
add
add
mov
lahf
aad
imul
add
popf
push
add
scas
movsl
push
add
mov
out
sahf
movsb
or
enter
pusha
add
pop
add
pop
add
aaa
dec
add
mov
add
mov
sub
push
add
xor
mov
jl
nop
repz
jg
mov
xor
mov
and
push
insb
add
add
add
repnz
cmpsl
push
add
fcoml
add
jns
xchg
addr16
push
fbstp
add
xchg
jbe
ljmp
orb
loope
shrb
clc
dec
add
add
mov
cmp
rol
mov
sub
out
pop
push
add
xchg
cmp
pop
add
notl
sbb
mov
pop
les
ljmp
add
add
scas
push
add
jo
insl
aaa
jg
jo
subb
jne
mov
add
mov
add
mov
add
add
call
xchg
popf
pop
add
lahf
push
adc
lahf
mov
inc
add
popf
out
adc
push
add
sbb
cmp
cmp
mov
mov
add
fwait
mov
add
sbb
insb
add
cmpsl
orb
mov
add
add
inc
add
in
jmp
xchg
inc
pop
lahf
inc
add
add
call
mov
mov
add
add
push
add
dec
test
insl
mov
ss
movsl
int
push
add
pop
adc
int
add
arpl
xchg
ljmp
stos
cmpsb
in
add
cmc
adc
or
lock
aam
add
loope
test
xchg
dec
xchg
out
movsl
fdivrs
incb
add
adc
arpl
into
jb
lock
add
add
add
add
into
out
pushf
jb
mov
inc
add
jg
add
subb
int
addr16
add
pusha
add
test
stos
fs
imul
add
das
daa
inc
cwtl
mov
fxch
xor
lret
clc
jg
inc
add
inc
mov
add
add
add
bound
jle
lock
and
adc
sub
insb
add
xchg
outsb
add
add
add
aaa
addl
pop
add
lea
add
mov
fbld
push
gs
mov
rolb
test
mov
dec
add
xchg
sbb
out
cmpsl
nop
cli
add
lock
dec
add
imul
add
addr16
stos
xchg
sbb
add
add
add
nop
addr16
gs
jmp
mov
sub
fcmovnb
roll
add
add
test
add
mov
lcall
dec
add
je
mov
add
cwtl
or
iret
into
jne
mov
adc
and
add
sub
add
push
adc
xor
push
add
loop
stc
jns
xchg
jns
add
das
imul
mov
add
and
sub
loop
repz
add
cmp
popf
inc
add
cld
int
cmp
add
pushf
push
add
mov
cltd
loop
mov
addr16
fadds
in
sbbl
enter
add
add
arpl
movsl
or
mov
fs
sub
add
jp
das
xchg
fnstsw
jne
jmp
pop
jp
xlat
cmp
pusha
add
add
add
stos
stc
filds
sbb
xchg
sub
rcr
aas
pop
add
jno
add
and
negl
adc
add
cmp
mov
fistps
pop
add
pop
push
add
aaa
loop
jmp
scas
add
fisttps
shll
pop
in
mov
add
fidivs
jbe
in
mov
into
scas
mov
sbb
add
mov
fwait
sbb
add
ja
cltd
fwait
aas
or
add
jno
jecxz
push
add
xchg
adc
test
aad
push
into
hlt
ret
dec
add
mov
inc
add
xor
insb
add
clc
fsts
add
add
in
add
out
arpl
mov
and
aad
ja
push
sbb
mov
push
add
jb
pop
js
psubusw
add
adc
cmp
ret
repz
cltd
xchg
outsb
add
lahf
addr16
addb
xchg
imulb
add
stos
ds
xor
enter
sbb
data16
flds
adc
push
fadd
sbbl
add
cli
or
xor
add
jle
out
add
add
out
add
pop
add
imulb
sub
xchg
adc
add
mov
clc
in
add
add
test
mov
sub
pop
lock
sbb
in
cmpsb
insb
add
mov
add
cmp
mov
xchg
dec
pusha
add
add
add
mov
xor
jp
cld
inc
add
add
cs
mov
push
add
pop
push
add
fwait
jl
fstpt
inc
add
int3
call
add
add
push
sub
pop
push
add
outsl
jl
pop
adc
xor
scas
cwtl
mov
lret
mov
and
jnp
mull
or
cmpsl
push
add
push
add
test
test
add
and
cli
lret
and
or
adc
mov
add
xchg
scas
stos
in
cmp
xor
dec
add
cwtl
scas
stc
pop
or
add
and
aaa
mov
sbb
pop
add
dec
add
push
test
dec
add
jnp
push
add
inc
add
push
add
add
or
xchg
xor
fcmove
arpl
pushf
inc
lar
pop
add
sahf
push
push
and
add
dec
popa
imul
push
add
out
dec
sbbb
add
xchg
call
mov
data16
and
adc
fists
ljmp
add
adc
or
and
aas
std
mov
fwait
enter
shrb
add
mov
nop
mov
je
cltd
outsb
add
rorl
in
mov
add
in
cwtl
and
mov
cmp
imul
add
add
add
add
sub
add
add
push
add
jnp
mov
movsb
insb
add
out
sti
cmp
mov
add
jb
movsl
adc
or
subb
popf
xor
mov
loop
add
add
or
sub
sbb
mov
imul
add
add
or
sbb
adc
add
lods
lods
cwtl
insl
mov
adcl
outsb
add
and
adc
mov
mov
lret
mov
das
ljmp
stos
mov
mov
adc
pop
mov
insb
add
mov
push
add
push
fwait
jnp
sbb
add
int3
add
sti
out
adc
pop
add
in
mov
aaa
popa
xchg
mov
lock
mov
sbb
outsl
adc
mov
or
and
jno
add
inc
add
rcrb
add
and
insl
clc
mov
or
mov
xchg
insb
add
add
nop
imul
in
aam
add
pop
inc
add
fstl
in
loop
pop
add
mov
pop
add
add
mov
or
test
insb
add
add
add
add
add
jnp
add
lahf
inc
add
loopne
int
dec
add
dec
add
add
repz
mov
bound
arpl
in
add
xchg
cmp
add
insb
add
out
add
dec
add
add
add
add
jge
add
ret
inc
add
std
mov
xchg
mov
inc
inc
add
lcall
out
je
pop
data16
xor
loopne
xlat
sbb
xor
sub
andl
add
add
mov
add
movb
push
add
inc
outsl
jb
and
add
pop
sahf
mov
add
sbb
add
add
loope
add
add
cmp
sub
testb
add
mov
xor
pop
add
insl
mov
repnz
push
add
xchg
add
xor
into
aam
add
adc
mov
cld
sub
ljmp
xchg
sbb
shr
insb
add
lods
sti
pop
adc
fildl
add
test
lea
out
and
ret
lret
fsubrp
pop
jle
fstps
adc
daa
pop
add
xchg
xchg
lahf
sar
add
out
push
add
mov
lods
sbb
add
inc
std
ljmp
adc
int3
sub
jecxz
xchg
adc
imul
dec
div
sti
call
adcl
sbb
or
add
add
sahf
inc
add
xchg
xor
mov
add
lods
mov
inc
add
andb
push
add
scas
imul
and
leave
insl
jo
sub
outsb
add
sbb
mov
cmp
mov
add
xor
dec
add
lcall
cmp
dec
add
in
mov
add
add
out
xor
xchg
push
add
cli
mov
jp
lret
add
add
popa
lds
lock
add
loope
add
int
ret
add
stos
pop
call
ljmp
lods
mov
adc
dec
pop
cmpsb
mov
jge
mov
loope
and
sub
add
push
mov
inc
push
add
add
add
add
add
add
ljmp
push
add
pop
loopne
sub
adc
ljmp
das
mov
shrb
jb
rclb
mov
add
test
add
in
dec
add
add
roll
sbb
xor
mov
jnp
adc
ret
mov
add
and
mov
or
push
fsubrs
add
stos
shrl
add
cmp
loopne
xor
push
add
int
fcoml
in
jle
fsubrl
add
xor
daa
xor
fstpl
mov
repnz
pushf
xchg
sbb
jl
add
bound
sub
aaa
gs
mov
std
addl
inc
add
jbe
ret
lahf
pop
pop
pop
add
cmpsl
ret
mov
or
mov
xchg
inc
adc
xchg
add
add
add
push
sbb
dec
add
jae
fbstp
add
je
out
mov
sbb
jnp
add
fimull
add
mov
push
add
add
add
or
outsb
add
sub
add
add
push
add
leave
je
mov
les
sub
dec
inc
add
test
iret
push
pop
repnz
inc
xor
push
add
add
add
lret
bound
test
jno
stos
xchg
push
adc
dec
add
and
fildll
mov
or
add
xchg
and
testl
add
add
jle
lret
add
jnp
icebp
fcoml
shrb
push
loopne
pop
repnz
bound
in
add
out
cmp
add
add
add
add
stc
sbb
int3
sbb
add
popa
lock
add
mov
add
data16
std
out
jne
add
xor
rorb
inc
add
xchg
mov
cmpsb
adc
sahf
xor
mov
sub
add
add
cwtl
cli
mov
jns
mov
inc
push
add
lret
mov
xor
test
sarl
dec
add
jge
xor
out
add
out
popf
dec
call
ja
push
push
call
or
mov
out
mov
data16
add
xchg
loope
idiv
call
test
ljmp
push
stos
outsl
or
hlt
jbe
jl
scas
cli
fsubl
add
jno
pop
lret
divl
mov
mov
add
add
mov
add
pop
add
je
adc
add
rolb
add
mov
adc
sbb
sub
in
pop
iret
outsb
add
lds
out
pop
mov
test
add
add
jae
and
shr
or
add
sub
fwait
xchg
popa
lahf
add
loope
xor
add
mov
loopne
mov
dec
add
mov
movsb
push
add
add
popf
pop
sbb
xchg
jno
add
inc
mov
dec
adc
andl
mov
test
add
push
xor
sbb
shll
pop
push
add
dec
cmp
test
add
rol
jge
dec
sbb
in
setge
jecxz
add
aaa
cmp
out
adc
lcall
add
pop
xchg
add
pop
loop
fists
js
pop
xor
inc
and
mov
push
aas
add
inc
add
dec
xorl
sub
pop
xor
into
add
dec
pop
imulb
add
xchg
add
insl
adcl
dec
stc
adc
add
add
jno
scas
rep
call
adc
clc
inc
or
insl
push
add
fistl
rorl
add
sarl
add
std
jle
out
add
dec
xchg
repz
xlat
or
add
xchg
pop
adcb
outsb
add
jmp
mov
sub
push
add
rcll
mov
mov
fldenv
cmp
and
and
add
push
add
xchg
pusha
add
std
xor
adc
mov
addb
sub
xchg
divb
add
push
jae
ljmp
mov
icebp
adc
cmc
jae
jno
pop
add
add
jae
inc
add
push
or
js
sbb
add
pop
test
add
flds
jge
pop
add
aaa
lods
out
add
jp
sub
cltd
dec
icebp
jbe
loope
mov
add
add
sub
dec
out
std
pushf
ja
add
inc
std
mov
mov
add
je
aas
out
pop
mov
push
outsl
mov
je
adc
mov
out
push
add
dec
add
xor
xlat
repnz
add
add
pusha
add
outsb
add
and
xchg
xor
jno
add
mov
add
and
adc
add
add
repz
cmp
sub
insl
adc
add
mov
push
add
pop
add
mov
ret
fldcw
add
add
dec
shlb
pushf
in
pusha
add
jp
xor
add
add
jnp
mov
mov
add
ljmp
aam
pop
add
in
add
in
jnp
or
sub
add
xchg
inc
fldt
sbb
xchg
jecxz
add
sbb
mov
add
call
sub
test
fdivrl
dec
call
cld
mov
add
jno
add
add
adc
lahf
lds
xor
sahf
jmp
cmp
add
out
and
pusha
add
je
stos
test
arpl
leave
rclb
push
lea
push
add
sub
repnz
rcrl
add
shrb
add
ja
push
add
loopne
popa
cmpsl
repz
mov
add
lods
nop
add
ret
jb
mov
add
dec
add
push
mov
out
push
fsub
lret
xchg
cmpsb
mov
sbb
jbe
int3
cmp
sti
mov
sbb
mov
addr16
loopne
shll
fwait
sbbb
xchg
hlt
inc
add
test
add
fnstenv
jns
mov
sub
fistps
add
cmp
dec
add
lret
test
sub
mov
lods
inc
cli
ljmp
in
mov
rcrb
sub
pop
or
add
add
fbstp
cltd
push
add
xor
and
mov
adc
xchg
cmp
jecxz
fildll
sub
add
arpl
dec
add
add
add
add
jno
add
jo
jae
push
add
dec
add
mov
push
add
rolb
add
mov
add
sbb
mov
sub
jge
cld
test
jo
aas
nop
lahf
cwtl
adc
bound
add
mov
xor
inc
pop
pop
add
add
inc
add
ds
mov
add
aad
mov
add
lahf
movsl
daa
mov
pop
insl
test
xlat
mov
js
je
scas
cmp
cmp
jp
push
into
jno
ficomps
add
je
mov
xchg
ret
add
and
scas
out
add
hlt
fidivrs
gs
inc
mov
fisubl
test
ja
add
push
mov
insl
scas
adc
mov
inc
mov
add
enter
add
orl
enter
add
add
dec
add
outsl
and
mov
sbb
lret
sub
lods
fdivr
insl
stos
sub
cmc
enter
sbb
mov
add
push
add
add
pop
add
lret
push
add
ljmp
subb
jnp
sbbb
mov
push
add
pop
xor
pop
add
mov
in
adc
jb
jl
xor
mov
sahf
stos
iret
xchg
jge
fsubl
adc
xor
and
iret
inc
add
add
add
add
dec
add
adc
leave
je
mov
add
dec
add
add
add
sub
jecxz
add
roll
add
outsb
add
ret
push
add
pop
add
xchg
xor
pop
sahf
adc
loope
cmp
mov
mov
add
or
ja
add
pop
xor
iret
gs
cmp
fistps
filds
insb
add
or
aad
hlt
rcr
dec
xchg
ret
fwait
ja
add
push
test
adc
adc
outsl
push
add
je
cmp
jmp
sahf
repnz
add
xor
inc
mov
jg
add
or
pop
in
mov
xor
push
add
lods
and
loopne
js
cmp
adc
addb
pop
add
add
test
add
add
inc
loop
rcrb
jo
adc
gs
pop
ret
sbb
pop
xchg
inc
std
xchg
jl
std
fucomi
or
fsts
dec
add
add
add
add
add
cltd
cmpsl
das
in
fbld
cmc
xchg
lds
xchg
jmp
inc
sbbb
out
mov
cmp
xchg
das
xor
jge
lods
xchg
mov
leave
xor
jg
sub
pop
add
mov
pop
add
popf
inc
neg
jg
inc
add
shll
add
add
xor
leave
lods
xor
adc
out
or
mull
jb
cwtl
sbb
jno
lret
rclb
inc
add
jo
pop
popf
daa
and
pusha
add
fstpt
cmp
mov
push
je
pusha
add
add
orb
iret
pop
add
or
arpl
add
xor
pinsrw
ficoml
push
data16
pop
or
fwait
insl
cmp
mov
or
shlb
push
add
mov
mov
jle
xor
out
jns
add
stos
and
ds
andl
pop
add
add
packsswb
fsubl
add
outsl
pop
ret
add
in
call
add
add
add
add
leave
lods
test
and
add
sahf
sahf
popa
jno
lds
into
mov
add
add
pop
stos
into
mov
ja
inc
cld
ljmp
add
adc
add
add
add
clc
stos
and
add
popa
sbb
xchg
push
adc
idivl
or
jns
and
mov
std
push
add
add
test
aas
pop
add
cli
xor
add
js
inc
add
or
jg
pop
add
mov
dec
dec
dec
xor
inc
add
sbb
fists
cmp
lahf
push
add
add
add
das
adc
in
enter
jno
inc
out
inc
add
jp
cmp
movsb
xchg
or
popf
sbb
jb
xchg
inc
add
add
add
xchg
pop
add
stos
aas
movl
pop
and
leave
jecxz
add
cmp
inc
mov
mov
nop
adcl
add
xor
add
xchg
push
movsb
ret
add
xchg
sbb
sbb
movups
add
mov
mov
add
add
sbb
adc
rcl
cmp
cmp
jns
push
add
add
pushf
jecxz
in
sbb
xor
es
lods
imul
xorl
lods
fisubl
mov
sbb
data16
mov
xor
dec
ret
push
mov
add
shll
ror
les
add
cmpsb
in
add
outsl
in
pop
mov
adc
pop
pop
push
add
icebp
outsb
add
add
int
jne
orl
add
add
into
test
xchg
xchg
add
add
jmp
jge
jg
or
add
add
insl
rcl
lret
je
or
out
cmp
add
jl
fldt
add
add
xlat
test
add
add
add
add
cmp
inc
pop
fcmovnu
std
adc
or
enter
fldenv
dec
xor
cmp
xlat
cmp
mov
jmp
cmp
and
adcl
fwait
xor
mov
add
xchg
sbb
or
data16
push
add
xchg
adc
sti
xchg
mov
add
lea
loop
jmp
add
add
add
lret
lret
mov
xchg
test
sbb
pop
js
lods
jle
repz
inc
jmp
add
cwtl
lcall
add
cmpsb
divl
mov
add
xchg
outsl
jmp
popa
stos
test
add
sub
pop
rorb
add
loope
out
cmp
loope
lea
mov
jmp
add
and
cmp
pop
mov
xchg
ret
sub
add
sbb
lea
xchg
jbe
icebp
lret
xor
and
add
pop
add
scas
dec
xchg
sbb
pop
sub
pop
xchg
test
add
pop
jecxz
rolb
jnp
mov
add
add
ret
sbb
in
mov
into
push
add
add
push
add
add
add
scas
jg
inc
add
dec
mov
dec
add
popf
negl
add
mov
add
shll
and
sbb
add
leave
push
add
xchg
inc
jbe
out
test
outsb
add
pop
and
inc
sub
popa
xor
shlb
sub
and
outsb
add
add
jbe
xor
ljmp
xorb
mov
xor
pop
loopne
jl
imul
out
inc
or
xor
add
jbe
cmpsb
loop
jbe
ret
add
stc
jl
sub
in
adc
push
or
iret
repnz
cmp
inc
add
imul
mov
pop
add
ficompl
add
add
fbld
mov
pop
ret
jmp
in
adc
mov
aas
mov
mov
enter
movsb
movsb
pusha
add
dec
inc
add
add
std
mov
rol
pop
scas
lods
scas
leave
dec
xchg
mov
add
ljmp
or
inc
add
dec
lock
dec
into
outsl
inc
add
add
rcrb
or
into
lods
and
movsb
pop
jl
add
add
add
and
add
sub
loopne
add
add
adc
aam
mov
add
add
mov
pop
sub
pop
lods
push
push
imul
loopne
mov
jo
loop
lods
pop
push
add
add
xor
popa
cmp
in
insl
jge
sti
mov
cmpsl
and
or
outsb
add
mov
loopne
adc
xchg
mov
add
push
add
and
scas
jns
add
add
pushf
fistpll
sub
add
scas
shl
mov
pop
or
aaa
in
add
mov
pop
add
add
outsl
push
jae
add
cmc
cmc
adc
add
pop
sahf
pop
adc
pop
or
testb
lret
aad
sub
fistl
rol
push
add
and
xlat
popf
mov
add
add
xlat
mov
add
add
outsl
and
dec
add
jmp
or
add
in
cwtl
jo
shlb
add
cmp
aad
xchg
sbb
fdivs
mov
dec
xchg
roll
fstpl
add
xor
xlat
pop
popa
xor
add
push
fwait
test
cld
inc
add
int3
hlt
fnstenv
add
adc
bound
mov
cmp
and
dec
outsl
dec
imul
add
jbe
jo
jecxz
add
and
add
stos
js
mov
rorl
popa
jo
dec
add
add
clc
push
aam
xchg
push
add
bound
push
add
add
iret
aas
dec
dec
stc
les
pop
pop
push
outsb
add
push
add
cld
sub
push
add
or
fnsave
sub
outsb
add
add
stos
push
add
ja
sub
pop
mov
sub
sti
xor
imul
mov
xor
add
inc
test
mov
inc
add
inc
add
cmpsb
push
add
xchg
inc
xchg
decb
clc
push
sbb
mov
add
sub
add
add
cmp
data16
push
add
test
ja
fsubrl
push
add
jnp
subl
jle
mov
repnz
adc
add
je
xor
push
add
outsb
add
sub
dec
jb
or
xchg
loopne
xchg
sub
ret
xor
cltd
add
ss
adc
xor
add
sbb
cmpsl
and
cld
push
add
into
cmc
pop
add
andl
add
aaa
out
mov
add
icebp
adc
xchg
fadd
or
sti
inc
call
sub
fcompl
add
data16
rorb
add
fdivs
add
pop
add
add
std
jg
fdivr
nop
test
repnz
xor
push
add
in
mov
es
jne
add
pop
pushl
ror
int3
xchg
dec
add
add
into
xchg
pop
add
and
lods
push
add
add
lods
inc
call
shlb
push
add
clc
sub
pop
add
popf
add
psadbw
rcr
daa
pop
add
fdiv
in
xor
push
add
imul
add
add
je
cli
sbb
lea
push
add
add
aam
add
add
add
fmull
xchg
rcl
or
inc
add
add
hlt
add
add
xlat
add
ret
xor
mov
add
add
add
add
in
pop
add
or
iret
and
add
daa
jns
inc
add
add
push
xchg
mov
add
add
fidivrs
add
xchg
sub
xchg
add
shlb
xchg
jl
stos
inc
sub
mov
adc
outsl
adc
adc
jb
add
jo
out
push
pop
cld
adc
lods
push
add
ret
bnd
jae
out
cld
hlt
push
pop
add
xchg
movsl
negl
cmc
sbb
push
add
neg
jl
xchg
dec
add
add
repnz
fstp
lret
rclb
add
fbld
add
add
dec
add
jl
test
or
add
iret
pushf
adc
loope
je
inc
add
mov
jae
jecxz
aad
add
fidivrs
add
push
dec
add
xchg
push
add
push
add
std
dec
add
cld
ret
fcmovne
fisubl
insb
add
push
add
add
push
add
pop
cmpsl
repnz
add
add
lret
adc
mov
rcrb
sbb
add
add
sub
add
mov
aaa
notl
or
sub
push
add
movsb
dec
add
sti
jp
mov
add
add
insb
add
adc
cmp
cmpsl
xor
xchg
cmp
xchg
add
add
pushf
xor
cmc
les
add
fimuls
add
lret
adc
icebp
adc
mov
mov
mov
mov
lahf
add
lahf
iret
lret
and
pop
sbb
dec
out
nop
shl
ret
not
in
icebp
dec
adc
push
add
rcrl
push
aam
push
nop
cmc
push
add
repnz
lods
cmp
dec
add
or
aad
shl
out
xchg
mov
xor
or
ret
xchg
adc
arpl
add
add
add
push
xrelease
int
add
sbb
lock
jp
xchg
sbb
aas
lods
iret
and
push
add
insb
add
test
add
add
mov
push
add
clc
adc
lret
movsb
movsb
cwtl
lds
adc
add
repz
add
jns
add
mov
arpl
imul
push
add
jp
scas
stos
hlt
repnz
dec
pop
xchg
push
jmp
lods
jae
insl
scas
les
adc
mov
add
xchg
and
add
in
mov
xlat
adc
cs
daa
js
ret
pop
out
outsb
add
add
outsl
jecxz
pop
inc
add
mov
dec
add
add
mov
aas
push
mov
and
or
and
and
out
out
lea
or
les
shrl
inc
cmp
mov
jmp
add
add
mov
and
sub
push
mov
aas
mov
or
lahf
cmpsb
fisttps
sbb
out
jle
notl
add
add
jp
sub
gs
add
add
dec
pop
add
add
out
add
pop
add
mov
add
add
inc
add
dec
add
or
dec
imul
jno
add
mov
sbb
pop
mov
xchg
add
add
test
xchg
cmp
pop
push
pop
jne
add
repz
sarb
mov
add
add
leave
mov
push
stos
repz
dec
add
mov
xchg
add
inc
xchg
mov
add
jb
jb
test
and
jg
xor
or
push
add
add
repz
test
add
iret
aas
cmp
or
dec
add
cmc
stos
mov
xchg
loope
add
add
push
add
add
test
add
add
mov
xor
sub
xchg
stos
sbb
scas
mov
stc
jg
jmp
cmpsb
sbb
add
add
add
add
push
lcall
pop
or
test
push
mov
push
add
add
hlt
or
fadds
add
stos
repnz
lock
jnp
pop
add
add
cmp
test
jge
sbb
cmp
add
or
adc
cltd
inc
add
ret
movsl
xor
sub
jecxz
ficoms
add
lret
cltd
sahf
sbb
add
add
or
xchg
pop
bound
js
mov
mov
pop
add
sarb
cli
cmpsl
bound
enter
add
test
jmp
imull
in
add
xor
add
clc
xor
jl
mov
adc
and
dec
cmp
scas
cld
dec
add
add
pop
add
sub
push
inc
add
adc
sahf
add
add
push
mov
push
add
ficomps
xlat
adc
mov
pushf
imul
jne
add
add
out
repnz
mov
cld
out
add
adc
inc
add
jae
xlat
lea
add
push
pop
inc
pop
push
add
xchg
out
mov
ret
in
add
add
pop
cld
adc
add
and
gs
push
add
add
and
mov
out
out
clc
pop
and
add
add
add
fmull
lea
jl
ficomps
sbb
shrb
decb
lds
add
mov
imul
add
and
xchg
mov
mov
fwait
sti
pop
ret
pop
shrl
data16
inc
sbb
jb
xchg
pop
add
leave
addr16
inc
add
pop
xor
add
int3
shll
add
add
repz
jge
inc
pop
add
sub
mov
add
add
jbe
shrb
aaa
shlb
mov
xchg
cmp
in
stc
ja
adc
addb
and
lret
mov
arpl
add
xor
mov
add
cmp
jae
in
jne
push
add
fistps
adcb
add
popa
loop
add
loopne
add
mov
pop
js
push
add
lods
mov
bound
or
sbb
aaa
out
call
push
add
jecxz
or
jmp
iret
and
cmpsl
push
lea
lea
xchg
leave
or
or
mov
sub
gs
add
ror
movsl
js
not
pop
and
aad
lds
js
lahf
addr16
in
and
push
add
and
lahf
lods
jmp
add
jle
dec
add
add
inc
push
imul
dec
adc
cmpsl
rolb
adc
imul
testl
add
popl
push
add
add
popf
leave
cld
xor
ret
cmpsb
test
js
dec
ret
jle
int3
stos
fwait
jl
cmp
add
ds
icebp
rcr
mov
mov
mov
add
aad
ror
cld
popa
mov
add
not
jbe
fucom
cmp
and
out
adc
sbb
add
lock
ficoms
in
f2xm1
mov
int
pop
xchg
dec
xchg
mov
add
add
test
sub
add
adc
loop
loop
sarl
jg
in
jp
mov
mov
aas
add
inc
inc
add
call
add
in
cmpsb
jle
add
sahf
data16
fcomp
pushf
jge
mov
inc
add
sahf
inc
add
jle
dec
add
add
add
add
mov
fwait
dec
inc
add
fsubrs
lahf
pop
dec
add
or
jbe
xlat
xchg
sbb
xor
add
lods
movsl
xor
out
add
mov
in
pop
add
fsubs
fimuls
mov
dec
add
add
test
sbb
add
adc
xor
add
pushf
fwait
pusha
add
add
inc
mov
add
aaa
popa
sar
insl
addr16
dec
add
add
mov
jne
add
cmp
enter
add
push
out
lods
mov
add
das
loop
add
inc
fisttps
add
mov
outsb
add
repnz
sbb
jmp
aad
mov
push
movsl
pop
push
add
add
repnz
stos
out
mov
shll
add
cmp
jne
add
mov
in
xchg
imul
cmp
fadd
or
adc
fnsave
mov
add
cmp
pop
add
lods
in
adc
ret
sarl
dec
pop
pop
add
mov
add
cmp
push
add
add
aas
adc
sub
cli
out
lods
imul
mov
add
fadd
cld
dec
inc
add
adc
mov
es
repz
mov
bound
test
fisubrl
add
add
pushl
xchg
cmp
ficompl
jp
pusha
add
jle
lods
mov
dec
mov
sbb
and
or
mov
inc
add
add
or
push
add
adc
mov
add
dec
and
sub
push
add
add
nop
inc
mov
push
test
or
mov
or
xor
add
xchg
add
in
sbb
cmp
js
pop
add
add
lods
les
in
xchg
mov
mov
add
inc
add
hlt
jmp
inc
add
insl
mov
add
sub
in
push
add
mov
das
mov
cmp
jp
out
ret
ja
add
add
js
sbb
add
adc
xorl
pop
add
add
inc
add
imul
scas
adcb
insl
or
sub
jb
fstl
cmpsl
push
sbb
pushf
add
out
add
mov
push
and
jl
repnz
add
add
jb
adc
jbe
fstp
pusha
add
test
movb
or
mov
scas
pop
fnstenv
jno
fisttpl
dec
push
add
jo
ljmp
jo
add
cmp
ljmp
add
addl
sarl
dec
add
pop
add
mov
add
mov
pop
adc
xchg
dec
jmp
mov
dec
add
add
jns
xlat
or
xor
pop
add
adc
scas
leave
xchg
ret
into
arpl
ret
testl
divl
add
jae
add
sub
daa
adc
add
int3
pop
add
add
aad
aaa
push
jnp
or
push
add
mov
add
mov
mov
test
outsb
add
mov
mov
cmp
inc
add
add
pop
xchg
sub
std
mov
or
add
lret
jmp
ret
fisubl
add
mov
add
add
ja
or
fcompl
add
stos
mov
add
add
sbb
popf
popa
cmpsb
inc
aas
sub
stos
pop
gs
push
pop
xlat
movl
cmp
fwait
cmpsb
adc
add
jno
add
lods
mov
mov
mov
push
add
add
cli
dec
add
popf
cmp
jl
data16
std
jecxz
mov
jmp
xor
inc
add
stc
mov
incl
add
cmp
cmpsb
lahf
sbb
mov
add
pushf
xchg
jle
loopne
add
or
and
cmp
fisubl
imul
dec
add
daa
cltd
mov
mov
add
fbld
push
add
cmp
add
sub
loope
aad
add
sub
pop
add
repnz
add
jmp
fwait
out
xchg
mov
je
inc
add
jp
or
daa
jecxz
add
add
sbb
fdivs
add
add
rcrb
add
add
add
outsb
add
jno
sahf
xchg
or
add
mov
loope
add
xchg
cwtl
push
sbb
ffree
dec
add
or
add
xchg
stos
icebp
test
mov
add
push
mov
je
bound
nop
inc
mov
add
repnz
pop
add
xor
adc
push
add
sub
inc
xlat
xor
hlt
jno
add
cmc
out
add
mov
clc
out
xchg
int3
pusha
add
dec
mov
aaa
adc
daa
and
xchg
pop
add
dec
lret
daa
test
mov
adc
add
mov
pop
sti
sub
jo
ret
mov
and
lods
push
aaa
fsts
idivb
jne
add
add
push
add
cmpsb
inc
or
cli
fmul
call
mov
add
add
pop
and
mov
insl
add
in
bound
ficoms
add
add
insl
int3
imul
add
loopne
push
add
jbe
lock
pop
mov
add
ret
xchg
lods
push
and
add
sbb
aam
xchg
add
add
mov
sbb
add
add
stos
add
nop
je
pop
test
negb
inc
add
nop
xor
std
push
add
xor
insl
or
lret
pushf
insl
in
mov
mov
insl
or
mov
add
add
xchg
and
mov
add
or
jle
in
add
ret
xchg
mov
add
add
mov
mov
xchg
out
add
add
inc
add
roll
add
int3
daa
mov
dec
add
sub
jl
mov
mov
or
xchg
test
push
add
lcall
cli
sbb
fisttpl
sti
test
push
add
jg
into
add
scas
xchg
push
popf
shll
inc
mov
add
add
push
add
jne
sbb
add
add
add
push
add
jb
mov
inc
pushf
cmp
dec
add
push
add
adc
xchg
dec
sub
xor
jo
aas
pop
pop
add
scas
sub
push
add
push
push
add
adc
out
or
les
ret
lods
lods
xor
cmpsb
mov
dec
pusha
add
lret
pop
add
dec
add
fadds
add
jns
mov
mov
lret
arpl
and
jnp
outsl
inc
mov
in
or
imul
pushf
fsts
adc
shlb
enter
and
loope
cli
out
mov
imul
in
add
add
add
add
adc
cltd
mov
sahf
stos
add
lret
lea
add
int3
sbb
inc
add
xchg
mov
add
sti
dec
add
sar
jne
add
add
pop
test
inc
add
xor
fcomps
daa
fwait
or
cmp
sbb
push
add
pop
dec
add
leave
and
mov
sti
and
and
mov
add
push
loop
add
add
xor
mov
add
outsb
add
push
add
add
inc
add
shl
out
xchg
iret
pop
stos
cmp
stc
cmp
sbb
or
scas
mov
jp
mov
sbb
xor
jle
pop
add
es
pusha
add
mov
scas
sub
fcomps
call
cmc
pop
adc
fwait
call
xchg
pop
add
mov
or
add
and
sarb
fcmovbe
imul
iret
fcmove
int
loope
daa
sub
xlat
xchg
mov
test
jge
or
add
mov
add
add
ja
adc
out
mov
dec
add
add
hlt
addb
lahf
xlat
stc
mov
add
roll
ficoms
jnp
enter
ret
mov
add
sub
out
lret
add
add
mov
fwait
imull
push
add
add
std
and
pop
sub
andl
roll
mov
and
mov
data16
add
add
jecxz
push
add
rcrl
je
and
cmp
cmc
lods
ds
add
in
popf
fstl
imul
fwait
clc
mov
div
xchg
jg
or
inc
pop
in
out
add
sbb
fistpl
lret
pushf
out
scas
inc
lcall
pop
add
js
push
add
jb
cmc
xor
orb
push
add
shl
inc
int3
pop
scas
mov
add
ret
add
push
add
pop
xchg
inc
add
imul
add
add
loop
push
add
shlb
lea
mov
add
jae
add
dec
add
add
add
xlat
jecxz
loop
data16
mov
and
add
pop
ret
mov
push
add
imull
out
add
nop
bound
jge
add
xchg
sub
dec
imul
ficoms
mov
push
xchg
add
lahf
fnstcw
add
mov
add
cwtl
es
repz
ret
add
movsb
jbe
pop
jne
test
out
or
mov
jp
xor
add
sub
pop
or
incl
roll
fistl
pop
add
mov
into
adc
jp
fs
lods
pop
add
mov
inc
or
faddl
xchg
enter
dec
rclb
push
pop
mov
inc
idivb
jno
cs
inc
add
pop
andl
add
cli
and
je
pop
jl
and
aas
push
add
add
xchg
notb
add
add
push
dec
sbb
int
add
add
jb
and
push
inc
aaa
and
int
rorl
add
xchg
cs
das
push
add
loopne
add
mov
add
outsb
add
and
rorb
add
leave
ffree
repz
add
add
cmp
add
push
add
cmp
addl
mov
push
add
add
add
add
pop
add
add
test
fldcw
roll
push
pop
shl
pop
clc
enter
out
add
inc
popf
cmp
lods
pop
popf
jecxz
add
movsl
cld
mov
add
lea
mov
imul
mov
dec
add
or
inc
outsb
add
repz
lods
add
lahf
mov
out
icebp
pop
outsb
add
lock
cs
jl
ret
dec
cmpsb
xchg
outsl
aad
xorb
add
or
and
inc
xchg
fmuls
jl
inc
sbb
dec
add
add
xchg
add
sub
adc
in
popa
jmp
push
in
pop
add
add
scas
jbe
xlat
push
add
add
add
xchg
std
xchg
cmp
jge
sbb
in
pop
in
xchg
leave
lds
add
ljmp
add
lret
decl
stos
arpl
in
dec
add
movsl
daa
testb
sbb
pop
mov
outsl
jno
mov
add
je
int
out
sbb
mov
sbb
push
add
mov
test
push
add
adc
imul
add
add
jmp
inc
add
stos
cmp
pop
inc
dec
add
add
sbb
adc
inc
add
add
add
add
mov
mov
icebp
cltd
cmpb
jg
shlb
add
add
jge
mov
add
call
cwtl
movsl
add
add
add
add
mov
inc
sahf
jl
pop
push
add
add
xor
push
jge
xor
test
add
adc
add
cmc
cltd
iret
dec
mov
add
mov
mov
pop
int
addl
rorl
mov
add
add
sub
mov
cmp
repnz
add
jp
xchg
xchg
in
add
sar
bound
cli
push
and
mov
adc
pop
mov
aam
add
xor
or
out
in
bound
and
movsb
inc
add
add
cs
dec
jl
cltd
mov
lock
xor
xor
lea
add
addb
mov
sub
lods
vpsubb
ficoml
sti
jg
jbe
dec
add
fdivs
add
lock
add
add
dec
sub
adc
or
jecxz
add
jb
mov
add
mov
or
stos
mov
add
push
jg
pop
dec
add
aam
in
inc
add
jmp
add
aad
pop
add
add
pushl
add
add
mov
sub
fucomp
jl
enter
movsb
fistl
adc
mov
jg
add
cmp
subb
subb
dec
add
add
andb
dec
fldl
rolb
mov
stos
cmp
mov
add
hlt
mov
idivb
mov
adc
faddl
jno
add
stc
cmp
add
add
sub
jnp
inc
add
rorb
xor
sbb
ds
mov
movsb
jne
out
jae
mov
mov
cmp
add
add
fmulp
add
ret
adc
mov
jp
lcall
sub
in
xchg
or
pop
ret
mov
int
add
push
and
lods
add
add
xchg
mov
data16
jno
add
sti
sbb
add
push
add
lea
xchg
sub
xchg
cmp
sub
into
push
add
add
bound
cmp
mov
jns
xchg
repnz
add
imul
xor
add
add
add
arpl
lea
ljmp
add
pop
add
add
mov
cmc
pop
jl
xorl
nop
and
add
outsl
pop
loop
adc
add
outsb
add
mov
repz
xchg
adc
add
pop
jns
add
pop
mov
add
mov
rcrb
ljmp
data16
mov
inc
add
xchg
dec
add
icebp
cld
add
and
push
add
mov
add
mov
add
xor
cld
fwait
sub
jl
jle
shl
rcll
pop
add
xor
add
add
add
daa
and
mov
sti
lock
add
fs
outsl
xchg
cwtl
and
mov
mov
push
add
mov
jae
xor
das
movsb
enter
add
pop
and
sbb
mov
sbbl
add
outsl
mov
ja
or
test
aam
add
fldcw
add
sbb
in
aas
lcall
cltd
xor
cmp
xor
lods
pop
xchg
jmp
adc
xchg
scas
enter
pop
add
movsl
add
or
out
cmp
addr16
add
xchg
add
sub
add
push
add
and
add
lods
push
and
mov
add
cmp
sub
push
add
je
dec
adc
test
push
cltd
mov
add
sbb
add
test
addr16
add
push
dec
add
add
cmp
adc
jmp
adc
or
pop
add
mov
popf
stos
add
lret
loope
movsb
push
repz
push
add
push
inc
add
call
mov
adc
data16
and
add
cmp
sbb
add
push
add
cmp
adc
cltd
mov
rclb
add
or
add
add
add
sub
cli
xchg
mov
lds
mov
out
pusha
add
add
outsb
add
mov
push
add
out
push
add
fbstp
add
add
lds
sarl
add
inc
add
cld
into
in
jns
mov
add
adc
shrb
add
jp
mov
xor
xchg
clc
inc
add
ret
ljmp
jecxz
pushf
cmpsb
pop
add
xor
and
leave
jo
rep
les
add
add
add
dec
in
push
add
xor
add
or
repnz
call
sarl
scas
dec
add
add
add
rclb
lret
lock
sub
std
sbb
xchg
or
lods
mov
add
jmp
pushf
js
imul
loope
xor
jmp
add
adc
xchg
or
loopne
add
add
mov
add
aaa
mov
cmp
or
cmp
iret
xlat
gs
int3
int3
dec
add
ret
or
add
gs
loop
push
mov
gs
fs
push
xchg
mull
pop
lret
fisubs
aad
add
mov
pop
add
lcall
repnz
adc
jmp
or
sti
test
push
mov
gs
lcall
add
mov
sbbb
jnp
add
mov
mov
lcall
xlat
incb
in
jae
cmp
or
push
add
sbb
add
sbb
bound
sub
sbb
push
add
push
add
or
add
ljmp
xchg
or
das
push
test
jl
fwait
daa
test
add
jecxz
ja
les
add
add
loop
add
lret
clc
inc
fldl
jns
sbb
add
fucom
jne
popl
xchg
add
add
mov
pop
leave
out
mov
add
add
add
cmpl
mov
gs
movsl
adc
add
inc
add
or
shl
stc
adcb
lret
add
push
add
add
add
or
xchg
movsl
movsl
roll
outsb
add
xchg
shlb
mov
addr16
bound
gs
loopne
loopne
add
mov
xchg
lods
mov
dec
add
mov
xchg
dec
xor
rcrb
xor
scas
jbe
dec
add
jg
in
cwtl
stos
dec
push
add
in
sbbb
les
sub
adc
fisttpl
add
add
add
add
add
or
fildl
mov
rcrb
push
sbb
dec
add
add
mov
adc
inc
or
pop
add
add
jne
add
jp
xchg
loopne
pop
add
jmp
rcrl
add
add
dec
add
hlt
cmp
sti
das
add
push
push
add
popa
xchg
jo
xchg
cmp
test
mov
xchg
and
mov
add
add
sahf
std
in
mov
add
movsl
cmp
scas
pop
or
xchg
add
xchg
insl
insb
add
mov
call
ret
add
fldt
add
stc
scas
nop
push
add
jne
add
sub
in
mov
pop
add
add
ret
out
outsl
mov
sbb
dec
add
sarb
add
sub
mov
adc
sub
jmp
sbb
das
popf
ds
push
xchg
lods
mull
mov
inc
cmp
xlat
push
lret
add
and
test
sahf
pop
ja
sbb
jle
lods
mov
cmp
loopne
insl
xor
sahf
adc
stos
in
add
pop
shrb
lods
cwtl
movsb
imul
mov
jp
or
jb
sub
faddl
cmp
add
inc
add
xchg
cli
loope
nop
mov
or
dec
scas
pop
mov
lock
or
push
add
ficoml
mov
push
add
rcll
add
add
lret
pusha
add
sub
test
add
test
mov
xchg
mov
shlb
clc
leave
inc
add
add
fbld
imul
in
xor
aas
movsb
movsl
scas
jecxz
or
jmp
inc
or
jge
add
add
mov
push
add
add
sbb
cmp
mov
cmp
lret
dec
add
jno
cmp
xor
inc
movsl
clc
in
cmp
movsl
hlt
mov
out
add
push
add
shlb
mov
and
sarl
add
addr16
mov
out
jne
jg
out
mov
push
add
lea
int3
pop
daa
stc
cmp
push
add
mov
bound
jle
xor
cmp
or
sbb
xor
pushf
repnz
mov
lcall
lock
mov
jnp
cs
pop
lcall
add
mov
add
dec
mov
adc
add
add
scas
jecxz
add
sbb
mov
rcrl
sub
fadd
insl
sbbb
cmpsb
mov
sbbb
mov
jle
outsl
shlb
sub
das
fwait
movsb
dec
add
xchg
add
add
repnz
add
cmpsb
jmp
xor
mov
ljmp
popf
insb
add
xchg
or
push
add
add
jl
pop
add
add
inc
xchg
out
jnp
xlat
adc
daa
pop
jle
jo
popf
movsb
les
add
insb
add
pop
add
sbbl
add
add
add
jbe
mov
daa
out
add
hlt
andb
add
loop
mov
add
dec
xchg
mov
clc
add
fs
js
popa
pop
lret
cltd
dec
mov
insl
pop
push
add
xor
add
cmp
mov
push
add
sub
jns
pusha
add
int3
push
adc
fisubrl
add
dec
ror
sbb
dec
add
jge
and
loop
lret
add
adc
jo
lret
test
mov
add
add
mov
add
xorb
xchg
jle
push
and
add
in
xchg
out
add
mov
arpl
aam
adc
add
aad
add
cmp
call
js
sti
jl
lock
pop
cmp
stc
jmp
enter
add
add
mov
inc
addb
pushf
pop
inc
and
mov
mov
mov
add
mov
addl
cld
xor
out
clc
mov
ljmp
arpl
jle
inc
dec
add
pushf
dec
add
out
in
mov
push
add
ret
gs
xchg
push
add
add
in
pop
add
sub
push
dec
add
xchg
gs
add
add
add
dec
lea
lds
add
xchg
pop
pushf
or
jle
lock
add
add
mov
add
add
mov
add
xchg
ja
mov
push
xchg
xchg
gs
add
add
xchg
jle
pop
les
add
add
and
add
mov
mov
pop
add
movsl
add
aad
jbe
bound
xchg
shrl
repz
or
push
add
add
pop
js
and
jb
pop
add
add
add
pusha
add
lods
stc
out
pop
add
inc
add
xor
insl
gs
jbe
jns
add
add
imull
add
sub
mov
mov
lret
and
cmp
shrl
mov
jb
arpl
add
clc
and
sub
add
out
add
add
dec
inc
jnp
aaa
nop
mov
and
movsl
cmovnp
popl
jmp
sbb
and
mov
iret
movsl
pushf
shll
pop
stos
scas
jns
cltd
pop
mov
mov
adc
jb
fcmovnbe
sbb
xor
xor
inc
sub
add
shlb
icebp
in
pop
in
dec
insb
add
and
add
mov
add
fcoml
outsl
jbe
push
add
ljmp
cmc
mov
jg
repnz
loop
add
cld
enter
testl
add
add
jne
add
add
pop
push
add
add
dec
in
lock
inc
add
movsl
mov
fistpl
imul
mov
add
gs
sbb
outsb
add
leave
mov
std
inc
add
add
insl
data16
add
push
icebp
aam
add
add
mov
std
add
inc
cmp
sub
test
cwtl
daa
fildl
add
add
push
mov
and
mov
imul
cwtl
xor
pop
add
inc
shll
cmp
test
mov
lcall
xchg
mov
add
inc
add
inc
jl
push
add
cmp
pusha
add
add
add
add
movsb
in
add
xor
jle
out
push
add
sub
mov
add
mov
fprem1
dec
int3
out
sbb
inc
add
push
add
shlb
pushf
ret
add
mov
xor
push
iret
loop
add
adc
pop
jnp
pushf
xchg
or
add
shll
add
jno
sub
and
add
add
sbb
add
stc
lea
aam
dec
add
call
push
add
mov
xchg
sbb
fisubs
or
add
push
lcall
jg
inc
add
fwait
fldt
adc
xchg
cmpsl
push
add
popf
dec
add
inc
lods
ljmp
das
mov
mov
sub
lock
push
sub
into
lret
ljmp
jl
cmp
pop
in
pop
test
lds
aam
add
lret
add
or
test
add
jbe
outsb
add
add
dec
or
pop
add
dec
add
jge
arpl
sbb
aad
fmul
out
jl
ror
mov
out
push
addr16
add
add
sarb
data16
add
xchg
cmpsl
bound
and
repz
add
add
mov
sbb
pop
add
add
and
add
jp
js
je
adc
jo
enter
outsb
add
rcrb
xor
fistl
add
loop
add
add
xor
lcall
nop
popa
daa
pop
cld
push
dec
add
testb
das
cmp
dec
cli
lds
lea
inc
add
dec
add
add
pop
clc
aas
jne
dec
add
mov
add
lods
xor
push
pushf
xchg
test
popf
fldcw
add
mov
cltd
mov
add
add
add
xor
fadds
push
add
enter
or
push
add
fadd
mov
xor
jae
outsb
add
daa
stos
loope
add
sub
js
add
imull
add
add
add
add
je
icebp
lret
jmp
add
add
pop
rcr
mov
into
cltd
outsl
faddl
add
mov
xchg
addr16
add
loopne
cmp
fistpll
xchg
lock
inc
mov
lret
pop
add
iret
dec
mov
add
and
add
xchg
fstps
leave
cmc
adc
adc
xchg
pushf
mov
aas
movsb
data16
xchg
cmc
ret
data16
jle
jmp
fsub
lret
add
ljmp
cli
fildll
dec
loope
outsb
add
xor
aaa
jbe
dec
add
lods
cltd
xchg
outsb
add
enter
mov
dec
xchg
xchg
push
add
add
mov
add
add
sti
mov
out
iret
outsl
mov
lret
sbb
add
sub
push
gs
inc
add
rcll
add
mov
push
jl
jno
in
mov
out
out
add
add
jo
xor
imul
rclb
add
je
cmc
sbb
sbb
dec
add
mov
add
xchg
jecxz
push
adc
clc
mov
add
ljmp
push
add
cmp
fidivrs
add
add
fildll
push
add
pusha
add
addb
rcll
pop
in
mov
out
add
add
add
in
add
testl
add
mov
in
add
add
dec
add
xchg
das
lret
jecxz
add
lods
jp
stc
call
sbb
mov
lea
xchg
mov
mov
add
lea
in
subl
jecxz
xorl
iret
xchg
mov
add
lret
jae
add
add
hlt
jae
add
jl
jle
or
sbbb
pushf
xor
sbb
mov
xchg
jge
add
mov
mov
add
das
mov
add
inc
add
xor
pop
add
les
add
add
add
add
dec
add
lods
sub
lds
insb
add
enter
filds
add
insl
movsl
xor
lcall
outsl
pushf
xlat
leave
pop
mov
test
jb
in
add
testl
add
cmp
cmp
mov
cwtl
arpl
pop
add
mov
fsubr
add
mov
int3
mov
mov
das
mov
stos
inc
add
loop
add
mov
push
push
add
or
mov
cmp
or
cmp
imul
out
add
movsl
repz
ss
xchg
mov
inc
add
outsb
add
add
je
stos
shrl
cmp
pop
es
in
lret
mov
adc
mov
dec
inc
add
lods
mov
lea
sbb
xor
push
inc
out
lea
add
addr16
add
cmp
and
hlt
sbb
sbbl
mov
mov
and
or
rcll
into
mov
add
and
and
fdivr
xchg
stos
out
jecxz
pop
ja
add
cmp
repnz
adc
pop
pop
add
nop
inc
add
sbb
add
aaa
in
stc
dec
add
dec
add
scas
cmp
add
test
test
add
cmc
lock
add
xor
fiaddl
mov
mov
lcall
or
adc
adc
mov
js
jno
mov
add
add
and
push
add
xchg
test
lds
sub
pushf
xlat
mov
push
add
jne
add
cmp
aad
add
mov
int3
fwait
test
sbb
negb
add
add
jge
lahf
add
mov
xor
pop
sbbl
std
mov
add
fwait
mov
mov
push
add
sbb
mov
add
pop
mov
std
in
repz
das
xor
add
adc
or
outsl
sub
orl
pusha
add
add
jne
in
or
faddl
add
scas
add
sub
add
outsl
xchg
fwait
or
pop
lret
add
add
test
sbb
mov
ret
dec
or
pushf
xchg
jg
add
push
add
add
loop
add
xchg
lahf
mov
shlb
mov
add
sub
mov
add
sub
inc
add
adc
shrl
pushf
pop
ret
cltd
pushf
xchg
add
into
pop
add
push
add
add
out
test
dec
addr16
fs
imul
mov
jae
push
cmp
add
subb
push
inc
cmp
fwait
aaa
lods
outsb
add
mov
lea
cmpsl
jmp
push
add
out
test
mov
sub
lcall
add
gs
fisttpl
addl
add
repz
ljmp
add
inc
add
add
sbb
fisttpl
mov
sbb
cmp
insb
add
dec
add
sub
jecxz
lock
lea
shll
push
daa
mov
or
aad
sahf
leave
daa
inc
add
lret
fcomps
fnstsw
push
lcall
leave
fnstcw
mov
sbb
jle
add
mov
add
mov
add
pop
add
call
fadds
add
add
ret
adc
push
mov
dec
add
mov
add
add
imul
xchg
int
out
mov
int
add
dec
xor
sbb
repnz
cmpsb
push
add
pop
add
jnp
cli
stos
adc
mov
add
cmp
enter
add
add
scas
addr16
add
mov
ss
popa
mov
inc
mov
add
std
cltd
pop
add
popf
pusha
add
xor
adc
sub
pop
mov
adc
pop
add
add
push
add
jg
add
dec
add
out
sub
pop
jnp
pushf
call
movsl
fsubl
add
dec
add
les
jnp
add
sti
fisubl
mov
outsb
add
ret
adc
nop
push
jp
dec
and
lea
mov
ljmp
add
pusha
add
adc
dec
icebp
mov
add
add
sub
xor
adc
out
add
jne
mov
js
mov
add
mov
mov
pop
mov
mov
add
testb
add
or
das
call
add
cmp
aad
data16
ficoml
add
pop
pop
cmp
add
loopne
daa
daa
mov
xor
loop
or
xchg
xor
xor
sbb
pop
inc
add
push
mov
sbb
inc
inc
add
adc
or
add
inc
lahf
ficoms
dec
mov
mov
sub
aas
stos
add
aad
sub
das
adc
lods
js
out
jne
add
data16
fcoml
inc
ja
jge
xor
or
push
add
and
orb
jl
lcall
inc
dec
add
add
xor
mov
int3
aam
add
push
push
add
mov
add
and
out
cmp
js
or
xor
cs
movsl
cmc
sbb
fwait
test
jmp
jle
jg
movsb
push
hlt
rclb
pop
mov
push
cmp
cmp
int3
add
xor
cmp
dec
add
outsb
add
add
jnp
int3
inc
add
clc
inc
and
ret
mov
cmp
ja
mov
xor
push
add
mov
sub
xchg
inc
and
mov
fbld
push
sahf
js
and
mov
sbb
or
xchg
nop
lods
xor
mov
cli
cmc
mov
jnp
add
jp
int
add
dec
repnz
adc
add
mov
je
dec
add
mov
inc
add
add
pop
pop
add
inc
add
push
add
mov
shr
adc
cltd
scas
inc
cvtps2pd
outsb
add
or
or
jp
cwtl
push
add
rcr
imul
xchg
fwait
pop
add
add
test
or
sub
int3
jbe
mov
addr16
add
and
cmp
mov
inc
out
cmp
xor
xchg
loope
movsb
dec
xor
mov
add
xor
xchg
inc
add
add
add
pop
add
add
lret
add
in
jno
inc
add
dec
add
add
icebp
inc
add
add
add
add
dec
inc
mov
push
add
insb
add
cmp
push
sub
cmp
in
les
adc
scas
pop
shl
enter
add
dec
add
dec
add
xlat
add
cld
mov
or
fstpt
addr16
xchg
call
popf
lea
inc
sahf
mov
pop
add
cmp
in
sbb
add
add
cmp
mov
or
and
pop
add
adc
aaa
stos
ret
inc
add
pop
inc
ds
cmp
xchg
cmp
push
add
add
add
test
add
fldt
mov
add
inc
add
add
pop
jns
sub
jo
dec
arpl
add
add
add
sub
out
and
out
rorl
xchg
insl
adc
push
orl
mov
lret
add
shll
mov
mov
add
test
adc
jg
bound
jbe
xchg
imul
std
and
imull
add
dec
cmpsl
push
add
inc
push
add
jg
mov
nop
sbb
add
add
stos
mov
push
adc
and
mov
inc
add
out
add
adc
mov
stc
das
cmp
mov
jp
popf
pop
add
xor
stc
out
adc
or
adc
add
add
add
push
add
add
add
lods
fildll
mov
add
pop
mov
fbstp
add
out
cmp
mov
jno
sbb
jecxz
negl
add
add
lock
inc
sub
mov
pop
mov
outsb
add
add
jo
ret
int
je
adc
jge
repnz
add
or
enter
add
test
cld
mov
in
les
add
das
mov
add
add
daa
int3
xor
btc
jns
fsubrs
fnstenv
add
lret
popa
xor
and
ret
movaps
out
push
ja
hlt
inc
mov
and
adc
aaa
adc
idiv
xor
cmp
mov
into
pop
add
add
std
push
sbbb
add
dec
add
dec
add
add
mov
sbb
jb
jge
dec
mov
mov
or
pminub
mov
pop
add
dec
add
lods
push
pop
mov
in
xor
add
dec
add
lret
imul
jnp
test
and
pop
inc
add
das
fisttps
cmpsl
adc
adc
xor
lods
sbbl
xor
scas
or
add
loopne
gs
add
cld
idivb
pusha
add
dec
add
add
shlb
ficoml
add
dec
add
pusha
add
mov
add
mov
lods
cmp
scas
imul
add
dec
sub
sti
icebp
jb
iret
and
test
add
add
sbb
sbb
or
sub
jmp
add
dec
add
nop
xchg
cmp
stos
jae
add
add
pop
mov
dec
add
insb
add
jl
xchg
imul
add
add
leave
pusha
add
jmp
jbe
std
push
movsl
scas
cmp
dec
push
add
adc
push
add
xchg
add
pop
add
cmp
add
lods
mov
jp
jmp
imul
fdivrs
add
mov
or
jae
lret
xor
push
add
inc
dec
add
jns
add
sar
xor
xchg
add
jbe
ljmp
rorl
jbe
ljmp
dec
add
add
pop
add
mov
test
add
add
add
cmp
in
add
lret
add
sbb
mov
popa
push
add
mov
cs
sti
mov
data16
push
add
insb
add
add
sub
mov
add
add
imul
jecxz
imul
aaa
leave
scas
test
test
insl
lret
inc
add
add
mov
fstl
jge
ss
xor
sbb
movl
sahf
nop
and
cmp
mov
mov
add
fwait
add
push
lods
adcb
add
sub
stos
data16
add
mov
add
shlb
jle
xchg
adc
sldt
mov
dec
add
pop
add
faddl
add
outsl
add
dec
test
sbb
cmp
pop
xchg
jae
mov
add
add
add
pop
add
subb
add
pop
movsl
aaa
push
add
lahf
fstl
lret
clc
jg
add
test
add
icebp
pop
add
outsl
mov
inc
add
jmp
add
sbb
push
dec
jecxz
int
add
fmuls
add
shll
pop
adc
xchg
rclb
out
dec
add
add
jle
sub
pop
test
les
add
lods
xor
mov
push
push
add
mov
call
and
addr16
jb
in
pop
mov
pop
into
sarl
icebp
mul
stos
and
xor
popf
ficoml
mov
pop
in
ja
push
push
jo
inc
jno
shll
add
and
cmpsb
xlat
and
add
pop
int
sti
arpl
dec
ret
sbb
loope
js
repz
add
sahf
int
loope
mov
add
bound
jge
or
stc
lcall
add
lret
and
add
dec
cs
dec
sub
mov
jbe
jne
sbb
fsubr
push
add
add
adc
xlat
ljmp
add
push
stos
jmp
mov
loopne
int
shll
or
add
sub
jae
add
scas
cltd
add
add
add
adc
add
mov
sub
inc
or
add
in
movsb
outsb
add
jnp
sbb
add
sub
ss
pop
nop
lcall
dec
out
nop
int
sub
out
add
xlat
js
test
add
jle
aaa
sub
gs
call
xchg
dec
test
push
sub
add
push
cwtl
scas
cltd
sarb
inc
popf
mov
and
add
add
add
add
arpl
aas
lods
lock
adc
mov
add
mov
adc
push
xchg
mov
aad
sbb
add
movl
femms
add
add
mov
jle
sahf
add
xchg
xor
rcll
xor
push
jmp
pushl
test
and
xor
test
adc
insb
add
clc
lret
sar
xor
mov
cmp
sbb
xor
cmp
out
leave
pusha
add
add
add
jp
and
ret
jge
add
cmpsb
mov
add
and
sbb
cmpsl
nop
mov
cli
cmp
inc
cwtl
dec
ljmp
pop
pusha
add
add
add
add
push
add
fcoms
push
add
adc
jp
loopne
test
fwait
xchg
jnp
or
shll
dec
add
adc
iret
pusha
add
add
jnp
dec
xor
add
push
mov
fsubp
sub
repnz
out
addr16
add
pushf
add
subb
inc
addb
cltd
mov
and
repz
add
dec
add
shl
aas
rol
push
add
fbstp
add
pop
mov
add
adc
push
add
mov
xor
mov
add
orb
lods
gs
adc
push
rorl
add
and
out
jecxz
jge
mov
movaps
inc
clc
xchg
mov
fsub
push
iret
mov
add
pop
negl
add
sbb
mov
jae
add
xlat
xchg
insl
cli
cmp
inc
mov
jecxz
xlat
jbe
mov
adcb
cli
ret
cltd
pop
or
add
xchg
mov
sub
lret
and
gs
in
jne
add
outsb
add
in
sbb
sbb
push
add
clc
mov
into
mov
jp
mov
test
add
mov
mov
mov
dec
add
lock
test
mov
xor
lods
and
outsb
add
insb
add
add
add
add
add
xchg
jae
or
pop
add
xor
add
scas
rorl
add
add
jns
add
push
add
stos
and
nop
aad
add
xor
xor
lods
push
add
add
aas
enter
into
ljmp
frstor
add
cmp
fstl
dec
fbld
aad
add
add
push
add
cmp
mov
enter
cmova
out
or
adc
fnstcw
mov
pop
add
mov
in
fwait
ja
add
insl
cmp
add
int3
cmp
aad
inc
add
std
jbe
iret
call
add
pop
add
add
fdivrs
add
mov
add
pop
adc
cmpsb
cltd
push
popa
mov
add
adc
loope
insb
add
add
shr
sbbb
add
add
sub
imul
add
pop
add
das
cmp
insl
sbb
clc
mov
jnp
add
data16
add
jg
pop
add
int3
mov
add
mov
xor
jbe
adc
pop
jo
xchg
shr
scas
or
sub
lahf
mov
or
add
add
add
adc
push
add
jnp
pop
add
dec
insl
in
and
inc
cmp
jns
lret
data16
fwait
int
xor
inc
add
and
loope
or
lds
fcoms
add
shll
add
add
add
and
ljmp
sub
inc
add
addr16
or
insl
jecxz
aam
xchg
sub
lahf
mov
out
xchg
jl
pop
add
and
push
sarb
mov
stc
fildll
div
imul
negl
sub
add
dec
out
lea
mov
pushf
fdivp
inc
jl
mov
in
inc
add
add
call
xchg
mov
mov
add
sub
decl
sbb
dec
add
jecxz
lret
fistpl
nop
push
mov
add
add
add
std
mov
add
add
add
add
stos
cmpsb
mov
imul
das
add
xor
stc
dec
add
test
mov
sub
mov
push
pop
pop
add
lret
scas
movsb
stc
cmp
les
arpl
add
add
orb
add
push
cmp
add
pushf
sub
and
add
dec
add
add
repz
icebp
stc
inc
ljmp
mov
popa
jg
add
inc
add
lcall
xor
pop
add
mov
adc
push
add
sarl
add
jecxz
sub
repz
add
add
or
test
lar
add
icebp
lret
push
jmp
mov
mov
cmp
add
mov
add
mov
inc
add
leave
mov
add
dec
add
add
iret
sub
add
add
push
and
add
and
and
sbb
pop
int3
xor
ja
nop
mov
or
sahf
add
adc
sub
add
outsl
loopne
mov
mov
stos
add
cmpsb
adc
pop
lea
rol
es
je
mov
and
stc
or
inc
push
popa
dec
add
ret
loop
js
xor
icebp
xchg
mov
data16
out
push
add
lock
cmpsl
add
pusha
add
add
outsl
cwtl
hlt
andb
fdivs
bnd
cmp
jne
add
in
inc
push
mov
icebp
pop
push
add
inc
icebp
xchg
fwait
jp
nop
ret
aad
add
mov
mov
pop
mov
lret
cpuid
lcall
jmp
xchg
je
hlt
jae
add
jo
sbb
fimull
mov
or
inc
add
push
aas
jbe
adc
push
add
inc
icebp
and
repz
dec
add
add
add
jbe
test
adc
stc
daa
in
add
cmp
add
mov
sbbb
fildll
add
add
jp
int
add
add
sbb
in
and
outsl
mov
icebp
loope
scas
dec
add
add
enter
aaa
lahf
call
pop
add
add
inc
adc
lret
std
dec
add
sarl
add
cmp
fisttps
loop
add
add
out
es
fs
hlt
mov
dec
in
loop
add
mov
add
add
jnp
add
mov
jp
je
pop
add
and
cmp
ja
add
xchg
sub
cmp
push
dec
mull
pop
repnz
fimull
add
push
add
add
in
mov
andl
scas
lea
loope
sbb
add
jg
cli
outsl
int
add
mov
jb
push
add
std
add
out
dec
add
xor
cmc
arpl
mov
cmc
and
ja
add
lock
loopne
stos
pop
mov
push
jg
push
add
loope
insb
add
fstpt
popa
mov
imul
mov
add
add
cmc
push
add
cltd
and
ror
imul
inc
add
add
sar
notl
cmpsl
mov
dec
add
cmp
xor
repnz
mov
hlt
pop
pop
jmp
pop
add
add
jl
cli
xchg
mov
and
sub
add
add
bnd
dec
add
pop
add
loopne
mov
inc
add
enter
push
mov
mov
rorl
scas
mov
and
scas
iret
adc
loope
bound
in
repz
push
sahf
js
int3
inc
add
fistpll
popf
mov
dec
jae
lods
push
test
add
jle
out
add
add
add
sub
daa
xchg
inc
add
fisubl
add
sbbb
sub
data16
mov
loopne
outsb
add
or
add
pop
test
cmc
aam
ret
push
add
fildll
add
jne
cmpsl
icebp
fwait
outsb
add
add
clc
insb
add
add
add
sub
add
pushf
hlt
or
ds
cmp
mov
or
push
add
bswap
xchg
adc
daa
dec
jb
pop
popf
mov
add
cmc
add
sub
loop
add
sub
lahf
hlt
fidivrl
add
outsb
add
rcl
pop
and
pop
fwait
mov
pushf
shll
xor
ficoml
sub
push
add
xor
popa
jne
fsubs
add
add
iret
test
sub
add
aad
inc
and
sahf
popf
aam
call
jmp
sub
mov
dec
xchg
or
loop
pop
push
add
stos
iret
adc
inc
add
imul
insb
add
fisttps
mov
add
add
pop
es
pop
add
xor
arpl
scas
mov
adc
and
not
sub
dec
stos
test
shrb
fmul
inc
add
rorb
sub
nop
enter
push
popa
out
mov
sbb
fwait
movsl
mov
add
repnz
lret
pop
pop
aas
pop
add
add
cmp
lret
xor
add
add
add
xchg
xchg
push
add
out
add
dec
cmp
das
push
add
jg
mov
stos
cld
jge
dec
add
inc
add
dec
add
push
add
add
sub
cltd
enter
add
add
inc
add
leave
out
mov
xchg
imul
movsl
cmp
xlat
push
add
jecxz
rcll
scas
dec
lods
call
add
add
push
add
xor
push
shl
add
adc
inc
add
add
cmpsb
or
inc
add
add
add
push
add
add
jno
dec
add
add
pop
data16
mov
mov
sahf
xchg
sub
arpl
in
mov
mov
push
add
xor
das
pushf
adc
adc
sbb
sub
jge
pop
sbb
pop
and
lods
popa
lahf
outsl
icebp
popa
jp
jno
pop
add
adc
pop
decl
add
xchg
mov
or
inc
sahf
and
mov
inc
jp
fiadds
jge
lods
sub
fucom
sub
enter
fildll
test
call
add
cmp
sbb
dec
sahf
ret
loop
add
es
lds
add
jne
out
add
and
mull
or
out
add
xchg
int3
out
stc
add
push
js
add
lods
js
push
add
aad
add
xchg
add
jle
loop
dec
add
add
lds
sbb
mov
add
mov
push
add
cmp
or
stos
std
mov
popa
icebp
cmpsb
pop
out
repz
shll
add
test
xchg
out
pushl
add
add
add
in
add
sahf
add
ret
cmp
xchg
push
add
mov
add
loope
add
inc
add
mov
or
lods
popa
into
pop
add
add
dec
push
jnp
sbbb
xchg
movsb
adc
add
mov
add
loopne
add
loope
mov
ret
mov
add
repz
hlt
test
mov
bnd
lahf
mov
dec
add
popf
adc
and
cmp
mov
xchg
mov
add
sar
stos
leave
sub
shll
pop
push
add
jae
fwait
jae
imul
imul
inc
icebp
push
add
insl
lahf
xchg
add
or
push
add
push
add
add
addr16
fistl
fidivrl
cltd
jbe
jmp
push
pushf
loop
jp
mov
add
jnp
imul
cmpl
add
add
ss
in
fwait
dec
add
int3
mov
cmpsl
inc
add
aam
jmp
jle
fidivs
scas
inc
jl
icebp
and
inc
add
fmuls
rcrb
add
lock
sub
ja
jbe
in
into
fimull
xchg
cmp
xchg
sbb
add
and
lret
push
add
push
add
xor
int
push
add
jecxz
add
test
cmc
xchg
cli
cmpsl
push
add
mov
outsl
jmp
push
add
iret
and
fiadds
lret
add
jle
movsl
add
jmp
push
add
push
add
add
xchg
push
add
add
add
xchg
ja
or
mov
cmp
jns
add
add
lock
imul
xchg
xor
mov
adc
jb
pop
inc
jmp
mov
jg
fidivrs
inc
push
xor
inc
add
add
sub
jns
mov
call
cmp
cmpsb
mov
cmp
jp
dec
pushf
mov
popf
loopne
add
add
inc
push
xor
cwtl
loopne
add
adc
add
pop
sub
and
pop
xor
mov
cli
add
ds
out
add
add
sub
mov
add
add
hlt
lcall
into
fldcw
arpl
jcxz
mov
jo
sahf
in
testb
fcompl
aaa
push
xchg
cmp
jmp
lahf
xchg
mov
ljmp
inc
add
fwait
xchg
push
add
add
sbb
xor
std
dec
mov
popa
int
mov
add
mov
int3
jb
push
sbb
add
add
add
popf
jo
pushf
addr16
ss
and
shlb
sub
insb
add
xor
inc
add
mov
sbbl
ljmp
addl
out
add
out
enter
fmull
xchg
cld
xchg
lret
add
add
je
push
lret
add
jno
mov
sarl
push
add
inc
adc
add
fadd
cmp
sbb
aad
data16
add
add
jle
imull
mov
push
add
mov
getsec
jne
add
fcmovnu
test
add
add
xchg
movsb
into
cmc
outsb
add
add
lret
sub
stos
jae
fcmovnbe
mov
pop
add
shlb
stc
or
xlat
mov
add
cmc
mov
push
negb
pop
add
add
popf
and
outsb
add
mov
sbb
jb
orb
sbb
pop
add
enter
dec
add
xchg
jbe
or
shll
xchg
cmpb
add
sahf
icebp
and
sbb
jb
cmc
pusha
add
imul
push
add
std
inc
add
dec
add
add
imul
insl
push
add
shll
and
mov
popa
icebp
in
xchg
add
in
lahf
test
add
add
pop
add
and
das
icebp
aas
add
mov
dec
add
add
ficomps
aas
in
add
int
add
bound
lods
add
add
je
mov
icebp
inc
jle
or
add
jge
add
iret
div
in
test
add
data16
mov
add
add
xchg
popa
lret
add
je
mov
stos
pop
add
inc
add
mov
sarb
add
fildll
in
pop
mov
cltd
data16
add
or
das
insl
jmp
push
jnp
fsubl
mov
mov
fcmovb
out
add
shrd
cmpsb
xor
fldt
jae
cli
and
mov
xor
add
pop
add
addl
add
neg
xchg
mov
add
addl
hlt
std
push
add
fstpt
imul
int3
popf
mov
jmp
add
mov
add
mov
add
in
push
add
add
ret
lahf
fnstcw
push
stos
mov
push
fs
push
add
insb
add
fcompl
scas
sbb
sbb
push
lods
dec
add
xor
mov
lods
aas
mov
add
inc
mov
inc
mov
lods
in
push
add
add
jb
sarl
push
add
nop
aad
mov
add
xchg
das
stos
popf
pop
imul
lcall
dec
add
mov
inc
add
sbb
mov
mov
les
add
out
sbb
cmp
data16
add
in
clc
dec
add
leave
add
add
add
imul
cmpsb
insl
add
add
pop
int3
or
jns
add
cmpsl
pop
add
into
cmpsb
aas
movsl
aas
fadd
cmp
add
out
into
push
sbb
add
jecxz
add
add
rolb
fisubrl
add
ficompl
add
add
outsl
clc
stos
test
add
les
push
rorl
add
pop
add
or
fwait
ljmp
enter
sbb
inc
lcall
jae
xor
add
push
scas
cmpsl
cmpl
lock
add
jmp
out
add
mov
out
inc
jb
and
push
add
call
add
adc
aaa
mov
add
or
in
add
sub
mov
repnz
add
lock
inc
add
inc
pop
fisttps
lahf
jg
jge
and
pavgw
add
enter
cmp
and
das
imul
add
fisubrs
add
push
add
cmp
outsb
add
jge
adc
add
xor
mov
add
xchg
ja
add
mov
add
and
mov
adc
shlb
bound
out
add
test
into
push
xchg
adc
adc
mov
sti
mov
add
push
pusha
add
xchg
mov
add
add
mulb
add
jl
enter
in
setno
add
sub
inc
arpl
add
jae
ret
fs
add
rcll
add
jne
aas
popa
enter
test
add
jne
inc
add
add
cld
movb
xchg
push
hlt
mov
inc
xor
lods
mov
mov
inc
add
dec
aam
jle
add
fimull
mov
mov
subb
add
cmp
out
xadd
jle
hlt
sbb
or
outsl
daa
rolb
mov
add
add
pop
pop
or
add
xor
std
fistps
cmp
sarl
cwtl
stc
add
leave
fdivrl
add
xorb
insb
add
test
loopne
inc
add
push
add
outsb
add
aad
add
lahf
pop
enter
xchg
loope
add
mov
add
push
add
hlt
stos
xchg
jp
jns
mov
scas
aad
adc
mov
in
jne
test
jecxz
pop
hlt
inc
sahf
mov
mov
xchg
lret
adc
pop
mov
jae
mov
lods
dec
rclb
push
add
add
xchg
fmulp
nop
sbbl
cmp
mull
jbe
pushf
adc
pop
add
and
xor
dec
xlat
and
aas
mov
pop
add
xchg
lahf
arpl
fcoms
sub
loop
pop
cmp
and
gs
fdiv
ret
lahf
mov
add
push
daa
cli
shrl
daa
and
mov
pop
sbb
inc
add
jle
jl
cld
add
popa
pop
xchg
pop
out
mov
daa
lcall
add
add
popl
sub
xchg
add
jb
sti
sub
int
cmpl
add
dec
adc
push
jle
enter
call
xor
je
mov
shll
mov
add
add
jbe
aad
cmc
cmc
xchg
or
jp
loop
mov
add
cmp
push
add
mov
rsm
test
ja
dec
add
mov
add
add
add
fcoml
add
shll
test
add
adc
inc
add
add
jb
push
mov
outsb
add
in
shlb
push
add
out
movsb
mov
add
push
jg
cld
xor
jp
jg
add
xchg
xchg
dec
pop
fistpll
sbb
popa
add
xor
int3
add
jmp
dec
add
outsb
add
bound
cmp
lret
add
test
mov
push
add
or
jb
out
push
add
sub
sahf
jle
pop
add
push
add
lcall
xchg
add
clc
jbe
jb
stc
pop
add
cs
cmp
icebp
push
sub
roll
add
and
inc
add
add
sbb
lahf
jg
push
dec
insb
add
mov
xchg
decl
add
data16
add
add
ret
jmp
add
xchg
inc
xchg
add
add
sbb
and
mov
out
ss
and
add
add
mov
add
push
push
dec
stos
daa
sbbl
jns
add
xchg
ret
mov
clc
or
cmp
push
pop
jae
dec
add
dec
mov
mov
fwait
inc
mov
test
scas
stc
loop
xor
out
imul
pop
movsl
sbb
add
outsb
add
jae
add
mov
repnz
inc
add
sbb
add
add
fnstcw
aad
dec
mov
add
xchg
or
pusha
add
inc
add
add
xchg
outsl
add
dec
add
mov
add
jge
add
jge
xlat
clc
pop
add
add
dec
add
add
xorb
ljmp
out
stc
sbb
add
lock
repz
add
sbbl
cli
push
add
add
mov
sub
lea
decl
push
add
add
jo
mov
enter
out
fidivs
xchg
mov
nop
lods
sarl
clc
mov
add
out
in
int
add
fmulp
cwtl
add
orl
orl
or
jge
jae
repnz
add
add
add
sub
add
rolb
out
cmp
mov
ja
push
add
jbe
iret
or
push
add
std
inc
sub
add
addr16
aad
and
push
cmp
mov
outsb
add
add
sub
pop
call
dec
add
dec
add
jns
mov
add
mov
add
add
mov
add
out
push
add
mov
add
add
add
push
outsb
add
add
clc
je
imul
lret
add
xchg
lock
je
push
add
shll
mov
stc
out
and
add
add
fnsave
dec
add
notl
enter
cli
or
sub
add
add
cmp
inc
add
xor
sub
sub
push
add
gs
add
loop
jge
leave
adc
addb
inc
add
mov
add
add
movsb
sti
out
cmp
daa
pop
data16
add
idiv
add
das
bound
jb
scas
jg
add
add
add
test
and
dec
add
fstl
add
dec
push
andl
add
pop
sbb
enter
xor
stos
js
les
or
rolb
pusha
add
mov
fisttpl
add
mov
sbb
add
call
test
add
pusha
add
xchg
jecxz
mov
mov
incb
dec
add
ja
add
test
mov
mov
cwtl
xchg
xchg
push
add
add
fsub
xlat
into
xchg
test
int3
in
pop
or
std
popf
ret
in
jbe
jno
sbb
sahf
mov
add
jmp
arpl
xchg
adc
fiadds
add
add
adc
jmp
add
sarb
add
xor
cmp
gs
inc
add
cmp
add
add
cmp
nop
testl
xor
pop
stc
jnp
out
jne
orb
dec
add
cmp
mov
cld
or
bound
sbb
nop
inc
add
clc
shll
mov
fucomi
add
daa
repnz
dec
shll
mov
mov
fistps
repz
add
xor
dec
dec
add
jns
mov
push
add
add
lds
adc
mov
mov
sbb
repz
jb
nop
xchg
pop
add
jp
sub
arpl
xchg
stos
dec
xor
add
fidivrl
add
jl
icebp
lahf
hlt
in
add
scas
loopne
add
push
pop
mov
pop
aam
inc
add
add
icebp
lret
pop
add
adc
add
add
std
nop
and
cld
cmpsl
dec
mov
add
mov
or
add
sbb
loop
xchg
insl
and
xor
inc
sub
or
rorb
push
add
add
add
clc
mov
rorb
add
add
out
add
mov
jle
ficoml
or
bound
cmp
xchg
decl
add
sub
sbb
push
add
or
and
das
mov
add
cwtl
lods
pop
add
sbbb
mov
add
add
xchg
subb
dec
data16
lret
adc
and
mov
cli
mov
jge
dec
add
decb
lret
fstp
out
inc
jmp
add
add
add
add
add
cli
add
pusha
add
aaa
movsl
sbb
jne
pop
add
add
imul
stos
xchg
rcrb
dec
lret
xchg
cmp
sbb
add
push
add
jle
movsl
pop
int
dec
jno
sbb
or
sub
pop
add
ficomps
add
xor
sbb
cli
mov
dec
and
add
repz
and
adc
pusha
add
and
int3
aas
loope
push
mov
add
add
cmpsb
mov
sbb
rorl
mov
pop
sar
lret
mov
and
mov
inc
mov
int
adc
addr16
js
or
fidivl
jecxz
cs
xor
jl
mov
cmpsl
fimull
sub
pop
aam
jmp
xor
pop
add
rcr
out
mov
push
jge
test
pop
add
sub
aam
add
in
push
loope
mov
outsl
cs
enter
cmc
mov
add
add
sub
inc
wrmsr
add
and
ljmp
pop
push
xchg
adc
inc
add
rorl
sbb
dec
dec
push
push
int
add
sbb
add
sub
or
mov
push
add
in
jbe
cs
ret
lds
dec
add
in
arpl
pop
add
add
adc
xor
mov
pop
jg
das
xchg
cmp
rcrl
jge
pop
cwtl
mov
lds
sbb
test
or
adc
leave
pop
add
add
add
mov
add
sub
jmp
add
adc
jecxz
add
mov
add
lahf
popf
lret
jae
add
subl
jge
add
add
xchg
outsl
rorb
add
sub
adc
adc
pop
adc
decl
inc
add
push
pop
add
lods
mov
pop
dec
add
dec
add
mov
clc
not
les
mov
push
push
add
pop
pop
add
dec
pop
or
push
add
mov
arpl
leave
ret
add
scas
and
jmp
dec
out
sub
and
cmp
lret
inc
std
cmpl
xchg
int
add
jns
add
mov
adc
cltd
dec
add
add
pop
in
pop
rcrl
add
add
stos
gs
add
add
add
mov
rcll
icebp
arpl
int3
sbb
add
mov
add
mov
rep
add
adc
inc
add
add
add
sti
xor
add
out
add
or
add
loop
nop
test
push
jbe
or
sub
pusha
add
sub
push
add
inc
repnz
cltd
jnp
add
outsb
add
aam
js
xor
loop
sarb
repz
and
sub
lahf
icebp
stos
sub
cmp
add
add
gs
add
xchg
addr16
cld
fisttpll
mov
dec
add
cmp
lahf
cltd
mov
aaa
jp
push
xchg
les
jb
push
add
push
add
push
add
adc
add
mov
mov
hlt
sub
xor
pop
jl
jne
negb
lods
and
and
stos
pop
push
adc
push
add
add
cmpl
add
xor
fadds
add
add
xchg
sub
lock
in
or
and
jp
add
repnz
add
pusha
add
add
les
ret
xchg
dec
add
clc
inc
add
add
push
outsb
add
add
mov
dec
add
add
sub
sarl
add
add
cmovnp
clc
xor
sub
mov
push
movsl
mov
scas
call
lahf
js
add
lea
xor
cmpsb
inc
fidivs
add
cmp
jge
and
xchg
icebp
out
add
dec
add
pop
ret
aas
decl
xor
fcompl
add
addb
push
add
sbb
push
dec
add
sbb
push
cmp
mov
add
adc
iret
loopne
push
add
add
or
stos
or
cs
sti
mov
in
add
icebp
xchg
jnp
add
add
popa
and
xchg
jg
int3
test
or
in
add
add
add
mov
push
add
mov
gs
addr16
add
clts
add
pop
add
das
rorb
add
lret
lret
cmp
add
jbe
cld
fldlg2
mov
mov
fs
jbe
push
hlt
add
out
cmc
sub
push
add
and
cltd
jle
fbld
add
repz
fsubp
mov
push
add
paddb
add
adc
inc
or
sbb
mov
stos
out
jb
daa
add
pop
add
movsb
add
imul
push
add
aam
adc
scas
adc
cli
les
les
dec
faddl
fnstcw
add
add
add
push
mov
xor
pop
test
sbb
xor
faddp
add
dec
add
jnp
repz
inc
ss
lock
dec
add
stc
or
inc
add
add
test
xchg
jp
dec
add
imul
add
and
int
stc
repz
stos
loopne
call
add
adc
ret
cmpsl
repnz
das
sbb
mov
aam
cmp
add
add
ljmp
popf
xlat
adc
cmpsb
push
add
jno
add
out
lods
lods
cmp
inc
out
add
ret
push
add
jnp
mov
enter
imul
add
add
inc
stc
hlt
int3
or
jle
pop
nop
and
leave
mov
scas
sarb
add
jecxz
arpl
add
push
add
inc
into
imul
add
add
jbe
js
lcall
and
inc
ja
sub
pop
add
xor
dec
add
jb
rcll
add
ret
icebp
jb
push
inc
add
cmpsb
aad
pop
add
es
xchg
push
add
cmp
pop
out
push
xchg
sub
add
sahf
mov
and
push
add
dec
add
mov
fbstp
leave
cmp
push
add
add
add
jl
in
outsb
add
mov
sub
lds
add
loope
add
test
mov
adc
jno
pop
add
cmp
mov
mov
into
add
popa
mov
shrb
jno
shrb
sbb
add
insl
aas
add
out
loope
imul
lock
sbb
loope
push
add
add
mov
mov
hlt
and
fwait
mov
sbb
ret
add
adc
cmpsb
mov
sbb
jle
sbb
mov
mov
jmp
or
push
add
mov
dec
add
js
pop
xor
sub
jae
jns
cli
bnd
dec
add
xor
push
mov
push
add
pushf
lods
sbb
sub
xchg
sub
aas
scas
fsts
aad
jnp
xchg
rcrb
and
xchg
je
out
decl
testl
add
lods
cmp
cmp
and
add
cmp
cmpsl
mov
push
add
sub
rsqrtps
or
lods
and
ds
cmp
scas
add
or
and
scas
cmp
fs
shll
dec
lcall
dec
insb
add
sahf
xor
xchg
gs
or
jp
insb
add
sbbb
add
jp
sub
and
insl
mov
aam
repz
inc
iret
sub
aas
add
aad
or
pop
lahf
xchg
lds
add
icebp
pop
mov
sub
add
or
fisubs
mov
fwait
push
mov
inc
insb
add
xor
mov
dec
out
push
add
imulb
pop
cltd
std
lahf
movsb
mov
sbb
shlb
pop
and
and
shlb
sub
enter
cmp
test
ljmp
int3
in
mov
das
daa
pop
scas
mov
jb
das
add
and
add
popa
adc
cmc
pop
scas
dec
mov
lea
and
das
lods
sbb
cmpsl
hlt
adc
add
xchg
xchg
orb
add
lock
add
add
add
xchg
sbb
fnstcw
mov
add
add
fcoml
sub
leave
aad
add
sti
jge
xor
dec
adc
sub
mov
add
add
mov
cltd
stos
popa
dec
stos
sub
inc
add
mov
add
into
push
add
add
jmp
or
not
add
add
add
sarb
je
into
mov
and
loop
add
add
lcall
add
mov
xchg
add
add
ret
ljmp
rclb
and
add
mov
jb
leave
inc
add
out
adc
add
inc
add
push
je
lret
xor
add
add
cmc
adc
je
mov
xchg
dec
add
jb
xchg
ror
mov
jmp
add
pop
add
add
xchg
addr16
add
sahf
xchg
xor
and
lock
xchg
add
imul
mov
sub
and
int3
adc
dec
aas
xor
xchg
rcl
and
mov
mov
mov
push
cli
iret
cmp
add
fadd
dec
add
add
mov
les
push
add
add
add
cwtl
cmp
mov
add
aad
add
add
xchg
lods
inc
or
and
cwtl
push
test
in
add
mov
sbb
push
xchg
fwait
and
inc
add
cmpsb
dec
addb
and
jmp
test
add
mov
lock
cld
in
jne
and
xor
cmp
adc
das
sub
dec
add
add
loope
jp
test
leave
push
mov
xchg
enter
add
mov
ja
cwtl
loop
push
add
sub
add
push
add
jbe
lret
sub
xchg
inc
push
add
add
sub
cli
cmp
fildl
int3
push
add
add
jle
aas
xchg
mov
sub
mov
mov
add
iret
add
sbb
add
cmc
outsb
add
cmovbe
sti
pop
stos
add
xor
add
mov
push
lds
mov
add
iret
test
pop
test
mov
dec
add
aas
xor
prefetchnta
sub
cld
add
add
loop
daa
jle
add
shrl
notl
aas
mov
pop
jno
decb
add
pushf
movsb
add
adc
push
dec
add
push
test
add
lds
inc
add
test
mov
daa
xchg
cwtl
jae
add
adc
and
add
fs
inc
dec
je
lret
dec
add
clc
adc
int3
xchg
popa
mov
pop
loope
xchg
lods
xchg
ret
loope
add
sbb
mov
sbb
bound
add
add
insl
dec
add
data16
cmp
pop
pusha
add
xchg
nop
in
add
mov
inc
add
jmp
pop
add
add
push
jl
mov
add
xor
jnp
jp
insl
and
mov
cmp
mov
ret
call
stc
stc
pop
ljmp
or
adc
fisubl
cmp
jmp
add
add
loopne
aas
pop
pop
jl
pop
cli
or
call
int3
jne
out
dec
les
push
testb
xor
fimull
add
add
add
clc
aad
add
add
cltd
daa
iret
adc
repnz
fisubl
hlt
pop
leave
and
leave
or
mov
insl
fmulp
sarb
icebp
aaa
mov
test
push
jns
adcl
xchg
cwtl
dec
add
cli
pop
sbb
gs
push
add
inc
sub
add
or
mov
inc
mov
fisttps
push
add
inc
daa
pop
mov
cmpsb
cmp
cmp
mov
imull
mov
jnp
jge
xchg
pop
and
lea
push
add
push
jl
cli
push
adc
push
add
mull
pop
pushf
fwait
subl
push
add
bound
subb
adc
imul
add
add
add
add
or
jl
sbb
and
or
push
add
mov
dec
add
push
add
movb
sbb
mov
xor
xchg
add
add
xchg
pushf
pop
cmc
fs
scas
mov
sbb
outsb
add
in
das
test
decl
add
sub
mov
nop
and
jle
push
mov
add
jecxz
add
add
xor
sahf
ljmp
stos
js
leave
cmp
and
pushf
and
add
lods
sbb
mov
lret
bound
xor
xchg
jecxz
add
inc
add
inc
rorl
add
add
shlb
sbb
data16
add
mov
cmp
test
outsb
add
push
add
or
mov
inc
add
push
out
xchg
sub
xchg
out
push
add
inc
add
mov
in
mov
push
sub
fdivs
add
cmp
add
imul
add
cmp
mov
inc
ja
jmp
jbe
cmp
cli
lods
fsubrl
add
mov
add
sbb
cmp
jg
hlt
dec
add
ss
ljmp
and
jle
cmp
mov
rclb
adc
add
iret
push
add
add
add
add
shlb
mov
fsubrl
cld
mov
sbb
in
pop
jns
add
cmpsb
mov
add
push
add
mov
mov
add
aam
or
add
add
jg
add
add
subl
sbb
mov
insb
add
imul
shld
jbe
add
jae
cmpsl
sub
add
or
jg
xchg
or
stos
or
and
sbb
sbb
stos
dec
or
int3
or
pop
jbe
cmp
notl
add
push
add
aam
ficoml
cmpl
test
add
in
ror
icebp
ret
add
or
mov
pusha
add
inc
add
sbb
sti
ret
lods
rorl
stc
ret
xchg
pop
adc
repz
fisubs
or
pop
sbb
mov
add
add
test
iret
xchg
push
dec
pushf
je
mov
mov
and
movsl
dec
add
add
stc
sub
xlat
sub
dec
add
xchg
add
mov
add
cmp
lods
sbb
sti
jo
dec
add
sub
inc
add
mov
lock
inc
add
add
clc
sub
jns
cmp
in
mov
enter
adc
inc
add
push
add
mov
outsb
add
add
add
cld
test
add
sub
add
add
cld
or
arpl
scas
stc
shr
xchg
aad
add
and
or
adc
mov
fmull
mov
hlt
xlat
stos
popa
and
sbb
push
add
mov
add
daa
cwtl
cmp
push
add
xor
sarl
add
fstpl
test
mov
notb
aam
jle
out
add
add
sbb
fwait
daa
out
mov
lahf
xchg
pop
lea
pop
add
add
cwtl
stos
lds
add
cmp
and
add
push
mov
add
adc
lods
sub
mov
enter
mov
daa
lea
add
mov
add
cmp
xchg
mov
mov
jbe
and
dec
jno
sub
lahf
call
add
add
add
test
jp
scas
loopne
add
enter
add
pop
add
sub
or
out
popl
add
into
push
add
aad
add
add
call
add
aam
mov
cmc
das
shrb
add
pusha
add
andb
mov
cmp
sbb
adc
sbb
sti
shll
xchg
lret
jp
adc
jp
mov
dec
mov
out
add
dec
and
xchg
mov
add
add
fidivs
mov
add
push
add
adc
call
inc
add
jg
jbe
sub
fdivr
sbb
daa
test
int
add
mov
imul
jb
mov
divl
add
les
enter
dec
xchg
xchg
jecxz
xchg
fwait
mov
pop
jbe
jmp
add
add
loopne
imul
add
push
add
inc
add
loope
add
xor
sub
pop
mov
cwtl
cltd
pop
sub
xchg
adc
add
xchg
push
add
loope
in
fsubs
add
push
dec
scas
dec
add
js
push
fidivrs
sub
imul
add
mov
jne
and
pop
stc
andb
hlt
cmpsl
cmp
inc
jns
add
mov
out
add
test
movsb
jne
push
add
mov
push
add
inc
add
out
cmp
pop
add
add
fstpt
mov
add
jle
xor
or
popa
cmp
add
fimuls
inc
add
mov
add
into
adc
push
add
add
add
popf
mov
add
lret
or
hlt
vsqrtps
push
add
add
inc
add
push
add
cmp
cwtl
mov
fdiv
outsl
pop
add
add
pop
lahf
std
mov
aaa
pusha
add
pushf
in
sub
in
test
sbb
addr16
sub
shll
add
pop
push
add
add
mov
cmp
mov
xlat
out
xor
sbb
add
mov
pop
idivb
add
dec
add
sbbl
loope
and
mov
add
mov
inc
add
scas
enter
jnp
sub
xchg
push
push
ljmp
cwtl
dec
mov
add
pop
rcrb
adc
jmp
cli
sub
add
fdivp
mov
aad
sti
inc
add
xchg
xor
ja
inc
ja
add
add
insl
jmp
enter
cmp
xchg
sub
sub
inc
add
add
add
push
add
js
fadd
icebp
ljmp
jno
cmp
clc
std
mov
mov
add
mov
and
rcll
jns
dec
add
pop
add
jae
pop
mov
js
push
add
add
jb
rol
sbb
mov
adc
loopne
lcall
insb
add
jo
cmpsb
popf
cwtl
adc
jne
enter
stc
test
loop
add
in
add
out
xchg
sbb
shll
push
add
cltd
movsl
aad
add
sbb
xlat
call
jmp
add
aas
shrl
int
add
add
aaa
inc
mov
in
and
jmp
test
pop
add
lahf
lock
add
popa
xchg
cmp
add
movsb
sub
jbe
lahf
inc
jae
jb
fcmovnu
mov
mov
in
cmp
movsb
hlt
pop
add
add
adc
adc
lods
fnsave
and
jmp
adc
das
or
aad
pushf
gs
push
add
imul
sub
out
pop
and
add
ret
stos
dec
add
add
add
dec
add
arpl
add
mov
add
call
adc
pop
fxch
jno
mov
dec
adc
push
and
shrb
xchg
or
stos
shlb
add
and
imul
add
imul
mov
test
iret
je
pop
jnp
push
add
xor
fisttpl
add
add
shl
adc
add
add
rcll
data16
ret
mov
add
or
jno
leave
out
mov
xlat
lock
aaa
arpl
add
cmp
jnp
add
sub
cmp
addl
add
xor
sti
mov
lcall
movsl
adc
ljmp
loop
sbb
cltd
push
bound
pop
add
ret
or
loop
add
pushf
out
add
mov
lock
sub
add
fs
jno
push
cs
xlat
vpmacssdql
jb
sbb
mov
jl
sbb
dec
xchg
jg
add
bswap
dec
add
aas
sbb
jo
adc
add
push
add
add
pop
add
cmp
stos
mov
jecxz
call
xor
notb
add
add
imul
add
hlt
inc
add
popa
push
add
aad
testb
mov
jp
pop
bound
imul
add
js
mov
mov
dec
add
pop
jb
mov
cmp
rcr
cli
jne
push
add
add
adcb
add
add
dec
mov
add
daa
and
aaa
jmp
and
rcll
cmp
and
fadds
add
sahf
je
xchg
outsl
mov
popf
cld
mov
outsl
sbb
lods
stos
xor
cmpsl
shl
add
push
sbb
test
add
push
call
les
add
push
movsb
shr
push
add
sbb
je
int3
xorl
add
cli
add
mov
xor
test
sub
add
loop
sti
add
je
or
das
arpl
add
add
int3
dec
sbb
jmp
mov
and
lds
xor
ffreep
mov
or
sub
add
mov
add
add
mov
pop
stos
popf
jnp
sbb
in
push
add
clc
xchg
add
adc
push
add
or
imul
add
lret
js
sbb
sbb
cmp
insb
add
push
add
add
lcall
out
popl
xchg
push
push
add
dec
incl
add
push
lds
out
cwtl
stos
cmp
cmp
inc
add
inc
imul
xchg
ficompl
daa
cmpsl
mov
push
gs
push
add
push
add
fisttpll
push
add
inc
add
shr
into
xor
scas
dec
add
cmpb
add
jg
test
mov
xor
aam
roll
jb
loopne
dec
add
add
fwait
push
test
xchg
mov
add
sub
loop
mov
add
add
adc
jle
pushf
daa
lods
lret
into
add
scas
pop
imul
js
dec
xlat
pop
addr16
shll
fsts
inc
add
add
mov
cmp
das
dec
cmpsb
repz
cmp
loop
xchg
out
adc
clc
insl
xchg
mov
data16
add
push
add
add
cmp
add
add
add
mov
lcall
adc
add
in
sbb
nop
jle
movsb
jns
add
dec
popf
jae
cmp
mov
push
lret
sub
pop
or
in
dec
test
sbb
or
add
movsb
jno
stos
sbb
add
das
fwait
in
mov
vmread
sbb
xchg
mov
or
loopne
add
dec
jmp
mov
lea
leave
jge
add
iret
push
adc
movsb
rorl
popa
in
add
movsl
cmp
bound
and
subb
add
add
lock
add
push
mov
orb
das
jmp
xor
pop
add
cmpsb
pop
dec
mov
out
add
dec
add
add
adc
cmp
push
out
mov
mov
sub
stos
test
add
pop
add
xchg
rcrb
fldl
add
js
sbb
and
shr
rcll
add
add
add
imul
cltd
in
aam
mov
aam
fsubl
outsb
add
nop
inc
add
mov
in
mov
add
jbe
mov
fnstcw
jp
mov
dec
add
mov
cwtl
push
add
dec
push
add
xchg
ret
inc
shr
test
loopne
mov
fists
imul
add
dec
add
aaa
sbb
sbb
add
add
repz
add
push
add
insl
movsl
push
add
sti
mov
xchg
adc
ret
repnz
pusha
add
scas
leave
mov
cmp
dec
jbe
or
in
add
mov
mov
cwtl
sahf
sub
fdiv
lods
adc
roll
btc
stc
dec
mov
add
inc
add
in
push
movsb
mov
push
add
add
orb
add
add
out
int
rcr
add
pop
add
ljmp
data16
add
pop
add
push
add
or
sub
xlat
mov
add
add
add
mov
leave
cmpsl
jmp
add
std
cmp
scas
jg
add
lcall
out
repnz
add
add
add
lds
add
sbb
dec
xchg
xor
test
push
add
add
fadds
add
push
add
and
or
or
mov
add
movsl
repz
add
cmp
sar
push
add
add
insl
push
add
jnp
add
mov
xor
jo
jmp
sbb
pop
inc
add
add
add
add
jae
mov
insb
add
andb
add
in
mov
jmp
aam
add
dec
add
cmp
add
push
add
adc
idivl
sub
xchg
jl
add
dec
stos
or
pop
add
and
jbe
mov
inc
add
stos
inc
xchg
sbbb
lock
and
or
xor
dec
add
add
add
add
iret
or
sti
mov
add
cmp
aad
add
shrb
inc
test
sbb
insb
add
add
shlb
add
in
xchg
nop
les
jbe
lods
stos
in
add
fbld
add
cmp
inc
in
mov
add
test
fistpl
andb
xchg
call
subl
notl
ret
or
pop
mov
or
add
popf
test
add
sahf
sub
pop
dec
andl
aam
jnp
test
ret
dec
add
jg
shrb
add
ds
push
test
add
inc
add
movntq
leave
add
sub
mov
add
jae
popf
jle
sub
enter
add
sub
sub
xchg
push
or
lahf
xchg
mov
nop
sub
xor
incb
adc
lea
add
test
popl
cmp
aad
add
out
add
add
add
dec
add
mov
add
sbb
gs
lret
add
xchg
add
sbb
pusha
add
dec
pop
add
sbbl
cmp
add
sub
sub
push
add
add
dec
pop
lock
pop
add
jb
jne
jecxz
lods
push
add
cmp
mov
mov
add
mov
mov
sub
dec
add
jmp
add
xor
add
sti
pushf
sub
mov
add
cmc
fsubl
add
add
mov
xlat
js
add
inc
out
fldenv
add
jb
mov
pushl
clc
dec
add
push
add
pop
add
shl
add
dec
cmpsb
mov
stc
mov
add
inc
add
add
or
imul
mov
add
cmp
cmpl
add
xor
pop
mov
sbb
addr16
add
enter
pop
add
push
outsl
cmp
mov
lret
iret
xchg
adc
add
mov
arpl
add
pop
add
push
jle
adcb
cmp
mov
idivb
jne
leave
lods
fwait
stos
and
and
xor
cmp
je
xor
push
dec
jecxz
add
pop
add
inc
imul
jno
popa
lods
pop
cmp
add
inc
add
mov
jo
push
add
add
add
lock
xchg
pop
out
xor
das
xchg
sldt
call
test
sbb
les
xor
jno
mov
fldenv
add
fbld
add
add
jne
out
mov
add
aaa
cwtl
xchg
repnz
scas
mov
sub
hlt
pop
inc
jae
add
adc
add
adc
fdivrs
jnp
add
sbb
jp
mov
mov
jmp
fidivrs
add
inc
cmp
add
data16
inc
add
add
in
adc
add
sub
add
pop
fsubrl
cmp
inc
add
cmp
cmp
lret
add
subb
add
scas
lea
add
add
jnp
and
add
add
mov
add
add
add
jp
adc
loopne
mov
fldenv
push
add
add
push
fptan
ror
roll
loop
add
ds
leave
mov
add
sub
add
lret
cltd
movsl
adc
add
cmp
jne
add
add
add
cwtl
mov
add
scas
rcrl
add
subb
daa
ja
insl
cmovns
fdivrs
sbb
adc
mov
sbb
iret
int3
dec
add
lods
scas
sub
push
xor
nop
inc
add
sbb
outsl
cmp
sahf
js
mov
aas
xor
jg
push
add
sub
mov
test
repnz
pop
or
jb
incb
jp
adc
pop
lahf
push
add
mov
xor
mov
fwait
addl
dec
es
sahf
dec
insl
pop
add
xor
ret
mov
add
decl
xor
cmc
xchg
add
lods
das
push
stos
inc
test
repnz
fidivs
cmc
sub
iret
fdivp
sub
out
pop
xchg
cmpsb
or
das
in
aas
jle
jbe
lgs
pop
push
js
lds
in
stos
add
mov
enter
and
and
add
gs
push
add
lret
mov
mov
add
add
add
cli
sti
push
mov
jmp
and
or
test
add
jle
push
rolb
cwtl
dec
adc
int
sbb
add
aad
push
pop
repnz
add
xchg
stos
stos
icebp
ljmp
and
add
mov
into
rorb
dec
xchg
fmuls
add
shlb
mov
call
sbb
add
mov
mov
add
mov
mov
mov
add
pop
std
outsb
add
xchg
test
add
add
or
add
push
add
add
fldcw
add
fistpll
stos
rcll
pop
cmp
sbb
popa
scas
cmp
push
add
add
out
and
cmp
jbe
mov
lret
icebp
out
call
ja
add
sar
in
ja
or
cwtl
scas
ljmp
les
scas
outsl
mov
push
outsb
add
or
pop
sbb
aaa
sarl
fbstp
jmp
mov
add
push
add
imul
dec
gs
fsubrs
add
cltd
push
dec
add
xor
pushf
cmpb
add
gs
add
addb
cld
sahf
mov
aad
fwait
cmp
bound
cmpsl
jb
inc
cli
push
xor
rolb
cmp
jle
mov
cltd
xor
xchg
movsb
ja
pop
add
add
bound
and
inc
lds
jno
add
xchg
inc
add
clc
popa
aas
dec
add
ficomps
and
jb
jae
add
mov
fiadds
fstpt
pusha
add
sbb
lret
adc
cmpsb
adc
test
lcall
nop
or
jae
lahf
push
add
mov
insl
sub
inc
add
add
in
push
add
stos
sub
std
and
adc
int
lret
push
in
inc
add
add
adc
mov
lods
out
jg
mov
xor
es
ds
xchg
add
orl
aam
pop
lock
pop
in
inc
add
xchg
lods
push
jnp
andb
push
testl
mov
add
add
pop
xor
or
dec
insl
xor
pop
add
shr
mov
jle
mov
in
mov
push
jge
xchg
jmp
add
out
pusha
add
clc
jge
out
outsl
xchg
add
jmp
jmp
pop
inc
add
out
fstp
movsb
aaa
sub
imul
jbe
pusha
add
add
jb
add
inc
add
imul
lods
dec
add
test
jb
push
insl
push
add
fmul
xchg
cmpl
dec
add
lock
and
xchg
dec
arpl
add
mov
add
cwtl
add
adc
add
imul
or
add
cmpsb
bound
mov
adc
inc
add
or
adc
push
pop
mov
int3
mov
or
insl
add
xchg
push
add
push
in
movsb
add
add
add
pop
add
dec
add
push
add
xchg
sti
rcr
mov
mov
mov
pop
add
cmc
push
add
popf
mov
ror
jmp
pop
sub
mov
dec
add
xor
add
fmull
repz
scas
add
or
and
lds
xchg
cmp
int3
cmp
sbb
lea
std
xchg
add
add
add
add
hlt
cmpsb
repnz
dec
mov
dec
push
add
rcll
add
add
mov
jne
add
orb
imul
scas
cmp
cmpsl
pop
add
add
add
ja
test
inc
add
add
cmpsb
jo
lahf
pop
push
or
mov
add
rorl
xlat
lock
inc
sahf
xor
sahf
push
add
scas
fisttpll
mov
dec
test
inc
add
add
insb
add
sbb
and
frstor
cltd
inc
icebp
cwtl
daa
shlb
pop
add
ljmp
mov
popa
int3
ret
jbe
xchg
push
aaa
out
xchg
inc
add
add
lret
xor
add
out
pop
xor
rclb
jge
lret
in
imul
hlt
data16
add
push
add
out
out
xchg
cmp
dec
add
iret
cmp
xor
incl
xor
fdivs
add
add
mov
mov
add
add
add
ficomps
or
jo
inc
add
pop
cwtl
dec
add
push
add
mov
add
out
sahf
xchg
adc
mov
popf
cmp
add
xchg
xchg
loop
mov
jne
shrb
dec
add
xchg
inc
xor
pop
or
xchg
cli
cmpsl
cmp
shlb
adc
add
cmp
add
in
push
add
mov
std
cli
xchg
push
add
mov
add
add
mov
fwait
xchg
mov
add
or
sahf
xor
push
sub
add
or
repz
sbb
sahf
inc
add
add
add
adc
jbe
dec
and
mov
add
add
add
mov
outsb
add
shrd
out
pusha
add
add
inc
sub
pop
add
adc
pop
add
add
push
add
imul
and
fcom
insb
add
add
xchg
add
insb
add
in
testb
movsl
add
inc
add
das
add
pop
scas
jbe
dec
add
out
imul
xor
test
dec
add
add
shl
add
add
adc
hlt
pop
fwait
adc
lcall
cmpsl
rcl
and
pop
das
xchg
pop
add
arpl
add
mov
dec
add
test
push
add
add
mov
add
popf
xchg
mov
xorl
add
add
add
lods
push
add
pop
and
insb
add
push
add
jno
sub
mov
idivb
add
add
push
add
add
scas
pushf
cmp
in
jl
fsubs
inc
add
bound
pop
jns
cld
add
add
dec
inc
add
lret
push
add
sub
vunpcklps
nop
or
and
dec
add
cltd
mov
add
cmp
mov
add
add
mov
or
sbb
or
cltd
mov
add
adc
lods
jns
jno
loope
mov
add
add
ja
sub
enter
add
sbb
add
dec
add
add
aam
add
add
add
mov
fwait
outsl
rolb
ret
cs
pop
dec
add
sbb
xor
fwait
pop
add
jne
mov
jle
iret
xchg
ljmp
test
add
ret
sbb
js
sarl
push
add
or
stos
cmpsb
add
jecxz
add
fdivrp
ja
stc
jbe
sub
jo
addb
mov
add
add
jmp
add
mov
ja
leave
dec
add
pop
ficoms
add
lock
mov
pop
sbb
add
dec
les
add
das
pusha
add
popf
jmp
add
add
int
stos
movsl
mov
add
add
cmp
fnsave
out
call
inc
add
leave
xchg
and
ljmp
jmp
outsb
add
dec
adc
lods
mov
sub
adc
idivl
add
cwtl
sub
imul
test
cmpsl
adc
inc
addr16
jg
xor
pop
fxtract
pop
adcl
jecxz
popa
je
inc
add
or
and
push
loope
stos
arpl
lfs
test
add
mov
push
add
pop
rolb
fwait
mov
cwtl
and
or
cmp
mov
xchg
lock
xchg
cmc
cmpsl
mov
mov
sbb
mov
aas
cmpsb
test
inc
add
inc
notb
jl
push
add
repnz
sbb
and
xchg
jp
repz
push
add
add
test
aas
lea
add
add
es
push
add
xchg
fisttpll
add
lret
adc
imul
repnz
add
aaa
test
xchg
jo
add
sub
sub
and
jno
push
add
rclb
out
jbe
stos
jle
pusha
add
and
sbb
sub
imul
in
sub
jo
sub
mov
add
xchg
xor
leave
movups
dec
add
std
pushf
inc
arpl
dec
push
add
inc
mov
pushf
jecxz
xor
lea
add
add
inc
add
negb
push
xchg
scas
inc
add
fdivs
add
scas
mov
ja
leave
test
add
icebp
dec
add
test
jne
add
add
test
cmpsb
loop
ja
mov
inc
daa
call
sbb
out
xor
add
add
or
add
cmc
pop
mov
mov
add
add
dec
out
add
add
lock
scas
sarl
dec
mov
out
add
test
add
lret
out
mov
push
scas
dec
add
fisubs
xor
scas
movsb
repnz
fstps
cmc
pop
btr
add
mov
add
xchg
dec
loopne
sti
test
jg
mov
add
test
cltd
jbe
jle
or
add
loopne
add
add
push
add
cmpsl
xor
jp
movsl
pop
xor
jae
add
add
add
adc
fmull
inc
stc
repz
hlt
lret
test
repz
jbe
cmp
add
test
add
out
add
mov
lahf
int3
nop
inc
clc
sbb
bound
addr16
mov
clc
adc
sbb
xchg
nop
out
cmp
repnz
dec
add
push
push
add
push
add
add
inc
addb
add
pop
sub
dec
aas
mov
lock
jl
push
xor
cld
inc
add
add
add
xchg
bound
ja
add
cmc
enter
add
mov
and
fistps
add
or
dec
pop
add
add
clc
loope
push
add
lret
xlat
sub
mov
add
add
add
jno
add
add
mov
add
add
das
stos
sub
cmc
insb
add
and
add
add
or
clc
aaa
pusha
add
repz
add
mov
mov
dec
rolb
mov
cmpsb
xchg
nop
mov
ss
mov
lods
js
mov
add
add
cli
pop
std
xor
add
xchg
daa
xor
sub
add
cmp
xor
fisttps
pop
add
sbb
or
mov
xchg
lret
add
and
pop
ret
add
xor
adc
call
sbb
xchg
jns
add
test
add
add
hlt
dec
add
leave
jno
shll
add
or
add
cmc
mov
add
cmc
push
inc
add
push
add
add
mov
add
pop
imul
xchg
mov
add
cmp
jae
push
add
rolb
add
xchg
jnp
add
hlt
ret
xor
test
dec
add
add
in
jecxz
add
loop
mov
pusha
add
add
cmpsb
xchg
sbb
jge
inc
add
stc
std
in
aad
iret
mov
xchg
dec
add
mov
mov
sub
xchg
xchg
popf
lret
add
add
cld
cltd
loopne
add
xor
icebp
sub
mov
ret
add
fmul
movsb
rorl
jno
pop
movsl
daa
test
cmp
data16
add
add
fdivrl
in
call
cwtl
lret
cmp
add
cmp
jmp
pushf
mov
subps
xlat
inc
add
jo
leave
aas
jecxz
add
mov
sti
and
scas
jg
mov
pop
add
xchg
jp
inc
add
out
dec
rcrl
push
mov
insl
add
cmp
inc
add
rolb
add
push
mov
add
jbe
add
inc
shlb
push
add
and
outsb
add
fistps
jns
sti
inc
add
nop
test
insb
add
arpl
xchg
sub
add
mov
add
lods
xchg
inc
shll
add
lock
add
imul
add
pusha
add
add
push
add
add
xor
pop
hlt
lock
mov
lret
ds
testl
add
mov
push
cmp
cmp
mov
movsb
xlat
xor
out
popf
fmuls
add
test
movsb
and
cmp
sbb
aas
dec
add
mov
add
add
xchg
ret
add
lds
jl
idivb
sbb
pop
stos
cwtl
xchg
add
or
lock
add
scas
loope
pop
add
add
add
je
movsb
add
dec
cmp
sub
add
in
test
add
in
push
and
fwait
int
jl
xor
dec
add
add
add
aaa
jnp
pusha
add
add
add
pop
push
add
add
xchg
and
and
into
push
frstor
ret
add
pushf
dec
add
mov
add
mov
stos
js
cmp
iret
xchg
out
xor
imul
in
xchg
jo
adc
adc
add
sbb
stos
pop
bound
pop
add
insl
or
push
std
out
mov
add
mov
lcall
add
js
adc
or
push
add
add
cltd
stos
mov
stos
lock
mov
outsl
lcall
ficoml
add
daa
xlat
mov
add
pop
add
cmpsl
push
lahf
pop
cmovbe
out
sbb
mov
inc
add
mov
loopne
mov
je
adc
popf
mov
add
mov
jmp
add
icebp
xor
cwtl
decl
cmp
mov
add
adc
test
add
inc
add
mov
and
xor
and
jecxz
add
mov
add
lcall
add
sub
sti
ja
stos
imul
les
inc
add
in
jno
das
scas
push
or
ret
pop
and
popf
pop
test
add
dec
cmpsl
andb
popa
mov
add
xchg
push
jp
js
fwait
mov
pop
pop
pop
pop
rcl
std
rcrl
mov
mov
jns
dec
add
mov
data16
addb
add
add
sbb
test
add
xchg
mov
in
add
push
add
out
pop
add
pop
add
add
lahf
gs
push
add
mov
sti
inc
add
mov
add
popa
sub
mov
fldcw
add
add
outsb
add
add
jmp
popa
push
add
mov
add
or
scas
icebp
mov
add
add
imul
or
xchg
add
lahf
dec
sub
add
jecxz
or
sarb
dec
add
test
jmp
add
fucomp
adc
popa
sbb
imul
pusha
add
pop
add
add
call
and
mov
dec
push
add
adc
lock
scas
int
mov
or
xchg
cwtl
lea
int
andl
or
mov
repnz
rcrb
jle
mov
not
inc
add
and
add
xchg
add
pop
iret
aas
adc
sbb
xor
mov
lcall
lret
movsb
loopne
pop
add
add
in
add
push
fmull
add
add
add
xor
lds
add
fiadds
xchg
add
add
andl
shlb
pop
sbbb
std
pop
adc
add
adc
jge
push
add
add
or
scas
mov
add
loop
add
xor
std
jg
add
add
add
mov
pop
add
add
imul
mov
rcr
incb
push
ljmp
mov
fcomps
insl
rcll
outsb
add
inc
mov
add
add
mov
stos
jno
decl
std
lock
xor
xchg
sti
xor
add
aad
leave
mov
adc
cld
cmp
add
add
popa
push
add
popa
sbb
aas
adc
fstl
in
daa
js
cmc
pop
add
aaa
mov
jecxz
add
js
push
add
xchg
lret
sub
push
add
les
dec
add
mov
mov
cmpl
xlat
popf
xor
int
mov
mov
xchg
xchg
add
mov
loopne
add
mov
mov
inc
add
xchg
pop
loop
int3
lock
jae
cld
pusha
add
jbe
jae
add
fcomps
fiadds
lds
lahf
bnd
add
mov
mov
add
or
shlb
adc
cld
popf
mov
scas
mov
mov
pop
add
push
mov
push
add
int3
mov
mov
xchg
pop
mov
inc
add
cmp
out
arpl
outsb
add
fsubs
add
xchg
loopne
cmp
xorl
add
push
add
add
add
cmp
cmpsb
dec
add
dec
test
xchg
sub
jmp
ret
cmpsl
int3
insb
add
stos
push
mov
stc
out
jnp
add
int
lods
dec
inc
fistpll
jp
stc
pop
rcl
in
lods
jne
add
aas
add
sub
aas
mov
cmp
xor
std
cmpsb
popa
shl
gs
xor
into
pushl
fmull
xchg
bound
jb
movsl
dec
je
fnsave
xor
mov
jmp
dec
cs
push
xchg
call
add
add
mov
or
fdiv
pop
imul
add
cmp
push
add
xlat
xchg
dec
add
lea
cmpsl
sub
je
inc
add
add
xchg
add
ljmp
fcomi
les
mov
outsl
xchg
sarl
mov
je
inc
cli
dec
and
add
js
gs
add
lock
test
movsb
mov
mov
hlt
scas
hlt
int
add
push
in
or
outsl
insl
xchg
push
add
add
aam
jns
rorl
add
cmpsb
pop
cmpsl
mov
addb
jg
cmp
jae
add
cld
movsl
insl
int
add
add
adc
cmp
into
mov
add
jl
xchg
jp
cli
stos
sub
pop
call
mov
mov
add
push
loope
inc
adc
fsubrs
add
jmp
push
shll
inc
xchg
cmp
insl
lahf
push
add
sahf
dec
add
int3
sub
ret
add
into
adc
xchg
push
add
add
sub
pop
xor
sub
add
or
insl
mov
or
andb
test
add
out
xor
add
add
into
mov
das
mov
iret
leave
shl
mov
lret
push
add
fildll
add
push
pop
mov
add
add
sbb
push
ja
fbld
stos
aaa
lret
mov
sbb
xchg
bound
and
xchg
pop
cli
outsl
pop
add
dec
add
push
add
pop
mov
add
add
xorb
stos
jnp
push
add
adc
out
orl
loope
test
add
sbb
repz
sahf
pop
mov
pop
xor
cltd
es
mov
add
pushl
add
adc
pusha
add
cmp
js
add
jg
loope
ss
xchg
into
cmp
sub
add
daa
lret
and
lcall
mov
in
add
xorb
pop
out
loopne
add
ja
pop
add
scas
bound
add
leave
push
add
mov
mov
cmp
mov
add
inc
add
lcall
sti
push
add
add
ljmp
sub
dec
add
add
sbb
test
xchg
and
jae
mov
add
jg
or
mov
lcall
inc
add
jns
add
fdivl
add
add
aaa
lock
inc
add
push
add
xchg
adc
add
or
add
mov
mov
push
sbb
adc
dec
stos
jecxz
add
test
mov
xor
mov
sbb
scas
notb
and
add
inc
cli
dec
add
in
cmp
add
adc
aam
cmp
jmp
mov
push
add
sbb
jp
push
es
jbe
divl
das
shl
mov
add
jnp
pop
pushf
or
aaa
call
sti
add
push
add
repz
mov
push
add
add
fbld
cmp
fstps
fdiv
xor
add
into
dec
add
and
sbb
xor
mov
add
adc
push
add
lock
out
lods
daa
sbb
push
add
add
and
int3
mov
add
or
inc
jns
aaa
pop
add
out
movsl
imul
jp
call
mov
xchg
fadds
stc
add
inc
push
add
sbb
fdivr
insb
add
add
ja
out
mov
jp
das
xlat
adc
jge
and
pushf
or
add
xchg
stos
inc
inc
iret
lret
inc
add
push
add
dec
or
stc
dec
dec
inc
and
nop
xchg
rcrb
inc
mov
adc
add
xchg
cmp
add
jmp
add
divb
orl
add
pop
int3
mov
xchg
pop
bound
dec
add
add
dec
push
fldl
popf
pushf
dec
add
inc
add
movsl
xchg
add
add
pop
cmp
add
int3
jno
push
add
sub
arpl
daa
insl
mov
les
inc
add
pop
dec
add
and
out
lret
lret
mov
sbb
jno
add
mov
xchg
scas
lea
cmpsb
mov
add
adc
lods
jecxz
mov
add
add
add
jge
add
add
fbld
mov
add
sbb
test
sti
test
add
xor
add
dec
pop
add
push
add
xchg
fimuls
sahf
mov
dec
add
or
mov
mov
movsb
xor
adc
stos
stos
mov
push
add
push
add
pop
insl
test
sbb
aad
cmp
mov
bound
popf
stos
xor
dec
shll
dec
add
add
mov
jg
adc
add
mov
mov
rclb
rolb
arpl
addr16
mov
enter
add
jns
add
adc
pop
mov
push
add
fwait
mov
cmpl
add
add
fwait
aad
cmp
push
add
add
gs
cwtl
pop
add
add
daa
aas
inc
ljmp
jo
mov
int3
xor
sub
stos
xchg
jl
and
mov
sub
lea
or
add
add
sub
adc
xlat
fisubrs
push
jb
fs
xchg
aaa
add
push
int3
cmp
jl
mov
stos
mov
cltd
xor
arpl
mov
push
out
or
lret
out
mov
jno
dec
add
fcoms
pop
and
or
pusha
add
inc
add
add
and
in
inc
pop
push
add
testl
in
add
pushf
mov
out
inc
add
or
inc
cmp
add
sbb
dec
add
add
cld
jae
jle
sbb
cltd
outsl
fmuls
add
fnsave
add
add
mov
aas
das
xor
add
add
add
jmp
pop
das
and
mov
arpl
mov
xor
or
call
lods
pop
add
push
add
xor
pop
add
pop
add
push
imul
add
addr16
scas
xor
adc
jns
dec
jbe
shrb
icebp
les
and
icebp
lcall
add
pop
sbbb
daa
stos
lret
sub
sub
mov
js
int3
push
aad
fsubrl
adc
mov
arpl
ja
lcall
lret
xor
push
add
setae
push
add
pop
jne
jp
int3
aaa
ret
jle
jno
add
push
add
add
shl
icebp
aaa
xchg
jno
hlt
xor
inc
add
add
fisubrs
and
cmp
dec
mov
data16
fsts
mov
test
lds
add
pop
add
and
and
pop
jmp
sbb
add
clc
jnp
add
mov
iret
push
test
add
int3
sbb
cld
inc
add
jecxz
in
mov
fcoms
add
sub
lret
adc
adc
and
ret
push
dec
add
cmpsb
mov
nop
adc
jns
add
fnstcw
mov
add
jns
xchg
mov
mov
add
inc
add
add
xchg
movsl
loope
add
add
add
sbb
test
movsb
push
add
bound
inc
das
sub
mov
add
add
test
fldenv
fcoms
lret
xchg
sub
mov
sbb
add
xchg
aas
pop
filds
cmp
inc
add
inc
cmc
xlat
and
xor
push
push
add
ljmp
sub
cmpsl
idivl
lret
pop
xor
sub
xchg
loope
add
pop
add
outsl
or
mov
adc
iret
aaa
popa
sti
xlat
sahf
test
add
pop
add
jp
pop
add
mov
rorl
inc
adc
mov
hlt
jmp
or
add
add
mov
ja
loop
push
add
js
cld
push
and
add
scas
jne
mov
add
pop
add
and
fucomi
push
add
std
mov
mov
aaa
inc
add
add
std
jmp
ret
mov
sbb
inc
add
cli
in
daa
sahf
dec
cmpsb
add
dec
add
push
push
sbb
mov
add
mov
jno
add
imul
and
and
lcall
lock
add
mov
arpl
mov
add
cmpl
lret
adc
lahf
push
add
in
sub
jle
xchg
pop
dec
imul
inc
rcrl
push
add
add
push
add
add
jae
jle
data16
sub
shrl
lea
xor
cld
aad
add
shlb
add
inc
add
lea
cmp
push
add
lock
add
in
fistpll
add
repz
jnp
lcall
pushf
add
int3
adc
test
rcrb
add
jo
mov
add
sub
adcb
cmpsl
stos
mov
push
jae
outsl
fwait
jae
mov
movsb
test
add
adc
hlt
out
ja
loope
and
add
addr16
scas
inc
add
or
adc
mov
aad
dec
add
inc
push
add
cli
mov
add
inc
add
test
bound
ja
add
call
icebp
out
fwait
ret
and
add
xchg
xchg
mov
add
add
adc
pop
add
jbe
ljmp
add
adc
jns
add
call
cwtl
lock
dec
cli
lahf
sbb
popf
dec
dec
outsl
xchg
test
enter
iret
push
dec
nop
test
rcr
mov
cmp
xchg
adc
pushf
pop
or
in
add
pop
and
add
mov
inc
add
add
stos
add
int
inc
add
xchg
xchg
lds
adc
incb
push
shlb
add
add
pop
add
xchg
xchg
test
outsb
add
add
inc
gs
add
xchg
sbb
add
add
add
xor
inc
add
dec
push
add
sahf
cmpsb
lods
rol
mov
daa
xchg
sub
fisubl
inc
add
cwtl
mov
add
fnstcw
ja
fcmovbe
and
pop
jp
shrl
dec
add
sub
outsl
dec
add
adc
add
test
addr16
mov
lahf
in
mov
push
add
mov
cmp
ds
daa
or
cmp
mov
mov
ret
mov
fcompl
sbb
add
lcall
adc
test
cmp
xchg
nop
cltd
mov
xchg
pop
add
add
scas
aad
sbb
fbstp
push
xlat
adc
out
scas
jge
add
xor
adc
lods
or
hlt
pop
cli
in
loope
outsb
add
add
add
add
add
add
add
xlat
add
fsub
mov
ja
add
add
add
push
or
pop
xor
sbb
pop
jb
mov
fpatan
xchg
xor
loop
add
mov
int
aas
mul
repnz
sahf
adc
andl
push
add
mov
je
mov
mov
add
testb
imul
insl
fidivrs
and
push
add
mov
or
xchg
iret
sahf
inc
fnstsw
test
in
nop
pop
inc
add
push
lahf
push
add
call
and
neg
repnz
cmp
loope
mov
outsb
add
push
add
jl
dec
mov
in
jge
cmp
aas
xchg
enter
fnstsw
add
lret
cmpsb
adc
mov
add
pop
test
pop
sub
btc
sbb
out
add
mov
add
mov
movb
ja
add
push
cmpsb
call
add
outsb
add
mov
add
xchg
lea
add
dec
add
lods
pop
xchg
mov
and
adc
xchg
mov
bound
std
enter
push
fnstcw
adc
add
pop
std
aad
jmp
push
pop
aas
test
push
add
add
pop
add
add
test
sbbl
xchg
mov
add
push
and
mov
mov
xor
push
add
add
ret
xchg
and
push
aam
inc
mov
mov
ljmp
add
adc
adc
lret
call
jnp
jl
pop
add
ljmp
les
fistl
add
dec
cmp
jecxz
cmpsb
mov
int3
loop
data16
push
add
push
add
dec
add
add
pop
or
and
jmp
cltd
xor
and
push
add
add
lds
dec
add
mov
cmp
inc
inc
ljmp
xlat
pop
add
jne
push
pop
add
pop
xchg
test
addb
stc
out
add
pop
pop
cld
popf
add
xor
pop
inc
add
pop
shr
xchg
je
sub
jae
jmp
pop
hlt
mov
sahf
mov
das
mov
or
popl
in
arpl
int
or
in
dec
add
sar
add
js
adcl
add
add
add
lds
add
xchg
ja
xchg
pusha
add
add
data16
pop
mov
test
in
cmp
xor
aad
pop
ret
push
out
add
popa
rclb
xchg
fs
cli
inc
add
mov
lret
inc
add
and
jge
jge
push
mov
rcrb
pop
xor
scas
mov
cld
int
add
add
add
add
pusha
add
push
add
dec
add
adc
add
sbbb
gs
jg
jmp
sub
add
dec
add
add
in
dec
add
enter
mov
add
cmp
je
xor
popa
lret
xchg
jae
imul
loopne
cmp
mov
insl
push
add
iret
sbb
inc
push
add
add
add
mov
mov
rcrb
add
sbb
mov
add
add
ret
rorl
add
add
arpl
add
adc
aam
inc
je
hlt
stc
mov
out
cmpsb
out
pop
fimull
gs
add
popf
movl
adc
jo
dec
add
stos
loop
inc
pop
test
cmp
xor
loopne
add
xor
add
lds
cwtl
shll
inc
add
add
xlat
adc
ljmp
mov
or
add
or
movsl
stos
pop
add
add
shl
mov
dec
dec
add
mov
sub
add
or
add
push
add
fidivs
data16
inc
add
add
add
add
pop
add
andl
jle
in
fimuls
push
add
push
add
add
lds
nop
mov
sub
stos
fisubl
sbb
push
add
and
das
outsl
fstps
add
add
out
inc
add
add
jbe
xlat
ret
stos
in
add
out
xor
rorl
add
add
jns
add
je
and
sub
sub
jae
mov
sub
mov
mov
dec
xor
dec
add
mov
add
cwtl
rcll
sub
gs
je
dec
add
outsl
push
add
add
add
sub
jbe
mov
lods
mov
lret
xchg
sub
pop
add
inc
add
lret
push
add
sub
repnz
add
ffreep
popa
pop
cmp
xchg
into
daa
fistpl
inc
add
add
cmp
ficompl
sub
xchg
and
roll
add
shlb
and
cli
out
stos
xchg
add
dec
add
iret
jbe
cmpsl
xor
inc
cmp
add
cmp
and
movsl
test
dec
jo
mov
mov
add
movsb
lret
fdivrs
outsl
dec
add
test
jbe
sbb
fidivl
cmp
movsl
mov
lret
xor
rcrb
add
andb
add
add
cmpsl
mov
add
xchg
add
push
xchg
adc
sbb
std
mov
add
cmp
mov
outsb
add
mov
mov
add
data16
jno
loope
add
data16
popf
js
xor
subl
jns
add
gs
or
or
sub
movsb
push
push
add
add
movsl
fwait
loop
add
add
add
into
jno
push
add
fbstp
cmp
aam
pop
mov
cli
mov
dec
add
sub
sub
add
hlt
bound
movsl
fistpl
jp
cld
push
add
push
add
add
mov
inc
add
ljmp
imul
add
add
repz
test
add
add
add
adc
xor
scas
push
add
add
cmp
and
lods
or
sbb
std
jae
pop
lahf
push
add
lds
leave
lcall
ds
pop
add
add
mov
mov
xchg
setae
int
sahf
xchg
shll
adc
lods
cmpsl
jae
dec
cmpl
mov
add
out
adc
jns
jae
lcall
pop
mov
fbld
shrb
in
in
mov
add
add
dec
test
add
sbb
lock
sub
test
out
ficoml
add
mov
add
sub
or
imul
jne
push
inc
add
sub
jmp
rclb
repz
cmp
add
std
xchg
cmp
adc
out
mov
scas
inc
add
enter
xchg
scas
stos
mov
jmp
add
jecxz
dec
add
push
repz
add
andb
or
fimuls
lds
insl
jo
adc
xchg
push
sarb
nop
add
mov
lods
bound
and
mov
mov
add
pop
adc
inc
mov
into
inc
add
inc
add
mov
test
xor
adc
add
mov
add
mov
add
inc
pop
ss
inc
add
push
lock
imul
pop
pop
mov
testb
add
xchg
loop
add
add
add
xor
test
imul
add
push
jae
push
outsl
sub
add
pop
lahf
mov
call
pop
aas
pop
mov
push
and
les
add
ret
xchg
add
mov
dec
movsl
mov
loopne
pusha
add
lret
imul
andl
cmc
add
add
push
add
lods
popf
popa
icebp
xchg
ljmp
mov
jo
movsb
cmpsb
pop
add
add
push
add
loopne
xor
add
sub
add
int3
cmp
add
xchg
xchg
stos
mov
in
add
mov
mov
add
into
ljmp
std
push
add
sti
loopne
add
jb
xchg
into
inc
add
adc
sbb
or
ja
xlat
inc
add
and
pop
add
mov
push
add
das
imul
sbb
mov
add
mov
xchg
sahf
data16
scas
lods
add
out
stos
loope
out
int
cld
dec
daa
xchg
fucomp
add
mov
jge
testb
or
sbb
loopne
inc
add
popf
pop
add
into
cmpb
push
stc
jle
push
out
test
xchg
add
pushf
ljmp
push
and
and
mov
jbe
dec
add
add
add
add
add
testl
adc
add
add
jnp
xor
lods
sti
sahf
pop
cli
push
push
add
add
repnz
ret
xchg
rcll
enter
jp
pop
add
add
lret
out
add
test
xor
dec
add
add
add
fsubl
add
test
fmuls
mov
movsb
dec
bound
mov
idivb
and
push
mov
or
rcrl
add
xchg
ja
shll
add
add
pop
rcll
pop
add
and
mov
push
add
hlt
inc
and
divl
cmp
loope
add
xchg
or
test
movsb
lods
adc
sub
imul
sbb
cmp
add
popf
xchg
pop
out
push
xor
arpl
push
imul
add
loopne
fisttpll
sti
mov
cli
sub
add
fdivl
out
scas
cmpsl
sti
rolb
add
add
pop
ja
out
cmp
cmp
jl
adc
push
add
xchg
jl
test
add
or
in
add
das
test
add
test
sbb
sub
and
incl
dec
add
mov
insl
xor
add
add
cwtl
pusha
add
sbb
lds
out
mov
add
add
push
jp
fnsave
enter
sub
and
add
adc
test
add
xchg
popf
pop
cmp
inc
add
js
jb
shll
pop
pop
add
in
add
add
xor
push
add
mov
xor
loopne
sbbb
std
mov
add
cs
mov
test
xor
adc
popf
xor
stos
add
pushf
std
pop
add
shr
in
in
das
sti
adc
push
add
lods
mov
add
and
push
add
sub
das
sti
cwtl
mov
add
sub
mov
rcrb
fidivl
movsl
mov
mov
aam
add
scas
inc
and
adcl
ja
mov
popf
stos
mov
sub
sub
mov
add
out
cmp
test
add
add
andb
data16
lret
dec
add
cmp
cld
xchg
fisubrs
add
lret
adc
in
seta
add
mov
inc
xor
in
loop
add
lods
cmpl
add
mov
add
inc
add
and
arpl
or
push
add
rorb
daa
ret
add
or
fsubs
add
enter
add
pop
cmp
repz
mov
mov
mov
push
add
add
add
or
dec
ret
dec
scas
xor
add
es
cmp
fcoms
popa
dec
fdiv
cmpb
add
push
rorl
add
add
cmp
scas
push
add
lock
add
insb
add
mov
add
add
mov
xchg
jnp
push
cltd
jle
or
in
cmp
lea
sub
jmp
add
push
add
pop
lea
in
adc
push
add
shrb
add
jae
mov
jecxz
cmp
in
out
aaa
xchg
cltd
cmp
mov
add
add
scas
inc
add
mov
add
add
ret
je
mov
cmp
scas
test
in
outsb
add
sbb
decb
pshufb
add
add
cwtl
out
aam
cmp
push
jle
cli
test
jns
cmp
cmc
negl
add
add
adc
push
testl
outsb
add
adc
add
cmp
in
add
sub
add
nop
pop
jo
aad
dec
mov
in
add
out
add
icebp
dec
add
add
call
jnp
add
push
xor
push
add
jae
cmp
add
repz
int
jmp
add
add
add
add
mov
jbe
add
enter
xchg
inc
sbbl
add
sarl
add
std
outsb
add
jmp
add
add
test
add
imulb
testl
add
jle
inc
outsl
sbb
jo
xor
cli
pop
add
add
xchg
pushf
mov
add
lods
jp
jmp
and
push
out
add
pushf
inc
dec
add
xor
push
dec
add
jae
add
add
add
out
mov
ret
xchg
test
lahf
movsl
mov
add
mov
add
dec
mov
sbb
mov
mov
nop
mov
mov
xor
in
roll
nop
mov
daa
mov
add
and
add
addr16
sbb
add
ja
add
loop
dec
add
int3
jg
add
dec
add
xor
push
pushl
xchg
gs
add
ret
add
add
xchg
je
sbb
xchg
aas
lcall
add
push
add
mov
jo
rclb
pop
adc
cmp
bound
xchg
mov
add
sub
shll
add
jmp
add
add
pop
or
data16
add
in
fnstsw
aas
fdivrp
lcall
pop
add
lcall
pop
clc
jle
mov
adc
xchg
bound
call
cs
rorb
xor
sbb
scas
lods
dec
add
rclb
rorb
test
add
add
add
xchg
repnz
inc
bound
pop
add
fwait
popa
loope
add
dec
add
push
add
mov
add
inc
add
add
cwtl
sbb
in
add
cld
jle
jg
jg
fidivs
and
add
pop
pop
popa
and
loop
dec
add
repnz
dec
add
out
jne
add
jne
fists
jmp
out
xchg
cmp
mov
pop
into
adc
jne
add
xor
jmp
movsb
pop
pop
ficomps
xor
loop
pusha
add
xchg
subl
add
cwtl
aas
mov
add
add
ja
add
into
add
iret
push
popa
and
sbb
fcomps
popa
jne
jp
and
loope
clc
addr16
add
dec
movsl
jns
push
pop
add
xchg
mov
cmp
fists
xor
add
imul
add
ret
shl
add
cmp
cmp
loope
mov
out
mov
add
gs
add
and
fidivrs
add
push
push
aaa
mov
xchg
sar
dec
or
xor
or
pushf
mov
add
scas
add
sub
into
add
add
inc
jge
arpl
add
ja
add
push
add
add
adc
mov
xor
aaa
xor
mov
add
add
cmpsb
pusha
add
inc
add
and
subb
leave
adc
insb
add
mov
add
add
scas
push
mov
xchg
loope
scas
iret
sbb
push
xor
and
dec
mov
ficomps
add
pushf
lret
push
add
mov
add
jg
mov
movsl
sti
push
sbb
dec
add
add
sub
push
add
mov
in
pop
xchg
xchg
imul
shll
sti
push
cmp
mov
pop
add
add
fwait
int3
push
add
jmp
xchg
inc
push
inc
jg
test
add
add
out
mov
call
insb
add
add
mov
inc
add
test
popa
xlat
sub
and
gs
dec
add
fcompl
add
push
add
repz
xchg
cmp
inc
out
or
sahf
mov
mov
xchg
aam
loopne
add
push
add
add
leave
mov
ret
xchg
stos
push
add
add
add
cwtl
loop
ret
lods
and
pop
aas
mov
add
dec
dec
add
test
inc
add
push
add
or
cmpps
push
or
cmpsb
cmpsl
inc
popf
jns
push
adc
imul
add
mov
adc
loope
cmp
in
lcall
add
mov
std
sbb
push
inc
add
stos
push
aam
pop
add
add
insl
daa
xchg
lcall
je
enter
loopne
push
sti
bound
pusha
add
inc
add
cmc
mov
and
pop
add
inc
add
pop
xlat
loop
xlat
push
mov
lea
add
aas
pop
idivl
add
nop
dec
hlt
mov
sahf
add
dec
mov
sbb
aas
sbb
add
add
ret
jle
mov
lods
lret
jle
sahf
mov
mov
xor
inc
cmp
jnp
je
dec
xchg
mov
add
mov
outsb
add
in
and
lahf
imul
push
add
popf
enter
mov
pop
repz
lret
jl
xor
sub
push
add
insl
xchg
cmp
xchg
or
or
add
jp
hlt
jnp
add
inc
add
mov
push
add
push
add
dec
fnstsw
xchg
mov
cmc
mov
cmpsl
add
and
jne
clc
sub
sbb
fstpt
js
test
sub
inc
add
ds
mov
out
int3
dec
mov
pop
add
daa
lods
add
dec
and
test
add
pushf
dec
add
xchg
popf
push
mov
lahf
push
add
into
lds
add
std
test
loop
adcl
and
ret
test
mov
or
push
add
scas
cwtl
mov
mov
add
sbb
xlat
inc
add
add
add
iret
sahf
xor
popa
fdivs
out
add
das
adc
dec
add
jnp
push
xor
push
add
xchg
xor
into
lea
jno
add
xlat
mov
xchg
scas
hlt
mov
jo
outsl
sub
lds
jb
add
rcll
add
adcl
xchg
or
add
out
add
pop
lods
andb
add
xchg
xor
adcl
aam
data16
fsubrp
mov
add
add
add
mov
sub
or
sub
mov
es
insl
icebp
mov
loopne
cmovae
cld
dec
xchg
sub
stos
mov
add
jb
ret
popf
mov
aam
lea
bound
rclb
sub
imul
call
add
jecxz
add
add
scas
xchg
je
lcall
add
addl
inc
fidivs
add
cwtl
adc
fiadds
aad
add
add
xor
add
add
add
mov
outsb
add
out
or
lahf
jecxz
add
add
and
ljmp
stos
in
dec
add
jge
add
aaa
sbb
inc
add
je
jnp
add
add
das
add
pusha
add
ja
test
sbb
push
add
mov
inc
loop
imul
cmp
add
icebp
pop
add
aaa
fs
mov
add
mov
add
stc
jle
scas
add
lret
stos
ret
mov
xchg
mov
data16
and
xchg
mov
add
js
jno
sub
pop
cltd
adc
int3
jb
add
pusha
add
xor
movsl
outsb
add
add
add
add
insl
pop
add
add
push
add
push
and
scas
insb
add
add
mov
mov
or
and
dec
add
lcall
or
add
repnz
je
mov
pop
push
add
adc
mov
add
push
xchg
cmp
sbb
call
add
aad
add
add
add
pop
inc
pop
mov
pmaxsw
pop
xchg
div
xchg
movsl
cmp
inc
xor
xlat
and
cmp
aas
mov
mov
jge
stos
jnp
out
add
js
add
aas
mov
add
or
pop
add
add
and
push
add
add
add
je
jmp
lods
cwtl
mov
lcall
inc
add
add
sub
ljmp
mov
testl
sbb
push
movl
mov
loope
lcall
pop
mov
fwait
dec
add
repz
mov
rep
pop
movl
adc
mov
add
add
add
js
add
xchg
dec
add
shl
fsts
add
jmp
cli
xchg
repz
lret
mov
call
cmp
push
aas
adc
icebp
mov
add
add
pop
add
aad
das
shrb
jg
gs
add
sub
pop
add
inc
add
movsb
jne
xor
xorl
add
mov
shrl
push
add
add
mov
daa
dec
add
lods
dec
add
divb
scas
rcll
adc
jb
pop
fisttpll
add
add
lret
push
add
add
jp
sub
lods
lcall
pop
add
push
nop
mov
daa
outsl
into
or
lds
jb
xor
icebp
xchg
in
jns
rolb
push
test
pop
add
jb
insl
ret
shrb
add
ja
add
add
fnstsw
adc
inc
add
pusha
add
mov
add
add
jge
test
add
pop
add
add
push
std
pop
add
sub
xor
adc
aad
push
add
mov
inc
mov
cs
je
push
add
repz
inc
add
fidivrs
cwtl
das
push
add
jbe
add
es
mov
aad
jns
add
js
xor
addb
mov
lods
rorb
xor
xchg
inc
xchg
in
push
add
add
add
push
adc
insb
add
sahf
mov
mov
test
add
pusha
add
les
jo
sbb
js
jle
and
cld
fcmovne
cs
push
mov
add
cmpsl
aaa
xchg
add
mov
dec
add
add
add
jb
arpl
shlb
add
add
xchg
cmc
sbb
mov
in
add
dec
add
mov
sbb
rcrb
aas
call
fcoms
add
add
lods
stos
mov
out
sbb
in
into
jp
outsl
xchg
dec
test
lock
into
pop
add
add
test
call
out
icebp
cmp
jl
test
add
add
dec
add
popl
mov
scas
lds
add
lea
xor
and
add
add
pop
add
add
add
push
add
lods
push
clc
adc
push
add
gs
mov
mov
incb
repz
push
xchg
nop
ds
mov
inc
add
jge
add
in
mov
mov
add
nop
mov
add
add
imul
ret
enter
sbb
scas
push
xchg
xor
pop
dec
add
sub
add
iret
or
shlb
add
or
jmp
fisubs
add
repz
xlat
jp
jo
lea
adcb
jmp
add
jge
add
loopne
add
icebp
pop
dec
add
mov
add
mov
adc
adc
sub
sbb
sbb
ljmp
add
jns
add
into
push
add
popf
cld
scas
ja
add
push
add
dec
xchg
pop
add
push
cmp
rcrl
add
add
jb
jmp
in
sbb
add
xlat
test
add
add
mov
mov
cltd
dec
mov
lods
jnp
add
lret
mov
fwait
lds
add
adc
fists
in
add
bound
mov
add
cmpsl
inc
add
loopne
je
dec
add
das
pop
cmpsb
and
lret
cmp
in
pop
add
pop
and
or
ljmp
cmpsl
test
jg
xchg
and
jo
xchg
cmp
jae
cmc
xor
or
dec
pop
and
jg
insb
add
lcall
data16
out
aas
insl
stc
arpl
out
bound
aam
or
test
add
shll
dec
js
mov
or
and
adc
jecxz
in
cmpsb
ficompl
add
jnp
xor
test
mov
dec
add
lds
add
test
add
das
mov
or
scas
xchg
pop
adc
add
dec
add
mov
xchg
xor
adc
notl
inc
test
fsubr
out
add
push
or
sbb
mov
mov
out
imul
add
add
add
xchg
dec
add
and
stos
adc
lods
popa
out
mov
xchg
add
lahf
jne
jle
pshufb
dec
xor
add
jns
lds
push
stc
cmc
cmp
xor
add
dec
rorb
inc
sub
in
jge
add
adc
pop
add
shrl
add
lods
pop
add
cli
sub
loopne
dec
add
xchg
inc
int3
stos
sub
add
out
xor
clc
outsb
add
in
fcoml
lcall
add
sbb
mull
push
add
lods
bound
sub
push
add
pop
test
lcall
pop
add
and
add
mov
add
add
add
add
add
xchg
pusha
add
mov
pop
add
add
bound
enter
add
in
jno
and
pop
add
ljmp
lret
add
jl
dec
add
mov
push
mov
xchg
lcall
sub
or
push
add
sbb
out
mov
ljmp
push
add
xchg
popa
aam
hlt
lcall
dec
add
das
mov
add
movsl
enter
add
mov
xchg
fwait
sbb
outsb
add
jno
jbe
mov
xor
andl
lods
xchg
add
dec
jb
or
scas
xor
leave
mov
mov
cld
fbld
xchg
cli
jl
mov
cmc
les
add
add
movsb
xor
sbb
imul
sti
pop
sti
add
pop
fs
arpl
mov
aas
push
das
push
add
add
jo
shll
sbb
mov
mov
dec
add
sahf
xor
inc
outsb
add
std
and
xor
add
out
inc
add
inc
add
ja
add
xlat
mov
dec
add
fiaddl
add
roll
outsb
add
int3
inc
add
add
ret
xlat
cli
xchg
std
mov
add
data16
add
add
add
scas
inc
add
xchg
cmp
adcb
add
mov
sub
inc
add
add
stos
lret
aas
xor
into
rolb
test
xor
add
addr16
sub
lahf
imul
nop
push
int
add
add
push
ja
test
lcall
mov
add
add
out
popf
push
in
jp
pop
xchg
sahf
in
mov
mov
adc
push
test
jns
add
arpl
or
aas
std
cmp
xchg
pop
add
shlb
add
jae
cltd
dec
sub
loope
mov
fadds
das
add
sbb
jns
add
jnp
add
or
loop
pop
adc
repz
nop
jbe
adcl
lcall
add
je
repnz
les
add
sbb
mov
imul
xchg
adc
stos
cltd
push
xchg
dec
add
add
add
add
xchg
lret
and
add
add
fisubs
adc
orl
inc
jae
loop
jno
or
and
dec
push
add
add
push
add
add
ja
push
add
add
int3
cmpsl
mov
add
xor
mov
movsl
daa
push
sub
lds
sbb
sub
mov
xor
sbb
add
add
jns
add
add
and
pop
inc
add
popf
and
lea
mov
add
add
js
sarl
pop
cmp
mov
nop
test
out
add
sbb
jmp
add
daa
dec
add
ljmp
add
add
lock
fsubrl
dec
mov
repz
sbb
adc
push
add
flds
and
inc
clc
xchg
inc
add
sub
push
xchg
mov
lcall
add
sbb
xor
outsl
popa
jne
add
ljmp
xchg
cmp
out
add
add
push
add
fsubl
int
test
sub
push
add
pop
adc
jle
push
add
mov
add
aad
test
inc
call
jecxz
add
cltd
xchg
add
or
add
shlb
add
jle
jecxz
cwtl
hlt
push
pop
push
add
adc
imul
inc
add
out
cltd
test
add
push
add
cmp
inc
xor
adc
rcrl
add
add
clc
xor
jno
arpl
in
xor
mov
scas
mov
in
arpl
mov
subb
add
ss
in
pop
inc
add
inc
cltd
push
test
inc
xor
ljmp
mov
add
add
dec
icebp
int
add
daa
std
aad
add
sub
jbe
mov
cmpsl
xor
je
jns
push
add
xchg
push
add
std
cmp
mov
add
sti
ja
bound
inc
cmpsl
cld
bound
or
popf
mov
roll
jbe
add
push
add
add
and
mov
add
repnz
mov
jnp
add
add
test
add
xor
add
stos
test
mov
rcrb
jae
push
add
add
test
out
add
mov
add
sbb
inc
add
push
add
into
and
sbb
sbb
sub
jne
add
add
mov
push
add
je
out
repnz
aam
iret
mov
test
add
adc
inc
add
inc
add
nop
icebp
xchg
push
mov
test
dec
add
cmp
jecxz
add
pop
add
ret
lods
addr16
lcall
and
jb
inc
test
pop
add
fs
dec
add
add
add
movsb
imul
add
das
clc
pop
add
fwait
lahf
or
in
add
and
outsl
fsubrp
cmp
daa
lds
or
cmp
fildl
add
add
movsb
xor
int
or
aad
add
cmp
add
test
mov
sub
add
gs
adc
cld
inc
add
dec
lret
jb
in
out
out
call
sahf
rolb
mov
add
inc
add
int
jae
add
or
loopne
cmp
add
je
mov
popa
rclb
into
or
rolb
dec
add
pop
xlat
inc
dec
add
xor
xchg
sarb
cmp
xchg
out
add
sbb
jge
lret
push
in
push
add
test
pop
inc
add
insb
add
mov
add
je
gs
mov
sbb
lret
out
fstl
pop
add
mov
insb
add
adc
into
std
jae
mov
inc
add
xchg
cli
idiv
fs
jmp
pop
pop
add
mov
pop
icebp
idivb
fimuls
ja
imul
mov
mov
icebp
xchg
inc
inc
jbe
dec
add
add
add
jns
mov
add
pop
add
add
mov
int3
cmp
inc
add
add
pop
sub
pop
in
dec
add
sarl
inc
push
add
jl
mov
push
add
pop
movsb
flds
lcall
scas
mov
push
add
insl
stos
xchg
add
jbe
jno
add
add
scas
in
add
mov
sub
jnp
add
int3
cmp
mov
and
pop
roll
icebp
push
leave
cmp
popa
mov
adc
shr
fmul
push
add
lds
je
pop
rcll
add
dec
add
xchg
push
add
inc
add
push
add
pop
add
cld
inc
adc
and
mov
add
in
aaa
inc
add
rcrl
xchg
dec
lock
add
data16
stc
test
aas
mov
add
xor
inc
add
add
lcall
push
lea
jo
jns
out
mov
sarb
inc
arpl
fdiv
mov
mov
lds
add
jle
out
push
add
add
daa
cmp
jbe
pop
add
add
add
movsl
fnstsw
mov
add
mov
jmp
std
jmp
sbb
pop
add
add
stos
out
mov
mov
cld
cmpsl
pop
cmp
js
dec
add
jne
add
xlat
lods
add
popa
xor
aas
je
jl
rcl
add
insl
test
clc
add
dec
daa
xchg
jbe
mov
hlt
pop
jg
push
push
and
mov
fdivrl
add
and
outsl
test
xor
imul
mov
add
mov
push
add
add
leave
ret
aas
lods
adc
testb
mov
jge
ja
sbb
sbb
popf
adc
add
and
test
push
frstor
imul
cmp
clc
rorl
sub
fsts
loop
in
scas
scas
jae
add
insb
add
cmp
add
stc
jno
push
add
test
ss
scas
cwtl
je
mov
add
add
leave
je
shl
arpl
add
add
and
jae
dec
add
add
mov
fwait
dec
cld
sahf
cmp
add
add
lods
sub
pusha
add
pusha
add
push
dec
add
add
sti
subb
insb
add
inc
bound
mov
add
gs
cmp
movsl
sbb
sbb
scas
jle
inc
push
add
add
mov
popa
int3
jle
popf
xchg
cmp
loop
dec
add
sbb
andb
add
iret
sbb
pop
mov
jbe
inc
add
cltd
sub
push
add
add
xchg
adc
lret
lret
dec
add
add
add
dec
dec
add
pop
add
cmp
aaa
testb
mov
ja
adc
test
mov
xchg
ja
add
jl
mov
add
pop
jmp
add
rcrb
add
add
aad
jae
add
xor
mov
cmc
mov
cmpsb
repz
add
add
clc
sub
fs
lods
cmp
add
add
mov
inc
or
cmc
mov
add
sub
xchg
dec
ret
std
add
lcall
cmpsb
pop
xlat
dec
add
scas
add
movsb
and
inc
add
sbb
add
sub
cmp
pop
xchg
xchg
and
ja
add
sub
into
push
add
out
xor
popa
and
add
sub
mov
add
adc
sbb
and
inc
add
add
lods
imul
popf
iret
data16
add
arpl
dec
cmpsb
and
add
push
add
rolb
jb
mov
xchg
inc
add
das
dec
add
into
jge
or
cmp
int
xchg
sub
fdivrs
add
stc
lahf
loope
add
add
add
gs
add
add
enter
sar
jmp
ja
xchg
test
add
inc
stos
push
add
adcb
inc
add
xchg
add
cmp
orl
mov
add
add
mov
cmp
mov
popf
or
repz
ror
lcall
add
push
add
add
add
add
data16
cld
sbbb
lcall
ljmp
fsubrl
cmp
imul
mov
dec
or
mov
test
inc
add
movb
nop
cmpl
fistpll
pop
sub
in
jp
add
out
add
add
dec
pop
adc
mov
inc
hlt
push
rorb
add
fbld
stos
sbb
xor
addr16
mov
add
xchg
fcoms
aam
shlb
aam
imul
int3
aas
xor
jp
sbb
adc
cmp
add
add
pusha
add
fwait
addb
xor
pop
add
fisttps
dec
add
add
mov
bound
pop
add
add
or
push
add
xor
xchg
push
shlb
arpl
add
imul
pop
add
inc
add
sub
xor
add
cmpsl
rolb
xor
cmc
cmp
jle
xlat
add
fst
pop
pop
xchg
sub
nop
cli
mov
xor
inc
fcmovnu
inc
add
jl
add
out
add
das
push
add
cld
insb
add
enter
cwtl
jae
sbb
sub
jo
mov
loop
add
jo
inc
and
lret
jg
add
mov
sub
leave
xor
test
dec
add
add
fmulp
pop
pop
out
jge
ja
ja
scas
cmp
movl
scas
push
add
jnp
add
pop
add
pop
xchg
daa
xor
pop
push
add
mov
xor
sti
pop
add
add
ljmp
push
shlb
scas
dec
pushf
stos
sti
invd
add
jb
leave
mov
push
add
js
addr16
mov
add
add
pop
cmc
jo
jb
pop
add
mov
push
mov
pop
hlt
popa
jecxz
add
aas
repnz
jne
jno
mov
dec
dec
add
leave
cmp
push
add
pop
aam
push
xor
jne
int3
int
add
mov
fiadds
out
add
push
add
arpl
pop
inc
loope
add
subb
outsl
lea
fdivr
and
mov
push
add
sbb
dec
scas
or
jmp
add
xor
inc
add
ret
in
pop
fcmovb
stos
pop
adc
in
and
outsl
fcomps
xchg
ljmp
es
inc
add
add
sarb
ficomps
fcomps
add
ljmp
jmp
data16
add
stos
movsl
or
add
ficoms
jae
mov
pop
or
push
add
mov
int
cmp
add
add
xor
popa
jg
aad
add
add
mov
out
adc
sbb
jg
jge
loope
xor
xor
xchg
shl
push
add
pop
fisttpl
push
test
xchg
push
andb
sub
mov
test
in
push
add
mov
in
jns
invd
add
sub
or
imulb
add
lahf
xlat
fnstsw
pop
jbe
cmc
bound
add
movsb
cmp
rol
cmpsl
repnz
jmp
push
add
add
xor
adc
add
mov
das
daa
cltd
xchg
dec
push
in
lods
xor
shll
add
mov
sub
ret
dec
add
loope
call
lock
int3
add
call
pop
add
dec
add
imul
test
loope
add
cmp
fcmovbe
fisubrs
inc
inc
negb
lahf
mov
cmp
mov
adc
add
pop
adc
add
add
pop
add
add
add
inc
cld
cmp
cmp
shl
add
add
data16
and
in
mov
xchg
mov
jnp
jge
xor
add
add
add
mov
inc
lods
flds
enter
pop
std
push
mov
add
add
enter
add
push
or
incl
add
add
iret
lods
shlb
mov
jmp
pop
imul
sbb
jnp
add
add
cli
imul
add
jne
add
add
daa
push
sub
add
lahf
ficoms
mov
test
arpl
sahf
rcrl
out
rcrl
inc
add
pushf
xchg
sbb
cli
les
add
add
pop
add
jnp
add
add
sbb
dec
add
xchg
adc
mov
add
mov
and
mov
sub
xchg
push
nop
jne
pop
orl
lock
mov
add
aad
mov
orl
cli
cs
in
add
aam
add
add
sbb
jno
add
add
push
lea
negb
subb
cmpl
in
or
push
sbb
inc
add
push
xorl
movsl
adc
sbb
pop
mov
add
push
int3
je
xchg
sub
mov
jle
mov
ret
int3
add
add
add
or
xor
push
add
movsb
and
ret
add
outsb
add
test
add
inc
hlt
cmp
test
dec
and
dec
mov
xor
pop
add
out
pop
mov
sbb
decb
add
movsl
xor
add
sarl
add
jo
or
daa
popf
mov
push
xor
add
int
lret
pop
dec
sahf
cli
mov
or
inc
add
add
mov
loop
out
fst
lock
push
add
and
or
int3
ret
mov
xchg
pop
rcrl
fcmovbe
adc
add
ja
inc
das
adc
jnp
add
add
add
pusha
add
sti
pop
jb
call
scas
push
add
xchg
aas
adc
aas
push
add
in
add
inc
ljmp
and
gs
add
add
push
pop
les
xor
xor
xchg
sub
mov
cwtl
fidivrl
sbb
pop
ret
cmp
push
add
ror
shlb
add
push
jns
orb
notl
add
xor
andl
jno
clc
mov
ret
jae
mov
jp
in
add
sub
pop
mov
mov
add
push
in
enter
xchg
add
add
jmp
add
add
lods
pop
xchg
add
add
and
jl
out
ret
add
add
cmpsb
xor
ljmp
subl
xchg
push
add
andb
test
add
push
imul
out
lods
push
add
lahf
dec
add
sub
add
mov
psllw
lock
pop
lahf
adc
mov
pop
jnp
push
add
add
pop
pusha
add
add
add
add
mov
imul
xchg
dec
mov
add
adc
add
fbld
out
into
mov
iret
in
addb
sub
inc
add
addb
xchg
add
mov
push
add
push
add
add
or
js
scas
subl
add
add
scas
cltd
loopne
add
add
add
mov
add
add
aad
inc
add
add
add
add
add
dec
add
fisttps
dec
add
add
pushf
sub
pop
add
and
out
pop
add
repz
xor
add
lcall
mov
add
push
add
mov
inc
add
sub
loope
add
cmp
enter
add
inc
jecxz
sbb
dec
pop
mov
add
add
add
out
addr16
clc
stos
adcb
out
movsl
lds
mov
in
dec
add
and
sub
mov
mov
xor
add
add
sub
inc
add
push
add
in
adc
add
jbe
cmp
jge
adc
xchg
inc
add
cmc
push
pop
add
mov
outsb
add
clc
xor
jl
mov
or
add
sub
sahf
mov
add
add
leave
imul
stc
insl
jge
add
ja
add
or
pushf
orb
clc
push
add
out
add
pop
add
and
and
mov
sahf
pop
add
mov
inc
lret
pusha
add
mov
int
push
add
xchg
mov
add
jl
cmp
imul
add
xchg
fsub
push
repnz
add
dec
iret
adcb
add
mov
add
add
xchg
add
add
testb
dec
add
and
clc
addl
data16
cmp
fidivs
and
data16
add
data16
push
pop
add
das
movsl
jns
push
add
jle
sti
mov
dec
lods
inc
add
cmp
pop
hlt
pop
jns
into
mov
mov
add
xlat
add
flds
add
add
rcr
xchg
add
add
pop
add
cmc
xchg
stos
dec
pop
cmpsb
jge
add
add
push
add
addr16
adc
push
add
bound
mov
mov
add
xchg
sub
adc
add
repz
leave
adc
faddl
sbb
push
add
sub
fucomi
sub
xchg
rep
divl
hlt
cli
aas
jle
aas
mov
sub
int
sub
add
shll
add
lds
popa
arpl
arpl
shrb
xor
mov
inc
add
add
add
push
add
sti
stos
add
add
add
add
enter
add
mov
add
sbb
mov
pop
jg
in
loopne
add
ret
daa
lds
and
or
in
mov
add
xor
std
scas
jo
scas
mov
pop
pop
add
lods
push
pop
add
push
clc
cmp
in
cwtl
daa
fstps
pop
add
adc
jbe
mov
add
add
jge
daa
cwtl
xor
mov
int3
out
out
lret
jle
shl
push
add
mov
je
pop
lea
add
dec
sbb
loopne
sbb
adc
sbb
push
add
add
mov
jb
out
jecxz
les
push
aad
push
jmp
add
pop
add
notl
mov
add
adc
dec
add
add
dec
add
add
add
add
mov
adc
incl
add
cwtl
popf
inc
add
pop
add
xchg
and
sub
push
add
xchg
vpshaq
insl
cmp
mov
out
add
add
xchg
pop
aad
add
adc
sbb
das
loopne
and
jne
faddl
sbb
fdivl
test
add
loopne
sub
pop
add
adc
shlb
orb
addr16
mov
push
add
add
in
pop
add
add
and
jl
xor
add
les
dec
add
xchg
aad
mov
cmp
mov
add
add
mov
add
fbld
jns
ljmp
jmp
add
inc
nop
push
add
clc
push
add
push
and
out
popa
mov
and
js
xorl
xor
add
daa
jge
in
mov
push
daa
mov
mov
sbb
adc
movsl
or
fwait
and
mov
enter
fbstp
add
fists
insb
add
sub
int3
add
add
jno
inc
mov
add
xor
fdiv
push
add
scas
cmc
jo
xor
subl
xor
clc
cmpsb
jae
popl
rcl
scas
sahf
mov
add
add
add
push
fcmovnbe
and
jno
add
xor
lods
cmp
add
add
pop
add
jns
add
add
testl
in
popa
push
jns
add
sbb
sub
gs
enter
add
dec
add
faddl
add
add
or
jp
lock
add
mov
sub
inc
push
add
jp
js
and
mov
fidivrs
stos
lret
scas
pushf
repnz
add
fwait
push
lds
pop
add
fisubrl
jne
add
outsl
popa
in
test
outsl
and
cmp
add
mov
add
xchg
inc
add
imul
inc
add
cmpsb
aaa
fsubrl
lret
jp
jmp
cwtl
andb
mov
add
push
add
jo
lods
sbb
mov
add
jecxz
add
pop
hlt
xchg
shll
jmp
add
adc
incl
mov
int3
daa
fisttps
push
sahf
xchg
inc
add
repnz
sbb
xor
insl
mov
dec
add
pop
add
mov
sub
cmp
dec
add
mov
cmpl
push
add
in
add
xor
xchg
dec
add
or
inc
add
add
jno
add
xor
cli
pmaddwd
sub
mov
add
add
jp
jle
fdivrl
add
and
mov
add
sub
mov
push
pop
cmp
add
repnz
rcl
xor
push
add
pop
das
cmp
movsb
hlt
sub
icebp
jmp
push
add
add
mov
and
jecxz
add
fistpll
divb
enter
sbb
stos
mov
add
add
inc
add
sub
add
xor
xchg
out
fucomi
fmulp
inc
add
sahf
sub
mov
testb
mov
lret
cmc
adc
pushf
sti
push
roll
test
cmp
inc
add
add
jl
sub
mov
add
iret
dec
sti
push
outsb
add
mov
test
call
repz
mov
data16
pop
add
mov
sarb
lods
je
add
sub
add
add
push
inc
add
add
loop
roll
scas
aam
add
mov
ficompl
inc
add
mov
add
fnstenv
add
xor
mov
add
in
add
mov
fldcw
cld
mov
or
inc
inc
jle
push
add
aaa
ds
mov
add
test
dec
add
add
sub
adc
add
xchg
jo
cld
into
mov
sti
mov
add
call
add
jae
sti
fsts
xor
movsb
data16
jno
shrb
out
add
stos
pushl
ror
repnz
cmc
aaa
jns
sub
push
sahf
inc
data16
ljmp
add
or
sub
pusha
add
stos
stos
add
into
je
mov
add
add
add
and
push
fldl
pop
add
cmpsb
aaa
in
fdiv
vmovaps
mov
add
add
add
adc
test
add
add
incb
out
or
mov
add
mov
sarl
nop
icebp
fiadds
add
stos
fwait
push
lods
pmullw
inc
cmp
mov
pop
sbb
cli
and
lea
add
cli
mov
sub
sbb
xor
add
push
add
add
jo
fnstenv
or
pushf
adc
add
les
or
and
rcll
add
cmc
loopne
test
cwtl
cmp
js
mov
mov
dec
add
orb
add
psrlq
testl
jbe
hlt
loop
lret
mov
shlb
mov
mov
push
add
dec
cmp
add
add
and
add
dec
add
stos
add
inc
add
testb
mov
xchg
lret
mov
test
and
outsb
add
add
mov
loope
int
pop
adc
pop
sbb
lods
arpl
hlt
out
into
iret
ljmp
add
iret
and
shll
pop
or
loope
notl
out
push
add
dec
jp
cld
inc
add
add
ret
add
add
add
xor
cmp
push
add
push
add
add
xchg
dec
hlt
push
push
aaa
xchg
sbbb
out
add
fstps
stc
sbb
mov
add
les
sub
sub
add
pushf
idivb
out
cs
hlt
cmpsb
mov
add
shrl
and
adc
imul
mov
icebp
lret
ret
adcb
insb
add
pop
xchg
mov
dec
popl
cli
cmpsl
jg
add
add
add
out
inc
add
mov
pop
shrb
add
stos
or
jmp
add
outsb
add
cmpsl
xchg
sarl
out
sbb
mov
add
lret
es
push
add
bound
inc
fcoms
pop
push
or
sbb
stc
cli
cmc
leave
hlt
jge
add
rclb
add
stos
loope
aas
cwtl
or
jl
out
xchg
inc
add
add
add
push
add
push
add
in
mov
sub
cvtps2pd
pop
add
add
add
add
stos
repz
ja
add
pusha
add
push
inc
add
lods
cmp
pusha
add
sahf
xor
lds
sub
imul
dec
add
rclb
add
pop
add
hlt
push
add
add
xor
cmp
pop
movsl
mov
jmp
fwait
sub
sahf
rorb
push
test
add
add
cld
pop
cmp
and
sub
add
cmp
xlat
add
into
dec
add
add
mov
mov
mov
pop
inc
add
adc
inc
add
repnz
push
add
leave
pcmpeqd
inc
insl
mov
add
pusha
add
gs
pop
add
outsl
xchg
push
iret
push
out
jp
adc
jg
add
adc
pop
pop
in
xlat
mov
mov
add
add
negl
cld
int3
insb
add
cmpsl
cmp
outsl
and
mov
add
imul
out
xor
imul
push
and
aad
leave
notl
or
aam
mov
push
add
sub
sub
push
add
clc
arpl
scas
scas
inc
int
std
adc
dec
add
inc
dec
add
add
jg
insl
in
scas
testl
ljmp
mov
stos
pushf
xor
fcmovnu
lahf
pop
add
add
lahf
jo
push
push
add
jo
dec
push
mov
add
add
add
mov
push
add
daa
out
std
xor
rorl
add
inc
jmp
lret
push
add
add
and
add
bound
jbe
add
cmpsb
inc
into
xchg
jne
push
add
jno
movsb
ret
arpl
jg
dec
mov
add
negb
lcall
add
rcr
dec
loopne
add
cmp
adc
addb
not
pop
add
pop
push
dec
xchg
cmp
add
xor
mov
call
mov
xchg
outsl
xchg
pushf
icebp
sbb
fldenv
push
add
in
add
xor
add
jle
clc
push
add
rorb
add
mul
call
ljmp
sahf
sbb
adcb
aaa
mov
negb
mov
xor
outsl
mov
roll
add
push
add
add
js
cmc
fs
mov
push
add
dec
cli
mov
add
add
mov
fs
add
jl
out
or
lahf
les
xchg
and
pop
add
add
stos
adc
push
or
add
dec
inc
lods
lcall
mov
push
add
jecxz
add
pop
or
iret
pop
add
sub
push
add
add
push
mov
add
xor
test
add
cmp
mov
iret
pop
add
add
push
add
in
jbe
jge
xchg
popf
pop
stos
dec
out
leave
dec
mov
cmp
pop
sub
repnz
xchg
add
add
lret
add
fs
scas
pop
mov
scas
inc
add
pusha
add
add
shrl
add
sbb
sub
jge
add
pop
add
fldt
add
fwait
negb
add
xlat
push
xchg
jo
out
outsl
mov
dec
aaa
repnz
aas
mov
jle
inc
add
add
int3
roll
xchg
leave
dec
add
add
add
and
xchg
jl
xor
cs
sub
xlat
lock
add
mov
add
enter
lret
sar
sbb
stos
and
ja
sub
dec
add
sub
mov
add
add
aas
mov
mov
inc
add
inc
xchg
add
mov
add
inc
cmp
xlat
mov
adc
sbb
cmp
add
push
add
inc
add
add
add
add
jb
repz
add
in
push
push
add
in
int
add
xchg
cwtl
cld
sub
add
xor
add
push
add
jge
adc
cltd
add
cmp
add
dec
sbb
mov
add
sbb
outsl
lea
das
in
push
add
jmp
mov
cmp
mov
or
push
add
inc
add
xchg
xor
shr
mov
sbb
adc
cmp
sbb
xor
dec
sub
mov
add
pop
pop
mov
fwait
arpl
push
add
sbb
mov
cld
and
inc
pop
in
push
imul
out
inc
add
or
push
add
out
xchg
enter
jp
jmp
inc
mov
mov
dec
add
add
xor
pop
add
mov
movsb
add
loop
pop
pop
add
repz
rclb
leave
int
sbb
mov
add
fldl
lahf
lds
repnz
add
les
pop
jmp
add
test
cmp
add
add
outsl
mov
add
out
jmp
mov
test
sti
gs
pop
in
xchg
mov
leave
inc
add
add
jb
lock
add
add
movsb
lahf
clc
mov
add
add
movsl
rcrl
sbb
hlt
outsl
dec
add
add
test
pop
add
dec
add
jge
add
dec
inc
add
test
xlat
outsl
call
cmpsl
enter
ret
add
add
ficoms
rorl
ffree
rclb
jbe
inc
add
stos
lods
mov
inc
add
add
add
add
push
add
mov
add
cmp
out
add
je
nop
xchg
xchg
ss
pusha
add
inc
add
push
add
sub
xchg
xor
fistpll
add
add
clc
cmpb
add
fdivrp
adc
push
add
push
mov
inc
mov
add
jecxz
mov
aas
xlat
push
add
add
push
add
pop
mov
sbbl
in
daa
stos
fnstenv
push
add
cmp
inc
add
inc
add
mov
mov
add
pop
add
mov
mov
or
add
or
cltd
pop
push
add
add
or
xchg
add
add
bound
dec
dec
dec
adc
xchg
pushf
inc
sbb
dec
add
add
bound
adc
arpl
stc
push
add
push
sti
mov
cmp
jb
iret
inc
add
jbe
push
add
push
add
outsb
add
movzwl
dec
add
sbb
out
adc
sub
into
fistpll
dec
mov
fidivs
add
add
and
clc
add
add
adc
add
insl
lahf
test
add
loopne
add
add
in
add
add
pop
scas
je
add
lahf
sbb
mov
dec
add
out
and
jmp
stc
and
in
jno
add
sti
jmp
and
loop
out
adc
cmc
xchg
lret
push
add
add
and
sbb
adc
ja
add
add
fistl
rcl
or
cmp
sbb
enter
sarb
aas
mov
rorl
inc
jmp
loopne
and
sti
sbb
xchg
in
and
ret
cmp
jmp
add
repnz
pop
dec
add
add
xchg
adc
pop
add
pop
popa
push
add
and
or
mov
stos
inc
add
add
add
call
push
add
scas
lock
pop
push
add
in
adc
aam
jg
add
cmp
push
inc
mov
add
jg
mov
push
add
mov
shld
xor
add
jbe
jbe
pop
into
push
fbld
push
aam
pushf
lret
push
call
mov
mov
pop
mov
fstpt
add
add
sbb
into
shl
cmp
cmp
sub
scas
mov
add
inc
mov
push
jge
lahf
pop
add
xchg
add
add
push
add
xchg
int3
push
add
lds
inc
add
daa
outsb
add
add
cmovo
xor
loopne
jne
push
add
adc
insl
adc
dec
push
test
add
test
add
add
cmp
xor
sub
or
ficomps
adc
movsb
xlat
lea
add
lcall
push
add
cld
push
add
add
add
jmp
and
add
add
xor
adc
mov
add
push
data16
add
add
dec
add
inc
add
enter
inc
add
sub
add
data16
pusha
add
push
add
or
pop
or
scas
lahf
xor
and
adc
push
mov
or
push
add
xor
mov
dec
add
pop
ja
add
ret
jg
xor
adc
add
xor
stc
push
add
fsubl
cwtl
ss
insl
and
push
add
cwtl
lds
out
std
xlat
xchg
sbb
enter
mov
int3
pop
fwait
loope
mov
lds
add
add
sbb
add
mov
mov
mov
mov
add
cmpl
movl
and
adc
add
jns
add
inc
add
sbb
add
lret
sbb
test
dec
add
dec
aaa
xchg
test
add
xor
dec
and
adc
cld
sub
add
push
jp
mov
and
inc
fwait
adc
and
movsb
test
in
stos
xchg
dec
add
inc
add
add
jo
clc
inc
mov
add
sbb
dec
movsl
cli
pop
add
sub
out
add
mov
pop
add
add
cmp
push
add
cmpsb
movsb
iret
pop
add
sbb
add
gs
pop
add
dec
add
push
add
test
push
add
jge
call
push
add
add
aad
loopne
je
xchg
adc
jle
clc
stos
xchg
mov
jo
add
add
stc
push
add
sbb
stc
and
add
xor
test
mov
inc
add
or
inc
cwtl
xchg
in
jbe
imul
mov
popf
xchg
sbb
fbstp
incl
add
loop
and
sbb
add
or
cmpsl
mov
add
xor
add
add
mov
cld
ja
add
pop
push
pushf
in
cli
fwait
arpl
add
pop
add
push
aam
scas
cli
add
and
fiadds
add
out
lcall
add
inc
repz
add
push
add
xor
rcr
cmp
add
sbb
jae
in
xchg
mov
mov
add
fildll
pop
add
movsl
jae
stos
sub
cmp
repnz
sahf
jnp
add
mov
cwtl
jl
popf
and
fildll
gs
inc
add
xchg
xchg
sarl
adc
jle
enter
add
test
xlat
or
add
push
add
push
add
loope
movsl
sub
lahf
cmp
imul
add
repz
lods
ret
cwtl
cmp
mov
add
add
push
add
stos
add
mov
lahf
xor
out
adc
add
add
dec
add
sarb
add
add
pop
adc
mov
add
add
std
out
add
xor
in
mov
xor
xor
clc
mov
add
add
sbb
fdivp
push
xor
int3
pop
add
and
add
testl
lock
imul
add
add
rcr
add
push
fsubrs
xchg
data16
mov
daa
cmp
inc
push
sub
mov
add
addr16
dec
jle
sbb
jno
inc
aad
add
add
dec
add
add
pop
add
or
add
fsub
lock
clc
mov
add
sub
into
mov
in
add
int3
decl
mov
and
pop
mov
mov
inc
add
hlt
loope
leave
inc
jg
add
add
add
cld
inc
add
pop
add
addr16
push
mov
sbb
imul
add
scas
xor
aam
add
stos
lods
imul
add
or
rorb
add
mov
call
mov
cmp
add
imul
add
mov
add
xlat
mov
notl
add
add
add
add
repnz
loopne
dec
enter
xchg
cmp
and
bound
sbb
aas
mov
int
ljmp
add
add
inc
add
xchg
lea
int
mov
movsb
xchg
sub
mov
cmpsb
or
add
push
cmpsb
int3
rcrb
test
add
jns
pusha
add
mov
scas
nop
push
pop
inc
add
push
lcall
add
adc
add
add
or
je
jge
xor
int3
mov
popf
insl
into
push
add
add
xchg
add
lea
movsb
out
xor
inc
push
add
push
cmpsb
gs
pop
cmp
mov
add
in
jo
mov
shlb
outsb
add
adc
dec
cmp
fwait
enter
add
ficomps
xchg
out
add
popf
out
add
add
add
mov
lods
add
lods
sbbb
cltd
or
dec
add
add
test
nop
loopne
jae
imulb
sub
add
push
fsub
xor
cmp
and
xor
sub
in
adc
cmp
mov
enter
push
add
outsl
xchg
repz
push
add
loopne
dec
add
adc
add
es
pop
add
add
and
cmpsl
scas
int3
inc
add
xchg
icebp
xchg
dec
add
mov
mov
outsl
xlat
fldcw
shll
pop
loope
add
add
mov
add
push
add
add
add
add
mov
xchg
dec
add
add
and
jno
add
add
add
add
cmp
push
xchg
mov
add
add
sub
and
pop
pop
add
dec
dec
xchg
popf
mov
nop
add
xor
push
mov
enter
scas
sarb
jb
addr16
sub
mov
add
add
rcrb
add
add
mov
or
cmp
cmp
ret
add
aad
bound
pop
add
or
andl
imull
cmp
add
jg
cmp
add
pop
movsl
and
xchg
and
jne
sbb
das
loopne
ja
lret
add
add
int
jle
jbe
mov
add
ret
mov
push
inc
add
lahf
lods
pop
add
ljmp
das
pop
add
adc
pushf
sbb
push
outsl
das
xor
pusha
add
nop
inc
shlb
mov
and
addl
xchg
lea
and
dec
add
stos
xchg
das
inc
ret
add
aam
aas
cli
pop
sbb
loopne
jp
xor
lods
xchg
inc
add
xor
jne
add
and
pop
add
outsb
add
fisttpll
fldt
lds
add
add
call
push
data16
out
jp
mov
sub
scas
mov
jne
fwait
rcrl
add
add
push
add
add
add
pusha
add
add
fcmovnbe
bound
or
stos
add
outsb
add
filds
arpl
or
cmp
add
outsb
add
pop
add
add
in
mov
mov
push
das
dec
add
xchg
add
les
mov
add
movsb
xor
cmpsb
cli
mov
imul
mov
push
outsl
lahf
adc
add
not
mov
int3
mov
or
sub
outsb
add
add
rcrb
add
out
or
inc
xchg
in
add
add
jno
mov
sub
mov
iret
or
add
mov
add
inc
add
mov
enter
or
int
add
sbb
add
push
add
add
orb
dec
add
push
pop
cmp
subb
jno
ret
add
add
inc
add
xor
cmp
add
loopne
inc
add
add
add
aas
push
push
bound
mov
daa
sahf
and
hlt
sub
dec
add
andl
add
into
pop
add
inc
xor
aam
add
shl
cli
rclb
cmp
or
add
pop
add
lea
add
aaa
or
xchg
dec
sub
add
scas
inc
dec
add
mov
sbb
pop
sarl
loopne
jno
add
mov
stc
loop
jle
movsl
or
lret
pop
out
cmp
jns
or
lret
jg
fstpt
pop
adc
insl
jae
mov
add
mov
aam
add
dec
add
dec
xor
add
inc
add
addr16
add
push
cmp
inc
cmp
dec
in
std
push
add
and
pop
add
arpl
out
adc
in
add
add
out
cmp
inc
aad
outsl
sbb
fsubrl
insb
add
jb
test
repnz
xor
sub
sti
fstps
xor
fsts
sbb
sub
add
scas
sbb
ljmp
jg
xchg
sbb
dec
add
fmuls
mov
adc
sbb
int3
aam
cmc
xor
add
add
add
add
xchg
or
add
shld
xchg
cwtl
jno
add
lock
add
and
adc
jmp
mul
mov
dec
add
add
inc
pop
jge
add
add
xlat
sbb
fsubrp
in
popa
xchg
mov
test
les
shlb
sbb
std
xchg
int
icebp
or
push
data16
sub
jbe
lock
add
add
cld
xchg
dec
cmp
iret
stos
mov
imul
jae
add
loopne
sub
add
out
xchg
sub
push
add
add
add
add
add
cltd
jmp
add
iret
add
fcoml
xor
mov
push
fmuls
xchg
xchg
ret
add
add
cmp
and
ja
mov
add
xchg
push
lock
or
popf
mov
mov
xor
mov
push
xor
or
push
add
stos
les
add
push
add
fdivrl
add
add
popa
push
add
mov
movsl
pop
and
loop
in
out
and
clc
scas
jns
punpckldq
inc
sti
je
and
pop
xchg
jne
or
add
xor
cli
mov
add
mov
jbe
lds
add
push
outsb
add
mov
adc
lret
loope
jmp
push
aaa
jns
test
mov
sar
lea
mov
push
inc
xchg
mov
mov
dec
cli
int3
sub
xor
andl
and
sbb
addr16
add
andb
xchg
jge
xchg
and
repnz
dec
shlb
and
dec
xor
xchg
cmpsb
clc
add
add
add
cmp
loopne
stos
outsb
add
lahf
pop
insb
add
push
add
int3
pop
jmp
cmp
add
pop
addb
fucom
in
jo
in
or
mov
add
divb
repz
cltd
leave
data16
mov
adc
ret
popf
adc
jge
data16
mov
mov
icebp
inc
add
test
adc
mov
arpl
add
pop
jmp
add
xor
lret
sub
push
mov
outsb
add
push
pop
add
jno
adc
or
dec
inc
ror
mov
pusha
add
add
shrb
js
inc
or
inc
lret
dec
add
fistpll
sub
cmpl
adc
ja
add
xchg
xchg
mov
add
add
cmp
out
add
mov
add
pop
push
dec
add
arpl
movsl
sbb
popf
push
add
rclb
add
add
pop
mov
divb
mov
dec
fmulp
and
cmp
outsl
fstp
jg
add
inc
add
dec
add
shlb
pop
add
clc
lahf
stos
xchg
out
inc
add
xor
push
add
add
cmpsl
sbb
addl
add
add
lret
fmuls
mov
add
jle
xchg
arpl
xlat
cmpl
insl
cmc
pop
add
add
add
hlt
loop
hlt
stos
mov
push
add
stc
dec
add
push
adc
scas
add
dec
xor
mov
bound
cld
rolb
pop
and
inc
add
std
into
pop
iret
lock
add
add
push
add
pushf
imul
stos
xlat
inc
add
push
shr
push
add
outsb
add
mov
add
add
das
fcomps
out
add
inc
mov
push
add
push
add
test
add
pop
mov
out
arpl
cmp
icebp
cmp
or
mov
jb
pop
add
add
fwait
jecxz
jg
mov
add
add
add
add
lock
bnd
add
inc
and
je
xor
or
xchg
lret
inc
push
jecxz
loopne
add
add
mov
add
adc
add
xchg
jo
sahf
mov
xchg
nop
lock
fidivrl
add
add
add
nop
test
in
add
add
sub
cld
cmp
imul
or
fdivrs
mov
add
cld
nop
mov
adc
cli
push
add
int3
or
imul
sub
xchg
lret
enter
pop
add
outsb
add
fistl
add
dec
jo
fwait
cmc
inc
cwtl
push
inc
je
jge
sbbb
lods
jl
pop
sbb
test
jnp
add
pop
cmc
jo
leave
fisubl
mov
add
add
or
mov
add
sarb
in
xlat
in
cmpsl
paddq
pop
test
outsl
mov
ret
add
in
fnsave
aam
imul
stos
js
sub
data16
add
sub
jno
add
adc
add
sbb
sahf
dec
add
xor
jge
add
add
out
scas
jge
fisttpll
andb
cmpsb
aad
add
add
rcl
out
mov
cltd
xor
mov
in
jl
add
pop
add
cmp
sbbb
jg
pop
pop
mov
add
adc
sub
sti
add
out
fcmovbe
xchg
mov
sub
add
add
and
mov
adc
stc
loopne
add
cltd
pusha
add
pop
add
cmp
sub
xor
xlat
popf
inc
add
pusha
add
mov
jg
fwait
std
push
add
add
pop
add
dec
add
or
clc
cmp
jns
add
das
adc
jbe
push
cmpsl
sub
ss
insl
cmp
xor
pop
add
fiaddl
mov
push
add
rcll
inc
add
inc
add
mov
add
test
jge
add
push
add
stos
and
add
aad
add
and
jno
mov
outsl
mov
xor
add
data16
push
add
add
mov
or
hlt
jno
inc
add
add
mov
cli
mov
in
sub
cmp
push
push
add
outsb
add
adc
adc
adc
xchg
je
jno
add
add
xchg
addr16
add
imul
imul
add
sub
add
jge
loopne
add
call
in
dec
add
xor
stc
xchg
inc
add
std
mov
adcb
in
push
add
or
lds
add
add
mov
pop
cltd
call
add
add
sbb
cmp
jge
push
stos
sub
aam
and
pusha
add
int3
adc
in
popa
or
cmc
cltd
mov
add
pop
bound
out
add
cli
add
lods
mov
daa
mov
add
sbb
pop
dec
pop
add
lret
cs
cmp
sbb
lcall
dec
add
jo
sub
pop
add
inc
add
int
std
addr16
cs
mov
rorb
add
cwtl
repnz
mov
fdivs
mov
cvtpi2ps
gs
pusha
add
mov
mov
add
pushf
dec
pushf
dec
add
add
shll
and
add
std
jbe
xor
mov
add
push
add
cltd
outsl
xor
mov
lock
xor
push
add
ja
add
mov
push
xor
les
or
rcr
add
aad
add
jg
outsl
lret
push
cs
add
arpl
lock
add
add
pop
add
in
add
push
inc
lahf
ret
xchg
das
pop
add
ljmp
ficomps
ret
sbb
add
mov
fiadds
mov
pop
add
add
cmp
sbb
lock
iret
divb
jbe
xchg
sub
xchg
jnp
add
sub
mov
stos
mov
add
add
xchg
fnstcw
pop
scas
add
add
pusha
add
add
lcall
push
add
std
add
add
test
outsl
or
or
test
add
pusha
add
cmp
aad
add
add
mov
pushf
js
add
xchg
or
and
bound
mov
dec
add
add
jb
aaa
iret
adc
and
insl
adc
cmp
bound
insb
add
add
or
inc
add
dec
add
push
fiaddl
push
add
add
mov
in
add
cltd
dec
add
dec
mov
xor
sub
jbe
stos
mov
jg
insb
add
add
into
cli
hlt
insb
add
mov
std
pop
add
inc
cmp
daa
cmp
pop
pop
add
sar
std
sub
jecxz
adcl
jae
jbe
sti
cmp
scas
jmp
dec
add
repz
add
xchg
add
mov
add
out
jl
aad
cmp
add
add
dec
add
add
add
repnz
add
mov
pop
add
cmp
dec
xor
add
jno
xor
sti
or
and
xor
mov
roll
pop
jnp
or
stc
ret
enter
arpl
jnp
jge
add
xor
add
cmp
sbb
sahf
test
add
add
pop
add
mov
test
add
ja
add
push
add
mov
cmp
test
fnstcw
push
add
je
cmpsl
data16
add
add
fidivrl
sub
jo
mov
mov
pop
sarb
iret
mov
add
pop
sti
push
lret
daa
lahf
repnz
mov
pop
dec
add
add
add
shlb
or
add
inc
push
ret
pushf
or
cmpl
outsb
add
adc
fdivr
sbb
pop
add
or
fiaddl
sahf
sub
aad
icebp
loopne
into
push
add
and
lods
inc
add
sahf
out
xor
add
xor
shll
add
mov
popa
js
out
nop
bound
xchg
push
daa
sbb
add
dec
add
add
add
lods
jne
cmp
jae
shl
pop
add
add
mov
je
hlt
sub
add
loopne
mov
mov
xor
mov
add
dec
xchg
je
dec
add
mov
add
rep
insl
ret
sahf
shlb
inc
add
add
imul
mov
ljmp
add
add
dec
dec
gs
pop
fldcw
in
push
add
cmpsb
inc
stc
cmp
xor
xchg
mov
cmpsb
push
aaa
fistl
pop
mov
sti
mov
dec
add
stc
cwtl
test
xlat
jge
xor
inc
add
lock
mov
aaa
mov
jle
mov
pop
arpl
sub
dec
data16
add
mov
sub
insl
out
add
lret
sbb
mov
hlt
push
jbe
outsl
push
test
or
add
rol
inc
outsl
loop
add
leave
cld
scas
and
mov
add
enter
mov
add
inc
cld
inc
lods
call
add
xor
into
sub
cmpsb
insb
add
inc
inc
add
add
jae
add
dec
add
hlt
sarb
cwtl
sbb
int
xor
mov
pop
add
hlt
or
mov
fmul
daa
loopne
mov
and
insb
add
add
add
add
dec
xor
inc
add
xchg
popa
loop
add
mov
int
add
cmp
add
cmovg
add
xor
add
cmpsl
dec
push
add
add
test
je
inc
add
and
mov
sub
pop
add
les
sub
sbbl
dec
add
mov
popa
fdivrs
add
into
jmp
jmp
fadd
jmp
sbb
add
cmp
outsl
xor
add
inc
stos
addr16
mov
in
ss
xchg
lds
xchg
cmp
int
lock
add
add
jp
test
mov
add
int
daa
fcmovnu
mov
push
add
pop
add
add
ljmp
and
jge
ja
add
mov
add
fisubs
mov
xlat
and
jb
sub
push
mov
fdivl
push
cmpsb
aam
xchg
popf
mov
stos
outsl
jnp
mov
les
inc
movsl
dec
add
mov
add
push
loop
and
add
add
push
inc
add
out
add
sub
sbb
mov
nop
adc
add
mov
add
imul
mov
sbb
push
add
dec
sub
add
add
mov
push
add
add
testl
add
sub
add
in
dec
sbb
fcomps
xchg
pop
mov
add
add
pop
add
jge
nop
cmp
dec
ficompl
cmpsl
mov
xchg
data16
add
xlat
cmpb
sarb
call
cmp
inc
mov
loope
add
add
addr16
add
cwtl
cmp
jb
ja
fadd
in
mov
out
and
pop
sub
push
add
aaa
xor
cmp
lret
add
movsb
sub
pop
xchg
nop
push
xchg
cmc
sti
jg
aaa
mov
ljmp
add
hlt
mov
sahf
gs
add
xlat
and
dec
push
add
jg
add
add
xor
add
mov
adc
inc
push
bound
or
mov
add
mov
sbb
add
rorl
dec
add
add
arpl
arpl
icebp
insb
add
and
test
repz
add
sub
fists
add
add
fmul
and
push
add
popf
mov
popa
sub
sub
dec
add
mov
into
loopne
divb
ljmp
add
add
add
add
mov
rorl
add
jecxz
xsha256
cmpsb
xchg
pop
inc
pop
leave
lods
cmp
and
jmp
add
add
ret
xchg
out
test
push
insl
xor
cmp
pop
add
push
add
dec
add
and
dec
add
jmp
icebp
ret
mov
add
gs
scas
popa
dec
in
mov
add
pop
ret
xchg
adc
dec
add
or
lret
or
adc
xlat
popf
push
dec
ficoms
imul
xchg
mov
arpl
mov
call
xchg
notl
xchg
or
add
add
pop
nop
std
lahf
mov
lahf
loopne
nop
popa
jmp
add
sbb
add
and
add
add
add
mov
ja
add
add
fxch
or
ljmp
jecxz
cmp
in
xchg
js
or
fwait
add
sub
pop
call
add
clc
cmp
sub
add
cmp
sbb
fiadds
cmc
jmp
shr
enter
add
xchg
sub
mov
int3
inc
add
pop
add
or
add
xchg
mov
test
add
add
lods
fstpt
add
add
notl
pop
dec
add
dec
in
add
add
add
mov
and
mov
add
jg
add
or
rcrb
add
fnsave
mov
xor
xchg
in
scas
pop
jne
add
add
pop
and
add
add
mov
loop
push
add
sub
inc
add
add
stc
out
nop
insb
add
or
cli
xor
jle
frstor
add
cld
je
push
cmpsb
cmp
notb
inc
add
out
cmp
sbbl
add
xor
mov
add
xor
test
cmp
dec
xor
test
out
pushf
pop
mov
mov
cmp
and
imul
add
aam
add
lret
popf
mov
inc
scas
xchg
inc
add
lahf
pop
add
xchg
dec
and
add
mov
jecxz
dec
add
js
dec
add
add
pop
add
jmp
popa
push
push
jo
dec
divb
lods
sbb
fs
aad
aam
xchg
movsl
pop
cs
add
push
mov
loop
movsb
nop
xchg
xchg
fnstenv
pop
add
fiaddl
adc
add
add
pushf
xchg
jo
sbb
xor
movhps
cwtl
adc
imul
cs
ljmp
add
jp
dec
arpl
add
cmp
in
add
movl
mov
add
outsl
inc
mov
pop
add
or
fmulp
mov
add
add
insb
add
mov
add
pop
addr16
sub
cmp
add
scas
inc
insl
cmp
cmpb
add
sub
xor
sub
add
add
sub
mov
fisttps
add
add
push
add
xchg
add
pop
andb
dec
add
add
mov
add
add
add
ret
mov
xchg
dec
add
dec
sub
loope
pop
mov
add
mov
pusha
add
add
in
repnz
and
jp
mov
jecxz
pop
dec
add
add
add
add
cmp
pop
inc
lret
mov
add
add
push
aam
lret
dec
add
mov
lcall
xor
add
movsl
cmp
xor
fstpl
add
xchg
imul
dec
push
add
add
push
add
stc
and
mov
add
aaa
sbb
push
add
popf
inc
push
inc
add
mov
out
mov
movsb
jmp
nop
pop
scas
mov
insl
sub
test
lea
add
subl
test
push
ljmp
add
add
scas
mov
add
rcll
dec
add
cmpsl
sub
jo
push
int
add
push
add
xchg
mov
add
add
cltd
out
xchg
jl
push
orb
lock
add
cmpsl
lds
add
mov
pop
mov
dec
lret
stos
push
add
add
add
add
add
sbbl
in
dec
and
and
jae
data16
pop
adc
jo
cmpb
mov
cmp
popa
xor
je
jnp
jp
jmp
jecxz
xor
add
sub
dec
add
pop
add
jecxz
aad
sub
test
and
pop
das
fadds
mov
ljmp
adc
mov
adc
mov
sub
inc
jbe
filds
movsl
adc
sbb
lahf
cmp
stos
dec
add
std
mov
aas
rclb
mov
add
add
dec
lret
jb
mov
add
add
inc
add
xchg
imul
lea
stos
and
xchg
xor
add
inc
jne
mov
jae
or
dec
mov
pop
add
sbb
push
add
add
out
inc
rcr
outsl
sbbb
fisubrs
pop
pop
or
clc
and
in
pusha
add
xor
add
xorb
fisubrl
js
fnsave
add
add
test
adc
loop
add
push
cs
loope
and
outsl
xor
and
xorb
add
daa
aad
add
imul
inc
add
adc
cmpsl
insl
fs
mov
add
dec
add
leave
jb
push
add
pushf
jbe
mov
insb
add
or
add
xchg
add
sbb
in
push
add
dec
add
pop
add
add
imul
add
mov
xchg
cmp
popf
dec
arpl
add
iret
lods
mov
add
pop
imul
cmp
add
push
add
lahf
inc
add
aad
dec
xor
sub
jae
leave
fisubrl
lods
out
mov
mov
bound
cmpsl
cmpsl
xor
in
xchg
sahf
mov
add
test
les
imul
mov
cmp
add
add
pop
add
add
or
adc
rorl
pop
add
pushf
xor
icebp
push
imul
adc
lods
pop
add
add
test
pop
sahf
push
add
jne
add
add
sub
mov
inc
add
add
sbb
aaa
sahf
add
jge
mov
xor
negl
inc
add
add
add
push
add
pop
push
add
fwait
and
jecxz
movsb
lds
in
pop
ljmp
mov
adc
fcom
mov
sahf
andb
in
add
add
fdivrl
inc
cld
sbb
imul
loopne
outsl
sti
jnp
add
inc
add
sar
add
aam
cmp
test
add
rcrl
lret
add
das
or
sbb
mov
in
xor
and
iret
movsl
repnz
add
jne
sbb
out
inc
in
inc
add
push
add
jo
add
jae
shrb
add
add
orb
add
je
out
pop
adc
fcmovnb
pop
inc
add
lahf
loope
xor
jo
push
add
add
leave
xor
fs
mov
std
loop
mov
pop
or
jne
aaa
mov
add
scas
add
outsl
sbb
dec
add
mov
loope
add
test
mov
cmp
add
push
add
jge
add
push
add
cmp
data16
sub
add
xchg
mov
iret
rorl
mov
add
add
mov
fbstp
je
jae
mov
data16
pop
jg
fildll
popa
sbb
sub
and
movl
xlat
repnz
or
mov
orl
daa
pusha
add
sub
xchg
fidivs
add
and
or
sub
jg
dec
add
mov
lret
stos
mov
inc
add
inc
add
out
aas
mov
add
push
add
sti
out
add
mov
add
add
or
or
dec
add
js
icebp
out
fildll
fs
inc
fnstsw
out
add
add
push
pop
add
stos
xchg
mov
lret
mull
and
notb
addb
pop
add
loopne
add
jmp
jle
mov
add
sbb
add
repz
cltd
aam
addb
imul
add
inc
sub
add
jnp
add
adc
jge
push
add
cmp
sub
or
ljmp
xchg
dec
add
incl
iret
cmpsl
push
sarb
add
xchg
aad
lock
add
ret
mov
add
sahf
scas
mov
sbb
fsubrs
add
sahf
xchg
sahf
lret
mov
lds
pop
jecxz
mov
xchg
ljmp
add
outsl
xchg
jmp
out
fsubr
mov
add
les
add
or
or
jp
nop
mov
add
lret
mov
lahf
leave
push
push
int3
and
sub
xchg
add
test
bound
xor
mov
adc
sbb
mov
add
xor
addl
icebp
ret
sti
cmp
fsubrl
je
aaa
xchg
insl
out
push
add
sbb
bound
cmp
lds
inc
mov
cmpsl
push
add
inc
and
push
add
lahf
loop
aam
xchg
loop
add
push
test
stos
data16
jbe
fstl
lods
add
outsl
in
lret
adc
push
add
adc
int
sub
aad
faddp
insl
js
pop
mov
dec
push
add
pop
clc
fcmovne
mov
insb
add
add
cmp
pop
mov
add
add
xchg
ret
fisubrl
pop
ret
stos
outsl
pop
sti
lcall
push
loope
add
and
add
add
and
jne
mov
dec
xlat
into
push
add
add
std
mov
mov
ja
es
add
stos
fdiv
cltd
xor
add
add
out
lahf
adc
push
add
mov
and
rorb
add
push
add
clc
xor
add
mov
jae
repz
add
push
sub
test
cmp
mov
mov
add
add
jbe
mov
sub
insb
add
cmp
jmp
sbb
push
test
jnp
xor
push
add
add
cmp
jmp
lcall
fucompp
inc
add
jb
push
or
lock
aaa
mov
sub
adcl
dec
add
xchg
xchg
in
add
mov
cld
sbb
mov
jp
mov
mov
jns
inc
add
shrb
add
repz
sbb
cld
je
pop
sub
sti
popf
push
sub
sti
scas
imul
mov
add
xor
mov
rcr
cli
outsl
cmp
repz
xchg
ljmp
sarb
mov
sub
inc
add
js
fdivr
loope
repz
fsubrl
adc
mov
cld
cmp
clc
cmpl
push
scas
insl
xchg
mov
adc
dec
mov
mov
addr16
shrl
add
dec
add
jecxz
add
add
sbb
rcl
cmp
push
sbb
add
lcall
sbb
add
add
or
jge
add
mov
pop
xchg
xor
mov
insb
add
ljmp
ss
xchg
jge
add
add
insb
add
mov
mov
add
add
add
add
cmpsb
bound
jg
les
jnp
dec
add
add
jecxz
add
mov
add
add
dec
add
xchg
out
add
push
and
add
mov
jle
inc
pop
mulb
out
or
xchg
mov
and
pop
lcall
and
push
add
add
mov
pop
add
adc
popa
push
add
sub
outsb
add
add
add
add
mov
add
js
popa
xchg
adc
data16
test
sarl
or
lcall
lods
test
add
fwait
nop
cmp
xor
repnz
add
xchg
mov
add
add
stos
mov
ljmp
lret
sbb
mov
inc
add
add
add
and
add
xchg
dec
add
cli
inc
add
or
sbb
add
add
add
xor
ja
push
stos
adc
andl
mov
or
or
adc
add
mov
xor
outsb
add
inc
jmp
test
cmp
repnz
add
mov
mov
add
scas
into
jae
loopne
out
add
lock
fimuls
mov
adc
cmp
ljmp
cmp
jecxz
jbe
sti
test
mov
pusha
add
pop
inc
shr
xlat
mov
and
pop
push
add
out
add
add
call
add
xchg
adc
lret
add
out
data16
cmc
xor
or
enter
inc
add
test
aam
out
adc
add
add
mov
cli
push
add
rcr
adc
in
xchg
cmpsl
bound
fyl2xp1
mov
mov
mov
jnp
add
addr16
or
sarl
dec
xor
test
add
add
and
dec
add
mov
inc
add
cltd
pop
pusha
add
adc
add
add
lock
movsb
add
mov
add
sar
dec
add
xchg
mov
pop
loop
popa
data16
xchg
repz
popa
add
add
add
mov
pop
add
sbb
cmp
add
or
sbb
mov
sbb
repnz
add
mov
xor
jle
xor
stos
stos
jae
add
jmp
push
add
add
push
add
xchg
jnp
ljmp
lret
mov
add
pushl
mov
and
dec
insl
or
and
mov
xor
xchg
test
shr
imul
rcl
stos
inc
sub
sbb
dec
jae
sti
lds
mov
xlat
sbb
add
rcl
idiv
mov
xchg
add
push
add
jns
dec
add
inc
add
mov
sbb
add
sub
pop
add
hlt
loopne
push
jb
mov
mov
add
mov
xor
adc
test
add
stos
mov
out
or
add
or
inc
add
lds
add
aad
aaa
sub
xor
movsb
fwait
push
add
mov
xchg
mov
movsl
stc
in
add
add
f2xm1
ficoms
xor
fwait
adc
dec
pop
add
bound
lret
stc
sbb
dec
add
xor
lahf
daa
pop
add
aad
adc
fcoml
sti
inc
add
cmp
add
lds
stc
fcomps
push
add
push
add
cmp
cmp
push
add
nop
aam
add
push
add
cmpsb
pusha
add
addb
add
xchg
aad
jno
in
mov
aam
sub
stc
lods
push
aad
xchg
aas
rcrb
stos
pop
jne
iret
push
add
dec
add
imul
add
addr16
pop
hlt
add
mov
add
loopne
dec
je
xchg
fcmovbe
xlat
jo
xchg
mov
fwait
xlat
push
mov
push
rcrb
add
out
xchg
imul
xchg
push
cmp
rcll
popa
lret
or
add
test
mov
add
xchg
aaa
rcrb
fs
dec
add
add
dec
add
add
and
mov
inc
clc
mov
jp
aam
add
add
add
cmp
add
es
in
add
fidivrl
out
add
add
pusha
add
jge
pop
add
push
add
idivl
int
pop
rcrb
sub
jg
push
add
cmp
pop
mov
in
add
add
lods
xor
data16
push
fnsave
add
add
in
mov
add
mov
in
xor
sbb
popa
out
icebp
loop
add
mov
add
mov
add
add
push
xor
ret
pop
out
adc
pusha
add
and
add
dec
add
xchg
inc
or
push
add
les
cltd
or
sbbl
cmc
out
add
mov
add
jb
push
add
xor
xchg
outsl
mov
jmp
add
xor
push
add
mov
push
add
add
mov
add
or
or
add
les
sub
xor
jb
mov
push
out
jbe
negl
push
add
aad
notl
push
mov
inc
pop
cmpsb
add
sub
sahf
testl
jl
pop
add
push
add
push
loopne
js
mov
add
pop
mov
add
add
test
popa
dec
inc
cmp
rol
add
add
out
xor
fadds
fistps
incl
aam
jmp
xchg
insb
add
or
test
mov
mov
push
and
mov
inc
add
mov
aas
sbb
cmp
pop
daa
incl
add
icebp
call
scas
ljmp
or
jo
push
add
outsb
add
add
adc
push
add
add
ja
stc
cmpl
cld
jbe
inc
add
fmull
movd
cmp
stc
inc
push
mov
sbb
jno
ja
out
pop
add
mov
add
in
cwtl
lahf
mov
pushf
jge
pop
mov
cld
andb
add
dec
inc
fistpl
jle
or
in
add
cmp
bound
inc
add
jno
add
adc
jg
inc
add
out
ljmp
push
cwtl
xchg
ljmp
dec
add
add
cmc
sbb
add
jp
lret
inc
add
adc
pop
add
mov
jge
adc
popf
int
popf
cli
cld
iret
mov
jno
dec
orl
add
inc
pusha
add
jno
add
sahf
jbe
mov
add
out
aas
dec
add
inc
add
xchg
iret
fwait
js
js
and
pusha
add
iret
aaa
xchg
cmp
dec
fdivs
mov
push
adc
shr
hlt
jge
loope
popa
int
sub
xor
push
add
loop
mov
call
shrb
rclb
add
decl
mov
push
add
xchg
out
jb
sahf
jle
inc
add
add
and
add
add
add
