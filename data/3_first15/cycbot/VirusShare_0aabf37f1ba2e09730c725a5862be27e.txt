and
add
or
jb
adc
or
pop
mov
add
jbe
ss
and
sti
or
add
inc
add
flds
cmp
nop
fmull
fbstp
xchg
lods
gs
mov
push
fsubs
pop
inc
add
add
jbe
and
sub
add
sub
jb
dec
mov
scas
and
pop
sarb
bnd
mov
add
je
insb
popa
add
add
imul
pusha
add
dec
pop
int
xchg
add
lods
pusha
add
es
pop
pop
aaa
push
arpl
pop
aaa
jae
aad
jecxz
in
mov
cli
jecxz
add
sti
sub
mov
in
dec
enter
add
aaa
arpl
imul
bt
add
jge
mov
add
mov
add
pop
out
daa
inc
add
and
mov
push
dec
push
dec
and
outsl
inc
add
cwtl
cltd
outsl
out
adc
jp
jbe
and
out
push
rolb
jp
int
mov
xchg
add
pusha
add
insl
and
mov
insl
loopne
test
add
push
insb
dec
jns
aad
adc
add
xor
push
lcall
and
loope
xor
scas
jb
mov
xchg
inc
popf
xchg
xchg
cmp
faddl
pop
outsl
mov
add
movsl
pop
cwtl
lods
sbb
mov
jb
cmpsl
lcall
push
xlat
imul
imul
xchg
inc
inc
rolb
pushf
jp
outsb
lods
sub
jb
xor
imul
mov
movb
mov
mov
cmp
mov
jno
jg
push
cmpsb
inc
out
add
mov
mov
add
out
rcrl
pop
sbb
lret
add
testb
lahf
data16
push
movb
inc
add
inc
mov
jnp
xlat
sub
xchg
or
jb
int3
push
add
sub
nop
mov
xor
inc
add
mov
push
ret
stos
cmp
sti
jmp
add
dec
movsl
pop
cli
jnp
mov
push
fcmovnb
xchg
addb
add
pop
addb
int
sti
das
fsubrl
mov
sub
pusha
add
cmp
add
push
sbb
mov
insl
xor
inc
fsubr
sub
dec
xchg
fwait
jne
mov
mov
push
pop
iret
push
pop
xchg
cmpsl
or
aas
aas
mov
loope
stc
pop
mov
je
or
add
xor
xor
jecxz
jl
movsl
popa
sub
movsb
icebp
add
aaa
or
inc
movsb
xchg
push
mov
pop
fimuls
add
das
movb
add
sti
rcll
sub
add
cmp
push
cmp
je
sbb
mov
fcomp
movl
mov
pushf
xchg
jnp
sbb
and
inc
add
das
jo
and
fcmovnb
adc
add
add
jmp
mov
fsubl
cmp
xrelease
inc
push
jl
lds
jecxz
pop
mov
movb
popf
adc
pusha
add
addr16
sbb
sbb
cmp
adc
add
mov
js
fmull
ljmp
hlt
jl
jo
movsl
or
in
aad
popa
pop
push
jp
mov
int
xchg
push
addb
aad
test
mov
add
pop
pop
enter
lock
loopne
or
push
cli
outsb
test
inc
add
pop
add
clc
mov
aas
push
adc
cli
push
mov
xchg
call
lret
mov
ja
mov
roll
xor
inc
das
pop
ds
sub
popf
push
cmp
mov
sbb
cmpsb
sub
repz
inc
add
inc
je
add
dec
mov
stos
push
and
repz
bnd
pop
push
outsb
leave
or
jge
aam
jo
or
imul
xor
jb
add
icebp
movsl
mov
les
cld
push
add
xor
add
mov
repz
or
nop
sahf
pop
loopne
and
jge
loop
mov
loop
out
pop
xor
loopne
add
in
and
enter
jno
mov
fisttpll
shrl
mov
add
movb
loop
lds
lret
lea
lret
add
in
hlt
aam
sub
out
add
push
pop
stos
pop
add
out
mov
add
cmc
push
sti
adc
jne
addb
sbb
rcr
jb
fdivp
mov
ret
lret
out
add
aam
addb
sbb
pop
mov
xor
stc
out
clc
ss
outsb
adc
shrl
add
cmp
fildl
sub
cli
xor
push
add
insl
mov
add
push
jnp
xchg
fisubrs
cli
jmp
insb
ret
out
push
xchg
dec
adc
ds
jbe
sub
in
std
add
fmul
pop
dec
xor
cmpsb
ss
sbb
cmp
sbb
and
sub
cmpl
push
fwait
mov
ds
xchg
in
aad
mov
imul
xchg
lret
sub
cmp
sbb
jae
xor
call
addr16
pop
dec
push
mov
fwait
repz
les
inc
addr16
sbb
xchg
inc
into
sbb
xchg
or
sti
mov
loope
dec
xor
out
mov
lret
and
insl
jmp
loope
mov
and
outsb
add
add
jo
push
sub
add
add
push
mov
or
in
ss
mov
push
iret
cmp
subl
add
fsts
jmp
adc
arpl
jno
loope
ret
or
dec
inc
sbb
jbe
add
call
rcrl
add
push
dec
dec
arpl
and
xchg
test
or
push
sbb
ret
in
xchg
cmpsl
and
out
int
adc
stos
sub
ror
into
mov
xlat
lret
mov
hlt
inc
pop
cli
fisubrl
mov
loope
xor
iret
imul
add
incl
mov
lea
insl
sarl
push
inc
cmp
clc
xchg
sbb
push
in
push
stos
push
lahf
lds
ret
mov
xor
cmp
add
mov
xchg
mov
cmp
addb
inc
fidivrl
push
fs
jmp
ds
popa
push
std
mov
gs
rolb
push
add
cmp
fdivl
add
push
adc
adc
cltd
mov
inc
add
bound
loopne
jns
add
roll
test
jae
inc
adc
xchg
cmp
mov
add
ss
inc
rol
add
cwtl
add
push
cmpsl
push
js
les
fsubs
add
lret
cs
mov
out
rcll
iret
paddsw
loope
lret
sti
out
mov
add
jae
int
sbb
sbb
add
es
add
pop
cwtl
mov
jnp
sub
xlat
sub
pop
lret
rorl
sarl
fdiv
push
stc
mov
popf
fwait
ss
jecxz
idivl
data16
sub
dec
mov
scas
or
fld
pop
pop
dec
cmpsb
bound
dec
filds
add
add
sbb
add
daa
pop
pop
or
cli
jge
test
push
out
xchg
fucom
lahf
jg
sti
in
or
adc
or
add
or
test
xor
into
shl
adc
mov
sub
sbb
xchg
lcall
mov
inc
add
lret
out
jmp
out
out
push
adc
dec
mov
imul
sbb
leave
std
out
xchg
ret
iret
nop
icebp
loop
adc
sbb
mov
inc
add
outsb
aam
lods
push
xor
cmp
scas
imul
lret
mov
outsb
in
mov
loop
sub
xor
fdivr
cmpsl
addr16
adc
sub
jg
stos
sti
inc
idivl
pop
mov
es
fldcw
rcr
cltd
dec
lea
xchg
mov
pop
pusha
add
mull
inc
ret
add
dec
sub
mov
fmulp
fnsave
stos
cli
inc
and
and
add
into
mov
lret
roll
lock
add
mov
cmp
pop
push
fcmovnb
std
out
lods
lea
cmp
push
out
std
loope
jmp
in
daa
sub
jecxz
lods
cmp
jb
sbb
jecxz
ds
add
jge
call
loope
jp
xchg
into
adc
push
add
xchg
jle
or
data16
imul
jnp
add
adc
rolb
push
ss
aam
add
lret
jecxz
add
pop
mov
add
push
add
add
lea
add
pop
je
dec
cmpsl
and
insl
loopne
cmpsb
mov
mov
add
in
dec
sbb
cmp
push
or
sub
mov
stc
sub
int3
test
pop
ss
or
pop
dec
mov
mov
loopne
cmc
dec
popf
nop
xchg
cltd
addb
mov
add
aaa
lret
sub
dec
cmpsb
scas
pop
jecxz
xlat
clc
pop
test
fcom
mov
adc
inc
and
xchg
or
iret
mov
setp
pcmpeqd
mov
lret
push
and
daa
pop
mov
stos
cli
cmc
sbb
cmp
add
xchg
cmp
push
cs
push
dec
loop
repz
jmp
mov
mov
xlat
ss
sbb
push
jno
mov
sbb
nop
addb
add
aaa
cmp
lcall
adc
add
arpl
sub
je
pop
in
ss
add
push
adc
mov
add
inc
add
cmp
fisubrl
lret
dec
lret
pop
popf
scas
les
shll
push
bound
cli
push
mov
add
mov
inc
add
lock
mov
inc
push
xchg
inc
call
push
in
mov
sbb
ret
xor
inc
les
lcall
shlb
pop
in
lahf
movsl
pop
ja
cli
xchg
jb
cmp
fstps
xor
inc
add
mov
add
movsl
les
roll
jecxz
fdivrs
xchg
daa
je,pt
pop
mov
or
pop
or
mov
push
mov
add
les
sbb
in
decb
arpl
and
push
adc
addb
test
imul
inc
add
push
js
add
popf
sbb
add
dec
pop
outsb
ljmp
add
mov
xchg
notl
dec
es
dec
aam
pusha
add
int3
cli
inc
add
dec
bsf
pop
mov
in
inc
mov
imul
out
and
adc
xorl
in
adc
mov
pop
xor
movl
dec
outsb
mov
jno
add
into
mov
pop
loop
sbb
push
fldl
shll
mov
mov
adc
mov
cld
mov
sub
in
mov
aas
push
xchg
outsb
loopne
xchg
dec
fadd
mov
add
test
addb
faddl
add
add
lret
add
je
mov
out
pushf
mull
add
inc
add
out
adc
lods
jp
es
or
ss
push
jo
sub
push
mov
mov
sub
add
dec
int3
push
xchg
int3
add
ret
add
and
add
push
jb
or
jmp
popa
sbb
push
int3
jl
add
popf
mov
or
dec
push
and
jmp
daa
int
and
xchg
test
out
xchg
gs
mov
add
repz
mov
lret
ds
adc
mov
sbb
sub
push
fsts
mov
movb
add
dec
xchg
out
add
or
lahf
js
mov
out
lods
daa
imul
jne
jbe
add
mov
jecxz
test
test
mov
or
inc
mov
rolb
push
and
in
and
mov
sbb
test
arpl
jecxz
adcl
mov
add
cld
pcmpeqb
cmp
add
adc
sub
fistpl
shlb
fmul
or
pop
cmp
imul
xchg
mov
inc
or
dec
cli
fcomps
sub
add
jecxz
sti
enter
dec
jecxz
test
xchg
mov
mov
icebp
mov
lods
push
mov
push
repnz
sub
mov
push
inc
add
into
jle
jo
inc
xor
nop
push
jbe
or
lods
sbb
pop
jmp
xor
xor
sub
sub
and
adc
add
pop
ret
xchg
sahf
shrb
adc
xor
cmp
push
mov
cmp
sub
into
popa
adc
fisubs
mov
lret
addb
loopne
iret
movaps
inc
dec
hlt
dec
rolb
adc
mov
popf
inc
enter
aad
decb
add
loopne
lock
add
sahf
movsl
mov
cbtw
mov
cmpsl
push
xor
cmc
decb
lock
pop
popa
mov
imulb
cmpl
cmp
icebp
sbb
dec
cmp
sub
addb
loope
and
sahf
pop
and
jnp
ret
ds
out
push
into
enter
popl
push
sub
xor
shl
loope
jb
add
int
xlat
xchg
jmp
in
aam
push
test
cmp
jns
daa
out
mov
dec
pusha
add
jg
lcall
jecxz
pop
mov
and
addl
insb
mov
mov
and
sbb
lds
xbegin
sbb
mov
inc
scas
inc
add
fimuls
int
pop
jp
out
adc
out
dec
adc
add
sar
lret
xchg
loopne
ss
filds
fs
mov
add
outsb
repz
add
into
push
add
push
mov
xor
adc
mov
xor
add
out
pushf
shl
lret
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
into
dec
nop
clc
cltd
jl
add
enter
sbb
popf
mov
adc
lret
xor
mov
fnstenv
or
dec
addb
or
adc
mov
out
add
cmc
inc
add
sbb
sarl
jnp
movsb
cli
divb
mov
mov
cmp
das
sub
sarl
inc
in
das
aas
mov
dec
jl
mov
sbb
lcall
icebp
xchg
mov
out
xchg
sbb
fdecstp
pop
pushf
pop
xchg
xchg
inc
sbb
cmc
or
cmc
lods
push
and
shrl
imul
mov
addb
add
sub
add
fcoms
aaa
add
xor
add
out
dec
jb
xor
sbb
push
ja
adc
push
pushf
lods
cmp
or
push
sub
fdivrs
stos
hlt
sub
xorl
jae
and
iret
pop
mov
lea
popa
lea
ja
aam
xchg
pop
testl
lods
mov
sahf
mov
add
pop
ja
test
aad
mov
out
scas
inc
add
add
ja
mov
outsb
jle
lahf
mov
mov
in
in
jae
or
nop
mov
data16
pusha
add
add
add
daa
cs
test
and
push
mov
mov
xor
jmp
add
outsb
inc
jno
das
push
cmpsb
in
or
jmp
stc
imul
cs
repz
ljmp
rclb
pop
mov
add
add
test
loopne
pop
imul
xlat
dec
dec
add
dec
add
sarb
out
test
jbe
add
jge
add
inc
sub
int
add
push
popa
inc
sub
add
push
rcl
aas
push
pop
test
pop
push
add
aas
out
mov
sahf
nop
addl
fdiv
sahf
and
lahf
data16
sub
loope
xor
mov
pushf
xlat
outsb
jmp
mov
imul
push
lea
inc
xor
scas
and
mov
sub
lock
push
xchg
dec
xor
jle
jns
cs
int
insl
out
mov
int
mov
insl
sbb
mov
add
rcl
mov
or
sub
iret
mov
pop
dec
int3
inc
add
or
nop
xchg
xorl
stc
jmp
jecxz
xor
mov
pop
sbb
push
add
sbb
push
movsb
xor
cltd
out
ja
add
xor
jne
outsl
icebp
jp
add
inc
mov
out
adc
push
jno
mov
leave
mov
adc
into
inc
add
fs
ds
add
rcr
movd
cltd
or
mov
cmp
pop
add
fcompl
movsb
dec
mov
cmp
orl
xor
in
jb
lock
add
and
jecxz
add
add
cmp
sbb
lret
xor
inc
add
sub
push
add
inc
add
mov
loop
sarl
jp
xchg
mov
mov
xchg
or
pushf
inc
add
add
mov
dec
mov
clc
scas
pushf
and
xchg
insb
xchg
cmp
mov
outsb
icebp
cli
dec
xchg
sub
test
call
mov
and
xchg
sbb
add
paddusw
movsb
js
popa
ljmp
test
mov
jbe
in
pop
mov
pop
cmp
pop
ja
fcmove
adc
dec
and
addb
inc
add
add
xor
adc
xchg
mov
add
ja
test
inc
or
mov
add
int3
xchg
xor
inc
add
add
and
fmull
popa
cmp
imul
test
fs
leave
data16
test
mov
cld
pop
incb
mov
fildll
mov
inc
lds
fcompl
jne
addr16
jg
sbb
pop
mov
sbb
ds
ss
push
das
or
dec
enter
jns
je
push
add
pop
mov
icebp
movsb
mov
dec
jae
xor
sbb
sahf
dec
add
xchg
jne
imul
daa
addb
ret
push
out
pop
aaa
or
fimuls
adc
je
repz
mov
icebp
mov
mov
xchg
xchg
inc
add
int3
dec
mov
add
jg
mov
sub
ror
js
or
imul
movl
xor
andl
mov
xchg
and
jns
jl
mov
add
fistps
jb
sbb
bound
lock
incb
out
out
dec
mov
and
add
stos
sub
add
ret
jmp
add
out
enter
lcall
lret
adc
in
jle
divl
xchg
cmp
aad
inc
int
je
int
add
movsb
cli
icebp
jl
xor
mov
adc
imul
dec
scas
pop
mov
push
sbb
add
inc
add
je
pop
and
jecxz
jo
dec
mov
scas
cmc
mov
iret
decl
cmp
add
mov
idivl
xor
inc
insb
mov
mov
fdivrs
inc
cmp
sbb
cmp
ljmp
cmpsl
mov
pop
mov
push
pavgb
data16
aaa
mov
xchg
mov
cmp
nop
jbe
pop
push
addb
xchg
mov
mov
in
xchg
jbe
dec
popf
push
flds
pop
and
int
pop
mov
stc
das
in
mov
or
xchg
mov
ficoml
add
add
add
popf
sbbl
ja
cwtl
mov
icebp
lahf
fs
les
rcrl
mov
jno
jnp
push
add
add
sahf
or
jmp
lods
rolb
test
imul
insb
add
insl
insb
add
movsl
cmp
push
lods
xchg
sbb
loopne
scas
jle
cmpsb
adc
xor
xor
add
xchg
push
inc
pop
push
and
ret
xchg
dec
add
mov
int3
mov
mov
mov
sahf
xchg
mov
mov
sahf
jl
ffreep
push
mov
mov
add
add
scas
dec
push
push
addb
sbb
aad
test
stc
mov
stc
jle
lret
in
cli
mov
add
mov
xor
xchg
addb
stos
insb
and
addr16
cli
std
sti
sbb
pop
push
mov
lcall
xchg
loopne
into
inc
and
pop
aaa
cmp
add
add
push
and
dec
call
addb
mov
inc
add
mov
mov
mov
add
adc
imul
rolb
ret
and
mov
xorl
xchg
imul
lock
addb
call
jecxz
pushf
xchg
xor
sti
push
mov
sarl
loopne
das
jae
aas
jb
adc
das
nop
js
push
dec
popf
push
outsb
loope
dec
lea
jge
std
xor
jle
sbb
pmaxsw
push
sahf
or
inc
add
mov
sub
add
pop
lahf
lock
add
into
jne
inc
add
mov
sub
adc
mov
mov
out
add
daa
jecxz
dec
mov
xchg
mov
imul
dec
addr16
cmp
pop
jb
dec
pushf
sub
je
js
sub
pop
sbb
out
js
push
xor
add
add
imul
ljmp
push
enter
add
fiaddl
call
jo
add
pop
xor
adc
xchg
sahf
arpl
lahf
cli
mov
fs
add
mov
mov
jecxz
adc
mov
dec
cwtl
add
mov
pop
dec
xchg
ja
test
and
shlb
sub
mov
pop
mov
adc
add
cld
arpl
imul
push
dec
rorb
jne
test
int3
hlt
xchg
mov
int
add
lret
cmp
and
test
push
lods
test
ret
cmp
mov
scas
in
cltd
xor
push
repz
add
fwait
push
das
push
jae
test
add
and
pop
xchg
jg
ja
jae
mov
add
and
clc
int
sarb
sarb
ds
add
gs
lds
fisubl
js
fprem1
mov
negl
push
add
and
sbb
fbstp
sbb
add
mov
add
push
push
fs
call
adc
int3
push
fwait
cli
cwtl
jmp
add
or
add
jbe
ja
fstl
xor
adc
cmp
cmpsb
arpl
mov
xor
stos
pop
rolb
mov
stos
rorl
add
divl
xor
cwtl
jp
pop
mov
data16
rclb
dec
mov
movsb
iret
cmp
int3
mov
lret
jg
ja
cmp
pop
xor
jge
sbb
xchg
cli
into
sbb
pop
fsub
fcompl
testb
mov
fstpt
subl
inc
add
and
add
sub
add
xor
sub
jb
lret
inc
jg
adc
cmpsl
push
lds
pop
xor
sbb
mov
popa
shr
jmp
cli
xor
aam
addr16
mov
dec
leave
xor
or
loope
and
pushf
int3
cwtl
cli
mov
repnz
add
stos
sbb
jl
cmp
add
jb
shlb
stos
sti
xchg
jns
xchg
xchg
xchg
enter
add
lret
dec
sub
lea
add
push
add
cs
outsb
stos
aam
and
inc
add
mov
sbb
fs
test
stc
enter
xchg
les
stc
jae
aaa
add
loop
rcrb
and
ja
cmp
inc
adc
xchg
addl
idiv
mov
addb
mov
ja
cli
mull
into
pop
loopne
stos
insl
jge
stos
dec
push
xchg
xchg
daa
inc
das
scas
sarb
ret
dec
call
jecxz
ret
out
xor
mov
pop
out
and
movsb
clc
cld
sahf
mov
rcl
cs
add
or
int3
mov
imul
inc
add
add
or
ficoms
iret
sbb
mov
add
sti
data16
daa
fcmove
inc
add
xor
dec
xchg
mov
fwait
mov
push
fildll
cmp
ret
mov
out
xchg
xor
push
cmp
push
sbb
cmp
adc
cmp
filds
dec
mulb
mov
das
bnd
mov
dec
jle
push
push
out
mov
add
clc
movsb
icebp
nop
pop
int
add
and
mov
mov
bnd
in
pop
sbb
inc
add
mov
xor
jns
stos
cmp
sub
cmp
or
mov
movl
ret
in
push
dec
icebp
sub
jecxz
mov
fcoml
cmpsb
inc
add
mov
add
jnp
cwtl
test
and
outsl
bound
and
faddl
mov
or
cmp
jmp
lcall
push
cld
call
xor
popf
sub
adc
in
adc
add
inc
adc
dec
out
loop
or
cmp
jne
pop
test
mov
mov
mov
fistpll
inc
lods
and
outsb
pop
dec
jns
fldt
add
mov
imulb
mov
add
mov
leave
cmp
add
in
add
push
add
jno
inc
xor
jp
je
sub
mov
pushf
push
std
popa
ret
cmp
arpl
add
in
shrl
mov
cwtl
ret
rorb
sbb
pop
cs
icebp
xlat
mov
sbb
mov
cld
ret
lock
and
add
push
addb
movsb
pop
pop
ret
leave
iret
mov
add
xor
sbb
add
into
mov
add
push
aam
jae
sarb
jnp
mov
test
jae
nop
sbb
fldenv
adc
fs
addb
arpl
mov
stos
daa
aaa
inc
add
push
xchg
push
xor
add
or
add
jno
jg
xor
pop
enter
mov
movsl
push
jmp
cld
cld
sbb
cmp
and
jne
mov
xor
lods
jae
dec
or
dec
and
es
inc
add
mov
cld
mov
faddl
push
insb
mov
jmp
push
aaa
xor
jp
lcall
iret
mov
fwait
and
cmp
add
xchg
adc
int
insl
push
jnp
push
add
pusha
add
aad
mov
inc
add
push
stc
nop
cs
shll
jb
pop
das
dec
call
test
mov
call
mov
mov
inc
add
add
jo
xor
push
popf
fdivr
xchg
cmp
add
leave
fstpt
pop
lock
mov
add
sbb
arpl
or
add
fmuls
jb
test
int
pop
pop
add
jo
cmpsl
push
cmc
mov
sub
pop
jno
add
fidivrs
cld
into
mov
mov
push
xchg
xchg
add
xchg
ficoml
xor
and
mov
lock
aas
xchg
imul
or
loop,pt
icebp
mov
add
mov
xchg
pop
push
xlat
loopne
repz
fstps
fsubl
addl
and
ret
xor
je
push
jno
add
or
mov
mov
inc
movsb
sahf
jmp
div
rolb
pushf
cmp
mov
mov
xchg
dec
stc
repnz
popf
lock
cmp
aas
jmp
add
idivb
cltd
or
mov
add
cmp
pop
addr16
sti
fwait
pop
loop
cmp
lcall
add
ret
add
in
repnz
les
cmpsb
ss
movsb
mov
fimuls
movsl
fstps
pop
adc
sub
cltd
scas
roll
mov
lock
sub
gs
idivl
pusha
add
pop
jecxz
fcompl
inc
add
out
pushf
sub
pop
add
dec
xchg
mov
inc
add
dec
push
in
fsub
inc
jae
jecxz
add
xchg
mov
out
ffreep
cli
ss
scas
stos
fnstcw
rcl
cli
cmp
inc
add
and
leave
or
sub
mov
addb
aad
add
lods
mov
lcall
fs
add
pop
into
out
and
mov
add
sub
add
in
dec
data16
fstpt
adc
daa
xor
add
add
adc
cmp
stos
out
mov
sub
inc
add
aas
adc
adc
jge
insb
data16
lcall
inc
aam
xchg
sbb
outsb
xchg
movsl
mov
jb
iret
cmpl
iret
xchg
xchg
bound
sar
push
fisubl
rcr
daa
dec
cmp
fs
push
pop
addb
xchg
pushf
das
neg
jmp
imul
add
sub
xchg
lods
imul
mov
push
xlat
xchg
scas
sub
lret
aas
pushf
movsb
and
repnz
mov
and
and
and
add
sahf
xchg
scas
mov
cmp
sub
ss
xchg
jp
sub
ss
push
mov
jns
movsl
mov
lds
lahf
or
push
add
out
cwtl
loop
mov
loop
mov
stos
iret
test
sub
sti
fisubs
add
jnp
ds
out
jmp
test
pop
adc
mov
scas
lret
fbstp
insb
hlt
mov
dec
or
cld
mov
jl
lret
lcall
testb
add
dec
insl
mov
mov
out
leave
loope
xchg
push
vorps
add
in
mov
sbb
cmp
and
push
xchg
int3
cmpsl
rcll
mov
sub
push
mov
adc
and
jb
cmc
movb
stc
lds
or
jl
jmp
inc
add
cli
in
jp
add
push
test
int3
sti
into
xchg
iret
and
jle
orl
mov
pop
mov
idiv
mov
inc
frndint
out
daa
pop
je
or
push
and
addb
push
jp
int3
xchg
cmpsl
mov
hlt
push
leave
mov
sub
xchg
imul
mov
lds
adc
and
call
pop
jae
mov
and
in
sahf
in
fimuls
fists
push
or
add
xor
mov
pushl
or
cmc
add
insl
push
dec
xchg
jbe
lahf
in
mov
and
xchg
rcrb
cltd
xor
nop
inc
add
adc
ret
sbb
pop
repz
sbb
test
bound
icebp
cmp
push
gs
or
rorl
add
add
js
addl
add
nop
cmc
ljmp
ret
jg
popa
test
ljmp
fisubs
jg
inc
int
mov
cltd
sbb
add
sbb
sub
test
add
cmp
add
out
push
xor
sbb
out
cmp
xor
das
fidivrl
jp
ljmp
test
mov
add
call
jmp
jmp
js
and
repnz
add
add
mov
fwait
repnz
ss
data16
int
scas
addb
int
add
mov
loope
arpl
out
push
mov
mov
mov
ret
negl
iret
push
sub
or
mov
jnp
mov
fdivs
mov
mov
jmp
fmul
imul
rolb
iret
dec
xchg
pusha
add
and
pop
xor
xor
lret
dec
test
bound
jne
jno
lret
inc
add
sub
or
dec
aas
sbb
add
xor
jb
negl
jmp
add
and
fisttpll
hlt
mov
ljmp
mov
sub
or
ffreep
add
ja
fcmovu
das
es
sub
pop
sti
imul
repnz
hlt
leave
jecxz
xchg
lods
popa
shll
insl
outsl
xlat
lret
js
and
scas
or
mov
imul
xchg
lret
es
sub
fs
mov
pop
jo
cmpsb
jge
ja
xchg
imul
add
mov
add
mov
push
add
inc
add
xchg
adc
jg
pop
adc
jo
movb
test
xchg
pop
jns
lea
addb
xor
xor
jmp
sbbl
cmp
cli
test
sti
jg
add
mov
shl
fstpt
dec
and
and
ret
pop
push
dec
adc
xchg
mov
cmc
pop
pop
addl
sub
rep
lcall
mov
mov
add
movb
sahf
jp
iret
jb
fmull
movsb
enter
push
lret
in
mov
sub
add
add
arpl
imul
shlb
icebp
shl
xor
cs
mov
or
fnsave
mov
add
aas
movsb
mov
les
adc
mov
popf
mov
inc
mov
insl
addr16
sbb
add
fistpll
add
repz
xor
dec
movb
jmp
arpl
pusha
add
mov
aaa
add
insb
adc
xchg
fnstsw
jmp
push
scas
addw
mov
fistpll
and
stos
mov
fbstp
jmp
daa
in
push
add
xor
mov
cld
xchg
arpl
and
addr16
int
mov
pop
into
insl
mov
mov
fsts
sub
mov
addr16
xor
xchg
fwait
push
jecxz
push
add
mov
add
dec
inc
add
add
ja
mov
shll
add
bound
jnp
sub
rcrb
jnp
dec
adc
cmp
insb
enter
pop
or
inc
repz
addb
add
das
inc
int3
pop
xor
scas
lcall
and
mov
add
dec
iret
stos
and
add
aas
lock
add
dec
movb
test
fsubs
add
lret
bound
mov
movsl
xchg
movl
in
cmp
dec
jbe
or
rol
add
jns
ljmp
and
fidivrl
aad
push
mov
leave
dec
jb
sub
fwait
push
testl
jp
add
imul
dec
call
adc
jmp
test
pop
call
repnz
xor
or
stc
mov
jne
icebp
iret
xlat
out
sbb
stos
cmp
adc
mov
shrb
sub
cmp
jae
inc
insb
cltd
inc
add
lods
in
add
sti
push
add
fldl
andl
jo
repnz
pop
loop
push
popa
pop
out
mov
jg
adc
pop
sub
xchg
cmp
inc
pop
mov
lds
movb
jb
add
pop
pop
les
fistl
popf
movb
and
add
mov
fs
imul
outsl
sahf
add
fsubrl
inc
add
add
sbb
negl
pop
popf
pop
bound
inc
add
add
xchg
sbb
mov
adc
sbb
movsb
adc
inc
add
cmpsl
jmp
push
cmpsl
test
int3
cmpsb
jae
mov
lods
or
add
jmp
cs
inc
jp
push
loop
push
mov
rcrl
jb
fucomi
mov
les
int
fisttpll
add
mov
xor
std
jae
data16
rcrl
mov
adc
aad
mov
sub
pop
sub
inc
add
cmp
xor
pop
les
dec
leave
mov
jl
movb
xchg
insl
je
sub
out
call
push
ret
test
sbb
popf
jp
cmp
sub
loope
in
imul
lods
in
es
imul
xchg
cmp
push
out
sbb
adc
inc
add
inc
sahf
mov
stos
mov
sub
cmp
jns
mov
add
add
lea
xor
in
movsb
push
fdivp
loopne
add
ja
mov
dec
mov
xchg
imul
mov
or
mov
add
lds
add
aam
push
idivb
lret
mov
fistl
imul
add
jnp
insb
lods
aam
add
lods
mov
add
mov
push
and
ret
test
push
push
popa
sbb
xchg
rep
or
scas
ss
xchg
push
popf
int3
xor
out
jo
fstpt
fsubrl
xor
xor
out
dec
adc
jg
pop
mov
mov
or
add
ret
fs
xchg
xor
enter
add
pushf
lods
or
add
adc
mov
xchg
jmp
pop
xor
add
sbb
cmp
stc
movsl
mov
dec
or
into
movb
fmuls
pop
arpl
aad
sbb
mov
addr16
push
sbb
jne
shll
push
adc
sbb
dec
aaa
dec
adc
sub
jns
add
inc
add
add
lods
add
push
stos
pop
lods
add
sbb
mov
pop
add
cmp
xchg
notb
xchg
push
test
data16
bound
sub
sub
cli
dec
neg
mov
fimuls
aas
sub
add
add
sahf
mov
ljmp
rolb
cmp
mov
add
push
pop
popa
mov
inc
add
add
push
cmp
mov
and
xor
jnp
adc
sbb
stos
jns
lods
adc
cli
daa
push
xchg
pop
pop
sahf
sbb
xchg
int
outsl
shr
jg
nop
aad
mov
into
pop
out
mov
jg
mov
sbb
testl
sbb
xchg
test
imulb
in
out
mov
cmp
mov
xchg
jp
dec
call
rolb
shll
push
daa
and
xor
lahf
out
popa
ret
mov
pushf
mov
add
add
push
jle
inc
pop
aas
mov
mov
jnp
hlt
hlt
imul
cmc
adc
jle
push
loop
mov
jmp
adc
dec
or
out
es
add
nop
sbb
fdiv
jp
add
cmp
fdivl
in
nop
lcall
int
lods
mov
add
cli
mov
jle
adc
add
insb
les
xchg
jnp
mov
addb
xor
xchg
shll
push
inc
add
add
xor
int
cmp
jae
pop
jns
xor
testb
or
sahf
mov
bound
and
pop
adc
add
int3
jns
insl
mov
sub
pushf
mov
imul
push
shrl
mov
cs
dec
jmp
sbb
out
add
push
out
outsb
fwait
sub
inc
xor
cs
push
xchg
or
add
pop
outsb
test
jle
fwait
push
fcompl
add
xchg
cld
lahf
sub
sub
mov
repnz
xor
or
rclb
cmp
aas
and
jns
add
pop
fdivrl
sbb
pop
xchg
enter
je
xor
rolb
or
push
jno
xchg
outsl
cmp
into
sbb
add
add
int3
push
lods
out
mov
adc
add
out
jp
es
or
ljmp
jnp
xor
mov
inc
cmp
mov
mov
adc
mov
repz
pop
ss
xchg
clc
pop
aas
or
cmp
adc
addr16
addb
dec
sub
fdivp
mov
pop
popa
xor
mov
jns
push
and
scas
stc
bound
mov
add
and
fdivl
xlat
fldl
mov
xchg
std
push
xor
sahf
push
mov
inc
add
jle
dec
popf
dec
mov
bound
push
iret
lock
jge
sti
sub
cmp
push
rclb
aas
dec
cmc
lds
push
jae
sti
movsb
push
test
jo
jl
pop
push
sub
jmp
fidivs
loope
add
add
add
sub
adc
add
and
rol
rolb
outsl
xchg
push
int3
push
ret
xchg
adc
or
adc
ds
xor
or
popf
in
lcall
push
dec
in
jns
pop
add
call
jno
mov
xchg
cmpsb
push
sub
sbb
cs
lods
xor
mov
xchg
cs
pushf
xlat
mov
xor
loope
jbe
xor
jmp
add
ja
in
sub
bound
or
mov
pushf
sarl
gs
mov
and
xchg
fcomps
add
pop
cmp
or
andl
add
sbb
fistpl
mov
adc
popf
dec
out
stos
test
popa
hlt
loope
push
add
in
repnz
sbb
and
jmp
xchg
dec
sti
sbb
add
fnstcw
add
mov
popa
jnp
sti
push
mov
dec
aad
sub
add
pop
loopne
add
sbb
pop
push
aam
pop
mov
popa
addl
add
lods
pop
lea
sti
loopne
cli
lods
mov
adc
push
ja
mov
pop
out
pop
pop
add
mov
pop
fnstcw
in
pop
sub
shlb
mov
cmc
adc
in
movswl
mov
aaa
aad
or
faddl
testb
jge,pt
popa
lcall
push
fiadds
test
dec
pop
sar
push
les
pusha
add
fisubrs
movb
cwtl
repnz
lods
aam
nop
sbb
mov
fsubr
push
cmp
aas
and
test
pop
sbb
inc
das
fisubrs
inc
or
adc
loop
xor
push
mov
pop
inc
xchg
sbb
or
pop
xchg
add
push
mov
jns
fs
shlb
jecxz
sbb
mov
mov
cwtl
lcall
aaa
stc
push
xchg
xchg
scas
push
ret
push
xor
mov
sti
adc
sbb
fstpl
push
add
out
int
pop
addb
dec
jp
inc
lods
xor
ljmp
out
addb
imul
cmp
mov
mov
sub
sub
les
mov
pop
xor
dec
xchg
sbb
add
dec
xchg
and
punpcklbw
dec
jg
add
push
movsb
enter
jno
mov
xlat
ret
lcall
fidivl
rorl
insl
cmc
push
add
lods
divb
ljmp
stos
pop
inc
push
fld
or
pop
jmp
test
arpl
scas
test
scas
inc
add
xlat
imul
test
xchg
call
lods
mov
iret
sbb
sub
imul
arpl
aad
adc
add
ret
and
inc
add
stc
jge
inc
cmp
or
jns
push
clc
jbe
aas
flds
aaa
and
xchg
mov
mov
icebp
rcll
push
mov
push
lret
push
rolb
add
incl
jbe
mov
sbb
gs
jg
adc
cli
sahf
fistpll
lods
push
sbb
xchg
imul
jno
rcr
mov
clc
in
pop
movb
call
add
repnz
add
sar
push
clc
enter
or
xor
addb
dec
movb
in
mov
mov
jne
les
sbb
xchg
adc
cmc
adc
add
mulb
cmp
popa
cwtl
stos
mov
cltd
mov
cmc
cmp
dec
pop
ja
mov
mov
insl
in
aad
in
lock
outsl
fstpl
mov
push
out
pop
lret
sti
jnp
sub
lahf
jbe
add
dec
insl
or
xlat
movsb
xchg
test
mov
mov
xchg
jae
lret
mov
lcall
out
loop
lcall
push
pop
scas
out
das
jge
out
sbb
jns
fimuls
bound
addb
cmp
insb
xchg
jl
fsubl
js
movsb
xor
sub
mov
xor
mov
adc
jl
dec
insl
adc
scas
in
mov
scas
test
add
adc
mov
movb
pusha
add
cmp
add
ret
or
stos
movsb
xchg
jl
xor
push
add
jne
gs
add
sub
adc
mov
and
loop
cmpsl
dec
pop
mov
pop
cli
daa
push
jle
xchg
insl
dec
outsb
aad
fisubrl
xchg
xor
add
insl
add
xor
popf
dec
lods
lret
cmp
lahf
sbb
pop
mov
and
fisttps
push
xor
into
pop
cmpsl
testb
cmp
testb
movb
adc
lods
lods
fisubl
lret
test
iret
xchg
mov
add
imul
add
int
and
jmp
mov
into
out
add
push
stc
adc
pop
imul
dec
sub
xor
sbb
sbb
jb
popfw
lock
mov
jae
jns
aas
imul
jmp
test
inc
inc
inc
add
out
cmp
adc
addb
adc
sub
les
push
aaa
xchg
cld
imul
mov
jne
mov
adc
mov
mov
iret
mov
xor
xchg
jne
arpl
inc
add
pop
insl
jne
addl
in
bound
out
add
scas
andl
fisubrl
stc
xor
call
arpl
or
adcw
push
xadd
mov
jns
push
mov
dec
xchg
popa
lret
cli
test
xor
movsb
mov
ret
add
idivl
sbb
add
add
pop
mov
add
cmp
lds
pop
arpl
into
pop
or
jle
sbb
mov
sbb
je
mov
push
mov
sbb
cmp
enter
or
jbe
into
xlat
or
inc
jno
repz
add
add
sti
mov
dec
cmpsl
mov
mov
imul
adc
mov
nop
or
and
mov
add
jmp
lahf
push
in
add
fwait
push
in
test
pop
xchg
setno
dec
push
xor
negl
lock
rcll
clc
pusha
add
hlt
in
nop
ss
out
addr16
sbb
mov
aad
rolb
add
cmp
aad
fwait
push
insb
loope
fsubr
sbb
dec
bound
add
jb
cmc
pop
jl
add
mov
mov
loop
les
clc
xor
fdiv
jecxz
cmc
and
cmp
pop
push
or
mov
ljmp
mov
or
pop
shl
mov
and
icebp
inc
add
add
add
jp
into
test
fidivl
jbe
cmc
or
sbb
jmp
repnz
sbb
xchg
test
repnz
cmc
ljmp
into
jp
inc
lret
jmp
add
add
xchg
fs
rorb
nop
push
jecxz
mov
das
add
pop
lea
iret
and
ficoms
mov
add
mov
add
ja
jl
test
dec
and
jmp
pop
dec
pushf
cmp
xchg
push
fstl
imul
mov
lods
mov
jnp
dec
cmc
push
cmpsb
sbb
sub
je
jbe
mov
mov
clc
push
xchg
adc
push
jnp
xchg
or
mov
add
pop
mov
dec
cmp
pop
add
hlt
mov
add
addl
pop
lret
jb
mov
jo
jp
inc
add
inc
add
cmc
cltd
fsubrs
mov
int
imul
das
nop
dec
jp
jmp
stos
cmp
std
adc
push
lcall
mov
int
xchg
lcall
fnsave
add
pop
jmp
jne
or
pushl
xchg
js
add
pop
xlat
testb
dec
push
ds
inc
push
scas
lret
mov
push
pop
cld
mov
or
inc
lods
inc
inc
add
shr
xchg
stc
cmp
fadds
out
xchg
fwait
std
dec
aam
sub
jg
cmp
mov
add
inc
in
cwtl
popf
jmp
pop
addr16
aad
imul
push
scas
mov
jae
jnp
jle
adc
movsl
or
add
jns
popl
add
adc
loope
jns
sub
fnstenv
pop
cmp
adc
add
add
fistpl
and
hlt
pop
cmp
out
sti
imul
cs
sti
push
fisttpll
xor
sub
lea
insb
cli
mov
iret
mov
inc
add
push
mov
jmp
scas
in
imul
bound
dec
popa
mov
add
pop
lds
xchg
mov
pop
cmpsb
inc
out
nop
cmp
mov
mov
pop
jle
out
loope
push
mov
insl
fbstp
les
imul
lods
pop
scas
in
sbb
add
fsubrl
push
push
inc
xor
cmc
xchg
movsb
add
mov
insb
rolb
sbb
or
pop
imul
fscale
popf
je
addb
fnstenv
test
aad
dec
lret
hlt
movsb
fldenv
push
sti
and
test
mov
rolb
jecxz
pop
lods
and
and
adc
sbb
cmpsb
adc
dec
inc
add
into
cli
push
and
adc
jae
mov
mov
add
push
mov
xchg
cmc
mov
mov
mov
jl
add
add
lret
mov
notb
rcr
add
les
movl
add
je
test
fisttps
dec
adc
push
js
jecxz
movb
add
movsb
mov
pusha
add
pop
adc
jl
scas
mov
mov
leave
cltd
divb
inc
outsb
push
sbb
mov
iret
testb
aaa
xchg
jmp
push
adc
mov
or
xor
inc
clc
or
add
fcmovbe
mov
push
shl
lock
jnp
inc
add
sbb
sbb
xchg
pushf
int3
jmp
mov
xor
inc
add
push
dec
xor
xor
cs
out
es
dec
jle
push
add
arpl
or
xchg
add
in
inc
adc
add
lock
pusha
add
add
jecxz
pop
push
xchg
iret
lods
sub
test
push
cmpl
xor
or
cmp
decl
mov
aas
sysret
mov
mov
lods
insb
loope
pusha
add
in
cmp
pop
cmpsb
push
test
mov
sub
or
scas
vmwrite
xchg
sub
push
xor
jecxz
pop
ds
xor
out
ds
std
xchg
arpl
inc
add
notb
adc
xchg
js
mov
push
mov
add
mov
iret
or
nopl
xchg
fs
add
jle
lahf
mov
pop
push
fldt
inc
add
jle
mov
add
mov
xlat
push
dec
sub
pop
dec
test
das
test
mov
addb
test
mov
pop
or
cltd
loope
cli
lods
int3
bound
jnp
pop
push
pop
ss
and
test
scas
cmp
sub
mov
inc
cmp
pop
xchg
dec
jno
addb
add
pop
fistpll
push
movsb
push
add
sbb
and
xor
cmp
leave
lcall
or
cmp
sbb
inc
mov
dec
ret
fdiv
jle
outsl
and
jno
inc
test
stos
aad
add
divb
or
add
jmp
add
xor
push
jno
and
clc
aas
inc
push
cmp
xchg
jbe
add
std
ljmp
add
sbb
int3
cltd
or
sti
mov
cmc
jmp
mov
cmpl
sub
rolb
fbld
add
je
nop
mov
add
add
adc
outsl
cmp
faddp
sar
and
cmpsl
xchg
inc
fdivrl
jnp
daa
cmp
jmp
push
add
jb
dec
inc
clc
jge
inc
add
out
aam
sti
add
cmp
cmp
cwtl
push
mov
mov
test
pushf
lods
jmp
orl
pop
mov
mov
xchg
in
mov
testl
loope
jecxz
inc
add
mov
push
mov
xbegin
add
xchg
cvtps2pd
in
pop
cwtl
mov
inc
jp
repz
add
mov
pop
imul
add
mov
dec
fstpt
jns
pop
xchg
add
xor
cltd
jb
rorl
rcrl
in
jecxz
mov
lret
movb
scas
in
sbb
cmp
fistl
mov
divl
test
add
data16
loopne
pop
jne
cltd
and
cmp
jbe
push
ret
inc
mov
sub
mov
ja
mov
in
push
add
arpl
cmp
outsl
in
xor
insl
int3
scas
test
ret
shll
daa
addb
or
addb
inc
sbb
jmp
jbe
dec
ret
cmpsl
push
mov
push
add
jl
ret
aad
cmp
inc
add
into
test
stos
int
jmp
js
insb
jge
xchg
mov
shrb
add
out
jno
jb
outsb
jecxz
cmpsb
loopne
int3
das
shrb
pop
ja
inc
inc
add
lret
sub
add
iret
pop
push
bound
loop
pop
lahf
sbb
int3
xor
cwtl
test
dec
or
xchg
out
or
aad
add
pop
dec
cmp
int
mov
add
movsb
cwtl
into
mov
repnz
xor
shrl
nop
into
imul
mov
jle
or
jmp
push
pop
outsb
fidivl
sub
imul
fnstsw
pop
outsb
into
leave
gs
pop
cmp
ljmp
addb
mov
movl
pop
subl
jo
ja
xor
popa
mov
or
jne
dec
into
push
jg
ror
add
popf
lods
add
dec
sbb
push
mov
ss
and
call
test
mov
cli
jecxz
jmp
inc
sbb
mov
mov
loope
out
add
mov
inc
add
inc
loop
jmp
xchg
nop
dec
loope
idivb
mov
push
fmul
mov
add
loope
pop
xchg
dec
jmp
or
add
outsl
aas
dec
out
or
xor
stos
push
scas
or
mov
inc
add
inc
mov
ja
dec
negb
add
sbb
inc
add
jl
mov
xlat
xor
addb
cs
jae
pop
out
cmp
mov
rolb
ret
jg
add
iret
adc
movsl
test
jns
and
stos
mov
std
lods
dec
lea
and
ljmp
sub
fnstsw
add
add
into
and
stos
in
out
in
jecxz
jb
dec
cmpsb
mov
aad
fwait
ret
dec
inc
add
insb
les
notb
jmp
add
loop
mov
push
mov
outsl
ror
ss
and
aam
cmpsl
jecxz
sbb
jbe
movb
push
mov
add
inc
mov
mov
jmp
xchg
mov
or
mov
add
sbb
cmp
and
push
fsubrl
pop
inc
add
lcall
sarl
fnsave
hlt
fists
jnp
push
mov
lock
push
je
bound
sbb
repz
pop
jno
addr16
repnz
sahf
fistpl
dec
mov
rcrl
add
outsb
imull
lcall
insl
mov
pop
sarl
xor
imul
ds
test
sub
ficompl
fwait
mov
add
js
loope
mov
jg
sbb
lods
dec
xor
pop
call
jae
iret
and
addb
loopne
jmp
add
xchg
fistpll
ljmp
add
imul
test
sbb
cmp
or
add
divl
lcall
xlat
sbb
addb
inc
add
inc
add
data16
fwait
jne
jae
fnsave
add
add
mov
mov
add
je
inc
pop
es
aas
cmp
mov
stc
mov
sbb
rorl
xor
mov
pop
or
sbbl
xor
loopne
push
push
cmp
push
cmp
jne
test
sub
sub
mov
lock
mov
xchg
pop
inc
add
sbb
inc
add
jmp
fs
test
and
adc
popa
in
adc
adc
loope
mov
xchg
pop
das
sub
jmp
pop
js
cmp
jge
jnp
or
jb
add
push
std
repnz
addb
adc
imul
mov
add
fs
sbb
jmp
xchg
jp
ret
nop
in
sub
imul
mov
dec
std
cmp
xor
dec
sub
pop
pop
arpl
add
je
int3
repnz
add
push
pop
nop
aas
or
aas
shld
loop
push
inc
add
mov
jecxz
xor
cmp
das
daa
je
cmp
filds
stos
sahf
ds
loop
mov
mov
add
inc
add
fwait
inc
add
dec
mov
adc
rorl
js
push
aad
push
in
xchg
popf
int3
sbb
xchg
dec
sub
jnp
add
add
xor
rolb
inc
add
pop
ret
jmp
sub
fmull
sbb
push
adc
stos
ret
pusha
add
push
and
nop
jle
dec
arpl
adc
int3
movsl
adc
jg
add
jae
cmpsl
outsl
ljmp
imul
inc
add
sub
popf
pushf
icebp
mov
in
cmp
sbb
addb
push
push
xchg
fisttpl
bndstx
inc
add
push
aaa
bound
mov
rorl
mov
jl
inc
add
sbb
xor
pop
mov
movsl
sbb
out
fidivs
add
push
cmp
aad
lcall
add
and
dec
mov
lahf
call
fistpll
adc
mov
adc
add
hlt
cli
adc
rol
leave
inc
inc
add
mov
pop
cmpsb
lods
stos
dec
stos
adc
inc
add
int
jp
pop
pop
mov
or
in
std
sbb
add
xor
add
or
sub
add
mul
les
loope
push
lcall
call
popf
outsb
adc
cli
and
xor
imull
jo
jbe
insl
lock
aaa
arpl
mov
or
push
or
jno
pop
adc
lea
imul
addb
cltd
dec
mov
push
jne
add
add
daa
aad
shl
cs
dec
and
add
nop
lock
adc
mov
or
in
out
out
sub
mov
shr
cmpsl
mov
pop
loop
add
adc
testb
xor
test
mov
xchg
xchg
xor
test
dec
repnz
ret
cmpsl
sbb
cmp
testl
imul
push
add
test
repz
outsb
pop
mov
cld
push
iret
out
test
adc
ljmp
mov
imul
int
rcll
add
aaa
pushf
jg
mov
mov
add
bound
pop
es
add
addb
shll
adcl
out
js
add
aad
adc
push
dec
add
and
test
into
xor
fs
xchg
or
xor
repnz
push
add
add
add
repnz
push
lods
push
pop
push
or
stos
mov
xchg
xchg
fisubrs
push
loop
xchg
xchg
mov
add
lods
nop
sub
sbb
inc
test
mov
out
movb
pushf
mov
rclb
imul
cmp
cmpsb
push
cmp
mov
inc
add
rolb
shl
or
divb
cs
pop
dec
popa
dec
mov
inc
out
add
adc
cmpsb
rcrl
outsl
xchg
mov
mov
aad
lcall
lock
or
pusha
add
inc
add
and
rol
add
add
xor
enter
cli
push
xor
add
sub
fstpl
rolb
in
gs
inc
dec
enter
push
sti
cs
sub
xor
mov
hlt
inc
add
dec
jp
or
sub
lret
loopne
pop
bound
dec
sbb
ja
mov
pop
and
aaa
inc
jle
push
or
jle
sub
movsb
daa
mov
or
mov
inc
add
mov
pop
int3
sub
into
mov
adc
dec
stos
mov
in
inc
add
push
cmp
icebp
sub
test
inc
push
rolb
out
pop
shr
inc
add
dec
or
loop
cli
jp
pop
popf
mov
push
cmp
add
scas
add
popa
mov
xor
jne
add
addb
xchg
add
or
out
fwait
lds
adc
lret
sub
push
xchg
pop
inc
add
aaa
stos
pop
xor
xchg
mov
sub
add
sub
mov
lahf
mov
sbb
stos
mov
mov
cld
movsb
jle
adc
les
mov
repz
dec
mov
pop
mov
movsl
lock
cmc
xor
pop
lret
jle
xlat
rorb
lret
or
sbb
and
pop
movsl
loope
add
add
jge
add
adc
sbb
cmp
xor
add
and
add
xchg
std
adc
cmpsl
arpl
push
ror
and
out
les
pop
adc
and
shll
sbb
movb
imul
xchg
dec
addl
lds
div
repz
fcmovnb
add
xchg
test
and
ljmp
repz
mov
out
fsubl
sub
ret
jne
pop
xchg
cmpsb
out
mov
push
cmpsb
lret
push
outsl
dec
fadds
mov
mov
pcmpeqb
sbb
xchg
movsb
lods
xor
ja
jg,pt
in
push
inc
ret
loope,pt
mov
repz
cmp
inc
add
adc
pusha
add
ds
add
out
insl
jbe
pusha
add
insb
and
decb
mov
pop
sahf
sbb
add
xchg
cmpsl
cmpsb
aam
adc
ljmp
loop
fldl
jns
scas
das
cmp
xchg
stos
inc
add
and
rcr
jg
pop
add
cmp
jo
sar
outsl
in
dec
xor
and
jns
add
jle
push
sbb
mov
inc
add
dec
xchg
pop
test
pop
xchg
cmpl
add
inc
add
push
xchg
push
movsb
out
mov
mov
stc
dec
adc
in
movsl
dec
mov
jo
jp
stc
shl
xchg
inc
add
jle
enter
add
mov
push
shlb
outsl
add
loopne
add
bound
fwait
incb
mov
dec
pop
sub
rolb
mov
sahf
repnz
fwait
imul
cmc
clc
pop
pop
insl
inc
add
iret
sub
add
add
push
insl
and
mov
mov
add
les
or
pop
push
pop
or
mov
push
sub
rcrb
ds
lds
punpckhwd
jns
imul
adc
je
mov
ljmp
add
xchg
sbb
dec
popf
xchg
lcall
xor
jb
push
out
mov
cs
jo
roll
sbb
pushf
arpl
pop
cltd
lea
add
std
outsl
int
fnsave
test
and
xchg
cmp
xor
in
ret
push
push
jb
aam
cmc
xchg
insb
push
aaa
xor
inc
and
popa
cmp
scas
pop
scas
in
and
bound
sbb
aas
aam
push
add
push
pop
cmp
int
inc
add
xor
mov
dec
fwait
mov
push
aas
jne
jo
jb
lock
lret
xchg
pop
rcll
xchg
pusha
add
pop
mov
and
cmp
stos
add
imul
bound
sub
dec
xlat
jne
int
insl
in
jge
lahf
jno
add
or
add
out
rolb
ds
add
inc
add
sub
jmp
decb
lds
nop
mov
add
or
fildll
lock
lock
imul
mov
add
dec
cmp
dec
jae
mov
mov
pop
pop
push
shll
mov
jmp
js
jecxz
push
test
mov
mov
mov
push
dec
movb
and
sti
stos
jl
movsb
push
xor
lcall
das
pop
inc
add
fisubl
mov
fdivs
test
ja
xchg
lods
cli
fs
es
test
jl
mov
rol
add
mov
or
std
cmp
pop
lret
inc
add
pop
mulb
add
cmp
cmc
mov
cmp
add
daa
and
inc
add
popw
in
add
outsl
pop
push
sub
in
sbb
adc
xor
xor
xor
nop
push
xchg
xor
lret
jg
xor
adc
cmp
add
adc
dec
fisubs
bound
add
icebp
push
pop
push
test
add
in
addb
push
addb
mov
sub
mov
add
les
push
jno
pop
cmp
movsb
and
sub
out
lock
cmp
mov
mov
shr
test
xchg
fadd
add
out
xor
cwtl
in
sbb
lahf
ret
push
rolb
inc
sbb
mov
add
add
cltd
enter
test
mov
test
push
fnop
frndint
sub
push
sbb
xor
cld
cmp
mov
fcoms
fmull
std
cmpsl
and
ss
xchg
push
mov
mov
mov
pop
incl
xor
into
cmp
push
adc
scas
outsb
fimuls
loopne
test
pop
mov
addb
mov
mov
std
mov
test
loopne
lret
daa
and
cltd
movsb
test
jge
dec
outsb
sbb
pop
into
lret
cmp
fidivrl
call
nop
inc
fiadds
repnz
mov
cmp
mov
add
sbb
scas
test
fiadds
add
les
adc
cmp
sahf
dec
ret
push
lock
sbb
jae
jmp
inc
sub
in
and
inc
add
inc
idiv
cld
bound
push
jo
addb
dec
loop
test
or
xor
jmp
add
push
add
add
mov
arpl
cs
xchg
xor
shrl
xor
lods
mov
sbb
add
sti
and
xor
arpl
add
sub
movsb
test
add
push
test
add
lods
mov
test
and
outsb
cs
loope
push
mov
addb
jae
xchg
aaa
xor
or
sbb
cmp
neg
and
gs
add
and
cli
testb
lcall
nop
cwtl
cmp
jg
mov
andl
shll
call
or
mov
leave
jle
xchg
or
dec
inc
jp
out
add
arpl
cmp
fiadds
sahf
outsl
xchg
into
scas
into
mov
test
pop
push
jnp
addb
inc
add
dec
add
mov
xor
das
xchg
stos
loopne
pcmpgtb
pop
mov
jne
addb
jne
call
xchg
mov
fimuls
in
pop
dec
or
xchg
lahf
ds
cwtl
mov
in
add
xor
add
imul
xchg
mov
sub
sbb
push
ret
dec
imul
mov
outsl
std
scas
loop
lret
cmpsb
mov
jne
inc
push
pop
push
leave
int3
shll
add
lcall
pop
in
mov
mov
fsubrs
out
clc
insb
popf
pop
dec
or
add
mov
aas
out
pop
ss
fisttpl
aam
cwtl
std
pminsw
loopne
test
cmpsb
and
adc
mov
xor
jecxz
icebp
andl
pop
mov
addb
out
in
cwtl
sets
and
jb
hlt
fists
or
arpl
jns
pmovmskb
xchg
and
arpl
adc
jge
xor
mov
dec
out
test
fwait
rcll
mov
or
or
fs
add
cs
mov
xorl
mov
or
xor
add
add
sbb
add
add
test
add
xchg
add
aad
sub
add
mov
fbstp
ds
cmpsl
in
add
das
mov
adcl
mov
inc
add
add
sbb
xchg
and
jbe
ss
test
push
xchg
frstor
pop
jns
pop
out
les
insl
adc
mov
in
bound
push
leave
mov
mov
mov
mov
mov
lods
mov
fmul
or
pop
lea
xchg
cmpsl
inc
add
dec
negl
mov
sarb
jle
outsb
jno
stos
imul
sbb
pinsrw
mov
sub
call
insl
test
adc
das
popl
add
pop
jno
sti
mov
icebp
jae
xchg
ss
cmp
jl
jbe
rcll
add
imul
add
push
lock
outsl
in
fnstsw
add
orl
js
inc
add
leave
inc
ljmp
sub
scas
mov
je
in
pusha
add
loope
fstp
les
sub
lret
sub
lods
jnp
imul
add
add
add
add
int3
bound
mov
repnz
jle
icebp
leave
cld
mov
cli
cmpsb
lea
inc
add
inc
add
mov
fistl
push
movb
popf
add
xor
add
mov
xchg
rolb
push
add
cmp
mov
cmc
icebp
stos
sbb
add
mov
mov
movl
mov
mov
add
xchg
jl
in
adc
fstpt
add
cs
add
ja
outsl
arpl
fs
xor
xchg
xor
iret
cmp
outsl
add
fdiv
aad
imul
mov
adc
add
in
mov
les
jns
push
addb
ficoml
cld
sub
xor
add
adc
push
add
push
jmp
mov
jl
mov
imul
add
rcrb
sbbl
test
jns
xchg
push
loopne
cld
inc
cld
cmp
mov
pop
jno
add
sti
cmp
stos
mov
adcl
xchg
push
fldl
insl
test
add
pop
pop
push
add
mov
int
nop
out
sti
sbb
add
dec
dec
int3
jbe
lret
dec
jae
test
jmp
sbb
addb
flds
jnp
xchg
aad
mov
clc
in
into
dec
ljmp
add
push
mov
jnp
mov
pop
add
loop
cmp
mov
adc
test
jl
inc
ret
cmp
mov
pop
mov
pop
popa
add
dec
out
sbb
out
push
inc
add
adc
sbb
pop
xchg
mov
aad
popa
pop
call
xor
mulb
add
push
inc
add
arpl
loope
mul
xor
sbb
ret
pop
fnsave
xor
and
pop
dec
sbb
rcrb
and
cmp
adc
or
jmp
mov
aam
cmp
sbb
xorl
xor
push
fistpl
daa
incb
mov
xchg
addl
fnstcw
push
xor
fninit
mov
popf
sub
sbb
add
or
pop
sbb
in
or
adc
mov
xor
dec
pop
xchg
mov
sti
repz
mov
cli
and
xor
sarl
add
testl
arpl
push
dec
xor
xchg
adc
adc
test
sub
repnz
test
and
out
sub
jne
jne
ss
sbb
xor
adc
cmp
mov
xchg
push
out
ss
add
enter
mov
cltd
cli
pop
and
push
leave
cltd
sub
mov
nop
out
test
dec
mov
dec
adc
dec
int3
and
movsl
addr16
and
xor
mov
cmpsl
stc
mov
ret
jmp
outsb
sbb
add
inc
out
adc
scas
fwait
pushf
fs
push
jae
push
ret
in
ja
adc
mov
aam
add
cmc
sbb
mov
dec
in
adc
test
loopne
pop
popa
dec
scas
cmp
add
movsl
inc
xor
jnp
cli
sub
push
pop
jg
icebp
in
movsl
mov
xchg
addb
cmc
inc
push
xor
sub
push
xchg
cmpsb
imul
cmc
cs
lds
dec
jb
xlat
stos
jmp
jae
ljmp
fidivrs
out
comiss
test
adc
fwait
call
insl
test
mov
test
iret
dec
mov
aam
ja
dec
and
es
sbb
xchg
adc
push
sub
mov
and
adc
xchg
bound
repz
push
inc
add
stos
pop
xchg
out
stos
es
add
lcall
imul
out
jne
test
cmp
dec
mov
jnp
mov
or
pop
cmc
jbe
fwait
xchg
jnp
aam
fwait
inc
add
cmp
add
pop
mov
push
lods
xchg
add
lret
dec
or
ret
outsb
xor
sti
test
push
jge
mov
cwtl
dec
adc
or
or
out
add
negl
stos
mov
mov
repnz
sahf
mov
mov
nop
dec
and
fsubrl
add
dec
xor
xchg
mov
test
pop
add
arpl
aad
inc
jp
mov
xchg
inc
push
push
xchg
xlat
cmp
popf
movsb
xchg
add
mov
in
inc
add
or
cmp
sub
aas
sbb
out
inc
add
decl
lock
add
bound
in
pop
dec
out
aad
test
mov
fistl
jo
ficoml
xor
push
dec
mov
fisttpl
pop
adc
cwtl
cmp
mov
jns
or
jmp
ret
mov
fs
and
jecxz
mov
pop
insb
adc
pusha
add
aaa
add
popa
movsl
jle
jl
scas
rcrb
in
aad
stc
jmp
lret
sti
jle
lods
idivb
daa
dec
adc
fptan
mov
cmp
sahf
dec
mov
mov
notl
out
lahf
sbb
fcmovnbe
cmp
pushf
sbb
leave
jnp
push
pop
pop
fcomps
movb
mov
jmp
lods
sub
addb
ret
push
add
cmpsb
mov
push
movsb
push
dec
cltd
add
lods
insl
jmp
call
sbb
subl
inc
xchg
mov
jno
fcmovnbe
push
cli
dec
out
and
pop
ljmp
in
jge
loop
push
sbb
mov
and
test
push
dec
and
call
jb
movsb
in
inc
add
into
sub
pop
and
cmp
jne
dec
lods
repnz
into
repnz
dec
xor
inc
add
das
inc
add
push
mov
dec
xor
cltd
add
fcomi
xchg
and
mov
test
outsb
popf
scas
cwtl
adc
test
hlt
daa
xor
push
rolb
mov
int3
sub
orl
lcall
ret
xchg
xor
das
push
cmp
and
inc
ds
cmp
jp
rol
shrl
pop
jb
int
mov
les
cmp
or
pushf
repz
dec
pop
add
mov
adc
push
pop
xlat
xor
mov
les
lods
add
pop
adc
enter
scas
in
push
imul
push
pop
inc
add
jb
jo
sbb
cltd
fs
pop
xor
jne
xchg
push
pop
dec
call
push
sbb
arpl
xchg
out
add
test
ret
imul
lcall
jl
dec
neg
hlt
cmp
mov
jae
popf
frstor
cmp
ficompl
loopne
cmp
or
jle
inc
add
jle
dec
inc
jbe
mov
je
lock
es
stos
sti
jmp
mov
out
int
xor
lock
pushf
mov
add
into
movsl
xchg
and
test
icebp
mov
dec
subl
std
mov
rcrb
loopne
dec
mov
scas
test
inc
pushf
inc
add
add
mov
in
dec
dec
add
into
addb
inc
add
push
sbb
lock
add
stos
cs
add
fs
dec
push
into
out
or
addb
test
ja
jns
lods
or
call
or
scas
dec
aaa
dec
or
add
add
jle
jl,pn
pop
aam
dec
test
xchg
shlb
sbb
lahf
dec
jmp
insb
sbb
insb
mov
lea
add
and
mov
mov
mov
lret
mov
enter
jle
jae
pop
ds
xchg
add
add
jb
mov
bound
push
add
nop
jns
xor
or
jmp
fs
das
addb
xchg
cmpsb
call
pop
repnz
cld
add
imul
ss
add
push
fs
xchg
mov
aaa
cmp
pop
mov
lcall
int3
mov
pop
ljmp
cmp
add
cld
scas
hlt
dec
push
xlat
imul
mov
mov
mov
fstpl
lock
cmp
add
bound
bound
push
movb
cs
pop
fisubs
add
sahf
test
push
dec
aas
imul
call
push
push
push
sti
dec
imul
jns
fisttpll
or
or
add
fs
popf
in
push
mov
pop
into
or
test
les
pop
addb
pop
out
jl
dec
and
xor
aaa
xchg
incb
jp
negb
popf
sbb
ja
pop
mov
pop
arpl
jmp
addb
cld
adc
jno
pop
lods
test
in
add
sbb
xchg
stos
xchg
les
adc
push
sbb
shr
icebp
and
mov
pop
pop
mov
adc
int
sbb
sbb
mov
mov
inc
mov
hlt
sub
loop
mov
out
sahf
mov
ljmp
stos
xchg
jecxz
outsb
adc
cli
pop
dec
and
call
add
add
jmp
mov
inc
add
test
jb
dec
xchg
enter
push
incb
mov
les
sbb
jmp
add
cli
incb
mov
pop
xchg
sbb
fimuls
add
add
inc
add
int
packssdw
stos
sbb
jns
xchg
sahf
adc
faddl
and
sbb
ds
je
mov
jmp
cmovns
cmp
dec
push
ror
xor
repz
dec
call
xchg
or
xor
mov
mov
pop
jecxz
xor
sbb
add
mull
jnp
daa
push
cld
leave
sub
pushf
jl
movsl
aas
icebp
push
push
int
addr16
out
addr16
ljmp
mov
lcall
jns
push
dec
sub
cwtl
addb
push
cmp
adc
mov
xor
cmp
mov
movsl
dec
cmc
pop
addl
dec
arpl
mov
gs
inc
add
jg
in
daa
leave
or
imul
cli
xor
add
cld
mov
mov
arpl
jne
add
jle
scas
pop
aas
cmpsb
mov
leave
xchg
or
dec
dec
cmp
sub
push
mov
sub
sbbl
addb
add
jle
loopne
sbb
mov
push
fldt
stc
xchg
xchg
ds
stos
cld
ret
xor
add
push
mov
xor
add
shrl
sbb
cmp
mov
lret
pop
inc
mov
int
cltd
or
mov
cmp
sti
sbb
ljmp
bound
jmp
nop
test
xor
push
mov
movsb
jne
inc
cmp
or
and
in
pop
testb
cmp
cld
ja
test
lods
nop
sub
andl
adc
popa
and
add
lret
aas
push
push
outsl
stos
out
les
jle
fsubrs
pop
mov
xlat
or
aas
sbb
sbb
lods
js
xlat
xlat
mov
addb
sbb
or
pop
shl
sbb
push
mov
dec
xchg
sbb
mov
add
cmpsl
xor
rolb
pop
cmpsb
xor
adc
add
dec
or
popa
cmp
shll
ss
jo
dec
sbb
idivb
lcall
or
jb
lcall
int3
cmp
add
ds
test
add
inc
add
sti
mov
pop
call
je
and
push
mov
push
adc
add
xor
loopne
cmp
mov
insb
cmc
cmc
jbe
ljmpw
mov
ret
sbb
push
adc
mov
dec
jbe
call
testb
enter
cmp
add
add
clc
popa
mov
lret
or
and
in
dec
popa
jnp
jb
xchg
or
and
fisubl
add
pop
jbe
adc
pop
enter
add
sub
aad
aas
add
jp
mov
idivl
push
push
cli
xchg
sub
xor
call
enter
sub
insb
shrl
mov
add
sbb
push
push
mov
sbb
or
rcrb
jo
mov
das
lret
xor
out
loope
adc
test
mov
sbb
fsts
inc
call
mov
sub
nop
je
sub
into
sub
pop
cmp
mov
add
and
mov
jp
ljmp
push
dec
pop
sbb
aaa
xchg
lods
and
imul
add
xor
push
jbe
fidivrl
sti
pop
scas
lods
stc
scas
jp
ja
mov
lds
inc
add
fbstp
test
and
inc
inc
add
xchg
stos
pop
into
popf
cmp
add
mov
lret
mov
cwtl
aas
pop
gs
mov
dec
fisubrs
lods
xor
mov
add
push
lods
xchg
and
mov
mov
add
lret
jae
push
ret
js
mov
rep
rol
push
loope
ficoms
jbe
xor
add
add
outsb
es
push
pop
and
lcall
rcrl
cmp
mov
push
addb
fiaddl
out
nop
pop
push
xchg
and
adc
cmp
add
jns
enter
in
add
jecxz
sub
lcall
sub
add
mov
fstl
xlat
cmpl
sub
jl
das
add
cmp
mov
xor
sbbl
cwtl
dec
add
rolb
int
lods
jmp
mov
in
dec
xchg
outsl
sahf
repnz
pop
lods
repz
or
lods
sbb
sub
push
rorl
outsl
dec
or
push
ret
dec
mov
imul
inc
add
push
loopne
bnd
decl
push
mov
mov
insl
cwtl
jnp
add
in
scas
xchg
pop
roll
das
sub
rcll
fcmove
test
jno
xor
loop
into
bound
jb
add
push
mov
fistpl
ret
addb
push
fwait
cwtl
jecxz
ds
addb
sti
sarl
mov
push
ds
je
sbb
push
inc
jp
pop
adc
push
add
cs
outsl
push
mov
lahf
lods
dec
sub
shll
cltd
popa
jae
lods
test
sahf
fildl
lret
dec
std
rclb
cltd
ret
lahf
pop
loop
out
add
stc
cmpsl
mov
rcrl
outsl
cs
jle
xor
popf
mov
cmpsb
add
add
fistl
mov
lret
mov
pushf
push
xor
jns
xchg
aam
push
add
cmpsl
cmpsl
sbb
mov
ficoml
xchg
xor
mov
cs
loopne
int3
cmp
fcomps
xchg
or
or
jnp
pushf
mov
fsubr
dec
add
cltd
jno
enter
popa
sub
adc
les
add
jle
sbb
add
inc
mov
mov
mov
cwtl
not
jmp
stos
inc
fdivs
notb
add
ret
in
inc
movb
es
loopne
ds
lcall
pop
imul
add
jp
xchg
sbb
add
mov
add
repz
cld
shll
pop
inc
add
inc
add
cmp
adc
dec
das
shlb
add
push
out
divl
add
mov
popa
push
fcomip
xor
in
or
xor
add
call
add
hlt
scas
add
test
fcoml
jge
fwait
inc
add
and
lods
test
sub
out
xchg
into
enter
int3
sub
les
mov
jle
xor
inc
add
movsl
jecxz
add
or
fcmovnb
cmp
add
int3
xor
cmp
mov
aam
mov
and
rorb
jno
mov
mov
push
dec
dec
mov
bound
xlat
sti
aaa
or
into
and
es
lcall
push
add
jg
mov
popa
mov
ret
add
push
mov
out
jp
adc
push
xor
mov
mov
cmpsb
out
icebp
lods
sbb
mov
or
das
leave
adc
pop
ss
add
push
lods
pop
mov
push
ret
add
ficoml
add
loopne
mov
cs
add
adc
push
arpl
mov
int3
shll
movsl
adc
ljmp
rolb
inc
or
pop
mov
xor
cmc
mov
push
ljmp
pop
dec
and
mov
push
loop
mov
aaa
shrb
push
xor
or
vmovshdup
bound
dec
xor
es
adc
fsin
rcr
inc
insb
jge
cmpsl
mov
jl
sub
mov
repz
mov
sub
out
les
lods
stos
das
popf
lock
fistps
add
xor
ja
cmpsb
or
add
add
xchg
shrl
and
jo
mov
fistl
jb
ds
lds
sbb
mov
loope
mov
lret
xor
cmp
lret
cmp
jle
mov
cmp
mov
call
es
sub
mov
scas
jbe
jge
fmull
mov
adc
frstor
add
pop
lcall
add
adc
shlb
ret
mov
add
add
xchg
mov
add
mov
add
jne
push
dec
js
add
or
sarl
mov
and
inc
lret
inc
add
std
dec
push
mov
sub
ss
or
xchg
xchg
or
addb
add
jl
sti
repnz
call
xor
lock
mov
outsl
cmpl
rolb
add
jb
sbb
in
inc
add
or
pop
adc
mov
push
xlat
daa
int3
push
add
jns
loope
xor
outsl
loope
lea
jecxz
pop
xchg
pop
insb
lcall
adc
mov
sarl
sbb
cmpsl
sub
loope
jo
sub
add
xchg
jge
hlt
mov
sti
iret
cmp
test
jge
cltd
stc
dec
pop
pop
xchg
or
or
sub
mov
loope
cmpsl
or
not
and
and
dec
in
jmp
inc
add
lcall
mov
pop
mov
sub
mov
mov
push
dec
jb
add
iret
out
cmp
mov
xchg
stos
stos
shrl
mov
add
notl
sub
mull
push
jo
mov
push
int
adc
push
gs
add
add
lahf
aaa
adc
lock
push
and
mov
test
add
cmp
or
ret
insb
inc
add
fistpll
das
dec
adc
daa
sub
mov
inc
add
icebp
bound
adc
sbb
lcall
xchg
rolb
xchg
xor
pop
add
outsl
mov
adc
add
imul
xchg
cs
mov
test
sbb
not
fsubr
cmpsl
mov
sbb
enter
test
addb
cmp
fiadds
push
xchg
adc
jge
movsb
lcall
leave
push
notb
mov
outsb
insb
sbb
test
dec
mov
sub
fbstp
add
addl
xor
movsb
push
fs
lret
jae
rcrl
add
les
adc
lcall
xor
fildll
cmc
sub
add
mov
out
repz
add
cld
mov
xchg
arpl
loopne
fld
push
popf
imul
ffree
add
lret
jecxz
repz
cmpl
sub
mov
add
repz
pop
outsb
pop
sbb
fs
add
mov
leave
mov
jbe
in
xor
pop
cmc
pusha
add
out
mov
cmpsb
movsb
push
xchg
adc
mov
addb
adc
loopne
dec
loop
add
inc
scas
add
jb
xchg
cmp
push
lods
fadds
mov
pop
pop
lret
outsb
or
shl
cmp
sarl
insl
mov
stos
lods
mov
cmp
add
and
fcmovnb
add
out
mov
add
sbb
mov
inc
add
into
lods
int
dec
fistps
mov
mov
rcrb
cmpsb
dec
sub
cmp
fists
add
and
push
xchg
xchg
in
cmp
jb,pt
ds
divl
inc
push
int
or
add
inc
add
push
adc
addb
sbb
fadds
add
pop
data16
arpl
out
jecxz
mov
loopne
aam
int
in
sbb
int
in
sub
pop
mov
push
jge
dec
divb
movsl
addb
sub
cmp
jo
pop
adc
out
cmc
dec
pop
pop
push
bound
mov
add
jns
sbb
out
sub
rclb
scas
icebp
mov
add
or
lret
insl
movsb
push
fdivr
lods
or
ret
fs
add
mov
push
xchg
loopne
push
pusha
add
push
push
push
push
push
cld
addb
dec
and
pop
imul
xor
rorl
out
xor
inc
add
sbb
mov
gs
mov
add
movsl
and
pop
lods
cmpsl
hlt
repz
lret
fiaddl
add
add
jae
push
mov
cmp
and
out
cmp
ds
add
fists
test
lods
es
mov
add
daa
aas
cmp
push
add
add
lret
repz
stc
xor
push
sbb
and
cmpsb
xchg
dec
lcall
mov
lret
scas
or
sbb
repz
jl
int3
rorl
scas
fisttpll
rcrb
pop
and
clc
jno
decb
and
add
enter
pop
pop
lods
dec
rorb
xchg
or
test
xchg
mov
ret
lods
mov
add
xchg
in
xchg
xor
sti
aad
jle
adc
jnp
rcr
pop
imul
lret
mov
xchg
cmp
movsl
mov
pop
add
clc
adc
je
mov
sub
and
lret
imul
mov
pusha
add
mov
xor
xor
sahf
inc
add
and
add
jecxz
subl
push
adc
add
mov
mov
or
scas
popf
mov
repnz
fidivrl
hlt
pop
out
sbb
cld
mov
rclb
rolb
add
push
fcmovbe
test
inc
add
sbb
and
cwtl
and
fdivrs
pop
movb
aas
faddl
aam
add
fwait
adc
cmp
or
add
mov
dec
or
xchg
inc
add
lea
imul
xchg
daa
rep
test
adc
jno
add
sub
push
ja
adc
imul
push
sbb
shlb
mov
push
iret
imul
lods
sub
sub
push
add
jne
add
add
aam
fstpt
dec
add
adc
add
test
ret
dec
imul
add
xchg
cwtl
or
enter
pop
mov
xchg
dec
lds
xchg
push
lds
add
xor
stos
fmull
push
add
or
pop
mov
fsubl
js
pop
sub
sbb
lea
xchg
mov
out
sub
cmp
cmp
je
mov
pusha
add
push
sbb
cmp
or
scas
mov
or
jle
mov
pusha
add
shrl
cld
adc
mov
push
mov
and
leave
enter
bound
arpl
addl
add
stos
cmp
pop
outsb
out
inc
add
push
stos
dec
insb
cltd
fwait
push
xchg
cmp
add
jnp
mov
test
and
dec
pop
int
bound
cltd
and
inc
add
mov
dec
stc
insb
dec
push
mov
add
movsl
adc
jge
sti
scas
ret
pop
mov
or
cs
aaa
sbb
icebp
jno
mov
xchg
cmp
stos
inc
popa
pmaxsw
std
outsl
hlt
lea
mov
fistl
out
lods
inc
cwtl
rorl
in
inc
imul
repz
inc
add
cli
xchg
push
repz
sbb
cmp
lods
es
repz
fstl
pop
aas
ret
in
mov
in
pop
jecxz
dec
and
scas
dec
inc
aaa
lcall
add
or
add
daa
xchg
dec
sti
std
lahf
movsl
pop
add
jge
cmp
mov
sbb
insb
je
inc
mull
call
jg
pop
lret
and
sbb
mov
pusha
add
fcomps
or
notb
xacquire
pushf
jle
add
pop
mov
jp
clc
out
mov
xchg
mov
shll
lret
or
xchg
mov
fcmove
scas
idiv
call
push
push
jl
ljmp
add
push
inc
add
push
or
lods
inc
xchg
in
add
movsl
mov
or
adc
repz
lret
test
rcrl
mov
cmc
ret
test
bound
aas
jg
dec
aas
xor
insb
mov
les
movsl
repnz
xchg
xor
imul
mov
inc
add
addr16
xchg
add
add
add
xor
push
popa
adc
mov
adc
cmp
leave
out
mov
add
dec
push
add
jecxz
mov
out
xchg
add
lahf
add
rorb
jne
mov
jo
aas
popf
out
xchg
inc
jmp
jo
or
add
pop
call
int3
loope
mov
lahf
test
mov
sbb
xor
insl
xchg
lret
sbb
sub
jne
shlb
push
sbb
loop
push
cmp
xlat
sarb
jne
mov
jne
ljmp
clc
xor
add
push
pop
fistl
add
pop
lock
pop
pop
dec
cmp
lea
cmp
jb
add
inc
add
adc
cmpsb
sub
jge
push
dec
cld
test
xchg
inc
pushf
enter
adc
sbb
fcom
shlb
popa
jae
cmpl
rcrl
mov
sub
fistpll
adc
jbe
je
fildl
add
cmp
dec
push
and
add
mov
pop
dec
ljmp
pop
inc
add
or
call
xchg
sbb
lds
ljmp
icebp
adc
pop
ret
stc
loope
push
and
and
lods
cwtl
je
outsb
les
push
popa
push
add
cmp
push
push
jg
movsl
inc
and
add
fs
sub
mov
scas
lock
mov
jo
fdivrl
iret
jne
leave
inc
cld
leave
lret
add
add
sbb
pop
insb
in
fisubs
mov
or
into
jnp
daa
and
add
imul
rorb
cmp
inc
add
lcall
push
jl
cs
push
or
js
insb
fmulp
les
fwait
stos
mov
mov
or
pop
dec
xor
aam
add
mov
stos
pop
jl
jecxz
js
pop
xor
iret
mov
xlat
mov
loope
push
cli
lahf
xchg
sub
add
js
xchg
xchg
sbb
cs
int3
sub
mov
lcall
cmp
and
push
sub
sbb
in
or
add
stos
sub
or
fistl
mov
add
sbb
push
cwtl
mov
arpl
cli
sti
push
inc
pop
data16
sti
jmp
in
cld
pop
adc
cli
test
jp
adc
mov
add
sub
or
test
pop
jb
jmp
jge
fcompl
lahf
in
lds
lea
shr
js
xchg
xlat
imul
mov
js
inc
adc
pop
adc
push
inc
add
or
sub
jp
and
popa
jns
mov
xor
lahf
les
shrl
lds
inc
add
nop
es
push
inc
outsl
inc
xchg
add
stc
nop
es
sbb
outsl
mov
adc
nop
es
xchg
xor
cmp
sub
add
sbb
add
add
pop
les
in
jge
mov
add
add
nop
es
in
lret
dec
ja
pusha
stc
nop
es
dec
add
add
pop
or
pusha
stc
nop
es
sldt
jnp
add
push
stc
nop
es
add
jnp
add
cmpsb
outsb
movzwl
stc
nop
es
pop
out
adc
nop
es
add
add
add
mov
and
stc
nop
es
mov
add
in
ret
add
stc
nop
es
dec
add
push
ja
xchg
push
mov
xchg
mov
es
adc
das
add
add
add
stc
nop
es
pop
push
rolb
je
stc
nop
es
inc
lret
cmp
add
nop
cld
nop
jmp
pop
pop
push
or
lods
mov
stc
nop
es
je
add
out
cmpsb
rcrl
cmp
nop
es
jne
add
and
fisubl
nop
es
add
dec
or
and
sahf
pop
stc
nop
es
xchg
shrb
push
or
stc
nop
es
pop
add
adc
add
test
es
adc
add
push
nop
cld
nop
jmp
add
dec
dec
xchg
decb
jb
add
xor
add
add
mov
xchg
ret
add
in
out
arpl
rcrb
cld
nop
jmp
pop
test
add
das
xchg
pop
mov
stc
nop
es
add
pop
or
add
adc
nop
cld
nop
jmp
add
inc
mov
add
pop
stc
nop
es
add
mov
add
push
push
mov
xchg
ret
pop
dec
dec
add
pop
inc
add
pop
nop
cld
nop
jmp
pop
je
in
test
jl
dec
sub
nop
es
add
pop
je
pop
mov
nop
cld
nop
jmp
aad
add
add
nop
es
add
mov
jp
out
bound
or
add
nop
es
add
mov
or
cld
nop
jmp
add
add
add
in
mov
stc
nop
es
sbb
repnz
or
nop
es
sbb
add
add
add
jmp
nop
cld
nop
jmp
or
out
add
shrl
add
stc
nop
es
xor
cmp
nop
es
dec
mov
mov
mov
nop
cld
nop
jmp
xchg
pop
add
and
cmp
sub
add
add
add
jp
jge
es
add
add
or
nop
jmp
outsl
dec
add
out
mov
stc
nop
es
add
call
mov
popf
stc
nop
es
add
add
sub
nop
es
inc
xchg
add
add
popf
mov
nop
cld
nop
jmp
add
out
add
cld
jne
stc
nop
es
pop
add
lret
push
stc
nop
es
add
repnz
add
or
rcl
push
mov
call
stc
nop
es
add
adc
subb
incl
in
outsl
add
mov
inc
movsb
icebp
push
push
mov
xchg
ret
xchg
jne
xchg
add
add
nop
cld
nop
jmp
add
add
aad
push
push
mov
xchg
ret
add
add
lods
call
nop
cld
nop
jmp
add
add
nop
cld
nop
jmp
rorl
in
add
add
rclb
sub
inc
add
or
mov
dec
cmp
nop
es
add
dec
add
aam
xor
stc
nop
es
adc
add
outsl
loopne
nop
es
stos
add
add
aad
dec
pop
stc
nop
es
add
add
arpl
xchg
mov
test
push
mov
xchg
ret
repnz
das
add
add
nop
es
shlb
mov
cmpsb
add
mov
add
add
stc
nop
es
add
xchg
imulb
nop
es
dec
pop
lret
xchg
add
das
push
stc
nop
es
out
add
cmp
add
nop
jmp
mov
inc
dec
add
pop
test
clc
push
stc
nop
es
xchg
add
add
mov
push
push
mov
xchg
ret
in
verr
add
in
ret
push
mov
xchg
ret
outsl
lret
add
add
add
popa
add
mov
xchg
ret
add
dec
test
adc
add
cli
incl
pop
add
stos
inc
add
or
push
mov
xchg
ret
data16
mov
stc
rep
push
mov
xchg
ret
lret
add
add
push
xchg
pop
mov
stc
nop
es
add
call
push
testl
movl
jbe
sub
es
sub
call
maskmovq
nop
cld
nop
jmp
add
test
pop
push
pop
push
mov
xchg
ret
add
jne
pop
add
loopne
inc
add
add
stc
nop
es
xor
add
add
cld
nop
jmp
add
popw
pop
aad
fnstcw
stc
nop
es
xor
or
mov
icebp
nop
cld
nop
jmp
pop
bound
outsl
fimull
jb
cmp
add
add
xor
push
xor
bound
jo
mov
stc
nop
es
add
add
aad
and
test
nop
cld
nop
jmp
stos
lret
mov
pop
mov
nop
es
add
add
data16
pop
mov
stc
nop
es
dec
add
add
popa
stc
nop
es
add
xchg
add
mov
adc
nop
es
add
add
inc
lcall
jb
add
xor
inc
ret
xor
stc
nop
es
xor
add
psubsb
stc
nop
es
jp
adc
les
mov
jmp
jnp
add
add
outsl
dec
and
add
and
lock
add
out
repnz
add
cld
nop
jmp
sub
add
sbb
mov
add
stc
nop
es
add
cld
nop
jmp
dec
add
add
sbb
repnz
add
stc
nop
es
push
xor
add
push
nop
cld
nop
jmp
jnp
in
add
sbb
stos
stc
nop
es
repnz
movswl
stc
nop
es
outsl
pop
add
inc
mov
es
pop
add
xchg
add
adc
in
push
stc
nop
es
add
add
and
and
clc
dec
inc
nop
cld
nop
jmp
add
pop
add
mov
sub
stc
nop
es
pop
inc
add
mov
stc
nop
es
aad
arpl
mov
nop
cld
nop
jmp
push
stos
add
sub
nop
es
add
dec
jnp
call
push
mov
xchg
ret
add
adc
ficoms
mov
xchg
ret
add
pop
add
dec
sbb
cs
nop
es
pop
aad
sbb
rcrl
inc
idiv
stc
nop
es
mov
add
adc
mov
es
pop
add
add
push
mov
add
out
adc
sbb
fld
loopne
xchg
sbb
cld
nop
jmp
add
pop
add
cmp
mov
out
out
clc
stc
nop
es
in
je
add
test
nop
es
add
inc
xchg
add
lea
nop
cld
nop
jmp
pop
or
push
xchg
add
add
stc
nop
es
xor
addr16
mov
stc
nop
es
add
add
inc
nop
xor
jne
stc
nop
es
add
addb
mov
push
mov
xchg
ret
xor
add
rep
stc
nop
es
sub
add
inc
add
jne
add
push
mov
xchg
ret
add
outsl
inc
add
sub
sar
es
inc
sub
sbb
mull
stc
nop
es
pop
pop
mov
rcl
add
dec
push
stc
nop
es
mov
adc
les
push
decb
es
xchg
add
add
data16
add
nop
jmp
pop
add
adc
add
mov
stc
nop
es
roll
mov
push
mov
xchg
ret
jp
dec
add
cmpsb
mov
stc
nop
es
xchg
sbb
fcomps
nop
es
add
add
sbb
jb
rorl
adc
add
nop
es
add
stos
lods
push
stc
nop
es
add
add
pop
bound
icebp
sbb
push
mov
xchg
ret
add
add
dec
cmp
sbb
es
add
test
add
jecxz
call
stc
nop
es
add
xchg
add
nop
es
mov
add
add
add
nop
es
inc
pop
jl
stc
nop
es
add
add
pop
sbb
add
and
nop
cld
nop
jmp
outsl
add
mov
add
add
nop
es
add
repnz
push
idiv
stc
nop
es
add
add
addr16
push
mov
xchg
ret
add
lret
mov
stc
nop
es
push
add
outsl
add
xor
idiv
stc
nop
es
add
add
imul
push
add
and
bnd
xor
stc
nop
es
pop
add
add
add
cld
mov
stc
nop
es
add
outsl
inc
add
pause
cld
nop
jmp
add
xchg
jnp
add
sbb
xchg
push
inc
add
add
dec
mov
xchg
inc
adc
add
add
nop
es
add
add
xchg
add
test
sldt
nop
cld
nop
jmp
add
add
xchg
sub
rclb
adc
add
outsl
add
add
add
push
push
mov
xchg
ret
add
add
add
nop
cld
nop
jmp
add
add
sub
nop
jmp
sub
add
add
fisttps
test
add
stc
nop
es
das
lret
add
cmp
es
add
je
stc
nop
es
inc
adc
les
fnsave
sar
es
xchg
adc
add
dec
push
mov
xchg
ret
dec
push
add
je
stc
nop
es
add
xor
push
stc
nop
es
inc
jp
inc
xchg
inc
dec
add
cld
nop
jmp
aad
test
add
inc
add
int
pop
jae
nop
es
outsl
xor
test
jb
nop
cld
nop
jmp
add
add
add
stc
nop
es
add
add
add
mov
sti
nop
cld
nop
jmp
fildl
nop
jmp
add
roll
add
xlat
pop
nop
nop
cld
nop
jmp
add
outsl
add
add
xor
pop
stc
nop
es
add
add
pop
mov
pop
call
es
add
movl
popa
add
mov
xchg
ret
je
add
add
cmpw
stc
nop
es
add
mov
sbb
mov
notl
pusha
add
movsb
add
add
sbb
nop
es
add
ret
mov
stc
nop
es
rolb
fwait
push
push
mov
xchg
ret
stos
add
add
add
stc
nop
es
out
add
jge
stc
nop
es
lret
add
add
dec
push
shlb
es
mov
call
and
add
add
pop
add
mov
in
je
nop
cld
nop
jmp
adc
pop
add
leave
stc
nop
es
pop
add
add
stc
nop
es
inc
add
out
or
add
mov
nop
cld
nop
jmp
mov
inc
add
jg
stc
nop
es
add
or
dec
je
dec
nop
cld
nop
jmp
mov
mov
dec
stc
nop
es
pop
and
aad
stos
cmp
cltd
push
push
mov
xchg
ret
call
mov
mov
xchg
ret
dec
add
call
xor
push
push
mov
xchg
ret
mov
add
sub
nop
es
add
pop
add
rcll
dec
add
push
mov
xchg
ret
pop
add
mov
jae
add
pop
hlt
add
add
and
push
mov
xchg
ret
add
pop
adc
in
outsl
cmp
sbb
xchg
rolb
or
outsl
sbb
and
int
pop
cmp
mov
xchg
ret
add
xchg
in
dec
sub
add
add
dec
add
add
nop
es
add
call
nop
cld
nop
jmp
add
add
add
push
rep
stc
nop
es
out
mov
test
add
mov
mov
xchg
ret
add
add
out
addb
add
add
inc
xchg
inc
push
mov
push
mov
xchg
ret
add
add
jecxz
jb
stc
nop
es
add
adc
add
nop
cld
nop
jmp
add
add
stc
nop
es
out
add
outsl
add
stc
nop
es
mov
in
in
mov
lods
and
push
mov
xchg
ret
add
in
add
stos
add
nop
cld
nop
jmp
cmp
inc
add
or
add
es
mov
mov
add
and
mov
nop
cld
nop
jmp
pop
add
xchg
add
xchg
mov
es
sub
add
pop
repnz
add
stc
nop
es
lret
add
mov
stc
nop
es
jp
add
xchg
add
push
or
sar
nop
es
add
xor
lret
add
cmp
jb
jnp
or
rclb
je
jb
shr
stc
nop
es
bound
add
add
mov
add
xchg
ret
jnp
add
add
jle
test
nop
es
in
add
pop
or
xchg
ret
pop
add
inc
out
or
bound
ret
call
stc
nop
es
out
in
aad
mov
es
mov
add
xor
cmp
stc
nop
es
dec
inc
add
and
inc
and
nop
cld
nop
jmp
aad
add
je
out
add
stc
nop
es
add
add
outsl
xchg
repnz
push
stc
nop
es
movl
add
pusha
stc
nop
es
pop
call
pop
add
and
cmp
inc
add
add
pop
movsb
dec
imul
stc
nop
es
das
add
add
add
push
mov
xchg
ret
adc
in
jo
es
nop
cld
nop
jmp
sbb
or
stc
nop
es
add
dec
xor
stc
nop
es
or
mov
inc
dec
loop
inc
adc
add
add
xchg
push
add
or
add
and
nop
es
add
dec
dec
pop
add
fsubl
xor
add
stc
nop
es
add
lret
and
cld
nop
jmp
je
jne
dec
je
arpl
jle
stc
nop
es
in
inc
add
out
xor
gs
add
stc
nop
es
or
dec
add
dec
push
push
mov
add
xorl
add
jp
dec
or
nop
es
xchg
add
add
nop
es
aad
add
add
scas
mov
stc
nop
es
inc
xchg
test
outsl
add
add
stc
nop
es
add
add
add
adc
jmp
inc
out
adc
add
push
push
nop
mov
mov
xchg
ret
test
jp
stc
nop
es
bound
outsl
cmp
das
add
mov
stc
nop
es
add
data16
jno
push
stc
nop
es
sbb
jp
jne
add
stc
nop
es
xchg
add
mov
nop
es
push
adc
mov
mov
stc
nop
es
and
aad
mov
add
push
add
stc
nop
es
adc
xor
push
mov
xchg
ret
inc
add
call
dec
lea
stc
nop
es
add
xchg
mov
inc
push
mov
nop
cld
nop
jmp
or
add
add
call
stc
nop
es
outsl
dec
jnp
adc
push
stc
nop
es
add
mov
inc
cmp
add
jne
stc
nop
es
add
add
les
add
nop
cld
nop
jmp
adc
inc
add
mov
push
mov
gs
lods
push
add
dec
xchg
adc
add
adc
nop
es
outsl
add
das
outsl
adc
add
lock
es
mov
lret
shlb
add
mov
stc
nop
es
add
add
push
push
mov
xchg
ret
mov
jne
add
add
or
nop
es
mov
mov
dec
add
idivb
nop
jmp
stos
add
cmp
adc
test
loop
nop
cld
nop
jmp
add
data16
sarb
addb
add
add
dec
mov
cmpl
nop
cld
nop
jmp
add
sub
add
adcl
es
nopl
test
dec
cmp
jne
push
mov
xchg
ret
add
call
cld
nop
jmp
add
sub
add
add
aad
sub
jmp
test
add
cmp
nop
es
add
add
insb
add
stc
nop
es
or
add
pusha
nop
cld
nop
jmp
add
jne
add
inc
add
or
test
add
stc
nop
es
add
push
stc
nop
es
add
add
cmp
sar
es
call
add
outsb
je
stc
nop
es
outsl
add
shrl
es
dec
sbb
test
stc
nop
es
and
add
add
addb
imul
stc
nop
es
xor
stos
jp
adc
mov
cli
stc
nop
es
add
mov
imul
dec
idiv
incl
add
test
jne
stc
nop
es
call
stos
stc
nop
es
mov
add
movb
mov
stc
nop
es
add
test
add
stc
nop
es
add
add
add
mov
es
inc
outsl
aad
or
ret
pop
mov
stc
nop
es
in
or
aad
add
mov
stc
nop
es
add
mov
mov
es
add
outsl
adc
outsl
lock
cld
nop
jmp
mov
bound
test
in
pop
pushl
push
mov
xchg
ret
add
add
imul
es
jp
test
mov
nop
cld
nop
jmp
sbb
add
and
stc
nop
es
lret
inc
add
je
insl
lea
push
mov
xchg
ret
and
mov
nop
cld
nop
jmp
outsl
add
add
xor
nop
jmp
add
or
call
insb
inc
stc
nop
es
dec
push
or
add
push
pop
enter
adc
nop
es
pop
lret
adc
mov
jb
nop
es
add
pop
nop
repnz
jb
outsl
movl
cmp
test
cld
nop
jmp
add
pop
add
inc
nop
cld
nop
jmp
je
xor
add
add
je
stc
nop
es
adc
mov
stc
nop
es
dec
pop
push
mov
jb
add
pop
add
in
pop
ret
xor
nop
cld
nop
jmp
add
mov
add
cmp
push
mov
xchg
ret
adc
mov
nop
es
mov
add
popf
jmp
stc
nop
es
add
leave
sub
nop
es
add
in
xor
pop
add
push
mov
xchg
ret
add
add
les
mov
lods
jne
stc
nop
es
pop
add
sbb
nop
es
mov
add
mov
push
stc
nop
es
roll
aad
mov
push
mov
xchg
ret
xor
add
add
daa
test
nop
jmp
adc
sbb
adc
fsts
nop
es
add
or
movl
stc
nop
es
dec
pop
add
jp
add
lock
push
imul
jb
xor
stos
add
call
nop
cld
nop
jmp
dec
add
add
rep
stc
nop
es
add
stos
movl
test
out
stc
nop
es
movl
outsl
mov
push
mov
xchg
ret
mov
xchg
sbb
stc
nop
es
in
test
add
mov
jp
push
push
mov
xchg
ret
add
out
xor
pop
cmpl
nop
cld
nop
jmp
inc
xchg
adc
pop
stc
nop
es
lret
xor
dec
xchg
add
and
add
add
nop
es
inc
sbb
jb
nop
cld
nop
jmp
lret
add
push
push
mov
xchg
ret
out
bound
add
push
cmp
mov
xchg
ret
dec
adc
pop
jne
incb
add
cmc
decl
add
repnz
nop
es
sub
add
add
mov
jb
mov
das
xchg
test
or
stc
nop
es
dec
adc
fimull
test
nop
es
xor
dec
pop
mov
stc
nop
es
add
inc
pop
add
es
add
add
add
nop
ret
cmp
mov
xchg
ret
add
xor
inc
dec
xchg
or
nop
es
add
or
add
add
mov
nop
cld
nop
jmp
xor
add
add
les
push
mov
xchg
ret
cmp
mov
add
add
add
nop
es
or
add
incl
nop
cld
nop
jmp
outsl
add
inc
add
jmp
jb
add
movl
pushl
stc
nop
es
xor
add
or
add
nop
es
add
xchg
add
mov
stc
nop
es
add
pop
stos
outsl
mov
nop
cld
nop
jmp
dec
inc
add
mov
push
loopne
inc
push
mov
xchg
ret
inc
mov
add
add
pop
push
push
mov
xchg
ret
add
adc
test
xor
mov
es
add
dec
add
xchg
add
andl
mov
stc
nop
es
bound
or
add
mov
mov
stc
nop
es
je
mov
mov
nop
cld
nop
jmp
inc
add
add
aaa
and
rcrb
stc
nop
es
test
sub
es
outsl
or
add
mov
cld
nop
jmp
add
add
test
sbb
cld
nop
jmp
xchg
dec
dec
dec
inc
adc
push
stc
nop
es
xchg
stos
in
add
add
outsl
mov
stc
nop
es
rolb
dec
xor
pop
pop
stc
nop
es
mov
data16
dec
leave
stc
nop
es
add
je
add
dec
adc
popa
stc
nop
es
inc
xchg
das
bound
add
es
add
or
adc
push
mov
xchg
ret
pop
inc
das
or
and
lods
add
stc
nop
es
pop
add
add
mov
nop
jmp
pop
das
add
inc
mov
add
stc
nop
es
jne
outsl
outsl
sbb
jne
stc
nop
es
bound
xor
jae
add
mov
stc
nop
es
xchg
sbb
jmp
nop
cld
nop
jmp
add
inc
or
push
stc
nop
es
add
xor
or
xor
inc
imulb
movsl
nop
cld
nop
jmp
das
add
in
xchg
test
nop
cld
nop
jmp
add
repnz
out
add
add
ret
stc
nop
es
pop
adc
add
ret
adc
mov
xchg
ret
sarl
add
mov
stc
nop
es
add
add
pop
sbb
popa
add
nop
es
add
xor
add
gs
push
dec
adc
mov
cmp
ret
and
add
outsb
je
stc
nop
es
add
je
add
push
mov
xchg
ret
pop
add
add
xor
shl
stc
nop
es
inc
add
jne
mov
stc
nop
es
adc
test
add
nop
es
add
sbb
dec
add
xor
xchg
jecxz
stc
nop
es
pop
je
add
push
stc
nop
es
add
mov
add
push
jp
inc
stc
nop
es
inc
add
sbb
mov
mov
xchg
ret
add
add
add
push
sub
add
push
mov
xchg
ret
add
cmp
stc
nop
es
add
pop
add
add
sub
es
dec
pop
or
repnz
push
pop
nop
cld
nop
jmp
cmp
xor
mov
repnz
divl
add
push
push
push
mov
xchg
ret
outsl
add
add
xchg
jmp
nop
es
dec
repnz
add
inc
ss
addb
stos
stc
nop
es
add
add
mov
xchg
inc
adc
cld
nop
jmp
add
add
pop
add
mov
stc
nop
es
push
add
push
push
mov
xchg
ret
or
data16
flds
mov
xchg
ret
aad
movl
adc
test
inc
add
stos
adc
add
nop
cld
nop
jmp
add
add
add
add
push
nop
cld
nop
jmp
mov
add
add
cmp
mov
xchg
ret
adc
add
push
mov
les
add
roll
xor
add
push
sub
add
stc
nop
es
push
add
pop
add
movzwl
stc
nop
es
add
add
dec
cmp
popa
add
cld
nop
jmp
add
or
add
or
add
push
mov
xchg
ret
adc
push
pop
shll
or
in
add
test
add
dec
das
std
rep
stc
nop
es
jne
adc
add
add
stc
nop
es
add
inc
repnz
pop
nop
cld
nop
jmp
add
and
or
jp
xchg
jg
jmp
nop
es
mov
sbb
or
es
movhps
pop
or
sar
es
pop
xor
addr16
add
add
arpl
mov
push
mov
xchg
ret
add
add
xor
roll
pop
cmp
push
mov
xchg
ret
adc
jp
adc
nop
cld
nop
jmp
add
jne
jp
inc
outsb
push
stc
nop
es
adc
movzwl
stc
nop
es
add
inc
add
mov
stc
nop
es
add
enter
stc
nop
es
mov
outsl
movb
add
into
pop
push
mov
xchg
ret
add
add
pusha
add
and
nop
cld
nop
jmp
add
ltr
repz
nop
es
adc
addr16
add
push
push
mov
xchg
ret
test
xor
jo
push
stc
nop
es
and
inc
adc
jnp
xchg
adc
add
mulb
pop
stc
nop
es
add
add
add
xchg
outsb
xchg
stc
nop
es
pop
mov
push
add
add
jb
test
in
mov
pop
jne
stc
nop
es
add
add
add
add
push
mov
xchg
ret
add
adc
xchg
call
stc
nop
es
test
cmp
add
add
mov
stc
nop
es
add
das
ja
aaa
addb
jne
sub
sar
es
inc
add
add
add
nop
cld
nop
jmp
outsl
inc
dec
mov
push
out
or
stc
nop
es
add
adc
cmp
add
nop
cld
nop
jmp
add
out
add
lret
movzwl
push
mov
xchg
ret
add
dec
mov
stc
nop
es
add
mov
stc
nop
es
test
in
xchg
xor
add
fwait
mov
stc
nop
es
mov
movzwl
nop
cld
nop
jmp
add
add
cmovge
nop
es
dec
adc
add
add
adc
movb
es
dec
xchg
stos
add
mov
xchg
ret
adc
add
pop
jae
or
ret
stc
nop
es
add
cvttpd2dq
adc
push
mov
xchg
ret
add
add
add
arpl
push
add
push
inc
add
cmp
test
add
cmp
pop
stc
stc
nop
es
mov
mov
stc
nop
es
bnd
add
movsl
or
lret
nop
jmp
add
je
add
add
xchg
sbb
nop
es
inc
sub
sbb
ret
add
aad
outsl
das
pop
dec
add
add
mov
add
add
mov
push
mov
xchg
ret
inc
jp
dec
mov
imul
nop
cld
nop
jmp
das
data16
add
add
nop
es
stos
add
pop
add
xor
mov
mov
xchg
ret
outsl
mov
je
add
mov
xchg
ret
add
push
add
ret
popa
shlb
nop
cld
nop
jmp
je
mov
dec
shl
push
mov
xchg
ret
add
xchg
add
je
add
nop
jmp
dec
mov
add
test
lods
or
stc
nop
es
jne
pop
sub
das
inc
add
mov
stc
nop
es
sub
das
or
and
nop
cld
nop
jmp
add
out
mov
dec
add
mov
xchg
ret
xchg
add
outsl
pop
xchg
gs
stc
nop
es
aad
or
adc
dec
das
call
stc
nop
es
mov
pushf
mov
stc
nop
es
mov
add
add
or
stc
nop
es
add
cwtl
jne
stc
nop
es
repnz
jne
fists
nop
es
add
xor
add
mov
push
mov
xchg
ret
or
mov
push
mov
xchg
ret
add
add
leave
add
stc
nop
es
xor
mov
test
adc
cld
jmp
add
test
add
add
add
stc
nop
es
dec
add
add
sub
je
nop
cld
nop
jmp
or
call
stc
nop
es
sub
out
pop
pop
sbb
stc
nop
es
jp
rclb
add
jp
xchg
std
add
stc
nop
es
jne
add
push
mov
xchg
ret
mov
add
leave
sub
push
mov
xchg
ret
mov
or
pop
push
stc
nop
es
outsl
add
add
lret
push
mov
xchg
ret
data16
add
and
stc
nop
es
rdtsc
add
or
nop
es
xchg
add
or
jg
stc
nop
es
xchg
dec
in
xchg
add
add
mov
js
nop
es
add
dec
pop
push
mov
xchg
ret
dec
add
and
sbb
mov
xchg
ret
add
xor
out
lods
mov
push
mov
xchg
ret
cmp
inc
stos
add
add
stc
nop
es
add
dec
xor
mov
add
add
in
incl
and
iretw
xchg
stc
nop
es
mov
add
idivb
inc
inc
add
nop
es
add
lret
add
in
mov
stc
nop
es
add
mov
add
jmp
stc
nop
es
pop
roll
jle
stc
nop
es
add
add
adc
bound
mov
nop
es
aad
packuswb
outsl
aam
add
push
mov
push
lods
xchg
add
int
add
pop
jecxz
add
sub
stc
nop
es
add
add
dec
push
stc
nop
es
cmp
push
add
sbb
nop
es
add
add
pop
add
nop
cld
nop
jmp
jp
test
sub
sbb
add
push
mov
xchg
ret
pop
xchg
add
repz
stc
nop
es
adc
push
or
popa
nop
cld
nop
jmp
test
lretw
call
rclb
inc
in
add
add
cmp
nop
cld
nop
jmp
je
add
xor
pop
fs
nop
es
xchg
aad
mov
add
xlat
sahf
je
stc
nop
es
add
jne
call
stc
nop
es
add
call
add
nop
cld
nop
jmp
call
lods
push
mov
lods
add
dec
out
push
add
add
stc
nop
es
test
add
mov
stc
inc
add
add
jp
add
xor
add
stc
nop
es
movl
add
test
cld
nop
jmp
dec
lret
add
pop
mov
stc
nop
es
add
outsl
add
jnp
add
stc
nop
es
dec
add
add
out
decl
push
mov
xchg
ret
adc
pop
adc
nop
jmp
add
mov
add
mov
and
push
mov
xchg
ret
add
jp
inc
push
cmp
cld
nop
jmp
add
sbb
bound
mov
nop
cld
nop
jmp
add
adc
add
stc
nop
es
add
add
bound
sbb
push
mov
xchg
ret
jp
add
mov
js
push
mov
xchg
ret
stos
xchg
sub
dec
mov
mov
stc
nop
es
add
add
jnp
mulb
jmp
or
add
mov
add
stc
nop
es
add
mov
xchg
ret
sbb
mov
stc
nop
es
out
inc
add
cmp
inc
and
nop
es
add
add
inc
mov
stc
nop
es
add
add
add
popl
repz
mov
xchg
ret
add
adc
add
inc
into
call
stc
nop
es
add
add
nop
es
add
bound
push
inc
clc
mov
stc
nop
es
add
inc
mov
jmp
jb
add
dec
push
stc
nop
es
add
or
bound
add
nop
es
or
or
add
bound
or
repz
nop
es
add
add
add
add
add
stc
nop
es
xor
call
push
nop
cld
nop
jmp
add
xor
out
add
adc
jb
jp
add
add
pop
add
push
std
stos
push
mov
xchg
ret
add
add
mov
pop
call
stc
nop
es
jne
add
cmp
or
stc
nop
es
add
inc
sbb
dec
and
push
mov
xchg
ret
call
add
dec
mov
stc
nop
es
xchg
inc
outsl
mov
or
stc
nop
es
dec
in
add
add
and
cmp
icebp
incl
out
dec
add
add
insb
pop
stc
nop
es
xor
add
add
add
and
xchg
ljmp
add
in
addr16
cmp
add
testl
nop
cld
nop
jmp
add
xor
daa
insb
xor
nop
cld
nop
jmp
add
add
jnp
cmpsb
pop
pushf
push
push
mov
xchg
ret
add
add
add
sarb
add
nop
es
add
sbb
add
mov
push
mov
xchg
ret
add
add
add
xchg
and
repnz
jmp
mov
add
dec
add
nop
es
out
push
outsl
call
mov
xchg
ret
xchg
inc
out
adc
ror
push
mov
xchg
ret
add
add
out
pop
stc
nop
es
add
jp
test
add
mov
push
mov
xchg
ret
add
add
test
arpl
nop
es
add
pop
jp
add
aaa
mov
mov
stc
nop
es
add
add
mov
ror
stc
nop
es
outsl
test
outsb
mov
nop
cld
nop
jmp
add
sub
mov
iret
push
stc
nop
es
add
dec
mov
add
es
outsl
movntq
push
mov
stc
nop
es
add
sbb
jb
add
add
pop
add
and
jle
stc
nop
es
sbb
dec
xchg
mov
mov
inc
add
add
jmp
ljmp
add
aad
call
mov
xchg
ret
add
sbb
jge
inc
sbb
push
add
xchg
ret
add
dec
add
xor
stc
nop
es
mov
xor
lock
add
add
jp
add
sub
nop
cld
nop
jmp
das
add
add
mov
push
mov
xchg
ret
xor
mov
neg
cmp
nop
cld
nop
jmp
mov
add
into
push
mov
cmp
add
add
add
xor
add
sbb
test
push
adc
adc
notb
ror
dec
and
pushl
push
out
loope
cmpsb
mov
jmp
sahf
mov
xor
stc
cltd
into
sub
addb
xchg
pushf
push
cmp
mov
dec
mov
test
test
imul
mov
jecxz
mov
sub
sahf
addb
pop
rcr
inc
dec
aaa
in
bound
sbb
mov
inc
add
stos
nop
mov
mov
mov
jl
in
mov
sub
or
jns
aad
lret
pop
fidivrs
add
sti
and
test
and
push
add
movsl
jmp
add
movsl
inc
add
mov
pop
repnz
aad
ror
aaa
mov
popf
ja
inc
add
add
enter
addb
dec
aaa
add
test
sbb
lock
sub
test
stos
imul
outsb
push
lret
int
mov
cli
sub
add
mov
mov
stc
adc
pop
xchg
in
arpl
adc
and
andl
lahf
mov
mov
addr16
adc
pusha
add
pushf
fstpl
stos
mov
rorl
filds
add
cs
add
mov
test
sbb
stos
movb
push
xchg
sub
inc
add
add
movsb
cmc
mov
pusha
add
or
std
addr16
xchg
adc
add
jae
push
daa
ss
add
mov
fmull
sti
jge
inc
add
lods
xor
mov
inc
xor
jl
xchg
add
xor
add
repz
push
xlat
or
scas
mov
mov
lret
push
stc
cld
aam
daa
push
shrl
push
adc
mov
push
outsl
mov
cmpsl
pop
fcmovnu
mov
and
push
mov
lahf
cmp
xor
jmp
inc
add
push
add
mov
mov
mov
in
ret
icebp
xchg
push
in
xor
xor
in
lds
mov
fcompl
popf
or
mov
jecxz
mov
mov
int
outsb
lods
mov
cmp
mov
addr16
pop
shll
fstpl
mov
mov
stos
stos
sub
rol
xor
jne
movb
cmp
and
les
mov
aas
jne
aaa
popa
je
sbb
add
jp
sti
ja
bound
add
test
rclb
loopne
add
into
mov
shll
int
adc
dec
enter
and
inc
and
iret
test
sbb
popa
and
mov
sbb
add
fisttpl
sbb
leave
and
scas
pand
push
gs
in
fchs
jle
outsl
sub
sarb
testb
or
or
inc
das
arpl
cmp
sub
xor
iret
out
inc
dec
adc
cmpl
add
fidivrs
pop
in
xorl
and
test
cmp
fwait
aas
mov
les
sbb
cmpsl
mov
lret
pop
sbbl
sub
push
inc
add
adc
out
mov
mov
add
data16
out
cmp
inc
data16
push
inc
mov
inc
add
cmpsl
and
jle
add
adc
ja
jns
add
or
cmp
cltd
cs
add
jl
sbb
sbb
mov
mov
out
add
add
cmpsl
out
dec
inc
add
jmp
movb
iret
xor
add
add
sub
inc
inc
inc
add
sub
stos
sbb
cld
xlat
bswap
jp
cltd
idiv
sbb
add
mov
popf
addr16
add
lret
dec
dec
sub
out
cmp
push
push
add
adc
leave
rep
daa
xchg
pop
clc
out
sbb
dec
icebp
out
lock
aas
and
push
call
sub
pop
xor
out
repnz
or
jg
push
in
inc
push
jmp
and
sub
sti
nop
sbb
fwait
arpl
popf
icebp
aad
add
in
repnz
inc
add
mov
mov
shll
imul
add
dec
fs
jb
cmp
jns
test
xchg
or
dec
mov
sub
aas
pop
sub
push
xchg
bound
sub
repz
rolb
movsb
in
rcl
push
push
and
adc
push
mov
add
add
es
sub
sbb
repnz
rcll
add
fadds
jmp
out
xchg
inc
add
dec
push
ljmp
sbb
adc
sub
out
lret
insb
jp
jo
mov
out
loop
or
sub
or
add
sbb
xchg
fdivrs
int
and
dec
mov
jl
sbb
xlat
es
jmp
add
lds
pusha
add
jb
add
pop
and
in
xor
add
xchg
nop
shll
adc
notl
adc
push
add
std
jg
sbb
lods
fwait
xchg
xchg
sub
test
xchg
mov
and
das
mov
call
jns
jne
pusha
add
addb
cmp
cmp
sahf
rcrl
insl
push
push
ljmp
ficoms
mov
mov
fiadds
out
sbb
aaa
add
cmp
int3
fwait
pop
imul
xchg
cmpl
add
dec
roll
jnp
add
and
mov
pop
fsubs
add
mov
insb
inc
add
dec
mov
popa
int3
cmp
jl
out
fiadds
dec
jne
pop
aad
lahf
inc
movsl
cmpl
loope
push
hlt
or
add
mov
aaa
in
mov
jge
in
xlat
sub
daa
sub
arpl
mov
stos
fildl
sbb
cmp
es
ret
and
call
cmpsl
pushf
adc
jnp
and
stos
out
icebp
outsb
inc
add
mov
loope
mov
dec
in
cmp
mov
jge
in
fs
jae
mov
or
mov
add
add
fsubl
nop
les
mov
fs
addl
outsl
add
cmc
mov
adc
push
and
cmpsb
xor
fidivrs
push
xor
gs
sahf
mov
add
in
popa
pop
loop
cwtl
xchg
gs
adc
adc
test
or
outsb
push
stos
jbe
and
xor
aas
icebp
std
ffree
jnp
jmp
adc
add
das
cmp
leave
jb
xor
or
lds
xorl
push
lock
sub
fsubrp
fwait
jp
addb
sbb
pop
mov
cmp
es
mov
js
add
mov
pushw
out
sbb
lret
daa
ret
out
and
ja
movsl
and
xchg
dec
xor
aam
les
xor
jecxz
js
adc
sub
rolb
lods
xor
mov
rcl
out
mov
fsubrs
shlb
pop
rorl
inc
add
add
sahf
pop
insb
jp
out
in
jge
cmp
loop
rolb
movsb
sbb
and
cmp
push
xchg
loop
inc
add
dec
sub
add
add
cs
shlb
shrl
lret
mov
cmpsb
xchg
bound
sahf
xor
idiv
loop
js
mov
out
xchg
mov
mov
sbb
mov
movsl
dec
mov
jnp
int3
pop
call
movsl
inc
add
pushw
or
add
jecxz
sbb
loopne
add
int
and
stc
pusha
add
sub
xchg
sbb
popf
rolb
mov
es
fimuls
movsb
ss
pmaxub
adc
xor
inc
add
int
adc
jo
push
xor
xor
sub
mov
sbb
push
and
lcall
cmc
fsubl
xor
lods
and
or
in
add
fstl
dec
int3
sub
push
fsts
mov
mov
mov
mov
mov
repz
test
and
add
scas
in
add
loopne
jg
das
xor
stos
repnz
pop
cmp
out
lock
add
push
rol
movb
xchg
xchg
jmp
pop
mov
mov
sbb
into
mov
mov
in
add
adc
or
fwait
rclb
fs
lahf
xchg
sbb
daa
sub
pushf
inc
adc
imul
xor
arpl
arpl
or
cwtl
dec
movnti
xchg
bound
mov
shll
add
add
ljmp
test
sbb
pop
jg
repz
add
loopne
in
mov
ret
inc
add
adc
mov
cmp
dec
aaa
xsha1
cmpsb
dec
jnp
scas
jb
mov
inc
mov
es
add
mov
and
pop
addb
mov
cmpsb
rcr
repnz
pop
imul
add
clc
fbld
ror
push
jns
enter
clc
fcmovb
movb
add
and
mov
sbb
std
or
daa
adc
and
in
stos
lods
push
xchg
xor
pop
adc
loope
and
add
sbb
add
data16
and
jp
push
hlt
xchg
shll
imul
or
hlt
and
sti
jbe
or
movl
fbld
mov
stos
insb
movsl
mov
push
fstpt
inc
add
sub
mov
add
ds
mov
mov
push
in
pop
jae
data16
mov
push
adc
into
fldt
jge
ficomps
add
or
rcrl
add
cmp
inc
in
add
push
mov
lds
adc
jg
aaa
lcall
dec
cmpsl
mov
mov
lret
mov
fisttps
add
add
ret
inc
addb
dec
dec
or
mov
aad
xor
mov
fdivs
mov
add
pop
test
inc
inc
add
pop
adc
test
cmpsl
dec
jecxz
and
sub
mov
pop
pop
push
icebp
movb
inc
sbb
add
daa
loope
movsb
xor
mov
push
imul
imul
imul
leave
xorl
loop
push
push
les
out
mov
mov
mov
pop
add
mov
std
add
cmp
sbb
and
mov
stc
mov
ss
mov
cltd
dec
bound
mov
sub
stc
and
cmpsl
popf
lock
push
sbb
xchg
sub
lock
add
les
sbb
add
cmpsb
divl
adc
sahf
jno
aad
add
mov
addb
fwait
and
test
sbb
cwtl
ret
les
int
pop
mov
or
jae
daa
and
push
popa
rcpps
in
into
sub
dec
dec
pop
xchg
pushf
addr16
mov
orl
pop
gs
imul
rorl
mov
and
inc
lods
jge
add
add
cli
in
add
out
push
stc
xchg
arpl
rcl
imul
or
test
or
add
mov
cmp
add
inc
inc
add
sti
jo
rolb
and
les
xor
adc
adc
ja,pt
add
and
xchg
mov
popa
loopne
je
movsl
cmp
cmpsb
sub
dec
lcall
xchg
xchg
sub
pop
icebp
outsb
scas
inc
jo
sbb
jne
aam
or
frstor
and
cmp
sahf
push
aas
or
data16
movl
jl
add
pop
mov
pop
xorl
mov
pop
repz
and
and
enter
jae
add
sbb
shlb
or
rorb
adc
push
xchg
in
dec
loope
sahf
icebp
ret
movsb
push
cmc
sbb
add
sbb
mov
add
ret
dec
sbb
add
jmp
jb
inc
add
lcall
xchg
es
mov
add
loop
push
push
pop
aad
or
push
pop
int3
jp
xor
sub
aaa
sbb
outsb
jmp
movsb
ret
pushf
inc
jmp
cmp
fstps
in
mov
fldcw
add
cmp
in
xchg
dec
rep
jae
sbb
push
jp
and
imul
push
cmpsl
sti
fucomi
lret
xchg
movsb
add
pop
or
test
cmp
jecxz
jecxz
xchg
clc
push
add
push
out
pusha
add
push
mov
sbb
mov
inc
mov
lret
cmc
or
addb
xchg
xor
inc
add
mov
mov
stos
enter
or
xlat
jnp
notl
adc
jle
int3
inc
add
scas
fbstp
test
mov
ja
push
or
and
arpl
mov
xchg
mov
rolb
adc
mov
add
mov
lock
out
fucomip
leave
fdivrs
xor
testb
dec
sahf
cmp
inc
xor
insl
dec
lahf
push
loope
xor
add
jno
cmp
sub
add
and
xor
push
add
sbb
or
out
jns
xchg
push
mov
das
imul
xchg
ja
or
push
lahf
rolb
fsubrl
movsb
jne
ss
mov
or
int3
jo
call
insb
inc
xorl
adc
movb
iret
cltd
call
mov
idiv
cmp
mov
lcall
xorl
sahf
inc
test
addb
lock
xor
pop
addb
data16
cmp
pop
push
add
pop
in
cmp
in
in
stos
movb
lea
mov
js
test
add
cmp
int
mov
dec
cmp
pop
push
mov
sbb
das
push
lret
xchg
repz
rorb
push
push
mov
dec
mov
xchg
add
clc
xchg
mov
out
stos
push
les
or
push
cwtl
test
nop
scas
and
ret
addb
bound
sbb
bound
cld
insl
pop
xlat
and
add
cmp
jp
and
lds
hlt
mov
pop
or
pop
push
add
flds
sub
cmp
addl
xor
test
dec
in
pop
je
dec
out
stos
lret
pop
fidivrs
iret
mov
or
sub
rclb
and
dec
bound
add
fsubrs
xor
repnz
shll
push
add
sbb
ja
jl
popa
ror
inc
add
sbb
dec
jne
ret
or
mov
data16
scas
adc
add
push
movsl
mov
pushf
out
stos
sub
lock
bnd
jp
data16
mov
push
add
pusha
add
add
add
push
jae
iret
into
lods
or
jo
add
or
stc
lods
dec
and
jae
add
test
loope
ret
add
popf
fsubl
add
xor
jle,pn
sarl
rorb
decb
mov
adc
sub
stos
lods
lret
imul
fs
push
sti
into
lea
scas
scas
or
mov
jns
mov
jns
cs
test
jo
push
mov
sub
dec
dec
add
mov
loope
xor
add
cmp
jmp
inc
push
aas
aad
aam
lods
cmpsl
popa
add
ljmp
mov
mov
sub
outsl
adc
lds
in
mov
test
add
loopne
int
and
adc
cld
lods
divl
mov
addb
fwait
ja
jno
jecxz
dec
jns
inc
add
xchg
popl
push
jle
outsb
jge
add
pop
fnsave
xchg
pop
mov
push
mov
mov
jnp
pop
lods
sbb
xor
lret
xchg
sub
mov
bound
push
cmpsl
inc
popf
int
mov
cmp
or
add
mov
test
inc
inc
cmp
mov
jo
addb
add
fdivp
clc
out
push
sti
jmp
mov
nop
add
outsb
cld
movl
fists
dec
and
in
out
pushf
std
outsb
movb
aas
mov
add
out
sarb
add
ljmp
inc
add
or
dec
rcl
push
mov
push
sar
insl
insb
int
mov
add
outsl
pushf
fcmovb
add
add
mov
cmp
sub
jns
xchg
clc
xlat
mov
xlat
orl
push
jp
pop
jmp
pop
clc
repnz
into
xchg
adc
add
rcll
add
sub
pop
lret
add
add
cmp
cmp
mov
mov
sti
test
dec
xchg
aas
in
imul
das
popa
ja
fwait
push
lods
xchg
outsb
pop
jl
in
into
int
mov
jno
mov
es
jae
inc
mov
addb
cmc
aad
fists
cwtl
repnz
sbb
data16
mov
outsl
xor
cld
out
jecxz
cmp
addr16
and
jmp
add
sahf
sbb
xchg
mov
cld
movsb
xchg
push
enter
or
psraw
add
sbb
mov
add
push
ss
add
xchg
in
addb
mov
inc
add
rcrb
xchg
lcall
stos
mov
cmpsl
cwtl
xor
mov
movb
mov
aam
fsubs
mov
add
div
mov
adc
sbb
stc
divb
pop
push
inc
jle
loope
movsb
xchg
cltd
lahf
repz
les
ljmp
sub
mov
out
cmp
and
inc
add
cmp
rclb
and
add
int
lahf
dec
lods
mov
stos
data16
xor
popl
popf
xchg
pop
fidivrs
mov
sbb
or
mov
xchg
rolb
pop
xor
sub
add
inc
add
icebp
repnz
dec
xlat
loopne
or
or
nop
pop
sub
sbb
cmp
sahf
sbb
mov
jae
dec
inc
inc
sbb
mov
testb
loope
sbb
fld1
std
sub
aad
mov
add
das
push
lahf
pop
sbb
mov
add
shrb
je
xor
inc
add
add
test
ret
cmpsb
push
push
orl
popf
jl
mov
xlat
incl
mov
pusha
add
icebp
jecxz
cwtl
xchg
mov
xor
mov
mov
into
shl
mov
in
repnz
add
pop
movsl
pop
out
mov
and
add
mov
icebp
shrb
lahf
xchg
sub
shl
push
mov
sbb
ret
and
data16
das
sbb
and
stos
or
mov
fbld
bound
mov
pop
cmpsl
ss
jle
into
pusha
add
xchg
cwtl
jg
jns
cmp
lock
pusha
add
mov
sbb
lret
shll
inc
jns
outsl
sbb
add
iret
aam
or
sbb
imul
jg
or
popf
arpl
push
jp
lea
leave
inc
stos
into
arpl
stc
test
add
clc
inc
add
inc
add
or
loope
dec
in
mov
loopne
in
inc
fldenv
push
dec
aaa
add
data16
nop
pop
jno
std
pusha
add
into
bound
mov
and
jl
push
es
fwait
adc
loop
add
je
pop
in
push
fwait
movsb
ss
pop
mov
nop
push
or
pop
stos
aas
imul
add
mov
pop
inc
fcoms
aad
fsubrs
or
xor
stos
lea
inc
or
cld
hlt
in
iret
dec
push
pop
mov
jl
xor
mov
jg
dec
rolb
fimull
inc
add
add
sti
les
in
mov
add
jle
mov
aad
popf
pop
xor
and
push
jg
ljmp
and
outsb
mov
dec
mov
rolb
xchg
testl
popl
mov
orl
scas
insb
push
cli
pop
adc
test
sbb
mov
mov
icebp
cmpsl
test
mov
ja
mov
hlt
jne
sub
call
add
add
mov
aas
lcall
fsts
sbb
xchg
xchg
rcll
push
add
jne
pop
mov
push
rcll
sarb
sbb
test
and
mov
out
lcall
add
mov
int3
fsubr
test
mov
push
outsl
mov
dec
jno
negb
or
call
and
ds
ret
sti
push
xchg
xlat
enter
add
lret
fdivrs
sub
negb
jbe
inc
add
jo
imul
push
movb
sub
dec
stos
int
cmp
push
mov
test
divb
xchg
pushf
cmc
push
xchg
xor
mov
sub
pop
xlat
xor
lea
daa
loop
rolb
xor
cmp
or
hlt
shrl
in
inc
lret
mov
add
push
stos
push
lret
cmpsl
jne
sbb
cmp
pop
dec
push
std
push
clc
and
cwtl
cmp
rcl
jge
push
pushf
cs
stos
jge
jbe
dec
jecxz
sub
lcall
test
std
jmp
push
push
fstpl
jbe
xchg
cs
add
fistpll
into
inc
inc
gs
out
leave
mov
xchg
xchg
mov
into
pop
add
insb
xor
pop
mov
aad
fdivp
outsl
int
pop
leave
pop
ret
dec
or
add
out
sarl
lds
pop
pop
sub
dec
cmp
pop
dec
add
in
mov
aas
ja
in
movb
xchg
fbstp
std
fisubrs
mov
decb
mov
out
cs
adc
jbe
cmp
mov
lods
aas
cld
push
popl
or
addb
cmp
mov
fbld
inc
add
push
mov
jbe
in
add
add
sar
cmc
or
add
out
mulb
push
jns
or
aam
les
xor
repnz
jge
in
pop
fldt
adc
mov
add
push
xchg
mov
or
dec
cmpl
jbe
add
add
das
mov
add
out
fwait
xor
inc
add
adc
jae
loopne,pt
scas
pushf
adc
pop
imul
movl
push
out
scas
nop
dec
lret
fwait
jl
pop
imul
xchg
leave
push
add
fcomp
and
dec
sub
sbb
sbb
mov
xor
repz
addb
and
mov
ljmp
lods
jb
pushf
or
add
mov
add
pop
icebp
gs
pusha
add
std
and
lahf
addb
and
add
leave
mov
movsb
and
repnz
pop
stos
test
in
cmpsb
nop
addb
add
ficoml
aaa
sub
cli
add
addb
jp
add
movsb
pusha
add
fbld
add
mov
fcompl
mov
icebp
cwtl
cwtl
add
add
dec
mov
push
aam
xlat
ret
popa
push
aam
pop
lock
pop
inc
add
std
ret
test
jge
enter
dec
repz
lea
xchg
addb
cmp
icebp
test
js
jae
mov
mov
lcall
xchg
lcall
in
dec
mov
int
and
and
mov
sarl
mov
fsub
mov
push
movb
jne
push
imul
jne
hlt
inc
ds
out
int3
pushl
mov
push
dec
inc
add
dec
jmp
js
mov
adcl
pop
das
das
fldt
mov
and
sub
add
sbb
addb
lock
push
dec
dec
mov
setae
test
cmp
cmp
jb
fucom
aaa
pushf
mov
dec
sti
popl
mov
outsb
cmpsb
cmp
aad
push
xchg
fcompl
pusha
add
add
pushf
sbb
add
mov
and
xorl
mov
fisttps
fsubs
inc
cmp
pop
imul
das
jbe
jp
out
repnz
rclb
add
add
pop
xchg
mov
xchg
xchg
mov
sub
add
mov
lahf
sub
mov
cwtl
mov
xor
jb
aas
mov
jnp
mov
add
sbb
icebp
sbb
sub
sub
in
fsub
jl
cmp
lret
xchg
cs
sbb
jnp
call
outsl
mov
adc
xor
pop
aam
aaa
std
lcall
sbbl
jno
sbb
fisubrs
add
mov
add
jmp
xor
addl
aam
push
les
lret
cmp
add
add
cld
stos
sbb
cmp
lcall
jo
ror
test
jbe
mov
lret
xor
fildll
xchg
sub
lds
sbb
test
push
pusha
add
shl
inc
cmp
stos
imul
push
out
xchg
movb
lret
sub
add
repz
xchg
push
test
movsl
cmp
cmp
mov
test
push
push
push
push
shll
mov
xchg
je
mov
fwait
and
jno
cmp
push
stos
mov
aad
daa
ljmp
add
xchg
and
stc
in
push
in
jbe
push
add
cli
dec
jnp
sbb
sbb
shrl
mov
add
mov
push
mov
fisubs
test
fwait
lea
aad
lea
mov
add
xlat
mov
ss
add
add
push
jecxz
incb
cwtl
jmp
popf
mov
ret
push
jecxz
cmc
jmp
aas
ja
out
jo
insl
jbe
aaa
or
add
xlat
xchg
sbb
mov
dec
pandn
add
mov
aam
mov
cmpsb
nop
and
lods
cmp
clc
cmp
int3
sub
flds
outsl
js
cmc
aas
pusha
add
push
mov
sub
pushf
sub
xchg
mov
jno
mov
inc
mov
mov
jp
aas
fisubs
mov
ds
xchg
in
add
inc
mov
adc
mov
btcl
mov
sbb
cli
inc
add
push
lcall
shll
out
test
data16
mov
push
addr16
stc
movb
pop
mov
incb
jnp
popf
fiadds
xchg
jno
cwtl
cmpsb
add
mov
mov
sbb
mov
outsl
inc
add
leave
xchg
add
push
sbb
dec
lock
andl
loopne
arpl
js,pt
add
out
push
mov
cli
xor
cwtl
mov
jge
add
stos
test
add
add
movsl
lods
inc
mov
push
dec
xlat
lret
cmp
or
mov
pop
mov
and
or
hlt
js
stos
cld
iret
std
xor
rolb
mov
inc
mov
xor
push
xor
call
add
jbe
adc
lods
mov
int
fwait
aaa
mov
pop
add
xor
dec
scas
mov
insl
loopew
xchg
cmp
add
mov
pop
mov
inc
rcl
pop
push
les
sbb
mulb
fdivrl
jo
add
clc
mov
stos
mov
cmpl
or
loopne
add
push
popf
push
jmp
jmp
nop
xor
insl
push
data16
sub
inc
add
mov
loop
aas
idivl
jbe
jns,pt
stc
pop
mov
out
cmp
pop
xchg
loope
cli
jb
addb
or
imul
add
addb
insb
addb
adc
in
outsb
test
aas
shrl
push
les
jbe
das
xchg
inc
enter
movsb
sbb
inc
repz
xor
inc
add
or
inc
add
add
jp
in
cmp
add
push
pushf
enter
je
aam
cmpsl
xor
rorb
push
add
cmpsl
adc
popf
xchg
xchg
xchg
aad
fs
add
out
push
sub
push
mov
mull
jbe
popf
inc
iret
jl
add
xchg
addb
and
fidivs
sbb
fidivrl
inc
add
aas
adc
sbb
ret
or
inc
add
dec
icebp
insl
ds
and
adc
mov
add
test
add
or
push
int3
mov
mov
cli
xchg
sub
insl
mov
je
enter
rcrl
inc
add
adc
fstpl
lret
insb
insl
leave
dec
gs
divb
or
push
jo
push
pop
xor
push
stc
adc
aam
inc
add
jno
out
scas
lret
add
push
xchg
nop
adc
mov
scas
scas
dec
sbb
pop
mov
jbe
add
aas
popa
sbb
outsl
arpl
aad
jne
mov
jae
add
push
xchg
xchg
jle
fs
bound
ds
pushf
fwait
mov
lods
sub
inc
add
mov
in
xchg
lds
pop
mov
popa
sbb
add
add
or
xchg
into
adc
pusha
add
mov
push
inc
add
xchg
push
sub
fdivrs
in
cli
int3
das
mov
and
js
rolb
adc
add
and
leave
cld
arpl
test
adc
mov
stos
arpl
scas
or
pop
add
lahf
pop
mov
aas
add
repnz
insl
lea
mov
addb
adc
lcall
fst
ds
aas
insb
mov
sub
xchg
jmp
sbb
and
insl
jg
inc
add
mov
addb
insb
push
rcrb
xor
jecxz
xor
xor
iret
ljmp
out
mov
add
cmp
pop
mov
xchg
lock
jne
add
neg
addb
loop
les
ja
imul
loopne
lds
adc
stos
mov
adc
mov
jle
inc
add
ljmp
popf
dec
loopne
inc
cmp
test
push
addl
add
stos
ret
xchg
mov
push
fisttpl
pusha
add
xor
dec
icebp
adc
scas
ja
in
cmp
icebp
push
dec
in
xor
test
mov
add
pusha
add
enter
js
rol
or
fwait
jo
add
adc
repnz
xor
xchg
cltd
mov
int3
call
bound
sbb
lret
jns
mov
add
add
mul
add
mov
xor
fcomip
jne,pt
out
clc
push
mov
dec
sbb
add
ret
push
jecxz
add
and
and
ficoms
sub
clc
mov
std
cmp
pop
cwtl
call
add
push
pop
add
jge
movsl
fcomps
leave
rolb
in
add
cld
gs
add
fcompp
mov
jge
xchg
je
shr
outsb
movb
push
fsubrl
jae
pop
ds
mov
mov
sub
jnp
pushf
loope
ja
call
sub
sbb
mov
test
lea
ja
imul
movsb
xorl
adc
add
sub
das
fadd
add
add
cmp
sbbl
loop
xchg
or
pop
sbb
add
cmp
cmp
stc
add
xchg
into
arpl
cmp
dec
ja
call
adc
push
mov
jno
and
push
dec
in
mov
faddl
lahf
outsl
lods
lock
xor
xchg
std
in
sub
xchg
mov
sbb
dec
cmc
mov
test
mov
fisubrs
xor
shr
scas
jecxz
cmc
out
fbld
nop
nop
push
add
imul
sbb
out
jno
add
jno
push
pop
cwtl
mov
mov
das
testl
clc
push
sub
cmc
fisttpll
ret
sahf
insl
lcall
jg
nop
mov
hlt
jle
int
adc
cs
and
stos
sahf
loopne
pop
clc
clc
pop
iret
jns
fwait
aad
add
je
add
pop
xchg
push
push
push
stc
mov
push
sbb
testl
inc
dec
push
mov
call
mov
add
loop
add
cmp
es
rorl
out
cltd
movsb
iret
xor
in
pop
and
and
ret
mov
mov
movb
lret
leave
push
ficoms
adc
xchg
pop
test
push
shr
and
rcrb
mov
dec
dec
jg
fwait
cli
dec
aad
sub
mov
movb
push
xor
add
jns
pushf
scas
dec
lods
lcall
aad
pop
pop
icebp
repz
mov
in
mov
dec
sub
jno
add
mov
stc
sub
and
mov
sbb
xchg
sub
pop
test
mov
popa
mov
dec
mov
inc
add
in
mov
xchg
cmpsb
xchg
sbb
mov
lock
xor
add
mov
add
sbb
insl
and
sub
dec
mov
clc
movsl
xchg
xchg
jbe
push
push
pop
cmp
jo
and
cltd
popa
movups
sti
mov
addb
xchg
ret
mov
negl
fistpll
popa
pop
jns
mov
out
fcmovbe
xchg
sbb
jbe
bound
jle
loopne
inc
test
mov
sbb
mov
add
fcomi
adc
push
aaa
test
negl
adc
push
sub
rclb
or
bound
inc
add
int3
les
fst
xchg
dec
jbe
outsb
fwait
andl
add
cmp
insb
jb
pop
cmp
inc
jo
shrl
sub
pop
mov
sub
or
add
addb
addb
mov
mov
mov
xchg
jno
add
push
stos
and
xchg
int3
int
stos
or
mov
rcrl
add
rolb
push
add
jmp
xor
aas
and
hlt
mov
xchg
mov
inc
inc
add
adc
pop
and
cmp
dec
lods
imul
pop
bound
dec
pop
mov
mov
rcrl
xor
xchg
mov
and
add
test
imul
pop
and
aaa
lret
sbb
popf
or
test
mov
jge
je
les
jbe
hlt
sub
out
lahf
aas
xor
in
xor
add
mov
jecxz
test
mov
lods
xchg
mov
inc
add
or
lds
cmc
and
mov
push
add
pop
lea
jns
jg
cmp
push
int
dec
ss
fcoml
pop
mov
loopne
aam
pop
inc
add
push
and
mov
pop
daa
push
push
xchg
rclb
mov
fwait
adcl
add
add
jbe
xor
sub
sub
ljmp
xchg
fwait
outsb
bound
jecxz
jmp
push
lahf
mov
fdivl
mov
dec
pusha
add
arpl
dec
mov
add
add
out
mov
repnz
cmp
sarb
push
fstpt
and
cmpsb
scas
or
pop
sub
sub
aas
into
push
movb
mov
iret
xor
ds
sbb
dec
inc
add
enter
adc
nop
cmc
in
add
add
or
mov
subl
leave
and
cmp
vpsubsb
adc
add
xor
jne
scas
xchg
mov
cli
aaa
cmp
enter
or
test
in
insb
ret
push
inc
repnz
out
add
outsb
into
push
lcall
movsl
cld
mov
dec
or
and
mov
xor
mov
roll
add
pushf
pushf
lret
ret
mov
es
cwtl
ret
mov
lcall
mov
bnd
mov
mov
sti
jae
imul
sbb
xlat
in
sbb
add
test
imul
adc
add
gs
jbe
out
add
das
aaa
push
or
add
popf
sbb
cmpsl
or
mov
pop
shrl
adc
fnstcw
repz
mov
shll
aad
es
fwait
xchg
mov
addl
add
ljmp
sbb
out
jecxz
add
ja
mov
push
xor
fst
insl
ret
fwait
add
jg
leave
aam
add
fwait
addb
scas
cltd
out
rcll
imul
dec
pop
adc
ret
adc
lcall
adc
je
jecxz
mov
jl
pop
shrl
dec
sub
jl
cmc
fistl
aas
cmp
imul
xchg
cmp
popl
add
xchg
fbld
add
cli
leave
iret
mov
adcl
loopne
add
lahf
std
lock
das
out
add
pop
sbb
loopne
mov
add
xchg
clc
repnz
xor
stos
loopne
ds
xchg
sti
out
arpl
outsb
adc
adc
fucom
es
pop
add
lods
shl
push
add
jbe
xchg
jbe
adc
ljmp
sar
mov
add
in
lret
add
addr16
mov
out
ja
fdivrs
in
inc
add
addb
xor
inc
out
add
int
add
addb
cmp
push
add
scas
mov
in
mov
es
rcl
data16
daa
fstpl
fsubrl
addr16
mov
iret
xor
jb
add
out
add
in
mov
push
ss
fisubrl
xlat
jne
out
or
push
pop
push
cwtl
popa
push
enter
add
mov
int3
test
addb
movsb
mov
xchg
adc
push
mov
sbb
and
sbb
js
sub
xchg
jbe
inc
add
sub
add
and
fidivrl
pop
je
gs
aam
mov
xlat
out
mov
es
xor
add
fcomps
jb,pn
rdtsc
jns
stos
stc
cs
ljmp
inc
add
inc
add
adc
xor
movsb
xchg
movsl
add
xchg
jae
data16
cmp
pop
jmp
dec
cmovge
add
or
pusha
add
aam
adc
outsl
cltd
gs
in
cs
lds
mov
mov
adc
stc
mov
test
xor
xchg
add
mov
push
fdecstp
pusha
add
clc
mov
cmpsb
jo
gs
inc
add
pop
xchg
dec
push
xchg
icebp
int3
test
xchg
mov
stos
mov
iret
pop
cmp
cwtl
loope
fiaddl
addl
and
push
push
int3
push
inc
cmp
add
sub
arpl
and
adc
aas
not
pushf
push
frstor
add
add
int
mov
into
je
add
jnp
mov
lret
sub
jbe
sahf
cwtl
cmp
pushl
sub
inc
cmpsl
mov
repz
popa
pushf
pcmpgtd
test
into
pop
xor
sarl
notb
adc
filds
cs
imul
add
jmp
cltd
addr16
and
add
inc
lcall
in
sbb
and
add
inc
idivl
add
addr16
xor
pop
loop
es
out
or
add
in
jmp
fcoml
call
fwait
xor
inc
add
sub
mov
add
nop
lock
add
addb
pop
pop
daa
cwtl
xchg
mov
daa
mov
pop
dec
addb
daa
mov
pop
mov
pop
jo
xor
fwait
fadd
insl
out
push
xor
cmpsl
lret
ret
fsubs
push
scas
in
pop
push
es
add
and
add
and
add
push
pop
enter
dec
int
jb
jp
stc
movsb
jno
arpl
and
sub
sbb
repnz
mov
es
ret
xor
inc
add
imul
add
rorl
call
mov
jno
shrb
test
cmpsl
sbb
movsl
mov
add
test
add
stos
lock
push
out
fildll
pop
adc
fldcw
addb
mov
jbe,pn
cld
out
test
xchg
and
dec
xchg
decb
out
xchg
outsb
ja
jg
add
mov
mov
popa
cmp
icebp
les
sub
repnz
icebp
cmp
lds
in
or
push
add
loope
cs
mov
sahf
popf
mov
movb
inc
mov
mov
pop
push
mov
mov
jecxz
lds
jno
sbb
shlb
add
xor
add
jl
jbe
addb
mov
push
ficoml
lds
add
divl
add
popf
outsl
popf
aaa
aad
inc
add
or
addb
cmp
hlt
mov
push
lahf
gs
movb
aam
push
lock
add
mov
pushf
repnz
std
or
add
xor
cmp
jnp
jno
mov
gs
mov
add
movsl
inc
add
push
cmp
leave
imul
jnp
sar
dec
push
test
je,pn
adc
mov
lret
mov
mov
addb
fidivrl
cwtl
xchg
insl
mov
sbb
pop
std
popf
gs
jbe
push
cmp
loop
out
cmpsl
jns
mov
jmp
stc
fdivl
outsb
sbb
inc
sub
push
ret
mov
nop
and
or
adcl
cmp
imul
fiaddl
cs
ss
add
jae
adc
push
mov
insl
cmp
test
movsb
cmp
je
movb
filds
add
push
pop
outsb
mov
cmp
inc
add
lahf
and
and
add
test
inc
add
sbb
mov
in
outsb
jb
lods
sbb
sti
fs
add
sti
icebp
push
add
or
push
shrb
bound
movsb
std
pop
insl
push
rolb
and
aad
push
lcall
or
ja
ds
lock
ds
push
sbb
mov
test
or
lock
fsubs
mov
loop
mov
in
stos
and
scas
cmpsl
movb
add
cli
mov
int
add
xor
popa
lcall
cli
out
adc
xchg
sbb
lock
imul
jnp
mov
inc
add
inc
add
fidivrs
push
sub
xchg
sbb
xor
je
cmp
sahf
divb
lret
or
ret
mov
notb
pop
fcompl
popf
addb
jae
add
shll
adc
add
and
add
addb
mov
lock
leave
movsl
mov
adc
addb
add
and
orl
mov
fmul
mov
xchg
jge
xchg
aad
das
mov
lea
enter
jecxz
ds
out
mov
sbb
xchg
cmp
mov
negl
add
sub
push
and
mov
push
lea
mov
mov
xlat
stc
xchg
mov
lods
les
xor
fdivs
push
xchg
or
xchg
adc
movsb
jns
fucomp
jns
aas
inc
add
cmpsl
mov
leave
je
xor
mov
add
xlat
mov
push
gs
add
mov
cmp
jo
insb
sub
das
xchg
or
in
push
add
inc
add
add
popa
jo
cmp
add
inc
add
push
add
test
sti
jmp
movsb
loop
popf
cmp
jmp
and
movsl
incb
std
inc
pop
inc
xor
sahf
xor
lahf
sbb
or
or
cs
movsb
les
cmpsl
mov
inc
mov
imul
ret
mov
cmp
mov
sbb
or
lret
adc
clc
arpl
dec
add
inc
and
jbe
insl
or
sbb
jmp
sarl
sub
leave
mov
mov
add
add
gs
add
xchg
sub
and
mulb
lods
inc
xor
jno
mov
jl
movsl
mov
filds
inc
add
out
xchg
add
pop
lcall
insb
mov
popf
push
push
clc
or
daa
enter
ljmp
and
addb
inc
push
cmp
xchg
push
stos
and
aad
dec
or
xor
xor
add
mov
push
fwait
push
jno
add
scas
xor
lea
addb
adc
loop
jno
fisttps
stc
xlat
push
insl
lock
add
int
jecxz
or
ja
push
pop
jne
in
ljmp
add
dec
mov
hlt
mov
inc
add
lea
jne
add
cmp
fidivl
mov
pop
xchg
jecxz
mov
inc
sbb
add
mov
jns
cwtl
adc
dec
mov
add
sbb
or
fidivl
ljmp
mov
adc
mov
popw
movb
sbb
das
pop
sbb
mov
dec
or
xor
push
dec
stos
inc
add
or
addr16
adc
ret
loop
neg
lea
dec
xor
jnp
test
mov
inc
add
cwtl
loope
pop
mov
mov
push
call
ret
arpl
sahf
sub
shrb
shll
pop
fstl
cld
xor
jle
les
dec
mull
xchg
cli
inc
out
andl
lods
inc
add
lods
push
xlat
xor
insb
jge
xchg
xchg
push
sub
lahf
push
or
jno
add
inc
add
sub
divb
inc
add
add
mov
mov
xchg
and
push
inc
add
popa
push
add
sbb
jnp
sub
pop
xlat
mov
or
pop
sbb
xor
adc
outsb
out
push
add
out
or
push
imul
ljmp
pusha
add
loopne
notb
xor
inc
add
das
stos
fstps
jnp
cltd
mov
outsb
jb
add
ja
add
sbb
adc
ja
mov
outsb
rcrb
lahf
pop
mov
add
mov
imul
aas
ja
in
ffree
add
jle
insl
and
loopne
add
add
jo
push
pop
nop
movsl
jne
outsb
dec
in
int
out
push
or
fistps
mov
roll
in
lds
mov
cmp
in
insb
sbb
mov
adc
mov
loope
outsb
ljmp
pop
inc
add
push
daa
add
pop
push
test
sub
or
pop
jmp
outsl
fs
xchg
lret
jg
ficoms
lock
pushf
int3
push
xchg
test
out
dec
xchg
xchg
mov
popa
out
xchg
mov
add
aam
add
jnp
roll
xchg
jg
xchg
jae
xchg
icebp
out
fists
inc
jg
add
outsb
inc
add
mov
imulb
and
and
add
cmp
bound
insl
add
inc
mov
push
aad
out
leave
bound
and
pusha
add
inc
cmp
popf
popl
sub
add
mov
add
pop
jns
lea
cmp
fldt
xchg
out
jp
sub
in
int
mov
loopne
shl
inc
xchg
xchg
jle
in
push
stc
add
push
cmp
jne
push
pusha
add
test
sbb
sbb
push
dec
cli
bound
jge
aad
and
xchg
mov
cmp
loop
jno
add
jno
test
inc
add
jae,pn
andnps
add
leave
out
inc
jb
popf
std
lahf
adc
mov
cmc
jnp
pop
xchg
idivl
add
push
mov
cmpl
pop
fadd
fdivl
push
push
fucom
dec
lea
out
mov
add
add
jo
fs
add
push
jno
or
jo
outsl
mov
cmp
into
add
jne
les
imul
decb
mov
popf
mov
xchg
subl
jecxz
add
mov
mov
xchg
jge
sbb
push
fistps
scas
mov
test
adc
add
xchg
mov
je
out
pop
push
add
push
or
add
xor
mov
push
std
push
repnz
bound
mov
jl
xchg
inc
add
or
outsl
xor
add
jl
sub
scas
cmp
mov
cli
xchg
sbb
cld
jg
rcrl
imul
movb
push
cwtl
aaa
and
outsl
jmp
jo
shrl
mov
inc
mov
dec
movb
fmull
add
add
fwait
adc
add
in
add
daa
inc
add
lock
push
push
aaa
inc
in
xor
and
jnp
cmc
gs
push
test
dec
je
xor
add
adc
mov
out
cmp
push
nop
or
add
fistl
lods
mov
add
cmp
lock
ret
fwait
je
daa
sub
fistpl
imul
fmull
int
cmc
les
fs
push
mov
rcrl
stos
test
jg
add
bound
imul
sbb
mov
into
popf
mov
cmp
pop
add
ljmp
popa
jo
inc
repnz
sbb
insb
cli
inc
add
push
xchg
jmp
jns
and
push
fimuls
push
fisubl
xor
cmpsb
mov
aad
lock
dec
into
repz
pop
stc
aaa
out
or
mov
and
sahf
xor
and
cli
dec
ja
into
pop
mov
xor
aam
pop
bound
mov
dec
dec
fimuls
pop
dec
js
mov
dec
imul
jae
jbe
test
xchg
popa
pop
xchg
cmp
mov
push
dec
adc
pop
lret
ret
aaa
ret
jbe
adc
stc
mov
xchg
lahf
scas
fsts
jae
xchg
mov
pusha
add
aaa
xor
enter
add
jge
lret
cltd
pop
cmp
push
push
imul
ja
push
or
pushf
dec
mov
scas
or
xchg
and
or
push
test
bound
cwtl
cmp
inc
add
mov
add
les
mov
xchg
jns
fists
stos
out
pop
cmp
jle
pop
into
leave
hlt
out
and
add
int
and
testb
add
cwtl
sti
jae
or
rcrl
insl
and
cmpl
push
popf
jl
call
sbb
sbb
rolb
sbb
insb
adc
sbb
xlat
adc
push
fimull
icebp
out
or
pop
hlt
add
xchg
xchg
add
sub
cltd
mov
call
and
pop
mov
push
or
outsl
pop
cli
cwtl
lret
mov
ljmp
pop
not
mov
mov
cmpl
mov
inc
fwait
lds
jns
push
push
dec
xchg
push
mov
sub
xchg
and
cmc
call
push
xor
test
insb
xchg
mov
loopne
jmp
push
push
movb
and
inc
imul
in
sbb
dec
cmp
mov
std
outsl
push
add
pop
in
xor
sti
mov
or
outsl
add
mov
pop
xor
jg
pop
sub
aam
add
repz
dec
lahf
pop
sub
sub
es
push
push
mov
lret
scas
adc
stc
or
mov
pop
adc
insl
xchg
inc
pop
je
lcall
adc
jecxz
insl
mov
add
mov
add
cmp
xchg
adc
mov
adc
xor
lods
mov
add
cwtl
test
and
movb
pop
jp
jo
movb
xorl
popf
jecxz
push
inc
add
pop
loopne
mov
xor
scas
std
add
imul
inc
clc
dec
inc
add
jmp
mov
stos
cmp
lods
mov
lods
mov
lock
outsb
mov
mov
fidivl
int3
push
push
mov
xchg
sar
mov
or
rclb
jl
mov
cmpsl
and
add
lock
adc
fs
nop
sti
scas
movsl
push
adc
add
add
lret
xor
jmp
inc
add
dec
int
add
shl
in
fs
sti
pop
mov
enter
out
or
mov
push
lret
movl
imul
movsb
rclb
xor
mov
inc
add
sbb
and
hlt
xchg
aam
dec
pusha
add
add
add
iret
sub
push
mov
add
lcall
cmp
add
mov
add
shll
jp
dec
dec
mov
lods
dec
popf
das
inc
rolb
ja
cs
lods
push
add
add
cmp
pop
and
fiaddl
lock
cmp
add
mov
mov
movsl
jbe
or
inc
fdivs
add
dec
mov
addb
fmul
test
jno
and
fcmovnu
xor
xor
test
leave
pop
mov
aad
mov
or
dec
fcomi
lds
fidivl
dec
cmp
add
cmp
outsb
push
mov
sbb
or
and
insb
mov
and
addb
add
and
inc
add
bound
jp
add
push
sbb
arpl
rcl
xchg
imul
out
pop
pop
jg
lcall
test
hlt
mov
fst
jg
mov
scas
mov
cmp
inc
add
cmp
add
add
jae
sbb
push
mov
rorl
push
mov
outsl
sub
rcl
jbe
jmp
push
imulb
jmp
add
jmp
dec
inc
sbb
fildll
call
fcompp
xor
mov
jae
dec
inc
add
test
jg
or
push
sub
add
inc
dec
scas
mov
jnp
ljmp
inc
leave
xor
add
push
in
imul
aam
int3
mov
pop
adc
insb
pop
loope
add
adc
in
movsl
fwait
scas
adc
mov
push
adc
dec
cmp
into
pop
dec
mov
jmp
hlt
cmp
jecxz
push
jmp
add
xchg
fisttpll
mov
push
jb
loop
sbb
movsb
mov
shll
cmp
inc
jnp
mul
fwait
or
push
jns
sub
and
xchg
and
addr16
inc
xchg
fmuls
mov
mov
mov
leave
out
fs
pop
push
pop
jl
sub
jp
pop
dec
orl
lea
xor
xchg
jo
js
bound
leave
mov
add
repz
into
jae
xchg
rolb
add
bound
or
sub
add
int3
fldt
fldl
add
lea
call
mov
xchg
jns
out
jge
popa
mov
mov
xchg
cmp
and
cmc
lock
pop
into
xchg
addb
or
ja
les
jmp
mov
fsubrl
cmp
lahf
lret
data16
fcoms
icebp
addb
pop
pop
xchg
adc
add
dec
jno
les
add
in
sti
cli
mov
addb
mov
stos
xchg
into
mov
sbb
addb
pushf
push
ljmp
jo
adc
cmp
mov
sti
xlat
in
sub
pop
shl
cmp
sub
repnz
lahf
add
add
cmp
mov
les
popf
enter
add
idiv
cmc
cmp
and
add
mov
adc
cld
sbb
pop
mov
xor
dec
and
add
lock
and
and
lds
mov
sbb
fsts
loop
shll
dec
adc
test
push
add
xlat
roll
add
add
xchg
insb
int3
xchg
mov
scas
in
mov
movb
xchg
xor
xchg
xchg
xor
fisubs
daa
cli
jbe
push
call
test
adc
mov
fs
loopne
cwtl
xchg
daa
insl
pop
shll
push
mov
jmp
add
push
rolb
sbb
add
jbe
jge
ror
adc
mov
ret
add
add
push
movb
adc
flds
in
roll
mov
sub
imul
add
xor
pushl
and
cmp
add
aas
sbb
xchg
js
loopne
dec
stos
sti
or
jge
fldt
pop
adc
add
mov
pop
mov
addb
xlat
adc
jae
cli
js
pop
jg
adc
ret
lahf
popf
cmp
mov
lds
xor
pop
imul
sbb
inc
add
mov
and
fdivrl
xchg
sbb
pop
hlt
gs
ss
adc
push
les
xchg
xchg
call
pop
cs
mov
mov
test
sar
xorl
fldcw
add
add
add
sbb
pushf
cmp
xchg
ljmp
lock
hlt
loop
xor
hlt
push
arpl
xchg
xor
mov
jle
int
dec
inc
add
add
push
imul
loopne
pop
xor
or
lcall
add
pop
testb
mov
mov
add
or
pushf
inc
add
add
or
ss
sbb
repz
pop
sbb
push
jnp
mov
les
add
icebp
push
push
lcall
mov
roll
dec
fwait
scas
mov
add
pavgw
add
lea
or
dec
xor
or
cmp
add
mov
mov
stos
adc
aam
add
outsl
bnd
mov
cmc
mov
test
popf
clc
inc
aad
sub
loopne
decl
cmovle
adc
add
and
pop
sub
js
or
hlt
add
xchg
add
sub
mov
push
jmp
int
jl
inc
pop
xor
xchg
and
arpl
sub
lret
jae
mov
test
jns
inc
test
jp
jle
fldenv
cmp
add
out
add
pop
ror
mov
dec
push
or
or
sub
mov
mov
dec
cmp
and
xchg
sti
mov
jge
stos
fisubrl
add
jmp
mov
dec
in
dec
push
jg
sbb
mov
cmp
add
lock
std
rcll
lret
test
cmp
testb
ret
mov
pop
lcall
add
push
add
push
int
add
lods
js
xchg
jge
pusha
add
and
add
sbb
int
jne
xor
pop
mov
imul
out
fildll
movb
in
sub
mov
mov
sbb
adc
lods
push
rcll
adc
mov
lcall
test
xchg
adc
jmp
repnz
add
dec
into
sub
mov
fldt
sti
jo
inc
add
mov
mov
adc
sahf
cmp
jp
xor
push
push
sysret
fs
stc
mov
add
or
in
dec
pop
loop
sti
imul
sub
xchg
pop
aad
pop
rol
add
jle
mov
dec
fstl
mov
ret
arpl
add
std
imul
fs
lea
das
addb
fcmovne
pop
addb
addb
popf
mov
xchg
pop
mov
mov
push
lea
add
jae
rolb
sub
add
add
cmp
and
rolb
add
add
add
rorl
push
inc
add
add
mov
or
or
int3
test
mov
in
jb
dec
stos
movsl
adc
push
mov
jg
rcr
cmp
ffreep
add
out
jecxz
mov
add
iret
dec
test
movsl
and
mov
inc
add
mov
imull
in
popf
fdivrs
outsb
dec
stos
loopne
inc
add
mov
sahf
mov
daa
mov
cmp
out
adc
add
arpl
sub
jecxz
jp
xor
or
add
mov
sub
push
and
inc
add
dec
imul
shl
add
sub
xchg
adc
not
inc
cmp
add
xchg
insl
data16
imul
and
popa
add
std
mov
ljmp
sbb
jo
jl
add
mov
popa
dec
inc
test
xchg
in
sub
hlt
sbb
or
jns
and
fdivl
cmc
cli
mov
cmp
cmp
fcomps
fsubrs
pop
rorl
sub
inc
lock
xor
fdivs
dec
data16
pop
int3
inc
add
sahf
jecxz
mov
fbld
je
dec
sub
and
fmull
xchg
jne
in
jo
ss
les
cli
add
faddl
inc
cmp
sahf
in
jo
leave
add
jnp
push
and
push
sub
jle
jecxz
mov
add
daa
outsb
in
js
sub
and
jae
xchg
loop
out
cmp
mov
jbe
rolb
mov
inc
add
push
xchg
cmp
testl
jge
dec
mov
sbb
xchg
jge
out
mov
mov
pop
sbb
lods
and
or
lods
add
mov
add
ret
fnstsw
cli
xor
dec
loopne
sbb
out
arpl
mov
sbb
inc
punpckhwd
iret
fdivl
jae
xchg
scas
jl
sub
jo
adc
xchg
pop
sub
push
das
jl
bound
sbb
add
movsl
out
jge
repz
pop
adc
sbb
lods
mov
out
test
xor
test
pop
mov
es
add
mov
mov
jno
sub
sbb
lods
pop
add
out
mov
cmp
hlt
popf
pop
daa
pusha
add
addb
jle
int
je
mov
jle
jg
cmp
aad
add
cmpsb
inc
add
aas
les
fadds
push
sbb
adc
sub
pop
dec
int
pop
dec
xchg
mov
leave
jne,pn
fisttpll
leave
mov
sub
add
mov
sbb
push
mov
add
add
insl
jge
call
cmp
lds
es
mov
pop
int3
or
pop
sbb
pop
xchg
sbb
add
lret
pop
pop
dec
adcl
jo
dec
mov
add
lea
nop
stos
mov
ret
fcompl
lea
cmp
test
xchg
push
lea
fwait
jne
add
ds
lahf
inc
add
loope
stc
or
fcomps
xchg
mov
data16
push
inc
adc
push
pop
in
push
sbb
testl
add
adc
andl
movsl
into
in
mov
mov
push
sbb
add
ret
or
int3
repz
data16
add
push
addr16
push
or
enter
movl
movsl
push
sbb
add
in
pop
adc
arpl
push
xchg
push
mov
popa
out
sbb
imul
jmp
aad
filds
mov
ds
pop
sbb
and
sub
ds
sbb
push
add
pop
mov
rol
add
add
shl
aas
xor
jns
sub
and
imul
imul
sbb
imul
add
cltd
xlat
jecxz
and
jns
sarl
cmpsl
out
or
adc
repnz
or
jecxz
nop
mov
cltd
adc
in
cmc
pop
add
pop
push
add
add
roll
mov
jle
out
add
add
pop
or
and
push
test
subl
jno
enter
inc
mov
ret
addr16
ret
add
cli
daa
mov
add
dec
xor
add
cmp
mov
fimuls
push
test
jg
popa
mov
imul
add
aas
stos
pop
and
movsb
dec
cmp
pop
cli
mov
stos
or
aam
stos
mov
dec
insb
out
fistpll
pusha
add
das
mov
insb
lret
dec
mov
pop
pop
fs
roll
ret
mov
icebp
sub
dec
push
jg
add
add
shll
add
pop
xor
inc
add
scas
dec
dec
cltd
cmp
pusha
add
loope
xor
mov
and
out
add
add
push
push
mov
insb
out
dec
fimull
add
adc
mov
push
add
mov
negb
push
mov
dec
test
cmc
push
sbb
mov
adc
loopne
mov
ret
push
jl
cli
jcxz
xchg
add
int3
cmp
jns
or
test
add
icebp
or
dec
jbe
cli
push
shll
xor
movsb
push
jne
jp
mov
mov
clc
repz
pop
nop
hlt
push
cmp
cmp
jmp
clc
mov
push
pop
ficompl
add
inc
mov
mov
lahf
stc
addb
cli
adc
add
push
add
pop
pop
decb
or
jae
jne
add
mov
cmp
mov
jl
add
sti
daa
es
mov
lods
negl
add
popf
idiv
cld
xor
or
gs
and
int3
aad
push
cmp
inc
mov
pop
pop
or
mov
aaa
push
or
lret
aad
std
setns
leave
imul
inc
add
mov
filds
mov
pop
or
mov
or
add
mov
or
and
scas
inc
add
fld
rolb
push
outsl
xor
aam
jg
or
cmp
mov
mov
add
mov
std
movsb
mov
add
pop
mov
lds
jo
test
cmpsl
fwait
xor
and
sbb
mov
add
cwtl
lret
add
clc
in
xchg
jnp
cld
out
fbstp
movsb
movl
push
xor
pop
je
jae
jno
inc
das
or
std
stos
cmp
add
jnp
ret
jbe
add
insl
in
lcall
in
out
test
fs
mov
add
mov
jp
xor
mov
pop
lea
inc
add
nop
jnp
scas
xor
push
pop
sbb
ljmp
add
les
adc
add
pop
inc
les
mov
test
mov
cld
dec
mov
sarl
cmp
ljmp
sub
jno
cmp
add
pop
xchg
adc
jns
jecxz
add
add
dec
cld
xchg
push
sub
pop
das
shrb
lret
cmpsb
jle
pop
pop
insb
jbe
orl
repnz
or
push
mov
ss
imul
das
pop
shlb
mov
add
popa
cmp
adc
adc
dec
test
pop
insl
cmc
xchg
scas
enter
and
fisttpll
jno
cmp
adc
test
pop
cmp
jne
fidivrl
lcall
imul
adc
outsb
cmp
add
addr16
cmp
into
fldcw
rcr
sbb
and
lahf
nop
jnp
mov
adc
movsb
repz
or
and
stos
fistl
mov
xchg
inc
lret
sbb
cwtl
ds
xor
xchg
popf
in
cld
mov
int3
jge
adc
push
icebp
daa
jge
ss
rcrb
scas
xor
lock
outsl
and
clc
jge
pop
push
add
inc
add
adc
jecxz
fmul
xchg
jb
mov
test
dec
data16
cwtl
lret
hlt
jns
cmpsl
insl
push
mov
add
dec
push
or
cmp
fstps
outsb
xchg
push
and
fnstenv
push
or
cmp
addb
es
push
xor
ret
repnz
lss
xchg
mov
sbb
test
bound
fwait
push
mov
rep
jb
flds
ret
xor
loopne
xchg
pop
and
mov
aad
cmp
or
movsb
clc
adc
add
add
xchg
sahf
das
fs
inc
add
push
sub
leave
mov
aas
call
jmp
ret
adc
mov
adc
push
ret
outsl
or
imul
loop
ret
inc
add
std
in
mov
stc
test
fnstsw
jno
and
loopne
dec
es
shll
add
add
hlt
pop
xchg
repz
jb
and
add
into
adc
xchg
adc
enter
xchg
cmc
iret
fstpl
cmp
movsl
pop
outsl
mov
mov
and
pop
mov
push
roll
add
add
pop
fisubl
xor
add
pop
fs
loop
pop
jle
shrl
xor
rcrb
pop
std
push
test
or
jle
sub
aaa
xor
cmp
loopne
sub
mov
ss
add
dec
roll
inc
addb
and
cmp
sbb
cwtl
cmp
movsl
push
jns
insb
bound
jnp
je
nop
ja
in
lcall
and
int3
sbb
lock
cmp
xchg
inc
jbe
push
add
dec
icebp
pop
lcall
jbe
addb
addb
pop
mov
mov
push
shrl
mov
add
test
out
ret
xchg
mov
adc
add
sub
jmp
daa
xchg
aad
xchg
jb
add
sub
mov
add
push
mov
enter
sbb
add
or
loope
leave
test
clc
into
add
xchg
xor
inc
add
fs
mov
mov
mov
ss
push
add
sahf
data16
outsb
pusha
add
add
mov
insb
mov
mov
lcall
adc
mov
xchg
sub
dec
jge
dec
jp
mov
ficomps
add
ds
add
push
cmpsb
addr16
iret
lret
lods
jne
cmpsb
js
pop
arpl
into
fcmove
mov
jge
mov
icebp
lahf
xor
xor
xchg
test
jecxz
dec
ds
jo
std
sar
pusha
add
xor
add
add
add
std
test
fxch
mov
mov
cmp
add
movsl
cmp
pop
ret
add
mov
sub
movsb
les
ds
cmpsl
pop
test
pop
cmp
cwtl
push
addb
mov
movb
pop
jle
xchg
daa
enter
add
jb
pmulhuw
sub
enter
fcoms
push
inc
add
lods
push
fsin
pop
divb
js
loope
or
imul
adc
mov
add
lret
xchg
mov
adc
les
mov
add
test
rcrl
das
das
fmulp
in
push
rolb
fmuls
push
hlt
xchg
insb
test
adc
push
fnsave
xchg
cld
dec
lods
rclb
sub
or
mov
xlat
stc
movsb
lock
or
dec
adc
xchg
insl
cmp
push
fiaddl
sub
movsl
jmp
movsl
or
jmp
nop
je
pop
inc
pop
int
add
jne
add
repz
add
jg
xchg
dec
or
mov
and
lods
das
lock
mov
fwait
icebp
pusha
add
add
xor
adc
out
push
xor
mov
xchg
xchg
imul
lods
sbb
and
inc
adc
dec
mov
movsb
add
std
test
rol
je
xchg
sub
dec
cmp
pop
scas
lods
in
pop
adcl
popf
pop
and
jne
add
jo
mov
push
hlt
mov
add
push
add
jg
mov
sbb
dec
or
push
lret
stos
es
stos
or
loop
popl
inc
or
int
or
pop
or
push
stos
cmp
stos
cmp
push
sahf
lcall
mov
cmp
xor
sbb
add
sbb
jae
fidivrs
add
push
pop
pop
movb
sub
cltd
mov
lock
insb
and
xor
xlat
mov
push
idivl
inc
add
sbb
sub
testl
aad
cli
clc
push
xor
rorb
loope
cmp
xor
cmp
jae
dec
loopne
push
dec
cmp
loope
push
sbb
cmc
sub
jno
add
push
add
push
repz
out
les
ss
out
int
ss
call
addb
js
push
test
dec
fcmovb
pusha
add
xor
sub
cmp
mov
ja
mov
inc
sbb
jb
or
lods
jle
pushf
cwtl
mov
jns
ret
push
sbb
inc
add
pop
sbb
xor
fistpll
into
addr16
fdivrp
dec
lret
cmp
sub
int3
shr
adc
lret
sub
arpl
test
leave
inc
add
outsl
sbb
stos
xor
stc
add
jbe
cmp
in
add
push
adc
cmp
popa
cwtl
dec
ja
jb
and
add
mov
dec
je
aad
dec
packssdw
xor
and
data16
out
jmp
xchg
xor
mov
pop
sub
arpl
lock
test
xor
or
dec
andl
jl
clc
les
inc
add
int
out
push
and
roll
sahf
insl
xor
mov
popf
daa
mov
mov
dec
fmul
jp
inc
test
and
loopne
sbb
or
test
leave
call
add
es
pop
or
incl
xchg
push
insb
mov
cs
add
addb
sub
fwait
addb
insl
pop
mov
push
mov
mov
repz
int
lahf
lock
enter
add
adc
push
loopne
mov
inc
fwait
cmp
mov
xlat
jp
xor
jl
xchg
xor
lahf
xor
negb
xchg
mov
xchg
or
add
ficoms
add
shrb
into
cld
fcoml
fcoml
test
lret
imul
outsb
je
inc
jecxz
es
and
loop
cmpsl
in
inc
inc
loope
out
add
addr16
or
xor
incl
xchg
xchg
hlt
enter
lahf
mov
popa
int3
xchg
dec
int
add
and
mov
add
dec
stos
pop
xor
xor
add
add
outsl
aas
push
pop
sarb
mov
mov
add
adc
add
nop
nop
push
inc
sub
jae
cltd
in
sbb
insb
mov
push
subl
inc
add
inc
sti
imul
push
adc
fmuls
je
je
mov
mov
pop
mov
cmp
add
mov
cwtl
shr
pop
movb
inc
cld
in
or
add
cwtl
jmp
lods
jp
jne
add
sbb
loopne
xor
sbb
dec
add
pop
inc
add
ret
rcr
pop
sub
add
dec
pop
in
or
xchg
idivb
cltd
mov
outsl
push
scas
sti
cmp
pop
jbe
push
insb
inc
fimuls
aad
add
out
push
xor
out
les
sub
loop
cmp
int3
scas
insb
cmp
fmuls
add
rcrl
scas
or
mov
outsl
bound
jg
sbb
gs
inc
jnp
inc
add
push
in
out
cmp
jl
arpl
sub
adc
notb
xchg
cs
xchg
adc
xchg
and
sub
rcll
lock
jb
sub
dec
jp
and
popa
jle
mov
int
leave
add
lods
orl
fmull
popa
add
divl
add
and
lea
out
push
or
inc
push
push
add
movsb
movsl
test
cmc
shrb
bound
jecxz
fcompp
jbe
adc
mov
loop
jecxz
clc
cmp
push
mov
xchg
outsb
addb
and
jnp
jecxz
dec
sbb
lods
sub
cmp
cmpsl
imul
push
daa
fs
ret
pop
shrl
mov
add
adc
mov
jns
jmp
sbb
shl
in
xor
push
aas
cmp
outsb
sub
jns
cmp
sahf
std
mov
subl
nop
lret
push
cmp
push
add
mov
loop
clc
mov
push
add
push
notl
loop
xor
add
add
std
call
xor
pushf
and
mov
inc
inc
add
dec
shrb
cmp
sub
xchg
cld
nop
add
sub
or
iret
pop
in
mov
outsb
adc
cld
jno
xorl
sbb
mov
movhps
pop
jno
cmc
or
sub
push
mov
ja
lods
ljmp
notb
int3
lods
pop
mov
test
inc
add
inc
movb
popa
ficoms
insb
cmc
mul
lock
add
mov
add
ret
lock
or
ficoms
fwait
lds
jns
add
fdivp
out
cmp
and
dec
ja
pop
mov
sub
je
repz
push
pop
hlt
or
xchg
testl
pop
and
out
ja
std
lds
ljmp
pop
xor
loop
mov
add
xor
xor
jecxz
prefetch
pushf
dec
fimull
aam
mov
lret
pop
lret
sub
arpl
addb
jmp
data16
cmp
jbe
cmp
idiv
out
pop
inc
push
loope
pop
in
add
lret
xchg
push
jae
pop
leave
cld
add
stos
push
sub
xchg
gs
in
push
popf
mov
leave
jns
test
jbe
pop
pop
and
pop
outsb
das
mov
add
test
pop
loopne
test
add
inc
xchg
adc
add
imul
dec
mov
std
sbb
scas
xor
mov
add
movsl
dec
lcall
and
dec
cmpsb
movsl
outsb
push
lcall
pop
pop
outsl
testb
cltd
pop
divb
cmp
mov
push
std
cld
cld
sarb
pushf
push
add
xor
ja
icebp
or
mov
pop
aaa
jl
add
out
je
mov
int3
xchg
mov
jns
xchg
fildll
ficoml
js
add
call
dec
das
sbb
add
lret
in
sbb
hlt
mov
je
ss
loope
test
or
std
mov
mov
and
leave
and
fidivrl
enter
mov
add
jo
or
mov
jl
cmp
mov
push
mov
fdivrs
pusha
add
out
lret
sub
fcmovnb
add
pop
mov
cmp
fisttpl
xchg
mov
add
dec
push
jo
or
outsb
jo
in
aam
pop
mov
xchg
fldt
pop
or
scas
and
in
mov
jnp
addb
adc
js
xlat
ret
mov
addb
mov
jp
das
mov
jnp
push
add
shlb
mov
ret
jl
add
inc
mov
sbb
dec
daa
leave
jae
add
mov
fwait
cmp
cmc
aam
hlt
bound
add
addr16
push
insb
aam
shrb
cs
jle
inc
add
lea
mov
sbbl
call
data16
mov
imul
adc
cmp
xor
lock
ljmp
dec
pushf
rcll
dec
jae
ret
xlat
xor
adc
sar
jbe
in
xchg
and
aam
inc
add
add
in
adc
push
jg
add
xchg
inc
add
xchg
sahf
sbb
pop
fsubrs
and
push
outsl
lcall
mov
mov
add
dec
stos
loope
js
xlat
fabs
jle
int3
in
imul
inc
add
add
pop
stos
dec
ja
insb
fsts
pop
and
dec
jmp
and
das
cmp
cmp
add
jp
out
test
imul
hlt
stos
mov
aas
xchg
jecxz
dec
scas
enter
ds
cld
fwait
ljmp
or
add
ficomps
mov
add
cli
ret
sbb
mov
cmp
ljmp
pop
nop
movsb
xor
sub
sarl
pop
mov
inc
push
int
fisubl
std
adc
mov
cmpsl
scas
mov
aas
lods
jo
push
pop
push
pop
dec
movsl
push
xchg
movsl
mov
mov
jnp
inc
add
dec
mov
cmc
bound
inc
add
cmp
std
rcrb
xchg
enter
and
add
push
movsb
hlt
adc
fldl
loop
or
test
sub
pop
pop
repz
cmp
mov
lds
adc
int3
push
imul
sub
js
push
gs
lret
mov
inc
add
repz
adc
data16
and
mov
adc
xor
js
in
add
adc
pop
xor
xor
cmp
fstp
lods
pushf
dec
roll
ds
and
hlt
sub
test
xor
add
add
or
adc
fwait
sub
leave
sub
sahf
je
mov
int3
mov
add
imul
lcall
decl
sbb
mov
push
add
mov
bound
and
push
in
push
insb
lods
jmp
sub
mov
add
fs
testb
ja
std
aad
jmp
rolb
xchg
fadd
add
int
add
out
lahf
lock
ret
dec
shrl
pop
dec
mov
les
aaa
cmp
scas
adc
dec
lods
lods
add
ja
sub
cwtl
aaa
push
push
into
sahf
push
movsb
xor
xor
mov
cmp
add
pop
das
out
arpl
cmp
push
aam
xchg
pop
add
imul
xchg
push
test
or
fwait
push
cld
in
lods
mov
add
adc
icebp
lods
fldl
sub
push
decl
mov
dec
int3
xor
add
nop
aas
sbb
or
testl
addr16
ret
pop
js
lds
pushf
jecxz
xchg
loopne
sub
add
dec
and
ljmp
cmp
jo
add
pop
popa
xor
add
inc
add
es
xor
movb
movsb
xchg
xchg
lods
iret
mov
add
push
std
push
dec
loope
pop
adc
adc
inc
jp
xlat
xchg
test
jl
xchg
push
fisubl
imul
push
or
jecxz
test
fcomp
jae
dec
jge
inc
jg
ficomps
or
pop
mov
inc
add
ret
and
jo
push
add
fwait
jecxz
push
xor
mov
push
add
mov
idivl
add
int
rolb
xor
mov
daa
sub
lods
scas
xchg
lret
popa
testb
loope
push
mov
into
mov
push
jo
cmp
mov
sbb
pushf
mov
dec
pop
inc
add
push
loop
cltd
testl
mov
pushf
arpl
aad
mov
and
or
jbe
mov
int
push
inc
add
int
xchg
sub
call
and
test
or
push
addr16
add
das
jl
xor
je
lock
nop
in
pop
pop
and
sub
lock
jp
ret
mov
xchg
repz
adc
jle
jmp
sbb
cmpsl
nop
adc
add
jmp
pop
adc
pop
les
inc
das
sbb
lods
sbb
mov
push
pusha
add
negb
jle
or
xor
insl
dec
gs
shll
dec
repnz
mov
outsb
nop
sbb
fisttpl
inc
es
out
in
dec
movb
and
loop
imul
in
xchg
or
ss
lods
xor
imul
add
adc
sahf
mov
out
hlt
mov
nop
movl
pop
adcl
cmp
pop
inc
add
fisttpl
push
lea
xchg
cmp
pop
dec
mov
inc
add
test
addb
inc
add
pop
test
daa
mov
in
jmp
sbb
jmp
addb
add
pushf
pop
insl
insl
dec
es
push
lods
ret
lock
cmpsl
ror
enter
test
popa
popa
xor
das
pop
or
ret
and
add
lret
cmp
or
pop
inc
add
xchg
lret
addb
jb
loope
xchg
ss
movsb
sbb
mov
test
push
add
scas
inc
mov
mov
push
roll
lcall
jg
aad
cltd
mov
add
mov
pop
inc
add
test
push
pop
jno
xor
jae
cmp
outsl
in
lahf
aas
cmpsl
shlb
add
idivl
into
push
mov
fistpll
cwtl
ss
mov
pop
das
out
sbb
inc
cltd
imul
rolb
sub
add
cmp
std
dec
inc
add
mov
jnp
fwait
test
hlt
xchg
mov
lock
and
mov
add
sbb
jg
xchg
call
add
cmp
sub
daa
cmp
ds
xchg
inc
sub
iret
jl
int
xor
jbe
stos
mulb
mov
push
push
icebp
or
in
sbb
addb
sbb
and
repz
push
sub
push
add
sub
mov
add
jo
mov
sub
push
sbb
mov
ss
pop
mov
es
xor
in
push
inc
add
aaa
lods
into
pcmpeqd
dec
mov
sbb
mov
jnp
push
lcall
out
xor
mov
jnp
sub
push
clc
jmp
cmp
in
out
test
ss
and
inc
arpl
into
push
rcrl
xor
lock
mov
add
out
xchg
shr
fcmovnbe
outsb
or
jae
add
add
test
rcrb
scas
mov
stos
addb
mov
xchg
push
xchg
pop
mov
fsubl
in
mov
xor
sbb
lcall
add
sub
je
test
stc
out
mov
outsl
adc
jae
cmp
jnp
das
ds
xchg
test
xchg
pop
aas
cmp
pop
sarl
movsl
sub
mov
rolb
cwtl
mov
mov
cltd
dec
test
sub
xchg
pop
inc
add
aaa
ret
inc
add
hlt
ljmp
out
add
popf
das
xlat
mov
add
jg
std
in
js
loop
aas
mov
mov
sbb
inc
ja
pop
mov
dec
jno
popf
or
fs
xchg
sbb
mov
add
add
fwait
add
sbb
pop
shll
push
mov
mov
add
test
fmull
ret
xor
call
scas
out
xor
xchg
mov
imul
mov
dec
stc
cwtl
lods
aad
das
mov
push
pop
jne
add
int
add
sub
gs
pop
inc
add
xchg
pop
rcrl
dec
rolb
dec
addb
jo
lods
outsl
mov
xchg
push
inc
into
cmp
lcall
adc
inc
add
cli
pop
outsb
push
mov
loope
shl
cltd
mov
mov
xchg
out
jl
sub
inc
mov
out
repz
sub
mov
shlb
movsb
lret
mov
sahf
and
cmp
push
outsb
repz
xor
ljmp
mov
add
xchg
xchg
dec
pop
cltd
daa
mov
lds
add
mov
add
scas
jbe
xchg
lahf
mov
add
sahf
adc
hlt
xlat
mov
ret
push
mov
sahf
scas
das
out
fistpl
jnp
add
dec
jno
dec
imul
jne
outsl
push
sbb
cmpsb
mov
lahf
mov
jg
int3
push
aaa
jge
mov
add
ret
and
xchg
test
scas
scas
outsl
das
sti
mov
add
xor
scas
test
mov
sbb
icebp
inc
add
lret
jo,pt
stos
push
gs
or
pop
cwtl
movl
es
add
cmpsl
test
adc
xor
add
mov
cmp
int3
mov
sbb
bound
sub
scas
das
outsl
faddl
or
mov
mov
or
cmp
sub
push
gs
pop
es
scas
push
or
dec
dec
sbb
negl
push
xchg
scas
or
stc
or
test
movsl
push
dec
test
push
idivl
mov
cmp
sub
add
ret
cmp
mov
pusha
add
and
add
mov
push
lahf
push
outsl
mov
inc
add
cmp
rolb
jne
es
cmp
aas
imul
scas
fildll
fbld
lfs
mov
shll
inc
ja
adc
imul
bound
xor
cmpsl
mov
xchg
inc
aad
popa
push
int
ret
hlt
mov
dec
push
mov
mov
loope
add
dec
addb
cmc
popa
lahf
test
push
mov
xchg
fbld
fs
pop
inc
add
mov
sahf
cmp
sbb
andl
movb
add
sub
bound
in
add
pop
fnstenv
dec
test
push
cmc
data16
shlb
sbb
push
pop
mov
add
nop
mov
addb
clc
add
cmp
mov
lods
jns
add
and
pop
jmp
out
sbb
push
mov
adc
sub
sub
femms
xchg
aam
jno
in
dec
pop
jecxz
add
xchg
je
add
jl
mov
cltd
test
push
inc
add
mov
mov
fxch
je
in
jb
xor
jb
rcrl
jl
lds
sub
jns
clc
cmp
popf
xor
xlat
enter
daa
sbb
jge
cmp
fadds
mov
dec
jg
push
enter
add
sub
cltd
and
inc
add
dec
jmp
mov
sbb
push
cwtl
mov
imul
das
das
jns
cwtl
xor
loop
xchg
or
add
add
fwait
or
adc
mov
fldl
pop
ss
mov
push
inc
add
push
es
and
xor
add
push
add
mov
es
pop
mov
pop
outsl
mov
stos
mov
test
iret
mov
frstor
add
lea
subl
sub
movsb
pop
gs
cld
fiadds
add
xor
xchg
or
mov
cmp
decb
stc
out
sahf
push
addb
and
jae
scas
inc
add
ret
mov
xor
call
movsb
mov
push
inc
loope
or
out
movb
adc
pop
jno
pusha
add
xchg
xchg
jge
sbb
add
add
std
out
pusha
add
push
add
adc
mov
out
insl
sbb
xor
es
xchg
out
push
push
mov
shlb
stos
or
iret
ljmp
ja
mov
fists
dec
mov
dec
xor
or
in
mov
xchg
sahf
mov
sahf
push
jmp
adc
outsb
je
clc
sbb
mov
fsubs
ss
cmc
mov
add
leave
iret
xor
cld
cs
insb
dec
dec
js
inc
add
data16
fwait
mov
and
mov
cmp
rol
add
es
sbb
xor
dec
push
jmp
aaa
test
inc
add
ds
scas
aad
add
fsubl
ja
ffree
dec
xchg
pop
xchg
inc
add
push
sub
add
movsl
imul
add
add
pop
jb
jo
mov
cmp
add
jns
fnstenv
pusha
add
fs
or
push
mov
test
rcl
ss
insb
inc
add
add
mov
rcrl
push
aam
adc
push
test
mov
add
inc
scas
or
stc
sahf
jbe
inc
add
les
outsb
xchg
loopne
pusha
add
sub
add
push
inc
and
add
call
daa
ret
add
sub
or
xchg
push
push
add
pop
mov
add
and
in
incb
add
cli
adc
or
sahf
orl
es
cwtl
in
mov
jg
fisubs
add
jmp
fildll
cwtl
lods
pop
mov
add
dec
cmc
out
shl
xchg
scas
fiaddl
fists
jmp
lret
flds
lds
push
dec
loopne
dec
in
mov
adc
mov
loope
pop
mov
repz
cmp
add
push
sahf
filds
push
dec
mov
clc
ret
enter
ja
or
leave
push
and
cmp
into
mov
hlt
jg
ret
sbb
std
cmp
lods
int3
inc
add
add
jl
mov
addb
add
lods
jb
jbe
in
ljmp
sbb
test
aaa
jmp
or
lods
inc
add
jmp
xor
aaa
pop
inc
test
adc
mov
cmc
mov
enter
sahf
xchg
cltd
fs
add
push
int
call
add
jg
fdivrl
adc
add
pop
addb
pop
or
push
add
int3
xor
popf
xchg
sbb
mov
and
push
xchg
fcmovbe
lret
imul
aaa
pop
jge
sub
push
mov
add
and
sbb
test
out
mov
dec
cmpsb
or
popa
cs
sub
stos
sbb
test
jnp
mov
sub
jecxz
push
out
stc
int
js
cmp
sbb
dec
pop
out
push
add
pop
lahf
scas
inc
add
cltd
or
add
adc
test
jmp
xchg
push
push
mov
enter
fwait
test
add
push
pop
test
sub
fisubs
add
out
pop
mov
cmpsl
loope
fisttps
iret
sar
xor
cmp
leave
icebp
clc
push
dec
cmp
and
inc
add
jns
movsl
push
mov
pop
xchg
xor
cwtl
sbb
jmp
addl
push
add
and
std
movb
in
add
mov
xchg
inc
add
inc
add
add
push
fsub
cs
int
out
cmp
mov
pop
shll
lret
pop
roll
cmp
push
mov
xchg
cli
imul
ret
aad
add
add
imul
gs
repz
fcmovb
movsl
fwait
insb
mov
fstpl
scas
stos
dec
lret
add
sbb
dec
and
pop
push
movsb
leave
sahf
fs
push
add
pop
cwtl
gs
push
mov
adc
cmp
loopne
lds
shl
inc
add
mov
hlt
lods
jecxz
repz
cli
int3
test
pop
push
outsb
addb
insl
lock
idiv
aaa
pop
and
mov
es
xor
inc
add
sub
adc
cmp
dec
int
fbstp
cmpsl
cmp
nop
out
push
sbb
stos
ror
subl
xchg
pop
mov
push
mov
add
pop
jae
pop
add
pusha
add
pop
in
loope
dec
push
pop
imul
in
je
inc
add
icebp
lea
xchg
iret
dec
hlt
dec
ja
xor
push
sahf
add
mov
adc
mov
cmp
cld
mov
lock
adc
jle
data16
pusha
add
daa
push
imul
js
push
loope
jnp
add
and
stc
popa
ss
xor
or
outsb
and
nop
pop
cmp
cmp
dec
mov
xor
or
inc
jno
mov
imul
or
js
add
pop
int
fs
add
out
nop
adc
xor
push
inc
add
sar
cmp
addb
jo
sub
add
xorl
jns
ljmp
mov
lret
pop
cmpsl
mov
add
pop
jno
aaa
mov
lahf
cmp
shlb
fwait
ja
xchg
sahf
pop
cmp
mov
shrb
add
pop
fisubrs
jnp
andl
rcrl
int3
xor
scas
and
icebp
jge
out
mov
mov
and
ds
or
add
add
xchg
lahf
shr
lods
aas
orl
sbb
mov
das
pop
cmpsl
dec
add
push
jge
movsb
in
add
enter
sub
mov
div
test
jnp
clc
inc
imul
popa
inc
add
xor
pop
xchg
hlt
dec
add
notl
les
mov
sub
test
flds
movsl
rcll
jae
or
scas
inc
loopne
add
sub
sub
xor
jns
addb
add
sbb
arpl
loope
cmc
mov
mov
addb
or
enter
stc
aam
add
cmp
js
push
pop
sahf
sbb
loop
add
cmp
lock
les
or
popf
xor
inc
add
mov
movb
sbb
popa
cld
inc
adc
inc
add
sahf
inc
add
inc
add
das
icebp
mov
idivl
adc
rolb
and
cmc
addb
mov
add
gs
mov
imul
mov
add
add
sub
mov
movl
mov
test
pop
shrb
pusha
add
aad
jg
arpl
cld
mov
cmp
js
cmp
pop
adc
ficoms
rorl
loop
push
jnp
fidivrs
clc
lahf
imul
jge
cmp
repnz
mov
scas
mov
push
add
fmull
add
add
add
xor
and
pop
pop
lret
stos
in
stos
insb
pop
mov
jge
insl
leave
add
lcall
and
imul
repnz
fstpt
xchg
ret
inc
add
out
in
mov
call
and
xor
mov
movb
inc
loop
rorl
push
loope
enter
cwtl
push
cwtl
es
add
cmpsb
mov
jle
test
stos
lahf
cmpsb
mov
push
or
or
lods
xor
add
ss
rcl
scas
inc
lret
mov
rcr
imul
adc
sbb
add
xchg
stos
jno
loopne
in
ds
rdpmc
dec
ljmp
imul
arpl
push
int
or
mov
fsubrl
push
call
ret
stos
sub
aad
lcall
or
insl
and
jbe
test
rorb
push
xlat
mov
mov
push
pusha
add
jp
cmpsl
in
popa
jp
jne
mov
add
jecxz
or
pop
dec
jne
cs
pop
lcall
scas
push
add
push
or
sbb
push
into
pop
ljmp
cld
and
and
sbb
add
ret
in
sarl
jge
add
popa
jbe
sub
add
mov
cld
push
cmpsb
or
test
into
cmc
lahf
out
popf
loopne
and
and
sbb
push
adc
sub
mov
rorl
cmp
popa
loopne
push
leave
inc
mov
out
popf
or
or
jnp
cmp
add
ljmp
imul
push
cmpl
outsl
mov
cltd
add
adc
fldcw
or
push
rcll
xchg
enter
mov
mov
jl
cmp
xchg
sub
push
hlt
dec
iret
push
ljmp
jo
jl
shr
ds
push
loope
add
mov
fs
pushf
jp
mov
jge
push
daa
jg
imul
jae
rolb
add
push
lcall
dec
jg
adc
adc
mov
hlt
and
sub
fsubs
mov
add
xor
lods
ds
int
push
mov
add
inc
sub
fistps
mov
add
add
cs
xchg
movsb
test
adc
xor
lea
xor
add
xchg
cmp
loopne
pop
out
fisubrs
mov
lock
adc
gs
add
dec
lods
lahf
sbb
iret
ds
add
shll
xor
xchg
lods
outsb
in
jbe
add
add
outsb
mov
les
stc
push
push
inc
add
mov
fs
mov
and
add
and
sbb
mov
add
mov
je
stos
mov
adc
daa
cmc
pop
mov
mov
jge
and
lcall
push
out
add
out
add
pushf
inc
add
fisttpl
pop
fwait
cs
test
int
in
aam
inc
add
pop
xlat
inc
add
pop
rcr
add
sbb
jb
lcall
and
sarl
add
add
sub
lods
push
xchg
test
xchg
sbb
add
mov
pop
cmp
xchg
daa
add
mov
out
push
or
rcr
jb
cwtl
pop
cmp
lret
and
inc
loop
mov
xchg
in
and
xor
imul
add
pop
aas
mov
add
inc
add
lods
lods
sub
stc
hlt
ja
xchg
xor
pop
xor
aas
xor
add
loope
xchg
mov
mov
insb
mov
pop
hlt
pop
mov
dec
add
js
or
icebp
ret
fsub
or
in
pop
dec
js
add
push
add
outsl
mov
fdivrl
into
dec
xor
adcl
add
sar
jg
jecxz
jne
hlt
dec
jns
int3
shr
outsb
in
into
es
add
inc
test
in
mov
add
mov
mov
cmc
xchg
ret
scas
xor
sub
imul
add
repz
mov
xlat
rcrl
dec
in
gs
sbb
test
movsb
or
push
mov
into
mov
psubusw
xor
test
test
pop
mov
inc
add
das
sbb
dec
mov
in
dec
pop
arpl
test
pushf
cmp
add
call
loopne
std
insb
fcoml
xorl
and
sbb
fwait
std
int3
test
std
js
jecxz
dec
jle
and
jae
das
or
fisubs
sub
dec
jb
cmpsb
lret
pop
xchg
sub
scas
addb
or
pop
push
scas
mov
xchg
add
mov
shrb
es
rolb
mov
sbb
jmp
push
into
xchg
mov
jno
and
aaa
addr16
mov
ds
int3
sahf
jl
jae
sub
call
sbb
out
lods
mov
scas
pop
xchg
mov
inc
rcr
mov
xor
cmpsl
mov
xchg
repnz
mov
xlat
pop
and
cmp
iret
arpl
push
xchg
dec
add
push
popf
adcl
jle
add
mov
jb
add
xchg
out
mov
xchg
and
rcl
mov
pop
xchg
bound
cmp
lret
mov
push
add
nop
push
pop
xor
cmp
les
lods
addb
mov
jmp
jae
inc
add
sub
add
inc
add
mov
mov
sahf
addl
jns
sti
pop
cld
pop
mov
sub
nop
bound
adc
jecxz
pop
dec
mov
add
dec
mov
sub
scas
aam
cmpsl
inc
sub
psubd
test
iret
pop
je
adc
gs
pop
fisubl
scas
fwait
adc
jge
dec
movb
iret
popa
icebp
in
jg
pop
sbb
add
mov
les
lods
adc
inc
add
mov
js
icebp
inc
add
mov
add
ret
sarb
xchg
cmp
sbb
call
clc
repnz
jmp
icebp
fcoms
jbe
daa
aaa
fidivrl
ja
lcall
popl
cmp
sub
pusha
add
popa
inc
sti
iret
and
sbb
aaa
jle
dec
fwait
xchg
cmp
mov
ficoms
addb
outsb
sub
add
in
pop
fsubrs
outsl
out
repnz
sbb
add
testl
inc
add
xchg
lods
mov
add
jecxz
xor
push
arpl
add
jno
repnz
pop
dec
repz
ljmp
mov
pop
xor
shlb
sar
in
repz
outsl
sbb
jmp
push
mov
scas
cwtl
mov
call
push
mov
ret
mov
movsl
mov
push
add
adc
mov
pop
ljmp
fs
jns
movb
add
clc
movsb
inc
imul
jmp
xlat
call
xchg
iret
imul
shr
call
repnz
jno
ss
iret
fstpl
mov
ret
sarl
repz
mov
stos
xchg
jo
inc
push
popaw
rcl
in
sub
dec
sbb
jmp
into
cmp
addb
or
or
cmp
mov
cmc
push
push
cmp
mov
loopne
xchg
aam
loopne
jecxz
mov
mov
out
xor
rcr
sarb
sti
push
imul
or
cmpsb
add
push
push
add
loope
add
pop
movb
negl
inc
stc
cmc
scas
aad
dec
dec
cmp
mov
shrb
sub
jmp
fildl
outsl
shll
ljmp
stos
sbb
pop
movb
add
out
sbb
xlat
mov
aam
inc
or
add
mov
outsb
cmp
into
pop
out
ljmp
loop
xchg
gs
fistpll
fs
mov
fs
out
enter
jmp
nop
pusha
add
push
aad
dec
add
push
aam
and
cmp
add
add
and
mov
add
stc
push
outsl
out
divb
icebp
mov
leave
mov
movsb
outsb
fs
xor
xchg
cmpsl
jmp
cltd
enter
stc
outsb
fwait
fdivrp
nop
addb
fiaddl
add
jnp
fidivrs
mov
cmp
pop
pop
dec
cltd
in
sahf
mov
inc
lea
inc
dec
adc
mov
pop
dec
push
movsb
and
aas
sub
jo
add
setb
subl
aam
shl
push
lods
inc
lahf
mov
jae
add
mov
pusha
add
and
push
sub
push
xchg
lock
push
dec
lret
pop
sub
adc
adc
mov
mov
leave
xor
rolb
jge
xchg
hlt
inc
jo
je
call
jbe
mov
add
adc
rolb
gs
jns
mov
and
dec
fcompl
push
pop
mov
jle
test
shll
dec
cmp
rolb
addb
mov
push
jbe
pop
imul
arpl
call
addr16
push
push
insb
mov
fnstsw
mov
add
movsb
pop
jo
add
push
pushf
or
mov
mov
sbb
popa
pushf
adc
xchg
fwait
sub
inc
add
pop
or
fwait
push
sub
jle
add
add
jmp
jnp
sbbl
je
jnp
into
fidivl
and
adc
cmp
call
adcl
fdivrl
inc
add
jae
cli
pop
mov
out
and
lcall
addr16
add
hlt
fisttpl
pop
ja
xchg
fmul
sbb
or
or
add
or
sub
out
pusha
add
lcall
xor
das
out
rclb
or
sub
out
shl
add
ljmp
mov
add
add
sub
mov
test
imul
cld
push
push
data16
ljmp
cmp
daa
dec
std
out
cmpsb
test
sub
push
inc
dec
add
testb
enter
shll
ja
jo
sbb
add
movsb
aad
hlt
xor
dec
pop
sahf
pop
pushf
sbb
rolb
addr16
pop
push
add
mull
push
add
pop
fimuls
test
cwtl
pop
stc
mov
or
mov
mov
add
cmc
lret
inc
add
push
arpl
pop
imul
xchg
mov
add
inc
add
mov
xor
mov
sub
stos
testb
lods
mov
add
addr16
les
adc
add
pop
add
scas
add
push
mov
pop
dec
ljmp
xor
xor
das
jb
add
push
add
sti
xchg
fisubl
lcall
inc
mov
jl
addb
mov
cmpsl
fisubs
lahf
lods
cmp
negb
mov
dec
push
mov
push
iret
xor
cmpsl
movsl
fadd
dec
mov
repnz
mov
shlb
sub
lea
in
fisubrl
mov
push
add
add
lea
cli
adc
adcl
mov
addb
mov
xchg
mov
add
add
add
movsb
insl
fsts
out
movmskps
arpl
cmp
jle
sbb
sub
or
pop
cmpsl
push
and
leave
test
imul
sub
dec
mov
xchg
icebp
mov
cmpsb
push
sub
dec
jecxz
mov
xcrypt-cfb
cmpsl
mov
pop
xchg
xchg
aas
cmp
add
inc
scas
popf
mov
mov
inc
add
call
add
daa
dec
cmp
or
mov
in
sbb
aam
bound
rcll
addr16
add
ss
imul
push
fnsave
insb
and
sti
mov
cmpsl
dec
icebp
inc
sbb
jbe
cmp
xchg
movsl
add
adc
clc
rolb
daa
xchg
mov
dec
xchg
icebp
adc
xor
add
dec
out
adc
jns
popf
sbb
xor
popa
pop
add
mov
jo
iret
pushf
lock
add
jns
xor
stc
jmp
cli
jae,pn
jg
cmpsl
stos
sub
js
ror
and
lcall
into
xchg
mov
mov
pop
ss
les
mov
sbb
addb
inc
add
cmp
les
movsb
xchg
sbb
jns
sub
gs
jecxz
das
push
add
enter
fisttpll
push
adc
lret
insl
les
mov
popa
sbb
nop
dec
data16
and
inc
outsl
mov
adc
shlb
movsb
sbb
test
add
cmp
cli
add
adc
mov
rolb
insb
push
push
sub
push
movb
sbb
arpl
add
add
push
jno
js
repnz
int
cwtd
movb
or
daa
inc
push
aam
int
add
mov
dec
stc
push
scas
inc
imul
push
jno
mov
xchg
push
add
les
jge
outsb
sub
jnp
lods
arpl
mov
sbb
mov
addb
or
in
adc
clc
movsb
test
add
sub
add
xchg
aas
or
push
bound
js
pushf
sub
push
push
adc
jecxz
ljmp
cmpsb
fwait
out
xchg
pop
mov
lea
in
cltd
lock
cmp
pusha
add
xchg
push
popa
sub
ret
push
insl
xchg
add
add
stos
movb
pop
jo
bound
pop
test
out
xlat
je
fisubrs
dec
inc
inc
addr16
je
jmp
sub
test
fistpl
push
jl
add
mov
dec
rcrl
and
aad
out
js
incl
out
pop
int3
les
add
pop
mov
xchg
mov
adcl
cmpsl
int3
sti
jmp
filds
add
notb
add
xchg
rcll
mov
sbb
icebp
push
jbe
lcall
add
adc
xchg
xchg
xchg
jne
push
sub
js
clc
hlt
mov
addb
ja
jo
and
out
add
mov
cmp
jecxz
add
sub
stc
andl
sbb
adc
add
jne
pop
lret
test
mov
jl
cmc
std
jecxz
je
loopne
addb
ljmp
in
mov
sahf
xor
jns
or
aad
mov
cmp
out
test
insl
xor
orl
xchg
fmuls
add
add
xor
inc
add
add
jl
jne
xchg
and
or
xchg
jge
pop
stos
xchg
aas
push
jg
add
add
mov
mov
add
add
add
jns
push
bound
and
xchg
stos
lretw
aaa
push
cltd
mov
int3
rol
add
xchg
lahf
xchg
adc
cs
inc
out
mov
int3
mov
pop
je
mov
subl
pop
xchg
sub
mov
aad
movsl
jns
lock
sub
sti
loopne
mov
sub
adc
icebp
or
arpl
mov
in
push
xor
jno
jne
stos
in
add
push
sahf
jb
pushl
adc
cltd
dec
lcallw
sub
das
mov
pop
lock
movb
add
cmp
mov
xchg
in
lds
bound
fldenv
dec
rcl
mov
push
sbb
std
xchg
jno
and
cli
sbb
out
mov
sbb
fcomps
dec
fcmove
cltd
and
dec
sub
and
rcrl
add
add
jl
add
jo
push
cwtl
mov
or
repz
push
mov
add
outsl
dec
inc
aad
pushf
mov
dec
cmpsl
bound
fsubs
jbe
cmpsl
hlt
cmp
push
push
adc
dec
sub
and
cmp
xchg
sbb
xor
ljmp
dec
sbb
sbb
dec
add
mov
mov
mov
pop
in
pop
inc
dec
addb
rolb
jl
add
sbb
dec
jns
jmp
dec
sbb
rorl
into
mov
and
aas
mov
push
sub
mov
pop
sbb
aaa
mov
adc
pop
add
out
stos
movb
xchg
in
add
test
jp
pop
mov
or
ljmp
out
les
repnz
adc
loop
fs
pop
sbb
jecxz
sub
scas
daa
mov
inc
out
sbb
rolb
shlb
push
pop
mov
pop
sub
mov
add
add
stos
jmp
enter
inc
add
push
sbb
loopne
in
or
jge
sub
fsubrl
fstpl
pushf
adc
pushf
xchg
xchg
add
mov
out
enter
push
add
inc
add
pop
mov
dec
test
mov
jns
ljmp
pop
cmpsb
and
jle
ror
outsb
xchg
movsb
dec
cmpsb
push
add
fwait
lds
rolb
push
sub
jg
xchg
inc
pop
shl
add
sbb
xchg
and
fcomps
sub
fistps
test
xchg
aaa
jecxz
test
push
add
mov
adc
sub
sub
mov
mov
add
mov
add
xor
jnp
movntps
loope
add
in
mov
movb
or
scas
add
jne
cmp
jge
mov
jbe
mov
gs
clc
sbb
mov
fldenv
test
push
repnz
andl
mov
dec
add
movb
push
inc
add
jecxz
or
jmp
or
cld
inc
js
imul
dec
test
pop
dec
cmp
pop
mov
jns
imul
aam
outsl
sbb
add
xchg
cmp
jecxz
lods
outsl
lret
add
add
xor
jbe
int
push
jge
mov
dec
dec
in
sub
and
out
adc
rolb
stos
out
lea
loope
cmp
shll
lret
mov
loope
icebp
adc
pop
dec
sub
push
cmp
pop
mov
add
add
loopne
movsb
les
and
sbb
jp
lods
out
dec
lods
mov
jle
hlt
aam
mov
movb
inc
add
lods
aaa
push
lahf
and
ljmp
sbb
and
jmp
jle
push
sti
addr16
aam
clc
jne
jb
mov
icebp
cmpsb
out
jmp
jbe
test
int3
mov
sbb
mov
pusha
add
xor
int
add
xor
xchg
sbb
cmpsl
insl
loopne
mov
cmp
cltd
mov
inc
hlt
mov
es
ret
mov
hlt
pop
cmp
add
mov
xchg
or
sbb
add
mov
stos
mov
xchg
pop
sbb
test
add
pop
adc
xor
sbb
popa
xchg
aad
call
ljmp
flds
xor
scas
pop
cmp
push
mov
test
bound
clc
mov
and
mov
add
cmp
addb
add
xor
add
test
lahf
out
mov
add
repnz
sub
and
inc
add
addb
jge
mov
sbb
jne
fwait
inc
add
fdivrs
dec
xchg
cmc
fidivl
rdmsr
cli
pop
pushf
sub
add
mov
sbb
in
shll
dec
iret
mov
pop
xor
mov
popa
cmp
mov
add
push
mov
rorl
adc
jb
loop
out
add
ss
add
xchg
cmp
xor
xor
rorb
push
mov
add
sbb
pusha
add
cmp
xchg
mov
arpl
mov
les
out
aas
dec
movsb
push
jg
icebp
outsl
mov
fldl
dec
aas
pushf
ljmp
inc
push
je
jl
add
in
pushf
enter
jmp
dec
inc
add
and
and
jne
mov
xor
add
mov
push
sbb
stos
or
add
mov
cmpsb
icebp
xor
add
jo
stc
stos
pop
fucomip
push
add
fwait
sbb
jb
jb
out
jmp
lahf
lea
cli
neg
lods
rcll
sub
dec
pop
out
loop
iret
pop
mov
inc
fucomi
repnz
sub
jle
lds
push
add
pop
pop
pop
popa
lahf
pop
mov
pusha
add
jae
lock
cmpsl
jp
add
cs
mov
inc
add
add
sub
add
outsl
add
lcall
insl
adcl
rorl
jge
dec
adc
in
rorb
stos
test
lret
xlat
xchg
leave
ficoms
push
pushf
shl
add
push
lret
and
ret
push
inc
pop
mov
pop
daa
mov
repnz
daa
push
or
push
stos
movsl
sar
or
pushf
sub
fistpll
add
and
jmp
lret
push
pop
xor
add
sbb
and
cli
js
mov
xchg
cwtl
pop
mov
xor
nop
and
sub
jns
add
lcall
ds
rolb
repz
int3
cmc
rorl
ja
mov
xor
jg
mov
sub
jmp
inc
add
xchg
stos
loope
or
addb
es
fwait
popf
pop
lds
enter
mov
adc
xchg
das
sbb
xchg
or
push
add
popa
or
cmp
xchg
xor
stc
adc
shl
pop
and
adc
popl
iret
les
ror
int
rorl
rolb
push
gs
inc
imul
push
push
pop
push
xchg
xor
mov
data16
push
xchg
xchg
aas
fnsave
adc
lahf
or
mov
dec
mov
push
sbb
dec
stc
xchg
testb
aam
cs
aas
mov
test
add
clc
xchg
outsb
xor
mov
push
lahf
xorl
push
xor
and
inc
out
or
gs
dec
pop
cwtl
cmc
sbb
addb
data16
sub
mov
je
jmp
fisttpl
fs
ret
int3
xor
ret
dec
pop
mov
xor
mov
adc
das
es
outsb
pop
cwtl
shll
addb
or
add
sub
add
xor
push
and
jle
jo
or
mov
mov
add
bound
xchg
jecxz
sbb
ficoms
inc
mov
cmp
sbb
xchg
lret
mov
inc
test
rorl
and
sub
adc
cmpl
ja
ds
mov
lea
sub
pushf
jo
mov
cli
sbb
fldenv
repnz
dec
pop
popa
ficompl
gs
pop
int
mov
das
adc
pop
neg
addb
sbb
dec
mov
xor
pushw
lods
sti
aas
repnz
dec
mulb
lea
in
mov
dec
rolb
xor
push
push
xor
dec
sti
int
xchg
mov
int3
mov
or
shl
popf
and
gs
sysenter
test
imul
mov
inc
sub
leave
out
mov
frstor
fsubr
leave
xor
mov
roll
inc
add
xchg
into
sti
addb
popf
nop
aam
jns
movsl
ds
mov
pop
js
repz
imull
sbb
pop
sub
cmp
inc
add
and
pop
outsl
lcall
enter
je
test
cld
inc
test
xchg
cmc
jmp
pop
mov
jo
bound
push
cmp
xchg
lea
daa
or
adc
pop
imul
cld
push
clc
fstpl
aam
adc
pop
or
decl
push
sub
jmp
add
pop
idivb
mov
add
addb
addb
or
ljmp
lret
imul
pop
in
outsb
jg
ja
cmp
xchg
push
into
cmpsl
inc
sbb
mov
insb
and
addb
add
aas
or
jp
cmp
imul
sub
popf
inc
pop
mov
imul
push
lret
movsl
mov
js
sbb
sub
pop
fildl
jmp
pop
daa
sbb
nop
xchg
mov
les
das
enter
adc
aam
addl
clc
sub
lods
rcrb
test
xchg
sbbl
mov
bound
xchg
stos
popa
sub
xchg
mov
or
cmpsl
das
pop
cwtl
jmp
pop
in
jle
shll
add
push
iret
mov
iret
add
ret
cltd
idivl
sahf
sub
jnp
add
dec
and
ficoms
jbe
dec
lret
scas
cmc
inc
add
xor
xchg
lret
shrb
mov
add
jno
mov
out
out
in
ret
cwtl
imul
pop
pop
push
pop
addb
or
cmp
xor
dec
iret
ss
cmp
mov
aaa
push
jp
sbb
push
adc
push
es
int3
repnz
xchg
add
nop
jb
jecxz
repz
xchg
rolb
inc
add
sbb
or
mov
movsb
xchg
jge
pop
jle
mov
add
ds
leave
pop
xchg
pop
aam
add
mov
ss
xchg
jae
add
jnp
aas
and
insl
inc
add
fstpl
inc
lcall
dec
das
adc
repz
adc
or
adc
xchg
out
fisubrs
add
sahf
int
jo
insl
shll
fiaddl
sbb
dec
nop
pop
out
js
xchg
rcrb
pushf
aam
push
mov
mov
scas
mov
xchg
xchg
bnd
repnz
jmp
dec
jecxz
add
imul
mov
add
stos
int
aaa
xlat
cmp
sbb
dec
xlat
add
cmp
cmp
mov
sub
ds
xor
in
daa
orl
add
fnstenv
adc
cmpsb
mov
mov
cmc
jae
mov
xchg
mov
ret
sbb
lock
add
cmc
jae
push
repnz
imul
mov
add
sub
addb
mov
ja
pop
jbe
inc
mov
push
mov
pop
pop
sub
loop
imul
add
and
xchg
and
aas
inc
add
add
jl
xchg
jno
and
rcrb
in
lret
push
lcall
mov
hlt
int3
cwtl
mov
and
das
cmp
cld
inc
xchg
inc
imul
in
adc
pop
mov
lahf
addb
inc
add
in
movsb
rcrl
in
xor
push
mov
mov
pop
inc
add
ss
jo
movsl
mov
inc
aaa
sbb
sar
icebp
nop
inc
fcom
dec
ds
lods
mov
jae
in
sbb
dec
xchg
addr16
cmp
daa
jmp
repnz
test
jbe
mov
add
nop
pop
adc
das
jb
inc
les
pop
insb
in
mov
ss
hlt
cmc
out
cmpl
scas
push
fsubr
mov
xor
jne
sub
icebp
arpl
aas
and
and
push
or
push
incl
mov
dec
jl
pushf
and
mov
adc
cmp
add
dec
aad
filds
dec
gs
sar
add
push
pop
out
pop
pop
imul
add
xor
adc
jecxz
mov
dec
ret
dec
inc
add
pop
mov
pushf
scas
sbb
jae
inc
sahf
xlat
inc
hlt
mov
jo
push
push
cmpsl
aaa
mov
int
xor
mov
jl
fstps
adc
sub
add
pop
pop
mov
das
pop
pusha
add
adc
cmpsl
add
insb
jg
ds
add
in
inc
add
out
add
sub
dec
sbb
stos
enter
add
lret
insb
sub
es
mov
add
lods
sub
push
mov
or
in
mov
cli
xchg
pop
add
enter
or
nop
cmpsl
inc
mov
pop
adc
lea
pop
lock
mov
jmp
mov
mov
add
insb
in
cmc
jl
add
fwait
dec
aad
sbb
lret
neg
jl
aam
cli
lcall
neg
lret
adc
add
add
loop
add
stc
xor
add
add
adc
xchg
jp
push
sub
and
ljmp
mov
mov
aaa
or
das
and
mov
add
jge
and
cmp
xchg
cmpsb
xchg
mov
std
xchg
js
mov
mov
add
test
pavgb
sbb
cmp
or
into
and
stos
push
ret
mov
popf
jl
les
mov
add
sarb
lahf
testb
or
add
negb
outsl
leave
jb
nop
mov
add
sbb
add
push
cmp
fcompl
inc
add
out
xchg
cli
enter
mov
nop
xlat
or
or
mov
lods
insl
outsl
and
push
add
sub
lock
mov
enter
xchg
push
add
fidivl
sbb
push
enter
dec
dec
leave
scas
adc
cmp
mov
inc
ror
dec
xor
int
mov
gs
stc
fcoml
imull
mov
jmp
sbb
test
sub
inc
add
iret
adc
mov
pop
sarb
xor
xchg
dec
add
mov
xor
ss
sahf
popf
imul
add
pop
test
push
mov
orl
fistpl
add
movb
rcr
cmp
lock
fimull
adc
sub
les
in
mov
and
mov
add
mov
jb
inc
pop
and
repnz
sbb
nop
lcall
mov
outsb
std
imul
push
add
sbb
gs
orl
pop
mov
aas
jmp
je
add
mov
xchg
sti
fisubrs
sub
sub
addb
xchg
insb
push
cli
divl
mov
or
addb
lods
xor
dec
jne
push
lea
add
add
lods
out
ljmp
jp
xor
mov
lret
add
push
stc
xor
xchg
ljmp
dec
test
scas
ss
or
ja
add
icebp
sbb
call
das
fbld
and
inc
push
ljmp
pop
add
aas
cs
paddd
loop
dec
scas
das
mov
push
inc
add
daa
sub
dec
dec
mov
jp
push
lock
push
sub
cmpsb
fdivrp
cmpsb
or
pop
movsl
adc
or
or
add
leave
sub
add
insl
adc
fsubs
out
push
test
adc
or
test
sub
inc
add
add
out
add
add
cmp
xchg
ret
sub
jae
push
out
fcos
sbb
add
or
or
mov
xchg
inc
and
out
xlat
cmpsb
dec
imul
cmpsb
push
sbb
jmp
lea
shrl
add
sub
leave
push
arpl
add
add
outsb
sub
cmc
in
sub
inc
mov
and
mov
loopne
dec
pop
sub
mov
push
add
xor
add
mov
cmp
jp
jge
ret
add
leave
fs
sub
pop
pusha
add
mov
cltd
adc
mov
add
mov
inc
add
inc
cmp
outsl
fstp
subl
into
pusha
add
add
roll
add
pop
les
aam
inc
add
add
dec
scas
adc
dec
mov
push
inc
add
pop
mov
rolb
add
outsl
std
or
xor
sbb
fbld
das
fcomps
push
fcoms
mov
lret
jp
leave
ficompl
fsts
pop
jne
push
je
rolb
lahf
rolb
cmp
dec
ja
add
xchg
out
fdivp
std
iret
push
pop
jmp
add
stos
jbe
adc
xchg
add
add
stos
jnp
add
lcall
rol
add
mov
or
push
imul
out
pushf
std
fstp
and
nop
fsubrp
sub
int
add
push
cwtl
add
dec
fnsetpm(287
clc
mov
add
cmpsl
dec
mov
fs
inc
add
mov
lods
inc
data16
cmpsb
in
rclb
aaa
nop
adc
insb
cmp
push
dec
xchg
mov
mov
std
cmp
out
ror
sahf
mov
jg
xor
fbld
sub
and
into
test
mov
cmpsb
aas
push
sub
mov
fists
cmpsb
test
fldl
xchg
or
xor
enter
aas
lahf
push
mov
jge
orl
xor
jne
mov
mov
daa
jnp
xlat
xchg
stc
jnp
dec
fiadds
inc
enter
ret
add
aas
enter
or
in
jbe
pop
dec
movsb
xor
dec
cwtl
lret
add
addb
xorl
enter
fucom
jnp
ret
sbb
add
mov
push
iret
push
xorl
jno
je
add
out
fwait
jbe
outsl
sub
insl
pop
push
mov
cmc
sbb
cs
mov
add
fcmovu
jle
cmpsb
sub
mov
mov
repnz
es
mov
sub
cmc
int3
and
push
leave
lahf
std
and
add
fistps
adc
push
inc
add
dec
clc
data16
mov
dec
mov
inc
mov
lea
cmc
fldenv
add
pushf
mov
adc
les
xor
out
je
sbb
stos
lea
or
inc
in
or
add
cmp
pop
cmp
aas
xchg
add
fmuls
test
jnp
jae
jnp
loope
cld
cmp
std
adc
in
ss
sbb
sbb
xor
dec
xchg
sbb
std
mov
mov
loop
add
add
out
fwait
adc
scas
or
gs
movsl
xchg
inc
or
jae
inc
sbb
stos
gs
aaa
inc
in
mov
es
stos
psubsw
pusha
add
mov
mov
xchg
mov
fwait
dec
cltd
shl
les
inc
add
cwtl
add
xor
call
rorb
and
mov
pop
jo
xor
mov
inc
add
popa
pop
mov
cmp
add
push
xchg
fistpll
stos
es
fs
loopne
adc
mov
pop
and
sar
xchg
adc
and
cmp
or
push
mov
mov
mov
out
lock
divb
mov
add
jb
fidivl
xchg
sub
xlat
dec
mov
int3
pop
pop
test
xchg
ds
cmp
and
bound
ss
mov
mov
mov
dec
mov
or
dec
xor
test
cmp
mov
xor
mov
xchg
xchg
scas
and
xchg
cld
les
xchg
imul
mov
and
movsl
sbb
rolb
fwait
leave
xchg
lahf
test
aam
insl
and
mov
xchg
aad
daa
sub
jae
push
icebp
cld
and
jl
pushf
mov
jo
std
insb
in
sbb
out
jl
stc
aas
ds
inc
pop
cmp
jae
gs
addb
call
insb
jb
popa
sbb
add
jmp
ret
and
adc
cwtl
es
sub
xchg
ficompl
add
stc
xchg
jae
mov
adc
xchg
cmpsl
pop
mov
fcoml
std
and
fdivrl
loop
dec
mov
rol
add
mov
and
out
inc
sbb
or
cmp
jnp
xor
add
add
and
push
mov
xor
insb
fdivrp
dec
in
mov
mov
add
popf
lods
rorl
and
cli
bound
fdivrl
pop
dec
xchg
or
add
lods
jmp
push
sbb
mov
push
les
aaa
das
leave
lcall
push
je
pop
in
shl
add
push
dec
je
or
jge
clc
outsb
fidivs
push
ret
push
loop
add
push
test
ret
add
mov
adc
sub
xchg
pop
cld
push
jge
add
add
fndisi(8087
dec
adcl
push
pusha
add
aas
sbb
mov
and
das
dec
es
adc
jo
cmpsb
and
jne
lahf
dec
inc
add
lds
cmp
add
loop
mov
outsl
dec
jp
pop
pop
ret
and
ss
xor
add
xor
push
add
or
add
add
pop
cmp
sub
push
ret
add
add
fnstcw
jl
rol
in
xor
inc
add
push
jns
ret
pop
push
mov
xor
fdivrp
fwait
xchg
pop
aad
testl
xchg
push
sbb
pop
sbb
cltd
push
inc
add
jbe
mov
add
xchg
inc
dec
push
fcomi
in
add
add
push
or
jae
dec
js
xor
data16
popf
sub
add
xlat
sahf
lods
rolb
add
icebp
in
int3
push
loop
inc
sahf
fwait
mov
xchg
ret
cli
enter
and
xor
dec
into
cmp
cld
fwait
loope
aam
cmpsb
shl
fs
rolb
xchg
push
ljmp
mov
jp
shrl
leave
loopne
rclb
add
inc
mov
pop
push
addb
jl
es
pop
pop
sahf
std
movb
add
mov
adc
mov
mov
add
adc
inc
cmp
mov
pop
and
cmpsl
mov
and
dec
std
ficoms
jns
fwait
sti
sbb
pop
mov
rolb
ret
int
mov
rorb
inc
mov
mov
xchg
pop
pop
sub
add
insl
add
add
add
jp
push
xlat
mov
add
dec
sbb
or
pop
xchg
adc
sarl
repz
fwait
xchg
out
xchg
mov
roll
cmpsl
push
sbb
and
jecxz
scas
xchg
jecxz
dec
enter
push
movsl
cwtl
rcrb
push
fldenv
push
loope
and
sbb
cmp
pop
cmp
ja
pushf
adc
and
arpl
xchg
test
cmp
mov
add
mov
push
hlt
das
inc
mov
mov
add
add
cwtl
iret
sbb
add
jg
add
imul
dec
rcrb
addb
test
pop
inc
add
mov
mov
lods
mov
mov
out
in
lcall
int3
stos
iret
fistpll
sar
adcl
pop
fwait
and
mov
mov
addb
pushf
mov
lods
mov
add
in
and
mov
mov
add
ljmp
inc
add
add
lds
sbb
movsl
push
add
in
mul
mov
mov
test
add
aas
test
mov
mov
int3
je
mov
mov
mov
mov
idivl
lahf
jno
mov
dec
rcrb
push
hlt
mov
add
cltd
lcall
xlat
loope
mov
push
pusha
add
or
mov
cltd
lret
jle
fs
push
sbb
sub
loope
mov
orl
clc
mov
push
fists
mov
std
aam
add
lret
push
pop
js
shl
jne
add
sahf
fimuls
jb
lods
mov
add
push
dec
sbb
cmp
sub
sarl
jbe
shll
mov
push
ljmp
testl
call
dec
pop
jne
fiadds
jo
lods
pop
lods
cltd
jge
sbb
clc
leave
dec
or
jge
jbe
or
mov
lea
push
jg
std
dec
jno
addb
sub
cmpsb
sti
jno
and
in
cmp
mov
and
shlb
mov
sqrtps
pop
mov
mulb
add
xor
dec
js
add
fbld
lcall
adc
inc
sarl
mov
dec
push
movb
sub
add
sbb
push
int
fcmovne
mov
xchg
push
fcompl
lock
rorb
push
jb
mov
sub
sub
lea
inc
enter
daa
jg
jmp
leave
iret
lcall
add
add
nop
clc
or
leave
lcall
add
test
xor
mov
cmp
sub
adc
fistps
mov
pop
xor
faddl
scas
in
shrb
jo
sub
push
test
out
xor
push
call
scas
sbb
and
cs
push
jnp
mov
or
jge
and
popa
adc
mov
lds
jmp
add
dec
ja
popa
addb
mov
add
ljmp
adc
sub
addb
inc
sbb
pop
xor
push
inc
jmp
add
ljmp
pushf
popa
imul
mov
xchg
and
daa
push
add
push
inc
add
cmp
scas
movsl
inc
add
mov
mov
sbb
and
push
and
enter
in
test
ret
cld
iret
dec
adc
call
cmp
mov
push
xchg
lahf
jbe
xchg
out
dec
in
bnd
xor
imul
popf
inc
add
cmp
add
push
jge
bound
pop
sahf
push
jl
cmpl
mov
subl
dec
dec
flds
stos
add
cmc
out
movb
jb
push
or
data16
loopne
imul
addb
add
rep
cmp
inc
add
outsl
icebp
outsl
rolb
push
jbe
sub
sbb
mov
mov
movb
loopne
add
cmpsb
cmpsl
adc
rolb
mov
insb
imul
ja
inc
add
pop
test
lods
inc
add
bound
rcr
inc
add
