int3
je
dec
icebp
pop
inc
out
rolb
rolb
mov
or
add
test
out
jp
add
adc
pop
lcall
push
sub
mov
add
bound
mov
mov
fwait
sub
addb
js
jmp
adc
pop
aas
pop
push
add
sbb
shrl
inc
scas
lcall
icebp
jbe
xchg
mov
hlt
fisubl
pop
fwait
jnp
inc
xor
pushf
arpl
xchg
add
lds
adc
mov
add
sub
aas
sub
add
push
int3
sbb
mov
outsb
lods
dec
addb
mov
mov
mov
inc
add
pop
jno
add
loopne
mov
sub
add
mov
iret
cmp
popa
mov
push
xchg
movsl
jp
inc
cmp
mov
xchg
mov
mov
leave
dec
lods
mov
add
mov
sub
cmpsl
je
scas
mov
and
add
sbb
mov
xchg
jnp
pushf
sbb
add
mov
mov
aam
loop
mov
aaa
jo
mov
call
adc
div
aam
jnp
or
mull
repz
cs
into
cmpsb
mov
mov
add
pop
aad
stc
push
test
add
sbb
rolb
mov
jo
mov
cwtl
xchg
push
jns
adc
mov
add
add
cmp
stc
aam
mov
or
stos
push
test
mov
in
js
dec
cwtl
cltd
mov
sub
sub
add
in
sbb
popa
cld
and
mov
call
mov
call
pop
leave
cmp
rolb
mov
and
inc
add
clc
outsl
scas
push
pop
addb
bound
mov
test
xchg
xor
add
adc
push
rolb
mov
xor
mov
sub
fiaddl
pop
or
push
mov
test
std
add
add
dec
dec
mov
ret
jbe
pop
mov
jl
fildll
pop
sub
ret
mov
add
xchg
cmp
mov
add
mov
cli
xchg
out
add
mov
loope
mov
xchg
mov
lds
popa
stc
push
add
mov
inc
fdivrp
or
xchg
ljmp
cmpsl
sub
mov
bound
mov
adc
sbb
mov
mov
mov
into
mov
test
xchg
pop
and
mov
add
adc
mov
aam
lods
aad
std
mov
ds
jnp
enter
bound
mov
dec
push
int3
inc
xchg
add
pop
out
iret
jno
add
jp
xor
cmp
hlt
or
loope
adc
dec
inc
mov
dec
imul
addb
outsb
sub
cmpsl
loope
stos
fsubs
pop
addb
mov
mov
add
insb
sub
jecxz
cld
mov
mov
lods
cld
pop
pop
js
outsb
pop
add
mov
cmp
cltd
lret
and
pop
mov
mov
mov
add
enter
mov
mov
push
pop
stos
dec
mov
call
mov
jbe
fwait
inc
pop
out
and
fsqrt
mov
adc
mov
outsl
cmp
clc
fsubs
dec
jne
addb
pop
xor
mov
add
and
mov
mov
insb
xor
mov
scas
addb
pop
jbe
in
scas
adc
mov
add
out
xchg
jl
daa
pop
lcall
add
add
and
mov
push
add
out
stos
sti
mov
leave
stos
lahf
push
mov
in
add
mov
mov
mov
mov
insl
adc
mov
xor
out
in
pop
mov
imul
aas
jle
in
insl
rolb
mov
aas
bound
mov
xchg
add
js
in
mov
popf
sub
add
cmpl
into
lcall
add
push
add
nop
add
test
xchg
sub
sti
imul
inc
add
addb
fldcw
xchg
inc
inc
mov
addr16
cmp
pop
nop
add
dec
sbb
movsb
pop
dec
mov
add
dec
mov
push
push
cmp
and
mov
dec
pop
jb
mov
sbb
add
xchg
mov
clc
adc
mov
inc
jmp
inc
nop
add
out
or
pop
cmp
aad
cmp
insl
imul
add
xlat
sbb
and
mov
ffree
add
sahf
jecxz
imul
iret
sbb
imul
adc
bound
mov
mov
adcl
mov
imul
add
push
sbb
aas
cmp
add
dec
lcall
cli
xchg
jmp
cmpsl
fmul
jmp
sub
out
xor
mov
test
shll
add
add
hlt
cmp
and
sbb
pop
addl
aam
imul
fadds
push
add
add
jg
jmp
xchg
outsb
mov
add
lea
xchg
in
pop
and
mov
imul
mov
add
add
add
add
cltd
gs
xchg
in
add
adc
add
and
add
xor
add
push
jmp
xor
mov
xlat
aaa
and
or
pop
jmp
fst
adc
mov
pop
push
fstps
and
sub
je
addb
mov
sbb
std
xchg
nop
add
hlt
sbb
loope
aad
mov
jno
add
adc
sbb
mov
pop
mov
add
mov
mov
loope
test
sub
add
pop
fmull
inc
sbb
or
cmp
aad
and
mov
jne
aaa
test
add
pop
inc
add
pop
or
rolb
mov
leave
push
inc
int3
push
in
cwtl
repz
scas
ret
into
cld
xchg
add
decb
sub
mov
jns
cltd
jmp
lods
mov
andl
mov
cmp
cmpl
adc
mov
in
and
mov
push
and
addb
xchg
push
jno
inc
cmp
xlat
dec
and
mov
jae
sbb
or
jg
fldenv
cmp
out
in
repnz
and
cs
mov
push
js
sub
cld
imul
mov
cmp
xchg
inc
jmp
gs
popf
test
or
rorl
xor
mov
sub
cmpsl
fcoms
mov
mov
imulb
fcmovnbe
add
hlt
pop
popf
xor
mov
test
mov
push
mov
inc
daa
add
push
push
push
enter
inc
xor
mov
sub
mov
or
enter
jl
jecxz
cwtl
mov
mov
push
outsb
mov
mov
add
cld
jns
repnz
mov
fcmovne
sub
das
sub
cmp
add
push
sbb
push
and
aas
dec
in
mov
xchg
popa
test
es
sbb
add
cli
sub
call
add
aas
push
ficomps
jnp
jns
or
mov
cs
xchg
push
ffree
add
pop
xor
mov
cmpsl
fsubp
inc
mov
add
cwtl
les
add
xchg
push
dec
enter
bound
mov
add
add
test
mov
mov
ljmp
add
add
mov
lea
mov
aad
gs
adc
mov
adc
aam
or
add
add
inc
lcall
add
mov
les
cmpsl
pop
cmpsl
mov
adc
mov
mov
inc
imul
inc
add
addr16
fisubs
jb
mov
call
popf
mov
add
jns
add
jle
add
mov
cli
jb
mov
cmp
push
add
mov
xchg
and
mov
add
in
mov
mov
add
or
ljmp
cmp
mov
mov
les
add
add
mov
cld
xlat
or
iret
aaa
fists
add
mov
cli
xor
xchg
xchg
push
xlat
mov
fistl
xor
mov
scas
je
pop
ret
rolb
mov
mov
lahf
bound
mov
rolb
xor
sub
or
add
mov
jmp
pop
adc
mov
cs
mov
inc
lcall
add
mov
sti
fiadds
push
push
rolb
iret
out
bound
mov
mov
loope
mov
in
js
inc
sar
dec
dec
sub
add
xchg
int
add
sti
mov
push
dec
jmp
aad
add
loopne
mov
add
insb
rclb
popf
push
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
negb
loopne
mov
xlat
in
cmp
add
mov
imul
xor
repnz
mov
jns
jmp
in
dec
lods
test
dec
sub
adc
sbb
addb
sbb
inc
add
adc
sub
adcl
mov
sub
out
push
xchg
loope
xchg
add
xor
ja
lea
add
push
add
sbb
sub
pusha
add
cmp
out
pushf
and
andl
mov
mov
add
mov
add
mov
dec
and
xor
add
xor
xchg
aaa
call
rolb
mov
roll
shr
xchg
sbb
cmp
sbb
dec
cld
lret
jmp
sub
sub
or
adc
mov
mov
cltd
xchg
int
ljmp
dec
test
pop
movsb
sarl
mov
stos
sti
push
xor
mov
and
mov
adc
mov
das
cmc
in
dec
and
fists
push
repnz
xor
es
insb
sub
inc
jp
ja
cmp
cmpsl
push
sub
int
dec
xor
outsl
xor
jae
pop
shl
mov
cmp
cli
and
mov
push
add
scas
test
dec
mov
add
mov
inc
add
sbb
sarl
mov
mov
add
dec
lods
into
call
jno
cmp
fstpt
mov
mov
add
lahf
test
jecxz
in
das
add
mov
iret
and
pop
fnstenv
mov
add
or
push
add
loopne
mov
add
jmp
out
push
and
mov
cli
dec
mov
mov
das
push
outsl
aaa
shll
add
pop
aad
pop
lahf
cmp
fnstsw
push
jge
int
add
push
repz
in
adc
pusha
add
pop
lea
add
cmp
fsubl
cmp
scas
push
add
out
sub
mov
cmp
sub
jb
mov
cmp
aaa
or
adc
adc
cmpsl
into
xor
xchg
repnz
mov
out
sub
push
pop
out
inc
outsl
xchg
add
mov
out
or
sbb
push
xchg
stos
push
push
stos
and
add
inc
add
mov
pop
add
pop
out
andl
add
mov
test
add
jecxz
pop
adc
add
notl
jg
push
add
sub
mov
fs
adc
stos
cs
aam
xor
fscale
movsl
push
mov
cmp
and
add
sbb
xchg
jp
loopne
mov
imul
lahf
fwait
xor
mov
lods
push
push
bound
mov
addb
mov
jno
ljmp
enter
fwait
xchg
outsb
aas
loope
mov
mov
lret
into
jnp
add
add
clc
scas
fneni(8087
add
add
arpl
xchg
les
mov
add
int3
sub
add
int
dec
jmp
in
mov
insl
imul
mov
jecxz
jmp
xchg
mov
mov
loopne
mov
je
outsl
movsl
and
mov
loopne
mov
in
test
in
jb
mov
and
mov
and
mov
dec
or
inc
pop
mov
enter
fstpt
add
mov
mov
jecxz
ljmp
mov
jns
int3
xor
xor
in
sbb
add
push
insb
repnz
int
adc
mov
cld
jl
mov
mov
xchg
mov
adc
sbb
mov
and
mov
cmpsb
lds
cwtl
cmc
xor
add
dec
movsl
outsb
mov
rol
xchg
jo
mov
cmpsb
pop
dec
cli
ljmp
jnp
out
add
inc
and
dec
sbb
add
fwait
cs
sbb
add
test
and
in
and
popf
pop
cmp
cld
sub
jo
mov
fsubrp
mov
add
add
push
in
dec
add
push
add
jecxz
lods
ja
add
mov
imul
mov
sub
stos
cmc
sub
in
mov
cmpsb
cltd
test
xchg
add
ss
xor
mov
popa
inc
or
pop
cmpsl
clc
inc
sbbl
lea
add
jge
mov
dec
out
sub
cmp
mov
add
jl
and
std
push
sub
lret
mov
and
pop
sub
and
or
es
sti
sbb
sbb
add
and
pop
pushf
jns
add
mov
mul
lahf
lea
mov
enter
add
mov
cltd
aaa
mov
mov
xor
mov
jmp
jo
mov
fmuls
mov
add
push
es
addb
cmpsb
into
fs
stc
movsb
movd
jge
jp
mov
xor
push
sub
outsl
scas
repz
push
out
xor
mov
and
mov
jne
dec
aaa
xor
movl
cs
lret
mov
aam
xor
mov
add
mov
rolb
mov
mov
mov
add
test
xor
mov
das
es
inc
add
sub
out
add
sub
push
sub
cmp
add
add
ret
adc
mov
mov
add
dec
insl
pop
or
add
arpl
mov
aas
lcall
fildll
insl
xchg
lds
int3
ret
cmpsb
mov
cmpsb
inc
mov
push
inc
sti
adc
push
movaps
adc
mov
mov
add
inc
add
in
shl
xchg
mov
cli
push
add
adc
mov
mov
add
pop
insb
jno
add
mov
in
add
push
arpl
sub
enter
mov
dec
and
mov
add
sbb
lret
sti
pop
test
add
std
scas
loopne
mov
daa
sub
jecxz
fwait
push
mov
fisubrs
lret
mov
mov
scas
ja
pop
mov
xlat
into
mov
pop
pop
in
idivl
push
in
cli
ds
sub
mov
inc
add
adc
repz
int3
insb
out
addb
cmpsb
pop
int3
mov
mov
je
loope
add
xchg
jl
addl
jp
add
test
add
mov
push
xor
mov
cmpsb
scas
insl
mov
call
sub
repnz
in
xor
sbb
mov
add
pusha
add
cmp
xchg
xchg
sub
lock
cmp
push
mov
hlt
aad
cli
push
push
inc
mov
sub
out
rolb
xor
addb
sbb
push
add
mov
push
fisubl
add
notb
cmp
add
push
pop
adc
mov
pop
pop
push
add
movsb
js
mov
add
sub
add
xlat
cltd
sbb
or
mulb
mov
sub
negb
dec
movsl
cmpsb
ret
jne
stos
imul
sbb
mov
and
mov
pop
loop
mov
xor
mov
mov
xchg
sub
inc
icebp
pushl
mov
sbb
adcl
mov
xor
mov
mov
std
outsb
pop
add
mov
xor
mov
rolb
mov
fmull
add
add
mov
addb
rolb
mov
inc
inc
mov
mov
or
clc
mov
mov
mov
sbb
adc
mov
add
mov
fbstp
stos
mov
add
add
ret
jo
mov
js
psrad
mov
inc
cltd
sub
cmpsl
add
mov
ljmp
inc
inc
daa
sbb
add
out
push
lods
jnp
add
inc
jnp
sbb
stc
int3
fldenv
jge
scas
push
sub
push
dec
and
push
cs
das
sub
pop
leave
aad
pop
jno
outsb
clc
out
rolb
mov
dec
mov
mov
cmc
rcrl
inc
inc
add
out
add
add
pop
adc
sbb
jo
mov
add
ret
mov
lock
shrl
scas
mov
insl
push
xchg
out
cli
in
add
je
fildll
rolb
mov
push
loope
push
xorl
sub
mov
mov
push
addb
cli
insb
xabort
aam
adc
mov
push
mov
dec
jge
push
ja
mov
pop
loopne
mov
add
adc
cmp
pop
pusha
add
add
add
outsb
mov
dec
pop
adc
mov
lret
mov
and
mov
mov
add
and
mov
and
add
jp
or
jne
add
lret
push
icebp
xchg
bound
mov
fidivs
xchg
mov
jle
xor
dec
push
jno
add
mov
addb
mov
insl
push
sbb
xchg
sbb
mov
enter
mov
test
in
and
sbb
or
mov
pop
sub
scas
dec
fbld
mov
imul
push
mov
fucom
out
or
mov
insb
sbb
xor
mov
push
sub
mov
inc
jl
mov
add
mov
mov
jg
aad
xchg
add
xor
mov
mov
pop
dec
and
cmpsl
pop
sbb
add
fldt
mull
mov
test
loopne
mov
add
repnz
fmull
xchg
dec
aaa
dec
xchg
or
das
xchg
xorl
scas
test
divb
mov
push
mov
add
pop
xor
jmp
in
test
inc
cwtl
mov
add
cmp
sub
adc
pop
lods
jb
mov
and
sbb
sbb
cmp
jb
mov
roll
add
add
stos
and
sbb
jnp
or
and
mov
jmp
rolb
mov
jne
xchg
cmpsl
das
ret
xor
mov
or
inc
das
lods
rolb
mov
daa
lret
in
cmp
mov
pop
push
lock
cltd
mov
outsl
sbb
das
out
pop
mov
mov
in
sti
and
mov
dec
or
test
leave
out
and
mov
push
pop
cmp
sahf
sub
mov
mov
push
sbb
add
ret
or
lret
push
pop
ds
mov
add
push
pushf
ret
mov
cmp
mov
ficoml
das
push
mov
cli
out
add
add
mov
add
dec
cwtl
adc
push
scas
addr16
addb
xchg
push
mov
cmp
mov
mov
add
adc
mov
mov
mov
inc
iret
ret
xchg
add
mov
ja
sub
int3
scas
pushf
fcompl
add
in
test
push
inc
push
inc
pop
in
mov
movsb
into
or
or
movsb
adc
mov
or
insl
not
add
jbe
add
mov
aaa
mov
movsl
cltd
push
loope
rolb
fwait
jns
add
fwait
cmp
leave
xchg
jnp
adc
mov
mov
sbb
add
cmc
push
mov
mov
je
arpl
pushf
aaa
push
jnp
cmp
mov
fwait
leave
and
mov
mov
ss
pushf
xchg
movsl
loope
add
mov
mov
shl
cltd
in
imul
mov
pop
lret
sbb
enter
rcll
xor
mov
call
call
repz
int3
mov
mov
add
add
fidivl
in
cmpsl
out
leave
add
mov
cld
shll
shll
mov
dec
lret
push
jg
out
scas
in
push
addb
mull
mov
add
xchg
insl
jg
call
xor
cmp
and
sub
inc
xlat
pop
jae
mov
std
adc
sub
sbb
gs
fldcw
mov
inc
xor
add
push
fdivrs
dec
sar
xor
ret
ret
outsl
scas
sbb
loop
mov
lock
out
stos
xor
mov
xchg
add
cltd
inc
fstl
pop
in
cmp
lods
xor
mov
push
add
jae
mov
arpl
xchg
adc
iret
cmpl
and
mov
test
jnp
repz
jnp
pop
push
fchs
add
sub
insb
xor
adc
test
xchg
icebp
out
or
mov
lret
mov
mov
lock
loope
sti
and
mov
jle
test
dec
push
add
pop
cltd
rdpmc
sub
and
adc
mov
inc
out
dec
mov
xchg
iret
push
mov
add
mov
or
clc
cmp
stos
and
mov
mov
mov
fs
add
mov
hlt
rolb
nop
add
add
test
jbe
sub
int
mov
cs
icebp
or
sbb
pop
leave
jae
add
les
mov
cmp
and
mov
sub
call
dec
or
mov
sub
or
mov
add
jae
xor
leave
clc
lea
fwait
or
add
fistl
mov
add
pushf
lds
sub
and
sahf
push
adc
ret
addb
cs
into
sub
lret
mov
aam
or
inc
and
mov
mov
push
cwtl
loop
mov
push
loope
dec
jne
add
mov
adc
pop
mov
sbb
mov
add
insb
and
add
mov
lods
ret
push
icebp
mov
mov
hlt
sub
mov
das
test
inc
push
gs
jno
push
jo
mov
in
scas
mull
push
xchg
sti
mov
int
mov
nop
add
ss
mov
pop
rolb
mov
cs
add
cmc
cmpsb
insb
xor
or
inc
add
icebp
movsb
xchg
mov
or
add
cmpsl
push
and
jae
add
mov
cmpsb
hlt
dec
cmp
add
sarl
add
fcomps
ss
jmp
and
lret
mov
add
push
add
mov
mov
inc
add
and
mov
mov
imul
mov
cmp
add
movl
add
stos
clc
cmp
dec
push
add
mov
add
loopne
mov
sahf
call
mov
push
das
jg
mov
data16
pushf
lods
call
or
inc
dec
mov
add
fmulp
cwtl
cld
ljmp
jmp
inc
push
xchg
imul
arpl
test
mov
flds
insl
repnz
in
cli
xchg
adc
mov
mov
push
call
addb
mov
xchg
add
faddl
xchg
add
sti
out
loop
mov
lret
imul
add
mov
adc
mov
js
enter
mov
mov
push
add
sub
push
and
mov
mov
out
xchg
mov
scas
inc
sub
adc
push
jne
xchg
dec
cltd
sti
test
push
add
mov
sahf
xor
mov
clc
inc
pop
pop
xchg
popf
cli
and
clc
mov
ja
das
adc
movsb
in
mov
mov
mov
lret
push
pop
pop
jae
xchg
add
repnz
mov
mov
or
or
arpl
dec
adc
add
xchg
add
add
lds
roll
imul
lcall
mov
add
outsb
inc
and
mov
rolb
mov
mov
add
inc
enter
inc
add
popf
movsl
lds
rolb
stc
cmpsb
outsb
push
add
push
adc
mov
sti
out
into
mov
imul
sub
pop
sbb
insb
mov
or
mov
mov
mov
iret
mov
mov
fisubs
cmp
dec
ret
mov
jae
jae
rcrl
repnz
cmp
gs
fbstp
or
push
lds
add
add
jge
adc
mov
std
int3
pop
push
cmp
add
adc
mov
mov
jne
add
addr16
addr16
mov
mov
add
sbb
lret
fldenv
xlat
aaa
cmp
stos
xchg
pusha
add
sti
add
mov
lcall
ljmp
cmp
xchg
add
inc
inc
and
mov
add
not
dec
xchg
loop
mov
and
mov
add
add
mov
push
adc
popa
test
out
add
lcall
cmp
lret
fidivrs
add
mov
add
rorl
ficomps
mov
xchg
add
mov
enter
inc
lods
and
or
add
lret
js
dec
mov
push
add
mov
aam
xor
jns
aas
cmp
push
pop
jnp
fsub
cmp
mov
in
mov
jmp
loopne
mov
mov
add
xchg
outsl
or
arpl
add
and
mov
jnp
cwtl
or
dec
outsb
inc
out
cwtl
push
mov
aam
pop
mov
pop
push
add
xor
add
sbb
das
inc
push
neg
lods
out
push
movsb
test
aaa
cmp
push
mov
pop
aam
mov
ficomps
scas
and
mov
add
add
xor
mov
add
xchg
rcr
arpl
dec
sahf
sahf
nop
add
push
outsl
sub
add
xor
add
sub
pop
outsb
or
mov
out
mov
mov
mov
das
push
dec
clc
xor
fsubrs
fsubl
inc
lahf
fucomip
mov
mov
into
fisubrl
call
stos
lahf
int
add
jnp
dec
scas
pushf
lods
insl
and
mov
decl
pop
inc
lret
hlt
rolb
mov
hlt
orl
push
movsl
jno
fs
push
add
jecxz
int
fcomps
sub
xor
addr16
mov
mov
ss
mov
sbb
in
lahf
ret
add
ds
icebp
inc
stc
enter
into
mov
xchg
mov
mov
lock
test
mov
fistpll
gs
roll
mov
add
mov
shll
xor
mov
add
addb
ja
add
cmp
mov
mov
sbb
xor
out
xchg
jns
add
stos
lea
cmp
repnz
popa
out
gs
add
and
es
mov
jae
jecxz
in
int3
cmpsl
fwait
adc
cs
xchg
movsl
dec
push
add
js
xchg
int3
mov
out
pop
add
repnz
push
jl
push
xor
push
adc
negl
sub
add
dec
dec
jg
add
or
push
les
and
roll
cmc
adc
mov
scas
movsl
xorl
add
push
mov
jbe
or
aaa
jecxz
ret
je
push
cmpsl
scas
cmc
ja
xchg
sbb
mov
inc
leave
mov
push
test
add
mov
mov
mov
aad
add
movsl
push
sbb
call
add
cmpsl
pop
xchg
adc
aas
pop
sbb
adc
cmp
test
add
add
add
int3
repnz
cmpsb
leave
dec
mov
divb
add
mov
jmp
xchg
aad
mov
add
pop
jb
mov
or
pushl
xor
pop
cltd
push
loop
mov
popf
mov
mov
add
mov
add
mov
stos
and
mov
cmp
adc
mov
dec
cs
icebp
insl
mov
add
stos
pop
push
in
rolb
mov
aad
nop
add
pop
sar
add
jle
add
in
sub
daa
inc
sti
enter
lret
cltd
xlat
xchg
cs
cli
das
jbe
lea
mov
cld
sbb
mov
add
mov
push
test
mov
mov
push
fnstcw
cmp
jne
add
sbb
scas
add
mov
xchg
add
mov
mov
xchg
mov
jp
add
pop
cmp
fcompl
mov
mov
pop
test
inc
cmpsl
lret
add
add
jmp
add
add
sub
fistpll
cmp
mov
stos
cmp
mov
pop
xchg
jae
add
fsubs
cmp
add
add
cmpsl
leave
add
add
hlt
mov
pop
ja
pop
cmp
mov
mull
bound
mov
orl
mov
in
sahf
jns
ljmp
jl
push
xchg
sbb
xchg
icebp
xchg
cmpsl
es
inc
add
sub
outsl
cmp
mov
or
js
fidivrl
add
push
jb
mov
iret
fists
cli
jno
pop
test
aam
mov
test
mov
mov
clc
pop
loopne
mov
mov
pop
fisttpll
lret
adc
movsl
mov
xor
add
inc
add
inc
add
add
aad
out
arpl
lock
pop
lods
mov
inc
sbb
add
rolb
push
xchg
mov
cmp
rolb
mov
pop
cmp
add
imulb
xor
dec
loope
add
sub
xor
xchg
loopne
mov
cmp
orl
pushf
cmpsl
addb
inc
fidivrl
jecxz
nop
add
add
pop
mov
jo
mov
inc
shrl
fwait
mov
and
mov
rorl
add
mov
add
mov
and
add
mov
add
or
pop
dec
push
add
imul
imul
mov
jae
jmp
cld
fldt
dec
lahf
lods
lods
add
dec
cs
push
fcmove
test
daa
sarl
or
jbe
or
add
add
ja
add
ljmp
ret
jne
in
xlat
cltd
mov
add
mov
in
into
test
add
add
add
addr16
add
and
fsubrs
pop
lods
jns
das
loope
pop
push
or
into
test
cmpsl
xchg
fiadds
mov
sbb
add
outsb
rolb
mov
arpl
pop
addl
mov
mov
mov
clc
push
inc
add
cs
stc
dec
or
andl
push
add
and
mov
mov
cmc
out
adc
fsubrl
xchg
or
into
jae
xchg
mov
mov
mov
inc
fdivrs
jp
jecxz
pop
das
movsb
xor
mov
dec
fldcw
mov
test
xchg
insl
push
add
cmp
dec
movsb
cld
sbb
add
mov
decb
mov
aaa
icebp
imul
adc
aam
or
add
call
jo
mov
add
xchg
xor
mov
cmp
lds
movl
fldenv
sub
fs
in
ficompl
add
jno
mov
dec
out
inc
loop
mov
lcall
push
lret
or
add
jmp
dec
lret
sahf
lret
scas
fstpl
sbb
dec
push
rcll
add
popa
fdivl
mov
jb
mov
push
pop
mov
cltd
push
jnp
aas
cmp
add
add
loop
mov
add
popa
mov
call
shll
add
xchg
lea
inc
aaa
jl
lret
add
das
lods
pop
mov
lock
imul
gs
sbb
add
sub
jns
add
inc
lea
out
xchg
push
add
orl
int3
xor
test
add
addr16
add
mov
add
mov
adc
mov
aas
cmp
cmp
lahf
std
cmc
lret
xchg
popf
fnstsw
mov
fs
sub
jo
mov
lods
mov
mov
mov
gs
adc
or
add
xchg
loopne
mov
les
xor
orl
add
in
in
inc
xchg
repnz
add
in
jne
add
mov
mov
lock
aaa
imul
les
mov
mov
loope
loope
jns
leave
jne
xor
add
movsb
jmp
lock
popa
mov
mov
add
cwtl
add
inc
addb
sbb
outsl
addb
xchg
xchg
dec
add
movsb
push
sbb
push
cwtl
push
popf
rorl
addb
movsb
lret
add
add
adc
js
mov
sub
fdivrl
mov
mov
insl
addb
insl
cltd
std
icebp
xor
cmpsl
jl
add
xor
fidivrs
je
lods
sbb
jbe
mov
add
lock
xchg
add
fcomps
fcoml
cmp
adc
push
jge
cmp
or
xchg
icebp
xchg
push
mov
add
push
mov
sub
stos
ret
inc
rolb
pop
aas
and
mov
inc
imull
xor
sub
ljmp
imull
xchg
gs
ss
jle
xchg
jne
mov
insb
xor
mov
mov
add
neg
add
mov
ficoms
jg
mov
imul
hlt
pusha
add
mov
lret
inc
fs
inc
cmp
add
or
add
add
xor
mov
xchg
jl
sub
testl
sub
mov
mov
add
pop
and
mov
imul
mov
sub
cmpsl
add
mov
add
mov
push
aam
pop
jle
push
neg
in
sbb
xor
mov
fyl2xp1
pop
jecxz
out
mov
lea
into
inc
mov
mov
push
add
or
into
ds
pusha
add
dec
rcrl
lcall
mov
mov
mov
lret
mov
cmp
add
inc
add
jge
cmp
dec
push
mov
and
aad
add
negl
mov
es
ret
dec
add
mov
mov
popf
test
arpl
decl
mov
scas
test
sub
ret
and
mov
mov
aam
add
adc
mov
jnp
lret
mov
sbb
es
sti
por
add
cmp
outsl
out
cwtl
mov
out
jne
jno
add
mov
ret
cld
jo
mov
cli
mov
mov
enter
mov
out
mov
inc
sub
test
imul
add
pop
in
push
push
mov
mov
pop
mov
add
lds
sbb
adc
popf
ficomps
xor
mov
movups
add
adc
mov
enter
hlt
pop
inc
pop
outsb
push
roll
in
sbb
mov
mov
aas
inc
add
add
sbb
fwait
add
sub
adc
addb
cwtl
bound
mov
add
add
ret
mov
lods
lock
cwtl
mov
inc
add
add
stc
aaa
xchg
and
mov
dec
test
add
add
mov
incb
hlt
aas
cmpsb
cmp
enter
dec
jp
stc
jo
mov
jns
push
add
cmp
cmp
jb
mov
hlt
ljmp
rolb
mov
cli
sbb
sahf
or
insl
sbb
imul
scas
adcl
add
popa
es
addb
addb
jmp
add
add
mov
jle
jbe
pushf
int
mov
gs
ds
test
movsb
into
outsl
push
mov
add
or
add
stos
add
inc
je
pop
dec
inc
add
cltd
push
adc
and
mov
adc
pusha
add
sti
ljmp
xchg
sbb
adc
mov
adc
jge
add
pop
sub
push
clc
add
lcall
add
or
dec
cmp
push
and
mov
add
mov
push
lret
ljmp
jmp
add
jo
mov
out
scas
lea
mov
mov
add
add
mov
add
or
add
adc
stos
aaa
or
loope
ret
or
inc
jp
add
mov
mov
add
std
popa
push
std
in
sbb
or
mov
inc
aaa
iret
call
xchg
lret
push
xchg
cld
in
sub
dec
jns
ja
dec
aam
add
mov
add
mov
jae
add
mov
and
cltd
js
lahf
xchg
add
mov
inc
jmp
stos
pop
mov
dec
cmp
es
dec
xor
mov
sub
fwait
nop
add
sarl
cwtl
dec
lcall
pop
or
sbb
jg
add
js
add
fs
outsb
fwait
xchg
lret
lds
jg
sti
lds
imul
movsl
stos
dec
lods
icebp
cmp
hlt
testb
jo
mov
ljmp
add
sarl
imul
cltd
xor
add
pusha
add
sbb
loop
mov
test
out
add
in
jnp
add
jne
sub
mov
jnp
in
cli
sbb
jae
add
js
cld
mov
dec
adc
mov
mov
sbb
and
mov
repnz
xor
mov
dec
push
into
mov
mov
push
add
aam
xor
ret
push
fnstcw
mov
lods
cli
js
cmp
mov
sub
mov
xchg
adc
cwtl
leave
mov
mov
iret
addr16
aam
pop
stc
adc
push
sbb
or
hlt
enter
into
mov
push
xchg
fwait
insb
and
mov
std
mov
hlt
cld
fwait
mov
mov
pop
and
mov
addr16
add
decl
push
lock
out
mov
add
jbe
imull
subl
push
ljmp
gs
data16
push
add
repz
dec
icebp
dec
mov
pop
pop
push
mov
add
lock
out
fucomip
lods
popa
inc
add
movsb
in
mov
sub
test
inc
add
add
icebp
aad
add
mov
loope
into
xchg
jecxz
push
push
add
mov
sub
dec
mov
js
push
inc
add
imul
xchg
add
and
icebp
pop
mov
mov
add
not
add
testb
push
sub
in
in
xor
mov
add
out
fwait
repz
ss
add
mov
rolb
int3
les
nop
add
mov
in
addb
loope
gs
inc
add
add
add
add
pop
jns
push
arpl
sub
mov
add
dec
pusha
add
xor
mov
jnp
iret
or
add
es
dec
ret
cmp
add
mov
pop
sbb
lcall
gs
jo
mov
stc
rolb
push
jno
cmp
add
andl
bound
mov
mov
dec
mov
cmp
and
or
addb
ss
bound
mov
push
add
pop
inc
lock
fnstsw
lcall
popl
mov
xchg
jnp
adc
mov
xlat
xchg
add
mov
out
adc
mov
jge
das
mov
jbe
add
test
lods
push
icebp
cmp
lahf
mov
add
dec
subl
sbb
xor
and
mov
jnp
xlat
movsl
mov
cmp
inc
mov
mov
add
pop
sbb
fbstp
int
cmp
jl
mov
mov
mov
mov
add
insl
fwait
sub
pop
adc
imul
add
mov
xchg
test
scas
xchg
leave
pushf
fidivrs
out
cmpsl
push
add
mov
cmpsl
or
inc
cli
bound
mov
rdmsr
add
mov
inc
jb
mov
dec
mov
pop
aad
adc
addb
jb
mov
mov
or
cmp
inc
arpl
xchg
cmp
loopne
mov
jb
mov
ja
xchg
into
mov
divl
loopne
mov
xor
mov
add
or
je
jns
adc
mov
push
mov
mov
das
xorl
out
add
adc
fstp
addb
clc
pop
ficompl
mov
into
cmpsl
in
dec
add
leave
js
sub
add
inc
add
out
mov
pop
inc
add
xorl
hlt
ljmp
das
pop
out
or
test
daa
sbb
out
pop
shll
movsl
pushf
jb
mov
sbb
fisubl
mov
jo
mov
add
stos
mov
jns
lock
mov
xchg
add
xor
and
int
repz
xor
jmp
xchg
fs
push
jecxz
sahf
mov
in
sbb
jmp
mov
out
inc
jmp
dec
mov
mov
mov
sbb
lret
mov
mov
add
jne
mov
das
push
aaa
jb
mov
das
and
mov
add
mov
into
pop
adcl
inc
loopne
mov
add
addb
rolb
mov
dec
xlat
scas
cmp
faddp
incb
mov
loope
or
mov
add
aad
or
xor
mov
mov
ljmp
jp
add
add
mov
add
mov
mov
mov
cmp
out
cwtl
ret
dec
insl
mov
and
jg
or
movsb
pop
add
rolb
mov
out
adc
pop
jg
xchg
cli
int3
sub
xor
mov
incl
inc
mov
fidivrs
ret
rolb
mov
dec
insb
js
xchg
inc
stos
pop
repnz
mov
mov
popa
dec
fpatan
sub
loopne
mov
mov
popf
cmp
mov
add
xchg
or
mov
mov
fldln2
mov
fucomp
add
jmp
mov
sbb
sub
xor
add
inc
xchg
lea
sbb
popf
xchg
pop
divl
push
fimull
sbb
cmp
lock
add
pop
outsl
movsl
loop
mov
adc
adc
aas
pop
lods
out
sub
subl
scas
cmpsl
movsb
pushl
mov
cmp
pop
mov
mov
add
mov
lea
mov
mov
add
scas
rolb
lahf
mov
mov
dec
mov
leavew
int3
getsec
jb
mov
mov
sub
iret
mov
jg
mov
mov
add
and
or
sub
cmp
lods
out
test
sbb
stc
pmulhuw
mov
pop
sbb
xlat
test
rolb
mov
cwtl
fldenv
popf
popl
les
push
add
xchg
mov
mov
mov
and
push
add
jae
addr16
dec
and
and
xor
test
adc
pop
push
inc
ret
mov
add
rolb
mov
sub
jbe
ja
xor
mov
aad
xchg
add
pusha
add
add
cld
xchg
notl
data16
jae
mov
xchg
add
mov
sti
mov
add
movsl
es
pushl
add
sti
adc
movsl
outsl
adc
mov
add
adc
fldz
fmull
arpl
xor
mov
xor
call
mov
cmpsb
sarl
into
stos
out
rolb
pop
lods
imul
jmp
cmp
gs
fistpll
jns
lock
or
pop
loope
pop
icebp
int
xor
mov
add
xchg
movsl
and
leave
leave
cmp
pop
jge
add
orl
cltd
or
add
cmc
pop
ja
add
add
pusha
add
jmp
rolb
xor
mov
scas
add
subl
js
xchg
fwait
mov
test
bound
mov
roll
inc
push
mov
aaa
fimuls
and
mov
xchg
dec
sub
inc
cld
sbb
fbstp
mov
pop
scas
add
mov
sub
sbb
pushl
mov
in
pop
out
xchg
jecxz
and
mov
add
stos
cmp
add
jnp
mov
es
mov
cmp
pop
jbe
cltd
xchg
or
icebp
jns
mov
insb
ljmp
js
icebp
jle
aam
add
add
outsl
mov
inc
jne
in
add
in
lds
xchg
cmp
add
in
fisubrs
mov
inc
adc
mov
sbb
add
dec
shll
mov
orl
or
std
in
les
rcll
in
aaa
mov
lds
into
aam
scas
xchg
push
push
push
pusha
add
add
mov
xor
pusha
add
xor
inc
add
add
mov
or
mov
pushf
mov
pmullw
incb
or
pop
mov
mov
add
xor
pop
cmpsb
lock
mov
cs
test
stos
sahf
push
into
idivl
rolb
mov
scas
jmp
jbe
adc
cmpsl
adc
add
es
fidivs
pop
sbb
pushw
add
out
loop
mov
call
ss
add
dec
xlat
pusha
add
mov
jo
mov
mov
sbb
cmp
addr16
loope
pusha
add
lea
aam
loopne
mov
mov
or
idivb
mov
xchg
jbe
add
mov
push
les
cmp
sbb
jno
test
add
cmp
add
inc
add
mov
add
mov
mov
jecxz
and
adc
pop
test
inc
sub
mov
add
add
mov
pop
push
mov
dec
sbb
xor
and
jmp
push
add
add
pop
sub
add
fcomp
pop
lahf
jp
lods
addb
jb
mov
mov
add
cli
jge
shll
adc
mov
filds
in
imul
scas
les
aam
cltd
xlat
cld
rolb
mov
addb
xor
mov
mov
dec
rolb
mov
mov
add
mov
mov
out
mov
rolb
mov
mov
add
jl
mov
ficoms
add
and
mov
out
ds
psubsw
daa
lea
inc
insl
fisubs
push
rcrl
dec
xchg
push
mov
in
test
add
fs
fnsave
std
mov
sbb
clc
pop
iret
dec
insl
xor
mov
call
mov
cmp
cmp
pop
test
fldcw
add
jmp
cld
cmp
xor
mov
inc
into
stos
jno
inc
int
mov
repnz
mov
push
add
add
add
data16
out
xchg
add
ja
aas
mov
add
frstor
mov
ret
leave
jl
cmp
out
sbb
add
mov
xor
out
push
dec
sub
popa
loopne
mov
mov
add
add
add
stos
lock
ss
add
xchg
mov
outsb
adc
mov
add
mov
xchg
je
test
bound
mov
mov
xchg
fwait
std
daa
test
add
mov
mov
push
jns
add
xchg
test
xor
ffree
daa
inc
add
mov
ds
scas
daa
fstl
add
add
jle
jle
fcompl
and
mov
inc
rolb
ret
mov
outsl
test
or
xchg
add
add
mov
test
stos
and
push
outsb
mov
add
sarl
int
pop
outsl
push
rolb
mov
add
outsb
adc
out
push
xor
mov
test
repz
pop
mov
outsb
js
mov
push
ljmp
jmp
out
and
nop
add
add
mov
mov
mov
sub
mov
add
into
sbb
daa
pop
ss
sub
add
add
sub
push
mov
add
out
xor
mov
xchg
add
or
gs
xor
jg
lds
mov
jno
pop
cmp
push
xchg
mov
or
int
pop
cwtl
push
pop
dec
mov
inc
cwtl
test
and
mov
imul
mov
addr16
sar
xchg
pop
dec
dec
pop
pop
push
add
or
dec
push
cli
pop
out
add
clc
push
nop
add
and
xchg
or
fstpt
jecxz
fisttpl
insb
shrl
sub
fnstcw
addr16
out
add
add
out
lods
push
add
mov
stos
rol
add
les
cmp
mov
cmpsl
lcall
insb
gs
or
stos
mov
jg
add
mov
pop
jns
lea
add
mov
lret
jb
mov
add
hlt
in
mov
add
add
mov
in
sub
js
adc
pop
inc
rcll
gs
cld
cmp
stc
and
cmpsl
sbb
pop
lods
inc
sbb
enter
mov
add
call
xchg
mov
iret
sbb
add
mov
add
xchg
dec
jecxz
or
or
imul
push
or
lahf
pop
sub
into
sahf
xchg
push
inc
sub
aas
mov
add
mov
mov
popa
dec
xor
push
out
and
mov
mov
fidivrl
mov
mov
sbb
mov
mov
leave
jecxz
clc
cmpsl
inc
aaa
loop
mov
repz
jbe
insb
dec
daa
lcall
xorl
scas
pusha
add
xor
mov
mov
sbb
sub
add
addb
inc
stc
inc
add
imul
stos
arpl
ret
push
sub
sbb
add
rolb
mov
scas
fwait
lcall
mov
push
mov
arpl
mov
dec
gs
sbb
mov
cmp
and
mov
xlat
cwtl
or
add
daa
inc
mov
pusha
add
pop
out
adc
mov
push
jne
pop
inc
adc
mov
jl
add
add
push
out
or
into
pop
jle,pt
movsb
rcll
xchg
mov
mov
in
insb
idivb
jbe
pop
push
out
xor
mov
add
cmpsl
cltd
push
hlt
jb
mov
jmp
cmc
or
add
daa
ljmp
cmc
testl
add
and
mov
or
in
xchg
lds
not
add
rolb
adc
sub
repz
lahf
and
or
dec
add
mov
add
mov
pop
fcoms
add
sub
add
js
pop
ljmp
cmp
std
and
out
sti
in
mov
mov
cs
or
add
mov
add
mov
add
lea
mov
jle
repz
int
mov
cld
push
push
xchg
cmp
pop
pop
push
xor
out
add
mov
inc
loopne
mov
test
jmp
xchg
ja
push
mov
add
xchg
inc
add
push
inc
inc
add
pop
bound
mov
sub
cld
jl
cmpsb
addl
ret
repnz
push
cltd
mov
mov
mov
pop
test
iret
add
xor
mov
int3
mov
lds
pop
xchg
es
bound
mov
mov
jo
mov
add
dec
loope
mov
std
bound
mov
mov
add
adc
sti
jns
jae
add
mov
jecxz
movsb
pop
bound
mov
imul
push
and
mov
test
cmpsb
adc
inc
add
xor
mov
out
mov
ljmp
add
pushf
outsb
adc
add
scas
ror
or
out
adc
mov
arpl
repz
imul
mov
popa
aad
scas
fs
add
xor
mov
add
sub
adc
ds
inc
add
xchg
inc
sub
add
mov
pop
std
inc
mov
and
mov
test
mov
mov
sbb
xor
mov
add
vmaxsd
insl
cld
rcll
loopne
mov
add
addb
pop
adc
aaa
out
sbb
out
push
pusha
add
jno
and
mov
mov
aas
or
sub
test
nop
add
loope,pn
lock
add
xor
and
jne
pop
cmp
mov
ja
and
std
xor
jno
bound
mov
data16
mov
insb
push
arpl
xorl
jecxz
push
out
ret
stos
xor
arpl
mov
pop
fisttps
mov
mov
mov
push
add
xchg
imul
add
lock
jle
outsl
dec
fdivl
inc
jbe
int3
mov
add
adc
mov
add
push
adc
cmp
addb
test
leave
and
mov
mov
add
daa
xchg
fsubrs
insl
mov
popf
pusha
add
pushf
pop
mov
scas
mov
mov
jno
push
pop
inc
dec
lret
mov
sahf
cwtl
rcrl
push
cmpsl
jle
add
mov
add
and
addr16
test
cmp
addb
cmp
cmp
mov
mov
enter
mov
mov
test
add
test
jne
add
push
push
repnz
mov
mov
mov
mov
sub
push
mov
cmp
or
cmp
dec
xchg
ljmp
cltd
les
add
pop
fidivs
add
xchg
fistl
add
imul
mov
sahf
icebp
jnp
xor
mov
mov
loop
mov
jns
jns
xchg
push
and
mov
ss
mov
add
aad
add
jge
mov
add
add
jle
mov
add
add
mov
mov
mov
adc
add
ljmp
add
pop
add
and
mov
daa
pop
lret
stos
add
mov
fmul
jge
add
fwait
mov
push
inc
add
loope
lea
add
xchg
and
leave
xor
fildl
rolb
mov
push
sbb
mov
push
or
add
cs
jge
xchg
cmpsb
addb
mov
add
jno
push
add
mov
jge
enter
or
test
add
mov
arpl
mov
xchg
mov
dec
aad
add
insl
wbinvd
push
pop
push
sbb
out
lods
dec
std
pushf
sbb
rolb
mov
mov
fisubs
add
add
cld
or
xchg
pop
xchg
mov
adc
dec
rol
pop
inc
add
add
mov
insb
mov
add
mov
js
pushf
pop
xchg
repnz
cld
dec
xchg
mov
ret
mov
jno
loop
mov
outsl
inc
push
add
add
add
mov
mov
mov
xor
mov
xchg
psubusb
inc
imul
mov
inc
sbb
add
mov
movsb
in
cmp
or
add
cld
cltd
inc
push
jbe
dec
stos
jecxz
add
add
popf
jl
shll
sbb
mov
test
rolb
pusha
add
dec
sbb
cmp
xor
enter
dec
push
jl
jg
sbb
loope
sub
inc
fisubs
mov
push
mov
sub
aam
cld
ret
xchg
imul
mov
stos
aad
or
jmp
inc
add
addb
add
lods
add
mov
push
fcmovb
dec
jo
mov
notb
push
lahf
or
jl
add
mov
mov
add
int3
test
jae
rorl
inc
push
push
loopne
mov
sub
sti
xchg
mov
daa
push
add
aad
jle
jl
mov
pop
jmp
pop
fwait
mov
jecxz
sub
pusha
add
loop
mov
and
ds
out
inc
add
cs
aaa
cmp
jno
mov
xchg
adc
mov
and
mov
rolb
mov
fwait
inc
bound
mov
test
mov
rep
outsb
sub
imul
sbb
pusha
add
sbb
test
add
sub
enter
iret
jnp
pusha
add
jne
repz
mov
into
insl
dec
icebp
jns
adc
mov
add
xor
mov
aad
jg
flds
idivl
stos
adc
mov
sub
pop
shll
mov
add
mov
in
sub
mov
pop
mov
mov
inc
fnsave
loope
jnp
or
add
add
dec
lock
mov
xchg
add
add
mov
out
add
out
dec
mov
fcompl
setbe
push
pop
jbe
pop
adc
xchg
cmpsl
fdivl
in
rolb
pop
pop
lods
mov
mov
mov
xor
mov
mov
stc
push
mov
and
lcall
dec
push
mov
mov
xchg
jne
ja
add
add
mov
rolb
jo
mov
xor
mov
jg
and
mov
pop
sub
cld
mov
add
mov
lret
mov
add
jo
mov
pusha
add
push
mov
jb
mov
mov
and
jne
outsl
imul
add
shrl
daa
cmp
mov
test
add
add
mov
push
cmc
stos
xchg
lcall
or
sbb
loopne
mov
adc
add
aaa
outsb
shll
mov
add
test
add
or
add
add
add
jns
daa
out
inc
ds
lahf
push
shll
jbe
push
push
mov
dec
hlt
cmc
ds
daa
cmpl
jecxz
add
addb
movsl
dec
aad
mov
pushl
adc
fidivl
mov
sbb
xchg
pop
popa
add
mov
xchg
mov
add
stc
addb
mov
add
mov
add
jl
int3
in
ret
loope
add
pushf
mov
and
mov
out
cli
adc
mov
dec
int3
cld
xor
push
add
add
test
add
add
mov
mov
jne
sub
cltd
sti
and
mov
xchg
add
int
data16
mov
jo
mov
rolb
mov
adc
mov
add
mov
mov
mov
jne
idivl
into
lock
cmpsl
xchg
into
adc
cltd
add
add
jle
daa
mov
mov
lock
and
mov
loopne
mov
adc
lods
push
pop
ficomps
cmp
sbb
scas
test
add
into
sub
xchg
les
jnp
negl
push
pop
stos
arpl
js
mov
add
mov
fsubs
call
pavgw
mov
pop
sbb
arpl
lcall
or
pop
xchg
dec
addb
mov
add
dec
cs
or
and
mov
dec
fs
mov
mov
cmpsb
into
sahf
dec
xor
aaa
xchg
enter
and
gs
scas
xor
pushf
addb
insb
mov
add
loopne
mov
lahf
pusha
add
gs
xchg
xor
mov
add
add
add
pop
jg
mov
add
sbb
std
lret
add
mov
jg
rolb
mov
test
loop
mov
jb
mov
es
inc
mov
add
repnz
add
xlat
fstpt
fmull
repnz
enter
addr16
push
mov
mov
add
mov
mov
mov
adc
add
lea
mov
aas
int
cmp
xchg
inc
add
add
cli
imul
add
push
cmpsb
hlt
pop
nop
add
lahf
je
push
imul
ds
pop
mov
sahf
rcrl
add
mov
add
mov
cmp
mov
mov
data16
sti
insb
cmp
xchg
aad
jmp
pop
lret
call
add
stos
das
ffree
imul
jno,pn
add
jmp
mov
or
lret
mov
rolb
mov
xchg
daa
pop
daa
ds
mov
cmpsb
sbb
add
leave
xchg
add
mov
cmp
loope
fnstsw
jno
stos
sub
popf
in
cmp
rolb
mov
inc
nop
add
inc
sbb
stc
dec
push
add
jecxz
pop
rcrl
xor
add
inc
inc
xorl
mov
mov
out
rolb
mov
mov
mov
mov
add
dec
xor
stos
test
out
inc
out
cmp
ja
cmp
xchg
dec
je
rolb
mov
call
clc
and
mov
mov
jae
add
dec
das
pop
js
ret
jns
addb
sti
lock
push
add
push
out
mov
mov
mov
pop
hlt
bound
mov
testb
lods
lea
xchg
movsl
add
pop
mov
add
stos
loopne
mov
fldt
outsl
sub
and
mov
gs
pop
pop
mov
mov
cli
lds
add
adc
mov
cmp
lcall
add
adc
mov
outsl
pop
dec
insl
stos
jbe
fsubrs
cmp
mov
xchg
add
cmpsb
or
leave
xchg
mov
inc
mov
dec
icebp
inc
add
add
mov
fists
dec
fs
adc
mov
push
add
mov
mov
mov
sbb
push
cwtl
sub
dec
sahf
out
rolb
mov
pop
ret
in
or
js
add
ds
loop
mov
pushf
je
mov
add
movsb
push
jnp
add
call
jne
ret
sti
pop
jo
mov
loope
push
mov
sbb
mov
dec
aad
leave
adc
out
int3
sbb
loop
mov
add
jo
mov
adc
jge,pn
mov
dec
sub
dec
int3
and
jne
add
or
mov
add
sub
add
cmp
jge
jg
lcall
scas
test
fstp
mov
popf
test
shrl
mov
mov
lcall
add
mov
pusha
add
fwait
jge
cmp
roll
mov
add
cltd
outsl
test
movsl
xchg
pop
ret
inc
xchg
jbe
sub
sub
push
jo
mov
cmpsl
add
mov
sub
mov
in
push
jnp
push
mov
add
pop
cs
enter
push
xchg
cld
aas
cmp
mov
outsl
ficomps
lret
test
jmp
pushf
bound
mov
add
outsl
cmp
adc
pop
fcoml
xchg
mov
clc
fldl
imul
mov
add
push
aaa
mov
out
pop
ljmp
inc
int
push
dec
neg
out
and
mov
rolb
mov
mov
add
fwait
sub
mov
outsb
xor
mov
lcall
mov
fidivrl
add
mov
cmpsl
pop
jmp
fwait
mov
xchg
ljmp
aad
insb
data16
xor
mov
mov
and
mov
mov
stos
cltd
pop
pop
dec
das
jnp
add
mov
or
imul
inc
sti
pop
mov
popa
int3
adc
sbb
mov
pop
int
imul
outsb
jbe
dec
cmp
enter
cmp
jns
or
mov
jns
or
cwtl
mov
sbb
and
mov
and
pop
mov
add
aaa
rolb
mov
sub
mov
add
mov
add
jb
mov
std
xchg
pop
push
add
cmp
xchg
adcl
mov
cmpsb
pusha
add
push
add
cmp
add
mov
mov
addb
pop
and
je
jnp
cmp
sarl
lods
xor
mov
and
mov
iret
test
dec
mov
push
add
mov
mov
sub
dec
loop
mov
add
jae
cmp
add
repnz
dec
test
add
lds
pop
daa
push
repz
idivl
push
adc
xchg
pop
call
mov
add
add
push
std
adc
mov
jae
add
test
and
cltd
int3
movsb
out
sub
sbb
test
add
xchg
cwtl
dec
imul
in
jmp
out
out
lods
call
mov
sbbl
fistpl
xchg
addb
cmpsl
jb
mov
mov
add
mov
call
andl
add
or
jge
add
aam
jmp
add
out
sbb
inc
adc
pop
popf
xchg
mov
mov
test
mov
in
pop
scas
fwait
lock
dec
popf
test
lcall
push
aad
xor
jge,pn
fadd
jne
mov
jae
add
stc
fistpll
iret
sbb
dec
push
test
bound
mov
mov
or
mov
add
mov
add
fldcw
inc
insb
hlt
add
pop
inc
add
adc
loop
mov
mov
iret
stos
outsl
sbb
jmp
and
out
xchg
add
mov
cmp
insb
add
mov
cmp
sbb
in
xor
dec
mov
addb
inc
jl
data16
add
iret
lods
lret
loopne
mov
insl
and
push
fsts
test
mov
dec
pop
mov
mov
iret
xchg
ljmp
jge
outsl
popa
inc
repnz
add
add
add
pop
cwtl
gs
sbb
jno
add
mov
mov
dec
cmpsl
rolb
lret
inc
mov
jae
cmc
cld
mov
pusha
add
xchg
lret
xchg
add
out
add
in
std
cltd
out
add
add
shl
mov
les
in
adc
mov
and
mov
or
xor
mov
sub
pop
mov
mov
add
mov
sub
movsl
hlt
addl
add
mov
mov
sbb
mov
cld
jmp
add
dec
rolb
mov
xchg
cltd
rolb
mov
mov
dec
cwtl
push
sahf
addb
xchg
addb
pop
hlt
fwait
or
call
adc
mov
mov
add
inc
cmp
adc
mov
hlt
adc
rolb
pop
add
mov
addb
cmpsl
test
xor
bound
mov
mov
std
xchg
ds
xchg
jns
xor
pop
xchg
add
mov
cmpsb
addr16
out
in
mov
mov
aaa
loope
or
cli
jge
pop
mov
outsl
xor
mov
leave
popa
xor
mov
xor
cli
xchg
add
mov
jmp
cmp
rolb
leave
cmp
mov
mov
adc
ficoml
stos
ds
pop
rolb
mov
jmp
push
add
add
dec
rolb
push
push
addb
or
push
add
pop
sub
sti
std
ds
bound
mov
add
clc
std
and
mov
add
xchg
fstp
loop
mov
in
pop
and
mov
movb
inc
inc
push
out
pop
and
inc
cwtl
push
inc
lods
add
mov
lcall
mov
outsl
inc
imul
aaa
mov
adc
mov
repnz
jae
out
rolb
inc
and
mov
mov
movzwl
mov
pop
pop
xor
adc
mov
addb
je
out
xchg
das
jl
xor
mov
xchg
mov
add
add
mov
xchg
add
movsl
icebp
dec
push
loop
mov
adc
add
inc
fnstsw
xchg
mov
mov
movsl
mov
cmp
mov
jecxz
xor
mov
pop
pop
shll
dec
lret
gs
mov
and
mov
xor
mov
into
les
dec
cmp
inc
popa
movsb
push
push
pop
dec
scas
mov
add
popa
mov
and
mov
mov
add
addb
lea
je
mov
lahf
inc
jle
out
inc
jbe
add
mov
pop
and
mov
sbb
stos
jp
add
add
dec
xor
stos
out
add
mov
test
add
mov
test
xor
jmp
mov
popl
sbb
pop
ss
add
inc
insb
int3
push
sub
aad
xchg
int
das
adc
shr
cwtl
mov
mov
imul
ja
jae
add
clc
test
inc
mov
mov
mov
arpl
into
add
aam
imul
mov
push
mov
addb
jae
xor
stos
lock
mov
in
jns
pop
xchg
test
jecxz
inc
in
dec
and
fs
fadds
int
movsb
hlt
xchg
fnsave
pop
pop
inc
popl
pop
jmp
fucomp
pop
pushf
xchg
inc
rolb
mov
pop
jecxz
addl
fsubp
add
repnz
add
cmpsl
or
sub
add
and
mov
and
mov
add
scas
mov
mov
in
dec
sbb
and
arpl
mov
sub
sbb
out
ret
iret
jp
add
add
cmp
dec
push
and
mov
insb
xchg
add
imul
in
jo
mov
mov
jp
cs
les
sub
or
mov
mov
mov
add
call
or
stos
xchg
out
scas
mov
mov
xor
add
mov
push
add
jmp
pop
xchg
dec
xchg
cli
rolb
mov
jecxz
fcoms
mov
add
adc
mov
add
add
sub
add
rolb
mov
test
lahf
mov
out
call
mov
out
sub
pop
xchg
in
jmp
and
mov
outsb
test
aam
inc
data16
jmp
movsl
mov
mov
xchg
mov
nop
add
inc
out
or
push
mov
mov
outsb
ljmp
test
fistpl
sub
sub
mov
test
adc
lock
jb
mov
in
xchg
xchg
insb
js
adc
cmp
push
sub
mov
mov
in
movsb
dec
sub
xor
mov
dec
add
dec
pop
leave
adc
mov
cli
aas
sbb
adc
mov
add
cmp
into
mov
cwtl
icebp
push
inc
add
sahf
inc
add
cmpsl
xor
cli
mov
cmp
inc
sub
and
and
mov
add
push
add
and
add
inc
lds
xor
inc
lahf
ficompl
repz
les
movsb
and
add
lods
cs
stos
cmpsl
sub
rorl
rolb
mov
sbb
pop
sbb
push
xchg
xchg
push
pushl
adc
mov
call
int3
mov
mov
and
xchg
and
mov
inc
sbb
add
jp
fstpl
daa
nop
add
add
mov
inc
clc
lcall
into
and
mov
and
mov
mov
xor
adc
mov
aas
daa
repnz
sub
jbe
das
fcoml
insb
in
rolb
jns
cmp
sahf
dec
sti
xor
add
push
pop
les
stc
jbe
adc
mov
push
lahf
push
lods
mov
scas
mov
add
mov
mov
push
push
push
jb
mov
jo
mov
mov
sbb
data16
cmp
add
mov
add
push
cli
cmp
jle
xchg
loopne
mov
add
js
in
mov
jae
pusha
add
jb
mov
mov
add
add
add
cmp
mov
dec
fcomip
aas
cmp
jns
lods
rcll
repz
mov
insl
hlt
inc
addr16
mov
aam
mov
add
and
nop
add
ret
lock
in
xor
rcll
or
mov
lahf
mov
aaa
lods
fisubrl
push
sub
fwait
jb
mov
js
add
pop
int3
mov
mov
push
add
sub
popf
xor
mov
jb
mov
pop
pop
add
xor
pop
imul
hlt
jecxz
aaa
dec
inc
add
notb
mov
add
add
mov
push
cmp
dec
sub
sub
pop
in
push
test
out
cmc
xchg
je
mov
xor
loope
add
and
mov
hlt
repnz
sub
cli
mov
mov
daa
call
add
jmp
test
add
mov
shll
jp
into
iret
insl
outsl
rolb
mov
mov
xor
and
int3
into
dec
cwtl
xchg
incb
mov
dec
sub
cs
ja
rcrl
popf
cmc
int
mov
addb
mov
mov
aaa
sub
inc
jg
xor
lds
sub
roll
jno
mov
jl
dec
mov
mov
cmp
test
and
mov
pop
js
fwait
xor
mov
add
push
idiv
pop
cmp
jp
lret
scas
xchg
and
mov
push
add
add
sti
mov
xchg
mov
jle
mov
scas
jnp
nop
add
lcall
push
push
lcall
mov
lret
jno
movsb
inc
add
add
dec
dec
frstor
jp
jmp
lahf
mov
lds
add
mov
and
mov
adc
pop
xor
mov
pop
ret
test
out
loop
mov
cltd
sbb
xchg
cmpsb
cli
inc
add
fwait
mov
mov
xchg
add
mov
cmc
test
or
mov
sub
cmc
add
mov
sbb
ljmp
adc
xor
mov
mov
mov
call
loope
dec
dec
idivb
and
mov
enter
loop
mov
and
pop
sbb
repnz
daa
aad
ljmp
and
mov
mov
iret
movsb
sbb
sbb
add
lock
sbb
fisttpll
add
add
outsl
xchg
push
out
add
dec
push
add
add
mov
push
jb
mov
xor
mov
add
fsubl
dec
or
or
dec
stos
sahf
mov
add
insb
add
sbb
add
cltd
mov
fldcw
iret
cmp
mov
rolb
add
enter
cmpsb
int3
add
mov
jge
jl
add
rolb
mov
lret
addb
lods
push
pop
bound
mov
mov
add
push
pushf
in
jge
pop
addb
mov
loop
mov
adc
mov
movsl
dec
xchg
mov
mov
lds
push
xor
inc
jae
cwtl
int3
and
pusha
add
xor
mov
fdiv
pop
mov
add
jecxz
add
mov
push
add
xchg
nop
add
push
add
rcll
add
rolb
mov
xchg
mov
addr16
fstps
icebp
sbb
es
xchg
cmp
pushf
test
roll
add
push
dec
mov
mov
push
fimull
add
es
jmp
lcall
mov
add
pop
and
mov
cld
push
inc
clc
adc
cmc
mov
add
pushf
aam
cmpsb
and
mov
xchg
add
and
mov
aad
jle
mov
xchg
push
add
movsl
icebp
xchg
sbb
pop
test
inc
add
add
pop
mov
loop
mov
xlat
arpl
mov
dec
inc
add
jo
mov
add
mov
add
mov
pop
dec
pop
call
push
cld
loopne
mov
mov
and
mov
outsb
xor
mov
push
dec
mov
cli
inc
mov
fdivl
pop
pop
mov
adc
push
add
lret
mov
add
add
add
jecxz
dec
add
fwait
out
mov
ret
int
jbe
inc
cmp
and
adc
mov
movsl
cwtl
adc
xchg
mov
inc
add
in
movsb
dec
pop
imull
add
enter
mov
push
add
xor
add
ficoms
fyl2xp1
push
or
or
cwtl
stos
push
push
xchg
jne
and
mov
aaa
jp
dec
pmulhw
clc
jo
mov
mov
addr16
push
xchg
sub
mov
ss
loopne
mov
sarl
inc
add
mov
insb
dec
fistl
adc
mov
add
inc
test
mov
sbb
xchg
xor
mov
lods
pop
xchg
dec
sbb
out
mov
sub
aam
clc
leave
xchg
cs
add
cmp
add
fadds
aaa
fnsave
inc
and
mov
mov
mov
inc
and
mov
int
mov
add
and
stos
xchg
popa
sub
push
add
rcrl
mov
xchg
add
xor
pop
dec
mov
mov
sub
mov
push
add
lret
mov
ret
mov
mov
popf
mov
add
bound
mov
add
cwtl
xchg
lds
rolb
mov
mov
xor
mov
ds
mov
add
dec
pop
cmpsb
push
pop
add
imul
in
jg
mov
pop
incb
fstl
incb
nop
add
add
xchg
sbb
xor
mov
scas
and
xchg
mov
icebp
aaa
lds
or
pop
sbb
add
add
hlt
mov
pop
inc
or
push
sub
xlat
js
mov
dec
pop
sarl
xchg
add
int3
adc
mov
cmp
loop
mov
rcll
out
bound
mov
add
lcall
add
sub
out
scas
jle
mov
pop
fst
inc
mov
mov
lret
cs
xchg
add
out
js
out
cmp
cmp
add
add
test
call
add
add
int3
xchg
imul
mov
aas
divb
jns
repnz
lods
ja
or
add
ret
leave
mov
in
cmp
add
mov
xchg
push
pop
jnp
scas
mov
push
mov
mov
inc
std
addb
lret
int
bound
mov
xorl
add
test
add
jne
add
mov
and
mov
add
dec
sub
int
stc
jb
mov
or
sub
js
sbb
repz
mov
mov
add
jl
xor
dec
inc
dec
addb
addb
mov
adc
inc
add
add
mov
inc
cmp
mov
add
insb
scas
fbld
ja
add
fstl
sub
dec
xchg
mov
cmp
xorl
pop
cmp
add
and
mov
dec
jbe
insb
in
nop
add
add
mov
mov
ljmp
add
sub
add
adc
add
loopne
mov
clc
iret
xor
mov
mov
adc
push
dec
dec
cmpsl
imul
mov
push
lahf
aad
push
push
cmp
cmp
add
cwtl
push
ds
add
jmp
mov
pop
xchg
stos
mov
popl
push
xchg
rolb
imul
add
mov
dec
rorw
cmp
sbb
repz
adc
mov
xchg
bound
mov
jb
mov
add
aaa
cmc
mov
repnz
cmp
jo
mov
add
add
mov
inc
xor
mov
push
cmp
add
lods
or
add
mov
call
xor
add
xlat
inc
dec
inc
add
mov
mov
push
pushf
cmp
or
xchg
add
add
fs
sub
in
addr16
sub
pushf
lock
cld
leave
adc
mov
push
jg
int
mov
mov
aam
sub
inc
jge
sbb
sbb
imul
les
jge
xchg
and
add
aas
xor
test
ret
cmp
enter
mov
xor
mov
mov
roll
and
mov
sti
in
addb
and
jno
pop
jnp
xchg
and
mov
mov
add
xchg
adc
mov
mov
jl
aam
xlat
adcl
mov
ljmp
pop
fsubs
inc
xchg
push
add
nop
add
outsb
movsl
jmp
aas
pop
out
imul
int
mov
mov
xchg
test
or
add
mov
sub
mov
fld
lea
out
push
add
or
out
lahf
jnp
add
add
jns
sub
cmpl
add
xor
adc
roll
cmp
pop
xchg
add
mov
pop
or
lret
dec
and
mov
adc
ss
fwait
push
add
mov
mov
loope
add
xor
mov
cltd
xor
mov
sahf
and
mov
sbb
std
loopne
mov
mov
mov
mov
inc
fmuls
stos
mov
mov
mov
push
arpl
pop
pop
test
les
scas
mov
mov
add
cmp
and
mull
and
int3
bound
mov
sbb
addr16
and
cmp
jno
add
mov
cmp
aas
pop
jmp
leave
js
jne
mov
pop
inc
push
ljmp
outsb
add
add
xor
add
add
inc
out
imul
inc
loop
mov
push
add
fnstcw
sub
add
inc
add
add
repz
add
mov
xchg
xchg
fisubl
insl
jecxz
xchg
or
xchg
addb
push
pop
dec
in
leave
popf
add
add
fs
mov
ret
push
inc
int
pushf
push
xor
rcrl
mov
das
dec
repnz
push
std
mov
lcall
sbb
scas
stos
clc
add
adc
mov
dec
divb
add
add
movsl
icebp
mov
add
jae
push
xor
ja
add
bound
mov
xor
mov
sub
ret
arpl
cmc
push
sub
jbe
inc
insl
push
pop
icebp
negl
add
sbb
add
fs
and
xorl
mov
add
and
mov
nop
add
mov
inc
add
add
or
out
mov
mov
std
dec
outsb
dec
rolb
mov
in
mov
lcall
mov
insb
and
mov
in
jns
add
adc
mov
adc
mov
test
mov
leave
or
add
or
addr16
cli
pop
sti
or
rolb
shrl
mov
and
aad
ficoms
mov
xchg
add
add
mov
mov
push
mov
nop
leave
jmp
scas
add
fiaddl
jbe
push
push
mov
xchg
ret
add
clc
inc
cmp
add
mov
rolb
mov
mov
clc
repnz
nop
cld
jae
ljmp
mov
clc
repnz
nop
cld
jae
push
lret
push
add
add
add
fiaddl
add
je
xchg
add
mov
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
xor
xchg
add
fs
repz
hlt
mov
add
mov
enter
mov
push
mov
xchg
ret
add
add
add
xor
lea
clc
repnz
nop
cld
jae
pop
inc
add
movsb
clc
repnz
nop
cld
jae
add
push
adc
push
or
repnz
nop
cld
jae
add
add
mov
mov
mov
xchg
ret
add
aad
add
add
pop
push
mov
xchg
ret
add
add
lock
in
pop
mov
clc
repnz
nop
cld
jae
add
in
add
in
aad
add
out
add
add
push
scas
mov
clc
repnz
nop
cld
jae
add
xchg
add
pop
push
mov
xchg
ret
sbb
je
out
int
add
clc
repnz
nop
cld
jae
or
inc
insl
add
leave
xchg
push
mov
xchg
ret
add
out
add
test
enter
clc
repnz
nop
cld
jae
add
add
push
push
dec
lea
push
mov
xchg
ret
add
out
test
add
pusha
add
clc
repnz
nop
cld
jae
add
add
add
ret
ljmp
add
inc
int
add
clc
popa
int
lods
add
clc
repnz
nop
cld
jae
mov
je
push
addb
add
mov
add
clc
repnz
nop
cld
jae
daa
das
add
repnz
nop
cld
jae
testl
add
lods
and
push
mov
xchg
ret
out
add
or
dec
xor
add
in
nop
leave
jmp
or
in
imul
nop
cld
jae
add
testl
clc
repnz
nop
cld
jae
test
adc
mov
nop
leave
jmp
add
sbb
add
xor
add
dec
inc
clc
repnz
nop
cld
jae
add
push
add
add
nop
nop
cld
jae
inc
das
push
jb
add
add
add
add
push
inc
add
inc
inc
jbe
add
add
xchg
push
push
fiadds
notl
in
nop
leave
jmp
jb
add
adc
push
mov
nop
leave
jmp
daa
or
add
aad
aam
sub
nop
cld
jae
add
cs
mov
pop
test
mov
jo
add
add
add
shlb
add
in
nop
leave
jmp
add
add
add
add
add
push
clc
repnz
nop
cld
jae
add
test
add
or
out
push
clc
repnz
nop
cld
jae
add
add
add
sbb
fisubl
popa
add
mov
xchg
ret
add
icebp
dec
test
add
add
pop
clc
repnz
nop
cld
jae
jbe
add
add
add
int3
mov
push
mov
xchg
ret
clc
add
add
test
repnz
nop
cld
jae
inc
add
xchg
icebp
push
mov
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
xor
adc
repnz
nop
cld
jae
daa
add
and
cmpl
in
nop
leave
jmp
xor
insl
xchg
add
les
mov
clc
repnz
nop
cld
jae
add
add
adc
mov
call
in
nop
leave
jmp
aad
scas
add
add
cmp
push
mov
nop
leave
jmp
xchg
add
dec
add
inc
xchg
and
sti
inc
add
icebp
ficoml
add
xchg
clc
call
clc
repnz
nop
cld
jae
add
add
or
nop
nop
cld
jae
icebp
es
fiaddl
sub
sar
nop
nop
cld
jae
inc
add
inc
add
mov
nop
leave
jmp
add
test
add
add
fisubl
mov
clc
repnz
nop
cld
jae
push
js
ljmp
nop
nop
cld
jae
xchg
add
mov
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
push
add
fsubrs
ja
fs
repnz
nop
cld
jae
add
mov
test
push
mov
xchg
ret
add
fiaddl
add
xor
push
mov
nop
leave
jmp
add
mov
aas
pusha
clc
repnz
nop
cld
jae
mov
add
push
ficomps
repnz
nop
cld
jae
push
add
add
add
add
add
xor
clc
repnz
nop
cld
jae
insl
add
fidivl
rclb
in
nop
leave
jmp
stos
pop
add
add
add
fiaddl
in
nop
leave
jmp
add
inc
popa
mov
push
sub
nop
nop
cld
jae
add
push
adcb
xchg
addb
jns
jno
clc
repnz
nop
cld
jae
add
add
scas
xchg
mov
push
mov
roll
add
add
repz
add
add
xor
push
mov
xchg
ret
aad
in
add
clc
inc
mov
mov
sub
and
add
pop
mov
pop
and
push
mov
xchg
ret
mov
das
xchg
pop
mov
push
mov
xchg
ret
jbe
add
add
daa
rcr
mov
add
repnz
nop
cld
jae
aad
xchg
dec
inc
mov
nop
cld
jae
out
add
inc
add
add
andl
nop
cld
jae
divl
cli
lods
clc
repnz
nop
cld
jae
daa
test
add
out
sbb
sub
push
mov
xchg
ret
add
inc
add
add
push
mov
xchg
ret
add
in
inc
add
mov
call
clc
repnz
nop
cld
jae
popa
add
xchg
jnp
inc
loopne
mov
xchg
ret
ds
fiaddl
lods
add
sbb
cmp
ret
add
add
mov
add
add
push
mov
xchg
ret
add
cmp
add
add
pop
mov
push
mov
xchg
ret
addb
lods
push
add
add
clc
repnz
nop
cld
jae
je
xchg
insl
out
add
fcmovbe
inc
add
lods
push
dec
add
add
clc
repnz
nop
cld
jae
scas
inc
aad
aad
xchg
ja
push
push
mov
xchg
ret
add
add
pop
mov
clc
repnz
nop
cld
jae
push
add
inc
add
in
rep
push
mov
xchg
ret
loope
loope
add
mov
push
clc
repnz
nop
cld
jae
das
push
test
add
mov
cmp
clc
repnz
nop
cld
jae
add
xchg
push
loopne
mov
add
push
add
clc
repnz
nop
cld
jae
add
cmp
add
clc
repnz
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
es
insl
inc
fmull
add
repnz
nop
cld
jae
fisubl
out
movsb
mov
in
nop
leave
jmp
clc
add
push
xchg
push
push
clc
repnz
nop
cld
jae
scas
add
add
pop
push
clc
repnz
nop
cld
jae
xchg
add
je
add
fincstp
rclb
jle
inc
add
add
jl
mov
add
add
mov
pop
add
clc
repnz
nop
cld
jae
out
add
inc
add
call
clc
repnz
nop
cld
jae
add
add
fsubr
push
add
clc
repnz
nop
cld
jae
adc
add
push
mov
xchg
ret
or
push
and
es
mov
mov
inc
clc
repnz
nop
cld
jae
inc
add
lock
add
add
mov
xchg
ret
inc
testl
push
loopne
mov
mov
nop
nop
cld
jae
add
add
aad
add
push
mov
nop
leave
jmp
sbb
aad
add
das
mov
push
mov
xchg
ret
dec
add
push
insl
aad
in
push
clc
repnz
nop
cld
jae
mov
add
nop
add
fisttpll
repnz
nop
cld
jae
add
add
out
mov
clc
repnz
nop
cld
jae
add
add
add
add
add
push
mov
xchg
ret
add
loope
in
add
or
push
mov
nop
leave
jmp
add
add
nop
nop
cld
jae
add
inc
daa
lcall
nop
cld
jae
out
jbe
push
add
mov
nop
leave
jmp
adc
loope
jbe
mov
clc
repnz
nop
cld
jae
test
add
push
add
leave
clc
repnz
nop
cld
jae
add
je
xchg
in
push
clc
repnz
nop
cld
jae
xchg
inc
add
das
jmp
dec
add
mov
xchg
ret
add
add
push
add
mov
repnz
nop
cld
jae
add
mov
jbe
mov
push
mov
xchg
ret
test
add
xchg
add
test
repnz
nop
cld
jae
jbe
test
js
stos
mov
push
mov
nop
leave
jmp
je
ljmp
int
movsb
clc
repnz
nop
cld
jae
xchg
add
add
add
js
push
mov
nop
leave
jmp
add
loope
xchg
das
add
aam
ljmp
nop
leave
jmp
add
push
loope
add
push
push
mov
xchg
ret
xchg
add
inc
out
push
add
sub
add
repnz
nop
cld
jae
inc
xchg
add
add
cld
jae
out
test
add
cmp
mov
xchg
ret
add
add
add
xchg
out
stc
je
push
mov
nop
leave
jmp
xchg
add
jnp
sar
nop
nop
cld
jae
popa
add
clc
push
add
push
lret
push
mov
xchg
ret
insl
imul
add
lock
inc
lds
cmp
add
fistps
add
in
and
dec
clc
repnz
nop
cld
jae
xchg
add
pop
add
imull
repnz
nop
cld
jae
add
pop
out
into
push
push
mov
xchg
ret
test
add
push
xor
mov
popf
cmpl
push
mov
nop
leave
jmp
add
loope
add
nop
nop
cld
jae
add
add
add
je
push
clc
repnz
nop
cld
jae
jl
jl
add
xchg
imul
clc
pushl
add
in
inc
push
lret
clc
repnz
nop
cld
jae
add
add
test
add
imul
jae
add
xchg
push
pop
add
clc
repnz
nop
cld
jae
fiaddl
mov
imul
rorb
add
repnz
nop
cld
jae
es
add
js
int
je
xchg
add
lret
fiaddl
or
clc
repnz
nop
cld
jae
popa
add
lret
stos
add
add
clc
repnz
nop
cld
jae
jb
add
xor
mov
push
clc
repnz
nop
cld
jae
lock
or
add
rep
clc
repnz
nop
cld
jae
insl
stos
push
out
add
and
mov
xchg
ret
jbe
add
loope
stos
push
clc
repnz
nop
cld
jae
out
add
add
icebp
add
add
jmp
lock
add
xchg
add
testl
nop
leave
jmp
push
cmp
push
jmp
add
xchg
out
push
clc
cmp
add
push
xor
pop
and
add
add
in
nop
leave
jmp
push
xchg
add
mov
nop
leave
jmp
add
inc
add
add
add
clc
repnz
nop
cld
jae
add
test
add
add
inc
repz
cmp
xor
inc
add
xchg
add
add
test
fcompp
inc
add
int
add
es
rolb
mov
and
clc
repnz
nop
cld
jae
xchg
add
add
jno
xchg
imul
mov
cmp
ret
add
xor
add
jnp
cmpl
in
nop
leave
jmp
das
sbbb
add
or
clc
repnz
nop
cld
jae
inc
add
xor
mov
xor
mov
add
clc
repnz
nop
cld
jae
dec
add
mov
add
push
mov
nop
leave
jmp
add
popa
das
push
insl
cmp
testb
cmp
ret
lret
xchg
xor
cmpb
clc
repnz
nop
cld
jae
add
in
icebp
add
push
clc
repnz
nop
cld
jae
push
or
add
add
jo
mov
and
repnz
nop
cld
jae
add
mov
nop
cld
jae
es
add
add
loope
xor
mov
roll
xchg
ret
add
add
add
inc
je
xor
repnz
nop
cld
jae
ljmp
mov
add
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
jb,pt
or
mov
popf
clc
repnz
nop
cld
jae
add
das
fiaddl
nop
nop
cld
jae
add
add
outsb
push
clc
repnz
nop
cld
jae
out
xor
push
inc
fisubl
and
mov
nop
nop
cld
jae
inc
pop
add
add
popa
adc
mov
out
je
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
addb
add
pop
jmp
add
out
add
out
xor
add
mov
add
mov
xchg
ret
scas
icebp
loope
add
xchg
inc
ja
push
clc
repnz
nop
cld
jae
inc
push
add
add
sbb
add
repnz
nop
cld
jae
loope
test
or
mov
inc
add
add
int
jb
push
push
mov
nop
leave
jmp
add
xchg
xchg
hlt
or
in
aad
lock
cmp
add
add
add
test
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
popa
inc
add
adc
loopne
mov
clc
repnz
nop
cld
jae
add
jne
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
xchg
add
xor
push
mov
xchg
ret
testl
add
dec
cmp
repnz
nop
cld
jae
add
add
je
lds
nop
nop
cld
jae
out
add
add
pop
cmp
clc
repnz
nop
cld
jae
add
test
mov
adc
repnz
nop
cld
jae
popa
push
loope
xchg
jle
in
add
add
push
mov
nop
leave
jmp
add
add
cmp
push
loopne
mov
xchg
ret
push
add
add
add
push
mov
xchg
ret
stos
add
add
add
push
ret
ds
clc
repnz
nop
cld
jae
add
add
or
test
lock
clc
repnz
nop
cld
jae
add
xor
mov
jl
js
push
mov
nop
leave
jmp
inc
jl
add
add
clc
repnz
nop
cld
jae
add
das
out
or
mov
add
clc
repnz
nop
cld
jae
mov
mov
repnz
nop
cld
jae
add
loope
mov
ret
pusha
add
pusha
add
push
mov
nop
leave
jmp
add
loope
xchg
insl
int
add
add
out
insl
lret
add
inc
loopne
mov
mov
imul
push
mov
nop
leave
jmp
and
and
enter
nop
leave
jmp
add
in
mov
or
add
repnz
nop
cld
jae
add
adc
mov
dec
adc
repnz
nop
cld
jae
addb
add
add
adc
mov
nop
leave
jmp
in
add
jb
add
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
or
daa
sbb
nop
nop
cld
jae
push
loope
popa
stos
add
mov
clc
repnz
nop
cld
jae
add
inc
pop
add
sub
nop
nop
cld
jae
add
add
testl
nop
nop
cld
jae
add
ds
sub
clc
push
mov
xchg
ret
add
jb
xchg
add
push
mov
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
jmp
add
add
add
pop
or
mov
nop
leave
jmp
push
add
out
add
jmp
nop
cld
jae
lock
push
out
inc
jbe
pushl
jmp
jmp
add
das
das
add
inc
xchg
add
test
mov
out
add
lods
daa
add
loope
fimull
mov
mov
test
idiv
clc
repnz
nop
cld
jae
cmp
sbb
mov
push
mov
nop
leave
jmp
add
ds
sbb
scas
ret
clc
repnz
nop
cld
jae
scas
push
xchg
add
add
repnz
nop
cld
jae
add
scas
add
es
jne
clc
repnz
nop
cld
jae
add
loope
add
clc
repnz
nop
cld
jae
push
add
add
mov
je
clc
repnz
nop
cld
jae
add
fiadds
nop
nop
cld
jae
lods
loope
add
xorb
sbb
sar
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
popa
push
dec
add
add
je
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
js
xchg
add
daa
xchg
loop
clc
repnz
nop
cld
jae
xchg
loope
add
or
flds
xchg
ret
das
mov
cmp
mov
clc
repnz
nop
cld
jae
jbe
popa
add
push
out
out
clc
clc
repnz
nop
cld
jae
add
inc
mov
test
add
clc
repnz
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
daa
in
daa
add
clc
repnz
nop
cld
jae
xchg
lods
add
add
lcall
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
add
add
clc
add
add
or
loop
mov
xchg
ret
add
add
jb
fisttpl
aaa
repz
add
int
add
xchg
js
mov
clc
repnz
nop
cld
jae
loope
icebp
in
inc
xor
push
clc
repnz
nop
cld
jae
mov
test
add
add
lea
add
clc
repnz
nop
cld
jae
cmp
add
mov
clc
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
loope
test
test
clc
repnz
nop
cld
jae
loope
add
mov
pop
aad
add
add
inc
ljmp
and
clc
repnz
nop
cld
jae
add
add
add
add
mov
clc
repnz
nop
cld
jae
insl
loope
jae
out
shrl
je
js
repnz
nop
cld
jae
push
loope
add
xor
inc
add
add
fiaddl
add
mov
and
add
add
mov
cltd
jne
clc
repnz
nop
cld
jae
xchg
add
jle
clc
repnz
nop
cld
jae
add
or
loope
add
out
jne
clc
repnz
nop
cld
jae
out
add
mov
push
mov
nop
leave
jmp
push
xor
add
daa
add
pusha
add
push
mov
nop
leave
jmp
add
add
adc
mov
add
push
mov
xchg
ret
add
xchg
outsl
add
push
mov
xchg
ret
adc
add
repnz
sub
sti
int3
inc
add
xor
ljmp
cld
jae
dec
jl
mov
push
jl
push
clc
repnz
nop
cld
jae
lret
add
add
clc
repnz
nop
cld
jae
add
clc
add
sbb
movsb
sub
in
lcall
loope
push
in
pop
add
jmp
dec
push
mov
nop
leave
jmp
fimull
xchg
inc
pusha
add
out
mov
push
mov
xchg
ret
push
das
add
add
jl
mov
push
mov
nop
leave
jmp
add
add
fiaddl
add
stos
movswl
clc
repnz
nop
cld
jae
inc
jb
inc
add
adc
repnz
nop
cld
jae
pop
xchg
add
add
add
in
nop
leave
jmp
adc
popf
pushl
push
mov
xchg
ret
add
add
add
aad
mov
push
mov
nop
leave
jmp
add
add
aad
cmp
push
mov
xchg
ret
add
je
dec
adc
mov
call
clc
repnz
nop
cld
jae
add
push
push
mov
nop
cld
jae
add
add
stos
out
xchg
mov
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
daa
add
add
lock
mov
mov
popa
push
mov
nop
leave
jmp
xchg
jbe
add
push
push
mov
xchg
ret
int
xchg
push
test
cmpb
test
mov
dec
push
mov
nop
leave
jmp
subb
add
and
push
mov
xchg
ret
xchg
lret
add
add
sub
clc
repnz
nop
cld
jae
icebp
lock
or
insl
mov
clc
repnz
nop
cld
jae
ljmp
add
push
mov
xchg
ret
dec
mov
das
add
mov
clc
repnz
nop
cld
jae
daa
xor
cld
and
push
mov
nop
leave
jmp
add
out
jbe
test
jmp
aad
add
add
jbe
stos
add
clc
push
insl
push
test
push
mov
nop
leave
jmp
lret
push
mov
push
pop
add
clc
repnz
nop
cld
jae
inc
loope
scas
add
hlt
or
ficompl
add
clc
repnz
nop
cld
jae
add
add
mov
cmp
ret
add
js
out
loope
lret
push
mov
push
or
cs
add
inc
mov
jb
add
jecxz
sub
clc
repnz
nop
cld
jae
add
jl
add
jg
add
clc
repnz
nop
cld
jae
push
add
add
push
push
mov
nop
leave
jmp
test
add
pop
add
clc
repnz
nop
cld
jae
jbe
add
inc
and
clc
repnz
nop
cld
jae
jbe
loope
ljmp
popa
fs
add
aad
add
push
add
push
mov
xchg
ret
daa
inc
add
and
push
mov
xchg
ret
add
add
loope
das
testl
repnz
nop
cld
jae
das
xchg
inc
mov
popa
add
jge
mov
imul
add
pop
add
out
add
clc
repnz
nop
cld
jae
add
dec
add
das
push
clc
repnz
nop
cld
jae
mov
add
add
push
inc
inc
dec
pusha
clc
repnz
nop
cld
jae
add
add
es
daa
xor
mov
clc
repnz
nop
cld
jae
add
adc
sub
repnz
nop
cld
jae
inc
cmp
add
add
aas
flds
xchg
ret
popa
add
jbe
test
cmpl
push
mov
xchg
ret
add
aad
add
pop
add
push
mov
nop
leave
jmp
add
add
add
outsl
mov
push
mov
nop
leave
jmp
add
jb
mov
add
add
or
repnz
nop
cld
jae
add
add
add
mov
sbb
push
mov
xchg
ret
and
jbe
in
sbbl
in
nop
leave
jmp
add
inc
and
jmp
ret
add
in
nop
leave
jmp
add
das
add
add
dec
mov
clc
repnz
nop
cld
jae
push
mov
aaa
test
push
add
clc
repnz
nop
cld
jae
add
add
add
repz
add
repnz
nop
cld
jae
scas
xchg
aad
xchg
add
repnz
nop
cld
jae
add
add
add
sbb
bound
mov
cld
push
clc
repnz
nop
cld
jae
sbb
mov
add
add
cs
clc
repnz
nop
cld
jae
es
add
adc
clc
repnz
nop
cld
jae
add
add
add
or
add
xchg
ret
out
add
add
add
mov
add
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
jmp
das
scas
add
add
add
dec
push
mov
add
add
push
add
push
add
or
add
push
stc
call
jmp
incl
add
push
push
jb
push
xchg
das
push
and
xchg
push
mov
xchg
ret
add
push
aad
add
push
mov
xchg
ret
add
add
addb
lret
push
push
mov
xchg
ret
add
icebp
push
sbb
mov
clc
repnz
nop
cld
jae
add
add
inc
jb
mov
adc
jbe
clc
repnz
nop
cld
jae
add
hlt
aaa
test
inc
push
mov
xchg
ret
add
add
add
inc
cmp
mov
nop
leave
jmp
aad
int
add
je
clc
repnz
nop
cld
jae
cmp
add
cmpsb
lods
div
clc
repnz
nop
cld
jae
push
add
out
fsubs
mov
nop
leave
jmp
int
add
or
popa
clc
repnz
nop
cld
jae
add
das
out
adc
add
repnz
nop
cld
jae
add
add
sub
aam
inc
add
add
out
or
aaa
lret
add
repnz
nop
cld
jae
inc
add
lret
aad
add
jge
clc
repnz
nop
cld
jae
lods
out
add
mov
mov
nop
leave
jmp
add
push
mov
push
push
mov
nop
leave
jmp
add
add
jbe
add
je
add
mov
xchg
ret
add
add
add
mov
add
clc
repnz
nop
cld
jae
xchg
testl
sub
mov
xchg
ret
add
add
add
or
clc
repnz
nop
cld
jae
je
jmp
add
add
add
sub
add
push
add
clc
repnz
nop
cld
jae
and
clc
add
cmpsl
add
dec
push
mov
nop
leave
jmp
and
inc
out
add
mov
movzwl
push
mov
nop
leave
jmp
inc
push
loope,pt
adc
push
mov
xchg
ret
add
inc
add
add
add
add
push
mov
nop
leave
jmp
add
add
push
pop
lods
sbbl
nop
nop
cld
jae
daa
in
push
jl
js
add
repnz
nop
cld
jae
pop
inc
inc
jl
popa
adc
repnz
nop
cld
jae
add
add
xchg
and
adc
add
repnz
nop
cld
jae
add
icebp
push
mov
in
nop
leave
jmp
push
add
mov
inc
jl
mov
push
mov
push
add
add
jl
repnz
pop
jns
jp
dec
clc
repnz
nop
cld
jae
add
push
dec
add
inc
add
mov
nop
leave
jmp
add
out
add
icebp
push
sar
repnz
nop
cld
jae
push
es
add
add
aas
adc
in
nop
leave
jmp
add
add
add
add
add
add
lock
push
je
adc
mov
xchg
ret
daa
add
ljmp
loop
clc
repnz
nop
cld
jae
inc
add
add
add
mov
xchg
ret
int
icebp
in
add
test
pop
cld
jmp
int
add
aad
add
add
add
push
mov
nop
leave
jmp
inc
add
add
add
add
mov
push
mov
nop
leave
jmp
fiaddl
add
add
add
xchg
sbb
xor
inc
add
add
add
inc
add
sbb
push
mov
xchg
ret
and
test
insl
mov
push
mov
xchg
ret
lret
add
dec
mov
clc
repnz
nop
cld
jae
add
add
sub
add
add
leave
jmp
push
inc
jb
add
xor
push
mov
xchg
ret
js
push
das
add
es
add
mov
nop
leave
jmp
out
add
add
nop
nop
cld
jae
insl
add
out
add
add
pop
push
mov
xchg
ret
or
icebp
add
enter
clc
repnz
nop
cld
jae
add
ljmp
and
repnz
nop
cld
jae
add
mov
add
push
mov
nop
leave
jmp
ljmp
cli
push
push
mov
xchg
ret
cmpb
popa
in
andl
fimuls
repnz
nop
cld
jae
inc
add
add
rcll
add
repnz
nop
cld
jae
jbe
or
push
ret
push
repnz
nop
cld
jae
add
add
ds
cmp
clc
repnz
nop
cld
jae
inc
add
add
add
nop
nop
cld
jae
lock
add
xor
clc
repnz
nop
cld
jae
add
inc
cmp
repnz
nop
cld
jae
add
mov
daa
add
push
repz
jmp
add
js,pt
sbb
mov
push
mov
xchg
ret
es
adc
add
push
mov
xchg
ret
jb
loope
or
dec
ret
clc
repnz
nop
cld
jae
add
daa
add
es
add
repnz
nop
cld
jae
add
icebp
add
popf
and
clc
repnz
nop
cld
jae
das
push
out
add
lret
subl
clc
repnz
nop
cld
jae
inc
add
pop
inc
lea
mov
xchg
ret
inc
add
add
js
je
mov
clc
repnz
nop
cld
jae
add
stc
clc
repnz
nop
cld
jae
lret
add
scas
xchg
movsl
les
mov
clc
repnz
nop
cld
jae
push
inc
xchg
jmp
clc
repnz
nop
cld
jae
add
es
xchg
add
jbe
add
add
clc
repnz
nop
cld
jae
in
insl
inc
addb
stos
add
clc
repnz
nop
cld
jae
add
inc
ljmp
clc
repnz
nop
cld
jae
in
push
add
loope
jg
jne
push
mov
nop
leave
jmp
xchg
ds
xchg
push
mov
nop
leave
jmp
pop
add
lock
add
clc
repnz
nop
cld
jae
push
add
inc
out
mov
inc
call
inc
add
inc
add
add
add
nop
nop
cld
jae
add
push
xchg
add
rcrb
mov
nop
leave
jmp
adc
inc
add
mov
clc
repnz
nop
cld
jae
add
js
ja
and
clc
repnz
nop
cld
jae
push
add
or
nop
nop
cld
jae
in
add
mov
leave
add
add
ret
xchg
dec
mov
clc
repnz
nop
cld
jae
push
xchg
add
add
jle
dec
add
repnz
nop
cld
jae
add
loope
add
or
nop
cld
jae
js
daa
daa
inc
inc
icebp
data16
mov
xor
clc
repnz
nop
cld
jae
inc
jl
add
mov
clc
repnz
nop
cld
jae
out
divl
out
imul
xchg
jb
add
add
add
and
insl
mov
add
in
nop
leave
jmp
push
test
fiaddl
adc
push
add
push
mov
xchg
ret
add
push
sbb
fiadds
jne
clc
repnz
nop
cld
jae
xor
lret
repnz
nop
cld
jae
in
sbb
icebp
dec
test
pop
push
mov
xchg
ret
push
xchg
add
inc
add
lock
mov
mov
clc
repnz
nop
cld
jae
push
daa
inc
add
add
pop
clc
repnz
nop
cld
jae
aad
xchg
add
add
es
and
clc
repnz
nop
cld
jae
js
add
out
hlt
fsubl
jg
clc
repnz
nop
cld
jae
add
add
sub
jnp
add
clc
repnz
nop
cld
jae
out
add
add
clc
repnz
nop
cld
jae
add
add
lods
inc
flds
add
push
mov
nop
leave
jmp
lock
push
sar
mov
clc
repnz
nop
cld
jae
popa
ljmp
pop
jae
repnz
nop
cld
jae
push
add
push
mov
xchg
ret
loope
xor
inc
das
add
mov
clc
repnz
nop
cld
jae
xchg
add
test
je
push
cmp
in
nop
leave
jmp
out
xchg
add
in
sub
popa
add
mov
xchg
ret
add
lret
inc
add
pop
clc
repnz
nop
cld
jae
jb
inc
je
pop
add
or
repnz
nop
cld
jae
add
add
or
imul
cld
jae
xchg
push
in
push
addl
clc
repnz
nop
cld
jae
add
push
das
shl
push
mov
nop
leave
jmp
push
lock
xchg
mov
clc
repnz
nop
cld
jae
notl
dec
add
scas
pop
push
push
mov
nop
leave
jmp
add
inc
in
add
add
out
add
clc
repnz
nop
cld
jae
in
add
loope
daa
sti
shr
clc
repnz
nop
cld
jae
xchg
add
out
jl
test
push
mov
nop
leave
jmp
int
xchg
add
push
inc
int
pop
clc
repnz
nop
cld
jae
js
aad
in
add
mov
mov
push
mov
nop
leave
jmp
jbe
test
add
push
mov
nop
leave
jmp
add
inc
add
dec
jbe
imul
nop
nop
cld
jae
push
add
xor
repnz
nop
cld
jae
and
fisubrl
inc
and
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
scas
push
ficoml
mov
clc
repnz
nop
cld
jae
add
add
sti
jmp
add
out
add
inc
out
add
add
jne
clc
repnz
nop
cld
jae
daa
test
push
inc
cltd
pusha
clc
repnz
nop
cld
jae
ljmp
cmp
icebp
push
mov
nop
leave
jmp
adc
add
add
nop
cld
jae
add
add
mov
mov
repnz
nop
cld
jae
jb
add
mull
cmp
inc
cmp
mov
xchg
ret
add
add
add
mov
cmp
ret
out
or
je
daa
daa
add
or
clc
clc
repnz
nop
cld
jae
lock
add
das
push
out
mov
clc
repnz
nop
cld
jae
push
inc
add
lock
adc
mov
add
pop
cmp
repnz
nop
cld
jae
loope
aad
icebp
push
dec
lea
push
mov
xchg
ret
add
dec
je
ljmp
nop
leave
jmp
push
add
addb
sbb
test
repnz
nop
cld
jae
add
inc
and
push
out
rorl
clc
repnz
nop
cld
jae
inc
add
jl
xor
clc
repnz
nop
cld
jae
push
in
inc
insl
add
aaa
push
jp
je
sub
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
in
add
in
arpl
in
nop
leave
jmp
inc
or
add
add
mov
xchg
ret
inc
add
lret
add
pop
mov
clc
repnz
nop
cld
jae
out
test
out
add
dec
mov
clc
repnz
nop
cld
jae
add
popf
add
clc
repnz
nop
cld
jae
sbb
add
add
or
add
push
mov
xchg
ret
add
add
add
aad
mov
clc
repnz
nop
cld
jae
push
add
and
add
repnz
nop
cld
jae
add
add
add
daa
mov
push
mov
mov
mov
add
popf
and
in
lahf
jne
clc
repnz
nop
cld
jae
push
js
cmc
in
add
push
clc
repnz
nop
cld
jae
icebp
test
mov
push
mov
nop
leave
jmp
pop
add
loope
je
in
inc
add
adc
repnz
nop
cld
jae
add
push
clc
push
jnp
nop
nop
cld
jae
lret
lods
add
push
clc
repnz
nop
cld
jae
add
add
je
repnz
add
or
repnz
nop
cld
jae
add
add
cmp
clc
add
sub
inc
add
scas
add
xchg
push
jne
push
int
test
repnz
nop
cld
jae
jb
add
push
clc
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
add
popa
jle
clc
repnz
nop
cld
jae
add
xchg
es
or
and
push
clc
repnz
nop
cld
jae
add
clc
add
jmp
fiaddl
ljmp
in
test
rolb
mov
sub
nop
leave
jmp
add
clc
jb
scas
add
xchg
add
incl
inc
add
out
push
je
das
loope
add
and
mov
mov
addb
fadds
in
nop
leave
jmp
add
aad
aad
add
push
push
mov
nop
leave
jmp
add
add
sub
insl
add
jmp
add
out
xchg
add
add
es
popl
clc
repnz
nop
cld
jae
mov
inc
push
fidivl
mov
jmp
add
lret
or
add
lods
add
lea
incl
add
add
add
lock
push
clc
repnz
nop
cld
jae
add
out
inc
push
add
sub
test
repnz
nop
cld
jae
lods
daa
dec
push
popa
xchg
stos
popa
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
popa
stos
add
das
add
add
nop
nop
cld
jae
test
mov
add
push
mov
xchg
ret
add
int
dec
add
add
adc
repnz
nop
cld
jae
ljmp
or
nop
nop
cld
jae
add
fcomip
movsb
clc
repnz
nop
cld
jae
test
or
push
add
das
pop
clc
repnz
nop
cld
jae
das
add
add
push
mov
nop
leave
jmp
test
add
add
add
add
clc
repnz
nop
cld
jae
mov
jbe
je
push
mov
nop
leave
jmp
push
fcmovbe
add
add
add
add
repnz
nop
cld
jae
scas
add
add
add
repnz
nop
cld
jae
add
out
xor
clc
repnz
nop
cld
jae
add
add
es
add
mov
clc
repnz
nop
cld
jae
inc
je
add
pop
and
and
clc
repnz
nop
cld
jae
add
add
int
aaa
rolb
mov
push
push
mov
xchg
ret
add
inc
xchg
clc
xchg
clc
add
mov
push
mov
xchg
ret
add
add
in
add
mov
clc
repnz
nop
cld
jae
cmp
addb
adc
add
mov
inc
sbb
add
push
jb
add
je
pop
add
push
mov
xchg
ret
inc
in
add
push
ds
clc
repnz
nop
cld
jae
add
push
add
push
mov
stc
addl
aam
inc
daa
add
add
jmp
nop
cld
jae
lods
adc
sbb
mov
xchg
ret
inc
or
or
push
mov
xchg
ret
add
add
add
add
nop
cld
jae
lods
xchg
scas
icebp
addb
push
addb
jle
jmp
jp
push
mov
nop
leave
jmp
push
push
inc
jl
xchg
push
add
lods
loope
add
ljmp
add
nop
nop
cld
jae
loope
xor
add
add
nop
nop
cld
jae
add
add
repnz
nop
cld
jae
xor
sarl
add
repnz
nop
cld
jae
es
pop
add
je
clc
repnz
nop
cld
jae
lret
out
repz
push
push
mov
xchg
ret
out
add
in
fisubl
add
push
push
mov
xchg
ret
icebp
xchg
js
add
xchg
clc
repnz
nop
cld
jae
add
add
enter
push
mov
xchg
ret
add
or
xor
es
mov
cmp
push
mov
nop
leave
jmp
inc
js
inc
add
stos
xlat
pushf
pop
clc
repnz
nop
cld
jae
pop
add
adc
mov
int
pop
jae
repnz
nop
cld
jae
out
xchg
add
lods
push
mov
xchg
ret
add
add
add
aad
in
push
clc
repnz
nop
cld
jae
js
add
mov
repnz
nop
cld
jae
out
add
or
add
add
push
push
mov
nop
leave
jmp
stos
push
adc
add
mov
cmp
ret
out
add
xchg
jl
daa
or
mov
add
and
add
clc
repnz
nop
cld
jae
add
xchg
cli
add
clc
repnz
nop
cld
jae
insl
lret
mov
add
jle
push
cld
clc
repnz
nop
cld
jae
add
xor
nop
nop
cld
jae
xchg
add
jbe
scas
lods
cmp
mov
clc
repnz
nop
cld
jae
insl
add
addb
das
xor
inc
and
clc
repnz
nop
cld
jae
add
add
inc
lcall
mov
xchg
ret
push
ljmp
add
jmp
insb
clc
repnz
nop
cld
jae
je
add
popf
xor
push
mov
nop
leave
jmp
add
add
movsb
pop
ror
push
mov
xchg
ret
adc
ds
dec
mov
clc
repnz
nop
cld
jae
inc
addb
add
xchg
mov
nop
leave
jmp
add
adc
out
imul
fucomip
push
mov
aad
push
push
mov
nop
leave
jmp
add
add
lret
mov
clc
repnz
nop
cld
jae
out
insl
adc
jmp
add
test
push
add
clc
or
xor
mov
nop
nop
cld
jae
addb
add
add
mov
add
clc
repnz
nop
cld
jae
xchg
add
push
xchg
add
icebp
xchg
fcmovnu
inc
add
daa
add
mov
add
lock
aad
stc
jmp
add
push
add
add
out
add
loope
jb
enter
mov
nop
leave
jmp
out
add
test
push
jmp
repnz
nop
cld
jae
add
pop
add
push
mov
xchg
ret
fimull
ja
push
clc
repnz
nop
cld
jae
add
jl
test
add
mov
clc
repnz
nop
cld
jae
add
sbb
mov
nop
leave
jmp
add
icebp
inc
daa
es
add
repnz
nop
cld
jae
jb
add
inc
add
mov
sbb
add
daa
xchg
les
add
add
sbb
mov
add
jmp
xchg
loope
out
push
pop
gs
aam
stc
xor
add
cmp
mov
stc
inc
mov
stc
repnz
rcll
mov
add
push
jns
push
sub
add
pop
push
arpl
sub
mov
aas
adc
mov
lcall
popa
add
mov
sub
add
add
mov
and
mov
push
fldcw
push
dec
insl
pop
push
xor
hlt
mov
sbb
int
sub
xchg
xchg
push
aad
sahf
addr16
fstl
hlt
bound
mov
sti
enter
mov
dec
jmp
leavew
adc
ja
push
add
ret
in
pushf
arpl
sub
stos
jle
inc
add
xor
mov
loopne
mov
mov
add
mov
lret
mov
ja
push
add
sahf
sbb
sub
test
pop
fucomp
push
sbb
cmp
mov
add
mov
add
test
rolb
mov
pop
push
mov
loop
mov
jp
ret
push
aam
ljmp
ss
xchg
add
call
into
jnp
jb
mov
add
push
mov
xchg
add
xchg
aaa
xchg
sub
jp
add
cwtl
mov
push
lods
je
mulb
fbstp
enter
mov
lcall
popa
negl
mov
outsb
fmuls
mov
mov
inc
xor
je
mov
decb
sarl
push
dec
test
rolb
clc
lret
scas
cmc
ret
add
pusha
add
lcall
ss
imul
sbb
out
cmp
scas
scas
push
add
add
aas
fsts
sbb
mov
mov
fcompp
nop
add
add
xchg
jae
push
add
add
xchg
xchg
jb
mov
inc
add
gs
cmpl
mov
mov
roll
add
mov
mov
xor
mov
add
inc
or
data16
dec
fsubrs
cld
in
mov
inc
or
stc
leave
xchg
ret
cmp
jg
dec
xchg
jl
add
mov
adc
push
int
add
cwtl
and
add
mov
add
or
push
lret
adc
mov
mov
xchg
je
add
mov
mov
adc
fldl
mov
pusha
add
lea
pop
das
fucomip
or
mov
cld
cmpsb
push
rolb
mov
pop
outsb
xchg
pop
add
mov
mov
std
jp
dec
dec
sarl
imul
fisttpl
ret
mov
add
and
xchg
and
add
insl
in
out
mov
andl
adc
dec
xchg
ds
mov
add
or
adc
add
xchg
mov
mov
out
mov
sbb
shll
and
mov
pop
sahf
outsb
loop
mov
push
mov
mov
daa
inc
cmp
cmp
dec
lods
imul
iret
mov
hlt
sub
fnclex
add
icebp
cmpsl
lea
add
inc
jns
fldl
add
iret
xchg
xchg
lea
add
push
sub
xor
mov
icebp
leave
lods
mov
inc
popf
iret
shll
int3
jmp
add
adc
add
mov
sti
pop
aam
leave
sub
mov
add
bound
mov
cwtl
cmp
mov
outsl
sub
lea
bound
mov
mov
popf
inc
lds
incl
xlat
add
mov
in
shr
cmpl
add
cmpl
outsl
mov
js
rcr
daa
and
add
pushl
xlat
add
mov
push
mov
rolb
mov
xor
add
mov
out
and
dec
mov
push
pop
adc
sarl
mov
jge
adc
jge
dec
test
stos
xchg
bound
mov
sub
add
push
add
mov
out
add
and
or
call
js
test
shll
push
lods
mov
mov
cmpsl
adc
jmp
add
shrl
addr16
add
add
jge
mov
pop
dec
xchg
add
mov
pusha
add
or
push
inc
mov
cmc
sahf
push
cld
and
mov
sbbl
sbb
add
add
push
add
add
inc
jne
jo
mov
add
jmp
in
dec
xor
mov
add
push
add
js
dec
and
fsubr
sub
xchg
mov
add
push
mov
lahf
sub
or
dec
mov
mov
scas
imul
add
pop
xchg
test
fwait
push
test
and
adc
add
stos
pop
or
jecxz
movsl
mov
dec
pop
jbe
iret
mov
std
call
ss
dec
ss
jmp
imul
roll
mov
inc
ret
enter
sbb
cmp
mov
arpl
pop
insl
lahf
and
mov
outsb
adc
dec
fdivrl
ret
dec
xor
mov
sbb
pop
icebp
jmp
sbb
pop
pop
fs
daa
fidivl
xchg
call
add
add
loope
popf
stos
out
mov
addb
int3
int
imul
out
fisubl
mov
pop
movsl
js
xchg
out
in
sarl
mov
ljmp
mov
test
pop
jecxz
lahf
faddl
add
std
leave
ss
add
aas
movsb
stc
dec
jmp
mov
push
mov
jno
in
inc
add
imul
dec
rolb
cmpsl
arpl
mov
dec
jl
repz
dec
enter
data16
out
ljmp
mov
add
jp
dec
xchg
in
adc
add
xchg
dec
mov
pop
xlat
or
xor
mov
sbb
jbe
adc
mov
mov
and
out
and
aad
add
stos
lret
jecxz
cli
movsb
xor
test
add
mov
pop
test
jge
in
adc
mov
dec
call
pop
inc
test
jns
mov
mov
in
add
sbb
adc
and
mov
jmp
adc
or
mov
dec
movsb
aas
and
push
shl
cmp
or
sbb
lock
rolb
mov
add
add
add
stos
cmp
pop
add
ds
mov
inc
ja
xchg
inc
popf
stos
sub
mov
inc
add
xchg
add
mov
xor
add
add
add
sbb
mov
out
push
add
cmp
popf
cmpsb
test
addb
cmpsb
push
xchg
add
or
addb
pop
lock
popa
jge
outsb
mov
add
xchg
mov
mov
rolb
mov
jae
mov
add
pop
std
scas
jecxz
pop
and
add
mov
pop
xchg
push
inc
addr16
cmpsb
adc
outsb
in
sbb
dec
into
pop
in
into
cmpsl
xor
in
loope
iret
push
sbb
jle
stos
loope
sbb
push
ja
outsb
pop
lahf
cmp
fcmove
pop
or
or
pop
jl
pop
sub
repz
pop
rolb
mov
addb
jg
movsl
lcall
pop
mov
mov
addb
call
mov
iret
or
dec
dec
add
mov
je
add
xor
mov
push
ss
pop
out
es
cmp
dec
int
add
mov
mov
and
sub
mov
ss
cs
mov
xchg
nop
add
sub
cmp
iret
or
mov
add
pop
cmp
or
xlat
std
jns
add
into
sbb
add
sbb
icebp
inc
test
cmpsb
jle
jae
inc
add
jae,pt
adc
mov
sahf
mov
imul
jne
mov
mov
inc
insl
test
add
jns
aad
subl
dec
sti
xchg
inc
mov
das
add
mov
add
mov
dec
pop
pop
in
mov
popa
mov
mov
add
fs
mov
push
mov
dec
mov
xchg
jne
add
ljmp
xor
lds
add
std
insb
and
mov
mov
jb
mov
repnz
adc
xchg
add
add
out
jnp
frstor
add
or
repnz
insb
pop
push
add
std
test
aas
xor
neg
mov
loop
mov
rolb
mov
mov
aaa
mov
int
pusha
add
std
mov
inc
xor
mov
in
dec
jp
adc
daa
addr16
out
lret
sub
xchg
jne
dec
push
push
and
mov
cmp
adc
xlat
mov
mov
adc
mov
pop
sbb
mov
mov
adc
leave
mov
leave
jbe
repz
dec
sti
es
pop
test
xor
mov
push
add
xor
leave
pop
sbb
inc
xor
mov
arpl
mov
xor
call
dec
inc
cmp
and
ficomps
push
iret
pop
mov
xchg
add
mov
and
add
add
insb
int
add
clc
mov
int3
cmpsl
mov
push
ret
lret
dec
popf
cmpsl
pop
addb
mov
add
cmpsb
cltd
jo
mov
add
jne
cmp
cwtl
adc
mov
mov
loopne
mov
or
pop
pop
mov
sub
daa
and
lds
nop
add
jmp
add
divl
add
mov
xchg
fcoml
hlt
fdivp
mov
dec
jno
pop
in
addb
mov
mov
in
test
bound
mov
push
nop
add
mov
dec
cwtl
test
add
bound
mov
test
pop
sub
mov
mov
xor
mov
dec
xchg
push
int
inc
xchg
lea
sub
mov
or
and
in
dec
xor
add
adc
mov
cwtl
sub
cwtl
mov
dec
pop
aad
cmp
ja
dec
bound
mov
icebp
jo
mov
addb
inc
insl
ror
iret
push
aam
adc
aad
and
test
mov
add
push
add
outsb
out
mov
mov
mov
popf
adc
mov
add
xchg
add
sbb
ret
hlt
add
mov
out
xchg
pop
pop
jbe
mov
jno
call
push
inc
add
jge
add
xchg
inc
add
sub
add
push
add
xor
inc
rolb
mov
sub
ljmp
aaa
sbb
or
adc
mov
add
ret
inc
sub
call
add
out
int
or
mov
iret
mov
add
mov
xchg
cmp
je
dec
pop
fldcw
cmpsb
arpl
add
add
lods
mov
xor
mov
int3
lock
fistl
out
or
add
mov
int
xlat
cmc
roll
les
add
add
push
cltd
data16
mov
daa
iret
repnz
ja
and
cmp
mov
hlt
adc
mov
mov
pop
lcall
shl
ret
pop
mov
sbb
cmp
add
stos
xor
mov
pusha
add
mov
fwait
jge
outsl
xor
movsl
call
xchg
sbb
sarl
or
add
cmp
sbb
dec
lds
push
hlt
cmpsl
xchg
cwtl
xchg
add
mov
iret
insl
arpl
add
fldt
dec
movsl
push
add
xor
out
adc
loopne
mov
inc
js
mov
inc
pushf
dec
stos
and
jle
ret
jno
ds
jb
mov
sbb
fnstenv
mov
dec
fisubs
jp
je
xor
mov
push
das
mov
mov
push
push
iret
into
stc
pop
stc
push
add
arpl
leave
jae
xor
xchg
add
push
mov
add
mov
mov
add
add
roll
mov
jp
jo
mov
sti
dec
push
addb
int
sub
stc
adc
sub
test
sub
outsb
imul
pop
mov
addb
jge
fdivrs
scas
mov
lret
outsl
and
push
rolb
in
add
movsl
data16
movsb
mov
jb
mov
mov
xlat
inc
dec
lret
jecxz
or
add
cmpsb
sbb
and
mov
out
mov
ds
cmp
cld
test
rcl
add
addl
mov
mov
cmpsb
je
push
mov
rol
daa
push
xchg
xor
cmpl
mov
adc
mov
mov
lock
push
test
add
pop
negl
mov
xor
mov
and
mov
mov
rcll
mov
shll
add
add
inc
outsb
icebp
popa
sbb
shrl
jge
adc
add
insb
xchg
imul
mov
push
ret
sbb
cs
add
add
mov
xor
out
add
sahf
pop
dec
out
add
mov
mov
and
aam
mov
add
je
jle
arpl
out
jecxz
add
loop
mov
repnz
stc
dec
dec
push
std
dec
mov
add
add
lcall
add
mov
jle
xchg
lcall
loopne
mov
lods
sbb
test
popf
test
xlat
mov
mov
dec
push
adc
cmp
or
add
pop
and
inc
movsb
mov
mov
xchg
cmp
or
add
add
push
lret
and
addb
or
iret
fistps
pop
xchg
loopne
mov
pop
xchg
add
pop
xor
mov
add
inc
enter
xor
mov
fucomi
mov
xor
add
dec
jg
xchg
das
and
stc
ret
mov
std
xor
mov
push
add
sbb
dec
into
nop
add
add
clc
mov
movsb
jb
mov
sbb
ret
dec
test
add
mov
aam
into
inc
cmp
lea
inc
push
cwtl
xor
mov
jge
aas
call
pop
sbb
sbb
cmp
addb
test
jp
stos
xor
mov
outsl
mov
mov
xchg
xchg
add
mov
dec
mov
movsb
insb
mov
nop
add
jnp
into
mov
jne
pop
icebp
cmc
adc
mov
add
lret
add
cmp
jg
xchg
add
add
jmp
add
pop
gs
mov
dec
mov
fdivl
inc
or
lods
fisttps
mov
mov
push
in
jb
mov
jmp
or
inc
stos
cmp
fldt
jno
dec
pop
mov
jbe
mov
jge
xchg
xor
adc
lods
js
pop
add
mov
call
into
pop
xor
es
mov
decb
mov
aam
ja
inc
adc
in
mov
test
mov
mov
or
xor
jmp
mov
add
std
out
xchg
mov
mov
sbb
add
jg
add
or
test
in
add
int
xchg
pushf
mov
sub
add
mov
int
and
add
add
mov
and
pop
dec
and
xchg
fadds
push
xchg
psrlw
lcall
in
jl
add
sti
cmp
movsb
stos
pop
pushf
daa
fmuls
mov
jmp
js
xor
mov
ret
sbb
add
sbb
xor
mov
add
push
add
mov
sbb
mov
mov
jno
inc
mov
mov
inc
aaa
mov
testb
js
add
pop
push
movsb
mov
xor
xor
pop
aad
insl
mov
mov
scas
ret
es
sub
test
mov
lret
add
ds
lret
rolb
mov
jg
icebp
mov
sub
icebp
sbb
cld
mov
je
ficoms
add
lods
mov
cmp
mov
adc
inc
or
mov
fimuls
mov
sbb
push
add
stos
out
addb
ret
sbbl
add
sbb
pop
mov
add
hlt
cmpsl
sub
mov
insl
call
push
add
mov
push
xchg
pop
mov
jl
pop
jbe
add
add
add
sbb
cmp
xchg
mov
stos
js
jle
stc
sub
pop
inc
cld
movsb
scas
sbb
xchg
add
mov
test
outsb
pop
pop
cmp
cli
cmp
add
es
add
scas
push
pop
das
or
inc
je
mov
add
cli
mov
fcmove
arpl
daa
stc
sub
or
add
sbb
fdivp
das
and
mov
mov
add
or
iret
addl
or
push
add
add
cli
ficoms
movsb
push
out
xor
and
mov
mov
jecxz
add
add
loope
aad
jmp
mov
arpl
lret
int
push
push
mov
mov
int
jecxz
add
cs
xchg
mov
or
sbb
pcmpeqw
icebp
lds
add
sub
mov
pop
lahf
rolb
aam
pop
lret
pop
jl
add
mov
push
lock
mov
sbb
add
adc
sti
lret
cld
xor
mov
sub
inc
jne
std
dec
pop
rolb
mov
movsb
mov
add
ss
mov
push
out
jmp
pop
pop
or
add
mov
jl
inc
fcoms
cmp
sub
lds
sub
dec
push
icebp
jae
push
clc
mov
mov
out
jmp
fldl2e
fnsave
and
mov
push
add
dec
mov
cmp
add
cltd
push
cwtl
mov
add
addb
sahf
cwtl
out
dec
lods
arpl
add
or
xor
mov
pushw
adc
mov
mov
push
jnp
repnz
jo
mov
dec
mov
lret
loope
cmp
fwait
dec
xor
mov
cmp
movsl
cmp
add
mov
mov
sub
cmpsb
addr16
cmp
rolb
sbb
stos
add
out
xchg
sbb
nop
add
add
mov
loopne
mov
cmc
mov
jbe
or
or
jecxz
or
mov
add
bound
mov
add
mov
push
leave
stos
aas
iret
popf
insl
clc
sbb
and
sub
xchg
sub
inc
mov
mov
adc
repnz
mov
mov
mov
adc
popf
xor
cltd
jecxz
sbb
cltd
fidivl
jg
insb
leave
push
add
dec
pop
sub
mov
mov
or
inc
adc
out
enter
jb
mov
inc
daa
cmp
in
lret
rorl
add
xor
js
jecxz
ljmp
leave
xor
gs
scas
je
jmp
mov
dec
cli
mov
cmpsl
sbb
rolb
mov
cwtl
pushf
adc
dec
push
repz
rolb
mov
push
jmp
addb
cmp
lods
rolb
jns
lret
add
pop
nop
add
jg
clc
xchg
test
ljmp
rcll
insb
and
mov
aam
jg
add
decl
inc
xchg
scas
lods
es
fucomi
ljmp
jp
add
pop
data16
xchg
push
add
add
add
mov
mov
add
dec
and
imul
mov
adc
jmp
add
call
add
cmpl
mov
rorl
jnp
ret
filds
mov
jae
and
ret
jne
mov
xor
mov
testl
rolb
mov
cmpsb
imul
mov
push
cmp
push
mov
jecxz
movsl
pop
out
lret
adc
pop
pop
pop
dec
int3
mov
adc
lret
nop
add
movsb
out
inc
call
and
mov
and
add
mov
add
mov
mov
dec
stos
cmp
adc
mov
pop
push
addb
mov
add
mov
pop
je
cld
aad
and
mov
add
jl
jp
push
add
sub
sbb
pop
mov
mov
xchg
insl
test
add
mov
leave
pop
xchg
adc
pop
into
cmp
dec
mov
mov
xchg
add
add
mov
outsb
pop
and
add
push
cld
inc
add
push
push
add
add
fistl
add
loopne
mov
fwait
jae
movsl
outsb
rcll
and
add
mov
dec
addb
cmc
dec
xor
addb
mov
pop
inc
pop
ret
xchg
add
pop
addb
outsb
rolb
push
sub
push
push
add
jae
dec
sub
pop
fiadds
sub
ljmp
repz
into
sahf
xlat
je
daa
mov
int3
push
jle
mov
mov
leave
xchg
lock
divps
daa
sub
add
mov
ret
dec
mov
cmp
add
insl
mov
push
xchg
mov
mov
add
aam
lahf
and
mov
fnstenv
mov
push
sub
add
sub
add
mov
add
mov
loopne
mov
cwtl
xor
jge
xor
mov
adc
push
add
inc
add
jecxz
cmp
add
add
push
mov
or
mov
fimull
andl
mov
add
mov
mov
jge
add
and
mov
add
jl
add
xor
add
sub
mov
sbb
call
add
insl
mov
xchg
data16
mov
mov
call
add
push
add
mov
ljmp
adc
les
and
mov
mull
xor
mov
mov
add
add
add
call
stos
adc
dec
loope
sub
adc
mov
addb
mov
sbb
stos
rolb
ja
stc
les
mov
add
jecxz
imul
cmp
jns
push
xchg
push
add
add
add
cld
lock
or
mov
fwait
nop
add
add
outsl
jne
add
jno
imul
loope
outsl
push
cmp
mov
dec
loopne
mov
adc
mov
mov
sbb
or
fincstp
ss
in
xchg
mov
filds
pusha
add
inc
mov
mov
add
jnp
cld
daa
jl
les
cmp
stc
add
idivb
add
sub
mov
and
mov
call
insb
cld
test
add
push
xchg
add
daa
das
loop
mov
mov
mov
fst
inc
popf
adc
jne
push
hlt
mov
enter
mov
cs
pop
push
addr16
sbb
cmp
aad
cmp
adc
mov
into
stos
jp,pt
call
loop
mov
adc
mov
js
jle
out
xchg
sbb
xchg
fmul
repz
adc
mov
addl
movsb
inc
or
fcmovne
dec
jg
mov
movsl
aam
lds
sbb
jbe
mov
rcll
es
bound
mov
mov
leave
mov
mov
mov
jg
jle
and
mov
add
lahf
dec
push
add
in
push
test
xchg
add
js
gs
loope
jle
add
mov
ja
cmp
rcll
mov
bswap
hlt
sbb
subl
adc
cmp
aas
push
addr16
and
mov
out
cmp
lret
jno
add
lea
sbb
test
aad
jo
mov
add
add
push
inc
dec
out
xor
loop
mov
mov
mov
hlt
test
or
mov
testl
lret
lcallw
in
fwait
mov
mov
mov
gs
xchg
gs
sub
or
test
add
ret
and
mov
leave
xchg
add
in
cmpsb
lods
aaa
dec
hlt
addb
jp
cltd
jmp
in
ds
add
jne
insb
sbb
sub
add
mov
inc
pop
test
sub
mov
enter
add
dec
pop
mov
sub
jl
pop
ja
jp
mov
pushl
loope
push
sbb
and
mov
test
in
add
bound
mov
cmpsl
dec
pop
dec
lret
xchg
xchg
add
add
popa
dec
push
pusha
add
mov
adc
mov
int3
lea
scas
movsb
insb
popf
mov
mov
mov
je
pop
mov
jl
add
mov
rcll
inc
add
jmp
mov
mov
xor
js
push
lcall
sub
xchg
add
andl
or
inc
int
mov
push
cltd
mov
icebp
sti
out
int3
push
lret
add
mov
jp
gs
rolb
mov
add
mov
xor
mov
jg
sub
xchg
aaa
imul
xor
mov
inc
dec
std
xchg
pop
aas
shl
add
add
add
popl
cmp
jecxz
loop
mov
adc
sbbl
pop
xchg
popf
imul
lds
roll
ss
push
sar
leave
jmp
pop
or
mov
jne
mov
sbb
lret
xchg
add
xor
mov
add
mov
out
loopne
mov
repz
outsb
add
subl
push
jns
jl
add
mov
rorl
add
add
je
ret
dec
push
sub
aad
push
leave
repnz
jnp
add
add
cld
inc
xchg
jnp
into
add
mov
add
mov
add
idivl
mov
cld
cmp
out
inc
mov
jl
cmp
jb
mov
ds
add
or
cmpsl
and
mov
repz
fbld
xorl
cli
mov
pop
daa
cmc
mov
xchg
cli
adc
adc
mov
jae
add
nop
add
push
ret
push
dec
lea
pop
push
mov
mov
jnp
add
mov
icebp
mov
nop
add
out
add
mov
std
adcl
loopne
mov
push
add
lret
cmpsl
sahf
or
add
xchg
ljmp
leave
cmp
and
push
mov
mov
add
add
mov
ret
dec
lret
sbb
xchg
jp
es
call
test
inc
mov
sahf
or
jae
aaa
mov
pop
testl
loope
dec
hlt
xchg
pop
testl
adc
mov
mov
add
outsb
repnz
mov
data16
loopne
mov
xor
jl
and
xor
add
in
mov
in
push
idiv
mov
pop
jnp
and
mov
push
add
pop
inc
lock
mov
stos
xchg
add
aas
lret
popf
xor
cmp
sub
mov
mov
call
xchg
lcall
rolb
inc
iret
jg
dec
or
push
cmp
add
and
mov
loope
add
xor
add
push
std
jmp
inc
add
iret
xor
nop
add
add
push
mov
mov
add
cld
call
adc
aaa
lods
lret
arpl
push
dec
out
fisubl
add
repnz
repz
lret
mov
je
mov
mov
dec
mov
imul
add
imul
dec
bound
mov
daa
in
pop
push
rcr
mulb
inc
add
mov
sub
sbb
pop
add
mov
les
loop
mov
outsl
adc
xchg
sub
and
add
adc
mov
fidivs
push
jmp
xchg
leave
xchg
in
dec
cmc
mov
jle
mov
and
psubusw
pop
mov
in
push
and
std
rolb
lods
lods
test
mov
or
inc
fdivrs
cltd
push
cmp
mov
xchg
push
es
repnz
sbb
add
test
jb
mov
leave
cmp
jmp
adc
mov
push
add
add
iret
test
dec
rolb
rolb
mov
js
inc
add
cmp
add
and
pop
cltd
fsts
pushf
lods
mov
mov
in
jno
xor
mov
testl
mov
add
jns
add
mov
insb
dec
jmp
pop
sub
insl
ret
or
dec
and
fadd
cmp
insb
push
add
xor
pop
hlt
jmp
jmp
imul
je
xchg
movsb
mov
outsl
out
add
mov
add
dec
pushf
addb
add
mov
addb
into
insl
fs
div
jo
mov
movsb
jo
mov
add
ucomiss
xchg
sbb
pop
insl
in
mov
fstenv
adc
lret
das
push
xchg
scas
push
scas
mov
test
rolb
mov
subl
pushw
lods
jp
add
imul
mov
mov
repnz
test
mov
lcall
sub
xlat
dec
sbb
mov
ret
add
js
sbb
push
js
mov
mov
addb
mov
mov
add
xchg
jb
mov
rolb
ja
scas
push
pop
and
cli
fcmovnu
insl
pop
jl
std
loopne
mov
jno
or
sahf
aad
or
aam
sub
mov
sbb
aas
stos
fdivs
add
mov
mov
pop
jp
cmp
dec
mov
sbb
pop
jge
adc
mov
jo
mov
sub
mov
mov
test
sbb
and
mov
nop
add
xchg
lock
icebp
pop
add
call
xor
xchg
add
addl
mov
rolb
mov
mov
lcall
mov
ds
xchg
pop
insl
lret
mov
repnz
dec
mov
mov
add
mov
fildll
jmp
jge
outsl
lods
mov
cmpsl
sub
or
sahf
mov
in
xchg
movsl
jbe
pusha
add
dec
push
xor
add
mov
lods
imul
xor
add
mov
mov
mov
dec
xchg
xor
lds
lret
loope
xchg
movsl
div
sbb
jo
mov
ret
jecxz
test
dec
mov
icebp
mov
ret
jno
in
inc
aam
aas
sub
jp
lods
ret
cmp
lods
xlat
pop
jb
mov
adc
mov
pushf
imul
leave
outsl
cltd
xchg
rcll
add
daa
jl
and
jo
mov
mov
add
add
aaa
aad
dec
out
cmp
int3
adc
mov
add
jle
stos
pop
loop
mov
add
mov
roll
mov
add
add
mov
daa
add
repnz
pop
sub
shll
loop
mov
aam
add
fistps
xchg
insb
mov
negl
aas
xorl
dec
adc
mov
sbb
mov
nop
add
stc
xchg
add
movsl
xor
inc
add
add
add
je
in
dec
mov
sbb
fisubrs
and
sub
lds
sti
adc
mov
pushf
pop
imulb
mov
xchg
add
mov
out
pop
ficomps
andl
rolb
mov
jne
add
mov
add
roll
push
lcall
test
lds
lret
dec
push
add
dec
jo
mov
add
mov
sub
stos
sbb
mov
iret
or
rolb
aas
sbb
lret
xchg
add
pop
or
sub
fcoml
fsubrl
xor
mov
sbb
mov
jne
lcall
mov
aas
adc
cmp
xchg
in
push
test
int3
mov
outsb
adc
push
pop
jo
mov
jo
mov
jmp
lret
pop
lock
insl
lret
fcompl
leave
in
mov
mov
lods
dec
out
xchg
pop
jne
xchg
xchg
add
xchg
das
dec
mov
xchg
sub
cld
lods
add
mov
icebp
ret
mov
jp
inc
xor
lret
std
mov
ja
mov
pop
sbb
add
testb
add
xor
lds
add
add
outsl
jne
inc
and
mov
pop
cmpsl
or
jne
in
sahf
and
or
ljmp
flds
dec
mov
cmp
nop
add
xchg
add
ficompl
iret
aas
lcall
movsb
pop
aas
cmpsb
loope
add
hlt
jmp
and
mov
mov
int3
ja
pop
sbb
test
jno
scas
jno
dec
dec
xor
mov
add
test
mov
xor
mov
pushf
mov
pop
ljmp
imul
inc
cwtl
inc
cmc
sbb
lret
add
add
lea
add
fcmovne
stos
and
mov
add
add
mov
add
push
inc
jb
mov
add
pop
iret
mov
leave
ficoms
je
ja
mov
add
cmp
enter
add
movsl
mov
popa
rolb
mov
lcall
mov
sahf
push
cmp
mov
add
xchg
ret
bound
mov
inc
mov
adc
mov
add
sahf
outsl
jmp
jecxz
add
sub
sbb
pop
pop
cwtl
jns
movsl
mov
xor
xor
add
inc
pop
xlat
push
add
jb
mov
mov
pop
ja
sbb
ljmp
jle
sbb
addb
cmpsb
imul
movl
mov
ss
in
lcall
lcall
fdivl
add
mov
mov
mov
sbb
pop
and
inc
or
das
pop
inc
add
arpl
and
add
pop
mov
into
pop
sbb
lcall
popw
sub
add
sub
stos
mov
or
jp
mov
fcmovnu
and
adc
xor
adc
mov
mov
sub
push
add
addb
fs
call
ljmp
lods
pop
cmpsb
lods
test
pusha
add
mov
nop
add
rolb
add
sti
adc
add
mov
idivb
imul
add
adc
add
insl
imul
sub
push
push
addb
movsb
sahf
stc
test
xchg
mov
dec
lret
sbb
xor
xchg
adc
mov
daa
in
loop
mov
mov
push
mov
mov
mov
add
leave
lret
dec
sub
out
push
cltd
pop
pushf
fildl
add
sub
loopne
mov
mov
inc
or
cmp
shll
fadds
cmp
fbstp
ret
push
and
mov
pop
iret
jmp
fidivs
dec
push
lret
inc
sbb
lcall
push
ja
fistpl
push
in
xor
fwait
mov
add
mov
xor
cmpsl
xchg
jmp
push
pop
dec
adcl
jae
sbb
mov
cmp
jns
xor
mov
xchg
pop
mov
out
pusha
add
push
mov
pop
sbb
dec
loopne
mov
addr16
fnstcw
jae
ret
outsb
mov
mov
stos
dec
lock
fcmovne
xor
mov
loope
add
sbb
add
jmp
sbb
add
mov
sub
inc
lds
movsb
aaa
dec
sub
adc
mov
cmpsl
mov
add
mov
add
add
dec
stos
cmp
adc
xchg
pop
int3
jb
mov
add
mov
outsb
xchg
add
mov
add
jae
arpl
fcomi
sbb
adc
add
idivb
fimuls
out
insl
fisubrl
out
lahf
sbb
aam
leave
dec
adc
and
mov
sub
mov
mov
jbe
cmp
popf
sbb
xchg
fs
mov
jle
jp
jb
mov
enter
ljmp
adc
sub
adc
test
mov
cld
loop
mov
pop
das
mov
lret
add
mov
mov
push
push
xchg
cltd
sbb
sbb
lcall
mov
mov
mov
icebp
pop
sub
mov
rolb
mov
aad
inc
push
mov
call
mov
add
outsl
inc
add
sti
jno
and
sub
mov
sbb
hlt
push
add
popa
cmovbe
addb
inc
xchg
test
inc
jbe
mov
cli
dec
out
add
or
fwait
add
sbb
jbe
loope
jno
addr16
mov
push
cmc
clc
movb
insl
out
xor
mov
sub
inc
jl
lea
pop
mov
pop
imul
sahf
pop
and
mov
add
js
adc
mov
add
mov
std
fnstsw
in
fsts
mov
mov
xlat
and
lahf
outsl
pushf
loopne
mov
add
inc
cmp
cmp
add
lods
push
xor
mov
push
addr16
and
mov
mov
xchg
aam
mov
mov
dec
inc
stc
mov
xor
fldt
inc
xchg
cwtl
or
mov
add
jecxz
imul
mov
mov
xchg
add
addb
addb
push
inc
dec
xchg
in
mov
add
jnp
repz
and
pop
inc
mov
mov
mov
mov
outsb
mov
cltd
push
mov
std
orl
cwtl
and
mov
mov
mov
add
or
add
call
add
and
mov
sbb
add
sbb
push
rolb
mov
into
mov
aad
mov
out
mov
fs
sub
push
add
mov
outsl
xchg
mov
jne
or
inc
add
push
sbb
mov
mov
lods
scas
and
gs
pop
sbb
jmp
jmp
loope,pt
je
cmp
pop
out
pop
add
mov
sbb
add
test
xchg
inc
dec
out
mov
add
add
mov
or
test
mov
mov
test
jae
dec
mov
mov
mov
add
add
xchg
std
add
jp
ds
insb
sbb
add
mov
sub
repz
adc
mov
push
js
dec
stos
adc
mov
inc
stos
mov
stos
and
add
add
mov
into
scas
jnp
add
ret
pusha
add
mov
add
sbb
mov
mov
fadds
inc
mov
add
in
jg
sti
dec
mov
iret
imul
mov
arpl
insb
sbb
mov
and
and
mov
fwait
loopne
mov
cmp
insb
mov
fisttps
mov
mov
fiadds
add
add
add
sub
cli
xor
mov
aad
or
xor
inc
leave
adc
sub
add
mov
bound
mov
mov
cmpsb
scas
xor
xor
mov
add
add
jl
or
fstpt
insl
dec
jns
add
jmp
mov
mov
lcall
mov
popa
jge
add
int3
popa
or
pop
xor
mov
xchg
push
push
jbe
push
dec
lcall
mov
mov
add
sub
cmp
inc
cmp
mov
adc
add
jnp
inc
push
xchg
loope
movl
fadd
rolb
mov
push
add
add
and
xchg
push
xor
icebp
push
add
js
addb
push
cmp
add
adc
mov
lock
add
into
push
pop
jno
dec
js
aas
aaa
pop
xchg
push
add
mov
sbb
inc
scas
stos
stc
jb
mov
add
out
push
inc
add
inc
push
add
mov
add
stos
fs
add
loope
out
test
jae
mov
dec
jno
mov
xchg
imul
add
rsqrtps
mov
dec
fcom
or
add
mov
add
mov
mov
mov
imull
jns
pop
push
xor
add
cld
lock
enter
add
enter
icebp
push
add
cmpsl
rolb
mov
addr16
mov
outsb
dec
fnstcw
sti
push
dec
push
sti
data16
pop
xor
scas
mov
push
add
add
mov
pushf
loopne
mov
push
out
cmp
lret
mov
and
xchg
out
sub
loope
push
add
mov
mov
bound
mov
outsl
jbe
push
add
or
cwtl
ljmp
iret
cmc
mov
add
push
fs
fxch
pop
xchg
add
push
imul
add
dec
dec
cwtl
add
mov
sub
cmp
mov
das
es
adc
aas
sbb
stc
mov
xor
loopne
mov
add
mov
pop
aam
mov
push
std
push
add
mov
mov
in
icebp
mov
in
ret
xor
dec
insl
pop
ss
push
add
mov
dec
and
dec
xchg
adc
jp
es
add
mov
out
and
xor
xchg
xor
fsubr
jge
popf
daa
pop
call
mov
inc
pop
icebp
add
adc
add
xlat
inc
add
xor
jno
loop
mov
lock
bound
mov
jg
add
add
add
push
test
movsl
pop
push
push
mov
mov
fdivs
add
arpl
fcmovu
pop
repz
or
rolb
inc
add
mov
rolb
mov
inc
cmpsl
test
mov
rolb
mov
mov
mov
xor
mov
mov
cmp
and
dec
addb
stos
cmp
cmc
xor
xchg
ljmp
lret
xor
cmp
add
xchg
inc
add
les
pop
outsb
jecxz
mov
mov
jo
mov
dec
cmp
fdiv
xor
lcall
xor
in
pop
mov
pop
mov
mov
xchg
mov
mov
leave
out
rolb
mov
mov
imul
out
cmp
popf
shrl
and
and
mov
mov
xchg
push
add
mov
mov
shl
aad
xchg
xchg
mov
mov
aaa
ljmp
mov
mov
pop
inc
cmp
stc
in
fcoml
insl
cmp
add
add
mov
cmp
add
jb
mov
leave
pop
bound
mov
int3
out
sti
cli
jne
outsl
xor
mov
jl
es
pop
adc
mov
mov
in
arpl
bound
mov
jnp
add
fistpll
jg
out
lods
cmc
repnz
add
pop
ret
ficoms
add
lret
sbb
loop
mov
inc
ret
mov
mov
mov
add
and
mov
add
in
push
mov
mov
sbb
add
loope
aas
ljmp
mov
dec
xlat
mov
cld
xchg
loope
shll
mov
mov
xchg
sbb
sub
jecxz
mov
js
addb
cmp
pop
loope
rcr
pop
cmp
pusha
add
mov
imul
ljmp
in
pop
xor
hlt
fdiv
add
out
addb
xchg
mov
xchg
add
mov
mov
aaa
inc
xlat
lods
scas
inc
add
cld
ret
mov
mov
xchg
int
pushf
hlt
xor
mov
test
adc
or
adc
cmp
mov
roll
stos
xor
lods
push
ret
aad
jae
mov
xor
mov
sub
mov
lcall
mov
int
or
sbb
sbb
sub
aad
in
push
lcall
rolb
ffreep
add
int
jae
jg
sti
loope
add
sbb
into
mov
mov
add
inc
pop
inc
rolb
sbb
or
mov
pop
icebp
lret
repnz
mov
test
sbb
add
xchg
add
inc
flds
nop
add
inc
push
and
xor
ss
lret
repnz
mov
mov
jle
xor
pop
pusha
add
add
mov
mov
jo
mov
lods
sub
fbld
mov
mov
aas
faddp
dec
aam
mov
imul
cmp
mov
xor
mov
loopne
mov
es
push
iret
dec
mov
or
aaa
rolb
mov
pop
mov
loop
mov
leave
rolb
mov
call
jne
cmp
pop
scas
push
gs
jecxz
push
push
add
mov
aad
add
pop
rolb
mov
rolb
mov
mov
add
fidivrl
xchg
xchg
fcmovnu
call
mov
xor
mov
filds
cwtl
in
jo
mov
dec
dec
push
ja
je
clc
xor
sahf
imul
or
mov
sub
xor
stos
jb
mov
sbb
add
test
or
ds
lcall
jno
inc
jl
ljmp
lock
jl
lret
neg
in
add
loope
xchg
int
add
cs
leave
das
leave
stos
push
xor
dec
xchg
decb
clc
testl
pop
stos
insl
sub
sbb
push
jae
push
xor
mov
dec
aas
and
int
lods
jae
add
add
test
mov
mov
add
and
out
push
add
or
mov
in
push
sti
xchg
mov
ficoms
push
add
arpl
add
xor
add
mov
sti
mov
fdivs
stos
jno
pushf
daa
add
mov
arpl
add
jo
mov
sahf
or
mov
mov
inc
jae
mov
mov
addr16
pop
lds
out
adc
add
test
add
jb
mov
add
in
sub
jb
mov
jno
add
cli
mov
jno
add
out
add
mov
xor
imul
jo
mov
cmp
push
fcmovb
enter
mov
jle
sbb
cld
inc
outsb
jp
mov
add
add
mov
add
ret
mov
dec
pop
push
stos
clc
dec
dec
jnp
sbb
popf
push
loop
mov
mov
push
lret
lods
out
shll
xor
sub
sub
mov
pop
push
inc
cmp
mov
add
mov
mov
add
mov
test
and
data16
mov
add
clc
in
add
repnz
xor
inc
lret
xor
add
add
aas
sar
sti
and
mov
add
stos
xor
mov
mov
mov
add
add
push
xchg
and
mov
mov
lret
jo
mov
sti
test
mov
pop
or
add
push
mov
mov
add
push
clc
loope
enter
jno
add
add
dec
inc
mov
pop
sbb
adc
mov
pop
filds
push
ds
mov
icebp
enter
ds
ret
pushf
lahf
pop
js
movsl
cs
lds
ss
addb
mov
jae
add
stos
es
push
mov
fidivl
lahf
es
pushf
and
mov
add
mov
and
push
je
add
aas
add
mov
sbb
push
add
xchg
or
pop
cmp
ja
clc
clc
icebp
sub
push
xchg
dec
test
lret
dec
mov
and
mov
outsb
and
jl
test
cwtl
inc
adc
andl
lods
mov
push
aas
mov
stos
js
sbb
add
popa
shr
add
fimull
dec
sub
xor
mov
cwtl
inc
mov
mov
xchg
popa
test
xchg
add
ja
xchg
sbb
jne
in
adc
lds
add
add
mov
pusha
add
addr16
inc
lahf
aam
dec
je
mov
add
inc
imul
mov
push
dec
and
mov
fstpl
cmp
cmp
add
jae
jnp
sub
xchg
pop
or
add
fisubrl
jno
and
mov
add
pop
push
fiaddl
mov
xor
mov
sbb
cmp
mov
leave
hlt
push
add
xchg
aaa
xor
test
cmpsl
scas
sub
add
bound
mov
inc
add
lea
jae
or
add
or
lock
mov
idivb
mov
xor
out
lcall
xor
inc
add
aas
sub
add
cltd
shll
insb
mov
add
add
cmpsl
adc
mov
loopne
mov
enter
add
add
add
jecxz
add
lods
insb
stos
cmp
xlat
mov
cld
sub
jbe
add
lods
mov
roll
xchg
pop
push
hlt
xchg
nop
add
add
insl
rolb
sub
aad
pop
or
cs
popa
mov
xchg
mov
add
popf
dec
outsl
js
add
add
cmp
movsb
cmp
addb
xchg
add
add
loop
mov
cli
jb
mov
inc
lea
add
pop
add
mov
add
sub
filds
sbb
in
les
mov
lcall
ja
rolb
mov
scas
scas
jno
mov
emms
xor
mov
mov
cmp
lock
mov
cmp
mov
mov
out
mov
es
scas
shll
mov
add
inc
lret
mov
loopne
mov
xchg
jmp
mov
add
pop
mov
or
xor
mov
fsts
push
out
inc
add
add
add
xor
scas
fdivr
sub
addb
sti
push
add
out
cmp
pop
icebp
rolb
mov
xor
mov
cmp
subl
adc
mov
mov
mov
movsl
dec
jae
pushl
js
repnz
sub
add
pop
mov
add
add
add
mov
push
outsb
cmpsl
jns
and
cmpsb
rolb
mov
mov
mov
jne
int3
pop
or
cs
mov
out
mov
inc
stc
xor
lock
fs
or
es
push
std
mov
mov
xlat
pop
sub
int3
xor
jecxz
fs
mov
dec
enter
insb
out
jnp
test
sti
dec
cmp
aad
fsubp
adcl
xor
add
mov
mov
mov
add
sbb
insl
jb
mov
add
sti
xchg
scas
inc
mov
add
stc
leave
adc
mov
aas
dec
int3
int3
cmp
dec
jbe
add
mov
sub
mov
add
add
add
fidivrl
cmp
mov
jbe
push
add
out
inc
add
add
push
xchg
push
xchg
cld
movsl
mov
mov
mov
push
pushf
xchg
jp
cmp
mov
or
adc
mov
pop
mov
enter
mov
mov
cli
xor
mov
sti
add
mov
inc
std
test
cmpsb
dec
aam
dec
push
dec
hlt
out
js
stos
bound
mov
mov
mov
jo
mov
mov
mov
mov
sbb
mov
rolb
mov
icebp
sub
enter
mov
push
fsubrs
mov
add
into
test
movsl
cmp
outsb
lds
fmuls
inc
call
dec
jb
mov
mov
mov
push
add
xor
mov
xchg
adc
mov
and
add
lahf
stos
imul
cltd
and
insb
and
sti
sbb
lock
xor
data16
add
divb
add
mov
adc
pop
loop
mov
movb
mov
insb
push
in
leave
outsb
xor
mov
add
or
outsl
cmp
inc
mov
lahf
std
cmpl
adc
fisttpl
daa
les
add
stos
in
mov
pop
clc
mov
cmpsl
xor
sahf
hlt
ror
push
or
lcall
mov
loopne
mov
add
test
xchg
cmp
dec
add
add
loopne
mov
bound
mov
jl
lods
das
sbb
fists
jnp
add
add
add
sbb
mov
punpcklwd
sub
fmul
fdivl
mov
leave
push
add
add
jnp
push
cltd
xchg
dec
cs
adc
repnz
pusha
add
or
or
jmp
call
add
cmp
out
sti
jl
ds
mov
les
mov
inc
push
int
in
std
jge
add
shrl
out
mov
int
or
xor
mov
insl
mov
mov
add
inc
add
cltd
jmp
test
mov
mov
xchg
sbb
js
jmpw
sub
dec
cli
lret
inc
add
mov
cld
add
xchg
fnstenv
or
jmp
cmp
xchg
shld
add
add
cwtl
jmp
je
cmpsl
imulb
fsts
sti
lods
mov
mov
and
mov
add
or
bound
mov
and
mov
xchg
add
xor
rolb
mov
add
jno
push
add
and
push
lock
inc
add
jbe
mov
imul
stc
iret
outsb
or
stos
test
pusha
add
mov
sub
add
sbb
mov
fildll
add
cmc
in
lods
cmpsl
sub
repnz
push
addb
lds
pushf
fwait
rcll
insl
into
mov
xor
nop
add
mov
in
pop
inc
int3
popa
pop
daa
adc
add
mov
stos
xor
dec
sub
xor
or
sub
cmpsb
arpl
cld
in
aas
pop
mov
test
nop
add
mov
adc
add
xor
mov
mov
pop
out
or
jg
pop
call
jge
rorl
sub
and
mov
xor
mov
int3
pop
clc
sbb
fsubrs
lcall
mov
das
xchg
aas
ret
out
test
add
fidivs
add
popf
mov
stos
jge
popa
fcompl
loopne
mov
addb
sub
out
mov
pop
mov
add
add
mov
adc
setae
and
repnz
sti
imul
mov
or
add
jle
sub
in
pop
xchg
test
cmp
mov
xor
mov
xchg
add
xor
mov
mov
add
adc
lahf
adc
lods
loopne
mov
inc
jmp
sbb
xchg
movsb
lea
rcr
aas
rcll
inc
cmc
adc
add
inc
add
mov
mov
sub
inc
add
loope
push
sbb
add
mov
sbb
in
pop
loope
add
add
mov
repz
test
pop
hlt
cmp
mov
mov
add
cwtl
lds
add
pop
or
add
pusha
add
adc
inc
add
popf
aad
xor
mov
and
jnp
push
lock
inc
mov
cli
sub
lods
out
sbb
cld
scas
jbe
push
add
ret
inc
mov
add
dec
push
rolb
mov
dec
xchg
xchg
arpl
addb
pop
mov
mov
fwait
xchg
cmp
add
pop
mov
add
push
xchg
shr
pop
dec
push
add
bound
mov
or
cltd
jns
data16
ss
pop
mov
push
pop
into
cmp
test
mov
fs
add
fs
stos
push
lret
fstps
inc
and
push
xchg
adc
mov
ret
or
mov
test
mov
add
dec
shll
or
add
mov
call
cmp
lret
out
adcl
int
add
lods
xchg
int3
repz
mov
fistpll
adc
inc
loop
mov
sbb
ficompl
adc
add
mov
pshufw
ljmp
cltd
sets
cmpsb
cmp
daa
test
push
inc
orl
sti
add
xchg
rolb
inc
add
lock
push
inc
lahf
jle
add
xchg
movsl
and
push
push
and
add
mov
cmpsb
xchg
sbb
dec
dec
jo
mov
cmp
add
add
scas
jecxz
fcom
adc
mov
cmpsb
das
push
add
into
imul
std
rolb
mov
and
les
sar
xchg
push
add
fldl
sub
add
dec
js
jl
add
dec
push
mov
adc
jl
adc
or
mull
cs
fwait
add
mov
dec
mov
inc
cmpsl
mov
addr16
aam
ljmp
mov
mov
in
jne
orl
loop
mov
add
push
mov
mov
hlt
adc
add
mov
cmp
add
mov
add
push
out
mov
mov
inc
inc
push
push
cmp
add
enter
std
and
add
jae
adc
imul
xchg
std
mov
add
add
pop
jbe
mov
test
add
push
add
push
add
clc
jo
mov
fistpll
jnp
loop
mov
sahf
incb
cmp
push
ret
xchg
cmpsl
mov
adc
or
pushfw
nop
add
pop
jl
mov
mov
mov
add
aam
cmp
cmp
jp
xchg
pop
leave
addb
adc
mov
mov
jae
add
cmpsl
sbb
pop
push
push
fsubl
add
xchg
in
push
arpl
dec
sub
enter
cmp
jne
repnz
sub
add
mov
es
out
cli
adc
sub
test
out
xchg
cltd
in
out
sub
sahf
out
add
out
sbb
sub
mov
add
cmp
inc
icebp
fstl
mov
loope
add
aas
inc
je
and
sub
and
mov
testl
scas
mov
cmpsb
cmpsb
jge
lret
mov
incl
add
mov
add
xlat
std
sbb
mov
xchg
add
push
mov
insl
les
jecxz
pop
ret
mov
loop
mov
mov
xor
in
jae
aas
xchg
ja
add
dec
inc
mov
shr
addr16
or
add
adc
mov
add
or
add
out
inc
add
clc
fdivrp
rorl
inc
addr16
inc
das
push
icebp
mov
mov
mov
add
mov
push
mov
movsb
mov
add
aas
rcll
repnz
rolb
mov
and
mov
sbb
mov
mulb
add
mov
and
lock
rolb
or
add
and
mov
mov
adc
mov
iret
pop
lock
jb
mov
arpl
fadds
lahf
xchg
fists
sub
push
jbe
pop
or
push
cmp
add
lahf
daa
push
dec
loop
mov
out
cld
sbb
in
add
dec
repz
js
sub
roll
add
adc
mov
outsl
push
dec
loop
mov
in
sti
xchg
add
cmp
xchg
movsb
test
and
or
lret
xor
jl
insb
lea
dec
xor
add
cmp
add
add
jp
add
mov
push
adc
add
cmpsb
stc
xor
daa
test
dec
inc
dec
iret
loopne
mov
add
sbb
jae
dec
lret
add
mov
dec
ds
jg
or
inc
add
mov
jnp
repz
push
in
jmp
xchg
sbb
push
mov
mov
dec
cmp
fs
clc
dec
xor
fcoms
mov
add
mov
mov
pop
inc
add
nop
add
mov
ds
stc
dec
ds
dec
mov
and
js
repz
loopne
mov
mov
dec
jg
push
add
push
std
push
add
fildl
pop
or
stos
mov
fnsave
xor
mov
jecxz
jp
add
lea
mov
add
lods
repnz
inc
rolb
mov
add
cwtl
addb
push
xchg
and
mov
xor
mov
in
xchg
repnz
rolb
mov
push
cwtl
mov
out
lahf
clc
xor
subl
sar
push
daa
rolb
mov
addb
adc
mov
inc
cmp
sar
leave
js
mov
mov
sti
pop
fisubl
add
test
jp
jns
add
pusha
add
std
or
mov
xchg
pop
sub
lret
bound
mov
lods
out
fdivl
popf
iret
add
dec
icebp
sbb
xchg
cmp
xchg
aad
sub
test
lahf
xor
movsb
and
out
jg
pop
mov
ss
fstpt
jbe
and
aad
inc
pusha
add
dec
dec
sub
add
push
add
mov
stc
or
jno
pop
jmp
arpl
xor
mov
or
sub
imul
insl
jg
test
mov
adc
mov
inc
roll
mov
shr
mov
xchg
loope
sbb
add
pusha
add
mov
fstps
cmp
pushf
cmp
iret
mov
add
shll
sub
add
imul
and
mov
cwtl
mov
xchg
adc
arpl
sbb
mov
call
jbe
mov
repz
add
push
cmp
dec
fldl
test
scas
addb
pop
pop
push
enter
mov
add
dec
mov
movsb
mov
fwait
shl
adc
and
mov
mov
or
nop
add
push
out
add
add
mov
out
cltd
rol
sbb
imull
xchg
add
ret
lods
lods
xor
mov
add
push
add
mov
loope
je
mov
dec
insl
sub
add
mov
mov
mov
frstor
and
mov
int
int3
mov
dec
push
and
mov
push
mov
push
mov
nop
add
push
pop
lret
movsl
mov
in
test
lret
xlat
punpckhwd
mov
adc
jns
dec
mov
mov
fistpl
or
mov
mov
pop
pop
mov
push
lcall
xchg
xchg
pop
xchg
or
mov
dec
cld
sbb
cmc
mulb
jmp
in
xor
xchg
jmp
dec
pushf
jg
cltd
ret
mov
rolb
mov
mov
mov
dec
frstor
jle
push
cwtl
js
add
add
dec
in
pop
sub
jmp
pusha
add
mov
push
add
mov
jne
xchg
out
add
mov
add
mov
push
add
push
in
in
popa
cltd
aam
rolb
mov
nop
add
dec
mov
sbb
jge
ljmp
and
push
xorl
mov
fsubrl
mov
xchg
out
arpl
add
shll
dec
jo
mov
in
xor
repz
add
push
icebp
dec
divb
mov
aas
or
insl
js
out
ljmp
jle
jg
out
inc
scas
adcl
ss
outsl
jle
or
arpl
push
push
add
loop
mov
sbb
jae
mov
mov
in
mul
jne
jnp
rolb
mov
test
mov
xchg
std
iret
ljmp
jns
jne
dec
nop
add
mov
fbld
mov
add
nop
add
lcall
push
pusha
add
push
and
cmp
fs
inc
push
cld
sub
mov
adc
imul
add
loope
push
push
rolb
mov
adc
mov
movsb
insl
dec
inc
add
push
jnp
jg
mov
es
sub
pop
out
sub
mov
push
mov
or
data16
hlt
inc
add
mov
rolb
mov
fisttpl
dec
in
and
mov
clc
add
popf
add
add
std
in
lds
sbb
in
ds
mov
add
push
insl
push
pop
push
addb
iret
rolb
mov
push
add
add
push
rolb
mov
pushf
mov
ret
addb
push
mov
js
pop
lods
cwtl
scas
repz
roll
in
xchg
movsl
aad
clc
jl
nop
add
sub
add
mov
loope
jle
cmp
xchg
jnp
push
xchg
pushl
xor
add
fdivl
in
rolb
ret
push
and
add
rolb
mov
mov
push
mov
mov
pop
add
mov
add
sub
or
and
mov
in
push
addb
jno
out
push
sub
push
ffreep
add
add
mov
aad
inc
push
push
cmp
mov
add
mov
push
jne
lock
mov
add
add
dec
add
mov
mov
out
sar
or
sub
add
add
addb
repnz
lea
rolb
mov
aaa
jb
mov
rcrl
mov
cmpsl
mov
lock
repnz
fs
xchg
es
and
xchg
arpl
xchg
jge
add
je
stc
fstpt
lock
call
sbb
add
pop
popa
jo
mov
lret
pop
or
push
pop
fists
jge
das
int3
cwtl
or
sti
bound
mov
in
mov
adc
mov
mov
mov
sub
ret
leave
or
das
mov
add
test
addb
pop
sub
jmp
add
sub
ds
adc
arpl
jno
add
mov
mov
push
hlt
mov
mov
mov
into
mov
add
mov
add
ljmp
sub
fstpl
pop
mov
out
add
mov
fsts
mov
mov
lods
lahf
xchg
fidivrl
lea
mov
loope
cmp
inc
push
dec
adc
mov
aas
sbb
or
mov
mov
call
pop
mov
les
add
mov
mov
add
ss
fmul
rolb
mov
mov
sub
popa
and
mov
xor
cmc
or
rcll
add
mov
cmp
and
and
mov
jae
add
hlt
push
add
pushw
lods
jecxz
add
mov
push
push
scas
pushf
inc
in
jns
xchg
add
add
or
out
and
sbb
fstp
idivl
add
cli
into
mov
cmp
mov
jg
add
add
addr16
out
push
or
clc
push
das
pop
enter
jecxz
mov
iret
filds
scas
stos
add
add
ss
lods
scas
push
push
pop
shll
sbb
push
sbb
lea
cltd
jg
fninit
cmp
add
sbb
cli
ja
sbb
push
jg
xchg
pop
add
sub
add
movsl
push
cmp
sbb
pop
cs
fisttps
clc
adc
dec
data16
cwtl
fmull
fnsave
sub
loop
mov
loope
add
mov
rolb
mov
add
into
cmp
pop
sub
clc
adcl
pop
cltd
xor
add
mov
popf
push
in
cld
xchg
cmp
mov
mov
adc
stos
mov
rolb
mov
push
aas
jns
cld
call
addb
movsl
dec
add
stc
testl
rolb
mov
pushf
jo
mov
lods
stc
xchg
sub
add
pop
in
push
call
repz
push
fidivrl
out
sub
js
lret
inc
fimuls
rolb
mov
xchg
push
xor
rolb
fsts
jecxz
add
dec
sbb
add
pop
nop
add
cmp
sub
mov
mov
sbb
add
dec
lret
rolb
loopne
mov
pop
xor
mov
add
xor
sub
punpckhwd
adc
rolb
mov
rorl
xlat
dec
dec
dec
leave
stos
pop
int
xchg
pop
fisubrs
mov
mov
add
inc
scas
fst
mov
sbb
and
push
pop
mov
mov
add
fnstcw
mov
or
cmp
addb
lea
movsl
inc
add
xchg
lret
adc
pushf
push
rolb
xchg
or
mov
adc
aad
add
mov
fbld
mov
push
jp
mov
add
mov
addb
cmpsl
ljmp
cmp
ds
mov
xor
mov
pop
mov
rolb
mov
and
mov
sbb
add
add
lret
or
int
insl
movsbl
push
mov
js
lea
clc
pop
lahf
xchg
lret
sti
in
out
jmp
push
add
jnp
cltd
ret
test
fwait
arpl
mov
and
add
push
xchg
xchg
inc
movsb
dec
sbb
loope
push
xchg
pop
mov
pop
push
add
adc
imul
add
and
dec
sub
mov
cld
stos
int3
out
into
loopne
mov
or
add
add
sbbl
push
add
and
mov
mov
ja
push
les
inc
add
mov
lret
sbb
repnz
mov
mov
fcom
mov
mov
popa
jp
jae
mov
push
inc
imul
mov
add
lods
sbb
add
movsb
iret
cmc
loop
mov
jno
jge
sti
sub
add
inc
sbb
addb
aam
popf
xchg
add
add
cmpsb
test
xor
or
lahf
sub
jge
xchg
rcll
add
lods
shrl
jb,pn
mov
add
push
lss
mov
pop
pop
push
test
insb
mov
add
outsb
fwait
sub
xchg
cwtl
and
xlat
rcrl
dec
outsb
sbb
addb
mov
pushf
inc
leave
mov
xor
mov
xor
mov
mov
adc
stos
xchg
add
in
mov
jb
mov
mov
mov
mov
add
mov
arpl
xor
dec
pop
push
test
mov
mov
pop
scas
in
imul
mov
repnz
mov
sub
xor
mov
sub
jp
push
rolb
inc
inc
mov
pop
int3
add
mov
add
xchg
sbb
inc
jecxz
imul
add
out
mov
setp
int3
jle
jo
mov
jne
es
mov
cmc
in
fsubl
add
xor
pop
add
add
xor
clc
mov
jg
mov
nop
add
and
add
add
mov
add
cmp
push
add
pop
sub
fwait
ss
inc
ss
loop
mov
int
add
lods
jle
inc
mov
notb
mov
mov
jb
mov
daa
out
bound
mov
pop
sti
jbe
add
and
add
add
add
xor
popf
sbb
mov
jb
mov
shll
xchg
mov
dec
xor
add
jae
add
fs
pusha
add
aad
mov
pop
in
int3
jne
mov
add
les
mov
sete
std
sub
hlt
ds
iret
inc
add
cmp
ds
stc
movsb
xor
lods
xor
ficoms
in
push
fistpll
push
push
divl
push
cmpsb
fstps
xor
mov
add
pop
mov
mov
aam
add
mov
ret
test
xchg
cmp
fidivs
lcall
hlt
mov
jecxz
cmp
out
mov
daa
xchg
push
lret
add
push
add
mov
inc
add
das
stos
sub
mov
addb
out
add
mov
shl
add
mov
shll
mov
xchg
cltd
movsl
rolb
mov
xchg
loopne
mov
insl
test
xchg
push
dec
mov
add
insb
fimull
fs
xlat
call
xor
out
push
cwtl
xchg
jnp
cwtl
mov
and
mov
rorl
dec
dec
cwtl
mov
add
sahf
dec
addr16
enter
mov
lahf
notl
sbb
test
pusha
add
mov
dec
xchg
add
fs
mov
cmp
mov
mov
es
mov
icebp
xor
mov
mov
cmp
scas
gs
loop
mov
add
loope
loop
mov
or
fiaddl
repnz
pop
cmp
dec
pop
xor
mov
add
jbe
add
into
mov
ja
add
xchg
enter
addb
cld
mov
inc
mov
sbb
out
add
mov
mov
mov
add
jecxz
dec
or
mov
pop
xchg
xor
mov
lds
mov
mov
mov
fstpt
add
push
inc
jg
cmp
into
into
loope
in
lcall
xor
dec
imul
add
xor
xchg
repnz
mov
popa
cwtl
jp
repnz
push
sub
add
xor
sub
fs
inc
mov
mov
mov
pop
push
mov
mov
repnz
mov
sbb
jo
mov
inc
add
into
fs
mov
mov
mov
mov
add
mov
das
or
mov
js
add
mov
es
push
insl
mov
mov
arpl
add
pop
push
jp
xchg
xor
mov
addb
mov
lret
xlat
sub
mov
lods
adc
mov
mov
leave
icebp
mov
mov
add
dec
and
jnp
xchg
mov
out
xchg
lds
mov
or
xor
mov
xor
mov
mov
aas
cmp
add
push
adc
inc
mov
add
jb
mov
cmp
loopne
mov
cmc
and
in
ret
add
mov
add
mov
test
pop
icebp
xlat
aas
cmp
insb
cmp
push
or
dec
sbb
fldl
mov
mov
pop
mov
cmp
add
jne
clc
repnz
push
mov
mov
aam
out
in
call
dec
lcall
add
mov
add
loope
idiv
xor
mov
test
add
das
je
mov
xchg
and
mov
fimuls
mov
mov
sub
loopne
mov
and
mov
outsb
mov
cmp
das
ljmp
push
mov
mov
icebp
mov
shr
add
cmp
push
jecxz
pop
lret
pop
sti
cmpsb
xchg
scas
jnp
pop
pop
cmp
jnp
rolb
mov
lret
sub
rolb
add
add
add
out
add
inc
daa
cmc
jge
xchg
or
add
xchg
test
lahf
lret
or
add
mov
push
add
mov
in
sub
add
jp
es
pop
push
add
pop
repz
outsb
push
aaa
sub
into
cmp
xlat
mov
popl
mov
cli
pop
sub
mov
popf
mov
add
adc
iret
lods
mov
add
ret
dec
jae
add
mov
int
inc
pop
xchg
adc
push
mov
cltd
fsubs
mov
xchg
imul
push
ret
scas
aam
movsl
sbb
inc
mov
sub
dec
cld
adc
xlat
pop
enter
inc
fwait
das
sub
adc
mov
out
add
ljmp
cmpsl
clc
mulb
mov
fldpi
addb
rolb
popa
imul
mov
inc
cmpsl
add
mov
xor
mov
add
mov
and
mov
push
fwait
cmpsb
out
stos
mov
jnp
out
and
or
cmp
es
ljmp
add
xor
mov
adc
mov
mov
nop
add
push
dec
outsl
and
jo
mov
loopne
mov
loopne
mov
mov
out
xor
lods
fdivl
cmp
bound
mov
add
dec
add
ss
ret
jp
add
addb
dec
push
inc
sub
mov
fs
xor
cltd
mov
jne
xchg
or
flds
mov
jb
mov
cwtl
mov
aad
add
add
not
loope
sbb
into
lret
mov
add
test
les
mov
mov
mov
add
inc
sbbl
adc
mov
push
jmp
jge
scas
adc
gs
mov
mov
add
jle
fsubs
add
insb
insl
xchg
mov
add
pop
mov
add
int3
push
mov
mov
mov
repz
outsb
shll
aad
cmc
mov
mov
or
push
test
daa
ja
mov
mov
adc
mov
das
loopne
mov
ret
mov
or
jne
mov
leave
jle
je
add
ds
je
fsubs
add
add
mov
sbb
add
mov
loopne
mov
lcall
bound
mov
mov
or
mov
pop
or
lds
aam
inc
add
fsub
enter
cltd
sbbl
das
addb
test
xchg
addb
adc
mov
scas
aas
in
dec
dec
mov
aaa
addb
pop
aaa
push
bound
mov
add
jle
sbb
iret
push
add
repnz
negb
xchg
rolb
mov
jge
push
push
lods
mov
add
sbb
popf
shl
xchg
aad
mov
xor
cmp
mov
add
adc
mov
or
gs
mov
pusha
add
jp
dec
mov
or
cmp
call
dec
mov
add
mov
dec
rolb
mov
mov
mov
add
fadds
ret
sbb
roll
repz
call
xchg
bound
mov
jno
lret
sbb
mov
add
cmp
add
add
out
dec
adcl
fwait
test
dec
fcoms
mov
jb
mov
scas
scas
or
mov
xlat
mov
mov
dec
and
mov
jnp
add
rolb
push
and
or
xchg
daa
sbb
repnz
movsl
dec
mov
mov
cmpsb
and
add
insl
sub
add
mov
or
and
rolb
es
imul
pop
mov
mov
fstpt
sbb
add
add
add
jl
cmp
cmc
inc
jns
and
mov
cltd
ret
mov
sahf
lahf
test
jg
add
mov
rolb
mov
sub
lea
sbb
mov
lea
and
mov
mov
push
push
dec
pop
movsl
fbstp
or
add
mov
insb
insb
mov
arpl
dec
mov
mov
add
scas
ljmp
mov
enter
addr16
add
iret
inc
sarl
lock
ja
dec
sbb
in
pop
adc
mov
mov
add
sbb
int3
or
pushf
add
mov
sbb
cmc
ret
cmpsl
cmp
add
sbb
add
fwait
gs
and
sub
mov
ja
out
pop
lods
hlt
movsl
push
push
int3
pop
dec
inc
popf
clc
insb
std
movsb
bound
mov
and
mov
add
mov
cmpsb
call
add
mov
pop
scas
movsl
add
mov
add
push
les
push
add
dec
adc
cltd
inc
in
roll
aaa
xchg
jb
mov
sub
xor
sub
add
and
sub
add
int
or
sub
sub
lret
add
mov
jmp
scas
inc
lds
mov
inc
add
nop
add
insl
cmpsb
ret
les
add
jnp
enter
movsb
rcr
shll
test
add
in
sub
out
cmp
add
add
inc
cs
fstpt
sbb
and
mov
mov
gs
add
push
push
shl
dec
mov
sbb
loopne
mov
dec
jge
js
dec
add
push
cltd
cmp
add
and
adc
pop
loopne
mov
int
jmp
mov
in
adc
xchg
sti
cmp
sub
addb
push
inc
iret
mov
mov
js
popl
mov
leave
lock
mov
imulb
dec
push
push
xor
mov
mov
in
pop
sbb
adc
push
imul
adc
mov
mov
push
xchg
push
and
mov
nop
add
pop
mov
xchg
add
xor
push
bound
mov
adc
mov
lret
lcall
in
les
jp
arpl
add
mov
inc
repnz
ror
adc
mov
lret
and
mov
mov
aas
cltd
arpl
ret
sbb
adc
jmp
addl
sub
jmp
mov
idiv
xchg
and
mov
rcl
pop
cmp
in
jl
sahf
js
xchg
xchg
and
repz
mov
and
mov
mulb
call
push
pop
xor
mov
inc
mov
in
add
cmc
out
out
mov
mov
addb
mov
mov
sub
mov
notb
mov
mov
mov
pop
and
mov
xor
adc
mov
add
add
pop
add
js
inc
cwtl
cmp
mov
mov
add
dec
enter
jge
mov
add
lds
sbb
xchg
jl
fidivrl
arpl
add
mov
in
mov
fnsave
or
jl
add
scas
fsubr
in
mov
mov
add
pop
in
test
jl
push
in
mov
or
lock
cltd
mov
push
mov
mov
int
push
popa
notl
mov
mov
scas
out
cmp
cs
jl
lods
inc
jle
mov
dec
lods
sbb
add
xchg
in
pop
sub
clc
sub
jecxz
mov
add
stc
jmp
ja
into
xor
mov
sub
mov
xor
sbb
dec
sbb
mov
cld
pop
pop
inc
rorl
fmulp
and
mov
sbb
movsb
mov
jmp
pushf
push
xor
mov
rep
icebp
and
mov
pop
mov
fistps
jae
add
jg
repnz
add
jmp
cmp
add
insl
mov
push
leave
aas
mov
add
mov
mov
mov
add
xor
mov
add
lds
mov
gs
mov
iret
add
mov
add
gs
test
dec
sti
push
icebp
inc
lahf
out
fs
sbb
int3
jnp
fistpl
outsb
jb
mov
loopne
mov
les
mov
cs
xchg
movsb
das
jge
lcall
aas
jge
addr16
scas
aaa
jl
add
mov
add
add
jbe
inc
or
ds
arpl
js
nop
add
mov
mov
setb
mov
clc
pusha
add
sbb
pop
and
mov
sub
mov
add
push
test
mov
inc
add
mov
inc
mov
movq
cmpsb
in
dec
js
xchg
test
nop
add
sbb
jnp
loopne
mov
loop
mov
push
and
pushf
call
mov
add
add
or
push
rolb
js
ss
in
arpl
ja
ja
add
bound
mov
add
sub
lahf
push
mov
outsl
movsl
test
std
imul
add
mov
add
inc
add
in
xchg
mov
dec
dec
xor
fistpl
add
mov
das
lods
add
sarl
mov
xor
mov
mov
jno
out
into
mov
sub
fdivrp
repz
cmp
adc
add
add
mov
popf
hlt
mov
mov
stos
sbb
mov
and
mov
dec
xchg
add
add
pop
andl
scas
ret
scas
ret
js
psubd
cld
fistps
add
dec
mov
add
mov
mov
mov
int
fdivl
out
out
lods
vmovaps
cmp
add
out
sub
imul
inc
add
mov
mov
mov
add
mov
xor
add
dec
jno
cmp
jno
xchg
inc
cmp
rolb
sbb
inc
stc
sub
fadd
sub
stc
sbb
or
in
in
xor
mov
add
xor
mov
add
push
fcompl
push
repnz
insl
pop
test
xchg
mov
dec
inc
incb
icebp
stos
and
dec
xchg
add
mov
int3
and
or
or
sbb
negl
call
cli
lods
xlat
sub
add
add
mov
cmp
bound
mov
leave
sbb
dec
sbb
cwtl
mov
xor
lcall
out
push
add
add
inc
aaa
xor
mov
mov
pop
add
push
push
pop
pop
sub
cmp
xchg
je
mov
sbb
ja
jb
mov
xchg
fists
lock
je
mov
dec
or
sub
mov
stos
sub
xor
adc
mov
mov
mov
pusha
add
sbb
add
cmp
out
jge
jmp
shrl
add
xchg
repz
pop
xor
mov
rolb
mov
les
push
inc
jg
outsl
jae
pop
jle
add
adc
mov
inc
add
mov
sub
add
mov
jo
mov
and
add
sbb
mov
pop
sarl
mov
dec
mov
mov
stos
sbb
mov
adc
and
inc
fcoml
outsb
mov
mov
add
mov
out
add
loop
mov
testb
push
push
aam
add
add
push
dec
push
int
jle
jg
gs
mov
mov
add
and
cmp
rolb
mov
push
add
mov
jbe
data16
mov
sbb
mov
adc
jmp
test
and
mov
imul
xor
jno
cmpsl
lds
mov
jecxz
or
out
add
mov
imul
mov
ljmp
push
add
add
out
jno
jno
sub
adc
jo
mov
mov
ret
cmp
div
lods
inc
add
mov
ret
xor
jne
xlat
mov
inc
loope
cmp
add
sub
hlt
test
mov
or
mov
inc
push
jbe
or
add
sub
ficoml
daa
add
xchg
ljmp
mov
out
testb
mov
mov
and
mov
dec
std
cmp
add
adc
mov
sub
fucomp
mov
insb
pusha
add
xor
pop
in
movsb
in
in
add
inc
jmp
movsb
ljmp
mov
push
add
add
add
loop
mov
jns
add
add
jno
pop
xchg
das
les
mov
mov
lock
call
mov
outsl
aad
jb
mov
mov
mov
xchg
add
rolb
sub
loop
mov
mov
push
cmp
add
add
lea
int
es
xchg
dec
xor
in
clc
push
mov
rolb
popa
add
mov
fisubrs
mov
rolb
mov
add
add
add
xchg
clc
mov
sub
add
xchg
sbbl
inc
add
push
fisttpll
rolb
mov
push
orl
add
push
sbb
jnp
inc
decb
xor
add
add
xor
xor
mov
fidivrs
jnp
fcompl
add
mov
mov
add
add
sub
mov
jae
and
or
cmp
in
out
push
repz
roll
mov
pop
push
push
add
mov
arpl
jbe
int
add
mov
xor
imul
mov
test
dec
or
pop
xchg
mov
ret
js
add
pop
adc
mov
ja
lea
xchg
lahf
push
lds
adc
je
rcrl
loop
mov
mov
add
pop
popa
rolb
mov
int3
push
add
mov
cld
or
dec
jge
les
mov
out
das
sub
das
sub
push
jbe
cmp
add
mov
dec
mov
and
into
sbb
sahf
add
sti
mov
bts
sbb
pop
jg
es
popf
or
filds
mov
rolb
mov
cmp
loop
mov
jmp
add
insl
cmp
pop
sbb
xchg
mov
add
add
aam
sti
ja
add
jae
add
mov
push
idivl
sub
das
cmp
outsb
push
popa
mov
fcmovne
mov
jnp
pop
mov
sub
popf
in
adc
xchg
push
es
add
sbb
lret
jmp
mov
add
stc
cltd
rolb
add
sbb
add
mov
bound
mov
fwait
jp
xor
lret
cmpsl
sbb
sbb
jle
push
movsb
cltd
xchg
mov
ljmp
fcmovb
cmp
loopne
mov
xor
mov
fs
sub
adc
fbstp
add
ds
popf
gs
xor
cld
xor
mov
addb
lret
ret
add
mov
cld
jnp
adc
addb
jg
rolb
sub
jb
mov
mov
add
mov
sbb
fwait
sub
ret
fneni(8087
add
mov
rolb
mov
arpl
mov
pop
jl
and
add
mov
ficomps
int3
sbb
adc
pop
mulb
add
mov
add
imul
jbe
sub
cmp
mov
pop
mov
add
push
add
dec
scas
pushl
and
dec
les
add
cmp
sub
add
into
sbb
out
or
movb
xchg
cmpsl
out
mov
lods
and
dec
out
fbstp
mov
push
xchg
add
fsubs
cmp
inc
add
mov
jp
push
add
clc
rcll
aad
out
mov
and
mov
push
xor
jg
orl
and
mov
add
jno
jae
loop
mov
ret
mov
mov
pop
sbb
inc
add
push
mov
jae
add
shr
and
or
mov
cmp
into
cmc
ret
xlat
jne
loop
mov
add
adc
add
sbb
mov
dec
push
aad
add
mov
data16
pop
stos
int
add
add
popa
jg
mov
test
ja
sub
fstp
test
imul
mov
aaa
movsl
inc
adc
add
outsl
mov
mov
and
lret
jp
out
dec
ja
xchg
outsl
test
out
mull
inc
cmp
fidivs
decb
dec
pop
ljmp
mov
add
add
mov
pusha
add
cmc
nop
add
pop
sbb
sbb
sbb
xlat
stc
and
mov
loopne
mov
ljmp
leave
stos
adc
int3
jnp
add
scas
enter
arpl
adc
mov
or
pop
lea
pushf
jge
sbb
rolb
mov
xor
mov
enter
jle
add
add
mov
idivl
sub
mov
dec
add
mov
es
out
nop
add
stc
and
push
xchg
testb
add
pop
lds
or
hlt
insb
xor
mov
add
xchg
inc
lret
xchg
add
paddb
adc
imul
out
xor
cmp
fists
sbb
push
sbb
mov
test
dec
dec
xlat
push
add
mov
push
cs
stc
flds
sbb
ja
cmp
nop
add
adc
push
scas
cli
lds
and
out
lods
pushf
mov
mov
je
cmpsb
lock
fs
mov
popa
jb
mov
xchg
aaa
or
add
mov
fucom
fndisi(8087
jo
mov
cmp
pop
cwtl
mov
xlat
dec
pop
xchg
push
stc
lds
pushf
lret
cmp
pop
fs
xchg
push
pop
xchg
xor
gs
fisttps
cld
sub
aam
push
decb
clc
jnp
movsl
push
add
mov
or
mull
mov
aaa
xchg
add
push
jbe
pop
repz
mov
add
mov
mov
sbb
mov
push
in
outsl
xchg
cld
sbb
sub
cld
sbb
in
mov
push
mov
mov
mov
inc
add
pusha
add
mov
popf
dec
xchg
jmp
or
add
fbld
add
add
or
add
dec
pop
jmp
ljmp
add
cmp
loopne
mov
xor
pop
add
sbb
fstl
mov
mov
jp
or
mull
jp
jmp
mov
sub
sti
xchg
jmp
push
movsb
sub
add
add
dec
xchg
sbb
add
add
dec
rolb
mov
mov
mov
and
mov
push
mov
dec
sub
sbb
pop
cld
cmp
pop
mov
mov
test
mov
mov
fwait
inc
outsl
adc
daa
enter
mov
add
add
mov
mov
sbb
mov
stos
lea
add
in
sub
pop
loopne
mov
and
repz
push
inc
lret
stc
lds
add
and
xor
mov
rolb
mov
mov
xchg
jbe
add
adc
mov
xchg
aam
icebp
sarl
and
repnz
je
mov
clc
mov
mov
pusha
add
les
fildll
add
xchg
jnp
fcoms
out
in
xchg
add
push
jne
repz
and
add
mov
ret
adc
dec
stos
dec
xchg
out
add
mov
ss
adc
mov
mov
addr16
mov
test
add
cltd
repnz
or
pop
in
popf
cmp
lods
insb
xchg
movl
orl
pop
cli
xchg
call
addb
lcallw
mov
inc
or
push
insl
and
aas
fs
add
mov
push
insb
mov
js
aam
xchg
test
mov
add
mov
in
arpl
dec
stos
pop
int3
fistps
js
dec
pop
in
mov
add
mov
inc
hlt
dec
fwait
sbb
pop
nop
add
inc
jmp
int
jb
mov
xor
or
mov
mov
test
xor
pop
cmp
sbb
fadd
and
daa
dec
stos
adc
mov
dec
and
mov
pop
push
add
cmp
xor
add
mov
mov
add
addb
outsl
mov
add
mov
add
cmp
add
and
and
mov
mov
js
dec
xor
stc
ret
push
xchg
je
loopne
mov
jl
dec
jae
cs
test
xor
sbb
xor
mov
add
add
inc
jno
add
loop
mov
push
cmp
sbb
pop
mov
cli
fimuls
mov
lret
and
lods
adc
mov
mov
stos
sbb
pslld
mov
imul
fnsave
mov
mov
add
xchg
and
pop
push
pop
fwait
pop
cmp
data16
and
mov
cld
jne
push
add
dec
dec
adc
mov
pop
sub
jns
add
bound
mov
push
mov
jg
popa
rol
mov
add
xchg
push
or
sub
rolb
cmp
or
icebp
imull
iret
rolb
mov
jnp
push
sub
mov
int
add
in
fmuls
sbb
add
and
mov
push
pop
lahf
mov
addb
ja
pop
push
scas
insb
lret
bound
mov
push
add
jne
loope
lods
xchg
mov
cmp
add
sub
mov
mov
add
mov
dec
stos
pop
frstor
jne
ljmp
xchg
out
cmpsb
imul
jno
scas
push
and
mov
and
loopne
mov
out
add
add
sbb
add
xchg
add
xchg
lea
adc
push
add
mov
xchg
mov
std
insl
clc
xchg
or
sbb
insb
divl
shr
adc
enter
add
sub
lahf
scas
pop
lds
loopne
mov
adc
mov
jnp
xchg
add
mov
mov
ret
nop
add
movsb
mov
mov
add
add
movsb
mov
test
cmp
or
gs
or
mov
xchg
shrl
mov
mov
stos
adc
hlt
xchg
sub
xchg
pop
fnstenv
js
cmpsb
cmp
add
jle
add
test
or
add
jp
mov
jmp
mov
ss
insb
cmp
hlt
jno
test
mov
add
lret
mov
mov
ror
cs
mov
aas
mov
jae
in
inc
movsb
out
mov
nop
add
mov
add
push
dec
cmp
mov
aas
andl
sub
cmpl
jne
add
mov
mov
mov
mov
xchg
push
ds
lcall
stc
mov
pop
cmp
adc
add
mov
mov
mov
nop
add
adcl
add
loope
test
xlat
je
mov
add
mov
add
mov
pop
cmp
sbb
addb
or
out
pop
ja
jl
push
aad
add
out
enter
add
int
add
or
mov
xchg
sbb
cmp
loop
mov
adc
jo
mov
mov
fs
lds
jmp
ret
fistpl
xchg
flds
add
mov
mov
mov
xor
add
outsl
cmpl
add
jo
mov
add
mov
lahf
popa
stos
enter
test
xchg
add
leave
push
iret
js
repz
outsl
test
add
adc
add
fnstenv
outsb
mov
jl
mov
test
mov
ja
lahf
inc
cltd
gs
mov
sub
cli
inc
add
mov
mov
or
push
add
cmpl
mov
add
lea
in
or
sub
mov
xor
rcr
pushf
add
add
int3
mov
mov
add
pop
insb
pop
xchg
push
outsl
sub
inc
sbbl
fdivrs
xor
add
icebp
xchg
loope
mov
rolb
mov
push
scas
jecxz
jge
push
push
mov
stos
push
cwtl
mov
mov
jl
fimull
loope
fadds
cli
int
dec
mov
add
iret
and
add
mov
jl
rolb
pop
add
mov
add
jne
mov
pop
xchg
and
mov
add
xor
iret
add
add
push
ss
mov
mov
in
ljmp
iret
add
and
dec
test
fcmovnbe
dec
mov
push
daa
movsb
mov
xchg
add
bsf
add
add
mov
pop
dec
in
mov
lods
loope
add
jno,pn
add
rolb
addb
dec
lods
sbb
stos
mov
orl
cmp
add
aam
add
lds
xor
inc
add
mov
inc
xchg
push
jmp
int3
rolb
fildl
jne
add
pushf
int
test
mov
repz
jb
mov
rolb
mov
mov
xchg
shrl
dec
jnp
fs
pop
das
sbb
ret
jecxz
add
add
aas
sub
cld
dec
pushf
fidivl
pop
jbe
rolb
mov
mov
mov
add
sbb
jle
sahf
popf
lahf
out
inc
xchg
fwait
push
pop
sbb
jge
inc
add
xchg
add
push
mov
sub
cmp
pop
out
ds
mov
cmp
dec
mov
ret
enter
lcall
sbb
sub
mov
cmc
cwtl
add
mov
sahf
pusha
add
xor
mov
repz
inc
cmp
add
add
mov
mov
add
fisubrs
fstl
mov
test
dec
xchg
mov
les
push
lods
inc
aam
adc
lds
nop
add
inc
scas
sbb
xchg
xor
jg
cmc
pop
bound
mov
add
inc
jmp
shll
testb
push
out
ja
mov
movsb
cmc
xchg
jns
and
mov
lock
add
push
jl
xor
mov
and
xchg
out
add
insb
into
dec
and
mov
mov
push
mov
or
ja
lock
xlat
gs
cmpsb
add
mov
movsb
lcall
add
add
insb
cltd
int
add
loopne
mov
mov
sub
mov
cmpsl
in
cmp
les
mov
dec
sbb
add
pop
stos
jg
popa
pusha
add
cmp
push
add
add
inc
cmp
mov
test
xchg
sub
sbb
lahf
ds
add
mov
pop
aam
hlt
jmp
mov
mov
jp
mov
jbe
mov
jl
jge
mov
repnz
imul
pop
and
add
adc
mov
int
xchg
add
mov
mov
add
add
test
add
add
sub
and
mov
cmp
mov
cmp
mov
repz
adc
mov
adc
xchg
mov
add
dec
pop
sub
fadd
out
aas
insb
mov
push
lock
rolb
mov
add
icebp
sbb
loopne
mov
pop
jns
cmpsb
sbb
push
lea
mov
pop
gs
in
out
mov
xchg
xorl
or
in
das
sahf
in
adc
movsb
mov
repz
push
add
mov
add
in
mov
into
lea
mov
call
stos
mov
idiv
unpckhps
pop
loope
jmp
pop
mov
mov
mov
icebp
dec
ja
hlt
movsl
aaa
test
stos
cltd
xor
mov
call
add
loope
sub
add
push
xchg
add
lods
pop
sub
dec
sbb
jmp
mov
mov
lahf
outsb
jne
fildl
sub
mov
pop
ljmp
add
add
lock
in
cmp
mov
dec
mov
mov
adcl
mov
inc
push
fistpll
xchg
icebp
jo
mov
add
popf
adc
add
adc
add
mov
in
test
mov
sub
pushf
mov
add
insb
mov
mov
lods
pop
lcall
add
mov
and
mov
add
and
rcr
jle
repz
mov
test
and
mov
add
in
popf
push
add
enter
mov
clc
sub
sbb
mov
push
add
call
mov
mov
mov
inc
or
cmc
out
inc
add
popa
scas
adc
mov
adc
mov
jb
mov
int
mov
xor
jae
mov
mov
add
leave
mov
cli
int3
aad
xor
add
pop
dec
push
rorl
mov
dec
push
add
jae
sub
testb
fimuls
ja
inc
js
addb
xor
mov
and
mov
or
lock
jo
mov
mov
add
repnz
cltd
sbb
mov
mov
arpl
xchg
jo
mov
add
fsubl
pop
dec
xchg
and
inc
add
mov
mov
mov
add
push
add
push
mov
push
dec
add
mov
les
or
add
mov
int
add
insb
loope
add
ret
ds
pusha
add
or
add
add
push
test
inc
add
mov
inc
into
or
pop
nop
add
mov
add
les
xor
mov
leave
push
jmp
pop
dec
mov
arpl
add
add
add
enter
in
jnp
cmp
jle
add
mov
add
sbb
jno
dec
divb
in
scas
adc
addb
dec
xor
pop
cmp
enter
cmc
pop
aad
mov
lods
jns
cmp
das
lock
sub
add
mov
mov
stos
xchg
cld
cmp
bound
mov
xchg
jne
ret
pop
outsb
lock
sahf
mov
popa
addl
xor
sbb
movsl
mov
mov
rolb
mov
mov
sub
std
lock
add
cmc
push
jl
cld
outsb
push
shll
sub
pop
push
mov
inc
dec
addb
stc
bound
mov
jecxz
add
mov
scas
bound
mov
jae
pop
mov
pop
sub
xchg
lret
daa
gs
pop
rolb
and
test
inc
add
pop
xchg
ja
lahf
nop
add
fs
mov
or
outsl
fwait
and
mov
movb
inc
dec
repnz
add
mov
dec
mov
add
in
jg
cmpsb
add
add
pop
nop
add
incb
pop
insl
dec
mov
out
ljmp
mov
pop
xchg
mov
pop
inc
cmc
imul
lods
cltd
loop
mov
pushf
push
fadd
add
sti
mov
cmp
jo
mov
sub
xchg
xchg
add
add
jp
xchg
lods
hlt
gs
pop
or
jge
pop
and
mov
add
dec
aam
add
mov
scas
jnp
insl
and
imul
orl
inc
jns
xchg
and
mov
cmpsb
clc
iret
xchg
add
or
push
roll
jb
mov
je
sbbl
mov
xchg
outsl
push
adc
mov
add
xor
popa
outsl
outsl
mov
jae
add
adc
xor
in
outsb
xor
inc
mov
mov
scas
dec
ret
setle
add
lods
dec
movsb
dec
pop
mov
mov
ffree
add
jne
out
xchg
addr16
dec
rolb
mov
test
adc
jp
add
fnstsw
mov
in
jne
mov
and
add
mov
jbe
mov
add
addb
pop
addl
add
sbb
ficoms
push
call
clc
hlt
inc
repnz
mov
clc
shrl
lret
sbb
adc
mov
xchg
xchg
mov
pop
dec
jg
mov
add
test
add
call
daa
sub
je
pop
fldcw
call
mov
inc
add
add
mov
icebp
cmpsb
filds
repz
adc
and
je
xlat
fdivp
xchg
in
and
mov
inc
rolb
mov
bound
mov
mov
in
jns
adc
lahf
or
pop
dec
sub
push
sub
xchg
add
dec
mov
pop
sarl
or
sbb
and
in
xchg
xchg
add
mov
std
mov
fldt
insl
addb
xlat
shl
push
mov
mov
mov
gs
xchg
add
push
mov
aad
jne
imull
pop
test
inc
jo
mov
sub
add
jecxz
outsb
mov
mov
addb
es
add
std
xchg
pop
int
sbb
jmp
mov
clc
pop
inc
push
and
dec
xor
add
mov
and
pop
insl
xor
mov
mov
push
jmp
pop
cmpl
fnstsw
add
sub
jmp
xor
jae
add
mov
pop
cmc
aaa
xchg
add
lcall
push
movsl
cmp
imul
jmp
insl
sub
hlt
mov
or
xchg
jbe
les
mov
lret
aas
nop
add
lods
dec
xchg
sahf
jb
mov
add
adc
xchg
add
orl
add
imul
dec
mov
add
mov
cmp
enter
push
pushf
loopne
mov
adc
mov
jno
dec
stos
test
inc
add
add
jecxz
jbe
add
mov
add
pop
push
or
pop
jecxz
lock
test
enter
jp
in
ljmp
pop
jbe
sbb
mov
sub
jg
add
push
test
lock
outsb
jmp
ja
clc
or
and
jle
sub
add
jge
add
cmp
pop
sub
inc
inc
push
aam
push
jo
mov
inc
xor
sub
addb
ljmp
cwtl
sbb
out
add
fimuls
jmp
mov
mov
add
push
push
ja
out
test
jle
bound
mov
add
sbb
add
cmp
jmp
data16
dec
int
mov
mov
test
mov
push
push
iret
inc
test
sub
mov
test
rolb
mov
pop
mov
ljmp
pop
leave
mov
jne
sbb
add
movsb
scas
ret
xchg
insb
dec
repnz
mov
mov
sbb
add
inc
add
test
cltd
pop
xor
add
mov
add
repnz
inc
add
dec
fxch
dec
stos
push
rolb
in
call
fimuls
cld
cmpsb
jge
add
mov
sub
push
and
outsb
xlat
cmp
add
in
cmc
je
imul
shll
add
jl
sbb
scas
cmpsb
out
pop
cwtl
xor
dec
pop
cld
in
lock
stos
outsb
and
lret
add
xchg
cmp
xchg
xor
cli
or
mov
js
mov
and
mov
sbb
cmp
filds
cmp
flds
adc
mov
pop
addb
int3
sti
lods
ja
jmp
lret
jecxz
push
push
outsl
das
call
push
lcall
mov
add
sbb
adcl
mov
idivl
mov
pop
mov
or
loope
add
add
movsl
movsb
dec
mov
imul
int
pop
xor
dec
inc
add
add
mov
jbe
imul
mov
adc
popf
popf
arpl
pop
imul
mov
mov
mov
les
insb
cld
cmp
mov
js
test
pop
flds
mov
add
movsb
adc
ret
push
mov
adc
sbb
add
pop
pushf
mov
sub
cmpsb
loope
mov
mov
xchg
dec
dec
or
inc
das
mov
adc
add
mov
xchg
cmp
movsl
mov
scas
dec
rol
xor
mov
adc
mov
jge
ficoml
sub
mov
mov
sub
in
add
mov
pmulhw
mov
mov
pop
mov
and
js
mov
mov
adc
adc
mov
add
mov
les
sbb
aam
divb
mov
pop
cmpsb
pop
imul
jbe
outsb
int3
push
sub
dec
inc
add
mov
lret
mov
aas
cmc
mov
add
sti
push
mov
adc
mov
xchg
inc
push
add
and
mov
fsubp
dec
ss
or
adc
fidivrl
ljmp
insl
jle
insb
in
mov
mov
icebp
daa
jnp
xor
or
stos
bound
mov
xor
mov
inc
pop
mov
xchg
lret
pusha
add
mov
in
fidivl
mov
cwtl
and
push
add
inc
mov
add
mov
dec
mov
loop
mov
add
mov
mov
imul
or
dec
jae
add
lret
mov
stc
out
in
aaa
pop
or
