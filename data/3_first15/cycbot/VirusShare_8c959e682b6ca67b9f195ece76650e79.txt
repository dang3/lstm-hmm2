aad
out
dec
inc
add
add
pop
test
add
icebp
lea
add
dec
jb
mov
sti
adc
mov
xchg
mov
cli
rolb
mov
jg
test
pop
push
bound
mov
sbb
add
movsb
cmp
or
aas
roll
inc
fs
jg
xchg
mov
jb
mov
rolb
fistpl
add
lahf
cmp
push
push
cmpsl
scas
sbb
enter
mov
les
adc
mov
push
jae
inc
xchg
xchg
dec
cmp
fbld
out
and
ret
mov
add
add
xchg
add
mov
fmul
push
or
and
mov
loopne
mov
fcmovbe
add
jge
and
je
ret
jle
and
add
dec
ret
cmp
cltd
iret
data16
push
add
mov
xchg
mov
fucom
pop
dec
adc
mov
add
in
jmp
or
sahf
inc
inc
aaa
lret
sub
add
sub
test
adc
imul
mov
or
xchg
rolb
jno
popa
xchg
jno
push
aam
aad
xchg
mov
mov
lock
add
mov
add
fsts
push
pop
cltd
or
insb
stos
cmp
mov
addr16
outsl
pop
inc
cli
jbe
push
ficompl
add
pop
add
mov
lcall
mov
jnp
push
mov
mov
inc
popf
aaa
mov
or
sbb
add
mov
pop
push
mov
cmp
fwait
mov
push
ss
jns
push
mov
mov
mov
add
mov
jns
sbb
add
mov
and
mov
int
jns
add
add
xchg
lahf
nop
add
insb
fcmovnb
jnp
add
mov
jl
mov
mov
out
cmp
stc
adc
mov
mov
dec
aas
data16
add
inc
add
int
sub
outsb
leave
enterw
scas
inc
add
add
mov
fs
lea
jbe
sub
gs
sti
and
mov
fs
pop
ficoms
aad
cmpl
push
add
xor
push
add
loopne
mov
add
mov
pop
mov
into
xchg
dec
andl
xchg
ds
and
push
add
sbb
add
dec
cmp
push
stos
push
roll
add
mov
loop
mov
incl
pusha
add
mov
mov
mov
pop
outsl
loopne
mov
dec
aad
rcrl
and
loopne
mov
push
or
movsl
mov
add
call
into
notl
add
mov
add
and
jl
add
mov
xchg
sub
sti
scas
movsl
dec
jg
and
mov
sbb
adc
pop
xor
mov
jle
mov
xor
add
leave
imul
mov
push
stos
movsl
jmp
loope
or
add
mov
repnz
rolb
mov
fimull
cwtl
and
mov
clc
leave
cmp
in
in
daa
mov
sbb
mov
out
orl
test
fidivrs
sub
mov
pop
and
mov
mov
mov
enter
add
mov
adc
sub
scas
stos
mov
rolb
mov
in
pop
sub
scas
rolb
mov
lods
loopne
mov
int
push
mov
arpl
pop
xchg
popa
rolb
mov
cltd
fisubl
adc
mov
add
mov
add
mov
add
test
cmp
inc
in
xchg
mov
or
packsswb
add
and
inc
gs
xchg
out
mov
mov
add
inc
mov
xor
and
mov
and
mov
or
and
mov
ja
or
mov
rolb
mov
mov
jle
jns
add
mov
dec
xchg
ret
leave
pop
mov
mov
push
mov
fldz
push
scas
nop
add
sahf
loop
mov
dec
popa
or
mov
add
or
and
mov
scas
movsb
xor
mov
call
jp
jmp
or
test
jns
adc
mov
xchg
pop
sbb
cmp
leave
xchg
test
mov
add
sbb
int
add
mov
lcall
add
mov
outsb
mov
test
add
jb
mov
imul
aad
vpaddq
loope
leave
dec
rolb
or
adc
mov
imul
mov
mov
sub
repnz
or
mov
test
mov
add
inc
sub
daa
sbb
insl
cmp
add
int3
jae
sbbl
lods
fisttpll
aaa
call
iret
sub
cmp
add
aaa
fwait
adc
xchg
fcompl
dec
cmpsb
xchg
stos
push
xchg
lret
dec
jo
mov
jns
xor
mov
xor
add
add
add
xor
mov
add
add
std
ja
sub
in
xor
add
mov
mov
inc
add
inc
pop
or
mov
ds
sahf
repnz
mov
ja
jecxz
call
and
mov
pusha
add
repz
test
add
mov
fiaddl
mull
test
mov
outsl
adc
pop
or
dec
xchg
add
and
cmc
push
mov
xchg
cld
bound
mov
cltd
test
mov
into
dec
lea
divl
mov
xchg
or
add
add
add
ss
mov
outsb
pop
ds
repz
test
add
xor
mov
fcomp
imul
push
jno
dec
lds
aam
loope
or
cmp
scas
rcll
mov
dec
mov
enter
dec
push
out
dec
addb
js
repz
add
add
add
adc
mov
loop
mov
mov
mov
mov
stos
xchg
fdivrs
into
rorl
stos
lcall
iret
cmp
dec
mov
stos
jmp
or
add
sbb
movsl
xor
mov
lods
and
xor
aaa
sub
mov
ss
mov
add
inc
pushf
mov
pop
add
jp
idivl
sbb
add
xor
mov
rolb
mov
add
sbb
or
add
mov
jmp
mov
mov
add
pop
aad
fildl
gs
sarl
ret
push
sub
imul
das
fldcw
or
mov
mov
mov
lods
dec
push
dec
cmp
inc
imul
inc
fs
rcrl
nop
add
mov
add
add
fdiv
mov
mov
or
in
js
lods
jmp
jmp
mov
mov
rolb
pop
push
jecxz
daa
sbb
jg
xchg
icebp
mov
mov
xchg
jnp
ja
cli
mov
adc
add
xchg
pop
xchg
aad
sub
addr16
add
lock
jg
inc
popf
outsb
lcall
mov
dec
dec
mov
mov
cmpsb
cmp
and
mov
sub
mov
jge
add
add
pop
imul
lds
add
cltd
sub
mov
lods
jp
pop
jmp
pushf
xor
mov
and
mov
mov
or
add
mov
mov
mov
mov
dec
mov
mov
xchg
pop
mov
mov
mov
mov
or
mov
mov
leave
popf
out
add
mov
jnp
rolb
mov
ja
negb
add
pop
add
mov
fcompp
add
push
add
stos
dec
js
das
push
add
sbb
add
sub
inc
add
add
sbb
mov
adc
adc
sub
aas
divl
or
addb
jno
in
addb
fucom
dec
add
fcmovbe
add
inc
xor
xor
add
adc
in
outsl
popf
add
dec
mov
mov
mov
mov
xchg
add
adc
movsb
adc
add
movsl
rolb
mov
sbb
or
cmc
jmp
dec
loop
ss
adc
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
adc
sahf
inc
add
cld
data16
pop
into
cmp
out
jo
mov
clc
jo
mov
fs
popa
push
in
std
inc
sbb
inc
adc
decb
add
mov
popf
dec
leave
inc
dec
out
pop
xchg
cmp
lods
pop
aas
pop
push
fwait
xor
mov
add
and
cmc
jecxz
add
mov
mov
add
cmp
ja
pop
add
pop
out
dec
sbb
leave
dec
es
and
bound
mov
jae
fs
pop
fiaddl
repz
add
lret
add
mov
adc
enter
dec
dec
imul
sbb
scas
cmpsl
lea
js
xlat
xchg
add
xor
std
das
xchg
push
pop
xchg
sbb
and
mov
sub
int
xchg
add
mov
add
add
xor
ja
mov
add
mov
testl
mov
addb
mov
inc
add
mov
in
scas
cmpsb
dec
fimuls
int
movsl
pop
out
mov
adc
add
sub
mov
aad
aad
xchg
sbb
add
stos
insb
mov
cmp
jge
push
push
add
in
sti
ljmp
mov
dec
mov
sbb
fildl
sti
lock
mov
lea
mov
or
pop
mov
rcl
enter
rol
inc
addb
dec
xchg
or
test
test
lahf
cmp
mov
sub
addb
jle
push
push
rcrl
mov
add
popf
cmp
add
std
inc
or
add
in
ds
add
add
aam
scas
add
mov
mov
stos
sub
aad
add
test
xor
inc
add
mov
pop
inc
mov
inc
add
mov
inc
add
cmp
ljmp
into
or
std
sete
add
sbb
sarl
cld
pop
adc
and
mov
xor
mov
mov
mov
in
outsb
mov
jnp
pop
or
pop
push
loopne
mov
jmp
mov
add
insl
and
add
mov
adc
in
pop
les
cld
jge
sub
add
xor
mov
add
sub
mov
add
das
out
mov
mov
jge
sti
jnp
or
adc
cwtl
mov
xchg
push
add
std
lock
mov
ret
rolb
mov
push
add
stc
or
pop
cmp
arpl
mov
outsl
mov
mov
cmp
mov
fdiv
add
mov
ljmp
mov
sub
jmp
jno
add
add
pusha
add
mov
mov
cmp
add
add
cmp
mov
leave
popf
fisubrl
mov
add
cmpl
adc
mov
lret
mov
add
mov
int
xor
cmp
lret
sahf
jno
adc
pop
add
push
xchg
xor
mov
pusha
add
fadds
popa
in
fcmovb
jns
jp
jae
jno
push
bound
mov
mov
sbb
repnz
inc
lret
nop
add
stos
or
pop
into
mov
xor
mov
cli
jae
cmp
mov
mov
mov
or
and
or
lods
les
adc
mov
rorl
add
jmp
xor
enter
aaa
and
rolb
mov
add
add
outsl
push
dec
popa
mov
jne
and
add
inc
add
mov
mov
inc
daa
adc
and
mov
mov
inc
bound
mov
and
add
mov
loop
mov
or
cmp
xor
imulb
inc
sahf
jo
mov
xor
xchg
stos
sarl
add
std
adc
test
mov
cmp
and
mov
add
jne
add
mov
mov
jecxz
loopne
mov
jne
ds
icebp
decb
and
mov
add
leave
dec
push
or
std
mov
add
mov
lods
divb
jns
aaa
lcall
daa
push
sahf
rolb
mov
out
fstp
bound
mov
lcall
fsts
sub
mov
jle
mov
add
lea
mov
addb
mov
mov
mov
sub
push
push
lret
mov
cld
mov
and
add
rcll
arpl
in
add
add
xor
mov
add
std
mov
leave
loopne
mov
mov
cmp
mov
fcmovnbe
add
test
addb
lcall
mov
dec
ljmp
jb
mov
mov
xchg
jp
add
mov
mov
add
in
add
push
xor
mov
mov
pop
js
ret
lret
jecxz
add
inc
jle
sbb
dec
mov
mov
xchg
xor
dec
inc
cmpsl
jb
mov
inc
add
add
call
add
sbb
adc
loopne
mov
lock
notl
jp
inc
xchg
and
mov
cmp
mov
cmp
bound
mov
jbe
outsb
mulb
add
add
xchg
enter
rcrl
test
sub
push
lcall
daa
aam
cs
fwait
xchg
pop
inc
add
dec
inc
ret
add
sub
mov
mov
out
mov
xchg
add
mov
cli
in
mov
mov
mov
add
mov
mov
fdivrs
xor
mov
xchg
scas
push
je
sahf
fbld
sti
xor
cmpsb
mov
and
push
cltd
out
jnp
outsb
aad
mov
pop
and
bound
mov
add
fcmovbe
div
add
xor
mov
inc
add
mov
jge
dec
paddusw
rolb
mov
jo
mov
sbb
mov
add
mov
dec
cmp
inc
mov
pop
cmc
cld
and
mov
mov
dec
setge
bound
mov
sub
push
mov
mov
faddl
cmpsl
jle
fldt
mov
mov
push
cwtl
adc
cmpsb
into
ja
in
leave
cli
les
jns
jae
dec
iret
in
clc
jecxz
je
jecxz
add
mov
insb
dec
aad
outsl
out
add
pop
stos
sbb
dec
cmpsb
xchg
pop
test
mov
mov
test
push
add
add
add
adc
pop
addb
lods
roll
popa
dec
arpl
fnstenv
sti
pop
addb
int3
popf
dec
mov
idiv
jmp
inc
das
shrl
xbegin
int
daa
das
fdivs
leave
xchg
mov
mov
std
adc
jo
mov
sbb
xor
mov
jecxz
pop
sub
mov
sti
pushf
add
dec
stos
mov
mov
and
mov
add
lods
mov
add
test
cmp
stos
and
mov
arpl
sbb
adc
add
jmp
add
arpl
sbb
testb
cwtl
add
mov
cltd
push
cmpsb
cli
pushf
jo
mov
cmp
scas
scas
sbb
adc
cmp
bound
mov
add
nop
add
adc
mov
or
das
aaa
iret
pop
popa
sbb
mov
mov
lcall
push
dec
popa
cmp
loopne
mov
popa
cmc
iret
aas
mov
fstl
ds
add
add
xor
sahf
in
pop
jp
pop
mov
ljmp
mov
jns
iret
or
arpl
cmpl
mov
sbb
xchg
jae
cmp
dec
cwtl
pop
xor
std
insl
inc
jno
aad
and
mov
add
or
mov
mov
cwtl
nop
add
jo
mov
inc
mov
insb
pop
adc
shll
scas
imul
add
adc
cmp
mov
add
cli
ror
dec
sub
aad
bound
mov
mov
add
ja
lods
ss
popl
add
mov
sete
add
mov
lock
add
stc
bound
mov
add
scas
mov
mov
call
and
stos
sbb
mov
es
xchg
jp
add
jno
xor
adc
leave
push
dec
and
leave
mov
add
xor
fcoml
mov
dec
xorl
cmp
pop
mov
lds
movsl
jb
mov
pop
shll
add
add
divl
lcall
add
mov
push
add
std
pop
addb
mov
jp
out
ror
push
jae
add
jle
push
mov
inc
add
sub
sub
jl
stc
and
push
add
xchg
hlt
jg
add
mov
push
out
mov
mov
daa
jl
addb
pop
pop
lcall
xchg
cmpsl
cmp
icebp
jae
xchg
mov
add
cmp
dec
pushw
sti
fwait
sbb
mov
mov
mov
movsl
inc
add
pushf
mov
stos
cmp
into
imul
sub
mov
add
pop
test
nop
add
and
adc
mov
movsl
xor
mov
adc
mov
dec
mov
mov
xor
inc
aam
adc
mov
sbb
fldl
imul
lea
add
add
jns
xor
mov
xchg
push
pop
and
cmp
test
mov
sbb
add
xchg
or
inc
add
ljmp
adc
add
addr16
in
test
enter
dec
rol
sbb
ljmp
mov
add
mov
pop
push
add
in
mov
mov
pusha
add
rol
imul
add
mov
lahf
adcl
mov
mov
mov
jp
xlat
dec
push
test
mov
sbb
push
iret
imul
add
xor
mov
mov
hlt
push
enter
mov
jns
add
and
mov
imul
hlt
add
cmp
lods
cmp
es
loop
mov
and
add
clc
xor
mov
xchg
add
inc
lret
fwait
add
jbe
lahf
mov
mov
sti
and
mov
add
sbb
mov
aas
and
out
or
inc
clc
cmp
mov
ret
insl
push
xor
mov
add
mov
gs
jns
js
fcomps
add
and
mov
add
imul
add
jmp
aaa
pop
xchg
add
add
iret
rcrl
inc
add
xorl
and
mov
cmp
and
ljmp
mov
dec
loopne
mov
enter
xor
mov
push
add
mov
mov
mov
pop
into
mov
add
adc
mov
stos
inc
sub
jmp
dec
push
add
add
push
clc
mov
xor
mov
push
jecxz,pt
popf
fucomi
mov
dec
in
mov
int3
cld
lods
into
xchg
hlt
jns
dec
pushf
lods
xchg
dec
pop
and
add
add
test
decb
fdivp
push
and
mov
sub
add
mov
out
sub
push
add
mov
addr16
iret
lcall
leave
xor
add
sbb
and
add
xchg
rolb
mov
pop
stos
jae
add
int3
sub
fcomps
add
cmp
add
mov
daa
pop
popf
pop
add
mov
mov
into
or
loope
inc
ja
mov
fldt
push
rdtsc
rolb
mov
je
inc
iret
add
mov
add
mov
mov
pop
leave
je
mov
movlps
add
sbb
push
push
ja
mov
add
cmp
xor
pusha
add
add
mov
rolb
mov
xor
movsl
push
dec
xorl
sbb
and
daa
adc
sbb
xor
add
bound
mov
push
cmp
push
push
pop
jns
add
daa
hlt
inc
cmp
add
mov
add
cmp
clc
into
fbld
mov
pop
in
and
jmp
mov
xchg
mov
mov
or
add
mov
add
sbbl
dec
xlat
cmc
xor
add
or
roll
add
mov
add
nop
add
stos
imul
imul
aaa
sub
push
mov
lds
insb
cld
adc
mov
std
add
mov
mov
jns
in
and
lock
add
stc
inc
iret
ds
push
add
mov
and
mov
mov
add
adc
mov
adc
add
mov
mov
je
jae
bswap
iret
aaa
and
jp
push
mov
add
add
cmpsl
sbb
xchg
lahf
cli
jns
lahf
enter
cs
sti
cwtl
inc
mov
jg
sbb
xor
fcoml
adc
mov
add
mulb
push
mov
fwait
sub
jmp
push
fucomi
xchg
repnz
fidivrs
popa
leave
adc
fstpl
ds
ret
scas
sub
add
fcom
add
add
loop
mov
pop
jg
sti
leave
fwait
lods
push
inc
sti
arpl
addr16
inc
add
and
mov
dec
jle
xchg
mov
mov
add
add
and
mov
dec
and
mov
scas
sub
adc
xchg
mov
mov
pop
mov
inc
add
mov
mov
pushf
sub
cmp
not
push
lahf
daa
scas
fldcw
in
sub
add
movsl
das
jno
adc
mov
mov
add
mov
stos
loop
mov
cmp
mov
add
insb
repnz
shl
or
mov
xor
out
pusha
add
pop
mov
add
adc
and
out
fsub
or
cmp
cld
cmp
pusha
add
inc
add
add
stos
aas
fstps
add
fcmovnb
add
add
sbb
mov
mov
add
mov
test
jo
mov
dec
cs
mov
xlat
fdivrp
pop
les
mov
mov
dec
rolb
mov
pop
js
aas
or
pop
or
lock
adc
call
std
add
adc
dec
sub
add
push
mov
add
out
out
inc
add
rolb
shll
inc
rolb
mov
dec
mov
std
mov
add
add
nop
add
sub
mov
push
add
add
fstpt
sub
insb
rcll
mov
lds
out
pop
xchg
pop
ds
add
flds
roll
add
xchg
lret
shll
add
mov
add
jg
add
negb
jns
negb
mov
jmp
add
int
and
popf
sbb
mov
shrl
lea
mov
inc
fldt
pop
das
das
pushf
mov
mov
mov
pop
int
loope
or
jno
add
mov
iret
mov
es
cli
xlat
mov
cwtl
lods
fisttps
pop
xlat
in
mov
sbb
xchg
mov
scas
dec
inc
lock
adc
mov
sbb
add
mov
movsl
das
repz
xor
xchg
jnp
fdivs
subl
mov
aad
clc
add
mov
stc
xor
mov
lahf
add
add
imul
pop
inc
add
pop
js
add
add
add
mov
mov
mov
hlt
lods
pop
imul
xchg
or
adc
lahf
jbe
sub
push
or
add
cltd
or
push
add
xor
add
add
mov
pop
jo
mov
js
or
shll
adc
mov
dec
and
addb
cmp
jle
pop
inc
cmp
xor
mov
add
mov
pop
add
mov
rolb
mov
test
and
add
lret
sbb
mov
mov
pop
shll
mov
mov
mov
add
add
push
sbb
add
mov
mov
sub
mov
adcl
xchg
mov
mov
add
add
int
jns
or
insb
add
add
mov
int3
fcomps
mov
jno
add
mov
lods
xchg
enter
mov
addl
mov
stc
push
mov
xchg
loope
xchg
mov
inc
dec
outsl
insl
lods
mov
pushf
cmpsl
inc
sub
adc
mov
add
cmp
sub
add
mov
xchg
add
mov
lahf
outsb
jb
mov
jl
flds
daa
and
cli
icebp
lcall
xchg
in
movsl
addb
dec
lcall
popf
ret
lea
add
loope
mov
xor
pop
mov
cltd
push
pusha
add
test
add
addb
xor
mov
mov
out
dec
push
jo
mov
loopne
mov
add
cs
sub
add
or
insl
dec
cmpsb
jecxz
mov
add
push
cld
fs
jl
add
add
push
test
mov
lods
rolb
mov
sbb
stos
add
into
cmp
adc
sahf
jae
inc
pop
mov
pop
popa
cmp
push
lods
nop
add
and
mov
ficomps
enter
into
fistps
push
mov
push
pop
out
sub
mov
mov
mov
lret
call
add
sbb
xchg
adc
mov
vmovlpd
cltd
movsl
add
sbb
dec
gs
aaa
sub
enter
inc
mov
adc
dec
and
mov
test
scas
jp
test
dec
imul
add
pop
pusha
add
pop
pop
sub
add
xchg
sbb
test
mov
jne
popf
out
add
arpl
cmp
add
ret
fs
add
mov
xor
pop
scas
shll
add
dec
shrl
std
repnz
mov
mov
addb
pop
push
add
sub
ror
push
dec
xchg
or
aas
xchg
cmpsl
mov
ljmp
lcall
mov
loopne
mov
lahf
push
xor
mov
fs
push
inc
add
mov
inc
fs
push
lea
mov
xchg
scas
push
les
cmc
rolb
mov
add
mov
dec
icebp
inc
mov
hlt
out
cmpsb
sbb
pop
addr16
mov
pop
dec
jmp
add
mov
add
or
aad
jae
in
inc
add
xor
mov
mov
je
sbb
mov
add
mov
mov
push
add
or
fucom
add
push
dec
in
pop
cmp
or
popa
inc
jg
mov
icebp
out
int
std
cs
pop
adc
sbb
mov
or
add
mov
jle
lret
push
push
imul
add
aam
idiv
xchg
add
test
pop
inc
jmp
xchg
js
fdivs
add
subl
mov
jne
add
inc
xchg
inc
add
into
jg
adc
lcall
sbb
outsb
out
int3
mov
xchg
jmp
std
outsb
mov
cmpsl
outsb
push
mov
jge
inc
loop
mov
add
pop
cmp
mov
add
xor
mov
test
cmp
loopne
mov
mov
add
adc
add
jp
adc
add
jns
std
ss
fsubrs
jg
sahf
jns
fmul
push
adc
mov
add
add
xor
mov
imul
mul
xchg
jno
scas
xchg
add
add
aad
dec
addb
int
inc
add
push
mov
cmpsl
inc
mov
mov
ljmp
cmp
loopne
mov
and
mov
or
movsb
std
mov
fucomi
jle
les
or
xchg
cltd
jl
aad
arpl
rolb
mov
daa
sub
sub
xchg
add
xor
mov
clc
xor
sub
dec
mov
inc
jbe
or
rorl
xor
jbe
add
add
mov
xlat
mov
mov
pop
cmpsl
mov
imul
int
addb
pop
adc
in
jne
add
cmc
das
es
add
ljmp
add
adc
add
add
jp
push
mov
add
add
fcmovnu
in
sub
dec
movsl
xchg
add
mov
test
and
aad
xor
pop
push
inc
add
push
repnz
xor
jle
fwait
sub
das
mov
outsl
adc
sbb
mov
adc
mov
or
mov
bound
mov
rolb
and
mov
mov
and
std
ficoml
inc
add
sbb
add
lret
fmull
pop
cli
cli
dec
mov
add
mov
add
lcall
xor
sbb
jae
add
mov
add
mov
adc
mov
add
sub
outsb
ljmp
add
add
mov
mov
lret
add
loopne
mov
popf
mov
add
xchg
cmpsl
xchg
arpl
add
adc
insl
daa
daa
negb
mov
add
add
push
loopne
mov
addr16
outsl
loope
lcall
push
adc
mov
test
jae
or
push
pusha
add
rolb
fmull
cmp
pushf
inc
add
sbb
in
jb
mov
mov
in
imulb
mov
add
mov
cs
imul
fmuls
ljmp
out
add
add
cmpsb
call
add
add
std
jb
mov
cmp
add
add
loopne
mov
and
and
rolb
mov
jg
into
jno
xor
mov
jle
repz
dec
sbb
dec
xchg
sahf
test
outsb
es
add
or
stos
jg
add
add
addb
or
mov
add
mov
and
loope
divb
ds
mov
add
insl
push
jo
mov
add
cmp
fs
in
add
mov
lret
or
out
xchg
sub
or
mov
imul
or
gs
aad
or
and
mov
test
sub
add
mov
add
add
stos
jg
leave
adc
stos
es
int
push
dec
popf
cmpsl
adc
ja
xor
rolb
mov
stos
xorl
and
jmp
das
popa
incb
mov
rolb
mov
mov
dec
cld
sub
push
add
fists
stc
out
and
mov
add
and
nop
add
addr16
dec
out
mov
pop
into
mov
addb
sub
jg
push
and
mov
mov
in
mov
iret
out
add
inc
or
or
add
add
insb
stc
mov
fldcw
jbe
into
add
ds
inc
es
add
xor
mov
jbe
jne
jmp
jne
clc
mov
mov
sub
out
incl
add
add
add
xchg
inc
inc
push
mov
add
push
cs
and
aaa
lods
add
sub
add
cmp
mov
sub
pop
push
enter
mov
test
int3
inc
ret
scas
and
jne
mov
je
lcall
mov
add
sub
bound
mov
aas
pop
lret
test
add
jl
push
add
pusha
add
sub
add
add
add
xchg
sub
add
ss
mov
pusha
add
shl
add
call
push
push
xchg
cmc
mov
add
xchg
dec
stc
xorl
add
xchg
mov
mov
push
test
jb
mov
xor
add
add
dec
push
inc
add
add
add
mov
popf
push
adc
outsb
xorl
inc
xor
xchg
mov
dec
ficoms
in
dec
mov
add
inc
add
add
movsb
xchg
sahf
idivl
add
adc
add
xchg
or
scas
add
add
jecxz
je
and
sbb
fdivrl
dec
test
movsb
or
or
xchg
add
mov
mov
mov
mov
add
add
push
pop
dec
add
mov
xor
mov
mov
scas
jo
mov
insb
aaa
and
push
clc
inc
add
sub
dec
arpl
sahf
pop
xor
ss
ret
outsb
mov
je
adc
mov
dec
push
cltd
push
add
aam
int3
je
add
mov
cmpsb
jp
add
mov
addr16
dec
gs
stos
cmp
sub
int
call
andl
pusha
add
popa
or
inc
sub
pop
sarl
inc
leave
outsb
out
test
xchg
rolb
mov
adc
adc
mov
mov
hlt
dec
jle
outsb
jae
fistpl
add
push
imul
push
push
dec
ds
or
nop
add
mov
xor
das
arpl
jmp
or
add
loopne
mov
sti
and
mov
xchg
je
add
mov
out
fcmovnb
add
dec
mov
lahf
mov
xchg
push
imul
cmpsl
into
mov
add
adc
mov
push
mov
sub
cmc
mov
lea
and
mov
mov
pop
es
mov
xor
sahf
adc
rolb
mov
add
mov
mov
test
add
or
addb
push
add
xchg
pop
add
mov
dec
mov
jae
cmp
sub
mov
jl
std
mov
add
decb
mov
push
jmp
es
mov
xchg
add
sub
cmp
sub
mov
rolb
mov
and
add
pop
mov
sbb
push
stc
data16
mov
xor
shll
add
adc
add
sbb
push
add
jns
sbb
out
into
push
out
lcall
mov
ror
and
mov
into
xchg
cwtl
jmp
divl
inc
out
mov
stc
orl
cmpsb
test
inc
add
cmp
pushf
and
ljmp
jg
data16
ljmpw
popa
aad
push
out
leave
movsb
fcomps
inc
aas
push
or
aaa
and
aas
sahf
ds
aam
xor
mov
add
add
outsb
test
loopne
mov
add
mov
add
aam
add
add
xor
mov
add
add
mov
jle
mov
ficoms
rorl
ret
inc
test
hlt
test
mov
add
in
add
push
add
add
mov
out
ss
ss
jae
shll
lock
into
and
mov
sub
adc
addr16
push
pop
sbb
rolb
mov
pop
hlt
cwtl
jp
adc
scas
aam
xor
xchg
es
fsubl
add
adc
test
add
mov
mov
and
inc
ret
lret
jnp
xor
mov
mov
and
add
dec
xor
and
mov
es
push
mov
inc
pop
aaa
or
mov
in
cs
and
push
sti
pop
das
inc
xor
stos
sub
and
pop
dec
dec
aas
ret
mov
addb
adc
mov
add
flds
push
mov
pop
rolb
mov
ljmp
mov
std
push
je
add
mov
xchg
ljmp
sbb
add
add
inc
add
add
in
cli
jnp
shrl
mov
jo
mov
int
pop
pushf
mov
mov
add
frstor
add
in
adc
mov
dec
sti
xchg
inc
push
enter
into
ja
iret
sbb
mov
add
add
addb
addr16
cltd
add
rolb
mov
pop
sbb
xor
xor
xchg
paddw
sarl
in
push
ss
xchg
aas
loopne
mov
outsb
push
xchg
aaa
shrl
test
sbb
mov
cli
adc
mov
cltd
sbb
popf
adc
mov
mov
or
loop
mov
mov
rcrl
scas
pop
arpl
insl
out
mov
push
add
stc
add
outsl
pop
jne
mov
out
into
pop
jp
pop
fsubl
mov
mov
xor
mov
lods
jp
mov
andl
mov
aaa
rcrl
out
xor
ja
repnz
mov
das
fmuls
dec
xor
popf
std
or
jno
dec
addr16
fidivrs
sbb
mov
mov
push
in
mov
lea
jle
xadd
mov
cmp
xchg
mov
notl
jnp
mov
and
mov
lds
mov
addb
insl
test
jmp
sbb
imull
call
dec
jl
imul
add
add
xor
mov
repnz
mov
add
add
or
add
das
inc
jecxz
js
insb
push
rolb
mov
pop
fwait
adc
sti
add
fbstp
push
call
push
and
cmp
jecxz
pop
jle
fisubrs
dec
jne
scas
repnz
xor
bound
mov
sbb
add
jmp
movsb
aas
scas
or
mov
nop
add
mov
rolb
mov
sub
pop
addb
inc
jmp
xor
mov
mov
cmp
rcll
daa
adc
mov
mov
inc
add
aaa
cld
xchg
add
push
mov
lock
jecxz
add
and
cli
inc
push
jne
jecxz
outsl
aas
lods
mov
stos
fistps
idivl
xor
add
xchg
add
mov
fildll
xchg
push
repz
cmc
aaa
dec
pop
push
icebp
mov
add
add
dec
dec
push
add
jle
out
sub
add
push
rolb
mov
push
push
adc
or
and
mov
jp
fildll
hlt
xor
ja
outsb
mov
jl
push
mov
xchg
add
mov
addb
inc
cmc
aas
iret
enter
push
add
add
add
loop
mov
inc
jb
mov
rcll
pop
lret
and
mov
add
jl
mov
mov
xchg
add
cmp
push
mov
lods
jb
mov
dec
loope
in
test
push
adc
xchg
mov
mov
mov
add
add
add
sbb
fisttps
push
mov
add
fucom
gs
xor
jo
mov
sbb
mov
add
add
mov
shrl
aad
push
cmpl
pop
jmp
add
add
inc
add
xor
push
cwtl
pop
subl
sahf
addb
ficoml
mov
xor
mov
inc
cmp
frstor
popa
pop
addb
mov
and
lahf
mov
jnp
inc
fwait
push
ljmp
add
add
push
sub
jno
add
add
mov
add
mov
clc
pushf
sti
rolb
mov
jne
push
add
dec
out
add
ror
mov
addr16
xchg
or
mov
add
mov
cmp
bound
mov
add
add
fld
xchg
mov
outsl
jecxz
cmpsb
add
mov
and
mov
pop
pop
leave
inc
test
xor
or
rolb
mov
test
add
lahf
cmp
add
pop
test
mov
or
push
pop
push
jmp
mov
repz
mov
pop
push
mov
iret
fwait
hlt
push
inc
std
pop
in
push
dec
jae
pushf
mov
mov
sbb
nop
add
ret
mov
jge
push
xchg
or
inc
add
adc
icebp
rolb
mov
inc
and
enter
js
in
pusha
add
insl
fisubrs
mov
sbb
add
push
mov
ret
mov
mov
dec
inc
pop
loopne
mov
mov
fwait
cmp
rcll
sbb
pop
cmp
dec
inc
jne
insl
decl
add
mov
leave
rolb
mov
or
adc
sbb
sbb
sbb
lret
ljmp
xchg
mov
lret
jae
fwait
jecxz
inc
nop
add
jmp
repnz
adc
mov
xor
insl
fldcw
pop
add
xor
popa
xor
mov
mov
es
adcl
je
add
aad
add
hlt
push
cmp
and
mov
lret
addb
rolb
mov
scas
je
paddq
bound
mov
inc
or
enter
cwtl
test
adc
mov
jge
cmp
cmp
fwait
cmc
pop
mov
add
xor
add
add
scas
dec
cmp
inc
outsl
cmp
push
insb
faddl
add
lret
xchg
lea
pop
push
add
add
mov
add
pop
push
push
data16
sub
mov
pusha
add
mov
cmp
mov
cmc
fdivr
mov
leave
inc
stos
push
out
add
rolb
mov
out
hlt
loope
pop
jne
pushf
push
jecxz
ljmp
das
and
sbb
push
aaa
pop
mov
add
add
add
jecxz
add
lahf
and
mov
imul
fistpll
or
in
xsha256
cmpsb
rorl
shll
add
cmp
mov
mov
add
js
scas
ljmp
movsb
add
and
add
jns
jmp
mov
ja
add
in
stos
adc
fbstp
mov
mov
or
cmp
jp
inc
pop
andl
das
imul
aad
mov
mov
pop
push
lods
clc
aas
xchg
add
add
rcr
push
and
mov
push
and
mov
add
loopne
mov
xchg
add
inc
in
jno
add
lret
xchg
and
cmpsl
inc
and
cwtl
addb
push
rolb
mov
jl
pop
mov
sbb
add
cmp
fcoml
mov
insb
xchg
ja
jmp
sbb
add
mov
jns
add
xchg
push
add
mov
xchg
div
add
enter
sub
outsb
add
mov
and
mov
sub
loop
mov
in
cmp
les
xchg
imul
and
rcrl
pop
loope
lret
or
mov
pop
loope
xchg
inc
leave
mov
xchg
mov
push
cmp
add
add
daa
ficompl
add
data16
xchg
mov
sbb
test
push
mov
mov
mov
add
clc
push
xchg
xchg
add
daa
pushf
test
sbb
into
clc
inc
enter
filds
mov
dec
lahf
or
pop
mov
rolb
mov
mov
test
push
adc
jne
out
stos
loope
sbb
out
push
add
add
add
roll
mov
mov
aas
and
mov
adc
mov
lcall
femms
push
je
add
or
ja
xor
mov
ja
cs
mov
add
sbb
add
scas
mov
mov
xchg
mov
add
out
je
cs
int
cmc
or
decl
mov
add
xor
and
push
mov
mov
into
inc
add
push
into
mov
and
fldt
or
inc
add
shll
lcall
push
iret
xchg
out
out
fwait
push
repz
mov
mov
or
cwtl
addr16
adc
pop
mov
fnsave
add
and
mov
add
mov
jg
jno
add
add
inc
push
test
mov
inc
pop
mov
pop
in
call
mov
cmpsb
test
add
addr16
jg
xor
jle
or
jno
xlat
test
inc
jnp
orl
pusha
add
cmp
add
inc
add
mov
pop
stos
sbb
mov
and
mov
sbb
add
movsb
xchg
jmp
adc
mov
mov
add
add
add
jne
shl
rcll
or
add
push
outsb
mov
mov
mov
add
inc
jl
ljmp
add
fprem1
push
jle
inc
sub
or
scas
pop
mov
stc
popa
scas
cmpsb
jo
mov
mov
add
mov
scas
sub
add
insl
imul
ss
mov
inc
test
cmpl
adc
mov
fstpl
clc
arpl
stc
mov
add
or
out
push
add
addb
pop
mov
mov
int3
inc
or
mov
push
add
mov
mov
add
xor
mov
or
inc
add
pop
daa
movsl
in
add
mov
popf
nop
add
rcr
mov
mov
pop
mov
mov
mov
imul
jae
addr16
jmp
les
in
je
and
jge
jmp
lds
pop
xor
mov
inc
adc
mov
push
enter
adc
mov
sbb
mov
add
sbb
stc
clc
push
scas
mov
orl
mov
sub
add
xor
mov
mov
rolb
lock
and
mov
fsts
and
jbe
push
add
es
insb
lock
push
scas
imul
jae
dec
mov
or
push
xchg
add
push
add
add
outsb
sahf
and
mov
jecxz
inc
add
std
pusha
add
mov
das
lock
mov
scas
and
push
dec
add
aas
iret
mov
inc
jl
movsl
sub
add
decb
and
xlat
cld
fistpl
push
mov
bound
mov
dec
in
pop
loope
add
cli
adc
mov
fldenv
sub
add
mov
add
jle
data16
addb
outsl
mov
add
inc
sbb
fs
in
cs
cli
xchg
sub
popf
sub
push
fbld
pop
sbb
mov
ss
mov
flds
lods
data16
mov
imul
mov
sub
mov
mov
add
cmpsl
testb
mulb
adcl
mov
add
mov
sahf
stos
or
mov
cltd
dec
dec
inc
popf
inc
outsl
push
stc
movsb
movsl
xchg
addb
cmp
add
inc
or
sub
call
cmc
or
cmp
nop
add
mov
imul
and
mov
add
mov
rolb
mov
adc
mov
add
sbb
loop
mov
mov
push
stc
adc
mov
add
add
rolb
mov
test
inc
adc
mov
xor
mov
push
add
mov
sbb
icebp
xor
add
add
add
push
cmp
jne
cs
add
inc
mov
add
dec
mov
mov
inc
adc
mov
fucom
adc
mov
in
push
ljmp
imul
mov
icebp
inc
jnp
sbb
inc
add
mov
mov
fidivl
add
repnz
aaa
mov
inc
add
add
sbb
add
mov
add
ret
jne
dec
push
arpl
stc
add
add
pop
repz
add
mov
das
scas
mov
mov
mov
inc
add
lods
jecxz
scas
pop
add
mov
bt
mov
rolb
mov
xor
mov
ucomiss
mov
pop
cltd
stc
int
icebp
add
add
nop
add
add
scas
pop
loope
inc
add
jmp
clc
fidivl
inc
cmpsl
fldcw
push
or
rolb
mov
mov
mov
add
pop
aad
out
jecxz
sbb
mov
cltd
rol
jle
in
ret
sbb
mov
add
cld
ficoms
aam
sbb
mov
add
mov
add
push
bound
mov
pushf
sub
imul
mov
imul
mov
dec
aad
ja
ljmp
inc
shll
cwtl
mov
mov
adc
mov
xor
mov
fldcw
test
fdiv
add
add
in
out
ret
insl
sahf
fnstsw
stos
jg
jmp
add
cmp
fisubs
out
repz
mov
sbb
cli
mov
and
mov
add
mov
cs
push
test
add
pop
push
arpl
mov
stos
mov
xor
in
pop
pop
jo
mov
mov
xor
add
pop
sbb
jbe
push
add
mov
dec
int3
iret
xchg
add
mov
add
add
rolb
push
push
add
add
mov
pushf
lea
sub
inc
add
mov
add
or
add
and
add
jo
mov
mov
dec
or
jnp
daa
mov
mov
add
add
arpl
dec
movsb
push
adc
adcl
into
fwait
add
mov
ljmp
mov
adc
mov
insl
dec
test
mov
sub
mov
jl
add
xor
mov
mov
addl
mov
sbb
add
repz
add
mov
cltd
cli
rolb
mov
add
mov
and
mov
pushf
mov
out
pop
loope
add
cmp
mov
sti
cltd
in
sub
aad
arpl
stos
sub
add
cld
jb
mov
jb
mov
mov
pop
pop
cmp
not
ss
inc
push
xor
nop
add
popa
push
inc
or
dec
testb
xor
movsb
mov
mov
in
add
sub
add
mov
jno
push
adc
fs
out
add
mov
adc
pop
cmpsb
int
adc
mov
jae
fcomps
jnp
cmp
mov
mov
inc
xor
fs
and
scas
cmp
mov
lcall
aam
pop
xchg
cld
loop
mov
sub
jns
fidivrl
add
aaa
push
add
daa
fdivrs
mov
push
in
cmp
mov
jne
inc
fidivrs
cmp
add
cwtl
xchg
or
mov
add
sbb
mov
add
mov
pop
sub
sbb
xchg
add
xor
mov
jg
jne
push
inc
imul
inc
pushf
into
mov
mov
sub
add
mov
inc
add
or
sbb
xchg
jmp
jns
adc
jne
add
adc
mov
bound
mov
rcrl
pop
loope
add
add
mov
sub
and
into
push
mov
int
aad
ljmp
dec
fnstenv
push
scas
adc
add
mov
cmp
mov
das
popf
inc
add
xor
cmp
push
jo
mov
filds
mov
and
mov
les
aad
xlat
push
sbb
add
out
cmp
add
lock
mov
out
stos
in
add
cmc
pop
ds
sbb
std
arpl
mov
fistpl
mov
fdivl
push
add
addb
insb
sbb
test
nop
add
sub
test
add
sub
jge
add
in
push
rolb
mov
add
or
std
jp
fwait
mov
xor
dec
push
mov
add
mov
mov
mov
mov
xor
mov
mov
jbe
sarl
add
cmp
or
pop
out
mov
sbb
jo
mov
push
or
sub
jb
mov
dec
adc
mov
add
pop
xor
jle
cmp
add
popa
mov
mov
mov
into
into
bound
mov
in
mov
sub
pop
mov
cmp
in
stos
and
insl
push
add
aad
insb
jg
into
lock
mov
addb
aaa
mov
push
mov
jns
ret
ret
fcmovnbe
adc
sbb
mov
addb
push
add
mov
push
mov
test
push
adc
mov
mov
and
out
xchg
add
mov
add
mov
out
fcomps
mov
add
or
arpl
mov
adc
mov
mov
leave
inc
scas
cmc
fldcw
mov
les
sub
jmp
mov
fldt
daa
mov
loop
mov
and
jge
mov
add
mov
leave
jmp
push
mov
and
aad
jp
movsl
mov
inc
or
add
mov
clc
xchg
add
mov
add
pop
sbb
and
dec
fiaddl
sub
out
rcrl
test
lods
xchg
rolb
mov
cmpsb
add
mov
add
add
mov
nop
add
popf
ja
cmpl
mov
imul
test
enter
xchg
pop
pop
sbb
add
repnz
ds
cwtl
ljmp
dec
pop
and
out
loop
mov
incl
mov
mov
xchg
add
jnp
cmp
pop
adc
mov
mov
mov
mov
add
push
xor
fstl
loop
mov
mov
xchg
add
call
movsb
xchg
jmp
in
push
dec
cmp
rolb
mov
fstpl
add
jmp
mov
inc
cmp
je
mov
or
mov
mov
add
rolb
mov
or
add
mov
loopne
mov
add
jbe
push
cmc
pop
sub
sub
pop
push
mov
bound
mov
add
cmpsl
and
mov
cmc
push
add
inc
inc
add
ljmp
outsb
scas
mov
rolb
mov
test
aam
cmp
xor
mov
stc
adc
jb
mov
add
mov
cmc
sbb
notb
shrl
push
mov
push
add
mov
adc
imul
pop
mov
mov
mov
mov
mov
mov
add
pop
mov
out
pushf
pop
mov
in
decl
fwait
adc
add
add
xor
outsl
fldl2e
mov
rolb
in
es
stos
call
mov
mov
mov
or
xlat
insb
mov
clc
icebp
and
mov
test
and
xchg
flds
add
or
xchg
mov
mov
xchg
sarl
xchg
dec
rolb
mov
pop
dec
adc
cli
add
ss
stc
or
scas
imul
jmp
lods
push
in
inc
add
adc
iret
cmpsb
xchg
outsb
nop
add
ret
lahf
mov
pop
ja
cwtl
mov
push
add
mov
into
sbb
cli
popa
mov
add
add
mov
xchg
mov
rcrl
adc
push
int3
arpl
push
push
mov
ljmp
push
pop
cmp
add
in
gs
ljmp
jge
add
mov
cltd
xchg
icebp
leave
jne
fidivrs
add
gs
stos
pop
pop
xchg
or
add
out
int
hlt
nop
add
adc
mov
popf
in
aad
add
jmp
jge
aas
add
lret
fsubl
push
sbb
fwait
psubsb
adc
in
ljmp
mov
mov
inc
cs
mov
loopne
mov
ds
dec
dec
dec
ret
or
jnp
dec
pop
stc
int
add
and
mov
subl
mov
std
fcomp
das
sub
mov
mov
mov
push
iret
js
cmp
ret
xchg
iret
outsl
mov
aas
aas
lcall
sarl
addb
cmp
dec
mov
js
nop
add
hlt
add
in
jecxz
sarl
mov
insb
sub
add
lahf
xor
mov
ds
xorl
lcallw
xchg
in
arpl
add
int
arpl
bound
mov
into
out
cmc
scas
jg
icebp
sarl
test
and
xlat
jp
add
push
test
ds
fsubrs
fsubrl
nop
add
xchg
xor
aad
int
jo
mov
insl
outsb
sbb
fldenv
inc
mov
mov
prefetchw
xor
ja
lea
cmpsl
jmp
mov
mov
xchg
lds
push
mov
pop
xor
mov
int3
xor
add
sbb
add
cmp
in
xchg
inc
ss
pop
lahf
xor
mov
add
adc
mov
xchg
jmp
mov
addb
jo
mov
and
mov
leave
ret
jo
mov
loope
xchg
test
jp
add
sbb
repz
mov
mov
pop
addb
inc
jg
adc
mov
jbe
add
out
dec
addb
sbb
lret
push
das
out
mov
mov
xchg
lock
add
in
pop
lds
mov
xchg
xchg
sbb
jb
mov
inc
add
mov
test
fimuls
ljmp
add
and
or
add
push
es
inc
add
rolb
lret
flds
jle
outsb
je
cmpsb
frstor
mov
test
push
inc
cwtl
aad
dec
pop
dec
mov
jno
xchg
mov
pop
sbb
add
mov
add
jle
das
jecxz
inc
and
call
push
add
test
imul
mov
or
mov
scas
pop
loop
mov
push
add
in
movsl
jnp
jb
mov
xchg
stos
pusha
add
add
lret
aad
addr16
scas
aad
add
rolb
mov
fcoml
push
jns
pop
aad
add
mov
cmp
add
popa
cltd
xor
insl
fldenv
mov
pop
in
cmp
fisubs
xchg
lahf
add
mov
mov
mov
cld
mov
inc
cmp
cmp
bound
mov
repnz
and
mov
mov
xor
mov
sbb
and
mov
add
lcall
in
fmuls
subl
stos
mov
xor
mov
mov
fcmovb
inc
push
adc
inc
mov
fstpt
inc
sbb
movsl
jnp
pop
lds
pop
negl
aad
repnz
ss
mov
dec
fs
cmpsl
pop
in
add
and
rolb
mov
push
adc
cmpsb
js
inc
fisttpll
add
dec
jl
lods
aaa
mov
call
into
or
xor
mov
mov
pop
pop
rol
add
add
test
fwait
add
mov
jl
dec
scas
mov
aad
add
out
movsl
js
push
push
fiadds
add
mov
add
push
lea
adc
sub
mov
xchg
adc
mov
test
add
add
push
pop
cmp
pusha
add
ja
scas
jno
data16
lcall
pop
aam
jle
push
lret
cmp
fsubl
imul
or
sbb
dec
xorl
mov
mov
cmpsl
divl
in
jnp
cmp
mov
mov
mov
or
es
xor
mov
icebp
out
iret
outsl
pop
lret
mov
inc
add
mov
mov
dec
aad
adc
mov
mov
out
stos
cmp
add
jmp
mov
mov
mov
xor
inc
mov
mov
icebp
xchg
mov
mov
in
fs
jge
pop
fistpll
jg
add
sbb
mov
cwtl
mov
add
jecxz
popf
stc
addb
lret
mov
enter
push
pop
lds
mov
aad
imul
add
and
mov
add
sub
mov
clc
adc
cmpsb
imul
outsb
or
mov
cmp
adc
mov
add
cld
jl
pop
test
xor
add
mov
out
xor
add
repnz
push
outsl
add
mov
mov
cmpsb
push
lahf
cmp
mov
fimuls
push
je
jecxz
xor
mov
aaa
mov
or
movsl
addb
addr16
add
jl
add
adc
mov
bound
mov
arpl
sub
ret
pop
xor
push
addr16
test
loop
mov
stc
mov
adc
mov
mov
xlat
xchg
popa
in
add
xchg
in
psubb
and
mov
xlat
sub
mov
add
popf
push
aaa
dec
adc
mov
pop
sahf
in
xlat
inc
sbb
xchg
data16
sbb
adc
out
js
adc
mov
sbb
ja
imul
outsb
sbb
std
lcall
into
push
out
add
mov
add
pusha
add
push
mov
xchg
mov
lcall
insl
ret
jecxz
lock
sbb
and
mov
adc
mov
and
add
add
add
push
inc
adc
mov
jg
fisubrl
xchg
out
aad
xchg
incl
mov
rolb
xor
daa
and
and
mov
xor
pop
cltd
pop
push
sub
pop
adc
xchg
sub
and
fldt
repz
mov
mov
movsb
cmp
add
stc
lret
outsb
fadds
lret
outsl
imul
add
mov
and
mov
xlat
int
call
std
lock
aaa
jae
sub
adc
mov
and
fiaddl
add
mov
jbe
iret
mov
mov
es
sub
add
mov
add
xor
aad
jb
mov
je
das
js
add
dec
aaa
insb
jge
cltd
push
xchg
loopne
mov
mov
cld
push
cmc
fisubrs
imul
outsb
bound
mov
pop
dec
add
add
add
mov
mov
in
outsl
int
pop
inc
add
add
dec
sub
pushf
and
jge
add
add
mov
repnz
cmpsl
lods
popa
add
xchg
test
add
test
outsb
mov
mov
repz
mov
adc
mov
sbb
pushw
sbb
push
popa
shr
add
fidivrl
add
or
fimull
rcrl
add
xchg
pop
and
mov
push
sbb
mov
xchg
dec
pop
test
xchg
inc
shrl
pusha
add
mov
or
out
jne
rolb
mov
les
call
add
cli
int
add
mov
addb
xor
mov
add
outsb
or
lret
dec
xor
cmp
daa
fldcw
xchg
stos
das
jge
ficoms
jb
mov
rcrl
test
cmp
loopne
mov
addb
sub
or
fwait
scas
xchg
jo
mov
sbb
or
insl
lahf
ljmp
push
add
push
insl
daa
xchg
add
jecxz
jge
es
clc
lock
lahf
push
add
clc
std
jns
and
adc
mov
rcrl
mov
test
test
mov
lds
loop
mov
pop
inc
add
pushl
add
lret
lcall
or
je
add
imul
mov
and
cld
lret
int3
lcall
add
sbbl
pushf
mov
jno
scas
fidivrl
rcl
jl
inc
fstpt
push
aas
dec
loop
mov
sub
push
fnstenv
add
add
mov
sub
add
insl
push
push
mov
mov
sbb
aam
xor
mov
loop
mov
mov
addb
mov
dec
gs
xchg
ds
gs
ret
xor
add
inc
add
push
push
add
mov
stc
call
dec
int3
adc
mov
ja
push
dec
js
mov
sub
and
jl
push
add
add
dec
inc
and
je
mov
fsts
mov
jne
cwtl
xchg
and
mov
mov
jg
imul
pusha
add
sub
inc
or
dec
push
add
nop
add
aas
pop
imul
pop
xchg
add
sti
mov
ret
xchg
sub
xchg
jmp
mov
cs
pop
sbb
insl
xchg
insb
sti
jge
filds
nop
add
inc
add
mov
rolb
or
mov
xor
mov
mov
mov
or
add
lock
ljmp
lods
inc
int3
mov
mov
mov
jge
pop
mov
sbb
mov
or
xor
mov
mov
pop
mov
loop
mov
dec
sub
push
dec
and
add
add
mov
pop
push
jecxz
sbb
xchg
test
mov
dec
jnp
push
cmp
cmp
or
push
jecxz
and
add
inc
hlt
sub
jg
mov
movsb
int3
sbb
movsb
or
add
add
aad
push
cmp
mov
mov
add
mov
gs
stc
push
cmp
outsb
cmp
loop
mov
insb
add
into
loope
ljmp
adc
in
add
mov
mov
or
add
outsb
xchg
add
fdivl
imul
mov
cmp
add
or
add
out
mov
add
out
jno
aad
jmp
mov
fsubr
cmpsb
icebp
test
adc
cmp
in
or
cmp
jmp
inc
add
mov
add
int3
icebp
rorl
push
jle
inc
sahf
imul
aas
xor
mov
dec
ljmp
mov
out
jmp
sbb
mov
pop
movsl
pop
add
mov
in
pop
das
push
mov
add
mov
add
mov
jp
addb
rolb
mov
add
pop
jae
add
mov
lock
cmp
shll
and
jae
or
sbb
mov
dec
dec
rolb
mov
jo
mov
fidivl
stc
add
mov
add
addb
cmpl
aas
addr16
adc
int
cmp
mov
xor
adc
mov
xchg
lahf
mov
ds
std
mov
enter
out
adc
lock
pop
cli
fwait
daa
cli
test
sub
sarl
and
mov
or
and
mov
mov
dec
leave
inc
cmpsb
xor
adc
sub
add
and
test
mov
cltd
jae
push
lods
in
fs
and
cltd
adc
push
add
dec
jge
sub
add
add
adc
add
inc
add
pop
sahf
mov
dec
sbb
rolb
mov
mov
mov
rolb
insb
fwait
add
movsb
mov
mov
mov
daa
or
in
stc
loopne
mov
add
add
fdivrs
mov
add
cmc
test
repnz
inc
add
cltd
inc
mov
inc
xor
and
jge
dec
adc
mov
add
insl
lret
sub
stos
clc
push
add
daa
scas
rorl
sub
mov
cmpsb
sbb
cltd
push
fcmovne
inc
pop
shll
or
mov
jae
inc
js
mov
mov
cltd
jbe
push
aas
lods
insb
xchg
add
nop
add
mov
fadds
mov
jb
mov
mov
lcall
pop
mov
mov
mov
add
mov
ret
adc
and
aad
inc
add
out
int
xadd
add
lret
inc
in
adc
adc
mov
aaa
mov
mov
add
inc
pop
pop
mov
fisubrs
loope
fsubp
cmc
pop
cmp
add
add
clc
push
xchg
lret
daa
cs
push
test
fld
add
addb
fwait
pop
out
loope
into
call
dec
dec
aaa
adc
push
mov
push
gs
xor
mov
bound
mov
rolb
inc
leave
mov
sbb
out
mov
jge
lods
lret
adc
mov
mov
adc
pop
clc
xchg
add
or
fcomip
add
pop
fwait
out
andl
inc
mov
mov
add
sub
ljmp
mov
pop
popl
inc
out
add
mov
jl
add
add
and
cltd
pushl
addb
stos
outsb
pop
xchg
jmp
add
sbb
mov
mov
xchg
inc
mov
testb
mov
mov
js
pop
insb
cmp
and
mov
add
in
sbb
add
mov
addb
mov
addr16
loop
mov
outsl
push
cmp
aad
lods
sub
sbb
mov
or
stc
pop
aam
xor
rolb
mov
ret
fwait
adc
inc
sbb
pop
xchg
call
jb
mov
push
mov
add
mov
sub
ret
dec
pop
cmc
mov
loop
mov
push
std
sti
ret
rorl
pop
enter
mov
adc
mov
sub
pop
jb
mov
dec
subl
add
sub
sub
mov
add
inc
cli
adc
mov
sub
mov
add
aas
and
adc
rolb
jns
xchg
je
test
add
lcall
lret
orps
dec
cmc
jno
add
popa
jp
jmp
cli
push
add
and
rolb
mov
mov
mov
jne
or
movsb
js
jns
add
or
lcall
mov
add
ds
fiadds
add
aaa
fisttpll
jae
jp
rolb
mov
mov
mov
aas
cli
adc
mov
test
data16
clc
pusha
add
add
mov
add
jno
stos
sbb
rolb
mov
cmc
jg
mov
or
in
push
mov
jge
mov
iret
push
mov
or
and
adc
mov
icebp
in
addb
clc
jg
cmp
pop
cmpsb
movsb
out
je
inc
mov
cmc
aaa
flds
iret
inc
jae
add
inc
mov
jnp
pop
inc
shr
jne
add
mov
mov
add
push
add
push
cmp
arpl
push
sahf
jecxz
or
mov
add
jae
pop
sub
mov
and
mov
inc
addr16
dec
dec
scas
cmp
jecxz
std
aad
xchg
xlat
adc
mov
sahf
sbb
push
or
add
lcall
mov
add
cmp
add
add
mov
jns
test
mov
mov
js
add
ljmp
loopne
mov
repz
jne
add
not
add
sbb
lcall
pusha
add
xchg
in
aas
imul
mov
sub
adc
add
add
mov
xchg
add
add
imul
sbb
add
push
add
mov
push
inc
or
cmp
leave
out
xchg
inc
cmp
lods
addr16
jle
fimuls
lds
mov
data16
add
mov
xchg
pop
ds
adc
add
cmp
fs
pop
scas
mov
mov
stc
jl
xlat
in
int3
ja
cmp
xor
mov
add
daa
sub
jecxz
mov
fisttpl
cmpsl
xchg
or
add
repz
mov
inc
add
push
loopne
mov
inc
add
hlt
xor
mov
outsl
addb
ss
pop
inc
inc
add
scas
mov
push
xchg
add
js
out
lahf
mov
push
inc
sbb
push
mov
mov
sub
add
mov
mov
dec
pusha
add
xchg
outsl
sbb
rolb
mov
add
mov
add
js
fdivrl
jae
lock
mov
mov
js
pusha
add
fneni(8087
add
add
shl
push
cmp
cmpl
jae
pusha
add
std
stos
dec
rorl
or
or
xchg
cwtl
pop
pop
pop
lret
jecxz
out
push
iret
aaa
test
dec
and
mov
enter
imul
test
add
dec
mov
outsb
enter
fs
add
test
jno
cs
mov
mov
js
add
pop
adc
mov
dec
add
mov
add
cltd
sub
add
iret
mov
test
add
in
mov
cmp
addb
jp
test
shll
mov
add
lret
enter
inc
arpl
push
rep
pop
fs
xchg
xchg
stos
notb
add
in
adcl
ja
add
mov
push
es
insl
jp
and
mov
popf
and
rcll
cld
push
pop
lcall
repnz
or
nop
add
add
jns
icebp
pusha
add
add
xchg
mov
mov
push
pop
push
add
dec
clc
push
xchg
dec
nop
add
mov
popl
scas
jns
cwtl
mov
mov
paddusb
push
add
jp
insb
bound
mov
jae
mov
in
mov
push
pop
out
jge
int3
adc
int
int
add
xor
mov
addb
addb
gs
adc
jnp
stos
push
shl
inc
stc
repz
add
inc
add
ja
push
add
sub
cmp
jb
mov
xor
mov
lea
jb
mov
push
mov
push
stos
test
cmpsb
std
or
sahf
pop
add
jecxz
sub
and
mov
push
mov
push
jmp
add
mov
mov
jo
mov
lock
sbbl
add
add
neg
or
and
add
mov
pop
inc
pop
mov
mov
jns
rolb
mov
pushf
mov
mov
jl
mov
in
push
sbb
test
add
mov
push
jecxz
add
stos
and
jmp
add
outsl
sbb
and
in
add
insl
pop
pop
je
or
rolb
or
filds
pop
scas
jl
cld
add
jl
mov
sbb
shl
ljmp
rolb
mov
mov
push
add
xchg
mov
add
sbbl
jmp
add
lea
stos
test
add
hlt
cmp
jmp
pop
mov
sbb
push
and
push
test
ffreep
add
nop
add
fbstp
add
das
ret
and
pop
loopne
mov
addr16
xchg
add
mov
mov
repnz
add
ret
addb
jb
mov
int
jns
in
mov
add
adc
mov
mov
enter
addb
push
incb
dec
cwtl
push
hlt
inc
add
mov
push
add
and
mov
aaa
xor
adc
ret
push
shr
lahf
es
xchg
sbb
mov
adc
mov
jne
xor
aas
aam
aam
and
push
add
add
aas
aad
addr16
dec
cmpsl
dec
dec
out
jge
in
adc
divl
mov
ljmp
jno
dec
test
dec
sahf
inc
jp
add
xchg
add
add
add
lock
lods
sub
add
mov
mov
sub
xchg
mov
mov
or
inc
pop
repz
lcall
rolb
mov
add
cmpl
cmp
pop
adc
pop
push
push
fmuls
fdivl
mov
js
xchg
scas
mov
xor
add
shrl
mov
test
push
mov
clc
outsl
and
jecxz
xor
mov
or
add
mov
fwait
mov
push
filds
add
cltd
ja
add
add
int
insb
bound
mov
dec
dec
push
mov
invd
cmpsb
aas
imul
pusha
add
in
cmp
and
mov
add
in
test
and
push
jns
cmp
adc
mov
popa
jne
dec
ret
mov
gs
add
add
push
movsl
rolb
mov
fdivl
add
imul
and
shl
dec
in
dec
push
addb
sbb
stos
push
pop
cmp
inc
mov
xchg
add
mov
jg
stos
fnstsw
mov
mov
push
add
add
jns
pop
add
mulb
mov
add
mov
ljmp
sub
xor
mov
and
ret
push
cmp
ds
jae
fs
call
cmp
out
sub
adc
add
mov
jmp
movsl
jns
popf
push
add
inc
pop
outsl
rolb
mov
mov
mov
dec
add
mov
lea
xor
addb
ret
loopne
mov
mov
out
lret
cmp
jmp
sub
xchg
pusha
add
dec
push
jbe
add
movsb
loope,pn
add
add
inc
into
xchg
xor
mov
xchg
ja
lds
lods
addb
ret
test
xchg
lahf
add
mov
add
pop
icebp
jge
imulb
pop
lock
pop
inc
sbb
add
xchg
sbb
xchg
mov
dec
adc
push
cmp
sbb
lret
aad
ja
pop
mov
mov
add
mov
pop
dec
inc
add
loopne
mov
add
sbb
dec
cld
stc
push
add
pop
gs
jae
xchg
add
fisttps
xchg
sub
rcrl
add
mov
mov
jbe
ss
mov
cmp
push
push
in
ja
and
mov
fcomps
or
in
sbb
add
push
inc
bound
mov
and
mov
mov
xor
cmp
pop
mov
mov
add
rolb
mov
insl
jne
inc
sub
sbb
rcll
mov
cwtl
xchg
dec
add
mov
incb
fcomp
scas
test
lds
inc
std
jb
mov
jl
mov
push
adc
mov
xlat
dec
sahf
mov
mov
pushf
add
sub
movsb
enter
and
mov
cmp
jle
push
add
popa
or
in
daa
pop
pop
adc
mov
call
leave
loopne
mov
dec
jmp
jmp
xor
fiaddl
lods
cmp
add
out
xor
add
sub
outsb
jge
or
mov
add
stos
sub
inc
mov
add
cmc
insb
push
sub
pop
loope
inc
or
mov
enter
add
ds
repz
mov
xor
ret
daa
xor
outsl
addb
bound
mov
add
cmpsl
ret
lea
add
sbb
mov
xor
mov
mov
push
xor
dec
jno
mov
adc
mov
and
mov
lea
mov
pop
mulb
jns
pop
push
add
rolb
mov
popa
loopne
mov
mov
pop
pusha
add
shrl
mov
mov
push
loop
mov
fwait
dec
mov
mov
mov
imul
cmpsl
mov
jne
movsl
push
xor
mov
cmp
xlat
pusha
add
in
ret
mov
mov
adc
mov
sub
push
das
add
mov
mov
inc
add
xchg
ficoml
add
imul
rolb
mov
mov
repz
inc
out
sti
add
mov
mov
addb
jg
fcmovnbe
add
cmp
in
fisttpll
test
shl
scas
add
mov
mov
cmp
mov
fnstenv
daa
adc
mov
mov
push
sbb
mov
dec
lcall
mov
sahf
mov
cmp
ret
lea
jmp
add
cli
aad
pop
mov
lea
movsl
pop
dec
pop
mov
add
adc
dec
mov
inc
add
fistpl
and
mov
orl
or
mov
dec
lahf
stos
cmpsb
jmp
sbb
xchg
call
jecxz
push
xchg
mov
add
mov
mov
cltd
adc
insl
fnstenv
cmp
je
add
pop
or
or
scas
mov
add
adc
das
int
push
add
lock
ret
aad
int3
inc
dec
push
add
push
add
pop
push
add
pop
addr16
xchg
sub
cmp
add
mov
add
jecxz
mov
mov
pop
rolb
mov
stos
jne
loope
cmp
int
test
sub
das
pop
out
xchg
add
and
add
movsb
test
xchg
imul
mov
mov
add
mov
hlt
dec
push
icebp
add
and
mov
sub
add
repz
mov
adc
mov
inc
mov
cmc
add
jbe
sbb
inc
fdivp
add
and
mov
and
fwait
add
mov
rorl
outsb
inc
xor
nop
add
dec
sub
mov
sub
aad
mov
add
add
jno
mov
ret
xor
add
fildll
stc
push
push
jo
mov
outsl
rolb
mov
push
add
imul
jb
mov
in
xlat
lcall
rolb
mov
loope
add
jl
add
xchg
sahf
mov
repz
mov
add
mov
xchg
orl
and
ret
outsb
jbe
fwait
adc
xchg
dec
mov
inc
add
lcall
iret
jl
push
std
jb
mov
jno
pop
mov
add
add
int
repz
ljmp
sahf
arpl
mov
mov
mov
mov
negb
les
lret
orl
add
mov
pop
sti
inc
leave
xor
mov
dec
pusha
add
in
sbb
or
aam
sahf
xlat
in
scas
xor
out
imul
cmpsl
sbb
test
bound
mov
or
dec
or
mov
inc
lods
test
mov
mov
ret
addb
loop
mov
add
mov
lea
std
jecxz
popa
xor
mov
jae
jmp
add
sub
sbbl
push
mov
nop
leave
jmp
xchg
xchg
add
or
pop
jge
leave
sub
in
nop
leave
jmp
add
add
shrl
adc
jmp
repnz
nop
cld
jae
mov
add
mov
aad
sub
nop
nop
cld
jae
adc
adc
add
mov
push
mov
xchg
ret
rcrl
add
insb
idiv
ljmp
nop
cld
jae
add
xchg
add
adc
scas
add
clc
repnz
nop
cld
jae
jnp
cld
mov
test
repnz
nop
cld
jae
fiadds
add
add
clc
repnz
nop
cld
jae
add
rolb
mov
add
push
mov
nop
leave
jmp
insb
out
xchg
inc
not
jmp
repnz
nop
cld
jae
lock
mov
call
inc
add
shlb
add
add
dec
pusha
clc
repnz
nop
cld
jae
mov
loopne
jle
add
mov
xchg
ret
imul
add
dec
add
push
mov
xchg
ret
add
add
rolb
decb
adc
add
repnz
nop
cld
jae
dec
jge
jp
push
mov
nop
leave
jmp
stos
mov
mul
add
add
add
mov
nop
leave
jmp
add
imul
mov
push
mov
xchg
ret
add
add
add
imull
ds
clc
repnz
nop
cld
jae
imul
add
add
push
mov
nop
leave
jmp
xchg
sub
jmp
add
add
sub
add
clc
repnz
nop
cld
jae
dec
pop
add
or
jne
clc
repnz
nop
cld
jae
cld
add
sarb
in
nop
leave
jmp
add
cmp
add
jecxz
add
adc
imul
add
add
jle
push
mov
xchg
ret
add
add
add
xchg
out
push
clc
repnz
nop
cld
jae
add
inc
add
sub
add
mov
nop
leave
jmp
add
add
cmp
mov
add
clc
repnz
nop
cld
jae
adc
xor
add
flds
cmp
nop
nop
cld
jae
push
add
add
add
mov
push
push
mov
xchg
ret
xor
add
pop
cmp
loopne
push
add
push
mov
xchg
ret
jmp
add
loopne
jnp
fmull
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
imul
add
add
add
lea
push
mov
nop
leave
jmp
add
add
add
mov
mov
add
clc
repnz
nop
cld
jae
add
pop
int3
pushl
clc
repnz
nop
cld
jae
inc
js
add
movsl
and
adc
mov
clc
repnz
nop
cld
jae
insb
add
dec
add
insb
insl
dec
clc
repnz
nop
cld
jae
testl
add
mov
xchg
ret
add
and
cmp
inc
cmp
repnz
nop
cld
jae
jo
out
mov
sbb
jmp
pushl
add
jno
jnp
add
xor
add
dec
add
push
clc
repnz
nop
cld
jae
add
jbe
clc
repnz
nop
cld
jae
mov
rep
clc
repnz
nop
cld
jae
add
add
loopne
and
movzwl
clc
repnz
nop
cld
jae
mov
push
add
add
push
mov
nop
leave
jmp
add
xor
mov
jne
clc
repnz
nop
cld
jae
jno
add
pop
push
mov
xchg
ret
fnstcw
add
ret
jbe
clc
repnz
nop
cld
jae
cmp
add
clc
push
mov
xchg
ret
jno
cmp
add
add
sub
repnz
nop
cld
jae
dec
xor
push
imul
jae
testl
mov
movsb
gs
mov
push
mov
nop
leave
jmp
inc
add
add
jge
out
call
clc
repnz
nop
cld
jae
add
lock
movzwl
push
mov
nop
leave
jmp
add
cmp
add
loopne
mov
pop
mov
clc
repnz
nop
cld
jae
add
cmp
adc
push
push
mov
xchg
ret
add
xchg
jnp
add
out
bound
mov
add
clc
repnz
nop
cld
jae
add
xor
cmp
int
add
clc
repnz
nop
cld
jae
jno
jno
lock
mov
clc
repnz
nop
cld
jae
imul
sub
inc
sub
repnz
nop
cld
jae
add
flds
add
push
clc
repnz
nop
cld
jae
inc
add
dec
ret
iret
mov
clc
repnz
nop
cld
jae
rolb
add
jl
and
in
nop
leave
jmp
add
adc
mov
push
push
mov
xchg
ret
insl
or
add
add
and
push
fs
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
cmp
cmp
negb
mov
adc
mov
nop
leave
jmp
add
add
imul
mov
clc
repnz
nop
cld
jae
xor
mov
mov
clc
repnz
nop
cld
jae
sldt
add
add
pushl
push
mov
xchg
ret
add
jno
roll
leave
mov
push
mov
xchg
ret
add
add
add
imul
test
add
repnz
nop
cld
jae
push
testl
popa
push
mov
xchg
ret
jmp
add
xor
add
add
pop
clc
repnz
nop
cld
jae
add
insl
out
or
nop
nop
cld
jae
add
jl
jle
push
vcvtsd2si
add
cmp
nop
nop
cld
jae
inc
imul
mov
xchg
ret
insl
dec
dec
cmp
add
add
mov
je
clc
repnz
nop
cld
jae
loopne
imul
repnz
nop
cld
jae
add
fldcw
add
mov
clc
repnz
nop
cld
jae
add
in
gs
psubsb
stc
clc
repnz
nop
cld
jae
add
cmp
add
add
jle
add
add
inc
add
add
jno
jle
and
push
mov
xchg
ret
or
out
jno
testl
nop
nop
cld
jae
add
mov
add
push
mov
nop
leave
jmp
cmp
add
add
flds
add
nop
nop
cld
jae
pop
add
add
add
pop
sub
clc
repnz
nop
cld
jae
sub
xor
add
adc
repnz
nop
cld
jae
jo
jmp
push
add
add
clc
repnz
nop
cld
jae
adc
punpckhdq
dec
ljmp
pop
rcrb
inc
or
add
push
mov
nop
leave
jmp
mov
add
add
push
clc
repnz
nop
cld
jae
adc
cmp
add
inc
inc
add
mov
xchg
ret
add
cmp
add
add
jo
mov
add
mov
clc
repnz
nop
cld
jae
idivl
mov
push
push
mov
xchg
ret
add
add
mov
xchg
ret
ret
add
add
test
push
mov
nop
leave
jmp
push
add
add
mov
add
inc
add
cmp
add
add
lods
call
clc
repnz
nop
cld
jae
add
rolb
rep
push
mov
xchg
ret
xchg
cmp
cmp
imul
cmp
ret
imul
incb
xor
push
mov
nop
leave
jmp
mov
imul
repnz
nop
cld
jae
add
imul
out
add
clc
repnz
nop
cld
jae
out
inc
inc
add
shll
or
inc
add
dec
add
dec
xor
push
mov
xchg
ret
add
or
dec
mov
push
mov
xchg
ret
add
adc
xor
cmp
repz
repnz
nop
cld
jae
loopne
add
xchg
mov
mov
xchg
ret
xchg
add
mov
add
add
dec
and
push
mov
xchg
ret
add
cmp
add
jp
movsb
jp
addl
add
add
xchg
fisttps
test
push
push
repnz
nop
cld
jae
mov
icebp
clc
repnz
nop
cld
jae
cmp
add
insb
and
mov
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
shrl
jmp
mov
clc
repnz
nop
cld
jae
add
jnp
add
sub
mov
xchg
ret
cmp
cmp
push
loope
add
clc
repnz
nop
cld
jae
mov
xchg
add
jne
clc
repnz
nop
cld
jae
dec
add
pushf
pop
push
mov
xchg
ret
add
adc
add
add
add
add
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
add
mov
out
add
add
push
xchg
xchg
movb
pop
mov
add
mov
dec
adc
repnz
nop
cld
jae
add
cmp
xchg
xchg
xlat
push
add
repnz
nop
cld
jae
pop
add
add
push
clc
repnz
nop
cld
jae
jno
add
sahf
push
push
mov
xchg
ret
add
cmp
flds
add
lods
add
push
mov
xchg
ret
add
xchg
add
jge
pop
xor
clc
repnz
nop
cld
jae
add
rolb
rorl
je
repnz
nop
cld
jae
ret
add
rclb
dec
cmc
inc
add
jo
add
mov
mov
repnz
nop
cld
jae
stos
incb
add
add
mov
add
add
repnz
nop
cld
jae
stos
add
add
clc
repnz
nop
cld
jae
cmp
add
dec
sub
add
clc
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
cmp
mov
add
push
mov
xchg
ret
dec
push
dec
jmp
cmp
sbb
add
inc
cmp
add
or
add
adc
add
aad
add
cmp
add
jle
jb
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
mov
add
roll
add
out
jmp
insl
add
add
insl
add
add
fldenv
repnz
nop
cld
jae
jno
mov
inc
testb
push
mov
xchg
ret
jge
cmp
imul
cmp
add
clc
repnz
nop
cld
jae
inc
and
xlat
push
loope
push
add
add
repnz
nop
cld
jae
pop
add
gs
mov
nop
leave
jmp
adc
stos
imul
mov
xchg
ret
add
adc
add
add
mov
jp
pop
adc
repnz
nop
cld
jae
cld
out
xor
cmp
pop
push
mov
xchg
ret
adc
add
dec
out
jno
mov
mov
push
mov
xchg
ret
jge
jnp
testl
push
mov
nop
leave
jmp
jp
add
clc
repnz
nop
cld
jae
add
add
add
les
push
mov
xchg
ret
jge
add
jnp
add
out
call
clc
repnz
nop
cld
jae
add
add
outsl
add
clc
repnz
nop
cld
jae
mov
rcl
lods
movzwl
push
mov
nop
leave
jmp
add
add
add
or
repnz
nop
cld
jae
jge
loopne
cmp
lock
xor
mov
pop
test
push
mov
nop
leave
jmp
js
jno
rolb
shl
scas
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
jno
add
cmp
clc
repnz
nop
cld
jae
mov
out
mov
clc
repnz
nop
cld
jae
add
add
test
push
mov
nop
leave
jmp
cld
loopne
add
sub
clc
repnz
nop
cld
jae
cld
add
pop
call
in
nop
leave
jmp
xchg
add
imul
mov
clc
repnz
nop
cld
jae
xchg
cmp
add
push
mov
xchg
ret
add
add
insb
push
push
clc
repnz
nop
cld
jae
add
jno
js
sbb
in
nop
leave
jmp
mov
add
dec
xorl
push
mov
nop
leave
jmp
add
add
push
push
mov
nop
leave
jmp
add
add
cmp
rolb
orl
loopne
mov
xchg
ret
add
out
add
mov
nop
leave
jmp
add
or
jge
add
dec
push
push
mov
nop
leave
jmp
jle
add
jle
add
cmp
xor
push
mov
nop
leave
jmp
ret
loopne
add
add
mov
push
mov
nop
leave
jmp
add
les
pop
push
mov
nop
leave
jmp
add
add
cs
int3
insl
int
clc
repnz
nop
cld
jae
mov
add
add
rclb
mov
repnz
nop
cld
jae
dec
stos
add
rolb
push
loop
mov
add
push
mov
nop
leave
jmp
loopne
cmp
add
dec
mov
push
mov
nop
leave
jmp
add
cld
cld
add
cld
mov
push
mov
nop
leave
jmp
out
ret
dec
add
out
pusha
clc
repnz
nop
cld
jae
testl
mov
aam
je
clc
repnz
nop
cld
jae
mov
mov
add
repnz
nop
cld
jae
jl
add
and
mov
mov
add
inc
mov
sub
adc
in
nop
leave
jmp
jge
add
imul
fisttpll
nop
cld
jae
xchg
xor
add
inc
xor
mov
pop
clc
repnz
nop
cld
jae
add
xchg
add
cmp
pop
fimuls
nop
cld
jae
cmp
cmp
push
movsb
fildl
nop
nop
cld
jae
cmp
js
add
dec
mov
push
mov
nop
leave
jmp
xchg
add
add
add
dec
push
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
nop
leave
jmp
out
add
rolb
js
clc
repnz
nop
cld
jae
or
int3
cmp
cmp
push
and
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
imul
out
clc
call
in
nop
leave
jmp
add
jl
add
jns
clc
repnz
nop
cld
jae
imul
sarl
cmp
cmpl
in
nop
leave
jmp
mov
push
or
lea
in
imul
push
or
mov
daa
jmp
data16
or
repnz
nop
cld
jae
push
js
cmp
imul
nop
cld
jae
cmp
out
ret
clc
repnz
nop
cld
jae
add
flds
fiadds
lock
cs
clc
repnz
nop
cld
jae
mov
inc
int3
cmp
cmpxchg
mov
and
clc
repnz
nop
cld
jae
xor
add
add
jl
jmp
incl
cmp
or
add
add
add
add
dec
xchg
jae
mov
jmp
incl
add
cmp
cmpeqps
or
jmp
nop
leave
jmp
add
add
nop
nop
cld
jae
add
jl
incb
cmp
cwtl
mov
push
mov
xchg
ret
add
add
out
sbb
add
mov
add
lahf
add
test
add
add
repnz
nop
cld
jae
ret
lods
clc
repnz
nop
cld
jae
add
sar
jmp
test
repnz
nop
cld
jae
out
jl
push
mov
add
push
lea
les
pop
add
std
push
push
mov
xchg
ret
jge
add
xor
add
scas
jne
clc
repnz
nop
cld
jae
add
add
movb
mov
xchg
ret
add
imull
daa
push
addb
das
push
push
mov
xchg
ret
out
cmovb
add
test
repnz
nop
cld
jae
loopne
add
rol
push
mov
xchg
ret
adc
add
push
pop
mov
mov
xchg
ret
add
add
add
add
cmp
push
mov
nop
leave
jmp
jo
add
add
adc
repnz
nop
cld
jae
cmp
out
dec
push
mov
xchg
ret
add
dec
mov
mov
movzwl
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
ret
add
jno
test
mov
mov
inc
add
add
js
add
push
addb
pop
repnz
testb
add
repnz
nop
cld
jae
xchg
add
out
add
jmp
fiadds
xchg
ret
mov
add
add
fsts
mov
nop
leave
jmp
add
add
xor
add
xchg
jge
jle
add
in
nop
leave
jmp
xchg
add
add
xor
add
push
mov
nop
leave
jmp
js
addb
add
adc
cmpw
push
mov
nop
leave
jmp
add
add
sti
add
add
in
nop
leave
jmp
add
imul
add
in
nop
leave
jmp
add
lock
add
clc
repnz
nop
cld
jae
xchg
rolb
add
add
add
clc
repnz
nop
cld
jae
insl
add
add
and
pop
xor
mov
xchg
ret
insl
add
jl
jmp
out
cmpsl
cmp
jmp
and
insl
stos
add
jno
add
mull
mov
sub
icebp
push
mov
nop
leave
jmp
add
cs
add
push
mov
xchg
ret
incb
add
add
xchg
xchg
lds
mov
nop
nop
cld
jae
add
add
pshufb
add
adc
or
add
mov
cmp
add
add
add
or
nop
leave
jmp
add
pop
adc
add
push
mov
nop
leave
jmp
lock
jnp
or
push
mov
xchg
ret
xor
xchg
insl
add
insl
roll
lea
push
mov
xchg
ret
out
add
stos
ret
aaa
inc
lahf
cmp
push
mov
nop
leave
jmp
add
add
add
imul
repnz
nop
cld
jae
insl
add
jl
rorl
mov
adc
repnz
nop
cld
jae
add
add
add
mov
mov
ss
repnz
nop
cld
jae
add
push
lldt
xchg
cmpsb
out
insl
push
clc
repnz
nop
cld
jae
add
push
add
push
pop
mov
clc
repnz
nop
cld
jae
cld
add
xor
in
add
rcr
inc
add
add
xor
add
test
add
clc
repnz
nop
cld
jae
dec
pop
cmp
add
push
mov
nop
leave
jmp
push
add
out
insb
xchg
jp
push
mov
nop
leave
jmp
add
mov
sub
jle
ja
mov
mov
nop
leave
jmp
or
loopne
stos
add
add
clc
repnz
nop
cld
jae
jle,pn
xor
mov
clc
repnz
nop
cld
jae
imul
mov
push
mov
nop
leave
jmp
jle
add
loope
add
mov
mov
insl
and
clc
repnz
nop
cld
jae
roll
jle
cld
add
jg
clc
repnz
nop
cld
jae
shl
idiv
add
jne
push
mov
xchg
ret
add
add
jno
out
mov
dec
push
mov
nop
leave
jmp
xchg
flds
add
add
imul
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
lock
cmp
clc
repnz
nop
cld
jae
add
add
cld
dec
add
mov
add
nop
nop
cld
jae
out
testl
sahf
push
push
mov
nop
leave
jmp
add
jmp
cmp
push
or
popa
clc
repnz
nop
cld
jae
inc
xor
rclb
xor
repnz
nop
cld
jae
mov
stos
add
add
push
clc
repnz
nop
cld
jae
jno
jl
aas
add
clc
repnz
nop
cld
jae
add
add
add
xchg
daa
pop
inc
push
mov
xchg
ret
mov
testl
add
add
repnz
nop
cld
jae
add
mov
or
popa
add
mov
nop
leave
jmp
and
pop
shl
inc
mov
repnz
nop
cld
jae
push
add
jle
add
inc
clc
repnz
nop
cld
jae
imul
add
add
and
incb
jo
push
mov
nop
leave
jmp
jmp
add
add
jno
out
mov
clc
repnz
nop
cld
jae
sub
adc
out
add
in
add
sub
add
mov
xor
inc
add
add
pop
je
clc
repnz
nop
cld
jae
add
add
gs
mov
mov
nop
cld
jae
add
mov
insl
cmp
repnz
nop
cld
jae
jle
rolb
xchg
add
out
dec
jb
push
mov
nop
leave
jmp
add
mov
push
clc
repnz
nop
cld
jae
add
or
cmp
cli
lea
clc
repnz
nop
cld
jae
add
add
fidivrs
push
sub
jmp
nop
leave
jmp
add
int3
add
cld
imul
add
repnz
nop
cld
jae
pop
add
xchg
insb
stos
out
mov
clc
repnz
nop
cld
jae
lock
sarb
add
add
in
nop
leave
jmp
imul
add
push
and
jmp
add
jmp
add
add
add
jnp
add
sti
push
mov
nop
leave
jmp
stos
stos
add
xchg
add
push
sbb
mov
nop
leave
jmp
cmp
add
stos
shl
clc
repnz
nop
cld
jae
add
cmp
add
mov
clc
repnz
nop
cld
jae
jnp
add
or
pushf
push
push
mov
xchg
ret
add
xor
jle
add
push
mov
nop
leave
jmp
add
jno
lahf
stos
push
mov
xchg
ret
add
add
add
push
xchg
pop
jne
push
mov
nop
leave
jmp
add
add
inc
sbb
sti
clc
repnz
nop
cld
jae
cmp
jl
insl
add
clc
repnz
nop
cld
jae
jl
sub
xor
pop
jne
clc
repnz
nop
cld
jae
add
or
icebp
push
mov
nop
leave
jmp
jo
or
add
pop
mov
clc
repnz
nop
cld
jae
jno
add
testl
repnz
nop
cld
jae
int3
add
add
add
sub
push
mov
xchg
ret
add
add
or
mov
push
mov
clc
repnz
nop
cld
jae
mov
dec
xchg
bound
mov
nop
cld
jae
idivl
fiadds
mov
mov
jge
inc
add
loopne
xor
inc
xchg
mov
mov
xchg
ret
add
add
js
rolb
repnz
nop
cld
jae
jno
add
add
testl
clc
repnz
nop
cld
jae
xor
add
mov
mov
push
mov
nop
leave
jmp
jmp
xchg
stos
rcr
jmp
push
add
jno
add
inc
cmp
inc
jo
div
idivb
repnz
nop
cld
jae
add
xor
add
clc
repnz
nop
cld
jae
idivl
add
icebp
mov
jle
clc
repnz
nop
cld
jae
inc
jle
add
jmp
adc
add
add
push
mov
nop
leave
jmp
jnp
add
xchg
stos
push
push
mov
xchg
ret
add
jle
xchg
add
int
clc
repnz
nop
cld
jae
push
js
ret
jnp
add
clc
repnz
nop
cld
jae
inc
add
add
lds
dec
mov
clc
repnz
nop
cld
jae
lock
mov
add
inc
add
int3
add
cmp
add
adc
imul
mov
clc
repnz
nop
cld
jae
add
add
mov
nop
clc
repnz
nop
cld
jae
dec
xchg
add
xor
add
mov
nop
leave
jmp
rolb
add
add
xlat
std
mov
clc
repnz
nop
cld
jae
dec
flds
aaa
jge
sti
clc
repnz
nop
cld
jae
add
out
add
mov
idiv
clc
repnz
nop
cld
jae
add
pop
push
clc
repnz
nop
cld
jae
rorb
or
add
testb
inc
sbb
nop
nop
cld
jae
imull
push
jl
lods
popa
clc
repnz
nop
cld
jae
out
cld
add
add
push
sub
test
repnz
clc
repnz
nop
cld
jae
xor
cmp
test
clc
repnz
nop
cld
jae
out
stos
lods
mov
clc
repnz
nop
cld
jae
xor
jge
add
mov
repnz
nop
cld
jae
out
dec
cmp
or
imul
nop
cld
jae
add
add
pop
push
mov
xchg
ret
jmp
add
add
mov
add
clc
repnz
nop
cld
jae
int3
cmp
add
je
push
mov
clc
repnz
nop
cld
jae
xchg
rcll
repnz
nop
cld
jae
jle
mov
mov
jne
mov
push
mov
xchg
ret
add
add
inc
sbb
inc
fadds
xchg
ret
add
ret
add
outsb
imul
clc
repnz
nop
cld
jae
imul
add
loopne
mov
fisttpll
std
inc
add
add
add
mov
push
mov
xchg
ret
add
cmp
push
push
mov
xchg
ret
add
adc
inc
inc
inc
or
ret
push
lret
or
in
nop
leave
jmp
add
add
add
mov
add
mov
xchg
ret
jnp
or
add
stos
je
clc
repnz
nop
cld
jae
insb
idiv
push
add
inc
and
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
or
testl
cmc
sub
jle
push
mov
xchg
ret
rolb
add
push
jne
xchg
in
push
clc
repnz
nop
cld
jae
mov
pop
mov
or
add
in
nop
leave
jmp
inc
push
or
add
and
mov
mov
clc
repnz
nop
cld
jae
push
add
fsin
jns
aaa
jmp
cmp
insb
xor
add
or
add
sub
in
nop
leave
jmp
add
jo
loop
mov
and
clc
repnz
nop
cld
jae
jl
insb
cmp
clc
repnz
nop
cld
jae
insl
jle
add
add
imul
push
mov
xchg
ret
push
cmp
jle
insl
js
xor
nop
cld
jae
cmp
add
idivl
xchg
imul
repnz
nop
cld
jae
add
shl
shrl
xor
xor
push
mov
nop
leave
jmp
add
jmp
test
sar
nop
nop
cld
jae
add
loopne
add
dec
pop
clc
repnz
nop
cld
jae
cmp
shrl
mov
nop
cld
jae
out
ret
int3
add
pop
and
clc
repnz
nop
cld
jae
stos
add
adc
jns
add
flds
xchg
ret
mov
cld
mov
xor
add
push
mov
nop
leave
jmp
jno
add
in
nop
leave
jmp
jnp
jo
or
add
adc
mov
push
clc
repnz
nop
cld
jae
mov
add
pop
add
and
inc
and
clc
repnz
nop
cld
jae
lock
sbb
clc
repnz
nop
cld
jae
add
jl
add
int3
add
push
mov
xchg
ret
add
add
add
inc
pop
add
push
mov
nop
leave
jmp
out
xchg
add
lock
push
inc
and
clc
repnz
nop
cld
jae
sub
adc
mov
dec
push
mov
nop
leave
jmp
imul
mov
ret
repnz
incl
add
incb
jno
add
add
in
call
clc
repnz
nop
cld
jae
xchg
and
add
push
mov
nop
leave
jmp
dec
imull
add
add
sti
push
clc
repnz
nop
cld
jae
add
imul
mov
clc
repnz
nop
cld
jae
add
adc
add
mov
nop
leave
jmp
cmp
jno
add
add
int3
dec
mov
clc
repnz
nop
cld
jae
mov
add
leave
push
mov
nop
leave
jmp
lock
jge
add
push
cmpl
jae
add
insl
push
repnz
nop
nop
cld
jae
add
add
add
sub
add
out
ljmp
add
add
insl
add
adc
shrl
nop
nop
cld
jae
add
jle
loopne
add
cmp
inc
add
add
int3
add
clc
repnz
nop
cld
jae
add
add
sub
jmp
and
pop
push
mov
nop
leave
jmp
cmp
sldt
add
add
inc
add
nop
nop
cld
jae
add
add
lock
or
push
mov
nop
leave
jmp
cmp
add
add
rcr
incl
js
jle
xor
add
add
inc
jnp
add
clc
repnz
nop
cld
jae
add
out
add
add
and
inc
mov
add
in
nop
leave
jmp
add
add
inc
jge
dec
cmp
mov
nop
leave
jmp
cmp
fwait
mov
clc
repnz
nop
cld
jae
adc
add
add
add
add
repnz
nop
cld
jae
add
out
rorl
add
repnz
nop
cld
jae
js
mov
fnstenv
in
jmp
out
add
add
add
jno
jle
ret
push
mov
out
pop
add
dec
add
mov
add
fwait
jp
add
clc
repnz
nop
cld
jae
sarb
cmpl
push
mov
nop
leave
jmp
add
add
rorl
roll
xchg
ret
fiadds
xchg
cmp
or
xchg
sub
add
add
enter
lret
push
mov
nop
leave
jmp
add
add
loopne
add
mov
push
mov
xchg
ret
jge
xor
mov
mov
nop
leave
jmp
lock
mov
add
nop
nop
cld
jae
xor
add
push
dec
cmp
mov
xchg
ret
add
out
imul
inc
add
clc
repnz
nop
cld
jae
cld
sub
rorb
add
push
clc
repnz
nop
cld
jae
imul
or
pop
mov
push
mov
nop
leave
jmp
jge
add
shl
mov
add
push
mov
nop
leave
jmp
add
cmp
add
sub
test
repnz
nop
cld
jae
mov
sti
push
mov
nop
leave
jmp
incb
out
add
jl
jno
add
jmp
sub
add
repnz
nop
cld
jae
loopne
add
jle
testb
in
nop
leave
jmp
out
add
add
add
mov
push
mov
xchg
ret
imul
add
cmp
mov
xchg
ret
xchg
add
add
add
add
or
nop
leave
jmp
add
sub
add
nop
nop
cld
jae
neg
cmp
jo
add
mov
xor
clc
repnz
nop
cld
jae
push
cld
js
xor
push
mov
nop
leave
jmp
jnp
add
imul
jl
mov
nop
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
or
rcrb
cmp
jno
call
clc
repnz
nop
cld
jae
xor
add
push
mov
xchg
ret
rolb
sub
jg
push
mov
nop
leave
jmp
loopne
adc
int3
xor
clc
repnz
nop
cld
jae
jmp
jnp
loopne
push
int3
je
clc
repnz
nop
cld
jae
dec
add
pop
mov
clc
repnz
nop
cld
jae
xor
fsubp
xchg
xchg
cltd
add
push
mov
nop
leave
jmp
jo
loopne
jno
rolb
mov
add
mov
je
clc
repnz
nop
cld
jae
roll
mov
add
clc
repnz
nop
cld
jae
add
int3
add
aas
clc
repnz
nop
cld
jae
dec
cmp
inc
jg
push
mov
nop
leave
jmp
add
add
add
int
mov
add
mov
insl
add
cmpsb
fiadds
sbb
inc
fimull
nop
nop
cld
jae
stos
add
or
add
movsb
clc
repnz
nop
cld
jae
cmp
add
stos
add
nop
nop
cld
jae
mov
mov
pop
cmc
inc
add
xchg
add
out
add
nop
add
add
repnz
nop
cld
jae
mov
test
repnz
nop
cld
jae
imul
push
mov
nop
leave
jmp
int3
js
cmp
add
push
clc
repnz
nop
cld
jae
add
add
add
mov
jbe
clc
repnz
nop
cld
jae
xchg
push
add
jmp
nop
cld
jae
cmp
push
loopne
jb
mov
mull
repnz
nop
cld
jae
add
fld
movsb
or
mov
xchg
ret
jo
jo
add
add
add
clc
repnz
nop
cld
jae
add
add
add
push
jmp
add
jle
add
add
rolb
add
clc
repnz
nop
cld
jae
jle
add
loopne
push
mov
add
add
in
nop
leave
jmp
jno
rorl
popa
add
mov
nop
leave
jmp
out
add
jl
rolb
aam
and
push
mov
xchg
ret
incb
jge
add
sar
mov
clc
repnz
nop
cld
jae
cmp
jmp
add
dec
bound
mov
add
clc
repnz
nop
cld
jae
xor
push
pop
xor
push
mov
nop
leave
jmp
add
add
add
jno
test
nop
nop
cld
jae
or
add
loopne
xor
in
nop
leave
jmp
add
xchg
add
ret
mov
scas
imul
add
mov
xchg
arpl
mov
pop
and
push
mov
xchg
ret
add
add
imul
mov
clc
repnz
nop
cld
jae
jl
idivl
mov
cs
clc
repnz
nop
cld
jae
pop
xor
add
add
push
ret
clc
repnz
nop
cld
jae
add
add
sub
popa
add
mov
xchg
ret
js
roll
push
add
cmp
push
mov
xchg
ret
dec
jge
or
jnp
mov
repnz
nop
cld
jae
add
sub
add
je
push
cld
push
mov
xchg
ret
ltr
js
add
frndint
mov
repnz
nop
cld
jae
cmp
insb
add
add
clc
repnz
nop
cld
jae
stos
add
jno
add
add
clc
repnz
nop
cld
jae
xor
insl
dec
ja
push
mov
nop
leave
jmp
out
insb
add
pop
or
repnz
nop
cld
jae
add
jo
add
push
add
repnz
nop
cld
jae
fsts
loopne
jne
add
clc
repnz
nop
cld
jae
cmp
jno
add
add
clc
repnz
nop
cld
jae
jno
cmp
add
dec
psrlw
cmp
jne
push
mov
xchg
ret
add
cmp
adc
add
dec
inc
clc
repnz
nop
cld
jae
cmp
xchg
rorl
nop
nop
cld
jae
cmp
add
jno
jnp
mov
add
add
repnz
nop
cld
jae
insb
rclb
add
clc
repnz
nop
cld
jae
or
add
pop
clc
repnz
nop
cld
jae
add
xchg
xor
add
roll
je
push
mov
nop
leave
jmp
flds
add
add
clc
repnz
nop
cld
jae
add
add
pop
add
subl
clc
repnz
nop
cld
jae
stos
add
lock
cwtl
add
jmp
incl
dec
add
jnp
add
incb
add
dec
jb
mov
add
mov
xchg
ret
add
cmp
add
add
add
push
clc
repnz
nop
cld
jae
push
xchg
add
inc
sub
repnz
nop
cld
jae
pop
insb
add
pshufw
mov
nop
nop
cld
jae
add
add
or
dec
add
repnz
nop
cld
jae
cmp
xchg
or
inc
and
mov
nop
leave
jmp
add
add
cmp
adc
repnz
nop
cld
jae
cld
cmp
add
add
je,pt
clc
repnz
nop
cld
jae
add
stos
cmpl
push
mov
nop
leave
jmp
add
add
add
xor
inc
push
mov
nop
leave
jmp
mov
add
testl
lret
clc
repnz
nop
cld
jae
add
stos
ret
add
pop
lea
push
mov
xchg
ret
pop
adc
add
add
push
add
push
mov
xchg
ret
add
sub
add
adc
movsl
loop
call
in
nop
leave
jmp
add
into
les
clc
repnz
nop
cld
jae
add
jmp
and
and
push
clc
repnz
nop
cld
jae
add
add
add
jge
inc
add
je
inc
add
xchg
add
add
add
in
pop
push
mov
nop
leave
jmp
add
add
sldt
lcall
nop
leave
jmp
mov
sldt
mov
or
clc
repnz
nop
cld
jae
jno
fmuls
mov
nop
leave
jmp
cmp
add
add
add
pop
mov
clc
repnz
nop
cld
jae
add
mov
mov
sbb
or
in
nop
leave
jmp
add
add
add
mov
add
clc
repnz
nop
cld
jae
roll
add
mov
push
add
popa
inc
ja
cmp
add
push
lahf
inc
add
add
add
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
insl
loopne
mov
rcrl
push
push
mov
nop
leave
jmp
cmp
jge
add
add
rep
push
mov
xchg
ret
cmp
inc
add
loopne
add
mov
push
mov
nop
leave
jmp
mov
jg
clc
repnz
nop
cld
jae
mov
add
out
mov
clc
repnz
nop
cld
jae
shl
add
or
mov
xchg
ret
xchg
add
stos
cmp
loopne
das
add
push
mov
nop
leave
jmp
add
sub
ret
xor
add
cltd
add
sahf
dec
rolb
out
pusha
adc
jp
imul
inc
dec
loopne
add
ja
pop
add
add
inc
jmp
clc
repnz
nop
cld
jae
fsubrp
add
stos
inc
mov
and
push
mov
nop
leave
jmp
cmp
testl
ror
clc
repnz
nop
cld
jae
add
dec
sarb
repnz
nop
cld
jae
cmp
cmp
ss
push
mov
xchg
ret
ror
or
xor
add
inc
scas
push
push
mov
xchg
ret
add
add
jmp
add
add
adc
repnz
nop
cld
jae
add
jno
mov
inc
imul
cld
incl
loopne
js
add
add
add
add
inc
jb
push
mov
nop
leave
jmp
insb
out
out
popf
pop
push
mov
nop
leave
jmp
cmp
rolb
add
cmp
clc
repnz
nop
cld
jae
sub
add
add
add
mov
xchg
ret
dec
jo
cmovs
or
inc
inc
fildll
jae
dec
add
add
jl
pop
not
popf
sub
clc
repnz
nop
cld
jae
add
cs
mov
mov
nop
leave
jmp
add
fimuls
add
cwtl
push
push
mov
xchg
ret
jno
imul
stos
call
clc
repnz
nop
cld
jae
add
xor
jp
clc
repnz
nop
cld
jae
add
cmp
add
cmp
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
jnp
sub
repnz
nop
cld
jae
xor
insl
js
enter
add
leave
jmp
cmp
add
mov
sub
push
mov
nop
leave
jmp
add
add
xor
pop
sub
push
mov
xchg
ret
add
xchg
add
cld
or
push
push
mov
xchg
ret
lock
add
add
add
add
clc
repnz
nop
cld
jae
add
in
lods
push
clc
repnz
nop
cld
jae
add
add
add
imul
nop
nop
cld
jae
stos
add
rolb
add
in
xchg
clc
repnz
nop
cld
jae
jmp
sub
add
nop
cld
jae
sub
mov
add
popa
add
repnz
nop
cld
jae
loopne
add
mov
push
mov
xchg
ret
add
dec
out
add
sub
add
cs
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
shlb
imulb
add
repnz
nop
cld
jae
int3
push
or
cmp
cmp
lea
push
mov
xchg
ret
mov
int3
mov
mov
clc
repnz
nop
cld
jae
add
testl
or
cmp
int3
cmp
cmp
push
cmp
int3
lea
clc
repnz
nop
cld
jae
shlb
insb
stos
xchg
lock
dec
push
mov
xchg
ret
add
cmp
mov
add
add
bnd
add
clc
repnz
nop
cld
jae
xchg
rolb
pop
mov
clc
repnz
nop
cld
jae
add
imul
mov
in
test
add
ret
test
sbb
add
jnp
jmp
cld
jae
mov
jnp
add
daa
adc
xor
mov
nop
cld
jae
add
mov
adc
dec
xor
push
mov
nop
leave
jmp
inc
xchg
add
add
and
loop
push
mov
nop
leave
jmp
cmp
add
cmp
clc
repnz
nop
cld
jae
out
push
add
add
mov
push
mov
nop
leave
jmp
testl
dec
sbb
add
repnz
nop
cld
jae
add
loopne
lret
clc
repnz
nop
cld
jae
jmp
cmp
add
imul
nop
cld
jae
mov
add
cld
cmp
add
add
repnz
nop
cld
jae
or
jp
add
add
clc
repnz
nop
cld
jae
cmp
jb
mov
stos
clc
repnz
nop
cld
jae
add
mov
jle
clts
ss
loop
mov
nop
leave
jmp
mov
add
mov
add
add
add
add
mov
sti
add
add
rclb
nop
leave
jmp
rolb
loopne
add
cld
xchg
pop
pop
clc
repnz
nop
cld
jae
insl
push
ret
add
jmp
add
add
repnz
nop
cld
jae
add
push
ret
push
mov
xchg
ret
loopne
inc
cmp
add
and
pop
push
mov
nop
leave
jmp
add
enter
in
nop
leave
jmp
add
add
add
add
dec
mov
push
mov
nop
leave
jmp
add
add
stos
push
push
mov
nop
leave
jmp
out
add
add
out
pop
clc
repnz
nop
cld
jae
int3
add
dec
add
add
add
add
ds
add
add
call
sub
push
mov
jae
sub
lods
or
scas
aad
jecxz
xchg
add
add
add
ljmp
cmp
movsb
mov
mov
mov
out
fnstenv
loope
repnz
fldl
xlat
mov
mov
mov
xchg
cmc
mov
add
mov
xor
dec
iret
lods
iret
cmp
xchg
add
adc
mov
sbb
mov
stos
mov
mov
xor
loop
mov
push
inc
mov
js
push
adc
mov
mov
and
jmp
and
mov
call
cmc
fcmovnu
add
push
add
sbb
sbb
xchg
and
mov
sub
add
mov
out
addb
movsb
jl
sbb
mov
add
movsl
adc
cmp
mov
dec
les
dec
jecxz
add
nop
add
fnstsw
jp,pn
out
mov
lods
std
or
mov
mov
jmp
xchg
jae
mov
add
mov
or
adc
mov
xor
ss
mov
and
dec
les
ret
lds
add
mov
adc
adc
mov
mov
movsl
cli
sub
push
add
outsl
jno
xor
mov
clc
sbb
pop
add
mov
jbe
jno
sbb
add
mov
add
add
push
adc
mov
push
pop
mov
add
lret
and
add
pop
jmp
cwtl
mov
stc
jbe
stc
rorl
popf
data16
inc
add
jl
dec
test
add
xor
mov
add
shll
out
add
mov
cmpsl
pop
call
sbb
inc
addb
add
push
popf
mov
inc
mov
gs
push
adc
mov
push
add
add
inc
add
pushf
push
add
std
clc
adc
cmp
push
add
and
mov
mov
lds
loopne
mov
test
test
in
fstp
mov
rolb
mov
mov
cmpsb
scas
dec
cltd
xor
mov
mov
test
fisubl
nop
add
stc
mov
pop
scas
mov
loopne
mov
inc
xchg
lahf
out
cmp
mov
mov
mov
insb
mov
inc
xor
mov
mov
fisttps
mov
cmpsb
sahf
lods
outsb
push
aas
imul
out
push
lods
or
andl
mov
xor
mov
or
mov
mov
xchg
les
lcall
out
sub
or
dec
in
pop
push
cwtl
stos
in
mov
ds
hlt
xchg
mov
aaa
pop
push
and
sub
add
jge
sub
out
jo,pn
mov
cmp
push
rolb
mov
sbb
inc
sbb
sahf
pop
add
or
jecxz
mov
add
int3
pop
dec
mov
and
mov
cld
xor
stc
mov
sub
call
or
mov
lret
sub
pop
repz
add
sbb
add
outsl
pop
adc
add
mov
sbb
mov
mov
data16
and
mov
fadd
add
mov
pop
out
or
mov
ja
add
ja
je
ss
ret
and
test
push
dec
jne
sbb
xlat
xor
push
outsl
inc
mov
push
add
mov
add
jae
loope
add
add
cmpsl
pop
cmp
dec
lds
shl
enter
mov
add
cli
add
mov
and
xchg
add
or
sbb
sbb
inc
add
outsl
clc
push
add
xchg
inc
add
add
xchg
repz
and
test
loop
mov
add
std
jae
dec
leave
outsl
mov
add
popf
xchg
pop
adc
xlat
jno
mov
roll
add
add
pop
loopne,pt
mov
lods
js
and
repnz
cmp
ja
mov
add
dec
or
loopne
mov
or
add
rolb
ror
sbb
inc
loop
mov
sbb
cmpl
push
pop
add
les
repz
popf
mov
push
enter
xor
mov
add
push
add
fs
cmp
adc
stc
adc
mov
test
lock
or
dec
push
add
test
sub
or
adc
mov
mov
dec
dec
cmpsl
aad
xor
fnsave
mov
mov
lock
rcrl
inc
or
pushf
cmc
loopne
mov
aaa
or
hlt
jmp
pop
dec
decb
add
divb
cld
push
xchg
lret
jnp
xor
mov
adc
mov
add
cmp
mov
add
lcall
data16
imul
jno
mov
dec
mov
pop
push
pushf
repnz
es
loope
addb
add
add
add
add
femms
push
add
mov
mov
mov
and
cmpsl
repnz
mov
into
sub
push
jbe
ljmp
mov
sti
das
jge
and
fisubs
jge
xchg
ret
push
call
push
fs
add
mov
adc
mov
lods
add
mov
add
fisubrl
adc
mov
push
xchg
jbe
jo
mov
and
or
sub
dec
pop
loop
mov
jb
mov
ficoms
and
mov
movd
jo
mov
popa
jne
fnstcw
xchg
and
addb
aad
push
ja
push
add
add
fcompl
jp
add
inc
add
repnz
repz
add
cs
repz
mov
jl
adc
add
add
test
insl
mov
mov
sbb
and
add
mov
lcall
lcall
mov
and
add
mov
or
xlat
rolb
mov
ffreep
add
in
or
mov
jl
cmp
aas
mov
or
push
lret
pusha
add
fists
add
mov
or
push
cmp
in
sbb
hlt
sub
pop
pop
mov
fidivrl
mov
mov
lahf
fs
add
mov
push
add
pop
fnstenv
mov
popa
mov
fwait
and
mov
cmpsl
shll
int
daa
or
jecxz
test
or
add
jmp
shrl
mov
dec
loope
xchg
cmp
cwtl
dec
xlat
adc
lods
ficoml
push
mov
add
xlat
sbb
jnp
jne
mov
xchg
xchg
add
test
adc
mov
dec
jne
fdivrp
push
add
into
rcr
adc
mov
pop
out
add
dec
movsl
dec
mov
adc
mov
aad
add
sub
add
mov
or
cmp
and
dec
pop
dec
rolb
mov
add
mov
fstpt
mov
jecxz
adc
mov
addb
dec
out
sub
xchg
mov
sbb
add
xor
bound
mov
fwait
jnp
xchg
add
fsts
add
mov
xor
mov
std
mov
xchg
addb
fcmovbe
subl
popa
out
lods
jecxz
xor
mov
add
adc
mov
mov
je
stos
push
mov
sbb
add
cmp
daa
loop
mov
add
dec
sbb
in
les
add
pop
inc
add
mov
and
mov
loope
add
sub
movsb
aas
pextrw
je
mov
test
sbbl
and
mov
or
mov
add
cmp
sbb
scas
fcomip
add
mov
leave
in
shl
mov
jae
leave
js
imul
add
add
mov
mov
mov
roll
xor
out
lods
cmpsb
aam
add
and
roll
add
jp
adc
xor
pop
sbb
mov
mull
add
mov
je
mov
inc
jmp
add
and
mov
sub
stc
test
int
nop
add
ja
pop
xor
jnp
addr16
adc
mov
add
loopne
mov
or
sub
dec
stc
mov
add
add
push
add
cmc
inc
mov
negb
mov
mov
pop
out
inc
add
sbb
mov
ret
xchg
adc
xchg
add
sub
ljmp
in
imul
mov
daa
clc
fmull
jge
mov
mov
es
imul
xchg
pop
sub
mov
sti
test
and
cmp
rolb
mov
push
cld
int
add
in
cmp
cmp
jne
add
por
cmp
std
es
cmp
xchg
add
adc
mov
imul
xor
mov
pop
cmp
dec
out
mov
add
add
imul
mov
mov
mov
mov
mov
fsts
ficoms
bound
mov
lret
mov
addr16
add
int
pop
fiadds
mov
and
test
add
add
and
out
push
out
iret
orl
mov
sbb
cwtl
stos
adcl
out
scas
push
add
lea
mov
push
addb
call
ja
scas
adc
cmp
jns
stos
push
or
rcrl
add
jns
push
adcl
sub
mov
or
outsb
nop
add
mov
add
add
mov
les
add
jbe
add
xor
mov
add
aaa
adc
mov
mov
or
sub
popf
ret
loope
mov
xorl
sbb
repnz
les
mov
xor
into
xchg
sbb
stc
fwait
xchg
mov
lods
loop
mov
add
lret
stos
or
addb
cltd
xor
sub
xor
xchg
cmp
sub
cmp
int3
rcll
jmp
mov
outsb
fisttpll
cs
pop
dec
sub
mov
push
mov
and
addb
xchg
dec
and
insb
and
mov
sub
inc
add
cmpsl
loop
mov
neg
fmull
add
cmp
adc
add
mov
and
repz
mov
add
mov
adc
add
add
fcmovne
inc
xchg
dec
hlt
push
pusha
add
dec
ss
dec
sub
xchg
out
outsl
adc
pop
mov
mov
push
xor
mov
xchg
add
mov
xor
insl
xor
add
xchg
add
int
sbb
addb
shll
fs
cld
pop
jl
sbb
mov
push
push
test
add
and
mov
scas
adc
add
add
pop
out
aad
jnp
add
jb
mov
mov
xchg
mov
sti
cmp
pusha
add
ds
jg
mov
mov
bound
mov
or
pop
fbstp
and
adc
mov
mov
mov
fwait
insl
dec
in
cmp
pop
push
bound
mov
xor
add
mov
sbb
dec
jb
mov
xchg
add
rolb
mov
cltd
mov
addr16
add
outsb
pop
js
aam
mov
in
add
test
nop
add
aam
pop
cmc
insb
cld
in
movsl
hlt
mov
in
xor
mov
mov
sbb
jo
mov
cwtl
dec
imul
jmp
sub
mov
add
add
stos
xchg
repz
enter
jp
adc
scas
sbb
jae
nop
add
push
aas
xor
rsm
cmpsl
xor
mov
stos
push
in
xor
mov
aad
add
sub
mov
xor
cwtl
jl
mov
add
jg
bound
mov
inc
jmp
lret
ljmp
inc
add
sub
add
add
adcl
and
mov
ss
dec
mov
mov
and
mov
sub
or
test
mov
inc
test
mov
insl
pop
mov
pop
roll
and
sbb
rolb
mov
sbb
cs
adc
icebp
mov
out
and
insb
push
push
add
andl
push
adc
ja
inc
les
sub
stos
andl
add
add
xor
es
enter
shrl
fsub
add
add
icebp
divb
or
add
mov
mov
mov
mov
add
cmp
repnz
add
movsl
adc
mov
fwait
aaa
xchg
pop
pushfw
push
add
in
test
add
dec
into
or
repnz
add
add
addr16
cs
push
add
mov
mov
push
adc
fwait
mov
inc
stos
insb
js
ds
add
jno
adc
mov
mov
sub
mov
mov
push
sti
sbb
add
jle
mov
insl
sahf
mov
add
jbe
adc
mov
out
pop
mov
or
cmp
gs
mov
push
or
pop
inc
ja
pop
js
or
loope
aam
ret
dec
stc
jp
popa
lahf
dec
or
jne
bound
mov
addb
imul
rolb
mov
daa
scas
addb
or
mov
lahf
lods
pop
push
xor
jmp
xor
jbe
jg
jge
mov
cmp
scas
jb
mov
xchg
lea
add
xor
add
imul
mov
push
sub
dec
mov
sbb
mov
pop
inc
addb
xor
mov
push
sub
jae
adc
xor
mov
mov
add
mov
xchg
add
xlat
imull
sub
lret
pop
adc
push
adc
sbb
sbb
add
loop
mov
add
and
mov
mov
fldenv
mov
rcrl
add
mov
push
daa
push
int3
pop
clc
and
jno
xchg
add
lret
jno
and
mov
jge
decb
pusha
add
stc
push
mov
cmp
and
mov
daa
sub
sbb
into
add
sub
push
hlt
sub
ja
int3
mov
mov
rcrl
add
add
aam
jmp
cld
test
in
pusha
add
sahf
enter
and
mov
addb
sahf
xor
adc
mov
mov
mov
sub
and
mov
mov
pop
jb
mov
pinsrw
add
add
mov
sbb
pop
int3
fwait
cli
sub
mov
or
mov
adc
mov
push
add
xor
mov
pop
sub
fs
and
int3
xor
mov
add
mov
stc
js
insb
stos
lcall
mov
sbb
fbstp
clc
or
clc
out
mov
in
in
movsb
lock
mov
leave
cmp
hlt
mov
repz
inc
jecxz
pusha
add
add
mov
mov
add
test
fsubrl
mov
ja
rolb
mov
add
mov
iret
ret
lds
mov
leave
sub
inc
fwait
cmpsb
sub
mov
jecxz
mov
sub
add
jb
mov
add
popf
and
dec
rolb
mov
mov
loope
adc
mov
loope
rolb
mov
out
aaa
inc
add
inc
add
add
idivl
mov
add
negb
movsb
pop
sub
sub
adc
mov
mov
fsubrl
or
xor
mov
cmpsl
or
jo
mov
dec
enter
add
mov
out
addb
scas
arpl
mov
mov
cltd
enter
mov
std
push
add
xor
mov
xor
mov
jle
add
inc
dec
enter
mov
or
jle
pop
test
pop
jl
leave
dec
pop
bound
mov
scas
jp
adc
inc
inc
das
imul
fdivrl
outsl
pop
mov
adc
mov
mov
rolb
mov
or
scas
cmp
mov
xchg
mov
xchg
out
jne
imul
jo
mov
in
imul
test
dec
add
mov
daa
push
arpl
lods
mov
sub
add
pusha
add
mov
add
push
push
mov
nop
add
xchg
jo
mov
lods
aad
pop
sti
sub
dec
pop
push
add
pop
inc
cmpsb
inc
and
mov
mov
mov
call
loopne
mov
rcrl
aas
movsl
dec
out
pop
iret
or
mov
mov
pop
ret
mov
int
add
add
mov
lods
or
push
scas
mov
mull
xchg
adc
jmp
iret
add
fsts
pop
nop
add
mov
push
push
daa
xchg
jmp
xchg
fnsave
xor
cmp
mov
js
pop
js
int3
bound
mov
sbb
sbb
fwait
mov
add
mov
mov
pop
lds
or
mov
add
in
push
outsl
sbb
add
imul
dec
mov
push
pop
sbb
std
outsb
mov
mov
pop
movsl
push
add
add
pop
sbb
adc
add
cs
xor
mov
mov
in
lret
cmp
fbld
movsl
aam
into
rolb
sbb
lret
int3
ret
js
popa
mov
add
imul
pop
push
adc
out
or
cmpsl
insl
repz
mov
jae
sub
enter
add
xorl
mov
test
add
das
data16
aam
addb
jle
inc
add
enter
mov
push
int3
push
jo
mov
cmp
jmp
add
xchg
sti
test
adc
mov
or
mov
mov
sub
add
add
in
push
or
push
ja
movsb
sti
clc
xchg
add
pop
xchg
add
xor
mov
add
jns
add
inc
mov
les
add
sub
add
ljmp
mov
loopne
mov
aam
jp
in
aam
shll
imul
add
in
mov
add
pop
rorl
add
or
add
bound
mov
xchg
rolb
mov
test
adc
or
lods
loop
mov
aad
dec
sub
shrl
aad
in
lret
lods
lds
add
adc
mov
out
mul
push
adc
arpl
inc
xor
mov
mov
out
pop
movb
push
pushl
jo
mov
repnz
mov
into
adc
mov
mov
xchg
jns
pop
mov
test
add
xchg
add
mov
add
add
mov
repz
mov
sub
lds
repnz
inc
pop
dec
out
outsl
std
adc
xchg
mov
into
cmp
std
jb
mov
add
ret
sti
inc
ffreep
add
add
add
mov
add
addb
comiss
imul
addb
and
cs
and
das
pop
addb
stc
or
inc
push
add
add
mov
add
mov
or
jle
stc
jo
mov
inc
leave
push
pop
inc
mov
add
cmc
mov
push
icebp
lods
ja
icebp
add
mov
xchg
cmp
inc
mov
push
int
add
mov
mov
mov
dec
addb
pop
lock
pcmpgtw
mov
mov
add
mov
add
mov
daa
ss
sbb
push
stos
sahf
test
dec
mov
adc
mov
mov
fmuls
icebp
lea
push
jo
mov
mov
fdivs
mov
sbb
add
loope
add
xchg
add
fisubrs
cltd
mov
fwait
rorl
lods
mov
mov
mov
cmp
ljmp
data16
mov
sub
dec
addb
mov
rcll
pop
fwait
dec
mov
mov
xor
mov
xor
mov
add
or
cld
std
pop
stos
pop
insl
xchg
add
paddusb
add
push
mov
mov
stc
int
fcomps
mov
push
ljmp
push
xor
xchg
or
adc
mov
sub
pop
hlt
or
mov
pusha
add
enter
pusha
add
add
imul
jne
lret
push
repnz
add
ret
inc
add
pop
cld
add
testb
mov
pop
cmp
mov
imul
out
rcpps
push
aaa
xor
mov
dec
lds
rolb
mov
xor
dec
ret
xchg
lock
in
cs
stc
test
push
pop
mov
scas
xor
loope
fwait
mov
mov
fs
mov
test
and
mov
inc
cwtl
push
sti
in
add
cmpsl
ss
bound
mov
fildl
pop
mov
out
cmp
fsubrl
in
lods
jge
or
add
fsubr
or
cmp
scas
loopne
mov
adc
mov
jns
aas
movsb
mov
add
hlt
leave
outsl
cld
cmc
es
mov
mov
aam
shll
pushf
inc
add
mov
add
stos
jns
add
mov
add
lods
push
jnp
stos
jecxz
mov
lods
ljmp
pop
inc
lahf
es
mov
cltd
cmp
das
rcrl
jbe
add
cmp
or
mov
lcall
add
push
fcomps
mov
inc
fsubrl
mov
mov
popf
decl
mov
dec
imul
push
rolb
rcrl
jge
negl
cltd
adc
ljmp
sub
shrl
add
pop
sbb
ljmp
popf
fdivs
mov
add
sbb
pop
das
ljmp
add
add
mov
push
add
les
fnstsw
mov
inc
mov
pop
adc
mov
jae
push
cmp
fstps
mov
jecxz
xchg
add
stos
jp
gs
mov
add
testb
mov
mov
sti
clc
dec
dec
lret
or
add
loop
mov
int
add
pop
or
mov
mov
rolb
mov
cltd
addb
rcr
loope
mov
add
adc
loop
mov
xor
or
int3
arpl
test
dec
dec
mov
std
dec
xor
mov
imul
pop
push
incb
lock
mov
addb
or
add
sub
stos
mov
or
add
add
mov
jecxz
or
pop
std
imul
sbb
inc
in
and
jle
inc
mov
mov
mov
out
xchg
push
cli
mov
mov
mov
add
mov
push
add
sbb
jb
mov
add
add
mov
mov
add
mov
neg
push
cmp
mov
repz
dec
mov
mov
test
push
adc
sub
jle
inc
mov
cmp
pop
test
mulb
sbb
cld
popa
mov
inc
add
icebp
push
cmc
and
lahf
ja
dec
and
or
fistpl
add
mov
lahf
jge
rol
mov
mov
mov
xlat
sbb
test
fs
mov
mov
test
xchg
xchg
sbb
add
xchg
or
ret
aad
inc
xchg
xor
add
mov
push
xchg
mov
mov
push
add
add
add
jge
mov
mov
mov
mov
add
in
mov
loop
mov
clc
xchg
jno
add
xchg
lods
lcall
or
inc
popa
cs
cmp
inc
aaa
pop
push
lods
pop
mov
test
mov
sbb
stos
les
mov
xor
iret
loop
mov
fdivl
mov
and
lret
add
sti
aam
cmp
adc
mov
push
repz
xor
xor
mov
mov
dec
fwait
rolb
mov
cli
test
in
mov
add
xorps
sub
add
or
adc
addb
ds
add
mov
or
adc
push
or
je
push
push
mov
jbe
sub
pop
push
rolb
mov
js
mov
mov
mov
inc
lahf
cmp
add
mov
and
int3
imul
inc
xlat
shl
das
xlat
inc
add
movsb
mull
popa
xchg
lea
stos
enter
mov
bound
mov
mov
inc
mov
enter
add
movsl
adc
mov
add
adc
mov
movsl
sbb
jnp
imull
mov
into
pop
and
dec
mov
movsl
mov
mov
stos
and
lea
mov
adc
leave
sub
push
mov
js
sub
rolb
jle
push
sub
jl
xchg
dec
ret
inc
pop
push
fisubrl
add
cwtl
rolb
mov
test
mov
push
fwait
lods
repz
test
lahf
jg
sbb
mov
das
pop
rolb
mov
mov
jae
mov
xchg
mov
push
mov
dec
rolb
mov
mov
mov
sbb
xor
mov
jne
add
push
add
add
push
or
add
add
in
fdivp
add
js
or
ficompl
xor
mov
rolb
mov
or
lea
sbb
hlt
mov
pop
leave
xor
add
gs
pusha
add
stos
inc
imul
jmp
popa
das
fbld
and
mov
pusha
add
add
pop
xchg
pop
inc
repz
pop
das
fistl
add
loop
mov
test
jno
stc
sti
pushw
xchg
les
add
jbe
mov
mov
inc
out
iret
or
cmp
adc
mov
pop
movsl
cmp
fists
adc
mov
ja,pn
dec
push
inc
add
rolb
mov
add
cwtl
pop
xor
mov
add
mov
mov
sbb
lods
ficomps
out
lds
insl
add
ret
pop
enter
fwait
negb
mov
mov
adc
add
mov
xlat
cmp
add
mov
sub
pop
or
mov
sub
xchg
add
pop
push
sbb
xchg
and
push
stos
jno
pop
mov
mov
enter
add
jmp
fadds
add
push
sbb
fiaddl
inc
add
add
shrl
imul
xchg
jle
dec
in
and
mov
and
in
jno
loop
mov
negb
loop
mov
iret
push
dec
test
or
sub
int3
jns
sbb
add
cmpsl
popf
arpl
aas
dec
mov
jo
mov
push
je
inc
inc
add
popw
enter
popa
dec
push
add
adc
adc
add
xchg
je
xchg
mov
add
outsb
out
mov
rorl
movsb
cmp
popa
pop
js
push
jmp
add
add
mov
mov
adc
add
ficoms
movsl
cli
mov
mov
add
mov
and
mov
mov
push
lods
test
out
pop
pop
and
mov
or
jae
adc
mov
inc
loope
shll
insb
or
mov
sub
mov
add
scas
xchg
sbb
mov
xor
mov
push
rcrl
imulb
add
sti
ljmp
inc
add
pop
sub
mov
add
mov
ljmp
sbb
add
stos
test
and
call
in
pop
cli
fldl
sub
add
mov
pusha
add
add
cltd
push
sbb
xchg
jbe
xchg
or
fdivrl
mov
in
enter
inc
add
out
sbb
add
mov
cwtl
jno
out
pop
hlt
mov
or
mov
add
mov
add
inc
adc
pop
push
add
xchg
dec
mov
fsub
enter
shll
add
add
cmp
cs
add
sbb
cmpsb
sub
inc
xchg
add
outsl
dec
movsb
std
xor
pushf
push
mov
push
mov
add
xchg
mov
movd
mov
sub
push
pop
cmp
aaa
idivl
sub
fisttps
inc
inc
and
mov
sbb
add
cmpl
inc
mov
jbe
push
add
call
or
mov
bswap
sbb
insb
inc
pop
ficomps
mov
mov
popa
mov
pop
rolb
mov
pop
xlat
push
mov
add
jne
repnz
mov
pop
sbb
push
cs
sbb
cld
pop
test
lcall
sti
jmp
dec
lds
mov
push
mov
fwait
jbe
push
add
xor
clc
xor
sub
inc
lods
ss
loop
mov
cmpsl
mov
aaa
aaa
sar
xor
sub
add
add
loopne
mov
and
mov
subl
ss
mov
add
mov
add
xchg
add
add
adc
movsb
sub
mov
push
push
add
and
fnsave
lret
es
mov
ds
aas
xchg
add
fs
add
ss
add
aaa
imul
and
mov
mov
mov
ljmp
sub
leave
adc
mov
mov
mov
add
loope
popf
lret
sub
jmp
mov
xor
mov
xchg
lahf
mov
mov
lcall
outsl
inc
aaa
add
mov
rcrl
push
sub
rorl
sbb
rolb
mov
dec
mov
push
in
repz
test
add
out
cmp
mov
dec
sti
jae
mov
rolb
mov
and
negb
test
mov
push
xchg
icebp
stos
mov
fcmovnu
mov
fldt
cmp
pushf
cmp
add
bound
mov
xchg
in
jge
xor
mov
jns
shll
add
add
pop
pop
add
push
neg
push
jmp
test
xor
mov
int3
nop
add
adc
mov
into
xor
rolb
mov
add
jle
add
inc
jp
mov
fwait
int
mov
add
inc
imul
adc
xor
add
pop
stos
mov
pop
sbb
dec
sub
add
mov
xchg
or
dec
add
add
fldenv
or
xor
xchg
cmp
add
mov
add
mov
in
lods
cmp
rolb
mov
lods
and
mov
inc
xchg
xor
mov
sbb
cld
inc
xchg
add
mov
mov
add
mov
mov
sub
mov
mov
ss
push
mov
mov
dec
mov
add
lahf
imul
daa
testb
dec
sub
rolb
mov
xor
mov
rolb
sub
push
hlt
pop
pop
sub
jb
mov
mov
mov
mov
rolb
sbb
add
int3
mov
mov
and
push
cmc
cmp
jecxz
add
mov
loope
test
aad
addr16
into
mov
int3
cmpsl
xor
xor
push
add
mov
loope
cmpsb
sbb
xchg
add
mov
stos
leavew
js
in
push
mov
add
mov
and
out
xor
add
out
cmpsl
mov
in
sub
sbb
mov
fistps
testb
mov
pop
mov
inc
dec
inc
jecxz
cs
out
adc
add
out
sub
add
cld
inc
sbbl
and
loope
add
int3
inc
les
mov
add
push
test
mov
mov
in
or
test
inc
adc
mov
mov
scas
xchg
cmp
jno
and
mov
and
add
pusha
add
pop
mov
cmc
out
push
pushf
mov
lock
mov
ficoms
mov
sbbl
add
mov
in
jecxz
dec
inc
std
sbb
jb
mov
add
mov
sub
add
mov
xchg
add
orl
inc
aam
mov
lods
aaa
inc
add
insl
xor
cs
add
mov
mov
pusha
add
cmpsb
leave
sbb
cmp
xor
mov
and
leave
cli
loope
mov
lea
cltd
dec
test
js
mov
arpl
jne
add
imul
loop
mov
add
mov
add
int3
ret
rolb
mov
xchg
and
rcrl
cmp
outsb
bound
mov
addb
jl
addl
mov
test
inc
icebp
movsb
push
mov
pop
mov
lahf
fcmovbe
inc
and
mov
lock
add
mov
loop
mov
jbe
dec
jg
add
mov
sub
adc
add
cld
sub
pop
std
xor
mov
jb
mov
or
das
and
cmp
imul
arpl
andl
sbb
add
inc
mov
rorl
repz
stos
lock
lock
out
pushf
xchg
add
test
mov
pusha
add
mov
and
ss
pop
adc
rcrl
inc
addb
and
push
push
fldcw
ljmp
sbb
or
mov
les
outsl
push
inc
add
mov
add
es
pop
cmpsl
and
xor
mov
dec
pand
mov
out
lods
lahf
push
ret
into
out
pop
ds
fisttpl
mov
movsl
addb
jp
cmp
and
add
add
cmpsb
xor
add
mov
std
xor
mov
cltd
jo
mov
mov
mov
dec
xchg
xor
mov
jp
rolb
daa
mov
sub
in
je
inc
movl
fisttpl
cwtl
sbb
loopne
mov
mov
xchg
xor
mov
out
les
nop
add
mov
push
enter
mov
push
inc
addr16
aaa
mov
test
sub
add
sarl
sbb
mov
cmp
repnz
add
cmp
mov
push
xor
add
mov
add
int3
sahf
push
jns
outsb
sbb
leave
push
stc
add
push
fcomps
lea
add
xchg
and
mov
pop
or
add
ds
jg
jno
sbb
adc
pop
push
mov
mov
seto
mov
dec
leave
jne
cmp
add
mov
xchg
add
aas
xor
mov
out
xchg
loope
and
fstpl
add
mov
inc
fs
inc
movsl
lock
cli
cwtl
cmp
mov
add
push
add
in
outsl
into
stos
mov
adc
and
adc
and
xor
mov
add
mov
in
sti
jmp
jge
push
add
lret
cld
mov
mov
mov
das
xor
add
jmp
adc
mov
or
mov
inc
add
push
push
cmpsl
lea
xchg
jno
mov
out
add
mov
sub
loope
sbb
fwait
dec
cld
xor
mov
mov
add
mov
cmp
dec
movsl
out
adc
mov
dec
rolb
sahf
notl
add
add
fldenv
insl
lcall
sbb
inc
cmp
fucomip
xor
inc
and
mov
dec
add
add
xchg
js
addb
mov
jnp
pushl
xchg
add
push
add
loopne
mov
mov
scas
mov
add
lret
nop
add
sbb
pop
sbb
mov
mov
in
add
icebp
dec
addb
ljmp
xchg
add
lods
int3
cs
add
cmp
scas
sub
mov
mov
cmc
sti
inc
add
mov
aas
push
fsub
sub
cmp
ss
pop
adc
mov
roll
aad
loopne
mov
push
add
repnz
mov
add
mov
mov
mov
add
jb
mov
das
push
mov
in
ja
test
add
or
mov
cmc
sahf
inc
enter
add
enter
lret
mov
xchg
test
dec
test
adc
mov
loope
fbld
into
hlt
jmp
add
insb
sbb
sbb
pushf
push
xchg
gs
mov
add
add
popf
pop
je
cltd
icebp
in
jbe
aam
or
jp
call
fisttpll
cli
mov
inc
add
fmuls
mov
mov
xchg
add
aas
push
movsl
mov
push
xor
add
in
add
cli
flds
add
add
rolb
or
add
in
dec
decl
push
inc
sub
pop
jecxz
pop
and
mov
aaa
cwtl
cmp
test
push
call
pop
addb
inc
dec
call
add
dec
push
pop
jl
sbb
jmp
movsb
sahf
out
xchg
cmc
xor
mov
add
outsl
mov
ja
aam
add
scas
jns
jbe
inc
sti
stos
mov
inc
dec
cmc
mov
xor
mov
mov
and
mov
mov
repz
addr16
mov
jg
mov
add
out
sub
loope
imul
push
xchg
movsl
daa
outsl
mov
pop
mov
xchg
mov
and
mov
or
push
xor
mov
imul
lods
mov
cmpsb
scas
pushf
push
jge
addl
jmp
jno
add
inc
or
test
fmuls
inc
fs
mov
ja
add
arpl
nop
add
pushf
push
add
mov
and
rolb
mov
adc
add
mov
or
add
jmp
mov
inc
repnz
loop
mov
jne
sbb
add
fidivs
mov
cmpl
fildll
lds
fsubl
mov
je
lea
dec
push
add
or
sarl
add
mov
add
mov
cwtl
adc
js
xchg
or
ret
pop
jecxz
dec
outsl
repz
dec
sahf
in
add
mov
ljmp
lret
mov
jo
mov
mov
jo
mov
and
or
mov
xor
sti
mov
into
adc
mov
jmp
jp
sub
push
cs
add
push
jge
add
ret
mov
cltd
out
call
fwait
jns
hlt
jecxz
or
and
or
popa
sub
push
xchg
add
mov
rolb
mov
adc
sub
fisttpl
lret
test
inc
push
ret
movsb
sbb
daa
push
subl
dec
xchg
test
mov
or
mov
xor
cwtl
cmc
cmp
add
mov
int3
xchg
jmp
leave
sti
fnstsw
add
push
add
add
pop
imul
lock
popf
sub
inc
jns
add
push
add
rolb
mov
push
adc
push
daa
loopne
mov
out
adc
add
dec
rol
push
rolb
mov
idivb
mov
xor
add
hlt
and
mov
rolb
mov
mov
push
sar
jmp
jns
add
fisubl
add
ljmp
jbe
mov
add
xor
xor
mov
push
repnz
or
add
bound
mov
scas
inc
cmp
add
cmp
mov
jb
mov
push
std
jle
scas
push
sbb
bound
mov
out
inc
add
dec
popa
fldenv
mov
jecxz
lret
bound
mov
mov
add
mov
jmp
das
sti
fmul
dec
out
aaa
inc
add
mov
mov
roll
test
rcll
addb
mov
inc
mov
dec
popa
pop
push
xor
clc
push
cltd
cltd
mov
inc
add
mov
xchg
mov
addb
imul
add
hlt
lret
mov
dec
roll
add
in
add
sti
push
hlt
cmpsl
std
xchg
and
mov
mov
xchg
les
jecxz
int3
xlat
lea
add
dec
addb
sbb
test
xchg
push
es
jg
mov
mov
pop
cmp
pop
mov
mov
xchg
rolb
mov
xor
mov
fisttpll
test
sbb
mov
xorl
add
mov
mov
mov
je
dec
scas
dec
and
pop
pop
pop
imul
push
ljmp
add
pushf
cmp
xchg
push
or
inc
in
pop
jns
pushf
cltd
pusha
add
lock
outsb
cmp
inc
dec
cmc
stc
push
push
dec
pop
mov
mov
push
repnz
pop
adc
lcall
mov
or
xchg
cli
inc
xchg
adc
jns
push
add
cltd
insb
aaa
sbb
inc
and
imul
mov
pop
mov
sbb
jne
and
mov
mov
daa
dec
mov
mov
mov
jle
push
rolb
mov
je
into
stc
push
add
push
lds
aam
mov
add
xor
jp
sahf
mov
imul
add
mov
or
and
add
push
dec
addb
shr
dec
imul
mov
outsb
mov
icebp
test
stos
in
xchg
cmc
fnsave
mov
mov
mov
je
push
push
sbb
xor
mov
in
je
mov
or
mov
divb
mov
xor
mov
inc
lods
cli
inc
stc
sbb
push
mov
mov
fcompl
pop
cmp
stc
pop
adc
mov
inc
add
mov
mov
xchg
test
loopne
mov
xor
pop
adc
inc
jecxz
pusha
add
add
movsb
sub
add
xor
gs
add
inc
add
and
mov
lods
jno
push
fwait
xor
cmc
pop
add
mov
out
add
mov
or
outsb
mov
add
mov
mov
neg
mov
xor
push
mov
cmp
sbbl
or
mov
mov
mov
mov
mov
std
cltd
imul
fldl
add
inc
mov
jmp
add
and
inc
add
mov
push
cmc
push
xchg
add
js
call
mov
sub
add
xchg
jo
mov
xchg
sbb
jnp
pcmpeqd
popf
cmp
add
xchg
mov
jge
pop
rcrl
mov
jmp
repnz
into
mov
add
ja
lcall
addb
fists
mov
mov
mov
ljmp
xor
mov
inc
add
outsl
test
mov
mov
push
add
dec
scas
lret
lock
push
add
add
aaa
pusha
add
and
mov
jg
mov
rolb
mov
mov
es
pushf
sbb
fistps
aam
rolb
mov
add
pop
cmp
add
jns
mov
mov
mov
xor
mov
movb
mov
pop
loope
sbb
mull
add
inc
aam
or
addb
push
add
mov
jmp
push
mov
jne
rolb
mov
cmp
test
lods
mov
add
addr16
cld
add
out
sar
andl
mov
jl
sbb
pop
or
add
push
or
fxch
das
fwait
pop
mov
cli
sub
lret
adc
stos
jp
ficompl
mov
mov
add
xchg
mov
mov
and
into
loopne
mov
ja
popa
inc
add
in
mov
and
add
mov
mov
dec
ss
cli
jl
sub
sbb
add
add
and
aas
xchg
pop
cltd
mov
jns
add
mov
aaa
xchg
mov
mov
mov
and
mov
cwtl
cltd
mov
adc
into
icebp
addb
bound
mov
lods
dec
jp
cmc
push
out
cmp
add
mov
push
mov
mov
mov
dec
dec
test
movsl
lock
push
inc
add
and
in
mov
add
mov
add
mov
dec
cltd
ljmp
ljmp
add
push
test
lahf
cli
insb
mov
and
add
je
les
stc
sti
mov
rolb
mov
mov
fnstsw
add
push
sbb
shll
dec
push
js
cmp
add
push
ret
das
adc
mov
movsb
add
or
xor
add
mov
mov
mov
in
sti
roll
add
jmp
jno
sahf
sbb
add
push
add
test
testl
inc
mov
adc
xchg
iret
lds
add
mov
insb
scas
mov
mov
dec
xor
mov
rolb
jae
loope
add
xchg
xor
hlt
or
pop
fdiv
add
les
add
mov
mov
mov
add
mov
imul
jae
add
in
leave
ret
arpl
jmp
xlat
cmc
mov
in
cli
subl
into
ret
lds
xchg
jbe
jbe
mov
adc
and
mov
mov
mov
pop
bound
mov
dec
fldt
add
enter
add
mov
push
mov
sub
mov
and
mov
mov
push
mov
sub
and
mov
mov
cltd
push
mov
pop
sub
xchg
and
sbb
lds
scas
movsb
gs
int3
xchg
int3
and
jb
mov
in
addb
ja
dec
fcmovne
jne
mov
js
push
ja
lcall
bound
mov
dec
push
add
cmp
lea
mov
lds
cmpsl
in
and
mov
stos
lods
dec
scas
cmp
push
push
add
rorl
mov
add
fcmovu
arpl
dec
es
stos
ja
xchg
inc
add
lods
adc
mov
add
aam
mov
outsb
loop
mov
icebp
mov
add
add
add
mov
js
cmp
cmpsb
movsb
or
loope
jl
mov
jle
mov
jp
and
lds
inc
mov
loope
shrl
add
add
add
aad
sub
add
lods
shll
stos
or
loope
pop
mov
inc
jmp
sbb
add
in
push
mov
dec
pop
mov
pop
xchg
lea
inc
dec
aas
inc
outsl
test
mov
aam
imull
add
jl
imul
add
add
xor
mov
rolb
mov
xchg
xor
mov
jbe
lds
add
add
add
push
sub
je
add
mov
mulb
add
mov
scas
pop
fidivl
dec
popa
in
jne
add
push
xchg
pop
add
in
ficomps
add
gs
loop
mov
jp
add
mov
push
gs
cmp
mov
add
je
pop
push
test
roll
bound
mov
inc
mov
adc
add
rolb
inc
add
mov
mov
push
pop
sbb
and
mov
mov
mov
bound
mov
jle
mov
add
add
rolb
js
xor
add
cltd
rolb
mov
mov
sbb
push
insl
fwait
decb
jmp
rolb
mov
mov
gs
lods
imul
add
xor
mov
nop
add
js
add
leave
lret
jne
add
add
pop
sub
scas
nop
add
jae
pop
cmpsb
mov
lret
mov
leave
mov
sbb
mov
jb
mov
das
data16
add
jmp
mov
mov
mov
enter
dec
outsb
and
mov
iret
ss
je
test
push
fdivrl
aas
mov
or
filds
xchg
sub
int
jl
call
add
dec
test
lcall
jbe
xor
mov
inc
mov
cltd
loope
stos
adc
sbb
fs
cmc
int
add
add
mov
mov
mov
mov
add
das
scas
inc
add
mov
iret
push
adc
mov
mov
xchg
mov
push
cmp
add
imulb
stos
scas
cmpsb
lods
jno
loope
inc
push
xchg
int3
pop
frstor
add
inc
inc
in
shrl
cmp
in
sub
int
mov
jmp
push
dec
notl
mov
mov
add
rolb
mov
xchg
mov
arpl
mov
sub
das
mov
lods
or
inc
call
inc
je
push
pop
popa
xchg
mov
addb
xchg
mov
movsb
pop
add
mov
insb
cmc
popa
dec
iret
rolb
mov
mov
add
sub
xchg
or
add
xor
add
push
sbb
cld
sbb
int3
lods
into
mov
incl
ja
add
pop
sbb
js
mov
add
push
jb
mov
mov
div
les
roll
xlat
pop
jo
mov
dec
andl
dec
and
clc
popl
add
pop
rolb
mov
add
add
add
hlt
sarl
add
mov
add
mov
jg
add
mov
mov
addb
pop
cmp
add
add
mov
enter
mov
push
mov
mov
addb
addl
aad
add
push
push
iret
sti
das
lret
pop
lea
out
jmp
and
mov
sub
mov
adc
mov
mov
inc
push
cwtl
mov
mov
add
mov
add
add
stos
mov
iret
add
mov
les
xchg
cmp
inc
add
mov
add
jge
sbb
dec
mov
movsl
pop
xchg
lods
fbstp
add
rolb
mov
rolb
mov
aad
nop
add
test
inc
ret
loope
add
add
add
add
mov
in
loop
mov
xor
jecxz
add
mov
pop
xchg
jb
mov
add
movsl
adc
hlt
out
ja
jmp
imul
repnz
or
addb
push
cmp
mov
lods
jp
bound
mov
mov
mov
dec
push
loop
mov
mov
add
push
add
xchg
add
push
sbb
add
movsb
inc
xlat
mov
mov
xlat
cwtl
dec
ss
lds
push
mov
dec
lods
in
adc
add
xor
gs
icebp
add
mov
in
arpl
inc
mov
jle
leave
and
mov
add
jge
bound
mov
xchg
mov
es
mov
icebp
iret
popa
xor
adc
out
fisubrl
add
mov
popf
aaa
push
into
aaa
adc
add
add
mov
add
add
jb
mov
sti
sbb
add
xor
addb
std
jmp
dec
jg
in
xor
mov
bound
mov
movb
fstp
sti
stc
mov
add
jns
pop
mov
xchg
add
add
mov
add
or
movsl
or
mov
mov
add
sub
insb
jnp
sbb
test
or
mov
sti
dec
mov
aad
jb
mov
mov
add
mov
fwait
scas
bound
mov
sbb
cmpsl
mov
insb
xchg
aas
xchg
mov
mov
add
insb
sti
popa
out
sbb
out
add
pmovmskb
push
arpl
mov
addb
mov
add
push
out
sti
pop
mov
fwait
mov
add
mov
push
sbb
mov
aas
sbb
adc
pop
testl
mov
mov
pushf
enter
imul
jg
and
mov
cld
or
repnz
loope,pn
cmp
push
push
lods
daa
roll
add
mov
mov
and
jge
inc
xchg
mov
cltd
inc
icebp
mul
jbe
popa
push
and
push
add
pop
mov
mov
mov
adc
aad
add
addb
dec
dec
ret
mov
add
push
add
mov
push
sbb
std
scas
mov
addb
fisubrs
stos
adc
daa
pinsrw
loopne
mov
bound
mov
sbb
add
jp
cwtl
push
sbb
add
jne
into
and
mov
incb
js
sahf
ss
data16
sbb
mov
ja
mov
push
jno
mov
mov
in
inc
jb
mov
and
out
ds
ficoml
mov
sbb
xor
mov
cmc
push
lock
jne
in
xor
adc
das
and
add
cmp
push
in
adc
cs
and
add
xchg
dec
push
stos
or
mov
pusha
add
pop
or
jae
dec
repnz
mov
mov
pusha
add
ljmp
mov
push
lods
fadds
ss
jmp
out
or
data16
pop
les
adc
push
sbb
and
mov
mov
nop
add
mov
mov
mov
add
mov
mov
push
dec
cmp
arpl
dec
out
mov
jno
adc
mov
add
pop
push
in
mov
mov
mov
add
or
sahf
push
jbe
test
shll
movsb
push
sbb
add
sbb
fldt
mov
xchg
mov
les
call
inc
mov
or
aas
fisubrs
mov
pop
lret
adc
add
jnp
or
mov
mov
in
inc
jmp
adc
loop
mov
mov
add
out
rolb
jo
mov
push
add
push
inc
add
dec
or
cltd
push
sub
add
mov
mov
pop
push
rolb
mov
das
addr16
push
xor
xchg
add
hlt
loop
mov
stos
loopne
mov
add
or
orl
mov
push
lods
dec
mov
add
add
or
cli
jl
aas
lahf
movsb
cli
ret
push
jge
add
fisttpl
inc
stos
scas
xchg
push
cli
pop
mov
out
and
mov
jmp
loop
mov
fldl
push
arpl
rcrl
and
lahf
aam
cwtl
push
xchg
sbb
fiadds
lock
pusha
add
pop
into
rolb
mov
mov
sub
dec
int
push
fs
aaa
inc
pop
loopne
mov
cmp
push
pop
dec
nop
add
add
add
loopne
mov
clc
jns
jo
mov
jg
or
daa
jl
or
add
mov
movb
jl
mov
mov
mov
mov
add
push
mov
mov
mov
add
mov
mov
mov
out
in
cltd
notl
mov
jecxz
add
add
loopne
mov
cmp
ret
or
inc
add
mov
mov
lods
iret
call
xchg
mov
mov
inc
mov
addb
cmpsb
clc
mov
std
xor
leave
push
mov
jg
clc
ljmp
push
push
icebp
xchg
roll
sbb
add
mov
push
jecxz
add
mov
daa
mov
fisttpll
push
pushf
aas
bound
mov
mov
hlt
jae
adc
add
mov
push
add
sub
fnsave
divl
add
push
pop
shll
ret
jne
aam
mov
lret
shll
stos
iret
hlt
mov
mov
mov
add
mov
sub
sbb
jo
mov
add
push
xor
mov
jle
inc
test
out
add
add
mov
dec
popf
add
add
rolb
mov
add
jmp
adc
or
frstor
add
mov
sub
out
fiaddl
add
xor
mov
add
sti
popf
push
dec
mov
or
mov
mov
pop
sbb
dec
add
mov
add
imul
add
add
cli
pop
adc
mov
and
mov
mov
jg
bound
mov
dec
push
add
mov
jmp
mov
mov
add
push
outsb
mov
outsb
dec
addr16
js
rcrl
xor
cmp
dec
test
xchg
cltd
arpl
mov
pusha
add
mov
add
pop
adc
rolb
mov
lods
jg
nop
add
test
xchg
popf
scas
imul
mov
add
mov
aad
xor
mov
add
adc
mov
arpl
mov
in
lret
js
add
push
mov
push
cltd
mov
mov
insl
outsl
loopne
mov
arpl
inc
scas
aas
nop
add
add
fildl
int3
ret
scas
rolb
mov
inc
push
repz
xchg
lahf
fcompl
sub
mov
add
mov
add
sahf
xchg
add
mov
and
mov
push
inc
out
add
add
add
jmp
movsl
lcall
mov
adc
jne
jle
add
mov
fsubl
xchg
stos
lods
xlat
repz
mov
jbe
add
xchg
inc
leave
icebp
icebp
aaa
mov
pop
xchg
fdivrl
inc
add
addb
jo
mov
sub
outsb
mov
mov
sub
les
add
decl
mov
mov
stos
push
push
mov
add
xchg
jmp
xor
icebp
dec
dec
sbb
dec
inc
nop
add
aaa
mov
mov
loop
mov
add
xchg
jnp
dec
lea
ret
adcl
rolb
add
mov
mov
push
cmp
add
sub
mov
addl
add
mov
push
push
mov
jle
add
enter
add
movsl
and
add
mov
sub
ret
addb
stc
mov
adc
mov
add
mov
sub
insl
push
mov
xchg
add
mov
mov
sbb
add
cmp
add
cld
aad
in
add
pop
es
and
add
shl
inc
xchg
cmp
pop
sub
add
mov
imul
adc
mov
fnsave
iret
inc
pop
xchg
lret
lock
add
pop
jbe
mov
mov
addb
aad
out
mov
enter
sbb
cltd
sub
sbb
sbb
add
mov
add
inc
loope
ret
int
out
mov
aas
xchg
loope
stos
inc
ret
xchg
fs
pusha
add
movsl
mov
mov
add
add
aam
std
mov
xchg
add
xchg
push
add
icebp
or
add
movsb
leave
rolb
mov
add
sbb
mov
jmp
mov
mov
inc
jecxz
movsl
insb
rcll
add
push
fsubr
mov
jge
popa
and
add
fimuls
pop
rolb
mov
add
mov
xlat
mov
sbbl
pop
sub
cld
sub
add
mov
rorl
and
mov
arpl
dec
fiadds
mov
xchg
add
dec
lock
out
mov
or
add
mov
leave
dec
test
cs
push
xor
add
mov
mov
mov
test
xchg
mov
jmp
loopne
mov
rolb
mov
inc
movsl
fsubr
pop
or
cmpsl
pusha
add
fcoms
cmc
pop
addr16
mov
in
push
bound
mov
mov
stc
ret
mov
mov
loopne
mov
loope
add
pop
push
fidivrl
fnstenv
mov
pop
enter
push
adc
mov
cmc
in
test
test
fcmovne
xchg
xchg
add
dec
dec
test
xchg
out
rolb
es
mov
push
or
leave
mov
xchg
xor
mov
sbb
fmull
out
incl
aam
clc
cmovl
mov
mov
add
xchg
in
push
xlat
mov
into
loopne,pn
mov
int3
jne
ljmp
mov
jl
add
add
inc
add
ss
inc
push
cwtl
imul
lods
ds
cltd
pop
or
inc
add
add
mov
rolb
scas
in
aad
hlt
adc
mov
shll
xor
jno
inc
mov
sub
ds
lock
popa
jge
push
fistpl
jp
jmp
bound
mov
inc
mov
fstl
add
insb
cmp
push
cmp
cld
mov
rolb
lret
shrl
test
or
inc
push
clc
ret
ja
sub
clc
xor
mov
pop
clc
jp
cmc
or
scas
rolb
int3
mov
jmp
sub
icebp
inc
stc
push
add
adc
addb
fstpl
outsl
fwait
mov
sbb
lcall
jmp
cwtl
cmpsl
jl
or
or
xchg
shl
add
add
ret
xor
aam
out
stc
imul
adc
aad
gs
xchg
int
add
add
cmpsb
adc
mov
or
sub
call
loopne
mov
sub
xchg
mov
push
cmc
xchg
filds
je
sahf
push
add
mov
pop
mov
mov
rolb
mov
mov
std
xchg
dec
pop
jo
mov
scas
lea
add
add
sti
push
and
mov
adc
mov
js
inc
pushf
icebp
mov
sbb
addl
aam
sub
add
shll
add
mov
aam
cmp
addb
addb
stc
repnz
mov
push
mov
mov
mov
xchg
dec
mov
mov
add
pop
iret
out
lahf
ret
fistpl
add
add
mov
add
mov
xor
mov
and
mov
push
mov
and
jmp
xor
xchg
popf
shrl
popf
nop
add
mov
mov
add
rolb
mov
jne
xor
es
add
add
mov
test
scas
or
sahf
dec
jns
bound
mov
cltd
or
gs
dec
xlat
leave
adcl
push
inc
fmull
and
sbb
mov
mov
add
lret
mov
add
push
add
lahf
fnsave
mov
insl
lret
add
add
xchg
inc
pop
popa
iret
push
push
dec
xchg
add
repnz
mov
fistps
orl
pusha
add
add
mov
sub
xor
sbb
cld
clc
addb
addb
and
das
icebp
shll
outsl
push
ljmp
mov
mov
jne
mov
jb
mov
stos
popf
adc
sbb
mov
adc
mov
mov
in
mov
mov
xchg
jns
and
mov
cmpsl
pop
or
fs
movsb
rolb
mov
ret
pop
js
dec
ret
lock
dec
lods
jnp
jle
ss
popf
cmpsb
ljmp
jp
dec
and
cltd
addb
jge
ja
xchg
xchg
dec
lea
xchg
add
nop
add
and
mov
mov
mov
xchg
mov
add
dec
daa
sub
dec
adc
jno
jbe
in
mov
jno
shrl
push
add
mov
sub
add
mov
add
rolb
mov
sbb
xor
mov
notl
mov
dec
sub
aad
mov
dec
mov
ret
lahf
gs
inc
add
jnp
sub
mov
ret
popa
lret
sub
imul
pop
in
outsb
nop
add
js
add
sbb
or
mov
iret
enter
add
jmp
mov
pop
cli
ret
pusha
add
xorl
mov
bswap
sbb
out
add
sbb
nop
add
mov
push
fiadds
into
or
je
rolb
rolb
mov
jmp
sbb
mov
pop
xchg
cmp
add
and
mov
mov
sti
out
test
add
bound
mov
inc
push
dec
ret
movsl
repnz
loop
mov
repz
imul
aam
jae
adc
in
stos
mov
or
add
movsl
mov
mov
scas
test
lods
int
jo
mov
leave
mov
in
imul
outsl
xor
mov
xor
sub
jbe
ss
push
add
jl
jg
aam
pop
scas
cmc
and
mov
dec
inc
add
out
mov
cmp
mov
sbb
mov
notb
test
push
mov
add
pushf
test
xchg
cmc
mov
cmp
fs
cmpsl
psubd
mov
add
or
mov
add
mov
out
mov
jbe
xchg
fcmovb
imul
push
rolb
mov
clc
ret
incl
jl
push
sahf
mov
xchg
out
jne
or
and
test
test
insb
mov
in
jmp
fwait
mov
jg
adc
mov
jg
mov
mov
add
fcomps
jns
add
out
loopne
mov
sbb
cmp
add
mov
out
push
cs
insb
mov
sbb
mov
add
das
sbb
lcall
xor
mov
add
mov
movb
add
ss
jae
scas
cli
lods
xor
fxch
loopne
mov
add
imul
mov
addb
out
aaa
test
xor
mov
outsl
in
sub
add
and
mov
jmp
xchg
add
push
xor
adc
lods
cmpsb
loop
mov
fcmovnu
dec
popf
jae
ret
rolb
mov
dec
mov
data16
add
es
xlat
test
sub
jle
push
inc
stos
mov
leave
mov
xor
add
mov
add
cmp
js
and
mov
iret
add
add
mov
adc
mov
xchg
lret
imul
push
cwtl
insb
rcll
mov
fildl
add
popa
xchg
mov
pop
cmp
and
mov
jg
mov
js
cmp
movq
adc
into
adc
int
sub
ret
mov
sbb
das
bound
mov
or
xchg
mov
add
mov
mov
and
mov
dec
insl
addr16
aam
add
out
mov
cmp
jo
mov
mov
cli
test
xchg
clc
in
mov
cmp
sbb
and
mov
cmp
add
add
xor
fsubs
pop
inc
add
sbb
out
sti
fdivrs
mov
jnp
pop
fmul
sarl
push
outsb
pop
mov
stc
adc
mov
add
xor
mov
mov
les
mov
decb
les
mov
add
add
jb
mov
add
out
adc
mov
lods
jnp
out
cmpsl
inc
xchg
add
insb
rolb
mov
lret
cmp
and
lods
adc
mov
popf
push
push
xor
or
rolb
mov
lods
lock
jl
push
add
add
mov
xchg
xchg
mov
mov
xchg
add
loop
mov
pop
mov
outsb
jl
add
lods
dec
pushf
mov
std
nop
add
jno
push
add
mov
mov
mov
sbb
mov
cmc
mov
mov
jb
mov
test
mov
das
cmp
inc
cmp
inc
inc
add
cmc
clc
mov
add
sub
in
pop
imul
ret
fisttps
hlt
negl
movsl
push
inc
loopne
mov
mov
push
xchg
mov
mov
mov
scas
sbb
mov
scas
and
add
sbb
sub
mov
or
pop
mov
bound
mov
push
mov
mov
push
adc
leave
aaa
fiaddl
mov
jmp
sub
add
add
push
jae
arpl
add
cmpsl
xchg
cs
aaa
push
xor
adc
add
out
or
jle
mov
cmpsl
cmp
add
sub
mov
mov
test
mov
or
insb
fwait
cltd
mov
mov
sub
push
xchg
add
mov
cld
or
xor
or
inc
rcll
movl
inc
popa
jp
add
lods
je
mov
rolb
mov
add
mov
jnp
add
pusha
add
jecxz
add
mov
add
jmp
rolb
mov
mov
scas
or
test
popl
pop
dec
add
pop
iret
aaa
and
sub
mov
fwait
addb
imul
outsl
repnz
addb
or
add
sub
mov
aaa
pop
fidivl
adc
mov
call
pop
cmpsb
xchg
add
repz
fdivrl
and
pop
movsl
sahf
enter
mov
add
xchg
jne
loopne
mov
mov
repz
or
subl
xchg
js
or
aas
pusha
add
fbstp
mov
sbb
add
pop
icebp
orl
jnp
inc
std
lret
push
mov
enter
add
stc
addb
dec
addr16
mov
mov
add
mov
sarl
lods
mov
mov
frstor
sub
jmp
pop
add
xchg
or
and
cs
add
ljmp
rolb
mov
cmp
push
cmp
push
rolb
mov
dec
lret
xchg
mov
mov
and
add
mov
mov
pop
mov
add
shll
sbb
out
inc
sub
insl
std
inc
data16
mov
and
mov
addr16
in
repz
out
mov
sub
jns
mov
add
mov
bound
mov
mov
jmp
aaa
je
push
add
mov
sub
xchg
add
push
fnstsw
dec
pop
inc
pop
addb
cmp
mov
add
shr
int3
andl
add
cmpsl
cmpsb
out
mov
pop
ja
mov
mov
mov
mov
add
clc
push
cmp
add
add
inc
mov
add
mov
mov
int
add
mov
sub
add
loop
mov
xchg
stc
clc
inc
add
pop
push
mov
pop
pop
in
or
mov
mov
mov
lds
gs
ja
lock
pop
aam
vmovlps
addr16
ss
iret
lock
dec
mov
lods
repz
mov
adc
mov
mov
jne
negb
jp
jne
push
addb
push
add
pop
out
je
mov
movsb
xlat
lods
pop
cltd
scas
test
test
jl
fimuls
mov
mov
loope
add
call
mov
mov
xchg
cmp
mov
cmp
add
push
sbb
add
shll
loope
pop
outsb
aam
or
add
add
insl
rorl
imul
xchg
push
add
mov
sar
ret
add
adc
sbb
mov
loop
mov
add
jmp
mov
addb
push
dec
xor
mov
add
or
sbb
mov
mov
add
cli
leave
lods
lret
push
iret
push
add
ss
xchg
mov
lret
xchg
ret
xchg
mov
shll
add
add
xor
mov
add
add
inc
add
add
movsl
icebp
dec
dec
mov
xor
jo
mov
dec
rolb
adc
leave
or
stos
cmpsl
addb
pop
mov
add
xchg
cs
lods
add
add
add
pushf
je
ds
pop
addb
xor
mov
mov
mov
xorl
negb
sbb
in
dec
pop
out
add
mov
aaa
dec
test
fnstcw
jg
add
or
outsb
xor
jg
aad
addr16
mov
dec
xchg
xor
mov
add
cmpl
xor
xchg
rcll
mov
sub
mov
pushf
sbb
shll
mov
outsb
pop
les
xchg
mov
add
add
or
add
leave
rcl
mov
ret
mov
cmp
sub
jbe
adc
pop
sbb
xor
cmp
add
or
mov
jns
insl
sti
jo
mov
pop
and
popf
rcll
xchg
add
sub
or
fmuls
stc
xlat
jo
mov
add
stc
fidivl
mov
test
cwtl
push
sbb
mov
enter
loop
mov
add
into
pop
pusha
add
dec
dec
and
mov
add
pop
xor
fistl
xor
mov
mov
cli
roll
aad
mov
add
mov
je
mov
add
push
pop
jle
fsubl
mov
jns
mov
ds
inc
jnp
add
mov
repz
push
sub
rolb
mov
push
into
mov
loopne
mov
dec
jmp
testb
sub
push
out
cmc
jecxz
ds
jo
mov
dec
and
and
mov
jge
les
add
mov
mov
addl
fidivl
leave
xchg
add
addl
enter
mov
sub
mov
into
outsb
mov
movsb
aad
mov
les
push
pop
dec
mov
lcall
sahf
mov
ja
leave
cli
int
daa
sti
loope
js
jecxz
add
scas
fs
add
mov
xor
jne
lock
sti
imul
xchg
lret
lock
or
int
addb
out
lea
push
mov
dec
jge
mov
add
mov
fdivs
enter
test
dec
xchg
hlt
push
ja
jg
pop
sub
loopne
mov
or
cmc
fcomps
jge
push
push
xor
mov
mov
fdecstp
jge
sbb
addb
jmp
pop
mov
push
dec
addb
movsb
in
bound
mov
jl
data16
lea
add
cld
mov
and
mov
cmp
xor
mov
fisttpl
push
insl
push
dec
pop
adc
mov
mov
insb
mov
jae
repz
mov
jbe
je
xor
jg
push
push
cmp
js
add
mov
stos
scas
mov
push
daa
shll
mov
std
dec
inc
je
inc
adc
add
add
or
jnp
mov
popf
jmp
or
mov
xchg
push
sub
jl,pt
push
movsb
mov
mov
std
lds
mov
popa
sbb
rolb
mov
add
mov
cmp
add
mov
mov
js
add
jmp
std
int3
mov
mov
mov
aaa
iret
and
mov
add
ds
pop
push
xor
mov
adcl
add
sbb
xor
mov
mov
mov
and
xchg
jmp
scas
stc
cmp
jp
sub
pop
mov
mov
icebp
mov
rolb
add
fstp
pop
mov
in
sbb
lds
sbb
mov
jmp
dec
cmp
mov
add
enter
test
adc
cmp
mov
mov
mov
aam
push
push
cld
inc
add
in
std
fdivr
dec
out
cld
sub
xor
je
ret
outsb
mov
mov
mov
and
mov
add
repnz
dec
cmp
mov
lahf
mov
or
push
repz
ret
pop
and
mov
aam
call
lock
inc
xlat
in
adc
mov
arpl
jl
addb
pushf
fcoml
mov
mov
add
push
insl
ljmpw
popf
jp
and
js
aam
or
popf
jg
fdivrl
sub
dec
subl
movl
mov
push
adc
movsb
adc
add
or
or
cmc
pop
mov
add
add
mov
dec
in
stos
lods
pop
and
jecxz
fimuls
add
mov
fnstcw
mov
add
rolb
add
xor
mov
mov
cmpsl
cmp
rcrl
cmovp
movsl
xor
testb
mov
out
sbb
aam
ds
sbb
add
imul
out
fsubs
in
adc
mov
jmp
push
cmp
test
jmp
sbb
cmp
mov
push
inc
add
xchg
sti
and
mov
in
dec
adc
push
dec
lcall
jmp
pop
das
mov
adc
mov
cmp
mov
inc
insb
cmc
jp
push
enter
js
test
notl
add
mov
xchg
add
fs
les
or
shll
pop
addr16
mov
mov
mov
push
lcall
cmpsl
lcall
daa
shrl
cli
or
jg
push
mov
add
mov
repnz
lds
sub
mov
jge
mov
xchg
jb
mov
arpl
dec
cmp
std
jo
mov
push
mov
out
shll
mov
mov
cmpsl
fldl
add
lods
lds
dec
fcoml
ret
or
out
dec
push
add
add
inc
jno
test
push
rolb
mov
fldpi
push
push
cltd
jl
add
cli
jmp
mov
arpl
push
jnp
add
iret
in
mov
add
loop
mov
mov
outsl
ja,pn
mov
and
add
lahf
ds
mov
jbe
pop
lock
inc
jle
ret
push
ds
xchg
arpl
mov
dec
outsb
mov
scas
pop
push
cmp
pop
dec
rcrl
jle
rolb
mov
add
add
add
ss
xor
mov
filds
mov
int
pop
pop
inc
mov
mov
jbe
int
imul
lods
sbb
push
in
add
sub
add
sub
add
jns
jge
xchg
xchg
aam
xorps
pop
das
fisubl
pop
cmp
addb
jb
mov
loopne
mov
fwait
inc
xlat
mov
rolb
xor
mov
push
sbb
mov
add
lds
and
dec
fldl
adc
mov
repnz
mov
xchg
aam
add
lods
and
mov
jmp
add
push
cs
es
add
ss
inc
call
mov
xor
mov
pop
cmpsl
pop
xchg
icebp
dec
and
jle
jecxz
jns
lret
popl
popa
push
mov
test
aaa
cli
sbb
and
sbbl
push
pushf
test
adc
les
cld
insl
pusha
add
or
ret
rcr
inc
add
add
push
jle
add
daa
add
jmp
inc
inc
add
pushf
sub
xor
mov
fisubrs
and
add
add
pop
sbbl
daa
je
mov
pop
pusha
add
add
xor
add
add
mov
stc
inc
mov
enter
out
mov
jno
jae
ret
or
add
test
mov
add
jbe
mov
mov
mov
push
cmp
xchg
xor
mov
notl
rolb
mov
cmpsl
mov
das
sbb
add
jne
mov
push
inc
or
pop
cmpl
add
jae
add
mov
cmp
mov
cmpsl
push
sti
xchg
mov
cli
cmpsb
xchg
push
xchg
add
mov
lret
fcomps
push
inc
jp
jmp
xor
fildll
add
mov
mov
adc
cmpsb
enter
fwait
leave
jns
cmp
adc
xchg
mov
mov
mov
test
fbld
mov
fwait
sbb
adc
cltd
and
mov
repz
test
add
aam
add
mov
mov
popf
pop
push
loop
mov
enter
sub
mov
add
sbb
pop
jbe
jmp
ret
jbe
cmp
pushl
add
xchg
add
mov
add
jno
sbb
mov
adc
xor
mov
add
mov
icebp
scas
aas
aad
sbb
mov
mov
xchg
add
pop
bound
mov
dec
idiv
testl
jo
mov
inc
add
add
addb
sbb
ds
outsb
mov
rolb
mov
in
add
mov
mov
das
cmpsl
fs
les
mov
stos
test
ja
icebp
mov
pushl
add
movsb
gs
cltd
xchg
add
xchg
mov
testl
imul
jg
add
inc
movsb
fs
add
call
inc
mov
lret
in
jmp
xchg
bound
mov
sub
xchg
arpl
add
data16
mov
mov
popa
jbe
add
push
push
add
add
dec
dec
sbb
mov
pop
xor
add
or
cmp
add
mov
fstpt
mov
or
pop
sbb
add
rolb
mov
loopne
mov
rcl
jmp
pop
aaa
xchg
add
mov
pushf
and
rolb
mov
stos
push
loope
cmp
ja
push
mov
add
rolb
mov
add
add
rolb
mov
mov
add
lcall
add
out
loopne
mov
fdivs
jg
or
aaa
add
mov
adc
add
out
ss
push
add
add
sub
jp
cltd
jno
jns
xor
mov
fildll
mov
mov
add
add
cmpsl
data16
or
insb
aad
dec
mov
addb
lret
jmp
xor
xchg
push
mov
jno
cwtl
cmpsl
aaa
nop
add
pop
xchg
scas
xor
inc
xchg
ret
push
aam
aam
push
test
loope
inc
fmul
xor
add
add
or
xchg
fsubrl
add
and
jne
dec
push
sbb
hlt
jge
addr16
mov
mov
inc
add
mov
in
add
sub
mov
mov
popf
out
cmp
dec
fcmovne
cmp
mov
mov
pop
int
add
fisubl
jo
mov
insb
mov
pop
mov
daa
push
fildll
pusha
add
or
out
insb
sbb
push
mov
jl
pop
pop
mov
push
cmpsb
pop
addb
lods
sar
je
add
dec
lods
clc
imul
cld
adc
push
mov
mov
and
mov
xchg
mov
lahf
mov
mov
jle
iret
iret
sbb
push
cmc
repz
pop
inc
imul
test
mov
add
scas
addb
in
insb
adc
mov
mov
addl
add
iret
inc
mov
add
sbb
adc
popl
pusha
add
jnp
rcl
add
add
sub
gs
xor
lahf
in
aaa
xor
insl
sub
mov
mov
pop
cmpsl
hlt
test
mov
and
pop
and
mov
cltd
imul
repz
sub
inc
in
data16
out
rolb
cmp
jae
inc
cltd
adc
ss
es
sti
mov
stc
xchg
flds
mov
add
adc
mov
in
rolb
adcl
test
addb
pop
sub
movsl
push
mov
mov
das
scas
pop
ret
shll
add
mov
mov
cmp
call
add
adc
shl
lock
or
addb
push
jae
add
add
add
xchg
add
iret
aaa
insb
mov
xor
mov
mov
mov
pusha
add
stc
inc
add
or
mul
add
addb
cld
push
and
mul
mov
push
add
add
jns
jge
movsl
dec
in
add
pusha
add
fdivr
mov
std
cmpsl
cmpsb
dec
scas
in
xlat
sbb
mov
mov
mov
sbb
pop
pusha
add
mov
add
add
fsts
push
icebp
iret
mov
mov
push
jmp
add
mov
add
loopne
mov
mov
add
sbb
fstpt
inc
stos
xchg
adc
mov
push
test
cld
inc
or
mov
xchg
add
mov
add
add
add
and
out
fildll
imull
lods
cli
dec
jnp
dec
cmp
lret
loop
mov
rep
jae
cmpl
cmp
andps
dec
add
mov
mov
hlt
mov
add
std
cltd
lahf
adc
mov
pop
mov
mov
mov
mov
sti
aaa
fnstenv
xchg
adc
mov
test
mov
cwtl
xor
aas
add
add
mov
int
add
sbb
push
mov
das
lods
insb
mov
shrl
add
int3
add
mov
push
aaa
sub
mov
add
push
stc
mov
or
aad
cmp
cs
ffreep
in
sub
add
xor
mov
shll
mov
mov
leave
fiaddl
fadds
sti
mov
adc
mov
clc
cmp
xlat
jne
sub
sahf
push
mov
pop
jnp
sub
into
inc
inc
add
lret
inc
cmpl
and
add
mov
pusha
add
xchg
out
outsb
pop
jbe
add
pop
sbb
pop
cmp
jb
mov
xchg
sub
int
sbb
sbb
unpcklps
inc
subl
ret
ret
fsts
add
scas
iret
in
xchg
pusha
add
mov
sbb
add
stos
pop
jb
mov
cmp
push
sbb
repnz
mov
xor
add
mov
and
mov
mov
loop
mov
shl
subl
add
mov
add
xchg
add
test
fstps
pop
push
add
hlt
mov
mov
mov
mov
cmp
fs
inc
add
inc
add
sub
and
xchg
and
mov
xchg
dec
cmp
push
add
mov
and
mov
push
add
fsubs
add
mov
push
leave
loopne
mov
ret
mov
xchg
adc
mov
aam
add
add
cmpsl
pop
mov
aam
xor
mov
cmp
add
cmp
push
sbb
cld
cmp
fbld
add
mov
adc
aam
cmpsl
loope
xchg
jnp
imul
in
bound
mov
pop
push
pop
cs
add
dec
jl
mov
sub
add
add
dec
fisttpll
mov
sub
rcl
add
pop
push
out
ret
mov
daa
jns
out
sbb
inc
sub
insl
sbb
shll
gs
cs
and
test
cld
loopne
mov
or
in
push
popa
dec
stos
inc
add
or
popf
test
mov
add
mov
jmp
test
mov
shll
stos
jle
adc
notb
int3
shll
ss
add
add
outsb
sbb
addb
cmpl
push
aam
negl
mov
mov
and
fs
les
mov
or
lcall
adc
mov
cwtl
fldt
stos
and
js
movsb
addr16
push
push
jns
scas
dec
mov
add
push
lahf
and
mov
pusha
add
pop
add
mov
mov
enter
movsb
daa
pop
ds
cltd
fucomp
test
mov
in
add
jnp
pop
and
out
aam
pop
shll
xor
xor
add
mov
sahf
out
inc
shll
jno
jmp
lret
mov
or
jnp
aaa
xchg
add
mov
sbb
mov
add
mov
rolb
mov
add
add
add
sub
add
ret
mov
add
inc
xchg
dec
fs
ds
aaa
lret
movb
mov
or
int3
cs
sti
loope
mov
sbb
addb
out
cmp
cmpsl
out
imul
insl
jecxz
push
inc
add
lret
test
sbb
add
mov
cmc
adc
mov
mov
cmpsb
or
adc
mov
dec
sub
jmp
test
pop
mov
sarl
jns
add
jg
mov
scas
rolb
dec
leave
push
cmp
add
sbb
sahf
andl
ret
sbb
xorl
js
dec
les
push
add
mov
add
adc
ja
add
mov
mov
sbb
sub
cld
mov
gs
jae
adc
cmpsb
push
push
imul
lock
icebp
mov
jg
adc
cmp
mov
jno
push
add
popf
cwtl
jo
mov
test
mov
mov
jp
jnp
incl
std
mov
adc
pop
pop
out
mov
add
cwtl
pop
mov
dec
data16
mov
mov
add
inc
add
mov
push
add
push
inc
insb
outsl
in
add
xor
int
loop
mov
rolb
mov
fwait
jbe
jmp
mov
add
test
sahf
add
mov
mov
fisubrl
jmp
std
xchg
ss
cmp
shl
mov
mov
add
xchg
lods
std
cltd
gs
add
out
dec
imul
mov
lods
lds
add
add
iret
es
call
nop
add
and
mov
xlat
dec
sti
adc
mov
data16
push
and
dec
mov
cmp
or
add
insb
idivl
push
mov
add
add
dec
faddl
mov
push
mov
popf
les
add
mov
add
add
lds
fwait
xchg
jae
pop
std
hlt
mov
in
adc
sub
and
mov
fstps
cmp
sub
stos
stos
xchg
mov
add
enter
lds
inc
mov
and
outsb
sbb
jns
xchg
cmp
jno
or
testl
fninit
les
mov
pop
sbb
xor
or
mov
sti
notb
jg
insl
push
adc
lahf
stos
les
sub
mov
mov
xor
cmp
xchg
adcl
inc
test
test
mov
popf
mov
arpl
shrl
sub
xor
mov
ljmp
div
das
mov
mov
add
mov
dec
xchg
mov
dec
lret
mov
or
lret
add
add
cmpsb
pop
jnp
jge
inc
ret
mov
and
enter
add
mov
mov
or
cli
push
test
repz
mov
pushf
loopne
mov
das
mov
or
push
pop
or
loope
xchg
inc
wbinvd
rolb
mov
mov
inc
add
mov
sar
mov
sbb
mov
sbb
lret
mov
dec
adc
ret
sub
mov
sub
and
mov
roll
lods
pop
mov
add
mov
xor
mov
std
push
add
or
imul
and
mov
jnp
sub
push
mov
mov
mov
add
call
inc
cltd
xor
mov
add
cltd
stos
sub
fistl
add
dec
pop
ss
int3
lods
lock
jne
and
mov
mov
add
ljmp
jb
mov
dec
cltd
pop
cwtl
xchg
push
sbb
jecxz
fdivs
add
mov
pop
jmp
insb
mov
stos
insb
mov
mov
lock
jp
addb
jg
add
mov
mov
rolb
push
dec
mov
mov
add
in
cmp
mov
rolb
mov
stos
addr16
fisubrl
lret
ljmp
lea
add
cs
push
fstps
inc
mov
inc
add
popa
mov
fisubs
mov
mov
jge
add
xor
mov
add
dec
sbb
loopne
mov
int
or
and
and
mov
dec
cli
xchg
cmp
mov
cmc
mov
mov
addb
jle
jno
push
sub
add
rolb
mov
add
bound
mov
and
mov
add
jecxz
gs
add
dec
js
cmp
mov
mov
jae
mov
add
add
sbb
shll
test
and
or
add
mov
fnstsw
pusha
add
mov
jmp
ds
in
or
add
xor
push
mov
add
je
adc
pushf
outsb
add
cltd
in
cmc
pop
aam
ret
inc
dec
jmp
fisubrs
jmp
jb
mov
pushf
mov
cmpsl
and
mov
mov
addb
xrelease
fildl
out
jne
add
add
hlt
hlt
mov
inc
popa
popf
mov
mov
mov
divb
add
aas
pop
xor
mov
and
rolb
sub
lcall
xlat
test
fimuls
nop
add
stc
cmpsl
dec
mov
pop
jnp
cs
test
add
dec
mov
mov
mov
add
out
clc
imul
lcall
add
mov
xor
xchg
movsl
mov
mov
or
in
mov
xchg
mov
dec
sub
das
lcall
bound
mov
enter
sti
lret
mov
js
sbb
das
ljmp
and
imul
mov
pop
pusha
add
scas
addb
addb
jecxz
inc
in
insb
jb
mov
sub
callw
jbe
and
mov
jb
mov
filds
add
popf
pop
insb
lods
shrl
lcall
daa
inc
push
repz
negb
inc
mov
addb
dec
adc
mov
add
mov
insl
pop
xchg
cmpsl
cmp
cld
mov
add
jl
mov
mov
in
mov
pop
mov
out
mov
fildl
ja
into
xchg
aam
xchg
ja
adc
sbb
mov
ss
xlat
push
add
aaa
enter
daa
adc
enter
pop
mov
add
mov
xor
scas
push
mov
add
call
add
mov
imul
add
dec
mov
nop
add
mov
fsubl
out
push
int
jnp
sti
xchg
lret
lahf
dec
cs
add
ljmp
jb
mov
lcall
xchg
xchg
add
mov
mov
pop
pop
or
mov
mov
testl
movsl
pop
cld
mov
das
lahf
sti
aam
add
roll
negl
add
xchg
mov
outsb
or
pop
jl
add
mov
xor
sub
js
out
out
aam
test
xor
mov
lcall
xor
hlt
ljmp
aas
ret
sbb
imulb
scas
sub
push
test
xor
pop
or
hlt
test
add
mov
add
mov
inc
add
cmp
pushl
lds
into
lds
or
push
movsl
sub
add
adc
mov
das
fsubrl
mov
add
mov
adc
mov
mov
sarl
add
add
add
call
mov
add
sub
mov
mov
add
push
add
addb
push
add
js
add
mov
std
stos
outsl
rorl
add
out
or
das
sbb
adc
mov
hlt
dec
xchg
in
mov
fstpl
in
ret
fwait
cmp
add
add
dec
leave
into
push
push
dec
mov
mov
out
inc
dec
pop
mov
stos
idivb
loope
xor
mov
in
add
in
dec
idivl
dec
pop
jns
add
jmp
push
xchg
cld
and
movsb
fld
sub
mov
xor
mov
add
test
sbb
roll
add
xor
mov
lea
repz
jl
add
into
xor
mov
call
sbb
add
pop
test
jl
inc
add
add
push
jp
adc
xchg
test
add
enter
mov
xchg
add
add
push
inc
jle
add
pop
fs
enter
mov
out
inc
stos
push
loop
mov
inc
adc
xchg
lahf
out
add
dec
ja
or
lcall
dec
xorl
je
faddl
push
ret
add
xchg
add
jns
pop
mov
jl
or
rorl
and
out
mov
mov
push
shl
shl
mov
sahf
imul
add
in
inc
daa
mov
imul
dec
jmp
scas
or
fdiv
add
movsl
add
xchg
cmp
aas
mov
mov
cmp
jae
data16
cmp
ret
mov
repz
jle
jne
shll
ds
test
or
pusha
add
in
xor
mov
into
stc
cmp
je
pushf
divb
insl
dec
hlt
cwtl
pop
rorl
mov
pop
jmp
rcrl
add
loopne
mov
dec
mov
xchg
cmpsl
loop
mov
mov
mov
add
jecxz
push
call
cmpsb
ds
push
jp
xchg
lods
push
lfs
add
dec
mov
xchg
cmp
daa
or
mov
mov
xchg
outsl
leave
adc
sbb
sub
out
addb
mov
mov
inc
and
add
push
add
cmp
ret
push
jns
cmp
es
mov
dec
fs
ret
nop
add
imul
pop
rolb
mov
add
add
mov
popa
les
cmp
nop
add
arpl
jno
inc
sub
sti
fbld
add
scas
dec
jmp
and
xchg
add
add
mov
test
mov
xchg
leave
jle
leave
fcompl
xor
addr16
mov
mov
leave
repnz
mov
out
fwait
and
inc
pop
movsl
dec
mov
and
xchg
sub
inc
inc
push
ret
and
mov
dec
mov
inc
mov
test
popf
lock
pop
stc
fistps
push
push
je
or
mov
pop
mov
movsw
out
stos
cmp
mov
movsl
sahf
dec
add
fstps
cmp
mov
fwait
mov
mov
adc
sbb
mov
push
lcall
pop
scas
mov
mov
add
pop
dec
mov
mov
ficompl
inc
add
inc
ja
and
sbb
mov
sub
insb
push
aad
arpl
mov
mov
mov
mov
mov
je
out
xor
add
mov
pop
sbb
out
test
xchg
xor
mov
daa
jb
mov
out
shll
mov
add
pop
xchg
xchg
hlt
pop
mov
pushf
data16
cmp
sub
jl
add
mov
add
and
mov
daa
mov
jb
mov
and
aas
rolb
mov
add
fs
inc
add
ss
inc
adc
mov
pop
cmp
mov
inc
jle
jge
cli
lock
add
add
pop
jmp
bound
mov
pop
mov
cmpsb
push
push
addb
mov
data16
sbb
add
xchg
add
mov
push
call
rolb
mov
jne
in
or
icebp
lds
shll
mov
inc
mov
popf
xchg
or
add
movsb
cmp
pusha
add
or
mov
add
fidivs
cmp
cld
call
fistpll
xor
mov
or
push
mov
ret
jmp
aas
movsl
push
add
push
mov
mov
test
add
mov
ljmp
lods
ljmp
clc
rolb
mov
ss
or
ljmp
pushf
sub
inc
dec
sbb
stc
mov
stc
cmpsl
iret
mov
add
mov
cmp
mov
jns
add
mov
mov
adc
jns
leave
aaa
mov
jne
pop
lds
lock
add
mov
add
mov
fucom
add
xor
jbe
jns
adc
mov
xchg
sub
push
push
ret
pop
xor
adc
mov
imul
adc
mov
outsb
inc
repz
mov
or
in
icebp
ds
pop
push
inc
jo
mov
lock
imul
add
sbb
lock
mov
out
jo
mov
mov
mov
mov
pop
scas
cmp
dec
or
add
out
push
push
jmp
xlat
adc
rolb
stos
pop
mov
cld
mov
mov
fstl
sahf
mov
add
mov
add
rolb
mov
in
inc
add
cmp
lds
cmp
cs
or
lret
jmp
xchg
outsb
mov
dec
lods
lods
dec
dec
shrd
addb
cmpsl
jl
arpl
mov
pop
or
fstps
enter
add
lret
push
jbe
mov
addr16
add
adc
jp
pusha
add
mov
add
mov
or
addb
fsubl
jne
fldcw
jecxz
mov
add
mov
push
jns
std
cmp
stc
into
fucomip
mov
cwtl
or
xlat
mov
push
inc
lret
outsl
adc
fwait
outsl
loopne
mov
and
ds
mov
add
mov
addb
movsl
mov
test
add
outsb
push
mov
sbb
add
add
mov
into
movsl
ljmp
imul
adc
iret
std
jnp
into
in
cld
inc
add
dec
jle
pop
and
mov
lds
or
fidivrs
sbb
jge
iret
pop
or
push
nop
add
mov
mov
fldl
jg
aas
fsubr
fstpl
add
xor
mov
outsl
and
mov
mov
and
mov
loope
aas
push
add
jnp
add
movsl
popa
iret
or
push
test
mov
icebp
push
or
add
add
dec
dec
cmp
pop
adc
adc
mov
mov
mov
add
mov
adc
xchg
jle
mov
xor
hlt
outsl
js
cmpsb
cmp
pop
in
adc
popf
test
mov
xor
mov
sub
push
repnz
mov
pop
cli
loope
push
jl
insb
mov
clc
mov
in
jno
aad
cli
jo
mov
sbb
mov
rcll
mov
pop
adc
push
add
mov
addb
adc
or
ret
add
arpl
cmp
jae
add
ret
jg
cmp
scas
inc
mov
cmp
fdivl
aam
push
pop
mov
aas
push
arpl
sbb
sub
addb
mov
mov
ss
mov
add
in
rolb
rcll
add
adc
mov
loop
mov
or
mov
jns
sub
add
ficompl
xor
mov
mov
cmp
test
gs
movsb
rolb
mov
xor
mov
mov
pop
shrl
lahf
pop
dec
sbb
adc
mov
sbb
xchg
jg
das
and
mov
push
data16
fstps
xchg
mov
pop
jo
mov
dec
mov
mov
out
add
jmp
jmp
add
mov
sti
cwtl
xor
mov
add
sbb
add
cld
jl
add
mov
pop
sub
js
arpl
add
lods
leavew
mov
mov
icebp
test
jp
pop
push
jmp
mov
mov
loope
add
dec
scas
pop
stc
dec
xchg
push
addb
mov
dec
mov
push
fmull
icebp
mov
cmp
pushf
sub
aaa
imul
out
xor
mov
div
sarl
pop
loop
mov
add
pop
repnz
in
xchg
mov
lret
arpl
xchg
les
cld
cmc
xchg
lcall
jecxz
in
adc
push
mov
das
pop
sbb
cltd
sub
xchg
rolb
mov
loop
mov
cmpsl
pop
push
mov
mov
int3
sbb
jmp
pop
dec
and
rolb
mov
jae
add
dec
mov
add
mov
repz
add
pop
xchg
mov
mov
mov
xchg
xorl
inc
xchg
add
ljmp
dec
push
add
add
mov
adc
mov
push
cmp
add
mov
das
mov
mov
stos
movsb
dec
div
adc
mov
adc
mov
mov
ss
sub
push
cld
addb
mulb
mov
jb
mov
mov
popa
push
or
or
jmp
ds
cltd
mov
cli
hlt
int3
ds
lods
or
bound
mov
add
dec
aad
fidivl
test
int
mov
cmc
jge
dec
xchg
sub
rolb
mov
mov
xchg
mov
test
pushf
jo
mov
push
movsb
fcomps
push
add
xlat
mov
addr16
add
mov
pop
popf
jno
sbb
enter
mov
mov
lret
das
push
push
sbb
xor
fldl
push
sbb
push
push
dec
add
mov
add
mov
and
mov
add
jo
mov
jmp
cs
inc
or
mov
fidivl
add
sub
add
mov
fidivrl
pop
js
xor
lods
xor
mov
xor
cmpsb
and
push
push
rolb
pop
pusha
add
sti
icebp
xchg
je
movsb
pusha
add
or
mov
lea
add
lcall
xchg
jbe
ds
es
or
add
fistps
mov
addr16
and
mov
xchg
cwtl
inc
add
add
leave
mov
mov
pop
jno
addb
push
xchg
add
add
mov
push
xor
mov
xor
mov
cmp
pop
xchg
loope
sub
add
mov
mov
mov
add
inc
dec
jno
mov
fisttps
out
sbb
ja
mov
mov
xchg
add
mov
fidivl
xor
mov
out
dec
insb
data16
push
cmc
or
mov
je
add
add
mov
add
cmp
push
add
gs
iret
or
jno
adc
add
movntq
add
lea
aaa
push
jg
add
xchg
inc
mov
push
inc
scas
adc
pushf
into
cmp
mulb
test
mov
add
lods
in
rolb
mov
mov
push
push
push
js
add
jae
adc
add
add
jg
dec
xchg
mov
mov
insl
mov
js
mov
pop
in
in
sub
cmp
push
add
mov
ja
pop
cmp
mov
xchg
lock
mov
push
add
ja
add
or
daa
mov
mov
negb
and
push
xchg
add
dec
push
sbb
std
stos
loopne
mov
xchg
add
mov
sbb
imul
mov
push
pop
inc
push
imul
cmp
adc
fcos
insb
mov
movsb
dec
popa
leave
es
jmp
rcl
cmp
add
pop
push
add
cld
cltd
loop
mov
jno
popf
out
int
xchg
pop
jge
outsl
mov
dec
cli
imull
mov
add
add
lcall
mov
ds
lea
add
mov
lods
js
mov
rolb
or
leave
in
mov
mov
mov
and
add
mov
fcomps
mov
pop
leave
cmp
push
mov
sbb
ficoms
mov
add
mov
in
xchg
adc
mov
sub
mov
jo
mov
dec
jecxz
movl
rolb
mov
push
stos
das
add
mov
fstpt
ljmp
or
iret
dec
mov
add
add
mov
jb
mov
test
xchg
mov
push
rolb
lock
inc
add
lahf
loop
mov
out
sub
mov
jbe
add
add
add
mov
fildl
lcall
adc
xor
mov
push
add
fcomi
add
xor
aad
outsl
gs
jg
scas
imul
rolb
mov
mov
lahf
lea
dec
xor
mov
mov
loop
mov
add
insl
add
fisttps
xchg
lods
push
pusha
add
fsubs
sbb
sbb
cli
xor
mov
mov
addb
adc
mov
xchg
scas
cmp
add
adc
mov
das
pusha
add
hlt
push
mov
mov
add
jle
add
push
push
xchg
push
add
mov
push
push
add
addb
sub
rolb
mov
jno
xchg
add
mov
test
dec
shll
cli
nop
add
jo
mov
jbe
add
mov
es
add
cmc
addb
lods
ljmp
push
arpl
rolb
faddp
add
arpl
ret
xor
ja
fistps
lods
xor
add
add
rcll
add
sbb
jmp
addr16
sbb
pop
jns
cmp
je
jnp
adc
mov
shll
sbb
or
mov
jns
add
fcompp
add
inc
adc
xor
mov
add
add
scas
xchg
cld
push
pop
jne
add
ds
add
xor
incb
lock
out
cmp
pop
jo
mov
jmp
jmp
pop
rolb
mov
mov
imul
lret
cmp
add
xor
je
xrelease
mov
int3
stc
or
out
es
pop
rorl
add
mov
add
std
add
mov
mov
push
test
pop
imul
add
mov
lea
mov
pop
call
out
push
and
cltd
sbb
loope
push
inc
ret
repz
dec
push
or
fwait
adc
add
insl
test
inc
mov
adc
or
lds
and
inc
and
mov
xchg
lods
in
pushf
sub
cmc
scas
and
mov
jle
in
or
add
out
xchg
int3
mov
add
add
mov
mov
int
clc
push
aaa
lret
or
jle
addb
cld
mov
mov
cli
inc
add
pop
or
adc
test
push
call
mov
or
std
popf
mov
fwait
adc
mov
cmp
inc
add
mov
mov
test
push
add
loope
aaa
orl
jge
repz
add
repz
pop
fcmovne
out
test
leave
and
pop
sub
je
mov
xchg
ret
add
ficoms
add
aad
add
pop
add
mov
cmp
mov
inc
jbe
and
jle
add
adc
loope
fistpl
xchg
dec
popf
cmpl
inc
add
mov
scas
decb
inc
sbb
push
outsl
and
pushf
rcrl
mov
mov
loope
push
hlt
xor
mov
sub
fs
sub
mov
inc
push
mov
push
in
int3
inc
mov
add
and
out
mov
iret
mov
test
addb
sbb
cmp
pushf
and
lds
mov
cmp
mov
push
mov
add
fldenv
jle
sub
and
mov
xchg
test
rolb
mov
sbb
cs
scas
out
push
popf
push
add
and
adc
mov
mov
mov
scas
rol
add
add
pop
pop
lahf
xchg
add
push
sub
dec
fdiv
add
mov
jno
pop
pop
mov
xor
push
add
fildll
add
icebp
in
pop
cmpsb
out
in
mov
add
cmp
cmp
push
into
xchg
xor
add
setbe
aam
adc
jns
dec
and
sahf
imul
movsl
ret
aas
sbb
addr16
push
add
add
cmp
add
mov
cmp
imulb
sahf
rolb
xor
mov
dec
inc
xor
mov
jp
data16
push
ljmp
jge
faddp
aaa
lods
cmpl
inc
adc
adc
rolb
push
pop
pop
insl
and
add
int3
push
add
lock
cli
mov
jbe
int3
dec
dec
popf
pop
mov
dec
cmp
into
mov
inc
loope
xlat
repnz
out
aad
cmp
push
pop
shll
xchg
mov
daa
stos
icebp
sbb
pop
ss
data16
in
add
fstl
add
jns
mov
add
pop
and
setg
mov
sub
mov
mov
mov
adc
ss
fwait
aam
adc
push
cmp
fisttpll
add
test
insl
sbb
pop
or
loop
mov
mov
out
jecxz
imul
add
mov
fwait
push
push
xlat
fwait
repnz
push
add
fstpt
jg
add
ss
xor
or
adc
or
mov
rolb
mov
pop
mov
xchg
repnz
push
mov
add
loope
push
jp
enter
outsl
cmp
mov
mov
add
call
in
xchg
jp
add
add
mov
mov
mov
mov
in
sti
cmp
adc
inc
leave
inc
imul
and
and
mov
pop
add
xor
jnp
dec
stc
sub
add
pop
mov
mov
jo
mov
in
scas
out
lahf
mov
repnz
mov
adc
mov
pop
fmuls
pop
int3
aaa
jne
add
add
neg
sbb
jmp
sti
inc
mov
push
cmc
pushf
lods
faddl
ret
push
in
ja
loopne
mov
xor
mov
fstps
nop
add
lret
add
test
ja
mov
sbb
mov
cmp
inc
daa
cs
push
movb
add
test
mov
addb
addl
insb
cmpsl
popf
daa
xor
mov
mov
add
in
mov
add
adc
mov
leave
lods
mov
popa
push
scas
or
inc
pop
and
mov
sbb
jge
xor
out
addr16
add
rolb
mov
shll
sbb
cmp
ljmp
mov
mov
int
ds
jno
rdmsr
add
out
jno
pop
and
das
lahf
loopne
mov
adc
mov
jbe
add
jmp
xchg
add
mov
add
mov
cmp
stos
xchg
icebp
imul
mov
scas
js
push
xchg
insl
aam
xchg
add
addb
icebp
and
cmp
imul
fiadds
add
outsl
lret
pop
mov
add
mov
mov
imul
add
fwait
stc
sahf
ds
sub
or
dec
push
out
add
mov
in
mov
xlat
sub
xchg
add
add
fwait
xchg
sbb
xchg
sahf
jb
mov
outsl
cmpsb
jp
xor
sub
push
hlt
js
add
mov
mov
add
in
dec
cs
in
cli
xchg
stc
pop
jnp
push
lret
mov
jle
add
add
add
mov
aaa
clc
lahf
fidivs
pop
and
mov
push
gs
lock
fs
add
adc
mov
aam
imul
hlt
pop
xchg
mov
sub
inc
fidivrs
sub
dec
fwait
loopne
mov
mov
add
mov
mov
lock
sub
shll
pop
or
imul
adc
mov
lods
xor
loopne
mov
add
add
insl
addb
stc
cmc
add
mov
fcoml
inc
add
inc
das
aam
add
divb
inc
mov
jecxz
mov
and
in
repnz
sbb
add
jne
insl
adc
mov
rolb
mov
jmp
rolb
mov
test
mov
pop
sbb
pop
mov
int3
inc
popf
jnp
add
mov
add
pop
sub
and
mov
push
add
mov
add
inc
inc
jbe
mov
outsb
mov
lcall
mov
mov
sti
lret
shll
into
jne
xor
mov
or
sbb
rcll
add
xchg
into
xor
mov
inc
add
add
mov
xchg
inc
test
hlt
paddw
in
filds
repz
jmp
lea
mov
loop
mov
sub
movsb
inc
add
sub
cmpsl
aam
stos
rolb
mov
pop
loope
pop
js
add
cmpl
mov
outsl
mov
push
push
lods
popf
dec
ss
scas
stos
sub
mov
jecxz
push
add
mov
outsb
jno
cmp
ss
inc
pop
inc
mov
xchg
pop
imul
test
dec
push
add
mov
ljmp
and
add
in
add
rcrl
call
mov
and
int3
or
pop
flds
and
jns
negl
rolb
mov
inc
jp
pop
jge
repnz
jmp
mov
mov
mov
cmc
sbb
mov
inc
je
es
mov
mov
mov
mov
push
and
mov
cmpsl
idivb
adc
lcall
add
push
out
xchg
test
add
adc
mov
popf
fcoml
add
mov
push
sti
bound
mov
dec
dec
decl
push
dec
jae
mov
shrl
lods
fcmovnbe
out
fmuls
fidivs
inc
xchg
xchg
sub
lods
jae,pn
mov
adc
sar
outsb
push
fcomps
insl
mov
jp
fimull
jmp
xchg
fsubs
sub
xlat
push
add
xchg
mull
fadd
add
jbe
aam
cld
loope
and
andl
sub
mov
pop
xor
mov
add
mov
aam
xchg
in
xchg
leave
mov
mov
stos
mov
cs
add
pop
in
add
xor
mov
cmp
cmp
in
cmp
hlt
xor
mov
mov
xchg
add
mov
gs
int3
jnp
add
mov
pop
sbb
mov
lods
fwait
mov
rcll
scas
jne
add
mov
mov
add
mov
inc
add
orl
int
adc
fs
test
test
fwait
stc
lea
jecxz
adcl
or
dec
out
cmc
addb
test
std
scas
ss
out
sbb
ljmp
fwait
sbb
mov
inc
add
add
mov
cmp
sbb
cmp
scas
add
or
dec
enter
push
test
dec
loop
mov
xor
addr16
add
mov
imul
das
or
test
add
xchg
mov
jbe
jecxz
repnz
jae
add
add
jo
mov
daa
sub
pop
xchg
mov
lds
outsl
adc
mov
cltd
add
shrl
cmpsl
mov
push
sub
add
and
mov
dec
lods
pushf
jne
pop
hlt
mov
mov
mov
mov
jge
sbb
mov
mov
jle
cs
mov
shll
mov
add
cmpsb
test
daa
and
add
test
xor
add
pop
mov
call
xchg
add
add
inc
div
xor
mov
mov
mov
add
movsl
or
add
dec
xchg
fs
inc
add
std
loop
mov
loopne
mov
xor
lds
mov
mov
pop
dec
jo
mov
push
std
in
jo
mov
mov
addl
add
mov
add
mov
mov
nop
add
jecxz
lret
xchg
add
icebp
lret
jl
loop
mov
cmp
cmp
and
fcomip
pop
in
jge
add
mov
lds
xchg
xchg
jae
mov
mov
jnp
les
test
sbb
inc
add
fdivrs
push
push
adc
divl
push
add
cmpsl
pop
pop
fiadds
mov
into
aad
insb
jecxz
sbb
cmp
jnp
add
mov
mov
xchg
and
filds
lret
pop
xchg
aas
and
ljmp
in
cmp
stos
dec
cmp
jno
dec
sub
pop
out
sarl
cmp
enter
je
scas
sub
arpl
idivb
movsl
dec
imul
sahf
xor
mov
add
in
cltd
push
adc
mov
fmuls
mov
push
and
mov
or
movsb
inc
aas
loop
mov
iret
scas
fnstenv
rorl
add
add
mov
jecxz
loop
mov
mov
sbb
mov
mov
mov
into
fwait
inc
sub
add
mov
test
loop
mov
add
add
push
gs
jbe
mov
in
out
addb
jae
add
inc
aam
fs
add
mov
aaa
not
lret
add
mov
cmpsb
jb
mov
add
repz
and
aad
notl
pusha
add
test
add
add
dec
call
mov
out
sub
mov
mov
mov
mov
in
loope
mov
adc
aas
xchg
cmp
addb
testb
lock
scas
push
jmp
sbb
cmp
mov
push
mov
dec
arpl
out
mov
mov
je
or
push
inc
inc
ljmp
lea
dec
add
mov
popf
jne
pop
pushf
sti
or
cmp
pop
ficoml
hlt
pop
int3
sub
iret
xor
mov
adc
fistps
add
fidivrl
or
outsl
jecxz
das
std
sbb
mov
sar
mov
jecxz
cmp
xchg
add
test
scas
mov
lods
jo
mov
clc
sub
jnp
adc
mov
sahf
jno
shr
fdivs
pop
sub
movsl
mov
shll
pusha
add
in
leave
lock
add
cld
mov
popl
shl
mov
sbb
add
mov
add
idivb
cltd
and
icebp
pop
sub
add
pop
into
xor
xor
rolb
mov
cmp
xlat
cmc
cwtl
pop
adc
xchg
loopne
mov
add
mov
enter
mov
adc
mov
jb
mov
sbb
mov
clc
push
pop
adc
mov
rolb
mov
icebp
daa
sbb
add
cwtl
jo
mov
int
mov
lahf
dec
out
push
add
iret
lcall
mov
lcall
insl
and
add
pop
dec
sbb
mov
push
sub
arpl
add
movsb
or
and
add
add
mov
ficoml
add
pop
ds
shrd
jecxz
enter
cmp
popa
rolb
fimuls
xchg
cmpsl
aaa
xchg
loop
mov
arpl
lret
dec
ljmp
sti
frstor
out
push
jnp
mov
loope
rolb
mov
and
hlt
mov
jo
mov
and
mov
repnz
mov
mov
fdivs
and
mov
addl
rolb
mov
add
cmc
and
sti
pusha
add
adc
mov
adc
mov
adc
mov
daa
or
sbb
enter
mov
mov
test
dec
imul
sub
mov
add
add
mov
cmc
pop
mov
mov
xor
lods
dec
mov
dec
and
mov
mov
add
in
xor
mov
movsb
xchg
bswap
ret
inc
pushf
pop
popl
out
scas
push
aad
dec
inc
add
pop
into
or
inc
sub
lret
scas
data16
dec
inc
popa
fxch
cmovnp
stos
push
or
incl
xor
imul
stc
movsl
sarl
ja
cmp
mov
mov
add
mov
fnsave
popf
pop
or
lret
ds
lahf
arpl
add
jns
sub
test
ss
andl
pop
aam
inc
mov
or
add
mov
stos
mov
ljmp
add
add
xchg
dec
xchg
loop
mov
fists
mov
mov
adc
xor
xchg
cmp
pushl
jno
rolb
imul
pop
popf
inc
rolb
or
mov
mov
mov
cmpsb
stos
mov
xlat
jo
mov
out
pop
cmp
xlat
xchg
shll
ss
cmc
push
push
fwait
xchg
dec
ss
sub
cmpsb
jns
xchg
add
xor
mov
mov
clc
mov
push
repnz
mov
imul
mov
add
jno
jns
add
inc
movl
jp
jne
cmc
sbbl
add
pusha
add
mov
mov
dec
lret
mov
clc
cmpsl
lds
pop
adc
mov
xor
mov
dec
jecxz
call
jnp
push
push
insl
add
lret
movsl
mov
outsl
les
inc
adc
addb
lods
adc
rolb
mov
inc
add
adc
add
sbb
jno
dec
sti
mov
mov
mov
add
ficoms
aam
sbb
add
add
pop
sub
icebp
test
mov
jne
mov
ja
mov
sbbl
push
aam
add
cmp
mov
idiv
cld
out
push
add
jb
mov
loope
mov
test
aas
iret
pop
pop
lcall
xchg
add
fstl
mov
clc
aad
cmpsb
lods
xchg
roll
add
inc
aaa
ficompl
cltd
lret
mov
mov
data16
add
mov
pop
loope
mov
jb
mov
aas
stos
les
mov
mov
add
xor
mov
add
xor
push
add
imul
inc
test
sahf
lds
add
pop
add
mov
shl
jl
js
push
mov
mov
leave
mov
jp
cmp
cwtl
inc
add
dec
pop
arpl
or
add
push
add
and
mov
add
or
mov
xchg
inc
loope
lock
inc
lds
stc
fsubs
push
add
push
mov
mov
cmpsl
sbb
mov
cmp
nop
add
insl
fsts
nop
add
add
jmp
pop
call
mov
popf
mov
add
mov
jo
mov
cmpsl
adc
jmp
dec
scas
xchg
fcoms
mov
faddl
mov
mov
sub
dec
test
hlt
into
aaa
push
push
jl
adc
mov
sub
fisubl
stos
addr16
adc
cli
addb
sti
push
lods
in
adc
mov
push
xchg
outsb
fwait
jbe
mov
aad
sbb
mov
mov
std
dec
and
mov
xor
mov
aad
enter
mov
mov
sbb
add
mov
sbb
mov
xlat
cmp
lahf
jge
sbb
jp
adc
mov
fisttpll
mov
push
xchg
xor
in
out
push
and
ljmp
pop
and
push
push
inc
sub
insb
adc
sbb
mov
adc
mov
mov
add
pop
jecxz
dec
jmp
popa
or
adc
cmp
mov
or
inc
addb
aam
sbb
jnp
and
mov
inc
cs
push
rcrl
add
mov
inc
add
mov
les
cmp
push
xor
xchg
sub
jns
mov
add
add
jae
mov
or
mov
and
lahf
div
or
addb
lods
and
mov
rcll
cmp
dec
dec
and
push
nop
add
mov
lods
add
mov
xor
mov
add
add
inc
add
xor
mov
mov
in
icebp
fcoms
cmp
add
inc
bound
mov
lds
addb
imul
cmc
outsl
and
cmp
fildl
out
xchg
mov
xchg
add
sbb
jp
aam
add
bound
mov
push
addl
les
sahf
insl
testb
jne
sub
in
aas
or
shr
mov
or
add
ds
sbb
add
push
mov
mov
add
push
or
mov
add
jbe
sub
mov
push
enter
mov
movsl
mov
rolb
mov
add
fildl
adc
mov
add
mov
in
jo
mov
mov
jecxz
add
push
addb
addb
insb
sub
pop
cmp
stos
dec
pusha
add
outsb
add
mov
test
popa
outsl
mov
lock
lock
jae
and
and
add
mov
enter
les
inc
add
cmpsb
and
dec
adc
mov
jno
add
cmp
add
xor
loopne
mov
sub
add
xor
inc
push
and
out
test
add
add
mov
scas
adc
popl
ret
cmpsb
repz
sbb
jmp
sbb
sub
fstps
loope
add
rolb
mov
add
cmc
in
movb
mov
sti
or
pop
xor
mov
sbb
jno
jne
call
mov
nop
add
xor
mov
in
xor
xchg
lcall
rcr
outsb
lods
in
fdivrl
cli
add
or
adc
int3
fistpl
sub
add
jecxz
leave
xchg
fsubr
push
cmp
add
fwait
xor
or
lret
shll
and
mov
movsb
xchg
loop
mov
mov
mov
add
xchg
ficompl
sbb
lock
dec
out
cmp
int
add
mov
ja
loopne
mov
add
jb
mov
mov
pop
clc
sahf
aaa
adc
mov
mov
cmpl
sbb
jp
aaa
ret
test
inc
add
add
xchg
rolb
mov
jae
push
sbb
add
in
out
pop
movsb
jnp
fsubr
es
jno
int
std
rolb
roll
mov
sub
idiv
stc
sbb
imulb
mov
mov
xor
add
shll
or
sub
xchg
ja
addl
mov
add
data16
mov
cmp
inc
add
addr16
mov
xor
mov
xor
jne
cld
sub
add
loopne
mov
add
lahf
jo
mov
icebp
lods
mov
dec
je
xor
cld
mov
fs
mov
lcall
push
rolb
mov
les
push
and
mov
xchg
cs
iret
sti
rolb
mov
and
dec
cmpsb
lods
pop
cli
repz
add
add
xchg
xchg
sahf
pop
xchg
add
stos
and
imul
xor
mov
jmp
add
mov
xchg
into
test
fcomps
jno
iret
mov
add
cld
sbb
mov
xor
mov
sub
and
in
pop
mov
mov
rcr
mov
sbb
mov
int3
inc
cld
adc
inc
add
stos
or
int
add
fcompl
sbb
push
sbb
je
out
addb
ret
icebp
dec
inc
sbb
add
add
popf
call
pop
pop
fidivs
aaa
cmp
jg
add
gs
dec
rcrl
dec
fstpl
or
pushf
adc
push
mov
insb
dec
dec
mov
mov
mov
pop
jns
jae
add
out
sub
mov
add
call
jae
add
mov
into
sub
sub
mov
lods
sti
adcl
mov
hlt
mov
mov
mov
add
mov
inc
test
mov
add
