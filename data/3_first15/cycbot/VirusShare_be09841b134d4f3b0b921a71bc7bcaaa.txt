fwait
neg
dec
mov
jmp
ret
xchg
rorl
and
lret
push
test
add
ret
dec
out
jne
fstl
add
and
mov
popf
xchg
aad
jmp
add
dec
xchg
add
add
add
add
add
push
mov
hlt
add
mov
sahf
and
mov
xchg
add
add
std
xor
inc
xor
adc
je
jl
std
in
mov
add
add
sbb
jne
adc
mov
ljmp
sbb
add
rolb
jno
dec
call
pop
dec
inc
add
fwait
and
mov
out
xchg
in
xor
cs
ja
cmc
mov
repnz
popf
fcomp
adc
jl
add
add
mov
fs
add
test
mov
mov
dec
lea
jle
xlat
adc
test
add
push
add
jo
sub
add
xor
hlt
add
rolb
add
mov
push
movb
mov
add
cmc
ret
ljmp
test
xor
std
aad
or
add
jb
mov
lds
popf
xor
xchg
repnz
mov
add
movsl
add
aaa
pop
inc
add
int3
or
add
cmpsl
mov
or
add
add
mov
add
dec
int3
pop
sbb
ret
cmpsb
add
nop
add
pop
mov
mov
sbb
mov
jb
mov
jecxz
add
cmp
and
cs
and
mov
xchg
push
add
add
and
mov
rolb
xchg
dec
add
pop
sub
add
loope
lock
add
ret
add
jecxz
lods
add
add
dec
popf
sbb
add
ljmp
sbb
add
out
clc
push
add
mov
mov
loope
ja
pop
in
sub
add
rolb
scas
call
add
ftst
add
mov
push
popa
dec
lea
cmp
add
testb
add
add
add
je
sahf
jp
jb
dec
mov
jg
popf
cmp
int3
cmp
and
mov
dec
dec
xor
dec
sub
lods
pusha
add
inc
hlt
add
add
das
sahf
adc
xor
add
dec
incl
push
mov
add
fwait
imul
ds
xchg
cmp
mov
xor
addr16
add
add
test
and
add
aad
int3
sub
inc
rolb
leave
daa
mov
xlat
pop
pop
in
mov
addb
jbe
add
les
inc
fistpl
push
jg
add
and
mov
and
aaa
adc
cmpsl
popa
or
add
add
add
add
mov
add
push
add
aad
add
dec
repnz
push
add
cltd
or
out
aam
add
push
jae
sbb
jecxz
add
mov
and
mov
cmp
push
add
stos
add
mov
add
pop
clc
mov
jnp
mov
adc
xor
dec
add
inc
add
mov
scas
and
add
cmp
pop
pop
cli
mov
add
cmp
jae
pcmpgtw
push
mov
inc
data16
dec
add
lods
movsb
add
add
leave
mov
add
sbb
push
in
jg
inc
add
insl
push
add
add
ja
popl
push
add
xor
add
jne
add
enter
bound
mov
or
movl
add
add
jae
leave
repnz
mov
xchg
inc
repnz
mov
xchg
lea
add
xchg
shll
sub
test
loope
mov
scas
jbe
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
test
mov
add
pop
add
add
pop
rolb
inc
add
or
add
gs
xor
icebp
scas
aam
lret
popf
xchg
add
shr
jne
inc
add
add
mov
add
mov
add
addb
add
xchg
add
sbb
aam
adc
movsb
add
arpl
mov
popa
std
mov
xor
pop
ds
sbb
cmc
pop
fildl
bound
mov
dec
jge
cmp
cltd
es
add
add
add
add
push
add
jbe
enter
sbb
add
add
add
xchg
cmp
add
sub
in
daa
sbb
mov
pop
xchg
mov
add
xlat
sub
clc
jne
add
cmp
add
add
sbb
jg
mov
mov
add
mov
add
lds
shr
lret
stos
lret
pavgb
jg
push
add
add
add
push
data16
int
add
out
add
add
sahf
fisubrl
jbe
sbb
add
inc
add
inc
sbb
stc
or
add
push
jb
inc
add
testb
jmp
add
sub
in
inc
add
add
loope
add
add
jns
ds
insl
cwtl
xchg
loopne
ja
jne
sbb
out
ret
aad
add
stos
sub
xchg
mov
gs
push
dec
fisttpl
add
shrl
add
add
add
nop
add
lcall
dec
es
push
cs
push
dec
ja
add
add
addb
or
mov
lahf
lcall
lods
pop
dec
vpslld
pushf
cmp
cmp
sbb
loope
jnp
mov
out
pop
pop
das
clc
jl
xchg
add
in
popa
push
add
mov
and
mov
add
data16
jb
xor
lea
testb
add
add
sbb
pop
or
pop
xchg
xchg
add
xor
lahf
adc
lock
cmc
mov
mov
mov
cli
mov
add
imull
jle
jae
sbb
mov
pusha
add
add
mov
add
testb
xor
pop
aaa
jo
xchg
mov
repnz
add
and
pop
gs
add
jp
aaa
push
cld
push
add
add
repz
jle
add
inc
or
cwtl
fisttpll
gs
sbb
repnz
add
push
test
mov
add
jne
add
arpl
sar
out
sti
pop
push
add
add
mov
in
push
add
cmp
add
cmp
ja
popf
dec
and
mov
arpl
stos
mov
fldt
xchg
ret
add
pop
stc
xor
les
test
add
mov
pop
jl
dec
cmpsl
push
add
inc
sub
mov
adc
lahf
icebp
fdivrl
xlat
lods
cmp
sbb
add
sub
xchg
add
add
leave
sbb
push
push
add
sahf
mov
add
popf
addb
mov
out
add
gs
ret
pop
lret
movsb
add
aam
mov
cwtl
out
xor
add
ds
lock
dec
les
iret
test
insl
and
push
mov
add
pop
lcall
sub
outsb
jge
or
add
mov
jno
mov
fidivs
sbb
sarl
xchg
aaa
xchg
add
pop
testb
cmp
jnp
addr16
outsb
inc
add
test
fcomp
nop
add
test
xor
call
sti
cwtl
add
movsl
sahf
out
adc
inc
mov
lcall
xor
mov
ds
addb
aam
sbb
sbb
lds
push
add
add
xor
aaa
ja
dec
adc
fistl
into
cmpsl
mov
movsl
sub
mov
les
jns
xor
test
inc
mov
sub
add
int
cli
insl
add
imul
mov
loope
sub
add
add
push
addb
out
mov
insl
mov
jbe
lds
mov
mov
xor
dec
xor
pop
pop
rolb
addb
and
insl
clc
in
fdivs
and
mov
add
add
add
add
cmpsb
add
in
or
and
je
addr16
pop
je
xchg
pop
mov
add
mov
adc
stc
loope
ret
les
aam
dec
stos
shl
pushf
pop
pop
je
pop
ret
fildl
add
imul
sbb
dec
jecxz
add
add
das
sub
xchg
in
push
add
hlt
add
add
int
fsub
add
mov
adc
out
mov
rolb
push
add
mov
sub
sbb
mov
pop
daa
nop
add
inc
add
mov
jle
daa
pop
icebp
cmp
push
add
aad
add
adc
add
add
sbb
adc
call
add
add
sbb
test
mov
aad
pop
xchg
add
inc
adc
ja
xchg
add
adc
add
add
cli
mov
mov
add
outsb
int3
inc
add
add
sub
add
mov
add
inc
movsl
cmpsb
add
xchg
lods
cltd
pop
push
jmp
add
add
jecxz
lods
dec
mov
lret
roll
mov
add
pmaddwd
aad
add
sub
mov
add
jmp
mov
add
add
xchg
add
test
push
push
mov
ljmp
aad
add
add
mov
fcompl
xchg
add
ret
add
add
add
xor
decl
mov
int
mov
pop
testl
push
test
fisubrs
xor
adc
mov
add
and
mov
mov
lret
daa
mov
add
std
sub
jg
in
sbb
sub
data16
add
add
add
sarl
add
or
cli
xor
mov
lock
or
add
add
mov
and
mov
add
dec
daa
cmpl
stos
jecxz
je
dec
stos
addr16
rolb
and
mov
mov
sarl
add
xchg
add
push
and
pop
loopne
cmp
mov
pop
cltd
es
sub
fsts
xchg
add
add
addb
add
add
sti
jbe
aad
int3
lret
sbb
aad
mov
stos
jns
aad
mov
in
add
mov
lea
aad
stc
or
xchg
aad
add
imul
mov
xchg
add
pop
or
add
rep
aam
aam
jns
fbld
mov
jne
add
inc
add
repnz
add
xor
add
lret
test
jmp
rolb
into
xor
pop
fsubr
mov
fstl
add
das
mov
mov
mov
std
scas
and
cmp
jno
mov
add
mov
in
pop
gs
xorl
push
push
rolb
add
iret
scas
fistps
jg
add
push
add
sub
add
add
or
movsl
fidivrl
sbb
sbb
sbb
jae
add
test
jae
cmp
stc
add
ja
add
jg
clc
call
in
lods
enter
jp
jl
imul
add
add
fildll
and
sbb
xchg
inc
add
add
add
add
repz
mov
add
sbb
mov
lods
xchg
add
mov
pop
fnstenv
aas
sub
mov
je
jnp
add
in
imul
repz
xor
outsb
jb
popf
push
add
inc
cmp
dec
lds
or
imul
jbe
inc
add
adc
pop
pop
adc
ljmp
leave
or
sbb
ljmp
add
addb
add
stos
mov
add
add
mov
add
add
cmp
bound
mov
add
jnp
ficoms
out
add
add
ret
and
add
into
or
call
in
insb
cmp
into
xchg
push
lcall
push
add
mov
add
xchg
lret
add
outsl
sub
add
fsubrs
jle
lock
rolb
xor
mov
xchg
add
add
mov
add
and
mov
add
or
add
xchg
add
iret
lret
jb
inc
dec
pop
out
push
add
fwait
xlat
add
sub
mov
inc
add
test
add
jnp
add
mov
sti
popf
mov
iret
rolb
daa
adc
ret
push
pusha
add
lods
and
mov
pop
push
xchg
add
icebp
test
and
dec
icebp
cli
out
sti
push
bound
mov
pmulhw
das
ds
add
pop
mov
testb
pop
sub
add
push
int
loope
enter
fsubs
add
into
lods
out
adc
add
movsl
or
mov
add
mov
pop
fdivrs
movsb
add
iret
jp
add
data16
je
dec
cmc
testl
aas
xor
jo
inc
adc
mov
sub
mov
mov
xchg
sub
mov
add
aad
aas
push
pushf
and
or
clc
shll
mov
sub
std
mov
add
add
fiaddl
jecxz
jge
add
mov
push
add
mov
add
enter
push
pop
pop
mov
std
std
pop
call
aas
sub
add
add
add
rolb
cmpsl
loop
hlt
add
add
daa
mov
cwtl
xchg
mov
push
add
cmp
das
cli
call
adc
xor
fsubrs
mov
add
clc
jne
inc
add
mov
push
mov
test
jge
xchg
iret
cmp
sub
xor
cmp
clc
mov
inc
add
inc
add
xchg
repnz
add
popf
or
xor
aad
ret
cmp
and
add
cld
imul
add
add
add
shrl
dec
rolb
pop
ret
lds
dec
mov
clc
mov
xor
add
pop
jns
pop
fisubl
add
jg
adcl
outsb
pop
inc
cmp
add
fstps
xor
pop
jbe
xlat
cmp
xor
lods
add
leave
xchg
add
lock
mov
jl
jnp
xchg
add
lds
pop
or
outsb
hlt
add
das
test
adc
clc
int3
mov
add
xchg
add
lods
push
inc
mov
std
xchg
add
add
into
add
or
ljmp
add
add
cwtl
jns
add
mov
sbb
pop
inc
add
add
add
and
hlt
add
adc
leave
jmp
and
add
jne
loop
inc
add
push
add
add
add
bswap
xchg
add
add
add
push
add
pop
aas
cltd
inc
jno
add
add
mov
add
mov
pop
sub
in
in
aas
xchg
add
out
mov
pop
xchg
add
adc
fcomps
addb
add
add
enter
push
add
pop
clc
add
aas
aad
sti
add
and
lock
movsl
mov
loop
dec
xor
rolb
add
add
mov
xor
cmpsl
pop
cltd
dec
fistpll
les
mov
ljmp
inc
add
add
xchg
pop
data16
jbe
xchg
add
int3
sub
jmp
nop
add
add
les
inc
popa
cli
push
pop
jg
adc
add
push
dec
push
push
jnp
add
repz
int
fsubrl
adc
pop
addb
push
push
sub
add
add
push
add
jmp
jno
rolb
pop
xchg
add
pop
jle
add
add
add
add
add
mov
push
add
add
sbb
je
movsl
test
cmp
add
sahf
cmc
movsl
inc
mov
add
add
loop
fiadds
jg
mov
add
add
pushf
imull
xchg
add
jae
add
testb
fldl
push
add
xor
or
add
mov
cs
sub
mov
cmp
addr16
lret
push
add
add
pop
xchg
jns
and
jno
loope
add
pop
xchg
jge
cli
mov
xchg
adc
into
sbb
mov
and
mov
add
push
add
sti
dec
adc
rolb
adc
data16
data16
movb
mov
mov
sub
sti
inc
add
mov
lds
and
loop
xchg
arpl
jecxz
xchg
add
or
pop
in
cmp
add
mov
mov
in
cwtl
addb
pop
add
mov
jmp
add
mov
rcrl
sbb
xchg
add
aad
fsubrp
mov
xor
xchg
add
mov
jle
out
fmull
movsl
stc
inc
add
jnp
sahf
insb
call
mov
addb
and
mov
aas
and
mov
fcompl
add
push
add
add
add
ret
pop
jmp
jmp
addb
xchg
xor
and
fsubr
xchg
sbb
sahf
sbb
pop
pop
fstl
testb
inc
fidivrs
add
jg
les
popa
outsl
or
add
inc
scas
xchg
addr16
jns
xchg
add
push
rolb
adc
cmpsl
loope
add
or
int
data16
inc
add
je
xchg
add
xor
test
out
inc
sbb
add
add
mov
add
test
add
fldt
rolb
lds
dec
push
add
add
popf
call
popf
xlat
sub
push
icebp
loope
add
fwait
cmc
outsl
mov
loop
mov
sbb
in
adc
mov
cmp
orl
add
add
inc
mov
pusha
add
std
or
test
add
sbb
add
or
add
add
xor
sub
fsubrl
and
pushf
mov
mov
std
ss
cmc
mov
add
xchg
in
dec
jbe
lret
lods
mov
test
cmpsb
add
add
add
movb
inc
pusha
add
inc
add
mov
fidivrl
fwait
inc
adc
dec
cmp
cld
dec
pop
movsb
add
or
ljmp
add
dec
outsl
std
jo
aaa
lcall
push
add
fdivrl
jae
xchg
cmp
pop
sbb
add
ljmp
int3
scas
mov
and
mov
cli
enter
cmp
mov
add
roll
cs
dec
pop
fwait
gs
fisubl
add
lods
clc
in
add
movb
ja
loopne
arpl
jge
icebp
mov
cmpsl
nop
add
stos
inc
leave
lret
gs
in
and
mov
mov
adc
stc
xchg
add
cltd
and
mov
and
mov
test
push
cli
cltd
enter
add
sbb
pop
jno
add
clc
fidivrs
add
int3
clc
mov
mov
rolb
and
fcoml
add
pusha
add
add
test
stc
insb
jnp
add
inc
fdivp
add
xlat
std
or
testb
jecxz
add
add
or
mov
jns
fcomp
dec
mov
add
push
add
add
pop
sbb
jg
jbe
fsubr
xor
cmp
add
and
mov
add
enter
ds
add
add
addb
fdivl
out
lods
addb
inc
cmp
pop
jne
in
stos
add
lock
in
popa
adc
sub
out
jb
cmp
xchg
sbb
mov
fistps
cmp
add
add
mov
add
jmp
add
cwtl
jle
insl
inc
addr16
mov
or
in
loope
test
in
movsb
add
sbb
dec
lea
pusha
add
cmp
mov
movsb
add
loop
add
add
mov
daa
pop
lcall
dec
dec
mov
add
in
fisubl
mov
mov
xor
arpl
xchg
push
add
add
fwait
and
mov
push
aam
lock
add
push
test
gs
stos
enter
mov
movsb
add
sub
insb
mov
add
add
add
add
adc
sub
add
mov
mov
fmull
add
add
inc
add
into
loop
mov
add
xchg
add
jecxz
add
mov
add
add
add
push
out
xor
pop
dec
mov
dec
fwait
push
add
mov
test
addb
mov
add
add
testb
pop
mov
nop
add
cmpsb
add
mov
add
cmp
pop
mov
rcll
push
dec
jg
cmpsb
add
or
insl
xchg
add
add
push
sti
xorl
jecxz
and
je
cmp
ret
add
jbe
xchg
add
lds
add
fcom
add
push
jg
js
mov
or
add
mov
pop
je
cmp
pushf
mov
mov
xchg
cmp
repnz
add
xchg
mov
pop
jno
add
add
add
lock
test
insb
ret
push
out
repnz
dec
cmpxchg
add
mov
sub
jmp
mov
daa
nop
add
pop
mul
mov
add
inc
add
xor
mov
icebp
add
les
mov
add
popa
add
mov
pop
sti
sti
lods
sub
jecxz
add
add
add
xor
pop
push
add
xchg
mov
in
adc
mov
jne
jbe
jns
pinsrw
dec
mov
call
bound
mov
push
repnz
add
in
add
mov
mov
mov
mov
sbb
push
add
pop
sub
add
sub
nop
add
leave
cs
add
call
push
add
jge
sub
add
add
mov
add
sub
add
movsl
add
fcmovbe
push
dec
jge
ljmp
add
lret
pop
insl
or
andl
ss
add
mov
ret
mov
add
add
add
call
add
incb
mov
add
out
aam
and
sbb
jecxz
imul
or
push
cmp
push
insl
adc
mov
outsl
ja
in
scas
mov
jne
add
sub
dec
add
int3
test
cli
outsl
sbb
add
in
mov
pop
mov
mov
outsl
and
les
dec
pop
push
add
xchg
xchg
add
inc
cli
mov
add
ja
lods
insl
xchg
pop
cmc
inc
out
mov
movsb
add
mov
dec
cmpsb
add
push
add
or
mov
jne
test
or
cmp
dec
jmp
jge
add
mov
outsl
jnp
out
add
leave
inc
lcall
cmp
mov
xor
addb
hlt
add
pushf
aaa
testb
jmp
psraw
fnstcw
jecxz
mov
mov
adc
xchg
shll
add
add
cmp
add
leave
or
add
sbb
dec
movsb
add
adc
adc
js
jns
xor
fxtract
add
add
pushf
mov
movb
ds
add
pop
mov
add
dec
addb
xor
jp
add
sub
mov
shrl
sbb
sbb
dec
or
adc
and
mov
cmpsl
jge
inc
add
add
into
icebp
bound
mov
dec
jl
popa
pop
push
add
imul
dec
dec
mov
sbb
xchg
add
add
add
add
addr16
lret
out
test
loopne
xor
cltd
xlat
push
add
aam
jmp
mov
push
stc
jns
loope
push
test
add
add
and
mov
repnz
xchg
add
fwait
dec
add
mov
inc
add
test
mov
lret
aad
add
add
out
jno
push
int3
mov
add
scas
push
add
and
mov
mov
lahf
pop
inc
aad
data16
mov
rcrl
out
ljmp
adc
push
xor
push
add
inc
enter
mov
add
add
mov
into
mov
cmpsl
aam
movl
pop
std
mov
add
add
add
addl
mov
push
jne
roll
add
pop
dec
add
add
add
clc
stos
inc
add
xchg
pop
inc
bound
mov
test
cmp
or
sub
in
add
ret
inc
shll
cmp
and
mov
add
and
stc
and
ret
mov
add
add
roll
add
imul
ret
arpl
mov
lock
add
outsl
addb
add
cmp
bound
mov
xor
push
std
cltd
add
dec
mov
sti
sbb
cmp
bound
mov
add
int
popa
dec
loope
mov
or
add
clc
gs
imul
inc
push
add
xor
mov
fcompl
add
js
subl
jns
incl
mov
add
adc
pushf
bound
mov
add
stos
xchg
scas
mov
cmp
add
movsb
add
add
outsl
inc
add
scas
rolb
testb
add
add
push
add
add
jne
scas
add
xor
std
push
add
add
sub
add
outsl
xchg
lds
add
int3
push
mov
out
insl
push
add
addr16
inc
add
aaa
jns
add
repz
mov
lcall
loop
fisubrl
outsl
stos
loope
add
sahf
inc
mov
push
add
addb
add
mov
in
or
mov
pushf
mov
mov
aad
dec
dec
pop
es
push
add
xchg
add
add
leave
cli
cmp
jg
add
or
cmpsl
loop
hlt
add
add
sub
idiv
out
inc
jmp
dec
cmp
loope
in
sub
cmp
add
add
mov
jnp
leave
addb
mov
in
mov
and
add
ljmp
add
mov
xchg
add
sbb
mov
je
pop
mov
mov
add
aas
sbb
xchg
popa
jns
lret
test
and
mov
mov
add
out
jecxz
scas
rolb
rolb
and
push
add
xor
dec
nop
add
dec
add
push
add
add
rcl
add
fmul
pop
jnp
add
add
mov
inc
addr16
add
add
or
add
mov
xlat
gs
add
mov
in
add
add
adc
repnz
xlat
in
lds
std
ljmp
adc
push
add
adc
add
mov
add
fucomp
or
leave
dec
mov
inc
mov
shr
out
push
and
rorl
test
fmul
int3
out
or
lds
bound
mov
mov
add
add
les
outsb
jmp
xlat
addl
adc
add
pop
xchg
out
fildll
addb
sbb
add
mov
pop
dec
add
mov
and
inc
cli
addb
add
xchg
dec
pop
push
add
jnp
ljmp
pop
or
jecxz
or
xor
pushf
mov
pusha
add
les
mov
or
add
std
push
add
add
cmp
push
jns
jb
fbld
adc
idivl
xchg
fsubrs
rcrl
sahf
mov
call
mov
push
loopne
push
xchg
add
xchg
add
inc
add
add
push
jno
cmp
insb
push
push
test
adc
pop
rolb
add
and
sbb
fmulp
ljmp
add
jecxz
lea
inc
adc
sub
arpl
and
lods
rolb
push
add
scas
ljmp
out
add
add
or
add
jecxz
lret
shll
loopne
or
add
insb
push
add
xchg
add
dec
daa
cmp
add
fdivrs
pop
jp
dec
mov
add
jmp
mov
jbe
pop
bound
mov
push
push
add
add
cmp
add
pop
lods
or
cmp
mov
lret
daa
ffree
xor
xor
add
add
sub
xchg
add
add
fdivrl
adc
rolb
dec
sbb
add
adc
add
js
movsb
add
add
or
in
addb
and
add
movsl
insl
js
add
sti
push
mov
mov
rolb
leave
dec
addb
mov
add
pop
jbe
add
rolb
mov
inc
add
add
inc
lock
sbb
sub
push
add
jle
add
movsl
or
adc
insb
neg
rolb
das
clc
push
popf
pop
movsl
out
add
add
movb
xchg
add
mov
add
mov
jno
add
mov
push
add
add
and
lds
or
orl
sbb
ja
fdivrs
push
adc
add
jge
sarl
cli
pop
ja
add
in
mov
add
outsl
cmp
xchg
add
aaa
cmpsb
add
fisttpll
gs
add
cmpsb
add
jnp
loope
loop,pn
loope
iret
push
fldl
in
inc
add
je
xchg
test
jge
add
add
in
sbb
jno
or
inc
add
mov
movsl
dec
dec
push
xlat
testb
mov
enter
in
cwtl
push
add
lods
stos
xchg
nop
add
inc
add
and
mov
shrl
loop
mov
std
pop
in
or
inc
leave
repz
daa
pushf
inc
fimuls
pop
mov
add
pop
repz
mov
push
lods
lods
xchg
out
cmp
pop
orl
fnstcw
mov
jae
sub
xor
fcoml
das
dec
adc
js
jb
int
push
add
lahf
xchg
add
jno
add
ret
push
js
or
fnstcw
push
arpl
add
inc
popa
dec
aam
in
pop
je
ja
lods
xor
inc
add
fildll
iret
add
mov
add
mov
mov
push
add
sbb
cli
imul
je
mov
inc
add
pop
pusha
add
pop
scas
inc
mov
fsubrp
fisubrl
rcll
mov
add
dec
stc
jle
xor
mov
insl
icebp
insb
mov
add
push
add
add
data16
xchg
jo
movsb
add
fidivl
jne
loop
push
add
aas
fdiv
add
leave
jg
aad
add
add
mov
xchg
les
inc
adc
cmpsl
roll
insb
out
push
jo
rolb
aam
cmp
add
aas
push
add
ficoml
mov
xlat
or
sbb
ja
add
sbbl
add
fwait
lahf
push
add
add
jl
add
cmp
jmp
add
pop
inc
add
lea
bound
mov
mov
add
add
add
iret
jmp
pop
lret
xchg
add
add
fbstp
jmp
add
cmpsl
inc
add
xor
insb
loopne
mov
mov
add
addr16
add
or
jge
das
out
outsb
lock
push
dec
add
sub
add
mov
daa
mov
movsl
repz
icebp
insl
pusha
add
fnstcw
decb
js
and
dec
dec
mov
add
jmp
xchg
dec
lods
push
add
sub
pop
xchg
add
add
inc
add
mov
mov
mov
and
mov
adc
test
jmp
add
add
les
or
das
and
mov
addb
add
aad
popa
jo
cmpsb
add
adc
test
mov
bound
mov
xor
insl
add
add
add
add
stos
out
lcall
add
negl
cmp
sbb
add
icebp
cmpsb
add
or
inc
popa
mov
cmpsb
add
mov
add
sbb
inc
xor
inc
add
xchg
test
dec
sbb
fs
jp
inc
outsb
xchg
add
jmp
jmp
or
hlt
add
jl
add
loopne
cs
pusha
add
mov
fisubrs
mov
out
mov
inc
add
add
ret
inc
sbb
push
add
add
add
push
add
lods
sub
cmp
add
sti
ja
add
xchg
dec
scas
pushf
pop
cmc
jecxz
in
xchg
cmpsb
add
add
mov
add
testb
call
add
add
mov
cmp
adc
adc
or
and
add
mov
cmpsl
aaa
bound
mov
add
add
inc
add
jg
add
sub
mov
jp
dec
jae
pop
and
add
add
stc
jns
mov
xchg
cli
movsl
xchg
add
add
add
les
mov
jb
arpl
mov
insl
rolb
rcrl
scas
adc
sbb
iret
xor
testb
gs
movsb
add
adc
jae
mov
bound
mov
sub
add
dec
mov
add
dec
sbb
pop
lahf
sub
push
add
add
sub
addr16
xor
xor
lahf
cmpsl
sbb
sub
add
outsb
push
dec
clc
adc
jg
cmc
pushf
push
cmp
push
addb
iret
adc
xchg
add
jmp
bound
mov
add
lock
add
mov
cmpsb
add
add
add
mov
add
adc
mov
test
das
int3
mov
inc
out
push
addl
scas
jmp
mov
mov
add
fdivl
sbb
and
push
add
sub
mov
or
adc
cmp
sub
andl
cmp
add
add
ja
popa
xchg
or
add
dec
mov
inc
add
xor
icebp
jmp
add
test
xor
jg
dec
outsb
fdivrl
fimull
sub
add
mov
ret
add
aaa
jnp
jmp
mov
or
adc
add
hlt
add
out
out
sbb
rolb
mov
add
mov
xor
mov
adc
pminsw
out
movb
add
mov
add
aas
push
addr16
iret
in
add
push
xchg
jle
jns
lret
jecxz
sub
fwait
jecxz
lods
fdivrl
cwtl
push
push
add
mov
mov
add
and
add
sbb
add
mov
pop
aas
cmp
push
add
add
add
inc
add
in
add
ljmp
add
pop
mov
add
pushf
xchg
je
mov
add
mov
dec
test
xchg
add
outsb
addb
mov
cld
xor
inc
add
add
pusha
add
jns
inc
add
adc
mov
add
cmp
jmp
add
pop
stos
lds
lea
aaa
sti
cmp
inc
add
add
aam
int
dec
cld
adc
cmpsl
and
cmc
cli
mov
or
test
push
outsb
xchg
and
add
mov
ja,pt
add
rcll
add
and
imul
push
sbb
pop
mov
add
push
dec
std
add
push
add
push
les
cmpsb
add
add
push
add
inc
add
fcomps
xor
jge
ficomps
add
jno
negl
leave
adc
and
mov
scas
cmp
push
adc
lock
sub
add
cwtl
das
xchg
aam
jg
add
mov
cli
add
xlat
push
sbb
xor
mov
movsl
cmpsl
sti
rolb
inc
add
mov
add
add
jbe
xor
dec
pop
rolb
add
cmpsl
mov
repnz
add
js
movq
adc
es
and
add
addr16
add
test
aaa
sub
add
xor
or
dec
xchg
add
add
xchg
push
add
push
add
add
fists
add
ret
int
add
mov
mov
mov
add
add
int
pusha
add
push
xchg
mov
aaa
mov
add
fisubrs
mov
in
ljmp
ljmp
add
daa
ljmp
add
add
das
push
add
lea
add
mov
xor
ret
mov
lahf
mov
add
jb
or
push
out
fidivrl
push
mov
xchg
xor
iret
fildll
pop
sbb
or
in
ret
jae
add
aas
pop
loopne
xchg
add
inc
inc
les
shl
ja
add
push
add
add
hlt
add
fidivl
adc
movsl
or
mov
adc
xlat
jae
fisubs
add
mov
xchg
add
jno
pop
cmp
add
lret
mov
lods
ljmp
fimull
fucomi
jg
inc
add
add
mov
add
jg
sub
mov
push
dec
mov
add
jecxz
xor
enter
inc
add
pop
jl
orl
add
xchg
add
add
add
imul
xor
add
mov
cmc
pop
add
mov
fcmovnb
add
movsl
xchg
ret
fistl
imul
mov
inc
add
scas
mov
and
xchg
add
lret
dec
jle
sbb
add
mov
ret
repz
xor
push
or
add
mov
cmp
add
push
fisubrl
leave
mov
add
add
sbb
and
mov
sbb
add
jne
roll
not
add
cltd
xor
inc
pop
movb
jl
sub
test
mov
add
outsb
mov
aas
push
add
rolb
push
xor
adc
icebp
cmp
add
nop
add
jns
sahf
popf
hlt
add
testl
fisttps
add
cmc
mov
cmp
mov
or
pushf
call
adc
push
rorl
jbe
repnz
outsl
jge
lret
ret
bound
mov
xchg
add
add
or
sub
ljmp
insb
push
add
add
sbb
mov
mulps
dec
loope
daa
jge
push
add
inc
add
out
add
mov
add
pop
mov
sbb
jo
cmc
pop
mov
rolb
imul
dec
jmp
mov
dec
cltd
ffree
out
int
xchg
add
inc
add
dec
pop
sbb
bound
mov
add
js
in
rolb
xchg
mov
xchg
add
imul
pop
iret
inc
inc
add
and
divl
add
add
inc
add
push
add
xor
dec
and
add
jb
ljmp
add
add
add
add
add
mov
add
add
ret
add
ret
push
add
aam
nop
add
add
add
sbb
and
xchg
add
cld
pop
pop
cmp
addb
add
xor
add
ja
pop
das
mov
mov
mov
fcmovbe
add
pop
xchg
test
and
add
xchg
insl
mull
adc
sbb
pushf
dec
cmpsb
add
add
aaa
rolb
mov
add
iret
mov
add
decl
add
add
cli
sbb
add
sahf
sahf
inc
add
and
imul
jle
add
loope
into
push
add
jne
add
add
xchg
fdivl
add
test
popf
jo
insl
mov
push
cmpsl
mov
push
xor
aad
add
data16
add
add
sahf
fadd
testb
stos
mov
add
inc
add
add
mov
add
add
data16
cmp
stos
mov
cmp
movsl
clc
jbe
mov
adc
inc
je
gs
add
clc
sbb
nop
add
jg
lds
lcall
lods
dec
pushf
sub
sbb
addb
add
jns
jmp
xor
jo
or
push
push
push
add
mov
add
jne
jge
dec
xchg
jnp
ret
add
add
add
into
iret
push
mov
pop
push
cmpsb
add
rolb
jl
or
and
mov
add
lret
adc
add
movb
test
mov
mov
mov
ja
pop
dec
stos
sahf
xor
dec
insl
adc
mov
push
add
add
dec
sub
add
push
sti
arpl
push
add
cs
push
add
add
xchg
mov
nop
add
imul
dec
fsubrl
and
mov
xchg
dec
sub
add
xchg
add
mov
jl
add
shrl
sub
add
pop
out
mov
roll
inc
add
add
inc
add
je
cmpsb
add
jg
add
push
add
add
test
jbe
xlat
aaa
jno
inc
sub
sub
push
outsl
mov
lods
fsubrs
int3
xchg
add
outsb
dec
mov
jae
mov
in
ja
nop
add
into
xchg
adc
add
add
add
push
add
add
adc
mov
push
sahf
out
add
cmp
xlat
ja
sti
lret
xor
gs
add
aas
pop
dec
in
mov
add
jo
in
mov
xchg
data16
add
jo
pop
sub
dec
mov
mov
add
add
pusha
add
scas
rcrl
add
add
jle
xchg
mov
sub
mov
add
mov
rolb
mov
imul
push
setne
lods
movb
outsl
xchg
add
add
mov
addb
scas
push
add
add
mov
mov
sahf
xor
cmpsl
sahf
mov
imull
jl
add
add
out
add
mov
dec
lahf
stos
cwtl
out
cmp
inc
add
iret
lods
pop
das
insl
pop
sahf
add
mov
xlat
cmp
sti
mov
out
inc
lret
push
mov
fucomip
ja
cmp
sub
mov
int
add
cmp
int3
jp
add
xlat
iret
mov
ljmp
add
mov
add
add
shll
testb
adcl
add
sbb
rcll
mov
sbb
out
xchg
cmp
ret
jno
add
mov
add
rolb
scas
adc
mov
mov
loope
aaa
testb
data16
adc
add
mov
or
add
add
sti
xchg
imul
cmp
mov
add
add
sbb
fdivrp
push
sbb
hlt
add
jno
add
lds
dec
jae
add
out
gs
nop
add
sbb
call
movsb
add
stc
fdivrs
ja
js
add
add
push
add
inc
add
add
sub
adc
push
pop
in
je
adc
test
add
mov
add
dec
adc
push
add
pusha
add
add
shll
mov
add
sbb
js
adcl
push
add
add
add
add
pop
popf
sti
dec
inc
add
add
mov
popa
dec
das
xchg
xor
pop
cmp
call
add
add
add
add
add
mov
jle
or
inc
lret
pop
fcmovne
addr16
inc
add
dec
mov
and
lods
fcompl
addb
aad
xor
frstor
mov
out
add
add
add
cmp
pop
test
outsb
pop
out
sub
xor
cmp
dec
jno
add
scas
aad
add
jl
add
ds
loopne
pop
adc
pop
mov
inc
add
rolb
ret
arpl
sub
loope
add
adc
int3
dec
sti
stc
popf
popa
int3
xchg
push
add
mov
into
pop
icebp
add
inc
mov
lods
out
scas
cmp
add
add
add
lea
pusha
add
cmpsb
add
jae
xchg
add
ficoml
lret
fsubl
add
inc
add
lods
test
mov
int3
mov
js
add
add
cmp
jbe
pop
in
call
pop
stos
pop
cmp
pop
movsb
add
dec
and
mov
cmp
or
add
mov
and
loop
add
xor
fsts
cmpsl
mov
add
fbstp
add
pop
outsb
and
mov
dec
fnstsw
mov
roll
add
add
mov
add
jnp
or
cmp
sub
xor
and
xchg
rolb
mov
xor
ffree
adc
arpl
shll
movb
cld
sbb
add
stos
jp
xchg
xor
pcmpgtd
loope
add
inc
add
fimull
pop
outsb
dec
push
add
js
and
inc
add
sub
pop
adc
or
push
push
add
push
add
and
movsl
mov
repnz
add
mov
add
mov
enter
xorl
test
add
xchg
adc
inc
fsts
shrl
add
sti
dec
push
test
popf
jle
sub
jno
add
sbb
add
xchg
add
mov
adc
inc
dec
sub
fsubrl
testb
and
add
stc
jno
sbb
addb
int3
in
pop
sbb
dec
lea
dec
loopne
scas
sub
or
add
inc
adc
out
decl
xor
add
and
mov
sbb
jno
add
in
div
adc
mov
repz
rolb
or
pop
xor
add
add
in
sbb
xor
xchg
xor
mov
add
dec
ljmp
aam
filds
add
pushf
sbb
xor
fdivrl
or
add
sub
add
add
mov
sbb
inc
add
xlat
mov
test
mov
cli
inc
add
add
add
add
add
mov
cmc
stc
pop
cld
cmp
mov
push
add
sldt
mov
dec
mov
xchg
data16
add
mov
dec
cmp
mov
add
and
mov
add
jecxz
add
add
mov
cli
loop
push
add
cmpsl
mov
inc
mov
or
xor
js
mov
mov
rolb
add
mov
loop
int3
jecxz
fs
icebp
movb
cmp
int3
mov
add
lods
into
adc
sti
gs
lret
pop
sub
test
jmp
xchg
add
or
xor
xchg
add
in
jbe
repnz
add
lods
movsb
add
outsb
jg
add
lods
xor
popf
js
cli
push
in
outsl
sbb
cmp
adc
xlat
jb
xor
jne
add
cmpsb
add
sub
add
cwtl
cli
cwtl
gs
cmp
add
aam
mov
sahf
stos
and
mov
or
pop
mov
sub
mov
lock
add
mov
add
loop
sub
add
add
cmp
mov
add
aaa
xlat
fs
add
out
data16
add
pop
pop
push
add
fnstsw
mov
out
xchg
xor
cs
add
cld
scas
push
add
or
lcall
mov
add
inc
add
mov
test
imul
lea
add
icebp
inc
mov
aas
add
adc
add
add
add
dec
cwtl
lret
ja
rcrl
js
add
ret
mov
imul
lahf
add
push
add
xchg
add
add
mov
add
call
loopne
nop
add
cmp
ficompl
ds
add
in
call
push
xchg
xchg
jo
jge
add
add
dec
adc
imull
mov
add
add
add
add
jg
shrl
push
add
repnz
push
movsb
add
out
fcmovbe
add
std
xor
rolb
insl
rolb
lds
xor
add
mov
sub
add
clc
mov
add
pause
add
xchg
push
add
mov
or
fisubl
jns
add
mov
imul
lock
pop
mov
and
in
pushf
mov
add
add
add
mov
add
addr16
sub
push
add
add
loop
push
not
aad
add
lods
xchg
adc
and
mov
add
add
add
and
rolb
xchg
add
je
push
in
push
cmp
mov
out
inc
push
add
push
add
cmpsl
lds
fisttpl
sub
xchg
fstl
das
stos
jno
and
xor
mov
lods
xchg
call
dec
cmpsb
add
mov
add
add
outsb
imul
sub
dec
fisttps
mov
arpl
add
cmpsb
add
std
fisubs
mov
dec
or
xor
pop
push
lret
pop
ret
testl
add
pushf
sbb
inc
add
add
xor
mov
mov
loop
fwait
repz
or
movb
pushf
int3
lahf
cmp
add
add
jb
push
push
mov
nop
add
add
aad
mov
scas
mov
in
pop
xor
lds
add
testb
movsl
data16
mov
jne
add
leave
mov
sub
in
jl
dec
pop
adc
add
mov
cmc
in
repnz
add
mov
test
out
xchg
testb
shll
jb
stos
cltd
addb
lock
add
mov
lret
xchg
movsb
add
add
mov
jno
lds
add
add
test
or
sbb
enter
out
dec
xor
mov
cld
fidivrs
sub
std
fidivl
add
adc
jg
lret
add
or
insb
pop
leave
clc
bswap
dec
add
add
cld
sbb
add
add
je
jecxz
pop
stos
js
add
mov
aam
iret
adc
lret
and
mov
mov
jnp
fiadds
sbb
ret
jmp
lret
enter
int
mov
or
cwtl
dec
add
xor
push
add
xlat
fnsave
push
xchg
add
add
add
add
cmp
mov
imul
add
addr16
jmp
add
mov
xor
pop
mov
pushf
lret
cmp
mov
jns
test
xor
scas
mov
decl
mov
add
jae
jl
add
pop
lret
movsl
repnz
xor
pop
data16
adc
add
out
rolb
clc
loopne
setne
lcall
test
out
bound
mov
dec
pop
mov
push
or
addb
mul
lods
pop
sbb
xor
sbb
addb
mov
cltd
mov
add
add
sbb
mov
ret
fisttpl
and
jge
jmp
mov
add
jbe
push
add
add
xchg
add
mov
add
outsl
in
push
add
call
jnp
pop
sub
mov
mov
mov
int3
mov
cmp
pusha
add
pushl
pop
jae
add
jo
out
pushf
cld
sbb
cmp
xchg
popa
xchg
add
addb
fdivs
or
add
out
pop
movsl
dec
imul
xchg
add
cltd
dec
call
fsubrs
dec
out
bound
mov
mov
call
and
inc
addb
lock
lcall
add
cmp
push
add
pop
xor
imul
and
mov
add
ljmp
dec
pop
cld
mov
movsl
push
mov
in
daa
dec
mov
push
add
popf
ds
cmc
loop
fildl
or
add
lret
sbb
add
das
shll
sub
adc
cmpsl
sub
adc
or
test
loop
or
cmp
add
add
movb
testb
mov
sub
or
sahf
mov
insl
push
dec
xor
jge
add
add
int
bound
mov
addb
fsubrl
push
add
add
add
mov
add
mov
mov
rolb
pop
sbb
add
out
jne
add
sub
add
add
sahf
cmp
loop
out
sub
out
addb
int
mov
cmp
addb
xor
lret
insl
insl
inc
add
stc
sub
popf
or
add
add
add
add
scas
sub
jne
and
mov
add
push
add
add
mov
add
sub
adc
add
outsb
sbb
sti
inc
add
add
fldl
add
aam
mov
jo
imul
add
push
mov
out
decl
lock
xor
rolb
cmp
pop
adc
add
inc
add
call
inc
add
adc
loopne
mov
fidivrs
cld
enter
jl
fdivrl
fsubs
clc
cvtpi2ps
mov
cli
push
mov
mov
in
jbe
add
out
mov
fstps
imul
add
les
and
mov
jbe
testb
outsb
dec
enter
xor
pop
push
lret
pop
adc
movb
add
mov
loop
xor
divl
add
in
and
mov
push
add
add
mov
mov
cltd
stos
pushl
lods
inc
add
pop
mov
inc
outsb
push
cmp
rolb
mov
add
add
add
add
mov
fldt
mov
out
xchg
ja
add
add
add
mov
mov
mov
rcr
xchg
add
ret
and
add
in
or
rolb
mov
rolb
movb
mov
xor
pusha
add
jge
add
dec
into
adc
jecxz
cmp
lods
inc
add
xchg
add
add
nop
add
add
jne
add
and
add
out
mov
push
and
inc
cmpsb
add
mov
add
sbb
pop
out
pop
in
in
aad
push
fisttpl
add
in
mov
xchg
add
mov
cmpsb
add
inc
add
xchg
cmc
sub
mov
add
add
add
sbb
push
add
ja
add
pop
adc
add
stos
idiv
or
daa
or
jns
add
add
sbb
mov
mov
sahf
push
add
mov
adc
lahf
or
jbe
xchg
cmpsb
add
mov
dec
xchg
add
pop
xor
pop
stos
call
mov
clc
stos
pushf
fimuls
xchg
adc
sub
testb
push
add
add
add
in
add
out
or
or
cli
mov
add
cmp
data16
mov
cwtl
fwait
add
add
sub
ja
add
xchg
add
pop
adc
push
add
ds
scas
sbbl
add
push
add
add
scas
push
mov
icebp
pop
mov
add
add
sub
sub
add
xchg
icebp
jg
lock
adcl
loop
outsb
repnz
mov
add
sbb
add
add
add
loope
add
or
fisubrl
std
add
inc
add
mov
add
lahf
movsl
insb
scas
popf
push
fistps
sub
add
pop
xor
pushf
je
add
sbb
cmpsb
add
add
mov
addb
pop
xchg
add
sbb
popf
lods
or
add
add
cmp
cmp
pop
fcomp
das
cmp
add
data16
mov
or
lcall
add
sub
sahf
out
xchg
add
add
mov
xchg
sbb
loopne
insb
es
add
lock
stos
lock
add
jge
iret
xchg
add
popf
add
mov
jnp
adc
pop
xchg
sahf
test
add
xlat
cmp
push
add
repnz
das
sti
jne
add
lds
ljmp
xadd
add
rol
mov
add
add
out
icebp
add
add
add
add
out
dec
sahf
xor
mov
nop
add
and
push
xchg
push
daa
cli
cmp
stos
out
imull
sahf
xor
or
xlat
or
add
lock
add
mov
bound
mov
adc
mov
push
add
and
cmpsb
add
add
add
add
test
jnp
test
or
scas
aam
jle
sub
pop
mov
inc
ds
mov
pop
mov
ret
ret
movsb
add
mov
add
add
dec
xor
sub
adc
sbb
add
mov
lea
push
add
dec
add
sub
mov
std
sbb
in
jge
or
pop
arpl
cmp
ds
add
and
das
jecxz
shrl
cmp
jo
in
cwtl
dec
clc
xchg
add
add
fnop
add
out
sub
add
mov
jb
addr16
fsubrs
int3
mov
rolb
push
add
add
jecxz
add
add
add
ljmp
fwait
mov
hlt
add
mov
cmp
sub
jns
mov
shrl
ds
insl
add
xchg
lock
dec
sub
pop
aam
mov
mov
std
dec
push
pop
clc
jl
repz
sbb
ljmp
aam
xor
cltd
adc
jl
in
lea
loop
jmp
sahf
lret
and
mov
pop
inc
push
add
nop
add
mov
test
cmp
aam
cmp
stos
push
add
jo
addl
sbb
add
in
jae
push
xchg
out
add
or
mov
cmp
pop
pop
fstps
push
add
enter
mov
add
pop
outsl
insl
lock
adcl
add
sbb
and
mov
data16
add
add
pushf
movb
add
fmull
outsb
cmp
out
xor
dec
dec
push
add
lahf
in
add
mov
mov
fldcw
icebp
push
clc
jp
add
add
clc
xchg
lods
adc
sbb
loope
adc
inc
add
ljmp
adc
ds
movsl
pop
cmp
test
fwait
and
mov
push
scas
test
jmp
add
test
test
stos
cmp
add
popa
dec
repnz
clc
and
mov
into
cmp
cmpsb
add
cmc
xchg
insb
cmc
sahf
cs
cmpsb
add
xchg
add
out
das
inc
add
call
stos
mov
shrl
mov
and
push
add
stc
inc
mov
xchg
push
cmp
add
mov
push
sub
add
mov
add
jno
in
adc
add
mov
add
adc
xor
ds
pop
dec
jne
adc
mov
cs
mov
hlt
add
dec
dec
je
outsb
out
xchg
add
and
inc
addr16
dec
pop
lods
pop
call
int3
push
add
add
push
add
cwtl
cmp
xchg
add
add
mov
add
mov
mov
mov
push
add
jae
add
dec
cmpsb
add
mov
fsubrs
cs
loop
mov
add
add
mov
mull
rolb
jle
add
push
mov
inc
add
pop
pushf
mov
mov
push
mov
add
add
dec
int3
scas
sub
dec
mov
call
add
mov
rcll
imul
sbbl
sub
fcomps
add
xor
aam
pop
mov
mov
ret
add
or
pusha
add
lret
lret
loop
out
cmp
add
mov
mov
and
add
dec
sarl
add
sub
add
sbb
jb
clc
test
inc
add
int
scas
movsl
sarl
in
adc
nop
add
enter
add
add
xchg
repnz
cs
mov
add
and
clc
pop
imull
mov
sub
add
or
dec
icebp
sub
loopne
xchg
pop
push
inc
xor
testb
and
imul
pop
adc
mov
data16
les
xchg
add
sub
add
add
sub
or
xor
adc
mov
mov
popa
andl
xlat
inc
lds
xchg
pop
cmp
inc
add
jl
add
movb
add
ja
test
cmp
test
mov
call
add
jnp
call
add
gs
bound
mov
pop
mov
pop
sub
test
jg
add
add
aam
lds
clc
or
push
add
add
dec
fucompp
mov
imull
cld
pop
out
jle
fwait
inc
add
cmp
add
add
pop
add
add
je
addb
add
add
add
add
add
popl
cmpsb
add
mov
add
mov
mov
xchg
add
sbb
enter
add
sbb
test
cmp
push
add
cmp
fadds
push
add
add
add
cli
or
mov
loope
pop
in
jno
sub
testb
add
aad
mov
fsubr
in
fdiv
add
and
mov
mov
dec
clc
inc
add
push
add
ja
rolb
in
data16
fbld
mov
test
imul
mov
mov
mov
lret
add
mov
adc
push
add
in
aad
add
mov
cmpsb
add
dec
mov
mov
nop
add
call
add
in
push
add
data16
inc
add
fstps
jmp
ret
add
mov
dec
mov
inc
shl
and
in
pop
arpl
add
fldt
sub
add
or
adc
sub
mov
mov
iret
movsl
insl
xchg
add
movsb
add
xor
mov
add
cmp
arpl
xchg
testb
enter
pusha
add
repz
xchg
mov
repnz
add
cmp
add
pop
fsub
add
add
ds
shl
add
pushf
push
add
inc
add
jge
imul
and
fdivl
jl
add
iret
insb
xlat
div
jp
mov
mov
cs
sub
fnstcw
and
mov
add
pusha
add
add
xchg
add
cltd
dec
sbb
cltd
movb
std
or
sbb
int3
and
jae
sbb
pop
mov
add
add
addb
pushf
in
enter
arpl
push
add
add
ljmp
nop
add
add
add
add
add
mov
mov
cmp
add
mov
lret
mov
nop
add
mov
outsb
popa
rolb
les
add
add
rcll
sub
push
repz
aad
add
add
lods
repz
add
add
repnz
xchg
push
cmpsb
add
repz
add
dec
rolb
push
inc
ljmp
je
enter
cwtl
movb
add
ffree
add
ret
mov
jge
movsb
add
testb
mov
fld
add
mov
in
clc
add
mov
add
ret
sub
fwait
mov
push
cmp
add
add
jns
bound
mov
addb
mov
jg
fcmovbe
dec
cmp
add
add
add
test
xchg
add
cmp
out
in
lret
cmp
fstp
testl
lds
enter
testb
add
rolb
inc
add
je
ror
test
push
add
mov
jl
leave
inc
or
add
xor
stos
and
add
mov
and
arpl
add
repnz
gs
add
add
xchg
add
add
add
fwait
pop
ficoms
mov
add
popf
push
add
push
mov
jle
ljmp
add
addb
hlt
add
jle
add
cmp
pop
and
jle
outsl
xor
add
mov
cwtl
lcall
mov
lock
add
xchg
movsb
add
and
mov
les
xchg
jne
sub
add
cmpsb
add
dec
hlt
add
push
inc
mov
cmp
jne
sbb
gs
pop
loope
cmp
cwtl
mov
add
div
cwtl
fildll
add
lea
push
add
push
jmp
mov
add
add
popf
leave
addr16
movb
add
add
push
add
add
cmpsl
lret
movb
and
add
push
rolb
jg
push
add
inc
add
arpl
mov
add
lea
sub
add
mov
cmp
add
add
jae
add
add
mov
inc
add
dec
sbb
inc
mov
clc
andl
mov
xor
stos
or
fsubrl
fwait
gs
add
pop
xchg
add
imul
add
rcll
or
lahf
ja
add
fisubl
add
dec
mov
or
ljmp
movsl
test
addb
add
inc
repz
or
test
scas
jmp
add
sti
fisubl
aad
add
mov
rolb
add
addr16
jp
rolb
ljmp
out
daa
pop
stos
push
add
nop
add
fildll
popa
mov
adc
fcoml
adc
fstps
fwait
imul
jl
sahf
dec
jmp
sbb
insb
cmp
add
jmp
add
jo
cmp
dec
push
add
mov
jecxz
add
icebp
cmc
push
int
or
add
addb
add
test
sti
cli
in
xor
inc
add
mov
test
cmpsl
or
add
add
add
push
add
mov
loop
lcall
add
add
testb
pusha
add
xlat
loope
sbb
add
iret
or
mov
push
test
sub
rcr
mov
add
jl
add
mov
xchg
movsb
add
adc
add
add
and
pop
push
out
sub
add
push
add
xchg
icebp
lds
loop
mov
add
jle
jae
add
push
popf
fcmove
pop
and
mov
test
inc
xor
push
sub
call
mov
stos
popf
pop
jecxz
cmpsl
xchg
add
loop
popf
sbb
add
add
insl
or
lea
adc
add
cmp
push
add
add
or
jg
add
add
add
jnp
pop
test
add
sub
dec
jbe
gs
dec
shrl
cmp
add
fs
ret
mov
jns
mov
daa
push
xchg
add
les
and
mov
push
cmpsl
cmpl
inc
add
pop
fsubl
icebp
lods
loop
mov
add
loopne
xor
jne
add
push
add
sti
mov
mov
icebp
out
add
and
xchg
test
les
rolb
sub
imul
jne
pop
xchg
add
hlt
add
std
push
add
add
add
mov
sahf
adc
add
jl
mov
je
or
inc
add
dec
xchg
add
mov
jmp
add
into
fstpt
mov
jge
add
mov
sbb
xlat
mov
pop
or
lcall
add
add
mov
xchg
and
add
add
repnz
cmp
jno
pop
adc
out
pushf
stos
jp
add
add
lds
add
add
pop
nop
add
adc
ljmp
aad
add
mov
push
in
inc
fcompl
scas
and
xchg
into
xor
add
add
add
and
shll
add
aad
add
inc
push
dec
sti
xor
negl
add
ds
push
push
add
add
add
rcrl
add
push
dec
xor
and
mov
add
bound
mov
insl
std
mov
in
jnp
add
add
pop
and
mov
and
mov
xchg
mov
inc
js
ljmp
xchg
add
add
addb
push
add
pop
dec
push
add
cmp
scas
push
imul
xchg
adc
pop
add
cmp
jle
into
lods
pop
pusha
add
loop
lds
push
add
mov
imul
fistpll
clc
scas
lods
out
inc
add
push
add
add
mov
dec
mov
cmpsl
and
mov
inc
add
into
dec
movsl
repz
xlat
mov
rolb
mov
sub
sbb
add
adc
jb
icebp
fbstp
jae
add
dec
cltd
inc
add
pop
push
addb
add
hlt
add
imul
cmp
adc
mov
push
test
mov
add
test
dec
xor
imul
cmp
popf
jmp
cmp
mov
clc
xor
adc
mov
mov
addr16
pop
rcll
xor
rorl
hlt
add
add
dec
leave
movb
test
into
adc
int
xor
pop
in
push
test
clc
push
add
add
incl
add
or
fdiv
sbb
jmp
mov
jmp
fistps
mov
add
xor
es
add
and
mov
scas
lods
jl
add
add
in
mov
js
mov
ds
push
inc
add
jmp
pop
sub
add
in
clc
jb
sub
or
scas
int
add
or
ja
mov
rolb
add
mov
add
add
add
addr16
loopne
push
fcoms
pop
aad
add
test
add
add
or
orl
pop
or
into
cmovp
add
add
add
mov
push
add
add
daa
mov
mov
fldcw
add
rorl
sub
add
das
adc
fdivrs
push
add
lds
add
in
mov
add
fstpt
inc
xchg
push
add
add
mov
loope
imul
pop
add
xor
cmpl
addb
addb
add
mov
test
add
xchg
add
and
rolb
popl
inc
jl
aad
shll
xchg
aaa
mov
rolb
fldenv
push
int3
mov
enter
mov
sub
imul
stos
aaa
sub
arpl
add
lock
mov
xchg
add
jge
mov
or
dec
dec
jl
push
aam
or
or
adc
lahf
sahf
jl
fwait
ja
and
mov
sti
xor
adc
add
mov
adc
push
add
add
sahf
mov
lock
jno
mov
pop
push
add
scas
rolb
and
cld
stc
ljmp
nop
add
jne
lahf
jo
paddusw
add
aad
add
mov
into
mov
addb
add
jle
add
stos
repnz
les
mov
jg
or
add
mov
aad
je
data16
add
mov
add
add
push
mov
jnp
add
mov
out
push
dec
and
jne
sub
mov
add
add
mov
inc
add
mov
add
mov
stc
testb
add
imul
pusha
add
mov
pop
push
add
sbb
repz
xor
cmp
add
inc
popa
mov
loope
jge
sub
xchg
cmp
test
movb
jbe
sub
ret
jge
xor
mov
data16
add
xchg
pop
and
mov
aaa
sbb
lret
sti
mov
adc
add
into
inc
add
lock
insb
fcmovb
add
mov
fadd
out
int
add
add
add
push
push
add
add
stos
inc
add
mov
sahf
inc
add
pop
cmpsl
movb
add
add
or
add
mov
bound
mov
sub
xchg
test
pop
xchg
add
pop
dec
push
add
or
stos
ljmp
add
jbe
pop
dec
jp
add
xor
stc
push
add
add
add
add
mov
xor
clc
cwtl
test
popa
add
add
cmpsb
add
jns
rcr
jae
add
xchg
cmpsl
cli
loope
popf
loope
inc
mov
hlt
add
add
pop
jecxz
or
add
mov
add
cmpsb
add
dec
mov
or
data16
add
add
add
dec
sub
sbb
xchg
fmull
xor
ja
aas
push
add
rolb
pop
xchg
add
add
rolb
enter
lcall
aam
stos
aad
add
lock
mov
sub
pop
pop
mov
scas
push
add
add
insl
in
inc
sbb
sbb
fmuls
inc
add
int3
pop
add
cmp
add
mov
imul
lret
movsb
add
js
add
cld
or
hlt
add
add
out
mov
movsb
add
pusha
add
xor
scas
mov
cld
insl
repnz
jecxz
mov
add
das
pop
cmp
in
mov
js
add
in
mov
enter
xor
sub
add
rolb
pop
lods
inc
add
mov
adc
sbb
add
sub
jmp
ficoms
sbb
inc
mov
fimull
jmp
add
mov
cltd
aam
aas
lds
add
sahf
fildl
std
mov
xchg
add
add
add
sbb
mov
push
add
adc
insb
jne
aam
fsubrs
pop
mov
ljmp
add
rcll
popf
aaa
adc
stos
sub
cs
add
int
aad
jle
add
mov
add
adc
movb
repz
aaa
rol
add
add
add
cmc
mull
mov
lahf
jl
jmp
add
lods
cmp
add
mov
push
adc
movsl
xor
mov
hlt
add
data16
mov
cs
add
add
mov
in
mov
add
xchg
inc
xchg
and
mov
js
leave
or
mov
mov
jge
pop
pop
cltd
push
sbb
add
insl
add
push
mov
imul
inc
adc
pop
cmp
repnz
add
mov
add
mov
out
testb
test
aaa
incl
in
rcrl
pop
xor
nop
add
aas
repnz
stos
add
xlat
stc
jb
clc
data16
add
add
push
add
add
pop
sbb
sbb
xchg
add
push
add
out
out
addb
xchg
stos
mov
add
movb
imul
add
mov
repz
jecxz
adc
xchg
negl
std
push
loope
mov
dec
popf
cmpsb
add
subl
add
add
add
add
dec
cmp
add
push
add
sub
jecxz
cmpl
and
subl
dec
in
mov
add
add
mov
add
sbb
test
and
mov
add
cli
dec
sub
add
push
cmpsb
add
cs
add
xor
loop
sub
inc
dec
ljmp
aaa
inc
add
adc
shll
dec
pushf
push
add
add
mov
push
iret
jmp
cli
sub
sbb
xchg
add
add
inc
nop
add
das
mov
add
push
mov
push
popa
xchg
push
add
test
jmp
xchg
xchg
stos
adc
repnz
lods
xor
test
cmp
aad
pop
cli
and
mov
addb
add
adc
add
mov
add
add
add
adc
and
addb
add
add
inc
addl
push
add
inc
add
cltd
sbb
mov
ja
lret
sahf
testb
xor
add
addb
out
or
loopne
mov
add
mov
shll
dec
or
add
loopne
testb
cmp
jbe
iret
jno
sub
add
jg
mov
pop
sahf
adc
xchg
in
add
jg
add
add
add
adc
or
push
add
and
mov
xchg
add
add
test
jno
test
add
add
dec
add
fnstcw
add
inc
add
dec
mov
push
movsl
mov
xor
int
mov
decl
movsb
add
jno
add
ljmp
mov
out
leave
inc
add
cmp
jmp
aaa
or
mov
add
stc
adc
movsl
cli
testl
fstp
sub
cmpsb
add
mov
pop
pop
rolb
xchg
add
incl
xor
sahf
adc
or
add
dec
je
dec
inc
adc
mov
add
mov
add
dec
daa
jp
jb
dec
inc
xor
daa
insb
into
lret
push
jns
jmp
pop
sbb
add
push
add
sbb
xor
adc
xchg
add
sbb
bound
mov
fsubrs
fisubs
xchg
xor
je
jmp
cmc
shll
int3
in
add
cmp
mov
repnz
xchg
add
xor
add
mov
lahf
aam
adc
aad
ja
std
mov
cmp
sub
pop
cmp
icebp
lahf
cmc
mov
add
add
out
jge
or
loopne
loopne
mov
jecxz
sbb
push
std
jno
out
or
push
rorl
insb
push
addb
fildl
jge
push
add
in
pop
xor
mov
test
push
bound
mov
xor
push
int
push
add
repnz
pushf
rolb
ja
jno
push
jae
add
outsb
stos
jmp
add
into
cs
movb
xchg
xor
outsb
inc
push
add
cwtl
mov
aaa
rolb
pop
call
add
pop
mov
outsb
loopne
xchg
push
add
testb
add
mov
inc
add
mov
add
add
lods
nop
add
test
add
cmp
mov
cmpsb
add
imul
add
add
add
add
shll
and
sub
adc
dec
xchg
add
pop
leave
mov
jnp
mov
add
sahf
pusha
add
movb
or
and
mov
xchg
mov
add
mov
setno
adc
test
mov
imul
xchg
pop
andl
add
mov
scas
jne
add
mov
cmc
push
mov
xchg
test
std
inc
add
aas
mov
rolb
push
rolb
imul
cmp
ja
cld
xchg
daa
popf
and
push
or
rorl
add
dec
pushf
lods
jno
add
xor
cld
add
adc
outsl
in
adc
mov
aad
imul
add
or
sub
add
mov
push
lret
outsb
pop
sbb
aas
scas
cmp
sbb
in
movsl
test
inc
add
dec
sti
dec
bound
mov
add
add
lret
jnp
add
sub
dec
cmp
pop
mov
add
mov
or
and
mov
addb
add
or
pop
addr16
add
add
pop
sbb
add
add
add
add
test
add
pusha
add
push
xchg
push
add
es
lds
add
add
cmpsb
add
xchg
adc
mov
mov
ljmp
inc
xchg
add
add
or
add
cmp
fcmovbe
inc
add
push
call
add
mov
add
sbb
sbb
add
mov
data16
add
mov
add
jne
cwtl
fwait
push
add
add
scas
repnz
leave
and
add
add
cmc
loopne
jb
and
mov
hlt
add
add
pop
sahf
addb
movlps
in
add
cmp
add
scas
mov
dec
test
push
fimuls
leave
dec
lods
mov
pop
cmp
sub
mov
ds
push
arpl
or
popf
fsubr
aas
ljmp
cli
in
mov
neg
mov
adc
jbe
lds
add
mov
loopne
or
outsb
sbb
add
pop
push
aad
add
xchg
int3
inc
add
sbb
inc
bswap
jp
cmc
rolb
rolb
mov
testb
aas
push
sbb
cmpsl
mov
inc
add
ret
mov
xor
addb
push
add
jg
lret
test
scas
out
add
nop
add
ret
xor
gs
addb
mov
movb
movsl
xchg
add
add
aam
dec
jp
lahf
jno
add
add
es
xlat
push
icebp
aam
jb
sub
nop
add
and
int
add
jle
add
add
add
add
xchg
add
mov
lea
inc
imul
mov
mov
mov
mov
sbb
add
dec
sbb
rolb
pop
scas
shr
add
and
add
addr16
pop
push
adc
sahf
or
add
and
xor
shll
inc
add
add
mov
mov
inc
push
add
sbb
aam
dec
cltd
jp
add
add
movsb
add
xchg
add
sahf
cmp
push
add
decb
repz
mov
hlt
add
icebp
sbb
in
mov
cwtl
add
into
aad
jnp
pop
imul
repnz
add
stc
xlat
inc
add
add
jmp
jae
add
add
xor
add
out
addr16
add
icebp
sbb
popa
and
mov
fnsave
int
mov
das
fcomi
add
add
add
xlat
shr
lea
dec
mov
inc
push
adc
mov
add
add
mov
push
mov
push
shr
pop
test
add
add
mov
leave
dec
pop
into
add
xchg
pushf
jnp
add
add
or
jno
test
adc
jae
push
inc
sub
aaa
adc
rolb
add
mov
popa
out
mov
outsl
pop
push
push
mov
add
dec
fwait
push
add
hlt
add
jle
pop
add
sub
in
ret
adc
add
adc
std
push
stos
cmp
lds
jae
cli
jo
scas
or
call
sbb
out
mov
mov
lret
rcr
popa
inc
movb
je
add
loope
imul
cld
and
add
add
xchg
add
pop
jmp
add
inc
add
repnz
jae
cmp
add
cmc
pushf
mov
fwait
cld
nop
jmp
add
add
fstl
mov
xchg
ret
add
mov
xchg
jle
adc
fwait
cld
nop
jmp
add
add
test
add
sbbl
add
jae
add
push
add
add
ret
add
push
clc
repnz
jae
pop
mov
mov
or
add
repnz
jae
push
add
pop
in
mov
fwait
cld
nop
jmp
cmp
lods
loopne
inc
lea
mov
repnz
jae
cmp
add
add
clc
repnz
jae
add
mov
add
push
clc
repnz
jae
aad
add
mov
mov
clc
repnz
jae
add
mov
add
add
popl
clc
repnz
jae
pop
add
push
add
not
inc
add
add
cmpsl
add
jmp
cld
and
add
repnz
jae
add
add
lods
add
clc
repnz
jae
lods
lahf
ljmp
cmp
repnz
jae
push
bound
inc
pop
jge
add
clc
repnz
jae
add
pop
mov
clc
repnz
jae
add
add
add
add
add
or
add
popf
add
movzwl
clc
repnz
jae
lahf
add
mov
clc
repnz
jae
or
enter
fwait
aam
add
push
xchg
in
lret
cld
mov
clc
repnz
jae
xchg
add
xchg
repz
into
leave
clc
repnz
jae
pop
lods
add
sub
add
mov
clc
repnz
jae
add
lods
lahf
sub
mov
jl
sbb
repnz
jae
add
sbb
nop
jae
mov
pop
sti
add
push
mov
xchg
ret
sahf
js
lea
mov
push
mov
xchg
ret
je
add
mov
add
and
mov
add
add
push
add
in
inc
add
add
add
test
movsb
clc
repnz
jae
push
bound
pop
cmp
xchg
rolb
mov
push
mov
xchg
ret
add
mov
add
outsl
mov
clc
repnz
jae
lea
add
rolb
repnz
jae
add
add
add
add
sub
add
push
add
add
clc
repnz
jae
push
sub
add
fwait
mov
push
mov
xchg
ret
push
lret
add
clc
repnz
jae
pop
lahf
add
jge
bound
xor
push
pop
push
push
mov
xchg
ret
add
add
lods
add
or
clc
repnz
jae
add
repnz
jae
add
add
push
add
push
clc
repnz
jae
add
inc
xor
or
mov
add
repnz
jae
add
add
adc
adc
jne
fwait
cld
nop
jmp
add
add
add
cmp
mov
xchg
ret
xor
in
inc
xor
add
clc
repnz
jae
scas
aas
mov
movl
cld
nop
jmp
lret
scas
cmp
add
mov
fwait
cld
nop
jmp
add
add
add
cmpsb
add
nop
jmp
mov
mov
lahf
add
repnz
jae
push
xchg
inc
loopne
mov
stc
clc
repnz
jae
xchg
popf
xor
pusha
lahf
loopne
pop
fwait
cld
nop
jmp
add
add
jge
add
cs
clc
repnz
jae
push
add
add
push
mov
xchg
ret
inc
sub
push
gs
pop
clc
repnz
jae
add
adcl
xor
add
clc
repnz
jae
add
roll
cmp
enter
jae
add
xchg
xorl
les
add
add
repnz
jae
add
push
fists
cld
nop
jmp
mov
inc
or
sub
add
fwait
cld
nop
jmp
mov
push
add
repnz
jae
add
loopne
cmpl
jp
add
mov
mov
mov
jmp
aad
add
js
cmp
add
sub
nop
jae
add
lret
xchg
add
add
mov
clc
repnz
jae
add
add
add
push
mov
insb
add
clc
repnz
jae
js
add
lahf
xor
jae
clc
repnz
jae
js
or
call
clc
repnz
jae
add
add
jns
add
clc
repnz
jae
cmp
add
test
fwait
cld
nop
jmp
add
scas
add
add
add
xchg
add
lret
add
mov
jae
mov
add
add
lock
test
rclb
xchg
inc
add
mov
pop
fadds
jmp
sub
mov
add
add
push
imul
nop
jae
push
dec
add
add
repnz
jae
add
push
sahf
fs
sbb
nop
jae
add
mov
clc
repnz
jae
add
gs
add
add
add
xchg
lea
pushl
push
mov
xchg
ret
push
cmp
push
mov
xchg
ret
mov
add
xchg
add
pop
push
mov
outsl
xor
sahf
add
ret
add
and
clc
repnz
jae
scas
add
mov
clc
repnz
jae
aad
std
lods
add
bound
mov
nop
jae
lret
add
mov
clc
repnz
jae
or
add
cmp
lock
rolb
jmp
jae
push
add
lods
xor
mov
push
mov
xchg
ret
cmp
add
mov
icebp
clc
repnz
jae
inc
bound
add
pusha
add
clc
repnz
jae
lea
pop
add
add
lock
add
pop
mov
add
add
jae
mov
add
mov
add
add
repnz
jae
aas
loopne
xchg
clc
mov
fwait
cld
nop
jmp
fs
outsl
js
push
push
mov
xchg
ret
mov
cmpsl
cwtl
mov
clc
repnz
jae
add
inc
cmp
mov
xchg
ret
push
add
testb
xor
fwait
cld
nop
jmp
add
and
push
mov
xchg
ret
add
add
add
pop
adc
add
add
add
add
sub
add
or
xor
add
clc
repnz
jae
std
lods
mov
repnz
jae
lods
pop
pop
int3
add
dec
outsl
popa
fs
repnz
jae
add
add
clc
repnz
jae
sub
lea
add
xor
out
push
clc
repnz
jae
mov
add
fs
clc
jne
fwait
cld
nop
jmp
mov
jmp
add
mov
int3
add
ss
repnz
jae
lods
lods
add
add
pusha
xchg
dec
je
clc
repnz
jae
add
sbb
repnz
jae
add
lods
mov
jne
push
mov
xchg
ret
add
add
mov
xchg
ret
add
xchg
mov
les
add
repnz
jae
add
in
sahf
mov
clc
repnz
jae
xchg
mov
add
push
fwait
cld
nop
jmp
add
sahf
mov
nop
jae
scas
add
mov
inc
push
mov
or
repnz
jae
loopne
add
mov
add
adc
xchg
movl
or
outsl
std
mov
call
clc
repnz
jae
add
sub
imul
jae
bound
mov
pop
fwait
cld
nop
jmp
add
lahf
add
fs
jne
fwait
cld
nop
jmp
add
sahf
scas
je
clc
repnz
jae
sub
out
out
clc
clc
repnz
jae
sahf
add
inc
rolb
mov
repnz
jae
add
add
dec
push
aaa
in
add
loope
inc
add
cmp
add
add
sbb
add
mov
nop
jae
bound
add
enter
jmp
cmp
inc
pop
add
pusha
bound
test
repnz
jae
aas
add
sbb
jmp
add
outsl
xchg
add
lods
loopne
stos
mov
push
mov
xchg
ret
add
add
add
clc
repnz
jae
or
push
xchg
xchg
push
adc
xlat
xchg
add
push
mov
xchg
ret
add
lods
add
lods
scas
push
push
mov
xchg
ret
sub
mov
push
mov
xchg
ret
mov
mov
add
jbe
fwait
cld
nop
jmp
mov
bound
mov
repnz
jae
add
jge
add
add
repnz
jae
add
add
add
xchg
clc
repnz
jae
add
lahf
add
mov
clc
repnz
jae
bound
add
add
cld
nop
jmp
in
inc
add
clc
repnz
jae
push
mov
inc
xchg
inc
adc
int3
mov
fwait
cld
nop
jmp
add
xor
popf
gs
and
push
mov
xchg
ret
push
add
or
sub
repnz
jae
mov
inc
push
dec
cld
push
mov
xchg
ret
int3
add
cmp
xor
add
sbb
lock
mov
xchg
ret
bound
push
add
push
add
push
fwait
cld
nop
jmp
fs
xchg
sub
add
push
mov
xchg
ret
std
add
add
add
add
dec
mov
clc
repnz
jae
add
lds
add
push
js
add
or
inc
sahf
mov
jmp
lret
add
push
call
clc
repnz
jae
bound
add
or
jae
add
add
mov
enter
jae
add
scas
mov
aad
push
push
add
mov
xchg
ret
cmp
xor
adc
repnz
jae
add
lret
bound
pop
lcall
adc
add
add
dec
push
push
mov
xchg
ret
lods
sub
xor
push
mov
xchg
ret
sahf
loopne
add
ljmp
fwait
cld
nop
jmp
add
das
ret
clc
repnz
jae
in
push
add
mov
add
add
mov
clc
repnz
jae
add
popf
add
inc
add
movzwl
clc
repnz
jae
std
add
push
cmp
add
jae
pop
add
mov
add
loopne
mov
imul
xor
adc
and
push
mov
xchg
ret
mov
inc
add
nop
jae
add
xchg
adcl
insl
push
add
fwait
cld
nop
jmp
push
lods
sahf
aad
out
push
clc
repnz
jae
ljmp
add
test
repnz
jae
add
repnz
jae
add
add
xor
inc
add
add
cmpsl
add
repnz
jae
aad
add
add
mov
xchg
ret
xor
add
cmp
dec
sub
adc
inc
add
xchg
jbe
add
test
hlt
lcall
pop
add
jge
lret
or
je
clc
repnz
jae
lret
inc
add
push
add
cmp
add
cmp
mov
xchg
ret
cmp
add
orl
inc
add
cmpsl
sub
xor
add
add
clc
repnz
jae
dec
loopne
mov
push
clc
repnz
jae
xor
add
sub
jae
add
jge
add
call
push
mov
xchg
ret
add
cmpl
nop
jae
push
add
or
add
add
dec
adc
inc
add
mov
xchg
add
add
clc
repnz
jae
add
add
mov
add
ljmp
ret
pop
add
push
add
clc
repnz
jae
std
std
dec
js
mov
nop
jae
cmp
or
mov
inc
mov
pusha
clc
repnz
jae
sub
add
jnp
jl
and
outsl
loop
add
push
inc
push
frstor
popa
add
cld
nop
jmp
dec
add
outsb
add
clc
repnz
jae
or
outsl
shr
push
mov
xchg
ret
mov
addr16
sub
clc
repnz
jae
outsl
mov
or
push
mov
xchg
ret
push
add
add
add
and
clc
repnz
jae
push
add
add
push
mov
xchg
ret
add
mov
clc
repnz
jae
pop
ss
pop
subl
clc
repnz
jae
mov
sub
popa
aad
add
fs
mov
inc
jp
fwait
cld
nop
jmp
scas
pusha
xchg
add
sbb
call
and
lret
xor
cmp
cli
clc
repnz
jae
sahf
sub
lods
add
jne
and
fwait
cld
nop
jmp
add
add
add
push
dec
push
mov
xor
pop
jg
add
add
add
pop
add
and
mov
add
add
add
ljmp
add
shr
fwait
cld
nop
jmp
add
add
leave
fwait
cld
nop
jmp
add
add
add
mov
add
les
mov
xchg
ret
add
add
add
movswl
clc
repnz
jae
jge
lret
pop
ljmp
repnz
jae
xor
add
dec
and
fwait
cld
nop
jmp
sahf
add
add
nop
jae
sahf
add
add
push
push
mov
xchg
ret
add
add
xchg
add
test
lahf
mov
clc
repnz
jae
add
aam
push
add
mov
clc
repnz
jae
cmp
mov
clc
repnz
jae
mov
sub
clc
repnz
jae
add
dec
mov
fwait
cld
nop
jmp
add
add
xchg
aad
dec
mov
clc
repnz
jae
push
ljmp
add
clc
repnz
jae
pop
sahf
lea
mov
nop
jmp
pop
xchg
in
add
mov
lods
or
add
repnz
jae
mov
sub
xchg
repnz
add
add
nop
jae
sub
add
je
clc
repnz
jae
add
mov
push
mov
xchg
ret
inc
add
add
pop
jg
xchg
adc
add
adc
add
cmp
push
iret
rep
clc
repnz
jae
add
add
xor
mov
clc
repnz
jae
cmp
xor
add
nop
jae
jge
add
add
add
andl
jae
add
add
jge
loopne
fwait
cld
nop
jmp
add
cmpsl
mov
cld
nop
jmp
add
add
jne
clc
repnz
jae
inc
xor
repz
mov
add
repnz
jae
add
add
mov
fwait
cld
nop
jmp
mov
or
repnz
jae
outsl
add
pop
lods
sub
repnz
jae
lods
add
lret
pop
mov
push
mov
xchg
ret
in
xchg
std
add
xchg
xor
pop
fwait
cld
nop
jmp
add
popf
add
add
add
mov
mov
xchg
ret
aas
std
cmp
add
data16
pop
adc
add
repnz
jae
in
add
nop
jmp
outsl
xchg
bound
add
add
add
lods
repz
add
add
jmp
jae
mov
add
add
fwait
cld
nop
jmp
lahf
mov
int3
std
jno
add
add
movzwl
fwait
cld
nop
jmp
lods
xor
cmp
repz
mov
xchg
ret
add
loop
cmp
jae
sub
aas
bound
mov
clc
repnz
jae
add
add
inc
add
test
repnz
jae
add
movb
lahf
roll
xchg
ret
inc
add
inc
adc
outsb
and
repnz
jae
scas
add
add
push
push
mov
xchg
ret
sahf
pusha
aad
add
ljmp
mov
add
inc
push
cmp
add
clc
repnz
jae
sahf
sub
xchg
int
add
add
add
cmp
test
fwait
cld
nop
jmp
push
mov
xchg
add
pop
clc
repnz
jae
sub
je
add
jl
clc
repnz
jae
popf
add
add
or
fwait
cld
nop
jmp
mov
add
add
add
jmp
add
push
push
add
sbb
mov
xchg
ret
push
sahf
add
mov
fwait
cld
nop
jmp
add
std
add
lret
jl
and
repnz
jae
jbe
dec
lods
add
add
mov
clc
repnz
jae
inc
sub
lret
jg
clc
repnz
jae
std
push
loopne
ss
out
lds
shr
clc
repnz
jae
add
push
mov
clc
repnz
jae
fs
xchg
test
clc
repnz
jae
xor
push
loopne
pop
fwait
cld
nop
jmp
mov
lea
dec
mov
fwait
cld
nop
jmp
sub
pusha
clc
repnz
jae
add
add
cmpsl
push
add
add
clc
repnz
jae
add
aam
enter
nop
jmp
add
je
cmpsl
xor
add
ja
clc
repnz
jae
popf
add
cld
nop
jmp
add
add
xor
sti
push
fwait
cld
nop
jmp
add
sub
or
movsl
clc
repnz
jae
pop
add
pop
mov
clc
repnz
jae
add
add
xor
clc
repnz
jae
add
add
inc
add
cmp
test
in
clc
repnz
jae
add
sub
add
push
mov
xchg
ret
push
ss
xchg
add
xchg
lahf
call
push
mov
xchg
ret
ss
add
add
jge
clc
repnz
jae
aad
xchg
sahf
cmp
cmp
cld
nop
jmp
add
inc
int3
add
add
jae
scas
xchg
mov
push
xchg
cmp
jns
clc
repnz
jae
add
add
add
lret
add
mov
add
mov
add
push
or
repnz
jae
add
add
inc
pop
pop
clc
repnz
jae
add
aas
add
add
mov
stos
push
mov
xchg
ret
je
aad
push
add
cld
nop
jmp
add
add
addl
push
mov
xchg
ret
jge
xor
jmp
add
push
add
add
mov
add
push
mov
xchg
ret
inc
cmp
call
clc
repnz
jae
add
std
add
out
pop
push
add
mov
fwait
cld
nop
jmp
add
add
fwait
cld
nop
jmp
add
lret
add
outsl
div
fwait
cld
nop
jmp
cmp
add
cmpw
fwait
cld
nop
jmp
add
add
add
sub
mov
adc
cld
nop
jmp
mov
dec
sub
mov
xchg
ret
add
add
push
add
cld
nop
jmp
add
add
mov
xchg
ret
dec
mov
cmp
mov
xchg
ret
add
add
inc
add
nop
jae
add
xor
xchg
or
adc
lods
into
inc
add
mov
mov
inc
xchg
adc
add
add
mov
test
sti
lcall
push
add
jbe
inc
add
rclb
into
rolb
xchg
ret
mov
add
into
push
clc
repnz
jae
mov
inc
pop
add
testb
mov
clc
repnz
jae
add
add
cmc
xchg
and
mov
je
clc
repnz
jae
mov
clc
repnz
jae
add
push
int3
add
and
ss
clc
repnz
jae
mov
jne
clc
repnz
jae
push
je
pop
jne
fwait
cld
nop
jmp
add
xor
push
push
mov
xchg
ret
add
cmp
ret
clc
repnz
jae
lahf
add
push
add
mov
push
mov
xchg
ret
add
add
repnz
jae
add
mov
add
mov
clc
repnz
jae
mov
cmpsl
add
pusha
push
add
pop
add
add
add
bound
push
ret
test
push
mov
xchg
ret
inc
aad
add
add
in
add
mov
clc
repnz
jae
in
loopne
outsl
push
xchg
cmp
jae
bound
add
filds
add
fwait
cld
nop
jmp
add
add
scas
mov
clc
repnz
jae
lods
scas
lret
add
clc
repnz
jae
fs
pop
je
lods
pop
test
push
mov
xchg
ret
add
pusha
add
bound
mov
or
fwait
cld
nop
jmp
inc
inc
add
push
mov
in
inc
xchg
add
and
xlat
pop
push
push
mov
xchg
ret
add
loopne
add
add
loopne
inc
add
nop
jae
sahf
lret
pusha
cmp
add
push
push
mov
xchg
ret
add
sbb
jbe
inc
add
push
push
push
adc
insl
mov
clc
repnz
jae
or
into
div
fwait
cld
nop
jmp
ljmp
add
mov
xchg
ret
mov
sbb
jmp
lahf
sub
js
add
mov
add
mov
mov
fwait
cld
nop
jmp
add
add
pop
movzwl
fwait
cld
nop
jmp
mov
push
cmpsl
add
xor
fwait
cld
nop
jmp
add
add
add
add
add
pusha
clc
repnz
jae
add
add
fucomi
repnz
add
outsl
xchg
in
add
add
lahf
add
adc
clc
repnz
jae
xor
sub
mov
push
clc
repnz
jae
inc
int3
mov
add
mov
in
add
lds
push
mov
xchg
ret
add
outsl
add
push
add
sub
clc
repnz
jae
add
push
cmp
repnz
jae
dec
pop
loopne
lods
mov
mov
add
jmp
add
aas
orl
adc
add
nop
jmp
push
add
add
push
or
mov
xchg
ret
int3
add
add
add
push
clc
repnz
jae
xorl
push
mov
repnz
jae
jge
lods
add
gs
add
je
clc
repnz
jae
add
xchg
xlat
mov
jmp
fs
add
push
sub
and
clc
repnz
jae
push
pop
int3
add
adc
jae
push
pop
or
add
add
push
push
mov
xchg
ret
mov
add
add
and
repnz
jae
add
cli
mov
clc
repnz
jae
add
mov
sub
add
repnz
jae
push
bound
push
pusha
add
add
lret
nop
jmp
pusha
add
push
je
std
add
add
repnz
jae
gs
scas
add
loop
mov
cld
nop
jmp
push
add
add
add
add
sub
clc
repnz
jae
std
add
lods
fimuls
lcall
ret
xor
insl
inc
push
mov
xchg
ret
std
push
bound
cmp
js
mov
clc
repnz
jae
lret
inc
cmp
mov
inc
xor
dec
add
push
mov
xchg
ret
add
cmp
add
repnz
jae
jbe
add
add
push
add
or
add
fwait
cld
nop
jmp
add
push
mov
nop
jae
inc
std
mov
cmp
mov
xchg
ret
add
xor
add
mov
xchg
ret
add
js
aas
push
add
add
clc
repnz
jae
ljmp
mov
xchg
ret
add
mov
jge
clc
repnz
jae
ljmp
mov
push
mov
xchg
ret
dec
sub
xor
push
mov
xchg
ret
sub
add
dec
cmpl
fwait
cld
nop
jmp
add
add
push
pop
lods
clc
repnz
jae
push
add
add
add
add
add
push
mov
xchg
ret
lahf
add
add
or
repnz
jae
pusha
add
add
and
push
mov
xchg
ret
add
add
es
add
cmpsl
popf
mov
add
or
stos
clc
repnz
jae
push
add
es
push
fwait
cld
nop
jmp
push
add
xchg
mov
lock
clc
repnz
jae
xor
pop
jbe
push
leave
sub
repnz
jae
mov
je
cmp
inc
add
inc
mov
add
sub
repnz
jae
add
sub
xchg
add
xchg
add
add
add
repnz
jae
aas
loopne
add
movsl
add
xor
daa
add
add
mov
clc
repnz
jae
push
add
lahf
add
and
push
mov
xchg
ret
loopne
mov
push
clc
repnz
jae
add
add
add
je
clc
repnz
jae
add
add
mov
mov
push
pop
mov
and
loopne
cld
nop
jmp
add
add
push
add
cmp
fwait
cld
nop
jmp
add
jbe
clc
repnz
jae
cmp
add
in
jmp
add
dec
inc
add
add
loop
clc
repnz
jae
add
add
xor
clc
repnz
jae
cmp
sub
fwait
cld
nop
jmp
cmp
bound
mov
ja
add
repnz
add
repnz
jae
push
add
add
je
clc
repnz
jae
add
jo
add
add
add
clc
repnz
jae
add
add
sub
add
inc
add
add
jge
jge
scas
jmp
cmp
add
pop
xor
mov
sahf
sub
mov
xchg
ret
xchg
mov
jbe
rolb
in
xchg
clc
repnz
jae
pop
add
lea
add
jecxz
clc
repnz
jae
push
add
jecxz
add
jge
mov
add
push
fwait
cld
nop
jmp
add
gs
push
notl
add
add
add
jmp
pop
imul
addl
add
add
add
popa
clc
repnz
jae
scas
add
sub
adc
mov
xor
dec
mov
clc
repnz
jae
pop
add
add
xchg
sub
add
incl
inc
xorl
or
add
add
add
xor
jbe
inc
fdivs
rclb
xor
add
mov
add
test
clc
repnz
jae
add
mov
xchg
ret
or
sahf
add
cmp
repnz
jae
add
xchg
sahf
sub
push
push
mov
xchg
ret
push
cmp
dec
pop
push
mov
xchg
ret
scas
in
lods
add
mov
bound
cld
nop
jmp
inc
add
cmpsl
iret
and
fwait
cld
nop
jmp
add
cmp
add
sar
nop
jae
gs
add
pop
add
mov
fwait
cld
nop
jmp
ljmp
jl
test
repnz
jae
add
jp
clc
repnz
jae
mov
std
or
add
add
icebp
ds
push
mov
xchg
ret
push
mov
pop
and
clc
repnz
jae
xchg
add
xchg
lea
fwait
cld
nop
jmp
xorl
add
pop
clc
repnz
jae
add
add
sahf
add
jge
push
mov
xchg
ret
add
add
add
dec
mov
clc
repnz
jae
dec
lea
addl
add
clc
repnz
jae
mov
pop
sub
inc
adc
repnz
jae
add
lahf
add
add
call
clc
repnz
jae
inc
add
aad
jmp
clc
repnz
jae
add
lods
cmp
xchg
rolb
xchg
ret
add
sahf
add
add
xor
outsb
push
push
mov
xchg
ret
add
add
add
sub
jae
lods
add
push
inc
add
add
repnz
jae
cmp
lahf
popf
add
xchg
and
add
clc
repnz
jae
push
add
add
mov
clc
repnz
jae
add
std
add
add
clc
repnz
jae
add
cmp
mov
lcall
call
xor
repnz
jae
scas
add
cmpsl
jbe
pop
cmp
repnz
jae
popf
int3
add
push
push
add
pop
clc
repnz
jae
pusha
mov
push
scas
add
mov
clc
repnz
jae
cmp
add
push
jne
clc
repnz
jae
sub
add
pop
and
clc
repnz
jae
push
add
mov
pop
dec
clc
repnz
jae
add
add
sahf
add
aas
sub
pushf
fildl
xchg
ret
add
add
push
mov
xchg
ret
lods
xchg
add
lods
sbbl
add
fwait
cld
nop
jmp
loopne
js
lret
mov
clc
repnz
jae
add
add
add
dec
inc
clc
repnz
jae
add
jge
sbb
inc
xor
clc
repnz
jae
je
push
add
popa
clc
repnz
jae
ljmp
inc
xor
sti
and
push
mov
xchg
ret
add
mov
clc
repnz
jae
std
aas
add
pop
mov
popa
add
mov
xchg
ret
ss
add
jae
add
pop
clc
repnz
jae
inc
add
pop
mov
add
xor
pusha
add
clc
repnz
jae
je
xchg
mov
fdivr
repnz
jae
push
add
add
add
lock
add
fwait
cld
nop
jmp
mov
loopne
mov
pushf
mov
clc
repnz
jae
add
mov
xchg
add
fwait
cld
nop
jmp
add
add
add
xchg
adc
shll
add
add
out
repnz
pushl
add
inc
adc
repnz
jae
xchg
loopne
pusha
add
add
mov
clc
repnz
jae
add
mov
add
mov
xchg
ret
popf
loopne
add
add
mov
pop
mov
clc
repnz
jae
inc
pusha
gs
add
sub
nop
jmp
mov
mov
pusha
pop
stos
push
mov
xchg
ret
lods
mov
add
add
in
push
clc
repnz
jae
pop
add
add
push
mov
xchg
ret
mov
add
add
clc
repnz
jae
bound
push
lret
push
clc
repnz
jae
mov
sub
add
add
dec
clc
repnz
jae
inc
cmp
add
push
mov
xchg
ret
cmp
andl
lcall
out
add
add
mov
leave
mov
push
mov
xchg
ret
add
add
cld
nop
jmp
xchg
mov
lret
cmpl
nop
jmp
mov
push
add
dec
pusha
clc
repnz
jae
add
add
add
add
repnz
jae
mov
lret
jge
xchg
add
push
clc
repnz
jae
std
lahf
jbe
cmpl
push
mov
xchg
ret
inc
add
jbe
gs
call
clc
repnz
jae
xchg
add
sub
jno
inc
add
add
add
lcall
add
add
push
add
mov
add
fwait
cld
nop
jmp
std
outsl
add
add
mov
clc
repnz
jae
mov
bound
sub
add
repnz
jae
pop
add
add
mov
jae
add
add
imul
sbb
cmp
ret
add
scas
add
add
inc
add
add
loopne
incl
add
add
inc
xor
pop
add
fwait
cld
nop
jmp
je
bound
push
cmp
inc
in
xchg
mov
jne
add
add
sbb
repnz
jae
dec
add
cmpw
fwait
cld
nop
jmp
add
mov
mov
clc
repnz
jae
lret
cmp
clc
repnz
jae
mov
add
cs
clc
repnz
jae
add
popf
add
std
add
add
clc
repnz
jae
lret
je
cmpsl
add
inc
and
clc
repnz
jae
add
mov
push
mov
xchg
ret
pop
aas
aas
js
inc
adc
movb
push
clc
repnz
jae
add
add
mov
xchg
ret
lret
add
lsl
fwait
cld
nop
jmp
add
inc
mov
addb
jmp
js
add
bound
mov
add
int3
les
fwait
cld
nop
jmp
add
cmpsl
add
data16
stos
mov
fwait
cld
nop
jmp
std
xor
add
push
rclb
xor
inc
add
add
arpl
mull
repnz
jae
aad
add
mov
push
mov
xchg
ret
inc
add
dec
add
ret
clc
repnz
jae
add
cmp
inc
bound
cmp
mov
clc
repnz
jae
inc
add
cmp
sub
clc
repnz
jae
add
mov
pop
push
mov
xchg
ret
xor
add
orps
repnz
jae
add
mov
inc
or
jmp
mov
add
adc
aam
movsl
testb
push
clc
repnz
jae
add
jge
add
add
or
clc
repnz
jae
lods
add
add
add
or
push
cmp
ret
lret
cmpsl
lods
push
mov
clc
repnz
jae
add
lods
and
push
mov
xchg
ret
push
cmpsl
std
add
out
jne
clc
repnz
jae
ss
addb
add
mov
clc
repnz
jae
xor
sub
fwait
cld
nop
jmp
pop
add
jbe
and
mov
xchg
ret
lret
sub
xor
clc
repnz
jae
add
add
pop
clc
repnz
jae
cmpsl
lret
mov
xchg
sbb
push
mov
xchg
ret
cmp
std
decb
cld
nop
jmp
inc
outsl
add
or
fwait
cld
nop
jmp
lret
add
add
cmp
add
add
mov
clc
repnz
jae
sub
and
push
fs
repnz
jae
add
xor
push
sub
sti
int
add
addl
sbb
sti
clc
repnz
jae
inc
lea
mov
jne
and
aam
out
mov
jae
lret
std
mov
loopne
lret
in
dec
jmp
ljmp
xor
add
clc
repnz
jae
mov
mov
scas
or
repnz
jae
lea
lea
pusha
sahf
jne
clc
repnz
jae
lret
xchg
mov
add
mov
push
mov
xchg
ret
lods
add
outsl
add
add
cld
nop
jmp
add
add
mov
push
mov
mov
add
sub
test
repz
and
jl
inc
add
outsb
add
push
mov
xchg
ret
add
scas
mov
fdivl
rclb
int3
inc
add
add
add
fadds
fwait
cld
nop
jmp
add
add
xor
sti
add
add
add
add
test
push
mov
xchg
ret
inc
add
add
xchg
outsl
popa
clc
repnz
jae
inc
mov
inc
inc
inc
add
sub
clc
repnz
jae
jge
pusha
lods
and
push
mov
xchg
ret
loopne
pop
scas
add
pop
push
mov
xchg
ret
add
add
bound
mov
clc
repnz
jae
add
add
inc
pop
mov
clc
repnz
jae
xor
add
cmp
or
repnz
jae
add
cmpsb
add
repnz
jae
jbe
add
out
xor
clc
repnz
jae
sub
add
jno
inc
add
push
clc
repnz
jae
aas
sahf
push
add
add
lock
clc
repnz
jae
scas
inc
lahf
or
push
mov
xchg
ret
add
fmuls
test
inc
add
push
pop
sub
inc
call
inc
add
addl
jne
clc
repnz
jae
in
mov
add
popf
imul
daa
lds
xchg
ret
lea
add
popa
clc
repnz
jae
lods
inc
or
mov
inc
arpl
or
inc
add
add
sbb
cld
nop
jmp
add
ljmp
mov
clc
repnz
jae
add
ljmp
add
clc
repnz
jae
add
add
nop
jmp
inc
gs
mov
xchg
lcall
cmpsb
fdivr
incl
add
add
add
sub
clc
repnz
jae
add
inc
add
clc
repnz
jae
mov
lods
mov
add
repnz
jae
add
subl
repnz
jae
add
bound
add
mov
push
lret
fwait
cld
nop
jmp
inc
lahf
add
push
add
or
sbbb
nop
jmp
inc
sahf
inc
add
add
xor
clc
repnz
jae
add
add
int
repnz
repnz
jae
pop
lret
mov
xor
clc
repnz
jae
add
add
cmp
add
in
pop
popa
repz
add
add
add
inc
add
out
insl
add
mov
mov
adc
push
add
ret
xchg
cmp
in
int
mov
arpl
add
xchg
push
add
add
pop
xchg
add
and
ds
add
mov
les
ret
xor
cltd
arpl
inc
add
movsl
out
mov
pop
mov
mov
pop
in
fcompp
mov
lret
jecxz
add
push
das
dec
add
add
dec
icebp
into
push
leave
sub
nop
add
add
push
jo
pop
inc
add
push
add
pushf
mov
jne
loopne
lods
jo
je
mov
push
add
jne
mov
jg
fadd
add
push
dec
xchg
sub
add
scas
xchg
add
mov
jnp
repz
inc
add
out
push
cmp
inc
mov
pop
adc
push
add
pop
rorl
adc
ret
xchg
add
xor
inc
pop
and
jo
insb
jae
jmp
cmp
push
add
mov
jg
push
rolb
inc
add
inc
add
or
add
mov
add
add
dec
mov
add
rolb
add
push
cs
ljmp
decb
imul
bound
mov
imul
movb
mov
repz
mov
jmp
add
add
mov
jp
push
rolb
cld
push
add
push
add
inc
add
dec
cmc
or
add
pop
sbb
cld
sahf
lahf
addl
scas
lods
mov
fistpll
xchg
mov
out
cltd
mov
cwtl
mov
fwait
sub
add
outsl
roll
fildl
add
mov
add
imul
add
dec
add
cs
out
scas
rolb
addb
mov
inc
aam
add
mov
or
add
mov
lret
sbb
daa
dec
lret
xlat
pop
movsl
or
test
xchg
add
pop
mov
rolb
ss
inc
add
add
xlat
in
ja
enter
daa
hlt
add
add
and
mov
test
sbb
mov
lds
mov
imul
sub
popf
mov
mov
fisttps
add
fwait
cwtl
movsb
add
loopne
sbb
or
add
sbb
data16
les
jae
add
add
mov
mov
add
fdiv
add
pop
lods
addr16
insl
or
sbb
dec
mov
ret
mov
test
movb
xor
cmp
call
test
mov
repnz
jge
push
add
mov
add
mov
pop
adc
pusha
add
lret
aas
ja
pop
cmp
add
clc
sub
pusha
add
pop
lock
add
add
mov
and
mov
jmp
adc
jg
mov
das
int
add
aam
fidivl
add
rolb
nop
add
lock
and
cmpsb
add
stos
insl
addr16
add
inc
cmc
xchg
add
add
in
popf
lea
dec
fwait
add
mov
add
sub
pushf
insb
out
mov
les
out
dec
sbbl
add
add
dec
rep
repnz
js
dec
ficompl
push
xchg
add
push
xor
add
jecxz
test
cmp
mov
pop
int3
mov
add
out
push
cmp
mov
lods
xor
pushf
push
xchg
cmpsl
insl
mov
add
push
add
subl
lods
bound
mov
jne
add
add
fdivs
pushf
pop
das
inc
add
psrlq
add
mov
push
xor
push
aad
sti
jg
push
sub
push
sub
in
lea
lahf
add
fidivl
add
add
adc
movsl
js
add
mov
outsb
add
add
add
in
outsb
aaa
out
in
add
add
mov
add
xchg
and
mov
adc
add
xor
jns
pop
test
and
xchg
pop
push
add
add
add
pop
std
scas
jle
movsl
push
add
shll
jne
pushf
or
mov
add
add
rolb
rorl
sub
xchg
jne
add
sub
roll
add
mov
jne
insb
fdivs
sub
jp
dec
or
xor
cmp
pop
int
add
movb
mov
leave
mov
repz
add
push
in
in
jns
mov
add
mov
adc
ret
xor
pop
or
xchg
cmp
out
sbb
sbb
pop
push
dec
jmp
add
add
lret
pop
hlt
add
inc
add
cmp
test
rolb
mov
mov
mov
add
jae
aam
add
jecxz
shll
add
sbb
add
lods
fdivr
add
add
rolb
pop
mov
lahf
clc
daa
lret
inc
ficomps
xor
jns
stos
push
dec
sti
insl
add
cld
pop
add
add
xor
arpl
add
mov
mov
je
pusha
add
jo
mov
movsl
aaa
inc
jl
or
add
test
fldl
push
dec
lahf
out
adc
xchg
cltd
outsl
stos
add
mov
cli
push
add
pop
bound
mov
xchg
add
jae
add
or
add
add
in
add
inc
add
add
add
add
mov
add
jle
add
fdivrl
add
add
push
add
xchg
add
add
inc
aas
xchg
aad
add
fcoml
cmp
jbe
and
sub
add
sub
gs
sbb
sbb
jecxz
add
sbb
add
add
arpl
add
pop
call
inc
add
push
xor
sbb
add
adc
cmc
mov
add
jbe
sub
dec
mov
xor
stos
cld
fucomp
dec
in
pop
add
enter
cmpsb
add
inc
addb
jecxz
loopne
cmp
add
iret
inc
addb
add
pop
cld
jns
mov
add
movl
cmp
mov
add
out
or
add
mov
and
mov
into
sub
add
sub
lds
aaa
dec
rolb
in
xor
fdivr
push
add
add
add
dec
and
push
lret
test
into
sbb
stc
cmpsb
add
mov
jmp
jecxz
cli
lock
mov
push
ret
mov
ja
mov
hlt
add
enter
pushf
mov
add
mov
cmpsb
add
add
stos
cmp
sub
add
add
mov
xor
sbb
mov
bound
mov
add
mov
add
lods
mov
dec
pop
sbb
add
outsb
sub
xchg
nop
add
cmp
xchg
add
pop
int
ljmp
mov
push
push
or
add
jmp
js
jne
xchg
sqrtps
clc
rolb
pop
aad
cmpsb
add
nop
add
push
add
add
sub
add
lret
test
movsl
mov
add
sbb
das
inc
add
ret
and
mov
xor
push
push
push
add
add
pop
aam
inc
add
add
jae
add
int
xchg
cli
jno
mov
add
push
add
add
aam
iret
xchg
add
add
dec
sbb
mov
add
mov
movsl
push
das
push
add
add
inc
add
lret
jge
clc
cli
and
mov
add
popf
and
mov
adc
add
les
icebp
pusha
add
enter
cmp
add
add
aad
add
mov
mov
xor
insl
aaa
lahf
call
dec
ret
shrl
add
add
push
dec
sbb
add
add
insl
sub
add
stos
inc
add
in
add
add
add
aas
jae
add
sbb
sbb
ja
lea
mov
add
add
add
movl
jo
xor
add
xchg
add
mov
cmc
xor
data16
loop
fcompl
sbb
rolb
bound
mov
jp
enter
inc
adc
sbb
mov
adc
jge
add
add
mov
pop
mov
and
mov
inc
add
push
sbb
sbb
add
add
sti
ja
pop
push
in
stos
xchg
push
into
xchg
push
add
mov
and
mov
mov
jns
add
and
add
push
add
jge
das
std
ss
and
adc
add
push
imul
cld
mov
pushf
mov
aam
imul
add
inc
add
loope
jg
add
dec
mov
in
dec
push
jns
cmp
cmpsl
pop
aaa
fsub
push
out
pop
dec
test
int3
sti
add
mov
cmp
sbb
fstl
aam
out
aad
mov
add
cmpsb
add
jne
addl
fcomps
add
ljmp
into
jns
ret
push
adc
test
push
add
adc
mov
dec
jno
imul
and
imul
or
add
roll
add
mov
and
cmp
add
mov
repnz
adc
mov
and
dec
push
ja
add
shl
add
add
push
addr16
sbb
mov
add
imul
add
add
sub
cs
repnz
stos
inc
add
out
mov
ret
add
sbb
add
and
mov
std
cmp
movb
add
cmp
add
sbb
call
nop
add
lock
add
cld
and
cwtl
add
push
add
add
add
mov
add
add
add
push
add
gs
mov
scas
pop
leave
inc
add
loop
xor
pop
fists
add
push
add
std
rcr
ljmp
add
data16
xor
stos
ficompl
mov
and
mov
fisubrl
add
aad
push
add
dec
lret
rolb
adc
add
clc
mov
testb
add
sbb
add
leave
fsubrp
jbe
or
pop
into
fmuls
mov
add
repz
push
push
mov
add
jg
daa
push
add
mov
add
mov
and
leave
movsl
rol
rolb
test
cmp
insb
mov
add
pushf
xchg
popf
bound
mov
xchg
add
shll
lods
jmp
add
add
jns
test
in
lcall
ds
sahf
inc
hlt
add
sbb
pop
mov
or
xor
mov
mov
lret
inc
cli
cmpsb
add
mov
lret
rolb
ret
fildl
add
adc
sub
enter
add
sub
jecxz
add
insb
adc
cmp
and
in
loop
sbb
ljmp
cmp
push
test
inc
add
add
int3
mov
push
fsubl
or
push
add
es
divl
xchg
add
and
mov
and
add
add
push
cs
add
add
add
pushf
fisttps
dec
lea
mov
add
movb
movb
xor
testl
sub
mov
leave
lds
push
sbb
ds
fidivs
ret
lret
rcrl
inc
cltd
dec
sahf
mov
movsl
mov
add
xchg
add
push
add
daa
aad
cltd
cmpsb
add
cmp
stc
push
lret
insb
and
add
inc
add
add
pop
adc
testb
add
roll
aas
scas
inc
mov
mov
xlat
pop
bound
mov
jge
lock
testb
mov
btsl
jle
cmpsb
add
inc
and
mov
add
dec
scas
inc
push
aam
dec
movsb
add
loope
adc
adc
inc
add
jbe
or
or
ljmp
xor
mov
mov
push
sub
push
add
xchg
add
add
je
in
cmp
clc
mov
mov
add
xor
pop
mov
push
add
fsubr
outsl
mov
mov
push
add
inc
add
xchg
lds
or
add
decl
sbb
mov
add
push
add
insb
je
hlt
add
add
push
add
inc
dec
pushf
push
add
add
lds
fs
add
pop
fnsave
mov
dec
jl
add
and
xchg
add
fstl
dec
scas
imul
add
jo
add
outsl
mov
into
test
scas
add
add
sbb
push
add
jo
dec
js
add
jmp
add
push
add
push
add
add
add
add
enter
add
dec
xor
daa
gs
testl
testl
adc
or
rolb
pop
addb
scas
mov
add
jl
addb
xchg
add
insb
int
mov
aaa
cwtl
addl
popf
repnz
adc
popa
das
loopne
dec
add
push
add
mov
stos
loop
out
stos
addb
fisttpll
jecxz
pop
cmpsb
add
add
mov
add
shr
xlat
inc
lret
pcmpgtw
iret
pop
mov
sete
imul
add
bound
mov
add
movsb
add
inc
add
jns
clc
shll
mov
add
add
stos
pop
add
add
pop
stos
jg
nop
add
inc
add
dec
cmp
mov
add
pop
imull
lret
pop
sbb
cli
les
int3
jbe
mov
or
add
mov
insb
popf
dec
lret
cltd
into
leave
es
sti
sbb
push
cmpl
ret
int3
pop
jle
rcrl
add
xor
adc
int
add
add
mov
inc
jne
out
jge
add
mov
xor
adc
cmp
add
add
add
in
and
mov
add
cld
clc
sub
inc
add
pop
imull
xchg
jle
loope
xlat
stos
jo
mov
add
dec
cmp
sbb
loop
and
mov
add
inc
add
add
sahf
mov
jo
cmp
cmpsb
add
mov
jae
push
add
xor
cmp
or
adc
lods
inc
add
add
mov
pop
ljmp
aas
aad
addb
and
shrd
pop
or
fadds
sahf
lret
adc
mov
bound
mov
mov
in
or
jecxz
mov
cmpsl
inc
add
adc
pop
cmp
add
ja
mov
mov
dec
inc
add
cmpsl
jb
pop
sub
xchg
stc
xchg
add
pop
push
add
cld
outsl
jl
pop
addb
mov
in
push
add
pop
xor
add
adc
xchg
mov
scas
fwait
jmp
add
add
insl
dec
jns
mov
andl
jmp
add
cwtl
fnstsw
scas
pushf
movsl
lods
mov
dec
dec
push
cmp
iret
mov
leave
and
mov
in
pop
or
addr16
testb
add
add
push
add
test
outsl
sbb
clc
lea
dec
icebp
pop
xchg
sbb
and
mov
add
add
addb
add
mov
mov
add
addb
push
xlat
clc
mov
add
aad
vmwrite
call
add
add
movsb
add
sbb
add
daa
add
mov
add
add
add
push
add
lcall
push
addb
jne
push
add
notl
jb
fcoml
mov
scas
or
push
pop
lods
push
sbb
aas
test
std
or
or
mov
pushf
iret
imull
inc
lock
in
add
mov
add
add
and
mov
stos
pop
inc
jle
dec
ret
add
js
xor
add
add
push
push
add
int
push
mov
sub
mov
inc
inc
add
out
jecxz
sbb
fs
jne
adc
lret
push
mov
imul
add
xchg
sub
neg
cmpsl
je
fimuls
add
aam
iret
sub
sbb
push
add
inc
mov
cmc
negl
jns
add
insb
std
aam
sbb
add
push
add
and
push
add
cmp
xchg
sahf
mov
sub
ret
loop
shrl
add
add
mov
pushf
test
aam
fcomps
movb
arpl
stos
ficompl
add
push
add
add
jne
jmp
mov
mov
add
add
add
add
les
testl
add
call
add
add
addb
cmp
and
mov
add
aaa
sbb
hlt
add
add
add
add
cmp
out
inc
insl
scas
mov
add
xor
ja
cld
xchg
add
jecxz
nop
add
test
test
sbb
add
jnp
push
fisubrs
add
mov
add
pop
fstp
add
add
add
xchg
ja
add
ja
mov
and
sub
add
cmp
xchg
add
cmp
cmp
lods
repz
sti
xor
inc
faddp
xchg
inc
add
fwait
mov
sti
inc
jns
add
mov
shr
icebp
push
cli
sbb
pop
js
cs
push
add
rolb
mov
gs
xchg
and
mov
lret
add
cmc
push
add
add
jg
ret
lahf
repnz
cmp
add
popa
popa
arpl
in
aas
jbe
fidivrs
add
pusha
add
pusha
add
add
hlt
add
cwtl
xchg
lods
push
rolb
jo
push
xchg
movsl
push
add
add
mov
pop
or
add
add
jg
xchg
dec
sub
pusha
add
or
add
add
sub
aaa
stc
inc
dec
lds
pop
mov
call
sarl
add
add
sub
pop
stos
jle
mov
add
add
add
add
add
fildll
add
in
cmp
icebp
scas
add
push
add
adc
inc
add
add
movb
lahf
push
add
adc
mov
pop
testb
sub
add
lds
xchg
push
mov
and
mov
jo
repz
add
mov
add
js
add
jb
repnz
add
or
movl
movsl
and
mov
cmc
js
addl
mov
stc
xchg
jns
cld
pop
add
jmp
add
add
add
xorl
xor
add
addl
fisubrs
stos
mov
add
and
lret
addb
int
add
dec
adc
cmpsb
add
sbb
sub
movsl
in
or
xor
mov
fs
add
mov
ds
add
add
add
sahf
jbe
jnp
inc
fcom
add
mov
push
inc
xchg
add
add
xchg
add
inc
pop
jnp
test
clc
xor
mov
and
add
cli
out
addb
xor
call
add
sbb
popa
cmpsl
lcall
add
add
cld
stos
mov
add
mov
mov
repnz
add
mov
fldt
lret
xchg
clc
ret
push
add
mov
add
add
lods
dec
fwait
xor
jp
add
imul
add
or
adc
cmc
testb
in
xor
sub
add
mov
icebp
data16
add
icebp
mov
dec
pop
outsb
sbb
repnz
inc
mov
add
add
mov
popf
cmp
jecxz
rolb
xor
and
mov
add
mov
insb
xor
lea
add
mov
movb
aam
add
or
add
insb
cmp
add
sub
lret
std
aam
pop
das
aaa
roll
rolb
fimull
add
js
jle
xchg
add
add
std
inc
fdiv
add
mov
mov
pop
in
sti
adc
imul
mov
push
add
push
ljmp
pop
rcrl
mov
ds
loopne
xor
and
mov
aam
xor
int3
rolb
arpl
add
add
pop
sahf
out
jae
js
rolb
jge
sub
mov
add
mov
hlt
add
jecxz
mov
ret
or
sub
add
fwait
lret
int3
addb
imul
push
mov
pop
jae
add
push
add
add
outsl
push
std
sub
aaa
stos
scas
and
mov
add
push
sbb
pop
mov
loopne
mov
mov
mov
cmpsl
and
mov
add
xor
jo
pop
test
add
in
fimuls
cs
add
cli
xor
push
add
add
in
or
out
jg
add
add
add
cmp
scas
test
pop
repz
add
and
sub
dec
and
jg
sub
pop
jbe
lock
mov
push
add
add
scas
inc
js
clc
in
enter
add
add
lods
mov
mov
xchg
jo
movb
cmp
add
pusha
add
push
loopne
lret
push
add
dec
dec
out
sub
leave
jge
in
lods
jne
mov
test
lods
test
cli
daa
mov
mov
add
or
xchg
add
add
fldenv
mov
add
mov
ret
cld
push
add
push
cmp
unpcklps
fcmove
push
dec
pop
xor
jae
aas
ja
add
cmpsb
add
add
cld
add
mov
test
cmp
jecxz
out
mov
push
or
mov
jl
pop
pusha
add
and
inc
jo
jno
fisubrs
add
jno
mov
cmp
jecxz
add
addb
and
mov
add
add
add
sahf
dec
movsb
add
out
data16
addb
test
add
mov
mov
shll
sbb
inc
jl
mov
xor
pop
sub
mov
xchg
xchg
add
xor
xlat
mov
pop
in
repz
push
add
dec
cs
xor
insb
dec
adc
loope
add
xor
mov
mov
arpl
in
mov
add
add
add
ja
add
imul
xor
add
add
fisubrl
loope
sarl
adc
repnz
dec
sbb
jbe
add
mov
add
mov
add
sub
add
pop
cmp
push
sub
add
add
add
mov
lods
jno
rolb
dec
push
leave
push
mov
dec
sub
add
xor
lret
xchg
add
add
aam
pop
scas
orl
mov
in
adc
cltd
add
add
test
add
jmp
lret
into
sbb
xchg
add
fstpt
scas
push
add
cmpsb
add
test
dec
movb
xor
pop
stos
pushf
pop
add
push
cmp
mov
add
outsl
mov
addr16
dec
mov
mov
push
mov
add
add
add
pop
popf
test
add
inc
and
add
lock
inc
add
add
loopne
add
add
mov
fwait
addb
rolb
add
sub
ret
add
mov
add
pop
jle
mov
cltd
lock
mov
add
cmp
loope
mov
pop
pinsrw
jbe
and
icebp
daa
sub
add
cltd
aas
adc
lahf
push
pusha
add
outsl
out
nop
add
add
loop
inc
int3
ja
add
rolb
imul
add
cmp
es
push
add
shrl
mov
jmp
pop
add
mov
add
out
or
test
add
jns
addl
dec
jp
mov
adc
fimuls
add
mov
inc
adc
adc
rol
mov
aaa
xor
rolb
and
mov
stos
mov
fsubrs
mov
in
jp
xchg
mov
shll
xlat
dec
arpl
jecxz
mov
int
add
aas
and
mov
add
ret
aas
pushf
std
nop
add
arpl
add
jge
xchg
add
test
pop
imul
xor
repnz
add
xor
pop
jae
add
add
sti
add
add
cmp
scas
stos
insl
popf
add
es
sub
cmp
int
pop
mov
add
and
mov
mov
out
imul
mov
pop
mov
add
mov
mov
popf
jl
push
scas
dec
push
add
mov
das
lahf
cld
inc
lock
cs
stos
adc
inc
add
in
sbb
mov
or
add
popa
adc
push
int3
cmp
add
js
adc
sbb
mov
add
rolb
push
test
aaa
pop
psrld
lret
add
stos
repz
add
add
jnp
push
add
mov
cmp
add
push
add
ljmp
cs
mov
movb
stos
pop
fidivl
lods
jo
mov
pop
test
sbb
jb
stos
imul
shll
cwtl
jl
testb
test
dec
negl
out
mov
fs
add
jmp
sbb
jno,pn
and
mov
js
scas
leave
lds
and
add
xchg
scas
cld
inc
lds
data16
andl
movsl
loope
mov
cmp
testb
jmp
xor
add
push
stc
or
and
int
test
sub
pop
rolb
sub
jnp
pop
mov
lock
out
sub
repz
jae
add
cmp
outsl
das
xchg
add
add
shrl
xlat
ja
test
pop
sub
jbe
xchg
xor
iret
into
addr16
add
add
mov
add
lock
add
std
addr16
jge
je
cmpsl
hlt
add
in
addb
add
add
call
inc
cmpl
jbe
out
scas
test
pop
test
test
out
ret
adc
jmp
mov
add
int3
dec
mov
pop
push
addb
loop
sbb
add
mov
jle
and
movq
aam
mov
push
or
add
add
mov
inc
add
add
add
mov
rolb
aad
popf
stos
pop
pop
call
add
mov
lret
xchg
mov
ja
jae
mov
mov
out
addb
iret
pop
addr16
or
int
jo
adc
xlat
dec
mov
or
dec
out
jnp
add
cli
add
sub
es
add
lods
dec
push
pop
xlat
icebp
les
add
jmp
stos
push
cmp
mov
cmp
jae
ficompl
add
jns
add
pop
insl
sbb
cli
lods
sub
jecxz
sahf
ja
rolb
insl
addr16
ret
js
fisubrs
add
sahf
pushf
in
outsl
mov
mov
jle
mov
add
aad
add
loope
in
jb
sbb
push
add
outsl
push
mov
add
mov
add
loop
dec
in
add
xchg
pushf
aaa
insb
sbb
xor
test
add
mov
out
jne
add
and
bound
mov
cmp
xchg
add
add
mov
shll
push
add
add
aas
and
sub
inc
inc
add
enter
add
add
add
add
add
add
lods
stos
loop
mov
jo
out
or
inc
lock
add
xchg
xchg
pushl
add
nop
add
fxtract
add
cli
addb
add
les
cmp
xchg
rcrl
cmp
aas
das
mov
mov
xor
add
xchg
adc
nop
add
rolb
addb
jb
aas
mov
inc
mov
stos
inc
add
push
xor
into
lea
xor
add
nop
add
add
mov
add
sbb
and
inc
add
in
out
movsb
add
add
pop
pop
scas
fsubs
add
cmpsb
add
dec
aad
xor
push
jnp
aaa
aaa
mov
cs
sub
push
rolb
cmpsb
add
add
rolb
aas
repz
pop
cmp
mov
mov
insb
nop
add
daa
adc
xchg
add
add
xor
movsb
add
iret
jno
cmp
movsb
add
addb
add
xor
add
or
lods
sbb
adc
fs
mov
fisttpl
adcl
jg
movsb
add
sahf
cmpsl
add
inc
add
add
add
nop
add
add
or
or
xor
sbb
push
add
imul
add
xchg
add
lret
stos
imul
pop
lret
or
add
push
out
lea
loop
int
sub
cmp
add
andl
test
cmp
sbb
adc
fwait
xor
cmpsl
add
or
add
int
xchg
push
jae
add
sub
or
push
add
in
insb
outsb
push
xor
pop
loope
aam
loop
jns
je
inc
add
dec
push
mov
in
add
sbb
jge
mov
add
add
cs
das
xor
dec
popf
push
incb
add
lock
add
add
jg
mov
add
int
or
adc
test
adc
ds
inc
add
xchg
add
add
cwtl
xchg
add
push
add
popf
addb
fldt
movb
add
mov
push
add
and
mov
add
jle
add
insb
gs
fnsave
push
add
fldl2t
mov
in
inc
add
add
mov
push
add
cs
movsl
lods
xor
aad
mov
jg
add
mov
jmp
add
or
inc
push
hlt
add
add
mov
cwtl
shrd
dec
stos
add
mov
dec
pop
mov
add
lret
dec
inc
mov
cmc
adc
mov
dec
ss
mov
add
adc
add
ficompl
cmp
add
add
shl
add
mov
mov
add
adc
add
imul
inc
xor
dec
std
test
add
jmp
insl
das
add
add
mov
aaa
lods
testl
pop
cs
mov
addb
add
fstl
sub
add
add
sahf
fmuls
mov
sbb
jecxz
mov
add
add
and
aas
cmp
pop
or
add
fidivl
cmp
mov
jge
add
mov
pushf
jno
add
movsl
xor
mov
test
cmp
lret
inc
add
mov
pusha
add
push
jns
inc
mov
add
lcall
int3
ficompl
add
mov
xchg
testb
iret
iret
inc
scas
pop
mov
insb
push
xlat
xor
cld
pop
daa
daa
fisubrl
out
and
lods
add
scas
mov
sub
add
jno
lea
cwtl
dec
cltd
sbb
mov
insb
rcrl
add
and
mov
cmc
push
add
add
jo
add
sbb
add
imul
or
les
sbb
jmp
add
mov
jmp
mov
xor
add
arpl
mov
adc
enter
mov
sbb
jl
pusha
add
sbb
add
popa
xor
add
sbb
and
pop
push
or
xor
aam
fadds
push
add
lock
add
mov
add
imul
and
aas
xlat
push
add
arpl
push
xor
add
test
fcomps
add
add
xor
push
add
inc
add
cli
sub
inc
out
inc
add
add
or
mull
mov
stc
in
mov
imul
adc
add
cmp
xchg
add
push
pop
shll
add
cmp
cwtl
mov
pop
leave
pushf
popa
add
rcrl
aas
stos
aas
add
mov
out
xlat
xchg
add
add
movb
lods
mov
add
mov
add
orl
sahf
mov
je
in
cwtl
mov
js
adc
sahf
xor
sbb
add
addr16
adc
and
lods
call
call
xchg
rolb
add
add
and
mov
cmpsl
les
and
add
imul
stos
mov
add
add
push
add
or
add
add
leave
jne
push
rolb
dec
push
add
mov
add
add
pop
inc
add
cmpsb
add
cmp
mov
cmp
add
push
cmp
sub
push
add
fndisi(8087
or
loopne
popf
dec
leave
lods
mov
rolb
addr16
add
xor
add
ficoms
add
test
daa
ja
sahf
add
mov
mov
mov
xchg
xor
jbe
push
arpl
add
and
adc
imul
insl
in
nop
add
pusha
add
jno
movsb
add
sahf
xor
addb
xchg
mov
dec
jp
les
adc
sub
sub
add
stos
movsl
xchg
add
in
ret
icebp
inc
aaa
jge
lret
add
cld
mov
mov
dec
push
popl
and
mov
sub
lods
rolb
sbb
sbb
xchg
ror
jecxz
jae
jae
jb
and
ffreep
cld
dec
testl
cs
add
add
xchg
aad
add
add
adc
push
add
daa
mov
stos
xor
in
sbb
fsubp
add
push
add
add
add
imul
add
mov
dec
mov
mov
in
adc
or
pop
dec
xchg
add
leave
int3
push
int3
ja
push
nop
add
add
ja
rcll
fidivrl
mov
sbb
icebp
popa
dec
sbb
testb
lods
mov
inc
add
cld
jmp
das
fnstsw
or
inc
cmc
push
add
add
sub
mov
jge
add
sub
add
add
add
push
sub
mov
add
mov
add
fld
add
dec
push
clc
das
mov
dec
cmc
std
bound
mov
loopne
in
add
loope
add
add
inc
add
sub
and
stos
sahf
mov
mov
add
lahf
sub
fisubs
add
or
add
sahf
pushf
push
icebp
pop
and
add
aaa
mov
fldt
add
cmc
pop
dec
ljmp
add
mov
add
add
add
insl
imul
mov
xchg
add
or
xor
xchg
jnp
loop
or
push
icebp
call
xchg
add
or
add
add
mov
add
test
imul
add
xchg
add
add
xlat
mov
cmpsl
mov
xor
outsb
cld
bound
mov
jmp
in
ret
dec
cli
mov
nop
add
lock
add
out
sbb
add
pop
icebp
js
inc
mov
or
outsb
push
cwtl
lock
sbb
iret
addb
aaa
cmc
pop
jb
xchg
sub
add
ret
pop
xor
arpl
cs
int
add
push
add
dec
enter
add
add
mov
jae
lods
inc
add
rolb
cmpsl
call
sub
xchg
add
mov
push
add
jge
xchg
cs
mov
push
add
push
add
mov
cmp
shl
jae
jmp
add
cmp
push
add
testb
gs
repnz
nop
add
mov
mov
sub
daa
js
lcall
pop
and
mov
add
out
and
add
mov
cli
add
xor
and
mov
cmp
lds
sbb
add
mov
fstps
push
fsubrs
aam
ds
push
adc
filds
aam
sahf
jmp
push
xor
aaa
jae
add
repz
fwait
mov
pop
cmp
pop
ljmp
sbb
add
inc
add
cmpl
test
adc
add
in
xchg
hlt
add
fldenv
add
pop
xchg
jo
popa
movsl
rolb
add
fstl
add
addb
add
fwait
mov
xor
addb
add
add
test
add
pop
lret
ret
fwait
add
add
add
mov
inc
add
jle
ror
lea
pop
filds
add
add
xor
xchg
add
add
aaa
and
pop
movb
and
or
inc
add
add
mov
add
add
shll
add
add
lcall
and
mov
pop
adc
mov
fwait
movb
add
adc
add
mov
out
push
inc
add
out
stos
iret
incb
add
sahf
mov
in
add
movb
leave
popa
push
add
js
add
push
add
les
or
push
add
mov
addl
fcmovb
inc
push
add
add
add
jp
add
jae
add
push
add
pop
jne
mov
aad
add
jl
push
xchg
arpl
jne
movsb
add
add
loopne
mov
mov
add
mov
cli
add
enter
xchg
pop
jb
dec
xor
pop
into
stc
movb
sbb
add
fistpl
mov
mov
inc
pusha
add
lods
test
add
and
mov
add
inc
inc
add
xchg
add
push
je
push
add
add
add
push
add
fmuls
cwtl
rcrl
lock
add
add
and
jb
jbe
je
push
popa
xchg
add
add
mov
test
add
addb
cmp
outsb
and
cmp
hlt
add
adc
iret
int
movb
jl
push
add
int
dec
mov
or
call
add
add
stos
add
add
loop
mov
bound
mov
sbb
hlt
add
mov
sar
dec
std
mov
pop
mov
test
dec
add
cmp
add
xchg
lods
daa
ja
sbb
xchg
fistpll
add
testb
pushf
pop
lock
xchg
lea
out
les
push
add
cmp
add
lcall
inc
in
xchg
add
add
and
push
lods
xchg
jbe
lods
adc
repnz
jp
stos
out
mov
add
and
dec
popa
repnz
add
add
ret
jns
mov
movsb
add
pop
mul
mov
sub
add
mov
sub
fdivrl
xor
addb
pusha
add
icebp
push
mov
pop
dec
mul
fnstsw
leave
push
add
mov
adc
add
aas
ljmp
push
add
add
inc
add
popf
mov
pop
xchg
sub
mov
sub
add
push
jg
add
sub
ret
addb
add
mov
andl
dec
popa
cs
stos
add
mov
call
cmp
mov
ljmp
cltd
out
lea
mov
add
push
add
add
add
sbb
add
mov
fdivr
mov
rolb
jb
stos
js
add
xor
movb
out
cltd
cltd
adc
lea
add
dec
outsl
cmpsl
insb
push
in
in
insb
test
add
adc
and
push
add
add
add
mov
mov
sahf
cmc
inc
add
add
iret
or
xchg
add
lds
imul
gs
lock
mov
dec
jne
adc
mov
add
test
and
mov
add
mov
add
add
add
mov
movb
mov
add
insb
inc
add
xlat
mov
adc
movb
cwtl
pushl
add
inc
xlat
or
add
push
add
arpl
push
add
cmpsl
mov
mov
loop
sub
rolb
sbb
loop
pushf
push
xor
mov
sbb
mov
leave
aam
xchg
add
dec
push
jmp
add
leave
inc
in
dec
es
negl
bound
mov
mov
pusha
add
lods
daa
adc
push
lds
add
stos
add
cmp
lods
xchg
add
or
ret
add
lds
leave
lds
lods
adc
add
mov
imul
mov
test
sti
daa
add
add
aas
lcall
or
ret
xor
inc
add
add
out
repnz
int
push
insb
push
add
add
add
add
xor
add
pop
jp
jne
sub
add
mov
mov
aad
add
repz
add
xchg
cmp
mov
movsb
add
push
add
jne
add
test
call
mov
or
movb
add
mov
push
add
out
pop
arpl
ret
mov
add
jmp
add
imul
add
test
mov
rolb
loop
or
aad
add
notl
add
or
pusha
add
pop
push
bound
mov
add
add
outsl
icebp
fisttps
and
addb
add
cmc
rolb
cli
std
cmp
xor
push
mov
sbb
jmp
roll
add
mov
add
mov
add
mov
adc
cli
xchg
lds
add
add
sbb
jae
addr16
sub
push
cmpsb
add
add
clc
xlat
rolb
fmul
dec
push
and
or
sbb
mov
add
lret
lods
inc
add
mov
lcall
add
xchg
add
arpl
ret
or
pop
xlat
cmpsl
add
push
push
add
testl
and
movsl
and
xchg
sub
into
dec
sbb
or
mov
add
and
outsb
mov
sub
in
add
add
add
clc
cmpsl
jnp
add
gs
loope
sbb
add
jg
sti
daa
jmp
push
add
das
mov
mov
jnp
es
add
add
add
icebp
inc
pop
out
sub
or
fsubrl
add
dec
jb
std
inc
add
xchg
loop
xor
add
mov
daa
sbb
mov
add
sbb
and
fnsave
add
fnsave
sub
cltd
and
push
mov
rolb
sub
xchg
push
add
add
cs
mov
push
loope
addb
mov
cmp
add
add
add
add
addb
add
jp
in
and
xor
mov
cld
add
stos
sub
mov
xchg
sahf
cmp
lahf
subl
add
in
push
les
aaa
fdiv
add
icebp
out
fwait
or
xor
dec
jb
jnp
mov
mov
pop
sbb
push
push
pop
xchg
outsb
std
inc
xchg
add
mov
mov
add
mov
add
lods
jno
push
add
mov
jb
sbb
outsl
inc
add
or
add
and
add
add
pop
aad
cwtl
pop
push
jg
add
mov
repz
cld
aaa
inc
add
addr16
add
inc
add
ret
inc
add
add
popa
push
add
mov
push
add
jle
in
out
or
add
gs
add
popl
mov
aaa
push
and
mov
data16
rolb
xorl
mov
pop
add
mov
fcomps
or
sub
dec
ret
xchg
adc
add
mov
sub
bound
mov
lock
add
and
gs
pop
insl
push
dec
dec
aas
push
add
add
add
lcall
ret
fisttps
add
sarl
notl
cmc
push
add
cmpsl
inc
add
sahf
out
mov
sub
daa
stc
adc
in
arpl
mov
mov
cs
std
ret
call
add
dec
mov
add
or
add
insl
inc
add
bound
mov
add
loope
mov
movsb
add
add
sbb
mov
add
add
add
jp
push
cmpsb
add
lods
movsb
add
ds
testb
fcomps
out
push
testb
testb
pop
xchg
push
xorl
push
or
add
mov
add
add
push
add
xor
gs
rolb
bound
mov
push
pop
lret
jb
ljmp
mov
add
jp
add
movsl
add
out
or
sub
add
sub
lret
dec
pop
and
jg
lcall
add
add
add
add
add
add
cmp
jne
lret
sahf
sub
popf
jne
cmp
pushf
testb
add
scas
scas
cwtl
xchg
jle
add
add
xchg
and
lahf
sub
add
lea
jp
add
cld
push
add
data16
es
cmp
outsl
and
cmp
mov
lret
rolb
push
add
lret
arpl
xchg
add
mov
and
add
dec
push
add
in
sarl
addl
add
add
add
xchg
out
out
sub
mov
shrl
add
lds
mov
adc
or
addb
bound
mov
sbb
add
test
mov
add
pop
mov
xlat
loop
sbb
je
add
push
add
mov
sti
mov
jno
xor
sbb
mov
xchg
cmc
in
add
je
popf
or
repnz
add
mov
mov
add
rcr
insl
popf
jb
dec
imul
ds
add
and
mov
ja
aas
je
xor
cmp
mov
mov
cmpsl
popf
cwtl
mov
jns
push
add
fists
cmp
fstpl
push
add
jno
mov
lret
testl
mov
mov
add
mov
bound
mov
aam
add
mov
stos
lds
jae
add
pop
out
push
add
push
add
aaa
and
add
pop
jmp
sbb
icebp
push
mov
push
mov
jae
add
mov
add
testb
add
fnstenv
loop
mov
add
cmp
add
add
add
aaa
xor
add
add
fsubs
mov
inc
add
xlat
mov
pop
push
add
ds
add
add
stos
add
fwait
loop
mov
mov
inc
add
jnp
add
add
add
jns
mov
xor
jbe
sti
repnz
test
test
in
inc
add
scas
test
mov
insb
adc
jmp
icebp
fidivrl
add
dec
xchg
mov
dec
xor
jnp
fcomp
movb
add
add
sub
add
mov
push
add
add
imul
jecxz
sub
and
sbb
leave
cmp
mov
inc
add
push
add
loopne
push
dec
mov
inc
in
test
frstor
imul
push
cld
fidivrs
mov
xchg
jecxz
xchg
add
lds
add
ret
cmp
daa
shrl
sbb
add
add
out
arpl
push
add
dec
sub
add
clc
fadd
pop
stos
adc
lods
lods
adc
insl
popa
dec
pop
or
cs
in
mov
js
or
dec
sub
add
sbb
mov
cwtl
data16
add
add
inc
add
or
aam
and
and
cmp
add
sbb
mov
pop
inc
add
and
iret
lret
imul
mov
jno
add
fnsave
ljmp
add
aad
sub
je
pusha
add
add
xor
scas
xor
add
jae
fxch
pop
adc
add
sub
shll
add
push
add
mov
aaa
jecxz
test
push
add
ja
jp
add
add
jge
icebp
out
mov
add
mov
rcl
add
cmp
or
add
and
inc
add
pop
xchg
jae
jmp
or
aas
jmp
in
out
insb
bound
mov
icebp
sti
loope
xor
dec
pop
lea
add
mov
stos
lods
or
add
addb
mov
int3
xchg
xchg
add
add
int3
sub
cmp
add
inc
sub
testb
jle
fisttpll
and
mov
push
ljmp
enter
sub
add
mov
lahf
fldenv
push
add
sbb
dec
jle
or
mov
add
add
inc
push
xchg
add
cwtl
mov
out
adc
cld
adc
insb
xor
lock
inc
dec
andl
insb
lret
jo
loope
and
insl
in
mov
mov
or
lcall
add
pop
clc
adc
adc
mov
mov
data16
stos
jne
add
push
mov
add
mov
add
or
adc
add
lahf
int
dec
mov
add
cmpsl
jnp
add
sbb
add
add
sub
repz
xchg
add
testb
add
mov
addb
sahf
call
push
and
fsubr
jg
push
add
or
add
mov
out
push
xor
popf
fists
pop
push
arpl
add
add
stc
adc
idivl
xchg
add
add
pop
les
jno
lret
enter
out
sbb
pop
mov
sahf
add
rolb
gs
int3
xchg
add
add
add
addb
mov
rolb
add
xchg
and
jb
popl
pushf
or
or
add
mov
add
add
sahf
mov
shr
xlat
lahf
sbb
sahf
push
dec
lret
addr16
sub
bound
mov
jmp
aam
mov
jmp
jnp
mov
add
add
jle
adc
cmp
dec
xchg
add
pop
repnz
add
jnp
lock
jne
icebp
jp,pn
add
dec
and
xchg
add
jecxz
cli
cmp
mov
mov
add
mov
aad
add
jbe
iret
mov
push
add
repnz
cmc
das
rcl
movsl
inc
shl
add
add
mov
or
mov
lods
cmp
add
xchg
add
cwtl
jg
add
add
out
cwtl
and
jbe
stos
mov
repz
add
add
mov
test
adc
jnp
add
fcmovne
pop
imul
push
fwait
js
data16
xchg
push
filds
sbb
fwait
lahf
bound
mov
adc
pmaxub
mov
mov
mov
popa
xchg
testb
add
ds
arpl
add
jp
jg
add
dec
mov
test
int
repz
add
leave
lock
dec
leave
jle
test
add
lds
push
add
out
mov
in
fcomip
or
adc
js
fwait
es
add
addb
mov
add
jge
scas
cltd
cmp
test
into
adc
call
add
loope
stos
xchg
xchg
repz
push
add
in
adc
std
fdivs
add
xor
mov
add
pop
cmpsl
or
add
sub
pop
pushf
insb
lods
xchg
fcomip
inc
add
sub
leave
and
mov
mov
hlt
add
mov
dec
mov
daa
insl
movsb
add
or
add
push
out
cltd
mov
loop
xor
rcll
clc
fwait
stos
aad
push
and
add
cmpsl
push
add
add
test
xchg
pminsw
cmp
mov
leave
aas
fsubp
add
ret
repnz
xor
testb
jecxz
add
add
adc
pop
add
add
in
mov
add
mov
test
testl
rolb
adc
imul
es
add
sbb
or
dec
outsb
test
add
test
add
add
add
out
or
add
enter
jle
or
jmp
adc
out
xor
sbb
add
rolb
xor
movb
mov
jp
xchg
add
ja
push
add
xchg
call
add
add
addb
dec
inc
add
mov
add
cltd
sbb
mov
mov
push
popf
add
mov
add
xchg
add
in
add
vmwrite
pusha
add
je
jns
mov
add
std
inc
call
add
pop
notl
das
scas
and
mov
add
rcrl
add
bound
mov
mov
dec
add
mov
add
add
dec
mov
mov
adc
add
mov
pop
mov
cmp
add
aas
call
jmp
add
lcall
jbe
testb
xchg
add
jnp
mov
pop
data16
mov
add
cmp
inc
add
xchg
xchg
fcmove
add
adc
cmc
out
dec
bound
mov
jo
xor
ret
pop
sbb
add
pop
add
pop
dec
and
mov
pushf
dec
xor
sub
add
sbb
mov
repz
add
dec
mov
add
add
add
add
sti
cmp
add
imul
push
add
jae
sbb
lods
rcl
jl
arpl
lods
loop
mov
xor
xor
stos
mov
and
mov
in
add
push
add
lea
cld
jle
push
add
pusha
add
lods
jae
cli
cmp
mov
xchg
jl
scas
mov
or
dec
iret
mov
adc
xor
jne
add
push
sbb
enter
add
add
xor
push
add
add
cmc
add
mov
or
cmp
stos
fdivl
add
xor
add
add
add
pop
jge
add
sahf
imull
push
add
adc
push
add
mov
add
add
add
mov
addr16
js
add
aam
scas
mov
rcll
add
adc
jle
addb
mov
les
fimuls
sti
arpl
inc
adc
dec
add
mov
mov
sub
add
in
ljmp
fstpl
jno
add
popa
dec
scas
bound
mov
arpl
sub
add
fcomps
cld
or
jl
add
int
out
je
out
add
mov
adc
xchg
add
add
scas
adc
js
xchg
jno
mov
add
add
pop
imul
add
pop
cmp
push
add
js
popf
push
out
popa
and
mov
mov
add
jns
jecxz
add
mov
movb
add
addb
aaa
jne
push
add
sub
add
jge
add
jae
js
inc
add
add
cli
add
add
add
repnz
popa
xor
dec
ret
movsl
imul
add
addb
jo
and
add
add
clc
hlt
add
mov
add
sub
and
into
cmpsl
inc
and
add
push
and
add
add
add
inc
add
in
aaa
or
fwait
mov
add
add
das
mov
jne
add
pop
inc
add
dec
bound
mov
xor
aam
and
inc
add
add
add
inc
add
mov
add
out
xchg
add
pop
add
mov
add
xor
sahf
adc
bound
mov
mov
adc
testb
sahf
mov
repz
xor
add
es
and
popa
add
add
add
add
inc
add
xchg
inc
xchg
jecxz
mov
cmpsb
add
add
insl
cmpsl
repz
movsl
push
add
add
js
sub
or
add
cmpsl
in
add
es
add
add
dec
pop
gs
push
cmp
lret
mov
scas
and
push
add
add
dec
adc
sbb
xchg
add
ret
xor
cwtl
jmp
jle,pt
add
incb
mov
sahf
addb
jmp
das
data16
ja
add
mov
add
jmp
fmul
imul
mov
add
push
test
outsl
fsubrp
mov
test
and
push
xchg
mov
lcall
pop
cmp
add
pop
mov
cli
dec
in
mov
mov
add
mov
test
dec
subl
add
mov
add
add
sub
cmpsl
cltd
outsb
push
add
pop
sbb
jmp
out
sub
aad
icebp
das
lea
inc
add
inc
fisttpl
fdivl
lcall
inc
add
add
xchg
add
stc
pop
rolb
pop
hlt
add
adc
inc
sbb
cmc
idiv
and
mov
dec
inc
add
add
mov
add
mov
mov
add
mov
sub
mov
nop
add
add
sbb
xor
add
add
jle
sub
add
sub
inc
add
xor
jp
adc
jo
pop
cli
mov
pushf
out
aam
fmuls
xchg
sbb
aaa
push
add
mov
add
jle
cmp
testb
mov
add
add
movb
bts
add
aas
mov
sti
jnp
mov
sub
jecxz
out
add
dec
aam
mov
ret
rolb
in
daa
adc
das
mov
add
jnp
jle
add
movsb
add
gs
fadd
add
pop
scas
out
in
call
mov
hlt
add
add
add
add
or
jns
mov
int3
addb
add
push
add
mov
mov
add
call
adc
cmp
jmp
xchg
sti
fmul
xor
add
mov
pop
cs
add
jne
icebp
out
out
shll
add
lea
adc
add
sub
mov
add
push
add
mov
lds
add
add
mov
adc
push
add
sub
add
packssdw
fiadds
cwtl
mov
dec
and
mov
mov
testl
dec
inc
jl
xlat
lahf
fnsave
add
and
jp
add
out
xchg
inc
add
pcmpgtb
mov
dec
in
xor
push
add
bound
mov
add
add
popa
sahf
lods
or
and
jne
insb
ljmp
test
outsl
xor
xor
add
repnz
outsb
insl
jp
in
mov
les
sub
hlt
add
add
divl
sbb
scas
mov
jl
add
rcll
dec
add
mov
xor
fwait
mov
lods
icebp
iret
sbb
loop
or
jle
jle
dec
mov
mov
add
xchg
pop
xchg
int3
cmp
lds
add
add
add
out
pop
hlt
add
xor
addb
scas
popa
test
leave
imul
add
arpl
imul
add
inc
add
cld
lods
xlat
or
cmpsl
add
mov
movb
cmp
int
into
push
mov
add
xor
dec
jle
in
jnp
enter
sub
add
out
pusha
add
das
push
add
pop
add
mov
add
mov
mov
add
mov
rolb
mov
push
pop
imul
mov
and
sahf
loop
iret
add
cs
mov
mov
adc
mov
add
add
xor
or
add
mov
das
push
add
dec
xor
cmp
add
add
sub
xchg
call
and
or
fbstp
jb
mov
add
and
es
bound
mov
xor
ljmp
call
xchg
add
add
shrl
jecxz
add
adc
stos
cmp
lret
push
add
lret
lcall
xchg
cmp
outsl
pop
pop
ja
testb
mov
adc
gs
outsb
das
mov
movb
sub
insb
push
add
scas
enter
add
add
adc
sub
add
daa
int3
dec
dec
xchg
add
add
add
add
xor
jbe
mov
add
fcoms
add
cs
testb
adc
movl
testb
add
in
mov
cltd
hlt
add
add
mov
inc
ret
add
mov
push
and
add
pop
add
outsl
int
sub
data16
adc
push
add
adc
push
jmp
cli
mov
mov
xchg
add
int
lock
fld
add
mov
and
add
add
je
sub
add
lds
inc
add
and
inc
rcll
cwtl
sub
push
add
add
add
rolb
sub
add
mov
leave
dec
mov
add
push
add
loopne
jnp
cs
cwtl
push
add
add
add
pop
push
hlt
add
cld
xor
inc
xchg
add
pop
cs
xor
aad
fiaddl
test
ret
das
xchg
pop
inc
add
in
pushf
lcall
add
add
sbb
enter
add
loopne
ja
add
cmp
xor
add
or
scas
mov
add
mov
push
mov
push
jne
sahf
mov
xchg
add
addb
pop
push
pop
mov
add
add
xchg
add
clc
enter
fldt
push
add
jns
ja
std
and
je
in
addb
inc
add
pop
aam
sub
or
add
sahf
loop
rolb
shr
flds
jge
rorl
add
mov
add
ljmp
cmpsl
loopne
in
add
xchg
mov
dec
pop
inc
mov
or
pop
bound
mov
mov
mov
xor
pop
repz
pop
mov
sbb
sub
cs
lcall
add
mov
mov
jp
sbb
fdivr
jmp
icebp
std
jmp
fiadds
add
sub
xlat
mov
xchg
dec
push
add
add
add
andl
test
pushl
or
add
imul
jmp
cmp
xchg
add
into
shll
data16
push
add
cli
mov
loop
inc
add
bound
mov
jbe
addr16
sub
fwait
popa
call
xor
sub
cld
push
fwait
rcrl
sbb
orl
ficomps
out
pop
or
and
pushf
push
add
mov
sub
xlat
cmpsl
mov
adc
cwtl
xor
add
add
dec
mov
mov
push
adc
pop
ds
in
aam
add
rolb
mov
cmpl
and
cmp
and
ja
repz
add
add
xor
dec
inc
add
or
and
outsl
mov
xor
and
mov
jle
add
inc
nop
add
data16
add
lret
add
add
add
add
imul
cmpsb
add
insl
cmp
mov
jecxz
and
inc
add
add
roll
and
add
outsl
jg
into
pop
push
add
lahf
and
cmpl
sub
repz
add
pop
pop
push
and
mov
add
xchg
das
mov
add
arpl
add
lret
mov
subl
jg
pop
lock
stos
ljmp
inc
and
mov
mov
popf
mov
add
into
sub
xor
iret
testb
add
imul
sub
les
ss
add
cmp
das
adc
add
lea
add
add
fistps
cmp
mov
xchg
add
jns
add
add
inc
addb
and
stc
xchg
fsub
add
cltd
mov
aas
inc
add
push
add
bound
mov
mov
ds
gs
add
add
arpl
movsb
add
mov
sbb
rolb
pop
sub
inc
add
add
xchg
shrl
inc
add
lods
iret
out
mov
add
fwait
dec
and
add
add
push
cwtl
jmp
add
and
xchg
sub
mov
add
not
add
add
mov
jmp
add
mov
add
adc
cltd
or
ja
add
icebp
adc
push
test
or
add
add
addb
inc
add
out
mov
add
mov
jne
add
pop
inc
out
into
loopne
mov
add
and
in
call
in
inc
add
movsl
jb
sbb
enter
sbb
aam
gs
pmaxub
and
mov
cmpsl
enter
inc
add
add
push
add
stc
jne
add
addb
sbb
cld
lret
cmp
mov
mov
lds
adc
add
add
xor
dec
sub
add
add
popf
fwait
add
add
add
hlt
add
add
lods
into
mov
mov
add
in
inc
add
in
flds
xchg
add
ja
sbb
jns
scas
adc
add
faddl
add
pop
add
push
repnz
cmp
xchg
add
add
mov
shll
in
add
mov
add
testb
mov
mov
loopne
jge
clc
jmp
repz
sbb
pop
out
lcall
add
pop
mov
ret
add
add
fldcw
pop
adc
mov
add
mov
jecxz
push
add
data16
in
pop
add
cmp
add
mov
adc
scas
jns
adc
push
aaa
mov
add
add
add
addb
add
jge
push
add
add
add
icebp
cmc
lea
jno
add
fnstenv
jle
ja
into
call
fistpll
add
enter
cld
testb
fcmovne
testl
add
add
icebp
cltd
mov
add
mov
add
xchg
test
std
xchg
add
mov
ret
or
inc
add
pop
mov
add
add
pusha
add
jae
mov
pop
inc
add
xchg
or
add
pop
addb
data16
jle,pt
addr16
add
add
movsb
add
lods
mov
add
cld
sub
mov
adc
insb
cltd
pop
iret
jecxz
lahf
out
scas
mov
mov
inc
add
aaa
xor
xchg
les
bound
mov
std
int3
xchg
add
add
jo
mov
push
add
dec
or
add
hlt
add
add
negl
movb
mov
cmpsb
add
add
pop
xchg
add
fcoml
pop
xchg
jmp
add
test
xor
iret
addl
mov
in
push
add
mov
inc
push
add
imul
inc
add
lea
mov
imul
scas
push
pop
jbe
xchg
add
faddl
in
cld
push
add
add
push
add
adc
add
loop
sti
cmp
mov
push
add
xchg
fadds
add
gs
pop
aaa
int
outsb
addb
xor
add
add
ljmp
jae
shl
dec
stc
xor
jecxz
lds
sbb
fmuls
xchg
dec
xchg
add
jnp
add
in
insl
xor
lock
add
add
int
mov
mov
xor
mov
dec
divl
test
daa
jmp
lret
cltd
ds
stc
xor
lods
aaa
mov
mov
sarl
pop
mov
rolb
push
add
add
add
and
mov
loope
jae
xchg
test
add
dec
mov
dec
imul
mov
mov
mov
cli
xor
lock
lds
lcall
stos
cmc
pop
into
cmp
add
lret
push
cs
mov
mov
icebp
lret
add
movsl
fwait
jmp
addb
add
adc
xlat
jno
jp
add
cmp
sbb
add
pop
sub
insb
pop
in
dec
xchg
cmpsl
pop
jbe
loopne
jecxz
add
add
inc
addr16
test
add
mov
testb
cmp
add
add
mov
cwtl
aad
add
add
pop
addb
add
dec
mov
add
jmp
pop
stos
jns
testb
lds
jle
scas
add
loopne
call
add
je
out
rcrl
add
lods
pop
stos
fs
add
mov
jp
fists
add
add
cmp
jmp
stc
das
cmp
push
add
add
add
addb
fimuls
mov
sub
add
daa
cltd
in
jmp
insb
ret
mov
mov
add
add
loopne
js
add
addb
ja
fildll
ljmp
inc
add
lcall
sub
adc
pusha
add
add
ljmp
add
mov
call
sub
pop
push
daa
std
push
add
add
loopne
dec
mov
sub
sub
jecxz
add
mov
mov
jnp
loope
add
andl
or
jbe
scas
add
pop
push
add
sbb
add
inc
add
hlt
add
add
mov
out
add
lahf
pop
inc
add
add
mov
add
and
mov
js
std
sub
jge
add
mov
add
add
or
mov
xor
insl
popa
rolb
shr
add
pop
int3
imul
add
popf
outsl
call
stos
sbb
ljmp
xor
dec
test
mov
inc
add
add
add
add
in
lea
aam
in
jl
pop
decl
pop
cmp
flds
mov
shll
add
mov
xchg
out
out
fisubrl
out
scas
pop
mov
add
add
cld
cmp
outsl
or
fsubs
mov
out
jnp
sbb
add
mov
decb
sub
jo
stos
bound
mov
add
int
add
pushf
enter
xchg
add
add
mov
cmp
push
add
sahf
push
add
xor
add
jo
das
xor
sbb
insb
push
add
add
add
inc
add
inc
add
movb
mov
loopne
in
pop
leave
adc
add
aad
int
add
adc
mov
sub
sub
lea
cmp
inc
add
sub
mov
add
je
movsb
add
xor
or
add
add
xchg
add
bound
mov
add
gs
push
loopne
mov
aaa
add
mov
jo
lock
pusha
add
xor
cmpsb
add
push
mov
stc
shll
test
cwtl
sub
in
rolb
and
subl
imul
add
or
int3
mov
cmp
cmovns
xor
ljmp
repz
add
outsb
insl
xchg
in
or
out
jb
sbb
add
jae
add
add
add
add
dec
add
mov
or
add
xor
inc
add
fcmovb
add
mov
add
pop
in
xor
rolb
scas
lods
jmp
xor
sbb
stos
dec
mov
loop
rcrl
add
add
add
add
lds
add
fstpl
rolb
xchg
insl
xchg
xor
mov
add
add
movsb
add
je
adc
imul
add
and
xchg
add
orl
xor
je
out
pop
mov
ret
imull
mov
add
jmp
into
repz
add
add
mov
ds
add
pusha
add
out
push
add
or
add
sub
add
mov
inc
add
mov
push
add
jle
mov
ja
mov
mov
leave
insl
fcompl
data16
sbb
xchg
add
shrl
xor
testb
das
push
dec
movsb
add
cmpsb
add
insl
sbb
jg
or
fcomps
das
movsb
add
jg
adc
add
add
push
jmp
dec
lcall
rolb
mov
test
adc
push
cmp
cmp
lcall
mov
shrl
mov
xor
add
mov
xor
xchg
add
in
je
push
sub
ljmp
mov
add
add
call
add
cs
nop
add
sbb
sti
mov
add
xchg
int3
jnp
add
cmp
add
mov
mov
xchg
loopne
mov
ret
in
add
les
lahf
sbb
add
push
mov
cmc
mov
jge,pt
ret
add
in
inc
ds
sub
popf
xchg
or
add
add
xor
or
add
xchg
add
add
add
enter
mov
loop
sbb
add
std
loop
adc
dec
in
and
lahf
mull
push
add
add
jmp
ds
lds
mov
cmp
cmp
pop
and
mov
xor
mov
mov
xchg
dec
lds
mov
pop
addb
ret
inc
add
fdivs
adc
add
scas
pop
mov
ja
add
add
repz
jmp
cmp
idivl
sbb
mov
jns
addb
aaa
lds
xchg
pushf
in
add
ret
test
inc
add
cmpsb
add
add
xchg
lods
les
dec
cld
loope
jecxz
or
add
and
mov
add
inc
add
mov
mov
bound
mov
mov
xchg
cmp
xchg
pop
pop
roll
add
pop
outsl
add
xor
icebp
movsl
testb
shrl
push
repnz
add
add
mov
cmp
lock
add
mov
das
or
sub
cmp
add
les
add
in
add
insb
mov
out
mov
add
out
cwtl
xlat
xchg
mov
add
fdivrl
push
movsl
mov
addb
inc
add
js
add
add
mov
or
push
aam
fstpl
or
sbb
add
mov
mov
jl
push
aas
push
add
dec
ret
mov
dec
dec
into
test
pusha
add
test
cltd
push
xor
add
add
add
aad
add
add
xchg
sbb
cmp
add
pop
push
add
add
add
add
inc
add
cwtl
addb
bound
mov
jnp
stos
out
inc
stos
jmp
pop
xchg
mov
add
add
ja
lret
or
sahf
ja
jge
mov
dec
dec
fidivs
add
push
std
push
dec
popa
mov
ret
test
cmp
imul
cmpsb
add
sub
add
sub
fwait
addb
inc
add
mov
lock
pop
imul
ljmp
mov
sahf
jmp
sbb
psubb
insl
cmc
pop
ljmp
jae
movsl
push
add
inc
std
jno
daa
inc
add
add
test
sbb
fsubrl
mov
test
add
add
js
push
add
add
jno
cmovbe
dec
push
add
stos
jecxz
fcomp
jnp
add
push
add
mov
add
push
add
xchg
test
jmp
add
movsl
lret
adc
cmp
ret
cmp
inc
jecxz
repz
add
add
pop
cld
stos
ret
jb
jnp
call
imul
stos
cld
xchg
fdivr
mov
jl
add
iret
call
add
push
inc
cmp
adc
cwtl
mov
add
add
add
add
je
gs
inc
add
loopne
int
add
xor
add
cld
xchg
arpl
xor
push
add
push
add
mov
jge
add
and
nop
add
leave
push
rolb
adc
dec
aas
push
add
pusha
add
pushf
int3
mov
pop
push
add
push
test
loop
dec
sub
out
gs
cmp
addb
add
mov
add
fildll
pop
xchg
add
cwtl
push
ljmp
sbb
add
cltd
mov
push
add
leave
fmuls
fmull
sub
data16
xchg
adc
stos
lret
adc
mov
jo
hlt
add
add
insb
sbb
push
pop
cmp
push
add
push
lock
push
add
cld
jns
add
add
mov
fidivrs
dec
test
mov
pusha
add
fldt
jnp
lahf
jo
adc
pop
pop
in
test
add
add
push
lcall
mov
add
fidivrs
cmc
mov
shll
add
add
dec
imul
dec
xchg
add
add
movb
mov
add
pop
in
pop
mov
adc
scas
dec
adc
pop
mov
dec
fwait
pop
cmp
mov
jg
mov
pop
mov
in
gs
xchg
loopne
jne
add
das
pop
test
mov
fadd
add
add
add
inc
fimull
add
insb
hlt
add
xchg
lret
rolb
das
nop
add
add
test
mov
addb
or
mov
rolb
add
sbb
mov
mov
gs
add
mov
mov
jbe
fldcw
xor
adc
add
insb
mov
imul
pushf
fdivs
addb
divl
test
add
adcl
shll
add
repnz
add
lds
imul
inc
fisubrl
out
jbe
cmpsl
mov
mov
adc
pop
mov
sbbl
add
sbb
jecxz
jmp
mov
push
add
test
mov
add
mov
cmp
movl
mov
movsb
add
mov
loop
inc
add
addb
test
sbb
add
add
xlat
pop
loopne
mov
add
pop
inc
add
mov
movsb
add
add
adc
stos
subl
jmp
cmovns
add
cltd
lods
adc
icebp
dec
or
mov
add
rolb
das
pop
jmp
cmp
add
mov
or
pusha
add
cmp
add
rorl
cmp
add
stos
roll
mov
sub
icebp
lea
add
xor
add
mov
add
lds
add
jg
mov
push
add
sbb
fwait
loop
push
lret
fld
add
les
xchg
add
jmp
mov
mov
xlat
mov
add
loope
inc
add
jl
inc
lea
inc
mov
addb
int3
decb
pushf
jns
imul
aaa
mov
add
jb
movsb
add
adc
add
out
insb
jbe
jnp
add
add
add
sbb
mov
mov
add
pop
sub
add
testb
add
add
xchg
add
add
push
loopne,pt
mov
sub
mov
jbe
ljmp
add
mov
add
add
inc
add
scas
push
add
push
mov
mov
add
cwtl
pop
movsl
lds
ds
add
adc
mov
mov
pop
xchg
add
add
or
xor
lret
fldenv
movsl
addb
sbb
and
mov
outsb
push
or
daa
roll
fistps
fimuls
lds
push
jl
add
gs
jmp
pop
adc
pop
adc
cmpsl
xchg
rcll
add
mov
loop
cmpsl
jnp
add
sbbl
add
mov
ljmp
sub
push
dec
sbb
movsl
icebp
sarl
cs
test
icebp
pop
fstpt
add
loope
or
mov
add
hlt
add
scas
mov
mov
outsl
cwtl
jo
repnz
xchg
push
dec
xchg
xchg
xor
pusha
add
dec
xor
xchg
cmc
rcll
fcomi
sub
xor
movsl
test
add
ret
xchg
add
mov
out
cld
push
add
add
adc
adc
dec
ret
jecxz
add
pop
insb
mov
mov
mov
mov
cmp
add
sub
sbb
cs
cmp
xor
addb
add
add
mov
jne
add
stos
dec
cli
call
xchg
add
add
lret
ret
adc
sbb
jnp
data16
add
dec
jns
add
stos
ljmp
pause
add
jae
add
dec
pop
daa
icebp
jae
cmp
add
rolb
xor
dec
daa
or
lods
pop
xor
jbe
cmp
js
mov
test
sbb
imul
cmc
add
jb
rolb
jle
repz
add
jl
add
aas
mov
add
lret
test
sahf
mov
dec
pop
das
imul
std
test
mov
fldt
add
sbb
mov
addb
add
cmpsl
into
xor
add
add
push
ja
in
ljmp
outsl
fildl
lret
pushf
rcrl
push
in
dec
mov
out
pusha
add
pop
lea
out
cli
inc
sti
pushf
dec
or
or
fdivrl
testb
sbb
add
fisubrs
jnp
mov
add
add
add
inc
add
and
or
fwait
cli
add
mov
dec
xchg
dec
sbb
push
add
add
mov
movsb
add
add
add
and
mov
fists
xchg
mov
rorl
jae
add
mov
daa
jge
add
and
dec
and
popf
jbe
out
push
add
pushf
add
and
in
add
in
xchg
add
push
add
add
xchg
push
add
and
shll
add
add
aad
pusha
add
mov
and
mov
shrl
xchg
fldl2t
lods
aas
fdivl
add
add
adc
add
int3
sti
mov
add
addr16
inc
lcall
add
pop
fldenv
test
sbb
sahf
rolb
je
inc
in
xor
add
addr16
mov
repz
push
add
jle
inc
add
add
add
jle
sub
add
add
cmp
cmpsb
add
shll
jecxz
sbb
add
in
adc
js
call
test
inc
inc
add
add
mov
rolb
iret
dec
push
add
add
add
aam
jp
in
in
bound
mov
add
mov
das
xor
mov
aam
rorl
test
mov
scas
xor
or
inc
add
roll
repz
mov
mov
insl
lods
or
cmpsl
call
mov
pop
in
and
mov
leave
and
iret
fwait
push
cmp
movsb
add
pop
sub
add
jb
in
push
add
pop
push
icebp
sbb
addr16
mov
aaa
rolb
add
inc
dec
cs
adc
sub
add
mov
mov
mov
pop
jne
hlt
add
sbb
sub
inc
add
mov
or
jbe
cld
outsl
xchg
add
rolb
sbb
pusha
add
aam
fisttps
in
aad
popf
push
add
sbb
aam
xchg
sub
jo
xchg
insl
or
bound
mov
lds
shrl
or
add
cli
lock
dec
add
loope
aad
ljmp
add
cmpsb
add
sbb
rolb
push
add
add
mov
xchg
dec
jle
cs
cltd
hlt
add
add
jb
add
mov
add
push
mov
and
mov
jno
add
lcall
add
lock
out
pop
in
jmp
add
dec
jmp
sbb
testb
pop
sahf
shll
mov
jo
dec
hlt
add
mov
mov
mov
add
addb
fyl2x
int3
jmp
mov
mov
mov
jecxz
add
add
add
repnz
cmpsb
add
add
loope
adc
mov
add
insl
fwait
call
inc
add
stos
and
push
add
mov
imul
add
and
push
iret
mov
add
add
sbb
sub
push
andl
fucomi
repz
stos
cwtl
mov
repz
mov
iret
lock
mov
mov
jge
dec
pop
rolb
pop
sbb
cwtl
xchg
cmpsb
add
mov
lahf
add
mov
add
mov
addb
fiaddl
add
int
or
jmp
mov
mov
add
pop
and
cmpsb
add
cwtl
rolb
fs
shl
add
mov
inc
sub
leave
ja
loope
inc
add
movb
jno
inc
add
movsl
mov
xor
mov
add
mov
cmc
pop
add
fiadds
pop
add
mov
add
mov
mov
scas
mov
stos
fwait
addb
lea
jle
pop
into
pop
scas
jg
add
jmp
pop
sub
dec
mov
hlt
add
add
stos
mov
adc
add
mov
jne
rcrl
or
out
add
pop
jno
pop
mov
add
shll
sub
mov
add
lea
add
ret
and
mov
add
push
lret
lahf
xchg
rolb
test
xor
aam
sub
sbb
lret
xorl
int3
addb
add
fwait
je
pop
xchg
add
adc
pusha
add
sbb
addb
dec
sbb
enter
push
add
sub
test
add
out
mov
push
lcall
sub
inc
add
mov
lods
shl
sti
dec
scas
decl
mov
sub
cmp
adc
jo
out
addb
and
mov
jg
repz
mov
iret
testl
cmp
test
xor
pop
dec
insb
stos
out
jb
pushf
xor
xchg
add
add
test
daa
adc
add
add
add
pop
shr
idivl
add
je
ret
jbe
and
mov
add
sub
inc
repz
add
mov
arpl
add
pop
push
int3
lret
rolb
insb
test
jl
addb
jno
xor
repnz
test
sub
add
add
sqrtps
mov
sahf
cmp
add
roll
hlt
add
jb
push
add
arpl
loopne
jnp
lahf
mov
push
daa
xchg
add
add
sbb
add
jbe
frstor
mov
pop
fnstsw
pop
cmp
arpl
xor
popf
int
mov
mov
add
add
mov
test
add
add
add
movsl
addb
jne
add
rolb
daa
xor
xchg
add
mov
movb
loop
rolb
jbe
sub
addr16
mov
bound
mov
add
and
cmp
adc
je
icebp
lods
mov
add
mov
add
ja
sbb
sub
add
inc
add
fs
add
pushf
xor
ds
repnz
sub
mov
mov
pop
mov
fnstsw
jne
add
jb
fnsave
add
mov
add
jno
mov
add
mov
add
mov
jbe
push
add
hlt
add
xchg
add
movb
or
add
movsl
xlat
hlt
add
add
pop
adc
cmc
scas
ljmp
inc
add
je
xor
fsts
into
inc
pop
inc
add
jmp
cmpsb
add
popf
inc
add
cltd
mov
cwtl
cs
xlat
insb
mov
jecxz
fwait
and
dec
add
mov
pop
sbb
cmp
add
mov
add
xchg
add
mov
jns
add
test
cltd
sbb
test
cwtl
lock
add
mov
popf
mov
lahf
add
out
cli
mov
add
add
mov
mov
add
adc
sub
fdiv
mov
sbbl
mov
ret
sub
jg
push
add
sbb
aad
mov
and
mov
push
add
xchg
daa
test
add
xlat
dec
mov
sarl
cld
lock
add
mov
pushf
pushf
insb
aad
add
cmpsl
mov
ficomps
xchg
add
call
cmpsl
lahf
std
lahf
sbb
in
test
sbb
adc
add
pop
pop
mov
mov
mov
sub
pop
mov
add
add
dec
push
add
ja
dec
cltd
add
add
fldl
loop
cld
dec
out
sbb
dec
imul
and
mov
add
insl
xor
and
mov
add
jne
mov
jge
insb
mov
and
mov
add
flds
sbb
jnp
xor
mov
testb
or
scas
clc
push
cmc
cmp
mov
idivl
outsb
add
sub
xchg
xor
mov
aad
mov
add
add
add
inc
scas
xchg
mov
add
add
mov
and
mov
ljmp
sbb
vxorps
stos
adc
cmpsb
add
add
fdivrl
shrl
add
sub
cmpsl
jle
adc
aam
dec
fwait
arpl
aas
pop
stos
out
fwait
data16
cs
insl
rolb
and
mov
inc
add
jg
push
add
cld
mov
mov
add
pusha
add
stos
or
add
ds
sbb
add
pop
insb
lds
mov
fidivs
and
xlat
sbb
add
dec
lahf
cli
jle
mov
add
add
mov
or
ds
add
shr
in
mov
mov
cmp
jne
add
ss
xor
adc
jmp
xor
loope,pt
inc
add
xchg
addl
mov
inc
add
xchg
add
add
mov
cmp
fsub
jne
sub
adc
add
push
add
mov
jb
and
js
test
add
pop
jmp
add
add
add
movsl
mov
pop
into
mov
cmp
repz
cmc
fiaddl
incb
add
sbb
push
jmp
mov
jl
sub
fwait
add
xchg
cli
inc
add
mov
add
xor
jns
add
sbb
add
or
add
je
mov
mov
mov
push
add
add
das
andl
lock
addb
add
dec
push
add
or
jns
adc
pop
sub
mov
cltd
jnp
push
add
loop
ret
add
add
subl
add
stos
inc
xor
push
data16
add
xchg
add
repz
stc
rolb
xlat
aaa
push
lcall
xchg
and
pop
fsub
imul
add
mov
sub
jno
rcrl
mov
add
sbb
fsubl
add
aad
cmp
add
adc
mov
add
addb
out
mov
cmp
leave
or
loopne
mov
cmp
pusha
add
inc
add
jge
sub
mov
sbb
js
fcoml
add
add
mov
fwait
push
rolb
mov
cwtl
pop
adc
mov
sub
out
sbb
cmpsb
add
xor
push
jecxz
mov
xor
stc
cmp
in
mov
mov
push
lock
jns
cwtl
int3
lods
js
je
jecxz
adc
jecxz
push
add
and
arpl
add
loopne
jo
jae
add
fwait
push
add
add
add
mov
mov
mov
addb
xor
xor
lock
popa
sub
dec
arpl
sub
jno
add
inc
and
mov
pop
dec
or
ficompl
xchg
data16
mov
xor
add
daa
into
ret
inc
add
or
add
xlat
cmp
fildll
push
add
add
and
xor
add
mov
add
jecxz
add
icebp
xor
arpl
pusha
add
xor
mov
add
pop
and
push
movsl
stc
jecxz
add
insl
push
add
inc
inc
push
xchg
fwait
orl
nop
add
loop
add
hlt
add
and
and
jecxz
add
addb
test
ret
add
fisttps
aad
and
mov
push
adc
adc
push
sub
inc
or
lods
or
paddq
fstpt
sbb
in
insb
gs
sbb
mov
xchg
je
or
jns
dec
pusha
add
mov
xor
xchg
pop
lret
add
sbb
add
js
rolb
jo
or
pop
lods
lret
psllq
add
jns
sub
mov
and
mov
add
and
add
orl
sub
rolb
pop
dec
lcall
rolb
jbe
push
add
sahf
inc
add
mov
lea
ja
mov
mov
inc
cmovb
mov
sub
add
jbe
repz
lds
jbe
mov
add
and
mov
pop
data16
jo
xor
add
add
js
jmp
adc
inc
stc
cmp
imul
add
insb
add
add
add
out
imul
pop
xor
mov
add
mov
inc
add
add
add
pop
add
mov
xchg
outsb
outsb
inc
add
inc
addr16
aad
or
int3
dec
lds
loopne
rolb
cwtl
add
add
mov
dec
inc
jns
xor
stos
jo
adc
nop
add
cmp
data16
inc
arpl
mov
in
fwait
into
inc
add
add
add
movb
sbb
add
add
mov
not
movsl
out
leave
aam
push
jnp
add
add
add
int3
jg
pop
scas
mov
add
xchg
dec
movb
add
lahf
adc
mov
mov
int
or
or
sub
cli
xlat
adc
repz
scas
push
add
loop
testb
nop
add
jg
add
jnp
cld
mov
or
sahf
and
jns
in
call
aaa
std
pop
lods
mov
hlt
add
aad
add
mov
jge
add
push
add
arpl
in
hlt
add
icebp
jl
mov
sbb
add
mov
adc
xor
jnp
adc
pop
sbb
les
jns
add
mov
xchg
inc
add
jb
xor
dec
mov
mov
outsb
sub
add
add
mov
shl
sbb
std
fcoms
add
mov
sub
mov
flds
mov
inc
cmpxchg
mov
dec
jo
mov
add
das
or
ficoml
bound
mov
data16
and
inc
gs
cltd
push
push
add
out
push
add
xchg
xchg
insb
inc
and
mov
mov
and
jne
movups
repnz
add
or
xchg
cmp
movb
add
ja
aad
add
divl
aaa
inc
fimuls
jecxz
test
add
and
pop
les
xor
mov
adc
add
sbb
aam
lahf
daa
or
add
add
add
add
inc
mov
and
mov
pop
mov
ds
add
test
jns
jg
add
add
loop
mov
iret
leave
in
add
and
sub
add
sahf
psubw
cmp
cli
incb
add
xchg
mov
jne
add
lret
pop
jb
mov
mov
add
add
dec
cmp
add
cmp
add
add
add
add
sbb
add
xchg
addb
add
gs
push
xchg
add
dec
jecxz
fs
add
out
nop
add
add
in
add
clc
adc
mov
cmc
and
dec
fs
arpl
mov
jmp
fdivrs
lea
pushf
add
mov
or
xchg
out
and
mov
add
stc
sub
out
adc
mov
pop
pop
cltd
lret
addb
add
call
sbb
fimuls
movsb
add
mov
xor
push
sbb
push
mov
cwtl
and
mov
aas
ljmp
out
repz
add
ja
add
add
jl
mov
add
add
add
add
push
sbb
add
int3
pop
int
loopne
jo
xchg
cld
mov
add
pop
xchg
lock
pop
jmp
pop
fbld
testb
rolb
xchg
add
add
pop
ljmp
popa
addr16
and
add
cmp
add
add
es
sbb
mov
daa
mov
inc
dec
rcrl
fnstenv
add
outsl
xlat
mov
aad
in
cmp
add
sahf
fcomps
add
lods
pop
iret
cmp
test
pop
xchg
add
mov
add
adc
mov
xor
jmp
add
loope
js
xor
adc
and
add
push
push
add
cmp
into
inc
add
jl
lcall
adc
mov
add
lret
icebp
cmp
and
add
add
cmc
dec
ljmp
lahf
mov
mov
dec
cmpsl
int
mov
les
jmp
add
dec
sti
xchg
xor
adc
out
dec
adc
jnp
in
xchg
loope
add
add
mov
pop
cmc
mov
add
std
xor
clc
push
add
add
adc
pop
movsl
mov
dec
push
and
inc
add
add
fiaddl
add
lods
pop
scas
movb
add
add
sub
ds
fcomps
add
jmp
add
sub
mov
sbb
xchg
loopne
mov
loope
add
push
add
jbe
repz
data16
add
lock
test
add
add
jo
add
add
mov
or
mov
xchg
lock
daa
adc
add
xor
je
loop
popf
mov
aam
ret
lods
inc
add
inc
push
jmp
add
add
nop
add
add
pop
mov
or
xchg
rolb
aaa
xchg
or
enter
cld
sub
aam
add
add
mov
lods
fs
add
fimuls
pop
loop
pop
and
mov
add
inc
stc
scas
icebp
jl,pn
scas
or
fdecstp
add
add
aam
push
hlt
add
add
add
frstor
out
sbb
pop
fwait
push
add
push
testb
insl
mov
xchg
int
inc
add
jne
aaa
je
mov
push
add
stos
sar
add
add
ja
push
add
aad
add
pop
andl
int3
mov
add
add
adc
test
xor
adc
jmp
inc
add
repnz
es
addr16
adc
jbe
or
inc
add
mov
fwait
push
jno
repz
mov
sub
sub
xlat
repnz
mov
addb
add
xlat
or
data16
loop
hlt
add
outsl
fwait
ljmp
adc
cmp
jle
add
pop
cwtl
pop
nop
add
xchg
lahf
pop
dec
sub
add
fmull
outsb
push
add
ja
add
add
add
sbb
add
push
mov
add
loop
mov
or
add
xor
mov
rolb
add
or
jg
add
add
add
adc
ljmp
pop
ja
lcall
bound
mov
add
pusha
add
stos
dec
xchg
add
repz
jge
sbb
push
add
ret
sub
arpl
iret
and
decb
lods
dec
mov
pop
add
jle
add
xor
add
push
mov
fsubs
mov
cmp
push
inc
sar
pop
sahf
das
dec
rcll
mov
sub
in
add
addl
add
add
add
out
adc
lds
int3
xor
push
fbld
add
fldpi
mov
gs
addb
dec
xchg
add
lock
mov
test
rcll
jne
add
jno
or
lret
or
mov
xchg
add
add
push
adc
push
add
mov
sub
add
aam
clc
cmp
arpl
popf
dec
xor
loopne
movsb
add
add
xchg
pop
push
sub
xor
add
addb
pop
jno
or
add
jae
add
push
jl
add
mov
add
cwtl
lods
cli
rcll
add
dec
cwtl
in
mov
add
add
add
daa
xchg
add
add
and
inc
add
inc
xchg
cltd
add
add
adc
movsb
add
push
add
jnp
stc
pop
es
add
dec
dec
ds
add
mov
add
enter
add
push
add
insl
movsl
shll
pop
sbb
sub
jp
mov
test
inc
add
aam
and
xchg
add
add
xchg
aam
pop
and
mov
add
push
add
mov
daa
lods
or
mov
add
mov
add
mov
xchg
mov
add
add
mov
add
add
add
enter
push
mov
sub
mov
add
pop
xor
lret
add
or
into
mov
dec
sub
inc
add
inc
pop
jmp
mov
add
mov
pop
cmp
in
or
add
dec
js
xchg
int
outsb
rolb
or
or
pop
cmp
mov
push
add
mov
add
lods
mov
push
add
scas
inc
add
inc
ja
xchg
add
lret
inc
add
add
sbb
add
mov
sbb
jns
ficoms
arpl
and
out
sbb
pop
add
sub
xor
pop
ljmp
pop
dec
inc
add
decb
sub
ljmp
jl
add
mov
mov
lods
sbb
add
mov
sbb
push
add
jecxz
add
hlt
add
mov
add
add
adc
add
arpl
push
add
iret
lds
or
lock
inc
add
add
adc
cltd
mov
add
mov
adc
xchg
add
add
lcall
popf
in
pop
cmp
mov
xor
push
adc
in
xchg
addb
mov
add
push
add
push
add
out
addb
mov
pushf
addb
add
push
add
add
jle
outsb
cmp
movsl
call
into
test
sub
dec
scas
addr16
cmpl
insb
out
insb
aam
push
add
mov
dec
push
add
xchg
adcl
out
loopne
sbb
call
jnp
cs
stos
add
push
pop
xchg
pushf
cmp
out
mov
add
add
mov
addb
add
out
sub
test
push
add
sbb
add
sbb
add
push
add
inc
add
jecxz
mov
out
mov
or
add
cli
adc
and
ret
add
loopne
fsts
push
xchg
add
add
int
mov
push
in
mov
mov
lcall
mov
add
mov
sub
aam
ret
mov
add
jbe
sbb
loope
add
pop
cld
dec
push
add
scas
in
testb
mov
sbb
loop
push
add
add
inc
sti
lods
ljmp
data16
add
xchg
or
insb
mul
add
dec
push
add
push
mov
xor
test
add
and
add
add
cmpsb
add
ja
sub
add
xchg
aaa
sub
dec
fmul
in
add
push
add
mov
cltd
push
add
or
cmpsb
add
add
jle
add
add
test
or
push
add
mov
mov
add
out
adc
mov
fidivrl
cwtl
stc
pop
push
mov
sti
mov
bound
mov
add
into
xor
in
adc
hlt
add
mov
pop
rolb
push
aam
mov
add
add
adc
push
adc
jb
xchg
add
add
divl
shrl
in
inc
add
add
lahf
fisttpll
mov
insl
mov
lret
inc
inc
jle
out
aas
inc
fdivrs
add
hlt
add
add
mov
dec
mov
xchg
add
nop
add
pop
sbb
mov
mov
dec
lock
add
add
add
add
sahf
jge
fisubrl
js
sti
std
xor
insl
push
int3
xor
pop
add
mov
lahf
call
add
pusha
add
and
mov
addb
jmp
add
out
insl
jp
mov
add
ret
je
or
adc
pop
fldenv
jbe
mov
cmp
add
add
aad
mov
addb
mov
sub
mov
out
adc
pop
popl
and
inc
add
inc
adc
int3
add
and
icebp
xchg
dec
dec
inc
add
mov
adc
add
ljmp
or
pop
mov
sbb
repnz
pop
pop
addr16
xor
daa
addb
fidivs
movb
aas
sub
dec
cmpsl
cmp
add
scas
add
add
gs
add
sub
mov
pusha
add
add
add
cmp
add
mov
xchg
add
mov
stc
scas
imul
jle
movsb
add
mov
fadds
stos
gs
and
push
cltd
rolb
cmp
add
jne
add
add
or
out
stos
rorl
push
xchg
add
xchg
add
pop
adcl
inc
pop
repz
out
fdivs
fs
add
mov
pop
ja
out
sti
sbb
or
xor
fwait
mov
xor
daa
sub
fmulp
leave
fnstenv
addb
lock
pop
mov
add
add
imul
mov
mov
jbe
scas
cmpsl
or
fcmove
pop
lds
mov
dec
ficomps
icebp
shll
pop
add
mov
inc
add
pop
pop
jns
add
adc
leave
pop
lret
test
addb
addb
mov
lea
cmp
add
fwait
insb
rolb
mov
mov
mov
add
hlt
add
add
or
insl
xchg
add
jmp
xchg
add
pop
cmpl
lods
dec
incl
jo
cmp
add
enter
add
adc
cld
jmp
in
fistps
stc
jmp
add
adc
inc
cs
ret
das
xor
pusha
add
scas
bound
mov
add
push
outsl
fcmovb
add
inc
in
xor
inc
add
lods
mov
ds
add
xor
add
push
add
add
shll
xor
mov
or
sub
mov
xor
jb
dec
and
das
mov
add
dec
imul
mov
add
pop
arpl
add
add
xor
inc
push
add
ficoms
mov
js
lods
nop
add
insb
adc
xorl
add
pop
fisubl
add
add
cmp
push
nop
add
add
flds
dec
cltd
fildl
sahf
sub
add
mov
add
pop
filds
inc
mov
ret
insb
sub
adc
clc
roll
add
xor
incb
addr16
add
ficompl
and
loop
imul
xchg
mov
adc
add
and
mov
mov
add
enter
dec
gs
scas
je
lds
add
lods
jnp
pop
fdivrs
mov
ja
je
mov
add
add
insl
mov
out
jge
add
add
push
push
cmpl
loope
iret
pop
push
test
popf
aad
fistpl
add
stos
pop
or
fwait
outsl
sub
mov
add
add
add
test
add
outsb
inc
pusha
add
cmp
sti
mov
mov
jae
push
add
push
mov
fdivrs
hlt
add
ja
add
mov
and
aad
movsl
jae
mov
dec
mov
enter
add
scas
jo
in
add
add
popl
add
stc
imul
push
add
add
testb
add
setle
inc
test
rolb
push
and
xor
rolb
add
xor
fstpt
xchg
push
add
pop
test
mov
mov
call
add
cmp
rcll
hlt
add
add
jmp
add
stc
pop
and
mov
add
mov
add
inc
add
fimuls
mov
out
lods
push
add
add
xchg
cmp
in
xor
add
add
add
daa
mov
pop
push
mov
les
lods
repnz
in
repz
test
jns
push
add
shll
add
sbb
mov
add
or
add
add
jb
add
add
les
addr16
push
mov
pop
add
int
jl
sub
add
add
add
add
push
cwtl
mov
xlat
dec
add
mov
add
sbb
mov
imul
add
add
lock
add
les
push
fisubs
aam
mov
test
inc
jg
add
add
in
add
mov
add
add
outsl
or
sbb
je
aas
push
cmpsb
add
add
add
add
loopne
roll
push
jne
imul
sub
sbb
add
cwtl
fwait
int
mov
les
popf
and
add
sub
insl
and
dec
inc
add
clc
imul
dec
add
mov
push
add
add
mov
add
add
addb
dec
cmpsb
add
insl
push
add
and
jbe
adc
xchg
in
repnz
add
add
add
nop
add
add
mov
call
add
add
sub
add
jbe
pusha
add
outsb
popa
sti
stc
cmpsl
sub
add
dec
push
add
movsl
dec
rolb
add
add
add
add
xchg
add
add
add
add
psubq
add
push
add
add
or
add
sub
add
repz
into
add
add
into
repnz
repz
out
jae
add
pushf
inc
movsl
xchg
testb
daa
push
add
add
xchg
and
test
adc
xchg
xchg
pop
and
add
add
xchg
sbb
mov
add
add
add
shll
add
test
push
xchg
add
add
lock
fmull
add
push
add
add
inc
add
or
add
rolb
xchg
je
out
push
add
jecxz
movb
lods
test
imul
testb
add
icebp
rcll
movsl
xchg
xor
outsl
fsubrs
add
add
mov
outsb
and
add
imul
adc
fisubrs
add
adc
pop
andl
inc
add
mov
lock
testb
je
mov
insl
ficompl
add
mov
add
pop
mov
mov
pop
dec
and
inc
add
add
xchg
enter
add
add
mov
add
add
mov
xchg
lret
movsl
cmp
mov
imul
add
xchg
add
add
add
add
add
pop
nop
add
xchg
inc
add
jecxz
add
mov
test
xchg
add
mov
inc
add
aad
add
mov
data16
mov
addb
sbbl
add
cmpsl
inc
add
add
jne
js
add
rolb
leave
adcl
and
mov
add
cmp
mov
add
sbb
add
add
mov
dec
xor
pop
push
add
add
add
call
sbb
lds
add
loop
scas
push
add
xor
and
pop
mov
pop
je
in
aas
push
push
xchg
mov
mov
add
mov
push
and
fdivr
cmpsl
jne
into
sbb
in
push
add
and
mov
add
xor
enter
add
jp
add
add
add
cmp
mov
add
pop
sbb
aaa
jno
rcll
lods
add
mov
add
add
adcl
cmp
dec
sbb
cwtl
inc
add
mov
fadds
mov
sbb
add
mov
add
lods
daa
push
add
add
push
jmp
jl
mov
add
stos
lret
pop
cmp
add
mov
push
pusha
add
jae
clc
mov
cltd
inc
movb
sbb
pusha
add
mov
add
fidivs
cmp
movq
cmc
fiaddl
sbb
add
cmp
imul
and
mov
mov
aam
push
mov
add
add
sar
fimuls
mov
add
lret
pop
scas
scas
jl
mov
add
pop
cmp
add
adc
imul
adc
sbb
test
adc
mov
cmp
rolb
sbb
add
test
push
add
jecxz
push
sbb
pushf
adc
fcomi
test
cmp
test
and
jl
add
add
pop
in
fstl
fxch
push
je
sub
icebp
lods
pushf
testb
pop
and
adc
and
in
jns
loopne
cltd
add
cmpsb
add
push
out
cmp
cmc
addb
add
add
rolb
cmpsb
add
or
arpl
add
add
add
test
out
add
adc
pushf
sarl
jge
add
mov
or
add
xchg
mov
add
sub
xor
add
lea
add
add
into
mov
add
add
sti
subl
inc
xchg
out
shrl
cwtl
cwtl
in
mov
sub
or
lahf
jl
add
xlat
adc
test
add
or
jae
lock
add
into
insl
pop
loopne
mov
test
add
cmp
mov
inc
add
cltd
repz
add
add
xchg
add
mov
cs
add
test
mov
fsubrs
in
jbe
or
call
mov
lret
and
adc
or
xchg
or
dec
jge
in
add
push
add
push
add
add
add
fisttpll
push
sub
add
add
fnsave
icebp
das
fcoml
mov
add
mov
scas
pop
testb
sahf
out
adc
es
inc
add
sub
arpl
cmp
add
mov
push
pop
jl
jmp
ljmp
push
add
mov
pushf
dec
insl
push
xchg
add
jg
out
data16
mov
dec
mov
and
insb
xchg
add
sti
mov
test
fcmovb
add
push
add
fwait
std
addb
add
das
jmp
dec
pop
dec
int3
sub
add
mov
add
fcomp
and
mov
jge
add
cmc
lret
aam
push
add
mov
adc
mov
add
dec
mov
das
dec
xlat
insl
sub
add
add
outsl
lcall
mov
and
mov
add
insl
repz
mov
cld
xchg
call
mov
adc
pop
popa
and
add
add
add
cltd
mov
xchg
pop
push
pop
dec
pop
scas
hlt
add
inc
add
mov
add
dec
jle
add
imul
test
jne
inc
add
in
lahf
inc
xchg
addr16
or
pop
jns
jnp
call
add
aaa
xchg
add
xor
inc
add
or
xchg
inc
xor
jo
scas
faddl
mov
xlat
mov
and
xor
cmp
add
rolb
jbe
aad
add
add
add
fstl
adc
push
rolb
add
add
mov
movb
dec
out
add
lcall
sub
pop
add
add
add
fsubl
add
sbb
add
mov
add
add
jae
andl
popa
xor
mov
add
mov
mov
in
dec
das
xchg
sbb
cmpsb
add
adc
push
add
pusha
add
sub
andl
sbbl
inc
jge
xchg
mov
nop
add
add
cmp
add
outsb
pushl
add
mov
les
mov
or
sbb
pop
rolb
jbe
jl
xor
add
add
or
lcall
add
cmpsb
add
push
test
add
add
jbe
or
popl
cmp
fistpll
aad
sub
shl
add
fildll
sub
add
cmc
xor
bound
mov
add
cmp
mov
cltd
sub
add
mov
add
addb
mov
lcall
add
pusha
add
add
bound
mov
fdivr
pop
adc
out
movb
add
sbb
movsl
pop
arpl
insb
mov
add
add
xor
pop
jb
mov
add
add
jmp
add
pusha
add
inc
push
movb
ret
add
xchg
mov
dec
mov
add
repz
dec
cmp
out
lret
les
push
push
add
je
xchg
aam
lds
or
lret
fldt
and
mov
div
mov
cmc
sahf
jp
data16
add
add
add
add
add
cmp
icebp
add
push
add
and
loopne
daa
loop
lock
add
sti
pushf
jmp
add
mov
ficomps
add
in
mov
add
in
adc
adc
mov
pusha
add
sarl
stc
dec
xor
movsl
movb
sub
mov
cmpsb
add
rolb
xor
repnz
sbb
test
stc
adc
movsb
add
pop
test
add
mov
aas
mov
fnsave
add
mov
leave
daa
adc
lea
push
fucomip
bound
mov
out
add
add
pop
insb
loope
jl
add
jnp
sbb
fiaddl
int3
add
cwtl
aad
xchg
add
call
cmc
add
repnz
les
cmp
add
les
mov
mov
out
jge
int3
or
add
or
add
mov
add
add
push
out
dec
sbb
pop
rolb
jp
sub
mov
add
and
mov
or
jmp
pop
inc
mov
xchg
pop
inc
loopne
imul
add
pop
xor
add
bound
mov
add
xor
clc
outsl
mov
addb
insl
dec
and
xchg
or
bound
mov
push
add
scas
xor
jnp
add
xor
inc
add
pop
clc
lret
mov
add
jl
add
pop
push
add
mov
cmp
xchg
or
jnp
sub
and
mov
mov
std
dec
rolb
mov
cmpsb
add
fistps
add
add
xor
test
arpl
pop
cmp
mov
jnp,pt
mov
fstps
iret
fwait
push
add
cmp
cmp
adc
add
jb
stos
mov
add
insl
mov
test
cmp
add
out
mov
insb
jb
sahf
add
cmp
aam
mov
add
cmp
add
push
jb,pn
push
call
mov
and
mov
add
and
mov
bound
mov
int
mov
add
add
add
push
add
push
add
mov
pop
sub
xor
add
hlt
add
in
lea
add
add
push
add
mov
pop
sbb
hlt
add
add
mov
into
addb
hlt
add
add
add
add
add
mov
call
add
xchg
or
out
dec
inc
cmp
sbb
xor
and
add
pop
adc
and
push
pop
lds
movsl
cmpsl
scas
lahf
lods
cmc
inc
add
insb
clc
call
rolb
aas
lds
mov
in
push
add
jp
repnz
push
cs
add
mov
mov
inc
add
inc
stos
jnp
add
mov
xor
leave
scas
mov
cwtl
ffreep
add
dec
mov
inc
add
add
jl
adc
imul
cmpl
lods
add
add
add
bound
mov
daa
or
add
clc
sub
in
aaa
movsl
in
lds
mov
add
and
inc
pop
push
push
les
adc
add
rolb
std
pop
jns
addb
add
add
int
add
xlat
xor
dec
mov
test
mov
cmp
ds
int
add
jp
xchg
add
push
add
adc
xchg
jg
mov
and
add
add
jp
inc
in
sub
add
xchg
mov
popa
or
lock
add
add
add
add
jmp
mov
out
aam
fidivl
add
std
pop
test
testb
push
push
and
add
stos
pop
xor
mov
xor
in
movsl
push
add
inc
add
add
mov
jl
add
out
adc
mov
push
cltd
mov
scas
movsl
cmpsb
add
add
lret
into
fisubrs
cmp
sub
add
pop
dec
das
jb
inc
rorl
push
mov
movsb
add
cmc
aas
sahf
adc
fisubrs
ja
jmp
push
add
leave
sub
add
mov
dec
sub
add
repz
jbe
mov
loopne
or
add
mov
inc
add
fwait
or
inc
inc
sub
iret
xchg
add
add
push
push
add
add
mov
std
add
popa
pop
xchg
jg
add
mov
mov
iret
lock
cld
cld
shll
out
jns
xchg
add
aas
push
add
aaa
cmp
je
jmp
cmp
add
add
sub
mov
ds
out
push
add
cmp
add
lcall
push
add
add
jae
add
mov
sbb
add
pop
ret
gs
cld
das
mov
es
push
add
ret
mov
sahf
in
jge
add
mov
mov
jecxz
lret
push
and
add
popf
or
sbb
add
xor
rolb
mov
in
roll
push
cmp
dec
std
xor
pushf
rolb
or
dec
scas
mov
add
sub
add
mov
xchg
pop
fistl
jb
mov
jge
out
add
add
and
mov
add
sbb
addb
mov
sbb
fwait
repnz
xchg
add
mov
dec
pop
movsl
aam
xchg
add
add
add
lahf
js
add
pop
cs
add
outsl
and
mov
ljmp
jmp
jb
and
sahf
add
movsb
add
sbb
push
jecxz
addb
pop
cli
adc
or
mov
ds
sub
call
mov
add
add
add
add
jno
insl
and
add
mov
push
in
sbb
add
xor
popf
fbld
movsl
mov
in
add
add
add
add
inc
dec
scas
inc
add
scas
xchg
out
ret
add
movb
sarl
push
add
scas
outsb
cmp
adc
mov
movb
repz
pop
add
mov
and
mov
ljmp
insl
cwtl
xchg
stos
in
cmc
lock
lock
jecxz
add
add
jmp
mov
sti
outsb
xor
adc
fldcw
je
pop
xchg
sub
add
add
xchg
ret
jl
add
test
add
in
sbb
inc
add
mov
or
daa
pop
aaa
jns
add
sbb
lock
frstor
add
add
mov
add
in
popa
cmp
lahf
aaa
and
add
rolb
add
push
add
add
xlat
dec
fcompp
cmpsb
add
add
add
pop
in
jnp
aaa
mov
inc
add
in
xchg
rcrl
icebp
mov
add
rolb
adc
add
xchg
mov
add
stos
jge
lods
fwait
and
add
dec
dec
adc
int
add
add
mov
jg
outsb
addb
add
add
push
sub
add
mov
xchg
sbb
in
pushf
dec
in
or
out
jno
push
xchg
add
pop
sub
call
pop
into
and
lea
addb
add
add
mov
add
pop
in
pop
fwait
rcll
add
sahf
pop
movl
loope
xor
sbb
addb
add
aam
pop
jb
sub
xchg
add
dec
pop
cmp
add
mov
add
mov
push
js
cmp
mov
movb
add
add
mov
data16
rolb
mov
xlat
les
mov
pusha
add
xchg
add
add
imul
adc
jb
mov
add
lods
mov
sbb
shll
inc
mov
mov
add
ds
adc
and
lahf
sbb
insb
imul
rolb
jp
dec
pop
addb
add
sbb
mov
hlt
add
jge
imul
fisubrl
add
mov
mov
add
jne
jne
sub
ret
sbb
jns
sbb
nop
add
addb
pop
cmp
test
add
repnz
add
push
mov
shr
stc
mov
leave
aas
in
popf
out
jbe
mov
shld
mov
outsb
jb
iret
bound
mov
xor
fldenv
cwtl
jmp
testb
out
push
push
add
out
test
in
cmpsb
add
lcall
or
mov
add
fidivl
push
add
shrl
xchg
sti
leave
aam
aam
adc
add
pop
xchg
lcall
and
lea
add
xor
mov
adc
stos
mov
loopne
fsubrs
add
mov
inc
add
sahf
push
add
mov
add
add
out
add
add
js
mov
xchg
pop
push
dec
insb
dec
movsb
add
ss
mov
mov
cs
mov
insb
cwtl
jge
mov
test
mov
pop
push
sub
add
je
push
add
add
pusha
add
repnz
int3
inc
add
js
add
mov
dec
push
or
dec
inc
add
repz
test
jp
pop
add
add
cltd
and
mov
add
add
mov
push
add
add
add
adc
add
add
sub
jle
mov
dec
sahf
aas
jg
or
fisttpl
addb
add
das
lcall
cli
pushf
flds
aas
ljmp
andl
jl
add
push
lods
xor
pop
cmc
add
inc
add
add
pop
outsb
pop
mov
sub
je
bound
mov
add
add
xchg
add
add
jmp
add
daa
jno
lea
scas
popa
ret
inc
pop
iret
inc
add
mov
add
or
stc
cltd
aam
icebp
ret
sahf
xchg
add
or
sti
sub
add
aas
mov
out
sub
loope
fcomip
sbb
std
cmp
add
call
ljmp
sti
inc
xchg
push
add
push
ljmp
les
insb
ja
loope
sahf
sub
add
into
mov
insl
and
add
pop
pop
add
add
push
xchg
data16
push
add
xchg
add
mov
add
jne
add
pop
fldenv
xor
testl
lahf
out
mov
fistl
push
pop
int
mov
add
add
add
inc
jecxz
add
mov
adc
adc
movsb
add
pop
add
add
data16
loop
mov
xlat
adc
adc
xor
dec
cmc
sub
push
fnstsw
dec
clc
add
mov
jecxz
int
mov
pop
cmp
mov
addr16
stos
inc
adc
js
lret
fsubrl
movl
call
jo
mov
add
add
iret
mov
loop
inc
add
xchg
add
outsb
mov
inc
add
cli
bswap
test
dec
add
pop
jecxz
stos
and
or
xor
fisttps
mov
out
sub
mov
add
jno
out
dec
lret
add
mov
in
jne
add
movb
add
xchg
pop
add
mov
add
add
xor
inc
add
mov
adc
aaa
outsb
push
add
pop
add
xchg
add
cmp
xchg
out
mov
mov
test
adc
fsubs
xchg
jb
icebp
sub
inc
add
test
add
dec
cmp
add
jmp
int3
add
add
loope
cmpsl
pusha
add
sub
andl
lea
add
add
jl
fisttps
jno
andl
mov
add
inc
add
js
add
sub
pop
lret
add
testb
pop
popf
loop
cld
add
mov
test
dec
in
ja
add
inc
cmp
add
lahf
jmp
pushf
testb
add
cmp
mov
lret
fistl
xchg
in
int
adc
popf
movb
pop
jle
sub
add
out
add
jmp
mov
add
movb
add
add
cwtl
fistps
mov
push
in
pop
push
icebp
jae
push
add
insb
int3
js
adc
cmp
sbb
add
in
add
mov
add
hlt
add
add
and
mov
add
mov
jle
push
test
add
loopne
inc
add
push
add
jl
jnp
add
mov
std
fldl
add
mov
sbb
add
push
add
mov
fiadds
add
enter
add
aam
and
inc
gs
add
aas
xchg
add
dec
add
add
add
add
add
xor
push
sbb
add
cmp
sub
sbb
lock
aam
adc
lcall
fsubrl
sahf
lret
rolb
ficompl
mov
cmpsb
add
add
mov
icebp
addl
repz
pop
jbe
fists
insb
or
mov
shll
xchg
xor
cmpsl
cmp
push
dec
inc
xchg
out
ljmp
add
or
jb
mov
mov
add
and
mov
sub
shrl
add
add
in
fldl
add
or
xor
int
xor
aas
cmp
add
mov
in
imul
adc
rolb
movsl
or
iret
lods
ds
push
rcrl
xor
arpl
add
add
mov
add
mov
jl
add
pop
add
lret
or
push
pop
mov
lods
cmc
add
ret
movups
sub
add
imul
cmpsb
add
dec
into
data16
mov
jbe
jmp
jge
push
or
sub
xchg
add
add
movsl
addl
push
add
lret
bound
mov
ja
add
gs
das
out
jl
dec
add
mov
lds
cmp
add
sbb
stos
lcall
cmp
fimuls
mov
daa
gs
add
xchg
pushf
std
cmp
mov
inc
loop
mov
pop
and
bound
mov
fcoms
scas
inc
add
adc
lea
add
add
or
add
jg
cli
js
add
call
pop
in
sbb
add
dec
fildl
out
mov
scas
mov
mov
xor
ljmp
or
ficomps
mov
add
adc
rolb
xchg
inc
cmp
xchg
add
add
xchg
xchg
jno
xchg
add
add
add
das
mov
mov
add
mov
fwait
or
add
popf
jbe
pop
jno
mov
jg
sbb
add
roll
add
out
mov
fwait
xchg
add
push
icebp
fstl
in
jmp
xchg
add
insb
or
cmp
movb
dec
stc
cs
into
add
mov
rolb
add
mov
ljmp
push
lods
xor
sbb
divl
add
out
shll
add
pop
mov
add
add
mov
add
add
ljmp
add
scas
inc
add
inc
iret
jmp
mov
aas
sub
xor
mov
enter
sub
scas
fiaddl
rolb
jmp
cmc
sub
add
test
lds
add
leave
ret
mov
or
test
mov
add
in
mov
aam
iret
jnp
lock
jns
cltd
mov
mov
jp
add
jmp
add
add
out
test
aam
rolb
mov
rolb
stc
add
inc
add
mov
scas
insb
add
mov
int3
xor
add
add
add
push
lds
outsb
xchg
jmp
call
add
add
inc
add
add
inc
add
add
mov
dec
fwait
jge
sub
add
add
mov
mov
scas
jns
push
add
add
mov
add
jno
push
jecxz
push
outsl
outsb
js
xor
fbstp
add
inc
xchg
mov
dec
addr16
add
mov
push
out
jb
lret
sbb
xchg
add
mov
mull
add
dec
cwtl
cwtl
leave
and
mov
adc
and
mov
push
or
push
xor
mov
cld
adc
les
movsb
add
adc
test
adc
push
add
data16
dec
bound
mov
jno
adc
jbe
fidivl
iret
push
add
or
into
js
movb
cmpsl
mov
in
xchg
add
jge
add
add
add
sub
mov
pop
clc
xchg
js
js
add
add
mov
add
mov
mov
fcomps
dec
in
test
add
add
movb
add
add
and
xor
xor
sub
daa
lcall
cmpsl
into
mov
lcall
or
mov
jne
mov
out
or
add
jle
lea
jae
dec
lahf
cli
out
fs
aas
pop
or
ficoml
cmp
mov
add
add
imul
mov
call
inc
lret
pop
jae
lds
arpl
data16
add
nop
add
repz
pusha
add
and
xchg
add
add
add
add
jge
jne
testb
insl
adc
hlt
add
aad
push
fnstcw
int
sub
das
sti
enter
cs
add
add
add
xchg
sbb
mov
add
adc
or
add
add
add
adc
mov
sbb
mov
jno
arpl
push
std
clc
pop
enter
das
stc
cltd
mov
sub
cli
mov
inc
mov
push
ret
fstl
add
mov
cmp
ficoml
add
rolb
mov
add
out
pop
je
mov
mov
add
add
imul
roll
lods
push
arpl
add
inc
inc
fsubl
int3
out
inc
cmp
gs
pop
ficompl
loop
repnz
mov
sub
fwait
imul
mov
pusha
add
and
mov
nop
add
shl
adc
test
in
call
add
in
mov
lds
cltd
and
push
jg
sub
mov
add
inc
test
add
add
add
or
pusha
add
add
push
add
ss
xchg
mov
ffreep
mov
mov
mov
add
js
or
add
iret
push
add
test
sbb
mov
mov
xor
add
add
add
leave
outsb
movsl
or
add
mov
pop
push
add
push
add
push
cli
lods
shll
xchg
add
add
lds
in
xchg
jno
out
lods
rolb
xor
dec
cs
jg
pop
lcall
mov
add
shrl
aad
inc
add
mov
cmp
add
add
jg
pop
adc
data16
mov
jns
stos
test
shrl
push
outsb
and
fst
add
mov
lcall
jg
dec
xchg
mov
mov
add
in
xchg
add
mov
add
add
or
add
mov
cld
pop
lods
and
or
sub
push
add
iret
icebp
std
and
mov
mov
xchg
add
mov
add
add
clc
out
lods
mov
pop
sub
sbb
jns
push
add
sub
add
ds
fs
add
jo
push
add
xchg
mov
inc
add
mov
lds
adc
mov
add
push
int
add
lahf
addb
add
xor
aad
and
inc
add
jo
pop
jle
add
int3
add
mov
add
push
ljmp
into
rolb
fxch
repz
loope
loopne
push
add
leave
inc
add
mov
mov
sub
imul
add
pop
repz
push
add
add
pop
ret
testb
add
add
jne
jae
les
mov
fstps
imul
add
lret
jl
aam
insl
jae
lahf
test
add
mov
add
or
sub
mov
add
dec
adc
push
add
mov
mov
push
sbb
add
imul
or
pop
add
mov
test
xchg
js
add
jmp
fldt
dec
jl
scas
cmp
dec
in
mov
pop
jecxz
jmp
into
cmp
add
lret
call
dec
push
add
add
adc
das
push
add
add
add
and
into
add
out
inc
add
fwait
int
jmp
int
add
xorl
mov
nop
add
lods
mov
add
add
add
add
add
leave
arpl
add
or
ja
add
and
xor
push
xor
push
add
push
js
pop
data16
enter
mov
fwait
pop
ja
add
xor
rcrl
imul
add
add
add
jge
jg
dec
mov
sub
add
add
and
add
pop
scas
fldcw
xchg
rolb
or
add
sub
movb
push
addb
mov
add
data16
dec
cmp
add
add
dec
cmpsl
pop
xchg
add
add
jp
add
add
add
push
add
not
rolb
out
pop
lahf
enter
or
xchg
xchg
add
xor
scas
xchg
or
add
adc
test
cld
push
add
enter
and
mov
add
leave
clc
gs
mov
add
mov
add
mov
add
out
es
in
lret
testl
add
add
les
pop
mov
mov
call
pop
insb
hlt
add
add
push
loop
in
outsl
movsl
inc
dec
push
add
cli
mov
mov
lret
icebp
sub
add
addr16
mov
sub
mov
add
fcomps
add
int
mov
int3
mov
mov
lock
adc
outsl
adc
add
lcall
cwtl
aaa
int
subl
ret
popa
mov
add
xchg
add
ret
cmpsl
add
je
mov
inc
cmpsb
add
repnz
cld
adc
add
mov
add
mov
add
lods
ficoml
add
bound
mov
add
jnp
in
add
add
popf
fcoml
gs
sbb
xchg
add
addb
fcmovnbe
add
add
arpl
movb
add
popf
inc
add
or
jp
add
sub
dec
fmuls
add
inc
add
add
add
lret
jnp
pop
sahf
mov
cs
adc
or
cmpsb
add
add
mov
cmp
dec
sbb
add
pmaxsw
and
add
jne
add
stos
sbb
add
xor
inc
mov
lods
dec
lret
aam
or
in
xchg
inc
add
cmp
sub
xchg
lcall
add
sub
sbb
cld
leave
dec
sbb
add
cmp
add
and
mov
add
xchg
inc
add
mov
shrl
add
cmc
push
xchg
sbb
out
add
aas
pop
fdivrs
cmp
jne
xor
xor
sbb
lea
push
mov
outsb
cmp
add
add
jmp
add
add
fwait
aad
inc
add
pop
inc
add
add
mov
mov
out
or
add
add
add
add
es
repnz
push
jns
aaa
pop
or
inc
dec
sbb
imul
test
jmp
int
cmp
mov
out
pop
pop
xchg
add
data16
pop
andl
mov
add
pop
sub
add
hlt
add
cmc
pusha
add
rolb
andl
xor
add
inc
add
pop
or
inc
add
inc
add
mov
test
add
push
add
add
mov
push
add
mov
movsl
jns
lds
dec
inc
dec
ja
psrad
dec
jb
cmp
pusha
add
lods
bound
mov
stos
gs
mov
add
mov
add
cli
scas
lahf
push
add
sub
add
jae
pop
addb
add
std
loope
out
movsb
add
add
dec
pop
outsb
imul
mov
inc
add
push
add
fisubl
mov
sub
add
mov
lahf
and
scas
movsl
push
add
rcll
xchg
add
movsb
add
repz
add
int
add
fbld
mov
lods
enter
inc
fldl
int
adc
test
pop
lret
push
test
ret
add
mov
sub
cmc
lods
in
or
jbe
aad
add
xor
pop
xchg
mov
loop
pop
leave
in
cmp
add
rolb
pop
rolb
jp
jg
add
test
dec
fwait
adc
movb
mov
xchg
lcall
add
arpl
mov
jmp
loope
sub
add
mov
jmp
cld
add
test
add
dec
sub
pushf
ljmp
mov
xchg
pushf
cmp
shrl
inc
add
mov
addb
rolb
out
inc
add
outsl
popf
rolb
mov
cli
push
add
iret
sub
test
inc
add
add
jae
push
add
mov
les
adc
mov
add
dec
sahf
xlat
repz
into
setbe
fld1
ret
aad
add
into
js
mov
push
sub
aaa
mov
mov
and
mov
dec
insb
inc
add
fsubr
dec
dec
bound
mov
jb
add
mov
stc
mov
out
or
test
sbb
mov
dec
pop
popf
dec
mov
bound
mov
sbb
mov
jne
xlat
clc
imul
lcall
add
ja
add
popf
fisubl
add
add
cltd
push
mov
mov
add
add
in
ret
cltd
inc
add
mov
xlat
or
adc
shll
add
loop
pop
push
add
add
mov
jecxz
addb
xor
xor
rolb
ja
shrl
hlt
add
daa
outsb
cli
imul
lahf
inc
or
popa
or
pop
movsb
add
jnp
add
mov
add
or
xchg
jb
xchg
sbb
mov
pop
jg
add
cmp
adc
int3
lods
pop
mov
cld
jge
hlt
add
add
mov
add
imul
add
mov
add
xor
add
xchg
add
in
cld
call
mov
add
add
addb
sbb
daa
add
mov
sbb
fdiv
stos
mov
sbb
rcrl
cmp
sub
sub
mov
pop
adc
add
mov
and
or
int3
sbb
pop
leave
shufps
mov
scas
jae
push
lahf
movb
lds
mov
addb
shr
mov
cmp
repnz
sbb
fcomps
and
arpl
add
sub
mov
stc
add
in
scas
in
pop
xchg
or
sbb
add
adc
fdivs
add
mov
add
mov
mov
stos
push
add
out
add
add
lds
mov
cmpsl
sub
clc
xchg
add
daa
data16
add
mov
mov
loop
insb
inc
add
jno
arpl
dec
mov
and
call
inc
add
repnz
add
mov
adc
pop
dec
xor
sbb
testl
add
js
in
lock
dec
rep
add
jecxz
int3
daa
clc
or
sbb
jne
jb
call
inc
add
in
fistl
xchg
mov
mov
xchg
sub
lea
or
add
adc
sbb
mov
add
add
inc
add
mov
add
add
mov
and
cmpxchg
add
mov
sub
das
push
jg
add
rolb
popf
inc
push
sub
ljmp
adc
add
or
lods
jge
xchg
add
add
aaa
shll
sti
mov
add
lock
dec
pop
lds
popa
in
push
jne
das
out
add
mov
adc
in
clc
pusha
add
and
or
aam
shrl
jmp
fisttps
ret
addb
add
adc
arpl
call
mov
add
out
scas
push
add
add
push
push
add
add
and
xchg
add
xchg
or
push
add
cmp
test
iret
jns
dec
test
fcoml
stos
dec
test
jnp
pop
jl
or
add
push
add
fucom
add
loop
std
int3
imul
fnstenv
clc
mov
pop
fsubrl
sbb
movsl
jbe
in
or
add
xchg
in
mov
in
loop
cmpsl
add
mov
pop
stc
inc
add
and
in
dec
cltd
call
popf
mov
jl
dec
rolb
pusha
add
cmp
sbb
add
lret
push
add
add
mov
mov
mov
add
jecxz
int3
add
sti
xlat
xchg
add
mov
bound
mov
imul
dec
inc
ret
jnp
out
sub
xor
outsl
xor
add
out
mov
popa
clc
xor
add
add
add
