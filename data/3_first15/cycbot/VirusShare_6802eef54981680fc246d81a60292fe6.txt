add
imul
add
add
add
add
lods
lods
lods
lods
xor
xor
xor
xor
jo
fldcw
test
test
test
test
test
test
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
add
add
inc
add
add
sub
sub
sub
filds
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
adc
adc
adc
cmp
cmp
cmp
cmp
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
out
add
add
repnz
add
dec
dec
dec
dec
dec
dec
js
adc
adc
adc
adc
adc
adc
adc
cli
cli
cli
cli
cli
cli
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
cmp
cmp
cmp
cmp
cmp
cmp
inc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
add
add
add
push
push
push
push
push
push
add
jge
jge
jge
jge
jge
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
and
and
xor
xor
xor
xor
jbe
jbe
jbe
jbe
bound
bound
bound
bound
bound
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
jbe
jbe
jbe
add
add
xor
xor
xor
xor
xor
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
incl
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
ss
xchg
xchg
add
aam
aam
aam
test
test
adc
adc
adc
adc
adc
adc
imul
imul
imul
add
cli
cli
cli
cli
cli
cli
cli
cli
xor
xor
xor
xor
pop
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
and
and
leave
leave
leave
leave
leave
leave
leave
leave
and
and
and
and
and
and
and
and
and
and
and
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
jecxz
jecxz
lock
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
jge
jge
jge
add
add
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
xor
xor
xor
add
add
add
aad
aad
aad
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
rcl
rcl
rcl
rcrb
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
insb
insb
insb
insb
insb
insb
push
push
push
push
push
push
rcl
rcl
rcl
rcl
rcl
shrb
add
add
or
or
or
or
or
or
or
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
jmp
jmp
cli
cli
cli
cli
cli
cli
cli
cli
add
inc
inc
inc
inc
inc
inc
inc
inc
gs
in
in
in
in
in
in
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
les
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
cmp
mov
mov
mov
mov
mov
mov
mov
add
add
add
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
aam
cmp
cmp
cmp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
les
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
sub
sub
sub
sub
sub
sub
rol
rol
rol
rol
rol
rcrb
cwtl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
filds
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
js
js
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
in
in
in
in
in
in
in
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
in
in
in
in
in
in
in
in
in
in
in
in
in
add
imul
imul
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xor
xor
xor
xor
add
add
add
add
push
push
lcall
lcall
lcall
lcall
lcall
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aas
and
and
and
add
add
xor
add
add
sub
sub
add
mov
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
mov
mov
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
popl
add
add
ss
ss
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
js
enter
or
or
or
or
or
add
incl
add
add
add
add
add
add
add
add
mov
mov
add
iret
add
popf
popf
popf
popf
popf
popf
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jno
jno
add
mov
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
add
add
add
add
mov
mov
mov
test
test
add
jno
jno
add
addl
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
int3
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
inc
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
add
add
add
add
add
add
inc
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
mov
mov
mov
mov
clc
clc
clc
clc
clc
clc
clc
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
mov
mov
mov
mov
mov
mov
lahf
lahf
lahf
lahf
lahf
lahf
lahf
out
out
out
out
out
out
out
out
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
rcl
rcl
rcl
rcl
rcl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
cld
cld
addb
addb
addb
addb
addb
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
fs
fs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
sub
sub
sub
sub
add
xor
xor
ljmp
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
sbb
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
jb
jb
jb
jb
jb
jb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
jg
jg
js
js
js
js
js
js
js
js
js
js
js
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
scas
scas
scas
int3
int3
int3
int3
int3
int3
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
div
div
div
div
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
addb
addb
addb
addb
addb
addb
addb
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
addb
addb
addb
test
add
add
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
mov
mov
mov
mov
add
into
into
into
into
into
into
into
into
add
add
out
gs
gs
xchg
xchg
xchg
xchg
xor
xor
xor
xor
fildll
cs
rol
rol
rol
rcll
push
push
push
push
push
push
push
push
push
push
push
push
out
out
out
out
out
out
out
out
out
out
out
add
add
add
add
or
or
or
or
or
or
or
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
imul
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
xchg
xchg
xchg
xchg
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
add
add
mov
mov
and
and
add
add
mov
mov
mov
mov
mov
mov
lock
lock
lock
add
add
mov
mov
mov
mov
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
rcl
rcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
sbb
mov
mov
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
push
push
push
push
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
sbb
sbb
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ds
ds
ds
jno
jno
jno
jno
jno
mov
mov
xchg
xchg
xchg
fs
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
mov
mov
iret
iret
iret
iret
iret
iret
iret
iret
iret
fcmovbe
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
cmp
cmp
addl
addl
add
add
out
out
out
out
out
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
filds
add
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
add
add
in
in
in
in
in
in
in
in
in
in
in
div
and
and
and
and
and
and
repnz
add
pop
pop
pop
pop
pop
pop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
rcrl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
push
push
add
mov
mov
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
cmp
cmp
cmp
cmp
cmp
cmp
bound
clc
clc
clc
clc
add
add
vsubpd
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
add
repnz
add
add
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
add
pusha
inc
or
call
add
xorl
inc
shrb
adc
pusha
and
inc
shrb
data16
out
jo
add
in
xor
fwait
inc
ljmp
rcrb
sbb
mov
jge
fildll
xchg
pop
sti
inc
leave
mulb
inc
inc
pop
mov
pop
in
jae
adc
sbbb
and
in
mov
add
mov
mov
and
sub
shl
jl
or
addb
jae
dec
or
pusha
fnstcw
xchg
shlb
or
and
add
popa
lock
add
ficoml
out
mov
add
in
ds
mov
jmp
dec
mov
sbbb
mov
xor
jmp
imul
testl
push
mov
inc
ror
lret
cmp
rolb
imul
pusha
rolb
inc
pop
pop
pop
jmp
loopne
dec
sahf
adc
inc
pusha
mov
incb
lret
dec
dec
js
adc
stos
and
push
in
fs
and
sbb
loopne,pt
insb
xor
in
pop
adc
add
faddp
jno
lea
icebp
and
mov
jle
jno
pop
sbb
pusha
mov
fldt
jg
nop
add
pusha
pushf
in
pop
sub
loopne
add
fsub
add
inc
cmp
xchg
xor
aad
fstpl
and
and
jecxz
mov
scas
lret
adc
enter
imul
loopne
jb
cmp
jecxz
inc
sbbl
icebp
mov
and
cmpsl
ja
rorl
scas
dec
dec
cmp
in
imul
lcall
data16
jle
xchg
lds
ficoml
fimuls
and
fdiv
mov
fimull
rolb
pop
push
outsl
pop
xor
clc
outsb
push
inc
jmp
jle
jb
loopne
xchg
mov
xor
into
adc
and
decl
into
outsl
cmp
ret
hlt
xchg
jb
stos
shl
test
and
popf
mov
rol
daa
push
jns
jno
ljmp
dec
lea
addb
push
mov
push
mov
mov
pushf
pop
aad
xor
push
into
ja
mov
pushf
sbb
lods
pusha
mov
inc
xchg
rorb
sbb
dec
insl
jg
jb
pusha
adcb
addb
push
fldt
fidivs
andb
iret
dec
jns
test
and
aad
mov
mov
in
add
sarl
and
jge
mov
rolb
dec
xor
jl
test
jmp
jbe
pop
add
test
adc
adc
loope
xchg
popf
cmpsb
add
mov
loopne
push
js
stos
xchg
mov
mov
ljmp
pop
leave
sbb
inc
je
scas
add
fsts
xor
inc
loopne
adc
test
shlb
pusha
mov
pop
cld
aam
andb
push
movsb
loopne
fisubrs
sub
sub
and
pusha
sbb
bound
call
inc
sub
pusha
lret
loopne
mov
and
aad
loopne
sub
xchg
adc
jl
fs
outsl
inc
and
shr
rolb
mov
add
push
add
lahf
mov
jl
mov
mov
xchg
mov
scas
outsl
xchg
les
ret
inc
and
enter
pushf
xor
in
mov
or
hlt
loopne
sbb
pop
or
das
add
pusha
loop
shll
pusha
shl
loopne
push
or
mov
or
and
shl
loopne
sbb
adc
icebp
cmc
jns
cltd
ret
test
loopne
pop
mov
fsubl
mov
outsl
hlt
add
xor
jmp
lret
ret
jbe
loope
adc
pop
sub
adc
insb
sahf
sti
je
lds
jge
insb
stos
add
nop
cmp
test
loopne
stc
aam
mov
and
loopne
in
pop
outsb
add
pusha
mov
and
push
adc
or
adc
daa
in
mov
sub
add
jb
and
pusha
adc
andb
stos
rol
out
das
ljmp
push
sbb
mov
loopne
shlb
test
loopne
imul
loopne
inc
shl
adc
lcall
push
xor
jae
push
int
xchg
loopne
das
jg
push
or
insb
std
std
scas
mov
negl
mov
pop
fadd
cltd
or
sbb
loopne
xchg
mov
shrb
cld
aam
pusha
mov
andb
loopne
pop
inc
push
adc
push
and
inc
jne
push
add
outsl
enter
add
pop
mov
mov
sti
or
pusha
fadd
fisubl
insl
jb
xchg
mov
lret
repz
shlb
repz
out
pop
sub
and
sti
cmp
inc
loopne
and
movsl
mov
and
mov
cwtl
scas
pop
shrl
negl
inc
fsubrl
jns
dec
and
add
addr16
xor
mov
dec
push
and
test
ljmp
sub
mov
mov
icebp
mov
mov
adc
test
in
movsb
addb
mov
push
inc
inc
mov
loopne
pop
mov
loopne
pop
mov
and
cltd
cmp
out
inc
lret
push
adc
adc
push
inc
and
mov
loopne
mov
inc
inc
cmp
mov
loopne
movsb
loopne
sub
lcall
mov
dec
jo
jne
insb
cmc
adc
add
inc
inc
cmpsl
popf
mov
pop
mov
subb
sub
faddp
mov
mov
incl
scas
and
push
mov
adc
pop
loop
fcomi
and
loopne
js
xor
int3
pop
mov
and
stc
clc
les
xchg
cwtd
xchg
sub
arpl
ja
sbb
cmc
in
icebp
inc
cmpsb
and
mov
mov
in
ret
dec
sbb
jno
cwtl
shll
dec
ret
or
loopne
out
jo
dec
js
cmp
add
push
add
push
pop
mov
xor
addb
dec
mov
jb
ss
in
rorl
cmp
rcr
test
xor
ljmp
inc
loopne
int
ror
sti
add
pusha
xchg
pop
jg
xor
xchg
xchg
rorl
adc
and
pusha
jp
ret
outsb
fstl
andb
aaa
dec
shl
cmp
xor
rdpmc
sub
xchg
sbb
mov
sbb
sub
ror
mov
addr16
pop
inc
cli
testl
cmp
movsb
add
popa
xor
subb
sub
cmp
imul
mov
rorl
pusha
out
mov
into
and
pop
or
inc
add
jno
aaa
js
jae
xor
pop
insl
outsb
fisubl
add
sub
and
pop
push
loop
jnp
or
mov
loope
inc
pusha
push
mov
mov
inc
mov
fildl
dec
sti
jns
sbb
add
xchg
sahf
push
jle,pt
cmc
dec
jne
mov
shlb
fnstcw
push
fwait
aad
cs
fcoms
add
test
and
mov
mov
cmp
jmp
mov
sub
lcall
mov
ja
push
xor
and
jne
dec
inc
insb
adc
or
mov
pop
xor
jecxz
gs
and
pusha
test
inc
andb
inc
xlat
fstpt
inc
ficompl
jp
movsl
jge
icebp
pop
pushf
cli
dec
clc
popa
pop
sbb
addb
in
dec
xchg
mov
loop
addb
jp
in
scas
pusha
pusha
popa
lods
mov
add
inc
jae
mov
pop
sub
pop
xchg
mov
mov
inc
gs
sub
cmpb
addb
add
stc
and
popf
xchg
inc
push
pop
inc
out
not
sbb
daa
insl
or
test
mov
ror
adc
int
lcall
pop
or
lret
jbe
cmp
jo
add
add
mov
adc
stos
or
mov
and
mov
push
cwtl
jp
lds
sub
int
sub
imul
out
xchg
xlat
cs
and
sub
and
popa
xchg
pop
mov
and
pop
scas
and
daa
shrb
rcrb
pop
ret
add
pop
inc
mov
pusha
sub
push
and
xor
js
mov
mov
rcrb
pop
mov
mov
test
andb
pusha
xor
add
das
in
andb
xor
fldt
addb
sahf
and
loopne
hlt
lfs
mov
push
inc
out
mov
je
pop
mov
adc
rolb
mov
xorl
mov
in
xor
add
movsb
loopne
lock
ret
in
andb
test
addr16
fwait
dec
mov
inc
iret
jle
addb
push
daa
rclb
push
dec
jle
mov
mov
and
pusha
mov
out
adc
jnp
adc
sbb
add
scas
shlb
dec
dec
pushw
jns
xchg
addr16
out
add
mov
xchg
movsb
loopne
add
pop
xchg
pusha
imul
inc
inc
cmp
mov
popf
arpl
mov
mov
addb
pop
jb
cltd
andb
cmpsl
mov
cmpb
sub
push
lcall
stos
mov
xlat
adc
pop
add
repz
loopne
cmp
lahf
sbb
nop
xchg
aaa
pop
pop
lahf
aad
mov
push
aad
cs
pusha
sub
loopne
mov
mov
leave
mov
stc
lock
xchg
sub
add
pusha
or
and
fsubrl
and
xor
sbb
shlb
insb
insb
adc
rcr
dec
loope
add
add
addb
sub
inc
xchg
pusha
js
lods
pop
adc
mov
add
xacquire
lods
loopne
mov
fadd
mov
cld
mov
add
sahf
sarb
shlb
test
sbb
adc
sahf
mov
jp
test
fidivs
dec
into
mov
push
pop
push
jmp
addb
dec
add
jmp
add
mov
dec
shll
fidivl
iret
lock
push
jne
and
in
out
jmp
inc
and
xor
add
xchg
leave
sub
and
shrb
mov
sub
loopne
pop
test
jns
add
or
lods
lret
addb
and
mov
sarl
add
push
dec
loop
je
adc
ljmp
outsl
sarb
inc
pop
adc
mov
adc
outsb
test
cmp
mov
loopne
jne
rclb
sub
add
cld
fs
out
dec
test
add
cwtl
repnz
ror
lahf
mov
or
aam
mov
mov
loopne
mov
in
cld
push
add
loope
xor
and
div
mov
and
sbb
adc
mov
and
stos
mov
insb
sub
xchg
fstpt
mov
lahf
repz
mov
mov
push
jl
cmp
imul
push
sbb
loopne
icebp
xor
fwait
push
mov
sarb
and
adc
fsubrs
inc
lea
insb
push
stos
sub
cmp
gs
repnz
xchg
cmpsb
pusha
xorb
daa
jmp
pop
out
pop
sbb
xchg
shrb
jle
jmp
pusha
xor
nop
cld
jecxz
pop
xor
sbb
popf
pop
mov
and
je
or
shlb
nop
test
lds
loopne
ficomps
push
ss
mov
andb
faddp
cmpsl
jecxz
mov
and
dec
pop
and
add
pusha
sbb
adc
mov
fdivs
mov
sub
dec
sbb
and
and
in
jns
lcall
push
xchg
fsubs
mov
fimuls
push
loopne
in
add
gs
mov
adc
jecxz
fwait
movsb
andb
bound
adc
mov
sbb
inc
pusha
pop
shll
push
rol
mov
iretw
sbb
pop
imul
adc
sbb
scas
mov
rcll
into
pushl
jbe
shl
dec
shrl
lods
stos
and
xor
inc
inc
dec
xor
orb
loop
popa
ret
addb
dec
mov
and
fisubs
jno
into
pop
mov
shr
adc
ret
test
inc
pop
test
pusha
xor
add
inc
cmpb
lods
jb
pusha
add
in
mov
mov
int3
out
jle
rolb
sub
loopne
push
sub
loopne
add
cmpb
sarb
add
add
adcb
les
andb
sub
clc
ds
enter
divl
addb
mov
adc
les
sub
orb
cmc
in
push
xchg
pusha
test
icebp
mov
pusha
add
js
aas
push
mov
hlt
lods
pusha
inc
add
adc
xor
push
inc
xlat
std
insb
test
loopne
dec
inc
addr16
call
add
push
addb
insl
push
mov
adc
loope
out
inc
xchg
xor
and
insb
adc
push
test
lods
test
and
movsb
inc
pusha
negl
insl
shll
andb
mov
add
insl
mov
pusha
jns
mov
inc
add
loopne
cmp
and
bnd
loop
fisttpl
and
addb
mov
pusha
jge
das
rol
inc
inc
enter
push
xchg
fdivrl
inc
sub
mov
add
loopne
loopne
or
inc
cmpsb
add
jb
add
insb
jmp
pusha
imul
mov
adc
push
mov
or
loopne
mov
jns
mov
push
mov
and
mov
xor
fwait
inc
jmp
or
and
cmp
shlb
add
xchg
rcrb
inc
loopne
mov
mov
jb
cmp
xor
xlat
enter
loopne
gs
andb
mov
ljmp
mov
or
inc
faddl
std
mov
aas
idivb
jbe
loopne
aaa
pop
out
andb
mov
lret
sbb
dec
imulb
pushf
dec
push
mov
outsl
cmp
and
fadd
and
xchg
addr16
std
outsl
or
fstpt
pop
fidivrl
repnz
lcall
inc
dec
cltd
push
xchg
out
movsl
jbe
ficomps
nop
insb
int3
dec
adc
sbb
push
aad
popa
inc
add
add
movsl
pop
fs
mov
orb
sbb
mov
and
or
pusha
pusha
mov
pusha
add
adc
cmp
inc
dec
lock
pop
insb
jns
mov
pusha
and
sti
cmp
xor
out
hlt
inc
cmpsb
pusha
inc
and
loopne
jne
mov
cmpsl
bound
out
test
fdivl
out
cmpsl
outsb
adc
adcb
add
in
jg
lcall
dec
push
add
icebp
push
mov
sub
and
and
add
and
mov
push
ds
cmp
rolb
stos
dec
ja
inc
cmpb
jl
adc
cmp
out
push
sbb
sar
dec
mov
mov
adc
xchg
frstpm(287
out
cmp
cmp
pop
daa
push
pop
jo
sub
lret
sub
stos
inc
adc
push
cld
mov
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
or
loopne
popf
and
and
dec
pop
out
leave
dec
icebp
sub
imul
xchg
xchg
pop
dec
dec
xchg
test
shrb
rolb
jle
mov
jmp
enter
loopne
inc
cmp
sbb
testb
mov
loopne
push
iret
adc
xor
mov
inc
cmp
iret
push
push
fdivl
mov
mov
andb
leave
sarb
scas
and
cmpsl
js
mov
dec
add
ds
sbb
xchg
pusha
scas
xor
xor
inc
add
js
add
aas
test
hlt
imul
add
rolb
fldenv
adc
xchg
xchg
in
push
mov
jle
pop
mov
inc
rcl
out
jmp
xor
mov
adc
inc
dec
cli
pop
mov
ja
outsb
dec
std
push
out
mov
inc
pop
data16
push
inc
inc
jno
adc
push
jg
or
movsb
add
js
imul
movsw
add
inc
lock
lods
add
xor
and
std
add
mov
pusha
add
loopne
cmc
pop
movsb
addb
mov
xchg
lea
arpl
sbb
adc
bound
cltd
mov
inc
sbb
xor
pop
cltd
imulb
loopne
mov
lea
andb
loopne
jecxz
xlat
mov
push
mov
cli
ret
aad
repnz
jbe
rolb
pusha
imul
xchg
lcall
les
sbb
scas
mov
pop
mov
or
xlat
pop
jmp
leave
sbb
scas
lock
imull
inc
clc
mov
inc
add
fdivs
pusha
add
and
inc
loope
inc
dec
xchg
out
enter
loopne
out
mov
or
inc
inc
cmp
ljmp
add
mov
push
sub
mov
aam
out
xchg
sbb
inc
add
push
lret
add
jae
push
das
mov
mov
loopne
aad
pop
inc
mov
shlb
mov
inc
shl
in
inc
add
or
mov
xor
and
mov
fdivrl
and
aam
xchg
adc
jg
sahf
mov
shll
iret
sti
dec
sbb
cld
andb
jg
addb
mov
jne
or
subb
pop
mov
loopne
popa
dec
iret
fidivs
push
mov
loopne
mov
pushf
dec
xchg
or
and
mov
test
pusha
jne
push
fiaddl
fucomip
lea
mov
in
popf
dec
addr16
jb
fchs
mov
inc
and
inc
shl
rolb
loopne
mov
xchg
inc
aam
or
shll
adc
addr16
cmc
push
and
sub
divb
inc
mov
xchg
inc
and
mov
icebp
inc
and
insb
jge
mov
cmpsl
pop
jb
mov
pop
push
mov
mov
dec
in
cmp
push
cld
es
inc
jne
add
cmp
or
sbb
add
mov
pushf
inc
cmp
psubd
or
sbbb
insl
fnstsw
mov
xor
addr16
call
dec
xchg
aad
and
subb
ja
xchg
push
or
pusha
mov
stc
jbe
in
mov
dec
dec
movsl
xlat
push
pushl
mov
pop
repnz
sahf
aam
call
lret
out
push
jnp
pusha
subb
mov
pop
adc
mov
sub
shrb
add
push
lock
dec
add
rcl
mov
cmc
mov
repz
rolb
and
mov
pop
pop
jge
mov
mov
test
pusha
loopne
dec
mov
loopne
and
xor
and
add
movl
loop
icebp
test
in
fwait
push
rorb
xor
sub
ss
gs
lock
adcl
std
bound
ret
repz
iret
addr16
cmc
push
push
xchg
dec
mov
jmp
inc
mov
and
test
inc
adc
out
bnd
mov
adcl
sub
push
addb
scas
and
out
add
sub
mov
or
mov
loopne
adc
loopne
or
loopne
inc
and
hlt
and
andb
pusha
inc
std
mov
sbb
mov
dec
cmpsb
pusha
add
push
aas
sbb
and
ret
mov
sbb
add
dec
and
leave
push
pop
fisttpll
andb
and
pusha
mov
scas
push
dec
jne
jecxz
inc
add
xor
or
adc
dec
inc
gs
mov
jb
out
lret
mov
ds
add
rcll
jb
mov
pusha
and
sbb
fisubs
addb
inc
sbb
inc
inc
pusha
jmp
jae
push
call
ljmp
loopne
movsl
lahf
shl
ret
mov
dec
pop
adc
addr16
mov
jns
imul
dec
out
iret
xchg
pushl
push
sub
xorl
pop
cmp
xchg
aaa
call
inc
mov
into
and
dec
mov
rorl
xchg
pop
sarl
ffree
xchg
iret
inc
push
push
push
nop
scas
adc
sbb
dec
mov
push
mov
je
add
out
xchg
stos
mov
mov
test
inc
jle
adc
in
cmp
xor
mov
jmp
cmp
ret
push
pusha
mov
fisttpl
and
and
call
in
xchg
enter
sarb
xor
ljmp
imul
shlb
mov
dec
mov
ret
sti
filds
pop
insb
cmp
outsb
daa
test
mov
mov
jge
or
sub
add
cmp
inc
sarb
lret
loopne
push
loop
mov
dec
push
jae
push
cs
and
test
sbb
jb
lret
sbbl
pusha
pusha
mov
aad
xchg
fwait
pop
mov
mov
mov
andb
and
cltd
cltd
xchg
mov
fisttps
fldl
cwtl
js
sbb
mov
mov
int3
sahf
push
mov
mov
mov
push
gs
outsl
imul
hlt
pop
jmp
mov
hlt
pop
inc
mov
or
add
cmp
lcall
pusha
inc
test
subb
mov
pusha
cmpsb
andb
inc
jl
pop
ds
jns
and
addb
cmp
adc
je
push
mov
clc
xor
dec
sbbl
push
sahf
mov
push
loope
dec
pop
test
xchg
fwait
xor
add
inc
loopne
scas
mov
andb
pusha
push
and
and
out
lcall
jecxz
push
dec
repnz
rorb
inc
sub
pusha
mov
push
outsb
adc
add
rclb
mov
aam
xorps
vmovupd
ret
and
inc
sbbb
and
push
out
adc
mov
lds
test
loopne
fistpl
and
loope
pushf
loop
cwtl
loope
lea
int3
addb
adc
test
icebp
int3
push
jl
cmp
pop
jns
dec
adc
lea
mov
test
adcb
sub
mov
imul
mov
subb
dec
sti
pop
cwtl
mov
rolb
popf
mov
cmp
jecxz
fsubrs
sbb
andb
mov
dec
cld
cmpsl
clc
add
icebp
mov
add
sub
pusha
nop
jnp
loop
outsl
sbb
jg
push
pusha
pusha
add
cmp
int
mov
ret
add
rol
push
imul
add
xchg
lret
test
add
int
test
xor
rorl
jmp
inc
and
leave
sbb
pop
imull
pop
andb
ds
add
cmpb
aaa
in
dec
lea
and
shrl
sti
sub
mov
or
inc
out
call
push
mov
call
rorb
jl
mov
xchg
sahf
jbe
dec
scas
andb
out
lcall
pop
ja
add
mov
sub
mov
push
fisttpll
inc
cmp
gs
jns
lea
andb
shll
mov
dec
adc
and
jg
mov
lods
sub
aaa
js
mov
or
mov
icebp
nop
push
inc
loopne
sub
pusha
mov
inc
xor
cli
mov
call
cmp
mov
pop
inc
cmp
out
call
out
adc
xchg
rcrb
dec
fdivrl
mov
adc
fmulp
scas
add
sbb
out
pusha
pusha
lret
xor
test
and
aaa
ror
repz
jp
cwtl
and
scas
pop
jb
inc
pusha
add
push
rorl
adc
repnz
mov
mov
lcall
xchg
repnz
fidivs
pop
jo
andb
in
mov
mov
xchg
cmp
push
pusha
and
pop
or
loopne
fs
bound
adc
mov
inc
lods
and
push
rcr
loopne
push
cmp
add
mov
jns
cmpsb
loopne
daa
dec
add
sub
inc
push
mov
addb
inc
jl
mov
push
jnp
into
negb
inc
cld
addb
push
popa
fmull
cld
mov
or
jnp
fst
lcall
add
rolb
add
outsl
push
or
inc
mov
mov
and
call
ret
and
push
sbb
sbb
insb
mov
rolb
addb
add
fnstcw
in
sub
loopne
add
pusha
shl
mov
out
loopne
xchg
inc
xchg
mov
fwait
or
mov
pop
fmuls
test
cmp
shlb
jns
xor
fwait
jns
movsl
addr16
cmp
mov
and
enter
lds
jle
add
pop
mov
xor
xor
sbb
jge
pushf
add
and
mov
or
cmpl
ja
push
pop
xchg
cmp
inc
ja
and
test
pop
lahf
xlat
lock
call
add
cmp
cmpsb
add
mov
fmulp
mov
rcrl
clc
fisttpl
inc
bound
and
lods
and
sub
testb
test
std
sti
push
faddp
mov
mov
inc
add
mov
jnp
js
pop
leave
aaa
repz
mov
lret
mov
mov
adc
cld
ret
inc
and
add
shlb
inc
and
mov
jbe
and
add
lock
imul
pusha
sarb
mov
aad
pusha
addb
ret
mov
and
scas
mov
pop
repnz
out
sub
inc
leave
mov
fnstsw
movsl
mov
add
pusha
add
sub
pop
or
lahf
mov
mov
xchg
mov
mov
and
fists
rolb
ret
jp
mov
pusha
iret
pop
in
xor
lds
and
insb
testb
pusha
xchg
decb
jle
out
fxam
out
mov
inc
inc
js
jne
mov
imul
ljmp
outsl
test
and
pusha
pop
sub
or
jp
mov
leave
inc
xor
daa
pop
cmpsl
out
lds
or
adc
lods
add
or
cmp
enter
out
fcomps
leave
ret
and
loopne
mov
cltd
test
and
cmpsl
andb
inc
cmpsl
sbbl
loopne
xor
jae
lcall
andb
fbstp
mov
and
add
mov
inc
fisttpl
mov
jnp
jl
pop
push
sub
mov
fxch
xor
pop
ljmp
ljmp
shlb
call
mov
sbb
and
sub
ds
repnz
add
jp
pushf
and
inc
cltd
testb
sbb
call
ja
insb
test
pusha
cmp
addb
and
test
andb
inc
inc
pop
or
adcl
adc
adc
js
pop
iret
std
mov
fucomp
aad
sbb
ljmp
inc
loopne
xor
push
push
inc
in
xchg
mov
testl
popf
xor
mov
mov
popa
jmp
andb
inc
rclb
cmp
and
and
in
outsl
xor
loopne
jbe
js
pop
test
ljmp
and
rorl
addb
and
mov
or
pusha
and
adc
iret
jae
xchg
jecxz
xor
insl
and
inc
and
mov
mov
pop
ficoms
push
mov
xchg
outsl
add
mov
andb
inc
cmpsl
xchg
orb
into
scas
add
mov
sar
loopne
xchg
int3
rcrl
and
and
aad
cwtl
loop
mov
testb
cld
jmp
xchg
testl
pusha
fstpt
aad
sahf
filds
mov
lock
fsubp
jle
and
in
mov
aam
and
mov
inc
pop
in
or
rorb
jecxz
mov
shlb
loopne
icebp
cmc
pushf
mov
ret
inc
rorb
loop
and
adc
data16
xor
popa
lahf
mov
loope
mov
stos
or
mov
loopne
out
dec
pop
cli
xchg
stc
iret
aam
jge
adc
pop
xchg
orb
cmp
ja
sahf
xor
adc
fbstp
mov
int3
js
rorb
sahf
call
or
mov
pop
pop
popa
dec
pop
push
inc
inc
inc
xor
mov
nop
cld
jae
add
inc
push
mov
pause
push
mov
leave
nop
jmp
iret
mov
xcrypt-ecb
cmpsl
lea
push
mov
xchg
ret
cwtl
mov
mov
add
lea
clc
repnz
nop
cld
jae
add
add
imul
cld
jae
add
imul
sbb
sbb
fwait
clc
repnz
nop
cld
jae
mov
sbb
lods
sahf
sbb
call
leave
nop
jmp
jb
add
add
lds
add
repnz
nop
cld
jae
mov
sub
fcoml
les
mov
xchg
ret
adc
sub
int
pop
jae
push
mov
leave
nop
jmp
add
clc
repnz
nop
cld
jae
add
add
or
out
push
or
mov
push
mov
xchg
ret
dec
jnp
or
push
clc
repnz
nop
cld
jae
add
out
add
push
clc
repnz
nop
cld
jae
add
add
add
add
jl
sub
push
mov
xchg
ret
test
add
jae
sub
fistpl
clc
repnz
nop
cld
jae
add
sub
invd
shl
aad
inc
push
mov
xchg
ret
scas
add
jb
mov
cwtl
xor
nop
cld
jae
add
sub
fcompl
add
ret
push
mov
xchg
ret
add
mov
add
rclb
and
clc
repnz
nop
cld
jae
jae
add
pop
add
clc
repnz
nop
cld
jae
iret
dec
mov
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
mov
fistpl
les
nop
cld
jae
out
pushf
add
sbb
add
clc
repnz
nop
cld
jae
add
pop
add
shlb
push
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
scas
add
xor
mov
sbb
mov
xchg
ret
sbb
mov
call
add
clc
repnz
nop
cld
jae
add
sub
push
mov
leave
nop
jmp
push
push
jb
add
clc
repnz
nop
cld
jae
adc
dec
mov
dec
ss
add
clc
repnz
nop
cld
jae
in
rolb
fstpt
clc
repnz
nop
cld
jae
add
jnp
add
add
mov
leave
nop
jmp
test
out
jb
mov
mov
and
push
mov
dec
mov
add
popa
add
add
add
adc
add
adc
repnz
nop
cld
jae
add
push
add
or
clc
repnz
nop
cld
jae
add
pop
add
loope
mov
clc
repnz
nop
cld
jae
mov
push
add
repnz
nop
cld
jae
add
add
mov
test
xchg
add
clc
repnz
nop
cld
jae
mov
mov
call
clc
repnz
nop
cld
jae
push
call
nop
push
mov
leave
nop
jmp
add
or
stos
pusha
and
pop
push
mov
xchg
ret
in
add
rolb
add
add
hlt
mov
test
cmp
ret
add
add
mov
and
clc
repnz
nop
cld
jae
xchg
mov
cwtl
dec
dec
jno
test
adc
add
nop
jmp
mov
shr
clc
repnz
nop
cld
jae
imul
jp
loope
popa
pop
nop
push
mov
leave
nop
jmp
lds
add
sub
and
add
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
call
adc
repnz
nop
cld
jae
push
jnp
add
iret
add
rep
clc
repnz
nop
cld
jae
mov
add
mov
add
add
clc
repnz
nop
cld
jae
mov
jnp
mov
clc
repnz
nop
cld
jae
add
dec
adc
xor
clc
repnz
nop
cld
jae
call
jns
shrl
repnz
nop
cld
jae
mov
add
out
add
sbb
clc
repnz
nop
cld
jae
sbb
call
mov
push
mov
xchg
ret
add
pop
add
rep
push
mov
xchg
ret
add
add
mov
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
mov
mov
fistpl
clc
repnz
nop
cld
jae
faddl
add
jmp
dec
sub
fstps
add
mov
push
or
les
repnz
nop
cld
jae
rolb
mov
add
cmp
nop
push
mov
leave
nop
jmp
test
add
mov
push
clc
repnz
nop
cld
jae
out
sbb
add
clc
repnz
nop
cld
jae
dec
add
add
cmp
nop
nop
cld
jae
sbb
sbb
mov
clc
repnz
nop
cld
jae
out
add
sbb
add
add
nop
push
mov
leave
nop
jmp
add
or
or
pop
cmp
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
call
pop
clc
repnz
nop
cld
jae
xor
add
dec
mov
add
add
xor
inc
add
fdivrl
add
rcrb
repnz
nop
cld
jae
sbb
fistl
add
or
add
repnz
nop
cld
jae
add
add
mov
adc
insl
inc
add
in
add
add
add
mov
repnz
nop
cld
jae
add
faddl
add
mov
clc
repnz
nop
cld
jae
add
add
xchg
pop
push
clc
repnz
nop
cld
jae
jp
add
adc
add
mov
call
pop
add
clc
repnz
nop
cld
jae
add
sbb
sbb
popf
cld
push
mov
xchg
ret
mov
pop
add
out
add
nop
push
mov
leave
nop
jmp
or
add
stc
push
clc
repnz
nop
cld
jae
add
rorl
jg
nop
push
mov
leave
nop
jmp
xchg
jnp
push
or
shlb
mov
mov
pop
clc
repnz
nop
cld
jae
add
shlb
add
add
push
push
mov
xchg
ret
add
lea
add
enter
in
leave
nop
jmp
add
add
jb
add
pop
fistpl
clc
repnz
nop
cld
jae
add
xchg
add
add
loopne
std
jne
clc
repnz
nop
cld
jae
cmp
and
clc
repnz
nop
cld
jae
add
lea
add
or
nop
nop
cld
jae
add
or
out
lods
push
push
push
mov
xchg
ret
mov
jb
add
xor
add
repnz
nop
cld
jae
add
inc
and
mov
xchg
ret
mov
add
add
add
call
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
lds
ss
add
clc
repnz
nop
cld
jae
add
add
out
add
clc
repnz
nop
cld
jae
add
add
mov
add
push
clc
repnz
nop
cld
jae
sbb
add
push
sbb
sub
mov
clc
repnz
nop
cld
jae
add
scas
add
adc
repnz
nop
cld
jae
add
mov
rolb
cmpl
mov
leave
nop
jmp
lea
pop
clc
repnz
nop
cld
jae
add
rolb
fiaddl
cmp
cld
jae
rolb
push
test
add
test
shlb
jne
clc
repnz
nop
cld
jae
add
outsb
out
shl
clc
repnz
nop
cld
jae
mov
add
mov
popf
incl
pop
push
add
add
scas
add
add
xor
outsb
loopne
andb
mov
clc
repnz
nop
cld
jae
loope
push
add
add
add
push
mov
leave
nop
jmp
add
pushf
out
xchg
add
nop
push
mov
leave
nop
jmp
add
sub
scas
or
shr
push
mov
xchg
ret
fiaddl
add
add
add
and
push
mov
xchg
ret
add
ss
dec
add
fwait
pusha
nop
push
mov
leave
nop
jmp
jb
add
dec
out
add
clc
repnz
nop
cld
jae
add
rclb
add
nop
nop
cld
jae
add
jnp
fucomi
mov
push
nop
push
mov
leave
nop
jmp
add
push
mov
nop
nop
cld
jae
lds
lea
add
push
out
clc
repnz
nop
cld
jae
scas
jnp
out
call
fld1
push
mov
xchg
ret
pop
mov
add
clc
repnz
nop
cld
jae
call
add
push
add
xchg
mov
add
clc
repnz
nop
cld
jae
jnp
add
clc
repnz
nop
cld
jae
push
in
dec
call
or
mov
xchg
ret
jb
push
sbb
push
add
loopne
push
clc
sbb
xchg
xchg
ret
add
add
fildl
push
mov
mov
add
repnz
nop
cld
jae
sbb
add
lea
fistl
jl
inc
add
mov
add
and
jns
add
pushf
fildl
add
mov
jae
cwtl
pop
mov
xlat
jns
add
sbb
ss
loope
imul
mov
leave
nop
jmp
add
add
push
jnp
push
mov
xchg
ret
add
add
mov
mov
fistpl
push
mov
xchg
ret
add
push
call
clc
repnz
nop
cld
jae
add
imul
mov
nop
push
mov
leave
nop
jmp
add
sub
add
clc
repnz
nop
cld
jae
or
add
mov
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
sbb
push
out
mov
clc
repnz
nop
cld
jae
sbb
sbb
add
aaa
pop
nop
push
mov
leave
nop
jmp
add
loope
add
add
movsb
shlb
sbbb
push
mov
xchg
ret
mov
add
imul
inc
add
add
xchg
mov
inc
and
clc
repnz
nop
cld
jae
test
inc
rolb
xlat
push
mov
add
sub
add
fidivrs
mov
cmp
or
mov
clc
repnz
nop
cld
jae
mov
fimull
movzwl
clc
repnz
nop
cld
jae
mov
inc
lea
cld
or
in
leave
nop
jmp
add
pop
mov
mov
add
clc
repnz
nop
cld
jae
add
cli
jle
mov
clc
repnz
nop
cld
jae
add
shlb
sarb
inc
adcb
mov
leave
nop
jmp
fimull
add
in
xor
add
add
add
add
mov
xchg
add
push
and
loop
push
mov
xchg
ret
add
add
addb
push
nop
push
mov
leave
nop
jmp
add
add
filds
nop
nop
cld
jae
add
xchg
pop
push
mov
xchg
ret
mov
add
sbb
add
add
clc
repnz
nop
cld
jae
les
imul
cmp
pop
push
mov
xchg
ret
lods
add
in
cwtl
add
repnz
nop
cld
jae
add
cmp
add
add
push
popa
nop
push
mov
leave
nop
jmp
sbb
add
rcrl
inc
add
mov
add
add
roll
push
mov
leave
nop
jmp
push
test
push
clc
repnz
nop
cld
jae
iret
lods
add
mov
mov
clc
repnz
nop
cld
jae
add
or
fucomi
data16
add
add
mov
add
add
jnp
lcall
push
mov
xchg
ret
push
add
lea
add
call
lods
and
sbb
mov
xchg
ret
add
push
rorb
mov
add
clc
repnz
nop
cld
jae
add
add
shl
or
sbb
add
add
add
push
mov
xchg
ret
cwtl
jnp
fimull
and
and
push
push
mov
xchg
ret
add
cwtl
sbb
dec
add
or
add
imul
mov
add
or
xchg
mov
clc
repnz
nop
cld
jae
jnp
fidivl
jo
nop
push
mov
leave
nop
jmp
imul
xchg
sbb
testl
call
nop
jmp
add
inc
fld1
clc
repnz
nop
cld
jae
jnp
add
add
add
and
sar
repnz
nop
cld
jae
sbb
out
add
add
nop
je
push
nop
push
mov
leave
nop
jmp
push
cmp
add
add
test
nop
cld
jae
jp
rorb
jnp
arpl
mov
xchg
ret
add
add
iret
push
rolb
addb
movswl
clc
repnz
nop
cld
jae
jp
iret
sbb
clc
repnz
nop
cld
jae
mov
add
add
data16
mov
clc
repnz
nop
cld
jae
test
push
add
repnz
nop
cld
jae
add
add
sub
mov
add
repnz
nop
cld
jae
add
scas
rolb
adc
add
push
mov
xchg
ret
push
lds
add
inc
or
repnz
nop
cld
jae
lds
add
add
fwait
add
clc
repnz
nop
cld
jae
mov
movlps
mov
leave
nop
jmp
add
add
out
inc
or
mov
xchg
ret
fildl
add
add
mov
loopne
pop
not
clc
repnz
nop
cld
jae
add
mov
es
nop
push
mov
leave
nop
jmp
add
pushf
lds
push
call
nop
push
mov
leave
nop
jmp
add
mov
add
add
mov
nop
push
mov
leave
nop
jmp
add
iret
mov
ret
scas
addb
pushl
clc
repnz
nop
cld
jae
add
mov
add
xor
add
nop
push
mov
leave
nop
jmp
add
or
cmp
repnz
nop
cld
jae
dec
call
fisubs
clc
repnz
nop
cld
jae
jb
str
fiaddl
jae
icebp
fld1
push
mov
xchg
ret
add
add
and
in
leave
nop
jmp
lds
test
and
mov
xchg
ret
add
add
sbb
cmpsl
mov
clc
repnz
nop
cld
jae
add
sbb
add
xchg
imul
nop
push
mov
leave
nop
jmp
dec
add
mov
add
cmp
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
jp
jnp
xchg
push
jp
and
and
xor
mov
clc
repnz
nop
cld
jae
xchg
add
add
imul
xchg
add
nop
push
mov
leave
nop
jmp
xchg
adc
mov
rcrl
repnz
nop
cld
jae
fsubrl
add
addb
int3
mov
clc
repnz
nop
cld
jae
add
lds
add
mov
xchg
ret
sub
pushf
add
jne
movb
mov
xchg
ret
add
add
mov
sbb
xchg
hlt
popa
jmp
add
jb
cwtl
add
add
inc
or
mov
clc
repnz
nop
cld
jae
test
add
pop
xchg
sbb
add
add
sub
inc
push
adc
nop
push
mov
leave
nop
jmp
call
movsl
push
clc
repnz
nop
cld
jae
xor
add
test
loopne
dec
nop
push
mov
leave
nop
jmp
mov
add
add
mov
inc
int3
cld
sub
pusha
pop
lods
clc
repnz
nop
cld
jae
add
add
ss
inc
add
pop
or
mov
push
mov
xchg
ret
cwtl
cwtl
add
les
push
fmuls
arpl
nop
push
mov
leave
nop
jmp
jae
add
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
or
fildl
add
out
clc
clc
repnz
nop
cld
jae
add
mov
loope
adc
pop
inc
add
add
add
pop
and
pusha
fs
pusha
push
mov
xchg
ret
add
add
and
repnz
nop
cld
jae
adc
add
add
add
push
xor
add
add
add
pop
xor
pop
shr
clc
repnz
nop
cld
jae
add
ljmp
xor
and
scas
les
add
add
xor
push
incl
loope
add
test
add
add
in
scas
aas
and
push
mov
xchg
ret
add
imul
add
push
jge
add
call
add
ret
clc
repnz
nop
cld
jae
add
sbb
push
loopne
pop
push
clc
repnz
nop
cld
jae
cwtl
add
iret
imul
clc
repnz
nop
cld
jae
push
cwtl
push
add
push
pop
mov
clc
repnz
nop
cld
jae
pushf
imul
add
mov
cmp
ret
imul
imul
ss
lds
mov
clc
repnz
nop
cld
jae
out
pop
dec
mov
mov
xchg
ret
add
xor
sahf
adc
mov
xchg
ret
cmp
add
out
or
mov
xchg
ret
add
fiaddl
add
sbb
mov
push
push
mov
xchg
ret
mov
add
add
add
add
clc
repnz
nop
cld
jae
faddl
lods
cmp
rcll
mov
leave
nop
jmp
mov
lods
add
pop
test
nop
push
mov
leave
nop
jmp
jae
mov
push
cmp
add
repnz
nop
cld
jae
add
rcll
repnz
nop
cld
jae
sbb
paddb
rep
clc
repnz
nop
cld
jae
add
push
push
pop
add
clc
repnz
nop
cld
jae
cwtl
jp
aaa
push
push
mov
xchg
ret
add
push
add
scas
jb
or
add
inc
test
xchg
ret
add
mov
push
aas
call
clc
repnz
nop
cld
jae
add
add
test
je
add
cwtl
add
add
subl
push
mov
xchg
ret
mov
imul
sti
pusha
push
mov
xchg
ret
rorb
sbb
add
and
push
or
repnz
nop
cld
jae
add
add
test
nop
nop
cld
jae
cmp
mov
add
add
push
mov
add
sbb
rcll
add
add
add
xor
clc
repnz
nop
cld
jae
pushf
imul
add
stc
lea
clc
repnz
nop
cld
jae
add
jnp
add
dec
pop
nop
push
mov
leave
nop
jmp
add
out
add
add
andl
nop
cld
jae
push
add
jge
nop
push
mov
leave
nop
jmp
cwtl
add
mov
xor
add
cmp
ret
loope
push
or
test
push
mov
xchg
ret
add
jnp
jae
scas
jb
pop
test
leave
nop
jmp
add
scas
scas
add
pop
add
mov
nop
push
mov
leave
nop
jmp
jae
push
add
mov
add
nop
push
mov
leave
nop
jmp
add
add
xchg
call
clc
repnz
nop
cld
jae
add
imul
loopne
aam
or
add
subl
push
dec
clc
repnz
nop
cld
jae
add
idiv
repnz
nop
cld
jae
add
mov
jae
inc
sub
nop
jmp
add
rolb
or
pop
push
mov
xchg
ret
add
add
cwtl
rolb
add
and
mov
clc
repnz
nop
cld
jae
add
jp
fs
mov
xchg
ret
add
fildl
add
cmp
add
mov
clc
repnz
nop
cld
jae
push
add
add
mov
clc
repnz
nop
cld
jae
add
in
rolb
rorb
add
add
clc
repnz
nop
cld
jae
add
push
or
nop
nop
cld
jae
push
test
add
nop
push
mov
leave
nop
jmp
sbb
push
mov
push
clc
repnz
nop
cld
jae
scas
add
pop
add
mov
xor
clc
repnz
nop
cld
jae
add
mov
add
cmpsb
and
sbb
add
addb
loopne
movsl
mov
clc
repnz
nop
cld
jae
jnp
add
add
push
push
mov
xchg
ret
jb
cmpl
nop
push
mov
leave
nop
jmp
add
sub
addb
cmp
ret
add
or
scas
add
mov
orl
add
clc
repnz
nop
cld
jae
mov
mov
push
push
add
nop
push
mov
leave
nop
jmp
in
add
mov
inc
push
mov
xchg
ret
fiaddl
fcmovu
fsubr
loope
pusha
lcall
mov
xchg
ret
loope
push
cmp
add
xchg
mov
pop
call
nop
jmp
add
ss
clc
repnz
nop
cld
jae
dec
dec
inc
push
cmp
lcall
cld
jae
add
scas
mov
add
lock
and
add
subl
push
mov
xchg
ret
cwtl
add
or
cwtl
push
xlat
pop
clc
repnz
nop
cld
jae
mov
mov
mov
push
push
mov
xchg
ret
add
imul
mov
push
mov
xchg
ret
add
add
loope
add
fwait
clc
repnz
nop
cld
jae
add
push
add
cmc
add
clc
repnz
nop
cld
jae
add
add
dec
adc
pop
pusha
inc
add
scas
sbb
mov
mov
movzwl
clc
repnz
nop
cld
jae
add
add
add
push
mov
leave
nop
jmp
fsubrl
jecxz
test
add
nop
cld
jae
pushf
add
jl
add
clc
repnz
nop
cld
jae
add
mov
push
call
nop
push
mov
leave
nop
jmp
sbb
add
sub
clc
repnz
nop
cld
jae
faddl
add
mov
sub
add
pop
mov
add
xor
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
adc
sbb
add
add
xchg
nop
nop
cld
jae
add
lods
dec
jnp
and
and
mov
push
mov
xchg
ret
xchg
add
dec
les
mov
xchg
call
clc
repnz
nop
cld
jae
add
sbb
push
mov
leave
nop
jmp
add
push
add
or
clc
repnz
nop
cld
jae
add
jp
inc
add
dec
in
sbb
mov
repnz
nop
cld
jae
faddl
push
add
add
xor
mov
clc
repnz
nop
cld
jae
mov
add
sbb
nop
cld
jae
add
add
lods
call
clc
repnz
nop
cld
jae
cwtl
scas
mov
mov
xchg
ret
add
imul
push
mov
repnz
nop
cld
jae
imul
sarb
add
dec
add
add
repnz
nop
cld
jae
fidivrl
add
mov
mov
clc
repnz
nop
cld
jae
or
gs
clc
repnz
nop
cld
jae
sbb
add
add
nop
push
mov
leave
nop
jmp
fdivrl
add
scas
push
lods
push
mov
xchg
ret
rol
mov
push
lea
push
mov
xchg
ret
add
dec
add
sbb
cwtl
push
pop
clc
repnz
nop
cld
jae
add
add
jmp
insb
inc
add
mov
out
add
sbb
mov
add
nop
push
mov
leave
nop
jmp
mov
shlb
hlt
sbb
mov
clc
repnz
nop
cld
jae
test
lea
sbb
add
test
push
mov
xchg
ret
add
rorb
rol
loopne
cmp
pop
clc
repnz
nop
cld
jae
add
sbb
mov
or
clc
repnz
nop
cld
jae
test
les
or
repz
mov
xchg
ret
push
add
add
add
cmp
mov
xchg
ret
add
add
shlb
aaa
not
push
mov
xchg
ret
adc
push
add
or
clc
repnz
nop
cld
jae
adc
xchg
add
mov
jns
add
nop
jmp
add
jp
adc
lods
push
mov
xchg
ret
test
add
mov
cmp
in
leave
nop
jmp
add
add
mov
mov
xchg
ret
lea
sbb
add
adc
add
mov
push
clc
repnz
nop
cld
jae
dec
imul
mov
shrb
inc
add
add
les
push
rcr
add
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
mov
mov
push
ss
push
xchg
lea
clc
repnz
nop
cld
jae
pop
loope
sbb
out
add
clc
repnz
nop
cld
jae
lds
repnz
nop
cld
jae
add
add
add
jnp
sahf
nop
jmp
test
push
mov
leave
nop
jmp
or
repnz
repnz
nop
cld
jae
add
scas
and
mov
push
add
nop
push
mov
leave
nop
jmp
test
mov
arpl
call
cld
jae
lea
mov
add
pop
push
mov
xchg
ret
add
mov
lss
add
fists
mov
xchg
ret
out
add
out
add
mov
clc
repnz
nop
cld
jae
push
adc
or
repnz
nop
cld
jae
add
jae
add
add
nop
push
mov
leave
nop
jmp
add
mov
je
clc
repnz
nop
cld
jae
xchg
rolb
push
clc
repnz
nop
cld
jae
scas
mov
add
lods
inc
or
das
mov
jmp
incl
out
iret
lods
add
push
add
mov
add
cwtl
cli
jne
jge
clc
repnz
nop
cld
jae
lods
add
iret
push
aad
inc
and
repnz
nop
cld
jae
add
loopne
mov
clc
repnz
nop
cld
jae
push
dec
add
imul
jae
add
jb
jb
add
jmp
xor
adcl
repnz
nop
cld
jae
jae
mov
clc
repnz
nop
cld
jae
lea
add
dec
sub
push
mov
leave
nop
jmp
mov
push
add
add
push
mov
xchg
ret
add
mov
outsb
mov
and
nop
cld
jae
sbb
test
add
add
xor
nop
cld
jae
push
add
faddl
push
add
mov
leave
nop
jmp
lea
xor
sbb
je
nop
push
mov
leave
nop
jmp
cmp
jnp
pusha
clc
repnz
nop
cld
jae
mov
add
add
push
mov
leave
nop
jmp
add
mov
add
add
loopne
push
mov
imull
stc
xchg
jae
sbb
push
aaa
stc
add
dec
imul
cld
jae
sbb
call
iret
mov
clc
repnz
nop
cld
jae
mov
xchg
dec
stc
popa
clc
repnz
nop
cld
jae
dec
jp
pushf
add
mov
clc
repnz
nop
cld
jae
jae
add
cwtl
in
ret
xor
push
mov
xchg
ret
add
inc
add
clc
repnz
nop
cld
jae
sbb
mov
xor
test
xor
clc
repnz
nop
cld
jae
add
verw
test
test
push
mov
xchg
ret
sbb
call
andb
nop
cld
jae
les
add
push
add
jmp
mov
add
rolb
jp
or
aad
push
mov
xchg
ret
mov
push
add
add
add
bnd
and
addb
ret
addb
cmp
ret
add
les
cmp
repnz
nop
cld
jae
add
cwtl
imul
push
mov
xchg
ret
mov
fmull
loopne
mov
clc
repnz
nop
cld
jae
push
add
mov
mov
leave
nop
jmp
lods
mov
dec
jl
and
pusha
and
pop
push
push
mov
xchg
ret
add
mov
adc
push
add
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
lds
xchg
push
mov
clc
repnz
nop
cld
jae
xchg
add
add
mov
push
mov
xchg
ret
mov
add
mov
and
mov
rcrb
shlb
subb
dec
cmc
clc
repnz
nop
cld
jae
cwtl
mov
mov
add
clc
repnz
nop
cld
jae
add
sldt
xchg
ret
nop
push
mov
leave
nop
jmp
in
sbb
add
push
add
int
rclb
insb
inc
add
add
xor
cmpw
nop
push
mov
leave
nop
jmp
add
add
mov
add
push
insl
inc
add
sbb
sbb
les
clc
repnz
nop
cld
jae
sbb
add
pop
push
mov
xchg
ret
sbb
add
add
add
mov
loopne
jmp
clc
repnz
nop
cld
jae
add
jb
xchg
enter
sub
pop
addl
add
add
loopne
mov
movzwl
clc
repnz
nop
cld
jae
add
mov
xchg
clc
repnz
nop
cld
jae
test
sbb
xchg
add
clc
repnz
nop
cld
jae
je
push
add
clc
repnz
nop
cld
jae
add
pop
add
ret
mov
clc
repnz
nop
cld
jae
add
scas
loopne
fiaddl
add
xor
shlb
xor
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
sbb
jae
repnz
nop
cld
jae
mov
call
clc
repnz
nop
cld
jae
inc
add
test
add
clc
repnz
nop
cld
jae
dec
add
repnz
nop
cld
jae
mov
add
add
test
adc
add
repnz
nop
cld
jae
pushf
test
adc
repnz
nop
cld
jae
dec
push
jae
cwtl
repnz
jmp
cwtl
add
add
or
clc
repnz
nop
cld
jae
mov
add
add
sbb
push
jmp
mov
jne
add
sub
dec
mov
fwait
add
sti
dec
add
repnz
nop
cld
jae
mov
sub
push
add
loopne
inc
add
push
add
xchg
mov
push
add
jmp
mov
jp
pushf
add
add
test
add
nop
nop
cld
jae
or
mov
add
push
mov
leave
nop
jmp
add
scas
pushf
add
inc
push
clc
repnz
nop
cld
jae
ltr
add
inc
clc
repnz
nop
cld
jae
in
mov
add
dec
push
pop
push
mov
xchg
ret
add
lea
add
lods
or
clc
repnz
nop
cld
jae
loope
mov
cwtl
mov
iret
and
loopne
clc
repnz
nop
cld
jae
adc
repnz
nop
cld
jae
mov
pop
ss
aas
push
push
mov
xchg
ret
sbb
xchg
call
dec
call
nop
push
mov
leave
nop
jmp
add
mov
jbe
je
clc
repnz
nop
cld
jae
fdivrl
pop
push
mov
xchg
ret
lea
add
clc
repnz
nop
cld
jae
add
add
inc
add
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
fadd
push
push
mov
xchg
ret
xor
add
fisttpll
mov
xchg
ret
add
call
add
cmp
push
mov
xchg
ret
add
imul
mov
xchg
roll
clc
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
add
scas
add
add
iret
push
andb
nop
push
mov
leave
nop
jmp
add
add
rolb
ret
clc
repnz
nop
cld
jae
add
push
add
mov
clc
clc
repnz
nop
cld
jae
add
add
jae
fcoml
push
mov
xchg
ret
add
mov
add
in
jg
push
mov
xchg
ret
xchg
call
sbb
add
repnz
nop
cld
jae
sbb
in
jb
mov
rcr
mov
test
add
nop
push
mov
leave
nop
jmp
cmp
mov
mov
test
clc
repnz
nop
cld
jae
add
mov
hlt
and
xchg
pop
add
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
add
mov
push
pop
jnp
neg
incl
add
sbb
cvtpi2ps
add
out
mov
pop
clc
repnz
nop
cld
jae
test
add
add
add
in
leave
nop
jmp
add
push
add
mov
xchg
ret
xchg
shrb
add
push
nop
push
mov
leave
nop
jmp
add
add
scas
add
push
mov
leave
nop
jmp
add
xor
add
push
mov
xchg
ret
test
add
sbb
push
add
and
cmp
in
dec
add
rolb
mov
mov
clc
repnz
nop
cld
jae
call
ss
jbe
push
mov
xchg
ret
sub
add
add
loope
dec
push
mov
xchg
ret
mov
nopl
nop
cld
jae
add
add
pop
cmp
clc
clc
repnz
nop
cld
jae
add
add
add
incl
mov
leave
nop
jmp
mov
pop
mov
shrb
nop
push
mov
leave
nop
jmp
add
add
add
add
xchg
mov
add
add
add
add
mov
xchg
lods
add
jb
imul
data16
clc
repnz
nop
cld
jae
lods
add
dec
dec
push
push
mov
xchg
ret
add
mov
add
or
clc
repnz
nop
cld
jae
cmp
out
cwtl
mov
nop
nop
cld
jae
push
add
add
mov
xchg
ret
out
xchg
jb
add
ljmp
addr16
add
add
rolb
add
call
nop
jmp
add
add
inc
push
mov
xchg
ret
dec
mov
iret
pushf
mov
add
decb
movzwl
clc
repnz
nop
cld
jae
add
push
faddl
cmc
sub
clc
repnz
nop
cld
jae
inc
add
push
decb
xor
dec
ss
clc
repnz
nop
cld
jae
add
or
inc
and
repnz
nop
cld
jae
test
add
and
jnp
add
add
push
xadd
test
nop
push
mov
leave
nop
jmp
jp
add
test
xor
insl
add
clc
repnz
nop
cld
jae
jb
xchg
sub
push
bound
loop
clc
repnz
nop
cld
jae
push
les
sbb
shr
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
mov
rol
shrb
stc
incl
jnp
lea
mov
cli
mov
nop
nop
cld
jae
add
dec
nop
nop
cld
jae
dec
sbb
add
nop
icebp
fistpl
nop
push
mov
leave
nop
jmp
jae
cwtl
loope
add
push
clc
repnz
nop
cld
jae
lds
lds
xchg
xor
clc
repnz
nop
cld
jae
add
xchg
pop
fs
or
repnz
nop
cld
jae
in
jb
add
clc
repnz
nop
cld
jae
bswap
add
add
mov
nop
cld
jae
lea
rolb
lea
call
sub
repnz
nop
cld
jae
sbb
add
push
mov
leave
nop
jmp
add
add
add
fisubs
leave
sub
repnz
nop
cld
jae
add
mov
pushl
nop
push
mov
leave
nop
jmp
ss
cmp
add
nop
push
mov
leave
nop
jmp
add
sbb
jb
lea
clc
repnz
nop
cld
jae
add
add
jp
add
loopne
mov
clc
repnz
nop
cld
jae
fiaddl
add
call
clc
repnz
nop
cld
jae
xchg
add
add
add
add
add
add
scas
sub
jl
add
pushf
test
add
add
clc
repnz
nop
cld
jae
in
add
mov
pause
push
mov
leave
nop
jmp
fildl
add
mov
pop
pop
clc
repnz
nop
cld
jae
add
add
popl
clc
repnz
nop
cld
jae
call
iret
inc
test
popa
add
clc
repnz
nop
cld
jae
add
and
add
sbb
repnz
nop
cld
jae
add
add
out
add
add
clc
repnz
nop
cld
jae
mov
cwtl
jp
add
popa
clc
repnz
nop
cld
jae
jp
xchg
cmp
les
hlt
data16
add
clc
repnz
nop
cld
jae
add
add
fisubrl
jae
add
add
fisttpl
add
xor
mov
clc
repnz
nop
cld
jae
add
add
add
mov
incl
nop
push
mov
leave
nop
jmp
add
add
dec
add
nop
push
mov
leave
nop
jmp
add
cmp
xor
mov
call
inc
add
add
add
lea
sbb
mov
clc
repnz
nop
cld
jae
add
call
jae
movsb
clc
repnz
nop
cld
jae
jp
jp
add
jp
sbb
sar
nop
nop
cld
jae
add
adc
add
mov
repnz
nop
cld
jae
add
add
add
daa
pop
clc
repnz
nop
cld
jae
cmp
mov
add
mov
xchg
ret
inc
add
add
add
lds
lret
fld1
clc
repnz
nop
cld
jae
dec
add
add
add
pop
nop
push
mov
leave
nop
jmp
add
scas
out
mov
jnp
lret
push
push
mov
xchg
ret
push
mov
mov
mov
adc
mov
nop
push
mov
leave
nop
jmp
fimull
add
mov
push
clc
repnz
nop
cld
jae
sbb
out
add
fld1
push
mov
xchg
ret
push
add
inc
add
push
mov
loopne
fistl
repnz
nop
cld
jae
add
push
add
add
xor
je
add
clc
repnz
nop
cld
jae
dec
add
add
push
mov
leave
nop
jmp
cwtl
sub
test
iret
enter
push
mov
xchg
ret
scas
push
mov
mov
pop
mov
clc
repnz
nop
cld
jae
xchg
mov
sbb
inc
mov
incl
dec
sbb
add
add
xchg
repnz
nop
cld
jae
add
lea
nop
push
mov
leave
nop
jmp
sbb
cmp
mov
or
repnz
nop
cld
jae
mov
push
dec
push
add
in
fmull
nop
cld
jae
add
inc
pushf
sbb
mov
xor
in
leave
nop
jmp
loope
pushf
sbb
cwtl
jnp
mov
mov
leave
nop
jmp
add
loope
add
dec
add
sbb
push
mov
xchg
ret
pushf
add
imul
js
fistpl
nop
push
mov
leave
nop
jmp
add
add
dec
negl
inc
add
add
mov
add
xor
nop
push
mov
leave
nop
jmp
jnp
add
add
add
inc
aas
mov
nop
push
mov
leave
nop
jmp
test
add
dec
outsl
mov
clc
repnz
nop
cld
jae
sbb
pop
add
mov
xchg
ret
add
mov
pushf
add
cli
lcall
push
mov
leave
nop
jmp
test
cmp
cs
clc
repnz
nop
cld
jae
dec
add
or
add
jmp
add
add
pop
add
add
add
cld
clc
repnz
nop
cld
jae
xchg
sub
xor
xor
clc
repnz
nop
cld
jae
jp
sbb
loopne
xchg
cmpl
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
add
inc
add
pop
clc
repnz
nop
cld
jae
imul
shrb
andb
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
xchg
add
xchg
push
nop
push
mov
leave
nop
jmp
add
mov
mov
lea
push
mov
xchg
ret
test
mov
repnz
nop
cld
jae
lods
add
add
add
clc
repnz
nop
cld
jae
xor
rcrb
fistpl
clc
repnz
nop
cld
jae
lds
add
add
leave
lea
nop
push
mov
leave
nop
jmp
mov
add
loopne
and
push
inc
jecxz
push
mov
leave
nop
jmp
out
jp
cmp
add
jg
push
mov
xchg
ret
add
push
add
add
add
lcall
cld
jae
add
cwtl
pop
add
fdivrl
inc
test
outsb
inc
add
add
xchg
mov
shlb
xlat
clc
repnz
nop
cld
jae
sbb
add
adc
inc
orl
nop
jmp
mov
add
add
add
and
clc
repnz
nop
cld
jae
add
push
xor
clc
repnz
nop
cld
jae
add
add
push
add
in
mov
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
test
pop
add
out
add
push
mov
leave
nop
jmp
call
push
lret
mov
clc
repnz
nop
cld
jae
push
xchg
clc
repnz
nop
cld
jae
add
rorl
nop
nop
cld
jae
ss
add
xchg
repnz
nop
cld
jae
fsubrl
cmp
add
lea
nop
cld
jae
cmp
jnp
scas
add
or
inc
mov
clc
repnz
nop
cld
jae
fildl
sbb
pusha
mov
add
clc
repnz
nop
cld
jae
cmp
add
aad
test
repnz
nop
cld
jae
pop
sub
mov
nop
push
mov
leave
nop
jmp
add
rolb
mov
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
loope
pop
add
in
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
rcrb
sbb
pop
rol
clc
repnz
nop
cld
jae
jae
mov
fidivs
mov
and
push
mov
leave
nop
jmp
in
rolb
call
in
pop
push
mov
xchg
ret
add
add
xchg
out
cwtl
pop
cmp
pop
xor
push
mov
xchg
ret
add
rolb
pop
add
dec
cmp
adc
repnz
nop
cld
jae
dec
add
add
add
add
jne
clc
repnz
nop
cld
jae
or
push
jmp
nop
nop
cld
jae
push
call
shlb
nop
nop
cld
jae
lea
fistpl
jae
mov
repnz
nop
cld
jae
call
mov
push
clc
repnz
nop
cld
jae
add
xor
add
pushf
xchg
popa
mov
clc
repnz
nop
cld
jae
add
add
ss
rolb
adc
repnz
nop
cld
jae
add
scas
rolb
fists
repnz
nop
cld
jae
push
cmp
pop
mov
leave
fld1
push
mov
xchg
ret
call
add
jbe
and
push
mov
xchg
ret
add
test
sbb
add
push
inc
add
nop
push
mov
leave
nop
jmp
lds
push
addb
or
clc
repnz
nop
cld
jae
add
push
sarb
inc
loopne
push
ror
clc
repnz
nop
cld
jae
shlb
xchg
cmc
and
clc
repnz
nop
cld
jae
add
xchg
lret
or
clc
repnz
nop
cld
jae
mov
mov
mov
nop
push
mov
leave
nop
jmp
dec
add
add
ss
jnp
aas
mov
clc
repnz
nop
cld
jae
out
test
in
add
stos
clc
repnz
nop
cld
jae
add
sbb
mov
clc
repnz
nop
cld
jae
sbb
cmp
sbb
pop
inc
add
sub
or
in
adc
pop
inc
add
cwtl
add
lods
mov
add
movsb
pusha
inc
sbb
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
add
add
out
iret
add
je
nop
push
mov
leave
nop
jmp
xchg
inc
mov
add
add
add
jp
push
jp
add
add
clc
repnz
nop
cld
jae
add
add
sbb
test
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
sbb
dec
add
add
add
nop
nop
cld
jae
add
add
add
add
imul
clc
repnz
nop
cld
jae
fildl
out
add
add
add
mov
xchg
ret
push
sbb
adc
pmaxsw
mov
sar
nop
nop
cld
jae
mov
add
add
nop
nop
cld
jae
add
sbb
add
sbb
clc
repnz
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
add
sub
test
clc
repnz
nop
cld
jae
cmp
add
mov
shl
push
mov
xchg
ret
mov
add
add
dec
jnp
add
clc
repnz
nop
cld
jae
add
dec
add
nop
nop
cld
jae
pop
add
add
mov
clc
repnz
nop
cld
jae
add
push
add
jnp
add
cmp
nop
push
mov
leave
nop
jmp
xchg
mov
add
adc
lret
nop
push
mov
leave
nop
jmp
add
sub
jp
call
mov
add
adc
pop
inc
test
add
data16
jle,pt
push
adc
test
subb
adc
add
inc
cmp
jns
push
push
pushf
add
addb
je
outsb
out
xor
pop
dec
out
fmuls
stos
and
jo
loopne
stos
xor
movsb
inc
andb
test
xorb
pop
popf
sti
push
pop
mov
nop
ja
lret
push
lock
mov
inc
inc
mov
sub
push
ds
dec
outsb
aaa
cli
enter
pusha
sbb
inc
mov
xchg
push
or
xor
faddl
xlat
insb
sub
aam
out
in
lahf
jle
sbb
fchs
dec
repnz
incl
pop
sub
add
cmp
pop
movsl
dec
in
hlt
adc
cltd
cmp
fmul
outsb
bnd
add
loopne
mov
dec
add
shlb
inc
loopne
jnp
jmp
frstor
lock
pop
adc
or
mov
pusha
add
dec
xor
add
dec
sub
pusha
adc
push
rcrl
std
mov
push
dec
fs
dec
das
stos
rol
sbb
addb
pop
mov
divl
pop
fnstcw
cwtl
pop
and
sbb
out
stc
push
dec
dec
or
mov
sub
shlb
cli
mov
dec
int3
lods
cmc
int3
int3
push
and
test
dec
xor
add
xor
cli
repnz
shlb
pushl
sbb
shl
mov
shlb
cmp
jmp
mov
lea
inc
pop
or
mov
loopne
and
jne
inc
sbb
clc
sbb
lods
pusha
addb
addb
insb
push
ret
jae
repz
in
push
in
les
frstor
orl
in
popl
loopne
sarl
popl
inc
mov
out
or
fs
cwtl
push
mov
inc
xor
and
sbbb
mov
jl
lock
in
xchg
rcll
push
andb
cmc
test
mov
imulb
addb
testb
fldl
mov
inc
fs
frstor
dec
repnz
repnz
mov
inc
mov
mov
dec
fincstp
mov
clc
inc
mov
jno
ret
push
or
sbbl
and
das
or
pusha
adc
and
insl
std
pop
scas
xchg
sub
aad
rclb
add
loopne
addl
add
rcll
movsb
add
insl
mov
mov
mov
mov
dec
jecxz
jns
fnstenv
pop
xchg
imul
sub
and
lahf
ja
jg
mov
enter
inc
pop
je
inc
add
push
mov
shlb
inc
fstpt
and
xor
push
mov
and
push
int3
fs
push
call
je
pop
pop
notl
mov
dec
test
idivl
dec
inc
lret
xchg
cmpsl
je
ret
andl
and
inc
and
cmp
mov
icebp
adc
fstps
fnstsw
andb
loopne,pn
enter
test
orl
mov
mov
mov
int
inc
dec
xchg
and
add
inc
sarb
mov
mov
inc
inc
imul
rep
gs
andb
adc
cwtl
rcr
hlt
sbb
mov
cmp
hlt
mov
inc
loopne
sub
in
cmp
mov
pusha
rorb
mov
and
fcmovne
mov
sbbb
mov
out
pop
outsb
cltd
sub
pusha
pusha
mov
jl
sub
mov
add
mov
sbb
lock
stc
adc
and
shlb
pusha
rcrb
push
mov
insb
mov
loopne
mov
lret
inc
add
mov
repnz
inc
pop
lods
inc
sbbb
scas
iret
sbb
lret
pop
fs
sti
out
addr16
test
inc
cltd
xor
cmp
sub
xchg
push
lret
push
insl
out
aad
and
dec
dec
popf
xchg
xlat
push
add
shl
mov
fcoms
mov
mov
and
jnp
mov
inc
loopne
pop
int
ja
outsb
mov
mov
mov
sub
rclb
mov
das
sbb
push
sarl
rol
mov
pop
jb
and
into
in
pop
clc
insl
cmp
mov
addb
mov
jns
pusha
jle
imul
and
movsl
js
or
sbb
out
xlat
add
adc
sub
lds
or
lret
jle
sub
and
rorl
addb
mov
ljmp
pop
and
cmp
mov
xor
ss
clc
sarb
sahf
testb
inc
add
loopne
and
adc
outsb
mov
call
and
addb
jecxz
xor
pop
pop
dec
dec
lcall
andb
in
icebp
call
or
shlb
insb
add
sahf
addb
jg
ja
loopne
ds
xor
nop
and
pusha
inc
sub
add
enter
rep
inc
leave
dec
sbb
xlat
sbb
rcrl
xor
imul
mov
and
add
cmpsb
loopne
jns
jmp
addb
iret
das
dec
les
xor
mov
loopne
mov
mov
cmpb
pusha
fstpl
out
daa
pop
cmpsb
shlb
sbb
les
pusha
add
imul
inc
mov
rolb
dec
jno
mov
xchg
loopne
and
repnz
cld
cs
add
rcl
add
rorb
mov
cmpsb
loopne
into
ret
loopne
mov
js
outsl
int3
adcl
mov
icebp
mov
pusha
add
loopne
sbb
mov
xor
das
add
or
cli
inc
aad
imul
call
inc
loopne
pusha
and
mov
pop
inc
adcl
sbb
fsub
loop
cmpsl
test
rclb
adc
fsubs
mov
cmp
jne
stc
cmc
loopne
and
loopne
pusha
bound
xchg
test
sbb
jle
or
addb
xchg
out
sbb
lods
add
popf
adc
repnz
inc
repz
inc
sbbl
sub
xchg
les
mov
add
inc
push
lcall
subl
inc
fisubrs
ss
outsb
jno
xor
nop
pop
sbb
jmp
ret
in
xor
pop
jns
mov
cmp
mov
loopne
mov
xor
dec
dec
add
sub
and
addb
mov
out
ret
jo
rolb
mov
mov
and
iret
js
xor
sbb
mov
das
adc
cmpsb
loopne
les
cmp
xchg
sub
pusha
cwtl
xor
addb
push
cwtl
inc
xchg
loopne
mov
popa
cmp
mov
add
ss
sub
and
add
dec
sbb
shr
sbb
mov
loopne
inc
mov
lea
andb
mov
lods
test
and
lcall
mov
and
xor
jp
pop
push
cmp
adc
ret
fisubrs
loopne
loopne
mov
or
and
push
pop
roll
js
mov
push
and
mov
rcll
cmp
push
andb
into
jmp
add
andb
in
scas
mov
mov
pop
push
stos
shl
inc
add
test
subb
orb
push
or
fwait
es
cltd
lret
mov
cs
mov
add
mov
dec
leave
cmp
cmc
push
cwtl
repz
and
shlb
and
inc
pop
dec
stos
and
repz
pusha
jnp
int3
lea
xor
push
int
cmpl
aas
dec
andb
repz
loopne
mov
push
mov
pusha
loopne
jo
paddusw
cmp
outsl
adc
mov
pusha
rolb
adc
mov
xor
mul
mov
lret
cmc
stc
mov
loope
outsl
pop
rcll
std
cmc
sub
ret
movsl
mov
and
adc
sarb
nop
fcmove
fsubl
mov
inc
cmpsl
in
push
mov
sbb
cmp
ror
test
and
inc
pop
das
lcall
mov
jmp
out
dec
pop
rcl
je
pop
popf
in
ja
add
loopne
addb
adc
stc
adc
popf
imul
inc
pushf
jle
add
adc
xor
inc
ljmp
jecxz
ret
mov
and
sarb
cltd
sbb
scas
and
mov
inc
jns
mov
xor
cmp
ds
cld
xchg
mov
and
loopne
fmuls
rorb
mov
cmp
and
inc
mov
pusha
add
mov
jecxz
dec
test
and
sub
cmp
jns
inc
and
mov
and
mov
adcl
shlb
ds
adc
add
mov
fsts
adc
aas
iret
cmpsb
rolb
and
mov
lahf
mov
mov
and
mov
xor
je
int3
cwtl
jecxz
cmc
mov
adcb
js
push
inc
inc
inc
or
lods
test
sbbb
or
mov
add
pop
push
fldcw
add
cmpb
addb
fldenv
rolb
mov
test
mov
out
dec
clc
int3
mov
loopne
pop
aaa
int
iret
test
pusha
add
and
sbb
pop
mov
jne
ja
mov
and
inc
push
push
movsb
add
inc
jecxz
jb
mov
mov
out
aas
xchg
push
and
cmp
dec
dec
in
adc
ljmp
lods
mov
inc
loopne,pn
sub
cmp
xor
lods
andb
xchg
and
and
or
push
out
jo
loop
xchg
cmpsb
loopne
jl
in
sbb
adc
inc
dec
call
or
dec
pop
sbbl
loopne
jecxz
push
and
pop
cmpsl
pop
or
sarb
jp
mov
mov
in
nop
sub
push
loope
div
std
mov
or
shlb
cli
outsl
add
ret
andb
cltd
pop
mov
inc
testb
fbstp
inc
pusha
jge
rolb
loopne
sbb
jne
enter
ds
pusha
mov
inc
ficoml
jne
mov
imul
sahf
test
xor
jecxz
and
lds
aas
ret
xchg
inc
mov
dec
pop
pop
adc
pop
addr16
add
add
inc
fcoms
int
pop
xchg
xchg
insl
jae
dec
int
push
std
cmp
loope
xchg
xchg
or
sarl
cmp
jp
rcll
shlb
add
mov
add
mov
sub
mov
jno
and
addb
sub
ret
inc
rcrb
into
pop
shll
mov
nopl
and
das
push
xchg
mov
mov
mov
and
and
jno
arpl
repz
mov
loopne
idivb
or
pusha
pop
les
push
and
cltd
sub
add
test
add
push
lret
fwait
xchg
pop
dec
popl
fidivl
jo
lock
push
add
lods
and
das
out
inc
and
out
loopne
dec
enter
sbb
out
pop
into
scas
add
mov
scas
data16
popa
int
int3
pop
mov
loopne,pn
mov
cmp
shlb
rcrb
mov
mov
jns
out
dec
jno
stos
xchg
movsl
fwait
jge
dec
call
jns
mov
pop
adc
sbb
mov
decl
addb
jp
pusha
inc
rcrl
addb
test
mov
mov
mov
inc
inc
sub
sub
and
and
xchg
repnz
mov
mov
or
adc
and
shlb
pusha
xorb
clc
pavgw
mov
jne
leave
mov
jmp
xchg
rorl
rol
lret
add
enter
sub
push
cs
insb
addr16
sti
xchg
push
out
mov
int
or
xchg
mov
data16
mov
adc
daa
mov
fmulp
aaa
adc
jle
inc
and
xchg
push
inc
add
pop
icebp
xor
xor
int3
and
imul
mov
add
stos
fstpl
pop
pop
mov
mov
mov
and
pusha
sub
and
shlb
movsl
iret
mov
inc
jae
scas
inc
mov
ret
push
or
rolb
jp
mov
inc
int3
xchg
push
mov
test
add
cmp
lret
mov
icebp
jecxz
repnz
andb
jb
outsb
pop
das
testl
inc
pusha
mov
sbb
jb
jnp
andb
pop
loop
mov
loopne
add
scas
cmp
sbb
shrl
cld
and
inc
mov
xchg
enter
cmp
add
scas
pop
pop
lea
rorb
loopne
bound
mov
addb
fwait
xor
push
cltd
xor
in
dec
mov
pop
int3
into
jns
mov
push
mov
pusha
es
adc
inc
loopne
pusha
inc
mul
fdivrs
jge
movsl
popf
xchg
imul
pusha
inc
dec
mov
xchg
mov
je
pop
jae
test
and
loopne
outsl
jmp
and
and
xchg
js
movsb
mov
xchg
adc
rcl
sti
mov
out
leave
pushl
pop
or
mov
pusha
dec
loop
testl
and
pop
mov
mov
mov
aas
ja,pt
ljmp
sub
lret
pusha
sub
andb
cmpsb
mov
loopne
fninit
push
aas
fstpl
mov
loopne
xchg
pusha
jmp
mov
sarl
inc
pusha
sub
and
cwtl
cs
loopne
mov
pusha
push
adc
mov
xlat
int
ds
mov
add
mov
fwait
cmp
cltd
adc
andb
outsb
out
popf
lahf
mov
add
mov
enter
rep
xchg
push
mov
int3
insl
inc
lret
jmp
inc
loopne
sar
sti
sbb
test
shlb
push
mov
inc
cmp
cmovs
in
sub
adc
pusha
add
sbb
lock
andb
out
ret
inc
ret
jne
lods
inc
loopne
test
add
and
mov
inc
shlb
cwtl
test
out
mov
addb
pop
mov
movaps
adc
push
inc
pusha
imul
out
mov
addb
fdivl
jne
movsl
gs
imul
jge
and
pop
inc
inc
sbb
leave
sbbl
inc
js
jno
fidivs
and
add
cld
jl
add
call
rorl
push
fsin
movsb
and
leave
lock
mov
pusha
and
daa
mov
xchg
das
push
inc
add
and
and
jle
inc
mov
jne
imul
jns
and
mov
mov
sar
test
add
rcll
mov
loopne
inc
mov
adc
mov
add
in
mov
mov
inc
stc
and
ljmp
repnz
inc
cmpsb
pusha
or
adc
mov
fldl
add
mov
out
std
into
cmc
inc
jle
pusha
loopne
aaa
lret
cmp
cmp
dec
cmpsb
add
scas
and
stos
mov
in
pop
rcll
cld
xor
hlt
outsb
cmpsb
mov
and
mov
push
cmp
pusha
add
dec
inc
xchg
mov
mov
add
das
mov
push
rcl
mov
ret
or
push
insb
test
and
mov
movsl
cs
adc
push
shlb
dec
ret
aam
sbb
jno
sub
and
ret
mov
lret
stos
add
jge
push
in
mov
sbb
inc
xor
in
ja
outsb
mov
inc
xlat
pop
outsl
inc
push
and
jbe
test
add
adcl
mov
int3
xor
rol
shl
inc
mov
les
pusha
push
scas
add
pusha
pusha
icebp
jge
aad
mov
jns
jle
and
sbb
nop
es
pusha
sub
loopne
faddl
loopne
stos
andb
nop
insl
mov
mov
and
movsl
xor
mov
testb
pop
push
aad
pop
push
push
inc
cli
xchg
push
in
push
mov
inc
rcrb
mov
subb
inc
pop
sbb
stc
psraw
fwait
sub
pusha
mov
mov
daa
rcr
cmp
inc
cmp
pop
pop
idivb
dec
jecxz
shrl
add
sub
jge
std
pop
pop
or
andb
pusha
push
inc
stos
cld
insb
nop
icebp
iret
or
mov
loopne
addb
stos
rolb
lds
stos
add
andb
dec
popf
or
mov
fstps
mov
xor
ss
push
mov
ljmp
xorb
jg
ss
in
lahf
inc
pusha
pop
aam
loop
mull
mov
insb
rclb
mov
pushf
jmp
daa
imul
or
xor
imul
xor
mov
pusha
and
mov
and
and
adc
addr16
nop
jmp
fdivl
mov
and
mov
sbb
sbb
add
shrb
pop
inc
jnp
or
gs
pushf
adc
fcmovu
or
sarb
jp
add
enter
test
idivl
mov
rolb
inc
pop
mov
pop
shlb
xchg
out
push
or
add
lods
pop
ljmp
xchg
and
mov
pusha
add
adc
jmp
loopne
stos
pusha
and
pusha
pusha
adc
inc
fisubrl
ret
rol
sbb
pusha
mov
xchg
pop
dec
xchg
cmp
in
jne
das
xor
lahf
jnp
das
mov
adc
int
fbld
sbb
mov
inc
inc
rcll
push
aaa
imul
lret
xchg
xchg
dec
in
push
outsb
jo
es
sub
int
mov
in
scas
add
xor
jne
repnz
out
je
loopne
je
into
inc
insb
jl
push
int
fwait
push
and
add
andb
pusha
and
xchg
sub
orl
jnp
add
rol
pminsw
jae
xor
cmp
sub
mov
push
push
outsb
mov
ficomps
and
xor
jnp
insl
pushf
mov
push
sub
out
add
jg
inc
movsl
jbe
mov
jge
pop
sub
cmp
pop
and
mov
cmp
les
int3
mov
jle
inc
pusha
divl
sbb
dec
and
and
stc
mov
popf
mov
mov
ret
xor
sub
sbb
nop
mov
push
popf
sub
add
stos
rolb
jb
mov
push
adc
mov
push
shlb
or
lret
ficoml
dec
xchg
add
sub
popa
adc
orb
cld
add
mov
inc
adc
ds
push
jmp
inc
push
inc
adc
push
pusha
and
scas
and
mov
andb
dec
sbb
sub
sbb
adc
ss
into
outsb
pushf
or
mov
push
popf
out
shll
push
add
jb
xor
int
fiadds
inc
inc
push
push
push
pusha
loopne
dec
jne
mov
out
cmp
mov
mull
cmp
and
jle
pop
or
test
js
cmp
sbb
rol
push
adc
sbb
aam
outsl
out
mov
sub
shrl
jmp
inc
xor
mov
inc
add
adc
or
dec
stc
mov
xorb
sbb
addb
js
add
out
int
and
pusha
jmp
int3
lret
push
rol
or
inc
scas
mov
inc
jecxz
outsb
cs
pusha
lea
mov
rolb
jge
pop
jp
jns
mov
xchg
mov
lods
out
cmp
cli
fdivl
pop
jb
jp
add
pushf
fcoml
mov
loope
dec
sarl
cmp
add
inc
lods
pop
xor
sbb
and
sarb
in
xchg
dec
jl
add
movsl
fwait
and
mov
pushl
hlt
fwait
test
enter
inc
pusha
fdivr
lret
andb
dec
fisubrs
pop
mov
loop
test
shlb
add
adc
lret
imul
rcr
cli
out
mov
punpcklbw
push
shl
int
iret
and
cltd
dec
jnp
stc
movl
xchg
jbe
or
pop
xlat
sbb
sbb
lods
push
rorl
les
mov
add
lret
xor
pop
jmp
mov
rolb
add
scas
in
lret
jne
in
mov
icebp
push
adc
jbe
pop
int3
xor
push
scas
and
add
pop
fwait
arpl
scas
pusha
subb
std
dec
lahf
and
mov
sti
mov
inc
imul
aad
out
sti
adc
sarl
xor
shll
sub
outsl
lea
add
and
mov
pop
in
cmp
shlb
dec
adc
icebp
cmc
lock
and
pusha
shrl
and
jge
shrb
loopne
cmp
and
ret
mov
gs
adc
mov
int3
scas
fwait
xor
loopne
inc
outsl
mov
or
loopne
testl
lods
andb
repnz
test
add
or
fyl2xp1
fcompl
pop
mov
mov
clc
data16
sub
loopne
loopne
sti
inc
mov
inc
fsubl
pop
jg
imul
mov
and
mov
maxps
xchg
mov
xchg
dec
test
dec
scas
inc
pusha
push
inc
xchg
pandn
lret
repnz
mov
dec
sub
loope
cld
shll
sbb
imul
insb
jns
loopne
aaa
sub
add
push
or
lds
cmpsb
add
adc
xchg
xor
cltd
mov
rorb
mov
pop
mov
cmp
rol
test
and
inc
pusha
adc
sub
inc
pop
cmp
mov
or
mov
stos
push
mov
mov
lea
cmp
movsb
andb
add
out
mov
rolb
jo
ret
popf
or
push
dec
or
fadds
mov
test
lock
push
mull
sbb
mov
inc
fildll
imul
insl
adc
and
push
loop
sbb
add
pusha
mov
pusha
loopne
aad
or
shlb
movsl
ret
and
dec
aas
add
rolb
mov
das
or
out
add
add
mov
insl
pop
daa
cmpsl
sub
mov
add
cvtps2pi
aas
add
lock
das
adc
adc
cmpsb
and
adc
leave
dec
sbb
fwait
pop
add
add
arpl
cwtl
push
std
loopne
inc
pushf
loop
popa
js
mov
popa
daa
in
shr
jl
sahf
xchg
loopne
pusha
rolb
inc
hlt
addr16
add
shrb
mov
jns
adc
lods
shlb
test
and
sbb
push
lahf
outsb
out
dec
and
add
jb
xchg
sub
cmpsb
pusha
rol
dec
mov
test
add
insb
sbb
pop
stos
loopne
and
std
das
jle
mov
adc
scas
loopne
outsl
mov
pusha
movsb
pusha
add
add
sub
mov
xchg
mov
xchg
add
stc
lds
add
loopne
pop
pop
out
sbb
mov
cmp
pop
in
shlb
sub
and
cwtl
movsb
loopne
rol
inc
sub
jns
pusha
loopne
adc
fidivs
shlb
and
and
daa
test
repz
gs
mov
cmc
mov
adc
pop
add
cmpsl
cld
sub
shlb
xorb
sbb
rorb
std
and
shl
sarl
sub
add
mov
or
icebp
jmp
mov
inc
xchg
or
int3
jmp
sub
sbb
xor
xchg
out
adc
push
lods
mov
push
sbb
sbb
out
rorb
mov
and
fwait
sbb
cmp
lods
ficompl
addb
shl
mov
cmc
out
pop
add
push
mov
add
addb
pusha
push
mov
and
int
sub
mov
push
andl
roll
xor
shlb
addb
and
insb
push
xor
cltd
fmul
push
add
inc
xor
cwtl
mov
sub
mov
mov
push
xchg
into
cmpsb
inc
and
js
mov
dec
jb
stos
addb
jno
fs
mov
fsubl
xor
mov
and
cmp
pop
push
push
ret
mov
xchg
jo
push
fwait
push
scas
and
pop
push
stos
pusha
loopne
nop
pop
push
xchg
cmpsb
pusha
and
aas
and
and
loopne
mov
psubsb
sahf
enter
cmp
pop
add
add
lds
mov
push
test
pusha
andb
jecxz
xchg
hlt
insl
pop
stos
xchg
sbb
stos
shlb
inc
and
inc
testw
add
sbb
rolb
addb
add
push
rol
or
pop
mov
scas
pusha
addb
cmp
mov
or
inc
dec
push
fldenv
add
xor
ja
fwait
cmp
xchg
push
fwait
adc
orb
loopne
pusha
cmpb
loopne
loopne
mov
icebp
and
pop
dec
in
mov
mov
inc
loope
jno
cwtl
push
adc
xor
push
pop
test
je
outsb
repnz
xchg
push
loop
mov
add
mov
mov
mov
arpl
sub
and
mov
sbb
and
jmp
aad
jmp
jbe
adc
sbb
sub
and
cmp
sbb
js
adc
lret
mov
push
shlb
adc
xchg
arpl
jg
stos
inc
inc
inc
mov
imul
add
add
add
push
add
stos
mov
inc
mov
aas
leave
out
sbb
push
or
fmulp
push
jno
outsl
shrb
loopne
mov
mov
add
add
popf
mull
pusha
pusha
dec
and
loopne
scas
pusha
pusha
inc
test
xchg
and
inc
cs
and
or
shrb
xorl
loopne
nop
fwait
pop
cli
mov
pop
sbb
sub
mov
sub
aam
inc
loopne
sar
ficomps
mov
or
cmp
jbe
and
inc
out
xchg
mov
and
and
and
xchg
jp
dec
xchg
rcll
jb
cmp
imul
mov
dec
mov
cmp
js
and
sbb
mov
sub
push
daa
addb
inc
adc
stos
mov
divl
clc
xchg
xchg
dec
std
and
jno
and
loopne
out
jmp
sar
lods
and
sub
shl
mov
mov
andl
loopne,pn
ja
shlb
and
and
lret
push
addb
jl
fucomi
cmp
and
aaa
xchg
pop
sbb
sbb
jge
jle
cli
fwait
enter
fadd
pop
out
fsts
pushf
cmc
scas
add
push
dec
arpl
pusha
pusha
insb
imul
add
pusha
mov
addb
sub
dec
cwtl
fisubrs
ljmp
andb
inc
inc
cmp
fadds
dec
add
repnz
mov
xchg
xlat
repz
cmpb
outsb
add
pop
pop
jl
sub
scas
pusha
rcrb
and
xor
mov
pop
xor
fsubrs
mov
rcrb
jecxz
test
adc
gs
pop
and
scas
pop
mov
pop
inc
data16
mov
inc
mov
nop
subl
jo
lea
xor
andb
and
sarl
shrb
and
cli
cld
dec
enter
sub
adcb
jae
push
pushf
jo
mov
mov
mov
xchg
arpl
jmp
sub
pusha
mov
imul
enter
fs
push
loopne
and
inc
sbb
inc
hlt
or
lret
andb
and
out
div
pop
mov
adc
and
inc
sub
sarb
mov
cmp
xchg
or
and
jno
jecxz
loopne
dec
xor
test
adc
mov
xchg
push
inc
ficomps
push
mov
mov
mov
pop
sub
and
sbb
adc
inc
jl
pusha
shrb
and
and
inc
nop
scas
sahf
lret
push
pop
repz
push
sahf
jl
adc
loopne
out
add
inc
pop
outsl
sub
adc
push
imul
mov
add
push
and
and
fcoml
add
and
lods
loope
loope
add
adc
cmpsb
inc
loopne
pop
xchg
or
sbb
push
shlb
jno
jae
mov
adcb
addb
outsb
or
loopne
inc
loopne
in
lcall
mov
and
andb
inc
xor
lods
loopne
pop
push
inc
xchg
lcall
loopne
dec
push
scas
js
mov
jp
ret
jne
sarb
push
adc
shlb
mov
je
in
jb
mov
pop
int3
pop
or
cmpb
stc
mull
idiv
les
inc
mov
in
mov
int
sbb
jmp
mov
movsl
xor
and
loop
dec
xchg
cmp
cmc
mov
dec
icebp
fcoms
andb
stos
jae
push
xchg
cmp
mov
inc
mov
icebp
jp
imul
andb
loopne
enter
inc
add
mov
inc
push
lods
rolb
dec
inc
stc
pop
jl
mov
loopne
sub
movsb
mov
loopne,pn
push
sub
mov
push
bound
pop
pop
xchg
inc
mov
loopne
sbb
andb
outsl
xchg
outsl
cmp
sub
or
ss
jae
out
gs
fdivs
sbb
cs
inc
cmpsl
xor
insl
mov
inc
sub
dec
jnp
addr16
push
adc
mov
inc
and
cmp
pusha
mov
in
out
daa
add
loopne
fscale
xor
mov
push
xchg
nop
shlb
adc
int3
leave
inc
xchg
repz
dec
pop
mov
xor
push
ss
mov
shll
dec
sti
dec
pop
mov
adcb
fmull
popa
mov
mov
pop
sarl
push
andb
leave
mov
or
and
cltd
cmp
mov
jge
std
xchg
ret
mov
and
inc
pop
testb
scas
add
or
xchg
rcr
jno
out
mov
repz
pushf
lret
adc
cli
inc
stos
lea
xor
xchg
sub
mov
addb
je
jb
clc
push
adc
xorl
pop
jne
and
lods
add
mov
pusha
repz
sub
add
dec
inc
jnp
pop
inc
cs
add
scas
addb
test
add
or
sbb
mov
shl
rolb
pop
repz
shlb
dec
scas
enter
mov
cld
daa
aam
mov
xchg
fisubl
xchg
fcoms
adc
rcrb
insb
xor
and
shrb
mov
repz
adc
adc
push
mov
jg
addl
arpl
push
adc
mov
inc
mov
addb
push
fwait
fwait
pusha
ss
inc
inc
ljmp
dec
test
adc
and
sub
mov
loopne
psubusb
addr16
inc
cmc
jmp
andb
sbb
lcall
inc
adc
fsubs
mov
loopne
adc
lret
into
mov
adc
insb
sub
push
mov
inc
shlb
push
lret
inc
add
bound
aas
jp
aam
sti
dec
pop
push
add
ljmp
ljmp
jb
addb
test
add
pusha
mov
add
loopne
mov
jae
pop
adc
mov
loop
and
add
mov
mov
cld
roll
or
js
mov
out
aaa
mov
loopne
and
inc
xor
inc
mov
loopne
jo
rol
ds
scas
shlb
insb
testb
orb
arpl
lahf
xchg
loopne
scas
add
repnz
decl
inc
loopne
push
mov
movsl
xchg
and
inc
pop
test
cmp
xchg
push
xchg
inc
mov
shrb
xor
inc
jnp
xchg
addb
adc
loope
fdivl
ficoml
add
push
mov
xchg
inc
mov
fdivrl
cmp
inc
loopne
adc
and
scas
push
andb
into
andb
add
mov
mov
add
lds
inc
push
and
cli
xchg
in
sbb
jb
xor
add
mov
dec
aam
insb
and
in
outsb
outsl
jmp
xchg
sahf
xchg
lret
mov
outsb
pop
cld
xlat
jb
andb
adc
repnz
aas
inc
shrl
pusha
jg
dec
aam
push
daa
stos
mov
mov
and
rolb
repnz
sub
push
aas
loopne
xchg
cmc
and
mov
inc
sbb
mov
inc
dec
push
repnz
and
pop
cmc
cmp
pusha
jne
inc
jno
and
clc
pop
pop
sti
icebp
xchg
retw
pop
mov
orb
shlb
pusha
mov
sub
mov
dec
mov
jecxz
aaa
push
sahf
pop
es
aam
dec
dec
sub
fld
push
mov
inc
add
pop
js
inc
add
inc
andb
jno
jns
xchg
lods
lock
pop
js
dec
loop
push
mov
add
jae
inc
add
stos
xor
jmp
and
loopne
das
cmp
jl
shlb
popa
pop
test
and
mov
jno
sub
fbstp
ret
cmp
mov
insl
shrb
push
scas
mov
loopne
movsb
add
outsl
sub
and
inc
pop
or
jge
loopne
lahf
and
xor
xchg
jecxz
xchg
loop
daa
adc
cs
add
push
dec
out
ja
andb
sarl
arpl
adcl
ljmp
int3
or
insl
jmp
cmc
popa
ret
mov
jo
fnstcw
mov
loopne
pop
mov
push
jb
cmp
xor
mov
mov
inc
add
cmp
add
pop
push
je
add
sbb
push
in
sub
out
mov
lock
jg
ds
fstps
and
pusha
scas
shlb
rolb
addb
loopne
inc
out
popl
or
mov
and
test
inc
pop
mov
mov
add
out
sub
loopne
scas
sets
mov
clc
and
inc
ljmp
jbe
dec
clc
dec
mov
int3
push
mov
jns
xchg
dec
cmc
pushf
sbb
mov
scas
and
pop
jns
jmp
mov
fwait
xchg
dec
cld
scas
xor
ljmp
adc
push
dec
pop
pop
push
adc
xchg
push
scas
add
cmp
loopne
outsb
sub
mov
test
xor
cmpl
add
sub
and
push
mov
loopne
sahf
xchg
or
mov
imul
mov
filds
mov
loopne
push
dec
mov
adcb
add
jno
add
sbb
pop
mov
pop
and
mov
pusha
pusha
adc
mov
xor
and
xlat
add
sub
cmc
dec
mov
andb
sti
sti
sahf
cmp
ja
pop
dec
sub
rolb
fnstcw
add
andl
add
mov
xor
aas
xor
push
or
pop
bound
cmp
inc
add
adc
jae
ss
arpl
lock
sti
std
fdivr
and
sbb
pop
int
push
out
push
mov
jbe
cmp
mov
sbb
int
lea
and
orb
pusha
inc
popa
xchg
pop
test
cmpb
popa
leave
jecxz
fstps
sbb
hlt
stos
pusha
and
sbb
in
and
mov
mov
clc
jp
jmp
popa
in
push
test
cltd
cmp
insb
les
shrl
gs
inc
rolb
or
ret
dec
cwtl
stos
shlb
xchg
hlt
icebp
nop
pop
loop
fistl
mov
int
mov
and
add
loop
mov
pusha
jecxz
sbb
push
xchg
sub
loopne
pop
and
or
inc
arpl
fs
add
stc
icebp
and
inc
outsl
les
movsl
dec
and
pop
enter
and
sub
ror
aad
xchg
fbstp
scas
pusha
and
adc
sbb
push
xlat
leave
mov
pop
mov
add
and
and
push
jb
inc
loopne
out
lret
push
scas
test
ficoms
mov
aam
movsl
push
fcoml
lcall
sub
addb
jne
stos
icebp
bound
mov
outsl
push
mov
jge
mov
fbstp
addb
pop
movsl
mov
clc
adc
call
stos
and
popl
mov
mov
mov
shrl
notl
in
dec
out
sahf
arpl
pop
sbb
mov
loopne
arpl
movsl
or
insb
fdivs
mov
test
pusha
dec
insb
test
rclb
push
call
dec
and
loopne
push
jle
jno
mov
push
mov
cmp
lds
or
add
test
subb
xchg
into
cmpsb
loopne
mov
cmp
inc
push
out
jnp
sbb
pop
mov
or
inc
mov
pushf
xor
fs
out
pop
lock
ret
stos
pusha
pusha
stc
stc
inc
arpl
loopne
lds
mov
stc
mov
fimull
xchg
cltd
ds
and
and
mov
das
leave
push
add
inc
scas
loopne
mov
jno
cmpsb
inc
adcb
jg
cltd
and
popa
mov
jle
pop
xor
lret
xor
dec
and
inc
jne
pusha
mov
int3
xchg
mov
mov
aad
jmp
fbstp
gs
loopne
and
addb
jne
mov
jns
push
mov
sub
subb
push
nop
int3
imull
jnp
push
sub
shlb
push
push
out
mov
add
or
and
insb
xchg
mov
mov
xchg
aas
loop
fcoml
mov
xchg
popa
adc
adc
fs
cmpxchg
inc
repnz
inc
mov
out
jbe
andb
pop
stos
and
out
std
add
and
fidivs
pop
mov
outsl
jb
das
fistpll
push
mov
in
cmp
mov
and
push
jbe
mov
lock
ss
and
rorb
loopne
push
cld
ljmp
std
iret
sbb
pop
mov
jmp
and
rol
ds
lret
cld
or
aam
shlb
inc
push
and
addr16
inc
push
sub
and
mov
clc
lds
sub
ds
insb
fnsave
jns
and
mov
loopne
stc
imul
aad
loopne
push
inc
lock
pusha
inc
pop
jle
push
shlb
andl
sbb
pop
jmp
adc
inc
mov
in
imul
clc
rorb
or
jne
and
mov
movsb
inc
inc
fwait
repz
pop
dec
bound
jno
fsubs
roll
xchg
loopne
in
mov
dec
sbb
rcrb
pop
sub
shlb
lock
pop
movsb
addb
mov
mov
rclb
jno
in
xlat
and
add
in
adc
mov
add
xor
jnp
mov
and
sbb
push
dec
pop
jp
jne
aad
in
cmp
jns
mov
push
pop
imul
sub
jno
in
xchg
or
lds
imul
sub
cltd
jbe
andb
xor
popa
outsb
push
jb
ja
push
xor
lret
rolb
cmc
fstps
push
call
and
cltd
orl
scas
add
or
xchg
jg
cmp
pop
jle
pop
fbld
mov
pusha
and
fiadds
jno
call
sahf
jmp
andb
mov
add
pusha
fyl2x
sahf
rclb
in
add
add
and
mov
inc
xchg
sbb
adc
cmp
mov
loopne
mov
in
jo
add
inc
pop
sbb
out
out
andb
dec
call
dec
ljmp
mov
mov
clc
mov
movsl
ret
xchg
popa
and
push
xchg
addr16
iret
idiv
cwtl
cmpsl
out
bound
and
pop
popf
inc
push
xchg
sbb
add
sub
or
pusha
jno
xor
repz
sub
jb
add
dec
not
adc
int
loopne
inc
sub
add
mov
jge
dec
or
sarb
out
jge
cmp
push
mov
rcr
jl
outsb
xlat
jbe
inc
add
popa
arpl
and
and
inc
das
mov
adc
pop
dec
addb
pop
sub
and
xchg
and
and
pop
cmp
stc
fimuls
inc
jmp
add
scas
mov
xorl
sub
shrb
jl
ss
bound
subl
jmp
jle
xor
scas
addb
inc
and
push
pusha
sbb
in
inc
rolb
sar
mov
and
bound
int
sub
and
popfw
mov
mov
adc
lods
inc
and
mov
mov
not
ret
sahf
pop
andb
shrb
adc
inc
test
push
push
cli
insl
sbb
mov
imul
imul
mov
out
inc
leave
dec
adc
mov
stos
add
nop
ret
pushf
stos
je
mov
add
mov
add
pop
jg
loop
xchg
daa
movsl
inc
cmp
add
out
inc
adc
xchg
in
fs
in
movsl
mov
push
adc
sbb
dec
fildl
stos
and
dec
cmp
pusha
pusha
daa
jl
dec
mov
xchg
sahf
shl
mov
and
lret
shll
jp
inc
cmpsb
inc
pusha
call
je
mov
cmp
jge
mov
sub
cmp
xor
popa
mov
adc
mov
and
sub
adc
roll
push
jle
into
mov
hlt
add
sarb
pop
cmpsb
mov
or
inc
jle
ds
orl
mov
fisubl
loopne
into
push
in
dec
inc
dec
and
add
cmp
loop
mov
movsl
lods
sbb
inc
push
dec
jbe
andb
xchg
mov
loopne
sahf
sbb
insb
mov
pushf
adc
jo
outsl
mov
nop
fstp
sbb
fwait
test
outsl
mov
inc
or
mov
scas
add
sub
shrb
adc
jp
inc
shrb
mov
lock
call
or
xchg
movsb
loopne
inc
pushf
dec
mov
push
and
mov
pusha
pop
push
add
fildll
les
add
mov
pusha
and
add
or
sub
popa
clc
idivb
xchg
inc
mov
inc
inc
mov
fcomi
adc
sub
jbe
add
inc
cli
inc
push
push
daa
cmp
push
orl
add
cmpsl
add
sahf
dec
dec
leave
mov
mov
das
mov
andb
jecxz
iret
outsb
mov
adc
hlt
mov
shlb
fbstp
lret
add
and
shl
cmp
daa
add
loopne
sub
sbb
jecxz
inc
xchg
jno
push
enter
mov
mov
and
rolb
scas
jo
and
rclb
xlat
mov
add
pop
push
mov
scas
pop
or
inc
mov
xchg
cmp
add
mov
sub
mov
pop
inc
jg
addr16
add
xchg
and
pusha
negl
out
loopne
cld
into
or
inc
daa
cmc
int3
popf
js
icebp
cli
inc
and
adc
shr
mov
and
inc
insl
imul
pusha
outsl
dec
cli
loopne
in
ss
fwait
add
mov
inc
arpl
ss
imul
jno
andb
lret
inc
dec
push
mov
mov
sub
pusha
add
mov
inc
jp
xchg
loopne
cld
xchg
loopne
sbb
daa
cmp
cwtl
jb
dec
fxsave
add
add
loopne
add
shlb
js
pop
push
mov
jo
and
inc
push
lea
out
cld
pusha
in
loope
jecxz
push
sbb
and
loop
jnp
and
pop
insb
stos
add
mov
cmc
push
mov
imul
fwait
mov
shlb
movsb
and
dec
jnp
mov
cld
sub
scas
int3
sahf
test
pop
mov
shlb
add
out
jne
test
xchg
pop
adc
in
lock
cmp
dec
jbe
cli
sbb
mov
ss
shll
mov
mov
and
aam
mov
mov
and
gs
sar
and
fcomip
mov
push
inc
jg
push
mov
pusha
orb
mov
xor
sbb
in
and
loopne
inc
loopne
stos
aad
xchg
push
test
sahf
cs
mov
ljmp
cli
scas
cmc
shll
jo
sahf
adc
shrd
add
xchg
clc
popf
xchg
dec
xorl
jp
and
jae
inc
and
jle
rcr
or
test
loopne
lret
xlat
dec
popf
mov
cmp
stos
shlb
inc
cmpb
xchg
in
fldenv
adc
pop
cwtl
add
add
test
loopne
scas
mov
push
cmp
in
lcall
jge
sbb
lds
inc
xchg
sahf
or
inc
and
inc
mov
sarb
call
or
sbb
xor
and
lcall
inc
inc
mov
dec
push
mov
outsb
incl
sub
sbbb
cmp
addb
cmpxchg
xor
add
gs
and
rolb
or
mov
add
mov
leave
sbb
or
fxch
stos
xchg
fcomps
add
ds
int
inc
and
iret
push
mov
pushl
pop
aaa
repnz
add
lods
xchg
aaa
adc
dec
jbe
out
and
sbb
ljmp
shrb
or
add
xchg
frstor
jge
js
pop
push
xchg
mov
add
in
insl
int3
icebp
mov
pop
mov
push
ss
adc
psubusw
mov
out
outsb
cmp
ss
dec
fisttpll
aas
incb
add
and
add
dec
inc
rcll
das
lahf
push
es
and
mov
pop
dec
lahf
or
shrb
lods
loopne
bswap
xchg
jno
shl
add
add
inc
mov
or
shrb
jnp
add
andb
mov
jae
push
mov
cld
test
inc
loop
shlb
stc
clc
call
cmp
mov
enter
fnsave
sbb
inc
shrb
add
add
out
add
nop
testl
jbe
fistl
insb
test
insb
adc
andb
dec
jmp
cvtpi2ps
loopne
add
inc
testl
out
and
sbb
fbstp
sub
pusha
shlb
xor
and
sbb
movsl
sti
mov
and
add
inc
sbb
int3
mov
lcall
iret
mov
stos
loopne
je
inc
mov
call
out
loopne
add
clc
mov
lods
add
push
mov
addb
jae
mov
mov
and
scas
inc
and
rolb
jecxz
popf
and
inc
loopne
loopne
xchg
aad
js
dec
and
loopne
pop
mov
shrb
dec
mov
add
mov
dec
dec
cmpsl
les
addb
mov
rorb
jmp
and
push
push
js
lods
xchg
pop
scas
loopne
inc
adc
xor
rcrl
push
hlt
ret
js
cmp
sub
and
enter
ljmp
aaa
cmc
xchg
clc
rolb
mov
loopne
icebp
arpl
rolb
dec
sub
and
arpl
gs
xchg
in
je
adc
add
inc
pop
std
pop
call
and
mov
inc
or
add
xor
rclb
inc
mov
inc
mov
lcall
addb
adc
pusha
data16
sarl
pusha
repnz
sub
pusha
push
xor
mov
sub
shl
mov
fstl
loop
shl
lea
sbb
mov
inc
mov
sub
nop
add
sarb
andb
lret
add
shlb
add
bnd
pusha
shlb
cmp
cmp
adc
inc
inc
mov
gs
and
rolb
xchg
mov
shl
adc
std
jg
test
shlb
cmpsl
stos
mov
add
add
push
add
mov
rclb
nop
jbe
mov
rorb
lahf
pop
push
stc
fcmovnu
repnz
daa
xor
add
fs
and
and
scas
jne
add
nop
je
cmp
mov
adc
mov
cli
scas
mov
jnp
mov
mov
and
shll
mov
mov
fcmovnbe
call
mov
and
stos
std
sti
pop
push
leave
jge
mov
dec
dec
arpl
shll
add
push
jmp
cmp
sarl
pusha
adc
cmc
rcrl
je
mov
dec
sub
mov
sahf
sub
shl
adc
mov
dec
mov
mov
fwait
mov
inc
add
loopne
loopne
add
loopne
rcll
and
hlt
pushf
add
pusha
inc
mov
jno
push
or
push
pop
sub
inc
rolb
mov
sub
pusha
mov
loopne
fldenv
mov
sub
data16
add
ficoms
enter
mov
scas
and
lahf
stc
rclb
push
push
idiv
and
jp
mov
fwait
cmpsb
pusha
pusha
cmp
mov
fcmovnbe
cld
pop
addb
mov
loopne
movsl
gs
mov
lea
addl
sbb
pushf
mov
cwtl
mov
loop
shl
push
cld
xor
fmulp
sub
inc
mov
jecxz
mov
js
jecxz
test
and
fiaddl
xchg
pop
add
rorb
sbb
xchg
xor
insl
cmovs
ja
test
out
and
inc
ret
cld
xchg
xchg
inc
scas
lock
mov
popf
pop
xchg
jl
ficomps
data16
push
inc
insl
pushf
lahf
pop
dec
mov
out
or
outsl
dec
aaa
pop
sub
test
inc
xchg
lock
scas
rep
fwait
cld
sub
add
jp
out
inc
outsl
and
xchg
popf
sti
or
inc
es
cmpsb
rol
mov
add
sub
repnz
jae
mov
pushl
cmp
lret
inc
add
mov
mov
push
adc
ret
push
outsl
loop
sub
adc
mov
andb
insl
xor
cmp
in
mov
test
adc
pop
xor
inc
leave
inc
mov
rorl
add
xchg
dec
add
loopne
adc
mov
mov
xorb
mov
test
push
and
insb
inc
int
out
fistps
dec
dec
fdiv
aad
mov
shlb
sbb
lea
imul
inc
je
testb
add
mov
push
push
adc
insb
loope
fstpl
push
shlb
sub
adc
pop
fwait
sti
mov
lahf
stos
mov
and
popf
fnsave
dec
arpl
pop
push
inc
idivb
sbb
inc
mov
arpl
pusha
inc
inc
pusha
fsubrs
test
jb
push
mov
scas
add
add
mov
stos
addb
mov
push
les
andb
sbbb
je
shll
push
imul
aaa
xchg
and
lock
stos
inc
pusha
pop
adc
jns
xor
sbb
push
sbb
xor
fldenv
inc
add
or
add
or
and
jmp
mov
xchg
mov
shlb
pop
pop
and
sbbb
cltd
mov
addb
pop
pop
and
popf
ret
iret
xor
dec
movsb
add
divb
subb
xorb
add
push
xchg
add
cmp
mov
mov
movsb
loopne
movsb
loopne
mov
add
xor
stc
cwtl
xchg
decb
or
fadds
loopne
out
jnp
jl
outsl
orl
mov
je
scas
pusha
andb
jae
dec
add
and
aaa
out
add
add
shrb
loopne
fidivrs
scas
sbb
jns
cmp
push
pop
fstl
mov
mov
aam
loopne
das
insb
nop
sbb
pop
stos
loopne
je
shl
push
xchg
dec
popf
aam
pusha
mov
lock
adc
idivb
sbb
add
cwtl
add
loopne
data16
mov
sub
push
adc
dec
call
loopne
aam
inc
mov
and
jle
and
xor
mov
lret
dec
ja
pusha
and
lods
adc
je
fsubp
sbb
lds
mov
popf
push
xchg
push
and
push
xchg
cmp
lods
shlb
pusha
add
lock
jno
xor
in
hlt
test
pusha
add
sti
movsb
mov
sarl
int3
dec
sub
mov
inc
fiadds
mov
lahf
rclb
xchg
pop
ljmp
inc
addr16
cmp
inc
loopne
mov
shl
push
lock
inc
and
iret
dec
push
loopne
fwait
jg
inc
shl
inc
cmp
and
and
lret
mov
cmpb
mov
les
adc
sub
shrb
dec
and
mov
inc
arpl
mov
pop
push
pusha
mov
inc
arpl
push
fildll
xor
andb
fisttps
addr16
jmp
xchg
inc
mov
loopne
inc
and
pusha
sbb
int
jae
fcmovb
and
insb
stc
xchg
pusha
mov
jns
bound
insb
out
mov
aas
jne
xor
jg
jne
loopne
in
arpl
inc
xchg
pusha
dec
insl
scas
and
cld
jle
or
pop
jae
add
bound
in
cmp
jnp
or
add
sub
pusha
rolb
mov
psraw
pop
out
je
filds
push
inc
sbb
das
ss
jns
push
lds
inc
jge
pushf
lcall
or
addb
mov
cmp
xchg
push
iret
aam
jns
cli
lea
sbb
adc
inc
inc
leave
dec
fwait
cmp
test
mov
adc
jbe
iret
in
add
lea
or
mov
pop
ja
inc
ljmp
andb
mov
dec
push
pusha
sbbb
mov
loopne
inc
xchg
pusha
push
mov
jmp
lods
inc
sbbb
push
and
mov
imul
mov
pop
lahf
inc
jo
cmpl
int
stos
lea
nop
loop
mov
add
mov
testl
repz
popl
addb
xor
mov
aad
inc
loopne
lds
jnp
push
or
imul
out
fcomps
xchg
push
cltd
cltd
imul
andb
sbb
sub
or
inc
lods
mov
aas
mov
lcall
inc
lds
in
fistps
and
and
pusha
sbbl
out
mov
inc
jnp
addb
pusha
pusha
adc
rolb
fidivl
jns
adc
test
outsb
xor
pop
inc
pop
mov
xor
jle
xchg
hlt
sub
and
mov
iret
inc
and
sub
pusha
pop
out
jno
rcr
mov
mov
jae
imul
mov
xor
stos
shl
cltd
mov
inc
pushf
and
pusha
addr16
add
cmpsb
addb
jg
loopne
adc
add
scas
daa
outsb
mov
hlt
mov
add
andb
xor
pop
mov
rdmsr
mov
inc
jbe
and
jl
loopne
sub
hlt
mov
test
push
lgs
cmp
jne
fst
aad
xlat
gs
pop
cmc
pop
lds
insb
in
int
add
cmpsb
inc
and
mov
stos
add
or
mov
jno
push
rolb
inc
iret
arpl
push
dec
decb
mov
outsb
cli
pop
adc
add
cli
je
mov
sub
and
or
add
std
gs
mov
add
sbb
movsb
shlb
lods
mov
rolb
mov
rol
jl
mov
pusha
inc
xchg
pop
mov
jecxz
pusha
and
jmp
dec
sbb
mov
jbe
or
sahf
popa
lcall
or
fwait
and
aad
pop
mov
push
xor
and
mov
dec
or
lret
xor
xchg
adc
in
inc
push
add
push
jo
sub
pusha
jbe
jo
into
add
jne
cmc
int
aam
jmp
addr16
inc
stos
and
in
mov
stos
jbe
or
outsb
mov
dec
sub
inc
iret
mov
push
rorb
pusha
and
loopne
adc
mov
mov
mov
jmp
sub
loopne
lods
es
add
rolb
inc
addb
test
loopne
and
add
mov
in
in
add
xor
sub
repz
repnz
add
fldcw
js
les
jo
jl
outsb
pop
stos
jmp
add
and
stc
inc
imul
pop
ljmp
and
ret
xor
adc
mov
andb
lcall
mov
rcrb
out
popf
ret
loop
dec
pop
ds
shlb
rclb
ficoml
ljmp
push
cmpsl
mov
mov
or
rolb
push
js
jnp
dec
imul
and
add
jmp
into
insl
mov
xor
add
ljmp
dec
shrl
inc
mov
mov
addb
andl
je
pusha
inc
adc
in
outsb
imul
movsl
xchg
bound
sbb
dec
mov
add
outsb
roll
shlb
push
int3
mov
inc
pop
jmp
sub
fwait
clc
addb
adc
shrl
xor
sbb
repnz
loopne
movsb
and
jecxz
pusha
rolb
loopne
int3
dec
dec
pop
mov
cwtl
pmuludq
enter
inc
pusha
lds
push
mov
inc
adc
push
push
clc
ss
negb
cmc
pop
xor
insl
jl
dec
adc
and
mov
xor
mov
lock
mulb
push
iret
or
loopne
adc
mov
pop
gs
call
stos
data16
loopne
mov
push
mov
inc
dec
inc
dec
pop
fcmovu
inc
jb
das
adc
aam
inc
dec
aad
lea
scas
and
or
add
shlb
pop
xorl
test
notb
mov
pushf
cli
mov
faddl
loopne
shlb
dec
jle
pop
jg
sub
mov
pop
add
gs
pusha
add
ljmp
add
fisttpl
inc
aaa
stos
adc
mov
mov
pop
push
add
and
add
in
xchg
cmp
subb
inc
mov
gs
inc
and
dec
cmp
addr16
or
xor
ja
into
shl
or
pusha
mov
popf
xchg
adc
arpl
shll
pop
jne
push
xchg
bound
pusha
pusha
loop
mov
negb
jbe
mov
test
pushf
out
hlt
data16
rol
mov
insl
xlat
ret
jle
jno
sahf
and
jle
jge
inc
out
aaa
push
adc
add
mov
and
test
mov
imul
push
inc
leave
je
mov
add
out
sub
insl
sbbl
shl
mov
andb
mov
cmp
icebp
or
adc
fstl
mov
rcrb
adc
inc
mov
cmp
sbb
jbe
aas
mov
ror
mov
mov
aam
add
mov
loopne
inc
mov
dec
aaa
pop
clc
je
andb
cmpsl
inc
aas
lcall
pop
xor
mov
jp
jp
and
outsl
rclb
xchg
mov
inc
loopne
xchg
mov
pop
mov
aas
mov
or
dec
adc
push
icebp
int3
push
xor
rcrl
cmp
iret
push
fisubrl
inc
mov
and
mov
ret
fldt
popf
ret
std
stos
pop
sub
loopne
sub
or
inc
pop
lods
jb
pop
cmp
pusha
sbb
into
in
sti
inc
lret
ljmp
jg
test
movsb
mov
add
mov
mov
and
pop
mov
and
mov
pop
mov
in
adc
pushf
cmp
and
fwait
jle
jb
sbb
das
or
shrb
pushf
out
ljmp
jg
pop
fwait
sub
adc
add
mov
cli
mov
ror
dec
pop
mov
and
add
and
fsubrs
mov
pop
dec
addr16
and
test
and
outsb
inc
in
imul
shlb
nop
lahf
jmp
add
lret
enter
loope
je
popf
fcmovu
sti
push
pop
mov
pop
push
jecxz
shl
mov
out
pop
iret
mov
jl
mov
mov
jle
out
in
mov
js
aad
xor
inc
pusha
insb
pushf
inc
mov
mov
add
lock
xchg
sbb
bound
jge
xor
xor
out
inc
xchg
ret
popa
cltd
mov
icebp
xor
add
incb
xor
fiadds
mov
in
xchg
mov
incb
addb
and
mov
xlat
movsl
or
add
shlb
and
and
and
inc
iret
pusha
lcall
loopne
imul
push
inc
mov
imul
pop
aam
pop
dec
or
loopne
sbb
lea
std
imul
and
add
sbb
dec
mov
andb
loopne
inc
loopne
cs
icebp
inc
xchg
mov
or
addb
jp
adc
cmp
push
sub
dec
inc
lret
jge
xchg
pop
dec
loop
lea
je
push
or
pusha
testl
mov
jp
hlt
fldl
add
into
adc
dec
repnz
xlat
pop
imul
test
xlat
scas
ds
repz
aam
sbb
test
adc
mov
xlat
lds
mov
data16
xorl
adc
stc
std
mov
sbb
or
pusha
out
adc
and
test
loopne
mov
ss
aaa
or
push
aam
push
test
and
pop
nop
mov
sub
add
daa
lret
out
cmp
push
out
cld
iret
push
and
and
xor
jl
icebp
ss
pop
push
iret
sahf
adc
xlat
push
add
inc
mov
and
add
jne
mov
int3
add
and
xchg
dec
fs
repz
push
insl
icebp
xchg
sbb
pop
mov
ss
out
ja
lcall
jl
repz
shlb
sbb
aad
imul
push
ss
adc
mov
jae
cmp
xor
jo
lds
jne
mov
add
jge
stos
inc
add
cmp
jge
in
ja
hlt
sbb
iret
or
and
inc
flds
mov
sbb
mov
aam
mov
cld
xchg
dec
insb
add
das
inc
sub
xchg
cmpl
pusha
inc
in
inc
xor
shlb
loopne
xchg
movsl
pushf
add
or
push
ds
int
pop
adc
inc
loopne
jbe
sbb
aas
cmpsl
loope
stos
loopne
and
test
dec
cmp
sub
and
lret
inc
inc
sbb
cltd
or
pop
rcl
jmp
mov
imull
jno
jne
lret
mov
inc
pslld
inc
add
pusha
inc
rclb
pusha
std
xor
nop
out
mov
pushf
xchg
inc
je
pop
nop
or
adc
rcl
jmp
sub
loopne
cwtl
fwait
mov
rcrb
inc
xor
ret
divb
adc
shl
and
out
loope
adc
adc
mov
mov
or
mov
mov
test
and
out
loopne
js
jmp
push
xchg
aaa
iret
xchg
aas
fdivrs
add
aaa
or
data16
pusha
mov
add
in
adc
rorb
insl
outsb
ja
lds
fcomi
popf
cmp
and
pop
sbb
push
popa
jge
sub
mov
and
mov
scas
out
sbb
add
push
aas
xlat
fsubl
sub
sbb
sub
icebp
ss
addb
mov
int
addb
inc
cmp
xorb
shrb
pushf
pop
pop
rolb
jae
cld
das
dec
sbb
jno
push
and
into
lret
out
push
sub
shll
loopne
sahf
aad
ja
or
mov
sarb
std
outsb
scas
shlb
iret
icebp
dec
cmp
lods
dec
loope
cli
or
pusha
cmp
push
sbb
and
pop
stc
stos
addb
inc
sarb
addb
sarb
loopne
pushf
and
fcomp
repnz
inc
imul
ret
cmp
mov
xchg
add
sbbl
loopne
lcall
or
sarb
lds
add
add
add
inc
loop
dec
xchg
ljmp
sbb
lahf
xchg
lret
sbb
pop
repz
pusha
rolb
adc
dec
dec
test
loopne
pusha
pusha
push
jle
sbb
repnz
adc
or
mov
sub
add
les
lret
pop
into
loope
das
insl
movb
sbb
pop
mov
xor
outsl
je
mov
sahf
xor
dec
lcall
ficoml
push
dec
mov
rol
and
jne
daa
jae
loopne
mov
jge
imul
cmp
in
dec
test
rolb
inc
adc
and
movsl
adc
mov
test
mov
je
xor
sarl
fchs
cmp
and
pusha
loopne
add
mov
pop
in
mov
loopne
and
adc
xchg
mov
shl
aad
lods
lret
decl
loopne
mov
shll
mov
xor
cmpsb
andb
imul
jnp
xor
inc
and
inc
jmp
shrb
loopne
pusha
pusha
fistpl
pusha
sarb
pop
aas
mov
rolb
jge
call
jp
stc
mov
add
movl
stc
insb
inc
out
icebp
sbb
sti
mov
loopne
out
fisttpl
add
lock
jno
dec
imul
fdivrl
pushf
pop
push
leave
inc
push
jp
push
in
popa
inc
cltd
fstpt
mov
inc
mov
add
js
xchg
push
add
je
icebp
es
unpcklps
shr
movsb
shlb
sbb
outsb
xchg
les
xor
mov
mov
fwait
jg
sbb
rcrb
cmpsb
add
sahf
lods
xchg
aad
or
shr
mov
sbb
add
adc
pop
xchg
dec
js
cmp
mov
push
jo
xchg
out
xor
shl
jae
mov
xchg
enter
add
mov
gs
mov
ror
test
loopne
jo
out
cmc
xchg
gs
aam
pusha
add
cmp
and
push
xor
mov
stc
push
pop
loopne
xor
lods
addb
and
and
enter
inc
idivb
jnp
add
movb
jae
adc
das
shll
sbb
jne
mov
jnp
pop
pop
jne
push
xchg
sbbl
pushf
jbe
or
lock
inc
adc
dec
rcrl
icebp
push
lret
and
lahf
jbe
in
idivl
out
data16
movsl
pop
dec
adc
push
push
rcrl
xchg
and
loopne
ficomps
test
add
push
ss
push
pop
pop
out
scas
cmpsl
xchg
iret
loopne
xchg
xor
popa
inc
sub
mov
lds
cmpsl
mov
and
loopne
and
mov
inc
dec
aad
fdivs
inc
stos
mov
pusha
inc
mov
dec
xchg
cmp
or
ficompl
adc
inc
mov
icebp
cmp
xorl
rclb
ja
cmc
cmpsl
mov
pusha
loopne
inc
mov
xchg
clc
lods
add
cmp
jg
outsb
cmp
xchg
fcoms
inc
shl
js
adc
pop
aad
xor
inc
lcall
xor
jo
sbb
sub
lock
rolb
lahf
lea
inc
addb
call
mov
inc
cli
mov
push
pop
mov
add
mov
test
shlb
loop
mov
and
cmp
cwtl
hlt
and
xor
and
add
and
inc
and
pusha
ja
inc
xchg
stos
pusha
and
and
sahf
xlat
call
gs
add
push
lds
xchg
pushf
mov
or
ret
or
stc
mov
shlb
sbb
cmc
cld
dec
daa
js
sbb
or
call
dec
push
ljmp
in
repnz
test
popa
mov
sub
pusha
aaa
mov
mov
dec
fsubrl
pusha
and
pop
pop
ret
das
jg
pop
mov
popa
imul
sahf
xchg
dec
push
add
inc
sti
jns
mulb
addb
inc
jno
dec
test
scas
cltd
mov
mov
jnp
xor
and
pusha
and
mov
mov
adc
daa
xchg
icebp
mov
popa
mov
repnz
xchg
mov
ja
jg
xchg
push
add
cmp
into
sbb
adc
cmc
sbb
popa
shrl
pusha
mov
mov
and
addb
rolb
scas
xlat
nop
out
pusha
adcb
repnz
mov
mov
rol
fbstp
out
pop
push
cmp
and
sbb
pop
sub
mov
mov
sbb
loopne
cmp
xlat
xchg
xor
incb
xlat
fs
out
loopne
xor
add
jbe
push
je
gs
jbe
jl
mov
xchg
sub
mov
mov
lcall
rclb
cmovl
mov
rolb
dec
mov
dec
cmp
mov
xor
and
fnstsw
shlb
or
dec
test
testl
sbb
and
rclb
cmpsl
mov
mov
inc
push
xchg
pop
add
and
enter
dec
and
loopne
and
rclb
jb
xor
loopne
scas
add
dec
dec
add
inc
mov
mov
push
jl
gs
xchg
fdivrs
sahf
stos
rcll
adc
lahf
dec
jecxz
mov
rorl
mov
in
mov
and
pusha
rolb
xchg
ret
popf
jecxz
mov
jo
test
cltd
lahf
inc
adc
push
pusha
add
lds
enter
or
out
cmc
push
gs
mov
and
xchg
out
inc
fwait
jl
pop
mull
sbb
out
xchg
je
shlb
adcb
mov
sub
loopne
push
mov
add
inc
pusha
movsb
add
sahf
push
inc
or
add
loopne
sub
iret
pusha
arpl
dec
cmp
jle
fcomp
rolb
inc
loopne
loopne
out
div
jns
jns
sbb
jle
and
test
popw
add
inc
in
lea
and
mov
mov
popf
and
dec
insb
loopne
push
fs
mov
js
mov
and
pusha
shl
rorb
and
stc
push
xor
imul
inc
jnp
andb
ret
out
add
pop
pop
movsb
inc
or
and
mov
push
loopne
jns
in
mov
xchg
pusha
les
cwtl
push
fwait
push
xchg
into
xchg
shlb
xorb
and
ja
imul
mov
sarb
movsl
mov
andb
loopne
cmpsl
mov
and
outsl
out
leave
sub
xorb
movsb
pusha
inc
out
xchg
dec
or
into
jmp
andb
sub
loopne
lcall
xchg
add
pop
pop
jnp
mov
jecxz
lods
xor
mov
in
xchg
or
pop
pop
cmp
xchg
inc
push
dec
or
pop
add
iret
mov
adcl
adc
add
addb
mov
lahf
or
cmpb
lea
loopne
add
inc
push
test
push
cli
xor
cs
mov
sub
andb
dec
loopne
nop
ljmp
pusha
lea
push
rolb
sbb
mov
lret
in
push
cmp
jmp
mov
xorl
pusha
mov
jp
xchg
xchg
jecxz
loope
and
cmpb
aaa
vsubsd
add
adc
fs
dec
outsb
nop
dec
mov
pusha
push
loope
pop
mov
enter
test
mov
loopne
pop
sbb
mov
add
rcrb
dec
insl
push
jp
push
sbb
and
orb
orb
insl
xchg
jnp
sub
loopne
mov
arpl
andb
popa
imul
rcll
mov
push
cmp
push
jle
jle
hlt
dec
fildl
mov
pop
mov
dec
icebp
addb
mov
xor
leave
repnz
sub
loopne
loopne
mov
and
aam
data16
scas
and
mov
in
push
add
lret
mov
add
xor
jg
mov
sti
shl
jmp
in
fildl
rorb
pusha
pusha
pop
and
adc
stos
andb
push
push
and
adc
push
pop
ds
mov
decb
lods
and
test
or
jne
sbb
iret
adc
enter
inc
jecxz
andb
and
inc
inc
int
or
pop
loopne
and
xchg
adc
loope
jle
cmp
or
and
jp
and
cmp
lahf
fwait
jae
or
lock
mov
pop
nop
in
test
inc
add
loopne
cwtl
pop
les
push
loope
xchg
jnp
pusha
and
rol
mov
shlb
rcll
fmull
pop
lahf
push
add
jnp
mov
cmc
mov
clc
imul
icebp
lds
imul
sub
jmp
lret
xor
or
mov
into
test
adcb
lret
cmpb
cmc
push
popf
mov
rol
lds
arpl
mov
mov
sbb
xor
pop
cmp
clc
add
subb
lods
fwait
adc
dec
movsl
cltd
adc
and
loopne
rolb
sahf
aad
test
sbbb
loopne
push
push
imull
and
jns
inc
jo
cmc
stos
pusha
inc
add
out
and
fwait
subl
pushf
xor
or
pop
sub
sbbb
xchg
and
daa
aad
insb
pop
inc
dec
mov
add
mov
or
shlb
sub
add
adc
lea
popf
dec
js
adc
sub
mov
pop
lret
xchg
dec
cmp
and
repz
push
sbb
call
and
mov
xchg
add
loopne
rol
inc
lods
mov
mov
mov
mov
add
add
pusha
jle
aad
and
push
mov
pushf
or
rcl
add
xor
cmp
addb
fdivrs
mov
mov
mov
and
pop
xchg
imul
ret
call
pushf
mov
fdivl
rcrl
and
push
aaa
xchg
in
shlb
xor
cmp
loope
out
and
andb
adc
das
adc
in
or
add
lods
xchg
jecxz
add
andb
mov
movsl
xchg
and
mov
dec
aaa
jnp
push
scas
jnp
jne
mov
imul
add
test
or
inc
xchg
jae
inc
subb
jle
cmpsl
hlt
sbb
cmc
mov
mov
cmp
push
shlb
jmp
test
inc
mov
lods
andb
dec
dec
iret
iret
and
cmp
sahf
jns
xor
jg
inc
pusha
test
inc
out
pop
pop
ljmp
sub
adcb
jg
addb
jecxz
lods
addb
dec
xchg
sbb
enter
add
daa
push
sarl
mov
loopne
loopne
push
lods
inc
cs
and
int3
mov
and
pop
add
mov
cwtl
call
lcall
stc
xchg
fdivrs
jno
add
ret
xorl
add
cmpsl
xsavec
in
add
add
add
ljmp
cltd
cmp
add
mov
inc
mov
cmp
pushf
fwait
fwait
call
hlt
inc
outsl
mov
and
out
jecxz
cli
jmp
xchg
pop
shrd
xchg
andb
mov
pusha
dec
jge
loopne
dec
cmc
mov
and
pop
xorl
push
test
pusha
add
cmp
out
aam
and
pop
jmp
addr16
jb
sub
in
call
xchg
sbb
lea
cmp
adc
or
pusha
dec
insl
adc
shl
adc
mov
mov
in
dec
mov
inc
sub
clc
cmpsb
and
loop
in
arpl
inc
inc
scas
andl
mov
sub
popa
in
mull
repnz
pusha
loop
outsb
or
or
rcll
cld
addr16
std
aad
fsubl
fs
loope
dec
pop
call
jg
in
es
mov
sbbl
xor
fists
ja
sbb
add
cmc
pop
push
addr16
jbe
inc
popw
and
addb
xor
stos
add
and
jge
jmp
or
sarb
jbe
movsb
pusha
mov
or
loopne
push
cmpl
cmc
jno
or
mov
mov
push
in
xchg
cmpsl
ja
movsl
push
and
inc
dec
jns
mov
clc
dec
sbb
cmpsl
xchg
dec
jns
mov
loopne
insb
sub
leave
ret
test
mov
fwait
jge
mov
mov
loopne
add
add
xchg
push
inc
loopne
clc
mov
and
sub
mov
mov
dec
clc
dec
xor
stos
stc
gs
daa
iret
cmpsb
addb
test
sbb
jle
sbb
mov
push
jmp
shll
sbb
ror
mov
inc
fisubl
adc
cltd
jl
mov
mov
in
lret
arpl
insl
mov
jmp
dec
scas
mov
loopne
out
dec
pop
sub
inc
xor
addb
pop
fistpl
rolb
sub
fisubrs
nop
adc
pop
divb
dec
nop
inc
push
xlat
stos
dec
aam
add
icebp
mov
les
movsb
add
les
and
rolb
add
add
inc
sahf
xchg
icebp
jle
xor
loope
ss
lret
cmp
cmp
popf
mov
lods
inc
add
jle
pop
mov
loopne
and
inc
mov
out
sub
repz
lahf
ja
test
jae,pt
mov
bound
andb
cmp
andb
jns
sahf
xor
addb
ss
cmp
inc
rclb
jmp
lock
ds
push
outsl
ror
loopne
mov
cwtl
in
sbb
sub
pusha
xorb
mov
inc
addb
rolb
pushf
cmp
repz
push
aam
cmpsl
flds
adc
fnstenv
lcall
mov
sbb
pop
add
loopne
out
test
xchg
inc
add
sahf
scas
rolb
popf
mov
jbe
arpl
pop
jl
sub
idivl
shufps
mov
mov
aam
add
inc
imul
pusha
pop
and
mov
jnp
pusha
and
and
sub
sub
cmpsl
sub
loopne
cmp
dec
cmpsb
addb
fcomi
push
lds
add
pop
sti
je
mov
push
lret
in
cmp
adc
and
loopne
iret
aas
cmp
das
push
mov
jp
scas
jg
lret
pop
jae
xor
arpl
repz
sarl
loopne
inc
and
out
loope
jno
ds
jp
stos
add
stos
dec
enter
in
sub
sbbb
and
outsb
movsl
pop
adc
addb
icebp
das
sbb
scas
inc
rclb
out
ficoml
add
inc
pop
shrd
fadd
negb
sbb
out
repnz
cmp
or
cs
add
decl
rclb
sub
rclb
loopne
mov
out
pushf
push
add
push
mov
ret
adc
pusha
mov
addb
xor
add
jl
addb
into
push
mov
lods
add
loopne
add
pop
mov
inc
cmpb
dec
call
push
roll
adc
test
shl
pop
pusha
cmp
jmp
xchg
push
gs
mov
mov
lret
push
and
cmp
pop
push
addb
loope
add
sbb
pushf
out
pusha
mov
and
aam
add
dec
mov
cmpsl
cmpsb
add
inc
and
aad
cmpsl
lea
mov
mov
mov
and
lea
lds
repnz
jmp
loopne
in
pop
loope
dec
mov
mov
and
aam
cs
pusha
rolb
cmp
jns
jne
addl
inc
mov
bound
xchg
mov
pop
fbstp
jnp
imul
and
push
outsb
sbb
pushf
sub
out
inc
pusha
lods
les
jmp
add
addb
mov
popa
push
out
sbb
ss
ret
mov
inc
xor
andb
adc
imul
mov
aas
dec
pop
or
andb
loopne
shlb
adcb
mov
out
adc
jb
jb
out
out
lcall
add
and
rorb
out
shlb
jae
pusha
pop
ss
inc
shr
andb
inc
test
pusha
popa
pop
sub
and
and
mov
je
jmp
andb
test
sarb
call
scas
pushf
adc
pop
push
cs
loopne
and
enter
mov
sbb
sbb
pusha
mov
jp
ljmp
pop
lcall
mov
pusha
rcl
push
sahf
lret
shlb
push
out
shl
mov
icebp
fstpl
rclb
insb
outsb
mov
sub
addb
mov
mov
fstpt
pop
cmp
lock
and
mov
or
xor
jp
movsb
inc
inc
sub
out
out
adc
xchg
dec
inc
cmp
cmp
xor
and
or
and
pusha
fsubl
loopne
shr
push
addb
leave
repz
mov
cmp
mov
loopne
mov
in
mov
add
test
jmp
mov
adc
push
mov
movsl
addr16
pop
shlb
sarb
xor
push
mov
and
outsl
cmp
mov
sub
pop
adc
cmp
aad
sbb
and
pusha
xorb
pop
jg
inc
adcb
xchg
mov
mov
not
ljmp
andb
bound
rorb
test
addb
mov
daa
dec
adc
push
int
vmovntps
and
inc
inc
pop
addb
imul
movsb
mov
push
aaa
pop
xchg
inc
xor
jbe
in
fnstcw
testb
mov
mov
push
js
mov
into
push
add
or
aam
pop
pop
push
js
add
sti
jge
mov
sub
ret
movsl
mov
loopne
mov
rol
cltd
ds
inc
pop
push
test
and
mov
push
rcll
dec
xor
aaa
ficoms
push
xor
and
in
sub
dec
mov
loopne
cld
inc
scas
mov
popf
in
stc
and
cmpsl
dec
inc
push
jle
mov
xor
ja
test
adc
ror
jg
in
fdivp
lcall
mov
int
add
push
loopne
adc
adc
daa
mov
xorl
adc
mov
inc
cmpsb
and
sbb
in
adc
jle
testb
push
fwait
inc
push
mov
jne
jo
dec
inc
cld
push
inc
shrl
sub
repnz
clc
mov
addr16
aas
pop
mov
xchg
inc
jne
xor
icebp
shlb
gs
inc
cmp
inc
dec
pop
pop
les
pusha
and
into
imul
int3
jns
imul
inc
outsl
loopne
add
lds
sbb
add
jae
pop
xchg
pushf
xchg
test
adc
sub
cmp
pop
and
ja
stc
les
int3
mov
mov
cmp
inc
test
dec
push
loopne
cmp
jns
dec
xchg
or
cmp
jmp
pop
inc
dec
std
adc
add
loopne
jbe
cwtl
cltd
xor
jle
out
and
and
add
dec
rcrl
adc
cmp
insl
pop
das
sbb
shlb
fnstenv
loopne
or
enter
pushf
dec
pop
push
and
cmp
sti
in
cmp
add
mov
cwtl
cmp
aad
mov
cmp
push
xchg
fistpll
inc
sbb
leave
push
mov
imul
repnz
dec
mov
loopne
cli
adc
add
add
shl
das
dec
inc
mov
jecxz
jne
insl
es
mov
fisubl
rolb
mov
xchg
nop
aaa
jmp
stc
mov
daa
daa
test
inc
mov
cmpsb
pusha
mov
mov
inc
loopne
mov
fsubl
inc
ffree
mov
add
loopne
iret
mov
insl
or
fsubl
pusha
inc
push
popa
or
loopne
mov
xchg
jg
insl
aas
mov
inc
pusha
and
orb
shlb
xor
fistpll
mov
and
cmpsb
inc
add
insl
mov
and
dec
mov
loop
mov
pusha
mov
jnp
lcall
and
repz
dec
or
mov
icebp
into
inc
mov
xchg
out
mov
inc
cmp
cmp
int3
fbstp
popf
pop
pushf
dec
xchg
pusha
xchg
inc
jg
pusha
mov
push
add
mov
pop
int3
dec
ss
cmp
and
fsubr
hlt
out
pushf
mov
out
adc
inc
nop
xchg
in
addb
inc
mov
andb
pop
dec
cmc
lock
repz
addb
nop
dec
fnsave
pusha
rolb
and
ret
pop
sti
mov
repnz
loopne
gs
movsl
push
xor
imul
loopne
xchg
xorb
rclb
mov
xor
fcmovne
jns
push
lretw
addb
dec
jo
ss
xchg
mov
pop
sbb
loope
fwait
and
xchg
lret
mov
gs
les
rclb
mov
cmpb
add
scas
loopne
add
loopne
popa
rorl
and
cwtl
cmp
shlb
je
daa
fwait
sahf
js
mov
and
mov
pop
inc
and
jnp
cmp
rolb
loopne
jno
cli
pop
pop
imul
faddp
adc
lds
mov
fcomip
and
inc
xchg
dec
ljmp
leave
pop
xchg
fs
jo
ret
cli
mov
mov
and
pusha
pusha
movb
and
dec
scas
and
shlb
mov
inc
subb
cmp
cmp
add
push
mov
int3
sarb
xchg
rolb
add
jmp
pusha
out
lock
cmpsl
ljmp
loop
shlb
fstpl
jecxz
push
test
shl
cmp
pop
sahf
sub
lds
inc
loopne
push
cmpl
cmp
add
and
jge
mov
sub
lcall
add
movsl
sbb
mov
sbb
add
add
insb
daa
mov
mov
and
push
loopne
pop
fisttps
and
in
and
push
inc
sbb
or
shlb
lods
loopne
mov
jl
mov
xchg
inc
clc
lahf
sub
loopne
lock
cmpl
mov
mov
pop
in
xchg
lcall
xchg
iret
add
sbb
test
and
call
out
sahf
mov
stc
imul
test
and
mov
or
rcrb
insb
xor
dec
cmpsb
and
xor
inc
movsl
aam
and
loopne
mov
pop
jmp
push
out
and
inc
loopne
sbb
into
sti
jns
out
stos
mov
mov
inc
roll
adc
test
add
inc
shr
inc
mov
jae
test
loopne
sbb
outsl
sbb
rcrl
nop
push
insl
jae
jp
pop
and
ja
testl
sti
pop
dec
rcr
insb
or
inc
fs
mov
lcall
and
jmp
hlt
fldenv
insl
mov
lea
cmp
mov
pop
arpl
inc
loopne
popa
xchg
inc
lds
inc
xor
je
jmp
in
loopne
jl
xchg
arpl
insb
xchg
out
xor
cmp
push
adc
loopne
xchg
dec
inc
xor
xchg
into
jecxz
iret
xor
mov
std
cmpsb
add
fcoms
add
add
rcrb
adc
inc
mov
jl
cmp
inc
xchg
cmp
jbe
rolb
mov
mov
pop
xchg
jns
popa
cmc
pop
rorl
out
dec
js
pop
pop
rorl
lds
push
popf
sbb
loopne
arpl
call
fildll
inc
inc
push
sub
popw
jo
sbb
jle
mov
mov
inc
mov
movsb
add
ret
lahf
popa
adc
rolb
setae
xor
rolb
push
cltd
xor
dec
jg
xor
loopne
jge
pusha
add
mov
movsl
jo
fdivrs
add
pop
jo
add
or
mov
or
notl
clc
shll
sub
and
and
and
rcll
mov
in
cmc
shrb
adc
test
mul
out
lcall
pushf
sub
loopne
loopne
sub
leave
and
inc
sar
cwtl
add
pop
rorl
les
repz
mov
addb
sbb
or
fidivl
insl
in
int3
shll
xchg
sbb
nop
cmp
pusha
movsl
fwait
nop
and
inc
ds
loope
add
mov
rcl
sarl
fs
cmpsl
pushf
cmp
or
pusha
sarb
add
mov
js
mov
aaa
jp
call
add
add
inc
in
ljmp
adc
insb
jl
xor
movsl
das
xchg
movsl
fsubrs
out
loopne
aad
aad
movsl
cmc
or
inc
ja
shlb
test
pusha
mov
pusha
cmp
loopne
push
or
loopne
andb
mov
in
daa
or
and
addb
lcall
shrb
shrb
repnz
mov
in
sub
jns
jne
mov
andb
sbb
mov
dec
push
add
divb
hlt
push
inc
loopne
lcall
inc
and
sarb
mov
xchg
cs
inc
lret
xchg
cmp
push
fadds
adc
cmp
push
cmp
xchg
pop
jb
push
push
xor
pusha
loopne
sub
inc
rclb
inc
loopne
insl
pop
or
xor
sti
mov
adc
pop
or
and
pusha
addb
loopne
rolb
lea
nop
js
pop
jmp
lea
rolb
mov
add
mov
adc
inc
mov
insb
xor
outsl
ficompl
shr
fdiv
and
mov
lahf
cmp
inc
shrb
jecxz
divl
jp
adc
scas
pop
mov
mov
scas
loopne
push
pusha
push
fwait
sub
adcb
rorb
lcall
cwtl
adc
pop
inc
dec
leave
lds
aas
cmpsl
in
adc
push
dec
and
mov
push
popa
push
insb
int
mov
cmpsl
insb
in
jle
push
pop
daa
shrb
outsb
add
and
mov
out
out
mov
inc
pusha
ret
jl
xchg
ja
pop
mov
sbb
test
add
andb
pop
and
add
andl
js
fstpt
mov
inc
and
inc
mov
in
push
cltd
addr16
lock
pusha
cmpsl
sbb
sub
xchg
in
mov
inc
icebp
add
rolb
shlb
test
jb
mov
loopne
add
and
mov
jle
dec
jge
cmp
or
add
int3
xor
mov
push
mov
mov
test
daa
adc
add
dec
test
rcr
and
cmp
out
mov
imul
inc
mov
dec
fnsave
addb
push
dec
add
pop
or
mov
scas
rolb
cmp
pop
je
test
mov
and
push
pop
cmp
pop
lods
cs
pusha
in
xchg
movsb
loopne
jle
dec
dec
notb
xchg
jge
mov
popf
inc
xchg
inc
aaa
jns
mov
loopne
mov
loopne
adc
repnz
pop
and
pusha
lock
adc
andb
fs
inc
rcr
clc
or
enter
shrb
and
mov
cmp
ror
xchg
xlat
mov
and
cmp
sti
fdecstp
fnsave
mov
lcall
add
hlt
fs
cltd
pusha
sbb
mov
jecxz
lret
in
sbb
loop
sbb
les
and
fmuls
xor
fs
mov
ret
mov
push
and
inc
es
scas
inc
inc
cmp
test
lock
add
loopne
jge
out
test
loopne
add
add
rolb
push
mov
pusha
jmp
cwtl
inc
int
sub
shlb
in
xor
mov
das
adcl
rcrl
jp
cs
shlb
add
cmp
es
add
loopne
or
mov
lret
je
mov
xchg
cmp
rcrl
in
sub
ret
push
movsb
add
mov
mov
loopne
xchg
mov
sbb
dec
add
xchg
dec
and
jno
andb
mov
movsl
inc
dec
xchg
fimuls
xchg
ss
push
and
cld
sahf
or
and
pop
cmpsb
mov
imul
out
sub
mov
inc
stos
and
and
loopne
outsl
pop
pop
fmull
xor
sub
imul
in
les
loopne
das
jmp
and
mov
push
mov
push
ljmp
xchg
mov
mov
lea
test
rol
jno
mov
test
push
adc
addb
push
sbb
stos
cli
add
pusha
enter
lahf
out
mov
ss
mov
and
in
addr16
popl
std
mov
pusha
rol
daa
mov
adc
popl
mov
out
jle
sbb
das
aas
jmp
mov
add
mov
cmp
out
or
jle
dec
je
mov
mov
mov
ljmp
cmp
or
cmp
push
or
loopne
clc
xor
leave
mov
sbb
loopne
add
adcb
stc
inc
movsb
and
push
pop
loopne,pn
adc
mov
add
loopne
out
mov
ret
or
int3
mov
fmuls
mov
arpl
std
ret
clc
sti
pop
aam
and
adc
int
mov
pusha
mov
push
shlb
cwtl
fcoms
xchg
aaa
loopne,pn
ret
inc
mov
in
in
xor
cmpsb
pusha
inc
loope
out
add
addb
aaa
in
in
pushf
fldl
add
mov
xor
xchg
push
and
test
mov
rolb
pop
out
cmp
sub
sbb
ds
dec
ljmp
inc
adc
loopne
fldln2
in
leave
cli
shl
xchg
and
inc
lock
pop
push
cmp
ret
daa
shll
xchg
cwtl
mov
loopne
sub
adcb
fwait
mov
call
inc
sahf
mov
add
inc
les
pop
xor
addb
mov
int
jne
int
cmpsl
mov
and
loopne
and
clc
dec
flds
and
push
add
dec
ds
loopne
sub
loop
dec
cmp
xchg
and
loopne
insl
sub
pop
fsub
or
loopne
inc
mov
pop
loop
mov
aad
dec
imul
out
loopne
js
lret
test
in
adc
jg
push
jne
sub
subb
and
insl
and
ret
lods
je
aaa
lcall
pop
aaa
xlat
fwait
dec
mov
sub
mov
push
mov
out
jbe
stc
ds
or
aaa
or
inc
maskmovq
notl
xor
sub
loopne
icebp
loope
jns
gs
addb
jb
mov
cmc
sub
mov
shr
test
mov
jae
cmp
rcr
push
or
jb
test
inc
pop
addb
cmpsl
ret
stos
and
sahf
and
xor
xchg
and
movl
push
and
sbb
cmp
loop
xchg
inc
int
fldl
or
loopne
xchg
out
dec
push
add
and
mov
loopne
jb
aad
add
mov
and
outsb
pop
mov
adc
dec
add
std
and
cmp
test
add
mov
andb
inc
sbb
sub
imul
xlat
jmp
mov
popf
sbb
push
loopne
push
aas
mov
mov
push
sti
ja
ret
divl
addb
mov
loopne
sub
loopne
cltd
cmp
dec
loopne
outsb
sti
xchg
popa
sbb
ret
rcrl
pop
inc
pushl
mov
imul
sub
cld
add
add
xchg
mov
rcl
jg
cwtl
imul
addb
add
cmp
addb
pop
mov
add
cwtl
loopne
jne
cmp
sbb
xorl
push
fstpt
adc
inc
mov
stc
cld
mov
imulb
or
and
adc
or
mov
scas
pop
jl
push
xchg
mov
hlt
pop
mov
pushw
sbb
rclb
xchg
jp
insl
aaa
rcr
rolb
mov
loopne
fwait
addr16
push
insb
cmp
adc
add
test
inc
cmc
and
repz
and
add
jns
push
andb
cmp
push
inc
push
cmp
fisttps
sub
adc
out
pop
in
pop
xor
pusha
loopne
mov
sbb
lods
rolb
ret
or
pusha
dec
rep
dec
arpl
je
and
fwait
xchg
out
mov
add
pminub
rcrl
or
mov
and
and
loopne
xchg
jp
jns
jo
mov
incb
add
cmp
lods
loopne
repz
xlat
jb
push
adc
push
add
loopne
shlb
and
cmp
lsl
inc
leave
pushf
stc
into
jmp
out
mov
mov
and
aad
clc
sbb
nop
jbe
dec
cltd
fmuls
inc
xchg
fldenv
inc
rorb
clc
pop
jbe
lcall
rolb
mov
add
cwtl
int
push
add
lahf
mov
shrb
out
push
fstps
loopne
jns
shlb
add
rolb
push
fsubrs
xor
int3
push
int
imul
sub
pop
mov
mov
andb
ret
shrb
and
sub
mov
inc
mov
xor
or
add
mov
pusha
loopne
enter
pop
push
xchg
push
cmpsl
scas
loopne
xor
sar
or
ljmp
fs
push
push
movsl
imulb
cmpb
fs
or
mov
andb
ret
cltd
mov
ljmp
push
loopne
inc
xchg
fsubp
xchg
add
rorl
and
xchg
lock
dec
jne
subl
dec
frstor
lret
inc
test
add
leave
jo
pop
icebp
stc
push
pusha
mov
rolb
and
inc
cmp
shl
jmp
sub
mov
repz
mov
adcl
jbe
or
sub
inc
mov
loopne
push
xor
loopne
inc
lcall
cmp
outsb
mov
mov
scas
pusha
pusha
cmc
or
loopne
fs
loopne
mov
fistpll
mov
iret
mov
and
and
jl
mov
mov
mov
adc
push
xor
ljmp
add
pushf
sub
push
inc
bound
fucomp
push
pusha
and
pusha
inc
jp
mov
movsb
mov
icebp
pop
or
jno
mov
pusha
ljmp
popa
insl
ja
xlat
sub
das
cmc
add
dec
shlb
jns
insl
stos
pop
cmpsb
pusha
pusha
cmpsl
add
cwtl
cld
iret
outsb
sbb
mov
xchg
mov
loop
inc
sbb
adc
repnz
stos
insl
js
clc
mov
xor
sub
add
pop
int3
push
and
nop
pop
xorl
cmpsl
call
push
sti
mov
jbe
in
jbe
in
and
or
add
loopne
adcl
and
pop
stos
mov
pop
cmp
xor
loopne
adc
in
rcll
dec
pop
mov
push
cmp
loopne
rolb
in
repz
ucomiss
inc
cmpsl
cltd
push
shlb
ret
dec
adc
enter
add
cmp
dec
test
inc
mov
sub
and
stc
test
lea
lods
lods
jo
xorl
aas
xchg
and
mov
dec
push
mov
add
push
mov
ret
dec
jecxz
and
enter
ds
push
ljmp
loopne
mov
sub
mov
xor
add
and
inc
orl
decb
pusha
add
rolb
xchg
add
out
lds
mov
mov
jmp
orl
imul
mov
inc
and
jbe
mov
add
leave
and
loopne
fstl
stc
shrb
pusha
out
mov
shlb
fnstsw
test
out
jecxz
mov
inc
cld
jb
sub
and
mov
cltd
inc
mov
fstpl
loopne
cli
adc
fcompl
add
inc
rolb
and
add
push
loopne
outsl
xchg
lahf
or
shrb
lret
bnd
lea
pusha
and
aaa
stos
ret
outsb
fcmovne
sbb
mov
mov
fcmove
cmp
rol
cmpsb
mov
insb
inc
and
pop
jb
jo
filds
sti
out
icebp
push
cmp
push
out
xchg
shlb
inc
add
mov
xchg
pop
jmp
mov
andb
xchg
cltd
jne
push
daa
adc
in
mov
pop
jecxz
xchg
loopne,pn
movsl
stc
xor
repz
sub
loopne
push
mov
sbb
in
aam
xor
addr16
cmpsb
andb
addb
cmp
add
push
mov
or
inc
pushf
push
aaa
iret
std
or
jge
stc
and
push
inc
shrl
push
and
shlb
adc
lahf
andb
popf
std
andb
mov
repnz
test
cwtl
adc
inc
fwait
mov
fwait
test
subb
inc
push
mov
mov
adc
jl
insl
loope
mov
out
pop
xor
add
pusha
adc
loopne
or
push
pop
xchg
bound
add
cld
jmp
push
jnp
lahf
push
lds
lret
jecxz
adc
or
mov
xlat
jae
dec
push
and
rorl
jmp
dec
aas
mov
aad
add
sar
lret
or
cmp
lds
pusha
cs
ja
inc
jle
push
push
add
and
andb
xor
xchg
int3
addb
test
and
mov
fistl
xchg
andb
gs
fiaddl
inc
std
shlb
andb
js
push
push
pusha
inc
insl
test
daa
jle
mov
and
xor
pusha
loopne
mov
inc
aaa
pop
xchg
cmp
hlt
mov
addb
dec
sub
fisttpll
mov
shlb
shll
rolb
mov
shlb
push
push
rolb
fs
sub
jo
imul
jge
adc
out
cmp
shll
pushf
scas
and
enter
sahf
sub
pop
insl
and
loopne
xor
pusha
shrb
and
test
inc
insb
dec
ja
cmc
fldl
xor
pop
in
loopne
dec
lcall
sahf
jne
leave
lahf
cvtdq2ps
cmp
out
push
andb
rcrb
mov
xor
inc
and
add
inc
scas
sbb
inc
and
cmpsb
mov
pop
fisttps
popa
div
ljmp
psubsw
and
inc
push
ret
dec
fbld
in
and
sub
cli
cwtl
xchg
outsl
fadds
adc
push
popf
pop
xchg
inc
lock
add
cld
sahf
dec
dec
pushf
popa
mov
sbbb
and
pop
jbe
push
xchg
mov
jnp
inc
add
ret
and
loopne
jae
ret
cmp
cmp
xchg
jg
inc
into
xor
inc
movsl
movl
mov
mov
andb
xor
rcrb
aam
in
out
dec
push
movsb
andb
daa
cmp
and
inc
stos
add
shl
sub
loopne
push
jge
aas
mov
stos
mov
or
mov
add
fwait
mov
xchg
dec
and
inc
int
popa
mov
pop
cltd
ret
sbb
mov
mov
or
sbbb
add
leave
andl
pushf
jae
imul
mov
sub
lock
subb
mov
icebp
xor
inc
cld
mov
mov
inc
inc
call
jb
addb
ja
add
and
xor
fimuls
add
jl
xchg
outsb
mov
pushf
mov
cmp
sub
inc
fwait
shlb
push
ret
ret
inc
mov
pusha
shlb
outsl
hlt
pusha
mov
adc
sbb
sbb
sarl
mov
mov
ljmp
push
lcall
mov
arpl
xchg
cmpsl
push
loope
incl
bound
mov
shlb
in
inc
add
insb
aaa
dec
xchg
in
inc
dec
addr16
push
addr16
shrb
jne
push
addb
inc
jge
xchg
outsl
sbb
push
shlb
inc
cmp
dec
mov
jns
jbe
or
adc
rol
shl
lods
aam
mov
imul
lods
loopne
pusha
iret
and
mov
sbb
pop
jae
xor
add
push
add
and
jle
loopne
testl
dec
fucom
mov
jecxz
ss
stos
dec
add
jbe
test
pop
inc
and
movsl
pop
dec
jb
loopne
mov
jb
cltd
negb
shll
and
inc
gs
inc
ljmp
loopne
mov
into
roll
stos
aas
mov
cmc
mov
clc
mov
add
inc
pop
int3
fists
ret
lea
mov
mov
insb
outsl
sbb
or
repnz
adc
dec
mov
fnstsw
and
add
xchg
cmpsb
loopne
push
loope
out
fucom
push
xchg
pusha
insb
std
jecxz
popa
test
dec
pushf
fcmovbe
stos
mov
rcl
lock
adc
loop
push
xor
je
fwait
daa
adc
jp
dec
cltd
or
scas
imul
in
xchg
loopne
stos
pusha
andb
xor
or
mov
pusha
and
mov
lods
add
jb
jl
inc
pop
sub
out
jns
mov
inc
xchg
shll
push
shr
cmp
mov
add
mov
push
outsb
cmpsb
mov
mov
pop
mov
out
cmc
add
pusha
test
add
inc
ja
out
push
rclb
mov
mov
xor
lds
xor
jne
pop
push
das
data16
and
and
andb
lea
jno
mov
push
andb
xor
ret
clc
sub
add
or
mov
jle
mov
or
pusha
mov
jge
lret
rcl
pop
mov
fbstp
mov
push
pusha
popf
push
into
daa
xor
add
inc
int
dec
pop
lods
shl
lock
cmp
cmovae
inc
add
pop
cmp
sbb
ret
lret
test
shr
sbbl
cmp
addr16
and
add
shrb
fmuls
mov
and
aaa
loopne
inc
jno
inc
cwtl
test
jmp
add
and
jge
mov
jne
push
rol
jns
scas
ficompl
inc
pusha
pop
fld
cs
pusha
pushf
mov
mov
adc
mov
call
jecxz
xchg
and
stos
and
inc
es
xorb
pop
add
sub
shr
scas
shlb
xchg
sbb
push
cmpsl
ljmp
pusha
loopne
je
xchg
and
inc
add
fildl
cmp
shrl
in
fs
mov
cmp
ret
cli
xchg
and
clc
xchg
data16
shrl
in
scas
pusha
mov
andl
addb
shufps
mov
lret
pop
pop
test
lcall
test
cwtl
sahf
pop
dec
rorl
loopne
mov
hlt
stos
and
jb
pop
push
sub
mov
and
imul
mov
or
das
add
arpl
add
stc
inc
xchg
and
add
pop
lods
or
sub
pusha
sbbb
lock
mov
mov
sbb
addb
fcmovnu
out
cltd
stc
cltd
sbb
xor
add
inc
or
inc
sldt
andb
loopne
sahf
ljmp
sbb
xchg
push
rclb
xor
shrl
divl
shll
mov
sbb
loopne
pop
jge
ss
gs
mov
or
mov
pusha
push
negb
xchg
sub
loopne
add
arpl
add
in
inc
imul
xor
scas
rolb
loopne
je
rclb
loopne
ror
or
and
dec
or
pop
or
cwtl
in
jl
inc
and
add
andb
pop
jle
out
push
pusha
add
mov
add
shl
and
inc
push
push
ja
repz
je
inc
loopne
dec
cwtl
test
inc
loopne
jecxz
jecxz
xchg
pusha
or
dec
fwait
mov
rcrb
mov
lock
lea
mov
out
stos
loopne
lcall
dec
fmulp
push
aad
mov
addb
xor
add
pushf
sub
pusha
push
inc
andb
inc
shrb
push
jns
in
ds
mov
addr16
andl
and
ds
pop
mov
outsb
test
mov
inc
fcomi
mov
addr16
shrl
out
imul
jmp
push
out
cmp
jbe
adc
ds
xchg
sub
arpl
push
leave
js
addr16
add
sbb
pop
cld
rolb
cli
push
loopne
mov
adc
mov
fnstsw
hlt
ret
mov
dec
push
clc
push
cmpsb
addb
fs
inc
adc
push
inc
add
mov
push
add
scas
loopne
xor
cmp
addr16
cs
push
sub
add
loopne
jmp
inc
cmp
shll
in
out
jo
push
adc
mov
cmp
imul
add
cmp
jno
add
daa
sahf
add
pop
js
pusha
mov
cmpsb
mov
pop
je
js
xchg
js
sub
adc
andb
outsb
mov
xor
sarb
mov
inc
aaa
mov
sti
xor
inc
lods
loopne
cwtl
js
repnz
mov
xchg
mov
xor
pusha
shrb
mov
push
stos
inc
inc
or
shrb
ficoml
leave
ret
jmp
mov
or
xchg
pop
and
scas
add
scas
mov
cmc
mov
repz
test
inc
and
add
adc
imul
xor
cmp
add
lahf
mov
mov
or
das
sub
insl
pop
fdivl
mov
jmp
add
and
and
andb
mov
mov
sbb
push
dec
lods
or
push
jne
cld
jb
xor
sub
mov
xorb
push
inc
repnz
cmc
mov
sbb
jo
fwait
and
shlb
fldenv
out
adc
stc
fldenv
shlb
sub
ss
jnp
mov
push
mov
loop
inc
inc
ret
loopne
dec
and
pop
jg
cmc
cmp
and
mov
and
fs
addr16
cmp
loopne
jg
jg
out
adc
dec
jo
sub
das
movsb
and
addb
das
fbld
into
fisttps
data16
loopne
test
pusha
dec
lods
addb
lret
pushf
push
je
jmp
dec
faddl
lcall
out
aas
testb
add
and
subb
cmpsb
add
dec
mov
rolb
mov
test
test
addb
xchg
mov
das
push
mov
loopne
pop
jecxz
lds
in
push
jne
inc
cmp
mov
pusha
and
out
sbb
rcrb
sub
add
adc
fs
xchg
into
lret
dec
pop
movsl
in
shll
jmp
lds
cwtl
fildl
adc
pusha
inc
rcrb
loopne
pop
pop
adc
cmp
jno
xchg
sub
pusha
sar
into
pop
in
lret
rcrl
cmp
cmp
dec
push
idivb
adc
sub
pop
negb
mov
or
insl
inc
leave
and
loopne
inc
fcomps
add
lods
and
lret
mov
inc
add
push
inc
jno
jbe
or
inc
pop
cli
or
loopne
ja
mov
out
and
sbb
mov
jb
mov
fcmovnb
push
inc
pusha
adc
neg
clc
push
dec
adc
cmp
mov
pusha
scas
inc
inc
xchg
push
pop
mov
jae
out
mov
and
loopne
cmpsb
inc
rorb
stos
mov
int
or
cwtl
loop
les
xchg
sbb
add
dec
adc
push
fiaddl
shlb
push
xor
dec
mov
mov
mov
fcomp
jmp
inc
je
arpl
enter
rolb
pusha
add
jne
inc
ret
in
sti
add
rclb
lods
jno
insl
sub
jle
data16
push
jne
aaa
std
ficoms
sbb
dec
aad
dec
inc
aaa
sub
or
fisttpll
xlat
test
add
arpl
subl
stos
sbb
xchg
aas
in
push
and
mov
xchg
add
loopne
lcall
mov
push
outsl
xor
xor
or
pop
cld
sbb
adc
and
ror
ret
jb
cld
sub
shrb
shrb
arpl
movsl
push
lret
pop
jno
inc
fiadds
jns
ds
inc
fistpl
mov
cwtl
scas
sbb
xchg
mov
jns
cmp
push
xor
push
mov
mov
push
xor
addb
sbb
andb
xchg
inc
jl
rolb
pusha
mov
or
sar
or
repnz
jmp
pop
sub
adc
lock
pop
jg
lret
pusha
add
mov
push
loope
dec
insb
cmc
clc
and
add
fucomi
mov
and
pusha
andb
dec
fldt
inc
jg
rolb
and
add
aad
jmp
pop
mov
mov
inc
pushf
insb
and
add
lods
pusha
pusha
sub
lahf
inc
pop
mov
dec
pushf
jnp
and
pusha
mov
arpl
jp
inc
sbb
jl
lret
shl
push
fsubr
pop
sub
inc
fbstp
dec
jb
rclb
out
pop
sub
inc
in
test
int
imul
mov
add
es
xor
in
pop
xor
into
jno
inc
bound
fcmovnbe
rcr
jg
add
mov
push
push
les
add
rorb
insl
xchg
inc
loopne
fists
mov
sbb
and
or
inc
mov
stos
jne
je
je
popl
inc
mov
hlt
sub
mov
xorl
inc
xor
mov
and
stos
addb
push
inc
mov
loop
or
and
adc
adc
stos
nop
add
rolb
mov
add
fsubrs
fisubs
rorl
aaa
pop
out
js
push
xchg
sub
jbe
data16
mov
and
lods
cmpsl
sbb
jbe
ret
pop
push
and
loopne
sahf
dec
fbld
add
and
sbb
xchg
lcall
cli
out
movsl
sub
add
push
popf
cwtl
and
loopne
fldcw
movsb
inc
rolb
loopne
add
subb
in
psadbw
sbb
dec
xchg
mov
cmp
lods
loopne
xchg
lods
mov
loopne
fcompl
popl
rol
ja
mov
cmp
loopne
mov
jno
push
lret
mov
lods
inc
pusha
outsb
mov
add
mov
shl
lods
andb
pusha
loopne
frndint
repnz
add
xrelease
fucom
mov
and
cmp
imul
fdivl
fisubl
test
inc
and
mov
loopne
shrb
push
adc
scas
and
jno
or
inc
mov
inc
sub
pop
outsl
scas
jae
mov
std
sbb
pop
fldenv
adc
xchg
ja
dec
jnp
dec
imulb
add
and
and
and
or
jnp
testl
jns
mul
lahf
add
xor
mov
push
push
addb
add
and
mov
mov
insb
shll
or
sbbb
lock
lock
mov
mov
jno
sbb
jae
loopne
cmp
sti
push
mov
rcl
jb
add
lds
pusha
cmpsb
rolb
pop
push
pop
add
cmp
add
adc
pusha
pop
out
push
cmp
adcb
in
jg
lea
lods
loopne
xor
jns
fwait
imul
mov
movsb
inc
loopne
inc
cmp
negb
jae
inc
lods
pop
push
negl
loopne
scas
pop
fisubl
add
sbb
xor
push
mov
nop
lds
sub
add
rorb
scas
loope
andb
shrb
pusha
mov
scas
mov
int
icebp
cmp
loop
jge
insl
lcall
pop
and
inc
mov
loopne
ljmp
cld
inc
into
scas
ja
mov
out
push
rcll
testl
mov
shlb
pop
push
sub
stos
dec
rolb
pop
mov
mov
imul
pushl
and
and
ljmp
pop
push
mov
mov
and
lahf
inc
hlt
cmp
add
in
flds
adc
aam
mov
shrb
inc
shl
mov
pusha
loopne
jge
popf
ds
bnd
mov
lahf
cmc
sbb
and
mov
sub
pusha
loopne
xor
call
xor
aaa
dec
xchg
sarl
push
inc
mov
cmc
or
xchg
ret
bnd
jmp
dec
cld
mov
mov
mov
xor
loopne
cmpl
xchg
add
add
gs
and
mov
out
push
mov
jg
std
jo
in
jbe
jmp
sbb
lods
lret
cmp
into
mov
test
and
mov
loopne
jbe
rcrb
xor
test
loopne
hlt
nop
lods
jge
icebp
insl
and
sub
add
mov
pusha
cld
sub
adcb
cli
stos
inc
loopne
and
cmp
das
or
sti
push
inc
hlt
add
aaa
fistps
dec
hlt
jl
stos
inc
pusha
movsl
adc
cld
cmp
loopne
xchg
push
out
jmp
jo
dec
hlt
xchg
lcall
shlb
sub
hlt
dec
push
std
or
add
lea
inc
add
lcall
inc
jno
cld
and
mov
das
outsl
lcall
scas
xchg
jae
mov
sbb
mov
jae
xchg
sbb
inc
mov
mov
dec
mov
addb
adc
jo
or
mov
sbb
mov
sub
in
add
and
sbb
mov
aam
jecxz
mov
pusha
add
lret
test
sbb
inc
jle
cmp
clc
sbb
in
pop
push
bswap
imul
inc
in
inc
xchg
sbb
lret
add
mov
cmp
gs
add
mov
test
add
test
shlb
bswap
jne
pop
pop
and
and
pusha
rolb
loop
jbe
xor
ja
push
aam
in
loope
mov
inc
sub
out
cmp
mov
inc
push
andb
les
pop
xor
addl
cmpsb
pusha
mov
cmp
xchg
mov
and
pop
mov
mov
add
inc
sbb
fiadds
xchg
push
and
sub
add
neg
cmp
adc
sub
scas
std
push
xchg
test
pusha
movsl
jbe
psrlw
cmp
jg
test
loopne
lds
mov
inc
cs
and
es
and
test
movsb
shlb
push
and
xchg
stos
inc
mov
mov
lods
inc
rorb
mov
pusha
mov
mov
jb
frstor
ret
paddsb
test
mov
pusha
and
cmp
out
jge
mov
arpl
inc
jno
inc
pusha
inc
xor
jns
rolb
rcll
out
adc
cmp
xor
test
and
pusha
cmp
mov
add
dec
sub
cmpsl
push
shl
aad
cmc
xor
inc
pusha
popa
addb
aaa
or
sub
cltd
aam
popa
inc
and
push
and
shlb
push
xor
aaa
push
loopne
movsl
mov
iret
roll
inc
mov
sub
cmpsl
mov
negl
fisttpl
adc
arpl
inc
add
push
cli
xor
xor
shlb
mov
scas
ret
pop
ds
or
add
in
fisttpll
loopne
mov
push
loopne
lock
mov
fwait
cmp
ret
mov
cmp
outsb
dec
loop
js
test
stos
inc
add
daa
mov
push
scas
add
jecxz
call
and
or
and
add
add
int3
jbe
mov
add
jg
xchg
mov
sbb
cwtl
cwtl
inc
push
mov
cltd
push
mov
add
out
adc
dec
test
cld
jle
sahf
jge
pop
das
cmc
jns
adc
and
pop
shrb
addb
jo
mov
adc
dec
xchg
iret
addr16
mov
xchg
shlb
pusha
loopne
dec
negl
cli
jmp
addb
loopne
mov
insb
push
xor
cld
pop
push
lods
xchg
sahf
and
push
mov
add
movsl
cmp
push
loopne
fnstenv
add
mov
xchg
out
int3
push
enter
in
jns
das
ret
cltd
stos
dec
gs
push
adc
xchg
or
es
ret
outsl
dec
mov
sub
adcb
int
addb
push
push
cmp
mov
mov
or
mov
add
inc
pusha
fistps
push
fcoms
and
inc
cmp
iret
push
cmpsw
xchg
pusha
pop
mov
and
mov
pop
jnp
test
pusha
aad
inc
jg
insl
ficoms
mov
rolb
cmpsl
loope
das
in
push
mov
jns
fbstp
ljmp
dec
mov
xor
cmpb
xchg
mov
sub
mov
push
xlat
dec
fisubl
mov
popa
imul
lock
mov
sub
and
pop
adc
lret
dec
adc
loopne
scas
adc
and
test
mov
and
shl
jecxz
in
and
movl
loopne
push
jmp
xchg
stos
loopne
push
data16
mov
cli
ret
jg
inc
repnz
lods
mull
dec
pop
cwtl
in
mul
fldenv
fstl
pop
bnd
sbb
mov
mov
ror
idivb
sbb
push
mov
mov
pop
adc
mov
cmpsb
inc
add
pusha
pusha
out
sar
add
loopne
and
clc
inc
mov
lcall
insl
add
cmp
in
je
jg
cmpsb
mov
xchg
xchg
call
imul
inc
sti
out
fisubs
pop
lea
and
pop
add
mov
pusha
popa
dec
inc
add
pop
or
jbe
and
push
dec
push
mov
and
push
out
insb
sbb
leave
pusha
push
or
or
shlb
or
inc
mov
add
dec
or
pop
ret
lahf
insl
fs
inc
adc
pusha
and
addr16
add
push
outsb
mov
mov
rolb
sbb
test
loopne
mov
cmp
das
sbb
cwtl
pop
stc
out
out
add
mov
jecxz
cmp
in
js
mov
inc
pusha
lock
test
call
sub
xchg
in
adc
mov
loopne
jp
scas
or
mov
repz
pop
xchg
mov
pusha
test
rcrb
js
pusha
subb
rolb
push
inc
add
xor
or
fs
add
cmc
inc
movsb
pusha
add
jae
push
push
sbb
adc
jle
mov
neg
popf
mov
test
cmp
push
loopne
movsl
xlat
fwait
mov
and
out
or
ret
add
mov
ficoms
pusha
pusha
xor
loopne
rep
lods
pusha
and
mov
inc
pusha
xor
aad
mov
add
scas
shlb
push
aad
je
addr16
popa
adc
aaa
xchg
mov
loopne
cld
pushf
xchg
in
cmpsl
and
add
inc
add
in
xchg
inc
mov
lock
shrb
or
divb
stc
lea
movsl
xchg
add
jne
shll
pusha
fwait
pop
dec
daa
mov
shlb
mov
mov
and
addr16
loopne
cmp
ss
rcrl
xchg
sarb
jle
add
mov
mov
pusha
fsubrl
in
or
inc
and
shrb
test
pusha
out
addb
loopne
nop
in
scas
add
scas
pusha
sbbb
sbb
enter
cmp
mov
push
sahf
icebp
in
movsb
inc
add
push
ljmp
mov
xor
or
rcrb
fcoms
nop
clc
jmp
and
fstpt
and
inc
into
and
in
je
mov
ds
add
mov
xchg
push
mov
sbbl
sub
sbb
clc
sbb
dec
adc
add
in
lds
div
mov
mov
int3
adc
pop
mov
and
out
mov
fwait
out
and
xchg
pop
aas
fs
adc
out
sti
cmp
dec
inc
push
add
add
cwtl
pop
rcl
xor
loopne,pn
mov
add
insb
arpl
popa
jl
sbb
sbb
xchg
leave
repz
and
inc
dec
ds
or
pusha
loopne
add
iret
daa
in
mov
pop
adc
pusha
inc
mov
imulb
add
xor
dec
pushf
inc
adc
sahf
int3
into
ficomps
cmc
pop
push
add
pusha
sub
dec
cmpsl
or
and
push
addb
add
pop
cmpsl
int3
sub
out
jle
xchg
cltd
push
sarb
test
pop
and
mov
fistps
sahf
bound
loop
daa
add
ja
and
jae
cmp
lods
lahf
dec
xor
out
data16
push
in
notl
xchg
out
inc
cmp
add
mov
mov
sub
and
jg
stos
and
inc
cmp
stos
cmp
aam
pushf
sub
mov
mov
enter
iret
jg
push
sti
call
sbb
jnp
push
push
fadds
inc
loope
bound
andb
cwtl
pop
sub
cmc
repz
xchg
mov
inc
push
addr16
jg
sub
and
out
xor
inc
shrb
or
fcmovne
dec
cmpsb
mov
fstpl
adc
pop
cmp
sub
inc
adcb
or
and
cmp
lret
mov
ljmp
sub
loopne
pusha
sbb
pusha
inc
cwtl
mov
pop
data16
cmp
sub
and
test
sub
jecxz,pt
mov
dec
rorb
and
lret
push
mov
cld
rol
cmpsb
mov
lds
pusha
loopne
or
add
out
cmp
notl
jl
sub
or
mov
pusha
mov
sub
add
jmp
pushf
fisubrs
mov
jb
inc
and
mov
jg
lret
jnp
or
mov
inc
addb
shlb
pop
imull
fs
fs
mov
push
mov
mov
mov
xor
aad
xor
ds
data16
mov
dec
xor
in
negl
and
sbb
notb
mov
jmp
add
int3
cmpsl
data16
repz
cltd
xor
hlt
push
push
aaa
dec
and
sub
pusha
fs
jne
fldt
inc
and
stos
pusha
loopne
push
adc
add
enter
jns
shrl
pop
mov
jno
mov
inc
lea
sti
scas
and
mov
popf
xchg
mov
and
add
mov
aad
dec
int
cmp
jae
daa
push
lret
jbe
movsl
xor
nop
mov
jmp
in
test
mov
das
into
test
inc
loopne
jb
dec
sbb
addb
add
scas
loopne
cmp
imul
adc
jmp
mov
fldl
pop
cmp
pusha
and
and
sub
mov
mov
ret
ret
iret
pop
loope
jns
es
and
mov
rcl
clc
sub
inc
dec
lret
sarl
mov
js
adc
add
fisubs
fimuls
ror
jbe
xchg
mov
xchg
inc
hlt
lahf
mov
inc
xor
cmp
lods
andb
pusha
rolb
jmp
int3
in
sbb
add
roll
xor
ds
hlt
cwtl
mov
movsb
rol
mov
mov
rclb
notb
loopne
cmpsl
push
dec
and
lods
and
push
aam
ficomps
jnp
mov
rol
push
dec
pop
jb
pusha
mov
rorb
mov
out
lret
aam
add
and
aad
test
mov
and
icebp
andb
sub
and
jno
xchg
push
add
arpl
in
in
or
or
sysret
pop
idiv
cmp
test
mov
push
adc
test
xor
or
sahf
jg
fnstsw
mov
mov
cmp
xchg
rcl
mov
mov
addb
mov
mov
outsb
cltd
scas
inc
mov
inc
pusha
push
test
mov
inc
xor
inc
mov
rcll
call
repnz
repz
mov
pop
adc
shlb
and
adc
scas
and
and
inc
out
jp
fs
pusha
hlt
leave
push
pusha
and
sbb
call
add
fistpl
cltd
adc
shlb
pop
inc
dec
aas
pop
mov
or
fsubrl
fwait
pop
popa
js
and
add
mov
cmp
mov
das
stos
add
xchg
mov
out
shl
fldl
idivl
xchg
mov
hlt
xlat
into
lea
pusha
loopne
sub
loopne
das
push
mov
pop
jp
inc
das
cmpsb
add
das
inc
sub
and
mov
inc
mov
call
mov
imul
loopne
mov
inc
sbb
rcrl
or
negl
test
sarb
mov
stos
mov
rclb
decl
pop
dec
push
shrl
loopne
mov
dec
scas
sbb
aad
imul
jp
jns
rol
in
xchg
stos
ret
inc
jl
and
nop
inc
sti
movsb
mov
insb
and
push
popf
mov
pop
push
mov
outsl
push
inc
sub
and
inc
inc
int
std
mov
test
add
flds
addl
jno
sti
stc
inc
or
scas
test
mov
andb
movsb
shlb
inc
adc
mov
cmp
adc
aad
mov
in
pop
cmp
inc
mov
dec
xlat
in
iret
push
jg
test
and
push
cld
mov
sarb
fsts
push
push
popa
outsb
movsb
addb
addb
addb
popf
pop
sub
or
mov
mov
inc
push
lea
lods
inc
pusha
in
nop
mov
movsb
pusha
and
std
xor
popl
cmpsl
pop
fs
icebp
dec
pushf
imul
add
sbb
les
cmp
rolb
jle
push
fisubrs
xor
ds
or
mov
leave
or
repz
xchg
das
lret
mov
scas
mov
adc
mov
rcrb
cmpl
push
gs
aam
dec
imul
rorl
pop
in
add
jno
aad
add
and
bound
dec
sbb
mov
insb
mov
push
and
sbb
mov
add
or
pusha
mov
add
imul
mov
mov
sbb
testb
jbe
stc
xchg
mov
hlt
xchg
hlt
movsb
rolb
das
jp
fs
sti
xor
inc
movsb
pusha
inc
sbb
push
inc
cmc
inc
outsb
cmpsb
and
hlt
sub
pusha
sahf
mov
mov
pop
sbb
sbb
cmpsb
loopne
pop
inc
movsl
imul
cmp
xlat
jns
sbb
inc
push
clc
pop
push
xchg
fisubs
or
add
pop
cmp
xchg
mov
cli
adc
and
ror
movsl
pushf
fildl
dec
stos
loopne
and
sbb
adc
and
fnsave
push
and
ja
popa
fisttpl
jbe
stos
pusha
xorb
shlb
inc
loopne
mov
inc
ss
call
loopne,pn
adc
popf
xchg
mov
shlb
lret
loopne
jb
fdivrs
jle
lds
sub
loopne
push
fld1
inc
jns
jg
lret
or
mov
dec
push
adc
push
adc
sub
mov
add
aas
iret
hlt
cli
sbb
or
mov
cmp
inc
and
inc
ret
sarl
popf
mov
pusha
data16
mov
jns
arpl
fwait
ror
sti
push
rcrb
sbb
test
inc
push
loopne
dec
andb
lret
mov
aaa
inc
xor
pop
movsb
inc
inc
push
jl
xchg
and
mov
mov
cmovne
and
cmp
rolb
mov
add
sub
stos
mov
lods
add
cmp
adcl
jl
cmpsl
pop
shlb
or
inc
mov
stos
loopne
sbb
test
and
and
cmp
mov
ret
fisttpll
and
enter
aam
xor
sbb
lock
ljmp
punpckldq
sbb
mov
jmp
push
lret
inc
add
and
test
add
mov
mov
leave
mov
push
leave
sahf
push
mov
fdivs
add
xor
mov
inc
lods
mov
cltd
mov
mov
dec
pusha
add
f2xm1
mov
loopne
pop
add
jge
fcmovbe
mov
stos
cmp
xor
mov
pop
cmc
movsb
mov
mov
xor
jg
inc
and
jecxz
inc
in
test
sar
sub
int3
bound
out
mov
mov
rolb
push
rolb
dec
dec
rcr
and
add
and
and
pusha
inc
insl
mov
std
push
inc
mov
pop
pushf
stos
shlb
fildl
das
sub
add
and
loopne
push
and
sbb
stos
add
stos
pusha
loopne
cmp
and
and
int3
fisubl
rol
dec
lods
jns
aaa
movl
mov
adcb
cs
and
sub
and
xor
adc
push
mov
jle
pop
lret
imul
lfs
push
shlb
mov
jae
pop
xlat
in
into
jnp
mov
jecxz
and
and
es
bound
sbb
insb
rcl
fidivrl
rcrl
insb
int
loope
add
ret
cmpsb
inc
mov
mov
dec
jo
loopne
xlat
dec
dec
enter
andb
scas
cmpsb
and
sub
inc
sbb
sub
adc
inc
pop
cmp
or
pusha
in
mov
leave
loope
mov
popa
insl
push
cmp
fdivrs
and
orb
cli
push
pop
in
notl
mov
sub
pusha
push
mov
xlat
fsubr
daa
lret
repz
ffree
lea
mov
mov
xchg
ss
pop
mov
or
loopne
xchg
xchg
stos
pusha
and
mov
loopne
push
and
mov
push
adc
or
andb
out
scas
mov
data16
add
test
mov
inc
loopne
jbe
lock
pop
je
sbb
testb
shlb
scas
pop
and
mov
scas
jns
cmp
lret
or
pop
dec
or
and
add
adc
rol
mov
dec
inc
jl
jl
mov
inc
dec
fstl
mov
mov
mov
loopne
testl
jbe
cmp
sbb
lahf
mov
mov
loopne
test
sbb
mov
push
sub
sbb
add
mov
mov
je
and
stos
int3
arpl
and
imul
cmpsb
and
imul
add
and
shl
imulb
loopne
sbb
fbld
add
add
mov
movsb
and
mov
pop
jmp
mov
orb
roll
mov
jecxz
jnp
dec
adc
cmp
int3
test
and
xchg
cmpsl
cmp
mov
jnp
gs
mov
nop
sbb
adc
ss
jbe
inc
add
stc
mov
mov
and
test
sub
pusha
int3
outsb
arpl
pop
add
pop
popa
pop
insb
rcrl
test
inc
daa
pushl
pop
add
and
mov
rolb
and
inc
imul
ret
lret
add
movsl
test
out
iret
les
stos
xor
add
loopne
ds
stos
addb
xchg
cmp
and
or
push
and
rcrb
lods
out
push
jo
test
inc
dec
gs
jae
lahf
pusha
mov
push
push
ds
testb
insl
js
out
xor
and
cmp
mov
fcmovne
out
pop
repnz
mov
and
inc
stc
inc
jle
inc
sarl
sub
pusha
dec
ljmp
jg
mov
scas
inc
inc
jb
aas
sarl
inc
sbb
pop
pop
fwait
fs
out
andb
test
push
and
push
inc
orb
shll
rolb
shrl
test
pusha
stos
loopne
enter
shrb
ret
int3
adc
mov
dec
stos
ror
push
push
sbb
jecxz
stc
or
rolw
jbe
and
jno
inc
add
lods
je
cli
outsb
adc
nop
or
mov
subb
inc
js
iret
sbb
push
mov
jmp
scas
add
lods
mov
cmpsl
and
std
mov
and
pop
push
add
sbb
lods
xor
ds
aas
int
inc
frstor
rclb
mov
daa
sub
pusha
mov
pusha
rorb
mov
in
in
inc
in
call
mov
int3
and
pusha
mov
and
mov
hlt
out
add
mov
pop
rcrb
xchg
cmp
jge
pop
mov
outsb
add
std
in
cwtl
out
or
pusha
popf
inc
addr16
xor
inc
pop
mov
shlb
inc
shlb
pop
sbb
mov
add
mov
rcll
and
xorb
mov
iret
sbb
inc
loopne
mov
mov
jnp
pusha
in
out
aam
or
outsl
sahf
sub
loopne
arpl
pop
mov
ja
mov
cltd
sub
sbb
pusha
pusha
mov
loope
pminsw
push
or
push
push
shlb
shlb
mov
xchg
shl
and
pusha
lret
aam
pop
std
sbb
dec
jle
loopne
aad
mov
js
sub
rcr
pop
jae
stc
leave
push
mov
loopne
mov
shlb
and
xchg
stos
shlb
and
and
inc
jg
add
pusha
je
out
cmp
push
mov
andb
cwtl
arpl
in
arpl
sbb
inc
out
or
inc
mov
test
mov
sbb
mov
push
shlb
icebp
nop
pop
add
and
fdivrs
mov
mov
sarb
divb
inc
mov
inc
int
push
add
cmc
lcall
push
sub
inc
stc
enter
mov
shll
jge
dec
into
in
jp
xchg
repz
lret
lods
daa
dec
sbb
and
and
add
mov
icebp
mov
in
mov
adc
and
icebp
cmpsb
inc
shrb
push
add
rcrb
pushf
lret
je
push
out
lods
shlb
mov
push
inc
push
and
pusha
int
sub
rolb
adcb
fdivrl
loopne
add
loopne
cmp
xor
lods
movsl
pop
jns
mov
or
cmp
std
lret
bound
cmpsl
aas
stos
rcrb
or
and
adcb
aas
xchg
cli
daa
in
das
mov
stc
in
jne
popa
dec
daa
mov
inc
lret
dec
mov
shlb
clc
push
add
dec
rclb
and
mov
mov
add
mov
jge
pop
mov
call
cli
repz
shlb
outsl
pop
addr16
out
stos
mov
xchg
xchg
loope
xor
data16
cli
loop
andb
xchg
test
xor
fcoms
aad
xor
cmpsl
cmp
mov
stc
push
dec
xchg
out
psllq
adc
add
aaa
add
faddl
sub
pop
sbb
fdivl
and
jns
fcoml
dec
cmpsb
andb
push
xchg
inc
rcll
mov
lret
aam
andb
inc
pop
test
inc
mov
int3
fldl
and
rolb
in
xchg
shl
out
adc
out
shlb
gs
scas
cmp
or
sbb
repz
dec
sbb
add
and
shrb
jo
adc
lods
inc
add
rolb
sahf
sbb
mov
pusha
mov
lea
push
cld
xlat
pushf
mov
add
fdivrs
mov
dec
aaa
lock
fdivrs
mov
jbe
shlb
mov
out
push
jle
push
and
mov
push
xor
inc
ja
xchg
add
mov
inc
mov
inc
jl
call
movl
inc
aam
loopne
scas
add
popl
cmp
repz
fnstcw
mov
pop
jp
and
stc
add
mov
repnz
inc
and
and
push
sub
andb
xor
mov
in
mov
add
nop
dec
insl
xchg
jnp
mov
loopne
arpl
popf
les
push
pop
out
sahf
in
add
xchg
and
fsubr
jno
cmpsl
xlat
ja
andb
jbe
data16
pusha
jo
call
mov
add
push
lea
add
fstl
cmpsb
add
or
mov
mov
subps
inc
add
xchg
xor
cmp
sti
mov
add
mov
outsb
mov
std
js
leave
dec
xchg
loopne
outsb
sub
add
std
std
jae
sbb
sub
es
inc
xchg
pop
mov
aad
xor
and
es
inc
jp
hlt
dec
fisubrl
je
mov
sbb
pop
jae
inc
loopne
push
stc
ficoms
and
test
gs
les
lods
popf
not
sti
fsubrl
das
out
addb
sti
push
into
imul
lock
adc
sarl
mov
cmp
xor
add
loopne
mov
sbb
js
cmc
jl
lcall
data16
mov
add
lcall
mov
testb
loopne
or
add
mov
popf
add
loopne
cmpsb
addb
adc
inc
sub
mov
fsubrp
xchg
fwait
sbb
cmp
int
xor
arpl
xchg
andl
and
out
jno
pusha
adcl
fcmovu
ss
and
fidivrl
in
cmpsl
faddl
and
mov
cmc
subl
ret
add
xchg
sub
loopne
add
push
mov
fwait
jmp
xchg
arpl
dec
lret
rol
add
daa
insb
mov
sbb
mov
inc
pusha
adc
push
lds
or
pusha
mov
sub
loopne
push
mov
jge
or
rcrb
cwtl
sub
xor
inc
movsb
pusha
rorb
inc
int
sti
mov
sti
jp
mov
jb
or
xorb
and
sarb
clc
sub
cmpsl
outsb
pop
jnp
add
out
out
push
inc
adc
loopne
sbb
inc
fwait
divl
insb
aad
andb
mov
mov
add
add
popf
and
adc
cwtl
xchg
loopne
xor
and
or
add
jg
jne
mov
mov
sub
gs
mov
jae
ja
inc
in
inc
sti
test
stc
sub
inc
jg
aam
xor
add
dec
fnstenv
inc
and
das
push
loopne
fsubs
or
stos
sub
std
out
pop
or
add
ss
xor
inc
pusha
leave
fcoml
xchg
cmp
mov
pusha
imul
into
add
sub
loopne
fwait
repnz
mov
ret
pop
mov
aaa
mov
scas
pusha
dec
sub
rolb
mov
inc
inc
out
stos
push
mov
in
mov
pusha
shrb
inc
sub
pop
pop
adc
movnti
aas
push
mov
pusha
push
cmc
add
mov
jmp
shl
out
scas
add
pop
mov
imul
sub
pop
fstps
rolb
loopne
xor
cmp
push
rorl
lods
mov
sbb
out
addb
inc
lret
aas
ficompl
out
rorl
movsl
push
dec
jg
repnz
jmp
cmp
ret
push
cmp
shlb
jg
and
mov
arpl
and
lahf
dec
fdivs
pop
mov
sub
add
push
inc
and
add
fistps
add
add
xchg
out
adcl
sahf
jbe
fisttpll
push
xchg
loopne
inc
jl
push
into
lcall
xchg
mov
mov
shl
cmp
rolb
repz
pusha
shrb
aaa
pop
je
ss
sahf
mov
jns
mov
cmpsl
push
and
inc
scas
pusha
mov
out
in
mov
sub
inc
or
mov
imulb
push
mov
dec
cmp
fs
hlt
push
dec
pop
sub
into
out
add
pusha
sub
loopne
pop
xlat
lcall
shll
xor
in
sarb
cmp
push
sbb
nop
inc
pop
jae
xor
jp
mov
lret
jle
cmc
jae
ljmp
add
andl
lret
mov
setg
in
cmpsb
pusha
inc
add
push
adc
sbb
inc
scas
out
lock
repnz
dec
mov
and
mov
push
jle
push
inc
mov
add
roll
and
addb
stos
loopne
dec
cmp
mov
pop
in
sub
add
xchg
or
rcr
pop
adc
and
inc
mov
inc
arpl
jg
loope
cmpsl
inc
push
sbb
xor
mov
addb
shl
jp
pop
jl
push
mov
adc
lret
cmp
imul
add
mov
subb
stos
inc
inc
cli
lds
loopne
or
daa
movsw
pusha
lds
add
cmpb
loopne
pushf
into
stos
pusha
add
aam
sti
outsl
xchg
imul
push
dec
jmp
xchg
and
mov
sub
mov
xchg
out
dec
test
mov
cmovs
and
mov
andb
jecxz
fimull
loopne
adc
cltd
jo
add
mov
jge
test
and
cmp
jo
loopne
cli
jo
popa
nop
in
int3
icebp
mov
mov
add
sarb
push
cld
inc
js
pop
shlb
cmp
and
insb
mov
and
inc
addr16
xor
div
and
add
cmp
add
mov
and
pushf
xchg
or
stos
shl
xchg
push
addb
mov
inc
stos
arpl
add
daa
addr16
lods
add
mov
sbb
jno
scas
push
pop
in
mov
xchg
ret
inc
add
shlb
outsl
dec
push
cmp
xchg
out
das
cs
xor
scas
addb
rcr
xchg
push
lcall
loopne
fmull
roll
roll
add
jl
into
mov
clc
xchg
cli
adc
add
xor
lds
fcmovnu
sti
fimuls
and
inc
fucomip
xlat
loope
xchg
dec
adc
and
sbb
xor
add
push
pop
mov
inc
lret
addb
nop
xchg
addb
pop
push
and
sahf
mov
sub
repnz
mov
out
dec
das
mov
loope
sbb
mov
into
adc
sti
or
iret
mov
inc
mov
jbe
andb
dec
and
shrb
ud0
in
pusha
mov
sahf
cmp
aam
inc
ljmp
inc
repnz
cli
xor
push
stc
fs
in
lods
sub
cmpsl
sbb
mov
xchg
adc
int3
sbb
and
push
xchg
dec
mov
sahf
jnp
xchg
pop
jmp
mov
xchg
add
adc
cmp
fcmovb
or
ds
insl
lods
add
add
cmc
stc
adc
jo
dec
pusha
mov
sbb
lods
pop
fcmovnb
sub
addr16
ds
std
mov
pusha
push
inc
lahf
push
mov
push
insl
outsl
idiv
pop
cmp
test
add
pusha
inc
xchg
mov
xor
jmp
andb
loopne
imul
int
jno
adc
loopne
cltd
push
adc
add
sub
or
or
nop
in
ja
mov
aas
test
pusha
mov
add
jle
adc
push
xchg
imul
sbb
clc
fdivl
adc
xchg
addr16
xor
je
icebp
lea
xor
pop
int
jge
icebp
push
push
mov
pusha
out
push
xor
xor
mov
test
pusha
popa
jae
xchg
inc
cmpsl
cs
inc
sarb
cs
loopne
mov
fsub
dec
nop
sbb
dec
push
clc
rorb
es
imul
shlb
lds
fucomip
jb
xchg
mov
inc
add
mov
into
jge
mov
loope
push
int3
cmp
push
dec
xor
andb
loop
xchg
jne
xchg
xlat
inc
add
rorb
test
mov
sar
cmp
jle
sbb
fwait
jae
jp
add
mov
and
xchg
cmpsb
inc
and
mov
mov
mov
pusha
cld
push
imulb
add
ret
movsl
jmp
dec
inc
pop
inc
adc
xchg
or
sub
or
rclb
pop
scas
cmp
pushf
test
and
hlt
adc
call
std
imul
andb
loopne
stc
inc
aas
push
das
jg
lock
inc
add
mov
mov
scas
andb
jno
pusha
sarb
add
pusha
mov
loopne
scas
rolb
fldenv
andb
cli
dec
cmp
insl
dec
or
loopne
fs
pusha
pusha
pop
mov
lcall
adc
pusha
loopne
rolb
mov
cs
and
push
or
inc
cmovne
pop
xchg
lods
xchg
lds
loopne
cmp
push
pop
fiadds
and
xchg
addr16
add
movsb
andb
and
cmp
add
sti
out
dec
mov
rcrb
mov
sub
sbb
jmp
not
fcoml
sbb
xchg
imul
fbld
adc
aam
mov
addb
cmp
add
je
mov
lods
iret
xor
cmp
mov
je
mov
jge
insl
rol
insl
mov
gs
push
pusha
loopne
notb
ljmp
scas
inc
shlb
mov
jne
aam
pusha
and
cmp
and
mov
or
pusha
mov
inc
mov
and
pop
mov
icebp
call
in
xchg
add
lahf
cmp
fldl
mov
loopne
repz
rorb
dec
add
pusha
push
in
dec
aas
mov
pop
out
mov
or
sbb
jmp
in
jp
add
mov
mov
and
mov
and
sbb
cli
stos
add
push
push
ljmp
add
stos
je
add
mov
ja
push
mov
push
dec
in
cmp
lods
pusha
shlb
and
mov
and
mov
or
mov
mov
lea
inc
mov
inc
lcall
rcll
xlat
lcall
das
cwtl
stos
mov
add
add
fnstsw
sub
inc
inc
pusha
and
inc
xor
adc
fcomps
movsb
loopne
nop
lcall
enter
xchg
sar
push
cmpsb
and
cmpsb
loopne
movsl
mov
shlb
jns
movsl
cli
fmuls
dec
or
jne
push
push
sahf
push
addb
imul
mov
push
push
push
add
and
fistl
push
mov
mov
jmp
fwait
pop
movsl
xor
jne
sbb
out
sti
jno
iret
rorl
rorb
insb
cmpl
daa
shlb
pusha
cwtl
xor
enter
pop
pusha
cmp
push
xchg
stos
add
cmpsl
mov
inc
leave
cmp
mov
cli
inc
mov
fidivs
and
inc
stos
and
inc
dec
jae,pt
mov
sar
jnp
sti
sub
inc
loop
pop
and
out
inc
loopne
arpl
popf
jb
mov
ljmp
push
mov
mov
int
adc
cmp
fsubrs
int3
add
pop
out
iret
add
pusha
imul
out
mov
shl
testl
pop
or
rcrb
and
mov
sarb
jne
mov
in
loopne
into
in
adc
stos
pusha
inc
mov
mov
mov
sti
in
outsl
push
push
xor
std
fcoms
lds
imul
in
sbb
loope
dec
xor
jl
out
and
scas
andb
jmp
push
inc
out
insl
adc
xor
push
mov
and
mov
or
mov
mov
dec
scas
andb
sbb
and
call
jmp
imul
and
mov
fisttpll
adc
mov
jmp
push
loopne
add
add
andb
cmpsl
mov
sub
loopne
add
loopne
pop
and
xor
sbb
jp
imul
sub
rolb
rolb
test
stos
jo
push
pop
or
std
sub
mov
xchg
idiv
lcall
pop
xor
orb
and
cmp
xor
xor
xlat
xor
leave
push
dec
loope
loopne
out
xor
jae
mov
loopne
fisttpl
addb
pop
adc
dec
lret
cmpsb
loopne
cmp
sarl
add
or
and
push
hlt
xchg
xor
gs
dec
sbb
mov
insl
les
inc
and
loopne
adc
stc
out
movsb
mov
ljmp
xor
mov
fmulp
mov
addb
jae
pusha
loopne
mov
and
mov
addr16
jg
pop
add
mov
jmp
jmp
or
pushf
inc
lods
addb
inc
mov
push
and
loopne
outsb
ss
dec
call
dec
mov
lret
or
pusha
sbb
adc
inc
jg
andb
pusha
jmp
mov
mov
mov
stos
and
push
cmp
inc
add
add
outsl
fs
jmp
jmp
or
fdivrl
or
mov
leave
jp
cmp
dec
pop
andb
pop
adc
insl
or
jmp
xor
addr16
add
adc
pushf
jbe
incl
and
nop
xor
and
xor
adc
ds
sub
mov
mov
aaa
nop
fs
push
andb
test
jne
cmpsl
adc
shlb
add
rcr
aas
filds
test
movsl
pop
mov
sbb
fiaddl
mov
pusha
mov
jecxz
pop
mov
or
loopne
lock
shl
and
mov
nop
push
in
addb
in
inc
loopne
cli
test
imull
xchg
sub
sar
negl
aad
pop
mov
mov
ror
dec
sub
xlat
xchg
dec
addr16
fcoms
test
je
dec
cmp
cli
imul
in
stc
pop
mov
push
cmc
addr16
cmc
movsb
loopne
and
and
idivb
and
out
and
addb
ffree
mov
add
dec
ja
pop
inc
push
das
lret
lcall
shrl
push
fstl
in
das
sbb
inc
fists
outsl
mov
and
mov
push
xor
jae
stos
cmpsl
push
inc
pop
sbb
fistpl
inc
popf
xchg
sbb
out
fwait
inc
mov
jmp
call
mov
inc
mov
pop
and
sbb
xchg
imul
cmpsb
inc
add
nop
fsubp
stos
add
add
addb
fucomp
divl
push
pusha
pusha
adc
and
mov
mov
inc
inc
or
and
inc
jmp
pop
and
xchg
test
int
jae
jo
adc
les
ja
mov
pop
in
sbb
or
loopne
das
sub
mov
and
push
push
mov
out
ret
jg
cmp
pusha
add
jo
jnp
arpl
push
pusha
add
leave
andb
ret
fidivl
test
bnd
outsb
jecxz
mov
stos
mov
div
stos
rolb
mov
pop
mov
lcall
call
clc
imul
daa
shll
addb
add
inc
rcl
fbld
mov
jnp
inc
dec
sbb
loopne
sub
xor
push
push
andb
sarl
push
fucomp
mov
hlt
jmp
inc
add
pusha
dec
addr16
loope
xchg
lcall
addb
mov
aas
fnclex
jecxz
cmp
pop
jae
mov
shrb
popa
and
adc
add
sbb
les
add
mov
or
push
mov
inc
push
fnstsw
loopne
xchg
mov
inc
pusha
pop
dec
lret
add
sarl
jns
inc
loopne
add
andb
addr16
es
and
incb
xchg
mov
jecxz
xor
repnz
mov
or
mov
fildll
loopne
mov
popa
cmpsb
loopne
loop
dec
pop
daa
mov
test
pusha
add
loopne
xor
loopne
ficomps
mov
add
mov
movsl
idivl
hlt
aaa
mov
aas
rorb
pusha
comiss
fsubs
pop
cwtl
add
and
xor
daa
and
xchg
push
cmp
jmp
imul
aaa
ljmp
pop
xchg
es
cwtl
inc
pop
pop
fwait
or
and
fsubl
mov
insb
jmp
or
shrb
add
loopne
out
cmp
jbe
mov
mov
jns
mov
pusha
pop
mov
jge
xor
fs
or
xchg
sbb
mov
pop
cmp
loopne
cmp
stc
mov
andb
mov
mov
and
and
movsb
loopne
sbb
and
outsl
ret
push
sahf
inc
leave
mov
mov
andb
into
jg
mov
loopne
xor
pop
and
loopne
jmp
and
loop
mov
or
popf
ds
jae
pop
jecxz
jl
and
pusha
inc
fsubl
rcrb
dec
and
jo
addb
loopne
and
dec
fcmovnb
and
adc
inc
pop
and
addb
pushf
test
mov
jne
nop
inc
into
loope
mov
inc
inc
daa
mov
mov
xlat
jp
sbb
inc
rcr
mov
shl
aaa
jne
jno
jne
fnstsw
and
xor
dec
add
outsb
test
test
inc
cwtl
push
rcr
xor
aas
jge
add
and
add
mov
movsl
andb
enter
fstpl
decb
inc
shlb
inc
call
decl
adc
xchg
jnp
jle
and
shlb
mov
lods
and
jle
setp
xchg
sub
test
mov
jo
jnp
sbb
adc
inc
cmc
outsb
in
dec
xchg
loopne
fldt
cmc
push
push
fmull
jp
and
add
lcall
pop
or
stc
sarb
inc
subb
out
cwtl
push
out
and
movsb
rol
shlb
and
jne
add
mov
ret
sub
imul
xchg
pop
cmpsl
push
add
fstpl
inc
inc
inc
jno
ds
add
mov
fldcw
inc
mov
je
pop
xchg
outsl
shll
adcb
cltd
fldl
aas
andb
rcrl
repnz
jne
mov
subl
cmpsb
inc
add
and
mov
mov
bound
sbb
loop
mov
sub
push
pop
inc
sbb
xchg
addb
jg
lea
push
loope
lret
test
add
in
cmp
xor
hlt
inc
call
in
imul
xorb
idiv
push
add
mov
jle
add
xorl
xchg
mov
pusha
add
out
repz
cld
hlt
push
aam
andb
mov
sub
rclb
xor
pushl
dec
jg
inc
pop
orl
cmp
ja
repz
pop
xor
mov
inc
aaa
lds
fcoms
int3
fwait
mov
mov
jae
mov
mov
les
cmc
jg
and
mov
rolb
cwtl
pop
sbb
sbb
dec
or
rolb
inc
stos
inc
rcl
adc
inc
and
shll
mov
addb
outsl
ds
lret
or
pusha
and
js
popf
fwait
xor
or
jae
xor
mov
adc
xor
xlat
push
leave
lods
cmp
mov
or
std
ds
dec
dec
mov
cli
stos
loopne
push
jo
mov
mov
rorb
or
mov
sti
add
shl
xchg
ss
sahf
jbe
sub
cmp
insl
mov
bound
mov
data16
dec
jnp
aas
mov
bound
xchg
mov
push
add
adc
push
outsl
jp
out
pop
loopne
pop
sbb
addb
dec
inc
mov
xlat
sti
mov
les
imul
add
hlt
cld
pop
jo
loop
les
mov
pop
pop
sbb
mov
inc
loopne
arpl
sub
or
lret
bound
sbb
loop
cmpsl
lods
mov
xor
inc
push
loopne
mov
inc
rcrl
imull
add
xor
outsl
pop
and
and
loopne
addl
and
mov
inc
loopne
pusha
inc
in
insb
jmp
inc
pop
pop
pop
pop
push
cmpl
out
mov
inc
cmp
out
mov
push
and
andb
jl
ja
repz
mov
cmc
jnp
inc
mov
sub
pop
xchg
int3
ret
mov
inc
pusha
in
out
fsubs
add
adc
mov
mov
js
jecxz
inc
outsb
and
sub
mov
ret
lea
dec
jbe
jbe
sbb
add
cmp
fnstenv
fcom
xor
sbb
mov
aad
pusha
adcb
imull
and
sarb
jle
add
js
pop
stc
mov
add
add
pusha
and
xor
mov
push
movsl
mov
aam
lock
sub
mov
push
sub
loopne
mov
and
xchg
and
and
loopne
push
sub
out
movsb
inc
inc
lret
ja
dec
inc
in
sbb
fistpll
push
std
test
jmp
mov
pusha
mov
divb
insl
mov
adc
mov
out
jnp
sahf
jae
xchg
test
cmp
push
sub
add
loopne
fdivrl
add
or
inc
in
inc
add
and
or
pusha
xor
rol
xor
mov
xchg
sub
rcr
pusha
add
scas
and
jne
xchg
data16
and
pop
fimuls
add
xor
xchg
jne
jo
cwtl
push
mov
or
push
and
pusha
pushf
jge
xor
adc
rolb
lock
mov
mov
jo
test
and
xchg
mov
outsb
jno
lds
subl
inc
stos
xchg
fisttpl
rorb
aad
or
pop
test
ja
ja
hlt
mov
xor
pusha
mov
push
loopne
ret
stos
adc
rcll
mov
popf
cli
inc
jbe
andb
fdivr
test
mov
add
out
sub
add
cmp
and
xor
scas
sbb
int3
fists
sub
mov
inc
jns
add
jns
add
cmc
test
or
pusha
lea
xchg
jb
mov
or
pusha
rclb
stos
mov
jp
lock
fisttpl
mov
jp
addb
stc
mov
push
mov
push
into
jle
jae
mov
mov
int3
loope
andb
inc
mov
mov
xchg
pop
cltd
negl
pop
ret
rol
inc
aam
loop
aad
add
mov
orl
xchg
fwait
add
aaa
xor
rorb
inc
inc
xor
movsl
add
dec
lods
dec
push
addb
pushf
pop
sti
mov
cmp
push
jmp
lret
stos
inc
rorb
pusha
movsl
scas
stos
inc
add
mov
subl
shll
popa
jae
shrl
jae
sbb
push
mov
cmc
in
adc
daa
xchg
movsl
and
push
andb
push
jno
daa
orl
mov
rolb
shl
xchg
xchg
mov
sub
xlat
inc
push
mov
sbb
test
rorb
sbb
or
sar
and
out
stos
ds
adc
inc
aad
arpl
jmp
rcrb
andb
mov
mov
add
out
dec
fwait
dec
jo
into
sub
pusha
or
repnz
pusha
aas
inc
lcall
xchg
jecxz
sub
pop
adc
adc
push
addr16
inc
clc
and
mov
add
xchg
imul
pop
enter
movntps
loopne
mov
xchg
adc
mov
inc
and
add
loopne
out
and
sub
push
insb
je
addr16
or
mov
and
jecxz
imul
fistpl
fcoml
rolb
iret
into
aam
fdiv
dec
pop
push
and
jg
popf
push
and
fs
sahf
jne
bound
push
jbe
cmpl
out
inc
xor
pusha
add
mov
loopne
daa
pop
mov
add
ds
ret
push
and
add
cmp
xchg
pop
mov
lea
call
mov
inc
mov
mov
xor
jle
repnz
mov
sub
loopne
loopne
pop
mov
sub
and
inc
jae
repnz
idivb
sub
pop
push
or
loopne
loopne
into
cwtl
fisubrl
push
jns
mov
mov
push
mov
mov
fldl
and
pusha
pusha
xor
or
ljmp
lods
loopne
dec
adc
pop
lods
insb
cmpsb
inc
pusha
sbb
pop
mov
xchg
or
int
shl
arpl
and
pushf
mov
pop
and
adc
loopne
dec
xchg
fldt
ret
outsl
test
mov
adc
loopne
nop
sub
aas
popf
and
out
stos
pusha
mov
rcl
inc
ljmp
sub
pushf
mov
dec
cli
movsl
lds
inc
loopne
add
test
add
lahf
dec
es
addb
sbbb
shlb
out
das
iret
pop
je
mov
andb
cmpsb
shl
pop
or
shlb
jno
mov
jb
mov
mov
shlb
out
mov
cltd
xchg
shlb
pusha
xorb
xchg
mov
rolb
rol
add
push
scas
andb
notl
ja
movsl
mov
shlb
and
sarb
mov
mov
sub
add
cld
xchg
mov
inc
test
shlb
and
cwtl
or
shlb
and
pop
repnz
mov
scas
aam
cld
fmuls
lret
test
pop
pop
ret
shlb
adc
or
roll
pusha
and
cmp
aad
testb
pusha
sbb
and
rcr
jecxz
mov
popf
or
jbe
es
pusha
add
fwait
andb
in
or
mov
dec
push
bnd
scas
pop
sub
mov
mov
push
stc
xchg
jmp
in
imul
loopne
inc
inc
imulb
inc
mov
inc
fstl
in
mov
add
scas
push
mov
rorb
inc
rclb
inc
jmp
fnstsw
dec
neg
and
andb
xorb
push
cmpsb
inc
cmpb
sarl
lahf
mov
mov
add
lsl
xor
xor
pop
in
shr
test
jp
test
and
loopne
xchg
dec
push
mov
dec
jmp
and
sub
sbb
jge
add
fidivrl
mov
stos
shlb
mov
and
fnstsw
int
xor
enter
pusha
and
add
pop
in
jle
inc
add
sbb
inc
shlb
mov
sub
and
andb
mov
pop
je
xchg
mov
dec
push
push
je
mov
ds
and
xlat
xchg
repnz
inc
inc
cmp
inc
inc
nop
cmc
jae
iret
jo
iret
pop
fsubrl
lret
xchg
into
cmpsl
fstl
lods
pushf
xchg
lret
pusha
aad
repnz
movsl
in
bound
ljmp
dec
cmp
rcrb
mov
aad
jae
fstp
js
jl
bound
mov
mov
push
mov
mov
mov
fisttps
repz
sbb
mov
andb
xor
std
mov
and
xor
fistps
cli
test
int
bound
inc
loopne
icebp
ja
mul
test
pusha
jnp
push
xor
mov
xchg
adc
mov
cmc
xchg
xlat
sub
mov
push
inc
repz
mov
sub
andb
jmp
sbb
mull
loopne
sahf
jae
outsb
and
lock
mov
decb
jnp
mov
in
enter
cli
xor
pusha
and
push
sbb
xchg
xchg
insl
cli
movsl
ds
add
xchg
arpl
cld
push
repz
lock
xorb
mov
jmp
mov
or
ror
jg
sti
add
loopne
dec
sbb
jns
fidivs
xor
mov
adc
pop
mov
cmp
inc
add
jo
scas
jp
sub
add
mov
std
mov
adc
mov
mov
push
adc
mov
xor
sahf
cltd
hlt
fisttpl
and
xor
mull
out
into
std
pop
jns
inc
mov
mov
shlb
lods
pop
dec
sbb
add
loopne
data16
aad
push
stos
fistpll
mov
rorb
out
cmp
dec
cld
jge
imul
arpl
xchg
sti
sbb
adc
into
mov
loopne
cmc
sbb
mov
popa
test
mov
mov
or
pusha
and
sbb
add
sub
dec
loop
fcomp
es
sti
inc
or
mov
xchg
shll
loopne
or
sub
pop
add
pop
push
cmc
aam
std
sub
fiaddl
loopne
ja
aaa
bound
and
sti
pop
shl
imul
hlt
and
cli
pop
mov
mov
mov
in
retw
xchg
dec
jge
loope
cmp
andb
mov
add
mov
xchg
lods
mov
mov
xlat
push
xor
ja
and
inc
loopne
xor
cmc
shl
jl
enter
and
fs
dec
inc
xor
addb
inc
out
jl
outsl
rorb
sbbb
mov
loop
cmp
pusha
cltd
dec
adc
shr
cmc
enter
or
and
inc
sub
test
sub
mov
lret
iret
aaa
shrl
adc
pop
mov
mov
cmp
in
inc
rclb
push
and
shrb
adc
dec
mov
imul
int3
fs
adc
int
insl
xlat
addb
xor
push
cs
xor
jne
into
cmp
cmpsb
pusha
and
pusha
lods
cmp
xchg
ss
cmc
mov
and
mov
add
and
decl
or
into
pop
ret
add
shl
cld
jle
mov
adc
add
inc
nop
rolb
dec
test
loopne
rolb
andb
inc
xor
cmpsl
pop
mov
add
add
sti
push
inc
sbb
icebp
je
mov
pusha
cmpsb
and
cltd
mov
xchg
ja
lods
add
jne
icebp
int3
mov
push
repnz
insl
lods
mov
add
popa
ljmp
addb
mov
ljmp
add
loop
iret
cmc
je
arpl
aad
dec
inc
call
andb
out
rorb
or
shl
and
mov
mov
push
mov
pusha
into
sub
ficoms
lds
test
popf
pop
fdiv
fdivl
mov
jbe
add
inc
dec
test
inc
mov
and
inc
mov
push
xchg
mov
xor
inc
pop
pop
int
push
mov
mov
or
rcrb
cmp
fists
hlt
mov
xorb
cltd
mov
lahf
repnz
ret
inc
cmpb
popa
addb
insb
shrb
pop
jae
gs
xor
outsb
push
pusha
loopne
xor
or
inc
xchg
jl
and
jle
and
pusha
andb
mov
aad
pusha
ret
in
push
sbb
sahf
lret
int3
lock
inc
lcall
mov
test
xor
and
rep
sub
loopne
rolb
cmp
mov
and
sbb
jo
jns
xchg
jne
andb
and
pop
mov
shlb
mov
inc
xor
add
repz
add
add
in
aas
test
or
mov
xor
add
inc
jmp
inc
jno
inc
adc
cmc
out
dec
cld
push
xchg
cmp
mov
pop
mov
dec
push
pusha
loopne
jecxz
cmp
sbb
in
pusha
and
aaa
inc
pushw
andb
xor
pusha
lahf
loopne
gs
movb
gs
repz
inc
andb
lcall
xchg
insb
mov
mov
adc
das
xor
adc
jbe
inc
shlb
sarb
push
mov
inc
int3
popa
mov
rorb
and
xor
pusha
test
add
mov
dec
pop
scas
ja
andb
out
push
jge
arpl
pop
mov
inc
pop
push
into
jge
adc
loopne
xchg
rclb
addb
cmp
popf
mov
add
jae
shll
jp
loopne
out
out
jl
jecxz
or
repnz
inc
add
cmpsb
mov
dec
dec
xor
shlb
outsl
adc
xchg
adc
mov
repz
mov
or
fnsave
mov
or
movsb
loopne
test
aad
inc
inc
outsl
dec
stos
mov
jl
frstor
loopne
cmp
loopne
dec
cmp
aaa
add
out
pop
in
mov
add
push
jbe
xchg
add
inc
jno
add
mov
mov
xchg
sbbl
ficoml
mov
add
imul
mov
dec
xlat
test
mov
mov
loopne
add
xlat
and
pusha
xchg
outsb
stos
push
jne
inc
inc
aad
ljmp
out
ss
pusha
mov
andb
std
inc
inc
inc
inc
mov
lahf
cmpsb
and
jp
scas
imul
loopne
mov
lds
inc
ds
sbb
inc
mul
cmpsl
pop
push
xchg
adc
rclb
pop
insl
jmp
jp
jo
scas
inc
mov
pusha
jp
pusha
add
shlb
push
test
scas
and
fistpl
mov
mov
mov
ds
jp
aam
jb
push
jnp
mov
inc
outsb
jg
pop
test
jae
inc
jl
shlb
push
push
imul
add
dec
adc
insl
mov
pop
xchg
imul
pop
roll
and
dec
movsl
pop
test
and
add
andb
fnstsw
xchg
mov
and
push
cmp
shlb
mov
push
mov
and
inc
loopne
jae
mov
rclb
out
add
fwait
xchg
aad
fwait
jecxz
addb
pusha
mov
or
rcl
lret
jo
and
jmp
fisubs
pushf
mov
fwait
pop
dec
in
and
add
mov
test
and
mov
push
and
inc
cli
mov
ficompl
mov
adc
shll
outsb
lret
arpl
push
int3
cli
std
lods
sahf
push
inc
inc
dec
bound
pop
aas
inc
std
outsl
add
inc
pop
incl
xchg
fcmovnb
test
rcrb
rcrb
inc
std
fcomi
fbld
inc
mov
push
mov
and
cld
mov
mov
inc
fs
movsb
mov
or
sbb
xlat
loop
fadd
lret
hlt
mov
loopne
pop
aad
jg
inc
pusha
dec
cwtl
test
mov
add
rcrb
jl
sub
pusha
subl
lock
bound
and
jle
sub
ds
hlt
jecxz
jbe
rcrl
lock
mov
mov
loopne
idivl
add
xor
inc
loopne
andl
pop
jbe
stos
add
add
loop
jp
in
xchg
rcr
jmp
push
push
sub
mov
push
iret
test
pusha
add
push
xchg
jmp
test
shrb
inc
out
xchg
outsl
fs
push
adc
sub
mov
rolb
cmp
jbe
or
rcrb
xor
cmp
inc
outsl
push
mov
push
inc
adcl
adc
insl
add
add
inc
inc
jp
mov
imul
arpl
mov
xchg
adc
cmp
adc
lret
or
rcrb
mov
mov
jle
iret
pop
aam
enter
lea
mov
lret
faddl
inc
cwtl
int
pusha
fsubrs
loop
push
xchg
mov
loopne
fsubrl
shlb
rorb
and
cmp
push
fs
fisubs
aaa
int3
mov
push
dec
sbb
pop
lahf
push
pusha
pusha
push
std
sub
call
pusha
test
mov
testl
fsubr
cltd
xor
xchg
sarl
movb
jnp
test
test
and
aas
sbb
scas
pop
or
sbb
sbb
jns
and
jns
xlat
sbb
ret
pushf
insb
insb
mov
push
xor
in
andb
ret
lcall
andb
jo
mov
shll
cld
mov
addr16
jbe
xor
lods
add
sub
push
fistps
push
and
pusha
out
andl
cs
ret
or
pusha
ret
aas
cmpsl
pop
mov
push
pushf
lahf
pop
xchg
shlb
push
add
add
add
inc
dec
std
inc
call
sbb
fdivrl
pusha
inc
scas
jecxz
add
pop
cwtl
pusha
xor
inc
outsb
and
mov
lret
sbb
std
orl
pusha
rcll
and
pusha
sbb
jbe,pt
mov
cld
xchg
cmp
mov
movsl
ja
out
in
inc
push
jns
ret
sub
mov
and
cwtl
in
pop
cwtl
stos
aam
or
ss
addr16
push
add
rclb
pop
jmp
or
push
jecxz
jb
mov
adc
and
sub
and
pop
dec
mov
inc
mov
mov
fwait
pop
ret
and
pusha
dec
mov
fidivrs
aad
dec
mov
dec
inc
jne,pt
pusha
sub
jge
push
rcl
push
int3
rorb
pop
fcoml
es
inc
cwtl
fldl
add
lret
ret
loopne
mov
int3
jp
inc
and
inc
push
dec
sbb
xchg
cld
movsl
mov
shlb
loopne
pop
inc
cmp
push
and
aaa
pop
cltd
andb
add
iret
pop
dec
jo
sbb
mov
pop
mov
add
mov
add
sbb
daa
mov
add
js
shlb
xchg
mov
loopne
pop
nop
mov
aas
in
loopne
in
test
loope
out
icebp
rorl
jnp
loopne
xchg
shlb
add
xor
cmpsl
or
addb
xchg
xchg
loopne
js
mov
mov
mov
inc
subb
add
mov
cmpsb
and
addb
loopne
fsts
adc
repz
cmp
stos
pop
ss
fisttpll
and
and
pop
adc
enter
inc
and
loopne
pop
testb
dec
or
addb
stos
fsubl
in
sbb
lret
out
xchg
cmp
fists
sbb
dec
addb
fidivl
nop
sub
mov
popa
fnstenv
aad
daa
mov
mov
pop
loop
cmp
mov
add
cli
in
js
mov
sbb
loopne
jno
dec
or
hlt
jae
shlb
mov
insl
inc
js
sub
jle
fdivs
popf
mov
aad
and
pop
xchg
dec
mov
sbb
xor
sbb
orb
and
mov
mov
mov
in
lcall
fdivrs
pop
lock
js
icebp
jo
and
andb
mov
addb
sbb
outsl
sti
push
lret
or
and
cmp
inc
daa
iret
cmc
add
inc
xchg
mov
bound
stos
rol
jmp
addb
in
shrb
out
xchg
or
mov
add
dec
shll
pusha
add
lret
and
add
ret
neg
push
loopne
sub
rcrb
aas
mov
inc
outsb
fwait
out
inc
in
fsubrs
loopne
out
mov
into
xor
mov
out
jle
int3
clc
mov
ljmp
ret
ja
cmc
dec
movsl
fisubl
loopne
sub
mov
mov
shl
jle
add
sbb
mov
jmp
jp
sub
add
int3
mov
in
gs
out
pop
insl
aaa
jge
roll
scas
mov
stos
mov
sbb
mov
add
fdivrp
and
and
xchg
pop
js
imul
add
and
jle
rol
int3
in
in
ja
test
loopne
jae
loopne
int3
cwtl
cwtl
cmp
xor
pop
xor
mov
lea
adc
inc
sbb
lods
cs
sub
mov
jl
lea
sbb
xor
dec
xlat
add
rclb
xor
inc
shlb
or
xorb
lock
xor
in
and
shll
movsl
pop
xchg
out
addb
mov
mov
ja
mov
rcrl
rol
dec
fsubl
shlb
arpl
mov
aas
clc
add
and
aas
out
das
mov
xor
shlb
add
xchg
cli
dec
shrl
push
pusha
and
fadds
call
pusha
mov
stc
out
mov
je
mov
xor
mov
inc
lock
jmp
xchg
test
and
test
andl
mov
mov
xchg
xor
xor
cwtl
xchg
lods
inc
rcr
inc
cmp
in
out
arpl
rol
and
ret
pushf
bnd
loopne
imul
icebp
aad
addb
orb
loopne
out
xchg
shll
and
lods
call
mov
inc
mov
test
pusha
pop
lret
dec
xchg
fsubl
push
mov
add
add
leave
inc
pop
nopl
movsb
rol
loop,pt
sahf
jo
xor
movsb
and
xorl
lcall
cld
xchg
out
pop
xchg
xor
dec
jbe
addb
fistps
in
mov
or
add
mov
arpl
fcmovbe
pop
mov
rol
aam
fwait
xchg
dec
push
aas
xor
loopne
out
pop
pusha
adc
jae
ja
and
push
xchg
pop
mov
jle
test
aad
je
test
pusha
pushf
test
add
in
push
outsl
cs
inc
xchg
loopne,pn
cmpsb
rol
pusha
rcrb
cmpsb
shlb
inc
aad
sbb
in
mov
sbb
nop
sti
sub
loopne
or
mov
mov
dec
in
fiaddl
or
and
mov
shlb
nop
pop
stos
xchg
addb
mov
dec
xchg
jp
rolb
add
cmp
cmpxchg
add
jns
out
add
add
mov
xlat
shrb
and
jne
and
or
xchg
push
jl
daa
jp
xchg
and
pusha
cmpsl
add
cmpsb
inc
rclb
loopne
add
cli
mov
incl
xlat
ljmp
repnz
jmp
sub
sub
or
push
and
in
clc
xor
addb
daa
push
in
xor
cs
mov
lcall
das
in
mov
shrl
imul
test
add
and
xor
shlb
insb
gs
out
cmp
adc
aam
outsb
inc
aam
lea
gs
outsl
mov
inc
rolb
je
xor
add
mov
test
subl
jbe
je
addb
loopne
and
jp
push
push
xor
enter
xchg
ss
rol
addb
popf
das
cmp
aam
in
add
xor
and
pusha
loopne
test
mov
pusha
add
mov
jp
xchg
push
ret
dec
push
inc
inc
mov
mov
lahf
dec
test
pusha
dec
call
pop
sahf
aam
shl
in
insl
in
lds
pop
pusha
add
rorb
out
xchg
xor
mov
popf
adc
pusha
pusha
mov
mov
int
pop
enter
pusha
and
lods
loopne
mov
lods
shlb
jo
aam
and
test
mov
pop
std
scas
pusha
shlb
xchg
cmpsl
ja
inc
sbbb
inc
jp
push
push
inc
mov
and
dec
and
andb
jge
mov
fisttpl
inc
pusha
add
add
andb
cmp
mov
pusha
and
mov
rclb
sarb
lock
jp
mov
mov
mov
xor
test
and
mov
stos
loopne
arpl
xchg
cs
andb
cli
icebp
inc
xor
loop
adc
rcl
dec
adc
mov
and
clc
dec
stc
push
test
xchg
aaa
stc
push
divb
sbb
fstpt
xor
xor
es
shrb
dec
addr16
xor
sub
inc
cld
mov
and
mov
lret
jb
cwtl
jmp
cli
mov
test
loopne
jbe
xor
sub
xor
dec
xor
jp
shll
mov
cmpl
lret
mov
insb
add
add
or
mov
inc
mov
inc
test
and
mov
pop
add
iret
in
mov
add
pusha
and
inc
pushf
and
and
add
mov
clc
addb
inc
mov
sti
lret
pop
jl
push
ds
fwait
sub
mov
lcall
dec
stos
andb
add
jle
dec
aad
lcall
jmp
js
and
mov
shll
out
or
loopne
adc
mov
clc
sbb
test
or
mov
xchg
and
dec
adc
pop
push
bound
add
mov
loopne
inc
lret
push
mov
xchg
int
sarb
sub
mov
mov
cmpsb
mov
imul
adc
mov
or
outsl
inc
pusha
adc
mov
jo
jecxz
ret
movsl
cmovo
pop
cmp
pusha
mov
sub
mov
or
pusha
pop
push
into
and
and
jnp
sub
cli
adcl
or
mov
faddp
jbe
inc
add
dec
js
and
inc
inc
insb
sub
arpl
dec
add
out
push
and
and
cld
out
lods
pusha
pusha
ds
add
xor
fdivs
loopne
into
inc
aas
sets
pop
mov
fldt
xchg
xor
mov
or
cltd
cs
mov
add
lods
loopne
mov
dec
test
and
jge
mov
arpl
sub
or
mov
imul
ljmp
int3
add
pusha
fstl
xor
rolb
xchg
je
add
sbb
mov
sub
push
lea
xor
add
mov
add
std
lock
in
push
rol
mov
jecxz
insb
movsl
aaa
xchg
mov
fistl
pop
imull
inc
mov
je
dec
xchg
clc
xchg
das
aas
and
out
arpl
mov
mov
push
sub
shlb
xchg
xlat
loop
repnz
mov
pushf
mov
xor
mov
fldl
jp
and
fstp
add
add
inc
shll
mov
xor
inc
xchg
xchg
and
adc
hlt
test
pusha
daa
and
out
jbe
sahf
fs
jp
rcl
ds
add
and
mov
ret
mov
ret
rcl
jne
mov
pop
int3
hlt
shll
inc
and
cmpsb
shl
sbb
ficoml
jge
mov
ja
sub
adc
jecxz
add
iret
scas
shlb
xchg
xchg
inc
pop
cmc
out
ds
and
jle
mov
add
adc
xor
xor
and
xchg
cmp
mov
sbb
cmpsl
dec
pushw
pusha
adc
and
shlb
inc
mov
mov
mov
sub
je,pt
xor
neg
xchg
mov
sub
push
cmpsl
xchg
add
jne
iret
daa
pop
into
and
and
mov
adc
add
mov
daa
mov
inc
lds
and
andb
mov
cmp
gs
lret
add
and
int
sbbl
clc
mov
sub
and
cld
push
and
lea
mov
jo
imul
inc
lods
loopne
xor
cmc
push
cmp
outsl
rep
mov
pusha
and
mov
lods
push
sbb
call
sar
icebp
insl
jns
sub
pushf
outsl
add
lahf
lcall
jg
pop
sahf
xor
cmc
test
and
sbb
fs
xor
add
ror
adc
lods
mov
out
add
rorb
mov
sbb
cld
inc
pop
pop
or
mov
and
sarb
add
mov
sub
inc
sbb
cmp
cwtl
stos
add
inc
out
ret
jns
or
xor
pop
hlt
lock
sbb
push
rcrb
add
shlb
fsts
pusha
subb
xor
fs
jnp
loopne
mov
and
dec
adc
add
test
loopne
adc
inc
inc
inc
in
inc
xor
addl
lods
pusha
inc
cmc
out
fists
jb
and
mov
shll
imul
outsl
or
add
aas
dec
jle
loopne
sub
inc
sub
test
mov
xchg
jl
adc
in
adc
call
rolb
ds
push
push
enter
jle
mov
xor
and
outsl
lcall
das
mov
pusha
sbb
inc
jae
aam
enter
sbb
pusha
and
mov
ja
test
rol
mov
sarb
shrl
xchg
std
fistl
loopne
sub
cmp
shlb
test
in
or
pusha
mov
scas
int3
lcall
xchg
inc
loopne
scas
add
lret
push
mov
pop
push
mov
iret
lret
sbb
pusha
loopne
push
dec
lods
shl
and
inc
test
aaa
mov
dec
mov
mov
inc
mov
loopne
jne
dec
enter
lcall
and
xor
add
inc
mov
mov
loopne
jmp
daa
es
push
aaa
fisttps
add
notl
or
idivb
jbe
addl
mov
dec
or
icebp
cs
loopne
push
rorl
add
cmp
mov
adc
jmp
push
outsb
sbb
adc
and
loopne
scas
shlb
xchg
mov
jg
sub
orb
push
std
gs
movsb
mov
mov
loopne
inc
les
dec
outsl
push
mov
and
and
mov
hlt
xlat
scas
shlb
pusha
mov
mov
test
ja
cmp
sti
push
inc
movsb
shlb
inc
or
mov
iret
shll
rolb
fsubrs
lods
pusha
shl
add
push
stc
mov
add
mov
rol
cltd
xchg
repz
pusha
pusha
cmp
or
bound
mov
mov
lods
rcrb
aam
sub
rcl
xor
mov
shlb
inc
add
mov
fistpll
and
inc
lea
and
sub
scas
test
popf
sub
loopne
xchg
adc
xchg
push
push
icebp
lret
mov
bound
xchg
inc
adc
in
sbb
shl
roll
pusha
pusha
out
push
shlb
inc
mov
imul
pop
leave
imul
hlt
sbb
sub
mov
xchg
and
inc
and
loopne
jge
shll
or
shlb
inc
andb
dec
jecxz
lret
lods
jno
inc
mov
jbe
push
xlat
ficoms
loopne
sub
cmp
nop
xchg
or
xchg
bound
lock
and
cld
sbb
ss
mov
jns
mov
jp
and
add
js
and
loopne
and
out
adc
or
pop
mov
jg
stc
pop
je
add
fadds
fldcw
add
or
inc
je
fs
add
mov
pop
mull
pusha
loopne
pop
mov
loopne
mov
inc
pusha
and
loopne
inc
sub
mov
loopne
leave
movsl
xchg
lock
divb
pusha
pusha
mov
pusha
inc
aas
outsb
addr16
push
and
loopne
or
enter
mov
popa
jp
cmp
and
pop
mov
loop
or
cwtl
daa
xchg
insl
loopne
loopne
cmp
inc
pop
lret
xor
leave
cmpsb
add
shlb
jp
jno
movsl
mov
mov
and
mov
add
add
jg
cld
scas
and
dec
mov
pop
idivl
push
jbe
std
ret
xor
mov
xchg
pop
int3
cmp
je
daa
add
add
rcl
mov
jbe
rol
jg
push
rolb
sbb
stc
xchg
in
mov
stos
aad
cltd
ret
xchg
jae
inc
loopne
add
xchg
sahf
mov
xchg
cli
div
movsl
jg
dec
dec
fnstsw
sub
mov
mov
add
push
adc
xchg
mov
xor
pop
data16
into
pop
loopne
out
leave
sub
mov
xor
scas
jle
sub
inc
sub
pop
leave
lret
test
jecxz
dec
push
shlb
repnz
sub
addb
into
aaa
popf
ficomps
repz
sub
loopne
test
loopne
jge
mov
sub
dec
mov
ja
fwait
or
hlt
loop
pusha
mov
push
js
andb
sub
and
mov
cmp
mov
mov
and
js
addb
mov
adc
add
and
mov
shlb
mov
add
mov
lret
push
and
add
pushf
andb
xor
int
lret
pop
dec
inc
aam
loopne
and
cs
pusha
std
movsb
loopne
push
stos
or
mov
loopne
popf
sub
push
cltd
lods
rolb
andb
mov
dec
mov
add
das
in
shrl
push
call
rol
popa
pop
jo
out
aad
jg
loopne
pop
aaa
aaa
dec
daa
jp
mov
roll
add
scas
ja
shlb
pop
or
inc
dec
lret
lret
jb
shl
pop
andb
mov
jecxz
bound
and
adc
out
mov
fldl
addb
mov
push
in
mov
pop
enter
sub
loope
lds
pusha
mov
imul
repz
and
or
and
mov
xor
sbb
dec
insb
inc
inc
and
fstl
loop
fisubl
ret
dec
cmc
adc
andl
adc
in
mov
inc
inc
push
mov
inc
fimull
push
sub
and
mov
and
stc
je
aaa
lret
add
std
repnz
lea
and
shlb
pop
invd
andb
dec
mov
pop
popf
std
mov
popf
repnz
hlt
cmc
cmp
or
rorb
fucomp
adc
jae
sahf
in
das
jecxz
xlat
pop
push
cmp
mov
push
addr16
das
pop
neg
xor
cmp
std
push
fcompl
insl
in
gs
mov
cmp
push
loopne
loope
push
or
pop
fidivs
inc
add
scas
rolb
lahf
mov
push
out
out
out
xor
std
inc
lock
and
sub
lahf
mov
sbb
mov
add
push
dec
movntps
mov
pop
sbb
and
jecxz
insb
and
insb
xchg
stc
dec
jle
mov
or
push
add
sbb
xchg
mov
inc
add
inc
jl
cmpsb
and
inc
xlat
icebp
outsl
dec
insl
cmp
insl
pop
aad
xlat
addb
inc
push
out
dec
sub
add
and
jno
and
orb
mov
notb
pushf
fiadds
inc
pusha
push
lods
andb
mov
mov
ds
nop
and
shlb
jbe
cld
xorl
pop
inc
mov
ret
inc
xchg
es
pop
fcoml
jl
gs
xchg
fs
aas
in
add
shlb
and
and
orb
dec
and
pusha
insl
sbb
inc
cmp
and
mov
insb
ljmp
insb
xchg
mov
loopne
mov
sub
xlat
jns
pop
jge
in
mov
movsl
mov
lea
in
lds
pusha
mov
pop
in
ds
repnz
inc
push
sti
xorl
adc
or
icebp
add
mov
jne
mov
pusha
pushf
es
dec
das
scas
mov
pop
mov
pop
jg
loopne
inc
or
dec
or
subl
jge
mov
and
out
mov
outsl
fdivp
add
cli
loopne
or
xor
fwait
or
jmp
leave
pop
adc
mov
and
addb
jl
loope
pop
jns
jb
cmp
popf
repz
dec
imul
int3
cmp
andb
fildl
xchg
sub
inc
lods
inc
orb
sub
loopne
xchg
loop
and
xchg
mov
stc
fdiv
inc
lahf
xchg
mov
pusha
fidivl
mov
xlat
mov
iret
les
adc
and
decl
enter
je
sahf
xor
call
mov
pop
or
inc
mov
loopne
stc
adc
pop
fdivrl
iretw
repnz
out
xor
cld
or
addb
ljmp
mov
loopne
repz
mov
cmp
mov
icebp
mov
lret
inc
dec
push
sbb
in
sbb
movsl
mov
inc
cmp
ljmp
mov
push
xor
mov
fbld
and
cwtl
fnstenv
inc
adc
and
add
sahf
or
pusha
sub
pop
lods
xchg
or
and
sub
rcrb
and
pop
std
inc
movsl
repz
cli
repz
repnz
mov
inc
data16
inc
inc
lock
int
xchg
inc
jg
and
adc
xchg
dec
fnsave
ds
dec
pop
out
push
loope
ja
mov
inc
xor
pop
test
loopne
ss
add
cmpb
pusha
add
loop
shr
add
mov
sbb
lret
cmp
rol
rolb
shlb
mov
ds
pop
imul
sbb
fsubl
jmp
lods
add
sub
add
or
iret
jno
lret
fsubs
fidivrl
jmp
ret
jp
xlat
cwtl
out
mov
push
mov
inc
loope
add
andb
or
cmp
add
je
cwtl
jmp
lds
sbb
pop
inc
aaa
loop
inc
loopne
push
pop
into
cwtl
loope
sbb
mov
loopne
cld
repnz
jno
arpl
jp
scas
cmp
jge
pop
cli
xchg
mov
loopne
mov
pusha
pop
daa
jecxz
and
push
add
mov
mov
leave
imul
leave
out
sbb
push
aas
and
mov
or
loopne
mov
pusha
insl
stos
lods
notl
cmpsl
test
insl
aaa
mov
mov
pop
cwtl
inc
pop
sahf
paddb
sbb
shrb
mov
cmpsb
addb
cmp
cmp
addr16
push
and
mov
pusha
mov
orb
or
shrb
pop
lods
loopne
cmpsl
ss
dec
les
addb
inc
inc
mov
xchg
sub
dec
sub
add
add
std
or
and
inc
js
lret
icebp
mov
or
sbb
addb
mov
xor
add
nop
xor
jg
pusha
add
mov
aaa
outsb
clc
push
test
int3
fildl
mov
lock
mov
add
jge
jnp
addb
addb
push
sub
adcb
xorb
mov
test
push
mov
in
add
jae
jno
and
loopne
int
and
pusha
movsl
cmp
xor
push
sti
adc
cltd
fldl
and
push
in
sub
dec
inc
mov
adc
sbb
add
and
shrb
subb
dec
and
into
xlat
and
loopne
fisttpl
cli
inc
jnp
jge
out
das
and
loopne
mov
andb
pushf
mov
inc
add
pusha
sbb
inc
and
dec
cmp
rol
sti
sahf
mov
xchg
add
repnz
test
rolb
addb
add
loopne
leave
sbb
push
aas
or
shlb
and
addb
jbe
aaa
fs
jns
inc
mov
inc
xchg
rorb
fimull
psubb
and
or
push
inc
in
imul
push
ret
bound
pusha
pusha
rcll
and
jge
stc
push
mov
andl
mov
cmpb
ret
shlb
aas
inc
or
mov
into
faddp
mov
adc
pusha
sub
push
pop
xor
cmp
repz
or
jne
xor
test
inc
fstps
loope
fwait
jle
dec
inc
daa
js
movsb
pusha
loopne
and
mov
push
cmp
and
push
dec
push
add
lods
pop
lea
inc
loopne
inc
inc
popf
adc
sub
xor
adc
dec
vfrczps
sbb
adc
fld
sbb
jns
andb
outsl
pusha
and
and
pop
loope
test
xchg
fists
jne
daa
sub
orb
stc
enter
lods
imul
ja
pop
adc
and
bound
int3
jl
sbb
jb
icebp
mov
add
into
jbe
lods
mov
inc
jle
dec
or
hlt
into
test
mov
repnz
sbb
cmp
inc
pop
jns
mov
adc
jge
stos
mov
cmp
dec
or
xorb
pop
pop
shr
pop
ss
repz
mov
subl
inc
pop
pusha
inc
mov
cs
loope
roll
inc
add
cwtl
js
mov
xor
and
adcl
adc
push
sti
push
jno
shlb
pop
shlb
mov
mov
fs
shll
shrb
loopne
sbb
xchg
lock
inc
and
xor
push
fisttpl
andb
stos
and
add
test
loopne
inc
and
shl
mov
ficoms
in
add
push
cs
loopne
pop
lahf
in
fsubrl
jne
iret
sub
arpl
and
and
cmp
sub
xor
push
push
cmpsl
std
enter
or
and
fbstp
repnz
loopne
sahf
bound
push
or
pusha
add
shl
sub
subb
push
push
cwtl
or
add
add
mov
aaa
sbb
mov
lods
loopne
jmp
je
cmp
loopne
and
or
push
add
popf
cld
in
out
loopne
aas
mov
hlt
out
gs
icebp
add
sbb
jle
ret
mov
test
loopne
ret
aaa
ret
cmp
jl
cmp
pop
jl
xor
rcrb
sub
mov
imul
loopne
pop
data16
mov
orb
andb
sbb
fsubp
movsb
addb
lods
loopne
push
fwait
add
sar
jne
inc
and
inc
sub
shl
or
and
lahf
and
dec
mov
addb
scas
and
push
xor
je
pop
and
add
xor
or
loopne
pusha
pusha
mov
rclb
pop
lds
xlat
pusha
mov
mov
mov
jb
mov
roll
and
add
subb
inc
shlb
data16
int3
pushf
mov
les
aam
cmp
pop
xor
mov
int
xchg
test
loopne
and
add
dec
imul
and
outsb
adc
repnz
testb
mov
dec
mov
fadds
xorb
cmp
loope
jno
gs
mov
decb
scas
and
sbb
ret
xlat
xchg
jge
mov
inc
xlat
into
mov
test
xchg
dec
mov
lret
sbb
test
pusha
and
out
pop
push
pop
mov
and
insl
lea
lds
pushf
add
pusha
mov
pop
in
and
in
mov
mov
jmp
mov
mov
in
inc
lea
loopne
icebp
pop
shrb
mov
push
int
inc
je
mov
lock
rorl
adc
xchg
in
fnstenv
scas
and
jle
pushf
xor
or
ja
mov
xchg
insl
mov
add
out
daa
jbe
xor
inc
mov
inc
inc
stos
rolb
aam
loopne
pop
in
sub
pushf
inc
mov
add
addb
xchg
xchg
push
xor
insb
xchg
push
mov
push
addb
inc
mov
and
mov
xor
fidivrs
pop
lahf
fimuls
dec
icebp
add
dec
mov
xor
add
mov
mov
add
addb
inc
loopne
adc
mov
inc
sbb
mov
add
cli
pop
pusha
sub
and
xor
imul
mov
loopne
jl
and
inc
daa
movsl
pop
int3
cld
jp
xor
sbb
fistpll
fldt
add
pusha
and
add
fdivs
cli
leave
outsl
cld
imul
mov
mov
jno
stos
ja
mov
pusha
push
sub
and
rolb
xor
push
jno
loopne
dec
mov
pushf
idivl
adc
push
cmp
pop
and
loopne
aam
and
mov
add
and
repnz
sbb
loopne
test
mov
jo
mov
xchg
lods
push
loopne
sub
xlat
inc
mov
popf
ss
jbe
in
and
dec
and
pusha
outsb
push
fiaddl
sahf
and
pop
inc
dec
imul
shlb
dec
call
mov
pop
adc
mov
xchg
ret
push
inc
rorb
or
pusha
and
mov
xchg
pusha
add
test
rcl
mov
inc
add
cwtl
add
ds
pop
push
mov
cmp
mov
rcl
cmpsb
inc
orb
inc
stos
loopne
or
mov
mov
rorb
inc
rorb
push
pop
out
out
repz
out
std
push
dec
dec
pop
stc
or
cmp
aaa
inc
mov
mov
lret
out
in
inc
add
sub
shl
mov
and
or
and
test
add
sahf
in
imul
mov
das
mov
inc
or
jge
jo
jb
dec
int3
pushf
mov
int
sbb
fcoms
push
push
inc
adc
add
loopne
pop
jnp
std
push
mov
cmpsl
gs
imul
xchg
lds
pusha
out
add
push
mov
add
xor
add
pusha
shrb
sti
fdivrl
push
shlb
loope
shll
pop
sbb
fstpt
push
jo
and
and
xchg
sar
insb
xlat
inc
push
jl
adc
jmp
mov
mov
and
pop
mov
jne
xchg
pushf
sub
je
call
adc
loope
xchg
rolb
shlb
and
cmp
mov
xchg
xchg
push
fistpl
inc
push
jg
stos
mov
loopne
adc
jge
jge
rolb
sub
mov
and
push
sbb
and
sbbl
test
dec
dec
push
mov
imul
mov
pop
mov
rolb
pusha
in
push
cmp
ret
inc
sub
jbe
andb
push
add
lret
or
pusha
daa
jecxz
jmp
jp
cmpsb
andb
addb
pop
lods
mov
inc
xlat
jo
fs
cli
mov
add
sbb
push
mov
or
pusha
fwait
jb
mov
inc
shll
inc
andb
loop
pop
hlt
xchg
in
pop
sbb
inc
cmc
sbb
add
mov
adc
int
mov
cld
dec
cli
adc
std
inc
icebp
inc
lcall
int
test
and
push
mov
and
rol
repz
xchg
shlb
addr16
ds
test
pusha
pop
mov
pop
rcrl
daa
xor
mov
es
aaa
jbe
and
popa
roll
adc
or
pusha
sbb
andb
repnz
jno
sub
ret
mov
push
rcll
push
repz
cmp
mov
pop
addb
call
out
aad
or
add
arpl
in
lds
lcall
gs
sub
add
pop
xlat
scas
xchg
fistl
mov
mov
rolb
push
pop
or
mov
pusha
xor
jbe
fsubl
pop
fxch
push
shll
mov
addb
xchg
add
mov
cltd
mov
push
and
xchg
adc
push
mov
insb
aam
cmpsl
stos
mov
pop
add
cmp
loopne
inc
sarl
data16
mov
mov
loop
dec
cmc
xor
ret
push
xlat
dec
daa
out
mov
jecxz
and
ret
and
sbb
mov
loopne
movsl
jecxz
add
mov
cmp
loop
and
add
cmp
sahf
in
stos
pusha
pusha
dec
mov
ret
out
js
jg
jbe
je
aam
sbb
clc
fistps
cmp
cmp
mov
rolb
inc
dec
sbb
jno
ret
lods
mov
xor
or
loopne
add
sbb
decl
pop
rol
add
and
adc
jnp
sbb
and
pusha
and
iret
or
mov
push
and
sti
clts
add
or
mov
dec
int
and
seto
jnp
std
clc
jo
dec
cmpsb
and
pop
pop
inc
je
mov
out
imul
enter
and
mov
add
cltd
mov
add
push
jns
jg
add
rolb
push
and
xchg
jp
pop
cli
insb
lea
hlt
repnz
jo
shr
pop
jae
loop
add
and
cltd
mov
test
mov
std
jmp
loop
push
sub
inc
or
inc
push
ret
jmp
iret
insl
pop
push
repz
pop
in
mov
cs
and
mov
out
push
mov
addb
push
ret
test
mov
adc
in
inc
jp
daa
push
sub
rcrb
push
cli
ja
notb
push
cmp
mov
jnp
push
or
or
cli
hlt
and
repnz
cmp
rolb
and
cmpsl
mov
mov
pusha
pop
ret
int
loopne
add
and
rcl
jb
lock
inc
rcl
adc
mov
mov
mov
sar
test
loopne
jle
xchg
leave
test
rcrb
fsubp
lahf
sub
lahf
sbb
je
cwtl
push
aas
lahf
mov
pusha
cmpsl
xchg
ljmp
and
cli
inc
or
loopne
outsb
dec
mov
dec
out
xorl
lock
inc
xchg
loopne
dec
bnd
sbb
or
loopne
adc
popa
mov
loopne
mov
inc
add
add
inc
pop
ljmp
in
mov
cwtl
pop
enter
dec
mov
movb
adc
in
test
mov
dec
dec
push
aad
mov
and
call
ljmp
fstpt
mov
sbb
mov
fisubrs
loopne
aas
xorl
mov
popa
mov
lods
push
or
mul
xor
add
rol
movsb
andb
mov
inc
mov
adc
lods
mov
mov
add
pop
mov
inc
loopne
push
sbb
out
shr
mov
mov
mov
mov
mov
pop
mov
inc
and
insl
pop
pop
cmp
icebp
dec
sub
shll
test
jmp
add
mov
insl
pop
test
pusha
orl
xor
pop
xor
leave
and
or
popa
decl
loopne
clc
je
cmpsb
mov
or
xchg
xorb
fisttps
inc
testl
dec
jmp
pop
or
loopne
or
add
push
xor
movsb
pusha
pusha
mov
orb
add
cli
xchg
push
push
and
loopne
andb
and
add
jno
xor
add
mov
js
dec
sbb
loopne
loopne
mov
inc
mov
jmp
cmpsl
xchg
shrb
pop
jns
les
enter
push
popa
xchg
push
inc
add
stos
andb
add
mov
pusha
in
add
clc
lret
dec
mov
inc
sub
add
and
jnp
and
loopne
sub
loopne
sub
add
loopne
clc
in
es
and
add
outsb
and
std
or
mov
mov
push
add
shrl
jbe
xor
and
pusha
pusha
jecxz
or
and
lcall
pop
adc
movsb
and
dec
dec
ss
and
mov
add
fistl
mov
in
popf
loope
pusha
cmpb
mov
out
dec
dec
xchg
loopne
xchg
loopne,pn
mov
adc
stc
js
adc
dec
mov
mov
pusha
sbb
push
pop
jle
lock
test
xor
decb
loopne
out
js
pop
adc
pusha
add
nop
fildll
dec
movsb
loopne
push
mov
addb
xchg
sub
loopne
mov
xchg
sti
xchg
xchg
lret
out
cmp
enter
ret
cmp
xchg
jl
or
add
add
xchg
mov
pop
addr16
fwait
cmpsb
mov
and
out
mov
pop
pop
mov
pusha
ds
addb
loopne
cmp
andb
pusha
fwait
adc
jae
loopne
test
xchg
jecxz
cld
xchg
push
fcomi
pop
sub
shlb
addb
sarb
pop
movsl
lret
std
ja
xchg
shr
bound
mov
mov
jle
sub
rcrb
xchg
repz
inc
add
fldcw
jl
out
fimuls
xor
and
rcr
jb
negb
xchg
and
loopne
push
dec
and
and
cmc
ss
mov
insl
cmp
addb
outsl
push
push
and
pop
mov
inc
jnp
and
pop
push
das
sarb
xorl
xor
sub
xchg
negl
push
pop
push
add
xchg
push
lea
gs
xchg
add
inc
scas
int3
iret
mov
pop
in
adc
and
push
mov
cmpsb
inc
pusha
or
add
hlt
pop
jmp
inc
xorb
mov
addl
mov
cmp
or
sbb
rolb
sbb
sub
rcrb
sub
lret
push
jp
adc
pop
push
fdivrl
lock
pop
mov
mov
mov
and
push
mov
sub
shlb
add
jmp
loopne
mov
inc
popf
xchg
repnz
push
lea
and
pusha
jge
mov
sarb
pusha
ret
sbb
pusha
sub
inc
and
sarb
mov
mov
icebp
jno
scas
popf
clc
xchg
rorl
filds
cmp
cwtl
stos
sub
add
decb
das
or
jne
jmp
lds
push
adc
andb
mov
cs
mov
mov
in
enter
and
shlb
pop
sti
jg
pop
mov
pop
push
sub
rol
into
cld
stos
ret
and
inc
inc
dec
andl
and
mov
fmul
out
sbb
pusha
and
sub
and
pusha
into
jb
cmp
push
pop
or
cmc
jmp
inc
add
addb
test
rcr
push
jae
dec
in
inc
and
pusha
aad
pusha
inc
sub
loopne
sbb
aad
mov
das
nop
and
subb
push
adcb
push
aam
and
shlb
lret
push
or
mov
and
out
adc
adc
lods
push
aaa
push
mov
mov
subl
in
dec
add
pusha
icebp
movsl
xor
inc
loopne
inc
pusha
push
movsl
inc
in
mov
jp
lock
inc
mov
loopne
and
jno
pusha
or
je
sbb
sub
inc
jle
jg
inc
push
pop
ljmp
push
shlb
dec
mov
in
cmp
jae
int3
shlb
stos
jle
adc
jge
pop
in
cld
sub
inc
test
icebp
imul
jge
adc
or
pusha
shlb
sbb
movsl
cmp
rcrb
fidivs
int
push
inc
jp
mov
jmp
adc
mov
dec
jb
aam
pop
data16
bound
inc
inc
aaa
lcall
pusha
inc
popa
sbb
orl
sbb
cmp
fldenv
inc
mov
lods
addb
cmp
aas
ljmp
push
dec
pushf
js
cwtl
int3
sub
sub
gs
add
andb
pushf
and
push
aad
jb
xor
ret
jae
inc
sarb
call
push
mov
shlb
imul
jne
shlb
stos
jb
sahf
pop
inc
imul
rcrl
addl
mov
mov
mov
loopne
push
jecxz
xchg
jo
roll
jl
and
jle
mov
add
mov
repz
fidivrs
decb
mov
pusha
jo
cli
mov
or
pusha
sub
ficoms
icebp
repnz
add
out
sti
push
jecxz
add
cmc
sbb
rolb
mov
in
mov
loopne
stos
push
xchg
add
and
out
dec
jmp
add
into
and
dec
popl
enter
rorb
inc
adc
pop
shrl
rolb
push
xchg
push
repz
aaa
addb
enter
mov
repz
pusha
loopne
jl
loopne
dec
out
add
jg
and
add
clc
jno
pusha
and
cmpsb
add
inc
mov
out
call
sbb
inc
inc
int
in
mov
out
clc
add
jno
pop
inc
jp
sbb
aad
inc
nop
pusha
cmpl
imul
sahf
inc
data16
push
scas
mov
cmpsl
push
push
cmp
inc
add
push
mov
add
nop
cwtl
jno
or
ss
sbb
lahf
rorl
addb
and
jl
xchg
mov
jl
mov
adc
push
mov
icebp
mov
outsb
pop
call
xor
pop
nop
push
sbb
push
enter
loopne
out
adc
mov
test
pop
pop
outsb
movsb
inc
rorb
mov
pop
xchg
lods
andb
mov
inc
mov
int3
stos
pusha
pusha
mov
add
push
dec
fistpl
loopne
jge
push
loop
lods
out
adc
rolb
and
or
add
mov
dec
je
scas
iret
lea
hlt
pop
dec
lret
loop
push
cwtl
loope
loopne
addr16
sbb
shlb
and
jmp
mov
cmp
int
mov
and
adc
push
jmp
stc
jb
outsl
popf
sub
and
jae
insl
inc
pop
mov
rclb
out
imul
stos
cmp
adc
jne
je
insl
pop
pop
lea
ret
subb
ret
sbb
shrb
leave
mov
loopne
lret
pop
add
jns
xchg
and
daa
sub
stos
inc
shlb
add
dec
es
mov
loopne
lcall
sub
xor
mov
add
inc
mov
add
divb
sbb
mov
jbe
add
shr
sahf
push
rorl
out
imul
ljmp
cmpb
test
add
push
jge
pusha
mov
daa
stos
mov
shl
sub
and
or
add
in
ffree
inc
mov
add
jbe
fdiv
jle
outsl
push
jp
xor
shl
fstl
dec
adc
xor
sbb
push
push
push
inc
add
inc
cmpb
and
test
and
sub
ja
push
ljmp
inc
call
mov
adc
and
inc
dec
mov
sbb
fs
mov
xor
pusha
add
fwait
jb
ret
sbb
lea
mov
inc
pusha
mov
lock
and
mov
and
andb
rorb
add
je
add
cld
or
shrb
xor
mov
fcoms
iret
inc
sarb
lcall
add
xchg
add
dec
daa
inc
mov
jo
movsb
andb
cmc
xchg
mov
sbb
or
rcl
stos
loopne
aad
leave
ljmp
pusha
popa
cmp
jae
cli
mov
cli
push
call
push
mov
mov
mov
sub
push
das
fisubs
cmp
ja
shlb
pop
xchg
data16
sbb
std
stc
mov
loopne
mov
pop
add
push
dec
mov
mov
xchg
pop
lea
jecxz
idivb
mov
rolb
and
sbb
movntq
cmp
jge
addb
movsl
sbb
cld
xchg
ja
sbb
mov
sub
mov
popf
and
xchg
sarb
or
loopne
mov
frstor
mov
push
pop
popa
cmp
pop
lret
lds
cmp
mov
scas
and
addb
mov
dec
cmpsb
rolb
loope
or
popa
sbb
rolb
xlat
outsl
movsl
lcall
dec
in
addb
inc
int
jns
in
fnstsw
mov
sub
sub
inc
adc
fnstcw
nop
js
pusha
and
or
shrl
sbb
inc
mov
mov
cmpsb
pusha
and
pop
sbb
shlb
dec
sbb
add
loopne
andb
inc
aas
jno
mov
ljmp
orl
mov
add
xlat
mov
mov
and
and
mov
or
in
test
mov
add
push
xor
mov
xchg
rclb
pusha
pusha
ficoml
andb
jb
mov
xor
sbb
mov
sub
inc
ljmp
jno
add
cmpb
das
psllw
fs
mov
imul
icebp
dec
ds
bound
push
stc
mov
add
mov
jbe
popa
ja
cli
roll
iret
dec
popf
pop
xor
mov
add
loopne
cmp
jp
rcll
addb
mov
cmpsl
mov
jmp
loopne
stc
out
rcll
ret
jno
loopne
cmp
push
lret
subb
lcall
add
or
notl
add
cmp
addb
adc
add
aam
repnz
sub
add
xchg
and
sbb
mov
pop
push
sti
in
mov
insl
jb
pusha
aad
inc
mov
mov
loopne
cmp
cmp
jl
andb
mov
outsl
xor
pusha
fiaddl
sbb
and
shrb
inc
xor
inc
xor
add
pop
mov
mov
out
ja
xor
mov
lods
add
js
hlt
loopne
add
les
loope
jp
sbb
jns
int
add
rol
xchg
and
es
ror
rorl
pusha
cmpsb
andb
push
ss
mov
lret
inc
ja
mov
jns
int3
loop
mov
aam
and
dec
jl
pop
cld
push
and
rcrb
cmp
add
sbb
mov
mov
cli
imul
and
jbe
xchg
or
pop
out
aas
ds
shrb
pusha
xor
es
loopne
and
dec
sbb
mov
and
loopne
cmpsb
and
jle
lea
add
es
subb
mov
sub
adc
mov
ja
andb
jo
cmp
inc
sbb
pop
ficoms
mov
and
pusha
ret
lret
and
add
mov
push
imul
mov
pop
addb
xchg
jecxz
sbb
push
sub
hlt
add
rorb
mov
shl
cld
adc
arpl
mov
lret
scas
aas
iret
or
pusha
or
call
in
jg
add
mov
sub
inc
jne
dec
push
inc
xorb
addb
rol
or
dec
aad
and
cltd
ja
and
leave
push
xchg
insl
add
push
push
xchg
xchg
cmc
push
ja
loop
ds
or
jle
xchg
insl
sub
dec
dec
push
mov
adc
test
and
cmp
insb
fdiv
popf
jecxz
inc
xchg
dec
xor
aas
gs
rcrb
xor
enter
pop
add
sarb
loopne
mov
dec
fdivrs
mov
jnp
cmpsl
ljmp
pop
rcll
popa
imul
mov
sub
cvtps2pd
repnz
dec
mov
mov
pop
fbstp
loop
mov
in
mov
pusha
and
inc
pop
out
cltd
outsb
or
loopne
jp
ss
imul
andb
inc
lods
add
loopne
mov
ja
adc
add
pop
popl
sub
loopne
mov
int3
or
std
cwtl
mov
and
fwait
dec
outsb
inc
push
inc
loopne
fisttpll
mov
pusha
add
cld
push
mov
cmp
cmp
and
cmpb
jle
shlb
and
hlt
push
aad
or
add
pop
push
loopne
loop
push
les
mov
inc
lods
js
fadd
pop
scas
addb
or
pusha
loopne
popa
sarb
das
jmp
mov
loopne
sti
xchg
scas
mov
and
addb
pop
sub
xor
movsl
dec
jnp
jg
add
aad
aam
pop
pop
lret
fucomp
das
and
ficompl
clc
cmpsl
push
push
add
test
scas
ret
shl
mov
xor
sbb
lds
add
add
pusha
loopne
adc
inc
add
shlb
imul
call
mov
jle
fldenv
mov
cmpsl
rol
ds
test
and
jge
push
popf
outsl
jno
outsl
pop
mov
adc
add
xchg
fldenv
int3
jne
int
mov
pusha
xorb
movsb
pusha
andb
xchg
adc
pusha
cld
and
aam
jno
rcll
jns
jns
imul
jp
loopne
xchg
lods
pusha
mov
stc
stos
andb
mov
mov
dec
sti
pop
dec
iret
xor
cmp
pop
out
pusha
and
pop
push
and
sbb
inc
xor
movsb
inc
loopne
out
sbb
cmp
add
or
mov
cltd
daa
aam
add
xchg
out
push
mov
mov
cmp
lds
mov
test
and
sarb
jne
lock
and
pusha
subl
mov
sub
add
inc
pushf
es
add
pop
shr
lret
mov
scas
and
pop
aas
stos
stos
mov
stos
push
shl
movsl
lret
test
andb
addb
mov
mul
shlb
sub
rol
psllq
repz
aaa
ds
or
inc
push
cmp
add
orb
loopne
and
lds
or
pusha
mov
pusha
sbbl
add
neg
jne
rorb
cwtl
das
jle
pcmpeqb
sbb
sahf
jle
sub
clc
int
jp
sbb
ds
fmul
adc
std
ja
das
and
fnstcw
subb
mov
sbb
test
sar
mov
ror
shll
inc
outsb
and
out
addb
test
mov
xlat
jle
mov
rclb
inc
xor
dec
push
insb
in
das
mov
xchg
jge
xlat
mov
loopne
out
inc
and
andb
rclb
daa
popf
jg
inc
adcl
movsb
and
fisttps
jecxz
adc
iret
mov
sbb
inc
addr16
and
mov
and
add
out
pop
pop
adc
sbb
push
inc
shlb
negl
or
mov
mov
mov
andb
sub
shlb
xchg
mov
pop
xchg
dec
in
jo
inc
push
cmpsl
dec
pop
dec
xor
loopne
test
rcl
addb
sub
or
and
pop
sbb
pusha
pusha
clc
dec
xor
xor
imul
cmpl
jns
popf
pop
inc
cmp
out
pusha
loopne
pop
xorl
jo
daa
jl
loopne
pop
inc
or
push
adc
push
data16
mov
jo
push
and
and
add
mov
cvtps2pi
leave
int
pop
pop
push
dec
push
add
xchg
lods
add
jp
ds
outsb
mov
sahf
movsl
fwait
adc
clc
bound
rolb
testb
aam
stos
addr16
in
test
mov
sbbb
lahf
xor
int3
inc
dec
push
xchg
jo
jbe
pop
loopne
int3
push
xlat
bound
cmc
aaa
dec
pop
cmp
outsb
mov
dec
adc
add
and
dec
mov
and
loopne
add
mov
dec
push
lods
inc
adc
in
shlb
mov
loopne
mov
arpl
pop
cmp
test
int3
mov
mov
nop
push
lds
inc
mov
pop
in
int
ja
pop
test
call
mov
lods
rolb
addb
mov
xor
pusha
andb
repz
dec
and
shlb
pusha
push
andb
xchg
ljmp
mov
and
mov
dec
jl
push
jmp
into
popa
mov
imul
xlat
and
xor
stc
xchg
outsb
xchg
mov
jmp
sbb
push
add
inc
inc
pop
in
pop
adc
pusha
mov
pop
scas
inc
xorb
in
shlb
ja
xchg
loope
inc
lahf
pop
fwait
pop
mov
js
movsb
pusha
mov
ss
ss
loopne
adc
stos
andb
clc
call
hlt
stos
loopne
push
add
xchg
stc
in
ss
and
xchg
loopne
sbb
and
jnp
rorb
shrb
add
mov
pop
int
add
or
pusha
ret
jns
add
dec
out
jo
sbb
push
dec
roll
fnstsw
jns
cmp
rorb
push
outsl
and
pusha
popf
fwait
addb
lea
mov
jbe
repnz
pop
nop
or
and
andb
cmp
jns
outsb
mov
jo
mov
outsl
aam
mov
xchg
jb
sbb
pusha
pusha
dec
inc
or
andb
add
das
in
andb
movsb
and
jg
add
gs
add
jecxz
arpl
addb
out
xchg
adc
mov
and
xchg
jne
add
push
cli
jb
lds
pop
xlat
lock
inc
pusha
dec
mov
xlat
pop
xchg
pop
fldenv
and
mov
pushf
daa
add
inc
lea
xchg
adc
aas
imul
jp
push
sbb
sbb
and
pop
insb
js
jne
in
lahf
in
addb
mov
inc
fwait
pop
push
inc
inc
add
andb
mov
test
push
clc
lods
rolb
rorl
dec
arpl
jmp
out
fstpt
dec
scas
addb
mov
cli
mov
push
shrb
shl
mov
out
xorl
add
test
loopne
xor
sbb
jg
rolb
cs
inc
inc
out
repnz
add
mov
mov
jge
or
inc
inc
out
div
adc
and
adcb
sbb
push
or
sarb
cmp
aaa
pusha
adc
cld
dec
cmp
mov
loopne
jp
xor
movsb
loopne
push
dec
xor
mov
cmpsb
loopne
mov
xchg
das
cmp
xor
insb
aas
push
movsl
gs
jp
sub
in
sub
aas
mov
mov
aad
fld
insl
mov
mov
mov
call
and
push
pop
mov
cltd
icebp
jne
rorl
outsl
std
addb
hlt
enter
pusha
mov
pusha
cmp
sub
movsb
and
sahf
pop
pushf
insl
mov
movsl
mov
fwait
inc
xor
xchg
mov
cmp
pop
in
and
sub
or
pop
test
add
pop
pop
pop
pop
jge
xchg
sahf
jbe
jb
lret
loopne
div
out
cld
and
mov
cmp
push
fmuls
and
pushf
loop
or
jo
inc
cli
fiadds
adc
push
movb
cmp
and
add
xor
xor
pop
pop
aam
loopne
or
add
sbb
clc
scas
loopne
aas
inc
fimuls
mov
sub
mov
loopne
cwtl
scas
add
ret
cmp
add
dec
cmp
push
and
sbb
xchg
popa
cmp
rolb
cmp
mov
out
and
push
addb
iret
jne
in
push
call
push
jmp
js
cwtl
sub
sbb
imul
lahf
int3
mov
xorb
and
inc
cmp
ja
test
fsubr
sbb
imul
scas
loopne
and
and
inc
jge
sub
and
push
mov
imul
rcll
aad
loopne
dec
jo
sub
dec
jbe
mov
push
mov
jo
das
sub
lcall
negb
or
jmp
icebp
in
fwait
das
or
or
add
ror
mov
cs
mov
fldcw
pusha
add
jb
lock
inc
outsb
cmp
sub
jne
sti
aaa
shlb
sub
and
xchg
roll
add
insl
pushf
out
inc
push
outsb
fdivrl
sub
and
or
lret
test
inc
jle
push
dec
mov
jle
xor
cwtl
jns
add
inc
sub
inc
mov
fwait
loop
arpl
jns
out
xchg
fisubl
pusha
ficoms
jae
sub
frstor
inc
xchg
mov
lods
jecxz
in
jb
mov
adc
xchg
mov
sbbb
out
fidivrl
mov
aaa
shl
popf
adc
sbb
inc
pop
push
ret
add
xchg
addb
std
cwtl
aad
mov
vfrczps
add
fwait
mov
jo
mov
hlt
mov
data16
cmp
xchg
out
pop
push
imul
shlb
cltd
xchg
inc
pop
mul
stc
add
lds
lock
sbb
adc
push
dec
mov
mov
lret
and
pusha
leave
ss
loop
pusha
shl
adc
mov
xchg
mov
loopne
mov
jl
mov
out
sub
sti
call
push
cmc
push
outsl
scas
inc
pusha
loope
fisubrl
loopne
mov
fistpll
mov
andb
test
loopne
add
mov
xchg
dec
mov
lretw
jae
ret
out
addb
xor
cmp
and
push
pop
sbb
push
pop
seto
cs
jns
in
fldcw
and
add
repz
dec
scas
es
inc
bound
add
clc
sbb
andb
ret
inc
into
mov
inc
negl
stc
fucomp
push
loopne
xor
fwait
sbb
sti
rclb
fcoms
andb
xor
shr
mov
add
das
lahf
mov
enter
loopne
and
dec
fists
mov
inc
add
xor
aaa
into
rolb
pusha
into
scas
add
jmp
fnstenv
cmc
jmp
add
mov
test
and
lock
push
pushf
aad
mov
movsl
sti
popa
clc
jnp
cmc
arpl
sahf
cmp
lock
jmp
je
das
jl
pop
sahf
mov
cmpsl
pop
jl
movsl
jl
dec
jo
inc
add
and
adc
imul
inc
mov
pusha
mov
push
inc
add
pusha
add
subb
and
inc
fidivrl
jecxz
push
adc
adc
xlat
sahf
ret
in
push
cmpsl
inc
mov
repnz
insb
loope
push
and
rcr
data16
ja
aas
pushl
jle
jmp
repnz
cld
and
fwait
ds
add
rolb
ljmp
dec
mov
popf
sarl
pusha
or
rorb
movzbl
mov
add
imul
arpl
xchg
adc
gs
add
fdivl
and
and
es
leave
mov
mov
jecxz
ret
add
in
lahf
xchg
stos
andb
aaa
cli
push
mov
sbb
loop
adc
mov
mov
adc
and
cmp
imul
mov
call
and
loopne
dec
div
les
andl
push
add
and
cli
jno
pop
in
cwtl
jge
cwtl
mov
aas
cwtl
pusha
movsb
mov
push
rolb
enter
aad
cmpsb
shlb
xor
pusha
idivb
add
pusha
jno
sbb
add
cwtl
ja
pop
add
cmp
inc
loopne
pop
xor
and
das
jae
popl
pusha
inc
leave
mov
fdivrs
decl
in
dec
cmpsl
fldenv
out
in
addb
sbb
inc
adc
loopne
out
lret
ljmp
in
push
ljmp
lds
sbbl
dec
push
or
mov
jl
fsubr
and
out
rclb
mov
sbb
and
inc
push
andb
dec
icebp
inc
sub
test
test
xchg
aaa
call
jne
flds
pop
pusha
ds
pop
xchg
lods
mov
or
stos
mov
push
loopne
mov
dec
ss
pop
shr
scas
add
fldln2
add
rorl
fldcw
add
icebp
call
loopne
and
pop
addr16
cs
mov
out
adc
inc
js
pusha
add
andb
imul
shl
cltd
imul
data16
aam
and
enter
mov
or
sbb
mov
movsb
loopne
dec
stc
cmpsb
and
adc
inc
add
pop
fwait
inc
add
rol
roll
cmp
cmp
mulb
loop
push
lds
paddsb
jl
mov
mov
dec
and
mov
adc
mov
aam
push
and
mov
sbb
ja
imul
fildl
aaa
push
popa
dec
jno
jnp
sub
add
xor
and
inc
out
pop
stos
loopne
sub
data16
andb
mov
enter
out
xchg
les
cmp
jae
enter
add
push
mov
rorl
add
shll
js
test
inc
mov
orl
out
and
jb
loopne
xchg
lock
rcrl
inc
mov
pop
mov
loopne
leave
bound
stc
mov
repnz
mov
lahf
cmp
xchg
lods
push
sbb
and
shld
repz
enter
pusha
and
cmp
and
xchg
jae
or
pushf
loopne
sub
adc
jmp
mov
addb
push
and
loopne
lods
loopne
jae
fstpl
pop
xchg
repnz
jbe
inc
cld
push
sbb
xchg
inc
data16
mov
pushf
lahf
call
mov
lock
pop
cmc
out
pusha
inc
jle
jmp
scas
pop
sar
push
sub
fstpt
pop
lock
mov
and
imul
out
jl
push
test
mov
out
rep
and
shlb
inc
and
push
ss
jne
pushfw
testb
aad
mov
sbb
cmc
jae
sti
or
iret
mov
addb
jmp
shl
int3
sbb
ret
add
loopne
mov
fs
arpl
and
rol
and
mov
pusha
and
scas
aaa
ljmp
jge
or
inc
mov
dec
xor
xchg
pushf
lods
das
scas
or
int
shrl
or
pusha
test
pusha
inc
add
inc
enter
push
aaa
pop
pop
lea
mov
inc
cmp
sbb
aam
pusha
add
addr16
cli
dec
mov
nop
pop
jmp
aad
add
inc
jae
popf
pop
or
mov
sub
cmpsl
scas
mov
jb
jnp
movsb
mov
fsubrl
test
pop
arpl
popf
jns
mov
push
lock
test
mov
lea
outsl
dec
and
and
icebp
or
sbb
andb
inc
and
cs
mov
mul
out
jmp
popa
scas
shlb
jmp
cmp
pop
mov
imul
mov
and
sub
shlb
dec
push
cmpsl
cs
xor
sub
cld
and
loopne
push
data16
sub
mov
and
and
sbb
inc
push
push
adc
pusha
add
cmp
or
shll
test
xchg
mov
loopne
lcall
mov
adc
ffreep
fwait
xchg
loope
stos
push
rol
push
jecxz
repnz
jl
and
mov
lahf
ljmp
stc
mov
popa
mov
cmp
add
jmp
sarb
push
incb
and
ss
sti
adc
jae
jnp
pop
sub
pusha
jmp
les
sbb
sar
jbe
les
outsb
clc
pusha
sub
inc
test
dec
mov
sarb
bound
xchg
mov
aad
fimuls
cmp
xlat
cmp
pop
xlat
or
inc
aam
into
dec
push
out
or
inc
jmp
and
inc
mov
push
inc
dec
mov
jg
push
lock
addb
add
shlb
les
nop
daa
adc
xchg
sbb
adc
inc
inc
xor
add
fcomps
adc
mov
mov
loopne
out
mov
imul
subb
pop
out
ret
dec
jge
dec
dec
push
mov
mov
pop
sbb
loopne
out
shlb
pusha
inc
rcrl
mov
jle
sbb
lahf
outsb
aaa
push
bound
cmp
pop
fdivl
and
adc
and
int3
shr
call
sbb
mov
xlat
lcall
pusha
adc
mov
jns
aas
xchg
push
and
loopne
cld
cmp
stos
add
pop
mov
pusha
inc
roll
mov
push
addr16
leave
mov
sti
lret
mov
bound
js
mov
jns
outsb
loopne
fwait
xor
inc
out
or
mov
jl
loope
jbe
pusha
and
mov
rcr
sub
adc
mov
out
clc
jo
jge
cmp
divb
xor
mov
call
mov
add
sub
xchg
mov
shlb
cmp
addb
es
loope
mov
jge
or
repnz
lock
inc
lods
fwait
mov
push
adc
or
and
cmpsb
pusha
add
cmpl
push
mov
xchg
roll
push
mov
cmpsb
rolb
stc
jl
jb
and
dec
out
sbb
jge
pop
popf
int3
les
mov
inc
jnp
adc
push
pmulhuw
outsb
imul
add
andb
pop
push
cli
daa
xchg
aaa
jb
mov
mov
xchg
and
xchg
jl
addb
pusha
pop
test
rclb
jle
add
and
test
inc
es
xor
leave
sbb
jo
add
movsb
loopne
sub
sub
ljmp
jne
mov
sub
and
or
loopne
sub
shl
loopne
inc
leave
out
neg
std
mov
jbe
and
loopne
gs
dec
dec
mov
data16
and
and
xchg
mov
sub
sahf
pop
das
lcall
out
arpl
decl
add
adcb
clc
cli
pop
fdivl
call
call
test
shlb
fwait
mov
mov
mov
and
or
movsb
pusha
adcb
mov
repnz
jle
mov
add
add
fisubs
or
sbb
inc
pusha
xor
push
adcl
sahf
sbb
icebp
pop
movsl
and
xor
pop
sbb
mov
stos
rolb
nop
mov
mov
pop
xchg
jbe
jecxz
lods
ja
faddl
loopne
comiss
inc
fcmovbe
fistps
cmp
callw
shlb
pop
pop
ja
rol
jle
mov
jb
inc
push
pusha
rcr
outsb
stos
shlb
ret
sbb
pop
push
adc
in
jnp
xor
and
or
cld
movsb
and
addl
mov
push
addb
js
jmp
outsb
push
arpl
nop
int3
mov
sbb
mov
aam
mov
adc
in
inc
rolb
add
pop
or
mov
fstpt
repnz
mov
inc
sub
and
push
repz
mov
xchg
inc
inc
sbb
pusha
pop
pmaxub
xchg
mov
add
xchg
int3
fsubrs
dec
bound
mov
les
pop
mov
loopne
mov
xchg
insb
aas
inc
lcall
mov
dec
xor
fwait
push
loopne
outsl
int
ds
and
add
pop
in
and
xorb
rolb
add
fs
dec
fisubl
xchg
fstps
loopne
sbb
in
dec
inc
out
or
sahf
pop
rolb
out
adc
add
sarb
movl
mov
cmp
add
pop
mov
and
xor
and
stos
cmp
addr16
lea
loopne
xor
repnz
inc
and
jl
arpl
mov
sti
push
out
cwtl
popl
mov
xchg
out
insb
in
leave
adc
jmp
rolb
adc
jg
jle
mov
icebp
mov
mov
mov
stos
test
pusha
movsb
inc
pusha
push
fdivs
repz
push
pop
pop
mov
jl
jp
sbb
adc
and
mov
add
sbb
add
xor
int
jno
add
std
xchg
lods
rcll
fsts
adc
push
push
xchg
xor
push
pop
push
mov
add
add
xor
ja
jmp
dec
add
inc
outsl
pop
adc
nop
jns
cs
cmpb
repz
outsb
xor
mov
and
sbb
pop
or
pusha
mov
addb
int3
inc
add
mov
into
mull
push
push
idiv
pop
pop
add
cmp
in
xor
ja
dec
cwtl
jmp
mov
and
and
loopne
call
fsubp
sbb
loopne
mov
movsb
add
mov
lods
mov
repz
scas
pusha
and
push
mov
in
xor
les
xchg
jg
push
out
lcall
dec
in
sbb
mov
setle
dec
jecxz
aad
lcall
pop
xor
test
pusha
xchg
inc
mov
leave
movsl
or
ret
cltd
mov
mov
test
push
or
inc
or
adc
into
shlb
loopne
mov
jo
int3
jnp
pusha
rolb
stos
and
pop
scas
ret
xchg
loop
pushf
out
mov
dec
pop
push
cmp
and
add
inc
scas
add
adc
pusha
rcrb
das
mov
das
adc
in
xchg
rorb
addb
andb
add
or
shlb
jae
andb
inc
dec
mov
add
push
add
and
xorb
cmc
orl
mov
pusha
xchg
and
clc
mov
xchg
out
sbbl
mov
cmp
and
loopne
add
pusha
insb
divl
mov
add
pusha
cltd
inc
dec
fsts
loop
dec
fincstp
xchg
push
shlb
push
pusha
xchg
cmp
shl
not
or
mov
jo
repnz
out
xor
dec
pusha
and
loopne
pusha
pusha
adcl
cmp
mov
pop
jae
and
and
call
cmpb
mov
jo
js
stos
pusha
mov
push
adc
dec
sub
fmulp
add
mov
in
mulb
int
in
jge
and
fadds
mov
lahf
xor
sub
shrb
and
sbb
shr
outsl
inc
pop
mov
pusha
pusha
dec
xchg
cld
jp
mov
and
dec
aam
int3
xchg
stc
push
inc
add
pusha
loopne
addr16
addb
and
and
rclb
mov
insb
sbb
lret
mov
out
pop
push
jg
shl
insl
adc
sbb
xchg
sbb
gs
shlb
int
pop
je
pop
add
adcl
add
sbb
add
arpl
pusha
inc
popf
add
andl
pop
imulb
scas
add
into
jo
rolb
sub
inc
repz
push
jbe
xchg
adc
test
pusha
sub
pusha
pop
dec
xor
dec
xor
ret
add
xor
fistps
add
loopne
add
fsubr
mov
adc
sbb
mov
clc
scas
add
daa
sub
add
scas
pusha
sarb
imul
xchg
jg
jp
xchg
and
lcall
pusha
add
or
mov
mov
dec
lret
mov
jge
mov
inc
enter
rolb
movsb
andb
lock
mov
and
and
mov
imul
mov
out
jb
adc
std
jne
aam
int
stos
mov
jo
and
sbb
aad
enter
cmp
lret
faddl
std
insl
inc
push
push
sarb
rorb
pusha
shlb
mov
mov
shl
and
and
pusha
imul
fninit
stos
rolb
repnz
shrl
jae
test
mov
mov
xor
sbb
fisubrs
push
dec
mov
sbb
add
sbb
or
inc
xor
call
loop
adc
and
and
fs
psrlw
mulb
pop
lods
mov
arpl
dec
mov
mov
adc
adc
aas
pop
sub
jbe
je
je
inc
and
sti
scas
add
lahf
fimuls
pusha
rcl
popa
test
sub
loopne
jb
popf
test
js
add
mov
enter
cmp
pop
sbb
or
loopne
mov
or
push
inc
xchg
inc
pop
pushf
pop
adc
into
push
xor
and
shrb
and
and
sbb
sbb
mov
andb
ss
popf
pop
mov
push
mov
jns
mov
cltd
pop
mov
jbe
cmp
xchg
or
pusha
xlat
add
pop
pop
dec
addb
pusha
shrb
push
es
add
push
push
push
jns
dec
add
dec
pop
jge
sub
sbbb
add
loopne
imul
mov
hlt
int3
xor
jp
movsl
das
test
mov
loopne
inc
jmp
lahf
insb
mov
mov
mov
pushf
aad
push
inc
add
mov
ja
pusha
and
movl
sub
xchg
inc
jp
pusha
rol
and
and
and
and
sti
add
loopne
pusha
inc
fs
cmpsb
addb
mov
fmul
pop
or
mov
sbb
in
sub
outsb
jp
test
and
push
das
adc
xchg
jae
sbb
loopne
ljmp
int3
xchg
inc
jnp
aad
cmp
fwait
cmp
jecxz
add
add
or
cmpb
pusha
and
rcl
and
pusha
xchg
inc
pop
sub
pop
adc
jno
pusha
icebp
cli
sub
inc
pop
cmc
loope
inc
pop
cmp
loopne
xchg
sbb
shr
cmc
sbb
pop
aad
pusha
and
sbb
add
das
xor
andb
in
adc
test
add
dec
cmp
xor
insl
addb
popa
sub
mov
shlb
leave
inc
pusha
mov
push
and
loopne
cmp
fsubl
sbb
decl
add
mov
jle
add
pusha
jnp
pop
stos
pusha
loopne
ljmp
xor
jo
scas
pusha
and
and
in
andb
out
jne
jmp
and
pop
add
pop
xchg
out
bound
add
pop
add
add
inc
out
sbb
mov
push
xlat
lcall
pusha
loopne
inc
aaa
and
shll
into
mov
mov
and
leave
mov
hlt
out
push
lahf
or
rcrb
into
xor
mov
scas
or
and
adc
js
xor
lret
mov
push
out
add
and
lret
pop
sub
addb
pusha
xchg
dec
xchg
mov
andb
xor
loopne
stos
ljmp
add
lods
pusha
loopne
mov
pop
cltd
xor
cmpsl
cld
aas
mov
pusha
andb
aam
daa
sbb
jb
jne
inc
inc
push
lahf
nop
and
xchg
subb
mov
pusha
pusha
lods
sub
orb
add
cli
filds
pop
sbb
xchg
add
xchg
jge
shlb
mov
sti
fs
jne
lahf
test
add
jp
sbb
ja
loop
repz
cmc
push
and
lahf
sbb
mov
test
lock
loopne
cli
lock
loopne
sub
sub
loopne
movsl
dec
mov
add
rcrb
aas
mov
or
inc
lods
ret
mov
std
xor
inc
pop
xlat
add
add
addb
cmpsb
rolb
call
add
loopne
in
inc
or
sti
cwtl
ret
mov
xor
lret
scas
cmc
or
ret
pusha
add
sbb
pop
xchg
mov
add
fisttpl
shlb
adc
loopne,pn
iret
push
xchg
cmc
cltd
and
and
mov
cmp
mov
and
add
add
push
rclb
popf
adc
mov
jno
clc
mov
pop
std
sub
loopne
or
and
sub
andb
and
scas
and
nop
shll
bound
push
mov
push
fiaddl
andb
jo
cmp
daa
push
mov
sbb
andb
jbe
and
pop
sub
sarb
addb
xchg
faddp
and
inc
dec
andb
fmul
unpckhps
mov
sub
jmp
loopne
fwait
cmc
aad
mov
inc
jnp
pusha
pusha
pop
mov
jle
popa
les
shr
or
inc
in
notb
and
sbb
outsb
dec
sbb
mov
repz
inc
xor
outsb
loop
xlat
xchg
xor
or
andb
pusha
shlb
rolb
aas
and
imul
stos
loopne
std
sbb
mov
bound
mov
sub
aad
pusha
dec
stos
loopne
repnz
sub
movsl
sbbl
adc
mov
cmp
pusha
loopne
sti
insl
call
scas
shr
roll
and
inc
adc
mov
jmp
gs
lret
ret
shl
pushf
mov
fidivs
addb
mov
push
add
push
daa
push
test
div
pop
xchg
xchg
sti
hlt
testb
and
loopne
jbe
movsb
andb
mov
fsts
aas
int
and
pusha
loopne
adc
inc
cmp
dec
sub
hlt
or
andb
sub
jmp
adc
pop
nop
js
shlb
sub
pusha
mov
enter
fs
mov
imul
addr16
xchg
sub
and
orl
mov
fbld
fnstcw
insl
popf
mov
jle
xlat
roll
add
jge
jbe
lods
aad
lods
loopne
stos
and
jb
loopne
adc
dec
mov
mov
loopne
mov
xor
cmpsb
loopne
add
lret
mov
jle
fdivrs
mov
mov
out
imul
pusha
pop
push
mov
push
add
inc
inc
fdivl
push
loopne
ret
push
xor
mov
pusha
inc
xor
inc
mov
inc
mov
add
data16
idivl
adc
inc
int3
cwtl
lods
inc
mov
cmc
jle
and
les
mov
push
push
pushf
shlb
andb
lods
in
add
adcb
shlb
add
adc
mov
or
sete
in
xor
mov
dec
je
sti
dec
lret
adc
andb
fnstenv
xchg
in
shlb
rcl
pusha
sbb
loop
mov
pop
mov
cli
mov
push
sbb
rclb
popl
mov
sbb
ljmp
add
add
xchg
lods
lahf
inc
daa
in
xor
jo
out
dec
mov
adc
mov
inc
loopne
imul
les
inc
add
loopne
shlb
dec
cmp
add
mov
das
adc
andb
pusha
add
xorb
stos
inc
add
adc
and
hlt
mov
inc
and
dec
or
and
mov
loope
add
pusha
sarb
sbb
pusha
fwait
xor
and
pusha
push
xchg
testl
pusha
xchg
xor
mov
pop
scas
pusha
int
roll
int
daa
sbb
andb
and
rcl
and
and
mov
test
rcl
sub
adc
mov
shlb
test
adc
push
xchg
jo
aad
xchg
cltd
cmp
icebp
ficoms
xor
sub
dec
lods
and
add
xchg
cld
xchg
pusha
pop
scas
loopne
int
mov
or
pop
dec
push
mov
shl
push
lcall
inc
sbbb
adc
cmpl
sbbb
mov
inc
jg
pop
mov
or
xlat
sar
and
mov
cmp
push
mov
int
lahf
das
xchg
nop
mov
pop
ficoml
fisttpll
and
mov
push
and
loopne
lahf
mov
in
fs
mov
mov
insl
int
rolb
ja
lret
mov
jae
movsl
shll
xor
inc
mov
jo
fwait
dec
mov
fldl
add
andl
and
xchg
pushf
inc
