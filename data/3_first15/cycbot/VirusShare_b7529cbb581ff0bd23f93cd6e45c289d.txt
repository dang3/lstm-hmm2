aaa
rorl
push
add
mov
mov
add
and
jne
clc
or
bound
mov
add
sub
add
pop
in
jg
push
out
cmp
cmp
inc
add
outsl
call
xchg
fwait
push
das
inc
cmp
push
pushf
mov
add
inc
and
call
shll
outsl
jge
rcrl
xchg
ds
sub
add
push
add
nop
add
add
add
lahf
sbb
cld
cmpsb
add
loope
rolb
mov
icebp
dec
push
aam
dec
dec
mov
loopne
jg
add
add
cmc
push
cltd
mov
mov
dec
xor
lods
inc
add
dec
iret
xor
xor
add
mov
adc
or
or
pop
mov
jnp
dec
mov
pushf
pop
jmp
leave
in
cmp
mov
add
xchg
push
add
add
icebp
adc
repnz
mov
add
add
es
loopne
mov
aad
adc
mull
icebp
jmp
pushl
lret
inc
add
enter
pop
jmp
xor
cltd
stos
inc
add
xchg
or
rolb
sub
ret
and
sti
mov
add
mov
lock
hlt
add
fdivs
lea
daa
cmp
mov
add
stc
xor
inc
add
add
pop
movsl
xor
popa
push
jecxz
mov
imul
sbb
aas
dec
fwait
cli
cwtl
lcall
movsb
add
fs
and
push
add
mov
sahf
pop
loop
push
add
inc
add
dec
fsubs
sub
add
add
jecxz
adc
inc
add
rolb
add
add
in
jmp
mov
add
sti
cwtl
lods
mov
sub
sbb
stos
loop
test
add
rcll
clc
daa
int3
add
sub
inc
fmul
pop
nop
add
xchg
add
mov
cmp
pushf
and
cld
mov
mov
mov
aad
add
outsb
inc
add
call
out
sub
cld
stc
je
rorl
fwait
sahf
fs
outsl
mov
xor
adc
mov
add
add
aam
je
add
scas
sub
in
pop
push
in
ljmp
sbb
negl
add
ja
xor
rolb
addr16
sub
idiv
xor
clc
pop
push
out
pop
push
inc
ja
nop
add
add
xor
inc
add
in
out
mov
mov
sarl
add
out
sahf
pop
xchg
movsl
pop
sti
and
add
imull
rolb
scas
push
add
dec
lods
cltd
insb
jp
xchg
mov
mov
xchg
add
lods
mov
add
das
adc
in
xchg
aad
add
add
mov
adc
arpl
sub
repz
adc
add
mov
add
adc
es
add
outsl
mov
push
stos
lea
push
add
push
add
add
pop
sub
add
xlat
lods
mov
add
in
and
add
mov
je
mov
mov
outsb
cmpsb
add
or
rolb
xchg
add
add
mov
cmp
adc
clc
pusha
add
les
into
adc
das
pushf
sti
xor
xlat
cmp
rcrl
push
add
push
add
fsts
fsubl
add
outsl
cmp
add
sbb
jl
popa
js
or
add
aas
cmpsl
in
add
testb
sub
and
decb
and
add
mov
sbb
add
sti
es
add
test
add
xor
push
add
cld
ret
push
add
add
xor
and
testb
lods
push
add
pushf
mov
fwait
sbb
je
scas
xchg
add
xchg
js
add
icebp
mov
aad
dec
in
inc
rolb
xlat
pop
add
mov
testb
int
in
add
add
movb
js
add
add
dec
and
add
pop
cmc
loopne
mov
lock
mov
test
shll
mov
add
gs
les
insl
inc
add
roll
pop
mov
add
push
call
add
adc
lea
sub
push
mov
or
or
mov
jns
jno
add
pop
push
push
add
add
ret
xchg
pop
lock
fsubs
cs
iret
xchg
add
pop
test
mov
or
add
mov
push
add
leave
popf
mov
add
inc
add
addb
ret
leave
out
scas
dec
or
mov
out
clc
or
rcll
cmp
cmp
mov
in
add
scas
adc
add
cld
mov
adc
ss
or
push
add
ret
mov
and
add
inc
add
add
mov
add
push
add
ja
loop
mov
xlat
repnz
movsl
pop
lret
shll
add
jns
add
lds
add
add
fdivrl
dec
xchg
dec
mov
mov
fdecstp
add
decb
mov
add
dec
sbb
xchg
dec
pop
sti
pop
jp
push
add
add
jae
sahf
cmpsl
pop
iret
pop
lret
popa
sbb
xchg
mov
add
or
jmp
dec
cmpl
mov
neg
in
fcoms
in
xor
and
add
clc
outsb
pop
mov
jl
add
addb
mov
test
sbb
int
fsts
xchg
addb
les
xchg
fldt
popf
pop
add
gs
and
jnp
lret
jnp
jp
mov
out
jno
addb
push
loop
pop
rolb
sub
mov
add
xchg
push
add
adc
loopne
add
sbb
js
add
ljmp
add
aad
sti
and
mov
add
mov
ja
movsb
add
imul
test
jp
icebp
into
test
add
and
add
add
jbe
test
and
leave
push
mov
add
and
pushf
icebp
mov
ljmp
adc
jl
adc
or
add
adc
push
add
xchg
add
xor
cli
aas
pop
cmc
fwait
arpl
mov
add
add
cwtl
insl
lods
push
jmp
sub
push
add
aam
cwtl
andl
add
add
dec
xchg
add
add
add
adc
or
inc
add
add
rolb
testb
xor
jmp
sti
sbb
add
jno
outsb
sub
add
add
out
mov
out
add
add
dec
dec
dec
imul
sbb
in
and
mov
pop
cmc
jl
imul
repnz
push
lahf
xchg
add
pop
mov
push
add
nop
add
add
sbb
xchg
add
fdivr
dec
ret
mov
faddp
stos
xor
mov
add
sub
pop
push
or
jno
mov
sbb
xchg
add
add
or
add
add
add
add
arpl
mov
add
adc
adc
les
and
mov
push
add
push
add
xchg
popa
jg
xchg
dec
daa
incb
mov
mov
loop
popf
testb
js
mov
in
add
cmp
repnz
fdivl
inc
add
loope
dec
aad
mov
cmp
js
add
popa
flds
popa
cli
out
loopne
add
add
mov
std
iret
cmp
les
cmpsb
add
ret
out
adc
cmp
mov
add
out
xchg
add
add
stos
jmp
inc
add
rolb
data16
jle
lret
adc
in
aaa
push
cmpsb
add
shll
imul
arpl
mov
add
lret
jl
add
testb
arpl
adc
enter
pop
jg
push
add
mov
jge
je
unpcklps
xor
cmpsl
sub
into
xchg
ret
cmc
std
mov
lret
lret
mov
add
add
lret
popa
jo
rcr
push
add
add
aad
add
add
push
rolb
add
mov
in
ss
xor
movsl
dec
xchg
jns
sub
or
adc
xlat
sahf
xchg
xor
ret
mov
test
call
xor
or
dec
mov
stos
fdivrs
mov
aad
or
add
out
jb
cwtl
or
cmp
inc
add
mov
sahf
outsl
popa
cmc
or
add
repnz
leave
add
jle
add
imull
add
cmp
xchg
add
arpl
sbb
mov
mov
add
loopne
cmp
sbb
push
mov
add
pusha
add
add
mov
push
push
daa
and
mov
ret
push
or
add
adc
mov
add
out
sub
sbb
add
jmp
fsts
mov
fists
mov
pop
push
pop
lock
push
mov
dec
xor
jb
repz
cmpsb
add
dec
add
mov
and
and
xor
dec
or
repz
xlat
dec
punpckhdq
test
lods
in
loopne
cmp
call
ljmp
jg
add
add
shl
lea
add
add
mov
push
jge
outsb
adc
repz
xor
add
mov
add
mov
adc
sub
add
das
incb
add
hlt
add
testb
mov
imul
add
inc
add
sahf
push
popf
add
cmp
ficompl
add
add
xchg
and
add
mov
add
mov
mov
inc
es
iret
push
add
scas
leave
int3
jo
sbb
imul
and
mov
roll
mov
add
jno
mov
sub
call
add
jno
sub
in
jle
gs
shrl
add
add
add
rolb
jecxz
rorl
lods
jl
add
mov
add
add
add
iret
push
add
mov
lret
addr16
dec
inc
addb
mov
sub
dec
add
sub
xchg
or
dec
insb
mov
fiadds
inc
subl
pop
or
adc
mov
add
pusha
add
add
push
add
outsl
jnp
add
jne
inc
add
mov
mov
dec
mov
cmp
ss
jmp
int3
mov
xor
je
enter
rolb
mov
mov
and
mov
out
outsl
insb
sub
add
gs
mov
push
lods
pop
mov
jecxz
iret
or
mov
jge
sahf
sub
in
mov
fwait
push
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
jmp
jmp
add
add
jbe
mov
into
dec
jbe
dec
ds
cltd
jb
add
add
push
mov
pop
loopne
inc
mov
xchg
jb
jg
lret
ret
mov
data16
int3
cmp
inc
push
adc
mov
push
push
pop
lahf
cs
rol
adc
mov
add
xor
sbb
mov
add
shll
add
movsl
insb
cmp
cmpsl
cmp
jl
pushf
cmpsl
ret
cmpsl
rorl
pop
bound
mov
push
add
cmp
mov
dec
rolb
arpl
sub
pop
andnps
add
mov
mov
popf
jb
jg
pop
shll
sbb
add
roll
push
add
add
add
add
mov
mov
mov
add
xchg
add
in
ds
insb
push
mov
int3
int3
in
inc
inc
add
lahf
adc
dec
insb
mov
rolb
mov
sbb
mov
inc
mov
das
inc
addb
add
dec
push
sbb
test
mov
mov
loopne
hlt
add
pusha
add
add
push
cmpsl
lods
aam
fidivrs
add
add
sbb
push
add
add
push
iret
mov
popa
sbb
cli
test
inc
mov
das
addl
add
sub
data16
mov
sbb
lret
addr16
repz
dec
jo
xchg
pop
jno
add
push
xchg
add
add
xor
add
add
test
add
add
ret
mov
dec
and
mov
add
or
cmp
dec
lret
loop
mov
cwtl
xor
cmp
add
add
or
icebp
xor
add
add
add
or
add
lahf
sbb
mov
add
push
addr16
sti
ret
outsl
mov
mov
daa
and
xlat
mov
pushf
mov
jecxz
adc
add
and
lret
sarl
or
inc
add
insl
fcomps
inc
add
test
pop
cmpsl
dec
repnz
mov
call
lret
outsl
incl
add
add
rcrl
add
addb
dec
daa
and
jl
daa
push
add
rolb
pop
lret
xchg
inc
mov
push
mov
add
inc
add
add
notl
add
ret
idivl
jmp
add
fsubrs
xchg
mov
or
roll
xor
pop
cwtl
loopne
cmc
neg
inc
add
add
sahf
movsl
pop
push
repz
leave
testb
add
ja
test
adc
mov
je
leave
mov
add
add
clc
movsl
mov
int3
cmp
add
outsb
xor
or
add
add
cs
push
jb
fdivr
addr16
add
stos
cmp
ja
xchg
lahf
add
mov
xor
ret
push
cmc
cltd
leave
push
add
cs
xor
adc
add
mov
hlt
add
add
out
add
les
aaa
cmpsl
loop
mov
jl
bound
mov
lods
je
stos
cmp
mov
add
sbb
jne
jmp
xchg
add
add
sbb
add
add
add
xor
mov
or
inc
add
cltd
mov
jns
scas
testb
mov
jmp
daa
seto
in
sub
in
mov
aaa
repnz
cmp
insb
ss
fucomi
push
mov
cmp
outsl
mov
rcrl
add
mov
test
add
add
dec
out
roll
add
pop
cmp
rolb
aas
daa
dec
imul
jl
add
add
add
adc
les
push
add
les
aaa
add
popa
test
movb
add
cmp
push
decb
pop
pop
test
push
repz
rolb
ds
clc
fistpl
and
sbbl
cmpsl
xor
pop
mov
test
cmp
push
add
test
mov
cld
pop
mov
push
add
add
stc
push
add
add
or
add
add
add
pop
mov
roll
sahf
xchg
add
push
insl
jmp
add
add
or
lahf
icebp
hlt
add
jae
rcrl
add
push
add
add
push
push
add
add
pushf
sbb
and
addr16
xor
mov
pop
dec
push
mov
mov
fcmovnb
add
add
pop
arpl
lock
mov
fdivrl
inc
add
out
les
sub
sti
in
in
sub
adc
pushl
icebp
cltd
sbb
mov
out
xor
mov
add
pop
test
cli
fildll
add
dec
sti
xchg
inc
add
imul
sbb
pushf
push
add
add
mov
dec
cmp
xor
mov
nop
add
add
sbb
add
add
add
enter
add
outsb
inc
mov
lods
ljmp
xchg
add
and
mov
mov
add
add
mov
xor
sub
add
mov
add
add
add
loop
jb
iret
hlt
add
mov
ds
add
jno
add
add
testb
and
mov
xchg
add
rolb
cli
mov
imul
sub
sbb
add
add
ret
sub
stos
add
add
popa
out
dec
xchg
mov
std
and
fisubs
lret
and
mov
add
iret
mov
add
adc
mov
mov
out
push
xor
or
clc
loop
pop
sbb
iret
sbb
test
fbstp
add
add
mov
add
add
add
add
mov
xchg
add
xchg
add
sub
in
fsts
imul
add
sbb
add
xlat
pop
push
add
dec
fmull
dec
xor
rolb
sub
mov
cmp
cwtl
jecxz
add
add
out
sub
shll
add
cmp
dec
mov
stos
ss
testl
jnp
sbb
add
cmp
out
shll
popf
addb
xor
inc
add
add
lret
mov
sbb
test
je
xor
idiv
dec
psrld
les
inc
bound
mov
push
mov
mov
push
add
fsub
jnp
rorl
aas
jl
push
fildl
cmp
cmp
test
fisubrs
shl
add
push
add
adc
ret
add
or
add
mov
pop
xchg
data16
dec
ret
push
push
jp
mov
sub
add
xchg
pop
nop
add
add
repz
add
jl
pop
fisttps
adc
jl
fisubrl
icebp
pop
jmp
sbb
jnp
cmc
adc
int3
cmp
aaa
sub
jl
adc
push
add
imul
sub
push
add
ljmp
add
movsl
lret
push
add
ret
js
add
and
mov
movsb
add
mov
fsts
jae
add
add
loope
or
lock
std
scas
lock
inc
add
mov
call
add
push
sub
std
leave
mov
add
add
add
jmp
lahf
ret
xor
insb
inc
add
add
mov
add
add
cmp
mov
xchg
pop
mov
sahf
push
shll
xor
lret
leave
inc
loopne
add
mov
in
mov
add
push
add
pushf
adc
mov
add
and
push
add
and
rolb
js
jg
shld
jnp
cmp
jne
jl
add
pop
sub
add
push
add
add
inc
add
mov
in
adc
outsl
mov
js
shl
add
frstpm(287
fldcw
int
add
add
mov
add
cmpsl
xchg
pop
ret
xchg
add
add
add
add
lods
jbe
ret
add
add
cwtl
add
movsl
ret
imul
loopne
xchg
add
mov
sbb
lods
and
mov
add
mov
dec
lods
test
andl
pusha
add
add
mov
cltd
add
inc
test
mov
add
fimuls
add
movsl
cmpsl
outsb
xchg
adc
imul
add
add
and
add
mov
call
add
rolb
xor
jmp
shll
rorl
ljmp
in
cltd
and
test
fidivrl
lds
xchg
pop
out
add
and
mov
add
add
xchg
movsl
mov
out
testb
je
js
add
test
in
test
push
add
push
jp
mov
repnz
lods
mov
out
xchg
add
mov
push
adc
sbb
dec
jmp
xchg
or
mov
lds
mov
push
rolb
mov
nop
add
pop
and
gs
add
push
add
add
aad
pop
movsb
add
or
push
sbb
clc
sbb
inc
add
cmp
sub
push
add
cmc
mov
add
mov
pop
insb
push
mov
gs
test
into
lods
or
pusha
add
fsts
jae
scas
pop
jne
shl
std
pop
mov
call
test
scas
jno
sbb
jne
add
cmp
rcr
xor
push
add
imul
add
mov
inc
jns
xchg
add
andl
add
or
adc
cmpl
add
cmp
xor
pop
ret
add
add
aad
pushf
ret
mov
insl
mov
mov
pop
out
push
add
aas
pusha
add
cmp
add
jp
test
pop
push
scas
test
dec
out
add
add
add
lods
cmpsb
add
bound
mov
or
adc
sarl
add
addb
add
dec
mov
adc
addb
mov
add
add
jae
sahf
xor
push
insb
add
lock
cmp
repz
cmp
sub
add
jns
add
fnstenv
add
sbb
clc
mov
add
mov
movsb
add
lods
mov
add
jbe
inc
add
add
add
mov
stos
call
daa
mov
les
push
add
sub
dec
movsl
test
dec
push
add
add
dec
cli
mov
xchg
inc
cmp
jecxz
xchg
add
mov
and
leave
js
mov
add
add
fstps
aaa
in
and
mov
cs
lock
stos
out
inc
pop
popa
add
mov
clc
mov
jmp
add
or
dec
jno
cltd
out
mov
adc
inc
add
mov
mov
add
xchg
lods
dec
cmpsb
add
cmp
mov
add
jo
sti
inc
add
push
add
add
add
outsl
pop
loop
lds
pop
cs
mov
cwtl
jnp
stos
push
popa
add
mov
test
int3
je
data16
int3
lds
imul
je
int3
out
mov
add
add
add
jae
cmp
xor
rcll
fbstp
sti
mov
add
add
add
out
jmp
add
mov
add
add
sahf
and
mov
pop
inc
add
sbb
add
xchg
mov
mov
insb
into
ret
push
add
add
imul
mov
mov
and
mov
jp
lcall
mov
inc
add
rcrl
push
xchg
and
mov
xchg
xor
jp
sbb
add
imul
insb
inc
cwtl
addr16
aas
jae,pn
mov
add
addr16
sub
add
bound
mov
test
adc
aam
push
pop
sbb
and
mov
nop
add
loope
add
push
movsl
addb
sub
add
fcmovu
out
adc
xor
add
add
int3
pusha
add
mov
sbb
out
into
sahf
sub
dec
push
sbb
lret
pop
rolb
sub
dec
pop
sbb
inc
cwtl
cmpsl
add
mov
lds
int
rsm
pop
jmp
fisttps
mov
add
add
xor
mov
cltd
mov
sbbl
and
mov
add
add
icebp
jno
mov
add
mov
out
jns
or
mov
je
je
or
inc
ret
rolb
sbb
xchg
xchg
inc
add
add
jecxz
mov
add
push
inc
out
js
sub
adc
or
insl
fsubrs
push
add
xor
ds
out
subl
subl
movsb
add
adc
dec
cli
push
loopne
lods
pcmpgtw
push
add
fldpi
fdivl
in
fists
ljmp
push
add
shrl
dec
hlt
add
add
add
cmp
scas
sbb
jno
lret
dec
int
push
scas
jae
xor
or
inc
mov
mov
lcall
shrl
mov
movb
pop
fsts
add
add
mov
sbb
add
cmp
jmp
add
scas
aaa
inc
fwait
jnp
hlt
add
push
mov
repnz
out
mov
adc
pop
test
inc
pop
std
add
mov
or
add
nop
add
jmp
out
dec
imul
add
enter
push
add
add
add
aad
push
add
add
dec
jae
jg
nop
add
cmp
add
add
mov
movsb
add
push
test
mov
lret
iret
mov
adc
push
add
mov
test
jge
daa
jb
aam
mov
add
xchg
and
push
dec
push
add
inc
add
mov
scas
xlat
sbb
pop
xor
rolb
lods
and
mov
add
cmp
js
repnz
or
daa
or
outsb
jb
mov
mov
ror
aad
fmul
imul
std
add
mov
xchg
pop
cmc
sbb
mov
adc
add
test
xchg
mov
daa
fwait
in
mov
or
sub
shrl
das
rolb
int3
insl
push
pop
sbb
xchg
add
std
dec
pop
pop
adc
cld
xchg
add
mov
scas
inc
pop
prefetchwt1
outsl
push
les
daa
pusha
add
loope
insl
popf
sbb
inc
add
or
int
popl
add
add
add
imul
loopne
jns
stc
xor
aas
faddl
fidivrs
add
bound
mov
add
add
in
push
out
fiadds
mov
sub
loope
shll
push
fwait
rolb
add
pop
shl
push
add
adc
ja
outsb
cmpsl
arpl
sbb
add
cli
jecxz
cmp
add
add
sbb
jnp
mov
pop
add
add
adc
test
add
add
add
add
add
adc
or
add
add
pop
add
mov
add
aad
and
out
xchg
add
add
mov
mov
cmp
add
mov
add
aaa
jbe
dec
lahf
and
mov
loope,pt
sub
dec
mov
js
sbb
add
mov
push
add
addb
mov
movsl
xchg
sub
lahf
add
xor
pop
sub
aad
mov
fmull
add
sbb
pushf
mov
xor
roll
mov
jp
outsl
insl
push
xchg
fcos
mov
adc
push
add
xchg
add
add
or
mov
inc
mov
jl
test
cmpsl
les
adc
sbb
ds
add
mov
push
out
add
jns
jns
cmp
sbb
xchg
scas
inc
fcmove
push
in
das
out
inc
out
push
add
cwtl
and
mov
jns
fdivl
mov
cmp
add
mov
adc
add
add
pop
lcall
add
test
jae
add
pop
mov
mov
push
add
scas
adc
fs
add
sbb
pop
dec
leave
out
movsl
and
pop
xchg
add
lds
leave
mov
les
js
add
add
add
pop
pop
je
ficompl
adc
push
add
add
and
mov
cmp
add
addb
mov
data16
add
add
movsb
add
out
arpl
push
add
jnp
xchg
gs
lds
mov
js
or
sarl
scas
pop
mov
and
and
or
outsl
xchg
add
add
pusha
add
jno
das
sbb
decl
daa
test
xchg
add
insb
jns
add
mov
jge
xor
add
mov
add
sub
add
repz
add
xchg
add
pop
stos
mov
je
jp
add
push
add
dec
jle
jno
loop
adc
pop
pop
out
popl
add
sub
je
aas
movsb
add
add
jb
and
mov
pop
outsb
jns
ret
data16
fwait
push
fisubl
into
iret
and
addr16
mov
push
add
mov
mov
test
push
add
movsb
add
add
fwait
add
mov
pop
lods
push
sahf
outsl
pop
or
jmp
gs
mov
or
add
nop
add
jge
test
hlt
add
jmp
inc
mov
ret
movsl
xor
imul
iret
mov
test
fisubl
push
add
out
adcl
add
movsb
add
add
mov
mov
add
push
in
jecxz
jl
mov
jo
rolb
hlt
add
repz
cmp
pop
xchg
add
loopne
movsl
icebp
test
jecxz
xor
add
rolb
insb
push
add
add
pop
dec
movb
rolb
sub
cmp
jle,pn
and
cmp
test
and
rolb
add
add
add
xchg
jle
add
mov
sbbl
imul
mov
call
push
loopne
lea
and
xor
adc
add
loopne
call
add
in
mov
add
pop
push
add
addr16
mov
or
in
std
xchg
and
or
or
and
mov
lock
and
or
mov
mov
pop
adc
jns
je
inc
add
push
jle
add
inc
add
xlat
mov
add
out
and
mov
bound
mov
test
inc
into
jle
xor
addr16
add
pop
mov
jle
testb
fwait
jecxz
fsts
clc
lods
call
stos
inc
add
add
add
push
jl
sub
lcall
add
pop
insl
jne
hlt
add
add
adc
ret
sub
add
pop
out
lds
jge
push
add
add
cmp
mov
push
add
add
ja,pt
and
cli
ja
cwtl
sub
rcrl
out
cmp
cmp
repnz
cld
mov
cmp
cltd
add
addb
add
pop
pop
xchg
add
je
lret
and
out
movsl
sbb
cmp
lret
sub
and
sbb
add
add
rolb
cmp
jbe
and
je
loopne
lret
out
addb
test
aam
stos
adc
scas
and
mov
insb
pusha
add
push
or
mov
mov
add
add
add
jg
add
add
add
and
int3
mov
add
rolb
add
jb
jns
rcll
add
dec
inc
ljmp
data16
outsb
dec
sahf
rolb
mov
repz
imul
and
and
push
add
bound
mov
jp
stos
je
add
rolb
jge
or
mov
loop
add
mov
mov
imull
add
push
add
and
mov
lret
add
loop
cmpsl
rcll
push
cmp
movsl
call
or
add
pop
aas
in
out
xor
es
sbb
movb
js
xor
jbe
ret
add
sbb
mov
add
mov
sbb
mov
lods
aam
lock
ret
cmp
add
enter
dec
lods
inc
xchg
push
ljmp
jmp
xchg
lods
push
and
push
popf
and
mov
add
cmovs
mov
add
repnz
mov
push
add
scas
add
fsts
sti
clc
mov
add
ljmp
fistpl
lret
into
ss
mov
add
rolb
iret
movsb
add
dec
jecxz
push
lcall
jb
mov
sub
fistl
and
es
das
add
push
add
add
add
fcomp
sbb
pop
ljmp
add
add
add
in
lds
and
inc
add
add
das
es
add
add
lahf
add
in
add
mov
repnz
insl
leave
dec
stos
jg
add
movaps
ret
pusha
add
mov
scas
mov
mov
jle
add
jecxz
jne,pt
mov
dec
das
in
push
dec
int3
or
add
add
lea
add
out
pop
jg
addl
add
xchg
add
jecxz
sub
add
loope
enter
test
xchg
add
enter
in
jae
repnz
call
lea
pop
jecxz
das
dec
in
int3
xchg
dec
inc
add
mov
xchg
xor
data16
add
add
popf
lret
xor
sbb
add
mov
add
imul
jnp
cmpsl
fadds
push
in
jle
add
dec
pusha
add
std
jnp
add
cs
xor
insb
mov
add
movb
cs
add
inc
ja
add
xor
add
xor
add
je
jns
jg
std
loop
lea
add
push
adc
fst
add
add
insl
sbb
jl
inc
cmp
add
fwait
dec
movsl
je
push
sbb
sub
outsb
nop
add
mov
jg
dec
adc
cmp
add
fiadds
mov
add
dec
add
mov
jg
cmp
int3
jb
repnz
lcall
push
add
aam
call
rorl
icebp
rolb
jne
fwait
dec
loopne
jnp
add
and
into
out
imul
adcl
arpl
add
add
cmp
loop
addb
pop
or
add
dec
jbe
arpl
mov
jmp
cmpsb
add
add
add
inc
add
add
or
test
xchg
add
mov
jp
push
add
add
in
ja
add
mov
mov
cmp
cmc
mov
cmp
dec
push
add
imul
mov
pusha
add
xchg
adc
lahf
mov
mov
xchg
jb
sub
add
fnstsw
das
jp
push
inc
add
add
add
cld
out
and
mov
add
add
add
mov
mov
lret
test
push
jl
ljmp
mov
xchg
lods
loop
mov
movb
add
cs
int3
xor
leave
pusha
add
rcll
in
jp
insb
xor
or
sbb
nop
add
mov
add
jp
ret
insb
in
sbb
mov
dec
test
add
in
hlt
add
inc
and
mov
je
mov
sbb
pushf
cmp
cmp
sbb
add
ret
les
mov
add
insb
add
add
fimull
jl
add
fstpt
loope
add
cmp
mov
insb
pop
adc
out
inc
sbb
add
sub
leave
inc
mov
jnp
jno
push
add
stos
sub
insb
pop
cld
sub
pop
mov
add
add
push
mov
xchg
fcomi
add
movsb
add
ficoml
lods
push
add
arpl
add
adc
ljmp
ficoml
jns
lret
or
add
xchg
enter
pop
js
das
out
xlat
lret
mov
xlat
push
sbb
add
jbe
cmpsb
add
jle
fstl
add
dec
stc
or
jp
add
jle
or
add
add
add
xchg
mov
add
dec
aaa
xor
push
icebp
xchg
sbb
pop
push
add
data16
add
mov
add
xchg
push
in
stos
xor
jg
xor
sub
movsb
add
add
sub
jne
add
sahf
bound
mov
adc
insl
pop
test
add
mov
xor
jmp
fisubrs
ja
xor
xlat
ret
add
push
add
ja
dec
cld
daa
out
pop
push
add
nop
add
pop
push
add
add
add
add
add
dec
addb
mov
popa
cmp
add
stos
scas
iret
xor
aam
addb
sti
mov
cmp
repz
adc
out
dec
js
gs
lds
pop
rolb
roll
mov
mov
add
add
push
jl
daa
pop
out
iret
nop
add
pop
ljmp
add
lods
push
add
sub
add
jns
int3
fsubrl
add
add
add
add
xor
pop
dec
ljmp
add
pusha
add
mov
insb
jp
mov
xlat
jns
testb
cmp
add
add
add
add
xor
je
dec
and
mov
add
out
mov
cmp
add
xchg
add
add
lcall
add
add
or
test
push
add
dec
push
add
scas
dec
sub
lock
out
in
stc
jae
in
xchg
fistl
add
dec
mov
mov
mov
daa
lods
xor
fstps
xlat
pop
mov
push
add
jle
pusha
add
out
jmp
mov
mov
add
add
add
xchg
jb
lea
repz
add
sbb
add
movb
add
mov
add
mov
pop
inc
add
jg
add
pop
rolb
mov
push
xchg
add
adc
mov
adc
std
ret
mov
mov
add
ljmp
sub
mov
or
lcall
or
daa
sub
mov
in
add
loop
rolb
dec
sbb
sti
adc
sbb
fistpll
jge
xchg
lods
pop
jo
and
rcrl
inc
xchg
and
mov
dec
jl
jb
fsubrs
pushf
or
scas
cmpsl
xchg
add
addb
add
fisubs
mov
adc
add
xchg
add
bound
mov
jmp
movsb
add
add
popf
mov
push
xlat
xor
cmc
popa
into
leave
mov
mov
jbe
sahf
dec
adc
pop
push
add
add
mov
data16
push
cmp
add
addr16
add
aad
add
jno
dec
movb
mov
outsb
and
mov
sbb
shll
add
add
pop
xor
loopne
xor
add
mov
mov
daa
enter
push
add
sbb
cmp
add
add
ds
dec
push
add
ja
icebp
sbb
adc
dec
xor
add
lret
push
add
push
add
mov
sti
xchg
adc
inc
add
jnp
mov
hlt
add
jns
xlat
xchg
mov
out
outsl
cwtl
hlt
add
cmp
incl
add
mov
add
push
test
stos
das
push
add
add
add
mov
xor
add
add
add
add
sbb
add
mov
add
add
mov
in
add
stos
add
push
sbb
imul
add
add
sahf
lcall
cmp
mov
xor
fwait
loopne
xchg
add
sub
movsl
cmc
mov
mov
flds
push
add
ljmp
add
mov
and
add
add
call
data16
loop
push
push
add
jb
jecxz
add
xor
sub
rolb
mov
sub
pop
lcall
jb
bound
mov
out
std
mov
sub
adc
fsubs
add
cwtl
add
mov
xchg
add
add
dec
push
and
stos
nop
add
add
add
mov
mov
push
mov
add
jns
xchg
jecxz
fwait
rolb
xor
cmp
add
jecxz
dec
aas
addb
fmul
scas
mov
aad
add
and
mov
push
xlat
repnz
lods
arpl
add
movb
cs
outsb
xchg
add
add
add
lods
iret
add
add
mov
add
mov
push
inc
add
and
outsb
cmp
call
jo
cmpsb
add
dec
ret
hlt
add
mov
shll
push
add
scas
and
mov
xchg
sbb
add
mov
or
movsb
add
add
movsb
add
add
flds
mov
addb
dec
push
xlat
int
add
test
mov
sbb
leave
sahf
pop
pop
aam
mov
mov
test
mov
add
push
add
push
aad
pop
fistps
fdivrl
gs
add
add
imul
add
add
add
stos
stos
pushf
xor
or
add
pop
in
test
nop
add
mov
xor
mov
add
jmp
and
jae
fidivl
dec
add
add
add
mov
push
add
clc
popa
add
mov
pop
mov
mov
pop
dec
out
mov
stos
pop
imul
sub
mov
test
testb
adc
jecxz
add
add
cmp
xchg
mov
rorl
jmp
inc
add
add
push
mov
add
mov
scas
sbb
loope
movsl
push
add
mov
xor
and
add
add
fwait
test
add
push
add
add
addl
sbb
add
pusha
add
xchg
add
xchg
add
pop
lcall
insl
in
pop
mov
add
xchg
add
pop
lret
ja
pop
and
mov
arpl
movsl
cld
mov
push
outsb
jne
pcmpeqw
ficoms
add
pushf
push
add
push
mov
sbb
mov
fnstenv
addr16
out
pop
call
add
fnsave
pop
ret
inc
push
add
mov
add
pop
popa
mov
mov
jecxz
cltd
cmp
mov
xor
sub
cmpsb
add
loope
add
pop
ret
imul
add
iret
mov
call
hlt
add
cwtl
sub
add
add
inc
push
add
cmpsb
add
mov
adc
pop
mov
mov
js
inc
addb
test
pop
add
push
add
add
daa
mov
mov
dec
mov
xchg
add
cld
inc
andl
and
sub
add
xchg
sti
test
push
add
out
sub
add
add
cltd
push
add
pusha
add
sub
dec
jb
adc
cmp
les
jno
mov
das
or
sub
sbb
mov
test
mov
sbbl
xor
add
add
loop
adc
cmp
or
push
add
add
add
pop
pop
icebp
jbe
xchg
cmpsb
add
mov
add
imul
cmp
cmpsl
test
outsl
bound
mov
add
nop
add
mov
cmp
jno
jns
add
mov
push
add
mov
add
mov
das
daa
popf
xor
loop
mov
lds
mov
add
lcall
mov
add
repz
jmp
add
push
jb
pop
xchg
add
ja
loopne
push
adc
popf
iret
lds
in
mov
aas
adc
dec
sbb
push
js
add
adc
xchg
popa
call
xchg
sub
pop
je
mov
fisubl
call
sti
mov
adc
add
out
add
mov
clc
mov
cs
push
add
add
mov
push
imul
and
sub
nop
add
add
mov
dec
pop
fistpll
add
loop
or
lret
push
add
adcl
xchg
add
mov
sub
mov
ret
fcmovne
jne
add
add
pop
pop
inc
hlt
add
add
test
mov
inc
add
mov
addb
imul
testb
shrl
fisubrl
imul
cmp
cmp
mov
add
dec
mov
mov
and
mov
sti
arpl
lea
inc
add
add
add
add
jecxz
mov
push
movb
add
mov
add
mov
cmpsl
xchg
xor
push
add
hlt
add
lds
add
aaa
aad
add
insb
inc
add
loope
inc
add
movsl
ljmp
or
add
loope
add
in
out
push
mov
ret
aad
sub
call
jmp
mov
add
add
sbb
add
add
add
add
push
cmp
mov
sbb
xchg
int
dec
dec
sahf
cmp
fcomp
xchg
add
add
cmp
adc
or
mov
jb
jl
jb
inc
add
mov
xchg
xor
jl
in
dec
outsl
jle
add
std
iret
ljmp
push
add
cmp
sbb
add
add
add
mov
pop
movsl
ljmp
and
sti
lods
mov
jp
jns
add
add
dec
xchg
pop
mov
shll
jmp
jne
sub
jns
add
testb
in
dec
jmp
stc
out
push
add
jg
add
insb
jne
pop
loopne
mov
xor
ret
push
add
add
add
insl
or
jb
cmp
add
ljmp
shll
mov
sti
std
mov
dec
pxor
push
add
jnp
add
add
inc
int
stc
fdivrs
pop
lods
dec
stos
rcll
add
mov
test
fisubrs
imul
loopne
aas
or
iret
call
add
add
inc
call
xchg
add
repnz
jge
leave
les
sub
xchg
mov
int3
bound
mov
add
xor
das
push
add
jno
std
mov
and
mov
add
mov
sbb
rolb
out
add
add
mov
mov
cmp
sbb
icebp
or
add
xor
add
push
arpl
add
mov
add
mov
add
lahf
mov
xchg
dec
addb
jp
mov
mov
data16
add
ffreep
add
cmp
add
pop
jl
jnp
add
inc
add
in
push
add
rolb
sub
sahf
popa
hlt
add
add
add
pop
dec
sub
pop
rolb
or
xor
inc
hlt
add
add
add
addb
testb
cwtl
pop
dec
inc
add
daa
adc
movsl
mov
lock
rolb
ret
mov
xchg
inc
add
add
push
hlt
add
add
mov
mov
arpl
push
add
xchg
add
add
pop
inc
jnp
add
add
push
sbb
stos
jb
in
mov
ret
ja
popl
mov
pop
add
dec
mov
stos
pop
xchg
jmp
loopne
cld
add
push
add
add
and
adc
add
add
push
add
xor
or
lret
mov
pusha
add
push
cmp
mov
movsb
add
add
repz
jo
scas
jmp
add
mov
add
add
add
scas
enter
add
mov
add
leave
dec
ljmp
cmp
out
fcmovnb
add
jno
ret
jno
add
and
or
and
lret
add
xchg
and
mov
add
test
add
and
mov
add
and
mov
add
add
int3
add
sahf
xor
out
xchg
mov
pusha
add
inc
add
sub
inc
adc
addb
stos
loopne
leave
std
add
mov
pop
add
add
add
mov
add
add
jbe
addb
mov
in
sub
add
sub
mov
ret
cwtl
fwait
insl
aas
test
inc
push
add
mov
int3
lcall
rolb
add
in
xor
cmc
sub
add
dec
insl
bound
mov
push
lcall
add
push
add
mov
das
sahf
cmp
and
mov
cmp
mov
cmpsl
push
add
add
scas
inc
add
cmp
push
in
outsb
jle
sbb
cs
jbe
les
push
add
add
jecxz
add
lret
add
add
addb
adc
and
add
dec
pop
dec
sbb
fs
dec
das
shl
xor
inc
mov
mov
sti
and
pop
xchg
xor
cltd
push
add
cmp
dec
dec
dec
test
repz
add
add
test
stc
ficoms
add
inc
add
jle
add
fisubrs
in
fs
mov
dec
lcall
repz
jecxz
mov
icebp
or
rorl
pop
lcall
and
stos
rolb
imul
add
ljmp
push
add
ss
pop
lahf
rolb
imul
jnp
add
aad
add
add
add
in
mov
push
add
mov
add
lock
jb
and
clc
xor
dec
repnz
push
add
add
pusha
add
fdivrs
insl
addb
adc
or
add
add
add
mov
rolb
mov
xchg
add
sub
jmp
enter
push
add
cmp
mov
loop
insb
sahf
push
jmp
in
test
add
mov
dec
inc
test
mov
add
add
cwtl
addb
in
add
push
cmp
add
and
mov
inc
add
mov
insb
std
xor
mov
cmp
add
add
and
push
add
lret
mov
roll
ljmp
cmpsb
add
addb
pop
test
bound
mov
cmp
mov
std
pop
inc
add
add
cmpsl
imul
dec
je
mov
xor
in
mov
and
ja
push
mov
andl
adc
insb
or
add
add
adc
es
shll
and
mov
xor
outsb
add
lret
inc
jl
add
add
add
add
repz
sub
add
add
mov
add
mov
add
add
mov
push
movsl
add
xchg
mov
add
aam
push
add
cld
fsubp
add
bound
mov
add
xor
sbb
mov
mov
addr16
add
add
mov
jb
xchg
mov
pop
mov
add
adc
psrad
in
mov
aam
shrl
add
aad
sahf
lret
jno
cs
cwtl
jno
add
ficoms
pop
inc
add
pop
push
icebp
sahf
mov
fdivrs
pop
lods
or
add
sub
and
mov
push
mov
add
add
push
dec
jno
jns
jle
mov
movsl
addr16
adc
cmp
fstpt
testb
jmp
outsl
cmp
ljmp
imul
xor
lcall
in
outsb
imul
scas
stos
cmpsb
add
ret
jle
cmc
push
add
sbb
add
enter
jg
ss
out
addr16
add
dec
repz
bound
mov
mov
push
add
bound
mov
hlt
add
add
add
add
imul
mov
out
fcmovnbe
add
push
add
jg
sub
mov
xchg
add
dec
mov
xor
jb
stos
mov
inc
add
fidivs
add
pop
jg
mov
pop
push
add
mov
fbld
add
sbb
test
addb
add
add
cmp
add
mov
mov
add
mov
push
pop
xchg
test
add
jl
stc
xor
mov
clc
mov
pop
add
loop
daa
loop
cmp
add
mov
sub
mov
sbb
mov
mov
or
dec
lock
mov
mov
fbstp
mov
or
insl
and
xchg
add
cmp
push
add
jbe
sub
mov
inc
add
dec
or
subl
push
pop
loopne
push
lcall
mov
js
adc
add
int
add
stos
xor
add
add
add
enter
add
imul
leave
push
add
push
mov
in
push
rolb
outsb
adc
xchg
add
icebp
jbe
mov
lahf
mov
mov
arpl
test
dec
test
mov
add
mov
lcall
add
loope
add
xchg
addr16
addb
imul
rolb
jo
sti
mov
lds
int3
lock
nop
add
add
xor
add
in
xchg
cmp
test
bound
mov
jnp
add
inc
add
adc
leave
data16
add
stos
cli
sbb
xchg
add
pop
jb
adc
out
pushf
cwtl
cs
rolb
add
sarl
icebp
mov
add
add
inc
add
add
jb
sahf
adc
sub
aaa
rorl
mov
push
add
add
pop
pop
mov
add
dec
aaa
add
mov
dec
add
add
popf
lods
dec
sub
out
rep
cmc
inc
add
std
fisttpll
jp
add
mov
push
testb
stc
test
sbb
add
xor
int3
mov
add
add
out
push
add
add
mov
out
in
int3
cmpsb
add
add
mov
adc
pop
outsb
jge
pop
js
addr16
push
test
ljmp
and
mov
dec
jl
mov
add
add
mov
mov
into
adc
cmp
div
add
adc
iret
mov
xchg
add
add
insb
aad
push
add
cli
lods
sub
scas
adc
hlt
add
repz
dec
cmp
add
add
add
ficompl
fcomp
mov
add
add
sbb
xor
sub
push
stc
stos
add
stos
pushf
and
add
cmp
negl
fs
add
xor
mov
nop
add
and
mov
pop
mov
xchg
add
cs
clc
outsb
out
cmpsl
jp
mov
test
int
aas
or
sbb
add
arpl
aaa
les
pop
cli
jno
fiadds
add
add
pop
mov
pop
test
cltd
adc
fstl
add
sbb
rolb
in
sbb
add
or
add
sbb
lret
jnp
push
add
xchg
test
push
add
cmp
fwait
mov
sub
mov
lret
add
pop
loope
hlt
add
sub
iret
push
test
mov
add
sub
add
add
mov
mov
fstpl
jge
add
add
add
sbb
adc
cwtl
or
mov
mov
xchg
or
mov
inc
adc
jnp
mov
cld
cmpsl
ja
icebp
push
mov
add
fs
and
mov
push
testl
push
popf
push
dec
dec
aam
sub
jne
sub
inc
add
scas
mov
pop
push
mov
adc
jp
inc
dec
repnz
clc
repz
add
mov
data16
mov
xchg
cmp
cmp
jo
sahf
sub
pop
aas
cli
cld
sbb
inc
add
or
dec
adc
add
sbb
mov
add
cltd
inc
add
addb
add
xchg
pop
jns
add
pop
jecxz
aas
in
fstps
mov
xor
imul
add
mov
jecxz
sub
scas
cli
xchg
add
dec
dec
pop
fmull
pop
dec
sbb
data16
into
adc
add
add
add
add
jae
movsb
add
add
imul
mov
jmp
sbb
int3
mov
stos
push
add
xchg
in
mov
loop
push
cmpl
add
adc
xlat
xor
add
add
fsubs
clc
mov
loope
xchg
sub
mov
repz
iret
cmpsb
add
add
mov
add
jo
testb
lret
push
add
movsb
add
add
add
mov
cmp
and
dec
sti
pop
stos
adc
pop
out
addl
add
dec
push
add
push
add
repz
popl
mov
add
add
data16
add
add
rol
dec
jle
add
mov
or
and
mov
test
testb
and
mov
and
add
pop
jg
aaa
inc
push
add
add
inc
test
dec
sbb
add
add
jne
test
cwtl
xlat
jle
cmp
add
sbb
push
add
xor
sub
mov
movb
movsb
add
and
jecxz
nop
add
pop
mov
jp
and
inc
add
je
ja
testb
dec
fwait
nop
add
insb
clc
stos
xlat
pushf
or
sbb
cmpsb
add
add
js
sbb
mov
add
add
add
and
fiaddl
repnz
push
les
out
adc
xchg
aam
adc
stc
in
mov
rolb
jmp
jne
jbe
push
add
das
add
mov
scas
sbb
add
mov
sub
add
ret
fcoms
xor
addr16
mov
mov
and
subl
out
and
mov
xchg
mov
lods
aam
and
mov
add
jge
cmp
out
mov
mov
add
lods
adc
pop
add
mov
add
xchg
movsl
jno
add
ret
xchg
add
add
orl
ljmp
add
add
dec
addb
push
add
xor
sbb
xor
push
les
sbb
mov
push
jg
add
xor
out
add
icebp
test
iret
fwait
mov
js
add
add
add
mov
mov
addr16
jp
cwtl
subl
fsubs
out
lods
inc
add
add
add
movb
adc
jmp
add
fsub
add
add
push
add
mov
xchg
add
adc
fsubrp
sub
gs
add
lea
inc
ja
add
add
aas
lret
sub
mov
mov
push
popa
nop
add
add
cmp
sbb
add
push
push
add
int
add
lds
mov
sub
pop
push
add
idiv
addl
add
mov
movsl
xchg
add
adc
cmpsb
add
or
add
scas
inc
add
jno
jmp
dec
out
lock
fnsave
insb
stc
hlt
add
stos
std
mov
and
cmpsb
add
xor
lea
pop
add
cmc
popa
pop
mov
mov
cld
into
mov
add
mov
cmp
add
pop
xchg
mov
dec
mov
and
and
dec
cmpl
add
or
ss
pop
aam
jecxz
addl
add
mov
add
add
loope
add
add
jle
xchg
cmpsb
add
in
out
jge
and
mov
outsb
scas
test
jl
cli
mov
cmpsl
or
xor
mov
add
iret
out
mov
sbb
sbb
mov
push
xor
xorl
insl
push
add
cmpsl
in
psubd
xchg
add
jno
movsl
sar
pop
fldenv
mov
jae
add
mov
loop
xchg
cltd
stos
xchg
add
jle
add
add
add
dec
stc
scas
ret
pop
dec
mov
push
mov
mov
movsb
add
adc
add
jnp
push
ljmp
adc
cs
outsl
or
push
add
jo
sbb
adc
addb
push
add
pop
adcl
add
ljmp
adc
dec
js
xor
test
addb
fmull
xchg
js
add
mov
int3
push
test
jne
lahf
inc
mov
push
leave
xlat
mov
add
ljmp
pusha
add
leave
arpl
sub
add
mov
test
add
test
adc
stc
mov
fldl
and
ret
lret
call
sub
add
pop
cmp
add
add
add
push
ja
in
sbb
add
jb
fadd
dec
insl
popa
lahf
adc
mov
and
add
imul
add
jbe
stos
sahf
mov
inc
out
xchg
fists
sti
sub
mov
cmc
push
data16
inc
push
add
cld
out
lahf
dec
sub
add
add
xor
loop
iret
sub
add
das
push
add
cwtl
mov
add
jno
test
inc
add
add
adc
cmp
add
mov
dec
imul
mov
out
out
jo
xchg
add
pop
xlat
aam
push
add
sub
dec
repnz
add
add
sub
nop
add
daa
lods
pop
or
sbb
add
pop
cwtl
mov
xor
cli
outsb
pop
scas
cmp
jnp
add
add
dec
icebp
mov
adc
loope
mov
or
add
mov
adc
add
mov
sub
fadd
add
or
inc
add
add
inc
add
movsb
add
add
add
add
cmpsb
add
addl
add
std
mov
mov
roll
mov
add
call
clc
gs
lahf
jb
mov
pop
in
add
sbb
mov
stc
jmp
mov
in
or
test
rolb
pop
cld
arpl
add
test
add
add
inc
add
aad
adc
mov
push
insl
add
adc
or
jbe
mov
icebp
jge
xchg
jno
add
xor
pop
xchg
and
lds
add
push
add
jmp
mov
and
add
add
cld
in
test
mov
add
sbb
fcoml
addb
test
scas
enter
cmpsb
add
sub
lret
les
add
sbb
les
fcoml
xchg
movsb
add
lcall
add
push
add
add
rcr
mov
mov
in
repnz
add
icebp
xchg
and
loope
add
lea
add
push
pop
pop
adc
aaa
cmp
add
add
add
and
pop
daa
mov
add
or
push
add
add
push
inc
mov
mov
and
add
test
jne
mov
test
popf
cmpsb
add
lods
or
dec
repnz
add
sbb
pop
test
mov
test
dec
fildl
aaa
fisubrl
add
pop
add
mov
adc
add
add
jmp
pop
mov
cwtl
test
jnp
add
add
mov
cli
cmpsl
fdivrp
add
add
jns
mov
add
add
add
and
pop
mov
std
pop
std
add
mov
add
add
testb
mov
enter
test
add
fldenv
mov
push
add
pop
loopne
fdivrl
mov
fldcw
xor
inc
add
mov
rolb
mov
pushf
lahf
pop
xor
pop
add
jne
mov
push
add
add
cli
mov
xor
into
aad
jnp
add
add
rcll
lea
cld
aad
in
add
push
add
jecxz
add
int
pop
js
add
add
das
xchg
in
add
jmp
sub
add
xchg
jnp
int
add
add
ja
addb
inc
lods
adc
mov
mov
in
mul
add
xchg
fmul
rolb
push
add
add
insl
outsb
es
imul
cltd
nop
add
pop
call
add
in
sub
add
pop
repz
sbb
add
add
in
scas
aam
or
jmp
inc
add
xchg
inc
and
out
sarl
jb
in
mov
add
mov
add
and
adc
add
mov
dec
sbb
cs
add
sub
pop
rolb
xorl
gs
pop
insb
aad
push
pusha
add
add
xchg
add
and
mov
addr16
sub
and
cld
mov
add
pop
data16
add
add
ljmp
movsb
add
adc
int
inc
out
movb
icebp
shl
dec
sub
add
inc
int
add
je
push
add
pop
xchg
add
cmpsb
add
add
nop
add
add
loop
call
push
add
dec
in
inc
add
lods
or
movsb
add
inc
add
add
hlt
add
gs
or
test
xor
ljmp
push
add
pop
js
adc
int3
cmpsl
mov
jns
push
mov
xor
mov
scas
jmp
push
add
add
lcall
cmc
inc
add
add
ja
jmp
and
ficomps
fst
add
aad
add
pop
sbb
scas
cmpsb
add
adc
jnp
mov
lods
adc
test
inc
add
sbb
insb
pop
xchg
add
sti
cmpsl
sbb
ret
dec
clc
testb
inc
sub
add
scas
popf
dec
sbb
je
push
testb
add
inc
push
add
mov
in
outsb
lods
rolb
rolb
or
mov
ret
dec
inc
add
sti
jnp
sub
hlt
add
out
and
fld
add
mov
jnp
pushl
cld
xor
mov
mov
lea
add
add
mov
dec
sbb
sbb
out
rolb
push
and
imul
add
sub
pop
adc
stc
in
popf
cmp
sbb
add
mov
add
flds
popf
shl
test
cmpsl
or
cwtl
xchg
add
arpl
mov
pop
pop
nop
add
loopne
cltd
loop
outsl
mov
pop
call
jae
add
icebp
sti
mov
sti
sbb
push
jmp
xchg
aas
or
pop
aaa
mov
cmp
ds
insl
addr16
cld
jo
sar
mov
lret
imul
xor
add
mov
push
lods
fldenv
mov
add
cli
cmpsb
add
add
add
cmc
xchg
add
mov
imul
xor
stc
mov
addb
insb
jg
aaa
xchg
lcall
movntq
add
orl
mov
cmpsl
add
cmpl
insb
cmp
jge
add
mov
mov
xchg
or
cmp
add
or
xorl
add
jge
and
mov
fnsave
mov
push
dec
cwtl
add
mov
add
sbb
fucomip
enter
jno
hlt
add
cmpsl
pop
dec
in
lds
add
cwtl
aam
fwait
add
in
enter
out
cli
cs
add
movsb
add
add
das
cmp
dec
jl
jns
lods
jmp
jmp
add
add
mov
xor
and
ret
sti
cld
jl
pop
idivl
push
add
andl
add
movsb
add
push
xchg
add
test
cs
movb
dec
ret
pop
mov
add
jno
add
push
add
cmp
xor
or
jg
jno
or
pop
adc
add
test
pop
add
add
das
icebp
dec
jge
enter
inc
add
add
dec
test
mov
into
inc
sahf
movb
lret
pop
pop
xor
add
adc
mov
add
push
cwtl
mov
loop
and
mov
pop
mov
mov
pop
dec
pop
and
mov
loopne
mov
add
add
in
out
pop
movsl
enter
popa
sub
xor
ret
add
add
add
add
add
add
clc
repnz
out
add
dec
out
cmp
dec
repz
inc
add
pop
cmp
or
add
push
add
adc
xor
add
mov
push
add
push
add
pop
stos
movb
adc
insl
aas
pop
jp
orl
jg
mov
lcall
inc
loop
ljmp
in
sti
clc
adc
add
lret
xor
add
or
inc
add
testb
or
sbb
sub
pop
and
mov
add
dec
push
jecxz
add
mov
xchg
lret
sub
mov
xchg
push
sbb
pop
outsl
mov
daa
aaa
add
mov
add
adc
xor
out
sbb
pop
inc
add
mov
andl
add
imul
daa
and
xlat
scas
jecxz
rolb
sub
out
aam
pop
fiadds
mov
add
sbb
xchg
inc
xchg
push
pop
jge
popf
sbb
add
xor
movb
add
sbb
test
inc
add
pop
add
dec
pop
jne
add
cld
push
iret
test
pusha
add
jge
loopne
out
add
jmp
add
mov
mov
cmpsl
xlat
push
mov
addb
mov
sub
add
mov
jecxz
jle
dec
in
les
sbb
dec
dec
pusha
add
add
enter
add
data16
addr16
xor
ret
dec
pusha
add
add
add
pusha
add
add
mov
add
push
dec
or
adc
or
mov
lock
dec
xor
push
mov
mov
sbb
add
add
dec
pop
push
add
in
and
add
inc
mov
cmpsb
add
add
add
sub
add
repz
pop
xchg
add
add
add
repz
out
ret
and
add
mov
mov
std
xchg
add
add
add
add
cs
and
in
pop
jecxz
add
mov
add
mov
sub
push
push
add
int
add
xchg
add
add
scas
sub
and
mov
add
add
into
movsb
add
push
inc
add
lods
adc
sbb
add
jge
jnp
add
mov
add
jl
daa
mov
pop
push
add
mov
push
mov
gs
movl
mov
movsl
add
pop
jecxz
add
mov
add
fisttps
or
adc
mov
pushf
pop
or
xlat
cmpsl
cli
jne
dec
int
jp
add
pop
out
mov
add
xor
mov
add
push
xor
mov
scas
cwtl
scas
or
clc
mov
add
mov
in
inc
xor
ds
sub
loop
jmp
cli
mov
add
sbb
and
fsubrl
in
add
cltd
jbe
outsl
fcmovnbe
sbb
add
add
inc
arpl
stos
mov
push
add
enter
movsbl
pop
and
xchg
dec
rolb
sub
pop
test
nopl
loopne
cld
imul
push
popf
insl
inc
sub
xchg
add
into
mov
add
add
addl
push
fstl
div
add
dec
insl
push
add
popf
aaa
test
fidivs
rol
add
sub
enter
movb
fidivs
leave
push
mov
cmpsl
jnp
or
out
and
mov
add
inc
add
jl
or
rolb
outsl
sahf
sarl
addb
fnsave
cltd
cli
loope
rol
add
mov
jne
mov
cmc
rolb
pop
inc
dec
das
addl
add
movsl
cmovnp
imul
add
pop
rolb
mov
js
sbb
jne
int
push
add
add
add
dec
notl
add
lods
sar
add
and
mov
adc
cwtl
and
mov
mov
add
cmc
dec
sahf
pop
jb
mov
repz
mov
add
inc
mov
mov
cwtl
or
push
loope
add
mov
flds
mov
cs
push
adc
add
add
mov
sbb
rolb
and
mov
imul
rcll
repz
push
add
pop
jg
push
ljmp
pop
mov
fisubl
pushf
add
jecxz
mov
add
cld
cwtl
push
jae
clc
addb
add
call
pop
push
xor
add
mov
jl
add
and
mov
movsb
add
add
add
sbb
add
xchg
dec
lock
nop
add
leave
lret
mov
push
pop
xor
aas
mov
idiv
sub
xchg
data16
mov
jnp
scas
mov
insb
dec
je
pop
in
xchg
add
add
inc
add
and
adc
sbb
add
sbb
loop
and
mov
mov
mov
pop
push
add
mov
pushf
xor
mov
add
frstor
icebp
addb
ja
rolb
mov
inc
fcoms
add
data16
mov
vxorps
ret
add
inc
add
mov
negl
mov
sbb
pushf
stc
xor
int3
lock
mov
add
mov
dec
mov
add
add
xchg
add
mov
add
xchg
lock
add
add
push
add
lock
xorl
mov
pop
jns,pn
add
inc
mov
mov
add
add
and
lahf
imul
dec
xchg
add
add
cs
add
add
pop
pop
pop
mov
loopne
sub
outsl
test
add
pop
xor
push
cmp
mov
lock
test
and
add
inc
dec
mov
and
jmp
or
add
gs
mov
mov
cmp
cs
rolb
and
sbb
leave
ret
jbe
add
sub
jns
xor
mov
pop
and
add
pushf
nop
add
push
xchg
lock
inc
inc
jecxz
add
add
push
jmp
xlat
les
adc
cmp
add
dec
xchg
or
fcmovu
xchg
add
pop
sti
and
mov
jns
xor
pop
mov
mov
pop
ret
dec
aam
fsubl
add
xchg
add
and
mov
add
add
xchg
add
add
ljmp
xchg
jle
sub
imull
not
outsl
sbb
cld
test
lcall
add
jns
jns
add
push
add
outsb
std
jbe
testb
add
jnp
add
stos
add
mov
cmp
in
mov
popf
pop
ljmp
subl
add
xchg
mov
iret
jg
inc
add
push
add
add
inc
lock
xchg
add
cwtl
das
jecxz
mov
fildll
pop
jecxz
add
ret
lods
rolb
mov
mov
pop
les
ficomps
int
add
call
adc
push
add
jno
dec
dec
aam
jae
int3
outsl
stos
jmp
add
std
mov
arpl
aad
pop
fldt
add
add
add
mov
or
add
mov
sahf
adc
dec
stos
dec
or
mov
hlt
add
cmp
aas
pop
test
addb
push
add
daa
repz
add
push
mov
pop
rolb
push
add
ljmp
add
cmpsb
add
dec
mov
add
cmp
arpl
mov
and
mov
nop
add
dec
sbb
inc
jnp
add
or
mov
push
jecxz
jp
in
lds
std
add
or
xor
nop
add
add
adc
ret
push
sbb
int3
sub
addb
cmc
or
insb
cmc
cmpsb
add
das
sub
xor
jmp
dec
pop
out
fdivrl
xlat
or
xchg
clc
dec
loop
cltd
xchg
in
pop
loope
mov
add
xlat
mov
test
shrl
mov
sarl
mov
jecxz
iret
sub
cmp
adc
aas
dec
adc
mov
sbb
arpl
add
cmc
nop/reserved
aaa
popf
dec
int
push
pop
and
mov
jg
pop
adc
fisubrs
cmp
stos
ret
pop
js
mov
xchg
add
mov
mov
sbb
xor
int3
idivl
dec
mov
addb
add
imul
mov
or
cwtl
je
push
fstp
inc
pop
fistpl
mov
cs
push
data16
fisubrl
add
lods
inc
mov
dec
scas
push
pop
loope
and
add
push
add
add
movb
add
out
xchg
add
inc
add
scas
mov
dec
ret
add
add
add
add
push
push
lahf
inc
add
in
andl
shr
sub
test
push
int3
loop
inc
add
pop
decb
add
je,pt
push
add
add
mov
add
jb
in
xor
xchg
and
mov
into
scas
outsb
into
or
pop
mull
or
sub
push
mov
add
insl
jmp
pop
pop
cwtl
sti
fdivr
and
arpl
add
xor
lock
movsl
fmull
add
dec
or
add
adc
xor
mov
insl
movb
or
mov
mov
enter
add
lret
mov
mov
and
add
in
addr16
or
add
add
inc
add
pop
scas
mov
and
mov
pop
push
add
dec
sbb
adc
int3
frstor
jmp
fldcw
imul
xchg
add
addr16
stc
cld
loop
xor
mov
add
and
mov
add
mov
or
scas
inc
add
dec
pop
cwtl
test
js
inc
cli
cmp
add
pop
sub
mov
pop
ret
add
sub
push
add
add
add
int
out
adc
add
and
mov
out
add
lock
bound
mov
push
loopne
xor
add
mov
add
icebp
mov
mov
xchg
gs
inc
popa
data16
inc
add
sbb
add
imul
mov
add
and
mov
repnz
out
sbb
add
mov
push
add
add
and
add
in
cmp
outsl
jl
and
add
lahf
jno
add
add
add
sub
movsl
stos
lret
add
mov
push
add
add
push
push
imul
mov
add
mov
mov
mov
int3
nop
add
or
add
add
add
dec
hlt
add
rorl
xlat
lods
push
and
add
mov
movb
mov
add
out
xor
enter
pop
repnz
xchg
add
or
add
sbb
push
add
and
mov
out
jmp
xchg
das
push
cmp
dec
scas
push
pop
dec
sbb
add
xor
sub
and
xor
cmp
and
lds
or
add
rorl
incb
add
adc
lret
add
add
add
les
ret
add
repnz
inc
add
adc
out
xchg
or
add
push
add
xchg
pop
jmp
repz
pop
int3
out
dec
loopne
inc
add
daa
dec
push
add
add
mov
icebp
xchg
add
test
arpl
add
icebp
xor
in
stos
das
xchg
jo
into
xor
dec
jmp
in
hlt
add
loope
add
add
add
jge
inc
mov
popa
inc
add
out
sub
mov
xor
push
add
xchg
adc
push
add
push
cmc
lea
add
add
xor
cld
add
or
add
addr16
add
or
popa
movsb
add
sub
add
and
cltd
movb
jb
inc
add
add
push
add
push
add
enter
out
push
add
push
add
dec
in
mul
add
fildl
das
inc
add
add
cwtl
add
xchg
mov
icebp
xor
mov
stc
gs
or
fsubrl
or
iret
xchg
add
popa
or
add
stos
mov
cmp
add
mov
mov
outsl
or
ret
jg
add
or
cmp
sub
add
xchg
bound
mov
mov
adc
fisubrs
insb
push
mov
rolb
sbb
in
add
dec
inc
add
mov
shll
sbb
add
adc
add
add
xor
mov
pushf
push
add
cmp
ja
insb
push
add
iret
push
scas
out
add
push
out
dec
scas
and
mov
add
add
aaa
stos
test
cmp
add
xchg
fmull
cmpsb
add
mov
dec
movsl
inc
add
xchg
sbb
rolb
out
mov
add
add
pushf
scas
rolb
lods
sub
or
mov
add
push
add
sub
cmp
testb
mov
pop
mov
add
inc
aam
fnstsw
jmp
add
fwait
out
inc
mov
cmp
xor
repnz
mov
add
add
add
xor
mov
add
movb
adc
jae
mov
inc
punpcklwd
mov
test
loope
hlt
add
add
cmp
add
movb
mov
test
mov
cmp
out
mov
push
mov
mov
add
rolb
jmp
cltd
mov
add
jns
pop
pop
ja
add
fistl
add
cltd
inc
add
mov
xor
movb
add
addb
add
std
outsb
mov
call
inc
jns
add
mov
outsb
or
sub
rolb
fisttpll
pminsw
push
add
push
add
add
cmp
addb
lret
fstp
cmp
shrl
inc
add
add
mov
sub
aad
jg
add
mov
jno
aad
pushf
sub
push
mov
faddl
add
add
add
cmp
and
fsubp
dec
mov
add
add
adc
out
daa
or
or
inc
add
mov
push
ficompl
add
push
add
push
rolb
add
jle
jg
add
add
repz
adc
add
add
pop
dec
pushf
mov
sub
add
movb
rolb
mov
mov
add
add
jns
loop
lret
add
movsb
add
add
add
push
and
arpl
add
addr16
push
add
jl
popf
push
add
ds
add
add
insl
rcrl
add
mov
xchg
xchg
pop
enter
add
pop
lea
popa
test
stos
in
xchg
dec
lret
bound
mov
data16
add
mov
dec
test
add
aaa
jecxz
add
pop
cmp
push
add
mov
xor
add
ffreep
ffreep
stos
ljmp
sbb
addr16
in
and
nop
add
xchg
rcll
dec
popf
out
xchg
test
inc
dec
jl
inc
add
das
imul
mov
cmpl
popf
mov
mov
popf
jmp
cltd
push
fldpi
jmp
rolb
dec
or
lcall
lods
data16
xor
sbb
inc
add
add
add
repz
test
cmp
pop
rolb
xor
and
cwtl
push
add
add
lahf
fisubrs
popf
test
movsb
add
sub
add
mov
xlat
jmp
cmc
jle
mov
add
cmp
jge
add
xchg
daa
xor
jno
add
fwait
adc
bound
mov
add
add
add
sub
jne
add
add
into
repnz
mov
add
lods
jo
mov
lret
pop
add
add
push
xchg
add
stos
mov
add
mov
rolb
mov
pusha
add
mov
cmpsl
roll
lock
sbb
outsl
mov
add
push
add
add
fisttpl
mov
jmp
add
popf
mov
add
add
lret
repnz
mov
mov
add
insl
mov
push
pop
dec
or
add
cltd
test
xor
hlt
add
rolb
shll
add
mov
jg
jne
lea
getsec
mov
popa
xchg
pusha
add
pop
ljmp
hlt
add
fcoms
mov
pop
sbb
add
add
add
imul
out
xchg
add
add
add
add
add
add
or
fmull
add
in
push
add
jnp
xor
add
add
add
lods
movb
subl
dec
es
add
cltd
addb
or
addr16
fnstenv
pop
data16
cmp
nop
add
mov
mov
add
adc
pop
add
mov
rolb
xor
add
data16
add
mov
daa
jns
adc
enter
lea
xor
xor
inc
imul
dec
stc
scas
xor
not
aad
xor
add
add
inc
add
sub
int
jmp
out
loope
adc
add
mov
add
loop
inc
add
sub
add
inc
ds
insl
int
lods
std
jae
or
cmp
pop
lock
test
pop
daa
push
lods
push
add
sub
movsb
add
mov
pop
imul
jae
add
add
add
test
mov
add
mov
add
add
subl
jg
scas
insb
pop
rcll
ds
data16
add
addb
xorl
add
jle
stos
pop
negl
inc
sub
adc
test
add
xor
pop
adc
lahf
out
pop
sahf
xor
add
and
mov
es
add
cmp
cmpsl
repnz
cld
push
popf
sub
add
aam
lcall
sub
testb
and
dec
add
test
add
add
repz
mov
iret
push
mov
ds
arpl
ds
add
test
cld
std
cmp
mov
mov
stos
mov
add
or
dec
testb
dec
stos
movsb
add
xchg
add
sti
pop
sahf
or
icebp
repz
mov
xchg
ja
add
fs
jae
jno
pop
adcl
je
dec
into
push
add
push
add
mov
stc
jecxz
add
add
jl
sarl
mov
mov
mov
icebp
jg
add
jmp
ret
dec
and
nop
add
fists
jbe
inc
add
or
sub
add
mov
add
out
les
xchg
fcompl
or
add
icebp
fisubrs
sub
nop
add
insl
xor
data16
mov
addb
push
add
inc
add
add
add
in
insl
sahf
flds
add
add
pusha
add
roll
call
adc
dec
out
xor
adc
mov
cmp
cmp
sub
inc
imul
loop
cmp
pop
mov
icebp
mov
test
lahf
cmc
cmp
add
jbe
add
mov
pop
fdivr
sahf
inc
jp
rolb
aaa
cmp
add
dec
cmp
add
add
mov
add
in
fists
movsb
add
lret
or
xchg
pop
js
cmp
add
xor
cmc
mov
aam
cltd
mov
or
add
push
add
add
cltd
push
outsl
push
aad
addr16
mov
inc
add
mov
add
inc
push
add
add
or
add
add
add
push
add
add
leave
daa
fnstenv
rolb
jg
sbb
xchg
add
aam
jmp
mov
cmp
mov
mov
jecxz
in
adc
cltd
in
xor
push
add
add
add
stc
stc
pusha
add
add
add
add
jl
add
add
stos
sub
decb
add
sbb
or
cmp
jg
add
sub
stos
loopne
push
mov
jbe
sahf
adc
scas
push
add
xchg
or
sbb
mov
sub
mov
add
push
mov
mov
adc
sub
cmp
movsb
add
sbb
add
stc
sub
fs
int3
repz
add
cwtl
sub
out
lea
ja
aam
adc
adc
dec
mov
ret
repnz
insb
jl
add
movsl
in
testb
pop
out
or
pop
pusha
add
daa
cld
mov
and
mov
adc
adc
outsb
rolb
push
or
add
int
add
fwait
rolb
in
xor
add
iret
sbb
aas
ja
sti
sub
pusha
add
add
push
add
mov
add
add
xor
stos
and
add
add
cld
dec
mov
xchg
cld
leave
std
scas
mov
add
mov
and
cli
pop
add
stos
out
ret
into
sbb
pop
mov
xor
pop
test
les
and
cmpl
movsb
add
ja
fnsave
or
add
mov
add
sti
js
sbb
add
add
pop
icebp
outsb
cmc
adc
push
add
or
fmull
repz
add
add
and
mov
and
lret
fcoml
push
adc
mov
add
mov
push
out
push
add
inc
pop
push
push
sbb
inc
add
mov
gs
add
sbb
add
adc
mov
xor
add
push
xor
mov
and
movsb
add
add
les
out
test
add
ljmp
and
mov
gs
jge
movsl
les
hlt
add
push
mov
in
daa
add
add
dec
mov
add
add
xor
mov
inc
mov
add
pusha
add
mov
xlat
aad
adc
push
add
adc
jle
sbb
addb
pop
enter
pop
inc
add
icebp
xchg
lret
xchg
add
adc
sahf
mov
jecxz,pn
pop
pop
jmp
pop
jns
add
mov
sub
add
add
xchg
dec
add
hlt
add
jbe
insl
in
and
add
mov
push
out
push
add
aam
cmp
add
addb
rolb
addb
lock
xchg
add
call
addr16
ja
cmp
xchg
sub
mov
pop
mov
cmpsb
add
mov
xlat
or
sub
add
xor
xlat
scas
dec
push
pushf
in
pusha
add
add
cmpsb
add
xor
pushf
test
outsl
shrl
push
add
loop
arpl
clc
bound
mov
adc
jae
jl
xor
popa
xor
add
cltd
sti
fistps
xchg
movsb
add
dec
repnz
lods
mov
add
adc
push
or
dec
mov
mov
and
add
add
into
repnz
loop
push
add
add
decl
loop
out
mov
in
dec
dec
mov
stc
nop
es
dec
dec
add
pop
or
rclb
push
inc
add
add
add
stc
nop
es
sbb
in
add
dec
push
stc
nop
es
sti
add
add
repnz
push
stc
nop
es
test
add
jg
xor
dec
ss
stc
nop
es
add
and
mov
aaa
jmp
nop
cld
nop
jmp
sbb
addb
add
stc
nop
es
add
add
test
add
stc
nop
es
add
add
in
mov
stc
nop
es
hlt
pop
add
sub
jl
xor
nop
es
add
mov
stc
nop
es
add
add
add
aaa
es
add
add
add
nop
cld
nop
jmp
add
mov
jne
dec
stc
nop
es
dec
add
dec
add
mov
stc
nop
es
sbb
in
daa
add
lret
inc
add
nop
es
add
add
nop
cld
nop
jmp
pop
add
sub
add
nop
jmp
dec
les
repz
sbb
push
mov
xchg
ret
andb
dec
add
dec
imul
xorb
add
dec
popl
les
add
add
mov
or
popf
jg
xor
cmpsb
add
mov
push
mov
xchg
ret
movl
add
push
push
mov
xchg
ret
add
add
outsl
add
mov
add
nop
es
mov
add
in
add
test
xlat
stos
in
sub
cli
jne
stc
nop
es
add
add
outsl
mov
stc
nop
es
dec
sbb
stc
nop
es
add
mov
push
inc
int
lds
add
stc
nop
es
add
add
jmp
add
stc
nop
es
out
fldcw
nop
es
inc
add
outsl
add
cld
mov
stc
nop
es
add
xchg
incl
add
mov
stc
nop
es
popf
add
mov
add
mov
push
mov
xchg
ret
mov
das
mov
in
decl
nop
cld
nop
jmp
add
add
add
sti
push
mov
xchg
ret
mov
add
add
stc
nop
es
add
out
daa
mov
and
nop
cld
nop
jmp
add
add
outsl
add
add
mov
nop
cld
nop
jmp
add
popl
push
dec
add
popa
inc
add
lods
stc
nop
es
popf
add
add
add
pusha
add
stc
nop
es
add
pop
mov
movb
clc
push
stc
nop
es
movl
flds
daa
test
outsl
arpl
add
nop
es
add
divb
add
mov
jmp
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
and
mov
add
mov
push
stc
nop
es
add
lcall
jg
stc
nop
es
sbb
add
popf
sub
loope
add
nop
cld
nop
jmp
popf
flds
add
xor
push
mov
xchg
ret
add
lcall
pushf
mov
stc
nop
es
das
add
add
dec
cmpl
nop
cld
nop
jmp
add
data16
es
pushl
rcrl
stc
nop
es
add
add
xchg
sbb
push
add
add
cmp
nop
cld
nop
jmp
add
add
add
or
es
das
movl
xor
stc
nop
es
xor
sbb
add
stc
nop
es
lcall
call
stc
nop
es
sbb
incl
jne
mov
stc
nop
es
add
loop
mov
add
nop
es
add
and
repnz
cld
nop
jmp
add
ljmp
mov
nop
es
dec
data16
and
adc
insb
lea
nop
cld
nop
jmp
movb
add
add
add
add
mov
cmp
mov
nop
cld
nop
jmp
cltd
mov
hlt
add
push
and
add
nop
cld
nop
jmp
push
xor
xchg
stc
nop
es
add
dec
cltd
fldcw
or
stc
nop
es
testb
nop
jmp
les
add
add
push
mov
xchg
ret
cmp
add
mov
push
mov
xchg
ret
gs
in
pop
add
sub
stc
nop
es
icebp
add
add
add
mov
add
mov
push
mov
xchg
ret
push
push
add
add
adc
inc
add
push
stc
nop
es
add
push
add
xchg
add
mov
push
mov
xchg
ret
add
add
pop
pushl
stc
nop
es
add
pushf
add
stos
sti
mov
stc
nop
es
add
push
mov
xchg
ret
sbb
add
mov
stc
nop
es
add
mov
nop
cld
nop
jmp
daa
add
in
test
add
stc
nop
es
add
outsl
test
movsb
stc
nop
es
mov
add
add
pop
stc
nop
es
add
hlt
add
add
dec
mov
nop
cld
nop
jmp
pop
add
dec
add
mov
test
nop
cld
nop
jmp
add
add
add
and
push
mov
xchg
ret
xor
add
cwtl
inc
push
mov
xchg
ret
ljmp
outsb
push
push
mov
xchg
ret
pop
decl
and
stc
nop
es
xchg
sti
mov
inc
outsl
in
add
cmpl
sub
add
add
add
add
nop
cld
nop
jmp
movb
sbb
stos
stc
nop
es
notb
pushl
or
cld
nop
jmp
dec
add
sbb
add
jae
add
push
stc
nop
es
push
add
add
add
pop
je
stc
nop
es
add
movsl
jns
push
mov
xchg
ret
add
mov
cmp
add
pop
add
lcall
sbb
iret
pushl
stc
nop
es
pop
push
push
add
jle
stc
nop
es
add
data16
lea
nop
cld
nop
jmp
mov
call
movsl
mov
es
mov
add
and
nop
es
and
sub
add
icebp
daa
addb
add
call
stc
nop
es
repz
andl
jmp
dec
add
add
mov
cld
nop
jmp
in
and
sbb
js
adc
nop
es
add
add
gs
add
add
jb
add
icebp
add
pop
add
les
mov
es
ljmp
add
stc
nop
es
sub
mov
ljmp
jb
inc
in
stos
data16
mov
add
mov
xchg
ret
repnz
add
inc
out
add
pop
add
in
xrelease
rolb
iret
add
stc
nop
es
add
dec
sub
mov
adc
cld
nop
jmp
sub
add
int3
mov
stc
nop
es
add
sbb
daa
cmp
mov
push
stc
nop
es
add
add
mov
nop
cld
nop
jmp
fstps
add
test
add
stc
nop
es
add
add
cld
nop
jmp
add
xor
je
nop
cld
nop
jmp
add
lcall
add
adc
das
add
popa
add
or
es
xor
add
push
mov
xchg
ret
call
pop
lahf
shr
stc
nop
es
add
data16
add
jle
add
add
add
and
pop
add
std
push
mov
insb
add
popa
jae
add
les
enter
stc
nop
es
flds
add
push
fincstp
es
add
add
pop
nop
cld
nop
jmp
add
add
add
outsl
mov
stc
nop
es
add
icebp
add
add
jmp
dec
repnz
add
add
add
push
add
and
stc
nop
es
add
mov
mov
call
stc
nop
es
fpatan
mov
add
cld
nop
jmp
test
test
es
add
add
add
and
pop
shr
stc
nop
es
add
push
xchg
add
jb
add
add
outsl
add
add
add
es
in
add
dec
add
push
mov
xchg
ret
mov
and
dec
stc
nop
es
xchg
add
sub
insl
sub
push
mov
xchg
ret
and
push
push
lret
rep
stc
nop
es
sbb
add
mov
add
mov
push
mov
xchg
ret
add
dec
add
repz
cmp
pop
call
cmc
incl
and
mov
add
inc
jb
stc
nop
es
mov
pop
add
stc
nop
es
add
out
das
sbb
leave
sub
nop
es
add
daa
out
or
es
add
add
add
les
sub
cs
add
add
mov
add
mov
nop
cld
nop
jmp
mov
stc
nop
es
incl
dec
ljmp
or
add
nop
es
call
jmp
stc
nop
es
add
add
jmp
nop
cld
nop
jmp
hlt
add
add
iret
xor
stc
nop
es
add
lcall
mov
stc
nop
es
add
add
es
stc
nop
es
add
and
push
mov
xchg
ret
add
add
scas
je
nop
cld
nop
jmp
icebp
xchg
popf
and
stc
nop
es
add
das
jne
nop
cld
nop
jmp
and
mov
add
loopne
nop
es
add
and
mov
ja
nop
cld
nop
jmp
add
add
sbb
mov
xchg
ret
add
and
hlt
add
je
stc
nop
es
add
fs
xor
push
mov
xchg
ret
add
movb
mov
xchg
ret
add
mov
mov
and
push
mov
xchg
ret
icebp
stos
sbb
xchg
pop
mov
stc
nop
es
in
add
add
add
filds
xchg
ret
sub
dec
xor
push
stc
nop
es
les
add
aaa
lods
add
stc
nop
es
mov
flds
pushf
sub
jmp
stc
nop
es
sbb
add
adc
push
mov
xchg
ret
repz
and
call
add
stc
nop
es
add
and
nop
es
add
add
les
add
andl
nop
es
push
stos
data16
hlt
add
add
stc
nop
es
add
mov
in
push
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
lcall
cmpl
nop
cld
nop
jmp
cltd
xor
daa
jmp
push
mov
xchg
ret
add
cltd
sbb
stc
nop
es
add
push
testb
add
xchg
xor
jo
in
dec
jmp
stc
nop
es
add
mov
lods
mov
push
mov
xchg
ret
add
push
add
xor
nop
es
test
add
and
stc
nop
es
add
les
dec
in
pop
ret
push
mov
xchg
ret
in
sub
add
add
mov
xchg
ret
sbb
xchg
stos
push
push
mov
xchg
ret
add
hlt
sub
testb
test
push
mov
xchg
ret
xor
repz
test
xchg
add
mov
nop
cld
nop
jmp
add
add
add
add
stc
nop
es
pop
lcall
or
stc
nop
es
add
add
mov
lods
movzwl
stc
nop
es
and
popf
add
cmpl
es
add
in
xor
add
enter
es
add
das
add
stos
scas
push
stc
nop
es
add
add
or
sar
nop
es
pushf
mov
xor
je
stc
nop
es
add
pop
inc
add
nop
push
mov
xchg
ret
push
in
add
add
add
add
add
nop
es
add
inc
ljmp
pop
push
add
add
repnz
inc
add
cld
mov
stc
nop
es
in
add
ja
mov
stc
nop
es
and
sub
add
out
mov
push
mov
xchg
ret
add
add
mov
add
nop
es
popf
cltd
repnz
dec
cmp
nop
es
repnz
and
push
mov
xchg
ret
popf
and
mov
stc
nop
es
add
add
push
add
add
mov
nop
es
les
pop
add
aas
call
stc
nop
es
pushf
add
add
cmc
mov
nop
es
daa
sti
mov
add
test
pop
add
stc
nop
es
add
add
movsl
sti
incl
add
repnz
sti
mov
push
mov
xchg
ret
add
add
movsb
add
add
stc
nop
es
testb
dec
outsb
call
stc
nop
es
add
xor
imul
es
add
stos
add
cmpl
nop
jmp
icebp
add
add
mov
lea
stc
nop
es
add
popl
les
pop
nop
cld
nop
jmp
mov
add
fiadds
jmp
mov
xchg
ret
sub
dec
sbb
test
adc
add
nop
es
sbb
inc
stc
nop
es
gs
add
icebp
sub
cltd
roll
xchg
ret
add
pop
add
push
in
inc
add
movl
cmp
nop
jmp
add
cltd
dec
in
sbb
mov
stc
nop
es
add
sbb
sti
mov
nop
cld
nop
jmp
repnz
xor
test
movsl
addr16
jne
stc
nop
es
add
out
mov
stc
nop
es
mov
add
xor
push
mov
xchg
ret
xor
add
stc
nop
es
add
movl
cmp
nop
cld
nop
jmp
sbb
pop
dec
loop
pop
movswl
stc
nop
es
add
sbb
cld
nop
jmp
ljmp
repz
sub
nop
cld
nop
jmp
add
testb
add
call
stc
nop
es
icebp
and
add
add
nop
cld
nop
jmp
push
sbb
add
mov
stc
nop
es
out
add
inc
lds
jb
add
add
xchg
add
stc
nop
es
add
in
mov
add
stc
nop
es
in
popf
mov
add
xchg
add
rep
push
mov
xchg
ret
in
testb
add
sbb
dec
or
or
add
daa
add
add
add
mov
xchg
ret
sub
add
jne
stc
nop
es
dec
sub
call
inc
add
repnz
add
mov
test
add
stc
nop
es
add
repnz
flds
nop
jmp
lcall
add
sbb
cld
nop
jmp
add
add
add
add
addb
add
push
push
mov
xchg
ret
xor
and
add
add
add
es
add
add
add
cmp
nop
es
call
add
stc
nop
es
add
dec
mov
stc
nop
es
xor
push
leave
add
push
mov
xchg
ret
xor
sbb
push
mov
push
add
add
outsb
les
add
mov
fcoms
nop
es
add
add
xor
cmp
jmp
add
add
popf
popl
stc
nop
es
add
out
js
push
mov
xchg
ret
dec
add
push
sbb
mov
xchg
ret
mov
mov
jle
dec
outsl
popa
fs
nop
es
test
mov
nop
cld
nop
jmp
add
add
xchg
incl
mov
mov
xchg
ret
add
sbb
mov
add
rol
notl
jecxz
add
rorb
jne
stc
nop
es
dec
add
insb
push
stc
nop
es
add
push
hlt
add
mov
add
stc
nop
es
add
add
add
pushf
sti
je
stc
nop
es
add
add
add
or
add
stos
add
leave
push
stc
nop
es
add
add
mov
inc
fisubrl
add
incl
dec
sbbb
add
mov
add
nop
es
add
hlt
sbb
int3
jmp
stc
nop
es
add
test
nop
cld
nop
jmp
add
xor
das
jg
out
out
clc
stc
nop
es
gs
add
xchg
mov
add
inc
add
ljmp
dec
add
push
mov
xchg
ret
cltd
outsl
cltd
pushf
mov
stc
nop
es
add
inc
push
and
add
add
mov
push
mov
xchg
ret
add
push
fwait
call
stc
nop
es
add
stc
nop
es
sub
add
rcrl
sar
nop
es
add
add
aam
xor
jl
repz
mov
xchg
ret
in
sti
inc
pop
sbb
test
cld
push
mov
xchg
ret
lcall
adc
mov
es
add
add
jo
dec
mov
push
mov
xchg
ret
les
add
outsl
cld
mov
push
mov
xchg
ret
add
add
add
mov
stc
nop
es
and
add
stc
nop
es
call
add
in
stc
nop
es
fldcw
add
mov
xchg
ret
add
add
and
push
mov
xchg
ret
xchg
add
and
jo
inc
add
add
add
add
test
push
mov
xchg
ret
add
and
add
nop
es
add
and
sbb
ljmp
pop
add
add
push
mov
add
inc
xor
add
stc
nop
es
add
mov
xchg
push
mov
xchg
ret
dec
add
add
aaa
pop
jne
stc
nop
es
sbb
add
testb
addb
add
mov
add
js
out
stc
nop
es
mov
dec
sti
data16
add
add
nop
es
cltd
in
xchg
add
mov
pop
stc
nop
es
icebp
and
add
stc
nop
es
add
and
mov
nop
jmp
lcall
pop
xor
rep
stc
nop
es
sbb
add
pop
sbb
mov
add
mov
push
mov
xchg
ret
sbb
lcall
pop
stc
nop
es
add
xor
fldenv
stos
cli
mov
nop
cld
nop
jmp
call
mov
pushf
add
nop
cld
nop
jmp
sti
add
add
add
in
jmp
stc
nop
es
icebp
in
stos
inc
cltd
xor
stc
nop
es
add
add
jecxz
mov
stc
nop
es
add
testb
xor
nop
add
nop
es
add
add
stc
nop
es
add
dec
push
push
mov
xchg
ret
fnstenv
dec
push
stc
nop
es
mov
das
add
div
nop
cld
nop
jmp
lcall
add
in
mov
add
xchg
add
jge
test
subl
stc
nop
es
mov
xor
or
jmp
addb
incl
mov
daa
mov
ret
test
nop
cld
nop
jmp
add
add
add
add
stc
nop
es
testb
add
add
cld
or
jmp
dec
add
add
add
add
nop
cld
nop
jmp
mov
pop
cltd
sbb
xor
push
aad
add
add
add
push
stc
nop
es
add
inc
mov
leave
add
stc
nop
es
das
add
add
test
or
nop
es
xor
add
and
nop
es
add
repz
xor
stc
nop
es
add
sbb
add
add
mov
es
add
sbb
push
push
mov
xchg
ret
add
add
add
test
sub
stc
nop
es
test
add
das
iret
pop
stc
nop
es
movl
popf
add
add
add
nop
jmp
icebp
add
xor
add
stc
nop
es
add
add
pop
repz
jne
stc
nop
es
dec
add
add
pop
fiadds
xchg
ret
pop
add
add
call
add
add
pop
add
add
add
stc
nop
es
add
dec
sbb
dec
add
stc
nop
es
add
xchg
add
in
clc
imul
stc
nop
es
add
mov
loop
cld
nop
jmp
inc
mov
popl
sbb
nop
cld
nop
jmp
gs
dec
add
add
sub
stc
nop
es
and
add
stc
nop
es
add
out
mov
nop
jmp
in
sbb
pop
dec
add
add
flds
xchg
ret
jmp
add
stc
nop
es
dec
pop
mov
add
add
loop
nop
add
dec
cmp
nop
es
xchg
ljmp
add
stc
nop
es
mov
mov
and
stc
nop
es
add
daa
mov
ret
push
mov
xchg
ret
gs
add
les
adc
adcb
add
stc
nop
es
dec
add
add
mov
xor
add
stc
nop
es
outsl
add
add
mov
add
les
stc
nop
es
push
add
and
mov
pop
stc
nop
es
add
mov
mov
in
add
cltd
add
scas
or
jb
add
icebp
add
push
mov
xchg
ret
mov
xor
dec
or
add
nop
es
les
in
je
stc
nop
es
and
sub
mov
stc
nop
es
daa
sub
rorl
call
nop
cld
nop
jmp
add
mov
stc
nop
es
add
add
sbb
stc
nop
es
mov
pop
push
gs
nop
es
add
add
data16
mov
mov
loopne
arpl
inc
adc
nop
es
ljmp
add
stc
nop
es
add
pop
mov
mov
nop
cld
nop
jmp
add
pop
call
nop
cld
nop
jmp
add
add
in
add
add
es
in
repnz
add
inc
add
mov
mov
push
add
daa
pop
xchg
cmp
or
out
push
stc
nop
es
sbb
pop
mov
stc
nop
es
data16
sbb
add
inc
ret
cmp
nop
cld
nop
jmp
add
add
movb
mov
es
daa
das
add
inc
fmuls
jb
add
dec
and
nop
jmp
rep
add
outsl
dec
add
fimull
test
stc
nop
es
pushf
add
nop
es
mov
add
iret
mov
stc
nop
es
add
xchg
andl
add
mov
xchg
ret
and
mov
stc
nop
es
pop
repnz
aas
add
stc
nop
es
push
add
add
pop
nop
cld
nop
jmp
in
add
sti
in
lahf
add
stc
nop
es
lcall
nop
es
mov
adcb
add
cld
nop
jmp
movb
add
dec
and
stc
nop
es
add
les
adc
int3
jl
stc
nop
es
add
stc
nop
es
cltd
repz
sbb
jg
inc
and
push
mov
xchg
ret
add
cltd
in
fiaddl
pop
repz
add
add
dec
add
mov
stc
nop
es
das
sbb
add
in
add
es
repz
jmp
lcall
es
add
pop
add
call
push
mov
xchg
ret
add
add
add
and
movb
add
stc
nop
es
add
add
add
mov
loope
call
stc
nop
es
add
add
mov
stc
nop
es
add
add
add
add
stc
nop
es
add
mov
icebp
stc
nop
es
pop
in
add
pop
add
aas
cmpb
nop
cld
nop
jmp
data16
or
nop
cld
nop
jmp
out
add
gs
jge
enter
jb
and
add
les
repz
add
jmp
add
add
les
xor
xor
cs
nop
es
sub
add
push
push
mov
xchg
ret
mov
add
add
dec
or
cld
nop
jmp
add
xor
add
ja
add
int
inc
add
xchg
test
inc
add
add
ja
pop
push
mov
xchg
ret
add
add
mov
stc
nop
es
add
cltd
in
add
stc
nop
es
sub
addb
mov
stc
nop
es
add
sub
add
cmp
nop
es
addb
add
pushl
stc
nop
es
and
add
mov
and
nop
es
repz
in
inc
add
dec
xor
stc
nop
es
add
add
add
add
mov
adc
nop
es
add
daa
sub
pop
push
mov
xchg
ret
and
stos
xchg
add
stc
nop
es
mov
and
ljmp
es
add
sbb
cld
nop
jmp
add
hlt
hlt
gs
add
rcll
mov
nop
jmp
dec
add
in
add
popf
arpl
add
push
mov
xchg
ret
add
push
movb
nop
es
add
ljmp
cld
cmp
nop
cld
nop
jmp
mov
in
add
lea
jo
nop
cld
nop
jmp
popf
add
stos
popl
fldenv
mov
nop
cld
nop
jmp
fstps
mov
inc
sbb
imul
and
icebp
mov
stc
nop
es
add
movl
mov
in
inc
add
and
and
add
int3
add
nop
cld
nop
jmp
stos
push
inc
add
add
lret
or
nop
es
incl
add
add
nop
cld
nop
jmp
add
cltd
movb
add
pop
je
jle
mov
add
and
add
std
lock
and
or
cld
nop
jmp
add
dec
inc
dec
in
testb
out
movzwl
stc
nop
es
add
pop
add
and
add
add
nop
es
sbb
inc
lcall
jmp
add
add
add
add
cld
nop
jmp
add
pop
add
mov
nop
es
push
repnz
movb
movb
addb
mov
nop
cld
nop
jmp
mov
mov
add
stc
stc
nop
es
add
mov
add
icebp
inc
add
push
imul
es
call
xchg
nop
cld
nop
jmp
add
add
pop
add
sbb
decl
das
add
pop
xchg
lods
add
nop
cld
nop
jmp
popl
add
add
nop
cld
nop
jmp
add
xor
sbb
add
xor
push
mov
xchg
ret
add
sbb
nop
icebp
call
jmp
mov
sbb
jae
jb
nop
es
sbb
pushf
mov
mov
stc
nop
es
test
popf
jecxz
add
push
mov
xchg
ret
les
mov
add
jg
push
mov
xchg
ret
dec
pop
add
mov
stc
nop
es
add
xor
stc
nop
es
add
jo
movsl
and
fcoms
mov
xchg
ret
ljmp
repnz
add
es
add
add
mov
stc
nop
es
add
add
add
dec
mov
stc
nop
es
add
sti
pop
push
mov
xchg
ret
test
add
ja
add
or
pop
clc
incl
add
pusha
nop
cld
nop
jmp
sti
add
add
sbb
add
cmp
es
hlt
and
sub
add
nop
es
in
stos
xchg
lcall
es
add
ljmp
dec
add
repnz
incl
add
pop
add
and
pop
pusha
push
mov
xchg
ret
xor
add
pop
add
mov
push
stc
nop
es
sti
pop
call
add
add
ret
add
dec
popa
stc
nop
es
add
repnz
add
les
aaa
pop
push
stc
nop
es
dec
and
mov
push
in
or
int
stc
nop
es
add
mov
nop
cld
nop
jmp
pop
sbb
mov
xchg
ret
flds
mov
add
xor
test
nop
es
add
sti
cmp
nop
es
in
add
repz
sub
enter
jb
xchg
call
add
filds
es
repz
add
gs
add
stc
nop
es
sub
in
ljmp
and
nop
es
stos
add
inc
add
inc
add
sbb
sbb
add
pushf
cmp
nop
cld
nop
jmp
daa
and
dec
add
cmp
push
mov
xchg
ret
daa
mov
add
nop
jmp
mov
stos
add
push
stc
nop
es
das
xchg
xchg
add
shll
push
add
mov
je
lods
and
push
mov
xchg
ret
add
add
insb
popa
stc
nop
es
outsl
call
pop
add
mov
ljmp
test
add
sti
popf
repnz
xchg
add
shr
add
nop
cld
nop
jmp
das
add
add
mov
xor
add
stc
nop
es
mov
push
stc
nop
es
add
pop
data16
add
xchg
imul
stc
nop
es
add
addb
stos
mov
stc
nop
es
add
add
repnz
mov
add
nop
cld
nop
jmp
add
movl
push
stc
nop
es
add
add
xchg
in
pop
sub
adc
inc
add
popf
add
add
es
add
add
add
add
add
nop
es
data16
mov
add
mov
xchg
ret
add
mov
mov
xchg
ret
movb
incl
add
or
dec
add
add
nop
es
popl
add
cmp
inc
and
nop
cld
nop
jmp
xchg
add
add
sub
stc
nop
es
add
sub
sub
nop
es
and
xchg
add
add
inc
add
add
sbb
add
jb
add
add
test
pop
push
mov
xchg
ret
sbb
add
sbb
dec
adc
push
jmp
add
add
nop
cld
nop
jmp
repnz
xor
fs
nop
es
stos
sti
add
push
sti
movzwl
nop
cld
nop
jmp
mov
addb
add
add
cmp
add
nop
es
test
pushf
add
xor
stc
nop
es
and
stos
sti
xor
push
stc
nop
es
add
addb
add
daa
dec
add
stc
nop
es
sbb
push
add
and
stc
nop
es
add
add
add
inc
push
mov
xchg
ret
add
add
add
add
incl
neg
sti
xor
add
jle
push
mov
xchg
ret
add
fpatan
add
cld
popa
nop
cld
nop
jmp
add
sbb
in
inc
add
stc
nop
es
sbb
add
add
add
stc
nop
es
add
add
mov
stc
nop
es
add
les
stc
nop
es
add
js
stc
nop
es
add
add
add
add
add
ret
nop
cld
nop
jmp
add
sbb
and
enter
stc
nop
es
mov
repnz
add
nop
es
dec
add
stos
push
add
in
lahf
push
nop
cld
nop
jmp
add
cltd
add
cmc
loopne
inc
add
push
add
in
push
nop
cld
nop
jmp
add
add
sbb
add
stc
nop
es
gs
and
pop
aas
add
push
mov
xchg
ret
add
mov
aad
add
mov
xchg
ret
test
xchg
add
rep
stc
nop
es
add
das
add
mov
xchg
jns
sar
nop
es
mov
add
mov
xchg
rcll
add
and
inc
add
mov
stc
nop
es
add
mov
jb
push
mov
add
adc
nop
es
add
incl
in
mov
nop
es
add
add
pop
rolb
lcall
jbe
incl
add
dec
sub
sbb
push
imul
incl
and
push
mov
xchg
ret
repz
add
mov
addb
add
stc
nop
es
add
add
add
sar
es
add
lahf
push
stc
nop
es
add
add
sbb
call
cmc
cmc
inc
add
cltd
xor
add
lcall
nop
es
add
add
fadds
popf
stc
nop
es
add
mov
jmp
dec
push
stc
nop
es
test
add
clc
stc
nop
es
add
call
mov
jmp
in
add
daa
add
sbb
test
es
add
dec
dec
push
push
mov
xchg
ret
xor
call
aas
mov
nop
cld
nop
jmp
add
dec
add
inc
add
nop
es
sub
push
dec
jb
stc
nop
es
add
call
into
add
stc
nop
es
hlt
hlt
in
dec
add
xchg
add
pop
jne
stc
nop
es
add
lcall
jb
push
add
sbb
aas
add
stc
nop
es
cltd
xor
add
inc
sub
or
nop
cld
nop
jmp
add
mov
addb
je
stc
nop
es
and
loop
push
mov
xchg
ret
add
add
popl
add
xor
cmp
nop
es
xor
in
data16
add
out
pop
push
mov
xchg
ret
pop
push
pop
hlt
xchg
add
pushf
dec
nop
cld
nop
jmp
repnz
pushf
add
daa
xchg
sbb
stc
nop
es
add
add
dec
and
jl
andl
jb
test
and
stc
nop
es
add
add
mov
push
stc
nop
es
xchg
incl
add
push
mov
xchg
ret
ljmp
outsb
mov
nop
cld
nop
jmp
xchg
fstps
add
add
mov
push
mov
mov
mov
add
dec
movb
add
test
stc
nop
es
add
nop
cld
nop
jmp
dec
in
add
in
sub
movsb
add
add
nop
es
add
bnd
nop
add
add
stc
nop
es
outsl
add
add
mov
add
add
je
sub
cld
fadds
xchg
ret
sbb
outsl
popf
add
rolb
push
push
mov
xchg
ret
add
add
add
das
push
mov
xchg
ret
push
ljmp
and
nop
es
add
add
add
and
nop
es
call
add
mov
mov
nop
cld
nop
jmp
mov
xchg
pushf
add
inc
add
add
stc
nop
es
add
add
je
jmp
movsb
stc
nop
es
add
icebp
dec
dec
outsl
cmpl
nop
jmp
add
add
add
xor
mov
xchg
ret
add
insb
xchg
stc
nop
es
mov
cltd
hlt
lcall
sub
nop
es
cltd
add
add
imul
es
add
flds
add
add
in
dec
add
mov
pop
add
add
insl
mov
stc
nop
es
add
pop
mov
add
nop
es
das
out
add
enter
push
add
jle
add
add
jbe
rolb
adc
add
add
add
xchg
xchg
add
add
xchg
or
add
add
lock
imul
sarl
mov
jle
push
add
xor
int3
out
movups
movsl
cltd
scas
test
nop
add
ja
movb
xchg
add
jno
pop
lods
xor
jbe
jecxz
xchg
add
add
add
insl
pushf
dec
push
add
mov
add
rolb
aaa
push
add
xchg
outsl
mov
add
push
xchg
mov
cltd
cmpsl
dec
cmpsl
addb
popf
movsl
bound
mov
or
add
gs
add
addb
icebp
jmp
cmp
jmp
mov
add
add
add
loope
add
pop
in
dec
add
inc
push
add
outsl
les
sbbl
pop
cmp
mov
add
into
test
add
pop
testb
mov
in
add
add
push
mov
arpl
jl
sub
push
add
insl
jmp
fwait
cwtl
push
add
add
lea
add
add
add
movsl
mov
lret
int3
xor
add
push
repnz
das
push
and
mov
add
and
mov
push
dec
or
stos
sub
test
inc
add
mov
pop
clc
insb
mov
add
addb
pop
push
xlat
and
or
xor
rolb
scas
test
sbb
cmp
adc
dec
jg
inc
mov
mov
movsb
add
add
cmpsb
add
add
std
movsl
dec
arpl
mov
dec
int3
les
push
dec
jno
add
scas
sbb
inc
add
add
loop
or
add
push
mov
dec
adc
ljmp
pop
sbb
push
bound
mov
xchg
push
add
add
add
and
or
arpl
cmp
xor
push
sub
add
sbb
mov
push
add
add
in
lret
lcall
pop
fisubrs
int3
popf
aas
cld
je
push
add
add
xchg
push
out
subl
xor
sub
push
add
sub
outsl
xor
dec
xchg
add
add
pop
fidivrl
imul
popa
addr16
lahf
addb
push
add
push
pop
jo
mov
sub
add
adc
add
mov
or
rolb
adc
xor
mov
addb
add
xchg
add
outsl
pop
push
add
add
scas
cld
mov
das
dec
lea
shll
add
add
outsb
or
aam
and
mov
cmp
add
add
nop
add
or
in
loope
add
jge
add
mov
add
cmp
repnz
add
insl
les
into
jg
add
mov
sti
and
les
sub
add
sub
sub
cld
jle
jo
adc
cmpsl
pop
inc
dec
mov
sar
xor
pop
stc
icebp
and
jno
add
add
add
add
xchg
inc
arpl
les
adc
xchg
add
mov
clc
fwait
adc
pop
enter
and
add
add
mov
jno
add
and
mov
mov
iret
in
mov
add
inc
add
ljmp
adc
jnp
gs
pop
jb
push
add
mov
xlat
pop
popf
in
cmpsb
add
insl
sbb
xor
add
sbb
add
add
ja
add
cmp
jo
popa
jmp
xchg
add
add
add
add
pop
jbe
dec
sub
sbb
std
and
add
xchg
push
pop
lods
hlt
add
add
push
sub
jge
or
lcall
insl
arpl
or
add
mov
add
sahf
mov
cmp
cmp
dec
inc
add
call
or
add
pop
sarl
mov
mov
fnstcw
adc
pop
xchg
xlat
mov
stos
lds
pop
ret
sbb
push
add
push
ljmp
add
stos
or
add
in
dec
ret
adc
aas
test
cmp
addb
add
inc
xchg
add
cwtl
ficompl
mov
add
addr16
add
cmp
mov
js
add
mov
pop
nop
add
inc
add
rolb
sbb
pop
push
movsb
add
add
cmpsb
add
add
and
mov
add
ret
cltd
test
das
mov
popa
cs
loopne
xchg
testl
add
jecxz
test
popf
add
popf
pop
dec
pop
data16
addb
jae
rolb
jp
jge
cmp
add
ds
add
imul
mov
add
inc
arpl
push
lret
shll
decb
mov
add
stos
repnz
add
inc
cltd
insl
add
add
adc
sbbl
sbb
cmp
add
mov
jbe
xchg
add
into
sbb
add
and
mov
cld
push
add
add
cs
lret
in
add
xchg
iret
xor
jns
add
add
mov
sahf
and
mov
out
push
jno
loopne
mov
lods
sub
and
aad
push
mov
rolb
mov
xor
jb
lods
outsb
movsb
add
enter
sub
lods
popa
pop
pop
inc
add
add
pop
nop
add
repz
mov
add
jbe
push
ja
sbb
dec
xchg
rolb
test
add
add
movsb
add
inc
add
rcrl
js
sub
movsl
jbe
ja
sbb
add
inc
dec
roll
fsubrs
inc
stos
data16
add
mov
scas
and
mov
rolb
add
cmpsl
rolb
addb
xor
sbb
add
daa
iret
aas
mov
mov
xchg
add
add
pop
jb
cld
push
popf
mov
jle
lcall
push
std
out
fisttpl
add
add
mov
add
add
push
adc
add
add
ds
cmp
add
sbb
rolb
arpl
inc
pushf
add
stc
icebp
movb
sbb
sbb
daa
jge
add
sub
add
aas
addb
je
add
sub
pop
frstor
sbb
js
or
pop
push
and
mov
jnp,pt
xlat
mov
adc
push
lret
add
in
testb
add
adc
cmp
pop
movb
add
add
add
add
addb
inc
or
add
sahf
sbb
out
ja
add
xchg
ljmp
bound
mov
push
add
add
pushl
add
mov
xchg
jb
pop
mov
scas
cmpsl
testb
add
add
inc
mov
add
add
jmp
add
outsl
leave
add
sub
xchg
loope
mul
add
or
outsb
and
ret
test
fadds
movsl
mov
fists
add
pushf
xchg
add
xor
mov
and
sti
mov
inc
fdivrp
lods
xor
add
in
stc
dec
cmp
rcrl
add
push
cli
adc
add
fdiv
add
xor
sbb
add
jae
xor
fdivrl
add
add
add
loope
push
add
jb
cmpsb
add
add
add
fdivp
add
add
mov
mov
add
mov
jmp
pop
add
cwtl
add
cli
sbb
test
mov
hlt
add
add
and
mov
dec
loope
sbb
inc
or
add
daa
sub
inc
add
add
imul
add
mov
fs
ds
pusha
add
movb
push
add
push
add
ja
mov
xor
outsb
lcall
addb
mov
add
gs
add
add
movb
testb
add
mov
sbb
cmp
cmpsb
add
add
popa
push
mov
mov
mov
loop
pop
pop
sub
push
xor
or
int3
or
mov
push
cmp
addb
mov
xchg
pop
push
fmull
pop
rcrl
movsb
add
adc
inc
aad
filds
add
add
rorl
inc
mov
add
push
mov
stos
call
mov
add
pop
cwtl
call
add
rolb
add
mov
inc
add
mov
lea
lcall
and
lahf
cwtl
and
popf
pusha
add
add
movb
icebp
push
add
push
add
add
rolb
fmul
dec
inc
cmp
add
movsb
add
mov
test
clc
sti
mov
adc
decb
add
add
jns
xor
add
insl
inc
lock
sbb
add
mov
add
push
int3
in
call
add
xlat
xchg
andl
mov
rolb
sahf
mov
cld
loop
cld
add
mov
add
jg
jno
push
lods
data16
add
mov
add
sub
xor
cmp
add
mov
rol
sub
test
cmp
add
add
xor
test
jne
add
xor
jg
pop
jmp
hlt
add
inc
out
sub
testb
add
mov
fimuls
aam
and
mov
add
dec
mov
lahf
xor
iret
pop
data16
pop
or
xchg
data16
mov
das
in
inc
add
movl
push
dec
cmpsb
add
mov
pop
or
mov
inc
addr16
jg
sbb
add
mov
add
add
cltd
enter
add
pop
arpl
inc
jecxz
add
cmc
cld
fnstcw
mov
add
dec
out
add
cmp
mov
push
int
inc
add
movb
adc
out
xchg
cmpl
lahf
lock
xor
popa
push
add
add
add
or
jle
int
add
add
adc
sub
add
inc
add
aad
mov
sbb
add
insl
testb
adc
imul
adc
rolb
js
and
mov
add
ret
mov
and
mov
dec
sub
add
push
adc
xlat
mov
and
mov
mov
mov
mov
mov
xchg
add
rol
test
jecxz
mov
mov
and
jns
nop
add
add
mov
dec
loopne
lret
add
cmp
leave
int3
add
add
out
pop
pop
or
or
or
inc
add
add
cmp
mov
popf
push
jo
jmp
imul
inc
add
push
add
add
add
add
test
mov
fcomp
mov
nop
add
add
xchg
hlt
add
jle
add
xor
cmp
in
jb
imul
sbb
add
outsb
inc
add
adc
and
rorl
add
in
xor
add
add
std
sbb
repnz
add
dec
sti
pop
dec
and
mov
lods
adc
outsl
pop
cmp
mov
mov
mov
xor
std
insl
aaa
jno
add
cmp
add
pop
mov
push
add
push
add
or
int
add
pusha
add
pushf
out
jno
pop
or
mov
add
and
mov
dec
pop
int
and
push
dec
test
cmp
push
add
mov
nop
add
add
add
add
add
add
push
pop
imul
sbb
jp
add
xchg
cmp
pop
fbld
adc
add
xchg
mov
mov
cmp
add
xchg
ret
nop
add
push
orl
add
inc
add
pop
cmp
add
add
add
add
pop
pop
pop
dec
xchg
add
mov
jg
add
dec
stos
inc
add
mov
insl
sub
daa
or
push
add
addr16
add
add
sub
mov
cld
shrl
in
add
mov
add
or
mov
in
jb
in
lcall
add
dec
loope
les
movsb
add
outsl
shr
stc
mov
add
add
in
clc
and
popf
in
das
std
mov
aam
or
jo
test
adc
inc
add
mov
sub
add
add
stc
cli
mov
out
xor
add
mov
ja
in
add
out
lock
adc
pop
xor
clc
inc
xchg
xchg
test
add
jno
jnp
add
xchg
out
add
cmp
dec
pop
pop
imul
pop
cmp
mov
mov
insb
cmpsl
xorl
in
mov
ljmp
pop
cmp
scas
add
add
jp
mov
add
sbb
hlt
add
in
sub
stc
mov
scas
insb
inc
and
mov
pop
pop
pop
sbb
sti
push
inc
add
dec
add
add
sbb
leave
mov
mov
mov
fimull
sub
mov
and
pop
add
cmp
add
mov
mov
outsl
pop
sbb
sub
add
mov
pop
fstpt
das
mov
popf
ja
mov
and
mov
jnp
push
adcl
add
push
add
or
jecxz
add
mov
mov
mov
jp
enter
add
sti
inc
fdivrl
cltd
mov
gs
add
lds
xor
mov
in
add
popf
mov
sub
mov
pinsrw
mov
add
push
add
add
add
daa
lcall
add
add
sbb
xor
push
add
scas
add
mov
add
movb
push
add
or
push
add
cltd
sbb
in
or
fidivs
add
je
sub
inc
push
add
hlt
add
add
mov
and
in
imul
add
add
bound
mov
xchg
outsl
lret
imul
cmp
imul
enter
test
lcall
adc
cmpsl
adc
addb
push
add
and
cmp
mov
mov
push
je
ret
add
addr16
or
inc
add
stos
loopne
lock
lret
add
jg
dec
rcrl
les
jecxz
loope
cmp
movsl
jge
mov
int3
add
popa
unpckhps
pop
and
test
pop
aad
add
addb
add
mov
xchg
add
sbb
stos
xor
jmp
cmp
add
js
xor
aad
jb
push
add
mov
mov
ja
rol
xor
mov
push
add
lock
add
movzwl
add
push
pop
and
add
mov
xchg
and
cmc
fnsave
push
add
add
add
data16
into
insb
inc
add
add
insb
mov
add
cwtl
mov
cmp
add
repnz
push
pop
xor
jle
add
mov
pop
mov
rorl
fisubl
adc
add
xchg
lret
pop
push
adc
add
add
sub
jb
sub
add
iret
lcall
lods
xchg
daa
testb
add
mov
in
in
outsb
lea
add
nop
add
mov
pop
pop
mov
jl
sub
shr
add
mov
sub
add
add
int
adc
into
sbb
in
add
pop
xchg
xchg
inc
aam
js
rcll
cld
or
out
add
dec
faddp
mov
mov
cmp
aaa
sbb
loop
jbe
mov
push
push
add
popf
xchg
fistpl
sbb
mov
cmp
adc
addr16
jnp
icebp
and
mov
sub
pushf
push
popa
out
popa
das
rolb
cmp
icebp
pop
addb
add
add
adc
xchg
js
fucom
mov
mov
xor
out
cmp
add
add
movb
rolb
mov
nop
add
mov
inc
iret
rcrl
ljmp
mov
test
xor
xor
fdivr
aam
jne
add
inc
add
add
add
add
int
rcll
add
insb
test
sbb
add
add
xor
lods
adc
mov
or
mov
add
sbb
xchg
mov
xor
scas
mov
aaa
adc
push
add
add
loop
mov
jl
ss
push
add
add
add
add
push
rolb
imul
add
cmp
addb
idivl
xchg
mov
icebp
pusha
add
add
je
add
sbb
mov
add
pop
stos
push
add
jmp
add
or
arpl
add
out
pop
pop
add
fisubl
stos
rolb
out
ss
scas
icebp
xlat
mov
adc
inc
jle
add
lret
push
adc
add
ror
mov
push
add
leave
rcrl
jp
movb
fcomps
aad
lds
lret
ljmp
add
imul
mov
dec
ret
pusha
add
pop
test
add
rcll
add
inc
add
jbe
pop
mov
add
add
push
or
mov
and
mov
sbb
jo
xchg
jl
or
fnstsw
add
add
jle
push
lahf
mov
lahf
cmp
test
cmpsb
add
add
dec
xchg
add
mov
fwait
std
ffreep
lahf
push
xor
gs
cmp
add
jnp
add
adc
add
push
or
arpl
or
sbb
ret
shld
jne
insl
out
add
insl
pop
push
fwait
cld
add
testb
hlt
add
in
arpl
add
test
cmc
jg
add
add
mov
xchg
aad
add
add
add
outsb
jno
repnz
iret
pop
ret
loopne
out
icebp
out
mov
loope
pop
mov
and
mov
push
jg
ficomps
dec
xchg
insb
hlt
add
push
add
stos
mov
add
inc
add
fwait
ror
or
xchg
add
sahf
adc
movsl
adc
add
add
daa
push
cs
jne
add
adc
mov
dec
aas
lock
jge
pop
das
push
add
mov
addb
sub
fdivp
rcrl
or
push
add
add
js
leave
fstl
lahf
push
mov
mov
je
sarl
add
push
stc
inc
add
rolb
sub
jne
cmpsl
sub
add
call
cltd
sbb
cmp
push
add
test
add
add
push
pushf
mov
inc
cs
add
cld
mov
fwait
pop
xchg
add
mov
idiv
jge
repz
pop
call
popa
rcrl
aam
cmp
icebp
sbb
or
addr16
add
jl
fcoml
mov
add
add
add
aam
mov
mov
mov
add
mov
add
add
push
add
jmp
add
loopne
sub
add
inc
add
lock
xchg
jbe
xor
inc
add
movb
fwait
add
mov
loop
sub
xor
jne
adc
test
sub
add
sub
and
mov
cmp
xchg
test
xchg
push
jmp
add
push
add
jg
mov
mov
adc
add
insl
or
add
mov
xor
xor
mov
and
dec
pop
xchg
add
push
add
add
nop
add
sub
adc
add
cmp
fwait
pop
adc
aaa
xor
dec
data16
xor
xor
add
test
mov
jb
mov
sub
add
add
add
add
add
mov
add
add
add
mov
pushf
repnz
add
add
jb
pop
rcr
xor
mov
mov
jmp
add
cs
xchg
ret
pop
xchg
iret
sub
dec
xchg
adc
cmp
and
sbb
xchg
add
bound
mov
pop
or
adc
in
xor
push
int3
sbb
add
push
cmpsl
or
xchg
fistps
faddp
cmp
test
iret
push
add
add
add
testb
jns
ffree
das
pop
push
add
add
adc
cmp
push
sbb
dec
aaa
and
dec
mov
add
xor
rorl
lds
jne
nop
add
add
add
adc
pop
mov
xchg
cmp
sbb
sub
lods
mov
add
cwtl
pusha
add
pop
dec
push
push
add
add
iret
lock
movsb
add
cmp
add
add
dec
push
gs
jns
add
sub
add
push
add
add
xchg
or
mov
add
clc
inc
add
jne
add
xor
stc
shll
mov
sub
add
mov
insb
or
add
mov
mov
data16
and
mov
add
xchg
add
push
sbb
lcall
jecxz
pop
xchg
add
cld
push
dec
or
dec
sub
dec
popa
lret
rcrl
pusha
add
xor
or
add
sbb
add
cli
xor
bound
mov
add
mov
add
pop
lcall
icebp
mov
ljmp
and
mov
add
nop
add
mov
lret
push
add
addb
je
ret
dec
lods
add
loop
xchg
fisubrs
ret
add
add
or
add
add
sbb
pop
mov
add
xor
cmpsl
int
add
add
pop
pop
mov
cmp
outsb
add
mov
add
add
add
xor
rolb
cmp
add
testb
insl
adc
add
testb
mull
mov
lret
xchg
imul
or
testb
ficompl
add
add
add
in
sbb
loope
inc
add
pop
stc
test
cmpsl
aam
fstl
sub
ds
inc
add
add
add
add
in
or
or
add
mov
or
divl
loope
sub
inc
add
add
cmp
push
add
les
in
push
xchg
sub
cmp
stos
sti
lahf
fucomi
mov
add
sbb
test
xor
lcall
mov
jbe
loop
int3
popa
or
pop
jecxz
xchg
ret
fnclex
add
inc
addb
mov
add
mov
out
push
loope
add
jecxz
movsl
pop
mov
sbb
movb
add
cmp
add
mov
mov
int
test
mov
fdivrs
leave
pop
sub
or
loopne
xchg
add
xor
loop
dec
scas
mov
mov
jmp
add
add
fisubs
mov
mov
iret
adc
mov
je
xchg
inc
add
jae
mov
sahf
xchg
xor
sbbl
mov
lds
imul
lret
repnz
add
imul
popf
push
add
push
sub
rolb
dec
sub
out
in
xchg
das
add
and
mov
add
outsb
push
cmp
add
and
dec
mov
mov
or
cld
mov
add
fisttps
lods
or
add
inc
fstl
add
mov
rolb
push
mov
rolb
in
icebp
test
add
pusha
add
stos
cmp
pop
loope
push
add
mov
out
or
cmpsl
pop
jge
inc
mov
jae
push
dec
xor
daa
fistpll
sbb
dec
dec
out
pop
add
push
add
inc
add
add
mov
sbb
ret
or
add
add
sbb
or
lret
xchg
loope
adc
lea
jg
add
addr16
add
mov
fildll
inc
add
add
in
push
jecxz
sub
push
add
mov
inc
add
add
or
rolb
jge
mov
sbb
rolb
loopw
jl
fiaddl
add
popa
repz
add
add
add
jp
inc
add
add
leave
les
inc
std
in
testb
pop
jg
jp
jge
movb
push
add
imul
scas
iret
inc
add
or
out
fisttpll
outsb
ret
cmp
add
add
mov
mov
add
nop
add
push
add
add
pop
pop
jle
add
add
loop
test
jle
scas
lea
add
testb
outsb
pop
cmp
popf
mov
add
add
lret
mov
sbbl
add
mov
subl
in
cwtl
int3
jbe
jge
into
pop
sub
add
mov
jne
imul
add
mov
aad
jecxz
add
sbb
stc
jo
fiaddl
dec
adc
pop
or
insl
add
jnp
add
testb
push
add
add
add
aaa
rolb
push
clc
into
rolb
and
in
jg
sahf
pop
popa
pop
adc
mov
jmp
mov
addl
rol
dec
xchg
add
data16
mov
out
aam
cmp
jge
in
ds
adc
mov
pop
xor
add
pinsrw
add
scas
cmpsb
add
lods
or
fwait
ds
mov
add
and
ds
add
jno
out
lods
push
dec
mov
add
jnp
add
popf
loop
out
addb
adc
fdivl
or
in
push
fcomps
adc
or
add
add
out
gs
in
push
dec
lahf
jbe
scas
lods
js
pop
insl
sbb
add
lret
inc
add
out
int
sti
aam
pop
outsb
addb
jge
rorl
add
xor
in
jecxz
push
add
mov
ret
cmp
popl
mov
xchg
cmpsb
add
sbb
sub
cmp
add
adc
mov
add
mov
add
add
rcll
xchg
add
in
jnp
add
add
inc
in
pop
lret
sub
mov
xor
dec
add
add
add
add
add
pop
pop
jno
add
icebp
rcrl
pop
cmpsb
add
or
test
sub
addr16
idivl
fbld
addb
mov
scas
call
pusha
add
test
add
testb
nop
add
push
add
add
test
stos
push
mov
add
mov
out
int
adc
mov
pop
xchg
hlt
add
rolb
sbb
add
faddl
mov
test
add
cs
mov
add
push
add
mov
cltd
adc
aas
pop
ret
add
push
add
pop
inc
aad
fidivrs
add
jnp
xor
push
push
add
jo
roll
xchg
mov
and
mov
add
decl
mov
in
and
mov
movsl
out
inc
daa
fbld
mov
add
push
sbb
dec
cmp
xchg
add
enter
movsl
jmp
dec
mov
push
imul
test
xor
add
add
movsl
push
fdivrl
add
push
inc
fmul
xchg
add
xor
inc
xchg
add
add
arpl
xor
mov
mov
add
and
mov
adcl
das
mov
loope
pop
sbb
cmpsl
xor
in
inc
add
add
arpl
inc
pop
out
data16
scas
shl
add
rolb
in
in
add
dec
pop
xchg
leave
cmc
mov
insl
mov
push
jae
add
sti
movsb
add
loope
addb
adc
in
mov
clc
dec
hlt
add
pop
in
nop
add
add
and
or
push
add
or
stc
in
movsl
xchg
adc
xor
cld
movb
ret
data16
add
add
add
mov
rolb
or
clc
mov
sub
mov
mov
add
add
xor
in
popf
push
add
add
mov
mov
adc
add
add
sub
xor
push
push
add
cmp
in
add
adc
stos
jmp
add
push
add
add
mov
test
addr16
inc
add
xor
mov
mov
jno
rolb
lea
mov
add
and
pop
and
mov
xchg
stos
pop
xchg
inc
mov
add
ljmp
fistpll
sbb
pop
cmp
xor
adc
leave
xchg
in
add
or
cmp
imul
cmp
sbb
push
add
inc
push
pop
iret
out
bound
mov
add
add
mov
jno
cmp
add
add
and
aaa
push
add
mov
sub
nop
add
add
inc
add
add
push
adc
jo
mov
add
les
lods
repz
pushf
adc
pop
sub
add
add
repz
or
cmp
xlat
and
push
add
add
rolb
add
daa
stos
imul
stos
fisttpll
jae
xlat
imul
cs
out
pop
popa
movsl
ds
adc
jl
mov
xchg
add
cmp
add
add
mov
dec
inc
add
push
add
das
test
add
mov
mov
repz
sbb
add
testb
cwtl
jge
add
pushl
fstl
ds
dec
cwtl
xor
jae
push
add
or
addb
jge
dec
inc
les
movsb
add
pushf
out
mov
xchg
and
mov
test
or
mov
sbb
jmp
add
push
add
push
add
and
add
lcall
test
add
pop
fmulp
inc
mov
push
add
add
or
add
cmc
gs
xor
add
sub
inc
add
cld
and
mov
out
cli
aaa
add
repnz
insb
movb
sub
and
popf
sbb
lea
inc
add
add
dec
xchg
sahf
adc
xchg
add
mov
lcall
pop
stos
int
xchg
add
jb
les
mov
leave
jae
add
mov
add
int
inc
add
sbb
dec
outsl
inc
add
testb
fdivrl
xlat
cmp
add
add
jge
add
add
shll
add
orl
push
pcmpeqd
je
aam
xchg
add
mov
add
add
inc
add
out
orl
add
add
mov
and
mov
icebp
ljmp
inc
pop
lcall
mov
add
push
push
add
add
int3
adc
mov
add
add
fwait
rolb
jnp
jno
xchg
jno
add
popf
in
sub
add
sbb
incb
subl
add
mov
mov
out
shrl
addb
js
add
iret
fisubrl
stos
and
mov
add
sbb
cs
xor
mov
sbb
dec
jne
push
fidivl
add
outsb
mov
pop
ret
sub
incl
pushl
or
into
adc
pop
sbb
lock
and
mov
add
or
addb
divl
jo
out
test
test
inc
add
jge
sahf
jg
add
data16
es
hlt
add
aaa
lret
rolb
dec
mov
and
imul
add
adc
aam
sbb
add
add
das
or
mov
add
add
jl
xlat
mov
aaa
out
add
add
mov
js
mov
xchg
das
xchg
cli
in
or
mov
jle
push
add
icebp
push
add
icebp
push
cs
mov
add
mov
or
mov
add
add
test
jno
add
das
dec
mov
lret
mov
mov
pop
push
add
add
cmp
cli
iret
loopne
pop
shll
aas
fiadds
bound
mov
ljmp
push
add
ds
stos
call
add
sub
add
mov
add
jbe
stc
js
test
pushf
mov
pop
jmp
mov
fcompl
cli
cmc
or
bound
mov
add
add
test
add
add
js
fisttpll
add
mov
ljmp
jecxz
fcmovne
testb
in
adc
pushf
and
xchg
cmp
push
add
sub
xor
mov
sub
inc
adc
mov
add
xchg
xor
mov
dec
sti
movsl
stos
jg
cwtl
loop
mov
scas
mov
das
outsl
dec
leave
data16
add
outsl
dec
test
add
add
adc
enter
add
mov
fwait
popf
outsl
and
cmpl
mov
mov
jp
adc
mov
addr16
jbe
and
sbb
xchg
leave
loopne
stos
adc
nop
add
push
or
int
sbb
inc
aad
cmpsl
mov
add
add
scas
sbb
outsl
and
fimull
out
mov
repnz
mov
jecxz
sti
fidivl
daa
je
sbb
add
in
test
and
mov
add
ret
in
xchg
mov
add
push
and
mov
add
add
xor
add
add
add
xchg
add
mov
xor
into
js
inc
jmp
and
shl
push
jne
dec
push
adc
mov
mov
jl
add
add
shl
or
add
aad
pop
or
mov
outsl
mov
add
add
std
imul
dec
adc
mov
aad
jp
repnz
dec
add
push
add
adc
js
jbe
add
popf
push
add
loopne
repnz
xchg
pop
inc
in
movsl
iret
cwtl
rcll
add
loop
mov
xchg
pop
sbb
sub
xchg
rolb
sub
sub
lods
into
cmp
pop
icebp
fs
sub
cmc
cmp
mov
mov
add
add
cs
add
push
add
lods
das
cmc
loop
dec
popf
xlat
pop
out
stc
imul
int
dec
sbb
cmp
add
jmp
dec
subl
js
loope
sub
add
addr16
mov
add
fcomi
bound
mov
xor
or
lds
add
mov
dec
adc
add
sub
dec
mov
mov
in
mov
ret
sub
fnstsw
cmp
push
add
dec
mov
ficoms
rcll
fsubrs
cmp
cmp
push
add
and
add
add
jnp
add
push
add
sbb
rolb
adc
add
testb
mov
out
fistps
pop
leave
pop
adc
sbb
dec
jns
push
push
movb
hlt
add
ja
addl
jmp
mov
pop
je
mov
ljmp
add
xchg
add
sbb
or
jnp
out
scas
leave
lock
jo
xchg
add
bound
mov
adc
aam
mov
push
inc
add
adc
inc
xor
mov
leave
jo
push
mov
add
add
add
mov
std
push
xor
popa
out
mov
pop
xlat
adc
jae
add
dec
arpl
add
inc
pop
mov
mov
loope
pop
ret
jne
xchg
adc
fistpll
or
insl
fildll
sbb
outsb
enter
dec
sub
add
adc
cli
push
mov
fsubl
mov
data16
pop
pop
xlat
data16
mov
add
add
and
or
dec
iret
out
add
jo
dec
rolb
icebp
mov
add
andl
jecxz
xchg
loopne
mov
mov
or
push
add
and
mov
fisttps
jns
add
adc
add
add
fwait
push
sbb
fstpl
push
repz
movsl
flds
pop
std
out
cli
jp
in
push
mov
addb
scas
add
add
push
rcl
out
xchg
and
mov
mov
repnz
add
in
inc
add
stos
add
mov
mov
jg
pop
xor
test
in
or
out
inc
add
add
mov
in
add
lds
cmp
lcall
jno
adc
add
movb
add
out
adc
rolb
test
add
insb
xchg
imul
push
add
mov
add
add
lret
xor
mov
add
addb
ret
inc
jmp
add
mov
xlat
loop
add
aad
add
dec
inc
xor
xor
xor
stc
and
add
add
stc
pop
jnp
add
add
mov
inc
addr16
jg
push
jnp
add
add
mov
addb
add
dec
loop
pop
jbe
and
mov
add
shr
int3
dec
inc
mov
mov
add
push
add
pusha
add
mov
je
enter
fs
add
rolb
out
dec
inc
add
xchg
mov
mov
jp
enter
inc
xor
jbe
mov
inc
add
mov
mov
repnz
or
gs
mov
cmpsb
add
test
cwtl
dec
push
int
mov
add
mov
add
add
mov
aas
mov
imul
lea
fldl
add
add
add
mov
cwtl
inc
sbb
in
outsb
mov
mov
fstpt
insl
lods
adc
mov
fsubl
call
pop
jecxz
leave
test
dec
push
xchg
add
inc
add
lods
mov
cwtl
dec
inc
imul
mov
add
lock
pop
jl
mov
mov
add
fistpl
add
test
out
add
repz
and
add
add
clc
xor
scas
mov
int
andl
sahf
jg
cli
pop
cld
insb
mov
push
add
sbb
inc
add
lods
adc
add
add
addb
add
dec
testb
add
add
add
js
add
add
or
sbb
and
push
add
repz
pop
or
add
add
add
loop
adc
leave
or
fstps
or
std
xchg
mov
mov
fadds
or
loop
cli
jle
fcompl
cmp
dec
push
xor
xchg
iret
cs
lods
pop
std
jb
mov
jmp
add
aas
inc
add
add
mov
add
daa
cmpsb
add
add
add
imul
dec
popa
fmull
add
and
insl
or
add
add
add
xchg
add
xchg
add
lahf
repnz
mov
jmp
mov
xchg
add
outsl
shl
jge
lret
aad
jl
test
and
mov
mov
jg
add
xchg
addr16
fildll
add
add
ja
add
mov
xchg
add
add
xchg
add
pop
scas
decl
jne
out
sub
ljmp
out
and
mov
or
adcl
gs
add
add
scas
adc
mov
mov
jle
inc
add
jmp
add
jo
push
add
outsl
xor
cmc
fnstenv
adc
rolb
add
mov
add
inc
cld
orl
dec
lods
les
cmc
movl
pop
lahf
jne
sub
add
xchg
add
movsb
add
pop
ss
push
inc
xor
rolb
and
xor
adc
inc
add
repnz
inc
add
add
mov
add
in
push
xchg
cld
outsl
mov
add
repz
add
push
xor
hlt
add
pop
jmp
push
add
add
mov
movsb
add
add
mov
repnz
jbe
fiadds
mov
dec
pusha
add
jo
jmp
bound
mov
add
movsl
lahf
sub
add
add
and
mov
cld
je
pop
xchg
out
mov
dec
addr16
add
mov
add
scas
sub
xchg
out
add
or
sub
or
ret
outsl
dec
scas
adc
xor
push
shrl
cmc
sub
fmuls
out
inc
add
add
mov
add
mov
sbb
sbb
mov
add
add
mov
enter
push
add
add
or
sahf
rcrl
cmp
cmpsl
push
insl
cwtl
jp
pop
mov
push
lret
dec
mov
add
add
cmpsb
add
loop
push
gs
sub
add
mov
mov
addb
or
sub
adc
sub
aas
lock
xchg
push
add
sbb
nop
add
or
inc
pop
stc
sbb
dec
cmpsb
add
rolb
add
mov
pushf
cmp
bound
mov
dec
cmp
xor
cltd
push
add
add
loop
lahf
mov
pop
adc
mov
mov
je
shrl
lds
push
add
add
fwait
call
add
mov
add
ja
add
xchg
xchg
xchg
sub
mov
cmpsb
add
rolb
test
add
adc
outsl
dec
sti
add
add
add
pop
into
iret
dec
xor
add
adc
cmp
xchg
cld
sarl
subl
add
add
ljmp
add
add
jae
add
or
mov
mov
outsl
cmp
add
rolb
in
dec
xor
dec
ret
pop
mov
sar
xchg
push
fwait
jecxz
add
xchg
jo
inc
add
push
add
rolb
loope
push
add
xor
sub
lods
mov
xchg
add
add
outsb
pop
icebp
movsb
add
imul
aad
out
push
and
mov
in
lea
mov
add
loopne
push
jnp
add
cltd
lret
and
mov
pop
stos
mov
scas
sbb
cmpsb
add
in
and
add
in
in
mov
out
movsl
rolb
jae
push
mov
add
ret
addr16
xchg
mov
dec
lock
sub
add
jmp
std
fadd
add
rolb
loopne
xor
mov
jp
add
add
scas
loope
dec
movb
out
repnz
pop
imul
cli
popa
mull
add
push
add
dec
mov
add
mov
cmp
add
inc
add
add
add
rolb
movb
lods
sub
cmc
mov
add
add
dec
inc
mov
cli
xchg
pop
sbb
add
push
movsb
add
add
mov
add
mov
push
or
gs
jns
imul
pop
ja
aas
in
loopne
in
pop
inc
push
add
mov
ret
add
shll
mov
or
xchg
cld
insb
movsl
ds
addb
add
pop
rcll
add
xchg
in
jg
cwtl
fsubp
add
mov
add
addb
movsl
pop
xor
clc
ret
add
xchg
add
out
jo
or
pop
add
lret
rolb
je
imul
add
mov
add
add
out
and
mov
xor
pop
xor
dec
in
jmp
add
les
push
add
mov
jl
push
imul
movb
in
outsl
jecxz
mov
outsl
dec
push
stos
inc
call
mov
out
sub
sub
pop
in
sbb
add
jae
add
xor
frstor
sbb
push
add
xchg
add
add
add
add
bound
mov
aad
xlat
js
cmp
or
and
mov
iret
fdivrl
scas
pushf
insl
mov
add
mov
add
add
sub
dec
cltd
arpl
jns
pop
pop
sahf
dec
pop
pop
or
int
cmp
cmpsl
jns
mov
add
lock
cmp
xor
add
add
add
insl
add
mov
adc
test
mov
popf
call
add
iret
das
xor
movsl
mov
in
pop
xor
add
lret
popa
sub
mov
test
add
add
mov
add
pop
test
inc
cmp
add
scas
addr16
addb
inc
xor
rolb
add
add
test
movsl
jo
int
stos
dec
je
pop
push
inc
cld
mov
add
ds
add
inc
add
cld
mov
dec
repnz
out
lds
xchg
add
dec
fldl
bound
mov
add
add
mov
inc
add
out
into
lret
pop
in
xchg
fs
add
add
in
push
fwait
das
cmpsl
data16
add
add
add
add
add
mov
add
or
inc
add
inc
daa
aaa
mov
adcl
inc
add
in
mov
mov
add
push
add
cwtl
sub
or
xchg
subl
add
fisttps
push
add
fcmovnu
test
or
je
add
mov
bound
mov
add
addb
xchg
icebp
movb
add
lds
jnp
add
rolb
int
add
xchg
pop
sarl
add
adc
mov
cmpsl
push
stos
and
add
addb
mov
sub
and
and
mov
add
mov
inc
add
into
dec
dec
fistps
loopne
ret
outsl
xlat
lods
push
mov
mov
testb
ljmp
xchg
fistpll
cmp
lret
rolb
pusha
add
je
xor
ret
sbb
jg
add
leave
rolb
bound
mov
cmpsb
add
int
test
sbb
pop
cmpl
lds
pop
jge
ljmp
je
sbb
je
sbb
add
add
pop
movsb
add
outsb
lea
popa
mov
fwait
iret
imull
adcl
push
xchg
add
iret
rolb
rol
add
add
pop
mov
stc
dec
pop
or
imul
add
mov
addb
push
and
mov
push
add
and
xor
cli
leave
dec
dec
into
insl
fbstp
test
gs
mov
add
add
add
mov
add
test
sti
dec
push
sub
add
scas
scas
push
add
insl
ja
rolb
lcall
int
sbb
fsubs
repz
pusha
add
les
inc
add
inc
add
sbb
clc
adc
dec
iret
pushf
mov
pop
iret
mov
push
add
pop
mov
js
cld
js
xor
adc
andl
mov
inc
xchg
roll
pop
in
data16
add
or
jae
or
ja
pushf
inc
cmpsl
clc
jl
test
add
cmp
dec
or
jae
insb
ja
sub
lods
cltd
push
decl
add
out
mov
add
add
push
add
add
push
add
mov
rolb
mov
jg
add
inc
lock
pop
push
mov
mov
cli
xchg
push
xchg
imul
sti
rolb
int3
cmc
xchg
sbb
add
push
add
mov
add
jmp
nop
add
into
test
add
mov
cmp
add
add
xchg
cltd
push
add
repz
push
xchg
icebp
add
jbe
fdivrl
xor
int3
data16
add
push
add
add
pop
repnz
movsl
lar
mov
test
imul
lcall
mov
or
add
xchg
dec
outsb
call
inc
sbb
in
pusha
add
add
sldt
mov
movb
mov
mov
test
add
sub
add
stos
add
mov
add
add
adc
mov
add
jbe
in
mov
icebp
xor
int3
xlat
adc
std
inc
js
pop
push
mov
ds
jo
cmp
xchg
push
or
add
add
push
jo
pop
or
mov
add
sbb
cmp
add
in
cmc
sub
gs
scas
inc
add
repz
add
add
xlat
jne
pop
imul
add
jns
sbb
lret
jp
and
mov
pushf
jns
add
lret
cmpsl
das
fwait
sti
fisttps
fstl
add
add
mov
addb
sahf
addl
add
add
xor
mov
adc
loopne
jne
in
xchg
movb
add
mov
xchg
add
test
jo
loope
rolb
and
int3
mov
add
add
pop
in
or
sub
imul
mov
add
fucomi
sbb
dec
mov
add
sub
add
add
and
xor
jg
stc
cld
push
mov
insb
add
aad
adc
nop
add
ljmp
sahf
cmpsb
add
add
inc
add
call
scas
sti
mov
cmp
xchg
mov
push
add
push
ret
sub
add
in
iret
and
jecxz
mov
dec
sub
movsl
sub
inc
in
ficompl
and
xchg
sub
jb
mov
lahf
xchg
add
imul
fsubr
rcll
add
test
cli
gs
xchg
add
jge
xor
xor
lret
in
loop
jmp
js
aas
push
add
lret
inc
mov
testb
add
movsl
push
je
pop
cmc
mov
or
out
divl
push
cmp
cmp
gs
dec
js
add
push
insb
xor
pusha
add
add
add
add
or
or
add
js
add
lea
lret
mov
lods
fistps
sahf
loope
stc
ficomps
loop
xchg
add
sbb
cmpsl
inc
add
jnp
add
arpl
gs
add
mov
push
add
icebp
das
loop
aaa
stos
push
xchg
dec
mov
scas
fwait
scas
xor
add
inc
pop
std
jg
mov
repnz
push
add
call
add
fstps
add
into
push
add
sub
add
push
add
and
sbb
pop
inc
ret
fsubrs
xor
mov
pushf
or
add
ds
xor
add
add
enter
ljmp
add
mov
fmul
inc
push
cmp
arpl
popf
sbb
mov
cmp
push
rolb
ds
add
jns
pop
fldt
xchg
mov
xor
xchg
je
add
push
pushf
cli
adc
push
adc
roll
iret
mov
pop
pop
mov
add
add
int3
dec
mov
add
cmc
push
add
add
popf
mov
add
sti
mov
adc
mov
add
push
inc
xchg
add
add
add
daa
add
mov
fbld
add
sbb
cmpl
add
add
inc
add
repnz
add
mov
add
add
add
inc
test
jno
test
add
mov
mov
je
sbb
unpcklps
sub
cli
das
sahf
sub
add
add
adc
dec
jp
out
test
test
add
add
testb
repnz
add
xchg
add
out
mov
add
xor
je
xchg
add
sub
popa
clc
pop
fidivl
sbb
inc
xchg
addb
add
jnp
add
jg
add
ljmp
shrl
pop
push
add
stc
mov
add
add
add
insb
fwait
sub
add
add
add
add
scas
sarl
add
add
mov
mov
add
in
std
addb
and
rcrl
xchg
in
imul
fmull
add
in
icebp
inc
add
sub
rolb
add
inc
add
mov
fisttpll
sbb
daa
cmpsl
icebp
cmpsb
add
cltd
or
mov
add
add
sbb
mov
cmc
ss
push
add
gs
add
call
add
inc
mov
pop
pop
adc
mov
sub
js
cmc
out
lods
outsb
addb
inc
add
add
add
adc
pop
rorl
add
add
mov
add
iret
xchg
add
cmp
mov
loopne
mov
push
add
std
and
pusha
add
mov
lret
and
push
imul
pusha
add
loopne
aas
or
sub
fisubrs
xchg
add
bound
mov
imul
or
mov
loopne
mov
add
add
out
dec
sbb
nop
add
add
xor
bound
mov
xchg
add
add
inc
xor
add
cltd
enter
or
popf
mov
cmpsl
mov
arpl
jp
add
test
loopne
sbb
add
data16
mov
ret
or
add
mov
imul
inc
popa
negl
jge
insl
xchg
xchg
pop
aas
mov
inc
add
jns
rolb
mov
inc
stos
sbb
or
add
notl
jecxz
add
sbb
push
add
loopne
dec
push
rolb
xor
addr16
sar
mov
repz
shr
jb
sub
and
mov
jp
and
mov
inc
add
inc
add
mov
outsb
xorl
insb
loop
cmp
add
and
mov
add
mov
daa
popf
movb
ja
rcpps
cld
mov
lea
add
add
inc
add
add
cmp
add
loopne
arpl
mov
xchg
add
add
mov
mov
push
add
mov
cmp
ds
mov
dec
or
loope
xchg
add
add
add
add
add
add
scas
or
jp
daa
lea
add
lods
xor
adc
nop
add
cmpsb
add
add
insl
pop
add
mov
mov
mov
add
dec
dec
inc
fiaddl
mov
push
add
movb
rolb
lret
mov
daa
into
add
push
add
and
or
add
dec
xchg
add
loop
data16
pop
icebp
ljmp
sbb
dec
adc
gs
xchg
push
adc
ret
add
add
add
adc
add
aaa
adc
push
aam
add
inc
dec
imul
mov
push
add
in
dec
add
jo
cld
add
nop
add
sub
dec
push
mov
mov
or
adc
mov
add
inc
push
dec
mov
stos
ds
mov
add
cmpsl
jmp
aaa
pop
pcmpgtd
test
in
pop
imul
mov
mov
pop
and
loopne
pop
mov
dec
push
pop
mov
cmp
mov
add
mov
add
mov
add
xlat
lock
out
ljmp
add
fisubl
xor
loope
addb
ljmp
add
add
add
and
mov
jecxz
push
add
or
jmp
jbe
lds
es
in
movd
add
loope
lcall
add
add
mov
add
addb
add
add
inc
add
fiaddl
add
dec
lock
in
push
add
insb
mov
test
add
imul
scas
addb
add
imul
imul
mov
push
cs
add
push
xchg
cmp
add
xchg
add
dec
movl
push
add
and
popa
out
in
fwait
mov
ljmp
add
outsl
stos
add
mov
add
test
lods
push
lods
jle
dec
test
dec
outsb
mov
in
pop
sub
push
add
add
add
adc
dec
cmpsl
push
xor
jecxz
xchg
add
add
fsubrl
push
mov
popa
inc
sbb
lods
mov
push
add
mov
imul
bndldx
sbb
jnp
in
cmp
push
add
shll
adc
cmpsl
dec
hlt
add
add
add
scas
cld
rolb
pop
iret
jb
jge
sbb
and
sti
cld
jmp
sub
xlat
daa
sbb
dec
addr16
add
add
adc
jecxz
add
xchg
cs
add
lret
fwait
rcrl
pop
push
cmp
adc
shl
dec
leave
rsqrtps
repnz
push
mov
ds
pop
xlat
push
add
int
xlat
jl
jmp
fstl
xor
add
cmp
adc
popa
loopnew
icebp
popa
or
lahf
stos
out
mov
push
push
add
dec
les
or
add
jns
add
outsb
dec
aas
cmp
in
xchg
testb
out
add
add
add
leave
repnz
leave
and
add
add
loope
add
dec
push
mov
aad
stos
lock
jecxz
lods
testl
add
push
jl
popa
cmp
mov
inc
mov
int3
mov
add
add
and
mov
add
add
dec
cmp
inc
addb
sbb
movsb
add
addr16
or
pop
in
icebp
test
jae
add
or
add
clc
movb
imul
inc
add
jle
loop
cmp
fadd
add
sbb
jb
lret
jge
sub
movb
add
push
push
sub
lds
or
jae
add
push
add
add
add
mov
out
roll
add
add
gs
test
test
mov
jg
mov
xchg
lahf
test
push
mov
es
lock
push
add
and
add
push
add
push
arpl
sahf
and
loop
clc
mov
pop
je
pop
lret
fildl
mov
add
mov
pop
hlt
add
add
add
aas
fisubrs
mov
bound
mov
inc
jmp
cmpsb
add
add
ljmp
inc
lret
cmp
add
add
add
sub
add
add
add
add
add
pop
inc
add
or
jo
mov
add
outsb
mov
add
mov
inc
add
arpl
jg
push
mov
pop
and
mov
insb
out
arpl
cs
ja
jne
test
jae
das
sbb
pop
imul
insl
clc
rolb
mov
cmp
add
in
mov
mov
popa
sbb
addb
add
clc
jp
jnp
jmp
add
insl
inc
cmp
add
or
jnp
add
cmpsb
add
add
fisttpl
bound
mov
lahf
clc
clc
jns
add
rol
iret
cmp
add
mov
mov
add
add
mov
add
add
addr16
jl
pop
jb
push
pop
lahf
push
pusha
add
and
shrl
xchg
push
add
sti
jns
js
add
mov
mov
add
mov
add
xchg
pop
aam
pop
orl
and
mov
xchg
add
lods
push
add
jge
sbb
pop
and
mov
inc
add
add
add
xor
ja
hlt
add
add
mov
test
rolb
add
sub
pop
inc
mov
daa
add
sub
mov
je
or
in
jno
mov
mov
jecxz
xchg
leave
sbb
add
xchg
add
adc
loopne
pusha
add
inc
add
outsl
pop
pop
call
scas
add
mov
or
fnstsw
cmp
rolb
add
mov
add
add
add
push
add
add
sub
mov
mov
add
aam
mov
add
mov
int3
in
mov
push
jno
dec
jo
ljmp
test
add
mov
adc
or
and
adc
add
test
fstl
xlat
clc
push
add
sbb
push
xchg
and
push
cmp
mov
sub
add
add
dec
lret
mov
add
int
add
add
jnp
jae
add
mov
mov
ja
mov
rolb
ret
iret
push
movb
lea
fdivrs
sti
and
fucomi
pop
mov
je
xlat
sub
int3
push
pop
cmp
jne
and
sub
test
pusha
add
cmpsb
add
les
hlt
add
mov
cmp
add
add
inc
aam
push
les
js
sbb
add
pop
idiv
fmuls
add
inc
add
add
icebp
add
mov
popf
inc
mov
test
add
push
add
xor
stc
popf
sub
pop
dec
push
add
mov
test
cmc
into
mov
mov
testb
icebp
mov
ljmp
jnp
pop
xor
inc
aad
mov
push
lret
cltd
fidivrs
mov
or
xchg
je
aam
mov
and
add
scas
sti
xchg
lds
add
ret
hlt
add
mov
addr16
add
nop
add
adc
add
mov
jg
pop
or
fstps
notl
pop
dec
int
push
dec
xor
insl
push
add
push
add
aaa
push
repz
cwtl
stc
loopne
icebp
outsb
adc
jl
cmp
mov
fucomi
add
lahf
or
dec
cld
int
add
add
adc
subl
int3
adc
and
movsl
adc
int3
cltd
ret
push
add
mov
movl
add
mov
add
push
mov
arpl
fdivr
mov
leave
mov
add
pop
movsb
add
add
add
call
add
jp
mov
cwtl
pop
scas
lods
das
ret
pop
cmp
leave
stos
inc
fdivrs
sub
int3
scas
or
sub
aas
test
mov
paddq
xchg
add
fabs
inc
add
mov
cwtl
adc
push
add
dec
cmp
jecxz
in
pusha
add
jo
sbb
add
dec
pop
jns
jns
jb
pop
pop
movb
add
add
rcll
mov
add
jmp
add
fwait
in
push
nop
add
xor
pop
jp
pop
push
add
and
bound
mov
cwtl
sahf
jb
stos
imul
or
add
xchg
pop
test
rolb
rolb
repnz
clc
dec
push
in
repz
inc
push
add
jne
sbb
sbb
add
dec
and
add
cmp
ds
adc
dec
out
dec
pop
cmp
out
popa
or
push
mov
dec
mov
jle
add
push
add
mov
and
cmpsb
add
mov
dec
in
and
mov
jbe
loopne
test
data16
jecxz
les
sbb
add
hlt
add
cmp
jle
popf
cmpsb
add
push
inc
add
bound
mov
pushf
ljmp
mov
add
hlt
add
add
inc
add
cwtl
xor
inc
add
add
sbb
add
mov
mov
add
mov
jg
pushf
loop
sub
mov
sub
sub
sub
add
add
dec
rorl
add
add
add
dec
mov
mov
add
push
add
add
add
add
jle
and
mov
cmp
cmpsl
jns
popa
xchg
pop
jno
icebp
mov
andl
lret
orl
push
add
add
push
add
add
rolb
mov
pop
rolb
xchg
add
xchg
cmp
je
data16
xchg
add
sbb
movb
adc
add
add
sbb
rolb
ret
xor
mov
stos
mov
testb
inc
sbb
pop
addr16
jle
data16
mov
push
add
sbb
push
add
cmpsb
add
jle
mov
sbb
daa
das
pop
cwtl
faddl
test
ficoml
add
add
sti
push
in
add
add
rol
and
cmp
add
movsl
mov
inc
cld
in
mov
add
mov
lds
dec
mov
imul
ja
and
mov
add
popf
jecxz
scas
fsubs
mov
ljmp
fsubrs
mov
loop
dec
mov
imul
xor
xchg
pop
in
xor
xchg
or
jl
add
pusha
add
mov
add
mov
in
dec
mov
push
ljmp
pop
mov
add
add
test
mov
clc
rolb
and
cwtl
sub
add
ret
out
push
fwait
pop
add
aad
add
mov
shrl
add
data16
out
stos
jo
out
les
xor
jnp
sub
sbb
add
mov
mov
push
add
add
test
adc
std
push
add
mov
xchg
add
sub
pop
xchg
push
add
mov
testb
jge
stos
sub
ds
add
rolb
scas
jnp
cwtl
sbb
out
add
fadd
add
mov
shll
add
shll
data16
dec
mov
and
mov
mov
add
repz
add
pop
out
lcall
adc
lods
rolb
lcall
mov
ljmp
call
call
add
inc
jl
adc
lds
lods
jecxz
lods
xchg
add
mov
push
add
xchg
add
and
push
repnz
addl
add
jnp
sub
int3
pusha
add
imul
add
add
mov
scas
jl
out
insl
movb
add
cmc
mov
lret
pop
out
imul
insb
xchg
and
add
add
fstps
cltd
addb
fcoms
lahf
fcompl
add
jp
ja
dec
fisubl
add
fsubrp
lea
sub
sbb
add
imul
add
je
fldcw
add
cld
pop
gs
jmp
add
add
add
xchg
dec
out
xchg
add
ret
adc
xchg
add
add
add
jmp
aam
add
jge
jge
imul
add
and
pop
inc
shrl
in
pushf
scas
fisubl
add
add
add
outsb
mov
xlat
outsb
sub
icebp
add
adc
dec
pop
cmpsb
add
mov
outsb
add
repnz
xchg
add
push
add
add
push
add
add
mov
add
add
add
addb
out
iret
aas
jns
push
push
icebp
repnz
add
sti
cmp
add
rolb
and
xchg
push
add
push
int
add
add
push
cmc
sub
dec
cmp
cmp
cmp
pop
and
mov
loop
movsl
pushf
in
popf
lret
adc
add
sub
ret
outsb
std
in
sbb
or
pop
lods
lods
dec
fsubrl
cld
sub
adc
int3
mov
sahf
push
adc
ljmp
sbb
add
mov
add
clc
rolb
xchg
xor
xchg
add
sbb
cmpsb
add
add
cmp
ljmp
add
xor
lock
add
notl
push
add
add
mov
leave
push
add
stos
push
pop
int
add
fs
sub
rolb
pop
add
adc
sub
imul
rolb
pop
fwait
les
xor
and
mov
or
out
add
mov
mov
add
add
inc
add
addb
mov
inc
add
in
mov
xchg
cs
repnz
sub
xchg
push
add
stc
add
add
sahf
frstpm(287
ret
add
push
add
mov
cmpsl
or
add
add
popa
fwait
ror
cmp
movl
add
adc
dec
jmp
add
add
data16
add
add
add
add
cmp
xchg
cmp
cmpsb
add
mov
in
mov
add
add
sub
mov
add
add
mov
add
out
icebp
cmpsb
add
jnp
xchg
xchg
add
push
add
testb
mov
add
add
popa
or
mov
addr16
mov
lret
add
add
rorl
dec
mov
xchg
in
bound
mov
add
add
adc
xchg
pushf
sub
dec
in
adc
and
add
mov
repnz
adc
pop
loopne
dec
push
add
rcll
add
in
xchg
add
add
sub
mov
adcl
in
dec
mov
mov
mov
pop
aam
int
je
je
inc
add
dec
test
out
lods
mov
daa
sbb
add
cmp
add
add
les
aas
mov
xor
xchg
insb
and
mov
push
add
mov
add
shr
js
sahf
push
lock
add
loope
sub
lods
and
mov
mov
stc
mov
test
cli
pop
hlt
add
jns
es
xchg
add
add
outsb
lea
jns
xlat
ljmp
jmp
push
add
mov
add
add
sub
in
and
mov
pop
add
sbb
add
jmp
mov
mov
cmc
mov
lock
sbb
lods
sbb
add
add
xchg
popf
or
add
test
hlt
add
repz
add
mov
add
test
sbb
les
movsl
cmc
cmc
xor
cwtl
loope
sbb
add
xchg
push
push
into
and
mov
jle
add
mov
mov
add
dec
add
add
loope
movsl
or
aam
les
out
movb
nop
add
flds
add
and
jmp
jg
sub
add
ja
inc
and
ret
inc
add
adc
adc
and
mov
aaa
jo
xchg
add
and
mov
jne
add
add
add
mov
mov
add
add
jbe
out
push
rolb
data16
sub
jmp
add
add
lret
push
add
jo
push
add
jle
repz
sti
xchg
add
add
jle
cmp
xchg
lret
xor
out
cwtl
push
lahf
cmp
stos
mov
inc
add
out
out
or
leave
rol
sub
pop
inc
add
ds
in
add
add
push
dec
aam
mov
and
nop
add
add
adc
ret
jbe
adcl
leave
jnp
fimuls
or
das
cmp
in
mov
cltd
xor
into
pusha
add
inc
add
add
xchg
add
rorl
add
shr
cmp
xchg
add
add
inc
out
dec
cmp
js
repnz
movsl
push
add
pushf
adc
fdivl
jnp
add
add
add
addl
sub
cmp
cmp
jl
sub
pop
in
fdivl
add
fnstcw
pop
iret
daa
int
in
lods
push
add
adc
mov
xchg
add
or
add
add
mov
add
outsb
dec
xchg
sub
add
arpl
mov
add
or
lods
mov
stc
mov
add
add
add
mov
in
loopne
cmp
mov
jo
adc
sub
jge
add
cmp
or
push
lock
add
fildl
add
dec
stos
call
inc
mov
imul
dec
in
pushf
mov
add
out
jg
xlat
mov
add
pushf
lds
add
rolb
jge
int3
mov
add
mov
loop
pop
xchg
pop
adc
pop
xor
xchg
jno
fwait
ljmp
fiaddl
add
add
add
add
push
add
outsb
insb
imul
iret
cmp
add
mov
sbb
insb
les
jo
mov
add
add
dec
adc
adc
pop
inc
add
mov
add
add
jae
sub
add
add
cmp
cmp
repz
push
adc
bound
mov
push
insb
inc
mov
mov
push
add
adc
mov
pop
fsubr
mov
sahf
sbb
mov
mov
loope
nop
add
add
fcmovu
ljmp
add
mov
or
push
int
sub
aad
pop
faddl
add
add
out
xchg
add
add
add
ret
in
adc
aas
incb
aam
loope
jnp
pop
pop
xchg
add
mov
jmp
add
xchg
add
out
int3
lods
mov
xlat
sub
xchg
in
push
add
lret
adc
pusha
add
adc
sub
sub
add
dec
sbb
add
call
dec
movl
adcl
pop
xor
mov
in
add
jmp
add
xchg
xor
les
mov
and
mov
add
outsl
xchg
jnp
inc
add
jmp
add
add
ds
je
mov
mov
add
inc
ja
xchg
add
add
cmp
add
add
lahf
dec
aas
dec
dec
ret
push
add
push
add
or
dec
jecxz
add
add
jo
pushl
jg
mov
jle
add
xor
jecxz
sbb
rolb
mov
add
inc
add
mov
push
add
add
mov
add
add
pop
jmp
mov
pop
into
outsb
sbb
push
add
adc
test
loopne
cmp
mov
push
add
fadd
std
xchg
add
sahf
cmp
push
ret
push
pop
outsb
xchg
mov
mov
jno
add
mov
add
add
cmp
jle
shll
lahf
testb
repnz
sbb
mov
stos
mov
je
in
aam
into
outsb
xchg
add
enter
inc
add
xor
arpl
test
dec
xchg
add
cmp
ret
lods
in
mov
xor
mov
jo
mov
aad
add
mov
cwtl
bound
mov
test
lock
add
add
outsl
add
cmp
pmullw
push
add
stos
ficompl
mov
add
mov
xlat
lds
pushf
rolb
inc
pop
sub
les
dec
mov
int
add
inc
sbb
and
lods
lods
pop
dec
rolb
lock
push
inc
add
add
testb
add
imul
dec
and
or
lods
and
xchg
and
mov
std
jl
pop
test
lds
add
fs
stos
rolb
jmp
jbe
cmp
jns
pusha
add
nop
add
lock
mov
push
dec
mov
shr
and
stos
iret
mov
xchg
add
test
pop
add
add
cs
scas
in
push
fcompl
ds
add
aam
movsl
nop
add
jae
inc
add
mov
out
stos
jg
mov
cld
mov
mov
sub
mov
adc
cli
inc
add
jb
push
mov
jge
add
mov
push
pop
nopl
add
add
add
add
scas
mov
mov
jcxz
jae
add
adc
iret
daa
lock
inc
add
xor
jge
mov
mov
aad
lret
add
mov
mov
add
xor
movb
es
add
jl
ret
iret
lret
fsubrl
push
fsts
add
add
fwait
push
add
add
addb
add
push
add
add
cmp
add
pop
sahf
lock
xor
jb
fwait
pop
jne
out
cs
xchg
test
add
add
xchg
fwait
sbb
xor
mov
test
add
add
ret
push
add
mov
out
je
mov
add
add
pop
sbb
push
add
pop
leave
sub
add
mov
jae
add
pusha
add
enter
decl
or
add
jnp
add
std
iret
mov
cwtl
mov
add
scas
jno,pn
add
add
cwtl
rolb
ja
test
xor
pop
push
cmp
into
xor
add
clc
pop
jl
and
mov
add
mov
add
pop
mov
sti
out
cltd
pop
sub
fsub
xchg
xor
or
add
add
aam
mov
add
out
fldenv
jmp
add
lods
jge
add
mov
iret
dec
cmpsb
add
add
addb
add
add
sbb
lods
aam
sti
xchg
and
lds
add
push
jmp
xor
pop
fbld
sub
add
clc
xor
repz
mov
and
cwtl
mov
xchg
lcall
aas
pop
scas
mov
mov
add
or
dec
aaa
jg
cmp
add
mov
sub
xor
and
mov
cmp
pop
movsb
add
add
into
sahf
data16
orl
add
add
popf
scas
cwtl
push
jbe
rorl
add
xchg
add
push
in
mov
add
push
add
fldenv
in
es
add
mov
add
out
outsb
testl
pop
sbb
add
loopne
mov
add
add
xchg
cli
dec
push
les
cmp
jecxz
hlt
add
scas
fsubrl
lods
add
mov
aaa
xor
pop
add
jg
lahf
pop
dec
insl
jne
push
add
fwait
sbb
inc
add
in
jo
xchg
add
insb
add
add
add
pusha
add
aas
push
add
mov
test
xor
jne
sbb
in
or
or
add
cld
addb
int3
insb
cld
push
add
mov
jg
cmpl
sbb
mov
add
call
push
add
data16
push
add
xlat
fmul
sbb
outsb
das
mov
sub
sbb
in
jns
add
mov
or
loope
push
add
jbe
mov
mov
add
jle
mov
cmpsb
add
xchg
xor
and
mov
jb
addb
add
add
xchg
xchg
add
ret
add
add
mov
setbe
shrl
sbb
add
mov
add
scas
ret
cmp
and
mov
hlt
add
and
add
add
pop
rolb
push
add
xor
in
imul
lret
rol
add
lcall
inc
add
adc
addr16
sub
fcmovnb
add
out
je
pop
sti
push
sub
insl
inc
add
xchg
add
int3
test
pop
sbb
out
adc
int
cltd
scas
cwtl
rolb
xchg
lret
mov
add
add
xlat
jg
add
add
hlt
add
out
enter
movsl
jp
pop
insl
push
add
add
inc
add
add
add
jno
sub
add
xchg
rolb
sti
xchg
test
add
mov
pop
cltd
out
push
mov
add
rcrl
cmc
pop
loopne
fldcw
add
add
mov
iret
arpl
add
jge
add
imul
xchg
mov
dec
sbbl
loop
pop
pop
cmpsl
outsb
js
and
cmpsb
add
add
fs
mov
int3
shll
jne
testb
lret
leave
jne
das
data16
inc
jae
adc
or
repz
ja
lock
mov
loope
movsb
add
push
imul
icebp
pop
and
call
loop
adc
cmpsb
add
jno
test
add
enter
push
add
jns
jb
repnz
add
gs
popf
or
xchg
add
add
testb
repnz
cmp
add
cmp
add
jbe
pop
push
add
aas
xchg
add
repnz
add
xor
add
mov
add
xor
jge
mov
jge
popf
pop
inc
add
mov
lds
lods
stc
loop
mov
jecxz
add
mov
std
data16
adc
cmpsl
lds
add
add
loope
das
dec
cli
js
lret
cwtl
rolb
add
add
dec
push
add
add
and
add
add
add
es
pop
mov
mov
imul
xlat
dec
mov
pusha
add
inc
out
pop
incb
xchg
add
popa
clc
adc
sbb
ret
mov
cmp
xchg
dec
stos
insb
push
add
test
addr16
pop
lret
jmp
mov
xchg
xor
cmp
add
dec
lods
sbb
add
jbe
sbb
add
add
inc
add
mov
jo
lea
pop
push
aas
pop
lcall
lea
lds
xchg
or
mov
add
sahf
popf
jl
add
sub
in
xchg
add
jmp
jge
cmc
sahf
xchg
add
aas
mov
pop
mov
add
test
fcmovnu
sub
mov
cmp
cwtl
add
mov
fsubrl
rolb
std
xchg
sarl
add
xchg
add
in
or
out
cs
cmp
rorl
pop
mov
rolb
adc
lcall
pusha
add
sub
add
xchg
inc
adc
mov
adc
mov
hlt
add
xor
add
fadds
jae
shll
add
add
test
mov
mov
add
testb
add
add
lock
push
add
add
mov
cmp
cwtl
xchg
cld
adc
fld
add
push
add
add
add
addb
jmp
add
rolb
movsb
add
mov
rolb
dec
cmp
mov
add
cmp
pop
and
adc
mov
pop
stos
scas
mov
add
add
jecxz
sbb
mov
push
inc
add
adc
xchg
add
jmp
fiadds
add
jge
add
je
mov
cmp
dec
sbb
mov
add
sti
pushf
lea
stc
jge
testb
xlat
loop
je
or
lds
pop
orl
mov
outsl
fs
addr16
mov
std
pslld
inc
add
pop
add
mov
add
add
add
mov
xrelease
add
jmp
cmp
sbb
inc
add
add
cmp
xchg
add
mull
mov
sti
adc
dec
adc
cs
cli
adc
ficompl
add
mov
dec
inc
add
lods
icebp
jmp
pop
mov
fldenv
or
scas
add
or
add
out
das
sbb
sub
cmpsb
add
stos
jae
and
inc
add
popf
or
out
mov
pop
cmp
push
or
jno
js
sti
loopne
cmp
and
mov
into
push
add
xchg
adc
add
dec
and
mov
roll
add
in
cmp
jae
cwtl
pop
sbb
push
fwait
cmp
add
imul
xlat
out
cmp
out
add
xchg
adc
out
imul
ds
icebp
fwait
lahf
ljmp
rcl
xor
add
add
ret
or
adc
mov
jmp
mov
stos
cmp
imul
and
fsubrl
inc
add
add
mov
hlt
add
cld
cmc
lret
mov
es
mov
test
jle
add
add
mov
mov
xchg
pop
push
push
lahf
int
adc
in
mov
pop
mov
sbb
mov
cwtl
outsb
mov
sub
popa
sbbl
add
add
pop
mov
add
push
cwtl
dec
push
add
out
test
add
addb
daa
scas
adc
add
or
pop
xor
add
rolb
jge
add
sub
mov
gs
push
add
dec
mov
mov
pop
push
cli
sti
mov
testb
lock
jo
add
repnz
add
add
add
add
inc
mov
jmp
icebp
ja
mov
adc
int3
mov
lea
mov
add
mov
mov
dec
sbb
add
test
dec
sti
insb
frstor
add
add
push
addb
push
add
mov
test
int
add
mov
imul
aaa
cld
xor
pop
or
popa
dec
pop
push
add
xor
add
add
add
mov
adc
xor
cmc
adc
adc
rcrl
mov
mov
add
add
mov
lret
aas
test
mov
ret
pop
stos
in
jb
cmp
add
mov
add
mov
mov
inc
add
jl
mov
add
leave
addb
std
xor
add
cmp
sbb
lods
inc
add
and
add
jb
cmp
xor
stos
add
and
mov
jmp
sub
pop
dec
rolb
jmp
popf
pop
arpl
lock
xchg
movsl
xor
inc
mov
out
xor
inc
add
add
xor
jno
dec
rolb
sbb
ror
xor
aad
in
sti
test
add
inc
add
cs
add
add
sbb
out
sbbl
mov
fidivrs
cmpsb
add
pop
or
push
addr16
add
push
add
add
add
imul
insb
pop
inc
add
sahf
mov
fidivs
mov
pusha
add
std
xor
sbb
add
add
insl
out
cmp
test
add
mov
pushf
adc
add
mov
je
xchg
test
mov
fsubr
leave
cmc
fsubs
add
cwtl
and
sub
jle
sub
pop
xchg
mov
repnz
jo
xchg
fists
add
int
cmp
cmp
xchg
xor
add
pop
inc
add
mov
jae
pop
popf
xchg
scas
cmp
out
imul
pop
pop
int3
xlat
jb
pop
sbb
and
outsb
daa
or
mov
pop
jbe
ds
stc
shl
add
pop
aam
pusha
add
lds
mov
push
xchg
into
fsubl
adc
fcmovbe
add
push
add
setl
add
add
icebp
jl
add
jne
add
and
lods
bound
mov
mov
pop
leave
ss
add
dec
or
or
add
add
pop
lds
insl
xchg
xor
in
cli
test
cmp
movb
lods
pushl
mov
pop
adc
inc
add
add
add
loopne
xor
add
add
xor
jb
fimuls
add
mov
iret
popa
mov
mov
add
add
push
add
mov
sub
repz
enter
sti
add
add
and
fbld
movb
mov
or
pusha
add
test
add
add
test
mov
add
cmpsl
jns
sub
nop
add
sub
add
xchg
jns
mov
mov
fcmovnb
ds
iret
mov
xchg
add
xchg
lcall
sbb
add
mov
stos
xchg
add
add
add
in
xor
add
inc
jnp
add
repnz
cmp
add
stc
lcall
out
into
leave
cmc
testb
mov
loop
hlt
add
add
add
imul
int
or
lods
jo
int
push
out
dec
dec
xchg
add
das
aad
sbb
loope
add
ljmp
add
push
jae
add
mov
add
push
add
pop
cmp
inc
add
add
cmp
add
fst
xchg
add
add
xchg
or
cmp
xchg
add
addr16
add
add
mov
mov
xchg
mov
les
jo
cwtl
add
addb
scas
and
add
repnz
insl
icebp
or
ljmp
add
mov
incl
jge
add
test
and
add
mov
mov
leave
fcmove
push
sbb
cwtl
xchg
add
add
push
sbbl
add
add
adc
push
add
add
mov
add
rolb
rolb
add
data16
or
add
jl
fildll
popf
cs
testb
fistpl
pop
pop
ret
pop
mov
add
fidivs
mov
mov
enter
js
adc
add
mov
lret
add
mov
jmp
push
add
fimull
xchg
add
addb
pop
pop
cmp
push
std
sbb
mov
stos
xchg
adc
inc
add
xchg
add
jo
pop
cltd
jnp
add
add
cmc
sbb
addr16
add
aas
or
lcall
dec
xchg
leave
push
add
aaa
sbb
jmp
and
les
out
ret
push
add
mov
mov
fdivp
add
int
add
add
dec
movsl
jbe
and
mov
inc
add
adc
cmp
rolb
in
popa
sbb
std
inc
addb
mov
or
add
add
mov
in
push
add
add
dec
hlt
add
cmp
nop
add
xor
lret
test
add
add
add
push
outsl
dec
pop
out
push
add
std
inc
dec
sbb
dec
push
dec
aad
or
add
aas
add
in
rolb
mov
add
pop
pop
dec
dec
div
adcl
add
movb
add
add
or
repz
add
in
jp
mov
cld
sub
rolb
add
stc
push
add
lcall
add
lock
mov
pop
popf
dec
les
mov
fs
push
sub
add
pop
pop
or
add
aaa
dec
dec
xchg
add
test
les
mov
es
es
jo
pop
jl
add
mov
sub
outsl
addb
mov
iret
cmpsl
cmpsl
mov
add
push
incb
mov
mov
jecxz
mov
addb
fstl
inc
add
add
mov
mov
add
cmp
push
fisubs
add
adc
mov
movsl
add
add
mov
cmp
add
mov
add
in
ja
add
sub
push
add
mov
inc
add
cld
push
cmpsl
push
pop
stos
std
jnp
xchg
leave
pop
arpl
add
pop
pop
lret
mov
sub
add
pop
stos
push
add
add
std
mov
dec
cltd
sbb
mov
sbbl
mov
aas
jmp
fwait
pop
cmp
add
daa
arpl
add
sbb
test
mov
add
mov
sbb
add
cmp
add
add
js
or
sub
aas
sahf
xchg
add
add
add
mov
add
addr16
fs
pop
and
rolb
sahf
xor
mov
leave
repz
insl
add
add
add
adc
mov
add
add
pushf
mov
insl
and
push
add
std
xor
in
iret
mov
sbb
sub
add
add
inc
add
or
add
xchg
add
dec
imul
sbb
aam
loopne
xor
add
repz
aam
aaa
dec
ds
in
dec
dec
cmpsb
add
inc
fimull
rcll
add
movb
gs
fsub
add
or
hlt
add
xor
inc
add
mov
add
imul
add
js
in
out
pop
ds
clc
fistps
lods
push
add
je
xchg
popf
xor
sub
jp
sub
mov
test
add
das
mov
mov
add
cmp
mov
add
int
add
mov
push
add
in
rolb
xchg
fwait
xor
mov
in
jno
cmp
repz
push
add
imul
fnsave
call
sbb
add
add
stos
test
push
sub
add
sub
add
movsl
xchg
add
add
add
add
add
mov
mov
loopne
pop
dec
xlat
sbb
and
mov
sbb
leave
mov
jp
add
fsts
ret
sub
and
in
insl
test
test
stos
or
mov
dec
sub
add
mov
sub
lods
cmp
xchg
add
add
das
sbb
cwtl
loop
ds
pop
dec
sbb
and
mov
add
jno
push
fsubs
mov
add
fbstp
add
lods
dec
adc
aad
mov
inc
add
cltd
and
mov
add
jl
mov
outsl
inc
add
mov
movl
mov
push
add
jp
mov
push
stc
addr16
add
add
and
inc
add
add
add
enter
adc
jle
fldenv
fisttpl
xlat
mov
add
add
pop
cs
pop
mov
add
cmp
xchg
add
es
outsb
mov
ljmp
add
cwtl
aaa
push
dec
and
pop
dec
pop
sbb
jne
add
ljmp
ljmp
dec
xor
popf
mov
nop
add
add
inc
add
daa
rolb
insb
incb
test
cs
xor
xor
inc
add
inc
lea
pop
mov
rcr
outsl
cmp
fstpl
mov
pusha
add
popa
jbe
scas
aam
dec
nop
add
sbb
addr16
xor
adc
mov
add
and
xchg
data16
mov
mov
add
push
push
add
xor
lret
loope
jg
add
add
stos
push
repnz
rolb
fstl
fildll
cmpsl
add
mov
sbb
aam
pop
imul
loope
aad
pop
cmp
push
add
add
add
jo
out
and
in
xchg
data16
adc
jb
pop
int
fucomip
cmp
fstpt
mov
add
in
test
cmp
sbb
pop
mov
pop
cwtl
mov
xorl
add
inc
mov
shll
lahf
xor
pop
insb
mov
xor
add
insl
add
mov
mov
call
loope
gs
add
jl
or
add
jmp
mov
cmp
cmc
repz
mov
jge
adc
add
jmp
stos
sbb
stc
fsubrl
aaa
mov
rolb
add
mov
or
fldenv
addb
inc
ds
push
add
fcmove
js
add
aaa
push
add
add
mov
add
sbb
add
pop
push
fmull
inc
add
jae
add
cli
sahf
adc
orl
pop
xchg
add
mov
arpl
dec
and
add
hlt
add
mov
sbb
add
add
adc
mov
sbb
test
shll
adc
test
adc
add
mov
mov
dec
popa
jne
test
add
jo
test
pusha
add
cli
jnp
add
add
add
nop
add
mov
cmp
xchg
arpl
jnp
sub
push
testb
add
add
iret
imul
lods
rcll
cmp
pusha
add
add
mov
add
mov
adc
pop
popa
jnp
add
add
addb
mov
add
daa
push
fistps
add
pop
pop
xchg
or
inc
sbb
add
cmpsb
add
or
arpl
test
push
add
add
mov
pop
loope
jns
scas
lahf
sub
add
pop
xchg
pop
out
jecxz
dec
or
add
add
add
add
fcoms
mov
rolb
add
enter
sbb
mov
lods
mov
fwait
jp
or
mov
add
pop
push
add
xor
lret
mov
mov
les
clc
xlat
scas
push
xor
xlat
mov
add
mov
pusha
add
cmp
rolb
mov
mov
add
rolb
jle
cmp
push
add
inc
add
repz
jmp
aaa
sub
jnp
cld
pop
ss
adcl
or
in
int
js
aas
jae
movb
add
add
mov
imul
jne
insl
test
add
jo
mov
xchg
add
add
or
fsubrl
mov
dec
lret
add
hlt
add
push
add
push
iret
sub
sub
add
jge
add
pusha
add
addb
add
add
add
icebp
lods
push
add
aaa
adc
cs
mov
push
data16
sub
and
mov
jmp
jo
loope
js
sahf
mov
out
popa
mov
add
aaa
jno
mov
xor
fcoms
add
add
add
fnsave
pop
mov
pop
outsb
pop
pop
push
pop
dec
out
ljmp
add
cmpsb
add
add
decl
pop
add
pusha
add
add
add
das
mov
add
aas
loop
in
test
cs
push
xchg
scas
jne
mov
mov
cmp
mov
add
std
sub
add
add
pop
test
addb
mov
les
into
mov
mov
out
pop
xor
jne
add
popa
sub
or
scas
sbb
testl
hlt
add
loop
add
jle
popa
dec
rolb
movsl
jmp
add
mov
orl
jo
mov
add
add
add
addr16
add
push
add
rep
mov
stc
sbb
lea
add
xor
or
sbb
pop
jle
add
addb
push
add
push
inc
add
test
out
sub
and
ret
jl
add
pop
jge
fsubs
adcl
push
add
mov
add
les
aaa
ss
imul
and
movsb
add
cs
leave
data16
add
add
sub
mov
add
rolb
add
adc
mov
add
dec
xchg
jb
dec
xchg
add
push
xchg
movb
add
in
xchg
xor
rolb
push
add
les
adc
xchg
xchg
add
fildll
add
jge
add
xchg
add
add
mov
in
mov
add
add
add
cmp
xchg
add
hlt
add
add
add
mov
and
add
sub
mov
enter
inc
ds
xor
rcrl
or
imul
movsb
add
call
jno
sar
add
xlat
mov
into
cmp
dec
lock
pop
movb
or
cmp
add
inc
lret
inc
add
add
add
or
jo
sbb
ds
inc
dec
lock
push
add
ja
fldl
mov
sub
das
imul
fwait
sub
add
adc
ss
add
fdivr
scas
out
push
add
add
and
mov
mov
fiaddl
cmp
add
popa
pop
sahf
jle
or
cmp
add
or
scas
or
add
ss
int
or
mov
push
sbb
add
mov
xor
xchg
add
movb
add
inc
shll
int
push
xchg
or
add
cmp
add
add
loopne
bound
mov
mov
add
int
fiaddl
mov
mov
movl
jp
add
mov
stos
xor
imul
mov
jg
add
add
add
mov
add
push
in
stos
aaa
das
xlat
hlt
add
push
add
mov
call
cmp
add
add
add
gs
or
inc
mov
inc
add
pop
fwait
sar
popa
bound
mov
add
add
add
xchg
push
rolb
mov
or
andl
add
jbe
jae
push
test
mov
sahf
adc
inc
add
add
add
adc
xchg
add
add
add
pop
lret
push
add
push
add
arpl
add
or
mov
imul
fwait
add
mov
xor
cmpsl
sbb
ret
iret
mov
fidivrl
into
and
sub
scas
mov
add
arpl
adc
jmp
js
cs
mov
adc
fidivs
add
lock
mov
add
gs
lock
cmp
cmp
push
loop
dec
jo
mov
push
add
jns
add
add
jb
lea
jo
loope
test
mov
mov
out
cmpsb
add
jns
mov
sarl
add
add
arpl
add
add
add
add
and
add
mov
stos
cmp
mov
push
inc
add
inc
add
inc
add
icebp
dec
push
dec
aam
add
add
mov
push
sbb
popf
shll
out
ss
add
bts
lods
cmp
add
adc
push
mov
add
xchg
cmp
mov
add
lods
mov
repz
adc
or
cmp
add
inc
add
in
add
dec
aaa
adc
jae
enter
mov
orl
mov
adc
popa
dec
cmp
and
testb
sub
lahf
add
bound
mov
add
mov
mov
push
add
mov
add
jns
js
jb
cli
ja
adc
push
add
add
add
mov
icebp
inc
add
add
mov
cmpsl
mov
or
pusha
add
sub
in
rolb
pop
dec
js
pop
dec
les
and
out
mov
loopne
jge
add
arpl
stos
sbb
mov
jge
add
ret
add
add
mov
add
adc
jbe
cmp
add
into
outsb
sbb
add
add
in
daa
cld
bound
mov
mov
add
xor
sub
add
jmp
jp
fwait
mov
xchg
pop
jnp
jmp
add
add
cmp
add
shll
mov
or
push
repz
jmp
inc
add
add
xchg
xchg
aas
jns
jno
add
sub
rolb
mov
xchg
and
add
roll
jmp
adc
push
add
les
cltd
xor
add
dec
sbb
mov
movb
arpl
hlt
add
sub
pop
jmp
inc
and
adc
hlt
add
insb
inc
add
cmp
sub
add
mov
or
xchg
dec
add
add
into
adc
mov
sub
leave
lret
sahf
add
add
jl
or
bound
mov
lea
add
rolb
call
les
scas
out
dec
or
dec
mov
push
add
sbb
mov
icebp
negl
add
push
and
mov
add
pusha
add
jo
xchg
cmpsl
jge
jg
fidivl
push
sti
gs
fwait
out
mov
rolb
out
movsl
movsb
add
add
xchg
fadds
add
mov
push
mov
cld
pushf
add
mov
data16
rep
movsb
add
pushf
cli
add
call
iret
pop
data16
inc
add
adc
les
movl
add
add
aam
icebp
jne
add
and
lock
out
pushf
sbb
popa
inc
jns
inc
aad
add
jl
add
add
push
jmp
cwtl
mov
mov
test
rolb
xchg
add
pop
sbb
popf
fsubr
rorl
addr16
add
add
mov
stos
sbb
add
mov
add
inc
add
add
add
sub
add
fcomi
add
mov
lds
outsb
xchg
add
gs
add
je
test
add
das
repnz
inc
add
mov
adc
mov
pop
ljmp
add
jnp
xchg
add
popf
aam
mov
mov
add
pop
mov
dec
data16
pop
pushf
cmp
outsb
jg
add
pushf
mov
ret
add
insb
inc
add
jl
cs
sti
outsb
aad
inc
add
add
add
lret
lock
jmp
mov
sub
ret
arpl
mov
push
add
cltd
dec
ss
loope
add
mov
add
add
jno
xchg
cwtl
sahf
push
add
repnz
add
add
das
enter
add
add
push
add
cmpsb
add
les
in
lahf
out
and
xchg
add
loopne
rcl
and
mov
add
add
pop
scas
movsl
insb
sub
add
add
aad
addr16
add
push
fwait
clc
fisubl
test
lods
add
gs
mov
imul
add
push
add
add
add
add
adc
aaa
sahf
inc
add
xlat
xchg
xor
fcompl
jmp
add
popa
test
mov
cld
lods
cmp
add
add
add
subl
add
or
add
add
cwtl
inc
loopne
testb
add
add
dec
lods
fstpt
ret
cld
jo
fbld
mov
testb
pop
loopne
in
sbb
inc
mov
add
add
sbb
test
flds
pop
jne,pt
inc
add
mov
add
jle
fistps
mov
add
mov
add
icebp
jo
cmpsb
add
inc
je
cmp
cmp
and
xchg
aas
sub
add
xor
lods
push
add
add
dec
icebp
mov
ja
test
aad
add
repz
sbb
add
add
push
mov
jne
and
sbb
das
movb
addb
mov
fidivs
push
cmp
fdivs
add
cmovbe
xor
xor
dec
lods
loope
push
aas
js
adc
jge
lret
xor
lret
pushf
or
add
add
pop
lds
add
rolb
aaa
jae
insl
mov
add
add
add
testb
add
add
push
add
mov
inc
sub
fwait
lret
pop
mov
in
push
add
imul
jge
pop
sbb
rcrl
jmp
addb
add
or
add
xchg
add
push
repz
inc
mov
inc
add
dec
ror
lea
inc
add
mov
mov
mov
mov
pop
aaa
outsl
popa
mov
dec
cmp
add
add
add
cld
jae
fistpl
add
je
add
push
add
fcompl
add
mov
add
add
add
add
jns
sub
mov
nop
add
outsl
arpl
or
in
sub
inc
xchg
sahf
jno
add
adc
mov
outsl
and
shrl
sbb
pop
inc
in
cli
mov
cmp
out
add
mov
cmp
ljmp
pop
pop
in
fs
addr16
mov
fstl
add
add
add
icebp
inc
add
sub
add
push
add
inc
inc
add
into
push
shll
fisttpl
or
and
add
add
xchg
dec
mov
dec
or
add
insb
xlat
pop
jnp
mov
das
xchg
lret
add
xor
ret
sbb
in
add
jo
sbb
add
shrl
add
add
add
add
neg
add
mov
data16
insb
inc
add
xchg
sub
pop
cmp
mov
sub
add
adc
mov
inc
imul
fbstp
fstl
add
add
xor
sahf
pop
mov
data16
cmpsb
add
loope
test
xor
into
addr16
int3
pushf
ds
out
sub
add
fiadds
pop
push
add
das
mov
scas
xchg
add
shll
mov
lahf
push
cwtl
aad
insl
pusha
add
xchg
add
aas
xor
add
pusha
add
add
stos
mov
incb
push
add
je
sbb
add
add
mov
iret
sbb
xchg
add
add
sub
mov
int
sub
hlt
add
in
outsl
loope
outsl
lahf
movsb
add
push
add
aaa
cwtl
int
arpl
mov
dec
cli
jne
jnp
push
add
add
lahf
call
iret
jae
lods
rolb
daa
call
sub
add
in
push
add
add
adc
inc
add
scas
jae
dec
in
add
aas
fstpl
add
add
push
add
scas
mov
add
inc
add
sbb
add
add
rolb
sub
cli
xchg
cmpsb
add
add
and
mov
add
xchg
xor
add
jae
add
mov
add
add
loop
lcall
inc
pop
mov
clc
cmp
nop
add
jp
in
cmpsl
lea
add
add
xchg
test
xor
add
mov
sub
daa
rolb
out
in
jmp
stos
pop
push
fisubrl
daa
mov
adc
adc
rcr
insb
push
popa
cmc
outsb
jg
data16
or
and
test
data16
ja
outsb
fxch
mov
and
sbb
add
pop
pop
fstpt
dec
test
adc
jo
push
jae
pop
add
bound
mov
pop
xchg
arpl
rcll
enter
add
or
add
add
pop
pop
cmp
jne
stos
jge
orl
dec
fidivl
loopne
testb
pusha
add
add
jns
leave
mov
punpckhwd
xor
adc
shll
push
repnz
inc
shl
add
movsl
fwait
js
add
pop
ljmp
push
loopne
push
add
mov
add
gs
and
lret
call
add
cmp
addl
adc
mov
les
mov
adc
add
xchg
add
add
mov
add
repnz
mov
xor
call
add
add
push
bound
mov
pop
sbb
data16
dec
call
in
nop
add
inc
aam
mov
push
add
add
add
add
add
test
mov
test
mov
xchg
sub
sub
sbb
push
lock
mov
add
out
add
or
mov
daa
xchg
add
add
sbb
jae
lods
shll
loop
xor
fisttpll
loopne
dec
mov
out
pop
lcall
add
xchg
add
out
popa
fsubrs
mov
leave
lods
pop
je
insb
cs
mov
add
cmp
add
adc
xor
push
sbb
add
add
xchg
pop
hlt
add
push
sbb
sbb
add
in
add
add
adc
add
xor
in
cmp
ja
repnz
rolb
sahf
lock
mov
mov
mov
jb,pn
xor
push
add
mov
push
add
adc
ret
int
adc
jbe
cld
nop
add
add
add
mov
imul
fwait
inc
rolb
cltd
push
jae
add
pop
test
in
mov
add
enter
andl
add
sub
fwait
mov
sbb
add
add
inc
add
jl
data16
add
add
movsl
mov
push
popa
jecxz
add
add
jecxz
dec
lahf
or
adc
adc
sub
jmp
add
mov
push
add
movb
add
sub
jae
add
dec
leave
fidivs
jno
fldt
iret
xor
adc
adc
or
inc
test
and
cmp
roll
xor
dec
aaa
fisubl
add
mov
xchg
add
add
enter
inc
dec
xchg
xchg
add
ret
add
xchg
pop
popa
loop
and
mov
add
lods
les
mov
sbb
or
add
shld
pop
add
jmp
icebp
mov
pop
jo
rorl
adc
push
lret
fadd
add
mov
in
movb
add
decl
cli
pop
fisubrs
add
add
xor
test
mov
and
mov
mov
and
aam
sub
lea
xor
mov
and
mov
push
stos
cmpsl
leave
or
stos
jo
les
clc
dec
mov
push
out
xchg
enter
dec
psrlq
test
popa
fcoml
add
add
popa
push
mov
push
push
add
add
outsb
inc
outsb
hlt
add
and
mov
popa
mov
mov
outsb
aas
lods
or
mov
into
fldt
xlat
sub
mov
sub
add
test
loopne
shl
add
cwtl
adc
rorl
mov
xchg
cmpsl
add
push
add
aas
xor
sbbl
add
jle
gs
mov
add
xor
mov
sbb
add
xchg
add
aam
sbb
sahf
pop
jb
push
add
mov
add
mov
outsl
pop
cwtl
test
sub
aaa
aam
sub
fisttpll
hlt
add
add
add
pop
lret
mov
xor
jp
add
inc
pop
shr
negl
pop
pop
add
inc
add
addb
xchg
add
add
xor
jno
cmp
mov
jbe
xor
inc
add
jo
pop
and
mov
fiadds
or
add
push
add
lock
add
add
xchg
add
inc
mov
rolb
inc
add
cmp
push
jl
jbe
ret
sub
scas
sti
aad
add
add
pop
testb
icebp
push
add
in
aad
je
cwtl
lret
into
cmc
pop
les
jecxz
je
cli
jecxz
lods
sbb
add
add
add
scas
sbb
add
sub
jl
mov
add
mov
daa
mov
add
mov
fnstsw
cld
fmulp
sbb
add
inc
add
add
add
and
adc
push
add
fnstcw
push
add
xchg
push
add
add
imul
dec
inc
add
add
pusha
add
dec
dec
int
je
repz
sub
add
imul
xor
iret
cmpsl
jb
sti
das
sub
add
les
mov
push
inc
add
scas
mov
dec
in
addl
rolb
or
inc
add
add
add
aas
out
adc
mov
repz
arpl
mov
cld
imul
cli
std
sub
add
add
add
fmull
add
dec
jb
fistpll
xchg
mov
jp
jbe
clc
daa
loop
mov
js
add
mov
mull
jae
mov
js
addr16
add
daa
or
or
cs
or
xor
xor
or
mov
sub
sbb
data16
xor
movsb
add
add
add
stc
pushf
test
dec
icebp
push
rolb
pop
aaa
addb
add
or
popf
rolb
and
mov
mov
push
jae
add
sbb
and
mov
add
shr
mov
mov
mov
aaa
xchg
add
les
jnp
scas
iret
add
xor
movb
add
add
mov
fadd
sbb
lahf
std
sbb
add
add
cli
lcall
lods
add
add
mov
les
pusha
add
add
push
add
add
sbb
in
and
mov
cmpsl
push
add
rolb
mov
add
add
add
imul
xor
and
mov
mov
fdivrl
cltd
test
pop
loope
push
add
repnz
add
mull
shll
fdivrp
cmc
leave
add
lcall
push
add
movsb
add
add
sbb
pushf
dec
inc
outsb
arpl
add
jp
push
add
std
add
or
cltd
and
and
mov
xor
add
add
xor
jmp
add
adc
xchg
push
add
add
movsl
ja
int
inc
or
push
add
pop
inc
cli
jo
leave
ficompl
cli
insb
fisttpl
add
fisubrs
aas
shll
pop
jp
aad
rolb
add
mov
lock
dec
sbb
fwait
int
and
pop
xor
pop
mov
or
add
rcr
add
add
sbb
add
lahf
pop
test
ljmp
sub
add
pop
lcall
pop
testb
sbb
add
xchg
hlt
add
lock
xchg
mov
inc
add
xor
jle
in
js
and
mov
into
rolb
add
mov
jmp
add
repz
dec
stos
repz
add
mov
dec
insb
push
cltd
or
add
jp
sbb
mov
pop
pushl
add
add
addr16
cltd
jge
add
clc
sbb
add
xor
add
add
pop
cmpsl
adc
and
jo
gs
add
mov
add
mov
add
pushf
lret
loop
sbb
jne
add
xor
mov
test
lock
add
ja
push
shrl
in
xchg
add
les
adc
pop
sub
sub
mov
inc
add
addb
or
and
mov
rolb
cmp
out
mov
test
add
lea
add
add
or
stos
sub
add
mov
add
aad
add
stc
dec
jns
add
les
outsb
repz
aas
faddp
push
add
add
cltd
fistl
jae
add
add
sbb
mov
mov
test
mov
add
mov
ljmp
loopne
rolb
add
in
mov
add
mov
jne
xchg
add
or
enter
das
mov
push
sbb
hlt
add
add
push
add
add
add
add
push
add
jl
daa
rolb
push
js
add
add
xor
pop
stc
pop
bound
mov
add
push
add
push
add
add
sbb
test
gs
cld
xchg
loop
dec
insb
and
add
jmp
add
icebp
popa
mov
add
push
add
lds
scas
outsl
int3
stos
mov
xor
test
add
add
loope
jp
rolb
push
addr16
inc
jg
and
clc
mov
add
mov
mov
aam
jae
add
push
add
or
xchg
add
add
les
mov
add
lahf
jo
mov
call
dec
enter
push
add
sbb
leave
adc
cwtl
dec
pop
sahf
data16
add
fidivs
fwait
xchg
pop
ds
cld
xchg
add
movb
add
add
in
add
inc
push
ret
icebp
icebp
pop
les
pop
int3
dec
cmpsl
mov
adc
add
xchg
add
fwait
xor
movb
stc
leave
adc
lea
push
add
pop
add
add
and
add
stc
iret
cli
adc
sub
add
ret
add
lock
aaa
ja
add
xchg
iret
test
fadd
call
dec
jg
jl
rolb
jns
rolb
pop
adc
dec
dec
xor
add
pop
loopne
notl
add
mov
in
cmp
add
add
ret
push
or
ljmp
aas
push
cmpsl
insb
jg
mov
lds
xlat
outsb
cmpsb
add
in
aas
ds
add
fsubrl
jo
adc
movsb
add
rolb
add
jo
or
jge
pushf
mov
test
push
sbb
add
adc
add
pop
mov
and
mov
test
mov
push
lock
add
xchg
or
xchg
sahf
sub
add
mov
loopne
jbe
xchg
enter
sbb
stos
js
add
or
jae
add
mov
and
add
lds
add
outsl
pop
pop
jmp
add
jg
fwait
push
add
inc
addb
addb
dec
subl
sub
xor
inc
add
in
aam
push
add
insl
add
mov
push
in
adc
add
add
and
mov
cmp
mov
mov
out
xchg
mov
add
dec
pop
lock
aam
ja
cmp
add
nop
add
cmp
and
mov
jp
ret
jmp
sub
push
or
add
mov
pop
outsb
add
js
mov
add
addb
add
add
mov
insl
nop
add
add
iret
xor
jp
int3
push
cwtl
icebp
hlt
add
dec
test
cmp
inc
ret
decl
mov
loope
cwtl
cmp
pusha
add
inc
add
stc
notl
add
jns,pt
aas
adc
pop
arpl
pop
loope
stc
pop
leave
js
mov
fistps
add
add
push
add
cmp
or
pop
xchg
or
xor
iret
mov
mov
loop,pt
lds
data16
add
add
add
add
xor
in
add
fildll
add
xor
pushl
add
jmp
adc
fldl
mov
add
aas
mov
add
and
mov
dec
les
nop
add
scas
adc
xchg
add
add
add
inc
add
or
adc
push
add
daa
loop
xor
loop
or
out
pop
cmpsb
add
add
add
enter
add
add
mov
add
fiadds
mov
idivl
or
add
mov
inc
add
add
pop
ret
jnp
fnsave
add
adc
movb
sub
hlt
add
add
add
mov
shll
add
call
ljmp
addb
mov
add
call
or
or
movsb
add
cld
mov
test
daa
pop
rolb
pop
in
xchg
lret
xor
js
sbb
push
add
dec
test
bound
mov
arpl
leave
sbb
mov
ljmp
ds
add
lock
push
add
push
add
lcall
jbe
pop
or
inc
push
add
inc
add
or
add
mov
test
add
int3
pop
addb
sbb
dec
loop
jbe
pusha
add
jnp
and
dec
imul
add
xor
adc
jecxz
lds
stos
xchg
jo
rolb
and
aaa
lret
or
add
push
add
add
mov
sub
add
bound
mov
sbb
insb
sbb
jmp
in
stos
fiaddl
add
add
pop
daa
pop
movsb
add
cli
cmp
gs
cli
call
dec
mov
sub
mov
add
dec
insb
cmp
bound
mov
add
fildl
mov
addb
pop
sub
xchg
sbb
add
mov
out
add
scas
sbb
loope
sub
add
mov
jp
add
add
add
and
into
fistpll
dec
cli
push
iret
add
xor
hlt
add
add
and
push
add
scas
clc
dec
gs
dec
lods
lock
add
push
add
add
sahf
sti
lds
push
add
xor
les
mov
add
lret
gs
idivl
add
mov
add
add
pop
aas
push
sbb
es
inc
or
ret
in
push
add
xor
push
sti
lods
pop
pop
add
inc
cmp
pop
lret
xchg
mov
push
arpl
rolb
sub
adc
gs
out
add
mov
pop
es
jae
cmc
pop
imul
mov
jmp
scas
sbb
cmp
dec
pop
sbb
dec
push
testb
imul
mov
mov
mov
inc
pop
mov
add
jge
cld
xlat
dec
push
add
mov
add
add
push
add
pop
in
out
out
jns
add
jae
add
in
mov
xchg
add
or
add
add
add
mov
push
add
test
movsb
add
dec
xchg
add
adc
jb
outsb
lret
hlt
add
cmp
inc
add
push
mov
or
imul
das
jg
add
call
pop
dec
sub
rcrl
pop
js
ja
enter
add
xchg
add
mov
ror
push
cmpsl
repz
push
addb
outsl
rolb
loopne
sbb
add
mov
incb
or
mov
add
or
rolb
and
sbb
push
push
add
fcmovnu
lods
add
out
insl
adc
pop
xor
mov
add
mov
add
add
jo
stos
push
add
add
inc
add
add
mov
push
lret
pop
scas
adc
test
push
add
rolb
cmpsl
mov
pop
inc
add
add
mov
mull
mov
cld
cld
mov
add
mov
mov
sbb
add
jge
jnp
fnsave
inc
add
mov
leave
ss
fisubrs
add
add
cs
add
mov
add
popf
int
mov
mov
mov
add
sbb
jae
bound
mov
aam
add
add
add
add
adc
add
xlat
xchg
add
sbb
add
add
add
add
push
add
mov
add
cmp
nop
add
aam
mov
add
add
mov
mov
je
rcll
mov
mov
add
adc
jnp
add
loopne
fs
ljmp
add
cmp
dec
arpl
or
fucom
mov
mov
cmpsl
mov
pop
sahf
fwait
cmc
mov
add
dec
pop
imul
jae
add
add
jbe
out
sub
imul
add
pop
and
adc
nop
add
dec
repnz
cmpsb
add
add
sbb
inc
xor
insb
sub
xchg
add
out
mov
sub
pop
das
and
mov
stc
out
aas
jne
cli
imul
mov
add
addb
and
pop
movsb
add
xor
add
lds
mov
add
nop
add
dec
cs
adc
xchg
inc
add
or
add
int3
lret
cmp
xchg
inc
add
addr16
inc
dec
icebp
fistpl
mov
cmp
sbb
push
inc
and
mov
xor
cmp
call
mov
ret
fildll
pop
adc
xchg
inc
add
adc
add
cmc
jl
add
add
xor
add
fstpt
inc
int
or
xchg
and
mov
int
shll
lds
jp
add
or
add
je
sub
add
stos
pop
pop
aaa
push
jle
cli
cmp
mov
roll
nop
add
add
lods
fistps
pop
cmp
fs
add
testb
je
movsl
arpl
jnp
add
jbe
mov
addr16
mov
sti
jge
add
cmp
add
inc
sub
add
add
lahf
pop
das
arpl
pop
push
movsb
add
add
add
sub
add
inc
les
pusha
add
add
jg
add
out
push
pop
fs
add
insl
pop
xlat
movsl
sbb
jle
fists
fnsave
ss
cwtl
sbb
pop
jg
fbstp
push
add
and
mov
pop
mull
mov
add
add
mov
repz
mov
pushf
in
loope
rolb
push
add
push
loope
inc
add
sahf
loopne
lds
mov
add
and
xor
add
out
or
sahf
mov
aaa
or
mov
add
add
ljmp
fdivs
clts
add
push
mov
popa
fidivrs
icebp
les
loopne
cmpl
nop
add
add
popf
rolb
ret
movsl
push
add
xlat
inc
add
pop
insb
lods
mov
sub
mov
pop
out
add
dec
pop
pop
add
add
mov
mov
mov
jno
sbb
and
xchg
lds
sub
add
mov
add
stc
or
ret
scas
xor
shll
add
push
outsb
scas
imul
and
loope
sbb
sub
add
sbb
jno
jae
ljmp
rolb
in
xchg
add
add
test
mov
lods
ficomps
outsl
mov
inc
movsb
add
es
cltd
jnp,pt
testb
test
dec
lods
arpl
add
pop
push
sub
mov
lods
jle
adc
add
add
add
iret
fmuls
or
sahf
enter
scas
loopne
add
test
rolb
mov
push
fsub
add
add
add
clc
lock
add
rolb
lock
andl
or
cmp
xorl
movb
add
jne
je
stos
jecxz
nop
add
pop
daa
rolb
addb
add
push
add
movb
test
lods
dec
gs
push
add
add
add
ljmp
add
repnz
cmp
sbb
add
mov
ljmp
je
and
mov
add
add
add
mov
cmp
cmp
add
sbb
adc
or
clc
lcall
jno
jno
add
add
testb
lcall
test
or
add
sub
add
mov
add
leave
cwtl
addb
les
mov
out
dec
imul
add
nop
add
jnp
fiaddl
mov
pop
out
mov
jno
add
shll
pop
repz
mov
add
push
sahf
mov
add
cmpsl
enter
loopne
nop
add
scas
adc
mov
cmc
inc
testl
les
pop
cmc
gs
enter
add
push
add
push
add
xchg
mov
add
add
mov
inc
add
popf
loop
out
mov
pusha
add
push
test
imul
mov
mov
add
and
int3
out
cmp
test
mov
add
pushf
xlat
pushf
sub
mov
rolb
flds
add
out
adc
xchg
mov
add
aam
xor
lods
xchg
add
insl
loope
stc
mov
ljmp
add
add
popa
addb
jnp
call
imull
mov
mov
adc
loop
xchg
add
or
rcrl
sti
cli
add
push
add
mov
rolb
pop
push
cwtl
xorl
int
add
inc
and
add
add
push
add
push
add
xor
add
xor
lock
xchg
add
mov
push
jb
dec
sub
add
add
sub
insl
inc
add
adc
leave
adcl
ret
stos
int3
bound
mov
dec
imul
xchg
cmpsb
add
popa
and
mov
add
mov
xchg
mov
aad
cld
cmc
movsl
repz
jo
push
sbb
test
or
and
ljmp
dec
xchg
pop
bound
mov
add
push
mov
add
dec
jae
jp
add
push
mov
js
inc
adc
sbb
mov
mov
push
jns
pop
icebp
in
mov
add
hlt
add
or
add
add
add
xchg
xor
add
pop
xchg
add
mov
sub
cmc
sbb
ficoml
data16
inc
add
sub
stc
andl
add
add
jno
loopne
test
add
mov
add
push
add
jb
mov
sbb
mov
add
ret
cs
ds
ds
add
add
and
pop
hlt
add
add
sarl
lea
xor
add
add
dec
mov
add
repz
or
add
fstpl
mov
imul
mov
lret
nopl
dec
popa
pop
mov
add
pushf
xchg
cmpl
add
sub
xchg
add
add
add
mov
lea
mov
add
sti
push
add
ret
xor
xor
jle
rolb
push
add
arpl
imull
jp
loopne
cmpsl
mov
xor
sahf
cmpsl
shll
add
mov
cmc
inc
add
call
fsts
aad
mov
mov
add
lods
mov
cmp
add
add
xor
fdivs
call
fisubrl
roll
add
jl
out
pop
popf
dec
in
or
ret
rolb
inc
mov
movsb
add
jne
int3
in
jno
mov
add
add
rolb
add
xchg
add
fwait
outsl
mov
inc
add
fldenv
loopne
mov
add
cmp
xor
mov
ljmp
add
add
lods
mov
adc
jg
add
jp
leave
mov
lock
push
add
cmp
add
ret
sub
jae
imul
lock
call
mov
loop
jne
add
add
ds
leave
xchg
add
sbb
stc
testb
mov
or
mov
add
add
popf
insb
or
xor
fst
add
add
aaa
jnp
push
add
inc
cmp
add
push
xchg
add
mov
inc
add
adc
xchg
add
sub
add
mov
or
xor
leave
sarl
mov
adc
in
das
fiaddl
xchg
ja
mov
jge
dec
mov
fsubl
add
mov
mov
fstl
add
add
jmp
lock
dec
inc
mov
inc
loopne
or
mov
adc
leave
mov
xlat
xchg
add
add
daa
pop
xchg
mov
ds
push
add
ficoml
test
xchg
add
add
add
sahf
cltd
out
cld
out
push
add
ret
lea
inc
add
mov
in
rolb
xor
lds
add
int
jecxz
add
push
cmp
pop
addb
fisttps
js
add
rolb
xchg
add
fsub
add
jl
add
add
xchg
add
sbb
sbb
add
adc
and
mov
int3
and
sti
jecxz
and
outsb
std
inc
add
pop
arpl
js
out
dec
mov
dec
and
mov
dec
lret
xor
add
pop
jp
jb
scas
xchg
mov
ja
and
rolb
sahf
xor
stos
or
push
add
add
outsl
xchg
add
push
dec
sbb
add
mov
xchg
add
or
mov
jecxz
add
pop
jo
lahf
sar
fsubr
add
add
inc
add
add
imul
mov
repnz
cmp
add
arpl
loope
cs
jmp
in
xor
fsubp
add
mov
js
fsubl
add
sub
enter
add
inc
aaa
in
jle
bound
mov
adc
bound
mov
xchg
add
pop
es
ljmp
lea
imul
outsb
jle
add
into
cmp
add
mov
fidivs
sbb
add
jle
int3
cmpsl
hlt
add
add
addr16
shl
jle
or
pop
addb
and
add
push
add
pop
je
adc
dec
cs
in
mov
add
add
jns
add
push
add
or
jecxz
add
inc
sub
push
add
mov
add
pop
or
add
mov
and
dec
add
addb
sbb
addb
add
xor
scas
rolb
and
mov
add
xchg
or
add
add
test
add
addb
push
jne
push
add
mov
jbe
jo
shll
hlt
add
popa
out
rolb
inc
xor
xlat
xor
test
add
mov
mov
cmp
fdiv
add
mov
or
movsb
add
addb
push
adc
and
cs
mov
dec
cmp
pop
mov
mov
mov
add
xchg
testl
movsb
add
pusha
add
add
mov
repz
add
sbb
je
insl
jae
rolb
add
sbb
add
mov
into
adcl
and
inc
sub
cmp
push
sub
jnp
sahf
flds
mov
mov
add
fwait
dec
mov
mov
mov
xchg
add
lods
sbb
sbb
in
les
in
int3
cmp
aam
and
mov
fistps
shl
add
bound
mov
sbb
stc
dec
adc
call
add
das
les
xchg
xchg
test
add
pop
xchg
add
xor
ret
add
mov
shll
pushf
in
push
add
sti
mov
inc
sbb
sub
xor
mov
cmc
daa
and
mov
fsubrs
add
aaa
mov
add
sbb
add
push
ret
add
jmp
dec
xor
push
aad
add
notl
popl
add
add
loope
mov
add
cmpsl
xchg
lods
aas
or
add
mov
add
add
cs
and
mov
daa
mov
push
sbb
addb
test
scas
push
and
add
inc
mov
pop
jle
add
mov
lcall
inc
add
mov
lahf
inc
mov
lret
sub
ljmp
popa
ret
add
mov
pop
inc
add
add
cs
add
mov
add
add
add
add
or
add
jge
inc
rol
lret
add
mull
mov
add
and
add
es
cld
xchg
ja
mov
jbe
adc
push
add
xchg
add
add
lea
add
movb
add
mov
int3
xchg
add
xchg
push
mov
add
out
outsl
xor
cmp
loope
push
add
outsl
sub
mov
fbld
mov
and
push
add
inc
addb
add
js
js
add
mov
jecxz
dec
ja
movb
mov
add
add
xchg
inc
push
popa
jnp
jnp
test
push
dec
pop
loop
add
pop
or
repz
dec
repnz
xor
fst
add
mov
sub
add
icebp
jp
and
mov
add
fcom
cli
je
andl
and
mov
pop
and
mov
les
mov
leave
fsubl
inc
add
add
out
or
add
out
fcmovu
xor
insb
scas
and
popa
out
and
sub
dec
pop
es
xchg
add
fs
add
inc
mov
les
stos
mov
add
mov
adc
add
ret
add
add
pop
scas
jge
push
add
xor
ss
jnp
daa
pop
addl
mov
mov
add
in
inc
add
add
xor
lret
sub
mov
das
xor
aam
movsb
add
add
hlt
add
add
add
mov
pop
subl
xchg
add
add
into
daa
int3
imul
add
imul
js
in
push
inc
push
sbb
add
add
in
and
xchg
add
add
std
dec
push
add
pop
mov
inc
add
add
push
add
add
add
aam
adc
and
cld
cltd
mov
push
add
add
pop
imul
inc
add
add
lret
add
add
addb
clc
lock
dec
push
mov
stc
xchg
add
lret
jge
jl
add
cmpsb
add
jp
or
test
mov
xchg
jnp
xor
push
add
add
add
add
scas
mov
xchg
fdivrs
or
fidivrl
sahf
jle
cs
sbb
pop
addb
add
add
mov
aas
and
data16
xchg
scas
mov
jge
in
jae
add
les
dec
add
push
add
jl
mov
or
add
add
arpl
add
testb
adc
pop
popa
clc
subl
mov
lods
addb
mov
add
cmp
outsl
and
add
xlat
stc
pop
and
ss
ljmp
adc
aas
push
out
out
enter
add
push
jp
insb
sub
mov
mov
mov
dec
sar
jmp
dec
lods
adc
out
hlt
add
lret
in
xchg
pop
iret
idivl
add
push
add
add
adc
add
add
movsl
sub
rolb
jle
lahf
test
and
mov
inc
add
mov
dec
sbb
call
pop
xchg
pusha
add
or
out
aad
inc
cs
aam
cmp
add
loopne
stc
outsl
sbb
jns
ret
stc
loop
add
adc
cmp
stos
ljmp
divl
add
pop
mov
jnp
mov
add
add
lock
aad
les
sbb
jge
jp
add
sbb
add
cmp
fwait
cmp
xor
pop
xchg
add
mov
and
mov
adc
ret
add
dec
sti
je
xor
cs
xchg
adc
testb
rolb
or
push
add
xor
stc
scas
outsb
pop
adc
sbb
pushl
je
sti
lret
xchg
invd
xchg
ja
xchg
add
das
mov
fidivrs
mov
insb
adc
and
add
pop
repz
push
adc
out
mov
add
addb
mov
add
addb
sbb
pop
cli
insl
lea
add
enter
add
push
icebp
add
cmp
push
adc
add
je
add
add
fistl
add
inc
add
xor
push
add
in
inc
add
cmp
mov
sub
jne
cmp
insb
xchg
jle
lds
mov
fidivrs
sbb
xchg
jl
arpl
cltd
inc
add
push
add
add
add
imull
mov
add
or
add
paddsb
in
je
out
ljmp
push
add
add
jno
testb
data16
cmp
testb
je
cmp
xchg
and
mov
cs
add
push
movsb
add
add
sub
inc
add
testl
pop
add
pop
sti
cli
in
lods
fwait
sbb
repz
add
add
sbb
or
add
das
dec
inc
add
add
jmp
pushl
mov
cmpl
add
clc
popf
mov
pop
mov
lods
addb
add
push
leave
ret
xchg
add
loop
stc
jnp
fistl
cltd
imull
ljmp
pop
out
dec
jbe
push
out
test
add
lds
in
dec
sbb
cmp
