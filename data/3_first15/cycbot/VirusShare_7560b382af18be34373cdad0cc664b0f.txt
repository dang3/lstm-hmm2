add
in
shll
inc
out
pop
js
rolb
imul
dec
mov
add
xchg
pusha
add
rolb
enter
ja
rolb
mov
sub
and
and
xchg
add
mov
push
add
cmc
mov
dec
in
loop
mov
add
lods
pop
add
push
sbb
add
add
xor
mov
cmp
add
inc
sub
cwtl
lcall
add
sub
aad
test
stos
in
mov
mov
enter
push
mov
add
fwait
aam
cwtl
loope
adc
fwait
cwtl
xchg
mov
out
in
je
dec
mov
mov
lods
mov
hlt
mov
add
pop
stc
mov
addb
jl
ljmp
dec
fldcw
add
addb
jl
sbb
inc
add
dec
gs
pop
push
add
addb
cmp
jb
mov
add
and
pop
push
inc
cmp
jne
outsl
add
ret
jns
out
lret
mov
addr16
mov
cwtl
pop
inc
out
xor
mov
ds
mov
add
mov
add
aas
adc
mov
sti
add
int
jmp
mov
or
pop
clc
aaa
and
mov
mov
adc
mov
dec
mov
mov
imul
mov
inc
add
mov
jno
mov
dec
xchg
add
scas
pop
sbb
xchg
je
add
fwait
fs
sbb
test
repz
movsl
jle
ficomps
fsub
push
add
xor
mov
jo
mov
fadd
add
add
mov
int3
leave
xor
pushl
sub
add
es
dec
jns
insb
int
inc
fsubl
cmp
add
mov
or
decl
decl
inc
xchg
in
xor
xchg
scas
push
cs
add
adc
sbb
mov
ret
xor
mov
sub
iret
sbb
loopne
mov
push
push
add
mov
in
jae
sub
cmp
aam
xchg
mov
xchg
jge
scas
daa
bound
mov
add
arpl
ffree
mov
xchg
pop
in
and
mov
inc
xchg
fidivrl
arpl
inc
ljmp
fwait
jo
mov
fs
push
sbb
sub
add
repnz
push
aad
mov
and
mov
add
mov
add
mov
stos
leave
jg
add
mov
daa
or
ret
jl
add
add
xchg
fsts
inc
icebp
jno
dec
mov
add
cmc
mov
push
adc
cltd
jo
mov
jbe
push
mov
mov
clc
pop
dec
fwait
imul
xchg
mov
rolb
mov
push
into
sub
cmpsb
ret
pop
popf
mov
add
cmp
pop
mov
out
insb
cmc
scas
jge
enter
test
pop
inc
nop
add
add
pop
imul
iret
dec
movsb
pop
cmpsl
xchg
out
sbb
cmpsl
sti
mov
add
cs
and
mov
mov
add
and
dec
outsl
je
outsb
and
imul
jmp
add
mov
add
jecxz
add
push
push
mov
scas
stos
pop
mov
mov
sub
test
add
add
jecxz
add
mov
add
push
or
add
call
nop
add
push
add
fistps
fldlg2
loope
rclb
in
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
movsl
push
jae
mov
loopne
mov
cmp
nop
add
cmp
mov
or
mov
mov
lea
int3
xchg
movsb
dec
cli
test
pushf
adc
fldt
jle
add
mov
mov
add
mov
stos
mov
xchg
fmul
addb
mov
add
jb
mov
dec
xchg
int3
inc
dec
imul
and
rorl
sub
lds
sub
scas
stos
ret
jne
aad
push
dec
lcall
mov
add
stc
rolb
outsl
mov
mov
xchg
aad
xor
sti
aam
push
xor
pusha
add
cltd
stos
jecxz
mov
add
mov
xchg
add
out
lods
dec
add
mov
pop
mov
hlt
popf
in
jbe
pop
out
les
lahf
nop
add
or
ljmp
stos
xor
into
lods
add
mov
jae
enter
add
add
fists
xor
lahf
sbb
pop
xchg
pop
sbb
mov
add
mov
lret
icebp
pop
sbb
dec
les
movl
mov
call
jns
daa
sti
push
inc
loope
mov
jle
dec
inc
inc
jp
fiaddl
test
repnz
add
add
js
xor
mov
daa
hlt
cmp
xlat
in
aas
leave
xchg
adc
lret
mov
add
ljmp
sbb
js
cltd
mov
call
cli
sub
mov
mov
rolb
mov
mov
mov
int
and
mov
aaa
ret
rolb
mov
mov
out
out
xor
mov
aaa
out
mov
push
add
add
repnz
xchg
add
ret
stc
fstpt
adc
push
mov
add
fistpll
mov
cmp
xchg
jbe
jmp
pop
pop
cmpsb
sbb
pop
jno
es
mov
mov
cmp
out
outsb
mov
add
sbb
je
out
push
repnz
ljmp
jno
xchg
rcll
dec
push
mov
mov
xor
mov
cld
addb
pop
out
mov
xlat
push
add
mov
add
mov
ret
arpl
adc
add
xor
mov
stc
rolb
jecxz
mov
sub
jmp
adc
add
loop
mov
add
jge
and
mov
popf
and
mov
gs
cmp
jne
add
arpl
add
imul
add
lds
and
mov
push
jecxz
inc
imul
ret
mov
mov
mov
loop
mov
js
jnp
arpl
mov
cwtl
mov
xor
inc
add
xchg
aas
and
shrl
xchg
js
fs
add
xchg
jle
mov
pusha
add
jb
mov
jp
mov
mov
mov
mov
and
stc
testl
mov
lods
mov
jno
std
gs
insl
test
push
push
add
addr16
iret
mov
inc
lret
add
hlt
fst
add
scas
arpl
lcall
add
mov
push
or
imulb
mov
adc
mov
jecxz
stc
pop
les
sub
add
and
mov
mov
mov
add
addb
stc
adc
xor
mov
inc
add
sub
add
mov
stos
add
mov
mov
dec
int3
mov
push
rcl
add
xchg
push
ljmp
inc
add
mov
out
inc
ss
push
rorl
cmp
stc
or
aad
imul
push
adc
mov
pop
nop
add
add
xchg
outsb
mov
pop
popf
xlat
in
push
cs
add
divl
mov
jle
mov
pop
cmc
rcrl
add
rolb
mov
out
add
jb
mov
negb
fwait
lahf
in
cs
lds
mov
xchg
jo
mov
stc
pop
push
aad
sahf
pop
xchg
xchg
pop
repz
or
les
add
sbb
rolb
mov
add
loopne
mov
data16
add
mov
outsb
dec
ss
mov
sbb
xchg
inc
addb
xchg
mov
mov
inc
add
inc
sbb
xchg
scas
call
pop
lods
jmp
mov
add
sub
and
mov
mov
push
hlt
add
mov
ficoml
push
test
xchg
loop
mov
addr16
rolb
aam
add
jno
inc
cltd
push
adc
fstps
add
cmp
cmp
test
loop
mov
daa
sbb
js
add
inc
aam
std
rolb
or
push
roll
jne
pop
pop
sbb
and
mov
call
push
pop
mov
mov
cs
cs
jp
add
push
les
enter
add
sti
add
mov
add
adc
mov
mov
leave
jne
aam
add
out
add
add
sti
mov
jl
lret
sub
mov
mov
jle
and
add
mov
mov
push
mov
push
cmp
loopne
mov
mov
aas
fdivrs
sbb
pushf
pusha
add
mov
or
arpl
arpl
jbe
push
insl
push
or
addr16
add
sbb
rolb
mov
mov
in
mov
stos
movsb
xchg
bound
mov
imul
aaa
pop
stc
scas
sub
fcoml
das
out
add
xor
mov
xor
mov
push
addb
and
and
jo
mov
sbb
mov
add
psubw
lret
mov
sub
filds
mov
add
mov
sub
addb
lret
cmp
mov
les
insl
inc
or
rolb
mov
push
pop
xor
mov
das
mov
xchg
cs
iret
ss
js
mov
pusha
add
cs
jle
xor
mov
or
pop
pop
adc
mov
or
add
stos
leave
mov
add
add
cmpsl
dec
rolb
sub
aad
add
gs
loopne
mov
movsb
mov
add
test
or
lahf
sub
rolb
xor
mov
mov
test
xchg
add
pop
test
jo
mov
add
mov
ds
add
add
repnz
push
ljmp
push
jp
sub
aas
cmpsl
icebp
xor
mov
ds
fdiv
leave
cmp
add
add
mov
mov
sbb
and
xor
test
or
test
adcl
xchg
add
cmp
loope
addb
mov
jbe
fiaddl
pop
dec
sub
push
jp
mov
add
cmp
les
pushf
or
mov
cltd
jb
mov
fnstenv
add
fisubrs
sti
inc
dec
aas
int
add
mov
mov
jb
mov
inc
jnp
xchg
dec
outsl
fwait
inc
into
pop
sub
sbb
pop
ror
in
add
cmp
jo
mov
fwait
test
test
inc
test
add
add
mov
add
dec
adc
mov
ret
ja
cmpsb
ret
jb
mov
xor
sub
push
int3
xchg
loop
mov
jns
add
and
jae
jecxz
add
aaa
in
outsb
or
add
rcll
push
add
add
mov
push
je
popf
mov
add
jne
stc
icebp
rolb
mov
mov
sub
lds
lods
mov
movsl
pop
test
xchg
push
rcr
adc
cmp
mov
mov
dec
cmc
movb
mov
add
cltd
out
imul
fidivs
mov
std
sbb
mov
jae
sub
mov
xor
mov
insl
jns
add
sbb
add
dec
pop
in
loopne
mov
aad
div
xor
fstpt
fadd
push
sbb
lret
sbb
fisttps
popa
clc
ja
lahf
in
xchg
dec
cmpl
adc
mov
push
xchg
and
imul
cltd
xchg
loope
xor
mov
jp
adc
in
or
and
mov
add
arpl
adc
mov
add
adc
mov
test
add
hlt
jns
or
in
lahf
lea
push
sbb
addb
mov
jmp
leave
jmp
add
in
xor
mov
add
mov
mov
test
aas
push
mov
mov
add
add
mov
or
into
aaa
fdivs
xchg
sbb
das
dec
scas
lret
or
add
enter
add
mov
add
push
cwtl
dec
lock
add
pop
adc
fidivs
je
pop
lods
xor
rolb
mov
xchg
icebp
dec
outsl
testl
pop
jge
mov
inc
jmp
sbb
loope
enter
pop
loope
add
out
je
frstor
and
std
pop
or
pop
adc
daa
and
dec
lea
xchg
pop
push
mov
add
add
add
xchg
dec
std
aam
repnz
inc
add
mov
add
ret
scas
cwtl
xor
mov
add
mov
pushf
lea
mov
ret
pushf
add
mov
push
icebp
mov
mov
push
mov
test
cmpsl
dec
jae
mov
xor
mov
mov
jmp
lods
mov
shll
add
int3
pop
adc
enter
cmp
imul
dec
mov
int
push
loopne
mov
les
sbb
sbb
rolb
mov
scas
add
mov
push
test
push
add
dec
popa
sahf
sub
cmpsb
das
gs
xchg
lcall
mov
add
ficoms
and
mov
and
das
dec
insb
test
insb
sbb
mov
shll
roll
mov
jg
jbe
or
aam
cmp
sbb
rorl
mov
xchg
jp
lods
xchg
jg
xchg
addb
imul
hlt
repnz
data16
dec
int3
and
cmc
mov
mov
mov
mov
xor
int3
mov
lds
pop
add
mov
mov
sub
sub
mov
nop
add
test
add
pop
das
nop
add
loopne
mov
add
add
xor
mov
mov
jge
pop
sbb
lods
mov
mov
and
mov
add
mov
mov
jno
adc
jne
push
int
popa
mov
mov
add
push
add
pop
xchg
add
testw
or
test
lods
lods
enter
or
mov
mov
in
mov
mov
add
mov
or
dec
push
mov
mov
es
add
xchg
call
clc
data16
mov
mov
btr
cmpsl
test
dec
outsl
pop
jb
mov
add
mov
add
fistpll
std
push
add
mov
incl
jecxz
add
jecxz
xor
jge
fcmovbe
pop
or
adc
repnz
mov
add
sub
mov
enter
dec
add
mov
inc
test
add
mov
popa
sub
jp
add
out
cs
fiaddl
enter
xchg
loope
push
loopne
mov
xor
mov
mov
cmpsl
or
pop
cmp
test
sub
xchg
adc
mov
push
outsb
sbb
aad
add
add
ret
aam
sbb
and
mov
sub
and
hlt
pop
jno
clc
xchg
loopne
mov
pop
clc
xchg
test
push
popf
ja
mov
daa
dec
lret
xchg
pusha
add
rolb
mov
or
dec
pop
aam
adc
mov
rolb
mov
add
cs
add
insb
lahf
daa
xor
add
add
jecxz
sbb
insb
mov
mov
pop
adc
lock
push
add
adc
rolb
adc
pushf
lret
add
stc
or
imul
add
and
mov
add
rorl
je
fnop
add
mov
adc
hlt
or
sbb
add
aaa
popf
mov
aaa
xchg
cmp
js
movsb
sub
and
shr
xlat
mov
jg
add
loopne
mov
imul
popa
sbb
and
int
popa
sbb
jno
out
scas
pop
jl
pop
push
lcall
push
mov
arpl
sbb
jb
mov
add
dec
fnstsw
xchg
enter
std
mov
test
mov
xchg
imul
add
mov
into
push
mov
jle
xchg
addb
daa
xor
push
or
addb
push
sub
mov
les
idivb
sbb
mov
clc
or
mov
add
iret
pop
pop
lods
push
lods
out
mov
bound
mov
in
add
add
add
add
inc
adc
add
leave
adcl
add
pop
jo
mov
sbb
add
jne
jno
push
stos
and
mov
jbe
cwtl
sub
iret
sahf
add
add
add
fwait
outsb
dec
mov
add
stc
xchg
jno
sub
add
pusha
add
mov
jp
and
mov
add
pop
mov
jbe
adc
or
xor
and
mov
and
data16
dec
cwtl
int3
adc
mov
in
out
popf
mov
add
xchg
add
xorl
mov
rolb
mov
cmp
push
xlat
cs
add
mov
inc
dec
mov
push
addb
scas
jg
cmp
add
andl
mov
pop
gs
cmpsl
out
sub
mov
stos
loop
mov
jge
or
add
mov
mov
roll
movsl
aam
int3
es
xchg
insb
xor
lret
add
add
add
add
arpl
mov
pop
cmp
in
lods
and
xchg
and
mov
in
daa
fstpt
xchg
mov
movd
sub
mov
scas
xchg
push
sbb
rcl
mov
movsb
add
mov
lret
adc
mov
insl
stos
fs
jno
popa
mov
insl
and
cmp
movsl
mov
cmp
adc
mov
mov
insl
stos
mov
loop
mov
xchg
clc
stos
xchg
je
fbld
fiaddl
arpl
xchg
lret
lds
mov
add
xchg
add
cs
push
popa
mov
mov
mov
ja
adc
movsl
movsb
test
add
or
fldt
cltd
aas
jb
mov
sbb
rolb
mov
inc
xor
mov
ljmp
add
daa
mov
add
addr16
sbb
scas
push
sub
mov
add
fs
bound
mov
or
xchg
push
ja
add
rolb
mov
test
fs
pop
cs
lds
cmp
jbe
adc
mov
in
repnz
stc
mov
or
test
add
mov
push
fnstsw
es
jle
mov
add
mov
fadds
in
add
mov
je
add
or
nopl
ds
jae
out
divb
jl
lret
pop
jno
unpckhps
add
aas
sub
xor
mov
lock
fnsave
add
push
sbb
push
inc
add
flds
push
xchg
push
addb
dec
adc
test
add
dec
outsb
or
mov
pop
cs
inc
add
dec
test
int
jg
mov
xor
add
sbb
inc
mov
aam
inc
add
add
mov
mov
pop
inc
push
dec
mov
adc
sub
and
mov
adc
sbb
jmp
adc
pop
gs
jnp
push
add
sbb
dec
in
adc
mov
add
or
mov
cmpsl
mov
sbb
sub
sbb
rcrl
outsb
inc
xchg
mov
xor
mov
add
mov
push
sbb
int3
hlt
daa
mov
mov
add
les
add
xchg
adc
add
mov
add
rolb
pushf
test
je
dec
movsl
rolb
adc
cld
cmpsl
data16
jbe
pop
jns
cmp
mov
add
sbb
jno
add
mov
mov
xor
cmp
xchg
mov
stc
sarl
push
testl
add
inc
add
or
adc
push
inc
adc
mov
add
push
idivl
add
pop
cld
cld
or
mov
out
add
out
cmc
inc
mov
es
inc
aas
adc
add
mov
adc
mov
aam
jecxz
int3
iret
inc
push
outsb
ret
fiadds
mov
stos
mov
xchg
icebp
inc
add
mov
outsl
mov
aad
les
push
adc
sbb
lahf
dec
sbb
popf
scas
pop
in
rolb
mov
scas
imul
fdivrp
and
mov
add
add
data16
nop
add
out
adc
mov
and
add
icebp
mov
sbb
ret
or
ja
add
pop
ljmp
xchg
stos
mov
mov
cmp
stos
iret
enter
stos
inc
lods
cmp
insb
xchg
jo
mov
mov
repz
xchg
mov
cli
or
unpckhps
and
mov
mov
stos
mov
sub
xchg
cs
data16
bswap
jge
faddl
mov
popf
std
popf
adc
movsl
rolb
idiv
mov
mov
addb
jns
fs
ret
jmp
sub
pop
int
xlat
inc
push
sub
add
movsb
in
mov
mov
mov
in
inc
ret
popf
pop
xor
sbb
pop
imul
mov
ljmp
bound
mov
add
add
sti
mov
cmpsl
add
pop
mov
aad
xchg
inc
iret
pop
in
or
rolb
mov
jl
push
sahf
ljmp
add
mov
or
loopne
mov
push
call
test
out
sbb
nop
add
mov
ljmp
xchg
push
add
mov
push
xchg
es
shld
cltd
inc
add
add
addb
cmp
pop
popf
repnz
sbb
lock
add
mov
mov
das
xchg
lret
cmp
inc
add
add
sbb
add
add
mov
sub
sbb
dec
mov
int
test
add
pop
jl
pop
rolb
mov
jp
aad
adc
add
cmp
mov
mov
addb
mov
mov
add
lret
add
fwait
loop
mov
adc
out
or
jle
jae
lds
int3
fsubr
std
in
addb
xor
mov
xor
les
popf
adc
mov
adc
stos
xchg
jnp
jae
stos
dec
outsl
mov
scas
mov
mov
mov
add
hlt
notb
clc
mov
movsb
pop
imul
xor
outsl
fiadds
add
in
sub
mov
add
inc
inc
sbb
jmp
test
ret
xchg
addb
movsl
or
add
mov
std
bound
mov
jb
mov
repnz
mov
mov
mov
mov
adc
fildll
or
cli
and
sar
mov
mov
mov
add
add
mov
xchg
add
outsb
mov
or
cmc
jg
pushf
lods
pop
sbb
mov
mov
daa
cltd
in
repz
in
daa
divl
aas
sahf
enter
inc
xchg
adc
mov
stc
dec
sub
add
adc
mov
mov
movsl
rolb
mov
addb
daa
xor
mov
out
lods
and
or
mov
mov
int3
mov
push
push
cmp
shll
add
fists
inc
call
push
gs
dec
ret
push
jle
push
movsl
stos
mov
dec
pop
sbb
cs
xor
push
mov
sub
dec
mov
addb
fldcw
add
and
mov
lock
xchg
testb
popa
je
call
dec
xchg
xor
mov
sbb
adc
mov
and
or
pushf
jecxz
call
pop
insl
sbb
outsb
sub
mov
add
fwait
sbb
jl
cmp
jns
sahf
mov
into
enter
cmpsb
loope
out
sbb
or
cmp
out
add
mov
and
add
or
sub
outsl
clc
inc
mov
mov
add
ret
mov
imul
fisubrl
sbb
ficoml
add
mov
jmp
enter
frstor
add
mov
sub
adc
jg
insl
or
mov
in
xor
popf
xor
es
add
mov
jb
mov
pop
jp
outsl
jne
push
adc
les
sub
add
clc
adc
mov
jl
push
add
mov
xor
mov
das
cmp
xchg
ja
pop
and
mov
mov
scas
xor
std
sti
pop
pop
xor
fwait
int
std
xchg
jae
xchg
inc
add
lock
mov
mov
and
add
add
jbe
data16
dec
repz
mov
je
mov
shrl
xchg
addb
xchg
scas
add
mov
add
jl
mov
gs
cmp
mov
inc
shrl
addb
cld
int3
test
add
mov
dec
add
fmuls
je
pusha
add
add
into
add
xor
jp
push
and
stos
fpatan
ret
iret
dec
lcall
jnp
in
sqrtps
add
mov
push
add
add
movb
mov
arpl
test
dec
sub
ss
in
cli
adc
int3
leave
mov
std
pop
mov
push
add
loop
mov
cmpsb
arpl
add
xchg
lods
out
fdivr
bound
mov
faddl
or
ret
and
mov
imul
inc
xchg
ja
dec
cmp
xor
mov
xor
add
cmp
add
mov
sub
push
sbb
mov
lods
loopne
mov
pop
repnz
mov
push
xorl
dec
mov
add
int3
in
sbb
stos
dec
ret
adc
mov
loope
bound
mov
dec
pushl
pop
sub
leave
icebp
int
jbe
loop
mov
mov
sub
dec
scas
inc
or
bound
mov
pop
add
mov
add
stos
push
int3
mov
add
add
mov
ret
xchg
xor
ret
xor
add
add
sti
add
fcmovnb
arpl
mov
push
mov
call
divl
lcall
mov
jg
add
add
mov
sub
inc
add
test
jmp
enter
mov
push
mov
or
mov
into
mov
lock
mov
int3
push
cmp
out
add
add
push
cwtl
inc
jp
addr16
scas
sbb
add
mov
mov
aad
dec
or
cmp
insl
mov
outsl
insl
pop
or
repz
jns
xchg
mov
dec
dec
ret
sub
add
mov
andl
mov
cli
addb
pop
rolb
mov
out
insb
inc
ret
fidivl
mov
insb
paddsb
mov
je
cmc
outsb
repz
add
mov
bound
mov
pop
fisttps
test
data16
sub
fmuls
adc
mov
push
add
adcl
mov
mov
add
shll
pop
and
ret
jl
in
loop
mov
dec
push
adc
pop
fcmove
lret
cli
sub
imul
mov
sti
and
mov
mov
sbb
add
lea
add
lret
adc
mov
xchg
shll
add
pop
cmpsl
sub
xor
pop
jbe
adc
add
lahf
pop
jg
and
mov
inc
int3
test
add
add
lcall
mov
jmp
sbb
fbld
mov
fldenv
pop
mov
repz
stc
jbe
gs
push
pushf
shll
mov
popa
pop
jp
jns
xchg
in
jo
mov
xor
mov
add
cmp
cltd
push
outsl
sub
add
mov
sub
bound
mov
aad
repz
mov
mov
mov
jp
in
jbe
add
sahf
fsubs
add
lahf
daa
xchg
fstpl
and
mov
pop
in
shl
or
sub
inc
mov
hlt
or
add
sbb
mov
push
inc
add
mov
push
adc
add
add
lret
cmp
ss
xchg
daa
mov
lcall
mov
int
and
mov
add
add
ret
sub
push
add
add
mov
add
xchg
mov
outsl
xor
mov
fcoms
mov
lock
enter
push
leave
adc
roll
jo
mov
out
add
xor
daa
cld
ret
addb
xchg
pop
dec
mov
push
lds
faddp
ds
mov
imull
adc
mov
mov
imul
clc
jb
mov
xor
mov
std
xchg
xor
fstpl
js
pop
call
mov
mov
rolb
sahf
sub
and
mov
ljmp
lock
cmp
cmp
fldt
mov
mov
jae
and
xchg
in
adc
bound
mov
mov
mov
jne
or
pop
inc
aam
push
add
mov
mov
push
dec
push
jle
mov
jp
or
sbb
mov
mov
mov
sub
jae
jns
sarl
add
lock
dec
xor
mov
mov
add
add
addr16
loopne
mov
add
pop
add
popa
xlat
rolb
xor
mov
inc
mov
std
rolb
mov
add
add
dec
imul
pop
sub
cltd
cltd
pop
ljmp
mov
lret
cmp
stos
jns
pop
cwtl
rolb
mov
insl
std
lea
add
push
imul
cli
push
ds
stos
or
xchg
pop
jb
mov
mov
addb
shll
jmp
mov
mov
test
lock
or
add
add
mov
mov
jne
fwait
push
add
mov
ror
mov
pop
dec
or
lahf
loop
mov
bound
mov
mov
insl
and
mov
addb
lea
cmpsb
mov
sbb
mov
mull
and
js
jmp
lods
repnz
enter
mov
xchg
pop
lcall
mov
jno
inc
sbb
mov
into
mov
lahf
decb
pop
dec
jmp
insb
ss
adc
cld
rolb
mov
outsb
xlat
and
mov
add
sbb
repnz
aad
das
bound
mov
jmp
inc
add
adc
mov
lods
aas
cmc
notl
or
cmp
test
jmp
jg
icebp
xchg
add
xchg
das
or
jne
fcomps
xchg
adc
mov
pop
cmc
pop
mov
fsubl
cmp
repz
fdivr
sub
adc
mov
add
mov
and
mov
add
mov
mov
and
mov
rorl
cltd
dec
adc
mov
std
xor
pop
and
adc
mov
add
fists
mov
pop
shr
pusha
add
mov
jmp
outsl
mov
scas
in
data16
sub
xchg
add
mov
jle
pop
scas
fstp
dec
lcall
out
test
insl
jecxz
jmp
dec
sub
out
cmp
sub
mov
push
add
hlt
add
jno
add
das
nop
add
nop
add
movsb
add
jbe
and
mov
add
daa
push
lock
mov
hlt
fidivs
pop
out
nop
add
pop
lods
scas
mov
mov
add
sub
mov
add
add
into
fwait
sarl
push
cmpsb
push
mov
pop
sub
inc
add
add
cmpsl
fstps
add
add
movsl
les
nop
add
dec
mov
mov
mov
popa
add
mov
es
ljmp
mov
push
jne
xchg
mov
add
insb
push
es
cmc
cltd
scas
dec
rolb
xchg
scas
addb
out
mov
addb
jb
mov
sbb
xchg
insl
js
add
fiaddl
sbb
add
out
test
add
mov
mov
push
add
jmp
sti
inc
lahf
dec
or
sbb
movsl
mov
pop
cwtl
es
ljmp
add
push
add
or
ljmp
gs
add
xlat
dec
mov
add
mov
fisttps
or
mov
jecxz
xchg
inc
add
int
push
mov
dec
pusha
add
packuswb
pop
jle
fcompl
adc
add
test
add
add
call
hlt
sarl
push
fucomip
pop
lret
pop
insb
lods
fstl
std
mov
xchg
add
inc
lea
test
rcll
add
push
addb
ss
clc
loopne
mov
sub
lods
sbb
and
mov
data16
jg
dec
lock
and
mov
add
mov
jo
mov
xor
mov
cmp
sbb
rolb
mov
mov
add
push
add
lds
mov
insb
out
add
xchg
out
call
pushf
lock
es
mov
mov
adc
lods
or
lret
test
dec
cltd
out
mov
mov
iret
outsb
pop
jge
inc
inc
jae
pop
inc
movsb
vmread
popa
adcl
jo
mov
lods
mov
xor
mov
mov
addr16
sub
inc
xchg
sti
add
movsl
rcrl
aam
xchg
dec
cmpsb
movsl
incl
mov
ljmp
mov
mov
mov
das
cs
shll
leave
or
cmpsb
cmp
aas
and
inc
or
aam
inc
lret
addr16
push
inc
arpl
addb
fmulp
lahf
aas
mov
add
arpl
in
fadds
mov
jne
loope
add
insb
mov
add
fdivrl
mov
add
mov
int
and
sub
aaa
ss
in
sub
adc
mov
aad
cld
mov
dec
pop
dec
lahf
pop
pop
jle
push
dec
jl
fsin
pop
call
push
les
add
xchg
add
mov
std
cmp
popf
cmpsl
mov
ror
fsubl
adc
mov
arpl
adc
add
leave
pusha
add
bound
mov
add
adc
mov
mov
mov
jecxz
popa
test
add
mov
pop
sub
in
pop
test
xor
pop
sbb
pop
dec
add
sbb
ds
xchg
xchg
mov
rolb
adc
adc
mov
xchg
add
icebp
les
add
pop
xchg
ljmp
stc
or
inc
add
ljmp
mov
mov
add
sti
repz
sbb
out
pushf
stc
mov
add
imul
mov
fdivs
mov
test
vpslld
mov
sbb
int3
mov
xchg
mov
inc
sub
inc
nop
add
pop
mov
inc
sub
mov
sub
add
iret
out
add
daa
cmp
add
lods
cli
fstpt
and
enter
cltd
sbb
jnp
fldcw
add
fildll
fimuls
jp
or
add
dec
mov
add
mov
scas
sbb
add
jb
mov
jne
in
xor
mov
clc
jge
sti
adc
mov
mov
add
mov
jp
dec
loope
add
xchg
lods
push
insb
xor
jl
lods
adc
cmc
jmp
mov
mov
xchg
adc
jb
mov
call
inc
sub
jmp
pop
sbb
add
jb
mov
and
mov
add
mov
in
andl
and
or
pushf
jmp
cmp
out
inc
dec
and
adc
mov
jecxz
sub
add
cld
arpl
icebp
repz
and
stos
inc
popa
mov
rolb
mov
add
mov
xchg
xorl
pop
dec
out
add
cmpsb
daa
lret
add
mov
mov
xchg
movsb
inc
adc
outsb
xor
and
sub
clc
xlat
decl
add
mov
popf
jns
add
push
fcoms
mov
add
mov
jbe
cmpsl
lahf
cmpsl
cli
into
leave
cs
add
mov
cmp
mov
pusha
add
cmpsl
repnz
call
dec
and
out
lret
sub
add
adc
cmp
iret
fildl
mov
push
cld
jp
xchg
mov
xchg
movsb
xchg
add
rcll
sbb
pop
pop
or
mov
pop
sub
mov
mov
in
xor
mov
sbb
mov
mov
cmp
pop
mov
mov
lcall
add
or
enter
xor
or
mov
add
repnz
jmp
jp
xlat
adcl
or
add
add
or
outsb
sub
fs
subl
mov
jecxz
aaa
jmp
xchg
xor
fnstsw
aam
add
pop
fwait
ret
int3
js
add
cld
enter
sub
dec
mov
mov
cli
lds
mov
mov
xor
mov
leave
mov
mov
jle
add
add
mov
mov
add
xchg
add
or
outsb
sbb
add
push
mov
adc
add
push
xchg
fiadds
cwtl
cs
pushf
ja
out
jp
cmpsb
decb
xchg
scas
sahf
xor
mov
inc
add
mov
xchg
add
mov
ret
cltd
ret
inc
idivb
nop
add
sub
mov
jge
xor
sbb
testl
aaa
test
pop
js
add
mov
pushf
add
mov
into
lea
mov
int
aad
cmpsl
mov
ljmp
mov
mov
rolb
mov
stos
ficomps
jne
lret
dec
mov
add
addb
test
push
lock
push
adc
push
and
mov
out
mov
add
fcoms
add
add
sbb
fnsave
je
add
mov
es
sub
addr16
int3
or
mov
mov
add
lret
cltd
sub
nop
add
mov
cmp
push
rolb
mov
push
jb
mov
mov
mov
sbb
add
jno
fiaddl
jns
lcall
mov
jns
out
imul
daa
aaa
insb
xor
mov
adc
ja
aam
mov
mov
sahf
in
fisubrl
jmp
leave
sbb
mov
add
ret
jecxz
scas
inc
push
insl
mov
add
sbb
add
xchg
add
lret
and
cmc
pop
mov
mov
scas
lcall
lret
add
and
cmp
mov
add
dec
sub
push
cli
fdiv
add
mov
add
in
sub
jmp
cwtl
imul
lcall
mov
mov
pop
mov
jo
mov
adc
lock
add
add
mov
sti
ja
add
or
add
or
lods
pop
fists
int
add
xchg
mov
mov
push
imul
add
mov
das
mov
mov
mov
push
add
add
scas
insl
pop
rolb
mov
mov
cmp
inc
js
out
xor
cltd
sbb
add
rolb
xchg
stc
sbb
and
mov
mov
lret
sbb
lret
ss
xor
divl
lret
push
loopne
mov
and
pop
out
stos
adc
or
add
shl
mov
mov
add
add
xchg
roll
adc
mov
add
pop
xchg
jmp
sti
jge
cli
or
popa
repnz
int
addl
and
cmpsl
pop
xor
add
add
mov
fldt
pop
ficoms
nop
add
add
fisubs
mov
mov
fcomp
xchg
sub
enter
test
add
add
fmulp
sub
addr16
mov
cmpsl
mov
int3
popf
mov
jecxz
movsl
inc
outsl
ret
test
mov
mov
mov
pop
ret
or
mov
arpl
add
pop
test
xchg
pop
inc
xchg
or
ret
fbstp
fs
pop
inc
add
lds
in
decb
lea
ljmp
mov
xchg
mov
jns
fbstp
data16
push
aaa
inc
inc
popa
push
sub
sbb
mov
bound
mov
add
cmc
enter
xchg
add
or
add
push
ds
dec
mov
cmp
pop
cmp
xchg
add
std
nop
add
push
xor
flds
pop
es
icebp
cltd
push
xchg
add
cmp
dec
dec
mov
add
mov
mov
les
add
adc
add
fimuls
lea
popa
stos
push
rcrl
add
push
jp
testb
add
movsb
aam
jle
add
aad
test
fs
arpl
loopne
mov
frstor
orl
addb
mov
stos
jnp
montmul
cmpsb
ret
mov
daa
fisubrl
imul
xchg
mov
loop
mov
and
add
mov
and
mov
cmp
add
shr
and
mov
into
test
test
mov
and
rolb
mov
sub
fsub
fs
lds
adc
mov
pop
pop
pop
mov
mov
add
insb
cmp
and
mov
stos
add
movsl
and
mov
sbb
test
mov
xor
arpl
add
scas
pop
loope
inc
es
adc
mov
sbb
xchg
mov
adc
pop
outsl
xor
mov
xchg
ds
pop
les
ret
das
mov
mov
push
pop
stos
jae
lods
sarl
enter
pop
push
outsl
ljmp
add
pop
add
mov
adc
sarl
xor
add
in
xchg
add
push
mov
jo
mov
lahf
in
cld
lcall
mov
push
out
add
hlt
push
add
insb
loope
dec
push
divb
int
shr
imul
out
imul
bound
mov
aas
cmp
jp
sub
pop
inc
add
add
push
das
mov
mov
leave
push
add
jns
add
hlt
dec
xchg
mov
jmp
incl
mov
rolb
mov
test
mov
add
mov
push
in
pop
lret
jae
mov
mov
mov
mov
mov
mov
jne
add
call
mov
das
rolb
mov
dec
sub
xor
xchg
add
lcall
sbb
adc
adc
mov
add
mov
add
push
fildl
cld
dec
outsl
aam
cmp
inc
out
addb
mov
das
outsb
mov
imul
jae
xchg
push
cmpsb
pop
ss
ja
inc
mov
cltd
in
push
add
xor
mov
dec
addb
fldl
push
pop
into
add
mov
aad
inc
add
add
mov
mov
add
sahf
cmc
xchg
add
out
xchg
sub
pop
ret
xor
jge
aas
jns
add
pop
sub
add
lds
cmpsl
push
out
inc
xchg
cmp
sbb
mov
aaa
jne
mov
rolb
mov
sub
idivl
add
dec
push
add
mov
add
push
add
add
or
add
lods
xchg
movl
mov
dec
push
mov
dec
js
sbb
int3
out
test
mov
add
mov
and
jne
dec
sub
jnp
add
mov
ja
or
add
mov
dec
fisttps
gs
dec
adc
push
sub
jl
xchg
xor
mov
fsubs
mov
movsl
dec
das
filds
roll
cmp
mov
cmp
xor
mov
lock
mov
loope
and
mov
aas
sub
add
inc
or
insl
mov
inc
jge
xchg
mov
out
add
int
add
adc
dec
int
shll
lahf
hlt
sbb
repnz
and
add
lcall
lcall
and
mov
xor
jmp
fs
xor
mov
add
jge
rolb
mov
cld
addb
outsb
dec
scas
stos
mov
xchg
pop
popf
enter
pop
mov
dec
popa
xor
mov
add
inc
repnz
mov
add
cwtl
mov
lods
out
xchg
out
ss
repnz
in
xchg
jge
iret
iret
push
mov
fisubl
movsb
xor
mov
add
scas
iret
mov
mov
in
loope
fucomp
sub
fnstcw
pop
ds
xchg
xchg
mov
cmp
jno
test
out
push
out
adc
mov
test
cmp
ret
jl
jge
add
into
pushf
aas
addb
lret
adc
mov
jb
mov
mov
lock
mov
add
out
ss
jl
and
add
jns
fwait
cmp
add
mov
dec
sbb
add
lea
add
push
lods
xchg
jl
jns
xor
add
mov
maskmovq
mull
mov
pop
out
outsl
and
jge
in
rolb
mov
popf
mov
add
daa
movsl
fs
mov
xor
mov
aad
inc
mov
add
push
inc
or
adc
jno
or
inc
lods
jecxz
add
add
jns
dec
test
adc
add
nop
add
add
dec
or
in
mov
outsb
mov
or
sub
lret
jb
mov
fiaddl
add
mov
mov
ret
lock
xchg
sub
sub
xor
icebp
sub
add
inc
xlat
xchg
xchg
js
mov
mov
std
loope
fdiv
mov
gs
mov
cs
mov
add
dec
std
jge
mov
mov
rolb
mov
sbb
ja
add
loopne
mov
push
add
sub
cltd
shll
mov
faddl
mov
mov
mov
test
addr16
shr
xchg
add
xor
test
mov
add
loopne
mov
dec
cmpsb
adc
sahf
pusha
add
mov
insb
lods
sbb
xchg
addb
bound
mov
mov
ret
popa
leave
push
mov
add
lods
jne
adcl
add
loopne
mov
mov
jle
xchg
loopne
mov
mov
add
mov
mov
mov
add
mov
mov
or
push
inc
cmp
adc
mov
jbe
mov
xor
aas
insl
lret
negb
mov
mov
mov
mov
pop
fidivs
das
xor
pop
sub
and
mov
mov
mov
mov
cs
fs
adc
mov
xor
mov
push
bound
mov
aas
mov
lods
add
mov
adc
sub
cmp
add
mov
filds
mov
xchg
cld
std
sbb
repnz
mov
add
jo
mov
addb
inc
add
fnstsw
add
rolb
mov
sub
das
cmpsb
or
out
cmpsl
mov
xchg
call
xor
mov
popa
mov
outsl
push
loopne
mov
int3
imul
cmc
xchg
addb
sti
inc
lea
test
pop
add
mov
pop
icebp
sub
pop
in
push
hlt
pop
mov
add
test
dec
pop
mov
add
add
mov
and
add
scas
testl
lahf
and
mov
dec
mov
call
lret
push
cmpsb
sub
mov
mov
jb
mov
add
rolb
mov
add
mov
jo
mov
mov
negl
dec
push
jno
or
jle
lret
add
add
imul
jge
push
mov
inc
pop
dec
adc
mov
add
or
stc
scas
sbb
push
fbstp
lods
adc
lret
mov
pop
cwtl
leave
inc
cmp
icebp
jge
add
xchg
int3
mov
mov
iret
popf
xchg
in
jecxz
mov
incl
mov
or
add
outsb
push
insl
inc
dec
dec
out
cmpsb
aam
jp
cld
jge
dec
lock
rolb
mov
mov
mov
mov
mov
add
mov
mov
inc
jl
shl
mov
stc
cld
sbb
mov
rolb
push
jae
in
jecxz
mov
mov
dec
test
jne
loope
jb
mov
lea
in
push
add
xchg
add
push
xchg
xor
pop
out
loope
loope
addb
in
fadds
add
jae
ret
mov
stos
pop
or
movsb
addb
pop
lret
add
mov
jmp
mov
xlat
jp
stc
dec
pop
lret
sbb
mov
jbe
cld
xchg
sub
add
add
mov
add
xchg
in
inc
add
cmp
lods
lds
rcrl
outsb
gs
std
cmp
jno
mov
mov
add
add
mov
lods
push
add
mov
mov
sub
xchg
adc
movsl
mov
or
ret
sbb
xchg
or
lret
pop
addr16
add
and
jge
or
mov
aam
xor
enter
add
mov
int
add
mov
mov
mov
jb
mov
push
mov
or
imul
stos
shrl
mov
mov
sbb
imul
cli
je
mov
push
dec
lods
adc
out
and
cmp
stos
sbb
imul
lahf
push
test
jmp
xor
sbb
add
add
add
lahf
out
adc
sub
cli
dec
cmp
cmp
cmp
xor
xchg
test
inc
or
sbbl
enter
fnstenv
add
mov
push
push
test
xchg
sahf
mov
mov
jge
add
jmp
fiadds
xor
mov
lea
sbb
fs
mov
insb
les
mov
jno
lds
popa
cmp
mov
rcrl
push
loopne
mov
pop
cmp
fsubl
push
enter
mov
jmp
xchg
imul
rolb
mov
call
xchg
fistpl
add
jae
ds
adc
mov
dec
lcall
aas
insl
cmpsl
xchg
add
add
add
pop
jnp
sbb
dec
sub
jge
inc
cmp
or
lcall
addr16
testb
jbe
add
mov
lcall
fcmovu
inc
aas
inc
add
jmp
and
xlat
jb
mov
add
loopne
mov
add
ljmp
js
in
xor
or
cmp
mov
sub
test
inc
add
mov
xchg
pop
jae
and
inc
movsl
or
jge
lods
lret
pop
test
inc
xor
rol
add
aam
xlat
dec
out
mov
add
xchg
add
mov
jns
add
xchg
and
add
int
jmp
xchg
add
jl
pop
lea
mov
cmp
lret
mov
inc
outsb
addr16
xchg
add
xchg
jp
not
cmc
es
xchg
iret
cmp
enter
inc
add
push
xchg
cmc
xchg
rep
add
mov
add
xchg
add
adc
das
mov
jg
rolb
ror
pop
leave
pop
ja
add
pop
je
into
push
inc
cmp
lahf
insl
add
mov
push
fmull
outsb
mov
jno
fdiv
jne
pop
addb
jno
mov
mov
leave
fstpl
lret
mov
add
add
mov
xchg
roll
mov
push
mov
imul
into
lahf
jno
arpl
add
aad
wrmsr
add
stc
mov
loope
insb
shrl
xchg
rolb
mov
adcl
arpl
add
rolb
mov
mov
add
pop
lods
sub
sbb
mov
mov
pop
push
sub
popf
sub
addb
rolb
sub
popf
sub
add
rorl
in
roll
add
add
nop
add
add
xchg
add
xor
mov
add
cmc
addb
sub
mov
insl
hlt
sbb
add
popl
les
pop
fistl
add
and
int
enter
dec
js
lds
rolb
mov
add
mov
call
cltd
mov
mov
aaa
enter
pop
outsb
shl
mov
mov
nop
add
sub
xor
pop
repnz
xchg
jne
add
mov
jbe
mov
nop
add
and
mov
add
xor
mov
cmp
adc
mov
add
add
lret
sti
das
sub
add
push
inc
arpl
add
gs
add
add
push
add
mov
inc
xor
mov
mov
add
dec
xor
pop
clc
icebp
cmp
in
add
mov
loop
mov
mov
cmp
xchg
les
scas
fs
int3
scas
pop
and
and
dec
fimull
leave
jno
inc
or
aas
dec
outsb
lds
jmp
addl
enter
add
add
xchg
push
add
inc
fimuls
lcall
lods
jns
add
push
add
add
fldenv
mov
fildll
dec
cmpsb
pop
mov
add
add
mov
or
adc
mov
addr16
sub
cwtl
or
enter
popa
lods
sti
mov
mov
xor
push
lret
push
lds
lret
add
xor
mov
imul
mov
xchg
add
pop
in
call
add
aad
cltd
push
push
add
ljmp
mov
xchg
or
cmp
test
sbb
mov
inc
add
lods
adc
data16
cmp
mov
rolb
cld
xchg
in
cs
mov
jbe
mov
repz
mov
add
and
mov
fmul
stc
in
mov
dec
testl
mov
cltd
mov
notb
stos
cmp
sub
xchg
pop
or
into
aaa
pop
xor
sub
arpl
shll
mov
push
bound
mov
cltd
add
mov
ja
inc
xchg
or
fidivl
mov
andl
and
bound
mov
mov
push
jge
pop
sbb
add
cmp
xor
mov
add
movsb
xchg
mov
dec
xchg
add
les
dec
cmp
int
in
push
mov
pop
mov
in
mov
sbb
out
push
addb
mov
dec
loope
stos
and
sbb
pop
leave
mov
mov
mov
inc
stc
cmpl
sub
push
addb
cld
ds
sub
scas
outsb
fnstsw
pop
rolb
mov
inc
mov
add
rolb
cmp
pop
mov
mov
mov
add
sbb
inc
lods
pop
jne
add
xchg
out
and
lods
ja
pop
mov
mov
mov
xchg
and
mov
mov
cwtl
test
cmpsl
call
loop,pn
mov
mov
ficoml
mov
enter
scas
mov
dec
repnz
pop
cmpsl
mov
mov
in
add
mov
add
fisttpll
add
out
fstpt
sub
insl
das
xlat
mov
in
add
push
add
add
adc
dec
pushl
add
cmp
pop
cmp
insb
dec
jno
add
hlt
mov
fiaddl
add
jge
imul
daa
jp
cmp
cmpsb
popf
out
dec
mov
nop
add
jecxz
jbe
cld
mov
mov
sbb
lods
fwait
js
add
mov
out
add
xor
push
jns
and
mov
jnp
add
outsl
sbb
push
xchg
nop
add
out
aaa
pop
imul
jbe
mov
cwtl
out
pop
into
es
push
ss
push
pop
ds
push
sub
xchg
add
xor
mov
fs
imul
jnp
ror
nop
add
pop
scas
test
and
ss
sarl
cmp
outsb
lea
xchg
lock
cmp
mov
pop
pop
cwtl
add
mov
sub
sbb
es
inc
inc
loop
mov
cmp
add
lods
test
add
jp
repnz
lahf
pop
xlat
scas
inc
add
jl
inc
add
lods
or
outsl
mov
test
add
add
in
jmp
dec
cmp
clc
hlt
sbb
call
add
popa
inc
jns
sub
std
dec
jle
out
hlt
push
xor
adc
imul
ficoml
xchg
add
scas
and
mov
fwait
inc
and
pop
push
loop
mov
test
jge
add
dec
xchg
mov
jp
add
stos
adc
loopne
mov
add
add
mov
mov
stc
out
lock
outsl
and
and
xchg
cwtl
fmull
aam
scas
test
xchg
add
xchg
dec
aas
outsl
mov
mov
pop
adc
dec
fisubrl
push
xor
add
bound
mov
out
add
shl
add
ret
push
outsb
out
cmp
push
add
add
xor
add
shrl
mov
inc
aam
and
sub
enter
stc
mov
mov
negb
in
cmp
mov
mov
mov
add
xlat
cs
cmp
mov
mov
mov
add
js
jecxz
add
mov
sub
flds
cwtl
adcl
sub
sbb
pop
jp
push
rolb
mov
adc
xor
mov
in
jg
aam
add
mov
xchg
sbb
divb
mov
rolb
mov
xor
dec
dec
imul
mov
xor
jp
cmp
add
dec
in
pop
stos
add
adc
mov
test
cli
rolb
mov
dec
nop
add
mov
test
imul
sub
inc
loop
mov
lea
jno
jg
loope
add
mov
mov
mov
sbb
fbld
outsl
adc
sub
and
mov
add
mov
dec
sbbl
sub
push
repnz
or
out
jl
nop
add
sahf
mov
mov
add
mov
mov
sahf
jns
push
mov
jmp
test
cmp
add
adc
add
addb
mov
insl
push
add
xorl
mov
stc
pop
std
sbb
mov
xor
add
add
loop
mov
idivl
xor
mov
fstps
push
out
add
adc
mov
add
imul
add
repz
dec
lret
out
out
xor
outsb
sbb
mov
mov
xchg
mov
add
mov
cmp
je
lea
sbb
inc
stos
mov
xor
jle
icebp
cmc
add
mov
aad
dec
pop
xchg
add
stos
das
jg
add
test
stc
cmc
mov
jmp
add
ljmp
add
sahf
popa
pop
nop
add
sbb
mov
mov
fidivs
add
sbb
inc
enter
imul
xchg
out
add
mov
mov
mov
adc
pop
movsl
movsb
cmp
aaa
inc
sub
lock
ja
inc
and
mov
cli
push
add
lss
mov
mov
jbe
lahf
mov
add
sbb
add
stos
dec
dec
ljmp
pop
pop
mov
xlat
int3
je
fs
outsb
jecxz
mov
adc
mov
gs
jne
add
iret
pop
push
add
mov
or
jb
mov
pop
sbb
mov
fcomip
dec
xchg
out
fwait
pop
je
mov
outsb
std
add
lahf
or
dec
stos
mov
add
mov
addb
jne
add
jb
mov
fidivrl
pop
test
pop
sti
mov
dec
andl
pop
sub
filds
mov
fstpl
pop
test
lahf
sbb
add
pop
mov
addl
hlt
mov
inc
and
xor
mov
sub
aas
mov
aad
add
fs
roll
mov
push
scas
mov
ficoml
add
pop
lock
mov
push
add
mov
scas
mov
js
add
mov
aaa
int3
cmp
loopne
mov
enter
add
jecxz
mov
je
mov
out
sub
add
rolb
mov
aad
mov
int3
in
inc
add
push
pop
push
mov
cmp
scas
fstl
mov
add
add
testl
mov
jecxz
xchg
xor
fildl
arpl
adc
mov
mov
gs
rolb
mov
push
add
addb
or
add
pop
js
add
insl
adc
add
mov
mov
loopne
mov
in
popf
test
mov
add
sub
push
mov
lock
sub
add
add
mul
add
mov
sbb
sub
jnp
add
cmpsl
fiadds
add
lods
cltd
sub
add
add
cld
jmp
clc
aas
adc
add
inc
add
movsb
jno
lock
adc
mov
add
mov
jne
add
mov
lret
mov
arpl
jge
cmp
call
xchg
lds
cli
sbb
mov
adc
mov
inc
mov
sub
mov
jl
jle
jmp
dec
pop
roll
cmp
lds
add
cltd
dec
sbb
add
mov
mov
mov
enter
mov
ret
jns
inc
add
dec
shll
adc
add
dec
xchg
sbb
icebp
sbb
into
sbb
add
movsl
sbb
jne
das
or
addb
add
mov
add
add
xchg
cmp
mov
add
mov
shrl
movsb
mov
mov
icebp
rorl
mov
rolb
mov
add
inc
push
mov
pop
into
mov
add
imul
cli
inc
add
in
pop
sub
idivl
add
mov
mov
push
pop
mov
cwtl
inc
mov
mov
pop
adc
mov
dec
add
dec
mov
out
cld
xchg
fdivl
add
lahf
lods
or
mov
jle
jl
addr16
push
push
cmpsb
pop
add
mov
call
mov
setno
ja
into
cld
sub
pop
push
add
lcall
dec
sbb
mov
mov
jns
push
add
mov
xchg
cld
fnstsw
mov
loope
out
stc
jnp
add
cltd
cmp
rolb
mov
mov
fstps
xchg
clc
mov
xlat
push
cli
test
xchg
fmul
hlt
jb
mov
divb
mov
inc
add
add
cmp
mov
sbb
lods
sub
mov
adc
mov
mov
out
lret
mov
adc
and
pop
out
aas
addb
adc
mov
mov
and
add
mov
enter
out
out
jp
addb
adc
jmp
test
or
and
xchg
out
cld
mov
xchg
dec
ljmp
xchg
leave
fcoml
add
and
mov
mov
fmulp
mov
hlt
jl
jle
or
in
push
pop
lds
mov
mov
sub
mov
call
out
sub
adc
dec
sbb
hlt
mov
or
jno
out
add
dec
or
mov
jb
mov
insb
rcr
repz
outsl
repz
mov
insb
cmp
mull
xchg
xor
shl
in
jns
mov
test
sub
lcall
jae
fpatan
jb
mov
fisttpl
movsb
jae
add
push
mov
std
mov
mov
mov
mov
xchg
add
sti
add
mov
and
mov
add
add
add
cs
sub
les
ret
push
sbbl
xchg
aad
add
das
mov
or
adc
mov
dec
pop
mov
inc
sub
xchg
popf
fcomps
ss
inc
imul
cmc
pop
sbb
push
jle
xchg
fs
add
add
mull
or
jl
jmp
addb
adc
mov
or
lret
jmp
mov
mov
inc
stos
fldt
in
test
mov
mov
iret
ja
int3
into
je
xorl
imul
mov
orl
mov
rcrl
repz
add
aas
mov
mov
add
test
cmpsl
in
sbb
rorl
stc
push
add
add
push
out
sbb
jae
xlat
and
mov
push
mov
push
je
arpl
bound
mov
mov
inc
add
stc
mov
sbb
cmp
jbe
test
add
repz
cmp
cld
add
push
repnz
or
mov
ja
test
jge
add
xchg
dec
out
rolb
mov
mov
sahf
inc
rolb
mov
inc
test
add
shll
pushaw
add
rcll
xchg
icebp
or
fdivrl
clc
cmp
xchg
mov
leave
xor
lock
push
and
mov
pop
and
mov
mov
subl
mov
mov
adc
lods
push
call
or
jae
cmpsl
in
int3
mov
ret
adc
or
mov
and
pop
std
setg
imul
add
mov
cmp
mov
sub
add
xchg
pop
mov
xchg
add
cmp
stc
xchg
add
pop
or
push
orl
aas
sub
add
sub
dec
adc
mov
jbe
popf
xchg
xor
stos
inc
dec
and
mov
cmpsl
movl
add
rolb
mov
cmc
mov
ffree
dec
repnz
or
leave
aad
in
mov
in
mov
dec
jmp
add
mov
add
repnz
xchg
add
jge
add
add
addb
mov
xchg
jg
add
jb
mov
arpl
dec
jae
cmpsb
scas
cmpsb
inc
pop
push
mov
repz
xchg
mov
pop
mov
cmc
jmp
jns
int
add
loope
xchg
add
std
inc
add
hlt
jno
fdivrl
xor
mov
mov
lret
out
dec
or
dec
pop
enter
add
mov
cmp
xchg
mov
mov
fmull
inc
jne
iret
rcll
add
sub
movsb
sbb
and
enter
mov
mov
mov
adc
fists
outsb
lea
lcall
lds
stos
mov
lahf
out
inc
add
push
push
test
xchg
add
in
sbbl
aas
inc
cwtl
push
pop
inc
mov
enter
aad
mov
in
into
push
ficoml
add
mov
int
adc
dec
mov
outsl
rcrl
cs
add
inc
add
adc
imul
and
xor
outsl
xchg
mov
das
aas
imul
dec
push
js
mov
ret
pop
rolb
mov
add
pop
in
jb
mov
mov
mov
popa
aas
dec
cmp
movsb
roll
mov
push
inc
lock
cld
and
stos
out
stos
push
inc
test
ds
aad
into
loopne
mov
mov
lods
out
jge
mov
ficompl
add
jecxz
shll
dec
lods
jno
dec
lods
rorl
leave
and
xchg
or
int
repz
stos
sbb
add
out
push
sahf
lret
jl
popf
insb
je
push
mov
mov
sahf
or
xchg
repnz
sbb
fidivl
add
mov
outsl
nop
add
icebp
scas
or
push
ja
push
ja
adc
mov
mov
adc
jecxz
dec
iret
fsubrl
cmp
mov
adc
mov
or
lcall
ret
sub
stc
mov
xor
out
les
popf
jg
mov
and
inc
push
sbbl
addr16
fiaddl
bound
mov
xor
cmp
xor
add
sub
add
data16
pop
push
or
std
xor
mov
lock
or
push
and
mov
push
add
mov
pop
loop
mov
repz
add
in
sbb
sti
lea
cmp
andl
mov
rolb
mov
add
jl
outsl
bound
mov
pusha
add
out
imul
nop
add
fstps
in
mov
ja
cmp
fists
rolb
mov
jnp
or
jg
or
xlat
cltd
cwtl
adc
mov
rolb
mov
jno
out
xchg
add
mov
gs
cltd
data16
enter
loop
mov
cmpsb
cli
test
and
mov
mov
test
adc
pusha
add
adc
dec
cmp
data16
add
cli
mov
icebp
lods
dec
fstpt
popa
sbb
mov
divb
xor
rcl
cmp
js,pn
sti
pmulhuw
inc
dec
push
jmp
inc
add
xchg
ficoml
leave
push
push
shrl
mov
jns
xchg
sbb
pushf
dec
pop
in
cmp
pop
jae
fisubrl
or
jle
xor
sbb
scas
icebp
pop
dec
mov
mov
add
shr
push
add
xchg
sbb
outsb
mov
mov
sbb
mov
inc
lret
jle
or
mov
incl
mov
mov
fs
jge
push
xor
mov
scas
add
ret
pop
outsl
stos
jae
icebp
ja,pt
mov
fisubrs
mov
sub
pop
cmp
xor
mov
rolb
inc
add
push
add
mov
dec
test
push
mov
jmp
mov
loopne
mov
ret
mov
dec
mov
mov
jmp
cmp
daa
cld
fwait
ss
ds
ret
mov
add
aam
sbb
roll
lds
pop
enter
out
sahf
jmp
push
sbb
insl
or
pop
fists
jecxz
add
outsl
mov
xchg
cs
mov
mov
loop
mov
out
jb
mov
das
das
repnz
inc
push
add
repnz
repz
or
pop
insb
test
es
cld
addr16
lea
scas
sti
divl
mov
mov
jne
sbb
dec
or
jmp
and
mov
sbb
scas
aad
rolb
mov
push
add
mov
inc
add
stos
inc
cli
insb
xchg
fisttps
xor
add
jno
outsl
cli
sarl
dec
or
mov
inc
pop
add
cmc
mov
add
mov
jl
or
mov
add
lock
add
inc
add
add
cs
jb
mov
add
in
arpl
dec
rolb
pop
fstpl
add
adc
mov
add
xor
mov
add
pop
mov
mov
js
push
in
sub
mov
jo
mov
mov
jb
mov
cmp
cmp
add
or
lods
or
lock
jns
add
add
addl
and
add
addr16
mov
mov
pop
cmp
mov
iret
jae
pop
hlt
hlt
mov
fwait
xchg
mov
add
mov
add
out
jb
mov
sbb
shrl
movsl
mov
jb
mov
insl
sti
cmpsb
mov
push
lods
ds
scas
test
push
add
add
mov
aaa
ljmp
shll
mov
in
test
lret
das
icebp
mov
scas
mov
add
sbb
or
pop
scas
jne
fisttpl
imul
pop
pop
aaa
mov
mov
or
loop
mov
gs
outsl
dec
push
fbld
add
mov
jns
ds
inc
aas
add
mov
jne
add
mov
sbb
mov
pop
or
out
adc
mov
xor
xchg
mov
hlt
arpl
test
mov
insl
or
add
roll
mov
or
mov
lock
mov
xchg
scas
adc
add
loope
ja
add
cmp
pop
or
mov
inc
ja
xchg
lcall
jns
add
ljmp
lcall
fbstp
add
add
iret
imul
add
in
stos
sbb
sbb
mov
xor
cmp
icebp
cmp
mov
add
hlt
sbb
add
jecxz
cs
jp
inc
in
in
mov
mov
imul
mov
gs
stos
ljmp
pop
cmp
add
test
adc
mov
daa
daa
lahf
and
leave
sub
cvtpi2ps
aaa
fcomip
pop
mov
in
add
mov
add
cmp
mov
mov
dec
jne
and
fidivrl
stos
outsl
push
mov
sarl
lods
int3
rolb
insl
lods
add
mov
pop
cmp
add
or
mov
call
xchg
sahf
pushf
jmp
push
jnp
add
add
jns
in
jp
cmp
mov
aad
jbe
popf
mov
or
xchg
insb
movsl
mov
mov
shl
cmp
inc
pop
outsl
inc
and
test
gs
mov
push
sub
inc
faddl
mov
dec
orl
push
lds
add
add
aaa
ljmp
mov
xchg
addb
jecxz
push
pusha
add
add
mov
test
ja
and
mov
ret
je
push
push
adc
add
mov
sbb
lds
add
cmp
add
popaw
faddl
ja
jne
add
jne
jmp
xchg
mov
jle
xchg
xchg
cltd
enter
outsb
in
neg
pop
and
stos
aas
sub
add
mov
lret
add
mov
sub
add
clc
inc
cmp
movsb
push
add
lret
sbb
lea
mov
jl
add
mov
cmpsb
cmp
push
ljmp
pop
cmc
mov
add
arpl
repnz
mov
sub
adc
xchg
cwtl
cmp
sub
push
ja
movsl
inc
add
dec
out
addb
cmpsb
push
add
mov
cwtl
inc
ret
dec
test
int
aad
data16
mov
popf
mov
add
xor
push
push
rolb
mov
add
dec
testl
mov
addr16
mov
faddl
test
lea
add
add
mov
adc
fsubrp
fidivrl
mov
and
mov
out
add
jmp
aaa
pop
dec
add
mov
push
add
mov
add
jl
in
jno
xor
cmp
clc
clc
dec
mov
jge
xor
inc
add
iret
lret
and
mov
cmp
mov
scas
lret
pop
xchg
in
in
roll
mov
out
loopne
mov
push
sahf
push
pop
loop
mov
mov
xchg
mov
add
shrl
clc
std
and
add
jb
mov
adc
mov
add
mov
and
lock
mov
mov
daa
insl
sbb
aas
pushf
outsl
mov
xchg
add
xor
or
lea
out
test
loop
mov
mov
add
addb
xor
inc
mov
lock
push
aam
add
leave
into
jbe
iret
sub
mov
and
or
testl
in
pop
mov
pop
jbe
dec
stos
xlat
inc
out
push
aad
add
imul
dec
lods
imul
add
mov
jb
mov
bound
mov
pop
adc
xchg
std
xchg
push
faddl
mov
mov
cmpsl
push
ljmp
lock
add
pop
ds
cs
mov
mov
xchg
push
push
test
mov
mov
add
mov
mov
imul
loopne
mov
add
add
loope
int
mov
fstpt
add
cmp
add
insl
jge
ss
mov
mov
mov
adc
popf
and
and
mov
mov
dec
cmp
popa
cmpsl
lds
pop
ss
mov
mov
faddl
add
aas
leave
mov
mov
jo
mov
in
js
inc
add
add
xor
mov
jbe
pop
or
mov
stos
repz
xor
rcll
mov
adc
mov
mov
push
stc
out
insl
loop
mov
insb
push
pop
and
loopne
mov
jo
mov
mov
jecxz
sub
ss
mov
push
je
mov
clc
repnz
jae
lahf
call
mov
add
clc
repnz
jae
add
enter
xchg
clc
repnz
jae
add
jmp
cmp
clc
repnz
jae
add
add
loope
repnz
fwait
cld
nop
jmp
add
shr
add
push
clc
repnz
jae
add
add
sub
push
mov
xchg
ret
add
in
cmpsl
add
add
mov
xchg
ret
add
cmpsl
dec
outsb
push
push
mov
xchg
ret
add
add
push
clc
repnz
jae
add
add
add
push
mov
xchg
ret
pop
add
in
js
mov
adc
cld
nop
jmp
jmp
outsl
adc
xor
add
clc
repnz
jae
add
dec
cld
clc
repnz
jae
pop
out
pushf
add
pop
push
clc
repnz
jae
add
pop
aaa
add
les
mov
xchg
ret
add
add
outsb
dec
call
clc
repnz
jae
fildl
add
sub
jmp
jae
add
add
add
clc
repnz
jae
sti
cmpsl
movb
fisubrs
push
mov
xchg
ret
add
and
repz
movswl
clc
repnz
jae
add
add
movsl
cmp
inc
mov
push
inc
add
inc
cli
push
clc
repnz
jae
add
inc
inc
xor
add
pop
add
clc
repnz
jae
add
mov
mov
clc
repnz
jae
sahf
add
rolb
mov
add
popa
add
mov
xchg
ret
add
add
xchg
shl
clc
repnz
jae
lcall
add
clc
repnz
jae
add
add
lock
repnz
jae
add
add
add
sub
inc
lock
repnz
jae
add
add
aaa
mov
mov
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
pop
pop
scas
test
aad
movswl
fwait
cld
nop
jmp
add
jmp
xor
clc
repnz
jae
add
jge
fwait
cld
nop
jmp
mov
add
lret
inc
stos
mov
clc
repnz
jae
inc
add
scas
xchg
adc
clc
repnz
jae
add
arpl
pop
insb
push
push
mov
xchg
ret
sarl
add
addb
mov
jmp
add
lahf
lret
cmp
mov
in
fwait
xor
clc
repnz
jae
add
add
sbb
add
add
fwait
cld
nop
jmp
dec
rolb
sub
cmpsl
dec
mov
fwait
cld
nop
jmp
add
add
mov
xchg
ret
fs
add
add
repnz
jae
fs
popf
add
mov
fwait
cld
nop
jmp
lcall
inc
or
nop
jae
add
jbe
shr
clc
repnz
jae
repnz
dec
add
in
dec
push
clc
repnz
jae
add
add
fmuls
nop
jae
add
add
add
rolb
clc
repnz
jae
add
test
mov
fwait
cld
nop
jmp
enter
pushf
movsb
jne
mov
cld
nop
jmp
cmp
mov
add
enter
repnz
jae
jmp
cmpsl
dec
cmp
mov
fwait
cld
nop
jmp
add
arpl
cmp
clc
clc
repnz
jae
add
inc
add
add
repnz
jae
add
jmp
idivl
mov
clc
repnz
jae
popf
fs
add
and
repnz
jae
add
fs
add
lea
clc
repnz
jae
and
fistpl
add
clc
repnz
jae
mov
je
js
mov
xchg
ret
add
add
imul
cmp
repnz
jae
lock
add
mov
clc
repnz
jae
shr
cmpsl
shll
mov
icebp
clc
repnz
jae
in
add
outsb
je
int
add
add
clc
repnz
jae
pop
mov
andl
jne
push
mov
xchg
ret
sti
lock
sub
clc
repnz
jae
add
add
add
mov
test
add
repnz
jae
add
sub
jns
add
movb
cmp
ret
add
add
enter
clc
repnz
jae
dec
and
pop
pushf
add
clc
repnz
jae
add
add
sahf
xor
xor
lret
nop
jmp
add
cmpsl
dec
add
js
inc
and
clc
repnz
jae
add
fildl
inc
test
push
clc
repnz
jae
add
add
add
xlat
mov
rclb
ljmp
add
repnz
add
pusha
push
mov
xchg
ret
outsb
cmpsl
mov
scas
add
inc
push
mov
xchg
ret
add
inc
shll
fwait
cld
nop
jmp
add
add
cld
nop
jmp
add
inc
add
pop
scas
cwtl
xor
clc
repnz
jae
add
add
sahf
add
or
roll
xchg
ret
add
fildl
jmp
mov
lods
div
fwait
cld
nop
jmp
add
add
fildl
add
jecxz
jp
add
add
and
incl
add
mov
fwait
cld
nop
jmp
lahf
add
pop
out
sarb
or
repnz
jae
inc
cmpsl
movb
test
mov
xchg
ret
and
je
jmp
lcall
add
add
test
outsb
pop
pop
mov
push
mov
xchg
ret
add
jmp
nop
jmp
add
outsb
lods
repnz
movzwl
clc
repnz
jae
insl
inc
add
lcall
cmpsl
in
inc
add
add
add
js
clc
repnz
jae
add
jmp
sbb
add
repnz
jae
add
mov
add
add
repnz
jae
scas
sub
push
add
popa
add
add
repnz
jae
xorb
repnz
jae
outsb
add
inc
mov
popa
add
mov
xchg
ret
add
inc
add
repnz
repnz
jae
add
inc
outsb
add
sbb
add
cltd
mov
fwait
cld
nop
jmp
sti
out
add
dec
sub
add
lret
clc
repnz
jae
lock
popf
rorl
gs
sbb
cmp
add
add
add
mov
clc
repnz
jae
pop
bnd
loop
push
mov
xchg
ret
pop
mov
cmp
fwait
cld
nop
jmp
repnz
fs
add
add
push
mov
xchg
ret
add
add
clc
repnz
jae
add
addb
mov
cld
nop
jmp
add
or
jns
add
lahf
add
test
add
sub
jmp
dec
push
stc
movzwl
clc
repnz
jae
test
add
jmp
add
inc
add
mov
addb
push
push
mov
xchg
ret
outsb
add
lea
fwait
cld
nop
jmp
add
xchg
add
sub
adc
add
call
dec
push
clc
repnz
jae
add
cmpsl
jmp
add
xor
clc
repnz
jae
add
repz
repnz
jae
add
add
add
sbb
mov
add
jne
insb
push
cld
inc
pop
add
jl
dec
add
mov
xchg
ret
shrb
sti
mov
nop
jmp
fucomi
lret
add
push
clc
repnz
jae
add
scas
add
test
and
add
repnz
jae
add
fwait
cld
nop
jmp
sbb
mov
add
and
repnz
jae
add
scas
add
push
mov
xchg
ret
lods
add
cmpsl
arpl
inc
lahf
ret
and
enter
add
dec
jmp
add
mov
clc
repnz
jae
add
repnz
jae
sahf
repnz
add
clc
repnz
jae
lahf
add
je
in
inc
mov
mov
rolb
mov
add
add
add
mov
cld
nop
jmp
add
test
xorb
add
and
jne
clc
repnz
jae
movb
fstps
repnz
jae
mov
out
dec
add
mov
clc
repnz
jae
add
add
push
mov
and
cmc
lret
out
lret
pop
add
add
add
push
xchg
add
dec
cmp
repnz
jae
outsl
add
dec
add
call
clc
repnz
jae
outsl
fldt
add
adc
add
add
pop
push
mov
xchg
ret
lahf
popf
pop
add
add
in
push
mov
loope
movsb
jae
jne
inc
xchg
add
add
adc
mov
repnz
jae
add
add
cmp
fwait
cld
nop
jmp
add
add
mov
xchg
ret
pop
add
and
cmpsl
jno
push
push
mov
xchg
ret
add
add
add
jmp
and
repnz
jae
je
add
add
push
out
pop
fwait
cld
nop
jmp
sti
add
add
add
clc
repnz
jae
jmp
fs
imul
xorl
add
add
add
add
clc
repnz
jae
bnd
add
pop
and
xchg
push
dec
add
clc
repnz
jae
and
mov
lods
pop
mov
clc
repnz
jae
lret
add
pop
lods
shrl
insb
inc
jb
fwait
cld
nop
jmp
test
jmp
cmp
inc
clc
repnz
jae
mov
dec
add
scas
add
lea
fwait
cld
nop
jmp
pop
cmpsl
and
adc
add
add
add
arpl
rorl
xchg
clc
repnz
jae
jmp
pushf
sti
add
add
call
clc
repnz
jae
add
pop
jmp
clc
repnz
jae
sub
add
call
fwait
cld
nop
jmp
add
add
add
add
add
mov
push
mov
xchg
ret
add
lcall
push
add
clc
repnz
jae
add
fwait
cld
nop
jmp
add
add
call
add
push
xchg
xchg
xor
mov
add
nop
jmp
add
and
inc
add
add
pop
fwait
cld
nop
jmp
add
cmp
dec
dec
add
push
lea
clc
repnz
jae
and
add
dec
mov
jmp
and
add
add
dec
add
popa
add
repnz
jae
add
enter
loop
mov
push
push
clc
repnz
jae
pop
lock
sbb
cld
nop
jmp
sti
add
add
test
lock
decl
push
mov
xchg
ret
in
pop
add
xor
clc
repnz
jae
outsl
dec
repnz
add
jmp
add
rolb
push
imul
adcl
incl
add
outsb
add
push
nop
jae
sub
xor
mov
cmpl
nop
jmp
mov
in
out
cltd
mov
clc
repnz
jae
pop
cmpsl
fs
sub
clc
repnz
jae
add
dec
pop
mov
add
mov
xchg
ret
add
add
add
pusha
clc
repnz
jae
add
test
add
push
and
nop
jmp
and
add
enter
mov
pusha
clc
repnz
jae
add
add
inc
sub
repnz
jae
add
mov
add
clc
repnz
jae
sbb
add
add
cmp
repnz
jae
lock
add
lret
clc
repnz
jae
add
add
add
call
in
add
sbb
add
add
jno
add
mov
push
mov
xchg
ret
add
dec
add
mov
scas
rep
push
mov
xchg
ret
add
or
nop
jae
add
dec
arpl
mov
xchg
ret
sub
add
mov
cmpsl
jbe
test
icebp
clc
repnz
jae
test
lock
shll
insb
push
push
mov
xchg
ret
add
xlat
lret
mov
xchg
ret
add
test
dec
push
mov
xchg
ret
pushf
add
insl
cmpsl
add
or
nop
jae
add
shl
jmp
dec
adc
repnz
jae
out
enter
pop
ja
and
add
add
clc
repnz
jae
add
mov
jno
add
nop
clc
repnz
jae
aaa
add
mov
push
push
mov
xchg
ret
dec
sahf
add
mov
pop
test
fwait
cld
nop
jmp
dec
add
add
repnz
inc
clc
repnz
jae
lahf
sahf
outsb
scas
ror
add
add
repnz
jae
add
and
add
movsl
xor
mov
push
fwait
cld
nop
jmp
add
add
add
add
add
mov
mov
rcrb
sldt
add
mov
or
mov
push
clc
repnz
jae
movb
add
aam
push
clc
repnz
jae
add
add
cmc
fldl
xchg
ret
add
add
add
repnz
jae
add
add
clc
mov
push
mov
xchg
ret
andb
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
inc
add
push
mov
xchg
ret
add
aaa
fildl
inc
add
mov
xchg
ret
add
call
pop
fwait
cld
nop
jmp
mov
pop
cmp
sbb
in
mov
add
add
add
add
sub
add
repnz
jae
add
fistpl
push
adc
mov
cmp
fwait
cld
nop
jmp
add
lahf
pop
add
outsb
in
pop
clc
repnz
jae
fs
add
add
dec
js
leave
fwait
cld
nop
jmp
add
in
sub
clc
repnz
jae
repnz
add
idivl
jae
sub
add
fs
jne
clc
repnz
jae
add
add
cld
nop
jmp
add
scas
popl
clc
repnz
jae
add
add
cmp
add
clc
repnz
jae
add
outsl
loopne
mov
xchg
ret
add
add
inc
add
nop
jae
and
roll
mov
lcall
test
push
mov
xchg
ret
xor
add
mov
xchg
fwait
cld
nop
jmp
lahf
add
add
stos
add
clc
repnz
jae
add
add
ror
test
or
clc
repnz
jae
lods
pop
loope
add
add
mov
xchg
ret
add
add
sub
repz
repnz
jae
add
pop
movb
jmp
jae
not
adc
mov
add
not
clc
repnz
jae
jmp
add
push
push
mov
xchg
ret
scas
sub
add
arpl
cld
nop
jmp
add
add
dec
andps
repnz
jae
add
add
sti
add
add
push
add
clc
repnz
jae
add
push
scas
mov
clc
repnz
jae
add
pop
scas
out
fadd
rcrb
nop
jae
dec
dec
call
add
nop
jmp
add
add
in
fildl
dec
call
clc
repnz
jae
add
and
stos
clc
repnz
jae
test
add
sbb
mov
add
mov
repnz
jae
add
and
pushf
mov
dec
push
mov
add
faddl
add
add
jge
add
jae
add
pushf
lock
mov
inc
sub
int
add
inc
mov
add
inc
jp
add
fwait
cld
nop
jmp
add
je
out
sub
je
clc
repnz
jae
roll
lods
int
sti
clc
repnz
jae
lcall
xchg
lret
mov
clc
repnz
jae
cmpsl
popf
sbb
add
inc
dec
dec
fwait
cld
nop
jmp
pop
add
add
inc
cmp
dec
inc
mov
rclb
aam
add
add
jge
sti
fwait
cld
nop
jmp
arpl
lods
add
add
notl
mov
pop
clc
repnz
jae
scas
mov
add
add
xchg
lock
add
and
push
xchg
test
add
clc
repnz
jae
add
fs
cmpsl
add
rcrb
repnz
jae
add
add
scas
pop
pop
mov
fwait
cld
nop
jmp
dec
add
sar
repnz
jae
fcmovnb
add
outsl
lret
pop
adc
sub
push
mov
xchg
ret
add
test
sarl
repnz
jae
pop
outsl
lcall
repz
cld
nop
jmp
add
add
pop
lret
pop
inc
addr16
fcomps
out
incl
add
cmp
add
rclb
clc
repnz
jae
jmp
add
cmpl
fwait
cld
nop
jmp
add
inc
fimuls
jae
add
add
add
xchg
js
jle
add
or
add
add
add
add
add
popa
clc
repnz
jae
add
add
jae
add
clc
repnz
jae
add
add
sbb
pop
adc
test
inc
add
add
dec
dec
fwait
lea
fwait
cld
nop
jmp
call
add
roll
lret
mov
xchg
ret
subb
mov
add
push
mov
xchg
ret
pop
cmpsl
lcall
push
clc
repnz
jae
add
cmp
fwait
cld
nop
jmp
add
je
clc
repnz
jae
add
and
add
push
mov
xchg
ret
popf
lahf
enter
push
cmp
nop
jae
add
sub
dec
cmp
fwait
cld
nop
jmp
add
add
add
cmpsl
mov
mov
nop
jae
add
sbbb
xor
repnz
jae
add
outsl
ret
fwait
cld
nop
jmp
dec
add
repnz
adc
mov
mov
clc
repnz
jae
add
add
mov
adc
mov
call
clc
repnz
jae
add
add
mov
add
mov
jnp
sbb
add
ljmp
clc
call
jae
add
and
push
fmull
mov
cmp
ret
sahf
add
rcrb
movsb
clc
repnz
jae
pop
add
add
jmp
sti
roll
dec
add
add
cmpsl
xchg
aam
adc
add
mov
clc
repnz
jae
add
add
sahf
bnd
clc
repnz
jae
cmpsl
arpl
popf
add
adc
mov
loop
add
and
add
mov
jb
clc
repnz
jae
out
pop
inc
loopne
mov
push
mov
xchg
ret
arpl
add
fs
mov
sbb
clc
repnz
jae
add
add
push
mov
xchg
ret
mov
add
sub
repnz
jae
mov
aaa
and
rolb
jbe
xchg
scas
mov
clc
repnz
jae
dec
add
ss
cld
nop
jmp
add
roll
and
lret
lock
adc
mov
repnz
jae
inc
add
dec
shlb
sar
clc
repnz
jae
popf
mov
push
clc
repnz
jae
add
lcall
repnz
jae
jmp
add
nop
jmp
add
cmpsl
mov
fcmovb
loop
clc
repnz
jae
lods
mov
subb
in
add
clc
repnz
jae
add
pushf
add
scas
xchg
cmpsb
or
dec
push
clc
repnz
jae
add
add
outsl
add
fisttpll
jae
lods
add
add
sahf
sub
clc
fwait
cld
nop
jmp
add
sahf
add
add
clc
repnz
jae
add
jmp
jl
sbb
cld
nop
jmp
dec
scas
lcall
or
clc
repnz
jae
add
adc
add
out
incl
add
add
stc
clc
repnz
jae
add
adc
jmp
cmpsl
scas
pop
add
add
lahf
add
inc
clc
repnz
jae
inc
add
adc
call
mov
xchg
ret
outsb
inc
fs
addb
pop
cmpl
fwait
cld
nop
jmp
add
arpl
jmp
je
repnz
cmpsl
add
adc
mov
push
mov
xchg
ret
cmp
sahf
out
add
add
add
add
repnz
jae
add
test
mov
add
repnz
jae
add
sbb
sub
inc
add
add
sub
aad
xor
clc
repnz
jae
add
pushf
pop
roll
sbb
lods
fwait
cld
nop
jmp
add
lock
inc
add
mov
je
repnz
jae
add
mov
adc
mov
mov
jbe
jmp
add
test
scas
add
fs
pop
add
sub
sti
xor
clc
repnz
jae
add
add
jno
mov
fwait
cld
nop
jmp
cmpsl
add
jmp
pop
dec
mov
inc
xor
add
push
mov
xchg
ret
add
std
mov
clc
repnz
jae
mov
add
push
scas
push
mov
mov
bound
test
add
dec
leave
inc
add
add
dec
repnz
add
add
fwait
cld
nop
jmp
lret
add
insl
test
add
pusha
add
clc
repnz
jae
add
inc
mov
out
clc
repnz
jae
and
push
add
fwait
cld
nop
jmp
add
add
add
nop
jmp
add
mov
add
and
call
clc
repnz
jae
insl
add
lock
rep
clc
repnz
jae
scas
add
pop
sbb
add
dec
clc
repnz
jae
pushf
sub
add
add
fwait
cld
nop
jmp
and
push
clc
repnz
jae
mov
sub
clc
repnz
jae
add
add
sub
add
add
repnz
jae
fs
push
clc
repnz
jae
add
scas
lcall
add
add
repnz
jae
add
push
mov
xchg
ret
add
lock
add
cld
nop
jmp
fs
add
push
mov
push
mov
xchg
ret
add
pushf
pop
fistl
mov
repnz
jae
enter
lcall
add
roll
add
add
add
pop
add
jmp
push
mov
sbb
mov
add
add
test
add
nop
jae
add
add
add
add
mov
xor
push
mov
xchg
ret
mov
cmpsl
pop
repnz
mov
clc
repnz
jae
add
add
lods
scas
jnp
add
clc
repnz
jae
add
jne
clc
repnz
jae
pop
insl
mov
jae
add
add
add
clc
repnz
jae
rorb
jle
test
clc
repnz
jae
lock
push
clc
repnz
jae
je
add
jp
mov
adc
repnz
jae
mov
cltd
mov
clc
repnz
jae
add
lahf
inc
lock
cmpl
clc
repnz
jae
pop
add
add
repnz
jae
add
mov
add
repz
repnz
jae
add
push
sub
popa
add
repnz
jae
out
add
add
add
clc
repnz
jae
add
inc
sbb
lahf
push
mov
movb
adcl
add
mov
push
mov
xchg
or
add
in
add
add
push
mov
xchg
ret
add
lcall
mov
mov
push
mov
xchg
ret
call
sbb
negl
add
add
add
add
jae
add
in
lahf
inc
add
pop
push
mov
xchg
ret
pop
inc
mov
pop
popf
jmp
add
repnz
jae
add
and
out
and
clc
repnz
jae
pop
add
out
add
mov
cld
ret
clc
repnz
jae
add
add
jmp
arpl
repnz
jae
add
dec
sub
jle
clc
repnz
jae
enter
jmp
test
test
add
clc
repnz
jae
call
mov
jmp
inc
test
add
add
in
jecxz
cs
clc
repnz
jae
add
je
lods
add
clc
repnz
jae
add
dec
lret
add
adc
mov
and
clc
repnz
jae
add
sub
jae
lock
shll
popa
add
mov
xchg
ret
add
add
outsl
and
clc
repnz
jae
enter
add
push
add
mov
xchg
ret
scas
add
jne
clc
repnz
jae
add
sti
jno
pop
push
mov
xchg
ret
add
add
int
movb
cmp
inc
add
add
jge
clc
repnz
jae
add
inc
jmp
mov
sub
inc
cli
in
or
add
cltd
add
push
mov
xchg
ret
scas
add
insl
add
xchg
clc
clc
repnz
jae
aaa
add
inc
jmp
dec
cmp
repnz
jae
dec
pop
mov
arpl
add
clc
repnz
jae
lahf
pushf
dec
add
es
clc
repnz
jae
insl
je,pt
fwait
cld
nop
jmp
lcall
clc
repnz
jae
cmpsl
cmp
sub
jmp
pushf
jmp
scas
dec
add
add
clc
repnz
jae
add
call
rolb
jecxz
mov
mov
xchg
push
mov
xchg
ret
mov
rolb
mov
repz
mov
repnz
jae
add
add
add
mov
clc
repnz
jae
cmp
add
push
mov
xchg
ret
call
popf
push
les
fwait
cld
nop
jmp
add
outsb
add
add
out
mov
clc
repnz
jae
add
mov
add
sbb
in
rolb
add
and
and
add
les
clc
repnz
jae
add
add
add
decb
mov
cmp
ret
add
mov
aaa
cmc
cmp
nop
jae
add
add
add
clc
repnz
jae
add
decb
add
repnz
jae
add
add
fwait
cld
nop
jmp
add
add
out
add
mov
pop
and
repnz
jae
movb
add
lods
popa
push
mov
xchg
ret
dec
inc
pop
add
add
push
call
push
mov
xchg
ret
lahf
add
mov
arpl
ja
lea
clc
repnz
jae
aaa
lret
add
xchg
fwait
cld
nop
jmp
add
add
in
add
clc
repnz
jae
add
lock
add
clc
repnz
jae
jmp
add
js
push
mov
xchg
ret
scas
aaa
fs
add
movzwl
clc
repnz
jae
add
and
fwait
cld
nop
jmp
add
add
add
add
pop
push
mov
xchg
ret
add
add
sbb
in
addb
mov
add
incb
fwait
mov
add
mov
fwait
cld
nop
jmp
add
mov
fwait
cld
nop
jmp
add
enter
mov
clc
repnz
jae
add
add
sub
clc
repnz
jae
scas
lods
lret
jle
clc
repnz
jae
add
sub
int
pop
jae
repnz
jae
sti
add
idivb
into
sti
incl
mov
rolb
rolb
outsl
mov
clc
repnz
jae
je
add
push
mov
mov
xchg
ret
cmpsl
arpl
lahf
add
mov
clc
repnz
jae
pop
jmp
add
or
clc
repnz
jae
add
xchg
sub
repnz
jae
add
enter
dec
add
cmpsb
stos
jne
fwait
cld
nop
jmp
lret
mov
shll
mov
jmp
jmp
add
mov
jmp
add
add
add
add
clc
repnz
jae
pop
add
cmpsl
cltd
mov
push
mov
xchg
ret
add
fs
inc
out
add
clc
repnz
jae
and
add
mov
sti
clc
repnz
jae
add
mov
nop
jae
lods
pop
enter
sbb
shr
mov
fwait
cld
nop
jmp
jmp
add
add
pop
clc
repnz
jae
lcall
out
jbe
mov
clc
repnz
jae
addb
pushf
out
mov
mov
stos
fwait
cld
nop
jmp
pop
add
pop
cmpsl
out
mov
clc
repnz
jae
add
jmp
ja
sub
clc
repnz
jae
sti
add
dec
add
fwait
cld
nop
jmp
add
add
out
outsb
push
xor
add
add
fwait
cld
nop
jmp
add
addps
repnz
jae
add
lock
cld
nop
jmp
add
add
xor
mov
outsb
je
repnz
jae
add
cmpsl
add
jae
add
add
mov
pop
add
xor
clc
repnz
jae
add
roll
add
xor
mov
and
clc
repnz
jae
add
and
add
or
stc
fwait
cld
nop
jmp
cmp
and
or
nop
jae
add
cmpsl
arpl
sbb
fisttps
test
cld
nop
jmp
add
sbb
iret
mov
fwait
cld
nop
jmp
lock
add
in
mov
fwait
cld
nop
jmp
and
add
and
mov
clc
repnz
jae
mov
add
shl
out
push
fwait
cld
nop
jmp
add
lods
test
lods
call
sar
repnz
jae
scas
add
add
lods
push
mov
xchg
ret
add
add
lods
pop
lahf
enter
add
pop
rolb
xchg
ret
mov
push
clc
repnz
jae
popf
rolb
insl
add
add
call
fwait
cld
nop
jmp
in
cmp
add
ja
pop
clc
repnz
jae
add
outsb
add
sahf
repnz
mov
push
clc
repnz
jae
add
add
test
ret
clc
repnz
jae
insl
in
enter
add
adc
repnz
jae
outsb
add
add
fwait
cld
nop
jmp
add
add
add
or
clc
repnz
jae
inc
add
and
fcoms
repnz
jae
fs
cmp
add
add
push
or
repnz
jae
in
add
shll
mov
clc
repnz
jae
dec
mov
les
cmpsl
dec
jne
clc
repnz
jae
rolb
pushl
clc
repnz
jae
mov
xlat
scas
testl
fwait
cld
nop
jmp
xorb
inc
int
xor
repnz
jae
pop
add
clc
repnz
jae
add
sti
cmpsl
add
add
hlt
fistpl
mov
xchg
ret
arpl
jmp
pop
jl
clc
repnz
jae
pop
add
mov
fwait
cld
nop
jmp
add
add
nop
jmp
add
add
add
mov
clc
repnz
jae
insl
add
add
repnz
mov
clc
repnz
jae
and
sti
add
je
add
clc
repnz
jae
add
add
inc
adc
repnz
jae
pop
pop
add
add
clc
repnz
jae
fildl
dec
rep
clc
repnz
jae
inc
xacquire
dec
or
mov
xchg
ret
roll
add
dec
cmc
in
inc
cltd
push
push
mov
xchg
ret
mov
je
jle
clc
repnz
jae
dec
test
add
mov
mull
repnz
jae
pushf
add
ret
mov
repnz
jae
add
add
push
mov
xchg
ret
add
and
mull
cmpsl
sub
nop
jmp
mov
lods
out
lcall
add
lock
inc
lahf
fs
add
fwait
cld
nop
jmp
out
add
add
bnd
cld
nop
jmp
pop
mov
mov
push
cld
nop
jmp
mov
add
and
repnz
clc
repnz
jae
add
add
mov
mov
nop
jae
lret
sub
add
sahf
test
gs
mov
mov
clc
repnz
jae
sbb
add
call
clc
repnz
jae
add
lods
add
sub
push
mov
xchg
ret
call
in
mov
clc
repnz
jae
add
add
inc
add
mov
cld
nop
jmp
add
lahf
sbb
add
repnz
jae
call
add
clc
repnz
jae
add
add
inc
fdivrp
clc
repnz
jae
sbb
in
jg
add
repnz
jae
lods
and
cmp
stos
pusha
push
mov
xchg
ret
lock
lods
and
jne
mov
clc
repnz
jae
pushf
add
push
mov
xchg
ret
add
lcall
add
cmc
jmp
dec
popf
sti
inc
push
xor
movl
add
outsl
pop
add
lock
nop
jae
sbb
add
test
movb
push
clc
repnz
jae
shr
lret
add
rolb
nop
add
fsubs
add
add
add
add
jne
clc
repnz
jae
sbb
mov
push
push
mov
xchg
ret
mov
add
add
add
jo
fwait
cld
nop
jmp
pop
lcall
lahf
call
clc
repnz
jae
add
add
js
fwait
cld
nop
jmp
in
arpl
lock
add
clc
add
clc
repnz
jae
add
cmpsl
mov
insl
or
hlt
inc
add
add
lahf
lahf
dec
push
push
mov
xchg
ret
jmp
add
and
xor
add
clc
repnz
jae
add
mov
repnz
jae
jmp
pop
add
je
push
clc
repnz
jae
enter
add
mov
dec
cmp
repnz
jae
popf
add
in
add
nop
jae
and
outsl
pop
push
push
mov
xchg
ret
subb
add
add
pop
fwait
cld
nop
jmp
sahf
add
pop
je
and
cmpsl
inc
add
cld
nop
jmp
add
add
add
add
push
fs
repnz
jae
add
rolb
xchg
add
or
mov
xchg
ret
roll
shll
loop
mov
mov
fwait
cld
nop
jmp
and
add
xor
mov
sar
nop
jae
in
mov
lret
add
push
jg
push
mov
xchg
ret
lcall
xchg
mov
mov
xchg
ret
fildl
add
pop
jne
clc
repnz
jae
mov
repnz
push
fwait
cld
nop
jmp
je
inc
arpl
add
sbb
rorl
cld
nop
jmp
add
lods
add
add
clc
repnz
jae
pop
addb
add
add
fwait
cld
nop
jmp
add
in
add
jne
pop
push
mov
xchg
ret
lcall
mov
repnz
jae
add
add
add
call
cld
nop
jmp
sbb
add
inc
add
mov
push
mov
xchg
ret
pop
add
add
cmc
shl
mov
jbe
clc
repnz
jae
add
arpl
add
or
repnz
jae
inc
cmpsl
lahf
add
mov
leave
fwait
cld
nop
jmp
add
lods
addb
sarl
out
test
add
push
mov
xchg
ret
sti
add
out
incl
and
mov
scas
lret
add
add
add
jnp
clc
repnz
jae
cmpsl
add
shll
sbb
add
clc
repnz
jae
pop
cmp
shrb
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
add
and
clc
repnz
jae
add
add
add
xor
mov
nop
jmp
mov
lock
repnz
jae
add
add
xor
clc
repnz
jae
add
add
loopne
clc
repnz
jae
popf
dec
add
jge
add
repnz
jae
rcrb
push
push
mov
xchg
ret
mov
cmp
add
add
xlat
inc
add
in
add
test
pop
daa
xor
mov
clc
repnz
jae
add
add
push
mov
clc
repnz
jae
sbb
sub
jne
push
mov
xchg
ret
add
dec
repnz
xchg
add
clc
repnz
jae
add
enter
adc
clc
repnz
jae
lret
add
rorl
clc
repnz
jae
jmp
outsb
sbb
adcl
inc
test
add
and
dec
sub
sbb
inc
add
insl
add
scas
mov
push
mov
xchg
ret
add
add
add
mov
fwait
cld
nop
jmp
add
fs
scas
add
dec
cmp
repnz
jae
lahf
in
add
out
jle
and
or
inc
add
add
mov
pop
ljmp
jae
add
add
mov
movsb
push
jne
push
mov
xchg
ret
add
add
add
movsb
fwait
cld
nop
jmp
add
mov
pop
addb
xchg
add
mov
and
dec
add
add
or
mov
push
push
mov
xchg
ret
add
out
inc
add
push
adc
clc
repnz
jae
add
add
nop
jae
dec
add
jmp
mov
mov
repnz
jae
sub
mov
jnp
clc
repnz
jae
add
fs
in
ljmp
add
fldt
add
sbb
push
mov
xchg
add
add
add
mov
add
push
sub
loop
mov
in
xor
xchg
js,pn
sub
rolb
mov
ds
mov
dec
sbb
insb
dec
xchg
and
sbb
push
add
or
add
add
cmp
daa
cld
dec
jns
movsb
inc
fnstsw
mov
cmc
dec
xchg
and
sbb
sub
mov
mov
inc
add
add
adc
mov
int3
or
cltd
adc
mov
mov
cmp
sub
icebp
push
adc
mov
xchg
lret
in
jle
sbb
pop
add
inc
add
adc
add
mov
fdivl
add
popf
add
add
imul
ljmp
das
push
inc
aas
lea
add
mov
add
inc
cmp
popa
cmp
dec
push
inc
int3
inc
push
insb
mov
inc
add
sbb
xchg
outsl
sbb
add
in
pop
pop
mov
lret
stos
dec
cmpsl
lcall
mov
clc
jo
mov
andl
mov
cmpl
mov
push
add
das
pusha
add
mov
cmp
cli
fstps
les
add
gs
add
divb
jp
movsb
sub
adc
xor
mov
scas
les
dec
shl
pop
lahf
adc
mov
add
rolb
mov
xor
adc
add
add
add
and
mov
mov
imul
and
mov
add
divl
mov
cmp
adc
bound
mov
cld
ret
shr
inc
add
scas
sahf
sub
mov
mov
jbe
ljmp
pop
xor
lea
roll
mov
inc
and
mov
jmp
jmp
lods
mov
fwait
push
rdpmc
mov
dec
sahf
gs
dec
adc
repz
imul
sbb
add
ljmp
xor
mov
iret
fildll
lret
ljmp
mov
mov
mov
mov
lss
mov
insl
imul
mov
mov
cld
push
jp
adc
mov
add
add
mov
mov
leave
int
sbb
inc
aaa
mov
addr16
insb
add
cmpsl
insl
std
xchg
jmp
sti
add
mov
mov
jno
gs
pop
mov
out
mov
dec
lret
sbb
inc
jno
fdivr
mov
push
cmp
rcl
push
jae
add
pop
int3
push
add
mov
int3
xchg
or
add
mov
ffree
ljmp
stc
das
loope
jmp
cltd
add
push
xchg
mov
sub
fs
nop
add
sub
add
jns
dec
notb
dec
pop
call
inc
add
inc
xchg
add
mov
jns
push
sbb
add
mov
mov
mov
add
mov
es
jg
lret
cmp
rcrl
jecxz
enter
fucomip
dec
and
mov
cmpsl
xchg
sub
int
and
aas
daa
xorl
mov
pop
mov
add
in
add
repz
mov
mov
mov
lcall
fistpll
leave
xchg
add
push
repz
xor
add
rolb
fisubs
cmp
xchg
mov
jg
mov
pop
mov
jl
push
fs
mov
cmp
add
inc
add
imul
cltd
lock
orl
cmp
lock
jnp
hlt
repnz
lahf
cmpsb
rolb
mov
jecxz
jo
mov
sub
lcall
fists
mov
jecxz
jecxz
sbb
sub
push
cmp
addb
repnz
repnz
push
or
mov
jno
jl
xchg
or
ret
or
dec
sti
mov
add
add
mov
add
push
aas
jge
add
imul
add
sbbl
add
sub
add
add
mov
inc
xorl
mov
test
add
fwait
xchg
jns
dec
outsb
out
add
add
ret
bound
mov
ret
jg
hlt
cltd
sbb
inc
out
sub
or
test
sub
lods
xchg
mov
add
mov
xchg
enter
mov
mov
pop
mov
add
add
mov
pop
or
xchg
ret
mov
jmp
mov
jmp
add
out
cld
mov
xor
push
adc
mov
jne
mov
addb
push
add
push
mov
std
pop
mov
and
xchg
pop
lock
mov
mov
and
mov
xchg
xchg
ret
cmp
xchg
sbb
imul
or
pop
movsl
sub
insb
mov
add
jo
mov
mov
mov
add
add
push
addb
sbb
lcall
add
dec
outsb
jo
mov
pushf
push
add
in
sbb
lock
mov
imul
mov
iret
addb
loope
bound
mov
cmpsl
scas
lock
add
lret
mov
fisttps
in
sub
mov
mov
xor
mov
pop
cli
xor
mov
aad
jae
sbb
mov
cld
mov
pcmpgtb
bound
mov
mov
test
sub
cld
jnp
add
mov
jecxz
popf
sahf
insb
iret
sbb
mov
or
mov
mov
loop
mov
add
sub
lret
addr16
fldcw
lock
imul
pop
pushf
ret
lret
scas
fcmovb
inc
enter
stos
pop
pop
sub
bound
mov
inc
call
dec
out
add
mov
sub
add
fwait
mov
test
mov
push
inc
fldt
pop
addl
movsb
ds
rolb
mov
mov
je
outsb
std
and
insb
pop
jae
adc
jb
mov
insb
cwtl
xchg
add
sub
stos
addb
fcoml
jnp
outsl
xor
push
out
fbstp
aas
inc
and
ret
inc
add
add
add
mov
mov
lcall
pop
jnp
dec
xlat
fcmovb
fidivl
pop
jo
mov
test
addr16
push
pop
pop
in
add
mov
xchg
jmp
dec
or
mov
sahf
out
or
inc
push
mov
adc
mov
xor
pop
ret
add
add
clc
stos
hlt
push
lret
dec
mov
cmpsb
scas
fidivrl
jmp
push
xchg
dec
push
xchg
mov
pop
into
mov
xchg
xlat
xor
test
or
inc
add
add
mov
add
mov
dec
or
mov
mov
xchg
call
xchg
push
add
lret
cmpsb
jecxz
sahf
scas
or
or
and
push
add
xor
pushf
cmp
dec
icebp
jno
inc
or
add
jae
add
pop
jo
mov
clc
popf
scas
stos
pop
adc
mov
pop
imul
out
imul
mov
jns
add
xchg
and
mov
sub
jmp
pop
movl
mov
xor
jbe
mov
int
add
adc
mov
sbb
stos
add
jle
mov
mov
dec
inc
shll
add
negl
add
dec
shll
add
out
mov
inc
packsswb
add
out
add
add
pop
push
xor
mov
mov
shll
mov
addb
ja
repnz
pop
dec
mulb
add
roll
stc
out
inc
add
jge
add
dec
or
repz
mov
xor
mov
in
sub
inc
inc
add
insb
lock
add
inc
js
popf
pop
xlat
lahf
push
add
mov
add
mov
add
fildll
loop
mov
mov
mov
xor
mov
add
loope
and
jnp
popf
add
mov
loopne
mov
jp
jmp
cmp
rolb
mov
add
loope
idiv
enter
and
rolb
mov
add
cmp
push
fstl
mov
js
mov
lcall
dec
lret
add
mov
mov
mov
je
add
add
int
andl
add
stos
nop
add
movsb
jne
loope
loop
mov
add
add
cld
mov
and
mov
movsl
icebp
rcrl
pop
ss
in
inc
add
add
add
clc
adc
add
mov
sub
ficoml
out
ret
mov
jmp
push
mov
add
mov
sub
icebp
mov
add
mov
and
add
imul
fistpll
xchg
ss
or
mov
xor
mov
adc
add
add
and
lret
mov
push
cmp
mov
subl
sub
mov
mov
jb
mov
add
add
add
popa
or
dec
hlt
movsb
adc
mov
rolb
mov
pop
adc
mov
xor
mov
add
push
add
sub
xchg
movsb
test
xor
add
in
or
add
lods
mov
xchg
adc
mov
mov
add
mov
lahf
cmpsb
dec
ret
inc
add
add
mov
ja
ja
rolb
mov
mov
je
enter
cmc
fldcw
pushf
pop
mov
cmp
add
nop
add
pop
sbb
outsl
pop
dec
mov
loopne
mov
popf
push
idivb
out
insl
out
scas
mov
adc
mov
or
fbld
out
ds
pop
xchg
xchg
jle,pn
add
jmp
jecxz
add
test
rorl
pop
adc
mov
ja
jl
mov
mov
das
in
xchg
lds
jge
push
xchg
cmp
mov
add
hlt
aad
int3
js
fidivrl
add
js
add
push
call
push
inc
sbb
mov
adc
cmpsl
cmpsb
or
aad
test
fwait
icebp
xor
mov
lds
fwait
ljmp
add
xorl
mov
jnp
add
push
rcrl
scas
dec
mov
mov
add
pop
cwtl
xchg
cli
fimull
mov
lods
sar
lahf
adc
lcall
fistps
pop
add
gs
xchg
xor
dec
adc
add
add
adc
add
outsb
fisttpll
sub
add
stc
cmc
cmpsb
inc
cltd
lods
aad
mov
adc
cmp
arpl
aas
imul
stc
push
jecxz
or
add
jmp
mov
mov
lods
out
sbb
cltd
pushf
sbb
xor
mov
popf
test
sbb
add
or
jmp
xor
shll
fstl
or
je
adc
pusha
add
push
add
or
add
mov
jbe
or
or
mov
dec
aaa
ss
add
mov
int
lahf
push
sbb
rcr
loopne
mov
cwtl
jbe
add
repnz
cli
cmp
pop
outsb
lea
out
mov
js
or
shll
dec
notb
xor
mov
add
push
sub
int
pop
and
inc
lods
mov
out
fstp
sti
and
in
shll
lods
fisttpll
lods
mov
lods
ret
cmp
add
xor
add
call
add
inc
add
sub
jg
icebp
enter
add
jge
add
sbb
xor
rolb
push
ret
mov
jle
jg
push
xor
mov
movsl
lods
movsl
jge
and
mov
push
repz
mov
and
jp
add
add
cltd
gs
add
mov
es
lcall
push
add
mov
push
loop
mov
les
pushf
aad
add
movsb
sub
data16
pop
bound
mov
add
or
add
mov
jbe
mov
mov
addb
inc
lret
xor
mov
mov
pusha
add
mov
xlat
inc
adc
mov
daa
jecxz
push
mov
or
mov
sbb
jle
pop
test
lcall
mov
out
lret
test
add
ficompl
adc
mov
out
cwtl
js
sahf
mov
dec
mov
repnz
loopne
mov
mov
mov
repz
mov
jmp
rolb
mov
nop
add
pop
add
push
jle
imul
mov
mov
nop
add
mov
sub
mov
mov
dec
daa
cmpsb
push
es
and
out
cmp
test
xor
mov
jb
mov
fildll
sbb
or
sbb
add
mov
roll
mov
push
cld
or
popf
pop
xchg
std
lods
das
psrld
mov
mov
inc
add
cltd
push
mov
andl
add
cmpl
push
hlt
outsl
imul
stc
jp
in
pop
movsb
icebp
jne
pop
mov
push
in
lods
pop
inc
or
xor
mov
jecxz
jne
inc
call
or
add
cltd
push
jno
negb
mov
add
stos
mov
mov
rcrl
adc
mov
adc
js
movsb
fisubrs
mov
jne
fisttpll
jg
aam
test
add
pop
scas
jmp
xchg
xlat
mov
loop
mov
add
mov
and
pop
inc
dec
insl
lock
mov
in
lahf
mov
rep
enter
rolb
mov
sub
incl
stos
mov
pop
or
insl
dec
je
jo
mov
int
mov
mov
mov
sti
addb
dec
inc
xor
sbb
add
outsb
pop
jbe,pn
inc
push
add
dec
jl
jo
mov
push
sti
cmp
pop
sub
inc
add
xchg
inc
rolb
sbb
int
addr16
mov
add
mov
ss
lret
add
aam
divl
ja
add
in
mov
mov
or
shll
movsb
gs
jae
or
lods
dec
test
inc
lds
cli
addb
and
push
push
add
orl
test
les
sbb
mov
repnz
or
sub
adc
and
repnz
rolb
mov
stc
out
and
fisttpl
mov
mov
mov
add
add
call
hlt
push
mov
add
jl
bound
mov
jno
fcmove
mov
cld
lods
cltd
xchg
mov
mov
test
mov
int
cmp
pop
movlps
mov
sbb
fldt
mul
and
add
add
mov
fwait
and
mov
aaa
lods
jle
jp
add
xor
xchg
mov
add
je
iret
lea
jae
add
mov
data16
mov
movsb
mov
sbb
cmp
xor
clc
cmp
push
fwait
in
push
rolb
mov
mov
and
add
inc
add
add
mov
mov
cld
fsubrl
fisubrl
aas
push
add
aad
jmp
fimull
jb
mov
xchg
es
jecxz
stos
or
fnsave
cmpsb
push
test
sbb
xchg
pop
pop
pop
cmp
mov
lds
int3
imul
insb
dec
data16
or
adc
call
and
push
clc
mov
jl
add
mov
sub
push
mov
sbb
add
mov
xchg
inc
loope
in
aam
in
addb
fidivs
das
mov
mov
cs
adc
mov
add
and
mov
sarl
test
xchg
mov
xor
mov
daa
outsl
push
rolb
xchg
or
cmp
leavew
pop
cmpsb
out
mov
arpl
mov
add
out
cmp
add
cmp
mov
mov
aam
scas
pop
inc
add
mov
and
mov
ljmp
mov
xchg
add
ds
add
lret
cmp
lret
xchg
mov
add
addb
dec
pushf
les
aas
dec
xor
add
mov
cmpsb
ja
addb
xlat
or
mov
jo
mov
xchg
fdivl
stc
jb
mov
das
test
data16
imul
enter
adc
jae
mov
fisubrs
lds
add
dec
dec
js
out
mov
xchg
push
dec
ss
push
xor
mov
mov
xor
jns
jl
leave
loope
jb
mov
pop
add
mov
xlat
bts
add
add
icebp
fsts
add
add
xrelease
add
mov
inc
in
cld
push
sbb
cs
fwait
sub
dec
adc
mov
add
mov
ljmp
insb
xchg
aam
mov
mov
mov
daa
aas
fld
adc
lret
hlt
fisubrs
add
fdivrl
and
jb
mov
les
add
lret
and
nop
add
xchg
mov
rolb
outsb
jae
push
gs
xchg
js
dec
loope
and
mov
sbb
or
int
jl
outsb
jne
add
cmp
push
sub
lods
push
dec
loop
mov
jl
add
and
outsb
lcall
lods
dec
out
aad
mov
xchg
pop
rcpps
and
mov
jns
mov
enter
mov
lcall
inc
pop
xor
mov
cltd
rolb
mov
in
mov
add
pop
push
pushf
inc
jnp
das
or
mov
cs
popa
mov
es
and
xchg
arpl
add
mov
int
push
sub
add
daa
jns
xlat
mov
mov
add
mov
mov
jge
jge
add
mov
xchg
mov
mov
repnz
push
mov
mov
mov
xchg
fnsave
add
inc
xor
jno
ret
or
pop
les
jae
clc
mov
insb
fisttpll
pop
push
or
jmp
adc
loopne
mov
inc
add
out
dec
add
mov
sub
sbb
data16
xchg
sub
mov
xlat
adc
mov
test
jo
mov
add
fmull
sahf
ret
adc
xchg
movsb
fsts
js
push
mov
add
ljmp
dec
mov
mov
add
mov
into
dec
mov
mov
stos
dec
ret
jo
mov
lret
js
inc
inc
add
xor
rolb
mov
and
and
in
mov
inc
andl
js
lock
cmp
xor
rcll
into
jecxz
cmpsl
push
add
mov
out
iret
add
mov
ljmp
mov
lahf
cmpsb
sbb
pop
push
dec
dec
in
jae
add
int3
inc
mov
mov
fwait
lret
mov
sub
mov
add
add
dec
insb
shr
leave
jno
sbb
mov
test
ds
bound
mov
int
add
iret
inc
xchg
cld
adc
filds
fcoml
jb
mov
outsl
addb
and
mov
sub
cmp
inc
pop
mov
or
lock
leave
push
xchg
sub
out
idivl
or
xchg
in
addl
add
int3
add
mov
mov
mov
dec
stc
and
add
jb
mov
test
shll
stc
mov
mov
add
mov
sub
pop
jae
and
lret
xchg
sti
idivb
mov
mov
fsts
mov
add
jmp
in
mov
mov
adc
mov
push
add
mov
out
int
ret
dec
nop
add
xchg
lock
mov
push
negb
xor
mov
add
sbb
lret
pop
test
ret
cmp
ret
ja
mov
mov
inc
or
push
lret
hlt
push
add
out
imul
xlat
sbb
add
insb
or
push
jecxz
pop
lret
mov
mov
test
mov
lcall
test
push
add
imul
add
pop
insb
mov
sbb
sub
cmp
out
adc
mov
push
iret
in
pop
push
jns
data16
pop
sub
addb
lods
cli
mov
lds
add
mov
add
add
incl
mov
jge
jmp
xor
mov
scas
mov
pop
scas
fs
and
mov
mov
push
std
cmp
stos
icebp
lahf
jmp
and
out
add
mov
inc
push
dec
divb
adc
jo
mov
inc
cmp
stos
inc
add
add
mov
add
ret
jg
sub
mov
mov
mov
in
fwait
or
cmp
xchg
xor
mov
push
add
inc
add
fnstsw
jle
repz
add
adc
mov
add
mov
sbb
dec
and
decl
mov
setnp
dec
sbb
das
pop
sbb
xor
addb
mov
jge
fwait
loop
mov
push
ss
pop
rcl
in
sbb
scas
mov
dec
inc
repz
out
in
or
fs
mov
test
mov
sub
add
aam
push
dec
xor
mov
push
add
adc
repz
adc
mov
mov
mov
enter
sbb
or
mov
into
jecxz
fists
mov
mov
out
cmp
push
sbb
inc
sub
mov
or
mov
mov
rolb
mov
sbb
imul
mov
test
add
aad
add
sub
aas
adc
add
aaa
push
mov
mov
adc
mov
lcall
clc
in
mov
cmp
or
mov
mov
aad
add
add
mov
or
add
mov
outsb
and
jge
add
out
mov
out
xchg
dec
jno
testl
iret
adc
add
dec
dec
call
repnz
xchg
and
jge
daa
add
mov
clc
or
add
ret
mov
aad
inc
add
test
push
fstpt
sbb
add
sub
sbb
mov
test
fdivrs
cmc
movl
add
xlat
and
inc
push
add
insw
lahf
ret
lds
add
std
rolb
cmpsb
and
es
pop
mov
mov
xchg
push
ficoms
and
mov
inc
jp
mov
rolb
in
roll
push
testb
test
cmp
jno
add
bound
mov
lahf
jns
movsl
pop
cmp
adc
fucomp
inc
add
mov
pusha
add
mov
dec
xchg
xchg
push
gs
add
xchg
push
add
add
push
outsl
out
add
mov
mov
jp
adc
add
pop
les
xchg
scas
pop
mov
push
test
rolb
mov
pop
xchg
out
out
arpl
mov
mov
add
mov
jge
push
add
sbb
xlat
les
mov
das
dec
test
adc
pop
roll
andl
mov
xor
dec
and
mov
loope
add
andnps
xchg
loope
mov
add
rolb
push
stos
divb
sub
add
mov
xor
xchg
lds
mov
mov
lock
cwtl
scas
insb
std
cmp
add
aas
cmc
fstpl
ret
fcomip
imul
popa
mov
test
cmp
fbstp
xchg
add
and
xchg
push
xor
mov
add
push
subl
pop
mov
dec
roll
sub
sbb
and
lea
add
movsl
in
ds
insb
test
fnstenv
clc
scas
and
mov
adcl
out
icebp
aad
adc
sub
test
mov
add
das
xchg
add
dec
mov
sti
mov
inc
loop
mov
add
andl
push
add
add
add
mov
mov
inc
arpl
mov
mov
testl
mov
add
jo
mov
mov
lret
into
pop
nop
add
pop
mov
adc
mov
push
push
loopne
mov
mov
dec
adc
mov
xor
mov
adc
mov
ds
jae
loopne
mov
xchg
lods
imul
mov
add
add
retw
pop
inc
add
add
repz
mov
add
and
mov
adc
mov
push
xchg
jbe
and
mov
mov
and
pop
jns
jl
dec
loope
hlt
flds
les
stos
pop
addb
sub
push
mov
mov
xorl
push
inc
enter
ror
and
mov
stc
add
mov
xchg
int3
ss
adc
jmp
sub
mov
and
mov
mov
add
pop
ljmp
or
add
ret
or
cmp
jecxz
xchg
aad
fwait
mov
movsb
bound
mov
popa
cmp
aas
and
mov
lock
push
clc
cld
jo
mov
out
aam
sub
inc
add
fldl2e
mov
outsb
or
adc
mov
dec
push
inc
add
push
clc
bound
mov
inc
mov
add
xor
mov
sarl
jmp
add
imul
loop
mov
inc
or
loope
add
popf
fs
dec
lcall
inc
fs
jb
mov
inc
stos
int
add
mov
out
hlt
adc
cltd
in
mov
mov
testl
les
scas
pop
lock
test
rolb
mov
xchg
std
loopne
mov
cmp
out
aas
jmp
cmpsb
inc
push
cmp
out
iret
in
js
xor
icebp
push
jbe
fs
sbb
jno
je
out
jg
int
lea
add
sub
movb
dec
xor
pop
rol
add
mov
mov
rcr
cltd
daa
push
add
mov
int3
push
dec
pop
movsb
rolb
mov
add
sbb
mov
add
adc
pop
mov
add
mov
das
dec
and
add
lea
ss
sbb
rolb
mov
mov
push
and
mov
add
sbb
rolb
mov
ret
adc
mov
mov
hlt
icebp
cmpsl
ret
lea
pop
lret
mov
inc
dec
sub
iret
xor
dec
cmpsl
mov
add
sub
fwait
scas
dec
fadd
adc
insl
fcompl
add
add
cmp
add
xchg
push
popf
sbb
xchg
sbb
add
dec
cmp
push
add
hlt
fwait
pop
mov
mov
xchg
mov
imul
popa
pop
jb
mov
movsl
mov
mov
iret
sarl
xchg
cmpsb
mov
test
outsl
loope
pop
mov
mov
or
add
xchg
leave
or
mov
cltd
fmul
lcall
add
add
js
mov
lods
es
pop
jo
mov
push
mov
add
push
call
mov
mov
lods
in
sub
stos
jecxz
fimuls
cmpl
add
add
pop
or
jno
add
and
cmp
pop
inc
popf
cmp
cmp
adc
enter
cli
jg
aaa
cmp
push
xlat
push
repnz
add
and
or
ret
xchg
call
add
adc
mov
popa
inc
or
add
jmp
pop
int3
sti
pop
xor
xchg
daa
push
jle
adc
inc
out
aas
inc
mov
mov
mov
addb
push
les
pop
scas
nop
add
aaa
mov
jg
popf
adc
imul
push
add
jno
popa
adc
mov
cwtl
sub
add
rcll
xchg
add
add
add
arpl
push
add
and
mov
inc
std
push
or
sbb
scas
push
mov
xor
add
cld
mov
pop
and
mov
add
fs
cmp
addr16
mov
add
cmpsl
movsl
add
mov
mov
mov
inc
outsb
jbe
sbb
divb
fiaddl
or
pop
lods
into
mov
aad
inc
inc
cmpsb
mov
out
cmp
dec
enter
jae
js
stos
pop
addb
xchg
cmp
ret
push
lcall
cmp
pop
imul
mov
jb
mov
add
addb
xchg
push
push
or
cs
sbb
lock
cmp
in
jge
add
pop
outsl
mov
or
dec
les
in
movsb
fcoms
mov
xchg
outsb
sub
jns
enter
fs
es
mov
push
imul
pop
adc
pop
das
repnz
xchg
out
adc
in
arpl
add
lds
loope
hlt
enter
stos
pop
mov
stos
addb
xor
mov
mov
mov
mov
mov
mov
add
inc
add
xchg
or
sbb
dec
xor
sub
mov
mov
mov
mov
scas
mov
add
insl
add
or
mov
rolb
bound
mov
pusha
add
xor
mov
cli
pop
mov
out
add
xchg
add
mov
sti
nop
add
pop
mov
xor
mov
dec
push
fidivs
mov
imul
mov
addr16
dec
and
xchg
jmp
lods
sahf
push
fstl
int
lcall
imul
add
jle
mov
imul
jno
cltd
js
sbb
lret
and
mov
and
push
add
xchg
out
mov
add
popl
mov
mov
sbb
adc
mov
add
add
in
inc
xchg
ss
test
lock
push
leave
add
mov
or
add
mov
add
pop
inc
push
dec
in
push
add
mov
mov
scas
aad
and
mov
mov
in
mov
mov
ss
push
cmc
xchg
add
mov
dec
pop
popf
fldenv
mov
repz
mov
lcall
incl
dec
shrl
clc
cltd
xor
mov
xlat
push
cwtl
sbb
cs
add
jmp
cmpsb
sub
inc
std
mov
mov
inc
push
add
push
inc
add
and
mov
add
mull
add
add
mov
cmp
jbe
jle
add
push
insl
lahf
cwtl
addb
jecxz
mov
rolb
mov
add
aad
or
mov
dec
dec
push
xor
mov
mov
fiaddl
mov
mov
mov
mov
enter
and
dec
add
mov
test
push
clc
clc
fwait
out
addb
mov
add
add
sarl
jge
insl
jg
ja
xchg
jle
ds
fldln2
int
add
add
mov
jmp
loop
mov
add
pop
js
ds
jns
push
pop
and
add
push
out
dec
xor
rcll
pop
add
mov
daa
add
mov
dec
daa
push
push
pop
mov
cmc
in
inc
pop
fildl
pushf
sti
add
adc
daa
sub
sub
test
pop
enter
scas
sub
outsb
outsl
in
in
cmp
lret
add
loopne
mov
adc
add
cmp
movsl
push
jg
add
mov
mov
add
test
and
lock
sbb
mov
lds
mov
scas
mov
pop
popa
roll
lods
nop
add
int
fcmovne
lods
sarl
xor
mov
loope
rolb
cmp
loope
xor
mov
mov
mov
jnp
out
loopne
mov
rorl
mov
fucomp
stos
pusha
add
movsl
jg
dec
popf
and
xchg
mull
ficoms
add
sub
loopne
mov
mov
mov
or
add
mov
scas
mov
scas
aaa
mov
stos
mov
push
inc
add
out
inc
test
leave
sarl
inc
add
arpl
cmp
fstpl
sbb
lods
sbb
stos
adc
insl
imul
mov
push
inc
xchg
and
dec
and
mov
add
mov
cli
loopne
mov
mov
xchg
fcomps
add
add
adc
mov
repnz
cmc
jns
call
mov
xor
mov
add
ror
add
or
add
mov
pop
pushf
mov
ss
add
cwtl
in
fnstcw
int
add
add
stos
or
jno
lahf
enter
mov
insl
sub
bound
mov
add
fwait
lds
xlat
flds
test
cmp
jbe
test
lea
jp
xchg
mov
fs
fldpi
sbb
fstps
xor
stos
xchg
ret
ret
pop
pushf
push
adc
mov
mov
or
xchg
add
add
and
add
add
jnp,pt
xor
add
js
stos
aaa
mov
ss
xchg
mov
es
stc
int
or
add
jbe
xchg
add
xor
mov
pusha
add
movsb
addb
mov
or
add
add
cmp
add
add
sub
insl
pop
or
sbb
xchg
jge
add
out
sbb
pop
mov
xchg
out
aad
fildl
stos
cmp
out
mov
mov
fs
test
scas
or
jne
cmp
dec
ret
es
testl
mov
mov
nop
add
dec
loop
mov
or
fcmovnb
in
cmc
cltd
movsb
push
mov
mov
mov
and
mov
add
sub
dec
es
imul
jmp
pop
cld
in
rolb
mov
std
jns
and
add
cmp
add
mov
jle
dec
stc
lahf
push
aam
outsl
ss
leave
or
add
inc
int3
cmpsl
push
sbb
fimuls
jl
jo
mov
rolb
mov
bound
mov
fcomip
add
xor
mov
xchg
test
pop
xor
mov
mov
mov
cmp
das
scas
stos
add
dec
fucomp
sarl
cmpsb
sub
dec
js
iret
in
cmp
push
or
fsubl
add
add
daa
jmp
dec
sub
add
pop
jmp
call
imul
in
sub
add
addb
mov
pop
xchg
push
xchg
add
push
jl
mov
out
xchg
jbe
and
mov
add
mov
das
ja
lock
jg
push
adc
int
jmp
enter
cmp
aad
test
xchg
add
dec
int
pop
int
cmp
mov
jnp
add
xor
add
test
mov
push
icebp
ss
cmp
add
mov
push
mov
mov
add
add
out
push
cmp
adc
mov
enter
lods
sub
dec
dec
add
cmp
ror
push
cmp
add
pop
adc
mov
add
jp
pop
push
scas
cmc
or
cmc
xlat
ss
pop
add
xor
mov
mov
mov
mov
add
add
sbbl
dec
dec
cmp
cltd
clc
inc
inc
add
insb
push
xchg
out
idiv
or
add
mov
push
mov
stos
dec
out
rcr
sbb
xor
push
jnp
idivl
add
add
push
mov
mov
lds
dec
mov
scas
adc
mov
xor
mov
add
jp
loopne
mov
dec
scas
and
add
inc
cmp
jle
mov
cmpsb
imul
rolb
mov
jne
push
inc
daa
push
cwtl
or
fisubrs
sub
fsts
mov
loope
aad
clc
jb
mov
not
cwtl
cld
dec
aad
add
aaa
add
add
dec
test
loope
lahf
dec
loop
mov
pop
mov
cmpsb
push
popf
add
fldpi
mov
cld
rolb
mov
dec
or
les
pop
cmp
dec
xchg
rolb
mov
out
or
mov
in
cli
idivl
mov
enter
call
pop
cmp
pop
xor
out
ret
sub
jmp
pusha
add
mov
pushf
fsubp
scas
ss
adc
pusha
add
add
pop
loope
cwtl
adc
pushf
movsb
andl
mov
nop
add
mov
add
ret
scas
lock
add
iret
and
add
xor
stc
rolb
mov
rolb
mov
add
cltd
mov
mov
mov
mov
mov
aas
pop
notb
mov
ljmp
add
pop
in
jg
add
lods
mov
add
mov
fisttpl
pop
sub
ret
stos
xor
mov
outsl
rolb
mov
js
mov
mov
aaa
xchg
aaa
xor
mov
add
das
or
add
iret
xchg
mov
sbb
cld
sub
sbb
adc
add
popf
pusha
add
add
sub
mov
mov
lahf
loope
int
sub
sub
les
jmp
and
dec
loope
add
sub
mov
add
push
pop
xor
fs
adc
push
lcall
jno
rolb
mov
and
add
mov
lret
rolb
mov
stc
xchg
fs
push
jge
daa
push
sub
fisubl
add
lock
popa
jns
add
mov
aam
adc
addb
push
out
mov
into
insl
jns
mov
cmp
add
mov
in
sahf
loope
mov
gs
add
std
push
xor
dec
outsl
pop
xor
push
lock
test
std
sbb
lret
dec
add
mov
movsl
xchg
pop
mov
add
jne
xor
mov
add
mov
scas
xor
mov
fiaddl
add
push
addr16
loope
or
out
mov
cmp
inc
add
ja
jnp
dec
jge
mov
test
inc
sarl
fxam
sbb
les
add
add
xchg
ficoms
add
xor
fs
addb
enter
sbb
and
mov
mov
repz
addb
sahf
stos
lods
inc
cmpsb
addb
cmp
scas
mov
in
in
lock
fwait
mov
shll
ficomps
sub
sub
in
fstpl
mov
pusha
add
add
xor
leave
lods
aam
jne
mov
repnz
xchg
mov
adc
mov
fninit
mov
fxch
sbb
int3
sub
fwait
mov
scas
push
or
lret
add
mov
add
loop
mov
inc
por
mov
add
sbb
add
fscale
xchg
imulb
pushf
jno
lods
xchg
and
add
sar
jmp
lea
mov
aad
add
add
add
mov
mov
popf
test
mov
mov
ficoms
mov
mov
push
xchg
mov
xchg
mov
mov
cmp
xchg
hlt
dec
inc
jge
iret
jge
int
sub
add
add
mov
cmpsb
imul
xor
je
lahf
adc
mov
sub
in
and
mov
xor
adc
mov
xchg
xlat
and
mov
das
les
dec
and
cmp
mov
lea
test
or
fsubl
aaa
je
pop
or
push
mov
pop
xchg
add
add
mov
icebp
xlat
sbb
shll
das
mov
lods
lods
sbb
cmpsb
push
cmp
mov
hlt
xchg
mov
mov
mov
jns
sbb
dec
cltd
iret
repz
or
add
mov
iret
in
ret
in
cmp
add
adc
mov
mov
jl
mov
mov
daa
into
movsb
loopne
mov
imul
sub
aad
sahf
and
jne
add
push
cmp
or
cli
xlat
sub
add
add
mov
leave
jge
popa
das
cltd
lock
inc
add
mov
jecxz
push
lods
addr16
xchg
pushf
cmpsl
pop
in
or
aaa
outsl
mov
jecxz
sub
in
sub
xor
rolb
sbb
mov
sbb
cmp
and
aaa
dec
movsb
cltd
andl
das
das
addr16
push
lcall
add
ja
xchg
jno
add
adc
add
mov
or
push
sub
in
xlat
lods
fwait
adc
mov
enter
mov
jno
out
int3
adc
stos
aas
inc
jmp
add
mov
div
xchg
repnz
mov
rcrl
jge
in
add
xchg
enter
lods
cmp
sub
popa
xchg
add
push
add
push
mov
add
scas
stos
mov
add
in
fstp
cmp
and
mov
mov
push
aas
and
add
add
add
add
fistps
push
arpl
and
xchg
add
dec
mov
out
mov
push
sti
in
testb
mov
out
add
loop
mov
insl
icebp
pop
jle
add
pop
mov
mov
push
add
add
mov
mov
mov
xchg
mov
hlt
hlt
xor
xchg
add
cs
add
add
cmp
add
orl
mov
sti
imul
call
mov
dec
fcoml
mov
add
stc
sti
ret
inc
fs
pop
insl
push
outsb
sbb
mov
pushf
test
add
mov
mov
jb
mov
push
add
fadds
hlt
pop
popf
mov
jmp
add
inc
xor
mov
cmpsl
fcmovu
call
ja
add
mov
mov
lods
in
and
xchg
mov
out
add
pop
cli
loope
sbb
xchg
addl
mov
xchg
repz
add
add
pop
jns
adc
mov
inc
add
xchg
movsb
cmp
test
add
mov
jl
jbe
jbe
xor
xchg
scas
cmc
lahf
lcall
pop
jae
addb
mov
adc
mov
cld
sbb
and
mov
int3
xchg
push
data16
push
js
dec
aaa
lcall
sahf
fidivl
lcall
adcl
or
mov
mov
mov
mov
scas
outsl
sub
leave
push
je
add
add
rolb
mov
dec
in
imul
mov
add
mov
and
mov
pop
mov
imul
idivl
adc
mov
mov
dec
mov
push
mov
lock
arpl
fstp
inc
loopne
mov
iret
add
mov
sub
aam
dec
cmp
fbstp
subl
dec
and
inc
xor
mov
jecxz
mov
fs
int3
addr16
jl
iret
pushl
jo
mov
adc
adc
jp
mov
imulb
pop
and
mov
mov
cmp
xchg
add
add
or
enter
outsb
jp
push
dec
jecxz
add
mov
push
add
mov
push
add
lds
inc
push
pop
sub
add
dec
sub
add
mov
int
cmp
lret
xchg
mov
xchg
addl
cmp
push
in
mov
mov
fildll
stos
aaa
cltd
mov
pop
mov
push
and
add
push
movsl
jns
xor
mov
xchg
fmuls
loope
fiadds
inc
shll
imul
mov
stos
sub
xchg
out
or
push
add
mov
jg
ja
add
pusha
add
clc
bound
mov
mov
sub
mov
sbb
push
rolb
mov
lret
add
stos
insl
mov
fistpll
das
lret
cmpsl
xor
add
sub
cmp
in
xor
mov
add
out
sub
mov
inc
and
mov
jno
dec
js
movsl
push
jle
adc
mov
hlt
xchg
add
add
or
add
xchg
hlt
aad
add
movsb
mov
repnz
roll
aaa
addb
cwtl
xchg
imul
add
xor
mov
jne
cmp
adc
add
leave
hlt
sti
fwait
rolb
mov
add
mov
mov
adc
mov
and
mov
jne
xchg
mov
add
add
push
lahf
pop
js
add
loop
mov
orl
mov
cmp
inc
jae
add
xchg
dec
stc
out
xor
dec
add
pop
loop
mov
and
mov
xor
add
fwait
js
ja
mov
shl
pushf
mov
cli
add
add
iret
orl
out
mov
mov
lcall
jl
idivb
xchg
mov
in
dec
add
push
jmp
mov
pop
jnp
fmul
xor
dec
push
add
add
and
fucom
add
in
push
fxch
sub
add
cmp
xchg
add
leave
inc
sub
in
aam
add
test
push
add
mov
or
add
mov
or
fwait
daa
jmp
pop
mov
mov
push
pop
push
adc
addb
rolb
mov
xor
fnstsw
add
flds
adc
jg
adc
jg
and
mov
data16
mov
add
add
cltd
faddl
loop
mov
xchg
jmp
xlat
leave
pop
jns
movsl
jo
mov
adc
mov
call
adc
mov
mov
movsl
pusha
add
xchg
loop
mov
sbb
fiadds
repz
mov
sub
or
rolb
mov
popa
es
add
mov
mov
les
jb
mov
loop
mov
pushf
pop
push
and
pop
lret
ret
imul
lods
push
add
lods
jno
add
dec
bound
mov
push
add
sbb
jae
dec
ss
into
xchg
mov
push
movsb
xchg
out
mov
push
sarl
pop
push
jne
jae
jnp
lods
fsubr
stc
push
ljmp
xchg
test
mov
add
mov
leave
dec
inc
cmp
popf
inc
xchg
int3
mov
hlt
loop
mov
add
add
push
add
mov
movsb
add
ds
cmp
pop
inc
insl
loopne
mov
out
mov
pop
pop
movsb
add
mov
add
push
push
test
add
or
mov
add
daa
in
mov
mov
push
fstpl
add
mov
add
and
mov
add
insl
mull
or
add
add
loopne
mov
lods
push
pop
test
mov
mov
repnz
sub
mov
mov
cs
addb
xor
push
int
leave
imul
mov
daa
loopne
mov
aaa
rolb
xor
xchg
inc
fnstsw
pop
cmpsl
enter
push
add
cmp
xchg
sahf
sbb
arpl
and
cltd
test
sbb
jns
add
inc
aaa
mov
add
aam
pop
cmc
adc
in
dec
rolb
mov
lcall
add
aam
xchg
out
or
rolb
mov
push
popa
aaa
jnp
sbb
push
idivb
loop
mov
pop
std
daa
mov
jo
mov
jne
call
dec
jno
add
add
mov
push
add
add
stos
and
out
flds
add
insb
or
mov
jo
mov
mov
movsl
cmp
mov
mov
mov
rcl
cmp
lock
in
push
sub
ret
add
rolb
mov
push
pop
clc
cs
test
ret
jmp
xor
push
ss
outsb
jno
push
cmp
add
mov
push
mov
add
cmp
test
fstl
xchg
add
int
loopne
mov
fldenv
mov
es
shll
add
dec
stc
lcall
scas
call
mov
aad
test
aaa
or
popf
repnz
cmpsl
inc
sbb
add
mov
mov
sbb
add
je
xor
je
pop
jge
pop
push
lds
dec
mov
out
jl
xor
sub
add
mov
mov
mov
add
add
mov
mov
and
xchg
add
add
movsb
push
sbb
lahf
adc
mov
or
mov
push
lock
xchg
push
sub
outsb
push
sahf
push
cmpsl
lea
test
stos
inc
jnp
add
add
mov
mov
bound
mov
mov
fwait
sbb
outsb
add
mov
mov
mov
in
lock
add
rolb
mov
outsl
inc
xor
xchg
icebp
aas
call
aad
imulb
jns
sub
je
sub
and
nop
add
add
test
lahf
scas
and
mov
repnz
je
fucom
mov
mov
aas
imul
lods
xor
pop
lea
fisttpll
add
divl
jp
mov
xor
out
cltd
dec
mov
shll
mov
lods
call
mov
fisttpll
std
xchg
fwait
mov
cmp
popa
sub
add
shll
inc
xchg
sub
xchg
ret
jmp
cmp
mov
pop
jns
adc
and
dec
cmc
rolb
mov
sub
jbe
push
xor
jns
out
jae
dec
mov
lret
inc
adc
lods
pop
dec
mov
lret
je
or
mov
mov
stos
add
jno
mov
fcompl
mov
clc
inc
dec
int
pop
out
aad
mov
fldt
nop
add
lods
stos
fldcw
mov
mov
add
add
jmp
add
mov
add
push
xchg
cltd
jns
int3
lahf
or
addl
mov
mov
fisubrl
pop
xor
insl
faddl
mov
cmp
out
pop
fdivs
sub
je
mov
add
jmp
stc
or
lret
pop
jae
xchg
dec
sbb
stos
mov
pop
mov
mov
mov
pop
mov
fwait
push
shll
aas
dec
stos
jle
dec
mov
cmp
add
mov
outsb
pop
imul
out
pusha
add
add
test
push
xchg
pop
hlt
xor
add
fisttpl
imul
mov
push
addb
mov
add
lds
mov
rcr
outsl
test
xchg
add
add
mov
xor
cli
loop
mov
add
xchg
xchg
mov
add
add
sub
aam
clc
sub
subl
add
cwtl
aam
mov
add
xor
or
pop
cld
pop
flds
aas
ds
dec
fidivl
mov
add
push
add
out
hlt
xchg
mov
push
xchg
and
add
xor
add
es
sarl
data16
into
inc
ja
or
mov
ret
fildl
cmp
pop
jmp
push
aaa
jno
in
pop
sub
ss
dec
test
inc
jg
leave
mov
movl
add
add
fcoml
add
jecxz
aaa
jne
pop
imul
adc
mov
lret
add
inc
jle
adc
dec
testl
fwait
sub
push
mov
add
sub
add
idivl
mov
nop
add
iret
aaa
mov
lds
add
in
inc
mov
cltd
lcall
mov
mov
or
ja
lcall
inc
test
mov
jo
mov
add
movsb
fmull
pop
rolb
mov
mov
addb
cmpsb
adc
jmp
mov
cmp
or
into
sub
das
pop
push
mov
or
dec
jo
mov
add
push
or
pop
flds
mov
push
mov
mov
outsl
push
fisubs
add
xor
mov
jo
mov
add
cmp
ja
add
push
and
mov
mov
mov
flds
jg
inc
inc
mov
rolb
mov
cmp
dec
or
add
in
mov
add
mov
add
inc
aam
test
mov
int3
jg
mov
add
add
sub
jmp
add
pop
jae
in
add
sti
mov
push
xor
mov
mov
out
jecxz
mov
mov
outsb
or
aam
je
add
bound
mov
lret
sub
jae
imul
rolb
mov
push
and
add
in
push
add
cmp
movsb
mov
in
repz
cmp
add
push
loope
add
adc
or
lahf
add
add
add
mov
int
add
jg
aaa
add
mov
add
push
loop
mov
adc
aas
testl
fwait
inc
dec
or
sub
inc
cmpsb
cs
add
mov
mov
add
xor
mov
rcl
mov
add
inc
add
popa
les
pop
pop
lock
std
inc
fwait
adc
addl
outsl
daa
mov
add
push
lock
jnp
mov
rolb
mov
repnz
mov
mov
nop
add
repnz
sbb
xchg
in
idivl
lahf
push
add
cli
mov
dec
addr16
cmp
call
mov
bound
mov
mov
push
fisttpl
xor
pop
mov
rolb
mov
sbb
mov
jl
add
cld
stc
imul
jbe
scas
or
push
repz
jp
push
negb
xor
xor
mov
nop
add
sub
mov
mov
jbe
fcmovbe
xchg
dec
and
cld
iret
add
or
mov
sbb
jo
mov
inc
pusha
add
mov
data16
rcr
and
mov
stos
mov
lods
insb
gs
mov
neg
rolb
mov
add
out
mov
notl
add
add
inc
add
mov
test
add
filds
adc
in
repnz
mov
mov
add
push
add
add
mov
mov
lahf
sbb
js
cmc
lods
cwtl
add
fiaddl
xchg
pop
xchg
imul
or
mov
clc
add
jle
lods
cmp
mov
lret
testb
fldl
test
push
pop
inc
add
dec
cmp
cmp
shl
mov
add
mov
cmp
mov
repnz
std
adc
test
mov
jnp
or
fnstenv
add
xor
mov
out
jnp
and
xchg
pop
adc
jne
mov
inc
pop
hlt
cmp
sbb
outsl
add
mov
scas
sbb
mov
mov
jae
jbe
add
add
fdivrs
add
insb
sub
and
mov
dec
in
out
call
punpcklbw
mov
popl
push
add
pusha
add
mov
inc
add
push
mov
mov
mov
sbb
jl
rolb
mov
addb
out
xor
aas
mov
mov
add
add
pop
icebp
mov
ja
fstpt
sub
push
add
add
jle
mov
push
jbe
lods
rolb
or
ret
mov
or
dec
push
mov
and
mov
and
mov
inc
add
inc
jmp
and
mov
inc
std
fisttpl
adc
idivl
dec
or
in
push
dec
insl
cmpsl
aad
dec
in
sbbl
mov
add
xor
jbe
movsb
loope
add
push
sbb
ds
and
mov
in
sbb
mov
sbb
add
aaa
lock
xchg
or
mov
jno
sahf
fisubs
sbb
lahf
popa
popa
pop
add
stc
adc
add
mov
clc
je
rolb
mov
add
mov
jnp
push
insl
xchg
cmp
xor
mov
mov
idiv
mov
mov
add
mov
cmc
dec
in
out
gs
mov
add
push
add
mov
add
imul
outsl
jae
popf
pushf
outsl
xchg
sbb
movsb
mov
xchg
mov
out
das
std
inc
fisttpl
cmpsb
ss
dec
xchg
jl
repz
addb
popf
pop
pop
xchg
add
rolb
fsts
adc
mov
mov
rolb
inc
add
outsb
or
add
mov
cmpsl
sarl
mov
push
push
fildll
sbb
out
popa
aaa
rcll
sti
jae
cmp
movsl
mov
add
mov
mov
scas
push
adc
mov
aam
xchg
add
out
repz
cs
cmp
mov
mov
mov
dec
mov
xor
add
mov
mov
fildll
add
je
test
mov
ret
pop
or
lret
cmpsb
push
test
xchg
mov
mov
cmp
out
add
xchg
mov
jne
std
or
call
movsb
push
addb
sub
pop
jmp
sbbl
jnp
stos
and
dec
mov
jns
adc
repnz
sbb
and
add
xchg
mov
xchg
icebp
mov
push
aas
jl
add
and
pop
xor
xchg
jle
fisttps
pop
loopne
mov
cld
incl
mov
fimull
enter
movsb
dec
cltd
jle
lea
repnz
add
mov
ret
popf
sbb
pop
mov
dec
fcoms
mov
lods
loope
inc
jae
addl
pop
bound
mov
cld
cwtl
int
or
stos
mov
sbb
adc
aad
xchg
cltd
aas
cwtl
mov
out
add
sbb
call
push
dec
sbb
add
xchg
scas
out
cwtl
jb
mov
dec
add
mov
add
mov
fdivr
aaa
repnz
bound
mov
lret
iret
lea
mov
daa
imul
test
sub
lods
idivl
add
lods
cmp
out
jp
add
cs
adc
push
xor
mov
jnp
cmp
mov
aas
stos
push
mov
sub
mov
out
test
sub
pop
es
mov
add
jo
mov
ss
adc
add
mov
add
mov
adc
mov
add
dec
mov
and
push
inc
lods
jl
ret
clc
arpl
fcomip
outsb
addb
cmpsl
xor
sbb
lahf
aad
rolb
jnp
test
add
adc
mov
add
xor
lea
and
ficompl
sarl
movsl
fs
setae
movsl
jge
sub
mov
cmc
rorl
add
inc
mov
mov
mov
adc
mov
mov
dec
pusha
add
mov
adc
pop
lock
add
mov
add
mov
and
xchg
mov
jo
mov
orl
sub
out
adc
mov
sahf
mov
mov
in
push
pop
push
lock
jo
mov
inc
test
inc
add
pop
push
add
lds
add
mov
ja
mov
cmpsb
pop
daa
imul
das
pushf
movsl
popa
out
or
add
push
add
add
popf
fldl
mov
popa
idiv
insl
sub
mov
adc
mov
lock
mov
cwtl
pusha
add
fisubrs
xlat
xor
jns
int
sbb
loop
mov
loope
jecxz
inc
add
ja
std
ret
iret
jle
mov
fiadds
cwtl
sbb
add
push
mov
das
jg
add
lods
nop
add
inc
cltd
in
pop
dec
pop
dec
dec
clc
pop
cmp
int3
adc
jb
mov
ficompl
mov
in
imul
repnz
mov
and
and
adc
ss
pop
jb
mov
mov
add
in
xor
mov
xchg
jecxz
addb
fisubrs
jae
in
mov
rolb
jle
fstps
push
addr16
sub
adc
cmp
add
jmp
add
mov
stos
sbb
loop
mov
dec
jle
mov
add
pop
sub
push
sbb
push
addb
movsl
sub
je
push
outsl
mov
add
xor
leave
test
test
fistpll
inc
int
pop
push
xor
pop
ljmp
sbb
sti
mov
mov
mov
add
mov
add
dec
inc
add
add
pop
lock
mov
mov
add
mov
imul
int
rolb
mov
mov
jns
repz
xchg
add
xchg
es
jno
ja
fstpt
add
arpl
cmp
mov
jne
add
mov
cltd
cmp
fadds
mov
xor
pusha
add
adc
mov
ja
add
sub
add
mov
push
push
fnstsw
lock
and
mov
dec
aad
shlw
inc
cld
add
out
test
dec
fimuls
sub
movsb
cld
rolb
mov
vmread
movsb
add
inc
add
add
adc
leave
mov
xchg
add
stc
push
test
inc
ret
iret
pop
fldt
cmc
test
or
jge
movsl
cmp
popa
enter
mov
add
mov
test
xor
mov
bound
mov
add
mov
cli
popl
mov
or
aaa
frstor
xchg
xchg
pop
add
mov
adc
mov
mov
mov
mov
jl
add
push
pop
scas
dec
push
add
loopne
mov
jno
outsb
sbb
xchg
add
xchg
pushf
ret
out
gs
jae
rolb
mov
fwait
mov
sbb
je
push
test
nop
add
cmp
add
les
jge
jnp
cli
xor
mov
in
mov
add
xor
mov
push
ljmp
sub
mov
scas
xchg
enter
xchg
mul
adc
jae
mov
mov
cmp
cmpsl
add
jecxz
jo
mov
add
mov
add
repz
mov
push
and
mov
popa
arpl
dec
mov
in
or
xchg
or
push
add
mov
out
aaa
in
std
and
cmpsl
or
push
hlt
and
pop
pop
scas
stos
lcall
adc
mov
stos
mov
add
mov
push
pop
sbb
test
add
sub
fidivrl
jo
mov
ficoml
xor
add
inc
add
fiadds
mov
dec
adc
add
addb
dec
jge
sbb
add
mov
out
dec
testl
pushf
ljmp
add
mov
add
mov
xor
and
inc
sahf
cld
cmp
je
cltd
loope
fildl
jne
sbbl
adc
mov
sub
mov
mov
mov
add
es
push
in
jmp
rolb
mov
and
pop
push
std
jo
mov
mov
outsb
aad
xlat
rcll
fsub
add
in
sbb
cmp
popa
ljmp
pop
addl
and
push
das
mov
add
add
jo
mov
sub
inc
shrl
movsl
ss
repnz
push
push
add
aaa
push
test
add
imul
add
sar
push
add
out
xor
mov
pushf
dec
push
add
mov
js
in
add
mov
pop
push
add
mov
add
leave
dec
ficoml
and
add
add
xor
je
and
mov
sti
test
add
nop
add
sbb
std
cmp
adc
mov
mov
sbb
stos
pop
scas
or
cmp
leave
ret
xchg
jmp
in
clc
jns
aad
lcall
movsl
or
jno
jns
jbe
mov
adc
xor
mov
sub
push
repz
scas
or
cmc
or
repnz
mov
jbe
hlt
dec
loopne
mov
clc
data16
sub
and
add
dec
and
mov
add
pop
jl
add
negb
lea
add
jno
jl
fsubr
bound
mov
mov
add
sub
mov
add
mov
std
dec
xor
sub
add
pop
dec
rcll
shl
mov
add
mov
inc
add
mov
fcmovnbe
add
hlt
addb
scas
dec
sbb
and
jo
mov
xor
or
fnstcw
jmp
push
push
lods
imul
out
insl
cmp
add
faddp
mov
cmp
jecxz
cmc
ror
push
decl
nop
add
enter
jb
mov
ljmp
je
popf
or
icebp
icebp
fwait
cmp
mov
ljmp
mov
mov
add
pop
or
add
push
adc
sub
cmp
and
mov
repnz
imul
jle
sub
cmc
lret
inc
mov
add
add
mov
add
loopne
mov
pop
fwait
jecxz
xchg
xor
xchg
sbb
mov
add
testl
xchg
and
mov
add
js
add
test
test
push
xor
add
testb
addb
mov
loope
add
cmp
add
cmc
xchg
pop
int3
adc
jnp
dec
mov
add
int3
test
out
adc
movsb
addb
adc
mov
push
ftst
lret
shl
add
pushf
or
mov
inc
outsb
pop
jnp
dec
inc
jns
or
mov
scas
lahf
cmc
xchg
popf
xchg
lret
jo
mov
adc
xchg
into
popa
mov
mov
lods
sub
and
mov
add
and
mov
aad
or
sbb
sbb
add
add
xchg
bound
mov
mov
rolb
mov
add
inc
hlt
xchg
cmp
mov
jg
push
addr16
and
mov
mov
mov
lahf
mov
mov
adc
mov
mov
rorl
pop
push
add
les
mov
mov
js
add
xlat
and
aam
cltd
addb
loope
addr16
add
mov
inc
sbb
xor
or
mov
add
pop
push
rcll
mov
mov
adc
pop
and
nop
add
pop
sbb
pop
imul
dec
xchg
sub
shrl
push
sbb
rolb
xchg
rolb
mov
ret
out
jmp
add
add
add
xchg
or
in
add
cmp
inc
push
add
fistps
pop
dec
push
repnz
add
negb
int3
scas
inc
mov
or
add
mov
inc
push
push
pop
jmp
add
and
dec
mov
mov
jle
xchg
mov
pushf
out
iret
push
add
mov
jmp
and
or
fwait
roll
mov
test
or
pop
sbb
pusha
add
cmpsl
imul
mov
cmp
add
add
mov
mov
push
cmpsb
push
add
ljmp
add
push
aas
cmpsl
movsl
add
ficoml
imul
xchg
hlt
jae
mov
imul
mov
sbb
add
cmp
add
add
add
es
xchg
addr16
mov
add
roll
int
movsb
inc
inc
cmp
add
dec
andl
adc
mov
or
push
fisttps
repnz
cmp
add
xchg
jecxz
out
xor
movsl
test
push
mov
lahf
inc
pop
out
jge
inc
fwait
lret
into
iret
mov
test
stc
add
mov
push
icebp
lock
lods
push
mov
fldcw
test
mov
add
xchg
push
rolb
mov
mov
mov
cmp
mov
sub
jle
xchg
sbb
aas
les
mov
dec
push
repnz
add
add
pop
and
mov
int
pop
movsl
add
mov
add
inc
add
out
addl
roll
addr16
rcl
into
out
cmp
fildll
cli
or
mov
adc
cmc
shll
mov
lock
je
lds
dec
scas
add
pop
out
pop
xchg
outsl
dec
mov
loopne
mov
adc
mov
or
xor
cli
lock
sti
enter
jae
xor
mov
push
add
dec
mov
mov
sbb
push
mov
cmp
mov
add
sub
sahf
add
mov
adc
jle
or
mov
add
popa
rolb
mov
mov
inc
adc
add
dec
mov
or
mov
rorl
mov
mov
les
add
cwtl
dec
aaa
enter
les
sbb
pop
loope
add
and
jmp
in
mov
pop
add
idivl
rolb
in
out
loop
mov
push
pushf
icebp
sub
xor
mov
push
imul
xchg
add
loopne
mov
adc
inc
das
add
movsl
mov
mov
stos
rcll
iret
xorl
out
sub
dec
call
cmp
pop
cltd
sti
rolb
lret
cli
adc
jo
mov
mov
mov
pop
or
xabort
add
outsb
scas
pushf
pop
dec
fucomip
mov
das
cmpsl
ds
dec
test
add
mov
fs
xor
cmc
xor
cmp
add
xor
mov
xchg
add
fldcw
add
ficompl
mov
in
or
adc
mov
add
test
push
add
or
add
mov
imul
rolb
xchg
pop
and
daa
shll
mov
mov
loopne
mov
xor
xchg
xor
mov
jo
mov
aam
jnp
lock
je
ret
lds
pop
dec
or
add
mov
xchg
and
fldcw
push
jno
lret
mov
hlt
xchg
push
add
fisubl
sub
out
inc
pop
mov
sub
out
addl
mov
add
cmp
push
add
jge
mov
mov
pop
jnp
push
cmp
add
jl
or
mov
inc
filds
push
add
mov
movl
leave
adc
add
lock
mov
ds
mov
fdivr
jl
add
mov
add
imul
mov
xor
cmpl
fdivr
sbb
and
dec
test
lods
xor
xor
mov
pop
rcll
push
add
mov
add
jecxz
add
ficoms
cmp
movaps
mov
ret
out
repz
fxch
sbbl
add
mov
pushf
adc
mov
popf
mov
orl
add
sub
fidivl
xor
mov
in
rep
rcrl
cmp
add
int
mov
mov
pop
insl
out
push
jns
fildll
add
mov
mov
add
addb
ds
mov
mov
loope
ret
aam
lods
xchg
xor
mov
rcl
fwait
xchg
mov
cmpsl
push
mov
cmc
test
jo
mov
pusha
add
jp
addl
cmp
jo
mov
hlt
fiaddl
mov
mov
cwtl
push
cmpsb
mov
and
jl
add
icebp
shrl
popa
ficoml
mov
mov
push
or
sti
cmp
adc
mov
mov
inc
add
and
mov
sub
jne
adc
add
mov
scas
cmpsb
adc
mov
int
lcall
mov
insb
movsb
dec
push
outsl
mov
push
lret
imull
mov
add
mov
jecxz
incb
mov
aaa
pushf
addb
fldl
xor
pushf
add
mov
dec
push
add
mov
repnz
sahf
mov
fwait
inc
add
push
xchg
jl
mov
push
mov
loope
lcall
mov
mov
and
push
add
mov
insl
mov
jp
sahf
cmp
jge
mov
mov
add
mov
aad
add
mov
loope
rolb
mov
fs
mov
or
int3
fcomps
jns
mov
cli
push
jns
movsl
aaa
mov
mov
add
and
into
hlt
insb
lret
repnz
push
xchg
xchg
add
clc
mov
scas
outsb
mov
mov
rolb
cld
add
mov
test
pop
arpl
add
add
pop
sub
pushf
fiadds
adc
mov
pop
mov
cmpsl
sub
sub
pop
jb
mov
cli
shll
cmp
and
jecxz
mov
cmp
bound
mov
lret
int3
out
mov
add
cld
addb
push
sbb
inc
and
and
xchg
rolb
mov
mov
adc
bound
mov
rcll
mov
rolb
mov
sub
lods
insl
rcll
mov
add
add
mov
ret
stos
in
xlat
pop
mov
or
daa
push
or
add
xlat
rcrl
mov
stos
inc
adc
mov
mov
or
pop
addr16
es
add
test
sbb
outsl
dec
jle
push
dec
jg
cwtl
mov
xchg
push
cmc
fs
mov
loop
mov
mov
repnz
mov
and
cmp
and
xchg
push
push
add
mov
mov
das
cli
jecxz
popf
xchg
jge
mov
mov
shr
lcall
add
lcall
mov
mov
std
sub
xor
mov
add
mov
mov
rolb
mov
jp
dec
iret
loope
xchg
je
or
les
cld
pop
inc
add
ljmp
add
jmp
es
pop
pop
das
jmp
jb
mov
or
mov
add
push
xor
mov
jno
aad
dec
int3
bound
mov
mov
add
cmpsb
and
lret
out
dec
mov
sub
mov
lea
gs
jo
mov
mov
sbb
dec
xor
mov
add
or
mov
mov
aaa
lret
testb
push
and
mov
pop
xor
xchg
imul
dec
mov
out
xchg
fldt
sbb
pop
mov
mov
jle
xchg
popf
repnz
dec
lcall
jne
add
xchg
sbb
leave
das
adc
mov
add
mov
push
add
in
jae
es
xor
pop
sarl
mov
adc
mov
addb
mov
mov
add
cmp
add
fdivs
lcall
mov
int
test
test
add
add
ss
push
dec
int
insl
sbb
imul
cmpsl
jne
fists
mov
push
add
push
cmp
cmc
lret
dec
mov
xchg
pop
xchg
mov
fdivs
push
add
mov
add
mov
or
fcmovbe
mov
mov
adc
int
dec
fucomp
push
negb
push
mov
push
frstor
add
imul
mov
sar
mov
add
mov
add
iret
adc
fidivs
cs
push
adc
sbb
xchg
sub
add
imul
add
mov
mov
lret
cltd
xor
add
in
mov
jo
mov
inc
fwait
lods
mov
add
sub
xor
and
mov
out
mov
add
add
add
mov
mov
mov
add
dec
or
loopne
mov
and
and
mov
push
xor
loope
clc
inc
add
enter
hlt
test
mov
rolb
mov
pop
xor
push
add
pop
jbe
mov
add
mov
xchg
xchg
fsubrp
xor
lods
imul
ret
push
add
sbb
aam
outsl
jl
sbb
jecxz,pt
pop
pop
out
out
add
add
add
mov
outsb
or
out
mov
mov
mov
pop
test
or
push
pop
out
jb
mov
xchg
fsubs
mov
jae
add
add
dec
outsb
xchg
filds
add
add
sbb
jp
sbb
push
add
add
and
mov
fsubs
into
ds
and
pushf
mov
xchg
jae
add
movsb
cmp
xchg
fisubrl
add
scas
leave
mov
mov
inc
mov
add
and
mov
or
stos
cmpsb
pushf
stos
outsl
movsb
dec
push
cs
sub
mov
bound
mov
or
mov
rolb
mov
rolb
aas
jle
mov
add
inc
add
popa
jne
fimull
xor
or
inc
inc
add
addb
mov
test
pop
push
cwtl
jno
jns
add
dec
outsb
push
aaa
stc
stos
add
mov
add
pop
add
outsb
aaa
push
add
sbb
repz
and
jl
pop
popa
mov
sub
rolb
mov
add
rolb
mov
sbb
add
xchg
mov
mov
mov
lret
outsl
out
daa
push
mov
jg
add
dec
inc
les
call
push
jo
mov
hlt
mov
mov
xor
dec
cmovge
mov
sti
mov
mov
sbb
ss
add
iret
mov
mov
hlt
or
mov
lahf
sub
ja
loop
mov
jp
add
mov
or
mov
mov
movsb
adc
mov
or
call
push
popa
jg
aas
mov
add
jo
mov
jg
add
mov
rolb
xchg
popf
mov
nop
add
inc
iret
jmp
in
repz
cmp
lret
mov
data16
pop
jmp
xor
lock
push
decb
jbe
rolb
popf
adc
mov
notb
sub
mov
cmp
jge
cmp
cmp
sub
or
add
cmpsb
xchg
add
mov
hlt
sti
push
inc
add
insl
sub
mov
sbb
and
mov
sti
cli
push
push
fs
rolb
mov
fcomps
mov
add
lea
add
mov
sub
add
mov
add
mov
mov
jl
test
add
lds
cmp
in
repnz
xchg
divb
cmc
cmp
popf
or
mov
icebp
pop
push
out
aas
jg
xorl
mov
lahf
out
mov
es
add
push
and
idivl
rolb
jmp
and
cmp
stc
add
loope
outsl
cmp
loop
mov
dec
pop
and
mov
clc
lahf
adc
mov
mov
out
sub
add
mov
inc
popa
stos
sub
jno
pop
push
out
sti
daa
pop
mov
ret
pop
dec
or
cld
xchg
lods
fwait
xchg
cmp
mov
jne
and
popf
mov
add
cmp
outsl
lods
push
mov
push
add
mov
pop
cmp
shll
out
inc
rolb
mov
and
mov
inc
dec
inc
xchg
pop
imul
movsb
ljmp
sub
sahf
push
es
rsm
std
xchg
add
add
aad
cmp
mov
mov
add
and
mov
adc
xchg
insb
fdivrs
fdivl
mov
scas
sub
and
mov
js
xchg
xor
mov
mull
in
imul
mov
push
add
mov
xor
mov
xchg
das
movsl
fimull
mov
adc
mov
push
add
out
xchg
and
mov
add
adc
mov
loop
mov
addb
int
pop
and
sbb
dec
adc
mov
mov
add
sub
test
pop
or
addb
fsubp
add
add
sbb
out
or
or
sbb
addl
push
addb
pop
test
jmp
mov
dec
mov
mov
pushf
inc
add
sub
mov
cmp
lock
mov
cmp
add
cltd
pop
pop
popf
loop
mov
add
insl
dec
xchg
addb
shrl
addl
sbb
shl
add
inc
add
fistl
lods
xor
mov
jbe
stos
lea
push
fwait
xor
pop
add
test
add
cmp
loopne
mov
push
dec
mov
mov
mov
inc
add
bound
mov
mov
nop
add
adcl
mov
cmp
or
mov
aad
and
jbe
mov
cmpsb
leave
pop
cwtl
jns
add
add
push
add
xchg
or
andl
or
sub
sbb
add
rorl
mov
inc
popf
mov
lods
mov
mov
leave
stc
jnp
popa
dec
pop
xchg
fisttpl
dec
and
loope
int
xlat
pusha
add
add
sti
add
std
ja
sbb
fldt
iret
add
add
mov
sub
aam
add
mov
mov
mov
or
sahf
scas
mov
in
add
std
add
test
out
clc
ds
test
xchg
test
test
js
or
add
outsl
jmp
add
mov
mov
iret
mov
movsl
push
cmp
stc
cli
fwait
cld
daa
cmp
ret
pushf
xchg
mov
fcomps
mov
js
and
dec
jne
sar
idivb
sti
jns
dec
imul
mov
add
aad
push
adc
push
adc
jle
add
mov
inc
leave
aam
mov
dec
adc
cmp
imul
pop
cmc
out
outsl
add
mov
out
push
leave
and
popf
aam
clc
inc
add
popa
inc
es
imul
and
adc
enter
xor
and
sbb
jb
mov
adc
shll
sbb
dec
mov
xor
mov
add
mov
in
sbb
push
adc
inc
xchg
insb
aam
jp
inc
xor
add
mov
sub
stos
stos
jle
add
scas
or
push
fnsave
jb
mov
test
out
js
cmp
mov
mov
in
pushf
out
in
icebp
ret
mov
push
lods
ljmp
pop
pop
fs
fimuls
or
daa
adc
mov
add
add
mov
inc
mov
pop
sbb
mov
mov
push
cli
or
xor
mov
addb
je
add
call
sub
dec
imul
fsubrl
bound
mov
rolb
mov
int
sub
rorl
addb
out
sbb
test
hlt
sbb
pushf
and
mov
into
inc
and
mov
mov
or
mov
dec
sub
ds
dec
lds
mov
inc
inc
mov
mov
add
scas
data16
mov
aam
xchg
xchg
add
mov
xchg
fildll
jp
test
jb
mov
and
mov
ret
lahf
inc
xchg
popa
fs
mov
pop
out
pushf
jo
mov
or
xchg
pusha
add
xchg
sbb
insl
push
out
cs
call
mov
mov
add
xlat
mov
loopne
mov
xchg
add
mov
imul
out
add
fisubrs
lret
sub
fwait
ja
sbb
adc
add
pop
adc
rcr
pop
ficoml
clc
scas
push
sbb
jae
adc
decb
jbe
test
enter
sbb
mov
jo
mov
sahf
lret
sbb
fwait
xchg
cmp
fwait
lods
daa
cmp
mov
lods
mov
aaa
lret
mov
inc
in
add
cmp
add
mov
mov
mov
add
fsubl
xchg
or
pusha
add
add
mov
mov
mov
pop
scas
xchg
repnz
xlat
lock
cwtl
mov
xor
fsts
jae
add
icebp
mov
cmp
mov
sub
insl
mov
push
out
mov
mov
mov
add
hlt
out
test
movsl
and
add
adc
dec
fildll
pop
int3
adc
and
add
out
xor
add
imul
ret
pop
popa
inc
add
lea
mov
mov
mov
ret
xchg
add
and
mov
mov
pop
xor
mov
loope
aad
rolb
mov
mov
ja
pop
mov
daa
jmp
sub
mov
scas
xor
jno
inc
mov
mov
dec
add
jo
mov
insb
testb
sub
popa
mov
or
and
mov
in
movsb
cwtl
dec
sbb
jmp
or
mov
mov
loop
mov
mov
inc
add
out
fbstp
and
add
ficoms
xchg
xor
mov
add
mov
adc
add
repz
mov
daa
sub
ss
sbb
stos
mov
add
mov
add
lret
sbb
add
mov
push
pop
int3
fdivl
nop
add
pop
cmp
clc
das
repnz
xchg
mov
out
testb
sbb
mov
pop
rolb
mov
loope
add
test
jnp
rolb
arpl
add
xor
mov
insl
filds
add
mov
xor
add
sub
out
jg
js
lods
repz
add
jne
out
or
sbb
mov
dec
mov
mov
cmp
dec
loopne
mov
repz
pushf
cmp
mov
sbb
dec
jbe
add
mov
nop
add
add
xor
mov
cltd
call
mov
push
jno
cwtl
jnp
and
mov
and
mov
xchg
inc
daa
std
jnp
push
xchg
aas
out
push
add
out
ljmp
add
lret
mov
add
add
push
dec
in
xchg
add
mov
sbb
arpl
les
add
push
add
loopne
mov
mov
xchg
scas
mov
add
ret
leave
xchg
add
fisubrs
jge
push
xchg
subl
pop
dec
cmp
ret
mov
lret
popf
xor
mov
mov
jbe
add
push
mov
mov
cmp
inc
add
into
test
add
adc
xor
add
jnp
repnz
nop
add
and
cmp
push
cmpl
sti
js
sbb
loopne
mov
in
add
mov
sub
lds
jno
cmp
aas
leave
mov
add
mov
mov
add
mov
ffree
push
pop
fisubrl
mov
nop
add
add
mov
mov
scas
sbb
orl
mov
sahf
or
repz
mov
add
sbb
mov
ljmp
jae
push
cltd
call
rolb
mov
movsb
cmpsb
xchg
rcr
pop
inc
cld
sub
add
call
data16
sub
rolb
mov
sub
mov
sar
or
dec
popa
jo
mov
jle
inc
add
sbb
stos
addb
cld
fcompl
mov
addr16
rolb
mov
inc
add
add
pop
xchg
add
mov
scas
notl
cmp
mov
mov
add
mov
xor
mov
add
arpl
pop
test
cmpl
mov
in
and
push
jne
add
mov
xor
pushf
das
jmp
rolb
mov
mov
jno
addb
mov
xor
adc
nop
add
add
adc
mov
add
pop
push
subl
pop
mov
sbb
daa
out
xlat
xlat
jbe
rcr
xchg
add
fisubl
jno
pop
scas
xchg
js
subl
jge
pop
out
pop
fbld
mov
xlat
insb
cmp
add
mov
mov
loopne
mov
lock
inc
add
sti
clc
push
imul
add
mov
push
xchg
xchg
loope
in
out
fsub
pop
adc
fdivp
in
cmp
mov
mov
or
push
add
adc
xchg
cmp
xor
mov
test
mov
pop
pop
pop
leave
sbb
fists
add
divl
dec
adc
mov
jge
sar
xchg
addb
mov
sbb
add
fcomip
push
pop
sub
jl
push
add
jle
iret
lret
jg
add
pop
iret
push
fidivrl
add
add
mov
dec
insb
and
mov
jp
mov
rolb
mov
ja
lea
pop
mov
outsl
popf
ss
pop
lcall
or
call
add
cmp
inc
shrl
mov
mov
lods
lret
or
add
pop
adc
adc
add
jge
xor
mov
add
add
outsb
pushf
rolb
mov
lcall
movsl
add
mov
add
sub
leave
int
loope
aas
sbb
icebp
mov
sarl
jo
mov
pop
xchg
fnstsw
xor
mov
mov
sub
mov
or
add
popf
ja
rcll
cmp
fidivl
ds
scas
insl
adc
mov
clc
sub
mov
add
add
jns
add
sub
testl
mov
mov
dec
fwait
pop
mov
mov
or
mov
les
mov
add
ret
fidivrl
mov
xor
adc
push
inc
add
je
bound
mov
mov
push
add
mov
push
cmp
jbe
stos
int
push
xlat
sbb
inc
jne
xor
mov
mov
jmp
cmp
xchg
add
lods
lret
jno
jle
cmp
add
mov
bound
mov
and
mov
adc
add
sbb
fnstsw
mov
mov
jg
aas
test
and
leave
rcl
add
mov
daa
sahf
in
dec
inc
ja
add
rcrl
sbb
mov
mov
add
fcompl
stos
addr16
lods
rolb
mov
test
add
mov
add
icebp
addr16
mov
mov
sbb
dec
aam
inc
inc
mov
push
addb
pop
xchg
xor
add
fcomip
mov
push
popa
sti
jae
imul
mov
sbb
outsb
mov
nop
add
inc
loopw
mov
add
pushf
shll
nop
add
mov
or
xor
popa
inc
add
mov
inc
add
push
bound
mov
sub
add
inc
add
mov
mov
mov
sub
cmp
jo
mov
popf
test
jo
mov
add
jne
pop
fdivr
inc
jl
mov
roll
cmp
xlat
jg
lods
mov
jne
add
rolb
mov
dec
xchg
jnp
aas
mov
push
pop
mov
iret
and
ret
mov
adc
js
add
rorl
cmp
mov
mov
add
fisubrs
lea
add
inc
xlat
cli
sbb
es
fldcw
fucomip
add
movsl
in
sbb
xchg
jb
mov
es
cld
mov
mov
in
add
dec
mov
mov
aaa
rolb
mov
in
data16
rolb
add
iret
jae
add
enter
add
mov
lds
icebp
popf
test
repnz
mov
add
mov
filds
xor
mov
mov
and
cmp
popa
xor
mov
loop
mov
add
mov
xchg
jg
jmp
mov
rcl
bound
mov
push
dec
loope
push
pop
inc
add
mov
fistps
inc
adc
in
xchg
push
outsl
pop
mov
add
cmp
jns
imul
addb
iret
mov
mov
into
fs
mov
xlat
cmp
add
loopne
mov
push
mov
or
mov
rolb
mov
jp
scas
fucomp
and
mov
adc
cmp
push
or
jle
sub
sti
mov
pop
js
add
out
add
pop
fildll
xor
mov
add
push
movsb
lods
test
repnz
adc
rolb
int3
mov
mov
inc
int3
pop
imul
add
fisttps
pop
mov
add
mov
call
divb
add
mov
cwtl
add
or
pop
lods
daa
fdivr
inc
or
add
call
and
or
leave
mov
push
add
in
sahf
adc
cltd
jae
add
cltd
fst
hlt
cmp
mov
cmp
inc
jae
mov
pop
lcall
xchg
xor
sub
mov
dec
or
gs
nop
add
stos
data16
lods
iret
fwait
cld
js
jbe
addr16
daa
add
out
mov
add
push
add
mov
ljmp
sub
push
push
add
add
lods
movsb
ret
cmpsl
in
add
mov
add
xchg
jmp
pop
out
xchg
daa
cmp
cld
ret
inc
add
sti
aad
rolb
sub
add
mov
mov
cld
movsb
or
repz
inc
add
lahf
mov
push
mov
add
mov
orl
out
stos
dec
add
sbb
mov
movsl
fwait
add
and
pop
out
incb
cmp
add
mov
mov
mov
inc
je
lret
pop
inc
aas
and
rolb
mov
add
in
sub
je
inc
add
xchg
scas
mov
in
jb
mov
mov
mov
in
fprem1
or
push
cli
push
je
stc
mov
mov
shll
fldenv
push
add
fisttpl
push
addr16
enter
add
mov
jg
cmpsl
ret
icebp
int3
sub
sbb
test
sahf
clc
jmp
fsts
or
add
pop
stc
xor
mov
mov
push
clc
fiaddl
inc
add
pop
ret
xchg
adc
xor
mov
test
xchg
ret
int
jg
dec
add
cmp
mov
adc
push
or
mov
jecxz
jge
jecxz
fidivl
add
add
enter
hlt
fcmovnu
pusha
add
mov
xchg
inc
sub
fcoms
fs
out
xor
aam
ja
cmp
add
mov
ss
mov
fwait
xor
enter
mov
in
mov
stc
hlt
push
int3
testb
addr16
add
add
or
and
push
fisubl
std
movsb
outsb
in
cmp
and
jb
mov
pop
inc
test
sbb
dec
movsl
mov
lds
into
addb
cld
lds
ss
repz
jle
sbb
rolb
mov
or
add
dec
push
sub
fs
mov
lcall
mov
mov
stos
test
aad
bound
mov
add
xor
mov
jle
sub
push
and
add
fimuls
cli
bound
mov
addr16
int3
jmp
pop
adc
add
add
adc
arpl
mov
jno
xchg
pop
jnp
in
jo
mov
add
mov
pop
push
add
mov
mov
scas
ret
imul
inc
or
xor
mov
jnp
mov
xor
mov
popa
mov
add
dec
mov
mov
vmread
das
es
or
mov
mov
ss
dec
nop
add
aaa
daa
xor
mov
mov
dec
jge
test
add
jne
push
mov
or
sbb
sub
mov
mov
outsl
test
loop
mov
pop
mov
jg
xchg
add
in
or
mov
mov
add
xchg
rolb
mov
loop
mov
inc
xchg
pop
incl
arpl
add
ficompl
cmp
cmp
adc
mov
fisubl
das
mov
mov
test
imul
lret
xor
cmp
mov
xchg
mov
add
pop
dec
sahf
or
lea
push
xchg
push
inc
mov
mov
addl
xor
add
cmp
push
add
insl
add
mov
add
mov
decl
iret
pop
sbb
jne
sti
adc
mov
xchg
loope
or
add
jge
xor
mov
add
add
rolb
mov
push
xlat
sub
mov
add
pop
in
mov
xor
fucomip
call
add
push
inc
push
and
lcall
push
jb
mov
xchg
adc
mov
imul
lods
aas
scas
or
xor
mov
fildl
add
rcl
and
jg
mov
add
mov
std
cwtl
mov
add
mov
mov
dec
push
pop
push
ljmp
jg
fmuls
ja
xchg
cmp
lret
ret
pop
push
cmp
rcrl
rcll
xchg
pop
xchg
sbb
sti
lret
into
jne
loope
adc
mov
pop
xchg
jg
adc
cmp
mov
inc
addb
cs
xor
adc
and
mov
add
scas
sbb
call
cmpsb
and
call
les
popf
nop
add
add
stos
and
mov
and
mov
dec
fistl
mov
push
cmpsb
xor
bound
mov
testl
add
cmp
jle
fcmovbe
add
add
jns
inc
inc
push
fwait
mov
add
mov
add
aam
mov
icebp
out
cmp
imul
call
xchg
sub
addb
add
fiadds
cmpsl
sbb
mov
cwtl
pop
add
mov
inc
ljmp
icebp
lahf
call
iret
movsl
dec
ret
test
mov
dec
cmp
mov
jns
add
in
pop
in
scas
dec
inc
push
enter
ss
enter
mov
pop
xor
push
add
out
scas
int
ret
mov
adc
add
add
fdivl
sbb
test
sbb
rolb
mov
pop
pop
fidivs
mov
xor
scas
xchg
add
outsb
sbb
mov
lods
test
fidivrl
in
addb
jno
es
lcall
rolb
mov
or
fwait
sub
andl
int3
inc
ret
in
mov
or
sbb
push
test
in
sub
mov
pushf
push
mov
mov
das
xchg
add
mov
jge
dec
add
or
add
add
push
mov
mov
add
mov
dec
icebp
jno
addb
int
lea
adc
jg
push
sbb
jmp
fstl
add
add
in
jg
xchg
ret
inc
mov
fwait
xchg
in
xchg
movsb
or
outsl
push
mov
ret
fcmovu
or
movb
adc
add
cmc
xor
mov
push
fisttpll
add
mov
mov
add
mov
add
das
sub
jnp
sbb
lds
mov
jb
mov
pop
stos
jno
pop
out
xchg
std
std
push
mov
mov
in
inc
add
mov
pop
xlat
clc
dec
aaa
sub
lods
mov
loope
adc
mov
sub
jle
sbb
cmpsb
jbe
add
mov
jne
mov
or
jne
or
hlt
js
xchg
addr16
and
mov
mov
add
divl
dec
sub
popa
jne
pop
cmp
add
mov
out
popa
cmp
adc
mov
add
mov
xchg
push
jb
mov
push
in
rcrl
in
add
es
sbb
aad
dec
sbb
mov
mov
insl
mov
fnstenv
xchg
mov
add
add
pop
cmp
add
xchg
add
or
rorl
mov
adc
mov
add
push
add
pushf
jns
mov
jo
mov
xchg
pop
cmp
inc
lret
scas
push
icebp
ficomps
mov
push
push
adc
and
int3
cld
mov
sub
mov
or
addb
pop
jge
fistpll
rolb
mov
add
mov
aaa
jmp
ret
pushf
sbb
lea
test
sub
add
mov
lds
cltd
sbb
test
pop
fidivs
jnp
add
push
leave
mov
inc
mov
mov
xor
in
jnp
pop
mov
mov
add
add
mov
jmp
fidivrs
or
fcoms
mov
repnz
xchg
mov
adc
mov
lods
push
sub
lods
push
in
sbb
mov
push
push
xor
repz
add
movsb
mov
mov
scas
xchg
cmp
push
xchg
jns
movb
cli
pop
fmuls
mov
push
dec
mov
aam
addb
in
mov
enter
mov
add
sahf
std
dec
mul
lret
setne
sbb
xchg
insb
loope
add
add
mov
movsl
js
dec
xchg
inc
add
push
mov
mov
mov
fcom
add
mov
mov
rolb
aaa
stos
js
loop
mov
rolb
mov
sub
push
push
in
add
xchg
add
mov
add
lods
clc
sbb
enter
imul
xor
ja
les
mov
dec
ret
pop
fcom
add
xchg
add
mov
and
add
inc
add
add
mov
dec
mov
adc
push
xchg
fwait
add
mov
mov
add
inc
add
mov
xor
xlat
sbb
jae
sbb
in
add
dec
sub
aad
stos
movsb
xor
mov
jae
jae
adc
mov
dec
cmp
pop
sub
and
add
ficompl
pop
or
lcall
jge
dec
getsec
cmc
movsb
gs
add
mov
cmc
xchg
add
or
sahf
aaa
sbb
ret
ss
mov
jl
add
push
popa
mov
mov
pop
pop
loop
mov
filds
fs
gs
and
push
push
mov
xchg
dec
inc
test
outsb
iret
cwtl
adc
cli
jae
mov
xchg
lods
imul
mov
aaa
xchg
mov
gs
movsb
adc
mov
test
add
addb
add
test
daa
cmp
add
mov
xor
mov
je
ja
and
jecxz
add
pop
addb
les
lds
ss
dec
lret
and
mov
lahf
inc
jp
sti
mov
xlat
fs
push
adc
dec
int
push
push
sbb
push
cmp
mov
aaa
xchg
add
mov
mov
adc
pop
fistpl
cwtl
pop
lock
mov
and
rolb
push
add
mov
or
add
add
jno
and
repnz
sub
push
jbe
xchg
mov
or
cmp
add
mov
add
cmp
add
js
and
mov
inc
inc
add
mov
lock
outsb
dec
stos
sbb
push
add
sbb
add
mov
cmp
ret
testl
mov
aaa
jecxz
ss
cmc
and
mov
sbb
push
dec
cmp
imul
xor
mov
push
aas
or
or
jmp
mov
imul
jle
shll
fistpll
mov
call
mov
mov
pop
cmp
pop
sub
fstpl
lret
add
int
inc
mov
mov
sarl
shll
and
jle
add
or
sbb
mov
nop
add
add
mov
or
xchg
aad
push
push
push
add
imul
mov
add
ds
xor
stos
jg
rolb
jnp
and
mov
add
mov
addb
inc
add
addb
mov
out
das
mov
into
adc
add
push
add
das
jmp
add
mov
or
mov
in
add
mov
mov
mov
pushf
std
aad
push
sbb
sbb
xor
cmc
push
push
mov
cs
lea
sub
sub
scas
insl
push
outsl
rcrl
add
sbb
mov
mov
add
shrl
jne
imul
insl
out
mov
clc
pop
xor
add
cmp
adc
xor
mov
mov
inc
xchg
ret
fiaddl
and
mov
cmp
add
pop
xor
cmp
sub
mov
or
cli
loope
mov
mov
jb
mov
add
addb
inc
rolb
mov
aas
sbb
add
imulb
mov
vpshaw
js
add
add
pop
jmp
adc
mulb
mov
ja
pushf
and
xchg
rolb
mov
add
adc
add
sub
addb
mov
mov
movsb
scas
and
xchg
xchg
jecxz
rcll
add
movntps
addb
inc
add
clc
inc
fildl
insb
into
dec
ds
cmp
ret
add
mov
hlt
xchg
nop
add
sub
push
push
or
mov
xchg
add
add
dec
and
fcoml
xor
out
xchg
fdivs
mov
and
mov
mov
imul
rolb
mov
rolb
mov
add
repnz
pushf
rcl
stos
pop
les
mov
push
sbb
lret
mov
mov
das
inc
add
sub
push
inc
add
ds
test
add
inc
or
sbb
xchg
add
sub
add
in
fidivs
xchg
enter
into
xchg
push
and
mov
mov
daa
arpl
adc
pop
inc
add
mov
cmp
sub
push
xchg
mov
inc
rolb
mov
inc
add
sbb
jbe
rep
ss
push
push
add
add
inc
push
pop
dec
jg
adc
push
add
add
lcall
and
add
and
fistl
mov
xchg
dec
dec
sbb
imul
call
incl
adc
pop
dec
popl
push
data16
mov
sbb
jecxz
lret
cmp
add
test
rolb
jmp
xchg
inc
add
aas
dec
mov
xchg
and
mov
jbe
ds
add
add
dec
sbb
mov
sub
daa
in
jg
enter
clc
cmc
push
dec
adc
mov
jns
lret
lcall
mov
mov
je
push
add
dec
lcall
int
out
add
movsl
jo
mov
stos
xchg
cltd
push
pop
fdivs
stos
xchg
dec
aaa
lret
lret
loopne
mov
repz
mov
loopne
mov
add
mov
add
inc
std
and
mov
add
push
aas
cmp
pop
xor
rolb
mov
add
imul
mov
fwait
rcrl
scas
add
mov
data16
mov
addb
in
sahf
aaa
xchg
jb
mov
and
mov
add
dec
pop
dec
pusha
add
fildl
ljmp
cvtpi2ps
mov
push
mov
sub
dec
and
pop
dec
ds
xlat
sub
jl
add
pop
arpl
pop
mov
inc
leave
sub
push
stos
loope
add
push
in
push
add
add
xchg
outsl
jbe
xchg
lret
xchg
repnz
cmc
enter
sub
add
xor
addb
adc
mov
aad
xchg
cld
outsb
add
mov
repnz
mov
sub
scas
leave
sbb
xchg
xchg
pop
js
xor
add
lods
ret
enter
idivl
loope
ret
lock
mov
pop
and
mov
pop
int
mov
jl
insb
in
add
mov
pushf
js
jecxz
xchg
frstor
in
aam
xorl
xchg
test
xchg
hlt
dec
aaa
pop
addr16
sbb
or
xchg
inc
aam
mov
rolb
jge
and
mov
lds
clc
inc
int
hlt
lds
add
mov
mov
cmp
addb
lods
push
sbb
mov
push
adc
dec
and
iret
xlat
lcall
ret
shl
icebp
test
sbb
add
mov
mov
iret
cmpsb
adc
ss
xchg
push
mov
test
xor
mov
or
test
sbb
and
movsb
icebp
cs
loope
outsl
call
add
int3
arpl
push
gs
movsb
mov
cmpsb
jmp
add
movsb
iret
adc
mov
icebp
fcmovnbe
add
dec
movb
adc
mov
addb
int3
xlat
or
or
mov
pop
lods
movsl
into
fildll
cmp
stos
inc
or
fisttpl
pop
or
rolb
mov
and
lcall
xor
in
xor
loopne
mov
in
scas
call
sub
add
out
mov
add
loop
mov
add
and
mov
add
sahf
stos
mov
mov
fdiv
and
pop
pop
sbb
enter
hlt
push
mov
and
pop
in
sub
add
loope
addb
mov
ja
in
outsb
jnp
jecxz
add
adc
mov
pusha
add
push
lds
push
leave
ja
lods
int3
into
stos
inc
add
xchg
mov
out
popf
into
cld
xor
mov
mull
xchg
arpl
pop
arpl
lret
push
jae
test
aam
scas
addb
hlt
jb
mov
cmpsb
sbb
scas
pusha
add
push
add
out
mov
mov
jl
jmp
sahf
and
xor
mov
std
das
rcll
outsb
in
in
rolb
mov
mov
add
iret
sbb
or
add
mov
imul
into
inc
xorl
push
mov
mov
mov
addb
mov
hlt
inc
daa
fidivs
loope
jnp
lret
mov
ficoms
mov
stc
add
push
imul
add
bound
mov
in
xor
push
push
push
add
and
mov
rcrl
pop
incb
lret
cmpsl
clc
sbb
adc
imul
add
in
dec
add
mov
cmpsl
mov
mov
out
dec
mov
jmp
mov
nop
add
jno
scas
or
xlat
fldl
cmpsb
inc
add
jl
mov
jae
repnz
add
mov
mov
pop
loope
jo
mov
scas
jge
int3
mov
sahf
movsb
mov
inc
push
inc
mov
xchg
testb
in
jg
out
jnp
lods
aam
cmp
dec
mov
add
mov
mov
inc
sub
push
add
das
addb
aas
repz
mov
loope
les
mov
mov
mov
cmp
hlt
es
push
mov
dec
jns
add
mov
nop
add
sub
jmp
pop
jno
call
add
sbb
dec
test
aaa
ds
rolb
mov
fwait
cwtl
mov
push
divl
add
je
mov
mov
dec
or
mov
add
mov
xchg
jae
add
xor
pavgw
mov
sbb
or
fisubs
pop
jno
rolb
mov
cltd
pop
mov
addr16
and
pushf
pop
xor
mov
mov
movsl
xchg
mov
xchg
repnz
add
pop
mov
mov
mov
mov
mov
out
sahf
jbe
add
bound
mov
in
cmc
push
add
movsb
mov
push
inc
int
add
jne
aaa
lcall
or
ss
sub
add
pushf
out
lods
fldt
add
mov
movsl
rolb
into
xor
addb
fsub
add
sub
nop
add
add
mov
xor
mov
mov
mov
add
sub
mov
add
cli
cs
mov
jmp
jmp
stos
and
mov
mov
add
or
mov
mov
sarl
sbb
bound
mov
xchg
jbe
insl
lds
add
xor
mov
add
jo
mov
add
jg
and
imul
sbb
cs
jns
xchg
add
xlat
or
add
sti
dec
ret
cld
push
cmp
fwait
cmpl
cltd
cmp
imul
in
jnp
test
dec
inc
mov
iret
cmpsl
adc
rolb
fst
add
xchg
loope
insl
mov
scas
cmpsb
cmp
dec
shll
aaa
fsubr
rolb
mov
jg
enter
clc
fdivrl
jmp
add
aam
sub
rolb
mov
add
fstl
mov
cli
inc
arpl
xor
test
adcl
mov
add
lods
arpl
add
inc
cmp
add
and
in
sub
push
jecxz
xchg
cs
jns
test
dec
mov
mov
cmp
cmp
add
test
mov
addb
rorl
cwtl
int3
adc
call
loopne
mov
addl
fs
sbb
ss
stc
push
xchg
daa
pusha
add
fsubs
testl
testb
aaa
jns
mov
mov
mov
and
mov
and
mov
lea
iret
icebp
stos
pop
adc
mov
addb
movsb
jnp
sbb
xor
mov
and
mov
ret
push
jae
add
mov
cld
hlt
imul
add
mov
mov
mov
mov
jns
add
mov
add
sti
popa
xor
mov
clc
cmpsb
filds
mov
pushf
out
add
mov
cmp
leave
cmp
mov
lcall
push
fnstsw
aad
add
sub
add
add
cli
and
mov
sahf
mov
shll
mov
add
mov
out
cmp
sbb
std
mov
hlt
mov
in
filds
addb
std
jp
mov
mov
test
mov
shll
inc
int
popf
shll
imul
cwtl
jno
in
sti
imul
pop
xchg
pop
lods
fstps
mov
add
je
pop
ljmp
mov
xchg
rorl
in
jnp
xchg
rolb
mov
sti
and
add
fcoms
mov
stos
pop
in
push
sub
testl
in
add
lahf
sbb
sbb
add
pop
test
cmc
nop
add
xor
mov
jne
jbe
mov
add
addb
adc
sbb
mov
add
push
inc
pop
or
add
dec
outsb
lret
loope
mov
cmp
sahf
mov
push
xor
scas
mov
mov
dec
cmp
sahf
cmova
sub
jecxz
add
dec
ret
loope
add
mov
xchg
loopne
mov
add
gs
aaa
shr
pop
xor
jb
mov
adc
lret
ret
jo
mov
inc
xor
mov
popf
cld
jo
mov
mov
sbb
add
xchg
pop
dec
jns
jle
add
test
jns
fisttps
fisubl
add
dec
mov
mov
ficoml
sbb
loop
mov
icebp
mov
and
mov
xchg
mov
pop
sbb
rolb
mov
setbe
mov
in
cmpsl
mov
enter
or
pop
aam
movsb
sub
mov
pop
les
jge
add
add
loopne
mov
jecxz
in
repz
das
call
ficoml
sub
mov
loopne
mov
mov
pop
sub
pop
xchg
jo
mov
mov
mov
add
cs
dec
jl
es
mov
mov
mov
movsb
xor
xor
sub
xor
addb
cmpl
enter
add
xor
xchg
std
push
add
loop
mov
dec
push
add
in
mov
outsl
arpl
int3
clc
pop
mov
mov
ret
push
imul
jmp
add
mov
aad
cmp
cs
mov
mov
jge
jge
jl
fnsave
mov
cmpsb
sbb
out
repz
xor
mov
dec
dec
addr16
push
fdivrp
ret
and
mov
or
lcall
arpl
daa
jge
add
add
xchg
lds
les
jl
cltd
push
xchg
int
bound
mov
xchg
add
mov
mov
jno
dec
inc
add
and
mov
dec
pushf
adc
cs
mov
jno
ret
mov
stc
lods
repz
sbb
or
movsl
insl
dec
subl
push
mov
std
add
hlt
daa
sub
xor
mov
pop
inc
mov
decb
jl
pusha
add
xor
mov
add
imul
inc
add
roll
add
sbb
push
pop
mov
lahf
sahf
sbb
xchg
adc
hlt
push
ds
cwtl
add
mov
divb
xchg
mov
jne
push
mov
push
out
les
mov
xchg
ja
int3
mov
fcmovbe
inc
fistps
test
stos
fcompl
gs
xchg
add
sbb
add
add
test
rolb
mov
loope
fisubrl
or
pop
add
push
cltd
jo
mov
jo
mov
add
outsl
mov
jl
lds
jne
mov
xchg
mov
fldt
arpl
or
inc
aad
fmulp
jns
leave
bound
mov
and
mov
mov
mov
shrl
add
rolb
mov
add
jne
xchg
add
das
daa
rcrl
dec
rolb
mov
and
push
imulb
mov
mov
out
pushf
ret
mov
jecxz
cli
imul
addr16
mov
add
add
mov
mov
cmp
push
adc
mov
nop
add
test
jb
mov
ss
cld
jmp
aad
pop
rcr
punpckhwd
xor
mov
test
insb
jno
add
jne
rcrl
scas
repnz
adc
push
sbb
addr16
and
pusha
add
adc
mov
movsb
add
addb
cmp
arpl
add
mov
and
add
add
mov
mov
cs
mov
inc
dec
popf
rorl
add
shll
add
mov
addl
pop
mov
pop
test
add
pop
push
add
and
mov
jp
out
push
push
adc
mov
xchg
bound
mov
mov
cld
mov
pop
lret
movsl
push
mov
or
adc
xor
mov
repz
mov
test
xchg
adc
add
mov
aas
popa
add
and
pop
mov
movsb
popf
dec
psubusw
push
add
or
aad
sahf
cmc
sbb
ret
xchg
adc
add
cli
into
cmp
and
clc
int3
adc
add
or
aas
rolb
mov
jl
mov
jl
inc
fmull
dec
xor
mov
mov
test
mov
int3
out
mov
jne
test
add
add
inc
dec
or
xchg
xchg
popf
and
add
jbe
add
mov
mov
mov
mov
ss
inc
out
iret
fisttpl
add
mov
rolb
mov
dec
and
cmpsl
out
imul
mov
imulb
loope
ret
cmp
push
repnz
std
jl
mov
fnstcw
and
push
mov
adc
sub
dec
pusha
add
mov
inc
jb
mov
aam
mov
dec
push
icebp
sbb
pop
mov
sti
mov
lcall
rolb
mov
mov
mov
add
mov
and
push
add
aad
lds
imul
add
stos
hlt
ds
pop
fwait
adc
mov
sub
mov
sahf
loope
cmc
mov
push
inc
or
add
add
mov
mov
fisubl
mov
stos
or
xchg
bound
mov
mov
and
test
add
mov
push
push
test
test
add
inc
and
mov
mov
add
sbb
cmp
mov
add
and
mov
adc
adc
mov
sub
inc
sbb
xor
mov
pop
insl
testb
pop
xchg
ret
add
cmp
ret
add
mov
add
cmp
mov
dec
pushf
xor
mov
repnz
and
mov
mov
sahf
adc
mov
pop
dec
mov
mov
add
mov
mov
sub
inc
add
fmull
sahf
push
dec
pusha
add
inc
add
loope
add
or
cwtl
dec
xor
fxch
ret
cmp
clc
dec
call
sub
jg
rolb
mov
or
jmp
add
dec
hlt
test
jns
lea
push
jbe
mov
mov
outsb
inc
xlat
lods
lret
call
sbb
add
rolb
cmp
or
cltd
jl
icebp
adc
jmp
pushf
sub
and
cmc
inc
xchg
rolb
mov
scas
push
add
in
cld
add
movsb
and
mov
cld
push
pop
xlat
cmp
mov
testb
add
mov
mov
mov
add
mov
push
movsl
jl
cmpl
push
sbb
add
sahf
repz
dec
inc
add
insl
or
pusha
add
inc
psubsb
xor
inc
test
add
bound
mov
mov
dec
ja
add
add
add
mov
mov
add
std
push
fstps
mov
xchg
sbb
xor
mov
ljmp
movsl
les
lods
push
mov
mov
inc
fcompl
xor
aas
mov
mov
insb
dec
lods
mov
sub
inc
push
dec
xchg
mov
scas
and
mov
rolb
mov
lret
sub
push
sbb
es
out
fmuls
aaa
and
pop
movsl
cmp
icebp
mov
jle
stos
testl
or
rolb
mov
out
push
pop
xor
test
push
pop
inc
add
mov
jbe
jns
mov
sub
lret
mov
add
mov
loope
imul
fs
dec
pop
mov
shll
mov
mov
and
cmp
rol
and
push
add
jl
add
sahf
mov
add
xor
add
add
mov
inc
xchg
scas
dec
sub
cmp
popf
es
aas
movsl
scas
adc
mov
scas
push
add
mov
adc
mov
mov
into
test
add
lock
add
inc
lods
hlt
out
int
stc
insb
lods
bound
mov
jbe
out
hlt
gs
enter
mov
roll
add
sbb
pop
adc
mov
add
dec
mov
insb
in
sbb
mov
test
xor
rolb
mov
decl
jnp
push
sbb
add
outsl
lret
pusha
add
add
mov
xchg
inc
xchg
xchg
sbb
pop
mov
add
xchg
cmp
add
cmpsl
or
daa
xchg
aas
cmpsw
xchg
out
adc
mov
pop
xor
cmp
pushf
sbb
mov
lret
pop
inc
xchg
add
jge
xor
mov
scas
rolb
mov
add
mov
mov
in
jae
add
aad
push
mov
inc
pop
leave
addb
testb
rolb
mov
mov
mov
test
mov
add
std
dec
js
sbb
je
enter
fsts
add
push
add
out
inc
push
scas
and
inc
or
dec
jecxz
out
pop
rolb
cwtl
and
jae
push
call
rorl
pop
lods
add
das
fsubs
mov
mov
add
leave
loope
clc
and
mov
dec
mov
mov
mov
pop
jb
mov
add
mov
pop
xor
mov
push
aad
notl
add
mov
fstpt
in
aaa
dec
jns
mov
loop
mov
add
mov
add
in
dec
mov
mov
mov
lds
ljmp
add
mov
jp
add
jnp
enter
sbb
and
into
or
pop
dec
xor
in
add
incl
jg
add
fldcw
mov
adc
ja
lret
pusha
add
or
hlt
scas
ret
adc
mov
dec
cmp
xchg
lods
iret
sub
push
cmp
mov
in
dec
repz
mov
fimull
jne
mov
mov
mov
add
xor
mov
add
push
mov
mov
imul
xchg
shll
mov
sub
add
add
sub
dec
lret
push
pop
lea
push
in
cmp
pop
or
adc
mov
add
push
add
pop
daa
into
jge
jno
add
add
mov
add
and
mov
jl
clc
or
or
repnz
out
push
addr16
in
scas
jae
pushf
pop
dec
hlt
fisubs
mov
lret
leave
int
xor
mov
mov
imul
add
xchg
add
out
or
jp
aad
fildl
sub
popa
ret
stc
loopne
mov
ds
popa
in
gs
add
bound
mov
test
mov
jl
jge
insl
xchg
push
add
xchg
mov
jp
jge
inc
aad
inc
ss
mov
mov
movsb
xor
cwtl
out
add
cwtl
cmc
je
pop
xchg
ljmp
dec
push
dec
mov
popa
popa
xor
mov
push
rolb
jg
add
cmpsb
mov
mov
push
jb
mov
inc
leave
cld
lods
sbb
add
mov
and
mov
adc
movsb
mov
mov
mov
jno
lret
push
pop
mov
add
movsl
aad
add
push
add
mov
mov
mov
push
mov
add
les
push
add
mov
cmp
test
dec
mov
mov
xrelease
fimull
jmp
add
add
idivl
push
mov
stc
xchg
mov
out
mov
add
xchg
test
pop
rcll
enter
push
cmp
mov
rorl
adc
std
test
add
mov
pop
aas
std
repz
jb
mov
jge
add
mov
mov
add
rolb
jmp
lea
rolb
das
addb
test
add
in
or
adc
xchg
leave
les
add
dec
push
add
popa
push
les
push
xchg
sbb
mov
test
add
adc
mov
push
sti
xchg
jnp
add
in
jp
sub
xlat
dec
lret
mov
enter
add
adc
ss
call
adc
mov
or
stos
out
ficomps
pop
inc
sub
jl
xchg
and
aas
adc
sub
pop
xchg
add
sub
loopne
mov
and
jp
sub
mov
cmp
pop
pop
mov
mov
mov
mov
mov
xor
jno
sub
fstp
insb
mov
enter
mov
xchg
mov
add
jg
add
je
fs
in
jo
mov
add
add
dec
clc
push
gs
adc
jl
jbe
data16
jae
lods
adc
mov
ljmp
in
jo
mov
stc
jge
add
clc
mov
mov
jno
mov
arpl
test
out
repz
lcall
mov
sub
xchg
add
dec
lcall
int
add
fldcw
mov
lahf
addb
fistl
add
rolb
mov
fisttps
adc
mov
add
xor
loopne
mov
ret
in
shrl
add
aaa
in
adc
mov
mov
xchg
ljmp
jnp
pop
cld
aad
pop
repnz
dec
push
ffreep
mov
and
mov
cmp
scas
insl
pop
xor
rolb
imull
loope
ds
adc
mov
xchg
pop
clc
jecxz
gs
pop
jmp
stos
jle
xchg
nop
add
add
mov
add
testb
std
mov
mov
mov
dec
pop
rolb
adc
arpl
gs
add
int
add
call
push
mov
cmp
ds
mov
or
int
jns
mov
mov
mov
rolb
lea
lods
xorl
call
cmpsb
add
push
add
mov
dec
cli
bound
mov
jns
add
mov
inc
data16
mov
cmc
pusha
add
out
pushf
insl
sub
pusha
add
add
fdivl
fldcw
fstpt
add
fstpt
pop
adc
add
mov
jecxz
add
pop
xchg
add
add
mov
mov
xchg
adc
stc
icebp
mov
scas
pop
dec
aas
in
into
loop
mov
fs
add
int
add
and
xchg
mov
into
addb
jbe
mov
loop
mov
leave
imul
mov
mov
pop
ljmp
add
imul
mov
cmp
xor
aas
aaa
cmpsl
sbb
mov
testb
cmp
sti
jne
add
add
mov
stc
mov
mov
mov
loope
mov
test
jb
mov
lea
rolb
mov
xchg
xchg
lock
add
scas
ss
xchg
pop
fcomip
mov
add
lds
je,pn
fwait
cs
mov
pop
mov
mov
and
inc
xchg
dec
repz
mov
add
pop
push
sbb
xchg
add
loope
add
add
push
xchg
adc
cmp
popw
push
pop
and
mov
in
mov
mov
popa
pop
int3
lcall
out
clc
iret
sbb
sbbl
rcll
mov
rolb
mov
daa
addr16
mov
add
or
adc
mov
out
scas
and
jno
jp
cwtl
scas
xchg
dec
insb
xchg
add
pusha
add
jo
mov
les
cmp
add
add
push
jle
jne
sub
and
xchg
sub
in
adc
sub
cltd
gs
sub
repz
mov
js
stos
xor
mov
sub
dec
mov
mov
lea
mov
scas
loope
mov
imul
cmp
cmp
ds
cmp
std
divb
stc
cltd
hlt
xor
mov
mov
icebp
mov
mov
push
add
jmp
rolb
mov
add
xchg
xor
mov
mov
xorps
in
add
filds
lahf
sub
mov
mov
dec
mov
mov
push
mov
fisttpll
pop
into
xchg
inc
or
enter
aam
rolb
pop
cmp
push
inc
add
sbb
les
mov
dec
inc
add
pop
pop
push
add
lods
scas
ret
addr16
add
out
scas
xchg
and
mov
ret
pop
rolb
mov
dec
test
add
and
movsb
xor
clc
or
rolb
mov
add
mov
add
dec
sbb
dec
lods
xchg
cmc
ret
stos
nop
add
addb
xor
mov
repz
popf
or
add
cmc
cmc
push
mov
repnz
add
sbbl
mov
outsb
and
sbb
jo
mov
mov
push
pushf
paddw
mov
mov
andl
push
adcl
imul
fiadds
add
in
sub
dec
cld
test
adc
fldl
push
test
out
loopne
mov
and
dec
les
subl
mov
shl
cmp
mov
mov
xor
mov
idivb
inc
loop
mov
add
add
mov
sub
add
cwtl
add
mov
jno
cmc
cli
jno
pushf
dec
xchg
int3
cs
iret
xor
aam
add
jns
push
cmp
test
add
mov
lcall
out
mov
mov
add
cmp
lahf
ljmp
icebp
insb
in
jne
inc
adc
dec
iret
mov
cmpsb
jne
xor
mov
add
das
cwtl
or
push
add
in
add
add
rolb
mov
mov
push
push
mov
xchg
mov
std
and
sub
cmp
iret
xchg
pop
mov
hlt
inc
mov
movsl
mov
cmp
xlat
cwtl
mov
mov
push
scas
mov
mov
sti
xlat
push
leave
fldenv
dec
lret
mov
push
pop
fiadds
and
mov
push
add
xchg
push
dec
dec
jne
add
xchg
mov
and
mov
mov
xchg
rolb
ret
mov
mov
or
lods
mov
mov
lcall
das
lret
imul
faddp
add
jle
jnp
dec
pop
mov
ret
push
aam
sbb
imul
mov
add
loopne
mov
add
jb
mov
icebp
mov
push
out
mov
or
add
test
xor
sub
repz
inc
es
mov
insl
cmp
scas
xchg
jae
xor
mov
loope
lahf
ret
lcall
mov
and
pop
pushf
jo
mov
fists
mov
add
mov
jbe
or
or
test
add
and
mov
fdivr
pop
mov
jl
add
mov
adc
mov
add
and
addb
ret
ret
and
mov
mov
lock
dec
adc
jp
outsl
jge
cmpl
outsl
cmpsb
sarl
ljmp
push
imul
mov
jmp
aaa
pop
rolb
mov
mov
mov
lods
jge
sub
or
add
add
add
jp
cmp
and
mov
add
jp
cmp
add
movsb
or
mov
mov
xchg
addb
int
test
pushw
sub
sarl
mov
mov
mov
into
sub
in
mov
addb
mov
xchg
int3
mov
popa
addb
rolb
mov
js
add
add
hlt
xchg
cmp
leave
cmpsl
inc
mov
dec
mov
jle
dec
leave
in
loop
mov
aas
or
add
add
inc
sub
add
mov
pop
pusha
add
add
fwait
xor
add
and
mov
scas
aad
popa
lcall
mov
lods
jmp
jae
pop
dec
sbb
mov
sub
pop
cmp
mov
hlt
cli
lret
mov
cs
popa
xor
popf
faddl
mov
push
xchg
mov
fisttps
cmp
or
mov
push
pop
test
shll
jnp
daa
insl
add
mov
jle
jmp
add
mov
push
aaa
fsubrs
int3
inc
add
scas
in
jecxz
mov
inc
inc
js
jnp
push
shll
fistpl
lea
and
add
push
adc
mov
add
mov
lahf
push
add
xchg
fwait
daa
or
fisubrs
jmp
add
xchg
push
loope
push
sub
jno
jae
enter
push
in
ljmp
mov
lock
or
push
sbbl
mov
add
addb
stos
inc
add
mov
sbb
into
inc
jns
int3
popf
stos
std
inc
mov
mov
jnp
add
jmp
aas
gs
fsubl
add
cmc
scas
enter
inc
add
inc
fisttpll
addb
outsl
rcrl
aas
fiaddl
add
imul
xchg
cs
mov
add
sbb
out
cwtl
out
ret
xchg
mov
into
sbb
fimuls
mov
add
into
add
mov
add
mov
jge
aaa
clc
lds
cli
push
cltd
in
ja
fadds
or
mov
inc
mov
push
dec
aam
jne
xor
mov
insl
lret
mov
lahf
cltd
jl
mov
jle
mov
scas
lods
popa
cmp
xchg
mov
addb
fcomi
call
add
lahf
int3
jp
push
mov
xchg
add
inc
icebp
lock
insl
out
add
jns
std
add
mov
xor
add
loopne
mov
xchg
jle
xor
rolb
mov
inc
add
mov
or
mov
gs
adc
prefetcht0
mov
fstps
xchg
xor
mov
add
hlt
scas
mov
mov
or
mov
mov
daa
icebp
mov
mov
rolb
inc
arpl
mov
add
cmp
les
mov
add
mov
outsl
out
popf
cld
inc
sbb
push
push
ss
pushl
dec
xchg
movsl
jb
mov
and
mov
add
inc
add
insl
xchg
sti
mov
outsb
mov
insl
idiv
fmul
into
loope
sbb
es
xchg
mov
mov
data16
mov
mov
mov
pusha
add
icebp
cmp
in
xor
xor
inc
add
xchg
jmp
sbb
loope
inc
in
pushf
adc
cmp
mov
inc
fwait
popl
inc
add
add
in
mov
add
shl
pop
fwait
aam
push
hlt
pop
mov
mov
add
xor
and
add
aam
fistpl
mov
enter
and
movsb
add
adc
mov
call
cmp
sahf
popf
mov
cwtl
js
loop
mov
push
adc
mov
inc
and
cmp
lahf
fstpt
xchg
add
pop
mov
xorl
add
les
add
mov
adc
pop
push
mov
pop
cmp
in
add
push
add
imul
adc
mov
add
mov
add
add
imul
xchg
mov
insl
rolb
mov
fisttps
addb
mov
popa
sub
dec
fmuls
mov
sub
in
fwait
push
add
push
push
sub
std
fsubrp
repz
mov
sub
fistpl
or
fbld
mov
dec
les
sti
lods
movsl
push
add
aam
add
loope
rolb
addb
cltd
push
clc
sub
dec
jns
or
add
mov
imul
je
icebp
je
mov
pushf
adc
xchg
xor
mov
stc
adc
mov
mov
and
mov
mov
dec
dec
repz
jge
pop
mov
add
jg
insb
add
add
mov
mov
nop
add
mov
dec
lods
lcall
jle
or
mov
xlat
cld
lods
std
call
pop
adc
mov
mov
out
jmp
insb
inc
add
iret
mov
inc
into
add
mov
add
inc
or
test
add
pusha
add
fidivrl
push
adc
adc
aas
addb
adc
mov
adc
add
mov
iret
adc
xchg
ds
push
test
daa
mov
clc
fstl
inc
cmpsb
pop
pop
or
out
push
std
ja
in
fdivs
lods
andps
mov
mov
addb
jb
mov
into
test
iret
test
sahf
adc
idivb
add
mov
ss
dec
or
rolb
mov
cmp
ljmp
and
xchg
imul
lds
inc
in
add
.byte
