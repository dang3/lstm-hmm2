leave
sbb
dec
call
sbb
bound
les
jg
test
addb
mov
cmpsl
push
jmp
pop
or
add
inc
push
inc
add
fs
mov
aas
cmp
mov
inc
clc
cmpsl
pop
cmp
and
or
mov
rolb
lret
je
push
add
mov
xchg
cmpsl
cmp
sub
and
mov
jg
in
jb
divb
cmp
ret
ficomps
mov
mov
add
popf
sbb
mov
movsb
es
and
sub
ds
xchg
dec
or
dec
imul
push
xlat
push
not
shll
mov
jns
mov
add
mov
sub
push
dec
into
sbb
xchg
and
arpl
in
pop
sahf
lea
mov
inc
aaa
lods
test
out
pop
pop
inc
dec
mov
rcrl
lds
mov
lods
shll
testl
call
jnp
xor
bndstx
sub
mov
pusha
add
out
pop
nop
sub
dec
adc
scas
lahf
add
addb
movsb
iret
inc
add
dec
sub
cmpsl
loopne
arpl
mov
push
in
xchg
les
mov
xchg
jle
ds
xor
xchg
jnp
loop
mov
scas
aas
jmp
push
fs
add
call
push
mull
test
add
pop
outsb
cmp
push
lret
ret
fistl
push
add
loopne
inc
inc
add
jne
dec
xchg
jl
out
pop
pop
shlb
shll
xchg
sbb
pminsw
ds
sub
ja
add
push
mov
sbb
or
int3
and
popa
loopne
xchg
xchg
or
pushf
pop
jle
xor
xor
jmp
lds
loopne
inc
add
daa
movb
sub
jp
rcr
movb
push
sti
cmpsb
dec
hlt
mov
sub
fs
pop
jae
lcall
enter
dec
xchg
jae
add
aas
jb
add
mov
cmp
jnp
add
fwait
lea
addb
push
js
mov
add
mov
adc
iret
and
add
rol
add
lcall
nop
push
icebp
cmp
imul
pop
sbb
fdivrs
call
push
add
scas
jns
lret
add
in
xchg
stc
sbb
jo
test
mov
mov
and
and
cmp
jecxz
lods
xchg
sbb
mov
js
stos
lcall
push
test
jecxz
push
out
adc
mov
xchg
aaa
mov
or
sub
xor
mov
fwait
mov
xor
inc
fimuls
xchg
inc
add
sahf
shll
xor
movsb
mov
arpl
lret
pop
cmp
add
pop
ficomps
insl
xchg
pop
cmp
mov
pusha
add
repnz
jb
sbb
mov
adcl
mov
jnp
add
adcl
jno
lods
xor
xor
or
dec
jo
fcompl
add
xchg
push
test
pusha
add
inc
add
jno
push
rolb
jmp
inc
add
out
pop
pushf
xchg
add
imul
cmc
push
sub
add
daa
or
in
or
add
mov
add
imul
mov
adc
add
sbb
or
xchg
js
les
movsb
outsb
les
iret
mov
cltd
push
cwtl
fdivrl
jno
std
mov
mov
push
mov
mov
cld
mov
and
and
lahf
adc
pop
hlt
cmpsl
inc
dec
jne
pop
test
out
xchg
mov
or
inc
mov
inc
or
mov
add
imul
push
push
push
mov
int
mov
inc
lahf
adc
popa
aaa
lret
mov
int
addb
or
add
jne
add
out
inc
add
sub
sti
mov
sti
out
test
mov
jle
dec
lea
sbb
sbb
sbb
ret
dec
fdivl
sbb
or
adc
jae
sti
add
aad
cmpsl
dec
mov
jmp
arpl
push
cmp
xlat
and
fisubrl
push
movb
cmpsb
jne
test
pop
pop
int3
cli
test
scas
lret
testl
nop
push
mov
or
adc
in
cmpsl
sub
stc
in
sbb
movb
push
sahf
fwait
xchg
loop
jmp
cmpsl
adc
xchg
xor
push
xchg
mov
push
aam
outsb
mov
bound
repnz
or
add
add
sbb
sub
int3
dec
dec
xchg
addr16
inc
add
and
popa
inc
add
arpl
iret
pusha
add
inc
add
push
in
int3
adc
pop
aaa
testb
imulb
push
add
jl
icebp
pop
push
lea
mov
sbb
gs
add
xchg
xor
scas
jg
jne
aam
repnz
shll
imul
test
inc
add
jb
push
in
sbb
xchg
ss
push
dec
fdivl
ljmp
mov
imul
add
push
add
incl
divb
mov
mov
xlat
leave
cs
nop
icebp
std
test
movsl
insb
add
pop
aaa
fs
in
add
add
fisubrl
add
adc
add
je
jmp
call
sbb
push
pop
mov
fwait
hlt
imul
fildll
add
mov
mov
add
add
dec
mov
or
xchg
inc
pop
pop
cmp
idivl
out
xor
inc
gs
movb
int
repz
add
xor
lods
movb
mov
je
or
test
pop
adc
or
add
roll
jae
jb
xchg
shll
add
icebp
test
mov
pop
xchg
or
jb
shr
add
jne
mov
add
shrb
imul
inc
push
sub
arpl
out
sub
mov
cmp
inc
es
xlat
scas
shl
mov
mov
add
mov
gs
lcall
jnp
add
fwait
dec
das
std
cmpsl
sbb
jmp
mov
aas
pop
add
add
push
inc
add
jns
xchg
pop
push
sub
dec
fwait
inc
add
pop
inc
js
jmp
dec
cmp
popa
sahf
fmuls
insl
inc
add
mov
add
add
push
pop
sarl
mov
pop
xor
add
add
shlb
cli
shll
aaa
xchg
mov
imul
cmpsl
int
or
add
push
add
sub
add
jle
jnp
add
das
int3
lods
dec
mov
cmp
dec
or
mov
adc
xchg
idivl
popf
mov
inc
add
mov
mov
add
add
push
fisttpl
jge
push
add
push
out
push
and
xor
pop
fwait
xor
stos
sbb
mov
xchg
loopne
lret
add
sub
je
xor
adc
mov
int
inc
iret
pop
mov
cld
nop
fnstenv
add
jns
add
xor
inc
insl
test
fs
push
ja
jb
imul
aas
adc
mov
push
lret
adc
cmp
inc
mov
add
dec
push
dec
sbb
adc
inc
decl
add
loopne
aas
test
sbb
and
xlat
adc
insb
enter
fldenv
add
add
add
addb
test
cltd
ror
cmp
repz
add
add
sbb
cli
int3
mov
fisttpl
aas
imul
pop
dec
into
fs
imul
icebp
testb
repz
clc
mov
int
add
addb
ret
cmp
cmp
bound
xchg
sbb
scas
mov
pop
pop
sub
jb
into
out
xor
mov
xchg
add
ja
add
mov
add
test
scas
jge
fwait
scas
inc
fsubs
daa
aaa
fabs
push
or
xor
dec
mov
les
mov
addl
push
andl
shll
lods
test
pushf
mov
outsl
jne
cld
cld
xlat
or
push
push
add
insb
mov
sbb
inc
mov
sbb
scas
arpl
inc
add
pop
sub
push
inc
js
stos
xor
add
test
jle
ljmp
cmpsb
mov
or
fucomi
call
fwait
iret
adc
enter
ds
popf
mov
and
sbb
aad
sbb
add
daa
insl
xor
bswap
xchg
outsl
enter
mov
xor
pop
or
cmpl
sub
lea
mov
add
add
add
cmpsl
xor
cltd
sarl
pop
in
imul
xchg
hlt
pusha
add
in
out
mov
mov
fucomp
lea
sub
fists
push
push
fwait
addb
pop
dec
and
dec
stos
ss
stos
sbbl
lret
movb
std
enter
mov
xor
fs
jg
cmp
movb
add
sbb
ficoml
movsb
pop
mov
daa
addb
in
add
sbbl
dec
lods
sub
cltd
cmp
or
jne
cmp
pmaxsw
mov
sub
cmpsl
in
cmp
dec
rorb
jecxz
sub
mov
pop
xchg
inc
add
aaa
dec
roll
test
sub
or
fcomps
add
outsb
mov
stc
jmp
mov
movsb
jo
adc
inc
jmp
dec
mov
cmp
pop
and
clc
scas
mov
aas
and
dec
fsubrp
cli
cld
and
sbb
mov
jae
mov
dec
xchg
cmc
in
test
add
xlat
je
or
loop
rolb
je
repz
add
add
bound
cmc
lahf
jns
int
std
and
or
mov
mov
arpl
fsts
and
gs
and
cmpsl
or
cmc
ret
test
pop
loopne
add
fidivrs
mov
add
lcall
add
fimuls
repnz
add
mov
sbb
in
sub
mov
mov
mov
push
dec
adc
in
jecxz
inc
push
push
mov
cmp
jb
nop
pusha
add
aad
lods
insb
loope
dec
sub
jp
push
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
pop
mov
jbe
cmpsb
mov
add
imul
add
cmp
filds
cmp
jns
repnz
test
popa
jo
cli
sahf
stos
lods
maxps
js
imul
add
inc
add
add
adc
xchg
imul
add
fwait
push
mov
xchg
clc
xchg
cmpsl
adc
movsb
gs
xor
addb
std
sub
rolb
scas
pop
fbld
add
push
jg
fcmovnbe
shrb
add
pop
or
jge
mov
ret
add
inc
add
xchg
frstor
add
cld
fidivs
mov
push
popa
cmpsb
xchg
popf
cmp
jp
add
and
xchg
repnz
add
les
test
jno
xor
insb
mov
pop
not
lds
int3
pop
nop
cmp
dec
lods
data16
pop
repz
mov
lret
cmp
add
or
jo
mov
add
jbe
call
jge
lret
enter
sbb
add
clc
push
fstpt
sarb
movsl
out
ljmp
cmp
dec
jno
dec
mov
mov
mov
push
js
aas
adc
aaa
ljmp
mov
mov
rolb
and
xchg
xor
leave
mov
inc
add
push
inc
jns
fstpt
sti
mov
fstp
dec
sub
cld
or
seto
test
mov
and
or
test
dec
je
fnsave
rorb
and
mov
and
les
mov
xor
push
xchg
repz
lock
fnstenv
scas
sub
and
fcomps
cmp
sub
pop
ljmp
add
sub
into
fadd
add
fs
xor
ror
mov
mov
test
xchg
dec
cmp
xor
adc
xchg
mov
xchg
neg
ret
mov
and
xchg
xchg
jbe
push
mov
mov
sub
mov
xchg
pop
icebp
jo
add
xchg
inc
add
xlat
inc
cmp
add
adc
dec
xor
insb
pusha
add
sti
inc
add
add
xor
cli
mov
ret
fcoml
scas
jmp
loopne
test
ror
jne
mov
add
outsb
mov
add
jge
add
jno
lcall
or
add
addb
pop
add
lret
stos
ljmp
jp
add
xor
xor
iret
xchg
cmp
mov
add
sub
and
stos
add
push
sub
add
movsl
enter
leave
dec
orl
add
ret
jae
add
xchg
pop
add
adc
ljmp
insb
mov
sahf
mov
loope
icebp
clc
cmc
lcall
cmp
lods
or
add
stos
jno
ja
aad
outsl
inc
add
dec
sahf
nop
out
push
scas
fwait
lods
adc
mov
adc
clc
xlat
cli
mov
jp
add
data16
ss
bound
push
aad
mov
rcll
mov
into
mov
arpl
cmp
pop
mov
lret
or
jo
add
cs
adc
les
ror
and
jp
and
xor
fisubs
stos
xchg
push
scas
cwtl
jo
int3
mov
add
test
xchg
out
ret
mov
cli
xor
dec
movb
adc
add
and
adc
add
int
aad
xchg
aas
iret
mov
dec
cmpsl
and
xlat
out
pop
call
adc
test
fucomp
mov
loop
cmp
cwtl
add
into
mov
xchg
or
mov
add
xchg
dec
out
lods
jle
aaa
cwtl
pop
lock
stos
jp
xchg
sub
jmp
fsubrp
cmp
cwtl
or
or
add
and
xor
lea
lock
rorl
dec
notl
ja
in
or
pop
fs
mov
xor
sub
inc
inc
mov
cmp
inc
add
jge
xor
mov
mov
jle
xchg
lret
xor
sbb
iret
pop
lret
mov
sahf
lods
notb
je
insb
loop
adc
add
mov
xchg
movsl
addl
enter
dec
shll
jnp
inc
add
sub
cs
in
sub
imul
out
mov
push
add
mov
pop
sub
out
jg
push
adc
jge
xor
jo
loop
test
inc
mov
xchg
add
movsl
cmp
pop
rcrb
inc
call
push
cmc
addr16
test
pop
push
xor
aas
icebp
sub
xor
xchg
hlt
orl
repz
add
movb
loopne
lods
push
mov
pop
out
xor
xor
jne
add
addr16
cmp
roll
fwait
rcrl
add
push
add
cmp
add
add
inc
add
mov
sbb
xchg
and
in
sub
xor
jg
mov
pop
test
mov
arpl
fwait
sbb
add
xchg
insl
scas
leave
add
pop
jmp
pop
pushf
scas
jg
push
sti
push
sub
outsb
or
and
scas
movb
pop
pop
xchg
dec
jns
lcall
mov
fistl
imul
in
ss
xchg
mov
addb
mov
jl
movsb
jmp
sub
sahf
lcall
cmp
inc
sub
stc
loop
dec
or
mov
leave
adc
repz
add
lock
push
jecxz
sub
dec
mov
cs
sti
lds
into
push
enter
gs
fcomip
xchg
movsl
insb
xchg
enter
jbe
push
add
mov
add
xchg
jnp
push
rorl
add
or
ret
frstor
jl
shrb
bound
cli
cmp
xor
popf
in
mov
fwait
lock
add
mov
add
push
loope
adc
dec
push
add
sti
or
xchg
movsb
or
dec
lock
movb
in
or
cmp
and
mov
fists
aaa
das
movl
repz
fisttpll
loope
push
test
adc
mov
ss
cmp
xchg
rcr
or
stos
test
add
pop
stos
addb
push
xchg
out
cmpsb
test
add
rcl
pop
inc
add
inc
outsl
jo
lret
lods
leave
rclb
repz
outsb
lcall
movsl
inc
add
mov
pushf
notb
mov
testb
xchg
inc
add
pushf
add
push
sub
in
fdivr
xor
jg
aas
mov
add
xchg
movsl
sub
sub
jae
clc
pop
jo
fwait
aaa
pop
lods
test
cmp
scas
pop
push
add
add
or
push
add
jecxz
fstpl
nop
mov
add
push
out
mov
iret
push
addr16
sub
inc
repnz
cltd
mov
mov
mov
add
jno
popa
in
arpl
std
mov
inc
add
push
iret
pop
leave
adcl
cld
sub
sub
popl
push
inc
add
jmp
jnp
hlt
and
stos
hlt
in
enter
pop
repnz
fcoms
add
or
cli
mov
enter
cmp
adc
call
sub
adc
test
fidivl
dec
cld
mov
add
pop
jge
add
and
xchg
test
hlt
pushf
mov
fnstsw
pop
inc
outsl
cld
shll
mov
rcrl
rcrb
jmp
mov
test
adc
jl
push
add
adc
inc
mov
test
sub
push
sbb
fbstp
test
push
test
lods
adc
mov
or
aas
repz
jno
add
dec
repnz
decb
in
daa
or
adc
mov
jne
sub
hlt
inc
push
iret
add
out
imul
repnz
jb
sub
movsb
es
notl
outsl
aaa
push
mov
mov
arpl
adc
into
roll
dec
sbb
je
jae
scas
push
ds
jb
fisttpll
add
sar
lret
lea
int
lret
push
vmovupd
mov
test
pop
pop
mov
add
mov
dec
stos
pop
xchg
insl
cmp
push
clc
adc
dec
jno
mov
fildll
sti
mov
adc
push
adc
and
pushf
aas
mov
add
lcall
aas
push
jo
nop
sbb
or
push
cmp
mov
stos
dec
mov
mov
xchg
out
imul
in
dec
icebp
call
in
and
sub
sti
repz
test
pop
sbb
rorb
mov
add
add
pop
mov
cs
adc
fidivrs
push
add
xor
int3
xchg
outsl
mov
in
ret
icebp
loope
push
fsubl
mov
sbb
outsl
cmp
jg
push
push
mov
sub
icebp
icebp
lret
test
dec
push
and
out
push
mov
xchg
jbe
dec
and
fisubrs
add
subl
mov
mov
cmp
stc
lea
or
add
mov
divl
sarl
add
std
adc
popa
push
stos
outsb
pop
or
or
mov
imul
notb
cmpsl
push
push
lds
add
les
js
add
fcmovnu
xor
jecxz
push
stos
xchg
mov
arpl
and
pushf
data16
sahf
jp
pop
mov
mov
test
test
inc
out
xchg
das
cmc
shlb
or
xor
and
sub
idivl
mov
and
pop
push
mov
test
lcall
mov
cmp
mov
ds
mov
add
aas
pushf
iret
jne
lret
mov
pcmpgtb
mov
pushl
and
lock
ss
in
lcall
add
cmp
add
repz
mov
hlt
xor
push
lods
repz
mov
into
imull
pop
pop
in
pop
sub
pop
inc
loop
xchg
dec
xchg
mov
cs
aaa
mov
xlat
xchg
push
imul
in
scas
addb
push
bound
aaa
mov
jp
sbb
sub
arpl
hlt
xlat
jbe
add
fildll
scas
in
fcomps
and
fldcw
imul
jg
add
push
mov
lock
inc
xchg
jmp
repnz
movb
jno
or
dec
sub
fadds
mov
jno
pop
fsts
xchg
lahf
cwtl
les
xor
mov
stos
cwtl
xor
cmp
rcrb
pop
sbb
dec
pop
fcomi
gs
cltd
fidivl
xorl
mov
dec
in
cs
jbe
pop
cmc
mov
testb
add
dec
movsl
stc
outsb
into
push
add
out
dec
fadd
add
pop
incb
and
add
xor
cmp
pop
push
rcrb
icebp
sti
cmp
es
jecxz
add
and
dec
xchg
add
testb
add
popf
cli
clc
bound
int3
jo
ret
pop
loope
xchg
int
int3
in
scas
sbb
push
in
add
sbb
inc
addr16
mov
test
mov
jge
mov
add
fistpl
int3
xor
lock
or
out
stos
loope
and
sahf
dec
jnp,pt
ret
aam
push
dec
aas
inc
inc
add
xor
test
and
add
sbb
inc
adc
adc
fsubl
out
sbb
enter
add
pop
mov
mov
lret
cmp
es
lahf
sub
test
es
cmp
insb
xchg
xchg
add
cmp
jmp
mov
aaa
test
add
and
add
or
mov
aam
call
ja
out
arpl
add
sub
in
pop
inc
xchg
xor
ret
xchg
and
add
jnp
negl
xchg
cmp
push
add
hlt
lea
ror
insb
pop
or
lods
mov
xor
clc
lret
push
and
jb
add
add
and
add
mov
in
js
add
add
out
ds
je
jge
int
dec
mov
test
in
jmp
repz
push
sub
lahf
test
in
gs
add
out
and
jmp
loopne
decl
mov
jecxz
pop
out
ret
loop
jnp
test
addr16
push
mov
adc
mov
pop
inc
add
xchg
mov
sub
sub
out
inc
jmp
test
setb
jo
sahf
mov
imulb
les
push
lcall
loop
popa
roll
nop
jo
test
push
je
add
loop
pusha
add
and
mov
stos
mov
rcr
pop
js
lret
add
mov
mov
sub
test
leave
cmp
jecxz
pop
cltd
ljmp
shrl
mov
jae
mov
add
pop
test
les
or
lcall
sarb
shrl
loope
movsb
dec
jle
imul
out
xchg
shrb
ljmp
addb
das
mov
xor
mov
stc
outsb
add
xor
rcll
and
sub
jl
sti
sahf
es
into
xchg
mov
addb
outsl
clc
loopne
arpl
and
add
mov
repnz
aaa
aaa
or
andl
mov
repnz
lock
mov
dec
fidivrs
adc
int3
scas
fstpl
add
mov
jg
push
xor
out
xchg
and
cmp
nop
arpl
mov
loop
adc
lods
les
mov
add
leave
xlat
and
test
add
aas
jl
shll
pop
or
adc
into
push
ds
fnsave
call
inc
movb
roll
inc
and
push
pop
jns
movsb
push
cmp
ret
sbb
aaa
dec
jae
push
add
add
pop
or
mov
mov
pop
dec
scas
movsl
inc
xor
data16
ljmp
pop
inc
and
in
adc
cmpsl
mov
insb
fnsave
std
xchg
js
cmpsb
insb
out
ret
pop
jae
ret
movsb
mov
jns
add
add
xor
xorl
fbstp
mov
sbbl
movb
xacquire
xor
xor
sub
cwtl
testb
sbb
fstpt
and
add
repnz
dec
add
int3
cwtl
stos
mov
rorb
aam
xor
insb
push
ret
add
jg
pop
mov
add
xchg
imul
jl
cmpsb
jbe
or
mov
mov
pop
mov
hlt
cmp
repnz
popa
add
mov
pop
inc
jge
add
add
push
add
or
adc
sbb
aaa
dec
push
loopne
mov
js
out
aad
pop
push
insb
sbb
lods
repz
lret
and
into
addb
sbb
add
rcll
js
les
sarl
call
and
adc
add
lcall
hlt
pusha
add
or
sub
cli
inc
add
cmp
mov
cmp
addb
rolb
out
leave
sub
fsubs
movhps
scas
sub
xchg
lret
fwait
inc
nop
fdivr
jl
add
push
add
mov
shl
inc
add
inc
add
xchg
out
popa
cltd
adc
sub
add
xchg
mov
jns
pushf
inc
add
rolb
addl
mov
add
dec
pop
hlt
dec
mov
movsb
and
movb
movsl
test
jne
call
adc
add
add
inc
add
jg
push
iret
pop
mov
jle
or
inc
cs
out
mov
or
fs
jae
pop
hlt
inc
add
inc
add
mov
cld
outsb
mov
out
sub
out
mov
loopne
outsb
orl
lea
inc
jae
xor
cmp
sub
jmp
add
fdivl
push
xchg
add
icebp
push
mov
add
add
shld
dec
scas
inc
or
fidivrs
cmp
stos
or
cmp
pop
add
ret
push
fdivl
push
fisttpll
mov
mov
fs
add
jmp
jo
mov
fs
les
jo
out
insl
lret
lods
jns
mov
fisttpll
mov
add
mov
outsl
lahf
push
push
cs
dec
mov
jmp
sub
test
sbb
cli
addb
je
mov
out
push
js
lcall
stos
addb
xor
dec
pop
pop
jnp
or
inc
adc
push
loopne
stos
fcmovnbe
xchg
mov
adc
sbbl
addb
jae
imul
jp
aad
aad
lds
scas
jge
aad
mov
sbb
add
and
adc
repz
xchg
mov
lcall
push
mov
adc
push
in
xorl
rolb
cwtl
mov
stos
lods
lock
cld
outsl
dec
insl
push
aas
mov
mov
push
lahf
inc
imul
call
inc
movb
or
mov
add
pop
inc
add
stos
push
mov
jae
add
cmp
out
fisubrs
inc
add
add
or
pop
loop
pop
sbb
add
ja
and
fbstp
mov
ds
sub
sub
inc
add
loop
inc
in
lret
scas
cmpl
ss
lret
mov
cmp
cmp
jo
mov
push
add
das
jo
xor
cmp
add
and
add
mov
pop
out
push
movb
dec
push
cltd
rol
push
addr16
fstpl
sbb
outsl
pushf
add
leave
cmpsl
pop
jge
mov
add
leave
insl
mov
movb
and
gs
rolb
inc
out
mov
es
insb
pushf
mov
and
adc
add
push
or
in
add
jmp
lret
loop
jns
bound
mov
sub
retw
xor
add
and
adc
in
inc
add
test
add
pusha
add
fwait
push
mov
mull
mov
mov
or
fs
add
mov
adcl
test
arpl
xchg
add
add
jg
into
mov
addb
push
mov
cli
rorb
clc
xor
enter
aas
ds
adcl
jns
jl
inc
scas
xchg
or
lret
sahf
pop
pop
ficompl
mov
loopne
imul
jmp
lret
insb
push
lret
stos
repz
rcrl
stos
leave
sub
sbb
aas
insl
jns
mov
imul
arpl
cs
fisttps
data16
ret
fbstp
dec
push
push
addb
cld
cmpsl
xchg
mov
repz
jbe
test
out
jns
push
add
and
and
pop
jbe
and
xlat
sub
add
mov
dec
inc
in
push
and
mov
stos
add
out
les
pop
cwtl
lods
and
arpl
stc
xchg
pop
push
mov
mov
sahf
lahf
xlat
rcll
test
mov
dec
push
add
or
pop
and
mov
add
inc
add
cmp
and
fsubrs
lea
inc
add
mov
cmp
stos
jl
push
enter
sub
scas
cmpsl
scas
mov
stos
push
add
pop
pop
mov
mov
jge
fdivl
fimuls
cmp
and
adc
xor
cmpsb
lock
jne
outsb
sti
iret
and
pushf
push
mov
loop
dec
push
mov
mov
lcall
add
mov
push
add
inc
add
lock
stos
push
insl
sbb
jne
stos
inc
loop
notl
xchg
sub
add
pop
lcall
mov
jmp
push
stos
mov
xchg
xor
dec
push
or
movsb
dec
sub
mov
sub
cmp
add
push
arpl
test
loopne
aam
mov
lea
cmp
adc
cli
xchg
in
xchg
add
adc
shufps
shrl
add
pushf
cmp
mov
filds
loop
push
mov
pop
push
int
add
test
add
roll
push
xlat
xchg
scas
dec
xchg
and
xchg
lret
pop
orl
aad
bnd
jno
loopne
out
imul
mov
loopne
loop
xchg
pop
popa
iret
pop
sahf
sub
push
inc
add
push
push
jg
outsl
mov
inc
add
movsl
in
sub
jae
adc
es
cmp
push
pop
push
dec
popf
cld
rolb
ficoms
jno
add
imul
fidivrl
daa
mov
xor
sarl
mov
push
lahf
inc
les
lea
add
out
lock
dec
jl
loop
out
sub
pop
pop
pop
js
add
jl
add
jg
add
pop
adc
sbb
add
repnz
push
pop
jl
add
movb
in
fildl
or
jo
dec
aaa
mov
sub
loop
inc
xchg
js
movb
arpl
aaa
cli
push
call
mov
cmp
loope
jle
push
jecxz
fcompl
xor
xchg
mov
xor
out
imul
les
in
add
lock
pop
jmp
xor
mov
sbb
mov
mov
aad
das
and
mov
mov
imul
test
push
ret
push
ficomps
enter
sub
cmpsb
shll
add
out
xor
rcll
dec
out
add
jp
push
out
test
jne
into
stc
adc
in
mov
jno
loope
cmp
add
mov
add
fs
popf
push
out
fsubrp
aam
or
jne
pop
pop
mov
loop
cmpsl
repnz
inc
shrl
and
sub
lcall
sti
or
xchg
pop
cld
test
addb
not
lods
add
lock
out
out
bound
js
push
out
out
pop
pop
rcrb
dec
mov
sub
lahf
add
pusha
add
mov
add
testl
les
insb
mov
cmp
cmp
mov
or
sub
ficoms
jo
fsubrs
test
daa
pop
mov
in
mov
add
movb
add
out
xchg
aad
sub
adc
aaa
rolb
add
mov
xchg
aam
stos
and
add
sbb
clc
data16
stos
dec
and
addr16
jle
out
negl
inc
add
fcoms
bound
push
cwtl
popa
cld
rorl
aad
sub
insb
cs
fwait
xor
ljmp
sbb
iret
inc
add
sub
mov
int3
test
xor
or
mov
sar
sub
jbe
add
int
pushf
mov
add
fidivs
add
imul
scas
mov
add
sub
cltd
cmp
pusha
add
movsb
push
sbb
add
outsl
mov
in
xchg
push
add
insl
push
loopne
fistpll
orl
mov
sub
and
mov
inc
add
xchg
push
mov
mov
inc
add
addr16
or
jnp
pop
mov
add
rolb
pop
div
mov
popa
xor
pop
insl
daa
push
xlat
addb
gs
cltd
aad
nopl
dec
testl
add
dec
sbb
popf
int
sbb
adc
add
movb
testb
in
out
int3
push
push
or
mov
stos
mov
fistpll
dec
movb
jg
add
decb
push
movsl
fnsave
scas
mov
lret
in
add
scas
cmp
pop
mov
add
lea
cld
xchg
push
cmpsb
imul
cmc
movsl
jne
pop
push
add
push
mov
dec
mov
xchg
xchg
addr16
int3
sbb
movb
xchg
arpl
fistpll
xor
ss
mov
xchg
inc
add
mov
aas
imul
add
add
outsl
mov
push
inc
add
sub
out
sbb
dec
loop
mov
mov
icebp
arpl
repz
add
add
pop
xor
dec
stos
pop
mov
mov
add
or
push
or
sahf
sub
add
push
adc
hlt
mov
icebp
push
bound
popa
sbb
dec
loope
add
stos
mov
xchg
ficoml
into
dec
daa
push
frstor
fidivrl
sub
inc
add
ds
hlt
and
xchg
adc
cmp
add
sti
and
into
rcll
mov
loop
aam
inc
inc
add
add
push
rorl
add
aad
push
xor
sbb
mov
pop
sti
xchg
test
nop
insl
mov
ja
jle
out
icebp
in
inc
enter
pop
addr16
add
fcomps
repnz
push
xor
es
int
popf
insl
push
add
inc
inc
js
out
mov
jns
inc
inc
add
jge
mov
inc
push
xlat
fimull
fdivl
mov
mov
jl
mov
mov
xor
popf
jl
nop
inc
jmp
dec
dec
ljmp
fstpt
out
repnz
outsl
xor
dec
aam
test
jge
cltd
shr
mov
add
ds
jg
int
test
and
mov
shll
shlb
add
outsb
cmc
daa
mov
enter
call
cld
sub
fmul
mov
add
dec
movsb
cld
subl
mov
add
sub
xchg
clc
out
or
movsb
in
aad
mov
iret
iret
sbb
xor
xor
cmp
add
int
push
lahf
xor
mov
dec
and
lahf
fisttps
sub
sub
rolb
xchg
add
or
cmp
loope
icebp
add
jo
mov
adc
ret
xor
mov
aad
xchg
inc
scas
add
add
adc
jg
dec
or
sub
enter
add
push
push
dec
cwtl
mov
aaa
jae
test
inc
add
add
mov
mov
iret
jns
cmpsb
inc
sub
sub
mov
add
xchg
hlt
inc
arpl
sbb
mov
pop
popa
adc
ja
nop
xchg
pusha
add
cmp
pushf
das
enter
sub
pop
repnz
mov
loope
sbb
das
les
add
mov
aaa
adc
test
adc
repz
test
mov
xor
addb
inc
add
enter
add
jae
push
rcrl
push
ljmp
call
sub
lret
movb
cltd
in
rclb
mov
bound
sbb
cltd
xchg
adc
add
adc
movsb
and
and
test
bound
pop
enter
mov
add
xchg
shll
pusha
add
pop
and
hlt
and
jle
mov
mov
mov
jge
addb
jmp
sbb
mov
cmp
pop
shlb
mov
dec
pushw
mov
mov
adcl
repz
sub
in
fimuls
js
jle
push
ja
les
movswl
lea
xor
xor
and
std
inc
add
movsb
ret
ret
sbb
cmc
repz
roll
xchg
adc
pop
gs
sbb
mov
enter
sub
mov
mov
xor
push
pop
je
cli
pop
leave
cli
jmp
inc
add
or
jl
lret
frstor
insb
ss
and
mov
sbb
aas
cmp
fcompl
and
add
push
fstps
adc
add
mov
ja
mov
mov
dec
int3
rcrb
icebp
jb
hlt
inc
push
xchg
rclb
sbb
divb
out
test
fdivs
imul
repnz
inc
and
addb
mov
dec
xchg
fs
adc
movb
cmp
loop
pusha
add
fwait
sti
or
pop
fcmovne
lds
add
shll
iret
fdivrl
xchg
sub
add
jle
cmp
cmpsl
inc
add
mov
addb
inc
inc
add
add
cmp
arpl
nop
jne
add
mov
and
mov
aas
int3
addr16
fs
movsl
lret
xor
lea
or
and
mov
jp
dec
push
or
adc
ljmp
popa
pusha
add
sbb
lock
xchg
jbe
repnz
inc
add
pop
mov
pop
push
cmpsl
adc
pop
dec
mov
sub
add
pop
mov
push
bound
push
mov
insl
ud1
addr16
xlat
rolb
inc
inc
xor
ja
xchg
pop
xchg
fdivrp
and
scas
pop
pop
push
cmp
fdivrp
sbb
movsl
xor
add
xchg
sub
jno
sub
pop
pusha
add
adc
cmp
mov
jne
mov
fwait
cmc
pop
into
dec
mov
add
icebp
lods
ljmp
leave
mov
inc
pop
and
push
shll
test
inc
lods
sub
push
adc
mov
iret
ret
addb
xor
addr16
inc
add
mov
sti
sub
pop
fldt
icebp
push
nop
inc
add
pushf
mul
add
cmp
push
ljmp
adc
dec
xor
mov
int3
aam
movb
out
loope
jle
add
xchg
sbb
dec
push
loopne
out
xor
sbb
mov
push
scas
mov
xchg
push
popf
cmp
inc
add
xor
sti
jp
movsl
mov
xor
jmp
xchg
arpl
mov
add
fldt
add
dec
mov
xlat
fldl
cmp
movsl
mov
mov
xchg
mov
sub
sub
push
popf
pop
out
insl
sahf
les
sub
adc
lea
repz
testb
sub
aaa
inc
add
call
scas
sbb
push
or
sti
push
in
or
mov
std
jb
out
pusha
add
inc
add
in
aad
loop
or
mov
loope
das
inc
add
addl
jmp
test
add
pop
movsl
xlat
jo
mov
jo
pop
mov
inc
add
add
add
cmpsb
cli
add
into
sub
adc
ja
push
popf
nop
inc
add
sbb
add
js
mov
std
lahf
int3
push
add
xor
mov
cs
sbb
icebp
xchg
mov
repnz
pop
mov
and
scas
mov
mov
pop
inc
add
xlat
iret
dec
fstl
adc
sahf
pusha
add
push
sqrtps
pushf
popa
cmpsb
mov
inc
add
pop
sbb
outsb
xor
scas
ficoms
addb
mov
add
out
and
lahf
shrl
repnz
imul
shrl
jb
fidivrs
not
fstpl
test
mov
add
lock
loop
les
ret
adc
inc
lcall
in
xor
inc
add
mov
ja
pop
jnp
addb
mov
fiadds
add
into
push
add
add
add
add
add
add
ret
cmp
sti
cwtl
dec
popf
cmp
add
pop
or
add
cld
addb
lcall
popf
inc
add
jp
add
add
stc
push
add
ljmp
jl
pop
mov
mov
scas
stos
pop
push
add
add
dec
xor
mov
add
push
xchg
movsl
enter
add
pop
out
mov
jl
sub
ss
mov
mov
mov
push
mov
mov
jl
mov
iret
jl
and
cmp
pop
movsl
int3
mov
divl
xor
mov
out
mov
jecxz
cwtl
loopne
sahf
xchg
push
add
outsl
mov
pop
cmp
into
stos
xor
sub
mov
mov
lahf
xor
je
stos
mov
jmp
pop
or
push
test
dec
stos
jecxz
jnp
xchg
hlt
pop
inc
add
sbb
int
lods
jl
fldl
lea
cld
das
push
std
mov
xchg
hlt
sub
fxch
repnz
and
sub
lods
test
add
mov
pop
sub
insl
idivb
ds
xchg
nop
mull
cmp
call
imul
sbb
rorl
iret
mov
or
add
andl
add
faddl
nop
outsl
mov
movb
add
ficompl
frstor
mov
pop
xchg
dec
stos
iret
iret
mov
sahf
dec
loope
aaa
xor
out
cmpsb
add
hlt
xor
jmp
add
arpl
xor
popa
ds
inc
add
ds
rolb
mov
pop
cli
adc
aam
sbb
bound
inc
sbb
add
lahf
mov
jmp
pusha
add
add
mov
loopne
fisttpll
push
lds
dec
stc
rorl
clc
pushl
inc
add
addb
lds
in
xchg
jecxz
add
add
sbb
jmp
xor
add
ljmp
sub
push
sbb
pop
jne
add
jnp
es
pop
adc
add
add
add
addb
inc
int3
xor
pop
pop
fstps
push
mov
fldt
inc
add
add
leave
int
mov
add
outsb
sbb
lds
mov
pop
sahf
or
jg
fs
push
mull
jo
incl
pop
hlt
movsb
aam
rolb
ret
mov
addl
add
ljmp
add
inc
push
mov
xchg
xchg
cmpsl
add
cmp
leave
jb
xor
popa
sarl
repnz
mov
pop
mov
push
es
pop
sbb
stos
mov
add
jae
push
cmpsl
push
addb
loopne
add
jo
ret
mov
xchg
mov
sbb
add
cmp
idivl
or
add
pop
fs
mov
mov
cltd
xlat
in
insl
xor
mov
and
mov
dec
das
outsl
sbb
xchg
pop
stos
loop
cmp
cmpsl
cmp
ljmpw
add
push
in
fwait
shl
add
call
js
pop
push
stc
sbb
lods
outsl
mov
xchg
push
ret
xor
pop
or
je
cmp
lea
xor
enter
add
les
sub
add
xchg
inc
add
and
fnsave
push
shrb
call
xor
ret
incl
push
fwait
int3
or
add
test
dec
mov
les
sbb
dec
lret
cld
add
add
dec
jno
out
imul
add
push
pop
or
scas
jnp
sub
movsb
fldt
mov
mov
dec
pushf
cmpsb
dec
inc
add
push
sub
xchg
shlb
xorps
std
or
int
and
mov
aad
stc
sub
repz
pop
sub
sub
cmp
adc
and
push
inc
add
cmp
jbe
xlat
lcall
sbb
push
or
je
mov
xor
test
out
enter
popf
jb
push
out
cmp
adc
cs
es
jmp
iret
icebp
jle
lods
rolb
ds
ss
das
pop
lds
add
add
popf
cmpsb
out
out
cmc
or
lret
popa
dec
call
lods
test
mov
fisubrl
in
sahf
lea
xchg
sub
test
dec
sub
xchg
or
sbb
mov
jecxz
cmp
dec
pop
or
inc
rcll
enter
add
inc
jnp
add
pop
pop
mov
lahf
and
push
add
movsl
dec
mov
push
sbb
mov
push
ss
xchg
stos
dec
sbb
xchg
cmpsb
sbb
sub
add
add
addb
push
push
rclb
ja
push
int3
ret
mull
add
add
loopne
adc
add
les
js
push
dec
jno
pop
mov
divb
popf
mov
mov
pop
iret
rcrb
imulb
aaa
rcrl
add
fmuls
andl
lock
in
lds
sbb
and
rorb
je
out
scas
loopne
fisubrs
sbb
shrl
mov
and
or
mov
lahf
push
and
clc
daa
daa
inc
add
cmp
lock
pop
sbb
add
add
push
fmuls
out
lods
push
mov
pop
sbb
and
xor
loope
rolb
or
mov
mov
enter
lahf
xchg
test
notb
mov
mov
mov
jecxz
pop
scas
cmp
cld
mov
sub
sahf
sbb
dec
sahf
mov
aaa
push
aam
jns
insl
les
jns
mov
push
enter
xchg
sbb
in
fimuls
mov
icebp
sub
mov
add
sbb
jecxz
xor
cmpsl
push
movsl
mov
idivb
jne
fwait
in
call
movsl
xchg
outsl
dec
mov
mov
add
xchg
cmpsl
push
iret
mov
fwait
push
aam
xchg
rolb
bound
and
xchg
pop
out
ljmp
hlt
pushf
loop
sub
jl
les
aad
ds
call
lea
movsb
xchg
cmpsl
outsl
xor
xor
test
das
mov
push
test
cltd
mov
out
xchg
lock
fists
sbb
xchg
mov
add
stc
adc
xchg
arpl
mov
sub
insl
imull
lods
add
pusha
add
adc
addb
call
pushl
into
test
arpl
add
jle
mov
add
cmc
mov
ja
sub
add
cmpsl
inc
add
sub
nop
out
dec
ficoms
sub
mov
pop
movl
cwtl
test
inc
add
jl
inc
add
divl
add
dec
jnp
loop
repnz
jns
pop
and
mov
mov
insb
dec
push
pop
imul
push
popf
out
in
sbb
icebp
data16
mov
sub
pop
lcall
push
rolb
mov
cmc
inc
loopne
dec
add
add
adc
dec
jp
lods
hlt
call
inc
add
stos
bnd
push
out
xchg
or
mov
add
mov
iret
loope
call
adc
xsavec
dec
sub
pop
jle
jne
fbstp
iret
js
inc
out
jmp
es
push
mov
or
and
addb
pop
jecxz
and
scas
fisttpll
dec
inc
add
push
in
decl
adc
push
jl
pop
xchg
sbb
jne
mov
push
popf
bound
jle
push
push
jge,pt
add
mov
pop
mov
lret
fnstcw
cli
and
pusha
add
xchg
ret
jbe
mov
mov
pop
and
leave
mov
push
popa
mov
sbb
outsb
xchg
mov
iret
cmp
xchg
cwtl
loopne
outsb
cs
std
and
aam
addb
std
cli
int
hlt
mov
add
ja
push
xchg
mov
add
inc
lret
mov
mov
push
xor
add
add
aam
cmp
adc
outsb
notl
out
mov
out
push
push
inc
add
imul
cmp
and
js
pop
loopne
or
mov
xchg
jbe
das
push
dec
or
stos
pop
addr16
imul
clc
jne
addb
imul
inc
pusha
add
sub
pop
in
enter
imul
push
loop
and
adc
roll
int3
and
mov
xor
and
out
push
jo
add
das
xchg
daa
out
mov
add
fwait
nopl
add
add
xor
jb
imull
push
inc
jg
mov
mov
movb
out
call
add
or
or
xchg
mov
fbld
push
arpl
jo
pop
dec
xor
jno
adc
mov
jecxz
jns
inc
pusha
add
and
bound
cmp
movb
cmc
lods
bound
mov
mov
mov
inc
jg
add
pop
out
test
mov
pop
fpatan
dec
jae
jb
faddp
negb
add
add
xchg
xchg
insl
mov
mov
cmp
adc
rorl
test
add
jecxz
push
inc
pop
or
hlt
ficomps
jecxz
fsubrl
mov
xor
pop
test
test
pop
jg
jl
add
ljmp
jno
xor
pop
rol
add
in
aaa
mov
jne
add
stc
lret
adc
rcrl
cmp
in
cmpsb
in
push
pop
adc
add
or
subl
cmp
out
push
xor
sbb
jno
int
divb
push
dec
mov
mov
cwtl
cmp
arpl
in
les
sub
rcr
lock
dec
pop
mov
ds
pop
or
inc
add
sub
push
mov
add
pusha
add
lret
popf
mov
stos
cmp
stc
jno
imul
add
cmp
ljmp
xor
add
jo
jno
imul
jge
sub
add
jns
out
je
jmp
add
sbb
sbb
mov
xor
add
loopne
in
in
mov
add
leave
pop
adc
or
movsl
pop
push
addb
jne
jl
mov
arpl
mov
add
into
fstps
push
cltd
sub
sub
adc
push
push
mov
dec
or
cmp
and
or
xor
mov
push
push
sar
into
ljmp
scas
sbb
mov
aas
cmpsb
lods
push
decl
rclb
enter
and
pop
lods
fiaddl
cwtl
jge
stos
fs
das
mov
xor
lcall
lock
add
pop
mov
shlb
insb
sub
sub
in
nop
ja
stc
sbb
mov
rcrb
addb
insb
cmp
xchg
popf
dec
jge
pop
inc
cmp
les
call
xchg
insb
arpl
add
mov
mov
mov
sbb
insb
push
sbb
mov
jno
jecxz
add
pop
iret
dec
insl
mov
dec
xor
adc
mov
xchg
or
pushf
pop
subl
cltd
rolb
mov
inc
add
cwtl
xor
adc
adc
add
or
insl
sti
sub
push
test
addb
add
push
add
xchg
ret
sahf
lock
rolb
fcmovne
pop
enter
inc
add
loop
cmp
and
add
mov
jae
pop
xchg
dec
rclb
leave
loopne
pop
adc
or
push
stc
das
xor
pop
mov
repnz
loope
scas
mov
push
xchg
inc
add
mov
icebp
adc
and
ret
in
mov
pop
stos
clc
repnz
mov
add
jae
inc
add
jno
dec
jmp
add
les
addb
and
inc
add
push
bound
je
fbld
scas
repnz
jbe
add
xchg
pop
xchg
dec
mov
into
adc
mov
add
lret
mov
pop
dec
xor
in
outsl
mov
add
or
cmpsb
and
cmp
mov
jb
sbb
sti
cld
push
mov
sar
je
add
sbb
bound
cli
fucomp
je
add
jl
or
push
xchg
gs
or
add
inc
add
fwait
lods
lcall
pop
pop
jl
xchg
push
add
add
in
loopne
aas
test
dec
cmc
or
repz
jne
or
shl
jo
movsl
pop
sbb
jo
pop
movsb
aas
mov
dec
cmpsl
push
in
cltd
scas
dec
shrl
ja
fwait
add
lods
addb
inc
lods
fimull
pop
loope
into
je
push
jmp
hlt
lret
pop
push
add
inc
add
repz
add
xchg
int3
xchg
jne
lret
pop
pusha
add
shr
pushf
je
addb
add
sahf
mov
or
dec
add
out
push
addb
pop
scas
pop
mov
push
push
jae
adc
jge
xchg
sti
sub
add
sub
addr16
mov
push
sbb
push
clc
bound
fadds
inc
movsl
ljmp
mov
add
add
mov
rorl
lods
movsl
fs
mov
add
pushl
cmp
dec
or
pop
cld
jl
sbb
dec
js
imul
sti
bound
lcall
xor
xor
push
cmp
les
aaa
in
mov
data16
movb
pop
pop
lods
sub
or
fucomp
jo
adc
loop
and
jne
lea
sbb
lahf
cmp
add
xchg
mov
xchg
cltd
xor
movsb
xchg
scas
loopne
mov
jmp
inc
add
jp
shr
fisubl
test
out
mov
lcall
push
dec
push
fists
movsl
mov
sbb
leave
enter
scas
dec
lds
dec
je
and
add
mov
mov
jl
insb
pop
jmp
aaa
bound
sbb
pop
xchg
shrl
push
fsts
push
addr16
imul
in
pop
lcall
repnz
mov
cld
jb
out
adc
sahf
add
sub
add
rcr
xchg
xor
xlat
dec
ficoms
ret
movsl
jno
cmpsb
and
xchg
or
in
fisttps
clc
mov
out
mov
add
repnz
in
call
add
pop
mov
xchg
lods
pop
adc
movb
jl
push
push
rclb
xor
cmpsb
idivl
mov
lea
or
add
ss
add
test
inc
add
clc
xor
outsb
scas
sub
mov
pop
inc
outsl
fdivrs
sbb
sub
mov
push
stos
testb
mov
jb
add
test
add
cmp
mov
mov
cmp
cmpsl
cmp
and
mov
bswap
pop
out
add
mov
sbb
pop
fbld
loop
xchg
shlb
dec
or
loopne
add
add
sub
jp
aaa
mov
add
lock
aam
mov
mov
push
push
add
movb
fmuls
jecxz
jnp
mov
les
fsubs
xchg
push
or
mov
out
adc
sbb
lods
jl
dec
add
rolb
test
jle
sbb
dec
cmc
push
bound
sbb
xor
mov
lods
repz
and
mov
mov
fadds
add
pop
sub
sbb
js
push
add
mov
xor
pop
movb
es
les
pop
ficoml
jg
gs
pop
xor
push
je
stos
jo
insb
aas
inc
add
push
aad
lods
sub
out
pop
mov
pop
icebp
adc
xor
push
test
lret
andps
rclb
add
enter
cld
inc
inc
out
dec
push
fistpl
push
outsl
push
cwtl
test
jae
or
mov
add
test
in
cltd
mov
push
xchg
cmp
dec
daa
inc
test
and
rorl
push
mov
stos
call
and
push
imul
stos
outsl
inc
add
dec
push
loop
loope
add
mov
lcall
nop
fiaddl
fwait
hlt
imul
add
mov
xor
daa
sbb
mov
mov
sbb
sbb
sbb
add
jae
jmp
lds
sbb
add
and
roll
sbb
jae
fwait
xchg
je
das
xor
add
push
push
push
xor
sbb
sbb
jle
mov
cwtl
adc
pop
test
cmc
sub
lods
out
cmp
mov
test
xlat
ljmp
or
out
loopne
loopne
test
dec
mov
cltd
or
push
jl
jno
or
imul
pop
cmpsl
in
shrl
rorl
rcrl
add
and
pop
or
mov
insb
xchg
and
loop
mov
add
aam
xchg
outsl
sub
jae
mov
xchg
gs
scas
sub
adc
jne
fidivl
mov
lret
outsl
ja
cmp
add
and
dec
dec
out
xchg
movl
dec
rcl
es
xchg
xlat
pop
pop
dec
push
scas
cmp
outsl
or
add
add
add
ret
insl
adcl
in
cmp
repnz
movb
sahf
jae
cmpsb
in
xchg
mov
sbb
dec
out
test
out
mov
xor
gs
test
dec
test
mov
jbe
or
mov
fcoms
pop
push
pop
addb
mov
add
in
mov
pop
add
or
jle
les
cmpsl
inc
add
add
fwait
inc
pop
mov
or
icebp
xchg
sub
rep
and
mul
hlt
aaa
push
mov
pop
ficompl
push
inc
mov
out
jl
add
or
dec
push
loop
jne
add
loope
xchg
adc
loopne
repz
and
test
add
pop
pop
bound
sarl
inc
lock
push
jle
push
not
notl
mov
push
negb
arpl
add
mov
fidivl
out
add
ds
jnp
pushf
push
jmp
lcall
mov
cmp
pushl
setns
fwait
sub
insb
or
inc
add
inc
add
inc
add
daa
sarl
shr
pusha
add
jno
add
ret
mov
divl
stos
push
mov
add
sub
mov
stos
or
mov
cmp
inc
add
testl
push
pop
push
sbb
sub
lahf
mov
add
push
fimull
mov
dec
repnz
xchg
or
call
push
test
pusha
add
jbe
in
add
data16
addps
lahf
mov
push
add
mov
movsl
or
cwtl
cmp
pop
int
cmp
adc
add
lds
fists
cltd
push
pop
popa
rolb
inc
addb
mov
pop
jnp
mov
rolb
aam
push
sub
jbe
jp
xchg
mov
popa
xchg
add
mov
daa
push
jno
outsb
push
mov
jae
lcall
pop
pop
mov
lret
pop
jb
lret
adc
sub
mov
popa
movb
jecxz
cld
ss
scas
inc
add
cmc
cli
or
pop
int3
les
das
sbb
arpl
incl
inc
mov
jno
fsubs
mov
sub
adc
push
push
mov
jbe
lods
std
ds
or
rcll
add
repz
xor
cli
xchg
push
mov
adc
aad
and
and
mov
or
ret
mov
inc
add
loope
insb
pop
lds
sbb
fstp
sti
sub
xlat
xchg
mov
arpl
es
aas
or
or
add
bswap
call
into
test
fcomip
dec
add
leave
fucomip
addb
lret
or
out
dec
mov
xchg
hlt
stos
test
jmp
mov
in
lret
stos
repz
jns
and
ret
mov
jne
add
push
and
shlb
outsb
pop
add
pop
cmp
add
shrb
into
pop
lea
add
xor
dec
out
or
xor
sub
sub
add
push
enter
jg
add
cmpsl
addr16
adc
mov
popa
jl
add
stos
pop
inc
add
mov
mov
dec
aaa
das
mov
cmp
in
test
mov
xor
and
pop
xorl
adc
fwait
dec
xchg
sub
xchg
mov
jnp
fidivrl
cmp
ret
jae
lds
cmp
pop
neg
nop
mov
cmp
cs
lock
xchg
xchg
mov
sbb
adc
inc
add
ret
aam
adc
add
mov
cmp
clc
scas
xor
fnsave
popa
inc
add
stc
dec
insb
lods
gs
or
jb
add
loop
nop
and
out
mov
test
xor
imul
sub
jo
cli
cmp
mov
xor
mov
movb
notb
xchg
sub
push
repnz
jae
fidivrs
mov
xchg
lea
fldenv
ljmp
mov
in
insb
jne
into
sbb
xor
push
popf
jge
call
sbb
inc
add
mov
add
sub
ffree
add
sub
add
adc
add
int
lret
scas
dec
pop
int
cld
imul
cld
movb
pop
test
stc
stc
mov
add
mov
nop
inc
add
in
dec
out
and
xchg
xchg
incl
or
push
int3
out
test
dec
rcll
roll
dec
or
cmp
adc
add
inc
ss
adc
cmp
nop
add
add
xor
cmc
inc
add
add
xchg
out
push
in
icebp
fidivrl
jl
icebp
dec
addb
push
fldcw
test
inc
mov
xor
sahf
aad
rolb
mov
inc
pop
aas
push
in
inc
xchg
outsl
ficompl
inc
insl
inc
cltd
and
cmpsl
add
sbb
aam
in
shrb
enter
add
cmp
stos
jnp
shlb
data16
daa
movsb
mov
push
movb
cmpsb
cmp
test
addb
add
add
push
les
fwait
and
in
and
dec
sbb
add
xchg
add
outsl
mov
dec
pop
push
mov
in
in
les
call
mov
cmp
daa
cmpsb
add
pop
lods
test
push
push
mov
fsubl
insl
and
inc
test
fnstsw
lret
jo
les
addr16
rorb
push
xchg
pop
cmp
int3
add
je
xchg
aad
push
add
or
ficomps
iret
pop
inc
inc
add
popf
mov
dec
leave
stos
lock
xchg
push
add
push
add
imul
mov
mov
xor
push
fstl
mov
inc
in
fwait
lret
push
xchg
lock
push
insl
add
push
xchg
daa
cltd
fdivs
sub
faddp
add
sbb
clc
push
add
lea
push
in
jnp
jb
add
push
les
dec
xchg
mov
fbstp
xchg
push
out
lods
dec
pop
mov
inc
add
or
dec
sub
add
ds
mov
das
mov
out
aam
sbb
int3
xchg
rolb
xchg
mov
jne
jg
ss
in
mov
or
cmpsb
aaa
fdivr
adc
xchg
cmp
ds
sub
cmp
add
add
popf
fiadds
add
add
jl
pop
or
ljmpw
and
mov
mov
dec
rep
adc
enter
pop
dec
cmp
and
popf
lret
push
add
scas
push
add
js
mov
ljmp
or
add
data16
add
mov
xlat
and
ss
cmpsl
test
mov
iret
call
pusha
add
push
addb
mov
cwtl
lea
pop
add
add
add
mov
sub
shl
cltd
out
lods
sub
mov
enter
mulps
adc
lea
sti
mov
fdivp
jns
leave
mov
call
popf
sub
sub
push
push
cmp
cbtw
testl
cmp
mov
arpl
push
aaa
stos
mov
scas
aam
jo
fs
leave
jl
xlat
ret
inc
fcoml
xor
pop
imulb
movsb
stos
jbe,pn
jbe
fisttpll
cmp
add
add
jnp
and
push
add
sub
inc
push
xor
pusha
add
jg
pop
ret
or
int3
movsb
pop
imul
add
cli
jbe
add
adcl
mov
pop
iret
decl
dec
jbe
add
lock
mov
fistpll
test
fsubrl
add
loope
pushf
rcll
add
add
jg
call
cli
mov
push
jmp
out
cmp
in
addr16
add
lret
into
cmp
fcmovbe
fstp
sub
rorb
les
fnstenv
add
cmpsl
sbb
lahf
xor
mov
pop
cltd
xor
xchg
js
cmp
push
fldt
test
and
js
push
add
dec
roll
cli
out
and
xor
in
cmp
fwait
push
xor
ljmp
fisttps
mov
mov
inc
fcompl
pusha
add
add
ja
push
fdivs
mov
push
popa
mov
sub
mov
fwait
mov
xor
sbb
sarl
adc
xchg
push
popa
mov
mov
xchg
pop
mov
into
xchg
push
inc
add
into
mov
mov
dec
imul
add
sub
ret
mov
add
lea
mov
jp
ljmp
or
add
cwtl
add
ss
sub
dec
sbb
out
out
mov
dec
leave
jae
add
out
sbb
daa
testl
outsb
imul
pop
mov
add
add
in
in
js
mov
add
jge
sarb
pop
ljmp
lock
insl
cmpsl
fbld
sti
jl
addb
push
add
pop
push
pop
mov
leave
and
push
punpcklwd
bound
sub
ret
cld
es
jp
leave
adc
dec
add
out
mov
testb
add
nop
psubsw
jle
lcall
popf
outsl
leave
dec
out
test
rolb
sbb
lret
cmp
and
dec
aas
cmp
xor
sbbl
sti
or
pop
dec
sbb
jl
in
push
add
addb
imul
pop
ja
lea
pop
lds
in
xchg
and
dec
iret
in
cmp
add
cmp
inc
gs
xchg
fbstp
imulb
in
jne
ds
adc
lret
sar
sbb
ret
xor
sub
inc
pop
add
add
js
mov
pop
arpl
enter
jns
flds
ret
push
mov
push
out
lret
jecxz
add
ss
rorl
cli
notl
daa
call
fildll
cmc
addb
in
fwait
dec
outsl
mov
push
jb
dec
mov
dec
jno
mov
dec
pop
xchg
lahf
inc
add
fldln2
add
add
adc
test
jp
xchg
int3
icebp
add
call
add
mov
insl
pusha
add
sub
ja
scas
prefetchwt1
out
mov
xor
xchg
mov
add
mov
das
dec
fmull
popf
cmp
lds
jb
sub
pop
cmp
pop
rorl
fs
push
psubq
add
add
add
sbb
test
mov
fwait
jecxz
pop
push
adc
add
jp
xor
ret
mov
iret
bound
popa
fbstp
xchg
xor
or
sbb
inc
add
outsb
insl
scas
xchg
jge
cmp
adc
jl
push
sub
test
sahf
rolb
shll
pusha
add
shrl
scas
insb
sahf
sub
add
xchg
daa
cltd
adc
div
out
add
cmpsb
jp
add
jmp
in
pop
mov
das
incb
add
dec
xor
aad
xor
push
jmp
adc
rolb
gs
mov
cli
scas
jo
cmpsb
addr16
shll
mov
rcl
mov
mov
mov
das
xchg
ficomps
aam
or
or
addr16
push
sahf
jge
sbb
ja
adc
add
dec
dec
leave
popa
mov
xor
lods
dec
or
push
add
cmp
add
data16
add
sub
jne
adc
ret
or
imul
jae
dec
icebp
imul
pop
hlt
cwtl
mov
jge
mov
dec
jp
jecxz
scas
in
mov
cmp
xor
mov
fwait
sub
add
sahf
mov
adc
ljmp
in
pop
fwait
ss
aad
xchg
mov
add
push
add
push
mov
add
js
andl
addb
cmp
add
sti
divl
out
jo
pop
jp
push
mov
stos
adc
into
jmp
cmp
mov
and
dec
ds
rorl
sbb
jmp
outsl
pop
pop
push
add
add
add
inc
add
sub
pop
xor
push
into
ficoms
add
dec
loope
dec
call
iret
push
cmp
inc
mov
mov
lods
add
pop
xchg
inc
add
mov
in
mov
repnz
je
sub
cmpsl
test
rolb
adc
loop
push
xor
fcoml
adc
add
push
mov
pusha
add
jb
shr
gs
add
mov
sub
iret
adc
mov
adc
sbb
movb
or
add
xchg
das
xchg
dec
pop
push
add
cwtl
inc
sahf
adc
test
ja
dec
mov
mov
inc
fcmovu
sub
pusha
add
stc
xor
loop
mov
pop
scas
mov
mov
insl
and
xchg
add
cmpsl
mov
mov
mov
mov
ja
cltd
add
repnz
add
and
or
outsl
push
xor
and
bound
mov
mov
add
ret
pop
lds
pop
cli
xor
jg
pop
pop
push
inc
or
fmuls
mov
shll
int3
ret
sbb
jb
mov
and
add
rolb
mov
rolb
loop
add
iret
ret
movb
fdiv
pop
pop
ljmp
cmp
call
stos
rcr
mov
mov
xor
add
add
jge
xchg
add
les
lea
inc
dec
sbb
scas
pushf
in
cmp
adc
add
scas
into
xchg
popa
push
push
js
bound
fsts
cli
aaa
scas
mov
leave
out
pop
cmpsl
outsl
push
test
pop
push
out
jmp
jo
dec
jb
dec
jb
outsl
jecxz
add
int3
fisubrl
dec
jge
add
aas
pop
jge
mov
push
xchg
es
out
push
mov
add
addb
inc
add
outsl
adc
mov
outsb
and
out
mov
pop
xchg
sub
mov
mov
cmpsb
sub
xor
inc
add
rcrl
scas
jecxz
daa
jg
dec
sahf
in
jg
imul
inc
add
cld
inc
add
ret
cmc
dec
or
mov
adc
add
mov
jne
scas
outsb
xchg
jnp
cmp
inc
jp
dec
xor
add
iret
sti
loope
movsl
jg
pop
push
movb
add
or
into
pop
add
push
lret
jge
add
mov
jge
out
jg
mov
adc
daa
dec
cmc
fbld
push
notb
ret
xchg
rcrl
xor
loope
cld
inc
push
sub
aam
sti
in
jg
xor
mov
inc
add
and
data16
lock
stos
push
test
lret
mov
test
or
push
insb
push
bound
dec
push
es
push
aas
pushf
addb
push
mov
add
sti
imul
mov
sbbl
mov
sbb
pop
in
add
adc
jge
call
and
add
mov
dec
and
loopne
inc
pop
adc
add
jp,pn
pushf
xchg
repnz
outsb
xchg
lret
jo
sar
adc
mov
popl
lea
test
sbb
cmpsl
mov
or
xor
lods
mov
out
add
lret
add
je
mov
add
jno
mov
data16
ret
sub
sbb
pop
or
negb
push
adc
cwtl
cmp
sbb
add
mov
sub
icebp
xlat
or
movsb
sub
mov
daa
push
in
sbb
push
push
push
sbb
in
cli
add
scas
jp
ljmp
loopne
mov
std
shll
sti
lods
dec
into
cltd
cmpsl
jmp
fs
ret
or
jp
les
push
nop
aas
pop
jns
popa
int3
push
inc
add
adc
jl
adc
mov
push
pop
clc
push
sub
jno
repnz
dec
repnz
lock
addb
pop
lods
aam
inc
es
xchg
xchg
addb
mov
loope
add
mov
add
enter
ja
xchg
adc
cs
gs
mov
fcomps
or
rolb
add
in
or
inc
lret
xor
mov
add
ss
mov
push
shll
xor
lods
shrl
mov
aaa
das
lods
push
push
popa
jle
insl
cmp
add
add
in
mov
repnz
dec
add
ljmp
mov
in
or
push
addb
mov
inc
add
roll
xchg
push
add
pop
push
inc
add
imull
mov
mov
jns
out
icebp
xor
cmp
mov
repz
data16
fsubs
mov
add
imul
add
loopne
push
fnstcw
mov
cli
dec
mov
push
add
inc
add
sub
add
neg
fnstsw
xorl
fwait
stos
dec
jb
into
mov
nop
jno
repnz
lea
and
or
cmp
pop
cmp
pop
in
imul
decl
add
dec
mov
sub
push
outsl
sbb
add
sbb
add
jne
sbb
stc
xchg
insb
mov
cmp
mov
aas
stos
jno
ror
fildll
mov
adc
mov
add
adc
pop
mov
test
mov
fwait
mov
cmpsl
push
popf
insb
or
sub
loopne
inc
cmp
pusha
add
popf
gs
xchg
or
stc
jecxz
and
sbb
cld
xchg
pushf
std
xor
mulps
push
inc
add
sub
enter
scas
sbb
push
mov
push
xchg
mov
jg
fiadds
out
jnp
cmp
dec
xchg
sbb
mov
mov
cmp
pop
jmp
xchg
pop
cltd
xchg
jl
add
jae
lds
or
jmp
iret
push
icebp
movb
inc
add
mov
jo
xchg
sub
sbb
or
out
sub
test
add
pop
lret
addb
mov
jo
add
adc
loopne
add
add
repnz
es
add
out
je
jecxz
or
rcrl
dec
cld
jmp
add
pop
sbb
pop
das
out
popa
pop
pop
testb
jns
add
mov
mov
add
pop
movsl
clc
iret
xchg
addb
mov
jbe
cmpsl
and
push
jg
jl
pop
cmp
outsl
adc
xor
jne
sub
mov
mov
cltd
inc
popf
jno
cmc
mov
add
add
stos
inc
add
adc
cmp
cmp
add
jle
les
adc
add
add
ja
arpl
lret
jno
scas
and
pop
pop
or
mov
int
and
inc
add
int3
inc
add
adc
loopne
cmpsl
int3
lods
mov
or
jnp
popa
jno
pop
mov
dec
stos
inc
and
in
mov
jb
lahf
idiv
test
cli
inc
add
int
arpl
push
sub
cmp
lahf
int3
xchg
loop
repz
pop
dec
mov
cmp
add
in
push
or
jne
imul
sbb
xor
add
mov
fnstcw
pop
adc
mov
mov
xchg
ret
sub
mov
push
mov
sub
jnp
adc
pop
push
adc
add
dec
or
add
ja
xor
add
lcall
fpatan
mov
into
pmaxsw
add
adc
das
fistps
and
sbb
stos
das
std
inc
xor
mov
mov
or
pop
loop
das
jne
daa
jo
mov
push
mov
or
push
mov
add
add
inc
add
mov
ffreep
add
or
icebp
add
pop
sbb
sbb
or
adc
mov
sub
scas
push
or
inc
pushf
out
lret
push
dec
mov
pop
cld
pop
data16
xchg
test
pop
imul
cwtl
negl
rolb
jns
pushf
dec
nop
mov
dec
and
push
pop
pop
sub
mov
out
dec
cld
jle
pop
daa
int3
pop
insl
mov
dec
inc
jo
add
pop
cmp
dec
lret
or
mov
insb
out
sbb
push
addb
hlt
adcl
xchg
or
mov
sub
ds
add
sarl
outsl
inc
add
and
rorl
pop
imul
jo
push
fisttps
fdivrl
adc
add
xor
add
jae
mov
push
add
push
in
lea
add
jmp
cmp
dec
scas
mov
add
sub
cmp
dec
repnz
insb
or
lcall
loope
push
or
aad
jne
adc
sbb
pop
ds
or
add
inc
add
repz
or
dec
xchg
addb
adc
cwtl
cmp
sbb
dec
cmp
icebp
sub
movsb
sti
scas
xchg
xor
add
sub
scas
insl
das
int
pop
adc
popf
imulb
mov
xor
out
ja
insl
out
mov
dec
xchg
inc
add
testl
mov
adc
cmp
ret
rcrl
lcall
or
and
mov
iret
cmc
out
aas
push
mov
xlat
int3
dec
sbbl
fnsave
int3
shl
sbb
add
xor
in
insl
push
sbb
lock
push
sbb
mov
imul
sub
fcoml
inc
add
xlat
mov
icebp
mov
mov
jl
testb
add
cmp
mov
out
addb
mov
lock
xor
cmp
mov
sbb
jne
add
imul
dec
xchg
fwait
sub
add
lods
repnz
dec
mov
add
rolb
mov
data16
sub
mov
scas
bound
shll
das
mov
jmp
addr16
add
fsubr
push
out
and
or
dec
nop
pop
ret
sbb
test
lods
jmp
add
sbb
sub
iret
insl
inc
add
movsl
js
mov
xchg
mov
test
dec
cmc
inc
add
divb
enter
icebp
inc
add
sbb
iret
fucomi
dec
imul
std
aas
mov
mov
sbb
jo
shlb
ret
out
mov
testl
xchg
adc
out
adc
jl
push
sub
jb
insl
adc
and
lods
push
or
xchg
lcall
push
stc
pushf
sti
sar
daa
cltd
adc
and
sub
xor
inc
jno
cld
cmpsb
xchg
add
sbb
add
xor
adc
push
fistl
xor
cs
mov
jle
addb
fistps
aam
mov
pop
add
loop
jle
push
bound
sub
add
push
add
popa
fnstcw
sub
xor
add
pop
pop
mov
out
pop
xchg
ret
mov
mov
es
push
xorl
fistpll
add
push
mov
in
jmp
add
addb
fildll
push
cmpsb
push
movsb
push
jp
or
cmp
cmp
std
and
sarl
xchg
and
jne
mov
int
cmp
and
addb
or
jbe
jae
and
stos
dec
mov
jle
pushf
and
cmp
fcmovnu
pop
push
scas
jb
mov
mov
shll
add
push
jne
sti
sub
pushf
in
mov
xor
lret
outsb
xlat
or
dec
pop
jns
test
repnz
in
fdivrs
cli
in
daa
ret
adc
dec
stc
je
icebp
cmp
and
sbb
stos
sbb
cmp
add
in
lahf
and
cmp
dec
lock
dec
inc
ret
imul
adc
call
dec
and
and
mov
repz
push
jmp
pop
xchg
and
or
std
sub
sbb
shl
mov
adc
xor
xor
push
xchg
test
pushf
sbb
add
cmpsl
icebp
or
jnp
add
ret
add
daa
sbb
adc
inc
add
pop
stos
pop
xlat
xchg
cmp
lea
aaa
into
push
sahf
push
stos
les
int3
sub
flds
inc
aad
adc
inc
add
daa
into
fnstcw
es
jno
dec
mov
lcall
or
add
xchg
cmp
js
cmpsb
mov
stos
push
add
jae
add
jbe
fsubrs
adc
mul
inc
ljmp
dec
inc
add
jne
add
sub
or
xchg
addb
ret
push
mov
les
jmp
mov
inc
cmp
pop
xor
mov
mov
sbb
cmpsl
and
dec
in
jecxz
inc
dec
rorl
cmp
jmp
pop
pop
inc
repz
sahf
xchg
xor
les
jae
dec
push
int3
xchg
cmpsb
ljmp
jmp
adc
cli
and
add
inc
add
and
jne
mov
mov
cmp
jns
add
xchg
jbe
add
int3
xor
in
add
out
push
jle
adc
incl
jne
cmp
xor
iret
jl
jl
add
dec
dec
movsl
xchg
leave
cmpsl
shll
xchg
adc
fcompl
into
test
sbb
inc
lock
ja
je
mov
dec
sti
add
lcall
repz
xchg
cli
cmpsb
pop
rorb
addb
popa
aaa
je
mov
lock
lods
adc
cmp
das
xchg
addl
cmp
mov
pop
imul
mov
aad
sbb
popa
jae
sub
mov
cmp
clc
xor
or
mov
cwtl
sbb
xchg
fsubs
inc
add
test
pop
sub
js
cmp
cltd
das
xor
add
outsb
or
cmpsl
outsl
pop
push
dec
lret
sub
dec
stos
fdiv
lret
mov
add
lcall
add
insl
dec
cs
stos
out
mov
pop
movb
movb
and
xlat
bound
sbb
and
or
fdivl
addr16
add
dec
push
or
push
mov
fsts
hlt
or
cmp
xchg
jo
jl
negb
adcl
xchg
push
shrl
inc
add
cmp
lods
leave
xchg
icebp
add
stos
jmp
cmpsb
add
rorl
insl
lods
mov
add
and
mov
xchg
dec
test
mov
mov
mov
push
jae
sub
sub
in
test
mov
or
int3
das
loopne
jno
outsb
inc
in
xchg
das
adc
mov
js
aam
sub
jmp
jle
nop
mov
out
imul
add
add
lock
cmp
sti
add
cmpsl
push
test
mov
fidivrl
mov
lret
ljmp
shll
cmpsl
or
into
imul
inc
aas
clc
mov
addb
movsb
fisttpl
and
inc
inc
pusha
add
ja
xchg
mov
add
stos
ljmp
mov
add
ss
push
bound
push
out
js
sahf
cmp
and
inc
add
add
bound
aas
shll
jge
mov
add
les
daa
mov
imul
jo
mov
loope
hlt
sarb
rcl
jb
or
mov
add
jae
repnz
sbb
pop
jecxz
test
in
add
xor
push
jns
lcall
add
and
lock
push
add
jmp
imul
in
test
mov
add
out
and
xor
sti
xchg
ljmp
bound
sbb
sbb
fwait
or
push
jno
mov
out
lret
dec
in
dec
ret
and
movsb
jbe
sbb
imul
sbb
jbe
sub
call
fstps
xor
sub
loop
mov
mov
dec
aaa
jmp
stos
cmpsb
mov
rolb
loope
add
add
xchg
in
sbbl
loop
push
push
fiaddl
add
mov
loopne
les
test
lock
inc
add
add
decl
push
and
add
and
rolb
push
rcrb
out
or
out
jg
dec
sub
icebp
lods
shlb
fldcw
or
sahf
push
add
loop
lods
and
adc
movb
jmp
cmp
mov
divb
mov
icebp
adc
jne
sub
inc
add
dec
push
jno
pop
xchg
jbe
and
sahf
or
addr16
xchg
in
in
inc
jne,pt
inc
add
pusha
add
add
jae
in
xor
bound
xchg
push
fucomi
shlb
jmp
and
push
out
or
xchg
jne
push
fistpll
fiaddl
dec
js
add
adc
outsl
xchg
popa
mov
stos
ss
cmpsb
mov
hlt
scas
inc
add
or
testb
pop
mov
dec
lea
in
bound
mov
in
mov
es
push
dec
addb
or
jl
add
jp,pt
mov
popf
pop
mov
cmp
popf
jb
aam
daa
outsl
pop
push
jg
hlt
or
fcoml
outsl
out
jg
mov
sahf
pop
dec
movb
mov
and
or
ss
xchg
js
out
mov
rcr
faddl
add
insb
push
mov
scas
addb
sbb
ret
ds
pusha
add
add
negl
pop
adc
add
int
sbb
xchg
je
xchg
roll
clc
imul
cmp
mov
add
cltd
int
mov
dec
push
or
jmp
loop
xor
mov
add
gs
pop
push
sti
jp
pop
xchg
mov
lcall
jns
into
add
sbb
pop
dec
jl
jl
mov
shr
cltd
jnp
mov
xchg
or
cli
imul
scas
xor
out
imul
cmp
mov
mov
jp
pop
sahf
or
sub
test
aad
or
lods
pop
iret
jno
lret
fisttps
push
add
push
insl
mov
add
pushf
shl
mov
cmp
pop
add
stos
and
pop
out
lods
lea
mov
mov
add
xchg
jl
push
xchg
sti
sahf
add
lods
cli
fs
pop
sub
mov
adc
lods
mov
popf
cmpsb
add
add
or
and
xchg
mov
xchg
mov
mov
jmp
adc
arpl
movsb
ret
aas
scas
push
add
cmp
mov
add
sub
pop
insl
pop
mov
adc
xchg
add
inc
mov
add
cmp
jbe
pop
mov
lock
cmc
rolb
jb
push
xchg
call
fcompl
iret
xchg
jge
nop
imul
imul
cli
xor
xlat
cld
divl
sbb
fs
mov
das
subl
xlat
add
cld
push
push
push
lds
scas
fnstsw
int3
std
out
pop
loop
add
jo
xchg
fsubp
fmuls
aad
movl
test
lcall
cmp
aaa
je
mov
add
movsl
aad
movsl
loop
out
xor
add
ret
push
mov
inc
mov
mov
sbb
dec
int
mov
xchg
push
lods
push
sub
insl
inc
add
mov
pop
mov
in
popa
mov
cmp
fwait
les
pop
gs
adc
push
inc
add
xor
int3
xor
inc
add
mov
repz
jge
aad
mov
fwait
sbb
ret
popa
adc
repz
call
in
ja
add
clc
add
imul
add
mov
icebp
cmp
or
jae
rolb
cmp
pop
popf
addb
adc
push
or
lret
scas
loope
and
into
mov
iret
mov
in
lret
imul
jbe
ja
jb
sbb
das
fcoml
sti
stos
add
addr16
and
lds
outsb
jle
push
cltd
repnz
int
std
int
mov
push
rcll
adc
or
mov
xchg
sbb
jns
orl
movsb
loop
movb
bound
xor
xlat
call
fidivs
push
lret
sbb
xchg
xchg
movb
or
push
mov
popf
xor
push
and
inc
rdmsr
jp
addr16
add
adc
xchg
divl
arpl
in
jecxz
mov
aad
aad
inc
add
push
outsb
lcall
mov
add
movb
fdiv
push
inc
adc
in
mov
fdiv
mov
std
leave
pop
dec
std
test
jle
mov
dec
lret
imul
adc
xchg
xor
jmp
jbe
jmp
add
ja
mov
rolb
scas
mov
mov
cli
cmp
dec
jecxz
add
icebp
mov
add
sub
popa
dec
ja
sub
jbe
movb
loopne
pop
jns
jae
inc
icebp
mov
inc
sbb
in
movsb
es
test
std
lods
test
mov
rcrl
push
xchg
xchg
adc
mov
pop
cmp
cwtl
lahf
jge
jo
adc
adc
mov
addb
cmpsl
sub
adc
push
js
xchg
push
pop
xchg
popf
xchg
ds
or
lahf
sbb
pop
fwait
das
sti
aad
ja
call
rolb
lock
pop
test
and
xchg
lock
pop
mov
xchg
cwtl
mov
or
nop
sbb
sarl
scas
or
cmp
push
or
and
lahf
cmp
add
sahf
mov
inc
add
add
xchg
movb
lret
ja
fisubrl
ds
enter
xlat
sub
add
mov
ljmp
mov
pop
mov
add
test
jne
jne
mov
gs
lods
loop
rcrb
shrb
js
xchg
sahf
sub
pop
add
add
mov
testl
int
negl
push
inc
add
mov
inc
add
jmp
inc
iret
out
or
jbe
mov
aaa
sarw
cmp
mov
jmp
xchg
subl
ret
mov
mov
add
sbb
xlat
mov
dec
rolb
mov
xor
xor
jb
pop
out
xchg
repnz
repnz
cmc
mov
inc
add
mov
or
add
sbb
add
jp
cmc
or
lds
and
movb
dec
jo
xchg
mov
fs
jnp
ficomps
dec
rcr
dec
mov
icebp
repz
arpl
add
inc
idivl
dec
jae
out
leave
fistps
inc
mov
add
adc
bound
xchg
mov
add
mov
jmp
std
ret
addl
fidivs
int
cwtl
sub
jne
sub
cmp
fisttpll
fdivrl
stc
nop
es
mov
push
stc
nop
es
push
add
imul
subl
push
mov
xchg
ret
frstor
addb
jne
stc
nop
es
add
add
nop
jmp
dec
add
mov
add
rol
sti
add
nop
cld
nop
jmp
add
add
add
lds
nop
es
add
pop
pop
stc
nop
es
add
das
add
movb
es
lods
fldl
add
pushl
sar
nop
es
add
add
jg
stos
stc
nop
es
push
add
ret
push
add
ss
add
nop
es
add
add
push
mov
xor
adc
movl
aas
in
sbb
cld
nop
jmp
add
pop
outsl
xchg
add
add
nop
cld
nop
jmp
mov
enter
mov
nop
es
test
lds
scas
subl
stc
nop
es
mov
fimuls
es
dec
add
mov
mov
xchg
ret
sahf
notb
add
imul
and
add
stc
nop
es
cmpb
inc
add
fidivl
nop
cld
nop
jmp
mov
add
mov
xchg
ret
add
add
das
add
adc
push
stc
nop
es
add
bound
js
stc
nop
es
add
fstl
or
nop
es
add
add
or
mov
xchg
ret
add
sti
sbb
repz
nop
es
test
push
iret
orb
je
cltd
mov
nop
cld
nop
jmp
add
inc
sti
add
testb
stc
nop
cld
nop
jmp
lret
sti
add
stc
add
nop
es
add
push
iret
add
lods
and
imul
es
outsl
test
xchg
push
stc
nop
es
add
mov
and
fs
nop
es
aas
mov
add
adc
addb
fsubrs
stc
nop
es
add
add
jns
add
pop
stc
nop
es
add
add
add
fdivr
nop
es
aas
mov
aas
enter
nop
cld
nop
jmp
add
cmc
fisttpll
shrl
cld
nop
jmp
add
mov
add
test
jmp
stc
nop
es
inc
xchg
pop
push
push
stc
nop
es
movb
add
xchg
xchg
push
stc
nop
es
mov
rcrl
add
stc
nop
es
add
mov
xor
mov
stc
nop
es
test
mov
jns
nop
cld
nop
jmp
and
add
jns
add
mov
stc
nop
es
inc
ret
add
incb
mov
stc
nop
es
popl
jns
stc
nop
es
loopne
add
add
int
repz
mov
xchg
ret
add
cmc
ret
aas
and
add
nop
es
add
push
cmp
nop
es
js
mov
add
dec
add
repz
add
cmp
add
cmp
adc
aas
sti
mov
es
add
add
pop
mov
stc
nop
es
popl
sti
stc
js
cmp
popf
stc
nop
es
addr16
sbbl
stc
nop
es
add
add
jmp
add
nop
es
and
aas
aas
dec
add
push
mov
xchg
ret
mov
cmpsl
add
dec
lods
push
mov
xchg
ret
mov
add
add
cmp
cld
nop
jmp
add
add
sti
push
es
pop
nop
cld
nop
jmp
mov
add
inc
loopne
add
push
pop
mov
stc
nop
es
cmp
lods
add
add
add
or
or
stc
nop
es
add
add
ret
add
es
add
add
add
stc
nop
es
sti
add
lods
in
repz
icebp
push
add
stc
nop
es
sti
add
in
add
add
ds
outsb
sbb
pop
jne
stc
nop
es
add
add
jb
add
popa
add
nop
es
in
mov
lods
jns
or
add
nop
es
add
cmp
enter
cmc
pop
inc
add
add
sub
mov
add
movsb
add
xchg
stc
mov
mov
sbb
mov
stc
nop
es
pop
add
mov
and
stc
nop
es
stc
add
add
add
jb
stc
nop
es
inc
lods
push
in
mov
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
js
das
stc
sti
mov
stc
nop
es
add
add
mov
add
mov
scas
xor
stc
nop
es
cmc
mov
popf
fwait
inc
cs
stc
nop
es
cmc
test
add
jne
stc
nop
es
iret
mov
mov
xchg
ret
add
imul
mov
stc
nop
es
sti
mov
add
stc
mov
jmp
nop
es
lret
add
dec
add
nop
cld
nop
jmp
add
js
add
add
in
decl
stc
nop
es
add
add
sub
add
adc
inc
add
pop
ret
add
sti
mov
push
mov
xchg
ret
add
add
push
incb
sti
push
mov
xchg
ret
add
add
sti
addr16
shl
stc
nop
es
and
add
cmc
add
insb
mov
stc
nop
es
add
repz
jmp
loopne
add
imul
ret
std
test
nop
cld
nop
jmp
inc
add
jo
push
push
mov
xchg
ret
ret
lods
add
add
aas
lods
jmp
stc
nop
es
xchg
cmp
add
stc
nop
es
aad
into
iret
add
mov
nop
cld
nop
jmp
das
sahf
pop
xchg
add
inc
test
loop
mov
xchg
ret
add
add
lret
add
push
mov
xchg
ret
aas
add
add
xor
add
stc
nop
es
sahf
add
mov
nop
es
add
mov
fmuls
jb
push
add
add
add
fwait
push
mov
cli
sbb
add
or
nop
add
push
mov
add
pop
rcl
lods
push
stc
nop
es
add
add
aas
add
movsl
xlat
data16
sub
cld
nop
jmp
jns
addb
lret
outsl
and
nop
cld
nop
jmp
adc
add
addb
or
out
add
add
popf
add
inc
mov
mov
xchg
ret
jns
add
into
or
mov
xchg
ret
mov
out
push
push
fadd
nop
cld
nop
jmp
add
outsl
ret
add
pop
jae
cld
nop
jmp
outsl
mov
mov
stc
nop
es
cmp
mov
xchg
ret
add
push
add
add
leave
sub
nop
es
add
add
add
es
add
into
iret
mov
imul
add
stc
nop
es
add
test
mov
push
mov
xchg
ret
push
sahf
xchg
into
add
mov
push
mov
xchg
ret
test
add
inc
cmp
jae
inc
add
add
add
sub
mov
xchg
ret
pop
inc
add
xchg
mov
push
mov
xchg
ret
add
jl
je
add
stc
nop
es
add
subb
nop
jmp
add
outsl
xchg
imul
jb
add
imul
mov
pop
add
stc
nop
es
add
add
dec
mov
stc
nop
es
add
add
inc
lock
mov
xchg
ret
add
outsl
mov
fisubl
push
mov
xchg
ret
bnd
add
stos
pop
nop
cld
nop
jmp
add
lret
addb
add
adc
add
mov
stc
nop
es
stc
add
mov
test
adc
add
push
add
add
and
dec
push
push
mov
xchg
ret
add
ret
mov
mov
fwait
dec
nop
cld
nop
jmp
inc
adcb
lret
call
stc
nop
es
add
add
cmp
nop
jmp
popl
loopne
stc
mov
push
fistps
mov
xchg
ret
add
add
push
nop
cld
nop
jmp
add
add
aas
add
add
int3
stos
push
mov
xchg
ret
addb
imul
xchg
cmp
mov
add
add
nop
es
addb
pop
jae
nop
es
add
add
push
push
mov
add
je
js
cltd
clc
jns
icebp
incl
add
stc
nop
es
aas
add
addb
lds
repnz
add
add
stc
nop
es
enter
into
add
cmpl
push
mov
xchg
ret
jns
cmpb
inc
push
mov
xchg
ret
add
dec
mov
push
fldl
jmp
ret
add
fwait
jns
add
mov
stc
nop
es
add
lds
push
mov
xchg
ret
add
add
mov
xchg
ret
add
mov
in
push
test
add
adc
add
adc
repnz
push
shrl
stc
nop
es
add
decb
push
stc
nop
es
mov
add
mov
add
mov
stc
nop
es
add
sti
xchg
idiv
je
push
fiadds
add
nop
cld
nop
jmp
mov
nop
cld
nop
jmp
mov
imul
add
nop
cld
nop
jmp
add
imul
mul
filds
es
repnz
add
add
add
stc
nop
es
add
imul
jb
add
add
aas
add
push
mov
xchg
ret
cmc
into
ret
sti
add
aad
lea
push
mov
xchg
ret
add
into
imul
jb
js
add
dec
mov
stc
nop
es
imul
lds
xchg
stc
nop
es
push
mov
adc
mov
xor
fdivrp
nop
es
add
imul
popa
add
nop
es
cmc
lret
add
mov
nop
es
das
adc
add
add
adc
out
mov
stc
nop
es
fldl
push
add
fadd
jmp
jb
add
cmp
xchg
mov
stc
nop
es
add
icebp
xor
icebp
inc
add
add
add
add
mov
es
mov
incb
iret
add
push
mov
xchg
ret
test
mov
sub
stc
nop
es
outsl
add
mov
add
nop
cld
nop
jmp
add
inc
repnz
stc
nop
es
add
add
imul
enter
in
push
ret
lds
bound
popf
inc
add
push
stc
nop
es
add
add
xchg
lret
push
mov
pop
stc
nop
es
imul
loopne
push
stc
nop
es
add
push
add
add
fisttps
es
in
add
add
in
dec
nop
cld
nop
jmp
add
dec
add
inc
imul
add
outsl
jns
add
ret
mov
stc
nop
es
into
sti
mov
mov
icebp
nop
cld
nop
jmp
stc
fwait
add
jo
add
jne
pop
push
push
mov
xchg
ret
testb
mov
aaa
sldt
stc
nop
es
add
aad
push
push
mov
xchg
ret
xchg
outsl
sbbb
mov
xchg
ret
popl
add
adc
mov
stc
nop
es
mov
add
pop
mov
push
mov
xchg
ret
sti
iret
and
add
xchg
fmuls
test
nop
es
mov
leave
nop
cld
nop
jmp
add
add
inc
in
sbb
es
add
add
add
lea
nop
cld
nop
jmp
pop
add
add
add
int
stc
nop
es
dec
add
add
push
push
mov
xchg
ret
mov
push
add
jns
popa
add
nop
es
aad
jo
add
es
add
add
mov
add
stc
nop
es
add
mov
push
nop
cld
nop
jmp
pop
add
push
aad
testb
add
pop
push
push
mov
xchg
ret
mov
testb
dec
push
nop
cld
nop
jmp
add
add
add
stc
pusha
add
data16
and
push
mov
xchg
ret
cmc
sti
add
add
pop
adc
nop
es
mov
adc
add
stc
nop
es
imul
nop
cld
nop
jmp
sti
pop
aad
add
test
cld
push
push
mov
xchg
ret
add
add
add
cld
movzwl
stc
nop
es
sahf
subb
mov
jb
add
add
movb
dec
push
mov
xchg
ret
add
lret
fildl
inc
loop
add
add
add
push
mov
xchg
ret
add
aad
add
lds
nop
es
and
add
add
mov
dec
sub
pop
add
add
cmp
cmc
add
push
stc
nop
es
sahf
popf
add
nop
cld
nop
jmp
imul
sahf
imul
sti
add
loope
nop
es
enter
mov
stc
nop
es
sti
aas
add
and
xor
add
test
es
add
adc
or
mov
xchg
ret
idivb
addb
add
shlb
arpl
and
nop
es
mov
mov
pop
nop
cld
nop
jmp
in
push
into
add
add
xchg
insl
cmp
nop
cld
nop
jmp
mov
sti
cmp
push
mov
xchg
ret
add
add
stc
nop
es
enter
add
loopne
push
stc
nop
es
js
add
push
mov
xchg
ret
add
and
add
sub
nop
jmp
mov
add
push
add
push
mov
cmp
ret
push
addr16
fwait
push
cmpb
dec
push
stc
nop
es
cmc
add
nop
mov
jmp
das
inc
add
lods
add
add
out
mov
stc
nop
es
add
add
popl
add
mov
stc
nop
es
add
popl
add
movsl
rolb
cmpsl
jb
push
stc
nop
es
add
add
mov
es
push
repnz
das
pop
add
les
nop
es
add
add
popa
fs
nop
es
aas
add
lret
inc
stc
nop
es
iret
add
add
pushl
stc
nop
es
push
add
add
mov
xchg
ret
add
add
sti
mov
push
push
stc
nop
es
add
stc
add
mov
push
stc
nop
es
add
in
cmpsl
negl
mov
xchg
ret
add
add
add
mov
xchg
ret
add
mov
add
and
push
mov
xchg
adc
adc
add
adc
nop
es
add
fldl
cmc
add
and
stc
nop
es
add
pop
push
nop
cld
nop
jmp
jo
add
add
xor
nop
cld
nop
jmp
subb
add
add
cmp
mov
es
add
add
cmp
inc
stc
nop
es
add
lret
imul
add
add
stc
xor
push
mov
xchg
ret
lods
mov
add
cmc
push
in
cmpw
nop
cld
nop
jmp
js
add
test
inc
stc
nop
es
in
add
cmc
add
mov
stc
nop
es
add
xchg
push
stc
nop
es
mov
pop
push
mov
xchg
ret
testb
lret
add
add
stc
nop
es
add
mov
es
cmp
add
add
add
cs
stc
nop
es
add
add
nop
nop
cld
nop
jmp
add
add
iret
dec
aas
pop
fwait
movsb
sbb
mov
xchg
ret
add
addr16
push
push
mov
xchg
ret
add
jns
add
cmp
stc
nop
es
sti
add
add
mov
adc
nop
es
popf
dec
add
add
jmp
stc
nop
es
add
aad
sbb
jo
inc
add
add
add
sub
icebp
nop
cld
nop
jmp
mov
push
into
cmc
add
adc
cld
nop
jmp
fnstsw
mov
ret
outsl
add
mov
xchg
ret
ret
js
add
fldenv
xor
add
stc
nop
es
add
mov
nop
cld
nop
jmp
add
add
mov
testl
nop
cld
nop
jmp
das
fwait
add
jmp
add
add
add
ficomps
mov
xchg
ret
and
jo
add
jl
push
mov
xchg
ret
add
outsl
sahf
push
add
cmpsl
cmp
filds
xchg
ret
sti
mov
mov
add
in
mov
push
mov
xchg
ret
enter
outsl
enter
stc
nop
es
inc
aad
add
sub
popa
add
mov
xchg
ret
add
add
push
mov
xchg
ret
add
inc
mov
push
mov
xchg
ret
add
subb
jp
push
mov
xchg
ret
mov
push
add
test
nop
cld
nop
jmp
add
sti
addb
mov
lahf
mov
stc
nop
es
iret
fldl
mov
add
cmp
mov
inc
add
aas
add
add
pushl
stc
nop
es
das
aas
add
inc
add
stc
nop
es
jns
adcb
add
stc
nop
es
add
ret
add
lods
adc
cs
nop
es
sti
and
rep
stc
nop
es
add
aas
addr16
mov
adc
nop
jmp
add
add
movb
jl
sar
nop
es
add
mov
stc
nop
es
add
stc
adc
hlt
jmp
pop
add
fwait
add
add
cmpb
jbe
stc
nop
es
outsl
inc
js
add
pusha
nop
cld
nop
jmp
stc
lods
add
add
add
test
dec
add
nop
es
add
add
testb
mov
sub
nop
es
pop
add
add
rorl
xor
stc
nop
es
test
popf
add
add
add
adcl
sbb
es
jo
loopne
mov
push
nop
es
add
push
aas
add
lds
je
sub
nop
cld
nop
jmp
fldl
lret
add
aaa
inc
add
cmp
rcll
add
add
mov
stc
nop
es
inc
add
lret
add
or
stc
nop
es
add
push
push
mov
xchg
ret
add
add
mov
sub
nop
es
inc
inc
imul
mov
stc
nop
es
mov
pop
jns
push
mov
cld
sbb
and
lds
add
and
push
jns
cld
nop
jmp
repnz
daa
xor
add
pop
stc
nop
es
das
add
fwait
call
nop
cld
nop
jmp
add
fmuls
es
mov
add
in
mov
ds
stc
nop
es
sti
addb
jb
add
cmp
dec
add
jb
add
fwait
pop
sti
sahf
in
call
jb
mov
cmp
add
push
stc
nop
es
add
add
int
mov
stc
nop
es
frstor
add
add
call
add
add
mov
xchg
ret
sti
add
add
cld
nop
cld
nop
jmp
lret
add
add
addb
les
inc
pop
mov
push
mov
xchg
ret
add
add
popf
cmpsb
addb
mov
stc
nop
es
add
add
add
std
jne
stc
nop
es
into
add
jno
inc
add
outsl
addb
add
sbb
and
nop
es
loopne
add
aas
rolb
std
pop
nop
cld
nop
jmp
imul
mov
inc
and
push
mov
xchg
ret
into
add
mov
add
pushl
push
mov
xchg
ret
outsl
add
iret
dec
sbb
mov
nop
cld
nop
jmp
add
push
stc
nop
es
mov
inc
lret
sbb
nop
es
add
mov
dec
pop
stc
nop
es
add
mov
add
inc
lea
es
into
lret
add
or
test
nop
es
dec
add
out
mov
stc
nop
es
incb
js
push
enter
add
nop
es
add
dec
sti
add
cmpb
add
push
add
mul
ret
in
shr
stc
nop
es
add
into
stc
fldl
add
stos
mov
push
mov
xchg
ret
js
mov
mov
nop
cld
nop
jmp
add
add
sahf
jnp
sar
es
push
inc
popf
jo
add
lods
add
add
out
push
popf
test
es
mov
stc
nop
es
add
and
cmc
inc
jnp
stc
nop
es
add
into
aad
mov
ret
xor
add
stc
nop
es
add
enter
mov
xchg
ret
mov
add
dec
ret
stc
nop
es
add
add
ja
call
stc
nop
es
into
addb
pop
pop
stc
nop
es
add
lret
pop
add
add
stc
nop
es
aas
add
testb
jne
xchg
jecxz
add
push
mov
add
dec
or
inc
or
or
popf
aad
push
stc
nop
es
add
add
add
insb
je
stc
nop
es
add
jbe
nop
cld
nop
jmp
add
add
add
push
mov
dec
adc
push
add
mov
add
ja
nop
cld
nop
jmp
add
loopne
pop
mov
nop
jmp
add
add
add
inc
push
add
nop
cld
nop
jmp
xchg
mov
add
inc
iret
cmp
rclb
out
inc
add
mov
cld
es
stc
nop
es
cmp
int
aas
adc
idiv
call
test
fldl
dec
pop
pop
call
stc
nop
es
das
dec
add
arpl
xor
add
add
add
jo
add
nop
es
aas
cmc
aas
add
outsl
les
inc
add
stc
nop
es
add
into
add
mov
inc
jne
stc
nop
es
add
mov
stc
nop
es
add
or
pop
inc
fisubs
nop
es
pop
add
add
stos
lods
stc
nop
es
dec
loopne
push
aas
add
sbb
nop
es
cmpb
loopne
add
add
xor
stc
nop
es
jo
imul
add
es
lret
inc
push
dec
fldl
and
add
cld
nop
jmp
add
xchg
imulb
les
cld
nop
jmp
mov
add
je
cltd
mov
stc
nop
es
xchg
add
inc
add
mov
xchg
ret
ret
jns
add
mov
nop
es
add
enter
add
jne
stc
nop
es
mov
mov
dec
add
xchg
ret
into
add
add
dec
popa
stc
nop
es
add
jo
xchg
add
dec
push
mov
xchg
ret
add
addb
mov
inc
loopne
mov
xchg
ret
repnz
inc
add
add
or
push
mov
xchg
ret
mov
lds
sbb
mov
stc
nop
es
add
test
stc
nop
es
addb
adc
add
stc
nop
es
addb
add
rcll
cmc
inc
add
add
add
xchg
decb
jb
addb
lds
inc
add
add
incl
nop
cld
nop
jmp
stc
add
add
les
das
popa
stc
nop
es
js
popf
add
add
add
mov
stc
nop
es
add
jo
add
sqrtps
nop
es
pop
add
sti
add
arpl
es
cmp
xchg
add
add
mov
nop
es
xchg
adc
sbbl
nop
es
cmp
add
stc
push
xchg
mov
stc
nop
es
pop
add
jge
leave
pop
add
nop
cld
nop
jmp
js
and
ljmp
add
add
test
loopne
xchg
mov
scas
lea
nop
cld
nop
jmp
inc
in
add
add
mov
fwait
mov
stc
nop
es
add
add
aas
xchg
dec
ret
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
addb
add
mov
stc
nop
es
pop
add
mov
cmpl
push
jecxz
incl
outsl
add
inc
nop
cld
nop
jmp
js
fwait
inc
add
add
stc
nop
es
addb
add
dec
pop
stc
nop
es
add
add
inc
add
add
stc
nop
es
pop
addr16
dec
fbstp
sar
es
add
add
sti
pop
ret
pop
stc
nop
es
dec
add
add
push
add
nop
jmp
and
add
pop
mov
push
mov
xchg
ret
mov
fs
xchg
inc
add
mov
imul
cmp
ret
js
adcb
es
orb
inc
imul
hlt
movb
mov
stc
nop
es
fldl
xchg
lret
insb
mov
nop
cld
nop
jmp
add
popl
add
inc
pop
add
stc
nop
es
add
sahf
add
or
pop
and
nop
es
mov
add
xchg
stc
nop
es
mov
add
mov
push
mov
xchg
ret
mov
movl
nop
jmp
add
add
or
rclb
add
add
inc
add
add
lods
stc
nop
es
pop
mov
push
add
mov
cld
nop
jmp
adc
pop
into
add
imul
mov
stc
nop
es
iret
add
lahf
jmp
nop
cld
nop
jmp
add
iret
add
push
mov
mov
xchg
ret
add
add
jne
stc
nop
es
add
call
addb
ljmp
add
add
add
nop
cld
nop
jmp
xchg
add
cmp
push
mov
xchg
ret
push
add
push
lret
mov
add
pop
add
add
nop
es
testb
leave
mov
stc
nop
es
mov
enter
add
rep
nop
cld
nop
jmp
add
das
add
add
lds
stc
nop
es
aas
sahf
add
xchg
add
arpl
add
nop
es
cmp
fwait
aas
push
push
jg
lret
stc
nop
es
add
add
sahf
push
stc
nop
es
enter
movb
lret
cmpl
nop
jmp
repnz
into
inc
sbb
es
add
fisttpll
popf
cs
nop
cld
nop
jmp
add
add
mov
add
adc
add
stc
nop
es
add
or
add
push
mov
xchg
ret
lods
popf
dec
add
push
mov
xchg
ret
outsl
add
stos
stc
nop
es
add
mov
xchg
push
mov
xchg
ret
into
add
enter
push
outsb
add
stc
nop
es
adc
add
add
aam
mov
stc
nop
es
add
add
cld
nop
jmp
cmpb
add
add
add
aad
mov
push
mov
xchg
ret
add
adc
aad
mov
cld
nop
jmp
dec
add
lret
add
mov
stc
nop
es
push
stc
addb
sub
nop
cld
nop
jmp
mov
loopne
xchg
stc
nop
es
add
add
insb
sub
stc
nop
es
fldl
inc
pop
add
lock
les
int
nop
cld
nop
jmp
dec
aas
push
lret
pop
add
repz
add
stc
nop
es
fst
imul
test
stc
nop
es
add
imul
call
stc
nop
es
mov
movzwl
stc
nop
es
enter
sahf
ret
or
push
inc
add
mov
js
sub
stc
nop
es
mov
pop
dec
js
and
push
mov
xchg
ret
add
ret
outsl
inc
mov
nop
es
add
add
sahf
and
mov
xchg
ret
repnz
aas
inc
add
mov
es
js
aad
add
mov
nop
cld
nop
jmp
lds
add
add
movzwl
stc
nop
es
cmp
dec
pop
add
or
stc
nop
es
add
aas
add
scas
mov
stc
nop
es
xchg
outsl
loopne
nop
es
add
add
add
fldenv
popa
add
cld
nop
jmp
add
mov
xchg
out
xor
stc
nop
es
add
add
jg
stc
nop
es
add
mov
add
aas
cmpsl
cmc
or
add
xchg
ret
jo
add
add
stc
nop
es
add
js
popl
test
es
add
mov
add
insb
call
stc
nop
es
ffree
add
pusha
cmc
stc
nop
es
mov
adc
add
mov
xchg
ret
mov
adc
test
nop
jmp
add
das
push
cs
stc
nop
es
jns
stc
mov
es
testb
add
add
enter
es
cmp
sti
add
push
xor
stc
nop
es
mov
add
push
dec
cmp
nop
es
push
cmc
jns
jo
xor
pop
call
and
popf
add
xchg
and
nop
es
mov
inc
pop
jo
iret
je
nop
cld
nop
jmp
add
lods
add
pop
push
mov
xchg
ret
add
adcb
cmp
sbb
stc
nop
es
aas
add
das
fldenv
stc
nop
es
stc
cmc
add
add
push
inc
push
mov
xchg
ret
add
fldl
ret
rcr
push
stc
nop
es
add
add
repz
add
clc
jmp
nop
es
test
add
add
ja
mov
cmp
nop
cld
nop
jmp
add
jns
add
cmp
icebp
jg
push
mov
xchg
ret
outsl
stc
add
add
fmull
es
jns
add
add
xor
add
inc
add
adc
nop
es
push
testb
push
sub
clc
push
mov
xchg
ret
add
mov
add
xchg
add
add
add
add
mov
jb
push
add
jne
stc
nop
es
idivb
add
add
push
stc
nop
es
add
aas
add
lock
add
push
mov
xchg
ret
add
add
aad
pop
push
mov
xchg
ret
add
add
insb
inc
insb
insb
stc
nop
es
add
add
in
mov
nop
cld
nop
jmp
add
xchg
dec
add
mov
mov
stc
nop
es
push
add
push
mov
xchg
ret
jo
lods
inc
add
imul
inc
add
addb
push
dec
push
push
mov
stc
nop
es
push
add
add
fmuls
test
nop
es
adc
add
add
stc
nop
es
lods
imul
nop
es
iret
in
add
add
jb
add
adc
add
adc
push
jb
iret
mov
fnsave
add
inc
add
inc
add
xchg
push
stc
nop
es
iret
add
pop
add
ret
ljmp
mov
ljmp
enter
add
dec
push
push
mov
xchg
ret
add
pop
add
pop
arpl
inc
push
mov
xchg
ret
cmp
add
sub
sti
add
add
inc
dec
js
popa
push
mov
nop
cld
nop
jmp
loopne
frstor
mov
add
mov
stc
nop
es
add
mov
add
stc
nop
es
add
add
add
inc
add
lea
nop
cld
nop
jmp
add
add
jno
test
nop
cld
nop
jmp
add
repnz
jp
leave
sub
nop
es
add
pop
push
stc
nop
es
pop
add
add
pushl
stc
nop
es
add
xchg
add
push
mov
xchg
ret
add
add
ret
add
push
push
sub
dec
cmp
nop
es
add
xchg
add
nop
es
test
incb
add
loope
je
stc
nop
es
inc
sahf
test
jmp
add
add
add
add
test
add
stc
nop
es
add
mov
jb
add
add
add
add
add
faddl
dec
cmp
nop
es
add
add
mov
push
mov
xchg
ret
add
add
add
mov
inc
add
add
lds
mov
nop
es
dec
add
add
ror
push
mov
xchg
ret
add
aas
push
add
add
leave
stc
nop
es
js
pop
inc
add
addb
xor
push
or
inc
and
nop
es
incb
lea
es
add
add
cmp
add
fcompl
mov
xchg
ret
add
add
pusha
stc
nop
es
das
sti
mov
add
leave
lea
stc
nop
es
add
lods
add
shlw
stc
nop
es
popf
outsl
add
mov
stc
nop
es
add
jns
sahf
sbb
test
xlat
stc
nop
es
add
add
add
stc
nop
es
add
add
add
xchg
xor
add
stc
nop
es
mov
fs
push
nop
cld
nop
jmp
aad
add
mov
call
idiv
call
fists
cld
nop
jmp
add
popf
add
mov
stc
nop
es
add
sti
lret
mov
fldl
es
add
in
ret
das
bound
lret
rep
nop
cld
nop
jmp
popf
add
add
jge
stc
nop
es
into
jo
test
dec
ficoml
fnstsw
inc
add
add
add
ret
nop
es
add
aas
add
xchg
popa
add
nop
es
mov
add
sub
call
out
incb
dec
add
movzwl
stc
nop
es
mov
leave
mov
push
mov
xchg
ret
test
mov
stc
nop
es
test
sahf
loopne
sti
cmp
stc
nop
es
inc
add
add
sbb
out
stc
nop
es
push
mov
add
inc
pop
call
stc
nop
es
in
add
scas
add
push
mov
xchg
ret
add
jns
js
fwait
popl
stc
nop
es
lret
add
sarl
add
add
nop
es
add
add
stc
nop
es
repnz
lock
mov
push
mov
xchg
ret
xorb
sub
stc
nop
es
js
aas
push
xchg
mov
es
outsl
pop
add
repnz
gs
add
stc
nop
es
add
add
call
fdivrp
incl
js
ret
dec
push
stc
nop
es
popf
popl
ret
add
add
mov
stc
nop
es
imul
mov
into
mov
stc
nop
es
subb
stc
nop
es
add
stc
test
addb
inc
cmp
jb
push
fldl
ret
iret
loopnew
divb
xor
push
mov
xchg
ret
mov
mov
es
add
mov
add
stc
nop
es
fldl
sahf
add
push
es
mov
add
imul
stc
nop
es
aad
push
outsl
pop
mov
inc
ret
jne
stc
nop
es
inc
mov
stos
stc
nop
es
outsl
add
out
push
mov
or
add
mov
adc
lahf
loope
pop
sub
outsb
jbe
add
push
cmpsb
out
scas
imul
xor
xor
mov
push
inc
lods
addb
add
lcall
loope
movb
mov
xchg
xchg
inc
add
jg
sub
lret
iret
dec
xchg
pushf
ret
imul
mov
xchg
gs
fcomps
push
mov
xchg
sbb
fldt
mov
lea
pop
add
and
call
das
loopne
add
in
sub
xchg
mov
push
fiadds
add
mov
fidivrl
jb
and
sahf
enter
testl
jo
add
testb
inc
das
mov
scas
fsubl
xchg
or
popa
xor
mov
repnz
ret
sbb
ret
cli
jmp
loopne
out
in
subl
jne
xchg
js
push
scas
mov
lods
cmp
lahf
mov
lds
cltd
in
fsubrs
ret
inc
mov
inc
add
idivb
sbb
leave
lods
jl
icebp
bound
adc
mov
mov
mov
inc
add
and
inc
xchg
mov
test
xchg
iret
mov
sub
nop
xor
clc
scas
dec
and
call
mov
mov
sub
test
mov
cmp
in
aaa
mov
add
or
test
and
fstpt
add
ss
xchg
js
insl
adc
shll
popa
out
stos
outsl
bnd
jne
scas
test
mov
add
loop
out
jp
jo
test
mov
xorl
lods
daa
push
lahf
push
loopne
adc
xchg
fists
push
add
les
mov
imul
hlt
sarl
lahf
push
add
mov
pushf
aaa
cwtl
or
movsl
inc
add
mov
xacquire
add
cwtl
testl
and
add
jno
push
inc
add
sub
mov
inc
add
add
xchg
add
leave
pop
bound
cmpsl
iret
aaa
pop
sbb
inc
add
jle
sbb
xor
sti
push
xchg
fcompl
aam
sub
or
leave
arpl
and
lds
xchg
lret
cmp
idivb
pushf
sbb
jmp
shl
lds
mov
leave
or
pop
in
xorl
outsb
popf
stos
in
cmp
sub
aad
push
mov
imul
out
xchg
sbb
call
add
mov
jnp
lock
push
test
add
lcall
int3
adc
loope
xchg
jp
xor
cltd
ss
add
sbb
repnz
in
push
sub
sub
and
loop
testl
inc
add
out
out
xor
mov
mov
pop
sahf
fdivs
int
lock
ljmp
jp
sub
aaa
mov
sahf
ds
in
jb
dec
cs
dec
mov
add
jae
and
push
mov
sub
mov
outsb
fistpll
xor
mov
mov
out
add
jne
dec
nop
imul
out
inc
add
hlt
in
out
lods
xchg
sarl
stc
fisttpl
icebp
leave
fcmovnb
add
es
adc
or
jge
lahf
mov
ret
cs
loop
ljmp
push
ja
adc
and
adc
mov
adcl
movsl
sub
gs
push
xlat
les
xor
mov
cld
xchg
xor
fistps
movsl
iret
insb
ret
adc
or
or
gs
cmp
dec
push
iret
int3
dec
mov
mov
add
not
rclb
stc
mov
negb
add
mov
mov
fcomps
pop
sbb
xor
mov
mov
into
movl
test
xor
call
lea
xor
fwait
xchg
push
nop
pop
subl
pop
sbb
lock
outsb
js
in
lret
aas
adc
mov
adc
jg
pop
xor
jno
fs
mov
push
mov
pop
aaa
pop
mov
xor
jmp
xor
mov
push
push
sbb
and
push
ds
fcmovb
js
mov
subl
jbe
mov
add
pushf
js
test
dec
lret
add
repz
cmp
sysexit
push
loop
movb
lahf
aam
push
pop
push
add
dec
jmp
adc
pusha
add
test
jbe
nop
outsl
or
mov
and
cmp
xchg
dec
lods
cmp
xchg
rclb
xor
test
mov
add
pusha
add
bound
bound
cmp
add
push
add
jp
or
iret
int3
outsb
cwtl
dec
sub
or
in
loop
jecxz
pop
dec
mov
or
add
sub
mov
jne
call
lock
call
les
dec
jge
movb
dec
xchg
pop
cmp
add
add
jo
dec
fs
push
loop
loope
adc
mov
jb
dec
pop
popf
add
jmp
or
sbb
jnp
mov
lods
out
stos
lcall
pushf
and
pop
add
or
add
inc
add
and
int
and
into
bound
stos
int3
mov
push
test
jle
inc
into
popa
js
push
add
add
cwtl
dec
sarl
sbb
push
loop
or
mov
and
cwtl
pop
mov
lods
cmp
pop
notl
sbb
add
std
mov
xor
add
adc
dec
clc
jge
es
mov
jp
xchg
jecxz
xchg
ret
movsl
aam
xchg
sub
insb
xor
cmp
shll
dec
aaa
pushf
loop
cmpsl
out
cmpsl
lret
insb
inc
jle
pop
fsts
pop
movsl
fdivr
outsb
or
fs
sub
add
mov
ret
add
lret
add
jno
imul
pop
testb
jnp
adc
add
xlat
dec
test
push
inc
dec
pop
loope
call
es
dec
sbb
add
imul
es
add
lea
cmpsb
das
loopne
fs
add
out
sub
mov
xchg
cmpsl
xchg
push
mov
nopl
inc
test
mov
in
fsubrs
mov
jmp
ficomps
push
sbb
jge
adc
add
aaa
pop
pop
dec
int
push
jmp
mov
jo
fisubrs
inc
xchg
cmp
rolb
pop
fisubs
xchg
aam
stos
xor
shlb
and
int3
clc
fs
loopne
push
mov
cltd
push
add
sub
xor
cmp
add
cld
push
lcall
ret
sub
stos
loope
adc
in
push
mov
add
lock
pop
int
add
xchg
mov
mov
stos
gs
lret
fstl
iret
lahf
clc
iret
psraw
scas
pop
mov
mov
in
mov
mov
inc
add
pusha
add
arpl
mov
add
rolb
push
aam
add
test
add
test
mov
lret
inc
push
xlat
rcrb
test
add
jbe
ss
jae
xchg
pop
push
addr16
push
aas
cmpsb
sti
cmp
mov
pushf
and
sub
testl
add
cltd
xchg
mov
push
push
mov
rcrl
js
mov
loopne
cmp
add
insl
pop
decb
bound
cwtl
push
lds
aam
or
lret
or
jmp
dec
pop
pop
bound
ret
fldcw
inc
pop
lods
dec
dec
jno
add
mov
stc
clc
outsl
mov
push
lret
fsubp
fbstp
in
xchg
mov
inc
dec
movsl
pop
pop
adc
mov
mov
loopne
mov
ja
add
pop
sub
data16
push
xchg
sub
cli
outsl
outsl
jb
xor
or
loop
push
fsubrs
pop
fstpt
adc
fwait
mov
inc
add
cmpsb
pop
xor
mov
xchg
sub
into
out
mov
push
ljmp
pop
stos
jae
mov
fldpi
inc
cmp
xor
jl
or
add
mov
jno
pop
mov
test
cmpsl
ror
cmc
sbb
jo
iret
js
push
addr16
pop
std
adc
adc
dec
pop
mov
add
mov
cs
adc
xor
push
push
addb
loop
cmp
daa
mov
pop
scas
daa
sbb
out
add
or
add
movsl
dec
fildl
mov
rolb
std
cmp
mov
rolb
cmp
cmc
loopne
nop
cmovno
mov
push
push
pop
popf
sbb
sub
add
stc
and
mov
in
sti
out
pushf
dec
xchg
xor
ja
mov
add
addb
out
push
push
movsl
rclb
outsb
mov
scas
pop
fwait
ret
pop
in
jge
or
repnz
imul
stos
and
add
add
scas
pop
lds
fadds
push
lcall
icebp
mov
out
push
fsubr
xchg
in
insb
add
jp
and
aam
lahf
ja
ret
cmp
cmpsl
in
sub
dec
adc
rcll
push
push
andl
sbb
int3
push
xchg
sbb
mov
cmp
sahf
xor
mov
inc
pop
jp
lcall
pop
jecxz
add
ret
and
pop
insb
in
test
mov
jl
sbb
sub
sbb
pushf
push
lret
xor
lods
cmp
and
xchg
xor
hlt
dec
les
addb
and
sub
xor
add
push
sub
xchg
test
lcall
pop
aas
faddl
dec
out
cmpsb
mov
fistpl
movb
ja
sahf
dec
bound
or
cmp
rcrl
mov
stos
das
cmpsl
out
mov
cmp
add
push
inc
fmuls
stos
or
push
in
and
jle
arpl
addb
and
ret
add
pop
movsb
sub
sub
adc
ret
dec
out
add
seto
testl
or
cmpsb
lahf
inc
add
add
shr
out
dec
mov
mov
lock
push
add
ss
nop
popf
sarl
outsb
lcall
dec
xor
jb
add
jne
jae
xchg
in
add
xchg
lret
in
sub
sub
cmovne
mov
rcll
xchg
jns
add
mov
add
pop
jo
stos
clc
mov
push
add
or
mov
mov
cmc
push
xchg
mov
push
dec
mov
add
sbb
or
pop
mov
jb,pt
push
jl
or
pushf
adc
sub
sub
add
cmpsl
adcl
mov
adc
jle
dec
cmp
gs
xor
or
mov
testb
mov
sarl
or
push
push
add
cmp
int3
inc
add
add
fwait
cltd
adc
test
pushf
js
mov
fwait
scas
icebp
push
or
add
pop
fdiv
and
dec
jnp
jbe
add
adc
cmp
jno
andl
ret
leave
in
bound
jbe
cmovb
rolb
pusha
add
inc
add
push
inc
add
sbb
mov
loopne
mov
add
jo
into
and
mov
push
xor
sub
add
adc
dec
aaa
cmp
push
push
mov
movl
daa
jp
add
sbb
into
or
sub
arpl
mov
rolb
out
add
xor
and
dec
inc
add
out
movsb
dec
xchg
inc
inc
add
cs
jnp
lcall
lea
shl
imul
mov
adc
mov
je
popf
adc
dec
jo
aam
add
popa
inc
add
repz
dec
iret
xor
adc
fwait
ljmp
scas
inc
jmp
pop
addb
in
xor
rcrl
sub
mov
negl
imull
ror
adc
add
xchg
xor
inc
add
jmp
repnz
mov
sbb
mov
cli
jmp
dec
ss
push
sub
push
ds
add
shlb
aaa
movb
addr16
cmp
inc
add
inc
add
insb
add
lods
lss
add
imulb
aas
dec
and
jecxz
or
and
and
loop
inc
add
int
sbb
addb
xchg
data16
mov
rcrb
cs
mov
sub
push
push
stc
and
sbb
xchg
cmp
inc
lsl
lret
cmp
jmp
out
or
jne
inc
add
lcall
insl
push
cmpsb
nop
push
stc
hlt
mov
in
adcl
fwait
dec
adc
icebp
pop
push
xchg
mov
vpcmpeqw
sbb
xchg
or
add
fimull
jecxz
lahf
jmp
or
cltd
les
mov
jno,pt
mov
insl
dec
add
add
inc
mov
cmp
pop
push
add
push
hlt
inc
add
inc
add
lods
inc
mov
mov
movb
cltd
test
outsb
daa
sub
bnd
add
sahf
cmp
cmc
sti
jno
icebp
test
and
fwait
lods
sar
sub
dec
mov
mov
out
or
jb
inc
add
lahf
les
stos
icebp
inc
dec
mov
cmp
insl
push
jne
jle
or
and
int
test
add
inc
xchg
xor
out
rcrl
and
out
jne
sbb
add
inc
add
mov
shr
ret
cmp
mov
cmp
cld
cmp
mov
mov
pop
dec
adc
repz
insl
xchg
sub
mov
mov
imul
out
or
cmp
ss
add
addb
imul
jle
jno
test
jmp
jae
scas
dec
adc
in
dec
push
add
and
pop
jle
sbb
addb
mov
inc
add
shr
shrl
or
add
jne
pop
add
add
pop
fisttpll
faddl
mov
push
jns
xchg
imul
lahf
mov
pop
inc
sub
addb
xor
add
bound
into
test
repnz
sti
in
jg
cltd
jnp
jns
addb
test
add
fisubrl
ret
mov
xor
addb
data16
je
pop
in
xor
loop
sahf
jg
loopne
sbb
push
lock
in
push
lret
jmp
cmp
fildl
mov
add
pop
fmul
jo
or
out
cmpsb
xlat
jae
mov
mov
test
xor
sub
fnsave
ror
sub
or
fnstcw
mov
lock
addb
sub
pop
cmp
add
and
rolb
xor
lcall
jmp
add
jge
or
add
push
stos
lret
and
mov
dec
jle
cli
cmp
addb
mov
dec
int
dec
mov
push
mov
push
loope
aam
in
or
pop
sbb
add
sbb
mov
insl
dec
in
dec
hlt
and
add
stos
xchg
pop
les
fcoms
int
fdivl
jp
fsubl
leave
les
mov
or
mov
xor
pop
xchg
fcmove
push
mov
mov
loopne
xchg
ja
ljmp
push
push
addr16
lods
lock
call
pop
int
push
push
add
rolb
mov
popf
lods
in
inc
stmxcsr
insb
sbb
in
push
mov
cmp
lret
cwtl
es
int
test
push
mov
cmp
add
inc
adc
push
sbb
movsl
dec
push
add
andl
add
movsl
int3
popa
fs
jmp
out
pop
xchg
mov
sbb
lret
push
or
bound
ret
mov
mov
pusha
add
data16
aas
sti
mov
mov
push
sbb
push
add
fs
jl
cli
addb
cmpps
dec
mov
es
push
ret
push
das
jo
mov
ret
movb
or
xor
sahf
and
out
mov
popf
mov
mov
pop
xchg
popa
push
pop
and
pop
mov
and
and
test
fmuls
pop
mov
pop
cwtl
fwait
xchg
and
dec
push
mov
add
fldt
xchg
js
mov
mov
pop
mov
push
push
pop
mov
pop
incb
xlat
stos
adc
fdivrl
cmp
mov
mov
mov
std
or
stos
or
bound
inc
lock
pop
inc
cwtl
ret
aaa
and
cmpsl
xchg
sahf
scas
decl
add
lock
sub
xchg
jle
pusha
add
add
lock
pop
add
mov
mov
mov
jp
cli
inc
pushf
sbb
jo
cmpsl
push
in
std
jmp
lods
pop
shll
fwait
sbb
xchg
pop
incl
adc
add
pop
mov
add
add
add
pop
lcall
add
in
jo
clc
mov
push
jne
imul
add
pop
inc
add
repnz
sbb
dec
cmpsl
mov
sti
jp
pop
les
cmp
mov
and
adc
aad
cs
lahf
ds
leave
mov
addb
inc
add
and
xor
jae
adc
movb
data16
dec
push
mov
mov
inc
add
sbb
rolb
pop
jbe
outsl
jb
mov
add
add
inc
mov
daa
cwtl
outsb
aam
imul
popf
xchg
adc
push
sti
xchg
insb
adc
adc
push
add
sub
add
jne
lods
add
add
adc
inc
jno
pop
sbb
stos
mov
lret
inc
mov
add
add
daa
ds
push
jae
lods
jge
add
std
sub
test
lock
fs
ja
cltd
mov
cmpsl
or
xchg
aam
adc
pusha
add
xor
lret
ss
adc
stos
xor
mov
xchg
adcl
mov
jl
cmp
bnd
out
jb
fcmovne
xchg
pavgw
movb
push
sbb
out
add
loope
imul
xor
pushf
jbe
add
imul
repz
pop
inc
ljmp
xor
and
int
adcl
std
push
jae
popf
jge
cli
adc
lret
push
inc
jbe,pn
inc
add
sub
in
cld
inc
add
adc
lea
pushf
movsb
push
xchg
adcl
nop
jnp
add
xor
add
xor
out
add
int
fs
inc
cmp
mov
mov
add
inc
rolb
insb
call
rolb
xor
aas
xchg
mov
jae
aam
icebp
sub
imul
lret
mov
mov
rclb
stc
bound
mov
ret
dec
repz
shlb
fidivl
iret
outsb
xor
inc
add
out
add
jne
enter
mov
sub
cld
movb
inc
pushf
xchg
jl
outsb
outsb
decb
sahf
lahf
inc
pop
addb
jp
push
sbb
mov
cmp
out
fisubl
cwtl
pop
xchg
int3
aad
ljmp
push
add
nop
sti
jecxz
addb
add
int
add
sbb
xchg
add
push
cld
xchg
mov
bound
bound
jno
clc
inc
push
incb
fwait
cmpl
pop
inc
add
scas
leave
loopne
push
loopne
int3
push
add
xor
les
sub
jo
mov
aad
xor
loopne
adc
icebp
out
dec
push
xor
sub
add
addb
les
fdivs
cmp
lret
lods
and
fmull
add
scas
bound
or
jl
sbb
andl
daa
push
add
aaa
gs
jg
aaa
mov
pop
jge
and
inc
push
mov
inc
add
mov
pop
cmp
xchg
jg
xor
dec
mov
rol
add
add
add
pusha
add
pop
push
mov
nop
insl
inc
dec
fldl
jge
xchg
inc
add
add
push
sti
jne
lods
and
addr16
pop
mov
les
iret
insl
fnstenv
mov
dec
mov
add
out
mov
es
in
push
ds
scas
addb
lods
addb
pop
push
insb
and
pushf
inc
add
outsb
sbb
stos
loop
rolb
icebp
fstpt
push
mov
aas
pushf
jo
inc
add
sahf
out
out
js
cmp
fstpl
int
or
leave
cltd
mov
add
rol
mov
mov
add
pusha
add
add
jl
add
adc
pop
xor
xor
push
hlt
xchg
inc
enter
xchg
aad
lahf
and
pop
inc
push
or
sbb
sti
and
cmp
xchg
mov
loop
dec
js
loop
sub
xlat
sarl
sub
fnsave
mov
out
loope
popl
sub
or
push
int3
shl
and
or
or
ja
mov
adc
mov
push
pusha
add
std
cmp
xchg
jns
add
fsubl
testl
sbb
add
or
ljmp
jns
cwtl
push
jne
popa
jno
outsb
rolb
loop
sbb
daa
sub
push
addb
jno
add
push
add
and
arpl
in
inc
mov
xchg
outsl
pop
pushfw
push
loop
mov
lret
movsb
cmc
jecxz
or
push
roll
add
and
imul
sbb
adc
xlat
rolb
xchg
add
shrl
outsl
test
test
xchg
xchg
cmpsl
imul
repz
xor
aad
add
icebp
in
mov
subl
adc
ficoml
cmp
popf
jo,pt
xchg
jne
into
sbb
add
lahf
mov
add
mov
sbb
jg
cli
aam
inc
add
lods
adc
cmp
push
rcll
sbb
in
insl
cmp
sub
mov
xchg
push
mov
inc
mov
add
test
cmpsl
and
cmpsl
xor
cld
cwtl
xchg
sub
cmpsl
push
xor
enter
inc
insb
mov
push
jb
add
iret
push
inc
add
jbe
jno
jle
inc
jecxz
dec
xchg
or
push
pop
cltd
lret
adc
jb
mov
jae
xchg
aaa
mov
pop
lock
add
shll
test
jg
test
jo
add
or
mov
mov
jl
int
dec
mov
and
js
mov
test
xchg
sbb
xor
xchg
daa
stos
scas
ss
jo
add
sbb
dec
std
mov
add
adc
je
bound
push
in
mov
adc
mov
sbb
jbe
ljmp
xchg
add
xchg
imul
jb
lea
cmpsl
xor
sahf
xor
rolb
rolb
add
cs
add
addb
jge
ss
aam
push
movsl
cld
inc
push
mov
sub
and
js
jmp
and
jp
sahf
sbb
and
add
push
add
rcrb
lret
sub
movsl
cltd
jp
les
mov
lock
pop
scas
insl
hlt
adc
add
add
add
push
push
xchg
mov
movsl
push
mov
jbe
arpl
push
sbb
add
mov
icebp
mov
shrl
rorl
sub
add
scas
shll
add
cmp
xchg
ret
push
cs
out
mov
inc
add
in
cld
push
inc
add
and
add
pop
sbb
dec
inc
mov
pop
jae
or
pop
jl
mov
fs
clc
rcr
je
jg
mov
add
icebp
test
sar
cmpsl
cmp
popa
lret
xor
mov
add
test
sub
decl
fimull
add
cmp
push
aam
add
std
pop
fsubrs
and
popl
ret
sbb
add
sub
inc
xchg
call
lock
add
xchg
out
jg
in
pop
xchg
aad
repnz
arpl
dec
lods
pop
imul
cmc
xchg
outsb
into
adc
add
cli
scas
mov
mov
test
sbb
push
mov
jmp
sub
cltd
mov
cbtw
cld
pop
push
inc
popa
shlb
into
call
das
stos
pop
sbb
aaa
lock
rolb
xor
add
xchg
jmp
movsb
jge
jp
cmpsl
push
daa
pusha
add
mov
pop
loopne
mov
sub
push
leave
das
mov
add
js
add
sbb
sbb
jge
js
insb
sbb
test
bound
xlat
xchg
mov
mov
fildll
rorb
mov
aas
je
dec
mov
dec
adc
add
int
ds
rol
add
dec
movb
mov
sub
in
pop
mov
inc
add
cld
mov
inc
mov
cs
sbb
pop
inc
add
mov
cmpsb
subl
sub
add
stc
add
xorl
mov
lea
add
add
jg
add
insb
sub
lods
popa
and
xchg
mov
or
add
add
jmp
sub
cmpsb
repnz
jle
popa
sbb
pop
in
cmp
fidivs
outsb
je
pop
nop
fwait
xor
popa
in
push
arpl
add
scas
and
dec
dec
add
insl
pop
xor
das
into
cld
pop
pop
pop
jle
out
and
add
ret
adc
fiaddl
add
clc
pop
fstl
and
fnstcw
push
mov
mov
stc
outsl
in
stos
jns
push
xor
sahf
mov
das
js
mov
jnp
push
minps
leave
enter
adc
add
sbb
push
es
and
or
and
jl
test
cmp
mov
mov
rolb
add
bound
std
inc
add
mov
pusha
add
mov
jnp
inc
add
add
shrl
stos
fbstp
cmp
aaa
repz
popf
fs
dec
movb
add
adc
dec
pop
sbb
es
sub
push
jmp
dec
iret
fisubs
add
xchg
adc
mov
dec
jne
in
dec
or
daa
insl
adc
ficoml
loopne
cwtl
sbb
in
loop
mov
das
incb
pop
movsl
out
or
jmp
push
jnp
add
inc
add
add
pop
cmp
mov
test
dec
jge
jae
out
fchs
jns
outsb
roll
add
sub
jle
es
lret
cld
movsl
movsb
dec
mov
xchg
stc
iret
pushf
movsb
xor
inc
hlt
jmp
and
es
std
leave
dec
inc
andl
push
insl
sub
cld
cmp
mov
lret
push
xor
pop
ja
scas
repnz
or
repnz
addr16
pop
int
gs
jns
jns
icebp
sub
gs
in
das
addb
and
pop
les
fdivl
addb
rolb
xchg
mov
add
loope
xchg
cmp
push
pop
jle
xchg
or
lahf
cmp
sbb
nop
arpl
cmpsl
movaps
add
pushf
cmpsl
push
add
push
add
xor
mov
orl
imul
insb
mov
pop
mov
add
or
xor
cli
cmpsb
addb
or
data16
jle
pop
fldenv
jbe
jp
push
out
fsubs
mov
fstl
pop
inc
add
push
pop
orl
loope
andl
push
ret
push
xchg
shlb
rorb
jae
loop
cli
das
pusha
add
pop
and
cmc
xchg
dec
cld
aad
pop
sbb
add
out
addr16
cmc
jnp
shll
mov
les
pop
jae
or
addb
mov
pushf
lret
sbb
cmp
jecxz
call
add
sbb
cmp
add
add
ret
dec
ret
stc
mov
lds
sti
mov
adc
push
sub
ljmp
mov
jne
sbb
clc
inc
xchg
test
std
mov
sbb
outsl
mov
push
shll
mov
les
push
cltd
push
xchg
nop
cmp
or
mov
fisttps
pop
and
sub
aaa
filds
jae
int
ja
jl
pop
dec
sar
pop
les
lahf
cmp
int
xor
jb
fwait
ret
jg
pop
mov
fisttps
fwait
sbb
push
aas
jne
add
fidivrl
addb
add
ds
leave
pop
adc
je
jmp
add
stos
xchg
ss
push
mov
push
mov
sbb
enter
jmp
stos
mov
pop
inc
mov
jnp
mov
lret
push
lds
add
rolb
loopne
dec
add
mov
push
jp
xchg
movsl
lret
imull
and
movb
inc
add
or
push
loope
cmpsb
popf
inc
add
mov
mov
lock
les
pop
rolb
testl
addb
mov
and
add
scas
fmul
mov
dec
xor
add
test
push
enter
rcll
jg
dec
mov
vaddss
rolb
imul
mov
addb
cli
sarl
bound
lcall
or
mov
mov
popf
fs
mov
movsb
mov
add
popf
adc
inc
loope
add
pop
cs
sbb
xor
scas
mov
test
out
fs
and
lds
and
mov
push
call
pop
mov
mov
ds
je
cmc
or
aas
xchg
xor
mov
xchg
sub
or
mov
add
mov
mov
mov
int3
lahf
pop
rcrl
add
icebp
and
dec
jecxz
pushf
or
cmp
add
lods
cmpsl
xor
test
push
or
addb
add
mov
add
xor
add
movsl
stos
cld
jb
add
sub
movb
int
pop
inc
addl
cmp
mov
mov
mov
add
add
insb
mov
sub
sti
jno
push
stc
jmp
imul
mov
push
sub
jb
add
stos
jae
or
mov
pop
xchg
test
sti
and
sbb
repz
add
push
ja
add
in
xchg
mov
inc
xor
fists
cmp
cmp
jmp
pop
stos
mov
fs
stos
mov
add
cmp
mov
out
out
or
xchg
xor
iret
loop
ret
testb
das
pop
stos
or
movsl
enter
add
push
add
jmp
or
movsl
psrad
sub
leave
adc
popa
and
fidivl
daa
in
push
adc
push
xor
pop
sbb
push
cmp
xchg
xor
add
stc
xchg
sbb
pop
test
loope
fwait
xchg
xor
cwtl
inc
insl
inc
add
outsb
and
push
and
cmp
fxtract
cli
add
mov
pop
mov
mov
add
dec
js
add
dec
add
ja
add
and
popl
jae
es
cmc
add
cmpsb
popa
stos
out
jg
int3
dec
movsl
xchg
mov
nop
dec
push
icebp
incb
inc
add
jecxz
push
scas
jns
lcall
dec
std
mov
cmp
lods
dec
xor
add
popa
jecxz
scas
adc
sub
repz
inc
movsb
and
push
ss
pushf
ret
fcom
int3
fdivrl
jecxz
sub
sbb
dec
cmp
rcll
mov
icebp
pop
mov
stos
adc
mov
mov
fwait
mov
imul
imul
jns
fdivrl
add
xchg
push
mov
add
pop
addb
add
aas
sub
push
cmpsb
or
cwtl
and
add
mov
insl
pop
movl
outsl
pop
push
add
cmpl
pop
pop
fadds
jle
sub
stc
pop
mov
inc
dec
mov
pop
cmpsl
or
leave
fwait
jo
cld
popl
das
fs
idivl
jge
add
cmpsb
into
sub
outsb
int
sub
mov
add
test
add
das
jp
dec
mov
xor
pop
dec
push
add
add
sahf
sub
cmp
add
fsubl
test
std
mov
ds
sbb
pop
jl
rcrl
lret
sysenter
add
sbb
add
sub
mov
ds
shrl
add
int3
mov
mov
fnstsw
insb
movb
or
jbe
lret
xor
jl
and
add
sbb
mov
dec
mov
mov
jb
lahf
and
xor
nop
aaa
dec
insl
and
or
aaa
mov
jmp
in
dec
clc
mov
mov
jb
inc
add
pop
into
sub
insb
adc
jo
push
cmp
sub
ljmp
sti
lods
xchg
or
sarl
add
inc
add
lret
jp
stos
pop
xchg
je
jecxz
test
insb
xchg
lcall
adc
push
cmpsl
mov
mov
test
and
leave
inc
add
push
and
add
leave
rolb
aam
add
sub
push
and
lock
enter
das
jns
xor
mov
jno
dec
add
adc
mov
jl
cltd
pusha
add
xor
lcall
pop
loop
int
mull
sub
std
xor
add
lock
push
movsl
stc
mov
fcomps
mov
xchg
xchg
dec
repz
add
rolb
pop
push
shll
jbe
bound
jo
addb
sbb
add
xor
repz
movb
pop
cmc
xlat
sbb
xor
mov
dec
lods
int3
imul
loope
lret
sub
movb
fstpl
add
push
add
add
xor
pop
lret
repz
test
data16
or
rcrl
add
loopne,pn
dec
and
or
jmp
insl
std
aam
hlt
mov
inc
add
xchg
mov
pop
loope
cmpsl
ljmp
repz
mov
mov
cld
push
fdivl
das
mov
push
xlat
nop
aaa
lock
jno
add
sbb
add
and
ret
jb
jg
es
cmpxchg
inc
add
das
js
push
sbb
pop
outsl
imul
mov
sbb
xor
js
push
hlt
sub
test
push
outsl
dec
adc
comiss
xchg
cmp
add
adc
cli
pop
pop
sbb
movsb
fcmovnu
jecxz
jp
inc
add
mov
push
mov
xchg
xchg
decb
xchg
dec
test
xor
clc
pop
mov
outsl
adc
ljmp
mov
mov
loope
push
sub
scas
push
mov
pop
sbb
cwtl
inc
sub
mov
push
daa
cmc
mov
addb
cmpsb
mov
outsb
loopne
mov
add
cmp
aam
sub
insl
pop
mov
xor
cs
cli
stos
lods
xchg
in
jecxz
cmp
lods
in
jmp
mov
sub
push
mov
or
repnz
mov
xor
in
sbb
pop
mov
push
add
pop
pop
adc
xchg
movsb
jns
jmp
add
ret
or
imul
fadds
or
push
xchg
mov
jns
pop
adc
bound
mov
sub
dec
jp
aad
add
add
adc
pop
add
ss
fmull
jl
push
add
test
xchg
fwait
std
enter
sub
inc
repz
xchg
add
push
dec
lahf
fwait
xchg
dec
push
test
repnz
and
mov
cmpl
push
inc
add
dec
clc
mov
xor
movb
jge
xchg
pop
mov
sahf
sarl
call
dec
sbbl
fdivrs
cmpsl
push
out
ja
addb
pusha
add
inc
add
pop
hlt
and
mov
jo
inc
add
icebp
xchg
dec
insl
push
inc
out
adc
xor
pop
fidivrl
sub
add
add
or
xor
or
or
add
jae
jmp
jl
push
push
imul
das
es
add
lods
jl
push
cmpsb
or
cmpsb
and
rorl
add
xor
jb
arpl
add
clc
std
movsl
cmp
test
add
loopne
lret
ljmp
test
xchg
jo
loopne
out
pushf
fistl
add
add
mov
and
rorl
js
push
lock
xchg
inc
add
mov
mov
mov
add
out
fsts
lods
cwtl
sub
mov
cmp
lret
add
xchg
ljmp
cmp
imul
cmovl
sahf
cs
jmp
xor
test
adc
cwtl
outsl
lret
sub
lcall
and
sbb
mov
xchg
mov
add
mov
add
xor
push
sbb
mov
jmp
push
pop
ret
cmpsb
add
sarb
jge
cmp
add
pop
ficompl
and
outsl
and
sbb
fisttpl
push
xchg
call
adc
jl
and
xchg
cs
bound
xchg
out
add
mov
dec
inc
add
dec
or
jg
je
movsb
out
test
mov
sbbl
fisubrs
mov
xchg
icebp
iret
sub
test
addb
rolb
dec
repnz
add
ret
mov
neg
icebp
mov
push
repnz
add
add
mov
bound
sbb
push
movsb
mov
nop
mov
xchg
jmp
cmc
stc
adc
inc
test
add
push
add
add
add
lds
subl
imul
arpl
and
sub
mov
shrl
mov
push
test
dec
inc
or
mov
int
add
test
cli
add
lret
cmp
outsl
lret
push
add
push
outsb
or
in
jmp
jno
cwtl
inc
add
lret
mov
jae
jno
mov
mov
and
pop
movsl
xor
jnp
aaa
and
add
aaa
sbb
pop
arpl
inc
add
add
sbb
mov
mov
in
xchg
pop
lret
int3
je
jle
mov
mov
sbb
ds
adc
mov
decb
xor
ja
imul
mov
dec
rorl
sbb
rolb
insb
or
push
jmp
enter
mov
mov
hlt
fstps
inc
scas
dec
sbb
inc
add
mov
and
cmpsl
imul
out
in
inc
add
popa
ja
jbe
insl
mov
lea
pop
pushf
fsubrl
xchg
adc
and
movsl
dec
test
cmp
cmp
retw
and
lret
or
jno
inc
or
shrl
add
jle
add
aam
sbb
bswap
jae
addb
add
loopne
mov
fldenv
pusha
add
xchg
and
mov
add
adc
popa
jp
cmpsb
add
ljmp
and
xor
mov
call
pop
les
sub
push
lods
sub
test
test
mov
das
jmp
add
cmp
mov
scas
jns
jnp
adc
out
ficoml
cmp
sub
or
push
add
popf
aam
add
mov
add
les
ret
sub
cmp
cltd
jle
add
jecxz
sub
push
add
cs
addr16
leave
arpl
dec
jae
leave
js
pushw
sahf
or
xchg
inc
sbb
and
adc
adc
and
inc
add
movsl
cmp
lock
pushf
stos
inc
add
xchg
sub
cmp
xor
ret
sbb
cltd
imul
enter
cltd
shrl
inc
add
push
xchg
mov
fwait
loopne
lock
inc
add
add
pop
insl
cmp
lcall
xchg
and
and
sub
mov
lds
add
xor
cld
les
pushfw
jp
mov
inc
add
jmp
push
inc
add
insb
sub
pop
pop
and
adc
add
movsl
pop
in
lret
dec
and
sub
add
mov
push
xchg
xchg
and
push
add
and
mov
ficomps
sub
add
xor
pop
divl
jo
addb
notb
xor
mov
add
xchg
push
ficoml
dec
mov
mov
mov
jnp
add
cli
adc
out
add
cwtl
cltd
test
mov
js
pop
or
dec
ret
and
mov
push
jecxz
outsb
imul
add
push
push
mov
insb
dec
sub
push
mov
je
add
sub
adc
xchg
inc
add
jns
mov
push
add
or
xor
rorl
push
inc
add
pop
fidivs
sbb
mov
lods
jno
cmp
int3
inc
add
mov
push
sahf
mov
push
mov
xor
enter
in
sbb
add
mov
add
push
inc
es
mov
mov
add
rcr
addr16
sarb
ljmp
xor
dec
movsl
popf
js
cmp
add
rolb
popa
dec
push
add
inc
add
add
stos
mov
cmp
or
or
lods
mov
hlt
or
pop
mov
fwait
jp
clc
jg
stc
add
das
outsb
push
jg
cld
mov
add
add
repnz
pop
xchg
nop
fcomps
test
inc
add
ret
aas
std
and
out
clc
mov
cld
push
dec
aaa
push
mov
loope
mov
or
mov
fimuls
add
mov
repz
add
enter
sahf
dec
sbb
addb
xor
adc
jbe
sub
pop
and
mov
les
lods
cmp
mov
sbb
pop
scas
inc
add
pop
sub
cmp
std
xchg
cwtl
fsubrs
inc
cmpsb
enter
sub
dec
stos
pop
and
testl
adc
stos
outsb
mov
pop
xchg
sbb
cmp
add
adc
mov
addb
or
add
lret
push
out
imul
push
and
mov
ss
mov
out
or
xchg
pop
sub
fs
jmp
xchg
data16
xlat
mov
add
xchg
loope
inc
add
push
dec
jo
inc
add
push
outsl
aad
into
test
cltd
lret
shrl
jle
push
je
xor
push
icebp
es
fstl
mov
add
or
jne
sti
movb
push
jo
leave
adc
sbb
push
int
ficompl
pop
xchg
stos
leave
test
cmp
out
xchg
out
hlt
insb
add
mov
mov
test
push
hlt
pop
push
add
mov
rolb
out
push
sub
add
gs
fadds
sub
add
jle
cmp
mov
mov
lock
add
inc
push
out
xchg
scas
mov
push
and
and
adc
lea
loop
ja
insl
mov
aaa
push
adc
mov
push
cmp
movsb
js
xor
mov
xlat
jns
push
lds
cmp
add
dec
arpl
and
adcl
sub
daa
sub
mov
jnp
add
rcr
pop
cmpsb
sbb
cmp
pop
pop
pop
adc
sti
pop
xlat
movsl
out
pusha
add
sub
mov
jl
dec
add
jo
pop
push
mov
add
loopne
mov
rcl
mov
xchg
test
ss
mov
rorb
push
and
pop
nop
fsts
sbb
xchg
lock
sub
clc
dec
jmp
incb
add
popa
lret
iret
pop
mov
sbb
inc
adc
aam
pusha
add
add
jp
adc
call
xchg
ljmp
mov
repnz
add
daa
push
popf
int3
push
add
sahf
mov
popf
addr16
lcall
popf
lds
aaa
cwtl
pop
add
add
push
aam
pop
xchg
xlat
mov
mov
mov
test
add
and
shl
stc
icebp
lds
int3
sub
mov
mov
daa
xor
xchg
push
inc
add
cltd
out
sahf
and
add
fisubs
cmpsl
stc
dec
sbb
add
aad
jg
in
cmp
enter
sub
incb
sbb
lea
or
mov
add
out
pusha
add
sub
push
xchg
out
popf
jbe
inc
jnp
mov
pop
in
shrl
dec
mov
xchg
stc
addb
pop
cs
movl
test
dec
adc
jnp
fmuls
int3
fdivrl
or
sbb
scas
mov
add
fs
enter
jb
aaa
adc
outsb
push
lods
ficompl
mov
and
pop
and
clc
push
fwait
mov
add
dec
scas
call
dec
cmc
or
mov
adc
int3
movsb
cmp
push
addb
imul
gs
mov
fdivrp
sbb
mov
cmp
orl
and
jge
adc
xor
mov
add
ja
adc
xchg
xor
push
xlat
add
sub
mov
movsl
lods
pop
lcall
sbb
dec
push
fildl
mov
dec
sbb
push
into
in
imul
xchg
mov
jp
mov
xor
add
cmc
jg
loop
cmpsb
rcr
sbb
clc
sub
add
mov
inc
movsb
sub
adc
cmp
push
aas
rclb
fwait
sahf
adc
push
adc
div
in
and
cld
push
inc
add
add
jb
pusha
add
mov
push
add
dec
scas
lret
nop
mov
mov
ret
fists
or
stos
jbe
add
imul
sub
insb
inc
add
jb
jnp
daa
fwait
mov
cwtl
cmp
insb
push
mov
cltd
bnd
sub
in
xor
and
iret
xor
adc
orl
loope
xchg
outsb
das
xor
push
jne
addb
jg
gs
add
aas
mov
pop
cmp
pusha
add
loop
sbb
cmp
push
pop
dec
das
mov
sbb
inc
lock
add
sahf
cli
or
cmc
add
push
pop
out
fidivl
xor
sub
cmc
sub
cmpsb
in
push
push
sub
rcrb
les
mov
lock
xchg
dec
xchg
sahf
cmc
cmpsl
mov
in
push
mov
xchg
add
subl
add
xor
jg
or
cmp
addr16
xor
push
add
sbb
clc
sub
sti
fwait
mov
cmpsb
or
mull
add
std
sti
jnp
xor
mov
add
outsl
jmp
out
xchg
hlt
xor
cld
scas
xchg
dec
dec
bound
repz
mov
cmc
adc
inc
add
sbb
ret
jb
imul
mov
sbb
mov
push
enter
and
push
mov
mov
mov
mov
out
lcall
or
fsubrs
add
imul
xchg
leave
stc
mov
dec
and
adc
je
jno
add
cmp
es
inc
or
mov
loop
push
fistl
xchg
ss
outsb
jno
push
rolb
xor
jno
in
popa
bound
mov
adc
rcll
std
mov
ds
dec
andl
inc
add
and
xchg
loop
jecxz
jl
or
and
and
rep
jl
lcall
insl
inc
cltd
sub
and
rclb
adc
jmp
mov
std
movsb
es
and
pop
data16
leave
ficomps
sbb
fmuls
mov
ljmp
cmp
outsb
cmp
bound
mov
adc
aam
add
outsl
test
fwait
add
je
push
xchg
cmpsb
loopne
shlb
add
mov
add
add
or
addr16
aam
add
mov
ja
mov
add
and
or
add
ss
add
xchg
ret
aas
je
xchg
pmullw
and
in
add
mov
pop
pusha
add
sbbl
es
xchg
fisubrs
fldcw
test
lods
push
push
add
cli
movsb
mov
mov
jmp
addb
mov
lds
sbb
loop
add
inc
mov
movsl
out
jo
xchg
dec
push
inc
ja
xchg
in
addb
pop
addl
addr16
movb
dec
cmp
adc
sub
inc
xchg
lds
add
je
xchg
lea
push
pushf
pop
call
gs
stc
xchg
pop
ret
outsb
xchg
lahf
sub
out
pop
dec
xchg
movsl
cmp
mov
outsl
mov
dec
jb
sbb
lahf
fbld
add
mov
mov
sbbl
push
mov
shr
into
inc
iret
jae
jecxz
int
add
sbb
popf
insl
mov
fs
ljmp
movsb
scas
lock
test
jnp
add
xor
imul
cmp
cmc
jb
sbb
mov
add
sub
add
add
mov
test
movsl
testb
or
ss
xchg
das
addb
icebp
bound
mov
icebp
stc
mov
popa
adc
sub
pop
inc
sub
dec
ffree
add
std
sahf
adc
addb
pop
jb
cmp
lahf
call
mov
repz
mov
and
mov
cmp
fcoml
mov
pop
jecxz
inc
or
or
insl
adc
add
xchg
or
es
leave
insb
push
xor
jns
stc
jp
cmpsb
out
add
add
fbld
inc
inc
add
cmp
add
add
or
ds
inc
addl
js
push
insl
adc
movsl
arpl
xlat
je
data16
push
add
aas
push
and
mov
ljmp
insb
jne
mov
jg
movb
push
push
xor
sub
xchg
nop
loope
add
addb
cwtl
add
sbb
inc
add
mov
and
inc
dec
es
dec
sbb
pop
das
xchg
test
add
rclb
rolb
fiaddl
inc
add
xchg
jg
sub
je
push
push
add
mov
and
jp
imul
fsts
scas
cmp
and
int3
ss
aas
jae
mov
loope
adc
jnp
adc
adc
clc
lcall
sbb
push
lret
test
into
and
pop
mov
inc
iret
and
inc
shll
fbld
pushf
adc
out
scas
lret
lds
filds
adc
add
sub
sbb
or
inc
add
xchg
mov
lcall
clc
mov
lea
jmp
dec
cmp
pop
orl
add
fs
mov
mov
add
aad
fbld
mov
push
or
aaa
and
jle
stos
out
adc
adc
add
cs
add
lretw
into
fstl
adc
icebp
inc
sub
addb
xor
pop
ja
push
outsb
int3
mov
pop
mov
push
pop
fldt
daa
pop
subl
out
push
inc
add
mov
inc
pusha
add
push
jmp
mov
sub
or
xchg
push
push
push
sarb
aam
hlt
aas
cs
scas
inc
insb
sbb
push
fcompl
mov
and
mov
dec
stc
out
sbb
push
dec
push
mov
jno
cli
dec
clc
xchg
scas
push
sub
sub
sti
cwtl
lock
xorl
push
addb
inc
adc
leave
jno
mov
daa
push
adc
inc
fsubr
hlt
loop
pop
pop
stc
mov
int3
pop
stos
mov
xchg
sbb
add
xchg
mov
mov
gs
faddl
cmp
daa
dec
jo
push
inc
add
in
pop
cmp
xchg
sbb
loope
add
add
in
out
jmp
mov
daa
cltd
gs
cmp
add
push
insb
je
add
adc
add
push
cltd
dec
cmp
mov
jns
sub
pop
push
mov
push
mov
fcmove
cmpsl
sahf
mov
push
fistps
mov
cltd
jle
dec
iret
jno
sbb
movsb
aaa
xchg
lea
push
dec
int
into
les
sbb
aam
movb
and
mov
jp
add
add
add
mov
sub
push
in
nop
xlat
insb
movb
add
push
mov
stos
push
mov
loopne
outsb
inc
add
pusha
add
orl
and
mov
mov
mov
add
pop
and
push
sbb
ret
jne
xor
xchg
in
sarl
add
xor
push
pmaxsw
adc
dec
out
shlb
mov
out
add
lock
call
mov
push
push
into
fisttpll
add
sahf
inc
lret
mov
incl
std
ljmp
aaa
ss
sub
les
jecxz
scas
pop
test
add
pop
sbb
sub
and
test
sbb
cli
bnd
movsl
mov
mov
sub
and
arpl
pop
or
pop
das
mov
push
pop
sti
xchg
notb
lods
stos
addb
cwtl
jp
push
fiaddl
cld
in
data16
aad
jne
xchg
mov
push
fnstsw
adc
je
fdivrl
lods
in
into
inc
add
mov
cli
fs
mov
test
lock
idivb
addb
test
or
pop
mov
mov
mov
push
ja
xor
sub
in
mov
sub
ljmp
in
aaa
jg
pushf
ljmp
nop
fmull
cli
ja
hlt
sub
xlat
jns
cmp
jno
filds
test
mov
mov
je
jp
sti
xor
jp
push
lea
scas
cmp
add
incb
cmc
in
fnstsw
outsl
jns
sub
adc
add
loope
push
add
inc
cltd
inc
add
mov
jg
xor
and
add
adc
pop
sub
dec
clc
push
mov
filds
dec
aas
dec
addl
mov
mov
fistps
xlat
bound
cld
outsl
sbb
idiv
dec
mov
pop
push
sti
les
fwait
daa
hlt
addl
xchg
push
add
and
add
mov
sahf
mov
fwait
jge
jp
in
pop
shlb
push
add
inc
add
inc
add
add
mov
lods
jl
sub
xor
push
in
jo
sbb
mov
ret
je
rolb
mov
mov
adc
xor
mov
fstpl
lea
inc
mov
pop
dec
xchg
aaa
cmp
psllw
mov
inc
fnstenv
loopne
sbb
mov
filds
add
mov
aad
into
xchg
push
out
lret
lret
cmp
add
jb
mov
adc
mov
push
lret
cmp
mov
inc
and
clc
jl
add
outsb
movsb
inc
add
push
jns
push
inc
add
je
jne
enter
out
mov
add
sbb
fwait
mov
mov
fldlg2
icebp
daa
push
add
push
mov
xor
cmc
insb
dec
aad
leave
call
adc
jae
lods
push
sub
addr16
add
or
lcall
cmp
add
adc
add
fimull
lods
and
insb
dec
imul
add
push
insb
fcomi
mov
jmp
add
inc
xchg
mov
bound
fwait
shl
sbb
push
inc
push
in
pop
cwtl
sub
add
in
test
or
pop
nop
call
pop
fcomip
rolb
jg
mov
stos
or
push
xor
mov
adc
fstpt
cli
addb
dec
sar
cld
das
jl
es
mov
ret
sbb
in
mov
jnp
shll
or
mov
add
xor
adc
dec
je
dec
sbb
push
test
or
xor
mov
pushf
rolb
adc
imul
js
xchg
push
adc
xor
xchg
inc
add
fildl
les
dec
or
or
pop
int3
in
imul
fildll
jecxz
inc
je
add
xor
fcompl
mov
mov
sbb
cltd
cmp
xchg
out
iret
js
pop
pushf
inc
add
add
add
fildl
cmp
testl
cmp
add
ss
addr16
inc
add
xchg
jle
adc
fldcw
push
cmp
cmp
pop
leave
mov
add
sub
bound
pop
mov
cmpsl
lods
fisubrl
add
or
movsl
dec
mov
fcoms
pop
mov
cmp
in
fsubr
fbld
add
repz
sub
ja
mov
pop
lahf
mov
dec
or
sub
lock
loope
xor
xlat
leave
cld
xchg
out
and
out
imull
popa
xchg
aad
xchg
mov
cmc
test
rol
add
pop
pop
imul
fbld
mov
xor
call
push
pop
xchg
mov
push
pop
gs
dec
mov
je
add
push
fnsave
stos
add
fldl
aad
icebp
int
inc
add
iret
leave
pop
push
lock
out
es
fistpll
addb
mov
or
insl
call
add
mov
in
sub
loop
out
mov
dec
test
ljmp
inc
add
and
mov
pop
sub
int3
adc
movsb
adc
rorb
out
push
mov
pop
dec
loop
mov
stos
loope
leave
mov
in
mov
movsl
movsl
adc
inc
add
mov
push
pushf
jl
dec
mov
inc
add
mov
jecxz
adc
loope
push
jbe
into
or
shrb
repz
mov
aam
add
pop
in
movsl
jns
scas
call
andps
daa
adc
cmpsl
inc
add
cli
aam
dec
add
push
es
inc
add
aas
inc
test
scas
mov
cli
shlb
or
inc
fisubs
add
add
xlat
sub
arpl
jb
xor
pop
inc
push
enter
mov
push
add
cmp
sarl
push
jnp
dec
in
sub
jecxz
lahf
pop
cmp
and
adc
or
lret
fwait
inc
add
imul
ret
inc
add
imul
lods
fdivp
sbb
mov
add
ficoms
xor
sub
ret
jle
ja
add
push
ss
incb
lcall
inc
add
dec
inc
xor
jge
and
jmp
add
in
mull
js
cmp
imul
pop
icebp
sbb
pop
nop
mov
inc
add
ficoml
cmp
mov
cmc
push
mov
addb
push
add
jne
adc
jge
add
es
inc
jb
xlat
cmp
mov
addr16
sub
mov
cli
insl
scas
rolb
add
dec
sbb
daa
and
xchg
loope
test
add
popf
mov
les
inc
push
fiadds
sub
loop
lret
in
pushf
dec
addb
pop
lea
add
arpl
fsubrl
stc
jmp
fwait
shlb
sbb
lahf
jp
xor
mov
mov
inc
loopne
daa
jne
jl
pop
jnp
lea
jnp
divb
movb
leave
inc
add
les
movb
pop
jle
mov
or
sbb
loopne
jnp
lods
xchg
mov
cmc
xchg
pop
xchg
mov
dec
inc
add
stos
dec
shr
cmp
inc
mov
stc
addb
fwait
je
add
add
inc
add
cmpsl
or
pop
dec
add
mov
or
mov
aas
jmp
dec
push
add
push
add
add
cwtl
ret
in
addr16
mov
in
in
add
gs
xchg
jae
in
lahf
jg
orl
jbe
mov
add
mov
mov
daa
sub
jno
mov
lret
test
mov
test
clc
xor
and
out
adc
addr16
pop
cmp
sub
popf
ja
rolb
shlb
add
lcall
or
xchg
dec
fcomp
icebp
sub
jmp
lds
das
push
sub
in
mov
xchg
and
dec
xchg
lahf
movsb
pop
push
pop
das
adc
out
rcr
sbb
enter
les
fimull
push
idivb
sbb
sbb
loope
mov
dec
repz
in
xor
mov
std
rol
add
mov
xchg
lret
jecxz
in
jecxz
mov
lock
xor
shrb
jo
push
add
aad
inc
mov
test
aad
ret
cmp
daa
jnp
test
add
enter
inc
ljmp
iret
and
sbb
add
jbe
mov
pop
push
lcall
and
bound
xor
pop
dec
jl
mov
cmp
mov
movsl
out
outsb
cwtl
xchg
or
add
fisubrl
inc
add
add
add
ljmp
mov
dec
or
cli
pop
out
pop
sbb
ret
rcr
mov
fsubp
stc
test
fidivs
dec
or
out
adc
push
push
and
je
lret
int
mov
data16
jnp
ret
aad
mov
dec
cmc
xchg
ds
add
cs
daa
nop
lods
sti
test
jns
bound
std
or
xor
in
add
mov
add
push
jmp
jle
cld
and
aaa
lods
cs
mov
lret
and
sub
rcrl
call
mov
negb
test
and
add
scas
push
rdtsc
movsb
push
push
scas
sbb
cltd
les
mov
sbb
or
or
sub
pop
push
shl
addr16
mov
test
movsb
jns
mov
outsl
test
aaa
adc
aad
fstps
sbb
inc
xor
push
jg
push
jmp
into
test
imul
add
mov
fcomp
cli
add
pop
repz
test
inc
add
popa
add
std
mov
mov
inc
add
sub
cwtl
cs
pop
mov
fcomps
jne
leave
sbb
adc
pop
jp
inc
add
push
loopw
lea
add
xchg
ja
add
imulb
es
in
pop
lret
scas
stos
mov
dec
rclb
inc
xlat
xor
repz
xchg
inc
mov
pop
jp
push
scas
lock
xchg
xchg
jge
dec
leave
lds
addb
std
sti
stc
fiaddl
add
add
jmp
aam
fdivs
mov
idivb
jns
loopne
mov
addb
add
or
into
sub
mov
add
jl
sbb
ficoml
cmp
push
xlat
add
bound
mov
mov
sbb
insb
je
cli
add
xchg
sbb
xor
cmpsl
clc
pop
cmp
stos
iret
push
cmp
ja
xchg
push
mov
addb
mov
dec
sub
dec
aas
xchg
mov
xor
add
imul
lods
sbb
add
pop
lret
shl
and
insl
movsl
mov
jb
test
lret
jns
add
sub
insl
sbb
dec
imul
pop
sub
out
arpl
add
inc
add
mov
push
mov
add
cltd
jl
orl
dec
xor
fisubrl
mov
imul
xor
lods
pop
ljmp
cmp
push
pop
cmp
inc
add
outsb
std
cmp
cmpsl
pop
sbb
dec
test
add
mov
adc
cmp
imul
inc
add
add
adc
stos
add
andl
inc
add
add
and
mov
xchg
push
xchg
orl
cmp
xchg
popa
xchg
mov
mov
xchg
mov
add
movsb
mov
add
add
fbstp
add
imul
arpl
add
jp
sbb
cmp
xor
sarl
mov
lahf
and
popf
and
or
xor
gs
mov
sub
dec
cmp
fstps
pop
cmpsl
lock
fldt
fbld
add
repz
stos
in
sub
add
shl
sti
sbb
bound
add
in
and
xchg
int
add
lods
pop
sub
jo
gs
pop
fiaddl
add
xor
inc
jae
dec
and
outsb
addb
js
mov
cmpsl
or
mov
cmp
mov
add
push
jecxz
pop
hlt
lahf
xchg
sti
inc
add
xchg
cmpsl
mov
jmp
leave
jg
ror
inc
stos
fdivrs
cmp
jmp
jle
fistl
loope
imul
sbbl
jns
push
xor
or
ret
lock
mov
xor
icebp
loopne
ficoms
sbb
out
ret
pop
or
mov
outsl
pop
hlt
xchg
mov
sbb
and
repnz
dec
or
cmp
cmp
pusha
add
ss
push
jno
int
mov
mov
mov
jecxz
xor
dec
iret
pop
adc
test
sbb
aad
inc
sahf
rolb
xor
mov
or
test
in
das
les
cltd
sbb
loope
cmp
and
mov
cmpsb
dec
jle
popl
loope
xor
inc
cli
sbb
add
and
mov
test
adc
aam
daa
inc
add
and
in
in
fsts
sbb
add
add
mov
pusha
add
push
in
or
add
shrw
repz
outsb
sbb
negl
add
add
fildll
xlat
jmp
insl
push
sbb
mov
add
inc
fwait
test
out
xor
lret
mov
enter
scas
je
add
mov
ret
vphaddubw
jae
adc
test
cmp
inc
shll
mov
in
xchg
xor
les
xlat
sahf
push
xchg
and
loop
sbb
out
pop
dec
push
xchg
push
push
pop
mov
adc
xchg
jo
fs
scas
orl
xor
push
mov
mov
and
imul
imul
mov
lds
in
test
loope
inc
add
xchg
js
mov
inc
add
add
adc
sahf
sbb
hlt
xchg
mov
leave
sub
int3
mov
mov
push
inc
movb
adc
and
in
arpl
jge
add
sbb
add
ficoms
push
addl
out
dec
cmc
addb
add
mov
push
mov
ljmp
sub
fs
jns
in
add
gs
mulb
pop
roll
aaa
scas
scas
pop
jb
ret
adc
or
xchg
xchg
or
sti
lahf
or
cltd
sahf
or
and
mov
adc
addb
add
enter
ljmp
out
or
les
das
pop
pop
mov
gs
add
fucomp
test
in
adc
call
push
jnp
mov
or
xchg
insl
push
sti
jbe
jnp
js
ror
sub
fsubrs
adc
js
mov
movsl
add
sbb
popa
in
push
mov
jmp
stc
pop
sbb
add
testl
add
leave
sbb
mov
or
negb
stos
sub
sub
or
pop
jmp
mov
mov
test
jle
call
dec
repz
cs
pop
xchg
or
inc
mov
sbb
sti
jp
fdiv
not
sbb
js
pop
std
std
push
int3
dec
addb
xor
mov
movsl
cmp
mov
das
mov
xor
outsl
push
sbb
mov
xor
add
and
insb
xor
loop
outsl
or
add
in
mov
mov
jle
cmp
add
addb
cmp
jns
iret
jg
int
jo
sbb
dec
rolb
sub
lods
in
aas
filds
movsb
mov
mov
push
push
cs
pop
mov
mov
clc
sbb
enter
daa
push
add
sbb
add
mov
rcrb
pop
dec
fwait
cmpsb
loope
adc
stc
inc
add
xchg
fstpt
es
in
push
sbb
vmread
icebp
inc
add
and
lcall
and
inc
mov
ret
adcl
enter
stc
outsl
xchg
inc
add
fsubrs
add
pop
sub
and
cld
mul
pop
repz
mov
ds
push
in
jns
xchg
adc
addb
sbb
pop
pop
mov
inc
enter
sbb
loop
or
pop
mov
popl
mov
add
iret
jge
movsl
addb
sub
dec
loopne
dec
sbbl
rolb
sub
pop
xor
or
add
lret
popa
inc
std
mov
stc
rcrl
mov
fwait
or
psllq
push
add
cld
xor
add
lods
push
mov
add
stc
movsl
jecxz
or
jmp
inc
add
mov
scas
movsb
lock
lahf
imul
add
jmp
movsl
pop
mov
jg
mov
aam
cmpsb
fbstp
sbb
ficoml
pop
test
mov
mov
jle
or
add
jae
divl
add
and
pop
pushf
subl
pop
pop
test
jo
add
jecxz
sub
and
sbb
sbb
cmp
lahf
push
lods
bound
inc
movsl
into
rcl
xchg
movb
mov
cmp
rolb
push
adc
pop
dec
pop
sti
std
add
sub
rcll
xchg
add
push
dec
imul
jo
mov
movsb
arpl
decl
add
pop
enter
xchg
int
aam
pushl
cli
pushf
inc
cltd
rolb
jnp
lds
jb
push
add
subl
jno
xchg
mov
or
test
stos
cwtl
add
mov
ret
ljmp
and
addr16
pop
loopne
jmp
js
jecxz
mov
daa
dec
cli
aad
add
dec
outsb
popf
mov
jae
mov
sub
xor
test
rolb
inc
add
mov
fnsave
in
pushf
mov
sbb
add
mov
push
int
ret
mov
cmp
sub
push
imul
pop
call
sub
dec
jne
hlt
dec
sbb
add
sub
into
push
cmp
addr16
std
ret
and
pop
dec
jecxz
add
jno
sahf
insl
mov
mov
ret
xor
leave
mov
shlb
push
sub
push
push
loopne
loop
mov
or
stos
gs
or
addb
mov
cwtl
mov
mov
out
push
test
insb
ret
jns
mov
out
dec
mov
mov
xchg
movsb
push
jge
xor
push
pop
xchg
rolb
inc
cli
sbb
pop
in
sub
push
inc
add
xor
mov
add
int3
fisttps
mov
xchg
aad
mov
add
jnp
add
add
stos
jnp
add
popf
lods
and
imul
flds
push
xchg
movsl
sbb
es
faddl
nop
test
lods
int3
lods
sub
lcall
mov
into
call
xchg
fs
cmpsb
ret
add
std
mov
addb
addr16
sbb
ds
ror
inc
xchg
or
add
out
scas
xchg
dec
ljmp
push
jo
adc
in
push
pmaxsw
cmp
pop
fwait
aad
adc
mov
and
test
add
add
addb
repnz
test
fsubp
mov
xlat
mov
add
test
mov
dec
sub
mov
pop
or
addb
rclb
nop
dec
into
and
rolb
push
cwtl
add
ror
pusha
add
sub
arpl
lds
mov
and
js
mov
xor
pop
icebp
mov
add
mov
jno
add
add
stos
mov
call
xor
out
mov
inc
add
mov
loopne
cmp
xchg
push
add
cwtl
shrb
mov
popf
adc
lahf
scas
inc
add
movsb
push
xchg
mull
add
repnz
jno
les
lahf
sub
mov
xchg
movb
lock
sbb
cmp
sahf
fnstsw
mov
xchg
jno
arpl
das
jnp
in
mov
or
scas
jbe
add
insb
push
cli
pop
out
data16
pop
insl
mov
push
imul
bound
sbb
inc
sahf
sbb
ds
aaa
pushl
push
add
jo
add
cld
mov
add
loope
xchg
js
addb
or
adc
scas
gs
fimuls
mov
add
int3
sub
fadds
dec
or
mov
add
test
cmpsl
inc
add
inc
mov
aas
sbb
cld
gs
lcall
jmp
adc
sub
dec
xor
push
adc
insl
sti
repnz
fisubrl
mov
enter
pop
stos
hlt
mov
mov
addb
add
jnp
add
pushf
call
cli
mov
test
daa
mov
out
add
inc
add
add
clc
inc
add
out
and
sahf
shlb
ljmp
jbe
xor
mov
xor
add
pop
mov
pusha
add
bound
aaa
test
out
aaa
jp
movsb
sarl
xchg
push
push
jl
dec
fbld
or
movb
jns
dec
das
and
and
movl
push
aas
mov
pop
scas
push
movsl
xor
push
imul
ret
stos
adc
or
jnp
push
xor
xchg
into
jl
stc
js
inc
stos
fisttpll
jae
lahf
movsb
xchg
push
mov
sbb
fsubrs
adc
cmpsb
xlat
call
rcll
loope
shrl
in
sub
mov
clc
mov
fcoms
ret
shl
mov
ljmp
cwtl
adc
popa
sahf
les
cmpsl
imul
and
mov
push
xchg
cmp
aad
sub
sub
mov
mov
pop
out
or
add
jl
xchg
push
and
aas
repz
pop
fdivrl
into
loopne
cmp
mov
xor
mov
add
pop
and
bound
loop
jae
add
in
cmpsl
shl
mov
idivl
add
lock
out
movsl
lock
ret
fstl
add
daa
dec
lret
or
lods
lds
mov
lret
cmpsl
push
push
mov
sub
aam
into
int3
clc
and
sbb
add
fld
add
popa
aam
fldt
push
push
push
frstor
xor
push
in
pop
into
fcomps
cs
in
xor
clc
xor
add
flds
sub
clc
mov
pushf
lea
sub
inc
dec
lods
outsl
xchg
sub
bound
dec
enter
add
or
mov
fidivrl
daa
mov
movsl
loopne
xchg
aam
xchg
sti
jp
loopne
inc
lcall
pusha
add
sub
lcall
cmc
pop
xor
xor
rcpps
bsr
adc
and
fwait
mov
push
lea
push
add
dec
pop
pop
fwait
cmp
jmp
add
cs
movsl
clc
jle
lea
xor
aad
push
ds
int3
out
xor
xor
repz
das
mov
fsubrs
inc
jns
sub
rorl
mov
aaa
insb
imul
enter
fs
and
fs
jae
inc
fisubl
jns
cmp
add
fnstcw
push
shrl
jl
sbb
stos
daa
call
out
xor
daa
lods
mov
sti
xchg
push
add
xor
in
mov
movsb
mov
or
inc
add
xlat
jbe
inc
add
jge
lods
testl
add
xchg
and
inc
add
cwtl
push
cmp
xlat
mov
mov
add
cmpl
mov
mov
int
and
out
pushf
je
fldcw
jmp
add
lcall
add
jle
cmp
push
fwait
sbb
add
pushf
jecxz
sub
xor
sub
addb
arpl
pop
xor
outsb
xchg
pop
icebp
sub
loope
iret
xor
call
push
scas
xchg
ret
sub
mov
xchg
or
adc
add
jae
xor
sbb
test
and
lret
xlat
cmc
movsl
cmp
xlat
popa
test
add
lret
mov
leave
pop
and
adc
rcll
adc
adc
stc
cmpsb
hlt
mov
xor
push
fstpl
mov
push
mov
mov
mov
aam
fnstsw
insl
dec
and
sbb
add
push
push
xchg
mov
stos
gs
xor
push
cmp
bound
cmp
popa
push
out
and
addb
pop
jecxz
jns
ja
das
shlb
jp
jnp
in
xchg
pop
pop
jle
test
mov
std
out
mov
fmull
repz
rcll
dec
adc
mov
ror
test
loope
les
cmp
outsl
pop
xchg
lcall
or
mov
or
pusha
add
outsl
data16
ret
scas
xor
mov
dec
incb
xor
jle
leave
push
xor
sbb
sub
or
sub
pop
stc
scas
lds
fnsave
xchg
add
aaa
cmp
mov
and
ret
insb
in
xorl
pop
jmp
sbb
pop
jmp
jmp
push
lods
repz
sbb
xor
sbb
sub
push
xor
outsl
bound
outsb
inc
into
dec
mov
mov
mov
sub
popa
ret
je
sub
push
shrl
fwait
mov
outsb
cmp
xor
jo
lret
mov
sub
stos
ret
test
stc
mov
lods
inc
add
inc
lret
iret
pop
mov
arpl
jb
jae
xchg
ret
cld
xchg
dec
ja
sbb
scas
jp
div
jle
les
sbbl
pop
idiv
dec
cmpsl
mov
xchg
pusha
add
movb
add
loop
addb
int
adc
cmp
movsb
mov
cld
faddl
add
neg
in
or
mov
shlb
jb
push
jge
pusha
add
jge
mov
sub
sbb
stc
rolb
add
add
xchg
mov
add
mov
andl
jl
or
fidivrl
inc
or
add
pop
pop
push
jecxz
push
push
and
jl
scas
mov
rcr
out
xlat
lret
shl
lods
repz
and
daa
neg
add
push
js
add
cmpsl
movsb
lret
cmpsb
adc
mov
xor
push
inc
pop
pcmpeqw
jo
test
cs
movl
inc
add
mov
out
cs
sub
adc
add
jge
and
cmp
pusha
add
cmpsl
add
push
add
or
cli
out
add
jle
add
mov
and
add
add
jge
push
rorb
lods
add
fimull
insb
test
mov
insl
mov
or
add
xor
push
add
jg
jmp
xor
and
jg
push
add
insb
cmpsl
imul
jge
push
jmp
dec
mov
in
add
fwait
dec
add
adc
stos
fidivl
dec
out
mov
into
cwtl
and
hlt
addb
lahf
cmp
rorb
jbe
mov
inc
add
in
mov
mov
and
fs
adc
imul
cmp
in
fsubrp
cmc
in
xor
xor
mov
mov
mov
test
cld
cmp
test
jo
push
les
inc
add
pushf
and
loopne
add
jnp
sub
pushf
xchg
dec
sub
outsb
rcll
cli
jne
add
sub
adc
fcomip
xchg
lret
arpl
jne
and
std
iret
cltd
std
jns
je
cld
mov
js
pop
fwait
aam
aad
mov
add
or
add
add
xor
cmc
leave
add
icebp
or
out
add
jecxz
cmp
cmp
lea
arpl
cltd
ret
dec
adc
jnp
add
cmc
mov
push
jecxz
mov
mov
ret
pop
dec
sbb
jae
outsb
pop
xchg
add
daa
mov
filds
lret
movsl
in
mov
rolb
add
sar
int
add
cwtl
stos
sbb
rolb
pop
or
add
cmp
iret
scas
lahf
or
xchg
dec
pushf
stos
mov
add
mov
gs
push
xchg
cmp
sbb
in
push
inc
dec
sti
pop
lds
add
sbb
sbb
mov
push
mov
mov
mov
cmp
pushf
cmc
jge
add
addb
cmpsb
mov
push
stos
xchg
inc
add
stos
lahf
fcomi
pusha
add
repnz
call
and
ss
fwait
add
in
aam
mov
xchg
pushf
scas
clc
mov
xor
out
jle
dec
inc
sub
xor
add
jmp
sti
cmp
dec
add
mov
pop
dec
in
and
and
insl
push
sbb
lock
cmp
pop
and
push
cmp
mov
xchg
mov
bound
cwtl
pop
repz
jl
movb
es
inc
daa
mov
xchg
jle
or
sbb
jle
insb
add
lods
std
leave
test
stos
lock
in
daa
sub
popa
xor
adc
pusha
add
test
push
sti
aad
out
scas
cmp
add
test
inc
jb
xorl
sub
in
add
and
in
inc
lds
hlt
jecxz
das
repnz
pop
aaa
mov
inc
add
addr16
push
jne
adc
mov
add
xor
mov
xchg
mov
adc
andl
stc
inc
push
ret
push
add
pop
stc
mov
push
cld
cmpsl
add
in
pop
leave
inc
or
gs
pop
fisubs
adc
mov
mov
sub
jne
push
push
lret
xchg
dec
xor
jb
pop
pop
adc
add
and
imul
out
inc
int
insl
andl
push
fnsave
cmp
xchg
dec
iret
jae
inc
out
xchg
and
pushf
daa
hlt
sub
adc
mov
add
xchg
std
and
mov
outsl
push
enter
cwtl
xchg
jg
les
ss
rcl
mov
dec
push
jns
fadd
add
jg
xchg
fsubrl
hlt
jb
cmp
inc
xor
rclb
lret
xchg
repz
add
add
pop
mov
jg
icebp
nop
sbb
fs
cmc
adc
les
xchg
inc
add
jae
add
add
add
xor
shll
push
jbe
adc
cli
filds
cmc
int3
loopne
jl
lea
push
lods
adc
mov
lret
lea
addb
sbb
add
sbb
inc
add
xor
pop
pop
idiv
cmpsb
icebp
out
xchg
mov
notl
stos
xor
jmp
mov
sub
and
pop
jns
scas
cmp
lods
add
decb
add
sahf
lea
in
fdivrl
faddl
add
cmpl
sbb
add
and
test
imul
pop
inc
add
ljmp
out
enter
add
movsl
fbstp
cmp
or
or
add
js
push
cmp
icebp
push
fs
cmp
pop
push
dec
js
fs
in
mov
out
movsl
pop
sbb
scas
clc
adc
jb
inc
jbe
notrack
push
imul
mov
add
fildl
sbb
push
inc
add
cs
mov
jns
jmp
dec
aam
insl
aas
mov
ds
rol
ret
jmp
and
lds
dec
psadbw
jo
loop
iret
stc
pusha
add
jae
insb
jbe
push
add
fs
sub
call
movsl
jle
push
ljmp
dec
cld
pop
xchg
into
adc
mov
push
scas
sbb
jno
jle
xor
cli
adc
xchg
addb
rorb
sub
adc
dec
mov
add
pop
scas
mov
sub
add
test
aas
in
fstpl
add
flds
add
cmp
lods
std
int3
clc
loopne
repz
shr
push
test
scas
nop
jp
sbb
or
jmp
int
arpl
xor
pcmpeqw
arpl
bound
decl
cmpsb
sahf
pop
enter
ja
fs
sti
fisubs
xchg
cmpsb
inc
add
mov
pop
fcoml
clc
cmc
cmp
fdivr
outsl
shl
jmp
movsl
adc
enter
in
fwait
aaa
mov
adc
jb
xor
cli
mov
sbb
in
adc
sbb
inc
inc
add
ljmp
cmp
pusha
add
aad
leave
out
xchg
mov
lahf
lods
push
mov
into
lahf
js
mov
jge
pop
sub
addr16
xor
dec
cmp
add
in
movsb
sub
data16
mov
pop
add
jp
push
push
add
pop
dec
push
sbb
movsb
inc
lret
lret
cmp
adc
push
bound
js
les
and
fsubrl
jns
movsl
ret
and
popf
in
add
inc
push
jae
jne
mov
clc
inc
inc
push
mov
cmp
adc
rcrl
movsl
xchg
out
sbb
push
cmpl
inc
or
jmp
pop
stos
mov
push
add
out
cmp
inc
add
add
push
fisubrs
jp
icebp
pop
mov
test
push
lahf
mov
push
cmpsl
push
mov
das
sbb
sbb
in
xchg
xor
scas
jecxz
daa
and
dec
add
xchg
les
sbb
outsb
xchg
clc
in
popa
adc
ss
and
and
push
cli
pop
adc
negb
dec
jge,pt
stc
out
pop
movsb
fimuls
cmp
cmpsl
ds
mov
repz
rcl
jnp
in
push
pop
sbb
js
push
mov
mov
push
push
xor
rol
add
push
incb
cli
mov
xchg
inc
adc
testb
add
xchg
cld
and
adc
mov
push
arpl
add
inc
add
stc
dec
outsb
lea
push
stos
xchg
xchg
ret
jne
jecxz
addl
or
lret
mov
dec
adc
add
mov
adc
sub
pop
dec
mov
ret
fnstenv
xchg
jb
loope
adc
mov
aad
and
jns
enter
and
mov
orl
inc
add
cwtl
int
add
fs
add
packsswb
mov
push
and
pop
dec
nop
scas
test
jo
shll
icebp
popf
mov
lret
addb
movl
push
mov
fcomps
pop
rolb
icebp
fucom
sub
lahf
cmp
xchg
je
add
add
push
add
cld
lods
pop
mov
pop
xlat
sbb
jp
mov
nop
or
pusha
add
add
inc
add
fs
lods
addl
lea
movsb
or
addr16
mov
mov
cmp
test
cmp
jb
fucomip
fldcw
int
or
out
push
in
jb
sub
scas
mov
movsb
scas
or
gs
dec
adc
cwtl
mov
inc
add
and
mov
fcoml
pushf
and
outsb
xchg
and
push
lret
cmpsl
arpl
dec
aas
jo
addb
adcl
lahf
add
sarw
xchg
push
pushf
arpl
call
and
mov
add
add
sub
add
sub
hlt
insb
jecxz
stos
push
int
roll
mov
mov
es
add
rcrl
mov
mov
addb
lods
mov
mov
rolb
lahf
dec
aad
negl
fstpl
divb
jne
lds
rolb
mov
popa
add
or
stc
int
pop
fcmovnbe
jp
mov
les
test
jne
dec
fs
mov
mov
fs
jp
add
int
xchg
std
or
jp
xchg
popf
cmp
sahf
inc
add
mov
inc
ja
psubw
add
cs
bound
lcall
stos
pop
add
sarb
cld
mov
aam
out
mov
jle
add
sub
in
mov
adc
loopne
and
sbb
add
ja
add
movsb
pusha
add
cmpsl
addb
push
jle
lret
sub
mov
outsb
sbb
push
mov
add
sub
sti
mov
mov
in
sbb
inc
add
icebp
leave
dec
sbb
lahf
mov
inc
add
incb
add
sub
mov
hlt
stos
fisttps
pop
inc
and
lock
hlt
push
hlt
jno
push
or
movsb
jg
push
xchg
lret
movsb
mov
call
add
push
fidivrs
push
mov
add
pushf
xchg
pop
fs
sub
mov
cmp
add
jmp
fsubp
jl
loope
xor
push
out
xchg
add
iret
xchg
xor
push
lret
push
shll
orl
xor
jle
in
cs
mov
pushf
adc
pop
stos
ja
test
loope
xor
imul
xchg
push
mov
sub
add
add
mov
and
push
clc
stos
jmp
das
push
add
aam
cmp
xchg
daa
cmp
push
in
orl
pop
mov
je
sbb
mov
jno
dec
movb
sti
fistpll
les
rcr
jp
fstps
push
mov
shll
filds
push
fstl
mov
shr
xor
adc
jle
mov
or
mov
insl
cmp
stc
adc
dec
shl
cmpsl
cltd
in
lcall
xchg
cmpsl
mov
mov
push
jae
dec
cmpsb
pop
dec
mov
mov
aam
xchg
dec
ds
dec
pop
mov
and
test
mov
push
dec
dec
mov
daa
adc
add
dec
inc
ficoml
and
call
pop
mov
push
push
les
faddp
lea
jecxz
mov
shr
shl
test
sbb
xchg
cmp
xchg
mov
into
jae
add
add
lcall
lret
dec
inc
faddl
xchg
inc
aam
push
sbb
xor
int
sbb
cmc
pop
mov
inc
addb
sub
add
outsb
push
lods
pop
negl
mov
inc
inc
lods
push
popa
jmp
adc
jg
push
outsb
pop
xchg
addb
add
push
pop
jg
push
sbb
mov
cmpsl
pushf
add
les
mov
add
std
fnstcw
xchg
mov
jne
cmp
dec
les
mov
test
xlat
push
pop
jle
add
inc
dec
lahf
outsb
inc
add
inc
add
loope
sub
outsb
outsl
ljmp
adc
cmp
rolb
fwait
cs
fildl
pop
scas
jne
xor
aam
mulb
loop,pn
imul
nop
hlt
inc
add
jnp
sti
rorl
arpl
mov
mov
repnz
jno
or
aas
imul
push
lods
jmp
outsb
sbb
pop
dec
out
pop
cmp
add
cmpsb
add
push
bound
addb
xor
popa
bound
push
cmp
outsl
push
and
enter
add
mov
mov
or
or
pusha
add
movb
add
scas
adc
stos
andl
add
pop
mov
bound
arpl
push
cmpsl
sub
enter
movsl
mov
add
loopne
data16
xchg
arpl
add
pop
cltd
outsb
dec
sbb
add
add
ficoms
stos
jbe
add
mov
add
sbb
enter
and
xchg
int
sbb
and
add
int
inc
add
add
shlb
sbb
movb
xchg
loop
adc
shrl
cmp
xchg
inc
sbb
out
repnz
jl
sbb
movsb
ret
iret
mov
xor
xor
pop
pop
push
jge
lods
lds
xor
jbe
xchg
sbb
add
jbe
mov
ljmp
push
sub
out
rcrl
xchg
es
mov
sti
pop
rolb
xchg
notb
movhps
dec
dec
jle
sub
add
adc
adc
jecxz
add
sub
shr
sbb
icebp
pop
xchg
inc
sahf
sbb
sti
out
add
pop
inc
add
lods
idivl
mov
jnp
mov
push
pop
sub
test
dec
stos
aas
dec
pusha
add
inc
add
cltd
scas
push
jnp
add
ror
faddl
jnp
das
ja
inc
add
movb
fwait
adc
xor
add
shll
dec
jg
inc
and
popf
jecxz
jg
sub
pop
or
arpl
add
mov
sub
jae
sbb
dec
mov
push
ficoms
xchg
sbb
pop
sub
xor
in
sub
inc
adc
hlt
mov
pop
popa
or
inc
sahf
jl
add
push
iret
jp
in
xchg
mov
xchg
les
cmp
pop
fnsave
sbb
call
jge
cltd
mov
loopne
jle
in
add
add
add
ljmp
jbe
clc
push
mov
sub
int
mov
add
or
cld
mov
lds
lods
leave
int3
xor
inc
push
add
fcmove
mov
push
push
pop
lods
mov
out
stos
inc
mov
and
jecxz
mov
jecxz
lret
jnp
aaa
cmp
or
in
jmp
aam
cmpsb
lret
sti
and
xchg
repnz
loop
cli
mov
aam
xchg
mov
add
pop
pop
stos
add
xor
cld
and
sub
cmp
inc
add
xchg
ds
jecxz
and
mov
iretw
loope
fildl
js
das
sub
hlt
hlt
nop
lahf
jne
jle
pop
mov
add
bndstx
movb
inc
clc
and
mov
cmc
xor
mov
add
adc
inc
add
xchg
push
test
mov
mov
push
cmp
xor
movsb
repnz
xchg
pop
mov
aaa
test
lcall
and
sbb
fsubrl
sub
sbb
inc
add
mov
push
aam
push
daa
adc
aas
push
sub
mov
ds
adc
add
call
pop
sbb
xor
jle
and
pop
adc
out
add
in
in
push
les
ret
mov
mov
jbe
mov
push
mov
jbe
xor
sbb
fldcw
add
mov
inc
add
popf
jl
jo
mov
lds
leave
jl
cmp
ja
sub
fs
int3
aaa
mov
rolb
outsb
fnsave
jecxz
cwtl
add
lea
dec
mov
push
adc
lock
shll
shlb
jno
push
xor
pop
pop
inc
jmp
add
push
movsl
bound
in
test
lea
cli
add
add
movsl
sub
lret
sbb
loop
ret
mov
jecxz
jp
sub
sbb
pop
sub
lahf
xor
sbb
pushf
sbb
cltd
cltd
mov
mov
add
insl
rorl
ss
add
xchg
cmc
pop
out
pop
cmp
add
mov
fstps
adc
enter
and
jp
sldt
int
ljmp
repz
sub
pop
mov
mov
xor
mov
sti
pop
push
int
aaa
jnp,pn
inc
pushf
dec
adc
les
dec
jmp
xchg
inc
mov
xchg
fadds
adc
test
lock
push
xor
push
mov
fsubrl
sarl
test
push
popf
rorl
cmpsl
lods
mov
add
jo
sub
bound
cwtl
sbb
ret
dec
mov
les
js
add
stc
scas
mov
nop
xchg
jns
scas
or
add
andl
cmp
mov
movb
xchg
mov
mov
popf
movb
test
jl
pop
std
aaa
int3
int
add
stc
rolb
data16
loope
insl
sub
repz
leave
arpl
decl
add
xchg
mov
aas
jns
inc
pop
mov
mov
and
ficoml
push
add
fbld
inc
test
std
adc
in
movsl
psllw
add
jo
lods
aas
push
mov
out
and
add
addl
mov
idivl
mov
fs
addb
mov
push
pushf
movb
in
mov
add
and
cmp
mov
sbb
and
in
mov
inc
call
shll
push
adc
sti
insl
push
sbb
inc
add
stos
shrd
mov
add
cli
int3
add
mov
movb
lods
rcl
fwait
add
in
mov
jp
cmp
iret
pop
mov
fnstsw
and
xchg
pushf
aaa
push
sbb
pop
lds
hlt
push
mov
movb
stc
mov
pop
ret
cmp
les
mov
and
in
mov
test
mov
xor
fldt
xchg
push
cld
arpl
out
mov
add
pop
mov
jne
nop
cltd
je
das
mov
aam
inc
add
pop
call
or
gs
into
mov
mov
add
arpl
dec
ret
lock
daa
dec
loopne
mov
cmp
adc
addr16
ret
aaa
jp
daa
or
xchg
sub
mov
mov
mov
push
push
lahf
push
push
lret
into
and
iret
pop
sarb
fcmovb
inc
cmc
mov
push
es
and
gs
xchg
call
pop
icebp
js
add
adc
addb
lahf
or
imull
inc
add
xchg
pop
insb
inc
add
sbb
gs
cmpsw
or
add
add
push
jmp
jbe
das
add
sub
mov
fldt
pop
mov
iret
mov
bound
lcall
orl
out
outsb
xor
sub
jo
xchg
lods
cmpsl
dec
clc
fldcw
pop
shl
inc
add
ficompl
mov
fdiv
cld
mov
adc
lret
test
push
pop
push
sub
add
cmp
push
mov
xchg
addr16
or
or
cmc
test
pop
imul
mov
shrb
dec
fsts
lea
sbb
lahf
and
mov
add
jecxz
outsb
add
loop
xchg
pop
jecxz
jo
maxps
cmp
jg
ds
adc
pop
xchg
sbb
in
js
aaa
sahf
push
sbb
nop
js
cmp
sahf
cmp
push
add
ja
dec
or
or
jg
decl
arpl
cmp
pop
push
fisubrl
lret
and
bswap
lods
and
insl
dec
enter
int
sub
adc
jecxz
sub
xor
or
ja
xchg
imul
jb
orl
fistpl
iret
hlt
adc
sub
in
bound
ss
andl
adc
rcrl
int3
jno
add
or
cmp
pop
mov
mov
lds
sti
xchg
mov
mov
cmc
decl
add
add
sub
out
and
cmp
push
sbb
addb
call
mov
insl
adc
mov
adc
ficoml
dec
out
add
add
enter
fwait
cmp
movsb
cli
xchg
jle
ljmp
arpl
aad
insb
and
mov
pushf
inc
negl
stc
xchg
xchg
xor
out
stos
ret
data16
push
sub
jno
add
movb
push
xchg
popa
push
pop
in
push
ds
fs
icebp
mov
and
dec
imul
xor
sub
les
cmp
xchg
and
or
add
mov
mov
sbb
jl
cmp
pop
sub
lret
add
lock
jp
pop
aas
lods
cld
or
xchg
cmp
rorl
lds
fcmovnu
lods
add
and
push
dec
in
iret
scas
mov
mov
or
jb
add
in
scas
inc
add
stc
les
jo
xchg
aaa
mov
jge
xchg
stc
leave
jl
pop
mov
inc
add
lds
add
sbb
stos
scas
iret
mov
sub
cmpsb
xchg
or
add
repz
addr16
mov
xor
sub
add
fstl
push
jne,pn
sbb
xchg
test
mov
cmp
cmp
in
aaa
fdivrp
fnstcw
fidivrl
pop
dec
mov
or
add
mov
push
inc
cltd
scas
jmp
mov
inc
add
jl
inc
je
xor
pop
cmp
add
adc
sarb
adc
mov
les
push
aaa
push
rorl
daa
adc
filds
fcmovnu
jg
push
and
test
lds
add
inc
add
enter
inc
mov
lods
xchg
jns
aas
movl
dec
call
in
xchg
jl
imul
and
cwtl
es
add
jno
ljmp
adc
dec
js
repz
aas
lahf
arpl
insl
insb
ds
add
sti
lret
mov
push
inc
aam
sbb
mov
fdivrl
ret
dec
push
xor
inc
add
inc
xchg
les
out
notl
fwait
xchg
mov
and
dec
add
aam
jb
add
sub
enter
pusha
add
push
orl
dec
jle
add
sbbl
xchg
out
xor
and
dec
popf
xchg
aam
mov
push
imul
inc
add
xchg
je
out
jl
jnp
insb
repnz
mov
fidivs
jmp
xchg
idivb
cld
jns
push
xchg
xor
in
fiadds
add
add
push
adc
mov
jo
insb
xor
sub
leave
and
fidivrs
loope
add
adc
jae
sbb
fcomi
xchg
push
mov
imul
jnp
loope
dec
js
fwait
ljmp
lret
adc
add
sub
inc
add
out
sbb
and
jg
add
adc
leave
icebp
out
call
jp
scas
jae
mov
mov
or
cmp
xchg
int3
pop
add
test
insb
pop
rcll
fisttps
add
xchg
outsb
std
sub
jmp
pop
xchg
arpl
sbb
repnz
sbb
movsb
cmpsb
jno
rolb
xchg
mov
leave
and
fistpll
push
jo
xchg
jns
cmp
inc
jbe
cli
in
testb
pop
xchg
or
mov
xor
pop
fsubrl
sub
sbb
enter
das
test
in
imul
cmp
adc
mov
notl
pop
ss
and
jno
movb
mov
pop
mov
sbb
lahf
dec
push
int
insb
jne
das
push
out
or
in
inc
mov
addb
add
jge
xchg
in
int3
movb
mov
nop
fnstcw
mov
data16
or
addb
mov
repnz
icebp
sbb
dec
adc
cwtl
jbe
xor
xchg
and
mov
nop
imul
ret
loope
div
test
lea
push
lret
pop
pop
add
add
add
add
sti
push
test
cli
dec
mov
addb
ds
dec
push
mov
add
or
int
stos
or
add
bound
mov
fmuls
dec
ss
push
jg
mov
sahf
sahf
jge
es
and
pushf
es
cmp
mov
push
lods
rorl
jl
das
scas
mov
loopne
xchg
gs
add
jae
cmp
xor
or
mov
pop
sbb
daa
xchg
xor
pop
dec
repz
test
cltd
pop
call
jae
mov
mov
enter
lods
lock
xor
in
cmp
decl
ret
xor
and
lods
sbb
addb
jae
loope
es
add
loope
xchg
scas
out
inc
add
add
mov
test
mov
push
add
lcall
pop
icebp
sub
lret
pop
jno
repnz
ret
jl
lds
sub
roll
add
xchg
xchg
fmuls
push
pop
mov
test
adc
push
push
xor
gs
sub
clc
add
mov
test
push
push
mov
fbstp
in
xchg
xchg
decl
movsb
insl
sub
sub
push
cld
mov
out
addl
mov
mov
addb
jae
cmp
clc
inc
mov
mov
add
scas
mov
add
das
adc
sbb
movsb
mov
cs
hlt
sub
insb
int3
ret
pop
inc
inc
add
jno
add
sbb
in
cmp
or
bnd
les
or
and
and
xor
adc
mov
add
fdivrs
scas
sbbl
aad
sbb
dec
sbb
mov
xor
lods
or
fsubr
jge
lcall
bound
data16
std
or
and
sahf
jb
int
jae
inc
mov
push
cmp
xor
xor
fucomp
push
sbb
std
data16
mov
cli
sti
fst
mov
pop
push
ret
loop
jge
xchg
push
fwait
fwait
jae
fcmove
jbe
femms
cwtl
rol
sbb
cmp
add
cmp
pop
xchg
enter
sub
out
loopne
cmpsb
aad
adc
lahf
or
xor
mov
enter
cmp
std
retw
fsubl
add
mov
test
cmc
cmp
add
and
add
test
fisubs
adc
or
testl
mov
xchg
lahf
mov
add
dec
insb
fiaddl
jp
arpl
insl
gs
add
xchg
movsb
or
clc
sub
movb
insb
daa
mov
dec
sub
mov
lods
cmc
js
inc
addb
les
pop
lret
in
add
outsb
ss
iret
je
loope
and
adc
movsb
pop
xchg
popf
and
ljmp
in
push
mov
pop
fcoms
dec
inc
add
cmp
mov
mov
flds
mov
dec
test
sti
cmpsb
pop
xchg
push
ds
sbbl
ja
xlat
mov
dec
lret
mull
adc
lcall
rclb
mov
add
adc
mov
ret
call
and
pop
pop
jge
cld
fcomip
out
or
add
pop
and
sbb
add
adc
pusha
add
jnp
gs
mov
lock
sbb
stc
movsl
adc
cmp
mov
sbb
icebp
sub
add
in
lahf
sbb
or
outsl
loope
add
push
test
mov
add
ljmp
pop
pop
sub
cs
mov
push
xor
rorl
movb
jno
xor
xor
add
sbb
inc
addr16
ljmp
xchg
push
movsl
xchg
adc
push
imul
jp
cmp
cmc
in
push
ret
xor
es
add
pop
mov
add
dec
aaa
addb
cli
lret
stos
and
add
mov
lcall
push
jge
das
je
loope
fidivrl
or
sbb
scas
or
add
add
int
and
inc
pusha
add
add
push
dec
adc
lock
push
insb
adc
add
out
ret
popw
mov
push
into
fwait
idivb
cmp
add
enter
xchg
push
and
push
fisubrs
mov
aas
jp
fidivs
cltd
lods
cwtl
cld
lods
pop
push
sbb
add
add
arpl
int
adc
shrl
xor
je
dec
stos
cmp
out
lret
ds
jmp
out
mov
lret
jne
sbb
fadds
pop
xchg
pop
adc
into
jecxz
testb
jae
mov
std
lock
fbstp
add
dec
cmp
out
push
add
in
adc
mov
add
repnz
mov
add
pop
lods
dec
adc
in
mov
icebp
nop
dec
dec
in
clc
pop
jb
stc
outsl
sbbl
imul
or
ljmp
mov
mov
pop
sub
add
test
add
test
add
iret
jo
dec
sbb
inc
cltd
out
and
js
fwait
xor
lret
dec
mov
mov
movb
in
sbb
insb
fst
pop
int3
aad
test
icebp
jno
xchg
int3
jo
push
and
fsubrl
and
xchg
add
push
pop
inc
add
int3
mov
cmp
mov
pop
scas
add
mov
fs
jns
cmp
add
rolb
add
inc
add
and
dec
js
aaa
movb
pop
ss
pop
adc
add
mov
pop
jmp
inc
add
push
add
push
pusha
add
ss
add
test
xchg
xchg
xchg
cmpsl
cmp
push
or
pop
in
mov
xor
loop
adc
rcr
aam
jle
pop
push
lea
stos
push
mov
movsb
or
pop
fildl
jb
lea
int3
shrb
iret
push
addb
add
lahf
in
notl
pusha
add
in
cmp
aam
xor
addb
fldl
and
add
cmp
dec
mov
mov
idivl
pop
bound
rolb
add
xchg
test
addb
es
jmp
jl
xchg
or
push
add
push
mov
fstpl
fcmovu
outsb
sub
add
loop
adc
inc
lds
xchg
dec
ret
test
aam
sbb
fidivrl
push
iret
repnz
das
icebp
inc
add
stos
in
jl
or
inc
add
scas
jne
add
pop
ds
dec
out
cwtl
in
add
add
xor
jns
inc
out
cli
jae
ja
add
jp
std
into
jmp
fildll
add
dec
and
or
jae
adc
mov
popf
les
or
pop
in
aaa
xchg
fisttpll
pop
xchg
cwtl
scas
lods
push
fwait
test
mov
push
add
push
cmp
mov
jmp
bnd
xchg
popf
cmp
jae
popa
pop
sbb
add
insl
loop
je
add
and
mov
add
ficomps
ret
xchg
pusha
add
push
push
inc
in
bound
push
sar
jge
push
cmp
addb
jo
jmp
es
mov
in
dec
fbstp
lds
dec
sbb
cs
push
push
aas
dec
cmp
call
pop
cltd
test
xchg
inc
add
and
lea
adc
jo
mov
pop
or
add
iret
lds
mov
outsb
cmp
leave
test
xor
inc
add
int
rsm
es
add
and
sbb
dec
sub
push
adc
enter
std
addr16
stos
rcll
jo
xchg
hlt
sbb
mov
sub
sub
jbe
stos
test
cmpsb
xor
push
adc
cld
test
fsubs
mov
lods
es
xchg
sub
add
int3
xor
or
lcall
adc
inc
add
addb
add
and
add
sarl
ret
mov
adc
stos
or
add
mov
sbb
push
inc
pusha
add
xor
cmp
xchg
ret
xchg
out
pop
mov
out
dec
inc
add
xchg
gs
leave
cld
add
mov
mov
mov
into
sub
or
jo
dec
push
in
mov
adc
mov
add
dec
cltd
jo
pushl
and
out
pop
les
mov
call
scas
pop
mov
pop
repnz
adc
mov
push
push
dec
enter
jbe
jge
xchg
mov
rorl
push
or
mov
add
decb
popa
out
add
inc
or
fldt
int3
sub
mov
inc
add
aam
cmp
lret
clc
cmpsl
popf
mov
dec
les
mov
imul
mov
gs
mov
add
sahf
cltd
lret
inc
mov
dec
mov
add
sbb
push
mov
rol
push
pushf
cmp
cmp
cmp
dec
adc
push
add
ret
lret
lock
adc
in
test
cwtl
ja
cmp
add
fcmovu
pop
or
lods
push
push
xchg
jns
scas
pusha
add
inc
add
sub
pop
clc
adc
add
lds
idiv
sbb
sbb
leave
pop
xchg
inc
fistpll
cmpsb
nop
movb
sbb
add
mov
xchg
mov
fistps
mov
jnp
mov
adc
adc
test
test
mov
pop
lcall
push
xor
test
mov
ja
add
insb
push
out
mov
mov
inc
add
lahf
fisubs
imul
inc
mov
in
push
add
add
cli
dec
jge
push
add
rcll
or
jle
ja
jge
sub
pop
fsubl
add
fldenv
int
xchg
adc
jp
cmp
mov
hlt
cmc
cwtl
into
negb
mov
mov
rolb
add
out
add
jb
push
sbb
lods
insb
mov
rcr
mov
add
jl
dec
and
and
shrb
xor
add
pop
pop
in
sbb
repz
jns
pop
mov
mov
pusha
add
sub
push
add
in
mov
adc
mov
dec
ds
mov
push
pop
jbe
push
cmp
cltd
test
addr16
jb
adc
nop
pop
mov
add
cs
mov
or
add
push
ret
add
sub
stos
and
cmpsl
addr16
sbb
mov
inc
xchg
add
sti
popa
inc
add
mov
xchg
push
pop
out
sahf
jg
rol
add
loop
add
sbb
sbb
movsl
jmp
lret
insl
rcrl
mov
data16
orl
jae
cmp
iret
scas
loop
sub
push
cmpl
xor
das
cwtl
cmp
cmp
add
xchg
and
inc
add
mov
add
sbb
mov
jmp
insb
in
mov
scas
test
addb
lods
insb
int
ja
sbb
add
leave
push
popf
imul
rolb
add
fidivrl
pslld
les
xchg
int
rol
jmp
cmp
or
sbbl
hlt
xchg
and
scas
add
sub
and
xor
gs
ret
subl
enter
mov
int3
int3
sub
mov
test
add
or
out
addb
addb
add
add
test
sbb
testl
xor
sahf
fsubl
addr16
and
mov
pop
and
add
in
sbb
add
enter
mov
xchg
iret
iret
or
add
add
add
flds
ds
lods
mulb
popa
fidivrl
xor
in
repz
inc
add
cmp
sarb
jae
dec
jns
xchg
shrl
add
jge
push
int
test
add
idiv
mov
xor
scas
iret
dec
jge
adc
pop
shrl
mov
lods
mov
cmp
push
dec
daa
rolb
icebp
mov
aad
inc
add
xchg
not
xchg
out
das
mov
lock
xor
dec
fisubrl
imul
sbb
lods
movsb
push
or
mov
imul
test
ljmp
rolb
jae
add
xchg
mov
and
inc
repnz
rolb
jae
jg
add
addb
divb
mov
pushf
mov
mov
add
ds
mov
add
inc
add
jle
xor
sahf
sbb
ss
jecxz
adc
cmp
dec
pop
and
pop
add
es
mov
add
popa
mov
add
lods
pushf
outsl
push
add
push
gs
je
inc
sub
xchg
daa
iret
imul
mov
xchg
mov
add
push
sbb
or
xchg
mov
jae
shlb
mov
push
xor
add
cmpsl
in
das
sub
adc
add
dec
jae
mov
insb
mov
test
push
jne,pn
cltd
mov
dec
dec
or
or
jecxz,pt
adc
xchg
cmp
add
mov
stos
in
push
aam
add
jb
pop
inc
add
push
mov
inc
mov
mov
shll
adc
cmpsb
mov
sahf
push
push
leave
enter
fsubs
addb
fsubrl
mov
popa
mov
or
mov
pop
adc
sbb
cwtl
out
xor
movsb
es
stos
sarl
xchg
aas
xchg
mov
mov
pop
inc
pop
push
mov
sbb
pushf
pop
testl
push
adc
cmp
int3
adcl
and
faddl
push
jmp
in
dec
cmc
xor
and
