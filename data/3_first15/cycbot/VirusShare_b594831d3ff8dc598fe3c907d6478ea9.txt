popf
jl
dec
out
daa
stc
jecxz
scas
jmp
inc
cli
cmpsb
or
mov
jno
jb
mov
add
aas
outsb
scas
cmp
sub
repnz
add
repnz
gs
bound
mov
fisttpl
orl
adc
add
mov
or
icebp
cmc
cmpsl
and
mov
rolb
mov
fwait
divl
mov
or
or
pop
adc
mov
mov
nop
add
add
mov
stos
mov
bound
or
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cmp
leave
cld
xor
les
add
push
cs
gs
lds
xor
push
mov
repz
add
and
pop
xchg
mov
aam
arpl
ds
out
sahf
out
add
lods
inc
add
sub
rolb
mov
xor
mov
push
add
add
ljmp
push
ret
rolb
pop
test
mov
cmp
push
add
xchg
aad
repnz
xchg
jle
add
mov
ficompl
arpl
push
jecxz
add
adc
mov
add
mov
mov
scas
cmpsl
fdivp
mov
jle
add
push
imul
mov
addl
and
mov
jg
loope
or
add
push
add
into
fmul
test
add
fcmovbe
popa
addb
lahf
push
nop
add
mov
xlat
mov
and
mov
add
add
pop
adc
mov
bound
mov
sti
cmc
sbb
test
mov
sbb
mov
push
add
cmp
add
cltd
xchg
dec
jns
outsb
fldenv
sarl
add
add
add
mov
adc
andl
jp
sbb
add
push
mov
popa
stc
lret
mov
fcomps
jmp
push
sti
test
out
xor
imul
cmp
in
xchg
loopne
mov
dec
icebp
aas
add
push
popa
pop
data16
scas
imulb
pop
xchg
loope
push
mov
push
fdivl
loopne
mov
test
subl
test
and
mov
add
mov
and
mov
and
inc
enter
push
and
pop
sbb
pop
push
add
add
mov
in
cmpsl
inc
rolb
mov
push
xchg
ljmp
popf
shll
and
and
lea
sub
add
add
xor
std
jg
dec
xor
insb
inc
leave
std
push
add
stc
and
add
fsts
mov
add
mov
dec
cmc
scas
rolb
data16
hlt
mov
dec
push
mov
xchg
lcall
adcl
jp
in
shll
sub
or
mov
jo
mov
xchg
add
lcall
mov
addb
jecxz
ss
push
add
dec
push
loop
mov
aad
test
stos
push
add
mov
dec
movsb
jl
mov
sbb
and
mov
pop
jg
iret
dec
mov
insl
daa
bound
mov
add
mov
sahf
adc
test
out
int
dec
fs
lods
cmpsb
adc
scas
mov
sbb
insb
aas
inc
das
insb
add
mov
add
xlat
adc
xchg
sbb
inc
xchg
int3
addl
pop
aaa
jne
xchg
dec
jno
adcl
stc
xor
and
mov
jb
mov
add
mov
cmp
pushf
mov
mov
jecxz
aas
jno
jmp
repnz
jbe
add
add
add
xor
inc
inc
pop
or
repz
add
mov
pop
or
push
jge
pop
int3
data16
stos
vmaskmovdqu
sub
jg
lds
mov
add
mov
test
out
or
mov
xchg
dec
or
mov
jo
mov
pop
mov
inc
mov
mov
pop
es
and
mov
push
add
roll
fimuls
call
jmp
add
mov
add
stos
pop
cmp
pop
mov
mov
xor
mov
in
sbb
mov
mov
fcompl
push
nop
add
fstl
or
jecxz
out
aad
icebp
pushf
das
inc
mov
add
mov
mov
ss
lods
fisubrs
xor
sahf
jno
and
mov
adc
js
int3
addb
mov
ss
adc
mov
lock
mov
cmpsl
iret
rolb
out
fldl
sbb
movsb
loop
mov
fnstsw
xor
mov
push
push
int3
adc
or
lret
dec
and
mov
add
add
push
add
and
mov
hlt
addr16
stc
sub
mov
add
ficoml
add
adc
pop
in
adc
int3
fwait
mov
mov
mov
jmp
push
mov
lods
dec
aad
add
idivl
lret
pop
and
mov
mov
add
xor
mov
gs
pop
cwtl
push
cmp
mov
iret
rolb
mov
pop
test
mov
mov
jne
or
inc
add
mov
add
fdivrl
add
stos
pop
inc
fistpl
mov
mov
xchg
add
mov
add
mov
add
adc
mov
cmp
kortestb
popa
movsb
and
mov
pop
xor
add
outsb
mov
cwtl
dec
cltd
cmpsl
mov
add
push
add
outsb
addb
cmp
mov
mov
add
add
add
fcoml
push
add
jl
pop
push
fldenv
mov
add
fildll
push
sahf
cmc
pop
mov
sub
add
cltd
mov
push
xchg
add
sub
addb
jecxz
arpl
das
adc
mov
mov
out
mov
adc
lcall
rolb
mov
xchg
xor
add
adc
es
mov
jbe
cmp
push
test
dec
popf
icebp
pop
movsb
mov
add
add
add
lcall
dec
push
stos
sti
push
addb
add
mov
popa
inc
add
repnz
and
mov
push
popa
js
add
push
cmp
loopne
mov
push
jmp
ss
add
add
jecxz
inc
mov
fadds
add
push
mov
add
push
push
inc
shll
jmp
js
lock
xchg
fdivl
sbb
int3
mov
sti
test
fisubs
or
xor
dec
lock
rolb
mov
dec
adc
mov
or
ljmp
sub
je
call
jecxz
add
jne
xor
mov
and
fdivs
inc
pop
lcall
add
mov
jge
pop
cltd
mov
lds
add
mov
mov
std
cmp
jo,pn
mov
mov
push
cmp
pop
inc
add
ja
add
aas
mov
cmpl
mov
pop
pop
or
jmp
and
cmpsb
mov
adc
mov
mov
sbb
cli
mov
das
jl
movsb
ret
arpl
add
add
push
add
clc
xor
mov
xor
mov
cld
xor
lcall
add
mov
icebp
in
mov
mov
js
repz
sahf
test
add
sbb
leave
ja
jp
push
add
std
sub
mov
xchg
into
leave
add
mov
add
aad
mov
mov
into
scas
aaa
shrl
fwait
sub
push
in
xor
adc
mov
add
pop
push
into
pushf
mov
js
jmp
jl
jle
pop
sub
sbb
mov
push
add
lods
sti
add
mov
mov
lods
cmp
enter
cmp
mov
hlt
leave
adc
js
jae
push
and
mov
int
mov
notb
add
pop
mov
xchg
push
into
jmp
jae
cmpsb
fmull
fiadds
add
pop
clc
xchg
aas
inc
xor
add
mov
add
mov
rolb
mov
mov
fistpl
jo
mov
mov
jnp
stos
xchg
lods
sub
stos
roll
mov
cmp
decl
adc
add
sbb
jg
push
popf
jae
jne
test
sub
mov
dec
jl
mov
mov
jmp
mov
pop
jmp
inc
test
rorl
add
cld
cli
mov
mov
add
lahf
divb
push
stos
enter
into
pop
aad
adc
mov
push
aas
lea
leave
pop
adc
mov
popf
stos
test
fiaddl
xchg
movsl
frstor
into
xor
sub
add
aad
leave
jecxz
xchg
push
add
xchg
pop
ss
mov
add
sub
add
imul
mov
and
hlt
push
negb
push
add
test
add
jo
mov
cmp
mov
mull
add
sub
stc
sbb
mov
dec
mov
jecxz
or
add
out
xchg
addb
test
stc
inc
xor
jnp
inc
add
sub
repz
lods
les
add
scas
out
pop
iret
sub
test
test
sub
les
int3
mov
aad
xlat
int3
push
cli
xchg
mov
mov
xor
mov
stos
inc
add
mov
iret
popa
sbb
add
mov
sbb
fadd
add
sub
inc
lods
aaa
rcll
sub
jo
mov
mov
clc
es
fcmovnbe
insl
or
daa
insb
clc
xor
or
push
loopne
mov
push
fs
mov
mov
je
fwait
or
addb
adc
mov
sub
xchg
mov
xchg
add
mov
add
mov
mov
add
mov
inc
repnz
and
mov
shrl
testb
sbb
jmp
test
add
mov
sti
or
mov
inc
add
push
push
jne
scas
cmpsb
dec
xchg
jl
ja
ljmp
test
add
mov
repnz
lcall
data16
push
mov
mov
mov
sahf
mov
mov
xchg
add
add
push
add
bound
mov
jo
mov
add
sarl
add
pushf
inc
stc
lcall
in
add
mov
daa
inc
lock
mov
mov
rolb
jle
ja
pop
dec
add
mov
mov
pop
mov
stc
jp
mov
imul
add
inc
jp
shll
mov
mov
addb
movsl
mov
mov
dec
icebp
lea
les
movb
addb
out
xor
mov
mov
mov
fwait
mov
and
mov
loope
add
rolb
mov
rolb
mov
and
movsl
xlat
sahf
mov
fbld
enter
cmc
inc
call
mov
jbe
pop
inc
pusha
add
jl
add
daa
jmp
pop
addb
daa
mov
test
push
add
jecxz
popf
mov
pop
push
jbe
sub
adc
and
int
out
into
cmp
sub
push
dec
push
imulb
inc
add
adc
xlat
dec
fs
add
enter
add
xor
mov
bound
mov
sub
jl
xchg
lods
addb
pop
pop
loopne
mov
mov
cmp
cmpsb
fldt
or
mov
pop
ljmp
loope
and
mov
or
mov
xchg
pop
xchg
cmp
popa
int3
mov
add
imul
repnz
stc
aam
psrlw
push
push
cli
mov
xlat
push
stos
js
ja
adc
mov
mov
int
outsb
inc
cmp
jl
fistpll
test
adc
mov
mov
stc
mov
mov
mov
loop
mov
dec
out
mov
add
mov
xchg
cmp
cmc
test
cmp
dec
mov
jecxz
add
or
cli
dec
mov
and
mov
scas
out
xchg
lahf
xlat
dec
pop
out
add
mov
sbb
cmp
pop
cmc
aas
mov
add
mov
mov
gs
into
jmp
xor
mov
gs
adc
mov
aaa
add
mov
and
mov
push
lods
ljmp
xchg
cmc
sub
pop
insl
inc
outsb
scas
jp
dec
push
add
mov
add
movsb
push
jne
sti
jnp
pop
mov
mov
mov
pop
sbb
imul
jp
jmp
pop
nop
add
iret
movsb
push
lret
add
cld
mov
movsb
cltd
into
lods
push
gs
and
mov
mov
xor
clc
cld
pusha
add
addb
cli
and
mov
or
cltd
call
rolb
mov
cmp
mov
add
aas
xor
mov
add
sub
das
ljmp
mov
adc
xchg
les
xor
add
add
scas
cvtps2pd
dec
cmc
adc
mov
dec
fildll
out
das
mov
inc
add
mov
mov
or
fisubl
jp
leave
xor
mov
and
repz
and
xchg
popf
inc
add
mov
cmp
inc
add
jnp
lret
insl
ficomps
add
add
shl
cmp
bound
mov
iret
xchg
mov
ret
xchg
sub
pop
mov
xor
jbe
add
out
cmp
add
adc
sbb
dec
cwtl
pop
adc
mov
daa
jae
push
xchg
lahf
mov
dec
outsb
fdivp
repz
mov
sbb
pop
addb
add
mov
mov
mov
add
imul
adc
mov
sub
addb
sub
add
mov
hlt
cmpsb
pop
xlat
dec
addb
add
mov
adc
mov
rcrl
mov
loop
mov
and
mov
imul
add
cmp
push
add
push
add
mov
jbe
insl
lret
sub
mov
mov
enter
mov
dec
cmp
ljmp
add
inc
add
les
cmp
xchg
daa
xchg
mov
add
and
mov
dec
pushf
pop
out
mov
adc
mov
ret
mov
cld
lods
xchg
outsl
jnp
add
add
ficompl
pop
jnp
in
jne
addb
loopne
mov
or
imul
add
ljmp
xlat
daa
and
mov
jno
mov
jns
fidivs
inc
pusha
add
scas
enter
loop
mov
xor
push
cltd
mov
mov
scas
seta
add
add
add
out
jmp
and
mov
mov
call
mov
int
add
mov
add
mov
add
add
imull
dec
cwtl
pop
cltd
sbb
jle
inc
into
test
mov
sbb
mov
in
sub
add
lea
xchg
add
mov
inc
add
mov
fsubl
imul
jge
or
sbb
addr16
arpl
pushl
push
xchg
sub
cld
test
adc
mov
cmp
mov
scas
repz
inc
jecxz
pop
add
mov
mov
push
mov
dec
jb
mov
adc
mov
jg
inc
fstl
mov
icebp
stc
in
mov
push
sbb
addb
pop
cmp
add
in
ljmp
jbe
insb
add
cmp
data16
mov
xor
loope
out
ja
insb
dec
xor
inc
add
aas
ds
add
mov
adc
movsb
ret
inc
add
lods
daa
or
ja
stc
addb
or
jb
mov
pusha
add
movsb
inc
imul
add
pop
mov
addb
shrl
stc
arpl
call
js
add
mov
addl
push
hlt
push
add
mov
and
cltd
push
pop
sbb
mov
add
pop
lods
jbe
stos
sahf
loope
sbb
mov
das
sbb
mov
jmp
push
or
push
add
inc
jae,pn
imul
cmp
push
pop
mov
scas
push
popa
push
mov
mov
adc
add
fisttpl
cmpsl
mov
sbb
mov
sbb
addb
stos
or
test
lcall
and
mov
jae
pop
fwait
leave
rolb
mov
push
daa
aas
jp
shrl
push
rcl
jnp
dec
mov
adc
mov
sub
push
or
and
fcoms
dec
dec
fdivrp
pusha
add
repnz
test
pop
mov
add
mov
jno
pop
sub
fadds
add
push
push
cmp
mov
dec
and
outsb
out
lcall
mov
mov
lea
les
xchg
add
mov
add
fstpt
push
dec
push
mov
mov
xchg
sub
add
jmp
mov
inc
aas
adc
ret
scas
mov
loop
mov
xchg
into
or
addr16
xlat
clc
dec
push
add
addb
adc
lcall
mov
movsb
xchg
aaa
pop
push
ljmp
add
add
fsubl
add
add
ret
sbb
cmp
fsubrs
outsl
int
pop
fstl
stos
or
inc
dec
movsb
cmpl
mov
int3
cmp
add
ret
pop
mov
pushf
sbb
into
and
pop
rolb
xchg
add
inc
and
mov
mov
or
outsl
mov
pushf
mov
mov
inc
testb
cmp
xor
mov
inc
cmp
add
cwtl
dec
dec
dec
test
sbb
add
and
mov
pop
data16
shll
in
add
mov
add
mov
sbb
out
in
jmp
sub
add
add
ljmp
add
divb
out
filds
cltd
or
mov
and
addr16
fadd
jo
mov
test
add
pop
mov
mov
mov
leave
clc
lret
fs
inc
add
mov
pop
nop
add
xlat
insl
in
pushw
add
add
mov
mov
addb
aas
adc
rcrl
adc
sahf
push
add
adc
mov
ret
sub
test
rolb
pop
cmpsl
in
iret
test
inc
add
and
jle
je
pop
lret
test
cltd
addb
inc
test
pop
out
fmuls
mov
mov
es
mov
lea
sbb
push
add
roll
add
sbb
sbb
jb
mov
mov
pop
jle
sub
ds
addb
adc
add
mov
push
cs
cmc
dec
fnstenv
mov
sbb
add
mov
fmuls
mov
imul
in
das
xchg
xor
mov
mov
mov
xchg
push
add
add
mov
jnp
fbstp
mov
ss
setae
cmpsl
or
add
mov
or
push
and
push
insb
sub
sti
movsl
fnstcw
xchg
push
hlt
jae
inc
inc
or
fstl
mov
push
add
add
mov
hlt
sbb
mov
movb
loop
mov
outsl
push
and
test
in
sub
lods
sub
pop
push
mov
dec
les
and
mov
jp
clc
sbb
mov
mov
mov
add
jno
iret
cmp
int3
or
addb
adc
mov
addb
stc
mov
jno
fucomi
loope
xchg
sbb
cmp
mov
sti
fcmovnu
jmp
insb
inc
testl
inc
cmpsl
iret
dec
leave
outsb
mov
add
pop
jmp
dec
cmp
or
scas
cmpsb
out
cmpsl
inc
test
sub
cmp
xor
dec
icebp
mov
add
push
pop
je
xor
mov
jmp
add
add
insb
inc
movsl
in
adc
mov
mov
daa
fcom
add
mov
sub
push
cmpsb
jbe
clc
inc
add
mov
add
call
mov
lock
jecxz
pop
mov
mov
ja
mov
cmp
mov
int3
sub
add
xchg
or
ds
add
mov
mov
add
and
mov
mov
mov
mov
inc
loop
mov
and
mov
dec
addl
pusha
add
mov
lods
icebp
and
in
ljmp
mov
jecxz
add
mov
imulb
pop
repz
fcomps
paddd
sub
push
leave
int3
cmp
dec
push
xchg
jne
sub
pop
mov
mov
mov
cmp
in
add
add
and
add
rolb
mov
rolb
mov
mov
pop
mov
mov
mov
int
sbb
mov
jae
inc
add
repnz
pop
rolb
mov
mov
dec
and
mov
insl
pushf
bswap
pushf
inc
xlat
and
adc
lods
jbe
stos
cwtl
nop
add
cmpsl
sub
pop
or
add
mov
test
shll
int
mov
add
shrl
bound
mov
cltd
mov
mov
in
lds
mov
cltd
cmp
loop
mov
add
dec
push
xor
mov
cmp
popl
cmp
add
out
cmc
nop
add
push
dec
cmp
and
pusha
add
in
pop
xor
mov
es
mov
fldenv
mov
adc
mov
mov
mov
popa
bound
mov
mov
dec
fcomi
add
loopne
mov
push
add
add
add
add
mov
dec
fistps
xor
add
addb
fmulp
push
mov
add
add
add
addb
pop
cmp
jecxz
add
cmp
xchg
inc
add
cli
pop
xor
mov
ds
mov
cmp
adc
mov
rolb
mov
adc
mov
jno
data16
mov
cmp
loop
mov
lods
jo
mov
test
and
mov
jbe
rolb
mov
or
and
mov
xchg
je
fwait
sbb
lret
lret
push
int3
jb
mov
insb
add
hlt
lea
push
jae
add
sub
pushl
mov
sbb
insb
rolb
mov
repnz
scas
push
bound
mov
sub
inc
fistpll
rcll
mov
inc
test
add
out
inc
dec
ljmp
mov
insl
cltd
movsl
aaa
mov
addb
push
add
cmc
cwtl
jp
enter
addb
mov
and
lds
pop
les
mov
mov
mov
sub
mov
js
push
imul
pop
into
and
xorl
sub
mov
adc
mov
adc
pop
xchg
les
leave
sbb
out
xchg
push
mov
sub
mov
and
adc
adc
pop
mov
fsubrs
xchg
cmpsb
arpl
add
mov
sahf
icebp
mov
xor
popf
push
mov
or
mov
scas
addb
test
sbb
lods
cli
insl
rolb
in
add
mov
call
mov
mov
popa
loopne
mov
rolb
mov
notl
sbb
js
add
mov
add
add
rolb
addb
or
pop
enter
testl
inc
cwtl
outsl
sub
jl
push
aas
jge
pop
int
add
sbb
cwtl
cmc
incb
imul
sub
mov
add
mov
push
add
jl
rolb
xchg
xchg
pop
jle
add
inc
fiadds
add
jo
mov
xor
icebp
ljmp
fwait
addb
dec
add
out
add
mov
push
ja
sub
push
add
gs
scas
dec
and
sub
xchg
jae
add
add
add
xchg
rcrw
push
or
fstps
mov
js
mov
xchg
aaa
orps
shl
add
sub
scas
mov
outsb
pop
mov
mov
mov
xor
mov
std
mov
add
add
add
test
xor
std
fisttpll
cmp
popf
shll
add
dec
repz
mov
push
cmpsl
mov
mov
mov
rolb
cmp
lods
push
test
dec
mov
add
imul
mov
sti
xchg
das
sub
mov
stos
inc
mov
and
mov
outsb
addb
popf
scas
rcll
mov
sub
add
dec
fs
call
add
add
mov
scas
xor
movsb
and
mov
xor
mov
outsl
ds
add
icebp
add
dec
into
mov
mov
xlat
nop
add
pop
and
mov
push
add
ret
popa
cmp
add
out
pop
rcrl
addb
and
inc
push
inc
add
add
stos
nop
add
add
jge
iret
lds
sub
div
pop
mov
jecxz
in
or
rolb
mov
int3
cmp
push
xchg
ds
dec
xchg
out
addr16
mov
mov
push
sub
mov
sub
negl
adc
mov
mov
adc
mov
add
in
imul
movsb
or
in
sub
data16
add
mov
rolb
les
fxtract
loopne
mov
cmp
sbb
mov
fidivrl
mov
daa
cmp
popl
enter
jnp
scas
cld
jge
into
jo
mov
loop
mov
mov
out
xchg
add
movsl
xor
popa
out
jmp
mov
xchg
mov
rolb
mov
mov
idivl
test
mov
mov
cli
je
add
mov
lods
loop
mov
push
pushf
adc
mov
mov
fwait
cmpsl
leave
dec
out
inc
jnp
cld
xchg
add
add
imul
xchg
add
add
cmp
in
scas
idiv
dec
in
nop
add
add
int
add
mov
bound
mov
push
pop
movsb
movsb
jae
add
sub
bound
mov
movsb
or
cmp
add
mov
add
test
gs
andl
shll
xor
mov
mov
test
repz
dec
or
add
push
or
add
add
dec
add
mov
push
add
mov
xchg
daa
ds
mov
xor
jl
add
inc
add
pop
shll
adc
jbe
push
testl
jbe
mov
jmp
mov
add
mov
js
lea
lfs
mov
out
mov
jle
push
int3
addb
sub
orl
and
mov
jo
mov
popa
test
loopne
mov
stos
out
push
std
js
sub
add
shrl
add
add
inc
add
arpl
pop
aaa
inc
xchg
cli
inc
dec
mov
sub
nop
add
sbb
in
and
js
push
add
mov
mov
and
xor
add
loop
mov
cltd
imul
dec
or
jmp
sti
xchg
cmp
cmp
jmp
add
inc
ret
mov
rolb
mov
paddsb
fwait
pop
xor
add
mov
mov
mov
xchg
mov
cld
adc
mov
test
push
push
pop
mov
mov
add
pop
dec
test
and
nop
add
mov
cmp
scas
sub
ret
popa
push
add
add
lret
cwtl
jecxz
out
xchg
mov
ja
add
jae,pn
mov
mov
scas
cli
push
adc
stos
add
mov
or
cmp
sbb
andl
and
mov
sbb
sahf
mov
pop
mov
jge
inc
jnp
enter
mov
add
jg
mov
add
pop
mov
enter
popa
add
mov
lea
int3
add
xchg
add
add
jl
les
insb
cmp
je
mov
pop
sbb
imul
mov
mov
imul
sti
cwtl
dec
mov
mov
cld
adc
mov
add
daa
pop
pusha
add
add
or
add
sub
gs
xor
mov
daa
inc
std
xor
mov
and
mov
add
and
mov
orl
jg
gs
or
add
cmp
cmc
mov
or
and
mov
mov
pushf
mov
rolb
or
sahf
pop
xchg
mov
sbb
add
or
xor
mov
addb
sbb
sub
push
xchg
add
pop
loope
add
movsb
dec
sahf
aam
imul
and
add
ljmp
lcall
pop
pop
sarl
or
mov
add
mov
fisttpll
mov
push
add
mov
add
mov
add
push
add
incb
stos
mov
mov
xchg
shr
ret
ret
outsb
shr
out
mov
mov
lret
sub
mov
mov
lcall
and
mov
push
pop
or
mov
rolb
mov
mov
mov
push
add
cmp
mov
add
addb
mov
sbb
dec
inc
add
mov
sahf
aam
ss
mov
mov
add
add
mov
dec
push
sbb
addb
pop
lods
push
lock
lods
in
add
sub
rolb
mov
push
xchg
xchg
xchg
xchg
add
shrl
mov
psrlq
cmp
add
push
xor
les
mov
add
mov
rolb
push
loope
addb
pop
mov
xchg
sub
scas
in
adcl
gs
mov
popa
outsb
xor
mov
cmp
cmp
add
mov
les
data16
mov
jns
add
movsl
roll
jo
mov
lcall
mov
inc
add
cmc
mov
add
mov
into
test
stc
stos
dec
in
push
jo
mov
sbb
jmp
add
push
xchg
fistpl
dec
sbb
add
idiv
loopne
mov
pop
and
nop
add
insl
inc
loope
jno
push
mov
mov
lcall
cli
mov
fists
out
mov
xor
mov
sbb
ret
idivl
mov
imul
mov
insl
inc
fldlg2
pop
push
int
xor
sub
push
xchg
cmp
scas
adc
dec
test
push
inc
bound
mov
mov
add
xchg
movsb
sub
ss
stc
cmp
addr16
loope
adc
mov
lret
add
dec
addb
cltd
xchg
inc
add
sbb
jl,pt
jmp
sub
xor
scas
and
mov
or
daa
add
push
sbb
pop
scas
in
add
inc
imul
and
mov
mov
je
loopw
mov
popa
push
loopne
mov
push
add
add
mov
push
enter
stos
rorl
dec
adc
out
dec
mov
add
clc
or
add
mov
test
hlt
test
rolb
mov
fidivs
add
mov
lods
push
call
mov
outsl
pop
pop
movsl
xchg
shll
add
xchg
cmp
cmp
xchg
add
jle
add
or
mov
inc
add
add
test
dec
rolb
inc
xchg
sbb
mov
xchg
hlt
stc
rolb
mov
lret
lock
iret
movsl
push
call
cmp
stc
jmp
lea
mov
outsb
mov
js
lods
mov
mov
mov
outsb
push
nop
add
push
push
or
adc
mov
loope
add
cmp
or
cmpsl
push
ds
insl
test
jl
add
pop
in
add
push
sbb
add
repz
stos
stos
inc
repnz
nop
add
xor
add
lahf
mov
nop
add
push
lahf
mov
add
adc
loop
mov
in
add
je
inc
jecxz
mov
add
add
mov
in
xlat
jbe
add
dec
stos
push
or
pop
sbb
jl
inc
jb
mov
cwtl
in
out
pop
jno
mov
adc
inc
leavew
adc
and
out
in
pop
mov
stc
js
inc
xor
mov
sbb
insb
lds
jmp
pushf
mov
cmp
add
icebp
lahf
push
add
mov
push
add
loopne
mov
jo
mov
mov
pop
push
adc
cmp
jmp
sub
clc
sub
popa
xor
push
pop
popa
hlt
mov
push
add
pop
sub
dec
cmc
jno
mov
mov
mov
mov
std
jne
add
add
and
add
mov
cmp
cli
cld
aam
cmp
sti
test
and
pop
mov
pop
jl
add
mov
push
jmp
fmulp
call
dec
xchg
pushf
mov
mov
mov
xchg
sub
mov
mov
ljmp
hlt
cmp
int3
daa
push
push
sti
rolb
mov
pusha
add
insb
sub
outsl
aad
add
sahf
scas
adc
xchg
sub
imul
xchg
xor
inc
insl
lods
fnsave
jp
sti
lods
inc
insl
sub
cmp
cmp
push
imul
pop
fmul
movsb
into
insl
ljmp
or
insl
int
sub
repz
mov
rorl
iret
lcall
std
mov
pop
je
add
aaa
lret
orl
inc
jmp
and
mov
or
lea
push
pop
add
mov
js
les
leave
xchg
test
xchg
movsl
lock
fldt
insb
test
mov
mov
mov
mov
or
test
mov
jle
stos
or
pop
cmpsb
test
xor
mov
xor
mov
clc
mov
mov
int
int3
xchg
add
aaa
push
lcall
push
je
cs
push
and
mov
and
mov
aaa
mov
xchg
add
fwait
stos
rolb
cmc
sub
divb
xchg
sub
scas
jo
mov
dec
repnz
mov
jl
jbe
add
mov
jno
add
mov
xor
testl
push
ss
sbb
addb
in
cmp
add
sub
jp
xor
add
fwait
push
add
push
mov
pop
jne
add
fstl
test
xor
pop
out
cmpsl
push
xor
mov
mov
cwtl
lcall
addb
daa
ds
enter
and
ud0
aas
pop
adc
jno
js
stc
addr16
fnstsw
mov
lret
mov
fsts
add
add
xchg
jmp
in
subps
pop
lock
scas
or
cmpsb
jns
pop
shl
mov
dec
ret
or
in
cli
stc
mov
push
addb
mov
jle
push
dec
outsl
cmp
dec
sub
xor
aas
leave
repnz
shl
pop
mov
add
lods
mov
dec
lahf
mov
mov
mov
add
cmp
xchg
inc
xlat
lret
pop
repz
flds
add
mov
sub
lods
les
scas
or
add
inc
inc
lcall
das
add
mov
aaa
pop
icebp
or
pop
dec
mov
push
ficoml
daa
mov
jp
movsb
or
sub
mov
int
fstps
lea
aas
pop
fiadds
push
inc
movsl
push
add
fcoml
sub
repnz
add
add
mov
pop
ficoms
addb
loope
add
fsubrl
scas
sub
or
aas
mov
inc
cmpsb
add
adc
sub
push
jae
xchg
mov
mov
jno
push
mov
adc
and
push
adc
movsb
out
lods
pop
add
dec
movsb
mov
mov
push
add
mov
mov
cmpsb
add
mov
jns
add
push
pop
pop
stos
push
sahf
jmp
mov
adc
add
add
mov
jo
mov
stos
jmp
add
cmpsl
sub
mov
push
add
mov
xchg
fidivl
mov
add
ja
add
dec
mov
in
jmp
pop
dec
clc
fsubl
or
imul
add
sbb
jl
sbb
es
dec
mulb
decl
lahf
mov
mov
dec
sbb
stos
scas
in
sbb
adc
mov
loop
mov
ret
cmp
inc
add
setg
fistl
cmpxchg
mov
mov
pop
sbb
xor
add
repnz
inc
insl
pushf
jb
mov
inc
add
push
scas
mov
mov
adc
lock
add
add
push
push
xlat
or
mov
add
rolb
pusha
add
fwait
rolb
add
addb
and
inc
add
movsb
push
ret
pop
mov
subl
mov
add
mov
sub
cmc
test
rcrl
loopne
mov
add
mov
mov
add
mov
sbb
mov
add
out
cs
into
dec
add
add
les
add
into
cmc
into
pop
repnz
outsl
ja
add
and
mov
addr16
mov
ljmp
arpl
fisttpl
callw
add
xchg
notb
xchg
cmc
sbb
mov
push
xchg
adc
push
lds
icebp
inc
add
int
inc
adc
add
mov
xchg
ds
push
jl
sbb
flds
inc
cbtw
imull
add
xchg
sbb
jnp
cmpsb
pop
in
jne
cs
mov
add
add
mov
dec
cltd
aaa
test
scas
addb
mov
enter
push
pop
lds
inc
mov
add
xchg
pushf
add
outsl
sti
inc
push
pop
jmp
cmpsw
push
xchg
add
ds
std
enter
ja
addb
popa
dec
mov
scas
rolb
outsb
fnsave
add
addl
mov
and
add
inc
add
adc
mov
dec
fcoms
and
in
sub
nop
add
mov
mov
push
mov
mov
push
add
jl
out
stc
mov
cwtl
xor
add
mov
jle
mov
cmp
jmp
fst
add
lret
ret
rcll
mov
dec
sbb
xchg
pop
fdivrl
imul
mov
jbe
add
pand
add
iret
mov
mov
jae
mov
sahf
imul
popa
fadds
lock
mov
add
insl
push
inc
xchg
add
inc
cli
ds
mov
add
mov
add
bound
mov
mov
jno
add
sub
push
rolb
mov
mov
add
and
addb
std
aas
push
fcmovu
movsl
fdivr
jg
repnz
cmp
add
dec
aad
ret
jecxz
sti
xchg
add
pop
sbb
test
stos
enter
frstor
cmp
mov
add
dec
cmpsl
push
lret
mov
add
cmp
pushf
inc
jae
add
mov
rolb
test
pop
sbb
addb
and
mov
popa
pop
fsubrs
pop
mov
jle
sbb
imul
add
push
pop
rcll
pop
xor
jno
push
sbb
mov
or
bound
mov
jae
testl
mov
mov
lock
push
nop
add
sbb
sbb
add
rcll
call
add
pop
fisttpll
mov
dec
repz
mov
fs
add
in
add
add
add
jo,pt
mov
js
enter
mov
mov
xchg
in
pand
bound
mov
sbb
or
addr16
data16
imul
mov
mov
sub
scas
sti
cmp
add
add
adc
fisttpl
popf
in
add
pop
xchg
mov
sub
sub
mov
jnp
popa
sub
xor
mov
mov
mov
inc
sbb
inc
add
cmp
ret
and
mov
test
mov
jg
nop
add
add
in
lret
imul
mov
rcl
mov
stc
xor
dec
pop
repnz
add
mov
xchg
les
leave
shll
cmc
mov
push
aas
jle
sbb
js
add
xchg
jne
mov
xchg
loop
mov
sbb
and
addb
enter
xor
gs
jmp
add
add
push
rolb
mov
pusha
add
sub
dec
pop
movsb
push
pop
gs
mov
lea
mov
icebp
mov
push
add
add
neg
ficompl
mov
pop
xchg
js
adc
jmp
je
ss
lea
add
mov
frstor
add
add
mov
mov
mov
add
push
add
icebp
aas
xchg
pop
xchg
dec
push
imul
or
rolb
addb
dec
jle
mov
mov
stc
aam
jae
shll
add
xchg
movsb
inc
xchg
mov
mov
push
out
movsb
mov
sub
pop
dec
lret
cltd
xor
mov
jecxz
les
lret
add
add
add
xor
push
out
add
popa
and
add
inc
js
sbb
and
mov
insb
pop
xor
mov
xchg
sbb
add
cli
jp
xor
mov
mov
sbb
daa
mov
pusha
add
mov
fstpt
xchg
push
and
mov
add
add
ss
das
jmp
movb
pop
xchg
lahf
pop
cmp
add
xchg
nop
add
xchg
jno
incl
dec
pop
ss
add
mov
cltd
mov
sbb
call
jmp
mov
push
xor
mov
add
jns
scas
or
sub
inc
mov
and
mov
sbb
adc
in
icebp
scas
int3
add
lea
mov
mov
inc
add
dec
or
btr
mov
and
add
mov
arpl
add
mov
add
rolb
mov
repnz
push
add
push
fsubrl
mov
das
mov
mov
sub
ds
lock
pop
or
mov
sub
push
add
add
add
in
test
cltd
push
sbb
add
cmp
inc
mov
add
pop
sbb
add
add
popa
dec
push
adc
ret
movsb
repnz
cmp
jp
cli
loop
mov
xchg
iret
jl
cmp
pop
aam
add
mov
mov
inc
jg
loopne
mov
xor
dec
test
cmp
inc
adc
xchg
iret
addb
jo
mov
add
push
cmp
ja
add
mov
popa
cmpsl
and
les
mov
add
add
test
test
lock
cs
shll
lret
movswl
pop
das
push
add
mov
mov
mov
dec
popa
jmp
add
addb
jge
lcall
test
in
call
pop
xor
mov
pop
incb
add
add
mov
idivb
mov
cmp
repnz
dec
fs
idivb
mov
fmulp
pop
nop
add
mov
int3
fidivrl
xor
mov
ret
arpl
outsb
mov
xchg
addb
xchg
push
outsb
dec
notl
sub
mov
or
test
add
lahf
dec
pop
loop
mov
add
add
popa
adc
cmp
mov
mov
mov
add
mov
mov
mov
mov
icebp
ss
jno
mov
sahf
push
adc
cli
mov
mov
aas
inc
scas
push
sbb
das
xchg
add
xlat
and
mov
mov
aad
stos
lret
mov
jae
add
mov
add
xor
lods
cli
cld
cmp
or
add
out
lock
sbb
sbb
ret
sub
xchg
and
add
push
add
hlt
push
sub
pusha
add
add
mov
hlt
inc
mov
rolb
mov
bound
mov
adc
mov
sbb
rolb
mov
pop
mov
add
jae
or
fsubrs
cmp
add
mov
mov
pop
cmp
cmpsl
inc
cmp
rolb
jmp
fdivp
pop
adc
daa
or
int
or
push
repz
mov
dec
fcoms
mov
mov
ret
movsl
mov
inc
ja
or
mov
mov
mov
jg
add
sbb
xor
fld
sub
out
add
push
in
pop
in
cmp
add
lcall
outsb
mov
insl
sahf
in
aaa
fdivl
iret
movsl
add
mov
add
loopne
mov
out
and
mov
or
inc
sbb
adc
mov
add
jmp
cmpsb
int3
jl
sub
pop
sbb
mov
sub
loop
mov
fisttpl
rcll
inc
aaa
ds
pusha
add
fdivs
xchg
add
dec
aas
jns
adc
lods
xor
pushf
push
push
mov
mov
scas
out
pop
rolb
mov
mov
add
shll
mov
dec
mov
fiadds
add
insl
add
fstps
stc
sarl
add
pushf
es
nop
add
xchg
cli
xchg
mov
int3
stos
notl
je
into
lods
in
cld
mov
mov
pop
cmpsb
xor
mov
mov
add
xchg
pop
pop
das
fstl
mov
add
pop
and
mov
decb
jne
je
jno
lock
bound
mov
pop
sbb
inc
add
mov
repnz
sub
add
scas
imul
mov
rolb
mov
add
mov
dec
test
pcmpeqb
add
mov
and
mov
test
out
leave
inc
pop
daa
and
add
cmc
notl
add
and
mov
push
add
add
pop
insb
mov
pop
cmp
and
sub
pop
lahf
sbb
ret
pusha
add
lock
add
fiadds
dec
filds
rolb
mov
add
mov
out
loopne
mov
xchg
in
sbb
add
les
mov
push
hlt
fwait
xchg
mov
push
dec
popa
xchg
std
xchg
mov
mov
fstp
jo
mov
xchg
mov
mov
pop
inc
mov
mov
out
cmc
mov
rolb
mov
cmp
stos
mov
mov
pop
jno
int
add
add
push
scas
cmp
inc
add
mov
add
jno
pusha
add
add
sbb
in
loopne
mov
dec
in
dec
dec
js
daa
dec
cli
cmpsb
out
adc
daa
in
add
mov
ficomps
pusha
add
pop
mov
mov
or
add
or
jle
inc
cmpl
mov
mov
inc
mov
add
int
add
out
adcl
insb
ret
and
mov
adcl
push
loope
add
subl
xor
cmp
mov
add
jnp
pop
aaa
pushf
jge
cs
pop
int
mov
movsl
xchg
sub
xchg
popa
jp
inc
es
loope
xor
mov
mov
cs
xchg
sub
mov
mov
add
jl
mov
adc
cmp
lods
mov
daa
jns
mov
lods
int
int
mov
mov
push
fnstenv
add
stos
push
add
testl
sti
movsb
xchg
mov
pop
imul
lret
lock
and
mov
pop
fsts
add
test
xor
aaa
sub
outsb
add
into
jo
mov
xor
repnz
lock
outsb
aam
stos
test
mov
mov
jns
aad
push
lods
std
pop
xchg
push
add
mov
xorl
mov
sub
add
mov
mov
add
jae
ljmp
mov
cmp
or
and
fwait
pop
cmp
add
add
fcoml
lret
imul
lret
inc
add
stos
inc
add
add
xor
lret
lahf
fidivrl
fists
cld
add
arpl
jnp
xchg
dec
into
insl
or
pushf
lret
mov
pop
scas
repz
adc
lcall
mov
push
jmp
cmp
push
rolb
mov
mov
add
inc
mov
frstpm(287
outsl
andl
cltd
ds
aam
idivl
fwait
clc
mov
out
sahf
mov
pop
sub
xchg
xchg
ret
inc
leave
sub
add
out
add
mov
xchg
jge
pop
adc
div
testb
cwtl
ret
push
add
je
mov
mov
daa
aam
add
mov
adc
mov
fidivrl
stos
outsl
xlat
xor
cmp
add
mov
je
ja
and
fwait
js
add
sti
in
add
and
mov
int3
clc
push
add
outsb
inc
cmp
into
lahf
and
mov
jecxz
int
rolb
mov
add
mov
pop
mov
pop
mov
dec
gs
jle
xor
mov
test
jg
xchg
push
hlt
cmp
outsl
or
add
add
ljmp
cmp
mov
sti
mov
cli
cmpsl
iret
nop
add
loop
mov
and
mov
outsl
pop
fidivs
xchg
daa
leave
aas
not
or
sub
cmp
std
push
lea
ret
xchg
pop
push
jnp
jmp
jg
jge
push
out
jp
movsb
ds
test
daa
es
cmp
fidivrs
mov
lods
ficoms
fcmove
shl
jl
inc
fcom
pop
comiss
mov
jb
mov
inc
loope
sbb
cltd
rorl
daa
lods
fistpll
imul
sbb
add
sub
sar
add
add
test
enter
sub
push
inc
rolb
mov
lret
dec
dec
hlt
cmp
add
xchg
xchg
jbe
mov
add
push
lods
and
mov
mov
add
dec
in
fcomps
mov
daa
js
push
cli
xor
mov
push
inc
mov
popf
xchg
int
jecxz
or
icebp
stc
jbe
xor
mov
and
push
push
mov
add
jae
add
rolb
mov
dec
imul
pop
cltd
leave
xor
out
in
and
cld
ret
jp
add
and
mov
addb
imul
inc
xchg
mov
dec
add
mov
loope
or
in
js
jp
add
cmpsb
cmp
stc
jmp
xorl
shrl
inc
sbb
loope
aas
inc
add
imul
cmp
outsb
lret
dec
addb
add
lods
fsubl
adc
cmp
mov
int3
lock
scas
lea
add
movsl
fldt
mov
loopne
mov
pop
and
mov
mov
xchg
sbb
jo
mov
xchg
add
add
jnp
jae
add
sahf
and
mov
fistpl
repz
and
in
mov
pop
push
pushf
adc
adc
mov
xchg
leave
cltd
sbb
inc
sub
stos
xchg
mov
sub
subl
add
push
cmp
lret
addr16
jnp
push
and
add
mov
jb
mov
or
mov
aad
inc
es
movsl
aad
adc
iret
popa
test
dec
push
add
mov
xor
dec
push
add
mov
mov
rep
movsb
inc
add
jae
test
mov
pop
jno
addr16
inc
test
xor
mov
int
lea
mov
or
ja
xor
sub
stos
aam
push
mov
inc
xchg
xchg
pop
dec
xchg
mov
mov
add
add
add
mov
add
inc
mov
xlat
pop
in
js
int3
jge
dec
call
mov
adc
mov
sub
add
sub
push
icebp
test
daa
inc
inc
dec
divl
sbb
leave
stos
pop
cmpsl
pop
cmpsl
daa
out
add
je
add
mov
out
pop
push
repz
test
data16
mov
inc
jl
inc
add
mov
add
adc
adc
mov
adc
push
mov
repz
add
addb
xchg
in
add
mov
std
pop
mov
dec
push
xor
mov
pop
outsl
mov
mov
imul
repz
addb
xchg
stc
pop
sbb
mov
push
pop
mov
xchg
mov
mov
incb
mov
mov
mov
stc
inc
fsubrl
data16
lret
sub
lock
out
or
rolb
mov
sub
sub
or
pop
xor
mov
mov
add
add
mov
add
sbb
add
jge
add
dec
jecxz
mov
mov
add
mov
mov
into
lcall
mov
sub
push
fidivrs
addl
out
mov
mov
popa
push
pushf
ret
popf
paddw
int3
jmp
imul
mov
mov
lret
mov
push
into
pop
pop
sbb
xor
push
cmp
div
add
mov
out
fwait
and
xchg
add
mov
pop
cmc
and
push
stos
int3
xchg
add
in
insb
mov
cltd
fidivrl
mov
add
sti
ja
add
mov
mov
rcrl
mov
push
test
mov
shll
add
mov
out
fldenv
add
mov
fwait
addb
xchg
aas
sub
rolb
mov
add
add
dec
lfs
inc
cmpsb
ret
ja
psrad
mov
add
jle
inc
lcall
loopne
mov
leave
sub
into
and
mov
pop
push
fistps
rolb
mov
data16
jge
cmpsl
dec
add
mov
fcompl
jl
mov
testl
cmp
std
inc
add
inc
mov
add
loopne
mov
xchg
addr16
jo
mov
add
inc
jmp
scas
repnz
xchg
add
movsl
sbb
punpckldq
mov
mov
add
xchg
or
jne
rolb
mov
pop
jle
or
das
das
subl
sub
jge
xchg
add
or
loopne
mov
les
push
ja
pushf
std
mov
mov
mov
and
xchg
add
mov
out
and
add
xchg
cmp
add
sbb
add
lods
push
add
mov
xchg
pop
dec
sub
into
inc
daa
xchg
sub
push
scas
pop
push
inc
stos
mov
push
add
mov
fwait
les
xchg
add
movsl
rolb
mov
mov
bound
mov
addb
or
insl
cmp
dec
int
add
sbb
inc
inc
loop
mov
mov
push
loop
mov
mov
mov
add
add
push
add
fs
bound
mov
mov
aaa
lods
push
or
xchg
add
mov
das
add
or
rolb
and
mov
xchg
popa
add
mov
inc
sub
pop
flds
mov
jecxz
cmp
jle
std
fidivrs
adc
add
mov
jmp
mull
mov
mov
lahf
testl
mov
mov
inc
push
xchg
mov
sub
loop
mov
test
sbb
add
fidivrs
shrl
xor
mov
hlt
xchg
push
add
jmp
or
push
mov
mov
mov
xlat
cmp
in
jecxz
mov
xchg
stos
mov
mov
add
add
xor
mov
push
leave
adc
repz
xor
mov
pusha
add
inc
add
add
fstpl
xor
push
add
jno
add
in
pop
cmpsb
xor
mov
repz
add
out
jns
sub
push
aas
jmp
into
push
fildll
inc
int
add
xor
mov
mov
push
dec
push
add
push
mov
mov
out
imul
addb
lahf
push
cmc
mov
dec
ffree
add
int3
jns
pop
lcall
xchg
inc
jl
add
add
lret
push
fs
inc
scas
std
out
stos
and
cmp
mulb
mov
and
rcrl
xchg
inc
rolb
mov
mov
mov
push
cmc
addb
fstpl
clc
and
inc
pop
adc
dec
rolb
mov
mov
test
add
ds
push
add
add
ret
fiadds
mov
push
int
xchg
pop
int
pop
pop
repnz
test
loopne
mov
adc
adc
daa
test
imul
add
add
lcallw
lods
sub
mov
mov
jae
mov
mov
imul
mov
lret
into
repz
add
sbb
pop
jnp
jp
dec
je
pop
xor
aaa
stos
cmc
dec
sbb
add
push
rolb
jecxz
jmp
leave
sti
push
idivl
add
clc
lea
add
add
int3
jge
sbb
push
jbe
mov
repz
pushf
lahf
jno
imul
setge
lret
or
add
out
inc
stos
mov
add
cmp
cmp
mov
mov
mov
cmp
cmp
movsb
aad
enter
cmp
mov
inc
add
mov
ljmp
repnz
sub
dec
fmuls
and
addb
fs
add
scas
imul
int3
push
lcall
lock
ja
repnz
pop
movsl
cmp
cmpsl
scas
inc
mov
lret
add
scas
push
mov
clc
loope
adc
pushf
adc
mov
mov
adc
xchg
push
mov
add
mov
decb
imul
add
lret
mov
and
mov
xor
mov
mov
adc
mov
jge
add
xchg
mov
repz
clc
stos
jnp
mov
mov
mov
or
sbb
inc
add
mov
mov
adc
mov
lcall
mov
and
mov
add
and
cmp
mov
xchg
mov
and
sub
mov
push
add
movsb
sbb
inc
xchg
fnsave
add
xor
mov
int3
jg
enter
mov
mov
nop
add
pusha
add
push
out
movsb
fidivl
pusha
add
push
loop
mov
mov
addb
addb
jnp
jge
lret
loopne
mov
mov
add
xor
nop
add
pop
xchg
jnp
lods
xchg
mov
stos
mov
push
jb
mov
add
mov
mov
add
addr16
mov
test
das
xor
out
movb
lods
stos
out
addl
xchg
fnstsw
call
std
and
mov
rcl
xchg
pand
sahf
sbb
pushf
dec
push
and
mov
xor
mov
add
mov
mov
pop
mov
pop
xchg
outsb
movsl
cmc
pop
pop
push
add
mov
out
jp
dec
jnp
jno
jg
sub
mov
add
push
add
mov
add
xchg
scas
loop
mov
mov
jns
pop
insl
and
mov
lahf
sti
xor
add
mov
loopne
mov
xchg
mov
push
aam
add
add
fidivrl
test
mov
adc
add
jmp
mov
dec
ret
xlat
adc
popf
mov
aaa
push
add
fistpl
xchg
repz
insb
adc
push
add
xor
mov
addb
pop
cltd
pop
mov
push
enter
js
lock
mov
add
adc
push
add
addb
dec
pop
add
mov
mov
add
pop
pusha
add
ja
push
leave
cmpsb
mov
mov
ljmp
inc
mov
inc
nop
add
jo
mov
xchg
insl
or
popf
adc
push
mov
mov
mov
inc
sti
test
add
mov
lahf
sbb
xchg
dec
mov
pminsw
scas
faddp
and
add
add
mov
add
fisubrs
mov
sub
add
ljmp
and
add
add
arpl
fists
add
mov
xlat
stos
idiv
push
or
and
mov
data16
movsb
cmc
mov
mov
push
add
add
dec
jecxz
adc
mov
mov
xchg
push
or
ret
hlt
add
mov
loopne
mov
insl
xor
mov
es
mov
mov
mov
sbb
out
les
mov
xor
fisubl
mov
pop
adc
mov
mov
adc
adc
shrl
inc
add
fwait
inc
or
mov
xchg
ret
pop
cmp
fsts
add
add
loopne
mov
mov
mov
add
movsb
clc
mov
push
jmp
add
add
xor
mov
add
jo
mov
sbb
push
xor
push
push
pushf
jmp
add
js
add
xchg
sub
xchg
add
dec
bound
mov
add
mov
and
and
mov
xchg
add
fisubrl
cli
xchg
xor
mov
dec
imul
cmp
or
xchg
aad
and
add
xchg
push
or
cltd
and
xor
push
add
mov
mov
jl
push
in
cmpsl
pop
popf
sub
in
scas
rolb
mov
mulb
stos
test
mov
xchg
pop
mov
push
mov
leave
pop
movsl
xchg
adc
in
data16
jo
mov
push
push
in
xor
das
sub
mul
add
out
fistl
mov
mov
sub
inc
rolb
mov
mov
xchg
scas
and
mov
movsb
cltd
pop
jg
and
mov
xchg
test
jbe
insl
cwtl
das
push
add
out
test
call
inc
test
add
fs
stos
out
fcomps
jp
cltd
and
mov
pop
add
fcomps
mov
xchg
sub
fldt
fld
scas
and
int
mov
cltd
or
mov
cmp
sub
js
inc
jp
xchg
dec
mov
add
addb
push
fnstsw
push
jg
arpl
add
jns
iret
popf
sbb
hlt
cmc
or
loopne
mov
rcrl
psubw
adc
mov
mov
mov
xor
mov
add
mov
add
aam
lahf
add
xor
pop
rolb
mov
roll
or
dec
cld
xchg
out
cmp
add
add
ja
iret
arpl
push
add
sub
jmp
or
add
jp
push
add
fstl
in
add
ss
repnz
cltd
jbe
fcomps
jne
xchg
xchg
fldl2e
addl
add
ss
push
or
inc
pop
insb
stc
and
xor
pop
stc
add
mov
fwait
sub
xchg
cltd
iret
incb
mov
sbb
jecxz
call
mov
mov
jge
movsl
bound
mov
outsb
insb
lret
sub
mov
xor
mov
add
mov
mov
dec
cwtl
pusha
add
mov
addb
xchg
int3
or
test
mov
jno
lods
shll
add
mov
jg
add
pop
fsubrp
orl
pop
fimull
sti
cmpsb
out
cld
xchg
add
in
push
cmc
ret
in
mov
pop
hlt
hlt
nop
add
mov
mov
sub
jg
outsb
outsb
out
fidivrs
or
sti
and
mov
push
xor
mov
test
xchg
add
mov
dec
lock
xchg
add
ss
jo
mov
inc
jb
mov
add
jecxz
and
cmp
loop
mov
pusha
add
cli
sbb
test
add
mov
add
fsubs
call
dec
mov
mov
or
inc
daa
mov
sub
and
mov
push
dec
addr16
add
jecxz
loop
mov
mov
cwtl
mov
sbb
mov
add
lcall
movsb
push
mov
dec
sub
mov
adc
mov
and
pop
das
fdiv
xor
add
add
call
add
shll
inc
addr16
or
mov
inc
imul
mov
add
mov
fnstcw
inc
add
in
adc
add
add
add
imul
sbb
imul
mov
sbb
add
out
adc
add
in
add
xor
inc
stos
ret
sbb
jo
mov
mov
nop
add
sub
pop
add
sbb
loope
cmc
xor
sub
add
sbb
mov
add
jp
and
mov
mov
dec
loope
push
xchg
mov
insb
xchg
add
mov
pop
roll
les
and
imul
stos
jle
add
push
jns
int
pop
inc
dec
xchg
bound
mov
add
sub
movsl
lcall
aas
fnstenv
inc
inc
mov
mov
test
add
mov
ret
pop
inc
add
dec
mov
push
ja
add
add
inc
or
popf
leave
jg
in
enter
xchg
nop
add
sub
rolb
popf
cmp
add
fsubrs
sbb
sbb
xchg
insb
cs
add
outsb
andl
mov
lea
add
pop
das
mov
mov
adc
scas
cltd
lods
sbb
pop
mov
scas
dec
mov
fldt
inc
ja
icebp
jp
sbb
adc
aam
int3
xchg
jno
add
mov
sbb
imul
nop
add
add
mov
mov
movsl
cmpsl
cmc
push
inc
addb
fbld
add
stc
jp
xchg
loope
pop
outsb
pop
in
cmpsb
jl
push
loope
incl
divb
mov
fists
ss
add
push
or
into
sbb
cmpsl
mov
mov
aad
fnstsw
pop
xor
mov
mov
mov
incb
mov
dec
inc
outsb
xor
add
mov
insb
scas
nop
xor
loop
mov
rolb
mov
add
shld
add
jns
xor
mov
sub
and
icebp
pop
icebp
mov
ds
and
mov
add
jle
bound
mov
sahf
cmc
push
arpl
movsl
xchg
nop
add
push
jns
mov
repnz
or
mov
mov
call
mov
add
in
cmp
shll
inc
add
xchg
add
addb
pop
sbb
sahf
movsl
mov
mov
pop
adc
add
mov
out
add
mov
mov
mov
mov
mov
mov
push
add
add
mov
push
mov
add
mov
test
dec
scas
cwtl
divb
mov
je
pop
cld
push
add
adc
or
adc
icebp
cmp
iret
pop
jnp
add
daa
fstps
jnp
cmp
mov
insb
call
cmpsl
or
sub
mov
mov
out
popl
jmp
jnp
mov
mov
movsb
fldt
sar
mov
fnsave
dec
dec
dec
dec
mov
dec
fcmovne
je
jecxz
andl
pop
and
jge
cltd
addr16
lods
leave
cmc
dec
lahf
sbb
sub
loopne
mov
add
jns
ret
or
cmp
mov
jo
mov
in
rolb
mov
add
mov
movsb
loop
mov
adc
bound
mov
icebp
push
inc
add
notl
mov
mov
fistl
popa
xor
mov
pop
mov
aad
negb
pop
rolb
mov
mov
stos
push
outsb
leave
and
inc
push
hlt
push
test
outsl
addb
mov
es
cmc
push
dec
cli
insl
iret
xchg
rolb
mov
jae
popa
sbb
loope
add
ds
mov
add
add
dec
ds
insl
inc
insl
push
push
add
mov
xchg
neg
xor
mov
pop
or
add
loop
mov
add
xchg
and
pop
lret
iret
or
and
mov
mov
inc
add
mov
fucomip
jae
pop
rolb
mov
decl
add
mov
imul
xor
jp
loope
mov
add
sub
rolb
mov
add
cmpsb
or
mov
jno
cmp
add
dec
xchg
sahf
es
xor
mov
pop
mov
stos
fsubrl
dec
negl
mov
sub
sub
cmp
push
mov
push
add
int
imul
mov
hlt
push
repz
mov
aaa
jle
xchg
mov
and
pop
mov
mov
and
in
xchg
arpl
jae
and
rorl
cmp
loop
mov
scas
rolb
mov
fs
lds
sbb
flds
int3
cmc
ja
fcomps
mov
popf
sarl
mov
jne
dec
xor
mov
jnp
dec
push
out
cmp
dec
or
cs
add
enter
mov
mov
and
mov
sbb
xchg
push
lods
sub
adc
add
add
hlt
push
inc
dec
icebp
lret
notl
add
add
mov
pusha
add
add
mov
adc
mov
pop
popf
icebp
jmp
enter
xchg
lds
insl
xor
dec
push
and
add
jp
mov
or
popa
divb
add
sub
mov
mov
test
add
fbld
cli
test
add
and
sbb
iret
and
ret
test
outsl
inc
add
xor
mov
fcmovne
fimull
xor
mov
insl
sub
loopne
mov
xor
aad
fidivrl
pushf
mov
inc
xchg
mulb
sbb
es
aaa
pop
lods
clc
and
mov
sub
add
ret
push
add
cmp
xchg
sbbl
mov
aad
add
mov
or
in
fs
clc
in
inc
add
mov
mov
pop
bound
mov
and
mov
sub
int
ret
mov
mov
mov
ret
insb
jecxz
sbb
out
push
jae
rcrl
ds
mov
jge
add
mov
add
xchg
add
test
lret
add
xor
mov
jecxz
jmp
out
jnp
jo
mov
lods
cmp
push
mov
add
mov
xor
mov
mov
adc
mov
jo
mov
mov
mov
jne
xorl
dec
xchg
pop
xor
inc
fwait
pop
jge
int
mov
push
frstor
add
add
add
arpl
inc
fwait
mov
mov
pop
inc
add
pop
cmpsb
popa
sub
insl
pop
js
adc
mov
repnz
cld
jbe
xchg
dec
xlat
push
imul
imul
add
pop
popa
fildl
mov
add
or
inc
mov
scas
pop
xor
xlat
sbb
mov
pop
mov
mov
add
mov
lock
push
xchg
add
adc
mov
mov
pop
repnz
aad
dec
adc
mov
add
mov
mov
cld
aaa
fwait
mov
mov
inc
mov
mov
lcall
mov
xor
mov
jbe
add
mov
push
mov
lret
mov
dec
sub
mov
lods
mov
and
add
mov
in
push
std
int3
xlat
xchg
imul
fwait
push
push
imul
adc
mov
ljmp
add
jmp
xchg
jmp
add
add
mov
and
mov
in
popf
or
fistpl
cmc
pop
or
pushf
loopne
mov
aaa
mov
mov
daa
push
xor
add
hlt
jno
add
rolb
mov
cmc
pop
or
mov
mov
pop
fldlg2
adc
insb
jge
aam
ret
lds
je
lret
pop
mov
mov
sub
ljmp
popf
cmc
ds
push
ljmp
hlt
pushf
mov
xlat
mov
gs
mov
add
mov
imulb
mov
lcall
mov
add
jne
add
loope
divl
jl
test
movsl
pop
lahf
push
test
scas
ljmp
rcll
les
call
mov
add
add
adc
mov
sti
cmpsl
sbb
add
xor
in
add
into
push
jnp
push
dec
ret
ret
inc
and
push
jecxz
and
adc
mov
std
mov
pop
xor
das
push
cmp
adc
inc
adc
add
imul
or
cld
cmp
fstpl
lods
sub
outsb
fsub
inc
inc
add
cmpsb
aad
pop
mov
addr16
and
pop
push
push
dec
addb
xchg
pushf
adc
mov
inc
sbb
test
jo
mov
mov
mov
lret
pop
ret
inc
stos
add
stc
fcmovne
jns
inc
dec
and
mov
mov
pop
jle
jl
cmc
imul
in
sbb
fisttps
aaa
out
jne,pt
rolb
mov
push
jp
xor
mov
popa
push
rolb
sbb
fs
sub
push
push
cli
icebp
cmp
add
addb
fisubrl
xchg
fsubs
sub
addb
sbb
mov
mov
mov
jno
movb
pop
test
mov
push
cmpsl
test
mov
mov
mov
jns
inc
push
add
jle
inc
notb
inc
add
mov
jmp
inc
push
push
std
rolb
push
jno
adc
mov
and
cmpsb
xchg
addr16
xchg
icebp
add
mov
pushf
adcl
mov
mov
xor
add
pop
inc
add
pusha
add
out
push
out
jns
cwtl
or
pop
lahf
push
mov
add
ljmp
sbb
bound
mov
push
jle
push
enter
xchg
dec
mov
push
jnp
lahf
stos
popf
pusha
add
stos
sbb
cmp
sub
add
mov
add
sbb
mov
mov
mov
xor
mov
push
add
addb
ret
pusha
add
adc
or
lret
cmp
aas
or
decb
mov
and
sbb
push
int
xchg
dec
js
lock
inc
adc
pop
ljmp
add
cwtl
and
outsb
std
das
dec
popf
mov
cmp
xor
add
mov
clc
repnz
nop
cld
jae
add
cmpsl
add
or
clc
repnz
nop
cld
jae
cmp
add
add
cmp
repnz
nop
cld
jae
cmc
testb
add
repz
xchg
clc
repnz
nop
cld
jae
inc
push
ror
mov
nop
nop
cld
jae
dec
cmp
inc
and
repnz
nop
cld
jae
add
fwait
add
cmp
add
add
repnz
nop
cld
jae
add
divb
mov
jmp
clc
repnz
nop
cld
jae
addl
int
insl
roll
xor
adc
repnz
nop
cld
jae
xchg
add
clc
repnz
nop
cld
jae
add
addl
cmp
inc
fsubrs
add
add
add
jmp
or
in
nop
leave
nop
jmp
xchg
inc
add
lock
enter
push
mov
xchg
ret
add
pushf
sbb
cmp
lods
push
clc
repnz
nop
cld
jae
add
stc
pop
add
pop
cli
lds
add
clc
repnz
nop
cld
jae
add
dec
movswl
push
mov
nop
leave
nop
jmp
add
add
add
nop
nop
cld
jae
fiadds
cmc
lock
fiadds
add
add
data16
repnz
nop
cld
jae
faddl
add
repnz
clc
repnz
nop
cld
jae
stc
cmp
lret
mov
push
mov
nop
leave
nop
jmp
cmpsl
mov
add
add
clc
repnz
nop
cld
jae
add
cmpsl
add
xchg
lods
mov
clc
repnz
nop
cld
jae
lock
out
cmc
out
mov
clc
repnz
nop
cld
jae
add
add
add
and
repnz
nop
cld
jae
cmp
cmp
loope
mov
popa
add
repnz
nop
cld
jae
pop
sbb
mov
mov
push
mov
nop
leave
nop
jmp
add
fiadds
push
add
add
clc
repnz
nop
cld
jae
cmp
add
cli
push
mov
add
out
inc
mov
add
add
mov
std
cltd
add
lret
mov
push
mov
xchg
ret
sbb
add
add
pop
cmp
push
push
mov
xchg
ret
shrl
insl
add
lds
dec
push
push
mov
xchg
ret
fwait
add
movb
add
les
push
mov
xchg
ret
lock
testb
sbbl
sbb
repnz
nop
cld
jae
add
mov
add
add
repnz
nop
cld
jae
sbb
add
push
mov
nop
leave
nop
jmp
int
add
add
addl
push
mov
xchg
ret
insl
add
add
xor
cli
call
mov
xchg
ret
roll
adc
jne
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
adc
rcr
xchg
sub
add
repnz
nop
cld
jae
xor
cmp
addb
nop
cld
jae
cli
add
push
outsb
add
clc
repnz
nop
cld
jae
cmp
cmp
insl
roll
test
mov
nop
leave
nop
jmp
lock
add
add
nop
cld
jae
testb
mov
dec
add
push
mov
nop
leave
nop
jmp
addl
add
inc
iret
bound
mov
clc
repnz
nop
cld
jae
add
add
sbb
mov
clc
repnz
nop
cld
jae
add
or
push
xor
mov
clc
repnz
nop
cld
jae
cmp
cmp
out
add
cmp
add
clc
repnz
nop
cld
jae
cmp
fiadds
in
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
cmc
add
insl
add
mov
push
mov
xchg
ret
add
lock
insb
add
loope
call
clc
repnz
nop
cld
jae
inc
jo
fmulp
mov
push
mov
nop
leave
nop
jmp
pushf
add
add
insb
mov
clc
and
push
mov
xchg
ret
add
add
lock
inc
insl
jne
clc
repnz
nop
cld
jae
cmp
out
add
sbb
repnz
nop
cld
jae
int
pop
add
add
rep
clc
repnz
nop
cld
jae
mov
addl
pop
mov
clc
repnz
nop
cld
jae
cmp
loope
sbb
or
sar
add
adc
add
or
cmp
cmp
inc
addl
lcall
repnz
nop
cld
jae
add
out
xor
scas
mov
push
mov
xchg
ret
roll
stc
add
lcall
cld
jae
mov
add
rol
add
push
clc
repnz
nop
cld
jae
cli
add
add
rcr
xor
clc
repnz
nop
cld
jae
fsubp
xor
out
mov
push
mov
xchg
ret
add
add
mov
repnz
nop
cld
jae
pop
testb
pop
mov
and
clc
repnz
nop
cld
jae
pop
add
dec
data16
mov
sub
aam
inc
add
data16
fdivl
mov
clc
repnz
nop
cld
jae
add
add
movb
add
push
mov
nop
leave
nop
jmp
cli
out
rcll
add
add
in
nop
leave
nop
jmp
xor
sbb
fisttpl
test
adc
add
repnz
nop
cld
jae
out
mov
add
clc
repnz
nop
cld
jae
add
adc
mov
push
push
mov
nop
leave
nop
jmp
pushf
mov
popf
add
mov
xchg
ret
add
pushf
add
insb
add
xchg
pusha
push
mov
nop
leave
nop
jmp
lock
into
add
clc
repnz
nop
cld
jae
addl
pushf
sarl
movsl
adc
jb
clc
repnz
nop
cld
jae
cmp
add
mov
nop
nop
cld
jae
insb
addl
stc
push
popa
jo
cs
repnz
nop
cld
jae
add
add
xchg
into
pushl
clc
repnz
nop
cld
jae
xor
fiadds
add
sbb
repnz
nop
cld
jae
dec
loope
add
add
dec
dec
pop
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
dec
loope
add
jae
xchg
push
mov
nop
leave
nop
jmp
sbb
add
add
pop
jmp
pop
jo
add
add
add
add
pusha
push
mov
xchg
ret
data16
data16
add
bound
mov
inc
push
mov
xchg
ret
fdivrl
add
add
popa
pop
sbb
repnz
nop
cld
jae
add
xchg
fadds
dec
push
push
mov
xchg
ret
sbb
fiadds
insl
adc
add
nop
cld
jae
idivb
add
movb
ss
jl
push
mov
nop
leave
nop
jmp
add
add
stos
add
clc
repnz
nop
cld
jae
into
pushf
add
and
add
clc
repnz
nop
cld
jae
add
fsubrs
add
mov
clc
repnz
nop
cld
jae
inc
add
out
add
pop
add
adc
sbb
cmp
add
add
in
nop
leave
nop
jmp
add
insb
lods
add
clc
repnz
nop
cld
jae
add
xor
add
mov
je
jne
push
mov
nop
leave
nop
jmp
add
add
pop
clc
repnz
nop
cld
jae
add
cmp
fmull
add
add
mov
test
mov
nop
leave
nop
jmp
add
pop
mov
clc
repnz
nop
cld
jae
dec
pop
push
add
loope
add
adc
test
nop
nop
cld
jae
testb
adc
add
pop
and
clc
repnz
nop
cld
jae
mov
add
add
pusha
add
add
repnz
nop
cld
jae
add
add
add
shl
into
push
mov
push
mov
add
pop
push
cld
scas
mov
js
push
mov
xchg
ret
int
cli
add
add
add
add
in
nop
leave
nop
jmp
push
add
sub
sahf
faddl
xchg
ret
dec
sbb
insl
add
repz
nop
nop
cld
jae
add
or
in
nop
leave
nop
jmp
sbb
add
jecxz
add
add
add
add
dec
or
nop
leave
nop
jmp
adc
mov
sbb
sbb
test
inc
add
stc
cli
inc
testb
or
mov
clc
repnz
nop
cld
jae
add
lock
add
jg
aas
adc
in
nop
leave
nop
jmp
int
movb
dec
push
mov
add
pop
cld
mov
hlt
fildl
outsb
inc
mov
mov
nop
leave
nop
jmp
add
mov
jo
add
push
mov
xchg
ret
inc
lock
cmp
pop
decl
push
mov
xchg
ret
add
insl
fists
repnz
nop
cld
jae
dec
add
add
xchg
testl
nop
cld
jae
fwait
adc
mov
mov
sub
add
jo
inc
add
out
add
or
push
jne
push
push
mov
xchg
ret
add
add
pushf
adc
cmp
lahf
add
clc
repnz
nop
cld
jae
adc
cmp
and
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
add
int
scas
inc
clc
repnz
nop
cld
jae
xor
add
add
xchg
mov
add
clc
repnz
nop
cld
jae
lock
jl
movsb
clc
repnz
nop
cld
jae
roll
adc
adc
add
add
clc
repnz
nop
cld
jae
pop
cmp
mov
add
push
mov
xchg
ret
add
or
add
clc
repnz
nop
cld
jae
add
add
in
popa
clc
repnz
nop
cld
jae
add
mov
jo
mov
xor
mov
clc
repnz
nop
cld
jae
add
add
add
mov
stos
add
clc
repnz
nop
cld
jae
add
add
add
sbb
dec
push
mov
nop
leave
nop
jmp
add
add
xlat
dec
mov
push
mov
xchg
ret
dec
testb
add
out
sub
nop
nop
cld
jae
add
add
ss
call
clc
repnz
nop
cld
jae
xor
add
in
je
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
add
insl
int
mov
add
mov
push
mov
nop
leave
nop
jmp
sbb
or
add
mov
xchg
ret
out
mov
cmp
sbb
jns
inc
clc
repnz
nop
cld
jae
xor
sbb
add
xchg
clc
repnz
nop
cld
jae
add
inc
add
cmp
hlt
sub
mov
nop
leave
nop
jmp
add
mul
add
adc
mov
add
clc
repnz
nop
cld
jae
add
cmp
dec
adc
push
popl
nop
leave
nop
jmp
add
cmp
cmp
ljmp
nop
leave
nop
jmp
cmp
fsubrp
hlt
or
add
in
nop
leave
nop
jmp
cmp
dec
add
nop
nop
cld
jae
out
mov
lock
mov
mov
xchg
ret
add
add
add
add
or
add
repnz
nop
cld
jae
add
cmp
push
mov
in
mov
hlt
mov
add
iret
add
lahf
stos
mov
clc
repnz
nop
cld
jae
add
cmp
inc
dec
cmp
mov
clc
repnz
nop
cld
jae
add
jmp
movsb
clc
repnz
nop
cld
jae
stc
add
add
inc
xor
mov
clc
repnz
nop
cld
jae
out
or
add
data16
add
push
mov
xchg
ret
add
cmp
add
add
mov
clc
repnz
nop
cld
jae
add
pop
add
andl
mov
jmp
add
add
stc
mov
add
movzwl
clc
repnz
nop
cld
jae
div
lock
add
lods
imul
clc
repnz
nop
cld
jae
add
add
into
cmp
xor
clc
repnz
nop
cld
jae
xor
add
testb
mov
add
add
repnz
nop
cld
jae
into
add
call
in
nop
leave
nop
jmp
movb
pop
stos
push
mov
xchg
ret
push
add
cmpsl
lock
mov
test
hlt
clc
repnz
nop
cld
jae
xor
xor
cs
clc
repnz
nop
cld
jae
add
add
jmp
les
nop
nop
cld
jae
add
movb
adc
mov
clc
repnz
nop
cld
jae
add
xor
roll
sub
scas
enter
nop
cld
jae
cmp
xor
or
jmp
clc
repnz
nop
cld
jae
add
loope
insb
lea
clc
repnz
nop
cld
jae
lock
add
dec
popa
clc
repnz
nop
cld
jae
add
sbb
xchg
data16
mov
mov
clc
repnz
nop
cld
jae
mov
add
adc
nop
nop
cld
jae
add
fwait
add
xor
mov
mov
xor
push
mov
nop
leave
nop
jmp
popf
xor
cmp
fcom
xchg
in
sub
push
mov
xchg
ret
iret
cmp
sbb
pusha
clc
repnz
nop
cld
jae
adc
add
fadds
add
enter
pushl
sbb
add
add
cmp
popa
add
mov
xchg
ret
stc
out
rcrl
outsl
mov
nop
nop
cld
jae
add
mov
add
mov
and
pop
add
shll
add
loop
mov
xchg
ret
lock
testb
add
jle
sbb
repnz
nop
cld
jae
push
inc
loope
mov
push
mov
nop
leave
nop
jmp
xchg
cmpsl
mov
fsubrs
xlat
inc
add
shl
sbb
add
xorl
dec
push
mov
nop
leave
nop
jmp
test
out
mov
sbb
cmpsl
es
sub
clc
repnz
nop
cld
jae
faddl
jo
pushf
inc
data16
in
nop
leave
nop
jmp
add
fimuls
cmp
and
push
mov
xchg
ret
adc
jo
cmp
inc
outsl
lea
clc
repnz
nop
cld
jae
add
inc
or
xchg
fadds
xchg
ret
jmp
fiadds
add
add
repnz
nop
cld
jae
loope
add
lock
pop
mov
clc
repnz
nop
cld
jae
into
pop
add
sbb
clc
repnz
nop
cld
jae
cli
mov
add
clc
repnz
nop
cld
jae
xor
add
add
push
mov
xor
push
inc
testb
mov
mov
into
mov
add
add
repnz
nop
cld
jae
sbb
clc
dec
inc
clc
repnz
nop
cld
jae
into
fimuls
mov
sub
inc
add
add
add
add
fwait
pop
add
push
mov
nop
leave
nop
jmp
add
adc
dec
push
clc
repnz
nop
cld
jae
dec
add
add
add
push
mov
xchg
ret
add
add
pop
sarl
push
mov
nop
leave
nop
jmp
insl
mov
push
mov
mov
movb
repnz
xchg
ret
lock
cli
pop
testb
jne
push
mov
nop
leave
nop
jmp
pop
inc
or
div
push
clc
repnz
nop
cld
jae
add
add
cmp
or
adc
mov
les
push
mov
nop
leave
nop
jmp
add
mov
xchg
add
clc
repnz
nop
cld
jae
data16
mov
popf
clc
repnz
nop
cld
jae
or
sub
add
repnz
nop
cld
jae
adc
fs
cmp
mov
push
clc
repnz
nop
cld
jae
iret
add
inc
adc
xchg
test
and
push
mov
xchg
ret
add
cmp
dec
cmp
mov
nop
leave
nop
jmp
popf
iret
xchg
ljmp
add
add
mov
into
adc
add
mov
xchg
ret
mov
add
insl
roll
mov
cld
add
in
nop
leave
nop
jmp
add
or
dec
add
clc
repnz
nop
cld
jae
add
add
cli
fwait
xlat
and
pop
push
clc
repnz
nop
cld
jae
sbb
add
add
adc
repnz
nop
cld
jae
cmp
adc
and
ja
inc
add
iret
pop
add
add
jmp
popa
add
mov
xchg
ret
cmp
jmp
clc
repnz
nop
cld
jae
add
adc
add
cmp
mov
xchg
ret
add
add
add
pop
fdivrl
mov
mov
nop
leave
nop
jmp
add
out
insb
imulb
xor
add
push
mov
xchg
ret
add
stc
add
add
xlat
call
mov
xchg
ret
adc
out
shl
xor
nop
nop
cld
jae
add
add
inc
add
add
push
clc
repnz
nop
cld
jae
adc
add
xor
shll
add
repnz
nop
cld
jae
add
add
push
add
xor
clc
repnz
nop
cld
jae
add
jo
pushf
add
jmp
out
add
add
or
add
sub
xor
add
clc
repnz
nop
cld
jae
pop
adc
test
push
mov
nop
leave
nop
jmp
lock
loope
add
clc
repnz
nop
cld
jae
dec
add
lock
push
push
mov
xchg
ret
or
add
or
or
add
nop
nop
cld
jae
add
add
loopne
mov
mov
clc
repnz
nop
cld
jae
testb
cltd
push
push
mov
xchg
ret
fdivr
add
inc
add
clc
repnz
nop
cld
jae
popf
cmc
add
add
mov
add
cmp
push
mov
nop
leave
nop
jmp
add
add
add
rolb
mov
clc
repnz
nop
cld
jae
add
lock
add
add
js
jmp
add
dec
add
add
add
add
fwait
xor
jnp
jmp
nop
cld
jae
cmp
out
test
repnz
nop
cld
jae
add
add
insl
dec
mov
rolb
mov
repnz
nop
cld
jae
data16
add
mov
jo
clc
repnz
nop
cld
jae
dec
roll
add
clc
repnz
nop
cld
jae
xor
lock
mov
mov
add
add
pushf
add
add
add
add
add
cmc
pop
push
mov
rclb
mov
add
add
add
add
adc
ret
pop
add
clc
repnz
nop
cld
jae
lock
lock
sti
pop
clc
repnz
nop
cld
jae
add
cmp
loope
xor
stos
sub
clc
repnz
nop
cld
jae
data16
adc
clc
repnz
nop
cld
jae
add
or
cmp
repnz
nop
cld
jae
out
mov
add
push
test
cs
push
mov
nop
leave
nop
jmp
add
mov
fcompl
or
push
mov
nop
leave
nop
jmp
faddl
mov
clc
repnz
nop
cld
jae
adc
add
testb
cwtl
jne
clc
repnz
nop
cld
jae
cmp
insb
mov
clc
repnz
nop
cld
jae
add
add
dec
out
mov
nop
nop
cld
jae
xchg
add
add
push
mov
xchg
ret
int
insl
lock
add
sub
clc
repnz
nop
cld
jae
add
add
repz
repnz
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
pop
testb
filds
sti
push
mov
nop
leave
nop
jmp
adc
pushf
add
mov
xor
mov
mov
clc
repnz
nop
cld
jae
add
fwait
add
dec
mov
clc
repnz
nop
cld
jae
add
xchg
mov
nop
cld
jae
add
pop
add
sbb
mov
clc
repnz
nop
cld
jae
add
add
inc
into
adc
mov
xchg
ret
sbb
cli
pushf
mov
inc
sub
or
clc
repnz
nop
cld
jae
add
mov
add
or
repnz
nop
cld
jae
add
add
jae
push
mov
xchg
ret
int
or
add
mov
push
clc
repnz
nop
cld
jae
add
addl
xchg
xchg
add
incl
push
mov
nop
leave
nop
jmp
add
add
repnz
nop
cld
jae
add
add
lock
push
clc
repnz
nop
cld
jae
inc
cmp
add
jl
xor
and
inc
add
add
add
and
repnz
nop
cld
jae
add
add
fdivrl
push
mov
xchg
ret
cmp
cmp
mov
clc
repnz
nop
cld
jae
add
mov
mov
dec
push
mov
nop
leave
nop
jmp
pop
orl
int
fwait
add
pop
pop
mov
push
mov
xchg
ret
inc
add
adc
int
in
push
clc
repnz
nop
cld
jae
add
cmp
add
add
sbb
nop
nop
cld
jae
cmp
cmpl
clc
repnz
nop
cld
jae
adc
cmp
adc
cmpl
push
mov
nop
leave
nop
jmp
dec
xchg
inc
push
mov
xchg
ret
add
add
fwait
jo
mov
push
mov
pcmpgtd
add
add
add
add
mov
in
incl
add
add
add
cmc
add
add
xchg
clc
repnz
nop
cld
jae
popf
add
jmp
in
pop
clc
repnz
nop
cld
jae
dec
pop
add
add
adc
mov
mov
cltd
jmp
add
add
or
cmp
inc
inc
mulb
call
in
nop
leave
nop
jmp
inc
add
and
clc
repnz
nop
cld
jae
out
inc
pop
adc
inc
push
mov
xchg
ret
add
or
iret
inc
add
push
fldl
nop
nop
cld
jae
out
out
testb
cmp
add
add
repnz
nop
cld
jae
dec
add
fwait
pop
push
mov
nop
leave
nop
jmp
add
cmp
add
adc
pop
rep
clc
repnz
nop
cld
jae
add
adc
xor
into
movzwl
push
mov
nop
leave
nop
jmp
add
mov
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
cmc
movb
add
add
not
clc
repnz
nop
cld
jae
mov
cmp
fimull
mov
nop
leave
nop
jmp
adc
add
add
or
fiaddl
xchg
ret
or
add
add
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
add
cmp
nop
nop
cld
jae
mov
add
mov
push
push
mov
nop
leave
nop
jmp
adc
push
push
mov
xchg
ret
add
add
lock
in
mov
clc
repnz
nop
cld
jae
dec
add
mov
call
clc
repnz
nop
cld
jae
fidivrs
add
lret
push
mov
nop
leave
nop
jmp
add
cmp
add
add
push
js
repnz
nop
cld
jae
xchg
out
adc
nop
nop
cld
jae
add
fidivrs
mov
lods
cmp
push
mov
nop
leave
nop
jmp
add
lock
sti
clc
repnz
nop
cld
jae
add
add
add
cmp
add
clc
repnz
nop
cld
jae
popf
cmp
out
adc
loopne
mov
nop
leave
nop
jmp
or
add
daa
aas
call
clc
repnz
nop
cld
jae
cmc
add
add
nop
nop
cld
jae
add
imulb
roll
add
clc
repnz
nop
cld
jae
xchg
cmpl
mov
nop
leave
nop
jmp
mov
pop
iret
jg
jmp
repnz
nop
cld
jae
into
xor
sbb
adc
clc
repnz
nop
cld
jae
sbb
push
clc
repnz
nop
cld
jae
fwait
cmpsl
add
cmp
fmull
push
outsb
and
mov
xchg
ret
or
cmp
add
repnz
nop
cld
jae
fcomps
fiadds
insl
mov
repnz
nop
cld
jae
xchg
out
out
pop
push
mov
xchg
ret
cmc
cmp
dec
add
push
mov
xchg
ret
cmp
adc
add
mov
clc
clc
repnz
nop
cld
jae
pop
sbb
insb
add
xor
push
clc
repnz
nop
cld
jae
lock
loope
add
popf
add
pop
push
mov
nop
leave
nop
jmp
cmp
pop
notb
add
mov
adc
repnz
nop
cld
jae
push
inc
jle
mov
adc
repnz
nop
cld
jae
lock
jp
mov
add
add
out
dec
add
add
add
add
sar
nop
nop
cld
jae
add
dec
std
sub
clc
repnz
nop
cld
jae
sbb
mov
push
mov
xchg
ret
fimuls
lock
fiadds
mov
nop
leave
nop
jmp
rcr
cmp
add
popf
aas
mov
clc
repnz
nop
cld
jae
add
add
mov
shl
mov
inc
in
push
mov
xchg
ret
add
push
jnp
push
mov
xchg
ret
add
inc
add
add
add
dec
xor
push
mov
xchg
ret
add
faddl
pop
push
mov
xchg
ret
add
adc
loopne
mov
fs
push
clc
repnz
nop
cld
jae
pushw
mov
mov
nop
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
push
add
push
mov
xchg
ret
int
cli
add
stc
test
repnz
nop
cld
jae
add
lock
add
xor
clc
repnz
nop
cld
jae
int
adc
add
sbb
in
nop
leave
nop
jmp
fmull
dec
add
div
push
mov
nop
leave
nop
jmp
add
add
inc
push
add
repnz
nop
cld
jae
sbb
fsubp
add
into
mov
clc
repnz
nop
cld
jae
add
add
sbb
lsl
clc
repnz
nop
cld
jae
add
fwait
add
out
add
enter
nop
cld
jae
add
add
imul
clc
repnz
nop
cld
jae
sbb
iret
rorl
rclb
out
inc
add
add
add
stc
mov
aas
add
clc
repnz
nop
cld
jae
add
add
cmp
jmp
arpl
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
faddl
popf
cmp
mov
nop
leave
nop
jmp
xchg
cmp
sbb
rolb
sbb
repnz
nop
cld
jae
add
data16
cmp
xor
fucomp
std
clc
clc
repnz
nop
cld
jae
add
add
pop
decl
add
add
insl
insl
mov
add
jp
push
add
clc
repnz
nop
cld
jae
faddl
add
mov
nop
leave
nop
jmp
mov
adc
add
lods
push
mov
xchg
ret
negb
adc
rcr
push
push
mov
xchg
ret
adc
cmp
add
js
push
mov
nop
leave
nop
jmp
adc
testb
add
clc
repnz
nop
cld
jae
jo
iret
add
dec
add
mov
nop
nop
cld
jae
add
pop
or
mov
nop
leave
nop
jmp
or
roll
xor
mov
add
in
nop
leave
nop
jmp
push
xchg
mov
and
js
repnz
nop
cld
jae
add
xchg
adc
and
mov
add
and
clc
repnz
nop
cld
jae
add
add
iret
dec
push
mov
mov
rclb
dec
add
add
and
clc
repnz
nop
cld
jae
adc
or
call
and
adc
add
out
call
jmp
add
cmp
add
out
add
clc
repnz
nop
cld
jae
add
add
add
movb
nop
nop
cld
jae
add
divb
add
sbb
nop
cld
jae
pop
cmpsl
sbb
insl
div
or
nop
nop
cld
jae
idivb
lock
add
or
mov
xchg
ret
mov
xor
pop
add
adc
nop
nop
cld
jae
add
pushf
or
popa
add
mov
xchg
ret
dec
add
add
add
mov
repnz
nop
cld
jae
add
add
lock
test
add
clc
repnz
nop
cld
jae
stc
add
or
add
and
clc
repnz
nop
cld
jae
adc
mov
mov
in
sbb
push
add
ljmp
mov
loop
add
xor
mov
add
icebp
xor
rol
mov
in
nop
leave
nop
jmp
add
sbb
add
jl
lret
clc
repnz
nop
cld
jae
add
cmpl
popl
clc
repnz
nop
cld
jae
add
std
push
clc
repnz
nop
cld
jae
cli
add
dec
cmp
cmp
mov
clc
repnz
nop
cld
jae
add
cmp
or
repnz
nop
cld
jae
fiadds
negb
push
push
mov
xchg
ret
push
idiv
add
test
nop
cld
jae
mov
fwait
sbb
add
loope
push
clc
repnz
nop
cld
jae
iret
cmp
cmp
aaa
mov
mov
nop
leave
nop
jmp
add
sbb
add
sahf
xchg
jmp
add
add
add
add
inc
lock
sub
repnz
nop
cld
jae
add
add
popf
dec
mov
faddl
xchg
ret
add
or
xor
mov
push
mov
nop
leave
nop
jmp
jo
add
add
push
mov
push
mov
nop
leave
nop
jmp
insb
pushf
jo
add
stc
push
clc
repnz
nop
cld
jae
fwait
out
popf
add
cmp
test
cld
jae
add
add
push
mov
push
mov
xchg
ret
cmp
roll
cli
add
imull
mov
xchg
ret
add
cmp
int
out
sbb
aas
mov
clc
repnz
nop
cld
jae
add
iret
stc
add
add
loopne
add
add
push
xor
mov
clc
repnz
nop
cld
jae
lock
sbb
repnz
nop
cld
jae
cli
jo
add
sub
clc
repnz
nop
cld
jae
add
add
mull
mov
ja
push
push
mov
xchg
ret
add
add
insb
add
add
daa
push
add
pop
mov
push
mov
xchg
ret
add
cmp
lods
call
clc
repnz
nop
cld
jae
cmp
mov
and
and
push
mov
nop
leave
nop
jmp
add
add
add
data16
jo
push
mov
nop
leave
nop
jmp
add
cmp
mov
xchg
ret
add
adc
xchg
sar
mov
xchg
ret
add
add
mov
adc
repnz
nop
cld
jae
fdivp
add
add
push
add
popa
fs
repnz
nop
cld
jae
or
add
add
mov
xor
pushl
add
pop
add
add
lock
roll
or
repnz
nop
cld
jae
add
add
add
add
repz
mov
push
mov
nop
leave
nop
jmp
lock
add
adc
clc
repnz
nop
cld
jae
lock
sbb
jmp
arpl
add
repnz
nop
cld
jae
add
out
cltd
push
push
mov
xchg
ret
add
add
add
test
ljmp
cld
jae
cli
iret
inc
or
nop
cld
jae
sbb
add
stc
insb
add
add
add
clc
repnz
nop
cld
jae
shr
sbb
add
push
push
mov
nop
leave
nop
jmp
loope
sbb
inc
add
add
out
add
add
in
nop
leave
nop
jmp
add
jb
mov
add
mov
xchg
ret
add
add
out
inc
iret
add
xor
repnz
clc
repnz
nop
cld
jae
sbb
add
clc
repnz
nop
cld
jae
out
cmp
sbb
add
dec
clc
repnz
nop
cld
jae
xor
movb
lock
or
repnz
nop
cld
jae
cmpsl
add
add
add
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
cmp
pop
add
xadd
add
repnz
nop
cld
jae
cmc
cmp
add
sbb
add
clc
repnz
nop
cld
jae
add
sbb
repnz
nop
cld
jae
add
cmp
add
cmp
sub
add
repnz
nop
cld
jae
movb
cmp
clc
repnz
nop
cld
jae
sbb
out
cmp
xchg
test
dec
push
clc
repnz
nop
cld
jae
add
add
jmp
clc
repnz
nop
cld
jae
cmc
fiadds
shl
div
cmp
push
mov
xchg
ret
or
add
ret
jbe
addb
add
and
clc
repnz
nop
cld
jae
cmp
add
add
mov
cmp
push
mov
nop
leave
nop
jmp
cmp
mov
mov
clc
repnz
nop
cld
jae
add
faddl
neg
cmp
test
mov
xchg
ret
insb
dec
xor
mov
clc
repnz
nop
cld
jae
xchg
cmc
mov
xor
push
mov
xchg
ret
add
add
fmuls
test
clc
repnz
nop
cld
jae
add
insb
jecxz
clc
repnz
nop
cld
jae
cmc
loope
mov
add
add
add
repnz
nop
cld
jae
sbb
adc
mov
inc
add
insb
cmp
data16
insl
test
sti
imul
clc
repnz
nop
cld
jae
xchg
add
fidivrs
mov
in
nop
leave
nop
jmp
lock
shl
clc
repnz
nop
cld
jae
jmp
xorl
sub
repnz
nop
cld
jae
mov
add
add
add
clc
repnz
nop
cld
jae
cmpsl
add
add
add
arpl
add
int
pop
jae
repnz
nop
cld
jae
cmp
mov
xor
push
clc
repnz
nop
cld
jae
xor
int
push
lret
push
mov
cmc
aaa
sub
add
add
or
jp
push
push
mov
xchg
ret
add
adc
xorl
ja
push
push
clc
repnz
nop
cld
jae
add
add
dec
data16
js
add
clc
repnz
nop
cld
jae
insb
add
insl
add
pop
mov
clc
repnz
nop
cld
jae
pop
jo
cmpsl
add
stc
out
xor
push
mov
nop
leave
nop
jmp
loope
add
or
out
push
clc
repnz
nop
cld
jae
add
or
add
out
je
pop
outsb
je
clc
repnz
nop
cld
jae
mov
lcall
add
inc
add
roll
dec
lcall
nop
nop
cld
jae
add
inc
lea
jb
clc
repnz
nop
cld
jae
inc
lock
mov
push
mov
xchg
ret
testb
mov
mov
ja
add
clc
repnz
nop
cld
jae
pop
cli
cmc
dec
call
clc
repnz
nop
cld
jae
out
add
movsb
loopne
mov
mov
xchg
ret
add
dec
int
testb
add
clc
repnz
nop
cld
jae
add
add
add
jne
push
mov
nop
leave
nop
jmp
out
add
out
clc
repnz
nop
cld
jae
adc
lea
clc
repnz
nop
cld
jae
roll
adc
pop
mov
mov
xchg
ret
add
add
add
test
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
cmp
cmp
add
sub
repz
inc
add
sbb
shl
add
cmp
jno
adc
lock
add
mov
xchg
ret
lock
add
mov
clc
repnz
nop
cld
jae
dec
add
lock
and
mov
mov
clc
repnz
nop
cld
jae
add
cmp
into
out
pushl
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
add
roll
cmp
add
push
ret
inc
add
jo
cmp
cmp
bound
mov
clc
repnz
nop
cld
jae
pop
dec
add
add
nop
leave
nop
jmp
lock
add
out
cmp
out
call
clc
repnz
nop
cld
jae
fadds
lock
mov
clc
repnz
nop
cld
jae
mulb
cmpsl
push
stos
movzwl
clc
repnz
nop
cld
jae
lock
xor
lock
add
dec
adc
repnz
nop
cld
jae
cmp
cmp
inc
adc
repz
mov
nop
leave
nop
jmp
mov
add
pushf
dec
mov
push
mov
xchg
ret
add
sbb
add
adc
mov
clc
repnz
nop
cld
jae
cmpsl
add
add
add
ss
je
clc
repnz
nop
cld
jae
dec
shrl
push
loopne
mov
clc
repnz
nop
cld
jae
lock
xchg
inc
add
add
add
add
stos
push
push
mov
nop
leave
nop
jmp
xor
out
int
add
jl
sbb
repnz
nop
cld
jae
add
ror
clc
repnz
nop
cld
jae
adc
cmp
add
clc
repnz
nop
cld
jae
add
idivb
mov
push
mov
xchg
ret
sbb
into
out
cmpsl
imulb
add
clc
repnz
nop
cld
jae
inc
cmpsl
cmp
clc
repnz
nop
cld
jae
int
dec
stc
or
clc
clc
repnz
nop
cld
jae
add
iret
add
add
cmp
clc
repnz
nop
cld
jae
add
stc
add
mov
adc
repnz
nop
cld
jae
add
or
push
test
mov
clc
repnz
nop
cld
jae
dec
or
into
add
lret
cmpl
leave
nop
jmp
add
sbb
xor
mov
nop
cld
jae
add
add
add
insl
add
cmp
nop
cld
jae
popf
dec
add
data16
dec
push
mov
cmpsb
icebp
pop
mov
add
divb
add
out
add
push
mov
xchg
ret
add
add
test
push
mov
nop
leave
nop
jmp
pop
add
repnz
nop
cld
jae
fadds
stc
add
fdivrp
rcl
push
and
push
mov
nop
leave
nop
jmp
add
pop
dec
or
cmpw
push
mov
nop
leave
nop
jmp
pop
cmp
adc
movsb
loop
add
cmp
add
lock
repnz
andl
nop
cld
jae
add
add
stc
movzwl
clc
repnz
nop
cld
jae
push
mov
repnz
nop
cld
jae
mov
cmp
test
repnz
nop
cld
jae
sbb
insl
inc
scas
push
clc
repnz
nop
cld
jae
add
xor
xor
or
nop
nop
cld
jae
lock
lock
rcl
inc
add
add
dec
add
jmp
clc
repnz
nop
cld
jae
loope
add
dec
add
add
mov
std
call
in
nop
leave
nop
jmp
add
pop
adc
mov
stos
push
mov
nop
leave
nop
jmp
add
add
cmpsl
mov
clc
repnz
nop
cld
jae
out
int
fimuls
push
cmp
cmp
clc
repnz
nop
cld
jae
sbb
mov
push
mov
nop
leave
nop
jmp
add
add
push
inc
add
int
loope
add
mov
jmp
add
cmp
add
dec
add
outsb
faddl
xchg
ret
adc
cmp
cmp
cli
cmp
sub
push
mov
xchg
ret
pushf
cmp
add
add
push
push
mov
xchg
ret
pop
add
add
adc
mov
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
add
add
push
rolb
mov
mov
clc
repnz
nop
cld
jae
dec
dec
add
stc
popf
inc
inc
add
loop
mov
lock
add
add
add
or
popa
add
mov
xchg
ret
rcr
cmp
xchg
clc
repnz
nop
cld
jae
add
add
xor
mov
nop
leave
nop
jmp
inc
xor
popf
inc
ficoms
add
leave
push
jmp
scas
out
adc
mov
push
mov
nop
leave
nop
jmp
add
sbb
jbe
clc
repnz
nop
cld
jae
fiadds
cli
adc
mov
xor
push
mov
nop
leave
nop
jmp
xchg
into
add
mov
clc
repnz
nop
cld
jae
add
pop
dec
push
push
mov
xchg
ret
add
add
out
add
add
mov
and
push
mov
nop
leave
nop
jmp
xchg
add
or
or
xor
dec
add
add
add
add
add
nop
nop
cld
jae
adc
int
adc
repnz
nop
cld
jae
add
inc
push
pop
xorl
add
nop
nop
cld
jae
add
add
add
iret
push
dec
jmp
add
fiadds
stc
add
add
add
add
clc
repnz
nop
cld
jae
xor
cmp
or
mov
push
mov
xchg
ret
dec
fiadds
add
add
pop
mov
clc
repnz
nop
cld
jae
dec
add
mov
je
clc
repnz
nop
cld
jae
add
iret
mov
clc
repnz
nop
cld
jae
add
pop
xor
clc
repnz
nop
cld
jae
mov
insb
inc
insl
lods
push
mov
nop
leave
nop
jmp
mov
inc
inc
or
test
idiv
clc
repnz
nop
cld
jae
pop
add
adc
repnz
nop
cld
jae
add
cmp
add
xorl
add
clc
repnz
nop
cld
jae
add
adc
xchg
mov
xor
adc
repnz
nop
cld
jae
add
xchg
add
bound
mov
les
xchg
ret
fwait
add
xor
xchg
add
inc
add
sub
repnz
nop
cld
jae
cmp
loope
fwait
cli
inc
lods
test
push
mov
xchg
ret
add
jmp
add
es
clc
repnz
nop
cld
jae
sbb
add
add
mov
xchg
ret
jo
add
add
or
leave
nop
jmp
add
dec
add
les
add
push
mov
xchg
ret
sbb
popf
lock
ljmp
repnz
nop
cld
jae
shll
ss
add
push
mov
nop
leave
nop
jmp
fiadds
add
cmp
out
cmpl
push
mov
nop
leave
nop
jmp
lock
stc
mov
dec
pop
clc
repnz
nop
cld
jae
xor
add
add
pop
clc
repnz
nop
cld
jae
movb
add
add
add
iret
adc
or
xor
out
cmp
ret
ljmp
adc
mov
in
cmc
hlt
hlt
jp
xchg
sub
push
cmpsb
aad
jge
add
pop
negl
pop
out
insl
lock
in
mov
mov
addb
pop
push
jle
push
idivl
sub
jae
and
mov
inc
cwtl
dec
icebp
aaa
lds
inc
add
sub
into
mov
add
mov
notb
loop
mov
add
mov
stc
inc
fmul
test
jle
sti
push
lods
jo
mov
sub
push
push
mov
scas
btr
push
fldl
out
jo
mov
icebp
push
stc
fsubp
dec
cmp
add
in
mov
xor
sahf
sub
out
sub
add
add
add
pushf
push
mov
add
mov
inc
jb
mov
int
inc
push
pop
pop
stos
enter
add
mov
movsl
daa
je
fistl
push
add
add
test
out
jmp
lock
add
mov
cltd
pop
inc
cld
dec
je
adc
mov
stos
or
mov
bound
mov
inc
hlt
rolb
mov
xchg
rcrl
mov
push
popf
inc
add
push
xlat
jno
dec
ret
cld
pop
insl
sub
push
xor
dec
dec
mov
fnsave
sub
mov
in
repz
imul
push
add
imul
jns
je
add
mov
mov
icebp
mov
inc
dec
pop
ret
mov
xchg
push
outsl
xchg
pop
jae
jle
mov
dec
mov
insl
repnz
add
stc
adc
call
and
add
mov
add
lret
mov
mov
loop
mov
lahf
enter
fsubl
addl
int3
lods
aad
paddusw
adc
mov
mov
loopne
mov
out
movsb
das
inc
ja
bound
mov
ss
in
into
mov
mov
inc
push
imul
mov
sub
daa
out
or
sub
mov
lcall
test
out
xchg
xlat
mov
addb
sub
add
and
add
dec
sub
ds
loop
mov
mov
mov
inc
bound
mov
daa
adc
mov
mov
arpl
push
sti
dec
addr16
rolb
mov
lahf
inc
add
nop
add
add
rol
add
mov
mov
cs
mov
push
jp
or
mov
sbb
sub
rolb
and
gs
mov
push
jmp
fwait
push
and
jne
ljmp
jno
add
mov
xchg
add
inc
add
adc
inc
mov
fwait
pop
fidivrl
dec
int
pop
repnz
popa
std
push
xchg
insl
and
test
add
add
xchg
mov
decb
cmp
add
mov
cmc
cmc
sub
das
ds
dec
jae
data16
ret
push
sub
jmp
xor
mov
push
pop
cs
lock
or
loop
mov
mov
jae
and
filds
add
add
rolb
mov
out
inc
xchg
mov
test
mov
add
rolb
mov
mov
and
mov
outsl
rcrl
mov
and
mov
dec
les
pop
mov
jmp
cmpsb
pop
in
in
and
mov
pop
xor
mov
xlat
xchg
call
jl
mov
lds
xor
aad
lods
iret
sbb
lds
add
cmp
jg
sub
cmp
cmp
das
rolb
push
add
cmc
stos
dec
enter
fnsave
loop
mov
stos
iret
dec
in
mov
jl
add
push
std
xor
mov
or
mov
cs
add
lret
jae
mov
lahf
popf
mov
inc
add
mov
push
je
adc
push
pop
iret
nop
add
mov
mov
mov
shll
add
add
test
mov
mov
sbb
punpcklwd
jge
addb
jg
cmp
push
data16
bound
mov
js
sbbl
imul
test
mov
push
ljmp
mov
out
pop
enter
movsb
xchg
mov
lahf
aas
push
aad
xchg
addb
and
dec
adc
js
fwait
mov
mov
fwait
and
mov
mov
imul
push
leave
arpl
rolb
mov
add
mov
lds
icebp
lahf
push
cwtl
lds
mov
inc
adc
push
idiv
dec
sti
call
xchg
int3
lret
mov
xchg
inc
add
xchg
cltd
xchg
pop
jb
mov
pop
jno
inc
adc
mov
dec
pop
shll
add
in
jno
xor
jns
arpl
vcmppd
pop
or
sbb
add
mov
rolb
mov
mov
mov
add
test
lods
jge
add
mov
movsb
or
mov
mov
xchg
cmp
mov
ret
mov
mov
fsubl
sub
xchg
add
or
add
add
pop
push
add
lock
imul
fsubs
push
sub
daa
mov
fdivrl
ret
mov
add
mov
xchg
mov
add
mov
dec
dec
mov
out
rolb
mov
out
pop
xchg
add
in
and
mov
add
arpl
cmc
and
mov
clc
imul
stos
or
add
add
lods
fdivrs
repnz
dec
jle
rcrl
addb
add
add
sbb
add
or
sbb
cmp
mov
or
sbb
icebp
jo
mov
pop
sbb
add
mov
jno
mov
sbb
mov
arpl
cmp
rolb
mov
lods
mov
jne
scas
mov
mov
sbb
mov
das
sarl
les
loop
mov
mov
adc
inc
xor
jmp
jmp
xor
mov
and
je
fdivrs
jl
lods
inc
cmp
add
xchg
aas
mov
je
pop
mov
data16
in
bound
mov
mov
sub
arpl
pop
mov
cmpsl
xchg
adc
rolb
mov
dec
xchg
xlat
adc
mov
adcl
repnz
add
jecxz
mov
or
leave
jb
mov
loope
aaa
sub
enter
insb
mov
mov
mov
add
out
adc
lods
scas
push
sbb
add
pop
or
addb
lock
xchg
add
mov
repz
or
mov
add
loopne
mov
adc
imul
or
add
mov
pop
jl
add
adc
add
mov
pop
in
mov
loop
mov
mov
ficompl
add
jnp
cmpsl
pxor
mov
mov
aad
add
idivb
fdivl
mov
mull
add
cli
push
fcomi
add
cmpsb
cmp
bound
mov
xor
in
dec
push
movsb
addb
sbb
mov
sahf
and
adc
mov
ret
sub
sbbl
add
ja
or
mov
mov
mov
icebp
inc
repnz
inc
into
pop
jp
push
lds
add
or
pop
fs
add
xchg
insb
sbb
cltd
xchg
sub
xchg
lea
mov
add
stc
pusha
add
mov
mov
dec
or
in
psrld
mov
mov
pop
jp
pop
bound
mov
mov
add
fcomps
push
and
push
pop
faddl
pop
sub
mov
jns
aas
pop
roll
stc
dec
xchg
mov
xor
mov
shl
add
add
jo
test
sarl
mov
rcrl
cmp
mov
inc
add
jno
outsb
and
add
add
insb
hlt
jnp
add
sahf
xchg
scas
push
xor
movsl
mov
push
add
arpl
xor
in
cmp
add
xor
mov
rolb
mov
add
add
dec
out
mov
inc
fistl
add
mov
mov
outsb
outsl
popa
pop
icebp
lods
dec
lds
xorl
xchg
add
ret
or
shll
and
add
cmp
rcr
jb
mov
add
fdivrl
and
add
add
push
pop
xchg
ret
es
iret
or
push
loope
fcmovbe
add
mov
je
adc
out
and
mov
mov
add
push
add
xchg
add
cltd
sub
xchg
outsb
sbbl
mov
add
sub
add
push
mov
add
in
icebp
sub
fdivrl
xor
mov
scas
jge
mov
adc
sub
push
sbb
mov
sbb
fmull
popa
clc
inc
add
add
addr16
mov
outsb
inc
adc
ret
adc
lcall
mov
lds
ja
mov
mov
sbb
pop
pop
je
dec
inc
add
js
push
add
sub
mov
pop
popf
scas
rolb
mov
xchg
int3
mov
bound
mov
add
mov
pusha
add
rolb
pop
rolb
xchg
mov
add
or
mov
stc
ret
fs
jnp
sub
cwtl
mov
cltd
lret
push
adc
mov
mov
mov
mov
bound
mov
cltd
dec
and
add
or
popf
adc
mov
xor
mov
fstl
lret
nop
add
lret
std
sbb
cmp
mov
jl
xchg
add
add
scas
fnstenv
jge
cmp
add
rolb
mov
add
test
daa
push
and
push
loop
mov
push
ret
out
lock
add
sub
adc
movsl
lods
dec
inc
mov
add
das
les
lods
hlt
insl
adc
xor
mov
dec
rolb
out
pop
cs
jb
mov
cmc
pop
xchg
pusha
add
xchg
lods
pop
sub
jmp
dec
incl
and
mov
xchg
shl
push
shrl
xchg
sti
test
popa
push
dec
pop
mov
xor
aaa
imul
aaa
jbe
sbb
stc
lock
addr16
add
sub
jl
jb
mov
mov
inc
add
mov
das
rorl
int3
stc
fistl
or
pop
jg
adc
lret
jmp
sub
outsl
push
xchg
sub
jbe
cltd
lds
mov
mov
rolb
mov
fiaddl
jg
add
pop
adcl
add
das
mov
mov
and
mov
add
scas
aaa
loopne
mov
add
shl
outsl
mov
aam
mov
scas
int3
loope
ret
js
addb
mov
mov
adc
mov
mov
dec
ret
es
rolb
mov
int
cs
nop
add
jge
add
addb
lret
mov
push
and
mov
cmp
add
roll
loopne
mov
xor
mov
xchg
xor
adcl
test
xchg
and
imul
lea
shll
add
pop
fwait
addl
add
mov
mov
cmc
push
sub
stos
mov
mov
bound
mov
hlt
add
jne
sbb
xor
add
add
mov
and
xchg
imul
mov
add
lret
out
pop
mov
mov
pop
pop
or
mov
push
lea
aad
and
add
icebp
rolb
mov
mov
cld
push
fwait
mov
rolb
mov
rolb
mov
inc
rolb
mov
dec
into
lods
jne
fadd
cld
repnz
data16
lea
sahf
rolb
mov
cwtl
or
and
add
xchg
xor
mov
add
daa
add
sbb
inc
lods
or
cmc
and
mov
sbb
insl
or
sub
in
add
nop
add
add
xchg
mov
std
dec
pop
data16
add
negl
xor
and
mov
mov
add
add
add
lea
mov
hlt
mov
mov
je
mov
mov
mov
jne
cli
push
clc
ja
repnz
mov
add
inc
insb
xchg
hlt
inc
mov
add
mov
push
cli
ljmp
mov
int
or
pop
jbe
add
and
cmc
sbb
int
push
jge
jns
add
mov
add
xchg
test
mov
jo
mov
fldt
lret
aad
out
sbb
pop
enter
fimuls
push
mov
add
scas
jecxz
jo
mov
leave
ret
and
mov
popf
mov
cld
inc
sbb
jp
cmp
add
cmpsl
andl
je
aam
addb
push
inc
cmp
cltd
scas
cwtl
movsb
cmpsb
mov
ret
adc
mov
xchg
imul
fisttpll
mov
mov
repz
mov
add
ja
and
movsl
mov
mov
jne
test
gs
call
mov
add
mov
mov
push
js
xchg
xlat
stos
icebp
or
fisubrs
add
lds
jp
jl
dec
inc
xchg
cmc
addb
mov
cld
xor
movsb
mov
lods
pop
xchg
or
fcoms
add
enter
lret
or
add
mov
push
pop
stos
cmc
fs
xor
push
inc
mov
mov
je
xor
mov
xchg
inc
mov
add
mov
mov
adc
xor
ja
add
pop
push
std
mov
or
and
mov
xchg
movsb
bound
mov
xor
shr
test
daa
aad
add
jmp
push
push
addr16
add
or
xchg
je
in
outsl
xor
mov
or
and
repnz
push
addr16
pop
aam
mov
add
xor
mov
xor
mov
repnz
mov
add
sbb
scas
add
seta
jmp
lds
push
jo
mov
mov
xor
add
cs
xchg
in
xchg
cmp
xchg
sbb
nop
add
and
mov
jmp
mov
out
lret
cmpsl
xchg
sub
cld
cmp
fisttps
push
fisttps
push
add
pop
or
mov
and
add
das
dec
add
mov
mov
outsl
sub
add
jnp
cld
ja
sub
clc
mov
roll
mov
sbb
inc
add
mov
jns
and
mov
dec
daa
or
xchg
add
dec
push
add
jbe
inc
scas
lcall
add
inc
add
mov
adc
dec
sbb
mov
mov
add
aam
cld
dec
ja
xchg
add
mov
mov
mov
add
cld
in
lds
out
dec
stos
rolb
mov
popa
inc
add
mov
mov
mov
inc
ret
pop
mov
inc
scas
lds
sbb
mov
adc
inc
mov
mov
cwtl
inc
mov
aam
fildl
enter
mov
jg
inc
pop
pop
movsl
xchg
imul
add
int3
out
jle
inc
xor
mov
inc
or
add
fistpl
dec
popf
pusha
add
mov
add
add
add
add
imul
fwait
mov
in
add
mov
lock
jge
and
add
add
push
cmp
pop
cs
insl
out
sub
pop
dec
movsb
xchg
pop
inc
sbb
daa
orl
adc
push
int
cli
cltd
jae
jl
jae
cmp
push
adc
stc
and
outsb
pop
test
add
xchg
aaa
xchg
add
add
add
cmp
les
mov
mov
mov
and
mov
add
mov
inc
push
add
add
leave
stos
and
mov
movsb
rolb
mov
and
mov
bound
mov
xchg
adc
mov
jb
mov
inc
mov
add
add
decb
sub
add
mov
inc
pushf
mov
pop
jno
lods
mov
mov
push
mov
push
sbb
add
xchg
dec
inc
add
scas
or
jno
add
add
adc
sbb
sub
sub
push
add
movsl
or
inc
add
mov
cmpsb
pop
push
lea
popf
cmp
add
inc
jg
mov
add
out
xchg
testl
push
lahf
and
popa
mov
push
loop
mov
into
and
mov
sbb
out
inc
or
or
clc
mov
mov
les
xor
mov
add
ljmp
test
sbb
sub
stos
movsb
push
sbb
add
insb
or
jnp
xor
or
cmp
add
fst
imul
mov
cmc
dec
push
sbb
adc
xor
lds
scas
jecxz
push
push
out
add
sbb
sub
movsb
enter
addr16
or
enter
sub
jmp
ret
sti
imul
adc
mov
cli
xor
jl
pusha
add
mov
rolb
mov
jecxz
or
push
add
out
cmp
adc
das
adc
add
add
mov
iret
sbb
mov
mov
incl
mov
add
lahf
call
pop
jns
and
add
mov
mov
sbb
mov
xor
popf
jno
xchg
sub
icebp
add
mov
or
in
les
dec
in
dec
and
xlat
adc
ss
loopne
mov
mov
addb
lea
nop
add
ret
or
int3
mov
pop
mov
mov
aad
add
jge
xchg
and
add
add
add
test
jmp
xlat
adc
mov
pop
movsl
addb
jmp
cmp
mov
add
pushf
and
mov
enter
pop
dec
stos
les
jns
pop
ds
xchg
mov
push
add
add
push
pop
and
mov
mov
int3
test
sbb
or
jmp
inc
dec
adc
sub
jecxz,pt
jge
popa
aam
addr16
in
addb
push
insl
push
jmp
push
adc
add
int
rorl
and
mov
jnp
stc
xchg
mov
sbb
int3
addr16
lock
lcall
jno
iret
enter
int3
push
icebp
leave
mov
jne
or
xchg
add
stc
sbb
jns
movsb
jae
add
fdivs
xor
mov
rolb
mov
out
add
mov
xlat
push
dec
and
ja
add
mov
je
cmp
jle
test
ret
and
xlat
mov
popf
in
rcll
add
imul
xchg
shr
movsl
xchg
movsl
mulb
outsl
outsb
mov
add
notl
add
fisubl
popa
mov
and
std
push
je
add
add
fnstenv
sub
or
in
sbb
pop
sub
addb
adc
mov
je
nop
add
dec
lods
and
mov
mov
mov
push
and
mov
and
add
dec
hlt
inc
push
dec
ja
gs
sbb
jecxz
add
adc
cmp
add
mov
add
mov
cmpsl
cmp
add
repnz
arpl
push
test
addb
mov
aad
inc
clc
mov
mov
or
jb
mov
add
push
rolb
mov
sbb
je
cmc
adc
push
adc
mov
dec
xchg
popa
push
xlat
gs
mov
mov
hlt
decb
int
idiv
sub
jno
pop
mov
aam
fstpl
add
jbe
add
insb
loop
mov
add
idiv
cmp
mov
or
push
cmpsl
xor
sahf
lcall
adc
jmp
out
jb
mov
jmp
add
push
add
arpl
jle
push
mov
das
or
pop
sub
es
in
mov
dec
jno
fisubrs
add
outsl
cld
mov
mov
mov
push
add
rolb
push
add
fadd
imul
xchg
push
pop
loope
cltd
mov
push
jp
jbe
jge
cltd
jbe
dec
lods
sbb
add
inc
cmpsb
push
add
xor
mov
or
mov
sbb
add
mov
add
add
addb
and
mov
mov
push
or
mov
jo
mov
leave
mov
mov
jne
push
lea
pop
dec
cmp
mov
sbb
aas
iret
jle
push
test
add
in
cwtl
mov
push
mov
stos
fistl
in
sbb
adc
mov
jp
mov
mov
mov
inc
add
addb
jo
mov
xor
mov
add
cld
lahf
jae
add
mov
dec
dec
mov
ret
xchg
roll
mov
sbb
mov
lahf
jae
add
sti
lods
mov
movsl
cmp
jb
mov
addl
mov
mov
add
and
mov
cwtl
mov
mov
ljmp
mov
cmc
jmp
mov
lret
inc
add
add
lahf
arpl
pop
ja
mov
mov
jecxz
add
mov
in
add
pop
icebp
mov
add
and
mov
add
jp
sub
cmc
sbb
fcoml
xchg
fcoml
inc
inc
pop
push
add
ds
xor
or
jecxz
xor
subl
iret
clc
stos
stc
fimuls
test
mov
pop
out
iret
pop
ficoml
movsb
push
or
fistps
mov
fwait
sti
mov
push
or
mov
enter
add
mov
sub
xor
mov
test
adc
add
mov
dec
mov
scas
xchg
jl
xchg
test
shll
and
mov
xchg
popa
ljmp
mov
stos
mov
mov
mov
mov
imul
sbb
cltd
dec
mov
push
pop
sub
pop
ja
fcomip
lcall
pop
mov
in
or
rorl
dec
cs
and
and
mov
xor
jae
aaa
das
cmpsb
sub
add
sar
fistpl
mov
push
mov
sahf
cmc
xchg
addb
mov
sbb
mov
mov
add
out
xchg
rolb
mov
add
mov
rolb
mov
loope
cmp
mov
mov
mov
mov
rolb
cmc
xchg
ds
hlt
data16
pop
leave
dec
inc
inc
sub
push
sar
xchg
add
add
iret
sti
mov
add
xchg
add
jge
sbb
pop
std
pop
int3
fisubrl
jmp
sbb
add
out
repz
push
in
imul
cmp
loop
mov
mov
pop
xchg
xchg
or
pushf
inc
add
fmull
cmpsb
and
push
pop
loopne
mov
cmp
sarl
or
mov
lock
pop
pop
dec
int3
pop
aas
push
xor
add
jmp
dec
xchg
stos
pop
pop
sbb
idivl
and
add
mov
mov
dec
mov
or
cmp
pusha
add
dec
push
and
add
xchg
mov
mov
gs
mov
sahf
sarl
jg
pop
xchg
inc
cmp
add
xchg
add
mov
mov
pop
mov
mov
pop
jae
cmp
repz
mov
add
test
mov
or
stc
dec
and
mov
insb
repz
inc
add
enter
imul
pushf
xor
mov
mov
cld
mov
cmp
add
mov
and
mov
cltd
jns
xchg
sub
cmp
daa
ss
add
add
add
aam
inc
add
test
mov
or
lds
jo
mov
add
jecxz
lods
pop
push
outsb
pushf
cwtl
cmpsl
cmp
lea
xor
push
arpl
mov
push
fldenv
or
mov
add
insb
jne
sub
lods
enter
cmc
pop
inc
and
add
xchg
int3
push
add
lahf
add
add
mov
js
lods
jae
jmp
sbb
jmp
push
fcmove
push
add
add
add
mov
xor
lods
mov
mov
fwait
mov
lahf
icebp
loopne
mov
mov
sbb
cmp
jbe
mov
fildl
add
dec
shll
add
mov
in
mov
pop
or
mov
mov
xor
fistpl
daa
mov
stos
mov
sub
cmp
pop
insl
fsubrl
xchg
add
and
mov
and
mov
add
shr
mov
adc
rcll
in
mov
mov
ljmp
add
nop
add
jg
jno
popf
xchg
bound
mov
xor
inc
out
in
loopne
mov
push
or
sub
and
mov
icebp
pop
jno
loopne
mov
xor
mov
inc
leave
pop
in
fcomps
inc
push
aaa
adc
cmpsb
and
mov
mov
add
ret
div
int3
loop
mov
adc
es
add
adc
mov
or
add
mov
add
int3
mov
mov
lret
or
xchg
push
scas
add
mov
les
add
out
in
pop
mov
xchg
inc
inc
cmp
jl
scas
cmp
int
inc
stc
ds
push
cmp
adc
mov
repz
add
arpl
add
bound
mov
pop
sbb
mov
loope
stos
jmp
fildl
xchg
xor
loop
mov
jecxz
imul
adc
mov
jbe
fbld
dec
inc
leave
movl
shll
mov
rolb
mov
imul
xor
mov
add
and
hlt
stc
inc
add
mov
mov
pop
add
add
mov
and
lret
adc
dec
adc
mov
cmp
call
addb
aad
add
es
lret
add
leave
dec
in
movsl
stos
in
mov
mov
pop
cmpsb
rolb
mov
loopne
mov
and
jp
lea
mov
mov
je
sahf
inc
mov
mov
push
add
add
repz
sub
cmp
mov
add
cli
xor
mov
aam
lock
dec
inc
or
add
cmp
scas
lcall
lret
outsb
sub
ret
mov
pop
das
in
push
and
and
pop
in
jge
cs
loop
mov
loopne
mov
jmp
push
std
mov
outsb
mov
cmpsb
int3
insl
dec
mov
add
dec
jp
xor
aad
inc
stc
addb
iret
push
jo
mov
mov
arpl
mov
cmc
push
out
fs
add
rolb
xchg
adc
sbb
test
rcll
dec
out
lcall
cld
mov
add
jo
mov
add
push
mov
in
mov
int
xor
pop
dec
xlat
dec
rorl
out
xlat
rolb
or
in
mov
enterw
xchg
add
mov
inc
call
fisttpll
insl
inc
dec
xchg
add
mov
pop
in
mov
cmp
out
movb
hlt
ret
mov
jns
jbe
add
inc
pop
rolb
mov
mov
push
cmpsl
push
les
pusha
add
mov
mov
mov
mov
or
jl
add
outsl
mov
test
cmc
je
xor
lds
outsb
ss
mov
mov
mov
add
mov
loopne
mov
sbb
xlat
pop
mov
xlat
call
mov
inc
fldt
adc
mov
mov
jo
mov
mov
mov
loop
mov
sti
sbb
or
mov
fdivrl
bound
mov
scas
imul
mov
mov
inc
add
cmp
push
add
cmc
iret
mov
mov
mov
ret
xor
add
jne
sbb
adc
mov
fstl
addb
test
mov
add
mov
mov
inc
add
lods
cmp
xchg
bound
mov
pop
ds
setge
movsb
xchg
rolb
jle
add
mov
push
xlat
and
imul
negb
cmp
xchg
add
out
add
push
and
mov
mov
pop
sbb
lds
xor
setb
mov
test
jg
jg
jno
push
cld
inc
sbb
add
jns
js
mov
mov
jnp
adc
rorl
hlt
mov
add
mov
insb
fistl
loope,pt
cmp
fiadds
hlt
dec
dec
pop
fdivrl
jnp
fsubl
lcall
rcrl
sbb
repz
mov
mov
mov
pop
xchg
outsb
cwtl
aaa
jle
sub
in
dec
and
mov
mov
loop
mov
mov
add
xchg
fmull
inc
dec
adc
mov
shll
adc
mov
stc
jmp
loop
mov
add
sbb
add
clc
cld
pop
in
rolb
mov
jl
adc
mov
mov
fists
mov
iret
insb
aas
mov
mov
mov
inc
dec
push
cmc
push
stc
fsubl
adc
cltd
testb
add
inc
add
mov
adc
mov
jecxz
add
xchg
or
add
add
xor
mov
mov
add
lahf
rcrl
sbb
add
mov
add
cmp
mov
push
mov
mov
add
jecxz
ret
imul
jne
pop
aas
jne
fwait
lret
rolb
mov
fimull
outsl
dec
addr16
mov
scas
imul
lods
movsb
push
mov
mov
jge
and
mov
jg
loop
mov
add
sarl
rorl
div
cwtl
xchg
mov
xchg
add
addb
aaa
push
add
mov
mov
jo
mov
mov
add
xor
mov
jp
rolb
or
mov
sahf
cli
out
adc
leave
cmc
xchg
and
push
imul
mov
pop
mov
or
test
mov
jmp
in
cld
sbb
pusha
add
lock
xchg
ret
cmpsb
call
stos
jo
mov
mov
jle
adc
mov
sub
add
jp
dec
add
mov
xchg
sub
add
mov
ds
mov
add
mov
pop
insb
adc
dec
faddp
cs
psubq
iret
fbld
out
enter
bound
mov
test
add
cmp
add
stos
cmp
push
es
mov
outsb
cmp
stos
out
scas
mov
call
mov
mov
pusha
add
mov
mov
insl
mov
jb
mov
addr16
xor
add
mov
mov
and
jg
fs
add
add
fadds
xchg
xchg
add
lea
int3
vpxor
mov
push
add
xor
rolb
mov
in
and
mov
test
addb
insb
das
mov
fimull
mov
sbb
xor
mov
add
call
cmc
fisubl
adc
mov
ja
cmp
je
mov
lds
add
cmpsl
dec
filds
cwtl
mov
push
cltd
inc
add
xor
or
jge
or
pop
mov
leave
xchg
rolb
mov
push
xchg
stos
mov
xchg
pop
fmulp
mov
out
mov
mov
dec
cmp
icebp
rolb
mov
fwait
cmp
divb
fbstp
data16
dec
pop
sarl
jle
cmp
out
and
adc
mov
mov
pop
dec
sub
add
add
mov
lods
pop
xchg
mov
add
mov
movsb
xor
mov
add
ret
rolb
jmp
pop
rolb
addb
int3
sbb
cmp
pusha
add
clc
mov
jne
inc
pusha
add
fs
sub
add
ja
adc
ret
dec
pop
dec
out
jno
out
xchg
add
sbb
inc
mov
hlt
jns
cmc
and
jg
insb
enter
add
movsb
sub
out
dec
mov
arpl
xchg
mov
mov
add
add
rolb
arpl
incb
xlat
test
pop
jno
stos
iret
outsl
xor
mov
out
lret
insb
pop
outsb
jg
pop
mov
in
xor
ja
add
add
add
mov
icebp
mov
cmp
int3
mov
mov
shll
push
subl
mov
arpl
and
fldt
mov
and
mov
jge
pop
int3
fimull
stos
movsb
and
mov
ret
sahf
push
test
xor
mov
add
rolb
mov
add
pinsrw
daa
mov
add
cli
xor
mov
dec
add
and
mov
jle
or
bound
mov
scas
testb
adc
xchg
add
dec
je
or
sub
icebp
cld
hlt
mov
jp
and
mov
add
mov
add
fidivrs
fcomps
lss
mov
pop
or
add
fists
add
sub
cwtl
loope
mov
mov
cmp
add
dec
insb
negl
add
mov
into
jne
mov
jmp
add
out
cmovbe
mov
push
das
ret
adc
icebp
cmp
mov
mov
add
dec
jb
mov
push
jecxz
add
sbb
rolb
mov
mov
mov
add
fldcw
das
jl
mov
add
cmp
and
mov
mov
mov
mov
add
adc
mov
pushf
leave
cmp
cltd
mov
cli
add
lret
insl
adc
mov
ficoml
loop
mov
and
lods
cmp
mov
mov
mov
mov
mov
mov
and
movsb
lods
adc
mov
push
rolb
mov
add
dec
loope
lea
int
test
stos
add
mov
iret
addr16
add
jnp
mov
adc
push
cmp
lret
add
add
sbb
aas
movsl
add
imul
leave
scas
jle
sub
cmp
sti
nop
add
dec
pop
lret
mov
pop
mov
add
notl
add
xchg
fisttpl
js
pop
addb
in
xchg
push
jg
adc
mov
pop
mov
mov
leave
addl
pcmpgtd
lahf
push
int3
pop
repnz
fmull
and
mov
add
mov
add
mov
mov
jp
push
xlat
inc
add
mov
jmp
imul
test
mov
cmp
mov
adc
add
add
add
add
add
and
mov
mov
addr16
mov
jecxz
mov
and
cli
cs
add
or
scas
or
stos
loopne
mov
sbb
mov
mov
adc
mov
add
mov
sub
jp
add
sti
pop
dec
mov
mov
mov
in
lcall
add
adc
mov
repz
dec
divl
add
mov
add
mov
cmp
stos
jl
cltd
es
mov
hlt
cltd
stos
inc
push
addb
add
aad
mov
nop
add
jecxz
rolb
mov
les
jmp
xor
pop
ret
int
addb
pushf
bound
mov
xor
mov
sahf
subl
xor
mov
mov
mov
pop
fnstsw
sbb
mov
and
imul
mov
mov
movsb
pushf
xchg
scas
mov
out
xchg
lahf
push
push
add
or
mov
cmp
lcall
jne
pop
rolb
iret
sub
inc
rolb
mov
inc
and
mov
mov
add
setg
push
add
add
or
rolb
mov
mov
adc
add
adc
mov
mov
mov
push
lret
rorl
gs
jb
mov
mov
add
add
mov
rolb
mov
add
xchg
outsl
sbb
push
mov
add
hlt
cmp
adc
add
repnz
lods
cld
nop
add
int3
xor
out
lret
iret
or
cmp
jmp
add
in
push
or
add
cs
add
enter
das
in
scas
ret
out
mov
lock
std
test
aad
test
inc
add
mov
scas
sub
mov
mov
sbb
xor
pop
jbe
jne
add
stc
mov
fiaddl
dec
mov
adc
mov
nop
add
scas
scas
xchg
sub
jle,pn
in
orl
addb
jmp
xchg
push
add
mov
mov
xchg
add
fwait
arpl
aad
mov
arpl
push
aam
fucomp
cmp
scas
repnz
mov
cmp
fcmovnu
in
addr16
xor
mov
push
mov
mov
fstps
into
aaa
or
cmp
inc
add
mov
addb
xor
insl
jmp
andl
mov
mov
pop
je
sbb
mov
push
popa
mov
pop
jne
add
addr16
mov
mov
mov
insb
mov
push
add
mov
dec
jmp
sbb
sbb
jno
jnp
lods
movsl
pop
rorl
add
inc
push
rolb
mov
stc
xor
mov
jmp
mov
dec
push
je
fwait
jmp
mov
leave
cmp
dec
daa
sub
adc
fistpl
sub
xchg
push
add
cltd
test
add
mov
jp
shr
mov
add
stc
ret
roll
mov
shl
xlat
rolb
mov
push
push
js
cmp
insl
mov
outsl
dec
push
decl
inc
mov
mov
mov
xchg
jecxz
dec
int
rolb
cmp
dec
cmp
sbb
ret
addb
mov
lods
enter
or
repz
in
mul
add
in
dec
adc
mov
mov
xchg
mov
push
add
out
add
mov
outsb
in
out
jecxz
push
jge
jl
inc
gs
imul
add
pop
fistps
mov
nop
add
sbb
sub
xchg
cmpsl
jmp
or
rcrl
pop
xor
mov
ret
out
test
dec
jmp
sbb
push
inc
sbb
test
aam
sbb
xor
mov
adc
mov
sbb
push
repnz
lahf
fisubrs
adcl
cmp
add
add
dec
fsubl
mov
imull
add
xchg
pop
sbb
sub
or
out
jle
xor
mov
add
sti
add
mov
pop
add
mov
add
push
xor
add
repz
or
add
mov
add
cltd
add
jp
xchg
int
xlat
cltd
clc
cmpsb
and
mov
inc
add
push
add
jge
imul
adc
add
mov
mov
add
aaa
rolb
xor
add
pop
push
popa
push
mov
xor
addl
bound
mov
mov
fcom
add
rolb
addb
add
popf
frstor
mov
add
fcoml
add
dec
fchs
add
add
aaa
sahf
rolb
mov
push
das
fisttpll
jns
cmp
lret
int
pusha
add
int3
adc
mov
lds
mov
and
mov
adc
mov
push
inc
mov
enter
or
inc
fstpl
inc
add
mov
aas
jecxz
in
or
add
mov
cmpsl
xchg
fld
inc
mov
sbb
add
jb
mov
or
add
jg
ficoml
and
pusha
add
add
testl
dec
push
repnz
ljmp
imul
outsb
xchg
pushf
inc
xor
mov
icebp
movsb
cltd
sarl
int
cmc
sbb
bound
mov
data16
sbb
sbb
psubq
bound
mov
jne
scas
movsb
xor
clc
in
inc
lds
sub
ds
add
movsl
inc
add
dec
add
add
ds
and
mov
outsl
push
ss
add
sub
xchg
xor
mov
loop
mov
pop
imul
jne
add
add
ljmp
add
push
inc
push
or
adc
mov
sub
xor
mov
addr16
sbb
mov
add
in
or
add
add
xchg
addb
lock
adc
mov
push
jl
mull
and
and
imul
xchg
xchg
add
std
add
loopne
mov
mov
ret
lock
add
push
shl
enter
out
lcall
fdivs
cltd
inc
add
xor
mov
insl
dec
rolb
mov
sub
pop
xor
mov
push
jnp
dec
push
int3
mov
jne
pop
call
addr16
mov
scas
pop
insl
enter
shl
xchg
xor
mov
lea
bound
mov
es
add
sub
hlt
add
aaa
imul
xchg
add
adc
add
add
add
mov
leave
int3
push
sub
cmp
iret
sub
xchg
adc
test
cmpsb
and
mov
or
or
dec
sbb
or
jmp
jae
ret
adc
mov
jl
add
mov
lea
mov
fdivrs
mov
test
and
aad
inc
add
add
or
test
mov
dec
out
push
lahf
scas
xchg
mov
loop
mov
test
inc
addb
fnsave
pusha
add
int3
scas
pop
in
icebp
pop
arpl
mov
mov
push
mov
inc
aaa
addb
push
and
mov
aaa
push
add
les
clc
cltd
mov
gs
mov
add
lods
imul
stos
pop
or
xchg
or
nop
add
dec
inc
add
jbe
xor
mov
dec
stos
ret
xchg
mov
cltd
jl
enter
sti
mov
loop
mov
add
add
dec
test
mov
gs
lock
add
addb
in
add
mov
testb
or
pop
sub
imul
mov
sbb
cmc
jle
in
test
mov
and
mov
mov
xchg
xchg
sahf
cmp
mov
ret
repnz
pop
mov
idivb
and
mov
aad
std
in
cmp
aaa
inc
add
add
shl
add
mov
or
mov
test
aas
scas
add
icebp
add
arpl
sbb
mov
jns
add
paddsw
rolb
mov
lret
int
jb
mov
add
pop
clc
subl
imul
les
inc
fimull
add
sbb
sbb
sbb
les
mov
inc
mov
das
daa
xchg
add
in
fmull
xor
mov
fisubl
cmc
push
add
xor
mov
stos
xchg
add
push
sub
xchg
movsb
pop
mov
mov
sbb
add
xchg
add
adc
mov
cld
xor
sub
fidivrl
or
add
push
sbb
add
add
dec
dec
pushf
call
jl
inc
push
add
jg
mov
lods
jp
cmp
out
ret
in
lret
mov
add
lret
or
fs
cltd
mov
sar
jmp
ljmp
mov
dec
sbb
push
add
add
mov
add
or
jne
inc
add
jb
mov
mov
popa
es
adc
mov
xor
mov
rcll
aas
test
mov
cmp
add
or
and
mov
xchg
pop
pop
add
fsts
mov
scas
mov
mov
jne
add
sbb
cli
out
rcll
jge
mov
sbb
hlt
xchg
mov
addr16
add
adc
add
dec
mov
dec
xor
mov
mov
lock
add
mov
sbb
add
add
add
jo
mov
pop
sub
sbb
push
insb
jnp
test
adc
add
mov
add
add
das
testb
adc
repz
cmpsb
cmp
inc
out
mov
jl
stos
push
push
imul
out
dec
stos
or
jge
add
nop
add
mov
or
push
jp
and
scas
arpl
lock
add
stos
pop
mov
mov
aad
mov
inc
scas
dec
mov
add
jp
pusha
add
daa
and
xor
lds
mov
add
add
and
add
aaa
inc
lret
dec
push
mov
sbb
or
mov
and
xchg
pushf
pushf
mov
das
mov
stos
sbb
mov
add
mov
xlat
and
mov
add
jbe
fidivrl
cwtl
dec
sbb
fwait
in
jno
cmp
mov
mov
add
add
add
js
xchg
repz
jecxz
addb
jae
or
mov
mov
pop
ljmp
lahf
call
fwait
inc
push
add
rcll
inc
add
mulb
std
lahf
and
loopne
mov
mov
rcr
add
mov
rolb
mov
ss
sar
xor
repz
in
sbb
sti
jb
mov
push
sub
add
mov
push
jne
popf
loop
mov
movsb
scas
sti
pop
mov
stc
hlt
std
js
scas
dec
or
dec
cltd
fnsave
add
push
in
add
ficoml
movsb
mov
addr16
push
jp
mov
add
xchg
cmp
cmc
cmp
mov
mov
add
hlt
pop
cs
lods
je
dec
mov
xchg
rolb
mov
add
fistpl
aad
daa
xor
jmp
jmp
mov
add
ja
rolb
mov
inc
iret
mov
sub
pushw
xor
mov
adc
inc
je
movsb
iret
or
enter
pop
adc
daa
lcall
adc
mov
daa
sbb
push
outsb
push
push
fildll
sti
icebp
repz
arpl
adc
lds
push
xchg
xor
fs
xor
xor
mov
add
xlat
xchg
rcll
fs
aas
mov
stos
stos
sbb
mov
add
movsl
nop
add
nop/reserved
cmc
faddl
sub
mov
mov
cmp
stos
and
mov
mov
lahf
mov
popf
sub
lds
add
mov
mov
mov
decl
lods
negb
imul
lods
aad
bound
mov
fs
popa
stos
adc
add
add
add
ss
mov
addb
push
add
push
jno
cmp
sub
mov
sbb
enter
pushf
and
mov
mov
int3
test
enter
add
mov
mov
cs
mov
add
mov
pop
pusha
add
aas
pop
inc
cld
push
popa
pushl
add
mov
mov
mov
add
test
lret
push
xor
mov
sub
pop
pop
jg
or
int3
sbb
jl
or
out
stc
das
or
rolb
mov
add
ja
repnz
dec
push
fisubl
fdivrs
addb
add
mov
add
cli
test
mov
jge
sti
xlat
or
add
push
rolb
mov
test
mov
push
jnp
mov
push
std
inc
jmp
push
rol
mov
call
outsl
shll
mov
add
add
mov
pop
outsb
pop
cmp
add
mul
add
cmp
mov
mov
mov
add
inc
add
leave
or
ljmp
dec
dec
je
fnstcw
repnz
hlt
xchg
inc
sub
push
inc
movsb
xor
or
add
data16
mov
sahf
sarl
ds
jmp
jecxz
mov
or
add
add
pop
adc
call
movsb
out
jb
mov
add
fstp
jmp
xor
pop
sahf
pop
lock
jp
pop
in
add
enter
pusha
add
sti
jb
mov
mov
lcall
mov
lock
mov
mov
shrl
add
ljmp
mov
mov
sahf
or
inc
mov
dec
int3
aas
add
mov
jmp
jbe
xchg
xor
sbbl
js
add
push
add
ljmp
pop
mov
and
mov
adc
mov
mov
jl
add
cmp
add
ret
aas
adc
mov
cwtl
in
sbb
les
mov
pop
es
add
add
mov
bound
mov
xor
add
mov
movsb
push
pop
aad
movsb
imul
rolb
mov
mov
inc
add
mov
add
and
outsb
jmp
cmp
lock
out
lahf
sbb
aas
jmp
mov
add
addps
sbb
add
out
push
lret
ss
mov
add
mov
pop
daa
mov
xor
lods
mov
das
fstl
sbb
jecxz
jg
add
das
movsl
std
mov
int
stos
xor
mov
mov
lret
or
js
push
add
call
push
lods
mov
fisttpll
jb
mov
imul
sub
jo,pt
mov
pop
mov
add
mov
sbb
jp
inc
add
mov
add
mov
mov
call
rolb
mov
cltd
lods
xorl
add
xchg
or
push
mov
mov
add
cmp
fbld
lret
mov
xchg
adcl
dec
jb
mov
mov
sahf
lea
sbb
xchg
jns
pusha
add
mov
add
mov
sub
jbe
pop
imulb
sbb
insb
lock
add
aam
stos
xchg
inc
es
push
xor
fisubrs
push
repnz
mov
or
rorl
in
out
add
pusha
add
sub
lods
int
stc
ret
in
loopne
mov
ss
add
call
add
jmp
cltd
sbb
mov
add
sbb
mov
in
mov
out
cmpsb
std
or
addl
ljmp
aas
fimull
inc
xor
pop
sub
ljmp
cwtl
sub
loope
add
cmp
out
lret
ret
jmp
sahf
cmp
fsubl
add
aaa
mov
pop
cmc
cmc
je
add
jo
mov
pop
dec
xchg
and
mov
push
icebp
daa
push
mov
add
add
scas
sar
lock
scas
fs
pop
xchg
ret
pop
jo
mov
jo
mov
add
mov
pop
cmp
mov
pop
push
dec
adc
imulb
jg
mov
rolb
jle
test
jmp
testb
orl
and
mov
pop
int3
inc
and
inc
inc
add
mov
mov
lcall
add
test
adc
push
add
pop
cmpsl
dec
and
mull
mov
mov
push
scas
adc
sbbw
aam
push
mov
push
jo
mov
push
add
js
add
inc
add
push
add
bound
mov
jno
add
xchg
cmp
call
push
or
leave
gs
xlat
test
lret
in
push
pusha
add
sbb
fistpll
mov
add
out
out
mov
int3
mov
frstor
add
dec
gs
outsb
mov
add
jle
data16
cmp
jae
insb
dec
mov
jg
mov
aaa
cmp
mov
mull
incl
jno
mov
mov
pop
sar
pop
dec
mov
mov
dec
pushf
pop
jle
add
adc
std
xchg
add
mov
jl
fidivl
push
add
dec
adc
adc
adc
mov
dec
and
mov
fdivrl
inc
xlat
sbb
add
lahf
and
dec
pop
cs
roll
adc
xlat
add
mov
sub
das
cmp
add
mov
mov
and
pop
fcompl
mov
mov
test
decl
test
add
push
jno
add
enter
pop
into
stos
push
test
add
or
rolb
mov
pushf
add
jecxz
je
lret
jbe
leave
daa
push
sti
lods
popa
jmp
aad
aad
cwtl
rolb
mov
mov
and
mov
sbb
mov
fimull
rolb
sub
mov
mov
orl
sti
ja
cmp
incl
mov
fldl
add
mov
mov
or
ret
addb
inc
push
push
out
dec
cmpsl
pop
adc
pop
adc
aas
stos
punpckhdq
mov
sub
rolb
mov
mov
add
jae
pop
faddl
add
aas
popa
mov
je
dec
mov
push
adc
inc
jge
loop
mov
sub
inc
cld
push
add
fadd
mov
in
pop
insl
scas
pop
je
or
add
and
mov
mov
cmp
ficoml
or
mov
add
stos
adc
mov
mov
sbb
inc
add
sub
and
dec
sub
cmpsl
es
cmp
pop
popa
xor
call
pop
jnp
adc
add
add
dec
push
aas
jmp
test
push
jne
cmpsl
lds
in
mov
mov
push
inc
jb
mov
push
stos
xor
cmp
add
mov
mov
adc
mov
les
add
add
mov
scas
mov
add
add
test
stc
push
add
and
cs
add
std
cmp
popa
mov
add
lock
loopne
mov
add
mov
and
mov
mov
movsl
cltd
cld
lds
add
fwait
je
cmpsl
mov
mov
ret
push
repnz
mov
int3
jecxz
xchg
sbb
je
xchg
add
push
aas
fiaddl
mov
fs
mov
add
js
iret
mul
jne
dec
sahf
jo
mov
add
xor
mov
cmp
mov
test
idivl
mov
mov
jno
or
dec
lcallw
sub
add
xchg
adc
mov
sub
jp
bound
mov
push
sub
sbb
add
dec
mov
repz
jne
mov
pop
add
mov
adc
cmp
dec
in
rorl
push
ficomps
mov
mov
pop
js
out
lahf
push
mov
icebp
dec
mov
add
mov
daa
jo
mov
fiaddl
sbb
lock
lret
jecxz
add
jle
insl
out
add
dec
sbb
add
push
sbb
xor
add
testb
add
dec
mov
jmp
xchg
or
sbb
bound
mov
idivb
jbe
pushf
xchg
out
aad
add
xchg
popf
loopne
mov
mov
rcrl
xchg
aam
rcrl
js
and
mov
add
inc
add
lods
inc
push
add
outsb
xchg
push
mov
mov
pusha
add
loope
clc
push
inc
add
lods
jg
test
fiaddl
add
and
dec
push
pop
mov
mov
jb
mov
mov
cmpsb
ret
xor
leave
in
mov
or
add
scas
lods
cmpsb
sahf
out
bound
mov
je
cli
aad
iret
scas
pop
and
mov
add
add
add
push
scas
jle
packuswb
jg
add
inc
add
xorl
stos
lret
sti
jge
jns
test
dec
dec
jnp
pop
lock
inc
add
add
add
rolb
mov
mov
xchg
jecxz
adc
mov
cmp
ss
int
xor
jns
adcl
pop
and
mov
je
sbb
shll
ds
push
pushf
outsl
lods
lret
jmp
or
sahf
jbe
push
pushf
lods
das
icebp
adc
scas
fldl
xchg
add
mov
jnp
add
std
inc
test
add
flds
in
cli
mov
mov
cwtl
mov
cs
inc
scas
pop
add
movsl
shrl
jb
mov
add
aas
sub
sbb
hlt
add
jle
or
add
inc
rolb
clc
pushf
dec
mov
outsb
cs
jb
mov
lods
inc
add
inc
push
pop
nop
add
sti
pop
pop
add
mov
jno
jno
sub
pop
daa
push
add
add
cs
pop
les
jbe
inc
add
add
and
add
add
orl
push
add
add
add
rcrl
add
test
mov
xor
and
mov
xchg
inc
add
test
lea
mov
mov
mov
or
xor
mov
rolb
mov
add
iret
inc
cld
repnz
inc
push
rolb
mov
add
pop
mov
xor
dec
xor
pop
xor
imul
inc
add
jge
push
insl
out
inc
lock
test
out
or
mov
push
push
push
push
cli
test
adc
mov
xchg
add
mov
add
pushf
je
aas
xchg
pop
xor
mov
and
add
add
in
nop
add
cwtl
mov
adc
mov
mov
mov
add
aas
push
ja
sbb
push
mov
and
cmp
loop
mov
rolb
daa
xor
mov
in
xchg
adc
cld
cmp
rcll
nop
add
stos
jle
and
xchg
hlt
cltd
shrl
add
in
call
cmp
daa
ds
push
movsl
dec
inc
add
add
mov
mov
cmp
stos
push
repz
dec
arpl
out
jl
xchg
ds
inc
data16
mov
mov
adc
scas
and
cli
aas
push
repz
inc
add
pusha
add
and
addb
jp
dec
movsl
xchg
clc
xchg
in
dec
adc
pop
pusha
add
push
pop
jmp
addb
or
adc
cs
add
adcl
mov
mov
add
sti
ds
dec
mov
mov
lret
jae
inc
lret
sbb
aaa
push
stos
inc
push
jo
mov
inc
add
add
sub
loopne
mov
push
cmp
inc
add
test
add
pusha
add
movsb
negb
push
add
xchg
jge
add
mov
jns
pop
or
inc
add
inc
add
movsl
repz
mov
mov
add
mov
test
add
add
mov
mov
jnp
data16
iret
cmp
add
ret
pop
lcall
test
test
mov
sub
divl
lods
jg
add
push
out
hlt
mov
add
mov
ja
in
out
daa
mov
mov
outsb
jae
xchg
int3
insb
das
or
cmp
add
inc
add
mov
jg
insl
test
bound
mov
cmp
mov
pop
pushf
sub
inc
testl
mov
and
mov
aam
and
mov
data16
es
inc
jl
pop
add
cmc
mov
pop
and
insb
lret
out
clc
shll
ljmp
movsb
mov
push
add
dec
sbb
push
dec
push
divl
fdivl
mov
dec
dec
in
add
lds
add
push
add
mov
ja
pop
or
sub
ss
jmp
movsl
mov
es
stos
xchg
ja
xchg
mov
push
jno
mov
mov
add
mov
add
mov
add
inc
push
shr
scas
stc
sti
adc
mov
pop
aaa
xchg
mov
xor
div
pop
push
sub
test
lods
clc
inc
mov
cmpsb
repnz
lds
mov
fmull
mov
rcrl
mov
out
ja
cld
inc
add
fildl
mov
and
mov
arpl
fucomp
fmul
in
test
pop
lahf
loope
mov
mov
inc
addb
mov
push
ret
jmp
add
mov
push
add
xor
adc
mov
lahf
stos
rolb
mov
pop
cmp
pusha
add
add
jp
mov
sub
sbb
incb
jno
leave
mov
sti
xchg
imul
push
xchg
jae
loope
xchg
dec
inc
add
cltd
loope
inc
or
negl
jg
data16
mov
stc
mov
mov
pavgw
pop
mov
jbe
xchg
aas
sbb
add
loopne
mov
fiaddl
pusha
add
dec
cmp
sbb
add
pop
jl
dec
out
int
ds
fnsave
mov
inc
sbb
add
pop
cmp
mov
sti
data16
pop
into
xor
mov
int
ret
je
cs
xor
mov
repnz
jo
mov
push
pop
xor
mov
inc
iret
push
pop
in
lcall
gs
leave
push
insb
add
mov
or
mov
clc
outsl
insb
adc
call
mov
mov
fdiv
jecxz
sub
cmp
push
ficomps
test
xchg
mov
aad
fs
sarl
mov
mov
loope
ja
gs
mov
add
xchg
outsb
aaa
push
and
mov
jo
mov
and
mov
jg
adc
push
push
push
popf
lret
mov
aas
add
lahf
pop
int3
ret
lea
xlat
jecxz
xlat
out
adc
aam
mov
cld
movsb
mov
sbb
lcall
std
pop
shll
addb
sub
cmc
xchg
mov
in
out
jno
dec
xor
into
in
push
cmpsl
mov
rorl
fcoml
mov
lock
add
mov
inc
fdivrs
test
jo
mov
adc
mov
std
stos
ja
mov
and
mov
mov
mov
add
and
mov
add
daa
dec
adc
add
adc
cmpsb
add
mov
dec
je
pop
outsl
mov
mov
dec
xchg
inc
pushf
js
and
dec
pop
sbb
mov
rorl
xchg
movq
and
inc
xor
xchg
push
mov
in
cmpsb
mov
xor
add
add
imul
pop
js
xchg
pop
notb
mov
push
cltd
out
jb
mov
rolb
mov
sti
pop
scas
insb
mov
pop
outsb
jne
adc
pop
mov
call
mov
ljmp
shll
cmc
mulb
sub
sub
pop
sbb
add
mov
adc
inc
popf
jb
mov
rolb
mov
ss
or
jp
sbb
push
inc
cmp
adc
cmpsb
test
cli
mov
mov
fxch
clc
xor
mov
add
aaa
nop
add
add
test
cld
sahf
cmp
sub
es
cltd
jb
mov
mov
call
xor
push
dec
cmpsl
inc
nop
add
sbb
sub
stos
or
add
sub
mov
movsl
loop
mov
add
sub
sbb
adc
mov
das
mov
and
mov
scas
ljmp
sbb
dec
cmpl
jb
mov
mov
dec
lahf
lods
and
ljmp
xchg
dec
into
sub
std
xor
add
nop
add
mov
mov
bound
mov
or
xchg
js
fsubs
mov
mov
add
push
test
mov
std
popf
pop
push
mov
nop
add
cmpsb
leave
mov
cltd
mov
xlat
out
sahf
fucomp
push
lods
ret
mov
aam
add
jmp
rolb
mov
mov
add
mov
in
mov
out
in
lahf
xorl
mov
int
add
test
pushf
xor
mov
nopl
push
dec
shll
nop
add
call
xor
fidivs
mov
iret
test
fs
insb
ss
pop
cmp
inc
ja
jne
fdivrs
add
xchg
push
lock
add
pop
inc
push
iret
push
add
add
cltd
aas
sbb
cmp
or
test
roll
icebp
outsl
addr16
mov
push
insl
sbb
gs
les
jo
mov
cmpsb
mov
mov
dec
cli
aas
imul
mov
mov
add
es
dec
int3
or
add
add
ss
pop
fistps
in
xchg
add
cmp
add
imul
hlt
mov
pop
test
jmp
adc
outsb
dec
fstps
add
imul
emms
ud0
add
movsb
and
add
mov
es
test
rolb
mov
icebp
cmpsl
mov
mov
sbb
or
addr16
fsubl
mov
add
cmp
push
or
xchg
add
pop
adc
mov
insl
and
mov
test
into
fisubl
add
ds
add
add
fldenv
add
ljmp
cwtl
pop
xchg
and
mov
xchg
shrl
xor
add
jne
movsb
jbe
lcall
mov
push
add
mov
test
lahf
adc
or
mov
mov
add
repz
add
adc
mov
push
jl
lods
or
xchg
add
dec
insl
outsl
push
cld
xchg
subl
push
lea
mov
mov
stos
mov
cmp
push
add
mov
insb
fpatan
add
imul
mov
and
add
stc
icebp
mov
add
or
xchg
add
stos
aam
add
dec
mov
inc
sub
lret
push
mov
sub
add
mov
ficoml
imul
fcoms
add
test
pxor
mov
sbb
call
inc
test
stos
ds
std
fdivr
bound
mov
or
je
add
sbb
mov
mov
xor
push
rolb
mov
mov
mov
stos
xor
mov
mov
nop
add
push
sub
mov
add
rcrl
sub
add
push
add
dec
mov
addb
cmp
jnp
movsb
lahf
stc
and
adc
mov
inc
mov
ljmp
jno
fidivrs
in
add
push
bound
mov
mov
addb
addb
mov
jp
sarl
mov
jae
aam
or
sbb
in
jg
add
add
add
jp
mov
fs
add
enter
jb
mov
push
sbb
into
orl
or
stos
push
mov
jnp
jp
sub
mov
mov
not
or
adc
stc
mov
mov
popf
adc
mov
and
loopne
mov
into
add
add
sbb
add
ret
or
or
dec
test
add
mov
movsb
jns
adc
and
and
mov
out
add
and
add
mov
or
mov
mov
inc
jo
mov
jae
popa
push
inc
xor
jl
add
jae
xlat
movsb
fcoml
mov
push
add
sbb
cwtl
fidivl
dec
icebp
sbb
add
rolb
mov
std
int3
pop
push
mov
mov
pop
test
xor
jno
pop
test
inc
popa
mov
or
push
add
mov
sub
ret
bound
mov
and
mov
rolb
xchg
mov
cmp
clc
add
fwait
popa
mov
in
add
cmp
int3
hlt
movsl
in
rolb
mov
jge
sub
leave
push
add
add
out
das
jmp
xchg
loop
mov
inc
or
push
and
mov
cltd
cltd
cmc
test
jmp
cmp
mov
aam
xchg
rolb
mov
mov
cmp
bound
mov
ret
jmp
popa
popa
call
add
loope
push
jg
outsb
in
sbb
add
add
sub
cmp
bound
mov
aaa
dec
push
pop
lods
pop
movsb
int3
int
xchg
rolb
mov
add
pop
mov
adc
fldcw
rolb
mov
add
leave
jb
mov
in
inc
sub
add
mov
dec
mov
mov
fcmovb
xor
mov
in
or
adc
imulb
adc
mov
stc
jle
in
divb
icebp
inc
add
add
cmp
sub
push
mov
rolb
mov
xchg
int
sti
imul
out
pop
test
mov
and
xchg
add
in
clc
dec
and
mov
mov
dec
mov
je
mov
mov
fdivrs
dec
rolb
mov
rolb
mov
dec
jo
mov
std
dec
popa
inc
inc
xchg
mov
pop
sbb
loop
mov
jb
mov
in
push
add
enter
pop
pop
dec
pop
dec
mov
push
out
or
sti
push
js
xchg
jae
add
sbb
mov
popa
push
cmp
jo
mov
add
sahf
cmpsb
pop
xor
add
push
es
stc
jg
test
add
inc
add
cmpsb
je
push
repz
add
mov
add
add
out
mov
pushw
bound
mov
add
rcr
add
mov
push
add
jno
mov
in
rol
push
sub
jne
dec
xchg
pop
cmp
cmpsl
sub
mov
add
mov
or
push
mov
inc
mov
mov
loopne
mov
addb
sbb
ss
das
mov
insl
loope
std
push
lret
add
stos
nop
add
mov
xor
mov
mov
sub
popa
imul
nop
add
pop
mov
pxor
hlt
aad
cmp
mov
test
inc
cltd
es
insl
rorl
addb
cmpsb
fs
std
pusha
add
pop
out
mov
addb
jae
xchg
add
add
add
js
jne
cwtl
jle
ljmp
jg
xor
mov
rolb
mov
add
mov
mov
insb
mov
mov
jg
add
cmp
mov
sbb
pushl
bound
mov
xchg
mov
loopew
mul
rolb
sahf
orl
inc
imul
mov
jns
add
xor
test
pop
jg
add
xchg
stc
dec
push
sahf
ficoml
hlt
adc
lods
mov
lea
push
insb
addb
jp
enter
das
sbb
mov
aaa
out
mov
testl
int
add
add
add
jae
add
xchg
icebp
cmpsl
cmp
add
mov
jp
pusha
add
add
fdivrs
rolb
mov
in
shll
add
les
inc
inc
cmp
rolb
xor
mov
outsb
inc
fwait
dec
and
mov
mov
mov
pop
pushf
add
inc
dec
xlat
ret
or
add
repz
pop
sbb
lret
xchg
test
test
test
fimuls
mov
add
imul
mov
pop
push
loopne
mov
mov
sub
lea
push
or
aaa
xchg
add
mov
mov
addr16
mov
push
inc
cltd
fwait
sub
add
add
lods
and
mov
add
subl
cmp
ss
xor
mov
dec
mov
mov
mov
mov
imull
or
xchg
mov
pop
sub
cmp
movsb
xor
add
mov
xor
mov
sub
add
jae
insl
jl
data16
pop
jp
imul
sbb
push
imul
mov
push
in
rcll
mov
pop
outsl
adc
push
inc
add
add
scas
cmp
icebp
pop
in
mov
add
mov
aaa
xchg
in
ficoml
stos
mov
addb
loope
pop
stos
inc
xlat
jae
add
mov
mov
mov
mov
repnz
mov
orl
or
cld
shll
insb
jns
and
cmp
cmp
mov
sbb
leave
popf
pusha
add
add
mov
xor
mov
push
push
add
add
popa
lds
test
mov
pop
lret
cmpsb
jmp
popa
loope
inc
add
jbe
add
jbe
es
fildll
fcoms
add
mov
jmp
rcrl
mov
in
mov
mov
iret
and
add
mov
jecxz
incb
jne
mov
mov
popa
mov
dec
pop
aaa
mov
rolb
ljmp
addr16
mov
clc
or
pop
stos
lds
mov
and
mov
mov
add
sysret
dec
and
pusha
add
shrl
mov
cli
ljmp
mov
push
cwtl
data16
lock
add
add
mov
add
mov
ficoml
int3
imul
out
out
je
or
mov
incb
cmp
bound
mov
fistps
mov
sar
rol
cs
mov
xorl
test
add
mov
mov
xchg
jge
jg
aad
iret
movsb
add
test
lcall
add
rcll
sahf
shll
ljmp
pop
popa
pop
das
and
dec
add
mov
add
mov
adc
jae
add
add
repz
mov
sbb
mov
pop
mov
sbb
dec
sub
cs
fmuls
js
arpl
lock
popl
pop
aaa
xchg
push
mov
add
sub
add
mov
imul
pushf
sub
add
add
push
dec
cmp
push
add
mov
push
xchg
nop
add
mov
add
jg
push
insl
pop
mov
adc
xor
rolb
sti
mov
mov
fsubr
cmp
add
test
repnz
pop
nop
add
add
mov
cld
cs
jno
mov
xchg
adc
scas
mov
testl
bound
mov
mov
roll
fs
sub
in
outsb
jge
aaa
xchg
icebp
movsb
sahf
pop
out
mov
adc
mov
mov
jg
test
mov
pop
lock
idiv
xor
jo
mov
xchg
jl
jo
mov
add
sub
pop
scas
ficoms
add
dec
aaa
cmpsb
or
or
xchg
add
push
add
mov
lahf
xor
mov
xchg
in
nop
add
add
mov
mov
hlt
cwtl
insb
loopne
mov
add
lcall
add
jle
add
mov
iret
hlt
xor
mov
imul
insb
jge
int
fisttpl
jp
jne
in
loop
mov
mov
sti
lods
clc
jle
mov
push
lret
cmp
add
and
icebp
push
aas
cmp
sahf
popa
xchg
repnz
add
mov
dec
les
dec
fprem
mov
dec
addr16
repz
pop
shll
into
jae
in
divb
add
push
adc
add
dec
and
and
pop
cmp
popf
stc
dec
ljmp
jmp
jb
mov
add
adc
daa
fsubs
mov
jne
adc
es
jmp
add
ss
adc
mov
loop
mov
cmpsb
push
test
sti
scas
outsl
out
pop
lea
ss
fidivrs
adc
mov
fstpl
add
mov
jo
mov
push
adc
mov
dec
ljmp
jg
add
fmulp
je
inc
add
fs
add
add
mov
mov
cmc
shl
ret
rolb
mov
outsl
xor
add
xchg
arpl
mov
ja
es
lret
lock
dec
lods
lcall
mov
dec
cmp
push
lods
push
scas
or
push
insl
cmp
pop
push
xchg
sub
rolb
inc
adc
mov
leave
sti
ret
cmp
fsubr
sahf
push
mov
mov
jg
jmp
call
pop
inc
lret
jbe
repnz
loopne
mov
lock
cltd
mov
sub
add
out
pop
push
mov
mov
sub
pop
pop
int3
decl
add
jp
and
mov
sub
jno
loope
pop
and
mov
push
cwtl
or
add
add
adc
adc
xchg
movb
sub
sub
inc
add
outsb
enter
push
add
mov
test
add
mov
add
add
loopne
mov
xor
add
mov
and
sub
or
test
xchg
in
cmp
jp
mov
dec
jge
aas
sub
mov
add
or
aaa
test
test
push
xchg
add
mov
mov
jbe
outsl
test
mov
out
jmp
leave
mov
sbb
jmp
mov
mov
inc
xor
out
cmp
mov
push
adc
aaa
daa
cmp
mov
out
mov
add
push
fists
sbb
jmp
and
mov
imul
mov
cmp
and
cs
jl
xchg
sub
adc
add
jl
fidivrl
xchg
or
mov
in
mov
fstpt
fnstenv
add
call
xchg
sub
lcall
dec
fxch
jl
daa
sub
mov
outsl
or
push
cli
add
add
nop
add
jae
pop
cmpsl
das
int
sbb
int3
cmpsb
lods
cmp
je
push
add
std
mov
mov
in
sti
sbb
sar
rolb
mov
lret
jp
js
enter
push
lret
int
dec
stos
jl
add
mov
xchg
jg
add
add
outsl
cmp
in
xor
lret
push
pop
push
add
sbb
popa
pop
fnstcw
mov
mov
mov
xor
mov
inc
add
mov
repz
ds
mov
xor
add
add
add
pop
bswap
jbe
sub
add
outsl
push
arpl
add
and
into
outsl
jnp
scas
and
std
fidivrl
inc
add
or
cmpsl
push
add
aam
lret
sub
mov
test
adc
and
fbstp
in
aam
int3
sahf
jbe
xlat
pop
xor
push
add
xor
mov
adc
mov
lea
add
ds
cld
pop
dec
adc
fmull
hlt
stc
sub
mov
jne
cmc
fmull
cmp
xlat
cmp
add
out
das
push
or
cmp
add
lds
data16
jno
mov
adc
mov
mov
lock
or
ficomps
jne
rolb
mov
add
loope
iret
mov
stos
inc
or
add
mov
dec
push
imul
cmp
shll
add
inc
mov
gs
lock
cltd
xor
mov
mov
enter
push
sbb
mov
inc
iret
out
pop
fwait
cwtl
cltd
add
mov
pop
sub
sbb
push
scas
hlt
push
xchg
sub
pop
jecxz
lods
addr16
cmp
add
inc
out
and
add
mov
cli
bound
mov
pop
pop
mov
add
lea
cmp
dec
lret
pop
push
sbb
adc
fbstp
inc
mov
cli
into
out
push
add
sub
call
mov
lcall
xchg
inc
and
scas
ds
lcall
mov
jg
pop
cli
scas
xchg
add
or
and
mov
push
pop
lret
sub
add
mov
add
mov
push
jp
xor
mov
out
stc
mov
repnz
iret
bound
mov
pop
push
add
data16
cltd
push
mov
lods
pop
ljmp
jne
cmp
sahf
lahf
fidivrl
imul
fidivrs
and
mov
add
in
das
adc
fldenv
add
addr16
ret
cmp
add
push
fisubs
adc
pushl
mov
mov
ljmp
add
in
leave
sub
aas
pusha
add
mov
cmp
push
cltd
mov
incb
fldcw
jns
aas
mov
cmp
pop
jne
add
mov
imul
dec
pop
arpl
jecxz
add
jbe
jbe
arpl
addb
mov
dec
int3
cwtl
movsl
mov
jne,pn
dec
rol
add
lcall
mov
addr16
das
into
xchg
add
xchg
add
jmp
inc
or
mov
add
or
stos
sbb
add
add
mov
mov
mov
mov
xchg
mov
dec
mov
cmc
and
pcmpgtb
add
jns
repnz
mov
add
add
test
cmp
and
pop
xor
mov
add
mov
cmp
or
add
mov
enter
fwait
pop
pop
nop
add
xchg
movsb
rolb
enter
scas
push
imul
adc
js
push
mov
xor
mulb
mov
add
add
mov
mov
push
jge
xor
movsb
xchg
push
push
cwtl
lcall
add
mov
test
divb
fsts
es
mov
lods
cmp
notl
dec
push
add
mov
mov
mov
cmp
add
push
inc
outsb
imul
pop
cmp
fldl
sub
add
jo
mov
bound
mov
add
add
mov
sub
nop
add
mov
add
inc
and
mov
hlt
in
pusha
add
jne
pop
bound
mov
mov
add
mov
test
add
es
sbb
jo
mov
push
mov
dec
ja
cmp
and
mov
or
add
es
sbb
mov
test
jbe
adc
incl
lret
or
or
movsb
push
repz
add
push
call
add
mov
xor
mov
jle
push
test
and
add
fsubrs
mov
icebp
add
add
loopne
mov
add
adc
fsubr
in
repnz
jge
je
add
cld
add
add
mov
das
leave
sarl
mov
cmpsl
inc
outsl
jno
push
add
loop
mov
add
into
in
dec
nop
add
fmuls
adc
in
push
jb
mov
add
add
outsb
xor
mov
icebp
out
ror
push
dec
dec
ret
aam
orl
sub
dec
aam
popa
dec
daa
sbb
divb
add
sbb
loopne
mov
out
push
add
adc
mov
cmp
push
or
and
add
mov
mov
jns
pcmpgtw
sub
or
mov
ret
mov
pop
or
sub
mov
test
out
add
sahf
sub
mov
sub
add
pop
push
add
mov
xchg
inc
add
mov
push
lock
pop
inc
ja
imul
inc
call
gs
pop
cmp
add
mov
xchg
int
cwtl
test
les
and
mov
lahf
inc
add
and
fmuls
push
mov
pop
mov
sarl
int
add
mov
mov
movsl
cmpsb
out
push
mov
or
add
mov
add
arpl
dec
out
icebp
push
add
fimuls
iret
out
adc
cmp
mov
pop
fnsave
add
mov
inc
add
add
inc
jb
mov
mov
add
push
add
pop
dec
push
fsubrs
add
mov
push
add
or
add
xchg
out
sahf
insl
test
add
sub
push
fiadds
add
ljmp
push
push
add
mov
adc
aaa
ja
add
iret
shl
je
nop
add
fists
bound
mov
add
and
mov
mov
mov
repnz
and
mov
jp
addr16
repnz
sbb
add
add
es
ss
and
enter
lea
push
sub
ss
cmc
mov
iret
lret
xor
mov
add
filds
std
sbb
nop
add
mov
stos
repz
add
hlt
stos
sbb
leave
loopne
mov
imul
add
mov
mov
mov
divb
push
repz
insl
icebp
fxch
xor
aaa
lock
addb
out
adc
cli
sarl
jnp
xor
scas
jnp
out
or
add
mov
shll
adc
scas
lahf
icebp
les
mov
or
adc
lcall
add
push
add
jmp
mov
jmp
xor
mov
add
mov
jno
fidivrs
add
add
lock
jmp
add
mov
and
lea
fsubrl
pop
push
add
sub
lods
mov
mov
dec
sbb
std
mov
add
inc
sbb
mov
adc
mov
mov
fidivrs
inc
and
ret
xor
repnz
in
jmp
cmpsb
inc
add
cmp
xchg
stc
fwait
pushf
test
adc
fsubs
fdivs
xor
mov
in
popf
popf
outsl
ljmp
add
mov
cmp
cmp
add
dec
push
jne
adc
dec
cmpsb
cmp
movups
add
sbb
shrl
cmp
mov
in
add
mov
movsl
int3
ret
or
push
imul
dec
shr
add
mov
jge
pop
cmp
adc
sbb
rolb
mov
orl
and
cs
jg
xchg
pop
insl
repnz
sub
lds
outsb
fstps
cmp
sbb
add
jns
inc
add
scas
popa
mov
cmp
cmpsb
mov
lret
mov
add
mov
bound
mov
and
mov
push
jb
mov
in
adc
mov
jo
mov
mov
cmp
sbb
rolb
mov
mov
jno
push
add
dec
xchg
into
stc
jge
js
add
add
out
ret
push
nop
add
in
push
xor
xchg
daa
mov
cli
pop
xchg
sub
test
add
adc
mov
rolb
mov
frstor
lock
iret
mov
lcall
lds
inc
or
lahf
jbe
add
dec
lcall
and
out
enter
or
sbb
mov
push
dec
and
xchg
jne
inc
add
dec
dec
sbb
cld
xor
mov
xor
mov
rolb
push
xchg
cmc
or
mov
pop
or
movsl
pushf
mov
add
sub
push
lods
cmp
rolb
mov
sbb
add
add
pop
pop
mov
cmp
add
divl
xchg
inc
sbb
adc
mov
ljmp
dec
or
mov
fnstenv
test
mov
adc
mov
test
scas
xchg
es
clc
cmpsl
xlat
imul
mov
stos
sbb
mov
rcll
fdivp
add
dec
in
cmpsb
addb
lcall
push
mov
pop
xor
mov
dec
fs
aad
sahf
xchg
daa
out
inc
add
lea
mov
mov
clc
xor
push
dec
bound
mov
scas
pop
daa
test
push
rolb
mov
mov
mov
mov
add
inc
add
cmp
orl
mov
test
jns
out
add
mov
add
rorl
sub
add
jecxz
sbb
nop
add
add
clc
mov
dec
rolb
mov
xor
add
es
pushf
xchg
scas
cmp
aam
call
in
cltd
pop
or
pop
popl
mov
add
mov
and
add
jbe
mov
jl
inc
addb
movsb
jbe
pop
mov
gs
icebp
popf
repz
mov
add
add
call
vorps
sub
shll
push
add
mov
sbb
in
ss
add
sub
mov
mov
push
jns
sete
and
push
add
add
mov
mov
lea
lock
add
xchg
mov
aam
xchg
jns
inc
es
pop
push
sarl
push
and
mov
lret
adc
mov
cmp
dec
lea
movsl
inc
addb
mov
add
mov
mov
pop
imul
aaa
mov
mov
xchg
add
stos
es
push
push
mov
cld
popa
pop
ljmp
mov
xor
mov
enter
add
xor
lods
mov
add
mov
add
mov
aam
addr16
cld
ret
dec
ret
rolb
push
push
sub
mov
fs
pop
or
pop
and
mov
cmp
jge
pop
mov
in
ret
dec
mov
arpl
add
out
inc
add
mov
add
lods
push
add
add
mov
push
daa
out
jmp
rolb
out
xchg
js
fbld
mov
mov
out
lahf
sti
add
sub
and
dec
into
xor
mov
mov
sub
andl
es
sbb
lock
cmpsl
insl
jo
mov
xchg
out
jle
rolb
mov
loop
mov
clc
lods
xor
add
ret
cwtl
add
push
jb
mov
imul
addb
xchg
mov
xchg
jnp
inc
incl
add
pushf
fsubs
mov
xor
mov
jnp
push
bound
mov
push
test
fdivl
fmuls
sbb
pop
xlat
sbb
test
add
add
leave
jmp
xor
mov
outsl
sbb
add
add
out
jmp
mov
int3
mov
mov
test
ret
scas
cmpsl
sbb
dec
push
xchg
mov
shll
mov
push
add
xchg
add
sub
add
jne
test
outsb
mov
xor
and
mov
mov
mov
mov
addb
out
ss
add
add
mov
sbb
push
notb
and
mov
adc
mov
xor
into
in
pop
xchg
add
add
and
and
jp
add
cmp
and
int
jl
pop
dec
idivl
pop
sbb
cmpsb
addb
mov
lds
adc
mov
stos
lods
adcl
ret
insb
push
sbb
mov
notb
scas
add
add
or
pop
or
dec
push
jl
jle
pop
jmp
add
jge
adc
dec
std
jae
xchg
add
pop
push
imul
xchg
repnz
mov
adc
shufps
xchg
add
mov
sbb
mov
inc
mov
jne
add
add
xor
out
add
xor
fs
adc
mov
inc
dec
repz
add
adc
sbb
popf
insl
push
cltd
in
and
xor
outsb
sub
mov
mov
add
cmpl
hlt
or
sahf
fists
cmp
jecxz
add
mov
pop
sbb
pop
mov
add
arpl
cs
or
push
mov
mov
sub
dec
jo
mov
sbb
push
cmpsl
dec
jle
mov
stos
incl
mov
sti
daa
sub
and
mov
mov
mov
xchg
push
pop
push
test
std
cmpsb
or
push
icebp
pop
adc
les
addb
jl
add
mov
push
pop
dec
pop
jg
or
mov
stc
mov
jo
mov
mov
add
push
mov
mov
and
in
test
pop
inc
jno
add
addb
jnp
rolb
or
int3
orl
in
mul
add
add
mov
mov
add
push
movsb
fimull
mov
mov
jl
add
mov
cmp
ret
inc
sub
test
cld
enter
add
cmpsl
arpl
int3
jne
sub
loope
leave
add
mov
adc
mov
arpl
mov
or
add
add
jo
mov
mov
dec
cs
add
data16
lret
and
cli
add
popa
push
jecxz
and
mov
inc
cmpsl
scas
mov
mov
dec
cli
stc
and
leave
iret
hlt
xchg
es
jae
std
push
add
push
adc
mov
add
adc
fadds
loope
and
mov
adc
testb
dec
icebp
in
inc
add
adc
mov
mov
fwait
xor
cmp
mov
pop
mov
mov
loop
mov
add
xchg
dec
cmpsb
and
jbe
mov
dec
fcmove
icebp
outsl
in
adc
mov
imul
and
add
out
sub
mov
cld
mov
add
dec
pop
push
push
and
mov
push
dec
mov
mov
js
sahf
xor
mov
push
sub
pop
xor
mov
jns
sbb
jp
mov
addb
icebp
pop
add
mov
mov
mov
mov
inc
ret
sbb
jp
add
mov
add
add
jecxz
fwait
mov
push
fnstsw
pop
imul
scas
cli
dec
out
push
cmp
xchg
jno
mov
cmp
inc
add
gs
push
dec
and
sub
add
cmpsb
mov
sti
ljmp
bound
mov
fisubrs
jo
mov
daa
outsl
mov
fimull
movsb
mov
scas
push
sti
aad
test
jns
mov
mov
les
addr16
mov
sub
and
stc
xchg
jbe
and
mov
les
mov
jmp
dec
jae
jnp
movsl
adc
rdpmc
fwait
sub
ljmp
xchg
add
bound
mov
stc
fcmovnbe
into
into
mov
add
dec
mov
add
push
and
mov
push
je
enter
call
mov
and
mov
xchg
rolb
mov
stos
pop
xor
sub
dec
sbb
add
mov
xchg
mov
mov
fidivrl
imul
jg
xchg
inc
xchg
in
out
xor
lret
scas
daa
jno
xchg
push
add
jnp
add
stos
inc
ljmp
or
imul
mov
and
inc
inc
stc
inc
notb
mov
dec
pop
das
int
negl
cmp
mov
xor
cltd
mov
inc
icebp
rolb
mov
mov
ljmp
into
pop
insb
xlat
adc
and
jno
push
daa
pop
out
xor
mov
jl
xor
hlt
js
lcall
push
and
mov
popf
addb
icebp
ss
push
in
and
add
jb
mov
push
jb
mov
sbb
outsb
lahf
pop
mov
aaa
sub
inc
push
repnz
pushf
pop
dec
fs
mov
push
pushf
cmpsl
addb
xchg
add
adc
mov
int
add
loopne
mov
loop
mov
mov
aas
mov
add
xor
add
jp
dec
mov
xlat
lds
push
mov
push
cmp
outsb
notb
jle
adc
mov
arpl
bound
mov
push
mov
add
xor
add
mov
xor
or
pusha
add
adc
mov
and
mov
mov
dec
loope
jns
ret
ret
push
and
mov
icebp
push
shrl
mov
lds
add
sub
fadds
mov
mov
mov
dec
out
pusha
add
fcom
repz
lock
lret
js
js
jae
add
or
or
cmp
push
js
push
fnstsw
stc
sbb
fwait
jl
jae
jle
mov
add
call
neg
stos
push
xchg
flds
mov
in
sahf
and
add
or
push
add
jbe
bound
mov
mov
add
int
jns
jl
inc
xchg
cmp
jp
add
mov
pop
inc
mov
inc
test
and
xor
inc
pop
sub
in
add
mov
stos
adc
mov
add
mov
fnsave
or
icebp
test
loope
jge
jmp
fwait
out
lahf
xchg
inc
negb
fsubrs
add
add
mov
push
add
add
xchg
add
out
repnz
add
jne
add
or
in
cmp
adc
mov
and
mov
pop
push
adc
add
and
add
das
push
mov
push
jg
add
mov
fistpll
and
mov
enter
add
and
test
imul
and
scas
xor
adc
xor
sahf
mov
add
push
insl
pop
test
xchg
dec
adc
movsl
leave
jo
mov
fsubr
cmp
pushf
inc
add
mov
aad
cld
adc
mov
push
and
add
out
sbb
int3
xlat
jne
inc
add
inc
xor
xor
dec
lcall
xor
xchg
jecxz
cmp
push
mov
clc
sub
rolb
push
xor
imul
mov
or
fsubrp
push
and
cmp
aas
outsb
or
add
out
add
mov
dec
jno
lret
hlt
fstpt
add
mov
mov
add
pop
aas
sarl
add
mov
inc
sahf
add
notl
popf
cmp
call
loop
mov
pop
ds
scas
bound
mov
in
push
or
mov
add
mov
mov
push
test
mov
add
andl
mov
adc
push
mov
sbbl
in
mov
mov
cwtl
out
fildll
mov
bswap
cmp
ja
cmc
xchg
lock
es
ja
mov
ja
scas
imul
clc
lret
in
mov
sti
jecxz
jno
xor
add
ret
fistl
sub
mov
sub
popa
and
lods
test
add
add
std
mov
mov
push
fldcw
mov
sbb
fdivrp
sti
fmuls
ljmp
add
rolb
mov
mov
pop
xchg
sub
add
add
test
xchg
inc
mov
push
shr
aaa
fwait
dec
aam
sbb
jne
mov
and
mov
inc
mov
sub
xchg
xchg
sbb
cs
movsl
out
mov
add
and
movsl
loope
es
or
mov
fstl
mov
mov
sbb
and
jae
mov
cmp
repz
cs
inc
add
popf
push
pop
jne
mov
mov
out
add
fs
ja
aam
dec
retw
std
push
rolb
mov
add
lods
pop
adc
push
add
mov
mov
call
add
popf
push
mov
sub
mov
mov
dec
outsl
jo
mov
repz
cmp
and
add
inc
sub
adc
mov
mov
add
cmpsl
arpl
das
mov
or
popa
jae
sbb
in
js
jno
pop
ret
sbb
inc
std
mov
lock
xlat
mov
mov
mov
push
pop
mov
xchg
xor
sti
daa
mov
mov
sbb
add
les
sbb
add
dec
jb
mov
test
add
insl
sbb
mov
lock
push
hlt
cli
mov
mov
fcomi
xchg
add
mov
add
xor
mov
testl
inc
mov
jle
sub
jno
add
mov
fisubrl
mov
mov
test
xchg
add
cli
test
add
jne
hlt
aad
inc
dec
js
lcall
pop
sti
sbb
add
mov
and
mov
aas
and
mov
mov
and
or
cmp
call
add
in
push
lods
pusha
add
mov
add
mov
add
mov
rolb
sub
mov
add
mov
adc
mov
push
add
imul
stos
jmp
mov
jne
xor
mov
xor
mov
mov
add
mov
jo
mov
popa
loope
push
stc
pop
jl
jo
mov
stos
pop
idivb
pop
mov
add
mov
movsb
push
push
add
inc
ja
add
mov
mov
shll
jmp
jo
mov
mov
sahf
mov
add
add
dec
cltd
rcrl
mov
mov
in
dec
dec
or
mov
cmpsl
jecxz
and
push
push
add
es
push
push
jo
mov
pcmpeqb
in
push
add
out
jns
cmp
pop
xor
lock
repnz
mov
dec
pop
int3
test
add
out
push
push
and
mov
mov
dec
jmp
popa
int
outsb
popa
push
push
add
fwait
mov
addl
mov
flds
fistpl
push
lret
mov
mov
sub
add
mov
cmpsl
push
add
lock
mov
mov
rolb
mov
psubusb
loope
sub
xchg
pop
adc
add
jno
fcoml
add
dec
jg
xor
add
xchg
add
cwtl
add
das
cmp
mov
add
mov
inc
add
xor
mov
fwait
bound
mov
push
out
pop
inc
outsl
xchg
rep
push
adc
mov
add
add
dec
dec
imul
adc
add
loope
push
mov
arpl
add
jecxz
cs
ja
cwtl
inc
jnp
jge
pop
mov
mov
add
mov
in
cmp
movsl
xor
sub
xor
sbb
cli
leave
rolb
mov
fistps
inc
jmp
or
pop
rolb
mov
std
xchg
roll
mov
add
cmpsl
cmp
cmp
xor
mov
imul
lahf
aam
ret
js
gs
or
pop
aam
stos
out
xor
mov
mov
adc
test
xor
and
mov
add
push
data16
add
mov
inc
jmp
add
mov
or
fistps
popf
cmpsl
sahf
cmp
add
lods
cwtl
fstps
sahf
and
mov
pop
and
jo
mov
jae
xlat
aam
imul
mov
jge
add
cmp
add
or
shll
mov
add
bound
mov
sahf
and
xor
mov
mov
xor
sbb
mov
sbb
fidivs
mov
into
mov
add
add
test
lcall
mov
adc
mov
addb
and
cmpsl
lock
xor
mov
mov
cld
inc
int
push
push
push
add
add
dec
jmp
movsl
icebp
cwtl
push
inc
add
mov
add
lret
add
ficoms
sbb
xor
fdivr
or
jp
add
notb
fcmovnbe
mov
add
test
push
mov
add
out
cmpsb
test
stc
das
and
negb
in
adc
jno
ret
jno
sub
mov
mov
add
cpuid
add
testl
pop
sub
and
and
clc
notl
add
or
or
push
fisttpll
mov
popa
scas
js
outsl
pop
lret
insl
cli
mov
xor
mov
and
arpl
rorl
data16
cs
fists
pop
stos
icebp
popl
js
add
and
sahf
jnp
scas
imul
mov
xchg
popa
mov
mov
xchg
add
or
jmp
inc
add
mov
addb
adc
mov
mov
mov
add
aad
mov
es
sub
in
repnz
mov
into
loope
jecxz
jo
mov
icebp
lret
mov
pop
cmpsl
scas
pusha
add
cmp
xor
add
mov
and
mov
dec
and
push
ret
inc
push
js
add
push
push
sub
mov
fnstenv
xchg
out
gs
dec
adc
mov
mov
adc
push
popf
lods
inc
add
xchg
add
mov
push
adc
dec
xor
mov
mov
xor
mov
addb
xor
in
lods
sub
mov
mov
fsubl
fwait
hlt
dec
test
leave
mov
push
rcll
mov
les
inc
xchg
add
mov
out
jl
jmp
repz
in
mov
pusha
add
imul
push
out
pop
xchg
dec
jmp
cld
ret
push
pop
xor
mov
mov
mov
add
scas
mov
push
outsb
test
push
pop
mov
xor
xchg
out
add
mov
add
popf
fdivrp
rolb
das
mov
push
add
jnp
out
mov
fld1
mov
mov
and
mov
dec
and
aam
cmp
lods
xor
fbld
insb
mov
mov
addr16
mov
ficoms
xchg
pusha
add
hlt
sti
or
ljmp
movsb
movsb
push
add
mov
xchg
mov
imul
dec
fstpt
push
fsubrp
mov
mov
jp
gs
inc
add
rolb
mov
or
xor
mov
or
add
pop
pop
mov
dec
sbb
rolb
lods
outsl
xchg
jb
mov
xchg
lds
xor
mov
mov
movsl
and
mov
xchg
add
mov
xchg
test
add
add
icebp
mov
add
scas
aad
lock
addb
jecxz
int
cmp
or
mov
test
enter
mov
adc
mov
popf
fsubrl
xchg
xor
mov
aad
pop
scas
dec
add
mov
stos
cmpsl
aam
mov
ds
xor
mov
xor
addb
xchg
push
fcomi
add
clc
push
add
adcw
addb
push
push
out
lret
mov
out
or
mov
adc
mov
add
and
add
mov
add
mov
jno,pn
pushf
stos
pop
or
mov
gs
popf
dec
jno
mov
rolb
mov
imul
push
push
jg
jl
pop
movsl
push
addb
subl
andl
xchg
adc
mov
fwait
pop
pop
jmp
mov
imul
out
xlat
loope
jmp
cltd
in
imul
dec
adc
mov
addb
ret
inc
or
lea
xor
int3
test
add
je
cld
mov
inc
fcomi
xchg
mov
mov
test
sbb
ret
pop
push
cld
lods
add
mov
out
cmp
cmp
mov
pop
jmp
push
add
or
mov
popa
insl
add
mov
jae
jmp
jae
jmp
ret
fucomip
push
jns
or
outsb
jns
sub
bound
mov
mov
mov
adc
ret
xor
pop
dec
and
pushf
rcr
pop
sub
add
rolb
mov
mov
mov
dec
push
add
lods
cmp
sbb
add
add
jecxz
add
add
test
testb
stos
xchg
pop
push
jne
in
adc
out
mov
add
mov
cmp
mov
loopne
mov
popf
lcall
sub
lcall
and
mov
add
ret
imul
add
mov
add
add
or
add
jo
mov
lods
xchg
jmp
add
add
jmp
mov
out
dec
and
mov
bound
mov
sub
repz
jg
es
mov
ss
cltd
ret
sub
mov
dec
inc
rcrl
out
add
leave
mov
mov
clc
jmp
nop
add
cmp
xchg
test
pop
xchg
ffree
cmp
cmp
int3
pop
mov
mov
test
cmc
mov
mov
cld
aad
xchg
jl
mov
mov
mov
pop
dec
add
mov
loope
shll
das
fnstenv
add
pop
jnp
add
mov
test
cmpsb
and
repnz
add
push
pop
xor
mov
push
lahf
xchg
aam
sbb
push
int3
jg
xchg
dec
fisttpll
popf
or
jl
ljmp
je
sbb
les
pushf
iret
sbb
mov
std
outsl
mov
out
mov
icebp
mov
mov
mov
mov
pop
pop
ljmp
add
dec
ljmp
mov
inc
mov
mov
fucomp
into
xor
push
add
add
rolb
mov
pop
lds
jbe
icebp
rolb
mov
adc
decl
test
push
jle
test
lods
and
push
inc
xor
and
std
or
jge
inc
add
mov
pop
outsb
lahf
js
adc
jbe
add
enter
mov
add
mov
add
xchg
add
and
mov
stos
or
mov
fbld
jo
mov
or
mov
mov
jge
xchg
and
mov
or
mov
notl
mov
pop
stos
iret
mov
jne
xchg
add
ret
push
ficomps
add
arpl
xchg
mov
ja
mov
add
scas
cld
inc
push
pop
clc
movsb
push
add
mov
mov
mov
mov
pop
inc
cmpsl
out
sub
enter
add
lahf
cmp
jl
or
add
pop
iret
loope
pop
stos
std
loopne
mov
jp
enter
lcall
test
inc
pusha
add
cmp
inc
xor
pop
negb
add
push
add
mov
add
lret
add
mov
mov
imul
push
not
add
mov
jp
loope
dec
arpl
push
dec
mov
popf
push
push
mov
loope
xor
xchg
push
jecxz
lahf
inc
add
add
es
fcmovb
add
add
add
mov
mov
cmp
pushl
sub
inc
add
mov
pop
mov
mov
mov
mov
sbb
add
mov
cmp
or
mov
mov
mov
fildll
dec
pusha
add
jge
xchg
xor
mov
sahf
mov
fs
adc
mov
mov
adc
ret
and
lods
adc
in
mov
lock
mov
pop
addb
filds
add
sti
lods
cmp
xchg
add
sub
lret
jmp
adc
mov
rolb
jb
mov
loope
into
and
mov
lret
mov
mov
test
jle
in
push
fidivrs
int
scas
inc
mov
stos
push
mov
mov
sbb
decl
pop
sti
dec
mov
fwait
ja
gs
ficompl
jno
dec
ja
int
fimull
or
sub
mov
mov
sbb
out
adc
cmc
and
mov
mov
add
mov
mov
addr16
xchg
add
in
xchg
add
add
in
pop
cmp
add
mov
movsb
jne
stos
mov
add
loopew
cld
dec
mov
rolb
mov
add
add
mov
add
cmc
mov
sbb
addb
jmp
mov
loopne
mov
adc
adc
mov
or
jae
add
xor
mov
mov
cmp
inc
add
mov
lahf
xchg
fsts
or
xchg
stc
and
mov
enter
rolb
dec
jl
sbb
cmp
mov
pop
inc
repz
add
and
pushf
xchg
mov
fld
add
and
ficoml
test
imul
or
add
inc
add
lds
sti
jbe
add
mov
push
mov
xchg
push
movsb
popa
out
add
mov
lods
mov
jmp
jne
popf
iret
imul
mov
add
test
inc
inc
cmp
dec
outsb
add
mov
xchg
push
movsl
xor
mov
mov
addl
mov
push
add
rolb
mov
mov
jo
mov
ja
or
xor
sub
das
adc
mov
fucomip
dec
fisubs
lret
inc
sbb
cmp
jns
add
inc
outsb
adc
ss
add
mov
mov
or
into
in
push
inc
add
mov
mov
rolb
mov
add
aam
insl
add
push
add
enter
xchg
xchg
mov
jmp
js
into
sub
popf
mov
adc
addb
dec
rcrl
cwtl
push
cmc
into
cmp
jl
mov
mov
rolb
mov
sahf
push
and
jns
lahf
mov
dec
nop
add
lret
cmpsb
ss
push
rorl
sbb
pushf
data16
sahf
mov
xor
mov
or
fisttpll
lret
push
add
add
lea
ds
pop
ja
mov
test
mov
popf
js
add
mov
rolb
mov
xlat
xchg
pop
fisubl
loope
sar
push
jno
sub
cwtl
and
mov
inc
add
adc
test
add
addb
rolb
mov
lods
jne
test
xor
cmp
add
mov
and
mov
or
addb
mov
add
les
outsl
in
pop
sub
add
mov
sub
or
sbb
mov
hlt
aad
ds
add
lret
push
xor
int
add
lods
arpl
je,pt
sahf
push
add
sub
jle
out
mov
ret
jg
adc
movsb
xor
jp
mov
sbb
gs
fs
jnp
add
add
add
inc
daa
ret
mov
mov
mov
cmp
fsubs
and
mov
scas
mov
scas
mov
add
jae
add
mov
add
ficoms
mov
fsts
add
out
mov
cld
pop
addr16
sbb
fstl
xchg
movsb
push
adc
movsl
dec
mov
push
add
push
nop
add
enter
addb
adc
add
pop
push
push
xchg
add
movsb
nop
add
jle
insb
cmpl
aam
stos
push
inc
imul
mov
and
and
xor
mov
shl
inc
or
cmp
sub
aam
xorl
mov
repnz
jge
lds
lods
js
out
lea
mov
xchg
lret
mov
fdivs
add
int3
aaa
jmp
sbb
imul
mov
sbb
push
aam
dec
jne
cs
jns
mov
dec
aaa
xor
add
mov
sub
bound
mov
jno
icebp
cmp
fldcw
aaa
sub
pop
push
add
mov
lods
xor
out
add
dec
push
stos
in
inc
lea
sub
in
cwtl
fwait
or
mov
loop
mov
mov
sbb
cmc
ror
sub
xor
mov
jl
add
insl
in
jo
mov
addb
test
mov
add
mov
in
xchg
je
adc
push
adc
mov
fimull
adc
icebp
push
dec
fsubs
rolb
mov
push
out
lods
cmp
sahf
iret
mov
push
pop
sub
add
push
add
sahf
ret
jno
mov
es
pop
in
pop
xchg
mov
mov
dec
add
mov
ja
add
mov
mov
das
push
rolb
mov
add
cld
jge
xchg
ret
xor
inc
xchg
addr16
jecxz
cmp
fnstenv
add
mov
inc
or
push
scas
out
fiadds
add
daa
adc
mov
movsb
inc
mov
sub
xor
pop
es
out
inc
pop
dec
ljmp
mov
sub
push
cmpl
add
mov
aam
push
lock
jmp
mov
mov
jp
pop
into
rep
adc
mov
push
repnz
mov
ret
dec
sbb
add
and
mov
add
hlt
mov
pusha
add
loope
xchg
jb
mov
in
push
enter
in
in
jb
mov
jecxz
jae
mov
add
addb
push
lahf
addb
addb
dec
add
jo
mov
sub
popf
and
mov
jne
jb
mov
mov
neg
outsl
or
adc
pop
rolb
mov
or
push
add
add
pop
jge
out
movsb
out
jmp
sub
cmp
jecxz
es
cmp
in
inc
push
add
fadd
add
stc
inc
add
mov
jge
and
add
sub
xor
mov
add
push
sub
and
xchg
add
aam
out
imul
sahf
lods
test
add
test
or
add
mov
xchg
popa
dec
popa
mov
pop
and
sbb
test
out
adc
mov
cld
add
mov
mov
inc
lret
scas
pop
xrelease
mov
cwtl
xchg
inc
add
popa
sbb
sub
mov
push
cltd
addb
rolb
ljmp
mov
mov
add
xchg
xchg
mov
mov
ljmp
add
repz
pop
mov
xchg
jmp
lret
lds
out
mov
add
mov
ss
test
add
xor
mov
add
add
adc
fabs
push
mov
faddl
dec
pop
pop
add
lret
inc
pop
xor
mov
mov
je
xor
mov
pop
xor
sbb
movsb
pop
inc
or
xchg
cmp
jae
push
add
ret
sbb
shr
addb
fldl
push
jmp
dec
imul
cltd
pop
or
push
mov
add
add
jmp
mov
mov
adc
or
lods
call
fdivrs
mov
mov
add
dec
inc
jae
xchg
or
das
test
sahf
sub
ss
xor
mov
mov
push
mov
cmp
mov
adc
aas
cvttps2pi
or
mov
call
add
movsl
mov
add
adc
add
jmp
es
jae
fidivrl
divl
mov
add
and
cwtl
xchg
lods
and
test
loope
add
sbb
in
fisttps
mov
add
movsb
inc
popf
in
and
ret
mov
add
add
push
inc
add
mov
fbstp
lret
jg
aaa
mulb
cwtl
ljmp
add
rorl
mov
data16
xchg
iret
mov
jnp
add
lret
ja
add
call
push
loopne
mov
out
adc
mov
mov
xchg
data16
and
out
mov
add
shll
mov
or
mov
not
lret
mov
xchg
jmp
add
add
push
out
push
or
mov
into
ss
pop
fstpl
fiaddl
jp
pop
cmpsb
jae
jmp
mull
sub
cmovb
mov
mov
mov
mov
dec
fcomps
sbb
mov
loope
fildll
adc
sbb
pop
int
mov
hlt
add
mov
cmpsb
jb
mov
sub
int3
mov
clc
push
add
mov
add
mov
add
mov
adc
mov
jl
dec
sub
rcrl
add
mov
push
mov
mov
mov
add
jo
mov
out
sbb
rcr
inc
pushf
bound
mov
adc
mov
lcall
add
pop
fnsave
add
fldenv
mov
fs
mov
fidivrl
je
jne
and
mov
add
fldt
add
add
mov
mov
add
ret
push
out
push
imul
aas
loopne
mov
loopne
mov
lds
sub
mov
inc
add
scas
dec
jo
mov
mov
pop
mov
sbb
push
inc
test
mov
push
xlat
popf
fcompl
jle
or
enter
push
sbb
add
sub
imul
dec
xor
mov
jg
out
mov
mov
mov
cmp
sub
dec
fidivs
mov
in
cmpsb
jne
out
and
add
loope
xchg
push
dec
out
add
int3
fmuls
mov
pop
lahf
dec
pop
pop
and
mov
push
loop
mov
mov
jp
cltd
cmpsl
mov
imulb
pop
in
cmp
daa
addl
push
pushf
js
xor
add
je
adc
mov
mov
mov
bound
mov
in
js
push
push
xchg
int3
pop
ret
push
mov
mov
movhps
adc
jns
add
inc
repnz
xor
sti
mov
push
sbb
std
aad
imul
push
ja
insb
push
scas
sub
jo
mov
mov
adc
mov
jnp
test
xor
popa
shrl
xchg
lock
mov
xor
mov
enter
dec
xchg
cli
mov
movsb
dec
lods
mov
jae
xor
jo
mov
add
nop
add
lret
rcll
js
mov
aas
sub
in
gs
add
xchg
jge
scas
aaa
mov
fisubrl
ljmp
popa
mov
and
add
pop
imul
sub
add
mov
addb
js
loop
mov
pop
jns
add
add
add
mov
dec
inc
push
jmp
stc
xlat
lock
jmp
cwtl
mov
out
xor
add
int
add
lock
jne
outsb
xor
adc
jo
mov
mov
xchg
sub
add
xor
sub
cmp
stc
or
add
push
add
add
add
mov
mov
ja
and
dec
or
add
sti
jg
pop
xchg
imul
sbb
mov
jnp
ret
sti
mov
scas
dec
push
add
add
scas
jne
mov
mov
sbb
ds
push
push
arpl
aam
cmpsb
addb
loop
mov
incl
add
xor
mov
repnz
jns
pop
dec
arpl
mov
add
mov
add
test
sub
mov
ds
pop
out
ljmp
mov
add
movsb
mov
jne
rolb
leave
mov
mov
pop
inc
add
lret
mov
mov
push
fdivl
push
pop
addb
and
cmp
addl
mov
add
mov
inc
push
cmpsb
sahf
or
mov
pushf
adc
pop
dec
cmpsb
jne
xor
mov
dec
stos
push
mov
add
cmc
inc
or
popf
mov
add
mov
mov
fcompl
stc
add
add
add
