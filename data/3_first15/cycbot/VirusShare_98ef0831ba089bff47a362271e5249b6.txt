xchg
lret
inc
lret
ljmp
and
popa
or
adc
and
add
cmc
pop
mov
movsl
stc
popa
xor
out
adc
sbb
nop
sbb
sub
mov
jb
mov
sbb
cmp
and
push
in
sbb
add
cld
jp
addb
push
fs
cmp
leave
inc
add
bound
mov
push
dec
mov
pop
ret
movsb
push
stos
adc
mov
idivl
test
fs
sbb
and
inc
add
xchg
jmp
mov
pop
enter
sub
and
icebp
ffree
add
xchg
jmp
mov
xor
jns
lods
ja
mov
lcall
add
mov
mov
mov
push
stc
adc
scas
mov
sbb
push
loope
jbe
add
jb
xlat
inc
add
sbb
addb
imul
push
enter
mov
mov
push
pop
push
sub
jmp
aad
rolb
add
dec
aad
fwait
push
popf
cs
gs
push
add
rolb
test
imul
jl
jbe
jo
dec
out
cs
movl
incb
out
xchg
aad
fidivl
outsb
out
cmpsb
xlat
push
test
sub
aaa
clc
xorl
test
inc
add
pop
mov
add
out
lock
rcl
rcll
lock
push
dec
iret
in
add
mov
push
pop
cwtl
ds
out
sbb
push
adc
popf
inc
addr16
rolb
add
mov
dec
dec
ds
push
or
mov
add
push
inc
add
cld
loope
ljmp
pop
xor
jnp
pop
pop
repz
jae
fildll
sbb
lret
aaa
imul
inc
inc
add
and
add
xor
add
add
and
test
les
mov
mov
test
xchg
mov
xor
push
xchg
call
add
add
mov
xchg
jp
mov
xchg
cmpsl
bound
loope
ret
sbb
mov
aas
movb
mov
lcall
push
jo
faddl
add
pushf
rorl
add
mov
add
push
dec
clc
push
add
mov
cmp
add
jae
or
add
mov
loope
or
jmp
scas
dec
jmp
cwtl
sbb
aaa
add
jbe
cmc
add
subl
cmp
push
dec
lea
or
inc
add
cs
add
es
and
add
add
dec
imul
or
popf
dec
fisttps
push
add
enter
cmp
jno
cwtl
insb
sar
outsl
sub
aas
clc
sub
mov
enter
pop
hlt
and
add
push
out
js
add
push
add
outsl
mov
pop
outsb
lret
mov
rolb
and
jp
push
fcmovne
sbb
ret
adc
pop
sbb
xchg
sbb
xchg
adc
mov
jmp
mov
jle
test
add
test
cwtl
ror
push
inc
push
das
sahf
sbb
pop
jns
push
pop
inc
out
jbe
mov
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
sbb
hlt
adc
cmpsb
cmpsb
jbe
xor
je
inc
das
icebp
cmc
scas
data16
lahf
push
add
fstp
cmp
jle
mov
incl
push
push
js
add
jns
scas
jmp
out
les
cld
jns
xchg
sub
fsubrs
pop
ds
add
pusha
add
cmp
jbe
fstpt
fisubl
add
lahf
mov
push
movsl
insb
int3
jle
adc
adc
test
jae
mov
add
mov
test
into
rorb
sub
movsb
insb
xlat
call
inc
add
in
imul
jbe
dec
xchg
gs
in
jecxz
daa
mov
dec
jae
mov
test
in
fwait
pop
lock
xor
outsl
push
imul
call
rolb
repnz
out
xchg
xchg
xchg
aaa
ficomps
mov
ficomps
or
cld
out
testl
push
push
mov
mov
xchg
mov
mov
addb
movsb
std
fbstp
lret
pusha
add
mov
jno
xchg
and
add
popa
and
in
scas
push
xchg
in
divl
mov
popf
xor
pop
adc
pop
pop
xor
cwtl
mov
adc
out
mov
aad
shrl
out
fisubl
jmp
ja
mov
pop
dec
test
out
call
add
lret
addb
add
or
in
sub
jo
adc
mov
adc
hlt
sahf
lcall
dec
dec
repnz
pusha
add
xchg
data16
pop
leave
pop
out
sbb
sti
inc
addb
fisttps
push
pop
inc
hlt
lret
and
rorl
insb
shll
out
add
enter
cmp
cwtl
aas
fdivs
dec
sbb
jp
mov
dec
sahf
nop
shrl
inc
lahf
jecxz
add
sarb
dec
outsb
test
std
mov
inc
add
xor
xor
add
rcrl
ja
inc
mov
shlb
mov
js
push
or
test
andl
dec
mov
mov
pop
in
add
repnz
lahf
push
push
cmp
ret
jg
iret
and
sub
in
xchg
rcrl
add
pushf
lods
rcrb
loopne
xchg
movsl
xor
dec
xchg
js
pop
orl
insb
push
add
adc
lds
dec
xor
scas
int3
xchg
add
add
jge
es
mov
inc
add
adc
clc
xor
outsb
lret
lret
mov
aad
mov
mov
popa
in
outsl
mov
xor
stos
xchg
adc
cmp
add
in
iret
cmp
rolb
push
or
add
repnz
repz
shl
mov
mov
add
xchg
pop
loope
mov
stos
xor
mov
xor
sbb
xor
add
mov
repz
icebp
repz
jne
addr16
dec
inc
add
imul
jmp
jnp
mov
mov
pop
mov
mov
cmpsl
xchg
mov
add
inc
jns
jb
out
pop
xchg
clc
jb
add
xchg
cwtl
push
xor
shr
xchg
jns
add
cltd
cmp
daa
cs
cmp
add
mov
insb
sbb
push
rolb
add
sahf
adc
hlt
mov
call
xchg
test
fnstsw
push
mov
shrl
mov
xor
sub
add
outsl
cmp
jg
mov
stc
cwtl
aas
cltd
cli
pushf
pop
rorb
pop
jmp
pop
and
or
mov
xor
rcll
leave
adc
in
or
sub
xchg
and
loop
outsl
in
add
es
pop
fcomi
pop
lret
int
mov
or
dec
push
push
sub
xchg
stos
iret
insl
xor
sub
dec
dec
sahf
dec
addb
mov
push
add
dec
fnstsw
lcall
jns
xor
in
mov
sub
jnp
add
out
add
inc
add
dec
xchg
insl
pop
sahf
jb
and
sbb
pop
add
jp
jne
ss
dec
mov
pop
imul
inc
mov
sbb
inc
out
or
and
pop
rolb
push
jmp
xchg
addr16
jae
in
jp
lcall
data16
in
add
push
jge
rolb
popf
sub
inc
mov
adc
push
pop
dec
je
lret
mov
push
xor
bound
cs
pop
rolb
mov
cwtl
scas
es
out
mov
and
loop
push
shll
and
hlt
mov
xchg
cmp
adc
cmp
add
add
cmpsb
nop
sub
add
jne
arpl
mov
mulb
jmp
add
js
gs
loope
push
ljmp
loope
arpl
add
aad
stos
jae
add
add
in
dec
pop
cmp
rcll
mov
add
dec
scas
mov
clc
push
inc
add
mov
and
or
push
jle
mov
mov
sub
mov
adc
sahf
repz
add
lds
fs
xchg
xchg
mov
lret
bound
out
cmp
add
add
ljmp
mull
daa
lret
dec
mov
pop
call
test
fcmovnb
add
cltd
xchg
fmul
loopne
push
arpl
sub
cltd
addl
push
add
pop
push
movsb
sub
dec
pop
scas
sahf
int3
icebp
push
inc
sti
adc
shl
add
test
inc
add
les
loop
aas
jmp
mov
dec
out
test
add
ficoml
sbb
lret
idivl
add
sbb
add
inc
adc
cltd
out
cmp
mov
inc
add
hlt
lret
loope
je
add
ret
add
shll
in
mov
and
mov
pop
ficoml
jno
cmc
or
addb
inc
add
cltd
jbe
sub
inc
add
xchg
ret
jge
adc
insb
mov
add
add
cwtl
js
rolb
mov
test
movsl
js
push
ja
add
ret
sub
test
call
stc
sub
sbb
bound
xchg
insb
out
incl
dec
adcl
mov
loopne
insl
cld
rcrb
or
push
push
insl
ret
enter
pop
adc
addl
xchg
testb
ret
daa
divb
bound
ds
in
loopne
add
jne
sub
lods
adc
xchg
aad
fwait
aaa
leave
lcall
loop
or
rolb
fnsave
in
push
pop
adc
mov
ret
sbb
outsb
fstpt
into
mov
cmp
cmp
sbb
rolb
fistl
idivl
fidivs
icebp
icebp
fstps
gs
or
in
push
jg
imull
xchg
and
shrl
add
xchg
outsb
popa
iret
inc
adc
roll
add
jnp
jns
arpl
rcll
rcll
dec
insl
inc
add
jbe
mov
sbb
jnp
mov
push
hlt
call
mov
inc
jnp
and
sbb
scas
inc
add
faddl
scas
aas
xchg
test
or
add
ret
or
and
cmp
jmp
orl
mov
mov
sub
dec
sbb
stc
pop
outsb
fadd
push
push
enter
fiaddl
add
aaa
pop
js
adc
jb
add
std
scas
or
add
xor
std
lods
bound
popa
jle
stos
cmp
sti
mov
fs
xchg
mov
sub
push
rolb
sbb
xorl
outsb
add
ret
add
pop
xor
add
jp
add
pop
inc
dec
jns
pop
pop
movb
std
into
popa
jecxz
lahf
iret
add
jge
into
in
loope
xchg
pop
or
sub
xchg
test
mov
push
inc
add
add
mov
in
xchg
fists
bound
cmp
cli
sbb
xchg
mov
sub
dec
jg
push
ret
shrl
jnp
xchg
lods
scas
and
arpl
cmp
repz
mov
cmpsb
sbb
imulb
sub
imull
ret
sub
or
roll
cmc
push
aaa
dec
sub
push
inc
add
mov
xchg
xor
testl
std
add
js
dec
xlat
iret
mov
movsb
mov
in
mov
in
mov
add
aas
testl
popa
xchg
fisttpl
dec
outsb
dec
pop
xchg
push
push
lcall
mov
inc
mov
xlat
adc
pop
in
cltd
pop
aaa
addb
inc
add
aad
mov
shl
or
adc
movsb
cmp
and
incb
mov
inc
push
ret
pop
cmpsb
test
int
inc
imul
jns
mov
into
cmp
inc
add
inc
dec
sbb
pop
lahf
inc
lret
lea
test
push
mov
add
mov
sub
lods
sub
lahf
outsb
cltd
cmp
jae
test
aam
sub
adc
add
sbb
sub
cmp
loopne
and
popa
or
les
or
jle
xchg
sub
loopne
sbb
imul
add
bound
cmp
add
adc
dec
mov
and
add
and
jg
stos
cmpsl
lahf
or
or
add
scas
shll
xchg
decl
add
mov
mov
lods
push
push
add
clc
cmpsl
sub
les
in
ljmp
add
add
leave
inc
add
mov
loope
mov
mov
sbb
sub
cmp
imul
outsb
pushf
or
and
ljmp
int
jno
or
dec
repz
addb
movsb
mov
add
or
in
add
jns
inc
push
ja
dec
sub
hlt
xor
pusha
add
es
push
std
push
xor
mov
push
les
pop
and
xor
cld
push
scas
ret
add
mov
mov
adc
xchg
nop
pop
ds
jge
push
cltd
and
loopne
cmp
mov
mov
add
pushf
mov
xchg
pmullw
push
push
sbb
push
add
pop
fs
add
loop
lcall
pop
pop
mov
fcoms
stos
aam
bound
mov
imull
adc
mov
int3
mov
lret
cmp
or
add
xchg
jns
inc
jmp
out
inc
push
jnp
add
mov
and
nop
fdivrl
jbe
jns
lret
push
inc
add
or
jge
repz
sahf
mov
add
pop
ret
or
and
add
das
out
mov
add
ja
repnz
cmp
xor
mov
add
test
decl
jbe
mov
add
aaa
jbe
mov
sub
cs
sbb
cmp
cmp
push
call
bound
xchg
jl
push
dec
xor
les
repz
out
in
xchg
movl
lods
mov
adc
aas
jmp
cmp
movb
add
addb
lods
sti
pop
flds
push
sub
or
pop
pushf
shl
inc
add
in
cmc
jnp
cmp
fstl
jge
je
xchg
js
insl
adc
inc
out
fmul
push
mov
add
cmp
mov
lea
mov
cmpsl
pop
or
pop
je
pop
jmp
inc
add
add
addb
or
inc
add
bound
push
ljmp
iret
xchg
fstl
popa
pop
and
mov
mov
pop
adc
and
shll
pop
sahf
add
and
sbb
add
scas
rorb
lods
pop
addb
insb
out
hlt
xchg
repz
rcrb
xchg
and
sub
dec
and
xchg
push
push
push
enter
int3
clc
aam
je
aam
and
mov
jae
das
inc
add
movsb
pop
cmpsl
rcrb
addb
das
inc
add
fiadds
sbb
call
int3
pusha
add
lods
ret
mov
jns
jnp
inc
add
movb
mov
and
pop
in
or
sbb
repnz
push
dec
xor
inc
call
xchg
push
int3
negl
fwait
data16
imul
fcoms
std
push
xchg
dec
int3
fcmovb
add
out
addb
mov
add
arpl
loope
mov
and
jne
lret
xchg
aad
mov
fdivl
sahf
into
and
sahf
or
icebp
in
sbbl
add
inc
add
push
in
cmp
mov
clc
cmp
mov
loop
mov
outsl
cmpsl
out
mov
int3
aas
pop
in
aam
add
xchg
call
cmp
fldenv
addb
add
add
lret
fcomp
xor
ret
dec
xor
cli
mov
cmp
mov
cwtl
sbb
popf
int
and
popfw
adc
pop
cs
or
add
jp
addb
shlb
shll
test
add
add
cmp
xchg
or
push
jnp
inc
add
lret
std
sbb
mov
inc
add
in
sub
ret
hlt
insb
inc
add
outsl
mov
sbb
stos
in
add
cmp
mov
das
aas
push
leave
inc
ret
push
icebp
xchg
sbb
pop
inc
add
cmp
std
pop
or
test
sbb
push
filds
pop
pop
cs
push
pop
xor
add
adc
scas
shll
cli
xlat
push
xchg
pop
inc
sub
adc
scas
jne
mov
or
aaa
mov
pop
push
scas
pusha
add
sti
push
mov
ds
push
mov
rolb
lea
shrb
std
push
and
jae
mov
repz
in
add
scas
cmpsl
out
push
pusha
add
mov
dec
jno
xchg
xor
neg
cmc
sbb
push
pusha
add
gs
imul
cwtl
or
mov
scas
rolb
jnp
call
pop
nop
mov
mov
dec
cmp
jno
arpl
divl
rolb
adc
movb
add
add
sahf
fiadds
or
add
pop
stc
dec
outsl
pushf
mov
in
xchg
sub
jmp
cmp
ja
or
jge
movsl
cmpsl
inc
stos
and
int3
mov
lock
add
rorb
jle
addb
das
packssdw
cmpsb
leave
ret
ja
add
ss
add
fdivrp
cmp
or
cmp
sub
lret
cltd
ja
mov
or
mov
ficomps
aad
xor
sahf
mov
add
add
jnp
mov
xchg
js
sub
nop
sbb
lds
add
jb
add
scas
mov
negl
insb
jb
shlb
or
add
mov
addb
gs
add
add
sub
aam
cltd
bound
inc
add
lock
mov
mov
sahf
outsb
jne
pop
xchg
jae
addb
add
jno
sub
test
inc
add
shrb
or
xor
pop
cmp
or
add
dec
outsb
arpl
jmp
jbe
sbb
add
insb
scas
arpl
mov
or
add
out
xchg
lret
dec
mov
add
jns
push
adc
enter
add
montmul
cmpsb
addb
mov
frstor
iret
push
mov
notl
addb
cmp
add
sti
das
shl
dec
add
rolb
aaa
movb
add
sbb
pop
addb
sbbl
sti
imul
mov
sbb
arpl
pop
dec
adc
fwait
mov
cmp
mov
test
ret
aam
add
cli
xchg
cs
sbb
cmpsl
pop
xor
adc
mov
adc
movb
or
fmull
push
repz
subl
aas
jg
and
mov
imul
add
cmp
xor
mov
scas
adc
notl
sbb
lock
iret
mov
cmp
in
lock
jno
out
pop
mov
pop
mov
push
test
inc
in
cmp
cmpsb
sub
iret
les
test
rolb
fisttpl
data16
jns
sub
scas
xchg
push
mov
and
push
movsl
out
and
pop
frstor
fucomip
cmpsb
sub
arpl
ret
and
addb
outsl
repz
sbb
lock
movsb
jmp
mov
adcl
rcr
arpl
insl
mov
mov
lcall
add
mov
getsec
mov
cmc
mov
dec
push
fadds
xor
arpl
dec
pop
dec
rorb
movsl
lret
daa
movsb
lret
inc
data16
push
out
aaa
dec
es
mov
add
js
int
lea
cld
jb
add
push
out
jle
cli
and
leave
syscall
sub
loope
fdivrs
iret
sarl
int
in
outsl
mov
adc
cltd
dec
dec
or
in
add
clc
in
repnz
add
adc
pop
pop
jo
sub
addb
dec
stos
sub
icebp
jecxz
push
xor
pushf
ret
out
jl
loope
inc
mov
bound
mov
or
fsubp
lds
xchg
or
push
mov
subl
and
sldt
out
sti
cli
jne
mov
imul
gs
movb
cmp
mov
scas
adc
sbb
loope
add
xchg
test
mov
in
mov
addr16
mov
cmpsb
sbb
fcomip
jbe
add
mov
rol
add
cli
cld
jbe
sbb
lods
cs
fdivrs
mov
or
xchg
das
cmp
add
shll
xchg
xor
xlat
push
dec
cmc
pushf
and
out
rolb
add
sub
mov
and
push
jp
push
add
movsl
dec
or
add
jge
ret
aad
les
test
push
mov
add
jno
movsl
jg
jg
push
inc
add
jns
ret
movsl
mov
movb
mov
mov
mov
jge
sti
mov
jnp
mov
cmp
pop
pop
jb
jge
ljmp
insl
sbb
pop
dec
std
push
stc
or
mov
scas
fstl
push
push
sbb
xor
adc
pop
int
rolb
lahf
and
out
inc
add
lret
lea
adc
rcrl
xchg
cmp
lret
mov
mov
enter
fisttpll
int
mov
sbb
inc
add
xor
fidivs
jmp
cmp
push
mov
lahf
int
add
bnd
cmp
outsb
test
mov
add
pushf
adc
les
sub
out
aas
addr16
test
adc
add
repz
nop
xor
inc
add
mov
fistpl
js
mov
mov
add
leave
fisttpll
sbb
bound
push
cmp
cli
imul
std
jbe
gs
xchg
xor
xor
xchg
pusha
add
mov
lret
add
or
jg
insb
lret
jge
ret
inc
add
inc
add
add
inc
add
mov
mov
in
test
call
sub
insl
push
cwtl
mov
mov
xchg
cmc
and
lahf
loopne
data16
push
mov
and
mov
adc
addb
jl
cmp
shrl
test
add
jle
adc
add
push
xor
dec
imul
insl
mov
adc
adc
insl
lds
movb
into
stos
lret
push
mov
mov
jb
fisubrs
push
pop
scas
xor
pop
sub
mov
in
jne
cmp
scas
add
scas
sbb
call
push
pop
pop
dec
push
hlt
sbb
push
lretw
mov
lea
cmp
add
fwait
mov
popf
hlt
hlt
je
add
das
rorl
inc
add
cs
mov
fmull
mov
pop
xchg
fstpt
dec
xchg
lds
sbb
mov
cmc
sbb
test
or
mov
mov
add
xor
addr16
add
in
outsl
push
xchg
aad
movb
outsl
loop
outsb
loopne
fcoms
cmp
rolb
int3
or
inc
pushl
in
arpl
or
xchg
jbe
push
jge
adc
insl
pop
and
fisubrl
outsl
add
ljmp
cmp
cs
les
lods
push
add
cmp
fs
inc
jb
xor
mov
ljmp
divl
sub
add
sarl
mov
lahf
jno
clc
sti
loopne
hlt
test
imulb
out
iret
xchg
mov
mov
cltd
xor
add
lock
xor
jbe
inc
xor
mul
xor
in
ffree
add
pop
add
add
push
lock
push
push
shrl
pop
and
xchg
lods
je
fwait
outsb
push
xchg
gs
xor
push
mov
cwtl
js
mov
xchg
mov
clc
mov
ret
xchg
add
xor
mov
movb
push
add
out
pop
in
scas
xchg
sub
jo
cmp
mov
dec
dec
push
ja
jo
add
addb
cmpsl
orl
cwtl
cld
cmp
fwait
sbb
gs
add
das
std
and
push
xchg
sbb
test
in
adc
lret
xor
std
in
adc
sbb
or
push
sarl
xchg
mov
aas
out
jmp
sub
add
jp
and
xor
inc
add
xlat
leave
push
add
add
add
addb
or
sub
das
xchg
fcomps
jb
hlt
push
outsb
clc
imul
dec
push
loop
add
jge
mov
fadds
repz
daa
rol
add
sbb
aad
popf
and
lds
mov
add
mov
sub
dec
popa
push
or
sub
xor
mov
xchg
pop
mov
out
aam
add
mov
xchg
xchg
inc
cmpsb
inc
ljmp
cvttps2pi
adc
cmc
sub
int
xchg
push
mov
add
xor
cmp
sarl
lock
cmc
mov
mov
cmp
mov
loopne
dec
cmp
lock
push
jmp
mov
jge
mov
sub
jecxz
js
cli
xchg
pop
jp
loop
int3
jne
xlat
insb
adc
or
mov
lds
rclb
fisttpll
sbb
and
xchg
sub
jne
ja
xor
ss
add
dec
mov
mov
push
jmp
cli
add
sbb
jecxz
insl
rcll
movsb
dec
sbb
sbb
das
int
jbe
cmp
sub
jl
pop
push
add
fwait
loop
push
andl
std
arpl
and
add
mov
sbbl
add
adc
mov
aad
popa
adc
bound
push
cmp
xor
add
sbb
cmp
outsb
sbb
pop
sarl
push
nop
jg
mov
add
sub
stc
scas
repnz
pop
lods
and
scas
mov
insb
mov
fistpl
or
je
mov
icebp
into
inc
pop
pop
sbb
and
ret
cs
mov
add
sahf
nop
xchg
dec
enter
pop
aas
xchg
mov
insb
sbb
pop
jmp
and
xor
daa
repz
js
int
popa
sahf
aam
adc
movsb
dec
and
push
addl
push
add
movsb
push
fldenv
pop
mov
rcrb
add
nop
cld
xchg
arpl
sarb
fimuls
addb
movsl
xchg
xchg
mov
push
js
rcrl
bound
movb
cmp
imul
adc
mov
add
add
call
in
lods
repz
lret
jnp
popa
sub
mov
push
in
mov
and
movsl
loope
mov
sahf
xchg
adc
dec
movl
sti
mov
mov
jg
insb
lock
cmp
popa
addb
pop
movsb
les
repz
add
cs
xchg
rcrb
push
inc
jl
fcmovbe
fldcw
sahf
and
cs
xor
push
add
cmpsl
xchg
cmp
adc
sbb
or
push
add
add
shll
ficoms
and
mov
jmp
lock
mov
add
add
lret
in
ja
loop
push
out
or
add
mov
decl
jno
insb
jb
adc
mov
out
inc
add
enter
xchg
push
sysenter
mov
shlb
and
add
nop
cmp
or
icebp
pop
and
xchg
dec
mov
jno
pop
pop
ret
daa
pop
push
push
mov
adc
gs
jecxz
adc
add
dec
int3
mov
inc
aas
js
ret
and
jns
loopne
arpl
add
add
dec
ror
mov
add
mov
mov
rolb
icebp
fistpl
jge
adc
lods
add
inc
int3
pushf
fstpt
neg
jmp
pop
sbb
ds
shll
jae
mov
fwait
test
or
sub
pop
jmp
mov
add
jg
in
fwait
add
xchg
bound
xchg
loop
add
add
addb
push
and
ss
sbb
sbbl
push
fidivl
xchg
mov
pop
fldcw
mov
leave
jae
push
or
loope
sub
xchg
in
pop
inc
add
popa
pop
inc
add
pushw
jle
rolb
in
dec
lret
sub
mov
pop
imull
test
mov
xor
popa
adc
pop
pop
pop
fnstsw
inc
mov
gs
add
mov
sub
cmp
push
push
in
shll
sub
repz
pop
jno
jnp
cwtl
rcll
jae
mov
add
add
xor
icebp
lret
xchg
outsl
hlt
test
cmc
enter
scas
mov
int
stos
mov
push
aad
mov
rolb
lods
inc
add
test
scas
gs
inc
pop
dec
les
imul
aaa
pop
and
and
push
mov
ffree
and
imul
inc
adc
xchg
mov
or
xchg
jmp
aad
hlt
inc
add
pop
mov
add
add
push
push
and
rolb
and
movsb
lahf
mov
xchg
repnz
add
or
push
xchg
mov
jne
inc
dec
subl
push
daa
adcl
push
push
lcall
fld
movsb
iret
rolb
add
fldt
xchg
jnp
add
dec
dec
jecxz
sbb
inc
dec
xchg
mov
add
inc
add
dec
sbb
xor
inc
push
outsl
inc
add
cmp
add
xor
leave
cli
pop
jb
aad
addb
xor
sahf
and
sub
adc
add
out
negb
push
add
fwait
call
dec
sti
lds
inc
add
cmp
les
out
insl
mov
xor
adc
mov
push
ja
jb
or
xor
mov
pop
mov
cltd
int3
aaa
jb
inc
add
inc
add
lea
data16
imul
mov
pop
daa
fmulp
mov
imul
clc
ss
out
push
xchg
cmp
or
cmp
dec
ja
fidivrs
jp
jb
cmp
mov
adc
aam
pop
dec
test
or
call
test
or
sub
aas
lea
add
add
leave
inc
fcmovbe
outsb
cld
int
dec
sbb
ds
addr16
add
pop
push
iret
addr16
aam
sub
lret
sub
add
mov
xchg
and
aad
push
inc
gs
mov
or
sti
sub
dec
outsb
ljmp
aas
fidivl
loopne
flds
add
in
push
outsb
test
add
out
fldlg2
mov
mov
mov
ficomps
add
ja
inc
mov
sub
cs
add
add
fistpll
pop
or
movsl
push
leave
pop
and
push
inc
loop
mov
lret
push
addb
adc
js
cmp
gs
stc
mov
add
outsl
aad
add
and
fcmovu
nop
sub
push
push
je
enter
stos
mov
pop
stc
test
ffreep
add
xlat
clc
movsl
inc
imul
or
ja
push
gs
mov
pop
xor
dec
iret
std
jnp
iret
fildl
ss
mov
xlat
cld
into
mov
add
bnd
push
jp
loope
jnp
push
lock
inc
leave
mov
push
push
pop
mov
mov
rolb
mov
dec
mov
repnz
cmpsl
inc
add
icebp
add
and
repnz
cmp
add
sub
jp
in
push
lods
mov
push
cmp
das
fdivrp
stos
sub
cmc
and
sub
add
add
mov
mov
and
dec
loope
repnz
ja
loop
inc
add
mov
xor
mov
sbb
xchg
inc
add
out
lcall
xor
mov
cmp
add
mov
jecxz
add
mov
jb
addr16
push
je
push
add
dec
cmp
aad
inc
test
xor
sub
out
gs
add
xchg
jae
sbb
push
dec
sbb
push
mov
std
xchg
popf
pop
ret
sub
andl
sub
or
mov
push
dec
rcrb
mov
cmp
xor
cld
dec
call
push
and
lock
mov
enter
adc
les
or
pop
push
mov
std
mov
mov
jno
das
cmpsb
pop
std
mov
add
scas
sti
jmp
sbb
adc
rcll
jno
xor
cmp
xchg
jns
arpl
push
add
sbb
popa
jo
mov
pop
imul
add
test
jbe
jmp
push
arpl
imull
add
fwait
cwtl
pusha
add
add
dec
add
xchg
out
mov
push
lods
sti
xlat
dec
into
ljmp
push
outsb
pop
add
lds
cmp
xchg
stc
sbb
xchg
or
push
outsb
ja
lret
cmpsl
sub
into
mov
lahf
cli
leave
xor
ja
push
hlt
pop
mov
loopne
jle
mov
mov
pop
sub
add
out
addb
mov
lods
imul
ss
icebp
loope
jbe
mov
cld
push
test
xor
mov
bound
dec
popl
add
leave
in
int3
mov
xchg
inc
add
pop
sub
hlt
loopne
mov
int
daa
xlat
test
sbb
rorl
sub
add
mov
push
push
sbb
call
dec
lret
das
aaa
dec
je
into
fwait
ljmp
add
fwait
and
ret
gs
ret
insl
loopne
jecxz
lret
dec
movsb
mov
daa
ljmp
push
inc
add
dec
push
mov
inc
addb
les
lods
out
bound
ds
sbb
movsl
cltd
mov
stc
data16
test
or
and
cltd
xor
mov
xchg
push
mov
mov
rclb
jo
mov
enter
cmp
mov
cmpsl
sub
cli
fimull
sub
shlb
jno
stos
add
cltd
rolb
xchg
add
out
inc
cmc
fstps
push
cmp
add
fsubs
popf
cmp
xchg
and
sbbl
mov
stos
mov
test
mov
outsb
xor
adc
addl
adc
cmpsl
sub
or
add
out
push
and
in
enter
xlat
sub
mov
or
add
test
stos
xchg
xor
and
push
mov
aad
jge
xlat
jne
cmpsb
add
pop
sub
je
mov
test
in
arpl
and
jne
add
or
add
xchg
cs
mov
aas
shr
scas
pop
outsl
aad
loopne
cmp
sub
mov
jl
cmc
add
xor
loopne
movb
sahf
loope
cmp
sub
std
sbb
fcmovnb
add
inc
add
push
icebp
inc
add
push
push
fdivrs
fwait
sub
add
fadd
add
movlps
push
bound
iret
sbb
xor
cmp
arpl
add
daa
inc
mov
test
stos
jecxz
test
cmpl
xor
mov
push
dec
ret
mov
inc
mov
or
add
leave
mov
or
mov
add
add
loope
imul
mov
xchg
push
sbb
push
cmp
sahf
scas
add
push
addb
fisubl
movb
adc
arpl
pop
movsl
mov
imul
loopne
push
mov
xchg
movb
jecxz
cwtl
jecxz
repz
xor
pop
cmpsl
aam
adc
aad
cmp
inc
add
addb
add
aaa
iret
popf
sti
movsl
shll
popf
add
jb
das
test
or
pop
mov
jg
hlt
jae
outsb
nop
mov
inc
add
cmc
test
add
pusha
add
mov
push
es
dec
xor
insl
mov
icebp
imul
pop
mov
insb
push
psubusw
push
add
sbb
and
aaa
inc
add
mov
dec
sub
ja
mov
mov
sbb
inc
add
int
lea
ds
ret
jno
xor
add
jl
loop
mov
sti
push
dec
lret
arpl
add
xchg
test
daa
fisttps
sbb
mov
sahf
daa
test
in
mov
add
bound
and
mov
dec
mov
jne
movb
scas
dec
inc
push
jge
test
cmc
inc
lahf
incb
dec
push
jae
rol
and
sbb
adc
jp
jg
lahf
pop
sbb
dec
fldcw
into
pop
adc
in
mov
fs
add
data16
les
jne
fidivrl
jns
addb
mov
nop
sub
mov
xchg
outsb
and
loopne
in
sub
dec
lds
mov
out
repnz
enter
add
and
imul
lods
mov
in
loopne
add
or
xor
xchg
bound
add
lock
and
add
push
jns
outsb
test
or
loope
out
cs
xor
cmp
mov
fcomps
lods
cmp
inc
bound
add
add
mov
fbstp
fildll
push
and
nop
mov
add
fwait
pop
push
mov
fs
sub
popa
ds
mov
mov
pop
testl
adc
into
les
cltd
ret
outsb
xorl
movsb
in
sub
enter
or
int
popa
cld
jo
movsb
or
or
inc
add
loop
sbb
push
shll
adc
popf
xchg
call
shll
push
cld
rcr
jbe
pushf
mov
mov
adcl
xor
fbstp
andl
fisttpl
sub
dec
adc
add
out
cmp
fiaddl
enter
enter
cmp
sub
pusha
add
add
add
sub
pop
stos
in
xchg
incl
add
lods
int3
push
and
movsb
inc
cmp
mov
add
add
int
dec
push
cltd
sahf
mov
jge
jne
repnz
sub
and
mov
mov
cmp
es
enter
loop
mov
sub
adc
sbb
imul
insl
sub
jp
mov
stos
int
aad
bound
xchg
sti
push
jmp
test
mov
inc
add
in
or
bound
and
mov
ret
xor
les
add
add
les
mov
add
sub
pusha
add
es
loope
jbe
cmc
mov
rolb
xchg
pop
out
stos
divl
jge
add
pop
inc
add
ret
adc
add
jbe
aam
xchg
cld
or
cmp
add
and
shr
pop
cmp
lcall
es
inc
jno
adc
and
nop
out
xlat
in
xchg
jno
ret
out
popa
xchg
test
add
fnsave
adc
cwtl
xchg
sub
sub
pop
xchg
mov
in
or
mov
pop
and
pop
xlat
lods
add
popf
iret
sub
les
push
stc
cmpsb
out
sarl
imul
add
pop
inc
add
lea
scas
dec
sti
mov
scas
das
lahf
jo
add
inc
add
xchg
add
jne
sub
or
je
imul
lret
mov
jg
sbb
insb
out
dec
pop
fimuls
stos
stos
lock
rcl
cmp
mov
daa
popa
fidivl
stc
movsl
les
int
aaa
jns
outsb
dec
rorl
fldl
movq
lock
data16
fidivrl
xor
lds
pop
hlt
fiadds
lret
push
shlb
aam
jge
out
sub
adc
and
push
js
test
hlt
fwait
pushf
inc
pop
lret
jle
ljmp
dec
outsl
cmpsl
in
in
lret
add
or
pop
addr16
mov
lods
rolb
ja
pop
scas
inc
sbb
sub
jae
dec
xor
add
add
lcall
jb
sbb
out
xchg
ja
mov
movsl
rorl
loopne
push
mov
cwtl
lret
sti
jge
idivb
add
add
mov
cld
pushf
lods
int
jne
mov
add
xchg
add
fnstcw
jnp
push
push
add
cmp
or
aaa
insb
les
mov
pop
jl
mov
lock
sub
mov
add
stc
or
bound
lods
clc
scas
mov
jb
or
push
ljmp
jae
push
xchg
cmpsl
loope
lock
push
scas
pop
mov
add
sub
sub
into
divb
es
mov
sbb
mov
int
rcrl
and
test
mov
outsl
push
insb
sti
stos
into
lock
sahf
cli
and
out
daa
add
inc
push
call
xchg
inc
insl
dec
add
and
xchg
fucomip
lds
ljmp
loopne
insb
mov
push
add
out
les
stc
dec
sub
out
ret
outsl
enter
out
mov
das
mov
pop
or
push
scas
pop
add
add
mov
es
jb
mov
jne
ljmp
ss
mov
enter
add
push
sub
pop
test
pop
mov
sti
pop
ss
sbb
and
mov
test
mov
arpl
notl
insb
ret
adc
ffreep
add
xlat
jns
push
or
push
push
add
push
scas
pop
inc
add
inc
add
cmp
xchg
add
int3
mov
mov
loop
lods
cltd
sahf
insl
in
fdiv
addr16
movsl
sub
mov
sbb
or
rcr
mov
mov
out
sbbl
int3
sbb
imul
xchg
idivl
jns
add
add
dec
dec
or
mov
aaa
inc
or
dec
mov
sahf
push
and
stos
push
int3
sbb
repnz
push
leave
adc
add
add
out
xchg
xor
xor
add
xlat
push
add
out
repnz
xor
sub
jb
add
inc
mov
adc
cs
aad
add
push
rcr
add
call
filds
stc
cmp
add
push
mov
and
or
mov
cmp
mov
add
push
cltd
lods
xor
dec
jl
jae
pop
mov
and
mov
xlat
in
sub
or
add
or
stc
xor
sbb
add
ljmp
insb
pushf
ret
xchg
jnp
pop
and
pop
lds
add
mov
addb
rolb
inc
movb
int
jecxz
mov
shlb
out
div
mov
or
in
test
cmpl
pop
pop
mov
dec
outsb
aad
pop
lcall
fs
push
fcoml
pop
ljmp
inc
add
add
in
sub
cmp
mov
push
pop
stc
sbb
pop
and
mov
das
fsubrl
xor
adc
add
pushl
lods
insb
sbb
mov
sbb
cmpsl
mov
pop
je
fists
ficompl
or
mov
incb
mov
movsb
jmp
mov
rolb
mov
aas
jl
cmpsb
movb
mov
jmp
push
sbb
pop
mov
aaa
push
push
les
jmp
push
subl
xor
pop
sub
inc
cmpl
sub
imul
xchg
ljmp
testb
adc
add
lods
lea
add
xchg
pop
mov
mov
sbb
fistpl
add
adc
mov
aas
shlb
cmp
add
dec
imul
int3
or
cmp
push
mov
mov
outsb
xor
pop
loop
add
cltd
and
out
sbb
inc
add
xlat
cmp
xchg
outsl
in
arpl
xor
sub
cmc
dec
dec
or
xchg
aad
add
xchg
es
add
xor
test
push
xlat
or
add
cmpsl
pop
outsb
pop
inc
cltd
dec
mov
add
mov
arpl
sub
mov
ret
clc
pop
pop
mov
add
fcmovne
mov
aam
mov
push
in
notb
mov
mov
push
ret
push
mov
or
sub
or
jb
xchg
jns
out
mov
leave
fdivrl
out
pop
ficomps
pop
clc
hlt
je
add
pushf
push
add
addb
adc
ds
outsl
loope
pop
inc
lods
add
dec
aas
fs
les
sti
arpl
cli
pop
popa
iret
insl
xchg
lea
scas
in
xor
cmc
jae
mov
xor
loopne
mov
ret
mov
jecxz
mov
or
jmp
icebp
stos
repnz
push
test
mov
ja
test
cmp
outsl
mov
inc
dec
jg
push
idivb
out
and
mov
jb
popa
rorl
push
add
shl
adc
push
arpl
mov
inc
add
ja
jo
xor
repnz
and
int
fmul
aas
sub
xchg
xchg
imul
ljmp
cli
mov
ret
jbe
fnstenv
push
mov
jns
cli
mov
sub
ljmp
insb
xor
imul
out
xchg
jbe
or
sbb
xor
popf
fs
inc
dec
sub
mov
add
add
pop
imul
xchg
xchg
pop
cmp
arpl
fmulp
mov
repnz
xor
std
mov
addb
fdiv
in
stos
sbb
call
movb
jno
mov
mov
sbb
pop
and
cwtl
xchg
cmpsl
mov
add
das
mov
pusha
add
dec
sbb
es
divb
mov
movsb
les
js
cmp
mov
lods
mov
dec
mov
push
xor
into
mov
mov
loopne
sti
adc
loope
ret
pop
push
les
jl
les
outsl
icebp
addr16
and
cmc
stos
stos
push
add
cmp
sbb
or
and
jnp
or
ret
dec
sbb
sub
shll
shll
sbb
leave
sub
aam
mov
xor
xchg
addb
shlb
cld
or
xor
inc
add
xor
aas
std
jb
pop
add
mov
outsl
xlat
cmp
insl
push
xchg
sbb
fmull
push
jge
cld
in
add
add
sar
jne
ficompl
call
or
shlb
add
sbb
imul
arpl
sub
and
mov
out
lret
bound
shl
scas
gs
jmp
gs
je
push
mov
xchg
cmpsl
adc
pop
fsubl
and
enter
fwait
jmp
roll
jno
test
mov
data16
jne
ret
jge
or
add
adc
add
add
aas
jl
loop
push
mov
out
hlt
cmp
scas
cli
andl
jg
sarb
mov
mov
mov
mov
jns
and
fcmovnb
add
hlt
jae
xchg
or
in
xlat
push
push
loopne
leave
mov
ret
add
xor
mov
push
mov
add
mov
shl
xchg
cmp
sub
mov
scas
in
mov
popl
sub
pop
dec
lods
dec
popf
mov
xchg
and
ljmp
ljmp
push
push
lock
sbb
cltd
jl
enter
xchg
cltd
hlt
xor
push
push
fidivrl
sbb
lock
add
lods
cwtl
sub
std
mov
adc
xchg
cli
push
xor
jbe
je
lods
dec
lahf
fadd
sbb
mov
repnz
pop
add
aam
adc
sub
call
sub
or
js
je
add
pop
outsl
xchg
cltd
pop
test
rolb
push
test
stc
leave
jbe
bound
adc
outsb
outsl
mov
jnp
loopne
sbb
add
fistps
enter
lea
bound
push
xchg
jge
mov
add
add
mov
sub
lock
pusha
add
addr16
mov
lcall
push
jecxz
or
or
dec
adc
pushw
adc
unpckhps
mov
push
call
daa
and
add
mov
jnp
mov
mov
les
push
cwtl
mov
es
dec
cmp
add
pop
jb
push
leave
jae
cmp
into
fs
pop
repnz
ret
gs
push
add
or
das
inc
js
popf
cmp
bswap
pop
leave
jo
add
dec
in
ljmp
push
test
stc
xchg
push
mov
je
sbb
fdiv
fsubrs
dec
mov
adcl
add
mov
call
fneni(8087
addr16
and
fisubrl
pop
scas
sbb
xor
add
mov
add
sub
mov
adc
or
ss
notl
bound
repnz
fstps
ljmp
punpcklbw
push
addr16
and
mov
inc
add
jbe
rolb
test
hlt
and
movb
add
lods
std
sub
add
addb
xchg
or
cmp
push
popa
je
rorl
outsb
sub
push
dec
dec
and
subl
pushf
pop
dec
inc
movl
or
xchg
mov
int
jno
push
pop
pop
xor
inc
dec
dec
add
loope
int
stc
js
jbe
dec
dec
xchg
test
xchg
ds
add
fdivrs
in
pop
mov
aam
rolb
mov
xchg
xor
rolb
add
repnz
mov
icebp
cmp
clc
cmp
xor
mov
inc
add
sub
add
icebp
loop
aad
fwait
mov
das
lea
lea
adc
pop
mov
rolb
add
mov
jne
jb
cld
push
mov
out
xchg
out
pop
dec
aas
sub
cwtl
and
and
lods
cmp
push
popa
into
inc
add
sbb
xchg
sbb
adc
enter
mov
mov
and
mov
add
and
mov
push
pop
jl
add
or
or
and
aaa
push
test
aam
fwait
push
pop
push
pop
or
rolb
push
xchg
mov
pop
xchg
popf
xchg
nop
or
iret
pop
addr16
std
xchg
jp
loope
add
sahf
lret
movsl
ret
imul
sub
push
test
je
add
jno
nop
or
pushf
call
add
add
sbb
les
insl
mov
mov
dec
sti
or
cmp
test
test
in
mov
add
sub
xlat
fildll
loop
sbb
xchg
push
dec
fistps
xchg
cs
rcrl
outsb
dec
xor
fmuls
inc
add
ja
mov
mov
sub
xor
push
cwtl
cs
and
into
sub
fcomip
xor
cmp
fsubrl
cwtl
iret
mulb
cwtl
dec
shlb
out
mov
test
push
and
dec
push
hlt
and
and
add
daa
cltd
xor
mov
xor
sti
inc
add
imul
pop
ljmp
imul
add
add
add
cmc
outsb
shrb
sbb
ss
jb
imul
addb
push
xor
add
bound
jno
cmpsl
sub
xchg
xchg
fwait
lahf
and
stos
or
rol
add
push
dec
dec
addb
imul
pop
aam
add
jg
sti
das
and
adc
pop
out
loop
mov
sbb
pop
fisubrl
fstl
addb
enter
mov
sub
add
jg
jae
addl
jb
lods
aas
lods
ret
add
aaa
mov
xor
lock
mov
cmp
cmp
xor
jecxz
sub
idivb
es
sbb
cmp
dec
aad
mov
ds
stos
mov
xchg
out
nop
mov
cmp
test
xlat
dec
pusha
add
clc
neg
out
sub
mov
push
pop
enter
push
shl
aas
add
mov
out
push
pop
loopne
cmp
cmpsb
jnp
add
or
les
dec
xchg
int3
push
shlb
fcompl
lahf
sbb
push
out
movl
mov
mov
jg
lods
dec
fsubrl
pop
js
dec
ret
or
and
data16
pop
cmpsb
xchg
lcall
dec
fwait
adc
mov
in
js
js
xlat
xchg
lock
inc
aad
xor
lock
adc
sbb
imul
jb
addr16
out
in
fdiv
xor
sub
push
cmp
shl
in
pop
push
cmp
add
aas
dec
xor
inc
mov
jno
add
jo
dec
lock
adc
jbe
insb
lret
daa
add
fisubrl
lahf
adc
movb
xor
shr
mov
push
popf
pushf
enter
dec
notl
adc
pop
ds
mov
pop
pushf
push
repz
cmpsb
je
pop
mov
push
loope
loopne
add
ret
sub
sti
mov
hlt
lret
cli
add
cmpsl
push
mov
imul
pop
add
out
ret
in
rolb
rcrl
mov
iret
or
xchg
in
rdpmc
add
sub
outsl
inc
sbbl
push
mov
xorl
sub
cli
adc
jmp
add
cld
push
add
rcrl
es
scas
aas
sbb
xor
inc
add
xchg
jbe
fiadds
add
adc
pop
call
mov
xchg
sub
sbb
es
stos
aaa
and
push
jne
dec
loopne
add
filds
test
mov
mov
mov
cmpsb
add
jge
shr
push
sbb
gs
add
mov
stos
cmpsl
in
push
sub
mov
fs
popf
bound
sbb
xor
and
test
mov
or
mov
push
mov
repz
sbb
f2xm1
xchg
inc
add
in
adc
sub
into
or
push
mov
cmpsl
ret
sub
test
mov
movsl
loop
xchg
fldcw
adc
in
xlat
cli
test
mov
mov
addb
fsubrp
mov
lahf
push
xchg
mov
sahf
mov
outsl
jo
sub
push
push
add
outsb
mov
sqrtps
movntps
insl
mov
mov
jle
xchg
fcomip
fucomp
add
xchg
frstor
add
dec
mov
mov
or
inc
mov
lcall
and
ss
fcoms
mov
jae
das
cmp
xor
xchg
mov
push
mov
push
daa
sub
lcall
int3
rcrl
sub
inc
movsl
inc
pusha
add
jg
add
sub
add
push
int3
int
in
pop
pop
into
adc
stos
sub
aaa
bound
repnz
addl
jbe
lock
pop
mov
hlt
mov
xchg
mov
inc
add
inc
mov
in
xor
xchg
add
jae
ret
xor
push
cmpsb
je
mov
push
aam
sti
mov
add
sub
sub
add
fldcw
mov
out
xchg
pop
inc
cmp
add
adc
add
xchg
sbb
add
call
mov
or
jp
xchg
fists
push
pop
xor
addl
mov
dec
mov
mov
jl
sub
jge
jge
sbb
int
outsl
imul
out
add
cmpsl
push
sub
jmp
int3
cs
cmpsb
mov
mov
jb
aad
xchg
std
mov
xlat
int
add
inc
push
push
outsl
xchg
inc
add
mov
mov
xchg
add
stc
add
scas
xor
ljmp
push
mov
mov
aaa
aas
in
mov
add
add
scas
fcmovnu
sbb
add
mov
cs
cmpsb
xchg
xchg
in
test
jecxz
add
scas
lods
cmp
pop
mov
addb
stc
adc
mov
push
inc
dec
push
push
cmp
sbb
dec
test
pop
adc
movsl
ljmp
mulb
pop
mov
pop
repz
mov
ljmp
mov
sbb
rcrb
test
mov
loopne
shr
aam
sbb
jb
icebp
pop
test
dec
cmp
dec
ret
daa
fsubl
arpl
ljmp
or
xchg
rolb
js
xor
out
nop
mov
xor
outsb
sbb
mov
push
imul
xchg
out
jecxz
dec
mov
add
ja
dec
xor
jae
lret
sub
cmp
lsl
ljmp
mov
rcr
les
iret
mov
add
mov
xchg
xor
sbb
and
lods
jae
add
outsl
les
mov
mov
mov
xchg
sbb
mov
std
mov
daa
mov
notl
xor
sbb
cmp
jo
mov
add
addb
add
int
mov
imul
add
enter
les
test
pop
ljmp
sbb
popa
jne
add
jg
sahf
mov
lret
shrl
mov
add
call
int3
jecxz
daa
dec
dec
mov
ret
pop
jo
fisttpl
adc
leave
enter
ret
repnz
lret
loopne
loope
inc
stc
test
les
xchg
mov
sbb
lods
popa
shl
adc
mov
shll
call
jb
outsb
xchg
pop
lcall
inc
lcall
cltd
inc
add
lock
repz
loopne
hlt
dec
cmpsl
enter
push
mov
mov
inc
loope
inc
add
jbe
iret
mov
mov
pop
jo
loop
into
inc
loope
out
fisubrl
arpl
jo
xlat
stc
jmp
enter
dec
dec
mov
lds
bound
pushf
jnp
mulb
loopne
ljmp
add
cmp
cmp
imul
dec
inc
add
clc
xchg
lret
jb
add
idivb
in
jb
or
mov
or
push
add
cmp
out
push
inc
xchg
xchg
jae
div
and
mov
enter
xor
ret
scas
aad
mov
addb
add
jmp
push
cltd
mov
not
pushf
stc
iret
sub
mov
popa
push
in
jl
add
fwait
pop
mov
fdivr
loope
jno
jecxz
push
jnp
pushf
cld
scas
adc
add
daa
iret
inc
add
push
cmp
loop
xchg
bound
aam
lret
inc
loop
mov
fcomps
imul
ljmp
mov
int3
lea
add
jmp
jb
sarl
pop
dec
xchg
cld
pop
add
stos
dec
mov
ret
sub
mov
js
loopne
push
add
cmc
test
std
loope
mov
jecxz
xor
fldenv
in
and
cmpsb
js
and
dec
push
movsb
xchg
movsb
jb
in
add
jg
mov
jmp
cmp
add
sti
mov
fistl
push
jb
sub
xor
cmp
outsl
xor
jae
imul
adc
jmp
out
push
outsl
lds
lahf
popf
dec
push
sub
ret
ret
fs
mov
mov
jns
xchg
insb
jae
outsb
mov
fimull
dec
addb
jle
xor
pop
xchg
add
jns
imul
cmp
dec
nop
mov
lahf
mov
jl
mov
pop
or
adc
adc
jecxz
shll
inc
rcl
push
test
mov
mov
mov
mov
enter
sub
lahf
inc
loopne
mov
fs
mov
lds
adc
clc
scas
bound
push
imul
dec
jno
lret
jmp
rcrb
push
mov
inc
add
jno
enter
sbb
mov
add
xchg
loop
add
in
mov
dec
mov
add
mov
fcomps
aad
fldcw
xor
stc
xor
test
clc
mov
cwtl
add
inc
dec
pushf
lods
or
into
cmpsb
add
xchg
mov
out
stos
mov
mov
lock
or
bnd
dec
push
add
and
fs
add
mov
mov
fcmovnu
cmp
pop
and
cs
ficompl
iret
push
add
jl
ss
pop
or
and
add
int
add
rorb
add
xor
stos
and
sbb
push
outsl
mov
test
inc
add
add
inc
add
xor
sbbl
add
cld
in
cmc
das
xor
push
addr16
repnz
and
mov
mov
roll
add
jno
or
pop
bnd
add
ljmp
addb
mov
xchg
mov
or
int3
jae
mov
mov
pop
add
xor
inc
add
jg
jnp
xchg
lock
enter
push
cmp
aad
push
or
lret
mov
add
cwtl
dec
shll
dec
cmpsl
movsb
or
ds
movsb
fisttpll
call
movb
cmpsb
add
fsubrl
repz
ss
mulb
loop
add
mov
insl
into
add
adc
insb
stc
push
cli
push
insl
pop
jge
mov
arpl
sar
test
pop
mov
dec
pop
lcall
movsb
filds
push
add
add
lock
fwait
mov
add
sub
enter
fisubl
aad
push
inc
add
push
push
lods
add
jae
jle
jne
lods
mov
cwtl
pop
jecxz
in
and
icebp
outsl
into
add
rclb
test
mov
mov
sub
pop
push
add
negl
mov
or
push
popf
addr16
and
mov
jp
mull
inc
out
test
mov
sub
notb
ret
xchg
add
stos
bound
sbb
mov
sub
dec
jo
out
push
fadds
dec
and
inc
rolb
fwait
push
dec
and
stc
jecxz
xor
das
js
loope
jl
xchg
or
test
xchg
add
sbb
ljmp
add
dec
fcmovu
lahf
stc
sub
movb
push
nop
clc
jmp
or
scas
push
mov
sbb
mov
adc
inc
add
sub
pop
fimuls
inc
add
mov
xchg
jno
inc
xor
add
sub
cmpsl
mov
add
dec
mov
mov
nop
sarl
fwait
jb
push
setne
add
add
stos
sub
inc
add
test
ljmp
sub
mov
mov
or
ret
xchg
push
pop
testl
ljmp
add
pop
or
insb
mov
jns
repnz
dec
cmp
ja
leave
enter
sbb
xlat
icebp
in
pop
mov
lods
mov
dec
loope
mov
add
add
add
ds
mov
push
aam
dec
mov
cmpsl
fcmove
inc
nop
xchg
test
inc
add
cmp
jl
je
and
cmp
mov
das
arpl
add
pop
push
ljmp
dec
rcr
je
sbb
out
jge
enter
mov
sahf
pop
arpl
mov
sub
orl
addb
movsl
out
pop
mov
pop
dec
xchg
lcall
cmpsl
mov
popf
loopne
scas
adc
ficomps
fs
rcrl
icebp
cmpxchg
leave
mov
in
jb
lods
push
add
sub
ja
inc
add
and
fildl
add
sbb
shlb
dec
cmp
or
and
test
jnp
jle
add
pop
ret
jbe
inc
inc
add
cmp
stc
add
adc
test
outsb
pop
ss
xchg
mov
pusha
add
daa
pop
ds
add
aaa
in
xchg
dec
jb
mov
add
or
incb
jecxz
jp
xor
add
push
sub
int
enter
movb
rolb
addr16
dec
js
stos
test
jmp
jg
add
jnp
inc
add
sub
lea
cmpsl
push
sbb
add
imul
push
or
add
sub
and
sub
imull
leave
test
sub
mov
dec
lods
ja
add
mov
xor
add
sub
cs
add
or
jg
inc
add
adc
sbb
int
and
sbb
in
jno
add
into
in
jo
jg
sbb
loop
ja
mov
lock
std
inc
add
imul
sahf
fwait
and
gs
xchg
mov
inc
nop
add
outsb
faddp
add
sub
jmp
test
sahf
clc
dec
movsl
adc
xor
cmc
inc
jmp
sub
inc
jle
add
inc
add
add
adc
fwait
in
in
repz
and
test
or
mov
mov
stc
imul
add
lcall
push
push
out
add
das
inc
in
pop
in
add
test
out
cmc
insl
xchg
cmp
or
addr16
dec
and
lock
or
daa
inc
mov
or
or
jl
test
popa
test
ret
adc
or
arpl
mov
push
ljmp
testb
movsb
dec
fmull
or
jl
xorl
sub
std
out
mov
add
or
addb
faddl
add
dec
or
xor
fwait
out
jle
les
repz
movb
mov
sbb
pop
test
push
repnz
out
popa
dec
push
pop
jecxz
add
fwait
les
dec
outsb
ss
add
lock
movb
jo
jno
mov
xor
popf
jno
mov
in
clc
popf
cmp
jb
jg
add
sub
fsubrl
xrelease
repnz
xor
mov
sub
add
loopne
pop
jne
out
jmp
adcl
mov
cltd
sbb
sti
jbe
jnp
cmp
sub
sbb
sahf
dec
sbb
lea
les
repz
rcl
jl
mov
mov
xchg
adc
jno
jmp
sub
js
xchg
add
out
iret
or
sub
add
out
ret
call
in
jp
sub
test
cltd
adc
lahf
xchg
jae
xchg
jp
mov
sti
jbe
and
outsb
outsb
es
out
jb
push
cmpsb
inc
add
out
inc
sbb
adc
or
imul
or
aad
mov
add
mov
ss
or
movb
mov
shrl
clc
adc
xchg
sarb
cltd
popf
inc
add
mov
out
test
ficomps
mov
inc
cmp
in
mov
sbb
add
push
xchg
mov
jg
fsts
pop
push
test
and
xorl
mov
jmp
leave
fcmovnu
rolb
and
pop
pop
or
add
or
add
out
and
je
cs
cmp
fldcw
fsubrl
inc
add
aad
sahf
out
adc
xchg
imul
pop
jae
stos
jge
add
fidivl
ficoms
add
or
xor
or
mov
jns
ror
loop
xchg
fsubs
mov
shlb
sub
addb
pop
lods
and
mov
test
call
jo
mov
xchg
popa
push
in
lea
rcrb
int3
inc
xchg
cmc
test
add
adc
hlt
ds
out
pop
push
add
add
push
push
es
cmp
lea
xor
fsubs
mov
ss
pop
ret
sub
mov
aaa
dec
jmp
test
lods
mov
add
jbe
add
dec
adc
or
dec
adc
js
cmpsb
cwtl
fdivs
aad
pusha
add
xor
mov
repz
add
sbb
pop
add
add
in
dec
cld
jle
notb
js,pn
sub
and
add
mov
loopne
mov
adc
pop
mov
imul
out
loopne
les
jle
outsb
es
sub
xchg
and
pop
xchg
bound
cmp
cmp
adc
in
imul
into
xchg
mov
dec
lock
clc
sbb
stos
xlat
in
icebp
inc
add
icebp
fnsave
mov
lea
add
arpl
out
aam
xor
add
fwait
addr16
insb
sub
cmp
inc
lcall
cmp
clc
sub
dec
jns
hlt
test
adc
cmp
push
fcmovnb
add
cli
dec
insl
or
push
cmp
push
sar
cmpsl
cmp
minps
sbb
push
mov
jae
roll
fcoml
fwait
and
push
aam
sbb
add
pop
lahf
and
sbb
push
xchg
sbb
scas
jo
imul
jmp
sub
dec
xchg
call
sub
add
push
sub
lock
pop
jp
add
into
xchg
or
mov
mov
mov
rolb
adc
add
mov
cmp
add
sub
push
nop
cmp
cmp
cmp
clc
or
add
mov
sbb
sub
fmull
xor
out
dec
dec
xchg
jb
cmp
cli
dec
and
cmp
pop
out
test
mov
xchg
push
cltd
daa
outsb
pop
mov
sbb
push
addr16
inc
aaa
test
loope
shll
jle
push
add
cltd
shrl
mov
pop
and
xchg
pop
jg
loope
imul
xlat
call
jbe
daa
in
xor
cmp
dec
mov
gs
ja
cmpsl
mov
pop
dec
xchg
repnz
ja
roll
lea
cmp
sbb
jno
cmc
fists
les
xor
lock
cmc
xor
fwait
gs
jnp
in
pop
fisubl
add
mov
fmuls
jmp
xchg
xchg
rcr
push
addb
sbb
cmc
pop
push
cs
push
sub
adc
cwtl
int
sub
mov
xor
xlat
cld
popa
adc
nop
call
jmp
dec
jge
mov
divb
scas
out
clc
es
xchg
jp
ja
es
mov
inc
add
pop
push
xchg
lahf
loope
cltd
repnz
mov
inc
add
dec
pop
mov
jnp
enter
xchg
cld
pop
mov
aam
fsubl
jo
xchg
sti
in
dec
sti
leave
clc
mov
adc
sbb
ret
pop
mov
cld
jmp
hlt
jne
mov
arpl
mov
and
cmp
popf
jns
rolb
outsb
fs
fcoms
inc
add
in
fmull
adc
ret
adc
mov
add
call
jb
push
add
cltd
hlt
mov
sarb
jge,pt
adc
jo
lods
add
inc
add
push
dec
add
enter
addb
jp
add
lock
adc
fsubs
mov
jge
push
test
test
pop
insb
sahf
push
xor
call
mov
push
and
jle
mov
push
cld
add
lcall
add
cmp
add
push
in
popf
mov
mov
cld
jp
push
push
add
lret
dec
outsb
cmc
jmp
outsb
inc
add
addr16
aam
ret
add
in
nop
icebp
dec
cmp
out
stos
addr16
sarl
repz
mov
sti
and
jo
add
test
adc
and
adc
out
sub
jmp
ljmp
sub
add
add
cltd
and
data16
imul
inc
add
and
idivb
rcl
movb
fs
movl
out
sub
inc
sub
jmp
sti
add
stos
outsb
gs
test
insb
cli
add
mov
arpl
fldcw
and
ret
xchg
xor
add
cwtl
aaa
sub
dec
mov
mov
xlat
jbe
add
pusha
add
scas
sub
lock
dec
cmpsl
lods
pop
out
mov
xchg
in
cmp
add
sub
adc
mov
xorl
jl
roll
push
pop
fadds
scas
pop
push
add
push
add
mov
mov
imulb
jbe
and
flds
push
cmp
add
test
in
out
lahf
and
jp
mov
lods
dec
inc
add
je
add
out
inc
add
and
xchg
cmp
add
cmpsl
int3
bound
lahf
ficoml
add
nop
popf
add
push
xlat
sbb
add
mov
and
addb
add
test
aas
jno
sub
aaa
fimull
sub
fidivrs
sbb
fsubrl
add
inc
add
out
mov
popa
and
inc
cmp
ljmp
dec
jo
dec
dec
sbb
inc
add
leave
fwait
rclb
rcrb
inc
add
push
fldcw
xor
xchg
loope
scas
cli
into
pop
addb
xchg
test
add
inc
add
and
cld
add
rolb
test
and
cwtl
addb
lods
in
add
cs
or
push
sbb
arpl
adc
fmull
das
and
add
sbb
mov
xlat
adc
movsl
sbb
adc
loopne
jbe
add
cmp
les
sbb
leave
adc
fprem
xchg
adc
add
pop
push
xchg
sub
push
add
jge
fcompl
pop
and
jno
pop
mov
movb
cltd
mov
fldt
mov
add
or
jle
into
push
push
jmp
lret
jp,pn
xchg
rcpps
mov
sarl
fchs
das
add
push
inc
add
fisttpl
dec
js
mov
lea
add
push
stos
pop
jnp
and
jle
fwait
ja
adc
mov
fucomi
clc
cmp
rorb
cmpsl
sbb
or
jae
sarl
add
mov
add
icebp
mov
and
mov
add
lods
jno
adc
add
add
jnp
scas
into
lret
das
mov
mov
cmc
addb
add
jnp
sub
cmp
insb
mov
aam
out
xor
out
inc
and
mov
mov
jge
cmpl
movsb
inc
test
jno
scas
or
addr16
in
jae
pop
mov
into
cwtl
and
test
pop
adc
shrb
out
repz
test
lahf
repz
ret
push
insb
dec
mov
insb
pop
daa
xor
cmp
imul
mov
xchg
push
add
add
mov
jle
inc
xorl
bound
scas
mov
ret
cwtl
in
pop
adc
xor
test
sbb
ljmp
push
mov
jge
add
int
cmp
arpl
push
inc
add
stos
xchg
out
xor
les
addr16
mov
mov
jmp
iret
int
adc
test
mov
sti
jno
xor
rolb
sub
jmp
fsubr
test
jp
push
inc
add
jmp
push
hlt
xor
mov
cmp
push
dec
mov
xor
add
lahf
pop
push
sbb
add
mov
fcoml
or
fdivrl
shl
lret
movsb
jae
in
lea
aas
out
jb
jno
std
scas
mov
jmp
dec
insb
movsw
push
ljmp
push
addb
lds
mov
int3
fnstcw
mov
add
mov
fsub
xchg
test
repz
mov
cmpsb
push
sub
sti
ds
mov
sbb
aad
subl
fidivrl
or
add
xor
not
xchg
ret
rorl
mov
mov
insl
pop
inc
fsubl
ss
pusha
add
arpl
or
add
mov
cmp
mov
push
jno,pn
aad
xor
xchg
movnti
into
sub
add
jl
call
orl
mov
cltd
dec
push
pushf
mov
mov
xchg
jge
cmp
ret
insb
addb
push
jno
inc
xchg
add
mov
xor
inc
loope
call
icebp
adc
dec
fisubrs
or
xlat
outsl
xchg
push
in
pop
adc
add
xor
add
add
mov
push
jl
shrb
jl
push
lods
inc
adc
sub
adc
xchg
pushf
leave
outsb
mov
outsb
in
test
data16
xchg
pop
int3
daa
in
add
adc
add
dec
lock
adc
loopne
in
fcomps
mov
add
addb
rolb
scas
lds
add
out
xchg
push
cmpl
lcall
sub
imull
addr16
add
push
fistl
jmp
addr16
dec
aas
mov
cmp
jecxz
mov
mov
dec
mov
gs
sbb
mov
dec
idivl
clc
push
sub
add
daa
jb
xor
cmp
test
shrl
mov
int3
scas
aad
sub
jo
add
push
repz
cwtl
loopne
push
pusha
add
int3
jp
fldl
sub
mov
inc
dec
frndint
rcrl
movsl
nop
negb
shll
sti
sub
push
fistpll
mov
test
mov
mov
fcoms
fisubs
add
shrb
notl
pop
daa
aad
mov
add
add
dec
sbb
imul
jecxz
cli
xor
xchg
xchg
mulb
mov
iret
mov
std
pop
push
add
addb
test
scas
testl
push
add
or
jno
and
sub
cli
xor
sub
xchg
int
xchg
dec
ds
fstpt
push
sub
jo
cli
push
fstl
movsl
out
adc
repz
add
xor
xchg
push
add
add
lock
add
push
jg
sbb
and
jg
add
out
add
rcl
xchg
sbb
cwtl
mov
push
pusha
add
sti
and
test
mov
shll
and
add
pop
cmpsl
lret
dec
shl
test
aaa
cmp
rcl
xchg
adc
push
add
push
sub
pop
sbbl
out
inc
and
mov
les
xor
shll
cmp
jo
jne
dec
lret
sub
sbb
mov
mov
add
mov
gs
xchg
push
add
and
insl
inc
or
mov
push
outsb
adc
movb
jg
repz
cmpsl
sub
imul
jg
push
pop
dec
sbb
mov
mov
in
mov
pop
bnd
dec
mov
and
shlb
push
xchg
leave
in
mov
sbb
xchg
insb
popf
lret
lret
and
popf
inc
pop
dec
nop
lahf
aad
add
cld
mov
dec
xor
std
imul
loope
ds
movb
cltd
push
add
sub
mov
push
sti
sbb
inc
add
add
addb
insl
leave
mov
or
idivb
add
mov
fucomip
pop
loop
cs
roll
xchg
mov
jge
add
push
add
lcall
lcall
xchg
hlt
lods
inc
filds
daa
out
jbe
xchg
daa
stos
gs
mov
daa
push
in
jbe
in
out
sub
mov
xchg
sti
popa
mov
rolb
stos
pop
dec
pop
inc
add
jbe
pop
into
je
insb
enter
imull
inc
inc
sbb
mov
rcr
dec
js
jp
add
inc
add
pop
add
int
inc
ja
cmp
enter
add
stc
ja
mov
push
xor
ljmp
pushl
xchg
push
imul
fs
jns
pusha
add
or
push
fucomi
cmpsl
jns
movsl
lret
push
addr16
imul
test
dec
movb
scas
jb
mov
sub
ja
add
mov
pop
arpl
mov
push
jmp
mov
rcrl
xchg
fdivr
mov
sbb
or
std
sbb
jmp
insb
push
and
jnp
jmp
pop
mov
xorl
xchg
mov
push
in
xor
ss
imul
int
popa
imul
mov
mov
sub
data16
jae
das
mov
cmpsl
in
adc
lcall
add
and
clc
imulb
lret
shll
mov
or
dec
mov
int
add
add
add
aaa
lea
dec
testl
mov
loopne
xchg
pop
repnz
hlt
cmpl
add
addb
cmp
jle
inc
inc
add
icebp
ret
dec
sbb
and
push
add
jne
jl
inc
rolb
jg
in
xchg
sbb
stc
leave
push
sub
dec
sub
sbb
mov
loope
aam
fidivl
lock
add
out
and
hlt
imul
arpl
xchg
aad
lea
push
adc
insb
push
push
ret
pusha
add
pop
xchg
inc
les
sub
lea
jnp
pop
mov
pushf
aad
test
push
cli
mov
in
add
and
adc
cmp
std
mov
mov
addb
lods
movsb
popf
and
mov
movb
add
add
imulb
dec
jnp
sbb
add
icebp
fs
sub
rorl
dec
test
cmp
stos
fisttps
addb
dec
pop
mov
pop
data16
jnp
jle
in
dec
mov
lods
sbb
scas
arpl
or
add
sub
lds
mov
push
add
insb
add
or
out
inc
add
loopne
imul
cltd
mov
add
aam
and
pop
repnz
xor
sbb
push
lea
xlat
addb
pop
pop
rolb
dec
xchg
mov
mov
xor
add
out
dec
pushf
je
inc
pop
lds
dec
push
ds
adc
orl
pop
loopne
cs
push
xor
sti
mov
mov
ret
aam
xor
test
adc
bound
mov
or
ss
inc
sub
pushf
lcall
xor
add
xchg
jo
add
dec
adc
loope
adc
xchg
repnz
lcall
into
cmp
or
imul
mov
and
popa
fimull
fstp
out
xor
and
mov
lds
call
aam
fadds
rcrl
daa
dec
or
pop
dec
jo
ret
imul
and
mov
pop
das
outsb
add
call
dec
xor
out
cmp
lods
sbb
scas
sub
fidivl
and
xchg
je
dec
push
lret
mov
sbb
shll
lret
cmp
ret
les
popa
pop
ljmp
test
adc
xchg
rolb
sbb
sbb
jns
lret
imull
add
cmpsl
fildl
fdivrs
mov
adc
inc
push
inc
add
and
push
sbb
push
sbb
fidivl
jg
jae
or
pop
enter
xlat
out
adc
iret
test
jmp
jnp
adc
mov
cltd
enter
pusha
add
jnp
sub
fstpl
and
sbb
cmp
push
hlt
gs
add
stos
xor
nop
aas
mov
fcomi
mov
push
push
enter
jmp
decb
jmp
add
pop
bound
sbb
adc
add
adc
and
inc
add
pusha
add
sub
mov
cmp
xchg
lret
sub
add
cltd
aad
lea
outsb
into
inc
mov
xor
rcll
addb
add
fwait
jg
and
cmpsb
pop
movsb
adc
sub
test
out
shrl
std
xorl
sub
adc
cmp
push
mov
add
mov
cltd
ja
bound
outsl
mov
or
add
mov
add
add
nop
test
push
jne
popa
lds
out
jge
xlat
mov
push
adc
or
dec
popa
inc
and
das
setb
push
rorb
mov
add
ror
dec
or
imul
add
rcll
xlat
es
add
scas
fisubs
roll
andl
add
movsb
rcrl
cmp
shll
mov
sbb
sbb
mov
add
je
aaa
jmp
loop
adc
insb
stos
xor
sahf
ds
arpl
xchg
mov
xor
mov
cmpsl
pusha
add
dec
dec
push
inc
insb
or
cld
mov
cmp
add
out
mov
iret
jbe
inc
add
xor
jne
mov
xchg
sub
xorl
mov
cmp
mov
pop
rcrl
popf
sarl
add
cmp
ljmp
imulb
lods
cmp
jno
pop
dec
std
in
and
xchg
in
sbb
xchg
push
mov
test
push
pop
in
add
icebp
mov
push
cltd
mov
je
jge
xor
int
sub
movb
movsb
adc
nop
daa
sub
fdivs
add
mov
pop
dec
push
imul
daa
pop
push
movsl
push
mov
insl
mov
xchg
dec
ss
aas
add
aam
lahf
je
lods
sbb
and
mov
inc
mov
and
andl
cltd
sbb
mov
add
aam
add
and
dec
or
pop
adc
call
divl
andl
add
xchg
rorl
jno
xchg
popa
inc
outsl
scas
mov
jnp
ja
mov
jmp
inc
sub
cmp
and
xor
mov
pop
and
ret
ds
and
add
pop
or
sub
sub
sub
mov
xor
fstps
movb
sub
mov
inc
jmp
dec
lods
pop
pop
cs
add
cmp
cmp
ret
add
int
adc
add
rclb
mov
test
or
xor
clc
sarl
out
add
sbb
xchg
arpl
mov
add
mov
stc
nop
jb
add
inc
xchg
xchg
xchg
clc
push
stc
nop
jb
fcmovu
add
add
add
add
movswl
stc
nop
jb
add
mov
adc
nop
jb
pop
scas
add
or
nop
jb
scas
add
add
mov
and
cmp
nop
jb
add
add
je
add
add
stc
nop
jb
jnp
add
rcl
jne
or
mov
xchg
ret
and
pop
push
mov
xchg
ret
pop
fiaddl
filds
pop
push
stc
nop
jb
cmpb
add
sbb
add
add
add
sub
out
out
clc
stc
nop
jb
loop
add
stc
nop
jb
add
sbb
push
es
fidivrl
stc
nop
jb
add
add
mov
jmp
and
add
scas
call
stc
nop
jb
add
jb
lret
je
nop
cld
jmp
adc
push
mov
xchg
ret
scas
cli
mov
je
stc
nop
jb
loop
pop
mov
sti
stc
nop
jb
add
add
rolb
add
nop
cld
jmp
hlt
pop
add
push
push
mov
xchg
ret
add
ss
adc
decl
filds
jne
xchg
jns
cld
or
mov
or
mov
and
stc
nop
jb
add
add
add
nop
jb
inc
add
popa
push
mov
xchg
ret
add
add
inc
or
jmp
mov
xchg
ret
mov
adc
add
add
nop
jb
add
add
mov
nop
cld
jmp
jne
into
mov
stc
nop
jb
inc
add
shll
jge
stc
nop
jb
cli
add
add
and
dec
movzwl
push
mov
xchg
ret
fstpl
xchg
inc
add
push
push
mov
xchg
ret
pop
add
add
xchg
mov
add
nop
jb
add
adc
dec
repz
add
jmp
and
iret
shr
stc
nop
jb
inc
add
add
int
or
nop
jb
push
jmp
mov
add
nop
jb
cmp
call
stc
nop
jb
fildll
cld
jmp
and
or
add
stos
test
nop
cld
jmp
add
add
inc
add
push
nop
cld
jmp
add
add
inc
add
add
out
add
nop
cld
jmp
add
add
mov
stc
nop
jb
add
flds
pop
and
nop
jb
call
cmpl
push
mov
xchg
ret
add
and
pusha
dec
mov
nop
cld
jmp
add
add
add
ficoms
nop
jb
push
add
add
add
lods
stc
nop
jb
mov
inc
add
or
stc
nop
jb
jnp
roll
add
lahf
xor
int
add
stc
nop
jb
adc
sar
mov
stc
nop
jb
add
pop
jnp
or
jb
loop
sbb
add
decl
stc
nop
jb
ret
sbb
stc
nop
jb
adc
fs
add
jmp
stc
nop
jb
add
test
nop
jb
cli
call
nop
cld
jmp
fiaddl
add
stos
add
adcb
add
jne
jnp
scas
pop
add
lret
cmpl
push
mov
xchg
ret
add
nop
jb
inc
add
bound
push
testl
nop
cld
jmp
cmp
and
add
mov
cmp
ret
add
mov
xchg
ret
push
jge
add
stc
nop
jb
add
push
or
add
mov
stc
nop
jb
test
loop
add
push
mov
xchg
ret
call
add
stc
nop
jb
or
add
hlt
jae
rep
nop
cld
jmp
test
add
xor
push
add
stc
nop
jb
pop
add
fiaddl
add
cmp
nop
cld
jmp
jne
add
mov
and
mov
xchg
ret
adc
add
stos
push
stc
nop
jb
bound
std
mov
stc
nop
jb
jnp
push
divb
xor
push
mov
xchg
ret
mov
ret
stc
nop
jb
stos
add
xorl
nop
cld
jmp
stos
cmp
gs
div
nop
cld
jmp
adc
add
jne
add
popa
rolb
repnz
mov
nop
cld
jmp
jnp
and
dec
call
stc
nop
jb
add
add
mov
stc
nop
jb
add
add
and
mov
stc
nop
jb
cmp
push
js
nop
jb
fists
mov
push
mov
xchg
ret
add
sub
jb
or
add
jnp
pop
push
push
mov
xchg
ret
add
test
dec
cmp
nop
jb
ret
add
dec
add
push
mov
xchg
ret
add
push
dec
dec
stc
nop
jb
add
xchg
hlt
sbbb
hlt
loop
add
add
xchg
add
rep
stc
nop
jb
add
jnp
fildll
nop
cld
jmp
cmp
add
add
add
nop
jb
bound
cmp
aas
stc
nop
jb
inc
filds
push
mov
cmp
jb
sbb
ret
mov
stc
nop
jb
add
fiaddl
je
stc
nop
jb
or
mov
add
mov
add
add
xorb
sbb
sbb
jb
aam
inc
add
jne
stc
nop
jb
repnz
mov
adc
push
add
lcall
add
clc
inc
add
add
jb
into
add
push
mov
xchg
ret
add
add
mov
stc
nop
jb
cli
xor
and
in
cmp
filds
add
add
and
add
imul
mov
mov
cmpw
nop
cld
jmp
add
jnp
xchg
std
mov
stc
nop
jb
add
incb
lds
call
stc
nop
jb
inc
push
or
lea
nop
cld
jmp
test
hlt
pop
mov
stc
nop
jb
repnz
add
stc
nop
jb
sbb
add
add
and
and
stc
nop
jb
add
add
inc
ficoml
nop
jb
jne
jnp
out
add
pop
nop
cld
jmp
add
add
add
mov
push
mov
xchg
ret
add
add
xchg
jnp
out
inc
add
add
data16
in
add
add
mov
cld
add
popa
dec
das
or
rclb
add
adc
add
push
push
mov
xchg
ret
ret
add
mov
stc
nop
jb
and
inc
out
add
sbb
mov
adc
nop
jb
pop
add
add
jl
sbb
nop
jb
push
add
out
push
popf
mov
push
mov
xchg
ret
test
mov
imul
xchg
ret
add
mov
mov
xchg
ret
add
add
sbb
mov
stc
nop
jb
add
add
insl
je
stc
nop
jb
add
add
fists
in
mov
into
faddl
add
pop
add
and
cld
jmp
add
jnp
hlt
add
push
push
mov
add
adc
add
aaa
lahf
add
stc
nop
jb
sbb
stos
jmp
jmp
leave
call
nop
cld
jmp
cli
jmp
push
jne
stc
nop
jb
add
mov
push
mov
xchg
ret
bound
dec
add
stc
nop
jb
xchg
pop
leave
stc
nop
jb
add
popf
mov
push
mov
xchg
ret
bound
sar
nop
jb
add
test
add
nop
cld
jmp
add
dec
xor
stc
nop
jb
out
pop
sbb
clc
stc
nop
jb
add
mov
lahf
inc
mov
nop
jb
add
inc
jmp
inc
frstor
loop
push
push
mov
xchg
ret
pop
adc
dec
add
nop
jb
pop
add
add
mov
stc
nop
jb
inc
fiaddl
pop
pop
push
stc
nop
jb
add
add
add
add
rclb
add
inc
add
add
add
add
cld
jmp
fiaddl
jmp
stc
nop
jb
add
cmp
stc
nop
jb
add
add
hlt
sbb
nop
jb
fiaddl
cmc
movsb
mov
add
stc
nop
jb
bound
jnp
add
or
stc
nop
jb
add
sbb
stc
nop
jb
push
add
pop
rep
stc
nop
jb
add
xchg
fnsave
shrl
mov
stc
nop
jb
mov
push
add
mov
stc
nop
jb
add
add
add
mov
xchg
ret
add
inc
or
mov
nop
jb
inc
add
jmp
add
add
jb
stc
nop
jb
out
add
nop
in
push
stc
nop
jb
sub
push
push
mov
xchg
ret
cmp
insb
shr
stc
nop
jb
add
add
push
out
add
stc
nop
jb
cmp
add
add
mov
xchg
ret
add
and
or
cmc
inc
add
push
and
pusha
xchg
dec
jne
stc
nop
jb
add
cs
stc
nop
jb
jne
inc
hlt
add
inc
add
pop
mov
stc
nop
jb
add
cmpsb
jle
nop
cld
jmp
mov
add
add
inc
out
sbb
add
nop
cld
jmp
push
adc
mov
push
mov
xchg
ret
add
or
mull
nop
jb
test
pop
mov
nop
cld
jmp
add
add
add
cld
jmp
add
sbb
add
pcmpgtb
xor
nop
jb
xchg
or
sub
stc
nop
jb
loop
test
outsl
sub
stc
nop
jb
add
add
add
stc
mov
push
mov
xchg
ret
add
scas
pop
fisubrl
cli
stc
nop
jb
add
fiaddl
add
push
push
mov
xchg
ret
add
add
nop
inc
add
lret
add
add
xchg
add
std
jmp
and
add
add
ss
cmp
dec
cmp
cld
jmp
add
sub
push
fldl
xchg
ret
inc
add
lds
jb
jne
or
lds
mov
jb
add
add
test
cmpb
add
sbb
call
mov
stc
nop
jb
add
add
addb
add
add
add
add
ret
js
jne
stc
nop
jb
sbb
add
das
pop
stc
nop
jb
repnz
sub
stc
nop
jb
pusha
add
aam
add
xor
stc
nop
jb
ficompl
and
pop
stc
nop
jb
hlt
add
add
add
cmp
nop
jb
add
add
test
jne
stc
nop
jb
pop
add
push
adc
je
inc
add
inc
add
inc
mov
mov
stc
nop
jb
pop
add
add
pusha
stc
nop
jb
add
sbb
cmc
rcrb
subl
push
mov
xchg
ret
cmp
repz
inc
fcoms
test
add
pusha
lds
filds
add
stc
nop
jb
add
cli
add
and
stc
nop
jb
mov
rcll
sbb
mov
xchg
ret
fcmovb
fistps
push
dec
jne
nop
cld
jmp
loop
add
les
nop
jb
rol
adc
jg
stc
nop
jb
add
cmp
rolb
adc
repz
nop
jb
outsb
add
add
add
push
neg
mov
stc
nop
jb
test
push
mov
xchg
ret
xchg
jb
int
leave
nop
cld
jmp
add
outsb
add
pusha
add
and
nop
jb
mov
ret
leave
lods
stc
nop
jb
fiaddl
add
div
nop
cld
jmp
add
add
fdiv
rclb
repnz
add
hlt
xchg
adc
lcall
cld
jmp
inc
pop
shl
fsubr
rorb
jb
add
add
add
push
mov
addb
add
pop
fildll
subb
add
pusha
scas
jmp
adc
push
dec
mov
push
mov
xchg
ret
add
jecxz
pushl
stc
nop
jb
ret
add
pop
xor
push
mov
xchg
ret
hlt
add
outsb
fisttpll
add
inc
add
adc
stc
nop
jb
or
hlt
add
add
mov
stc
nop
jb
add
inc
xchg
addb
and
stc
nop
jb
cmp
add
stc
nop
jb
fiaddl
add
jecxz
mov
stc
nop
jb
hlt
mov
cld
jmp
fidivl
add
add
jmp
add
add
aam
add
sub
push
out
add
add
stos
mov
nop
jb
add
aas
inc
nop
cld
jmp
add
cmp
add
movsb
stc
nop
jb
loop
sbb
push
add
insl
lea
nop
cld
jmp
bound
xchg
xor
nop
cld
jmp
cmp
and
popa
add
nop
jb
mov
inc
add
or
cld
jmp
xchg
pusha
adc
sbb
add
mov
stc
nop
jb
add
xor
adc
cld
jmp
call
pop
add
stc
nop
jb
add
incb
jne
jae
decl
stc
nop
jb
mov
cmp
stc
nop
jb
add
add
stos
stc
nop
jb
add
adc
add
add
ret
stc
nop
jb
add
jne
add
daa
inc
fistl
in
add
push
mov
add
add
fnstcw
push
sub
inc
add
xorb
jnp
push
mov
xchg
ret
or
xchg
or
mov
xchg
ret
inc
add
add
roll
std
je
nop
cld
jmp
cmp
or
nop
jb
add
addb
mov
stc
nop
jb
jb
ret
sbb
push
push
stc
nop
jb
add
filds
andb
iret
add
stc
nop
jb
cmp
push
and
jmp
bound
add
add
push
push
mov
xchg
ret
pop
add
add
popa
add
nop
jb
fidivl
pusha
sub
xor
add
stc
nop
jb
add
mov
push
mov
xchg
ret
sbb
test
stc
nop
jb
incb
nop
jb
add
inc
add
cmp
mov
xchg
ret
fiaddl
rcr
add
inc
sbb
incl
jmp
scas
jmp
sahf
pop
stc
nop
jb
add
add
push
inc
inc
push
cmc
sub
mov
adc
nop
jb
add
repnz
movzwl
stc
nop
jb
pop
add
bound
cmpb
filds
add
add
add
sub
mov
xchg
ret
inc
add
add
mov
stc
nop
jb
mov
add
jge
mov
nop
cld
jmp
and
stc
push
mov
jo
push
dec
outsl
mov
push
fwait
add
loopne
add
sbb
or
add
pop
fiaddl
or
sbb
push
incl
out
add
mov
test
and
xlat
mov
nop
jb
add
fiaddl
ret
fisttpl
test
call
add
add
add
and
dec
add
mov
xchg
ret
scas
filds
push
stc
nop
jb
jnp
adcl
add
pop
stc
nop
jb
add
add
mov
sub
nop
jb
add
in
data16
xor
mov
push
stc
nop
jb
add
push
add
ret
andl
sub
incl
inc
test
add
mov
stc
nop
jb
inc
push
in
mov
stc
nop
jb
add
test
aaa
cmp
popa
add
mov
xchg
ret
add
loop
lcall
jbe
incl
scas
push
sbb
lea
stc
nop
jb
add
cmp
add
add
nop
jb
jge
add
mov
lret
nop
jb
or
scas
or
fiaddl
arpl
lock
mov
stc
nop
jb
ret
clc
pop
stc
nop
jb
add
sub
dec
push
nop
cld
jmp
and
call
pop
mov
mov
stc
nop
jb
add
add
and
push
stc
nop
jb
sub
add
stc
mov
nop
cld
jmp
ficompl
sbb
ds
stc
nop
jb
add
inc
and
nop
jb
cmp
add
add
add
add
stc
nop
jb
add
push
add
dec
cmp
nop
jb
or
mov
jmp
stc
nop
jb
sbb
add
push
stc
nop
jb
add
add
pop
add
push
stc
mov
nop
cld
jmp
xchg
add
add
rep
push
mov
xchg
ret
add
add
fldl
jo
nop
cld
jmp
sub
jmp
scas
mov
xor
stc
nop
jb
mov
add
movswl
stc
nop
jb
add
add
xor
incl
add
ss
mov
jmp
push
mov
xchg
ret
add
add
fdivl
rclb
jnp
add
xchg
pop
pop
jne
stc
nop
jb
sbb
stc
nop
jb
push
add
add
loope
dec
nop
cld
jmp
add
hlt
adc
jnp
inc
sub
nop
jb
add
sbb
daa
js
sbb
add
stc
nop
jb
fists
cmp
add
push
mov
xchg
ret
push
hlt
in
mov
jmp
nop
cld
jmp
add
ret
iret
add
stc
nop
jb
add
pop
cli
sbb
mov
xchg
ret
xchg
add
xchg
adc
and
push
mov
xchg
ret
hlt
add
sti
call
stc
nop
jb
lahf
jmp
cmp
mov
add
nop
jb
scas
ret
push
insb
add
stc
nop
jb
andl
fs
insb
add
nop
jb
and
repnz
stc
nop
jb
push
add
push
mov
xchg
ret
add
test
nop
cld
jmp
jmp
jmp
dec
je
stc
nop
jb
add
jb
repnz
call
jne
stc
nop
jb
add
xor
push
add
stc
nop
jb
xorb
add
stc
nop
jb
add
add
add
sub
mov
xchg
ret
hlt
add
mov
jne
nop
cld
jmp
push
ret
jge
mov
stc
nop
jb
add
loop
add
pop
push
push
mov
xchg
ret
add
add
outsb
pop
jg
add
stc
nop
jb
add
add
push
xchg
rolb
push
stc
nop
jb
add
or
imul
stc
nop
jb
add
vorps
mov
jb
mov
add
test
push
mov
xchg
ret
jnp
sbbb
test
test
xor
mov
stc
nop
jb
add
add
in
stc
add
stc
nop
jb
add
add
add
add
nop
jb
add
add
je
xchg
negl
jb
add
add
add
push
mov
xchg
ret
cmp
jmp
stc
nop
jb
inc
push
add
add
stc
nop
jb
hlt
add
adc
add
stc
nop
jb
outsb
add
add
mov
stc
nop
jb
addl
add
add
mov
nop
cld
jmp
and
add
jnp
add
mov
stc
nop
jb
sbb
add
mov
xchg
ret
add
sahf
mov
stc
nop
jb
jne
jnp
hlt
sbb
inc
xor
stc
nop
jb
jmp
fiaddl
inc
add
adc
popa
stc
nop
jb
sbb
scas
aam
add
sub
xorb
jmp
add
aam
test
int
pop
jae
nop
jb
add
pusha
cld
shl
stc
nop
jb
sbb
add
nop
jb
test
add
push
stc
nop
jb
jnp
add
loop
ret
add
stc
nop
jb
add
push
push
xchg
pusha
add
dec
imul
std
incl
sub
mov
stc
nop
jb
add
mov
stc
nop
jb
add
add
add
push
push
mov
xchg
ret
jne
pusha
add
push
fmuls
testb
cmp
ret
test
add
mov
stc
nop
jb
jb
ffree
call
push
mov
xchg
ret
addl
stos
push
mov
xchg
ret
filds
pop
cmp
mov
add
add
nop
jb
cmp
iret
jmp
nop
cld
jmp
add
xor
nop
jb
add
fiaddl
ret
jmp
nop
cld
jmp
inc
call
add
pusha
push
mov
xchg
ret
hlt
sbb
add
cmp
cld
jmp
adc
push
cmp
daa
push
push
dec
push
stc
nop
jb
add
test
sbb
subb
add
add
scas
xor
push
out
ljmp
bound
add
push
stc
nop
jb
add
add
aaa
pop
js
push
mov
xchg
ret
add
out
add
sub
stc
nop
jb
add
or
nop
jb
stos
mov
enter
nop
jb
add
imul
stc
nop
jb
add
dec
push
push
mov
xchg
ret
add
add
cmpsl
lret
push
mov
xchg
ret
jnp
adc
dec
adc
pop
icebp
inc
add
add
push
cmp
sbbb
xchg
add
roll
cmp
dec
cmp
nop
jb
push
add
add
mov
xchg
ret
jge
inc
inc
bound
push
stc
nop
jb
pusha
add
mov
push
mov
xchg
ret
pop
inc
add
or
incl
and
add
add
add
add
add
incl
lds
jnp
inc
and
nop
cld
jmp
cli
pusha
pusha
jmp
push
add
mov
nop
cld
jmp
cmp
jge
out
add
jmp
xchg
repnz
add
mov
xchg
ret
fnsave
mov
stc
nop
jb
add
add
nop
jb
add
pop
bound
dec
jmp
nop
cld
jmp
out
or
stos
adc
xor
stc
nop
jb
ret
shlb
add
nop
cld
jmp
add
mov
aad
rcr
mov
push
mov
xchg
ret
jne
hlt
scas
push
push
mov
xchg
ret
add
repz
jbe
je
stc
nop
jb
add
xchg
pop
inc
nop
cld
jmp
add
add
stc
nop
jb
cli
add
add
or
stos
push
mov
xchg
ret
adc
add
jge
stc
nop
jb
add
lahf
add
cmp
nop
jb
or
mov
xchg
mov
push
stc
nop
jb
add
and
out
add
stc
nop
jb
sbb
addb
xor
add
nop
jb
or
add
xchg
imul
int
inc
add
inc
add
sub
and
add
xchg
push
jno
add
add
inc
lahf
stc
nop
jb
add
add
add
out
jb
push
stc
nop
jb
add
call
xchg
push
push
mov
xchg
ret
call
cmp
jb
add
loop
fcomip
ret
xchg
loopne
jnp
jmp
cmpb
add
add
add
jle
sti
stc
nop
jb
mov
add
add
mov
push
mov
xchg
ret
mov
test
insl
jae
cld
jmp
adc
add
mov
xchg
ret
jnp
jb
mov
add
nop
cld
jmp
mov
lahf
call
lcall
inc
add
add
jne
pop
and
stc
nop
jb
cmpb
mov
stc
nop
jb
fsubs
xor
add
nop
cld
jmp
add
mov
out
stc
nop
jb
cmp
add
stc
nop
jb
push
cli
sti
add
stc
nop
jb
add
add
push
pop
mov
stc
nop
jb
xchg
add
push
add
mov
add
nop
jb
add
add
add
add
stc
nop
jb
jge
jnp
inc
insl
mov
stc
nop
jb
mov
add
push
push
mov
xchg
ret
add
add
lea
stc
nop
jb
ret
add
add
in
mov
nop
cld
jmp
push
add
aam
xor
push
mov
xchg
ret
add
mov
nop
jb
scas
pop
add
test
inc
fimuls
sbbb
incl
bound
sbb
add
mov
stc
nop
jb
ret
in
mov
push
mov
xchg
ret
call
or
stc
nop
jb
add
and
cld
jmp
fidivl
add
pop
nop
cld
jmp
fidivl
add
add
lds
push
push
mov
xchg
ret
mov
pop
cli
mov
jb
push
push
mov
xchg
ret
add
add
call
clc
stc
nop
jb
add
add
push
lret
nop
cld
jmp
push
sub
movb
xor
push
mov
xchg
ret
or
add
rol
add
pop
stc
nop
jb
inc
pusha
add
mov
stc
nop
jb
inc
fisttpll
dec
adc
nop
jb
bound
push
mov
movsl
inc
mov
mov
push
mov
outsb
add
adc
pop
push
mov
xchg
ret
inc
push
roll
cli
in
inc
stc
nop
jb
add
inc
push
sbb
mov
stc
nop
jb
add
or
adc
nop
jb
incb
add
ret
mov
push
mov
xchg
ret
ret
cmp
test
add
stc
nop
jb
ret
push
push
mov
xchg
ret
add
add
pop
mov
stc
nop
jb
fildll
add
pop
and
movsl
addr16
jle
nop
cld
jmp
add
add
pusha
add
add
nop
cld
jmp
add
and
add
add
add
jmp
jl
dec
sub
nop
jb
cmp
mov
mov
stc
nop
jb
adc
mov
stc
nop
jb
mov
aam
gs
mov
nop
jb
add
add
jne
pop
stc
nop
jb
mov
add
roll
ret
decl
push
mov
xchg
ret
add
inc
cmp
stos
nop
cld
jmp
cli
add
mov
movzwl
stc
nop
jb
add
add
pop
push
push
mov
xchg
ret
push
test
hlt
add
add
stc
nop
jb
add
add
outsb
add
nop
sti
push
push
mov
xchg
ret
outsb
add
sbb
push
mov
nop
jb
out
add
add
inc
scas
rep
push
mov
xchg
ret
add
cmp
popa
push
ret
pop
push
mov
xchg
ret
add
mov
sbb
add
stc
nop
jb
sbb
add
nop
cld
jmp
add
outsb
or
jb
add
sub
push
mov
xchg
ret
jne
jne
and
xchg
xor
stc
nop
jb
add
add
add
mov
push
mov
nop
cmpsb
add
add
pushf
out
cmp
jb
cmp
add
jnp
scas
and
nop
cld
jmp
add
cli
jb
and
ret
nop
cld
jmp
or
call
push
stc
nop
jb
add
add
repz
xor
push
mov
xchg
ret
add
call
stc
nop
jb
jge
sbbl
incl
jnp
sbb
add
mov
xchg
ret
add
xchg
stos
pushf
and
push
mov
xchg
ret
incb
inc
add
pusha
stc
nop
jb
sbb
add
add
test
xorb
cmp
hlt
hlt
add
iret
mov
push
mov
xchg
ret
pop
addb
inc
mov
nop
cld
jmp
add
hlt
add
cmp
arpl
cld
jmp
fists
inc
jno
xor
out
fisttpl
test
nop
jb
add
inc
add
or
stc
nop
jb
adc
add
push
mov
xchg
ret
lds
repnz
add
mov
stc
nop
jb
cli
jnp
lds
adc
cld
jmp
jne
add
jmp
sbbb
lcall
add
or
push
je
dec
push
mov
xchg
ret
cmp
cmp
nop
cld
jmp
pusha
add
test
addr16
test
jb
add
add
add
neg
cmp
nop
cld
jmp
lahf
scas
add
jge
mov
stc
nop
jb
sub
push
mov
xchg
ret
ret
pusha
pusha
mov
jne
stc
nop
jb
test
bound
dec
add
stc
nop
jb
jge
aam
popa
stc
nop
jb
or
ret
add
pop
add
push
mov
xchg
ret
add
es
pop
nop
cld
jmp
add
add
mov
imul
stc
nop
jb
cmp
xchg
cld
jmp
jne
xchg
push
fiaddl
xchg
ret
add
add
sahf
pop
stc
nop
jb
add
jnp
add
add
mov
mov
xchg
ret
add
add
pushl
push
mov
xchg
ret
fldl
aaa
jecxz
add
aas
xor
stc
nop
jb
adc
pop
jne
add
xchg
mulps
nop
jb
out
lds
add
adc
testl
push
imul
fiaddl
add
cli
add
mov
mov
xchg
ret
or
lahf
addb
mov
nop
cld
jmp
mov
and
stc
nop
jb
scas
add
and
add
push
mov
xchg
ret
add
cltd
add
stc
nop
jb
add
filds
cs
stc
nop
jb
aam
push
cld
pop
stc
nop
jb
mov
sarl
jmp
stc
nop
jb
ret
lock
mov
push
mov
xchg
ret
add
adc
nop
jb
add
inc
add
movsl
mov
adcb
incl
add
sbb
jb
add
cli
mov
inc
add
sbb
inc
adc
cld
jmp
filds
test
adc
sbb
stc
nop
jb
aam
or
push
stc
nop
jb
add
cmp
mov
cld
jmp
bound
shr
pop
nop
cld
jmp
add
add
add
add
les
out
addb
and
mov
ja
and
push
mov
xchg
ret
add
test
add
stc
nop
jb
add
push
and
inc
in
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
pop
add
shr
stc
nop
jb
jge
add
add
xor
in
mov
stc
nop
jb
call
cmp
jmp
adc
jmp
sarl
mov
add
jmp
test
clc
mov
movb
mov
push
mov
xchg
ret
jge
stos
mov
nop
jb
jnp
inc
add
mov
xchg
stc
nop
jb
add
mov
add
mov
push
mov
sar
jb
test
loop
add
nop
cld
jmp
add
add
adc
nop
cld
jmp
add
add
pop
xchg
pop
mov
stc
nop
jb
add
add
test
nop
jb
loop
shll
inc
stc
nop
jb
add
add
dec
xor
stc
nop
jb
add
cmp
nop
jb
jnp
cmp
add
stc
nop
jb
add
pusha
add
add
jmp
movsb
push
mov
xchg
ret
add
jnp
idiv
add
stc
nop
jb
inc
test
cli
add
jecxz
push
stc
nop
jb
loop
add
jb
sbb
stc
nop
jb
add
insb
cmp
nop
cld
jmp
sbb
add
nop
jb
push
add
add
mov
nop
cld
jmp
add
add
add
push
push
mov
xchg
ret
jb
add
cmpl
nop
cld
jmp
add
sbb
add
decl
mov
adc
nop
jb
add
repnz
xchg
stc
nop
jb
jmp
add
outsb
lds
push
nop
cld
jmp
add
jb
add
stc
nop
jb
test
cmp
jne
nop
cld
jmp
and
push
scas
push
jne
jne
stc
nop
jb
add
nop
jb
pop
add
and
stc
nop
jb
cmp
jnp
jb
scas
cmp
nop
jb
rcr
add
ret
push
mov
xchg
ret
inc
push
add
sub
test
call
incl
sub
stc
nop
jb
stos
outsb
push
sbb
dec
repnz
add
sarl
adc
je
stc
nop
jb
pusha
add
nop
cld
jmp
add
cmp
add
nop
jb
lds
add
add
pop
lea
push
mov
xchg
ret
incb
sbb
mov
xchg
ret
filds
add
stc
nop
jb
jge
cmp
nop
cld
jmp
adc
add
dec
popa
nop
cld
jmp
add
add
and
add
testl
add
add
repnz
push
add
add
xor
mov
add
pop
adc
iret
fstps
add
xchg
fs
das
lretw
push
add
jmp
dec
cmp
in
shrl
lret
pop
insl
call
add
push
push
hlt
mov
sub
clc
push
add
add
inc
add
push
lods
iret
stc
fdivp
mov
cmc
insl
add
cmp
nop
arpl
jl
jbe
jb
dec
aam
or
xchg
pop
outsb
insl
sub
rcll
xchg
xchg
push
jmp
shl
or
add
pop
or
lods
sbb
pusha
add
xchg
mov
ss
int3
jle
jge
nop
xchg
call
in
cli
jmp
push
mov
pop
mov
cmp
adc
xchg
add
shll
cmp
adc
sbb
adc
lods
xlat
sarb
add
in
std
mov
sub
inc
dec
loop
add
test
repz
jno
ja
add
mov
movsb
mulb
jge
mov
rolb
xor
test
pop
or
jne
test
push
fsubrl
pop
pop
jns
aam
cmp
adc
fisttpll
test
sub
shrb
data16
push
xlat
test
dec
add
pushf
stos
bound
leave
push
stos
push
and
jmp
add
sub
sbb
repnz
push
addb
ficompl
push
add
add
mov
sub
push
fimull
add
xchg
mov
cli
and
stos
xchg
xorl
mov
cmp
mov
add
lods
xor
adc
jge
mov
testl
test
cmpl
nop
movb
push
int3
jne
mov
in
mov
jne
xchg
mulb
das
lahf
push
cmp
dec
pop
xor
cmc
cmp
xchg
lcall
icebp
mov
pushf
cwtl
ljmp
movsl
mov
clc
stos
shlb
in
push
mov
arpl
lea
gs
jg,pt
in
fistl
nop
inc
add
jg
pop
fwait
push
xor
xchg
pop
addb
xor
cmc
mov
sub
or
in
ret
xchg
pop
mov
enter
and
lcall
push
iret
int
je
xchg
sbb
jge
outsl
sbb
insl
in
hlt
xlat
dec
mov
xchg
scas
loope
add
insb
adc
add
mov
les
loop
jno
xbegin
enter
xor
vphsubdq
adc
icebp
loopne
add
sbb
ljmp
xchg
movsl
in
xor
mov
or
add
ret
call
xchg
xor
aaa
cmp
lcall
mov
sub
mov
inc
add
aad
jp
inc
add
sbb
or
mov
jge
xor
out
dec
gs
xor
jle
addb
pop
ds
add
das
test
add
or
sbb
mov
test
mov
add
sahf
daa
stos
xor
insb
pop
inc
jmp
add
out
add
xchg
mov
adc
add
popa
jmp
in
lcall
and
sarb
insl
pop
sub
jmp
popa
push
repz
dec
adc
mov
or
pop
xchg
inc
add
inc
xlat
jp
bound
lods
or
cmp
fmulp
mov
cs
jge
jp
push
xchg
daa
mov
xchg
lods
pop
push
outsb
popa
and
jb
ret
bound
stos
out
jle
int3
int3
sub
mov
ret
xchg
mov
jns
pop
enter
add
xlat
adc
add
push
pop
jecxz
push
xorl
add
repnz
sbb
or
dec
cltd
adc
std
xchg
out
adc
mov
mov
add
inc
add
movsb
bound
leave
ljmp
mov
pushf
cmc
dec
out
add
mov
jle
pop
jp
add
lret
stos
xchg
ret
push
xchg
push
add
add
add
movb
in
dec
ljmp
shll
insl
imul
jecxz
jle
jb
mov
imul
incl
add
or
dec
and
cmp
scas
pushf
sub
into
adc
jmp
mov
ret
pushl
hlt
lret
xchg
pop
mov
sub
jb
in
push
jle
add
fsubrs
das
addb
mov
lret
mov
sbb
cwtl
sahf
push
add
mov
and
add
jmp
lods
mov
jne
inc
add
dec
push
mov
xor
aam
lret
push
mov
sbb
dec
jl
cltd
jp
push
popa
dec
cmp
dec
add
mov
imul
mov
test
test
cmp
and
mov
jbe
daa
add
mov
sahf
nop
mov
lods
cmc
add
int3
sub
clc
out
bswap
imul
cmp
and
data16
cmpsl
roll
fadd
add
call
aad
rolb
jl
push
add
fbstp
fisubs
loopne
mov
push
test
lds
jo
xlat
xor
or
inc
mov
lds
mov
and
add
rclb
add
xor
test
cli
pop
mov
jecxz
mov
clc
clc
pop
jno
add
add
mov
or
jne
dec
test
cmp
imul
loopne
inc
add
aad
sbb
adc
out
adc
in
outsb
je
lds
or
nop
lock
mov
add
pop
pop
ficompl
fsubp
and
loop
shll
inc
add
adc
mov
cld
jg
and
out
int
popa
aaa
jg
xchg
insb
mov
xor
add
shl
sub
adc
imul
cmp
add
sti
add
xor
dec
sbb
add
lds
inc
dec
dec
addb
adc
add
mov
mov
mov
ja
jno
push
sahf
add
cli
imulb
sub
shll
faddl
mov
fs
cmc
out
add
jnp
clc
je
xorl
into
test
lock
out
notl
fwait
scas
jmp
inc
add
mov
in
push
xchg
into
push
push
nop
push
inc
add
or
stos
arpl
inc
add
lds
jge
jbe
iret
cmp
inc
fidivrs
test
mov
inc
add
pushf
fisubs
mov
lret
jmp
push
dec
aas
mov
fdivr
dec
imul
lretw
test
arpl
add
js
add
sub
rcrl
imul
mov
pushf
inc
add
je
and
int3
pop
das
mov
sub
ss
popa
sbb
add
add
sub
adc
ss
cmp
cs
data16
xor
data16
mov
adc
and
ja
fcmovnbe
in
add
sahf
add
push
ds
push
pop
sbb
outsl
mov
mulb
inc
add
and
or
and
push
jg
mov
or
ljmp
fadds
ljmp
add
or
add
mov
xor
xor
xchg
fsubrl
movb
push
es
mov
outsb
dec
mov
jge
or
add
mov
js
loop
mov
mov
aaa
dec
sub
mov
mov
imul
xchg
ficoml
fimull
mov
stc
lock
sbb
repnz
add
mov
pop
inc
add
rcll
clc
dec
sub
sub
jns
dec
or
insl
mov
repz
addl
test
decb
into
or
adc
cmp
movb
sub
add
add
lods
fwait
repnz
cltd
hlt
inc
movsl
xchg
jg
add
mov
adc
cmpsl
out
repz
dec
sub
adc
jp
xchg
pop
and
icebp
sub
js
mov
xor
decl
sub
adc
push
mov
add
enter
into
imul
xor
imulb
add
insb
mov
ficompl
hlt
and
sub
mov
cs
mov
sub
addb
jle
jp
repz
and
lret
in
mov
addb
in
iret
push
pusha
add
stos
inc
mov
rolb
xchg
pop
das
xchg
sbb
cmp
ds
sbb
dec
das
in
or
pand
leave
pop
iret
imul
add
outsb
addr16
push
xor
jp
ljmp
xchg
fidivrl
inc
add
nop
notb
sti
xor
repz
push
mov
rcrl
es
lock
bound
pop
stos
ljmp
jecxz
lret
imul
mov
movb
loope
adc
pop
dec
push
cwtl
in
add
push
xor
push
loope
repz
or
push
add
and
xchg
icebp
mov
mov
mov
imul
cli
test
sbb
addr16
les
push
stc
inc
fdivp
in
pop
pop
mov
cmpsb
sbb
add
jmp
add
rorb
mov
mov
dec
cwtl
jmp
call
loopne
pop
addb
adcl
add
icebp
pop
movb
pop
repnz
cmc
pop
movsl
inc
jmp
pop
mov
mov
inc
add
xchg
xchg
lret
push
cld
sub
adc
stos
test
call
pop
sub
cmpsl
cld
call
fisttpl
stc
loopne
adc
in
jae
add
int3
pop
pop
inc
add
cmpsl
fwait
xchg
cmpsl
cmpl
fstpt
ja
rolb
stc
subl
inc
sub
pop
cmpsb
jb
repnz
dec
mov
loope
cmp
scas
and
sub
add
in
and
jo
pusha
add
int
mov
movb
repz
insb
inc
add
fwait
cli
das
mov
jne
push
roll
inc
add
push
inc
add
mov
in
inc
add
repz
push
adc
add
inc
add
add
test
lock
xor
cmp
jmp
inc
add
sub
lret
push
arpl
add
popa
ljmp
push
shlb
pop
nop
ja
cmp
mov
sbb
adc
inc
add
iret
out
shrl
mov
movsb
repz
loopne
rcrl
jmp
cs
push
loope
ror
je
aam
pop
lds
adc
sub
ds
cmp
scas
add
dec
dec
fdivl
add
mov
sti
mov
shll
jo
pop
pop
je
pop
or
mov
ja
arpl
xchg
pop
sbb
insl
movsl
push
add
in
adc
popf
iret
pop
cmpsb
and
insb
fidivl
dec
ljmp
into
repz
je
adc
fwait
in
imul
lcall
add
rclb
add
shr
cmp
add
push
jb
sti
enter
push
and
repz
lret
in
out
inc
add
mov
out
mov
add
sbb
pop
stos
mov
cmp
out
mov
mov
xchg
sub
adc
mov
cld
mov
loop
insb
jmp
sub
push
test
into
push
sahf
std
aas
sub
push
add
movb
shll
out
aas
enter
sarl
hlt
jle
cmp
les
jp
push
pop
fimull
xor
fnstsw
or
pop
push
cmpsb
addb
aam
js
lret
cmc
lods
mov
aad
mov
pop
pushl
outsb
ss
sbb
sub
insb
lret
faddl
ja
ret
test
sbb
add
push
sbb
ja
dec
jae
lds
dec
push
push
add
lret
faddp
test
dec
inc
cmpl
jb
add
mov
sub
xchg
stc
outsb
mov
mov
loopne
jb
add
std
add
mov
dec
push
cmc
repz
cmp
jmp
adc
stos
stos
mov
jl
push
lahf
add
adc
jmp
inc
fucom
das
cmc
mov
adc
jecxz
sbb
dec
jmp
and
test
sub
lea
clc
and
test
addb
mov
hlt
nop
outsb
loopne
div
jle
add
add
mov
mov
fldl
je
push
fcompl
mov
mov
scas
pop
xor
and
cmp
jmp
mov
add
push
addb
fildll
test
call
and
mov
pop
jbe
xor
xchg
ret
jp
mov
jne
pop
loopne
cmpsb
or
mov
xor
push
lea
add
add
xor
add
sbb
out
add
adc
inc
and
popl
add
outsb
xchg
mov
add
imul
jns
lret
out
add
push
and
fs
cmp
xchg
scas
iret
and
aam
popf
repnz
fwait
sub
mov
ret
sub
sub
popa
push
mov
add
add
sbb
icebp
pushl
je
sbb
jmp
cmp
push
loopne
sub
sti
stc
jns
out
rolb
mov
push
addb
pop
mov
jecxz
add
icebp
insb
sbb
push
mov
rolb
xchg
cmp
mov
fimull
mov
mov
mov
lahf
push
add
add
movb
in
cmp
sti
popf
stos
sbb
mov
xor
pop
mov
inc
jecxz
jmp
jmp
iret
pushf
fisubs
rcll
int3
cmp
inc
add
push
cmp
icebp
nop
sub
rorl
or
or
xchg
jecxz
sbb
dec
mov
add
mov
sbb
pop
sbb
jns
stos
pop
daa
xchg
or
mov
cmpsl
popf
test
mov
mov
or
dec
fbld
aam
popa
and
inc
addb
stc
jl
add
and
adc
sbb
mov
sub
outsb
pusha
add
dec
pusha
add
sub
push
inc
add
adc
cmp
mov
xchg
test
shll
add
pop
and
add
lret
push
and
cld
rorb
add
divl
add
fwait
repz
rolb
add
add
push
test
cmp
in
fistl
notl
add
push
pushf
ja
dec
pusha
add
or
pop
sbb
jle
sub
push
aad
cltd
inc
add
andl
pop
inc
arpl
or
sti
mov
stc
or
and
lea
push
scas
mov
mov
imul
cltd
fcmovb
or
ret
pop
mov
inc
lahf
insl
movb
sub
addb
or
bound
lret
cwtl
js
mov
dec
inc
add
addr16
add
cmp
popf
xchg
inc
add
jbe
adc
cli
lods
mov
and
jb
in
js
push
sub
sbb
inc
and
insb
stos
cmp
xchg
and
or
nop
adc
push
test
jecxz
movsb
loop
adcl
mov
add
mov
in
test
shl
pop
mov
repz
fwait
mov
inc
pop
cli
imul
dec
mov
add
neg
jge
push
pop
pop
jo
jmp
es
add
cmpsb
rcl
addb
addb
adc
mov
scas
bound
mov
std
scas
mov
cli
add
cs
lret
push
pop
lahf
repnz
add
insl
loope
call
xchg
add
mov
out
ljmp
sub
es
rcpps
sbb
cmp
les
mov
inc
push
orl
stos
pop
jns
lods
push
test
xchg
and
cmp
cmp
shl
or
fisttpll
add
ja
clc
or
in
add
add
add
pop
xchg
int
call
pop
popa
mov
test
clc
pop
rolb
lcall
add
add
daa
fistps
adc
jg
mov
movsl
inc
add
mov
mov
dec
pop
sbb
test
fnstenv
call
dec
inc
push
test
pop
jae
mov
jo
lret
ja
movsl
stos
adc
jge
inc
sbb
rcrb
xor
je
mov
out
pop
push
rcrl
out
addr16
xorl
push
bound
sub
imul
mov
add
mov
push
mov
xorl
stc
adc
pop
xor
mov
push
es
mov
xchg
movb
add
push
and
sbb
adc
lret
arpl
idivl
stos
inc
or
and
inc
add
jo
sarb
test
add
cmpsl
repz
xchg
mov
repz
inc
addr16
scas
sahf
lods
mov
lea
in
incl
add
andl
fadd
add
sbb
mov
sbb
pop
imul
sbbl
inc
add
jp
sbb
add
and
es
lret
xchg
lds
xchg
sub
pop
pop
push
or
xor
loopne
add
add
mov
add
cli
sbb
addb
lock
ror
clc
pop
shll
loope
ficompl
scas
fs
add
and
add
jno
daa
push
mov
dec
js
inc
add
int
add
mov
inc
add
jo
add
add
insb
shll
sbb
adc
rolb
xor
add
stmxcsr
lock
sub
mov
pop
addb
ret
add
cmp
nop
dec
dec
aas
test
cmp
imul
or
inc
add
stos
lds
dec
adc
imul
mov
push
lcall
call
sbb
pushf
lret
lahf
pusha
add
inc
and
jns
mov
inc
add
xchg
movsb
xor
cmp
sti
repz
lcall
add
add
adc
jecxz
js
test
jne
add
mov
xchg
loopne
outsb
and
inc
xor
mov
lret
and
stos
fdivs
cmpsb
ds
pop
addb
mov
xchg
icebp
add
or
mov
daa
or
add
ret
inc
jns
fdivl
insl
lcall
aaa
push
outsb
dec
inc
incl
add
xchg
imul
sub
lahf
sbb
mov
push
loope
push
mov
jno
movsb
sub
test
arpl
rcll
in
loopne
jo
popf
and
outsb
pop
push
and
pop
mov
add
xchg
scas
bound
jnp
movsb
shll
inc
add
xor
add
xchg
dec
adc
arpl
sub
mov
jg
mov
fst
and
push
mov
sbb
cmp
fldl
adc
add
les
hlt
mov
add
lds
sbb
adc
jg
pusha
add
nop
cli
movsb
push
cs
idivb
or
bound
mov
mov
ret
bound
push
jo
int3
pop
out
add
sbb
insb
inc
add
outsl
pop
sbb
add
bound
cmp
pusha
add
jb
cmp
mov
adc
mov
prefetch
jbe
xor
add
in
push
out
bound
cmp
or
and
inc
add
push
lods
js
xorl
xchg
leave
sub
push
add
mov
fpatan
test
rclb
mov
pop
push
pop
xor
add
cli
adc
incb
scas
mov
adc
jp
repz
sub
or
mov
jb
adc
ss
outsb
inc
add
add
ljmp
cmc
das
arpl
jae
sbb
pop
shll
jno
rcrl
pop
stc
lahf
aam
adc
push
xor
sub
add
bnd
cmp
push
mov
xor
loop
lret
mov
push
add
push
push
adc
icebp
imulb
pop
push
divl
sub
dec
ds
jo
aad
cmp
popf
shlb
hlt
fnstsw
jbe
xor
jb
adc
push
sahf
mov
add
fwait
outsl
or
fbld
add
cmp
add
sti
xor
add
ds
mov
lods
dec
insl
ljmp
inc
add
add
jg
ror
sahf
inc
add
jo
imul
add
bound
adc
lret
push
into
je
cmp
mov
pop
enter
mov
das
xor
jno
dec
pusha
add
mov
scas
dec
cmpsl
cmp
adc
pushf
das
sbb
pop
idivl
or
iret
enter
xor
imulb
add
inc
dec
out
insb
ja
mov
mov
shlb
add
fcompp
stos
lea
add
inc
imul
dec
mov
frstor
js
jnp
mov
dec
outsb
addb
cwtl
adc
adc
xor
sbb
stos
add
test
iretw
hlt
test
bound
popf
xchg
std
test
dec
mov
aad
mov
js
lods
and
inc
dec
xor
sub
rcl
add
out
push
mov
aaa
repnz
sbb
into
mov
clc
xor
adc
stos
push
fimuls
adc
jp
adc
popa
das
push
add
inc
pushf
das
ret
xor
cltd
cli
push
dec
inc
add
lret
pop
loop
repz
and
sbb
dec
out
inc
add
stos
dec
adc
in
enter
in
ja
mov
dec
int3
enter
pop
mov
test
mov
rorl
pop
dec
loopne
cmpsl
dec
cwtl
add
sti
jle
pop
add
dec
lea
repnz
mov
jmp
cmp
addb
push
or
scas
call
stos
scas
in
xchg
or
fisubs
cmp
into
lret
add
cmp
lahf
test
push
push
sbb
inc
cmpsb
leave
jle
jne
cmp
out
push
mov
adc
dec
sub
cmp
and
lcall
jno
cmp
mov
pop
pop
jno
push
add
jp
into
ss
out
xchg
mov
add
adc
sar
dec
cli
dec
imul
add
cmp
ja
push
repnz
mov
cld
fldt
mov
aaa
inc
jb
mov
cmc
xor
sub
ja
pusha
add
adc
xchg
stos
and
mov
movb
mov
or
jp
lret
mov
add
ss
ficomps
sub
mov
or
pusha
add
je
fdivl
fimull
mov
mov
int3
and
fnstenv
lcall
mov
mov
test
sbb
pop
sub
aad
xor
jnp
cmp
neg
push
es
add
popa
jmp
add
mov
sbb
pop
xchg
mov
sbb
mov
rcrl
add
lahf
fcoml
dec
or
add
repz
pop
mov
and
add
clc
daa
cmc
in
cwtl
xlat
lods
adc
push
sub
cmp
movsb
jmp
hlt
mov
aam
lods
add
out
cmp
push
and
pushf
push
popf
fisubrl
inc
cmp
xchg
xchg
daa
movb
sbb
xor
insb
stos
cmp
pop
test
sub
dec
pop
jge
pop
push
xlat
cmpsb
sti
mov
add
xchg
jo
bound
push
cltd
mov
int3
mov
aam
addr16
das
ljmp
out
in
test
add
fiaddl
fisubs
subl
jns
loope
push
pop
clc
fadds
repnz
xchg
shll
pusha
add
add
js
repz
in
inc
push
in
dec
push
add
jle
mov
add
jbe
ret
jg
out
arpl
mov
out
xchg
lret
or
cmpsl
addb
in
mov
sub
and
pop
pcmpgtd
mov
ret
dec
dec
outsl
sub
cmpl
xor
add
push
mov
ret
pop
and
movb
loop
cs
rolb
push
sbb
imul
add
and
hlt
dec
addb
test
mov
and
lock
add
cmpl
mov
inc
mov
add
push
sbb
data16
arpl
push
jne
sub
and
sbb
push
add
add
xchg
pop
push
pop
mov
add
fwait
sub
and
lret
gs
adc
and
push
ja
shrl
fistl
ljmp
xor
dec
rcll
xor
lods
pushf
sbb
add
add
add
and
outsl
enter
jae
add
enter
stos
xchg
jge
addr16
mov
inc
add
pop
pop
les
lods
mov
imul
add
clc
popf
inc
int
add
xor
sub
in
shll
in
inc
add
push
dec
jno
js
aaa
pop
sub
incl
sbbw
scas
push
push
addb
in
bndldx
cwtl
test
out
sub
sub
mov
pop
or
loopne
pop
pop
fwait
pop
xchg
adc
mov
lods
test
sbb
add
cltd
jmp
arpl
mov
push
sbb
push
add
pop
icebp
lods
and
jle
loope
sarb
sbb
and
xchg
scas
fdivrl
or
outsl
mov
stos
sub
movsb
ret
inc
add
sub
cmp
pop
ret
jne
add
pop
in
sbb
mov
ja
push
sahf
fcmovbe
push
divb
sbb
xor
mov
or
and
mov
mov
pminsw
or
mov
ds
mov
leave
and
add
lods
mov
int3
push
jmp
lock
sub
sub
test
add
mov
add
adc
cs
lds
scas
cmc
icebp
daa
daa
xor
mov
lock
addb
bound
jmp
bound
mov
jns
in
add
sbb
pop
sbb
lods
dec
out
cmp
jae
push
roll
mov
push
jge
in
aas
adc
repz
sahf
ficompl
dec
adc
mov
iret
stc
mov
mov
pop
loopne
pop
ret
add
lret
bound
gs
clc
fwait
inc
add
jl
in
fnsave
push
xchg
cld
sub
cmp
mov
pop
je
daa
andps
dec
cmp
outsb
mov
popa
ljmp
imul
sbb
jle
js
adc
push
rolb
mov
js
add
loope
mov
sub
mov
mov
mov
es
cmp
clc
adc
dec
gs
mov
xchg
inc
lret
xchg
mov
lods
jle
jecxz
xor
addb
add
add
cwtl
rorl
mov
add
push
movsl
cld
in
xchg
dec
daa
push
shll
push
mov
cmpsl
icebp
idivb
xchg
ss
xor
inc
fnstsw
mov
test
cltd
xor
shrl
imul
lods
popf
shlb
dec
mov
jge
fdivrs
xchg
cmpsb
orl
into
in
sbb
stc
cmp
enter
lock
fsts
test
jo
cmpsb
mov
pop
and
sub
mov
add
sub
mov
into
mov
add
cmp
les
adc
ja
cmpsl
inc
add
dec
shlb
mov
rolb
insl
jmp
mov
xor
cmp
sbb
rolb
mov
ljmp
jno
dec
stos
pusha
add
mov
push
inc
add
cs
xor
test
or
bound
fwait
cmc
push
or
adc
out
cmpsb
mov
daa
push
mov
inc
sahf
xchg
or
inc
add
into
mov
mov
mov
push
pushf
fstpt
add
leave
add
sbb
lahf
notl
hlt
xor
cmp
sbb
popf
aad
mov
or
sti
sub
addl
dec
inc
adc
int
gs
add
fcoms
mov
add
push
sti
jbe
and
cli
mov
out
push
push
adc
push
rorb
addb
cmp
ja
mov
dec
pusha
add
lock
repz
int3
dec
push
shlb
scas
inc
test
lods
aam
loop
xchg
pushf
or
repz
sbb
imull
mov
test
fisubrl
adc
cmp
mov
test
add
mov
xchg
aam
mov
push
mov
add
fsts
add
mov
hlt
push
add
add
addb
mov
and
add
mov
or
in
outsb
rolb
mov
dec
jns
notl
lock
mov
bound
sbb
les
mov
pop
mov
scas
jmp
testl
jb
lahf
jo
pop
stos
in
and
lahf
jle
jg
pop
nop
adc
add
sahf
addb
add
mov
in
jge
sbb
add
mov
mov
pusha
add
add
add
hlt
mul
fisttpl
lods
lock
xor
add
cmp
fs
in
mov
xor
add
outsl
mov
add
dec
cld
es
sub
lret
aaa
cmc
cld
insb
cmp
nop
xor
pop
mov
lcall
add
cld
cmp
enter
xor
fbld
mov
mov
cmp
out
adc
int
movb
scas
addl
pop
xor
cmpsb
nop
adc
mov
and
push
ljmp
setl
lea
add
jp
cmp
inc
jp
xor
push
fcoml
dec
fisubrs
jbe
roll
mov
add
test
xchg
mov
jg
mov
movl
xchg
cmp
dec
xchg
pop
xchg
sbb
mov
arpl
mov
push
clc
neg
pusha
add
jg
fcom
xlat
and
aas
ret
daa
xchg
mov
lock
lret
mov
dec
mov
jmp
es
mov
fs
mov
xchg
add
fstpl
add
mov
cmp
cld
sbb
mov
rolb
loope,pn
jge
inc
add
sub
push
shlb
mov
or
scas
cmc
cmp
cld
inc
daa
loop
sub
or
jl
add
push
fmull
aam
mov
push
addb
in
movsl
fs
je
pushf
cwtl
jae
dec
push
add
sub
jne
ret
movsb
stc
push
rolb
lahf
lea
xor
dec
adc
dec
jnp
jno
add
sub
and
sub
out
adc
mul
sbb
sahf
sbb
sbb
data16
mov
pop
addb
rcrl
pop
icebp
push
popf
dec
pop
rolb
jle
nop
mov
mov
mov
add
rolb
push
xor
add
jle
into
lret
adc
aaa
or
inc
add
push
in
icebp
ds
es
push
repnz
cwtl
cmp
inc
push
es
fcmovbe
adc
jbe
inc
stos
imul
jmp
addr16
dec
bound
popa
pop
mov
lds
push
stos
adc
into
jmp
add
dec
movb
pop
lcall
add
cmpsl
test
add
decl
nop
mov
aaa
inc
aad
mov
add
scas
jno
mov
add
aas
cli
push
add
subl
test
sti
add
lock
cmp
mov
mov
and
jns
push
into
or
pop
jno
push
jp
or
add
push
cltd
inc
jns
lret
bound
dec
xchg
loopne
jmp
data16
or
pop
mov
fsubs
insb
pop
bound
mov
jmp
pop
lock
sar
sub
or
out
outsl
cwtl
or
sub
jmp
lret
dec
push
xor
mov
sub
and
nop
cmovns
jo
xor
sub
cmp
xchg
pop
inc
add
add
sbb
mov
mov
stc
jp
insl
aaa
pop
movsl
lds
and
mov
push
sub
cmp
dec
sub
js
and
fs
jecxz
outsl
sbb
arpl
pop
mov
push
mov
enter
xlat
mov
mov
jl
adc
shrb
pop
mov
stos
pop
test
addb
xchg
and
popl
push
add
popa
jmp
xor
add
stos
iret
rclb
adc
add
hlt
inc
xor
jp
lods
push
pop
lods
ljmp
mov
xor
push
add
pop
popf
scas
imulb
je
xchg
sarb
mov
pushf
mov
cmp
xor
imul
ds
dec
pusha
add
jae
add
dec
out
loope
push
fldcw
jp
pop
pop
jp
out
sub
jo
lods
adc
sub
xlat
pop
lock
sahf
xchg
orl
push
in
imul
popa
out
add
inc
inc
add
jle
mov
xor
dec
outsl
xor
hlt
stc
aam
sbb
insl
outsb
jo
sbb
pcmpgtb
mov
cmpsl
or
pusha
add
dec
xchg
pop
cmc
inc
in
fs
inc
add
popf
adc
in
mov
add
adc
add
addb
jge
xlat
cmp
push
xor
add
or
add
int3
popa
push
sarb
mov
push
jle
aas
lret
jmp
fdivl
dec
sti
mov
sbb
add
cld
cmc
or
imulb
adc
add
add
add
inc
and
inc
dec
push
fists
cmp
cmp
movsl
dec
outsl
iret
sub
popf
xchg
mov
cwtl
dec
adc
add
and
add
or
add
repz
pushf
and
sbb
xchg
pop
mov
in
mov
dec
data16
xlat
outsl
daa
les
mov
pop
adc
loop
lock
add
fmull
and
push
aaa
enter
lss
adc
mov
lcall
cld
xor
add
movb
popf
mov
xchg
jns
sub
mov
fnstsw
mov
pop
in
jp
insb
lods
lcall
mov
mov
in
lock
add
outsl
jb
push
lods
addl
int
push
faddl
sub
sbb
jp
dec
pusha
add
xchg
movb
mov
int3
add
or
out
loopne
xor
xchg
movsl
jb
dec
mov
ret
push
mov
sub
inc
add
fdivrs
loope
iret
or
inc
add
push
aam
mov
mov
fadds
out
push
test
xor
adc
out
stos
sub
sbb
lea
nop
rcrl
js
rcll
adc
and
xchg
das
les
out
lcall
add
push
sbb
loopne
and
sahf
jl
repz
pushf
xlat
js
setnp
cmp
das
insl
sbb
sbb
fnstsw
or
push
test
mov
add
add
push
mov
loope
icebp
repz
jb
nop
int
pop
xchg
iret
test
mov
addl
decl
in
imul
mulb
add
lds
mov
xchg
orl
adc
fwait
pop
std
nop
addr16
pushf
mov
add
jmp
add
dec
pushf
sbb
mov
add
mov
add
pop
xchg
push
sub
add
pop
outsb
scas
pushf
mov
jbe
xchg
xor
icebp
xchg
addb
mov
lods
pop
add
nop
adc
xchg
insl
jge
popa
rcl
push
xor
add
and
mov
and
add
in
push
movsl
mov
outsb
insb
cltd
cmpsl
cmp
and
inc
add
add
dec
ja
cs
ds
sbb
xchg
and
test
dec
xchg
xor
jo
shl
pop
add
inc
push
ja
push
add
mov
cmp
rcr
fstpl
dec
pop
xchg
aaa
and
ret
push
cmp
clc
mov
mov
or
in
mov
cli
gs
jp
into
jecxz
mov
fcomi
in
add
ficompl
push
ss
dec
or
mov
and
pop
insl
jmp
inc
add
inc
add
inc
repnz
add
movsl
sub
popf
cld
lret
add
ret
sub
enter
mov
loope
mov
xchg
mov
icebp
ljmp
add
adcl
movb
adc
sub
in
mov
out
lret
popa
pushf
pop
xchg
dec
mov
popf
out
cmpsb
sbb
ss
add
xchg
sub
imul
add
imul
jp
jae
in
push
pop
scas
dec
fwait
mov
notb
sbb
test
ss
fmuls
inc
add
loopne
mov
cmpsl
loopne
cmp
xchg
nop
nop
imul
int
mov
push
or
aaa
xchg
nop
pop
in
sbb
add
shll
cmp
icebp
call
dec
mov
xor
mov
sahf
stc
xlat
or
mov
add
xchg
and
cltd
or
int3
jge
jmp
add
popf
testb
dec
mov
sub
sbb
rolb
xchg
push
test
adc
enter
adc
xor
pushf
xor
xchg
sbb
nop
mov
in
call
adc
mov
cmp
std
pop
rcll
fstpl
test
jo
push
sbb
sti
cmp
adc
dec
out
cmpsb
call
add
inc
add
dec
rorl
xlat
out
xchg
jo
fisttps
xchg
xchg
xchg
add
aaa
mov
push
fst
int3
pop
enter
inc
enter
jmp
nop
addb
or
clc
addb
mov
add
loop
addr16
movsb
adc
xor
xchg
add
jo
dec
sub
mov
fs
cmp
inc
lret
cmp
sub
add
inc
add
stos
dec
adc
inc
xor
pop
insb
dec
mov
fisttpll
cli
jle
clc
sbb
es
cltd
std
inc
lods
cmp
popa
mov
jle
cmpsb
test
mov
xchg
sbb
lret
dec
pop
sahf
in
nop
cmp
push
nop
jp
sbb
add
movb
out
or
sbb
mov
imul
out
imul
jp
inc
loope
fidivrl
movsb
pop
gs
mov
push
addb
xchg
adc
lret
scas
ja
insb
cs
into
pop
lock
adc
sbb
dec
test
lock
or
vunpcklps
es
lcall
xor
add
add
and
cs
lret
cmp
repnz
pop
adc
insl
test
out
jle
addl
pop
pop
jnp
icebp
push
movsl
cmp
addl
popa
scas
cmp
fildl
les
lods
pop
or
rolb
sbb
push
mov
stc
sub
jnp
test
outsb
inc
add
push
movb
inc
add
popf
imul
adc
xchg
lods
std
fsubr
xchg
fildl
add
mov
xor
ret
hlt
loope
dec
and
jge
push
sub
in
adc
pop
jns
mov
ds
test
and
sti
pushf
and
rorb
jp
sahf
pop
pop
dec
mov
push
es
ljmp
cmpsl
fnsave
mov
incb
aam
in
jge
sbb
test
cli
xchg
sub
out
dec
rolb
sub
push
out
icebp
push
es
add
push
gs
pop
fstpl
cmp
add
in
insl
mov
cmpsl
mov
mov
mov
sub
ret
inc
push
pop
push
adc
jmp
push
ja
add
addr16
loop
push
rcll
xlat
push
pop
mov
lods
outsl
jl
mov
out
mov
add
push
dec
mov
ljmp
cmp
cwtl
in
mov
mov
xchg
and
loopne
dec
sub
lcall
outsl
ljmp
cs
and
je
faddl
pop
xchg
push
in
bound
inc
add
test
lret
sbb
mov
or
out
ja
movb
bound
push
add
nop
xchg
rcll
mov
cmp
lret
jnp
fsubrs
sub
inc
add
insb
scas
mov
add
dec
les
lcall
ret
xor
add
dec
or
xor
mov
add
push
sti
out
and
jecxz
cmpsl
inc
sbb
or
sti
or
stc
xchg
stos
bound
mov
dec
push
sub
cmpl
jno
outsl
cmovb
add
pop
add
lock
pop
dec
or
in
cltd
mov
adc
and
fsub
push
pop
mov
or
rclb
inc
add
dec
stc
movsb
mov
jecxz
push
jbe
dec
out
fsts
mov
push
adc
push
bound
cmp
push
jl
es
push
xchg
stos
xor
xor
mov
adc
das
and
xchg
add
sahf
filds
out
fs
dec
roll
lock
popa
in
mov
pop
sbb
jge
addb
xor
gs
xchg
cmpsl
in
or
int3
std
cmpsb
clc
les
in
lea
stos
out
stos
test
popa
pop
in
loopne
hlt
test
mov
movsb
aaa
xchg
push
mov
sbb
enter
xchg
or
xchg
xor
addb
loope
add
aad
xchg
shrb
addb
nop
fbld
dec
push
and
pop
lahf
cld
and
xchg
jge
add
inc
add
in
jno
inc
add
xor
es
and
xor
imul
xor
add
cld
int
xlat
stos
adc
sbb
xchg
mov
inc
add
lock
mov
imul
test
xlat
rclb
or
ret
imul
mov
ljmp
push
jp
pop
inc
add
outsb
inc
add
loope
loop
add
add
add
xor
jle
jl
push
jno
call
push
and
sbb
outsl
xchg
fwait
jne
lods
jno
adc
mov
mov
pop
adc
sub
fstpt
xchg
xchg
mov
mov
or
mov
loopne
aas
xchg
lret
fistpll
sahf
cli
sbb
js
add
push
mov
or
dec
insl
cmp
add
clc
cmp
loop
adc
add
test
clc
mov
pop
imul
mov
push
filds
add
ficoms
add
mov
imul
sbbl
push
addb
mov
sub
repz
ljmp
cmp
out
cmp
adc
add
or
bound
pop
stc
pop
push
xchg
mov
sbb
inc
add
mov
aam
push
ljmp
stos
je
aam
fsubr
fcomip
ja
sbb
testl
in
outsl
into
xchg
jl
sbb
jo
adc
add
negl
lcall
add
ret
in
pop
push
fucom
cmp
jb
rolb
jge
ret
mov
mov
mov
mov
div
mov
jecxz
add
add
add
into
push
dec
les
scas
jle
jne
mov
ds
mov
ljmp
dec
fwait
xchg
iret
xchg
addb
jmp
stos
popf
loope
mov
es
inc
add
sbb
dec
out
xchg
popa
jno
pop
push
cmp
cmp
add
fbld
sub
add
mov
test
jno
fsubr
dec
nop
sbbl
push
dec
lahf
mov
mov
pop
push
fnsave
sbb
inc
add
outsb
push
fstp
adc
lock
cltd
sub
das
lret
push
movsl
mov
test
cwtl
or
in
push
add
add
movsl
arpl
xchg
bound
sbb
mov
pushf
push
or
loop
sti
mov
xor
scas
mov
rcrb
out
or
pop
inc
add
pop
insl
scas
std
pop
inc
add
cmovl
add
fsub
or
xor
es
inc
lods
jns
sub
jnp
or
inc
push
or
pop
mov
add
in
cli
cmpl
imul
loop
movsl
stos
push
cmp
in
mov
add
adc
aam
sub
mov
mov
loop
insb
icebp
sbb
pop
jg
js
mov
loopne
imul
push
int
jecxz
pop
lods
sbb
lock
add
push
or
mov
add
cmp
iret
jne
incl
add
cmc
sar
cmp
jmp
inc
add
filds
add
pop
push
or
cmp
mov
test
insb
aad
in
jl
lds
push
mov
and
addb
add
lock
repz
cwtl
or
adc
cmc
je
jmp
mov
xchg
cltd
push
add
inc
jmp
leave
scas
je
or
inc
add
add
and
cmp
add
sub
mov
jmp
outsl
out
cmp
mov
arpl
outsl
jne
add
add
lcall
loop
add
lock
or
inc
movsb
cmp
mov
sbb
sub
push
movsb
mov
fs
inc
add
aaa
mov
adc
mov
add
adc
add
or
popf
add
push
jnp
pop
push
xor
pop
xrelease
xor
mov
dec
push
mov
add
out
imul
scas
add
or
fsubrs
xchg
pushf
mov
cmp
ljmp
add
bound
nop
rolb
add
pop
stc
sti
add
xlat
xchg
in
out
lahf
xchg
xchg
or
mov
adc
mov
subl
mov
rcrl
add
std
lock
adc
or
inc
add
add
xbegin
popf
in
test
stos
enter
pop
pop
xchg
popa
mov
cs
mov
rolb
call
xchg
xor
test
sub
add
into
push
fcompl
add
mov
lret
imul
stos
adc
mov
rolb
cmp
cmp
xchg
movsl
mov
jecxz
mov
int3
xchg
lahf
inc
test
and
gs
pop
xchg
mov
and
jbe
inc
push
pop
push
and
in
int3
sbb
mov
jmp
lcall
jb
xlat
push
rol
add
lock
xchg
inc
add
sub
add
xchg
cmp
mov
xchg
fwait
jo
out
adc
add
inc
add
inc
fcmovbe
pushf
dec
bound
addb
outsl
and
dec
ja
mov
clc
pop
jge
jno
and
cmpsb
cli
add
mov
mov
notb
lea
sti
call
add
pop
icebp
dec
lds
or
out
cmp
inc
xor
out
add
aaa
hlt
movsb
gs
push
aas
iret
push
les
sti
ds
push
fcmovu
mov
rolb
cmc
js
add
in
arpl
xor
inc
add
jb
cltd
push
push
add
push
clc
enter
ss
jb
call
xor
mov
mov
ja
mov
sahf
adc
sub
call
cmpsl
push
addb
lock
test
xchg
ret
cmp
xor
sub
xchg
addb
ret
sub
or
imul
add
mov
aas
fbstp
push
insb
les
jp
jb
xor
sahf
imul
mov
in
push
add
repnz
outsl
inc
add
imul
mov
les
pop
xchg
add
js
sub
rclb
clc
fisttps
pushf
lea
js
jl
mov
fcoms
mov
mov
jge
mov
mov
mov
add
and
inc
add
cmc
pop
xor
dec
push
and
adc
pop
cmp
shrl
roll
cmpsl
jmp
mov
pop
jne
lcall
daa
out
jo
add
xchg
push
imul
mov
adc
cli
xor
addb
inc
pusha
add
xchg
jle
sub
bound
cmp
push
cmp
push
cmp
lds
jl
repz
add
mov
mov
imul
dec
out
in
lods
push
sub
aad
cmp
xchg
pop
test
insb
jg
lods
mov
stos
imul
add
pusha
add
sbb
pop
loop
xchg
lea
xchg
pop
shll
insb
cmpsb
ljmp
flds
aad
pop
dec
mov
sahf
addr16
add
jp
inc
add
movsb
dec
mov
adc
sbb
pop
das
xchg
daa
iret
xchg
pop
sub
cmpsb
cltd
jo
inc
add
inc
xchg
jg
stos
mov
mov
lret
add
add
mov
aam
aad
daa
mov
mov
pop
dec
push
cld
fidivl
lods
jp
mov
rol
lock
cli
loop,pt
cs
cwtl
addl
jno
push
add
or
je
xchg
or
pop
mov
cld
andl
sti
je
cld
add
jp
push
call
sbb
mov
jo
imul
std
push
insb
xlat
je
repz
movl
xchg
les
jbe
add
cltd
ficompl
mov
dec
dec
jns,pt
aaa
fsubs
cli
mov
loop
add
adc
add
cld
out
in
aam
jp
int3
xor
push
xor
scas
jle
push
jecxz
ret
xor
cmp
add
loopne
dec
imul
xchg
insb
movsl
jb
jno
dec
rolb
push
or
ss
mov
inc
add
dec
mov
mov
lahf
sub
add
add
lret
test
mov
lcall
rolb
ds
and
movl
aas
jl
sbb
movsl
test
inc
add
in
push
mov
lret
out
lcall
add
mov
fildl
pop
xchg
mov
mov
add
sbb
xchg
fimull
rcrl
push
xchg
sahf
out
sub
imul
repz
ljmp
add
les
or
js
sub
pop
movsl
cs
push
and
push
scas
insb
pop
dec
or
rcrl
pop
xor
inc
xor
outsl
sub
lcall
xchg
cld
jmp
mov
popf
and
mov
cmpsl
outsl
xchg
xor
int
loopne
outsl
push
inc
sbb
and
push
les
hlt
out
or
testl
add
adc
mov
sti
rolb
ret
mov
enter
mov
ss
sub
scas
push
lahf
mov
mov
mov
icebp
bound
add
call
mov
add
js
test
repz
addb
add
mov
movl
aad
cmpsl
mov
mov
push
or
jle
test
mov
repnz
test
lret
xchg
imul
fnsave
cmp
mov
arpl
dec
notl
add
cli
push
inc
add
pop
cmp
mov
mov
aam
jecxz
lahf
bound
std
cltd
test
outsb
lock
push
add
sbb
ds
es
jl
cltd
int3
jne
sub
imul
add
hlt
push
lea
jae
inc
pop
cmp
les
mov
and
add
in
aas
in
lcall
jg
sbb
pusha
add
add
mov
jle
push
add
add
je
mov
dec
rcrl
xor
xor
repz
loop
stos
sub
jae
cmc
mov
add
xchg
push
add
add
hlt
stc
clc
xchg
clc
iret
push
shr
enter
dec
leave
in
ljmp
add
cmp
pop
cmpsl
jge
popa
cmp
push
test
add
in
sti
or
lea
sbb
and
add
insb
jae
dec
mov
dec
dec
into
lahf
imul
cld
lds
lds
mov
adc
nop
fnstsw
adc
add
ja
test
fcomps
xchg
incl
add
or
ret
inc
inc
dec
loope
jne
mov
cmp
add
mov
loop
hlt
pop
test
adc
call
xchg
jg
xchg
inc
int3
sbb
lret
fildl
int3
or
inc
xor
xor
jle
icebp
and
xchg
loopne
cmp
data16
je
or
fsts
fcmovu
xor
das
int
lods
int
dec
pop
test
sti
add
shlb
mov
jnp
enter
hlt
sarl
jmp
sahf
imul
inc
add
ficompl
pop
xor
jecxz
add
push
add
fcomi
push
ljmp
xchg
mov
arpl
lods
arpl
push
cmp
jmp
daa
addr16
cld
add
cmp
lods
stos
out
add
mov
dec
lret
cmc
aas
out
jno
mov
and
mov
add
sbb
sarl
xor
cmp
mov
rorb
test
jb
loop
orl
int
lret
cs
fisubrs
lea
incb
jns
filds
add
or
add
fdivl
inc
outsl
rclb
ljmp
add
or
xchg
adc
shll
sbb
ret
dec
dec
xchg
in
pusha
add
addb
sub
adc
add
add
add
outsl
adc
add
addb
mov
loope
stos
push
pop
in
dec
push
push
mov
push
cmc
mov
add
ret
mov
adc
or
test
pop
movsb
jb,pt
cmp
push
incb
subl
push
push
pushf
popa
dec
ljmp
and
inc
add
xor
add
push
jne
test
sahf
data16
push
addb
push
in
xor
jge
imulb
jecxz
test
mov
imul
adc
lahf
sbb
add
repnz
xor
js
jmp
jbe
add
loope
and
xor
and
jmp
add
dec
fistpl
add
outsb
push
jae
cmp
jge
jmp
cli
push
add
stos
lods
or
and
cltd
lods
repnz
and
xchg
aaa
push
xor
xorl
cmp
push
xor
add
cld
pop
scas
cmc
imul
adc
jne
add
fbld
or
add
bound
in
mov
dec
stc
leave
repnz
sub
or
call
pop
adc
add
aaa
dec
mov
stos
pop
les
fldenv
jbe
addr16
outsl
mov
xchg
push
xor
gs
outsb
jge
pop
cmpsl
jl
or
cmp
push
add
add
mov
lea
xchg
jge
in
mov
jne
add
mov
loopne
mov
xchg
cltd
imul
stos
push
sub
int3
data16
sub
scas
je
dec
inc
add
push
push
pop
xchg
insb
lea
pop
or
xchg
xlat
rcll
or
pop
or
inc
inc
cmp
mov
jle
dec
or
std
mov
pop
xchg
cmp
add
jae
or
std
dec
call
insl
sub
inc
add
mov
add
lds
add
into
sub
cmpl
add
push
or
addb
sbb
insl
fstl
aad
loop
ljmp
mov
roll
or
add
adc
mov
in
testl
cmp
mov
add
cbtw
lods
jbe
add
add
popa
pop
cmpsb
xor
fwait
pop
fiadds
outsl
ret
loop
push
mov
int3
fs
sub
aam
rolb
fldl
push
adc
movsb
cmp
jo
dec
push
inc
add
add
mov
aas
mov
adc
clc
mov
out
dec
sub
add
stos
adc
std
and
add
insb
outsb
xlat
cltd
fiadds
int
add
in
lret
pop
dec
ljmp
jmp
mov
and
iret
test
out
fstl
lock
push
lcall
leave
icebp
insb
pop
cld
lock
loope
insl
dec
cli
and
aam
add
adc
add
cld
xor
push
or
sbb
cmpsb
mov
add
add
dec
addb
imul
rorl
jns
inc
mov
mov
inc
add
push
sti
or
mov
mov
lcall
insb
jae
add
push
cmpsb
jecxz
outsb
pushf
std
cmp
jae
cmp
scas
push
sub
sarl
in
xor
ja
mov
out
xchg
mov
jg
jle
cmp
sbb
cmpl
cmc
aad
ret
ret
scas
int
mov
sub
aad
imul
dec
dec
inc
sub
add
pop
lods
iret
das
sub
mov
nop
jmp
lods
inc
ss
mov
mov
fwait
or
adc
fiaddl
mov
out
aaa
push
adc
roll
ret
sub
gs
imul
pop
mov
adc
out
mov
leave
jb
sbb
out
jo
mov
dec
add
enter
add
push
loope
adc
add
or
and
outsl
sub
push
jnp
inc
add
lret
jns
add
pop
outsl
push
add
sbb
pop
adc
xchg
ljmp
and
rcrl
lods
jecxz
leave
mov
sub
pop
mov
clc
hlt
stos
cwtl
pop
test
jl
jmp
setl
test
dec
xchg
xor
pop
add
xlat
xor
enter
xor
fs
and
or
add
add
es
and
push
add
sahf
cmp
add
xor
xchg
not
jae
push
jns
dec
and
arpl
scas
lods
mov
dec
fistpll
lret
mov
iret
mov
or
scas
push
cmp
mov
scas
sub
add
inc
add
incb
pop
ds
test
inc
add
xchg
bound
push
add
arpl
adc
rorl
mov
mov
enter
mov
sbb
sbb
fadd
add
fnstenv
sbb
mov
push
popf
test
enter
push
lods
aad
jae
js
out
dec
pop
loopne
mov
add
ja
out
xchg
mov
pop
push
pop
mov
dec
cmp
dec
ljmp
arpl
cmp
in
stc
and
lds
ret
and
adc
add
lock
pop
adc
outsb
aam
add
xor
mov
test
or
add
daa
cld
mov
pop
mov
or
or
xor
daa
arpl
loop
adc
push
scas
mov
inc
dec
out
mov
lods
and
out
test
and
push
mov
jmp
imul
orl
icebp
add
add
or
and
insb
and
xchg
sub
jno
ds
clc
test
adc
jl
ret
std
dec
push
bound
jno
add
dec
sahf
testb
ja
fimull
ja
push
xor
add
cmpsl
mov
add
mov
sub
js
sub
mov
lock
mov
cltd
jbe
cltd
pop
xchg
insl
add
dec
test
lock
mov
push
push
iret
sub
out
jmp
cli
pop
fs
lock
add
pop
rcll
test
xchg
dec
xchg
push
and
loope
mov
push
inc
rorl
pop
cmp
add
mov
insl
pushl
mov
push
in
mov
dec
pop
dec
mov
mov
fadd
add
jbe
add
cmp
add
fstps
aas
out
leave
mov
pushw
fstp
jecxz
inc
pop
sti
pop
jae
jne
adc
into
loopne
imul
add
adc
les
push
jl
sbb
addb
testb
adc
jno
mov
outsl
jmp
nop
cmp
outsl
and
pop
xor
mov
into
lret
gs
int3
add
xchg
cmp
stos
fdivs
cli
shlb
stc
mov
add
dec
mov
mov
xchg
and
pop
sbb
outsb
mov
jmp
outsl
sub
mov
xchg
pop
les
push
add
adc
jmp
or
add
std
mov
lret
mov
jmp
push
xchg
xchg
cmc
lret
add
inc
add
adc
aas
iret
mulw
jo
mov
jb
adc
in
lock
ja
aad
dec
addb
mov
inc
add
inc
add
xchg
jl
iret
xchg
mov
add
movsl
and
je
movb
jmp
call
xchg
leave
ret
cmp
shll
add
mov
mov
nop
mov
xlat
fs
pop
cmp
cmc
mov
stos
sahf
jp
icebp
aaa
ljmp
in
cmp
pop
push
add
sub
sarl
cmp
mov
cltd
sub
mov
icebp
loop
addr16
dec
adc
in
mov
mov
xchg
cmp
jp
xchg
psllw
mov
jnp
push
dec
add
sub
mov
or
in
or
and
jb
sbb
inc
mov
cmp
lret
mov
dec
repnz
lcall
imul
iret
jmp
cmp
movsb
cltd
in
jge
mov
and
push
mov
mov
add
jmp
add
mov
in
inc
add
divb
push
push
add
pop
or
ds
test
addb
sub
lret
fnstsw
push
jecxz
add
out
pop
mov
pop
dec
jns
fdivr
cmp
sahf
jmp
cmp
xchg
fcmovnb
aad
ret
xor
ror
and
add
lods
inc
mov
push
or
cld
or
dec
clc
xchg
dec
or
cs
or
outsb
out
popa
in
jg
jae
pop
fimuls
outsb
in
cmc
cmp
repnz
loopne
sub
filds
add
jecxz
sub
loopne
testb
rcrb
add
pcmpeqw
jbe
push
jp
jp
add
fwait
dec
mov
lahf
les
push
and
clc
adc
js
addb
inc
add
fcomps
dec
push
and
leave
push
ja
movsb
xchg
sbb
outsl
daa
mov
sbb
push
jp
cs
out
mov
xchg
mov
sub
mov
lcall
mov
repz
cmp
sub
out
pop
les
ss
xor
push
cwtl
adc
jmp
pop
pop
jecxz
nop
paddsb
clc
pop
add
mov
add
add
push
hlt
cltd
mov
jb
movsb
or
aad
lea
cmp
adc
cld
sbb
jmp
js
outsl
mov
fsubrl
add
xor
adc
pop
xor
push
pop
mov
jnp
push
sbb
addr16
lahf
call
pop
lret
add
or
or
add
push
icebp
decb
movsl
mov
add
leave
aaa
add
out
repnz
outsl
inc
add
into
or
mov
addr16
aas
inc
sub
and
xchg
cmp
push
movb
js
xor
popf
push
ss
fnstcw
add
jnp
sbb
adc
add
add
cmp
mov
push
mov
pop
leave
lock
das
adc
jbe
xchg
scas
or
or
fcoms
adc
or
lret
pop
jle
sarl
sub
adc
into
inc
jecxz
xchg
cmp
mov
push
xchg
mov
jmp
jge
push
cli
jns
push
jae
mov
stos
push
or
add
stos
pop
and
imul
add
mov
cmpsb
mov
or
cmp
and
add
shrb
cmp
xchg
inc
movsl
int3
jne
push
add
push
pop
aas
in
mov
push
sub
lret
xchg
bound
shlb
fcmovnb
add
dec
fs
inc
pusha
add
or
mov
cli
add
leave
and
jecxz
mov
aam
inc
hlt
repnz
test
and
cmc
addb
xor
add
add
inc
add
pop
fdivp
mov
xchg
add
jns
xchg
pusha
add
mov
mov
or
adc
lods
loope
fdivrs
mov
mov
mov
lahf
xor
les
mov
mov
jno
mov
stos
dec
jbe
les
push
push
mov
mov
repnz
lahf
inc
add
add
cmp
xor
jmp
popf
pop
push
test
add
xchg
mov
and
notb
movsl
fmull
cmp
sub
stos
cmc
xchg
rcl
stos
ret
fwait
jne
pop
pop
jns
jno
or
push
push
stc
cmp
jns
cmp
stos
cmp
mov
popa
repnz
cmpsl
mov
mov
popa
out
lret
popa
mov
out
icebp
ja
lods
repnz
int3
testl
xchg
pop
sub
outsb
clc
add
mov
jno
loopne
add
cmc
mov
adc
add
fnstsw
mov
lods
sbb
or
nop
pop
scas
sahf
push
outsb
jae
adc
test
or
in
mov
jge
xchg
divl
add
cmpsl
test
ret
cmp
jae
mov
pop
sti
fisubs
xchg
adc
pushf
sbb
adc
gs
add
rolb
ret
addr16
or
xchg
adc
jmp
aam
inc
add
push
mov
sarl
xchg
jb
push
inc
add
mov
cmp
lcall
notl
outsb
push
imul
movsb
push
test
orl
ret
fsubs
hlt
push
std
push
push
rcll
fyl2x
pop
pop
clc
movsl
push
shrl
rolb
add
pop
out
ss
bound
cmc
out
addb
mov
addr16
mov
popf
outsb
push
test
pop
add
movsl
sbb
add
dec
pop
push
mov
sbb
inc
add
repz
inc
add
mov
hlt
pop
mov
mov
test
movsl
iret
and
sbbl
jge
add
fimuls
frstor
js
add
push
inc
int3
sbb
add
dec
mov
inc
mov
test
dec
scas
mov
mov
and
dec
lods
in
fdivp
xchg
sub
outsl
xor
push
std
jbe
inc
add
push
add
jbe
lods
bound
popa
scas
cmp
call
mov
or
pushf
into
mov
aam
movb
sub
lahf
dec
sbb
in
pop
pusha
add
add
jmp
mov
nop
pop
sbb
ds
add
push
test
and
inc
cmpsl
mov
aam
mov
dec
pop
mov
add
les
adc
pop
sub
roll
int3
cmp
js
inc
rorl
sbb
jg
jno
jecxz
push
add
xor
mov
push
rcl
aaa
mov
cwtl
int3
psubsw
adc
add
xrelease
pop
sbb
in
in
and
pop
inc
pusha
add
daa
mov
shll
call
xlat
lock
in
mov
outsb
mov
add
sub
add
mov
sbb
lock
int3
cmp
mov
hlt
fwait
jo
push
add
mov
push
pushf
jbe
ja
push
adc
ret
jge
push
gs
add
push
stos
dec
orl
sbb
ja
pop
xchg
jo
sbb
in
fcomi
push
loope
cmp
lds
insl
sbb
mov
push
mov
stc
sub
xor
repnz
mov
scas
ljmp
in
outsb
aaa
xchg
jne
adc
push
mov
jl
mov
push
mov
insl
es
mov
icebp
lods
outsb
mov
xchg
imul
xchg
sbb
jle
mov
and
arpl
ret
mov
inc
add
push
xchg
push
jbe
xor
repz
jle
add
fwait
or
movsl
cltd
incl
jbe
movb
and
cmpsb
and
stos
sar
and
das
jbe
push
inc
add
outsb
sbb
movsb
adc
addr16
dec
shll
ja
mov
add
jnp
call
adc
je
pop
sub
in
repz
ja
sbbl
cmp
xor
pop
sbb
mov
xchg
insb
pop
pop
gs
mov
decb
sub
jb
ror
jmp
out
insb
mov
jecxz
outsl
inc
add
je
fwait
out
pop
pop
movb
jmp
inc
mov
xor
aam
sahf
or
out
fdivr
pop
pop
je
or
aad
xchg
jae
add
mov
int
add
mov
int3
add
fidivl
sbb
xchg
xchg
push
dec
cmp
cmp
xchg
inc
call
adc
push
jbe
mov
or
adcl
lods
push
imul
outsb
pop
addb
fists
jp
xchg
repnz
shlb
adc
mov
test
cmc
sub
mov
or
push
sbb
sahf
imull
lahf
inc
add
lcall
pop
imul
mov
pop
clc
pop
out
xor
inc
decb
adc
add
clc
inc
add
add
pop
pusha
add
add
lret
or
add
pop
jle
cmp
add
lcall
sub
push
ja
enter
arpl
inc
add
mov
dec
and
lret
jg
adc
cmpsl
dec
in
jo
mov
in
and
jns
enter
and
shll
notb
mov
aas
add
push
sahf
mov
sub
mov
mov
nop
addr16
repz
js
bound
je
lret
push
and
sub
dec
inc
adc
cmpsb
add
ret
fisubrl
fnstsw
pop
xor
pop
sub
xchg
sarl
hlt
inc
add
dec
adc
addb
mov
add
jmp
mov
add
in
add
sbb
dec
loopne
push
in
int
js
push
add
mov
test
pop
sub
cmc
imul
add
mov
add
repnz
cltd
insb
rolb
ficomps
in
insb
ds
jle
fisubrl
add
or
cmp
push
fsubrs
add
dec
fisttps
pop
leave
ljmp
inc
add
aam
or
or
add
stos
inc
add
adcl
test
imul
shrl
test
sbb
scas
mov
mov
add
jb
icebp
cmp
and
icebp
xor
out
enter
and
movb
movsb
and
aam
jnp
xor
inc
sub
xchg
addr16
jne
mov
mov
cmp
adc
rorl
xor
out
pop
filds
fcom
and
lret
imul
and
inc
loopne
out
and
add
or
aas
and
fcomi
inc
pusha
add
movsl
movsl
and
jae
addr16
inc
or
in
lcall
mov
add
sbb
js
xor
jp
orl
dec
mov
sub
rolb
shrl
jne
push
in
sub
mov
add
iret
inc
mov
repnz
cli
ja
enter
push
addb
in
cmp
std
cmp
mov
cmp
jnp
mov
shl
mov
fcomi
lds
add
ret
lahf
and
mov
inc
aam
stc
movsb
jmp
jne
sahf
jae
fcmove
push
pop
shrl
add
frstor
mov
add
pop
jmp
and
dec
dec
lahf
xchg
pop
out
sti
pushf
sbb
and
jb
fwait
pop
add
scas
mov
ret
add
pop
mov
or
das
mov
sahf
dec
repz
xchg
add
dec
pop
xor
outsl
sbb
mov
lret
pop
sub
sub
gs
std
jnp
sub
jno
leave
dec
mov
bound
aam
pop
push
cmpsl
dec
jae
cmp
insb
bound
loopne
lahf
xchg
subl
lcall
sub
xchg
nop
enter
cmpsb
inc
jae
jmp
addb
ljmp
mov
rol
mov
fdivs
loope
mov
fucomip
iret
test
mov
add
xrelease
das
jb
jp
jle
movsb
xchg
sub
mov
lcall
test
daa
mov
add
add
enter
lahf
movb
adc
xchg
inc
dec
fstl
push
and
mov
add
mov
mov
xor
cmpsl
adc
inc
shll
adc
or
dec
imul
add
sub
int
je
jge
cmp
add
dec
stc
sbb
pushf
cwtl
ret
push
fisttps
int3
mov
sbb
ljmp
imul
mov
add
mov
in
int3
mov
push
repz
jp
xchg
cmovbe
movl
cmp
add
or
sbb
mov
cmp
stos
outsb
pop
inc
add
inc
add
outsb
lret
fwait
dec
push
daa
add
mov
outsb
loop
inc
fmuls
ljmp
push
les
inc
sbb
movsl
xchg
fisubrs
xor
imul
add
cld
sub
je
popf
repz
fidivrs
inc
cltd
loope
add
mov
outsb
xchg
fimuls
jnp
and
add
scas
jne
add
ss
sub
es
mov
lahf
loopne
sub
add
sbb
sbb
push
mov
xchg
and
inc
jmp
das
jp
lcall
popf
lret
mov
addb
ja
inc
lea
test
fldt
addr16
fdivrp
testb
in
pop
dec
sub
push
mov
or
or
push
mov
lcallw
xor
xlat
cmpsb
fs
jbe
ja
testb
scas
or
add
stos
cmp
push
movsl
sahf
gs
add
aad
or
lds
or
cmpl
mov
sbb
lret
cli
scas
push
add
test
sub
inc
add
mov
rolb
lret
fstl
jg
add
jg
les
jmp
add
xor
jbe
push
pop
js
fs
mov
iret
repnz
insl
lock
shl
sbb
sbb
negl
stc
pop
test
sub
pop
je
xchg
xchg
mov
mov
sub
movsb
sahf
pop
xchg
movsl
xor
adc
jb
mov
add
mov
xchg
loopne
xchg
stos
pushl
movsl
lret
cltd
addr16
ret
jmp
add
cmpsb
in
push
xchg
addr16
mov
les
sbb
sub
cmp
rolb
stc
sbb
mov
add
stos
inc
add
add
das
mov
dec
mov
or
lods
inc
add
int
divb
mov
out
stos
aam
push
add
add
sbb
fwait
jg
xchg
out
xor
les
incl
icebp
xor
jecxz
mov
aam
cs
cli
sahf
mov
out
jp
jg
add
or
mov
inc
aad
mov
dec
outsl
pusha
add
fsubl
add
stos
pop
not
adc
xor
cmp
add
scas
jle
inc
add
pop
push
add
les
xor
fsubs
enter
lret
or
test
mov
add
cmp
dec
addb
add
mov
mov
cmp
add
adc
adc
mov
pop
out
cmp
mov
adc
stos
int3
jne
pop
cmp
rorb
sbbl
int
subl
cwtl
mov
loopne
enter
inc
pop
dec
fmuls
or
cmp
sub
add
sbb
testl
push
icebp
fwait
cmpsl
mov
std
mov
das
jne
adc
xor
jmp
or
add
lods
xor
loope
pop
jg
cld
mov
jne
mov
in
test
fcmove
add
lods
icebp
stos
jg
pop
sub
js
inc
add
pop
das
aad
mov
jae
cmp
mov
push
xor
stos
mov
out
pop
xor
add
lahf
dec
jb
push
jnp
adc
push
dec
pusha
add
pop
mov
sti
inc
add
xchg
fildll
dec
and
je
push
sub
add
add
adc
mov
inc
sub
lods
add
in
pop
popf
stc
aad
or
push
push
int3
push
jnp
adc
int
add
inc
add
cmp
mov
sub
xchg
idivb
add
jp
repnz
loop
jmp
xchg
xor
out
dec
push
cmc
dec
rolb
popa
fs
push
notb
insb
daa
icebp
orl
dec
pushf
cmpsl
push
add
add
lock
lods
adc
mov
in
push
ret
xchg
xchg
push
add
iret
popl
sbb
test
sub
jbe
addb
or
xchg
sbb
je
inc
add
loop
aad
mov
sbb
rolb
pusha
add
repz
aam
js
rolb
stos
push
add
addb
jae
sbb
xchg
sub
adc
cmpsl
cmp
sbb
xchg
mov
int3
call
jp
jb
into
cmpsl
jbe
mov
add
jno
data16
out
jl
outsl
xor
divb
ret
inc
add
and
and
mov
inc
cmp
adc
testb
cmpsb
test
scas
pop
popa
cmp
adc
cmp
mov
adc
dec
pop
inc
add
nopl
js
inc
xchg
popf
or
flds
fucomp
clc
push
cld
jmp
stos
mov
add
add
push
iret
cmp
out
xchg
and
mov
add
ret
push
clc
out
adc
push
mov
popf
mov
adc
mov
xchg
scas
fbld
cli
arpl
leave
dec
xchg
jae
add
add
dec
daa
ljmp
imull
jns
hlt
aas
jb
aas
push
and
imul
inc
add
jp
jge
xor
das
inc
add
xchg
add
iret
dec
cmpsl
jae
in
lock
psubusb
push
and
jnp
subl
mov
xchg
lods
dec
int
in
adc
add
add
pop
call
mov
push
scas
fsub
or
add
push
mov
arpl
add
sbb
jle
lcall
out
addr16
cld
fcompl
push
mov
cmp
mov
clc
jl
add
int3
mov
mov
mov
js
add
sbb
ss
rcrb
loope
push
or
xor
ljmp
and
cmc
ret
pop
cmp
inc
mov
insl
ret
mov
xchg
cmp
add
pop
pop
jmp
cmpsl
lret
ja
fyl2x
cwtl
sbb
push
jg
lods
addb
dec
mov
jno
xchg
xchg
mov
mov
data16
add
enter
dec
cli
pop
in
out
mov
push
fwait
jns
inc
add
adc
clc
sbb
mov
dec
mov
cmp
adc
je
add
xchg
mov
dec
fdivs
mov
js
xor
or
pop
xchg
mov
aas
outsl
std
xor
out
or
pop
dec
das
dec
push
daa
loope
sub
adc
cltd
pop
mov
test
push
loop
mov
add
sub
or
cmp
pop
sub
and
fs
inc
cmp
cmpsb
cli
jge
out
inc
scas
in
bound
and
lea
fsubr
addb
push
repz
cmp
clc
pop
mov
das
add
mov
push
loope
lea
fs
add
outsb
xchg
push
add
insb
dec
lret
xor
sarb
jno
fwait
adc
test
outsl
jmp
sbb
scas
and
push
leave
ret
ja
leave
imul
add
dec
fnsave
add
movb
jb
mov
mov
jo
cld
sbb
arpl
les
loope
mov
add
mov
cltd
mov
push
pop
jns
int
sarl
popa
mov
rcl
and
pop
subl
sti
ljmp
xchg
sub
popl
iret
jge
jb
mov
movb
jns
push
jns
ret
mov
and
mov
add
sbb
pushf
mov
mov
xor
mov
in
and
cmp
jb
cmp
or
jmp
daa
ljmp
out
xchg
bound
lods
dec
idivb
cmp
xchg
in
int
pop
inc
add
push
add
out
mov
lea
jae
in
fs
push
and
sbb
sub
inc
add
cs
hlt
xor
shlb
adc
add
add
js
add
dec
lret
andl
inc
add
mov
pusha
add
std
sub
jns
sub
lcall
int3
idivl
stc
hlt
mov
cwtl
push
ret
add
addr16
pop
sbb
dec
pop
bnd
xchg
mov
add
pop
mov
add
movsb
aad
aad
xlat
cld
pop
ficoms
pop
fmull
ljmp
sti
pop
fcoml
sbb
add
out
push
lret
sub
addr16
xor
bound
jmp
mov
arpl
mov
das
mull
or
cwtl
push
dec
notb
add
inc
pop
mov
jo
fimull
xchg
in
enter
pop
jle
mov
nop
ljmp
sti
bound
push
xor
nop
inc
add
inc
add
mov
cmpsb
insb
addr16
mov
sbb
mov
les
shrb
and
add
icebp
inc
add
pusha
add
addb
jno
jmp
xor
inc
add
jecxz
and
add
dec
dec
mov
cli
mov
jecxz
dec
cmp
stos
jmp
fbld
mov
lret
leave
inc
add
inc
add
das
into
mov
add
add
add
dec
add
pusha
add
add
add
fwait
cmpsl
movb
fldenv
mov
cmpsl
loope
mov
rorl
jns
add
lds
push
cli
dec
sbb
lahf
daa
popf
jmp
les
inc
add
add
lock
movb
inc
add
lret
test
or
add
add
jg
fstps
xchg
hlt
and
mov
mov
lock
cwtl
or
and
jo
push
je
inc
add
mov
addb
aaa
repnz
add
inc
jb
shll
dec
mov
sbb
inc
jmp
add
clc
sub
adc
daa
std
cld
int3
lea
int
add
psllw
xor
inc
xchg
aam
inc
jne
cmc
push
sbb
or
add
repnz
jmp
mov
and
xor
scas
push
xor
add
jg
fs
add
add
push
inc
add
or
jne
sbb
sahf
test
jg
addb
jbe
sbb
adc
jns
out
add
xchg
test
fcmovu
repz
dec
out
inc
out
fisubrs
mov
dec
ret
push
add
dec
mov
test
ret
leave
popf
and
mov
or
enter
sbb
and
mov
inc
add
out
cli
lds
inc
mov
jg
xchg
dec
lods
pop
arpl
add
clc
arpl
orl
sbb
mov
das
lds
in
clc
and
mov
lahf
addb
push
insb
dec
adc
test
test
cmp
cmpsl
mov
loopne
fdivl
mov
add
in
cmc
and
fisttpl
cli
inc
add
add
sbb
ret
push
mov
mov
je
les
sbb
call
or
mov
and
sub
inc
stos
mov
mov
addb
shlb
push
inc
add
adc
lods
das
jge
mov
xchg
xor
imul
or
sti
out
adc
xorl
mov
lcall
leave
dec
cmp
js
dec
fwait
dec
sarl
loope
or
sbb
dec
xchg
pop
aad
outsl
push
add
add
repz
sub
into
pop
out
xchg
popl
cmc
jns
stos
lret
xor
add
add
test
mov
jb
sub
pop
jecxz
dec
push
decb
and
add
push
sub
ret
cmpl
repnz
in
sarl
into
xchg
adc
jge
fadd
cmp
mov
jmp
sbb
sub
sub
les
xchg
add
mov
mov
jl
inc
add
adc
mov
sbb
add
pop
xchg
sub
push
dec
test
sbb
add
loop
in
mov
push
ret
dec
das
jmp
mov
test
lret
movb
jns
es
pop
shr
pop
gs
std
mov
pushf
mov
in
cltd
dec
dec
lahf
in
jnp
out
outsb
pop
test
and
mov
mov
add
push
mov
push
push
push
dec
iret
xchg
pushf
outsb
xchg
mov
xchg
loope
lods
clc
test
movb
add
inc
mov
sbb
aaa
mov
push
lds
add
rcrl
fsubl
repz
sub
pop
pop
add
lret
jg
inc
add
popl
cmp
xchg
xor
add
mov
pop
hlt
jmp
int3
rcrl
add
mov
and
jle
jecxz
clc
sub
stos
push
inc
ljmp
add
out
push
inc
shrl
fwait
cltd
or
add
addr16
pusha
add
xchg
push
xchg
pop
sbb
add
pop
fs
nop
mov
add
dec
rcll
lea
arpl
add
sbb
les
dec
adc
lret
jbe
cmp
mov
mov
gs
dec
fwait
push
cmp
mov
mov
inc
jnp
pusha
add
push
out
aaa
xor
xchg
add
adc
ljmp
out
adc
loope
outsl
insb
out
inc
and
es
cmp
inc
add
call
fdivl
out
shll
adc
push
sub
cmp
loopne
and
hlt
movsl
in
leave
push
movsl
es
mov
addb
dec
stos
int
xor
hlt
pop
outsb
sahf
and
test
iret
stos
inc
add
add
rcrl
add
int3
pop
roll
jle
pop
pop
in
aad
fistpll
mov
lock
dec
xchg
fnsave
mov
mov
in
std
rolb
push
loopne
in
sub
mov
test
dec
push
lock
cmp
pop
in
add
rcl
fimuls
js
jnp
pusha
add
call
pop
in
add
jle
pop
xor
add
adc
mov
adc
add
repnz
push
dec
mov
inc
add
iret
in
inc
js
out
xor
mov
add
das
xchg
inc
add
movsl
lret
sub
gs
test
cmp
inc
inc
add
aam
daa
fisubrs
push
lret
pushf
mov
adc
sbb
or
movb
divl
add
inc
ja
push
add
stos
xlat
push
sbb
ja
inc
ljmp
aad
jp
mov
push
fs
pop
push
add
mov
add
inc
outsb
sti
dec
fstps
add
arpl
sbb
xchg
imul
stc
or
xor
std
ljmp
and
ret
test
mov
mov
mov
and
fisubrs
and
push
jae
dec
jns
test
clc
stos
push
insl
mov
add
sahf
lahf
imul
mov
movb
add
lahf
mov
std
dec
lahf
mov
pop
ja
push
cmpsl
sbb
xchg
lret
push
mov
push
and
popa
sub
push
add
cmp
in
pop
push
filds
daa
sub
add
mov
jo
or
fcoml
shrl
negb
xchg
js
roll
testb
or
add
sbb
aam
js
xor
scas
pusha
add
xchg
push
jmp
sub
loopne
addr16
add
ror
jo
xor
pop
sub
mov
sahf
or
jns
mov
outsl
popf
push
dec
ret
add
loope
rcrl
gs
push
filds
add
sub
je
push
push
sub
fdivrs
add
pushf
and
sub
add
mov
test
mov
roll
xor
inc
int3
cmpsl
jmp
jg
cmp
add
les
and
sbb
add
mov
cs
sbb
adc
jl
push
add
push
fmul
movsl
xchg
mov
sbbl
clc
mov
add
push
inc
out
popf
daa
fmul
dec
bound
xorl
add
jmp
cld
repz
pop
int3
fadds
pop
dec
mov
mov
sub
adc
add
sub
loopne
sub
shl
sub
movb
fwait
je
adcl
cmp
jp
mov
add
sar
cmp
pop
call
lret
mov
add
xor
gs
dec
scas
je
jmp
fdivs
push
jmp
jo
vfrczsd
jg
add
movb
fmulp
test
add
dec
inc
add
sbb
fnstsw
ja
movsl
sub
inc
add
enter
push
leave
adc
and
adc
inc
add
jp
xor
dec
sbb
ucomiss
aam
stos
inc
add
inc
add
lods
sub
cli
pop
les
push
ficoml
fwait
sub
fld
add
fstl
popa
mov
sbb
mov
sbb
icebp
pop
xchg
ljmp
push
dec
pop
maxps
jmp
or
inc
add
scas
cmp
jle
inc
cmp
mov
popf
mov
sub
add
inc
or
xor
dec
or
and
imul
lcall
add
cmp
fwait
jle
and
push
mov
mov
mov
jnp
fiadds
jg
mov
ja
push
jg
std
hlt
xchg
mov
cli
mov
fldenv
rolb
imul
adc
cwtl
push
stc
lret
fldln2
aaa
sub
out
push
push
push
mov
decl
out
mov
add
add
push
mov
push
ret
cmp
push
popa
and
push
int
das
mov
fs
sub
pop
jno
jbe
jmp
test
inc
sahf
daa
loopne
addb
scas
outsb
lcall
jp
roll
ljmp
mov
inc
repnz
dec
mov
cli
es
movsl
or
cltd
mov
dec
aad
in
add
push
jne
lret
mov
cmp
dec
sub
cmp
and
xor
or
xor
shll
mov
cmp
repnz
pushf
xchg
in
psubsb
std
dec
or
push
or
das
add
push
adc
xchg
ljmp
add
mov
lahf
xor
pop
orl
push
gs
push
push
pop
cmp
pop
pop
cld
push
rclb
lret
fimull
cmc
addr16
add
add
adc
popf
testb
jecxz
and
sti
xchg
out
pop
roll
cmc
fs
sahf
and
jb
out
xor
jmp
sub
loop
insl
in
mov
dec
pop
je
push
dec
mov
add
fisttps
outsb
xchg
push
insl
repnz
pushf
cwtl
loopne
mov
jb
cltd
mov
xchg
jl
sarb
and
movsl
pop
pushf
xor
add
add
push
int
jmp
mov
mov
mov
jge
pop
les
aas
aad
inc
pusha
add
shlb
mov
lods
in
and
dec
push
push
cmpsl
movb
fwait
jl
sub
test
adc
mov
add
or
push
fwait
or
test
movsl
jp
mov
es
adc
add
sbb
push
adc
out
add
aad
ja
call
popa
cltd
test
cmpsb
inc
add
fbld
outsb
mov
ds
mov
in
ljmp
push
jae
jp
imul
movsl
stos
int3
sub
xchg
ret
push
outsl
cmpsb
inc
out
popa
lods
cmp
xor
or
jmp
dec
gs
fwait
jp
add
stc
push
popa
xchg
iret
jne
add
cmp
xor
cmpsl
push
ret
jbe
mov
adc
sbb
in
jl
add
out
addb
test
push
add
jbe
arpl
jl
sahf
rorl
and
popf
xor
or
inc
lahf
and
in
dec
push
pushf
out
mov
mov
mov
add
je
pop
jecxz
hlt
test
icebp
jae
xor
xchg
pop
dec
lods
sbb
add
mov
push
imul
fildll
mov
add
or
push
shll
clc
insb
out
or
leave
pop
stc
test
mov
xorl
cld
int
gs
arpl
lea
xchg
aad
xlat
adc
ss
pcmpeqb
aaa
add
iret
pop
sbb
add
adc
addl
adcl
xor
loop
mov
add
enter
out
enter
es
xorl
clc
adc
rorl
iret
cs
adc
inc
add
mov
loopne
add
xchg
fwait
jne
push
fdiv
sbb
mov
dec
pushf
push
jno
pop
push
lret
add
xchg
and
cmp
xor
cmp
out
stos
dec
cld
mov
call
mov
jmp
les
adc
add
aam
ret
call
in
movsl
arpl
add
test
jecxz
dec
fnsave
fisttpl
pminsw
pushf
xchg
mov
jle
sub
add
decl
stos
sbbl
add
add
sub
jle
inc
add
mov
rorl
inc
add
jp
dec
rcrl
adc
lods
out
push
add
mov
xchg
and
mov
gs
sti
add
add
jbe
mov
xchg
push
add
dec
scas
insb
jle
lods
jg
xor
xor
loopne
dec
lods
loope
daa
pop
sarb
cmc
push
sub
dec
adc
pop
loopne
add
add
imul
xchg
add
jle
sbb
add
and
push
and
push
add
ljmp
add
cmp
push
xor
aas
rolb
scas
jae
sbb
mov
dec
inc
add
scas
cmp
mov
and
rcl
cltd
dec
pop
sub
das
clc
rolb
mov
fcompl
add
push
movsb
js
mov
sbb
cld
jns
cli
mov
sti
jmp
sbb
aaa
adc
dec
add
aas
cmp
sti
mov
and
gs
cmp
dec
push
shll
add
jmp
lret
mov
xchg
jno
jae
push
add
sbb
hlt
insl
inc
mov
fldt
xchg
inc
add
mov
add
out
daa
push
mov
sti
or
push
xorl
jecxz
out
stc
inc
pop
xchg
add
adc
dec
jno
imul
jb
fdivs
add
fldl
lret
in
sbb
mov
pop
imul
sbb
rolb
xchg
or
add
xor
mov
sbb
adc
sbb
mov
or
mov
add
outsl
mov
jmp
jb
dec
pop
lds
add
cli
adc
icebp
xor
add
dec
lret
pop
push
inc
or
aad
pop
and
lret
xchg
js
xchg
jmp
push
cmp
mov
mov
add
ret
pop
jmp
pop
mov
outsb
clc
fmuls
pop
cli
pushf
stos
push
mov
inc
add
xchg
mov
and
lahf
shlb
add
mov
aad
pop
dec
jnp
sub
add
dec
mov
sarl
in
add
scas
ja
lahf
sbb
xchg
mov
je
pop
mov
pushf
loop
pop
in
push
mov
add
mov
push
imul
adc
pop
mov
adc
add
mov
addb
add
mov
or
ja
mov
add
mov
xor
outsb
inc
leave
jge
push
adc
loope
aas
lds
stos
fdiv
lds
xchg
out
into
out
out
rcll
incb
sti
cmp
mov
and
sbb
jno
add
loopne
loope
xchg
sbb
gs
mov
add
mov
jnp
loop
add
adc
xchg
popa
addb
add
fimull
mov
jnp
movsl
ljmp
fwait
pop
and
add
mov
pop
dec
xchg
cmp
fwait
cli
mov
ja
addb
das
sbb
arpl
ret
adc
jmp
lods
jg
xchg
and
and
fstps
arpl
mov
cmc
sbb
imul
push
aam
shl
fucomp
cmp
pop
push
adc
add
rcr
xchg
or
adc
movsb
dec
jae
adc
imul
movsb
std
mov
dec
mov
sub
pop
pop
xchg
mov
repnz
jl
addr16
jb
add
jle
inc
add
pop
mov
inc
add
addb
mov
lahf
push
stos
cmp
adc
movsl
mov
out
and
scas
inc
add
cltd
sbb
fwait
inc
fstps
mov
arpl
inc
add
imul
jnp
sti
int
mov
loope
loope
leave
mov
sub
xchg
xlat
ret
push
scas
call
adcl
pop
adc
inc
add
cmp
jecxz
mov
mov
add
cld
aas
and
andnps
jne
dec
add
aad
ficomps
inc
add
mov
ror
test
jnp
fnstenv
stos
ljmp
clc
rcr
addr16
pop
jge
daa
and
xchg
notb
repnz
xchg
aas
mov
into
pop
push
add
add
or
add
lds
add
xchg
push
mov
push
add
andl
dec
arpl
fistl
cmpxchg
inc
add
xchg
jb
stc
roll
scas
fidivrl
and
movsb
jge
int
cmp
pop
nop
sbbl
add
add
int
sub
movb
pop
out
pop
in
dec
ret
and
sub
jb
sbb
in
jne
mov
and
add
cmp
sahf
scas
cli
jecxz
and
add
testb
add
sti
int3
push
popa
test
aad
add
pop
lea
dec
mov
mov
outsl
xchg
ljmp
add
add
dec
jmp
add
add
inc
clc
lods
mov
rcrb
aad
inc
add
inc
std
lock
and
mov
sub
jg
and
or
rolb
pop
mov
insl
sbb
shrl
push
xchg
hlt
pop
adc
adc
add
push
add
add
mov
cmp
call
add
mov
cld
jno
mov
add
addb
add
ret
jge
jo
add
xor
cmp
mov
xchg
add
add
test
add
aas
out
mov
lret
mov
mov
jae
mov
sbb
xor
sbb
push
xor
sbb
inc
add
clc
fs
dec
mov
sahf
pop
cwtl
scas
dec
push
mov
inc
add
pop
enter
lcall
xchg
dec
inc
add
aas
negl
les
ja
fwait
sbb
mulb
imul
addb
inc
add
sbb
pop
mov
data16
inc
add
dec
cmpl
jne
cmp
sub
add
je
xor
stos
adc
add
fdivr
mov
cmpsb
bt
aam
nop
jg
add
ret
in
mov
or
addb
cmp
ljmp
add
daa
cmp
cmc
and
dec
roll
cmp
das
es
lea
clc
dec
mov
add
add
xor
scas
cmpsb
scas
outsb
push
add
aam
jb
pushf
enter
lret
out
sbb
or
or
fimuls
or
mov
dec
pop
sub
sub
mov
add
add
hlt
shl
or
sbb
clc
add
icebp
jmp
and
add
add
mov
cltd
idivl
push
lcall
xchg
popf
mov
add
test
xchg
mov
mov
int
push
adc
adc
push
add
add
pop
sub
aaa
lret
inc
add
xor
insl
stos
sub
add
add
sbb
mov
or
add
inc
xor
stos
push
mov
mov
xor
decl
lods
dec
imul
add
jo,pt
sbb
test
push
add
jmp
adc
imul
repz
jnp
les
aaa
sahf
push
int
inc
add
jge
add
mov
push
inc
lds
push
lock
outsl
push
pop
push
out
daa
test
clc
mov
add
adc
jo
stc
xchg
push
ss
add
test
jae
xchg
fs
mov
pop
mov
cli
daa
adc
adc
movb
test
dec
push
sub
cltd
scas
and
pop
mov
push
daa
sti
adc
or
cs
add
clc
mov
sahf
xor
adc
fcomip
xchg
test
mov
cmp
testb
dec
vcvtpd2psy
add
arpl
outsb
mov
test
add
xor
add
pop
outsb
mov
adc
add
scas
fcoms
jne
or
or
lret
addr16
sbb
adc
mov
mov
sbb
in
les
mov
leave
dec
cmp
std
mov
clc
xor
pop
xchg
jne
addb
jl
add
or
mov
push
push
dec
add
mov
shrl
repz
xchg
lea
push
outsb
bound
xchg
mov
add
ror
je
or
int3
imul
or
mul
mov
xchg
shrb
push
js
test
sbb
add
stc
adc
add
mov
popf
icebp
sbb
fnstsw
aad
pusha
add
icebp
fs
mov
movsl
stos
cmp
popa
dec
inc
add
pop
mov
xchg
jmp
push
xchg
lahf
inc
xor
xor
mov
imul
lea
cmp
cwtl
mov
add
cmp
test
cli
popf
mov
add
int3
lcall
sub
addb
loopne
mov
pop
dec
cltd
dec
pop
fsubs
add
gs
mov
stos
and
cmp
jecxz
sbb
js
sbb
mull
scas
pop
lcall
sbb
insl
filds
add
loop
mov
mov
cmpsb
mov
scas
ss
in
aaa
addr16
insl
and
or
data16
lret
or
incb
aas
ds
jle
xchg
aam
fstpl
cld
pop
int
inc
sub
dec
pop
mov
cltd
xchg
scas
subl
test
mov
out
cld
clc
push
test
imul
or
and
popa
fcmovne
xchg
xor
cmc
in
data16
xchg
add
mov
or
cltd
jne
ret
imul
adc
sub
js
testb
out
or
sub
jne
add
daa
mov
rclb
sbb
test
dec
shrl
add
clc
repz
leave
out
bnd
jo
lods
les
mov
push
pop
inc
inc
add
out
addb
adc
outsl
inc
popa
xchg
daa
in
inc
daa
lock
sub
test
sub
dec
sbb
sbb
pop
pop
sti
movsl
xchg
or
push
dec
xor
outsb
filds
in
adc
add
cli
cs
add
sti
cmp
fcoml
push
addb
or
add
sbbl
test
inc
xor
or
jns
inc
add
fstps
imul
outsl
inc
add
je
add
fwait
es
scas
pop
test
or
mov
out
add
pop
repz
fiadds
inc
shl
pop
les
cs
mov
stc
pop
cli
xchg
sub
pusha
add
mov
xchg
inc
add
jmp
add
daa
fs
mov
and
and
in
xchg
dec
arpl
mov
test
sbb
add
add
mov
negb
fwait
out
sahf
addb
repz
add
leave
jnp
pop
mov
add
jne
xor
bnd
sti
and
lcall
mov
out
pop
sub
push
ftst
mov
insl
pop
cmp
popf
je
cmp
xchg
adc
add
adc
ret
dec
aas
mov
fildll
cmpsl
jge
aad
push
add
push
add
xchg
adc
movsb
popa
sub
call
adc
aad
jne
nop
les
pop
dec
xchg
gs
bound
mov
or
fimull
pop
dec
stos
mov
adc
pop
shlb
push
dec
xchg
push
jo
add
add
lods
cmpsb
pop
and
mov
add
and
ljmp
aaa
or
outsb
add
inc
add
stos
movsb
mov
add
cmpsb
mov
or
ret
fadds
in
push
shrl
push
sub
mov
js
sti
cmc
add
mov
out
adc
cltd
test
pop
mov
and
cmp
xchg
in
mov
mov
add
sbb
mov
cs
and
inc
movl
test
mov
test
lea
cmpsl
pop
addl
addb
xchg
scas
cmp
inc
inc
sbb
cmp
lock
mov
push
xchg
or
rolb
int3
aas
pop
mov
call
aad
loopne
xchg
addb
imul
dec
test
fldl
add
push
sub
addb
add
shlb
add
testb
pop
push
sbb
add
nop
ds
and
int3
daa
cmpsb
push
mov
mov
lea
sbb
pop
or
xor
pop
jno
stos
inc
int3
xchg
and
es
sti
mov
jmp
js
retw
pop
fstl
add
xchg
jb
mov
stos
push
add
push
addl
or
inc
dec
cmp
jo
and
imul
fbld
mov
sahf
mov
push
adc
fcomps
pop
popf
jae
xor
xchg
sub
fmulp
or
xchg
pushf
lock
movswl
daa
cmp
mov
lea
lahf
stos
ret
mov
dec
xchg
shr
push
insb
mov
cmp
mov
out
mov
mov
shrl
add
popa
addb
xchg
enter
jne
enter
jge
mov
add
cmp
subl
push
movb
lret
mov
rolb
add
fs
in
mov
lea
mov
pop
mov
add
add
insb
gs
pop
ret
lahf
sbb
adc
lret
add
add
mov
call
xchg
fsts
cmp
add
fists
insb
sub
add
xchg
xchg
jmp
add
cmp
ss
xchg
lret
popa
sub
jg
xor
sbb
inc
add
bound
aad
in
icebp
mov
iret
mov
add
lahf
xchg
and
lea
pop
inc
insb
cld
shrb
test
push
std
and
cli
hlt
mov
or
insb
and
add
add
mov
ficoml
cli
data16
add
and
sarb
jg
xchg
clc
xchg
xchg
mov
in
adc
iret
inc
add
or
xchg
rolb
ljmp
pop
jbe
adc
cmp
adc
add
in
mov
in
cmp
repz
mov
mov
jns
addb
call
push
add
data16
adc
push
dec
push
pop
out
add
mov
sub
push
icebp
mull
shll
stc
aaa
movb
lods
je
hlt
add
or
into
movsb
inc
push
dec
imul
rolb
insb
imul
mov
lcall
movb
in
js
cmp
int3
add
sbb
mov
xor
mov
addb
xor
outsb
addb
mov
or
shl
and
mov
cmp
push
sub
hlt
lds
add
sbb
into
and
adc
call
mov
scas
mov
imul
add
sahf
ret
sbb
test
pop
es
add
clc
repnz
adc
cmp
pop
pop
jecxz
pop
pop
sti
push
dec
xchg
lea
add
sahf
ss
cwtl
icebp
mov
or
add
xor
or
mov
movb
push
dec
gs
call
inc
add
sub
jb
imul
jmp
loopne
sub
pop
addb
aaa
sbb
pop
arpl
or
movsb
lahf
ja
mov
mov
inc
repz
es
mov
dec
les
dec
roll
cmp
add
jle
test
test
test
mov
arpl
ljmp
movsb
xor
mov
rolb
inc
add
adc
imul
test
inc
das
cli
or
outsb
rorb
mov
loop
std
dec
xchg
daa
push
push
xor
fs
cmpsb
enter
pusha
add
lret
jno
in
xchg
jb
and
imul
stos
arpl
xchg
jne
test
cld
mov
or
mov
clc
sub
adc
xor
fadd
add
mov
mov
repz
cld
les
aas
mov
mov
xchg
jno
movb
xchg
daa
jb
fsubrp
mov
add
cs
sbb
push
inc
push
outsl
xchg
push
dec
sahf
fbld
and
add
push
cmpsb
ja
mov
scas
outsb
insb
jmp
aam
inc
adc
fnstcw
add
push
pusha
add
mov
js
sub
cli
sbb
repz
in
scas
ds
cld
lcall
aam
fimuls
dec
lds
or
movsl
xlat
xchg
in
nop
cmp
add
cmpsb
lods
je
mov
testl
inc
pop
dec
mov
pop
ljmp
add
inc
add
xlat
push
cmp
lods
mov
add
mov
imul
pop
outsb
push
into
xchg
mov
push
add
gs
enter
add
jecxz
cmpsb
test
cmp
mov
rolb
into
mov
cmpsb
add
fcoms
rolb
xor
mov
push
mov
or
adc
stos
mov
inc
add
push
iret
or
fcomps
pop
ror
addb
sbb
fsubrp
jl
add
sub
push
sarb
mov
dec
lret
mov
add
cmp
sbb
imul
add
jmp
out
add
decl
mov
add
push
iret
mov
push
xor
dec
pop
enter
push
sub
sub
in
cltd
sbb
sbb
and
mov
push
jg
pop
inc
add
xchg
or
add
mov
add
call
fadds
xor
pop
addb
add
or
or
push
push
lods
inc
add
sbb
jl
hlt
xlat
or
roll
inc
add
lods
jne
mov
add
pop
js
sbb
sub
dec
iret
adc
popa
lds
cmpsb
ret
clc
inc
push
outsb
fwait
lahf
cltd
mov
push
xor
lods
inc
add
or
ds
dec
jmp
jne
js
ret
pop
popa
outsb
xchg
out
adc
cli
mov
fdivrs
ds
jecxz
xor
pop
xchg
fwait
mov
test
stc
out
aad
es
sbb
fcoml
sar
call
mov
add
fstl
pop
pop
and
pop
leave
xorl
sbb
jae
xchg
insl
sbb
jmp
push
inc
add
adc
add
pop
ss
aam
jne
inc
jae
movb
add
xor
mov
jl
icebp
adc
sahf
pcmpgtb
adc
add
roll
add
jmp
pusha
add
pop
push
add
mov
shlb
xchg
jbe
imul
cmp
add
rorb
and
sahf
mov
sbbl
xor
mov
push
je
repnz
and
mov
push
idivl
fimull
fcoms
or
xor
call
dec
sub
add
hlt
aad
inc
and
xor
jl
pop
jp
cwtl
cmp
mov
outsl
imul
push
sahf
cmp
rcrb
sub
mov
sbb
add
daa
test
push
sub
jno
scas
xor
in
push
mov
add
add
inc
ljmp
xlat
rol
addb
in
movl
pushf
cmp
fwait
das
lcall
jmp
in
fistps
or
out
es
rolb
mov
dec
sbb
jno
xlat
rclb
or
scas
lea
push
popa
xbegin
iret
xchg
add
add
push
fs
adcl
add
xchg
pop
pushf
test
ljmp
and
aam
and
mov
pop
mov
inc
add
pop
out
mov
mov
mov
jge
mov
pop
pop
scas
mov
in
push
addb
iret
cmp
movb
sub
sbb
insb
and
mov
hlt
sbb
pushf
inc
add
add
jg
jle
add
push
cli
dec
test
aaa
loopne
add
adc
or
mov
mov
push
clc
mov
int
sbbl
pusha
add
mov
add
test
fxch
pop
push
add
je
add
rcl
mov
add
ljmp
ret
push
std
fistpll
enter
push
rcrb
outsl
xlat
aam
out
adc
sub
fimull
and
and
jnp
pop
xadd
cmp
jmp
lcall
inc
imulb
test
jmp
push
cmp
adc
mov
sub
lock
mov
cmpsb
mov
std
inc
add
pop
inc
push
std
sub
mov
xor
scas
fmul
loop
lds
ret
lcall
push
and
inc
add
push
xor
add
and
out
shll
mov
shll
rcrl
mov
int
or
arpl
and
add
add
ret
push
scas
xchg
xchg
repz
ja
pop
xor
daa
dec
jne
sbb
inc
add
pop
sbb
dec
jo
sahf
es
scas
pop
mov
sub
dec
rolb
push
addl
lret
mov
push
inc
sub
inc
add
lcall
push
fwait
mov
test
mov
out
sbb
dec
dec
rolb
add
cwtl
adc
lahf
cld
lds
cld
inc
add
cmp
loope
add
add
sub
mov
add
aad
test
shr
lds
mov
add
mov
push
gs
mov
fldt
fsubs
dec
jle
cmp
and
popf
sbb
jo
roll
loop
test
sbb
mov
in
pop
outsl
jp
outsl
pop
mov
das
ja
fldl
add
loopne
mov
icebp
fcomp
mov
push
je
cltd
xchg
jae
add
pop
and
insl
std
js
mov
arpl
les
or
pop
fld
add
inc
add
lret
or
xor
es
fstl
xchg
pop
mov
test
nop
lret
and
xchg
popa
sti
adc
insl
push
sub
mov
adc
rorb
mov
les
jge
and
mov
xchg
int3
xlat
testb
sub
aad
in
hlt
enter
jg
cmp
cld
pop
dec
sub
sbb
jmp
cmpsb
rorb
mov
pop
add
mov
in
movb
jle
push
mov
mov
pop
movsl
xlat
fnsave
inc
adc
mov
fs
dec
mul
jae
dec
cmp
and
stos
add
add
jo
icebp
sbb
iret
aas
into
hlt
cmp
outsl
cmp
jns
cmp
lahf
or
add
xchg
ja
inc
add
jl
sub
mov
add
pusha
add
xchg
push
pushf
mov
out
es
or
push
into
pop
mov
mov
cmp
mov
arpl
jl
mov
ret
hlt
shrb
push
rolb
push
cs
sbb
sbb
xor
jo
shlb
xlat
push
data16
adc
inc
sub
mov
add
add
xlat
sahf
test
add
fisubs
loopne
add
mov
jl
addb
cmpsb
cld
movswl
loop
xor
sbb
cmpsl
cmp
js
dec
xchg
jae
outsl
loop
je
mov
movsl
adc
mov
add
stos
jbe
jno
add
lea
add
add
movb
inc
data16
int3
sbb
fstp
push
daa
addb
sbb
inc
jbe
leave
fs
inc
add
push
scas
xchg
lcall
inc
add
fisttps
out
in
test
push
add
clc
mov
in
pop
mov
dec
ret
jne
stc
sahf
stos
jae
movb
sahf
bound
jno
outsb
pop
sbb
xchg
imul
cmpsl
or
pop
fnstenv
inc
add
add
add
addr16
push
movb
add
add
and
mov
jp
outsb
outsb
pop
cwtl
xlat
jge
add
inc
xor
stos
inc
daa
icebp
imul
pop
push
push
pop
addb
test
sub
in
ret
fwait
call
push
cmp
or
add
cld
dec
mov
ljmp
aaa
es
inc
add
inc
add
jmp
add
sub
out
push
push
dec
push
lds
sbbl
cmp
leave
push
cmpsl
mov
mov
repnz
es
imul
movb
cmp
movsl
cmp
out
in
cli
aaa
xor
add
fmulp
int3
int3
out
or
adcl
je
roll
cmpsb
mov
movsl
leave
xchg
xchg
std
cmp
lea
add
in
in
push
ficompl
ret
mov
xchg
fwait
or
add
outsb
in
vpaddusw
mov
sub
xchg
sub
roll
xor
xor
xchg
xchg
loope
mov
add
inc
add
pop
xchg
fisttps
add
push
push
and
arpl
ret
sub
or
outsl
mov
xor
dec
add
addb
push
pop
jp
cmp
push
add
test
aaa
adc
xor
dec
stos
push
cmc
push
sbb
cld
movb
imul
out
les
cs
lds
pop
pushf
mov
nop
cmp
adc
out
mov
or
neg
clc
pop
jo
jg
or
movsl
inc
and
xor
mov
jle
or
scas
insl
inc
add
add
mov
add
dec
lods
xchg
out
or
les
jle
inc
and
add
mov
mov
pop
adc
push
add
or
lcall
or
push
ret
mov
cmp
les
loope
mov
add
xor
mov
mov
pop
sbb
jmp
sub
fisttpll
add
jnp
mov
sub
mov
add
add
ljmp
pop
les
push
sub
pop
mov
mov
push
xchg
and
push
pushf
lea
xor
pop
jge
icebp
test
jp
xor
mov
addb
add
add
lret
add
sub
lods
lret
popa
push
addb
mov
mov
iret
insl
add
rcll
jo
sbb
outsb
lea
and
mov
sub
xor
lods
sbb
push
and
or
adc
pop
or
mov
add
xlat
icebp
cmp
nop
xchg
fwait
xchg
ret
sub
or
jb
lret
cmovne
mov
mov
or
push
push
push
loopne
mov
jge
out
sbb
int3
jae
mov
leave
cmp
adc
leave
xchg
movsb
bound
sub
inc
add
int
or
mov
add
cltd
les
xchg
jecxz
lahf
lock
jae
pop
dec
push
and
xchg
ficompl
mov
pusha
add
push
xor
dec
repz
pushf
cld
iret
test
fs
fwait
aaa
test
std
es
add
add
int
mov
imul
les
xorl
add
mov
add
hlt
and
add
push
mov
or
xor
adc
dec
dec
out
arpl
sub
cmpsb
or
push
lret
or
sarb
test
jbe
fnstcw
lds
mov
in
js
add
out
pop
push
add
adc
xchg
int3
repz
sbb
push
mov
or
cld
insb
inc
adc
fcmovne
inc
add
add
cmpsb
and
mov
in
clc
xchg
xor
push
das
xor
imul
pop
loope
jnp
push
cmp
pop
xchg
sbb
mov
scas
cmpsb
or
int
sbb
mov
jns
mov
lret
dec
push
out
sti
mov
mov
test
stos
ret
test
lea
in
add
add
ss
lods
cli
call
pop
sbb
leave
dec
pusha
add
and
pop
mov
scas
push
inc
mov
addb
inc
mov
mulb
scas
add
pop
pop
mov
frstor
mov
add
xorl
add
ja
xor
add
popa
mov
lods
les
xchg
cmp
add
arpl
nop
clc
sub
xchg
jne
pop
jp
ret
sbb
or
inc
add
imul
jae
xchg
or
addr16
outsb
adc
cmp
test
dec
jnp
jnp
rcrb
ss
outsl
jecxz
lods
sub
pusha
add
add
inc
add
call
fcom
inc
lret
jge
cli
mov
mov
adcl
leave
and
testb
js
add
ds
mov
or
add
cs
lds
mov
mov
leave
xchg
addb
add
cli
xor
popf
movb
and
pusha
add
fbld
mov
add
adc
ss
pop
jecxz
cmp
add
stc
addb
sbb
inc
add
imul
ret
mov
movsb
in
add
mov
add
pop
xchg
movsl
les
test
mov
fcom
lods
leave
sub
addb
add
cwtl
int
or
mov
sub
lcall
pop
fdiv
je
dec
lds
xchg
aas
mov
add
pop
into
orl
inc
add
jmp
adc
fisubrl
cmp
inc
add
addb
ficoml
ljmp
addr16
mov
or
jl
fcomi
in
mov
sub
sbb
pop
dec
fbstp
int3
jns
mov
mov
pop
mov
add
aaa
jp
jmp
mov
sahf
inc
add
adc
nop
jno
sub
mov
add
insl
mov
repnz
push
data16
mov
push
add
rorb
mov
nop
push
fucom
movb
pop
ljmp
daa
push
mov
mov
add
jbe
enter
mov
push
inc
add
cmp
stos
popf
lret
movsl
loope
sub
je
jo
lret
jae
mov
in
xchg
xchg
sbb
aas
or
dec
lret
pushl
arpl
lcall
add
pusha
add
push
add
push
xchg
pop
mov
push
test
add
xor
outsb
jne
inc
add
and
dec
addb
jne
cmp
loop
xor
inc
add
add
lea
mov
es
lcall
xor
mov
popf
mov
loopne
mov
stos
and
mov
dec
clc
lcall
xor
mov
xor
add
xchg
shlb
push
aam
nop
cmp
ret
or
xor
cltd
jno
add
ss
cmpsb
cmp
sub
jmp
sub
mov
out
or
imul
jae
incb
push
dec
shrb
add
daa
xchg
popa
ffreep
fwait
scas
out
stos
jecxz
sbb
into
and
mov
xchg
popf
mov
or
mov
ss
add
xchg
adc
in
or
mov
adc
add
push
int3
out
sti
call
cmp
push
loop
add
es
add
das
mov
mov
pop
add
pop
add
dec
add
adc
movb
nop
iret
cltd
sbb
mov
clc
jo
js
add
scas
aaa
enter
pop
sbb
ret
add
mov
icebp
jle
enter
mov
xchg
add
add
push
or
inc
add
jge
mov
mov
dec
les
nop
push
icebp
arpl
testb
cmp
sub
ja
mov
lcall
or
mov
cmp
inc
add
sbb
add
jne
sub
or
js
mov
xorl
add
add
cltd
ret
mov
xchg
add
xor
sti
adc
divb
mov
xchg
xchg
bound
mov
sbb
aad
out
fwait
pop
jle
notb
pop
lock
xchg
add
icebp
mov
rcrl
adc
cld
pop
push
enter
fidivrs
test
lods
xlat
jmp
cltd
pop
aad
add
aaa
or
add
fs
xor
sbb
dec
xchg
popa
mov
lret
inc
add
cmpsl
loop
fcomps
mov
stos
les
sahf
stc
xor
fwait
push
in
xor
rcl
cmpsb
pushf
sbb
sbb
lds
in
cmpsb
lock
add
loope
mov
cmp
add
or
bound
arpl
add
mov
add
pop
pop
rolb
adc
movb
mov
mov
inc
add
add
aas
mov
pop
cli
idivb
cmpsb
ret
adc
ds
and
outsl
xor
mov
add
add
jg
rcr
pop
mov
jecxz
stos
mov
mov
enter
mov
add
inc
add
cmp
add
or
add
push
cld
jge
add
mov
enter
mov
fmull
xor
fstps
sub
jecxz
pop
arpl
fs
pop
xor
jp
cmpsb
pop
cmpsb
daa
movsl
mov
stc
xchg
sbb
sbb
mov
cmpsl
repnz
push
out
fs
ret
push
pop
cwtl
cwtl
les
pop
cs
sahf
daa
and
inc
add
dec
fbstp
inc
fldenv
orl
sbb
pop
push
lret
xchg
scas
mov
mov
push
clc
adc
rcr
mov
mov
sbb
data16
mov
push
pop
cmp
jae
aam
loop
popa
out
mov
arpl
add
ja
cmp
xchg
jmp
das
sbb
add
pop
int
mov
xchg
ret
ja
sub
and
xor
inc
add
mov
clc
pop
sub
mov
sbb
hlt
into
lcall
pop
inc
outsl
pop
fs
cltd
xchg
mov
inc
add
int
inc
jne
div
je
xchg
mov
movsl
inc
add
dec
jg
cs
jmp
fs
inc
add
xchg
inc
add
ljmp
sbb
enter
pushf
es
insb
fwait
add
das
pop
dec
bound
fnsave
psrad
sub
and
in
imul
in
cmp
imul
aas
pop
push
leave
inc
std
out
jmp
jae
ficomps
les
out
das
sub
inc
add
movb
add
outsl
xor
jno
add
lahf
add
inc
add
ret
add
rolb
sbb
aaa
scas
cwtl
sti
out
sub
jle
lds
rol
mov
dec
mov
popf
xchg
fwait
mov
and
add
push
xchg
sbb
xchg
scas
push
fcoms
sbb
lahf
in
mov
push
pop
and
cmp
mov
cmc
leave
rolb
dec
jmp
add
add
mov
add
in
outsl
aad
pop
aaa
mov
mov
adc
add
add
sub
sub
inc
add
hlt
xchg
pop
jo
mov
add
call
idivb
je
rorb
daa
cmpsb
inc
in
add
les
xchg
add
xchg
xor
repz
add
xchg
mov
xor
pushf
rolb
mov
add
ljmp
in
cmpsl
mov
cmc
inc
sbb
fadds
push
add
push
jae
lret
push
add
arpl
daa
sub
sbb
mov
lahf
mov
mov
or
mov
mov
mov
add
lcall
addb
das
mov
push
add
lret
jmp
add
loop
add
icebp
popa
mov
cmpsl
xchg
xchg
movb
add
testb
stos
fcmove
sahf
dec
mov
jge
sbb
push
jo
in
inc
add
daa
inc
in
pop
lds
aad
pop
in
adc
cmp
mov
add
dec
ret
insb
dec
sbb
sahf
jne
add
orl
xlat
divb
mov
ficoms
cmp
in
dec
push
sub
push
adc
jg
test
mov
add
jg
fs
mov
stc
inc
lcall
sbbl
add
aad
sti
cmp
cld
lcall
pop
dec
inc
mov
fimull
dec
daa
in
sahf
adc
sahf
bound
repz
lods
mov
js
or
add
xor
add
pop
cmp
xchg
sarb
fisubs
and
call
jp
or
push
push
jnp
mov
push
pop
test
add
mov
fisubrl
add
inc
add
test
movsl
aam
mov
or
sub
aas
push
aas
add
call
jne
test
push
lods
out
mov
int3
test
or
in
ret
lds
add
jo
inc
add
lret
adc
das
sub
lret
mov
in
jge
jle
hlt
leave
addb
sub
test
mov
insb
sbb
notl
lods
call
insl
pop
sub
test
add
les
sbb
test
lahf
mov
lea
dec
ds
xchg
loope
mov
pop
ljmp
pushf
sub
ss
negl
xor
pop
mov
ljmp
mov
hlt
aad
mov
mov
push
mov
jb
fs
clc
cmp
and
stos
xor
xor
pop
mov
sub
jge
in
cmpsl
std
das
xchg
push
jo
imul
lret
push
add
jl
mov
cmp
leave
mov
inc
add
rclb
add
mov
and
shrl
push
adc
push
pop
mov
mov
fistl
jb
inc
add
js
xchg
mov
ret
jbe
dec
in
jmp
pushf
add
pusha
add
add
add
fildl
std
dec
adc
cmpsb
insb
cmp
add
sti
and
pop
out
sbb
sub
or
stc
call
jmp
shll
cmp
cmp
mov
icebp
mov
and
add
cld
mov
xchg
outsl
pop
aas
lret
xchg
sar
xor
mov
xchg
mov
nop
lea
and
stos
faddl
push
lods
clc
mov
jno
out
mov
sti
push
test
adc
or
lock
repz
outsb
pop
cmpsb
fstpt
clc
fsubr
fs
xchg
xor
add
add
stos
sbb
jne
cli
mov
jo
dec
ja
lcall
pop
loopne
negb
mov
sbb
push
mov
cld
pushf
sbb
into
and
mov
xchg
in
or
jecxz
or
sti
push
int
fldt
jg
gs
add
aam
dec
inc
add
sti
into
rol
add
add
add
data16
cli
nop
inc
xor
popa
dec
stos
aad
xor
add
movl
daa
mov
sub
mov
fmul
sti
sbb
ds
add
add
movb
sub
lea
xor
pop
addb
add
add
std
mov
add
addb
jae
add
movsl
pusha
add
xchg
arpl
sub
xor
add
data16
push
shll
jo
or
xchg
jle
push
loop
call
ret
mov
xchg
rcr
jns
xorl
push
shll
add
dec
dec
les
pop
movl
pop
xor
xchg
jl
xor
mov
push
mov
ljmp
sahf
pop
lret
and
stos
lea
subl
adc
out
jg
pop
push
cmp
into
push
js
pop
aaa
mov
fcomps
movsb
xor
push
jmp
mov
iret
fmull
adc
and
push
bound
pop
lahf
xchg
cmp
stos
jbe
xlat
addb
rcr
add
dec
in
popa
or
lcall
dec
cwtl
sbb
push
xor
call
xor
outsl
xchg
adc
inc
add
cld
lods
xchg
hlt
lahf
inc
fildll
int
fcomi
daa
mov
adc
cmpsb
dec
xchg
ret
insl
jecxz
cmpsl
push
adc
xchg
add
mov
or
or
icebp
sbb
lock
adc
sbb
pop
mov
add
jno
add
sub
lds
movsb
leave
int3
push
icebp
dec
mov
sub
popl
dec
fisubl
mov
pushf
mov
add
hlt
lcall
sti
xchg
pop
jne
pop
cmp
xchg
fildll
fistpl
mov
cmpsb
jno
or
dec
test
in
add
loop
cs
repnz
scas
stos
das
lahf
sbb
fdivrs
mov
jae
mov
dec
jne
dec
inc
push
fdivr
jno
repnz
mov
add
mov
mov
mov
divb
fwait
add
mov
add
xchg
addb
sbb
pop
mov
cmpsl
das
pop
sbb
jl
fucom
mov
adc
xor
stc
push
ret
pop
test
scas
pop
imul
add
pop
pusha
add
dec
or
cmc
xor
lret
inc
add
jne
pop
xchg
cmc
movb
push
cmovae
add
add
sti
gs
jnp
inc
jl
push
mov
cmp
aaa
mov
inc
add
mov
jb
test
fsubrs
xchg
rolb
cmc
sbb
jb
mov
sub
pop
in
mov
jo
rolb
push
mov
out
cli
xchg
setne
adc
mov
cmp
data16
pop
out
movsb
xchg
nop
jns
and
out
add
aas
mov
jbe
movb
repnz
rcl
lahf
out
hlt
addb
jno
mov
das
add
add
inc
add
push
mov
cmp
popl
jle
imulb
adc
pop
or
xchg
cmp
bound
and
adc
insl
cmpsl
test
add
cmp
out
scas
jbe
sbb
ds
jle
dec
add
mov
push
out
jb
sti
ds
scas
adc
add
xchg
cmp
and
outsb
dec
shll
jnp
ds
cmp
mov
add
mov
push
jecxz
add
ss
push
in
mov
mov
iret
jbe
in
fsts
mov
push
xchg
popa
xchg
mov
es
out
jbe
cmp
sbb
aaa
dec
rorl
imul
rolb
mov
adc
xchg
or
mov
ja
mov
mov
add
add
stos
cmpsb
hlt
call
push
mov
mov
and
pop
xchg
mov
in
mov
add
push
add
dec
mov
jnp
imul
or
insl
in
leave
adc
add
mov
out
adc
out
lcall
mov
or
or
.byte
inc
