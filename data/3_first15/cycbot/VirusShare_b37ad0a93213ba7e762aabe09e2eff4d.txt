sbbb
dec
push
add
mov
dec
push
add
je
nop
add
mov
mov
pop
out
mov
adc
mov
add
arpl
dec
xorl
sbb
mov
xor
mov
fstpt
mov
adc
mov
in
leave
adc
jbe
pushf
fbld
cmp
jne
data16
je
add
fninit
in
mov
ljmp
jns
xchg
ja
repnz
xlat
iret
add
incl
mov
cltd
or
outsb
stos
sbb
loopne
mov
inc
add
ret
push
xchg
std
in
cs
dec
negl
data16
jns
add
add
mov
mov
pop
shll
sahf
push
add
fsubrs
rolb
mov
fwait
dec
mov
and
mov
shrl
cmp
rolb
or
jo
mov
add
insb
sbb
adc
mov
ljmp
mov
add
push
mov
xor
mov
mov
sub
lret
imul
mov
mov
add
add
dec
and
mov
add
fiaddl
and
pop
xlat
sub
add
add
mov
mov
mov
mov
mov
call
jg
daa
mov
add
xchg
in
fldenv
adc
sbbl
push
xchg
aad
ficomps
dec
subl
into
mov
ret
push
in
push
cmpsl
lods
inc
adc
mov
clc
js
or
push
mov
das
push
in
pop
dec
inc
add
add
clc
add
xor
mov
outsb
loopne
mov
cmp
lods
add
mov
mov
inc
lods
bswap
pop
pushf
test
add
xor
mov
pop
xchg
pop
lods
cmp
add
inc
movsl
jns
out
aaa
fildl
cmp
mov
add
cmp
js
mov
rolb
shll
add
ljmp
movsl
lock
es
push
add
fildl
mov
cmp
into
lods
das
mov
xor
add
mov
mov
xchg
add
imul
loopne
mov
add
sbb
test
add
push
adc
mov
jl
dec
addb
cli
sahf
cmpsb
push
mov
add
rorl
jae
adc
xchg
rolb
xchg
cmp
xor
sahf
aas
stos
js
add
dec
enter
dec
fmuls
xor
mov
pop
pusha
add
lods
out
mov
mov
sbb
add
mov
negb
adc
aas
ror
or
add
bound
mov
or
fdiv
add
mov
jge
popf
jae
jp
rolb
fists
test
shr
clc
adc
sahf
mov
arpl
add
mov
mov
pop
cmpsb
divl
stos
sub
or
add
add
inc
sbb
aas
mov
mov
lret
addb
in
jge
add
add
icebp
push
and
mov
push
nop
add
movsb
sub
cltd
insl
adc
jae
or
add
add
pushf
inc
mov
jnp
mov
cmp
inc
inc
add
iret
sbb
and
mov
or
push
mov
add
pop
xorl
inc
add
xchg
loope
iret
mov
cli
sub
mov
lock
mov
lahf
out
jp
sbb
js
fwait
inc
fdiv
mov
imull
push
repz
imul
icebp
outsb
cmpsb
cmp
mov
movsb
mov
insl
cmpsb
je
add
mov
repnz
mov
sub
repz
hlt
adc
pop
pop
loop
mov
mov
add
insb
inc
je
add
push
out
add
data16
xchg
movsb
cmp
add
icebp
repnz
add
mov
out
out
mov
add
mov
pop
pop
insl
jmp
rolb
mov
imul
mov
cmp
jb
mov
pop
cmp
fsubrl
jns
add
jbe
pop
loop
mov
ret
stos
add
nop
add
mov
les
sub
add
sbb
inc
sub
sub
add
mov
sti
iret
mov
add
push
mov
outsl
aad
stos
mov
sub
das
dec
add
iret
push
dec
addb
iret
pop
or
imul
incb
scas
mov
jae
add
fwait
hlt
jge
mov
mov
shll
mov
xorl
inc
add
add
xlat
test
add
aas
inc
add
and
mov
jl
inc
add
int
movsl
fists
sbb
mov
je
aad
loopne
mov
add
xchg
cmp
nop
add
jb
mov
movsl
inc
add
add
dec
stc
test
jo
mov
fidivrl
and
nop
add
stc
leave
xchg
inc
push
mov
lods
sbb
sti
inc
mov
mov
mov
adcl
ljmp
fisubrs
xchg
sbb
add
jno
lods
push
xor
pop
into
xor
call
repz
pop
out
add
sbb
add
ljmp
cmc
sbb
add
push
pop
mov
insb
fiaddl
sub
add
xchg
mov
test
pop
xor
xlat
call
sub
add
pop
cld
jae
xacquire
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
sbb
icebp
adc
mov
jne
cmp
adc
mov
sbb
add
out
and
push
and
imul
add
add
or
test
push
daa
pop
lds
xlat
mov
jl
mov
cli
mov
mov
aas
rolb
mov
add
mov
jmp
sarl
or
popa
loop
mov
in
adc
xchg
insb
mov
push
xchg
jo
mov
add
add
mov
inc
outsl
lods
aam
and
mov
add
push
pushl
insb
and
push
jecxz
add
mov
inc
add
mov
mov
add
pop
loope
orl
mov
shl
inc
push
add
cld
jp
mov
loopne
mov
insl
inc
add
sub
shll
aad
cmpsl
testl
aad
push
mov
mov
mov
xchg
ret
cli
rolb
mov
add
sub
or
mov
test
add
jl
stos
popf
sbb
inc
add
out
testl
dec
jb
mov
xchg
in
xchg
push
mov
cli
xor
jno
xor
rolb
mov
xchg
popf
iret
stos
mov
mov
decl
cmp
leave
insl
popf
bound
mov
push
addb
mov
inc
push
push
dec
gs
mov
sbb
xor
xor
push
pop
xchg
leave
mov
ljmp
movsb
or
pop
movsb
xchg
scas
scas
popf
mov
out
roll
add
icebp
enter
jmp
cli
faddl
add
jecxz
add
mov
fbstp
das
ret
mov
adcl
pop
push
movsl
pop
incl
pop
inc
sub
add
addr16
mov
inc
pop
iret
cli
rolb
mov
inc
add
mov
add
mov
add
pop
lea
add
cmp
or
pop
rolb
mov
xor
mov
pop
dec
jmp
test
fisubs
xor
mov
add
sbb
mov
mov
test
repz
mov
pop
inc
jno
push
jl
movb
sti
out
push
pop
imul
add
cld
inc
jge
push
daa
call
add
push
jge
jp
add
add
loop
mov
jl
jg
push
xchg
add
fisttpl
rolb
mov
mov
movsb
add
scas
sbb
fisttps
mov
sub
cs
inc
in
pop
stos
ljmp
mov
cmc
dec
dec
pop
aaa
pusha
add
test
cmpsb
pop
addb
arpl
add
add
cwtl
add
mov
dec
sahf
pop
xchg
orl
movsb
push
mov
xchg
bound
mov
add
les
iret
xchg
mov
repz
add
add
sbb
int
add
xor
add
push
je
enter
std
cmpsb
sbb
add
add
call
inc
push
sub
sbb
add
mov
test
add
mov
fucomi
repnz
sbb
lahf
idivl
rolb
mov
imul
mov
adc
mov
fcmovnb
fbstp
mov
cmp
popa
sub
mov
ljmp
ficomps
xlat
xor
sbb
out
lds
cltd
lahf
arpl
ljmp
out
jno
cmpsb
add
mov
loop
mov
pop
and
mov
or
add
mov
lret
add
mov
add
bound
mov
mov
dec
rcr
add
add
nop
add
add
loopne
mov
mov
adc
mov
xor
mov
jmp
mov
mov
sbb
mov
out
xchg
inc
add
popf
fcompl
imul
dec
jbe
push
mov
ljmp
es
mov
daa
enter
add
add
xchg
and
aaa
xlat
mov
xchg
rolb
mov
adc
icebp
jmp
mov
jns
pop
mov
add
inc
add
or
add
mov
jecxz
jbe
imul
aad
je
add
cmp
daa
xor
mov
add
insl
bound
mov
jmp
adc
mov
cmp
mov
lret
into
out
xchg
pop
cmp
sbb
add
sbb
shl
dec
fsubp
lret
xchg
and
jae
pop
pop
arpl
dec
cs
push
es
add
add
lret
daa
pop
data16
jge
cmpsb
jae
stc
cmp
add
adc
ds
or
cld
test
addr16
add
lock
cmp
mov
add
mov
mov
push
add
pop
xor
mov
movb
lds
aaa
lock
push
fdivs
cmpsb
jb
mov
outsl
int3
je
pop
mov
insb
pop
xchg
pop
or
adc
mov
and
aaa
push
enter
mov
notl
mov
xchg
inc
add
stos
lret
inc
ds
aam
addb
mov
fdivl
add
pop
add
mov
sti
sbb
mov
imull
jne
test
jl
xchg
cltd
in
push
mov
push
add
and
rolb
mov
insb
xchg
add
ret
rolb
mov
mov
push
push
pop
xchg
add
sub
aaa
ret
int3
scas
orl
add
adc
push
sti
cltd
ret
xchg
xor
mov
mov
divb
or
ret
pop
cmovbe
xlat
mov
push
ljmp
jne
lods
dec
jmp
rolb
mov
mov
lds
xchg
test
and
pushf
jle
pop
xor
add
cmpsb
push
scas
cmp
add
ja
mov
mov
xchg
outsl
jmp
daa
or
mov
movb
icebp
dec
pop
sub
mov
inc
add
or
cmp
jne
sbb
push
add
outsb
repnz
fs
add
and
mov
ds
cmp
shr
in
stos
and
adc
mov
add
cmp
inc
add
add
ss
mov
pop
lcall
cld
dec
jnp
inc
ljmp
fcmovu
adc
cmp
gs
lret
ss
out
add
jg
stc
into
dec
sbb
pop
jno
pop
test
stos
andl
add
xchg
cs
imul
jle
add
sub
cmp
fdivr
jecxz
sub
sbb
add
aaa
jne
dec
dec
cld
mov
nop
add
in
xlat
rolb
mov
pop
mov
fisttps
xchg
push
push
int3
rorl
and
sbb
mov
sub
add
test
xchg
dec
ja
push
add
repnz
mov
add
sbb
mov
and
mov
add
cmp
pushf
insb
add
test
imul
inc
add
add
lahf
jmp
jb
mov
shll
add
add
sbb
pop
inc
add
out
xchg
test
mov
adc
lods
ljmp
sbb
mov
cmp
addb
inc
pusha
add
sbb
ds
add
lahf
mov
dec
jl
rorl
or
mov
pop
adc
push
push
movsl
sbb
pop
adc
cmp
stos
dec
xchg
and
mov
cmpl
and
popa
shll
stc
jp
imul
or
or
add
mov
add
add
add
out
xchg
add
mov
mov
hlt
add
mov
add
pop
inc
lds
add
or
cmc
sti
xchg
cmp
dec
notb
mov
movsb
mov
mov
enter
add
add
int
add
mov
add
mov
les
rolb
mov
imul
jmp
out
sarl
sbb
insl
and
add
ja
movsb
inc
mov
or
idivb
jns
andl
aam
inc
jle
jo
mov
cmp
roll
adc
mov
fs
cmpps
sub
sub
mov
stc
icebp
xchg
add
ss
push
sbb
jno
cmp
add
pop
cmpsl
leave
sbb
xchg
jns
sbb
mov
jl
loop
mov
test
repnz
jmp
dec
lea
mov
andl
mov
pop
es
inc
add
fsubrl
lods
std
adc
mov
test
ljmp
add
imul
ret
aas
xor
xlat
icebp
cmpsl
push
add
add
mov
mov
add
addb
cli
push
icebp
aaa
sbb
daa
imul
nop
add
add
add
add
testb
mov
adc
cmpsb
mov
xor
add
fsubrs
add
pop
push
add
push
cmpsb
xor
mov
jbe
push
adc
mov
fidivrl
mov
adc
mov
jle
in
into
mov
call
dec
xchg
or
cmp
add
jae
push
ret
inc
inc
addr16
mov
add
add
int3
mov
mov
mov
add
daa
xor
mov
add
add
add
mov
dec
rolb
rcrl
pop
push
stos
cmp
cmpsb
jns
jg
addb
test
out
fmull
idiv
mov
and
mov
mov
sub
add
add
push
daa
add
add
mov
add
mov
add
mov
fs
enter
enter
mov
cmp
sbb
mov
cld
pop
adc
mov
mov
add
push
or
sub
mov
out
rolb
mov
sbb
dec
push
pop
lcall
mov
push
and
add
add
cs
mov
xchg
push
repz
mov
xor
add
jge,pt
or
mov
mov
add
imul
mov
pop
mov
cmp
cs
xlat
xlat
pop
add
mov
xchg
pop
sbb
ja
xchg
add
push
add
iret
dec
call
mov
in
mov
or
xor
xor
movsl
or
add
mov
mov
dec
popa
and
jo
mov
pushf
leave
lods
lea
jmp
xlat
xchg
ja
inc
add
mov
fwait
or
mov
loope
dec
mov
mov
into
cwtl
iret
lods
scas
ret
addb
rcll
dec
xor
mov
jl
add
mov
sbb
lds
jae
adc
add
mov
in
cwtl
rolb
jb
mov
xor
push
xchg
rolb
mov
sbb
dec
inc
into
sbb
nop
add
mov
call
add
lods
push
lock
aam
enter
jl
movsl
jecxz
add
add
loope
nop
add
add
add
sbb
push
and
hlt
clc
daa
mov
sbb
divb
out
add
push
or
lahf
rolb
add
cltd
cltd
mov
mov
adc
mov
add
mov
mov
sub
inc
or
pop
adc
mov
loop
mov
add
add
add
mov
mov
mov
cli
in
xchg
repz
add
addb
sbb
jp
lods
mov
pusha
add
and
and
mov
bound
mov
cld
cmp
ret
rolb
nop
add
not
ljmp
cmc
pop
mov
pusha
add
iret
test
test
and
mov
mov
mov
pushf
into
jmp
cmp
sbb
cmp
inc
lods
cmp
out
jmp
cld
or
enter
pop
sub
dec
ss
xchg
pop
and
mov
add
test
xor
fadd
push
add
mov
inc
fsubrs
stos
xor
mov
add
mov
jb
mov
lods
pop
mov
lret
out
scas
pop
and
mov
mov
rorl
in
add
mov
sub
adc
leave
xor
mov
add
fistpll
xchg
scas
icebp
add
out
outsl
in
mov
mov
aad
mov
clc
and
add
push
add
and
add
int3
stos
cli
dec
mov
mov
cmp
jmp
into
adc
cmpsb
sbb
lock
adc
jbe
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
push
pop
and
popa
pop
dec
jl
add
mov
pop
flds
ret
faddl
add
mov
mov
sbb
ja
stos
movlps
xor
add
mov
hlt
jnp
xchg
add
out
imul
fsubr
clc
arpl
add
pop
sub
push
jne
push
loop
mov
add
add
sarl
mov
movq
hlt
dec
pop
rcr
sub
add
stos
inc
add
mov
idivl
test
inc
out
fsubrl
add
mov
xlat
aas
pop
xlat
sbb
xchg
cmc
es
gs
fsubp
cmpsl
mov
adc
mov
mov
je
push
add
lret
cmp
idivl
add
add
adc
xor
imul
add
add
add
scas
rolb
mov
in
add
mov
dec
jmp
gs
call
xor
add
mov
pop
pop
push
dec
xchg
fucom
sbb
dec
leave
jno
ficomps
rol
mov
cwtl
or
inc
add
and
mov
xchg
pop
jmp
add
xor
mov
sti
pusha
add
repz
mov
sub
aam
xchg
adc
js
jge
inc
xchg
sub
xor
mov
pop
rolb
push
add
pop
and
add
xchg
mov
push
mov
jge
bound
mov
add
mov
sahf
mov
je
jecxz
inc
add
iret
cs
jg
inc
dec
sbb
or
mov
pop
pop
inc
adc
test
out
lock
mov
rolb
mov
push
sub
push
iret
mov
mov
addb
sbb
mov
dec
lss
mov
mov
imull
cltd
popa
mov
mov
add
lcall
insl
out
ja
repz
push
call
or
jo
mov
idivb
push
jp
lock
mov
sub
insb
xor
adc
mov
mov
sub
jle
and
mov
or
mov
mov
sub
mov
push
xor
mov
pop
cmp
push
mov
pop
add
std
mov
add
push
loop
mov
or
cmp
enter
fildll
sbb
fstl
add
push
jmp
push
ss
es
add
mov
lahf
jae
lret
mov
loop
mov
cld
stos
addb
inc
mov
or
add
mov
lock
dec
push
jae
push
popf
pop
in
notb
sbb
inc
lcall
dec
into
cmp
stc
outsb
cltd
clc
add
inc
cmpl
cwtl
cli
mov
imul
xchg
mov
imul
int3
jge
shrl
add
cld
xor
mov
cmp
jge
fwait
sub
fsubrp
inc
aam
add
sti
outsl
outsb
iret
xchg
mov
std
adc
add
cmpsl
jmp
mov
add
hlt
fsts
add
add
or
repz
cld
aas
xchg
mov
test
cmp
jnp
add
xchg
das
hlt
mov
push
jno
arpl
pop
mov
add
outsb
repnz
mov
dec
cld
imull
and
or
sbb
fcoms
int
or
rolb
test
jl
jp
cmpsl
mov
mov
jmp
scas
pushf
jle
in
insb
xchg
push
cltd
cmpsl
sub
mov
add
popf
mov
jmp
adcl
enter
push
stc
pusha
add
data16
leave
add
dec
stc
jo
mov
pop
xlat
lea
add
pop
sbb
mov
hlt
dec
xor
add
xchg
inc
jg
add
jne
mov
sub
inc
add
dec
push
jle
shll
out
cmp
add
in
ljmp
cli
movsl
xor
repz
mov
adc
add
cmp
enter
mov
jecxz
lock
aam
add
sub
adc
xchg
fisubs
inc
loopne
mov
mov
pop
mov
add
mov
mov
cmp
cmp
add
xor
scas
rolb
mov
aaa
mov
cmc
aaa
iret
test
es
inc
dec
push
ljmp
addl
push
xor
push
jp
int3
idivb
nop
add
add
sub
add
fisttpl
mov
push
rolb
mov
filds
int3
popa
dec
pop
scas
aam
and
out
add
adc
xor
mov
dec
daa
cmpsb
sbb
int
mov
pop
push
bound
mov
lods
jle
add
sub
add
pop
cmc
mulb
add
mov
xchg
sub
bound
mov
cwtl
lds
rolb
mov
mov
sbb
fscale
stc
jae
and
jle
inc
in
and
daa
sub
xchg
jp
cmp
jl
in
ret
or
lcall
inc
lret
xchg
js
sub
push
jae
mov
out
mov
add
push
xchg
inc
add
shll
in
adc
mov
add
pusha
add
inc
arpl
or
push
into
adc
jl
popa
rolb
sti
or
pop
cld
addb
es
sti
pop
stos
xlat
and
mov
sbb
rolb
dec
sarl
mov
mov
jno
add
lret
add
mov
xchg
push
fstl
sbb
mov
lods
jnp
bound
mov
mov
mov
mov
mov
cmpsl
fistl
mov
add
aas
adc
or
out
fs
lods
addb
mov
std
add
mov
mov
jo
mov
add
rolb
mov
push
inc
inc
ds
lret
pushf
popa
mov
mov
out
xchg
out
daa
mov
es
dec
sahf
addb
add
add
push
mov
out
pop
pop
cltd
es
aad
negb
add
inc
add
xor
sbb
add
mov
imul
sub
mov
push
lods
push
fidivrl
jmp
mov
daa
gs
push
lahf
xor
mov
push
fwait
repz
add
testl
pop
test
mov
lods
aam
xchg
andl
scas
pop
inc
adc
mov
sbb
add
es
daa
repnz
outsb
jb
mov
ret
push
mov
jl
or
cwtl
inc
adc
jbe
jle
cmp
ljmp
in
add
mov
mov
mov
ljmp
inc
aaa
shl
out
mov
imul
xchg
aaa
sbb
mov
jmp
push
fcompl
add
sbb
cwtl
xor
leave
lock
ret
cmc
inc
es
aam
adc
add
dec
inc
push
jle
jecxz
add
jecxz
stos
jmp
outsl
mov
or
mov
push
cltd
out
xor
mov
shll
arpl
add
add
add
test
jmp
dec
xchg
xor
mov
pop
adc
or
push
add
mov
xor
mov
outsl
data16
shrl
add
ljmp
sbb
adc
add
add
rolb
mov
jno
pop
sbb
icebp
adc
mov
add
jo
mov
add
mov
sub
mov
mov
lret
push
test
cmp
repz
mov
sbb
aam
add
or
push
jl
mov
and
or
add
sbb
jae
out
jne
mov
pusha
add
cmp
mov
add
add
rolb
mov
add
fcmovu
nop
add
cld
pop
imul
mov
in
mov
dec
jmp
add
dec
jecxz
addb
jb
mov
jno
rolb
sub
mov
xchg
adc
mov
mov
mov
add
mov
std
xchg
fcom
adc
add
push
add
in
xor
stos
mov
clc
in
jno
jmp
xchg
bsf
cmp
mov
mov
cwtl
sub
mov
mov
insl
cltd
mov
pop
lcall
leave
ljmp
outsb
test
mov
mov
dec
mov
sbb
and
addb
call
push
push
cli
push
add
add
in
add
mov
mov
in
mov
pop
inc
add
add
adc
inc
lret
insl
jae
add
ret
arpl
push
imul
movsl
imull
add
jge
pop
addb
inc
icebp
je
rolb
jge
sub
cltd
pop
sbb
fucom
xchg
xor
sbbl
mov
xor
xchg
bound
mov
fimuls
jp
mov
fidivl
adc
mov
inc
jnp
or
iret
out
lock
cmp
add
xor
jne
js
test
stc
shl
fisttpl
add
mov
mov
sti
jg
subl
fcoms
jbe
rolb
mov
mov
aas
fucom
add
add
out
or
daa
adc
int3
test
les
mov
cmp
rolb
mov
mov
mov
sub
jns
pop
test
inc
inc
jle
mov
add
mov
mov
add
sub
add
mov
mov
cmp
mov
lock
mov
fwait
jle
or
popf
push
inc
decl
push
add
push
add
jmp
jmp
jno
add
mov
add
mov
add
or
mov
sub
pop
gs
jb
mov
push
add
add
test
mov
fstpl
push
add
mov
pusha
add
mov
xchg
xchg
mov
jb
mov
imul
addb
call
mov
cmp
fs
mov
mov
aas
adc
mov
add
add
push
mov
dec
and
mov
push
add
add
repz
cld
aas
jne
shll
jns
lcall
pop
dec
rolb
mov
nop
add
push
lea
xor
in
pusha
add
push
push
add
add
addr16
mov
jne
pop
cmp
mov
add
xchg
xchg
add
mov
mov
pop
push
mov
xchg
sub
add
and
pop
xor
popf
jb
mov
in
cmpsb
lods
xchg
or
mov
flds
cli
aas
sub
sbb
add
out
dec
out
sbb
inc
add
mov
neg
out
popa
push
mov
call
dec
mov
xor
pop
push
xchg
add
sti
push
pushw
mov
mov
fwait
inc
insl
mov
dec
jno
xor
mov
dec
push
insl
shrl
add
cs
add
xchg
xchg
addb
jo
mov
jmp
std
testb
clc
xchg
add
mov
push
addb
pushf
rolb
mov
mov
xor
mov
lret
aam
les
mov
xor
mov
sub
pop
aam
xor
sub
and
cmp
add
jb
mov
dec
aam
dec
cmpsl
daa
inc
jl
push
in
mov
mov
out
push
sub
movb
mov
adc
mov
jno
cmc
pop
or
cmp
jo
mov
mov
mov
cmp
sbbl
out
inc
add
cmp
pop
imul
jmp
add
pop
test
hlt
add
xor
mov
add
add
mov
into
xchg
push
mov
mov
nop
add
xor
jl
lea
cmp
mov
inc
cmp
or
and
lea
fnsave
add
inc
jo
mov
les
test
out
mov
lret
lods
ja
push
pop
pop
sbb
or
ds
mov
sub
bound
mov
or
xor
mov
xlat
cs
repz
jnp
ja
repnz
std
pop
dec
adc
jb
mov
add
rolb
mov
mov
cmpsl
jbe
pop
pushf
scas
arpl
sahf
mov
xor
je
ret
fs
jbe
mov
mov
in
xor
mov
cmp
adc
push
jnp
pushf
mov
xor
aam
sbb
xchg
add
jg
int3
ret
out
dec
and
iret
xor
add
sub
aas
xchg
add
mov
sbb
in
and
push
and
mov
add
adc
mov
xor
pop
cmp
add
xor
repnz
add
mov
xchg
pop
sbb
xor
mov
dec
out
popa
leave
pushl
add
or
repnz
push
mov
add
sbb
dec
jp
rolb
mov
cmpsb
popf
shll
stos
nop
add
add
lret
pop
jl
fdivl
mov
movsb
cmpsb
xchg
add
fldt
add
mov
loopne
mov
imul
mov
mov
enter
popf
mov
out
pusha
add
ja
jnp
imul
je
in
fmuls
scas
mov
lcall
lcall
icebp
fisubrl
add
mov
pop
and
loopne
mov
push
dec
scas
dec
lahf
sbb
add
call
imul
add
and
adc
pop
fcomip
add
jg
lahf
xlat
cmovs
and
mov
jne
out
add
fsubrl
jmp
inc
jno
lahf
add
mov
mov
ljmp
mov
dec
fwait
push
nop
add
sub
cmpsl
push
out
mov
pop
pop
data16
leave
in
push
push
cld
adc
dec
and
add
add
or
ret
or
mov
add
ss
dec
loopne
mov
and
lcall
xchg
xchg
xchg
stos
xor
xchg
mov
xchg
xor
mov
lcall
add
pop
fstps
mov
jge
rolb
aas
pop
jb
mov
in
rolb
mov
mov
fisubl
js
fldcw
xor
mov
push
sbb
movsl
mov
push
jg
mov
addb
mov
xor
mov
push
push
lds
add
sbb
cs
jnp
xchg
sub
jle
or
mov
jno
add
adc
jl
stos
lods
fstpt
mov
outsl
js
addb
fstpl
int
pop
scas
ja
seta
push
sub
xlat
mov
mov
add
std
dec
jecxz
pop
call
mov
or
xchg
test
lock
push
add
xor
mov
mov
pop
xor
insl
push
or
mov
jnp
xlat
aad
add
add
mov
xor
lds
jbe
dec
lods
insl
sahf
das
sti
push
jg
popa
add
icebp
sub
fdivl
ret
test
push
ljmp
pop
pop
mov
into
in
rol
mov
mov
jmp
out
push
add
pop
scas
cmp
xchg
insl
jge
add
mov
add
jge
xchg
cwtl
je
pop
std
outsl
clc
lods
push
xchg
adc
adc
push
or
test
mov
hlt
popa
leave
inc
add
mov
xchg
xor
vpunpcklbw
mov
mul
pop
mov
sub
adc
add
and
lret
push
call
add
pop
mov
sub
cmovns
fstpl
add
or
fcomps
add
xor
xchg
sub
aaa
add
xchg
popa
sbb
add
mov
jae
dec
dec
push
inc
sub
rolb
rolb
mov
mov
into
imul
add
mov
mov
inc
call
dec
mov
sub
repnz
jbe
mov
and
push
add
adc
push
add
mov
inc
add
incb
bound
mov
cmc
jb
mov
add
call
pop
pop
int
xchg
stos
jp
movsb
fwait
mov
addb
inc
add
mov
iret
enter
sbb
lods
push
popa
flds
mov
mov
mov
mov
repz
ds
add
mov
nop
add
cli
out
cmp
fwait
xchg
add
xchg
into
xchg
sub
cli
lcall
pop
cmp
call
nop
add
mov
mov
add
mov
add
loope
add
lret
rolb
mov
add
addb
sub
xor
lcall
out
xor
int
inc
bndldx
dec
ss
ss
ja
add
dec
daa
add
imul
rol
jp
gs
rolb
mov
shll
bound
mov
lret
cmp
adc
sbb
shll
add
mov
mov
push
or
add
clc
push
jne
add
dec
cmp
out
popa
adc
dec
testl
loopne
mov
leave
pop
xor
mov
fcmovne
loopne
mov
cmp
addb
jle
add
add
neg
ret
or
add
repnz
into
idivb
cmc
lods
adc
xlat
fcoms
mov
sbb
add
lods
fcoml
ror
lahf
pop
fcmovu
sbb
or
insl
in
test
repz
in
push
mov
ja
add
jmp
shr
mov
jae
jg
repz
test
rolb
lcall
mov
fstpt
into
and
mov
hlt
or
es
sbb
pop
or
popa
addr16
ret
inc
add
push
xor
aaa
adc
lods
pop
cmp
xlat
push
add
mov
add
repz
add
add
movsl
mov
add
and
jl
mov
sahf
daa
adc
jmp
add
add
loope
sbb
inc
add
xchg
add
fsub
pop
negb
out
sbb
test
movl
aas
pushf
out
fldt
sbb
sub
xor
mov
out
sub
push
ret
push
or
lcall
mov
jo
mov
jle
lds
cmp
add
fcoms
je
mov
mov
rolb
mov
add
addb
das
inc
xchg
cmp
sub
roll
xor
mov
xchg
inc
mov
int
xchg
insl
imul
add
cs
sbb
xor
mov
push
add
adc
mov
add
mov
xchg
adc
mov
cmpsl
in
and
add
add
xor
cmc
out
out
jg
add
data16
or
pop
mov
add
lret
dec
ja
orps
mov
in
mov
add
out
in
bound
mov
lea
mov
ret
fistps
gs
and
loop
mov
aam
sub
adc
ud2
cwtl
stos
pop
dec
test
mov
cmc
push
push
icebp
js
lods
ficoml
mov
mov
add
or
mov
popa
hlt
add
xor
jmp
mov
outsb
jp
ror
lods
and
in
cli
bound
mov
add
mov
xchg
mov
add
hlt
int3
out
out
add
daa
in
xchg
mov
jbe
out
cmp
cltd
sahf
lret
sbb
jg
lret
push
jns
mov
pop
mov
add
adc
mov
loope
negb
cmc
add
add
mov
adc
pop
cwtl
lret
insl
and
fstps
or
in
loope
and
mov
sbb
std
push
sub
xchg
jbe
leave
popa
loop
mov
add
mov
or
cmpsl
mov
ret
ret
pusha
add
sbb
fldcw
addb
mov
cmp
add
popa
and
mov
jnp,pn
rolb
mov
inc
add
js
add
pop
jns
push
aad
lock
add
add
das
mov
or
imul
push
fbstp
mov
pop
test
push
arpl
jg
es
add
mov
pop
pushf
imul
aad
gs
fimull
jb
mov
out
push
add
or
and
imul
mov
mov
mov
in
add
cltd
inc
xor
mov
and
mov
test
test
repnz
in
jmp
inc
pushf
dec
dec
pop
out
ficoms
pop
inc
mov
add
dec
in
movsl
stc
aas
addb
jae
lods
fdivr
scas
test
in
cmp
jmp
mov
mov
xlat
xor
mov
pop
loope
xchg
faddp
pop
pop
lods
jne
imul
lahf
repz
adc
mov
inc
add
mov
adc
add
shrl
push
add
add
mov
data16
inc
sbb
xchg
mov
mov
mov
push
mov
cmp
rorl
cmpsl
fwait
ss
add
and
mov
clc
lds
xor
mov
xchg
pop
repnz
pop
xor
pusha
add
cmpsl
mov
mov
add
aas
jmp
sbb
add
or
add
ret
cmp
xor
push
or
lahf
pop
cmpsl
push
pushf
addr16
inc
cmc
addr16
push
mov
mov
test
xor
mov
aaa
mov
or
mov
add
mov
add
mov
pop
sub
daa
loopne
mov
mov
ret
push
loope
dec
or
std
test
inc
add
movsl
pusha
add
mov
or
inc
popa
adc
mov
xchg
cltd
and
xor
cwtl
inc
fsubl
mov
fmull
add
fyl2x
ja
xchg
ret
ds
xor
outsb
in
clc
sub
repnz
and
in
add
sbb
ss
setb
mov
out
inc
repz
jne
addb
mov
sub
cmp
rolb
jl
popf
jnp
mov
add
add
lret
insb
push
push
outsl
mov
dec
int3
sub
enter
add
push
push
popa
in
push
lods
in
inc
push
sbb
add
mov
sbb
mov
xchg
cltd
sti
mov
mov
mov
push
or
loopne
mov
stos
and
mov
rolb
mov
add
rolb
mov
sub
add
mov
jl
add
mov
add
mov
ud0
rcr
fidivrs
sub
add
and
cmp
fists
add
test
lock
repnz
iret
stc
leave
movsl
bound
mov
xchg
add
inc
cmpsl
or
fiaddl
pop
test
add
inc
cld
jl
inc
leave
iret
cmp
push
je
add
or
rolb
aam
or
add
pop
xchg
jl
xor
mov
pushf
or
dec
add
hlt
inc
hlt
mov
cs
add
mov
add
xchg
mov
pusha
add
cwtl
sub
int
add
push
sub
push
push
add
fnstenv
imul
xor
mov
and
mov
mov
add
or
add
pop
je
jge
jae
int3
mov
add
or
ret
lods
xor
push
jg
mov
mov
data16
test
mov
xchg
add
lret
or
cmpsl
xchg
sub
or
popa
xor
popa
jl
add
sub
push
push
inc
inc
lret
hlt
pop
xchg
test
cmp
jnp
in
jge
fwait
pop
xchg
cld
push
and
mov
and
lock
rolb
mov
out
hlt
push
add
add
jl
sbb
ret
les
add
add
addb
fstpl
and
test
fsub
add
mov
cld
jbe
push
sbb
mov
add
lods
rolb
out
aaa
cmp
mov
je
cmpsb
fsubp
add
mov
dec
js
and
lods
stos
imul
xchg
lea
dec
jmp
loope
xlat
sbb
jl
lock
inc
sbb
add
test
scas
xchg
call
ja
cwtl
pop
push
push
jne
cmp
js
lods
icebp
xchg
mov
mov
mov
mov
add
add
dec
ljmp
hlt
and
xor
addb
push
mov
add
gs
mov
xchg
push
cld
push
mov
mov
push
pop
rolb
pop
fdivs
fstps
aas
sti
stos
xor
mov
adc
mov
add
loope
inc
imul
mov
add
cmpl
lret
xor
mov
addb
sbb
adc
mov
stos
mov
xchg
push
lods
pushf
das
dec
data16
pop
hlt
ljmp
leave
xor
addr16
loopne
mov
lea
cmp
xor
stos
cs
add
push
mov
mov
sbb
and
mov
repnz
add
stc
mov
pop
mov
or
dec
xchg
arpl
adc
out
jae
out
lcall
add
ljmp
add
add
mov
insb
mov
mov
fidivl
movsl
inc
add
mov
dec
pop
and
scas
mov
rolb
mov
mov
ficomps
loop
mov
add
xchg
mov
sub
jae
inc
loope
pushf
xchg
mov
mov
mov
dec
popf
das
cmp
add
das
addb
fwait
and
mov
icebp
mov
rolb
int
mov
mov
sbb
pusha
add
adc
aaa
imul
dec
into
dec
frstor
cmp
inc
push
add
outsb
cmp
jns
orl
outsb
shll
adc
lea
add
push
imul
adc
mov
sahf
sbb
mov
add
pushaw
add
leave
sub
sbb
ss
pushf
imul
mov
add
mov
in
mov
dec
cmc
push
sahf
addb
fcoml
xor
pusha
add
mov
and
mov
xor
add
rolb
sbb
mov
ret
fnstsw
js
push
insb
mov
lret
inc
scas
ret
lods
mov
lods
adc
mov
sahf
sub
cmp
mov
shl
add
sahf
cwtl
pushf
push
sub
popf
and
daa
hlt
test
lcall
pushf
pop
fcomi
insb
hlt
jnp
add
add
pushf
or
pusha
add
add
inc
push
add
add
xchg
mov
mov
loop
mov
add
push
mov
imul
add
pop
adc
mov
sub
add
mov
pop
mov
popf
out
sub
pop
mov
cmp
add
stos
push
shl
add
ja
mov
sub
rorl
addb
enter
mov
push
jns
xor
mov
mov
loope
mov
enter
xchg
add
stos
std
icebp
add
lods
or
fstl
call
out
add
loope
pop
add
repnz
adc
mov
lock
or
add
mov
shll
sbb
jae
hlt
ret
or
loop
mov
adc
mov
rolb
mov
loope
fwait
sub
outsl
popa
dec
popf
inc
mov
inc
adc
mov
aaa
push
pop
hlt
and
mov
loope
mov
movsl
mov
or
inc
pop
fbld
or
mov
imul
pop
mov
popa
pop
mov
add
imulb
xor
xchg
mov
je
mov
cmpsb
rolb
mov
inc
hlt
loopne
mov
add
add
or
cmp
add
test
ret
int3
mov
mov
dec
rolb
mov
add
jnp
pusha
add
adc
ret
dec
mov
rolb
mov
insl
jb
mov
jno
mov
sbb
mov
add
add
add
jl
jae
rcll
xchg
pop
test
daa
sahf
cmovbe
pushf
mov
mov
add
inc
cmpsb
push
add
mov
mov
mov
rolb
mov
test
gs
pop
xchg
push
pushf
pop
js
add
aad
aad
cld
rolb
mov
add
lds
add
sub
push
push
adc
and
pop
rolb
mov
sbb
add
lods
xchg
cwtl
mov
call
dec
call
cmc
pop
pop
call
mov
push
out
push
push
add
and
mov
cmpsb
scas
push
and
and
add
addb
mov
or
xchg
inc
fdivl
mov
push
enter
xor
mov
lea
lods
stos
clc
call
pop
adc
push
jae
add
xor
jmp
sub
mov
adc
inc
dec
inc
mov
int
rolb
mov
ret
sub
mov
add
jb
mov
sahf
mov
dec
mov
mov
scas
sub
add
sti
xor
fs
je
pop
push
repz
ss
mov
arpl
inc
sbb
mov
int
add
aad
mov
dec
mov
or
das
rolb
mov
out
add
mov
mov
xchg
mov
jmp
add
test
imul
xor
mov
sub
aad
dec
loope
addb
daa
xor
imul
dec
cmp
lcall
pushf
rolb
mov
out
jp
or
push
add
mov
add
push
add
pop
data16
mov
cltd
add
dec
imul
hlt
jbe
and
mov
xchg
jmp
xchg
cmp
pop
jg
pop
into
pop
fwait
popa
cs
test
lea
rolb
xor
addb
pop
test
and
mov
icebp
daa
cs
lock
mov
arpl
jbe
mov
add
xchg
add
jb
mov
and
mov
add
push
icebp
gs
xor
mov
movsl
cltd
add
popl
add
or
or
lret
imul
add
or
loop
mov
adc
mov
lods
push
sub
cmc
loope
xchg
push
add
jle
sub
stc
mov
stos
out
mov
add
push
add
mov
iret
movsl
mov
mov
jge
pop
rolb
xchg
sahf
xchg
aad
push
push
add
sbb
in
lahf
sbb
add
add
mov
test
jne
sub
mov
mov
mov
mov
in
xlat
movb
jmp
mov
add
push
push
sbb
sbb
or
push
dec
adc
add
loopne
mov
mov
rolb
mov
mov
lds
daa
mov
lret
call
mov
test
add
repnz
pop
lods
pop
inc
add
add
mov
in
add
mov
mov
adc
mov
add
lcall
or
test
mov
inc
out
mov
mov
xor
popa
cmp
add
into
test
add
add
aas
outsl
enter
cmpsl
ds
add
and
es
add
add
add
popf
dec
fisttpll
push
hlt
mov
push
lock
mov
xor
mov
scas
outsl
insl
leave
aam
outsl
test
add
push
cmp
dec
xor
mov
dec
test
test
movb
add
int
popf
out
or
addb
ds
call
rolb
mov
imul
add
mov
call
iret
adcl
push
cltd
and
mov
xchg
arpl
xor
test
mov
cwtl
shrl
mov
fabs
jae
add
dec
dec
push
and
mov
push
mov
add
in
mov
lret
test
add
mov
mov
pushf
xchg
and
mov
add
je
movsb
bndstx
mov
push
xor
mov
icebp
orl
add
sub
or
addb
aam
add
repz
sub
inc
rolb
mov
add
mov
pop
sub
sbb
dec
loop
mov
dec
and
inc
xchg
roll
daa
fbld
mov
add
add
add
leave
sub
add
dec
pop
mov
repnz
mov
lods
repnz
jge
jle
mov
insb
int
fdivrs
jnp
push
add
ds
fsubrl
in
lret
mov
sub
fmull
add
jge
cmpsb
rolb
pop
jge
lahf
cmpsl
fldt
dec
out
add
outsl
xor
mov
xchg
adc
add
imul
push
sub
add
add
clc
add
mov
lods
idivb
nop
add
pop
jo
mov
jmp
add
mov
add
movsb
xor
add
xor
iret
push
or
inc
push
mov
mov
out
bound
mov
insl
inc
jg
mov
add
jnp
mov
sbb
loopne
mov
rcr
cwtl
pop
fistpll
inc
flds
jge
sar
pop
add
xchg
xor
mov
pop
xchg
and
sub
mov
mov
pop
cli
in
out
js
push
je
js
into
push
pop
lret
stos
insl
xor
mov
stos
mov
jp
sub
movsl
jecxz
nop
add
iret
cltd
int
add
add
loope
mov
add
clc
imul
mov
mov
mov
mov
cmp
out
add
lock
mov
adc
mov
sahf
pop
ss
mov
mov
pop
clc
popa
mov
shll
leavew
or
add
outsl
mov
cmc
icebp
jmp
add
mov
outsl
pop
icebp
pop
les
jns
inc
inc
lea
pop
cmp
sbb
lahf
dec
std
or
dec
aaa
mov
add
push
add
sbb
test
sbb
rcll
mov
unpcklps
cwtl
int3
dec
cmpsl
lret
mov
add
mov
aaa
shll
mov
mov
pop
mov
test
es
lret
mov
and
xor
add
rolb
and
add
adc
mov
in
jb
mov
add
fs
add
bound
mov
add
mov
xchg
adc
inc
insb
cltd
or
lds
aas
movsb
les
sbbl
mov
in
mov
pop
repnz
add
sbb
sub
fwait
stc
fcmovu
int3
sbb
and
mov
ss
in
add
nop
add
mov
push
add
jge
add
pop
xchg
insb
loope
dec
or
cmp
mov
sub
push
inc
icebp
dec
adc
mov
pusha
add
mov
loopne
mov
test
add
add
sub
add
add
jnp
cli
mov
mov
out
in
sub
add
adc
mov
rolb
mov
mov
or
fcoml
xchg
or
or
mov
std
loop
mov
push
data16
shrl
pop
icebp
push
insb
or
add
mov
sub
call
add
pop
mov
pop
cmp
jbe
cmp
jge
add
out
sbb
xchg
and
mov
test
cmp
rorl
sub
ss
mov
mov
outsb
mov
or
test
add
dec
xor
mov
add
sbb
add
fmuls
leave
inc
push
repz
sbb
rolb
scas
lods
popf
dec
or
fstp
daa
jp
das
addb
mov
cltd
insb
xor
mov
pop
dec
jb
mov
popf
sbb
repnz
xor
mov
fs
addb
sbb
mov
add
add
mov
js
adc
mov
pop
shl
loop
mov
jno
or
dec
scas
xor
mov
fs
mov
add
dec
fists
mov
shl
jne
gs
inc
insl
enter
mov
dec
mov
mov
mov
jnp
or
and
mov
mov
je
adc
mov
cs
inc
gs
add
mov
dec
push
sub
outsl
aad
shll
or
add
push
sbb
lret
push
xchg
jmp
add
sub
dec
add
mov
imul
inc
inc
add
cld
fwait
sub
xchg
cmp
jb
mov
push
dec
insb
pop
and
xor
mov
add
dec
adc
mov
or
jecxz
add
mov
mov
dec
test
daa
insb
imul
cmpsl
cmp
xchg
add
cmc
pop
pop
addl
loope
and
dec
jl
repz
push
mov
ljmp
pop
stos
sub
add
mov
in
adc
push
into
stos
lahf
lock
jge
data16
push
pusha
add
jne
stc
xchg
mov
jo
mov
fldt
sub
cmp
and
mov
pop
jnp
add
lds
jp
lods
into
mov
or
push
add
mov
add
pop
cmp
push
out
inc
sbb
adc
jp
sub
xor
mov
outsb
stc
scas
pop
sub
mov
stc
test
mov
adc
cmp
pop
xchg
movsl
push
fcoms
je
dec
mov
mov
mov
or
add
pop
adc
insb
rolb
mov
adc
inc
push
add
or
enter
mov
add
dec
cmp
add
popl
inc
xchg
add
stos
xor
outsb
jg
jnp
idivb
popf
fistl
mov
cmp
ret
dec
enter
sarl
rolb
mov
jmp
aad
add
sbb
cmp
mov
pop
imul
mov
adc
ret
enter
dec
shll
mov
test
mov
insl
sub
sub
mov
inc
add
add
or
pop
jge
les
test
push
clc
xor
mov
add
mov
int3
addb
fnstcw
cmp
cmp
jp
out
add
and
aad
inc
fdivr
dec
mov
add
stc
loopne
mov
add
arpl
in
jno
add
mov
xor
ffreep
add
pop
mov
jbe
imul
add
mov
add
mov
out
addb
cld
and
mov
sub
fidivrs
adc
repz
dec
pop
inc
add
add
loopne
mov
ljmp
xor
add
mov
cmp
dec
pop
ds
add
add
add
mov
add
mov
nop
add
dec
les
in
mov
push
clc
cmc
andl
out
repz
dec
cmp
add
jg
jge
int3
adc
add
mov
pusha
add
add
mov
push
add
jle
push
add
mov
mov
add
ss
push
adc
dec
pop
jl
popf
cmp
test
xor
pop
cmp
clc
push
cmp
imul
and
or
push
lret
fldcw
icebp
and
sub
xchg
and
mov
ja
mov
push
mov
mov
in
es
add
adc
shrl
adc
pop
cli
jb
mov
mov
add
lock
add
mov
add
lods
movsl
fisttpl
add
in
push
cmp
mov
inc
jo
mov
pop
insl
testb
imull
mov
add
subl
cmpsb
test
movsl
inc
sub
add
pop
sbb
es
push
outsl
lds
mov
pop
movsl
xchg
add
mov
inc
fldenv
cmpl
mulb
mov
or
xchg
mov
out
inc
cmp
repnz
add
add
dec
push
cwtl
fstl
add
mov
in
in
in
pop
icebp
pusha
add
stos
ja
add
stc
lret
mov
loop
mov
jbe
add
inc
add
cmpsl
loopne
mov
add
ficoms
xchg
lods
cld
neg
inc
cmovge
std
sbb
push
lock
mov
dec
push
jns
cmpsl
sub
stc
mov
xchg
add
addb
adc
cmp
add
add
inc
mov
xlat
fwait
inc
add
push
or
jmp
mov
mov
rolb
mov
fstpt
push
movsl
mov
outsb
in
cmc
addr16
in
aaa
cmp
add
lcall
call
jl
cmp
out
cld
divb
pop
inc
sar
cmp
add
mov
adc
mov
cmp
int
jl
iret
es
push
cmp
add
mov
nop
add
int3
mov
nop
add
mov
mov
aaa
test
inc
add
loopne
mov
ds
fldl
inc
add
loopne
mov
xor
imul
sahf
rolb
mov
add
xor
mov
pusha
add
lret
add
lods
push
movsb
add
fbld
sbb
cmpsb
repz
cltd
xchg
mov
or
movsb
in
jo
mov
push
add
add
sti
add
add
cs
push
lods
sub
ds
xor
dec
aas
lds
roll
add
adc
mov
lds
lock
push
call
mov
ss
push
add
add
xor
push
xor
add
dec
pushf
call
mov
sub
mov
es
adc
ljmp
js
add
cmc
imul
add
xchg
push
lahf
cltd
mov
in
xchg
add
sub
add
call
leave
push
add
add
mov
mov
lods
lcall
icebp
lods
pop
cli
mov
and
cmp
sub
mov
mov
add
mov
in
mov
mov
aam
push
xor
imul
ja
nop
add
mov
xchg
sbb
cmp
or
pop
push
js
scas
sbb
dec
jle
inc
fwait
in
fldl
aaa
ret
adc
aad
cmp
mov
add
call
push
add
pop
mov
test
add
pop
or
cmp
rolb
lcall
test
add
cmpsl
or
pop
mov
rolb
addr16
ret
outsl
add
mov
add
imul
insl
les
mov
push
repz
xor
outsb
mov
xchg
add
add
xor
mov
xchg
cmp
in
mov
mov
loop
mov
mov
cli
and
and
mov
ds
je
adc
xchg
movsl
shll
loope
or
imul
xlat
stos
jae
sbb
jle
test
add
dec
or
and
mov
fldt
jb
mov
lret
mov
xchg
inc
lahf
push
inc
add
mov
xchg
ud0
xlat
xlat
ret
mov
loop
mov
dec
adc
mov
mov
and
mov
mov
dec
outsl
jmp
mov
mov
popa
insb
je
ds
clc
dec
std
dec
jae
xchg
inc
pop
inc
inc
add
xchg
dec
sub
in
pushf
pop
mov
arpl
add
sbb
add
add
rcrl
ds
lret
mov
and
sti
mov
popf
rcll
add
add
lods
ljmp
inc
add
add
mov
call
add
push
call
adc
push
mov
xchg
adc
mov
mov
add
inc
xchg
mov
push
pop
js
or
adc
mov
adc
ficoml
mov
nop
add
cs
xor
clc
mov
testb
add
rcrl
arpl
or
scas
frstor
insb
jecxz
add
jno
add
adc
aad
mov
mov
int
cli
sub
outsb
imul
add
into
push
mov
xor
add
adc
add
mov
rcr
inc
cltd
shl
add
add
mov
fistpl
stos
mov
ljmp
ds
xchg
adc
add
sbb
jne
xchg
jecxz
sahf
arpl
mov
jle
add
sbb
rolb
mov
add
arpl
sbb
mov
mov
xor
mov
sbb
add
imul
push
xchg
ds
xchg
add
or
or
addr16
sahf
scas
adc
mov
push
mov
cmpl
inc
add
pop
cmp
mov
lea
mov
xchg
or
jl
fisubrs
push
stos
jae
test
mov
lea
fldcw
dec
call
aaa
lds
sub
imul
add
pop
pcmpgtb
imul
mov
mov
scas
fstps
adc
mov
in
xchg
mov
sahf
sbb
sahf
add
mov
sbb
scas
movsb
insl
fwait
lock
mov
dec
jmp
sbb
inc
add
je
cmpsb
mov
push
push
inc
mov
flds
xchg
rolb
cmp
arpl
addb
push
icebp
imul
add
insl
les
mov
add
loope
jl
fiadds
lods
into
pop
andl
jp
jnp
div
add
negl
popf
mov
mov
mov
cmpsl
mov
mov
dec
cmp
mov
imul
jge
mov
sub
stos
push
add
jecxz
add
fiaddl
push
inc
jge
dec
pop
or
fs
test
jecxz
pop
push
mov
add
outsb
iret
outsb
sti
iret
mov
loopne
mov
pop
and
fldl
cmp
lods
push
test
std
scas
repnz
repnz
xlat
test
scas
push
add
mov
dec
sbb
add
pop
xchg
rolb
mov
stos
aas
ljmp
loope
mov
adc
lcall
xchg
ja
out
mov
int
jbe
ret
scas
pop
lods
add
leave
push
lds
pushl
sbb
add
and
mov
daa
insb
dec
jle
cmp
add
cmpsb
sub
lret
scas
fnstcw
and
mov
repz
lods
movsl
ficoml
inc
sbb
inc
out
dec
shl
add
adc
mov
in
mov
add
je
adc
mov
cmpsb
add
mov
test
mov
add
lea
mov
mov
lea
mov
mov
fsubrs
imul
cmc
addr16
mov
lahf
aam
and
add
xor
mov
add
jbe
add
sbb
mov
or
add
repnz
std
push
jge
inc
add
fsubl
mov
add
mov
inc
add
lret
jmp
adc
mov
xor
mov
imul
xorl
enter
mov
repnz
add
out
ja
jp
ljmp
add
jmp
add
pop
push
popa
rolb
mov
jo
mov
pusha
add
dec
jecxz
ret
cmp
addb
or
add
scas
xor
mov
add
out
fdivrs
cmpsb
or
mov
out
dec
into
cmp
enter
gs
fwait
jne
mov
sub
add
fwait
scas
xor
mov
in
xor
push
arpl
sbb
jno
stos
call
mov
test
add
add
mov
add
rolb
mov
lds
mov
andl
jbe
xor
mov
dec
sahf
dec
rolb
mov
icebp
addb
dec
lahf
lds
mov
outsl
mov
xchg
inc
add
cmp
sbb
nop
add
or
in
out
or
push
cmc
pop
mov
pop
test
dec
xor
ja
add
xchg
ja
xor
jl
mov
lods
xchg
std
xchg
mov
mov
jecxz
jno
popa
pop
fsubrs
jmp
mov
add
push
cmp
cmp
inc
imull
pop
std
inc
and
add
repz
mov
mov
stos
test
roll
add
xor
pop
mov
adc
mov
repz
lahf
jl
loop
mov
add
mov
test
pop
shll
mov
and
addb
dec
movsl
pop
sbb
data16
je
add
dec
push
scas
cmp
add
xchg
or
mov
lcall
mov
mov
sub
inc
add
mov
bound
mov
icebp
es
dec
xchg
sbb
and
mov
add
mov
stc
addb
xor
scas
mov
push
add
push
test
cmp
pop
mov
insb
sbb
add
test
jl
cld
adc
mov
mov
xchg
add
cmc
push
imul
or
lahf
mov
jg
leave
dec
cmp
or
jmp
and
mov
mov
add
adc
add
mov
add
ds
xchg
out
xchg
add
pusha
add
rolb
mov
mov
mov
add
lret
pop
mov
push
xor
mov
or
out
mov
xchg
add
jmp
add
xor
mov
fmul
xor
mov
int
add
aaa
je
dec
mov
mov
jbe
in
pop
jle
pop
dec
push
or
xor
mov
rolb
in
gs
add
repnz
push
cmp
out
add
xor
mov
add
daa
jle
dec
and
repnz
je
enter
jae
inc
rolb
mov
mov
mov
mov
cs
jmp
inc
add
outsb
mov
and
mov
cltd
cli
out
bound
mov
je
cmp
mov
add
push
sub
cmp
mov
add
add
mov
mov
xchg
jecxz
sahf
test
sbb
jge
adc
mov
addr16
inc
movsl
test
mov
mov
xchg
cwtl
es
or
mov
mov
ja
dec
and
inc
insb
lahf
addb
mov
les
xchg
loopne
mov
add
add
mov
add
ss
lea
mov
leave
xchg
gs
out
repnz
xchg
jg
xor
mov
or
xchg
rolb
sub
mov
hlt
gs
inc
and
pop
push
stos
xor
mov
dec
and
push
enter
sbb
jp
addb
sar
loop
mov
push
cwtl
and
add
mov
mov
mov
sbb
xor
mov
sti
sbb
xor
add
or
mov
inc
pop
jge
xchg
add
cld
mov
jl
jbe
xchg
add
sub
xor
sbb
aaa
sbb
cwtl
cmpsl
jle
lods
lret
mov
out
ljmp
lods
sub
or
mov
mov
data16
into
jg
addb
push
loop
mov
jecxz
popa
jbe
cmpsl
stos
aam
ret
inc
jb
mov
mov
add
mull
push
add
bound
mov
dec
pop
cmp
adc
mov
ja
jmp
add
lea
add
lahf
add
mov
add
mov
pushf
pop
mov
test
pop
dec
mov
aas
test
iret
push
test
mov
push
sbb
pop
out
icebp
enter
cmp
mov
dec
stc
jp
adc
mov
add
or
hlt
adc
sub
add
or
mov
nop
add
leave
and
mov
dec
cmp
xorl
inc
jle
push
scas
jp
add
cld
aad
xchg
dec
xchg
mov
dec
xor
add
decl
flds
mov
cld
sub
adc
mov
add
xor
mov
nop
add
add
inc
add
add
cmp
mov
xor
ret
lds
jo
mov
out
int
lods
xchg
jge
ret
out
mov
mov
repnz
or
outsl
rolb
mov
outsb
hlt
push
leave
outsb
gs
mov
hlt
inc
sub
add
aam
add
mov
rolb
in
inc
add
mov
imul
jns
add
or
flds
fsubr
xchg
push
pop
mov
call
push
mov
in
xor
mov
scas
shll
mov
add
cmp
dec
fisttpll
sbb
cld
mov
sti
mulb
hlt
sbb
ljmp
pop
outsb
roll
mov
mov
inc
loopne
mov
jmp
fdiv
cmpsl
roll
add
inc
jns
add
add
rcrl
imul
jo
mov
aaa
adc
jns
pop
mov
mov
in
repz
mov
pop
or
xchg
rolb
cwtl
test
push
mov
bound
mov
out
cmp
gs
adc
mov
pop
je
jmp
mov
sti
fistl
mov
or
cltd
add
std
lock
cmpl
cltd
movsb
dec
jae
cmpl
xchg
repnz
scas
sti
mov
adc
mov
dec
stc
dec
jmp
pop
cmp
test
jp
cmp
pusha
add
daa
xor
mov
sub
dec
xchg
mov
pop
rcrl
add
sub
inc
cmp
mov
adc
add
addb
popa
sbb
gs
add
or
mov
add
add
in
test
movsl
jns
push
add
les
mov
aam
add
lods
sbb
aad
gs
add
pop
jns
loope
les
sti
or
pop
mov
and
jns
add
inc
add
adc
jb
mov
mov
add
add
stos
test
adc
mov
aaa
fisubl
sahf
pop
cmp
mov
mov
andl
mov
dec
sti
jnp
cmp
sub
insb
dec
mov
repz
add
outsl
jo
mov
adc
add
pop
mov
add
xor
mov
mov
mov
dec
jnp
faddl
and
mov
xor
mov
mov
add
fldcw
mov
add
mov
xchg
mov
mov
or
inc
xchg
addb
clc
adc
add
jp
and
mov
pop
push
lods
adc
add
ret
mov
jg
sub
xchg
clc
out
dec
stos
xor
mov
push
nop
add
push
xor
or
add
jo
mov
sbb
mov
bound
mov
push
fs
paddq
lock
dec
scas
adc
dec
push
dec
mov
adc
push
add
add
add
into
sub
in
jnp
add
test
loop
mov
or
enter
fcmovbe
fdivrp
lret
inc
fildll
mov
and
cs
mov
mov
mov
loopne
mov
lods
add
data16
mov
add
and
and
mov
push
addb
movsl
fdivrl
stos
scas
movsb
cmpsl
dec
jp
and
jl
add
sbb
add
push
add
test
cs
dec
cmpsl
lods
mov
fidivrs
add
mov
add
in
mov
int3
mov
jp
add
mov
rcll
sahf
fnstenv
out
xchg
jecxz
add
add
hlt
cltd
sub
test
mov
js
jg
outsl
sub
imul
shll
add
mov
mov
lahf
jb
mov
fwait
and
mov
repz
jbe
or
test
repz
sbb
ss
xlat
pop
call
pop
push
add
add
cmpsl
sbb
sti
mov
pop
es
les
mov
or
lret
loop
mov
stc
push
adc
add
hlt
rolb
push
add
int
gs
loope
jno
jg
pop
and
add
cli
mov
loop
mov
mov
adc
xlat
adc
mov
arpl
cmp
add
mov
cmc
fimuls
add
fists
add
jg
mov
mov
add
mov
insb
jb
mov
sbb
mov
mov
cmp
mov
mov
sbb
add
cld
aam
mov
aad
add
sti
cmpsl
or
xchg
je
insl
mov
and
mov
add
mov
jp
cmp
jo
mov
push
adc
mov
lcall
jmp
pop
pop
fucomip
inc
sub
push
sub
rol
lods
lret
mov
icebp
jge
cs
pusha
add
xchg
pusha
add
xchg
mov
or
pop
sub
or
ret
sbb
jge
pop
ret
mov
add
test
adc
loope
fisubrl
pop
dec
pop
leave
test
in
xor
jae
outsb
mov
cmpsl
pop
mov
xor
mov
xor
adc
ret
mov
add
add
push
rolb
scas
inc
add
into
jnp
add
enter
mov
xchg
movsl
add
lock
add
add
push
xlat
dec
shrl
add
add
sbb
dec
lods
in
mov
gs
cmp
addb
cmpsl
popa
addl
add
cmc
fs
mul
xor
mov
movsl
xchg
add
add
mov
sahf
movb
mov
mov
add
xchg
xchg
test
hlt
addb
mul
add
hlt
leave
pop
xlat
push
out
mov
inc
jecxz
sbb
sub
insl
dec
jnp
push
inc
jne
ljmp
xchg
xor
jg
and
mov
push
add
mov
aam
sub
out
enter
test
lock
mov
sbb
ret
ss
and
or
jmp
cmpsl
mov
mov
fs
pop
jmp
repnz
dec
cmp
shll
xchg
add
mov
add
out
add
cmp
add
cli
pop
mov
mov
sub
out
int3
test
outsl
push
out
scas
gs
xchg
pop
shrl
repnz
cwtl
out
xchg
add
pop
sub
incl
add
pusha
add
mov
sub
cs
cmpsl
in
pop
push
js
inc
mov
jp
dec
xchg
rolb
mov
push
gs
fstpt
jmp
and
add
fistpl
cmp
pop
iret
jbe
push
mov
outsb
jmp
sub
js
jb
mov
cmp
mov
insb
xor
push
pop
xchg
xchg
sbb
mov
pushf
in
inc
mov
lret
add
test
inc
mov
addr16
cwtl
pop
inc
add
fdecstp
in
and
mov
or
mov
mov
xchg
enter
nop
add
mov
pusha
add
decb
pop
loope
lea
add
mov
out
pusha
add
pop
fcomp
cmc
daa
mov
mov
mov
out
add
mov
dec
std
adc
mov
std
out
scas
jnp
mov
push
push
add
mov
add
add
xor
mov
xor
push
push
call
mov
pop
xor
test
data16
inc
addr16
add
add
mov
push
mov
mov
xor
jns
xchg
sub
sbb
push
pop
mov
inc
mov
sbb
mov
xor
mov
scas
in
fcoml
add
mov
add
add
add
add
sbb
imul
addb
mov
out
jb
mov
dec
mov
jmp
adc
jnp
dec
adc
mov
pop
popf
popf
fs
sbb
push
pop
xor
add
mov
add
inc
xor
or
add
aaa
in
loope
mov
mov
arpl
sub
pop
add
mov
add
dec
dec
adc
add
add
add
enter
inc
mov
jl
jecxz
scas
subl
popa
jne
jcxz
out
add
add
add
mov
add
fcmovnb
add
sbb
mov
pop
rcll
loop
mov
dec
test
stc
sub
stos
push
jnp
push
rolb
jl
jmp
aam
push
popf
daa
fldt
adc
mov
sbb
test
add
mov
add
jns
bound
mov
push
repz
stos
jle
add
cmp
mov
add
out
or
pushf
cmp
inc
xlat
mov
or
mov
mov
mov
cltd
inc
jl
add
loope
add
add
mov
cmp
jbe
fdivrl
lcall
and
add
mov
aam
xchg
pop
jb
mov
add
xchg
shrl
ja
std
cmc
adc
addb
sti
mov
mov
mov
sbb
pushf
jmp
outsl
clc
fsubrl
xlat
push
mov
mov
test
sub
pop
mov
inc
add
add
test
sbb
add
add
lds
mov
dec
cltd
fistl
repnz
lret
and
xor
out
lret
lret
add
out
cmp
xlat
or
lahf
inc
push
daa
sti
jb
mov
inc
add
lods
inc
clc
mov
mov
xchg
add
pop
pop
xor
mov
push
add
cli
jmp
xor
mov
add
cmp
mov
cmp
cld
mov
add
in
mov
inc
sbb
or
pop
mov
cmpsl
es
imul
dec
or
and
mov
mov
mov
insl
add
mov
mov
leave
ds
add
add
mov
mov
aad
add
mov
xchg
addr16
jnp
mov
arpl
inc
fwait
es
ret
jbe
std
mov
add
sbb
rolb
mov
outsb
mov
mov
xor
cmp
shrl
mov
push
xor
mov
dec
pop
lds
add
jge
add
mov
add
add
jmp
or
fmull
jmp
mov
imul
mov
cmp
add
add
inc
add
in
nop
leave
jmp
add
pushl
push
mov
xchg
ret
cmp
add
add
push
mov
xchg
ret
dec
add
add
push
vmovlpd
mov
sar
nop
nop
cld
jae
dec
add
add
test
add
push
mov
xchg
ret
daa
lea
mov
into
add
clc
repnz
nop
cld
jae
add
add
adc
add
clc
repnz
nop
cld
jae
add
add
and
mov
repnz
nop
cld
jae
add
dec
out
jl
flds
into
call
clc
repnz
nop
cld
jae
popa
xor
out
add
clc
repnz
nop
cld
jae
movsb
add
add
repnz
nop
cld
jae
lea
mov
mov
add
adc
mov
add
jae
clc
repnz
nop
cld
jae
jl
test
xchg
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
xchg
add
add
frstor
xor
add
clc
repnz
nop
cld
jae
mov
jne
mov
repnz
nop
cld
jae
mov
add
add
and
enter
clc
repnz
nop
cld
jae
add
add
adc
or
nop
cld
jae
js
dec
add
enter
pop
push
mov
xchg
ret
add
add
cmp
add
push
push
mov
xchg
ret
stos
add
mov
add
add
repnz
nop
cld
jae
daa
xchg
add
jb
push
mov
nop
leave
jmp
lock
dec
push
push
mov
nop
leave
jmp
fxch
loop
add
mov
push
mov
xchg
ret
add
inc
lea
push
add
insb
mov
clc
repnz
nop
cld
jae
cmp
add
pop
push
push
mov
nop
leave
jmp
out
mov
mov
xchg
push
add
in
nop
leave
jmp
add
mov
add
sub
mov
xchg
ret
enter
add
add
lret
xchg
mov
mov
push
mov
xchg
ret
add
inc
mov
mov
adc
add
push
push
mov
xchg
ret
lock
cld
out
negl
inc
add
add
add
add
int3
push
push
mov
xchg
ret
fmul
add
les
sbb
mov
xchg
ret
pop
js
movsb
sub
decl
test
std
clc
repnz
nop
cld
jae
add
sub
mov
xchg
ret
sub
add
add
addb
flds
nop
cld
jae
pop
xor
and
add
push
mov
nop
leave
jmp
add
push
inc
mov
lds
sub
add
push
mov
nop
leave
jmp
add
add
add
xor
mov
mov
push
mov
nop
leave
jmp
out
add
lds
jmp
add
add
out
fadds
add
inc
add
ret
rep
clc
repnz
nop
cld
jae
add
enter
cmp
clc
repnz
nop
cld
jae
add
pop
add
sbb
add
clc
repnz
nop
cld
jae
lea
add
nop
nop
cld
jae
js
add
cmp
out
add
nop
leave
jmp
push
add
lea
mov
nop
leave
jmp
rolb
xchg
add
out
add
jo
mov
repnz
nop
cld
jae
add
out
add
add
jl
clc
repnz
nop
cld
jae
add
add
popa
add
repnz
nop
cld
jae
lcall
mov
repnz
nop
cld
jae
adc
and
mov
push
clc
repnz
nop
cld
jae
rclb
movsb
popa
lcall
push
mov
xchg
ret
add
add
add
nop
nop
cld
jae
rolb
popa
lea
flds
jns
clc
repnz
nop
cld
jae
add
loop
sub
movzwl
clc
repnz
nop
cld
jae
mov
add
xor
push
clc
repnz
nop
cld
jae
cmp
add
mov
mov
clc
repnz
nop
cld
jae
add
test
mov
je
clc
repnz
nop
cld
jae
add
in
add
clc
repnz
nop
cld
jae
lret
adc
add
add
ljmp
jae
inc
mov
movsb
cmp
ja
fs
repnz
nop
cld
jae
add
add
addb
fists
repnz
nop
cld
jae
popa
add
push
inc
adc
cmp
sbb
add
cmp
test
dec
add
dec
xor
clc
repnz
nop
cld
jae
loop
pop
enter
push
aad
mov
clc
repnz
nop
cld
jae
add
add
inc
add
clc
repnz
nop
cld
jae
adc
mov
inc
push
nop
cld
jae
add
lret
add
lcall
ja
cmp
nop
nop
cld
jae
add
add
ds
jmp
add
lcall
mov
sarb
arpl
and
clc
repnz
nop
cld
jae
test
mov
or
nop
nop
cld
jae
movsb
push
xor
arpl
add
jae
inc
add
add
add
add
add
push
mov
nop
leave
jmp
add
add
int3
pop
clc
repnz
nop
cld
jae
adc
enter
add
add
nop
nop
cld
jae
add
adc
pop
out
add
pop
push
mov
xchg
ret
enter
and
push
clc
repnz
nop
cld
jae
lcall
inc
cwtl
je
push
mov
nop
leave
jmp
sarb
push
add
repnz
nop
cld
jae
add
rorl
add
add
clc
repnz
nop
cld
jae
movsb
add
push
clc
repnz
nop
cld
jae
adc
mov
popa
mov
testl
enter
lea
test
ret
dec
movswl
clc
repnz
nop
cld
jae
and
add
arpl
nop
leave
jmp
push
add
movsb
loop
dec
popf
into
push
clc
repnz
nop
cld
jae
add
fld
add
add
aad
inc
add
add
sub
ret
pop
test
push
mov
nop
leave
jmp
lea
stos
popa
mov
sub
movsb
clc
repnz
nop
cld
jae
add
enter
test
push
mov
add
add
add
inc
add
add
add
mov
add
in
nop
leave
jmp
add
mov
repnz
nop
cld
jae
jl
js
into
rep
push
mov
nop
leave
jmp
movsb
add
add
dec
add
push
mov
nop
leave
jmp
test
mov
aaa
mov
mov
add
add
push
mov
xchg
ret
add
xor
add
inc
add
push
mov
nop
leave
jmp
pop
add
add
pop
add
xor
jmp
add
cld
rcrb
push
xor
lock
add
mov
xchg
repnz
nop
cld
jae
and
mov
nop
cld
jae
cld
out
add
jo
mov
add
clc
repnz
nop
cld
jae
xor
add
je
clc
repnz
nop
cld
jae
stos
add
outsl
mov
clc
repnz
nop
cld
jae
add
add
push
add
mov
xchg
ret
lea
sub
mov
loopne
clc
repnz
nop
cld
jae
add
ljmp
clc
repnz
nop
cld
jae
add
add
add
and
add
add
repnz
nop
cld
jae
add
add
add
insl
mov
clc
repnz
nop
cld
jae
popa
add
push
dec
push
clc
repnz
nop
cld
jae
sub
add
bound
mov
clc
repnz
nop
cld
jae
push
add
add
ret
fsubrl
push
mov
xchg
ret
mov
xchg
out
rolb
mov
push
clc
repnz
nop
cld
jae
add
movsb
ljmp
mov
xchg
ret
add
popa
popa
add
mov
clc
repnz
nop
cld
jae
add
cmp
dec
cmp
out
add
pop
lcall
add
xor
xchg
push
add
xor
add
clc
repnz
nop
cld
jae
mov
or
repnz
nop
cld
jae
add
js
add
jb
add
push
mov
nop
leave
jmp
xor
add
mov
clc
repnz
nop
cld
jae
lds
add
clc
repnz
nop
cld
jae
cmp
add
add
clc
repnz
nop
cld
jae
popa
add
out
scas
mov
push
mov
nop
leave
jmp
sub
pop
sub
in
nop
leave
jmp
add
add
flds
pop
mov
inc
adc
jnp
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
add
add
lcall
insl
inc
clc
repnz
nop
cld
jae
add
add
lea
ljmp
add
push
mov
nop
leave
jmp
add
test
push
push
mov
xchg
ret
lret
lret
add
add
add
popa
jmp
clc
repnz
nop
cld
jae
out
pop
add
cld
out
mov
push
xor
mov
xchg
ret
lock
cmp
repnz
repnz
nop
cld
jae
enter
inc
adc
jg
clc
repnz
nop
cld
jae
mov
add
add
pop
or
mov
add
repnz
nop
cld
jae
pop
stos
add
add
pusha
add
clc
repnz
nop
cld
jae
add
mov
out
out
add
rclb
jg
inc
add
stos
xor
daa
loop
rep
push
mov
xchg
ret
add
pop
add
push
stos
add
nop
nop
cld
jae
lock
lea
add
repnz
nop
cld
jae
add
add
sub
push
mov
xchg
ret
add
add
add
mov
add
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
push
add
fnstcw
push
push
mov
nop
leave
jmp
push
push
add
enter
clc
repnz
nop
cld
jae
add
in
test
push
mov
nop
leave
jmp
pop
lock
add
flds
rcrl
movb
add
clc
repnz
nop
cld
jae
add
sub
mov
in
nop
leave
jmp
xchg
add
sub
pop
push
mov
nop
leave
jmp
pop
add
add
add
push
mov
cli
and
mov
cwtl
cmp
add
ret
mov
push
lret
add
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
fnstcw
add
sbb
jle
clc
repnz
nop
cld
jae
add
sar
pusha
clc
repnz
nop
cld
jae
add
add
jg
add
clc
repnz
nop
cld
jae
push
add
ljmp
ljmp
nop
leave
jmp
add
xchg
sub
add
pop
mov
clc
repnz
nop
cld
jae
inc
add
add
push
mov
nop
leave
jmp
test
add
add
and
fucomi
inc
add
adc
add
sti
sub
cli
clc
repnz
nop
cld
jae
add
mov
add
adc
mov
nop
leave
jmp
add
add
rcll
add
add
fsubs
add
add
add
push
push
mov
xchg
ret
add
add
daa
inc
mov
nop
nop
cld
jae
add
add
lret
clc
repnz
nop
cld
jae
adc
add
ljmp
mov
nop
leave
jmp
add
cmp
pop
add
push
mov
nop
leave
jmp
cmp
add
add
jno
fsubrl
sub
repnz
nop
cld
jae
add
and
mov
in
nop
leave
jmp
fnstenv
sub
addb
xor
push
mov
xchg
ret
mov
add
push
push
mov
nop
leave
jmp
add
add
add
test
adc
ljmp
iret
inc
add
add
add
sub
add
nop
nop
cld
jae
add
add
cmp
cld
jae
rol
clc
repnz
nop
cld
jae
mov
add
ret
mov
dec
add
loop
inc
add
stos
adc
add
add
shll
push
js
dec
add
mov
nop
leave
jmp
add
add
add
add
add
repnz
nop
cld
jae
shr
dec
mov
add
mov
sahf
and
add
add
lock
inc
add
cmp
sub
add
repnz
nop
cld
jae
add
add
fisttpl
nop
nop
cld
jae
add
lock
enter
mov
mov
clc
repnz
nop
cld
jae
and
add
push
push
mov
xchg
ret
add
add
cmp
cs
insb
push
mov
nop
leave
jmp
mov
loop
ljmp
clc
repnz
nop
cld
jae
rolb
add
repnz
nop
cld
jae
adc
add
add
xor
or
rclb
nop
leave
jmp
popa
and
add
ljmp
nop
nop
cld
jae
test
add
mov
mov
xchg
ret
jl
test
jno
test
add
push
mov
nop
leave
jmp
popa
lret
sub
xchg
xor
jae
out
add
or
clc
repnz
nop
cld
jae
lea
mov
aam
mov
clc
repnz
nop
cld
jae
xor
data16
mov
clc
repnz
nop
cld
jae
inc
add
and
je
jmp
mov
add
adc
add
lea
mov
addr16
pop
clc
repnz
nop
cld
jae
and
cmp
add
add
push
push
mov
nop
leave
jmp
inc
xor
sti
add
mov
mov
mov
add
add
jmp
add
sar
xor
mov
clc
repnz
nop
cld
jae
add
inc
popl
dec
cmp
repnz
nop
cld
jae
add
pusha
add
or
add
repnz
nop
cld
jae
inc
xchg
add
xor
xor
push
mov
xchg
ret
enter
push
inc
add
add
andl
nop
cld
jae
adc
add
pop
sub
mov
xchg
ret
daa
add
add
sub
dec
sub
pop
faddl
xchg
ret
xchg
push
add
pop
out
jbe
mov
clc
repnz
nop
cld
jae
add
add
fistpl
mov
nop
leave
jmp
enter
inc
ljmp
sar
repnz
nop
cld
jae
add
loop
add
push
add
push
mov
xchg
ret
sub
add
loop
add
add
sbb
inc
add
xchg
lock
add
popf
cmp
nop
leave
jmp
out
popa
add
popf
add
mov
insb
hlt
add
daa
add
clc
ds
add
scas
cwtl
add
out
mov
clc
repnz
nop
cld
jae
lcall
add
clc
repnz
nop
cld
jae
fsubs
out
add
repnz
nop
cld
jae
sub
sub
pop
rcrl
add
push
mov
xchg
ret
add
add
add
fdivrp
repnz
nop
cld
jae
popf
add
popf
add
xor
je
clc
repnz
nop
cld
jae
add
and
add
mov
xchg
ret
test
cld
add
mov
push
mov
nop
leave
jmp
add
js
add
outsb
add
clc
repnz
nop
cld
jae
cmp
add
add
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
add
cmp
add
inc
outsl
sub
clc
repnz
nop
cld
jae
pop
inc
add
push
jnp
nop
nop
cld
jae
popa
ret
add
test
clc
repnz
nop
cld
jae
inc
popa
pop
popa
lret
lds
add
add
mov
repnz
nop
cld
jae
flds
and
mov
nop
nop
cld
jae
stos
enter
add
mov
add
repnz
nop
cld
jae
add
mov
sub
repnz
nop
cld
jae
add
cmp
add
das
lea
clc
repnz
nop
cld
jae
add
add
cmp
nop
nop
cld
jae
add
add
test
je
mov
push
mov
nop
leave
jmp
mov
add
inc
std
jmp
add
enter
fmuls
enter
cmpw
push
mov
nop
leave
jmp
add
sub
ret
push
mov
xchg
ret
add
add
xchg
lock
mov
add
in
mov
push
mov
xchg
ret
lock
test
mov
push
mov
xchg
ret
add
add
enter
or
nop
nop
cld
jae
cmp
in
add
clc
repnz
nop
cld
jae
lock
add
cld
lahf
add
clc
repnz
nop
cld
jae
add
xchg
add
and
mov
clc
repnz
nop
cld
jae
adc
lea
mov
and
mov
test
or
nop
nop
cld
jae
mov
cld
jge
outsb
and
mov
xchg
ret
xchg
and
add
add
mov
enter
decl
out
add
add
dec
add
les
repnz
nop
cld
jae
mov
add
jp
inc
add
lea
add
add
inc
add
insl
mov
clc
repnz
nop
cld
jae
cmp
imul
addl
add
add
mov
xchg
ret
add
popf
add
jge
clc
repnz
nop
cld
jae
add
add
dec
adc
or
inc
add
mov
sub
repz
mov
jmp
sti
flds
sti
cmp
dec
add
mov
fmull
test
pop
add
clc
repnz
nop
cld
jae
mov
add
pop
jne
clc
repnz
nop
cld
jae
add
push
cmpsl
push
dec
mov
clc
repnz
nop
cld
jae
add
stos
add
add
mov
clc
repnz
nop
cld
jae
push
add
add
movsb
sub
push
mov
nop
leave
jmp
add
lret
add
xchg
sub
push
pop
cmpsb
mov
mov
xchg
ret
inc
add
add
adc
add
add
repnz
nop
cld
jae
add
jl
sub
push
addr16
shr
push
mov
xchg
ret
lock
adc
push
mov
xchg
ret
lock
add
jmp
repnz
nop
cld
jae
add
cmp
test
out
call
in
nop
leave
jmp
mov
add
mov
clc
repnz
nop
cld
jae
rclb
mov
clc
repnz
nop
cld
jae
push
enter
add
push
mov
nop
leave
jmp
add
add
js
add
add
and
rolb
mov
push
mov
xchg
ret
xor
add
add
cmpsb
fldenv
xor
add
push
mov
nop
leave
jmp
add
mov
push
mov
xchg
ret
add
adc
xchg
pop
mov
clc
repnz
nop
cld
jae
adc
add
add
shll
push
mov
nop
leave
jmp
add
mov
mov
jg
push
mov
xchg
ret
add
cmp
add
add
pop
clc
repnz
nop
cld
jae
add
dec
out
test
sub
mov
add
push
mov
nop
leave
jmp
ret
popa
xor
lock
shr
clc
repnz
nop
cld
jae
add
sub
add
ret
xchg
popa
add
mov
xchg
ret
xchg
inc
mov
and
mov
push
clc
repnz
nop
cld
jae
add
add
add
pop
lret
xor
imul
in
nop
leave
jmp
add
add
add
add
nop
leave
jmp
lds
daa
add
add
lcall
clc
fiadds
xchg
ret
add
and
add
clc
repnz
nop
cld
jae
add
add
sti
sub
mov
nop
leave
jmp
add
stos
dec
cmp
test
dec
clc
dec
inc
clc
repnz
nop
cld
jae
sub
ss
repnz
nop
cld
jae
push
add
add
popa
inc
sbb
repnz
nop
cld
jae
mov
sub
add
clc
repnz
nop
cld
jae
add
mov
push
mov
add
subl
add
add
add
add
push
push
mov
xchg
ret
pop
adc
mov
add
inc
je
mov
push
mov
nop
leave
jmp
add
mov
add
inc
mov
in
add
out
add
mov
mov
add
dec
or
mov
xchg
ret
stos
add
icebp
test
mov
push
mov
nop
leave
jmp
add
add
add
lea
push
mov
nop
leave
jmp
add
add
mov
jl
rclb
insb
repz
add
add
add
pop
add
dec
mov
push
mov
xchg
ret
cmp
cmp
cmp
add
clc
repnz
nop
cld
jae
add
push
js
add
add
repnz
nop
cld
jae
cmp
add
add
pop
fadds
xchg
ret
push
add
add
push
rolb
mov
push
clc
repnz
nop
cld
jae
mov
js
add
add
enter
in
nop
leave
jmp
popa
pop
fcoms
pop
sub
push
mov
xchg
ret
add
popa
jl
inc
cmp
aad
pop
mov
enter
nop
cld
jae
xor
out
xchg
add
out
pop
clc
repnz
nop
cld
jae
add
sti
out
add
mov
mov
push
mov
xchg
ret
add
xchg
pop
pop
push
mov
nop
leave
jmp
add
add
add
add
mov
xchg
ret
add
add
mov
dec
xor
clc
repnz
nop
cld
jae
push
add
lds
repnz
nop
cld
jae
lcall
jmp
mov
xchg
ret
add
add
add
pop
push
add
add
repnz
nop
cld
jae
mov
mov
inc
mov
addb
in
add
push
jl
pop
push
mov
add
add
jbe
add
jmp
add
add
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
fadds
pop
sbbl
adc
add
in
nop
leave
jmp
cld
add
mov
je
clc
repnz
nop
cld
jae
push
lock
call
clc
repnz
nop
cld
jae
adc
shrb
push
mov
xchg
ret
push
js
mov
xchg
add
push
clc
repnz
nop
cld
jae
inc
daa
adc
sti
and
push
mov
xchg
ret
ror
mov
das
ret
add
add
popa
adc
lret
xchg
popa
add
enter
lret
push
mov
nop
leave
jmp
mov
add
add
add
mov
mov
xchg
ret
add
add
pop
test
mov
clc
repnz
nop
cld
jae
inc
add
stos
pusha
add
lcall
sbb
mov
and
push
mov
xchg
ret
mov
add
push
shrl
push
mov
nop
leave
jmp
enter
add
sub
push
faddl
xchg
ret
out
add
add
lea
dec
or
repnz
nop
cld
jae
inc
xchg
movsb
out
add
mov
clc
repnz
nop
cld
jae
lds
add
sti
add
mov
lea
clc
repnz
nop
cld
jae
add
stos
popf
add
sub
jne
clc
repnz
nop
cld
jae
mov
inc
mov
push
mov
xchg
ret
adc
and
repz
add
clc
repnz
nop
cld
jae
test
add
add
mov
mov
push
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
out
stos
out
add
rep
push
mov
xchg
ret
lea
adc
add
sub
clc
repnz
nop
cld
jae
add
add
add
cmp
push
mov
xchg
ret
test
test
add
clc
repnz
nop
cld
jae
cmp
repnz
add
clc
repnz
nop
cld
jae
pop
loop
lds
mov
popa
jno
add
push
push
mov
nop
leave
jmp
lcall
mov
sbb
mov
nop
leave
jmp
add
sub
add
mov
sub
xabort
nop
nop
cld
jae
lret
add
dec
sti
cmp
xor
std
icebp
clc
repnz
nop
cld
jae
test
mov
clc
repnz
nop
cld
jae
movsb
pop
int
repz
repnz
nop
cld
jae
ljmp
inc
add
push
mov
xchg
ret
sub
inc
add
je
clc
repnz
nop
cld
jae
push
popa
out
xor
add
add
repnz
nop
cld
jae
stos
add
add
in
nop
leave
jmp
xor
add
rolb
adc
add
xchg
mov
mov
push
push
mov
xchg
ret
inc
stos
pop
lea
cmp
push
mov
xchg
ret
dec
add
add
rcrb
dec
pop
push
mov
xchg
ret
add
xor
add
cmpw
push
mov
nop
leave
jmp
lds
add
add
mov
fucomip
clc
repnz
nop
cld
jae
add
icebp
cltd
mov
push
mov
xchg
ret
add
add
pop
je
push
mov
nop
leave
jmp
add
add
push
hlt
adcl
sbb
add
push
mov
nop
leave
jmp
add
push
notl
mov
xchg
ret
add
add
popa
add
mov
push
mov
xchg
ret
add
enter
add
mov
nop
leave
jmp
push
add
daa
lock
cmp
repnz
nop
cld
jae
mov
add
cs
clc
repnz
nop
cld
jae
mov
mov
add
add
test
clc
repnz
nop
cld
jae
add
add
xor
mov
add
imul
cld
jae
ljmp
clc
repnz
nop
cld
jae
add
push
push
add
sub
mov
xchg
ret
pop
add
sub
lock
add
lea
sub
add
add
ret
inc
cwtl
stos
clc
repnz
nop
cld
jae
add
mov
xor
add
mov
push
mov
xchg
ret
add
add
js
mov
mov
in
nop
leave
jmp
push
add
add
add
mov
xchg
ret
adc
add
mov
mov
xchg
ret
mov
xchg
add
add
push
mov
xchg
ret
add
add
add
jne
mov
clc
repnz
nop
cld
jae
sub
add
add
test
push
mov
mov
add
add
add
outsl
xchg
cli
add
ljmp
add
xor
add
jmp
test
or
add
in
nop
leave
jmp
mov
add
add
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
cmp
iret
lods
clc
repnz
nop
cld
jae
out
add
mov
add
jecxz
add
nop
nop
cld
jae
sub
xor
das
push
push
mov
nop
leave
jmp
add
enter
flds
test
in
nop
leave
jmp
add
add
out
popf
sub
clc
repnz
nop
cld
jae
add
shlb
xor
pusha
clc
repnz
nop
cld
jae
and
sub
add
clc
repnz
nop
cld
jae
add
add
add
dec
dec
clc
repnz
nop
cld
jae
mov
fadds
mov
add
clc
repnz
nop
cld
jae
add
add
add
add
in
nop
leave
jmp
fcoms
adc
add
insl
call
clc
repnz
nop
cld
jae
add
xchg
pop
xchg
mov
mov
xchg
ret
popf
add
cmp
test
call
in
nop
leave
jmp
add
add
add
repnz
nop
cld
jae
push
add
adc
lcall
add
push
mov
xchg
ret
add
add
add
inc
add
clc
repnz
nop
cld
jae
add
sub
add
ret
insb
add
clc
repnz
nop
cld
jae
enter
add
add
add
xor
push
mov
xchg
ret
adc
add
add
add
clc
repnz
nop
cld
jae
mov
mov
add
add
in
nop
leave
jmp
add
add
repnz
nop
cld
jae
add
push
add
out
add
mov
clc
repnz
nop
cld
jae
add
push
test
mov
clc
repnz
nop
cld
jae
add
sti
rclb
mov
nop
leave
jmp
inc
push
xor
ljmp
dec
adc
ret
jmp
and
cmp
lock
add
test
add
lahf
sub
push
mov
nop
leave
jmp
test
add
test
clc
repnz
nop
cld
jae
xor
fadds
sti
add
ret
mov
push
mov
nop
leave
jmp
and
push
sub
cmpsl
mov
push
mov
xchg
ret
add
add
xchg
sub
out
inc
add
push
push
add
enter
jns
xchg
cmpl
cld
jae
add
add
int
popa
add
repnz
nop
cld
jae
mov
ret
add
nop
nop
cld
jae
popa
mov
popa
cwtl
test
push
mov
nop
leave
jmp
add
jl
xor
add
sbb
jmp
cld
jae
add
add
add
stc
imul
clc
repnz
nop
cld
jae
pop
mov
jl
popa
pop
popa
push
mov
xchg
ret
popa
xor
mov
stos
mov
push
clc
repnz
nop
cld
jae
enter
add
lcall
repnz
nop
cld
jae
dec
add
add
add
push
push
mov
xchg
ret
add
add
add
test
mov
clc
repnz
nop
cld
jae
add
pop
dec
xor
js
in
mov
clc
repnz
nop
cld
jae
lds
mov
sub
test
in
clc
repnz
nop
cld
jae
add
lds
jecxz
add
add
add
cmp
mov
mov
clc
repnz
nop
cld
jae
add
test
jmp
add
repnz
nop
cld
jae
add
inc
daa
popa
dec
call
push
mov
xchg
ret
enter
xchg
add
movl
nop
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
ljmp
mov
in
nop
leave
jmp
add
stos
add
add
push
mov
xchg
ret
jl
mov
dec
add
add
or
lcall
ret
mov
mov
fadds
add
push
push
mov
nop
leave
jmp
lea
lea
lds
add
dec
add
push
mov
xchg
ret
add
mov
lea
mov
push
mov
nop
leave
jmp
add
mov
jg
jns
add
in
nop
leave
jmp
add
mov
std
movzwl
clc
repnz
nop
cld
jae
popa
add
add
jle
mov
andb
push
xor
ljmp
add
add
push
inc
push
adc
clc
repnz
nop
cld
jae
add
cmp
sub
sub
add
add
popa
js
loop
inc
mov
add
and
clc
repnz
nop
cld
jae
lcall
hlt
cmp
add
add
repnz
nop
cld
jae
add
push
flds
xchg
ret
add
add
add
dec
cmp
js
push
mov
nop
leave
jmp
add
add
sbb
or
push
mov
nop
leave
jmp
mov
add
add
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
add
add
cld
add
dec
add
clc
repnz
nop
cld
jae
add
cmp
nop
leave
jmp
lea
mov
sub
into
movzwl
push
mov
xchg
ret
pop
test
popa
mov
mov
add
add
repnz
nop
cld
jae
xchg
add
jne
push
mov
nop
leave
jmp
cmp
popa
add
mov
xchg
ret
rolb
stos
add
test
mov
mov
push
mov
xchg
ret
popa
add
add
add
add
clc
repnz
nop
cld
jae
add
lcall
jae
add
stos
add
xorl
clc
repnz
nop
cld
jae
mov
out
xchg
jae
popa
add
pop
mov
push
mov
xchg
ret
mov
cmp
ret
push
mov
xchg
ret
lock
add
popa
clc
repnz
nop
cld
jae
add
mov
out
add
add
pop
push
mov
xchg
ret
enter
add
popf
rclb
clc
repnz
nop
cld
jae
add
fstps
add
add
clc
repnz
nop
cld
jae
add
out
add
dec
pop
push
mov
xchg
ret
popf
mov
sti
popf
ror
pop
clc
repnz
nop
cld
jae
ret
add
add
sbb
inc
sub
repnz
nop
cld
jae
add
add
stos
daa
mov
add
add
or
pop
add
sbb
and
and
mov
clc
repnz
nop
cld
jae
add
add
in
add
add
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
push
mov
add
xor
clc
repnz
nop
cld
jae
stos
ljmp
mov
push
mov
nop
leave
jmp
out
add
add
icebp
or
nop
cld
jae
jl
add
add
shrl
repnz
nop
cld
jae
add
test
out
mov
clc
repnz
nop
cld
jae
add
pop
mov
push
mov
xchg
ret
adc
xor
enter
sti
add
push
mov
nop
leave
jmp
add
popa
add
pop
add
push
clc
repnz
nop
cld
jae
add
popa
popa
sti
add
push
insl
les
clc
repnz
nop
cld
jae
lock
or
repnz
nop
cld
jae
popa
add
add
addb
jmp
push
mov
xchg
ret
ret
inc
out
add
adc
mov
clc
repnz
nop
cld
jae
add
inc
lcall
nop
cld
jae
add
add
xchg
add
test
repnz
nop
cld
jae
add
pop
jmp
add
add
add
lock
xor
addb
jge
clc
repnz
nop
cld
jae
add
add
push
lret
daa
lds
xor
jmp
add
add
adc
add
add
sti
add
repnz
nop
cld
jae
lcall
mov
cmp
push
mov
nop
leave
jmp
add
add
add
repz
repnz
nop
cld
jae
out
jl
enter
pop
mov
clc
repnz
nop
cld
jae
add
call
nop
nop
cld
jae
add
add
lock
mov
xchg
ret
stos
sub
sub
push
repnz
nop
cld
jae
sub
add
push
add
in
nop
leave
jmp
add
enter
js
xchg
fists
adc
inc
add
pop
loop
inc
add
push
mov
xchg
ret
add
add
add
adc
add
pop
call
in
nop
leave
jmp
movsb
add
mov
clc
repnz
nop
cld
jae
mov
out
sub
lcall
popa
add
add
cmp
add
aas
not
push
mov
xchg
ret
add
out
add
cmp
add
push
mov
nop
leave
jmp
add
popf
ljmp
out
push
push
mov
nop
leave
jmp
ret
xor
stos
add
call
clc
repnz
nop
cld
jae
push
add
int
clc
push
mov
xchg
ret
lcall
movsb
mov
push
mov
xchg
ret
add
add
rolb
fcomps
mov
xchg
ret
cld
mov
add
jge
rclb
flds
xchg
ret
add
js
iret
push
clc
repnz
nop
cld
jae
stos
enter
ret
in
mov
clc
repnz
nop
cld
jae
mov
addb
stos
push
clc
repnz
nop
cld
jae
add
add
lea
dec
jne
push
mov
nop
leave
jmp
add
test
clc
repnz
nop
cld
jae
add
mov
xchg
ret
test
popa
add
jbe
xor
clc
repnz
nop
cld
jae
out
add
aaa
or
call
faddp
inc
add
add
adc
add
nop
nop
cld
jae
lds
lea
gs
add
push
mov
nop
leave
jmp
add
add
daa
xchg
push
out
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
sub
add
add
add
sbb
repnz
nop
cld
jae
add
and
add
repz
mov
xchg
ret
add
movsb
add
mov
add
fsts
pop
add
fstps
aas
adc
in
nop
leave
jmp
add
lea
add
js
repnz
nop
cld
jae
sti
add
enter
jl
and
mov
inc
add
ljmp
jne
push
mov
xchg
ret
ljmp
jb
mov
sar
nop
nop
cld
jae
popa
daa
sti
add
int3
jmp
add
test
add
mov
mov
lea
clc
repnz
nop
cld
jae
add
lock
pop
push
mov
nop
leave
jmp
add
add
add
mov
nop
leave
jmp
mov
jl
pop
pop
mov
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
lea
add
mov
loope
clc
repnz
nop
cld
jae
ret
sub
inc
clc
repnz
nop
cld
jae
sub
stos
pop
dec
movswl
clc
repnz
nop
cld
jae
add
add
add
mov
movzwl
clc
repnz
nop
cld
jae
add
mov
add
mov
clc
repnz
nop
cld
jae
add
add
cld
push
mov
mov
add
add
ja
adc
popa
popa
pop
xchg
push
mov
nop
leave
jmp
adc
lea
pop
add
mov
dec
or
in
nop
leave
jmp
add
sub
mov
jne
clc
repnz
nop
cld
jae
fldcw
xor
push
mov
nop
leave
jmp
mov
mov
dec
dec
push
mov
xchg
ret
add
push
add
icebp
cmpsb
stc
add
push
mov
xchg
ret
movsb
push
add
sub
mov
clc
repnz
nop
cld
jae
pop
fdivrs
xor
clc
repnz
nop
cld
jae
add
add
or
nop
leave
jmp
add
in
add
in
push
mov
xchg
ret
add
fadds
lcall
and
clc
repnz
nop
cld
jae
sub
shll
add
mov
xchg
ret
add
mov
add
jge
clc
repnz
nop
cld
jae
lcall
push
mov
jo
add
scas
mov
add
sub
sti
clc
repnz
nop
cld
jae
add
mov
ffree
clc
repnz
nop
cld
jae
daa
xchg
popa
add
add
add
push
mov
xchg
ret
loop
xchg
add
sub
add
sbb
repnz
nop
cld
jae
xor
add
pop
rep
push
mov
xchg
ret
loop
add
add
lret
clc
repnz
nop
cld
jae
mov
push
sti
jne
in
dec
push
mov
nop
leave
jmp
add
test
lds
add
add
clc
repnz
nop
cld
jae
lds
add
or
mov
nop
leave
jmp
add
add
sub
clc
repnz
nop
cld
jae
pop
add
stos
xor
ljmp
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
add
add
add
lret
clc
repnz
nop
cld
jae
push
add
movsb
lcall
pop
jae
mov
js
add
test
rclb
jne
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
stos
sti
add
rolb
je
pop
push
mov
nop
leave
jmp
mov
mov
mov
call
clc
repnz
nop
cld
jae
add
add
sub
inc
add
add
add
add
pop
clc
repnz
nop
cld
jae
popa
add
lea
loop
mov
in
nop
leave
jmp
loop
add
add
add
ret
sbb
cld
jae
add
add
in
push
push
mov
xchg
ret
ljmp
add
ret
lret
xchg
clc
repnz
nop
cld
jae
test
add
add
add
clc
repnz
nop
cld
jae
add
test
in
nop
leave
jmp
cmp
add
add
add
pop
mov
clc
repnz
nop
cld
jae
add
daa
add
add
test
lock
clc
repnz
nop
cld
jae
lret
mov
sub
popa
push
mov
nop
leave
jmp
add
mov
lds
clc
repnz
nop
cld
jae
mov
add
daa
mov
mov
add
clc
repnz
nop
cld
jae
add
ljmp
subl
jae
mov
push
clc
repnz
nop
cld
jae
push
lds
add
add
adcb
nop
leave
jmp
xor
adc
dec
pop
push
mov
xchg
ret
xor
add
add
add
sbb
repnz
nop
cld
jae
popa
and
sar
nop
nop
cld
jae
and
add
cmp
ss
std
roll
xchg
ret
enter
add
xchg
add
mov
in
nop
leave
jmp
cld
add
pop
popa
js
scas
je
jmp
incl
add
mov
mov
add
push
mov
nop
leave
jmp
push
add
add
add
je
shr
clc
repnz
nop
cld
jae
xchg
push
add
push
inc
cs
push
mov
nop
leave
jmp
out
ret
add
mov
je
clc
repnz
nop
cld
jae
pop
add
cmp
push
mov
nop
leave
jmp
jl
add
enter
lds
clc
repnz
nop
cld
jae
fcomps
add
pop
push
mov
xchg
ret
movsb
fsts
add
aas
push
mov
mov
and
pop
xor
ret
cltd
js
add
adc
mov
add
stc
xor
add
mov
pop
mov
popa
mov
scas
pop
xchg
imul
addb
inc
mov
jo
mov
rcll
mov
daa
mov
mov
ret
cmc
jl
adc
pop
addr16
mov
int3
ja
shrl
psubb
add
mov
xchg
push
out
sbb
add
mov
mov
add
sbb
aad
repnz
clc
mov
mov
fsts
push
or
jmp
add
add
add
sti
rolb
mov
lret
or
jne
mov
add
and
lret
stos
add
mov
add
add
xor
ljmp
push
fxch
adc
mov
cmp
notl
mov
mov
add
rolb
mov
mov
add
add
xchg
pop
addb
rolb
mov
mov
mov
movsl
aas
pushf
or
fbld
mov
mov
scas
xlat
or
adc
mov
inc
add
mov
sub
repz
push
adc
mov
mov
dec
cmp
mov
les
loope
ret
pop
dec
cmpsl
mov
sbb
xchg
add
add
sub
mov
lret
inc
sub
cmpsl
cltd
and
add
mov
push
xor
mov
push
popa
pop
in
mov
inc
sti
mov
scas
inc
or
add
iret
bound
mov
fs
sbb
adc
mov
pop
mov
add
andl
mov
xchg
das
xchg
or
jbe
add
inc
movd
in
mov
bound
mov
jae
adc
mov
movsb
scas
xchg
add
mov
jp
add
cltd
push
add
in
jae
add
fstpt
add
mov
sbb
push
out
lods
loope
add
mov
mov
xor
mov
add
add
cs
fsubrl
pop
sbb
inc
pop
jp
dec
icebp
inc
add
pushf
cmp
in
lods
ficompl
ds
pop
push
push
adc
sub
push
pusha
add
mov
lret
or
jo
mov
loop
mov
mov
sub
in
lds
mov
cmp
add
cmp
cli
or
aad
inc
push
push
add
jb
mov
hlt
and
xchg
xlat
sbb
hlt
movsb
and
mov
pop
clc
xor
xchg
out
addb
fisubrl
fcoml
add
lret
arpl
sbb
ljmp
sub
movsb
pop
rolb
mov
dec
xchg
add
xchg
popf
push
nop
add
mov
pusha
add
into
lret
outsl
sbb
lahf
mov
add
add
jge
pop
or
aad
xor
inc
out
bound
mov
mov
mov
jp
popa
mov
mov
test
add
add
mov
or
cmpsb
rolb
hlt
push
addb
inc
add
xchg
fmull
jo
mov
decb
fnsave
lods
add
in
fisubrl
dec
je
scas
sahf
push
jecxz
and
add
inc
adc
outsl
or
mov
inc
jle
pop
add
push
jns
test
add
ss
ja
xchg
or
fisttps
add
add
sbb
lods
dec
mov
mov
add
mov
pushf
push
add
pop
lock
repnz
daa
pop
or
add
ja
mov
mov
out
das
xchg
xchg
mov
mov
mov
adc
and
or
dec
jge
and
mov
mov
add
cmp
inc
dec
push
xlat
cmpsl
sub
add
cld
ret
lret
xchg
add
in
lret
mov
adc
mov
mov
mov
ffreep
pushl
xor
push
add
add
popa
repz
sub
add
adc
pop
pop
mov
mov
mov
mov
mov
xchg
adc
jbe
idiv
imul
xor
mov
mov
push
add
add
adc
and
mov
rolb
add
rorl
cmc
imul
cmp
rolb
mov
fistpll
mov
push
leave
xor
testl
mov
scas
adc
mov
mov
mov
fwait
rol
add
into
jecxz
add
lret
sbb
divl
jb
mov
cs
mov
add
movsb
ss
mov
mov
jnp
cmp
sbb
dec
xor
setne
add
push
andl
loop
mov
add
std
scas
add
mov
jl
gs
data16
nop
add
mov
incw
in
shll
mov
mov
jo
mov
scas
jecxz
das
fidivrl
inc
mov
jne
imul
push
xor
jle
mov
cmp
push
ret
into
out
into
scas
fstp
pop
xchg
xchg
add
xchg
call
jmp
xor
mov
add
sbb
mov
fadds
insb
cmpsl
pop
fstpl
cmc
push
fs
stos
out
add
pop
mov
inc
xchg
jb
mov
or
add
push
jg
pop
jge
jno
lock
imul
int3
pop
mov
push
inc
push
fs
dec
out
dec
and
fcomps
rolb
mov
xchg
mov
add
mov
insb
pushf
jb
mov
mov
add
mov
jb
mov
insl
imul
inc
add
add
inc
add
add
or
mov
arpl
aas
sahf
fcompl
rolb
mov
mov
ret
and
mov
cmp
addb
cli
sub
add
int
imul
rolb
jge
add
test
jmp
jge
je
xchg
push
or
jnp
xchg
add
mov
js
inc
popf
xlat
sub
repz
mov
push
out
jns
mov
jb
mov
pusha
add
mov
fcomps
mov
xor
mov
icebp
sbb
cmp
neg
or
popa
mov
popf
and
hlt
mov
mov
and
mov
xchg
test
dec
mov
cmp
cmpsl
cltd
sub
mov
test
enter
loope
stos
push
outsb
dec
fmul
in
mov
daa
je
jae
fidivrs
jnp
adc
mov
inc
cltd
enter
or
mov
xchg
je
push
or
add
pop
ds
add
add
ja
mov
mov
add
adc
add
mov
mov
daa
pusha
add
scas
insb
mov
sbb
xchg
push
inc
andl
inc
int
add
push
int
mov
mov
add
addb
mov
add
pop
pop
mov
mov
and
mov
push
add
inc
out
loop
mov
mov
cmp
mov
frstor
mov
in
rcll
sbb
es
dec
repnz
cmpsl
clc
pop
push
or
loope
ss
sbb
lret
cli
hlt
pop
fisubs
jle
add
jb
mov
or
add
mov
and
xchg
movsb
in
jecxz
add
mov
add
fldl
insb
mov
add
mov
into
out
adc
and
mov
ss
push
add
jb
mov
mov
int3
cli
movsb
bound
mov
lds
data16
divl
add
insb
lcall
bound
mov
sbb
jnp
dec
xchg
mov
dec
fisubs
add
add
je
jno
add
and
adc
add
xorl
and
and
mov
stos
jae
add
add
addr16
dec
adc
mov
rolb
mov
aaa
popf
adc
mov
jg
out
pop
jge
addb
into
push
add
add
jb
mov
add
frstor
sub
loop
mov
sbb
cli
jle
fdivrs
gs
test
inc
popf
pop
xor
add
push
bound
mov
int3
push
push
out
mov
xor
fs
rcll
mov
nop
add
inc
adc
push
adc
add
mov
mov
or
stos
out
mov
mov
push
mov
mov
call
and
pop
or
pop
xchg
in
add
jmp
xchg
mov
sbb
jb
mov
int3
sub
push
pop
jnp
and
mov
add
lods
jg
xchg
lret
add
add
dec
add
mov
dec
leave
lahf
call
add
aam
mov
mov
inc
sti
adc
mov
adc
add
jnp
into
sahf
mov
mov
aam
ss
std
or
dec
test
push
push
stc
rcl
mov
loopne
mov
add
enter
pop
pop
sahf
cwtl
mov
ja
add
mov
add
insl
ljmp
add
mov
add
cwtl
lret
bound
mov
stos
inc
inc
push
add
add
jne
lea
or
gs
pop
xor
mov
movb
xor
mov
rolb
mov
mov
cltd
add
pop
pop
mov
mov
pop
add
pop
sti
repz
sbb
mov
mov
fldcw
repz
cmp
std
out
adc
add
xor
xor
mov
ds
add
mov
xchg
xchg
addb
cmc
add
mov
xor
add
mov
sar
pop
xchg
sub
out
std
push
add
gs
inc
dec
repz
push
add
test
xchg
pop
addb
mov
filds
add
dec
test
add
fcmove
shrd
push
insb
cmp
push
and
cwtl
pop
sbb
gs
inc
mov
mov
loop
mov
push
add
inc
popf
jmp
add
adc
mov
aas
mov
in
outsb
sub
pop
mov
addr16
pop
cwtl
sbb
or
mov
jl
sbb
addb
fbstp
test
add
jg
pushf
sbb
lods
sahf
rolb
mov
sbb
mov
imul
test
dec
iret
lock
divps
cmpsl
add
mov
mov
inc
add
fiadds
or
mov
xor
mov
pop
lcall
inc
pminsw
stc
sbb
dec
jbe
inc
mov
icebp
int
jge
mov
rolb
mov
lahf
pop
lahf
in
push
sub
mov
mov
sub
mov
dec
jnp
out
add
addb
pusha
add
or
fwait
mov
in
sbb
cmp
rcll
cmp
mov
push
mov
cmc
mov
repz
push
sahf
jecxz
and
mov
jecxz
and
mov
mov
add
repz
sti
loopne
mov
sub
sub
mov
out
pop
jle
in
lock
cli
or
cmpsb
inc
add
hlt
jl
sub
inc
add
add
sbb
and
test
push
mov
cmc
mov
mov
popa
and
hlt
rcll
leave
outsb
int
out
sub
jo
mov
xlat
ja
xchg
iret
mov
dec
dec
sub
enter
scas
idiv
das
push
add
int
xchg
dec
sbb
testl
fidivs
jl
add
mov
insl
jp
inc
pop
int
loope
mov
in
aad
add
mov
xchg
add
mov
call
mov
dec
cwtl
pop
push
push
pop
mov
mov
sbb
rolb
mov
ret
sbb
add
and
rolb
dec
stc
mov
sub
mov
lods
dec
fisttpll
xor
mov
add
dec
cld
ds
inc
aaa
cli
enter
mov
dec
insb
sub
negb
push
add
jl
ret
pop
rcrl
add
mov
sbb
mov
add
mov
mov
adc
lock
leave
js
addb
insb
loop
mov
into
cmp
pop
dec
xchg
or
dec
das
sahf
mov
pop
dec
jg
mov
sub
ja
pop
jmp
adc
mov
data16
xchg
mov
pop
rolb
fadds
sub
or
push
add
or
mov
sub
je
add
sbb
loop
mov
arpl
data16
test
mov
add
xor
stos
ja
mov
xchg
inc
addb
jle
dec
mov
dec
sti
dec
fsub
mov
mov
out
push
push
movsb
push
sub
jno
insl
movsl
xchg
add
inc
pop
push
fisubl
mov
or
and
sti
std
call
xchg
and
mov
das
jne
lahf
ss
push
push
fs
sbb
add
cmp
add
out
jecxz
xchg
jmp
jne
add
xor
gs
add
or
repz
mov
insb
inc
add
add
push
cld
cmpsl
inc
mov
rolb
mov
pop
rol
add
sbb
mov
mov
push
into
adc
fdivp
add
dec
dec
push
adc
pushl
mov
mov
lea
jo
mov
xchg
add
mov
add
in
cmc
imul
mov
mov
das
ret
mov
bound
mov
in
in
out
xor
in
jl
fnstenv
cmc
cmp
or
inc
add
icebp
lods
push
inc
add
jb
mov
dec
jb
mov
aas
popa
lds
xor
push
pop
daa
inc
cmp
adc
mov
fistpll
push
lods
sub
sbb
jnp
stos
or
add
scas
dec
insb
stos
data16
mov
addb
inc
repz
mov
rolb
mov
movsb
ja
movb
sub
inc
cmp
mov
out
popf
inc
cmp
add
mov
dec
dec
pop
ljmp
or
outsb
ja
add
pop
or
mov
arpl
cli
xor
mov
add
js
xchg
rorl
jo
mov
push
add
push
pop
push
add
mov
and
mov
in
push
add
inc
and
mov
sti
jecxz
out
mov
sub
cmp
push
mov
push
inc
add
in
push
jo
mov
xchg
dec
sbb
stos
push
test
mov
lock
fwait
mov
mov
sub
sbb
add
cltd
out
adc
mov
lret
adc
inc
sub
add
jmp
fldt
mov
mov
inc
push
addb
inc
xchg
aas
sub
jno
clc
cli
sub
pop
cs
sti
loop
mov
movsb
pop
push
out
mov
in
sub
mov
mov
lcall
scas
daa
xlat
inc
add
mov
mov
push
push
imul
xor
dec
test
gs
pop
xchg
mov
cmp
subl
sarl
ja
aas
imul
jmp
mov
mov
add
jnp
cs
add
xchg
sti
mov
fadd
push
adc
sbb
ficoml
add
in
pop
mov
lahf
sub
add
sti
hlt
and
inc
add
mov
ret
cmp
std
and
add
test
cmpsb
das
sti
insb
inc
inc
clc
jbe
add
movsb
mov
jl
out
push
or
sub
clc
and
mov
test
mov
mov
mov
adc
mov
sub
je
push
test
mov
in
aas
push
add
sbb
pop
iret
xlat
inc
xchg
add
cwtl
daa
and
jae
mov
add
mov
xchg
lcall
mov
addr16
adc
mov
dec
cmp
or
aam
add
mov
mov
mov
dec
mov
out
sbb
mov
insb
push
add
xchg
xchg
sbb
lods
in
ds
mov
inc
jg
add
xchg
pop
bound
mov
xchg
ljmp
mov
add
imul
ljmp
add
push
mov
add
pop
inc
add
ret
lahf
mov
repz
ljmp
loope
pusha
add
add
mov
ja
sub
adc
mov
mov
mov
addl
add
ret
dec
xchg
loope
add
add
movsb
pop
in
fistl
arpl
mov
lahf
imul
popf
dec
popa
out
dec
rolb
mov
test
jb
mov
daa
addb
push
js
push
lret
in
dec
push
cld
mov
mov
pop
push
and
std
int
push
add
and
mov
sbb
add
mov
mov
sbb
popl
push
add
cmp
addb
mov
xor
add
lret
mov
ficoms
clc
cltd
xor
movsb
mov
add
xlat
push
dec
mov
jl
dec
mov
or
add
out
out
jo
mov
or
add
mov
sub
xchg
lds
les
in
adc
or
scas
test
push
inc
sub
hlt
sub
add
add
leave
dec
xlat
or
mov
mov
scas
clc
pop
repz
add
jo
mov
add
fcmovbe
push
add
aam
outsl
push
dec
add
mov
aaa
sbb
mov
loop
mov
out
movsb
ret
inc
add
iret
nop
add
cmpsl
mov
cld
dec
insb
sbb
mov
jecxz
add
data16
cmc
insl
push
jmp
add
and
mov
add
adc
mov
rolb
mov
lcall
mov
xchg
add
dec
sbb
pop
pop
cmp
sar
mov
movsb
rolb
and
insb
fnstenv
add
in
sahf
or
jae
fadd
scas
mov
std
dec
and
mov
data16
test
mov
adc
mov
add
mov
adc
push
fsubrs
cmp
pushf
cmpsb
mov
mov
pop
mov
cmp
sub
xchg
mov
cmpsb
mov
add
sub
inc
mov
ret
and
xor
jle
adc
mov
and
mov
dec
lods
push
add
mov
add
mov
add
shll
inc
add
sbb
inc
pop
andl
hlt
addl
dec
mov
xor
mov
sbb
es
jns
xor
in
xor
rolb
mov
xchg
xchg
pop
sahf
cmp
jns
int
mov
pop
ss
mov
stos
rcl
outsb
popf
fsubr
mov
and
mov
mov
push
mov
sub
into
push
jne
add
push
repz
or
add
out
lods
push
add
pop
push
es
fwait
ljmp
add
cld
nop
add
fsubs
mov
mov
add
mov
add
jbe
cld
rolb
and
cmpsl
jno
add
push
add
cmp
add
fidivrs
xchg
sbb
lret
leave
test
pop
nop
add
and
add
xchg
xor
add
add
inc
sub
add
icebp
dec
loop
mov
sbb
sbb
add
dec
cmp
cmp
mov
mov
push
mov
rolb
mov
inc
xor
mov
sub
add
clc
test
mov
add
fwait
scas
jb
mov
mov
mov
stc
cld
pop
and
mov
mov
ss
inc
adc
in
scas
aas
mov
mov
xchg
add
push
test
ret
inc
das
and
mov
push
test
add
jle
mov
mov
and
ljmp
and
xchg
add
cmc
mov
cmp
adc
dec
dec
lock
and
xor
sub
movsb
mov
dec
jo
mov
push
ds
mov
lcall
add
push
cmc
shr
icebp
das
js
inc
add
add
xchg
sbb
push
test
enter
adc
sub
out
or
jmp
pushf
outsl
or
sub
add
sahf
lds
add
adc
mov
dec
pop
push
test
ds
loop
mov
arpl
push
add
sbb
in
ljmp
fwait
cli
rolb
mov
push
mov
add
out
add
rolb
mov
bound
mov
repz
mov
xor
mov
add
cmp
lods
out
cmp
xchg
xchg
data16
add
mov
inc
mov
add
add
or
rolb
mov
addb
lock
add
icebp
mov
mov
add
fcmovne
cmp
add
mov
jbe
cltd
jbe
into
or
fnstsw
pop
int
jge
mov
imul
lcall
xchg
loop
mov
sbb
mov
add
add
rolb
adc
mov
repnz
dec
outsb
jl
addb
xchg
add
movsb
pop
insb
add
add
push
pop
cs
xor
add
cltd
cmp
cmpsb
sbb
mov
add
fdivrp
cwtl
xchg
movsl
lods
bound
mov
inc
scas
mov
or
cmc
fs
lods
jg
mov
mov
pop
xchg
jmp
mov
mov
mov
xchg
popw
lcallw
notl
cld
mov
jp
jle
add
jecxz
je
mov
mov
add
mov
mov
mov
out
jno
mov
test
mov
mov
add
pusha
add
je
jecxz
add
jo
mov
aad
mov
add
inc
add
pop
jo
mov
lods
or
add
mov
mov
es
cs
iret
pmulhw
cmp
add
inc
add
xchg
push
mov
mov
mov
icebp
aam
sbb
lret
xchg
jbe
dec
xlat
stos
scas
mov
cltd
call
ret
fidivrl
add
cmp
les
dec
bound
mov
stc
jne
mov
pop
and
add
inc
add
in
loopne
mov
add
cmp
cmp
in
insb
movsb
inc
mov
loope
adc
mov
ds
jns
stos
mov
mov
pextrw
cmp
mov
adc
pop
pop
dec
jb
mov
out
lds
mov
dec
mov
mov
or
data16
iret
xchg
add
add
mov
jns
ficoml
addb
mov
in
push
push
mov
cs
adc
mov
add
lret
xchg
add
je
pop
clc
pop
jo
mov
in
mov
loope
mov
into
sti
jecxz
fwait
xchg
mov
pop
jb
mov
lods
and
add
mov
push
ret
pop
xchg
cwtl
rolb
mov
dec
dec
inc
adc
add
mov
lods
mov
cltd
lahf
cmp
mov
les
into
shll
cmpsb
out
add
ss
mov
and
and
mov
lock
movsl
add
add
xchg
pop
fisubl
jns
rolb
es
cmp
xor
mov
add
lods
mov
adc
mov
repnz
popa
adc
mov
fs
inc
add
aas
ja
movsl
fdiv
sahf
fisubrs
pushf
xchg
mov
push
add
mov
adc
repz
xor
in
in
jg
and
imul
and
mov
mov
xor
mov
mov
into
pop
pop
fwait
ret
iret
es
add
fdivl
gs
mov
xor
shll
add
popl
movsl
adc
das
into
testb
jo
mov
shrl
mov
mov
cmpsb
mov
add
mov
cld
xor
mov
iret
addb
repnz
mov
adc
subl
daa
push
xchg
mov
sti
dec
test
pop
pop
test
and
push
fmuls
outsb
outsb
xor
mov
jge
mov
insl
mov
add
fldenv
adc
add
push
jbe
push
sti
push
clc
or
nop
add
dec
jp
lret
dec
inc
or
mov
add
inc
add
mov
xchg
mov
inc
leave
xchg
test
push
add
pop
mov
pop
inc
and
jb
mov
sub
xadd
clc
jle
movsb
xor
adc
mov
fwait
add
mov
mov
jl
cs
outsl
aam
popf
xchg
and
mov
adc
mov
mov
mov
outsb
aad
test
decl
rolb
mov
jle
push
xor
sub
add
or
xor
mov
add
lods
jns
add
mov
add
cmp
dec
mov
add
mov
stos
sub
push
mov
inc
inc
lret
movsb
fcmovu
and
add
imul
xor
mov
test
add
mov
mov
add
test
xorl
pushf
mov
fbstp
mov
loope
push
cmpsb
pushf
lods
das
or
add
cmc
repnz
int
and
add
rolb
pop
mov
mov
lds
sub
stc
stc
xor
loope
xchg
dec
in
bound
mov
push
add
add
cmp
fdivrs
cmc
stos
mov
out
aas
mov
mov
adc
jno
inc
add
scas
aaa
lock
lods
jb
mov
jp
fwait
movsl
cli
addl
xchg
add
jae
dec
iret
fcompl
and
imul
int
pop
stos
xlat
add
add
pop
nop
add
add
repz
xchg
cmp
ret
jecxz
jmp
add
bound
mov
mov
mov
add
xlat
add
mov
sbb
je
jecxz
add
testl
addb
aas
add
mov
sub
lret
pmullw
inc
push
add
add
adc
add
jno
pop
test
mov
xchg
outsl
rolb
stos
fs
xchg
add
pusha
add
add
mov
xchg
out
iret
in
add
push
add
mov
add
mov
push
pusha
add
das
xor
mov
mov
xchg
dec
mov
push
call
ret
jb
mov
xchg
add
push
jno
mov
add
addb
daa
and
daa
test
mov
add
sti
stc
xor
mov
push
outsl
lret
adc
jno
cltd
xchg
or
mov
add
test
stc
or
dec
jmp
add
cmpsl
push
xchg
fldenv
jo
mov
cli
mov
addb
dec
add
leave
and
mov
mov
sub
mov
mov
popf
insl
lods
lret
sub
add
jnp
lea
in
call
add
mov
js
mov
push
adcl
lods
pop
adcl
xchg
add
add
or
add
push
add
outsb
cmp
mov
push
int
fisttpl
out
ja
add
xchg
mov
gs
jecxz
add
and
mov
mov
dec
cmp
inc
add
mov
add
mov
mov
ja
mov
mov
and
iret
rolb
aad
add
cmpl
scas
pusha
add
or
add
add
cld
and
lods
push
add
inc
add
xchg
clc
cmp
scas
mov
xchg
add
in
cwtl
loop
mov
sbb
stos
lea
add
addb
dec
sub
mov
mov
pop
or
add
mov
sub
fiadds
scas
sbb
add
add
test
add
add
add
test
dec
mov
add
push
jbe
sahf
pop
pop
iret
inc
add
mov
mov
cmp
push
js
rolb
mov
dec
out
cs
push
push
cmpsl
pop
fisttps
mov
mov
mov
inc
leave
dec
rolb
mov
pop
jne
test
js
out
inc
out
mov
js
test
push
dec
aaa
dec
and
mov
mov
lods
mov
test
ficoml
add
popa
addb
rol
rolb
mov
mov
sub
xor
out
pop
jmp
cmp
mov
divb
mov
pop
adc
add
bound
mov
add
mov
cmpsl
inc
stos
scas
mov
mov
add
add
enter
cmp
fmull
cmpsl
sbb
out
push
jae
mov
jb
mov
addr16
sub
mov
add
mov
repz
cmpsl
addb
cmp
mov
inc
out
das
inc
xchg
add
add
jmp
xor
mov
sbb
add
aam
adc
add
jle
in
dec
push
rolb
les
add
dec
push
sbb
icebp
pusha
add
push
pop
jne
xchg
fnsave
lahf
shr
push
test
xlat
outsb
in
ret
aaa
mov
sbb
lods
leave
into
adc
jo
mov
stos
rolb
mov
push
inc
inc
add
cli
test
mov
or
add
mov
mov
mov
and
mov
dec
into
scas
add
outsl
adc
decl
icebp
xchg
insb
jge
add
mov
stos
push
sbb
mov
mov
jne
jge
mov
ss
or
jbe
pop
cmp
add
roll
add
add
add
ret
dec
clc
lea
add
ljmp
xor
mov
add
inc
add
dec
enter
inc
and
sub
add
mov
mov
pop
test
jp
sbb
loope
add
or
jb
mov
in
add
add
add
add
nop
aad
inc
add
or
mov
pop
xchg
stos
mov
xchg
inc
and
mov
repz
add
das
shrl
leave
adc
aad
stos
inc
repz
loopne
mov
mov
dec
sbb
jmp
lcall
mov
mov
add
arpl
and
mov
cmp
jp
jmp
add
or
shrl
mov
mov
add
bound
mov
inc
stos
xchg
lods
repz
insl
addl
mov
mov
rolb
mov
adc
mov
mov
jp
clc
scas
dec
and
mov
add
adc
sbb
sti
mov
add
push
inc
push
sbb
insl
test
mov
enter
shl
je
int3
add
jne
adc
clc
lret
popa
xor
push
and
add
jl
add
adc
fwait
add
cwtl
cwtl
or
xchg
dec
mov
mov
mov
add
xchg
inc
test
mov
pop
xchg
add
mov
pop
fxch
inc
xchg
add
mov
movsl
arpl
mov
add
add
fdivr
fdivrl
rolb
mov
sbb
and
add
rolb
mov
loop
mov
scas
mov
xor
dec
xor
leave
or
dec
mov
mov
aaa
inc
insl
insb
bound
mov
mov
cmpsl
push
int
mov
add
imul
mov
xchg
pop
push
add
add
sub
and
hlt
scas
ret
leave
xor
dec
cmp
or
jbe
mov
cmpsl
jae
push
mov
out
and
mov
mov
add
mov
stos
fst
addr16
push
xor
push
nop
add
sub
sub
cs
xchg
rolb
mov
icebp
adc
mov
mov
rorl
popa
jge
lods
js
add
add
dec
inc
fs
add
mov
rol
cwtl
mov
add
mov
sub
and
jg
add
cmc
imul
add
add
mov
out
lcall
addr16
aaa
sub
add
push
addr16
add
add
add
lea
outsb
nop
add
es
cmpsb
cmp
stos
mov
add
rcrl
jo
mov
push
rolb
mov
insl
mov
and
add
nop
add
popf
xor
cwtl
mov
loop
mov
add
rolb
mov
dec
iret
fimull
movsl
int3
call
fadds
js
xlat
xchg
ret
mov
mov
lods
sub
fdivs
out
add
loop
mov
cmp
mov
add
mov
ret
push
outsl
gs
pop
arpl
mov
jp
xor
xorl
push
pusha
add
add
out
cmc
push
test
lahf
cmpsb
pop
cmp
jnp
jg
imul
popa
dec
mov
daa
imul
jno
lret
lret
addb
mov
xchg
cmp
xlat
adc
mov
arpl
data16
imul
add
int3
mov
mov
pop
cmp
data16
mov
mov
mov
out
ret
cmp
jo
mov
add
xchg
mov
mov
adcl
mov
imul
mov
or
mov
pop
jge
add
xchg
pop
lret
jae
add
cmp
stos
lahf
mov
cmp
in
mov
fbstp
rep
and
mov
jge
dec
fdecstp
je
hlt
cltd
gs
inc
add
mov
xchg
push
rolb
mov
add
rolb
and
les
add
push
lods
loop
mov
in
jle
add
loopne
mov
pushf
jecxz
add
sub
push
loopne
mov
push
rolb
push
adc
mov
sbb
mov
mov
mov
add
outsl
jae
add
lret
jo
mov
jmp
xor
mov
lods
push
cld
insl
stos
sti
cwtl
mov
mov
add
bound
mov
sub
repnz
push
add
add
movsl
pop
mov
mov
pop
jg
sahf
sbb
rolb
mov
pushf
inc
fdivp
add
fdivrl
aam
dec
hlt
mov
repnz
push
ret
jbe
mov
stos
xor
mov
add
mov
or
xor
jb
mov
adc
and
mov
add
sbb
icebp
add
cmpsl
pop
jo
mov
testb
sub
insb
mov
sbb
in
cmpsb
or
imul
mov
mov
mov
test
cmpl
sub
add
test
push
add
jnp
add
add
mov
in
cmp
test
repz
icebp
cltd
sub
fwait
mov
jbe
push
xor
popa
and
fdivrs
lret
sbb
jnp
out
ljmp
dec
mov
mov
mov
mov
dec
out
fstps
add
ja
adc
xlat
inc
inc
push
push
add
mov
inc
add
mov
add
loop
mov
push
mov
mov
xlat
mov
mov
stos
retw
lea
in
dec
mov
sub
imul
mov
cmp
call
mov
mov
sbb
mov
add
inc
jnp
addb
pop
adc
mov
outsb
add
add
add
adc
sub
xchg
cmovae
add
popa
jo
mov
mov
add
mov
push
mov
rolb
mov
mov
pop
jae
dec
or
add
mov
add
js
add
mov
mov
xor
cmpsb
dec
dec
lcall
mov
add
push
data16
jl
pop
dec
push
sbbl
pop
addb
mov
aas
divb
mov
aas
push
and
test
sbb
cmp
add
add
jmp
add
xlat
jne
dec
js
add
test
test
mov
mov
add
ss
sub
out
int
or
add
push
fbstp
xor
mov
jecxz
jo
mov
adc
mov
nop
add
mov
lods
or
mov
inc
add
add
mov
test
jmp
add
sbb
loop
mov
push
imul
mov
mov
inc
repnz
aas
js
add
mov
cmp
add
add
push
lods
push
dec
jmp
xchg
std
sbb
adc
mov
scas
pop
pushf
pop
jecxz
test
mov
mov
mov
add
mov
adc
mov
add
add
jo
mov
ja
fsubl
repnz
inc
add
inc
add
hlt
pop
jne
push
xchg
sub
inc
stos
adcl
add
xor
mov
inc
cmp
loope
add
outsb
inc
or
push
mov
rolb
mov
in
ja
mov
inc
test
inc
add
lret
push
jns
test
mov
add
mov
inc
dec
mov
add
out
xchg
clc
mov
mov
and
add
mov
aaa
cmpsb
popa
fnstsw
mov
mov
mov
movl
clc
lds
mov
add
mov
inc
sbb
call
out
lahf
subl
mov
add
add
jo
mov
inc
add
mov
or
add
jmp
pop
sub
mov
pop
mov
clc
push
sub
hlt
or
test
add
push
mov
cmpsl
test
rdpmc
out
iret
mov
dec
inc
movb
fmuls
jecxz
inc
add
fcmovbe
add
add
sbb
ret
adc
lods
mov
inc
add
inc
add
and
mov
inc
pop
mov
stos
lret
repz
les
int
clc
xorl
add
add
push
push
fistl
mov
add
rolb
and
ret
or
rolb
mov
and
mov
jnp
add
mov
jb
mov
add
mov
jl
jle
add
mov
sbb
daa
and
mov
xchg
dec
jmp
add
mov
push
jo
mov
mov
sub
aas
add
add
rolb
mov
add
scas
mov
xchg
test
adc
mov
xor
inc
or
push
int
pusha
add
dec
xchg
outsl
pop
clc
cmpsl
ss
sbb
in
pop
cmp
jg
lret
aam
sbb
xchg
cmpsl
nop
add
dec
pop
xchg
mov
jp
mov
and
mov
push
in
push
cmp
pop
inc
xchg
shrl
pop
sbb
test
aaa
push
addr16
mov
ja
repz
push
sbb
xor
hlt
cld
sub
inc
add
popf
leave
pusha
add
dec
fwait
mov
gs
mov
add
add
or
dec
pop
pop
push
stos
les
jle
sub
cmp
fnsetpm(287
rolb
adc
xchg
add
fwait
add
hlt
mov
add
mov
xor
sub
push
lods
mov
test
push
xor
mov
add
inc
add
out
arpl
pusha
add
jp
fdivrl
out
jno
pusha
add
add
dec
imul
mov
popa
push
cmpsl
adc
mov
add
pop
xlat
jg
outsl
push
cmp
or
stos
jne
or
push
pop
xor
mov
push
add
mov
push
fwait
movsb
lds
mov
arpl
int
ret
push
addb
sub
notb
pop
adc
mov
add
dec
sbb
fiadds
mov
xlat
adc
mov
fists
adc
sbb
xchg
mov
mov
mov
xlat
mov
pushl
add
add
sub
pusha
add
add
push
and
push
hlt
pop
int
ja
stos
daa
ficoms
jp
add
mov
adc
inc
add
mov
mov
add
mov
nop
add
mov
pop
or
aad
xchg
add
cli
pusha
add
cmp
add
mov
mov
mov
xor
inc
add
dec
add
add
xchg
cmp
xchg
add
pushw
or
lds
jnp
bound
mov
inc
push
int3
jne
ficoml
enter
outsb
push
mov
xor
cmp
mov
popa
rolb
mov
lahf
cmp
pop
push
cmp
lret
add
xlat
out
cmpsl
adc
pop
aaa
stos
lds
add
mov
mov
cld
fildll
and
mov
add
and
mov
fsubp
inc
arpl
mov
xchg
out
js
lods
dec
fs
and
mov
add
je
pop
popa
into
add
add
jbe
add
sub
clc
std
cli
enter
test
mov
mov
add
aaa
dec
fists
imull
push
add
add
aam
jae
mov
mov
pop
lret
push
js
popa
pop
dec
push
pusha
add
mov
and
mov
sbb
push
add
add
mov
add
mov
data16
insb
icebp
cwtl
das
inc
test
add
stos
mov
sbb
add
pop
push
inc
add
sbb
mov
rolb
mov
mov
or
add
jp
fcomp
test
sub
mov
xor
loop
mov
call
sbb
jnp
cltd
mov
mov
cmp
add
xchg
add
add
add
add
sub
roll
add
and
sub
jb
mov
cmp
and
mov
mov
mulb
gs
pop
push
out
push
inc
push
ret
push
mov
sbb
jg
ja
sub
add
enter
mov
adc
xchg
decb
add
ret
mov
sub
imul
xchg
mov
jmp
in
push
cmp
lcall
mov
jne
mov
xor
ret
scas
push
mov
mov
dec
rcll
mov
mov
push
add
add
out
repnz
push
hlt
fcomps
aam
dec
push
xchg
ds
pop
push
mov
add
pop
push
or
add
loop
mov
rolb
mov
or
mov
shll
repnz
push
std
add
mov
add
rcrl
xchg
mov
adc
dec
mov
cmp
jne
add
mov
mov
clc
movsb
adc
and
mov
sahf
out
add
mov
mov
lcall
push
dec
mov
mov
mov
adc
mov
push
cmpsb
in
or
hlt
push
push
add
mov
mov
rolb
mov
add
dec
push
inc
call
sub
add
sbb
push
push
jnp
xor
mov
pop
addr16
xchg
aad
into
hlt
push
add
sti
aaa
jns
addb
leave
call
es
insl
stos
ss
fldt
jne
addl
pop
hlt
mov
jp
gs
pop
xchg
inc
add
mov
push
jbe
jb
mov
inc
add
roll
or
add
les
cmpsb
xchg
mov
push
addb
push
xchg
jno
cmpsb
cmpsb
insl
adc
mov
dec
rolb
mov
addb
sub
inc
std
xor
add
xchg
add
add
xchg
add
cmpsl
push
mov
add
pop
dec
dec
push
in
jp
or
and
lahf
test
push
add
stos
xor
mov
mov
sub
addr16
add
out
iret
mov
mov
inc
lret
popa
insb
jns
jl
pop
push
cwtl
fwait
jle
jp
add
je
cmp
adc
mov
in
xchg
pop
out
xor
test
mov
inc
int3
add
mov
loop
mov
mov
push
call
ret
xor
xchg
imul
add
jb
mov
aad
sarl
push
push
add
cltd
xchg
lret
mov
roll
mov
pop
push
pop
add
roll
mov
fstpt
adc
mov
mov
add
mov
iret
push
orl
inc
add
mov
fs
neg
cltd
out
mov
xor
jge
push
shl
add
ret
in
jmp
jbe
xlat
test
push
mov
les
add
add
add
test
fwait
add
mov
push
imul
mov
popa
popf
or
popa
je
pusha
add
mov
jp
divl
jl
add
inc
push
mov
filds
add
mov
mov
lcall
int
pop
inc
arpl
push
xchg
lods
rolb
mov
jbe
out
int
loope
pusha
add
je
outsl
mov
rolb
sub
jle
push
or
enter
xrelease
jae
xorl
lcall
pop
cmpsb
mov
add
mov
add
out
test
sbb
xchg
cltd
or
inc
repnz
add
mov
sub
inc
add
and
mov
cs
and
or
jo
mov
dec
jns
add
mov
add
sub
mov
into
rolb
mov
mov
adc
mov
add
push
addb
dec
xor
mov
xor
mov
mov
repnz
movsb
addb
rolb
bound
mov
jle
add
rolb
mov
mov
mov
push
notl
inc
out
loope
fsubl
add
xchg
mov
iret
out
jge
inc
add
rolb
pop
inc
add
add
mov
rolb
mov
add
insb
cld
sub
jns
add
bound
mov
sub
xor
mov
loope
sbb
ret
adc
add
outsb
mov
mov
xchg
mov
ret
inc
inc
cli
jno
add
mov
imul
adc
mov
add
xchg
add
out
rol
xchg
or
add
mov
hlt
fistl
leave
negb
mov
add
cli
pusha
add
jb
mov
add
fidivrs
xor
mov
mov
add
push
xchg
inc
add
sub
xchg
lds
add
push
int
rcrl
rolb
pop
pop
leave
fs
sbb
int3
push
cli
not
add
or
inc
push
cmp
mov
mov
mov
sbb
jle
mov
ds
pop
or
jo
mov
mov
mov
or
shl
adc
add
mov
mov
inc
lcall
rolb
mov
add
add
mov
add
enter
stc
shll
add
sbb
and
stc
xorl
mov
add
cmp
hlt
addr16
and
mov
and
pop
into
jg
hlt
iret
xchg
mov
lods
jge
loope
add
cltd
outsb
outsl
lods
cmp
fcomi
add
outsb
shr
mov
mov
rolb
mov
add
outsb
jno
scas
sub
inc
dec
mov
mov
pop
aam
cmp
mov
add
bound
mov
add
out
das
lea
rolb
out
lret
jecxz
add
mov
bound
mov
cmp
movsl
addr16
adc
mov
or
xchg
je
arpl
mov
push
or
jmp
mov
mov
lcall
leave
lcall
add
mov
xchg
jmp
in
pop
jmp
addb
dec
dec
inc
add
test
mov
mov
cmc
xchg
cltd
adc
sub
xchg
add
mov
xorl
mov
fwait
enter
xchg
add
dec
int3
push
lock
rolb
xorl
movsl
cmc
rolb
sub
das
adcl
and
das
add
mov
add
add
mov
mov
pop
jo
mov
add
add
mov
jnp
pop
sub
stos
test
ja
iret
bound
mov
imul
push
mov
ret
jecxz
nop
add
mov
cmp
push
loope
push
xchg
add
push
add
sub
adc
mov
sub
add
aad
or
push
push
add
lahf
mov
mov
add
cmc
adc
nop
add
pop
in
in
add
cmp
cmc
in
loope
xchg
xor
add
lods
test
jno
push
add
add
add
mov
out
jno
mov
pop
xor
mov
mov
push
nop
add
jne
push
cwtl
push
bound
mov
push
std
push
dec
negl
pop
sbb
add
js
jo
mov
mov
cmpsb
sti
stos
into
repz
or
xchg
fnstsw
add
adc
sub
jmp
add
jbe
outsl
fldenv
mov
roll
mov
mov
in
mov
in
add
pminub
popf
addb
push
jae
cwtl
loopne
mov
add
or
add
pop
mov
pop
aaa
int3
fucom
mov
mov
addr16
test
adc
mov
jg
xchg
lods
jns
add
xor
mov
mov
add
add
fstps
mulb
mov
jns
add
scas
mov
ret
jae
insb
pop
ja
mov
insl
cmp
in
fs
cltd
push
ficoms
lahf
sub
push
add
sub
add
dec
rcrl
cld
fisubl
pop
pushl
add
movl
push
xchg
and
mov
jmp
adc
add
scas
es
rolb
mov
mov
ja
data16
mov
cmp
lret
dec
bound
mov
add
mov
cltd
jmp
inc
add
mov
pop
add
iret
push
sub
pop
pop
movsl
mov
fwait
jno
sti
mov
nop
add
pop
shrl
mov
mov
jl
icebp
adc
rolb
lds
mov
inc
add
fdivrs
out
lea
pop
push
push
jl
pextrw
cwtl
fistpl
jnp
nop
add
mov
mov
mov
mov
mov
dec
or
mov
dec
pop
dec
dec
ficoms
rolb
pop
fmuls
fildll
arpl
popf
sbb
test
add
jp
add
sub
add
inc
jo
mov
rolb
mov
inc
test
add
mov
mov
ret
pushf
fbld
pop
mov
jmp
shrl
ss
dec
fsubrs
sahf
xor
hlt
jp
mov
out
lcall
stos
or
mov
fmul
jne
fists
psubusw
sub
pushl
add
or
xor
jg
sti
mov
sub
cmp
stos
add
mov
add
jb
mov
pop
jne
xor
out
dec
or
jg
jl
insb
in
xchg
dec
lods
bswap
jmp
fwait
sti
nop
add
add
das
pop
fs
sbbl
addr16
lcall
pop
cli
cmc
das
hlt
mov
mov
ds
outsb
nop
add
add
cltd
out
in
jle
nop
add
mov
dec
adc
mov
and
mov
or
dec
push
jne
bound
mov
lock
call
or
add
out
push
push
lea
inc
movl
gs
xchg
out
cmp
or
rol
add
inc
aad
add
add
add
push
addb
addb
adc
xchg
jnp
add
pop
aas
xor
or
add
cli
sub
movb
daa
dec
jp
mov
and
xor
add
out
bound
mov
stos
add
mov
sbb
sti
icebp
mov
lret
sbb
push
add
out
jno
inc
test
xchg
add
fsubl
add
movsl
xchg
add
push
or
cmc
subl
cmp
mov
cwtl
pop
push
cmp
adc
sbb
pop
xchg
and
mov
dec
mov
xchg
pop
inc
add
sahf
xchg
or
add
mov
mov
inc
mov
push
push
pop
rolb
test
add
ret
test
test
add
sub
mov
inc
hlt
adc
clc
dec
and
jae
sub
mov
add
xchg
fistpll
int
sbb
xlat
fnstsw
adc
add
lods
aaa
inc
add
inc
xchg
add
dec
ret
in
mov
or
push
dec
jnp
jbe
pusha
add
rolb
mov
fwait
push
cmp
push
jo
mov
mov
mov
fcomps
mov
jbe
es
insb
insb
xor
xchg
rol
addb
push
lock
iret
dec
or
mov
addl
add
flds
fwait
imul
pushf
mov
idivl
push
mov
popl
mov
mov
pop
scas
jp
or
fcmovnu
adc
mov
add
add
mov
scas
cmp
mov
loop
mov
or
inc
inc
outsb
aaa
push
mov
sti
dec
lods
outsb
subl
js
arpl
jecxz
imul
aas
or
lahf
cmp
sbb
inc
add
cmc
pop
repnz
adc
mov
add
loope
lret
inc
inc
push
pop
addr16
enter
aad
jnp
dec
dec
enter
cmp
mov
scas
xchg
sbb
pop
mov
push
jmp
xchg
mov
fistl
add
addb
adcl
add
bound
mov
testl
push
cli
addb
fistps
pushf
jb
mov
out
popa
std
jno
cli
and
mov
add
mov
stos
inc
fmull
mov
mov
add
pop
mov
aas
fwait
or
cmc
adcl
repz
mov
dec
xchg
mov
add
mov
add
js
rolb
mov
add
mov
stc
inc
push
stc
push
popa
jmp
addb
das
cmp
mov
add
test
cmp
xchg
lock
xchg
add
push
icebp
stc
jb
mov
add
shll
mov
mov
add
lcall
or
lock
xchg
cltd
dec
sub
mov
ljmp
inc
add
aas
addr16
dec
pop
shrl
sbb
cmc
out
insb
push
mov
sti
sahf
ret
mov
fwait
popa
pop
inc
js
and
gs
bound
mov
push
bound
mov
jae
ja
fwait
push
aas
push
add
add
jmp
test
push
fcomp
pop
mov
in
xchg
aaa
cmpsb
inc
add
mov
fdivl
mov
add
mov
andl
push
stos
push
fmul
rolb
mov
xor
mov
sbb
std
pusha
add
inc
jg
xor
mov
or
add
mov
addr16
push
fscale
add
inc
add
push
data16
mov
test
sub
add
mov
and
mov
mov
es
mov
xchg
or
push
mov
xchg
test
loopne
mov
mov
jnp
add
and
mov
mov
rolb
mov
in
jmp
roll
add
bound
mov
lret
mov
or
repnz
xchg
or
push
add
jno
imul
mulb
mov
adc
xor
adc
aas
sbb
jecxz
push
sahf
inc
cld
ja
or
add
fmull
std
adc
mov
iret
ljmp
stc
les
int3
mov
or
repnz
jb
mov
dec
out
insl
or
xchg
cmp
cmpsb
adc
mov
mov
cmp
pop
rcr
add
in
adc
mov
test
ret
imul
or
add
add
arpl
push
mov
sub
pop
xor
mov
jl
test
fs
repnz
repz
mov
clc
int3
pop
adcl
mov
and
fwait
lahf
stos
and
mov
ss
lea
mov
or
jnp
nop
add
add
sub
sbb
xchg
js
int
jo
mov
pop
iret
shll
outsl
out
sbb
add
popa
loopne
mov
pop
data16
ret
and
mov
imul
sbb
insl
pop
xchg
nop
add
mov
add
add
dec
lods
pop
loope
add
mov
shrl
add
mov
mov
dec
mov
dec
sbb
loop
mov
add
lds
mov
mov
lret
pushf
iret
mov
mov
aaa
dec
mov
cmp
mov
sbb
mov
loop
mov
jecxz
adc
addb
dec
les
arpl
add
jb
mov
sub
add
dec
data16
out
scas
push
pusha
add
lcall
add
cmp
addb
or
mov
iret
popa
add
or
inc
add
aas
mov
or
jne
repz
rolb
mov
add
lahf
cmpsb
jmp
mov
rolb
mov
cwtl
das
arpl
out
add
mov
xchg
mov
sbb
add
icebp
lds
or
mov
ljmp
sbb
es
add
mov
and
mov
into
lcall
xchg
jp
icebp
dec
or
je
aam
push
xchg
or
lcall
lea
icebp
mull
pop
pop
les
jno
pop
mov
out
add
mov
or
add
pop
jle
fldenv
pop
cmc
rolb
mov
aas
movsb
cld
and
mov
shll
mov
shll
mov
mov
ljmp
inc
jmp
push
lret
out
in
or
mov
adc
bound
mov
nop
add
cmc
inc
out
insb
dec
add
es
sub
imul
lds
jns
cli
xor
pop
sbb
ljmp
outsb
fdivrp
call
jle
adc
mov
add
in
fistps
in
dec
jl
add
jns
popa
lret
cmc
and
mov
add
jge,pt
add
jno
pushf
popf
cwtl
add
testl
cmp
add
lods
sub
xor
scas
cwtd
xchg
shrl
repnz
mov
leave
fwait
cmpsb
roll
cmpsb
repz
dec
lea
sahf
push
push
add
cs
pop
add
xor
mov
xchg
sbb
es
stos
int3
cmp
add
cltd
mov
mov
lcall
add
mov
fs
push
ds
repnz
stos
nop
add
or
mov
mov
add
mov
add
add
jbe
add
mov
mov
in
add
sahf
jge
fsubl
push
add
scas
mov
sahf
mov
mov
and
mov
mov
mov
in
jb
mov
repz
imul
pop
std
pop
push
dec
push
push
mov
into
out
ja
mov
xchg
test
mov
mov
xor
out
inc
mov
testb
add
lds
lret
push
les
cmpsl
fwait
push
in
mov
repnz
adc
dec
cwtl
pop
fucomi
adc
lret
or
stc
adc
push
addb
div
add
jns
dec
in
cmp
add
stos
in
movsb
daa
fwait
scas
dec
pop
data16
mov
into
push
add
stc
call
popa
jb
mov
add
add
rcll
mov
add
movsl
pop
mov
iret
sbb
std
int
inc
push
xchg
add
outsb
dec
xchg
add
add
dec
inc
ss
mov
clc
dec
rolb
sub
sub
jb
mov
add
push
rolb
mov
inc
xchg
jae
add
add
mov
cmp
xchg
add
outsl
jl
sbb
inc
add
add
mov
mov
add
push
pop
js
les
mov
push
cs
lahf
rol
pop
mov
push
mov
jno
lea
jge
imul
pop
push
xchg
scas
mov
add
xchg
xlat
push
add
or
adc
mov
aas
out
dec
mov
add
mov
jno
imul
mov
lock
in
ficoms
insl
add
mov
add
and
jne
lret
sbb
mov
lcall
adc
mov
xchg
or
stos
cmc
nop
add
mov
add
mov
pop
icebp
movsl
add
add
repz
stos
and
add
lahf
cwtl
ljmp
in
cmpsb
cli
test
inc
mov
aaa
mov
mov
add
jmp
or
cmp
inc
stos
pusha
add
add
in
cld
cmc
add
mov
cs
sbb
inc
bound
mov
jp
lcall
add
mov
lock
jo
mov
aad
and
leave
lcall
mov
mov
notl
add
mov
mov
fsub
add
add
inc
and
lahf
mov
ret
push
mov
into
fucom
jp
out
inc
jmp
cltd
sub
inc
pop
arpl
mov
movsl
addb
fs
mov
incb
cmp
jg
test
pop
and
mov
ss
sahf
or
dec
sbb
jmp
arpl
aad
cld
adc
enter
mov
xchg
aaa
sbb
push
out
add
add
ljmp
test
cmp
add
dec
rolb
mov
dec
incl
roll
mov
xor
cmp
push
sbb
push
sub
add
and
imul
pushf
addb
xchg
mov
push
lods
shrl
std
loope
subl
pop
addb
mov
jb
mov
jge
add
mov
jb
mov
mov
mov
mov
imul
xchg
dec
jbe
mov
sbb
add
jnp
xchg
pusha
add
fmull
xchg
add
arpl
out
aam
ljmp
mov
test
js
fs
mov
push
sbb
mov
inc
call
add
insb
mov
rolb
mov
xor
add
xor
xlat
jecxz
mov
add
in
jmp
add
sbb
add
cmp
xor
mov
cmpsb
lds
aam
gs
dec
in
dec
push
and
mov
add
in
js
xchg
add
test
add
add
fadd
add
stc
jecxz
out
or
mov
cmp
jbe
mov
mov
and
ds
lds
add
xchg
fxch
je
test
and
pusha
add
sbb
mov
lods
bound
mov
push
stos
push
stc
xchg
in
addb
adc
mov
mov
hlt
ficomps
mov
push
lock
fs
lods
les
inc
pop
jb
mov
dec
cmpsb
cmpsb
sbb
add
orl
mov
dec
cmp
add
sub
sbb
sahf
arpl
xor
sti
ljmp
xchg
add
mov
mov
xchg
add
sbb
loopne
mov
and
mov
negl
repnz
inc
sbb
add
mov
lret
sub
enter
or
mov
pop
jo
mov
jecxz
stos
xchg
cltd
into
loopne
mov
movsb
rolb
mov
imul
jne
sub
fnsave
pushf
push
mov
imul
add
mov
stc
or
ss
outsb
rolb
mov
pop
dec
out
in
cltd
lock
xor
push
lods
sti
push
xor
add
add
bound
mov
sbb
testb
xchg
insb
aaa
aas
mov
rolb
mov
add
sbb
mov
mov
mov
push
add
js
lods
cmpsl
adc
and
sbb
adc
data16
add
dec
and
mov
notl
add
cwtl
mov
or
pop
inc
add
sub
inc
insl
mov
or
bound
mov
and
pushf
jbe
dec
in
xor
es
xchg
cwtl
sbb
add
cltd
xor
xchg
mov
in
pushf
mov
xor
add
loopne
mov
add
mov
nop
add
shrl
ret
xchg
mov
rolb
fildl
pop
adc
add
mov
mov
xor
mov
aad
add
aaa
scas
aam
inc
fiaddl
and
add
pusha
add
xor
sub
fidivrs
out
fldcw
iret
jle
fcoml
outsl
dec
jns
add
adc
inc
add
ret
test
pop
and
aas
das
cmp
jbe
or
mov
sbb
fmull
movsb
dec
mov
fs
push
pop
je
out
test
and
mov
and
mov
mov
or
cld
pop
dec
gs
jne
hlt
xlat
cmc
mov
daa
pop
cmc
jne
mov
and
mov
sub
or
mov
mov
lock
mov
mov
add
adc
movsb
addb
sbb
repnz
aaa
push
fsub
lahf
test
add
insb
xchg
add
mov
sti
mov
sahf
jbe
sub
adc
mov
add
mov
jo
mov
cli
inc
or
adc
inc
cltd
pop
lods
je
negl
mov
rcr
cld
stos
test
add
mov
inc
add
imulb
iret
stc
and
subl
push
fs
loopne
mov
mov
mov
imul
mov
mov
add
mov
add
add
add
rolb
mov
fldt
add
add
mov
imul
les
cmp
inc
add
add
jne
sub
stos
daa
sbb
rolb
mov
ret
jle
into
sti
xchg
cltd
sub
add
mov
jb
mov
add
popf
jl
sub
add
mov
sub
mov
test
jb
mov
sub
and
mov
jg
je
cmp
addb
cmpsb
and
cltd
mov
mov
and
inc
fcompl
addb
and
mov
sub
cld
jb
mov
or
stc
into
psubw
or
jb
mov
add
adc
mov
add
scas
cmp
mov
call
hlt
scas
mov
push
add
cmc
and
clc
and
jmp
stos
cld
fisubrl
cmp
add
mov
add
addb
inc
add
add
jp
xchg
xchg
add
inc
sbb
in
jno
mov
add
leave
iret
sbb
repz
add
js
addr16
shll
jb
mov
push
mov
addb
xor
dec
xchg
jmp
clc
sub
pop
pop
adc
negl
mov
scas
mov
and
add
mov
jecxz
mov
mov
mov
mov
add
add
nop
add
popa
pusha
add
adc
leave
lods
pop
aaa
rolb
mov
or
add
fiaddl
mov
mov
inc
das
addl
ljmp
add
sti
lret
sub
mov
nop
add
cmp
dec
ljmp
in
lock
push
add
mov
in
in
pop
fwait
dec
mov
jbe
imul
mov
push
sbb
stc
roll
dec
inc
mov
or
mov
add
cmp
jmp
popf
int3
add
mov
mov
xchg
push
in
dec
sbb
rolb
mov
xchg
cmp
bound
mov
fsubrs
movsb
or
push
stos
xchg
add
add
mov
iret
dec
sbb
mov
mov
xchg
sub
xor
scas
stos
loop
mov
dec
dec
mov
xchg
pop
add
pop
xchg
jle
inc
xchg
pop
pop
lds
aad
cmpsl
cmp
add
fiaddl
sub
mov
jle
lret
xor
mov
add
inc
cmp
add
jp
sbbl
jg
adc
push
and
mov
add
mov
add
fwait
xor
jmp
ret
lahf
mov
je
add
mov
xor
mov
cwtl
fwait
jo
mov
add
mov
push
adc
mov
mov
mov
aas
insb
mov
push
pop
dec
xchg
rorl
jge
mov
sbb
mov
cmp
dec
inc
or
mov
xchg
add
adc
sbb
js
icebp
mov
jns
stos
xor
add
add
xor
mov
jno
testb
addb
sub
or
add
imul
jecxz
jae
sti
andl
test
loop
mov
pushf
add
mov
add
xchg
call
test
push
mov
pusha
add
mov
xchg
push
test
mov
aaa
in
push
stos
mov
cmp
fmul
fcompl
rolb
mov
fistps
je
es
je
dec
icebp
ss
scas
pop
mov
cli
jb
mov
ja
ljmp
push
std
mov
and
mov
xchg
jns
mov
scas
stc
iret
pop
ss
jge
add
add
adc
mov
or
test
add
mov
lods
push
popf
mov
mov
adc
cwtd
addr16
sub
dec
adc
mov
dec
mov
mov
jl
arpl
imul
cmp
sbb
adc
mov
mov
mov
add
add
add
cmp
or
insb
sbb
fwait
inc
add
xchg
mov
ret
ljmp
lcall
fs
inc
repz
dec
jmp
xchg
addb
iret
or
jne
insl
xor
mov
mov
rolb
mov
add
and
mov
add
mov
ss
add
rcl
add
iret
cmc
in
and
mov
pushf
rol
jne
add
and
mov
add
pop
xchg
or
add
repz
mov
rorl
push
add
lds
fdivrl
jle
fbstp
mov
xor
sub
paddsb
fs
stos
je
mov
mov
fucomp
mov
push
lahf
addr16
in
popa
jbe
scas
pop
cmp
jne
xchg
mov
xlat
add
add
pushf
jge
lret
adc
test
lcall
add
sbb
in
popa
cmp
mov
or
add
adc
xchg
add
nop
add
stc
sbb
dec
leave
insb
call
outsl
arpl
pop
scas
jns
add
shll
fcmovnbe
add
push
cli
addb
popf
stos
push
or
lods
cmp
mov
adc
add
jne
cmp
add
ds
scas
sbb
add
mov
mov
add
mov
and
mov
les
xor
mov
ja
dec
jnp
pop
xchg
lahf
ss
repz
pop
je
push
loope
mov
sbb
ret
mov
add
ja
xor
mov
aad
mulb
mov
xor
add
xor
mov
inc
pop
out
fnstcw
cld
notl
jl
fmuls
add
jnp
add
mov
aad
inc
or
sub
mov
mov
sbb
xor
hlt
jbe
and
lods
mov
mov
fimuls
mov
negl
orl
mov
add
mov
add
jo
mov
xchg
add
imul
xchg
pop
cmc
sub
mov
mov
cltd
cmp
add
cmc
dec
jle
in
push
repz
jge
movsl
test
shll
add
add
inc
add
enter
sub
mov
add
push
in
cmp
add
stos
adc
out
dec
or
xor
mov
mov
es
mov
stc
lcall
in
std
loop
mov
lock
cmc
dec
mov
stos
addb
and
mov
mov
inc
negl
stos
cmp
xchg
outsb
cmp
jecxz
inc
add
xchg
out
jb
mov
cltd
xchg
ret
cmc
aad
add
mov
pop
std
ret
mov
mov
and
add
cmp
xlat
movsb
xchg
jns
or
clc
cmp
leave
jae
dec
xchg
dec
xor
push
sbb
movsb
dec
aas
push
or
bound
mov
add
mov
xor
mov
loop
mov
mov
lds
aam
hlt
ss
fcmovne
imul
add
mov
lods
push
fsubr
inc
outsl
int
add
sbb
mov
add
sbb
push
jl
push
divb
cmp
addb
dec
pushf
cmpsb
imul
mov
clc
addb
mov
xchg
pushl
in
cli
outsb
movsb
mov
mov
mov
adc
add
mov
add
cmpsb
insl
jb
mov
fs
lea
nop
add
aas
push
das
pushl
ret
cli
jp
divl
fdiv
ja
add
negb
cltd
push
and
mov
repz
dec
fisttps
lret
mov
pop
cmp
inc
fcompl
int
add
add
xchg
dec
fcmove
xchg
shll
or
add
push
dec
push
sub
mov
sarl
inc
add
adc
mov
add
mov
mov
sbb
ljmp
leave
fistps
out
dec
fldcw
push
add
dec
or
clc
mov
mov
adc
mov
adc
cmp
xchg
out
stos
cmp
jno
lret
adc
cmp
ret
cmc
es
add
sbb
call
loop
mov
movsl
cmp
mov
lods
xor
cmp
add
jl
pop
movsl
sbb
mov
push
inc
add
add
mov
adc
add
add
lock
mov
mov
add
mov
mov
lock
xor
xor
add
mov
mov
push
cmp
negb
add
lcall
iret
push
addl
sub
mov
dec
push
mov
push
adc
mov
insb
sbb
test
and
mov
mov
mov
iret
fcoms
dec
mov
gs
test
add
pop
adc
scas
daa
test
adc
add
jp
add
lock
fdivrl
push
insl
adc
mov
fwait
jnp
leave
fwait
pop
ret
and
sub
jg
mov
add
dec
adc
add
je
in
lds
add
mov
outsb
test
sahf
add
mov
pop
mov
mov
ret
sti
sbb
in
inc
rolb
mov
aad
fdivrl
sbb
lret
push
fcomps
dec
insl
rolb
mov
add
mov
rolb
mov
pop
inc
xchg
rolb
mov
or
mov
inc
add
mov
arpl
push
add
psrad
mov
mov
mov
mov
add
loope
scas
inc
jge
adc
add
mov
add
out
push
add
mov
ss
add
gs
scas
jmp
jno
add
add
mov
test
mov
jmp
adcl
or
mov
divb
sub
push
dec
rolb
mov
add
add
out
add
mov
ffree
add
ud0
add
and
mov
jecxz
aas
out
jmp
test
pop
sbb
add
rolb
mov
add
outsl
das
mov
mov
push
call
popf
nop
add
mov
cld
mov
jecxz
dec
add
pop
dec
sub
stos
pop
insb
imul
imul
rcrl
pop
arpl
scas
mov
mov
push
aam
dec
pop
sar
pop
jg
ds
rolb
mov
adc
pop
addr16
dec
jmp
cmp
dec
jp
pop
dec
add
mov
mov
mov
add
add
mov
add
addb
inc
mov
add
into
scas
mov
mov
xchg
fisttpl
jecxz
outsl
and
lods
idivb
sbb
mov
add
mov
out
add
fwait
or
ss
xor
cs
and
mov
cwtl
inc
add
mov
and
jbe
xor
addb
xor
xorl
mov
push
ds
in
cli
out
outsb
mov
imulb
shll
mov
fidivs
xlat
addb
mov
test
sbb
mov
jmp
jns
xchg
add
fistpll
mov
rolb
mov
sahf
pop
les
add
popf
pop
mov
add
add
jge
mov
scas
or
add
xor
dec
mov
or
mov
add
mov
test
mov
xchg
and
mov
add
mov
xchg
add
mov
imul
push
dec
xchg
push
sbb
aas
in
rcl
out
inc
imul
pop
iret
mov
es
bound
mov
mov
das
jne
add
mov
pusha
add
add
repnz
jb
mov
fwait
icebp
push
icebp
movsb
roll
cltd
leave
and
add
and
cli
in
or
add
adc
xor
pop
sbb
popf
mov
jp
xor
add
adc
mov
xchg
cmp
mov
pop
or
sti
imul
mov
add
mov
add
int
inc
add
movsb
mov
cli
inc
mov
mov
mov
pusha
add
stos
filds
bound
mov
and
pop
stc
pop
pop
and
add
mov
add
push
add
mov
lret
test
mov
cmp
pop
pop
icebp
inc
add
add
in
add
xor
add
xchg
jg
aaa
js
icebp
jbe
cmp
add
out
push
enter
or
add
mov
gs
xchg
rolb
mov
out
mov
jb
mov
add
jg
daa
bound
mov
fsubl
in
pop
inc
pop
imul
in
mov
xor
mov
add
sub
mov
sahf
cltd
xchg
loope
popl
jg
stc
mov
xchg
mov
mov
bound
mov
mov
add
sbb
add
lods
add
mov
insb
sub
jno
movnti
jb
mov
leave
push
sbb
and
mov
scas
divl
lods
aad
inc
add
add
mov
sahf
lahf
dec
sbb
nop
add
dec
dec
out
mov
mov
dec
mov
and
mov
int3
lcall
mov
xchg
int3
cmpsl
mov
pop
push
lds
cs
jmp
pop
pop
dec
xchg
scas
jno
add
sbb
add
mov
imull
pushf
jecxz
addb
aaa
nop
add
bound
mov
mov
sub
or
mov
sti
pop
sti
push
add
adc
mov
out
push
xor
jb
mov
orps
ja
add
enter
jle
int
xlat
push
das
inc
enter
inc
loope
add
ss
cmpsl
loopne
mov
jne
xchg
and
add
xor
addb
mov
add
jecxz
popa
ljmp
test
lods
adc
mov
mov
add
mov
mov
dec
icebp
cld
lret
dec
test
ja
inc
out
stc
lret
cmc
add
mov
or
xchg
fxch
cmpsb
lret
std
xor
js
mov
mov
add
adcl
mov
out
jno
icebp
cmp
mov
xor
sarl
push
xchg
add
mov
add
cmp
fsubrl
add
mov
insb
dec
dec
lds
mov
add
jbe
mov
mov
lahf
xor
mov
in
movsb
xchg
dec
push
push
pop
push
out
cmp
icebp
mov
inc
jg
push
addb
mulb
std
sti
ja
fcmove
dec
and
mov
sub
or
insw
mov
cmc
jmp
add
mov
test
adc
cmpsl
inc
add
add
mov
scas
sbb
imul
andl
mov
inc
fisubl
dec
jns
xchg
mov
inc
std
mov
dec
xor
mov
lahf
std
mov
push
sub
mov
aam
arpl
inc
loop
mov
ret
jns
xchg
xor
mov
rolb
mov
sahf
movsb
lcall
test
leave
fwait
mov
js
mov
xchg
add
add
out
pslld
mov
add
xchg
sbb
mov
xchg
jmp
xchg
cld
xchg
add
adc
mov
into
cli
push
pop
inc
mov
xorl
addr16
cmp
add
cli
addb
rolb
mov
add
pop
pop
cld
fistps
out
xor
pusha
add
add
mov
add
insl
fwait
adc
insb
jb
mov
add
mov
int3
dec
push
add
decb
add
mov
xchg
test
add
mov
pop
out
insb
loop
mov
inc
movsb
inc
cmpsl
nop
add
add
mov
pop
xchg
mov
or
mov
add
sub
add
mov
or
cld
imul
dec
stc
loope
dec
aas
pop
and
dec
push
xchg
add
mov
push
addb
sbb
iret
or
mov
sub
hlt
mov
lcall
jle
pop
lock
pop
dec
mov
add
cs
xchg
xor
xlat
cltd
add
add
inc
pop
fildll
mov
mov
js
mov
jae
inc
std
insl
push
jno
call
cmpsl
mov
inc
shl
add
mov
sub
add
cmp
arpl
or
add
lock
in
pop
xchg
add
mov
lods
fisubrs
add
mov
jns
or
or
add
roll
cs
push
add
add
sbb
mov
add
xchg
jno
inc
add
xchg
enter
mov
shl
inc
into
bound
mov
mov
inc
test
imul
aam
add
xor
adc
leave
adc
mov
js
pop
or
adc
mov
add
addb
in
cmp
lret
dec
stc
stc
pop
outsb
incb
mov
push
push
add
ss
dec
pop
xchg
in
jae
dec
test
xchg
dec
scas
shll
stos
push
mov
xchg
call
mov
icebp
mov
sub
lret
fsubp
insb
out
cltd
cmp
inc
and
mov
test
pusha
add
ret
lds
insl
inc
add
popa
dec
int
xchg
into
sub
cs
mov
mov
add
cmp
mov
mov
sbb
add
mov
xlat
or
mov
daa
out
iret
add
xor
mov
mov
add
or
loop
mov
sar
loope
xlat
fwait
insl
add
add
in
fwait
mov
mov
mov
add
add
iret
movsl
jcxz
insb
jg
add
add
mov
mov
imul
jp
lock
mov
add
ficoms
add
addb
in
pop
or
loop
mov
add
adc
outsb
in
add
negb
fstps
xor
mov
xchg
in
popf
jmp
lcall
addb
leave
sub
out
push
add
mov
add
mov
lcall
mov
add
pop
repnz
lahf
pop
dec
mov
dec
push
pop
sbb
add
sbb
jle
push
dec
sbb
cld
cmpsb
lds
adc
js
mov
or
add
mov
jae
ret
push
xchg
push
mov
cld
xor
mov
cmpsb
lock
mov
scas
clc
popa
std
outsb
sahf
sarl
pop
out
cmp
mov
sub
add
test
aam
mov
ds
add
das
mov
add
mov
scas
mov
iret
sbb
rcrl
add
cli
mov
ret
loop
mov
jle
add
movl
mov
mov
int3
das
xchg
xchg
mov
jmp
mov
mov
loopne
mov
push
xor
stos
push
xor
dec
stc
add
mov
pop
iret
divb
mov
push
and
mov
aas
lret
sti
shll
jno
pop
dec
popa
stc
lods
cli
pop
call
push
mov
and
mov
mov
vpsubw
and
mov
dec
dec
stos
dec
int3
rolb
mov
int
imul
fwait
test
shrl
aam
inc
add
mov
add
and
addb
jmp
roll
mov
add
cmc
cmp
jno
dec
das
stos
push
adc
jle
in
add
mov
inc
cs
xchg
clc
movsl
das
and
mov
add
push
xchg
ret
gs
aas
push
in
mov
jnp
sbb
pop
adc
mov
mov
xchg
hlt
leave
lret
faddl
mov
or
add
jnp
adc
mov
add
pop
push
add
sub
push
jg
push
dec
into
ret
es
test
mov
nop
add
add
rolb
cwtl
idivl
mov
mov
mov
inc
or
push
cltd
test
rolb
mov
add
lock
xchg
stc
mov
adc
lods
movsb
sub
repz
jns
add
jb
mov
fcomps
rolb
mov
js
hlt
cld
sbb
or
dec
std
push
jge
std
roll
dec
xorl
cmp
out
add
pop
inc
dec
mov
dec
or
cmc
push
daa
mov
test
movsb
enter
add
xchg
add
mov
add
push
repnz
call
sub
cld
mov
out
testl
and
inc
incl
cmove
into
push
cmp
mov
mov
mov
jns
iret
fstps
pop
xor
adc
mov
popa
mov
xchg
add
pop
movsl
aas
mov
sbb
es
cmp
mov
add
jnp
ret
jb
mov
add
sbb
add
dec
shll
bound
mov
outsb
test
test
xor
add
nop
add
inc
into
jb
mov
xchg
or
add
fbld
mov
add
add
fst
outsb
xchg
cmpsl
adc
mov
jo
mov
jl
mov
mov
add
add
mov
mov
dec
cltd
lds
int3
dec
cli
pusha
add
add
iret
hlt
inc
and
repnz
mov
test
cmpl
int3
lret
cs
jo
mov
into
int
xchg
pop
hlt
in
stos
mov
subl
add
mov
add
mov
add
iret
mov
addb
pop
and
inc
jne
test
pop
insb
fs
out
jge
int3
push
and
adc
mov
lock
sbb
test
add
cs
mov
dec
pop
rolb
mov
jg
int3
test
add
and
mov
lcall
cs
popw
cmp
aaa
inc
loopne
mov
hlt
push
xchg
sub
jge
insl
sub
dec
imul
cmp
iret
dec
or
xchg
lock
pop
inc
jp
add
rolb
mov
aaa
testb
mov
loop
mov
sbb
loope
dec
xor
inc
add
mov
or
push
dec
repnz
mov
add
add
pusha
add
add
mov
dec
jecxz
negl
mov
mov
cwtl
insl
movsl
mov
bound
mov
add
xor
mov
nop
add
dec
inc
jno
ficompl
loop
mov
jo
mov
insl
cmpsb
idivl
xchg
push
cmp
stos
adc
xor
mov
inc
add
ljmp
repnz
mov
fwait
or
add
rolb
mov
fld
movsl
pop
mov
mov
add
pop
lods
xor
sub
gs
mov
mov
mov
in
mov
mov
popa
push
std
and
mov
pop
jecxz
mov
add
xor
and
mov
lret
test
add
out
inc
in
dec
jnp
cmp
dec
cmc
pop
mov
dec
popa
sti
adc
mov
inc
xchg
in
xchg
inc
mov
rcl
mov
add
out
mov
out
sbb
test
mov
mov
add
rolb
mov
add
testl
adc
mov
add
add
ds
nop
add
loop,pt
mov
lcall
into
pop
out
cmp
add
push
and
mov
mov
add
mov
adc
mov
ret
out
lret
add
shll
cmp
cmp
xchg
fbstp
addb
movsb
out
add
mov
arpl
add
add
fdivrs
cmpsb
ficoml
iret
jecxz
movsl
dec
stos
mov
add
push
stc
stc
jae
outsl
xchg
or
iret
mov
or
dec
jmp
xor
mov
xor
mov
je
add
push
sub
scas
and
mov
je
pop
dec
inc
add
loop
mov
add
add
or
jg
xchg
add
enter
xchg
aas
lret
pop
or
notb
adc
pop
push
sbb
imul
dec
jmp
inc
push
imul
xchg
pop
lea
add
or
mov
mov
add
mov
clc
std
pop
push
into
push
pop
cmpsb
outsl
adc
mov
jnp
call
adc
mov
add
bound
mov
adc
mov
inc
hlt
cs
add
add
shrl
mov
scas
rolb
mov
jne
push
mov
add
pavgw
xor
add
mov
scas
ret
dec
and
repnz
or
xor
mov
dec
mov
mov
sub
iret
xchg
rolb
mov
jmp
loopne
mov
xor
fcoml
mov
jmp
mov
mov
sbb
adc
mov
jecxz
cs
dec
jge
lret
adc
inc
popf
adc
add
stos
subl
es
rolb
mov
scas
pop
pop
dec
cwtl
ret
add
mov
rolb
mov
es
xchg
cmp
data16
mov
into
rolb
mov
jmp
test
call
and
mov
lahf
dec
test
sbb
movb
jmp
add
jno
das
or
adc
cmp
icebp
sub
xor
lods
mov
mov
add
cmp
shll
add
mov
lea
lock
lods
or
dec
pop
and
bound
mov
lret
push
mov
pushf
test
add
imul
adc
sub
inc
leave
adc
jmp
sbb
jecxz
add
add
mov
mov
inc
iret
movsl
pop
lret
mov
xchg
pop
leave
or
add
rolb
mov
je
inc
add
mov
push
sbb
fmuls
dec
jp
rolb
jne
lahf
sbb
mov
jge
pop
andl
mov
jle
js
fwait
push
push
adc
add
jl
ficoms
std
lea
jae
outsb
adc
adc
mov
add
outsb
lods
lds
add
fwait
lret
outsb
iret
fnsave
add
mov
test
mov
pop
jmp
jge
mov
rolb
mov
leave
pusha
add
ja
out
xor
mov
call
mov
add
push
sub
aas
sub
push
mov
dec
enter
and
add
or
sbb
in
xor
mov
add
adc
pop
mov
ss
and
adc
add
cmp
cmpsb
sbb
mov
sbb
xor
fcoml
sbb
mov
lret
icebp
pop
rolb
mov
cmpl
fwait
nop
add
add
push
push
nop
add
stos
push
inc
cwtl
inc
xchg
adc
mov
enter
push
and
pop
jle
xor
mov
and
push
add
add
add
sbb
cmpsb
adc
push
popa
xlat
inc
xor
mov
aas
test
cmp
mov
ljmp
jns
loop
mov
addb
mov
add
add
add
out
and
mov
adc
jg
dec
xor
mov
pop
in
sub
ffreep
jnp
mov
mov
addr16
add
mov
jne
jle
fidivrs
and
int
imul
jle
hlt
pop
mov
test
aaa
dec
es
dec
mov
jp
popf
pop
mov
add
add
mov
push
mov
add
mov
push
int
add
push
jno
jnp
jle
inc
add
dec
lods
mov
push
add
pop
icebp
sbb
hlt
movsb
fstps
or
ljmp
push
jg
aas
jge
add
dec
aad
mov
add
mov
push
imul
add
ret
outsb
or
dec
adc
add
bound
mov
ja
idivl
mov
loope
insl
rolb
jg
jg
add
js
lret
mov
faddl
cltd
cmc
scas
ret
addb
jb
mov
cmpsl
lea
or
addb
dec
in
xlat
or
add
popa
call
dec
mov
mov
in
insb
fxch
mov
dec
jecxz
add
sbb
mov
inc
or
mov
add
fsub
add
add
fadds
and
mov
fistl
pop
ja
and
movsl
mov
sub
js
js
add
test
push
add
repz
jae
outsb
push
pop
ss
xchg
xor
mov
mov
cs
mov
rolb
mov
add
mov
rolb
mov
hlt
push
xchg
adc
dec
mov
inc
jl
lahf
sbb
adc
mov
ret
cmp
mov
xchg
push
add
mov
add
jns
test
rcrl
mov
sti
mov
cmp
jecxz
ljmp
mov
add
movsl
push
xchg
je
xlat
mov
dec
je
enter
movsl
dec
es
es
and
add
das
sub
add
mov
add
mov
push
lahf
jnp
in
sub
mov
xchg
lea
mov
js
cmpsl
sbb
add
mov
jns
mov
mov
add
add
mov
mov
dec
sub
pop
test
into
iret
adc
in
ffreep
add
add
ja
lods
repnz
stos
addl
mov
add
lcall
add
int
ret
xor
mov
mov
enter
add
jb
mov
out
scas
and
insl
rolb
rolb
test
push
bswap
mov
mov
test
mov
dec
xor
mov
cs
insl
scas
sub
filds
add
add
jno
xor
mov
test
pusha
add
fidivrl
addb
cmc
inc
pop
addr16
cmp
fs
mov
incl
mov
sbb
push
add
add
add
pop
aad
js
add
add
add
ret
cld
cmpsb
inc
fidivl
add
inc
and
mov
add
add
inc
add
add
cmpsb
jbe
insl
jns
pop
add
mov
lods
aad
dec
pop
jb
mov
sub
and
out
xchg
add
out
dec
cmpsb
pop
push
sub
push
add
stos
insl
sbb
xlat
clc
pop
mov
mov
xchg
int3
mov
jecxz
popf
aas
rolb
mov
jne
sub
or
test
mov
lcall
xchg
jecxz
cmpsb
xchg
stos
cmp
and
lahf
push
fidivrs
pop
movsl
test
subl
jmp
or
push
xchg
nop
add
loope
jle
or
scas
mov
add
mov
pop
iret
add
lret
lods
dec
pusha
add
push
and
add
fwait
cmp
mov
sub
mov
mov
push
add
mov
hlt
daa
jnp
leave
shrl
mov
cltd
popf
add
mov
es
cltd
mov
mov
aaa
bound
mov
gs
in
inc
xor
mov
lcall
xor
lcall
xor
aam
inc
inc
add
add
call
mov
add
mov
cltd
adc
arpl
mov
mov
out
sub
mov
lcall
mov
daa
and
pop
icebp
lahf
add
add
cmp
rolb
mov
mov
outsb
cmpsb
pop
or
xor
mov
lock
mov
dec
stc
cltd
mov
clc
pushf
ret
xlat
sub
sbb
fdivs
dec
mov
inc
jge
movsl
jl
into
loop
mov
fwait
jg
lock
add
mov
push
mov
mov
rolb
mov
or
test
cmp
leave
pop
or
pop
add
xlat
xchg
cwtl
cmp
lret
gs
or
xor
iret
and
mov
add
lea
inc
add
arpl
mov
dec
shl
push
add
out
fistl
fwait
clc
imul
mov
popa
cli
sub
add
lcall
sub
add
outsl
adc
add
add
mov
mov
add
cld
out
mov
fimull
fdivrs
sub
xor
mov
sub
jg
pop
addb
stos
ljmp
push
in
fldl
add
mov
add
cltd
pop
sbb
adc
mov
js
sti
and
gs
mulb
mov
jmp
push
pop
enter
dec
mov
mov
mov
pop
aaa
aam
lahf
fucomi
pop
pushf
mov
mov
inc
add
shl
addb
mov
or
lcall
mov
adc
mov
out
negb
mov
and
mov
mov
adc
mov
mov
mov
mov
mov
xchg
repz
mov
add
jmp
pop
mov
test
fsubrs
cmc
incl
aad
aad
pushl
clc
dec
xchg
dec
push
add
fcomps
sbb
outsl
ds
imull
mov
push
fwait
addr16
add
jge
add
sbb
push
dec
std
mov
push
add
add
add
cs
clc
lret
aaa
mov
fimull
in
jb
mov
pop
mov
push
int3
jae
clc
stc
xchg
xor
dec
and
pop
mov
je
xchg
stos
push
in
mov
mov
aas
mov
mov
xchg
cmp
pop
push
scas
mov
cmp
and
add
in
cmp
add
aad
bound
mov
aas
ljmp
push
add
dec
xchg
add
fisubs
mov
jg
leave
add
mov
add
add
adc
mov
add
cmp
add
add
and
ret
lods
cmp
aam
pop
lods
mov
adc
les
mov
inc
js
in
jns
xchg
popf
cmpsb
pop
cwtl
cmp
data16
jne
add
xor
mov
pop
and
add
xchg
sbb
xor
push
inc
push
sbb
fs
in
mov
mov
mov
add
inc
sbb
mov
add
fistl
ljmp
and
mov
add
outsb
rolb
mov
xchg
mov
or
loopne
mov
sub
jns
mov
mov
lret
add
add
adc
das
les
inc
add
xor
xchg
jl
push
inc
add
mov
ljmp
cmc
mov
sti
outsb
fbld
sbb
add
jb
mov
and
mov
out
jns
cmpsl
jp
and
sbb
iret
jle
insb
jmp
mov
add
lds
sti
clc
add
ret
jecxz
enter
pop
adc
mov
push
jno
outsb
fwait
mov
push
mov
add
push
addb
std
stos
popf
sbb
add
movsb
nop
add
jbe
cmp
push
xor
mov
in
add
sbb
add
mov
xor
mov
adc
adc
xor
mov
inc
add
adc
call
or
lahf
add
add
es
lret
add
xchg
rolb
mov
add
mov
add
enter
jae
add
or
fwait
ret
jae
js
mov
add
pop
sub
dec
and
mov
dec
and
mov
or
lret
add
fs
fnstcw
push
aas
mov
push
addb
dec
pop
stos
adc
mov
stos
mov
xchg
das
jp
cmpsb
movsl
mov
mov
add
add
mov
xchg
and
and
xor
add
fidivrl
push
add
mov
leave
and
repz
add
rolb
lods
xor
out
sbb
xchg
cmovle
bound
mov
add
jnp
aam
lahf
xchg
dec
sahf
js
fistpl
mov
ret
inc
sahf
jb
mov
cmpsb
mov
pop
lcall
add
mov
icebp
cmc
dec
push
add
inc
rolb
mov
mov
repz
xchg
cmp
add
mov
add
sbb
aaa
fisttpl
sti
xchg
xor
add
jnp
sbb
pushl
sbb
jge
push
push
add
adc
dec
adc
mov
jnp
ret
idiv
sbb
xchg
imul
leave
bound
mov
pop
les
sbb
add
loope
lock
mov
imul
mov
sbb
aas
xor
jno
lods
lds
stos
xchg
mov
lds
pop
mov
test
ds
add
filds
fcomps
test
hlt
test
mov
jg
mov
jge
jnp
add
cmpsl
es
add
mov
add
mov
mov
out
cmp
mov
hlt
sbb
mulb
add
add
adc
mov
fs
leave
mov
mov
pop
lds
fsub
rolb
mov
ds
fwait
femms
pop
rolb
mov
push
iret
xchg
jle
and
mov
mov
pop
inc
xor
mov
mov
cld
outsb
scas
xchg
or
or
and
mov
xchg
add
add
jnp
add
cmp
cmp
pop
shll
out
outsl
bound
mov
pop
cmc
inc
add
add
jns
and
mov
or
add
imul
repz
js
mov
cmpsl
xchg
mov
xor
fsubrl
mov
add
fs
je
dec
or
add
mov
add
cmp
clc
mov
lods
mov
add
jnp
je
pop
mov
push
pop
loop
mov
jne
adc
dec
cmp
roll
mov
and
mov
dec
addb
dec
andnps
add
mov
mov
add
add
dec
adc
daa
test
add
movsl
dec
inc
add
xchg
js
icebp
cli
fcmovu
ja
add
mov
js
add
and
mov
ror
push
fbstp
cmp
loopne
mov
dec
repz
sub
add
aaa
lret
bound
mov
adc
mov
nop
add
xchg
add
clc
push
lret
or
sub
add
adc
jbe
pushf
adc
mov
outsb
bound
mov
sahf
sbb
cmc
inc
add
xor
setns
fistpl
fwait
inc
ret
or
aaa
pop
or
daa
xchg
ds
mov
lret
stos
mov
sub
adc
mov
aam
nop
add
pslld
mov
fs
dec
pop
imul
mov
lock
pop
fcomi
push
dec
popa
in
lods
sarl
adcl
andl
xorl
rolb
mov
add
push
mov
fadds
jbe
xchg
add
stos
push
mov
and
mov
js
xlat
mov
xor
add
mov
xlat
push
in
mov
cmp
aas
rorl
mov
and
fisttpll
ficomps
add
add
hlt
clc
xchg
mov
mov
nop
add
out
mov
xor
add
add
push
jb
mov
outsb
xor
stc
addb
xchg
xchg
dec
out
push
jp
and
outsb
data16
fwait
pop
adc
out
mov
xchg
xchg
adc
mov
sbb
cltd
pop
movsl
aad
add
sub
inc
add
dec
sbb
push
pop
gs
outsl
out
fildl
fcmovnb
fs
adc
mov
pop
sahf
in
xchg
jnp
and
add
pusha
add
int
add
cld
rcll
movsl
or
lret
int
popa
adc
cmc
or
loope,pt
ficoml
dec
push
loopne
mov
add
add
mov
inc
add
mov
mov
adc
add
push
and
mov
push
in
mov
inc
and
xchg
xchg
xchg
push
scas
ficoml
movsl
pop
push
add
insl
ret
pop
jne
add
add
push
add
into
imul
mov
or
dec
cltd
cmp
and
mov
cmp
add
fcompl
in
mov
xchg
mov
mov
add
loop
mov
add
push
add
mov
mov
imul
mov
out
adc
or
jmp
jmp
mov
clc
popa
pop
cs
mov
stos
aam
imul
mov
add
mov
add
or
add
arpl
and
add
pop
add
mov
xchg
or
pushf
mov
xchg
inc
daa
dec
mov
xchg
pop
addb
pusha
add
add
cmpsb
lds
movsl
mov
addb
push
leave
xchg
or
jb
mov
add
add
pushf
push
dec
cmp
lock
scas
loopne
mov
mov
mov
mov
mov
inc
xlat
cmp
mov
aam
add
jae
sbb
stc
or
adc
push
inc
popa
das
push
adc
add
mov
jns
add
cmp
inc
xor
adc
scas
mov
js
adc
mov
xchg
and
lret
add
fdivl
mov
out
fildll
outsl
push
outsb
bsf
dec
inc
or
mov
int
cld
std
mov
add
aam
pop
push
add
out
add
lea
mov
cltd
test
popf
adc
mov
adc
mov
loop
mov
mov
jo
mov
dec
xor
add
loop
mov
addb
xchg
cmp
inc
inc
lods
inc
cs
jle
pop
addl
and
les
sub
stos
stos
push
adc
mov
sbb
hlt
fwait
push
pop
mov
cmp
leave
push
mov
add
pop
pop
sub
mov
bound
mov
out
pop
xor
xor
mov
pop
adcl
jo
mov
push
cli
push
sahf
fiaddl
push
inc
lcall
das
push
add
pop
les
fs
mov
mov
mov
jecxz
ret
cmp
cmp
mov
jg
or
add
pusha
add
rolb
mov
iret
into
jno
mov
jle
lods
loope
pop
outsl
xor
dec
lods
outsl
push
pop
add
dec
ficoms
mov
fabs
ret
scas
jbe
mov
sbb
cmp
dec
arpl
dec
std
in
and
push
std
or
into
add
inc
add
sub
push
or
add
fistps
sbb
pop
jp
xchg
add
sub
je
lret
rolb
mov
jns
xor
stos
sbb
aas
push
int3
fwait
je
adc
mov
fwait
aam
xchg
push
call
lods
into
dec
pop
push
and
mov
mov
dec
and
pop
sub
decl
mov
or
int
and
aam
inc
add
sbb
mov
add
push
out
pop
test
add
mov
das
ja
sbb
and
xchg
pop
mov
or
xchg
sahf
insl
mov
mov
fldl2t
mov
and
add
add
jge
inc
jb
mov
mov
rolb
mov
and
mov
jbe
add
inc
or
add
push
xchg
sub
insl
inc
push
rolb
mov
rcrl
and
sbb
in
enter
mov
dec
pop
mov
mov
jge
sub
add
sbb
mov
push
sub
shl
sub
sub
sbb
jns
sbb
fildl
or
inc
fcmovnb
or
push
push
pushf
adcl
add
outsb
lds
les
push
add
xchg
das
dec
xor
std
pop
add
mov
push
add
add
into
fcomps
jmp
add
add
mov
add
clc
adc
sub
out
or
mov
inc
add
in
cmp
mov
daa
inc
add
jbe
and
out
dec
xchg
pop
mov
iret
mov
cmp
add
xchg
jnp,pn
mov
inc
or
sbb
ja
mov
pop
pop
mov
add
jo
mov
sti
jo
mov
pushf
aaa
dec
jnp
repz
add
mov
add
lods
cmp
pop
pusha
add
mov
inc
and
inc
sbb
test
imul
ds
aas
shrl
jmp
pop
push
idivl
in
push
frstor
outsb
sahf
stc
jp
mov
daa
and
mov
inc
mov
mov
xchg
and
mov
xor
adc
fs
pop
jno
fmulp
jle
mov
pushf
adc
jo
mov
stos
call
add
mov
add
pop
sub
mov
mov
mov
dec
movups
mov
and
inc
cmpsl
in
dec
and
add
call
and
lds
pop
xchg
cwtl
xor
mov
add
fisubs
bound
mov
scas
scas
pop
jl
jp
addb
jb
mov
and
jge
in
cmp
mov
or
push
add
add
fiadds
dec
mov
pop
push
add
mov
into
push
jl
int3
jecxz
icebp
leave
push
add
lret
dec
cmp
insb
pop
mov
sahf
in
or
pop
jecxz
add
push
mov
xchg
addb
je
movb
xor
adc
mov
xor
mov
fs
addb
repnz
adc
xor
mov
scas
fcoml
add
and
addr16
push
es
mov
repz
mov
jmp
lcall
orl
jmp
cmp
iret
in
xor
xchg
mov
ficoml
rcll
scas
test
jns
cli
aaa
lret
je
jecxz
add
push
add
push
add
mov
add
push
add
push
sbb
out
dec
leave
push
es
push
movsl
and
mov
add
mov
add
xor
mov
mov
dec
or
add
sbb
add
jae
aad
or
outsl
pop
fwait
fwait
test
inc
mov
mov
rolb
pop
jle
add
push
imulb
outsl
sbb
add
mov
lret
aas
test
and
ret
mov
mov
loopne
mov
add
push
and
add
cmp
mov
or
popa
loopne
mov
xchg
or
add
mov
push
or
stc
pop
sub
shlw
xor
mov
sbb
pop
mov
xor
mov
clc
mov
and
js
dec
fsubp
and
mov
add
mov
add
lods
or
fwait
pop
lahf
addr16
dec
push
pusha
add
mov
mov
stc
out
sbb
dec
fs
or
jecxz
fstpl
fsubs
add
dec
rolb
mov
lret
arpl
add
push
inc
out
or
jb
mov
ffree
icebp
xchg
bound
mov
add
movsb
pop
cmpsb
loope
mov
add
add
in
les
or
pusha
add
sbb
mov
stc
and
mov
dec
jnp
adc
xor
mov
pop
js
repnz
in
sbb
xchg
loop
mov
jecxz
loopne
mov
add
add
pop
jmp
inc
cmpsb
cmp
call
hlt
rcrl
mov
xchg
mov
in
jae
test
aaa
in
fmuls
je
sbbl
inc
mov
sub
int
or
loopne,pt
mov
push
jle
in
lcall
push
xchg
cld
cmc
xor
mov
add
mov
sti
add
add
add
or
sahf
mov
test
mov
pop
sbb
in
push
mov
es
pop
sub
data16
mov
call
mov
enter
lcall
xchg
add
out
xchg
loopne
mov
cmp
xchg
cmp
add
fucomip
sti
pop
frstor
add
add
dec
in
adcl
aaa
icebp
xlat
rolb
mov
push
add
jno
rolb
mov
pop
test
inc
inc
std
and
mov
dec
jnp
sbb
aaa
sbbl
xor
mov
mov
clc
inc
add
out
jge
add
std
adc
mov
add
pushf
xchg
arpl
imul
stos
or
mov
hlt
jle
daa
js
push
sbb
cmpsl
push
out
or
nop
add
push
fmuls
icebp
cmp
push
cmpsl
xor
data16
cmp
xor
mov
pop
xchg
subl
jbe
cmc
mov
xlat
dec
mov
push
dec
inc
sbb
add
push
out
loop
mov
out
fists
daa
ret
mul
push
loope
ret
das
in
fiaddl
add
mov
in
jo
mov
add
fadds
mov
push
sub
inc
add
idiv
cli
movsb
jne
cmpsb
test
negb
add
out
dec
inc
loope
inc
add
mov
xchg
xchg
xchg
sbb
and
add
xor
add
push
call
stos
imul
xchg
add
add
pop
popl
add
jle
iret
movsb
clc
sub
repnz
and
mov
rolb
mov
mov
mov
pop
pop
sbb
sbb
or
dec
hlt
push
cltd
or
add
jns
cmp
add
add
mov
xor
mov
adc
mov
mov
push
xchg
pusha
add
push
scas
cmc
in
and
mov
and
mov
and
or
rolb
cltd
loop
mov
movl
jb
mov
cmp
cmp
mov
mov
imul
mov
lcall
xor
in
insl
out
add
pushf
ret
push
sbb
dec
test
add
sub
ret
mov
rol
or
add
add
jo
mov
add
outsb
jmp
stos
cmp
mov
add
mov
mov
push
inc
add
mov
xor
mov
push
add
inc
add
jle
insb
int
adc
mov
add
into
test
jecxz
icebp
inc
lcall
xor
test
xchg
das
ja
out
aaa
jmp
iret
jmp
lock
shl
dec
mov
or
jge
hlt
cmp
pop
mov
nop
add
lods
add
mov
outsl
sbb
add
jnp
dec
repnz
ds
xchg
add
icebp
and
cmp
divl
cmp
push
out
arpl
mov
mov
repz
int3
jge
mov
in
pcmpeqb
add
jo
mov
scas
adc
and
add
mov
mov
adc
aad
pop
inc
add
fsubs
inc
mov
mov
mov
ds
add
jb
mov
jp
add
movsl
sub
sahf
pop
lahf
sbb
xchg
mov
add
mov
insb
sbb
out
xor
pop
jmp
or
test
cmc
adc
pop
mov
jecxz
sbb
enter
cwtl
frstor
or
sbb
mov
shll
inc
addb
jmp
mov
jns
jge
add
dec
addb
je
aam
out
insl
mov
mov
inc
add
pop
xchg
iret
leave
sbb
mov
mov
add
xchg
pop
mov
insl
xchg
add
test
cwtl
sti
scas
stc
es
jp
add
cmc
sbb
test
dec
push
xchg
ret
push
addb
negl
cmovge
pop
cmpsl
add
les
mov
gs
lret
mov
add
std
ret
jmp
cs
test
subl
xor
filds
mov
lods
rolb
mov
jns
add
mov
xor
addb
add
les
mov
mov
test
insl
test
andl
push
in
cmovns
mov
rolb
fisttps
cmp
stos
neg
test
xchg
lods
fdivrl
in
adc
cmp
add
ficompl
xchg
stc
add
scas
lahf
cmp
ficoml
fbld
mov
sbb
outsl
loop
mov
push
jne
add
test
mov
add
and
in
xor
imul
jle,pn
sub
dec
mov
mov
add
addb
ret
fstps
repz
add
out
repnz
mov
popa
mov
dec
repnz
add
js
addb
mov
add
mov
fwait
sub
and
mov
ror
aas
xchg
adc
mov
mull
mov
add
sbb
jg
pop
push
loope
lahf
fsubrl
jl
addb
sub
add
add
lds
je
xchg
dec
cmp
add
sub
mov
or
movsb
lea
test
add
daa
call
notl
mov
inc
adc
lcall
or
dec
adc
mov
xchg
and
mov
jmp
mov
pushf
mov
stos
out
mov
mov
xchg
outsb
popf
inc
incb
lods
inc
add
ljmp
add
test
sbb
mov
mov
and
add
mov
je
insb
mov
jns
incb
xchg
add
repnz
enter
sbb
scas
push
add
cli
popf
cmpsl
xchg
sub
mov
add
gs
adc
add
or
das
pop
ds
push
sbb
add
mov
jne
idivb
pop
inc
or
bound
mov
fiaddl
iret
dec
xor
push
pop
mov
add
add
mov
mov
jae
lahf
or
jns
or
add
sub
stc
in
ss
pop
out
dec
outsl
hlt
fwait
popa
mov
cld
lods
sbb
stos
push
add
add
jb
mov
flds
add
add
insb
push
jge
or
pop
pop
lahf
sub
add
jg
addb
outsl
ss
in
add
in
or
or
test
into
and
add
add
xchg
popa
mov
mov
push
scas
leave
ds
jnp
push
pop
loop
mov
addb
lahf
jnp
mov
nop
add
sbb
lcall
mov
inc
sti
mov
add
cmp
mov
mov
mov
test
loop
mov
mov
jmp
shll
add
mov
lcall
add
in
jp
sub
add
cli
aam
mov
jmp
fmuls
jne
ja
insb
mov
add
mov
in
inc
pop
sub
and
mov
mov
aam
add
mov
aaa
dec
sub
fisubl
add
pop
addb
push
add
xchg
pusha
add
pop
push
add
mov
stc
mov
sub
cmpsb
cwtl
inc
add
inc
loope
cs
jnp
aaa
and
cli
and
mov
mov
dec
rolb
mov
scas
mov
xor
add
mov
mov
aas
cmpsl
stos
push
adc
mov
iret
in
aaa
push
or
pop
sub
add
adc
outsl
cmp
pushf
test
add
pop
popa
jecxz
add
xor
sti
mov
mov
dec
mov
jno
int
jg
les
stos
adc
mov
mov
mov
ss
mov
out
jp
add
add
add
mov
add
sahf
outsl
xor
mov
sbb
in
mov
jae
js
mov
je
add
cmc
test
and
pop
ret
data16
dec
jno
inc
add
sbb
cmp
and
jns,pn
pop
mov
cld
add
dec
addb
xchg
add
mov
xchg
mov
faddl
add
add
pop
dec
and
add
pop
adc
add
jmp
in
lret
sbb
test
out
pop
add
ds
fucom
das
pop
aaa
ret
mov
cwtl
jp
insl
xor
and
std
or
mov
lock
add
mov
fmull
jecxz
outsl
repnz
pop
dec
fsubrs
jp
decb
mov
add
lret
xchg
rolb
mov
shl
mov
pop
adc
leave
pop
lahf
or
out
add
mov
and
mov
mov
mov
icebp
mov
daa
call
add
mov
add
addb
xor
test
stos
cld
or
inc
inc
add
push
mov
mov
add
xor
std
jbe
mov
sbb
fimull
xor
mov
xchg
add
add
out
cmc
je
shr
xor
out
popa
psubusb
push
aad
add
push
or
in
in
minps
mov
movsl
dec
add
sub
out
test
dec
bound
mov
sahf
mov
add
cmpsl
mov
or
sub
push
add
mov
add
add
mov
mov
cmpl
out
addb
push
divb
add
sub
dec
push
add
popa
sub
sub
add
pop
addb
stc
fldt
mov
ds
call
stos
sub
popa
pop
leave
push
int3
rcrl
add
add
mov
cmc
and
mov
mov
mov
xchg
cmc
inc
test
cmp
sbb
rorl
daa
mov
sbb
push
dec
negb
dec
dec
loope
add
mov
dec
mov
sbb
adc
loopne
mov
dec
test
push
add
xchg
add
rcl
insl
jne
inc
add
sbb
mov
jmp
mov
imul
and
sar
adc
mov
mov
pop
addb
test
sub
mov
mov
add
sbb
lret
out
loop
mov
in
push
add
push
add
scas
adc
mov
jle
adc
mov
imul
cwtl
xlat
loopne
mov
jmp
cld
sbb
push
add
mov
push
pusha
add
jmp
ret
lcall
mov
add
repnz
lret
fnstsw
add
jns,pn
add
xchg
adc
mov
add
add
out
rolb
mov
push
push
jno
cmp
jl
jno
divb
add
or
inc
stos
out
addr16
imul
mov
jo
mov
aas
pop
sub
aam
and
mov
inc
std
mov
aad
in
sarl
out
xor
ljmp
rolb
mov
sbbl
mov
push
out
cmpsb
mov
fs
mov
cmp
dec
testb
les
dec
ja
pop
pop
mov
out
iret
test
dec
xlat
sbbl
lds
fnstsw
cmc
repz
cmp
lea
mov
mov
mov
mov
ja
test
sti
lret
xor
push
jne
xchg
xchg
jecxz
add
add
mov
mov
adc
stos
movsb
pop
sub
push
add
inc
or
mov
add
add
mov
sbb
push
mov
mov
aam
add
pop
fs
add
add
push
jp
push
add
stos
mov
outsl
outsl
dec
fwait
mov
adc
aam
scas
repnz
mov
rolb
jb
mov
sub
add
dec
dec
mov
mov
mov
mov
add
movsl
ds
mov
shrl
mov
sahf
inc
xchg
fs
mov
jmp
ret
gs
or
bound
mov
add
negl
mov
sbb
push
andl
mov
int3
fidivrs
push
inc
lret
out
rolb
mov
rcll
hlt
and
movsl
pop
cmp
mov
sbb
adc
ljmp
mov
push
int
loope
mov
lds
sub
dec
or
ljmp
call
jns
std
mov
jne
add
or
sub
test
mov
jnp
mov
mov
addr16
jae
and
mov
inc
add
pop
loop
mov
add
cmp
je
imul
test
and
mov
test
xchg
std
adc
mov
sbb
pusha
add
push
clc
addr16
cmp
adc
mov
or
add
add
adc
push
xlat
and
mov
call
jecxz
push
add
mov
or
xor
mov
mov
lock
sub
sahf
jp
pop
jle
sbb
mov
test
add
mov
fdivrp
sub
add
movsb
pop
jmp
ja
jno
xchg
imul
or
loope
push
dec
mov
mov
stc
cmp
or
add
add
mov
icebp
imul
scas
lahf
fwait
call
add
inc
pop
sub
add
xor
mov
mov
pusha
add
xchg
mov
cmp
xor
test
adc
mov
leave
test
mov
lds
scas
loop
mov
popf
aad
jbe
jo
mov
inc
pop
fsubrs
jg
mov
aaa
movb
pop
and
mov
pushf
popf
aas
fstps
mov
add
dec
inc
add
mov
push
push
pop
jle
add
daa
into
insl
imul
repz
scas
lret
nop
add
sbb
ds
adc
hlt
cmp
and
jbe
jae
fstpt
mov
jne
hlt
into
sub
add
outsb
cld
push
and
mov
lock
lds
push
add
dec
xchg
add
xchg
aas
stc
loope
imul
add
mov
sahf
pushf
xor
ds
pop
pusha
add
ljmp
std
movsb
lock
xchg
jbe
das
movsb
into
cltd
xchg
fnstsw
pop
jge
adc
mov
iret
das
inc
add
jo
mov
clc
push
add
mov
dec
ds
mov
mov
add
push
gs
inc
inc
enter
clc
xchg
jmp
cmpsb
or
js
add
pop
fsubrs
or
mov
add
cld
into
fcoms
stc
cmp
add
push
xor
add
push
add
cld
sbbl
test
push
out
mov
sbb
mov
int
mov
add
cmp
or
bound
mov
sbb
xor
mov
outsb
cmp
pop
push
das
insl
fiaddl
xor
mov
push
or
and
mov
add
mov
int3
jae
add
and
mov
xchg
add
test
fs
add
jg
pop
out
dec
mov
int3
sbb
jmp
dec
decb
and
mov
add
add
int3
rcl
push
dec
mov
add
test
gs
mov
push
jmp
or
jmp
pop
stos
mov
mov
out
xchg
stos
insl
xor
mov
cmovp
add
mov
or
dec
lock
dec
lret
jns
mov
mov
push
out
mov
sub
add
mov
cli
es
lock
mov
xchg
jl
outsl
cmp
mov
push
fs
addb
add
xchg
mov
pop
jae
stos
iret
push
fs
add
ljmp
xchg
mov
add
ljmp
mov
add
xor
adc
aad
data16
ret
jns
repz
add
xchg
pop
shrl
add
add
mov
test
add
int3
xor
push
add
gs
xchg
call
cld
lahf
jo
mov
add
adc
or
mov
outsb
cmp
push
add
mov
push
add
mov
adc
mov
add
add
mov
push
movsl
cwtl
cltd
out
or
add
rcl
push
ficompl
add
push
push
jecxz
add
loope
out
insl
in
pop
popf
mov
mov
in
and
scas
adc
mov
cmp
mov
mov
pop
pushf
inc
repnz
outsb
sbb
jle
inc
add
mov
mov
jno
cmp
mov
negb
jnp
pop
inc
notb
add
mov
sub
mov
enter
mov
mov
mov
add
fldenv
cmpsl
cmp
mov
rcll
in
pop
add
mov
les
mov
lods
push
rorl
into
ljmp
pushf
xchg
popf
outsb
frstor
ret
bound
mov
fwait
ret
loop
mov
mov
sub
mov
cmp
mov
data16
addb
sub
icebp
lea
mov
add
push
in
add
mov
adc
adc
jb
mov
push
stc
in
test
lods
scas
mov
jge
lods
inc
sbb
mov
add
mov
iret
mov
fnstcw
add
leave
jns
inc
add
or
inc
push
mov
gs
xchg
mov
push
fistl
mov
sub
ret
outsl
mov
fs
mul
mov
idivl
int
jmp
ljmp
dec
stos
movsl
rorl
dec
cltd
inc
add
mov
xor
mov
push
mov
mov
pop
rolb
mov
sub
or
or
jl
stos
push
sahf
jne
js
mov
pop
into
or
add
mov
jb
mov
rolb
repz
in
popa
push
repnz
cmp
add
mov
fwait
testl
mov
add
push
and
mov
mov
addb
dec
xor
add
pop
fildll
mov
test
mov
les
add
mov
add
mov
je
add
scas
in
roll
cmp
add
addb
mov
test
add
popl
or
in
into
rolb
movsl
mov
mov
and
add
ss
addb
mov
xlat
mov
mov
fs
lret
mov
push
cmp
das
aad
jae
repz
mov
xchg
daa
loope
aaa
xor
mov
fdivl
add
mov
mov
addr16
lcall
mov
les
stos
mov
nop
add
int3
xchg
add
lods
jg
stos
adc
mov
and
jno
add
mov
cmp
rolb
mov
adc
mov
ret
lock
mov
mov
dec
das
xlat
or
add
fcoml
mov
add
sbb
sar
sub
add
inc
mov
inc
mov
adc
add
dec
in
pop
aas
or
add
add
sbbl
addb
rolb
mov
mov
mov
fs
inc
pop
rolb
popa
xor
stc
adc
icebp
sub
pop
push
mov
outsl
inc
add
cmp
stos
insb
leave
insb
decb
push
sahf
add
and
add
adc
mov
stos
dec
cwtl
dec
pusha
add
dec
sub
js
mov
and
mov
mov
outsl
mov
dec
ss
jmp
add
sbb
test
cld
bound
mov
adc
mov
test
adc
mov
mov
mov
xchg
push
push
loopne
mov
lods
inc
dec
sub
rorl
add
pop
lret
mov
outsb
push
std
mov
jl
add
mov
je
roll
fdivrs
mov
out
das
jne
lea
xchg
mov
push
lock
mov
xchg
dec
push
out
rolb
lahf
out
and
mov
pop
adc
mov
shll
pop
shrl
dec
adc
test
fists
repnz
jge
sbb
fidivrs
addb
cmpsl
in
push
and
mov
outsl
sti
es
mov
mov
add
fiaddl
lds
cmp
mov
sub
mov
hlt
arpl
add
mov
add
pop
mov
mov
push
loopne
mov
mov
sbb
sub
loopne
mov
fnstenv
mov
jle
add
sub
add
jge
add
add
mov
ss
add
or
cmpsl
sub
addr16
into
addb
clc
insl
jnp
add
sbb
adc
and
mov
cmpsb
mov
adc
imul
lahf
decb
out
mov
scas
loope
xchg
add
xchg
ret
mov
add
movsb
mov
bound
mov
jno
push
jecxz
add
mov
jbe
jno
dec
push
or
sub
mov
add
mov
je
pop
cmp
add
test
mov
lods
or
bound
mov
cmp
jae
cmp
cltd
sti
mov
add
je
fnstenv
mov
fdivs
aad
mov
xor
out
aad
and
mov
dec
stc
dec
repnz
mov
mov
add
pop
jbe
jns
std
mov
push
cmp
clc
sub
jbe
test
sub
pop
sub
add
lea
repnz
mov
lea
mov
addb
pop
ss
add
cmp
fstpl
push
fwait
cwtl
lock
daa
test
hlt
jb
mov
movlps
inc
test
mov
xchg
pusha
add
xchg
cltd
inc
add
mul
add
out
fwait
mov
add
fdivs
cmp
insb
stos
add
mov
es
inc
repz
pop
dec
sub
mov
sbb
mov
mov
pusha
add
and
cmp
mov
ret
pop
and
cmp
mov
int
out
aam
rolb
mov
add
add
add
sub
add
add
test
stos
mov
das
push
add
push
cld
cltd
test
pop
jnp
lods
ja
pusha
add
stos
out
vmovaps
mov
mov
pop
ret
mov
pop
adc
mov
jmp
pop
xor
mov
and
xorl
sub
add
cmpsb
lret
aaa
inc
add
adc
mov
push
jl
popf
xlat
xchg
or
mov
aas
or
add
icebp
inc
add
push
mov
loop
mov
push
jge
out
jne
sub
push
test
add
out
sbb
mov
xor
inc
add
aas
movsb
xor
mov
rolb
mov
clc
mov
inc
sbb
jle
pop
mov
sbbl
fbld
push
dec
rolb
mov
pushf
mov
add
out
fildll
cmp
add
negl
inc
mov
lods
int3
sbb
lock
out
add
sbb
mov
nop
add
ss
mov
xor
mov
enter
inc
add
add
mov
sub
add
sbb
mov
imul
outsb
cmovl
xchg
and
std
jo
mov
sbb
mov
xchg
aas
fnstcw
daa
push
lret
xor
add
mov
sbb
cltd
dec
aas
cmp
std
mov
push
push
sub
test
iret
test
jnp
out
into
cmp
mov
jmp
dec
in
movsb
or
in
pop
fs
adc
xchg
leave
adc
ret
jmp
jg
inc
add
push
inc
adc
mov
addr16
in
mov
icebp
outsl
push
jbe
outsb
outsl
popa
mov
add
orl
icebp
pop
aam
cmp
add
stos
xchg
add
xchg
imul
js
cmc
mov
inc
lcall
fcompl
popa
std
loop
mov
push
mov
add
pop
xlat
gs
push
movsl
rolb
mov
add
pop
das
aaa
inc
shll
mov
sbb
push
and
leave
inc
adc
inc
fnstenv
sbb
mov
or
test
mov
leave
jmp
xchg
fwait
push
lock
rolb
mov
bound
mov
fwait
jo
mov
test
popa
ss
rorl
cmpl
mov
aam
jl
nop
add
cmp
add
jbe
dec
jbe
js
ret
xlat
mov
or
leave
mov
mov
cmp
mov
add
push
add
repnz
je
outsl
mov
push
adc
mov
push
add
push
add
inc
jge
jae
fdivrl
dec
dec
lock
push
jnp
add
fadds
add
repz
lahf
pop
icebp
dec
inc
push
idiv
data16
add
push
cltd
sti
cmp
mov
dec
lahf
and
jns
pop
xchg
in
jae
jg
inc
add
lret
or
ja
data16
inc
xchg
xor
add
mov
mov
adc
mov
adc
outsl
jle
xchg
xor
mov
mov
push
jns
iret
repnz
and
add
add
mov
mov
arpl
inc
xchg
adcl
pop
stos
xchg
mov
jbe
add
bound
mov
add
imul
mov
mov
mov
jo
mov
cmp
loop
mov
lods
addr16
test
and
mov
add
push
stos
popf
sub
pop
mov
out
add
push
adc
mov
mov
or
pusha
add
je
add
outsl
data16
enter
pop
in
push
cmc
xchg
push
add
movw
cltd
sub
adc
add
test
dec
std
mov
mov
add
ficompl
jmp
aad
sub
int3
mov
jecxz
add
mov
rolb
sbb
daa
cmp
decb
xchg
.byte
mov
