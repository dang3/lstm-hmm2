mov
daa
push
and
pop
lods
mov
mov
sub
cli
das
sbb
aaa
shll
dec
xchg
push
sbb
daa
repnz
aad
repz
ss
push
pop
adc
stos
pusha
add
jnp
test
cmp
adc
dec
imulb
dec
ret
shll
lcall
add
repnz
sub
std
mov
out
dec
cmp
repz
push
and
add
arpl
xchg
addb
mov
test
pop
dec
mov
negb
enter
imul
push
add
xchg
sub
add
sarl
dec
in
and
sbb
mov
mov
add
idivl
cwtl
pop
push
add
xchg
sub
in
jb
scas
push
test
test
add
nop
pop
or
rolb
dec
mov
add
push
aad
add
push
cltd
mov
or
add
stos
idivl
or
sub
test
pop
and
xchg
addb
add
fmuls
fisttpl
jmp
sbb
fistpll
xchg
ja
cmc
and
push
mov
mov
outsb
jae
jnp
sub
stos
out
dec
stos
inc
add
or
mov
dec
add
mov
push
js
mov
in
popa
and
lods
loop
les
in
xchg
outsb
pop
leave
pop
jns
and
test
or
rorb
sbb
fsub
mov
add
inc
add
fsub
fistps
insb
arpl
jge
daa
dec
mov
out
cmp
mov
jle
lcall
sub
adc
xlat
sbb
aam
jbe
inc
add
outsb
add
push
add
inc
add
sub
add
repz
popf
xor
sub
sub
mov
add
ret
xor
sbb
add
repz
in
aad
xor
add
jb
push
ss
or
int
mov
cmp
and
pop
cmp
psubb
lods
add
xchg
ret
push
mov
adc
xchg
xor
in
cmp
outsb
xor
add
data16
call
dec
sbbl
icebp
test
xor
testb
sbb
stc
scas
xor
dec
xchg
mov
and
lock
test
add
mov
cld
sbb
pop
nop
fwait
xor
adc
and
inc
andl
cltd
outsl
add
cmp
dec
icebp
das
mov
lea
jbe
aam
push
jns
add
das
push
das
mov
adc
leave
mov
std
lahf
imulb
add
dec
scas
xchg
mov
push
lds
xchg
sub
pop
inc
out
xchg
xchg
cmp
add
mov
dec
lods
mov
jecxz
ret
mov
into
lds
add
sbb
or
mov
cmp
imul
outsl
mov
ss
lods
ds
lcall
mov
fidivrl
jb
shl
lea
or
mov
and
xchg
mov
rolb
jae
stos
jnp
push
add
addb
add
sub
inc
add
add
and
nop
repnz
cmpsb
in
cmp
lcall
int
rolb
add
adc
pop
pop
pop
cld
mov
dec
sbb
add
jg
mov
dec
mov
rcrb
addb
push
lds
movb
jecxz
add
in
test
pop
xchg
dec
push
inc
add
push
dec
sub
adc
nop
clc
out
mov
outsl
out
js
mov
fneni(8087
lea
cwtl
push
sub
movl
outsl
outsl
inc
add
pop
pushf
out
and
in
lret
bound
lret
xlat
mov
out
data16
pusha
add
push
jo
das
out
mov
pop
fwait
lret
outsl
jge
xchg
mov
push
add
mov
daa
jne
lahf
inc
add
int
push
movsl
push
rolb
scas
mov
cmpsl
add
in
adc
pand
mov
call
adc
test
daa
dec
cmpl
fwait
scas
cmp
test
add
pop
dec
dec
push
aam
icebp
int3
test
add
out
pusha
add
push
fisttps
add
jg
loope
out
rolb
cmp
add
hlt
lret
ret
pop
jl
cmp
cltd
das
bound
mov
pop
aaa
add
add
cmp
xchg
das
cmpsb
mov
sahf
loop
jno
dec
ljmp
add
scas
xlat
mov
sbb
mov
pop
mov
stc
fcoms
faddl
test
shrl
mov
int
aas
jno
mov
imull
inc
test
jg
add
xorl
or
aad
lock
imul
mov
scas
push
mov
pop
movsb
and
outsb
push
pop
jmp
add
add
ljmp
ror
lcall
pop
gs
sbb
call
sub
stos
std
mov
imul
cltd
lock
mov
xacquire
test
sti
test
add
dec
je
lahf
add
popa
dec
aam
orl
push
inc
in
lods
xor
jge
les
out
in
xor
lcall
stos
clc
cmpsb
jp
pusha
add
mov
jbe
jb
in
iret
ds
not
push
jae
mov
mov
movsb
sub
cld
pop
mov
loop
or
ljmp
cmp
call
hlt
lahf
mov
jmp
adc
add
add
pop
ds
sar
testb
sbb
lea
lods
or
mov
sarl
cmp
movsl
lahf
mov
movsl
movl
sub
jno
add
loopne
mov
inc
shl
add
push
fmuls
lret
les
sub
add
icebp
sub
mov
movsb
leave
test
pop
clc
jae
movsb
mov
adc
bound
addb
scas
cmc
test
pop
movsl
incl
mov
imul
gs
sahf
sti
pop
inc
pushf
mov
or
out
sub
mov
aas
pusha
add
mov
in
xchg
jno
push
nop
enter
jb
cmp
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
inc
and
add
pop
into
dec
inc
add
add
arpl
jnp
dec
clc
mov
fwait
enter
cmpsl
mov
mov
nop
mov
wrmsr
xchg
or
mov
scas
fbld
out
pop
div
mov
adc
dec
fs
jbe
shl
lret
xchg
out
xorl
mov
out
js
push
mov
jnp
inc
add
in
mov
xlat
jne
fildll
and
lea
cmp
dec
ffree
add
aaa
faddl
rcr
jmp
pop
rorl
incb
add
push
pop
addb
lds
push
add
jne
cwtl
pop
xchg
push
inc
imul
inc
add
cmpsb
outsl
ret
pop
jns
stos
lea
js
jbe
int3
fldl
cmpsw
adc
mov
ljmp
shrl
out
in
inc
add
daa
mov
xlat
ss
mov
cmpsb
cmpsl
dec
ficomps
xor
es
int3
add
add
lret
push
xchg
adc
pop
imul
add
addb
aaa
adc
and
outsb
mov
inc
aas
jg
lea
in
and
xchg
and
add
and
xchg
rolb
scas
inc
mov
add
adc
or
mov
enter
daa
pop
cltd
and
push
mov
or
out
and
or
lahf
jae
add
scas
insb
int
xchg
mov
inc
pop
movsb
repz
inc
jge
cli
bound
hlt
cmp
repz
cwtl
gs
inc
imul
mov
lock
out
loop
add
xlat
mov
test
add
cld
sub
pop
in
sub
mov
add
push
pop
mov
shlb
mov
sub
lock
jno
add
data16
mov
pop
cmc
testb
mov
clc
fisubrl
dec
push
popl
add
pop
gs
fisubrl
push
and
jecxz
daa
sub
stos
mov
ja
jnp
or
cli
pushf
sub
jmp
add
shlb
and
inc
add
sahf
popa
pushf
ficoms
repz
push
fwait
jnp
outsb
push
sub
jecxz
aam
sti
inc
add
cmp
in
shr
loop
pop
jmp
jle
adc
mov
rclb
pop
inc
add
adc
movb
pop
insb
jae
fld
add
aam
hlt
mov
loopne
lahf
sarb
add
jne
loope
fstl
cmp
add
lret
xor
add
mov
or
dec
clc
fidivrl
lahf
stc
dec
lods
test
js
imul
ret
lcall
xor
lret
lods
push
ljmp
add
xor
add
test
push
adc
inc
scas
push
xchg
fs
outsb
es
xchg
mov
repnz
mov
dec
daa
pusha
add
mov
sbb
inc
add
push
clc
movups
inc
add
inc
mov
add
es
push
add
add
mov
mov
aam
repz
xor
aam
jecxz
pop
ret
sub
dec
rcll
add
decb
add
mov
mov
and
popf
out
test
icebp
pop
sbb
dec
push
das
sbb
pop
mov
sub
sub
lret
call
sbb
cmpsl
mov
mov
add
and
addb
outsl
std
rol
pop
push
mov
ds
adc
filds
jle
dec
call
xchg
ret
cmp
inc
add
insl
jecxz
addb
or
ss
adc
scas
and
ds
daa
sbb
mov
xchg
pop
dec
rcrl
ljmp
sbb
adc
dec
imul
lahf
push
sahf
out
inc
add
iret
xor
xor
and
idiv
aad
mov
movb
mov
addb
jg
xlat
ljmp
lock
adc
push
sbb
pop
loopne
add
stc
dec
xor
sbb
and
adc
cmp
mov
ror
lahf
loope
das
push
ljmp
push
cmp
cmc
jmp
add
xchg
les
rcrb
clc
int3
pop
cmp
add
test
dec
xchg
pop
insb
std
gs
repnz
orl
stos
mov
cmc
icebp
sarl
jnp
add
mov
mov
push
movsl
cmp
lock
in
call
cmp
pop
imul
dec
mov
cwtl
loop
mov
cld
xor
xchg
sub
sbb
mov
add
jb
popa
mov
add
add
add
mov
pop
xor
mov
xor
test
ret
ret
addr16
iret
push
fcmovnu
adc
sub
lds
push
or
mov
in
in
xchg
and
cmpsb
pop
movb
call
jge
mov
stc
mov
or
movsl
pushf
inc
add
or
add
and
shr
dec
sti
ss
sti
pop
mov
lahf
adc
out
adc
push
arpl
add
jle
xor
out
inc
cmp
dec
mov
add
das
fs
pop
out
ss
push
in
and
mov
sbb
add
mov
rcrb
add
sub
pop
mov
dec
sbb
add
xchg
push
add
cmc
aaa
lods
or
sub
pop
push
jae
push
dec
out
jb
dec
dec
cmp
ret
aad
push
shll
sub
jns
popa
jae
iret
fsubs
cwtl
rcl
inc
pushf
pop
outsl
xor
fstpt
les
fwait
mov
out
lret
cli
mov
in
xchg
sbb
addb
jp
mov
nop
cltd
pop
int
sub
add
cmp
adc
iret
ss
add
sti
xor
movsl
xchg
adc
and
cmp
je
sbb
jmp
push
add
cld
cwtl
bound
cmp
pop
and
jmp
add
pop
daa
int
sbb
xchg
gs
add
es
shr
outsb
popf
sbb
sarb
mov
xchg
ja
dec
aaa
arpl
lcall
inc
add
mov
negb
xchg
mov
lret
test
dec
sar
jge
mov
movb
jmp
mov
lret
not
add
pushf
or
icebp
xor
mov
add
nop
mov
jge
mov
rcll
push
dec
fadds
not
xchg
add
mov
lcall
ret
and
add
add
out
leave
rolb
xchg
inc
jnp
and
dec
mov
xor
ret
sub
roll
or
mov
cmp
cli
dec
scas
movsb
jno
lods
mov
test
aaa
bound
xchg
and
add
fstpt
fs
add
add
and
cmp
dec
adc
jo
adc
dec
mov
lock
add
cli
shrl
sub
arpl
stos
pop
test
pop
popa
insl
scas
xor
xor
stos
add
jmp
cmc
mov
sub
mov
imul
adc
idivb
sarb
inc
add
cwtl
sbb
cltd
in
mov
mov
cmpsb
xor
sbb
push
add
add
push
popf
out
push
inc
jge
mov
pop
jns
outsb
xchg
aaa
or
hlt
aad
pop
push
or
imul
or
add
add
xchg
mov
pusha
add
add
not
sbb
popf
nop
cli
data16
mov
jmp
adc
test
mov
jmp
adc
jge
inc
sti
cmc
stc
mov
rolb
cwtl
pop
repz
test
lahf
in
cwtl
mov
add
add
mov
adc
fs
shrb
daa
clc
cwtl
mov
mov
addr16
jo
jl
arpl
fwait
les
outsb
cmp
add
sti
push
sahf
sbb
shrl
inc
push
cltd
rcl
std
mov
pop
cmpsl
testl
jp
jmp
jp
or
test
movsl
arpl
jo
add
sbb
jg
stos
lcall
aaa
mov
mov
daa
inc
add
xchg
jne
xchg
movsb
cld
jbe
jg
or
cwtl
push
adc
fwait
loope
loope
js
cmp
jg
sub
cmp
xchg
arpl
push
xorl
movsb
mov
jmp
imul
aas
divl
pusha
add
inc
add
push
outsl
push
xor
mov
rcrl
rcll
inc
fiaddl
sbb
xor
sahf
lea
and
test
daa
shr
cmpsl
fwait
dec
insl
mov
sbb
xchg
push
mov
mov
inc
add
clc
xchg
scas
mov
loop
stc
in
pop
pop
std
iret
cmp
jle
xchg
mul
int3
fprem1
sub
jge
popf
or
aam
sbb
push
xor
push
cmp
shll
insb
pop
jbe
mov
arpl
jo
jbe
jl
mov
sub
add
mov
add
arpl
sbb
inc
add
fildll
leave
es
lret
fcoml
pop
mov
in
pop
loop
out
jne
mov
icebp
mov
xor
pop
cmpsb
pop
jo
shrl
in
pop
out
xchg
mov
enter
outsl
cli
mov
push
adc
repz
aam
jp
xor
add
cmp
bnd
es
xor
jle
mov
iret
fistpl
in
push
adc
jl
dec
mov
sub
dec
int3
xchg
xor
out
jle
and
adc
lods
pop
xchg
mov
ret
scas
cmp
mov
enter
add
xchg
pop
adc
dec
push
shll
add
inc
dec
and
xor
jmp
pop
jecxz
jb
bound
popa
mov
rolb
cmp
add
into
test
arpl
ja
insl
icebp
lods
cltd
adc
bound
psubsw
jo
cmpsb
xor
adc
cs
jmp
addr16
aam
test
mov
xor
jb
mov
dec
popf
scas
pop
push
add
mov
ss
mov
sbb
or
or
xchg
add
push
adc
mov
xchg
mov
rol
repnz
shrb
push
xchg
cld
adc
xchg
imul
inc
stos
jo
and
cmpsl
shll
jmp
sti
fs
aas
les
push
js
sarl
adc
fsubrs
xchg
out
xchg
iret
test
cmp
push
pop
int
jl
push
movsb
das
movsl
mov
nop
ficompl
pop
loopne
adc
add
sti
add
pop
inc
add
push
inc
lea
jecxz
xlat
movsb
mov
cmp
pop
jl
or
jnp
adc
sub
int
ror
sub
push
nop
dec
leave
or
cwtl
pop
inc
mov
cmpl
fcomps
jle
sub
addb
sub
xchg
add
lods
adc
cmp
adc
lcall
orl
dec
aaa
jmp
js
jmp
or
outsb
jg
call
sub
xchg
add
out
nop
sbb
mov
push
movb
mov
adc
popf
arpl
jge
push
push
add
adc
scas
aaa
insb
cmp
jno
jo
int
add
add
add
ret
mov
and
int
rclb
je
ror
fsubs
mov
loop
and
xor
dec
aam
nop
push
rcll
push
add
cmp
fs
cmp
outsb
push
iret
mov
adc
xchg
or
inc
add
mov
ss
mov
or
cld
cmp
sahf
or
addr16
add
add
enter
nop
addr16
xchg
fistpll
xchg
inc
add
push
test
xor
pop
sub
add
jp
leave
int3
push
insl
sbb
pop
ss
scas
push
shr
mov
cmp
rclb
cmp
or
loop
sbb
mov
fidivrl
in
xchg
dec
rolw
lock
dec
cmpsb
mov
arpl
rcll
ds
sbb
cmp
not
aad
sbb
daa
jg
lret
dec
push
xor
xchg
adc
add
pop
inc
imul
test
cmpsb
ret
lahf
mov
mov
jge
push
add
add
or
sbb
inc
sbb
xchg
sub
enter
add
add
dec
les
stos
or
cmp
add
scas
decl
sub
incl
dec
mov
out
or
out
test
dec
arpl
xchg
inc
add
cmp
adc
out
scas
jb
and
mov
popf
loop
and
les
in
mov
add
add
rolb
addr16
out
lret
daa
aaa
jecxz
mov
ret
adc
daa
add
or
lods
lcall
mov
xchg
push
add
call
sub
fldcw
adc
push
inc
mov
lcall
lret
movsl
imul
add
pop
jb
loop
cs
test
xor
js
xchg
pop
fidivl
fucomp
ror
insb
mov
in
push
arpl
push
incl
call
in
dec
aas
scas
mov
sbb
imul
sti
daa
pop
scas
adc
faddl
inc
add
call
bound
lcall
jmp
cltd
push
adc
cld
fs
rcrl
pop
and
lods
dec
roll
mov
fucomip
dec
cmpsl
pop
push
sub
add
test
pop
rorl
insb
push
or
lahf
test
sub
lret
or
cmpsl
repnz
repnz
push
outsb
data16
jecxz
lahf
pusha
add
pop
xor
xor
out
inc
add
rorb
push
repz
das
pop
imul
adc
mov
daa
int
sub
and
cli
enter
adc
aas
ja
sub
sub
inc
add
addl
mov
push
and
loop
xchg
aam
xor
je
push
jmp
or
jae
mov
fisubrs
insb
cmp
jle
inc
add
pushf
jae
xchg
jne
xchg
or
in
mov
shl
lods
je
mov
inc
or
dec
jns
fs
sahf
popa
sti
xchg
pop
sub
xor
mov
pop
push
push
leave
xchg
out
sub
push
add
aad
xchg
dec
xchg
pop
sahf
aad
call
dec
add
ljmp
mov
movsb
cmp
cmp
jnp
lods
push
sti
mov
lock
out
xchg
xor
xor
rolb
push
jg
daa
cltd
push
pop
adcl
sbb
pushf
nop
test
sub
mov
stc
int
cmpsb
into
rclb
push
rolb
bound
or
fs
ljmp
aas
cmp
mov
popf
mov
mov
add
add
rolb
loopne
repz
push
shll
lock
mov
in
mov
loope
insb
jo
push
xchg
lds
mov
jbe
clc
mov
pop
das
pop
and
jle
sahf
xchg
mov
push
fs
pop
inc
add
mov
imul
scas
fadds
add
pop
out
stos
xor
push
lahf
inc
cli
lea
xchg
adc
movb
pop
sbb
inc
add
inc
add
sbb
add
mov
scas
jb
xchg
in
test
or
icebp
leave
int
call
cmp
inc
xor
adc
mov
movb
in
pop
xchg
push
adc
imul
dec
inc
push
or
movsl
out
fdivrl
ds
mov
add
mov
xchg
addb
mov
jb
js
mov
enter
add
gs
mov
cmp
int3
xchg
jle
or
rcll
mov
movsl
pop
xchg
xor
push
rcrb
jg
popa
fisubrl
in
mov
insb
setne
clc
mov
mov
mov
out
faddl
cmp
or
add
dec
xor
xchg
mov
sub
fistl
pop
lods
sbb
ljmp
pop
dec
push
xchg
jl
add
and
aas
sti
int
addl
adc
aam
xchg
cltd
popa
stos
imul
outsb
movb
cmc
and
xsha256
cmpsb
shll
iret
or
inc
add
pop
pop
clc
mov
pop
rolb
lea
shll
pop
inc
push
hlt
ss
jo
lcall
cmp
add
insl
fisttpll
je
and
imul
addb
lret
or
add
sbb
add
pop
lahf
mov
cs
cmc
inc
dec
adc
xor
xor
jbe
add
jno
cmp
iret
or
pop
js
cmp
stos
mov
inc
jb
xchg
scas
std
cmc
test
hlt
dec
sbb
add
add
aam
or
sub
inc
outsl
in
out
fsubl
dec
out
xlat
ds
mov
dec
or
roll
repz
popa
or
inc
add
sbb
sbb
cmp
xchg
and
pop
xchg
in
pop
jae
movsl
inc
test
or
inc
add
xchg
adc
test
xor
mov
scas
cmp
mov
add
daa
addb
sbb
mov
inc
jae
add
mov
add
mov
pushf
repnz
addl
mov
scas
daa
aaa
rcrb
mov
add
push
add
push
popl
add
and
rcl
xchg
cwtl
ds
popa
pop
add
jns
scas
js
inc
inc
ficomps
add
lods
popf
fstpt
stos
jbe
lea
in
pop
mov
pusha
add
jo
pop
cli
mov
add
icebp
movb
add
xor
push
add
bnd
std
push
sub
popf
jnp
add
sbb
pop
cmp
fstps
addb
pop
lahf
sub
cmpsl
xchg
insb
cmpsb
iret
jmp
outsb
cs
add
mov
pop
pop
and
test
cmpsb
out
in
mov
jns
lods
pop
or
sub
int3
jle
das
insl
outsb
stos
pop
mov
jge
inc
pop
les
pop
adc
mov
or
pop
mov
mull
stc
adc
and
mov
or
cld
push
push
sub
movsl
xchg
out
jo
in
xor
and
outsl
jns
pusha
add
lods
xor
sbb
xor
arpl
pop
lods
sbb
addb
cmp
inc
inc
add
push
ja
sbb
xchg
dec
mov
dec
xchg
arpl
sbb
jbe
xchg
imul
mov
xor
fcompl
cmp
movb
xor
outsb
and
xchg
add
adc
add
lds
pop
cmp
mov
out
hlt
call
add
add
aam
test
lods
mov
dec
shrl
jnp
adc
aas
mov
imul
add
pop
push
cwtl
leave
aas
mov
int3
out
pop
xor
aaa
in
test
mov
mov
loop
or
out
xchg
and
add
jae
movsl
gs
fiaddl
sbb
and
add
jno
add
ret
jb
add
std
mov
xor
les
push
push
shrl
mov
rolb
stos
and
loopne
popf
xchg
cmp
mov
dec
inc
jae
cmp
inc
jbe
cmp
xor
add
mov
scas
dec
in
or
push
divl
add
int
cmp
add
in
or
out
ret
or
xchg
add
insl
xchg
out
test
adc
add
cld
adc
mov
cs
call
push
inc
clc
xor
sti
das
loopne
aam
lret
dec
mov
sub
sbb
jae
mov
stos
mov
data16
pop
adc
adc
mov
pusha
add
fcompl
sbb
das
fiaddl
add
pop
pop
add
and
and
mov
mov
hlt
pop
add
int
pop
jecxz
add
mov
add
sub
pushf
pop
jecxz
push
add
jg
push
mov
push
pop
inc
add
jmp
sbb
je
sub
out
into
rolb
and
inc
jns
adc
adc
ds
repz
mov
iret
fildl
dec
frstpm(287
push
push
add
imull
loope
adc
dec
out
shlb
rolb
inc
add
addr16
lds
add
push
out
cld
fwait
adc
cltd
stc
movb
mov
add
movsb
mov
and
and
and
sub
mov
ret
es
je
and
mov
pop
xor
ja
loopne
add
inc
mov
push
xchg
test
stos
inc
add
enter
ret
fs
insb
sbb
mov
es
icebp
mov
lods
je
fwait
push
in
inc
mulb
loop
add
ror
mov
xchg
mov
sbb
jg
call
pop
imul
mov
rcll
xchg
test
sbb
add
popa
push
or
arpl
add
pop
adc
push
add
imul
or
add
pusha
add
lds
into
and
jbe
push
add
movsl
fsts
addb
xor
cmp
jecxz
mov
orl
lock
aam
dec
rcrl
js
push
add
movsb
iret
mov
xchg
add
test
in
bound
cmp
sub
js
arpl
mov
bound
jne
daa
adc
or
mov
sub
outsb
sbb
lods
in
jp
lret
fistps
test
fcmovnu
pusha
add
push
mov
enter
adc
add
aaa
mov
call
roll
call
prefetch
xchg
leave
roll
aam
repz
outsl
adc
ljmp
sbb
in
jmp
mov
mov
xchg
lret
aam
add
pop
popa
pop
scas
sbb
cmp
cltd
fldt
out
addl
dec
cli
sti
sarl
fistl
add
add
ss
sti
loope
cmc
or
sarb
fucomi
insb
in
fistps
sti
adc
add
jns
add
lea
mov
call
out
out
cmp
sub
insl
addb
push
xor
jmp
test
add
aaa
and
jl
push
add
jo
aad
add
adc
ja
jecxz
les
xchg
mov
ret
cmpsl
enter
mov
push
sti
subl
hlt
enter
movsb
enter
fnstenv
jnp
add
mov
into
dec
cmp
clc
push
icebp
inc
ret
sbb
int3
or
aaa
adc
dec
dec
xchg
xchg
push
leave
test
pop
mov
nop
pop
cmp
loopne
movsb
xor
aam
aam
push
jg
sbb
pusha
add
jbe
add
mov
add
jmp
cmp
dec
addr16
enter
and
bound
and
push
pop
xchg
mov
mov
insl
ret
push
sub
add
out
dec
daa
and
add
mov
rcr
dec
xchg
fnsave
push
mov
jle
outsl
mov
dec
loopne
or
cltd
sbb
add
ret
xchg
addl
push
jmp
xchg
lods
inc
sbb
lahf
lret
mov
push
js
add
or
icebp
xchg
mov
jno
mov
sbb
std
inc
jl
xor
into
jge
mov
inc
push
add
sti
stc
adc
xlat
adc
mov
fwait
in
sbb
cmpsb
test
mov
aas
mov
mov
fstp
cld
adc
add
movsb
sub
dec
xor
dec
xor
aam
sub
lcall
xor
in
into
adc
cmp
aam
inc
mov
push
int
push
sub
push
adc
mov
jno
addr16
mov
fistps
ficoml
push
jmp
popa
xchg
repz
out
mov
xchg
inc
add
mov
ss
jmp
add
aad
add
call
movsb
mov
outsb
xorl
or
add
test
cli
inc
add
and
and
dec
pop
loop
pop
mov
movb
xlat
adc
or
mov
lods
adc
jecxz
gs
xchg
dec
xor
cmp
iret
incb
pop
pop
mov
sbb
addl
push
xchg
dec
jae
int
insb
mov
jnp
cwtl
sub
ror
sysenter
fsubp
mov
add
inc
add
add
dec
pop
add
das
and
inc
add
in
mov
cli
xchg
aam
rolb
mov
cli
push
stc
push
enter
jne
in
ljmp
xor
lcall
int3
das
dec
rol
das
add
jge
add
out
aas
push
rcll
stos
test
add
mov
lret
dec
imul
jg
inc
add
mov
enter
lcall
push
fsubs
xorl
add
xchg
xchg
movb
sti
dec
in
cltd
rcrb
add
in
roll
pusha
add
add
xchg
mul
movsb
arpl
call
les
jle
push
add
inc
add
fidivl
inc
rcll
xchg
pop
addb
icebp
mov
in
pop
xor
sbb
dec
cli
test
out
dec
sbb
int
push
mov
movb
add
arpl
jmp
xchg
es
inc
add
pop
dec
test
pop
add
rcl
add
pop
xchg
movsl
scas
rolb
fmull
xchg
sarb
daa
push
pop
inc
pop
sahf
nop
or
add
rolb
fstpl
aad
add
ret
xchg
lea
pushf
enter
pop
jne
stos
cli
pop
stos
xor
add
sub
jge
dec
pop
or
into
push
imul
sub
mov
mov
sub
xor
out
mov
roll
jne
mov
pop
test
dec
data16
and
cmp
xchg
dec
xor
xchg
addr16
jg
pop
pop
dec
xchg
test
jp
push
mov
dec
aad
pop
ja
sub
or
movsb
adc
aaa
adc
pop
movb
mov
add
aaa
xor
jge
cli
arpl
addr16
inc
add
add
outsl
arpl
inc
pop
mov
out
xchg
leave
inc
push
cmp
mov
xor
or
dec
repz
add
scas
arpl
xchg
repnz
leave
sub
aaa
dec
xorl
sub
testb
mov
mov
mov
add
xrelease
pop
push
push
push
cmp
pushf
xor
xor
sub
jnp
fcmove
popf
mov
push
add
mov
dec
xchg
push
xlat
fisttpll
lods
stos
sub
clc
and
rclb
sub
je
movb
or
lods
out
sub
push
adcl
or
mov
push
mov
pusha
add
adc
add
rcrb
das
out
jmp
aad
imul
mov
cmp
daa
rolb
add
insl
es
inc
test
sahf
mov
aad
pop
adc
sbb
mov
xor
xchg
inc
push
das
adc
int
add
ffree
add
jg
cmpsl
sbb
mov
add
je
add
fs
sbb
xchg
cltd
sub
filds
add
push
pop
ret
int
orl
pushf
clc
pushf
push
outsl
nop
mov
addl
cmpsl
sti
mov
test
rolb
cmp
add
sbb
pop
ret
inc
add
fbld
in
pop
sbb
mov
sbb
call
add
add
mov
leave
imul
push
inc
lret
fs
or
cltd
in
push
add
add
aam
fnstcw
lds
dec
mov
dec
icebp
rorb
outsl
inc
sahf
jne
shll
dec
nop
das
repnz
cmp
imul
daa
xchg
sarl
inc
xchg
dec
mov
std
mov
add
jge
adc
push
mov
aad
stos
jns
push
xchg
push
or
adc
jne
rcrb
lods
test
push
lds
lods
lods
jbe
nop
lods
outsb
ljmp
jl
add
movsl
fildl
mov
jno
in
jb
cld
std
mov
popa
iret
push
add
jo
out
fadds
inc
add
scas
hlt
adc
add
ds
rolb
in
in
imul
jl
popa
mov
lods
les
inc
add
xchg
mov
add
sar
pop
incb
add
pop
dec
sbb
jmp
xor
sti
push
push
push
xor
aas
xor
iret
pop
fldl
mov
lcall
xor
push
mov
fs
or
add
and
push
fwait
dec
dec
ret
int3
dec
pop
test
add
aaa
ja
add
mov
mov
pop
adc
in
je
mov
incl
push
outsl
cwtl
addb
add
aas
sub
fcoms
lea
mov
inc
add
jg
les
sub
outsb
xor
add
add
xor
das
sahf
inc
add
push
sub
add
lcall
sub
and
inc
test
pop
jno
xchg
mov
add
subl
xchg
xchg
loop
inc
into
lret
sti
and
mov
jle
add
fs
mov
add
cld
jnp
add
mov
or
push
inc
add
inc
pop
inc
push
movb
lahf
mov
mov
mov
pop
inc
nop
jnp
sbb
stos
nop
enter
sub
jb
mov
jp
sub
jl
lds
cwtl
rcr
ja
add
sbb
mov
sub
or
inc
lods
in
clc
lret
and
fdivr
push
cwtl
and
std
dec
xchg
jo
lcall
adc
mov
insl
imul
xchg
imul
dec
jbe
push
es
pop
mov
add
jle
add
dec
adc
movsb
cs
inc
jle
mov
cmp
cmp
add
xchg
scas
fldt
js
mov
shrl
ss
and
mov
pop
insb
xor
inc
add
jb
daa
push
mov
std
xchg
jecxz
fidivrs
aaa
pushf
mov
add
scas
sbb
hlt
pushf
bound
dec
out
rcll
sbb
or
xchg
loop
pop
cmp
cld
push
jns
sbb
imul
shrl
dec
push
inc
add
mov
lods
inc
lea
add
jns
iret
stc
and
jecxz
jb
and
movsl
fcmove
es
add
add
stc
push
push
jecxz
mov
mov
and
add
mov
xchg
dec
pop
pusha
add
add
cmp
mov
mov
inc
mov
roll
add
faddl
add
pop
mov
addb
mov
mov
add
jecxz
inc
add
fs
les
stos
scas
dec
add
or
mov
add
jl
jnp
ja
rolb
add
add
testl
icebp
orl
addr16
stos
addb
pop
or
cmpsb
int3
dec
into
sbb
or
pop
xchg
cmpsb
je
fstl
outsb
cltd
jp
cmp
cwtl
push
xor
cmp
sbb
xchg
push
and
and
lods
faddl
add
cli
in
sti
int
add
insb
in
pop
test
push
xchg
adcl
jb
mov
aad
mov
leave
filds
add
inc
imul
scas
out
dec
inc
inc
add
sbb
icebp
inc
and
xchg
outsb
neg
repz
ret
cli
incb
shr
push
push
sbb
inc
mov
daa
daa
addr16
and
mov
mov
push
pusha
add
inc
jg
movb
out
ss
xchg
lcall
fnstcw
cmp
jmp
sahf
es
pop
rcll
add
pop
outsl
adc
mov
add
stos
out
stos
stos
ficompl
add
das
decb
xor
fisubl
pop
sub
cmp
fsub
adc
xchg
jbe
lcall
addb
into
push
stos
dec
push
or
popa
popa
xchg
ds
pop
mov
xchg
scas
pop
mov
shll
xor
scas
cmp
add
mov
shrl
inc
add
fadd
outsl
shrl
adc
add
adc
or
sti
dec
stc
imul
pop
push
and
pop
movsl
enter
test
pop
stos
aaa
and
adc
push
xlat
push
xchg
pop
jecxz
xchg
xchg
aas
test
dec
repz
add
cmp
jns
push
shlb
dec
sub
rolb
cmp
add
dec
add
mov
add
fstpt
mov
add
bound
cwtl
in
add
in
adc
dec
loopne
insl
mov
push
fcompl
mov
jae
add
pop
sub
xor
shlb
bound
sbb
sbb
and
popf
jle
rolb
add
add
lods
gs
in
outsb
imul
adc
mov
ss
push
jl
addb
push
rolb
int3
jecxz
jne
dec
out
or
cmpsb
push
or
ret
pop
add
je
add
push
sarl
jno
and
xchg
inc
add
push
pop
xchg
repnz
sbb
test
sbb
sar
aaa
jmp
and
arpl
mov
add
movb
mov
gs
add
lret
pop
sbb
add
add
jns
out
lods
aad
add
loopne
jae
sub
push
adc
add
mov
lods
or
add
mov
mov
repnz
pop
dec
cmp
cld
adc
adcl
add
sahf
icebp
pop
sbb
iret
mov
dec
stc
test
adc
int3
jg
arpl
inc
add
fimull
mov
sbb
in
cltd
add
add
add
add
xor
cmp
mov
addb
cmp
stos
jg
and
mov
lds
bound
pop
les
inc
jp
aad
in
pop
fistpl
in
sbb
mov
xor
dec
mov
iret
repz
cwtl
cltd
out
test
nop
lcall
rcrb
adc
movb
add
cli
pushf
sahf
andl
int3
pop
push
into
push
mov
pop
dec
mov
imul
add
add
mov
dec
std
push
jns
cmp
jae
lea
mov
sub
mov
mov
lret
or
iret
xchg
pop
or
popa
repnz
fimuls
inc
add
mov
add
or
push
jno
pop
xchg
clc
ja
xchg
inc
add
xor
enter
xchg
addb
mov
pop
cmp
inc
add
stc
daa
adc
dec
add
xchg
dec
sub
enter
push
movb
sub
cs
push
hlt
sub
dec
movsb
xor
cmp
add
xor
in
add
lret
ss
in
mov
test
mov
outsb
lcall
mov
sbb
lahf
into
jmp
push
popf
addb
iret
mov
imul
lock
test
stc
cmovp
fisubs
lret
sbb
fwait
mov
popa
push
add
add
repz
cmp
sbb
cli
jp
adc
mov
rolb
out
mov
ret
add
inc
add
pop
or
add
ljmp
pop
cmpsb
and
push
test
jns
imul
cld
or
imull
jno
add
inc
cld
inc
add
push
add
call
int3
mov
add
lock
sbb
int
adc
cld
mov
adc
mov
jb
xchg
add
das
test
into
push
pusha
add
add
mov
jl
xchg
cmpsb
mov
pop
dec
add
and
mov
cmpsb
hlt
pop
lret
pop
jno
ja
pop
in
sbb
sub
adc
repz
add
das
sbb
sahf
dec
or
in
int
and
repnz
inc
mov
mov
mov
insb
push
or
add
jb
in
in
add
cmp
popf
data16
pushf
int
mov
pushf
std
jle
jecxz
ret
mov
add
cli
fists
mov
jle
dec
mov
fs
mov
inc
scas
push
stos
rorl
push
add
addb
scas
or
inc
add
jp
or
sahf
xchg
inc
sbb
fiaddl
ret
loop
jmp
iret
ljmp
in
imul
sbb
scas
leave
jecxz
cmp
gs
add
aad
sahf
dec
ficompl
push
repnz
mov
xchg
push
gs
leave
dec
arpl
add
popa
cmpsl
mov
add
mov
sbb
out
dec
mov
inc
daa
or
and
dec
dec
and
mov
int3
add
clc
iret
dec
mov
jnp
xchg
adc
cmpsl
gs
stos
loope
jg
push
inc
test
or
add
or
pop
jno
jg
notb
and
fwait
fwait
jle
and
stos
jno
mov
and
xchg
addb
aaa
dec
mov
xchg
pop
jno
les
rorb
jb
pop
and
stos
pop
sub
repnz
sbb
ret
jo
xor
scas
ret
icebp
xchg
in
inc
add
xchg
fsts
rolb
adc
rcrb
xchg
xchg
lret
loop
pop
adc
ret
lret
loop
arpl
cmp
push
dec
dec
aam
jnp
jg
jno
stos
mov
test
stc
push
cmpsb
dec
xor
arpl
mov
add
add
or
jmp
mov
adc
mov
push
movsb
cs
dec
jg
loop
add
pop
xchg
jnp
insl
xor
xorl
out
add
jnp
jno
jmp
pushf
push
cld
or
jmp
mov
lret
das
adc
xlat
and
mov
add
mov
pop
pusha
add
stos
xchg
addb
out
cwtl
mov
addb
clc
push
cmp
adc
nop
fadds
fwait
cmpsb
bound
mov
andl
or
rcr
adc
arpl
or
mov
xor
inc
add
jo
mov
and
pusha
add
shll
fwait
movsl
inc
adc
jl
xlat
inc
add
mov
add
inc
add
sahf
mov
pop
inc
add
push
dec
loope
movsl
dec
aaa
xchg
sarb
mov
dec
dec
jns
add
loopne
xchg
test
arpl
add
shlb
int
fs
ds
iret
loopne
mov
mov
popa
push
and
stos
enter
push
add
cmpl
lret
add
and
add
mov
std
mov
xchg
push
or
add
sbb
loope
jne
test
mov
ret
aas
out
sbb
inc
add
dec
movb
add
mov
and
inc
add
inc
add
add
or
mov
dec
arpl
rolb
and
mov
mov
dec
repnz
loop
fxch
test
jnp
sahf
aas
pop
mov
add
sub
push
loop
add
jecxz
mov
mov
mov
inc
xor
insl
iret
mov
xchg
and
jg
cltd
adc
add
dec
sbb
daa
mov
mov
cmp
shl
add
xchg
and
cmp
lea
add
sbb
rolb
mov
mov
js
cmp
or
fisttps
icebp
in
jg
xchg
fisttps
mov
iret
or
test
push
repz
cltd
mov
pop
add
or
xor
test
mov
mov
cmp
lahf
call
pop
cmc
ret
dec
cmpsb
push
xlat
jb
inc
mov
js
lahf
mov
cmp
daa
lcall
or
mov
pushf
xor
mov
adc
push
scas
cmc
popa
adc
in
sub
hlt
bound
jge
xchg
test
out
mov
dec
xchg
insb
jb
scas
es
pop
pop
mov
jb
cmp
mov
testb
pop
add
popa
dec
lahf
icebp
pop
stc
mov
stos
xchg
imul
roll
sbb
test
lret
lret
dec
and
in
mov
and
mov
dec
es
hlt
jb
outsl
outsl
adc
mulps
mov
add
sbb
sbb
adc
xchg
dec
rolb
dec
outsl
bswap
es
addb
cmp
out
test
sub
ljmp
and
or
xlat
divb
sub
add
mov
pop
xchg
inc
outsb
stc
xor
dec
insl
adc
rcrb
nop
add
sbb
loope
setl
mov
push
repz
add
or
push
into
push
adc
lea
dec
movsl
and
jle
mov
adc
repnz
in
add
lods
push
fnstenv
jne
add
pop
pushf
fdecstp
sbb
repnz
icebp
mov
sub
pop
pop
icebp
cmp
add
inc
add
fstl
out
mov
repz
add
mov
xchg
dec
jns
subl
daa
or
cs
add
adc
add
pop
cwtl
lret
mov
es
push
sbb
test
mov
add
add
jno
sub
imull
push
add
repz
push
sbb
sbb
xchg
jmp
pop
adc
cltd
push
leave
lea
rol
add
movsb
cmpsb
shl
jb
jbe
popf
sub
jne
insb
pop
sub
push
cli
inc
pop
adc
push
add
out
jecxz
sub
cmp
mov
inc
loop
in
in
dec
jmp
loope
mov
je
cli
inc
push
or
sub
add
add
add
je
sbb
ss
cmp
aas
push
pop
lcall
add
out
lret
cwtl
push
push
cmpsl
mov
in
lods
sub
push
dec
add
lret
stc
out
mov
aaa
loop
push
mov
cmp
dec
bnd
stos
mov
cmp
cmp
and
dec
cmpl
je
ret
das
cmpsb
or
les
adc
addb
addr16
test
pop
sub
mov
mov
push
sub
test
push
pop
pusha
add
add
jae
idivl
int
rolb
stos
test
iret
enter
sub
add
dec
push
mov
loope
stos
shrl
inc
xchg
shlb
pop
inc
add
mov
ljmp
add
sub
stc
aam
in
mov
insl
popw
cld
push
dec
frstor
cmpsl
addr16
mov
xchg
add
jns
add
xor
jp
cmp
push
test
add
mov
pop
sub
sub
cmc
aas
cmpl
inc
add
add
cmp
andl
xchg
addr16
insl
repnz
sbb
insl
pop
cmp
push
dec
hlt
es
fadd
add
or
or
sub
cmpsl
call
push
cmp
add
std
jge
mov
xor
add
adc
fdiv
xor
mov
in
lods
cld
pop
xor
lahf
loopne
adc
lcall
int
loop
inc
add
add
jmp
popf
adc
popf
loop
push
iret
imul
sbb
popa
shr
roll
xchg
arpl
push
add
jge
add
iret
cmp
or
shrl
xlat
add
xlat
pop
and
rorl
or
xor
jecxz
das
je
and
cmp
adc
sub
xor
sti
sbb
lret
sbb
scas
jbe
adc
xchg
xchg
sub
mov
sub
roll
xor
outsb
adc
jp
lea
mov
out
popf
jecxz
jg
imul
outsb
jge
xchg
dec
cli
out
ja
jmp
fwait
add
dec
sub
add
or
add
jne
mov
inc
add
cmpsb
scas
lcall
add
inc
add
jl
lcall
int3
xor
dec
dec
test
inc
add
cld
lahf
stos
lods
loop
inc
mov
cs
test
sub
ret
mov
fwait
nop
pop
popa
push
mov
lret
pop
sahf
push
arpl
fidivrs
test
addb
cmp
adc
xchg
sbb
mov
cmpsl
imul
pop
pop
cmpsb
icebp
xchg
insl
mov
xor
mov
fcmovnb
cltd
addr16
jno
sub
and
add
les
cmpsb
fldcw
dec
lea
cs
add
cmc
movsl
dec
ror
outsl
sbb
cmp
enter
add
add
add
scas
hlt
pop
push
lcall
xchg
push
and
mov
sbb
je
gs
pushf
or
movaps
mov
outsl
push
add
add
out
lea
ret
add
xor
mov
xchg
cmpsl
add
addb
mov
ja
testl
call
sarb
jl
movsb
scas
add
cmpsb
in
shrb
rclb
xor
mov
sbb
movsb
and
push
stos
xchg
sbb
test
imul
or
mov
dec
sbb
enter
addb
in
pop
and
cmpsb
inc
jmp
add
dec
cwtl
into
or
add
lret
xchg
push
mov
rolb
adc
lods
add
dec
jl
iret
gs
icebp
ret
pop
push
xchg
sub
push
andl
add
lret
out
sub
add
jb
and
ljmp
bound
pop
leave
fldl
xlat
mov
add
icebp
push
lods
xlat
sbb
aaa
cmp
mov
andl
xchg
dec
hlt
dec
mov
push
jns
stos
mov
inc
add
insl
add
stos
jno
hlt
add
add
out
mov
inc
repnz
outsl
add
pop
fildl
xor
fsts
push
add
in
out
sub
xchg
jno
sti
and
leave
sub
ss
adc
and
inc
or
inc
inc
stos
sub
xchg
push
add
xor
add
mov
test
daa
jb
ret
sbb
ret
outsl
call
sub
in
pop
dec
insb
out
xor
mov
iret
adc
fisttpl
lret
xchg
iret
jp
jge
movsb
pop
or
cld
jo
popa
je
sub
or
xchg
cmp
adc
cmp
pop
leave
or
pop
test
out
add
in
xchg
cs
loopne
xchg
cmc
lea
mov
les
out
push
stc
mov
mov
lcall
cmp
test
imul
mov
add
popa
sbb
inc
stc
loopne
fsubrs
sti
in
mov
into
inc
add
push
stc
gs
cmp
push
movsb
js
push
movsl
xor
hlt
repnz
into
xor
xor
dec
cld
sbb
les
test
out
loopne
sbb
add
jmp
arpl
or
in
rcll
mov
data16
das
mov
cwtl
mov
enter
pop
jp
imul
fdivrl
pushl
adc
sbb
and
je
add
or
call
stc
and
sar
inc
add
xchg
pop
stc
push
stos
cmp
ljmp
mov
xchg
pop
in
popf
or
jne
xchg
scas
addl
or
adc
xchg
fwait
mov
lods
adc
scas
inc
mov
stos
lahf
cmpsl
sub
test
cmp
push
mov
adc
loopne
aaa
push
xchg
enter
movb
jnp
push
add
je
cli
mov
ljmp
sar
xor
add
jo
je
add
aad
add
or
add
dec
adc
mov
sub
lods
pushf
test
in
sahf
ss
icebp
aaa
mov
es
insl
imul
inc
add
cmp
orl
lahf
int3
shll
fnsave
addb
add
out
out
mov
pop
and
push
xchg
leave
jp
add
mov
icebp
xchg
cmpsl
cltd
pop
xchg
cmp
adc
push
or
repz
xor
out
and
push
rolb
pop
mov
mov
vpcmpgtw
imul
push
push
and
subl
sahf
ret
stos
dec
jae
mov
popa
stos
popf
stc
jbe
jp
cwtl
add
test
clc
rolb
jns
in
test
test
add
mov
mov
not
js
xlat
mov
mov
sahf
xor
mov
ds
jl
inc
cli
xchg
jno
add
mov
add
sub
jmp
loopne
repz
into
push
add
xchg
xchg
xor
jae
mov
cmp
in
mov
pop
leave
lret
xchg
mov
add
iret
js
jmp
xor
dec
movsb
aad
test
addb
mov
or
test
movsl
fsubrl
sub
addb
add
leave
leave
fbstp
jg
fcom
ret
or
mov
sbb
lret
add
aas
mov
movsl
pushf
mov
mov
fs
mov
mov
shl
cmp
nop
cli
jns
push
rorb
pop
mov
cmp
add
and
adc
inc
add
iret
ljmp
add
mov
andl
adc
imul
add
add
mov
sub
inc
add
cs
sbb
xchg
movb
dec
mov
mov
cltd
jle
lods
icebp
cmp
je
push
std
fcomip
test
add
loopne
enter
aas
mov
add
add
cmp
enter
fiaddl
push
rorl
int3
adc
sub
fs
mov
mov
add
push
mov
pop
sahf
jmp
stc
je
inc
or
mov
dec
in
jo
xor
add
shl
dec
in
orl
add
popf
jp
add
in
mov
adc
jns
inc
add
into
sub
cmpsl
mov
in
bnd
sbb
data16
das
and
adc
ljmp
rcrl
inc
ja
xlat
and
outsl
push
int
sub
xchg
cmp
add
add
sahf
sbb
sbb
mov
adc
push
cmp
int
or
aam
and
addr16
inc
add
dec
int3
jg
mov
in
out
pop
xchg
lahf
ljmp
femms
test
fucomp
in
lods
mov
sbb
lcall
std
sub
sub
out
add
add
pop
mov
and
cmpsb
ret
outsl
mov
add
fsub
arpl
add
fwait
mov
pop
inc
mov
pusha
add
and
lds
mov
or
loope
test
mov
mov
int3
cmpsb
mov
imul
outsb
icebp
mov
test
int
jmp
add
mov
jns
jle
mov
addb
add
stos
adc
cmp
mov
cmp
add
add
fsubl
icebp
inc
add
cwtl
xchg
xchg
inc
add
xchg
dec
lret
cmp
pop
enter
add
lods
imul
jbe
and
nop
sbb
mov
xchg
jb
fiadds
adc
mov
sbb
xor
mov
xchg
xor
add
jge
add
inc
add
cmc
out
sbb
add
push
adc
movsb
int
sub
fiadds
add
xor
add
sub
and
andl
adc
dec
insl
addb
and
dec
into
je
loopne
add
cwtl
cmp
cmp
leave
xchg
jg
adc
ret
and
push
xlat
xchg
sub
aas
sbb
push
js
into
pusha
add
sbb
jo
dec
mov
xor
push
aam
aad
add
or
out
or
sub
adc
xchg
in
or
jl
stos
in
pop
shlb
pop
cmp
sub
pop
xor
rep
and
add
add
xor
roll
rcrb
mov
into
cli
aam
arpl
lcall
stos
imul
and
icebp
scas
mov
test
add
and
sbb
leave
cmp
xor
jl
test
add
ljmp
sub
add
mov
movsl
dec
cltd
dec
test
dec
aas
xor
xor
sbb
lret
add
fisttpl
inc
cmp
mov
addb
enter
pop
jbe
shl
add
arpl
insb
rolb
xchg
dec
lea
test
jp
dec
jecxz
aas
lcall
enter
mov
cmp
testb
pop
pop
cmp
gs
in
push
ljmp
jp
and
mov
popa
iret
mov
sub
add
les
out
jns
call
adc
xchg
jecxz
xor
daa
mov
pusha
add
fcmovne
hlt
lcall
in
or
fsubl
nop
cmp
add
lcall
add
add
std
sub
das
pusha
add
xor
adc
cmp
add
adc
mov
and
xor
pop
cli
ljmp
push
jg
sub
jo
cmp
adc
jmp
cmp
jo
inc
add
add
loop
jmp
add
outsb
fidivs
les
pop
mov
xor
fwait
test
add
dec
test
loope
ror
and
lahf
int3
je
inc
pop
mov
sub
leave
xchg
jb
sbb
lods
divl
jp
sub
lret
push
add
incl
add
adc
test
jb
dec
icebp
push
mov
int
popa
adc
mov
fcmovb
add
cli
push
enter
mov
push
sub
sub
roll
into
or
mov
sahf
push
nop
or
mov
fstps
add
sarl
aas
xor
cs
dec
ljmp
xchg
ficoms
and
add
inc
add
addb
pop
rorl
lcall
fsts
out
cmp
add
xchg
jnp
add
sub
mov
int
mov
or
cld
xchg
mov
mov
mov
adc
pushf
pop
rcrl
mov
outsb
leave
jno
test
repz
mov
idivb
pop
rcr
mov
xchg
movsb
lcall
add
rol
je
mov
mov
push
cmpsl
sbb
or
add
add
add
push
bound
clc
outsb
imul
mov
push
lds
cmp
add
add
pop
mov
mov
cmp
scas
cmc
out
es
popf
ficomps
cmp
shl
jo
dec
push
add
add
dec
and
mov
sub
fldl
adc
or
mov
subl
jp
jmp
xor
add
sahf
add
cmp
pushf
mov
fdivs
bound
sub
stos
ja
daa
movsl
ret
xchg
orl
mov
add
jno
and
sbb
and
je
add
cmp
fdivr
cld
adc
fucomip
mov
cmp
sub
idivb
cmpsb
pop
dec
repnz
sbb
add
loop
mov
xor
pop
or
pop
out
jbe
mov
shl
dec
cli
jae
inc
sbb
fwait
xor
nop
push
lahf
and
mov
jne
mov
add
add
jne
pushf
into
mov
jmp
daa
cmpsb
push
pop
push
and
cli
cmp
test
mov
adc
push
lods
adc
xor
int
and
jl
add
sub
xchg
push
icebp
mov
pop
rolb
int
mov
mov
add
mov
add
xchg
push
sbb
mov
xor
adc
add
sbb
mov
mov
mov
and
addb
into
and
imul
std
and
in
xor
fwait
scas
xchg
adc
ja
xchg
pop
stos
sbb
add
or
aaa
cmp
or
stos
dec
adc
lahf
jo
test
cmp
lret
sti
mov
add
cmp
mov
add
jno
lahf
addb
add
xor
cld
adc
ret
sbb
jle
ja
jno
test
pop
out
mov
lahf
das
mov
cmp
mov
dec
jl
fsubrl
adc
sbb
push
push
mov
lret
in
ficomps
stc
push
clc
outsl
mov
add
sarb
sub
movsb
loopne
jmp
pop
mov
push
adc
scas
repnz
cli
jmp
cs
xchg
mov
in
aaa
jp
or
loop
jecxz
push
popf
mov
and
clc
dec
scas
in
addb
shlb
scas
test
pop
inc
inc
add
mov
pop
add
xchg
loop
add
or
loope
call
xchg
sbb
sbb
sahf
pop
mov
mov
mov
dec
lcall
add
jg
hlt
xor
cmpl
inc
add
inc
add
sub
mov
out
or
out
or
cmp
mov
cwtl
mov
jp
sarl
add
sbb
add
int3
jl
sbb
movsb
faddl
add
leave
pop
stos
in
adc
add
out
jecxz
jp
pop
xlat
andl
push
cli
inc
inc
add
vcvtpd2ps
aam
mov
je
pusha
add
jb
in
sti
cmp
cmp
mov
push
hlt
movsb
inc
add
int
jno
add
sahf
cmp
dec
xor
test
push
ret
sbb
xor
pop
sahf
push
cld
add
push
hlt
or
xchg
push
mov
or
inc
add
sbb
cli
popa
aad
ficomps
dec
inc
lds
ljmp
jbe
into
lret
cwtl
cmp
or
pop
xchg
lods
adc
shld
push
andl
fwait
mov
repnz
pop
inc
subl
pusha
add
setne
mov
adc
xor
add
pop
cltd
in
hlt
sbb
and
mov
mov
in
add
loope
int3
addr16
push
jp
cmpsb
or
out
mov
lods
jb
rep
xchg
cmp
dec
sbb
les
sub
push
js
mov
int
or
cld
mov
sub
dec
les
sti
jge
nop
std
sub
add
sahf
outsl
ja
scas
xor
sub
dec
ret
add
pop
add
add
gs
mov
pop
nop
jbe
add
addb
stos
daa
rolb
insb
lahf
mov
mov
mov
out
jns
lds
pop
fsubrs
dec
ror
in
popf
ret
inc
xchg
lods
jbe
mov
fcos
sbb
jge
pushf
inc
add
out
push
xor
aad
lahf
sub
subl
sahf
ljmp
sub
pop
pushf
out
or
or
mulb
dec
fisttps
add
dec
stc
lahf
pop
jbe
add
add
push
xchg
lods
mov
in
mov
xor
xchg
loop
add
out
mov
push
mov
pop
cmp
sarb
pop
mov
imul
add
out
inc
add
sbb
sub
icebp
pop
xchg
addb
or
pop
mov
inc
out
addb
outsb
stos
and
inc
loop
jg
ficomps
jne
shlb
cmpsb
inc
xchg
mov
and
call
bound
sub
sbb
jno
fsubrl
mov
adc
or
addb
sub
jge
pop
cs
rorb
js
sbb
je
push
jb
pop
and
push
add
add
add
cmpsl
cli
sub
dec
cmp
out
sti
pop
xchg
mov
mov
fistps
cmpsb
xchg
add
shll
inc
jne
mov
cmc
dec
lods
adc
movsb
add
repz
pop
rorb
gs
sbb
out
iret
mov
inc
add
aas
mov
add
mov
pop
xor
cmpsb
mov
inc
add
das
lret
test
loope
int3
fcmovb
add
xchg
mov
jge
push
scas
lea
fnsave
dec
adc
test
arpl
and
mov
jbe
jg
xchg
mov
pop
inc
add
pop
inc
int
mov
fmull
mov
dec
out
push
adc
sahf
addb
push
adc
pop
bound
push
aas
int
jmp
shll
pop
add
mov
pop
mov
xchg
imul
loope
dec
add
incl
out
xchg
stc
mov
add
add
mov
test
ret
insb
cmp
pop
daa
lds
sbb
shlb
outsl
mov
lret
jbe
shrl
sarl
les
mov
mov
add
fwait
rcrl
mov
or
add
leave
insl
sbbl
ljmp
sbb
lret
mov
push
icebp
fcmovb
add
mov
clc
ficoml
xlat
in
push
scas
xchg
mov
or
adc
stc
pop
mov
sbb
add
and
nop
jle
daa
rcl
adc
jbe
jno
out
pop
into
xchg
arpl
push
add
push
test
fldl2t
mov
xor
push
mov
testl
fiaddl
cs
cwtl
out
js
frstor
test
inc
add
int3
pop
inc
mov
mov
adc
add
or
test
stos
in
or
pop
aad
mov
adc
mov
pusha
add
adc
add
lds
cmp
lret
jge
sub
scas
pop
ja
fisubs
pop
mov
push
test
pop
rolb
or
add
sbb
pop
dec
ret
xor
mov
enter
xchg
int3
inc
add
out
mov
pop
into
pusha
add
jge
shl
push
ror
dec
jecxz
pusha
add
and
out
lahf
xor
push
jg
mov
add
adc
xor
or
rol
add
std
push
dec
dec
loop
adc
and
jnp
arpl
cmpsl
into
jne
dec
mov
add
mov
push
pushf
add
inc
push
add
sub
pop
loopne
mov
jns
xchg
icebp
mov
lcall
ss
repz
mov
sub
inc
in
pop
and
mov
sbb
jp
aam
inc
xchg
adc
push
mov
fcoms
loop
xor
mov
sbb
bnd
arpl
call
and
sbb
xchg
movsl
outsb
xchg
xchg
int
es
bound
das
push
inc
add
iret
dec
mov
and
out
clc
dec
mov
add
pop
aam
adc
xchg
loop
dec
and
xor
pushf
imull
mov
icebp
popf
scas
xor
sti
frstor
and
mov
add
add
testb
push
addb
push
ss
adc
jo
and
sub
clc
pop
sbbl
dec
push
xor
andl
or
movb
fwait
jo
scas
jge
and
inc
add
addr16
pop
mov
fistl
push
popa
sbb
push
or
add
cmp
add
mov
push
imul
test
aad
inc
add
mov
lods
push
cmp
cmp
add
inc
repnz
jno
jecxz
inc
jg
add
mov
fyl2xp1
mov
out
je
sub
or
sub
add
jne,pn
add
scas
sub
rcl
imul
testb
pop
and
fprem1
mov
gs
stos
aam
jb
dec
mov
pop
mov
hlt
int
out
aaa
fnstsw
call
add
push
movb
push
lods
loope
add
add
lds
xor
or
and
mov
push
mov
add
ret
pop
int
xor
push
fisttpl
push
xor
dec
inc
lods
jbe
mov
adc
and
js
bound
daa
scas
insl
jae
loopne
lret
sub
mov
fs
push
jle
fwait
in
pop
addr16
es
ds
add
jge
xor
add
sti
jb
xor
or
add
mov
jbe
jb
inc
add
xchg
pop
pop
xor
daa
cmp
loope
add
inc
add
cli
pop
cli
bnd
mov
bound
push
push
adc
std
outsl
or
frstor
add
sbb
or
mov
loope
jb
ret
pop
jo
or
ret
test
mov
test
test
xchg
jecxz
wrmsr
rcrb
mov
add
or
pop
in
shl
sbb
inc
rcr
out
sub
add
mov
jo
out
inc
add
sbb
dec
addb
fbld
mov
or
adc
dec
jl
dec
and
pop
inc
hlt
inc
add
adc
push
push
inc
add
in
xchg
and
movb
lret
and
push
aas
jne
sti
adcl
push
stos
aad
movb
std
mov
add
arpl
push
insb
jg
or
mov
ds
in
das
cmp
adc
jp
sbb
jmp
adc
filds
mov
cmp
add
xor
cli
arpl
xchg
in
add
clc
pop
and
loope
clc
push
data16
push
sbb
negb
jns
out
std
in
test
mov
add
add
xchg
cld
cmp
add
cmp
cmp
push
fisubrl
repz
pop
add
and
mov
inc
add
dec
cmp
add
arpl
mov
ss
mov
loopne
adc
int3
cmp
rolb
sti
addb
mov
loop
rcrl
add
pop
pushl
mov
pop
ficoml
jp
cmp
in
push
push
dec
filds
sbb
sti
xor
cltd
inc
into
dec
andl
dec
sbbl
in
les
pop
push
mov
dec
mov
sbb
sub
add
pop
bound
in
adc
push
sbb
cmp
mov
int3
imul
push
gs
add
test
dec
loope
gs
sbb
sar
sub
fs
mov
fcoml
add
sbb
repnz
scas
inc
add
adc
fisubl
pop
cmp
sbb
sahf
rorb
aaa
pop
inc
faddl
mov
push
sbb
outsl
mov
push
xor
pop
fs
lret
aaa
jns
lds
movsb
pop
mov
add
loopne
mov
mov
pusha
add
mov
mov
sbb
inc
add
xchg
loopne
jo
loope
aaa
nop
sbb
hlt
pop
stc
xor
or
pushf
into
push
push
inc
add
repz
jp
cmp
sbb
rorb
daa
dec
cmp
lcall
add
ds
lret
movsl
jbe
add
fadds
add
out
stos
mov
daa
jno
mov
pop
lods
mov
add
adc
shlb
negb
stos
ret
pop
mov
lods
hlt
push
cmp
inc
add
mov
jae
add
bound
in
sub
jmp
mov
add
add
loopne
pop
xlat
push
lods
mov
imul
or
cmp
jle
scas
xchg
aam
inc
ja
xlat
jne
fcmove
mov
or
sub
sbb
mov
mov
add
sbb
push
pop
inc
adc
mov
add
pop
push
out
sub
test
loopne
add
mov
dec
aas
loope
add
bound
jo
shlb
add
fnsave
repnz
inc
lods
or
sbb
push
mov
inc
mov
dec
pusha
add
mov
ficoms
mov
cmp
out
testb
add
add
adc
add
inc
ret
jmp
add
cwtl
gs
fidivs
xchg
mov
add
sbb
data16
xlat
clc
and
pop
push
hlt
jmp
sbb
fisubs
aam
fsubl
and
mov
adc
sub
sub
and
jno
jae
adc
fs
mov
popa
ffreep
add
mov
jnp
and
adc
imul
ret
pop
inc
adc
test
push
xbegin
add
ret
or
sub
ret
int3
or
cmp
outsb
mov
dec
sbb
mov
movsb
adc
adc
in
inc
add
fstps
mov
cmp
das
xchg
xchg
jne
icebp
inc
adc
or
repz
test
lods
jo
scas
mov
sbb
mov
add
pop
in
cld
loopne
icebp
sti
cltd
add
xlat
loop,pt
jp
cmp
push
inc
add
clc
test
xchg
out
or
push
or
lcall
add
incl
aad
jbe
xor
dec
scas
lock
sub
cmpsl
dec
mov
add
and
fidivs
add
inc
add
lret
xchg
int
push
fs
inc
add
in
xorw
or
add
add
inc
add
les
bound
test
mov
scas
and
es
sub
push
lret
mov
jnp
daa
lods
ds
mov
add
sahf
aas
lcall
add
add
aaa
pop
std
in
mov
lcall
lods
sbb
add
pop
push
mov
mov
fs
add
rolb
xor
iret
xchg
daa
sti
add
rolb
mov
inc
add
pop
jge
data16
fwait
mov
int
fmulp
movsb
sub
imul
cs
add
add
in
add
mov
cmp
dec
and
repz
int
add
mov
push
rolb
cmp
in
movsb
xchg
push
ss
or
cwtl
out
hlt
ret
xlat
xor
or
mov
mov
xchg
jle
jnp
jae
pop
lret
and
xchg
xor
add
arpl
ds
mov
jg
adc
xor
xlat
aas
rorb
push
add
add
popf
jp
add
xchg
mov
aas
cltd
in
pop
xlat
loop
loopne
jnp
das
jnp
imul
jb
mov
jnp
fldcw
std
push
mov
push
or
lods
add
enter
decl
push
ss
test
mov
cmc
mov
stos
ds
test
aam
cli
dec
add
and
fcoml
test
cmp
cmp
add
add
pop
push
cmp
fsubs
xor
mov
mov
clc
jns
imul
and
popf
jecxz
fwait
or
gs
add
add
add
sbb
jecxz
ficoms
ja
mov
lret
lods
stc
outsb
notl
sbb
sub
pop
divb
dec
mov
jmp
inc
loop
shll
out
add
pusha
add
imul
mov
enter
mov
add
test
xchg
test
add
aaa
pop
xor
push
and
rolb
and
jae
inc
scas
mov
pusha
add
adc
addb
dec
ret
dec
jbe
rcll
inc
sub
add
outsl
lea
je
mov
cmp
int
sub
xchg
in
stos
jl
inc
pop
imul
dec
fwait
dec
xor
imul
push
rcrl
push
add
inc
add
mov
fwait
pop
lret
and
mov
add
jg
fisubrs
movsl
xchg
mov
pop
test
lds
frstor
jl
popl
movsb
adc
mov
sub
jge
pop
sub
and
test
arpl
pop
mov
cmc
imul
add
push
arpl
lock
imul
fisttpl
in
cmp
pop
clc
in
jmp
push
addb
add
lcall
add
or
push
dec
mov
daa
rcl
xchg
fs
fsubs
outsl
repz
daa
lock
add
jl
std
shrb
push
das
in
dec
out
pop
fistps
dec
push
int
push
mov
mov
daa
pop
xor
out
outsl
xchg
add
dec
imul
fisttpll
aaa
inc
add
jne
int3
and
dec
test
jle
inc
add
test
or
push
add
add
push
jge
loope
cmp
fisttpll
push
and
xor
cld
nop
stos
sbb
xchg
add
lods
mov
inc
inc
add
jo
push
adc
lds
cs
bound
ja
popf
pop
out
xor
cmp
add
and
insl
sahf
sbb
mov
decb
pop
sbb
aad
jbe
inc
add
add
movsl
pop
fdivl
mov
icebp
jnp
pop
mov
jmp
jae
xchg
mov
jecxz
imul
fs
add
add
mov
xor
sarb
das
mov
pop
push
sub
sbb
jg
daa
sbb
cs
dec
jne
sbb
int
enter
mov
jecxz
fdiv
loop
lret
pop
je
aas
test
ret
into
stos
aad
addr16
pusha
add
imul
imull
push
mov
insl
mov
push
test
rolb
addb
movb
les
lods
idiv
dec
xchg
xlat
sar
jnp
mov
add
or
add
jne
inc
add
add
mov
add
cld
cltd
out
add
test
sub
dec
test
pop
in
repnz
fldz
fdiv
push
int
and
add
add
outsb
or
stos
sarl
je
nop
ja
in
add
pop
mov
lods
pop
scas
je
testb
test
mov
fsubl
pop
cmp
add
pop
jo
xor
add
and
lods
popa
leave
or
mov
idivl
adc
and
mov
xor
push
dec
push
jns
fisubl
sub
xor
orl
cmc
negl
out
fbstp
cmp
xchg
outsb
shll
mov
or
aam
aaa
xchg
std
icebp
dec
push
add
clc
jbe
dec
xchg
cmc
mov
add
adc
out
out
ljmp
rolb
aas
mov
sarl
gs
addb
call
pop
jg
pop
rorb
sub
rorl
xchg
lcall
test
mov
fisttps
hlt
and
les
mov
mov
add
jae
aad
add
dec
push
sub
push
pop
jl
aam
ret
xlat
mov
and
stos
jp
push
movsl
insb
stos
lods
mov
negb
sbb
mov
adc
cwtl
pop
add
xor
sbb
addb
and
adcl
out
pop
div
jle
add
aas
mov
add
mov
add
cmpsl
fdivr
pop
pop
mov
int
aad
adc
jo,pn
cld
sbb
inc
mov
adc
inc
add
outsl
or
or
add
inc
add
inc
mov
lret
lret
scas
sbb
movsb
lock
test
cmp
shr
mov
stos
insl
xchg
packsswb
lcall
add
stc
popa
cltd
sbb
dec
inc
add
add
dec
inc
add
sbb
sub
addb
addl
sbb
in
jnp
or
add
cmp
mov
add
mov
xchg
mov
fistl
cltd
pop
mov
js
nop
dec
hlt
mov
mov
stos
stos
or
and
mov
cmp
hlt
movb
add
je
pushf
push
mov
clc
jmp
push
lds
cmp
daa
xor
out
xchg
sub
fcomi
cmpsl
rolb
cli
pop
inc
add
pop
sbb
add
push
xchg
or
adc
xchg
mov
fs
out
std
hlt
enter
cmp
dec
aad
mov
jge
fbld
cmp
add
nop
xchg
out
dec
int
pop
shrl
push
out
jmp
push
sbb
test
aaa
jl
ds
push
addb
push
inc
add
loopne
ljmp
push
cmp
mov
test
pop
sub
ja
mov
lods
test
adc
push
add
xor
adc
or
and
pop
and
aas
jg
jmp
jae
xor
push
cwtl
xor
add
and
into
fdivp
mov
jmp
lret
test
xlat
loop
fiadds
add
xor
fsubr
fdivl
jl
sub
aas
rcll
mov
inc
add
lea
mov
inc
nop
mov
add
in
jl
jns
dec
int
ret
out
arpl
mov
add
push
test
call
mov
fstpt
mov
outsl
test
mov
cmp
or
fsubrl
and
pop
mov
sbb
dec
push
mov
insl
and
push
ret
mov
inc
add
addb
sbb
dec
xor
stc
mov
test
sahf
cwtl
mov
sbb
add
iret
sbb
aad
add
inc
sub
push
scas
aam
push
or
xlat
inc
add
pushf
dec
out
insb
cmp
cs
dec
inc
add
xchg
xchg
imul
sub
lret
popa
test
mov
push
imul
xchg
xlat
mov
das
addb
ja
xchg
jo
das
repz
fld
loopne
add
xor
add
mov
clc
xor
iret
data16
pop
cmp
add
loopne
add
jne
add
mov
mov
mov
push
mov
push
roll
dec
xlat
jmp
mov
repnz
xor
std
jle
mov
push
xor
jge
pop
iret
inc
add
add
and
xchg
repz
mov
adc
add
xchg
fistpl
ficompl
fs
xchg
inc
daa
jge
loop
imul
shll
push
add
imul
jne
cmp
call
push
lahf
movb
testl
js
sub
push
xor
fbld
cld
dec
arpl
adc
daa
jg
sub
cmp
xchg
repz
push
loope
pusha
add
inc
push
iret
jnp
jae
xor
add
cmp
pop
ficoms
xchg
int
fcoms
adc
xchg
adc
mov
cmc
mov
jns
sbb
dec
clc
loop
adc
sub
shlb
inc
add
jg
dec
sub
adc
out
and
xor
jmp
bound
cmc
in
and
pop
mull
add
add
addb
iret
in
mov
add
sub
mov
addb
add
rcrl
adc
imul
adc
and
pop
xlat
addr16
add
test
sbb
add
xchg
lret
cmp
mov
insb
aas
add
adc
fadds
push
add
add
mov
dec
mov
jp
xchg
sub
add
dec
mov
je
add
inc
fisubrl
sub
scas
sbb
push
inc
add
mov
cmp
ljmp
mov
mov
sbb
xchg
shrb
imul
addr16
mov
jp
out
aaa
mov
xchg
mov
and
push
mov
fists
enter
pop
or
push
or
jns
aad
scas
cmpsb
loop
xchg
cmp
push
jno
mov
xchg
pusha
add
push
movsl
mov
cmp
push
cltd
test
loop
enter
push
pusha
add
call
add
sub
ljmp
out
jmp
mov
jge
shlb
add
xlat
jb
fisubs
ret
dec
fwait
addb
xor
nop
outsl
push
movsl
inc
cs
pushf
in
daa
ret
or
loop
add
pop
mov
stos
adc
lds
in
cmp
mov
ja
out
rcl
sahf
adc
mov
sbb
fsubs
sub
inc
sub
pop
mov
movsb
repnz
out
mov
jl
sub
pcmpeqw
aad
test
movsl
xor
mov
mov
popf
inc
pop
aaa
pinsrw
mov
imul
stos
leave
mov
aas
xlat
pop
pop
lahf
mov
rcrb
jecxz
int
add
xor
mov
or
cmp
mov
xchg
or
sub
rolb
pushf
or
repz
cli
mov
inc
ss
dec
das
out
dec
xchg
sbb
test
sub
xchg
xchg
cmp
adc
test
add
cmc
cli
adc
pop
fstpt
mov
shll
jns
xchg
inc
inc
stos
push
fldl
sbb
mov
fcmovu
pop
das
xchg
push
loopne
pop
arpl
mov
bound
in
scas
rclb
imul
add
push
in
fwait
cltd
push
cmpsl
xor
jb
adc
or
sub
pop
mov
scas
aam
push
sub
mov
push
in
add
addb
dec
ljmp
cmp
addb
fildll
dec
xor
sbb
jecxz
int
add
pop
add
xor
mov
add
add
push
xor
jae
cmp
in
push
xchg
jp
je
adc
dec
subl
and
sahf
cmp
dec
xchg
mov
cli
mov
cmp
js
dec
cltd
rclb
out
push
add
push
add
dec
cmpsb
cwtl
mov
jge
add
add
pop
in
and
popf
jg
lar
cmp
add
insb
push
add
xor
push
imul
aad
adc
aas
jl
pop
stos
jb
lea
outsb
loop
mov
mov
add
lahf
or
iret
sbb
addl
jp
cld
roll
add
mov
std
loope
push
push
sbb
add
ret
rolb
insb
cmpsb
or
mov
data16
rorl
sbb
stc
test
imull
xor
add
push
adc
xor
cwtl
loopne
cli
nop
dec
and
jno
inc
dec
in
lea
mov
add
sub
out
repz
mov
sbb
push
sub
inc
add
add
or
add
push
or
aas
rclb
movb
sbb
ljmp
mov
add
lea
adc
rolb
add
stos
sbb
push
stc
insb
jl
mov
jns
rorl
xchg
stc
mov
in
stos
aaa
lret
mov
pop
cltd
lea
arpl
adc
inc
aaa
xchg
mov
lahf
adc
adc
mov
mov
ficoml
lret
iret
mov
mov
loopne
jmp
mov
arpl
les
pop
les
and
adc
insb
mov
mov
sub
ss
stos
sub
lea
inc
out
cmp
push
dec
sahf
ffree
movb
pop
xlat
pop
loop
sbb
xchg
pop
lock
adc
pusha
add
add
add
push
pop
xchg
mov
xchg
dec
rcrl
adc
push
ret
jle
push
mov
leave
cld
mov
add
movsb
js
inc
and
les
push
jo
shl
addr16
inc
add
fistpl
pusha
add
sbb
daa
pop
inc
inc
add
ret
out
mov
sbb
movb
and
or
in
popa
inc
sub
add
and
jae
add
mov
lea
rolb
xorl
and
jns
inc
test
test
xchg
pop
lock
or
push
ret
stos
roll
add
cmp
pop
pop
pop
sbb
mov
sub
ja
mov
stc
nop
jb
add
add
je
js
nop
jb
fiaddl
add
cmc
sbb
nop
cld
jmp
add
push
jg
add
out
mov
nop
cld
jmp
cltd
ja
add
mov
test
nop
cld
jmp
add
push
cmpsl
add
mov
pop
push
mov
xchg
ret
add
add
shrb
xor
stc
nop
jb
flds
add
jne
stc
nop
jb
add
jg
sti
add
add
add
fwait
stos
push
mov
cmpb
add
add
add
add
mov
nop
jb
add
push
stos
add
add
stc
nop
jb
mov
xor
mov
stc
nop
jb
add
testb
cmp
ret
adc
fwait
add
lods
mov
stc
nop
jb
sub
jge
push
mov
xchg
ret
jo
jg
add
inc
push
mov
xchg
ret
mov
mov
test
inc
add
adc
fnstenv
mov
jmp
add
int
stc
nop
jb
add
mov
mov
clc
stc
nop
jb
add
add
push
push
mov
xchg
ret
bound
jo
add
push
mov
xchg
ret
add
add
stc
nop
jb
add
lock
or
test
add
stc
nop
jb
add
or
jb
add
cmc
and
add
nop
jb
add
mov
sar
cld
jmp
stos
int3
add
add
xchg
lea
mov
add
nop
jb
add
scas
add
call
nop
cld
jmp
add
mov
add
stc
nop
jb
add
add
les
push
stc
nop
jb
fisubl
push
jg
je
sub
add
add
add
add
push
mov
xchg
ret
push
pop
add
pop
ret
stc
nop
jb
jo
int3
add
nop
cld
jmp
fiaddl
xor
add
xor
nop
jb
pop
add
lret
push
push
mov
xchg
ret
add
loop
push
lahf
call
stc
nop
jb
add
out
clc
stc
nop
jb
push
add
mov
nop
jb
push
mov
add
add
es
push
stc
nop
jb
mov
add
add
sbb
jae
cld
jmp
add
and
sub
mov
xchg
ret
push
add
push
mov
xchg
ret
cmc
add
push
add
push
push
mov
xchg
ret
lock
add
add
nop
jb
lock
and
mov
mov
xchg
ret
push
add
mov
adc
nop
jb
add
add
aad
jnp
jmp
adc
add
scas
add
add
add
add
nop
cld
jmp
mov
add
push
mov
xchg
ret
add
out
mov
stc
nop
jb
add
jae
or
in
add
adc
add
sub
bound
add
mov
xchg
ret
add
int3
and
nop
mov
jmp
add
lock
add
add
xchg
xor
ror
push
mov
xchg
ret
add
ja
pusha
stc
nop
jb
ja
add
add
and
nop
jb
add
add
mov
stc
nop
jb
add
add
mov
jnp
inc
add
xor
and
push
adc
add
stos
add
push
mov
xchg
ret
test
mov
nop
cld
jmp
lock
mov
xchg
ret
add
adc
ficoml
in
mov
add
test
xchg
push
add
pop
push
mov
xchg
ret
add
adc
add
jb
add
push
cmpsl
add
xchg
sar
jb
mov
xor
les
addb
mov
stc
nop
jb
cmpsl
add
add
test
mov
inc
add
mov
push
nop
cld
jmp
fsubs
lock
add
stc
nop
jb
test
inc
push
add
stc
nop
jb
mov
ss
cmpl
nop
cld
jmp
add
fadds
xor
push
mov
xchg
ret
add
lock
xor
push
mov
xchg
ret
add
lret
jmp
add
pop
les
add
xor
adc
shl
inc
add
add
and
push
push
stc
nop
jb
lock
jns
stc
nop
jb
add
add
rolb
push
aas
mov
push
mov
xchg
ret
cmpsl
test
scas
mov
stc
nop
jb
add
repnz
add
nop
jb
popf
add
and
dec
sub
stc
nop
jb
pop
add
adc
gs
inc
in
stc
nop
jb
xor
add
nop
jb
push
pop
cmpsl
add
add
mov
stc
nop
jb
popf
scas
add
add
scas
jne
nop
cld
jmp
add
add
stc
nop
jb
cmpsl
add
add
insb
add
nop
jb
push
cltd
ss
or
add
add
les
add
test
push
mov
stc
nop
jb
ja
xor
int3
cmp
add
stc
nop
jb
add
scas
add
pusha
stc
nop
jb
add
test
shr
push
mov
xchg
ret
loop
popf
pop
pusha
stc
nop
jb
test
add
inc
or
mov
xchg
ret
scas
add
nop
cld
jmp
inc
add
fwait
and
lods
add
stc
nop
jb
add
rolb
add
mov
xchg
ret
sub
inc
mov
mov
add
stc
nop
jb
add
add
stc
nop
jb
add
add
add
stc
nop
jb
fdivrs
add
lock
or
stc
nop
jb
add
popf
add
mov
adc
nop
jb
cltd
add
jg
inc
and
nop
jb
xor
push
add
inc
lret
lea
nop
cld
jmp
pop
scas
fsubs
popa
add
nop
jb
int3
add
jns
adcl
jne
stc
nop
jb
ja
add
add
adc
nop
jb
add
loop
add
in
inc
add
lret
or
xor
incl
add
bound
and
cld
jmp
add
add
out
enter
inc
fldl
xchg
ret
add
add
jo
push
stc
nop
jb
int3
xor
add
or
stc
nop
jb
xor
mov
adc
nop
jb
add
inc
fwait
jns
sti
push
add
stc
nop
jb
popf
add
xchg
cmpl
add
nop
jb
bound
std
mov
stc
nop
jb
fadds
stos
xor
mov
stc
nop
jb
add
fcoms
pop
jmp
nop
cld
jmp
add
add
add
inc
addb
pushl
stc
nop
jb
add
add
add
or
add
nop
jb
add
pop
push
stc
nop
jb
shlb
pop
mov
push
mov
xchg
ret
dec
sub
int3
mov
stc
nop
jb
add
sub
pop
jb
push
stc
nop
jb
add
push
add
add
movsl
mov
xor
stc
nop
jb
add
mov
and
xchg
imulb
nop
cld
jmp
jo
add
push
and
mov
xor
nop
cld
jmp
add
add
bound
add
jae
cld
jmp
add
mov
test
add
stc
nop
jb
add
testb
dec
jo
inc
add
add
push
add
mov
mov
add
nop
cld
jmp
add
add
push
mov
nop
cld
jmp
pop
add
jo
add
add
push
mov
add
sub
add
mov
add
add
xorb
add
add
ds
push
mov
xchg
ret
add
repz
push
push
mov
xchg
ret
add
push
fadds
int
les
nop
jb
add
add
add
pop
push
mov
xchg
ret
inc
mov
mov
stc
nop
jb
dec
ja
add
repnz
or
add
push
add
mov
add
mov
jb
add
cltd
sub
push
mov
xchg
ret
add
adc
jne
inc
add
int3
add
xor
push
push
mov
xchg
ret
push
add
outsl
insl
jae
nop
jb
add
dec
mov
stc
nop
jb
rcrb
stc
nop
jb
lret
push
popf
cmc
or
inc
in
mov
xchg
ret
flds
adc
mov
stc
nop
jb
mov
add
add
orb
push
jns
push
add
subl
stos
add
add
fcoms
add
mov
pop
stc
nop
jb
xor
add
lds
add
add
int3
add
push
inc
push
mov
xchg
ret
add
add
jl
jmp
sbb
add
add
jo
dec
stos
mov
stc
nop
jb
add
dec
push
stc
nop
jb
add
int3
add
je
stc
nop
jb
push
add
add
mov
stc
nop
jb
add
or
mov
stc
nop
jb
add
jns
add
test
add
jge
inc
add
ror
inc
ss
add
add
stc
nop
jb
ljmp
ljmp
andb
add
add
add
jp
inc
add
stos
add
mov
pusha
add
xor
rclb
incl
add
mov
push
stc
nop
jb
test
add
add
add
nop
jb
add
inc
jne
jle
push
mov
xchg
ret
add
stos
add
clc
mov
stc
nop
jb
add
in
mov
stc
nop
jb
add
add
add
mov
adc
add
push
add
pop
or
stc
nop
jb
add
pop
mov
push
mov
xchg
ret
add
cs
int
inc
adc
nop
jb
add
push
jns
and
mov
sbbb
add
out
jmp
stc
nop
jb
add
push
push
push
mov
xchg
ret
add
add
int3
jmp
les
push
mov
xchg
ret
lock
rep
nop
cld
jmp
add
ja
add
ja
mov
stc
nop
jb
and
fwait
push
fcomps
mov
xchg
ret
add
pushl
stc
nop
jb
jo,pn
push
les
add
stc
nop
jb
neg
add
cmp
add
stos
or
and
push
push
jecxz
aam
mov
push
mov
xchg
ret
mov
or
inc
cmp
mov
xchg
ret
jns
add
popf
pop
stc
nop
jb
add
dec
dec
push
nop
cld
jmp
cmc
add
push
stos
add
stc
nop
jb
add
jmp
fiadds
xchg
ret
add
les
cmp
jb
add
add
add
push
nop
cld
jmp
add
add
ja
cmp
inc
add
xor
add
js
add
nop
jb
ljmp
es
stc
nop
jb
test
push
mov
xchg
ret
scas
xor
add
add
and
push
mov
xchg
ret
inc
mov
lds
cld
jmp
add
movsl
std
pop
stc
nop
jb
mov
add
sub
sar
nop
jb
mov
add
mov
out
add
out
push
stc
nop
jb
add
add
popa
repz
rep
stc
nop
jb
add
mov
push
push
mov
xchg
ret
test
sub
add
add
push
mov
xchg
ret
popf
add
mov
nop
cld
jmp
add
sbb
add
nop
cld
jmp
xor
inc
stc
nop
jb
add
push
mov
xchg
ret
add
stos
testb
push
add
mov
push
les
add
stc
nop
jb
mov
sub
add
sub
stc
nop
jb
mov
test
clc
push
mov
xchg
ret
add
les
jne
and
push
mov
xchg
ret
add
xor
dec
fiaddl
xchg
ret
mov
nop
jb
pop
mov
test
popf
scas
test
scas
enter
cmpb
inc
inc
add
cmp
nop
jb
mov
add
mov
push
mov
xchg
ret
bound
mov
add
nop
jb
add
add
test
stc
nop
jb
add
inc
cltd
test
push
mov
xchg
ret
cltd
mov
pop
jne
stc
nop
jb
add
push
nop
cld
jmp
add
add
add
fldcw
int3
idiv
stc
nop
jb
add
add
sbb
add
loop
and
lahf
pop
stc
nop
jb
scas
add
mov
stc
nop
jb
mov
push
imul
adcb
add
adc
add
add
nop
jb
loop
add
scas
add
mov
stc
nop
jb
add
and
mov
stc
nop
jb
lret
add
jo
nop
cld
jmp
add
pop
jl
stc
nop
jb
cmpsl
ficompl
xchg
push
mov
xchg
ret
add
ss
add
add
nop
jb
jg
fisttpll
jb
cltd
inc
add
nop
jb
add
add
add
add
push
stc
nop
jb
add
cmpsl
add
jg
loope
call
stc
nop
jb
add
popf
jne
stc
nop
jb
dec
nop
jb
add
xor
mov
stc
nop
jb
fidivrl
decl
push
mov
xchg
ret
fadds
add
jno
add
jb
les
add
sub
mov
pop
icebp
call
mov
addl
mov
nop
cld
jmp
add
add
mov
stc
nop
jb
test
add
add
mov
xchg
ret
sub
mov
stc
nop
jb
cmpsl
sbb
test
stc
nop
jb
stos
add
add
test
add
lcall
cltd
and
aad
or
add
nop
jb
mov
push
mov
xchg
ret
add
cmc
fwait
enter
jmp
add
mov
push
pusha
stc
nop
jb
add
add
mov
stc
nop
jb
add
mov
movzwl
stc
nop
jb
test
push
pop
mov
stc
nop
jb
fcmovb
pop
add
push
les
nop
cld
jmp
add
or
mov
stc
nop
jb
push
xor
add
outsb
mov
stc
nop
jb
cltd
lock
in
add
ja
add
jle
repnz
cld
jmp
add
mov
add
or
add
stc
nop
jb
fcomp
add
push
mov
xchg
ret
testb
pop
jns
rolb
add
stc
nop
jb
add
scas
add
mov
xchg
ret
add
add
add
mov
mov
nop
cld
jmp
add
ljmp
inc
add
push
add
add
nop
jb
adc
cltd
dec
les
pusha
stc
nop
jb
les
pop
add
add
nop
jb
push
or
les
add
add
stc
nop
jb
add
rolb
lock
nop
jb
add
add
loop
mov
nop
cld
jmp
xor
lock
dec
sub
lahf
ljmp
add
pop
or
out
jg
add
add
mov
mov
xchg
rcll
mov
push
stc
nop
jb
jns
stos
loope
xchg
mov
je
stc
nop
jb
add
bnd
pop
call
add
add
adc
jb
jg
scas
adc
add
idiv
stc
nop
jb
add
push
pop
pop
stc
nop
jb
add
add
add
lock
xchg
cltd
call
stc
nop
jb
add
les
and
nop
jb
add
add
mov
mov
nop
cld
jmp
add
popf
add
add
jb
add
add
inc
mov
xor
add
jne
stc
nop
jb
add
fmull
nop
jb
add
les
mov
stc
nop
jb
dec
mov
push
nop
cld
jmp
add
test
add
mov
add
jb
add
add
mov
xchg
sub
jb
add
push
stc
nop
jb
cltd
cmpsl
div
les
fsts
sub
inc
add
add
les
push
mov
xchg
ret
add
pop
ret
stc
nop
jb
add
ss
leave
stc
nop
jb
add
sub
nop
jb
pop
add
les
add
stc
and
stc
nop
jb
mov
add
mov
cld
jmp
mov
add
push
add
jb
mov
stc
nop
jb
add
pusha
add
gs
test
add
add
nop
jb
add
ds
stc
nop
jb
pop
jns
add
add
mov
stc
nop
jb
add
or
cli
mov
stc
nop
jb
add
add
lret
sub
stc
nop
jb
test
loop
push
push
jge
add
nop
cld
jmp
add
add
sar
jb
add
je
stc
nop
jb
add
jmp
stc
nop
jb
les
add
xor
mov
call
add
add
add
cmc
inc
mov
stc
nop
jb
add
mov
insl
test
nop
cld
jmp
mov
add
popf
fdivs
dec
pop
stc
nop
jb
lret
add
test
stc
nop
jb
mov
add
mov
xchg
ret
add
fcoms
push
in
add
cmpsl
scas
and
cmc
jnp
jns
inc
add
les
add
nop
cld
jmp
ljmp
dec
add
stc
nop
jb
mov
imul
filds
xchg
ret
rolb
mulb
jmp
add
jo
add
jne
stc
nop
jb
xor
addb
mov
push
mov
xchg
ret
add
mov
push
mov
xchg
or
ltr
imul
stc
nop
jb
popf
ss
inc
testb
stc
nop
jb
add
scas
push
jmp
stc
nop
jb
add
xorl
adc
add
stos
pop
push
mov
xchg
ret
and
add
adc
cld
jmp
ljmp
add
stc
nop
jb
add
xchg
mov
sbbb
pop
add
jns
mov
cld
jmp
lret
add
mov
push
push
mov
xchg
ret
inc
fwait
add
stc
nop
jb
add
add
divb
stc
nop
jb
mov
cld
cmpw
nop
cld
jmp
mov
adc
xor
push
stc
nop
jb
pop
push
adc
inc
repz
jb
stc
nop
jb
add
adc
add
nop
jb
add
add
les
pop
jne
stc
nop
jb
add
pop
push
push
mov
xchg
ret
add
add
cmp
nop
cld
jmp
add
push
mov
nop
jb
add
mov
jo
fdivrs
stc
nop
jb
lock
call
nop
cld
jmp
xor
int3
ja
xchg
jecxz
add
stc
nop
jb
mov
add
jb
stc
nop
jb
xor
outsl
push
mov
add
mov
add
add
add
add
add
test
pop
add
push
mov
xchg
ret
scas
add
sub
add
stc
nop
jb
add
bound
mov
mov
stc
nop
jb
add
inc
add
test
nop
jb
ja
stos
ja
stc
nop
jb
cltd
push
jl
jmp
jp
nop
cld
jmp
loop
add
sbb
mov
xchg
ret
add
les
push
xor
cld
inc
nop
cld
jmp
mov
add
ljmp
nop
cld
jmp
push
add
fwait
add
lret
push
mov
xchg
ret
add
add
inc
add
jg
rclb
add
dec
add
pop
push
mov
xchg
ret
jns
add
in
pop
add
cld
push
and
add
stc
or
loopne
stc
nop
jb
add
aaa
jns
insb
inc
jb
stc
nop
jb
stos
and
jecxz
inc
add
xor
stc
nop
jb
add
add
add
push
ss
divps
clc
out
add
add
adc
push
call
stc
nop
jb
add
mov
nop
jb
inc
mov
add
ret
insl
and
stc
nop
jb
push
xor
push
cltd
sbb
cld
jmp
mov
jb
add
stc
nop
jb
add
add
xor
mov
cld
jmp
add
add
pop
mov
mov
stc
nop
jb
add
push
cmpsl
add
and
push
add
add
cmpsl
stos
fmull
jb
add
add
daa
push
dec
mov
stc
nop
jb
add
pop
scas
jb
add
scas
jns
inc
rep
mov
stc
nop
jb
mov
add
add
stc
nop
jb
lret
jg
and
stc
nop
jb
testb
iret
shl
stc
nop
jb
add
cmc
adc
in
push
nop
cld
jmp
mov
add
call
jmp
sub
scas
test
pop
mov
stc
nop
jb
ss
ret
mov
stc
nop
jb
add
inc
movsb
push
rep
stc
nop
jb
add
ss
mov
nop
jb
lock
bound
cld
jmp
add
add
add
lock
dec
nop
cld
jmp
push
jns
add
fwait
add
xchg
mov
test
nop
cld
jmp
add
mov
adc
and
push
mov
xchg
ret
jg
add
jmp
nop
jb
add
push
add
cmp
loop
cld
jmp
int3
stos
adc
add
add
stos
nop
cld
jmp
add
ljmp
stc
nop
jb
inc
mov
cmp
xchg
or
add
add
add
cmpl
nop
cld
jmp
pop
stos
sub
add
pop
add
add
nop
jb
add
adc
stos
stc
nop
jb
jg
fwait
rolb
add
inc
repnz
add
or
ja
inc
push
mov
xchg
ret
push
add
add
stc
nop
jb
popf
mov
mov
div
nop
cld
jmp
add
int3
les
xor
push
mov
add
add
ljmp
mov
sbb
cmpl
jmp
fadds
and
inc
add
add
xor
push
mov
xchg
ret
jo
mov
add
stc
nop
jb
xor
and
fwait
mov
push
mov
xchg
ret
lock
leave
push
stc
nop
jb
add
or
scas
add
stc
nop
jb
add
add
scas
add
add
jp
jbe
nop
cld
jmp
push
add
add
push
mov
xchg
ret
mov
movsl
lret
pop
stc
nop
jb
test
cmpsl
and
add
add
push
mov
xchg
ret
mov
enter
sbbb
lcall
add
lods
push
push
mov
xchg
ret
add
add
add
sub
add
add
add
xor
and
stc
nop
jb
and
mov
stc
nop
jb
lock
add
cld
jmp
pop
mov
mov
stc
nop
jb
test
fsts
mov
xchg
ret
mov
add
pop
lds
push
mov
xlat
add
into
into
pop
mov
dec
or
mov
xchg
ret
cmc
cs
mov
add
stc
nop
jb
add
add
nop
cld
jmp
push
add
pop
lret
nop
jb
scas
and
cmc
add
and
sub
adc
incl
cltd
add
mov
add
nop
cld
jmp
add
fadds
stc
nop
jb
adc
add
push
popf
add
call
stc
nop
jb
add
out
mov
nop
cld
jmp
add
sbb
sti
nop
cld
jmp
ja
add
pop
add
add
mov
nop
cld
jmp
inc
lock
sbb
in
es
xchg
pop
mov
fcoml
mov
xchg
ret
add
stos
mov
push
stc
nop
jb
mov
addb
sbb
cld
jmp
add
add
les
nop
jb
add
add
or
mov
xchg
ret
add
sub
cld
inc
add
flds
add
out
stc
nop
jb
add
push
xor
test
cld
stc
nop
jb
int3
int3
mov
mov
stc
nop
jb
lret
add
adc
mov
nop
cld
jmp
ss
int3
add
cld
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
or
lock
xor
push
mov
xchg
ret
lret
fcomps
mov
push
mov
xchg
ret
ss
ja
dec
sub
stc
nop
jb
add
add
imul
sub
incl
and
mov
stc
nop
jb
add
cmc
neg
movzwl
stc
nop
jb
popf
testb
and
stc
nop
jb
pop
lock
lret
add
mov
xchg
ret
push
mov
push
jmp
leave
nop
cld
jmp
mov
loop
and
mov
cli
nop
cld
jmp
jo
add
lret
jne
inc
cmpsl
dec
push
push
mov
xchg
ret
ljmp
movsl
clc
call
incl
add
sub
nop
jb
fwait
add
add
les
cwtl
push
push
mov
xchg
ret
add
jg
dec
add
stc
nop
jb
add
mov
stc
nop
jb
mov
jno
cmpl
nop
cld
jmp
or
ss
dec
mov
stc
nop
jb
add
pop
ljmp
mov
xchg
ret
les
xchg
push
movsl
mov
nop
jb
and
dec
add
int3
lea
push
mov
xchg
ret
push
add
mov
push
stc
nop
jb
add
fcomp
add
pusha
add
jle
mov
shrb
push
add
shl
push
add
lret
in
stc
nop
jb
add
mov
xchg
ret
mov
je
stc
nop
jb
shlb
nop
cld
jmp
pop
add
mov
add
mov
test
leave
sub
nop
jb
mov
scas
pop
push
mov
xchg
ret
ja
add
dec
push
stc
nop
jb
cltd
add
les
dec
and
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
xor
jmp
add
add
xor
cmpb
lcall
add
cmp
jmp
pop
test
add
fcomp
cmp
icebp
stc
nop
jb
flds
inc
add
fisubl
ret
stc
nop
jb
add
add
add
add
pop
push
stc
nop
jb
xor
mov
lret
xchg
cli
stc
nop
jb
add
jg
dec
cmp
nop
jb
add
mov
int3
push
movb
ret
stc
nop
jb
add
xor
call
stc
nop
jb
push
fadds
rolb
fbld
xor
add
stc
nop
jb
popf
dec
test
push
mov
xchg
ret
mov
ss
cmpeqps
stc
nop
jb
add
add
mov
jmp
add
mov
jns
add
cld
jmp
mov
add
insl
add
nop
cld
jmp
les
add
lock
out
stc
nop
jb
add
mov
stc
nop
jb
add
push
stc
nop
jb
add
push
mov
stc
xor
push
mov
xchg
ret
add
add
add
je
stc
nop
jb
add
aas
cmp
nop
cld
jmp
inc
add
dec
mov
push
mov
xchg
ret
mov
rep
stc
nop
jb
add
add
add
jg
andl
pushf
incl
mov
cld
jmp
push
test
add
nop
jb
dec
dec
scas
add
push
mov
cmp
nop
cld
jmp
les
stos
add
cmpsl
dec
pop
push
mov
xchg
ret
add
mov
add
icebp
fstpt
stc
nop
jb
add
inc
movb
and
push
mov
xchg
ret
add
cmpsl
xor
pushl
stc
nop
jb
push
mov
mov
stc
nop
jb
add
int3
ja
mov
test
nop
cld
jmp
push
and
add
icebp
stc
nop
jb
and
add
adc
mov
nop
cld
jmp
add
add
add
les
nop
jb
scas
test
add
inc
add
mov
add
stc
nop
jb
mov
xchg
fdivrs
stc
nop
jb
xor
sub
cld
jmp
add
and
add
mov
nop
jb
push
les
dec
add
ret
mov
xchg
ret
mov
lods
and
imul
jb
add
jb
fldcw
mov
pusha
add
in
incl
lock
push
flds
movsb
andl
mov
xchg
ret
add
xor
movzwl
stc
nop
jb
testb
mov
and
nop
cld
jmp
jns
dec
and
mov
push
xlat
test
idivb
idiv
inc
add
add
pop
push
mov
xchg
ret
cmpsl
mov
subl
inc
add
lock
stos
fimuls
mov
jb
ja
add
rolb
xor
cld
jmp
cltd
scas
add
cs
mov
jne
push
mov
xchg
ret
add
test
sti
nop
cld
jmp
and
add
add
dec
add
push
mov
xchg
ret
adc
out
movsl
icebp
stc
nop
jb
dec
add
jmp
mov
add
add
in
insb
add
push
adc
add
stc
nop
jb
add
les
bound
add
add
call
lret
cmpl
stc
nop
jb
stos
sub
add
add
sub
cmp
nop
jb
push
test
repz
jb
add
and
mov
push
mov
xchg
ret
add
or
cmpl
push
mov
xchg
ret
add
outsl
mov
stc
nop
jb
add
pop
stc
nop
jb
add
add
arpl
nop
jb
mov
xor
or
jb
add
mov
pop
push
mov
xchg
ret
pop
add
add
mov
fdivrp
inc
add
add
loop
orl
inc
add
add
shlb
add
nop
jb
add
add
loope
jns
popa
add
nop
jb
push
add
cs
mov
push
mov
xchg
ret
add
mov
sub
mov
xchg
ret
inc
lock
pop
mov
stc
nop
jb
fwait
add
add
js
and
stc
nop
jb
and
add
add
add
stc
nop
jb
add
and
stc
nop
jb
jns
add
mov
nop
cld
jmp
add
add
aas
stc
nop
jb
les
add
dec
mov
nop
cld
jmp
add
add
xchg
add
stc
nop
jb
push
add
cwtl
and
push
mov
xchg
ret
add
add
add
nop
jb
cmc
add
add
mov
jb
test
fiaddl
pop
pop
jne
stc
nop
jb
add
add
sub
mov
xchg
ret
add
incl
subb
push
mov
add
adc
mov
stc
nop
jb
add
push
sub
jb
bound
add
add
add
mov
xchg
ret
add
add
mov
ror
stc
nop
jb
add
add
add
jmp
stc
nop
jb
add
orps
nop
jb
mov
add
push
popf
adc
stc
nop
jb
add
add
movsl
out
dec
stc
nop
jb
or
add
jae
and
stc
nop
jb
pop
add
ja
dec
and
stc
nop
jb
add
loop
mov
pop
stc
nop
jb
add
jo
add
stc
nop
jb
add
push
nop
cld
jmp
add
adc
sbb
in
inc
lret
push
mov
movsb
into
and
xorb
incl
add
add
push
add
ss
mov
stc
nop
jb
add
cltd
sub
shlb
add
nop
jb
inc
stos
fidivl
add
shl
stc
nop
jb
or
add
add
dec
nop
cld
jmp
sub
add
add
mov
stc
nop
jb
and
or
nop
cld
jmp
add
push
jl
stc
nop
jb
push
add
add
add
push
push
mov
xchg
ret
add
pop
scas
push
dec
push
mov
movb
add
mov
roll
add
add
sbb
ret
push
xchg
xchg
mov
imul
pop
or
lcall
movb
test
jae
jb
leave
mov
dec
jbe
mov
cwtl
loope
fcompl
xchg
dec
fwait
sbb
push
test
cltd
cmp
repz
hlt
data16
xchg
sbb
lea
ja
and
insl
adc
test
lret
enter
cltd
mov
jmp
add
lret
adc
xor
clc
pop
and
imul
push
frstor
add
test
jae
sub
mov
and
mov
mov
outsl
insb
dec
jg
and
cmp
and
add
cld
mov
call
cmp
add
inc
cld
movsl
ss
mov
fnstenv
sub
xchg
mov
add
cld
pop
and
rol
fdiv
nop
das
inc
add
pop
bound
pushf
inc
add
add
inc
pop
pop
push
or
jmp
mov
add
fildll
out
lret
add
add
inc
add
ljmp
mov
rep
imul
cmp
add
daa
ljmp
pop
sti
push
pop
les
cmp
fcmovu
imul
repz
pop
cmp
ret
lcall
add
ficoml
in
mov
add
fcmovnbe
insb
les
leave
aaa
pop
jp
mov
xchg
bound
jo
repnz
out
gs
jmp
add
or
mov
or
cmpsl
divl
jno
add
je
add
repnz
test
repnz
bound
clc
cld
or
add
cli
pop
mov
add
stc
xchg
mov
sti
aaa
and
inc
add
jecxz
inc
test
adc
cs
add
popa
test
add
clc
mov
dec
pop
test
ljmp
les
mov
xor
rorl
cmp
lcall
and
and
push
pop
mov
xor
sub
or
jp
decl
push
sbb
test
add
ds
popf
std
into
out
aaa
test
push
mov
inc
add
xor
inc
jge
push
xchg
add
dec
js
pop
data16
cmp
pop
jnp
ret
bound
xchg
mov
mov
add
lahf
cld
or
cmpsl
sub
or
rorb
dec
lds
loopne
mov
frstor
add
addb
jecxz
inc
add
je
dec
ret
xchg
cmpl
fldl
jne
fwait
daa
mov
adc
sbbl
pop
add
jmp
mov
js
mov
icebp
clc
sub
out
mov
pop
flds
rolb
ficoms
jmp
sub
sbb
xor
or
push
mov
dec
das
jmp
sbb
sti
mov
pushf
add
mov
add
sbb
add
add
sub
and
jecxz
mov
add
ds
mov
add
and
mov
into
mov
or
sub
popf
in
mov
sub
mov
xchg
jae
add
jb
fildl
add
and
adc
pop
test
leave
aam
add
sbb
dec
adc
rolb
icebp
cs
inc
add
pop
leave
mov
xor
movl
add
sahf
in
or
rolb
stos
fs
pop
jg
faddl
adc
xchg
imul
in
adc
add
hlt
stc
or
insl
sbb
or
inc
add
mov
jg
cmp
add
cmp
test
out
jecxz
cmpsl
mov
into
addb
mov
jns
addb
xor
int3
data16
daa
xchg
test
mov
push
sbb
add
add
jns
xchg
push
movsb
call
xor
pop
ss
fwait
xchg
addr16
xchg
sti
lods
sub
fisubl
jp
cli
int3
pop
cmp
add
int
out
enter
in
popf
jmp
mov
dec
aas
icebp
and
dec
daa
lret
dec
inc
add
mov
jle
mov
int
dec
inc
add
ret
jmp
icebp
dec
dec
mov
cmp
xchg
testb
push
push
mov
add
daa
jge
push
insb
dec
inc
add
sbb
cmpsl
push
cmp
test
stos
inc
add
adc
ss
pop
mov
arpl
dec
or
loop
dec
insl
ret
daa
rcrl
ds
pop
or
movsb
sub
dec
outsb
xor
jno
fcomps
fcmovu
and
push
mov
push
and
test
in
push
daa
sub
xchg
lcall
xor
mov
or
xor
mov
lods
jmp
hlt
leave
xchg
and
mov
enter
fiadds
sti
inc
js
xchg
in
popf
or
ja
outsb
mov
aas
sti
fs
mov
mov
aam
sti
or
xlat
push
shlb
scas
mov
push
mov
add
shll
xor
pusha
add
add
jp
add
or
movsb
fldenv
jb
fldcw
popf
pusha
add
add
push
adc
mov
lret
mov
mov
mov
jmp
xor
hlt
stos
hlt
adc
rol
inc
add
cli
lret
addr16
and
cmp
jne
aam
out
sahf
sub
daa
fisubrl
sbbl
fdivs
pop
bound
aam
push
add
pop
cltd
pop
dec
test
out
pusha
add
scas
shl
cmp
movsl
mov
pop
insb
lock
notb
mov
cmc
in
fsubl
add
test
cld
bound
add
aaa
dec
xor
fcom
mov
in
add
stc
adc
xor
mov
js
cmpsb
mov
mov
dec
rolb
add
sub
inc
add
and
xchg
pavgb
mov
add
fsubrs
mov
add
outsb
and
adcl
inc
mov
into
push
sub
push
inc
inc
add
add
jp
jbe
xchg
add
xor
cmp
cmp
jae
or
or
xchg
into
fldl
xchg
dec
sbb
inc
xor
dec
xchg
xchg
aaa
les
mov
xor
sti
jae
push
mov
mov
scas
insb
lods
pop
jp
add
popf
dec
cmp
pop
push
adc
enter
gs
je
jae
xchg
push
test
es
imul
int3
add
xchg
testb
es
test
and
lret
cmp
stos
push
push
mov
add
and
jg
repnz
push
jecxz
pop
das
int
add
stos
xchg
bound
and
adc
pop
loop
mov
lret
xchg
dec
mov
pusha
add
es
add
add
mov
or
add
add
push
in
inc
add
add
mov
incb
add
jecxz
adc
push
mov
pop
addb
or
cs
xor
dec
test
sub
mov
pop
cs
cmp
pop
xchg
out
int3
and
inc
xchg
addb
imul
jle
xchg
and
or
add
adc
dec
movb
adc
lods
imul
push
jmp
mov
sarl
add
dec
xor
push
rolb
adc
shll
sbb
add
or
sbb
sub
mov
xchg
xchg
dec
adc
add
xlat
pop
in
cmpsb
xchg
push
ja
xchg
imul
pop
into
loopne
addb
pop
lock
dec
sub
cwtl
imul
lea
add
popf
scas
sub
gs
inc
jecxz
test
push
mov
jecxz
adcl
mov
int3
mov
lods
or
dec
pop
lods
movb
xor
testl
orl
mov
ficoml
popf
adc
xor
test
jmp
adc
add
sub
int
scas
mov
fwait
jo
add
sbb
fcom
dec
and
call
and
outsl
inc
add
mov
add
xchg
mov
sbb
stc
test
jnp
sub
out
fucomip
insl
xlat
mov
test
popf
mov
das
push
rorl
addb
mov
mov
in
iret
dec
push
fmull
or
das
cmp
adc
ja
add
rorl
pop
les
mov
repnz
jb
push
xchg
adc
xchg
orl
out
push
mov
sahf
sub
adc
xchg
inc
add
stc
cmp
add
sbb
sub
mov
bound
fidivl
inc
mov
pop
xchg
push
cmp
je
je
xchg
adc
aam
jle
test
push
mov
add
and
loop
mov
jne
fisubrl
stos
jmp
pop
push
jnp
mov
push
add
jno
xchg
mov
push
bound
and
jle
negl
mov
lret
arpl
mov
testb
pushf
sti
stos
dec
sbb
add
sub
jmp
and
push
call
or
adcl
jle
mov
add
fstps
push
sub
xchg
fistl
ror
rclb
mov
dec
daa
icebp
cmp
xor
cmpsl
jecxz
pop
mov
push
mov
adc
add
xor
ljmp
notl
xchg
inc
add
pop
xchg
push
xor
nop
out
pop
hlt
or
mov
adc
sbb
and
stos
les
lahf
xor
push
mov
add
xchg
jl
push
adc
mov
cmpsl
sub
aad
inc
xor
push
add
sbb
stos
adc
ljmp
es
lods
popa
xchg
test
sub
icebp
sbbl
jae
pop
addb
and
imul
add
lret
bound
adc
lahf
mov
mov
into
bound
xlat
shll
fs
mov
fwait
inc
push
mov
loop
inc
push
adc
rcl
mov
push
ja
push
xchg
lods
xchg
cmp
inc
and
mov
arpl
xor
pop
sub
int
mov
fsts
jecxz
sub
or
cld
cmp
sub
adc
mov
rol
add
jb
push
lcall
cmp
pusha
add
jns
add
inc
out
push
cmp
pop
xchg
in
nop
nop
push
sarb
mov
jl
cltd
adc
pop
addr16
cmp
or
inc
add
add
sbb
mov
push
and
test
mov
lahf
out
pop
lods
cmc
in
in
push
sub
add
push
pop
cmp
call
pop
and
jno
add
lahf
cmpsl
repnz
addb
int3
cltd
sub
stc
mulb
inc
cmp
jmp
rclb
sbb
pop
inc
add
pop
cmpsl
mov
sbb
or
xor
rolb
sbb
lock
xchg
xchg
test
mov
dec
jbe
cmc
lret
int
sti
jecxz
cmpsb
scas
mov
jl
sub
add
inc
ret
add
pop
pop
pop
cmp
or
dec
mov
mov
int3
xchg
leave
push
mov
lock
push
dec
int
add
pushf
ljmp
cmp
addb
inc
add
push
dec
pop
outsb
cmpsb
es
test
mov
dec
and
push
movsb
movsl
movb
dec
mov
adc
add
les
rclb
jg
add
test
sub
mov
push
lret
sarl
aam
mov
jbe
gs
in
lods
popa
nop
mov
mov
add
and
ljmp
add
stos
cwtl
pop
jno
mov
int3
test
lret
mov
mov
add
push
daa
add
mov
push
shll
ficoml
hlt
xchg
and
cwtl
cmpsl
sub
mov
lods
jmp
xchg
dec
leave
fdivl
cmp
cmova
push
push
push
jl
jecxz,pt
lret
add
and
std
xor
inc
add
lret
cmpsl
adc
lds
add
mov
adc
inc
mov
pusha
add
sarl
and
bound
mov
data16
rolb
ja
scas
in
mov
or
das
pop
inc
sub
push
push
in
and
or
in
enter
jge
xor
dec
push
mov
cmpsl
lcall
cmovns
xchg
insb
xchg
movb
mov
sbb
repnz
add
lret
jnp
xor
add
pop
fistps
mov
lret
int3
int3
and
fnstenv
adc
scas
and
cmpsl
addb
flds
iret
dec
adc
push
jmp
arpl
fisubrl
fwait
addb
scas
fistl
jge
enter
or
push
in
stc
jmp
add
push
mov
nop
leave
sbb
in
arpl
inc
push
pop
push
or
add
cmp
fwait
pusha
add
and
aam
mov
fwait
cmpsb
icebp
hlt
fldt
mov
add
xchg
cmpsb
mov
bound
test
push
jo
mov
inc
jne
mov
popf
in
es
push
test
and
and
adc
mov
xchg
mov
and
push
fmul
and
gs
adcl
and
fbstp
mov
mov
pop
stc
and
xor
mov
sub
lods
sub
jl
sub
add
adc
sar
lock
movhps
dec
call
divl
xchg
xor
insl
xor
jns
pop
mov
add
das
mov
pop
aas
in
add
imul
mov
sub
adc
add
xlat
js
test
cld
pushf
or
mov
dec
sub
dec
xor
dec
rorl
cwtl
inc
add
mov
pop
lar
shl
and
xchg
loopne
lret
sbb
sbb
adc
pop
sahf
adc
jnp
ficomps
lret
sahf
out
pslld
sub
aas
movsb
daa
shl
sub
add
adc
insb
incb
movb
andl
and
and
xchg
fwait
stc
cmp
fwait
or
es
add
rcll
sub
cs
fcomps
mov
jae
dec
lret
xlat
outsb
mov
add
mov
cmpsl
scas
sub
es
clc
mov
jge
bound
mov
jle
add
sti
stos
adc
cli
lods
lcall
pusha
add
std
lock
repnz
daa
and
rclb
popa
inc
add
xor
jb
les
mov
scas
mov
inc
push
lret
pop
lret
iret
sbbl
mov
rcrl
mov
add
add
adc
and
add
sbb
mov
sahf
sbb
sahf
lock
rolb
in
cs
push
xchg
sbb
mov
adc
aam
call
add
lods
sti
lret
add
adc
jg
add
add
xor
jmp
mov
cmp
cmp
fisttps
sub
add
pop
setg
jno
jae
movsb
ss
iret
mov
fldenv
add
cmpsl
aas
push
jb
cmpsl
daa
add
jg
addb
adc
outsb
or
scas
imul
xlat
adc
xchg
push
jns
addb
hlt
repnz
and
pushf
nop
fists
adc
shrl
loope
jp
pop
outsl
or
push
call
in
iret
mov
inc
sbb
pusha
add
push
shll
fidivl
sub
notl
add
mov
adc
loope
push
or
push
add
cmp
mov
inc
fdivrs
shll
jecxz
pusha
add
cmc
xor
scas
scas
sbb
decl
xchg
cltd
fwait
jge
add
pop
jge
mov
and
bound
pop
movsl
cltd
mov
and
dec
rolb
test
jae
pop
mov
push
cmp
and
dec
xor
mov
shlb
add
add
or
push
add
sbb
dec
sub
insb
nop
iret
mov
cmp
lret
cmp
repz
addr16
add
jecxz
hlt
sbb
addb
aaa
loope
add
add
add
push
fs
add
mov
inc
jl
fs
mov
adc
nop
dec
cli
fsubrp
or
cmp
mov
fldl
inc
aaa
mov
mov
sbb
mov
jne
push
cmpsb
xor
ret
out
cli
test
inc
cmc
inc
insb
inc
add
mov
jcxz
rcl
imul
test
cmp
jle
adc
xchg
pop
popf
jmp
loopne
fadds
mov
in
movsb
pop
or
test
add
lods
pushf
jo
xchg
or
push
and
loopne
or
lds
cmpsl
aam
std
cmpsl
aad
cmp
ret
sbb
mov
shl
and
loope
mov
cmp
outsl
stos
fcompl
out
fstpl
gs
pop
add
popf
push
stos
mov
lahf
outsl
in
lds
aam
jmp
scas
jno
add
xchg
jno
mov
sahf
cmp
imulb
fistpl
cmpsl
stos
pop
movb
sar
lahf
push
pop
sub
xchg
pop
outsb
ja
cmp
or
or
and
iret
push
lretw
and
add
and
xchg
add
dec
mov
add
fwait
loop
jns
out
mov
pop
jl
sbb
cmp
xchg
inc
add
inc
cmp
add
ret
cli
dec
lahf
imul
lret
cmpsb
lahf
mov
jbe
add
js
popf
cmc
icebp
divl
lods
ficoml
std
mov
les
dec
jmp
inc
add
add
popa
pop
mov
add
add
jo
and
popl
les
cs
add
cmp
fidivrs
add
or
xor
sti
scas
mov
repnz
nop
call
sar
mov
icebp
mov
ret
ss
cmp
xchg
mov
adc
push
push
add
lahf
cmp
lcall
xor
rolb
jecxz
lret
mov
leave
cmp
scas
out
cmpsb
jge
enter
mov
inc
add
mov
cmp
in
sahf
sub
call
push
jle
jl
pop
jmp
lea
pop
outsl
outsl
cmp
mov
jecxz
lret
daa
insl
sbb
out
push
sub
addr16
les
xchg
inc
add
pop
movsl
or
dec
jb
fs
imul
add
shrl
push
incl
jb
push
inc
add
movb
jl
add
dec
mov
add
dec
sbb
inc
add
stos
movb
out
jbe
shr
ret
dec
jae
in
shll
sahf
sbb
shlb
in
and
add
fsts
test
mov
mov
adc
daa
enter
xchg
in
fcoml
ds
bound
addb
addb
mov
adc
in
add
int
mov
xchg
mov
in
in
rorb
jecxz
ret
sarl
leave
addb
add
push
int3
jns
addb
mov
divb
fnstcw
out
and
inc
inc
push
test
or
ffreep
inc
mov
movsl
aam
and
loop
fisubrs
lahf
add
or
mov
jnp
jno
push
mov
nop
cwtl
cmpsl
cmpsb
fcmove
mov
xchg
cmc
push
lods
or
xorl
jo
loopne
push
adc
test
iret
push
push
sub
addb
or
popf
xor
adc
je
divb
mov
or
sbb
mov
lock
pop
lea
out
cli
ds
jb
add
inc
adc
cltd
mov
xchg
cmp
and
xlat
addb
lret
or
push
add
leave
add
mov
cmc
xchg
stos
faddl
aam
in
rcll
loop
rolb
xchg
loopne
hlt
adc
add
jnp
sbb
cmp
inc
add
sub
imul
add
es
out
cmp
sub
inc
add
jge
sbb
arpl
or
push
and
lock
out
idiv
movsb
call
gs
inc
pop
push
lcall
sahf
push
insb
cmp
add
inc
add
test
mov
je
jnp
inc
add
fs
adc
fcompl
add
mov
xor
xchg
push
mov
mov
cmpsb
jg
xor
cwtl
cmpsl
addb
ja
add
cmc
adc
cmpl
je
or
testl
jge
jne
stos
clc
test
aam
repz
jp
inc
push
adc
cli
arpl
cwtl
and
addb
sbb
outsb
stos
dec
push
add
lahf
push
add
adc
add
imul
lock
inc
push
divb
push
mov
lds
adc
xchg
hlt
fsubrl
add
js
sti
push
sahf
and
add
or
xor
add
pop
stos
rolb
or
fcomps
sub
mov
cli
push
dec
xor
mov
daa
sub
dec
scas
or
dec
add
mov
xchg
cmpsl
mul
out
out
enter
adc
sbb
add
sbb
enter
pop
dec
sub
aas
ror
pop
mov
xchg
cmp
add
or
xchg
jge
xor
sub
loopne
addr16
out
xor
dec
sbbw
and
shlb
mov
add
xor
mov
jns
test
and
xor
mov
fsubl
add
clc
popa
dec
sub
sahf
sub
jge
jle
addb
ficoml
popf
test
mov
xchg
outsl
push
out
inc
add
and
mov
lods
mov
or
addb
fsubrs
adc
ljmp
pusha
add
add
gs
push
mov
stc
movsb
into
and
mov
stc
test
sbb
add
mov
add
clc
fcmovnb
push
jns
cmp
lret
enter
mov
jno
add
xchg
rcll
xchg
js
mov
nop
arpl
add
mov
pop
idiv
popa
imul
clc
ficomps
xchg
addb
add
pop
aam
cmpsl
fnstenv
add
outsb
shll
xor
inc
add
and
cmp
xchg
inc
sbb
mov
test
cmp
cmc
push
adc
mov
test
sbb
repnz
push
imul
inc
add
inc
add
out
push
add
mov
into
xlat
call
xor
cld
das
ss
mov
add
clc
adc
into
fnstenv
lds
addb
stc
outsb
cwtl
mov
add
stos
push
xchg
enter
add
or
pop
push
lds
arpl
out
retw
test
pop
cmp
push
xchg
sbb
add
sub
lods
loop
imul
fsubl
stc
sti
dec
mov
add
testl
pop
frstor
ficompl
imull
sbb
subl
mov
mov
rcrl
xchg
mov
rclb
add
lock
addr16
xchg
sub
mov
in
fst
push
movb
mov
mov
sub
mov
mov
es
mov
fstps
mov
xchg
loopne
pop
inc
dec
js
sub
mov
add
shll
dec
sbb
fildl
cmp
scas
ja
and
sub
mov
popa
movsl
repz
inc
add
push
mov
fbstp
into
xchg
inc
add
pop
iret
fwait
lahf
jg
jle
mov
das
jbe
xchg
mov
pop
and
push
xor
lahf
and
mov
mov
insl
imul
or
dec
dec
inc
add
mov
imul
lods
cs
push
arpl
xor
out
fldcw
mov
icebp
lock
cli
popf
icebp
jo
or
lods
push
stc
and
rorb
xchg
mov
sbb
repnz
call
pop
jnp
jns
add
jle
stc
jmp
aam
arpl
fidivl
add
ds
js
mov
mov
cld
and
or
mov
ljmp
ret
mov
cmpsl
jbe
xor
mov
add
cmp
movsb
pop
ret
sbb
subl
dec
pop
jb
jns
add
nop
jp
mov
cmc
out
loopne
inc
add
movb
mov
pop
je
fidivrs
lret
pop
inc
add
adc
stos
out
pushf
push
xchg
mov
and
ds
loope
dec
das
addr16
xchg
inc
shrb
add
mov
xor
mov
sar
sti
push
hlt
into
lret
bound
add
ret
insl
mov
add
stos
movsb
push
adc
sbb
lea
push
jno
cmpsl
fisubl
add
sub
pop
repnz
mov
add
clc
sbb
add
xchg
lea
insb
pop
cld
push
xchg
adc
add
inc
hlt
inc
add
fiaddl
adc
in
in
xor
and
ficompl
mov
call
pop
test
sub
cs
popf
rcrb
stos
add
cmc
sbb
lahf
sahf
addb
sbb
or
mov
xor
jle
jae
out
test
leave
int3
gs
paddb
mov
mov
add
add
rorb
mov
dec
sbbl
add
xlat
adc
add
sbb
sbb
pop
rolb
and
loope
daa
aaa
push
mov
sbb
ret
lret
dec
ss
mov
aam
xchg
icebp
jae
add
mov
push
ret
leave
das
sub
dec
jae
out
fcompl
jae
push
fnstsw
add
pop
adc
mov
gs
rol
add
test
pop
xchg
mov
das
mov
cmp
ss
mov
ds
rorb
mov
jno
fwait
jbe
sbb
addr16
push
inc
add
stos
orl
mov
sub
and
fwait
mov
arpl
inc
add
int
outsl
in
sub
add
cmp
addb
xor
sahf
cli
les
jg
add
insb
push
or
ret
sub
add
imul
push
repnz
jge
xchg
out
push
push
shlb
add
sbb
int
lret
and
add
out
mov
sbb
jecxz
jo
aas
pusha
add
mov
xor
jle
adc
shl
fs
nop
inc
add
popa
arpl
add
loope
push
pop
insb
sub
push
xchg
mov
mov
ds
sbb
add
sub
cli
cmp
xlat
mov
add
xchg
push
loopne
xor
ljmp
and
xor
movb
mov
ss
adc
cmp
add
add
not
add
je
ficoms
outsl
scas
jmp
pop
cmp
xchg
rolb
int
dec
add
or
jg
cltd
push
test
push
add
add
gs
outsb
ja
int
mov
ljmp
aas
mov
rcrl
shrl
or
add
inc
inc
xchg
xchg
push
xchg
pop
js
js
adc
sub
push
sbb
inc
add
mov
xchg
push
shrl
and
sti
push
jecxz
adc
in
iret
and
stc
inc
or
push
adcl
pop
mov
adc
add
xchg
xor
cltd
adc
aam
inc
add
ja
add
lods
xchg
xor
add
mov
fnop
inc
add
adc
sub
xor
pop
adc
jp
pushf
sub
push
xor
pop
ficoms
push
jecxz
nop
lds
and
jge
add
push
repz
ljmp
jbe
sub
lcall
inc
add
les
mov
xchg
jae
jae
jb
fiadds
and
ret
addb
loope
pop
addb
cwtl
lods
in
popa
mov
out
push
ss
add
dec
xchg
mov
xor
lahf
mov
hlt
pop
cmp
mov
pop
mov
jmp
js
mov
fcmovne
ljmp
addb
cmp
icebp
sub
sbb
mov
add
jecxz
fcmovnbe
or
cmc
setb
add
dec
shll
jmp
movsb
je
notl
mov
inc
repz
push
stos
scas
mull
or
mov
lock
fcoms
mov
dec
loop
cmpsb
mov
cmp
add
stc
jle
jp
sbb
add
jo
mov
push
sbb
fldenv
cmp
lods
mov
outsl
xor
jae
add
fcmove
cmp
xor
push
movsl
or
pop
loope
add
add
add
xchg
and
jae
pop
xor
mov
std
mov
shll
nop
jns
jle
add
mov
dec
lret
addb
jge
iret
jb
jmp
jae
jae
dec
push
std
jp
jp
mov
add
gs
xchg
leave
xorl
popa
jecxz
xchg
fwait
mov
add
add
push
push
fs
ja
popf
dec
pop
pop
mov
imul
sub
test
arpl
sub
add
into
shl
scas
push
mov
in
lds
add
and
arpl
jp
adc
arpl
roll
mov
leave
cmp
mov
addb
add
xor
and
scas
or
adc
popa
xchg
sbb
pusha
add
or
stos
cmpsb
add
sub
ss
rcrl
sti
and
pop
push
fs
push
pop
imul
add
inc
add
sahf
and
sub
push
popa
cmp
push
jl
lock
mov
lcall
and
sbb
jl
adc
aad
stc
xchg
pop
aam
mov
add
add
loope,pt
cmp
aad
insb
jecxz
lds
add
ja
push
aaa
test
jmp
nop
push
adc
xchg
xchg
xchg
pop
sub
sbb
push
and
adc
push
cmp
int3
out
mov
cmpsb
lcall
cmpsl
mov
and
int3
shlb
loope
jne
sarl
pop
jmp
int
shrl
stos
dec
cmp
jnp
imul
fidivrl
add
xchg
adc
imull
add
dec
xor
add
xchg
mov
mov
mov
pop
jecxz
negb
cmp
add
xor
test
adc
jnp
stos
cmp
mov
add
push
fisubl
fildl
rolb
xlat
adc
xchg
cmpsb
jns
mov
pop
xor
add
jmp
mov
call
pusha
add
jl
pop
sbb
lret
pop
lods
pop
dec
xchg
sub
add
cwtl
mov
and
add
jae
data16
or
aas
jne
adc
xor
and
push
dec
push
clc
movsb
mov
mov
xorl
fprem1
jge
int
pop
inc
add
fadds
mov
mov
mov
sbb
or
into
inc
add
aas
call
int3
cs
clc
cmp
xor
lds
dec
ret
add
add
das
je
fwait
out
pop
inc
add
add
xchg
xchg
jae
pop
mov
mov
ds
dec
fstpt
sub
int
mov
mov
testb
jle
outsl
adc
and
sub
cmp
and
add
pop
mov
lds
addb
int3
int3
mov
push
lcall
add
add
pop
pop
test
sub
mov
adc
add
jg
xchg
daa
xchg
mov
enter
aam
xchg
nop
loope
or
js
push
rorb
data16
add
lea
push
out
hlt
jo
mov
out
mov
or
mov
addb
fimull
gs
out
lahf
imul
scas
and
mul
mov
repnz
cld
cmpsb
pop
bound
mov
cli
jae
sahf
not
inc
add
push
add
cmp
into
push
sub
js
sbb
dec
cltd
addr16
xchg
jmp
add
adc
sub
inc
add
mov
ja
cwtl
lods
push
je
mov
int3
dec
or
sub
dec
fwait
lcall
fwait
mov
cmp
pop
imul
add
lcall
repz
xorl
lock
mov
mov
ja
dec
icebp
ljmp
or
xchg
mov
in
pop
or
push
add
shll
shll
add
sub
add
out
es
mov
inc
addr16
xor
fcmovne
stos
sub
mov
jno
add
shrl
pop
sbb
and
mov
mov
or
inc
cmp
out
cwtl
cli
inc
add
test
add
and
scas
xchg
stc
xchg
mov
sbb
add
sar
clc
push
or
add
jecxz
pop
adc
scas
xchg
nop
pop
stos
es
and
and
imul
wrmsr
stos
movb
enter
fs
maxps
pop
pop
jecxz
shrb
mov
mov
in
movb
subl
cwtl
int3
cmp
stos
inc
add
in
enter
and
mov
sbb
sub
outsb
loopne
add
mov
or
jle
push
push
jle
xor
aam
out
add
adcl
nop
test
aaa
clc
aad
pop
fs
adc
push
stos
outsl
add
push
mov
fwait
in
jge
add
jno
test
xchg
test
js
add
add
mov
sbb
push
leave
add
xor
bound
sub
jmp
mov
jb
add
cmp
notl
mov
imul
sahf
pop
dec
fcmovnu
mov
add
add
cmp
add
mov
icebp
jmp
jmp
ss
adc
xchg
adc
jecxz
dec
push
pop
mov
pop
push
pop
repz
jmp
test
add
les
mov
add
cwtl
lret
pop
inc
test
jne
leave
or
mov
mov
lock
add
sbb
and
out
or
mov
pop
add
fldenv
call
add
pop
in
mov
mov
sub
daa
pushf
xchg
mov
add
xlat
test
add
adc
shl
icebp
stos
pop
pop
adc
mov
add
xor
aaa
addb
jbe
add
jne
mov
dec
outsl
dec
dec
movsb
mov
test
or
aad
aaa
and
mov
aaa
jle
loop
add
aas
stos
pusha
add
add
jp
insl
inc
popf
cmc
jae
add
push
insb
jb
xchg
xor
push
add
sub
or
scas
pop
dec
pop
int
push
cmp
es
inc
cmp
pop
lods
lret
push
xchg
out
outsl
jbe
sbb
jne
add
add
stos
pushf
xor
push
mov
lret
sbb
repnz
daa
inc
inc
nop
push
sar
add
sbb
mov
jl
cmp
in
add
int
jno
lods
aam
fidivrs
ds
inc
add
stos
fwait
add
cltd
or
and
push
xchg
ret
mov
add
mov
out
hlt
sbb
mov
xor
mov
xor
lea
out
mov
cs
or
add
pop
insl
sbb
xchg
mul
add
shrl
push
outsb
popf
pop
push
jecxz
xchg
loopne
mov
mov
pop
mov
out
cs
dec
mov
cmp
call
ja
jmp
movsl
ret
inc
dec
insb
int3
xor
xor
imul
aaa
cmp
jbe
mov
cmp
xor
push
sub
dec
nop
scas
add
arpl
pop
mov
cmpsb
dec
repz
cmpl
add
dec
mov
lock
stc
push
ja
data16
jb
gs
sbb
xchg
xor
jae
nop
cltd
and
xchg
movsl
mov
dec
sub
mov
incl
lea
out
push
je
jmp
xor
mov
js
dec
shl
xchg
cs
cmp
xor
pop
dec
jge
xor
out
jne
add
xor
lock
shrl
add
ljmp
mov
repnz
sub
add
in
rolb
adc
loop
mov
sub
add
push
adc
je
or
xchg
jmp
popf
repnz
add
pop
jno
inc
add
push
jecxz
clts
add
repz
xor
inc
add
add
mov
std
dec
subl
mov
adc
mov
test
xchg
nop
mov
outsl
lock
pop
bound
das
fistl
in
xor
test
nop
repnz
je
or
mov
dec
ret
sbb
in
pop
jns
lret
outsb
psrlq
push
rolb
mov
jb
das
dec
sbb
insb
cmp
in
cli
mov
in
icebp
inc
and
inc
and
jo
adc
add
xchg
sbb
gs
cmp
sbb
subl
fisttpl
out
sti
jnp
mov
add
out
pop
push
push
or
inc
add
add
mov
adc
cmc
xchg
cmp
mov
push
add
fwait
pop
ret
jl
xchg
jmp
cld
in
mov
sub
xchg
xor
repz
test
repnz
fsts
repz
adc
loopne
addb
test
test
ss
and
sub
xchg
sub
pop
jnp
iret
xchg
add
mov
add
popf
push
dec
or
jle
jb
push
xchg
mov
ja
out
cs
inc
fwait
or
dec
je
inc
and
dec
adc
lahf
adc
add
ds
jnp
pop
dec
jle
out
aad
mov
mov
aas
cltd
sub
mov
xor
mov
jp
movb
out
shl
stos
pusha
add
or
std
enter
bound
pop
xchg
xchg
or
and
ds
dec
jns
add
movsb
pop
mov
addb
cmc
xlat
sti
add
jge
fwait
das
xor
mov
test
outsb
in
add
or
movsb
addb
aaa
out
inc
add
jo
and
add
mov
xor
pop
pop
adc
dec
lret
jns
addb
lret
sbb
push
in
lea
std
inc
mov
add
jbe
add
loope
dec
xchg
xchg
add
in
cltd
es
mov
aam
fnsave
inc
add
add
loopne
lods
xor
add
jmp
mov
mov
daa
cli
jns
mov
mov
outsb
xchg
inc
sbb
or
in
addb
dec
xchg
sti
sub
in
mov
insb
andl
dec
lock
testb
add
sbb
sub
mov
add
stos
fs
dec
and
pop
pop
pop
cmc
int
mov
push
push
gs
lret
jg
mov
movb
pop
gs
ss
aad
jmp
mov
xlat
dec
daa
es
insl
mov
repz
movsb
sahf
loope
jle
mov
cli
xor
push
rcll
pushf
lahf
pop
push
mov
add
arpl
out
jl
stos
data16
mov
sarl
xor
nop
xchg
test
add
mov
adc
jbe
dec
adcl
in
cmpsb
das
cmp
lcall
out
sub
add
adc
cmpsb
add
mov
aaa
sarl
dec
dec
xchg
cmp
imull
std
out
add
jnp
lds
aas
cmc
in
dec
push
add
and
sub
push
lods
pop
mov
in
add
filds
inc
fs
mov
pop
stos
data16
cmpsb
dec
adc
sub
adc
sbb
repnz
cmp
lahf
sarl
mov
dec
addb
stos
not
mov
sub
push
popf
ret
leave
add
dec
in
sbb
ja
add
test
xchg
addb
add
and
ljmp
xlat
hlt
insl
outsl
out
popa
fisttps
aad
push
xor
jl
std
cmp
sbb
das
xor
cld
mov
mov
cmp
jge
push
inc
adc
adc
dec
aam
jmp
int3
push
add
push
in
pop
mov
insl
test
xchg
cmovl
xchg
mov
xor
push
dec
cmp
cmp
pop
ret
pop
in
lahf
jne
shlb
add
and
addb
sahf
xchg
fldenv
xchg
test
dec
addb
pusha
add
push
outsb
loopne
sub
adc
add
push
dec
jno
out
aad
fs
push
adc
add
lret
aam
ret
in
mov
cmp
cmp
lahf
clc
test
push
sub
xchg
add
push
aas
leave
push
js
jg
fs
mov
lret
mov
add
add
dec
daa
cmpsb
sbb
repz
aam
sti
je
mov
lea
mov
adcl
sarl
xchg
xor
ret
dec
mov
add
in
mov
pushf
cmc
repnz
pop
ds
rolb
icebp
aas
lds
pop
pushf
addr16
mov
pop
pusha
add
daa
outsb
sub
inc
arpl
push
out
pop
das
inc
add
stos
and
xchg
sub
das
jb
mov
sbb
push
add
subl
add
movsl
mov
ret
rolb
ljmp
add
jp
cltd
jno
push
popf
mov
stos
lods
sbb
sbb
add
inc
ret
and
ds
add
inc
add
dec
test
push
sub
dec
cmp
xchg
adc
add
hlt
out
dec
addb
lret
push
add
add
cmpsl
jg
add
pop
lea
mov
push
mov
aaa
in
jp
lods
loope
add
pop
inc
add
push
mov
mov
push
mov
jecxz
movsb
jae
dec
dec
adc
pop
in
push
mov
scas
jecxz
out
add
jne
mov
mov
fistpl
sub
xlat
mov
movb
gs
ljmp
add
es
add
adc
add
mov
pop
shll
add
sbb
paddb
adc
mov
push
sub
ror
or
xor
push
mov
adc
and
lock
hlt
in
mov
out
movsl
cmp
mov
pop
repz
loopne
dec
cs
das
inc
add
or
mov
cmc
outsb
rorb
pop
addb
adc
out
xchg
xlat
add
sbb
mov
iret
adc
xor
in
repz
cltd
pop
int3
sub
add
arpl
push
or
mov
pop
subl
decl
xor
pop
scas
mov
pop
stos
sub
add
dec
movsl
jbe
sub
repz
out
in
outsl
mov
sti
jns
mov
cmp
sub
or
xchg
or
and
add
push
negb
jecxz
cmp
mov
or
call
loope
flds
xor
adc
mov
add
push
add
cltd
xor
pop
and
div
mov
xor
in
mov
mov
aam
and
mov
mov
push
inc
add
jns
bound
inc
mov
pop
arpl
sub
cmpsb
cpuid
cmp
inc
add
scas
imul
xor
and
dec
sbb
movsl
jecxz
sub
les
clc
lcall
add
xchg
fwait
lea
cmp
add
or
dec
outsb
pop
jmp
or
js
dec
test
arpl
movb
int3
mov
arpl
mov
fbld
fcmovbe
and
push
rcrl
clc
sbb
mov
cmp
outsl
loope
hlt
out
jae
add
mov
xor
mov
fcomps
xor
imul
inc
lea
js
sbb
add
mov
jmp
push
pop
sub
jl,pt
mov
lret
aaa
push
push
xlat
push
lret
push
sbb
pop
aas
push
cmp
aam
addb
inc
clc
scas
mov
rorl
dec
lock
cmp
bound
mov
lea
pop
inc
data16
shrl
mov
push
inc
add
aaa
clc
mov
std
aas
outsb
lock
cli
push
mov
imul
pop
lock
adc
outsb
test
std
push
sub
fisubrl
stos
mov
add
add
and
jbe
inc
sbb
mov
jno
sbb
adc
loope
add
ss
fildl
shl
dec
sbb
loopne
sbb
adc
lea
add
and
out
dec
outsb
adc
shlb
test
test
xor
movsl
loopne
ds
ret
xor
negl
mov
jg
inc
xchg
or
mov
int3
mov
fstl
sub
inc
pop
addb
lcall
pop
xchg
pop
fistpll
push
sbb
cwtl
test
push
add
push
mov
fdivrp
cmc
inc
add
push
adc
repnz
lcall
dec
aad
imul
inc
add
loope
xor
cmpsw
cmp
gs
add
pop
pop
xor
adc
jl
mov
mov
stos
in
loopne
mov
mov
add
sub
add
xchg
and
or
xchg
inc
push
sub
add
add
shll
pop
int3
pushf
add
lea
add
shl
cs
mov
xor
adc
test
int3
lods
mov
test
jp
add
mov
add
mov
mov
mov
add
jp
repnz
rolb
cmp
lret
loop
add
and
or
lock
int3
int3
mov
aam
mov
imul
fs
dec
jo
daa
add
add
popf
add
inc
add
push
xchg
in
bound
ja
add
pushf
sti
mov
push
rolb
sarl
sub
repz
lods
insb
sahf
imul
addb
movsl
addb
pop
sti
pop
sub
mov
xor
jbe
pop
mov
out
xor
push
or
dec
jg
inc
sub
xor
add
jnp
mov
push
pop
scas
sbb
push
nop
dec
jmp
outsl
mov
xchg
and
scas
iret
stos
mov
ror
cmp
mov
inc
add
push
mov
adc
call
daa
xchg
add
repnz
cli
loop
dec
popa
jnp
push
icebp
sbb
movb
pop
inc
test
lahf
movsl
loop
sub
orl
add
push
dec
cmc
subl
xor
sub
xor
std
out
divb
and
icebp
les
in
insl
fisubrs
inc
in
adc
int3
inc
add
mov
mov
push
std
or
pop
bound
pop
outsl
push
test
sar
and
pop
ds
jmp
push
add
pop
jmp
jnp
xor
add
int3
cmc
mov
bound
mov
sbb
push
add
nop
lock
aas
scas
ret
jp
adc
push
jns
add
int
add
popa
inc
add
cmp
sahf
mov
add
add
add
lods
addr16
sub
sarl
add
mov
jle
xchg
sub
add
rolb
add
or
test
sahf
iret
cltd
rolb
pop
sub
mov
movsl
cs
jmp
xchg
inc
add
icebp
mov
popa
rolb
or
add
mov
cwtl
sub
aad
cmpsl
push
lock
jge
add
xchg
loope
ds
and
fcmovnb
cmp
pop
sub
jecxz
or
mov
push
dec
mov
xchg
push
mov
fnstcw
mov
dec
dec
pop
jmp
mov
mov
sbb
push
call
aaa
in
hlt
lahf
negb
add
sahf
xor
addr16
or
icebp
xor
mov
ljmp
push
add
cmc
jae,pn
lea
test
mov
mov
cmp
rcr
jne
inc
add
add
cmp
mov
lods
rol
add
push
push
xchg
add
ja
push
add
lret
mov
insl
add
adc
cmpsb
pop
jb
add
je
pop
sarb
cmp
mov
fcoms
add
mov
jno
and
add
scas
mov
xchg
into
cli
lcall
push
mov
fcmovnu
sub
push
std
xchg
dec
lea
les
dec
or
cld
aas
dec
push
or
test
xchg
scas
and
cmp
dec
mov
sbb
adc
cmp
add
pop
xor
dec
nop
stc
xchg
ret
fnstcw
adc
dec
stos
pop
sahf
pop
scas
mov
inc
add
and
add
arpl
mov
pop
repz
jbe
gs
test
dec
test
arpl
ds
pop
lcall
ss
jecxz
xchg
scas
mov
std
jg
jp
sti
jno
and
cmp
cmp
pop
mov
pop
adc
pop
hlt
into
insl
icebp
stc
xchg
mov
shll
fdivrl
or
pop
iret
adc
std
loop
or
add
jp
add
out
dec
fstps
call
je
xchg
pop
pop
loopne
sahf
outsl
mov
add
jns
jns
or
mov
lcall
nop
lods
add
stc
stos
cltd
mov
adc
xchg
stos
pop
das
ss
pop
xchg
movsl
add
subl
jl
mov
inc
add
xchg
fisubl
xchg
pop
mov
iret
scas
imulb
mov
add
popa
pop
std
mov
cltd
add
enter
mov
jmp
inc
add
mov
mov
jmp
sbb
and
xchg
inc
dec
inc
add
scas
pushf
push
sub
punpckhwd
addr16
push
add
sbb
inc
add
xchg
mov
or
jle
add
and
cmp
mov
mov
pop
sub
add
ljmp
and
stos
mov
inc
add
push
adc
cs
xor
add
or
xor
int3
rorl
cmp
and
mov
les
cwtl
sbbl
outsb
push
sahf
mov
lds
push
fidivrs
xchg
dec
insb
sub
add
add
sbb
mov
add
add
mov
push
data16
rol
add
dec
sub
inc
cmp
dec
leave
aas
shll
mov
add
popa
jl
pop
ljmp
add
mov
or
jo
xorl
xchg
inc
dec
in
xchg
iret
je
pop
mov
or
add
scas
addb
add
or
testb
mov
decl
pop
imul
int3
das
push
pop
lds
mov
pop
sub
dec
lea
add
cmp
add
lods
fcomi
cmpsb
cmp
test
jl
jecxz
std
inc
add
mov
test
jmp
leave
test
push
xchg
subl
nop
inc
add
iret
mov
mov
scas
xor
add
jbe
scas
lock
repnz
xchg
jge
hlt
pop
xrelease
inc
or
adc
dec
aam
mov
add
fsubl
xchg
dec
mov
loopne
rcr
mov
add
add
inc
clc
dec
cmp
add
pusha
add
fs
jae
popf
adc
movsl
popa
dec
pop
test
movsl
cmp
mov
test
pop
mov
lahf
dec
cltd
sbb
pop
fstpt
addb
ret
fadd
lret
xor
in
daa
and
push
cmp
enter
adc
sbb
xchg
aad
cmp
push
push
lods
cwtl
idiv
cmc
pop
jle
mov
test
add
call
das
xchg
cli
or
lock
cld
lret
repz
imul
das
je
cmp
push
mov
inc
add
addb
data16
addb
jp
adc
add
add
xchg
add
fnstenv
movsb
roll
add
or
loop
decb
nop
ficompl
or
jp
aam
lret
sahf
jle
imul
add
mov
test
movsl
jecxz
fsubl
fmulp
mov
in
inc
add
test
ljmp
daa
adc
jmp
mov
mov
inc
fldt
cmp
mov
stos
cmp
dec
enter
push
inc
add
push
sbb
push
cmp
aad
pop
fstpt
mov
inc
inc
add
mov
sub
bound
mov
shrl
cmp
lds
loopne
dec
sub
xor
and
jg
and
jo
mov
add
imul
out
popf
aad
aad
lcall
das
sbb
xchg
es
call
testb
add
mov
lcall
sub
imul
fdivs
ja
test
mov
mov
inc
add
outsl
push
fistps
xchg
add
sub
bound
je
xor
dec
lock
add
loope
loope
or
ds
mov
sub
iret
jne
mov
jp
data16
mov
repz
and
pop
stc
out
xor
add
add
insl
call
add
movsb
inc
add
cmc
outsl
cmp
and
adc
push
sub
xlat
bound
cmp
xor
stos
inc
sarb
mov
maskmovq
notl
int
sub
lret
pop
mov
aad
mov
dec
add
pop
aad
lods
sub
add
insl
insl
cltd
cld
movsb
imul
inc
sbb
fdivrs
jg
sti
mov
rcl
ss
xor
lds
jne
inc
add
int3
push
xor
movd
dec
or
cmp
mov
out
push
push
adc
xor
jne
add
outsb
and
ja
aaa
negb
or
sub
mul
and
int3
and
aad
mov
mov
lea
or
test
insl
sub
fsubr
mov
loopne
add
popf
outsl
insl
outsb
xor
add
sub
ret
add
add
mov
mov
add
push
call
fwait
scas
leave
repz
add
cmpsb
fchs
shlb
inc
add
add
xchg
xchg
aaa
jg
push
xor
mov
xor
push
add
adc
movsl
push
and
icebp
add
dec
cmpsb
add
popa
mov
mov
out
test
mov
adc
loopne
mov
sbb
popf
ficoms
adc
xchg
repz
cwtl
stc
les
adc
gs
adc
addr16
addr16
test
or
aas
dec
jno
test
and
fcoms
jnp
push
test
clc
adcl
fidivrl
icebp
dec
in
cwtl
adc
add
das
push
xor
insb
jns
xor
in
cmpl
mov
jne
add
sbb
movsl
mov
inc
mov
int3
roll
mov
mov
js
movb
test
xchg
lds
push
nop
push
inc
add
rorl
push
mov
cltd
popf
sub
cmc
movb
rcrl
mov
dec
inc
insl
mov
addb
or
sub
fidivs
jle
or
loopne
call
push
inc
add
pop
pop
into
jecxz
add
jl
into
sbb
inc
add
or
add
ret
loope
daa
loopne
mov
xor
mov
push
aad
fsubs
popa
xchg
mov
jmp
mov
lret
movsl
std
fsub
push
lret
pop
shl
pop
sbb
out
lea
sahf
fbstp
in
inc
mov
mov
fldt
dec
ljmp
push
aas
mov
in
les
fcos
pop
cmp
cltd
mov
pushf
mov
movsb
sahf
ja
xor
test
sahf
mov
add
int3
addb
jge
cli
adc
add
push
shrl
add
jae
push
scas
stos
iret
hlt
ret
sub
jno
inc
add
data16
xor
mov
add
xchg
sbb
mov
add
popa
movsb
inc
add
sahf
dec
enter
sub
mov
add
inc
addb
dec
data16
es
les
mov
cltd
push
scas
stc
push
sub
xchg
into
scas
xchg
inc
add
aad
adc
sbb
inc
add
outsl
inc
or
shl
add
lcall
sbb
sbb
imul
mov
cmp
add
popf
ds
movsl
ss
pop
cmpsb
imul
sub
inc
add
insl
pop
pop
jae
mov
push
aad
fcmovne
ljmp
jb
clc
cmp
ljmp
pop
jecxz
add
or
cmp
add
jns
mov
xlat
sahf
push
add
cmp
xor
jb
sbb
in
add
mov
js
call
xor
mov
add
pusha
add
movsl
push
gs
xchg
loopne
pusha
add
insl
aad
mov
cmpsl
js
add
das
sarb
sub
adc
and
stos
lret
jg
repnz
insb
int3
enter
rol
int3
daa
int3
mov
pop
in
shrl
rorl
mov
mov
push
push
pop
pop
dec
aam
xor
and
dec
outsb
negl
mov
sub
xor
jp
mov
lea
add
cmp
addb
jmp
imul
into
lea
xor
push
rcll
fisubrs
adc
xchg
cld
adc
fcomi
inc
xor
inc
add
repz
add
pop
sarl
pusha
add
dec
ljmp
aaa
or
jne
mov
mov
cmp
mov
add
scas
mov
add
xor
sarl
adc
cwtl
ud2
push
in
pop
jne
dec
sbb
imul
inc
add
add
cmp
rcrb
leave
jle
in
mov
lret
fwait
xor
xor
xlat
mov
lcall
nop
hlt
int
fistpll
nop
std
mov
stos
xlat
data16
scas
data16
fs
cmp
push
pop
jb
pop
out
adc
outsl
jne
cltd
pop
xor
js
stc
mov
addb
into
dec
sbb
mov
cmpsl
mov
lods
jbe
sbbl
cmpsl
addb
pop
sbb
lds
add
imul
jo
xchg
ds
test
aaa
ja
sbb
mov
lock
outsl
xor
add
push
sbb
add
popf
movq
xchg
nop
test
int3
lret
pop
aas
dec
je
insb
inc
and
movsb
fmulp
push
mov
bound
sub
int
sub
xlat
mov
loop
in
sti
fstpt
lock
pop
mov
outsb
jbe
dec
aad
std
cld
neg
push
rcll
sbb
fisubs
jae
and
push
fs
fistps
lds
cmp
mov
add
add
sbb
addr16
ss
push
out
push
mov
addr16
imul
lret
add
inc
add
inc
add
out
in
int3
cli
out
fisubrs
cmp
pop
jnp
fiaddl
sbb
jno
lahf
pop
adc
mov
mov
cmc
or
int
cmp
arpl
jne
sub
xchg
scas
mov
ds
sub
push
jne
orl
loopne
lcall
scas
outsb
test
mov
inc
add
add
ljmp
lahf
stos
lret
sub
sbbl
mov
cmp
add
addr16
mov
cmp
push
call
xor
inc
fmulp
and
sub
repnz
sub
dec
add
add
bound
popa
cmpsb
dec
sub
add
pop
iret
xor
loope
xchg
lods
xchg
fsubl
int
cmpsb
sahf
ret
xchg
cli
sti
fwait
out
and
add
hlt
push
add
push
add
push
jl
add
lea
imul
add
addb
inc
dec
pop
push
adc
lret
xor
adc
cmp
add
sbb
scas
mov
xchg
scas
jae
inc
fimuls
test
and
data16
and
mov
jae
mov
jmp
shll
sbb
roll
mov
inc
add
lock
sub
loop
cli
cltd
add
and
pop
sbb
shl
cltd
sub
test
xchg
sar
jg
sbb
xor
idiv
scas
adc
mov
and
loope
push
scas
mov
dec
insb
ret
addb
add
add
rorb
jbe
es
add
mov
jp
sbb
notl
inc
add
jp
dec
adcl
sub
push
push
xor
add
lods
inc
add
ja
add
add
mov
adc
add
add
sbbl
rorb
loop
jge
loope
jle
pop
pushf
aad
addb
mov
xchg
cmp
add
movsb
inc
add
pusha
add
aam
loop
push
xor
push
or
push
xor
sahf
sub
jle
xchg
movb
mov
es
test
daa
repz
adc
jmp
inc
add
sarb
fdivl
das
aam
cltd
cwtl
jnp
bound
mov
push
shrb
mov
lahf
icebp
sub
sbb
cmp
push
xchg
adc
addb
cwtl
dec
mov
stos
fcmovnb
add
aas
cmpsb
xor
js
ss
sub
inc
xchg
cmp
mov
jne
lds
dec
add
aas
gs
dec
imul
mov
add
in
add
add
jno
fwait
jnp
clc
sub
xchg
out
imul
dec
jno
add
addb
loopne
cmp
add
les
lds
movsl
aaa
mov
jecxz
fistpll
and
je
scas
fcompl
push
add
movsl
fistl
xor
hlt
test
add
test
les
fistpll
jno
inc
add
xor
jecxz
popf
dec
scas
cmp
cmc
mov
jmp
mov
jae
aad
add
call
pop
inc
lods
ja
imul
sub
push
push
pop
xor
xlat
mov
add
push
add
cmc
pop
sbb
xchg
out
and
iret
aad
ljmp
mov
xchg
test
out
mov
addb
pop
sub
push
xor
jae
push
push
pop
pop
das
inc
add
inc
add
mov
ret
or
and
aas
cmp
push
sub
inc
add
push
add
les
push
xor
xchg
and
inc
add
mov
addb
add
pop
shll
add
int3
cmp
nop
fists
and
cmp
mov
sbb
cld
vrsqrtss
mov
mov
leave
out
fsubr
xor
inc
add
sbb
popa
lods
jae
sub
in
add
jge
arpl
pop
inc
add
bound
pop
sub
xchg
in
fdiv
shlb
push
jbe
mov
out
and
xchg
mov
xchg
in
mov
mov
adc
dec
or
mov
xor
add
pop
js
jae
pop
jne
ret
add
xor
mov
movsl
out
pushf
mov
xchg
mov
es
push
add
and
inc
sub
add
sbb
sar
mov
js
add
pop
loop
cld
inc
ret
mov
nop
lods
rorl
test
xorl
add
push
sbb
adc
jecxz
or
out
add
push
mov
jo
mov
add
jg
int
sbb
scas
and
pop
movb
lds
imul
xchg
bound
int
mov
in
jnp
cltd
dec
fisttps
cmc
hlt
or
mov
imul
adc
nop
push
aas
inc
push
ljmp
push
dec
sub
outsl
pusha
add
adc
mov
es
mov
push
pop
cmp
adc
nop
jno
xchg
movb
sbb
ret
dec
jbe
xor
mov
add
add
xor
out
arpl
pop
pop
inc
mov
push
addr16
mov
in
mov
lret
add
ss
adc
add
add
add
and
xchg
and
fwait
cli
push
sbb
insl
and
jb
cmp
dec
jp
scas
loopne
add
ds
mov
rolb
arpl
push
add
push
dec
jae
and
xchg
jmp
jae
push
bnd
xchg
jne
adc
xchg
lahf
mov
sbb
add
popf
xchg
add
cwtl
in
pop
lcall
add
push
lret
mov
shl
cltd
rorb
add
pushf
test
pop
ljmp
xchg
jno
les
test
addb
mov
add
inc
add
cmpsb
pop
mov
push
xchg
subl
ds
cmp
negl
pushf
sbb
jg
addb
xchg
mov
sbb
sub
movb
dec
or
imul
mov
add
shll
cli
mov
fnstenv
jl
adc
gs
icebp
mov
negb
or
rcll
gs
add
bound
xor
lret
cwtl
insb
xlat
and
les
jle
jmp
rolb
mov
or
or
shl
xor
sub
mov
inc
add
xchg
sbb
inc
add
mov
pusha
add
add
movsb
inc
add
andl
inc
add
mov
lret
push
pop
adc
sub
sub
sti
and
hlt
mov
mov
mov
scas
ds
popa
mov
cmp
mov
enter
xor
repnz
push
rolb
xchg
aam
in
cmp
xchg
ficoms
push
iret
mov
adc
cs
or
cmp
icebp
cli
sub
jg
cli
jl
inc
add
xor
leave
jbe
push
mov
inc
add
jecxz
aaa
mov
inc
or
inc
add
jecxz
cmc
lret
pop
push
pop
shl
std
jl
mov
nop
cmp
mov
ss
dec
faddl
cmp
clc
out
dec
pusha
add
dec
mov
inc
add
push
jae
jl
into
arpl
or
fcoms
cmp
add
push
add
scas
aam
push
cmpsb
imul
movsb
pusha
add
call
mov
movsl
add
add
sub
cld
add
mov
xor
jl
scas
scas
push
jmp
add
pop
add
jnp
add
inc
add
jnp
fimull
mov
pop
arpl
inc
popa
loope
outsb
mov
cmp
mov
or
add
jne
fs
jp
add
lods
sub
pop
sbb
aas
movsl
in
mov
out
dec
in
roll
jbe
aas
test
icebp
and
sbb
pusha
add
fwait
xchg
add
movb
add
or
sbb
aam
add
mov
cmpsl
push
xor
rclb
or
std
rolb
outsb
psubw
xchg
daa
addr16
mov
xchg
push
pop
dec
xchg
jge
lfs
repz
inc
popf
mulb
xchg
push
mov
lcall
in
xchg
addr16
xchg
mov
jnp
add
or
sub
insl
or
out
cmp
in
mov
xor
int
mov
or
out
dec
fisubs
out
push
in
jmp
mov
sub
addb
lds
cwtl
arpl
lock
inc
aad
stos
push
test
ret
mov
enter
jne
outsb
mov
arpl
out
movsl
cmc
and
pop
cmp
lods
out
inc
jbe
insb
shlb
mov
or
add
jle
daa
sarl
in
mov
mov
and
add
sbb
add
cwtl
scas
in
add
aad
push
add
out
sub
xchg
hlt
stos
in
xchg
xchg
xor
xchg
aas
push
mov
adc
div
out
sbb
std
push
push
js
mov
rolb
test
sub
mov
test
jge
mov
aas
jnp
jne
loop
sub
int3
jne
mov
mov
ja
add
stos
jbe
outsl
cwtl
into
out
lret
sub
jg
xchg
cmpsb
vmovshdup
ds
mov
pop
sarl
add
add
push
sti
mov
shll
or
xchg
inc
rcl
xor
cs
jmp
push
fidivrs
xor
xor
rolb
push
xchg
pop
iret
adc
in
movb
jge
add
or
and
ret
scas
push
in
push
inc
add
in
xchg
adc
je
mov
mov
imul
inc
add
pop
jg
sbb
fwait
adc
add
push
add
negl
xchg
insb
mov
test
xchg
rorl
stc
pop
xchg
mov
loopne
xor
xchg
mov
popa
pop
lahf
icebp
inc
jmp
cmp
stos
inc
add
add
ficompl
imul
fld
or
jo
inc
cmpsl
xlat
lretw
and
push
dec
imul
push
add
xchg
test
ss
daa
push
add
nop
add
ljmp
movsl
inc
push
popa
mov
mov
or
add
shlb
inc
popf
mov
push
add
xchg
cltd
pop
outsb
jp
stc
in
jne
bound
aaa
pop
xchg
leave
hlt
fst
js
jg
ss
nop
jge
jno
add
push
add
pop
clc
push
std
add
inc
add
mov
shl
enter
cli
popa
movb
cs
xor
scas
add
cmp
mov
xchg
movsl
imul
scas
pushl
push
sub
int3
cwtl
std
iret
faddp
add
dec
imulb
ljmp
add
jl
in
iret
movb
add
f2xm1
cmp
rclb
movb
push
xchg
negl
pop
inc
add
push
add
sub
roll
mov
dec
popa
mov
addb
sub
mov
push
mov
add
iret
jno
imul
dec
jmp
lea
and
add
add
rcrl
add
call
add
push
mov
add
test
pop
call
xor
add
push
sbb
movsl
stc
imul
add
add
pop
sbb
xchg
pop
std
popl
outsb
cltd
lods
xor
insl
int
clc
shlb
add
gs
rcrl
cmp
push
cmpsl
jg
add
jno
cmpsl
cwtl
rcll
mov
cmp
dec
or
add
shl
ds
notb
adc
and
movsb
push
jbe
int3
push
add
sbb
nop
push
subl
stos
mov
loope
add
je
mov
nop
test
in
test
jae
xchg
ljmp
mov
or
fdivrp
movb
or
cmp
inc
add
into
jno
sub
insl
out
xchg
rcll
mov
sbb
sarb
push
pop
pop
test
pop
cmc
imul
addl
or
imul
int3
aaa
rolb
imul
lds
mov
pop
jge
sbb
out
mov
addb
mov
cmp
lods
inc
add
xor
pop
jno
or
cltd
fwait
imul
imul
lods
rclb
add
mov
insb
imul
data16
addb
clc
sub
pop
enter
add
jp
ljmp
jmp
mov
pop
cmpsl
fidivl
icebp
insl
lret
and
test
add
xchg
mov
sbb
jne
push
int3
fnsave
sbb
dec
jecxz
push
cs
stc
jp
add
and
add
fldl
mov
sbb
add
mov
cmp
outsb
frstor
mov
popf
jmp
or
or
ss
lds
xor
fdivrl
inc
shr
movsl
ret
pop
test
jnp
sbb
cld
xchg
cmp
data16
dec
mov
mov
fmuls
inc
lds
mov
idivb
xchg
enter
outsb
add
xchg
repz
xor
ficoms
fistpl
movsl
jo
lock
dec
xor
xchg
and
xor
pop
mov
arpl
in
fs
inc
push
add
dec
xchg
pop
inc
sbb
mov
push
sbbl
jl
sti
inc
mov
les
jno
inc
xchg
das
addr16
aas
hlt
xchg
jbe
movsl
pop
mov
fs
jg
mov
stos
dec
and
rclb
xor
pop
aad
add
roll
mov
jmp
push
push
or
movsl
mov
pop
out
mov
out
jmp
movb
pop
stos
pop
pop
rolb
add
sub
inc
add
les
mov
pop
call
add
outsb
add
push
repz
inc
add
mov
ret
add
add
lret
mov
dec
in
ljmp
mov
add
dec
popa
in
jb
insl
jmp
sub
imul
insl
push
das
add
loopne
jl
cmp
xchg
sub
adc
cmp
shrd
push
jmp
push
sub
inc
add
cli
cwtl
push
ja
push
pop
inc
ficoms
cmpsb
mov
std
jne
add
add
pop
test
das
dec
xlat
ret
sub
pop
inc
sub
and
lea
add
cmp
out
push
jae
imul
pushf
cld
or
test
dec
xchg
out
adc
mov
add
add
cwtl
popf
adc
cwtl
adc
or
mov
sbb
inc
add
lcall
iret
xchg
mov
xchg
xor
popa
negl
shll
add
lds
and
mov
movb
pop
inc
add
pop
inc
add
int3
testb
lock
fstpl
in
lcall
pop
xor
mov
mov
pop
nop
push
std
jle
mov
dec
xchg
add
enter
dec
push
test
ret
cmp
adc
mov
dec
sbb
ljmp
add
and
add
sbb
add
lods
ss
scas
out
stos
pop
sbb
dec
call
xchg
jno
pop
cmp
cmc
lods
scas
mov
xchg
movsb
dec
push
lahf
push
imul
and
jnp
adc
repnz
add
add
push
xchg
mov
mov
or
int3
neg
jb
push
xchg
inc
jl
sub
int3
cltd
mov
add
push
lahf
adc
cmp
add
rol
xchg
rcll
dec
pusha
add
nop
jae
rorl
test
dec
movsb
dec
cli
adc
inc
add
fld
add
in
dec
pusha
add
xorl
inc
outsl
sub
cmp
neg
lock
and
sahf
mov
jne
fs
mov
xlat
adc
inc
add
push
rorl
out
rcr
sbb
cmp
fstpl
popa
loope
fstps
pop
bsr
clc
xchg
mov
jecxz
jmp
in
fs
rolb
sbb
iret
addb
mov
popf
fidivl
add
jmp
add
std
pusha
add
cmp
or
mov
cmp
adc
add
mov
iret
ret
inc
add
test
loop
jle
in
pop
addb
lahf
and
push
pop
jbe
daa
pop
leave
cmp
pop
in
aam
xor
xor
rcll
les
xor
lret
push
fwait
or
xchg
mov
test
outsb
jne
add
pop
jle
cmp
ss
jl
insl
cmpsb
cmp
test
loopne
hlt
test
mov
push
xchg
add
dec
pop
sbb
add
adc
add
lea
sbbl
cmp
cli
adc
test
jl
out
cld
insl
and
je
and
inc
add
xchg
sbb
cmc
popl
dec
nop
dec
sub
push
lret
fidivl
addb
test
jg
negl
imul
pop
cmpsb
push
es
add
cld
fidivrl
sbb
lods
out
nop
add
inc
add
add
add
xor
mov
scas
dec
xor
adc
sbb
dec
addl
mov
fwait
mov
inc
pushf
lret
mov
jbe
js
xor
dec
fstl
sbb
or
dec
and
sub
les
inc
dec
pop
jl
sbb
cwtl
add
rolb
bound
aas
iret
imul
addb
mov
and
push
add
sbb
call
cmc
enter
out
pop
inc
sub
and
mov
fidivl
movsb
std
jmp
cmp
int3
xchg
stos
push
dec
or
fs
repz
sub
pop
cs
aad
bound
dec
cmpsb
movsb
inc
add
imul
dec
mov
add
cli
sbb
test
pushf
or
mov
inc
add
xchg
mov
lcall
dec
sahf
clc
add
add
xlat
popf
dec
pop
clc
testb
add
movsb
dec
dec
mov
dec
orl
fs
cld
jecxz
sbb
add
lods
fcoms
stos
push
addb
out
jnp
ja
loop
add
sbb
pop
int
ljmp
insb
jo
push
aad
cmc
mov
cltd
call
add
daa
rcll
jmp
xor
add
icebp
incb
lods
iret
ss
and
xor
fadds
aas
in
sbb
repz
sbb
add
mov
adc
xchg
sub
loop
dec
push
addb
scas
in
lahf
popl
ror
lods
cmp
mov
data16
mov
or
movb
ljmp
dec
or
or
adc
inc
clc
pop
out
fs
sbb
pop
xchg
pop
mov
les
mov
jle
hlt
pusha
add
or
cmc
aam
add
jo
pop
xor
les
sarb
adc
cwtl
and
dec
stc
int
stos
scas
xchg
cld
je
lods
aas
push
pop
adc
inc
pop
jb
ljmp
adc
add
adc
and
add
lret
mov
ror
imul
fxch
pop
repz
in
xor
push
pop
popf
cmp
stc
pop
icebp
pop
popfw
js
and
mov
add
add
imul
add
sti
adc
pop
pop
fnstsw
test
mov
add
jecxz
adc
inc
fwait
addb
pop
lea
add
into
jecxz
add
cmc
push
xor
pusha
add
imul
sahf
mov
dec
inc
xchg
inc
cmp
add
add
shlb
aas
adc
push
add
shr
cmc
pop
sub
xchg
mov
mov
add
inc
add
lods
dec
inc
add
xor
sbb
int
mov
movsb
or
cmp
push
or
into
mov
movsl
fst
lods
adcl
add
repnz
fyl2x
scas
adc
push
mov
add
mull
call
pop
jmp
push
add
mov
lock
lret
sbb
inc
add
repz
js
jl
dec
out
add
xchg
out
insl
dec
mov
mov
add
mov
es
cmpsb
imul
add
int
cmpl
incl
sub
stos
mov
lahf
or
es
jl
lock
add
sbb
shlb
dec
add
or
add
xchg
outsb
outsb
add
sbb
test
and
sub
dec
add
xchg
int3
dec
inc
xor
stos
call
mov
add
add
mov
dec
shrl
pop
pushf
xor
mov
add
ljmp
or
adc
lahf
gs
pop
dec
adc
add
and
mov
cltd
pop
ds
call
xchg
sarb
dec
and
push
lods
inc
in
dec
mov
jbe
lods
repz
mov
cmpsb
push
cmp
mov
xor
add
aam
nop
mov
sbb
arpl
push
add
lea
out
pop
icebp
and
add
lahf
outsl
lods
js
mov
outsb
pop
stos
pusha
add
xlat
out
sub
add
mov
lret
les
xchg
out
mov
sub
js
add
mov
scas
sahf
jne
movsl
loop
lods
fimuls
pusha
add
and
scas
sub
ja
sub
push
or
arpl
xor
xchg
adc
ljmp
dec
imul
cs
jl
inc
jo
xor
pop
inc
int3
mov
or
into
movsb
jbe
and
andl
ljmp
pop
test
into
pop
imul
adc
lods
out
sbb
popa
jge
mov
jle
lret
sbb
enter
cmp
mov
jbe
fwait
cltd
xor
in
lret
das
rorl
ret
xor
pop
push
test
xor
jmp
imul
add
and
cmp
dec
add
jno
movsl
sbb
sub
mov
mov
cltd
xor
movl
jns
hlt
jb
add
dec
sbb
mov
fdivrl
push
add
or
add
dec
cld
shrl
sarl
add
push
arpl
out
push
les
sahf
pop
fwait
addb
add
out
adc
ret
push
xor
and
cmp
mov
push
inc
xor
dec
mov
pop
jmp
sbb
add
ret
or
adc
addb
sub
add
adc
test
add
ljmp
lahf
inc
add
fwait
cmp
add
popl
cmpxchg
pop
bound
add
xchg
cmpsb
insl
lret
ret
xchg
sub
fs
add
test
push
cmp
add
add
inc
add
jnp
std
vprotd
cwtl
xor
xchg
xor
push
fisttpl
repz
das
xor
cwtl
push
testl
lods
test
in
xor
push
dec
fistpl
mov
push
ljmp
adc
repz
xchg
clc
cltd
insl
stos
fdiv
out
push
mov
xchg
push
jge
push
add
xlat
pop
dec
pop
push
int
lcall
mov
cwtl
xlat
lret
int3
fs
push
repz
push
decl
scas
cli
repnz
mov
jecxz
pop
mov
leave
push
imul
iret
mov
xchg
mov
mov
insl
sbb
add
fidivs
jecxz
scas
shlb
jae
and
in
outsb
jo
add
add
adc
gs
cmc
push
nop
sub
xchg
dec
jb
inc
scas
daa
mov
inc
add
or
sbb
add
xchg
inc
sbb
stc
or
subl
fbld
jg
pop
sub
js
and
std
cmp
add
in
in
js
mov
add
icebp
cltd
push
mov
jb
add
cmp
sar
jo
add
ffreep
jne
cmp
cmp
push
add
cli
lret
aad
add
mov
adc
jg
mov
cwtl
hlt
ds
dec
and
not
sbb
adc
xor
mov
push
popf
addr16
sbb
das
imul
add
js
stos
dec
lret
movsl
imul
stc
inc
dec
mov
addr16
dec
lds
mov
imul
pop
sahf
jmp
add
mov
andl
ljmp
sbb
enter
loopne
and
cs
mov
jne
pop
sbb
mov
pop
testl
cmp
movsb
pop
cmp
pusha
add
dec
push
cltd
fwait
aaa
ss
inc
aaa
mov
push
data16
mov
lahf
pop
jae
cs
scas
movb
movsl
and
inc
cs
outsb
mov
mov
add
or
inc
je
sbb
popl
add
or
dec
repz
adc
jns
mov
faddp
add
or
repz
push
jno
xchg
jle
mov
add
lcall
ss
add
inc
mov
lds
push
sbb
lds
pop
or
stos
movb
xchg
repz
int3
push
ss
gs
add
jbe
fsubr
in
add
add
mov
ja
mov
pusha
add
xchg
add
push
jmp
mov
rol
add
les
xor
add
xchg
mov
ljmp
jbe
orl
add
fidivrs
es
xor
clc
cmp
mov
mov
sub
lods
shrb
mov
add
popa
xchg
fmul
sbb
sbb
repnz
fnstcw
fnstcw
jo
add
push
and
jo
pusha
add
rol
pop
imul
loopne
jo
lret
adc
fistpl
jp
js
add
imul
pop
test
aam
movsl
int
or
mov
add
insb
adc
fistpl
cltd
pop
sti
push
repz
mov
add
repz
in
mov
add
mov
movsl
cmp
jp
fadd
xchg
jmp
mov
push
mov
pop
mov
sbb
add
test
rolb
add
add
mov
scas
cmpsw
iret
daa
les
dec
push
add
mov
xor
call
add
test
adc
and
loopne
pop
pop
je
dec
lcall
aad
xchg
cmp
add
cmp
je
movsl
cmp
das
mov
xchg
cmpsl
jl
outsb
and
test
les
inc
hlt
inc
fiadds
pop
adc
imulb
mov
insb
jge
out
pop
jb
sbb
jnp
test
int3
inc
scas
jbe
inc
add
sub
add
mov
sbb
fst
push
gs
mov
cmc
pop
lahf
pop
adc
hlt
or
outsl
dec
xchg
int3
lcall
leave
mov
dec
cmpsb
test
dec
dec
cmp
daa
jmp
push
stos
jb
test
std
enter
xor
mov
jbe
sbb
jecxz
mov
fsubp
loope
shl
inc
add
cltd
pushf
in
adc
push
mov
imul
clc
push
mov
in
xlat
nop
fadds
or
mov
fs
scas
cs
or
ljmp
pop
sub
mov
jl
ljmp
loop
mov
ret
add
jl
mov
mov
xchg
stos
pop
mov
push
sbb
mov
sub
pop
dec
pop
jns
add
inc
add
or
popf
xchg
ret
jecxz
hlt
out
jnp
addr16
ret
in
add
or
jo
add
imul
xlat
mov
jno
ret
mov
sub
dec
xchg
enter
mov
aaa
scas
jecxz
xor
inc
add
das
cmp
fistpll
jae,pt
and
test
fiaddl
gs
loop
clc
inc
cmpsb
rcl
iret
cli
xchg
out
xchg
push
repnz
mov
push
adc
add
loope
xor
in
imul
sbb
push
inc
add
sti
or
push
add
cli
out
jne
jg
outsb
cmpl
insb
repz
ja
add
mov
call
into
div
and
popf
jp
out
add
addb
jmp
repnz
and
jle
or
jo
mov
cs
push
aas
movsl
mov
pop
adc
add
adc
pop
movsl
lahf
into
lods
jge
fsts
in
aaa
xchg
in
mov
test
pop
sub
movsb
test
mov
mov
push
imul
sti
fsubl
insl
call
les
xor
out
xchg
int
mov
addb
test
divb
adcl
fsub
inc
add
push
daa
rolb
add
adc
fs
cmp
addb
add
jo
sub
pop
inc
add
add
movsb
jo
fisubs
addl
test
jg
outsl
mov
jo
xchg
xchg
mov
out
mov
sub
pop
repnz
mov
insl
jbe
cmpsb
mov
push
mov
aam
add
and
mov
dec
inc
add
mov
add
addb
ret
pop
push
cmp
bound
arpl
inc
mov
jno
add
cmp
cwtl
ja
sahf
cltd
enter
gs
and
xor
jmp
pop
mov
jle
mov
add
daa
aaa
enter
push
add
pushf
fldcw
insl
mov
mov
dec
mov
jbe
add
mov
xchg
mov
mov
or
dec
decb
test
add
addr16
push
stc
adc
pushf
test
imulb
mov
loopne
fsubs
lret
scas
pop
inc
pop
and
jb
or
mov
sub
std
scas
mov
movb
cmp
mov
cmp
push
movsb
jns
iret
cmc
js
bound
push
sbb
mov
mov
xchg
shlb
mov
out
pop
cli
aad
add
bound
push
mov
cwtl
sub
push
xchg
sbb
les
xor
hlt
mov
or
or
lea
jnp
aam
add
xchg
cmc
sbb
js
pop
cmpsl
mov
les
lds
shl
fists
hlt
or
fwait
mov
sbb
adc
data16
inc
add
mov
xlat
mov
dec
ret
jnp
mov
pop
rolb
cld
movsl
or
add
push
into
cmp
in
mov
mov
add
inc
dec
lods
shlb
dec
sub
xor
push
cmp
mov
cmp
sub
pop
pop
ljmp
push
lcall
xlat
lfs
add
mov
pop
lock
jnp
icebp
pop
dec
in
xor
or
push
mov
mov
ljmp
mov
cmp
lea
jnp
mov
add
add
nop
mov
jecxz
sub
push
add
cmp
push
mov
sbb
icebp
ljmp
push
out
pop
and
cmc
push
jbe
adc
dec
sar
inc
mov
cmpsl
or
pop
add
testl
jb
add
ds
sbb
mov
inc
add
scas
js
pop
and
pop
popf
jecxz
cmp
lret
das
jnp
add
or
add
stos
imul
scas
dec
jg
stos
rorb
cmp
das
cwtl
cmp
les
sub
adc
icebp
and
pop
mov
insb
lods
popf
daa
lcall
dec
or
fists
xchg
jmp
fists
dec
mov
lcall
inc
add
sub
mov
test
ret
sbb
int3
mov
add
inc
mov
add
add
mov
inc
repnz
in
nop
cwtl
add
ss
or
mov
cmp
cmp
aaa
gs
add
pop
inc
repnz
bound
in
in
cs
or
jae
repz
test
and
pop
dec
xchg
addb
jp
je
xor
push
xchg
ret
push
and
bound
pushf
inc
hlt
sub
lods
or
icebp
imull
cmp
test
outsl
scas
xchg
fsts
cmpsl
mov
les
movsb
sbb
in
aas
fnsave
mov
sub
add
cmpsb
nop
stos
sbb
insl
or
and
add
ss
mov
pop
sbb
push
pusha
add
rcrl
xlat
loop
push
out
addr16
stos
adc
jmp
sbbl
xchg
addb
xchg
mov
in
call
add
outsl
jb
sub
jmp
js
pushf
pop
pop
xor
pop
add
jbe
ret
mov
ret
call
mov
dec
bound
pop
pop
sub
out
fs
aas
dec
mov
and
pop
pop
mov
xor
fisubrl
jb
dec
fisubs
shlb
xor
xor
rolb
add
add
cmp
lahf
call
dec
dec
jnp
add
dec
sbb
mov
mov
pusha
add
add
xchg
repnz
lea
addb
cli
jb
fcom
nop
loopne
andl
and
and
loop
xor
dec
shll
push
xchg
rolb
mov
sbb
popa
adc
aas
fdivs
fwait
outsb
and
sub
push
lret
inc
add
ret
push
ret
cltd
clc
mov
fildl
pop
add
xor
mov
ss
repz
cwtl
dec
out
nop
fisttps
out
mov
mov
xchg
or
jle
dec
fdivs
add
dec
cmpl
sub
push
rolb
add
js
sbb
imul
add
add
jp
mov
fidivs
mov
and
mov
add
mov
dec
out
sbb
fwait
sbb
add
sub
add
push
mov
add
jnp
addb
lret
and
loop
mov
add
bound
jae
scas
dec
scas
lahf
insl
sbb
mov
inc
jo
xor
pusha
add
ds
int3
js
imul
sbb
pusha
add
testl
push
fimull
jmp
push
lods
mov
sub
call
sub
aam
loopne
jecxz
outsb
icebp
nop
test
mov
lret
jnp
bound
hlt
repz
mov
sub
aas
lret
push
lahf
push
lock
andl
dec
push
or
add
bound
cmp
lea
orl
dec
jne
gs
test
xchg
mov
sbb
adc
rorb
test
push
mov
add
roll
aaa
adc
sti
mov
cmp
push
aaa
jnp
add
pop
mov
xchg
xchg
sbb
add
lods
jo
incl
add
aad
pop
mov
popf
inc
add
in
jge
inc
mov
pop
outsl
jnp
ret
imulb
lods
sub
imul
and
call
icebp
push
xchg
inc
lods
adc
add
imul
mov
cmpsb
push
ret
add
dec
stc
mov
inc
add
push
fprem
insl
dec
ljmp
pop
jp
daa
and
pop
movsl
or
push
dec
sub
jmp
and
mov
fimull
cmpsl
dec
bound
addl
pop
cmpsb
movsl
js
mov
cs
lret
cwtl
pop
push
pop
lret
mov
rcll
ret
loop
shrb
pop
adc
pop
cld
mul
xor
fcmovnu
cs
add
sub
lods
movsl
and
imul
addb
fcmovnu
and
xchg
or
icebp
jl
dec
cmp
sub
iret
jp
add
dec
jno
mov
enter
ret
mov
xchg
or
mov
ljmp
sbb
dec
lea
add
sti
mov
loope,pt
dec
std
or
sbb
shrb
jnp
add
ss
xchg
ret
insb
loopne
mov
xchg
pop
or
pop
and
les
fisttpll
pop
xlat
mov
les
rolb
daa
mov
addl
idiv
mov
cmc
mov
jno
scas
and
bound
in
dec
subl
inc
addl
in
out
adc
add
xchg
adc
push
adc
es
jmp
sbb
rcl
aas
pop
xchg
and
jl
jp
jmp
xor
cmp
pop
xor
shl
rolb
add
mov
pop
arpl
outsl
jecxz
dec
inc
add
mov
in
repz
or
sahf
push
lods
dec
mov
ja
xor
mov
inc
movsb
push
sti
scas
testl
stos
sbb
ss
imul
pop
lcall
imul
je
pop
pop
mov
dec
push
add
in
mov
xor
fnstcw
inc
imul
fcmovu
out
dec
xchg
xor
add
add
or
lcall
push
decl
pop
xor
xchg
adcl
test
mov
ret
dec
shlb
jg
inc
add
lock
mov
add
add
inc
add
sub
call
xchg
lock
mov
xor
ficoml
fsubrl
inc
add
add
jge
mov
or
add
sub
scas
fstpl
daa
ja
or
bound
mov
adc
sub
adc
ss
mov
jge
xlat
xor
dec
or
jns
xchg
push
or
mov
enter
in
mov
xor
imul
ffreep
push
jmp
jl
negl
sub
or
push
and
jle
jns
movsl
in
push
add
sbb
dec
xchg
movsb
ficompl
push
lods
test
pusha
add
sti
std
adcl
push
mov
sbb
sub
jne
add
data16
lcall
out
lahf
int3
or
jl
mov
popf
orl
jns
icebp
cmp
pop
aam
sbb
pop
push
xor
mov
mov
add
ret
out
jb
insb
jae
add
cmpl
loopne
leave
mov
out
cs
push
and
xchg
xchg
mov
shll
add
int3
dec
mov
call
addr16
aas
mov
sub
sub
xchg
add
and
ffree
ds
cltd
mov
fcmovb
add
jg
fdivs
mov
push
pushf
es
mov
dec
in
and
push
ds
jno
int3
and
mov
push
xchg
xchg
lods
cmp
and
rolb
insl
ret
jns
add
aad
mov
sbbl
xchg
pop
sarl
ret
inc
add
mov
mov
jle
add
push
out
movsb
push
stos
push
or
repz
push
push
popa
sbb
sbb
std
je
or
add
inc
inc
aaa
adc
add
adc
pop
xor
loopne
xor
icebp
adc
aam
imul
mov
jbe
cmp
cmp
add
ljmp
popa
and
xor
dec
cli
adc
outsl
mov
add
cltd
jae
mov
adc
add
adc
out
mov
push
mov
scas
push
adc
adc
sbb
pop
sub
lods
xchg
xchg
in
sub
jmp
mov
ret
dec
add
pop
push
imul
lret
fstl
int
pop
mov
sbb
popf
xor
add
sbb
dec
js
negb
fidivrs
xchg
movb
mov
rcl
push
dec
cmp
cmp
cli
mov
rcll
flds
cmp
fcmovnb
add
faddl
and
pop
dec
test
loop
scas
rolb
mov
lcall
cmp
and
push
mov
ljmp
inc
add
cmp
popf
sahf
sub
sahf
pop
push
xchg
xchg
mov
in
cmpsl
addr16
popa
lret
cltd
ja,pn
pop
mov
xchg
sbb
lahf
or
aam
cmp
adc
data16
aam
je
sub
sub
icebp
push
icebp
add
sbb
sub
addb
jle
out
scas
push
dec
test
je
dec
and
push
in
mov
and
jns
push
inc
add
push
addb
sbb
test
add
scas
imul
mov
cli
cld
or
add
sub
jb
test
movsb
cmpsb
dec
call
pop
rcl
xor
sub
cwtl
ja
add
sub
in
cmc
pop
adc
add
aad
push
mov
pop
push
pop
addb
insb
aas
adc
mov
adc
outsl
xchg
test
push
sub
sub
pushf
popa
or
xor
adc
mov
add
mov
add
add
aaa
cmpsl
mov
daa
loop
call
or
fsubrs
fcmovnbe
stos
push
mov
jmp
int
xchg
mov
push
mov
push
ljmp
add
sti
movsb
xor
pop
arpl
shlb
addr16
jb
jg
jae
sub
fcomi
or
mov
sti
cmp
cmp
cs
addb
jnp
add
mov
jl
push
in
les
aad
push
add
add
add
push
in
pop
mov
xchg
adcl
cltd
testb
rorl
clc
push
ljmp
lahf
sub
jae
lds
mov
mov
hlt
inc
add
adc
ljmp
mov
jb
movb
add
daa
mov
add
ficompl
push
cmp
outsb
into
aaa
outsb
in
or
add
mulb
add
test
repz
popf
mov
add
sbb
test
add
stc
jp
xchg
int
push
hlt
sub
push
push
int3
cmp
scas
scas
and
in
sub
sbb
in
repnz
add
and
ljmp
int3
lea
std
mov
add
addr16
ja
add
lods
inc
ljmp
je
repnz
xor
mov
jno
mov
test
add
add
mov
rolb
fs
add
les
lcall
popf
add
sub
pushf
leave
into
pop
mov
call
gs
adc
cli
cltd
xlat
push
add
int3
push
cmpsb
or
adc
movsb
fcoms
lea
in
mov
je
scas
sub
into
push
aas
inc
or
sub
sbb
jecxz
int
or
mov
xchg
cmp
jno
adc
stc
ja
jns
jae
cmpsl
mov
sub
mov
lret
ja
jmp
sub
popf
cmpsb
adc
or
outsb
xlat
sub
out
mov
data16
jle
aam
sbb
or
sub
aas
clc
pop
adc
mov
sub
das
add
xchg
mov
jno
and
push
pop
fcompl
xchg
xchg
ja
mov
inc
mov
sbb
fs
cmp
imul
xlat
and
xchg
inc
add
and
jae,pn
add
dec
ljmp
addb
mov
mov
xchg
push
lea
sbb
add
addr16
mov
lea
fwait
add
add
add
sahf
loop
add
xor
icebp
mov
cmpsl
sti
mov
add
sbb
dec
mov
lds
test
jae
int3
xchg
sub
aaa
mov
cmp
cmp
lret
jecxz
jns
cmp
stos
dec
imul
and
add
cmc
sarl
aaa
shlb
pop
mov
or
push
bound
fistpl
mull
test
test
cli
sahf
adc
cltd
xchg
and
xchg
icebp
mov
xchg
movb
adcl
mov
xor
lea
add
add
jae
add
add
repnz
jbe
mov
lahf
arpl
fcompl
add
imul
sub
add
pop
push
dec
pop
arpl
testb
push
mov
xor
fbstp
add
loop
cmp
xor
jb
adc
loope
aad
fsubrs
shll
inc
add
aas
xchg
inc
add
aam
push
xchg
add
sbb
stos
jg
or
or
in
int
add
jle
in
inc
imul
adc
fcmovb
fs
arpl
bound
inc
shr
gs
add
xor
cli
or
cmp
dec
rcrb
out
add
sub
movsb
clc
lahf
sbb
lcall
sbb
add
mov
in
out
push
les
and
jb
loopne
add
jge
xor
add
ss
xor
inc
add
and
imul
mov
sbb
push
loopne
mov
jno
imul
add
pop
jle
xor
outsb
add
push
outsb
push
int
fs
adc
cmpsl
outsl
lret
pop
sub
mov
add
int
and
add
ret
outsl
aam
rolb
add
jle
mov
inc
repz
add
shll
mov
cmp
mov
add
movsb
pop
xor
ret
sub
push
pushf
inc
add
add
insb
jecxz
movsb
mov
andl
xchg
cli
dec
fmul
jge
scas
ret
push
jmp
xlat
adc
loopne
pushf
fisttpl
or
add
cmp
add
daa
push
jecxz
inc
add
rcrl
xor
pop
sbb
push
test
outsl
movsb
repnz
and
mov
push
adc
sub
fs
adc
cmc
icebp
sub
inc
sti
gs
adc
mov
dec
jbe
icebp
fdivrl
inc
les
lcall
sbb
lea
add
int
add
nop
mov
add
cmpsb
mov
clc
bound
insl
bound
push
sub
ret
repz
sbb
add
xchg
push
push
cmp
repnz
je
sti
pop
mov
dec
mov
rolb
xchg
cltd
call
push
push
or
adc
addb
inc
add
or
mov
loope
addr16
or
inc
push
repz
test
push
mov
imul
mov
pop
ret
dec
add
and
imul
iret
ljmp
mov
aam
pop
lock
cmpsb
cmp
mov
sub
cwtl
repnz
cmc
inc
add
repnz
sub
push
push
sti
mov
outsb
lods
fcoms
mov
push
add
ja
push
lahf
jmp
add
nop
loop
jbe
xchg
adc
popa
push
mov
hlt
jnp
add
and
aas
and
inc
add
sbb
jecxz
push
jmp
xchg
ljmp
mov
inc
add
add
and
scas
and
dec
shl
outsb
ficoms
push
add
ret
jno
push
scas
sub
cmp
cmp
test
mov
push
and
inc
jg
mov
mov
outsl
out
inc
add
dec
test
out
pop
loop
cld
cmpsb
inc
add
fbstp
mov
xchg
ds
jne
add
std
adc
inc
add
jg
adc
jns
xor
mov
in
inc
add
mov
mov
faddl
pop
sub
popa
pop
nop
cmp
test
sub
mov
arpl
cmp
or
ss
fnstsw
lods
add
int3
dec
add
mov
insl
mov
ja
xchg
jb
sub
movsl
loope
les
sub
cmpsl
inc
add
jle
mov
jl
pop
es
pop
dec
lods
sub
xor
sarl
mov
iret
loopne
int
mov
aaa
sbb
ds
mov
test
in
fs
cmp
push
xchg
inc
add
xchg
sbb
xchg
imul
and
mov
and
push
sub
mov
and
addb
mov
xlat
add
cltd
adc
in
pop
in
pop
sbb
pop
dec
add
cmp
lods
cmp
out
push
pusha
add
add
cmp
sub
xchg
imul
jb
and
pushf
mov
add
xchg
cmp
add
dec
cmpsl
or
jp
sub
jno
lods
cmp
dec
outsl
xchg
pop
out
add
sbb
in
or
xchg
iret
sbb
or
add
mov
jmp
xor
xchg
push
gs
test
jbe
jl
sbb
cltd
int3
insl
jno
mov
and
call
add
clc
cmp
adc
cmpsb
cld
out
push
dec
aas
or
fisttps
jmp
rolb
loopne
es
xchg
and
pushf
xor
sbb
sub
cltd
jb
mov
pop
cltd
sub
add
mov
add
xor
cmpsl
in
and
stos
xor
in
dec
mov
cmp
dec
push
mov
out
mov
sahf
sbb
add
cmp
pop
es
sub
incb
pop
inc
add
dec
dec
jbe
mov
pop
bound
xchg
inc
add
mov
or
jle
shlb
outsl
je
or
out
sbb
arpl
in
movb
insl
rolb
mov
mov
pop
jnp
add
push
mov
mov
leave
inc
add
jl
cmp
inc
add
movb
scas
xchg
idivl
in
sub
jmp
mull
lods
inc
add
xchg
into
lds
jle
xchg
xor
packssdw
out
pusha
add
cltd
cwtl
push
add
rcll
faddl
lock
cmc
ds
jl
fadds
jle
or
add
mov
movsb
ja
insl
and
jae
push
sti
mov
and
popa
daa
pop
jno
iret
inc
add
gs
in
push
sbb
inc
les
int3
ret
out
adc
cmp
daa
aaa
in
inc
add
sbb
fs
fildl
into
cmpsl
xor
fadds
add
dec
leave
test
out
pop
sbb
xor
stos
call
add
jmp
push
and
push
push
pop
loope
adc
ja
cmp
add
inc
jb
mov
add
stos
sub
into
sbb
cmc
mov
out
cmp
addb
insl
push
add
ljmp
fwait
or
mov
push
aam
xchg
lcall
repnz
das
and
mov
push
sbb
xor
add
mov
pushf
push
ret
hlt
jecxz
je
mov
sbb
addb
mov
and
mul
cmp
scas
ret
sub
outsl
xchg
test
shl
push
cmp
inc
add
and
xchg
popa
push
xchg
pop
outsl
movsb
fwait
lds
cmc
push
sbb
into
addb
add
lea
ret
push
jno
xor
lods
cmp
jle
push
inc
add
sbb
lods
pushf
jle
xchg
mov
addb
fucomi
lret
lahf
pop
push
mov
aas
cmpsb
in
sbb
repnz
addb
sbb
add
xor
test
add
sbb
jo
pushf
push
xchg
rcll
loop
in
mov
cmp
insl
pop
aad
push
stos
dec
repnz
cmp
idivl
aas
addr16
lahf
ss
dec
sub
or
out
sub
push
add
outsl
lock
lret
mov
xchg
xchg
jo,pt
in
imul
jo
dec
inc
add
or
and
repz
mov
lods
push
sub
inc
add
call
inc
add
sub
push
ja
inc
lods
fsubrs
leave
and
cmp
aas
aas
add
out
shrb
mov
xchg
add
pop
mov
in
push
add
jp
gs
dec
pusha
add
add
adc
cmc
testl
movb
fmull
fisubrl
adc
das
jecxz
into
lea
iret
stos
mov
js
jb
testl
mov
addl
pcmpeqw
push
aam
iret
daa
push
push
ret
adc
inc
cmpsb
repz
and
jne
mov
daa
into
mov
aad
inc
xor
stc
addb
test
in
repz
lods
lock
add
es
out
adc
cmpsl
lods
inc
push
lret
add
std
inc
loopne
add
mov
addr16
test
push
and
xlat
jp
push
xchg
inc
push
test
jae
lods
xchg
pop
mov
add
mov
push
mov
inc
add
inc
sub
cmp
pop
xchg
mov
lahf
jle
aam
sub
les
xchg
inc
add
pop
fistl
and
mov
pushf
xchg
mov
dec
jnp
sti
inc
add
pop
cli
jmp
es
loop
loop
lods
js
icebp
aaa
push
fwait
pushf
movsb
enter
clc
jp
sub
cwtl
leave
cmp
xchg
cmp
sbb
xor
movsb
fmul
imul
hlt
fidivrl
jecxz
add
nop
jle
fidivl
lods
mov
xor
lock
sub
in
bound
fisubl
push
cwtl
xor
jb
add
add
jl
adc
sbb
xchg
jo
data16
sub
xchg
mov
test
dec
inc
add
add
lret
mov
fldl
push
ja
scas
pushfw
movl
loop
rcrb
sub
jns
and
add
add
lret
push
lods
in
sbb
jno
add
aas
lock
mov
paddusw
cmp
pop
rolb
xchg
repz
call
mov
and
pusha
add
mov
mov
add
aas
cmp
shl
dec
in
ret
mov
add
push
in
aaa
push
push
inc
lea
add
cmp
out
hlt
int3
int
outsb
gs
iret
or
insb
aad
or
and
lds
in
imul
adcl
adc
cmc
inc
xchg
addb
imul
xchg
test
bound
xor
jmp
inc
add
add
or
xchg
fiaddl
hlt
imul
push
shlb
daa
fstps
cmc
push
movb
lcall
add
aas
and
add
lret
cmp
pop
les
mov
scas
jecxz
aaa
mov
dec
or
adc
enter
scas
fimull
insb
cmp
decl
mov
xor
xor
pop
rolb
push
in
testl
fidivl
fdiv
stos
sbb
add
dec
stos
and
xor
adc
add
jb
pop
inc
mov
les
pushf
mov
movl
add
add
inc
adc
xchg
inc
add
xchg
mov
xchg
repz
cmp
add
jge
sbb
sub
pop
stc
roll
insb
sub
popf
or
cmp
and
mov
outsl
pop
dec
adc
mov
jmp
dec
scas
sbb
pop
jecxz
fstps
add
fwait
ja
jne
lock
aaa
scas
and
fsub
add
push
pusha
add
or
add
push
mov
push
cld
decb
int3
loop
mov
add
push
dec
addb
mov
fildl
lods
pop
adc
add
mov
push
push
add
push
outsb
xor
sbb
mov
pop
out
mov
dec
jmp
test
movsb
mov
out
jp
lods
jmp
jmp
cmp
sub
jbe
ret
cmp
ja
and
pop
inc
add
sub
jbe
pop
lods
loope
cs
mov
sub
das
jmp
mov
fcmovu
jmp
loope
add
xchg
loopne
xor
aaa
push
jo
pop
fadds
popf
cmp
in
xchg
lea
dec
daa
cmovno
cmp
jl
cmp
adc
xor
mov
int
xchg
mov
ror
jp
push
mov
scas
jle
shrl
clc
and
roll
add
fs
sub
pop
nop
popl
push
adc
cmp
scas
dec
and
fwait
cld
repz
lock
add
popf
or
jno
mov
push
or
mov
sbb
push
stos
ret
push
push
fsubrl
sbb
daa
and
lds
insl
dec
popf
push
mov
xlat
pusha
add
adc
mov
in
sub
sbb
push
das
inc
jns
in
xchg
mov
add
pop
adc
fimull
sbb
jg
out
sbb
clc
xor
rolb
pusha
add
push
jecxz
repz
and
rcll
jns
add
mov
iret
iret
movsl
xchg
fs
add
or
out
icebp
pop
daa
xchg
xor
int
shrl
test
sbb
jge
ret
xchg
inc
add
push
add
add
mov
cmp
jbe
dec
mov
dec
xor
rcll
add
int
insb
enter
or
pushl
mov
adc
fcmove
xor
and
popa
jno
sbb
add
xor
xlat
jmp
add
pop
ds
add
sub
xor
pop
cmp
and
std
icebp
leave
data16
push
sbb
mov
mov
cmpsb
adc
mov
cld
push
inc
add
bound
jmp
sub
xchg
inc
push
enter
mov
out
add
add
jno
lcall
inc
decl
add
xor
fs
fsubrp
gs
push
add
call
adc
mov
dec
fidivrl
add
gs
lock
pop
outsb
mov
fmuls
mov
add
adc
clc
pop
loopne
add
push
or
mov
and
mov
cli
xor
or
dec
repnz
xlat
mov
movb
mov
cmc
jns
xchg
cwtl
das
stos
dec
sti
pop
mov
cmp
add
scas
sahf
loope
mov
add
test
ficomps
adc
scas
xor
les
shlb
ds
je
cmp
int
test
inc
add
xchg
sub
bound
sbb
outsl
mov
rorl
xor
jmp
hlt
or
and
enter
add
lret
jecxz
add
loope,pt
movsb
movsb
dec
mov
ljmp
rcll
arpl
mov
mov
jg
cmp
cmp
add
rcrl
sub
jo
pushf
out
ljmp
stos
xchg
pop
in
cmpsb
ss
adc
repnz
sbb
lds
out
xor
imul
out
movsl
dec
loop
xchg
pop
xor
inc
add
mov
pop
mov
pop
sub
cmpsl
mov
idivb
mov
add
pop
adc
fbstp
mov
rcrb
mov
dec
xchg
sub
loopne
jl
imul
push
add
add
rolb
jp
movsb
insl
movsb
xchg
add
sub
repnz
lea
rolb
les
push
cmc
mov
cmp
out
ss
ds
hlt
addr16
nop
scas
int
xlat
add
inc
add
adc
pop
mov
pop
inc
addr16
or
and
push
mov
test
xlat
cld
loopne
add
cli
sub
push
out
repz
add
lods
xor
popa
enter
push
adc
lods
daa
jne
push
fs
mov
bound
cltd
cmp
xchg
adc
lret
push
add
test
dec
push
jmp
xchg
mov
test
aas
dec
test
push
cmpsb
jp
bound
movb
pop
addb
add
or
add
mov
data16
inc
add
addb
jl
stos
add
sbb
lret
bound
lret
lcall
stc
cmp
lret
loop
sar
jle
xchg
push
mov
fwait
jnp
cltd
aam
enter
adc
outsb
in
sub
in
lods
cmp
hlt
pop
rolb
popa
cmc
add
out
or
sbb
pop
in
mov
lock
mov
rcll
add
add
lsl
sbb
mov
xchg
add
xor
xor
insb
test
xchg
rolb
out
jne
int3
cmp
pop
int
sbb
add
lds
pop
cmp
add
negb
jle
fistps
inc
add
rcrb
movsl
sub
addl
test
add
push
xchg
jne
cld
xchg
mov
push
mov
pop
dec
mull
fcomps
popf
inc
add
mov
jmp
out
or
stos
sti
aaa
mov
clc
into
adc
adc
inc
push
xchg
nop
xor
push
xor
aad
and
cmp
pop
xchg
js
add
fucom
insb
push
jmp
outsb
inc
add
inc
add
xchg
xchg
push
mov
call
push
push
pop
hlt
scas
sbb
aas
sbb
mov
pop
rolb
sbb
add
int
add
daa
ret
jae
mov
cmp
arpl
mov
adc
jns
popa
outsl
jp
or
pop
js
loop
mov
xchg
jp
fdivl
jmp
adc
and
xchg
inc
sbb
mov
stos
nop
rorb
fnstcw
stc
inc
add
or
xchg
std
or
mov
gs
cmp
insb
inc
push
movl
jae
scas
aas
lcall
xchg
outsl
mov
in
or
testb
enter
sbb
pop
stos
push
test
add
push
xchg
mov
mov
jnp
xchg
call
add
and
mov
lret
xchg
loop
mov
retw
loope
les
pop
jmp
xor
xor
out
jg
insb
fbstp
cli
inc
aam
icebp
std
adc
push
mov
dec
push
add
lahf
in
and
add
iret
or
ss
aad
lcall
mov
pop
mov
cmp
mov
out
insl
addb
push
clc
ja
sub
mov
add
jle
in
add
push
jmp
std
ss
xor
out
sbb
nop
adc
icebp
jp
inc
push
popf
dec
fmul
scas
std
dec
xchg
loope
push
add
mov
mov
rorb
xchg
jnp
mov
add
add
xchg
mov
push
add
repnz
in
nop
int
movb
cld
or
rolb
aas
dec
xchg
push
ret
push
add
mov
stos
xchg
je
filds
iret
xlat
mov
push
popf
fstps
inc
add
outsb
mov
mov
sbb
lods
test
add
mov
mov
jl
add
jp
xchg
or
sbb
nop
cld
and
mov
add
add
mov
mov
cmp
pusha
add
cmp
lds
add
popa
pop
cltd
test
push
rorl
add
fistpl
lea
scas
fucom
rorl
loopne
xchg
mov
sbb
sub
mov
inc
and
arpl
addb
repnz
movzwl
add
add
xor
cmp
repz
pusha
add
pop
lods
push
and
add
fmuls
les
inc
add
sbb
pusha
add
xchg
jecxz
and
inc
add
aad
xor
sub
mov
add
sbb
fstpt
popf
dec
sbbl
pop
or
dec
mov
jmp
mov
sub
lcall
mov
sub
jg
or
or
sub
in
jecxz,pt
add
ret
test
bound
jnp
ret
push
sub
test
xor
jnp
mov
adc
sub
ljmp
pop
movb
test
and
dec
repz
mov
push
mov
pop
mov
cmp
mov
jp
and
jno,pn
pop
fldt
xchg
jns
adc
testb
xchg
xchg
mov
ret
add
inc
and
cmp
add
rcrb
pop
out
or
ja
out
adc
lahf
adc
add
add
cli
int3
sbb
sub
insl
push
cmp
fimull
test
mov
lock
imul
sub
jo
in
jge
adc
adc
into
in
gs
jo
mov
add
sbb
and
add
mov
jl
int
cld
in
jno
inc
add
fwait
dec
pop
aas
repnz
jmp
rolb
or
repnz
add
out
add
int3
xchg
adc
lcall
add
pusha
add
test
and
int
adc
daa
dec
ss
pop
stc
adc
add
fisttpll
mov
mov
movb
push
xchg
arpl
es
js
les
adc
pusha
add
fistl
inc
add
add
add
add
sti
das
loop
movb
aas
adc
daa
and
adc
sarl
imul
fstps
pop
fwait
and
addr16
add
addb
mov
pop
in
cmp
add
and
stos
xlat
jns
push
mov
inc
add
lret
push
xchg
std
pop
bound
daa
in
repz
js
out
daa
icebp
push
clc
call
add
sub
xchg
cmp
add
add
repnz
add
add
xchg
test
test
das
and
mov
pop
mov
popa
lods
popa
test
ljmp
hlt
mov
ret
clc
rcl
movl
inc
xchg
imul
mulb
sbb
lods
dec
call
pop
jmp
scas
and
xor
shl
sti
inc
ffree
add
dec
test
inc
add
cld
icebp
lea
xlat
pop
inc
pop
dec
sub
addb
mov
movsb
and
sti
popa
adc
into
roll
add
das
js
inc
es
sub
or
aam
fmulp
mov
adc
and
mov
or
mov
lcall
jns
and
popf
mov
fwait
sti
add
std
xchg
xchg
fst
sub
and
jbe
mov
test
stos
hlt
lcall
jp
and
mov
dec
lret
sahf
sub
mov
icebp
pop
xor
rolb
and
sbb
push
push
cmc
jno
out
cli
lock
add
push
jo
xor
mov
cmc
mov
sbb
gs
in
xlat
cs
addb
xchg
mov
fstps
les
mov
insb
out
aas
sub
ljmp
test
fistpll
pop
mov
xor
imul
jmp
rolb
pusha
add
mov
xchg
pop
jo
insb
sbb
or
ja
cmc
cmp
ljmp
mov
mov
add
add
mov
out
add
das
movsl
stc
sub
dec
lds
pushf
dec
add
imulb
arpl
jge
pusha
add
into
ret
dec
inc
ljmp
test
test
out
scas
mov
add
cli
cld
call
push
sbb
arpl
xor
jb
add
nop
or
test
inc
add
sub
ljmp
push
mov
add
shll
les
stos
jecxz
sti
divb
or
adc
add
pop
fs
mov
out
fcomip
mov
ljmp
dec
jno
dec
pop
in
lods
xor
jecxz
xchg
pop
cmp
leave
scas
shlb
add
fwait
pop
ljmp
inc
add
es
xor
adc
stos
aam
fcmovbe
mov
fcoml
add
inc
add
in
cmp
fimuls
push
std
jnp
sub
push
into
lods
inc
add
jbe
push
insb
ljmp
mov
sub
sbb
inc
add
adcl
add
inc
add
dec
jp
pop
scas
cmp
push
rol
aas
xor
mov
push
lds
add
leave
int3
pop
adc
stos
imul
shll
xchg
test
add
mov
outsb
dec
mov
pop
sub
jmp
push
jbe
les
divl
add
jo
dec
add
mov
rcll
lods
sub
out
cmpsl
push
mov
mov
cmp
sub
int3
loope
push
and
das
nop
inc
lods
or
test
inc
add
jmp
jmp
loopne
add
push
fcomi
roll
lods
mov
icebp
lods
cmpsl
mov
xor
xchg
xor
int
push
ret
mov
sarl
cmp
ds
out
jp
and
test
scas
les
aas
mov
aam
mov
test
xchg
in
movsl
lret
or
adc
mov
add
inc
fcompl
addb
mov
iret
outsb
rolb
gs
lcall
repz
sub
pop
dec
jb
add
adc
and
or
cli
int3
mov
mov
stc
or
pop
stc
cmpsb
fisttpll
aad
jp
loopne
inc
add
add
mov
loope
mov
lds
xchg
add
cmp
mov
xor
frstor
into
pop
call
push
into
lock
add
inc
add
add
in
pop
jmp
push
pusha
add
xor
movsl
add
mov
mov
push
or
sub
out
fldcw
cmp
cli
sahf
xchg
enter
int3
lock
mov
push
xchg
movsb
add
add
add
lcall
dec
push
popf
outsl
xor
xlat
ljmp
add
cmp
jo
pop
out
addb
dec
inc
add
pop
push
jnp
add
jle
mov
fstpt
cld
inc
add
jge
movb
insb
and
xchg
outsb
sub
cmp
ljmp
dec
and
push
jecxz
in
negb
mov
aad
or
cmp
pop
sbb
pop
jae
add
adc
sbb
test
daa
sub
pop
cmp
xor
jg
movsb
sub
addr16
mov
movsl
jae
inc
pop
push
int3
dec
inc
add
lods
push
push
es
or
sbb
push
nop
cmp
mov
out
sub
cmp
fnstcw
push
pop
lret
enter
sub
cmpsl
jmp
add
call
adc
into
outsb
push
add
xlat
cmc
hlt
mov
adc
cmp
inc
add
dec
loop
inc
add
inc
jnp
pushf
sbb
push
scas
std
lock
loope
mov
inc
scas
xchg
lds
fisubrl
test
shll
xchg
cmp
out
push
add
cmp
ljmp
push
or
pop
jg
add
lods
jl
mov
scas
hlt
lahf
cli
pop
add
daa
jp
or
mov
mov
loopne
mov
pop
push
xlat
lret
jmp
out
int
test
sbb
mov
dec
push
pop
add
sbb
sarl
pushf
mov
xchg
xchg
and
cmp
repz
lret
jmp
jns
cmp
scas
adc
stc
les
je
clc
or
sub
call
test
into
xchg
or
stos
rcr
mov
xchg
or
mov
les
sub
push
pop
les
pop
divb
jg
les
hlt
adc
test
xchg
pusha
add
pop
and
jne
add
jmp
push
cmp
gs
pop
xchg
add
or
sub
mov
test
sar
or
stos
mull
push
sub
repnz
add
gs
dec
lret
add
xchg
mov
push
pop
and
and
arpl
sahf
jne
outsl
xchg
test
sbb
inc
add
scas
test
scas
pop
dec
scas
pop
jbe
mov
push
adc
xor
popa
inc
and
nop
fstps
rcll
sub
incb
cli
inc
mov
and
and
xlat
arpl
pop
jge
push
mov
pop
inc
xchg
cmpsb
and
testb
scas
orl
sub
dec
cmpsb
andl
add
adc
ds
add
in
popf
pop
addb
dec
adc
or
mov
xchg
lods
and
insb
mov
incl
rcrl
rcrl
mov
rcrb
pop
arpl
mov
fisubs
jg
fistps
add
lock
jl
in
std
movb
or
adc
out
and
jle
mov
fimuls
jbe
lds
add
testl
cltd
add
stos
xchg
fimuls
lea
jb
pop
sbb
and
push
sbb
jne
add
inc
loop
mov
push
loopne
add
jo
out
mov
xor
fwait
ljmp
add
mov
scas
cli
add
jp
inc
add
or
and
push
jo
add
sbb
int3
cmpsb
rcr
lock
or
jno
pop
repnz
or
or
add
cmp
shlb
inc
jnp
mov
js
cmc
adc
jne
dec
xchg
cmp
lods
fs
cmp
outsl
dec
or
pop
mov
mov
push
dec
out
push
js
shrl
outsb
sub
xsave
add
frstor
cltd
iret
jle
fildll
out
lods
orl
nopl
pop
addb
sub
fdivrl
dec
push
test
dec
mov
sub
adc
ds
mov
push
push
and
outsl
sbb
xor
enter
sahf
mov
sbb
std
xor
dec
imul
mov
add
xchg
sbb
shll
mov
add
dec
arpl
addb
out
fadd
les
bound
pusha
add
mov
mov
add
mov
pop
mov
pop
push
mov
jb
add
adc
pusha
add
xchg
daa
xchg
sbb
mov
ds
or
mov
lock
sub
cmp
es
pop
out
sarl
xchg
sbb
insb
pop
clc
sbb
mov
cmp
dec
xchg
pop
inc
fisubrl
pop
leave
test
outsl
add
and
fdivr
shll
push
lods
movb
les
inc
add
mov
xlat
mov
out
fisttpll
sbb
bound
out
push
jo
out
add
cmpsl
push
sbb
fwait
add
add
inc
add
xchg
xchg
idivb
push
lods
push
add
or
and
das
push
lock
addb
fidivrs
add
fdivs
je
sub
in
adc
je
or
jle
cmp
add
cltd
shrb
fsubs
sbb
add
cmp
in
pop
pusha
add
bound
pop
mov
fcompl
test
sbb
jno
add
stos
push
addb
sbb
ficoml
sub
daa
fs
out
addb
fists
push
jle
punpckhdq
xchg
scas
pop
js
dec
movl
add
adc
mov
push
pop
jb
test
imul
and
ds
data16
mov
out
or
mov
rolb
jnp
dec
filds
mov
ss
and
xchg
test
dec
scas
lcall
fwait
in
xchg
push
mov
jp
je
outsb
sbb
add
add
fisubrl
xor
inc
add
add
cmpsl
je
call
dec
push
cmp
fildl
nop
sub
add
test
enter
and
rolb
mov
movsl
mov
dec
stc
divl
add
into
aas
fcmovu
push
xchg
sub
add
int3
mov
sub
rolb
scas
sub
xor
shll
jne
mov
or
add
stos
push
push
mov
in
mov
push
jl
push
push
adc
dec
xor
add
push
add
mov
pop
arpl
adc
loop
call
test
or
outsb
lea
imul
nop
in
sbb
sbb
rolb
movsl
test
aad
lret
aam
pop
testl
std
icebp
inc
add
xor
mov
pop
movsl
gs
pop
mov
jbe
ret
jns
out
insl
fst
xchg
data16
sti
dec
les
or
in
sbb
mov
and
push
std
mov
xor
cmpsb
aam
push
jmp
std
cmpsb
pop
out
stos
idivb
test
dec
or
out
pop
in
sarb
xor
fs
add
sarl
mov
test
repnz
sub
test
mov
adc
insb
xchg
cmp
lret
out
fs
leave
iret
es
in
and
arpl
mov
mov
xlat
addb
xchg
fstpt
jb
or
iret
jle
cmpsb
mov
popa
push
add
cmp
aas
xchg
sbb
out
mov
rorl
cmp
imul
dec
mov
cmpsl
test
xor
lock
jge
push
mov
fistpl
test
dec
pop
xor
out
add
pop
ja
add
fists
ds
pop
adc
out
or
and
jns
jl
add
mov
pusha
add
adc
add
je
cmp
mov
xor
ja
or
add
sbb
lods
hlt
sbb
add
jmp
xchg
lds
out
add
addb
testb
sub
mov
int3
inc
jge
inc
add
js
jb
sbb
add
or
movsb
lods
jg
mov
sub
xor
cmp
mov
jmp
or
rcll
fs
mov
cmpsb
add
push
in
daa
dec
int
outsb
dec
test
push
inc
popa
std
pop
ret
xor
ljmp
dec
aam
and
sahf
xchg
daa
icebp
mov
and
aad
mov
addr16
out
xchg
push
imul
push
negb
push
sub
push
pop
in
mov
into
or
xor
shll
adc
inc
push
cmpsb
mov
fdivr
shl
inc
xchg
neg
and
scas
jp
das
daa
aaa
jb
adc
adc
in
lock
xor
lcall
dec
sbb
mov
aaa
or
rcr
popa
ret
mov
insb
push
fisubs
xchg
xchg
xchg
push
pushf
dec
in
dec
push
pop
push
insb
add
addb
sbb
pop
mov
inc
add
cmp
repz
in
shlb
pop
popf
push
push
add
mov
jbe
add
adc
lret
faddl
mov
ja
jle
add
test
ss
ds
push
add
jge
xchg
pop
mov
add
movsl
out
add
adc
pop
outsl
test
mov
pop
sub
pop
xchg
repz
call
jg
test
movsl
sbb
addb
or
rolb
or
add
fstps
lea
cmp
stc
scas
cltd
repz
loope
add
push
xchg
jl
mov
dec
imul
push
add
xchg
jge
mov
add
xchg
aam
pop
aas
mov
push
sbb
pop
nop
ret
imul
adc
xchg
nop
cld
mov
push
icebp
or
add
jp
push
adc
lds
in
cmpsb
inc
sbb
cmp
adc
cmp
push
out
cmp
jns
pop
add
cmpsl
iret
push
mov
jne,pn
inc
add
loope
je
push
pop
dec
xchg
jo
cltd
jge
mov
mov
adc
lahf
dec
imul
fstpl
inc
add
mov
sbb
mov
in
dec
out
insl
test
popf
or
push
mov
roll
pop
cli
xor
sbb
add
icebp
stc
jle
mov
les
mov
adc
lret
hlt
fnsave
add
sub
xor
imul
mov
and
pop
pop
out
add
call
movsb
cld
pop
cmp
jo
ja
stc
push
push
add
mov
or
xchg
xchg
fcompl
inc
adc
flds
dec
mov
pop
mov
dec
pop
inc
add
out
pusha
add
or
cs
mov
mov
inc
add
add
or
xchg
in
or
add
lods
pop
jge
ret
inc
add
jecxz
mov
add
ljmp
xchg
dec
aas
jno
xor
test
inc
add
mov
add
fdivr
ja
test
addb
add
or
jne
popa
in
inc
aas
psrad
mov
add
lcall
leave
lods
test
mov
mov
enter
mov
outsl
aad
mov
dec
ret
adc
xor
add
clc
mov
out
xchg
or
mov
das
shll
cmpsl
call
lea
popa
push
pop
jo
lret
stos
addb
int
and
cltd
push
xchg
pop
lahf
mov
push
push
add
inc
add
xor
pop
outsb
xor
movsb
pop
cmpsl
movb
sub
jbe
ljmp
pop
sub
xchg
xor
add
or
push
ret
testb
add
add
outsl
out
push
setnp
add
mov
addb
add
mov
lcall
out
mov
dec
shl
shrl
jbe
inc
push
add
packuswb
lds
sbb
out
mov
fnstsw
xchg
mov
pop
stos
sub
cmp
jb
sub
push
sahf
mov
mov
jns
jno
mov
and
rcll
add
fcomip
ljmp
pop
call
shrb
cwtl
mov
mov
ljmp
add
repnz
fsubs
lret
jns
jecxz
andl
enter
pop
lds
sti
lods
pop
cmp
push
push
es
dec
and
add
mov
dec
push
or
pop
scas
or
movsl
dec
xchg
mov
add
pop
mov
xchg
cs
xorl
mov
add
movsb
xor
insb
in
mov
push
ljmp
fsub
roll
in
jae
sbb
ljmp
imul
or
xor
pop
cmp
xchg
cs
jns
cmpsb
scas
lea
imul
lret
fistps
jae
cmp
inc
popf
fdivl
shrl
push
adc
jle
mov
mov
out
xor
fdiv
pusha
add
dec
pop
test
movsb
fwait
cli
pop
xor
push
add
add
add
add
data16
bound
xor
jle
mov
js
mov
mov
into
out
mov
mov
add
pop
xor
aaa
mov
ret
icebp
jg
cli
ret
fsubrl
add
adc
pusha
add
add
push
jmp
aam
jge
pop
jbe
cmpsb
es
push
lods
pop
pop
pop
addb
add
pop
push
add
xor
loope
test
inc
add
jae
sbb
outsl
jne
add
mov
fnstsw
sub
add
add
inc
sbb
mov
mov
jl,pt
add
cmp
add
out
pop
add
pop
movb
add
sbb
inc
inc
add
mov
add
lea
inc
add
add
mov
out
lcall
inc
mov
mov
call
loope
inc
add
pop
cld
stos
dec
cwtl
jp
dec
add
clc
jg
dec
jecxz
jecxz
xchg
fucomp
adc
shl
push
xor
loopne
stos
imul
mov
sbb
xor
in
loopne,pn
xchg
jo
lahf
pop
fnstsw
fsubrl
jmp
cs
mov
in
shll
mov
dec
rcrl
sbb
sub
sub
xor
out
mov
sub
xchg
mov
int
jnp
aam
lahf
push
pop
bnd
ss
mov
insl
dec
cmp
sbb
repnz
addb
in
sti
outsl
inc
add
mov
lcall
inc
shr
movsl
out
pop
mov
push
dec
imul
sub
leave
push
enter
jns
shrl
add
mov
add
mov
mov
xor
mov
mov
mov
leave
push
test
in
or
repnz
shll
jne
in
jecxz,pn
cmpsb
push
movb
and
outsb
and
aam
je
test
cmpsb
outsb
dec
std
sub
inc
add
mov
cltd
mov
xchg
mov
cmp
cld
or
fidivl
mov
push
mov
lret
fs
jmp
je
mov
pop
xchg
mov
ficompl
shlb
sub
add
push
lret
jle
stos
jecxz
xor
repnz
add
add
gs
rorb
call
addb
xchg
add
dec
jbe
push
mov
xchg
loop
xchg
push
mov
cs
fsubs
xchg
and
or
sbb
push
add
shll
ss
mov
in
adc
inc
add
add
inc
jo
jmp
pop
push
enter
stc
fs
and
fdivrs
sbb
add
