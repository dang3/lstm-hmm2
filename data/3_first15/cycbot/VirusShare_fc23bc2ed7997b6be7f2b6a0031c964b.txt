mov
test
addr16
add
mov
mov
xchg
xorl
sub
mov
cmc
push
stc
add
into
cmc
into
add
outsb
pop
popa
les
add
push
dec
addb
push
add
xchg
sbbl
gs
xchg
sub
insb
adc
xchg
daa
push
gs
inc
add
fsub
daa
and
add
add
aas
push
cmpsl
mov
mov
stc
mov
aam
xchg
add
push
jnp
push
jns
add
mov
sbb
xchg
and
mov
fildl
mov
adc
ds
mov
out
lahf
push
add
dec
test
test
mov
mov
rolb
mov
cltd
jg
movsl
mov
repnz
and
cmp
test
or
in
enter
push
push
push
pop
cmp
idivl
add
mov
add
and
mov
mov
jmp
jecxz
sbb
std
xlat
ret
or
testl
add
add
add
add
lret
and
jmp
xchg
add
dec
jo
mov
mov
add
inc
addb
mov
sub
xor
dec
in
add
out
inc
add
mov
lahf
push
pop
iret
lods
test
xor
mov
and
xchg
add
adc
mov
mov
xchg
sbb
add
mov
std
xlat
clc
fcom
add
mov
imul
or
adc
xor
mov
jl
dec
mov
add
xor
mov
mov
fistpl
loop
mov
inc
add
sub
test
adc
add
fcoms
pop
pop
imul
sub
out
lahf
sahf
iret
cld
out
std
addb
adc
leave
mov
sub
add
xchg
sbb
fisubs
sub
add
jae
push
jo
mov
inc
add
mov
mov
mov
fsubrs
fistpll
mov
add
add
mov
and
jb
mov
pop
mov
add
popf
int
ret
sub
jbe
mov
out
pushf
call
mov
daa
and
in
pop
aam
sub
inc
add
cmp
cltd
pusha
add
loope
pusha
add
mov
add
sbb
jg
ret
inc
sub
es
push
inc
cmp
add
dec
xor
mov
jle
add
ljmp
int
sbb
popf
imull
add
mov
mov
cmp
rorl
add
iret
xchg
cltd
insb
dec
add
fidivrs
sub
xor
dec
jmp
popa
mov
cwtl
mov
imul
dec
inc
add
jmp
outsb
mov
cmp
fcomps
mov
add
cmp
loop
mov
mov
pusha
add
mov
std
pop
or
pop
inc
ret
idivb
lret
xchg
loope,pt
jb
mov
mov
dec
inc
add
push
cld
insl
pop
mov
arpl
mov
add
mov
jbe
adc
mov
mov
sbb
test
dec
icebp
mov
adc
pop
jbe
jo
mov
add
adc
mov
add
mov
mov
adc
mov
dec
outsb
sbb
add
fwait
push
push
into
daa
cld
imul
and
mov
insb
xchg
and
xlat
sub
push
mov
fiadds
mov
inc
lcall
jl
mov
add
add
add
cmp
stc
fdivl
add
sub
xchg
lcall
data16
add
add
or
add
xlat
cltd
cmp
mov
loopne
mov
cmpsb
sbb
mov
cmp
rolb
push
inc
jno
push
lret
je
andl
cmc
push
rolb
inc
push
or
loope
js
cmpsl
push
xlat
pop
gs
loopne
mov
add
cmc
out
push
rolb
mov
add
ret
movsl
adc
dec
popa
xchg
fwait
sub
cmp
push
lcall
popf
xor
mov
jb
mov
scas
pop
sti
cmp
xor
data16
xor
mov
and
xor
or
and
sbb
push
mov
sbb
add
pusha
add
adc
mov
shld
add
jp
popa
push
add
mov
mov
and
push
mov
add
lcall
imul
mov
std
fistps
add
lret
loopne
mov
mov
les
xchg
jge
arpl
mov
cmc
push
stos
sub
fistpll
and
add
loop
mov
mov
outsl
inc
inc
testb
inc
add
dec
add
sbb
std
push
and
mov
and
ror
adc
mov
add
lcall
push
add
sbb
mov
lea
or
sbb
mov
add
icebp
sub
cltd
push
fs
sbb
inc
dec
mov
mov
push
lock
bound
mov
lea
rolb
ds
aaa
mov
mov
inc
push
sbb
xchg
push
pop
int
and
mov
ret
fwait
add
mov
test
add
mov
add
add
add
adcl
mov
jl
add
add
sbb
mov
adc
popa
cwtl
mov
dec
dec
pop
sbb
mov
cli
pop
mov
fstpl
xor
pop
loop
mov
leave
jnp
or
lock
or
mov
int3
out
and
sbb
lret
jo
mov
out
out
dec
pop
imul
lret
ret
sub
mov
movsl
fdivrl
mov
dec
daa
sub
lahf
and
mov
adc
or
out
dec
mov
xchg
sti
push
add
mov
adc
int
mov
fldenv
push
push
addb
cwtl
and
mov
mov
stc
or
aaa
mov
jns
roll
mov
and
mov
mov
adc
and
int3
flds
mov
test
add
cmp
lock
jp
add
sub
ret
fdivrl
mov
mov
jnp
add
leave
les
add
pop
add
jp
outsb
cmc
xor
cmpsl
xor
stos
test
mov
mov
add
lock
addl
dec
scas
sbb
add
mov
lea
arpl
dec
data16
fildll
mov
mov
pop
les
sti
sub
pop
iret
ret
sbb
mov
mov
mov
xor
pop
add
add
mov
fimuls
mov
pop
cli
xchg
inc
xchg
add
fldl
add
fcmovb
push
dec
push
jo
mov
mov
cwtl
pop
cwtl
mov
or
inc
cmp
fwait
xor
lahf
leave
cmp
jne
mov
mov
cld
rolb
mov
iret
std
push
xor
enter
movsl
stos
add
mov
push
bound
mov
sub
mov
mov
cmp
jp
hlt
cmpsb
cld
je
ficomps
mov
repz
add
fs
fs
pop
fsubrp
les
les
add
test
xor
mov
dec
fbld
call
mov
in
sub
daa
jb,pn
mov
dec
fildl
jb
mov
dec
push
jno
jne
add
mov
or
xchg
pop
mov
push
jle
add
add
stc
add
mov
add
rolb
mov
jmp
in
cmpsb
dec
xor
xchg
cmp
lret
push
add
neg
jbe
addb
int
icebp
sub
cmc
cmp
mov
cli
mov
stos
jmp
push
je
mov
gs
lret
pop
lret
lods
cmc
std
xchg
fadds
add
add
mov
cmp
lret
push
xor
cmp
push
call
mov
outsb
movsb
jp
add
neg
mov
mov
test
adc
mov
add
outsl
ret
cmp
add
test
test
and
add
and
dec
repz
std
push
add
decb
imul
sbb
push
jnp
stos
mov
mov
sbb
ljmp
loop
mov
add
cmc
insb
push
fmuls
cltd
jae
rolb
adc
mov
add
fadds
add
mov
ss
sti
cld
xchg
push
add
mov
or
mov
add
das
mov
xchg
jle
add
adc
add
add
stos
push
cld
fs
les
mov
sub
outsb
std
out
int
adc
inc
pop
jb
mov
imul
hlt
scas
rcll
xchg
dec
in
dec
ret
ds
mov
sbb
sbb
loop
mov
add
pop
call
fistpll
push
mov
mov
mov
add
mov
jmp
insb
nop
add
add
sub
addb
nop
add
icebp
adc
loopne
mov
sbb
add
lea
mov
lcall
pop
push
sbbl
addr16
jg
cli
push
pop
sbb
pop
pushf
and
bound
mov
add
ljmp
inc
mov
insb
cmpl
xchg
lds
es
inc
cmp
iret
les
in
cmc
enter
add
mov
mov
push
push
hlt
adc
lea
mov
test
cmp
add
nop
push
addr16
or
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
neg
scas
outsl
insb
pop
out
test
mov
pop
xor
mov
mov
inc
lret
iret
aaa
pop
mov
add
xor
aad
lods
mov
add
jp
fs
add
mov
xchg
out
pusha
add
mov
add
mov
jmp
add
adc
mov
push
jae
dec
out
and
addb
fisttpll
jg
jg
stos
mov
mov
mov
enter
push
xor
mov
pop
sub
in
sub
test
aam
xchg
imull
imul
in
mov
mov
rolb
mov
push
je
add
shrl
imul
stc
icebp
cli
addb
sahf
fcomps
add
mov
xor
cmp
push
pop
pop
inc
add
std
dec
mov
addb
popa
pop
jnp
xchg
popf
ret
adc
js
jg
add
add
fcmovb
push
popf
nop
add
mov
add
mov
add
andl
add
xchg
inc
pop
sub
adc
std
jle
push
mov
add
mov
loopne
mov
clc
cmp
or
jns
cmp
mov
xor
fiaddl
dec
lock
imul
mov
popf
inc
pop
push
repnz
icebp
out
clc
mov
mov
add
sbb
mov
mov
push
inc
cltd
insb
adc
add
jl
sub
add
lret
or
xor
xchg
rcll
rcll
and
push
sub
int
sbb
xchg
movsb
lret
sti
out
inc
add
mov
ss
push
add
dec
xchg
add
mov
cmpsl
mov
sbb
add
repz
call
jg
push
rolb
mov
mov
jg
inc
stos
fidivs
mov
mov
add
imul
lods
into
decl
sbb
sub
sahf
sbb
loope
add
push
dec
inc
add
inc
adc
push
int
mov
sti
notb
ss
and
mov
daa
gs
cmpsl
push
out
cmp
xchg
smsw
insl
ss
mov
fcompl
in
pop
push
bound
mov
filds
add
and
mov
mov
addb
iret
in
sub
adcl
cld
repz
push
cmpsb
fildll
push
inc
add
inc
add
test
int3
mov
cmpl
or
pop
pop
lret
xchg
in
cmpsl
insb
into
mov
rolb
mov
sbb
mov
jae
stos
cmp
add
mov
mov
xlat
mov
add
jne
add
or
insl
pop
popf
ficomps
in
lret
dec
js
or
movsl
dec
andl
sti
shll
jle
push
pop
rolb
mov
iret
xchg
sbb
cmp
add
in
add
xor
mov
add
mov
mov
mov
rcrl
mov
insb
mov
fisttpll
lcall
in
inc
enter
pop
insl
push
jbe
insl
lods
xchg
jbe
add
and
mov
incb
cmp
pusha
add
mov
add
mov
addb
je
jns
sub
sbb
das
enter
dec
lods
mov
xchg
imul
aad
enter
mov
jae
xlat
je
add
mov
in
jl
push
add
add
push
sub
sub
add
mov
or
leave
mov
das
fcomp
adc
mov
negb
adc
mov
cs
add
loope
sbb
add
adc
nop
add
mov
jae
add
mov
add
jp
add
mov
scas
mov
add
xor
dec
mov
add
repz
add
dec
add
std
rolb
mov
lods
xorl
cmpsb
inc
sbb
data16
daa
mov
frstor
dec
dec
lret
push
pushf
pop
scas
pop
ret
push
loope
add
not
adc
into
fnsave
inc
xchg
addb
out
pop
lsl
mov
rolb
mov
js
iret
lea
mov
lcall
cmp
js
add
push
dec
bound
mov
dec
pop
jb
mov
mov
in
aaa
mov
mov
ja
inc
mov
add
pushf
jmp
repnz
add
cmp
into
push
les
mov
inc
push
xchg
cli
pop
pop
jle
lods
push
add
mov
xchg
mov
sub
adc
mov
je
sbb
ljmp
subl
cld
mov
jle
inc
shll
sub
daa
and
loop
mov
popa
lahf
in
aam
jg
into
mov
cmpsb
in
push
jb
mov
loopne
mov
loopne
mov
mov
sti
mov
std
pop
inc
add
imul
lcall
rcrl
loopne
mov
mov
cmp
scas
js
inc
add
push
call
movsb
les
mov
pop
ror
and
mov
xor
das
fnsave
sub
xchg
rolb
mov
jmp
dec
add
mov
loopne
mov
push
mov
mov
movsl
adc
movsb
mov
fcmovnbe
pop
jl
rolb
mov
mov
add
adc
mov
jns
ja
rcrl
add
cmc
lock
iret
sbb
add
jo
mov
aas
dec
enter
cltd
daa
jae
and
shll
mov
jae
inc
add
mov
jmp
add
mov
dec
inc
push
xlat
pusha
add
mov
and
ret
mov
out
and
mov
and
mov
sti
jbe
add
add
xchg
pop
cmpsl
mov
addb
push
sub
mov
scas
ja
mov
push
fsubrp
pop
cmc
jns
xchg
or
pop
push
arpl
mov
xchg
add
xchg
lcall
in
mov
rolb
mov
rolb
iret
xchg
mov
push
es
sbb
addr16
lcall
in
test
aad
lods
mov
add
add
mov
fsts
mov
add
xchg
sbb
inc
or
xchg
jl
dec
xchg
mov
in
jp
add
js
sahf
push
ret
pop
pop
in
add
movsb
sbb
add
mov
sbb
mov
mov
jne
or
mov
cmc
stos
aaa
or
and
mov
les
pop
inc
add
jge
test
cmp
add
mov
lcall
add
mov
jnp
cmp
adc
adc
mov
testl
or
xlat
mov
mov
sbb
mov
xchg
push
add
push
add
inc
add
incl
sbb
add
cmp
rolb
mov
add
sbb
and
mov
jb
mov
mov
ds
dec
mov
mov
inc
add
sub
test
nop
add
scas
mov
add
mov
jmp
add
jecxz
inc
insb
dec
sbb
xchg
std
inc
rdpmc
rorl
out
out
pop
sub
or
push
or
call
lods
icebp
mov
push
and
mov
mov
mov
cwtl
sub
rolb
mov
clc
mov
lock
in
clc
mov
add
mov
mov
outsl
lea
sub
add
popf
int3
popw
cli
rolb
mov
pop
shrl
lcall
mov
mov
inc
add
dec
pop
sbbl
jbe
push
lret
lret
mov
imul
mov
mov
add
add
add
or
shrl
repz
lret
mov
cmpsb
xor
ljmp
aam
mov
add
pop
in
mov
in
fildll
stos
mov
rolb
add
mov
cmp
xchg
adc
sbb
loop
mov
arpl
mov
pushf
or
and
mov
jge
add
add
jno
push
test
data16
mov
add
xor
mov
add
mov
add
ljmp
or
fcmove
je
or
dec
mov
addr16
add
fists
fisubrs
loop
mov
out
mov
ds
es
popa
jmp
out
xchg
lret
add
or
cmp
xchg
add
pop
popf
imul
add
or
daa
jecxz
inc
jle
sbb
movsl
idivb
xor
mov
repz
push
out
inc
ret
mov
fiaddl
add
add
xor
mov
mov
aam
and
cmp
add
aad
jle
lret
adc
mov
mov
and
mov
fcmovne
cmp
add
inc
xchg
mov
jecxz
jg
add
sub
jp
pop
push
cwtl
mov
xor
outsb
push
xor
cmp
pop
and
aam
test
mov
mov
mov
in
out
cs
sub
fildll
nop
add
mov
mov
cmp
push
lret
mov
or
add
mov
mov
add
mov
addb
adc
mov
lahf
addb
pop
lock
pop
inc
imull
push
inc
cld
int
jg
arpl
sub
sbb
mov
add
mov
jle
cmp
jmp
adc
push
adc
mov
jbe
mov
inc
and
mov
iret
data16
mov
mov
pop
pop
dec
addl
int3
mov
lock
cmp
push
cmp
add
mov
and
jo
mov
or
mov
stc
out
into
push
stos
inc
adc
jecxz
cmp
jmp
mov
cld
mov
mov
cs
hlt
jae
mulb
xor
lock
add
mov
dec
add
stos
hlt
lret
xchg
movsb
pop
call
rolb
mov
jo
mov
add
sbb
mov
stc
push
add
inc
add
xchg
dec
cli
sbb
sub
push
add
loope
pushf
jg
sub
es
cli
or
mov
shll
pop
movsl
and
pop
xchg
test
cmc
aas
scas
ds
xchg
sbb
add
mov
int
test
test
jo
mov
add
adc
addb
add
mov
inc
aaa
clc
ljmp
fisubs
add
jge
push
add
stc
xor
mov
movsb
push
lods
es
imul
fildl
sbb
icebp
ss
mov
adc
mov
cmp
dec
xlat
lahf
dec
in
movsb
push
in
dec
popa
push
add
add
pop
push
push
dec
dec
or
jb
mov
daa
cmp
ds
adc
ret
sbb
xor
mov
adc
add
insb
cmpsb
inc
jle
dec
incb
mov
imulb
jmp
les
xor
mov
xor
cs
lcall
cwtl
sbb
mov
adc
mov
mov
mov
stos
inc
push
int3
rolb
mov
add
and
addr16
mov
dec
jnp
hlt
aaa
incb
mov
iret
in
fsub
mov
lea
sbb
in
scas
or
push
outsl
push
faddl
cmp
jle
clc
inc
add
mov
sub
add
mov
push
jmp
jmp
add
test
pop
jbe
int
test
jmp
jl
dec
scas
aas
dec
icebp
aad
adc
jb
mov
pop
loope
and
mov
or
lods
and
pop
ss
sbb
inc
mov
pusha
add
insl
adc
inc
and
mov
mov
add
testb
mov
push
fwait
loop
mov
arpl
js
mov
pop
sub
cwtl
mov
fs
and
mov
add
push
xor
add
add
cmc
jnp
mov
add
add
mov
mov
rcrl
data16
mov
mov
cmp
cmp
insb
rolb
mov
addb
mov
movl
fidivs
xor
add
push
sub
and
dec
push
loop
mov
add
imul
pop
or
add
pop
mov
jle
jmp
jl
add
or
add
stc
xchg
sub
imul
jne
add
add
add
iret
add
and
inc
aam
dec
add
es
rolb
mov
push
cmpsl
sbb
pop
aad
sbb
add
mov
add
mov
mov
xchg
outsl
mov
xchg
or
and
loope
jne
add
popa
mov
pop
ds
or
int
adc
add
lahf
dec
decb
xor
mov
pop
subl
sbb
add
xrelease
dec
aam
pop
and
mov
mov
add
mov
sbb
add
sbb
add
add
jge
sub
add
xlat
add
mov
add
test
jnp
lods
shll
sub
cmpsl
push
out
xchg
mov
add
mov
loope
push
sbb
rolb
mov
mov
stos
mov
test
mov
add
addr16
add
add
or
and
mov
popa
in
adc
push
add
jae
rolb
mov
fildl
call
cmp
adc
mov
cmp
add
sbb
add
mov
mov
pop
dec
inc
sbb
popf
lods
outsl
aam
or
cli
outsl
rolb
mov
mov
mov
fisttpl
gs
je
adc
mov
dec
arpl
leave
arpl
add
or
mov
or
cmc
mov
addl
jns
add
mov
lds
das
cmp
lret
mov
cli
adc
aam
bound
mov
lds
add
mov
rolb
mov
xchg
mov
pop
rolb
mov
mov
push
add
push
sub
xchg
lret
fwait
sub
int
push
dec
addb
xor
sub
sub
loop
mov
incl
push
inc
dec
jg
sbb
test
xor
mov
ljmp
cmpsl
adc
or
cmp
add
pop
cmp
add
add
jl
add
mov
pop
jae
fwait
jne
cmpl
cmpsl
lods
pop
loop
mov
fldl
mov
or
arpl
inc
sti
in
pop
or
xor
add
dec
bound
mov
xor
mov
mov
add
cmpsb
sahf
divl
mov
outsl
outsb
xlat
mov
mov
in
dec
sbb
push
pop
leave
lds
js
notl
push
add
and
subl
addb
xor
bound
mov
or
add
add
add
mov
add
popl
pop
leave
sub
fsubs
mov
push
fcmovnu
or
repz
ret
sub
add
dec
add
movsb
pop
xchg
add
insl
and
add
mov
mov
mov
push
sub
dec
adc
cmp
pop
daa
test
pushf
mov
lds
rolb
mov
ds
sbb
cltd
add
pushf
cld
xor
cmp
and
mov
add
push
sub
mov
lcall
fists
push
fbstp
add
mov
sub
xor
mov
test
add
ja
push
outsl
xchg
test
jb
mov
rcrl
adc
mov
fildll
pop
jge
cmp
add
cmc
in
clc
pop
xor
add
mov
xor
mov
sahf
pop
xor
stos
mov
mov
add
or
in
mov
mov
sbb
xchg
jo
mov
mov
add
mov
add
js
idivb
sbb
daa
rolb
mov
add
rolb
mov
mov
fcomp
cmpsl
pop
adc
jae
add
mov
jns
ror
es
pop
add
mov
sub
cwtl
out
adc
mov
mov
xor
adc
mov
mov
adc
cmc
sbb
inc
add
in
mov
add
cli
xor
ja
add
jle
push
add
ss
pop
ss
in
into
cld
es
add
insl
cmovns
bound
mov
in
xchg
add
push
sahf
ret
je
addb
lds
mov
pop
flds
push
call
xchg
sub
filds
into
sbb
mov
mulb
add
cmp
ret
mov
mov
dec
dec
lret
pop
xor
jo
mov
push
test
add
stos
push
movsl
repz
add
mov
pusha
add
sub
or
bound
mov
cmpsb
scas
adc
add
add
pop
and
test
and
sar
arpl
add
sub
add
mov
out
inc
push
cmp
rolb
and
outsb
add
mov
mov
adc
mov
push
jl
and
xor
adc
mov
mov
xor
scas
jge
adc
mov
js
sub
test
repnz
add
out
fbld
mov
lock
mov
enter
push
int3
das
xchg
in
inc
mov
mov
in
pop
jb
mov
repnz
insl
mov
mov
add
pop
out
jl
xor
movsl
movsl
inc
xchg
aad
repz
std
dec
in
and
int
call
push
mov
add
xchg
fwait
sub
sbb
bound
mov
cmc
insl
sbb
enter
add
pop
cld
imul
jnp
decb
lret
lods
orl
lea
add
jne
push
fnstsw
pop
mov
inc
aam
ds
or
inc
add
pop
lahf
fwait
mov
add
bound
mov
pop
ficomps
lds
push
add
popf
fildll
cmp
addb
and
add
mov
dec
rolb
mov
dec
pusha
add
sbb
bound
mov
in
add
sub
xchg
mov
mov
mov
cmp
lock
mov
addr16
mov
inc
add
xor
mov
lahf
mov
pop
jae
cltd
mov
inc
idivl
test
inc
stc
pop
roll
mov
xchg
mov
pop
or
rolb
mov
repnz
push
ret
in
rolb
mov
fists
jno
daa
push
add
inc
add
mov
inc
xchg
test
add
mov
jl
add
pop
jge
adc
mov
cmc
shll
pushf
lock
gs
jle
and
mov
repz
mov
leave
addb
or
jmp
enter
or
mov
fadds
sbb
imul
fdivrp
mov
pop
leave
inc
fidivrl
dec
dec
push
add
fisttpl
mov
mov
scas
xorl
add
mov
mov
add
out
mov
sti
pusha
add
in
adc
and
jbe
rcll
aad
jl
mov
add
sbb
hlt
jae
inc
xchg
add
xlat
pop
pop
shll
lds
xor
mov
sbb
mov
mov
jle
xchg
fcomi
sbb
add
ret
jl
or
and
mov
scas
xor
mov
add
out
fstpt
jo
mov
mov
imul
sub
rolb
mov
jns
sbb
cmpsl
fstpt
movsb
cmp
aas
test
add
cmp
orl
dec
out
adcl
pop
mov
je
nop
add
xor
push
fwait
clc
jne
jno
negl
fs
fwait
mov
rolb
cld
push
out
pop
cli
add
addb
mov
sub
inc
add
psubsb
mov
loopne
mov
jb
mov
pop
adc
mov
push
ds
add
pop
ljmp
inc
mov
mov
lea
and
mov
sahf
imul
add
leave
test
cli
inc
mov
sarl
adc
popf
mov
mov
fnsave
push
inc
into
sub
add
xchg
xchg
add
cmp
push
popa
mov
add
gs
jne
cmp
js
mull
mov
pop
push
add
adc
roll
push
add
fxam
mov
lcall
ja
cwtl
insl
paddd
shr
xchg
mov
pop
jb
mov
insl
cmc
out
xor
cwtl
xchg
test
outsl
stc
pop
push
dec
push
add
xchg
rolb
mov
add
lods
pop
sbbl
movsb
addb
outsl
frstor
push
add
xchg
jmp
xchg
jbe
lahf
scas
sub
sbb
mov
inc
scas
in
push
std
aam
add
adc
mov
popa
cmp
and
mov
push
cmp
and
or
sub
adc
add
je
jmp
pop
orl
cli
pop
cmpl
test
mov
addb
and
mov
push
sti
loopne
mov
jno
xchg
mov
mov
dec
mov
add
add
cmp
loope
stc
pop
xchg
add
mov
out
int3
sahf
scas
xor
aas
dec
xor
jecxz
and
mov
dec
push
mov
xor
jne
xchg
adc
mov
sbb
add
push
push
xchg
clc
jo
mov
mov
or
mov
add
clc
mov
mov
add
and
mov
scas
mov
iret
scas
addb
fs
punpcklwd
and
inc
sbb
sub
xor
mov
pop
js
xchg
lods
aam
xor
mov
lea
dec
in
push
scas
lods
sub
add
sub
sbb
xor
mov
mov
jge
push
aaa
mov
int3
lock
mov
scas
mov
mov
test
rol
mov
sub
insl
jns
add
jmp
jbe
imul
inc
inc
jns
add
jns
and
test
enter
cmp
gs
and
mov
sahf
and
out
fmulp
cmp
and
icebp
push
pop
pop
adc
les
fs
icebp
test
sbb
add
inc
pushf
jbe
xor
xchg
daa
mov
sti
fwait
xchg
add
mov
xchg
add
mov
jnp
xchg
bound
mov
leave
sub
repnz
pop
test
add
sub
iret
fisttpl
push
lock
add
mov
push
push
into
mov
jle
xor
mov
jo
mov
sub
add
pop
pop
mov
sub
cwtl
lock
repz
mov
push
push
outsl
dec
jns
add
sahf
cwtl
pop
mov
inc
popf
ljmp
mov
out
cmp
add
add
add
fs
xchg
aaa
repnz
mov
add
mov
mov
fs
mov
enter
jg
sti
popf
dec
ret
rolb
push
ds
ret
sbb
gs
xchg
inc
add
add
xchg
mov
mov
mov
fxch
xlat
ret
insb
push
add
jne
rolb
mov
add
rolb
mov
lods
mov
mov
int3
in
loop
mov
jnp
aaa
sbb
pop
adc
mov
in
sub
sbb
lret
pop
xor
mov
add
and
mov
pop
ret
or
inc
mov
add
push
add
jb
mov
popa
push
cmpsl
pop
hlt
sub
repnz
pop
or
adc
mov
dec
scas
dec
dec
mov
lret
add
mov
mov
popl
pushfw
dec
sbb
mov
rolb
mov
rcrl
and
mov
and
mov
add
add
out
xchg
add
mov
add
out
mov
add
inc
outsl
mov
mov
xor
movsb
or
mov
push
xor
push
xor
push
daa
jnp
push
inc
cld
lcall
rolb
mov
dec
cmp
add
and
repnz
xchg
pop
in
out
jle
cmp
inc
popf
mov
mov
out
cltd
jle
mov
inc
add
xlat
cmpsb
testl
and
mov
cmp
scas
in
mov
mov
add
addb
cs
stos
popf
sbb
jl
daa
pop
jp
nop
add
xchg
ret
xchg
jle
flds
mov
sbb
mov
hlt
rolb
mov
cltd
cmp
push
pop
dec
stos
hlt
sub
push
pop
sbb
aam
push
test
lock
add
unpckhps
repnz
cld
mov
add
pop
hlt
mov
push
sub
add
stos
push
cmp
add
push
mov
mov
mov
sub
add
mov
push
add
xor
repz
repz
push
rolb
push
pop
push
mov
jmp
pop
dec
pop
fdivs
fimuls
adc
setp
cmp
push
jns
enter
fdivr
pop
aad
sbb
add
mov
add
inc
cwtl
fldcw
push
add
nop
add
push
pop
lret
jns
sbb
and
aaa
mull
out
add
scas
mov
add
mov
or
clc
icebp
loopne
mov
adc
mov
push
insb
lcall
testb
shll
mov
jbe
cmp
insl
add
inc
scas
dec
pop
mov
add
leave
mov
sub
jecxz
add
add
mov
pop
adc
mov
xchg
mov
dec
or
dec
add
fistl
add
je
and
arpl
xchg
mov
or
add
add
mov
mov
mov
andl
add
jne
aas
imul
stos
mov
mov
ja
push
add
mov
sub
test
mov
sbb
lea
push
xchg
mov
lcall
mov
icebp
scas
mov
add
mov
mov
mov
mov
icebp
lcallw
mov
mov
add
rorl
mov
mov
flds
add
and
mov
push
add
imul
xchg
imul
mov
mov
rsqrtps
mov
rcll
mov
push
xor
add
and
mov
mov
mov
out
xor
jne
pop
pop
js
scas
mov
stos
rolb
cmp
add
pusha
add
add
add
lcall
push
add
mov
rolb
jae
add
addb
lods
sub
in
imul
mov
dec
xchg
lods
push
fabs
mov
mov
xlat
mov
nop
add
test
or
pop
int3
and
add
add
mov
jl
ficomps
test
aad
mov
cmp
cmp
mov
add
xor
push
add
rorl
mov
push
xchg
jne
fdivs
cmp
or
mov
sarl
cmp
fldcw
ret
mov
jp
int3
mov
into
cld
dec
adc
add
xor
rcr
enter
add
add
pop
mov
out
pop
es
fmulp
movsl
test
dec
es
pop
mov
aas
xor
adc
add
insl
js
sub
pop
and
mov
pushl
filds
adc
mov
add
mov
mov
add
gs
mov
jne
adc
push
ret
insb
mov
add
mov
cltd
mov
jno
pop
jne
outsb
jae
mov
xchg
scas
cmpsl
jnp
testl
and
adc
xchg
sbb
push
pop
out
sub
add
inc
sub
mov
add
pop
mov
pop
pop
mov
adc
jns
shll
xor
push
add
dec
icebp
mov
mov
add
sub
shrl
std
sbb
cmp
sub
in
push
mov
sahf
xorl
insb
or
push
clc
arpl
cmpsb
fistpl
xlat
xchg
add
mov
inc
sbb
or
xchg
add
rorl
ds
aad
push
lea
mov
decb
add
test
imul
adc
mov
add
add
mov
cmp
enter
add
push
push
adc
push
add
mov
mov
test
fwait
jg
add
js
mov
dec
in
inc
add
and
jge
in
lock
sub
mov
push
std
mov
ficoms
dec
aas
movsl
stos
je
add
stos
js
add
mov
ljmp
jno
push
xchg
add
dec
les
leave
std
fwait
out
mov
mov
stos
test
mov
mov
loop
mov
cmpsl
ljmp
fbstp
call
mov
mov
push
adc
cmpsb
xchg
or
fistpll
dec
inc
adc
xchg
jb
mov
scas
in
and
mov
lcall
add
jl
out
cmp
arpl
aaa
aas
in
incl
push
push
xchg
add
fistpl
mov
jo
mov
clc
aas
and
int
int3
xchg
push
dec
mov
add
xchg
inc
add
xchg
and
sarl
cmp
cld
xchg
jno
scas
das
xor
cmp
cmc
xor
pop
loop
mov
sub
cmp
add
mov
jle
add
aas
push
cmp
aaa
mov
xor
add
mov
in
bound
mov
repz
push
aam
add
add
xchg
mov
mov
cmp
leave
push
fdivl
fnsave
add
add
pop
lret
pop
add
fsubrs
stos
dec
popa
pop
jbe
inc
scas
dec
xchg
test
mov
les
add
fmul
les
icebp
mov
add
mov
and
mov
or
neg
sbb
je
push
iret
add
pop
js
popa
cmpsl
sub
mov
repz
enter
cmpsb
pushl
xor
repnz
dec
inc
incb
ljmp
push
mov
add
sub
add
das
fnstcw
notb
call
xchg
mov
test
xchg
sahf
rolb
mov
xchg
mov
ss
add
push
rolb
mov
add
pop
pop
aad
cmp
add
mov
nop
add
xchg
inc
xor
dec
aam
ficompl
scas
push
inc
or
dec
mov
sbb
add
xor
add
ret
lahf
adc
mov
xor
mov
ljmp
cmc
lods
fcmovbe
lods
dec
push
outsl
cmp
mov
push
ss
mov
fldcw
sub
bound
mov
xlat
mov
mov
es
mov
mov
imul
inc
loopne
mov
inc
cli
add
js
jne
insl
add
adc
mov
ja
lahf
cmp
ret
loopne
mov
add
mov
add
aas
push
cmp
add
xchg
jo
mov
cs
loop
mov
addb
cld
ljmp
push
jg
sub
jns
add
sbb
add
out
sti
or
inc
push
add
push
incl
das
push
addr16
add
iret
loopne
mov
out
add
push
fcmovu
clc
mov
xor
add
push
insb
fists
jge
ss
xor
mov
add
add
bound
mov
jle
loop
mov
add
push
test
sub
scas
sub
sub
or
add
add
or
ja
add
mov
mov
out
jno
sub
jp
das
ds
test
pop
lcall
xchg
sti
int3
dec
gs
sub
adc
mov
inc
sub
jnp
add
add
insl
push
and
jmp
fisubrl
test
push
mov
iret
dec
mov
add
mov
mov
add
and
mov
stc
push
and
hlt
ss
inc
outsl
les
gs
scas
or
jb
mov
imul
dec
dec
cmp
andl
stos
xchg
sti
stos
xlat
mov
shl
cmpsb
test
out
inc
xor
adc
mov
mov
mov
inc
add
pop
jmp
xlat
mov
sbb
add
cmp
xchg
pop
in
mov
add
mov
arpl
cmp
mov
add
mov
cmp
mov
paddb
mov
inc
and
das
inc
test
mov
ffree
addb
pop
push
adc
es
pop
popf
leave
xor
mov
add
add
add
and
scas
in
sbb
jmp
adc
mov
mov
add
mov
pop
mov
pusha
add
lock
stos
dec
jmp
dec
aam
pop
rolb
mov
mov
mov
push
xlat
xchg
fimuls
add
push
mov
pop
cmp
mov
enter
in
mov
fwait
inc
add
mov
mov
mov
cmpsb
sub
addb
xchg
jns
hlt
jno
add
inc
sub
int
mov
add
fcoms
lods
div
add
jb
mov
push
ljmp
xchg
add
mov
adc
mov
ss
mov
xor
mov
clc
popa
addb
addb
jo
mov
add
jp
dec
test
dec
jmp
insb
les
add
adc
mov
mov
cmpsb
jns
ss
push
add
lea
jno
outsl
rcrl
inc
scas
lods
xlat
cwtl
loopne
mov
mov
add
fstps
mov
add
mov
jo
mov
mov
add
push
dec
xchg
mov
ret
add
cltd
pop
jle
out
movsb
inc
inc
repz
mov
leave
popf
cli
movsl
inc
add
mov
lahf
stc
popf
adc
fists
popf
test
fmull
rolb
mov
stc
xchg
xor
mov
sbb
mov
xchg
out
and
in
jecxz
jle
add
fnsave
add
add
cmpsl
or
inc
idivl
add
rcrl
push
fmuls
addl
test
cmpsb
lock
stos
xor
jae
add
mov
xor
mov
in
scas
jle
lods
xchg
pop
inc
xor
mov
add
in
fistps
sbb
xor
sub
add
push
mov
movsl
mov
and
mov
add
mov
repz
jnp
adc
xchg
add
loop
mov
inc
xchg
clc
xchg
std
arpl
pop
inc
fidivs
add
add
adc
add
std
imul
mov
mov
adc
mov
mov
fidivrs
add
add
add
into
dec
scas
adc
fldt
stos
outsl
cmpsb
mov
mov
add
out
sarl
test
xchg
and
mov
add
pop
add
mov
or
jno
and
mov
inc
mov
cmp
add
add
ret
push
mov
push
pop
aaa
dec
mov
pop
mov
add
mov
push
add
add
cmp
popl
mov
mov
test
movsb
or
jne
add
xor
mov
pop
das
je
dec
and
mov
add
mov
sub
fwait
sub
mov
sbb
call
inc
add
das
pop
and
xchg
sti
add
dec
jmp
jge
andl
xchg
shl
cmp
cmp
add
add
mov
aaa
aad
adc
mov
and
sbbl
xchg
jb
mov
add
pop
mov
mov
mov
mov
mov
fsubs
mov
mov
mov
mov
mov
lock
aas
mov
int
aas
outsb
mov
adc
mov
mov
xchg
push
pop
add
ret
stos
fcmovnb
add
mov
sub
xchg
inc
sbb
xor
fmuls
aas
cmp
cld
pop
pop
xchg
add
pop
clc
add
mov
mov
repnz
jp
xor
arpl
sub
sti
adcl
lret
and
leave
repz
bound
mov
dec
lcall
popa
mov
pusha
add
xchg
sub
sub
xchg
mov
nop
add
mov
mov
shll
add
sub
aas
pusha
add
adc
lea
mov
mov
inc
add
cs
cmp
lea
add
or
and
inc
add
cld
jnp
inc
ds
mov
mov
fistps
add
push
pop
cmp
ss
add
inc
mov
test
mov
mov
mov
add
cli
adc
mov
add
mov
test
mov
mov
add
mov
scas
push
test
and
xchg
mov
xchg
insb
call
mov
imulb
jnp,pt
in
sub
add
xchg
mov
lret
jle
cmpsl
xor
mov
add
add
mov
test
jp
add
jp
add
gs
movsb
dec
dec
jecxz
ja
add
orl
mov
mov
cli
int
add
cltd
lock
mov
mov
add
xor
add
mov
add
mov
ret
mov
add
inc
add
sbb
and
mov
out
aas
test
adc
mov
add
lods
jl
cmp
xchg
shll
shll
add
or
jno
add
call
arpl
cmp
call
push
addb
cmpsl
nop
add
icebp
inc
or
add
iret
ftst
pop
mov
add
push
imul
add
mov
push
das
push
dec
mov
insb
mov
addl
out
ljmp
lds
inc
in
xchg
add
adc
mov
xchg
add
mov
mov
mov
cmpsl
ljmp
push
data16
mov
inc
add
add
cli
movsb
out
mov
mov
inc
inc
add
mov
stos
lods
mov
cmpsl
flds
lea
cmpsb
lods
lret
notl
jle
or
mov
mov
push
lahf
popf
ljmp
mov
int3
lock
xchg
add
mov
add
mov
add
mov
push
lods
ss
xchg
and
mov
mov
mov
adc
mov
xchg
movsl
jmp
int
pop
xchg
jle
out
mov
aad
xlat
bound
mov
mov
adc
mov
js
add
sbb
lods
aad
lds
xchg
add
add
clc
sub
fnstcw
cmp
aad
add
mov
movsb
xchg
dec
pop
dec
xchg
jae
jl
aad
or
mov
pusha
add
test
bound
mov
mov
test
dec
gs
cmp
add
pop
shr
jmp
inc
add
add
mov
add
dec
test
add
pop
outsl
test
dec
movsb
clc
insl
xchg
scas
mov
sub
lea
scas
popf
addr16
sbb
sbb
add
add
jle
lods
mov
mov
mov
out
and
mov
add
add
rorl
add
dec
inc
adc
sbb
push
dec
outsb
out
dec
scas
xor
add
mov
in
cmp
call
cmp
add
aaa
or
lock
add
jb
mov
dec
inc
lcall
mov
inc
add
inc
mov
and
add
xchg
nop
add
enter
decb
sub
sbb
shll
xchg
sub
sbb
inc
add
and
in
pop
or
xchg
xor
mov
sti
xor
mov
add
mov
cmp
xchg
pushf
pusha
add
add
es
mov
stc
push
xchg
test
lock
and
loopne
mov
mov
xor
jle
xchg
pop
outsb
adc
mov
addb
inc
stc
in
adc
mov
cmpsb
lods
rcr
and
mov
repnz
xor
mov
and
jg
daa
in
pop
stc
mov
jmp
sub
mov
insl
loopne
mov
test
out
fs
and
mov
adc
in
or
mov
aam
jg
test
mov
mov
cmp
jnp
cwtl
pop
adc
mov
jmp
lcall
jno
jmp
std
mov
mov
mov
dec
rolb
mov
adc
loopne
mov
scas
cmp
sti
push
sar
and
mov
jbe
repnz
jp
jmp
inc
dec
roll
add
out
into
test
lods
insb
adc
or
add
mov
mov
scas
popf
in
fwait
in
jno
pop
loopne
mov
xlat
ja
mov
test
outsl
cmp
pushf
ficompl
push
mov
add
stc
dec
fisubrs
mov
div
loop
mov
add
fwait
test
jo
mov
xlat
mov
mov
pop
stos
pusha
add
mov
out
cmpsl
add
mov
ja
int
clc
fcmovnb
ja
lds
push
test
rolb
mov
lret
xchg
js
add
add
in
nop
add
push
mov
mov
xlat
fistpll
mov
add
mov
pop
pop
or
and
in
cltd
and
mov
dec
mov
add
jp
sbb
sti
mov
mov
nop
add
mov
add
je
je
push
dec
cli
cmp
clc
push
das
cmp
xlat
popf
out
sbb
add
lahf
outsl
sahf
fdivr
in
fbld
or
mov
mov
cmp
mov
xlat
mov
xchg
add
push
mov
lcall
or
sbb
add
test
add
xchg
fstpl
fwait
mov
mov
mov
es
xchg
and
add
icebp
ljmp
fst
add
loope
jb
mov
mov
add
xor
and
add
and
mov
add
mov
scas
sub
imulb
mov
add
sub
mov
lahf
xor
mov
xchg
push
add
fwait
imul
sub
mov
pop
adc
mov
rolb
mov
add
repz
mov
push
rolb
jl
jmp
xor
lea
dec
lea
cld
sbb
and
mov
and
mov
addb
mov
out
add
fcompl
xchg
and
mov
aaa
push
add
aas
je
int
add
repz
pusha
add
push
jnp
addr16
add
dec
xor
mov
sbb
mov
enter
cltd
add
adc
mov
fnstsw
std
popa
jl
sub
add
push
mov
or
je
add
das
add
mov
mov
icebp
push
movsl
pop
idivb
add
pop
sub
test
pop
xor
push
addb
push
insl
jno
add
stos
mov
mov
mov
xor
push
adc
mov
addb
cs
dec
sbb
xor
inc
jnp
sub
mov
scas
ret
inc
pop
mov
inc
add
mov
mov
gs
sbb
xchg
add
insb
xor
or
adc
mov
sbb
movsb
add
repnz
fistps
aam
push
jno
aad
cld
out
jmp
lods
inc
add
push
outsb
std
adc
push
add
cmpsb
mov
inc
sahf
lcall
add
or
dec
out
sub
addb
loop
mov
xor
add
add
mov
idivl
sub
mov
add
repnz
cwtl
rorl
sub
jne
sti
adc
adc
mov
mov
lcall
xchg
mov
mov
fstl
xchg
ds
mov
lret
scas
lods
enter
fnsaves
jmp
cmp
and
mov
xor
jne
cltd
addb
mov
add
jnp
out
cld
rolb
in
nop
add
mulb
jecxz
mov
int3
cmp
jle
xchg
dec
fidivs
jns
jnp
sbb
add
in
pop
pop
push
add
mov
jne
pop
addb
and
mov
mov
mov
push
mov
sbb
add
lret
sahf
stos
das
push
lds
xor
mov
inc
add
mov
cmpsb
xchg
mov
add
jecxz
mov
inc
pop
sbb
fs
and
mov
into
lods
cld
repnz
sub
pop
push
add
or
cwtl
cwtl
jne
shl
add
fcomps
and
add
jno
add
mov
mov
mov
add
add
mov
addb
pop
push
add
lods
xchg
xchg
and
cltd
mov
add
int
in
fdivl
sub
sbb
push
mov
movsl
mov
sub
call
test
inc
mov
jne
add
ret
movsb
push
jne
cmp
nop
add
mov
add
push
add
sbb
cmp
add
mov
mov
xor
outsl
pop
lods
and
add
sbb
mov
mov
xor
bound
mov
ss
and
jmp
add
imul
call
xchg
jbe
xchg
imul
jb
mov
dec
aad
add
bound
mov
add
jae
test
add
les
mov
movsl
addb
adc
mov
daa
pop
sti
inc
xor
add
mov
add
sub
mov
loop
mov
out
sahf
bound
mov
mov
add
add
add
test
clc
test
push
roll
add
jne
test
jmp
sbb
mov
push
add
jle
pushf
fdivp
xor
mov
testl
popl
dec
mov
mov
sbb
adc
mov
inc
cltd
in
inc
add
adc
lahf
rolb
sub
scas
addb
jne
add
add
fdivl
out
cmpsb
jp
dec
xlat
rolb
jl
sar
sbb
add
add
mov
dec
xchg
imul
sbb
push
push
aam
add
inc
ret
lcall
aaa
dec
popf
jl
in
jp
ljmp
add
or
adc
add
mov
mov
mov
dec
lods
mov
cmc
testl
adc
mov
shrl
in
rol
add
sub
or
sbb
dec
in
addb
idivl
mov
jmp
mov
sti
rolb
mov
mov
add
xchg
add
or
loop
mov
push
and
sub
mov
or
add
sbbl
add
xor
movsl
push
int3
orl
cli
add
dec
out
add
xlat
push
into
lahf
pushf
or
xchg
pushf
or
sbb
push
sahf
or
mov
xor
cmpl
ja
cmp
mov
mov
negb
add
xchg
lcall
lock
cmpsl
pop
add
mov
add
mov
mov
jmp
add
add
add
in
fbstp
xor
sbb
mov
ljmp
lods
jecxz
mov
int3
xchg
mov
insb
call
jb
mov
pop
pop
pop
push
sbb
sub
mov
lahf
aas
sub
popf
mulb
pusha
add
daa
mov
add
repz
arpl
or
inc
pop
pop
arpl
mov
pop
shrl
jns
test
bound
mov
add
add
mov
mov
xlat
or
dec
insl
jl
add
add
sti
movsl
jecxz
push
movsb
loop
mov
add
mov
mov
ret
xchg
push
aaa
sub
pop
and
call
xchg
xchg
pop
mov
add
fs
shl
mov
pop
insl
mov
mov
add
mov
mov
xchg
stos
xchg
aad
add
mov
push
add
inc
jne
lods
xchg
add
xchg
add
mov
mov
aas
cmpsb
addb
adc
add
mov
in
sbb
xchg
add
xor
icebp
cmp
pop
divl
sub
and
add
lods
clc
lcall
pop
data16
xor
mov
loopne
mov
popf
mull
xor
mov
add
cld
rcr
dec
dec
mov
push
mov
mov
mov
imul
cmpsb
addb
push
mov
and
leave
arpl
add
add
xchg
ds
je
mov
pop
in
adc
arpl
out
cmp
xchg
xchg
add
sbb
cmp
inc
cmp
xor
mov
pop
or
pop
and
xlat
dec
and
mov
aaa
rolb
mov
mov
mov
ja,pt
sbb
loop
mov
inc
roll
lahf
xorl
dec
loope
and
movsb
mov
int
xor
repnz
stc
data16
arpl
subl
cmp
jo
mov
xor
mov
dec
bt
add
or
add
mov
xchg
lods
push
outsl
push
push
lea
push
jp
add
mov
add
mov
cmp
mov
fnstenv
pop
dec
lea
jp
cmp
mov
insb
inc
mov
in
add
add
in
outsb
push
inc
add
addb
xorl
add
jg
test
clc
push
fucomi
into
cmp
and
xchg
push
and
mov
add
dec
pop
cli
imul
int3
fsubrl
mov
mov
mov
aam
add
add
mov
ficompl
adc
mov
add
mov
call
jno
xor
add
pop
arpl
and
mov
rolb
scas
sbb
add
pusha
add
sbb
movsl
cmp
xor
mov
jae
addb
inc
clc
shll
es
addb
pop
loopne
mov
adc
mov
add
out
aaa
cld
xchg
pop
fnstsw
add
out
addb
sahf
cmp
and
jnp
bound
mov
ja
pop
scas
xchg
or
add
fcomps
pop
push
push
add
imul
aaa
cltd
mov
add
mov
jno
pop
add
out
pop
xor
dec
rolb
mov
mov
bound
mov
jno
clc
push
and
mov
add
xor
mov
xchg
lods
and
mov
jge
pop
push
dec
call
pushf
outsl
jp
xchg
std
jecxz
add
jnp
add
iret
fbld
jnp
push
add
mov
fldz
out
loopne
mov
hlt
lock
repnz
mov
dec
loopne
mov
mov
sub
add
addr16
pushf
xchg
rcr
dec
rolb
mov
adc
mov
inc
add
outsl
inc
pop
mov
inc
andl
ds
pop
jns
hlt
int
inc
add
mov
add
mov
fnstsw
cmp
fldcw
popf
jg
dec
lret
mov
addb
repnz
mov
push
add
add
imull
adc
mov
cmp
cmp
cmp
add
mov
ja
inc
add
jae
fists
js
add
sbb
mov
xchg
jmp
xor
mov
out
cltd
popa
xchg
xchg
outsb
adc
mov
test
xchg
add
mov
mov
add
add
mov
lods
mov
push
push
sbb
mov
or
mov
test
and
inc
add
xchg
jge
imul
jp
jg
add
add
mov
sti
inc
sbb
dec
aas
aaa
test
lds
loop
mov
mov
pusha
add
ret
xor
mov
repnz
idiv
cmpsb
addr16
jbe
insb
insl
ss
test
sahf
loope
sbb
xchg
inc
add
hlt
or
xchg
pop
sub
or
addr16
insb
test
rolb
mov
push
inc
arpl
add
mov
ja
popa
push
mov
mov
or
push
cli
xor
popa
daa
xor
add
jp,pn
daa
adc
mov
pushl
add
dec
ficoms
add
push
adc
mov
lods
ficompl
fnstcw
mov
sbb
data16
add
add
lcall
add
sub
add
add
mov
push
add
mov
xchg
mov
push
sub
dec
gs
mov
mov
daa
push
push
dec
adc
or
lock
mov
xchg
jo
mov
jae
jne
popl
movb
xchg
ja
add
add
popf
dec
aad
repnz
jno
mov
add
cli
mov
mov
add
jne
aaa
fnstsw
lret
negb
jo
mov
jae
and
mov
test
jb
mov
adc
pop
pop
pop
aad
add
in
xor
icebp
daa
mov
add
lcall
mov
mov
mov
subl
jne
stos
add
sub
xchg
fstpl
push
daa
or
insl
data16
mov
lret
and
into
add
pusha
add
in
add
inc
rolb
clc
cmp
add
add
ds
push
pushf
in
mov
fidivrs
jno
mov
stos
pop
dec
test
adc
pushf
sub
mov
mov
xor
mov
push
add
popf
pop
incl
mov
sbb
inc
add
aad
add
add
add
mov
push
rolb
into
mov
jo
mov
mov
dec
out
adc
in
stos
and
add
xchg
cmp
sub
inc
inc
add
and
jne
add
lods
mov
jmp
les
leavew
mov
push
cmp
mov
mov
mov
cltd
fidivrl
test
xor
mov
xchg
and
inc
add
mov
add
scas
hlt
sub
and
fcoml
push
xchg
mov
add
mov
mov
cmp
xchg
outsl
movsb
rolb
dec
fnsave
ffree
add
fsubrs
push
xor
cmpsl
stos
ds
inc
add
mov
rcrl
cmpsl
cltd
mov
andl
mov
movsl
xchg
lret
iret
leave
out
xchg
mov
jp
jecxz
xchg
add
sub
adc
mov
fnstenv
add
jmp
cmp
cld
jge
sbb
jmp
and
add
add
addb
cltd
sub
cmp
les
repnz
mov
lahf
cltd
fwait
pop
or
add
pusha
add
mov
arpl
mov
mov
push
add
add
mov
mov
mov
cmpsl
nop
add
jl
imul
mov
mov
test
stos
add
mov
xor
rolb
mov
stc
xlat
sbb
push
add
lods
sub
adc
mov
test
add
lea
cmpsb
loope
xchg
push
adc
mov
mov
daa
lret
pop
pop
adc
mov
push
mov
movsl
xlat
aas
cmp
cmp
ja
mov
jne
add
lret
or
add
mov
lea
mov
mov
sahf
jg
or
test
jge
into
rolb
mov
push
mov
sbb
add
lret
imul
mov
aad
jg
loope
add
push
inc
test
add
add
inc
add
addb
push
pop
jne
fsubrl
das
lods
out
bound
mov
inc
add
dec
loopne
mov
roll
mov
add
cs
call
add
sbb
add
mov
test
sub
add
aaa
faddp
add
sbb
in
cmp
add
dec
lea
inc
fwait
popf
xchg
add
sbb
rorl
testb
cmpsl
aam
int3
dec
cmp
mov
sti
sub
add
xchg
test
mov
and
mov
je
adc
cmp
cld
outsb
xchg
lcall
push
imul
fistps
shll
dec
sub
add
jge
es
sub
sbb
add
ror
mov
add
in
mov
leave
push
adc
push
popa
bound
mov
sbb
push
inc
rolb
test
pop
dec
repz
jecxz
mov
and
das
push
push
jb
mov
mov
push
pop
or
les
push
xor
jmp
mov
repnz
stos
add
test
addr16
adc
mov
scas
les
mov
ss
je
ds
pop
js
dec
dec
or
ret
lds
mov
mov
js
clc
mov
scas
mov
dec
mov
lret
loope
sbb
and
mov
mov
mov
sub
pop
add
lods
sbb
pop
jmp
rcrl
inc
adc
adc
mov
mov
and
mov
sub
pop
and
inc
lret
jae
test
test
add
mov
add
xchg
push
add
mov
fcomp
outsb
icebp
mov
xchg
sbb
outsl
push
subl
push
das
rolb
mov
rolb
mov
mov
add
js
nop
add
mov
dec
mov
mov
pop
push
icebp
aad
shrl
mov
mov
push
inc
add
mov
adc
mov
gs
pop
repnz
mov
dec
sahf
mov
pop
icebp
movsb
sub
addb
push
je
inc
mov
push
xchg
push
lea
es
mov
rolb
mov
adc
lock
mov
add
sti
out
and
mov
jns
sbb
adc
adc
ds
mov
xchg
add
add
movsl
inc
and
xchg
xchg
pusha
add
rolb
mov
mulb
ds
pop
xchg
ljmp
mov
add
xchg
stc
push
add
dec
loop
mov
mov
mov
mov
js
in
cmpsl
dec
pop
inc
mov
pop
mov
repz
sbbl
add
cli
clc
dec
sbb
sub
mov
mov
lret
or
jne
push
sub
cs
fistpl
mov
mov
mov
mov
xchg
mov
dec
push
mov
arpl
mov
inc
add
and
mov
add
aas
add
cmp
inc
add
dec
jbe
add
add
jnp
pop
loopne
mov
jae
lcall
jp
test
mov
mov
sbb
xorl
mov
bswap
xchg
add
sahf
enter
add
pop
push
lea
mov
test
fidivl
add
iret
cmc
xor
xchg
add
movsb
out
jne
scas
rolb
mov
stc
xchg
add
dec
leave
repz
inc
dec
sub
fisubl
mov
mov
push
push
pop
enter
icebp
pop
rolb
mov
pop
dec
gs
add
push
insb
jb
mov
add
rcll
mov
mov
daa
mov
jp
sub
add
mov
pop
fwait
pop
sub
mov
mov
test
sbb
cmpsb
adc
insl
jno
add
xchg
pushf
cmc
sub
mov
mov
int3
or
dec
adc
push
add
push
stos
inc
add
mov
add
inc
pop
pop
push
add
mov
repnz
mov
pop
mov
mov
and
mov
and
add
jmp
pop
adc
jb
mov
jmp
add
xchg
add
mov
pop
sahf
rcll
add
mov
pop
mov
inc
adc
mov
push
add
lods
test
add
dec
and
add
jnp
jle
in
int3
cli
in
mov
lock
ss
pop
andl
sbb
xchg
jno
sbb
stc
sub
stos
icebp
rolb
mov
fadds
pop
or
mov
hlt
sub
mov
mov
dec
pop
adc
mov
sbb
and
pusha
add
aam
stc
leave
fcoms
add
cli
add
mov
sub
xor
add
pop
jbe
arpl
add
add
inc
lods
inc
add
xorw
push
push
add
xor
push
mov
add
mov
rorl
xor
mov
push
cmpsl
das
daa
nop
add
scas
jg
lret
int3
mov
addb
in
testb
mov
mov
add
sahf
xchg
in
aaa
cmp
lret
out
rolb
pushw
stc
fiaddl
gs
ret
lahf
add
mov
cmp
inc
lcall
fiadds
add
and
add
add
in
xchg
fwait
mov
add
movsb
sub
into
call
out
ficoms
inc
loop
mov
pushf
rolb
fbstp
add
dec
cmp
inc
add
loope
jl
stc
mov
add
mov
xchg
add
cwtl
push
cmp
cld
out
sub
enter
out
adc
adc
add
mov
pop
and
mov
rorl
mov
aam
xchg
lretw
and
fnstsw
or
xor
mov
mov
stc
fwait
add
add
fistl
pop
mov
rolb
mov
pop
pop
lahf
movsl
or
mov
stos
inc
pop
or
xor
add
jno
and
mov
mov
mov
mull
dec
add
mov
xor
pop
pop
lret
and
add
fs
lret
movl
sarl
mov
add
add
push
loop
mov
adc
test
lods
xchg
imul
or
insl
les
cmp
sbb
das
shll
mov
mov
pushf
rcll
add
add
adc
mov
fimuls
stos
jbe
cwtl
jo
mov
add
mov
mov
fwait
add
lret
add
enter
adc
mov
insl
popf
and
pushf
xchg
fs
in
and
add
xlat
rorl
bound
mov
add
outsl
fwait
daa
add
dec
push
inc
bound
mov
add
xchg
ror
mov
popa
fwait
cmp
or
je
int3
int
cmpsl
inc
mov
mov
pop
and
push
push
add
xor
mov
add
cld
icebp
cmc
dec
movlhps
xor
je
pusha
add
or
cmp
lahf
mov
pop
dec
mov
cltd
aaa
lods
add
mov
test
push
inc
add
in
inc
imul
imul
add
in
push
popf
or
inc
add
cltd
xchg
cmpsl
in
push
es
and
inc
pop
mov
add
daa
fisttpll
jl
mov
in
sbb
lds
ret
mov
out
jmp
xchg
jp
mov
clc
push
cmpsb
cli
mov
pop
mov
adc
ljmp
in
ror
out
inc
add
add
adc
cli
rolb
mov
addr16
mov
add
add
sub
mov
or
fcmove
adc
mov
insl
cmpsb
xor
gs
or
movsb
push
sbb
pop
push
scas
or
jmp
add
mov
add
mov
cmpl
add
mov
scas
pop
cmp
in
inc
repnz
mov
pop
add
add
imul
pushf
add
pop
cmova
sub
loope
pop
testl
mov
xchg
les
lret
mov
mov
push
mov
scas
in
out
xchg
xchg
add
pop
dec
xor
mov
push
jb
mov
pop
cmp
mulb
add
mov
mov
add
add
xor
enter
std
call
push
cmp
les
mov
xor
mov
mov
mov
repnz
mov
inc
mov
mov
xchg
xchg
add
or
xchg
gs
add
fidivrl
sub
xlat
mov
sbb
mov
popf
push
mov
add
cmpsl
sbb
pop
int
insl
mov
push
add
imull
aam
pop
or
adc
fistpl
outsb
adc
mov
lods
adc
add
add
mov
pavgw
addb
sahf
sub
pop
lods
out
xor
js
pusha
add
xchg
test
popf
ss
mov
out
mov
scas
icebp
loopne
mov
mov
cmp
sub
int
add
xor
mov
dec
dec
aam
pushf
in
mov
aam
jmp
jmp
jnp
cli
pop
pop
stc
rolb
mov
mov
add
imull
adc
and
mov
stc
sbb
xchg
hlt
das
sbb
add
push
fcmovbe
add
mov
rorl
outsb
or
inc
cmp
lret
xchg
add
mov
mov
aas
jmp
sbb
jge
jge
addr16
mov
add
mov
jne
jb
mov
sub
mov
xor
jbe
mov
xor
lcall
loope
je
outsb
test
mov
movsb
or
add
dec
sbb
add
outsl
cltd
mov
add
push
mov
inc
aad
push
inc
out
dec
insb
ret
or
addr16
add
test
lret
jo
mov
xchg
xchg
add
ret
rorl
jg
pop
jg
and
mov
add
add
adc
pop
add
mov
fmull
dec
fdivrl
mov
jb
mov
cmp
gs
outsl
aam
xor
mov
and
call
jp
iret
out
insb
rcrl
lret
push
mov
mov
xor
mov
daa
xor
mov
mov
cli
xchg
add
das
lock
mov
push
xchg
add
adc
push
and
mov
xchg
fucomi
cmp
addb
push
pop
lahf
cmovns
cld
xchg
jns
mov
test
mov
add
int3
cmp
mov
imul
sbb
add
stc
dec
add
repnz
add
arpl
xor
mov
mov
xchg
xchg
add
add
enter
pop
sti
add
mov
mov
push
add
jne
repnz
mov
mov
mov
add
mov
push
dec
mov
jmp
ss
pop
mov
add
rolb
dec
pop
cmp
add
mov
sub
jbe
lods
test
dec
fldcw
dec
sub
lcall
mov
add
pop
cmpsl
mov
add
outsb
fcmovbe
mov
mov
sbb
sub
test
jl
push
cmpsb
imul
pop
xchg
pop
clc
mov
add
add
cli
lods
int
jp
mov
pushf
adc
and
mov
xchg
adc
pop
ret
xchg
mov
ja
jne
loope
insl
pop
fs
lock
sbb
add
je
adc
pop
cmc
dec
adc
mov
test
stos
dec
xchg
stc
out
push
add
and
rolb
mov
mov
loope
arpl
add
cmp
mov
add
mov
icebp
xchg
add
mov
adc
add
into
in
insb
jo
mov
mov
adc
leave
icebp
out
xor
mov
mov
rcrl
inc
push
add
aam
data16
sti
cmp
aad
add
jne
add
decl
sahf
movsl
pop
xlat
or
dec
xchg
mov
mov
jle
add
std
and
mov
call
jmp
add
cmc
imul
fidivl
mov
and
mov
add
iret
popa
inc
aad
sub
jecxz
dec
jge
xchg
xor
mov
arpl
sub
incl
adc
or
mov
addb
je
and
push
mov
inc
add
mov
mov
sub
add
incb
add
add
adc
imul
add
and
mov
lcall
pop
icebp
xor
outsb
dec
lret
add
dec
pop
add
dec
xor
mov
fisubrl
jnp
fidivs
out
fsubrl
mov
mov
mov
jmp
rolb
mov
pop
lea
or
mov
mov
bound
mov
pop
ret
rolb
mov
jle
jae
arpl
mov
cmp
mov
outsb
inc
add
rolb
mov
mov
cmpsb
sub
lods
loop
mov
rolb
mov
enter
lods
lock
inc
lods
and
add
pop
rolb
adc
mov
sbb
stos
test
cmp
iret
fistpll
add
and
mov
div
add
fiadds
movsl
test
add
stos
imul
push
sub
add
xchg
lds
mov
fisttpll
pop
lods
popa
xchg
aad
mov
mov
mov
das
sti
push
test
js
xchg
xor
loop
mov
or
push
cmp
xchg
sbb
bound
mov
xor
arpl
scas
scas
cmp
mov
lock
mov
xor
mov
inc
xchg
xor
sbb
add
xchg
out
gs
inc
popf
mov
incl
add
add
aam
push
sub
add
mov
lods
int
fwait
mov
jg
add
cmp
insl
push
insl
and
aaa
xchg
xchg
mov
add
ss
mov
mov
and
mov
mov
jecxz
and
mov
sub
mov
add
sbb
repnz
mov
add
mov
jp
mov
add
xchg
add
push
jae
cmp
loop
mov
sub
push
dec
stc
loopne
mov
outsl
inc
sbb
push
mov
push
das
xor
aad
ss
sbb
and
mov
mov
ret
and
and
mov
inc
cltd
sti
sub
jl
or
mov
ljmp
xor
add
aad
bndstx
inc
cwtl
insl
cmovno
add
mov
mov
add
inc
add
pop
jnp
div
add
xchg
dec
js
jg
jo
mov
push
add
fsubl
jmp
xchg
int
js
inc
pop
inc
fwait
call
add
mov
out
jecxz
add
mov
push
test
out
lods
int3
push
fisttps
xchg
shll
out
jno
add
imul
rolb
xchg
cmc
pop
sahf
cwtl
mov
pop
stc
or
add
loop
mov
fs
cli
pop
add
mov
fisubs
mov
test
add
mov
iret
push
out
push
rolb
mov
add
mov
mov
and
add
cmpsb
sbb
loop
mov
loope
pusha
add
adcl
imul
jecxz
dec
lock
fwait
hlt
mov
mov
push
stc
or
aad
xchg
add
outsb
aad
or
mov
mov
outsb
leave
lret
addb
xor
mov
leave
jnp
out
add
mov
add
ret
movsb
inc
add
jle
jmp
dec
xchg
jo
mov
push
add
test
mov
cmp
add
repz
mov
mov
add
aas
and
xchg
mov
jnp
pusha
add
cmpsl
mov
or
test
jle
sub
add
add
mov
sub
adc
mov
pop
cwtl
addr16
js
movsb
pop
cmpsl
push
add
push
push
adc
mov
repnz
ja
jns
test
outsl
gs
in
adc
jl
and
mov
mov
mov
and
iret
aam
xor
cltd
and
divl
add
push
push
add
loopne
mov
mov
test
inc
aam
movsb
call
jne
inc
mov
stc
jecxz
cmp
push
pextrw
push
add
imul
mov
or
enter
inc
sti
mov
mov
add
jnp
push
add
mov
add
pop
pop
movsl
movsb
fsubr
xchg
add
mov
adc
or
and
jle
in
js
repnz
dec
inc
jbe
sbb
add
testl
xor
mov
daa
shrl
punpcklwd
sbb
scas
add
mov
addl
and
mov
addb
jnp
xor
mov
repnz
add
add
mov
mov
daa
cmp
je
pop
test
mov
mov
add
add
add
mov
add
mov
lods
rolb
mov
add
aas
add
js
outsb
pop
movsl
jl
jb
mov
iret
ds
js
adc
ljmp
and
add
push
cmpsb
cli
cmp
rolb
mov
movsl
jno
add
mov
fs
adc
mov
in
gs
mov
aad
cmp
push
mov
add
mov
add
pop
loop
mov
add
jbe
jl
lock
cli
pushf
ret
insb
xchg
and
add
bound
mov
cmp
add
stc
mov
or
add
sub
adc
scas
xor
repnz
jp
cmpsl
jbe
xor
mov
add
sti
addb
jbe
scas
ja
pop
inc
add
add
loop
mov
add
lcall
test
mov
mov
pop
pop
loop
mov
add
cmpsl
aas
dec
and
mov
inc
stc
lcall
push
stos
mov
pop
fsqrt
inc
test
je
aad
add
add
out
and
mov
mov
mov
out
mov
in
dec
mov
add
jbe
in
mov
in
cmp
jbe
daa
and
mov
pop
add
add
add
and
mov
rolb
mov
mov
arpl
jle
add
add
add
push
cmp
xor
add
add
dec
adc
pop
leave
rolb
mov
dec
lods
out
sub
cs
xor
add
jnp
ficoms
aam
je
cmpsl
ljmp
cli
lock
sub
dec
add
mov
fistps
shrl
sbb
inc
imul
pop
pop
pop
mov
cld
inc
js
mov
and
mov
adc
hlt
ret
xchg
xchg
inc
mov
mov
shrl
fcmovnu
inc
add
pop
addb
lods
sub
pop
jnp
add
add
mov
add
pop
adc
jmp
mov
adc
mov
and
mov
mov
loope
aam
add
mov
popa
hlt
inc
add
in
pop
lea
aad
int
add
inc
add
in
nop
leave
jmp
add
add
sub
fistl
incl
xchg
ret
mov
add
push
inc
and
push
mov
nop
leave
jmp
fisubrs
add
dec
call
mov
xchg
ret
add
lret
cli
push
clc
repnz
nop
cld
jae
add
cmpb
mov
add
nop
nop
cld
jae
add
add
add
xchg
outsl
and
nop
nop
cld
jae
push
add
cmp
outsb
add
clc
repnz
nop
cld
jae
lods
popa
add
or
decl
test
add
push
mov
nop
leave
jmp
xchg
cld
add
or
aad
inc
add
int3
mov
mov
test
add
clc
repnz
nop
cld
jae
push
add
jne
clc
repnz
nop
cld
jae
aad
add
mov
inc
into
push
clc
repnz
nop
cld
jae
dec
mov
fdivp
sbb
repnz
nop
cld
jae
aaa
add
mov
movsl
fsubs
popa
add
mov
xchg
ret
fidivrs
cwtl
mov
mov
clc
repnz
nop
cld
jae
mov
add
add
mull
repnz
nop
cld
jae
add
jo
mov
add
or
add
inc
add
imul
push
js
jno
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
mov
sar
clc
repnz
nop
cld
jae
add
xchg
mov
push
mov
xchg
ret
add
in
aad
add
add
cs
clc
repnz
nop
cld
jae
add
aaa
dec
add
push
mov
nop
leave
jmp
add
add
arpl
mov
mov
push
mov
xchg
ret
data16
imul
scas
enter
nop
leave
jmp
addl
addb
int3
pop
mov
push
mov
xchg
ret
add
add
nop
nop
cld
jae
jge
jge
add
inc
cmc
xor
mov
rclb
aad
add
add
add
add
daa
stos
add
clc
repnz
nop
cld
jae
add
add
add
pop
pop
jmp
add
add
jl
dec
add
add
mov
mov
fildl
xchg
ret
movsl
cld
dec
add
addl
add
add
repnz
nop
cld
jae
add
out
negl
add
push
mov
nop
leave
jmp
add
add
pusha
add
outsl
popa
fs
mov
nop
leave
jmp
add
add
push
mov
add
andb
dec
xchg
aaa
pop
add
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
add
sub
sub
repnz
nop
cld
jae
add
mov
xor
mov
push
mov
xchg
ret
mov
add
and
clc
repnz
nop
cld
jae
mov
add
test
nop
cld
jae
add
addb
cmp
insb
cld
inc
add
cmp
aad
scas
add
nop
cld
jae
incl
add
cmp
add
scas
and
push
mov
xchg
ret
mov
cmp
add
add
clc
repnz
nop
cld
jae
add
mov
sbb
push
mov
nop
leave
jmp
push
jl
mov
add
dec
add
repnz
nop
cld
jae
add
out
add
scas
fwait
pusha
clc
repnz
nop
cld
jae
add
dec
add
sbb
in
mov
clc
repnz
nop
cld
jae
add
popa
add
in
popa
leave
mov
clc
repnz
nop
cld
jae
insl
jge
lret
sub
clc
repnz
nop
cld
jae
popa
add
push
je
push
test
add
clc
repnz
nop
cld
jae
inc
scas
subb
inc
adc
repnz
nop
cld
jae
movsl
add
add
movsl
aam
mov
push
mov
xchg
ret
and
add
push
clc
repnz
nop
cld
jae
add
add
add
add
fstl
mov
nop
leave
jmp
add
mov
add
cli
or
push
mov
nop
leave
jmp
lret
add
cmp
xchg
xor
and
mov
stos
clc
repnz
nop
cld
jae
sbb
aaa
add
fadds
jl
clc
repnz
nop
cld
jae
inc
aaa
popa
fisubrs
add
jmp
mov
clc
repnz
nop
cld
jae
aaa
lea
ljmp
add
jle
addb
add
pop
clc
repnz
nop
cld
jae
pop
jg
aaa
add
lods
sub
addr16
incb
nop
nop
cld
jae
fiadds
lods
data16
cmp
repnz
nop
cld
jae
insl
xor
add
add
repnz
nop
cld
jae
popa
movsl
inc
lret
aaa
gs
les
mov
clc
repnz
nop
cld
jae
out
aaa
add
shl
inc
add
xchg
add
add
add
mov
nop
nop
cld
jae
aad
add
lods
sub
mov
repnz
nop
cld
jae
data16
aaa
data16
add
mov
clc
repnz
nop
cld
jae
add
add
jl
orl
pop
sbb
add
jge
out
xchg
inc
jg
add
clc
repnz
nop
cld
jae
cmp
insl
pop
mov
push
push
mov
xchg
ret
insl
cwtl
test
add
addl
mov
clc
repnz
nop
cld
jae
add
imul
add
nop
nop
cld
jae
add
add
add
add
mov
xchg
ret
fidivs
jl
push
add
ret
cmp
nop
nop
cld
jae
imul
test
mov
xchg
ret
add
and
outsl
test
push
mov
nop
leave
jmp
add
add
or
mov
nop
leave
jmp
add
inc
add
cmp
mov
andl
nop
leave
jmp
cld
lods
cmp
imul
into
sbb
cmp
aad
add
push
clc
repnz
nop
cld
jae
or
out
add
adcb
add
mov
xchg
ret
add
aaa
sub
aaa
aad
cmp
push
mov
nop
leave
jmp
jg
add
aaa
jge
add
push
mov
xchg
ret
add
add
add
repz
xchg
pop
add
clc
repnz
nop
cld
jae
inc
test
add
add
movsl
mov
pop
and
repnz
nop
cld
jae
addb
add
mov
clc
repnz
nop
cld
jae
popa
lret
scas
dec
sbb
repnz
nop
cld
jae
aad
in
fidivrs
add
xchg
sbb
add
clc
repnz
nop
cld
jae
dec
mov
cmp
nop
cld
jae
cld
mov
out
cwtl
add
repnz
nop
cld
jae
out
inc
add
add
jne
clc
repnz
nop
cld
jae
add
add
add
xchg
repnz
repnz
nop
cld
jae
xchg
out
xchg
clc
repnz
nop
cld
jae
or
pushw
add
popa
movsb
cli
push
push
mov
xchg
ret
in
add
add
fsubr
data16
lods
clc
repnz
nop
cld
jae
popa
and
jge
cmp
add
stos
clc
repnz
nop
cld
jae
add
mov
lods
mov
clc
repnz
nop
cld
jae
cmp
add
push
add
push
push
mov
add
sbb
cmp
mov
sbb
repnz
nop
cld
jae
mov
add
jmp
in
or
add
add
mov
scas
mov
clc
repnz
nop
cld
jae
add
pop
mov
push
mov
xchg
ret
xchg
add
add
clc
repnz
nop
cld
jae
imul
pushf
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
lret
jmp
jp
push
mov
nop
leave
jmp
popa
movsl
add
add
push
mov
xchg
ret
cmpl
dec
cmpb
repnz
nop
cld
jae
add
add
cmp
and
push
mov
xchg
ret
jle
add
lret
add
inc
mov
mov
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
lods
insl
cwtl
in
add
mov
clc
repnz
nop
cld
jae
imul
and
push
mov
xchg
ret
in
mov
loopne
mov
mov
jmp
movsb
clc
repnz
nop
cld
jae
sub
xchg
scas
popa
sar
je
clc
repnz
nop
cld
jae
add
add
imul
and
cmp
add
aaa
jecxz
mov
push
mov
xchg
ret
add
cwtl
andl
mov
test
cld
clc
repnz
nop
cld
jae
jge
add
pusha
push
mov
nop
leave
jmp
cmp
aaa
add
add
sub
clc
repnz
nop
cld
jae
add
add
dec
lea
clc
repnz
nop
cld
jae
jg
jle
lods
jo
mov
ret
push
in
nop
leave
jmp
movsl
cmp
add
jg
add
add
push
mov
nop
leave
jmp
mov
or
mov
nop
leave
jmp
scas
jge
add
out
lret
inc
add
add
clc
repnz
nop
cld
jae
aad
add
out
cltd
push
push
mov
xchg
ret
dec
add
fiadds
cmp
aaa
push
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
inc
mov
nop
nop
cld
jae
mov
add
cwtl
add
push
mov
clc
repnz
nop
cld
jae
movsl
add
out
add
sub
in
nop
leave
jmp
cwtl
cwtl
fiadds
test
aaa
test
xchg
repnz
or
repnz
nop
cld
jae
lret
add
push
icebp
out
mov
push
mov
nop
leave
jmp
aad
add
in
aad
in
add
push
mov
xchg
ret
fidivrs
insl
out
add
add
add
nop
nop
cld
jae
add
add
aad
add
add
push
mov
nop
leave
jmp
add
cwtl
in
sub
add
push
push
mov
xchg
ret
add
fmul
add
inc
mov
in
nop
leave
jmp
sub
aad
add
mov
add
clc
repnz
nop
cld
jae
in
dec
insl
mov
sti
push
mov
nop
leave
jmp
lret
add
cmp
add
lods
push
mov
xchg
ret
dec
in
add
xchg
scas
xchg
add
mov
add
leave
or
lret
adc
adc
mov
repnz
nop
cld
jae
int3
add
add
out
stos
clc
repnz
nop
cld
jae
aaa
fsubrs
dec
inc
insl
mov
mov
nop
leave
jmp
mov
add
cmp
sub
adc
in
nop
leave
jmp
jl
sbb
add
adc
mov
nop
leave
jmp
out
jle
add
andb
mov
call
clc
repnz
nop
cld
jae
cwtl
add
add
pop
mov
clc
repnz
nop
cld
jae
sub
add
mov
add
clc
add
sub
out
xchg
xlat
cmp
mov
adc
repnz
nop
cld
jae
jg
add
add
mov
xchg
ret
add
add
add
add
xchg
push
mov
nop
leave
jmp
cld
add
das
jmp
fisubs
sbb
add
add
out
popa
int3
push
add
repnz
nop
cld
jae
xchg
add
add
add
xor
mov
push
push
mov
xchg
ret
add
add
add
aad
sbb
jne
push
mov
xchg
ret
cmpl
popa
add
clc
repnz
nop
cld
jae
mov
daa
dec
push
push
mov
nop
leave
jmp
mov
add
push
mov
xchg
ret
add
int3
imul
clc
repnz
nop
cld
jae
add
add
add
add
add
or
push
mov
nop
leave
jmp
mov
add
and
clc
repnz
nop
cld
jae
add
data16
in
jl
mov
clc
repnz
nop
cld
jae
mov
aad
imul
mov
xchg
ret
add
push
add
call
clc
repnz
nop
cld
jae
in
add
in
add
inc
add
add
lods
mov
push
pop
clc
repnz
nop
cld
jae
addb
add
and
clc
repnz
nop
cld
jae
es
jg
jle
sti
push
push
mov
nop
leave
jmp
movsl
add
int3
fists
in
out
lock
add
add
push
add
xor
jp
clc
repnz
nop
cld
jae
add
out
add
add
into
jmp
add
subb
inc
add
add
mov
repnz
nop
cld
jae
add
jle
add
cmp
popa
xchg
leave
add
push
mov
nop
leave
jmp
add
xchg
or
repnz
nop
cld
jae
add
add
xchg
int3
jne
push
push
mov
xchg
ret
add
inc
and
add
in
aam
add
iret
add
add
pop
add
mov
mov
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
and
cmp
mov
adc
repnz
nop
cld
jae
popa
aad
jl
sub
push
mov
xchg
ret
add
add
cmc
testl
clc
repnz
nop
cld
jae
out
lret
lret
subl
push
mov
xchg
ret
add
in
add
repnz
lret
push
mov
xchg
ret
add
add
jl
add
pop
cmpl
push
mov
nop
leave
jmp
add
add
aad
push
push
mov
xchg
ret
in
in
cmp
add
mov
repz
repnz
nop
cld
jae
add
add
mov
jg
cmpl
push
mov
nop
leave
jmp
add
mov
lret
xor
add
push
mov
nop
leave
jmp
add
add
jnp
push
mov
xchg
ret
aad
add
add
cld
jae
add
scas
add
add
and
push
mov
add
add
add
jl
in
add
cmpsl
add
repnz
nop
cld
jae
add
jecxz
add
nop
nop
cld
jae
out
scas
sbb
cmp
add
bound
mov
add
add
clc
repnz
nop
cld
jae
in
addb
arpl
xor
clc
repnz
nop
cld
jae
add
add
add
xchg
sbb
repnz
nop
cld
jae
fisubrs
add
jne
clc
repnz
nop
cld
jae
mov
sti
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
mov
movsl
xorl
les
clc
repnz
nop
cld
jae
add
aad
aaa
aaa
mov
testb
cmp
ret
add
cld
popa
lods
in
push
mov
adc
mov
add
mov
nop
leave
jmp
add
add
mov
mov
adc
repnz
nop
cld
jae
add
jb
mov
or
sar
repnz
nop
cld
jae
push
mov
cmpl
mov
clc
repnz
nop
cld
jae
dec
add
push
mov
nop
leave
jmp
cmp
lret
xor
or
sti
push
mov
nop
leave
jmp
push
add
inc
jle
push
add
clc
repnz
nop
cld
jae
imul
jp
push
mov
xchg
ret
dec
int3
jg
add
add
and
xchg
mov
stos
push
push
mov
xchg
ret
add
int3
sbb
mov
push
mov
nop
leave
jmp
sbb
in
sbb
dec
jne
add
push
mov
xchg
ret
add
add
jl
es
mov
clc
repnz
nop
cld
jae
aaa
add
sbb
cmp
repnz
nop
cld
jae
add
aas
adc
in
nop
leave
jmp
inc
aad
add
inc
push
mov
nop
cld
jae
add
add
add
scas
add
push
mov
nop
leave
jmp
jge
jl
aad
jle
mull
negb
cmp
repnz
nop
cld
jae
add
add
push
lea
mov
xchg
ret
add
add
mov
add
add
clc
repnz
nop
cld
jae
sub
lret
imul
clc
repnz
nop
cld
jae
cwtl
add
xchg
add
sub
nop
nop
cld
jae
add
add
test
repnz
clc
repnz
nop
cld
jae
test
cmp
mov
xchg
ret
dec
fimuls
aad
mov
cltd
call
clc
repnz
nop
cld
jae
aaa
test
imul
mov
nop
leave
jmp
add
add
add
mov
test
repnz
nop
cld
jae
add
inc
add
add
add
repnz
nop
cld
jae
add
pop
add
push
mov
out
jg
into
clc
and
rolb
add
fs
push
mov
xchg
ret
xchg
mov
repz
nop
cld
jae
add
add
andb
dec
mov
clc
repnz
nop
cld
jae
push
add
ss
imul
clc
repnz
nop
cld
jae
add
add
je
add
repnz
nop
cld
jae
jge
add
xor
push
mov
nop
leave
jmp
sbb
incl
test
add
sbb
mov
xchg
ret
out
add
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
push
add
and
push
mov
xchg
ret
push
add
push
and
and
add
add
clc
repnz
nop
cld
jae
add
out
sbb
add
and
push
mov
xchg
ret
fiadds
mov
repnz
nop
cld
jae
popa
imul
push
out
jne
clc
repnz
nop
cld
jae
cmp
imul
nop
cld
jae
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
imul
mov
clc
repnz
nop
cld
jae
lods
add
mov
or
push
mov
nop
leave
jmp
aad
lods
test
repnz
nop
cld
jae
add
dec
mov
clc
repnz
nop
cld
jae
cmp
insl
rep
clc
repnz
nop
cld
jae
ficoms
out
jg
xchg
ja
push
push
mov
xchg
ret
jl
jle
add
aad
adc
mov
nop
nop
cld
jae
add
aad
sbbb
bound
mov
nop
leave
jmp
add
mov
or
add
repnz
nop
cld
jae
mov
xor
clc
repnz
nop
cld
jae
add
xor
in
in
push
clc
repnz
nop
cld
jae
in
add
add
and
add
dec
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
data16
imul
jmp
nop
cld
jae
add
xchg
nop
nop
cld
jae
add
add
addl
mov
and
cli
jl
clc
repnz
nop
cld
jae
add
add
shr
clc
repnz
nop
cld
jae
and
addl
in
adc
mov
clc
repnz
nop
cld
jae
incl
addb
add
imul
clc
repnz
nop
cld
jae
add
test
lods
add
mov
nop
cld
jae
push
add
add
pushl
clc
repnz
nop
cld
jae
add
add
sbb
nop
cld
jae
lret
add
cwtl
add
and
lcall
clc
repnz
nop
cld
jae
and
xor
push
mov
xchg
ret
cmp
add
cmp
add
clc
repnz
nop
cld
jae
sub
add
cmpsl
ret
pop
add
push
mov
nop
leave
jmp
fadds
add
je
js
repnz
nop
cld
jae
dec
and
movsl
cs
clc
repnz
nop
cld
jae
cld
add
add
xchg
add
nop
cld
jae
add
add
add
movsl
outsb
rol
push
mov
xchg
ret
aad
add
int3
add
sbbl
js
mov
nop
leave
jmp
insl
add
out
mov
int
add
fisubrs
aad
movswl
clc
repnz
nop
cld
jae
add
push
xchg
cmp
leave
push
mov
nop
leave
jmp
add
aaa
cmp
add
add
add
xchg
repnz
add
add
add
cmp
add
sub
into
into
inc
add
jg
mov
leave
push
mov
nop
leave
jmp
jl
addb
sbb
cmp
fidivl
add
clc
repnz
nop
cld
jae
in
imul
push
mov
sbb
dec
ja
call
add
cli
pop
add
clc
repnz
nop
cld
jae
data16
jle
add
add
mov
push
mov
nop
leave
jmp
in
addb
jne
clc
repnz
nop
cld
jae
aad
add
mov
nop
leave
jmp
add
push
add
jae
jmp
cmp
add
popa
lret
add
sbb
jb
push
mov
nop
leave
jmp
or
add
jnp
clc
repnz
nop
cld
jae
add
in
add
popa
push
or
nop
nop
cld
jae
add
mov
ret
clc
repnz
nop
cld
jae
lret
aad
push
andl
xor
nop
leave
jmp
add
add
add
int3
add
dec
cmp
repnz
nop
cld
jae
test
add
add
pop
call
clc
repnz
nop
cld
jae
xchg
mov
push
jmp
add
add
mov
scas
or
add
incl
dec
outsb
add
push
mov
nop
leave
jmp
add
add
int3
add
sub
mov
xchg
ret
insl
jg
pop
aaa
add
add
repnz
nop
cld
jae
mov
add
jbe
clc
repnz
nop
cld
jae
mov
aad
andb
test
add
andl
add
add
add
add
movsb
add
mov
ret
mov
nop
leave
jmp
add
add
add
lret
pushl
clc
repnz
nop
cld
jae
popa
es
sub
xchg
rolb
mov
pop
push
mov
nop
leave
jmp
cwtl
aad
mov
add
add
repnz
nop
cld
jae
xchg
push
jle
cltd
cmp
push
mov
nop
leave
jmp
mov
cmp
idiv
clc
repnz
nop
cld
jae
add
add
mov
add
clc
repnz
nop
cld
jae
add
cmpl
and
rep
clc
repnz
nop
cld
jae
imul
out
out
pop
push
push
mov
xchg
ret
add
add
jle
mov
add
repz
mov
imul
add
add
push
mov
xchg
ret
add
add
pop
clc
repnz
nop
cld
jae
cmp
cmp
incl
rcll
in
nop
leave
jmp
inc
or
data16
jge
cmp
repnz
nop
cld
jae
in
dec
add
add
push
mov
nop
leave
jmp
inc
add
add
add
in
sub
dec
sub
repnz
nop
cld
jae
fiadds
aad
insl
jg
les
clc
repnz
nop
cld
jae
add
xor
jge
push
push
mov
xchg
ret
add
push
add
add
int3
cmp
dec
add
clc
repnz
nop
cld
jae
add
add
jge
mov
or
add
in
add
insl
push
add
add
inc
mov
clc
repnz
nop
cld
jae
mov
enter
nop
cld
jae
lods
lods
in
add
add
movsb
cmp
push
inc
add
lret
scas
add
jl
mov
push
xchg
add
rolb
mov
pop
clc
repnz
nop
cld
jae
push
aad
imul
xor
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
add
decl
mov
push
mov
nop
leave
jmp
scas
add
lods
and
imul
nop
nop
cld
jae
fisubrs
mov
xchg
mov
clc
repnz
nop
cld
jae
add
es
dec
scas
mov
push
mov
nop
leave
jmp
add
add
je
clc
repnz
nop
cld
jae
add
add
mov
jmp
add
add
aaa
add
imul
clc
repnz
nop
cld
jae
add
dec
add
out
fisttps
nop
cld
jae
lods
inc
data16
int3
cwtl
movsl
test
clc
repnz
nop
cld
jae
out
add
addl
nop
nop
cld
jae
jge
add
sub
clc
repnz
nop
cld
jae
lret
scas
pop
dec
push
mov
xchg
ret
aaa
add
add
add
clc
repnz
nop
cld
jae
aad
es
add
mov
clc
repnz
nop
cld
jae
mov
mov
dec
mov
clc
repnz
nop
cld
jae
out
in
add
jg
cwtl
push
mulb
add
push
mov
nop
leave
jmp
add
dec
popa
cmp
add
push
clc
repnz
nop
cld
jae
add
popa
data16
add
jmp
in
push
andl
sbb
push
or
add
add
mov
add
add
repnz
nop
cld
jae
xchg
sbb
repz
pusha
push
mov
xchg
ret
add
add
incl
add
nop
nop
cld
jae
aad
push
cmp
jge
lret
push
clc
repnz
nop
cld
jae
mov
add
add
out
fsubrp
aad
add
clc
repnz
nop
cld
jae
add
add
jp
subl
jmp
add
add
fucomi
stos
push
add
clc
repnz
nop
cld
jae
add
add
out
movzwl
push
mov
nop
leave
jmp
add
inc
jle
add
mov
xchg
ret
cmp
push
xor
leave
cs
clc
repnz
nop
cld
jae
aad
add
add
push
or
movsb
clc
repnz
nop
cld
jae
add
mov
je
clc
repnz
nop
cld
jae
movsl
jle
mov
lea
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
imul
add
add
repnz
nop
cld
jae
dec
aad
cmp
add
push
mov
xchg
ret
cld
add
ficoms
repnz
nop
cld
jae
jle
movsl
add
data16
push
clc
repnz
nop
cld
jae
add
inc
xor
in
fadds
lods
mov
clc
repnz
nop
cld
jae
add
and
add
xor
outsb
je
mov
nop
leave
jmp
sub
add
repnz
nop
cld
jae
int3
out
mov
pop
xchg
cmp
test
testb
cmp
ret
dec
test
add
add
add
add
sub
repnz
nop
cld
jae
in
addb
lods
add
aaa
mov
nop
nop
cld
jae
aad
scas
sub
add
push
mov
nop
leave
jmp
add
popa
add
push
push
insl
adc
mov
mov
clc
repnz
nop
cld
jae
add
add
adc
mov
cwtl
mov
clc
repnz
nop
cld
jae
push
add
xor
add
dec
push
mov
xchg
ret
scas
int3
xor
add
add
adc
mov
clc
repnz
nop
cld
jae
add
es
aad
xchg
inc
cmp
stos
clc
repnz
nop
cld
jae
sbb
cmp
cwtl
add
mov
mov
clc
repnz
nop
cld
jae
add
out
xor
push
mov
xchg
ret
add
or
movsl
add
lods
pop
push
clc
repnz
nop
cld
jae
aaa
sub
jle
jle
mov
in
nop
leave
jmp
addl
add
pop
pop
xor
clc
repnz
nop
cld
jae
popa
scas
add
add
add
enter
clc
repnz
nop
cld
jae
push
add
cmp
nop
cld
jae
fdivrs
add
data16
adc
mov
jmp
mov
xchg
ret
add
add
pop
clc
repnz
nop
cld
jae
add
aaa
add
add
xor
add
push
mov
nop
leave
jmp
add
xchg
mov
push
jmp
add
movsl
mov
nop
add
nop
nop
cld
jae
add
ljmp
mov
push
mov
xchg
ret
add
add
or
in
nop
leave
jmp
inc
inc
cwtl
lret
in
add
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
data16
add
and
repnz
nop
cld
jae
add
push
mov
mov
push
mov
nop
leave
jmp
out
addb
cwtl
inc
add
add
add
in
mov
mov
jg
add
add
clc
repnz
nop
cld
jae
xchg
cmpb
dec
add
sub
out
clc
repnz
nop
cld
jae
out
aad
cmp
jl
lret
add
clc
repnz
nop
cld
jae
aad
add
add
ret
jmp
ficoms
in
nop
leave
jmp
dec
aaa
aad
add
dec
push
in
movswl
clc
repnz
nop
cld
jae
lret
mov
sbb
clc
repnz
nop
cld
jae
push
add
in
je
cs
push
mov
xchg
ret
add
int3
add
jl
mov
clc
repnz
nop
cld
jae
add
add
ds
clc
repnz
nop
cld
jae
aad
push
cmpb
jmp
insl
orl
add
add
aaa
addb
add
add
add
clc
repnz
nop
cld
jae
orb
add
push
mov
nop
leave
jmp
add
add
add
add
jecxz
add
popa
add
cmp
add
add
fists
in
mov
imul
add
cmp
mov
clc
add
in
nop
leave
jmp
imul
cmp
jg
inc
loopne
mov
xchg
ret
add
aam
add
jmp
add
addb
sbb
jl
add
and
clc
repnz
nop
cld
jae
add
add
cmp
push
mov
nop
leave
jmp
add
add
repnz
nop
cld
jae
popa
add
cmp
lret
clc
repnz
nop
cld
jae
mov
jge
add
int3
movzwl
clc
repnz
nop
cld
jae
add
sub
int3
les
xbegin
jae
add
pop
mov
clc
repnz
nop
cld
jae
test
add
add
popa
push
add
push
mov
nop
leave
jmp
in
jl
lret
jg
les
mov
xchg
ret
push
add
test
add
nop
nop
cld
jae
add
sub
add
add
aad
mov
clc
repnz
nop
cld
jae
add
scas
add
add
pop
push
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
addb
push
loope
push
jmp
jmp
xor
dec
push
popa
add
cmp
lret
add
add
push
mov
xchg
ret
add
add
sbb
add
cmp
insl
in
ljmp
cmp
push
add
addb
xchg
add
dec
push
clc
repnz
nop
cld
jae
popa
movsl
add
add
in
jmp
clc
repnz
nop
cld
jae
add
add
add
shr
clc
repnz
nop
cld
jae
add
aad
aad
inc
test
or
clc
repnz
nop
cld
jae
add
imul
sub
add
in
nop
leave
jmp
imul
in
push
clc
repnz
nop
cld
jae
dec
add
jge
add
clc
repnz
nop
cld
jae
add
jl
add
hlt
clc
repnz
nop
cld
jae
popa
movsl
out
lods
jne
clc
repnz
nop
cld
jae
dec
jl
cmc
xor
clc
repnz
nop
cld
jae
movsl
orb
fdivrs
inc
in
clc
repnz
nop
cld
jae
popa
jle
or
mov
mov
sub
repnz
nop
cld
jae
aad
lods
add
mov
fst
inc
add
aad
lods
add
add
out
cmpl
push
mov
xchg
ret
aad
add
add
xor
push
mov
xchg
ret
add
lret
add
cmpsb
push
jne
clc
repnz
nop
cld
jae
pop
mov
repnz
nop
cld
jae
add
add
add
popf
popl
clc
repnz
nop
cld
jae
add
add
call
nop
nop
cld
jae
add
cmp
scas
insl
jbe
mov
push
mov
xchg
ret
movsl
and
add
insb
add
clc
repnz
nop
cld
jae
int3
adc
add
dec
ss
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
inc
add
imul
into
xor
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
jle
lret
add
insl
add
add
clc
repnz
nop
cld
jae
insl
jle
les
add
loop
add
js
inc
stc
add
ljmp
mov
push
clc
repnz
nop
cld
jae
add
xchg
aaa
dec
add
clc
repnz
nop
cld
jae
add
add
or
adc
in
nop
leave
jmp
add
out
add
imul
clc
repnz
nop
cld
jae
incl
jge
fiadds
rolb
mov
nop
leave
jmp
xchg
add
jl
add
fists
repnz
nop
cld
jae
xor
add
xor
mov
push
mov
xchg
ret
add
in
add
add
test
add
clc
repnz
nop
cld
jae
lods
in
mov
mov
nop
leave
jmp
cmp
orb
mov
mov
ljmp
add
add
add
pop
push
mov
xchg
ret
sbb
in
fiadds
add
push
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
out
and
xchg
add
push
clc
repnz
nop
cld
jae
jle
incl
or
ret
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
out
add
push
dec
cmp
leave
mov
clc
repnz
nop
cld
jae
add
arpl
or
cli
inc
add
addl
movsl
add
aad
and
push
mov
xchg
ret
fisubrs
scas
lcall
in
inc
add
popa
cmp
pop
out
xor
ret
clc
repnz
nop
cld
jae
add
add
add
out
sti
clc
repnz
nop
cld
jae
lods
add
aaa
lret
mov
push
mov
nop
leave
jmp
pop
sub
push
incl
jb
mov
xchg
clc
repnz
nop
cld
jae
jg
add
mov
push
inc
mov
nop
cld
jae
add
sbb
add
mov
loop
mov
mov
popa
push
mov
nop
leave
jmp
pop
fmulp
add
hlt
loopne
mov
mov
xchg
ret
add
cld
cmp
scas
dec
jne
mov
clc
repnz
nop
cld
jae
lods
lods
cmp
add
mov
clc
repnz
nop
cld
jae
add
leave
add
clc
repnz
nop
cld
jae
aad
popaw
int3
fdivs
in
push
clc
repnz
nop
cld
jae
lods
cmp
aaa
jg
add
xlat
enter
push
mov
xchg
ret
add
scas
fiadds
pop
es
jae
pop
clc
repnz
nop
cld
jae
cwtl
add
add
call
push
mov
nop
leave
jmp
imul
clc
repnz
nop
cld
jae
add
add
add
add
mov
xchg
ret
cmp
add
add
add
pop
jmp
dec
cmp
sub
add
jl
aaa
push
add
add
adc
add
push
clc
repnz
nop
cld
jae
in
add
imul
nop
nop
cld
jae
cmp
shl
inc
add
add
jge
data16
dec
add
mov
xchg
ret
add
add
cmp
or
ljmp
nop
cld
jae
add
scas
decl
add
in
nop
leave
jmp
addl
aad
mov
clc
repnz
nop
cld
jae
add
imul
sub
repnz
nop
cld
jae
inc
push
out
test
add
repnz
nop
cld
jae
cmp
add
subb
dec
add
clc
repnz
nop
cld
jae
andb
pop
xchg
push
mov
xchg
ret
add
add
add
add
push
push
mov
xchg
ret
add
and
add
add
pop
call
in
nop
leave
jmp
jle
add
rolb
inc
pop
pop
push
mov
xchg
ret
pop
int3
add
pop
aad
add
out
mov
push
mov
xchg
ret
pop
fiadds
add
add
cmp
cli
clc
repnz
nop
cld
jae
add
and
aad
imul
sbb
add
xchg
add
addl
xchg
xchg
nop
cld
jae
add
int3
out
aaa
sbb
cmp
in
nop
leave
jmp
aaa
add
mov
testb
cmp
ret
out
jl
add
add
mov
xor
push
mov
xchg
ret
lret
add
incl
lods
xchg
rolb
and
mov
movzwl
clc
repnz
nop
cld
jae
in
add
popa
mov
clc
clc
repnz
nop
cld
jae
add
fiadds
in
nop
leave
jmp
add
cld
movsl
jle
push
mov
clc
repnz
nop
cld
jae
add
jg
jg
test
clc
repnz
nop
cld
jae
add
push
into
push
clc
repnz
nop
cld
jae
lods
out
add
aad
mov
clc
repnz
nop
cld
jae
push
add
int3
sub
clc
mov
clc
repnz
nop
cld
jae
cmp
int3
xchg
jge
add
push
mov
xchg
ret
add
add
sbb
cmp
mov
dec
add
clc
repnz
nop
cld
jae
mov
out
mov
push
pop
push
mov
xchg
ret
add
fiadds
add
aaa
lret
test
push
mov
nop
leave
jmp
mov
mov
sub
cwtl
xor
add
add
in
testb
rcrb
push
mov
nop
leave
jmp
add
add
add
mov
clc
push
mov
nop
leave
jmp
in
cmp
out
cwtl
aad
sbb
push
mov
xchg
ret
inc
aad
test
add
add
push
mov
nop
leave
jmp
or
add
in
es
enter
jb
clc
repnz
nop
cld
jae
add
add
add
test
out
clc
repnz
nop
cld
jae
and
inc
sub
adc
inc
add
mov
insl
add
data16
in
mov
clc
repnz
nop
cld
jae
aad
int3
pushw
mov
xchg
ret
cmp
xchg
add
add
add
in
nop
leave
jmp
sub
xor
add
call
push
mov
nop
leave
jmp
cwtl
add
pop
clc
repnz
nop
cld
jae
cmp
scas
scas
add
xor
mov
lea
clc
repnz
nop
cld
jae
add
scas
mov
dec
cmp
repnz
nop
cld
jae
pop
add
insl
mov
mov
and
repnz
nop
cld
jae
dec
popa
test
cmp
add
add
clc
repnz
nop
cld
jae
jmp
in
lret
add
mov
clc
repnz
nop
cld
jae
fisubs
add
imul
call
in
nop
leave
jmp
add
jbe
push
mov
nop
leave
jmp
add
jge
daa
mov
nop
nop
cld
jae
add
and
out
add
add
or
push
mov
nop
leave
jmp
aaa
add
ljmp
insl
data16
push
add
add
es
ret
pop
mov
push
mov
xchg
ret
add
popa
cwtl
add
lods
add
add
fldenv
arpl
mov
nop
leave
jmp
data16
add
and
repnz
nop
cld
jae
out
addl
cmp
fs
inc
test
cmp
add
sbb
not
clc
repnz
nop
cld
jae
add
inc
add
enter
nop
leave
jmp
add
add
ljmp
nop
cld
jae
dec
add
test
add
nop
cld
jae
add
in
add
insl
add
add
clc
repnz
nop
cld
jae
add
pop
push
mov
xchg
ret
int3
add
add
cmp
mov
push
mov
nop
leave
jmp
add
andb
enter
nop
cld
jae
add
cmp
mov
push
mov
xchg
ret
add
dec
add
push
add
fmuls
nop
cld
jae
lret
add
popa
add
clc
repnz
nop
cld
jae
fcomps
mov
xor
mov
mov
nop
leave
jmp
add
add
fidivrs
mov
nop
leave
jmp
push
lret
jle
or
cld
push
das
push
push
mov
xchg
ret
push
cmp
add
inc
add
add
clc
repnz
nop
cld
jae
push
out
add
push
push
xor
jle
xor
push
mov
nop
leave
jmp
imul
es
adc
mov
xor
or
inc
add
add
push
add
mov
nop
leave
jmp
add
jge
popa
out
sbb
lret
mov
mov
clc
repnz
nop
cld
jae
in
mov
push
and
and
jmp
add
add
aad
jl
inc
fiadds
jbe
mov
icebp
inc
add
cmp
inc
int3
add
add
clc
repnz
nop
cld
jae
cmp
add
lret
push
mov
nop
leave
jmp
add
add
push
xlat
or
lret
in
nop
leave
jmp
add
add
inc
cmp
repnz
sub
repnz
nop
cld
jae
add
dec
push
clc
repnz
nop
cld
jae
aaa
aad
scas
jge
clc
repnz
nop
cld
jae
insl
jg
add
mov
push
mov
xchg
ret
add
test
inc
mov
nop
nop
cld
jae
add
movsl
add
add
mov
inc
clc
repnz
nop
cld
jae
add
jg
mov
mov
xchg
ret
push
add
addl
add
je
clc
repnz
nop
cld
jae
int3
add
sub
mov
nop
leave
jmp
xchg
add
in
sub
push
mov
xchg
ret
add
mov
xor
mov
mov
fadds
xchg
ret
add
add
jge
push
add
cmp
pop
cmp
mov
xchg
ret
in
jl
cld
sbb
push
mov
xchg
ret
add
cmp
mov
aad
cmpsl
sahf
add
clc
repnz
nop
cld
jae
jl
push
add
add
inc
xchg
sub
jb,pt
push
mov
nop
leave
jmp
add
mov
pop
add
push
mov
xchg
ret
add
fadds
fadds
add
mov
add
add
add
inc
cvttps2pi
fwait
jmp
cmp
add
ret
fdivrl
sub
enter
add
jecxz
int3
push
add
jp
add
add
adc
push
add
es
xchg
inc
cmp
iret
mov
xor
rcll
mov
fs
int
add
mov
add
imul
cwtl
jno
fldl
lds
mov
cwtl
mov
mov
mov
inc
add
cmpsb
adc
icebp
pop
inc
rolb
mov
inc
bound
mov
mov
mov
pop
jg
add
popa
outsb
rolb
mov
add
jg
cmpsb
xchg
cmpsb
repz
rol
mov
adc
xor
mov
inc
add
pop
push
mov
jne
mov
add
push
add
inc
inc
sbb
add
lret
mov
add
mov
add
and
push
mov
fidivl
notb
lcall
add
push
push
outsb
inc
aam
lahf
popf
into
cmp
sub
imul
mov
fsts
add
xchg
std
fs
jge
cmp
mov
add
mov
stos
rolb
mov
int
add
ljmp
and
xor
inc
int
xchg
push
mov
add
mov
add
adc
mov
leave
push
lea
pop
cld
mov
xchg
mov
lock
cld
cmpsb
cmp
xchg
lcall
fidivrl
add
mov
add
adc
mov
gs
dec
mov
mov
add
jnp
in
scas
shrl
add
mov
call
mov
adc
mov
popl
xlat
neg
sbb
xchg
addl
rcrl
or
xchg
add
pop
loopne
mov
inc
das
imull
sti
test
andl
and
mov
mov
fxam
lock
paddw
rorl
xchg
push
xchg
int
sbb
jae
add
add
mov
mov
stos
mov
mov
xor
inc
movsb
mov
mov
cmc
sbb
mov
add
mov
jno
jnp
pop
daa
movsb
sbb
push
stos
and
movsb
adc
jmp
ret
jg
inc
dec
js
inc
enter
cli
ljmp
xor
movsb
int3
scas
xor
add
std
cld
jmp
mov
xor
mov
hlt
fsubp
in
lahf
repnz
pop
mov
sahf
sbb
iret
movsb
jns
push
pop
out
dec
subl
dec
dec
sti
jg
lds
cmp
add
lahf
cltd
xor
mov
mov
push
jp
imul
push
lret
jns
add
in
dec
int
sbb
push
dec
gs
or
add
sarl
lods
and
lcall
rcll
add
out
cmp
xchg
roll
add
cmpl
addr16
mov
mov
aaa
call
push
xchg
in
jbe
sbb
cmp
add
hlt
repz
mov
xlat
js
into
loope
arpl
push
orl
sub
mov
mov
xlat
add
or
cltd
in
aad
add
push
push
dec
or
mov
add
add
add
cli
ret
push
xchg
push
add
ds
xchg
adc
shr
and
mov
mov
mov
outsl
punpckldq
mov
pop
xchg
add
sub
sbb
popa
das
or
insl
loop
mov
add
sub
std
cmpsb
lods
rolb
mov
rolb
cmp
or
mov
add
mov
add
pusha
add
pop
mov
addb
int
cmpsw
nop
add
cmpsl
pop
movsl
sub
leave
pop
jbe
adc
mov
dec
andl
dec
cld
insb
popf
iret
xchg
push
jp
fstpt
or
push
sti
fcmove
jo
mov
push
mov
loop
mov
add
jae
adc
sbb
mov
add
mov
add
pop
pop
popa
inc
add
lret
decl
sub
jp
lea
xchg
mov
fistpl
cld
jbe
rol
pop
mov
add
orl
mov
add
add
lcall
popf
je
inc
add
xor
mov
cs
ret
sbb
adc
js
data16
add
mov
mov
xchg
and
add
mov
xchg
push
add
call
mov
add
mov
mov
mov
mov
xor
out
sbb
pop
enter
add
and
in
mov
or
add
mov
out
jns
xor
mov
mov
add
sbb
xor
mov
dec
fwait
pop
adc
mov
hlt
rolb
mov
loope
sbb
out
jns
jae
stc
push
mov
cmpsb
jg
push
sub
push
add
mov
fs
shrl
lcall
add
add
mov
mov
push
jno
negl
insb
in
add
add
daa
pop
jp
or
push
fwait
and
mov
pop
jp
cld
pushf
mov
nop
add
mov
fsubrp
in
mov
mov
jnp
idivb
pop
js
repz
mov
jo
mov
cmpl
jno
pop
pop
xchg
mov
push
push
jno
inc
jl
dec
mov
add
add
xchg
mov
sti
out
lods
out
jae
jne
add
andl
dec
roll
sub
pop
jae
inc
js
or
idivb
push
mov
dec
and
jb
mov
ds
add
fwait
sti
decb
mov
add
add
mov
mov
pop
adc
fidivs
outsl
fcmovnb
mov
cmp
cli
push
mov
mov
add
jg
je
pop
aam
inc
jmp
out
xlat
jbe
add
aaa
leave
mov
and
mov
mov
add
iret
dec
loop
mov
mov
add
in
das
pop
test
add
mov
add
add
lcall
movsb
mov
sub
cmpsb
jecxz
add
jmp
lcall
xchg
scas
ficoms
adc
fstpt
mov
loope
add
add
add
cmp
pop
movsb
xor
add
outsb
xchg
sub
int3
test
xor
cmp
push
add
push
sub
push
fcomip
mov
test
mov
add
adc
adc
add
cmpsl
or
xchg
mov
push
push
add
lret
aaa
dec
sbb
dec
mov
in
es
lea
dec
inc
add
pop
jge
imul
cmp
jnp
popf
and
push
push
lcall
in
add
dec
jmp
mov
stos
inc
push
gs
mov
sub
movsb
sti
and
mov
mov
mov
xor
push
mov
sub
add
mov
stc
cvttps2pi
add
test
sbb
or
icebp
sub
popf
cmp
ljmp
cmp
subl
or
mov
in
popa
and
mov
cmp
mov
cs
aas
push
mov
cmp
sti
and
mov
mov
mov
int
jbe
sbb
icebp
repnz
adc
push
enter
mov
arpl
iret
add
mov
push
jge
js
ljmp
mov
fiaddl
add
pop
inc
inc
lahf
push
jb
mov
mov
mov
add
push
out
cmp
sbb
fwait
loop
mov
add
push
xchg
popl
leave
in
push
mov
jb
mov
add
jnp
aaa
cmpsl
lea
das
adc
mov
or
insb
int
test
pop
aaa
push
es
pop
popa
imul
mov
add
add
shl
push
adc
add
inc
dec
cmp
decb
icebp
addb
test
mov
out
je
mov
mov
leave
pop
add
sub
mov
mov
cld
push
rep
ret
mov
lock
jle
inc
das
fs
mov
mov
cli
adc
jmp
repz
pop
ss
lea
popa
pusha
add
mov
iret
push
mov
mov
sti
xchg
inc
xor
mov
add
in
call
add
xlat
add
xchg
or
add
mov
hlt
hlt
aaa
xor
mov
cwtl
testl
arpl
mov
mov
add
xchg
sub
jns
mov
xor
popa
loop
mov
sub
lea
int3
push
scas
insl
test
lahf
sbb
add
cmpsb
stos
xchg
ja
aam
or
pop
rolb
sbb
out
xorl
mov
or
and
add
push
enter
add
je
bound
mov
rolb
mov
outsb
popa
fcmovnu
mov
and
mov
jae
cltd
pop
mov
add
arpl
or
icebp
clc
fadds
mov
lcall
mov
pusha
add
mov
mov
add
xchg
stos
dec
sub
mov
add
mov
fwait
enter
mov
test
pusha
add
xlat
fucom
add
insb
pop
add
add
sub
xor
pop
aaa
inc
add
mov
mov
xchg
ds
test
in
jo
mov
mov
push
jnp
mov
or
and
mov
add
jecxz
lcall
push
adc
mov
sti
pushl
jge
addb
or
loopne
mov
sbb
mov
leave
or
add
mov
add
push
or
cmp
push
aam
call
pop
xchg
popf
addr16
aas
mov
mov
cmpsb
push
add
mov
mov
out
and
mov
mov
mov
es
mov
insl
mov
sbb
add
adc
scas
sub
stos
enter
dec
pop
and
and
add
push
add
add
enter
jbe
push
iret
add
add
mov
mov
mov
adc
adc
enter
inc
addb
cld
xchg
lods
sbbl
rolb
mov
mov
in
pop
mov
addb
in
repnz
and
stc
dec
pop
xchg
int3
icebp
arpl
ljmp
sbb
imul
leave
push
xchg
into
shl
add
add
push
mov
inc
add
add
leave
fcomi
cmpsb
jl
inc
cmp
mov
mov
mov
push
adc
mov
cltd
cltd
fnstenv
decl
push
idivb
mov
add
lds
add
mov
cmc
fmull
lret
pop
jecxz
add
bound
mov
jmp
addr16
mov
dec
stos
mov
pop
sbb
dec
test
mov
push
jb
mov
les
sar
add
mov
lds
mov
sub
mov
mov
push
cmpsb
in
enter
mov
call
adc
sbb
mov
pop
add
mov
add
mov
mov
sbb
mov
jb
mov
add
scas
mov
jo
mov
enter
mov
jl
push
repnz
lahf
imul
push
call
inc
addb
filds
jne
stos
cmp
add
jo
mov
mov
or
mov
enter
movsb
sbb
cmpsb
sub
inc
add
mov
mov
aam
adc
add
add
mov
mov
int3
hlt
add
xchg
pushf
xor
aad
dec
into
iret
mov
test
out
push
outsb
dec
rorl
lock
iret
mov
ds
jecxz
loope
add
mov
mov
fs
mov
dec
cltd
pop
jbe
pop
into
mov
stos
adc
loopne
mov
es
and
clc
test
mov
push
pop
mov
mov
repnz
add
jo
mov
add
nop
add
out
mov
popa
pop
sbb
rolb
mov
or
push
and
mov
mov
mov
lahf
cs
jp
add
fwait
pop
stos
pop
and
add
push
test
ret
push
loope
scas
mov
jns
push
add
pop
xchg
ljmp
mov
add
pop
mov
push
xor
add
addb
lea
and
loope
add
orl
lods
shll
mov
iret
sbb
movsb
jmp
push
xchg
scas
idivb
add
mov
add
lcall
inc
jbe
inc
lods
out
add
mov
adc
mov
add
add
mov
xchg
pop
cltd
adc
out
mov
clc
ljmp
orl
setbe
cld
cmpl
add
add
cltd
in
add
divb
stos
inc
lods
scas
add
repnz
add
sarl
add
imul
add
pop
cltd
std
mov
mov
lret
mov
pop
mov
mov
add
xlat
add
mov
mov
ror
jbe
or
out
cmp
xchg
add
jle
jns
lods
lea
pop
inc
in
mov
dec
push
adc
sub
test
add
xor
fadds
mov
mov
add
fwait
and
rcll
add
pop
pop
jmp
xor
ja
add
ljmp
mov
or
sub
xchg
cmp
add
shrl
sbb
inc
add
cmp
dec
mov
cmpsl
xor
mov
stos
pop
push
sub
push
ret
mov
fiadds
mov
mulb
cmpsb
xor
fs
sbb
fxch
lods
jle
jge
js
push
imul
add
fiaddl
sub
popf
push
jecxz
sub
add
fisttpll
aad
mov
jnp
add
cli
rolb
fwait
stos
or
push
sub
and
mov
or
add
and
loope
xor
mov
ret
and
sbb
push
fdivrl
mov
inc
add
pop
pop
repnz
int
adc
mov
pop
aaa
sbb
sub
iret
in
sbb
lret
lods
add
add
ljmp
pusha
add
sbb
dec
insb
add
push
loop
mov
xchg
and
popa
call
ljmp
cld
push
aaa
cld
fsubrp
fadds
dec
jae
push
adc
mov
mov
mov
mov
stc
lret
push
int
push
jmp
aam
push
adc
xchg
add
mov
add
rolb
mov
je
mov
add
lds
jl
repnz
outsb
dec
jmp
test
test
mov
out
cwtl
stos
xor
mov
xchg
pop
pop
insl
add
jecxz
daa
fcomi
add
add
dec
movsb
ret
mov
lea
mov
mov
cmp
add
and
adc
add
icebp
rcll
add
mov
insl
inc
rcll
fcoml
inc
ja
push
xchg
adc
mov
add
or
mov
mov
scas
aas
jp
inc
movsb
stos
or
jl
inc
cltd
test
sub
sub
add
add
pop
jns
add
mov
rolb
mov
clc
push
add
mov
add
mov
daa
dec
cmp
cmp
add
sahf
or
aas
movsb
push
imulb
push
add
scas
scas
sub
add
ja
std
das
and
mov
jl
or
lret
loopne
mov
mov
and
cwtl
or
cltd
mov
push
add
pop
pop
jb
mov
or
xor
mov
jg
inc
add
mov
mov
addb
add
mov
pusha
add
mov
or
unpcklps
mov
mov
icebp
mov
fisubrs
add
push
jp
stos
mov
jne
mov
mov
or
rcrl
pusha
add
aaa
add
cmc
std
cmpsb
mov
ljmp
push
imul
or
gs
enter
insl
mov
cltd
inc
imul
lret
or
mov
je
push
add
jp
pop
out
js
and
mov
inc
xor
mov
or
lahf
cmp
mov
pop
pop
nop
add
push
add
add
sub
fildl
jns
add
mov
lret
leave
repnz
dec
aas
mov
mov
es
xchg
jae
jmp
mov
cmp
out
mov
jmp
mov
imul
dec
dec
add
loopne
mov
lcall
cli
cmp
inc
or
jle
xlat
mov
xor
mov
push
cltd
adc
or
jnp
push
inc
scas
cld
jg
ret
mov
lds
loope
jecxz
add
out
xor
pop
in
in
mov
int
mov
inc
add
mov
int
adcl
mov
dec
xor
or
add
insb
call
add
cmp
shll
mov
mov
cwtl
in
xor
mov
cmp
cld
lock
inc
pusha
add
cmp
adc
and
pop
adc
mov
sbb
push
add
add
push
cmp
out
xchg
fisttpl
aaa
push
cmp
cmp
test
mov
test
mov
stos
inc
add
lcall
mov
sub
push
sbb
outsb
test
xchg
xchg
in
or
mov
and
movsl
mov
or
das
repz
test
add
mov
xchg
lret
xor
mov
mov
test
fs
push
sarl
loope
mov
pop
in
in
inc
add
mov
push
jbe
gs
push
nop
add
fbld
add
fisttpll
js
add
inc
insb
addb
xor
mov
mov
mov
out
popf
test
add
lcall
in
cs
mov
mov
sbb
add
dec
mov
add
add
sbb
test
add
and
mov
add
sub
repz
mov
dec
push
lea
push
ror
xor
pushf
sub
mov
push
add
mov
nop
add
ljmp
mov
add
stos
lcall
mov
cmpsb
or
xchg
jo
mov
hlt
pop
mov
mov
add
mov
imul
add
or
fcomps
add
add
hlt
lds
push
lock
and
mov
mov
mov
jno
push
lcall
aaa
sub
popa
sbb
pop
fadds
cmc
cli
pop
sbb
sbb
cmp
adc
add
outsb
mov
cmpsb
arpl
add
hlt
dec
lcall
lcall
imul
mov
rolb
mov
cwtl
iret
pop
hlt
adcl
jg
lock
sbb
push
add
jl
inc
mov
add
jae
add
push
mov
mov
inc
add
pop
fidivs
cltd
mov
or
cmpsb
aas
sbb
xor
mov
loope
xor
add
int
mov
jno
and
mov
outsb
mov
pop
push
scas
popa
into
pop
xchg
add
adc
mov
das
mov
or
mov
and
jecxz
pop
sbb
jge
jg
xor
add
mov
mov
pushf
inc
add
shrl
pcmpeqw
outsb
cmp
stos
dec
aad
add
fdivr
xchg
icebp
and
mov
sbb
cmp
sub
and
mov
xor
mov
add
adc
mov
xor
mov
add
mov
sub
insl
mov
mov
mov
bswap
out
push
add
fbld
sub
add
add
mov
jnp
sub
pop
int3
add
mov
add
add
jmp
mov
sbb
xor
xchg
push
mov
xchg
stos
rolb
mov
add
sbb
mov
loopne,pt
mov
xchg
popf
bound
mov
stc
aas
repz
cmp
test
divl
add
add
mov
mov
push
mov
add
sub
jae
add
sbb
mov
ljmp
mov
test
fs
test
mov
ds
xor
jns
push
mov
xchg
ret
or
rolb
mov
add
insb
lock
or
mov
scas
jo
mov
cmc
imul
push
mov
cli
and
mov
std
jg
cmp
rolb
push
clc
or
nop
add
das
in
xchg
ja
xchg
sbb
frstor
idivb
jnp
data16
subl
push
dec
sbb
cmpl
loopne
mov
outsb
lcall
addb
lods
sub
cmp
sti
loopne
mov
insl
stos
adc
sub
ljmp
jmp
les
aas
xor
xor
xchg
adc
iret
push
shl
mov
add
xchg
xor
inc
add
lea
addb
ja
inc
adc
add
mov
mov
movsl
rcll
mov
fcomi
fcmovnu
or
dec
inc
add
mov
add
dec
loope
jge
mov
das
and
mov
aam
insb
or
adc
xchg
std
in
movsb
fadd
testl
add
add
pop
jnp
int3
mov
pop
scas
frstor
addl
mov
mov
mov
test
mov
mov
mov
addb
xor
mov
or
rcll
fildl
hlt
out
xchg
aaa
enter
mov
mov
mov
inc
data16
inc
nop
add
std
mov
mov
mov
xlat
lock
int3
cli
std
stc
aad
mov
mov
cmpsl
in
aaa
lcall
add
testb
dec
and
mov
inc
add
fdivr
or
or
jae
inc
cmp
inc
add
add
add
inc
call
add
mov
and
mov
jmp
insb
cmp
jle
jbe
sub
iret
test
dec
incl
out
pop
xor
mov
addb
scas
mov
adc
add
aaa
lret
sub
add
gs
and
leave
addb
hlt
and
dec
cld
add
std
push
or
add
in
out
int
xor
add
mov
mov
mov
je
bound
mov
push
inc
add
mov
push
add
shr
mov
sbb
loopne
mov
mov
mov
in
sub
push
add
hlt
xor
mov
lcall
mov
jle
jae
xor
ret
fadds
nop
add
aam
add
aaa
or
mov
aam
xchg
add
sbb
dec
add
add
fs
mov
aas
mov
sti
xchg
rolb
mov
and
addb
jb
mov
int
sbb
outsb
inc
mov
mov
xchg
add
mov
push
mov
mov
cmc
popa
in
arpl
fcomip
repnz
jnp
jb
mov
and
add
sbb
xor
shll
int3
dec
xlat
sbb
xchg
imul
sti
or
lds
and
mov
or
pop
das
call
outsb
ds
cmpl
sbb
xchg
mov
repnz
jb
mov
or
icebp
inc
fcomp
push
sbb
xchg
add
pop
sub
mov
mov
imul
add
xchg
inc
in
into
inc
outsb
lods
std
jnp
and
xor
or
iret
xchg
lea
mov
mov
push
add
jae
mov
and
mov
iret
mov
xor
push
movsb
xchg
sbbl
add
push
test
add
inc
out
iret
dec
mov
xor
mov
sti
inc
icebp
daa
inc
sbb
jl
or
cmpsl
or
movsl
xchg
mov
or
into
dec
out
popf
aaa
jae
das
adc
mov
leave
lcall
data16
sahf
movsl
out
add
add
pop
dec
loopne
mov
add
lea
imul
add
or
add
testb
bound
mov
lods
arpl
ds
add
add
xor
inc
add
add
mov
xor
push
cmp
push
inc
insb
jne
xorl
xlat
dec
sti
fstpt
ljmp
jns
sti
push
cmpsb
imull
fwait
test
add
add
jecxz
movsb
cltd
add
mov
and
inc
jne
dec
in
mov
mov
push
cwtl
mov
bound
mov
addb
in
add
mov
dec
rolb
mov
jb
mov
scas
mov
pop
pusha
add
xchg
dec
add
xchg
mov
adc
jge
test
xchg
jb
mov
adc
push
lret
fwait
sahf
mov
imul
add
or
inc
inc
mov
mov
dec
mov
mov
add
arpl
add
rolb
lods
sub
mov
mov
adc
adc
xchg
mov
add
pop
xchg
pushf
pop
pop
rolb
mov
test
lahf
aaa
jl
jae
mov
add
add
leave
adc
mov
mov
daa
jns
sbb
xor
in
or
fidivl
add
fsubl
neg
int
add
add
add
pop
loopne
mov
pop
sbb
ss
lods
pop
pop
daa
fstpt
dec
push
pop
jo,pn
mov
ja
push
loopne
mov
divl
jp
mov
rolb
mov
enter
mov
add
push
daa
idivl
das
cltd
les
mov
add
mov
mov
jo
mov
cwtl
xchg
lods
add
insl
or
lods
cmp
cwtl
cld
add
fsubrp
imull
sbb
add
jne
outsb
in
into
jo
mov
out
jmp
jne
cmc
cmp
mov
add
andl
jne
mov
cld
aaa
xchg
jge
sbb
dec
and
mov
icebp
adc
cmpl
jmp
xor
mov
js
push
out
add
mov
pop
sahf
jae
mov
mov
rcll
xor
push
inc
fwait
jge
icebp
les
add
fidivrs
mov
cld
pop
mov
or
jl
imul
cli
sti
pop
jmp
sbb
sub
add
andl
dec
inc
fsubrp
loope
add
das
pop
adc
and
mov
into
ficomps
add
in
jnp
pop
or
xor
xchg
bound
mov
iret
lcall
mov
int
inc
insb
pushf
dec
push
sti
fwait
imul
dec
arpl
fmuls
cmpsl
or
cmp
dec
fsubrp
in
mov
inc
lea
inc
arpl
mov
push
or
jne
ja
icebp
inc
notb
xor
negl
pop
add
mov
xor
mov
push
dec
cmpsl
aas
inc
orl
lock
sub
inc
add
pop
into
fsubrs
aaa
cs
cmp
lea
cmp
mov
and
mov
xor
xor
mov
stc
push
sub
mov
mov
mov
add
mov
pop
push
adc
adc
adc
mov
loope
leave
cmp
or
test
pushf
sbb
jl
idivb
mov
add
std
out
fwait
addb
cltd
xlat
cmp
push
fiadds
rolb
mov
add
pop
fcmovu
or
popf
sub
xchg
add
imul
and
loope,pt
push
mov
jl
inc
xlat
pop
inc
push
adc
mov
out
mov
dec
popf
lds
adc
mov
rolb
mov
fisttps
lcall
push
add
pop
sbb
lret
cltd
jge
rcrl
push
jbe
pusha
add
das
pop
loopne
mov
mov
in
xchg
push
jecxz
add
mov
pop
in
mov
in
mov
leave
testb
fcmovne
xchg
fists
imul
bound
mov
cmc
movsl
les
add
mov
scas
add
mov
in
lods
dec
and
xor
mov
push
out
inc
or
mov
mov
add
mov
or
sbb
pop
mov
pop
lods
addl
mov
inc
sub
pusha
add
mov
mov
mov
mov
dec
mov
lds
outsb
and
call
add
jg
add
add
inc
add
xor
fsts
cwtl
xchg
scas
cmc
ljmp
ret
stos
cmp
mov
cld
or
push
jg
cmp
adc
mov
cs
add
fisubrs
jbe
add
sbb
subl
add
push
les
add
mov
test
pop
dec
jnp
or
add
push
mov
add
add
add
mov
xor
add
adc
mov
add
pop
push
mov
lods
xchg
fadd
cmp
or
fwait
dec
sti
ljmp
mov
dec
repz
dec
loope
push
lods
ret
fdiv
jmp
add
jecxz
loopne
mov
pusha
add
mov
xor
cmp
mov
push
fs
pusha
add
loop
mov
add
mov
ss
pop
rolb
mov
pushf
outsl
add
xor
add
lods
sbb
shll
and
mov
and
lods
fidivrl
xchg
cmc
roll
loopne
mov
mov
sub
sbb
mov
mov
dec
cmpsb
jp
je
sub
jp
addr16
add
sbb
mov
fadd
and
mov
add
outsl
and
mov
jnp
push
add
mov
rolb
jp
add
add
sbb
xor
pop
daa
sub
popa
mov
ds
mov
stos
pop
loopne
mov
ret
rolb
ja
into
push
push
fcmovnu
sub
inc
mov
mov
test
ret
popa
add
sbbl
ss
add
adc
mov
bound
mov
scas
jg
notb
fimuls
ja
rorl
adc
sbb
movsl
jmp
ja
push
ret
push
lods
xor
mov
mov
test
cmpsl
out
sbb
les
jmp
mov
addr16
pop
mov
sub
test
cmc
adc
mov
sahf
daa
insl
scas
sbb
into
jns
cmp
ljmp
mov
addr16
add
hlt
push
in
add
mov
xchg
icebp
jle
lret
popa
mov
inc
and
or
addl
inc
add
cmpsb
jo
mov
cmp
jno
sbb
or
pop
inc
add
mov
xorl
add
add
mov
into
fildll
inc
add
hlt
adc
mov
cmpsb
insl
mov
cmpsl
inc
add
jg
lcall
add
add
adc
mov
dec
int3
ds
sbb
jp
movsl
pop
mov
mov
xchg
out
ret
pop
dec
pop
ret
inc
loop
mov
ljmp
add
repnz
cmp
jne
add
fldl
es
call
addb
pop
gs
pop
imul
or
lods
outsb
insb
test
sbb
icebp
jns
mov
adc
sub
jne
push
insl
sub
mov
add
loop
mov
xchg
dec
insl
fwait
lcall
sbb
and
mov
jle
pop
out
add
mov
mov
test
popf
push
jge
add
mov
mov
cli
and
mov
jo
mov
xchg
call
iret
test
fnstsw
lcall
iret
push
xor
mov
jbe
and
mov
dec
push
add
jnp
add
mov
sub
cwtl
cmpsl
cmp
and
mov
lea
jmp
pushf
hlt
mov
iret
fists
clc
loopne
mov
notb
outsl
cltd
leave
push
lret
js
pop
pop
xor
mov
push
dec
aaa
pop
dec
cmp
insl
loop
mov
dec
fldt
sub
addr16
je
push
jge
lds
add
add
adc
cmp
lods
shll
add
ds
add
mov
mov
mov
and
cmp
lcall
pop
repnz
add
mov
sbb
jle
das
mov
into
hlt
push
movsl
dec
rolb
mov
or
cwtl
jmp
inc
ja
imul
int
inc
lret
add
lods
incb
popa
lret
jg
cld
sub
jae
and
sub
imulb
sbb
mov
imul
cmp
add
pop
enter
repz
mov
or
pop
push
xor
je
sahf
add
push
arpl
jge
mov
arpl
lock
xchg
repz
mov
push
fidivs
iret
call
jne
test
insb
sub
add
aas
cmp
stos
jp
cltd
inc
add
addb
mov
mov
add
dec
adc
add
stc
push
add
mov
in
sub
rolb
mov
repz
mov
mov
repnz
mov
insb
cmp
enter
inc
add
mov
jno
in
jns
mov
mov
jae
in
or
push
add
lods
mov
xlat
cltd
icebp
cmpsl
inc
add
lahf
je
sbb
add
mov
xchg
jb
mov
push
cmc
xchg
cs
push
stos
ret
and
mov
out
pop
test
jge
adc
mov
jae
add
adc
add
int3
adc
lcall
jne
jp
fistps
pusha
add
add
adc
add
inc
stc
rol
mov
sub
sbb
mov
mov
xorl
add
dec
scas
sub
repz
fwait
lcall
mov
mov
mov
xor
inc
xor
and
js
add
add
inc
cmp
push
add
in
pop
or
add
in
add
movsb
adcl
add
cli
adc
icebp
sti
jecxz
add
cmp
lret
inc
rorl
adc
in
pop
jne
insl
daa
notl
dec
jns
pop
push
xchg
jnp
inc
xchg
movsb
adc
add
add
out
and
mov
test
scas
inc
add
insl
mov
sbb
xchg
insl
call
mov
pop
adc
sahf
aaa
push
add
adc
mov
into
in
jnp
repnz
push
or
pop
mov
dec
scas
test
pop
stc
and
cltd
mov
adcl
into
inc
lret
cli
xor
mov
sbb
add
xchg
insl
or
xchg
add
jb
mov
cmp
sub
and
int3
inc
into
pop
jb
mov
stos
je
je
sbb
dec
sub
add
xor
cmp
add
jp
jmp
outsl
addb
rolb
inc
sti
loope
stc
repz
aam
sbb
stc
out
jmp
daa
cmp
addr16
jmp
add
sahf
aad
nop
add
fwait
pusha
add
and
jne
cmp
xchg
add
add
mov
mov
add
push
sub
mov
daa
mov
gs
fiaddl
lcall
mov
pushfw
and
or
adc
pop
push
adc
dec
cmc
mov
mov
add
xor
ja
push
inc
inc
sahf
aad
mov
adc
add
add
add
rolb
mov
add
movsl
lods
shl
adc
mov
add
fwait
addb
lahf
cld
dec
enter
fnstenv
cs
in
fcoml
pop
mov
xor
add
jecxz
pop
in
and
mov
call
xchg
pmaddwd
add
test
pop
hlt
add
mov
addr16
adc
dec
in
ret
mov
lock
repz
iret
cmp
add
sub
add
leave
inc
jge
add
pop
push
ret
jecxz
js
dec
mov
xchg
xor
mov
mov
add
sub
movsb
adc
mov
out
jns
add
into
pop
test
mov
add
das
adc
mov
inc
fsubrs
mov
mov
adc
lret
jnp
iret
cli
jl
add
lea
inc
mov
lea
pop
int3
repz
jae
inc
add
lret
mov
mov
mov
sbb
jl
imul
jg
pop
pop
pop
int3
dec
adc
gs
lods
mov
stc
out
and
adc
mov
jns
and
fcoml
add
mov
add
add
mov
lock
mov
or
lahf
stos
aaa
sub
mov
sti
mov
pop
aam
movsl
pop
nop
add
adc
mov
adc
ja
clc
push
and
mov
mov
inc
stos
mov
scas
mov
ljmp
adc
add
dec
mov
mov
mov
mov
das
jae
cld
inc
sbb
add
add
lods
lahf
movsb
leave
das
push
cmp
mov
mov
mov
repz
cwtl
rorl
push
inc
rolb
mov
nop
add
mov
cmc
mov
or
add
fwait
std
and
pop
pushf
jb
mov
add
pop
fisubrl
aad
dec
xchg
hlt
out
inc
ffreep
add
pop
fsubs
jns
lods
dec
loop
mov
add
pop
jno
fcmovu
mov
mov
push
inc
mov
mov
data16
in
add
cmp
addb
out
data16
and
divb
dec
push
rolb
mov
or
in
xchg
int3
push
ds
lods
mov
mov
mov
testb
rcll
andl
popa
pop
cmp
pushf
pop
mov
js
xchg
mov
mov
jmp
in
in
push
mov
loopne
mov
add
mov
push
insl
fs
or
mov
movsb
push
cltd
shll
ljmp
pop
lods
or
sahf
sbb
cli
dec
push
ss
add
add
and
insb
dec
stos
xor
mov
pusha
add
adc
mov
dec
sbb
jbe
ret
sub
mov
les
subl
add
scas
or
mov
mov
xor
lods
enter
add
cmp
mulb
mov
add
shll
mov
or
push
xchg
mov
mov
push
mov
lock
jecxz
rcll
add
dec
sbb
add
mov
push
add
inc
mov
xchg
cli
rolb
mov
leave
add
or
add
mov
add
hlt
aam
add
sub
dec
dec
fiaddl
daa
or
in
xor
mov
add
mov
das
loop
mov
xor
pop
scas
nop
add
sti
mov
sbb
xor
mov
mov
jp
add
add
mov
push
add
lods
pop
sub
add
add
dec
lea
push
add
add
sahf
push
xor
push
popf
lods
cmp
outsl
cltd
adc
dec
pop
mov
or
cmp
hlt
or
stos
popa
xchg
push
insb
lds
fsubrs
mov
add
jp
and
mov
mov
cmp
add
mov
idiv
sbb
es
push
xchg
jne
jns
xchg
fwait
mov
and
lds
loope
insb
out
es
mov
add
add
add
mov
cli
das
aam
cmpsl
xor
push
dec
enter
xchg
lret
add
mov
mov
scas
push
add
lret
xchg
adc
mov
cmc
lahf
aaa
mov
faddp
mov
add
xchg
fucomi
mov
mov
cld
pop
sub
lret
jne
imul
mov
mov
test
add
mov
mov
lods
pop
mov
mov
inc
ja
pop
lods
loopne
mov
sub
les
mov
jne
into
or
push
xchg
sbb
leave
sbb
jae
cmp
add
imul
jecxz
mov
inc
stos
sbb
jmp
arpl
mov
fcompl
jp
daa
mov
mov
cmc
int3
testb
pop
fst
ljmp
addb
stos
fistpl
sbb
or
jno
fs
jns
xchg
stc
mov
push
push
sub
and
mov
mov
xor
mov
fucomip
adc
mov
fs
outsl
add
mov
pop
test
in
inc
add
jb
mov
sub
scas
je
and
jno
gs
rolb
mov
add
pop
arpl
xlat
cmpsb
les
xchg
push
call
add
inc
or
ss
mov
jge
icebp
fnstenv
mov
lds
add
dec
outsb
and
mov
add
and
mov
sbb
jg
mov
and
mov
inc
mov
push
add
mov
sbb
fwait
ss
pop
pop
aas
pop
adc
testb
mov
mov
cmp
push
je
pop
leave
dec
mov
and
mov
push
add
mov
loop
mov
sub
mov
mov
jge
add
mov
pusha
add
sti
cmc
divb
xor
mov
movsb
aas
fs
push
lret
push
lds
cmp
dec
lea
add
xchg
inc
push
int3
jae
test
test
inc
ljmp
xchg
jae
pop
cmp
and
or
push
and
out
push
add
jmp
add
xlat
pop
divb
add
add
add
lahf
ja
xchg
js
notb
test
int
pusha
add
mov
xor
jo
mov
icebp
inc
add
sbb
scas
imul
ljmp
jne
add
xchg
inc
mov
fstps
xor
add
fimuls
add
xor
mov
add
pusha
add
add
jmp
stos
insl
sub
pop
xchg
dec
outsl
inc
push
add
dec
cs
add
inc
add
mov
int
stos
inc
mov
sbb
fldcw
mov
mov
shrl
mov
add
or
mov
insb
ret
mov
mov
adc
mov
jp
xchg
inc
fildl
mov
pop
ret
addb
js
data16
add
popa
or
add
lcall
jg
add
test
and
dec
mov
scas
ja
xor
dec
outsb
in
add
cmpsl
dec
mov
mov
push
add
mov
push
cmp
mov
mov
add
insb
pushl
jg
mov
shr
aam
rorl
mov
add
mov
lret
mov
or
xchg
insb
or
test
aam
xor
lods
aas
sahf
sahf
addl
movsl
adc
mov
mov
out
push
out
cmpsl
rolb
mov
push
adc
mov
sbb
in
popa
add
and
mov
push
add
jl
ds
lods
adc
cmc
dec
rolb
jbe
mov
mov
xchg
xor
jnp
fwait
imul
jmp
aas
lds
mov
inc
out
addr16
sti
xchg
mov
mov
mov
cld
lahf
fcomip
mov
sub
xor
cwtl
icebp
icebp
cli
dec
imull
add
mov
pop
test
inc
addb
mov
mov
lds
jg
push
add
std
xlat
adc
mov
int
out
mov
test
addb
ret
fisttpll
lea
mov
inc
aaa
rcrl
add
rolb
mov
mov
add
xchg
mov
mov
mov
mov
or
clc
imul
mov
cmp
add
add
mov
mov
xor
mov
mov
add
add
imul
xchg
mov
mov
dec
clc
or
add
in
jmp
xor
mov
into
xchg
lods
test
pop
pop
in
mov
sbb
push
fisttps
shl
mov
push
dec
xchg
add
in
dec
add
lods
adc
mov
pusha
add
sub
mov
mov
adc
and
dec
mov
dec
scas
inc
movsl
inc
add
add
add
ret
test
in
jns
mov
mov
outsl
stos
push
add
in
add
or
mov
mov
mov
cmp
cmp
mull
mov
cmp
fsubrl
add
add
adc
mov
adc
sub
fildll
pop
cmpsb
popf
gs
add
mov
stc
sbb
push
push
mov
add
mov
add
mov
push
je
jno
add
inc
inc
add
test
jns
lods
xchg
nop
add
push
ja
repz
mov
psubw
mov
jg
popf
xchg
jae
add
mov
bound
mov
dec
mov
add
add
jl
jg
sbbl
sub
jnp
insl
pop
push
sub
add
mov
repnz
outsb
sbb
mov
ljmp
xrelease
pop
mov
xor
mov
add
sbb
push
add
cli
addb
add
lcall
dec
dec
pop
mov
add
adc
mov
fildl
cli
xchg
fwait
sahf
es
fstps
std
mov
shr
add
lock
xchg
cmp
add
pusha
add
add
mov
mov
or
adc
lock
push
repz
mov
inc
pop
or
add
mov
sbb
dec
outsb
or
mov
dec
sub
testb
gs
popf
push
and
mov
adc
ret
xor
mov
mov
xchg
add
dec
mov
iret
in
push
xor
dec
adc
je
cltd
aaa
ds
mov
adc
mov
ret
rolb
mov
jbe
cmovno
ud0
jg
insb
pusha
add
insl
das
hlt
cmp
and
mov
in
xchg
pop
add
mov
add
mov
pop
mov
dec
xlat
jle
pushf
rolb
add
mov
dec
cmc
cli
and
add
mov
xchg
cmpsb
xor
mov
jge
push
pusha
add
dec
cmp
xchg
mov
xor
mov
xlat
xor
pop
scas
addr16
movsb
jge
mov
lea
popa
adc
push
mov
xchg
daa
pop
xor
sub
loope
dec
mov
add
sub
test
add
add
add
cld
and
mov
aaa
aas
mov
test
sub
add
mov
push
and
add
add
in
push
adc
cmp
and
mov
mov
sti
and
mov
xchg
rolb
mov
lods
leave
inc
add
pop
rolb
mov
nop
add
mov
stc
adc
mov
enter
adc
push
adc
addr16
add
jo
mov
jmp
cmpsb
mov
xchg
mov
fdivrs
mov
or
and
inc
cld
add
mov
out
das
js
data16
sub
lret
imul
mov
mov
mov
enter
adc
test
cltd
movsl
les
mov
jae
fstl
mov
btr
add
and
or
test
aad
iret
dec
mov
sti
jp
cmp
out
jb
mov
fucomi
rolb
mov
inc
outsb
dec
pop
jp
lea
sub
add
ss
pop
outsl
and
adc
push
movsl
fists
sub
lcall
dec
and
mov
fdivr
xchg
mov
push
ret
rolb
push
ss
add
mov
mov
xchg
frstor
add
mov
jbe
and
insb
push
div
jmp
test
add
bound
mov
dec
lahf
xor
mov
enter
in
add
out
dec
aaa
mov
pop
xlat
and
or
add
iret
xchg
addl
lods
js
sbb
jne
or
insb
mov
or
inc
add
popf
leave
popf
xor
lods
jecxz
push
stos
pushf
xor
add
fwait
jge
out
add
sub
xor
std
daa
adc
iret
pop
inc
push
jmp
imul
xor
mov
xchg
jbe
outsb
stc
cmp
add
add
mov
push
sub
xor
jg
lret
loop
mov
das
mov
mov
aam
mov
add
in
bound
mov
jge
mov
push
add
int3
pop
adc
mov
fcomps
cmp
add
repnz
add
mov
out
in
xor
mov
std
aaa
fs
jmp
mov
mul
cmp
lds
add
sbb
dec
mov
sub
mov
jge
das
faddl
mov
in
mov
jae
pop
dec
imul
mov
bound
mov
enter
cmpsb
push
lahf
lret
lods
nop
add
add
pusha
add
add
mov
cwtl
repnz
pop
cwtl
out
fs
add
jb
mov
out
push
call
or
into
add
loopne
mov
in
fwait
lods
sbb
add
fildll
xor
mov
xchg
xor
mov
pop
sbb
mov
jp
repz
xchg
xchg
rolb
mov
leave
pop
xchg
jae
test
cli
enter
out
jo
mov
and
mov
mov
pop
repnz
mov
js
push
jg
and
les
mov
add
mov
loope
shrl
add
rolb
mov
or
mov
fs
arpl
ljmp
add
push
inc
inc
mov
push
sub
add
sti
dec
cld
in
pop
lcall
sbb
mov
add
cltd
xor
mov
dec
jbe
jmp
insb
rolb
mov
push
incl
sub
or
mov
or
loopne
mov
or
imul
mov
push
add
sbb
clc
std
mov
mov
out
and
les
scas
pop
aad
aaa
testb
sahf
or
add
js
mov
xchg
lods
nop
add
ud1
add
add
jp
add
xchg
mov
mov
inc
mov
fsubp
ljmp
js
xchg
pop
outsb
mov
sbb
cld
cmp
jmp
xchg
sbb
mov
mov
add
loope
mov
add
add
mov
mov
add
mov
add
add
mov
mov
mov
mov
or
sub
add
pop
push
ret
shll
jbe
pop
out
fldcw
jl
and
test
add
mov
xchg
rcll
xchg
push
mov
sbb
mov
sub
add
add
push
sub
xor
mov
mov
pop
iret
cmp
add
addr16
add
dec
scas
cli
xchg
fucomp
dec
add
mov
stos
outsl
mov
movsb
addl
jl
inc
cmc
sub
mov
dec
mov
add
repnz
pop
orl
add
add
adc
lcall
xorl
lods
cwtl
xchg
add
mov
inc
mov
mov
xor
mov
adc
mov
add
scas
dec
mov
mov
add
mov
add
mov
addb
lds
out
dec
xchg
add
insl
dec
adc
add
mov
mov
dec
addr16
lret
gs
jbe
sar
xchg
push
mov
inc
add
mov
andl
cmpsl
mov
data16
addb
fists
aaa
dec
cmpsl
fildll
in
ret
aaa
cwtl
aad
ret
mov
mov
pop
lods
data16
gs
push
xlat
scas
sub
mov
ret
or
addb
aas
adc
mov
mov
add
lods
inc
add
xchg
add
mov
fimull
mov
xlat
inc
lods
jb
mov
jl
scas
int3
outsl
call
call
loop
mov
out
mov
clc
pop
sarl
pop
loope
add
popa
loop
mov
xor
mov
add
cmp
sub
aas
jno
inc
cmpl
xor
mov
mov
mov
hlt
mov
cltd
imul
xchg
add
enter
fcompl
add
movsl
idivb
push
lods
enter
setb
mov
and
mov
outsl
pop
mov
add
mov
inc
add
lock
jmp
and
adc
imul
arpl
popf
inc
mov
xchg
jb
mov
mov
xor
mov
dec
imul
mov
add
mov
scas
stos
pop
popa
inc
mov
xchg
and
mov
sbb
and
xchg
dec
lea
out
mov
int
sub
jae
add
leave
xor
xor
ljmp
xor
ret
scas
xchg
add
lock
dec
lods
loope
sbb
mov
testb
add
or
lods
ss
call
mov
xchg
add
add
popa
sub
mov
mov
xor
mov
push
xchg
dec
xchg
adc
mov
add
add
inc
mov
push
stos
sub
xchg
inc
addb
add
mov
aam
add
add
pop
adc
lods
add
leave
pop
jb
mov
rolb
jne
ficoml
pop
cmpsb
je
mov
out
insb
scas
cwtl
pop
stos
leave
ret
dec
fisttpll
sbb
add
xor
and
loope
repz
cli
fmuls
inc
lock
pop
push
lcall
or
test
test
mov
inc
pop
mov
mov
mov
cltd
jb
mov
pop
aad
test
js
adc
out
mov
out
mov
jo
mov
add
inc
add
std
addb
ja
adc
jg
movsl
stos
sbb
stc
and
add
clc
jno
pop
rolb
mov
loop
mov
jle
lods
bound
mov
inc
xchg
cld
push
shrl
inc
outsl
mov
mov
out
dec
cmc
in
movsl
cmpsl
inc
add
lcall
fisttpl
add
add
push
adc
les
ds
and
leave
test
mov
add
imul
add
mov
mov
stc
rolb
mov
ja
rcll
lods
scas
mov
add
inc
lods
mov
push
pop
jnp
push
add
mov
add
mov
cmpl
mov
xor
add
cli
sub
xchg
push
mov
popa
mov
or
push
sbb
fs
cmc
cltd
xchg
sarl
ss
aas
outsl
inc
add
fwait
in
insl
and
mov
idivl
mov
sarl
js
add
add
mov
dec
aad
mov
fbld
mov
mov
xchg
add
daa
sbb
stos
pop
xor
push
mov
out
icebp
rorl
mov
xchg
inc
jo
mov
mov
clc
dec
inc
aas
mov
push
pop
imul
pop
cwtl
push
push
andl
fidivrs
add
insl
inc
xchg
inc
add
lock
pusha
add
dec
jl
jno
add
outsl
clc
pop
mov
pushfw
jge
jge
cld
xor
add
mov
mov
lods
dec
jmp
addb
sub
sbb
mov
add
cmc
fiaddl
fisttpl
pop
stos
and
jecxz
mov
jle
add
fcoms
out
mov
mov
addb
jecxz
ffreep
clc
cmpsl
divl
mov
dec
insl
mov
add
mov
fwait
xor
insl
cmc
call
push
xor
or
clc
insl
dec
jbe
push
jo
mov
adc
ss
push
and
add
or
add
or
pop
ret
loopne
mov
jbe
mov
jno
filds
addr16
out
xchg
hlt
mov
add
jle
jl
jmp
mov
jo
mov
in
dec
cld
in
mov
rolb
mov
adc
jecxz
js
add
popa
fcmovnu
gs
add
jbe
ds
mov
decb
fistl
add
daa
adc
mov
sbb
sub
sub
dec
fs
dec
movsl
lahf
aaa
ret
addb
adc
mov
popa
xchg
outsl
fs
push
xlat
les
dec
inc
mov
rolb
popf
pop
mov
in
aaa
cmpsb
add
cwtl
stos
fwait
bound
mov
mov
add
xchg
add
add
and
mov
sti
pushf
cld
cld
dec
into
outsb
push
test
mov
out
push
cld
stos
xchg
lret
inc
xchg
sub
ret
mov
xor
mov
loop
mov
iret
ja
push
fists
and
jne
add
rcrl
or
xor
and
mov
icebp
popa
cmpsb
xchg
dec
pop
aam
clc
jmp
jns
push
and
add
dec
xor
aas
mov
push
sti
cmpsl
sti
inc
add
mov
cmp
ret
ds
adc
mov
je
mov
cwtl
adc
mov
lret
inc
fwait
mov
xor
mov
enter
rolb
addb
insl
push
add
jbe
imul
nop
add
jmp
dec
adc
pop
add
das
lret
add
test
pop
cs
xchg
and
dec
shll
ret
js
cvtps2pd
daa
into
dec
jnp
push
adc
mov
adc
loopne
mov
aaa
imul
push
dec
xchg
or
mov
add
push
jecxz
sbb
mov
pop
hlt
into
cmc
xchg
cli
jbe
add
jbe
add
mov
imul
or
ret
xchg
or
adc
pusha
add
call
ficoms
cmpsb
push
fidivl
push
add
cld
pop
pop
cwtl
mov
xorl
push
mov
mov
decb
xchg
xchg
ljmp
add
mov
mov
mov
inc
add
jb
mov
out
push
ds
rcll
dec
loop
mov
add
mov
add
icebp
adc
add
add
mov
inc
add
add
sub
cli
lret
lods
and
mov
lods
mull
dec
dec
pop
push
push
aaa
ljmp
xchg
js
and
jg
jo
mov
xor
mov
imul
aam
add
xor
stos
push
add
popa
jns
sbb
call
sbb
pop
mov
dec
pop
xchg
int
std
leave
pop
xor
mov
and
fdivr
jae
push
dec
arpl
test
add
inc
mov
ljmp
mov
mov
jg
cli
out
icebp
xor
adc
scas
xchg
pop
outsl
adc
jecxz
enter
mov
ljmp
pop
ret
or
add
mov
xchg
loopne
mov
add
xor
loope
bound
mov
and
mov
cmpsb
push
and
mov
sub
dec
mov
sbb
ret
mov
mov
push
fisttpll
dec
xchg
add
movhps
das
mov
mov
add
int3
fldt
dec
int
fdivrl
ret
xchg
lds
jb
mov
mov
mov
jecxz
incb
pop
idivl
fmuls
push
mov
mov
add
adc
mov
scas
push
insl
or
add
jb
mov
mov
aas
and
mov
add
mov
mov
or
flds
push
push
cmp
add
pop
inc
enter
add
aaa
fsubl
cmpsl
mov
xor
test
icebp
or
pop
inc
pop
out
cs
add
lods
adc
mov
add
lods
push
add
inc
jmp
add
stos
lahf
in
cwtl
test
add
or
pop
push
add
add
mov
mov
lret
data16
mov
cmc
lret
out
xchg
test
add
sub
add
mov
sarl
bound
mov
add
push
add
pop
xor
add
inc
add
dec
add
mov
xlat
push
out
jle
add
pop
enter
add
mov
push
outsl
xlat
cmp
mov
test
mov
ret
mov
mov
add
mov
imul
mov
or
mov
mov
jnp
mov
aas
jmp
and
mov
cmp
xchg
adc
dec
xor
mov
dec
in
add
sbb
xchg
pop
stc
inc
add
jg
push
mov
add
push
push
adc
loopnew
mov
xlat
inc
sbb
xchg
add
mov
pop
push
add
fiaddl
mov
add
pusha
add
loop
mov
xor
enter
mov
fisubrs
dec
test
add
aad
or
or
mov
ja
or
mov
out
es
dec
xchg
nop
add
adc
ret
dec
mov
out
pusha
add
and
mov
xor
aaa
add
xor
pop
cmp
jnp
sbb
pop
ret
std
lods
lods
adc
mov
adc
add
addb
sub
dec
ds
or
adc
loope
aas
xchg
mov
mov
movsb
cmp
or
mov
push
push
add
mov
cwtl
pop
int
pop
dec
outsb
sbb
stos
jp
lcall
cmp
out
fistps
push
jno
aaa
scas
or
adc
popf
movsb
mov
inc
lret
fs
add
add
add
or
fisubs
mov
and
cmp
lods
out
fistl
pop
cwtl
adc
lret
call
cmc
mov
shrl
aas
pushf
xchg
sub
mov
add
ret
sbb
mov
inc
mov
iret
fiadds
inc
mov
add
mov
add
jne
cmp
lock
and
mov
cli
out
xor
add
mov
jecxz
add
mov
sub
mov
mov
hlt
cltd
imul
adc
mov
mov
data16
scas
push
add
mov
add
add
movsb
scas
mov
sahf
cmp
aad
das
jl
mov
das
lods
fldenv
into
mov
hlt
iret
push
into
push
mov
ret
rolb
popf
jmp
js
or
add
int
cmp
in
ja
mov
mov
nop
add
mov
mov
mov
je
adcl
incb
add
add
mov
jmp
cmpl
leave
dec
and
xlat
rorl
stc
test
lahf
inc
add
mov
and
add
mov
mov
dec
cmp
mov
add
in
push
idivl
lods
cmc
mull
lcall
gs
xor
mov
into
addb
shrl
cmp
push
mov
mov
stos
scas
jae
add
add
gs
mov
test
call
and
vrcpss
call
dec
fsubs
in
addb
lahf
add
arpl
mov
sub
dec
lret
jnp
add
mov
lcall
add
mov
add
lahf
loopne
mov
mov
mov
push
cmc
mov
and
jl
pop
lcall
add
adc
stos
mov
mov
stos
adc
mov
push
fiaddl
mov
inc
or
adc
adc
sbb
enter
or
sbb
mov
mov
xchg
inc
cmp
xor
mov
push
into
out
add
outsb
inc
stos
in
adc
sub
out
cs
jg
add
jae
repz
xchg
add
mov
mov
push
fwait
jg
fcomps
insl
jp
xor
mov
mov
cwtl
insl
in
fwait
push
sbb
adc
jecxz
insb
ss
and
mulb
or
addb
cmp
push
xor
add
clc
fsts
stc
adc
mov
adc
pusha
add
call
add
inc
xor
inc
add
mov
mov
push
addb
mov
movsl
clc
mov
insb
pop
idivb
mov
mov
push
mov
xchg
cmp
addb
mov
mov
mov
add
ret
and
mov
jbe
cmp
sub
ljmp
repnz
add
daa
pushf
lea
mov
add
mov
addl
mov
mov
cmp
negb
movsl
adc
mov
mov
add
jle
in
add
mov
fmull
and
mov
mov
mov
dec
ret
sbb
add
mov
mov
xor
sub
sbb
aam
or
xor
mov
cmpsb
inc
add
mov
xchg
mov
mov
mov
les
jl
adc
mov
xchg
and
inc
add
js
subl
ss
rcrl
lret
mov
cmp
mov
dec
pushf
add
mov
cmp
roll
add
pop
outsb
pop
sbb
add
jg,pt
jl
dec
divl
aas
addb
outsl
cmp
sub
out
lea
xchg
fwait
imulb
cmpsl
repnz
push
iret
sub
faddl
mov
add
out
aas
push
add
mov
add
mov
loop
mov
xchg
cmp
mov
imul
adc
inc
clc
mov
cmc
movsb
mov
mov
pop
lock
add
outsl
lods
std
cmpsb
int3
insb
cmc
daa
sti
repnz
fsubrs
lea
addr16
outsb
sbb
lock
jnp
add
cwtl
mov
in
ds
ja
add
add
xor
mov
mov
dec
pop
inc
add
add
mov
push
sbb
and
pop
ds
and
xchg
xchg
xchg
imul
adc
mov
cmc
ss
lcall
add
xchg
inc
xchg
add
movsb
mov
add
mov
or
outsb
push
add
cmp
cmp
cmp
xchg
test
mov
jmp
dec
push
stos
and
add
push
jl
lods
mov
mov
mov
mov
pop
out
ret
inc
outsl
insl
in
inc
add
sbb
add
lods
call
add
jecxz
push
rolb
add
mov
inc
out
add
imul
mov
mov
pop
jns
rcrl
jae
dec
or
iret
sub
rolb
mov
mov
mov
mov
inc
jae
mov
icebp
je
dec
in
lds
mov
adc
mov
out
dec
pop
dec
pop
idivb
sub
jnp
cld
push
add
sub
mov
rcrl
cmp
xor
mov
aam
add
and
add
or
cs
add
add
sbb
std
inc
add
aam
mov
mov
std
push
add
mov
xor
mov
in
inc
add
clc
rolb
mov
lret
pop
lock
mov
mov
add
mov
call
cmp
adc
fs
pop
xchg
out
and
mov
xlat
fdiv
and
add
push
add
add
add
mov
std
addr16
in
fs
sbb
jb
mov
in
mov
aad
icebp
inc
add
mov
cmpsb
sti
jmp
add
inc
div
loopne
mov
inc
mov
dec
pop
xchg
pop
or
enter
mov
pop
inc
add
add
mov
and
nop
add
in
daa
cmpsb
pop
jbe
push
jns
neg
xor
add
imul
sbb
mov
add
sub
add
sbb
cmp
add
mov
fsubr
cmp
cmpsl
mov
roll
mov
dec
ds
mov
xor
test
es
mov
mov
xchg
push
mov
mov
lds
test
xor
pop
sub
xorl
fstl
add
das
mov
pushf
push
dec
insb
jb
mov
or
pop
scas
negl
mov
push
lea
add
add
scas
pushf
adc
ds
mov
or
mov
adc
add
add
iret
outsl
int3
xor
mov
add
or
insl
rsm
enter
dec
imul
inc
lret
push
jae
into
jns
sub
mov
sub
mov
sub
dec
jl
push
and
fmull
aam
pop
sub
jecxz
adc
mov
mov
add
add
aaa
iret
outsl
cmp
sbb
mov
mov
mov
mov
sbb
lods
les
xlat
hlt
mov
jl
xchg
ret
push
icebp
jae
sub
push
call
iret
stos
cli
mov
add
and
lock
mov
mov
sbb
lods
shrl
clc
mov
mov
mov
cmp
pop
je
jo
mov
stc
adc
mov
add
mov
inc
add
imul
mov
mov
fwait
sti
das
dec
jbe
pop
mov
mov
repnz
add
mov
mov
mov
xchg
imul
clc
jns
xor
mov
mov
xchg
lds
dec
js
add
fimull
mov
cltd
mov
or
xchg
mov
hlt
xor
mov
add
xor
mov
ja
dec
test
jne
and
es
mov
psubsw
ja
arpl
mov
jle
pop
pop
inc
add
or
sub
xchg
add
or
aad
jb
mov
fsub
add
xchg
add
mov
in
push
cmp
inc
rcrl
lcall
lret
aas
paddsb
ret
out
loope
dec
mov
icebp
test
pop
addb
push
test
popa
or
dec
fidivl
add
add
aaa
mov
shll
mov
mov
dec
pop
lcall
mov
cmp
bound
mov
or
cmpsl
dec
clc
out
sub
fimuls
mov
cli
push
cmpsb
jp
add
js
pop
xchg
push
xchg
div
pop
cmp
xchg
or
add
ficomps
mov
arpl
mov
mov
add
and
mov
dec
push
es
xchg
int
outsb
push
add
add
es
divb
test
or
push
add
add
stos
test
int3
popf
xchg
data16
pslld
mov
add
sub
fisubrs
xor
add
mov
add
mov
sbb
lds
pop
jecxz
mov
mov
jg
add
xor
in
and
xlat
in
mov
sub
pop
or
dec
mov
add
jle
inc
es
ret
add
mov
sub
mov
sbb
stos
mov
add
pop
out
add
dec
cs
mov
mov
pop
xor
hlt
cmp
sbb
nop
add
inc
pop
in
rcll
shrl
push
pop
xchg
push
mov
pushf
inc
lods
inc
loop
mov
aad
aam
or
das
push
movsb
out
call
or
dec
es
sub
mov
mov
adc
fildll
and
xchg
rol
mov
adc
xchg
gs
or
orl
add
pusha
add
mov
add
push
add
mov
push
sbb
sbb
cs
dec
sahf
pop
or
xchg
add
loope
gs
loope
fs
adc
adc
push
push
xchg
addr16
roll
mov
call
lods
in
sbb
pop
rolb
xchg
loope
mov
mov
add
ljmp
mov
repz
add
outsl
push
push
adc
push
jbe
cmp
int3
xchg
add
mov
scas
push
add
mov
into
and
mov
repz
imul
fmuls
addb
cmp
mov
out
test
sahf
test
movsb
rolb
mov
cltd
cs
mov
arpl
add
mov
add
aad
mov
cwtl
test
addb
mov
dec
mov
add
mov
sub
rolb
mov
add
shl
add
push
lods
clc
xchg
mov
mov
add
and
lds
cmc
xor
mov
gs
add
cld
push
push
sbb
mov
xlat
in
add
mov
arpl
lahf
add
cli
jle
sbb
sbb
pop
cmpsb
repz
lcall
mov
stos
mov
mov
add
add
xlat
push
mov
adc
sbb
outsl
jns
or
push
fstpl
cmpsb
nop
add
jl
int
sahf
aam
cmp
clc
push
jp
rolb
iret
out
mov
pop
sbb
sub
mov
std
sub
or
jbe,pt
xchg
test
mov
in
mov
jb
mov
lahf
cmp
inc
add
mov
sbb
add
sti
in
gs
mov
mov
fbstp
pop
stc
ljmp
cmp
jge
test
xchg
mov
jns
jno
outsl
call
popf
iret
push
lods
xchg
mov
inc
add
negl
aaa
xchg
sub
arpl
xchg
mov
mov
add
xchg
jae
cmpsb
mov
add
movsb
movsb
jge
fcoms
jle
pop
nop
add
shl
pusha
add
mov
or
xchg
fisubrs
mov
iret
js
les
add
jle
fistpll
or
cld
std
fwait
movsb
cmp
aad
scas
ds
cld
gs
cs
fcomps
mov
xchg
shll
dec
mov
add
add
mov
add
icebp
mov
add
mov
popf
dec
mov
sub
cmp
xlat
push
add
and
push
xchg
ljmp
fldcw
sub
jns
pusha
add
add
nop
add
stos
addb
fnsave
ret
fdivrl
xlat
add
mov
rol
mov
lods
ja
sbb
je
jns
mov
sbb
add
mov
pop
jle
mov
test
inc
cs
add
test
add
cmp
lods
mov
mov
or
and
mov
mov
insb
ret
in
push
addb
xchg
add
cmpsl
lock
add
repz
iret
and
scas
mov
mov
add
mov
mov
lods
xor
mov
nop
add
add
mov
xchg
lock
lahf
push
lcall
mov
sub
pusha
add
mov
cmp
cmp
inc
sbb
adc
std
stc
jmp
into
call
add
add
mov
add
mov
add
push
enter
add
test
push
jmp
push
cmp
add
scas
jp
sbb
sbb
hlt
and
add
mov
nop
add
loope
xchg
rolb
mov
and
add
mov
add
arpl
add
cmc
xor
xor
xor
cltd
ret
dec
xor
mov
mov
push
or
int3
sub
mov
push
mov
mov
mov
add
pushf
jb
mov
push
fwait
xchg
xchg
add
call
or
and
mov
add
or
push
addb
cwtl
stos
xor
mov
add
add
mov
arpl
insl
ret
mov
jo
mov
mov
or
cltd
mov
ret
hlt
test
bound
mov
add
pusha
add
dec
fldcw
xchg
scas
mov
hlt
repnz
add
xor
mov
push
cmp
jnp
mov
mov
add
mov
xor
mov
add
in
sub
push
push
sbb
aaa
add
mov
lea
dec
stos
xchg
aaa
test
adc
sti
das
icebp
outsl
enter
inc
fcoml
pop
xchg
imul
test
cwtl
and
dec
rolb
mov
push
push
jl
enter
subl
mov
xor
mov
test
mov
fcomip
nop
add
in
test
xor
mov
mov
popf
int
cwtl
cmp
or
int
int3
shrl
orl
jg
add
nop
add
mov
stos
mov
mov
sbb
sahf
dec
push
add
and
cmpsb
out
cwtl
in
aas
int3
test
sub
jae
dec
add
mov
mov
frstor
imul
xor
add
cmp
add
insl
add
dec
bound
mov
imul
iret
test
dec
cmp
mov
and
shll
mov
add
data16
mov
sub
icebp
icebp
mov
inc
scas
insb
ja,pt
add
lods
jl
insl
cltd
pop
add
mov
add
mov
jne
out
iret
ret
in
cmpsb
adc
mov
and
addb
rolb
dec
into
fnsave
mov
nop
add
ja
adc
pop
add
xchg
insb
xchg
add
sub
inc
add
fdivl
fs
das
and
mov
xchg
add
sahf
mov
add
add
add
push
lds
mov
add
test
and
loope
add
faddl
add
mul
movsb
jns
cli
sub
jmp
icebp
adc
mov
negb
add
add
pop
dec
in
lea
or
aas
mov
xor
incl
add
fcoml
fmuls
stos
filds
xchg
adc
mov
pop
jns
xchg
add
add
jp
vmovss
adc
mov
add
add
mov
daa
and
mov
or
in
sbb
push
loopne
mov
add
test
dec
jne
add
mov
dec
lret
lods
fdivrl
imul
jo
mov
nop
add
or
pushf
mov
lods
push
sbb
sub
mov
enter
add
cmpsl
push
leave
or
js
mov
jge
out
js
lret
mov
into
div
add
add
mov
cmp
fdivl
cltd
dec
jns
lahf
aad
xor
sbb
mov
mov
mov
outsb
and
sti
lcall
xlat
ret
insb
sbb
mov
add
mull
int
addb
sub
xchg
or
lock
loopne
mov
call
add
test
roll
cmpsb
xchg
adc
and
popf
cmp
cmpsb
mov
add
push
push
jmp
jge,pn
pop
push
rolb
mov
lcall
add
xor
mov
mov
mov
jb
mov
sub
add
mov
ret
aam
lret
jns
test
xchg
push
add
and
fistps
not
dec
fs
pop
push
cwtl
adc
sbb
rolb
mov
jno
mov
add
daa
xchg
lds
dec
imul
mov
ja
ss
xchg
mov
aad
mov
es
loopne
mov
addb
mov
add
mov
mov
jne
rolb
mov
es
fmull
mov
inc
and
mov
add
or
xchg
sub
mov
or
xchg
push
mov
cmpsb
inc
jmp
into
jno
rolb
js
cmp
adc
flds
mov
movsb
xlat
loop
mov
mov
lds
mov
cmpsb
sub
pop
leave
sub
cmp
fs
push
das
cmp
in
scas
ds
add
repnz
in
push
push
nop
add
add
and
out
push
mov
mov
xchg
andnps
add
fnstcw
inc
and
sbb
fwait
dec
mov
mov
outsl
bound
mov
gs
popa
mov
test
add
mov
add
add
or
jl
sbb
add
mov
mov
pop
xchg
sbb
clc
pushf
or
xor
mov
cmp
in
jb
mov
mov
js
in
mov
cld
push
sub
out
inc
jns
stc
or
stc
and
test
and
add
out
aam
push
push
lods
jecxz
add
xchg
add
sub
add
dec
cwtl
out
rolb
mov
add
mov
mov
hlt
insl
test
lcall
cmp
or
std
or
cmpsl
nop
add
int
test
xor
mov
sti
mov
jae
add
add
pushf
or
cwtl
pop
sbb
mov
mov
out
mov
mov
test
ret
jbe
and
mov
push
bound
mov
xor
add
cli
test
add
push
ds
sbb
add
int3
gs
out
outsb
sahf
or
into
jmp
outsl
mov
mov
fcoms
xchg
jge
aam
mov
pop
sahf
sub
clc
scas
cwtl
sbb
out
lahf
pop
pop
insl
popf
cmpsl
dec
aam
add
and
rolb
mov
js
decb
mov
add
inc
add
lds
add
sub
add
and
mov
dec
std
push
inc
add
fs
push
add
cmp
mov
add
mov
addl
mov
fs
clc
sbb
add
jmp
rolb
xor
add
and
sbb
flds
mov
fmul
and
mov
dec
stos
cs
xchg
xor
mov
addb
call
mov
mov
jo
mov
add
fincstp
call
add
popf
push
in
cmp
xchg
adc
outsl
pushf
or
imul
lcall
and
insl
addr16
adc
mov
or
mov
or
inc
repnz
lea
movl
ja
xor
mov
or
jbe
lds
insl
push
pop
test
mov
xor
xor
mov
add
add
pop
sbb
sbb
ljmp
movsl
fmul
cmp
lret
data16
add
sub
add
mov
mov
repz
xor
mov
dec
lcall
fisttps
ret
mov
mov
dec
test
les
add
add
or
inc
mov
add
add
out
dec
jmp
pop
add
dec
push
fcoml
mov
lret
mov
fiaddl
add
call
stos
inc
add
mov
add
mov
add
mov
pop
mov
hlt
jecxz
dec
cmp
lahf
mov
mov
sti
lods
xchg
mov
mov
lods
iret
sub
int
add
mov
jmp
inc
movsl
sub
dec
daa
push
mov
aad
inc
add
push
pop
and
scas
or
jecxz
mov
outsl
sub
dec
mov
lcall
adc
leave
adc
mov
repz
nop
add
cmc
insb
cmp
outsb
js
push
push
mov
sub
mov
ss
cmpsb
mov
mov
bound
mov
mov
push
mov
insl
rolb
mov
mov
cs
sti
adc
push
mov
adc
mov
add
add
mov
repz
add
aad
sub
sub
scas
rolb
mov
sbb
add
jl
and
sbb
mov
push
popa
stos
push
jecxz
sbb
add
mov
jle
mov
add
mov
int3
dec
xchg
lods
aad
mov
mov
cltd
addb
into
jo
mov
push
mov
mov
leave
std
loop
mov
pop
sarl
mov
add
aas
add
mov
add
mov
sti
mov
mov
adc
mov
aam
mov
mov
push
cmp
push
add
mov
xchg
push
mov
add
nop
add
int
and
add
loopne
mov
push
int
rorl
sub
adcl
mov
mov
addb
adc
sti
adc
adc
add
popf
mov
add
xchg
arpl
add
or
adc
cmpsb
xchg
add
pop
andl
sbb
movsb
jnp
push
std
push
sti
jb
mov
dec
test
add
push
or
jl
add
mov
ficompl
adc
dec
mov
xor
mov
add
mov
sbb
add
pop
xor
dec
into
mov
daa
lcall
mov
add
and
xor
mov
pop
cmpsb
adc
mov
sub
pop
fwait
push
and
mov
pop
xor
cltd
pop
jbe
test
xor
pop
push
sub
inc
xor
lret
mov
mov
add
xchg
cltd
stos
mov
mov
or
mov
mov
clc
lds
mov
add
xchg
test
mov
mov
movsl
decb
mov
add
add
add
xlat
addb
sbb
je
inc
mov
or
aad
cmp
sarl
cmp
jne
pushf
cltd
and
mov
arpl
loopne
mov
add
sub
add
xor
and
sub
sub
jnp
add
stos
and
pop
cmp
fistpll
inc
add
add
push
pop
xor
mov
add
mov
inc
iret
repnz
xchg
add
add
clc
jg
in
cmp
lea
stos
imul
or
lahf
fcomps
cltd
std
fnstenv
jno
add
outsl
int
jbe
sahf
cmovp
add
add
mov
mov
jp
add
dec
fdivr
jmp
add
xor
fcmovnb
rolb
pop
aaa
cmp
or
cld
rolb
mov
int3
repz
xchg
imul
mov
out
out
pusha
add
add
fwait
mov
ret
bound
mov
in
cld
fstl
mov
in
dec
sub
push
mov
aaa
enter
push
mov
cmp
and
cld
jns
add
sbb
or
rcll
mov
dec
xor
or
xor
in
pushf
inc
fldl
rcll
addb
push
test
fnstcw
icebp
arpl
arpl
and
add
cmc
dec
int
lock
push
movsl
adc
mov
push
push
xchg
jle
imul
sbb
add
out
test
mov
xchg
jl
push
lods
inc
add
cmp
std
cwtl
jmp
pushf
lods
inc
add
jmp
imul
add
add
mov
into
scas
sbb
sbb
add
bound
mov
xor
dec
xchg
jecxz
add
add
xor
push
mov
roll
out
sbb
jp
add
jnp
adc
or
ss
mov
add
add
fsts
jmp
adc
out
dec
fdivp
cmp
push
mov
imul
lods
mov
repnz
xor
gs
sbb
out
add
or
dec
sbb
add
gs
rolb
mov
je
xor
movsl
outsb
mov
add
pop
pop
into
lock
push
add
mov
adc
cmp
dec
inc
leave
mov
mov
hlt
or
jne
test
mov
mov
add
xchg
loope
fimuls
ret
insb
mov
and
push
mov
shll
inc
sbb
sub
pushf
xchg
out
push
fisttpl
hlt
mov
lock
add
mov
cmp
sub
mov
push
sbb
xchg
add
out
add
mov
dec
enter
push
add
add
mov
lock
add
mov
add
cmp
inc
cmovs
cwtl
adc
mov
add
adc
add
mov
add
mov
add
iret
mov
and
mov
mov
insl
addb
out
xchg
imul
jae
or
addr16
test
jo
mov
pop
rolb
mov
jg
or
add
loope
mov
stc
ret
cltd
jbe
add
test
popf
arpl
add
mov
les
test
xchg
push
mov
mov
call
sub
add
mov
daa
push
sbb
int3
adc
rolb
cmp
add
test
add
cmc
push
cmp
jae
add
jl
ficompl
and
mov
pop
push
adc
mov
mov
lds
into
ret
loopne
mov
out
insl
repz
mov
fsubs
rolb
mov
mov
sub
addb
mov
stos
jl
popf
xor
mov
push
cmp
ja
aaa
mov
dec
movsl
mov
mov
cld
cs
sbb
stos
inc
pop
aad
or
repz
enter
push
and
mov
mov
or
add
cmp
movsb
add
rolb
xchg
add
mov
imul
dec
fs
mov
and
lods
nop
add
and
cmp
loope
sbb
and
mov
aam
fisubrl
mov
mov
cmc
data16
mov
out
scas
push
xchg
sub
movsb
pop
repz
sub
leave
inc
dec
pop
or
pop
dec
xchg
ja
inc
ds
imul
mov
aam
cmc
jo
mov
mov
fs
call
sub
je
mov
mov
mov
add
add
cmc
push
push
push
add
sbb
lret
pop
data16
ljmp
movsb
scas
imul
mov
sbb
aaa
jmp
fcmovnbe
dec
mov
mov
adc
mov
adc
cld
push
pop
lea
jns
add
mov
or
cld
addr16
add
mov
mov
repnz
add
add
sub
add
fdivrs
mov
mov
ss
add
jb
mov
push
jg
lret
push
pop
pop
gs
frstor
mov
adc
popf
xlat
mov
xor
test
mov
mov
dec
mov
dec
clc
push
or
add
jp
sub
psubw
jo
mov
arpl
mov
pop
xor
sbb
or
popa
dec
dec
xchg
or
and
mov
add
mov
shrl
addb
loop
mov
testl
movsl
or
insl
jo
mov
add
mov
dec
push
testb
je
add
rcll
fiadds
in
ds
cmp
cs
out
sub
jno
rolb
mov
or
add
mov
mov
movsl
mov
mov
add
addb
cmp
add
mov
mov
fwait
cld
push
jecxz
or
les
cs
pop
addb
jge
test
movsl
cmp
xchg
push
mov
cmp
jge
leave
cmp
movsb
test
dec
int
and
loop
mov
mov
xor
fxtract
test
fstps
xor
cmp
repz
aas
imul
popa
adc
push
add
sahf
mov
add
nop
add
add
out
dec
jmp
icebp
lret
sarl
mov
sub
mov
adc
add
lahf
test
cli
fstpl
or
add
pop
mov
mov
dec
xor
inc
inc
push
mov
mov
in
fwait
mov
jecxz
pushf
add
fnstenv
scas
dec
cmpsl
pop
data16
test
jg
jae
repnz
jb
mov
shll
mov
dec
add
into
mov
jl
add
loope
push
mov
and
adc
mov
push
cmp
ja
ret
pop
sub
in
mull
pop
arpl
les
pop
out
sub
mov
dec
arpl
out
popa
psubsb
push
es
dec
dec
jmp
out
xor
mov
mov
stos
pop
cmc
fyl2xp1
sbb
scas
cmp
or
addb
std
xor
mov
sbb
dec
jae
stos
cltd
mov
pop
pop
cli
cwtl
pop
movsb
cmp
sub
cmpl
ss
add
mov
add
mov
adc
xor
lock
mov
add
add
add
xchg
add
add
inc
cmp
mov
fsubrs
add
les
add
add
loope
ljmp
mov
imul
cmp
add
mov
ret
stos
push
outsl
add
mov
lock
mov
add
lea
add
mov
add
mov
mov
jne
rolb
cmp
addr16
addb
movsl
pushl
xchg
ss
in
popf
push
dec
add
mov
mov
das
inc
rorl
xchg
mov
mov
mov
in
xor
and
add
scas
mov
add
mov
jb
mov
xor
lods
insb
fsubrs
faddp
mov
dec
push
in
xor
mov
sub
pusha
add
addr16
cmp
mov
movsl
gs
inc
add
bound
mov
pop
mov
pop
int3
jns
add
mov
pusha
add
out
rolb
xor
cmp
and
mov
sbb
sub
std
mov
xchg
xchg
add
mov
add
push
lods
jecxz
jmp
sbb
dec
push
inc
sti
sahf
sub
or
int3
rolb
mov
xor
fimull
ljmp
cltd
fcomp
mov
jge
add
mov
test
loopne
mov
sub
insb
mov
mov
add
lahf
xchg
add
mov
add
adc
sbb
mov
mov
pop
sbb
popf
data16
and
push
jge
mov
pop
pause
add
roll
add
das
push
add
mov
xchg
hlt
cmp
std
icebp
sti
and
mov
movsl
pop
mov
lock
and
lahf
add
mov
cld
and
mov
jge
aad
mov
sbb
mov
data16
test
clc
hlt
icebp
or
movsb
mov
and
cwtl
ljmp
addb
add
mov
ja
sub
mov
dec
dec
sbb
and
mov
icebp
push
xchg
into
je
add
call
sbb
nop
add
dec
push
insb
sub
and
mov
adc
mov
call
cmp
or
add
lcall
mov
add
lods
jg
push
xchg
mov
lret
push
cmpsb
lods
mov
lds
and
xor
or
loop
mov
add
add
add
xchg
cmp
aam
stos
imul
loope
lret
xor
ss
inc
ds
fiadds
add
pop
and
mov
stos
mov
mov
mov
add
and
mov
ret
push
dec
push
add
out
lock
jae
je
call
imul
add
aad
out
mov
jb
mov
pushf
popf
shrl
lcall
subl
fwait
ss
pop
sub
repnz
int3
pusha
add
add
repnz
add
jno
sub
mov
push
pop
aad
rolb
mov
add
lock
mov
hlt
outsb
aad
lods
add
addr16
push
jae
and
add
fwait
mov
mov
fcoms
insl
fwait
mov
push
jne
mov
std
mov
popf
adc
mov
jns
jne
in
sahf
pop
fimull
jle
or
add
jno
testb
fiaddl
mov
add
scas
adc
pop
jo
mov
push
and
mov
jle
aam
jle
in
push
sub
push
scas
lahf
or
or
pop
fidivs
int3
and
mov
add
push
insb
adc
xchg
or
mov
xchg
repz
stc
xchg
rolb
mov
push
imul
adc
jbe
ss
ret
or
aad
ret
fsubp
dec
inc
dec
mov
fistl
pushf
push
inc
or
fwait
xchg
addb
orl
call
add
sub
movsl
test
pop
fsubrp
pop
test
adc
test
cmp
sarl
xchg
aas
mov
insb
mov
repz
sub
xchg
push
push
mov
lcall
cmc
or
rolb
mov
adc
daa
cld
mov
and
mov
fs
addb
ret
int
add
test
push
cmpsl
lock
add
rolb
inc
lods
es
lea
add
clc
cmp
daa
ss
or
gs
testb
sbb
adc
addb
repz
insb
rolb
icebp
shl
mov
rolb
mov
add
sub
in
test
cs
add
mov
dec
push
mov
hlt
les
add
pop
and
mov
bound
mov
mov
mov
mov
jno
add
mov
add
mov
cmpsl
jmp
gs
test
mov
inc
cmp
inc
sub
idivb
sub
add
mov
add
mov
push
pop
adc
mov
ljmp
test
movsb
sub
add
xor
mov
fmull
test
aas
enter
add
add
and
mov
aam
add
add
fidivs
add
add
int
add
or
add
cmp
xchg
mov
push
out
jb
mov
sub
imul
push
pop
inc
repnz
add
mov
mov
mov
or
mov
dec
jbe
movsb
jmp
mov
mov
jecxz
insl
cmp
hlt
iret
dec
ljmp
mov
mov
mov
add
mov
mov
stc
xor
inc
xchg
cli
mov
mov
and
dec
dec
stos
imul
add
out
pop
mov
sahf
pop
dec
mov
mov
mov
repnz
in
dec
cltd
jo
mov
aad
add
jne
rolb
cmp
mov
add
xchg
mov
mov
mov
inc
add
add
mov
add
jmp
jae
lret
test
sub
test
sti
xor
mov
mov
fbld
insb
ja
xchg
sbb
add
out
jp
cmp
cltd
inc
jmp
add
mov
rolb
jmp
sbb
mov
dec
pop
jle
and
push
xchg
jle
pop
je
dec
out
mov
xor
mov
sub
clc
mov
jg
rol
mov
hlt
hlt
mov
mov
xor
mov
jnp
dec
push
imul
filds
mov
sti
push
add
push
push
add
mov
inc
iret
cli
loop
mov
ljmp
mov
inc
pop
inc
mov
dec
es
into
and
mov
add
add
scas
mov
add
int
mov
jp
fsubrl
movsl
push
xchg
push
insl
xchg
pushf
incb
mov
add
pushf
sbb
ja
adc
stos
fldenv
mov
mov
dec
stos
repnz
mov
mov
or
inc
cmp
cmpsl
jo
mov
ljmp
loope
push
out
sbb
je
jb
mov
mov
add
rolb
mov
push
lret
dec
sub
xor
add
lahf
push
add
sub
push
out
jmp
mov
ljmp
inc
test
mov
cmp
int3
ficompl
ss
inc
sub
lock
sub
add
sbb
outsb
or
scas
xchg
or
add
add
jp
inc
imul
cld
adc
mov
jne
add
mov
mov
leave
fists
ficoms
pop
xchg
rolb
mov
loop
mov
xchg
in
inc
mov
cmp
mov
xor
mov
push
rolb
mov
inc
fcoml
pushf
jo
mov
sub
cwtl
pop
cmp
inc
inc
add
dec
les
test
out
jns
sbb
clc
fcmovnb
mov
inc
jb
mov
and
sti
dec
loopne
mov
movsb
cld
movsb
and
movsl
add
add
xchg
push
insb
and
mov
sahf
push
inc
xlat
in
cmpsl
pop
push
out
push
mov
xor
cwtl
scas
cmpsb
and
mov
xor
jmp
add
add
mov
inc
add
nop
add
mov
pop
mov
cmp
xor
mov
mov
sub
das
xchg
scas
int3
mov
aas
fcomi
add
aaa
jbe
mov
int3
push
inc
add
lret
jo
mov
adc
insb
mov
jecxz
add
sub
push
sub
inc
add
movsl
out
int
or
mov
loop
mov
mov
movsb
std
jo
mov
mov
add
push
jns
add
mov
into
inc
add
xchg
hlt
repnz
ja
add
je
fiadds
dec
stos
shll
mov
add
sbb
fisubs
add
push
pop
push
sti
sbb
mov
mov
pusha
add
add
aad
out
test
cltd
push
fbld
mov
daa
adc
cmp
adc
pop
mov
js
add
or
and
arpl
popa
sbb
addl
fwait
popa
imull
jl
xchg
lret
mov
pop
ss
sahf
pop
adc
aam
push
fildll
ficoms
hlt
je
and
jb
mov
cmpsb
arpl
push
add
inc
inc
xor
mov
mov
stc
nop
add
jle
push
add
mov
stc
aaa
scas
pop
lds
add
push
jp
or
mov
and
mov
pop
pusha
add
lcall
add
add
sti
inc
pusha
add
xchg
add
dec
push
adc
mov
sbb
add
flds
mov
mov
mov
add
lds
stos
jmp
mov
mov
imul
push
cmc
push
addb
fcomp
jns
arpl
rolb
mov
and
and
fs
mov
pop
ficoml
pop
dec
dec
and
mov
imulb
js
addb
inc
addb
pop
adc
mov
dec
and
push
ret
add
mov
cmp
mov
int
mov
mov
add
jno
cs
ret
test
sahf
subl
daa
xchg
add
sbb
dec
add
xchg
mov
add
outsl
aad
addb
mov
add
add
in
inc
lret
dec
fcomip
add
mov
pop
cmp
fwait
xor
fs
add
mov
cwtl
push
or
addb
imul
add
mov
adc
pop
or
xchg
push
into
enter
ficoml
push
insl
adc
mov
popf
outsb
in
add
mov
ja
stos
pop
popa
repz
pop
jl
jns
add
subl
hlt
repz
mov
inc
add
nop
add
inc
mov
xor
js
negb
leave
inc
fidivl
add
mov
adc
mov
addr16
lahf
nop
add
ss
cmp
nop
add
xor
add
mov
sub
ret
and
into
in
mov
pop
dec
pop
das
in
sbb
dec
mov
enter
ljmp
add
cld
dec
xor
lahf
dec
outsb
mov
jne
pop
mov
in
mov
add
in
xor
mov
fistps
add
sub
add
mov
outsb
in
out
or
leave
jo,pn
mov
mov
data16
and
in
xor
mov
mov
dec
scas
jno
addb
mov
mov
push
cmp
fldcw
jg
fs
add
fsts
daa
cmp
mov
bound
mov
push
test
xlat
push
add
mov
stos
aaa
cmp
jbe
cltd
sub
enter
negb
sbb
cmp
mov
mov
cmp
mov
and
xor
xchg
add
add
xor
mov
and
mov
bound
mov
cmp
add
pop
pop
data16
pop
iret
test
mov
sub
dec
out
xor
mov
add
popf
inc
pop
repz
mov
add
add
scas
push
push
shl
jno
or
testb
rolb
mov
push
inc
in
pop
int
movsl
fs
xchg
add
cli
fcoms
add
cwtl
cltd
adc
mov
int3
cmp
mov
mov
xchg
add
mov
add
jp
pop
and
mov
fcmovb
sbb
clc
push
add
sub
xor
mov
mov
add
xchg
mov
push
mov
push
fsub
mov
push
jns
mov
mov
inc
add
mov
test
iret
bswap
and
mov
mov
arpl
xchg
idiv
cwtl
xchg
mov
mov
lret
mov
add
int3
push
pop
outsl
test
cltd
fmull
out
add
lcall
add
add
add
mov
mov
push
mov
add
aam
movsb
push
addb
pop
enter
mov
mov
mov
jecxz
repz
test
and
mov
push
lcall
int3
dec
rolb
pop
xor
adc
jle
dec
jno
sbb
push
std
scas
js
out
lock
add
mov
add
mov
inc
push
push
lea
mov
dec
xchg
nop
add
nop
add
fists
mov
sbb
fnsave
mov
jno
inc
test
mov
sub
push
pop
daa
test
test
sub
xor
sbb
decb
lahf
or
add
mov
ljmp
sub
mov
adc
mov
jmp
push
inc
mov
mov
adc
mov
add
mov
push
push
sbbl
sbb
mov
add
jns
sahf
mov
rorl
incb
sahf
push
into
sbb
lea
int
add
add
pop
xchg
push
xchg
fisubrl
scas
push
fisttpll
add
movl
add
dec
sub
iret
mov
fimuls
mov
mov
out
and
mov
mov
mov
sbb
es
cli
gs
shll
rolb
inc
cmpsb
insl
stos
lds
popa
nop
add
inc
repnz
push
inc
ljmp
dec
fcomp
repnz
cmp
shl
push
fidivl
sbb
call
add
cmc
and
mov
mov
cmpl
mov
mov
add
sbb
add
inc
rolb
mov
xor
adc
mov
pusha
add
fs
popa
test
rolb
mov
xchg
or
xor
jge
push
shll
dec
xor
mov
xor
imul
xor
mov
add
and
mov
mov
cli
mov
jns
sub
add
cmpsb
imul
orl
sub
sub
mov
add
mov
mov
dec
movsl
scas
inc
sbb
mov
mov
int3
insl
adc
mov
mov
add
mov
imul
scas
xor
xchg
dec
std
push
push
out
or
js
mov
dec
xchg
in
add
insb
add
mov
jo
mov
dec
dec
or
sbb
inc
pop
mov
cltd
les
xor
mov
aaa
push
icebp
icebp
sub
movsl
fistps
fldenv
add
mov
das
lds
fildl
mov
lahf
adc
mov
shll
rol
sub
in
outsl
movsb
cmp
pusha
add
push
jg
dec
in
mov
push
ret
fnstcw
testl
mov
and
mov
mov
jnp
xor
loope
test
xor
mov
popa
repnz
mov
outsb
pop
jb
mov
add
test
sub
pop
mov
or
mov
mov
out
bound
mov
sbb
sbb
xor
or
imul
fadds
add
test
push
icebp
xchg
inc
add
je
test
mov
xchg
loop
mov
pushl
lahf
daa
fs
sarl
push
addr16
sbb
add
pop
movsb
into
fcompl
jg
add
mov
add
cmpsl
dec
jo
mov
outsl
inc
add
fcomp
pusha
add
out
out
sbb
inc
add
mov
mov
adc
pop
mov
push
cmp
mov
mov
out
dec
divl
mov
pop
mov
cmp
add
inc
addb
jne
push
jg
sub
mov
mov
test
push
add
icebp
jno
insl
stos
jae
hlt
cwtl
mov
pop
inc
add
cli
lock
xor
push
jl
push
add
test
aad
lcall
mov
rolb
mov
mov
bound
mov
divl
pop
push
and
mov
gs
jl
and
lock
mov
mov
push
cmc
and
cmpsl
fstpt
add
adc
mov
add
lcall
xchg
pusha
add
sbb
loop
mov
cmp
add
and
mov
mov
push
test
inc
sub
jo
mov
jns
inc
imul
cld
movl
mov
jp
sbb
add
add
add
loop
mov
adc
add
fisttps
pop
insl
mov
pop
inc
sahf
pop
or
xchg
add
mov
pop
pop
insl
in
insl
inc
add
aaa
jp
mov
push
lea
jle
mov
add
pop
push
xor
cmp
cmc
pushf
inc
add
cld
cmp
loope
imul
xor
aaa
xchg
lret
xor
addb
cmp
mov
push
aaa
and
inc
add
xchg
subl
mov
dec
add
cltd
dec
out
pop
loopne
mov
mov
mov
sub
stos
push
cmpsb
inc
sub
dec
lahf
inc
add
repnz
add
push
add
add
add
mov
xorl
in
push
add
in
xor
mov
ds
js
add
paddsb
add
and
and
dec
je
add
cs
aas
les
add
nop
add
xchg
xchg
stos
pop
jmp
add
add
xchg
iret
ds
add
adc
rolb
dec
push
jecxz
lret
sub
adc
mov
mov
add
jne
sub
imul
mov
test
add
xor
stos
nop
add
xor
xor
push
xchg
js
sub
add
mov
enter
mov
mov
mov
mov
mov
mov
mov
cmp
fs
stc
cwtl
pop
bound
mov
add
mov
mov
xor
mov
adc
mov
push
mul
ss
add
std
out
add
add
int
adc
inc
add
jo
mov
pop
ret
xorl
xor
mov
add
dec
iret
test
add
aas
or
fstl
repz
xchg
iret
add
mov
push
xor
mov
mov
mov
rcrl
add
add
mov
mov
xlat
aad
cmp
mov
xor
cmpsl
inc
fidivrl
mov
xchg
sub
mov
enter
hlt
outsb
xchg
addb
sbb
rep
into
ss
ds
fisubl
push
imul
dec
sbb
mov
dec
dec
mov
xchg
sbb
fsubr
xor
push
stos
inc
out
bound
mov
mov
xchg
inc
mov
inc
shr
push
jp
add
add
addb
mov
dec
dec
stc
inc
into
scas
pop
adc
addb
inc
add
mov
hlt
popf
push
cmp
pop
add
sbb
and
mov
mov
jo
mov
les
pop
dec
cli
jmp
addb
jne
mov
and
cwtl
repnz
lret
lock
sbb
sub
mov
dec
mov
and
inc
sbb
sbb
mov
dec
mov
mov
xor
dec
dec
jle
xor
mov
in
shll
xchg
loop
mov
add
ret
lock
test
cwtl
les
add
sbb
rolb
mov
xchg
xchg
cmpl
lcall
ds
ret
sbb
xchg
sbb
ret
mov
mov
add
sti
pushf
pop
xchg
int3
xchg
bound
mov
push
in
stc
out
mov
daa
mov
xchg
inc
dec
addb
mov
mov
add
add
pop
push
add
sbb
fnsave
add
roll
ljmp
in
bound
mov
mov
rcll
je
xchg
pop
add
pop
popf
pop
leavew
in
out
lock
inc
icebp
add
mov
or
cmp
cld
inc
inc
push
mov
aam
repz
jg
addb
pop
or
adc
mov
mov
add
add
jge
mov
xlat
add
mov
inc
add
mov
addr16
jmp
xchg
add
dec
sbb
jp
inc
das
arpl
mov
cli
popa
add
mov
add
ret
jl
outsb
cmp
lahf
and
mov
es
lods
add
rolb
mov
xor
mov
movsl
mov
lods
aam
add
mov
jae
movsb
inc
ja
xor
inc
add
pop
roll
cmp
mov
cwtl
cmpsl
leave
mov
pusha
add
in
sbb
bound
mov
ljmp
xlat
adc
call
ja
hlt
jecxz
addb
ficomps
add
mov
push
add
nop
add
ds
bound
mov
pusha
add
add
mov
add
pop
push
adc
mov
jae
mov
ds
fdivrs
add
insl
mov
ja
and
mov
sub
add
push
add
imul
icebp
mov
mov
add
mov
nop
add
repnz
jbe
int
mov
push
adc
mov
jnp,pt
add
ret
cli
mov
jmp
daa
push
stos
sbb
aad
push
sbb
gs
jo
mov
push
iret
imul
enter
mov
or
add
in
lret
dec
mov
shrl
mov
pop
clc
mov
shll
xchg
mov
sbb
add
out
cmp
sbb
imul
add
sbb
addb
cmp
daa
inc
sbb
and
add
arpl
test
sbb
bound
mov
imul
out
cmp
mov
cld
or
sub
neg
push
test
fldl
mov
add
es
mov
icebp
add
cmp
ja
add
iret
and
pop
test
mov
add
pop
mov
and
add
mov
cmpl
inc
mov
je
movsb
insb
test
jno
or
mov
sbb
add
cmc
clc
rolb
loopne
mov
roll
and
mov
mov
add
xchg
sub
push
ja
xor
mov
fwait
cltd
xor
or
fiaddl
cmc
cltd
movsl
dec
and
decb
adc
cmp
xchg
in
push
mov
sub
mov
mov
mov
adc
mov
sub
mov
std
stos
gs
mov
add
adc
mov
mov
fnsave
adc
mov
test
or
insl
out
sbb
sbb
add
fsubl
adc
jl
mov
lods
lcall
mov
loope
call
out
loope
xchg
cmpsl
lret
xchg
push
leave
fisttpll
data16
sub
push
pushf
add
mov
addb
sub
or
pop
sbb
and
mov
add
add
mov
push
add
sbbl
add
stos
sub
add
imul
mov
add
adc
mov
jge
add
sbb
arpl
into
xchg
rcll
cmp
ret
addb
pop
addr16
sbb
add
aaa
xchg
repz
jmp
mov
mov
mov
pop
push
mov
dec
jmp
add
adc
gs
cld
inc
imul
movsb
mov
mov
cwtl
fsubs
add
mov
adc
mov
mov
push
and
mov
pop
sbb
add
sbb
xlat
mov
add
mov
add
nop
add
add
add
mov
mov
adc
repz
ret
inc
add
mov
add
mov
dec
sti
inc
stc
addr16
lods
push
fsubs
mov
insb
jl
mov
ljmp
adc
mov
mov
jecxz
cwtl
jg
push
pop
loope
add
test
pop
cltd
or
add
sbb
addb
sti
jb
mov
or
dec
mov
add
add
pop
imul
les
jns
pop
push
mov
mov
add
aad
add
add
jnp
add
add
jmp
gs
adc
inc
or
stc
inc
lock
sbb
add
int
lods
rolb
mov
addb
sarl
mov
and
xor
pop
and
mov
pushf
pop
call
add
adc
mov
test
dec
jmp
or
mov
xor
fcmovne
jne
out
jge
jns
xchg
pop
jl
out
jbe
test
sub
imul
mov
cmp
jae
inc
repz
mov
add
inc
adc
mov
add
add
xchg
out
scas
lds
ja
xor
sbb
sbb
add
adc
or
notb
push
cmp
add
and
imulb
push
add
cltd
add
dec
sbb
add
or
test
adc
mov
add
sbb
add
psubusb
mov
pop
rolb
mov
sub
sbb
mov
inc
pop
out
push
out
rolb
mov
add
xor
mov
adc
mov
mov
add
les
mov
push
adc
test
add
jb
mov
add
add
ljmp
inc
cmp
mov
mov
cwtl
push
add
mov
add
mov
add
popa
dec
mov
xchg
test
lcall
add
movsb
jae
add
mov
lods
jne
cmpl
enter
push
stos
ret
sub
pop
fisttps
pop
jp
dec
push
xchg
not
sbb
or
push
jae
insl
test
jns
repnz
lcall
js
fnstsw
sbb
mov
iret
insb
mov
addb
mov
mov
add
addr16
add
rcll
add
mov
jmp
mov
adc
add
fwait
add
add
lods
stos
das
cmp
mov
stos
std
insb
pop
sub
rolb
mov
pop
xchg
icebp
mov
mov
dec
mull
xchg
mov
mov
xchg
push
daa
xor
mov
add
inc
hlt
push
and
nop
add
xchg
jmp
mov
add
int3
imul
pushf
loopne
mov
fistl
fisubs
dec
jns
sbb
jb
mov
mov
not
jge
mov
sbb
add
aad
loopne
mov
ret
jg
or
loope
fisubl
mov
mov
adc
mov
jb
mov
pop
pop
scas
sbb
add
or
rolb
roll
aas
mov
arpl
rolb
mov
lods
push
push
dec
mov
mov
push
mov
rolb
lods
xchg
add
rorl
mov
mov
nop
add
pop
out
mov
xchg
aam
xor
mov
add
mov
leave
imul
idiv
push
sbb
cmp
fdivs
add
add
roll
mov
sbbl
popf
pop
loopne
mov
lahf
xchg
rolb
mov
sbb
add
jge
cmp
add
dec
xor
pop
dec
mov
mov
push
pop
arpl
sub
repz
rolb
mov
js
movsl
sbb
loopne
mov
mov
imul
iret
mov
lods
cmp
repz
fwait
pop
pop
inc
lcall
inc
jo
mov
es
test
repnz
add
lret
cmpsl
adc
mov
push
inc
inc
xor
fildl
sbb
movsl
push
ja
add
mov
sbb
add
mov
jne
or
add
mov
rolb
aaa
arpl
jmp
sbb
pusha
add
add
mov
jo
mov
int
adc
mov
fmull
fwait
test
fmull
cmpsb
mov
stos
shll
fs
inc
add
or
mov
jbe
mov
mov
add
mov
jbe
xchg
loop
mov
and
mov
xor
dec
or
xchg
ljmp
lods
jmp
mov
add
sar
xor
mov
cmp
scas
in
fwait
stos
ss
mov
into
dec
cmp
sbb
xchg
add
std
outsb
inc
std
jle
add
add
mov
add
mov
cmc
cltd
aad
int3
rorl
push
sub
sub
ds
mov
mov
mov
sbb
add
add
add
mov
sub
add
add
pop
popf
mov
int3
mov
rcrl
cli
das
xchg
add
inc
add
mov
adc
mov
mov
and
mov
add
add
mov
jl
sbb
xchg
add
push
test
and
mov
adc
mov
jae
mov
cmp
xlat
outsb
mov
mov
mov
aas
sbb
add
imul
add
push
mov
adc
mov
out
pop
in
popa
aad
mov
imul
or
jmp
fidivrl
mov
inc
mov
pop
stos
ret
lret
add
or
add
inc
add
incb
mov
mov
popa
mov
test
xchg
rolb
mov
add
mov
pop
sub
adc
push
sahf
faddl
add
xchg
add
pop
dec
or
cmovnp
push
xor
mov
push
add
mov
mov
cli
negb
xor
or
cmp
push
cltd
xor
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
add
inc
add
adc
add
push
mov
sbb
add
ss
outsb
or
add
rcrl
je
je
fidivs
add
jecxz
stc
call
mov
aaa
xchg
pop
fisttps
rolb
ljmp
xchg
fnstcw
add
mov
loopne
mov
jl
pushf
mov
add
out
push
add
add
inc
pop
inc
xchg
add
in
imul
mov
mov
push
adc
mov
or
dec
cmp
mov
ret
cmp
jo
mov
movsb
cmpsl
mov
out
adc
jle
sub
xlat
call
insl
daa
insb
adc
add
out
fs
xlat
push
test
es
add
cmp
cmpsl
fiadds
pop
xor
sub
add
mov
push
xlat
insb
subl
cmp
push
add
mov
aas
movsb
xlat
mov
pop
fildl
mov
enter
pop
mov
add
mov
addb
js
add
shll
fisubrl
push
add
adc
mov
mov
add
adc
popf
mov
mov
inc
and
lods
xor
pop
push
std
jae
sbb
movsl
and
mov
int3
out
hlt
movsb
xor
mov
int3
into
repz
imul
push
sub
inc
lods
je
sbbl
mov
mov
mov
adc
mov
ret
jnp
inc
pop
int3
sub
cmp
ljmp
adc
cmc
out
sahf
std
pop
cmpsb
.byte
.byte
