stos
ret
and
ljmp
add
shrl
inc
loopne
outsl
dec
inc
inc
and
pcmpgtd
daa
and
out
loop
cmpsl
loope
and
sub
enter
shrl
bswap
or
bound
mov
inc
or
scas
pusha
and
test
out
mov
imul
imul
sub
scas
test
test
scas
mov
add
leave
dec
sub
lods
inc
bound
lret
sub
stos
push
dec
pop
movsl
subb
and
add
loop
subb
dec
add
ret
imul
inc
lret
iret
mov
in
xchg
sub
sub
add
sub
loopne
dec
scas
mov
xchg
add
inc
cmpsl
ljmp
mov
dec
mov
or
arpl
insb
in
int
dec
or
lea
stos
in
mov
outsl
movsl
cmpsl
add
inc
dec
mov
sub
int
loope
or
sub
dec
inc
leave
or
in
inc
shll
ljmp
add
mov
out
sub
inc
imul
rorb
test
vprotw
add
add
in
daa
loopne
and
push
out
outsb
das
mov
mov
andb
mov
insb
push
dec
test
imul
or
or
or
insl
scas
insl
call
in
inc
pop
loop
enter
push
mov
inc
dec
and
mov
daa
stos
and
jecxz
ret
mov
out
gs
orl
lds
inc
push
sub
scas
test
movsb
inc
lods
dec
test
push
and
imul
scas
or
insb
addr16
enter
lods
stos
outsb
mov
movsb
jmp
lds
in
push
and
lea
movl
push
stos
or
inc
pusha
out
inc
into
movsl
jns
loop
imul
inc
arpl
add
mov
call
sub
jmp
imul
mov
ljmp
fs
leave
int3
push
popa
outsl
push
insl
out
imul
lret
out
lds
inc
cmpsl
out
ret
and
movsl
test
imul
loope
add
outsb
sub
mov
call
jbe
outsb
iret
xchg
mov
scas
popa
pop
imul
lods
daa
dec
imul
add
popa
dec
push
in
int3
mov
and
iret
add
imul
sub
out
scas
out
addl
inc
sub
lret
dec
push
gs
or
into
cmpsb
daa
enter
and
mov
out
lods
int3
add
jmp
or
cmpsb
inc
bswap
insb
and
add
ret
inc
in
jmp
mov
andl
scas
arpl
mov
data16
or
sub
mov
daa
scas
enter
iret
rorb
mov
in
iret
mov
add
in
ror
inc
addr16
sub
in
outsb
subb
dec
mov
sub
out
dec
insl
roll
lods
and
out
loope
cs
out
lods
scas
sub
test
test
dec
pop
andb
mov
dec
dec
xchg
fs
ret
movsl
shrb
cmpsb
imul
iret
test
sub
push
arpl
ret
daa
data16
call
in
in
add
in
scas
in
out
dec
outsb
xchg
lret
and
sub
int
mov
in
dec
lods
and
shr
sub
int3
dec
outsl
lds
lods
insb
dec
inc
push
or
arpl
ret
test
add
mov
stos
in
popa
orl
dec
push
add
lea
inc
add
popa
mov
jmp
ret
or
cmpsb
bound
lret
dec
lret
sub
mov
loopne
or
sub
in
or
loope
dec
addr16
or
pushw
test
out
iret
in
popa
orb
dec
lods
or
lret
mov
daa
movsl
and
outsb
add
xchg
int
stos
outsl
mov
movl
ljmp
out
out
dec
push
inc
push
les
inc
lret
add
and
add
outsb
xchg
and
popa
pusha
cs
outsl
or
mov
inc
dec
mov
in
out
test
insb
inc
or
es
and
mov
lods
test
in
and
or
popa
shll
bound
dec
jecxz
fs
imul
inc
orl
ret
lea
addl
imul
sub
in
mov
out
and
inc
imul
stos
sub
scas
push
xchg
inc
dec
and
mov
inc
addr16
outsb
in
shll
lea
in
bound
inc
dec
mov
roll
sub
add
shll
inc
ret
lods
call
scas
scas
test
inc
sub
cs
test
lds
shlb
in
imul
popa
mov
test
and
and
insb
out
mov
leave
mov
orb
inc
push
or
cmpsb
mov
inc
lods
dec
mov
outsb
out
daa
and
int3
mov
inc
sub
daa
pusha
and
gs
data16
sub
or
and
or
pop
push
imul
orl
dec
add
sub
in
out
or
or
inc
or
xchg
lods
daa
inc
lret
movsl
pcmpgtw
push
es
add
and
dec
int
das
jecxz
dec
addr16
inc
mov
shlb
add
popa
mov
femms
insb
cmpsl
outsl
mov
dec
sub
ret
mov
imul
push
call
imul
out
add
les
insl
sub
and
addl
add
pusha
into
add
or
or
inc
in
or
mov
cmpsb
sub
jecxz
add
lods
movsl
ret
imul
out
out
test
arpl
or
add
and
stos
xchg
and
into
test
cmpsl
lret
mov
or
imul
out
or
push
fs
jmp
or
ljmp
insb
in
or
sub
in
add
out
mov
das
lea
in
shlb
stos
and
sub
mov
into
out
sub
out
shrb
cmpsl
arpl
add
test
inc
lea
mov
stos
mov
and
pop
push
add
add
cmpsb
xchg
sub
inc
leave
mov
mov
push
dec
inc
daa
arpl
mov
into
sub
cmpsb
mov
bound
addb
add
test
les
arpl
pusha
sub
leave
dec
jecxz
mov
iret
and
enter
enter
mov
sub
pusha
dec
pushw
or
jcxz
dec
loopne
in
push
enter
and
lret
mov
dec
iret
iret
inc
lret
dec
out
outsl
mov
lds
mov
sub
and
movsb
arpl
push
mov
mov
inc
dec
pminsw
es
loopne
pop
test
rorb
in
or
sub
bswap
sub
call
xchg
add
in
out
popa
daa
and
cmpsl
loopne
inc
shrl
insb
mov
lret
mov
lods
lods
imul
subb
test
dec
mov
and
jmp
imul
inc
dec
mov
and
and
imul
lret
test
in
or
mov
out
and
dec
scas
mov
jmp
orb
loope
xchg
daa
or
in
and
xchg
imul
inc
or
mov
and
ljmp
mov
arpl
xchg
inc
inc
or
jmp
test
out
lret
xchg
and
add
shrl
loope
into
int3
and
in
inc
enter
jecxz
outsl
stos
and
add
xchg
and
sub
mov
dec
loopne
xchg
das
mov
test
andb
in
stos
orl
and
das
call
test
dec
and
pusha
mov
out
ret
out
iret
iret
inc
dec
dec
inc
mov
inc
iret
in
insl
iret
or
add
lret
loopne
mov
dec
dec
and
ljmp
sub
inc
or
inc
iret
lea
scas
inc
int
or
addb
ljmp
andb
inc
mov
lret
imul
sub
scas
xchg
call
loopne
mov
or
mov
loopne
inc
out
sub
lds
mov
int3
dec
addr16
push
and
test
in
dec
and
mov
or
and
movl
dec
ljmp
dec
ret
push
lret
add
rol
sub
and
leave
out
mov
into
loope
insb
add
and
dec
scas
lods
movsl
mov
insb
dec
and
movsb
iret
dec
out
add
loop
imul
dec
dec
jmp
or
in
or
push
or
outsb
and
int3
vpunpcklwd
mov
dec
inc
sub
scas
loope
in
test
pavgb
dec
add
inc
push
add
inc
push
arpl
inc
loop
lea
test
mov
or
mov
call
popa
int
add
dec
lds
mov
movsl
jmp
out
bound
int3
add
movsb
and
cmpsb
mov
sub
or
and
jmp
push
add
inc
int3
inc
dec
dec
mov
and
stos
sub
cs
sub
loope
addb
mov
add
cmpsl
or
bound
shl
dec
lds
scas
sub
and
movsb
dec
cmpsl
dec
int3
and
das
add
test
xchg
in
lds
test
mov
inc
lret
out
ljmpw
subl
inc
pusha
imul
test
or
dec
rol
sub
stos
movsb
out
in
test
dec
and
popa
jmp
inc
stos
or
in
movl
sub
add
out
roll
inc
lret
insl
out
popa
scas
bound
out
fs
cmpsl
or
les
popl
in
jmp
and
lret
outsl
and
add
or
push
inc
add
add
or
ljmp
dec
sub
inc
iret
mov
pop
stos
cs
mov
test
bound
inc
lods
inc
imul
movsl
jmp
pop
in
cmpsl
inc
sub
in
lods
lret
outsl
insb
test
ret
in
out
popa
cmpsb
out
outsb
test
dec
sub
imul
outsl
add
and
stos
int3
cmpsb
les
dec
arpl
dec
ret
psraw
insb
and
and
data16
in
ret
lret
insb
inc
mov
test
scas
in
insb
out
out
scas
mov
add
das
add
outsb
mov
mov
subl
lds
mov
in
and
enter
imul
add
into
sub
cmpsl
jmp
andl
les
or
loopne
mov
inc
or
inc
or
outsb
loope
in
push
dec
inc
push
lret
movsb
mov
int3
stos
add
mov
int3
bswap
lods
inc
push
inc
into
scas
popa
lods
or
test
or
inc
popa
and
pusha
dec
lret
push
bound
ret
or
out
in
add
test
movsl
inc
inc
int3
add
cmpsl
dec
and
call
mov
and
loope
add
push
or
mov
arpl
daa
add
or
dec
lods
int3
push
test
daa
and
sub
mov
add
lods
inc
das
sub
sub
arpl
add
es
dec
sub
lret
test
in
and
stos
add
and
loope
dec
mov
or
fs
dec
mov
sub
int
das
or
test
add
shrl
test
lret
xchg
call
push
lret
inc
inc
stos
inc
cmpsb
or
and
push
mov
out
mov
enter
ljmp
dec
in
ljmp
lea
or
shlb
scas
pusha
and
dec
add
dec
mov
inc
and
arpl
orb
or
scas
and
mov
outsl
es
and
inc
mov
leave
cmpsl
dec
or
and
in
add
dec
imul
in
data16
scas
stos
test
pop
movsl
loop
leave
out
sub
dec
ret
add
lret
addl
xchg
movl
mov
les
movsl
jmp
lods
jmp
jmp
das
dec
inc
es
call
ret
cs
das
or
das
shrl
lea
insb
cmpsb
or
and
inc
inc
or
inc
mov
subl
addb
in
or
les
sub
inc
stos
cmpsl
and
dec
out
insb
stos
push
fs
arpl
es
andb
inc
les
or
mov
dec
bound
mov
inc
loopne
loopne
out
das
insl
xchg
xchg
popa
push
mov
mov
leave
movsb
into
rol
jecxz
or
stos
dec
dec
push
inc
mov
into
sub
jle
and
add
and
psubsw
inc
sub
xchg
out
arpl
les
dec
dec
inc
andl
push
mov
test
ret
dec
call
mov
inc
scas
inc
push
insl
mov
call
outsl
add
in
dec
lret
popa
addl
mov
out
and
fs
scas
push
outsb
mov
lret
wbinvd
daa
inc
loop
push
movsb
inc
lds
call
into
add
add
mov
fs
out
out
movsb
or
out
mov
and
add
and
scas
jmp
or
imul
push
cmpsl
test
or
movb
and
ljmp
and
iret
out
in
movsl
sub
inc
inc
popa
mov
lret
lods
add
out
mov
out
add
subb
add
and
inc
cmpsb
insb
leave
cmpsl
dec
xchg
daa
mov
addb
and
ljmp
sub
ljmp
int
loop
imul
add
ret
xchg
sub
insl
add
mov
movsl
inc
cmpsb
and
outsl
push
ret
rolb
jmp
daa
inc
sub
dec
inc
add
jmp
xchg
cs
out
insl
gs
or
inc
int
ret
jmp
insb
add
punpckhdq
rorl
inc
insl
mov
lea
in
push
int
or
push
add
dec
call
add
imul
scas
mov
andb
das
scas
pusha
pop
dec
mov
inc
in
dec
fs
sub
sub
in
sub
ret
mov
scas
inc
lret
inc
out
add
lods
scas
test
stos
lods
lret
dec
imul
enter
inc
mov
scas
test
push
inc
sub
inc
and
and
in
in
dec
inc
add
leave
push
sub
and
ret
outsl
lods
scas
inc
stos
dec
in
loope
into
jmp
lods
dec
lods
movsl
data16
shr
push
jmp
inc
out
ljmp
mov
es
inc
inc
add
inc
inc
or
rorl
andl
scas
add
add
iret
and
das
rol
push
scas
mov
sub
daa
int3
sub
int3
or
int3
sub
or
into
inc
rorb
shll
out
shrb
sub
arpl
mov
in
and
and
mov
out
pop
enter
or
movsb
push
insb
imul
lds
pop
sub
in
or
loope
dec
out
xchg
gs
pusha
arpl
imul
and
call
sub
lret
add
add
mov
and
enter
add
dec
or
imul
outsb
xchg
inc
sub
dec
outsl
sub
movsb
lret
lret
inc
dec
mov
sub
mov
stos
mov
dec
add
popa
out
inc
loopne
inc
push
test
in
movsl
and
mov
sub
or
lret
or
dec
leave
pushw
imul
daa
iret
push
in
call
and
out
add
imul
orb
loopne
lret
stos
dec
shr
mov
and
xchg
bound
and
imul
mov
sub
or
and
pmulhuw
and
mov
dec
dec
inc
push
int3
dec
in
or
addb
lret
sub
inc
loope
sub
or
jecxz
sub
fs
and
or
mov
push
out
punpckldq
dec
inc
sub
shl
call
dec
inc
movsb
dec
imul
xchg
leave
in
dec
fs
call
ret
bound
daa
add
mov
daa
add
arpl
mov
inc
loope
test
test
out
cs
call
inc
sub
cs
ret
out
sub
jmp
test
data16
stos
xchg
sub
sub
add
bound
dec
scas
data16
loope
insb
inc
or
inc
inc
lds
out
add
sub
orb
insb
mov
mov
and
cmpsl
push
pop
scas
inc
enter
dec
stos
mov
pop
inc
sub
pcmpgtd
in
add
sub
ret
and
pop
leave
inc
pop
into
daa
dec
push
inc
add
or
sub
in
add
in
into
mov
iret
insb
dec
in
test
pushw
les
ret
dec
lret
sub
addb
dec
inc
out
arpl
rol
lret
and
stos
jmp
andl
push
daa
call
inc
in
jmp
and
subb
leave
insl
mov
loopne
inc
int3
loope
dec
mov
cmpsb
ret
push
sub
outsb
test
les
lds
jecxz
das
cmpsl
ljmp
sub
iret
ljmp
into
inc
inc
push
movsb
sub
int3
mov
lea
lods
inc
outsb
dec
inc
and
and
mov
mov
and
subl
jmp
scas
jmp
pusha
mov
popa
ljmp
sub
or
add
arpl
mov
stos
inc
and
mov
and
test
call
loop
and
int
or
les
out
and
sub
inc
sub
inc
sub
dec
or
add
lds
inc
iret
sub
lea
and
add
cmpsb
popa
inc
mov
in
es
es
sub
or
int3
imul
les
dec
jecxz
loop
enter
punpcklbw
paddsw
sub
inc
orb
movsl
jmp
subb
sub
insb
test
in
in
inc
inc
inc
push
inc
bswap
das
lds
pusha
les
dec
or
cmpsl
shlb
orl
iret
gs
push
inc
out
enter
lret
sub
inc
orl
inc
addr16
scas
mov
outsl
dec
leave
dec
or
into
or
inc
subl
subl
or
add
sub
or
out
imul
inc
inc
inc
push
in
gs
pusha
int
subl
mov
or
test
lds
subl
mov
cmpsl
out
test
add
mov
pop
movsb
sub
cmpsb
dec
shrl
and
and
and
popa
sub
mov
push
in
and
sub
popa
inc
gs
mov
or
or
test
lods
dec
dec
ljmp
add
and
sub
add
mov
mov
add
cmpsb
gs
enter
inc
orb
popl
dec
daa
int3
scas
arpl
add
cmpsl
mov
mov
sub
lods
es
lea
orl
gs
dec
or
ljmp
mov
test
data16
and
out
into
dec
lret
inc
bound
xchg
sub
loopne
int
xchg
dec
stos
leave
loope
dec
test
movb
insl
dec
mov
out
andb
imul
outsb
inc
or
leave
and
add
loope
out
inc
xchg
out
loopne
pop
or
inc
or
mov
xchg
dec
imul
mov
lea
inc
dec
dec
sub
and
fs
andl
mov
mov
out
pop
sbb
dec
mov
adc
dec
sbb
or
sub
pop
sti
sub
and
arpl
xchg
add
mov
in
mov
in
out
mov
incl
inc
inc
aaa
mov
jp
jbe
rcrb
xor
cmp
dec
rorb
jbe
ret
mov
push
adc
rclb
std
mov
or
add
push
pop
and
cltd
mov
or
repnz
jo
mov
dec
pop
jg
fiaddl
dec
push
in
scas
pushf
shlb
loope
xlat
sub
adc
or
loopne
add
loopne
jg
inc
add
inc
shll
lods
fdivp
adc
jb
scas
xorl
cmpsb
ja
sbb
shlb
push
shl
lea
lods
add
fcompl
cwtl
loopne
jmp
jno
das
stos
movsb
xchg
fcmovu
xlat
in
xor
idiv
mov
cmpsl
lea
shl
xchg
xor
test
subb
in
dec
and
pop
je
test
and
fldenv
push
je
pusha
stos
cwtl
lock
and
and
cli
fwait
jp
add
mov
jae
xor
hlt
jno
mov
mul
movq
sbb
and
sub
sub
push
scas
xchg
pop
arpl
es
adc
add
loopne
fs
aas
xchg
push
ja
movsb
add
and
jns
jmp
je
sub
outsl
push
xor
roll
mov
fdiv
push
mov
push
mov
xchg
xlat
lret
lods
mov
mov
pop
inc
int3
push
xchg
and
cs
dec
cli
loop
xchg
fldt
pop
mul
sti
scas
sbb
push
ljmp
int
cld
std
nop
addb
push
dec
push
pop
and
in
psubd
push
inc
sbb
and
ds
ret
in
je
lea
adc
cmc
sahf
cmc
cmc
push
jno
int
cmpsb
pop
maskmovq
ds
mov
adc
das
imul
cmc
dec
inc
or
lods
xchg
xor
push
and
loop
adc
call
stc
ret
fwait
and
filds
es
aad
jo
pop
sahf
xlat
pop
hlt
sub
mov
in
push
push
test
dec
call
sub
repnz
pop
jle
div
and
int3
add
dec
dec
fmulp
jecxz
mov
inc
icebp
or
jmp
test
push
fistl
and
cmpsl
leave
jae
sub
rep
and
add
mov
xor
call
ja
aas
mov
push
inc
fldl
or
neg
outsb
repz
lods
pop
movsb
jno
xchg
mov
fstps
std
stc
push
dec
out
enter
insl
pop
bound
and
cld
xchg
jae
mov
jns
lods
rcrb
jbe
or
or
imul
iret
outsl
and
int3
int3
xor
or
ficomps
out
push
test
push
jg
cmp
sub
mov
psadbw
add
push
pop
or
loopne
les
or
xchg
xchg
add
sbb
cmp
fwait
cmp
shrl
out
insl
push
adc
incb
xor
fcmovnbe
data16
sub
test
pop
pop
jne
fs
in
push
xchg
pushf
loopne
imul
andl
and
sbb
or
or
inc
lcall
getsec
adc
mov
out
xchg
jnp
push
movsl
mov
mov
and
cmpsb
or
test
sub
ret
ret
mov
adc
add
das
mov
or
pusha
ja
or
jle
out
cmp
imul
inc
jl
jge
dec
and
inc
cmp
cltd
push
cmc
ja
jge
jne
jl
jp
imul
fsts
push
mov
cmpsl
mov
and
das
or
aaa
xor
mov
sbbl
sub
mov
lods
pop
dec
sarl
rolb
lret
mov
push
fdivs
lock
inc
cli
mov
ss
fadds
cmp
shlb
or
in
mov
aaa
cltd
add
out
or
xchg
cmp
cmp
pusha
pop
ljmp
rcll
rclb
cmpsl
addb
pop
loope
mov
and
hlt
mov
mov
add
cli
inc
and
pop
mov
es
pop
add
popf
adc
mov
inc
icebp
cs
fsubrp
iret
mov
scas
inc
pop
pop
ja
int
insb
sahf
cmp
inc
cmpsl
mov
add
aad
pop
jae
sub
mov
ljmp
xor
in
data16
in
xchg
xchg
jg
add
inc
xlat
fstpl
into
xor
das
sbbl
fadd
scas
repnz
cwtl
les
or
cwtl
sub
xorb
sub
aam
mov
mov
test
jae
jno
or
inc
sbbl
xlat
xchg
sbb
or
or
mov
out
or
arpl
out
cmpsb
add
fisubrs
data16
mov
pop
xor
add
call
movsb
lret
push
mov
adc
mov
mov
inc
mov
das
aaa
sub
cs
pop
loopne
arpl
and
shrl
inc
insl
pusha
popf
dec
cmp
out
xor
jne
xchg
xchg
xor
stc
or
sbb
ror
cmp
push
sbb
orb
pop
sub
clc
mov
mov
push
lds
ljmp
aam
sub
xchg
mov
lods
sbb
ret
xlat
add
stos
inc
ss
push
jbe
mov
and
shlb
xchg
dec
xchg
pop
repnz
and
xchg
lea
jge
push
int3
in
js
hlt
and
imul
dec
loope
movsl
nop
jo
outsb
adcl
xor
pop
mov
adc
sbb
in
das
add
loopne
mov
sbb
jno
les
cmp
fbstp
fistl
and
cmp
insb
loopne
push
shl
and
test
xchg
cmp
call
sbb
enter
jmp
add
or
mov
cmp
ret
add
mov
jae
aaa
pop
sahf
lds
out
cwtl
test
rorb
dec
pushf
push
and
sub
fnstcw
incl
xchg
adc
or
loopne
push
sarb
xor
in
xchg
or
and
cmp
xor
rcl
xor
es
cmp
lret
inc
fcmovb
movb
addr16
cld
adc
loopne
jge
popa
shl
mov
xor
dec
insl
jg
outsb
jae
sbb
pusha
arpl
out
jmp
fisubl
sub
loopne
xor
paddq
inc
test
and
loope
loop
sbb
mov
lahf
add
inc
cwtl
jl
int3
mov
jne
inc
loopne
jge
daa
loop
stos
sbb
leave
push
mov
test
icebp
test
sahf
cmp
xor
or
adcb
pushf
cld
xorb
pusha
and
cmpsb
jle
int3
fisttpll
xchg
nop
mov
loopne
loopne
mov
cmp
out
xchg
loopne
das
popa
sub
adc
inc
stc
sbb
cs
xlat
lds
inc
gs
daa
hlt
and
ja
xlat
dec
mov
jns
inc
inc
cli
xor
push
outsl
stos
lock
pusha
or
add
stos
jmp
out
lea
pop
leave
jecxz
repnz
loopne
mov
add
stos
mov
nop
rolb
cmp
lock
sbb
repnz
fcmovbe
xchg
leave
stc
inc
pop
sub
test
movb
jmp
daa
push
mov
cli
xchg
xchg
and
inc
je
xchg
mov
rorb
xor
mov
bound
cmp
in
dec
dec
add
add
and
sbb
inc
push
lds
jae,pt
and
sbb
adc
popa
cmp
or
and
out
cmp
shlb
shrl
imul
adc
push
jecxz
jg
push
jbe
inc
or
push
out
add
push
aad
push
rolb
inc
pop
aas
push
rorl
and
xlat
stc
mov
rcl
cs
enter
stos
mov
repnz
cmp
add
xchg
es
scas
adc
pop
iret
pmaxsw
loop
arpl
in
daa
loopne
js
dec
sub
adc
cmp
mov
stc
mov
faddl
pushf
addb
lock
cld
ljmp
pushf
je
mov
jno
enter
cmpl
cld
sub
repz
and
sbb
outsb
mov
cmp
outsl
push
pop
mov
out
inc
dec
or
ljmp
cmp
rcll
dec
notl
dec
fdivrp
mov
mov
stos
leave
repz
loope
add
scas
lret
dec
lcall
ja
punpcklwd
aam
repz
pusha
add
xchg
mov
xor
mov
sbb
loopne
dec
scas
aam
mov
imul
push
test
pusha
cld
sub
sbb
lock
sub
adc
stos
inc
arpl
jg
mov
xchg
lcall
xor
inc
pop
aaa
dec
inc
add
lock
mov
mov
sub
popf
xor
inc
xchg
xorb
xor
bound
or
pop
bound
scas
ljmp
test
and
mov
mov
mov
sbb
imull
nop
jl
aam
pushl
adc
nop
cmp
jae
pop
sti
fwait
cmp
cmp
outsl
fbld
stos
je
jns
pop
bound
push
test
xorl
mov
test
jmp
ret
in
mov
push
and
cmp
fsubs
xor
jle
cmpsb
cmp
mov
das
data16
enter
mov
xchg
shlb
dec
loopne
mov
mov
xlat
std
fs
stos
arpl
out
pop
ljmp
mov
mov
popf
loope
loope
ficoms
mov
xchg
es
xchg
nop
inc
and
setnp
cmp
xchg
arpl
cmc
std
loop
std
outsl
mov
cvttps2pi
cmpl
ss
adc
call
dec
negl
loopne
pop
nop
cld
add
sti
pop
cltd
dec
xchg
je
pop
pop
enter
shlb
sub
lds
and
cli
mov
or
mov
aaa
push
jle
xchg
imul
mov
add
pop
mov
dec
and
cs
cld
gs
mov
pop
pop
fidivrs
cwtl
sub
jl
popf
pushf
add
or
or
jbe
jo
into
pop
sub
fisttps
inc
cld
in
inc
pushf
push
add
jb
or
rsqrtps
jg
fldcw
fisubs
mov
leave
sahf
inc
dec
xchg
lock
mov
pusha
pusha
push
movsb
test
pop
out
imul
xchg
push
mov
push
sub
nop
pushf
inc
push
daa
subb
loopne
pusha
pop
or
shl
clc
rolb
rolb
inc
and
pop
xchg
sbb
pop
aas
in
cltd
movsb
sbbb
sbb
shrb
adc
and
inc
add
mov
pop
shlb
addl
pushw
ljmp
test
insb
in
je
xchg
ds
jo
outsl
xlat
lret
in
in
frstor
inc
jge
pop
dec
inc
fmull
nop
adc
imul
push
cmp
insb
add
add
cmpsb
sbb
stc
orb
pop
movsl
push
xchg
aaa
pop
cmpsb
or
jg
pop
idiv
xchg
add
fldt
xor
inc
mov
loopne
inc
je
mov
rcrl
fcmovb
ficompl
mov
sub
inc
imul
adc
pop
push
pusha
fisubrs
ror
jbe
push
out
test
test
mov
mov
pop
jnp
add
cmp
in
dec
dec
jae
sarl
ljmp
jno
pop
rolb
mov
jbe
jp
mov
mov
xchg
sbb
in
in
sbb
push
jmp
sub
dec
dec
or
or
sarb
or
rcr
out
cld
mov
mov
mov
mov
and
enter
add
ljmp
fcomi
xor
lods
cs
loop
scas
sbb
call
push
add
mov
xor
inc
adc
into
movsb
decl
shlb
jle
push
push
clc
int3
repnz
jo
pop
iret
lret
mov
push
xlat
inc
into
test
lods
inc
push
sbb
add
sub
negb
lods
mov
xchg
shl
sahf
sti
jns
add
cltd
icebp
divb
hlt
inc
fldt
int3
xchg
cmp
test
out
sbb
inc
sarb
lahf
and
xor
addb
push
sbb
ja
cli
lahf
into
push
ja
pop
mov
sbb
push
shlb
sbb
and
stos
adc
and
sbb
pusha
into
cld
mov
in
or
sti
inc
clc
add
mov
mov
gs
ds
fsubr
rcll
jo
aaa
xchg
and
jl
dec
cltd
sbb
std
and
in
int
mov
inc
cmp
sub
add
stos
aaa
jbe
pop
mov
ror
mov
les
push
in
test
and
addb
mov
loopne
cmp
xorl
pop
enter
mov
fldcw
ror
and
jle
sarb
push
cmpl
out
jg
aas
cwtl
mov
xchg
inc
xor
add
nop
test
mov
and
push
insl
popa
aas
sub
mov
push
xor
loop
das
adc
mov
lock
pop
mov
mov
push
loope
stc
push
in
stos
or
cmpsl
push
push
fidivl
cmp
fiaddl
cmp
xor
mov
pusha
pushf
and
or
test
jne
call
and
loopne
pop
loop
mov
jmp
adc
mov
mov
outsb
and
outsb
mov
jl
fsubl
mov
sbb
std
sub
mov
jbe
fcompl
jnp
aam
push
push
mov
cwtl
and
mov
mov
add
repz
in
clc
adc
dec
out
sub
add
shrb
push
add
insb
jp
mov
icebp
es
js
xor
xchg
sub
xor
fistpll
kmovw
imul
cmpsl
sbb
pusha
ljmp
inc
push
test
fs
aam
adc
and
adc
push
mov
outsl
inc
iret
sbb
and
adc
inc
shl
in
jmp
fsubrp
nop
pusha
rcrb
xor
adc
inc
fs
clc
incl
out
ja
cmc
ficompl
in
xlat
fistps
hlt
mov
or
add
sarl
in
xor
loope
stos
xchg
xor
cmp
and
cli
push
cmpl
adc
xchg
mov
xchg
cmp
adc
cmpsb
jle
loopne
pop
ret
ret
add
mov
std
insl
cmpb
int
mov
mov
pushl
jg
dec
gs
add
cmp
testl
mov
mov
addl
jmp
xor
cmp
lds
jmp
shll
fimull
int3
pusha
insl
add
data16
fcmovb
jge
neg
ljmp
xor
mov
or
lahf
adc
xor
push
repnz
cmpl
inc
movsb
inc
pop
enter
mov
outsb
js
stos
je
mov
ret
mov
in
inc
or
lcall
test
cmp
movsl
dec
std
lods
bound
jmp
leave
pop
add
das
mov
adc
mov
mov
inc
xchg
sub
jno
push
jb
js
psubsw
adc
loopne
gs
xor
mov
mov
stc
push
cmp
out
push
xchg
sub
daa
pop
or
mov
xchg
xchg
js
into
cmp
xchg
mov
jae
stos
stos
outsb
cmp
cld
rclb
fdivrs
test
lret
jmp
inc
test
xchg
lock
push
iret
decl
and
pop
inc
sub
xchg
mov
adc
and
inc
pop
sub
shll
cwtl
mov
or
std
js
je
cmp
into
cli
add
xchg
cmpsb
ja
popf
jmp
fimuls
outsl
inc
xor
mov
sub
push
xlat
hlt
cld
pop
mov
or
sub
pop
push
outsb
dec
ret
mov
sub
add
in
leave
pop
mov
int3
mov
das
lock
xchg
shl
sub
sub
clc
lods
stos
sub
mov
enter
push
aam
jle
jns
mov
rol
inc
shlb
xor
mov
push
jle
or
add
and
lods
js,pn
test
les
jbe
rorb
and
in
es
lods
xchg
cmpb
push
mov
test
jle
dec
mov
sbb
xor
jns
mov
imul
xor
test
add
setl
cs
popf
mov
xlat
imul
cmp
rorb
stos
dec
out
mov
dec
push
outsb
out
and
push
scas
cmp
pop
add
pusha
cmp
mov
imul
push
adcb
in
cwtl
pushf
mov
mov
xchg
mov
outsl
mov
push
loopne
add
adc
add
lcall
sar
fstps
xchg
test
test
mov
and
int
movsb
dec
aaa
jnp
mov
cmc
or
mov
xchg
loopne
movsl
inc
sbb
mov
adc
loopne
icebp
pop
add
pop
cmpsb
lds
xor
std
sti
mov
outsb
ja
or
xorb
cmc
xchg
in
data16
sbb
imul
stos
inc
jg
mov
fwait
pop
mov
mov
leave
dec
and
sub
and
out
js
call
pusha
dec
mov
and
rcl
mov
movsb
add
ss
pusha
ret
pop
or
pusha
int
jo
dec
test
cmc
sti
sub
les
pusha
imul
jmp
loop
mov
jmp
fisttpl
scas
pop
mov
ficoms
loop
pop
and
jl
ret
jle
adc
loopne
inc
pop
inc
test
xchg
xchg
cmp
das
ds
mov
movsl
pusha
fsts
and
and
data16
pop
mov
lcall
pop
xchg
sub
sar
lds
mov
fisttps
xchg
and
arpl
rcr
lods
aad
sub
cmp
in
lret
sahf
cmc
cmp
out
mov
aad
dec
jmp
inc
lock
inc
and
inc
mov
outsb
out
sbb
xchg
movsb
cmpsl
xchg
xor
push
xor
fwait
pop
fadd
pop
ficompl
pushf
inc
js
cmp
loope
jmp
loopne
arpl
lock
es
les
jbe
pushl
xor
ljmp
mov
rcrb
pusha
pop
mov
shr
sarb
test
push
xor
mov
jns
adc
in
mov
ret
add
negb
mov
and
int
fs
xchg
aam
dec
mov
jns
fisttpl
sub
inc
dec
push
xchg
insl
aad
inc
mov
xlat
push
out
outsl
push
loope
lds
mov
dec
mov
jns
sub
js
enter
ret
arpl
xor
test
or
xor
in
scas
lahf
fidivrl
aam
xor
mov
lods
ret
xor
das
push
xor
mov
popl
fidivrl
notb
push
add
ror
out
stc
add
sub
bound
fcoml
cmp
and
lcall
lcall
cmp
std
pop
pop
insl
into
cld
sbb
rcrb
leave
arpl
shlb
mov
push
std
sub
mull
inc
test
popf
mov
ds
pop
xor
pop
inc
inc
mov
lahf
data16
inc
insb
lcall
out
test
mov
jnp
jg
xchg
adc
nop
sbb
dec
or
sub
dec
fxtract
popa
sub
pop
andl
sarb
push
lahf
mov
jg
and
xorl
inc
mov
shrb
int
pop
cld
jns
fnsave
mov
and
cmc
fstpt
xlat
aad
add
cmpb
into
mov
cwtl
inc
sub
and
cmpsb
and
xor
push
pusha
mov
mov
shlb
mov
aaa
test
or
sub
jae
in
imul
in
or
loopne
jo
addb
add
cmp
sub
out
pause
test
and
xchg
jnp
das
jmp
and
xchg
xchg
push
cld
fisubs
add
sbbb
fdivs
roll
or
in
or
or
icebp
push
dec
stc
push
dec
lcall
mov
dec
aas
adc
lret
call
sub
push
mov
add
lea
and
push
push
push
push
cld
push
push
push
test
xchg
je
jmp
js
inc
add
or
add
shr
add
push
push
push
call
leave
ret
ret
xchg
mov
mov
or
add
add
lea
sub
shr
dec
not
sub
mov
jne
push
pop
add
lea
stc
jmp
jmp
push
mov
sub
lea
orl
andl
push
push
cmp
jne
call
and
jne
loope
dec
and
push
push
push
call
mov
lea
test
je
mov
and
test
and
out
mov
mov
enter
pop
insb
sub
cmp
sti
sub
sub
mov
sub
xchg
mov
xchg
and
jns
mov
or
pop
aam
and
movsb
popa
out
inc
push
sarb
iret
nop
mov
sahf
iret
jmp
jg
xchg
sbbl
lock
or
jb
mov
dec
or
dec
stos
push
mov
shr
ja
and
sbb
clc
jle
scas
ja
insb
mov
pop
mov
pop
lock
add
dec
sub
push
sti
nop
sbb
and
nop
cmp
add
inc
jb
in
mov
add
jle
movsl
inc
add
sub
pop
cmp
inc
add
test
sub
xchg
xor
or
repz
leave
lret
jnp
cmc
mov
cwtl
mov
push
mov
or
cmp
push
sub
xlat
jne
mov
jl
je
xchg
popf
mov
clc
mov
ret
je
scas
sbb
shl
jl
cld
and
out
idiv
xchg
xor
in
push
lret
sub
imul
test
adc
inc
mov
jb
inc
push
cltd
sti
imul
movsl
lahf
ljmp
pushf
cmp
test
cmp
xchg
jae
mov
test
push
cmp
ret
mov
dec
outsl
loope
and
out
sub
adc
insl
pop
push
popf
add
and
jl
adc
loopne
pushw
jns
jne
scas
pusha
sub
sbb
repnz
sub
insl
push
aad
push
orb
or
adc
shrb
out
jl
clc
xor
cmp
pop
cli
pop
or
cmpb
jle,pt
pop
cmc
int3
arpl
cs
add
dec
sarb
sub
jmp
sbb
mov
lock
test
add
add
sti
jb
push
dec
and
pop
rcrl
cwtl
mov
cli
push
inc
loop
out
hlt
ret
cmp
inc
jbe
xor
add
adc
and
mov
loopne
and
mov
cmp
dec
ret
sub
cmpsl
push
mov
mov
dec
inc
inc
addr16
add
push
sub
cs
push
jmp
je
cli
sbb
and
push
mov
push
lock
ret
idivl
sub
in
std
je
adc
mov
cmp
push
rcll
fwait
sbb
popa
sub
int3
loopne
jne
call
or
cmp
adc
push
into
push
repnz
dec
aad
rcrw
lret
pop
mov
inc
xchg
pop
icebp
xchg
out
daa
xor
pop
pop
mov
push
xchg
mov
mov
inc
imul
push
jp
mov
cmp
pushl
imul
fwait
das
test
pusha
push
xor
dec
mov
outsl
cmp
mov
cmpsl
test
repz
xor
push
xchg
loope
es
dec
sti
aad
rolb
inc
cmp
test
cmp
mov
jns
push
cmp
cld
call
loop
jnp
sub
ret
mov
push
add
scas
jge
mov
in
sahf
dec
ficompl
test
out
dec
jg
pop
mov
aad
faddl
add
out
into
jb
jae
fldenv
push
outsl
fs
adc
adc
dec
mov
jp
xchg
push
inc
pop
or
jl
or
and
pop
dec
test
pusha
and
js
jno,pt
ret
push
gs
pop
mov
test
sub
push
inc
mov
mov
mov
add
outsb
lds
dec
jmp
or
jmp
repnz
loop
lcall
jmp
ret
and
dec
or
hlt
jnp
xor
test
mov
test
mov
out
inc
adc
mov
ficompl
js
mov
add
inc
xchg
out
gs
mov
test
xchg
loopne
mov
test
cmp
mov
std
inc
sahf
mov
ret
popl
shrl
addr16
xlat
icebp
jo,pn
repnz
ss
mov
sbb
cltd
rorl
ss
xchg
and
popf
push
pop
stos
fidivrl
lock
in
adc
inc
mov
leave
cmp
fsub
add
pushf
sub
in
mov
cmpsl
push
mov
push
push
popa
lods
pop
adc
fldcw
repnz
dec
pop
movsl
inc
lcall
and
inc
arpl
add
add
mov
jg
adc
add
rcr
sbb
mov
or
leave
arpl
xchg
in
mov
dec
in
cmpl
add
shll
ss
shrl
or
clc
imul
pop
js
gs
xor
xor
pusha
pop
sub
inc
loopne
scas
stc
xor
aam
les
scas
adc
and
insl
sub
inc
push
iret
cwtl
aam
push
or
inc
pop
aad
xchg
mov
jnp
in
sub
and
mov
push
sub
stos
xchg
mov
xchg
xchg
call
shrl
xor
leave
in
outsl
repz
and
lock
mov
push
sbb
ss
lahf
jns
fdivrs
fldcw
nop
clc
shlb
les
inc
in
and
mov
aaa
ficoml
lret
pop
and
mov
out
addb
dec
and
rcrb
and
xor
add
scas
push
lret
mov
std
test
inc
cmp
lret
aam
mov
mov
jo
fwait
cmp
pop
or
shlb
lahf
cmp
js
push
jge
repnz
andb
add
movb
push
popa
sbb
push
sub
jns
pop
mov
pop
jno
sub
sar
add
arpl
sub
sarl
clc
xorb
pop
shlb
and
repnz
dec
mov
mov
xchg
movsl
sub
add
rol
add
lahf
mov
and
push
mov
pop
push
lods
outsl
cmc
push
negb
jb
sbb
mov
inc
ja
loopne
clc
cmp
in
sub
jne
nop
cwtl
loopne
jns
ss
xor
cmp
jo
mov
in
dec
inc
sub
pushf
sub
jmp
mov
xchg
lret
popf
out
lret
gs
xor
or
inc
and
jmp
and
pop
mov
xchg
fistpll
cmpb
lock
jge
lret
loopne
push
xor
push
lret
mov
push
cmpb
push
pusha
lods
inc
lcall
cmp
dec
pop
jg
enter
cmp
jmp
mov
cs
jne
sub
and
xchg
out
lods
fimull
shll
sub
std
push
pop
xchg
int3
int
xor
mov
in
stc
cmp
jne
lahf
dec
daa
dec
jbe
test
pop
add
cld
push
push
xchg
call
xchg
lea
fnstsw
xchg
jl
shll
rolb
insb
sbb
add
lods
pop
shl
icebp
imul
ret
addr16
mov
lret
jae
inc
xor
push
cmpsl
aam
adc
popa
stc
pop
into
add
add
sbb
js
pushf
lock
mov
inc
icebp
out
into
xor
mov
or
or
loopne
dec
sbb
and
roll
mov
push
pop
add
sbb
out
mov
xor
cwtl
je
popf
cmpsb
push
push
or
fcomip
cmp
mov
out
push
cld
pop
mov
psrad
push
insb
loopne
or
mov
push
loopne
bound
rcll
out
repnz
mov
nop
cld
mov
and
leave
mov
jle
outsb
inc
call
bound
ret
cwtl
inc
loopne
cmp
loop
mov
bound
push
rol
xor
ret
mov
xchg
pushf
adc
nop
loopne
std
cs
movsl
push
push
outsb
rolb
call
ss
or
clc
push
push
orb
mov
gs
aam
pop
testb
xchg
cmp
stos
jnp
sbb
rclb
mov
outsb
clc
mov
mov
jns
sub
mov
mov
in
scas
and
dec
add
loopne
or
add
movsb
xor
mov
or
xor
outsl
and
cmp
xchg
add
sar
sbb
adcb
pop
popa
mov
mov
nop
xor
cmpsl
and
mov
popf
mov
xor
mov
push
adc
jb
push
sbb
insb
mov
push
lds
hlt
fcompl
loop
fbstp
pop
imul
jno
aas
inc
dec
insb
cmp
mov
mov
push
out
mov
or
push
add
inc
xor
test
push
fwait
mov
leave
ret
pmaxub
cld
sub
mov
andb
add
scas
rorl
pop
test
popa
xchg
rcll
inc
sbb
mov
ja
mov
jb
stos
ja
jp
add
add
pusha
add
test
les
mov
lds
pusha
jp
ds
rorl
enter
leave
cmp
xor
mov
arpl
inc
xchg
cmp
jl
sbb
leave
pop
jbe
dec
and
push
adc
inc
sub
pop
sbb
inc
mov
in
dec
test
xchg
mov
jmp
stos
in
pop
adcl
inc
jle
addr16
mov
enter
jbe
dec
pop
push
les
add
roll
mov
xchg
lods
cmp
xchg
pop
call
outsl
lock
mov
scas
dec
hlt
mov
xor
imul
dec
sbb
rcrb
sub
mov
fs
sahf
sbb
pusha
jp
cmp
out
mov
xor
mov
dec
insb
push
pop
sbb
mov
pop
test
orb
sbb
inc
and
add
xchg
push
out
mov
pusha
and
mov
add
sbbb
and
repnz
cmpsl
add
inc
pmuludq
loop
std
add
pop
repnz
out
fldln2
mov
dec
or
add
mov
sbb
jb
mov
cmpsb
push
in
iret
jg
sahf
push
cmp
mov
mov
fisubs
dec
cmp
shrb
sub
mov
mov
in
xchg
push
mov
repnz
pop
ret
adc
cmpb
sub
sub
sub
pop
or
fadd
push
or
cltd
mov
icebp
loop
inc
mov
or
mov
shrl
cmp
sbb
jmp
orl
hlt
pop
adc
out
cli
sbb
icebp
sub
lahf
lret
jge
dec
arpl
inc
push
sbb
fucom
std
sub
xchg
or
sbb
sub
std
xchg
push
out
inc
loope
dec
push
pop
adc
mov
jmp
dec
pop
mov
fistpll
cmpb
addr16
jbe
js
xchg
pusha
ss
pop
mov
pop
stc
inc
sti
cmpsl
pop
jns
xor
dec
cmp
mov
aad
jge
hlt
jle
jg
push
xchg
push
mov
gs
sahf
lea
ror
xor
stc
inc
cltd
mov
or
and
inc
ja
dec
jno
xchg
loopne
and
mov
lock
pusha
adc
loopne
aam
hlt
cmp
jno
dec
and
mov
ret
stc
push
ja
stos
jecxz
xchg
leave
addr16
shr
aam
or
dec
mov
fsubs
shlb
sub
inc
add
jns
and
sbb
test
ficoml
cwtl
xor
hlt
inc
fldenv
pop
mov
sahf
ja
cmp
out
cwtl
pusha
gs
popf
lcall
mov
mov
xchg
inc
and
or
loopne
leave
cmpsl
rorb
std
out
pop
mov
jne
or
loopne
icebp
add
aad
subb
mov
push
push
push
push
pop
stc
inc
mov
gs
add
sub
pop
adc
out
je
xor
mov
fidivs
jo
cmpsb
ds
jmp
and
and
xchg
jo
fisubrl
or
cmp
outsl
mov
xor
push
mov
dec
add
fstps
repnz
les
test
and
lods
sub
in
jbe
sbb
and
movsl
cmp
dec
and
fnstcw
ljmp
jnp
add
fnsave
and
mov
test
mov
imul
lods
inc
scas
mov
push
xchg
out
inc
xchg
push
or
mov
sub
int3
loopne
push
mov
push
mov
adc
loopne
ljmp
mov
adc
cwtl
adc
aas
ret
test
add
inc
or
pop
jg
es
or
or
daa
ss
imul
and
xchg
clc
push
pushf
inc
adcb
outsl
incb
sbb
mov
inc
imul
fbld
push
xlat
xor
xlat
cmpsl
rcl
imul
sub
push
adc
add
mov
xchg
xor
mov
xlat
repnz
or
nop
and
insl
adc
push
mov
mov
bound
mov
into
sbbb
or
mov
into
mov
arpl
rcrl
loopne
or
clc
stos
inc
loop
and
fdivrs
aas
mov
jp
sub
adc
adc
loopne
push
jnp
enter
fstps
sub
xchg
push
clc
nop
nop
nop
nop
jae
testb
add
add
add
xor
dec
popa
clc
nop
nop
nop
nop
jae
add
dec
add
add
das
cmp
push
clc
nop
nop
nop
nop
jae
and
add
and
add
pop
xlat
push
clc
nop
nop
nop
nop
jae
add
mov
mov
mov
xor
push
mov
filds
xchg
and
add
add
sahf
imul
add
orb
clc
nop
nop
nop
nop
jae
add
add
jnp
add
dec
add
push
clc
nop
nop
nop
nop
jae
mov
add
add
rolb
nop
nop
nop
nop
jae
add
or
add
add
push
add
add
push
mov
xchg
ret
testb
sub
nop
nop
nop
nop
jae
add
cmp
add
mov
imul
jge
add
pop
and
sbb
cmp
nop
nop
nop
nop
jae
imul
add
test
in
add
add
add
mov
pop
movb
sbb
nop
nop
nop
jae
cli
add
mov
aaa
das
push
clc
nop
nop
nop
nop
jae
imul
das
xchg
rcr
add
test
push
xchg
test
add
nop
nop
nop
nop
jae
xchg
push
loopne
add
xchg
pop
push
clc
nop
nop
nop
nop
jae
add
add
add
add
push
mov
leave
cs
scas
add
add
mov
nop
push
mov
leave
cs
push
add
add
xchg
inc
sub
add
adcl
and
push
mov
leave
cs
push
add
and
add
add
loop
add
clc
nop
nop
nop
nop
jae
add
sub
add
add
jns
inc
in
nop
nop
nop
nop
jae
addl
outsb
add
loopne,pn
dec
push
fistpl
push
mov
xchg
ret
mov
loopne
lea
dec
add
add
rcll
add
add
mov
add
dec
jno
add
add
out
cmpsl
lea
clc
nop
nop
nop
nop
jae
rolb
andl
cmp
in
leave
cs
inc
cli
orl
aaa
mov
nop
push
mov
leave
cs
add
pop
scas
and
add
add
inc
add
xor
add
mov
add
mov
out
nop
push
mov
leave
cs
add
push
mov
add
pop
push
mov
xchg
ret
dec
pop
faddl
pop
add
cld
mulb
push
mov
xchg
ret
xchg
jecxz
shlb
add
pop
cmc
fwait
push
mov
xchg
ret
add
add
push
add
add
insb
push
ja
cli
clc
nop
nop
nop
nop
jae
jns
add
add
push
add
out
mov
clc
nop
nop
nop
nop
jae
cld
add
xorl
fbld
add
mov
add
cmp
clc
addr16
nop
push
mov
leave
cs
add
mov
cmp
mov
fwait
push
clc
nop
nop
nop
nop
jae
add
sti
add
add
cmp
add
nop
push
mov
leave
cs
add
add
add
and
notb
push
mov
leave
cs
add
add
add
adcl
add
add
add
jge
xor
add
xchg
and
mov
xchg
ret
add
movb
add
addl
jne
nop
push
mov
leave
cs
rolb
rolb
add
mov
clc
nop
nop
nop
nop
jae
and
adc
test
sbb
add
nop
nop
nop
nop
jae
push
add
mov
xchg
add
movb
mov
xchg
ret
add
loopne
add
pop
mov
nop
push
mov
leave
cs
xor
or
add
dec
inc
add
nop
push
mov
leave
cs
add
mov
inc
lea
add
nop
push
mov
leave
cs
add
add
add
sub
xor
nop
nop
nop
nop
jae
sub
add
sub
jne
push
mov
mov
icebp
seto
add
test
cmp
clc
nop
nop
nop
nop
jae
add
jecxz
fcoms
add
add
add
nop
nop
nop
nop
jae
cmp
add
std
push
mov
lea
add
test
sbb
addb
add
nop
leave
add
test
pushf
loopne
add
popl
xchg
ret
sti
add
add
sub
add
add
push
fwait
clc
nop
nop
nop
nop
jae
push
or
xor
add
das
jge
je
call
clc
nop
nop
nop
nop
jae
rol
and
imulb
and
pop
add
push
mov
xchg
ret
testb
add
xchg
add
test
mov
jno
jne
push
mov
xchg
ret
mov
push
mov
xor
adc
arpl
xchg
ret
int3
and
add
or
enter
fsubs
gs
push
mov
xchg
ret
mov
xchg
add
add
cmp
xor
nop
push
mov
leave
cs
add
cmp
xchg
ficomps
popa
inc
add
add
add
add
add
sub
mov
pushf
cli
clc
nop
nop
nop
nop
jae
add
push
mov
cld
faddl
stc
add
clc
nop
nop
nop
nop
jae
add
or
cmp
xchg
xchg
or
sar
add
push
mov
xchg
ret
jne
outsb
add
movb
add
inc
sbb
loopne
mov
mov
xchg
ret
add
and
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
mov
andl
nop
nop
jae
test
push
inc
repnz
nop
nop
nop
nop
jae
scas
rolb
jge
mov
xchg
cmp
push
clc
nop
nop
nop
nop
jae
cmp
add
mov
inc
cltd
add
push
mov
xchg
ret
add
add
add
add
xor
push
pop
fwait
nop
push
mov
leave
cs
mov
jecxz
lea
xor
xchg
push
inc
dec
mov
clc
nop
nop
nop
nop
jae
xchg
inc
add
pop
jnp
add
lret
clc
clc
nop
nop
nop
nop
jae
add
add
push
sti
add
nop
nop
nop
jae
jecxz
jns
sti
and
xchg
add
xchg
cmp
nop
nop
jae
add
sub
add
or
int3
xor
in
add
scas
movsb
imul
sti
pop
add
inc
fisttpl
nop
nop
nop
jae
add
sub
mov
clc
nop
nop
nop
nop
jae
sub
rclb
add
and
nop
push
mov
leave
cs
add
add
mov
sbb
mov
push
mov
xor
add
add
aas
sahf
stc
add
adc
add
add
mov
clc
nop
nop
nop
nop
jae
testb
add
repnz
pop
push
mov
xchg
ret
loopne
add
rolb
add
mov
movswl
clc
nop
nop
nop
nop
jae
cmp
add
push
clc
nop
nop
nop
nop
jae
add
imul
mov
xchg
ret
pop
mov
inc
add
sub
and
push
jne
clc
nop
nop
nop
nop
jae
add
add
add
mov
pop
add
clc
nop
nop
nop
nop
jae
xchg
dec
or
and
lret
push
clc
nop
nop
nop
nop
jae
add
mov
push
testb
push
fld1
clc
nop
nop
nop
nop
jae
add
add
or
sub
xor
adc
nop
nop
nop
jae
add
dec
add
loopne
fbld
nop
nop
nop
nop
jae
add
inc
xchg
add
add
nop
nop
nop
nop
jae
cmp
add
xor
pop
call
nop
nop
nop
nop
jae
and
mov
mov
xchg
add
and
jl
ret
pop
push
mov
xchg
ret
add
xor
push
sub
jecxz
lea
add
clc
enter
idiv
clc
nop
nop
nop
nop
jae
add
add
lea
nop
nop
nop
nop
jae
cmp
add
mov
cmp
mov
leave
cs
push
mov
inc
loopne
das
fld1
nop
push
mov
leave
cs
cmp
push
jnp
addl
jge
clc
nop
nop
nop
nop
jae
cld
add
xchg
mov
cmp
nop
nop
nop
jae
add
add
imul
adc
imul
in
leave
cs
outsb
sti
fsubrl
push
adcl
add
nop
push
mov
leave
cs
add
mov
sub
add
clc
nop
nop
nop
nop
jae
add
add
add
testb
movsl
mov
push
mov
xchg
ret
lea
push
add
rolb
cmpl
and
mov
xchg
ret
jecxz
mov
and
mov
mov
xchg
ret
addl
add
inc
sub
fstpl
nop
nop
nop
nop
jae
add
add
xchg
jns
mov
xchg
flds
add
nop
nop
nop
nop
jae
xchg
add
xchg
add
mov
jo
test
mov
xchg
ret
add
jne
xorl
inc
push
daa
call
clc
nop
nop
nop
nop
jae
add
xchg
mov
testb
jnp
movl
add
addl
add
add
add
rclb
nop
nop
nop
nop
jae
add
add
jns
outsb
add
fsubr
repnz
clc
nop
nop
nop
nop
jae
and
and
add
div
nop
push
mov
leave
cs
add
mov
cli
xchg
testb
orb
add
add
xor
add
add
add
movsl
mov
push
mov
xchg
ret
add
lea
mov
cmp
in
loopne
add
push
mov
xchg
ret
add
aaa
inc
mov
mov
mov
jmp
nop
jae
or
rolb
mov
loopne
sub
cmp
out
add
nop
nop
nop
nop
jae
movb
cmp
dec
cmp
nop
nop
nop
nop
jae
jecxz
add
mov
add
push
mov
xchg
ret
jne
add
add
add
nop
push
mov
leave
cs
scas
add
aaa
add
or
pop
clc
nop
nop
nop
nop
jae
add
inc
add
or
mov
push
add
xchg
cmc
add
nop
push
mov
leave
cs
add
xchg
xor
push
jge
xor
nop
pop
sub
nop
nop
nop
nop
jae
outsb
add
add
mov
subl
nop
push
mov
leave
cs
add
add
test
add
nop
push
mov
leave
cs
add
add
mov
jge
movzwl
clc
nop
nop
nop
nop
jae
add
add
mov
nop
nop
nop
nop
jae
add
add
add
mov
sbb
push
mov
pop
pop
sub
add
mov
add
cmp
add
lahf
push
mov
dec
jecxz
shll
out
add
add
add
add
mov
add
push
xor
clc
nop
nop
nop
nop
jae
loopne
add
mov
clc
nop
nop
nop
nop
jae
mov
rolb
adc
addb
or
ret
jge
mov
mov
and
sub
add
mov
adc
nop
nop
nop
nop
jae
cld
cld
add
jecxz
xor
clc
nop
nop
nop
nop
jae
cmp
xor
push
add
cmp
mov
nop
push
mov
leave
cs
push
add
add
sub
jno
add
add
add
and
int3
add
add
popw
mov
clc
nop
nop
nop
nop
jae
int3
add
inc
cld
add
add
sub
test
nop
nop
nop
nop
jae
lea
or
add
clc
nop
nop
nop
nop
jae
add
add
add
add
pop
push
mov
xchg
ret
mov
add
add
add
sub
mov
adc
push
mov
leave
cs
add
movb
adc
test
nop
nop
nop
nop
jae
mov
add
jns
add
add
nop
nop
nop
nop
jae
int3
add
or
add
mov
add
push
mov
xchg
ret
add
add
int3
xchg
jecxz
mov
mov
xchg
ret
xchg
add
inc
add
add
add
sti
dec
mov
clc
nop
nop
nop
nop
jae
cmp
add
add
clc
nop
nop
nop
nop
jae
rolb
cld
sub
cli
in
not
push
mov
xchg
ret
faddl
add
push
add
xor
jne
or
je
clc
nop
nop
nop
nop
jae
add
add
add
add
sub
clc
nop
nop
nop
nop
jae
mov
mov
mov
fcoml
inc
loopne
pop
pop
clc
nop
nop
nop
nop
jae
add
add
add
add
cmp
pop
inc
add
add
add
add
add
push
inc
mov
sub
and
mov
add
add
incb
cld
cmpsb
adc
nop
nop
nop
jae
jecxz
add
jne
jne
add
loop
sub
push
mov
xchg
ret
xchg
add
or
das
movb
es
pop
push
mov
xchg
ret
jne
inc
add
xchg
inc
mov
add
repz
clc
nop
nop
nop
nop
jae
and
mov
pop
add
jp
push
clc
nop
nop
nop
nop
jae
add
cmp
add
cld
mov
mov
roll
nop
nop
nop
nop
jae
mov
or
fdivl
lret
push
push
mov
xchg
ret
add
sub
add
add
fdivl
pop
add
clc
nop
nop
nop
nop
jae
add
add
and
rep
push
mov
xchg
ret
add
xor
add
and
clc
nop
nop
nop
nop
jae
add
add
notb
xchg
in
add
nop
nop
nop
nop
jae
push
lea
add
push
add
sbb
add
rep
clc
nop
nop
nop
nop
jae
xor
add
cmp
add
lcall
clc
nop
nop
nop
nop
jae
add
faddl
mov
int
pop
jae
push
mov
leave
cs
fdivrl
add
imul
add
leave
cs
add
add
mov
dec
mov
scas
xchg
push
clc
nop
nop
nop
nop
jae
add
add
add
or
jecxz
cmp
inc
clc
nop
nop
nop
nop
jae
and
lea
sarb
rol
pop
nop
push
mov
leave
cs
add
sti
add
cmp
add
aas
mov
clc
nop
nop
nop
nop
jae
mov
add
add
xchg
cs
clc
nop
nop
nop
nop
jae
jnp
das
pop
outsb
mov
adc
in
lods
inc
xor
add
test
testl
lock
cld
add
add
mov
dec
sub
xor
inc
add
sub
add
add
nop
nop
jae
mov
add
add
mov
test
fs
sar
nop
nop
nop
nop
jae
sub
outsb
xor
add
testb
aaa
pop
mov
popf
mov
nop
push
mov
leave
cs
xchg
add
add
rorl
mov
xchg
ret
and
add
outsb
addl
adc
add
push
push
jnp
add
inc
and
add
xchg
jecxz
test
xchg
nop
push
mov
leave
cs
jecxz
add
sub
add
mov
add
add
andl
jnp
add
rolb
scas
mov
jge
add
add
ja
loop
push
mov
xchg
ret
test
cmp
aaa
inc
and
inc
jmp
call
nop
jae
add
add
pop
xor
pop
clc
nop
nop
nop
nop
jae
or
fcoml
and
mov
repz
clc
nop
nop
nop
nop
jae
not
add
add
mov
mov
xor
push
mov
das
push
add
or
loop
movsl
inc
ret
es
push
sbb
add
sbb
add
nop
nop
jae
add
int3
add
add
or
jl
and
sub
mov
nop
push
mov
leave
cs
sti
add
add
inc
add
adc
nop
nop
nop
nop
jae
add
jns
add
mov
add
sbb
add
out
add
add
lret
add
iret
outsb
dec
popf
push
clc
nop
nop
nop
nop
jae
push
add
add
testb
out
push
mov
xchg
ret
add
add
mov
jns
push
imul
clc
nop
nop
nop
nop
jae
pop
int3
or
xor
add
in
clc
nop
nop
nop
nop
jae
sub
pop
rolb
jge
add
lock
xor
mov
xchg
ret
add
add
add
add
notb
pusha
mov
clc
nop
nop
nop
nop
jae
add
xchg
cmp
je
mov
push
mov
xchg
ret
jnp
or
add
add
and
xor
nop
push
mov
leave
cs
das
mov
int3
and
movzwl
clc
nop
nop
nop
nop
jae
add
sub
jecxz
push
push
mov
xchg
ret
cmp
add
add
add
add
sub
push
or
ret
add
sub
cmp
add
add
cld
cld
lea
add
inc
add
jne
lret
pop
nop
push
mov
leave
cs
add
pop
and
aaa
add
mov
clc
nop
nop
nop
nop
jae
xchg
cmp
cmp
and
jecxz
add
inc
jne
clc
nop
nop
nop
nop
jae
cmp
add
add
sub
shlb
clc
nop
nop
nop
nop
jae
mov
add
jge
cmp
and
add
clc
nop
nop
nop
nop
jae
push
add
into
add
add
nop
nop
nop
nop
jae
push
add
add
inc
add
adc
in
add
pop
mov
push
mov
add
add
xor
jl
loop
fistpl
nop
push
mov
leave
cs
add
push
add
testl
add
nop
nop
nop
nop
jae
add
mov
lods
mov
cmp
nop
push
mov
leave
cs
testb
or
mov
push
mov
mov
repnz
outsl
add
xor
add
push
iret
mov
mov
push
mov
xchg
ret
addl
add
clc
nop
nop
nop
nop
jae
xchg
add
add
mov
add
lea
add
lea
clc
nop
nop
nop
nop
jae
add
add
add
add
nop
nop
nop
nop
jae
xchg
mov
sti
add
testb
sub
icebp
clc
nop
nop
nop
nop
jae
das
add
pop
int3
or
or
add
jne
clc
nop
nop
nop
nop
jae
add
pop
add
clc
nop
nop
nop
nop
jae
int3
add
add
add
push
xchg
add
mov
xchg
ret
pop
add
orl
test
nop
nop
nop
nop
jae
jecxz
das
jecxz
addl
or
add
nop
nop
nop
nop
jae
scas
jne
add
push
add
push
mov
xchg
ret
test
mov
add
gs
add
dec
add
int3
add
cmp
add
xor
lods
push
mov
xchg
ret
add
mov
add
or
push
clc
nop
nop
nop
nop
jae
add
jge
not
add
or
cwtl
mov
jnp
push
mov
xchg
ret
shl
pop
sti
and
xor
jge
cmpl
sbb
xor
nop
push
mov
leave
cs
cmp
add
or
add
nop
nop
nop
nop
jae
add
add
outsb
mov
pop
clc
nop
nop
nop
nop
jae
add
shlb
pop
sub
add
sub
shr
clc
nop
nop
nop
nop
jae
add
add
jecxz
inc
mov
clc
nop
nop
nop
nop
jae
jecxz
jns
int3
mov
mov
add
nop
nop
nop
nop
jae
sub
mov
add
jnp
rorb
clc
nop
nop
nop
nop
jae
add
mov
add
jns
add
sub
lahf
lods
nop
push
mov
leave
cs
xor
add
rorb
add
jecxz
jnp
cmp
in
jbe
add
add
test
mov
test
push
add
daa
push
mov
aam
repnz
push
push
push
add
dec
add
cmpw
nop
push
mov
leave
cs
add
mov
add
orl
fimuls
and
add
add
inc
notb
cli
into
mov
nop
nop
nop
jae
add
outsb
add
int3
jne
outsl
ret
nop
push
mov
leave
cs
testb
add
cmp
add
cmc
push
push
mov
xchg
ret
xor
add
inc
addl
add
clc
nop
nop
nop
nop
jae
add
imul
mov
clc
nop
nop
nop
nop
jae
sti
add
and
add
imul
push
mov
leave
cs
lea
pop
xchg
push
add
jmp
nop
nop
nop
jae
pop
add
aaa
add
jge
movsl
push
mov
add
add
dec
push
add
pop
add
jp
add
add
testl
clc
nop
nop
nop
nop
jae
jnp
and
scas
add
add
testl
nop
push
mov
leave
cs
push
mov
sbb
mov
insl
pop
push
add
pop
lock
mov
add
add
add
cwtl
pusha
leave
mov
push
mov
xchg
ret
cmp
add
jne
jecxz
das
fwait
clc
nop
nop
nop
nop
jae
add
jge
add
add
push
mov
xchg
ret
add
jecxz
add
add
rorl
nop
nop
nop
jae
cmp
add
add
sti
add
jecxz
rep
push
mov
xchg
ret
add
cli
jns
rolb
sti
or
jb
clc
nop
nop
nop
nop
jae
testb
cmp
cmp
enter
add
add
nop
nop
nop
nop
jae
add
add
sub
jne
clc
nop
nop
nop
nop
jae
add
add
in
and
loop
push
mov
xchg
ret
cmp
add
add
das
das
add
std
add
clc
nop
nop
nop
nop
jae
or
mov
fistpl
clc
nop
nop
nop
nop
jae
push
xchg
inc
add
inc
pop
mov
jecxz
rclb
cs
push
add
shrb
add
push
and
in
clc
nop
nop
nop
nop
jae
cmp
outsb
add
xchg
push
clc
push
mov
xchg
ret
and
xchg
add
push
add
add
add
dec
push
mov
add
out
fdivrl
push
rcll
add
add
add
clc
nop
nop
nop
nop
jae
add
testb
add
lods
mov
clc
nop
nop
nop
nop
jae
xor
sub
add
mov
add
nop
nop
nop
nop
jae
add
add
lea
imul
push
mov
xchg
ret
add
add
add
add
sub
data16
pfcmpge
nop
nop
nop
jae
outsb
aaa
sub
cmp
sub
nop
nop
nop
jae
xchg
add
mov
pusha
cwtl
sub
mov
add
add
rolb
mov
dec
and
clc
nop
nop
nop
nop
jae
imul
fdivl
inc
add
push
mov
xchg
ret
adcl
cmp
add
loopne
mov
nop
push
mov
leave
cs
add
add
cmp
inc
fsubl
pop
inc
add
add
add
pop
add
xchg
add
xchg
add
and
clc
nop
nop
nop
nop
jae
dec
loopne
add
and
nop
nop
jae
add
add
xor
jecxz
cmp
les
nop
nop
nop
nop
jae
mov
add
sub
loop
nop
push
mov
leave
cs
fcoml
xor
add
add
cmp
xor
xchg
inc
add
add
sti
add
and
mov
jnp
mul
push
mov
mov
call
add
or
int3
xchg
scas
add
mov
mov
nop
push
mov
leave
cs
mov
or
or
add
xchg
push
xor
nop
nop
nop
jae
add
test
add
add
mov
sub
push
mov
xchg
ret
add
add
sub
cmp
add
jne
rclb
cwtl
jbe
add
add
inc
outsb
mov
add
add
cmp
mov
add
pop
add
add
push
dec
out
push
push
clc
nop
nop
nop
nop
jae
pop
lea
add
mov
clc
nop
nop
nop
nop
jae
add
jnp
push
stos
push
mov
xchg
ret
pop
or
push
mov
sub
int3
add
mov
mov
add
add
and
xchg
icebp
loopne
add
jmp
pop
sub
adc
mov
xchg
ret
add
cmp
add
add
push
mov
xchg
ret
add
mov
add
scas
movb
mov
clc
aam
xor
nop
push
mov
leave
cs
xor
add
add
std
call
clc
nop
nop
nop
nop
jae
mov
add
add
nop
push
mov
leave
cs
xchg
mov
mov
cld
cli
outsb
sub
add
inc
cmp
popa
inc
add
add
add
cmp
cmp
add
test
and
add
nop
nop
nop
nop
jae
sub
add
inc
push
loope
fistl
shrb
add
scas
add
add
add
jmp
mov
xchg
ret
sub
scas
jge
add
testb
nop
nop
nop
nop
jae
add
add
cmp
imul
in
leave
cs
add
sub
add
add
add
nop
push
mov
leave
cs
jns
mov
add
xchg
add
xchg
loopne
sub
push
push
cltd
pop
clc
nop
nop
nop
nop
jae
push
add
xor
add
push
pop
clc
nop
nop
nop
nop
jae
add
jge
mov
add
add
add
lods
mov
nop
nop
nop
nop
jae
add
add
jecxz
loopne
testb
mov
nop
nop
nop
jae
xchg
add
xchg
add
add
jle
add
cs
pop
add
add
inc
xor
mov
nop
push
mov
leave
cs
add
add
add
sub
push
clc
nop
nop
nop
nop
jae
add
dec
xchg
cmp
dec
mov
clc
nop
nop
nop
nop
jae
add
pop
add
int3
add
movsb
mov
nop
nop
jae
mov
add
add
add
fld1
clc
nop
nop
nop
nop
jae
add
add
add
xor
pop
push
mov
xchg
ret
mov
add
add
add
clc
nop
nop
nop
nop
jae
shrb
xchg
add
cmp
clc
nop
nop
nop
nop
jae
add
lea
add
scas
mov
clc
nop
nop
nop
nop
jae
add
pop
jns
cmp
clc
nop
nop
nop
nop
jae
add
add
push
add
loopne
mov
mov
mov
nop
nop
nop
nop
jae
cli
add
add
add
cmpsb
push
adc
nop
nop
jae
add
or
add
jecxz
mov
add
jp
add
cs
test
mov
loop
or
loopne
fld1
push
mov
xchg
ret
das
add
add
aaa
scas
add
add
nop
nop
jae
add
add
add
jns
pop
mov
nop
push
mov
leave
cs
sub
outsb
add
mov
nop
nop
nop
jae
cmp
add
loopne
add
push
out
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
xchg
add
pop
clc
nop
nop
nop
nop
jae
add
add
sarb
add
imul
nop
jae
jnp
xchg
add
push
add
xor
std
push
push
mov
xchg
ret
add
push
adc
add
add
xchg
cmpl
nop
jae
add
add
sti
add
push
mov
nop
nop
nop
jae
add
add
add
inc
adc
xchg
push
clc
nop
nop
nop
nop
jae
mov
inc
add
add
inc
cmp
add
sarb
clc
nop
nop
nop
nop
jae
jecxz
add
addl
jl
sub
nop
nop
jae
add
add
sti
push
add
faddl
nop
push
mov
leave
cs
mov
imul
dec
xor
in
mov
ljmp
push
lds
stc
add
std
mov
clc
nop
nop
nop
nop
jae
sub
cli
jge
adc
add
cld
roll
nop
nop
nop
nop
jae
imul
or
cmp
push
push
mov
xchg
ret
mov
add
mov
loopne
mov
nop
nop
nop
nop
jae
jecxz
add
cmp
add
add
popl
xchg
ret
add
cli
cmp
add
add
and
add
nop
push
mov
leave
cs
mov
jge
aaa
add
clc
nop
nop
nop
nop
jae
add
int3
add
jecxz
or
pop
cmpsl
not
push
mov
xchg
ret
add
imul
add
jge
cltd
mov
clc
nop
nop
nop
nop
jae
aaa
cmp
mov
mov
clc
nop
nop
nop
nop
jae
scas
cmp
pop
pop
add
scas
cmp
push
mov
leave
cs
aaa
inc
dec
add
add
xchg
testb
aaa
scas
push
or
nop
nop
nop
nop
jae
add
pop
add
add
in
imul
pusha
out
call
cs
add
pop
fdivrl
mov
sub
add
add
fisubrs
clc
clc
mov
adc
add
mov
add
push
movsb
add
add
iret
add
add
or
cld
clc
nop
nop
nop
nop
jae
add
xor
dec
add
mov
add
movswl
clc
nop
nop
nop
nop
jae
add
xchg
add
add
addl
scas
mov
clc
nop
nop
nop
nop
jae
jns
push
lea
add
push
dec
outsb
add
rorl
mov
xchg
ret
mov
add
cmp
jge
popf
pop
clc
nop
nop
nop
nop
jae
add
add
sub
cmp
jne
push
mov
xchg
ret
cmp
add
add
xchg
push
adc
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
mov
lcall
orl
add
add
pop
cmp
scas
incl
add
sub
aaa
add
mov
add
jecxz
sbb
cli
xchg
add
lcall
add
push
cli
add
cld
mov
add
mov
testb
notl
mov
xchg
ret
add
sub
mov
add
nop
push
mov
leave
cs
jns
loopne
add
inc
add
or
repz
mov
xchg
ret
int3
faddl
xor
add
add
sarb
lea
in
leave
cs
add
rorb
add
inc
mov
clc
nop
nop
nop
nop
jae
mov
jnp
push
xchg
add
pop
xor
mov
ljmp
add
add
sub
sub
add
add
add
nop
push
mov
leave
cs
mov
sti
and
adc
add
push
movsl
mov
clc
nop
nop
nop
nop
jae
mov
lea
cmpb
add
push
mov
xchg
ret
add
andl
pop
clc
nop
nop
nop
nop
jae
push
sub
add
push
subl
fnstenv
add
out
iret
add
or
add
cld
in
and
clc
nop
nop
nop
nop
jae
xchg
add
mov
add
push
mov
xchg
ret
add
and
or
sub
jl
clc
nop
nop
nop
nop
jae
outsb
add
aaa
add
test
nop
push
mov
leave
cs
cmp
add
xor
add
pusha
clc
nop
nop
nop
nop
jae
add
rolb
add
addl
inc
nop
push
mov
leave
cs
add
scas
add
jne
mov
gs
clc
nop
nop
nop
nop
jae
add
sub
das
pop
add
push
mov
xchg
ret
mov
jge
mov
cld
add
xchg
mov
push
mov
xchg
ret
sti
pop
and
outsb
and
push
mov
xchg
ret
add
mov
outsb
inc
and
push
mov
xchg
ret
cmp
add
and
jnp
das
xor
enter
pop
and
nop
nop
nop
nop
jae
sub
add
inc
mov
dec
test
nop
push
mov
leave
cs
jnp
add
xchg
add
and
lret
fistpl
clc
nop
nop
nop
nop
jae
mul
add
add
add
push
mov
xchg
ret
lea
add
mov
or
cmp
mov
jp
nop
push
mov
leave
cs
add
xchg
xor
loopne
add
mov
nop
push
mov
leave
cs
xor
jnp
and
mov
push
push
push
push
mov
xchg
ret
mov
add
and
pop
add
imul
jae
aaa
add
shl
das
jns
xchg
add
add
in
leave
cs
xchg
pop
add
push
add
add
add
and
call
nop
push
mov
leave
cs
pop
das
add
sub
add
mov
hlt
fisttps
nop
nop
nop
jae
cli
int3
das
add
mov
mov
mov
clc
nop
nop
nop
nop
jae
add
outsb
add
jge
test
fisttpl
mov
xchg
ret
add
add
cmp
rolb
add
add
jle
mov
sub
nop
nop
nop
nop
jae
dec
add
jns
mov
add
add
xor
clc
nop
nop
nop
nop
jae
mov
mov
dec
cld
add
add
add
nop
push
mov
leave
cs
inc
add
addl
jecxz
cli
push
js
sub
in
xor
jnp
add
add
add
pop
icebp
stos
mov
adc
nop
nop
nop
nop
jae
mov
cld
push
cmp
dec
add
nop
nop
nop
nop
jae
cmp
add
shrb
add
inc
rorb
dec
push
clc
nop
nop
nop
nop
jae
add
cli
or
jnp
test
nop
push
mov
leave
cs
add
or
adc
int3
lea
xchg
add
sbb
nop
nop
nop
nop
jae
adcl
int3
int3
or
jmp
jge
add
add
cmp
add
jne
add
imul
lea
repz
mov
xchg
ret
add
cmp
add
das
add
add
pand
clc
nop
nop
nop
nop
jae
dec
cli
testb
add
xchg
add
jp
inc
add
add
orl
cmp
das
and
clc
nop
nop
nop
nop
jae
add
imul
add
movsb
loop
clc
nop
nop
nop
nop
jae
inc
add
add
cmp
popa
test
nop
push
mov
leave
cs
rolb
add
jge
jge
je
fld1
push
mov
xchg
ret
xor
add
add
test
push
add
clc
nop
nop
nop
nop
jae
add
ja
shrb
jae
inc
cli
outsb
imul
sub
nop
nop
nop
jae
inc
xchg
or
test
push
jnp
ror
push
mov
xchg
ret
inc
sub
int3
add
add
adc
and
call
clc
nop
nop
nop
nop
jae
add
sbbl
inc
sbb
inc
pop
add
nop
push
mov
leave
cs
add
xor
mov
fwait
push
mov
xchg
ret
sub
add
cmp
add
je
clc
nop
nop
nop
nop
jae
loopne
add
int3
add
mov
clc
nop
nop
nop
nop
jae
sub
or
negl
mov
xchg
ret
addl
add
add
add
stc
je
nop
push
mov
leave
cs
add
jge
xchg
add
pop
push
mov
xchg
ret
add
add
add
jns
sti
and
testb
out
jecxz
sub
ljmp
xchg
add
sub
inc
testb
add
jnp
and
xor
sub
clc
nop
nop
nop
nop
jae
xor
add
add
add
nop
push
mov
leave
cs
add
jecxz
add
imul
inc
add
add
cmp
jge
sub
fistpl
push
mov
xchg
ret
jns
add
add
mov
xchg
mov
xchg
ret
xchg
push
add
add
cmp
push
mov
xchg
ret
mov
mov
or
push
sbb
and
nop
nop
nop
nop
jae
add
mov
xchg
xchg
jecxz
mov
movsl
add
add
add
cmp
mov
push
add
in
add
nop
nop
nop
nop
jae
add
add
add
push
add
add
mov
push
mov
xchg
ret
mov
add
add
add
pop
cmp
mov
call
clc
nop
nop
nop
nop
jae
push
xchg
int3
pop
ret
push
mov
xchg
ret
add
push
movb
add
nop
nop
nop
nop
jae
mov
cld
and
pop
mov
inc
push
mov
xchg
ret
add
cmp
add
cld
mov
movsl
clc
nop
nop
nop
nop
jae
pop
add
add
inc
add
lcall
mov
leave
cs
add
test
add
jge
and
clc
nop
nop
nop
nop
jae
add
loopne
mov
add
add
jmp
jge
add
add
cmp
test
or
sub
scas
enter
nop
nop
jae
jne
add
xor
lea
xor
clc
or
cmpb
pop
push
mov
xchg
ret
add
add
add
sub
add
add
and
cld
clc
nop
nop
nop
nop
jae
int3
jne
push
test
cmp
or
push
pop
lret
mov
clc
nop
nop
nop
nop
jae
test
cmp
push
sub
adc
nop
nop
nop
nop
jae
add
or
jne
push
hlt
adc
or
add
nop
nop
nop
nop
jae
add
add
jle
jb
nop
push
mov
leave
cs
jecxz
mov
adc
fistpl
push
mov
xchg
ret
or
add
add
add
jnp
add
jne
clc
nop
nop
nop
nop
jae
rolb
add
pop
add
adc
nop
nop
nop
jae
jge
xchg
jne
adc
xor
and
aad
roll
nop
nop
nop
nop
jae
jge
rol
inc
add
and
pop
pop
push
mov
xchg
ret
inc
sub
xor
imul
mov
leave
cs
add
and
add
les
nop
nop
nop
nop
jae
add
testb
sub
add
add
jl
ljmp
inc
add
add
xchg
cli
outsb
add
add
adc
add
mov
jmp
add
add
push
mul
add
add
xorl
inc
jg
add
add
testb
push
insb
sbb
mov
clc
nop
nop
nop
nop
jae
add
add
jge
add
test
test
call
cs
and
test
mov
push
mov
xchg
ret
xchg
add
add
sub
adc
test
call
cs
testb
add
add
mov
nop
push
mov
leave
cs
or
add
shlb
hlt
add
inc
adc
nop
nop
nop
nop
jae
pop
aaa
and
sti
add
add
notb
mov
push
mov
xchg
ret
add
inc
add
add
adc
add
test
add
clc
nop
nop
nop
nop
jae
push
mov
mov
shr
clc
nop
nop
nop
nop
jae
add
mov
push
xchg
jne
cmp
daa
push
nop
push
mov
leave
cs
add
jns
jnp
or
pop
clc
nop
nop
nop
nop
jae
add
add
add
movb
cmp
nop
nop
nop
nop
jae
adc
divb
jecxz
test
lods
push
mov
xchg
ret
add
cmp
cmpl
push
mov
xchg
ret
dec
cmp
cmp
adc
iret
clc
nop
nop
nop
nop
jae
add
add
add
or
pfcmpge
nop
nop
nop
jae
add
add
mov
call
nop
nop
jae
push
das
int3
rolb
or
add
push
mov
xchg
ret
add
cmp
add
add
cld
cmp
clc
nop
push
mov
leave
cs
add
xor
sub
add
and
add
and
out
nop
push
mov
leave
cs
add
add
mov
sbb
pop
repnz
ret
test
mov
testb
mov
int3
popf
sbb
push
xor
push
mov
jp
mov
add
in
xlat
bound
out
mov
lods
mov
nop
nop
nop
nop
jae
cmp
mov
das
inc
testb
add
mov
push
mov
xchg
ret
jns
cmp
add
add
out
xor
clc
nop
nop
nop
nop
jae
jecxz
add
pop
mov
clc
nop
nop
nop
nop
jae
add
dec
add
rclb
cld
outsl
inc
add
and
add
xchg
mov
clc
nop
nop
nop
nop
jae
add
add
jge
fisttpll
in
leave
cs
push
imul
mov
lea
nop
nop
nop
nop
jae
add
add
inc
add
insb
out
repnz
push
clc
nop
nop
nop
nop
jae
dec
add
xor
push
cld
cmp
aaa
sti
mov
push
clc
nop
nop
nop
nop
jae
shlb
rolb
xchg
jecxz
imul
js
add
imulb
xchg
mov
sti
sub
or
cli
xchg
call
push
mov
xchg
ret
cmp
add
sub
add
push
mov
xchg
ret
add
or
cmp
jge
clc
nop
nop
nop
nop
jae
cld
adc
cmp
add
sbb
inc
cmpl
nop
push
mov
leave
cs
mov
add
add
add
mov
cmpw
nop
push
mov
leave
cs
mov
pop
add
xchg
add
test
push
clc
nop
nop
nop
nop
jae
inc
sub
das
add
scas
xchg
mov
aaa
add
or
fistpl
nop
push
mov
leave
cs
and
imul
std
push
clc
nop
nop
nop
nop
jae
cmp
and
cmp
scas
push
popa
add
clc
nop
nop
nop
nop
jae
add
add
rclb
int
clc
nop
push
mov
leave
cs
add
jge
test
add
or
push
add
clc
nop
nop
nop
nop
jae
add
mov
xor
outsb
push
xor
nop
push
mov
leave
cs
add
add
add
add
add
add
sbb
mov
xchg
ret
and
sub
cmp
add
nop
nop
jae
add
jns
add
cmp
add
dec
in
lret
fld1
push
mov
xchg
ret
add
push
add
add
and
add
insb
add
mov
loopne
mov
xchg
ret
add
add
push
dec
and
add
clc
nop
nop
nop
nop
jae
mov
jge
add
inc
sub
adc
inc
jns
add
add
add
add
add
cld
int
fsubr
add
clc
nop
nop
nop
nop
jae
aaa
cmp
cmp
add
push
negl
push
mov
leave
cs
outsb
mov
imul
xchg
cld
inc
mov
push
nop
push
mov
leave
cs
dec
mov
lea
lea
and
push
xchg
inc
add
or
das
add
add
orl
in
leave
cs
cli
add
add
jnp
add
jnp
lea
ss
add
add
test
push
cmp
mov
push
mov
and
out
addb
in
pushf
xchg
add
sub
clc
nop
nop
nop
nop
jae
add
add
add
mov
nop
nop
nop
jae
inc
push
jecxz
add
add
xchg
mov
pusha
fs
pop
push
mov
xchg
ret
jecxz
cmp
add
add
add
clc
nop
nop
nop
nop
jae
add
outsb
scas
add
jecxz
clc
nop
nop
nop
nop
jae
and
das
test
add
rolb
and
leave
xchg
nop
push
mov
leave
cs
mov
sub
xchg
imul
nop
nop
jae
mov
inc
add
clc
out
clc
nop
nop
nop
nop
jae
add
sti
cmp
add
and
pop
push
mov
xchg
ret
jnp
xor
and
addl
push
mov
xchg
ret
test
inc
pop
add
sub
push
ret
push
mov
leave
xor
add
inc
add
add
add
dec
outsl
add
call
nop
push
mov
leave
cs
sti
add
add
pop
and
mov
clc
nop
nop
nop
nop
jae
add
add
xchg
and
add
xor
mov
xchg
ret
dec
jnp
mov
mov
mov
fwait
mov
clc
nop
nop
nop
nop
jae
andl
add
imul
cmp
mov
fistpl
push
mov
xchg
ret
xor
add
add
add
jecxz
push
gs
clc
nop
nop
nop
nop
jae
add
jns
mov
jecxz
add
repz
clc
nop
nop
nop
nop
jae
add
sti
add
dec
push
outsb
jb
cmpsb
push
or
mov
xchg
ret
xchg
testb
jecxz
aaa
add
cmp
adc
js
nop
push
mov
leave
cs
mov
xchg
sub
dec
nop
push
mov
leave
cs
pop
int3
add
loopne
or
add
sub
mov
mov
nop
nop
nop
nop
jae
push
pop
adc
add
mov
add
dec
mov
clc
nop
nop
nop
nop
jae
mov
int3
add
lods
push
nop
push
mov
leave
cs
add
add
and
add
dec
push
mov
xchg
ret
rorb
push
xchg
add
push
push
mov
xchg
ret
push
adc
jns
loopne
add
idivb
call
clc
nop
nop
nop
nop
jae
add
jecxz
pop
xchg
andl
and
test
nop
nop
nop
jae
mov
lea
add
cld
push
jns
jecxz
and
clc
nop
nop
nop
nop
jae
add
add
into
add
bound
xchg
ret
add
sub
pop
mov
int3
add
add
cld
stos
jmp
push
sub
and
scas
cld
testb
add
add
fisubl
push
mov
leave
cs
add
mov
xchg
add
push
mov
lods
bound
jne
mov
in
lahf
sbb
add
add
push
mov
sti
stos
sbb
and
fbld
sub
push
xchg
push
add
ja
clc
nop
nop
nop
nop
jae
outsb
xchg
fcoml
mov
rsqrtps
mov
or
ret
das
scas
test
aaa
int3
xchg
mov
pop
jne
clc
nop
nop
nop
nop
jae
add
mov
inc
xlat
push
clc
nop
nop
nop
nop
jae
add
add
inc
xor
in
add
jg
cld
outsb
ja
and
add
add
push
add
test
push
mov
xchg
ret
cmp
mov
add
add
mov
leave
cs
cmp
mov
add
cmp
add
add
push
clc
nop
nop
nop
nop
jae
add
add
add
jge
stos
mov
push
mov
xchg
ret
add
add
add
mov
push
jb
add
mov
xchg
push
and
sub
add
nop
push
mov
leave
cs
add
add
mov
dec
add
mov
push
mov
xchg
ret
cmp
cli
add
add
mov
add
pop
jne
nop
push
mov
leave
cs
add
int3
add
push
mov
xchg
ret
xchg
mov
add
das
and
add
and
pop
dec
fld1
push
mov
xchg
ret
add
sti
cmp
inc
add
bound
dec
cmp
clc
nop
nop
nop
nop
jae
outsb
add
add
and
rolb
xchg
add
mov
xchg
ret
add
jne
add
add
sarb
mov
nop
nop
nop
nop
jae
sti
cmp
pop
int3
outsb
xchg
inc
fistpl
push
mov
xchg
ret
pop
jge
push
add
add
add
in
add
add
pusha
lds
dec
clc
cmp
inc
out
inc
mov
push
mov
xchg
ret
add
add
add
cwtl
mov
mov
leave
cs
add
inc
xchg
xchg
sub
add
fstl
mov
xchg
ret
adc
aaa
add
add
add
pop
or
xchg
push
arpl
nop
jae
cmp
mov
scas
scas
add
sub
cmp
inc
dec
es
nop
nop
nop
nop
jae
add
add
xchg
movb
push
mov
push
add
add
insl
pop
bound
push
add
add
loope
call
rolb
nop
nop
nop
nop
jae
add
add
rolb
add
push
mov
add
add
push
add
add
add
std
ror
addr16
push
mov
xchg
ret
xchg
sub
xchg
add
fdivrl
imul
add
add
cmp
add
mov
dec
mov
push
mov
leave
cs
adc
mov
scas
jge
add
mov
clc
nop
nop
nop
nop
jae
lea
mov
testb
sti
fstl
in
insl
add
push
mov
jmp
addl
arpl
aad
rclb
cmpsl
xor
push
mov
xchg
ret
mov
xor
add
inc
push
and
mov
xchg
ret
sub
add
push
add
add
add
push
loopne
nop
nop
nop
nop
jae
add
add
imul
nop
nop
nop
nop
jae
add
or
cmp
and
add
clc
nop
nop
nop
nop
jae
xchg
add
add
add
pop
sub
add
mov
xchg
ret
add
add
das
int3
pop
add
nop
push
mov
leave
cs
lea
inc
push
aaa
divb
nop
nop
nop
nop
jae
add
jecxz
add
rolb
xchg
add
and
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
lea
push
mov
leave
cs
add
xor
add
addl
lds
clc
nop
nop
nop
nop
jae
adc
mov
add
mov
clc
nop
nop
nop
nop
jae
xchg
push
or
xchg
add
faddl
mov
add
add
sbb
add
call
add
nop
nop
nop
nop
jae
mov
cld
imulb
das
add
add
nop
nop
nop
nop
jae
add
mov
cmp
test
scas
push
nop
push
mov
leave
cs
mov
loopne
push
xchg
push
add
add
add
inc
cmp
stos
clc
nop
nop
nop
nop
jae
add
mov
add
sub
add
and
pop
push
mov
xchg
ret
add
push
add
test
xchg
add
je
clc
nop
nop
nop
nop
jae
add
add
pop
nop
push
mov
leave
cs
mov
cld
jne
xor
add
add
mov
inc
mov
nop
nop
jae
test
add
add
fdivl
inc
loope
clc
nop
nop
nop
nop
jae
add
add
loopne
sti
xchg
add
sarb
jmp
mov
xchg
ret
jnp
xor
testb
out
lods
push
mov
add
add
add
scas
add
shll
rcr
add
pop
pop
add
mov
rorl
mov
xchg
ret
push
add
orl
sbb
add
nop
nop
nop
nop
jae
add
aaa
cmp
nop
nop
nop
jae
add
add
add
scas
aad
fistl
fiaddl
and
outsb
add
jge
dec
scas
or
add
add
jne
clc
nop
nop
nop
nop
jae
push
xor
outsb
inc
jecxz
fwait
push
nop
push
mov
leave
cs
add
fcoml
pusha
clc
nop
nop
nop
nop
jae
add
add
add
add
shlb
xchg
inc
add
mov
cmp
add
push
mov
xchg
ret
add
mov
add
adcl
mov
jb
push
push
mov
xchg
ret
push
add
add
xchg
add
xchg
lea
nop
nop
nop
jae
add
mov
or
add
sub
rclb
mov
xchg
ret
push
mov
and
add
mov
add
or
push
mov
leave
cs
shlb
add
inc
rclb
add
clc
nop
nop
nop
nop
jae
xor
add
mov
add
nop
nop
nop
jae
fsubrl
mov
mov
add
imul
leave
cs
xchg
and
rolb
shrb
js
lsl
clc
nop
nop
nop
nop
jae
mov
add
das
push
add
sub
mov
xchg
ret
sti
jecxz
and
test
divb
nop
nop
nop
nop
jae
and
outsb
add
add
add
inc
mov
mov
nop
push
mov
leave
cs
add
jecxz
mov
and
jmp
add
add
or
push
add
mov
jecxz
cmp
lea
nop
jae
das
add
add
xchg
add
add
mov
mov
jg
clc
nop
nop
nop
nop
jae
mul
jne
add
subl
clc
nop
nop
nop
nop
jae
inc
add
xor
rclb
add
imul
nop
nop
nop
jae
add
add
das
addl
cmp
movb
nop
nop
nop
nop
jae
scas
or
jne
in
fildll
and
add
nop
nop
nop
nop
jae
notb
add
das
mov
sub
addr16
nop
push
mov
leave
cs
notb
push
adc
inc
add
mov
leave
cs
add
sarb
add
mov
add
lret
jmp
sar
push
add
inc
add
mov
add
imulb
cld
add
xchg
inc
add
lea
add
adc
add
repnz
mov
clc
nop
nop
nop
nop
jae
add
cld
xchg
mov
add
mov
push
sub
mov
push
test
xchg
ret
rolb
add
test
lea
lea
add
gs
clc
nop
nop
nop
nop
jae
mov
add
das
and
fimull
push
push
mov
xchg
ret
add
add
addl
add
add
push
nop
push
mov
leave
cs
aaa
subl
cmp
xor
clc
nop
nop
nop
nop
jae
add
add
add
add
mov
inc
add
scas
loopne
push
add
loopne
push
push
mov
xchg
ret
add
add
xchg
add
add
nop
nop
nop
nop
jae
add
cld
add
cmpl
nop
nop
nop
nop
jae
add
jns
cld
add
jecxz
add
daa
dec
clc
nop
nop
nop
nop
jae
add
add
add
sub
add
clc
nop
nop
nop
nop
jae
add
add
inc
and
testb
adc
cs
add
xchg
add
xor
pop
sti
add
pop
push
mov
xchg
ret
jne
add
xchg
jne
mov
and
mov
test
mov
add
jle
add
mov
add
and
pop
mov
js
push
insb
mov
rorl
and
xor
adc
mov
aaa
push
dec
adc
sbb
nop
nop
nop
nop
jae
add
faddl
cmp
xchg
sub
nop
nop
nop
nop
jae
jge
add
add
add
xchg
add
clc
nop
nop
nop
nop
jae
addl
jge
add
mov
push
mov
xchg
ret
add
add
add
pop
not
mov
jb
add
add
add
jne
mov
mov
pop
scas
dec
nop
push
mov
leave
cs
aaa
sub
mov
int3
add
push
clc
nop
nop
nop
nop
jae
xchg
add
xchg
and
push
mov
and
stos
dec
adc
add
add
xor
add
sub
push
xchg
adc
sub
xor
ss
xorb
ret
aaa
movsl
mov
pop
hlt
jmp
sub
mov
shrb
jo
pop
test
pop
mov
jnp
xchg
shrb
sbb
pop
jmp
les
imul
fcmovnu
inc
dec
adc
adc
push
jmp
and
pusha
lret
insb
adc
and
mov
sbb
and
add
mov
call
mov
mov
lock
inc
nop
in
inc
push
scas
dec
xchg
mov
dec
cs
lock
push
mov
cmp
pop
xchg
add
in
mov
je
cmc
add
cmpsl
roll
mov
fcompl
enter
in
out
add
shr
push
loope
shl
lds
mov
or
mov
add
leave
cmpsl
jmp
pop
and
jp
push
push
adc
mov
bound
mov
cmp
out
fwait
outsl
or
sbb
out
movsb
cltd
mov
pop
and
daa
out
das
ljmp
test
sub
pop
inc
mov
enter
push
adc
add
lahf
mov
fcoml
sub
inc
out
jecxz
cmp
inc
hlt
xchg
xor
jg
enter
movsl
add
rolb
mov
xchg
inc
mov
sti
js
stc
fnstenv
add
hlt
jecxz
out
xchg
inc
jns
sbb
mov
mov
ret
fadds
mov
xchg
test
loopne
stos
sbb
jl
xorb
cltd
imul
fnstcw
shll
inc
loopne
cmp
dec
pop
jp
add
les
pusha
pusha
arpl
stc
outsb
stc
push
push
movsb
int
jnp
out
out
mov
es
into
andl
addb
jmp
ficompl
push
pop
adc
shlb
ss
fcomip
mov
add
lods
cmc
jno
xchg
xorb
or
mov
out
add
xchg
sub
aas
jo
fstps
cld
loopne
inc
jmp
or
test
push
scas
xchg
mov
mov
pop
stos
ss
adc
ljmp
gs
pop
add
ss
xchg
sti
pop
scas
les
push
lods
aad
int
idivb
in
push
ds
repnz
fwait
adc
dec
xchg
lret
and
dec
xchg
xor
lahf
outsl
xor
mov
das
popf
push
sbb
dec
xor
xor
inc
sbb
inc
lcall
outsl
sub
ja
lahf
jg
shr
inc
int
mov
or
imul
in
sub
pusha
xor
sbb
inc
jmp
data16
add
push
bound
push
jno
push
inc
add
and
outsb
movsl
jl
inc
es
rolb
xor
fmull
mov
roll
out
es
mov
mov
or
clc
xor
adc
mov
jle
jl
jmp
stos
jne
and
inc
jno
or
pusha
lahf
scas
jno
cmp
call
shlb
dec
mov
inc
push
pop
outsl
in
mov
push
jp
pop
push
repnz
movsb
cmp
adc
jp
sbb
pushf
aam
adc
pusha
mov
test
mov
add
mov
out
scas
gs
loop
jns
shll
stc
lahf
xchg
mov
xchg
negb
insl
mov
nop
pusha
jb
mov
bound
enter
inc
sbb
subb
ret
add
fs
adcl
mov
pop
inc
add
xchg
mov
mov
rclb
push
js
dec
scas
sti
data16
cmp
dec
nop
fs
lea
cmpsl
pushf
in
jle
ljmp
testl
das
jmp
or
js
sbb
mov
addr16
push
push
push
repz
in
jne
sub
inc
cmpsl
lcall
sahf
adc
push
mov
mov
pop
push
testl
inc
fadds
nop
or
cs
lret
inc
adc
pusha
imul
pop
cli
jns
test
mov
add
mov
sub
sub
lret
push
mov
bound
jo
lcall
add
lret
sub
pop
pop
lods
ja
cs
fildl
dec
shl
movsb
int3
ret
jbe
xor
out
enter
mov
push
jo
mov
xchg
out
int3
fists
mov
cmp
dec
cmp
pusha
dec
mov
cmp
or
fimuls
stc
add
addb
sbb
mov
and
ljmp
es
aaa
mov
push
sub
pusha
pusha
xor
ss
or
arpl
mov
sahf
push
aam
jne
jl
orl
lods
subb
ljmp
pop
adcb
mov
int3
outsl
stos
jge
pop
xchg
adc
inc
inc
jmp
sub
aad
jns
push
imull
les
popf
outsl
dec
xchg
jo
iret
inc
mov
repz
add
in
pop
xchg
jge
sub
rcrl
mov
iret
jns
out
fisttpll
aam
int3
pusha
iret
sahf
fstl
test
mov
icebp
sbb
lock
sbb
jb
ret
out
xchg
out
out
insb
sarl
shrb
mov
call
jl
scas
popa
xor
imul
mov
or
sub
push
lock
stc
sbb
ret
mov
jbe
popf
pop
hlt
cmpsl
jmp
bound
xchg
adc
rclb
mov
pop
and
sbb
dec
fdiv
cmpsl
movsb
mov
out
cmpsl
int3
stos
rorb
and
imul
loopne
mov
push
xor
mov
jno
ret
daa
push
and
divb
lcall
mov
xchg
pop
mov
cli
lds
push
add
mov
int
test
xor
jae
icebp
jp
sub
sub
lea
fwait
out
mov
sbb
lds
imul
mov
je
dec
cmpsl
fwait
outsl
test
and
add
test
fidivl
lahf
jmp
jne
aaa
vmaxss
push
cwtl
cwtl
and
mov
add
outsl
xchg
ficoml
cs
into
push
push
and
into
pop
scas
rcrl
jns
orl
jb
push
ljmp
mulb
push
jl
xchg
push
mov
fadds
xor
dec
mov
mul
push
lcall
mov
popf
aad
rcrb
xor
push
or
sarb
and
cli
or
xor
or
pop
sbb
int3
rcll
dec
loopne
mov
jecxz
sbb
loopne
mov
adc
xor
cmc
out
mov
loopne
jmp
adc
pusha
iret
jge
pop
imul
stos
jp
pop
test
add
mov
in
jae
adc
cwtl
add
lret
sbb
add
int
push
hlt
mov
add
js,pn
insb
xor
or
pop
inc
loop
call
daa
cwtl
rolb
and
and
movsb
sbb
shlb
dec
mov
pop
jae
test
inc
mov
dec
lahf
es
outsb
sub
imul
mul
pop
cmp
rclb
lock
xchg
lcall
in
xchg
gs
xlat
mov
sahf
popa
add
cmpsb
add
adc
imulb
and
pusha
test
pushf
rol
push
in
mov
pop
mov
out
mov
inc
mov
mov
mul
int
ret
lods
dec
and
test
outsl
jo
iret
arpl
enter
lcall
xor
sub
xor
dec
jb
jecxz
into
push
lret
sub
xor
cmp
jl
push
push
xchg
addr16
jbe
push
mov
mov
loop
add
test
clc
cmpsl
cmp
loope
cmpsl
aam
ret
inc
lds
jns
int
mov
sbb
imull
outsl
push
push
out
mov
mov
fiadds
sarb
loopne
into
xchg
neg
fcmovnbe
mov
popl
mov
mov
ljmp
leave
sbb
movsl
lret
inc
cmp
ja
int3
pusha
or
xchg
adc
andb
in
test
mov
or
pop
sbb
ret
pop
daa
cmp
shlb
inc
push
inc
inc
mov
pop
pop
test
add
and
popa
sub
mov
sbb
out
and
xor
das
jge
outsl
psraw
fdivl
enter
sarb
in
cmc
cmpsb
cmp
insb
mov
pop
cmp
rcrb
cld
inc
add
jmp
out
fcompl
mov
jp
pop
inc
dec
cltd
insb
jne
jmp
sbb
sub
xor
fmul
and
outsl
pushf
push
loopne
mov
ret
popf
mov
std
push
clc
or
popf
sub
xchg
push
mov
cmc
xchg
aam
cmp
mov
aad
les
push
fistpll
jae
aad
jg
xchg
pop
xchg
sbb
mov
push
xchg
out
ret
scas
mov
sub
or
outsb
out
and
add
subl
in
loop
adc
fsubl
stos
pop
arpl
pop
and
shlb
mov
mov
in
popa
mov
or
imul
sbb
jne
adc
xor
mov
push
aaa
jecxz
stos
aad
aam
push
add
and
adc
jp
aas
nop
nop
inc
in
mov
add
inc
fcmovbe
sbb
cmpb
mov
popa
mov
inc
ss
jg
ffreep
cmp
test
cmp
dec
xchg
cmp
mov
std
mov
fistl
cmpsl
fnsave
stc
or
sub
xlat
adcl
mov
push
outsb
bound
cmp
jl
push
jnp
and
icebp
scas
dec
pushl
ret
dec
cmpl
out
xchg
adc
shl
cld
adc
push
mov
lea
cwtl
inc
sbb
jns
rolb
inc
jns
rcrb
or
fdivs
push
push
ja
scas
jno
lods
jecxz
rcrl
xchg
rcll
in
and
add
add
inc
fnstsw
mov
push
sti
loop
add
jb
pop
in
imul
jmp
inc
push
call
loopne
sbb
outsl
and
push
js
and
aad
sub
cs
lret
add
push
ljmp
test
out
cmp
pop
add
xorb
xchg
add
rclb
mov
fs
outsl
xchg
xchg
inc
mov
dec
or
pop
cmc
clc
and
loopne
nop
mov
add
sbb
adc
inc
sub
pusha
loopne
scas
fsubrs
aad
cmpsl
jecxz
pop
push
hlt
add
shrb
orb
sub
jmp
sub
dec
dec
push
mov
cwtl
test
pop
mov
push
xorb
push
xchg
cltd
and
pop
jnp
cwtl
hlt
inc
mov
std
dec
loope
add
aam
mov
popa
mov
insl
int3
sub
fidivrl
hlt
add
xchg
add
cli
xor
fsubr
sbb
sbbb
push
testl
cmp
jmp
add
inc
stc
jb
push
imul
stos
std
rcrl
call
or
xor
adc
movsb
cmpsb
sti
test
mov
sbb
outsl
sbb
add
mov
sub
xchg
fmull
lcall
jle
dec
bound
icebp
std
cld
cmp
push
sbb
jns
stos
inc
rolb
and
mov
xlat
push
std
mov
ljmp
faddl
mov
cmp
push
add
test
inc
or
cmp
cmpsl
mov
movsb
mov
inc
mov
xor
test
xor
test
loope
push
mov
sbb
and
push
ja
out
icebp
jne
push
movsl
lods
inc
and
push
daa
lods
or
add
jns
insl
das
dec
xchg
dec
rcl
xor
je
cmp
les
mov
adc
shlb
pushf
clc
pusha
push
cli
pop
fidivs
push
sub
push
cs
in
loopne
cwtl
lods
sub
mov
and
mov
fistps
pop
pop
cmp
stc
pop
push
test
mov
sbb
loopne
outsl
sbb
andb
pusha
mov
adc
xchg
inc
mov
push
pushw
sbb
inc
adc
mov
cmp
inc
outsb
add
add
dec
pop
fmul
inc
sub
cltd
xor
mov
jo
pop
clc
lods
int3
jbe
test
sub
xor
cmp
mov
dec
repnz
and
sub
nop
mov
pop
mov
pusha
pop
lcall
out
push
rcr
fldcw
frstor
xchg
xchg
push
test
jnp
sub
jge
push
dec
pop
outsb
arpl
jp
xchg
leave
xchg
incl
insl
push
sub
cmp
and
fildll
ja
cmpsl
sub
loopne
push
pop
push
dec
pushf
xchg
mov
outsl
mov
and
dec
scas
mov
and
lock
clc
xor
xchg
test
inc
jae
mov
jbe
call
pop
push
fimull
add
ret
add
dec
int
mov
mov
mov
fwait
cmp
lret
xchg
push
out
mov
and
in
xor
dec
movb
pop
or
jno
sub
jns
in
inc
loopne
mov
out
mov
adcb
or
test
inc
cmp
sbbb
cwtl
add
es
dec
int
es
or
jnp
xor
pop
or
lods
sub
mov
jecxz
pop
ret
inc
movaps
add
pop
pusha
popf
shrb
aam
int3
cmp
jno
mov
sti
xor
inc
add
and
dec
pop
pusha
mov
movsl
xchg
in
js
fs
mov
cltd
xorl
dec
dec
std
jg
cmp
scas
mov
pusha
test
add
gs
adc
dec
dec
push
fwait
sub
rcll
dec
loope
and
das
jbe
push
fiaddl
sarb
gs
and
mov
sar
out
mov
inc
mov
pushl
mov
mov
or
push
ret
xchg
sti
xchg
dec
mov
xchg
add
mov
jnp
faddl
pop
cmp
movsl
ficompl
dec
pop
push
xchg
adcl
mov
xor
addr16
fcoml
xor
mov
inc
xchg
sub
lds
lock
into
push
test
stc
pop
out
sbb
mov
pop
movsl
xchg
subl
inc
sbb
pusha
xor
xchg
adc
sbb
ror
dec
mov
aad
lcall
add
push
js
cld
xor
lock
pop
or
jnp
push
xor
cmp
sub
fldt
jp
aam
mov
adc
and
mov
dec
mov
hlt
fldt
add
and
jns
fildl
adc
pop
push
adc
jmp
data16
aad
jle
sahf
inc
pop
arpl
negl
clc
push
mov
xor
clc
mov
and
xorb
push
push
sbb
sbb
mov
sbb
pusha
incb
scas
aad
mov
popf
dec
add
and
sub
arpl
cs
iret
mov
lods
xchg
imul
jb
mov
hlt
rclb
loope
das
mov
jecxz
in
movb
pop
shll
stos
dec
fistps
sbb
loopne
pop
int
add
pop
popf
repnz
leave
or
sbbb
or
lods
mov
inc
imul
jne
pop
mov
in
push
inc
loopne
stos
lock
icebp
cmpsl
mov
and
sub
cs
lock
hlt
push
out
mov
cmpsb
pop
xor
xchg
sub
and
pop
in
mov
add
xchg
subl
push
je
pop
and
mov
inc
and
mov
imul
add
and
clc
inc
sub
ljmp
adc
xchg
dec
mov
andb
hlt
pusha
fdivrl
inc
ljmp
sub
daa
or
jnp
sbb
lods
lods
imul
push
adc
test
mov
jl
fadd
sub
mov
in
shrb
or
mov
stos
outsb
ja
xchg
dec
outsl
and
inc
push
sub
inc
jge
sbb
sub
sub
mov
daa
mov
iret
ja
lret
outsl
mov
cmp
add
fcmovne
adc
mov
in
pop
jo
pop
mov
dec
sbb
test
xchg
gs
leave
mov
lods
mov
rorl
mov
mov
fcom
pop
jg
jle
test
push
in
scas
js,pt
xor
aaa
cmpsb
cmp
cmpsl
push
pop
cmovns
fidivrs
out
iret
lret
sbb
mov
pop
loope
cld
loopne
push
filds
test
lret
sti
cld
test
cmp
scas
fisubrs
pop
jns
int3
push
jb
in
imul
mov
pop
pop
imul
out
push
push
hlt
cmp
add
fisubrs
mov
push
mov
push
int
pushf
or
leave
mov
cmpsb
mov
and
and
out
sbbl
pop
add
aad
cmp
mov
add
scas
jne
mov
add
sbbb
or
mov
and
jno
pop
jl
mov
sub
test
pop
xor
rolb
ret
adc
orl
add
xchg
fidivrl
arpl
divl
xchg
imul
ficomps
cltd
adc
xor
enter
cmp
mov
pop
sub
cltd
xchg
push
in
test
loopne
je
cld
or
enter
or
xlat
ljmp
insb
js
xor
lahf
fbstp
adc
mov
outsl
cs
cld
test
inc
in
hlt
and
pop
stc
mov
cwtl
xchg
add
or
aam
sub
cmpsb
mov
mov
xor
std
jl
int
jb
add
subb
clc
add
sbb
call
testl
out
es
xor
jmp
jl
outsb
push
lods
pop
ds
fisubl
sub
pusha
sub
add
fildll
mov
push
add
push
cmp
sbb
mov
lret
std
pop
lahf
jnp
jle
pop
aam
movsb
jne
push
aaa
jle
xor
out
movb
and
sarl
sbb
pusha
stc
imul
mul
xor
mov
adc
aas
mov
fcomps
jno
inc
push
pusha
scas
or
inc
sub
ret
lret
adc
fists
mov
add
push
fldl
std
mov
aaa
sbb
icebp
or
and
les
scas
sub
or
mov
xchg
out
jecxz
movl
xchg
in
lret
xchg
sbbb
adc
sbb
cli
cwtl
call
pop
or
movsb
jbe,pn
pop
xor
lods
in
cli
mov
out
int
lahf
cld
inc
aad
jae
cltd
test
int
mov
cld
scas
xchg
mov
pop
aaa
inc
subb
cs
sbb
faddl
rorb
inc
jecxz
out
xor
mov
adcl
hlt
iret
or
and
repnz
cltd
cmpsb
popa
push
gs
sub
sbb
xor
loopne
daa
outsb
sub
cmp
in
ret
push
or
adc
roll
ja
aam
outsl
mov
decb
jo
and
shll
icebp
add
pusha
andl
and
in
add
das
xor
imul
xor
inc
rorb
dec
push
sbbb
dec
mov
cld
test
cmp
jp
out
mov
ja
aad
adc
xchg
push
inc
pushf
mov
pop
pop
test
dec
push
mov
mov
xchg
sti
cmp
aaa
loop
mov
sub
lcall
cmc
sbb
adc
imul
loopne
or
sbb
popf
cmpb
repnz
push
imul
dec
mov
sbb
cmp
test
adc
cld
call
or
adc
ret
int3
jnp
je
push
cmp
lea
cli
clc
xchg
dec
mov
jo
dec
in
scas
lahf
lret
jp
sub
xchg
sbbb
int3
cmp
jge
pop
and
mov
mov
xchg
out
leave
fsts
add
inc
out
scas
ret
push
popf
sti
mov
add
inc
movsb
add
shl
pop
enter
lea
jmp
into
fs
dec
gs
mov
sahf
test
xchg
push
sbb
cmp
outsl
xor
xor
std
sub
shrb
clc
sbb
mov
jo
ss
or
ljmp
adc
add
cmp
repnz
fwait
icebp
cmpb
adc
sahf
mov
jge
insl
cmpsb
mov
andb
jbe
jmp
loope
aad
sub
mov
ret
pop
jb
test
pop
fwait
xchg
repnz
insl
lahf
xchg
and
sbbl
or
jne
lret
push
int3
add
mov
out
loope
fsubl
clc
unpckhps
daa
pop
test
adc
rcl
xchg
adc
clc
loopne
cmp
lahf
inc
inc
dec
and
mov
and
jns
lods
push
mov
push
add
loopne
pushf
jo
mov
mov
leave
test
int3
fwait
sub
andb
call
imul
mov
pusha
xchg
jne
mov
shl
dec
aaa
subb
loopne
icebp
adc
cmp
sbb
loopne
in
pop
mov
cmp
mov
push
xchg
dec
add
mov
sub
scas
fistpll
insb
add
mov
cmc
dec
icebp
jbe
mov
mov
mov
in
add
and
aas
push
scas
lock
add
lcall
movsl
arpl
sbb
pusha
insl
outsb
inc
int
scas
mov
mov
lcall
cmpsl
cmp
sarl
cmpsb
ja
fwait
push
into
lds
clc
loopne
out
push
sar
jae
rcll
sbb
adcl
cmp
mov
int
enter
lret
mov
pop
inc
out
push
popa
cmpsb
dec
mov
call
aam
rclb
and
mov
jp
cmpsb
ljmp
fwait
lret
lcall
add
and
mov
movsl
fistps
xchg
xor
dec
into
enter
mov
mov
out
or
test
repnz
cmp
dec
adc
add
mov
add
pusha
sub
mov
pop
hlt
idivb
ja
cmp
sbb
test
imul
es
sbb
loopne
cmpsl
or
les
mov
pop
loopne
aaa
popa
lahf
pop
iret
cmp
out
out
sbb
pusha
push
add
inc
cmpsb
dec
mov
clc
mov
icebp
lods
mov
adc
lock
icebp
lock
xchg
add
gs
xchg
mov
add
decb
stos
cmpsb
sahf
pop
dec
sub
call
loopne
dec
mov
mov
adc
jge
lods
ds
lahf
in
sbb
xchg
fisubrs
dec
test
out
into
push
inc
rorb
shlb
fsubrl
inc
jo
jo
pop
sbb
mov
stos
mov
leave
mov
scas
inc
arpl
jl
or
dec
cwtl
xchg
and
int
ljmp
add
sub
cli
cmp
mov
jmp
inc
shr
adcl
mov
fistpll
push
xor
bound
cmpsb
into
and
push
cli
into
clc
xchg
jge
in
bound
mov
sbb
loopne
mov
jne
cmpsl
cltd
add
repz
sub
daa
push
adcb
add
xorb
test
fadds
mov
cwtl
pop
mov
lcall
xchg
pop
fdivs
inc
adc
pop
aaa
jp
or
loope
ds
sub
ljmp
push
lcall
ds
das
adc
sbb
mov
push
ret
inc
push
aas
adc
sub
int
adc
rolb
scas
cmpsl
and
mov
mov
pop
pop
inc
pop
mov
and
mov
sub
xor
cltd
bound
jbe
adc
xlat
insl
je
pop
add
sub
flds
test
addb
loopne
sub
inc
fstpt
out
mov
and
jmp
push
aam
stos
sarl
aaa
xor
cltd
inc
mov
lret
inc
xchg
mov
jl
ds
and
loop
pushl
cli
adc
xchg
dec
sbb
add
or
jno
scas
stos
mov
mov
fldenv
lods
push
ficoml
xchg
sub
pop
gs
adc
cs
mov
lods
push
mov
or
lret
movsb
ffree
mov
mov
es
enter
adc
sbb
in
inc
and
flds
mov
adc
loope
pop
out
lret
notb
test
jmp
cmp
jns
mov
or
add
data16
and
or
inc
cs
pop
aaa
xlat
out
addr16
add
jnp
insb
mov
or
add
stos
sub
mov
rclb
pushf
enter
inc
pusha
popa
rolb
movsl
mov
shr
cmc
cmp
mov
mov
cmpl
jg
add
mov
cmpsb
cld
cmpb
pop
insl
pop
movsb
int3
scas
xchg
xor
pop
or
rclb
and
jp
mov
push
and
jnp
js
leavew
xchg
shlb
xor
aam
shlb
ss
int3
push
push
jae
xchg
push
lea
and
jmp
cmp
rcrb
push
mov
push
pop
cwtl
fadd
out
xor
dec
repz
adc
ret
fadds
stos
mov
cs
test
xor
and
inc
inc
dec
mov
loope
mov
xor
leave
mov
lret
js
add
pop
loop
sbb
xchg
ja
push
mov
test
adc
dec
call
mov
movsl
addr16
aas
data16
push
mov
cmpsl
jecxz
adc
adc
mov
lcall
dec
insb
hlt
dec
in
sbb
loopne
rol
fbld
xor
loop
movsb
loopne
lods
lcall
add
adc
orb
repnz
mov
popf
inc
pop
and
add
rorb
outsl
cmp
cmp
mov
bt
pop
repnz
sbb
or
fsts
les
fcomps
lock
inc
frstor
mov
adc
pusha
jg
shrl
or
int
sbb
pop
inc
pusha
in
inc
into
leave
xchg
jae
popa
int
lock
fldcw
pop
rcrb
ret
mov
jmp
fwait
or
inc
aad
outsb
dec
shrb
sub
in
divb
pop
movsl
pop
aad
xor
xlat
leave
cld
mov
xlat
jns
mulb
add
jl
dec
dec
dec
das
xchg
outsb
mov
mov
pop
int3
loope
mov
sti
pop
xchg
cwtl
pusha
in
mov
fwait
cmc
xchg
hlt
loopne
adc
in
mov
stos
ja
lock
test
arpl
shlb
stc
ret
adc
cltd
xlat
adc
inc
mov
or
add
lds
rcpps
inc
mov
and
insb
ds
loope
cmp
add
sbbb
pop
bnd
push
mov
arpl
sbb
or
dec
cltd
call
fldenv
mov
addb
fsubs
or
add
push
inc
out
inc
and
sub
pop
outsb
sbb
gs
sub
bnd
sbb
jne
in
inc
insb
pop
xchg
out
xor
cmp
test
dec
and
dec
aaa
add
sarb
mov
rcrb
adc
inc
fnstsw
mov
push
dec
int
add
mov
movsl
inc
jl
fstl
rcl
lods
loopne
pusha
xchg
add
test
addl
cmpsb
push
jl
ret
cli
into
push
add
jp
cmc
sarl
add
ljmp
aaa
ljmp
pop
stc
mov
test
mov
mov
bound
dec
dec
inc
pop
pop
and
sub
pop
inc
xchg
fs
and
jg
fs
mov
mov
sti
pop
add
pop
lds
iret
mov
sahf
push
pop
jg
mov
sbb
cmp
jo
addr16
sti
push
add
mov
cmp
xchg
jo
js
jg
dec
dec
jp
jns
sub
mov
mov
sbb
std
mov
cmc
loop
jo
pusha
aas
das
xorb
fcmovnbe
fidivrl
out
rcl
out
xchg
xor
cmpsl
icebp
repz
daa
xor
sbb
xchg
icebp
repz
loop
add
pusha
jmp
mov
xchg
iret
lahf
cld
lock
call
dec
sub
inc
outsl
insb
out
std
adc
mov
sbbb
clc
pop
movsl
pop
inc
sbb
jg
adc
and
dec
xorl
push
in
stos
mov
xor
jno
les
jae
aam
jae
lahf
push
mov
xorb
mov
sahf
arpl
hlt
outsb
add
sbb
movsl
lcall
jno
adc
stc
aaa
out
popa
into
hlt
mov
jle
add
mov
pavgw
scas
stos
cmc
and
mov
and
push
mov
push
push
lea
xor
aaa
repnz
mov
push
icebp
jg
xor
and
xor
fs
aam
outsl
cmp
mov
lods
vaddsubpd
jnp
fs
ficomps
xor
xor
jo
mov
pop
mov
ljmp
inc
lahf
fs
lcall
sti
ja
jp
call
add
inc
mov
out
sbb
hlt
loope
arpl
addl
ret
sbb
jb
fidivs
repz
lcall
mov
and
shlb
outsl
lret
add
iret
mov
mov
fstpt
mov
lock
inc
std
mov
or
daa
outsb
repz
popf
push
sbb
adcb
xor
xor
loope
daa
jge
negb
mov
inc
scas
cmc
repz
icebp
push
shlb
mov
scas
sub
sti
fistl
hlt
out
pop
and
dec
into
jae
pop
pop
in
add
subb
into
cmp
sbb
adc
push
loop
fcompl
rcl
adc
pop
or
inc
cmpsb
push
es
push
pop
movsl
stos
fcomps
add
rclb
in
push
push
jge
adc
leave
xchg
jb
sbb
and
xchg
dec
lahf
subl
mov
push
mov
cmpb
mov
sub
rcrl
popa
lock
imul
inc
xor
pop
adc
loopne
test
mov
cmpl
outsl
negl
test
arpl
roll
inc
pusha
divb
or
loopne
data16
aam
sbb
out
test
xor
sub
or
mov
lretw
lds
ja
test
mov
inc
dec
ja
outsb
cmpb
mov
jo
add
fdivs
jnp
outsl
scas
scas
scas
xchg
mov
ret
inc
jo
mov
in
clc
push
fnsave
xchg
dec
xlat
aas
rcll
pusha
pushf
sbb
divb
jp
mov
cmp
xchg
icebp
loope
arpl
or
rcll
ds
pop
or
lret
pop
fisttps
and
idivl
lret
dec
aas
sarl
fildll
outsb
sub
and
gs
adc
in
push
mov
les
push
mov
sub
cmp
xchg
xor
mov
loope
dec
xor
divl
rcrl
shl
mov
inc
jbe
adc
outsl
cmp
inc
setbe
lea
pop
iret
mov
loopne
jle
cmp
dec
ret
loopne
xchg
mov
cld
mov
add
jl
xchg
stos
inc
dec
add
out
pusha
sub
leave
pop
jb
push
push
mov
jl
mov
push
and
xor
push
mov
arpl
aas
nop
nop
add
les
mov
pop
sub
fs
mov
jno
sub
push
fwait
xchg
stc
dec
cs
pop
and
or
lcall
cmp
push
xchg
mov
dec
mov
fwait
sarb
pop
cmp
inc
ret
ljmp
sub
or
pusha
sub
xchg
in
loopne
shl
adc
and
lds
pop
jp
push
loopne
adc
outsb
loop
cltd
sbb
xor
cmpb
cmp
outsb
push
fistpll
push
sub
xchg
jg
cmc
pop
movsb
add
pop
pusha
and
test
pop
scas
xchg
sahf
enter
es
insb
dec
sbb
push
adc
pusha
jae
cmp
lea
dec
into
arpl
mov
push
stos
gs
xlat
test
and
testl
mov
rcrl
imul
out
lock
imul
les
int3
mov
adc
pop
into
xor
pop
cli
sub
pop
mov
cmpsl
lcall
inc
int3
ffree
pop
lods
rorl
add
fsub
inc
jns
ds
hlt
inc
outsb
cmpsb
mov
pop
loop
sbb
sahf
xor
paddusb
and
popf
insl
mov
xchg
leave
sub
popf
jns
outsb
in
mov
inc
jns
xchg
sub
fidivl
bound
into
sahf
leave
push
outsl
int
sub
jbe
xor
pop
xchg
je
mov
or
inc
test
xchg
daa
lods
sbb
and
push
pushf
mov
lret
hlt
sbb
je
lea
ds
cmp
loopne
cmp
jp
roll
rolb
sub
je
inc
sbbl
repz
add
out
aaa
and
sti
in
test
movsl
and
push
in
out
shll
pop
mov
push
adc
push
and
and
xchg
jns
jl
seto
ret
jns
jl
and
cli
mov
fiaddl
cmp
ror
push
out
sbb
inc
scas
sti
mov
aaa
sub
mov
jmp
xchg
stos
mov
inc
loope
fcom
push
dec
xchg
pop
icebp
mov
inc
loop
insb
mov
js
cmpsb
psubsb
mov
mov
in
mov
mov
add
test
dec
fwait
add
xor
fcmove
cltd
mov
test
leave
lock
aam
dec
add
mov
cmp
fldl2t
ljmp
mov
paddb
aam
movsb
sub
cmp
aas
loopne,pt
cli
into
pop
lds
or
or
pop
lret
andl
pop
inc
and
insb
or
and
xchg
fs
mov
shrb
or
fwait
aaa
dec
lock
jo
lods
cmpsb
ds
lea
mov
jno
xchg
mov
loopne
insl
pop
mov
or
sub
cmp
pop
insb
sbb
andb
mov
pop
cmp
mov
xchg
jle
add
and
test
mov
aaa
sub
pop
std
pop
pop
sbb
ficoms
jle
mov
jmp
scas
add
js
pop
adc
xorb
sti
xchg
addl
or
jno
push
ret
enter
adc
mov
or
push
sbb
fldcw
dec
and
mov
es
stos
mov
mov
enter
test
and
sbb
dec
movsb
hlt
xchg
pushf
pusha
dec
insl
sub
jno
aas
mov
pop
adcb
fildl
ret
sbb
out
stos
mov
imul
sub
shlb
cmpsb
pop
xchg
xchg
stos
mov
or
mov
xchg
xchg
icebp
mov
stos
add
mov
stos
and
mov
call
dec
lretw
mov
imul
sub
in
jbe
mov
add
test
mov
dec
test
scas
push
sbb
andl
xchg
ret
sbb
cli
cld
inc
xchg
test
xchg
sub
repz
or
sbb
stos
sub
lods
loope
sub
jno
mov
jnp
inc
lods
stos
movsb
mov
mov
fsubl
mov
inc
mov
mov
inc
das
cmc
add
loopne
xchg
call
out
sub
arpl
out
data16
leave
mov
fcompl
and
jecxz
pop
test
mov
jle
out
cmp
mov
inc
lods
lock
sub
adcl
add
loopne
jmp
lret
hlt
nop
call
test
cmp
inc
scas
push
push
andb
js
adc
mov
lods
cmc
add
mov
mov
push
mov
sub
stos
out
mov
inc
ja
ret
push
bound
adcl
jecxz
leave
and
mov
add
push
xchg
pop
or
push
sbb
loopne
stc
sbb
shlb
aas
jle
cmp
scas
movsb
xchg
jmp
and
lods
jno
mov
or
xor
gs
lds
or
clc
cmpsl
out
dec
fwait
test
fiaddl
loopne
sti
mov
test
push
inc
cld
popf
call
inc
pop
sub
inc
addr16
fs
test
mov
imul
je
popa
ljmp
xlat
shrb
dec
jmp
out
adc
cmpb
call
jle
outsl
pop
loope
dec
or
inc
cmpb
sub
push
clc
xor
sbb
adc
loopne
sbb
cmp
mov
leave
call
out
lcall
int3
subb
into
stc
mov
push
jo
sbbb
push
sub
xor
adc
pusha
clc
inc
pop
pop
std
mov
add
add
cmpsb
or
sub
scas
xor
sub
aad
jp
push
mov
cmp
dec
js
or
cmp
shrl
imul
out
mov
mov
push
in
movsb
icebp
jp
leave
cli
xchg
cli
js
jle
test
lcall
imul
repz
mov
mov
inc
sub
xor
xor
dec
xor
daa
sub
inc
rcrl
cwtl
mov
mov
jp
hlt
mov
push
cmp
mov
adc
stc
dec
imul
xchg
pop
out
xor
cs
subb
ja
pusha
cld
ja
cs
cmp
push
mov
insl
xchg
cld
sbb
sarb
sub
call
mov
cmp
lcall
jp
sti
movsb
sub
fwait
jecxz
lock
inc
adc
popf
add
dec
sbb
push
sti
jge
cltd
rcr
mov
sarb
mov
lcall
inc
xchg
negl
in
test
lods
adc
loopne
jp
mov
mov
js
xchg
loopne
xchg
cmpb
pushl
test
sbb
mov
pop
hlt
int
sbb
fwait
push
test
stos
aam
fildll
xchg
bound
push
bound
sar
iret
jge
pop
inc
sti
movl
lods
test
js
cs
and
mov
and
cltd
lahf
push
inc
pushf
inc
and
movsl
xor
inc
mov
data16
les
ss
std
adc
and
add
cs
into
rclb
fstps
jns
xor
or
xlat
push
lahf
out
and
adc
jecxz
sub
daa
push
push
pop
mov
mov
aaa
cmp
xchg
fnstenv
les
jecxz
jecxz
cld
int
cltd
and
test
mov
inc
fwait
aam
imul
add
jne
pop
clc
jnp
test
dec
add
add
sbb
into
cwtl
insb
loopne
cli
cmp
sti
inc
pop
adc
stc
jmp
cmp
dec
sub
jecxz
push
dec
cs
sub
xchg
fwait
mov
adc
mul
cs
test
les
or
js
add
cs
pop
jg
repnz
add
xor
pop
push
sbb
jp
sbb
pop
pop
inc
adc
xchg
fimull
je
pop
fisubl
sti
dec
mov
mov
loopne
xchg
in
push
test
je
dec
mov
addb
push
pushf
int3
mov
push
jb
hlt
xchg
inc
and
test
add
inc
push
adc
or
mov
jmp
mov
sbb
pop
jp
fwait
jb
jb
sbb
inc
pusha
out
push
inc
xor
insl
test
pusha
outsl
in
aad
pop
mov
stos
or
or
pusha
push
or
cmpsb
push
pushf
test
mov
or
imul
dec
adc
loopne
sbb
dec
loopne
test
testb
mov
mov
lea
xchg
sti
andl
xchg
xchg
inc
and
out
pop
and
mov
or
pusha
shlb
aad
cmp
shlb
repz
jo
ljmp
cmp
sbb
rolb
sub
push
rcrl
inc
jmp
and
cmp
xor
loopne
mov
or
inc
mov
iret
mov
shlb
jne
addr16
aaa
pop
imul
imul
outsl
push
mov
pop
out
loop
fadd
repnz
testb
insb
pop
js
xchg
insb
and
inc
sbbb
inc
inc
jmp
cmp
cltd
jge
es
lea
movsb
fdivrp
dec
sub
xchg
push
cmove
lea
push
mov
aas
sbb
sti
sub
fdivrs
pop
int
nop
mov
outsb
cmp
rorb
cmp
dec
fwait
add
orb
int
mov
or
in
dec
out
lret
cmp
out
xchg
out
in
outsl
pop
ljmp
ror
lock
pop
mov
and
hlt
lret
jecxz
mov
scas
fcmovb
sbb
std
into
adc
andb
cmp
add
nop
cld
cmp
es
fisttpll
push
out
cmpsl
dec
fistpll
xchg
adc
into
xor
jbe
ret
pop
adcb
lods
cmp
xor
or
arpl
cmpsl
imul
in
pop
es
pop
mov
out
mov
pop
xor
pop
inc
push
inc
fdivrl
or
mov
mov
mov
nop
in
mov
mov
inc
mov
mov
loope
and
add
add
scas
inc
cld
jge
fsubl
ja
xchg
add
mov
sahf
and
push
cmp
add
scas
dec
mov
add
dec
test
loopne
test
xor
sub
and
add
stc
lret
adcb
sbb
inc
outsl
aad
jl
jle
sbb
sub
mov
jbe
push
fldcw
sahf
cmpsb
aad
scas
xor
push
lcall
inc
pusha
aaa
call
stos
xchg
lds
sub
push
cmpsb
pop
test
clc
rclb
mov
and
mov
aas
xchg
and
cmp
push
stos
nop
les
add
scas
push
lods
out
mov
jno
or
jnp
lock
push
mov
or
xchg
sub
dec
push
push
adc
mov
mov
insb
add
loopne
add
and
xor
push
cltd
in
and
mov
mov
pop
cmp
push
int
lods
stos
push
add
shlb
mov
test
cld
loopne
cmp
mov
shrb
icebp
and
xchg
fnstsw
imul
jno
in
fwait
or
mov
shrb
iret
fdivrs
mov
mov
inc
js
sti
cmp
pop
aaa
inc
test
repnz
cmp
adc
adc
add
push
xor
pusha
xchg
dec
mov
jo
or
mov
movsb
pop
shll
push
mov
jecxz
ds
ror
adc
ss
mov
mov
testl
lahf
call
out
mov
aaa
jb
push
pop
aam
mov
push
mov
call
and
mov
mov
insb
jns
xchg
inc
and
fidivrl
push
incb
ja
add
and
sahf
pop
adc
lcall
jl
daa
clc
cmp
in
xchg
lea
mov
sbb
hlt
and
dec
mov
add
xchg
and
stos
push
mov
jg
and
push
mov
js
je
fwait
dec
dec
push
mov
hlt
pop
adc
or
and
mov
cmp
mov
inc
fadd
imul
lock
cmp
js
fnstenv
jl
scas
jne
int
xor
cmpl
jns
fnstcw
xor
shrb
jecxz
stc
mov
mov
jo
cmp
xchg
xchg
and
xlat
xchg
xchg
jnp
sbb
or
das
addr16
jecxz
jge
or
pushf
aam
js
imul
xorl
mov
and
insl
xor
push
xchg
mov
xchg
cmp
lcall
sub
repz
dec
loopne
ja
pop
das
xchg
int
push
jno
pop
adc
imul
cmpsb
mov
cmc
xlat
dec
fiaddl
cmpsb
stc
mov
in
in
pop
dec
pop
cmpsl
jp
sub
lahf
ret
jmp
mov
sbb
out
in
mov
int3
sub
stc
call
in
sbb
cmp
jno
mov
push
bound
andl
rolb
addb
jge
pop
loopne
pusha
in
fwait
rol
mov
out
sub
hlt
xor
out
popf
inc
jecxz
mov
test
sub
fmuls
mov
out
add
and
mov
sahf
ja
test
inc
loopne
int
loop
fldl
sub
xor
lahf
movsb
arpl
and
add
aad
test
xchg
xchg
adc
enter
mov
inc
cmp
daa
xchg
das
loope
pop
imul
jmp
sub
inc
add
push
dec
pop
stos
and
xor
sub
pop
mov
dec
int3
cli
stc
pop
pusha
jnp
dec
xchg
ljmp
sbb
iret
scas
les
or
mov
add
mov
add
pusha
jg
mov
rclb
xlat
test
jp
or
rcr
sub
mov
xor
or
rorb
aaa
dec
mov
cmpsl
and
scas
dec
push
sub
daa
mov
leave
int
aaa
and
iret
lahf
xchg
hlt
cmpsl
xor
sbb
js
into
dec
leave
mov
loop
aad
or
clc
inc
out
xchg
inc
call
mov
xchg
xor
add
inc
xchg
into
push
icebp
mov
lock
ss
mov
xchg
aaa
mov
push
fdivl
and
dec
sarb
mov
mov
push
cmp
push
cmp
rcr
sar
popa
imul
shrl
sahf
rorl
mov
test
jmp
push
push
insl
adc
pusha
mov
mov
xchg
into
mov
clc
or
loopne
pop
dec
jo
or
lret
push
mov
paddusb
push
push
dec
pop
rorb
in
shlb
xor
mov
pop
icebp
add
add
xor
dec
adc
inc
adc
int
jmp
mov
dec
sarl
push
mov
jg
arpl
inc
add
add
push
ficoml
ficoms
xchg
and
add
mov
and
xchg
sbb
inc
xor
pop
cmpsb
arpl
imul
cmp
data16
mov
pusha
mov
inc
pusha
adcl
jecxz
int
cmp
popf
mov
hlt
dec
xchg
pop
outsb
les
sub
fsubl
jne
cmp
mov
test
subl
fistl
sbb
jmp
fnstenv
inc
push
sub
xchg
adc
dec
mov
jp
mov
push
push
out
into
push
xor
es
cmp
mov
sbb
rorb
xor
adc
jg
sahf
push
lret
inc
fs
mov
pop
call
fs
nop
add
pop
mov
pmulhw
ja
push
nop
sub
out
adc
loopne
mov
nop
inc
add
xchg
ret
xchg
inc
out
in
hlt
stos
lret
pushf
pusha
rolb
lods
push
cmc
sbb
add
lods
pusha
pop
shlb
sarb
push
pop
loopne
xchg
mov
add
lds
pextrw
pop
addr16
mov
xchg
jb
arpl
out
xor
test
or
xchg
pusha
test
idivb
cmc
pop
ret
sbb
mov
stos
dec
in
mov
call
mov
in
test
rolb
in
inc
jno
inc
pusha
add
add
sub
fsubs
mov
push
mov
paddusw
call
ficoml
xchg
inc
jbe
loopne
jle
push
mov
repnz
out
enter
int3
stos
jo
sbb
ss
in
jbe
mov
xchg
dec
data16
dec
mov
iret
inc
frstor
bound
movsb
aad
mov
jl
push
int
dec
fwait
cmp
fcoml
mov
xor
mov
ljmp
mov
outsl
or
js
inc
push
add
shlb
push
and
fnstenv
sbb
outsl
lret
sub
cmpb
pusha
and
int
xchg
lret
jnp
xor
test
push
cmp
testb
inc
xchg
clc
test
add
mov
adc
sbb
and
jns
sub
push
cmpsl
jb
adc
inc
or
or
les
hlt
repnz
add
jmp
rcr
in
pop
xchg
add
andb
mov
icebp
pop
cvtps2pi
xchg
aad
out
ss
pop
adc
adc
and
scas
jp
push
inc
lret
jge
scas
inc
cltd
add
in
addr16
mov
cmp
xchg
test
pusha
hlt
jg
push
imul
xchg
xchg
pop
fbstp
mov
addb
out
testb
xchg
jae
push
iret
cld
mov
dec
cs
and
loopne
mov
and
int3
mov
nop
sub
test
psraw
clc
mov
sti
mov
testl
mov
xchg
sbb
rol
inc
stos
add
add
pop
hlt
jne
dec
inc
xchg
mov
loopne
hlt
mov
outsb
shll
pop
jecxz
push
enter
loop
fdivs
jnp
push
daa
or
and
sub
cmpsl
jge
sub
int3
mov
cmpsl
xor
lds
pop
jmp
fistpl
pop
shrl
lret
jmp
fbld
mov
mov
pop
pushf
shl
data16
mov
xor
iret
mov
jne
test
pop
inc
jbe
xor
jecxz
mov
xor
adc
cs
les
rolb
outsl
loopne
test
stos
xor
int3
sub
outsb
adcl
aaa
cmp
xchg
shr
xor
fadd
dec
ficompl
movsb
mov
mov
mov
imull
aam
mov
mov
ja
repz
fs
cld
mov
push
pop
add
cmp
jmp
outsl
xchg
outsb
mov
fsubs
add
loopne
mov
mov
add
inc
and
shlb
clc
cmovge
loopne
sbb
cmp
mov
das
adc
in
out
imul
push
mov
pushf
loopne
rcl
xchg
xchg
inc
subl
push
lock
inc
test
xchg
jl
fadds
pop
imul
lcall
cmpsl
aad
div
and
pop
xchg
arpl
scas
imul
sub
mov
movsb
jp
cmc
rorl
jecxz
adc
add
cmp
fbstp
xchg
adc
add
outsb
dec
insl
cmp
aas
aad
movsb
pop
rclb
insb
shlb
add
and
loopne
lcall
pop
cmp
inc
test
call
sbb
mov
and
inc
call
mov
xchg
rorl
mov
test
es
mov
cmc
out
stc
push
and
xor
cmp
mov
xlat
pop
cwtl
cmp
shr
add
or
inc
pusha
pop
or
fisttps
cli
stos
mull
mov
adc
ljmp
and
sbb
inc
ret
fbld
stc
pop
push
or
add
xchg
hlt
imul
pop
pop
xchg
or
jge
rolb
fldcw
push
mov
call
or
and
fcomps
hlt
xchg
fmuls
jge
fdivs
daa
daa
aad
jl
or
cmp
fs
xchg
add
mov
and
or
aam
int3
and
ja
mov
repnz
sub
movsb
inc
mov
repnz
stos
stos
push
xchg
sub
rep
mov
cltd
push
or
addb
adc
dec
jnp
add
sbb
add
bound
xchg
xor
adc
add
pop
inc
sbb
mov
and
xchg
stos
outsb
jl
pop
aaa
push
mov
repnz
or
loopne
inc
shl
fdivl
sub
adc
jmp
test
mov
pusha
mov
pop
hlt
push
xchg
dec
add
mov
orb
orl
jns
fdivs
mov
cmpsl
leave
or
insb
mov
jae
shrl
mov
loopne
cmc
shl
xor
out
xchg
adc
and
pop
cmovge
aaa
testb
cmpsb
mov
sti
mov
pop
arpl
fs
sub
jo
popf
inc
xchg
dec
sub
repnz
pop
fldl
cmp
mov
and
sbb
es
and
pushf
mov
out
or
or
mov
fisttpl
dec
testl
lods
pushf
test
insb
sti
fldt
js
stc
add
loopne
jge
stc
test
push
roll
daa
xor
sbb
xchg
sub
push
aas
repnz
xchg
inc
repnz
push
cwtl
int3
and
xor
mov
aas
adc
mov
mov
out
push
jae
in
or
mov
fisttpll
jge
das
xlat
das
add
pusha
pop
fst
test
or
loopne
pushf
inc
rcrb
jb
popa
outsb
lds
push
mov
xorb
sbb
fsts
mov
pusha
fistpl
push
cmp
stos
ja,pn
loopne
sbb
mov
das
iret
xchg
add
stc
and
cmpsl
or
adc
and
fsubrs
fistpl
lret
lock
add
in
dec
pop
sbb
je
xor
jns
movl
pusha
gs
out
inc
add
decl
pop
data16
sub
xor
pop
mov
sahf
mov
mov
dec
push
add
pusha
in
mov
pop
mov
je
inc
fidivrs
xor
xchg
cli
mov
clc
stos
jae
test
div
cmp
ljmp
or
sbb
rclb
mov
mov
clc
push
scas
insb
cmp
repnz
popa
mov
mov
or
xor
xchg
fldenv
xor
aad
sbb
insl
mov
mov
enter
xchg
js
pop
mov
repnz
mov
xchg
bound
jg
test
mov
faddl
jmp
add
and
mov
cs
stos
sub
pop
incl
int
enter
movsb
fwait
push
pusha
mov
dec
mov
cmp
jo
sbb
add
mov
add
dec
outsb
insb
sub
seta
pop
incb
scas
xchg
add
sbb
repnz
aaa
inc
loopne
lods
test
insb
and
push
mov
incb
pop
sub
test
rclb
popf
rcl
jecxz
xchg
lods
cmp
test
enter
cmc
sub
fisubrs
addr16
adcl
push
insl
cli
xchg
mov
testb
xchg
repnz
jns
lods
or
lock
aas
in
mov
mov
leave
jg
addr16
mov
leave
je
cltd
sarl
pushf
dec
pusha
lret
pusha
pusha
pop
xor
notb
add
pusha
out
call
outsb
mov
fistl
adc
inc
lods
data16
xor
int
je
ret
into
gs
xchg
pop
imul
adc
xchg
into
and
cmp
mov
mov
mov
ss
cmc
pshufw
pop
pusha
les
sbb
fadd
dec
push
lods
les
pop
push
hlt
mov
cmp
mov
jecxz
jbe
call
fidivl
rcll
orb
rorb
mov
cwtl
xor
inc
mov
mov
sbb
mov
or
sbb
cmp
pop
inc
sbb
xchg
sub
adc
pusha
rcr
cmp
cld
add
add
scas
push
aaa
inc
or
loopne
mov
lock
cmpsb
lea
inc
in
inc
movsl
aad
add
xorl
push
lods
dec
andb
sub
leave
jg
out
daa
jl
push
out
in
out
rorl
outsb
pop
cs
add
cmpb
dec
popf
cmp
test
cs
addl
sbb
and
dec
decb
fstpl
inc
out
push
push
xchg
stos
xor
sbb
scas
mov
outsb
mov
sub
stos
mov
mov
jecxz
cwtl
loopne
test
loopne
sub
cmp
xchg
scas
xchg
jp
enter
out
in
enter
leave
adc
scas
stc
outsb
sbb
jno
push
nop
loopne
fsubr
ja
loop
push
arpl
mov
mov
fisubl
pop
and
mov
fldcw
adc
popa
mov
cmp
mov
mov
rcll
sti
sbb
test
es
and
aad
pop
nop
xchg
pusha
adc
mov
ss
pop
adc
bound
ja
mov
fbstp
lock
pop
outsl
add
mov
fisttps
xchg
xor
pop
aaa
in
cmpsb
add
hlt
orb
xchg
sbb
inc
aad
loopne
dec
pop
jae
andb
es
lds
or
mov
pusha
lds
arpl
add
out
fimull
fsubrs
mov
mov
pop
and
pusha
loopne
adc
mov
cmp
jnp
lock
es
sbb
mov
cmovle
int
addr16
lret
das
jge
xchg
mov
repnz
arpl
pusha
inc
enter
inc
cmp
cmpsl
sub
inc
dec
cmpsb
fincstp
xchg
jnp
pop
lock
lahf
pop
add
repz
orb
add
xchg
mov
xchg
dec
mov
pop
in
mov
or
fs
ror
imul
dec
fxch
rcll
add
cmp
inc
sbb
aaa
add
mov
xor
notl
sarl
ja
jge
mov
push
icebp
enter
fbstp
jmp
jg
dec
mov
test
mov
push
int3
pop
out
sbb
and
xor
adc
call
lcall
pop
outsl
lahf
mov
filds
or
fcomp
dec
inc
adc
pop
jno
xor
into
sub
out
adc
cmp
pop
adc
xor
jle
insb
mov
add
add
and
pusha
lods
leave
les
xchg
test
test
push
lods
dec
push
jmp
cmp
test
cmc
mov
dec
out
push
inc
sub
mov
ss
loopne
mov
pop
cmc
loop
inc
fiadds
push
push
adc
push
cmp
and
aam
cwtl
cmp
pop
and
mov
insl
inc
mov
xchg
repz
and
mov
push
enter
xchg
xchg
inc
sub
cmc
mov
or
movsb
inc
and
lret
fildl
inc
insl
dec
or
add
dec
je
cs
cltd
in
mov
lret
jbe
pushl
push
mov
fndisi(8087
jecxz
addr16
cmp
fcmovb
and
rcrl
and
inc
clc
jge
add
bound
jae
jl
inc
xchg
pusha
out
mov
subb
and
decl
inc
popf
int3
cmpsl
cmc
inc
andl
cmc
dec
outsl
bound
loop
jecxz
sub
call
cli
sbb
add
sbb
cmp
cmc
lods
ds
addb
es
mov
add
and
inc
pop
aad
stos
dec
in
mov
in
inc
and
inc
push
or
push
mov
xorb
inc
xlat
ja
pushf
mov
inc
aas
lret
sbbl
mov
cmpb
sahf
dec
push
std
or
repnz
and
lret
dec
lock
fistpll
sub
outsl
call
inc
pop
adc
push
push
ljmp
fs
int3
cmp
popa
pop
ljmp
adc
add
dec
sti
jmp
in
jp
xor
dec
inc
jae
out
cs
loopne
adc
mov
cwtl
faddl
lds
xchg
mov
mov
daa
xchg
test
and
mov
mov
mov
fsubrs
insb
adc
fsubrs
scas
outsb
loopne
xor
lods
daa
mov
mov
and
repnz
add
mov
adc
test
push
sbb
cmp
sub
mov
shr
nop
and
bound
stc
xchg
add
sub
fadd
mov
and
push
mov
shll
pushf
inc
add
pop
test
pushf
sub
mov
mov
adc
int
es
add
fs
and
loop
imul
lret
cli
jg
or
aad
mov
stos
fst
popf
pop
lcall
or
mov
or
sbb
int
pop
sub
loopne
out
ljmp
nop
or
dec
sbb
pop
jecxz
mov
adc
pushf
pop
inc
jle
adc
rolb
mov
pop
ret
sti
inc
dec
int3
in
cs
pop
inc
inc
pop
inc
aas
cli
xor
inc
add
add
inc
out
enter
or
shlb
xor
sbb
loopne
fs
loopne
pop
iret
cmpsb
and
cld
test
ja
fwait
xchg
adc
sbb
lock
sbb
bound
lds
loopne
push
dec
loope
sub
xchg
imul
xchg
cmp
xor
and
jns
aad
jl
mov
cwtl
xor
lcall
rolb
std
sub
aas
test
enter
lods
mov
cmp
daa
push
jp
std
loopne
mov
movsl
push
fs
cmpsl
push
hlt
pop
scas
and
gs
xchg
pop
loopne
cltd
clc
push
loop
and
rclb
and
sub
sbb
sbb
add
push
sbb
adc
int3
xor
bound
divl
test
cmp
clc
loopne
insb
push
mov
loop
dec
and
sbb
pusha
adc
mov
int3
sbb
and
pusha
clc
jae
mov
lret
std
xor
pop
fbstp
sbb
out
lret
jae
mov
jg
pop
movsl
inc
xchg
mov
gs
adc
icebp
dec
mov
xor
pop
sbb
mov
loopne
push
inc
push
in
subb
mov
negb
jno
insl
or
shlb
iret
inc
xor
mov
mov
mov
add
mov
js
test
lret
inc
rorb
cmp
pushf
add
pop
mov
xchg
sbb
loopne
flds
sbb
cmc
inc
icebp
aas
sbb
push
inc
outsl
xor
jae
sbb
xchg
inc
and
lahf
lahf
je
insb
test
test
dec
test
dec
test
sub
iret
mov
inc
xor
mov
pop
scas
stos
daa
stos
cmp
mov
and
cltd
pop
repnz
cwtl
mov
clc
sub
bound
xchg
mov
jae
pop
lds
sbb
lock
mov
cmpsb
pop
sub
sbb
dec
xor
adc
ja,pt
and
adcl
and
xchg
pop
push
cmc
mov
jmp
mov
xor
ret
add
sub
ja
pop
jne
fnstcw
inc
negb
inc
push
jno
adc
jmp
mov
jl
pop
bnd
pop
jmp
and
cmp
add
inc
divb
jle
test
inc
xor
mov
sbb
pusha
mov
in
dec
mull
or
or
test
adc
hlt
outsb
mov
mov
or
loopne
pop
ficompl
pop
xor
pop
push
pusha
filds
inc
or
pushf
test
pop
ss
fwait
insb
icebp
xchg
cli
ljmp
sbb
int3
adcb
inc
les
jmp
rcr
loop
and
push
adc
adc
jg
outsl
imul
fldl2e
xor
loopne
lret
mov
and
mov
les
out
dec
push
outsb
icebp
lea
je
incb
sarb
inc
jmp
sub
rclb
decl
push
rol
mov
aas
rorb
cmp
or
rclb
push
mov
ret
adc
cld
pop
xor
adc
inc
adc
push
dec
dec
xchg
xchg
rclb
xlat
enter
loop
hlt
pop
xorl
insb
shrl
xchg
pop
dec
inc
xor
lods
scas
push
xchg
insb
mov
subb
fidivrl
sti
lock
push
addb
imul
adc
les
lret
cmp
imul
ljmp
clc
xor
push
dec
pop
fistpl
ljmp
adc
mov
jg
in
mov
mov
lcall
enter
mov
adc
fnstcw
jns
inc
mov
jp
inc
mov
int
jae
out
dec
mov
sbbl
sahf
cld
pop
pop
push
sahf
dec
lcall
jnp
sbb
xor
dec
es
pop
fnsave
add
pushf
fs
sbb
cmp
jl
xor
sbb
mov
pop
or
rcrb
jmp
pop
addr16
fdivl
imul
pusha
popf
mov
cld
mov
mov
add
sbb
pusha
and
imul
enter
pop
jecxz
fdivrs
mov
lret
dec
popa
push
jo
inc
add
mov
outsb
inc
clc
insb
dec
ret
daa
jns
adc
push
out
jb
jne
nop
hlt
pusha
and
push
mov
loopne
cld
loopne
rorl
xor
dec
mov
mov
fmul
iret
or
divl
in
jl
xchg
pop
adcl
pop
pop
mov
jno
cmp
pusha
lret
xchg
enter
xor
xor
sub
cs
test
and
jge
pop
lretw
pop
testl
push
push
sbb
and
addb
popf
addl
repnz
mov
outsl
imul
or
rol
popa
test
mov
call
fiadds
test
popa
inc
inc
test
mov
hlt
stc
inc
jp
sbb
pop
pop
mov
in
jge
xchg
and
fdivl
fwait
inc
pop
mov
xor
jno
mov
enter
adc
inc
lods
cmp
mov
mov
out
int3
pusha
lea
cmc
or
mov
cmp
repnz
pop
dec
xor
test
dec
cmpsl
stos
in
xchg
cwtl
cmp
iret
fildl
push
popf
lods
mov
pushf
insb
inc
fcmovnbe
jne
xor
adc
xchg
shrl
addl
or
pusha
push
inc
andb
repnz
jo
and
repz
jb
pop
imul
sbb
rcrb
mov
xchg
sub
push
or
idivb
cwtl
nop
pusha
pusha
ja
inc
jo
sbb
shrl
push
vmovdqa
mov
fbstp
popa
cmp
mov
icebp
into
cwtl
mov
ret
sub
repz
inc
xchg
stos
cld
mov
fwait
mov
cmp
push
loop
jp
loopne
mov
repnz
mov
inc
es
mov
sbb
add
aad
mov
mov
fldt
push
fwait
and
icebp
mov
cltd
mov
push
pop
repz
ret
and
int3
call
js
or
ret
mov
ljmp
push
sti
jb
pop
sbb
nop
sub
nop
je
icebp
pop
ss
popa
lret
and
je
fsubs
jo
xor
or
mov
dec
popa
cld
pop
mov
jecxz
add
loopne
xchg
or
or
pop
jae
mov
cwtl
clc
inc
aam
iret
mov
pop
mov
daa
add
mov
repz
fmuls
pop
gs
out
jle
popa
add
mov
stc
push
mov
dec
mov
movsb
adcb
inc
add
inc
add
or
xchg
add
and
mov
test
callw
pop
xlat
jmp
mov
xchg
and
pop
shll
pop
dec
fidivrs
idivl
cmp
mov
sbb
stc
or
add
inc
cmp
in
mull
add
push
add
fwait
lret
add
mov
push
mov
mov
mov
cmc
lods
and
sbb
sub
sbb
inc
sub
and
mov
inc
gs
jns
adc
sahf
sbb
xchg
popf
fcompl
out
mov
or
mov
test
add
dec
es
mov
lods
jmp
aaa
or
ljmp
mov
lods
inc
notb
inc
dec
shl
inc
pop
jae
negb
mov
cld
and
xor
movsl
push
mov
inc
sub
inc
cld
dec
scas
fdivrl
sbb
adcb
cwtl
fs
pusha
data16
adc
jo
jno
sti
sahf
lock
fidivs
fistpll
and
stos
add
mov
rolb
mov
dec
add
push
add
rcrb
test
and
cs
movl
push
shll
pop
and
mov
loopne
flds
insl
or
pop
in
pusha
cmp
lock
sbb
sbb
xor
in
mov
and
sbb
aad
int3
dec
test
ret
sub
mov
xor
pop
jmp
out
loope
xor
insl
cwtl
call
cli
xor
or
push
jle
adc
dec
cli
cmp
xchg
add
sbb
sbb
mov
dec
dec
mov
add
loopne
mov
fcoms
imul
xor
fs
and
add
popa
call
fimuls
mov
push
inc
scas
jnp
popf
xchg
pop
inc
adc
addb
shll
sbb
shl
push
mov
mov
cs
push
testb
test
pop
loope
cmpsb
cli
mov
mov
pop
add
es
pop
loop
cmpsb
jns
add
loopne
iret
add
and
call
insb
cmp
jo
shl
xor
popa
jle
and
inc
push
pop
data16
pushl
shlb
movsl
scas
fs
and
push
in
loope
cwtl
fadd
or
or
shrb
adc
fneni(8087
adc
lret
xor
inc
jl
inc
or
stc
js
mov
dec
lock
imul
leave
xchg
xor
into
aaa
pusha
pop
pop
fldenv
sub
adc
out
xchg
inc
ja
push
xor
push
cli
loope
fiaddl
aas
out
jno
push
sbb
jne
sbb
xor
mov
cmp
pop
jmp
test
test
lock
sbb
xor
and
sbbb
rcrb
pop
into
cwtl
pop
pusha
repz
cwtl
dec
and
insb
arpl
or
lods
leave
push
idiv
aas
mov
les
insb
jae
push
mov
inc
adcb
jns
mov
inc
push
or
loopne
imul
push
add
and
sahf
test
filds
repz
cmp
inc
dec
push
push
in
into
fstps
sub
cmp
or
pop
push
jl
mov
negl
das
ds
fistpll
inc
jmp
mov
fucom
shll
ss
sbb
add
and
xor
sub
ret
add
pop
mov
adc
sub
bswap
nop
test
jnp
sti
cmp
mov
popa
repz
or
adc
xlat
cmc
dec
sub
popa
scas
xchg
mov
lods
pusha
jne
hlt
in
hlt
add
pusha
movsl
and
frstor
mov
or
lahf
xchg
cld
rclb
shlb
fwait
xchg
ljmp
cmpsl
out
pop
lret
aam
jle
ja
push
loope
iret
pop
pop
push
popa
or
add
and
fdivrp
and
fisttpl
movl
ja
xor
add
loopne
testl
mov
daa
lea
xor
pop
sub
or
cmp
mov
mov
xor
lods
or
loopne
inc
loope
fildll
lea
je
dec
adc
popa
into
dec
subl
inc
fldt
data16
mov
push
push
ficoms
push
jmp
fs
iret
jae
lods
cmpsl
push
fisubrl
jecxz
popa
xor
pushf
sbb
scas
jecxz
dec
jb
mov
repnz
lcall
call
mov
mov
enter
push
pop
xlat
jb
mov
mov
mov
rcr
insl
xchg
adc
clc
dec
in
cmp
add
loopne
sbb
pop
out
pop
mov
sbb
in
mov
xlat
mov
jns
cmp
or
dec
ds
sarb
test
pop
in
and
adc
daa
jle
or
repnz
adc
inc
add
or
fstpl
stos
cmovs
xchg
shl
outsl
repnz
add
mov
inc
shrb
outsl
arpl
std
jae
sub
sarl
sbb
xchg
outsl
or
xchg
push
mov
mov
inc
std
out
mov
addb
and
push
out
divl
inc
xchg
ret
movsb
jns
dec
ret
std
jae
xchg
imulb
gs
mov
or
dec
or
add
xchg
xchg
int3
pop
xchg
outsl
mov
into
adc
mov
test
ret
cmp
push
fdivrs
stc
es
sub
in
les
mov
int3
ret
loopne
es
xchg
arpl
pop
adc
mov
push
pop
pop
or
xchg
jno
pop
es
inc
sub
mov
jle
mov
and
fwait
mov
pusha
or
mov
xor
mov
fdivr
xlat
inc
adc
add
xchg
dec
pusha
loope
mov
mov
mov
jne
aaa
adc
mov
adc
test
or
inc
add
ljmp
push
jns
sahf
add
and
jg
lret
add
mov
adc
stos
pop
daa
and
mov
out
sub
ss
dec
sbb
insb
pop
cmpsl
sahf
cmpsl
xchg
psadbw
push
push
sahf
aad
add
stc
xchg
or
test
movsl
add
mov
in
out
inc
mov
mov
rol
fstps
loope
mov
jl
sub
xchg
fnstcw
shlb
mov
pop
or
loopne
insl
mov
jnp
fcmovb
sbb
mov
jle
sbb
or
mov
add
sti
icebp
add
pushf
js
xor
shl
jo
inc
rclb
dec
fcomps
jmp
ja
mov
mov
shll
or
pop
movsl
jnp
or
fisttpll
inc
jmp
gs
daa
enter
cmpsl
std
or
jmp
aad
gs
shlb
adc
loope
dec
test
iret
insb
repz
adc
pushf
pusha
push
aam
insb
xchg
sub
xchg
pusha
cs
loopne
add
ret
sub
add
loopne
add
push
jmp
aam
or
mov
imul
popa
lahf
aaa
fstpt
jae
or
fildll
xor
leave
mov
dec
sahf
pop
mov
mov
pop
pop
mov
leave
mov
out
mov
sti
ret
mov
inc
jno
sbb
cli
dec
ret
int3
cmpb
dec
mov
aas
fisubs
mov
and
mov
decb
mov
mov
xchg
add
jns
sbb
iret
push
jno
push
mov
outsl
lea
push
aaa
sbb
nop
rcrb
mov
cmp
sbb
inc
jmp
pop
ljmp
mov
push
adcb
mov
adcl
mov
loopne
cli
out
or
test
and
cmp
notl
cld
pusha
inc
push
bnd
out
push
sbb
add
or
lcall
sub
outsb
rcl
add
movsb
cmp
add
arpl
jp
call
sbb
and
stos
insl
mov
idivb
fstpl
mov
fs
and
mov
mov
adc
popa
repnz
xlat
je
pop
mov
inc
jle
jae
mov
pushf
and
fcoml
sarl
addr16
dec
push
ret
xor
jmp
jae
jnp
aas
push
adc
mov
inc
sub
lock
push
xchg
jmp
popf
lret
dec
roll
xor
dec
imul
add
loopne
dec
mov
test
sub
inc
popa
repnz
sysexit
fdivrs
cmp
fnstsw
pop
push
das
pop
inc
sarl
pop
fs
data16
outsl
or
pusha
out
xchg
out
xchg
mov
inc
ret
push
and
fwait
iret
sti
jns
mov
mov
cmp
outsl
sub
sub
mov
pusha
push
stos
sub
dec
mov
and
add
push
repnz
jl
clc
and
mov
test
jl
mov
cmp
sub
addr16
inc
in
inc
mov
sub
inc
hlt
jle
cmpsl
aam
loopne
cltd
das
scas
icebp
xchg
dec
outsl
fs
lds
push
scas
xor
push
aam
adc
int3
fwait
insb
sbb
jg
lock
mov
cld
cmc
fdivrl
cli
aam
ds
fldl
movsl
dec
aad
jmp
cmpsb
inc
xchg
ljmp
jnp
out
jecxz
cmp
popf
lcall
sub
notl
sbb
sarb
mov
loop
shr
or
mov
cli
jae
icebp
into
jmp
sbb
pop
or
cmp
cmp
sub
push
push
sub
test
ljmp
sub
call
test
sbb
loopne
mov
mov
mov
jecxz
test
jnp
cmp
mov
repz
test
jp
andb
test
push
push
jb
cmpsb
sbb
inc
mov
shll
sbb
inc
cmpsb
sbb
test
jnp
or
mov
dec
adc
and
js
push
inc
mov
loopne
mov
add
popf
cmpb
add
pop
and
mov
xor
andb
out
adc
mov
cmpl
nop
nop
ror
and
cmp
cmp
neg
test
pop
mov
mov
mov
mov
loopne
sbbl
imul
test
loop
lds
adc
inc
cmp
sub
and
enter
ret
lret
lock
fistl
adc
movb
xor
push
sbb
jp
js
push
outsl
dec
cmp
in
in
insl
test
mov
jmp
mov
outsl
lret
xchg
notl
lret
ror
out
pop
push
inc
shr
data16
or
xchg
jl
mov
pusha
jl
ss
je
insl
cmp
lcall
leave
mov
and
pop
daa
movsb
cmp
movsl
and
add
icebp
popa
and
inc
push
mov
adc
add
call
xor
fcmovne
push
xchg
and
pop
shlb
arpl
icebp
test
xor
icebp
sub
pop
enter
or
faddl
xor
shll
sub
sub
inc
leave
xchg
sbb
push
pop
aaa
xor
mov
test
cmp
xor
push
out
scas
insl
cmc
inc
sahf
enter
cli
ljmp
or
stos
aad
pop
pop
test
in
cld
int3
ret
into
pop
xor
dec
cmp
shr
sarl
mov
outsb
dec
dec
jmp
jne
call
cmp
inc
xchg
dec
loopne
aam
sub
pop
mov
mov
add
and
lret
lods
add
mov
loopne
ds
testl
movsl
lea
mov
aad
shll
cmp
cmc
fsubr
sarb
xor
mov
push
xchg
inc
adcb
mov
ljmp
lea
mov
mov
mov
xchg
aam
loopne
int3
jmp
push
pop
ficoms
xchg
enter
xchg
fs
call
push
addl
cmp
xlat
jmp
inc
and
pop
out
out
out
mov
and
inc
testl
shlb
shrl
push
fs
sub
pop
aam
sub
push
xchg
add
xchg
jo
and
std
ret
inc
ficomps
aas
add
push
fldl2e
insl
sub
in
mov
mov
mov
inc
outsb
pop
lea
sub
sub
jl
mov
mov
jg
insl
jae
lahf
mov
nop
pusha
loop
je
push
push
pop
inc
jns
push
add
mov
xchg
add
mov
mov
sti
pop
shr
je
scas
jnp
jmp
mov
mov
adc
loop
icebp
ja
sbb
sbb
orb
mov
and
and
inc
dec
mov
dec
fxsave
sub
jg
xor
insb
test
ljmp
cld
add
repz
sub
cmpsb
aas
fwait
cs
cmp
out
leave
add
subb
cmp
in
pusha
sub
movsb
xor
lods
in
dec
jle
mov
imul
mov
ds
fiadds
nop
inc
gs
popf
mov
loopne
dec
xchg
push
and
mov
inc
mov
aad
push
movsl
jo
addl
mov
adc
shrb
adcb
jb
fwait
insl
fnstsw
stc
sbb
fistpl
sahf
popf
cmp
pusha
out
inc
pop
lret
cmp
in
inc
sbb
sub
xor
pop
and
mov
adc
loopne
insl
or
stos
jae
xlat
std
push
test
jecxz
mov
adc
xchg
push
rorb
mov
call
push
add
pusha
jmp
iret
std
test
add
jl
das
push
xadd
adc
rclb
pusha
add
jne
fsubrs
mov
xchg
test
insl
arpl
and
adc
pop
push
roll
xchg
adc
and
lock
jne
mov
test
loopne
jnp
bound
sub
nop
nop
and
sarb
movsl
jbe
repnz
inc
mov
push
cld
dec
in
out
and
push
and
into
lahf
clc
jmp
mov
or
jnp
stc
inc
jae
movsb
aad
test
int3
dec
mov
mov
dec
daa
xlat
mov
cs
push
jle
adc
jle
sub
pop
aas
push
xchg
sahf
mov
xchg
orb
inc
sub
adc
and
xlat
lcall
inc
js
cmc
movsl
mov
clc
sub
test
jecxz
cmp
fwait
arpl
andl
movsl
adc
mov
pop
sbb
sahf
test
mov
mov
in
jle
std
push
push
cmpb
icebp
sub
fwait
fwait
pop
lahf
inc
aad
mov
adc
fisubs
sbb
fcoml
pop
add
ljmp
sbb
loopne
aam
push
test
inc
inc
add
std
jle
adc
mov
js
ss
sbb
jbe
lods
rclb
fisubrl
sbb
jp
mov
sbbl
xor
add
jb
push
mov
mov
push
xorb
test
xor
mov
gs
aas
inc
nop
rol
pushf
xchg
shrb
les
testb
inc
inc
mov
pop
testb
sbbl
push
or
shlb
jmp
es
leave
int
or
cmpsl
jbe
jecxz
mov
in
add
jbe
mov
fistl
nop
loopne
add
sbbb
fldenv
inc
push
or
test
icebp
sar
lea
sub
mov
add
pusha
out
xor
pop
mov
mov
dec
xor
aam
cli
fstps
jno
dec
or
sub
movsb
and
xchg
xchg
aas
sbb
add
shlb
lods
in
jns
inc
push
les
aam
mov
fdivl
out
push
repnz
adc
mov
mov
aas
fs
mov
insl
subl
push
stc
cli
push
sarl
sub
dec
jp
mov
hlt
loope
fdivl
test
dec
sub
pop
ds
pop
mov
adc
or
movsb
cmp
and
stos
dec
in
fcmovu
scas
inc
xchg
jle
mov
sbb
loopne
mov
call
jle
loope
das
mov
jo
pop
xor
add
push
shl
inc
test
inc
sbb
test
fldl
mov
out
repz
or
ret
mov
jmp
fiadds
jne
mov
mov
push
inc
insl
mov
jo
push
scas
pushf
addb
xor
dec
cmp
pop
insl
arpl
es
lahf
or
cmp
xor
xchg
daa
inc
cltd
or
jo
cmpsl
bound
mov
and
xchg
sbb
jo
or
or
inc
inc
insl
dec
fsubp
add
rcrb
loopne
test
add
jns
inc
pop
add
and
dec
inc
andb
and
adc
pop
cmpsl
js
and
imul
movb
push
std
movsl
enter
sub
xor
dec
pushw
mov
push
xchg
and
push
sbb
mov
imul
daa
xchg
mov
sub
cld
cmpsb
inc
pop
test
mov
xchg
insb
and
pushf
xor
adc
and
bound
pop
xchg
pop
add
push
xlat
add
and
shll
lret
mov
push
and
mov
inc
xor
aam
sub
push
xchg
sahf
mov
out
in
mov
imul
jp
dec
mov
daa
int
test
lods
pusha
orb
jl
icebp
rorb
push
jge
sub
scas
cmp
jnp
std
fcompl
pusha
mov
and
jnp
dec
sarb
js
mov
in
test
sbb
and
arpl
in
push
leave
test
jns,pt
adc
mov
mov
test
in
jmp
lret
sub
fisubl
or
pushf
add
das
insl
mov
cmc
dec
pop
int
arpl
sub
lret
clc
add
stc
cmp
jno
push
pushf
pusha
xorb
andb
test
mov
mov
data16
push
into
repz
adc
loop
sub
mov
mov
adc
popa
jb
pop
add
push
sub
aaa
js
int
lds
xlat
mov
enter
dec
cs
dec
push
xor
negb
fmuls
sbb
lcall
jns
inc
test
gs
ret
or
inc
outsl
scas
lret
dec
out
fsubl
mov
lcall
jno
sbb
int3
pop
daa
lds
arpl
inc
test
out
xchg
mov
leave
xchg
sub
mov
lods
jo
mov
cmpb
sbb
sahf
sahf
adc
clc
mov
mov
push
lahf
mov
icebp
and
addl
idivl
sti
add
add
ljmp
add
addb
adc
cmp
adcb
stos
fwait
gs
inc
add
in
test
int3
pop
test
into
in
mov
push
aas
stos
xor
cwtl
add
cmp
nop
mov
fisubrs
sbb
pop
lods
or
mov
repz
xchg
fnstenv
sub
sub
xor
xor
mov
fimuls
loope
in
inc
in
testb
mov
mov
push
xor
xor
inc
aad
dec
or
mov
test
push
push
lahf
fiadds
push
pusha
sbb
sahf
sbb
mov
dec
ljmp
pushf
sbb
jo
daa
mov
sbb
inc
mov
nop
fadds
mov
sbb
xchg
and
mov
fadds
mov
cmp
jl
repnz
fisubl
insb
into
lret
lods
xchg
out
push
nop
sub
std
sub
mov
popf
xchg
adc
into
jp
orb
and
xlat
popf
out
pop
lods
imul
xchg
shr
fucompp
and
cmp
push
pop
mov
loope
jge
jnp
xchg
add
lcall
and
fisttps
and
lods
imul
add
sub
test
xchg
add
pusha
test
lods
pusha
push
jp
or
sti
addr16
mov
inc
test
jl
outsl
pop
and
cli
and
xor
and
js
pusha
cmp
aam
xchg
inc
adc
rorl
jmp
lret
and
daa
xchg
pushf
and
add
loopne
or
ret
mov
add
negb
sub
or
mov
jb
mulb
cmp
xor
cld
jbe
xor
outsb
shlb
xchg
and
sbb
adc
xorb
mov
inc
push
cmpsl
outsl
jne
or
push
ret
lock
cmp
mov
and
sub
loopne,pt
imul
pop
divl
mov
nop
mov
push
mov
stos
pop
mov
pusha
xchg
cmp
rolb
dec
mov
in
cmc
loop
testb
sbb
cmpsb
out
jg
add
into
adc
or
xor
push
push
sub
int
push
dec
jge
adc
iret
sbb
inc
sub
xchg
dec
aad
cld
sbb
fists
adc
adc
lea
in
inc
repz
aaa
cmp
mov
mov
jmp
xchg
xlat
or
push
sbb
pop
inc
ds
push
aas
js
insb
loop
arpl
mov
fwait
sarl
mov
jne
cmp
roll
lcall
test
dec
cmp
enter
mov
in
dec
cmp
sub
test
lock
xor
pop
sahf
add
rol
inc
fucom
call
imul
enter
ja
ds
ljmp
shrb
movsb
in
jnp
xchg
pop
gs
fs
sbb
cmpb
push
mov
jp
or
nop
pop
and
pusha
arpl
sub
pusha
or
loopne
lds
arpl
bound
jnp
shr
inc
xor
mov
pop
mov
scas
or
decl
imul
out
jge
mov
arpl
xor
not
in
cld
and
adc
lock
jecxz
insl
push
stc
push
jl
mov
fidivs
sub
push
xchg
stos
lea
inc
push
xchg
adcb
inc
clc
push
fadds
loop
js
dec
outsl
xchg
inc
adc
ds
push
or
mov
cmp
in
jne
test
cmp
leave
hlt
xor
jnp
int
vmovdqu
mov
pop
mov
mov
pop
lret
mov
rolb
inc
and
test
cmpb
rol
stos
sbb
arpl
inc
mov
clc
fisttps
cmp
lret
adc
inc
scas
daa
mov
mov
fisttpll
test
cmp
cld
jno
cltd
les
je
sti
bnd
orb
and
cmp
jp
adc
testl
mov
lock
cmp
rolb
cmpsl
lock
insb
mov
jae
adc
mov
out
popf
imul
andb
mov
pop
add
sbbb
inc
adcb
in
or
in
lcall
jge
outsl
cmp
push
not
add
mov
out
pop
aas
out
mov
and
pop
add
mov
adc
mov
mov
into
push
cmp
in
push
aaa
pop
mov
xchg
push
push
push
dec
pusha
jge
sub
frstor
das
idivl
rcr
notb
and
dec
fisubrs
sbb
inc
lds
fsubl
imul
movswl
test
test
std
jnp
pop
cmpsw
out
sbb
data16
fsubrl
mov
dec
dec
mov
push
fmul
adc
inc
fsts
jp
mov
inc
test
sub
sbb
cmp
mov
inc
xchg
aam
add
cmc
push
lcall
je
cmp
jg
jo
mov
mov
sbb
mov
jbe
ret
jno
jnp
pop
inc
push
in
je
movl
xor
sbb
jae
lock
adc
fisttpll
mov
iret
mov
repz
out
in
xorl
sti
repz
inc
adc
mov
lcall
mov
out
gs
lret
dec
roll
fstl
mov
and
xchg
pop
icebp
or
sub
jge
icebp
loope
pop
mov
dec
cmp
sub
les
adc
shl
pop
je
mov
and
outsl
int
jne
test
movsl
ss
subb
inc
or
or
or
xchg
in
pop
cmpsl
mov
xchg
mov
imull
push
and
sub
ljmp
dec
push
dec
lret
xor
lds
fsts
mov
rol
or
xorl
jo
push
stc
pop
push
push
xlat
fwait
sarl
cmp
loopne
stc
cmc
xor
xchg
sub
cmp
add
add
test
add
add
or
addr16
mov
cli
daa
dec
lds
cmp
nop
shlb
pusha
inc
pop
inc
cmpl
stos
pop
rcll
mov
into
sbb
clc
pusha
aas
out
mov
std
inc
in
stos
xorl
les
sub
mov
int
fwait
lea
and
lea
and
lea
mov
sbb
aam
fucomi
sbb
cmp
mov
xor
cmp
movl
mov
xchg
cwtl
pusha
movsb
fcmovne
sbb
add
jle
out
enter
imul
add
sbb
xor
add
imul
decl
pusha
xlat
movb
lret
sahf
outsb
pop
mov
sbb
inc
mov
mov
hlt
ret
lret
out
inc
pmulhuw
jb
ds
or
and
inc
test
mov
clc
push
add
add
rorl
mov
jge
call
xorb
insb
insb
rclb
and
add
mov
cs
out
sti
push
rcrb
cmp
add
jnp
cmp
bound
push
stc
jo
test
test
repz
popf
mov
outsl
or
pusha
iret
dec
imul
scas
out
stos
les
shrb
add
mov
fsubl
test
leave
sbb
jnp
mov
mov
inc
enter
imulb
xor
pop
rol
leave
aas
push
dec
inc
call
sahf
jno
les
push
in
lret
mov
pop
push
repnz
or
mov
insb
cli
jae
pop
hlt
js
ljmp
push
pushf
clc
pusha
rcrl
cli
aad
sbb
sarb
adc
add
xchg
inc
sarb
or
data16
push
mov
push
into
sbb
loopne
sbbb
sub
or
dec
jns
loope
lods
in
mov
xor
fldenv
adc
das
nop
cwtl
add
inc
mov
jmp
loop
popa
data16
test
inc
dec
xchg
jmp
sbb
jne
pop
pop
lret
sbb
cmp
lock
sub
pop
mov
jmp
in
aas
popa
call
popf
loope
clc
enter
mov
mov
add
lods
push
push
data16
mov
xor
scas
xorb
cmp
loopne
ret
sbb
mov
shll
outsb
push
mov
cmp
jl
cltd
lret
jno
or
or
int3
xchg
mov
sbb
loopne
icebp
or
jl
enter
scas
inc
repnz
push
ficompl
adc
pop
imul
and
nop
pusha
add
pop
mov
sub
filds
inc
mov
es
push
shll
clc
fisubrs
push
or
add
and
lock
cmp
lahf
or
rorb
test
lods
lods
rcll
iret
lock
pop
dec
cmpsl
cmpsb
call
mov
sub
daa
sahf
xchg
cltd
int3
and
dec
aam
jl
imul
lea
mov
loope
jl
insb
cmp
jo
insb
pushf
dec
pusha
pop
gs
and
dec
movsl
cmp
cmp
xchg
add
mov
fndisi(8087
push
dec
mov
jnp
sbb
and
inc
test
hlt
push
test
orb
mov
stos
imul
xlat
adc
pusha
lods
inc
xchg
ss
jns
push
imul
imul
push
inc
sbb
mov
pop
sarb
out
mov
cmpb
and
into
mov
xchg
xor
ljmp
mov
and
mov
pop
mov
add
addb
push
or
inc
cmp
in
mov
sub
stos
addb
imul
test
xchg
insl
ret
lods
ljmp
leave
inc
cmpsl
mov
fimuls
xlat
movsb
int
dec
inc
inc
pop
sahf
cli
push
mov
mov
popf
imul
cmpb
xor
repz
sub
pusha
pusha
adc
and
ret
das
sbb
sahf
push
pop
push
xchg
jmp
xlat
mov
and
ds
pop
push
inc
push
addr16
add
rcr
sub
inc
movsb
mov
jle
add
loopne
xor
int
das
mov
ja
ja
mov
cmp
fildll
ret
cmc
pop
daa
pop
sar
mulb
aad
mov
pusha
and
dec
cmp
jle
out
pop
mov
jp
cmp
push
adc
or
pop
cwtl
add
mov
mov
test
adcb
mov
inc
push
sub
aaa
mov
call
add
jo
xchg
das
sbbb
add
adc
addr16
add
js
push
fs
push
cwtl
lods
loopne
movl
in
xchg
cwtl
lock
loope
sub
daa
dec
jns
mov
insl
dec
jae
push
enter
push
aam
fs
imul
push
daa
insl
enter
add
xor
sub
and
ret
clc
in
lea
loopne
push
out
jae
sub
push
out
add
xchg
shlb
movsl
and
ss
or
mov
sub
pop
pusha
sti
sbbl
repnz
push
mov
je
lcall
imul
sub
jmp
icebp
aas
mov
mov
sbb
inc
dec
fldenv
cld
jl
jbe
mov
mov
fisubs
jno
cmp
cmp
cmpb
pop
jecxz
xlat
mov
scas
xchg
mov
je
jno
xchg
adcb
sbb
jg
add
hlt
push
repz
jge
inc
jo
cmp
mov
popa
inc
loope
in
outsl
outsl
les
insl
cmpsb
mov
stos
lock
repnz
pop
add
push
jecxz
ret
mov
push
ficompl
mov
xor
repnz
aam
jo
int3
loopne
inc
ds
outsl
pop
xor
xor
sbb
add
pusha
insb
add
jo
add
xor
ss
test
fstpl
dec
out
loop
mov
sub
lock
pop
push
js
orb
add
sub
in
push
addr16
xchg
dec
pop
mov
mov
sub
insb
mov
adc
test
mov
clc
dec
push
lret
arpl
mov
mov
pop
sbb
cmp
cmpb
fnstsw
insb
iret
mov
test
mov
inc
fcoml
mov
stos
aam
adc
mov
dec
iret
rolb
adc
sub
sbb
pop
in
mov
mov
pushf
movsb
adcb
jp
imul
adc
jbe
and
mov
sub
aas
and
movsl
setle
mov
push
add
dec
stos
call
or
iret
lcall
sub
pop
mov
xor
push
out
mov
inc
pop
rorb
mov
and
insb
add
loopne
stc
lret
push
adc
fldcw
das
or
popa
scas
xchg
hlt
xchg
inc
and
xchg
ja
mov
mov
and
fcomp
pop
sub
jo
lret
jg
pusha
loopne
test
mov
adc
push
dec
adc
ror
testb
cmp
inc
subb
adc
rol
ret
mov
and
and
mov
nop
cmpb
loopne
or
lods
movsl
pop
xchg
mov
fwait
shll
mov
fimull
leave
bound
rcrl
pop
cld
and
fdivr
outsb
mov
je
dec
in
xchg
jle
test
fidivs
mov
mov
cmp
mov
in
mov
xchg
jle
cld
insb
outsl
or
xor
in
fldt
hlt
mov
imull
pop
stos
mov
jge
cs
cmp
pop
lods
push
jmp
or
add
jne
iret
inc
pop
pop
dec
fisubrl
into
cmp
mov
pop
out
mov
hlt
xor
iret
pop
scas
xchg
insl
and
dec
mov
fnstenv
xchg
out
shl
in
in
shl
xor
js
ret
btc
cmpb
shll
push
lret
cwtl
pushf
sbbb
lods
sub
push
arpl
xorb
xchg
push
mov
mov
lcall
cmp
fadds
inc
dec
push
fs
mov
pop
fs
sahf
push
mov
lods
adc
jns
lods
ret
call
pop
push
inc
fwait
mov
imul
lods
cmp
inc
data16
pop
pop
sbb
pop
pop
ficomps
scas
clc
xor
rclb
dec
in
sub
xor
andb
or
shlb
xor
lret
inc
addr16
cwtl
and
call
arpl
in
cmp
pushf
mov
pusha
in
xchg
subb
cmc
add
and
out
and
test
jg
into
insb
mov
test
pop
push
or
adcl
nop
xor
mov
pop
int
int
fists
aam
sbb
pop
push
andl
out
dec
insl
shll
add
and
jns
sbb
outsl
hlt
mov
jbe
push
les
lock
jmp
stos
xchg
add
mov
mov
ja
stc
inc
and
push
push
mov
add
mov
jbe
pop
mov
cmp
pop
sbb
aaa
roll
xor
outsl
adc
and
push
push
and
call
cmpsl
mov
or
and
fwait
pop
jo
push
iret
mov
loopne
ss
clc
dec
or
loopne
das
mov
fiadds
cmp
xchg
xlat
les
xchg
repz
in
movsl
je
add
mov
loopne
sbbb
and
push
push
pusha
out
cli
loopne
or
xor
into
xor
add
mov
sarb
xchg
aad
pushaw
jno
and
add
push
and
arpl
cmp
pop
adc
inc
mov
idivb
sub
push
pop
push
xor
aad
push
pop
jp
subl
jb
pushf
and
push
pop
in
push
or
jmp
ret
jmp
or
mov
add
pop
imul
jnp
cwtl
inc
or
je
jns
repz
leave
xor
pop
imul
add
xchg
lcall
arpl
into
jno
ret
push
dec
and
imul
cltd
pop
sub
cmp
in
popa
rcll
nop
and
lahf
pop
int3
aas
js
iret
insb
roll
add
inc
cmp
or
dec
sbb
jg
push
ss
cmpb
repz
daa
test
lret
nop
add
dec
adcl
movsb
mov
bsr
scas
lods
xchg
and
sub
sbb
shr
dec
jp
or
add
aas
sbb
fisubrs
xor
inc
jo
mov
and
adc
rcrb
faddl
es
sub
xchg
mov
mov
cmp
nop
add
pop
mov
xchg
push
dec
les
enter
decb
add
pusha
rclb
imulb
call
shrl
push
bound
add
lcall
dec
flds
and
and
mov
jno
movl
call
and
call
aam
pop
mov
fcmovbe
mov
data16
jns
popa
ret
xchg
xchg
xchg
mov
mov
mov
inc
loope
sbb
cmp
sarl
push
lods
lcall
add
lret
out
inc
jne
push
ret
mov
jl
xchg
lcall
xchg
lods
sbb
loopne
dec
xchg
stc
je
push
inc
mov
and
pushf
dec
add
xor
sti
lret
cmpsl
jns
int
stos
clc
inc
mov
popf
cli
sbb
sti
mov
xchg
pusha
sahf
test
testl
adc
cmpb
test
jne
mov
adc
ret
sbb
fidivrs
flds
mov
hlt
fwait
test
scas
aas
mov
cmpl
mov
fimull
add
out
xor
dec
ror
xor
and
int
hlt
loopne
push
sbb
and
ds
jge
xchg
xor
lcall
xchg
jp
aas
stos
mov
add
mov
jle
ret
inc
cltd
mov
aam
imul
ljmp
push
btr
dec
popf
push
mov
hlt
push
fwait
jbe
xchg
add
dec
cwtl
in
loopne
lock
mov
fs
cli
or
pusha
lcall
cmpb
mov
add
bound
xor
push
inc
insb
fcmovb
xchg
jnp
lret
lds
xor
xchg
inc
fidivl
pop
jge
cld
mov
add
mov
loope
inc
cmp
inc
mov
push
cli
push
cwtl
sub
xchg
icebp
mov
clc
loopne
push
ljmp
cmp
jl
lock
subb
cltd
and
lock
inc
in
sub
insl
cli
mov
into
in
sub
push
or
popf
mov
pusha
sahf
mov
iret
jge
and
cld
loope
loopne
sub
xchg
mov
psllq
xor
push
popf
fistps
out
shl
mov
rolb
inc
insl
enter
test
lahf
aad
sub
cwtl
pusha
jae
leave
ja
inc
jge
xchg
fs
mov
sti
clc
fs
cs
adc
cmp
out
xchg
rclb
push
idivb
mov
cmpsb
sbb
push
xlat
push
subb
push
in
mov
dec
mov
inc
dec
lea
mov
inc
test
lret
and
and
mov
fwait
dec
popf
xchg
xlat
dec
rcll
and
fdivrl
nop
pop
loopne
mov
mov
fisubrl
xlat
mov
in
imul
subb
lock
movsb
cmp
fmuls
xchg
xor
ljmp
shl
adc
add
mov
lcall
adc
add
jb
mov
rolb
inc
inc
es
and
fs
shll
cmp
push
jl
mov
xchg
pop
sahf
ss
mov
imul
mov
sbb
xor
lahf
outsl
xor
adc
jo
add
out
ds
inc
ror
and
cmc
gs
adcb
das
test
cmp
adc
loope
mov
popa
and
lock
inc
dec
or
cltd
cmp
out
lcall
fldenv
dec
test
lahf
mov
repz
fs
adc
sahf
or
das
jmp
repnz
push
popf
inc
pusha
xchg
nop
mov
loope
out
mov
cld
in
xlat
ss
xchg
into
cmp
stos
test
push
stc
pop
inc
sysexit
xchg
ss
cmp
xlat
xor
jp
cmp
jno
hlt
ret
mov
add
sbb
sub
ficoms
loopne
lahf
add
sbbb
xchg
call
mov
or
or
clc
lds
test
and
dec
aam
dec
pop
xor
in
repnz
pop
sub
movsb
push
xor
adc
or
addb
sub
fdivrp
movsl
jecxz
je
cmp
aam
sub
enter
enter
call
inc
das
mov
xor
push
lock
cmp
jge
hlt
inc
mov
sub
lret
test
andb
inc
xchg
cwtl
mov
clc
add
loopne
cmp
inc
std
test
sub
dec
mov
fldcw
inc
jbe
adc
fs
ss
pop
xorb
push
push
mov
fldt
aam
movsb
test
pusha
and
push
add
cmp
sti
pushf
mov
pushf
rolb
add
and
jl
loop
dec
inc
xor
call
jo
into
popf
out
inc
je
mov
jle
add
mov
inc
mov
lret
fisubrl
stos
mov
adc
mov
cmp
inc
or
mov
in
mov
dec
pop
xor
sahf
jg
sbb
mov
mov
mov
fs
mov
rorl
psrld
sub
addr16
jns
push
cmp
icebp
xor
out
cmp
sub
insl
adc
loop
sbb
jno
pop
fimuls
stos
prefetch
jmp
mov
sbbb
mov
jns
mov
cltd
stos
enter
out
rolb
push
int
mov
push
shl
jo
in
and
lret
sti
mov
outsb
jle
pop
inc
mov
stos
lds
pop
add
outsl
or
jecxz
sbb
shlb
movsb
pusha
inc
xchg
aaa
push
dec
pop
inc
cmp
loopne
push
xor
inc
and
aaa
inc
mov
iret
xchg
fisubrs
push
movsl
jnp
scas
fstl
add
dec
push
test
push
dec
cwtl
mov
bound
add
movsb
test
jb
je
lods
icebp
or
pop
rol
fcoml
pop
mov
sub
sar
mov
inc
push
xor
xchg
imul
roll
push
and
mov
jb
xor
mov
pop
repnz
xchg
aad
inc
ficoml
mov
imul
pusha
sub
ds
cwtl
nop
add
xor
imul
arpl
stos
mov
clc
into
dec
bnd
int
leave
outsl
adc
xchg
rolb
ljmp
inc
or
sti
mov
mov
inc
addr16
pop
ret
test
inc
mov
pop
imul
out
add
mov
int3
add
into
dec
mov
mov
hlt
and
inc
or
dec
inc
add
adc
movsb
into
mov
fdivp
lods
scas
cmp
into
outsb
xor
inc
push
pusha
in
sti
insl
dec
adc
jne
push
mov
es
dec
in
fiaddl
or
jno
into
negb
and
mov
inc
cld
xorb
lcall
inc
cwtl
cmp
cli
sahf
jnp
pop
not
dec
adc
sub
mov
mov
pop
sarb
cwtl
mov
mov
aas
jle
xor
pushf
jl
cltd
ret
sbbb
insl
cmp
shr
les
pop
inc
sub
mov
shll
negb
call
pop
add
dec
inc
popa
jl
cmp
call
xchg
aad
loope
lahf
and
ret
pop
lods
dec
push
out
mov
movlhps
cmp
out
test
inc
cmp
rcl
mov
xchg
pop
bound
fcomps
in
cmp
cld
inc
inc
shll
cmpsb
and
out
out
xor
lret
or
inc
mov
xor
add
loopne
sub
xor
test
xchg
fcmovbe
add
sarb
insl
scas
shlb
push
add
ret
cmp
les
pop
loope
pop
cmpl
sbb
rorb
jae
xor
aaa
jecxz
rol
sub
push
mov
andl
int
jl
adc
in
testl
cld
fbld
in
and
lods
cmp
insb
pop
ljmp
and
movsl
gs
cmp
outsl
hlt
imul
cmp
mov
test
jmp
inc
cmovnp
repnz
push
in
push
out
jb
inc
add
jp
cmpsb
pop
sbb
cld
fsubrl
xor
mov
ja
xchg
mov
cmp
adc
imul
push
pop
dec
cmp
mov
xor
mov
fimuls
leave
lea
fsts
mov
insb
jg
insb
aam
lods
daa
fwait
loopne
aaa
scas
dec
adc
inc
out
or
and
into
in
cmp
mov
fistps
movsl
in
inc
test
or
xchg
scas
push
xchg
inc
lret
sbb
test
inc
mov
cs
scas
lea
inc
dec
test
xchg
add
loop
cltd
ror
mov
dec
ljmp
nop
inc
xor
loope
ss
inc
test
out
xor
cmp
xor
inc
add
out
and
dec
add
gs
xor
adc
loopne
movsl
rclb
imul
fcoms
int3
loopne
cltd
sub
pop
cli
out
mov
fs
xchg
or
loopne
in
out
in
push
lret
inc
outsb
loope
adcl
das
in
test
or
nop
inc
and
xchg
push
dec
push
test
mov
sbb
inc
data16
xor
pop
inc
int3
nop
mov
fcomps
and
inc
dec
adc
andb
add
push
add
add
loop
xchg
or
push
leave
jmp
aas
inc
pop
or
sub
bound
xor
mov
pop
flds
mov
das
push
pop
sbb
mov
imul
lcall
shr
push
jo
mov
and
test
cs
in
dec
inc
bound
fwait
or
js
pop
sbb
fwait
adc
testb
and
mov
inc
pop
mov
subb
int
enter
iret
pop
jge
nop
adc
shr
mov
push
mov
sub
int3
jecxz
test
or
sbb
push
inc
or
add
loop
mov
pusha
fs
dec
xchg
dec
iret
lock
test
add
cmp
call
or
mov
shrl
cwtl
mov
xor
xchg
movsl
hlt
ds
ret
push
lock
cmpsb
dec
adc
lds
aas
movb
out
adc
dec
shr
jae
js,pt
jno
gs
cmp
lock
and
mov
pusha
inc
aas
jl
rol
iret
repnz
jmp
add
and
punpckldq
jae
cs
cmp
and
addr16
adc
pop
add
jg
insl
dec
mov
lret
out
and
xorl
and
je
jp
push
test
cmp
jmp
nop
or
loop
jge
mov
mov
push
inc
in
in
scas
and
inc
and
or
in
mov
aam
adc
add
rorb
leave
arpl
mov
fwait
es
pop
push
insb
repz
sub
pop
pop
jle
xlat
add
cmpsl
in
cmpl
pop
push
xchg
lret
pushf
mov
add
pusha
sbb
and
xor
stc
mov
cmp
sbb
enter
cld
dec
aam
popa
into
or
pop
mov
and
mov
mov
test
xor
push
and
jb
pop
insb
mov
sbb
lahf
movhps
das
adcb
enter
insl
cwtl
mov
in
aam
pushf
mov
mov
mov
xchg
xchg
in
cmp
lds
aad
imul
xor
lock
inc
push
cmc
fisubrs
mov
ds
pop
mov
mov
rolb
or
loopne
pusha
das
ret
adc
mov
and
repz
repnz
inc
and
mov
in
pop
dec
movsl
and
or
mov
push
push
and
fstpt
das
pushf
mov
popa
mov
lahf
cmp
cmp
or
adc
fs
jle
pop
shr
jmp
shrb
push
jns
inc
shrb
cmp
fsub
dec
push
xchg
es
movsl
negl
sbb
repz
xchg
sub
mov
mov
cmp
jmp
inc
mov
loopne
and
stc
insl
arpl
in
into
or
jmp
lds
mov
push
lret
mov
xlat
pop
shrl
lods
sub
fwait
je
xchg
int3
jge
insl
lods
sbb
xchg
sti
int3
inc
les
push
sbb
mov
mov
fwait
pusha
add
lods
hlt
das
pop
mov
sbb
and
sub
mov
ficoml
shlb
and
scas
xchg
inc
pop
sarb
scas
push
sub
pop
and
mov
lret
mov
xchg
in
pop
sub
sub
les
inc
mov
cld
mov
fs
popf
aad
push
push
pop
mov
sar
scas
sub
and
sbb
mov
shlb
mov
loope
arpl
mov
or
mov
xchg
jle
out
pusha
cmp
cmp
nop
add
dec
jae
rcrb
xorb
cli
jbe
mov
jns
fsubrs
mov
sbb
add
insl
xor
and
xlat
jge
loop
sbb
or
mov
mov
xchg
fsubp
das
mov
cmp
repz
std
mov
or
xor
int3
push
pushf
call
xor
aaa
xor
adc
pop
sub
dec
fwait
adc
xor
sub
dec
loope
in
and
push
fs
loop
pop
adc
loopne
push
mov
fmuls
adc
mov
fst
mov
jb
add
out
in
jnp
xor
jecxz
movsb
dec
int3
fld
sarb
cmp
mov
cmpb
push
push
js
cmp
jnp
fstpl
incb
push
fldl
cmc
out
xchg
pop
mov
fiadds
js
out
jl
and
push
hlt
ror
xchg
or
and
inc
pop
inc
ret
in
inc
and
rolb
clc
mov
imul
iret
int
and
push
outsl
stos
ret
jle
ficoml
shlb
inc
insl
popf
lods
mov
movb
clc
mov
in
lret
hlt
bound
mov
xchg
sbb
or
jnp
mov
ljmp
jle
fcoml
aam
xor
or
mov
mov
dec
fadd
idiv
sub
fisubs
push
dec
mov
les
adc
xchg
mov
movsb
les
inc
inc
jo
cltd
pop
in
insb
and
dec
pusha
pop
xchg
inc
mov
outsb
mov
scas
xchg
and
shr
mov
xchg
adc
mov
xor
pushf
pop
loopne
mov
popf
jbe
xor
lcall
addl
adc
mov
dec
cmp
push
lods
adc
fs
fwait
negl
push
pop
mov
mov
js
movsl
iret
cmpsb
mov
add
sub
xor
jbe
mov
rorb
xor
mov
jns
lock
push
outsb
imul
adc
out
dec
out
mov
orb
jg
ja
in
inc
cwtl
fsubl
out
xchg
aaa
leave
and
adc
jge
faddp
in
jno
xor
adc
inc
push
bound
ss
xchg
faddl
jae
inc
and
cmc
movsl
push
sub
jl
mov
pop
shll
inc
js
lods
dec
mov
xor
push
loopne
sub
and
xor
or
xorb
mov
mov
or
mov
xchg
push
and
out
jp
cmc
sub
adc
shl
aas
inc
sub
std
xlat
jb
push
shll
js
fcos
add
call
mov
fwait
mov
or
sbb
and
xchg
dec
mov
rolb
lods
fldt
xchg
mov
xor
sarb
ljmp
dec
sub
or
sbb
rclb
dec
ret
out
push
and
cltd
frstor
ss
and
sbb
das
mov
xchg
lods
jns
lret
fimull
pusha
orb
leave
jl
jg
out
repz
push
insb
xchg
ljmp
loopne
inc
aam
fisubrl
sbb
pusha
cmpsb
add
scas
xchg
push
out
loope
daa
add
imul
test
or
and
push
nop
dec
add
xchg
mov
int3
mov
and
bound
xor
push
xor
in
ffreep
xchg
push
or
sbb
inc
cmpl
call
pushf
sar
fwait
and
ficomps
sub
lea
fsub
add
adc
ljmp
mov
js
lret
lock
sti
xchg
inc
lds
sti
mov
mov
inc
stos
lock
test
mov
mov
pop
inc
in
arpl
pop
dec
sbb
sub
aaa
adc
mov
aas
cmp
int3
stos
loopne
notl
rolb
pusha
add
mov
mov
aad
push
push
jge
xor
lock
sahf
dec
sub
cmp
xor
xor
jbe
mov
adc
sarb
rcr
mov
and
popw
dec
push
fadds
inc
in
mov
mov
scas
shll
mov
xor
mov
jbe
pop
ljmp
decl
test
lahf
inc
sub
ljmp
test
mov
lds
lcall
jbe
xor
push
icebp
and
aad
fistl
xlat
test
in
add
aas
jnp
test
xor
dec
mov
cmpb
and
sub
scas
js
adc
imul
push
lahf
adc
and
movsl
jmp
lock
js
clc
or
ljmp
mov
enter
push
out
stc
fs
cmpsl
mov
mov
dec
adc
mov
shlb
push
mov
mov
outsl
ret
out
fildl
arpl
fisttpl
loope
cmp
sub
stos
or
push
mov
loope
aaa
mov
mov
sbb
pop
shrb
or
and
sub
call
mov
out
xor
imul
lods
and
fistps
test
xchg
fsts
enter
fs
stc
jo
shrl
fs
jmp
xlat
jl
cmp
test
cltd
into
jg
cmp
lret
ja
dec
jg
ljmp
jae
push
out
je
and
or
pushf
pushf
add
xchg
add
xlat
std
insl
call
mov
out
int3
inc
test
out
dec
cmp
decl
ror
pushf
int3
shlb
data16
add
and
mov
out
in
movsb
jne
sbbl
pusha
mov
add
and
inc
out
mov
in
xchg
fistl
inc
loope
loop
pop
int
adc
andb
fists
fs
xchg
fdiv
int3
inc
xchg
fiadds
pop
scas
jp
dec
clc
pop
rolb
and
and
lods
hlt
dec
mov
inc
pop
lds
mov
scas
fadds
inc
shlb
mov
mov
jb
jg
and
mov
ljmp
pop
pop
push
sub
popf
loopne
ret
pop
push
mov
add
mov
xchg
loope
lea
mov
jae
sbb
mov
xchg
mov
push
out
fcom
mov
mov
xor
fcoms
jle
into
fwait
pop
or
or
dec
testb
cld
sub
shlb
sub
out
push
jne
imul
cmp
or
jb
flds
lret
dec
negl
jl
fs
xorb
fadd
pop
or
mov
pop
pop
jmp
loop
pushl
mov
sbb
addb
sub
fidivrl
adc
pusha
sub
sub
or
mov
sti
test
in
push
inc
mov
jb
sub
imul
or
xchg
xchg
inc
inc
jge
daa
lret
adc
gs
mov
xchg
cmpsb
in
mov
addb
ja
pop
dec
sbb
adc
loop
daa
mov
mov
into
adc
mov
or
adc
xchg
jns
out
dec
int
lahf
push
fidivs
das
cmc
repnz
dec
mov
jne
popf
ds
lock
out
xchg
push
sbb
gs
xor
imul
push
dec
adc
cmp
lds
add
or
mov
pushw
pop
jae
lods
mov
and
cwtl
sbbb
inc
or
xorb
stc
xor
shl
dec
mov
in
adc
loope
movsb
dec
adc
dec
sub
arpl
notl
in
shll
and
inc
xchg
sub
nop
push
and
aam
or
jl
pop
mov
push
inc
push
pop
into
and
mov
loop
mov
in
xchg
ja
sub
ss
popa
mov
sub
push
inc
xchg
pusha
sbb
bound
push
lahf
mov
mov
dec
and
jmp
dec
jae
and
sti
into
pop
or
jl
ja
mov
push
mov
or
loopne
jp
mov
xchg
out
or
inc
fimull
subl
dec
int3
push
testb
xor
inc
xchg
inc
out
push
aad
stos
push
mov
movsb
xchg
imul
sub
sbb
cmpsl
lock
dec
popf
cmc
pop
xchg
clc
loopne
rcrb
stos
insl
xchg
arpl
test
mov
xchg
mov
outsl
add
insb
js
and
mov
lret
ds
add
sub
in
pop
les
adc
lret
or
in
dec
add
add
icebp
pop
imul
adc
fabs
enter
inc
lock
sub
or
add
bswap
das
aas
adc
notb
addb
jmp
addb
loopne
xchg
jae
mov
std
test
es
ds
push
sub
or
fdivs
arpl
sub
sbb
or
mov
int
js
pop
lea
inc
xor
and
ficoml
and
js
inc
outsl
popf
adc
cltd
sbb
std
rolw
push
scas
mov
rolb
fdivrp
or
orb
or
xchg
gs
mov
loope
xlat
stos
clc
or
rol
xlat
dec
xchg
cmpsl
and
pushl
mov
ja
add
cmp
cmpsb
sub
popf
sbb
inc
dec
inc
and
dec
jg
pop
je
outsl
lret
test
fdivl
testb
mov
xor
test
inc
mov
nop
je
test
cmp
cmc
sbb
lea
sub
sbb
sub
and
sub
in
in
dec
in
cld
lods
push
mov
sbb
and
mov
out
lods
aas
mov
mov
dec
and
repz
push
inc
xor
test
mov
fstpt
xor
in
sbb
push
subb
mov
loopne
in
add
out
std
and
das
cmp
sbb
xor
pop
mov
insl
adc
mov
das
lcall
daa
clc
cmp
adc
push
mov
add
in
or
pushf
xor
lahf
push
sub
stc
mov
push
icebp
into
fnstsw
cmpsl
xchg
cmp
daa
xor
sahf
dec
jae
jns
mov
lods
enter
addb
loope,pt
in
mov
adc
dec
and
jecxz
pop
shll
xchg
push
xchg
mov
pop
insl
out
xor
xor
xchg
mov
repnz
mov
es
jp
es
mov
sub
into
mov
clc
lods
into
and
fnsave
adc
push
sbb
inc
cmp
stos
push
fwait
clc
cld
lods
fmuls
jnp
or
ja
insb
mov
adc
sarb
jp
pop
adc
shr
aas
xchg
mov
clc
jae
mov
xor
fsubrl
adc
mov
nop
sub
outsb
out
repz
into
pop
or
mov
or
clc
inc
pop
add
jnp
addr16
ja
movsl
or
cmpsl
pop
pop
pop
jb
sbb
addl
and
sbb
ljmp
pusha
push
and
jl
mov
sub
xchg
xchg
inc
inc
je
mov
pop
dec
add
dec
es
or
jno
ja
pop
and
mov
add
loopne
and
pop
dec
shrl
push
and
mov
rcl
or
add
lds
add
jmp
cwtl
js
sbb
repz
dec
and
shr
dec
or
xor
fildl
pusha
push
inc
push
pop
xchg
pop
stc
fsubrl
lock
cmp
mov
mov
mov
stc
mov
cld
test
mov
add
jl
das
dec
fistps
push
decb
std
mov
dec
repz
int3
daa
negb
cli
je
das
sub
pop
divl
fwait
mov
arpl
push
add
scas
or
test
popa
je
test
adc
inc
addr16
xchg
lock
cmp
inc
jne
xchg
loopne
movsb
jbe
mov
sub
adc
orb
pop
test
sub
pusha
fdivrl
inc
scas
cmp
cmp
or
cli
adcl
loopne
mov
mov
cmp
pusha
and
push
jle
push
decl
mov
jg
scas
adcl
leave
fstpt
in
lock
cmc
inc
das
test
add
xchg
push
inc
clts
push
aad
cli
mov
xor
xchg
aam
cmpsb
sbb
add
ret
mov
mov
sbb
outsl
orb
xchg
inc
ret
sbb
push
push
sub
cwtl
and
jg
mov
in
loopne
insl
aam
lds
sub
xchg
pusha
add
lods
pusha
pop
jns
xlat
mov
pop
xchg
dec
xchg
mov
pop
fimull
in
rolb
addb
pop
dec
jmp
aad
js
sahf
repnz
jnp
pop
pop
xchg
jmp
and
jle
ds
add
xor
sub
add
xorb
add
inc
jp
jmp
mov
pop
or
loopne
int3
popf
or
push
fadd
dec
jge
das
xchg
cmc
imul
mov
aaa
push
test
enter
xchg
push
inc
andps
sub
rclb
add
add
cmp
fmuls
pusha
daa
sti
pop
jle
inc
movsb
or
cltd
movsl
in
test
je
mov
fwait
cmp
push
pushf
xor
mov
inc
lcall
dec
and
mov
inc
es
stc
dec
mov
aam
adc
or
gs
or
push
sbb
repnz
addr16
mov
imul
out
pop
cltd
stos
push
repz
movsb
and
insl
or
pop
sti
dec
adc
sbbb
xorb
das
sub
std
fsubrs
cmp
pop
sahf
fsts
pop
sbb
push
mov
lock
daa
mov
ja
inc
push
sbb
es
xchg
arpl
sub
xchg
cmpsl
xchg
jo
add
cwtl
sub
sbb
cmp
cs
mov
inc
jle
pusha
cmp
fdivs
xchg
jb
out
aam
dec
adc
int3
inc
fnstcw
add
add
adc
pushf
les
mov
or
and
scas
aam
or
rcrb
lcall
into
mov
jnp
sbb
loopne
push
test
das
jno
lods
xor
push
adc
pop
div
and
mov
icebp
out
nop
mov
mov
ss
lahf
enter
cmc
mov
push
push
inc
fwait
cs
int3
and
jns
arpl
pushf
inc
fistpl
loopne
sub
and
adc
rclb
and
push
das
sbb
inc
sahf
ret
mov
sar
xlat
fdiv
pop
dec
mov
decb
inc
hlt
daa
dec
ret
mov
add
nop
jo
ja
enter
push
mov
stc
dec
ja
cwtl
inc
and
gs
lret
jle
inc
not
popf
repnz
sar
outsl
cltd
push
mov
pop
add
dec
imul
dec
mov
push
jg
adc
mov
pop
call
js
test
and
mov
push
mov
add
out
xlat
cmp
stos
rorl
mov
pop
add
outsl
shll
popf
test
les
sbb
add
mov
pop
loopne
push
vpmacssdqh
sub
repz
xchg
daa
add
xchg
cmp
inc
lock
jae
cs
push
pusha
mov
ret
xchg
idiv
adc
int3
test
mov
outsb
cltd
inc
push
xchg
mov
sbb
dec
mov
xchg
test
inc
andb
scas
in
sbb
and
outsl
pop
adc
pusha
bound
cmp
pop
les
add
mov
mov
push
push
and
mov
dec
ss
push
inc
jl
stos
or
or
mov
mov
cmpsb
into
outsb
add
cwtl
and
mov
les
xor
adc
adc
mov
outsl
imul
ds
leave
xchg
pop
mov
mov
test
enter
pop
mov
jmp
stos
lahf
iret
and
jo
mov
inc
pop
out
mov
jno
test
out
push
insl
ffreep
rolb
addb
ret
and
pushf
inc
loopne
xor
aam
je
daa
inc
xor
and
cmpsl
adc
jo
sub
xchg
push
pcmpgtb
xlat
adc
mov
inc
shll
sbb
add
lahf
out
fmul
xor
xchg
mov
xchg
lret
jmp
mov
mov
scas
jne
aam
add
push
adc
orb
jle
jns
lock
movsb
mov
push
pushf
mov
test
jmp
fistpl
shlb
jnp
daa
cmpsb
test
mov
ds
push
push
ss
adcb
adcl
fidivs
xchg
data16
stos
scas
dec
cltd
sub
insl
dec
push
mov
inc
pop
aam
adcb
repz
mov
inc
in
mov
cmpsl
and
push
xor
loop
daa
sub
jl
jns
pop
ret
mov
insl
or
fwait
sub
or
fs
scas
rorb
movsb
out
add
scas
jl
lods
pop
mov
xchg
mov
dec
cmpsb
daa
sbb
push
jmp
bswap
mov
dec
and
movsb
mov
fwait
je
out
push
pop
lcall
cli
out
push
daa
jle
xor
and
mov
mov
imul
scas
insl
mov
sbb
imul
shr
sti
pop
fucomi
outsb
push
ret
bound
dec
idivl
jmp
inc
jnp
icebp
mov
inc
push
popf
xchg
mov
shrb
mov
scas
lcall
adcb
nop
mov
xor
add
imul
xor
add
or
icebp
nop
enter
pop
adc
dec
add
xchg
fidivrl
inc
jl
fwait
lret
cld
add
cmc
add
inc
dec
rorb
sub
jg
sub
data16
mov
pusha
add
data16
xchg
into
lods
enter
aam
fcomps
sub
xchg
in
inc
and
mov
aaa
inc
fimuls
and
pop
shlb
lods
xor
loopne
ss
shrb
inc
jnp
xchg
add
add
jg
out
mov
ds
test
and
xchg
cmp
cmp
and
lods
cmpsb
adc
icebp
jmp
or
in
mov
and
dec
xchg
test
or
or
out
stos
out
lcall
and
mov
into
fidivl
mov
nop
inc
and
add
sbb
aaa
xchg
inc
add
ficomps
fld
mov
cwtl
and
inc
sub
inc
or
roll
dec
mov
cli
or
adcb
xchg
lods
outsb
das
mov
jg
lahf
adc
mov
jmp
pop
cmp
sbb
lahf
adc
jecxz
dec
fwait
mov
int
push
xchg
in
sub
jae
xchg
add
push
dec
push
xor
mov
pop
add
call
inc
inc
jge
mov
push
jecxz
popa
andl
mov
push
mov
test
or
mov
push
inc
lods
xchg
nop
insb
and
rcrb
xchg
jno
cld
inc
lods
fcmovbe
push
pop
or
and
shl
xchg
dec
jns
xchg
popl
xor
jecxz
test
mov
sarl
shll
lret
insb
arpl
in
add
js
cmp
jge
jl
pop
push
aam
xchg
xlat
dec
arpl
mov
lock
jae
aas
test
cmp
mov
stos
into
xor
int3
sub
cmc
pop
mov
dec
test
cmpsb
data16
xlat
sbb
and
cmp
rolb
rorl
fldl
movsb
mov
sub
fisubrs
add
sbbb
insl
sbb
mov
sti
ljmp
push
movb
sarb
jp
mov
or
xchg
rep
jno
mov
lods
or
out
mov
push
popa
iret
std
sbbl
cmpsl
popl
ds
jae
or
lods
mov
mov
aam
pop
idivl
rolb
push
loop
push
repnz
loopne
mov
rcrb
inc
jnp
mov
subb
loopne
gs
in
lock
inc
xor
xchg
movsb
cmp
inc
xchg
ljmp
mov
or
aam
add
mov
cmpsb
sbb
xchg
into
ffreep
outsb
daa
lods
xor
jmp
and
cltd
aaa
push
in
sahf
mov
jmp
outsl
cmp
mov
and
fistl
xor
cmp
or
nop
faddl
into
sub
inc
jae
and
pop
mov
mov
mov
aam
shll
shl
fdivrl
in
in
xlat
push
push
outsl
mov
sarl
pop
mov
clc
movsl
lea
xchg
push
insl
mov
and
ficoml
push
in
movsb
fcmovnu
subb
mov
leave
cmp
cmpsb
sbb
mov
jle
dec
cmpsl
sbb
pop
and
inc
mov
mov
lods
mov
mov
mov
pop
cmp
pop
orl
and
in
cmp
rorb
xlat
add
into
nop
add
mov
sbbb
or
and
mov
inc
sbb
pop
stos
repz
aas
hlt
sbb
mov
adc
pop
stos
xor
sbb
int
add
mov
addb
or
insb
mov
add
inc
out
negl
test
inc
mov
cli
ja
call
mov
imulb
icebp
clc
jae
les
sub
cmp
in
jge
icebp
mov
jo
lods
hlt
jmp
jg
movsl
mov
mov
fcomp
test
adcb
ret
push
adc
inc
int
mov
lds
inc
jae
xchg
sub
xor
xchg
pop
mov
and
lahf
cmc
shrl
andb
and
gs
subb
inc
pop
sbbl
xorl
add
pop
jns
and
pop
inc
daa
ss
dec
pop
dec
pop
mov
jnp
nop
aam
adc
pop
or
mull
sub
popa
inc
push
int
xchg
lret
gs
inc
rcl
xchg
mov
es
or
hlt
mov
pop
enter
mov
fisubrs
mov
imul
jo
adc
test
push
jne
dec
inc
iret
in
lods
movsb
jo
out
aad
lahf
mov
mov
push
lds
je
dec
mov
jns
pop
and
cmp
xchg
out
mov
mov
mov
sbb
and
xchg
int3
sub
lea
inc
addb
xchg
test
fcmovu
lods
pop
push
dec
hlt
dec
in
bound
xchg
mov
ljmp
dec
cmpsb
adc
data16
dec
sub
imul
dec
outsl
add
andb
add
adc
rolb
and
pop
pop
push
mov
shlb
out
push
push
inc
out
mov
mov
mov
decb
cmc
repz
jne
test
xchg
sahf
xor
cmpsb
xor
andb
xor
arpl
lret
inc
cwtl
lock
dec
movsl
clc
stos
dec
lods
fsubrp
shll
fdiv
xchg
lods
adc
adc
push
pop
or
add
sbb
pop
cmc
push
mov
das
pop
and
xor
xchg
cmpsl
pop
fnstcw
mov
outsb
add
rolb
inc
mov
ret
mov
cmpl
fdivs
adc
xlat
in
jno
lret
out
pop
xchg
xor
inc
and
pushf
mov
mov
inc
jp
out
push
insl
or
adc
push
sbb
xchg
loop
adc
adc
das
aam
pop
add
jbe
xchg
outsl
icebp
push
adc
pop
push
in
mov
add
mov
add
push
in
jns
mov
cwtl
nop
pusha
mov
add
shr
add
arpl
mov
push
dec
cld
mov
movsl
jge
adc
shl
xor
xchg
mov
insl
mov
xchg
xchg
pushf
loopne
shl
in
cld
xor
in
push
js
push
sbb
xor
in
mov
cmpsb
andb
xor
sub
jns
subps
inc
stc
jecxz
sub
cmpsl
dec
sarl
and
dec
add
pusha
push
js
rcll
sub
mov
ret
jecxz
dec
jno
jae
push
mov
jl
hlt
lods
jmp
sbb
mov
push
and
subb
nop
shl
sbb
pop
outsb
mov
mov
pop
cmpsl
movsl
mov
sub
jmp
aaa
cmp
dec
stc
lret
out
insl
pop
and
xlat
cmp
pop
sahf
add
rolb
and
stos
xchg
out
push
pop
pop
jmp
mov
or
add
call
in
ja
ljmp
cmp
xlat
mov
pop
inc
jecxz
or
mov
mov
fxch
jl
jb
jne
ret
adc
jbe
sub
add
mov
jbe
pop
push
out
dec
jecxz
xor
ret
sti
pop
insl
dec
xor
inc
xchg
fldenv
rcrb
loopne
fs
mov
call
and
test
ja
in
jl
into
cmc
sbb
mov
dec
shll
cltd
mov
inc
pop
push
test
fcoms
loopne
icebp
es
bound
dec
inc
cmp
sub
dec
ficoml
daa
pop
xchg
incl
mov
inc
repz
fiaddl
pop
push
push
popf
lods
push
pop
mov
add
insl
ja
xor
rolb
mov
lahf
test
adc
mov
and
cld
xor
cwtl
in
mov
or
xchg
add
dec
inc
pop
std
push
mov
mov
cmp
or
mov
in
dec
roll
stc
ret
xchg
pop
mov
sub
push
xlat
dec
ud0
xor
jmp
cmp
fsubl
mov
jg
ror
jno
push
dec
repnz
in
scas
mov
ljmp
cmpb
out
dec
test
aad
sub
aas
pop
popa
mov
in
fnsave
add
loopne
das
shl
sbb
pop
xchg
arpl
mov
outsl
add
repnz
adcb
lods
jmp
fisubrs
sbb
popf
sbb
push
adc
cmp
xchg
lahf
divb
jmp
test
sbb
pop
xor
push
cmp
cmpsb
in
std
outsb
jae
push
push
pop
hlt
pushf
in
pusha
cmpsl
pop
xorl
enter
test
in
dec
sbb
cmc
sbb
jb
sub
cmpsl
add
cmp
or
xor
push
pop
dec
push
fsubl
dec
pop
rcrb
shll
mov
and
add
and
loopne
add
fldl
adc
cmpsb
in
pop
cmp
pushw
mov
mov
enter
mov
sbb
mov
sbb
xchg
mov
sub
pop
jae
adc
push
call
sbb
push
pop
and
out
aam
mov
pop
cmpsl
scas
sbb
mov
mov
stos
and
push
lods
movsb
jmp
adc
inc
dec
dec
repz
xor
mov
inc
lea
adc
data16
xchg
scas
mov
and
stc
xor
ljmp
les
fcmovnbe
mov
mov
and
mov
mov
xlat
outsl
mov
mov
pop
jg
pop
popa
repnz
jl
in
lret
cmpsb
out
into
dec
cli
shrl
adc
mov
ljmp
leave
mov
mov
scas
mov
mov
xchg
and
nop
clc
add
mov
push
dec
pop
es
movsl
adc
rorb
test
mov
lds
or
mov
dec
push
lods
pop
xchg
aaa
xchg
loop
and
in
scas
jne
in
xor
cmc
fstpt
cli
inc
dec
push
add
jo
xor
pop
fcompl
xor
lods
les
pop
out
mov
sub
int3
jno
mov
adc
test
in
xor
sbb
add
mov
or
push
add
es
sbb
ja
das
mov
inc
arpl
divl
jo
mov
add
pop
lret
xor
loop
mov
cwtl
add
adc
sub
push
push
ljmp
dec
fldenv
mov
jo
adc
mov
pop
lds
cmp
mov
js
inc
movsl
xlat
or
mov
cmp
xor
into
sbbb
nop
pop
loopne
xor
sahf
idiv
dec
scas
out
mov
push
in
mov
dec
daa
inc
leave
movsl
push
fdivs
cld
fists
mov
roll
xchg
imulb
mov
fadd
jp
cli
pop
es
lret
or
pop
and
push
enter
adc
out
shrl
hlt
adc
cmp
push
mov
mov
pop
and
mov
repz
jb
cmp
pop
cs
ljmp
adc
xor
imul
xor
mov
fimull
inc
push
test
add
sarb
rorl
inc
mov
notl
stos
push
repnz
test
adc
sub
aad
int
dec
lret
ret
and
addb
xor
test
inc
lret
decl
push
pop
xlat
std
xchg
or
call
stc
testl
push
and
xchg
xor
cmpb
pop
test
loope
xor
in
out
ret
scas
push
es
lret
mov
sbb
subb
or
loopne
jb
cmpb
xchg
jecxz
jge
ljmp
sti
cltd
cmp
call
test
roll
out
mov
test
mov
aaa
dec
pop
incl
jl
xchg
stc
ficompl
push
hlt
pop
mov
in
pop
pop
jge
jecxz
pop
inc
cltd
cmpb
hlt
mov
xor
lret
pop
xor
inc
push
jecxz
mov
das
dec
idivb
orl
and
mov
scas
insl
push
or
rcrb
gs
mov
jmp
adc
call
pusha
ret
mov
mov
mov
and
nop
cwtl
and
jp
hlt
out
fiadds
and
jecxz
pop
pop
dec
je
les
stc
arpl
add
and
inc
loope
mov
mov
push
insb
out
pop
leave
loop
test
mov
cmp
aam
ds
mov
mov
adc
dec
xchg
ds
enter
jmp
fsts
repnz
sub
and
mov
test
pop
sub
jmp
push
lea
pop
jne
mov
stos
dec
in
divl
in
movsl
scas
ljmp
adc
adc
inc
jb
js
stc
cltd
lret
add
into
loope
inc
and
sub
jb
jno
aaa
bswap
xchg
repnz
addl
fiaddl
int3
pusha
push
mov
or
or
and
aaa
mov
mov
hlt
pop
push
fsub
mov
outsl
jl
bound
jge
add
inc
or
sbbb
rcr
adcb
negb
test
sub
mov
sub
dec
mov
push
mov
sbb
in
jmp
icebp
pop
pusha
xlat
mov
inc
jle
sub
ss
adc
or
dec
test
rclb
and
mov
in
mov
pusha
test
pop
and
iret
push
inc
add
pop
add
shlb
data16
outsl
sti
ds
push
dec
test
dec
add
shl
filds
inc
aad
fcmovu
repnz
push
in
add
mov
dec
aas
push
mov
cmc
jl
lcall
std
mov
fstl
inc
mov
aas
out
cmp
sahf
out
loop
sub
push
push
enter
sahf
scas
inc
out
cs
and
pop
xor
cmpsl
sbb
pop
in
push
movsl
add
add
mov
and
es
sub
xchg
cmp
fsts
out
xor
sti
push
fwait
pop
cmp
test
and
cmp
cmp
int
nop
and
ss
dec
push
mov
out
rcrl
add
adc
pusha
mov
stos
cmp
add
loopne
xor
jae
adc
pushf
nop
inc
xlat
push
dec
mov
sbb
xchg
sbb
rcrb
push
mov
mov
mov
jnp
out
adc
aas
push
mov
mov
es
dec
jecxz
and
in
scas
or
inc
cmp
rclb
xchg
sbb
and
push
leave
int
adc
mov
int3
es
dec
push
or
adc
pop
out
pop
mov
xchg
mov
addl
orb
int
xchg
ror
cmpsb
ljmp
sbb
aad
dec
repnz
jne
mov
fdivrs
mov
mov
cmpsl
adc
inc
dec
xchg
push
sbb
mov
xor
mov
cmp
daa
xchg
daa
loop
add
jmp
pop
lahf
and
sub
lcall
xchg
jg
xchg
push
aaa
jno
dec
xchg
jecxz
and
cmp
addl
imul
push
int3
cmc
popf
lret
dec
jnp
pop
stos
arpl
or
int3
or
mov
pop
push
sub
imul
mov
dec
cwtl
or
leave
cmp
lods
data16
fcmovnb
add
loopne
ja
addb
loopne
mov
js
js
mov
fwait
dec
mov
mov
adc
loopne
cmp
and
xlat
icebp
cmp
loop
aad
push
dec
ljmp
add
and
lods
mov
cltd
enter
call
jne
cli
enter
movsb
dec
cmpsb
jnp
jecxz
dec
pop
leave
rcrl
jp
xor
mov
xlat
in
xchg
imul
push
cmc
inc
pushf
dec
add
int3
test
jnp
aad
sbb
ret
cmpsb
cs
lret
xchg
add
jo
sbb
pop
sbbl
test
subl
pop
mov
mov
dec
and
xchg
adc
mov
adc
popf
jno
jno
clc
clc
ds
inc
fucomi
dec
dec
mov
fmul
adc
scas
mov
imul
cmc
fsubrs
push
pop
ret
lcall
xchg
aad
addb
movsl
jb
mov
enter
dec
add
loopne
sti
or
pusha
and
dec
pushf
adc
out
lds
mov
xchg
and
or
scas
rcrb
insl
repz
sbb
mov
mov
or
add
mov
stos
out
xchg
clc
jnp
and
insl
test
pop
jae
pop
enter
xchg
stos
out
mov
pop
mov
cmp
adc
iret
adc
inc
jp
sbb
cmp
sbb
lret
insl
cmpsb
mov
imul
mov
cld
inc
addl
and
push
mov
sbbb
pusha
fld
xchg
or
mov
inc
and
lret
mov
test
cmpb
cmp
push
adc
repnz
xlat
stos
jb
pop
pusha
xchg
call
stos
aad
mov
std
jl
enter
loop
outsl
stc
lcall
out
push
les
ja
xchg
mov
bound
ss
sahf
lret
fdivrp
or
xor
or
mov
into
mov
adc
out
inc
adc
mov
ljmp
xlat
aam
addr16
lods
pop
cmp
scas
loope
mov
sub
loop
jmp
and
loop
test
pop
sar
jge
dec
or
out
jo
bound
cmp
int3
mov
lock
xor
jg
add
adc
inc
shrb
iret
push
push
mov
loopne
sub
mov
add
push
rorb
sarb
loopne
push
add
inc
dec
inc
xor
push
dec
inc
mov
lea
imul
mov
mov
sar
mov
rcrb
rclb
aaa
mov
pop
out
mov
inc
cld
leave
adc
rolb
jns
push
inc
mov
test
inc
fs
mov
ja
aam
xor
push
mov
andb
pop
jnp
mov
inc
push
test
cmpsl
sbb
testl
cmpsl
lods
mov
mov
std
dec
popa
ret
je
lock
out
add
jp
push
popf
movsl
loope
dec
movsb
mov
pop
std
shrl
in
sub
movups
mov
xor
std
gs
sahf
sbb
rcrb
ja
es
es
and
cmp
nop
inc
cmpsb
push
and
xor
into
mov
shlb
dec
pop
xchg
nop
movsb
and
sbb
mov
inc
jns
pushf
cld
inc
sbb
and
push
clc
arpl
sub
add
pop
xchg
and
sbb
and
cmp
wbinvd
cmpl
ja
test
jg
adc
in
cs
pusha
out
jno
xorb
psubq
repnz
shr
outsb
lock
jnp
pop
pushf
mov
inc
push
dec
xchg
fmull
leave
hlt
test
mov
vucomisd
mov
xor
lret
push
arpl
mov
stc
outsl
add
not
xor
sub
ret
mov
rcl
xor
dec
cmp
insb
rclb
cmpb
push
mov
cmp
adc
test
jae
pop
adc
mov
mov
ss
call
sbb
loopne
mov
nop
pusha
orb
xor
push
dec
out
rol
pop
sub
out
adc
jmp
jno
xchg
int
fildll
mov
xchg
mov
mov
jle
gs
ljmp
enter
stc
aaa
testb
mov
out
jp
mov
das
jmp
inc
and
push
fs
test
repz
insl
out
lcall
push
mov
push
and
clc
sahf
cltd
aaa
addr16
and
fcomip
aas
and
push
clc
pop
mulb
test
or
scas
cmp
inc
rorb
mov
in
adc
rorl
pusha
sbb
xchg
dec
mov
rorb
sahf
dec
dec
popa
and
loop
fidivs
cmp
lea
and
mov
mov
push
fwait
shrl
and
add
xchg
pop
dec
mov
mov
jle
xchg
or
adc
loopne
clc
sbbb
mov
enter
daa
insl
mov
xchg
sub
idiv
pop
inc
and
dec
insb
pop
lods
sahf
into
pusha
xchg
sub
adc
mov
or
data16
popl
cmpsb
xor
pop
xchg
enter
xchg
int3
call
stos
movsb
scas
sbb
hlt
in
sbb
shl
mov
inc
inc
ja
lods
cmpb
xor
ret
add
add
fsubrp
cmc
adc
xor
int
mov
mov
xchg
mov
sbb
mov
pushf
add
pop
cmp
inc
idiv
test
xlat
lret
pushf
insb
add
movb
insb
enter
js
adc
adc
lcall
sub
or
or
pusha
cmpsl
call
fs
ret
jno
push
cs
and
out
push
and
mov
frstor
sub
mov
xchg
jo
xchg
mov
pop
lret
jbe
cmp
repz
dec
aad
ljmp
sti
xchg
and
imul
popf
add
jno
inc
pusha
mov
push
dec
push
pop
xor
movsb
xor
fsub
outsl
mov
shl
les
fmuls
jnp
pop
jns
pushf
sbb
inc
adc
sbb
loop
shrl
ret
fldenv
and
test
out
sbb
and
xchg
sbb
loopne
dec
lods
les
imul
xorl
test
outsl
iret
leave
adc
cmp
add
pop
adc
pusha
rclb
push
adcb
and
shl
fwait
lock
mov
in
pop
fnsave
mov
jge
stos
add
out
adc
scas
fs
dec
stos
mov
int3
jnp
dec
mov
ret
jg
add
push
push
sahf
xchg
jge
repz
push
outsb
sub
mov
mov
pop
fldt
es
pop
inc
xchg
mov
sub
hlt
inc
jns
mov
dec
adc
fisttpll
loope
dec
sub
insb
ss
dec
lret
stos
popa
inc
inc
sar
cmp
fldt
or
aas
mov
add
adc
cmp
pop
es
xchg
xor
loope
sbb
out
and
jo
sub
repnz
into
ror
adc
pop
daa
or
rolb
lcall
dec
xor
enter
mov
xorb
fldt
mov
jl
sbb
pusha
fisubs
sahf
mov
mov
adcb
stos
sbb
jle
jg
inc
and
jo
test
adc
lods
shrl
inc
add
inc
push
xchg
push
add
repz
pop
mov
std
xor
outsl
shll
push
inc
sarb
repz
and
mov
mov
pop
adc
mov
shll
in
mov
sub
jge
lahf
inc
and
daa
jg
test
inc
ja
add
loopne
jg
shll
das
lods
aaa
push
sbb
and
jg
cld
and
lea
inc
xchg
test
fildl
sbb
mov
fadds
jle
ds
add
dec
lret
pop
jnp
add
das
xchg
dec
out
cmp
call
mov
lea
test
adc
push
add
ss
enter
sbb
das
loope
xlat
repnz
cld
or
inc
sub
cmp
test
lds
xchg
popf
xchg
mov
xlat
aas
jmp
jno
jne
cmp
andb
xchg
pusha
cmp
lods
mov
ud2
mov
int3
imul
and
cmpsl
push
stc
sbb
push
mov
je
addr16
movsb
pop
imul
je
cld
push
ja
adc
adc
add
inc
loopw
or
sbb
shlb
mov
aad
pop
push
ret
dec
sbb
sarb
sub
dec
fcoml
dec
jmp
mov
push
dec
loopne
ljmp
lods
inc
mov
push
push
outsb
cwtl
add
or
sbb
dec
push
test
repz
std
ljmp
cmp
push
std
sbb
pop
adc
jbe
sbb
add
loopne
subl
cwtl
call
mov
ljmp
cmpsb
bound
xor
sub
cmpsl
arpl
pushf
in
loopne
jb
jo
xchg
inc
dec
mov
adc
sti
mov
add
pop
mov
test
popf
and
pop
sub
ficomps
rorl
mov
adc
add
xchg
mov
add
loopne
fwait
pop
shrl
lds
jmp
cli
shlb
push
leave
int
and
das
daa
mov
mov
jg
ss
mov
adcb
loopne
lock
ljmp
cmp
inc
stos
aad
movaps
std
adc
push
xor
add
js
mov
loope
arpl
push
sbb
cmp
loopne
pop
push
mov
cld
and
push
sbbl
mov
pop
ret
xchg
or
sbbb
adc
mov
xor
test
fcoml
xor
enter
js
jnp
popf
cmpsl
loopne
xchg
sbb
les
out
hlt
cmp
and
mov
pop
add
sbb
adc
sti
or
insb
sub
repnz
mov
or
mov
rclb
dec
das
adc
mov
xor
daa
and
ret
inc
ja
or
jnp
mov
call
cmp
les
imul
aas
jmp
cmp
in
stos
jns
mov
pop
movsl
movsb
push
push
xor
add
mov
lock
jne
hlt
aaa
jbe
outsl
aam
push
sbb
push
pop
sbb
loopne
adc
push
in
jmp
test
pusha
cli
add
sub
push
pushf
les
adc
mov
cmp
imul
mov
sub
leave
nop
push
pusha
sbb
loopne
xor
and
xchg
adc
mov
xchg
xchg
dec
loope
imul
loopne
inc
jb
lds
cmc
movsb
push
movzbl
imul
insb
out
jo
jmp
rolb
pop
mov
and
mov
push
lods
ss
jb
rorb
pusha
mov
xor
xor
pop
aad
xchg
push
adc
call
ljmp
dec
out
cli
adc
mov
fs
push
movsl
pop
dec
sbb
adc
and
fsubs
sub
mov
lods
adc
lcall
lods
cmp
jle
jge
adc
fistpl
test
cmp
jb
mov
push
lds
call
loopne
repz
and
pop
pop
dec
icebp
lock
stos
jg
push
adc
mov
idivb
xchg
add
loopne
aaa
push
cmpl
jns
or
aam
or
comiss
clc
outsb
fmulp
jg
repz
dec
les
bnd
lods
insb
fisubrl
dec
clc
lock
mov
shlb
andb
adc
add
outsb
pop
pop
sarl
cmp
stos
mov
mov
add
mov
call
dec
leave
cwtl
sbb
test
and
fldl
cmp
pusha
sbb
lahf
rcrb
mov
add
inc
in
push
adc
stc
rorb
lock
stc
test
cmpsl
xor
inc
ret
repz
add
jnp
cmp
test
inc
or
rorb
pusha
loopne
mov
out
repz
cwtl
add
mov
outsb
xchg
add
testb
sbb
mov
inc
mov
add
add
mov
jae
lcall
inc
mov
ja
test
insl
aas
sub
xor
lea
insb
pop
pop
pop
aad
mov
rcrb
and
cmp
push
push
pop
dec
adc
rcrb
jns
sarl
jecxz
fisttpl
sarb
add
les
mov
sbb
imul
aas
sbb
adc
inc
pop
ret
adc
aaa
jo
outsl
scas
rcll
loopne
xchg
in
pop
mov
cmp
mov
sarl
xor
and
ds
dec
aam
dec
and
adc
pop
loope
or
addb
adcb
jecxz
nop
and
mov
mov
push
outsb
mov
and
sbb
xchg
jg
adc
jmp
orb
pop
sub
sbbl
dec
stos
mov
roll
xor
cli
lods
jb
inc
inc
and
pusha
fildll
cs
mov
cli
test
mov
pop
cs
pop
mov
cltd
ds
inc
nop
and
out
lods
and
and
add
int3
mov
test
gs
dec
push
and
test
imul
sub
gs
lea
mov
test
es
mov
xor
xor
mov
stos
pusha
and
push
xchg
push
sbb
gs
add
sub
mov
adc
sub
movsb
mov
pop
xor
sbb
jo
jmp
cwtl
in
daa
movsl
ljmp
or
cmp
sbb
pop
push
sti
pop
setbe
or
sbbl
add
inc
inc
icebp
mov
nop
movsb
pusha
xchg
rol
scas
adc
sqrtps
push
sbb
mov
inc
loop
adc
mov
sub
inc
clc
loope
dec
and
loopne
sub
in
fildll
cmpsl
and
pop
or
cmp
std
mov
push
cltd
mov
je
pop
pop
adcl
xor
and
push
adc
sbbb
data16
ljmp
and
mov
into
push
cs
paddusw
xor
xor
adc
lea
std
or
les
mov
xchg
push
add
add
dec
xor
sti
movsl
iret
scas
pop
push
jmp
movsb
mov
mov
inc
or
ret
popa
xchg
or
and
sbb
std
fstp
adc
jg
out
mov
loope
cmpsb
cltd
cs
lods
pop
rcr
xchg
xchg
aaa
daa
xchg
push
stos
push
pop
mov
adcb
nop
andb
inc
push
or
push
mov
xchg
enter
lds
mov
or
sbbb
inc
or
repnz
lock
xchg
in
add
mov
out
not
fcomip
and
pop
inc
xchg
jne
inc
gs
sub
push
xor
jle
add
sub
jno
xor
adcl
push
jno
negb
insl
adc
shlb
hlt
adc
pop
pop
add
pop
cmp
fwait
add
adc
pusha
push
test
pusha
cmp
push
pop
cmp
mov
repnz
cmp
cmpsb
push
daa
dec
or
lods
cli
xor
push
jo
in
pop
je
dec
mov
adc
pushf
jl
xchg
lods
push
and
call
sub
dec
mov
mov
mov
jo
addb
js
add
je
mov
pop
jnp
pop
into
pop
scas
out
mov
or
insl
push
xor
mov
fs
pop
sub
lcall
mov
inc
cmp
ljmp
scas
jecxz
and
sbb
mov
sbb
loopne
les
add
sub
lods
sti
aas
sub
pop
mov
stc
andl
popf
cli
inc
fadd
movb
fwait
lahf
out
cli
insb
jno
dec
and
push
lcall
push
loopne
popa
xchg
shlb
inc
test
mov
add
adc
inc
xchg
xchg
push
jb
std
pop
jp
arpl
stos
daa
xor
sbb
dec
dec
aam
inc
inc
cli
pop
and
adc
pop
lcall
mulb
cmp
sbb
adc
movsb
test
xchg
shl
jnp
sbb
aad
and
mov
jo
lods
mov
shl
mov
mov
pusha
shl
pop
aaa
inc
xchg
dec
imul
imul
cmpsl
rorb
xchg
loop
fptan
fnsave
addl
loope
in
adc
sub
pusha
mov
inc
push
ret
mov
clc
loopne
xor
gs
sbb
mov
ja
mov
loopne
lcall
push
shll
fsubl
xchg
insb
mov
stc
mov
outsb
push
xchg
ret
pop
testb
and
mov
call
rcrl
xor
push
iret
jp
inc
lds
sbb
mov
shrb
mov
in
aaa
ljmp
imul
inc
cmpsb
in
aaa
jno
jo
int
lock
sbb
pop
movsb
cmp
push
lea
stos
mov
js
and
mov
pusha
int3
sbb
sbb
cmpsl
sbb
mov
gs
fisubl
cmp
outsl
or
xchg
pusha
icebp
insl
mov
push
test
push
mov
inc
push
jae
imul
jle
popa
je
mov
jge
fdivs
xchg
jmp
sbb
xor
call
leave
sbb
and
flds
cld
mov
jne
sbb
and
insl
test
in
gs
loopne
dec
rol
xor
icebp
and
loopne
sub
inc
jmp
jnp
ret
movsb
lods
stos
xchg
and
ds
push
push
pop
cmc
mov
add
inc
mov
fmulp
mov
sbb
inc
ja
enter
xor
mov
mov
insb
xchg
outsl
pop
pop
dec
and
mov
sbb
adcl
xor
je
xorb
dec
xchg
les
adc
loopne
inc
xchg
add
sub
aam
or
loopne
loop
fisttpl
sbb
push
sbbb
cwtl
mov
sub
rcll
jo
ret
ljmp
pusha
mov
pop
in
xchg
enter
add
iret
repz
sbb
fs
cli
testl
sub
int
movsb
or
lods
and
sbb
mov
cltd
sub
loope
sbb
adcb
add
xchg
lea
mov
pusha
std
sbb
mov
mov
mov
shl
hlt
cmpsb
in
aas
or
mov
mov
mov
fisubs
lock
jno
jle
and
leave
es
not
into
xor
jno
pop
pusha
mov
mov
inc
mov
fsubl
cld
or
jbe
sub
out
jbe
push
or
clc
and
fwait
ds
mov
or
inc
add
and
lock
push
sbb
call
ja
jne
add
mov
jno
jg
je
jmp
stos
hlt
mov
xchg
lods
icebp
adc
pusha
daa
lea
or
sbb
out
ljmp
mov
in
cmp
and
in
mov
sbb
hlt
pop
mov
mov
popf
pop
jae
inc
repz
push
add
mov
inc
aas
inc
jbe
cli
cli
adc
mov
loop
pop
add
ror
sub
sub
icebp
mov
test
add
add
jmp
mov
and
sbb
dec
xchg
mov
icebp
xchg
cs
insl
xor
pop
sbb
faddl
mov
add
lcall
jnp
popw
mov
push
loopne
sbb
scas
stc
cmp
mov
push
stc
mov
cli
test
pop
sbb
push
xor
push
loopne
imul
call
ret
aaa
jge
repnz
xor
lcall
call
cmp
jle
rcrb
adc
push
jmp
or
insl
inc
into
popa
and
sbbb
lcall
xchg
sub
and
hlt
movsb
mov
fidivs
push
pop
adc
jge
dec
dec
xchg
mov
pop
sti
add
je
nop
insb
mov
into
pop
mov
icebp
fwait
les
outsb
adc
pop
xlat
mov
fisubrl
sar
imul
leave
lods
mov
clc
rcl
push
inc
sub
pop
std
mov
jbe
mov
movsl
in
js
lret
sbb
adc
lods
stc
jmp
sahf
or
std
dec
lret
push
jge
in
or
movsl
ss
mov
xchg
xor
and
sub
or
mov
jno
sbb
jns
fisubl
leave
xchg
out
or
mov
jp
mov
scas
sub
xor
int3
mov
or
rolb
bound
rorl
jns
jo
dec
popf
rclb
iret
orb
shll
lret
out
lea
loop
loope
or
bound
or
lds
sbb
outsb
pop
mov
dec
pusha
test
inc
fstpt
inc
pop
jp
dec
stos
lea
jl
and
push
pop
mov
dec
sub
sbb
pusha
aad
jb
add
sbb
fldl2e
xor
and
icebp
sbb
les
jecxz
loope
icebp
mov
jae
in
xor
fdivs
mov
dec
pop
pop
and
or
rclb
mov
and
pop
and
neg
mov
push
inc
and
outsl
push
test
jl
insb
cmp
cwtl
xor
adc
cmc
ja
xchg
stos
adc
ret
cld
inc
sbb
add
pop
imulw
and
mov
inc
add
push
in
mov
shr
jb
adc
pop
mov
inc
jp
jo
xchg
int
test
cmp
xchg
cwtl
add
cmp
jmp
int3
pusha
sti
imul
pop
push
xchg
cwtl
loopne
lret
jbe
pop
loop
repnz
cmp
mov
fdivrs
cmp
pop
mov
pop
rol
xchg
mov
mov
pop
sarl
jns
dec
jl
ret
jnp
mov
pop
pop
gs
lret
lds
push
std
test
rolb
and
repz
xchg
cmp
inc
inc
sub
cltd
jo
fcom
shl
sub
cmpsb
or
mov
outsl
sbb
rcll
dec
push
push
mov
mov
nop
sbb
push
lret
inc
mov
sub
mov
jl
and
insb
mov
pop
mov
and
add
pusha
jg
fsubl
insb
arpl
cli
lahf
das
imul
xor
loopne
xchg
cld
stos
insl
aad
ret
popa
fwait
pop
fprem
push
inc
or
subb
pushf
pusha
cmp
pushf
adc
inc
outsb
in
pop
xlat
and
pop
andl
adc
sub
fidivl
pop
bound
arpl
cmpsl
je
pop
pop
test
push
add
add
repnz
fwait
fs
adc
pusha
push
sbb
cmp
outsl
aaa
push
mov
lock
mov
pop
pop
push
iret
jmp
out
xlat
sub
fidivrs
pop
dec
jecxz
pop
pop
cmpsl
and
push
pop
xchg
cwtl
mov
sar
jmp
push
fwait
aam
aad
xchg
iret
jmp
or
pusha
enter
dec
jbe
jmp
aaa
sub
jae
cmp
add
insb
loopne
pop
cmp
in
jno
mov
pop
movsb
cld
imul
sbb
push
mov
orb
mov
push
push
mov
xchg
ret
inc
xor
and
test
push
pop
sub
test
in
sbb
and
les
loopne
sub
and
or
add
or
shl
pop
cmp
filds
out
cmp
test
dec
sbb
add
scas
dec
mov
pop
inc
mov
cltd
cmpl
adc
loopne
adc
xchg
xlat
sub
inc
movsb
daa
out
jbe
lea
mov
add
cld
int
dec
inc
add
jl
call
cli
je
inc
and
cmpsb
lods
dec
fxch
aad
nop
add
xor
push
push
aad
xor
cmp
mov
jl
or
dec
push
push
aam
adc
aas
xor
inc
fadd
roll
movsl
andl
in
je
push
ss
jmp
dec
popa
iret
sbb
aaa
repnz
rcll
lock
arpl
push
and
sbb
mov
cmpsl
das
imul
daa
xchg
pop
xchg
sub
inc
push
push
scas
mov
pop
adc
mov
inc
aaa
imul
mov
jg
add
pusha
mov
or
adc
inc
stc
test
pop
mov
sbb
adc
pop
enter
repnz
out
leave
out
incb
pop
mov
negb
pop
ficoms
adc
pusha
scas
push
adc
mov
rcrb
cs
test
pushf
hlt
sarb
cwtl
cld
addb
in
fcoms
fsubs
inc
lcall
inc
lods
aaa
fwait
fwait
call
or
push
inc
pop
rcll
xchg
div
shrl
push
arpl
and
movsb
and
mov
xor
icebp
push
push
into
aad
insb
xor
sbb
and
cmp
jmp
rol
addb
sbb
mov
lods
fwait
clc
pushf
lods
and
pop
enter
sub
and
and
pop
mov
xor
sbbb
or
repz
sub
and
popf
hlt
mov
movl
out
mov
jne
mov
ljmp
xor
jmp
pusha
mov
lock
push
push
arpl
shll
movsb
loopne
push
dec
out
xor
shlb
pop
mov
mov
mov
and
out
outsb
push
mov
je
cmp
ds
iret
std
inc
jo
std
shr
jle
push
add
rcl
sub
inc
or
and
jbe
mov
fsub
jl
testl
mov
adc
in
xchg
rcrl
stos
mov
int3
fidivrs
adc
mov
dec
cmpb
sbb
pusha
ljmp
adc
cmpsb
fnsave
jns
leave
sarb
pop
subl
dec
pop
mov
in
pusha
push
lcall
movsb
sbb
pusha
cmp
add
mov
loope
cmc
ja
pop
aam
pop
inc
movsl
mov
or
fs
or
inc
bnd
cld
aad
or
jne
jle,pn
popa
popa
out
aas
int3
hlt
fxtract
sarl
dec
mov
sbb
pusha
jo
movsb
add
cli
out
imul
std
dec
cwtl
or
add
add
jb
inc
leave
adc
mov
mov
mov
pop
mov
sti
es
pop
adc
mov
adc
and
aad
push
mov
xchg
inc
mov
shlb
in
add
pop
mov
faddl
loopne
cmp
jl
sbb
mov
mov
pop
fwait
dec
cmp
leave
mov
adc
sbb
or
cmp
dec
rcrl
lds
pop
add
xchg
add
or
and
and
call
xor
xor
imull
mov
lods
push
dec
sub
test
das
xchg
or
lods
adc
fisubrs
mov
push
lahf
mov
sbb
fcomps
jns
xor
xchg
mov
inc
xchg
pushf
dec
mov
push
inc
cmpsl
sbb
inc
inc
xchg
sbb
ljmp
test
in
mov
adc
push
notl
or
cmp
mov
inc
cmp
stos
xor
in
add
inc
scas
pop
mov
xchg
fadd
gs
jmp
xlat
out
mov
pop
mov
xor
out
push
pushf
cmp
in
push
cli
lds
inc
sub
rclb
pop
sub
popa
or
pusha
loope
inc
imul
lcall
sbb
loopne
jecxz
push
pop
dec
push
inc
cmp
jbe
in
int3
data16
aam
push
dec
inc
sub
popa
jmp
xorb
in
cmp
or
cmp
jecxz
pop
cmp
fadd
or
mov
orb
jecxz
lods
sub
mov
dec
inc
cmpsb
clc
es
xchg
sti
xlat
lahf
xor
pusha
or
popf
dec
xchg
addb
dec
ret
outsl
mov
sub
lret
and
and
gs
xor
push
add
mov
push
xchg
sbb
add
in
sbb
add
and
mov
ljmp
jns
xchg
mov
push
adc
jbe
dec
out
mul
jb
outsl
mov
adc
add
scas
cli
jge
test
shlb
xor
inc
daa
mov
push
dec
iret
ljmp
cltd
pop
sub
lret
sub
mov
push
pop
push
jnp
push
pusha
mov
xor
lcall
shrl
mov
xor
mov
lods
pushf
adc
add
imul
sub
subl
mov
xlat
push
or
aaa
lea
adc
mov
mov
addr16
mov
aaa
xor
pop
xlat
stos
inc
hlt
cmp
inc
shll
adc
mov
pop
mov
scas
add
pop
mov
sbb
repnz
mov
dec
inc
movsb
stc
xor
cs
xchg
push
push
aaa
xchg
jnp
out
nop
inc
mov
gs
es
add
sar
mov
lods
insl
dec
sub
bswap
lahf
pushf
sbb
cmp
inc
je
mov
pushw
dec
movsb
cmp
aad
neg
jecxz
push
call
ljmp
sarb
rcl
push
movsb
or
pop
ljmp
dec
pop
push
lds
leave
jmp
call
pop
test
fists
test
inc
add
mov
jno
loopew
ds
add
dec
std
or
sbb
inc
ret
or
mov
aam
jmp
cwtl
adc
movsl
outsb
fcomps
out
mov
call
dec
xchg
dec
and
push
pop
aas
jle
arpl
pop
fadd
cmpsb
iret
stc
mov
lcall
fwait
sub
xchg
stos
inc
jp
out
adc
mov
out
sbb
stos
scas
lock
ljmp
mov
loop
clc
sarb
cmpsl
lret
inc
push
fdivr
add
jno
jmp
sti
sbb
add
add
mov
cmp
xchg
cmp
ds
enter
mov
cmpsl
fisubrs
mov
movb
test
sub
xchg
loopne
cli
lahf
repz
roll
fsub
mov
sbb
xorb
and
jecxz
loope
int3
mov
sbb
mov
inc
sub
sub
push
mov
mov
sub
fists
loope
push
fadds
push
push
sbb
test
sub
daa
and
testl
xchg
add
mov
lret
adc
push
out
sarb
inc
mov
mov
outsl
pop
push
mov
js
punpckhwd
repnz
dec
popa
ja
pop
int3
sbb
outsb
loopne
push
sub
nop
dec
orb
scas
mov
mov
adcb
dec
and
test
cmpb
jl
int3
cmp
mov
loope
test
pusha
mov
jmp
scas
insb
jae
jbe
cmc
pusha
enter
iret
fistpl
mov
jb
xorl
int
rolb
outsb
inc
inc
test
aas
inc
sub
xorb
iret
out
push
mov
pop
es
loope
nop
faddl
cli
pop
lea
and
jg
mov
sub
inc
leave
xchg
scas
xor
or
push
pushf
hlt
pusha
lea
idivl
insl
rol
shl
and
mov
mov
outsl
or
mov
out
sbbl
adc
pop
jmp
mov
cmp
sbb
and
negb
and
mov
fs
fldt
xchg
lds
mov
popf
iret
cmp
test
testb
adc
and
aaa
test
scas
pop
or
stc
fstps
fwait
xchg
imul
lds
pop
outsb
mov
out
mov
gs
jo
cmpsb
es
or
add
add
aaa
lahf
cwtl
loopne
insl
enter
jb
cld
ror
lcall
sahf
pop
aas
sbb
pop
test
enter
sarb
es
dec
bnd
test
xchg
or
xor
int3
mul
sti
movsl
xchg
push
pop
jl
xchg
xchg
add
loope
enter
jle
adc
mov
fs
sti
pusha
sub
pop
repz
jo
popf
in
xchg
xor
sub
enter
cmp
pusha
and
aam
mov
push
sub
xlat
jo
and
ficoml
cmp
in
inc
xchg
insl
leave
xchg
sub
or
pusha
jo
shlb
cmpsl
cmpsb
push
mov
add
xchg
pop
nop
pop
rorb
repnz
fisubl
scas
jo
outsb
adc
and
outsl
xchg
jo
pop
add
jp
lahf
push
shr
gs
xchg
enter
jbe
adc
sbb
dec
inc
mov
movsb
push
xor
cli
outsl
dec
jp
inc
push
mov
imul
inc
mov
mov
imul
jle
out
jnp
popa
cli
cmp
sbb
jecxz
shll
roll
fs
cwtl
jo
mov
fidivs
jae
sbb
loopne
mov
mov
jne
and
clc
popa
nop
je
add
adc
push
jo
xchg
inc
xchg
adc
out
popf
pop
pusha
push
js
push
cs
or
stos
cmpl
mov
and
bound
test
adc
cmpb
cmp
jo
mov
fildl
ljmp
sti
gs
add
mov
test
and
inc
inc
push
loope
nop
push
pusha
sub
out
dec
aad
lahf
loopne
das
push
xor
jb
mov
cmp
repnz
push
shrb
inc
das
xchg
cmp
enter
pusha
lea
mov
sub
mov
cmp
pop
arpl
or
dec
cltd
adc
addr16
adc
pop
push
pop
xor
lock
in
jb
inc
jg
cli
sub
adc
dec
rcl
push
inc
xlat
pop
mov
lea
or
mov
xor
enter
call
mov
shlb
test
push
ret
outsl
sub
popa
js
jg
ds
imul
or
add
xchg
pop
add
pause
and
xchg
ret
into
aaa
movsb
pop
add
sub
stos
and
jno
insb
push
push
xchg
jae
test
sbb
sahf
sub
or
mov
popa
cmp
dec
ds
mov
loopne
adc
jo
or
sbb
or
loopne
push
andl
rcl
jbe
and
clc
jmp
push
aaa
data16
icebp
pop
jp
cwtl
rorb
ja
fistl
cld
loopne
cli
lock
adc
and
or
fistpll
pushf
sbb
mov
add
js
mov
sub
or
mov
cmp
aad
int
mov
popf
clc
push
cli
lods
shll
xchg
stos
ffreep
ret
sbb
rcrb
iret
pop
call
and
adc
jae
push
add
add
fadds
mov
cmpsl
je
loope
pop
xor
insl
cmc
mov
or
cwtl
les
clc
lods
adc
add
mov
repnz
push
xlat
push
and
popf
mov
test
inc
adc
loopne
dec
loopne
mov
cmp
sti
xor
jae
add
pop
inc
mov
bound
out
and
inc
mov
loopne
sti
in
xor
xor
pusha
mov
scas
mov
out
ret
push
mov
sub
leave
xor
fdivrs
popa
in
mov
dec
adc
xor
pop
and
ds
and
fcomps
mov
fdivl
scas
mov
dec
lahf
lds
mov
inc
call
roll
and
insb
and
arpl
or
mov
mov
mov
fistpl
inc
cmp
pushl
cmpsb
xchg
aam
adc
out
lock
insb
in
in
pop
idivl
js
fildl
lret
adc
push
sbb
xchg
je
jecxz
call
mov
push
xchg
xor
imul
xor
fs
cwtl
xor
inc
sub
std
mov
push
add
adc
loopne
scas
call
mov
imul
jle
inc
jns
bound
xchg
in
cmp
push
dec
je
push
cld
xor
xchg
test
test
outsb
adc
pusha
mov
jno
sub
sub
pop
adc
popa
fnsave
adc
push
in
test
add
sbb
addb
and
cmpsl
and
jmp
addr16
fadd
push
fwait
cmpsb
sub
add
pusha
out
test
js
mov
sbb
push
or
das
js
or
orb
cmc
pop
cli
mov
repnz
jmp
mov
call
mov
pushl
mov
cmp
clc
divb
cmp
js
loopne
clc
mov
pusha
jl
cmpsb
or
sbb
pop
pop
daa
inc
mov
loopne
aad
and
leave
push
rcrl
out
sub
mov
in
cmpsb
test
pop
fimuls
xchg
adc
jne
sarb
test
mov
pop
inc
or
call
lock
add
lds
mov
js
gs
xorb
add
and
bound
enter
nop
pop
and
or
call
lock
popf
pusha
fisubs
lock
xor
test
fs
inc
mov
mov
out
jecxz
push
and
les
cmp
jno
test
push
sub
jnp
ss
or
div
enter
jg
popf
xchg
mov
es
and
and
jl
adc
sub
sub
mov
mov
adc
mov
adc
ja
dec
cwtl
add
inc
mov
shl
cmp
mov
aam
aad
loopne
sbb
and
and
repnz
xchg
stos
repz
inc
sbb
sbb
adc
push
pop
cs
mov
jge
popa
xchg
std
sarl
or
mov
sbb
cmp
inc
jno
stos
testl
ds
je
mov
repz
dec
cmp
push
icebp
add
shll
ret
ljmp
or
mov
mov
nop
push
shlb
imul
xchg
std
pop
lret
and
mov
add
mov
mov
mov
dec
inc
pop
rcrl
dec
push
aam
out
or
add
std
out
sbb
int3
and
mov
add
repnz
popl
inc
dec
inc
pop
fwait
cld
sbb
xor
int3
sub
push
xor
ror
iret
and
inc
fldl
jbe
xor
xchg
fldt
pop
lahf
sbb
xchg
nop
nop
xor
dec
sub
and
sub
popa
test
loopne
mov
mov
mov
mov
sub
lahf
mov
mov
mov
sub
int
ror
mov
pop
sbb
mov
or
pusha
xchg
inc
addl
pop
dec
xchg
clc
and
mov
mov
es
adc
ja
data16
adc
mov
inc
xor
fwait
mov
or
adcb
mov
add
in
add
iretw
cmp
fwait
ret
imul
sahf
out
cli
out
pop
cltd
jno
jo
mov
jnp
jecxz
and
pmaddwd
adc
not
pop
cmp
mov
js,pt
sbb
cmp
mov
push
repz
mov
fwait
ret
cmp
pop
sbb
pop
iret
lock
mov
or
xlat
xor
test
cwtl
shlb
sub
int3
add
push
dec
lret
push
mov
loop
cmp
scas
cmp
sub
jge
nop
rolb
mov
jle
js
repnz
mov
mov
shlb
mov
push
and
jp
enter
push
ret
arpl
outsl
add
sarb
adc
add
addb
cmp
fsubs
push
ljmp
mov
roll
cmp
in
push
xchg
add
pop
adc
mov
into
pusha
sbb
and
out
dec
or
mov
adc
shll
push
jbe
sbb
sbb
inc
int3
jne
sbb
pop
lock
sbb
aad
cmp
sub
mov
call
and
mov
andl
sub
cwtl
je
xchg
cmc
or
in
xchg
movsb
push
lret
and
in
js
mov
or
shlb
into
fcompl
sub
lea
movl
dec
scas
sbb
jne
js
stos
lods
pusha
adc
dec
fs
subb
insl
jg
sub
stos
inc
mov
pextrw
nop
push
mov
daa
ljmp
jbe
mov
sbb
popf
and
jp
dec
leave
shrl
xchg
jo
nop
imul
addr16
mov
dec
clc
fmulp
cld
mov
mov
pop
and
fisubrs
fsubr
lds
and
mov
pusha
lods
pusha
fcom
jge
mov
mov
push
inc
pushf
add
mov
jecxz
arpl
push
add
push
fisubs
clc
es
add
aas
clc
mov
pop
dec
movb
cmp
mov
push
add
lods
movsl
fs
call
inc
stos
cmpsl
stc
mov
jg
lods
out
insl
cli
ljmp
pop
cmp
lods
pop
push
outsl
enter
scas
jb
jg
dec
push
lret
shll
sti
out
cld
cmpsl
outsb
adc
pop
push
mov
dec
pop
push
in
cmc
pop
sbb
mov
clc
pusha
nop
cwtl
mov
out
popf
sti
and
cli
sbb
shlb
xchg
inc
aad
xchg
or
mov
aam
adc
inc
sub
clc
fstp
and
fstl
xor
scas
aam
adc
test
jne
mov
jo
push
cmp
pop
adc
xchg
mov
pop
shll
repz
aam
mov
adc
jg
cmp
mov
movsl
sub
call
test
xor
rcrb
mov
mov
lea
add
fwait
and
mov
mov
jle
lcall
adc
mov
lcall
cmp
xor
adc
mov
dec
xchg
dec
cmc
mov
inc
jg
fsub
jbe
xor
cmp
adc
lds
das
sahf
cmc
imul
loopne
cmc
push
inc
push
inc
inc
inc
mov
mov
and
xor
jne
xchg
and
xchg
shlb
push
aaa
mov
pop
stos
inc
cltd
adc
loopne
sub
dec
mov
ljmp
sub
mov
inc
mov
sbb
xchg
jg
enter
and
push
inc
mov
sub
in
mov
and
aas
test
out
pushf
mov
sub
inc
test
push
mov
fwait
mov
jle
mov
xchg
xor
stos
movsl
pop
or
or
and
rolb
pop
mov
bound
mov
mov
imul
insl
fbld
inc
jne
mov
mov
or
in
cld
mov
mov
test
adc
sbb
pop
cmp
stc
add
repnz
inc
loopne
cld
pop
pop
adc
inc
adc
sub
lret
or
and
and
jo
pop
push
cmpsl
inc
stos
inc
in
mov
xlat
cmp
les
add
dec
adc
cltd
cmc
jbe
dec
cmp
sbb
mov
test
fwait
or
add
jb
xor
and
xlat
cmp
ficoml
push
cmp
jbe
inc
sahf
cmc
data16
test
push
inc
popa
and
fidivrl
lock
cmp
mov
lcall
incb
dec
cmp
inc
pop
loop
mov
fcoms
xchg
dec
dec
and
nop
mov
sbb
mov
rcr
and
test
imul
in
sbb
and
and
push
addr16
add
jne
or
subb
push
imul
loopne
pop
pop
cmc
shlb
add
add
leave
mov
cmp
mov
jge
mov
push
mov
dec
sub
aad
push
cld
adc
and
dec
xchg
mov
add
mov
mov
das
sbb
jecxz
pop
and
insl
imul
outsb
cmp
jmp
cs
jb
sub
lea
out
push
mov
sbb
sub
or
imul
rcl
jmp
popa
add
mov
and
out
fbld
pop
jns
addb
jl
cmpsb
test
pushf
push
shlb
mov
xchg
lds
xor
into
jge
leave
xchg
pop
adc
inc
mov
imul
pop
pop
stos
shll
lcall
add
xor
ljmp
sbb
sbb
aaa
out
and
inc
dec
lret
jge
aam
mov
stos
push
sub
fidivrl
clc
adcb
push
popf
std
pop
mov
andl
repnz
in
jb
sub
jl
fcoms
jle
push
insb
fcoml
and
pop
pop
and
push
inc
cltd
and
cmp
lahf
jmp
xor
and
push
pop
aas
test
lods
data16
add
or
sbb
iret
in
sarb
mov
es
into
fstps
sbb
xor
adc
and
mov
jl
adc
inc
jmp
mov
js
in
xchg
shll
xchg
mov
add
dec
ret
insb
cmp
scas
cltd
jb
or
inc
mov
adc
test
popf
leave
dec
push
xor
push
dec
and
mov
add
or
cmc
aam
add
pop
cmpl
mov
addl
adc
mov
mov
test
clc
pop
sbb
inc
enter
repnz
jge
mov
push
loop
sti
and
xchg
xchg
cmpsl
cmp
pop
jmp
shlb
loope
cli
idiv
shlb
dec
shrb
add
mov
dec
cmp
sub
cmpsl
mov
sub
clc
repnz
pusha
pop
jmp
xor
sbb
es
sbb
inc
fdivl
fs
adc
and
push
rolb
out
int
andb
stc
insl
fmulp
loop
xchg
lahf
pop
icebp
jns
pop
scas
test
pop
mov
arpl
rcrl
inc
cmp
dec
mov
inc
cmp
pusha
inc
out
xor
mov
addr16
hlt
xchg
and
dec
mov
outsb
xchg
call
outsl
pop
cmc
insl
sub
jnp
bound
push
mov
popf
cmp
jnp
imulb
mov
pop
push
xlat
gs
inc
push
movsl
js
test
lahf
jmp
sub
sub
mov
mov
jge
push
xor
add
loopne
mov
and
loopne
lods
popa
movl
sbb
lods
icebp
imul
sbb
loop
pop
cmp
jl
push
sbb
pop
jns
gs
fs
repz
xchg
fcoml
fwait
mov
mov
pop
popa
mov
int
dec
in
mov
inc
fisttpl
pusha
adcb
enter
mov
sti
loope
movsb
movsl
pop
mov
sbb
aam
movsl
aas
add
shl
bsr
sub
movsl
cmp
mov
adc
add
fs
icebp
fwait
pop
or
les
test
out
pop
fmulp
imul
notb
cmpsl
enter
xchg
aaa
in
adc
mov
faddl
dec
inc
nop
mov
sarb
mov
lahf
cwtl
dec
addb
sub
loopne
stos
std
xchg
add
lods
xor
mov
push
es
icebp
pop
cmp
rorl
jb
mov
or
das
dec
and
push
mov
adc
test
xchg
sarl
and
push
adc
mov
icebp
call
shrl
mov
inc
popa
jle
jl
or
inc
push
jp
cmp
xor
cmp
lahf
xor
cmp
cmp
cmc
push
lcall
shlb
cli
push
push
daa
fisubl
push
mov
loopne
mov
add
ss
test
out
or
push
push
pop
imul
andb
mov
adc
sti
jo,pn
pop
fs
fimuls
and
inc
stos
jmp
mov
pop
pop
push
rcll
repz
icebp
shrb
sahf
jae
les
and
push
pop
pop
sbb
ficompl
jecxz
jmp
test
mulb
push
add
and
icebp
jmp
fidivs
cs
mov
add
push
cmpsb
push
lods
enter
addb
push
mov
xor
pop
movsl
div
leave
mov
mov
lahf
jae
ret
xchg
rol
cmp
cwtl
and
sti
dec
es
insb
push
leave
xorl
xchg
mov
xchg
loope
test
je
jo
repz
nop
sbb
into
jle
xchg
test
stos
jae
cmc
in
mov
subb
push
shll
sarb
and
and
mov
rol
aas
rol
push
or
add
dec
dec
xchg
push
mov
adc
add
mov
add
push
int3
sbb
mov
bound
mov
jno
mov
pusha
cs
outsl
inc
adc
and
sbb
mov
addb
mov
repz
sti
arpl
and
sub
mov
jnp
sbb
mov
rolb
outsb
push
lock
fadds
stos
pop
xchg
into
imul
les
sbb
andb
aaa
mov
mov
inc
cmp
loop
mov
xchg
mov
adc
inc
fcoml
ss
hlt
loopne
push
rcr
mov
lods
adc
sub
inc
sub
mov
sti
adc
orb
add
std
sub
xor
adc
sbb
mov
push
inc
arpl
xchg
leave
hlt
adc
test
sbb
add
push
out
arpl
les
cmc
jecxz
hlt
sti
inc
adc
xchg
in
xor
xchg
sbb
aaa
sbb
int3
push
lock
aad
sti
push
and
cmp
scas
mov
mov
dec
divb
and
sti
pop
and
sbb
mov
sbb
and
scas
mov
xchg
jns
cltd
fadd
fwait
push
leave
inc
or
and
sbb
adc
shlb
lahf
cmp
dec
cmp
outsl
sub
out
imul
loopne
xchg
mov
cmp
das
pushf
call
cmpb
add
je
movsb
sahf
ds
jg
movsl
mov
push
mov
jl
nop
lods
add
bound
mov
add
inc
orb
pop
cmpl
adc
mov
cld
dec
mov
mov
mov
pop
dec
mov
xchg
js
out
fisubrl
enter
adc
fdivs
mov
sub
js
fimull
mov
inc
xchg
lcall
bound
inc
fiadds
jp
dec
arpl
inc
test
or
adcb
or
and
dec
clc
push
xchg
in
lret
imul
cld
add
stc
ficomps
mov
sbb
sub
push
inc
xor
nop
mov
add
leave
call
mov
inc
xchg
and
and
pushf
pop
loopne
minps
or
leave
cs
pop
test
ret
pop
adc
pop
mov
lods
sahf
stos
into
mov
and
sub
in
imul
ret
cltd
adc
cld
mov
add
mov
push
push
out
jnp
mov
loopw
mov
mov
adcb
loop
inc
cltd
push
mov
cmp
sbb
test
hlt
out
sbb
add
js
jle
outsl
ljmp
cmp
rcll
lcall
inc
out
xchg
cmpsl
hlt
add
cmpb
popa
adc
in
inc
mov
lods
cmp
dec
cli
jne
xor
dec
lods
cltd
stos
pop
fidivrl
cs
cmp
out
sub
sub
xchg
jno
ret
mov
mov
in
icebp
push
or
add
xor
jmp
cs
enter
inc
icebp
pusha
lods
mov
out
popf
arpl
popa
das
push
lcall
ret
popa
out
inc
lea
aam
add
adc
test
in
xor
jnp
and
xchg
test
outsb
scas
adc
in
xor
loopne
cmp
out
popa
daa
xchg
cli
cmc
cmp
sbb
stc
pop
mov
clc
and
cmpsb
sub
sahf
cmp
inc
mov
mov
mov
sub
pop
add
sub
js
inc
rclb
lea
and
sub
push
adc
insl
cmp
mov
scas
sti
mov
and
push
push
xor
mov
add
mov
loope
test
in
sub
sub
and
xchg
in
mov
xor
and
and
int
insl
jge
cmp
pop
cmp
add
lcall
out
test
inc
push
push
daa
push
sar
mov
lock
and
mov
arpl
jne
mov
xchg
add
adcl
jno
fs
fisttpl
stos
ror
cmp
rol
gs
mov
pusha
loopne
or
pop
cmp
add
and
js
mov
adc
jg
les
stos
out
repz
xchg
loopne
test
inc
or
inc
outsl
gs
cmp
push
add
mov
inc
jp
hlt
icebp
bound
into
inc
sti
inc
idivb
mov
ds
cmpsb
addr16
dec
popa
xchg
cld
loopne
rorb
adc
jg
mov
mov
movsl
lods
out
pop
add
pop
aas
xchg
test
inc
cmp
cmpb
sbb
fstpt
jp
imul
mov
repnz
hlt
lea
dec
cmpb
stc
xor
mov
mov
clc
in
sbb
cltd
or
mov
test
mov
push
add
cmc
sahf
out
cmpsl
adc
repz
int
sub
pop
xchg
push
fs
push
add
cmp
je
dec
pop
pop
lds
add
in
pop
mov
mov
adc
push
stos
pop
pop
nop
test
sbb
sub
inc
movsb
jg
jnp
lea
inc
jg
push
sbbl
addr16
inc
lret
call
xchg
cmpsl
cs
xchg
pusha
mov
jbe
xchg
decl
xor
push
int
inc
or
lods
sarl
mov
push
pop
ss
dec
call
cmp
rcrl
nop
addb
in
sbb
inc
sahf
stos
repz
xor
ja
ret
pop
add
cmpsb
push
sbb
xchg
mov
fsubl
addr16
or
xchg
dec
lcall
xor
int3
scas
jb
push
je
lahf
cmp
jae
sub
sbb
push
or
xchg
push
mov
push
inc
lock
inc
outsb
pop
push
cmp
dec
fs
js
fcomps
imul
dec
sub
pushf
mov
push
loopne
dec
jmp
xlat
out
pop
lahf
addr16
aaa
lret
jb
fwait
fs
jl
mov
mov
cld
loope
test
sub
xor
jecxz
loop
mov
mov
lahf
inc
or
inc
inc
adc
fmuls
fs
push
dec
clc
jb
mov
loopne
stc
test
jnp
xor
int
inc
and
mov
loop
lock
cmp
or
repnz
imul
lock
icebp
das
xchg
add
jno
push
rorb
xor
js
lock
movsl
dec
xchg
inc
int3
xchg
and
push
push
jnp
aad
inc
lock
lahf
push
lds
imul
inc
adc
pop
cs
mov
getsec
mov
hlt
add
mov
pop
add
pop
loop
or
add
lret
push
add
mov
out
mov
rorl
jb
bound
jecxz
lahf
push
lds
lahf
mov
jl
loop
or
and
addl
popa
and
mov
fwait
mov
mov
loopne
pop
shll
push
pusha
lea
pop
rol
sub
cld
mov
and
fwait
lods
cmp
loop
cmpsb
inc
ja
ds
cmp
pop
sti
jp
data16
dec
mov
mov
push
xchg
call
add
pop
dec
das
mov
cmp
xor
and
xor
outsb
inc
out
push
or
lret
inc
mov
mov
inc
int3
cli
daa
aaa
and
lret
cmp
cmc
sbb
and
outsl
sub
adc
dec
xor
std
push
cmp
mov
jne
mov
dec
arpl
jmp
cmovle
les
out
push
nop
pushf
mov
pop
push
or
in
pop
push
hlt
mov
loopne
sub
hlt
fidivrl
cld
ljmp
mov
xchg
lods
adc
inc
mov
stc
mov
or
pusha
das
mulb
add
add
mov
mov
jae
xchg
jmp
push
and
pop
cli
repnz
xchg
fdivl
cmp
xlat
cmpsl
ss
loope
mov
or
rcrb
pusha
adc
rol
push
cmpb
or
ja
mov
cmpsb
lds
jecxz
jne
in
clc
loopne
lds
mov
pusha
shlb
shll
repz
fisubl
add
push
dec
sbb
pop
rcll
xchg
inc
sti
lods
sub
scas
shrb
into
daa
inc
xchg
jl
test
sbbb
sbb
or
pop
dec
sbbb
cmpsb
dec
lea
jmp
cmc
inc
mov
loop
jno
test
arpl
pop
cmp
xchg
jno
sbb
loopne
mov
dec
aad
lret
out
inc
mov
lods
lds
inc
cmp
push
push
dec
jl
pop
lahf
fdivrs
mov
incl
cmp
ss
cltd
push
inc
inc
mov
lea
add
push
andl
aad
xchg
sub
sub
sub
jns
repnz
mov
pop
sahf
das
aaa
xor
fcomip
mov
out
mov
dec
sub
int3
pop
inc
sti
and
mov
and
das
je
push
lret
lret
popa
lea
test
or
or
jmp
dec
loopne
xor
pop
daa
and
cmpsb
sbb
ja
test
or
jb
pop
shll
cmp
pop
mov
test
push
jne
pop
out
jl
push
nop
xchg
inc
sti
mov
loopne
pop
cmp
dec
dec
js
or
decl
add
sbb
inc
pop
inc
add
lock
cld
inc
or
mov
cltd
iret
clc
pusha
sub
or
shlb
loope
pminub
ret
inc
rol
out
mov
aad
cmp
mov
stc
lret
mov
cltd
fiaddl
popa
mov
inc
jecxz
or
fmul
notl
shlb
xchg
fdivrl
and
mov
dec
or
das
cmp
and
cld
out
mov
push
stos
sub
lods
ds
ds
data16
adc
loopne
rolb
push
js
fwait
rclb
cwtl
pusha
call
in
ss
inc
mov
inc
xchg
xor
aas
insl
mov
mov
adc
fdivrl
jno
cs
adc
int3
es
sbb
movsl
dec
mov
jg
clc
daa
sub
mov
xor
pop
jecxz
dec
pop
arpl
movsl
lret
push
cltd
test
insb
or
jp
jno
popf
rcl
test
mov
loopne
in
cmp
dec
sub
sub
in
sbb
xlat
popa
cmp
fwait
add
sbb
scas
lea
test
sub
arpl
call
fsubs
mov
inc
cmp
lret
jecxz
outsb
jge
scas
nop
adc
je
xlat
mov
and
addl
xchg
lcall
int3
push
inc
push
sbb
imul
bound
insb
and
aas
shlb
mov
xor
jmp
lcall
or
xor
std
out
mov
add
cmp
xorl
lock
sub
shr
and
add
inc
or
fmuls
imulb
leave
out
lods
movsb
aam
leave
clc
cmp
lret
shll
cli
stc
addr16
push
cwtl
in
pusha
mov
add
push
hlt
aad
test
xchg
test
je
xchg
out
xor
or
add
jge
adcl
lds
sbb
sarb
inc
mov
movsl
sub
fucomp
sub
dec
xchg
aaa
push
adc
add
jns
jmp
mov
lock
psubsw
push
mov
and
sar
outsb
xor
adc
jg
xchg
xchg
aam
fs
xchg
cltd
xchg
sti
fwait
push
xchg
jl
sti
sbb
shr
outsl
jle
rcrl
mov
pop
jmp
adc
les
rcl
in
sub
outsb
inc
in
leave
leave
mov
xor
into
push
pop
test
cli
dec
pop
sahf
jne
add
jns
test
loopne
inc
cmc
adc
sub
fists
ljmp
mov
jo
push
insb
sbb
out
push
call
dec
outsb
xor
call
data16
pop
dec
movsl
cli
stos
or
inc
maskmovq
testl
mov
push
ja
adc
xchg
sbb
imul
xlat
cmp
pop
sbb
loopne
pcmpgtb
pop
daa
jae
inc
add
mov
adc
pusha
add
and
sbb
inc
cmp
mov
icebp
or
inc
add
add
inc
jo
jl
inc
aam
xlat
or
add
add
push
push
mov
insl
repz
jns
rolb
in
pushf
inc
pusha
mov
or
test
mov
mov
cmp
sbb
addb
mov
jo
mov
test
dec
cmp
nop
pop
loopne
add
mov
xchg
rcrb
push
or
xchg
arpl
cld
pusha
ss
ljmp
pusha
sti
adc
inc
fiaddl
jns
mov
stos
adc
push
test
mov
test
lods
cltd
mov
scas
dec
leave
mov
xchg
xchg
inc
sub
inc
sbb
lcall
inc
dec
mov
push
mov
push
test
and
add
aas
mov
mov
and
pop
in
adcl
fcomps
daa
ds
leave
and
or
push
sahf
push
popf
mov
sar
adc
push
pop
mov
xchg
pop
pusha
mov
and
sub
jbe
call
mov
insl
enter
mov
mov
inc
in
lds
scas
jle
movsl
sub
pop
roll
xchg
int3
sahf
sahf
or
and
and
cmp
adc
or
push
sub
cmp
or
push
jmp
ret
or
mov
enter
mov
loop
imul
jne
jl
in
pop
cmp
push
xchg
cli
sub
mov
cmp
mov
shlb
sub
bound
push
repz
lahf
imulb
add
push
ljmp
inc
jo
sbb
orb
gs
loopne
mov
xchg
loopne
cwtl
inc
add
sbb
shll
popf
or
int3
add
inc
mov
subl
jmp
mov
hlt
and
test
sbbb
fstp
xor
ss
lahf
mov
loopne
arpl
push
or
js
sub
inc
sbb
xchg
xor
xorl
ss
imul
sbb
test
call
push
cltd
mov
add
leave
out
adc
mov
pusha
and
jbe
jge
pusha
mov
sub
stos
dec
add
and
rcrl
movsb
sbb
decl
outsb
out
movl
mov
sbbb
sbb
xor
jle
loop
pop
repz
std
rcll
scas
mov
inc
insl
inc
les
jne
or
shll
mov
test
inc
push
sbb
inc
ret
jb
aad
aas
insl
add
mov
hlt
fsub
outsb
sbb
inc
or
adc
icebp
and
jo
cmp
mov
pushf
test
pop
addr16
loopne
out
scas
pop
and
ds
and
jge
xchg
add
pushf
clc
and
std
ljmp
sub
sub
sub
pusha
dec
cmp
fists
cmp
mov
ljmp
xchg
ss
cmp
loopne
loop
cwtl
push
pusha
shlb
push
inc
int
sbb
sub
inc
leave
aaa
push
das
inc
rcl
add
les
leave
les
mov
loopne
clc
cmp
push
inc
mov
jecxz
adc
mov
adc
sbb
sub
mov
in
pusha
in
pop
jns
jbe
roll
inc
dec
fdivr
jbe
das
adc
int3
jne
ret
fildll
roll
shlb
adc
pushf
xor
push
inc
dec
mov
fwait
pop
cmp
mov
mov
mov
push
cmc
mov
mov
cmp
xchg
aaa
xchg
ret
clc
in
dec
ja
mov
fs
mov
push
fbstp
mov
pop
sti
mov
jge
pop
mov
icebp
insl
idiv
je
xor
or
xlat
jle
insl
lea
sub
leave
and
inc
iret
xor
int3
sbb
push
xchg
push
cltd
mov
hlt
add
pop
sti
jmp
pop
or
rcr
insb
rclb
mov
pop
mov
add
rcll
cmp
jb
sub
adc
mov
push
call
insl
cmp
xchg
arpl
hlt
jbe
xchg
cld
adc
inc
leave
push
adc
pop
add
mov
cltd
dec
sbb
xor
pop
push
push
movsl
stos
mov
mov
push
mov
jle
not
mov
cmc
subb
pusha
xchg
xor
add
and
jbe
or
dec
add
add
mov
mov
mov
sbb
loopne
and
add
pop
out
jle
sbb
mov
jbe
jne
cmp
outsl
test
scas
lcall
aam
cmp
mov
mov
flds
movsl
clc
and
pushl
dec
lock
push
adc
inc
add
shll
pop
mov
and
adc
xchg
and
cmp
fdivr
mov
ret
and
rorl
lods
daa
and
push
sbb
testl
addr16
sbb
add
int3
mov
mov
add
into
push
add
inc
xchg
data16
mov
scas
int3
mov
leave
jo
sbb
xchg
push
test
sub
jnp
bound
mov
mov
sbb
loopne
insb
xorb
in
fincstp
push
aas
cmp
inc
rcr
daa
repnz
out
sarb
je
loope
ja
pop
mov
sub
fnstenv
in
mov
mov
fadds
icebp
pop
cmp
ret
in
iret
lds
aad
cmp
pop
shl
mov
mov
imul
mov
sahf
scas
ret
out
mov
andb
icebp
push
jno
cmp
inc
and
enter
mov
mov
dec
mov
imul
sub
mov
push
movsl
imul
cli
sub
mov
cld
sahf
repz
jb
jp
sbb
movsb
adc
daa
mov
and
pop
fsub
adc
add
mov
lcall
or
orb
cmp
pop
repz
push
inc
std
mov
sbb
pusha
sbbb
lcall
bswap
jge
fstp
ss
es
mov
shlb
cmpsl
pusha
adc
pop
rcl
or
add
inc
loop
popf
inc
out
lea
insl
into
lahf
bound
je
popf
sub
cmpsl
inc
sub
and
loope
pop
add
lcall
and
ret
pop
pop
xchg
mov
jnp
add
clc
shll
or
loopne
jl,pt
pusha
and
test
into
xchg
and
ficompl
sbb
imul
pop
mov
sub
mov
insb
or
rcl
xor
aad
adc
and
mov
cmp
xchg
sub
ds
lcall
cld
mov
sub
fisttps
cmp
push
mov
jmp
loopne
inc
push
jl
and
ja
loopne
fcoms
dec
xchg
xchg
mov
sti
add
dec
mov
jbe
push
data16
jo
mov
jl
out
adc
leave
shll
add
or
or
ja
divb
popf
jne
push
mov
out
and
pop
xchg
lods
jbe
dec
inc
clc
mov
clc
ja
add
push
hlt
jb
out
jno
fdivp
xchg
cwtl
lods
and
xor
push
mov
inc
dec
out
xchg
mov
shlb
insb
dec
push
sub
xchg
shr
mov
cmpsb
pop
imul
data16
test
fildll
and
das
or
cmc
add
inc
dec
pop
sbb
sub
dec
or
adc
jo
sbb
and
enter
in
icebp
pop
cmp
loope
inc
cwtl
dec
loopne
mov
sbb
sbb
sbb
jae
cmpsb
dec
pushf
js
adc
inc
popa
imul
mov
and
not
xor
fst
adc
push
xchg
cmc
sub
or
adc
aad
rorl
movsb
out
in
pop
loopne
jl
cmpsb
pop
lods
ret
loop
sub
sub
jp
xor
data16
insl
aaa
cmp
dec
push
ja
sbb
cwtl
add
mov
add
das
out
xchg
xchg
jno
push
aaa
sti
mov
dec
cmpsb
les
sbb
jnp
popa
cmp
icebp
pop
mov
movsl
pushf
je
lea
pop
iret
test
add
xorb
lret
pusha
or
mov
inc
repz
xchg
es
ret
push
daa
js
mov
out
mov
in
mov
in
mov
and
lret
flds
cwtl
and
decb
cmp
rcll
mov
clc
or
mov
adc
push
dec
sub
dec
fistpl
xchg
or
inc
push
dec
cmpb
icebp
jo
lret
hlt
add
jl
xor
dec
mov
sub
dec
and
enter
loop
xlat
cmp
stc
mov
mov
lds
push
int3
sub
add
fbld
pop
cmp
rorl
fildll
ret
cmp
notl
and
out
sti
jl
shlb
xchg
movsb
dec
and
cwtl
rol
xchg
mov
push
push
in
fwait
adcb
and
push
push
mov
inc
dec
stos
lds
push
cmpl
in
lret
jns
push
stos
sub
mov
ljmp
mov
xchg
adc
and
mov
out
decl
xchg
jg
dec
xchg
or
pusha
push
mov
push
fs
adc
jp
fcoml
roll
cmc
loope
push
mov
orb
rolb
pusha
call
and
outsb
std
outsl
xchg
fsubs
out
shlb
add
ss
fisttpl
mov
inc
dec
push
or
add
add
dec
sub
push
sbb
xchg
add
pusha
std
cmc
mov
ja
inc
add
repz
outsl
xor
xchg
cwtl
test
mov
xor
push
and
lock
adc
xchg
mov
aam
fmull
std
std
cmpsb
out
in
clc
xor
mov
and
ljmp
in
shrl
xchg
sbbl
sbbl
sbb
jl
testb
pop
fbld
adc
cmp
imul
jle
repz
xor
es
movsl
adc
addr16
subb
jecxz
or
or
lret
add
shl
in
loope
cmp
idivb
clc
jecxz
mov
mov
inc
xchg
aas
repnz
ds
and
jl
push
ljmp
pushf
mov
pop
jnp
iret
sahf
and
loopne
inc
inc
into
xor
test
pop
push
or
mov
jnp
xchg
mov
test
and
pop
xchg
pushf
js
das
bnd
fadd
xor
lahf
imulb
dec
out
les
add
lahf
pop
cmp
icebp
sbb
push
repnz
daa
jbe
xchg
cmp
fcmovb
sbb
hlt
aad
mov
aas
movsb
mov
cmp
jl
push
mov
mov
testl
inc
pop
adc
xchg
in
mov
mov
mov
sbbl
pop
loop
pop
add
mov
fsubs
pop
and
gs
sub
sub
mov
movsl
rcrb
mov
mov
jl
rolb
in
lret
je
cmpl
shlb
inc
mov
in
leave
jge
ja
mov
and
cmp
pop
sub
mov
jl
pop
and
loop
test
lods
mov
dec
cmp
repz
sub
in
enter
xchg
adc
pusha
xor
push
sbb
lock
push
sub
push
push
pop
add
pusha
xor
fisttps
xchg
in
cmp
adc
add
scas
mov
popa
int
dec
inc
dec
push
stos
cld
jne
mov
loopne
leave
adc
lea
xlat
mov
aas
push
push
jg
xor
imul
xchg
idiv
lret
aad
js
test
push
loope
pusha
jns
ss
loopne
xchg
cld
out
inc
jae
out
lds
into
add
and
jo
mov
leave
pusha
xor
hlt
push
bound
cmp
add
adc
rcrl
filds
mov
push
cld
jne
pop
cs
add
pop
hlt
in
mov
mov
mov
cs
pop
shll
and
pop
jg
test
mov
loope
dec
cmp
pusha
adcl
shll
or
pusha
mov
loope
add
push
mov
dec
pop
int3
rcrb
inc
jecxz
cmp
je
mov
pop
ds
je
adc
fidivrs
test
and
in
popf
cmp
mov
cmp
aam
stos
mov
pop
xchg
and
add
mov
xlat
xchg
in
lret
std
ss
scas
add
loopne
add
and
push
std
cmpsl
es
scas
rclb
or
push
pop
popa
sbb
sbb
nop
les
mov
lret
fs
mov
inc
pushf
call
in
mov
shlb
xchg
shlb
xchg
pop
xor
lods
push
xor
jecxz
mov
dec
cs
mov
xor
js
mov
movsb
or
inc
adc
loopne
cmpsl
xchg
fnsave
aam
lcall
adc
cld
mov
inc
movsb
push
mov
pop
inc
mov
adc
adc
stos
scas
jl
or
or
stos
mov
loop
mov
push
push
outsb
pop
xchg
jp
mov
adc
popa
xor
lcall
inc
sub
cmpb
test
jb
add
mov
int
data16
inc
push
sub
mov
out
lods
repz
and
out
dec
idiv
mov
aam
dec
and
inc
mov
pusha
pop
add
shrb
fnstenv
cmp
sti
xchg
into
xchg
cld
shl
cmp
mov
pusha
nop
in
adcb
xor
adc
das
popa
test
sub
xorb
sahf
mov
adc
orb
push
push
int3
testb
pusha
jne
outsl
dec
mov
daa
pop
iret
repnz
lret
mov
gs
fstl
dec
or
add
loopne
enter
or
inc
shl
enter
adc
inc
inc
sub
fs
in
xor
shlb
and
adc
adc
cmp
dec
pop
int
shrb
sub
xchg
dec
adcb
mov
ljmp
repnz
fildll
adc
inc
hlt
push
lods
popf
into
mov
xor
mov
cmpb
or
mov
test
jne
mov
pop
fcomip
mov
jmp
jle
adc
mov
loop
cmp
out
pop
cmp
lods
stos
mov
jmp
gs
test
outsl
xorb
xchg
or
push
andb
scas
add
push
rclb
mov
iret
ljmp
jo
iret
mov
in
or
jl
mov
lock
dec
outsl
flds
push
add
xor
fldl
leave
mov
mov
inc
mov
clc
das
cwtl
aam
mov
push
data16
mov
imul
lods
adcb
inc
mov
shll
push
je
xchg
jnp
adc
mov
sub
out
or
clc
add
testl
sahf
stos
inc
mov
jg
inc
aaa
sub
pop
push
ds
lcall
xchg
push
cmp
lea
sbb
xor
shl
adcl
lahf
mov
pusha
gs
ljmp
add
int
xchg
out
push
pop
jbe
and
rcll
xor
out
insl
scas
sbb
and
dec
jp
iret
loope
dec
mov
arpl
push
out
and
stos
pop
lcall
mov
mov
push
mov
jo
or
xor
push
sbb
jecxz
pop
push
test
loopne
rcrl
loopne
jns
rol
or
sti
pop
xchg
cmp
and
rorl
in
xchg
rorb
mov
scas
in
add
andb
jne
clc
ret
lcall
mov
ret
ss
ds
mov
inc
mov
xchg
mov
cmpsb
xchg
imul
xor
push
jne,pt
mov
jg
rcll
xchg
sbb
pusha
xor
mov
shrb
dec
fcompl
pop
in
inc
jl
mov
pusha
push
pop
or
pusha
and
lods
lea
test
push
gs
es
add
push
cs
jge
test
pop
int
add
jne
cmc
daa
enter
jle
adc
cs
cmc
xorl
inc
dec
aas
iretw
xor
repz
addr16
lret
mov
arpl
inc
or
pop
in
push
sub
push
cmp
adc
stos
outsl
jne
addr16
in
lods
jmp
outsb
repnz
add
addb
addb
insl
pop
cmp
cmpsl
rorl
mov
jp
cmp
pop
scas
ret
adc
mov
rorl
arpl
adc
mov
inc
jle
sub
sbb
jb
mov
dec
jmp
or
pop
xchg
popa
adc
push
cmpxchg
repz
mov
xchg
ljmp
dec
mov
and
repnz
lds
shll
pop
pop
sub
cmp
push
icebp
ret
js
pop
lock
inc
or
xchg
rcrl
imull
stos
fwait
or
sub
int3
out
loope
popa
xchg
repnz
ret
scas
outsb
std
repnz
addb
adc
jp
adc
loopne
jno
adc
sbb
pusha
adc
je
sbb
lret
imul
xor
pop
out
test
push
ja
sub
loop
stos
push
addr16
pusha
ds
xchg
je
jnp
int
adc
mov
leave
push
popa
into
push
or
push
or
add
scas
mov
pusha
adc
cmpsl
mov
inc
lcall
insb
arpl
inc
sub
mov
push
loope
into
mov
push
fidivrl
dec
xor
mov
in
std
test
and
aam
int3
orb
js
sbb
call
mov
es
sbb
pusha
mov
stc
push
loop
ja
lock
in
cli
ds
pushf
fsubs
pop
aam
xchg
imull
jmp
xchg
mov
in
cmc
add
andb
out
push
inc
xor
sbb
sbb
sub
and
faddl
mov
leave
aam
ret
sub
arpl
mov
dec
sti
mov
mulb
cmpsl
sbbl
mov
lahf
loope
aad
fstpl
pusha
or
jg
mov
stos
in
mov
inc
sbb
ss
cmc
mov
fcomps
and
inc
adc
ds
inc
fldenv
or
imulb
add
nop
cmp
xor
jle
adc
fdivr
es
fwait
scas
add
adcb
idivb
mov
mov
jbe
int
sub
push
fcmovne
ja
les
dec
pop
or
dec
iret
daa
adc
cli
pushf
shlb
pop
fsubp
es
inc
inc
loop
jne
shl
pushf
in
add
adc
mov
addb
dec
mov
mov
shl
inc
into
rclb
xchg
mov
mov
jl
jb
ficoms
bound
ss
fisubs
push
dec
les
pusha
inc
jecxz
sti
mov
cmp
mov
sub
aad
je
es
push
les
dec
test
cwtl
in
addb
loopne
imul
add
fisubrl
sbb
repnz
das
je
adc
out
in
inc
shl
sbb
xchg
testb
int
or
outsb
or
mov
sbb
outsl
shll
scas
mov
jo
lods
cli
sub
ss
and
dec
into
lahf
or
mov
mov
loopne
fisubl
fscale
outsb
pop
stc
dec
ss
rclb
push
dec
sub
push
into
mov
popa
jmp
andb
lods
icebp
aam
test
sbb
lret
jmp
test
adc
adc
pusha
pop
jecxz
iret
cmpsb
mov
or
adcb
loopne
ret
add
add
subb
es
mov
ja
stos
add
add
mov
xchg
mov
xchg
scas
adc
cmp
rcr
mov
xchg
xlat
shll
iret
cmp
jl
nop
pusha
loopne
xchg
aaa
add
inc
mov
and
xchg
imul
inc
sbb
loopew
push
xor
dec
sbb
icebp
test
mov
in
iret
iret
ret
imul
xchg
fisttps
je
arpl
lds
test
xorb
jb
adc
mov
xchg
nop
xorb
add
arpl
ljmp
movsb
repnz
xorb
inc
out
mov
sbb
mov
cmp
lods
jae
inc
lods
push
enter
pusha
and
pop
cwtl
sub
mov
add
jge
data16
ljmp
mov
out
xor
in
mov
andl
scas
add
aam
lcall
cs
xor
jae
clc
pushw
cltd
inc
adc
loopne
xor
loope
test
mov
lods
outsl
icebp
inc
leave
nop
enter
mov
xor
push
pop
push
fwait
adc
mov
push
add
pop
das
mov
mov
mov
or
test
add
movsl
inc
sahf
mov
mov
dec
mov
dec
or
cmp
out
pop
in
pop
test
cltd
pslld
jns
js
daa
push
lods
adc
int3
jo
jo
cmp
sub
pop
push
mov
mov
jno
ror
mov
dec
cmp
ja
sahf
pusha
rcl
adc
and
call
shrl
inc
add
sbb
andb
ja
cld
idivl
sbb
scas
push
inc
adc
add
ja
inc
pop
nop
lods
orb
xlat
sarb
or
and
or
int
jae
pusha
jns
cmpsb
out
pushf
insb
inc
push
movb
aas
scas
fstl
decl
jle
jb
cmp
add
adc
push
out
dec
hlt
mov
adcl
pusha
rcrb
and
add
or
xchg
push
movsb
loopne
push
es
mov
roll
pusha
rclb
jle
js
dec
insb
ret
outsb
shrd
add
gs
addr16
and
in
jns
mov
adc
scas
jb
aaa
out
in
faddl
leave
test
inc
sub
pop
xor
or
test
movsb
gs
xchg
pop
jmp
into
mov
and
mov
les
fs
ja
mov
or
aas
outsl
adc
inc
flds
mov
adc
into
cmp
in
dec
push
movsl
lods
jg
or
sub
fstpl
les
mov
dec
cld
sahf
stos
mov
pop
mov
mov
lcall
sbb
dec
xlat
jno
fs
jmp
sbb
push
in
fstl
test
movsb
cld
shll
dec
mov
aaa
sub
push
test
mov
push
insl
imul
lahf
mull
shl
xchg
pusha
jmp
cmpsl
adc
xchg
push
lcall
int
jmp
dec
lods
pop
aad
xor
push
or
sarb
test
imul
int3
loopne
and
cmp
idivb
ljmp
mov
in
mov
rclb
fisubrs
faddl
rol
xor
add
pusha
xchg
cs
cmpsl
xchg
mov
push
fistps
push
pushf
inc
add
shr
gs
mov
outsb
cmc
jnp
sub
add
js
jge
mov
pop
jecxz
jno
jecxz
test
lea
and
fildll
sub
add
inc
pop
mov
hlt
int3
adc
and
mov
pushf
or
mov
mov
sbb
jae
pushf
addb
or
shl
sub
scas
rcl
test
pusha
mov
dec
cmc
jp
movsb
daa
jmp
rcrb
mov
add
mov
outsl
pop
fnstenv
cmp
ficompl
dec
ja
jg
stc
inc
mov
sub
and
rolb
cmpsb
call
pushaw
or
out
jae
cmpsl
rclb
movsl
or
inc
mov
jnp
iret
lcall
jo
test
aas
mov
js
mov
inc
pop
sub
ret
mov
in
inc
sbb
add
sti
das
cmp
cmp
out
idivl
pop
mov
gs
ljmp
fadds
add
and
inc
xchg
fsubs
popa
dec
idivb
jge
aam
shlb
dec
ds
mov
sub
mov
cmc
stos
mov
sbb
lret
negb
fs
dec
sbb
inc
inc
jnp
or
shlb
pop
bound
add
sti
mov
adc
lcall
cmp
sarb
stc
and
mov
fcoml
into
or
add
xor
sub
cmpsl
sti
inc
xchg
leave
cwtl
inc
loopne
lock
inc
jo
and
add
ljmp
decl
xchg
dec
sbb
addr16
gs
sub
cmc
and
ja
sub
inc
rcr
insb
pusha
xchg
inc
and
fld
and
cmp
mov
out
mov
scas
mov
test
add
pop
lret
les
js
scas
into
and
push
stos
mov
xchg
pop
movsb
into
icebp
xchg
gs
mov
dec
xor
mov
pop
into
push
test
push
pushf
pop
shlb
cmpsl
bound
jae
and
cmp
mov
mov
adc
push
test
sub
aaa
jbe
lret
mov
jecxz
mov
js
xor
dec
stc
ret
cmc
pop
push
les
pop
addr16
lret
call
sbb
and
adc
xorb
aam
jno
popf
dec
inc
aam
push
mov
add
and
scas
mov
imul
adc
or
insl
sti
inc
mov
mov
int
jmp
jo
dec
sbb
mov
subl
dec
pop
inc
or
sub
and
lcall
xchg
in
call
sbb
ret
cltd
cmc
dec
sub
push
sub
das
mov
icebp
add
push
adc
sarb
jno
nop
push
lds
pop
into
xor
cmp
pop
dec
aaa
loop
mov
ljmp
insl
sti
imul
cli
xlat
mov
les
jnp
shll
ja
pop
jno
and
add
and
out
outsb
pop
add
loopne
test
outsb
jns
rolb
inc
sbb
xchg
and
sbb
jp
sbb
mov
inc
mov
jns
mov
mov
aad
sbb
fsqrt
mov
pop
inc
push
sub
xchg
inc
and
rorl
lret
insl
or
add
loopne
hlt
rep
je
inc
or
dec
pop
sahf
int3
fdivrs
mov
out
dec
in
or
and
lret
ret
sub
xlat
imul
mov
orb
and
out
hlt
aas
mov
in
adc
xor
jno
repz
movsl
std
pop
mov
pusha
pop
sahf
repz
out
rcll
insb
and
cs
jmp
jo
cmp
pop
daa
push
loop
cltd
rorb
pop
hlt
in
jno
and
sub
mov
xchg
pop
add
add
insl
pop
adc
sub
popa
out
sub
jg
test
inc
jb
call
idiv
fistps
xor
push
add
inc
div
add
sbbb
inc
push
rolw
and
and
test
and
push
and
mov
pop
adc
jb
lea
in
xchg
rolb
int
jp
aad
mov
sub
cld
add
push
inc
scas
test
mov
in
pop
data16
sub
dec
inc
jb
mov
ret
scas
push
jecxz
and
lahf
cld
pop
js
jg
loope
hlt
sti
jp
ja
or
iret
jle
test
cld
and
cmpsl
adc
and
pop
mov
pushf
mov
pop
in
pop
mov
pop
in
fmull
cld
in
test
jge
sti
xlat
ja
mov
dec
test
fisttpl
xlat
mov
jmp
bound
dec
lcall
mov
cmp
pop
arpl
addr16
cwtl
mov
adc
andb
xchg
insl
dec
adc
dec
xchg
pop
xorb
mov
mov
mov
or
mov
or
and
test
sbb
inc
mov
fld1
sbb
pop
xchg
aad
mov
pusha
push
insb
or
popa
xchg
xchg
jecxz
and
call
push
mov
sti
xorb
das
in
sub
push
push
shlb
lahf
jae
mov
addl
icebp
mov
das
nop
sbb
mov
xchg
lds
ja
cmp
xor
inc
pop
and
arpl
lock
addr16
enter
xlat
outsb
lods
or
xor
cmp
shll
mov
push
sub
jbe
jmp
out
sbb
cmp
in
stos
jae
adc
add
sbb
aaa
dec
add
push
and
insb
mov
mov
add
arpl
push
mov
and
mov
xor
adc
loopne
xor
and
dec
mov
dec
addr16
xor
popl
ret
push
std
cvtps2pi
mov
enter
jmp
fimuls
mov
cmpsl
mov
or
imul
cmc
pop
pop
into
loope
dec
and
mov
sub
pusha
test
shll
cmp
lods
add
insl
mov
inc
les
test
not
push
in
mov
pop
sbb
incl
das
cmpsb
xchg
pop
adcb
cmpsl
push
sub
mov
and
xor
mov
lret
push
int3
sub
cmc
pop
jecxz
test
push
idivl
mov
in
inc
add
inc
in
mov
outsl
ss
mov
loop
push
dec
mov
in
mov
cmp
aad
pusha
push
adc
push
sub
int
pop
mov
pusha
pop
jno
dec
cmp
in
jae
sub
movsb
rcrb
inc
shrb
push
xchg
clc
hlt
jp
addr16
movsb
pop
dec
lcall
pop
dec
test
cmp
aam
cltd
mov
inc
icebp
test
pusha
mov
jbe
sub
aad
inc
mov
sbb
sti
lret
out
daa
jle
dec
fcompl
xor
mov
mov
cmp
and
mov
and
pop
inc
flds
pop
mov
xchg
repz
fwait
andb
sbb
imul
loop
gs
push
xor
out
dec
lret
fsubl
in
test
inc
pop
outsl
cs
xchg
fdivs
div
jnp
clc
lcall
push
repnz
push
arpl
popf
sub
mov
mov
hlt
pop
lea
ljmp
clc
mov
test
out
pop
xchg
dec
dec
inc
inc
pop
adc
dec
cmpb
call
cmp
in
inc
push
adc
mov
xlat
jb
pop
je
loope
pop
push
mov
ss
sbb
mov
int
test
jmp
cli
jae
testl
pushf
je
cli
mov
mov
cmp
mov
adc
add
cli
add
sbb
and
mov
aas
hlt
loopne
push
dec
pop
mov
lea
scas
out
mov
add
icebp
sbb
repz
and
cmp
int
fsubs
push
pop
add
shl
in
lods
or
jge
insb
outsb
sbb
mov
push
pop
mov
jb
in
mov
xchg
into
imul
lret
into
mov
push
loopne
lods
andb
aas
mov
xor
shl
scas
xor
shrl
sub
pusha
jge
lods
or
pushl
pop
fisttpll
and
xor
sbb
icebp
xchg
test
iret
or
or
rclb
jb
ficomps
sub
sbb
jl
push
fcmovb
dec
mov
loopne
adcl
rcll
or
std
jnp
stc
jp
mov
incl
or
sub
push
insb
mov
cld
xchg
adc
mov
mov
es
jmp
popf
lahf
test
rcll
mov
cmp
inc
dec
das
popf
loop
shl
sub
add
das
subb
add
xor
mov
stos
jno
movsl
xlat
sbb
mov
cmp
xchg
loopne
popl
lret
jns
test
cmpsl
pop
adc
inc
xchg
push
xchg
pop
jnp
loope
into
xchg
or
cmp
sbbl
enter
pop
lods
push
mov
dec
orb
sbb
loopne
ljmp
fidivs
pop
les
outsl
sub
xor
mov
pop
and
mov
pop
int3
das
cwtl
fsubs
xor
das
aaa
inc
lret
cwtl
andb
into
rorb
data16
call
pop
push
scas
cwtl
fsub
push
in
pop
sbb
test
inc
mov
lds
cmp
fucomip
and
add
mov
cmp
js
dec
and
mov
shl
mov
and
cmc
push
pop
mov
fldz
ss
icebp
popf
cld
sub
ja
push
inc
icebp
pop
dec
mov
in
adc
cmp
push
aad
mov
pusha
hlt
sbb
pusha
adc
or
and
fcomi
push
hlt
dec
rcll
in
mov
sbb
nop
add
movsb
xchg
add
push
xor
mov
ficoms
xlat
lods
scas
mov
dec
inc
pop
dec
ret
repz
xlat
mov
sbb
inc
imul
and
xlat
cld
xchg
pop
push
mov
insl
dec
repnz
push
call
mov
and
pop
mov
xchg
mov
movsl
cmp
inc
test
or
les
insb
sahf
fdivl
incb
jo
arpl
lock
nop
enter
inc
xor
adc
rorl
lcall
adc
sbbb
int3
shr
jg
movsl
sub
mov
dec
and
mov
aam
scas
test
loop
insl
mov
sub
adc
add
repnz
mov
movsl
sbb
rorb
lea
or
mov
xchg
outsb
sbb
dec
out
mov
sub
inc
js
pusha
or
jmp
ljmp
mov
cmp
test
mov
mov
nop
jl
in
pop
subb
jne
push
xchg
jns
cmpsb
or
cmpsb
aas
adc
fmull
inc
test
addr16
scas
and
inc
popl
jl
jge
fistps
lret
dec
mov
negb
add
or
add
je
addr16
mov
jae
adc
xor
sub
mov
in
cmp
je
push
stos
shl
cs
or
inc
stos
adc
nop
mov
movsl
popf
jo
mov
mov
xor
xor
sbb
sbb
jmp
and
lahf
dec
adc
cmp
push
fwait
addb
xor
mov
ljmp
fadds
enter
jae
sub
dec
loop
sub
jne
sbb
loopne
int
clc
fisubl
dec
int
mov
mov
jp
and
pop
mov
mov
fsubrl
add
bswap
orl
scas
xorl
data16
pusha
xor
mov
jo,pn
jae
cld
pusha
sub
sbb
mov
popf
cmp
mov
imul
icebp
push
mov
insb
xchg
xchg
xchg
loop
mov
jns
loopne
adc
addr16
jl
bound
testb
cld
loopne
sbb
out
addr16
mov
dec
insb
repnz
cmp
cmpsb
push
lds
ret
pushf
adc
fadd
inc
xorb
or
sub
xchg
xchg
inc
xor
and
pop
fadds
aam
pop
sbb
fs
or
mov
sub
stos
mov
test
jg
fidivrl
jle
mov
test
es
fidivl
fisubs
ss
cmpsb
mov
sub
inc
mov
out
cs
sti
pop
cltd
xor
add
adc
nop
mov
sti
stos
push
in
pop
mov
leave
push
scas
jl
mov
adc
sarb
cmpb
insb
xor
lcall
adc
jns,pt
sti
pop
mov
or
shlb
xor
insl
adc
add
pushw
jp
cwtl
inc
sbb
testl
rorl
cmp
rcrb
push
inc
sahf
dec
orl
int
stos
enter
mov
insl
in
sbb
inc
test
inc
lret
inc
jmp
cmp
test
jle
out
xlat
xchg
js
push
loop
lods
sbbb
or
and
push
jge
and
test
daa
fincstp
cmpb
pop
xor
shrb
fnstsw
bound
xchg
bound
push
pop
pusha
push
jns
and
and
sbb
and
addr16
pop
mov
and
mov
lds
lock
cltd
rolb
andb
fiaddl
test
xchg
clc
mov
lds
mov
rcrb
das
movl
hlt
ljmp
addl
mov
rorb
mov
push
out
aas
pop
cmp
in
mov
cmpsb
fsubs
aas
rcrl
inc
outsl
fisttpl
sub
int
jne
jg
loop
ja
mov
fcmovu
into
test
or
popf
in
and
sub
add
mov
clc
jbe
jbe
dec
xor
pop
sbb
imul
or
insl
inc
stos
test
das
dec
push
sub
lret
dec
insl
sbb
xor
movsb
loopne
inc
fcomps
nop
je
hlt
pop
ret
ljmp
repnz
sbb
lea
or
add
sub
fsubrl
movsb
or
loopne
mov
jmp
jb
and
xchg
in
imul
cmp
inc
mov
movsb
adc
bound
push
dec
aaa
push
mov
fdiv
mov
cli
mov
nop
inc
jnp
enter
pop
mov
sub
mov
add
int
inc
test
sbb
jbe
das
gs
mov
mov
cmp
fstp
mov
sahf
mov
aam
in
shrb
in
icebp
outsb
dec
inc
jg
xor
mov
cmpl
aam
sarb
call
dec
iret
lcall
dec
inc
push
xlat
mov
mov
sbb
jno
or
loopne
scas
add
lcall
and
aaa
cmp
push
fisubl
xchg
add
push
sbb
xor
push
aaa
scas
push
les
inc
adc
pusha
ret
jno
mov
or
loop
movsl
and
out
rorl
and
dec
cmp
adc
add
call
mov
arpl
mov
ret
mov
cmpsl
jbe
push
fisttps
xchg
hlt
jo
decl
cltd
stos
lds
mov
adc
loopne
ja
daa
xor
ljmp
adc
mov
add
xchg
and
inc
out
outsb
xchg
insl
mov
pop
fwait
hlt
hlt
jno
and
and
lods
inc
adc
rcl
subb
ja
je
xor
pop
ljmp
dec
insl
dec
repnz
lock
mov
dec
xchg
pushf
test
lea
pop
sbbb
pop
dec
xchg
push
std
and
and
in
leave
test
cmp
push
push
fisubl
mov
add
or
xchg
daa
aad
in
cmpl
inc
jnp
mov
lret
sbb
clc
addb
loopne
insb
jge
dec
data16
pushf
mov
in
aas
call
fsubs
cmp
sub
cmp
xchg
lods
dec
test
shrl
inc
push
or
aaa
xchg
jl
inc
scas
int3
mov
mov
ficoms
xor
insl
lahf
movsl
cmp
and
add
rolb
pop
clc
mov
add
inc
mov
or
ds
inc
cwtl
rolb
pop
push
aad
mov
sbb
inc
xor
rolb
mov
adc
jb
inc
mov
js
lods
hlt
mov
call
adc
mov
pop
sub
rorw
mov
sbb
add
mov
loopne
in
xor
fs
out
xlat
pop
and
pop
mov
scas
das
and
in
jg
push
sbb
jl
pop
lcall
push
jns
sub
les
cmpsl
jge
or
lods
mov
test
movsl
dec
dec
jmp
push
stos
int3
pusha
test
jns
inc
sub
adc
fildll
ficoml
ja
es
fnstenv
negl
cmp
shl
cmp
inc
pop
cmpsl
movsb
test
xor
in
adc
fnstenv
iret
lahf
push
leave
dec
filds
dec
mov
mov
stc
mov
out
cmp
ret
sub
test
rcrb
mov
mulb
pop
insb
jne
xor
xchg
push
pop
cmp
les
sub
cmp
xchg
fildll
cwtl
in
daa
aaa
imul
push
fisubl
ds
loopne
aas
inc
pop
sub
push
jne
outsb
add
loop
push
add
stc
lcall
shl
sbb
sar
xor
xchg
adc
rol
adc
jbe
xor
stos
xor
rolb
inc
dec
jecxz
pop
enter
mov
xchg
cmp
rorb
loopne
subb
pushf
mov
pop
jmp
pop
mov
pusha
shl
insb
inc
leave
jb
fnstsw
in
test
lret
ret
mov
daa
and
mov
dec
add
dec
stos
test
int3
sbb
fsubs
rcrb
das
fadds
inc
fidivs
fisubrl
lret
mov
shll
add
and
nop
inc
sbb
pusha
push
xor
bound
pop
cmpb
adc
jle
jae
movsl
es
popa
imul
out
popa
fs
inc
pushf
dec
add
or
adc
cmp
imul
sbb
add
out
cmp
mov
leave
mov
and
add
mov
je
test
in
xor
sub
adc
lods
add
jecxz
out
and
rolb
inc
adc
pushl
repnz
in
in
and
cmp
test
sub
popa
inc
jo
ja
pop
mov
inc
loopne
movsb
jns
stos
pop
sub
adc
outsl
mov
out
sti
jmp
sbb
sub
imul
sub
cmpsl
adc
add
push
mov
pop
and
test
inc
out
jp
cmp
xchg
pop
mov
cmp
fwait
decb
mov
in
xor
daa
push
mov
sub
loopne
jecxz
jnp
test
xchg
in
mov
cld
das
in
mov
mov
idivl
pop
ljmp
cld
dec
mov
mov
loop
pop
fidivl
arpl
insb
or
or
sub
mov
xchg
shll
fwait
xor
push
out
out
push
adc
jb
xchg
scas
dec
jne
mov
out
xor
in
push
pop
iret
pop
jle
ljmp
repz
les
ret
xor
pop
sbb
and
dec
ret
leave
fdivrl
sarl
sbb
divb
in
imul
testb
stc
sbb
stos
dec
add
cmpb
add
xchg
mov
loopne
pop
les
aad
inc
jg
fcomps
rcrb
or
rolb
lds
mov
mov
dec
pusha
xchg
shl
sub
and
sar
inc
adc
pushf
xor
push
lahf
movsb
movsl
popa
adc
sti
mov
push
jb
cwtl
rolb
jmp
adc
sarb
sub
ja
sti
dec
test
repnz
xchg
test
enter
xor
into
int3
dec
mov
scas
mov
insb
push
popf
sub
shlb
dec
mov
std
mov
sahf
stos
push
pop
fisubl
xlat
fldt
jge
push
movsb
lods
ss
pop
inc
cmpsl
mulb
cmpsb
add
fmuls
ja
xchg
adc
lahf
in
movsl
sub
or
fwait
dec
mov
cmp
aam
mov
mov
call
pop
scas
mov
mov
out
fistpll
ret
push
mov
arpl
cli
daa
push
jl
shrb
mov
test
rclb
and
and
out
clc
mov
cltd
inc
jae
add
mov
icebp
cmpsb
xchg
pop
mov
mov
sahf
iret
test
dec
mov
add
push
out
outsl
pop
call
mov
fwait
test
fwait
arpl
xor
lret
dec
repnz
mov
xor
sub
mov
add
outsb
xchg
xchg
aaa
add
pop
stc
mov
fistpll
dec
sbb
mov
loopne
xchg
jecxz
test
cli
add
jae
or
cmc
pop
rcrb
jb
pushf
pusha
and
loopne
in
xchg
push
xchg
leave
repnz
lea
mov
mov
jg
pusha
rolb
inc
outsb
push
and
les
stos
jno
dec
push
nop
xchg
inc
pop
add
cmp
push
mov
lcall
rolb
mov
pusha
xor
mov
movsl
icebp
xchg
fcmovu
push
and
mulb
or
loope
adc
pop
cli
add
add
pushf
shlb
push
mov
mov
mov
ret
aam
cmpsb
sub
stos
sahf
lcall
jns
in
mov
repnz
cld
lahf
sub
lahf
pop
mov
lods
cmp
sub
or
push
andb
mov
mov
adc
in
xchg
test
push
mov
mov
daa
inc
or
orb
mov
sahf
std
sbb
jmp
jmp
outsl
jl
fldt
or
add
mov
enter
imul
test
add
cmp
imul
lret
xchg
shll
iret
or
adcb
pop
add
push
adc
and
mov
jae
add
add
pop
inc
aam
adc
adc
lcall
mov
outsb
call
sbb
rorb
and
imul
mov
fbstp
mov
or
sub
out
xor
jg
mov
sbb
mov
fisubrl
out
pop
dec
fldl
shll
fldenv
mov
ss
imul
inc
mov
fnstenv
inc
sub
xchg
push
mov
inc
mov
adc
and
sbb
test
mov
mov
lret
pcmpeqd
scas
iret
fimull
cmp
das
sbb
and
cmp
inc
jmp
fidivl
jno
sbb
mov
sub
fadds
dec
clc
fwait
sub
pop
insl
xchg
repnz
divl
push
addr16
add
jl
mov
and
das
out
sbb
shll
shrb
cmp
xor
xchg
and
xor
aam
pusha
adc
pushf
int3
add
push
daa
push
cltd
and
pop
jle
jo
sbb
mov
inc
and
les
lcall
mov
subb
cmpsb
mov
addb
repnz
ret
jge
or
ljmp
mov
std
movsb
loope
mov
out
mulb
loope
add
add
loope
pop
scas
pop
popf
sub
inc
popf
push
mov
jp
jl
js
pusha
loopne
popa
stos
mov
mov
js
adc
push
rorb
lahf
cltd
mov
push
iret
mov
int
push
in
jne
inc
lahf
push
push
jno
nop
lock
pop
add
dec
pusha
jb
dec
mov
lcall
jnp
sbb
pusha
dec
lods
and
inc
andb
lahf
or
cltd
pop
cmp
pop
outsl
cmp
lods
pusha
outsb
mov
push
rorl
sbb
repnz
push
in
lock
subb
js
cmc
dec
jl
andb
or
sub
inc
xor
sub
push
push
adc
xor
nop
and
clc
inc
arpl
push
pushf
fsubl
mov
stos
pop
sub
or
mov
aas
cmp
jp
dec
ja
dec
pusha
sbb
subb
and
inc
jg
xor
in
mov
jp
xchg
fisttpl
jg
movsb
jno
fnstsw
add
pusha
mov
insl
mov
add
scas
addb
mov
mov
dec
push
int
mov
rclb
push
cmpsl
pop
ljmp
cmp
mov
mov
xchg
dec
mov
rcll
or
outsl
pop
cmp
jo
mov
lods
out
jg
sub
insb
jo
mov
mov
idivl
xchg
fwait
test
shr
sbb
stos
jb
dec
xor
or
andb
in
in
xchg
sub
mov
inc
mov
add
and
hlt
jg
inc
adc
call
or
cwtl
or
sbb
add
mov
imul
pop
dec
push
cld
fcmovb
nop
xchg
inc
imul
pop
inc
dec
addr16
dec
lea
repz
xchg
out
mov
lret
enter
pop
in
jle
iret
stos
or
cmp
push
cmp
fcompl
ja
or
pushf
and
and
daa
in
cmp
dec
nop
dec
sbbb
mov
in
in
and
xlat
cmpsl
cmp
mov
pop
shl
jle
cmp
cmp
or
jbe
pop
test
imul
mov
jl
pushf
pusha
orb
ficomps
dec
mov
sub
lret
lcall
cmp
test
mov
enter
add
bound
inc
jns
dec
mov
std
push
psubsw
mov
rolb
inc
cltd
xor
add
lret
into
add
pop
fidivl
inc
push
jl
fstpt
sub
insl
inc
xchg
pop
add
mov
call
jb
adc
dec
lret
aas
adc
pusha
outsl
lcall
cmc
cmpsb
lcall
cli
mov
mov
addb
push
sub
push
jge
pushf
push
pusha
insl
sbb
cs
adc
in
sbb
inc
adc
cld
and
mov
pop
test
decb
pushf
pusha
inc
mov
adc
loop
ds
in
pop
jns
fidivrs
jp
mov
pushf
inc
xchg
lods
fidivl
inc
movsb
cmpsl
cmp
pop
xchg
rcrb
fsts
call
shll
xchg
jae
and
lods
rcll
sub
inc
mov
ror
or
loope
or
inc
jb
lcall
inc
rorb
mov
jmp
sub
fcomp
in
rcll
push
fsubrp
cmp
jae
imul
push
jno
pushf
inc
setb
xchg
out
adc
testb
pop
insb
fsubr
xchg
nop
inc
inc
mov
test
sub
test
pop
mov
xor
adc
add
adc
loopne
xor
cwtl
movsb
and
loop
xor
inc
or
sti
xchg
mov
sbb
xchg
add
out
sbb
add
jb
push
lret
xchg
inc
fstl
cltd
movsb
xlat
xor
xor
mov
in
fimull
js
push
inc
sahf
adc
insb
mov
add
xor
dec
stos
mov
add
xlat
add
pop
xor
add
jns
mov
gs
xchg
cmp
stos
loope
mov
jp
dec
cmc
stc
dec
out
call
sbb
in
dec
adc
stos
inc
mov
inc
in
mov
insl
mov
lret
xor
add
les
out
xchg
test
mov
xchg
cs
aam
gs
mov
push
dec
and
xor
dec
inc
repz
int
mov
fwait
adc
pop
rcl
mov
in
inc
dec
movsl
push
fcmovnbe
stos
sahf
gs
xchg
pop
int
and
cmp
push
push
push
mov
push
pusha
mov
aad
mov
mov
repz
adc
mov
mov
jo
das
dec
and
mov
inc
cmp
add
rclb
bound
ret
ret
aam
mov
add
mov
jmp
push
test
sub
xor
xor
xor
push
sbbl
int3
lods
subl
call
lcall
aad
xchg
repz
movsl
sub
bound
ret
jb
jo
inc
push
jnp
sbb
in
lods
loopne
or
pusha
fbstp
fisttps
sub
ret
xchg
sbb
cmc
or
xchg
pop
mov
shlb
add
mov
add
add
add
das
push
insb
mov
push
cmp
jns
fsub
mov
movsb
movsb
jne
cmc
jne
xor
js
es
mov
lea
xchg
jne
mov
in
sbb
xchg
sbb
inc
xchg
mov
in
add
ss
aaa
pop
jp
out
dec
xchg
jns
push
lcall
adc
jns
cld
loopne
pop
shlb
jmp
dec
pop
mov
xchg
movsb
xor
mov
stos
addr16
mov
int3
mov
movsb
aas
xchg
out
or
inc
cmp
xor
cmp
adc
add
sub
shlb
mov
stos
loope
inc
xor
cmpxchg
lahf
imul
in
push
std
xor
imulb
js
inc
xchg
or
jge
lds
mov
cld
sub
fucom
out
lcall
mov
int3
mov
push
loop
mov
push
mov
lret
sub
push
lret
push
decl
jp
jmp
sbb
cmpb
or
out
pusha
add
call
or
add
roll
cmp
push
inc
mov
add
lods
outsl
fsubl
mov
pop
mov
or
movsl
clc
data16
testb
xchg
repz
rolb
mov
jo
movsb
xor
inc
repnz
push
and
repz
and
int3
das
orb
outsl
jecxz
cmpsl
pop
or
inc
jb
cmpsl
or
mov
sbb
loop
push
shrb
sub
pop
jp
dec
mov
sbb
mov
dec
addr16
insl
cltd
push
jle,pt
xchg
inc
ror
cwtl
pop
pusha
xchg
sbb
imull
aad
xor
sbb
mov
mov
xchg
lods
pusha
adc
cmpb
fmuls
xorb
gs
mov
sbbb
sti
loopne
out
pushw
in
cmp
inc
ret
lock
popf
addl
cmp
add
mov
cmp
push
ja
testb
sbb
push
mov
mov
mov
sbb
jae
jbe
lahf
xchg
mov
inc
test
jle
jmp
ss
out
rclb
aad
dec
and
mov
inc
sbb
sbb
xchg
into
jmp
mov
in
jmp
jb
adc
or
add
pusha
push
ja
mov
jbe
dec
in
in
lcall
nop
shlb
pop
lahf
pop
into
out
outsb
aas
movsb
inc
mov
pop
out
int
lcall
add
xchg
adc
pusha
shl
pop
gs
or
addr16
jo
adc
lret
xor
mov
mov
push
popl
adc
in
jle
push
adc
and
je
int3
push
lcall
pop
fsubs
int
jmp
add
mov
ret
sub
lds
xor
mov
add
inc
cmpl
jmp
sbb
loop
sbb
pop
test
and
inc
dec
push
dec
and
and
sub
aaa
fnsave
cmp
jmp
mov
push
adc
sub
push
sarb
push
jno
inc
push
cmpsl
notl
xor
jge
mov
or
xor
mov
jne
xor
pushf
sub
fs
pop
sub
jp
dec
popl
xor
dec
loop,pt
or
mov
mov
movsb
loopne
fcoml
jge
rorb
scas
ljmp
iret
ret
mov
rcll
pop
add
loopne
ret
push
inc
inc
into
dec
sbb
ljmp
fcmovb
divb
popa
std
or
pop
insb
stos
fldl
lds
outsb
outsb
shrl
aaa
pop
or
outsl
fcompl
sbb
pusha
inc
ljmp
pop
adc
lea
loopne
mov
jl
or
mov
lock
sbb
xchg
sub
flds
mov
xor
repz
movl
xor
push
adc
mov
dec
scas
inc
data16
mov
push
jnp
push
mov
outsb
cmp
daa
push
outsl
cs
jg
add
add
fimull
lret
push
lods
test
out
test
push
mov
add
pusha
cmp
leave
push
leave
adc
inc
je
or
lea
xchg
popf
shll
sub
or
or
test
dec
in
loop
int
mov
or
mov
int3
dec
mov
cmp
mov
divl
stos
popf
or
adc
sbbb
mov
or
popf
adc
mov
sti
adcl
fs
lods
lods
push
dec
stc
dec
xor
inc
and
pop
dec
pushl
inc
int3
aad
inc
lret
int3
cmc
xor
mov
dec
cmp
mov
dec
pop
lods
imul
push
push
push
cltd
andb
testb
pop
lods
lods
dec
add
mov
inc
xorb
and
adc
rorb
add
movsb
xor
loopne
stc
aad
lock
jae
js
sub
jb,pn
add
test
pusha
cmp
pushf
sub
addb
adcb
or
add
push
icebp
xor
and
leave
xchg
or
mov
pop
negb
adc
mov
mov
jbe
xor
or
cltd
xchg
push
sarb
mov
pusha
xchg
adc
push
out
mov
ss
dec
xchg
fwait
mov
xor
inc
pop
incl
push
shrb
dec
addr16
fsubrs
fists
sub
or
jmp
or
cmp
push
mov
es
mov
sbb
movsb
test
cwtl
xchg
adc
sub
dec
and
xchg
inc
aad
out
xchg
inc
test
dec
jns
sub
pop
cwtl
add
and
jns
cld
das
movsl
inc
pop
mov
mov
push
adcl
cmpsl
pop
and
lahf
icebp
dec
clc
adc
push
jbe
popf
push
sbb
imul
test
orb
js
pop
jle
xor
and
in
shll
pushf
nop
rcrb
popf
gs
sbb
loop
test
and
or
lock
mov
lahf
frstor
inc
pop
xchg
push
sbb
jnp
scas
test
popa
add
xchg
xor
dec
and
push
and
pop
xor
xchg
and
xchg
cmp
ss
pop
inc
pop
out
pop
movmskps
frstor
push
sahf
mov
dec
inc
stos
pop
push
adc
aaa
push
into
int
in
idiv
ret
shl
pop
cld
inc
in
cld
dec
cmc
jmp
jle
jl
adc
and
sbb
pop
jmp
cli
mov
outsl
lret
pop
add
push
cmp
and
pusha
sbb
inc
ret
pop
sbb
rorb
faddl
insb
out
imulb
dec
jbe
jge
mov
pop
cli
and
fwait
pop
xlat
xor
jl
loopne
mov
pop
repz
add
xlat
jbe
jnp
jge
pop
jo
xor
call
dec
in
dec
cltd
out
inc
inc
in
sbb
rclb
and
jmp
mov
pop
repz
mov
cmp
fldl
int3
out
bound
jp
jo
enter
sub
insb
pusha
cmp
push
sub
push
or
mov
pushl
fwait
out
sti
movsb
popf
push
scas
addr16
aaa
and
out
stos
add
nop
hlt
add
inc
fsubrl
fld
dec
mov
jne
cmc
out
ss
movsb
add
sub
adc
loope
aas
ret
xchg
lret
dec
or
add
adc
jp
repz
mov
or
andb
mov
shrb
xor
and
adc
lret
movsl
jg
add
das
std
sub
sub
sub
inc
cmp
jle
mov
pop
lods
cmp
inc
fadds
movsb
or
cwtl
cld
xorb
addr16
les
cmc
call
fildl
faddl
pop
pop
ds
mov
inc
cmp
subl
icebp
mov
andb
or
pop
jne
and
jecxz
adc
add
push
xchg
outsl
push
jns,pt
out
add
add
cmpl
or
inc
mov
xchg
enter
fdivr
mov
push
cmpsb
inc
cs
cmpsl
stc
xchg
les
in
pusha
xchg
push
dec
and
repnz
push
test
and
and
add
inc
mov
rep
cs
add
jle
jle
xor
das
add
mov
jo
adcb
loop
in
rcrb
fisttpll
sbb
in
in
lods
cmpb
xchg
lods
add
shr
test
inc
scas
dec
in
movsl
mov
mov
or
and
cmpsl
push
jb
sbb
int
sub
fimuls
lock
jno
rcll
cmp
cmp
call
lret
inc
inc
mov
dec
push
mov
mov
or
ja
dec
mov
test
push
negb
xchg
xchg
push
mov
sbb
xor
sbb
mov
pushf
pushf
shlb
fsubrl
jl
pusha
mov
sbb
test
add
inc
pop
or
mov
jns
lahf
ficoml
lods
ljmp
cltd
adc
dec
je
adc
xlat
mov
sbb
and
mov
pop
mov
outsl
stos
dec
bound
add
outsb
repnz
add
pusha
mov
xor
dec
jmp
pop
aad
sbb
dec
xor
out
sti
in
push
in
and
pop
mov
adc
sbb
xor
sti
ljmp
or
adc
jg
iret
lret
mov
rcl
roll
pop
add
ljmp
lea
shr
mov
or
rorb
loopne
enter
inc
pop
pop
inc
jnp
push
jbe
lahf
lea
mov
imul
pop
bound
mov
or
rorl
cmp
push
shlb
and
cld
adcb
jb
fmul
adcb
push
mov
icebp
pushf
pop
cmpb
mov
icebp
decl
fidivl
or
mov
jns
mov
sbb
incl
hlt
cmp
cmp
pop
mov
or
xchg
ss
push
pavgb
mov
test
je
and
repnz
and
in
dec
test
fistps
cmp
shrl
stc
lock
jecxz
pop
xchg
in
cvtps2pd
loopne
dec
adc
and
adc
pop
icebp
pop
add
mov
dec
pusha
popa
mov
sbb
xchg
push
shrb
imul
mov
fcomps
push
add
in
dec
xlat
ret
stos
imul
mov
sbb
daa
add
cmc
aas
push
stos
jbe
fs
mov
inc
ds
add
repnz
adc
push
lods
pop
cltd
jo
outsl
dec
dec
dec
dec
or
inc
vmovdqu
daa
jae
std
inc
adc
adc
add
and
mov
hlt
mov
sub
shlb
js
cltd
xchg
push
mov
ljmp
sub
fsubs
loope
inc
test
pop
mov
sub
lcall
repz
mov
pop
pop
fldenv
int3
pop
stos
push
push
inc
jmp
dec
inc
in
xor
mov
pop
fnstenv
mov
push
arpl
adc
add
sub
fldcw
test
and
inc
add
shlb
xor
aam
nopl
pop
cmp
sbb
loopne
and
repnz
insb
subl
subb
cmp
ss
xchg
out
jnp
push
or
sbb
and
pusha
in
in
mov
pop
repnz
pop
xchg
imul
popa
sbb
pusha
outsl
sub
jae
std
mov
pop
ljmp
jns
or
dec
lea
cltd
or
insl
cmp
mov
repnz
ss
inc
add
pop
mov
jb
rclb
jle
fnstsw
xor
mov
and
push
push
add
mov
mov
sbbb
pop
fwait
mov
fdiv
iret
inc
outsb
pusha
or
push
cmpsl
jl
ljmp
das
dec
sub
sbb
cmp
or
ss
xchg
ss
inc
mov
mov
daa
aaa
clc
dec
sbb
add
pop
lods
push
adc
xchg
into
adc
mov
das
popf
lods
mov
push
adc
pushl
push
or
and
sbb
loopne
pop
inc
les
jmp
sbb
call
pop
fnstsw
test
mov
cmpsl
and
imul
xorb
fcmovu
mov
movsl
fstl
lea
inc
sbb
adc
sub
jne
cli
ret
andb
jl
cmp
mov
cmp
xorl
sub
jmp
in
je
adc
pop
xchg
in
mov
push
pusha
out
and
hlt
jmp
clc
pop
pop
pop
ss
leave
sbb
das
fcmovbe
add
popa
jmp
imul
or
jo
pop
test
ret
inc
add
and
push
daa
fldl
imul
inc
data16
ret
inc
std
fistl
cwtl
and
mov
shrb
cli
mov
push
sub
mov
pop
xchg
xor
into
test
add
xor
or
fldl
mov
and
mov
xchg
push
xchg
movsb
or
push
add
mov
shll
enter
inc
push
add
and
xchg
or
incl
jecxz
xor
cmp
or
inc
testl
dec
hlt
xor
call
fs
inc
add
stos
fsubl
ss
jo
jmp
mov
xchg
lods
mov
jns
push
mov
sub
arpl
adc
xor
test
pop
push
dec
jo
mov
add
dec
cld
mov
xorb
cmp
cld
xchg
add
pusha
mov
push
sub
cli
push
adc
fdiv
or
lds
pop
mov
cmp
lret
outsl
out
and
jp
pusha
push
loope
or
jne
lock
add
dec
les
sub
sbb
sar
mov
fwait
sub
or
cmpsl
mov
clc
inc
or
xor
dec
mov
les
dec
scas
push
and
jno
mov
mov
xlat
cmp
and
test
mov
ss
xchg
fcmovbe
mov
imul
add
cwtl
and
or
inc
sbb
pusha
mov
mov
sahf
fs
loopne
dec
addr16
jmp
mov
imul
xchg
fsubp
lahf
fisttps
loopne
adc
mov
test
sbbb
in
and
testb
int3
and
fdivrl
pop
inc
outsl
shl
xlat
fnstcw
in
in
lahf
mov
or
cmpsl
push
xor
xor
mov
adc
xchg
xorl
mov
pop
mov
add
iret
in
jne
xchg
cld
and
arpl
out
xchg
mov
mov
adc
subb
add
jmp
push
cmpsl
or
jmp
push
into
add
adc
mov
cli
popa
cld
popf
jne
pop
repnz
scas
and
lcall
mov
and
movsl
shll
push
imul
mov
sub
mov
enter
push
pop
jmp
daa
or
pushf
cwtl
orb
insb
pusha
or
int3
or
inc
mov
or
pusha
push
pop
arpl
jl
loopne
sbb
je
mov
inc
jo
stos
lret
xchg
repnz
inc
int
push
pop
xchg
lods
enter
mov
ffree
push
sbb
mov
jle
mov
push
in
jb
das
or
and
js
mov
sub
inc
movsb
mov
sbb
push
movsb
jae
sbb
fldcw
dec
je
lret
stc
jg
movsb
sbb
mov
inc
shl
mov
mov
adcb
and
jb
cli
ret
add
loopne
scas
mov
loopne
jae
outsb
pusha
inc
fistpl
out
sbb
aaa
aaa
test
div
jae
out
jae
popa
jne
jbe
or
lock
mov
pop
out
xchg
xchg
bound
inc
jle
push
repz
add
lret
add
loopne
inc
decl
inc
mov
movsb
and
sub
push
xor
cmpb
adc
vmovsd
rcr
jbe
arpl
cmp
push
mov
in
mov
sbb
loopne
sahf
stos
fcmovu
aas
xchg
sbb
jo
cmp
jo
into
aaa
mov
sbbl
mov
add
pusha
shll
lahf
jno
aam
je
clc
cmc
repz
mov
data16
xchg
imul
test
ss
sbb
add
nop
clc
andb
pusha
aaa
sub
out
xchg
fs
mov
sbb
inc
pop
sbb
mov
sbb
pop
sarb
test
in
sub
fadds
idiv
push
pop
pop
aad
lock
and
inc
sbb
loop
xchg
lods
and
or
inc
mov
xor
add
adc
sbb
add
cmp
push
cmp
mov
loopne
pop
mov
loop
pop
lcall
lods
xor
sbb
mov
stc
pop
ss
insl
push
or
sbb
or
gs
mov
mov
sbb
mov
push
jg
mov
das
and
jl
or
stos
or
cmovs
lahf
ja
fs
dec
callw
xchg
push
cmp
mov
mov
push
outsl
jbe
and
cmp
xchg
jle
orb
push
fwait
cwtl
mov
popf
lahf
adc
push
push
xor
xchg
hlt
mov
mov
fcomps
mov
sub
lret
js
imul
or
repnz
ficoms
iret
jns
mov
stc
pop
xorl
fcmovu
xchg
insb
add
or
test
jecxz
imul
fisttpll
sbbb
pop
push
push
in
fisubrs
mov
sbb
imul
arpl
fadds
jo
jno
sub
popa
cmp
jae
mov
inc
inc
test
insb
jmp
sub
push
xchg
dec
stc
xchg
xchg
and
and
jp
push
lahf
dec
adc
repz
lock
mov
rclb
ret
jae
cs
pusha
add
lock
sub
mov
ret
push
jge
aad
les
fisttpl
add
fimuls
mov
sbb
or
dec
ja
or
or
and
mov
stos
aam
jge
mov
jne
je
loope
xchg
dec
mov
loopne
pop
or
dec
mov
pop
outsb
jge
sub
mov
and
pop
and
xchg
fs
mov
pop
lds
xchg
xchg
loopne
jno
mov
mov
ljmp
xchg
and
inc
adc
dec
add
enter
xchg
aad
lods
pusha
and
mov
mov
inc
inc
lcall
pop
jns
mov
xchg
icebp
and
shll
dec
cmp
in
inc
cmp
and
ficoms
xchg
mov
cmpl
movsl
adc
sbb
and
fsubl
mov
ljmp
imul
dec
aad
enter
adc
hlt
stc
hlt
movsb
push
ds
jns
mov
pop
sub
sbbb
cmp
sbb
pop
stos
aad
lds
or
cli
cmp
dec
out
xchg
lods
pop
add
mov
jmp
arpl
pop
iret
cmpps
jl
pusha
aaa
jmp
push
sbb
std
push
divl
push
mov
mov
orl
roll
and
xorb
dec
ja
inc
lods
pop
mov
lods
mov
lock
sbb
pop
xorb
stc
mov
lock
ljmp
pop
sti
cltd
fldcw
repnz
pusha
bound
rolb
and
inc
pop
and
push
mov
pop
scas
sahf
arpl
push
dec
mov
outsl
pushf
push
and
scas
xchg
and
pusha
mov
sbb
cmpb
shll
cmp
in
lock
xchg
dec
jp
jns
sbb
rcr
add
and
pop
test
cmp
insb
xchg
cmp
andb
mov
adc
imul
pop
mov
mov
movb
loopne
and
stc
mov
sbb
mov
or
rol
or
pop
xor
adc
in
pop
jbe
arpl
addr16
shlb
test
cmp
shlb
loope
or
subb
mov
push
shl
push
loop
lock
aam
xor
scas
loopne
cmp
repnz
shrb
adc
pusha
mov
fidivl
sahf
dec
mov
iret
or
rolb
and
or
and
lcall
cli
jae
jl
mov
xor
in
dec
rcrb
cwtl
pop
loopne
push
and
fdivs
or
mov
and
fsub
lahf
mov
push
leave
jbe
and
lods
sbb
ficoms
pusha
movsb
in
cmpsl
xor
jg
sbb
es
dec
pop
jb
imul
inc
cmpsb
fidivrs
push
xchg
and
jle
mov
aam
mov
xchg
loope
cwtl
add
das
lahf
or
mov
inc
test
mov
mov
aas
push
jg
dec
test
divb
xor
push
mov
cmp
xor
push
mov
sbb
cltd
inc
or
sub
adc
jne
inc
enter
mov
aam
push
pop
sub
cmc
adc
mov
test
jno
pop
push
xchg
in
and
test
into
inc
stos
pop
lods
sub
int
or
das
mov
js
add
mov
repz
lea
cld
pusha
lods
jp
and
add
xchg
out
adc
inc
mov
cwtl
loopne
out
xor
jbe
sbbl
mov
mov
out
or
rclb
enter
or
mov
cmp
cwtl
mov
sbb
xchg
in
push
sub
test
into
fwait
in
push
fidivrl
push
jne
aad
or
mov
cmp
mov
pusha
mov
push
call
dec
fdiv
out
mov
bound
cwtl
loopne
sahf
adc
xorb
jge
cwtl
and
repnz
mov
shrl
sub
lret
xor
sarl
cwtl
sbb
daa
mov
outsb
ficoms
mov
sbbl
sbb
pusha
repz
sub
aam
add
or
cwtl
insb
and
mov
mov
pop
mov
idivb
push
loope
outsl
loopne
mov
imul
in
push
repnz
aad
push
adc
ds
fiaddl
mov
jmp
aam
filds
fidivs
lahf
mov
xchg
mov
jb
pop
push
mov
push
testb
push
jge
popa
add
repz
mov
movsbl
jp
or
subb
lret
mov
mov
mov
xchg
mov
jl
push
xchg
test
push
insl
insl
pusha
jae
xchg
sar
lods
pop
push
je
bound
push
mov
xchg
test
jb
and
jp
lret
fs
dec
leave
fistpl
rclb
add
pusha
stos
and
cmp
sbbl
pop
loopne
inc
mov
popl
mov
or
sbb
inc
or
jbe
xor
fisttpll
jb
pop
cltd
push
div
push
mov
fsubl
cli
std
lret
and
adcb
loope
sub
ss
test
mov
jge
lret
daa
push
mov
gs
and
adc
mov
jo
mov
cld
jecxz
cltd
mov
mov
and
pusha
loop
shll
push
mov
or
outsb
jp
lea
adcl
push
adc
mov
and
movsb
push
inc
cmpsl
sub
lds
scas
sarl
insb
add
dec
icebp
lods
push
jl
sbb
ljmp
nop
aam
push
sahf
and
inc
loope
fadds
sbb
push
aaa
out
xchg
mov
xchg
addb
add
mov
jmp
mov
insb
imul
scas
inc
popa
sar
dec
call
fiaddl
mov
mov
xor
aaa
clc
mov
into
dec
leave
daa
add
in
hlt
incl
repz
ret
cld
mov
or
in
orb
shlb
out
outsl
repz
add
ret
sub
mov
jne
fisubl
out
in
push
stos
adc
jl
in
dec
push
shrl
add
mov
paddusw
in
mov
inc
xor
test
add
xorb
sub
dec
jl
mov
ss
dec
out
jns
bound
or
adcb
gs
jnp
jne
inc
adc
mov
imul
stos
or
stos
add
add
dec
jb
out
xor
bound
data16
sbb
cld
loopne
mov
fsubs
xchg
lock
add
lock
iret
xchg
sub
scas
push
andb
jmp
push
dec
repnz
lock
mov
in
test
mov
sbbl
cmp
add
push
add
push
popa
xchg
dec
ds
pop
add
add
cmp
cmpsl
je
adc
pop
iret
sbb
or
pusha
add
pusha
call
loopne
into
cmpsb
sti
mov
mov
sbb
mov
bound
jns
cmp
sbb
and
mov
loope
push
inc
push
loop
sub
adc
nop
js
fs
inc
test
shll
std
pop
scas
dec
adc
xchg
into
pop
decb
inc
bound
push
ss
jmp
jg
or
icebp
xor
out
icebp
lret
xor
cmp
add
push
mov
jg
and
mov
add
mov
and
lock
addr16
or
push
mov
int
adc
mov
in
mov
rcll
imul
addl
loopne
iret
int3
out
mov
inc
jecxz
inc
pop
inc
out
pop
aaa
test
sub
faddl
faddl
dec
sbbl
out
pop
imul
push
mov
aam
nop
inc
inc
mov
orb
inc
mov
mov
cmp
repz
xor
addr16
pop
and
test
hlt
pusha
ss
notb
outsl
jecxz
xchg
test
xlat
ljmp
ja
push
cltd
cld
mov
rcrb
mov
in
outsb
int
ds
jecxz
enter
xchg
or
mov
stc
xchg
stc
lcall
lahf
dec
mov
ds
test
dec
push
dec
add
and
mov
and
shr
fadd
enter
lods
inc
test
pop
adc
hlt
test
mov
dec
mov
rcll
lahf
outsb
mov
adcb
jl
les
stc
popa
and
call
aaa
xchg
out
hlt
and
pop
int
and
fmull
inc
in
daa
leave
mov
rorl
js
or
das
or
sbb
lret
addl
mov
aam
add
loopne
adc
add
inc
enter
push
mov
jbe
sub
mov
cmp
pop
cmp
int
insl
jle
cmp
repnz
push
in
leave
insl
pop
cmpsl
js
xchg
inc
hlt
pop
lcall
and
adc
jbe
into
adc
fwait
xchg
xor
pushf
fsubs
ds
push
call
pop
fwait
dec
xor
and
pop
mov
or
stos
xchg
xchg
xor
mov
stos
int
xchg
scas
cmp
or
jno
cmp
mov
and
inc
pop
dec
push
xlat
rorl
outsb
xor
dec
das
pop
xchg
jns
add
cmp
xor
fsubr
cld
adc
negb
aaa
fwait
gs
cld
jg
loope
cwtl
loopne
movsl
xor
popf
xorl
mov
fs
mov
aaa
and
push
out
xchg
sub
push
arpl
inc
add
inc
dec
mov
or
inc
int3
js
mov
pop
dec
sbb
dec
cmp
popf
dec
push
jo
xlat
xchg
nop
and
add
cmpsb
nop
jl
cmc
mov
inc
movsb
sub
pop
scas
cmp
movsb
lret
jecxz
push
xlat
sarl
jle
imul
inc
and
pop
pusha
inc
cmpb
pop
lods
aad
pop
push
lods
shl
lahf
sub
xchg
rol
vcvtsi2sdl
xchg
mov
add
inc
out
and
ret
xor
addr16
les
mov
pop
data16
push
fmulp
mov
rol
scas
sub
popa
push
fildl
sbbb
xor
push
out
jmp
add
cmp
pusha
inc
inc
hlt
outsl
push
mov
int3
and
jbe
cmp
inc
in
imul
jnp
dec
cmp
push
les
aam
int
ret
jno
pop
sahf
fdivrs
mov
push
mov
mov
out
enter
cwtl
movsb
pusha
mov
pusha
in
ret
fdivp
jnp
mov
mov
sub
stos
sti
or
inc
mov
sahf
cmpsb
mov
repnz
xor
sbb
pop
add
dec
insl
lds
ret
cmpsl
push
mov
or
divl
xchg
ficoml
loopne
lods
pop
xor
dec
popa
mov
pop
inc
add
cld
repnz
add
xchg
xorl
jae
insl
imul
dec
fs
call
jnp
xor
lret
aaa
pop
cmpb
cwtl
cld
and
into
fdivl
adc
in
sub
dec
push
int3
lds
sub
pusha
pusha
or
pusha
scas
jmp
mov
add
adc
jbe
stc
pop
add
jae
add
rcrl
push
shl
jg
ss
fxch
mov
dec
rolb
out
sub
pop
orb
mov
xchg
or
pusha
or
push
adc
mov
mull
rorb
and
sbb
loopne
and
sbbl
dec
hlt
stc
fsubrl
ficoml
push
push
pop
pop
dec
cmpsb
imul
push
mov
xchg
mov
jne
in
lret
lds
insb
mov
sar
and
mov
dec
jle
bound
scas
ss
push
pop
cmc
mov
and
mov
stos
jge
out
faddl
lcall
call
addb
adc
xor
sbb
test
outsl
mov
sarl
sub
sub
push
mov
and
test
rclb
cltd
push
xchg
mov
xorl
out
fistpll
cmp
popf
jo
jmp
iret
scas
or
or
or
and
imul
mov
insb
es
dec
push
xor
lret
dec
sub
pop
push
ss
xchg
outsl
es
movsb
inc
aas
jae
into
in
jo
call
out
jae
mov
and
pop
fcomps
loope
int
xchg
pusha
push
ljmp
mov
lcall
andl
xchg
add
inc
sub
jge
pop
mov
pop
jb
inc
mov
loopne
sbb
loopne
push
sub
or
loop
test
es
pop
stc
inc
pop
fnstcw
imull
sbb
or
repnz
push
push
sbb
int3
pop
push
inc
in
jp
and
or
scas
ljmp
mov
ljmp
push
adc
and
sahf
icebp
fwait
fwait
push
xchg
ret
imul
add
push
add
scas
not
jmp
call
les
xor
cmp
imul
shlb
hlt
pop
push
fnstsw
hlt
and
lods
aaa
in
xorb
mov
das
movsl
inc
adc
push
insl
sbb
stos
cmp
rcrb
mov
insl
out
test
cltd
insb
insb
mov
dec
sti
mov
sahf
and
xor
dec
inc
jmp
pushf
add
sub
cmp
pop
test
mov
push
andb
nop
mov
ja
fcoms
loopne
jo
popa
mov
push
les
and
push
mov
jp
shl
out
jnp
mov
rol
insl
pop
jmp
loope
cmpsl
push
adc
inc
jno
fxch
pusha
ror
or
dec
mov
out
in
dec
mov
ret
clc
out
andb
cld
mov
mov
jbe
lret
outsl
xchg
xor
add
loopne
stos
xchg
movsl
rcl
mov
add
adc
lahf
outsl
jnp
inc
jl
pop
mov
in
xchg
enter
pop
das
clc
mov
loopne
daa
push
jnp
fs
pop
fcoml
fimull
mov
inc
idivl
bound
cmp
daa
test
jno
xchg
jb
lods
mull
ds
lret
ret
jp
push
pusha
push
jb
addr16
scas
loopne
ja
push
add
fwait
mov
mov
bound
cwtl
lods
loopne
data16
movsl
mov
cld
repz
mov
mov
popf
rclb
sarb
or
xor
inc
icebp
mov
out
icebp
hlt
lea
in
xor
cmpsb
fwait
aaa
push
hlt
or
shlb
fwait
cmp
lahf
rcl
jo
mov
leave
mov
and
stc
add
mov
xchg
and
or
imul
dec
ret
test
mov
mov
loopne
jge
fsubl
shr
jb
pop
xchg
ret
cmpsb
roll
hlt
fisttps
pop
xor
jns
dec
push
std
out
in
out
mov
lock
sbb
testb
jle
aam
inc
fsubr
in
and
push
push
pop
aaa
jp
vpsraw
icebp
pop
aad
pop
jbe
adc
in
push
inc
stc
sbb
cltd
xchg
in
inc
jg
or
orl
fsubs
roll
lret
add
mov
cmp
dec
mov
push
jmp
in
outsl
and
rcll
add
nop
rol
sbb
push
push
test
dec
dec
inc
push
ja
xor
mov
fnclex
std
mov
pop
sbb
mov
push
xlat
sub
push
fldt
xchg
cmp
cld
inc
mov
pushf
sbb
clc
outsl
in
mov
icebp
int
aam
hlt
pusha
mov
bound
jbe
aas
mov
push
int
fs
mov
cmpsl
fcomps
or
and
pop
aaa
mov
dec
xor
mov
push
pop
jb
ds
sahf
xchg
iret
pop
pop
nop
in
mov
sub
push
or
loopne
jne
ret
enter
loop
add
cmp
mov
sti
insb
xor
xchg
mov
scas
pop
jge
xor
out
inc
testb
fstpl
add
test
pusha
bound
jg
loopne
loope
xlat
inc
out
xlat
add
add
rorb
out
out
add
rcpps
add
rcrb
xor
outsl
mov
add
and
lods
mov
dec
fdivrs
sub
mov
push
xchg
fmuls
xchg
and
mov
and
or
outsb
sub
shrb
cmp
fdiv
cmp
mov
mov
jmp
sbb
or
jo
mov
add
add
loope
inc
gs
inc
xchg
decl
ret
cmp
adc
jb
add
lods
jmp
sbb
sar
dec
test
lock
push
jmp
xor
add
subb
aad
aam
bndstx
stos
push
push
inc
xchg
mov
xlat
stos
cmp
inc
lods
mov
es
add
push
dec
mov
in
fwait
adc
mov
sub
pushw
add
adcb
adc
add
add
jle
iret
jmp
sub
dec
lods
incl
cmp
jne
ret
mov
std
lcall
int
adc
cmp
xor
inc
outsb
or
add
das
and
out
bound
scas
cmp
imul
dec
cmpsl
push
and
jno
xchg
fldl
loop
xchg
adc
push
mov
shl
push
iret
sahf
aas
lods
iret
xor
out
mov
movsl
jmp
and
imul
jecxz
xor
cli
sahf
aas
mov
mov
bound
mov
or
outsl
mov
pusha
and
adc
adc
pusha
test
mov
int3
or
xchg
or
push
ss
or
fs
pop
mov
cwtl
pusha
cmp
shrb
push
dec
fistl
mov
fmul
lds
jno
jb
push
aas
or
and
sbb
dec
mov
add
out
and
test
nop
mov
rcll
and
mov
xor
jo
lock
jb
mov
enter
iret
incb
mov
loopne
repz
sbb
jo
lds
cmpsb
or
pusha
mov
xorb
adc
scas
leave
pop
mov
test
pusha
insl
xchg
lods
outsl
jns
dec
jb
cmp
jb
arpl
iret
shll
js
daa
jg
jo
scas
sahf
xlat
movsb
enter
cmp
push
loope
dec
mov
jp
mov
pusha
int3
ja
fstpl
push
xchg
adc
dec
out
and
push
or
mov
and
xor
xor
cmp
flds
js
cmp
adc
jp
dec
or
imul
rcrb
aas
mov
rol
xchg
jnp
hlt
jl
fisttpl
xchg
jne
sbb
mov
cwtl
inc
cmp
cmpxchg
push
fwait
sub
daa
jnp
scas
sub
mov
sub
cmp
sti
je
mov
clc
add
jns
cmpsl
jnp
xchg
movsl
xor
cs
pop
mov
lock
shl
mov
int3
inc
jno
mov
ljmp
mov
cmc
adc
out
mov
inc
insl
pushf
rclb
cmp
enter
mov
ret
out
xchg
dec
addb
add
cs
pop
mulb
cmpsb
lret
sbb
fs
cwtl
fsubl
scas
leave
incl
and
xlat
nop
lods
mov
push
sbb
nop
mov
cltd
test
lret
mulb
cmpsl
fnsave
adc
sahf
xchg
sub
call
push
push
arpl
sbb
inc
ds
pop
imul
and
lea
pop
jnp
cmp
addr16
gs
mov
sbb
rolb
gs
pop
push
pop
mov
outsb
jne
insb
lods
inc
lret
mov
cmp
add
movsb
lds
and
stc
sub
adc
rolb
aam
aad
xor
stos
mov
aas
or
orb
pop
xor
pop
sub
mov
sub
popa
jns
aaa
ret
push
outsb
jae
pop
out
and
xchg
frndint
push
outsl
out
in
stc
mov
or
inc
pop
fstpl
ljmp
sbb
subb
mov
mov
in
repz
add
lahf
icebp
or
push
cmp
sub
jns
ds
movsl
ss
loope
xchg
ficompl
cmp
dec
cmp
jno
push
repz
xchg
add
ret
jnp
inc
test
and
fsubl
adc
push
pop
or
scas
cmp
inc
test
nop
mov
testb
jmp
xchg
fbstp
lods
loopne
or
loopne
int3
mov
clc
lret
gs
ret
add
iret
xor
inc
ja
leave
jb
mov
cltd
fdivrl
lock
inc
cmpl
lcall
or
sarb
daa
scas
clc
fisubrs
add
jbe
aaa
add
mov
test
mov
gs
divl
mov
mov
and
push
test
scas
xchg
push
jmp
mov
icebp
mov
std
stc
int
and
xchg
push
gs
push
rcrb
loope
mov
clc
in
adc
jmp
in
popf
cmc
lret
pop
xchg
xorb
jecxz
test
inc
cmpsb
add
aad
icebp
mov
xor
sub
fnstsw
pop
js
outsb
xlat
mov
stos
sbb
jne
inc
push
pop
add
popf
xchg
push
jne
pop
cmp
shrb
mov
mov
popl
jnp
or
xor
cltd
hlt
xchg
sbb
lea
repz
int
mov
and
aad
je
js
aaa
stos
adc
orb
and
xchg
sahf
and
sub
push
mov
inc
push
cs
or
add
pusha
mov
push
jne
sbb
hlt
pop
xor
add
pusha
and
popa
xchg
test
sub
ret
mov
cltd
inc
inc
fisubrl
imul
loopne
xchg
cmp
inc
add
arpl
popf
fidivl
aaa
pop
jp
inc
mov
pop
sbb
mov
xor
test
add
mov
sahf
pop
jg
in
sahf
add
scas
aam
lods
sub
rolb
fnsave
insl
sub
fmuls
or
and
movl
data16
push
or
xor
push
loope
and
notb
push
mov
js
push
mov
lea
int3
loopne
fdivrs
dec
cmp
jmp
dec
and
jle
jnp
mov
jge
loope
arpl
pop
and
stos
test
dec
rorb
and
sub
pusha
repz
xchg
in
jp
push
aad
jo
jmp
std
js
mov
xchg
sbb
dec
inc
out
fs
int3
pusha
lods
mov
dec
xchg
pmaxsw
bound
lods
sub
adc
inc
mov
mov
imull
insb
pop
test
jo
push
push
sahf
adc
inc
jb
test
and
test
rcrl
out
loope
orb
shlb
mov
ss
ffreep
popf
movsl
dec
mov
aaa
jg
xor
inc
mov
rcrb
jns
in
push
icebp
add
cli
insb
repz
sbb
sbb
mov
adc
jno
cmp
inc
adc
nop
inc
rolb
mov
pop
aaa
adc
dec
mov
lock
jg
cmp
dec
test
dec
adc
nop
pop
andb
mov
push
out
bound
mov
dec
les
push
mov
mov
mov
rcll
and
and
test
es
inc
ss
test
sub
lret
mov
mov
push
stc
mov
xor
aaa
adc
add
and
test
roll
xchg
sbb
sarl
js
aam
mov
mov
test
inc
jb
fistl
pop
dec
shll
mov
dec
insb
xor
and
sbb
out
mov
pusha
es
pop
or
rcll
lock
lock
je
repz
es
lcall
add
mov
adc
fiadds
pusha
mov
loop
mov
rol
xorb
in
and
sbb
lods
ss
pusha
pop
and
scas
pop
cmp
shll
mov
rolb
inc
movsb
pop
mov
sub
push
jo
aas
push
mov
out
mov
addr16
jmp
xor
pop
lahf
hlt
dec
adc
push
or
loop
int3
ja
add
mov
add
mov
daa
inc
inc
imul
cmp
ljmp
je
cmp
lea
js
mov
mov
push
sub
jge
and
and
xchg
xchg
lock
std
xchg
pop
lret
lahf
mov
mov
xchg
mov
rcl
fidivl
inc
insl
mov
mov
inc
pop
jmp
leave
or
icebp
loope
dec
sti
and
inc
push
mov
loop
loopne
mov
sub
mov
sbb
pop
push
in
jmp
xchg
pop
ss
rcrb
rol
dec
or
xor
pop
or
pusha
js
aaa
xchg
ret
inc
mov
prefetch
xor
addb
test
enter
push
test
and
xor
xor
xchg
mov
jnp
dec
dec
adc
ja
sbb
stos
mov
leave
icebp
je
loope
pop
dec
rcrb
inc
add
andb
dec
pop
out
xor
jge
fucomip
mov
addr16
mov
xor
js
es
inc
add
addb
jae
push
lds
dec
or
xchg
mov
js
xchg
jl
inc
mov
or
fs
cli
pusha
xlat
push
or
sar
or
and
lods
jp
adc
insl
pop
ret
mov
xor
cmp
aaa
lcall
pushf
xor
adc
and
jecxz
mov
test
dec
cmp
scas
xchg
xor
mov
orb
shr
out
ret
imul
mov
jo
xchg
int3
pusha
clc
cltd
loope
std
xchg
mov
lods
jbe
xor
sub
fwait
push
sbb
lahf
jb
lods
add
add
lea
pop
jbe
push
push
inc
mov
adc
mov
add
xchg
or
cmpb
push
xchg
push
jnp
pop
adc
repz
mov
or
cmc
pop
in
sti
xchg
outsb
hlt
push
pushw
rorb
ficoml
loopne
mov
push
int3
imul
out
mov
fs
loopne
rcr
lcall
fs
ret
loope
jmp
out
ja
fnstenv
popf
mov
sbb
and
xor
nop
dec
mov
cmp
xchg
int3
lods
in
xorb
cwtl
js
push
lds
push
je
xchg
faddl
mov
divl
pop
movsb
and
push
ss
test
stos
jae
mov
stos
cmpsb
push
int
addb
mov
adc
dec
rol
cwtl
loopne
movsl
hlt
mov
lcall
arpl
sbb
es
ja
mov
js
mov
fcoml
jb
inc
xor
jl
mov
mov
and
icebp
mov
inc
je
ret
mov
inc
mov
pusha
mov
nop
rclb
jl
jecxz
arpl
je
not
in
fidivrs
scas
movsb
icebp
dec
fistl
movsb
and
rolb
in
test
fwait
cs
lret
xor
cmp
scas
xchg
cmp
movsb
dec
dec
push
subb
sbb
mov
fisubrs
daa
rolb
scas
icebp
roll
xchg
mov
fs
mov
in
mov
jmp
dec
inc
push
xchg
in
sbb
push
mov
push
or
add
popf
mov
pop
sbb
movsl
jmp
xor
repz
xchg
test
inc
sub
push
inc
je
fcomip
sbb
pusha
fisttps
cmp
mov
xchg
aas
push
cltd
push
dec
jne
mov
or
adc
loopew
cmpl
fadds
mov
xorb
daa
or
and
mov
cmpsb
pusha
xor
ret
mulb
shlb
adc
adcb
test
insb
push
lahf
sub
rcll
mov
and
mov
loopne
cltd
pushf
mov
jmp
pop
jp
mov
jecxz
pop
dec
mov
nop
and
stos
insl
pop
adc
mov
add
pop
jl
test
popl
loopne
mov
call
or
mov
mov
clc
pop
jne
sub
adc
xlat
out
sub
jmp
pop
and
inc
imul
clc
aaa
insl
rcrl
inc
gs
inc
leave
xor
mul
mov
push
cmp
pusha
push
aam
pop
add
inc
push
mov
adc
js
xor
add
inc
test
add
cltd
jle
test
push
jp
int
dec
lds
out
inc
out
stos
xchg
xchg
xor
scas
inc
lret
xorb
xchg
inc
adc
popa
fdivrs
inc
outsb
push
sub
inc
xor
inc
mov
sbb
pop
xchg
mov
leave
shll
sub
sahf
imul
in
lret
mov
push
scas
lret
arpl
pop
lret
mov
pop
sub
hlt
cmp
int
movsl
mov
lea
mov
fidivrs
icebp
pop
mov
jp
je
xor
or
inc
sub
sbb
mov
and
loopne
and
js
mov
add
pushf
sbb
aad
mov
push
scas
in
insl
push
push
sarb
adc
pusha
jbe
nop
shlb
pop
xchg
adc
popf
popa
xor
and
inc
adc
fsubs
push
aas
mov
lret
jo
push
inc
adc
mov
mov
inc
adcl
inc
push
push
lret
push
das
xor
int
es
cmp
stc
in
ljmp
mov
in
pushl
push
test
rcrb
popa
or
cli
adc
int3
xchg
pushf
mov
cmp
pop
sub
sub
iret
lock
jb
mov
fldl
outsl
fidivrl
xchg
movsb
add
or
mov
cld
dec
pop
xchg
push
nop
xchg
loopne
movsl
pop
push
pop
je
sti
clc
test
imul
insb
sbbb
stos
and
je
xchg
mov
inc
jns
fnstcw
sbbb
mov
mov
and
sbb
loopne
sub
xorl
jno
inc
push
sahf
ret
ljmp
inc
aaa
sahf
inc
scas
daa
mov
fldt
or
adc
and
dec
dec
mov
insl
jnp
sbb
add
sti
cmp
add
test
fcmovnb
std
jbe
imul
gs
lahf
mov
test
mov
pop
push
mov
push
mov
add
sar
fs
aas
or
mov
imul
push
inc
adc
fimull
shll
inc
mull
push
out
xchg
lcall
xor
lods
mov
mov
xchg
jp,pt
shll
jle
test
test
jb
lea
scas
inc
add
inc
fwait
dec
inc
bound
mov
insl
push
stos
inc
aad
pop
sub
out
test
xchg
jae
inc
mull
mov
shlb
pop
loopne
xor
sbb
outsb
xchg
ljmp
outsl
stos
stc
hlt
xchg
sbb
mov
dec
xor
daa
pop
and
outsb
clc
jmp
dec
stos
sbb
sahf
push
add
or
jno
leave
loopne
test
sbb
in
mov
loopne
sub
and
and
and
and
pop
hlt
mov
inc
inc
negl
loopne
iret
cmpsb
insl
lds
ret
mov
shrb
lods
sbb
jno
pop
sbb
outsl
daa
mov
push
dec
mov
mov
in
mov
mov
loopne
call
xchg
cmpsb
mov
cmpsb
rcrl
mov
mul
sbb
cmpb
cmp
dec
add
inc
and
xor
add
and
je
adc
dec
xchg
jae
daa
push
aas
sub
mov
int
xchg
push
cmp
and
and
mov
arpl
int3
adcb
mov
fimull
adc
and
lret
stc
loope
rolb
xor
mov
ja
cmp
cmpsl
dec
sbb
mov
lret
fwait
dec
inc
pusha
mov
jmp
mov
pusha
into
in
out
sbbl
je
lret
mov
adcb
mov
mov
push
pop
int
fwait
mov
clc
leave
jns
call
dec
sub
outsl
xor
jnp
ljmp
movsb
xchg
fdivrl
and
xchg
imul
and
and
jne
daa
xchg
movsl
ffree
jb
test
js
subb
cmp
adc
stos
cltd
mov
pop
repz
cld
push
push
imul
add
rolb
test
insl
daa
hlt
inc
inc
jl
fimuls
ret
add
inc
popa
or
xchg
cltd
sbb
and
xor
xor
or
and
test
xchg
cmp
sub
mov
pusha
insl
and
sub
rol
mov
int
adc
jno
out
mov
dec
popa
mov
sub
pushf
js
pop
xchg
adc
shlb
pop
jge
add
sbb
cmp
mov
enter
jg
clc
aam
xor
addr16
jns
sub
rolb
ret
cmc
mov
clc
ret
adc
sub
xchg
lods
or
xchg
cmp
push
mov
psrld
loop
scas
push
pop
pop
sbb
icebp
inc
leave
xchg
add
inc
in
xor
mov
test
lods
mov
sti
stos
outsl
jecxz
in
idivb
xor
fmuls
std
sub
andb
flds
fadd
dec
and
ljmp
ror
or
sbbl
and
xorl
not
or
mov
test
add
in
movsb
rol
std
testl
ja
cmp
ss
dec
dec
fildll
repz
or
push
sbb
rclb
in
stc
lahf
lock
loopne
push
inc
jmp
adc
cli
cld
push
lds
jo
faddl
push
jg
mov
jno
jmp
shrl
testl
inc
jge
jg
rol
clc
movsb
daa
hlt
and
test
xchg
cmpsb
enter
les
fsubl
cwtl
lock
dec
mov
and
jne
and
fxch
pop
or
arpl
pusha
mov
rolb
jmp
gs
mov
jne
mov
jl
push
stos
lret
xchg
push
mov
pop
hlt
insl
jmp
xchg
stos
jns
ss
pop
stos
scas
jno
rol
or
mov
add
fs
mov
push
aam
addr16
pop
fs
dec
xchg
rep
inc
addr16
sub
out
fucomp
ror
push
cltd
adc
bound
adc
xlat
addb
jbe
lds
jne
or
mov
fisubl
ret
or
int
pushf
shrb
xor
loopne
sub
or
xchg
call
cltd
nop
lock
outsb
xchg
scas
scas
sub
fisubl
and
sbb
fdivr
aad
out
movsl
clc
adc
add
shl
mov
mov
lea
ss
dec
sbb
mov
ss
push
push
fwait
cmpsl
and
jbe
adc
dec
test
rcr
out
in
push
jnp
or
daa
leave
dec
or
push
sahf
push
sub
dec
dec
jae
xchg
insl
pop
call
pop
jns
mov
cmpsb
mov
xlat
mov
hlt
cmp
dec
mov
push
xor
cli
push
xchg
xlat
add
mov
mov
rorl
cmp
cwtl
mov
jo
adc
lret
imul
dec
and
shl
sub
repz
lahf
andl
mov
mov
mov
pushf
lods
loopne
sub
add
pusha
sbb
xchg
loopne
dec
mov
and
fs
push
popf
in
outsb
and
out
ds
adc
cwtl
dec
inc
cmp
sbb
add
shl
out
xchg
mov
icebp
mov
jg
push
test
mov
iret
in
add
fsubrl
and
lds
aam
push
push
ljmp
mov
sub
jns
sbb
loope
pop
popa
cltd
cmp
jecxz
jnp
sbb
sbb
data16
cmp
sbb
and
mov
lea
or
sbb
js
adc
pop
dec
jne
dec
push
cltd
les
jle
cmp
stc
xor
sbb
add
inc
cmp
pop
mov
les
test
and
add
jne
addr16
out
lea
mov
sbb
in
and
add
mov
add
inc
push
ds
mov
negl
mov
movsl
mov
sub
aas
in
in
inc
movsb
ds
and
push
jp
stos
arpl
mov
mov
or
jp
fimuls
pop
sahf
cmp
mov
aaa
jnp
xchg
mov
inc
xor
jbe
and
mov
jg
sbb
adc
inc
adc
das
sub
or
and
outsl
data16
jbe
out
loopne
gs
inc
rcrl
mov
lods
fwait
or
pusha
sbb
adc
mov
sub
les
push
push
sub
movsl
lret
inc
jle
push
fmuls
cs
or
mov
push
xchg
mov
mov
adc
and
xchg
sub
cmpsb
incb
jno
fidivrs
addr16
lret
adc
mov
mov
inc
fiaddl
addr16
enter
mov
cltd
pop
add
scas
sbb
sub
fwait
xor
movsb
dec
das
adc
sbb
xchg
mov
and
xchg
imul
repnz
in
nop
adc
pushf
rol
cs
jg
pmuludq
rol
push
mov
clc
rcr
jmp
sbb
add
xlat
out
push
sub
push
popf
sub
jne
ficoml
sbb
add
mov
fwait
pusha
jmp
lret
ss
pushf
jl
cwtl
call
popa
iret
sub
inc
divb
rcrl
rclb
out
or
push
out
into
pop
fcmovbe
int3
jge
inc
mov
push
lahf
dec
jl
xchg
push
add
xchg
and
or
hlt
sti
adc
or
lds
pop
sarb
je
cwtl
test
pop
mov
cmp
sub
cmp
out
sub
stos
xor
or
popa
dec
cmp
jnp
xor
and
push
sub
popa
ja
mov
push
popf
sbb
inc
adc
inc
and
cmc
fdiv
cmc
pop
loop
xchg
int3
and
loopne
mov
or
or
dec
xor
ds
das
xor
repz
call
cmp
mov
stc
sbb
push
pop
pop
mov
xor
mov
inc
gs
cmpsl
arpl
pop
div
out
jno
add
loopne
jecxz
bnd
xchg
orl
push
test
add
mov
ror
in
jno
push
sahf
and
movsl
mov
sbb
pusha
push
mov
rcrl
sub
mov
or
loop
mov
adc
aad
sub
or
test
or
fisubrl
imul
xor
jle
shlb
orb
mov
pop
add
sti
jb
es
adc
pushf
shlb
sahf
rcll
dec
fnstsw
subl
xor
add
add
popa
dec
cli
push
sbb
jmp
pushf
lock
stos
push
lcall
mov
ss
jge
jg
ds
insb
incb
mov
and
test
push
repnz
fisttpl
decb
jge
fidivl
pop
divl
fidivrl
dec
push
mov
pop
or
fisttpll
movsl
sub
in
in
dec
dec
pop
xchg
test
sbbb
push
test
sti
rol
and
jl
pushw
aaa
xchg
test
push
aad
push
pop
test
cmp
imul
sti
mov
call
mov
pop
in
or
mov
pop
movsl
pusha
bound
sbb
push
dec
sub
xchg
je
aad
test
mov
imul
dec
push
cmp
mov
sti
lret
xor
add
adcb
aas
or
push
in
stc
out
andb
push
sub
ret
add
insb
cmp
pusha
dec
inc
dec
sub
adc
and
fsub
mov
pushl
xor
rorb
subb
clc
fdiv
emms
or
cli
add
loopne
ret
roll
pusha
imul
pusha
shrb
mov
push
add
sbb
rcrl
int3
jae
pushf
aam
jbe
mov
leave
xor
push
sarb
sub
sbb
add
je
xchg
or
lods
sbb
push
repnz
pushf
mov
icebp
jo
inc
add
xor
movsb
fisttps
xchg
out
add
lcall
xchg
add
cmp
fcomps
pop
jb
add
push
sbb
and
ret
int
test
and
and
rol
aam
push
in
sub
mov
nop
adc
or
sti
mov
jg
sub
pop
inc
xchg
dec
stos
cmc
arpl
movsb
stos
popa
jno
push
fstps
out
bswap
dec
int3
jecxz
icebp
adc
ret
ret
pop
decl
cli
jo
adc
mov
cmp
pop
dec
lret
sti
mov
aad
push
jmp
xlat
pusha
scas
sarb
mov
inc
or
cmp
ret
jb
jb
add
call
loopne
call
mov
or
andb
mov
in
fdivr
lods
mov
jnp
cmp
add
inc
xchg
sbb
jg
nop
and
sbbl
jo
loop
outsl
rolb
sub
jnp
mov
add
mov
add
es
fiadds
inc
lea
out
xchg
pop
xlat
insl
xor
xchg
add
jp
sbb
lea
add
or
add
lods
inc
xchg
mov
push
mov
jl
stos
adc
loopne
pop
dec
lock
sti
cmc
clc
and
push
sarl
push
sti
adc
cmpsb
cmp
imul
mov
ds
add
inc
jne
outsb
movsb
movsl
push
pop
imul
nop
cwtl
and
pusha
jae
mov
mov
jb
dec
mov
bswap
sub
addb
xchg
mov
pop
adc
cmp
in
xor
int3
pop
cmpsb
mov
push
inc
andb
push
or
add
roll
or
add
lahf
lock
pop
filds
out
call
std
std
inc
leave
cvtdq2ps
mov
shrb
push
pop
jne
jne
push
adc
loopne
inc
std
adc
push
lods
imul
insl
mov
std
hlt
add
stos
hlt
jnp
xchg
lret
mov
inc
xor
loope
lret
movsl
add
loopne
or
loopne
mov
cltd
imul
inc
adc
repnz
cltd
push
imul
outsl
mov
addr16
andl
cmp
movsb
push
pop
test
xchg
inc
loopne
jl
out
xchg
sub
jnp
cwtl
mov
add
repz
out
sbb
add
or
fcompl
shll
pop
mov
push
inc
or
scas
adc
pop
mulb
adc
mov
test
lods
sbb
push
int3
sbb
and
sbb
or
loopne
outsb
test
inc
fldt
or
xor
ficomps
pop
aam
ret
mov
lahf
cs
mov
shr
xlat
pop
and
lcall
iret
cs
push
lret
cmp
xor
xchg
cmp
fisttps
inc
adc
roll
push
ja
test
mov
fstl
pop
or
and
out
outsl
xor
cwtl
cld
xorb
jns
call
xlat
je
popa
or
inc
mov
mov
testl
pop
mov
and
sarb
cmc
out
jne
addr16
lods
movsl
stc
sub
mov
clc
mov
out
pop
mov
fsub
inc
xor
inc
sbb
add
test
push
xor
popf
and
xchg
pop
imul
add
sbb
hlt
mov
adc
inc
push
xchg
mov
inc
dec
mov
inc
iret
push
scas
jnp
lock
or
pop
es
int3
and
aam
mov
insb
mov
hlt
in
insb
mov
push
into
pop
pusha
pop
pop
and
cmp
mov
clc
cmpsb
jns
ja
adc
fadds
inc
lahf
std
add
push
loope
outsl
loop
fsubs
push
dec
movntq
mov
enter
loopne
mov
sbbl
addr16
jbe
fs
imul
and
rcl
cmp
mov
add
icebp
push
pusha
jo
lds
les
dec
add
add
inc
ret
mov
xorb
out
test
ror
pop
mov
cmp
out
mov
das
enter
xchg
mov
push
and
ja
push
mov
xchg
pop
nop
dec
pusha
xchg
outsl
out
scas
push
mov
jno
cs
aas
scas
lret
xor
dec
jns
into
or
or
in
xor
call
push
fcomps
xchg
or
rorb
push
jmp
inc
and
popf
cmp
push
arpl
adc
push
sub
add
xor
ffreep
sub
adc
mov
test
inc
inc
push
mov
pusha
loopne
and
or
pusha
push
into
lret
in
fstpt
js
sbb
stos
xchg
les
mov
add
cmp
sbb
ja
imul
jo
fdivr
xor
pop
and
sub
xchg
dec
add
push
lea
dec
mov
add
or
pushf
xor
push
das
dec
and
call
pop
add
into
and
sub
rcll
mov
add
loopne
add
arpl
jnp
lcall
dec
push
xlat
aad
inc
rcrb
and
push
out
xchg
push
add
fwait
mov
movb
hlt
inc
or
mov
mov
inc
shl
xor
xorb
fcomi
xchg
push
mov
and
es
clc
sbb
jmp
jno
xlat
test
add
adc
push
cmp
jle
push
sub
aam
cmpsb
loope
fucomip
scas
leave
dec
jae
loopne
jmp
xchg
push
fists
inc
and
dec
xchg
or
int3
xchg
das
cltd
sbb
sbb
clc
mov
add
jecxz
arpl
xor
je
jp
mov
xchg
aaa
test
lock
dec
rcll
pop
pop
subl
icebp
je
pop
mov
insb
sbbb
sbb
pusha
push
lea
jo
test
mov
popa
mov
pop
inc
idiv
loop
and
es
pushf
or
mov
inc
mov
clc
mov
cmp
mov
xor
pusha
rol
stos
and
jp
pop
mov
sbb
sarl
imul
jmp
dec
je
pop
inc
xor
xchg
xchg
js
adc
push
lods
sbb
inc
xlat
jns
or
subps
xor
in
add
hlt
mov
or
push
jmp
lock
fmull
jae
mov
cmc
call
pop
into
mov
or
ja
nop
cmp
mov
sub
adc
adc
pushf
lock
adc
inc
adc
and
std
leave
cmc
jmp
lret
and
in
outsl
nop
or
dec
stos
outsb
and
divl
mov
or
mov
mov
faddl
dec
cmp
mov
dec
jg
iret
xchg
sar
lret
adc
push
repnz
or
fistl
and
insb
cwtl
xor
sbb
movl
dec
or
aaa
out
xor
mov
pop
inc
loop
out
lcall
or
and
out
or
test
orl
aaa
icebp
sbbb
lret
sti
mov
ffreep
pop
lret
xchg
int
and
stc
sub
imul
testl
sub
outsb
sahf
movsl
mov
scas
mov
push
mov
in
add
mov
fcom
imul
adc
repnz
push
outsb
jp
sub
and
popf
lea
jmp
mov
jle
xchg
popa
sbb
test
out
shrl
dec
loopne
add
inc
cmp
mov
subb
cmc
in
cltd
push
out
aas
xchg
push
inc
add
loopw
inc
mov
xor
movsb
sti
popa
mov
adc
pusha
xlat
xor
inc
pop
fistps
movsb
mov
jecxz
xchg
fidivrl
movsb
bound
cmp
dec
pop
xchg
icebp
mov
mov
jb
scas
pop
sbb
sub
cwtl
add
xchg
jne
add
add
mov
mov
fiadds
incl
arpl
hlt
stos
popa
repnz
scas
call
adc
push
xor
sub
pop
pusha
jb
or
adc
inc
cmc
mov
js
pop
pop
in
push
mov
xor
mov
int
inc
pusha
xchg
jbe
adc
sub
sub
cli
nop
push
add
ja
sbb
shl
or
mov
mov
jg
outsl
stc
loopne
ror
pop
jecxz
in
pop
or
inc
popa
ret
test
xchg
xor
subl
xor
ret
push
popf
in
jo
add
sub
in
in
xor
and
lahf
psllq
movsb
or
insb
and
sub
stos
orb
add
leave
mull
loopne
or
sub
cmp
scas
fisubl
pop
test
pop
pusha
add
cli
icebp
fidivrl
ret
fdivrl
add
ret
inc
gs
in
arpl
notl
fmull
stc
arpl
xor
jge
add
xchg
dec
rolb
sub
push
in
sbb
out
xlat
rol
fdivs
jecxz
loopne
push
loopne
mov
xchg
fs
je
aam
mov
addb
sub
jmp
jle
aam
jnp
je
daa
and
out
adc
xor
ljmp
aam
cmpsl
adc
xchg
mov
loope
lds
xlat
jne
mov
sbb
lret
sbb
into
jl
or
and
stc
popa
in
mov
xor
in
jle
sub
addb
sub
stos
jo
aaa
mov
aam
mov
pop
test
ds
out
mov
push
mov
xor
mov
arpl
fnstsw
repnz
imul
pop
add
sahf
leave
out
xchg
or
loopne
shl
fldcw
shlb
pop
pop
cld
or
sub
inc
dec
in
cwtl
push
loopne
jb
repnz
pop
sub
mov
mov
mov
mov
adc
pop
movb
xor
jb
xor
inc
or
test
sbb
rorb
mov
sahf
sarl
mov
cmp
daa
test
sti
push
push
push
jecxz
add
add
inc
and
mov
inc
xchg
sbb
inc
inc
ret
inc
lea
or
aad
popa
or
pusha
mov
shr
fldl
dec
test
mov
jae
in
push
xor
inc
inc
inc
xchg
fxch
push
xchg
dec
rcrb
in
jns
jo
push
and
or
pusha
dec
xchg
jge
jp
out
jl
cmp
rcr
jge
ds
bound
sub
mov
into
sbb
jbe
test
ret
ds
lods
push
fwait
scas
xor
xor
cltd
sub
fs
mov
ds
adc
sbb
sbbb
jbe
sub
or
and
sqrtps
sub
mov
pusha
test
push
lds
testb
and
call
lahf
and
mov
sbb
addr16
mov
xchg
pusha
push
fistpll
push
repnz
and
fildl
mov
daa
sbb
push
pop
jmp
mov
mov
mov
imul
cmp
jecxz
sub
mov
sbb
lea
mov
adc
and
test
ljmp
jae
aad
mov
push
add
imul
or
jae
xor
data16
or
pandn
fsubr
push
aas
gs
mov
inc
xchg
cwtl
add
sub
addr16
in
scas
shll
in
pop
mov
enter
pop
adc
add
mov
pop
jge
iret
add
insl
insb
les
mov
cmp
and
push
sub
stc
lahf
out
add
rcrb
iret
xlat
add
out
jno
dec
dec
cmc
push
arpl
cmp
and
aaa
jbe
xchg
mov
inc
add
sbb
into
call
and
sbb
loope
in
jb
push
and
andb
in
xchg
jge,pn
insb
orb
outsl
movsb
push
aam
lret
push
or
aad
rorl
gs
add
push
or
scas
pusha
sti
push
lea
pop
lret
adc
and
int3
int
cvtps2pd
sub
lret
sbb
sub
movsb
rorb
xor
pop
aaa
xlat
stos
out
insl
inc
shlb
lret
dec
add
loopne
xchg
bound
jns
int
nop
add
dec
add
loop
push
mov
sbb
pop
inc
inc
outsb
mov
add
loop
sub
sahf
shr
xchg
pop
out
test
xchg
scas
cmp
lahf
ret
mov
mov
fs
xorb
push
pop
lahf
pop
mov
pop
dec
imul
loope
rolb
lock
jae
cmpsb
movsb
out
inc
xchg
je
xor
push
adc
andb
icebp
loope
mov
out
outsl
sbb
rolb
rcr
xchg
test
adc
jge
cmp
sbb
pop
sub
add
andb
sahf
mov
testb
jmp
cmp
cmp
mov
inc
sbb
stc
jb
mov
dec
in
arpl
into
aad
jle
lcall
cmp
jns
andb
dec
and
xor
push
mov
movsl
enter
inc
xchg
mov
jmp
xchg
push
jae
clc
and
stos
or
pushf
clc
and
dec
push
loop
addr16
in
xlat
test
xor
jge
scas
stos
lahf
xchg
inc
cli
addr16
je
data16
pop
insb
push
test
and
pop
std
lcall
pop
xorb
push
gs
jl
fstps
xor
push
ror
out
imul
test
jecxz
pushf
sub
lahf
add
aas
dec
call
stc
mov
std
mov
pop
aam
sub
pushf
xor
movsb
pushf
push
mov
or
jp
addr16
jns
cmpb
cmp
sub
test
cmp
and
stos
dec
cmp
rorl
or
mov
jp
loope
pop
ss
pop
scas
rclb
insl
dec
xlat
pop
mov
arpl
pcmpgtw
lea
pusha
pusha
enter
jmp
jae
cmpsl
dec
decb
mov
xchg
push
pushf
dec
loopne
or
and
rcrb
jb
jo
insb
xchg
and
fiaddl
cli
test
lock
xchg
add
adc
mov
movsl
mov
or
push
or
es
jl
aas
cwtl
adc
test
fadds
cltd
xor
mov
or
mov
push
aaa
dec
jne
pop
or
out
and
and
jo
pop
sti
pop
adc
rclb
push
das
xor
imul
mov
pop
xlat
cmp
cltd
divb
pusha
dec
mov
das
pop
mov
jb
jb
pop
and
sub
jl
negb
pop
cs
push
sub
inc
pop
into
sbbl
inc
lret
call
outsb
sbb
outsl
mov
sub
mov
mov
stos
xor
cmp
dec
outsl
jae
sub
xchg
inc
push
dec
cmp
ret
and
and
addr16
pop
sbb
jae,pn
pop
xchg
rcr
cld
jb
daa
cwtl
sub
test
jbe
push
dec
mov
xor
fnsave
mov
scas
subb
jle
and
mov
mov
das
or
xlat
push
lcall
repnz
inc
out
outsb
mov
and
sub
mov
insl
bnd
lret
mov
std
pop
sahf
lea
ljmp
sti
call
xchg
cwtl
pusha
nop
in
loopne
clc
push
xchg
sbb
fiadds
aas
xor
adc
inc
mov
aas
push
arpl
cmpsb
lea
addr16
jo
dec
mov
cmp
and
stc
shll
lret
enter
sahf
lret
gs
or
pusha
pop
mov
iret
sarl
sahf
pop
pop
jae
lods
mov
sti
lret
dec
mov
es
insl
mov
cmp
shl
out
loope
and
sub
add
push
inc
dec
aad
icebp
mov
popa
push
insb
or
rclb
mov
jmp
mov
repnz
outsb
es
mov
mov
loope
scas
fdivl
ja
leave
addr16
push
inc
inc
jbe
std
vpsubusb
sub
aam
leave
dec
mov
push
and
je
cmp
rcl
daa
fcoml
mov
ds
mov
push
loope
aam
sub
insl
stos
xchg
jp
lcall
pop
or
pusha
sub
add
je
inc
and
jns
jbe
mov
dec
pop
ja
rorl
mov
cltd
push
pusha
in
loopne
or
push
inc
push
push
and
xor
in
fistl
loope
xchg
add
jmp
jge
mov
cmp
lods
jns
sbb
ret
popf
cmpsl
lahf
jno
stos
dec
dec
fs
cmc
push
icebp
lods
fists
jbe
aam
push
incl
into
sbb
dec
insb
pop
push
div
ret
into
mov
dec
pop
jge
mov
xchg
push
adc
xchg
test
fnstenv
xor
adc
icebp
xor
pusha
push
push
fdivrp
xchg
testl
and
jmp
pop
adc
pop
pusha
jg
call
cli
lods
imul
lret
mov
and
ror
lock
nop
cmp
inc
mov
add
inc
push
push
scas
mov
sbb
pusha
mov
xchg
xchg
inc
mov
mov
loopne
sub
adc
xor
movsb
mov
mov
clc
or
sub
and
sbb
sub
fcomip
jp
mov
popa
mov
lcall
cmc
add
push
lods
xlat
test
pusha
cmp
lahf
call
push
lcall
inc
sbb
loopne
cmp
cmp
sub
or
mov
mov
int
int3
pop
sub
pusha
cs
imul
and
push
bound
call
imul
dec
pop
scas
dec
nop
mov
sahf
cltd
fcomps
lods
jb
repz
push
and
add
pop
xchg
daa
push
xor
add
jmp
mov
pop
ficompl
adc
pop
jp
pushf
or
and
pop
mov
mov
jb
push
cmp
cmp
dec
and
push
pop
imul
movsb
lds
sti
inc
test
inc
pop
mov
mov
or
int3
cmpsl
and
push
push
push
jnp
mov
fnstenv
mov
or
pop
inc
jbe
into
pop
xchg
js
lods
xor
jle
in
inc
dec
stc
jno
andl
sbb
mov
xlat
push
jge
jp
outsb
mov
xor
mov
jns
xor
inc
jne
cli
andb
mov
or
cli
sti
and
sarb
cli
push
ret
xlat
push
xlat
outsb
loop
jbe
sbb
bound
sub
sub
jae
and
or
inc
pop
xor
out
fbld
sub
pop
test
in
aam
push
mov
mov
dec
jns
lcall
jmp
cmc
adc
mov
pusha
out
lock
faddl
cmpsl
daa
adc
push
fiaddl
or
pusha
cmp
out
mov
dec
aad
pop
out
add
pusha
add
mov
inc
aad
mov
jb
gs
pusha
mov
jp
pushf
or
pushf
push
loopne
xchg
cmp
ds
pop
loopne
jae,pt
subb
add
aaa
xor
loop
stc
xchg
and
rolb
clc
int
lods
mov
mov
or
idivb
xchg
test
pop
sub
das
pop
aad
sub
adc
lock
cmpb
push
enter
lods
inc
ljmp
lock
frstor
cmc
sbb
mov
std
movsb
cmp
negb
es
sub
push
or
pusha
cmpsl
add
fdivs
