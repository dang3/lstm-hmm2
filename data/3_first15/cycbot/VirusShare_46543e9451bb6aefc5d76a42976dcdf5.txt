dec
repnz
dec
test
add
add
cmp
add
adc
add
or
add
into
fidivl
dec
icebp
cmp
add
add
add
mov
js
add
mov
pop
rolb
inc
mov
call
leave
dec
rorl
je
out
rolb
test
mov
test
mov
out
pop
jle
add
add
sbb
add
fisttpll
add
add
xor
nop
add
lods
mov
add
aad
adcl
lret
jns
pop
int
add
add
jne
cmp
insl
mov
xchg
inc
inc
add
or
lahf
inc
xchg
mov
add
push
add
sbb
push
add
rolb
cmp
jecxz
scas
ljmp
rolb
das
jae
icebp
addb
jmp
add
imul
lock
add
add
mov
add
add
push
data16
push
add
xor
mov
bound
mov
xchg
add
inc
add
outsb
add
repz
xor
xor
jnp
add
gs
in
add
popf
mov
mov
push
add
mov
cmp
ja
pop
xchg
add
mov
mov
divl
repz
daa
pop
in
add
imul
pusha
add
ljmp
add
add
add
pcmpgtd
inc
or
add
mov
adc
sub
cmp
xor
push
add
add
dec
ret
add
xor
lods
lock
mov
jae
sti
jp
inc
add
mov
add
dec
enter
gs
add
add
addb
add
imul
cmp
add
add
hlt
add
xchg
jb
adc
xchg
add
mov
addr16
dec
sahf
lock
test
jno
xchg
mov
fucomp
inc
adc
pop
enter
dec
test
int
mov
loope
rolb
adc
add
outsl
dec
inc
add
mov
movb
push
mov
je
add
jp
add
mov
adc
mov
add
sub
add
add
mov
out
mov
pop
push
jnp
call
add
mov
add
xchg
dec
stc
roll
loopne
dec
push
add
icebp
dec
mov
mov
add
mov
cmpsb
add
addr16
cli
cltd
adc
add
mov
jb
add
xchg
add
sub
add
lret
popf
ljmp
pop
mov
ljmp
test
and
mov
inc
jbe
inc
aam
addb
add
push
add
add
lcall
test
cmp
add
and
xor
scas
jle
imul
add
mov
enter
pop
cmp
adc
idivl
pop
daa
lret
xchg
add
add
add
data16
jnp
add
pop
cmp
adc
jb
adc
gs
imul
ljmp
hlt
add
mov
ljmp
mov
add
addb
sub
cmpsl
mov
outsb
test
arpl
push
je
ret
out
nop
add
inc
add
or
add
leave
fsts
getsec
mov
cltd
add
add
call
popl
jp
dec
mov
lea
adc
addb
sub
mov
rolb
ret
add
in
and
add
sub
mov
lret
cmc
ret
sbb
mov
add
add
ljmp
sbb
inc
add
call
inc
add
lods
or
mov
sub
add
dec
dec
out
add
and
add
addb
push
mov
sub
add
add
add
add
jne
add
cmc
sub
lods
mov
and
mov
pusha
add
add
jmp
add
out
jb
sahf
inc
mov
push
add
mov
add
or
out
jg
add
jp
add
pushf
mov
lock
add
add
mov
je
loop
cli
sbb
add
mov
push
jns
add
add
add
add
add
mov
ret
add
movsl
add
jecxz
mov
add
and
inc
sti
adc
sub
add
add
sahf
ror
lahf
addb
add
lods
daa
mov
test
idivl
inc
repz
js
popf
cmp
testb
sub
xor
lea
jne
out
loopne
pop
fmul
pop
cwtl
xchg
in
movsl
and
jg
add
or
dec
shll
push
push
xchg
cmp
jge
rolb
bswap
mov
mov
pop
push
stc
aaa
xchg
add
add
ja
xchg
add
add
shll
add
addr16
mov
add
in
add
add
mov
mov
xor
cmpsb
pop
xchg
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
repnz
mov
sub
sub
push
pop
push
je
jmp
add
add
cmpsl
pop
mov
jl
lahf
ljmp
rcl
fldcw
mov
cmp
enter
xor
and
mov
dec
and
shll
jb
les
cwtl
push
add
sub
shll
pop
pop
stos
mov
add
aaa
sti
loopne
movsb
add
and
mov
add
sub
add
jo
dec
add
mov
popa
add
mov
add
xchg
add
jl
iret
test
adc
in
lods
cli
data16
add
sti
dec
popf
movsb
add
mov
and
mov
jae
mov
out
add
shll
mov
add
mov
or
add
and
mov
sub
pop
or
in
mov
daa
lret
push
add
mov
and
add
mov
add
mov
inc
add
add
cmpsl
xchg
cmp
mov
xchg
outsl
xor
add
add
add
add
add
pop
sbb
sub
out
add
add
mov
lods
in
outsl
rcl
add
add
insl
repz
rolb
cmp
add
add
inc
and
out
add
insl
add
mov
add
sub
add
xor
in
aam
in
pop
sub
into
cmp
mull
add
xor
rcr
inc
add
inc
add
jno
add
mov
pop
adc
nop
add
add
add
jmp
add
insl
jecxz
inc
jp
lods
mov
add
mov
add
add
stc
test
add
rcll
sahf
imul
stc
lock
add
add
add
mov
test
aad
les
arpl
pop
pop
push
add
hlt
add
or
add
call
lret
xchg
cmc
adc
mov
mov
add
int3
repnz
sub
fidivs
mov
cmpsl
mov
sbb
lcall
or
repnz
cmp
pop
xor
add
add
xchg
xchg
jno
dec
ret
pop
sub
jns
fistl
orl
add
cmp
mov
add
adc
push
add
mov
or
xchg
inc
jecxz
add
mov
loopne
jae
add
add
mov
add
in
inc
add
stc
test
add
rolb
sub
add
and
popf
mov
xchg
testb
pop
nop
add
adc
sbb
jbe
xchg
add
pop
out
adc
mov
cmp
outsl
inc
pusha
add
out
pop
mov
add
mov
pusha
add
cld
out
jne
add
add
add
out
add
mov
pop
push
jp
cld
push
xor
mov
popf
xor
push
add
fnstcw
repz
add
xor
xchg
add
in
dec
cs
add
cmc
mov
pop
push
add
jno
jnp
mov
and
mov
sbb
loope
jbe
dec
mov
jg
add
add
js
fwait
xor
lret
stos
pop
mov
ficomps
mov
xlat
fiaddl
cmp
call
mov
add
fcomps
add
pop
or
add
daa
daa
inc
add
addb
add
xchg
add
add
push
popf
adc
data16
stos
push
test
cmp
lds
mov
or
add
into
shrl
fdivl
movsl
rolb
sbb
add
add
push
add
mov
xchg
add
test
jnp
add
insb
pop
adc
sbb
add
add
fildll
cmp
rcrl
sbb
addr16
inc
push
cwtl
adc
inc
sub
adc
xchg
mov
xor
popf
xor
sbb
pop
lods
dec
sbb
mov
sub
enter
cmpsb
add
and
mov
sbb
in
push
ror
pop
push
stos
leave
pop
mov
ljmp
add
mov
outsl
sbb
add
add
add
sbb
xor
lcall
add
mov
adc
lods
loop
dec
add
jbe
hlt
add
js
add
mov
sbb
pop
lcall
add
in
pop
mov
add
out
push
add
jmp
add
std
inc
add
lret
out
insb
in
fisttpl
push
out
test
add
mov
add
add
mov
push
sub
add
cmpsl
mov
cmp
add
mov
scas
sbb
add
ds
add
mov
movsl
rorl
add
out
cmp
push
add
add
in
ret
in
imul
cs
pop
call
add
add
cmpsb
add
lods
cmp
int3
data16
fwait
jae
add
add
or
xor
dec
sbb
add
xchg
add
add
je
iret
mov
or
adc
xchg
add
xor
cmp
leave
xchg
pusha
add
mov
add
mov
les
pop
in
cmp
add
mov
add
mov
aaa
gs
pop
dec
sub
add
add
inc
add
cmp
push
imul
mov
arpl
test
add
or
add
push
add
push
add
enter
mov
fldt
pop
and
xchg
add
call
add
rolb
dec
pop
sahf
adc
hlt
add
xlat
rolb
je
bound
mov
mov
dec
pop
ret
pushf
mov
inc
add
sbb
sub
or
pop
push
es
add
xor
insl
mov
insl
fldt
add
add
add
cmp
stos
jne
add
mov
push
add
mov
xor
scas
and
add
stc
std
mov
add
mov
sub
mov
add
add
add
mov
sub
sub
xlat
or
out
push
add
add
outsb
cmp
imul
jle
cmovns
add
add
out
add
mov
push
out
addr16
pop
push
int3
pop
enter
sub
xor
cs
cmpsb
add
xchg
add
push
loope
sub
add
mov
add
mov
shll
xchg
cmp
push
add
add
mov
aaa
sti
mov
pusha
add
aad
push
add
mov
mov
and
pushf
jle
add
pop
clc
aas
rolb
pop
arpl
cs
pop
inc
add
xor
sbb
std
xchg
push
add
out
nop
add
add
dec
pop
dec
std
or
add
add
leave
call
imul
jae
add
std
push
pushf
testl
mov
fwait
in
mov
fisubs
add
add
arpl
add
add
add
xchg
add
ret
mov
testb
jo
xor
mov
push
add
rolb
movsl
scas
xor
pop
xor
daa
or
out
inc
add
cwtl
mov
shl
inc
add
lcall
add
add
inc
mov
rolb
add
roll
sub
gs
cmp
add
add
sti
add
add
mov
out
sbb
repnz
popf
into
dec
sub
mov
imul
fistpl
inc
out
add
add
xlat
cmp
and
mov
sub
add
in
into
or
testb
jmp
cmpsb
add
enter
mov
add
add
mov
jp
ret
pminub
xchg
add
pop
sub
add
mov
enter
dec
scas
pusha
add
add
ss
sub
and
pop
xor
mov
add
mov
or
mov
add
pop
pop
sub
out
addb
arpl
imul
les
rolb
jae
jmp
aam
mov
icebp
gs
add
aas
test
sbb
mov
hlt
add
aam
enter
mov
mov
add
add
push
xor
test
add
daa
in
sbb
mov
out
dec
aaa
arpl
add
cwtl
idivl
xchg
add
pop
lds
add
sti
add
xchg
add
fdivp
add
xchg
mov
add
fcomps
nop
add
test
je
jmp
add
pop
mov
divl
pusha
add
add
leave
inc
add
mov
add
stc
dec
pop
aam
ds
add
inc
add
jnp
cli
sahf
push
fadds
pop
dec
lahf
subl
add
inc
add
lods
jo
nopl
or
adc
sub
add
pop
add
add
add
sub
clc
or
add
and
mov
pop
aaa
lcall
add
add
inc
add
rolb
mov
sub
add
dec
ficomps
nop
add
add
mov
cmp
add
jge
fwait
add
call
xchg
and
mov
mov
push
repnz
xor
cs
push
add
add
inc
add
ja
push
xchg
bound
mov
loop
jle
rorl
inc
mov
psadbw
cmc
ret
pop
pop
xchg
jge
adc
push
jae,pn
fadds
and
mov
adc
ds
add
insl
arpl
std
and
jp
push
dec
out
js
fistpl
data16
mov
call
add
mov
lret
dec
mov
inc
add
jmp
and
mov
add
mov
dec
xlat
leave
dec
xchg
add
xor
push
dec
pop
fucomp
inc
add
and
mov
cmc
cmp
jbe
sbb
out
mov
adc
outsb
pop
lock
push
add
pop
les
fcmovu
inc
cwtl
dec
fisubrl
jle
dec
mov
or
mov
dec
dec
aaa
xchg
add
sahf
xlat
addb
add
add
sbb
and
jmp
sbb
data16
and
ds
add
add
add
add
cmp
cmpsl
xchg
mov
cmp
add
fcompl
xor
fsts
std
mov
ret
loopne
cwtl
and
daa
pop
push
rcrl
fcoml
pop
jmp
imul
add
or
stos
mov
fstpt
jg
cmp
lods
mov
lcall
imul
ljmp
add
push
add
add
adc
pop
adc
pop
inc
push
add
mov
add
mov
push
add
add
loop
cmc
pop
stos
xlat
gs
data16
das
xchg
add
mov
pushl
xchg
add
add
push
dec
loopne
sub
add
pop
push
add
add
mov
add
add
add
test
fisubs
and
mov
pop
jp
cmpsb
add
js
add
pop
sub
push
add
inc
in
stos
js
ret
and
stc
dec
out
fwait
aaa
rcrl
int
add
push
cmpsb
add
xlat
loopne
jb
je
or
adc
inc
insb
insl
pop
fcoms
rolb
mov
imul
int3
test
and
add
mov
orl
rolb
mov
cmc
xor
fstpl
test
push
test
or
add
add
lock
or
testb
rcll
sub
jnp
xchg
adc
add
add
add
or
insb
push
add
stc
lods
shrl
pop
lock
add
mov
add
imul
mov
mov
jge
enter
je
data16
sub
mov
rcll
aaa
sub
in
sti
pop
ffreep
add
notl
add
jg
jnp
pop
dec
aad
add
or
cmp
add
insb
outsb
mov
fisubrl
add
sub
fwait
and
mov
add
jg
sbb
inc
add
rolb
loopne
mov
add
adc
stos
mov
xchg
add
sub
mov
jnp
pop
mov
lahf
push
add
and
sub
mov
ret
xchg
fdivl
cmp
filds
push
add
mov
mov
push
icebp
je
fs
add
in
rolb
jmp
les
lea
add
add
and
add
dec
outsl
push
and
mov
add
lods
iret
fwait
mov
cs
jl
add
push
cmpsl
mov
or
add
mov
ss
add
mov
push
or
add
aas
xchg
clc
sti
sbb
inc
add
add
dec
in
jns
and
inc
add
in
mov
add
cmpsb
add
adc
mov
movb
add
mov
add
mov
nop
add
add
mov
outsb
outsl
call
dec
pop
mov
rcr
aad
andl
cmp
in
add
xchg
mov
mov
sub
mov
dec
ss
rolb
or
gs
gs
cwtl
iret
pusha
add
sbb
xchg
add
add
jnp
gs
jl
add
lock
push
add
ret
out
jne
add
push
add
xlat
dec
adc
mov
test
add
cmp
add
aaa
std
cmp
stos
pop
pop
popa
xlat
mov
push
add
testb
add
dec
jae
push
add
pop
xchg
push
daa
mov
cmc
push
add
add
inc
add
jl
add
jbe
lret
mov
ret
or
add
add
mov
call
testb
mov
add
or
test
push
add
arpl
mov
add
icebp
test
add
or
mov
test
push
and
mov
sub
popf
dec
ret
lahf
je
mov
mov
push
jbe
fists
add
dec
and
xor
ds
jmp
push
add
add
testl
add
mov
add
iret
aam
pop
rolb
jbe
adcl
add
mov
in
mov
push
fildl
and
adc
and
sbb
cld
jg
add
fwait
push
lret
add
mov
adc
xchg
fwait
cltd
sub
add
stos
push
or
cmp
xor
pop
and
mov
setns
xor
pop
xor
out
mov
int3
sub
pop
in
in
mov
daa
jg
sbb
sbb
jb
jne
movsb
add
sub
push
inc
add
std
out
mov
data16
pop
mov
add
mov
jecxz
and
add
or
adc
cld
and
xchg
mov
add
and
mov
cli
mov
adc
mov
cmp
arpl
add
add
aas
stos
cmp
mov
xlat
in
scas
ret
subl
fdivl
enter
xchg
pop
js
out
das
push
add
ljmp
add
or
pusha
add
cmc
in
push
mov
mov
xchg
fcmovnbe
add
add
jmp
bound
mov
add
push
cltd
adc
push
out
cmc
adc
jbe
pop
aad
lahf
jo
lret
sbbl
stc
dec
in
icebp
rolb
and
xchg
mov
adc
add
in
add
push
add
addb
lret
xchg
insl
fisubrs
add
mov
sub
lds
add
int
andl
sub
pop
push
out
sub
add
test
xor
fildll
movl
push
add
add
mov
add
mov
ja
mov
add
mov
pop
nop
add
xor
pop
mov
lea
popf
cmp
add
jb
insl
shrl
add
add
push
add
inc
add
fcoml
fisubrs
add
dec
mov
add
jae
clc
mov
test
repz
pop
or
and
rolb
pop
je
hlt
add
dec
in
jmp
add
add
and
mov
add
push
add
xchg
popa
xchg
jmp
add
stos
adc
cmp
add
cwtl
add
out
dec
repz
add
adc
lock
adc
repnz
jns
mov
add
add
loop
repnz
add
add
iret
mov
fsubrl
jae
add
inc
add
mov
daa
add
cmpsb
add
mov
mov
enter
arpl
add
add
cwtl
stos
mov
unpcklps
sub
fadd
add
loopne
aad
rolb
xchg
cmc
add
js
dec
popl
add
mov
add
add
pop
sahf
cmp
add
mov
outsb
pop
dec
addb
add
add
adc
push
insb
lods
imul
sub
out
fidivs
dec
daa
push
mov
and
outsb
push
cmc
into
das
aam
scas
outsb
jno
jge
popa
push
mov
xor
je
push
sbb
add
ljmp
addb
mov
sub
sub
sub
movsb
add
add
mov
mov
xchg
add
faddl
jne
sbb
add
xchg
add
mov
movb
add
hlt
add
add
add
out
stos
ds
add
test
push
movsb
add
ds
mov
andl
add
lcall
xor
adc
stc
add
inc
mov
fistpl
mov
andl
jmp
int
add
add
scas
popf
xchg
mov
add
add
xor
sub
data16
xor
xchg
adc
add
jge
in
and
jnp
add
jbe
cmp
imul
add
fisubl
add
add
add
mov
mov
and
pushf
lcall
add
mov
push
add
lret
int
idivl
or
jno
push
add
pop
out
loope
inc
add
or
add
sbb
jae
add
mov
daa
and
mov
call
sbb
repz
aad
add
popa
repnz
mov
popf
mov
imul
imul
movb
loop
sbb
pop
and
cmpsl
test
adc
cmp
insb
ficompl
jbe
add
add
incl
pop
inc
xor
dec
insl
cmpsl
divl
bound
mov
les
loopne
mov
add
lcall
add
push
stc
and
pop
enter
scas
add
add
js
es
inc
add
add
dec
and
add
add
and
daa
mov
in
in
stc
dec
rcrl
fwait
sbb
mov
add
sbb
xchg
add
mov
mov
out
ret
dec
sub
adc
mov
aad
mov
add
jmp
lods
pop
mov
and
insl
dec
in
imul
fldcw
add
lock
sub
add
add
xlat
xlat
pop
inc
add
leave
inc
add
icebp
inc
jle
insb
adc
push
testb
fdiv
add
out
rcr
mov
ds
jle
add
jb
push
stos
inc
add
icebp
adc
pop
bound
mov
scas
mov
add
mov
sti
pop
dec
lods
adc
fdivrs
out
pop
sbb
push
add
adc
add
add
gs
add
pop
lret
aas
es
mov
push
add
add
mov
ljmp
mov
scas
mov
in
add
sbb
dec
lea
jns
push
xor
add
xchg
xchg
into
call
add
rolb
or
add
pop
mov
ret
push
add
addb
out
sbb
add
push
add
adc
sub
add
add
mov
add
add
rolb
pusha
add
jge
xor
addr16
aam
outsb
pop
cmc
pop
cmp
int
cltd
rolb
in
dec
call
hlt
add
mov
add
notl
xchg
or
jne
add
xor
jns
xor
inc
xor
dec
mov
sti
mov
xor
decl
lret
repz
add
pop
xchg
add
lret
mov
sub
adc
add
popf
xchg
aad
mov
add
out
push
inc
add
dec
call
push
xchg
add
aas
loope
cmp
xchg
ret
sub
inc
into
lods
outsb
nop
add
dec
xor
jbe
je
add
iret
cs
lret
mov
add
add
aas
loope
sti
insb
sub
xchg
add
sub
add
pop
rolb
daa
fldt
push
xchg
add
cld
cld
ljmp
add
ja
add
xchg
jnp
add
add
add
add
pop
cmp
add
icebp
jns
add
pop
push
add
in
cwtl
int3
scas
roll
out
mov
jmp
mov
and
imul
lds
fisttpl
add
xchg
out
xchg
movb
popf
push
add
orl
sub
add
aad
add
add
add
movb
or
sub
inc
add
pop
addr16
mov
stos
out
add
mov
jmp
lods
xchg
add
push
add
or
popf
rolb
xlat
sub
jns
jp
add
push
out
mov
add
movb
enter
std
sub
add
add
out
fiadds
mov
xor
add
push
inc
add
xchg
out
nop
add
mov
iret
jae
mov
add
or
add
add
inc
add
cwtl
in
xor
add
mov
or
add
add
cmp
add
rolb
inc
add
add
inc
push
out
in
in
sub
or
aaa
add
mov
icebp
cmp
rolb
adc
mov
test
lods
sub
cli
out
mov
add
or
add
mov
jmp
cwtl
call
pop
pop
stc
jae
jbe
adc
add
add
scas
stos
cwtl
jp
add
sub
pusha
add
lds
outsb
loopne
leave
sub
add
cmp
add
push
add
jl
xchg
inc
cmp
in
jge
xchg
xchg
add
sub
add
jno
add
gs
add
mov
mov
dec
xor
add
push
mov
cmpl
addb
cwtl
xor
xchg
cmp
sbb
add
test
test
call
add
lods
xchg
add
loop
or
mov
add
add
out
test
add
imul
add
sub
leave
push
mov
add
dec
call
and
mov
lds
mov
add
outsb
xor
push
xchg
xor
out
lret
sbb
xchg
loop
and
mov
cli
sub
fidivs
push
scas
cli
xor
add
sub
jbe
fwait
pop
inc
add
add
push
add
xchg
and
cmp
mov
pop
inc
xchg
js
adc
leave
sbb
cmp
xor
movsl
xchg
jnp
pop
xchg
add
pop
push
das
xor
scas
push
add
fisttpll
jnp
mov
test
iret
lret
push
xor
repnz
fidivrl
or
add
add
add
add
dec
in
sbb
mov
lods
testb
sbb
lods
jle
loopne
test
in
outsl
int
out
aaa
filds
adc
jb
pop
xchg
push
add
fs
mov
xor
jo
dec
jne
add
test
inc
add
add
or
jle
xor
rep
stos
arpl
push
or
cmpsl
pop
cwtl
fisubs
in
aad
pop
cmpsb
add
sbb
sub
pushf
mov
pop
hlt
add
outsb
sub
filds
add
push
add
add
add
cmp
mov
aad
fiaddl
pusha
add
add
aad
push
add
and
fisubrs
pop
imul
sahf
aam
loopne
ljmp
out
mov
jbe
stos
jbe
cmp
mov
push
add
add
insb
cmp
push
sub
add
shll
fwait
pop
in
cltd
jne
add
add
xor
cli
or
sub
mov
mov
rolb
mov
lods
mov
mov
lock
pop
rcll
js
jmp
push
sbb
test
add
sbb
jnp
pop
push
shll
dec
push
add
sti
loope
add
add
mov
int3
repz
push
xor
out
and
sub
jg
xchg
sub
cmpsl
pop
and
mov
add
je
xchg
fisttpll
sbb
das
dec
xchg
pop
inc
add
and
addb
inc
add
cmpsl
or
addl
pop
into
xor
mov
and
mov
add
inc
add
add
popa
rcrl
and
mov
mov
lcall
mov
cli
daa
in
push
add
or
add
sub
movsb
add
lcall
mov
add
add
movsl
jge
popf
jecxz
lret
push
add
rolb
sub
push
jge
cwtl
push
arpl
sbb
xor
cmp
add
jno
in
scas
mov
add
adc
lcall
push
mov
or
mov
cmp
lds
add
clc
dec
mov
daa
inc
mov
aaa
lahf
and
add
or
add
add
lret
jbe
lods
cltd
xchg
neg
ds
gs
mov
pop
jb
das
cmpsl
sub
outsb
xchg
xlat
dec
call
and
sbb
add
mov
int
mov
push
add
data16
jecxz
dec
xchg
add
cltd
xchg
jb
insb
mov
add
inc
pop
mov
cmp
fistps
lret
dec
push
add
pop
sub
into
sub
sbb
mov
out
xchg
adc
addb
outsl
add
mov
or
dec
flds
add
add
add
add
add
add
add
in
out
add
dec
les
sbb
mov
or
add
add
maskmovq
add
mov
or
push
icebp
pop
arpl
mov
loopne
sub
xor
or
rolb
inc
add
in
stos
mov
insl
add
add
add
pop
add
sbb
add
add
add
add
jns
sub
add
mov
inc
add
mov
scas
push
pop
sahf
fs
mov
jmp
add
test
lahf
jge
xchg
call
daa
mov
les
dec
adc
call
sub
cmp
mov
push
sub
icebp
dec
xor
cmpsl
in
popl
mov
add
add
add
add
loop
or
fsts
std
cmp
div
add
push
and
push
xor
rep
sti
lret
push
add
loope
ja
shrl
insl
loope
inc
rolb
or
add
inc
xor
xchg
xor
add
call
into
mov
sbb
addb
mov
add
add
add
push
testb
cli
mov
rolb
xchg
add
repnz
sbb
pop
jmp
dec
jecxz
mov
add
add
add
or
or
fiaddl
imul
mov
fstpl
add
add
mov
dec
adc
mov
dec
cwtl
aaa
std
jb
outsb
cmc
stos
sahf
mov
add
mov
or
rolb
sarl
add
xor
cltd
inc
add
add
mov
xor
jge
fwait
addb
add
das
jnp
add
inc
add
movsb
add
add
add
les
pop
mov
jb
testb
add
inc
add
mov
dec
push
cmp
add
andl
nop
add
xchg
out
mull
pop
addb
jle
add
inc
add
outsb
std
mov
mov
add
add
sbb
jae
xchg
mov
gs
fisubrl
cmp
cmp
mov
sub
out
and
mov
mov
mov
sub
inc
add
jle
add
aam
sbb
add
popf
ret
inc
add
out
mov
xor
pop
or
cmp
add
pop
es
add
inc
add
enter
pusha
add
push
xchg
add
nop
add
and
cmp
xchg
js
aaa
fsts
dec
in
mov
push
addb
pop
popl
mov
std
adc
test
add
add
mov
lea
sub
aaa
jg
add
mov
push
add
popf
pop
lret
jmp
add
cmc
jp
jp
rolb
sub
add
outsl
jg
ficomps
icebp
adc
add
xchg
and
call
rorl
dec
rcr
jbe
std
dec
sub
ds
add
incl
or
loopne
pop
out
cmp
cmp
add
mov
clc
les
gs
dec
add
push
fcmovb
mov
add
int3
loopne
jne
xor
inc
xor
aam
data16
jb
sub
mov
dec
xor
sub
loopne
cmpsb
add
pushf
jge
gs
add
mov
sub
mov
add
add
in
jge
push
add
cmp
out
sti
nop
add
add
mov
add
mov
add
out
xor
and
mov
add
xchg
dec
xchg
add
in
in
lods
add
xlat
push
cld
jg
dec
lcall
popf
mov
inc
insl
nop
add
or
lahf
mov
scas
push
add
xchg
cwtl
jmp
stc
dec
mov
jae
mov
mov
adc
ret
ficomps
cltd
test
inc
loope
push
add
inc
add
cmc
movb
ljmp
into
lds
add
dec
pop
ljmp
hlt
add
jo
mov
mov
mul
or
add
or
adc
cmc
les
stos
fisttps
je
xor
mov
addb
add
pusha
add
mov
add
cld
out
insb
or
or
test
jb
or
sbb
mov
add
xchg
add
inc
add
add
rolb
test
js
or
cmp
push
add
mov
lds
or
testb
sbb
sub
inc
add
add
or
add
ret
or
add
add
call
add
add
jp
add
inc
cmp
inc
add
add
sbb
lock
and
mov
addb
scas
push
lea
mov
dec
jnp
adc
add
xor
bound
mov
aam
pusha
add
jno
xor
add
sbb
add
adc
and
dec
dec
pusha
add
add
adc
or
cltd
cs
rolb
mov
add
mov
mov
mov
adc
bound
mov
jo
and
and
add
pop
lock
pop
sub
jo
or
add
add
mov
jmp
dec
into
std
cltd
hlt
add
push
add
rolb
movb
iret
test
add
pushf
push
adc
rolb
add
mov
iret
or
add
and
daa
push
add
xor
jecxz
jo
adc
and
rorl
orl
out
adc
out
add
pop
mov
addb
outsl
sub
cmp
sbb
out
adc
insl
in
clc
add
xchg
ljmp
test
lcall
cmc
inc
xchg
ret
lock
int3
mov
aaa
stos
fwait
jp
test
adc
out
loop
pop
xchg
add
in
fdivr
je
inc
mov
jmp
or
add
leave
fdivrp
sub
mov
xchg
dec
test
movsb
add
loope
fisttpll
pop
jle
add
out
sub
mov
popa
cmp
add
add
scas
iret
dec
adc
idivl
push
add
dec
div
add
inc
xchg
xor
outsl
loop
xor
sub
fstps
xor
sub
push
add
add
mov
ret
mov
jne
add
fisubs
data16
das
mov
mov
jecxz
inc
add
adc
call
add
stos
push
add
add
mov
xor
xchg
add
pop
add
mov
mov
aas
lahf
jae
sub
add
incb
mov
scas
aas
mov
add
jge
lret
xorl
aad
pop
xchg
xchg
add
test
add
mov
scas
sub
aad
add
xchg
add
scas
pop
nop
add
sub
add
pushf
jmp
lds
mov
xor
out
add
mov
test
testb
add
out
iret
jo
add
add
add
push
add
xor
cmp
pop
xchg
add
int
je
maskmovq
divl
fstps
sti
psrld
aaa
mov
and
mov
cmpsb
add
jo
inc
add
ds
shll
push
add
bound
mov
addb
lret
mov
add
in
push
add
std
aas
add
add
inc
dec
sub
add
out
mov
ljmp
mov
cmp
add
out
test
incl
out
rolb
sahf
push
add
push
add
or
adc
add
push
dec
dec
mov
js
xchg
add
dec
push
add
sub
add
sbb
or
aam
popf
cmp
add
jecxz
mov
inc
and
int3
rolb
loop
out
aas
add
mov
inc
jo
lock
pop
in
cmp
pop
pop
cwtl
cmp
jecxz
movsb
add
outsb
or
cmc
xor
lds
add
loopne
mov
jb
js
scas
jae
add
fsubl
movsl
jbe
scas
inc
add
das
pop
sbb
test
dec
lock
fisubrl
push
inc
add
add
xor
add
xor
aas
mov
inc
sbb
mov
add
aaa
insl
xlat
mull
add
jle
insl
scas
sub
add
add
test
cmpsl
mov
add
add
add
mov
sbb
xchg
sbb
mov
add
add
add
add
dec
iret
stc
gs
mov
add
add
bound
mov
call
dec
stc
leave
lret
adc
xor
add
add
jmp
aaa
xor
filds
insb
cltd
sbbl
inc
add
loop
adc
mov
sub
and
daa
loop
jl
insb
add
pop
and
pop
push
leave
push
add
cmp
popa
cmpsl
outsl
cmp
stos
out
adc
mov
in
jecxz
mov
ret
xor
lock
pushf
test
add
les
xlat
int
pop
add
add
add
into
fbld
add
stos
or
cmpsb
add
arpl
mov
xchg
add
hlt
add
add
add
movb
jne
add
add
dec
je
dec
add
cwtl
pop
mov
add
add
out
aaa
xchg
xchg
daa
ds
dec
xchg
das
sub
add
movsl
ficoml
add
add
xor
add
mov
add
cwtl
mov
or
mov
cld
rolb
sbb
add
xchg
add
loope
sahf
test
stc
mov
jno
add
add
loop,pt
mov
and
pop
mov
fmull
add
push
and
lods
mov
push
mov
stos
daa
jecxz
jb
add
mov
pop
dec
sub
add
test
fcompl
pop
hlt
add
xchg
add
add
mov
outsb
inc
add
mov
inc
icebp
movb
mov
arpl
pop
stc
outsb
in
pop
maxps
pop
testb
add
adc
add
add
push
scas
xchg
add
add
mov
add
xor
enter
add
push
sbb
inc
in
mov
mov
loop
fcomps
test
add
mov
add
mov
add
cltd
cltd
stos
hlt
add
and
outsb
adc
jnp
mov
movsl
not
das
sub
ret
clc
lahf
add
test
mov
add
pop
add
sbb
add
add
cmpsl
out
xor
gs
cmp
sub
addl
int
aas
or
out
pop
sti
mov
mov
add
add
dec
or
js
icebp
push
les
sbb
push
add
data16
cmp
dec
addb
add
mov
dec
sbb
xchg
add
rolb
pop
mov
xchg
pop
cld
ss
pop
ficoms
insl
dec
mov
imul
dec
pusha
add
inc
movb
popf
aaa
push
add
xor
inc
push
add
ror
pushf
pop
stos
xor
xchg
add
fnstcw
imul
test
mov
int
int
add
imul
mov
xchg
add
cmp
sbb
out
pop
dec
dec
dec
mov
imul
inc
call
jo
les
leave
sti
arpl
lret
pop
addr16
rolb
push
add
sahf
adc
mov
daa
js
movsl
and
xchg
add
dec
data16
mov
lods
andl
jle
icebp
pusha
add
ja
add
push
add
jmp
add
add
ljmp
sahf
rcrl
incl
insl
jbe
imul
stc
push
add
rcrl
xor
lds
lods
fcomip
cmpsl
mov
popf
fs
sub
pop
push
dec
and
xchg
add
iret
mov
lret
movsl
xchg
pop
outsl
jns
add
imul
add
and
mov
add
mov
data16
sub
and
mov
or
add
rolb
mov
add
push
add
shll
outsb
pop
outsl
cmpsb
add
jmp
fisttpll
test
pop
jge
add
add
jge
xchg
incb
scas
rolb
xor
in
pusha
add
xchg
add
push
imul
push
add
mov
call
jbe
and
mov
pop
add
sub
add
xchg
pushf
ja
push
add
jle
data16
add
rolb
scas
xchg
mov
xor
aam
add
or
adc
xchg
enter
popf
iret
pop
mull
inc
cmp
adc
add
sub
repnz
in
icebp
scas
cmc
ljmp
out
scas
jo
addb
add
pop
mov
clc
enter
lret
sbb
cmp
lahf
stos
hlt
add
add
packsswb
ljmp
cld
movb
add
outsb
xor
pushf
jns
in
dec
mov
mov
sbb
mov
xor
scas
loope
sahf
xchg
bound
mov
inc
add
push
add
add
sub
add
dec
test
arpl
lea
daa
scas
hlt
add
add
jl
add
mov
add
jge
fwait
push
lock
ljmp
jg
mov
mov
add
mov
je
mov
out
jns
add
add
xchg
mov
pop
fsubrl
add
add
mov
add
addr16
mov
lods
xchg
mov
out
movb
addb
arpl
add
xchg
add
add
rolb
lods
pushf
and
clc
std
cmpsb
add
cli
add
xchg
lret
arpl
repnz
jb
mov
add
push
and
add
xchg
rcrl
cwtl
add
cmp
mov
gs
fdivrl
loop
lds
movb
add
std
lahf
push
fidivrs
or
adc
xlat
and
mov
into
push
cwtl
xor
add
jae
add
cltd
xchg
xchg
add
add
sahf
push
add
jne
in
fcmovb
add
add
mov
inc
jp
add
cmp
xlat
mov
cltd
fildl
mov
popf
mov
mov
push
cmpsb
add
aaa
in
rolb
jge
sub
je
adc
stc
dec
add
sbb
add
add
mov
mov
mov
sbb
lods
sbb
fadds
mov
scas
outsb
sahf
movb
pusha
add
in
mov
faddp
mov
jbe
push
push
add
pminsw
xor
cmp
pop
repz
fildll
mov
xlat
cli
out
add
mov
and
add
jnp
in
ret
clc
pop
pop
popf
mov
xor
sub
sub
xor
xor
add
sbb
das
lcall
add
or
add
add
add
adc
addr16
add
push
add
jp
add
clc
inc
push
add
pop
inc
push
mov
add
cmp
add
clc
push
scas
movb
add
icebp
mov
call
add
pop
xchg
adc
test
add
je
add
addb
jg
jl
add
xchg
add
testb
cwtl
sbb
fwait
add
jg
sub
in
xchg
je
mov
inc
add
lret
inc
add
add
pop
insl
out
data16
jg
aaa
test
sbb
lock
add
mov
cwtl
mov
in
inc
insl
sbb
clc
stos
add
pop
loop
sub
add
mov
add
rolb
add
add
jbe
lahf
in
sub
add
testb
pop
movsl
mov
rolb
stos
test
imul
addb
sub
add
cmp
add
add
pop
cmp
pop
daa
cmp
jecxz
add
add
cmp
xchg
mov
aad
mov
aas
das
into
dec
in
or
mov
add
mov
mov
adc
cld
xor
mulps
add
add
add
jnp
cwtl
jecxz
rolb
ljmp
cltd
dec
jnp
add
push
and
add
jp
inc
add
sahf
sub
leave
js
add
cmpsb
add
add
stos
loope
xchg
mov
push
add
mov
add
adc
add
mov
add
nop
add
sub
mov
dec
sti
hlt
add
adc
add
mov
cmp
call
add
or
xorl
xchg
loop
aam
xor
mov
cmp
add
movb
xchg
call
hlt
add
cmpsl
mov
in
xchg
loope
pop
sub
mov
xchg
add
cmp
add
inc
out
mov
push
add
fcmovbe
push
dec
and
dec
andl
mov
add
repz
add
addb
add
test
push
cmp
sti
lds
lret
jno
add
mov
mov
add
fwait
out
sub
add
jge
in
test
movsl
cmc
repz
bound
mov
add
mov
fdivl
pop
lret
test
cs
mov
js
inc
add
xchg
add
fcomps
mov
sbb
push
stos
leave
push
add
push
add
mov
inc
fbld
add
mov
pop
push
add
or
xlat
sub
add
add
or
push
add
sbb
test
jg
sbb
nop
add
sbb
mov
jge
movsl
sub
in
lcall
add
out
jb
lret
jp
xchg
add
mov
mov
dec
inc
add
add
push
add
lds
mov
mov
int
inc
add
jle
movhps
xchg
add
cs
loop
push
in
enter
pop
adc
or
arpl
xor
pop
add
dec
inc
dec
push
ret
lods
push
add
fucomip
sahf
lock
lods
dec
xor
shl
add
add
inc
lods
jle
push
xor
xchg
out
cmp
repnz
ljmp
aad
fs
add
pop
hlt
add
add
incl
add
outsb
fcompl
loope
and
lret
jns
icebp
addb
push
xlat
pushf
jne
add
or
dec
xchg
add
push
in
pop
popa
pop
sub
xor
mov
mov
fsts
pop
xchg
imul
pusha
add
pop
fidivrl
pop
loopne
fbld
mov
add
mov
add
orl
pop
cmp
add
add
xor
sbb
and
aam
xchg
add
sbb
std
xor
push
xchg
sbb
lods
xor
fwait
adc
mov
addb
add
add
adc
inc
jbe
scas
arpl
mov
or
add
pop
lods
mov
cmp
mov
mov
add
add
sbb
push
jns
mov
add
add
mov
scas
sub
add
sbb
scas
sub
add
xchg
add
jmp
mov
xor
mov
add
add
add
lods
outsb
push
sahf
mov
jle
pop
cmp
xor
divl
sub
mov
pop
jmp
add
sub
xchg
scas
mov
xchg
aam
push
xor
adc
ficomps
cmpsl
les
push
and
mov
add
int3
sub
je
aaa
ret
stc
xlat
rolb
addb
sbb
add
mov
mov
insb
cmp
fistpll
cmp
hlt
add
add
mov
rolb
nop
add
add
add
jecxz
push
js
enter
mov
mov
dec
jnp
leave
out
rolb
mov
out
add
add
add
push
fidivs
stos
add
and
add
xchg
rolb
and
add
inc
add
inc
dec
movsl
jno
daa
ficoml
lahf
push
add
push
add
enter
dec
adc
push
add
cmp
out
ja
add
js
pop
add
mov
add
add
in
gs
add
xor
aam
jae
add
out
imul
scas
mov
add
imul
dec
adc
into
in
dec
add
aad
pushf
mov
les
and
jecxz
incb
outsl
out
push
add
pop
insl
add
jmp
add
inc
add
jae
add
push
data16
aad
xchg
lret
nop
add
cmpsl
sub
insb
stos
mov
mov
scas
mov
popf
inc
add
sbb
cmp
add
test
add
adc
sahf
scas
arpl
push
add
nop
add
sahf
adc
jge
mov
mov
add
add
xchg
add
add
push
add
pop
ss
and
pop
cmpsl
mov
lock
fwait
pop
cltd
or
xor
outsl
push
add
push
push
sbb
add
dec
bound
mov
addr16
add
mov
lds
jl
cld
aas
adc
flds
add
mov
add
mov
addr16
add
add
aam
add
jp
push
add
add
shll
cmpsl
push
add
mov
adc
xorl
rolb
xchg
add
add
movl
add
mov
jne
fistps
add
add
loope
mov
xor
movsl
insl
mov
adc
mov
jmp
scas
cmpsl
cmp
add
add
add
adc
xlat
jo
sarl
hlt
add
xchg
xchg
pop
push
add
dec
fstpt
das
push
add
xor
push
fdivl
add
push
add
insl
adc
mov
add
mov
push
add
mov
mov
add
repz
add
stc
jecxz
add
mov
cmp
sbb
xchg
xchg
inc
push
add
xchg
add
pop
push
fwait
xor
mov
repz
add
add
mov
enter
cmpsl
repz
cli
cmpsl
aam
jns
add
add
popf
repnz
xchg
out
pop
call
sbb
stc
scas
lock
in
mov
xlat
testb
push
add
or
into
xchg
daa
or
stc
or
mov
aam
mov
jg
add
jbe
mov
cmp
adc
dec
imul
jnp
add
fistps
mov
out
lcall
push
add
pop
stos
mov
ret
adc
push
add
jo
in
inc
add
add
cmpsl
clc
jle
adc
sbb
mov
mov
add
cltd
dec
or
add
fdivrl
mov
pop
fdivp
cwtl
rolb
dec
lcall
cld
cmp
lock
dec
or
loope
sub
jne
mov
inc
aad
jp
and
jl
mov
or
rol
inc
add
adc
sbb
add
add
mov
dec
push
and
lock
push
add
and
add
dec
stc
dec
jae
mov
add
stos
add
fs
mov
sub
pop
lods
nop
add
testb
inc
add
stos
enter
dec
arpl
dec
icebp
test
mov
add
adc
inc
add
rol
add
mov
add
mov
cmp
mov
scas
mov
push
rolb
add
loope
pop
push
push
add
aaa
cwtl
imul
cwtl
mov
je
push
fsubrl
add
jb
mov
mov
add
mov
and
mov
jb
mov
add
mov
incb
add
out
add
push
add
add
mov
arpl
leave
pop
xchg
cmpsl
in
inc
jecxz
add
bound
mov
std
repz
mov
add
out
pusha
add
xor
insb
les
pop
dec
jnp
cs
jle
jl
add
cs
lods
loopne
mov
inc
lcall
aas
add
add
add
scas
xor
mov
adc
daa
jmp
pop
in
lahf
push
sub
pop
arpl
cmp
push
add
jp
or
add
add
add
push
sub
mov
xor
inc
add
sbb
gs
ja
cs
pop
lret
movsb
add
divl
add
add
xchg
add
push
add
lret
mov
stos
js
add
add
sbb
add
add
push
add
stos
push
add
add
add
or
add
push
add
sub
mov
nop
add
add
fdivrs
out
into
ja
scas
ljmp
and
stos
dec
xor
lock
and
add
lret
mov
in
add
xor
jne
aas
add
mov
out
jg
or
add
add
cmp
add
jmp
dec
ret
pop
pop
jg
add
add
mov
pop
sbb
mov
sub
add
push
jmp
cmpsl
inc
add
jecxz
add
jno
inc
add
movb
test
pop
mov
jnp
cmp
rolb
roll
lret
inc
add
shll
mov
fstpt
adc
adc
mov
add
icebp
addb
jnp
jmp
mov
mov
movsb
add
xlat
fidivrl
add
mov
mov
xchg
out
sub
out
sub
addb
adc
outsb
ret
mov
fs
add
and
jae
add
mov
xchg
lea
or
pusha
add
inc
stos
cmp
add
xor
addb
sbb
das
jno
je
sbb
mov
std
repnz
sbb
mov
fsubl
aas
rolb
mov
xor
pop
cmp
xor
dec
pop
jnp
std
popa
jae
pop
xchg
add
push
icebp
rcr
mov
getsec
inc
add
scas
das
incb
add
mov
bound
mov
mov
xor
dec
cwtl
jnp
lea
ds
ret
sbb
add
test
sub
pop
add
mov
push
mov
add
add
hlt
add
add
add
add
add
add
add
dec
loope
lea
add
aad
mov
dec
jge
add
add
sbb
add
out
fstpl
test
and
mov
add
adc
mov
inc
add
xchg
mov
cld
jnp
push
outsl
fdivp
addb
add
add
add
mov
sbb
cmp
stc
pop
lahf
mov
insl
leave
adc
cld
fsts
lock
addb
loope
jp
sub
sbb
add
sub
dec
xor
int
push
add
cmpsb
add
cmpsl
divl
inc
add
add
inc
lret
xor
cmpsb
add
add
pop
sbb
aam
or
sub
sbb
add
sbb
add
lcall
add
sahf
xchg
int
and
inc
clc
lret
pop
pusha
add
mov
fcmove
cli
or
push
add
repnz
sti
mov
mov
cmp
inc
add
inc
add
mov
enter
add
je
push
xchg
or
add
cmpsb
add
mov
cli
adc
mov
fldenv
cwtl
cltd
fidivrl
pop
dec
loopne
lock
inc
dec
stos
dec
jb
inc
add
stc
inc
add
add
add
cs
fwait
mov
movsb
add
xchg
add
fwait
sbbl
push
add
insb
stc
repz
subl
add
out
data16
loop
iret
lahf
fst
data16
je
fdivs
dec
push
add
sarl
test
add
push
add
jae
dec
hlt
add
cmpsb
add
add
sub
push
std
push
inc
and
je
in
roll
popa
sbb
add
push
add
out
fwait
inc
mov
add
add
in
push
mov
add
jnp
add
mov
int3
cmp
lcall
and
repz
add
add
xchg
add
les
push
add
mul
add
adc
fstpl
ja
adc
push
add
pop
xor
pop
cmp
jmp
movb
pop
mov
push
outsl
leave
lods
sub
rolb
sbb
fsubrs
out
aas
pop
dec
mov
fistpll
adc
rolb
movsl
cmp
add
push
add
xor
stos
jo
mov
sbb
mov
fcompl
and
in
fs
mov
add
or
add
and
fstl
mov
pop
pusha
add
in
jne
add
add
mov
jbe
mov
sbbl
cmc
dec
push
add
mov
adc
and
lea
mov
add
ds
insb
xchg
mov
jp
add
leave
fsts
add
xor
add
mov
cmpsb
add
mov
mov
je
add
mov
xor
or
add
jo
sub
lds
pusha
add
dec
inc
add
add
mov
in
arpl
add
add
rolb
out
cld
dec
mov
add
pop
jae
add
pusha
add
in
data16
daa
ss
mov
mov
add
mov
leave
in
pop
push
and
mov
dec
addb
pop
movsl
inc
add
rcll
add
aaa
inc
add
bound
mov
cmc
or
loopne
cltd
andl
add
sub
add
out
stos
orl
add
mov
push
add
add
add
xor
in
sbb
cmc
xchg
dec
mov
add
xchg
add
mov
xor
xor
and
add
nop
add
add
add
and
mov
push
sbb
cld
hlt
add
cmp
add
adc
pop
repnz
xchg
aaa
jae
xchg
add
xchg
rolb
mov
mov
popf
lock
add
add
lahf
xchg
hlt
add
add
lock
stos
imul
nop
add
sbb
lock
lods
jns
pop
mov
sub
add
addr16
jp
dec
mov
push
sub
add
mov
fildll
add
add
jo
cmpsl
aad
imul
mov
cmpsb
add
add
add
bswap
jge
cmp
cwtl
jne
je
cld
add
mov
lock
add
mov
jb
lahf
sub
xor
rolb
testb
add
rolb
xchg
out
jae
mov
add
add
add
std
or
xor
sbb
dec
es
loope
add
mov
cmp
add
add
or
movb
cli
lret
stos
inc
add
add
or
and
mov
xchg
cli
pusha
add
jb
out
js
add
icebp
mov
inc
add
mov
add
inc
iret
xchg
add
push
add
add
mov
testl
mov
mov
adc
add
add
stos
rolb
aad
add
jecxz
mov
pusha
add
add
out
or
inc
add
sbb
add
cltd
lahf
jl
mov
testb
cli
stc
xchg
and
mov
xor
daa
outsl
test
add
fildl
add
pop
in
mov
push
add
add
ficoml
mov
xchg
add
or
xlat
xor
outsb
sbb
or
sahf
cmpsl
flds
aaa
push
and
push
add
mov
sub
add
fisttpll
xchg
mov
pop
mov
ljmp
jp
mov
add
add
jo
in
add
mov
lahf
loopne
movb
fistpl
movl
std
outsb
ja
cltd
ljmp
incb
add
add
add
add
andl
push
mov
add
add
call
data16
nop
add
add
mov
and
mov
cmpsb
add
add
sbb
pop
std
inc
mov
and
and
add
add
cltd
mov
add
inc
add
jae
sub
or
jmp
mov
int
daa
jle
add
aaa
xchg
add
pushf
adc
xchg
fwait
mov
add
push
in
les
xorl
sub
jo
les
sbb
aaa
mov
jle
add
push
add
xchg
add
inc
add
add
hlt
add
cmp
xor
or
adc
fdiv
add
dec
mov
add
pop
inc
add
sbb
in
fwait
mov
add
or
add
stos
sbb
push
add
dec
shll
adc
sbb
mov
mov
cld
loopne
cmp
scas
leave
out
mov
pop
add
arpl
xor
outsl
jne
mov
add
pop
scas
jno
mov
add
mov
fisttpl
mov
push
imul
add
mov
add
pushf
push
mov
jnp
stc
mov
data16
xor
dec
jo
mov
movsl
mov
int3
rolb
addr16
mov
sti
popf
and
mov
mov
sbb
add
stos
lret
sbb
xchg
add
cmp
add
add
cwtl
cwtl
push
mov
ja
push
jbe
out
cmpsl
int3
jo
xchg
in
pop
ja
xor
das
js
or
add
add
push
add
pop
leave
jnp
nop
add
cltd
enter
xchg
mov
push
add
add
ret
int
testb
lock
add
repz
adc
movsb
add
outsl
mov
jmp
push
add
add
jecxz
push
stc
dec
xchg
fsub
add
hlt
add
pop
dec
adc
jl
movaps
add
mov
add
and
cmp
rolb
mov
mov
push
lret
and
mov
js
sbb
hlt
add
daa
ret
dec
int
mov
stos
pop
mov
jmp
dec
out
fildl
ja
shll
loopne
adc
xchg
inc
add
adc
ror
push
mov
addb
add
js
add
rcrl
lcall
mov
ficompl
lds
jns
add
mov
xor
out
arpl
add
out
iret
pop
je
xchg
fstps
fsubs
imull
loop
cmp
mov
data16
add
mov
lods
ret
leave
cmp
add
gs
push
add
add
lret
mov
mov
mov
cltd
aad
into
mov
jp
leave
decb
aas
popa
cmp
dec
mov
add
std
hlt
add
jge
out
std
lahf
push
iret
push
add
inc
xor
push
or
xchg
add
add
push
add
add
sub
add
or
add
fisttpl
xchg
mov
add
das
jg
add
in
jns
addb
add
cld
mov
add
xchg
push
and
xor
dec
lret
or
bound
mov
jecxz
mov
add
jbe
repnz
push
add
or
mov
add
mov
xor
stos
in
iret
adcl
dec
stc
repnz
add
cmp
jg
movb
dec
xor
enter
sysret
fsubp
and
xor
add
xor
sti
jbe
and
mov
jae
add
leave
cmc
addr16
add
leave
movb
xor
mov
rolb
popf
push
cltd
into
add
mov
add
push
jno
or
sub
pop
and
add
jecxz
add
xchg
adc
dec
inc
add
jns
push
add
push
add
ss
add
cmp
xchg
jns
add
mov
add
fcoms
add
mov
add
add
test
addb
scas
subl
nop
add
xor
xor
arpl
add
loop
mov
dec
data16
xchg
add
add
mov
daa
lcall
mov
add
sub
mov
add
add
inc
movb
bound
mov
lret
add
add
cmpsb
add
add
fadds
ja
add
inc
add
ljmp
add
add
rolb
fwait
cltd
insb
cmp
jb
xchg
add
add
add
add
dec
mov
or
les
sub
rolb
push
add
mov
jmp
les
ret
jmp
xchg
add
pop
insl
jo
push
sub
add
add
pop
cli
add
mov
xchg
lcall
add
pop
imul
mov
sti
addb
xor
addb
add
mov
jle
add
add
pop
push
test
ret
jnp
insb
bound
mov
add
insb
xor
aam
cmp
add
add
bound
mov
add
inc
add
xorl
add
daa
hlt
add
add
add
add
pop
std
jae
xor
ret
add
add
jb
mov
cmpsl
sbb
test
xor
add
fwait
xchg
xchg
or
add
mov
lods
pop
fsubrs
add
xchg
add
pop
or
in
cmp
mov
jnp
dec
fnstsw
add
add
pop
mov
dec
jg
add
sti
test
and
stc
or
adc
scas
sbb
add
jle
int3
push
mov
xchg
enter
add
add
mov
add
add
out
leave
testl
add
call
add
add
jmp
add
sbb
jmp
xchg
cmp
cld
and
sbb
addb
repnz
mov
imul
add
xchg
repnz
add
mov
push
gs
add
aad
cmpsb
add
daa
sahf
data16
mov
xchg
nop
add
lret
and
mov
fdivrp
adc
loopne
xor
add
add
sbb
test
leave
or
sbb
outsb
clc
lret
inc
add
cmpsl
fisubs
mov
add
add
dec
mov
test
cmp
xor
insb
into
aam
lcall
add
dec
jb
or
jg
xor
ja
dec
insl
pop
ror
sbb
add
push
jecxz
mov
jecxz
add
push
xchg
mov
imul
ss
push
add
add
add
stos
popa
test
add
lds
scas
data16
jnp
jle
adc
push
mov
add
in
xor
add
fmuls
xor
cmp
inc
add
add
add
add
cmpsl
xchg
add
add
jae
add
or
cli
aad
in
xchg
add
jno
iret
jns
fildl
cmp
pop
sub
aaa
push
xor
pusha
add
and
mov
lahf
call
mov
pop
loope
ja
xchg
repz
je
pop
push
mov
jo
scas
or
popf
and
mov
add
test
fistpll
add
add
cmp
jns
sbb
pushf
jge
mov
add
in
ret
mov
cmc
into
jb
sbb
add
mov
insb
inc
add
add
add
add
or
mov
mov
loope
push
add
mov
add
imul
add
add
sbb
dec
cmp
add
or
add
add
fwait
adc
pop
data16
jle
add
stos
fwait
add
fwait
mov
pop
cltd
jecxz
add
lea
add
lods
stos
imul
push
outsb
jo
jns
addb
add
add
add
add
rolb
mov
sub
sbb
and
mov
lret
mov
pop
add
add
push
add
add
jb
cwtl
cli
jge
or
pushf
mov
add
and
mov
push
add
add
jb
cmp
push
jno
add
add
mov
in
cwtl
sti
dec
das
inc
and
add
add
shrl
data16
daa
in
inc
add
add
pop
and
mov
add
xchg
add
add
xchg
add
add
imul
repnz
dec
dec
dec
repnz
or
inc
add
mov
sub
test
push
sub
add
jne
add
mov
add
add
or
gs
dec
das
sbb
call
or
es
add
jmp
push
pop
fldenv
insb
outsl
fnstsw
inc
mov
incb
dec
or
in
xchg
cmp
add
leave
cltd
cli
sub
iret
int3
out
mov
cld
adc
dec
cmp
push
add
add
cmp
nop
add
pop
jge
popa
out
inc
jle
lods
mov
int3
pop
push
aaa
pop
jp
mov
add
lds
dec
sbb
jmp
jle
add
push
xchg
mov
inc
add
mov
les
in
pushl
js
and
mov
add
and
mov
and
mov
adc
adc
sbb
xchg
add
cmp
add
mov
adc
jae
push
mov
jno
add
add
mov
mov
cmp
xor
int
add
xchg
ljmp
and
lods
pushf
sbb
add
inc
sbb
dec
pop
cmp
push
stos
push
add
ret
js
add
lahf
sbb
add
int
xchg
cli
scas
sarl
addb
cld
push
add
pop
adc
cmp
lds
mov
add
add
xor
outsb
loopne
dec
jae
gs
stos
xor
cmpsb
add
add
sbb
xchg
pusha
add
add
mov
jbe
sub
pop
push
add
add
popl
test
scas
pop
rolb
sbb
icebp
push
add
out
dec
std
pushf
int3
push
dec
dec
pop
arpl
add
mov
add
mov
inc
add
add
add
xchg
mov
lret
fistpl
lods
push
insb
pop
xchg
insb
aad
mov
les
mov
mov
add
fcomi
std
mov
lahf
dec
cmp
rolb
cmp
ret
sub
rolb
fisttps
fcom
add
into
mov
xchg
add
pop
xchg
xor
add
add
xlat
test
iret
ss
add
mov
mov
add
xchg
add
cmp
add
add
add
icebp
rol
call
mov
add
shrl
out
add
add
jmp
das
mov
adc
out
out
enter
pop
scas
js
xor
lods
push
add
out
cmp
pop
call
fidivs
add
pop
sbb
add
jecxz
ret
inc
add
mov
scas
bound
mov
lods
jmp
add
add
mov
xor
enter
pop
popf
push
sub
jb
mov
and
cmp
add
add
push
nop
add
rol
into
and
fs
push
add
sti
imul
pop
fnstcw
xchg
cmpsl
sti
out
adc
sub
insl
outsl
pusha
add
imul
adc
fmull
mov
push
add
repnz
and
les
in
lds
mov
add
cs
add
leave
nop
add
add
mov
imul
push
pop
jb
hlt
add
movsb
add
push
add
add
xchg
add
mov
add
or
add
mov
add
push
add
daa
fbld
add
clc
inc
add
lods
data16
testb
sarl
into
jmp
in
cmc
and
mov
mov
stc
shrl
ljmp
popa
test
loopne
pop
lret
aad
stos
jns
and
jmp
add
addb
mov
jecxz
add
add
add
fistps
mov
je
sbb
test
fstpl
pop
lock
mov
pop
popf
popf
xor
scas
mov
jle
add
add
data16
add
add
xor
inc
add
add
mov
jg
rorl
std
mov
rcrl
push
add
test
mov
cmpsl
or
std
jae
sbb
and
movsb
add
add
add
add
inc
mov
arpl
xchg
add
cmp
sbb
lock
add
movzbl
jg,pt
das
jo
push
loop
mov
out
mov
imul
add
loopne
movsl
xchg
hlt
add
jb
sbb
mov
jge
add
insb
loop
and
shr
xchg
mov
jg
loope
fisttps
scas
xchg
xor
shl
rolb
imul
into
into
popf
scas
jbe
inc
mov
dec
push
add
add
add
add
cmp
add
push
lret
add
lret
cmpsl
pop
dec
sub
sahf
push
add
push
add
outsl
fwait
jg
cmp
add
rolb
sahf
mov
push
in
data16
add
add
add
add
mov
push
add
add
loope
add
mov
adc
push
add
mov
adc
or
and
mov
add
mov
fwait
shll
loopne
xchg
add
inc
add
sldt
mov
adc
in
testb
add
jne
push
mov
and
sti
adc
push
ljmp
and
and
add
in
setbe
mov
popa
mov
add
add
cmpsl
push
add
add
mov
dec
cmpsb
add
pop
cmpsl
add
mov
add
aad
add
add
add
push
testl
aad
dec
or
das
adc
mov
or
sbb
add
repz
bt
add
lds
mov
sub
cmpsb
add
or
xlat
add
add
pop
push
dec
loope
iret
mov
add
mov
push
xchg
inc
add
pop
outsb
aad
push
or
or
insb
or
or
adc
fistpl
mov
push
add
lcall
add
sti
sub
xor
jg
or
in
mov
pop
repz
inc
cltd
int
sbbl
add
pushf
in
mov
jno
hlt
add
movsl
inc
add
sti
mov
in
add
rolb
xor
jmp
add
mov
inc
add
test
pusha
add
add
pop
aad
add
add
pusha
add
lea
cltd
jle
add
cmpsb
add
add
mov
rolb
jp
cs
dec
inc
add
xor
mov
data16
mov
lret
or
lahf
cmp
dec
push
inc
add
sub
sti
cltd
fwait
mov
adc
push
add
sti
xchg
lea
add
inc
add
int
add
add
mov
repnz
xlat
mov
inc
mov
imull
add
jle
aas
iret
pusha
add
add
inc
add
xor
cwtl
and
add
add
movsl
fadd
add
pop
das
sti
add
daa
or
mov
dec
movsb
add
add
add
lea
adc
arpl
add
sub
sbb
xchg
mov
xchg
mov
scas
sahf
adc
mov
call
ds
lcall
add
add
add
fisttpl
xor
enter
jp
test
mov
sub
cmp
adc
add
daa
pop
repnz
stc
jecxz
lea
push
add
mov
pop
fistl
add
add
push
add
dec
inc
xchg
mov
add
imul
adc
popa
jmp
sti
in
jmp
push
add
add
leave
jl
adc
lods
mov
jp
add
outsl
nop
add
outsb
lods
test
xchg
aam
cmc
pop
cmp
int
sbb
add
xlat
out
push
mov
add
je
fprem
addr16
xlat
pop
push
add
into
and
mov
cmp
inc
add
add
stc
or
movsl
jno
xchg
cli
cmp
xor
cmp
cld
sub
add
sbb
sti
arpl
mov
xor
jne
add
mov
test
mov
add
add
clc
and
mov
lock
add
add
add
pop
daa
lcall
or
movsl
add
cmp
inc
or
adc
add
mov
add
add
scas
mov
int
stos
and
fnstenv
add
add
out
scas
aad
inc
add
sub
jecxz
pop
popa
dec
sbb
out
nop
add
add
push
lahf
mov
xorl
out
clc
cmp
add
push
add
inc
add
stos
aaa
cwtl
filds
icebp
les
adc
shll
dec
jbe
popf
lret
add
xlat
dec
sub
add
mov
adc
loop
js
adc
xor
addl
jns
movsl
mov
add
add
loopne
jecxz
jo
cmpsb
add
ficoml
add
and
add
xchg
add
mov
adc
je
mov
add
or
push
add
add
xor
mov
jmp
push
out
out
mov
hlt
add
add
add
adc
movb
nop
add
pop
xchg
ja
xchg
add
imul
icebp
stc
test
das
add
jg
push
add
outsb
ljmp
mov
add
add
add
or
jle
xor
xor
cmp
out
aad
test
decl
add
add
add
stc
adc
ja
mov
rcrl
ret
dec
test
add
rcrl
lods
dec
cld
or
add
adc
mov
lcall
scas
repz
add
add
add
add
add
xchg
add
xchg
bound
mov
aas
ds
arpl
mov
add
push
lods
and
sbb
mov
add
or
stos
int
stos
mov
or
out
push
out
outsl
aaa
xchg
jmp
mov
fsubl
add
jo
out
cmpl
pop
mov
das
push
add
push
mov
jp
xchg
cs
sahf
mov
lcall
dec
cmp
fidivs
add
add
push
sti
pop
sub
push
add
add
lea
push
repz
add
leave
test
icebp
xor
cmp
sahf
fldl
out
repnz
add
or
nop
add
add
ret
rolb
add
add
in
mov
or
dec
pop
int3
dec
cmp
add
out
mov
inc
add
and
mov
jg
push
add
jne
inc
icebp
cmpsb
add
and
pop
sbb
xchg
add
add
aas
hlt
add
adc
add
movsl
pop
adc
push
xchg
add
fisttpll
xchg
add
cli
xor
adc
add
add
adc
in
aad
push
fwait
setb
mov
jle
mov
jge
push
add
mov
lahf
sub
dec
or
addr16
and
popf
repz
pop
adc
ficoml
adc
add
pop
dec
cmp
dec
and
add
or
pushf
push
add
add
dec
dec
fwait
hlt
add
out
mov
jns
pop
add
xor
or
mov
stos
aam
sub
add
add
pop
lret
xor
dec
xlat
push
sbb
mov
xor
rolb
mov
int3
xor
jo
ficoml
add
mov
cmp
xchg
frstor
add
mov
mov
and
mov
push
notl
mov
aam
clc
mov
cmp
mov
mov
mov
add
enter
add
add
out
cs
add
jne
lea
xor
stc
test
add
add
scas
pop
fnstenv
mov
lea
or
mov
and
mov
cli
push
pop
lcall
add
lock
out
out
out
imul
add
jb
sahf
out
fldcw
add
sub
fadds
fwait
enter
jle
lcall
and
mov
js
jle
cltd
or
outsb
outsl
outsl
xlat
outsb
push
les
in
ret
pusha
add
push
leave
push
popa
push
adc
jns
test
add
js
add
iret
or
adc
jecxz
add
add
mov
add
out
out
mov
add
insl
dec
rolb
jp
dec
mov
add
mov
adc
mov
inc
out
add
mov
push
in
sub
add
sub
dec
gs
pop
push
add
add
lea
add
xor
stos
sbb
rolb
in
icebp
aaa
cmp
nop
add
mov
add
aam
add
pop
addb
in
push
pop
sub
mov
shrl
cmp
add
xchg
adc
std
das
jge
push
pop
jno
add
lods
out
stc
aas
stc
xchg
das
push
popl
cli
aaa
and
sbb
add
lock
mov
cmp
add
add
imull
cmc
pop
push
xchg
add
push
popf
jne
outsb
rolb
loope
push
push
adc
cmpsb
add
xchg
outsb
pop
xor
in
cmpsb
add
clc
popf
and
sbb
pusha
add
mov
pop
mov
lods
inc
add
add
mov
add
icebp
sub
jns
imul
xchg
jmp
adc
out
aad
add
call
sbb
dec
mov
in
xor
add
mov
mov
cwtl
and
sub
mov
test
cmp
xchg
ret
add
into
mov
data16
std
push
data16
sub
jg
add
add
add
nop
add
add
and
mov
clc
repnz
jae
add
cmpl
imul
add
add
movzwl
clc
repnz
jae
pusha
add
addb
mov
clc
repnz
jae
add
add
add
jne
clc
repnz
jae
add
xchg
cmp
push
mov
xchg
ret
sahf
jle
add
pop
into
pusha
clc
repnz
jae
add
lods
add
add
add
pusha
clc
repnz
jae
push
add
add
inc
lods
adc
mov
xchg
ret
pusha
add
add
mov
push
mov
xchg
ret
ret
add
add
pushf
xchg
add
mov
fwait
cld
nop
jmp
add
add
sub
cli
fwait
cld
nop
jmp
add
inc
shrl
mov
pop
add
clc
repnz
jae
xchg
add
jp
test
nop
jae
inc
arpl
imul
clc
repnz
jae
add
jnp
lret
pushf
insl
mov
clc
repnz
jae
addb
inc
sbb
inc
add
mov
clc
repnz
jae
and
inc
jno
mov
adc
incb
ja
inc
add
add
dec
daa
and
pop
clc
repnz
jae
fsubrs
add
sti
test
je
clc
repnz
jae
add
adc
mov
push
mov
xchg
ret
add
addb
add
add
clc
repnz
jae
jae
inc
push
mov
xchg
ret
add
add
cmp
mov
nop
jae
add
pushf
addb
push
out
mov
fwait
cld
nop
jmp
add
add
loop
push
mov
xchg
ret
gs
add
in
inc
mov
repnz
jae
add
xchg
add
or
mov
xchg
ret
add
add
add
sub
fwait
cld
nop
jmp
add
imul
mov
je
sub
repnz
jae
add
add
add
xchg
fisubrs
fwait
cld
nop
jmp
leave
cli
add
lods
jne
clc
repnz
jae
or
dec
insl
mov
fwait
cld
nop
jmp
daa
arpl
add
xbegin
aam
add
or
add
es
add
add
sub
add
add
add
jne
fwait
cld
nop
jmp
add
inc
lods
jp
clc
repnz
jae
add
add
pushf
roll
test
fwait
cld
nop
jmp
pop
jne
leave
sub
clc
repnz
jae
shlb
sbb
add
pop
clc
repnz
jae
inc
cld
daa
pop
ja
inc
add
jae
add
jae
add
jle
cli
add
imul
in
add
clc
repnz
jae
sub
and
push
outsl
call
clc
repnz
jae
add
imul
adc
add
add
fmul
add
pop
clc
repnz
jae
add
add
mulb
add
lret
clc
repnz
jae
xchg
or
lods
shr
add
mov
mov
push
mov
xchg
ret
add
add
xchg
add
add
mov
clc
repnz
jae
add
pop
add
push
mov
xchg
ret
adc
sti
mov
clc
repnz
jae
jnp
add
mov
xor
clc
repnz
jae
jno
add
inc
movsb
add
pop
adc
mov
inc
add
push
add
leave
arpl
inc
add
flds
and
and
leave
testb
jno
add
push
clc
repnz
jae
add
pushf
ja
add
pushaw
add
arpl
repnz
jae
test
out
and
pop
nop
push
mov
xchg
ret
pusha
inc
add
dec
fwait
cld
nop
jmp
add
pushf
sahf
push
cld
lods
lcall
push
push
mov
xchg
ret
and
mov
add
push
push
mov
addl
add
add
jle
movsl
ret
mov
inc
pop
decl
push
mov
xchg
ret
pushf
add
test
pushf
sub
clc
repnz
jae
add
add
xor
clc
repnz
jae
adc
data16
mov
and
repnz
jae
lods
or
lret
ret
mov
nop
jae
sahf
add
add
cld
or
jmp
sub
push
add
nop
add
addl
dec
fwait
cld
nop
jmp
sub
lods
pop
add
sbb
add
std
dec
add
inc
lcall
clc
repnz
jae
test
add
insl
add
fwait
cld
nop
jmp
add
dec
add
mov
fwait
cld
nop
jmp
jae
and
jno
cmp
mov
repnz
jae
adc
fwait
add
xchg
push
mov
xchg
ret
add
sub
push
mov
xchg
ret
sahf
inc
add
add
iret
add
clc
repnz
jae
jne
fcomip
rolb
cmc
cwtl
cmp
fwait
cld
nop
jmp
add
add
add
xchg
inc
add
add
and
clc
repnz
jae
lret
add
inc
lahf
mov
clc
repnz
jae
add
sbb
jne
clc
repnz
jae
es
jnp
add
mov
xchg
ret
add
jle
inc
inc
push
repnz
add
add
repnz
jae
add
push
add
popa
add
repnz
jae
sub
add
add
add
push
clc
repnz
jae
add
add
inc
arpl
loopne
add
cld
pushf
daa
pop
add
or
loop
cld
nop
jmp
inc
add
add
mov
fwait
cld
nop
jmp
pusha
add
stos
mov
clc
repnz
jae
inc
push
and
notl
add
push
mov
xchg
ret
add
add
mov
jae
leave
data16
out
mov
mov
nop
jmp
add
add
inc
jne
add
mov
push
push
mov
xchg
ret
add
add
ret
sbb
inc
and
repnz
jae
add
add
leave
pushf
jp
push
mov
xchg
ret
add
adc
add
jle
sub
nop
jae
add
add
add
xchg
dec
add
fwait
cld
nop
jmp
adc
mov
mov
xchg
ret
add
add
add
add
add
out
out
clc
clc
repnz
jae
ficomps
clc
repnz
jae
inc
push
add
add
aad
add
fwait
cld
nop
jmp
cmp
add
sub
add
repnz
jae
sti
add
movzwl
clc
repnz
jae
push
add
fcomp
testl
add
leave
add
adc
push
add
int3
mov
clc
repnz
jae
add
jno
cmp
test
repnz
jae
add
clc
repnz
jae
add
inc
pushf
add
addb
rol
push
mov
xchg
ret
add
pushf
rclb
mov
nop
jae
add
adc
add
mov
xchg
ret
add
add
xor
mov
fwait
cld
nop
jmp
es
add
and
mov
inc
mov
call
clc
repnz
jae
cmpb
mov
add
add
stc
cmpl
fwait
cld
nop
jmp
add
lods
fwait
add
add
clc
repnz
jae
add
add
sahf
int3
pusha
clc
repnz
jae
add
mov
add
add
jbe
jmp
imul
and
sti
add
add
mov
loopne
or
cmp
clc
repnz
jae
mov
add
jb
adc
sbb
clc
repnz
jae
or
add
add
out
rep
clc
repnz
jae
test
pop
adc
add
jne
subl
clc
repnz
jae
add
add
add
repnz
jae
add
add
pusha
push
mov
xchg
ret
filds
add
adc
adc
add
fwait
cld
nop
jmp
lods
push
add
adc
enter
repnz
jae
sbb
cmp
and
clc
repnz
jae
add
sti
sar
or
fwait
cld
nop
jmp
jae
lret
add
add
add
lcall
add
add
add
mov
adc
add
clc
repnz
jae
add
add
fisttps
test
add
fwait
cld
nop
jmp
inc
and
mov
push
mov
xchg
ret
add
and
add
cmpl
push
or
add
add
pop
lea
fwait
cld
nop
jmp
sbb
push
add
add
repnz
and
clc
repnz
jae
add
add
daa
xchg
fisttps
repnz
jae
inc
dec
jnp
dec
xchg
add
mov
add
clc
repnz
jae
leave
mov
lods
add
push
mov
xchg
ret
inc
imul
push
mov
xchg
ret
sahf
inc
adc
shr
fwait
cld
nop
jmp
mov
sahf
fiadds
jno
jns
rclb
xlat
rolb
xchg
ret
push
add
sti
mov
outsb
and
fwait
cld
nop
jmp
pop
adc
add
inc
add
pop
add
xor
clc
repnz
jae
add
pop
add
clc
repnz
jae
sahf
add
mov
push
clc
repnz
jae
adc
add
push
add
mov
mov
xchg
ret
add
add
inc
test
repnz
jae
inc
add
add
add
pop
fwait
cld
nop
jmp
add
add
add
xchg
push
imul
loopne
mov
xchg
ret
add
add
mov
repnz
jae
add
adc
add
jmp
inc
add
add
ds
clc
repnz
jae
and
add
inc
add
movsl
xlat
xor
add
lock
out
jne
clc
repnz
jae
add
outsw
add
clc
repnz
jae
fistps
leave
add
les
inc
test
fwait
cld
nop
jmp
sti
fiadds
add
jne
adc
push
mov
fwait
cld
nop
jmp
push
adc
sti
add
stc
mov
push
mov
xchg
ret
testb
add
pop
not
clc
repnz
jae
adc
add
push
pop
or
repnz
jae
cld
add
add
sub
pop
add
arpl
add
jge
ljmp
add
jne
push
add
mov
xchg
ret
add
rorl
pop
pushf
fidivrl
clc
repnz
jae
jae
add
call
fwait
cld
nop
jmp
sub
mov
jb,pt
fwait
cld
nop
jmp
lods
add
add
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
mov
or
clc
repnz
jae
add
data16
testb
add
inc
add
sbb
add
add
shlb
clc
repnz
jae
cli
pushf
add
add
add
je
clc
repnz
jae
pop
inc
add
mov
clc
repnz
jae
jle
push
add
add
fwait
cld
nop
jmp
jae
inc
sbb
inc
filds
clc
repnz
jae
sbb
add
ret
inc
std
dec
fwait
cld
nop
jmp
add
add
add
loopew
in
xor
clc
repnz
jae
roll
add
lcall
cmp
nop
jae
rolb
add
xor
fwait
cld
nop
jmp
ja
sti
add
add
add
bound
mov
cld
nop
jmp
add
inc
sub
push
arpl
clc
repnz
jae
and
in
mov
clc
repnz
jae
add
xchg
inc
add
xor
clc
repnz
jae
add
gs
xor
push
mov
xchg
ret
add
leave
jno
pop
jne
push
push
mov
xchg
ret
data16
add
add
add
mov
fwait
cld
nop
jmp
fimuls
add
jno
add
clc
repnz
jae
inc
add
add
daa
test
repnz
jae
add
add
add
or
gs
repnz
jae
shrl
cmp
nop
jae
pop
add
inc
add
inc
add
rclb
jmp
and
add
dec
push
add
ret
sbb
push
lret
xchg
ret
add
add
imul
sbb
add
fadds
lcall
mull
and
imul
nop
jae
inc
leave
add
inc
and
clc
repnz
jae
add
jne
add
add
scas
add
fwait
cld
nop
jmp
inc
add
inc
add
jns
clc
repnz
jae
add
filds
filds
mov
mov
xchg
ret
sub
add
aaa
bound
mov
mov
pop
inc
clc
repnz
jae
ja
add
ja
add
clc
repnz
jae
add
sti
rcll
leave
add
add
je
in
lods
push
mov
xchg
ret
pushf
add
je
mov
repnz
jae
add
or
cmc
inc
add
sahf
add
push
clc
repnz
jae
inc
sti
jno
popa
das
mov
push
mov
xchg
ret
add
add
repnz
jae
shll
and
sti
sub
jmp
jae
add
das
dec
fwait
cld
nop
jmp
add
xchg
cld
gs
add
es
add
jne
fwait
cld
nop
jmp
add
out
add
inc
sbb
xchg
add
clc
repnz
jae
mov
testb
mov
repnz
jae
add
sub
add
clc
repnz
jae
add
add
pop
clc
repnz
jae
inc
add
add
add
test
add
mov
clc
repnz
jae
pop
orb
nop
jae
add
negb
lret
data16
roll
xchg
ret
lcall
or
nop
jmp
cli
add
dec
add
or
leave
inc
add
add
add
push
lods
sub
clc
clc
repnz
jae
add
adc
les
mov
xchg
ret
inc
lods
mov
inc
add
lea
clc
repnz
jae
add
adc
jg
clc
add
incl
add
shrl
les
repnz
jae
add
add
nop
jmp
mov
adc
scas
pop
clc
repnz
jae
add
add
dec
add
xchg
add
sar
repnz
jae
sti
inc
adc
cld
add
mov
repnz
jae
dec
add
fdivs
add
add
clc
repnz
jae
add
and
out
add
mov
xchg
ret
cmp
inc
add
pop
push
add
arpl
add
leave
inc
lret
cmp
popa
add
mov
xchg
ret
ja
jnp
fsubs
cs
clc
repnz
jae
data16
add
dec
add
mov
inc
loopne
repnz
jae
imul
les
icebp
cwtl
push
push
mov
xchg
ret
rcrb
push
add
and
push
mov
xchg
ret
add
add
push
daa
int
push
mov
xchg
ret
add
add
adc
icebp
incl
and
jle
dec
add
nop
jae
add
ror
add
test
cld
nop
jmp
lods
or
add
jnp
add
jne
fwait
cld
nop
jmp
fdivp
arpl
outsl
add
push
mov
xchg
ret
add
je
add
fildl
xchg
ret
pop
mov
inc
jnp
adc
xchg
add
push
clc
repnz
jae
mov
add
add
ret
add
sub
inc
add
inc
ja
cmp
clc
repnz
jae
add
add
out
xor
clc
repnz
jae
data16
add
mov
xchg
ret
add
add
and
clc
repnz
jae
add
pop
add
add
clc
repnz
jae
sub
mov
push
mov
xchg
ret
add
add
test
fwait
cld
nop
jmp
fdivrs
sub
add
mov
xchg
ret
add
dec
pop
add
pop
clc
repnz
jae
jne
lods
imul
mov
push
mov
xchg
ret
jle
test
pop
icebp
shll
push
add
nop
jae
inc
add
add
sti
addb
movswl
clc
repnz
jae
add
div
fwait
cld
nop
jmp
pushf
jno
ja
lcallw
rolb
add
clc
repnz
jae
add
add
dec
add
cld
nop
jmp
add
and
add
pop
stos
push
fwait
cld
nop
jmp
mov
jne
adc
push
ja
pusha
fwait
cld
nop
jmp
add
pushf
add
adc
add
mov
clc
repnz
jae
add
sbb
lcall
add
pushf
fwait
jle
inc
add
shll
repnz
jae
add
add
adc
add
pop
push
mov
sbb
xchg
add
xor
pop
add
add
push
pushf
mov
je
js
cld
nop
jmp
add
jnp
rolb
add
clc
repnz
jae
lret
add
add
push
cli
lds
out
inc
add
cmp
add
repnz
jae
add
add
jle
add
cmpsl
pop
cmp
xor
add
clc
repnz
jae
add
and
outsl
mov
clc
repnz
jae
shrl
pop
lea
fwait
cld
nop
jmp
dec
add
add
sub
fisttpll
jae
add
xchg
sti
add
pop
push
mov
xchg
ret
add
inc
add
inc
add
jl
clc
repnz
jae
add
dec
push
add
add
jbe
clc
repnz
jae
sbb
add
fsubr
and
clc
repnz
jae
imul
clc
repnz
jae
test
add
jle
push
nop
jmp
add
add
add
add
jb
add
aad
add
popa
add
add
movzwl
clc
repnz
jae
mov
add
add
mov
clc
repnz
jae
jno
adc
imul
add
add
repnz
incl
xchg
sbb
add
add
addr16
push
mov
xchg
ret
fwait
add
xor
sub
mov
xchg
ret
add
pushf
add
cld
lret
xchg
xchg
lcall
cld
nop
jmp
pushf
rolb
add
call
clc
repnz
jae
add
add
jl
pop
lcall
adc
add
add
add
add
clc
repnz
jae
lcall
movzwl
clc
repnz
jae
es
add
mov
jae
dec
add
fistpll
jmp
push
jnp
add
add
push
mov
xchg
ret
add
add
fwait
add
add
add
add
inc
push
mov
xchg
ret
add
add
add
pushf
mov
push
mov
xchg
ret
add
data16
rcr
inc
add
cli
add
sti
sbb
sbb
inc
add
add
push
lretw
adc
add
mov
xchg
ret
add
add
add
mov
add
test
fwait
cld
nop
jmp
add
add
sub
clc
repnz
jae
shlb
mov
jmp
add
sub
add
add
lcall
xorl
nop
jmp
sbb
add
rolb
sub
repnz
jae
add
inc
data16
jnp
mov
clc
repnz
jae
pusha
add
lods
add
add
pop
imul
clc
repnz
jae
pop
adc
add
push
sbb
mov
adc
repnz
jae
adc
jnp
add
fidivrs
clc
repnz
jae
pushf
add
add
jbe
inc
add
add
jae
mov
repnz
jae
add
push
pushf
outsl
pop
push
mov
xchg
ret
add
jne
data16
cmp
repnz
jae
cmp
add
add
inc
mov
nop
jae
mov
mov
add
rcrb
add
inc
inc
add
fwait
gs
stos
push
mov
xchg
ret
inc
jne
rolb
fildll
jae
jle
inc
sti
inc
lcall
mov
inc
add
data16
add
imul
repnz
jae
add
dec
inc
pushf
add
fwait
xchg
dec
push
clc
repnz
jae
pop
adc
xor
push
jae
add
pushf
add
add
sub
mov
mov
mov
popa
mov
fstl
repnz
jae
add
jle
or
sbb
add
fwait
cld
nop
jmp
add
sub
nop
jae
imul
add
andl
jae
pop
add
add
scas
enter
jmp
adc
imul
add
nop
jae
add
add
cld
add
and
mov
jne
clc
repnz
jae
add
add
add
mov
fwait
cld
nop
jmp
push
jno
cld
lcall
clc
repnz
jae
add
inc
pusha
shll
add
nop
jae
jae
cld
cli
inc
fwait
arpl
push
scas
push
push
mov
xchg
ret
fdivr
push
pusha
adc
push
push
mov
xchg
ret
mov
cltd
je
clc
repnz
jae
fdivrs
lcall
xchg
idiv
jmp
add
add
popa
fwait
cld
nop
jmp
cld
mov
fwait
add
inc
mov
jmp
fldl
xchg
ret
add
dec
add
jae
add
push
mov
xchg
ret
add
add
push
mov
shl
add
mov
scas
xor
or
nop
jae
pushf
add
push
mov
xchg
ret
add
sahf
dec
add
jno
mov
decl
mov
daa
add
push
add
add
repnz
jae
pushf
add
daa
jnp
jmp
fwait
cld
nop
jmp
add
cli
sub
sub
push
mov
xchg
ret
leave
add
push
call
nop
jmp
and
add
ljmp
add
mov
add
jbe
add
clc
repnz
jae
ja
push
push
mov
xchg
ret
add
sti
push
clc
repnz
jae
add
add
add
push
push
mov
xchg
ret
rolb
jnp
cmp
jg
clc
repnz
jae
pop
add
popl
clc
repnz
jae
fdivrs
add
and
loopne
add
pushf
jae
and
nop
add
mov
clc
repnz
jae
xchg
add
add
idiv
add
clc
repnz
jae
test
jae
add
cmp
clc
repnz
jae
add
cld
mov
ljmpw
and
add
or
add
pop
clc
repnz
jae
inc
add
add
leave
js
add
clc
repnz
jae
add
out
leave
inc
add
xabort
nop
jae
pushf
cli
add
jae
leave
push
push
mov
xchg
ret
and
add
add
sub
add
repnz
jae
add
inc
fiadds
push
mov
xchg
ret
add
add
testb
xor
clc
repnz
jae
inc
cmp
add
sbb
inc
add
arpl
add
andb
gs
mov
add
clc
repnz
jae
add
add
data16
movzwl
clc
repnz
jae
sti
cli
add
leave
mov
repnz
jae
add
filds
add
mov
add
mov
call
clc
repnz
jae
roll
add
fsts
mov
xchg
ret
add
sub
fisttps
jmp
adc
push
add
inc
and
fwait
add
fwait
cld
nop
jmp
add
inc
add
add
add
repnz
jae
add
shlb
dec
sub
in
push
sbb
lock
xchg
cli
mov
add
pushl
push
mov
xchg
ret
add
lcall
mov
xchg
ret
add
dec
xchg
add
mov
mov
clc
repnz
jae
add
cli
shll
mov
clc
repnz
jae
jae
inc
add
nop
jae
pop
pushf
filds
jno
in
cmpl
fwait
cld
nop
jmp
add
jne
add
xchg
clc
repnz
jae
add
add
dec
jno
fiadds
add
jmp
nop
jae
add
fwait
cld
nop
jmp
fwait
add
sub
je
clc
repnz
jae
pushf
push
pop
sub
movsb
clc
repnz
jae
imul
and
loope
repnz
jae
daa
gs
ret
mov
movsb
push
mov
xchg
ret
add
add
add
popf
imul
clc
repnz
jae
add
add
adc
add
cmp
xor
add
clc
repnz
jae
add
leave
mov
push
mov
xchg
ret
leave
jnp
or
cmpsb
add
cmp
fwait
cld
nop
jmp
test
add
mov
into
mov
push
mov
xchg
ret
lret
dec
out
inc
add
mov
fwait
cld
nop
jmp
adc
push
add
add
mov
add
sti
call
inc
add
and
clc
repnz
jae
add
inc
add
in
mov
xchg
ret
ret
pop
add
lret
xchg
mov
and
push
mov
xchg
ret
add
dec
jae
push
add
add
clc
repnz
jae
add
sbb
add
stc
popa
clc
repnz
jae
adc
ja
add
add
push
pop
mov
clc
repnz
jae
arpl
js
int
pop
jae
repnz
jae
mov
add
add
fwait
cld
nop
jmp
sub
add
dec
mov
add
leave
jmp
dec
add
add
add
cmp
inc
ret
fisttpll
mov
xchg
ret
add
add
jne
fwait
cld
nop
jmp
add
add
call
clc
repnz
jae
adc
or
repz
cld
nop
jmp
add
add
add
jae
data16
mov
clc
repnz
jae
test
inc
add
jno
clc
movzwl
clc
repnz
jae
lods
and
push
mov
xchg
ret
add
test
mov
push
mov
xchg
ret
lods
add
add
int
inc
lock
mov
xchg
ret
adc
leave
jne
in
fmuls
nop
jmp
add
mov
lcall
pushf
repz
add
ret
adc
jge
mov
clc
repnz
jae
xchg
push
jnp
sahf
add
jae
test
jnp
inc
add
or
mov
clc
repnz
jae
add
gs
lcall
xor
sbbl
incl
add
dec
add
add
mov
pop
icebp
inc
add
xchg
addb
add
repnz
jae
add
mov
mov
xchg
add
mov
xchg
ret
dec
leave
rcrl
add
add
repnz
jae
add
adc
jbe
jae
pop
clc
repnz
jae
add
leave
jnp
pusha
rclb
jae
leave
add
add
add
pop
ja
add
or
clc
repnz
jae
mov
add
add
repnz
jae
add
add
test
nop
jae
cli
xchg
pushf
add
clc
repnz
jae
testb
lcall
vpcmpeqw
add
mov
xchg
ret
add
add
add
clc
repnz
jae
push
inc
or
adc
mov
sar
nop
jae
add
add
jae
add
pushf
roll
ret
add
xor
xchg
add
clc
repnz
jae
add
adc
add
clc
repnz
jae
inc
inc
pusha
out
pop
push
mov
dec
xor
cltd
icebp
inc
add
add
js
adc
add
mov
clc
repnz
jae
push
add
add
repnz
jae
es
add
add
push
mov
xchg
ret
pushf
add
add
repnz
jae
lcall
pop
clc
repnz
jae
add
add
dec
cli
push
leave
cmpsb
add
add
sti
clc
repnz
jae
add
add
add
mov
add
fwait
cld
nop
jmp
add
add
dec
cmp
mov
xchg
ret
lods
add
fwait
cld
nop
jmp
mov
lret
addb
test
call
clc
repnz
jae
add
mov
clc
repnz
jae
inc
inc
repz
jmp
fwait
add
add
add
jl
enter
jae
add
fists
adc
sti
xchg
clc
repnz
jae
inc
cli
dec
add
leave
push
mov
xchg
ret
test
pusha
inc
add
pop
clc
repnz
jae
add
dec
add
add
add
inc
add
clc
repnz
jae
mov
jne
dec
mov
clc
repnz
jae
sub
cmp
add
rolb
leave
sti
add
add
add
nop
jae
rclb
dec
mov
clc
repnz
jae
inc
ret
imul
add
and
push
mov
xchg
ret
lcall
les
repnz
jae
imul
add
clc
repnz
jae
shlb
lods
add
add
or
repnz
jae
mov
add
dec
add
clc
repnz
jae
add
jne
add
jo
pop
push
clc
repnz
jae
inc
mov
out
roll
add
popa
jp
clc
repnz
jae
add
es
imul
mov
clc
repnz
jae
add
lea
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
rcrl
imul
incb
inc
out
inc
add
inc
add
adc
repnz
jae
roll
test
and
jae
add
fidivs
rcrb
add
jae
pusha
add
roll
inc
add
add
mov
clc
repnz
jae
add
data16
test
add
fwait
cld
nop
jmp
add
sub
ret
flds
nop
jae
add
add
test
test
repnz
jae
add
addb
popa
add
repnz
jae
adc
cmp
nop
jae
add
adc
add
mov
clc
repnz
jae
adc
testb
xor
scas
mov
clc
repnz
jae
push
add
add
fcoms
ret
clc
repnz
jae
pusha
push
push
add
add
leave
lods
add
clc
repnz
jae
add
fiadds
inc
add
mov
xchg
ret
and
add
shlb
out
mov
fwait
cld
nop
jmp
add
ret
xchg
lret
push
fwait
cld
nop
jmp
sti
add
add
rcll
mov
push
mov
xchg
ret
add
adc
xchg
cmc
outsb
lea
clc
repnz
jae
adc
lcall
add
lret
sti
inc
adc
add
add
push
mov
xchg
ret
add
add
or
clc
repnz
jae
adc
add
mov
clc
repnz
jae
inc
add
add
out
add
clc
repnz
jae
ja
gs
add
shl
fwait
cld
nop
jmp
add
jne
gs
es
dec
push
clc
repnz
jae
add
add
add
push
mov
xchg
ret
add
fdivrp
add
pop
fwait
cld
nop
jmp
add
add
sti
lods
inc
out
insb
push
clc
repnz
jae
add
filds
add
fwait
mov
clc
repnz
jae
add
testb
into
push
fwait
cld
nop
jmp
roll
add
insb
push
mov
add
add
das
mov
int3
push
adc
inc
add
clc
repnz
jae
add
pushf
mov
jge
clc
repnz
jae
add
adc
pushf
mov
clc
repnz
jae
ret
leave
fwait
testb
add
pop
lcall
incl
test
add
pop
decl
push
mov
xchg
ret
pop
add
add
ret
call
clc
repnz
jae
out
add
jnp
fwait
cld
nop
jmp
data16
cli
add
add
lcall
out
ljmp
rolb
aas
mov
push
mov
xchg
ret
lret
add
add
add
shr
fwait
cld
nop
jmp
ja
add
pop
mov
mov
clc
repnz
jae
add
mov
add
ret
out
mov
clc
repnz
jae
add
inc
fdivs
dec
add
clc
repnz
jae
add
add
jmp
adc
add
mov
adc
cli
inc
xchg
pop
mov
jmp
mov
xchg
ret
add
add
mov
repnz
jae
fsubs
add
push
mov
xchg
ret
or
inc
cmp
add
push
mov
xchg
ret
testb
test
outsb
pop
clc
repnz
jae
sti
add
add
sbb
ret
das
push
push
mov
xchg
ret
sub
rolb
add
add
clc
repnz
jae
pop
sti
add
mov
jae
ret
dec
data16
add
push
mov
xchg
ret
add
push
add
add
clc
repnz
jae
add
add
add
xor
aas
add
fwait
cld
nop
jmp
addb
fwait
add
mov
jae
fiadds
add
decl
clc
repnz
jae
gs
jae
add
ja
jmp
mov
add
add
jnp
add
add
lds
inc
push
mov
xchg
ret
push
sti
dec
mov
add
pop
push
mov
xchg
ret
add
sbb
add
or
repnz
jae
sub
add
pop
inc
sbbl
sbb
mov
xchg
ret
add
adc
add
push
and
add
add
hlt
add
mov
add
repnz
jae
sahf
add
pusha
add
roll
incl
clc
repnz
jae
add
jmp
out
incl
sahf
fiadds
add
lods
jnp
fwait
pushf
add
mov
clc
repnz
jae
add
imul
jecxz
incl
add
add
add
jecxz
dec
clc
repnz
jae
fadds
add
test
jae
pushf
add
fadds
cld
pushf
add
mov
shr
cld
add
add
negb
add
push
mov
clc
repnz
jae
adc
xchg
add
push
clc
repnz
jae
push
add
add
add
jae
clc
repnz
jae
add
push
arpl
add
jecxz
clc
repnz
jae
add
sub
rclb
ljmp
add
fsubs
push
ljmp
jl
jmp
inc
add
adc
mov
loop
ja
push
mov
xchg
nop
add
lods
add
add
cmpsl
mov
stos
push
push
mov
xchg
ret
lcall
pop
movzwl
clc
repnz
jae
add
add
jmp
jae
xchg
or
and
add
pop
sub
clc
repnz
jae
push
out
leave
inc
add
mov
clc
repnz
jae
sbb
add
repnz
jae
add
or
inc
fisttps
mov
xchg
ret
jnp
add
mov
xchg
ret
add
lea
clc
repnz
jae
add
pushf
add
repnz
jae
add
inc
add
add
pusha
nop
add
and
ss
clc
repnz
jae
add
test
repnz
jae
inc
arpl
repnz
jae
xchg
sti
add
add
push
add
cs
clc
repnz
jae
add
sub
subl
clc
incl
pushf
push
sub
clc
repnz
jae
or
lods
add
cmp
push
add
lods
clc
repnz
jae
add
jno
push
inc
add
repnz
add
clc
repnz
jae
pop
pusha
inc
inc
daa
xchg
gs
popa
push
mov
xchg
ret
add
add
adc
add
clc
repnz
jae
leave
add
cli
inc
out
jae
cmc
aam
lock
jne
clc
repnz
jae
add
inc
add
shrb
jo
clc
repnz
jae
add
data16
add
cld
nop
jmp
inc
jle
cli
add
inc
pusha
mov
push
cmc
mov
cmp
cmp
repnz
jae
sub
cmp
clc
repnz
jae
add
daa
adc
clc
repnz
jae
add
add
add
adc
or
nop
jmp
sbb
bound
mov
add
clc
repnz
jae
add
and
push
mov
xchg
ret
leave
add
add
mov
push
mov
xchg
ret
daa
sub
or
icebp
clc
repnz
jae
add
add
add
add
push
mov
xchg
ret
leave
add
add
add
push
push
mov
xchg
ret
imul
je
clc
repnz
jae
dec
fistps
pop
pop
push
mov
xchg
ret
inc
add
add
lods
mov
clc
repnz
jae
xchg
jnp
cld
and
mov
mov
xchg
ret
test
lret
adc
inc
xor
sub
dec
cmp
cld
nop
jmp
imul
mov
xor
push
mov
xchg
ret
inc
adc
jno
mov
mov
xchg
ret
sbb
add
push
add
rep
clc
repnz
jae
mov
add
add
lahf
rep
clc
repnz
jae
add
inc
add
push
mov
xchg
ret
sub
fiadds
dec
inc
clc
repnz
jae
add
add
push
dec
cmp
repnz
jae
add
fisubl
jbe
clc
repnz
jae
inc
add
arpl
add
cmc
out
inc
add
add
test
incl
fbld
add
pop
add
add
add
mov
stos
call
clc
repnz
jae
add
add
in
or
xor
add
clc
repnz
jae
sahf
add
cmpl
fwait
cld
nop
jmp
xchg
inc
rolb
inc
ret
add
mov
xchg
ret
es
ja
pushf
dec
and
add
add
xlat
incl
add
mov
fwait
cld
nop
jmp
add
add
add
add
div
clc
repnz
jae
add
sahf
daa
and
cmp
jmp
add
add
gs
inc
or
jae
dec
add
add
inc
add
sub
nop
jae
cli
add
sub
stos
clc
repnz
jae
test
fidivs
pushf
adc
call
add
adc
movsb
add
push
andl
push
add
add
iret
cmp
jno
popf
sbb
stos
adc
or
mov
push
add
icebp
xor
inc
mov
add
mov
add
add
or
shrl
mov
cmp
test
fisubrl
in
xchg
add
je
push
xchg
add
add
mov
add
or
push
pop
test
add
push
and
mov
fmull
insl
bound
mov
add
cmp
sub
mov
inc
push
adc
clc
arpl
or
mov
lods
fnstenv
xchg
das
ret
cwtl
cmpsb
add
or
mov
mov
in
jae
jle
das
push
icebp
mov
outsb
mov
push
aad
inc
jbe
mov
movsl
popf
add
je
dec
cmc
jb,pn
std
repz
jecxz
ja
push
add
mov
ret
hlt
add
sub
testb
lock
and
xchg
out
push
sbb
or
jns
inc
add
and
add
iret
scas
lds
add
mov
sahf
mov
iret
xchg
pop
xlat
mov
test
or
lods
pop
lahf
and
add
xchg
inc
add
daa
mov
dec
jno
arpl
add
xor
scas
mov
xchg
cs
mov
add
inc
add
jle
repnz
call
mov
add
arpl
add
sahf
xor
nop
add
fdivrs
imul
add
add
add
add
add
shll
or
add
icebp
xor
add
jne
cmp
dec
add
inc
add
mov
xor
into
add
std
leave
shl
add
aaa
mov
add
test
add
or
sbb
add
or
arpl
pop
jp
pop
inc
add
add
add
mov
cmpsb
add
movb
push
add
mov
in
sbb
dec
mov
mov
mov
add
mov
add
rolb
cltd
push
out
inc
pop
inc
pop
sbb
fsubr
test
mov
add
mov
add
add
adc
sbb
testb
cltd
push
jns
sbb
inc
add
incb
mov
jne
add
ja
ret
aad
add
add
add
add
clc
mov
mov
les
sbb
repz
xor
and
sbb
mov
out
test
repnz
mov
das
or
clc
stc
je
cld
inc
aad
sbb
shrl
int
jge
add
add
add
jle
pop
ret
fisubrs
mov
aad
add
dec
mov
mov
sbb
dec
and
gs
add
hlt
add
add
repnz
push
add
sub
int3
andl
xor
inc
test
mov
popl
mov
or
mov
xchg
add
push
add
jne
add
jno
add
add
popf
inc
add
sbb
add
add
or
nop
add
dec
enter
or
fmuls
mov
xchg
sbb
mov
xor
add
add
out
xchg
into
cld
sub
roll
add
mov
int3
push
int3
adc
xchg
rolb
mov
out
and
and
adc
add
lcall
mov
mov
add
add
lock
rcll
out
lcall
pop
testb
stos
movntq
addb
pop
adc
lock
add
jmp
dec
lea
enter
cmp
mov
mov
in
lret
fsubl
mov
or
and
fdivrp
in
and
scas
cmc
sub
cmc
je
outsb
das
or
mov
je
out
or
add
add
jbe
out
xchg
mov
addb
xchg
pop
cmp
add
add
mov
imul
add
add
push
add
mov
data16
add
add
stc
jle
xlat
vpunpckhqdq
xchg
jnp
inc
add
add
cmc
in
scas
mov
add
outsl
jne
xor
mov
jnp
je
call
fldt
movsb
add
pop
lcall
jno
dec
push
int
pusha
add
mov
xor
and
mov
cmpsl
in
cld
mov
mov
xchg
call
sbb
roll
add
add
add
push
add
ret
jge
add
sahf
push
jbe
push
add
stos
inc
add
pop
sbb
xor
cmp
xchg
add
sub
add
mov
mov
mov
ret
xor
jnp
add
fsubr
fistpl
addb
adc
pop
add
std
fdivr
mov
imul
loope
popf
test
data16
cld
sbb
add
pop
pop
mov
out
scas
mov
cwtl
push
add
xor
cltd
adc
xlat
loop
bound
mov
mov
mov
jp
fcmovnbe
sub
pop
xlat
mov
insl
pop
jp
sub
test
add
add
mov
mov
int
xchg
inc
pop
xlat
jae
add
rcll
add
pop
pusha
add
cltd
sub
jo
dec
adc
adc
testb
lea
add
loop
jne
fisubrs
pusha
add
mov
and
mov
icebp
push
inc
out
jmp
mov
mov
mov
flds
dec
sub
mov
mov
les
pushf
sub
daa
stos
mov
adc
adc
in
in
sbb
sbb
pop
mov
aam
stos
mov
sbb
imul
xor
add
adc
add
mov
add
mov
repnz
lea
and
and
add
jp
sbbl
add
mov
je
addb
pop
pop
mov
mov
imul
hlt
add
fbld
dec
testb
add
in
push
add
add
mov
je
adc
fstps
add
stos
mov
sub
arpl
add
mov
mov
add
add
mov
dec
das
aaa
push
data16
xor
mov
cltd
loopne
jo
mov
in
jg
aam
arpl
add
movb
lret
add
outsl
cli
jb
add
add
adc
add
lds
leave
flds
xchg
add
jp
scas
add
mov
mov
out
arpl
sub
xchg
stos
and
adc
int
push
mov
add
jns
add
ret
cmpsb
add
and
mov
int3
add
add
add
scas
cmpsl
pop
int
mov
cmp
cld
mov
mov
std
lock
add
sub
pminsw
xor
push
sti
sbb
mov
sbb
mov
pop
rolb
imul
inc
add
sbb
add
xor
add
bound
mov
add
adc
lds
sub
add
pop
jno
push
insl
push
mov
fsubrp
push
add
push
add
pop
mov
push
lcall
add
je
xlat
fwait
and
loope
inc
add
fsubrl
dec
fdivr
xchg
add
stos
lret
xchg
and
pop
shll
add
inc
add
icebp
outsl
dec
out
in
jp
add
push
push
adc
cmp
rolb
daa
outsb
sbb
push
push
add
lds
push
add
add
or
add
add
mov
cltd
add
pop
jge
stos
pop
addb
std
mov
sbb
sub
pop
push
add
add
pop
mov
xor
add
icebp
pop
sbb
fldenv
dec
out
push
repz
out
mov
add
or
enter
add
stos
stos
rolb
mov
lahf
xchg
call
inc
add
cmp
push
test
test
rolb
movsl
cmpsb
add
add
add
sbb
add
inc
shrl
vprotb
add
loope
loop
lea
add
add
xor
jge
add
stc
add
xor
add
add
lret
cld
or
leave
inc
push
sbb
add
mov
add
loop
jmp
add
shll
sbb
js
add
sbb
mov
add
ljmp
clc
dec
pop
mov
out
sub
scas
push
add
mov
movsl
mov
divl
rolb
xor
pop
xchg
add
jl
leave
jge
sub
mov
ja
int3
push
popf
data16
xlat
scas
aam
cmp
push
sbb
add
add
ljmp
fildl
add
imul
lcall
xor
and
mov
push
add
out
cmp
xchg
pop
in
dec
repz
adc
pop
add
int3
ficoml
xchg
inc
add
pop
cmc
cmp
mov
dec
xor
scas
pop
cli
xchg
les
sbb
add
ljmp
sub
push
add
cli
push
add
and
mov
out
mov
aam
lods
lods
pop
dec
jg
add
cli
xchg
inc
add
mov
inc
add
clc
push
add
mov
push
mov
mov
push
add
lods
ficompl
mov
ret
add
int3
sti
pop
mov
mov
cwtl
cmpsl
pop
mov
cld
rolb
aaa
mov
es
add
jecxz
xchg
dec
mov
fisttps
sub
add
mov
pusha
add
xlat
pop
sbb
add
pop
nop
add
insb
xlat
movb
or
mov
add
test
add
jecxz
add
mov
xchg
add
add
add
add
into
nop
add
push
add
sub
pop
xchg
xchg
inc
js
add
popf
jp
jg
inc
add
or
add
into
push
add
lret
loope
outsl
jo
lea
mov
sub
add
xchg
jp
adc
mov
pop
js
rolb
add
add
jg
mov
mov
popf
into
cmp
mov
push
add
add
loopne
addb
cmpsb
add
xchg
add
add
sub
leave
arpl
add
cmp
sub
add
int3
ret
rcll
rcrl
mov
mov
pop
pop
or
mov
fsubs
bound
mov
movsb
add
in
jle
stos
subl
xchg
add
ret
inc
xchg
mov
mull
jae
jbe
jnp
sbb
in
inc
add
inc
pusha
add
scas
scas
mov
xchg
mov
mov
mov
add
pop
dec
sbb
add
addb
mov
mov
push
add
movsb
add
imull
inc
mov
les
inc
cwtl
cmp
add
dec
sub
inc
fildll
xchg
add
mov
or
add
push
xor
shrl
test
xor
cmp
and
mov
or
and
mov
movsl
push
add
add
add
add
and
aaa
lret
mov
iret
ja
pop
sbb
xor
xchg
fadd
add
add
fldl
add
mov
jne
mov
inc
add
add
ret
or
leave
fildl
std
addb
add
insl
inc
add
je
stc
dec
mov
sbb
pop
dec
insl
sub
sti
loopne
in
bound
mov
lahf
pop
out
jbe
jp
push
add
add
add
and
out
bound
mov
mov
sahf
sahf
sub
add
xlat
inc
add
in
ja
xor
add
fs
pop
add
cmp
jmp
push
dec
add
mov
fsubrs
pusha
add
leave
push
add
add
push
push
add
lds
popa
std
mov
lods
xor
add
cmp
add
sub
add
fldl
add
mov
add
rolb
cmp
add
stos
cs
dec
mov
and
mov
add
add
cs
xchg
add
pop
xchg
inc
shll
xor
xor
mov
ret
inc
add
adc
mov
xor
mov
mov
mov
int
data16
movsb
add
add
sbb
insl
xor
out
xor
iret
mov
pop
mov
mov
mov
add
dec
aam
mov
lods
jno
adc
ss
cld
mov
repnz
movl
add
fwait
jbe
jo
add
xor
jne
add
add
add
pop
addb
dec
cmpsl
out
inc
add
mov
add
add
lods
sub
mov
and
ret
xchg
add
jp
add
mov
xor
test
add
movsb
add
add
icebp
rolb
fadds
add
rolb
push
add
add
lea
and
add
mov
out
cmpsl
xchg
in
fisubs
packssdw
inc
add
and
out
add
mov
mov
add
jns
sarl
or
add
cs
testb
push
add
cmp
sub
inc
imul
popf
stc
push
mov
mov
add
sub
lret
add
push
add
and
mov
add
sub
add
inc
rolb
int
mov
add
out
hlt
add
cli
mov
inc
add
loop
mov
mov
mov
add
rorl
cmp
push
add
add
jne
xor
dec
inc
mov
add
test
sub
pop
xchg
add
mov
or
addr16
add
repz
or
mov
add
jno
add
das
dec
xor
or
add
xlat
jae
cltd
decb
addr16
mov
add
pop
pop
mov
mov
pop
lods
lret
dec
bound
mov
sbb
add
add
pop
cmp
mov
add
lret
test
ret
add
mov
xor
leave
in
flds
add
inc
cmc
cmp
add
scas
and
mov
nop
add
sbb
add
shll
push
pushf
push
add
add
cmp
jle
cmpsl
dec
xchg
push
mov
add
jge
jno
xlat
int3
lods
push
add
push
out
jns
add
jge
aaa
loope
scas
mov
add
push
jno
inc
mov
add
add
popf
inc
push
add
add
jmp
sbb
add
in
add
mov
mov
dec
add
lods
repz
add
add
xchg
jb
push
add
add
cmp
les
lcall
sbb
in
inc
mov
jmp
fistl
add
repz
into
iret
xor
xchg
mov
add
add
add
incb
inc
stc
insb
cli
in
cmp
mov
sub
stos
sbb
add
lds
pop
les
movsl
stos
inc
add
add
add
add
fidivl
add
add
cmp
sub
mov
pop
sbb
inc
shll
mov
les
hlt
add
aam
cmp
inc
mov
clc
xchg
add
add
dec
out
push
add
add
add
dec
insl
out
sub
stc
loope
lods
mov
jno
add
add
ficompl
and
pop
in
ds
add
mov
xchg
mov
cmp
pop
mov
cmc
in
cmp
push
add
fnstsw
xchg
rcll
ja
imul
cmp
clc
std
add
mov
add
mov
sbb
add
testb
movsb
add
stc
and
xchg
int3
arpl
ss
add
mov
das
sbb
pop
sbb
add
dec
jae
xor
fmuls
imul
add
jge
test
jle
cs
xor
aad
sbb
add
add
inc
add
add
mov
mov
test
xchg
xor
add
xor
imul
mov
or
movsb
add
and
loopne
add
mov
push
out
xchg
out
cmp
sub
add
fisttpl
sti
cmpsb
add
dec
jo
pushf
aas
adc
add
add
add
aad
movsb
add
push
ret
inc
xor
and
xor
xor
movsb
add
add
add
sbb
add
cmp
mov
add
xor
cltd
pop
out
stc
nop
add
push
mov
addr16
inc
add
pop
les
xchg
test
roll
add
add
sbb
mov
add
mov
sub
xor
lret
cmc
push
mov
aaa
push
add
cs
cmpsl
inc
sbb
add
mov
and
or
adc
icebp
dec
dec
xchg
push
add
push
and
mov
fnstsw
push
add
add
sbb
jmp
cld
popa
sbb
imull
add
ret
loope
add
cld
pop
mov
add
add
add
sahf
rolb
movb
cmpl
mov
add
popf
repnz
jge
int3
push
add
stc
dec
insb
loopne
decl
sub
sbb
cmp
add
lods
daa
sti
jnp
leave
mov
dec
lret
sbb
jnp
push
xchg
add
dec
jp
dec
test
fldl
lods
push
filds
or
in
mov
add
jne
mov
fsubrs
add
stos
aad
pop
addb
or
add
mov
dec
dec
lcall
sub
add
mov
add
pop
inc
mov
push
add
rorl
add
int
iret
add
mov
mov
imul
adc
jbe
dec
pop
cli
cmpsb
add
add
sbb
cmc
and
mov
xor
cmp
call
mov
add
pop
int
test
xchg
or
lods
adc
fnstsw
popa
cmc
popa
add
mov
jle
add
push
add
stos
icebp
inc
fxtract
add
aam
jne
sbb
fucomi
push
cltd
pop
rolb
outsb
and
mov
insl
jae
add
clc
movb
add
push
sbb
test
mov
xchg
xchg
add
pop
out
mov
add
and
mov
add
iret
sbb
jae
mov
add
cli
xchg
lods
pushf
mov
add
mov
pusha
add
fidivl
jge
and
dec
jno
push
shl
add
add
sahf
adc
dec
jle
popf
lock
jp
add
sahf
outsl
jecxz
add
push
rolb
add
mov
add
add
mov
xor
add
js
cmp
gs
insb
into
enter
xchg
add
ljmp
add
pop
push
sbb
add
add
and
mov
inc
add
int3
insl
cmp
repz
jmp
fimuls
ffree
add
test
lahf
out
lcall
dec
popf
add
cvtps2pi
add
inc
cli
pop
mov
add
call
add
cmpl
add
add
std
push
push
add
outsl
out
add
je
in
rolb
add
add
adc
sbb
mov
add
lcall
pop
add
jge
add
add
add
fcoms
stos
repnz
add
mov
add
add
dec
or
add
dec
loope
jo
aad
or
add
sbb
push
mov
fisttpll
pop
mov
rcrl
add
push
cmc
dec
aam
mov
mov
add
mov
jae
mov
add
ja
cltd
add
mov
and
mov
add
and
bound
mov
add
add
outsb
outsb
adc
test
fmulp
xchg
add
push
addr16
push
adc
jmp
add
dec
lock
stc
add
add
cmp
ds
addb
add
mov
data16
sub
addb
sahf
int3
insb
jg
add
imul
mov
js
rolb
inc
add
sub
add
mov
add
pusha
add
lods
inc
mov
add
jecxz
push
add
or
xchg
inc
inc
add
sahf
add
subl
xchg
icebp
ret
daa
lret
add
add
mov
adc
mov
aad
rolb
add
aam
dec
in
inc
inc
add
add
sbb
stos
mov
inc
mov
mov
sbb
and
aaa
sbb
or
inc
fnstcw
daa
xchg
cmp
jmp
pop
loope
adc
pusha
add
outsb
popa
mov
add
add
cmpsl
mov
inc
add
add
pop
int3
pop
nop
add
adc
add
add
mov
ret
and
mov
add
add
xchg
loope
addr16
add
or
rcrl
addb
dec
cmp
add
add
mov
add
adc
add
sqrtps
cld
cwtl
ret
into
xchg
add
stos
arpl
repnz
or
jae
lods
xchg
mov
push
popf
and
mov
add
add
mov
and
pop
pop
outsb
dec
push
shrl
arpl
dec
mov
testb
push
add
js
stos
inc
rcrl
inc
xlat
aad
add
xchg
xchg
int3
push
add
mov
xchg
add
pop
sarl
inc
mov
and
mov
add
add
add
add
jns
push
add
add
jo
das
pop
add
xchg
dec
inc
add
mov
mov
loop
pop
jle
test
add
mov
aad
add
add
xor
int
xchg
lea
add
xorps
ss
sbb
xchg
cld
std
adc
mov
lcall
mov
out
add
mov
add
add
in
shll
adc
mov
push
add
out
pop
inc
add
lcall
rolb
adc
add
push
lahf
bound
mov
add
popf
inc
add
dec
fildl
addb
add
std
testb
add
mov
add
add
cld
mov
adc
jg
push
add
cs
cmp
aad
jl
clc
jecxz
pusha
add
add
cmc
mov
fsubl
fimull
add
jns
dec
mov
add
fistpl
add
add
mov
das
sahf
mov
out
mov
out
cmp
mov
push
jns
xor
loope
andl
lret
shll
pop
cmpl
mov
or
jl
push
xor
xor
sub
hlt
add
fdivl
dec
data16
add
add
mov
mov
mov
dec
dec
lea
add
pop
pusha
add
push
add
dec
add
mov
in
add
ja
add
std
push
bound
mov
cmp
add
or
pop
add
fucom
add
rolb
add
fildll
add
mov
addb
add
mov
mov
push
add
mov
pop
rcll
add
mov
and
call
add
fildll
inc
add
scas
xchg
cmpsb
add
movb
adc
adc
jne
push
ljmp
push
add
xchg
daa
push
add
add
sbb
in
aam
aaa
xchg
add
mov
cmp
enter
rolb
xchg
add
jne
cmp
xor
mov
jb
or
add
mov
add
jns
fidivrl
data16
xchg
and
inc
outsb
stos
lret
pop
in
testb
xor
add
push
add
gs
sub
dec
mov
add
addb
cwtl
add
mov
repnz
rolb
pop
in
jbe
mov
into
add
fucom
add
mov
push
jb
sbb
adc
xchg
in
pop
push
add
mov
mov
jmp
add
add
push
add
mov
add
add
add
cmp
add
out
mov
jbe
inc
add
data16
add
mov
add
jne
cmpsb
add
outsl
std
shl
in
xor
adc
push
dec
and
mov
fwait
pop
xchg
add
cmp
xchg
add
cmc
adc
jo
add
xor
cmp
hlt
add
mov
add
ds
ljmp
scas
or
jmp
add
scas
pop
and
mov
add
mov
mov
add
add
add
add
lret
cs
scas
lret
add
mov
jbe
mov
lods
and
mov
rolb
insl
jge
add
jmp
pop
jl
pusha
add
ds
pop
idivl
mov
add
mov
add
out
test
add
fnsave
dec
cmc
out
fs
add
add
mov
andl
inc
add
ljmp
out
loopne
int
cmp
adc
jne,pn
add
aas
dec
jmp
add
fildll
dec
ret
lock
rolb
sub
mov
push
add
ljmp
cmc
pop
mov
fsubrp
rolb
jo
pop
movsl
pop
mov
sbb
push
add
mov
cmp
popa
outsb
bound
mov
stos
push
add
push
std
xchg
gs
fwait
mov
imul
add
test
mov
mov
pop
ficoms
push
sbb
addr16
insl
dec
imul
push
or
add
mov
jne
adc
add
add
mov
inc
add
push
add
sbb
mov
add
test
sub
inc
add
and
inc
lahf
push
add
add
jns
add
cwtl
decl
jnp
add
inc
js
pop
ja
add
add
mov
pop
jb
fnsave
mov
rcr
repnz
xchg
push
je
mov
mov
xor
or
bound
mov
jo
rolb
mov
xchg
repnz
add
popa
sbb
add
in
sub
mov
cmc
mov
add
aaa
sub
addr16
or
test
xchg
mov
add
mov
add
js
mov
mov
pop
js
enter
mov
in
mov
cmp
add
int3
xchg
add
lods
jecxz
lods
mov
xchg
add
addl
insb
jl
add
mov
mov
xchg
add
repz
add
je
add
mov
or
cmp
adc
and
sub
rolb
sub
fimuls
jns
in
in
xchg
jb
test
add
adc
shll
ja
sbb
inc
add
scas
inc
add
push
iret
sub
xchg
add
sbb
mov
add
into
xor
add
jp
push
sti
sbb
out
add
add
jae
add
mov
sub
mov
add
adc
fnsave
add
add
test
push
inc
outsb
stc
imul
push
add
add
add
push
add
add
int3
jbe
inc
lcall
and
mov
add
add
jne
xchg
fistps
xor
rorl
pop
sbb
add
inc
add
sub
out
popa
xchg
add
ret
aam
sbb
jno
add
shll
nop
add
jp
fwait
jnp
adc
dec
insb
imul
push
cmpl
xchg
fldl
add
sbb
add
pop
mov
loopne
sbb
cmp
mov
cmc
cs
sub
fimuls
scas
fnstcw
xor
cmp
out
lds
add
pushf
push
xchg
add
pushf
pop
ja
jne
add
xor
and
mov
repnz
repnz
addr16
ds
imul
add
mov
sahf
or
mov
mov
add
sub
mov
add
lods
ss
add
add
add
sahf
popa
ds
in
sbb
rcrl
aad
add
add
jle
sub
pop
pop
emms
xor
add
mov
and
mov
add
pop
aam
mov
add
cmc
sbb
lcall
jmp
add
add
jne
movsb
add
jmp
icebp
sahf
loop
icebp
push
add
add
push
add
out
je
arpl
add
mov
mov
add
cmc
fs
inc
add
into
push
add
pop
push
add
movb
add
mov
sahf
shll
add
adc
dec
sub
xchg
rolb
pop
add
mov
sub
add
jmp
pop
adc
hlt
add
xor
pop
jl
dec
scas
cmp
jge
add
xor
dec
mov
add
enter
aad
add
push
add
or
lcall
sub
add
add
imul
add
add
fisubrs
pop
call
test
add
add
add
and
adc
cmp
ja
outsb
inc
add
imul
sahf
repz
xchg
add
iret
cmp
mov
add
inc
scas
insl
pop
push
fldl
imul
je
mov
add
cmc
lods
jg
lds
mov
cmpsb
add
test
mov
jle
arpl
xchg
mov
mov
xchg
add
sti
int
cwtl
aad
add
ds
jmp
xchg
add
jbe
dec
aas
std
fwait
movsb
add
add
shl
lcall
fsts
add
cmp
pop
gs
add
stos
dec
out
cmp
sahf
loopne
or
pop
adc
adc
fcom
imul
xchg
jp
xor
iret
es
cwtl
and
scas
push
pushf
popf
sub
mov
inc
insb
aam
mov
pop
add
sti
daa
popf
sbb
add
add
mov
sub
icebp
cmp
add
xchg
cmp
shll
and
jecxz
and
mov
add
fimull
or
push
in
daa
stc
ss
and
mov
stc
adc
xor
add
push
add
add
daa
sbbl
cmp
je
jl
mov
test
jbe
cwtl
mov
xor
sarl
add
pop
mov
push
add
je
mov
add
dec
cli
jns
jle
lods
jge
or
add
hlt
add
ss
and
mov
mov
pop
test
push
add
fstl
add
sti
in
pop
movsb
add
add
jo
xchg
add
jmp
add
lock
add
sbb
in
stos
mov
push
arpl
or
add
add
add
inc
pusha
add
not
add
add
add
pop
icebp
nop
add
mov
xchg
or
pop
xchg
add
cwtl
in
in
mov
movsb
add
fwait
mov
adc
add
mov
inc
add
leave
daa
push
cmc
int3
mov
lahf
or
movsl
and
xor
mov
mov
mov
and
add
bound
mov
add
popa
push
lret
lret
icebp
mov
push
add
and
add
adc
add
jo
mov
add
rcrl
add
jmp
mov
xchg
add
add
add
add
add
rolb
jo
push
subl
bound
mov
movsl
dec
add
mov
pop
insb
mov
push
add
mov
cld
cmpsb
add
icebp
incl
test
mov
mov
pop
cmp
add
aad
add
mov
add
add
add
sub
add
add
or
pop
mov
pop
push
add
cmp
testb
mov
ja
add
pop
addb
pop
add
add
das
and
mov
mov
fistps
sub
mov
pop
push
add
jl
add
mov
cmp
mov
mov
ret
mov
add
mov
inc
add
add
add
add
add
adc
rep
dec
push
add
and
mov
mov
movb
call
loope,pt
add
jmp
add
pop
mov
loop
xchg
add
add
mov
add
sub
add
rolb
or
dec
out
xchg
lret
add
mov
mov
add
loope
push
add
jmp
add
and
mov
or
ja
cs
in
loopne
xchg
add
xlat
and
mov
mov
add
push
mov
fistpl
mov
or
imul
add
ljmp
sbb
add
push
pop
ds
lods
jnp
and
lea
imul
add
rolb
in
hlt
add
add
rep
add
stos
int3
fs
mov
imul
mov
adc
add
mov
add
xchg
lret
and
mov
add
in
or
xchg
mov
add
push
sbb
jbe
pop
jg
ds
jbe
mov
add
mov
xchg
xchg
add
add
cli
test
or
paddusb
add
add
add
mov
mov
stc
imull
fmul
xchg
mov
jb
adc
fmull
add
push
add
sbb
add
add
add
add
clc
das
test
mov
jbe
jb
pushf
xchg
cwtl
mov
adc
jp
add
scas
outsb
lea
pop
sbb
outsl
lahf
and
inc
adcl
push
fildl
addr16
or
outsl
sbb
loopne
adc
and
in
mov
jne
inc
add
add
leave
and
mov
add
and
mov
or
cmp
int
outsb
xchg
and
add
lret
insl
repnz
xor
roll
mov
sahf
mov
addl
jnp
cli
nop
add
stc
sbb
cmpsl
clc
loope
fbstp
mov
js
das
sub
mov
adc
cltd
icebp
or
dec
push
add
xchg
pop
jecxz
add
dec
add
add
addb
dec
jno
arpl
fidivs
add
aaa
pop
jmp
xor
rolb
pop
jp
testb
rcll
in
xchg
push
and
xor
pop
pop
push
add
fidivrl
addb
cltd
push
fs
roll
pop
cmpsb
add
mov
add
add
sbb
pushf
pop
into
fsubl
add
lcall
xchg
xor
cld
lods
lds
insl
pushf
push
add
mov
test
out
jbe
xchg
cwtl
leave
je
jp
dec
mov
leave
ljmp
add
add
rolb
rolb
fcmovnbe
ja
insl
gs
test
aam
daa
inc
mov
iret
mov
bound
mov
mov
imul
sub
add
in
jp
negl
cltd
pop
jg
sbb
and
mov
in
mov
or
ss
add
add
add
add
mov
mov
xchg
add
subl
outsb
dec
loope
add
add
imul
clc
lcall
jo
int
testl
outsb
mov
mov
aad
mov
lcall
out
xchg
push
add
xchg
aad
add
shl
insb
or
cmp
and
shrl
inc
add
add
mov
jns
outsl
inc
add
addr16
jmp
mov
inc
add
out
cmp
xchg
data16
lock
xchg
sti
mov
add
mov
movb
add
add
xchg
or
or
js
int
adc
jp
pusha
add
out
call
popf
xor
pop
jl
lret
add
cmpsb
add
test
pop
push
mov
mov
add
cmp
ret
add
and
pop
jns
dec
push
add
mov
and
dec
add
and
mov
add
add
sub
xlat
cmpsl
xor
add
sub
testb
add
dec
lods
mov
push
add
and
adc
std
aas
push
add
cli
addr16
add
add
arpl
sbb
adc
paddusw
mov
add
add
mov
xchg
add
mov
sub
add
push
jge
or
add
fadds
daa
dec
jmp
sbb
mov
fimuls
sub
mov
and
add
add
imul
add
aas
xor
icebp
fucomp
mov
mov
add
call
mov
mov
sub
ret
add
xor
adc
imul
mov
add
add
sbb
mov
sbb
ss
push
add
scas
dec
ja
rorl
aas
add
push
add
rolb
clc
movsb
add
add
sbb
adc
and
mov
mov
mov
jns
test
lock
inc
xchg
add
pop
sub
jmp
aaa
mov
push
add
add
andl
fldl
mov
pop
jne
xor
hlt
add
insb
lret
mov
pxor
pop
dec
daa
mov
mov
or
add
add
add
test
add
mov
movb
mov
ficoml
mov
lret
stos
movsb
add
add
cmpl
aam
xchg
movsb
add
pusha
add
inc
add
ret
je
add
repz
jnp
fistpll
mov
pushf
pop
cmp
and
mov
push
add
add
xchg
cmp
add
jp
inc
add
fwait
jae
dec
sub
pop
test
mov
add
addb
xchg
add
add
mov
ja
notl
and
cld
mov
sbb
movsb
add
nop
add
cmp
lods
cmp
add
add
test
testb
ja
push
int3
xor
imul
mov
xchg
add
cmp
mov
add
rcl
add
adc
adc
testl
cmc
mov
jecxz
cwtl
lcall
lods
push
stc
lds
pop
xor
mov
bound
mov
add
add
pop
arpl
testb
add
mov
add
add
pop
jo
pushf
fildll
mov
clc
repnz
add
insb
icebp
or
fcmovb
add
xchg
addb
add
dec
lret
and
add
imul
mov
dec
mov
cs
test
test
mov
andl
mov
jnp
add
jbe
clc
pop
add
mov
nop
add
adc
loope
in
adc
add
add
outsb
fcom
iret
leave
pop
cmp
add
cmp
xor
scas
add
lds
data16
dec
mov
jecxz
add
add
add
mov
pop
int3
sti
jmp
add
pop
pop
dec
pop
jo
fucom
lea
insb
mov
mov
push
push
fxch
aad
imul
add
and
mov
add
mov
cmp
add
add
das
outsl
and
add
add
sbb
cmp
fbld
add
mov
cmp
fisubl
mov
pop
out
jg
clc
fwait
sarl
add
xor
pop
push
add
add
add
addb
and
pop
push
sub
cmp
sbb
pop
inc
je
movb
cs
aas
addr16
add
sti
push
pop
pushf
lret
add
test
sbb
bound
mov
mov
mov
int
mov
leave
cmpsb
add
pop
test
adc
loope
arpl
add
std
out
sub
pop
pop
lcall
cmp
add
sbb
add
icebp
or
inc
add
xor
add
xchg
add
and
mov
mov
push
add
push
add
add
rolb
add
es
add
xchg
sbb
add
sbb
sub
and
inc
add
add
outsl
insl
mov
xchg
and
mov
sarl
mov
mov
add
ret
xchg
jg
add
add
add
pop
repnz
cs
add
dec
push
add
push
add
loope
add
mov
clc
popa
adc
adc
add
xchg
sbb
add
pop
das
add
add
xchg
fistps
bound
mov
add
mov
add
das
out
inc
add
scas
mov
pop
fcoms
movsb
add
add
enter
pop
mov
push
add
insb
imul
add
add
add
add
mov
test
mov
pop
icebp
out
add
mov
add
cmp
lcall
or
add
mov
jne
push
xlat
rcl
roll
mov
icebp
nop
add
sbb
add
jmp
xchg
add
mov
add
dec
mov
jecxz,pn
sub
add
add
mov
je
popa
pop
adc
rcr
xor
add
inc
dec
aas
mov
mov
add
xchg
xchg
add
faddl
mov
ds
add
mov
aam
sub
add
daa
pop
mov
test
add
addb
add
movl
test
popf
pop
nop
add
sub
adc
inc
add
aad
xchg
ljmp
add
add
fdivrs
xlat
add
cwtl
adc
add
cmp
add
mov
scas
xchg
add
add
cmpsl
inc
mov
add
lret
push
scas
movl
mov
add
in
pop
insb
push
jecxz
add
lahf
cmp
add
adc
negl
add
add
mov
lret
jae
xchg
fstpl
and
mov
mov
add
or
add
adc
xchg
add
lds
jnp
test
loopne
jl
add
or
je
jmp
loop
push
add
movsl
xchg
addb
add
aas
mov
add
cli
stos
test
add
aad
add
aas
pop
xchg
mov
in
mov
dec
in
or
add
mov
mov
daa
cmc
lcall
adc
into
push
fwait
jle
xchg
add
add
hlt
add
jmp
add
mov
or
or
push
push
sub
cmp
jns
mov
mov
sbbl
aam
pusha
add
add
mov
mov
add
stos
or
cltd
xchg
scas
and
add
pop
outsb
mov
dec
xchg
stos
fisttpl
xchg
add
testl
mov
fstps
mov
mov
ss
adc
in
adc
int
add
or
add
notl
movb
ljmp
push
ret
outsl
adc
aaa
jp
add
add
into
mov
and
dec
pop
jbe
push
add
mov
add
dec
jg
stos
in
mov
add
add
cmpsb
add
aaa
shll
addb
into
int
inc
test
xlat
fwait
test
add
pop
mov
sbb
mov
sbb
add
add
sti
dec
xor
sti
mov
addb
mov
loop
aam
dec
add
mov
inc
push
add
mov
dec
pop
xor
xchg
and
mov
push
add
cs
data16
cli
dec
or
fistpll
add
add
add
jge
add
lea
mov
rolb
arpl
add
or
add
test
lods
out
data16
add
mov
inc
add
data16
pop
xchg
mov
mov
adc
add
dec
xchg
add
rolb
and
pop
bound
mov
cli
mov
pop
adc
xor
fdivrp
or
cmpsb
add
hlt
add
dec
stos
mov
rolb
pop
int
adc
je
popf
mov
fwait
sbb
xor
or
mov
jb
and
add
add
pop
and
xchg
nop
add
add
inc
add
add
out
lds
add
cmp
out
les
rolb
repnz
add
add
xchg
and
mov
add
bswap
in
jmp
add
add
add
mov
inc
xor
xor
cmpl
add
add
inc
aam
in
es
mov
push
fcomip
add
mov
outsl
lds
add
aad
mov
mov
xchg
add
addb
dec
nop
add
add
gs
push
or
cs
dec
stos
dec
sbb
add
sub
add
fwait
dec
xchg
cld
enter
punpckhwd
add
cmp
add
jecxz
add
in
add
pop
test
cmp
push
jp
cwtl
test
mov
pop
jle
cmpsl
cmp
add
or
add
add
pop
jg
pop
push
add
out
andl
insl
jmp
jae
add
movsl
xor
nopl
lock
add
pushf
mov
mov
fcmovnb
add
pop
insl
or
lret
loope
add
lea
aaa
scas
scas
dec
mov
xchg
sbb
xchg
rep
push
add
pushf
adc
push
push
add
sbb
fildll
pusha
add
mov
cmp
add
test
cltd
test
and
mov
add
andnps
jo
inc
cmc
pop
mov
pop
std
clc
jmp
xor
test
or
cmp
add
test
mov
add
rolb
fwait
inc
inc
add
sbb
mov
add
sbb
insb
cmp
xchg
add
push
scas
in
lds
das
xlat
mov
movsb
add
jno
cmp
mov
test
and
lods
in
sub
clc
dec
addr16
fcmovb
xchg
add
add
iret
into
cmpsb
add
cltd
push
add
cs
mov
xor
pushf
jl
add
add
add
nop
add
mov
and
sbb
outsb
bound
mov
add
xchg
add
mov
adc
jb
adcl
inc
das
test
in
ja
add
xchg
div
add
dec
cltd
clc
rolb
icebp
jnp
xchg
lods
push
xor
jne
jmp
sub
pop
ja
add
bound
mov
jecxz
dec
mov
mov
jge
xchg
ja
add
push
add
and
mov
clc
or
setno
jle
add
enter
add
mov
sbb
mov
shll
mov
xor
sbb
add
add
mov
xorl
push
add
mov
arpl
mov
mov
cld
in
cs
add
inc
data16
addb
addr16
sbb
add
mov
add
add
adc
mov
es
add
dec
push
add
push
add
add
pop
call
mov
mov
pushf
decl
repnz
mov
add
add
mov
push
ret
xor
popf
aam
inc
add
push
add
repnz
push
iret
aaa
mov
pop
in
cmp
add
stos
xor
aas
mov
add
or
inc
pop
rcll
add
test
dec
xchg
add
inc
add
loopne
pop
js
test
das
dec
stos
jg
add
jmp
pop
ret
imul
es
rcll
ja
add
mov
xchg
add
mov
je
shrl
stos
fistpl
pop
imul
cld
xor
in
mov
add
add
testl
add
sub
call
sub
add
nop
add
mov
inc
rolb
cmp
add
fisubs
pop
cld
or
nop
add
add
mov
add
popa
repz
xor
or
sub
add
jp
and
mov
addb
add
adc
and
add
push
add
add
mov
add
lds
mov
add
and
sub
push
dec
add
add
mov
dec
mov
and
mov
add
jno
mov
int
add
shl
add
dec
lret
push
cmp
add
mov
jne
out
out
xor
inc
add
sbb
xchg
or
add
mov
bound
mov
add
cmp
add
jge
xor
scas
add
mov
mov
pop
add
and
out
into
rorl
scas
inc
jg
add
push
add
add
or
and
mov
lret
imul
add
add
add
add
add
dec
or
lret
ret
add
jmp
and
and
add
add
add
push
add
push
add
fsub
push
add
xlat
add
adc
test
pop
ret
add
inc
lea
mov
add
icebp
push
add
add
add
lock
add
cwtl
push
add
fnsave
insl
mov
sub
pop
in
add
jbe
mov
add
xchg
mov
add
add
add
add
add
aas
dec
jp
add
push
add
xchg
and
add
aaa
push
mov
jl
in
subl
mov
pop
push
add
addb
std
testb
arpl
and
add
les
shll
fcompl
add
mov
cmc
loop
or
add
add
je
pop
pop
mov
cs
movsbl
scas
jbe
inc
cltd
pop
mov
dec
adc
jecxz
jg
add
add
lcall
jl
pushf
enter
dec
lock
add
ret
sub
sub
xchg
jp
add
add
cmp
call
sub
mov
add
jns
add
lahf
cli
cmp
repnz
add
add
std
xor
sahf
hlt
add
bound
mov
xchg
add
pop
jg
push
add
add
sub
add
pop
ss
daa
leave
cmpsl
mov
xor
dec
in
add
add
jecxz
add
add
jg
cmpsl
xchg
adc
cmp
leave
mov
add
jb
sub
insb
jb
push
inc
sbb
cmp
jb
sahf
mov
add
add
mov
cld
cmp
mov
fcmovnb
add
icebp
push
add
mov
dec
jae
add
loopne
cmpsl
mov
dec
aaa
xchg
add
in
scas
sti
imul
push
mov
sub
add
mov
shl
mov
rorl
xor
jl
add
into
push
popf
push
inc
xorl
pop
push
add
add
mov
out
icebp
outsl
jbe
mov
cmpsl
and
mov
pop
test
sbb
mov
jmp
mov
movsl
or
cmp
jb
jl
add
mov
add
add
repnz
push
add
rcll
push
add
add
add
and
mov
aas
cwtl
loope
jbe
rol
repz
jo
jnp
int
add
dec
sarl
dec
fmuls
aam
and
mov
add
out
ja
mov
inc
add
add
aam
dec
pop
inc
add
add
add
out
mov
jae
add
add
sub
fmuls
movsb
add
repnz
into
add
dec
fimull
rolb
insb
mov
xor
pop
pop
sahf
mov
cmp
inc
iret
mov
cmpsb
add
and
add
mov
or
out
mov
push
mov
sbb
ret
mov
insb
test
rol
pusha
add
fiaddl
sbb
xor
xor
paddusb
dec
int
add
imul
mov
add
les
jmp
cld
out
negl
push
add
add
pop
insb
sbb
cwtl
or
jmp
out
add
mov
je
jg
das
je
cmpsl
jmp
pop
mov
add
movb
mov
out
pop
in
mov
dec
adc
add
pushf
jl
pop
adc
cvttps2pi
xor
xchg
add
mov
scas
loope
add
in
or
data16
add
push
jno
inc
pop
xor
pop
adc
mov
add
mov
adc
add
mov
imul
mov
pop
les
sub
pop
cmp
inc
sub
dec
pop
jnp
popa
scas
repnz
add
add
fcoml
das
and
mov
push
cmc
xor
cld
notl
push
shr
loop
fcomps
les
movsl
insl
add
cwtl
out
cmp
lock
or
mov
jbe
stc
stos
std
ret
xor
jp
sub
add
pop
push
add
add
pushf
ret
add
add
mov
cmc
and
mov
add
cmc
add
add
add
add
call
mov
adc
push
add
rolb
inc
add
mov
xchg
add
mov
cmp
mov
or
fstpl
cwtl
stos
lahf
xchg
dec
dec
inc
stos
mov
in
ror
ffree
add
push
bound
mov
add
cmp
dec
cmp
add
fimull
and
in
sbb
add
xor
lret
inc
outsl
fucom
xor
fsubr
stc
int3
into
adc
cli
arpl
xor
shl
add
rorl
cltd
dec
cmp
add
shll
add
add
mov
sub
add
jb
adcl
cwtl
repz
add
pop
jno
and
mov
add
pop
or
add
popa
iret
inc
add
mov
add
inc
jge
add
lods
les
sahf
and
mov
outsb
fbld
std
cmp
nop
add
add
sahf
jo
in
jbe
test
add
aaa
leave
pop
movb
add
add
sub
add
push
fisubs
add
add
repnz
mov
add
shrl
leave
lahf
ret
jg
inc
mov
scas
and
rcll
add
push
loop
xor
xchg
add
arpl
cmp
pop
lret
pop
push
add
add
ds
add
iret
rcl
xor
add
add
sub
push
add
pop
push
add
lds
add
sbb
and
mov
jne
add
les
inc
add
xor
cmpsl
icebp
aad
jp
add
mov
add
ljmp
mov
add
loope
adc
jbe
loope
add
or
add
mov
add
add
and
jmp
stos
rolb
add
sub
xor
jae
add
jmp
mov
jl
add
sub
xchg
imul
cmp
pop
or
js
add
add
fadds
das
sub
jae
or
lods
push
add
xchg
jle
dec
stos
popf
cmp
inc
add
movb
outsb
pop
or
daa
pop
data16
lahf
lret
ret
sbb
cltd
lcall
addb
stc
xor
add
adc
add
mov
dec
enter
mov
imul
add
cmc
sbb
push
fmull
add
sub
add
add
fimull
adc
pop
dec
xchg
add
pop
inc
add
daa
jmp
add
inc
add
add
cltd
sub
cwtl
sbb
cli
rolb
sahf
repnz
das
data16
jno
add
sub
rolb
mov
add
add
mov
pop
sti
dec
mov
add
cwtl
mov
insl
roll
jnp
loope
std
push
adc
scas
sti
jmp
data16
mov
xchg
or
lock
add
xor
and
test
dec
sti
add
mov
add
psubsw
mov
cwtl
clc
out
fildll
add
stos
pop
cmp
sub
sub
add
int
lock
add
shl
add
pop
xchg
add
add
add
test
mov
add
cmp
sbb
and
xor
fisubrs
push
add
inc
loopne
add
imul
out
jbe
sbb
add
add
or
in
inc
add
add
add
jnp
add
movb
mov
jb
add
mov
rorl
cmc
jmp
add
mov
lret
add
add
mov
jmp
add
mov
loopne
mov
pushf
sub
add
jo
xor
xor
add
add
icebp
and
sbb
scas
sub
nop
add
je
push
add
add
out
mov
adc
pop
pop
aaa
cmp
pop
in
addb
cli
mov
push
adc
mov
add
push
add
add
and
add
push
add
inc
inc
mov
or
sbb
add
insl
stos
rolb
inc
movb
aad
sbb
add
sub
add
in
push
add
add
mov
adc
movsb
add
add
jne
add
pop
je
dec
dec
xchg
add
add
add
add
jnp
add
sub
add
push
mov
add
cs
inc
add
add
lea
xchg
add
fmuls
add
cmp
mov
femms
push
add
lea
dec
mov
add
xor
in
scas
dec
rcll
mov
or
add
mov
mov
and
or
and
add
mov
add
mov
mov
es
mov
xchg
add
cmp
cmpsb
add
mov
nop
add
imul
rolb
imul
add
add
cs
sbb
add
add
add
mov
add
ds
out
jno
or
test
mov
cli
pop
pop
jmp
jo
aaa
or
and
mov
xlat
pop
rolb
xlat
push
add
ret
and
adcl
add
sbb
add
ret
mov
add
add
add
push
push
add
mov
js
add
rolb
aad
sub
add
pop
or
sub
add
inc
sub
add
mov
add
in
ja
scas
int3
push
jl
add
mov
add
add
adc
je
or
mov
add
ljmp
add
add
dec
cmpsl
and
mov
call
push
shrl
sub
push
cmp
add
xchg
mov
in
bound
mov
add
pop
inc
add
xchg
int
repnz
aad
add
nop
add
or
add
mov
sbb
xor
fistps
add
add
pusha
add
pop
jno
test
cwtl
add
add
aam
push
add
mov
sbb
mov
out
add
out
neg
xlat
dec
data16
add
mov
testb
add
add
add
clc
xchg
cmp
adc
mov
inc
add
js
xchg
add
add
cmp
sub
add
push
and
sbb
ljmp
mov
xor
jecxz
int
add
mov
dec
sbb
xchg
add
pop
lods
out
mov
push
cmp
jbe
adc
push
add
int
arpl
les
pop
adc
cmp
cmp
add
cmp
out
or
cli
jmp
rolb
in
int3
jl
add
ror
xor
add
and
mov
xchg
jp
add
add
mov
jae
add
daa
repz
mov
sub
pop
pop
inc
lcall
cmc
dec
cmpsl
repnz
testb
push
ljmp
dec
mov
movsl
or
add
mov
outsb
add
add
loop
enter
xor
add
add
mov
in
stos
add
inc
aas
or
xor
mov
aam
lods
mov
out
movsl
int3
popa
fdivp
arpl
stc
xchg
adc
call
xchg
xor
mov
jecxz
rolb
addb
sbb
or
jne
mov
loope
aaa
adc
iret
dec
stos
xchg
mov
pop
xor
pop
push
add
xor
add
mov
add
cmp
fidivs
pop
imul
lods
or
mov
add
mov
popf
push
add
lahf
xlat
push
in
push
add
popa
dec
out
out
jns
loope
pusha
add
cld
out
bound
mov
push
xor
add
mov
iret
mov
pusha
add
js
int3
dec
xor
adc
mov
xchg
add
add
loope
rolb
lcall
das
mov
xchg
aas
or
push
add
pop
mov
add
outsl
jb
mov
adc
add
mov
add
add
int
scas
push
add
addb
stos
movsb
add
sar
imul
jbe
xor
mov
rcll
pop
out
and
or
aam
mov
sbb
fnsave
mov
add
add
mov
add
add
jns
jnp
pop
insl
loopne
adc
inc
inc
add
add
cmpsl
cmpl
xchg
sbb
add
mov
test
push
add
ja
imul
xchg
add
fisubrl
mov
les
scas
pop
xor
les
popa
sbb
mov
add
std
aam
cmc
mov
jle
sbb
adc
push
add
mov
shll
ja
sahf
xor
pop
or
xor
adcl
cld
mov
xchg
fildl
mov
sbb
outsl
hlt
add
cmc
jbe
jb
pop
xchg
add
lods
add
lahf
push
add
sbb
add
out
add
jl
aaa
sub
add
add
lds
flds
adc
adc
das
outsb
je
adc
loopne
mov
xor
gs
inc
add
sub
aaa
mov
add
and
jp
xchg
add
add
cmp
cmp
sbb
add
std
es
push
add
iret
cmpsb
add
sbb
add
fs
adcl
add
mov
add
cmc
push
add
les
add
add
repnz
add
add
jae
imul
add
mov
cmp
test
sti
mov
pop
sub
ds
mov
aas
jecxz
push
add
cmp
mov
pop
cmpsl
pop
mov
mov
add
add
mov
jo
pop
or
add
inc
add
inc
pop
mov
xor
movb
mov
add
hlt
add
add
scas
test
jmp
mov
add
inc
and
push
add
or
mov
and
mov
jle
add
add
xlat
loope
or
add
add
mov
pop
addb
mov
mov
mov
add
and
push
mov
shll
jnp
add
adc
mov
jle
add
cli
loop
push
mov
add
out
rcrl
out
xchg
aas
add
add
push
pop
or
add
mov
loop
insl
add
jge
jbe
loope
add
or
pop
mov
xchg
xor
movb
dec
xor
bound
mov
dec
shll
les
sti
xorl
fisubrs
mov
xchg
imul
dec
xchg
stos
iret
aam
jo
push
add
pop
addb
xor
xor
add
mov
in
dec
add
leave
mov
cmc
ficoml
push
add
and
pop
mov
xchg
add
push
add
jge
std
addb
pop
adc
sub
call
loope
and
cmp
inc
add
mov
or
cld
daa
xchg
add
mov
xlat
aam
fadds
bound
mov
dec
dec
out
insb
hlt
add
scas
in
lock
add
add
push
imul
mov
testb
jo
lods
jo
enter
stc
jle
repnz
xor
loope
sub
lods
inc
add
rorl
cmp
mov
cmp
loope
xchg
add
add
mov
add
jge
add
loopne
add
inc
add
sbb
jae
lahf
stos
dec
jne
inc
add
adc
add
fadd
add
enter
xchg
add
icebp
imul
jecxz
jl
add
add
xchg
add
push
cld
cltd
pop
movl
mov
stos
cmpsb
add
mov
mov
inc
add
shll
add
inc
add
or
pop
push
mov
cmc
cwtl
lahf
loop
mov
and
add
add
push
aam
test
ds
and
test
adc
decl
xor
add
mov
add
lcall
nop
add
outsb
push
js
pop
push
add
int3
fcomip
add
add
and
push
data16
popa
sub
dec
scas
cltd
arpl
mov
add
pop
das
sti
mov
mov
adc
movsl
aas
sub
pushf
cmc
sbb
ja
mov
add
add
mov
shr
popa
lods
lea
inc
add
add
mov
inc
add
adc
and
adc
movsb
add
add
enter
and
dec
mov
dec
add
add
add
rolb
add
add
mov
add
add
inc
and
mov
push
adc
jno
xor
mov
lret
add
jl
add
cmp
pop
call
or
pop
and
adc
push
jnp
adc
mov
add
fwait
test
into
in
fsubrs
or
xor
icebp
inc
mov
int3
repnz
add
addr16
sarl
sbb
lods
adc
sub
dec
iret
out
dec
cwtl
sti
fstpl
fdivr
mov
mov
mov
add
add
add
mov
sbb
add
fisubrs
sbb
hlt
add
inc
inc
push
add
addb
call
dec
adc
push
add
and
nop
add
outsl
jo
mov
addb
add
out
cmp
add
add
repnz
jbe
loop
or
push
add
test
push
mov
push
adc
push
out
sub
out
aad
add
add
test
cmc
mov
leave
xorl
cmp
mov
mov
test
inc
add
add
mov
fnstenv
push
add
mov
rolb
pop
xor
sbb
add
mov
push
add
push
add
rolb
mov
sub
add
push
mov
addb
xor
or
loop
xchg
imul
iret
cmp
out
outsb
dec
sbb
das
inc
add
test
mov
rolb
add
mov
ret
popf
mov
jle
add
mov
pusha
add
add
push
add
aam
mov
les
loope
inc
add
add
lret
mov
add
push
lcall
loope
cmp
add
sbb
push
add
rorl
ljmp
xor
rolb
ljmp
ss
and
and
mov
mov
test
fwait
mov
cmpsb
add
add
out
inc
add
add
mov
pop
hlt
add
pop
cmpsb
add
add
add
lret
sub
add
add
in
xchg
add
add
add
aas
pop
mov
mov
fwait
mov
mov
jmp
movsb
add
fsubrl
xor
mov
cmpsb
add
add
xchg
add
add
add
xchg
add
add
in
inc
add
pop
adc
movsl
in
scas
hlt
add
enter
jg
ljmp
add
add
je
pop
push
add
push
add
outsl
adc
push
add
add
mov
adc
mov
jge
fs
adc
add
shll
scas
pushf
in
sub
movsl
mov
dec
push
mov
ljmp
mov
pop
jp
mov
adc
popa
roll
add
ficoml
add
mov
xchg
das
aad
add
cld
xchg
xchg
add
add
and
mov
jmp
push
sbb
mov
jp
cmp
movsl
dec
rcl
add
jo
push
add
enter
xchg
add
cs
jno
add
sahf
pop
outsl
daa
add
cmp
inc
add
mov
fmuls
pop
imul
imul
pop
jecxz
add
in
sbb
pushf
mov
imul
icebp
outsb
in
ret
sbb
add
inc
add
rolb
ret
addb
add
fisubs
add
mov
xor
ds
mov
push
in
jp
mov
add
test
mov
add
mov
cwtl
enter
mov
std
push
jl
and
inc
add
dec
leave
mov
mov
push
add
lds
add
mov
je
adc
add
add
add
nop
add
filds
add
xlat
aaa
outsb
testb
add
pop
push
xor
sbb
mov
in
jp
or
xor
movsb
add
test
add
clc
mov
movsb
add
cltd
xlat
push
add
arpl
mov
cs
mov
sbb
cmp
imul
mov
add
inc
add
cs
add
add
or
add
jne
fdivrs
mov
rolb
add
add
add
mov
popa
clc
add
mov
add
add
add
add
lods
and
mov
add
aad
or
add
add
mov
push
subl
add
movb
sub
lcall
add
jmp
add
pop
xor
sbb
and
xchg
lret
push
add
jmp
add
mov
mov
cmp
add
jne
insl
pusha
add
sbb
xor
insb
sbb
add
xor
aad
test
cs
cld
lods
push
add
mov
add
addb
mov
inc
cmp
mov
pop
loopne
cmp
mov
xor
data16
cld
jb
rcll
out
mov
pop
sbb
add
add
jnp
xor
insl
or
inc
rol
lea
pop
icebp
inc
xchg
and
insb
lret
add
jecxz
movb
sbb
into
pop
cmpsl
mov
mov
sbb
mov
sar
add
loop
mov
sbb
out
ret
cmp
bound
mov
dec
stc
inc
add
rolb
sahf
mov
fdivrs
lcall
add
mov
repnz
data16
data16
mov
stc
je
out
push
bound
mov
push
add
add
mov
mov
xor
or
or
in
cld
mov
movsl
lret
add
sar
xor
adc
fucomp
xor
fs
push
add
jge
add
xlat
xor
movsb
add
mov
add
cld
arpl
sbb
test
loop
xchg
enter
xor
xchg
add
fiadds
jge
jp
mov
mov
bound
mov
mov
mov
add
mov
add
and
add
sarl
mov
cmp
sub
add
add
add
fwait
cmp
add
mov
push
adc
cmpsl
cmp
xchg
mov
lret
test
iret
mov
add
js
add
iret
cmp
pop
cmp
add
add
adc
mov
add
pop
push
jno
stos
inc
add
add
add
mov
int
mov
add
inc
pop
addb
in
cwtl
testb
add
add
fadds
xor
and
aaa
fwait
lods
test
rolb
sub
nop
add
add
in
mov
fwait
les
rolb
mov
mov
scas
out
int
je
imul
add
mov
add
rolb
add
xor
inc
add
adc
xchg
add
add
mov
sbb
xchg
add
add
mov
xchg
dec
jl
sub
fs
dec
or
fdivrl
xchg
mov
fadd
add
push
add
add
add
jnp
lods
inc
js
pushf
aaa
xchg
add
lret
add
or
sub
scas
inc
and
mov
test
mov
mov
add
mov
push
add
js
xchg
add
cmp
add
cmp
inc
xor
jle
add
dec
loopne
jmp
je
into
out
loope
add
ds
pop
add
mov
mov
bound
mov
add
sub
add
hlt
add
fisubs
add
mov
pop
inc
inc
rcrl
hlt
add
add
jo
mov
pop
dec
movb
add
add
jg
jne
sbb
nop
add
ret
movb
js,pt
add
or
rolb
and
outsl
out
aas
cmp
loop
leave
sub
movsl
or
out
call
add
cmp
and
jmp
xchg
add
add
push
cmpsl
ret
stc
loopne
jno
add
cwtl
rcl
rcrl
mov
add
movb
add
jb
pop
sub
mov
push
add
pusha
add
sti
adc
ja
add
sbb
inc
jno
adc
or
movb
add
add
add
fwait
sub
add
push
add
mov
and
xor
add
pop
test
cmpsb
add
adc
ljmp
push
mov
out
sub
cwtl
inc
mov
add
movsb
add
aas
jmp
add
dec
sbb
add
repz
mov
popa
add
test
push
je
add
push
push
add
or
push
jb
add
xor
jg
and
enter
push
sub
add
sbb
repz
ret
mov
les
adc
leave
arpl
stos
rcll
xor
push
js
mov
cvtps2pd
out
mov
add
addb
add
cmc
cli
pushf
xchg
add
dec
lock
add
xlat
lods
popf
cmovg
add
mov
rolb
shll
jnp
leave
pop
jbe
into
sbb
push
add
add
lahf
mov
inc
das
mov
xor
add
add
add
in
loope
jb
mov
je
mov
scas
pop
or
scas
std
push
les
sbb
js
add
ret
add
jnp
addb
out
push
add
add
pop
cmp
add
scas
rorl
jno
add
inc
les
pop
ss
adc
test
add
fsubrl
pusha
add
add
pushl
add
cmp
add
inc
add
push
push
cmc
je
jmp
add
adc
mov
add
add
cmc
bound
mov
rolb
rolb
mov
push
testb
mov
dec
shll
add
rolb
scas
out
pop
jae
pop
outsb
push
loope
cmc
mov
inc
add
add
ds
dec
add
sub
jbe
jbe
or
out
andl
add
push
in
push
cmp
mov
add
mov
add
scas
jmp
addb
add
add
add
dec
jbe
ficoml
xor
sub
cltd
mov
mov
xchg
and
mov
jl
cmpsb
add
add
xchg
inc
aas
and
mov
jnp
mov
and
inc
je
fistl
adc
add
jo
mov
sbb
scas
mov
int
int3
or
add
mov
mov
xchg
xor
je
fadds
mov
xlat
dec
addb
jno
add
add
add
xor
add
je
sbb
cmpsb
add
mov
xor
in
inc
add
add
mov
and
add
pop
out
mov
cmpsl
leave
sbb
dec
stc
and
push
mov
mov
cmp
mov
test
jecxz
push
xchg
adc
lods
mov
sbb
add
mov
mov
add
cltd
in
inc
add
in
ds
mov
daa
adc
sti
add
cmp
add
leave
or
stos
xchg
or
add
pushf
cmp
pop
add
lea
int
add
mov
jnp
leave
addb
add
add
lret
add
add
jnp
bound
mov
dec
insb
add
add
mov
roll
mov
test
clc
mov
or
add
add
push
jns
add
in
inc
imul
test
mov
add
mov
add
add
and
adc
and
push
add
ljmp
add
add
data16
xchg
add
add
push
add
add
add
repz
cltd
icebp
xchg
add
add
jo
sbb
mov
add
mov
add
data16
sti
mov
or
add
push
adc
das
jp
add
je
test
std
xor
mov
mov
add
aaa
mov
repz
add
das
les
mov
add
add
aaa
je
loop
das
push
in
aad
push
sar
pushl
add
xchg
jbe
imul
push
add
add
out
leave
dec
fistpll
cmp
xor
imul
in
sub
xchg
add
rep
out
stos
sbb
leave
push
xchg
add
mov
xchg
xchg
add
enter
and
loope
es
dec
test
push
add
mov
add
add
add
add
inc
fimuls
add
sbb
cs
add
pop
dec
nop
add
les
ror
add
adc
fcoms
mov
lds
add
stos
jae
mov
out
mov
add
popf
cltd
mov
add
push
add
xchg
rcr
cmp
add
add
lcall
pusha
add
clc
or
add
gs
js
pop
cmp
or
add
add
adc
cmp
mov
sbb
inc
add
xchg
cmp
add
mov
rcr
js
in
jmp
add
xor
movb
add
add
add
xchg
add
add
mov
mov
loop
imul
add
add
pop
sbbl
pop
out
jg
adc
cmp
add
cmc
dec
xchg
or
adc
sbb
ret
xchg
add
pop
xor
add
push
dec
mov
add
rolb
add
addb
stc
mov
pop
cmp
or
repz
fcmovnbe
add
xchg
add
gs
lds
add
mov
dec
insl
and
rolb
add
outsb
loope
xor
push
shll
je
xor
test
push
adc
call
sbb
clc
je
into
fsubr
push
add
test
add
push
sub
add
adc
mov
add
push
add
jnp
xlat
pop
movb
add
movsb
add
loopne,pn
cmp
mov
shl
pop
jnp
add
iret
xor
out
add
je
jnp
adc
push
add
add
xor
add
add
stos
fildl
mov
les
rolb
and
lock
xchg
add
add
add
add
les
add
popf
ret
push
cmp
pop
adc
sub
jp
adc
inc
add
add
mov
add
add
add
into
pop
add
mov
jle
add
mov
xchg
add
mov
mov
test
lret
addr16
sbb
add
out
and
jp
add
popf
xor
imul
mov
cli
mov
add
dec
push
add
mov
bound
mov
stc
pop
cmp
div
pop
cmp
jmp
add
test
mov
out
out
xchg
sub
les
mov
in
or
js
add
mov
add
add
add
inc
add
notl
popa
stos
std
pushf
loope
add
mov
add
add
jmp
jbe
push
and
mov
movsb
add
testb
dec
or
enter
and
lret
mov
add
lea
add
sti
cmp
add
out
in
ror
and
xor
and
xchg
add
aas
gs
lds
outsb
mov
outsl
imul
test
or
add
add
outsl
or
les
testb
add
loop
and
add
nop
add
add
mov
leave
adc
sbb
adc
push
add
sti
inc
add
outsb
add
sub
and
mov
jge
imul
cmp
or
add
or
push
add
pop
jns
mov
cwtl
nop
add
pop
das
insb
lahf
cld
fwait
mov
jno
add
js
jp
push
ret
mov
fisttpl
addb
add
mov
fisttpl
fdivrs
xor
jnp
pop
lahf
add
adc
jns
add
out
add
add
add
or
out
add
subl
daa
add
mov
jne
add
pop
out
jmp
scas
mov
mov
adcl
add
gs
cmpsl
and
test
add
add
add
test
test
push
lcall
xor
mov
lret
addb
aas
mov
add
add
stos
push
in
cmp
cmpsl
xor
add
aad
add
sbb
imul
pop
jg
dec
repnz
imul
test
decb
jno
scas
xchg
add
add
add
and
mov
pop
stos
lock
sbb
mov
rolb
mov
movb
push
add
scas
and
lds
add
push
outsb
add
hlt
add
jo
mov
data16
add
ret
add
push
out
xchg
add
test
fs
inc
add
nop
add
ljmp
movsb
add
add
add
add
rorl
sti
jecxz
add
ja
add
add
rorl
pusha
add
add
xchg
sub
add
add
inc
stos
out
add
add
mov
inc
add
loopne
push
add
add
inc
add
lods
and
mov
imul
sub
sub
xor
or
add
jbe
xchg
fcomps
jg
pop
in
sub
add
in
add
stos
in
jecxz
lea
insb
xlat
jecxz
fnstcw
adc
mov
push
add
repnz
mov
add
cmp
add
jne
fsubs
add
adc
sub
mov
and
nop
add
rcll
shl
add
sbb
or
mov
mov
fists
add
fcmovu
push
or
fstps
sbb
and
scas
sbb
add
loopne
imul
jne
add
push
jb
test
add
add
xor
inc
add
loopne
jns
add
loopne
xor
sbb
mov
mov
sbb
cmpsb
add
mov
push
add
add
add
jbe
add
into
mov
mov
add
add
mov
or
add
mov
or
push
adc
xchg
and
sbb
mov
add
add
add
add
mov
pop
movsb
add
add
data16
cmp
cs
in
push
add
mov
cmp
cld
leave
icebp
mov
sub
cli
rolb
push
add
bound
mov
lds
aas
cltd
outsl
rolb
add
mov
addb
jl
jnp
mov
mov
pop
xchg
mov
mov
movsb
add
mov
add
add
add
fidivrs
rcrl
xor
dec
popa
cmp
aaa
adc
data16
mov
add
xchg
add
popf
jo
cmpsb
add
add
add
rolb
insl
mov
xchg
cmp
add
dec
fmul
jmp
packsswb
cmc
add
mov
add
mov
mov
add
mov
sub
mov
fstps
adc
fadd
add
rcr
inc
cmp
fnstenv
les
insb
jae
add
sbb
stos
lock
test
repnz
add
inc
add
pushf
ficoms
aas
pusha
add
add
imul
xchg
sub
addr16
add
in
push
outsl
xchg
std
stos
jb
xchg
jno
add
add
xlat
in
inc
add
inc
add
cmc
int
icebp
lock
leave
and
mov
inc
add
xchg
add
push
add
cmp
mov
xor
testb
lock
add
add
mov
xchg
insb
push
add
add
add
js
add
scas
or
adc
xor
sti
data16
popf
lahf
xor
loop
push
add
scas
fisttpll
test
pop
aaa
add
adc
scas
fsubs
mov
mov
cltd
pop
cmp
lea
adc
add
mov
add
sub
add
mov
add
and
jmp
iret
mov
mov
enter
jp
add
add
lcall
mov
arpl
stc
pop
jae
xor
fisttps
fs
add
xor
add
ljmp
xchg
add
dec
sbb
call
add
in
push
ds
das
mov
add
filds
mov
sbb
add
shll
push
js
sub
inc
add
mov
icebp
loopne
fcomi
add
sub
inc
and
mov
mov
jge
add
mov
inc
add
mov
scas
jmp
adc
lods
loop
mov
je
xor
rolb
xchg
mov
xlat
test
mov
inc
add
mov
dec
dec
movb
jno
add
jg
cwtl
sub
add
pop
sbb
cld
xor
js
inc
lret
add
inc
add
add
jl
inc
shrl
push
cld
cwtl
scas
mov
movb
dec
sub
bound
mov
mov
add
adc
cmc
icebp
mov
stos
push
insl
mov
outsl
jo
and
mov
or
push
mov
outsl
mov
mov
movl
add
add
mov
js
add
jp
rolb
int
insl
je
das
sti
pop
mov
scas
and
mov
jl
adc
cmp
add
ret
jecxz
sub
and
mov
xor
mov
cwtl
fidivrs
add
add
and
mov
int3
sub
test
or
sbb
push
add
jnp
popf
jle
cld
enter
mov
add
mov
fwait
cli
insl
repz
jbe
addb
insb
jne
mov
dec
nop
add
aam
push
jmp
sub
xor
cltd
push
ret
mov
add
cmp
out
out
mov
xor
dec
in
or
bound
mov
add
test
push
gs
mov
or
add
add
dec
mov
js
push
scas
repnz
scas
fiadds
mov
add
add
sub
inc
dec
push
add
mov
add
add
leave
xor
dec
jne
add
inc
pop
js
icebp
lahf
arpl
out
mov
add
rcll
adc
fadds
add
dec
push
and
mov
or
mov
mov
in
jmp
stc
add
xlat
rcrl
xchg
loop
jge
mov
mov
jnp
adc
mov
dec
sub
mull
push
add
add
dec
push
add
push
xlat
and
mov
in
push
sbb
add
fisubrl
loopne
mov
add
add
sbb
aad
add
bound
mov
bound
mov
push
cmovno
movb
outsl
addr16
js
xor
cmp
add
add
mov
shll
xchg
mov
mov
add
add
mov
cmp
cmpsl
add
cmp
add
add
add
jns
add
add
pop
dec
or
addb
outsb
jbe
pop
in
in
mov
and
add
mov
add
add
or
jo
das
push
add
add
add
jmp
cmp
lea
add
add
bt
mov
add
mov
push
inc
add
outsb
xchg
cmp
inc
add
ds
xor
mov
add
cld
or
mov
icebp
loope
mov
aas
adc
xchg
add
add
push
add
scas
iret
lret
cmpsl
push
add
dec
dec
inc
enter
xor
sbb
xor
aaa
cmovle
or
gs
cmp
jbe
xor
add
les
or
cmc
push
or
add
add
repz
test
dec
jbe
in
push
add
lahf
hlt
add
idiv
push
add
add
add
movb
stos
xchg
add
adc
xchg
add
add
add
in
dec
mov
fstps
sahf
cli
pushf
xchg
add
out
dec
leave
jae
add
pop
in
aad
add
add
and
or
xor
std
sar
nop
add
add
add
cwtl
test
xchg
add
add
push
add
mov
add
mov
dec
mov
push
add
sbb
mov
add
add
add
sub
lods
jmp
mov
add
dec
into
sbb
movsl
loop
and
mov
push
dec
xchg
movb
loope
add
add
cmpsl
int3
adc
fcmovbe
add
ljmp
xor
push
add
pop
lcall
add
or
aam
icebp
pop
arpl
add
sbb
daa
nop
add
mov
add
cmp
fisubrl
test
add
int3
or
outsb
lock
mov
lods
push
add
jno
push
add
add
add
mov
test
and
dec
jbe
in
mov
daa
mov
jb
mov
inc
movsb
add
aas
ljmp
pop
into
cwtl
iret
jl
insb
sub
add
out
add
add
loop
and
mov
neg
mov
pop
push
add
add
adc
sbb
add
mov
aad
mov
mov
pop
ds
faddl
add
or
ret
jns
or
insb
mov
data16
xchg
adc
add
pop
jecxz
jecxz
add
test
or
pop
popa
xchg
push
add
std
pushf
cmp
add
pop
lock
add
add
sarl
lahf
pop
pop
outsb
cmp
or
iret
insb
inc
ds
jae
push
mov
mov
jno
mov
mov
test
pop
mov
add
out
pushf
das
orl
pop
das
out
add
sub
mov
mov
add
addr16
add
add
push
add
pop
repnz
adc
add
daa
xor
mov
pop
push
jnp
add
add
sub
mov
testb
test
add
add
cld
jo
sbb
add
shll
data16
adc
or
dec
push
aaa
or
xor
pop
je
pop
or
add
add
add
mov
add
jbe
sub
add
mov
cmp
add
add
add
mov
add
test
pusha
add
sub
xor
stos
les
mov
dec
jle
sub
out
dec
mov
movsb
add
sbb
addr16
or
add
in
int
mov
repz
insb
push
addr16
fisubl
add
mov
cmpl
inc
jns
ja
in
push
and
mov
cs
add
add
ficompl
xchg
and
mov
lahf
in
testb
mov
testb
jecxz
add
bound
mov
add
add
add
xor
movb
in
fsts
add
add
outsl
lds
push
add
inc
les
sbb
mov
cmp
dec
ljmp
jmp
clc
xor
stos
data16
add
or
xor
jl
dec
xor
adc
pop
sbb
mov
ljmp
xchg
add
pop
and
mov
iret
and
mov
lret
ljmp
add
lds
iret
pop
cwtl
dec
movb
and
mov
aas
inc
cmpsl
add
lods
pop
mov
push
add
push
addb
add
mov
mov
add
add
add
add
imul
je
movsl
fcoms
jb
xor
pusha
add
xchg
add
add
sbb
cmp
or
out
adc
xlat
jecxz
incb
add
mov
adc
pop
stc
mov
add
cmpsl
sbb
mov
add
pop
adc
push
add
add
sbb
and
adc
add
addb
or
and
mov
std
pop
test
lods
pop
lret
mov
inc
add
rorl
incb
add
cmp
add
addr16
add
orl
add
mov
jle
jge
repnz
or
test
add
and
add
add
cmp
add
aaa
int
dec
xchg
add
outsl
and
cltd
lret
add
add
mov
sub
shll
xchg
sub
add
jp
dec
addb
nop
add
outsb
daa
inc
push
cmc
fdiv
add
testb
in
xor
cmp
rcrl
add
inc
add
call
xor
add
mov
add
add
js
mov
fcompl
fildll
xlat
jp
inc
pushf
add
fcoml
xor
stos
stc
cmp
inc
jl
add
add
add
test
cmp
test
add
mov
je
insb
xchg
add
push
call
add
or
add
push
ret
and
mov
xor
add
mov
push
add
iret
cmpsb
add
ds
pop
hlt
add
add
add
add
sub
add
mov
push
mov
movsb
add
addl
xchg
add
add
cwtl
mov
add
testb
push
add
lea
mov
push
add
add
pop
lods
clc
sbb
add
add
add
add
add
add
mov
add
nop
add
mov
mov
mov
cld
mov
fidivs
test
ja
dec
data16
out
adc
in
cld
mov
pop
addb
rorl
mov
adc
out
negl
xchg
iret
cs
add
add
jae
clc
or
pop
outsl
sbb
adc
sub
inc
add
add
add
sahf
xchg
add
rolb
mov
mov
out
pop
mov
add
add
ret
shrl
cli
xchg
push
rolb
mov
stos
les
mov
dec
dec
mov
pop
repnz
shll
add
and
mov
cmova
popf
pushf
dec
out
mov
sbb
add
mov
add
or
push
jno
mov
les
dec
adc
add
dec
and
js
pop
cmp
xor
dec
add
arpl
pop
cld
jl
adc
imul
js
add
add
psrlq
add
add
bound
mov
mov
fisubs
add
fisubrl
cmp
mov
or
enter
test
test
les
sbb
push
add
add
add
pop
lret
jnp
call
xor
loopne
cli
pop
xchg
push
add
inc
mov
add
add
xchg
add
insl
push
movsb
add
or
aas
dec
lret
adc
or
dec
pop
jge
add
cwtl
xor
xorl
sub
add
nop
add
aaa
imul
mov
add
loope
mov
add
jae
add
cltd
sub
add
sarl
add
cmp
arpl
testb
xchg
add
and
mov
cmpsl
xor
add
mov
add
cs
scas
in
sbb
cld
jge
add
add
and
mov
mov
ja
add
pop
movsl
pop
pop
fmuls
xchg
add
mov
and
in
pop
outsb
xor
repz
add
jae
add
dec
addl
hlt
add
cmp
cli
icebp
addl
add
and
lea
rcll
sarl
mov
and
mov
inc
jle
adc
movsl
xchg
add
imul
dec
mov
sar
push
daa
pop
stos
outsl
mov
or
mov
add
cmpsl
cmp
jecxz
test
add
into
cmpsl
inc
add
xor
pop
in
adc
mov
dec
cmp
into
bound
mov
add
or
aam
bound
mov
dec
idiv
fldenv
rolb
js
cmp
add
mov
xor
stc
aas
data16
bound
mov
int3
jmp
add
aad
sub
add
lds
in
popf
xor
je
pushf
addb
add
add
add
add
or
int
push
movsl
movsl
push
mov
mov
jb
dec
xchg
pop
sbb
jle
jnp
cmp
mov
mov
cmc
and
movsl
incl
test
std
pop
roll
popf
jecxz
add
add
aam
xor
adc
add
pop
jnp
add
sub
ret
mov
cld
mov
add
enter
adc
je
or
or
inc
jo
addr16
sub
xchg
add
add
pop
sbb
js
sub
mov
add
add
inc
add
insl
cmc
jo
add
mov
lds
add
lods
fidivrl
int
add
out
test
push
shll
mov
add
loopne
inc
iret
mov
in
lock
data16
mov
xor
push
xchg
xor
inc
movb
scas
rolb
aam
cmpsl
mov
jmp
outsl
addb
sti
adc
aaa
inc
add
add
add
add
pusha
add
pop
or
aaa
rolb
aas
or
add
xor
int3
and
mov
jno
je
lret
sub
add
popf
add
xlat
pushf
xor
jp
sbb
in
mov
dec
rolb
xchg
mov
in
aad
adc
sti
dec
cmp
fstl
add
add
popa
xor
sbb
mov
pusha
add
pusha
add
jge
fisubrl
mov
sub
pop
sbb
add
sqrtps
xor
add
add
lods
or
je
inc
add
add
mov
movsl
cmp
add
pop
rolb
divl
ljmp
aaa
hlt
add
in
dec
stos
lahf
sbb
loop
adc
inc
icebp
test
dec
push
add
add
lock
rolb
inc
add
xor
mov
fwait
repz
mov
add
iret
push
mov
pop
fdivl
push
add
popf
mov
add
sub
add
add
pop
icebp
fmull
cmp
xchg
add
jle
lret
or
loopne
sbb
fstpt
sbb
add
and
mov
and
mov
dec
push
pop
mov
sti
push
add
add
add
roll
ds
js
jb
in
dec
jno
incb
jmp
in
dec
aad
aas
int
add
mov
lret
in
jbe
sbb
push
rolb
lods
std
iret
jns
loope
cmc
mov
movsb
add
mov
test
loopne
aad
add
add
and
mov
cli
in
jg
add
jb
adc
cmpsl
add
loop
ffreep
pop
xor
add
cli
lret
addb
mov
mov
add
add
add
dec
mov
dec
push
add
add
mov
cs
and
add
add
sbb
movsl
sub
add
mov
jge
add
insl
enter
add
inc
add
xchg
mov
pusha
add
sub
sbb
add
pop
ja
and
mov
xchg
add
xlat
mov
scas
fists
mov
in
addb
out
dec
aad
shll
xor
adc
test
add
add
aas
push
cmp
jp
add
inc
add
outsb
pop
rolb
add
in
enter
pop
movsb
add
mov
inc
add
test
sbb
add
and
loopne
mov
add
add
add
add
in
aam
lds
add
adc
push
dec
lret
iret
jp
mov
add
loopne
mov
dec
push
add
adc
mov
jno
pop
jmp
testb
das
xor
in
inc
outsb
xchg
add
call
fwait
cmp
jno
addb
add
mov
jmp
out
add
add
or
add
fisttps
xor
mov
stos
mov
xor
xor
inc
mov
xchg
mov
or
mov
push
rcr
dec
add
adc
mov
push
ljmp
dec
rolb
dec
push
js
jecxz
je
inc
popf
fs
xchg
push
add
mov
mov
fmull
mov
pop
iret
mov
add
mov
mov
add
or
xchg
mov
test
jb
arpl
cli
cwtl
fidivs
in
cmp
add
jp
jo
push
add
enter
add
add
imul
add
cltd
fs
add
imul
fisttps
mov
add
add
je
jecxz
add
add
add
divl
pop
loop
push
xchg
add
push
test
jne
adc
mov
clc
and
repz
mov
and
mov
xchg
pop
dec
sarl
add
cmpl
jns
loop
jmp
add
test
add
scas
cmp
rcrl
call
test
inc
add
xchg
add
lods
push
add
add
add
xchg
mov
pusha
add
add
mov
das
push
pop
xor
mov
out
xor
lds
and
mov
int
add
jg
adc
push
add
add
data16
aaa
movsl
adcl
add
addb
push
add
xor
mov
add
add
pop
and
mov
icebp
and
mov
dec
dec
mov
repz
add
sti
cmp
mov
mov
add
test
add
mov
rolb
mov
lock
push
add
jo
movb
add
cmpl
add
sbb
add
mov
ret
mov
jae
add
xchg
repz
pop
cmp
add
int3
jge
mov
pop
cmp
inc
lods
in
hlt
add
shl
lea
mov
fiaddl
mov
mov
addb
je
xor
jmp
add
adc
ret
add
add
mov
add
add
add
mov
fdivp
add
fsubl
add
sbb
rolb
jns
add
rolb
xor
xor
add
inc
gs
test
add
sti
arpl
push
loope
mov
fidivrl
orl
or
leave
daa
mov
addb
add
mov
sbb
cmp
arpl
test
xor
add
sub
add
iret
test
cmpsb
add
ljmp
movntq
mov
ficoml
dec
into
stc
pcmpeqb
pop
pop
cmp
mov
add
mov
add
mov
adc
hlt
add
pushf
lds
dec
enter
add
scas
insl
push
push
dec
push
add
add
push
pop
fcoml
inc
jno
add
pop
loop
sbb
adc
rolb
jp
add
add
add
jno
jg
add
loop
repnz
js
mov
ja
lret
add
mov
add
and
ret
add
sbb
adc
mov
xchg
add
add
add
push
add
lcall
inc
add
sti
dec
icebp
testb
add
jg
std
jnp
inc
add
pop
sbb
test
outsl
in
fiaddl
stos
lret
mov
add
rolb
out
addb
cmc
xor
test
pusha
add
push
xchg
add
add
xchg
into
mov
push
or
test
test
push
push
add
pop
icebp
inc
add
jns
jecxz
add
add
mov
xor
sbb
xor
jl
out
iret
cmpl
data16
add
add
push
mov
push
aam
xlat
xchg
popa
scas
leave
mov
add
add
jge
add
and
mov
in
lds
add
xor
add
jecxz
mov
lods
cmp
scas
in
push
add
mov
out
jns
add
nop
add
in
fcom
add
mov
add
add
add
add
add
movb
out
pop
sbb
cld
cmc
pop
inc
add
cmp
add
jb
jg
add
faddl
xchg
add
sahf
out
pop
xchg
add
test
xchg
jle
push
or
sub
add
mov
jnp
pop
fisubrs
mov
add
insl
popa
mov
mov
add
cmp
je
xor
add
aam
cltd
pushf
fimuls
add
loopne
int3
jns
sbb
add
testb
add
loopne
add
je
rolb
test
push
add
pop
mov
pushf
xor
pop
pushf
bound
mov
int
ds
add
jle
sbb
add
mov
pushf
sub
add
out
idiv
repnz
rolb
nop
add
add
das
inc
in
rolb
fs
add
add
add
mov
add
ljmp
jae
dec
and
mov
mov
sub
addb
dec
cmpsl
imul
add
dec
shll
mov
add
add
mov
rolb
push
jp
pop
sahf
inc
movsb
add
add
add
imul
out
pop
into
xor
mov
inc
mov
ja
and
mov
fisttpll
gs
mov
jo
xchg
add
sti
imul
pop
pop
gs
dec
arpl
jno
xor
add
inc
push
mov
add
adc
xchg
add
mov
movb
add
xor
pop
pop
add
dec
ror
xlat
cmp
inc
add
add
mov
aas
lret
test
aaa
add
pop
xor
or
add
test
push
sbb
and
mov
repz
repz
xchg
add
inc
cld
sti
adc
add
add
mov
ret
cmp
add
add
les
adc
ja
jnp
imul
inc
and
mov
add
jg
cmpsl
jbe
cmp
lods
fstpl
dec
xor
stos
sub
add
mov
push
hlt
add
in
lea
test
sbb
or
in
pusha
add
hlt
add
mov
out
xchg
add
addl
in
mov
dec
push
int
add
adc
enter
jmp
add
js
rolb
addl
insb
insb
sahf
sbb
outsb
mov
mov
add
call
decb
cmp
sbb
mov
sbb
popa
ret
call
nop
add
add
pop
dec
dec
addb
cmp
mov
scas
xchg
jb
outsl
mov
add
jecxz
and
mov
inc
add
mov
repz
mov
add
cmc
xchg
out
mov
push
add
and
mov
add
inc
add
pop
cmpsb
add
int3
arpl
in
das
loopne
pusha
add
fs
mov
add
out
sahf
scas
lods
nop
add
clc
mov
add
ret
pop
mov
add
add
ds
add
add
jns
data16
add
add
lods
or
cmpsb
add
cmp
js
aas
xchg
mov
mov
popf
lock
jb
popf
je
leave
sbb
out
mov
xchg
add
or
push
add
in
and
mov
push
add
add
mov
add
inc
addl
push
jbe
rolb
clc
rolb
sahf
in
test
outsb
mov
mov
adc
in
aam
popf
lods
lds
frstor
add
add
repz
add
add
rcrl
pop
ret
outsl
je
ret
stc
imul
fcompl
and
add
add
ja
add
je
xor
aad
add
lds
add
mov
std
inc
add
mov
add
push
add
out
sbb
mov
jmp
add
push
add
add
outsl
arpl
lret
push
xchg
loope
add
add
pop
repnz
lea
add
test
dec
xor
testl
mov
pusha
add
and
cwtl
push
enter
push
jo
inc
add
add
loope
add
rol
lea
lds
add
add
adc
add
jae
dec
cmp
and
mov
push
inc
add
lea
dec
data16
add
add
mov
lea
in
js
add
pop
mov
add
mov
mov
sbb
add
mov
fidivl
pushf
lea
add
fnstenv
or
xor
gs
divl
add
add
inc
add
add
insb
mov
mov
add
dec
mov
mov
jae
jnp
adc
mov
pop
push
inc
xor
sbb
mov
xchg
push
add
les
nop
add
mov
arpl
cmp
mov
stos
cltd
cwtl
inc
cmp
add
arpl
sbb
add
pushf
dec
mov
mov
stc
cltd
mov
ds
cmp
repnz
pusha
add
add
jmp
add
push
in
jle
add
and
mov
and
mov
jnp
cmp
and
fdivrl
scas
pop
leave
loope
sbb
add
mov
jl
test
add
add
popf
in
data16
add
cmpsb
add
add
and
sahf
loopne
testl
add
ret
fisubrs
ja
xor
je
fimuls
testb
add
call
add
add
jmp
cs
and
mov
fldt
divl
add
add
xchg
mov
inc
add
pop
test
mov
loope
add
or
add
in
mov
add
shll
add
bound
mov
add
add
push
add
dec
pop
cmc
mov
xchg
add
add
push
add
adc
popl
or
dec
xor
insb
lret
icebp
mov
jg
dec
shl
add
mov
sub
jno
add
xor
aaa
mov
lock
add
add
xchg
add
cltd
hlt
add
add
sbb
mov
lods
mov
cld
or
cltd
push
add
aam
adc
jb
add
mov
add
fcompl
jle
add
imul
fldl2t
insl
jmp
jecxz
nop
add
add
and
add
add
into
xor
push
mov
clc
out
rcll
mov
in
outsl
popa
in
add
cmp
push
add
sub
sub
iret
jb
mov
add
mov
add
add
sub
xchg
add
add
fwait
stos
fidivrl
push
data16
in
sbb
cltd
rolb
lock
fwait
pop
cmpsl
movsb
add
rolb
or
push
add
test
fisubs
sub
add
add
cmp
outsl
jecxz
addb
pop
add
cmc
jbe
adc
jnp
add
int3
sahf
sub
jmp
mov
loope
inc
fistpl
in
in
mov
mov
adc
add
mov
ret
jb
cli
inc
add
add
imull
aam
push
pop
fcomps
add
add
or
cmp
fcomps
pop
push
inc
add
mov
add
mov
add
xchg
les
jg
cwtl
push
add
add
add
mov
addb
dec
jne
clc
mov
mov
add
add
add
add
add
test
add
pop
das
jg
add
sahf
lods
push
mov
pop
xor
inc
add
and
xchg
add
dec
add
cmp
jns
push
add
add
add
ljmp
add
mov
pushf
rolb
add
les
nop
add
lcall
lahf
dec
push
add
add
add
sub
mov
les
push
punpckhdq
adc
push
add
rolb
add
mov
cmp
add
in
or
lods
repz
sahf
mov
mov
jo
push
jge
add
imul
cmp
sub
in
int3
lock
fdivrs
adc
pop
cli
lret
add
in
xchg
les
test
xor
push
sub
add
cs
pop
stos
mov
add
gs
add
inc
add
test
enter
rcrl
and
mov
addb
std
sbb
sbb
add
add
add
les
dec
outsl
mov
add
cs
and
jp
add
shrl
lock
sub
mov
add
cmp
add
add
cli
lret
mov
movb
std
pushf
mov
add
xchg
add
add
sti
lahf
sbb
add
push
fstps
mov
inc
add
add
pushf
adc
inc
push
add
pop
dec
in
sub
imul
mov
add
sbb
je
dec
cmp
add
xchg
movsl
ja
add
aad
add
mov
popa
or
aas
or
add
testb
add
cld
cwtl
lods
xor
push
inc
in
push
push
add
jecxz
jge
int
mov
add
add
das
jnp
and
mov
pusha
add
add
add
sub
add
sbb
roll
repnz
or
add
in
add
clc
mov
add
dec
scas
adc
rolb
mov
fstps
add
jae
aad
lahf
push
imull
sbb
add
adc
leave
jecxz
cwtl
sub
jecxz
mov
add
xchg
add
fcmovnb
dec
pop
add
or
inc
sbb
pop
cs
dec
aaa
sahf
jmp
inc
pushf
into
les
data16
stos
call
inc
jno
add
pop
stos
out
addb
ds
mov
jno
cmp
icebp
rorl
and
mov
in
pop
hlt
add
inc
jle
outsb
cmp
mov
add
add
call
add
add
mov
jg
clc
test
mov
add
and
add
push
add
add
stos
jne
out
stos
and
mov
add
fnstcw
test
push
add
push
add
add
jne
mov
arpl
lock
add
add
add
dec
sti
or
add
add
scas
dec
fimull
rolb
iret
or
xchg
add
movsb
add
ja
lods
push
mov
xor
repnz
add
mov
movsl
test
fisttpll
lock
fsubrl
xor
testb
add
push
add
data16
mov
mov
mov
add
add
add
pop
stos
stos
pop
popa
rolb
and
mov
mov
mov
dec
les
sahf
inc
add
int
pop
sbb
add
bound
mov
add
or
mov
in
les
call
lods
push
add
add
xor
imul
cmp
fcompl
dec
sub
and
add
test
add
add
iret
sub
sbb
mov
cmp
jo
pop
cmp
adc
movsl
cwtl
add
mov
fsubrs
add
addb
add
mov
stos
add
inc
push
shll
mov
aaa
nop
add
sar
and
mov
jne
sbb
lahf
inc
add
les
std
inc
xchg
jo
aad
rolb
shrl
rolb
xchg
mov
jl
dec
aam
sahf
inc
add
sbb
test
mov
and
rcll
loopne
sahf
and
add
icebp
test
add
mov
mov
cmp
fnstenv
lods
cmp
fldl
add
and
mov
xor
ret
add
add
mov
and
mov
rolb
dec
ljmp
adc
lret
sbb
cltd
xor
mov
fwait
add
bound
mov
and
mov
cli
jecxz
jnp
add
pop
frstor
pop
push
je
cmovbe
mov
cmpsb
add
fwait
or
add
push
add
insb
ljmp
add
add
sub
add
mov
mov
cmp
push
loope
sub
aam
fwait
mov
call
add
add
add
loopne
lock
in
test
sbb
or
iret
sti
pop
adc
sub
hlt
add
dec
jecxz
jge
scas
cltd
mov
pop
pop
pop
pop
inc
add
add
adc
mov
xor
and
mov
add
xchg
add
add
lret
insb
std
das
xlat
jne
outsb
daa
jp
rolb
cmpsl
push
cld
pop
stc
add
aas
aam
rolb
out
rol
add
mov
fwait
rolb
pop
jo
xchg
add
jb
dec
roll
add
dec
shrl
add
add
les
jae
daa
add
enter
test
repz
add
jns
sbb
les
and
leave
jno
std
movb
add
stos
std
pop
cmpsb
add
add
test
es
inc
and
push
add
add
add
frstor
add
pop
lock
ljmp
add
lret
insb
jae
je
xchg
mov
outsl
xor
movb
add
loop
loop
test
xchg
mov
cmpsl
scas
je
jmp
lock
push
add
add
inc
lods
rolb
add
mov
mov
add
jge
push
add
jmp
mov
add
mov
push
mov
out
add
hlt
add
mov
sub
and
mov
imul
icebp
int3
addb
xor
inc
add
mov
sbb
hlt
add
mov
repnz
pop
push
add
xchg
add
jmp
add
xor
or
rolb
dec
rolb
push
add
iret
scas
xchg
add
add
arpl
add
add
add
lds
pop
adc
adc
add
add
mov
add
clc
ljmp
xchg
sbbl
sub
imul
mov
adc
ret
mov
int3
sbb
mov
fsts
push
add
xchg
add
out
xchg
xor
mov
pop
jne
xchg
xchg
lret
mov
xor
aad
add
and
add
push
add
dec
sbb
and
mov
add
jno
lahf
push
add
xchg
dec
adc
add
js
jne
cwtl
icebp
popf
cltd
or
in
inc
je
pop
and
push
stc
cltd
sti
pop
cmp
test
std
adc
js
add
add
jle
imul
xor
push
cmpsb
add
xchg
stos
add
sub
add
lds
jge
add
add
xor
sub
add
mov
mov
lahf
xchg
add
mov
jo
je
push
in
cmc
mov
push
adc
data16
and
enter
lods
out
ret
xchg
scas
imul
jge
add
sub
jnp
add
add
add
add
add
or
push
push
xchg
xchg
add
push
add
filds
add
loopne
pop
mov
insb
int3
rolb
call
bound
mov
add
add
fistl
add
xchg
rolb
addb
add
add
xchg
cld
addl
push
xchg
add
add
push
add
adc
add
jp
cmp
test
xchg
mov
add
pop
sub
mov
cmpl
fldenv
add
add
add
add
add
jp
enter
pop
push
add
aaa
cmc
aad
sbb
rolb
js
push
mov
inc
mov
addb
xchg
add
pusha
add
icebp
js
addb
mov
test
add
xchg
enter
xchg
fwait
mov
push
add
add
shrl
adc
add
push
add
rolb
adc
popf
or
inc
add
mov
xor
jns
pop
clc
stc
dec
lret
xor
movsb
add
xor
mov
jbe
mov
add
je
push
bound
mov
out
cmp
and
mov
push
add
stos
bound
mov
pop
mov
add
cmc
fstpt
cmpsb
add
cmpsb
add
jmp
sbb
daa
pop
lock
mov
mov
loope
add
xor
fwait
and
mov
clc
mov
add
add
push
test
leave
outsb
sbb
clc
test
add
mov
gs
jl
add
push
daa
dec
addb
or
mov
add
inc
mov
add
add
add
les
popa
cmp
les
iret
sbb
ds
add
add
rolb
iret
add
les
xchg
add
cli
ret
outsb
test
test
addb
mov
sbb
cmp
add
test
cltd
fiadds
decb
add
add
add
loope
or
roll
mov
mov
jecxz
add
add
out
ja
mov
add
adc
scas
addr16
mov
lcall
ret
xchg
add
mov
ret
dec
dec
in
and
js
inc
add
fmuls
pop
fidivrl
add
add
out
js
jle
pushf
icebp
and
adc
repz
out
jmp
lods
mov
and
fcoml
add
in
xchg
rolb
rcrl
add
add
or
add
mov
add
fstpt
cld
push
and
call
pop
add
push
add
ja
lods
mov
sub
ret
sub
int
les
push
gs
add
cli
lds
add
aam
sub
pop
inc
add
mov
push
mov
xor
fildl
add
incb
xchg
sahf
inc
add
add
xchg
mov
push
imul
mov
stc
push
sbb
jmp
adc
in
add
adc
add
cmp
dec
mov
out
sbb
add
add
nop
add
mov
add
addb
stos
fs
add
inc
mov
xchg
mov
jno
add
push
add
add
shl
mov
jne
test
data16
jne
clc
lahf
in
push
add
mov
mov
dec
out
std
mov
pop
pop
adcl
cmpsb
add
add
scas
push
dec
push
sbb
and
add
push
add
jp
or
mov
or
ret
es
leave
inc
add
inc
sub
xchg
jbe
loop
pop
sub
lods
ja
adc
and
push
cmp
cmp
dec
rorl
inc
rolb
lea
push
repnz
mov
insl
and
add
scas
aad
add
jmp
mov
add
icebp
xlat
pop
mov
add
add
loope
sahf
inc
push
add
testl
mov
notl
add
add
mov
data16
icebp
jge
add
loope
jmp
add
mov
outsl
mov
add
add
dec
icebp
mov
cmp
scas
dec
bound
mov
xchg
mov
jbe
lcall
cli
jbe
jp
add
add
js
add
sbb
popa
loop
push
jo
add
popa
and
mov
frstor
adc
lods
mov
sbb
add
pop
jmp
add
fidivrs
nop
add
add
inc
add
daa
add
sub
mov
or
or
addb
xor
add
add
sbb
add
add
add
fistps
add
mov
jnp
lock
add
add
add
add
mov
jb
push
add
mov
aad
outsl
pop
pop
jbe
dec
mov
outsl
fsubr
sbb
add
nop
add
jg
jecxz
add
mov
push
add
pop
jno
mov
ret
mov
xor
add
dec
pusha
add
jno
push
add
add
add
mov
xchg
add
add
dec
rol
stc
mov
movsb
add
xchg
addb
aam
or
add
inc
imul
pop
outsb
or
aaa
addb
mov
in
adc
dec
mov
add
gs
add
mov
dec
pop
and
mov
dec
icebp
inc
add
add
add
loopne
mov
cmpsb
add
addb
or
mov
les
mov
out
cmp
pop
xor
test
push
add
test
dec
or
repnz
add
loopne
cmp
repz
jns
jns
add
push
add
cwtl
dec
or
push
add
xchg
xor
add
mov
and
xchg
add
fs
cmp
add
mov
ja
arpl
mov
stc
xor
pop
mov
add
dec
mov
icebp
and
xchg
hlt
add
adc
movsb
add
adc
xor
fstpt
mov
test
inc
add
add
stc
mov
loopne
mov
cmp
add
jp
cli
cli
cmpsb
add
pop
pop
push
add
enter
enter
mov
enter
sti
ljmp
cmpsb
add
push
and
mov
jb
test
jl
xor
add
loop
iret
mov
repnz
jnp
add
add
adcl
aas
test
mov
add
pop
repnz
xchg
repnz
call
adc
mov
lds
lahf
aad
add
add
icebp
shll
pop
iret
enter
mov
or
mov
adc
sbb
inc
add
add
mov
mov
xor
int3
ja
add
add
jle
mov
les
add
or
rolb
add
rolb
jge
add
mov
mov
and
mov
cld
movsl
jp
dec
pop
push
add
add
dec
filds
mov
roll
jne
add
add
scas
cmpsl
xor
add
mov
mov
add
lea
jge
add
add
cmp
or
jae
pop
stos
push
sbb
repnz
dec
mov
fstl
les
cwtl
das
iret
sar
test
dec
hlt
add
inc
inc
add
insb
dec
cmp
add
pop
rcll
pusha
add
add
add
add
loopne
push
lds
outsb
fwait
pop
push
or
add
dec
mov
negl
mov
mov
fcmovbe
lods
mov
jmp
xchg
add
adc
imul
add
add
ds
testl
cmp
in
sub
add
mov
add
rolb
adc
xor
lahf
fsubp
pushf
test
popa
jecxz
add
and
and
mov
imul
adc
push
add
dec
jg
add
inc
and
loop
push
add
add
mov
fwait
push
add
fistps
xchg
out
add
pop
rcr
mov
add
add
push
add
mov
fadds
outsl
into
out
mov
int3
push
cli
add
mov
mov
addb
imul
and
xchg
mov
call
testb
out
test
adc
ds
nop
add
add
add
mov
std
outsl
sub
lret
add
dec
and
test
imul
cwtl
xor
and
mov
sti
and
loope
add
add
xchg
mov
xor
add
push
xchg
sbb
add
mov
mov
add
mov
rolb
push
cmc
pop
xchg
pop
xchg
sub
pop
lods
xchg
add
cmp
movsb
add
in
test
pop
lods
add
pop
mov
or
gs
lock
add
add
addb
add
pop
clc
insl
cmpsb
add
add
add
pop
push
add
add
add
sbb
add
sub
add
mov
add
xchg
mov
inc
add
add
and
jno
mov
and
aaa
push
add
cli
mov
add
add
mov
adc
cmpl
xchg
mov
add
je
push
add
pop
sub
sub
addr16
mov
adc
cltd
add
mov
add
and
iret
loop
rolb
xchg
add
mov
test
add
mov
add
inc
add
ficomps
test
adc
push
add
mov
add
adc
int3
call
rolb
fistl
dec
in
add
dec
adc
add
mov
and
mov
xchg
add
and
mov
add
das
pop
dec
jmp
jle
add
add
pop
hlt
add
add
add
add
add
and
push
add
add
cmp
add
in
popa
lret
popl
mov
add
pop
fcoms
add
xchg
push
mov
dec
sub
maxps
aad
add
test
add
jo
aad
mov
inc
out
add
pop
je
jge
cmp
jecxz
dec
pop
lock
into
add
mov
jnp
add
fnstcw
cmp
pop
mov
lahf
jg
mov
cld
lock
add
xor
add
out
std
sub
hlt
add
add
pop
inc
mov
jbe
cwtl
dec
call
aam
stos
testb
dec
lahf
mov
adc
ds
push
add
adc
mov
bound
mov
test
add
add
imul
jbe
loopne
xchg
out
dec
mov
jo
in
jle
ds
add
mov
fdivl
lret
stos
xchg
inc
add
cmc
nop
add
add
sub
add
xchg
jmp
mov
inc
add
aas
cmovg
push
lcall
inc
enter
adc
pop
add
inc
or
xor
sub
mov
add
mov
adc
mov
inc
sti
cmpsb
add
xor
mov
repz
enter
inc
and
mov
sub
dec
js
out
add
into
sub
out
push
loop
mov
jne
data16
daa
and
insl
out
stc
addb
add
aam
loop
jg
sub
inc
inc
add
mov
add
jle
push
popf
adc
mov
sbb
and
pop
in
xor
out
cmp
push
add
ret
setbe
mov
jl
test
pop
into
jne
add
add
mov
lds
mov
xor
mov
lods
std
add
ds
lods
int3
enter
nop
add
add
push
inc
add
add
sub
mov
mov
jae
add
jae
xchg
add
add
icebp
sub
add
add
add
add
mov
add
add
cmp
xlat
xchg
outsl
adc
sbb
in
xor
aad
dec
ja
xchg
add
add
add
and
add
ret
cmpsl
xchg
mov
add
add
add
mov
adc
dec
out
sub
out
adc
dec
das
pop
mov
ret
addb
add
std
loop
mov
dec
push
add
push
testb
popf
test
cmovnp
cld
aas
mov
add
out
scas
mov
ja
jae
ret
dec
push
lret
aas
push
add
add
push
add
add
mov
jmp
push
add
outsb
rolb
add
mov
dec
lret
jae
add
mov
iret
ljmp
daa
xor
cmc
inc
jge
jg
scas
jne
add
pop
jle
add
inc
add
popf
sub
add
clc
setl
push
inc
pop
inc
data16
sbbl
or
pop
cmp
xor
data16
add
out
sub
jecxz
xor
pop
add
fisubrl
add
icebp
std
es
testl
jmp
push
adc
bound
mov
xor
xor
and
add
add
ret
xchg
adc
adc
add
loopne
xchg
mov
mov
xchg
add
lcall
rolb
clc
fcoms
push
inc
add
lcall
test
popf
or
data16
jmp
adc
movsl
push
add
add
add
xchg
shrl
in
add
jmp
adc
mov
push
add
nop
add
add
adc
xor
cmc
in
cmc
test
out
add
push
add
out
sub
xchg
sub
popf
xchg
loop
pop
jo
dec
addr16
pop
daa
push
adc
or
add
test
dec
in
movb
aaa
cs
mov
sub
pop
loopne
test
and
ljmp
add
mov
push
add
mov
xchg
add
add
xor
pushf
mov
ss
add
cmp
add
arpl
bound
mov
add
mov
dec
bound
mov
stos
mov
add
add
add
add
pop
add
xor
imul
cli
scas
outsl
das
xchg
add
add
sub
mov
mov
in
pop
add
test
add
adc
add
pop
iret
pop
xor
cmp
movsb
add
add
stc
add
add
int3
dec
xchg
add
iret
cld
hlt
add
add
mov
pop
fnstsw
jne
add
push
inc
xor
mov
fldl
cmc
inc
add
pop
aam
fmuls
cmp
add
test
ret
sbb
adc
mov
add
test
mov
cmp
add
negl
pop
and
sub
jge
mov
add
addb
add
xchg
lock
adc
pop
pushf
pop
inc
add
inc
add
mov
dec
sbb
cmp
jae
enter
add
add
add
mov
add
adc
inc
in
pop
and
inc
add
add
pop
aas
insb
movb
adc
loopne
xlat
and
add
adc
std
jmp
cmpl
xchg
adc
test
mov
add
add
add
lds
xorl
in
fwait
cmc
xor
mov
out
sti
xchg
add
add
test
cwtl
test
add
call
movsb
add
xchg
add
add
mov
movb
fcoms
sti
ja
add
add
add
in
add
and
add
push
add
xlat
icebp
lahf
cs
push
add
cmp
add
add
in
push
ja
push
add
push
dec
fisubl
testb
adc
mull
sbb
mov
add
add
cmp
jmp
sbb
xchg
add
arpl
lret
repz
mov
adc
xor
test
add
pusha
add
fdivrs
pushf
cmp
mov
ds
push
jle
popf
outsl
rolb
lahf
cmpsl
or
push
add
add
or
add
dec
mov
add
ret
add
cmp
add
add
fyl2x
mov
outsb
imul
and
mov
test
sarl
mov
lcall
cld
in
add
rcl
jne
xchg
pop
ficoms
lret
rcll
add
movb
mov
lcall
add
cmp
add
das
ret
add
out
mov
add
add
add
add
loop
push
sarl
add
mov
lods
push
add
xor
mov
mov
js
add
testb
add
sub
add
dec
mov
push
jecxz
push
add
mov
pop
incb
xor
xchg
sub
push
xchg
mov
leave
insl
jmp
sbb
push
leave
sbb
add
mov
xchg
add
aas
push
shrl
in
aaa
test
sbb
pop
jmp
call
rolb
xor
xchg
xor
mov
push
push
add
or
add
mov
aaa
scas
nop
add
dec
out
xor
push
add
inc
add
ret
pushf
mov
jne
adc
add
lea
lcall
add
xchg
add
add
icebp
add
add
add
jo
cli
jp
insb
mov
call
cwtl
cwtl
cmp
sbb
addb
cld
stos
xor
and
in
mov
mov
ret
mov
fdivrl
add
jg
dec
pusha
add
add
cmp
cmp
add
push
imul
xchg
ds
or
jnp
pop
or
das
popl
clc
stos
or
xor
insb
test
add
add
lcall
fldt
inc
xchg
sbb
xchg
and
testb
icebp
in
cltd
adc
mov
add
add
xor
add
mov
inc
add
icebp
into
sahf
addb
or
add
mov
sti
and
fmull
mov
add
mov
mov
add
and
out
jns
push
sbb
fisttpl
push
sbb
adc
in
movb
pop
lds
add
add
mov
xor
xor
clc
xchg
loopne
subl
adc
rcr
test
add
or
add
jle
add
add
add
push
pop
stos
fnstsw
xchg
mov
xchg
inc
dec
inc
test
adc
add
add
movsl
jnp
add
xchg
popa
imul
add
data16
add
mov
mov
add
add
lret
add
arpl
push
pop
adc
add
mov
jo
mov
pusha
add
add
arpl
cwtl
adc
and
mov
inc
out
push
xchg
nop
add
add
adc
add
data16
xor
fcmovnbe
or
comiss
aaa
or
js
pop
insl
divl
sub
add
mov
scas
gs
add
repnz
add
mov
add
pop
outsl
inc
add
pop
xlat
in
pushf
mov
ffree
add
arpl
xchg
add
test
add
inc
add
dec
and
jmp
iret
leave
cmp
xchg
add
jnp
leave
pop
sub
mov
addb
packuswb
dec
mov
lods
adc
popf
mov
fisttpll
lods
cld
repz
add
mov
das
fisubs
add
js
push
add
add
jg
inc
add
das
aaa
iret
int
cmp
mov
popf
pusha
add
add
sub
add
jnp
js
add
shl
pop
repz
ljmp
pop
mov
add
mov
ffreep
popa
adc
addb
jp
pop
inc
out
arpl
loope
add
add
movsl
hlt
add
add
mov
outsb
fisttpl
into
rolb
negl
add
xor
cmpsb
add
push
add
add
std
ja
mov
inc
push
call
mov
test
pusha
add
add
add
xchg
add
mov
inc
lods
les
adc
int3
and
xchg
add
jns
mov
fiaddl
add
add
jbe
xchg
scas
jmp
roll
test
mov
test
mov
mul
sbb
hlt
add
movsl
xchg
add
push
aaa
pshufw
add
scas
cmp
add
test
jae
push
add
mov
rolb
xchg
jmp
lret
mov
mov
addb
add
rcrl
add
lods
dec
adc
pop
pusha
add
mov
or
add
add
add
and
mov
pop
popa
lods
cld
adc
dec
jbe
test
daa
test
fidivrs
mov
pop
add
inc
into
jecxz
pushf
mov
into
je
xchg
mov
jb
pop
stos
mov
inc
add
xor
mov
jl
cs
add
adc
pop
or
addr16
push
sub
push
addb
jmp
rolb
mov
mov
add
pop
enter
rolb
cld
lret
data16
add
add
add
cltd
xor
aad
in
jp
sahf
mov
bound
mov
add
pop
das
add
add
adc
icebp
rolb
outsb
lods
inc
push
jo
dec
out
ss
xchg
pop
sub
mov
dec
les
mov
mov
fdivl
loop
sbb
add
add
shll
mov
sub
and
sub
frstor
mov
mov
in
add
add
pusha
add
cwtl
loop
roll
add
adc
add
fisubrs
jo
addb
add
pop
ljmp
mov
int3
xor
pop
mov
out
notl
add
add
and
mov
add
add
bound
mov
insb
cmp
add
mov
cmc
mov
iret
insl
mov
inc
cltd
sti
aas
sti
cmp
sbb
dec
iret
mov
in
jge
add
add
add
pop
pop
add
add
add
daa
into
mov
rolb
xchg
and
mov
js
inc
mov
cld
and
mov
sub
xor
mov
mov
lret
sar
sbb
fdivr
testb
nop
lods
push
arpl
pop
mov
cltd
mov
add
stc
dec
decl
into
imul
adc
push
and
dec
les
testb
sub
inc
add
popa
mov
add
and
add
add
add
mov
scas
and
xchg
cmc
cmp
sbb
pop
into
jne
add
inc
add
iret
je
rcl
add
add
pusha
add
pop
jno
rolb
pop
into
rolb
testb
xchg
arpl
jo
and
and
add
dec
cmp
add
jmp
xlat
jnp
cmp
lea
xchg
add
or
add
sbb
add
add
add
add
mov
pop
dec
std
dec
cmp
add
pop
mov
mov
push
xchg
add
lahf
cli
mov
xor
add
jle
add
mov
add
xchg
pop
fwait
sub
call
div
add
add
push
pop
mov
add
and
mov
inc
add
lahf
and
sbb
pop
fdivs
je
mov
insb
in
sti
add
pusha
add
push
xor
testb
add
mov
stc
pop
movsl
and
into
adc
test
and
lcall
roll
add
fwait
call
add
xor
xchg
or
add
fadds
add
xorl
popf
sti
out
enter
add
ret
sbb
mov
add
shl
cs
lock
add
ljmp
pop
inc
add
xchg
sub
stos
xchg
je
stos
mov
and
mov
add
repnz
hlt
add
pop
pop
int
add
add
jge
sub
add
mov
cmpsl
movb
mov
pop
mov
das
cld
arpl
add
add
sbb
scas
add
jp
aad
mov
and
mov
add
aaa
in
mov
sbb
ret
scas
scas
xchg
data16
mov
stc
repz
mov
mov
add
fs
add
dec
xchg
sbb
adc
mov
icebp
sub
data16
dec
in
adc
pop
mov
aaa
mov
mov
testl
add
mov
add
sbb
inc
les
cmpl
das
inc
add
mov
mov
push
test
aad
in
add
xchg
xchg
add
jae
add
inc
in
add
hlt
add
add
mov
jns
into
rolb
leave
jo
mov
insl
outsl
cmp
sub
add
mov
add
scas
test
add
add
jg
insb
cltd
out
sahf
subl
call
push
addb
fwait
ljmp
les
ja
mov
xlat
add
jmp
sti
cmp
repnz
add
jbe
inc
or
lods
test
mov
add
add
lds
mov
push
mov
sub
sub
add
add
or
add
add
cmp
fistl
rolb
cmpsl
std
into
int
add
pop
mov
jl
add
leave
mov
add
xchg
add
pop
dec
cmp
outsl
mov
add
mov
lahf
xlat
icebp
fisubrl
pop
and
mov
lods
cmp
pop
js
mov
xchg
ljmp
pop
xlat
cmp
dec
addb
push
mov
es
or
add
pop
pop
ja
add
addr16
add
adc
add
mov
leave
add
pop
inc
add
mov
inc
add
hlt
add
test
add
bound
mov
int3
fstp
mov
shl
dec
dec
jnp
pop
inc
add
out
add
mov
mov
test
icebp
popf
movsl
lret
das
inc
lds
fnstsw
mov
mov
dec
push
add
mov
adc
mov
mov
iret
outsb
aam
and
loop
adc
lods
je
mov
std
sbb
jne
fists
cli
addb
mov
movsb
add
int3
adc
adc
aad
mov
xor
add
lock
mov
mov
jb
add
int
add
fmuls
adc
add
mov
mov
pop
mov
data16
pop
lret
inc
xchg
vsqrtpd
add
and
push
addr16
fisubs
sub
sub
add
in
cli
ds
add
repnz
sbbl
addr16
clc
ja
jo
xor
mov
movb
add
add
les
push
or
add
add
jae
add
mov
add
test
mov
mov
dec
mov
scas
movsb
add
add
test
adc
bound
mov
mov
push
add
sbb
cmp
cwtl
dec
push
add
push
push
mov
add
mov
ret
mov
cmp
add
add
movb
mov
pusha
add
sbb
imul
cmpsb
add
add
aam
cmp
pop
dec
sahf
adc
pop
jge
or
add
sahf
pusha
add
dec
mov
or
add
outsb
pop
add
mov
out
call
xor
rolb
add
jecxz
sbb
das
ja
mov
lods
push
add
bound
mov
scas
cmpsl
push
jecxz
pop
int
pop
stc
in
push
popf
xchg
add
dec
arpl
lcall
adc
add
add
lds
lcall
aaa
movsb
add
adc
subl
jg
xor
daa
jl
add
sub
bound
mov
mov
jle
fldt
lods
rcll
je
mov
add
mov
xchg
add
add
xlat
add
stc
push
out
add
ret
add
dec
data16
je
dec
sbb
mov
scas
and
mov
add
cwtl
mov
push
arpl
add
mov
cwtl
rolb
mov
add
movl
test
js
or
movsl
xchg
outsb
fs
ja
add
add
xlat
out
cmp
mov
clc
xchg
add
xor
add
lahf
movsb
add
or
int3
test
add
push
xchg
add
mov
aas
cs
or
add
or
add
pusha
add
nop
add
pusha
add
popf
clc
xchg
or
add
outsl
push
addb
add
add
add
rolb
jae
add
add
push
add
sub
gs
pop
aad
leave
addb
add
add
clc
pop
xchg
mov
add
mov
xchg
push
push
cmp
adc
rcrl
dec
and
xor
add
mov
add
add
insb
xchg
push
mov
add
jg
popa
push
xchg
xlat
xchg
and
add
imul
sub
call
add
scas
pop
aam
jns
loop
and
add
dec
movsb
add
add
xor
nop
add
mov
xchg
test
xchg
jg
pop
movsb
add
lock
fcmovbe
add
cmp
loop
das
test
fcmove
leave
lret
add
sub
lcall
mov
xor
push
mov
jno
jecxz
ja
sub
add
jecxz
add
push
add
je
cmp
sbb
pushf
cmpsb
add
add
add
add
add
insb
dec
in
cmp
mov
mov
test
je
xchg
jne
inc
cmp
fwait
lds
and
add
add
