les
rorb
repz
sti
fisttpll
std
mov
cmp
mov
inc
add
and
sbb
icebp
scas
push
adc
adc
adc
rcr
jbe
aam
add
or
add
cmp
aaa
jbe
movsb
bound
inc
xchg
pushf
and
pop
jle
sti
rcrl
or
xchg
adcl
add
add
and
xor
lods
je
bound
xchg
lea
adc
lods
out
jg
mov
pop
push
jne
stos
fsubrs
push
jae
and
je
pusha
add
xchg
cmpsl
inc
jmp
sub
mov
loopne
xchg
jg
movsl
repz
fnstsw
out
and
int3
adc
clc
fcmove
cmpsb
cmp
addb
or
cmp
or
aad
test
mov
int3
add
out
dec
fidivl
add
add
add
filds
ds
add
mov
lds
add
inc
add
add
lods
js
imul
rolb
add
xor
jmp
inc
xchg
mov
mov
cmp
xchg
pop
fdivrl
mov
add
std
fcoml
fimuls
rcpps
addb
inc
add
push
addb
stos
xor
in
push
mov
aaa
pop
data16
ret
and
int3
cli
sbb
xor
or
add
out
sbb
or
jns
mov
or
fcoml
add
popf
clc
mov
fwait
movsl
cli
dec
jmp
jecxz
sub
add
insl
paddw
or
mov
loopne
addr16
movb
add
xchg
adc
xor
or
cltd
fisubrs
pop
test
out
sbb
enter
inc
add
insb
mov
pusha
add
inc
add
cmc
pop
dec
or
push
sub
sarl
add
pop
xchg
pusha
in
test
stos
dec
movsl
mov
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
lret
mov
pop
cmpsb
in
dec
jp
scas
sub
add
loop
testb
aad
arpl
inc
add
add
push
cmp
xchg
test
lcall
pop
adc
sbb
add
int3
inc
test
inc
add
cmp
add
adc
mov
out
inc
addb
sbb
add
imul
and
jmp
mov
ficoms
xchg
jnp
je
add
sub
ret
sbb
xlat
les
sub
addb
sbb
cs
pop
aaa
cmp
inc
add
loopne
add
mov
jb
clc
dec
stos
test
mov
cmp
imul
mov
mov
cmpsl
jbe
call
add
call
adc
incb
fwait
into
fsts
pop
jmp
addb
shll
add
lret
fdivrs
cmp
scas
jae
jecxz
and
mov
push
call
add
xchg
fnstcw
loopne
adc
sbb
clc
xchg
clc
fistpl
jge
hlt
pop
jmp
add
dec
adc
add
add
sub
cli
ret
popa
scas
js
push
movsl
fldcw
ljmp
addb
mov
push
int3
jmp
dec
aad
add
push
fadd
loope
sub
add
add
add
mov
push
lret
fidivrl
add
add
test
jns
jns
cmp
adc
popf
movsb
push
add
outsb
fsts
dec
xor
data16
add
and
inc
add
jecxz
rcrl
scas
push
cwtl
and
rorb
cmpsl
ret
bound
test
inc
add
mov
ss
mov
push
aad
sub
xchg
loopne
sbbl
or
adc
popf
clc
mov
jmp
cmp
gs
sub
add
gs
in
sahf
scas
ss
test
or
insl
sbb
popa
into
bound
test
lods
bound
das
pop
xor
std
imul
mov
out
jg
fstpl
fwait
push
or
mov
stos
mov
sbb
lds
lret
push
sahf
outsl
enter
jp
aam
jmp
bound
repnz
xor
out
push
sub
xlat
mov
jp
lcall
pop
in
mov
mov
jo
movsb
mov
enter
cmc
xchg
inc
add
clc
mov
or
push
inc
add
push
xchg
pop
sbb
jle
dec
mov
pop
mov
xlat
data16
dec
sub
add
pop
sbb
add
xchg
xchg
in
sub
mov
lret
adc
lods
jmp
scas
pop
hlt
cltd
xchg
ja
sub
dec
xchg
fwait
jnp
rolb
jle
sbb
sub
mov
imul
mov
adc
cltd
rorl
and
xchg
out
sub
mov
mov
rclb
imul
jns
adc
add
or
lods
ss
pop
sbb
test
inc
add
inc
addr16
stc
jb
sub
pop
test
mov
call
sub
sahf
aad
inc
add
lea
or
mov
jge
xchg
add
jg
xchg
mov
and
and
ret
rcr
mov
mov
xchg
mov
mov
dec
int
jl
aaa
fdivrs
push
add
insb
or
add
add
mov
pop
mov
push
and
mov
lods
outsb
xor
out
adc
lods
adc
add
pop
lds
mov
hlt
les
dec
mov
shrb
in
mov
add
and
add
lds
cltd
sbb
or
les
std
js
shlb
aaa
leave
addb
inc
add
sti
repnz
add
mov
iret
cmp
inc
cwtl
pop
xor
fisttpll
lods
pop
std
adc
xchg
inc
add
lds
pop
xchg
mov
in
mov
je
jge
xor
add
mov
xchg
sub
cmp
fs
cmpsb
cmp
jb
push
icebp
xor
lods
mov
stc
fistps
int3
iret
pusha
add
add
cmp
int
shlb
addb
or
lock
cltd
in
sub
jbe
mov
mov
push
cmp
test
mov
mov
pop
push
fwait
jg
enter
jmp
jecxz
cmp
add
hlt
int3
mov
filds
sub
and
notb
rolb
ficomps
lcall
or
add
sarb
push
outsl
movb
add
xor
movsl
lods
mov
jmp
aas
jmp
js
cltd
or
pop
mov
aam
mov
repnz
mov
add
lret
imul
sub
jl
pop
cmp
lock
cmp
and
mov
repnz
add
mov
add
out
jae
and
je
insl
push
mov
mov
jecxz
fstps
sub
cwtl
pop
xor
outsl
movb
xchg
pop
cmp
jg
testl
xor
insl
sub
sti
or
aaa
cmp
xchg
movsb
push
scas
mov
je
mov
dec
jnp
jg
fnstcw
popf
ds
sbb
add
add
xchg
mov
sahf
adc
test
cmp
mov
mov
lea
mov
aaa
xor
add
xchg
mov
ror
jp
add
jb
mov
dec
adc
pop
adc
sbb
add
les
xlat
loop
jnp
loop
imul
les
adc
pop
ffree
add
sub
sub
jnp
push
sbb
add
addl
mov
shrb
sar
cmpsl
es
add
leave
pusha
add
mov
dec
fisubl
mov
filds
rolb
mov
push
scas
das
pushf
fcom
pop
mov
jge
add
add
or
gs
ret
sbb
pop
pop
aaa
and
lock
or
adc
jae
add
outsl
and
pop
rorb
inc
add
popf
ret
pop
pusha
add
pop
outsl
push
sbb
cmp
adc
dec
icebp
xchg
push
add
push
add
add
nop
dec
outsl
mov
jae
push
aad
jo
in
pop
mov
js
add
fldcw
pop
ja
add
mov
leave
imul
stos
aad
test
push
and
or
rolb
add
sbb
xchg
fcomp
int
scas
neg
enter
add
es
sbb
fstpl
cmp
lahf
addl
sbb
xor
cmp
mov
test
popl
mov
bound
mov
fnsave
cmp
pop
scas
nop
jge
push
movsb
jmp
add
data16
stc
fdivrs
push
push
add
addb
cmp
mov
jnp
xchg
mov
xchg
movb
add
aas
roll
imulb
fwait
xchg
xchg
lret
add
sbb
sbb
ljmp
test
mov
fmul
jmp
pop
xchg
pusha
add
xchg
adc
pop
int
mov
sbb
call
mov
sub
and
mov
cmpsl
sub
sbb
mov
sbb
stos
in
pop
iret
add
dec
scas
inc
add
inc
or
cmp
pushf
lods
xchg
rorl
shll
adc
loop
mov
in
lret
jbe
adc
push
mov
jg
mov
addl
push
into
fmul
js
sbb
mov
loope
fstps
jno
lahf
cmp
shl
pmulhuw
cmp
aad
add
jo
dec
push
nop
imul
ficomps
push
leave
cwtl
movsb
xor
pop
jle
mov
push
cmc
ds
fcom
push
popa
repz
add
pop
test
std
movb
sbb
in
pop
xchg
adc
sbb
test
jle
mov
push
jb
pop
loope
test
mov
and
jbe
out
and
mov
add
lods
rcrl
lock
mov
movsl
fwait
movsb
mov
inc
add
sbb
js
insb
call
movsl
leave
or
add
pop
out
xor
jae
les
pop
cmp
cltd
mov
lret
filds
repz
jnp
lods
popa
inc
xchg
imull
jno
lock
mov
fs
cltd
stc
fidivl
mov
insl
and
add
cli
push
enter
ficoml
xor
sbb
enter
xlat
lods
repnz
jo
leave
fs
xor
in
mov
daa
ds
cld
push
push
mov
add
in
mov
lods
cmp
or
scas
add
cmpsb
int3
mov
add
push
adc
pop
loop
out
cmpsl
iret
mov
xchg
mov
fxch
jle
sbb
insb
mov
bound
jmp
test
inc
sub
xor
mov
add
addb
mov
inc
add
cld
lea
mov
repnz
ret
push
mov
imul
mov
outsb
movsl
std
test
add
adc
std
add
in
cmc
fcoml
mov
jne
cwtl
inc
add
xor
cmpsb
outsl
hlt
pop
cmpsb
cmpsl
fldt
test
dec
mov
fadds
sub
pusha
add
add
mov
jle
and
xor
mov
add
inc
in
mov
add
mov
test
mov
dec
in
jecxz
out
jp
cmp
push
add
fcomp
popa
or
push
fstpt
cmp
insb
inc
add
pop
jmp
jo
mov
push
sarb
gs
add
daa
inc
out
or
iret
in
out
ja
cmp
hlt
push
pop
gs
add
add
add
and
jge
add
push
pop
adc
js
mov
test
lods
xchg
inc
add
aaa
cmp
enter
jecxz
mov
dec
clc
movsl
outsb
inc
add
popl
jp
sbb
adcl
xor
add
sbb
cltd
lods
jg
cwtl
das
cmp
jbe
nop
jo
scas
and
add
adc
call
add
add
int3
movsl
or
aas
pop
mov
mov
push
in
daa
mov
divb
mov
loopne
mov
lock
loop
dec
lods
fisttpll
pop
out
addb
add
mov
adc
insb
or
xchg
jp
push
imul
sbb
scas
xchg
sub
pop
jmp
fnstsw
mov
aad
jl
nop
outsb
inc
add
insl
stos
addb
aam
addb
fidivs
lock
add
lods
cmp
lret
mov
lcall
movsb
in
push
std
testb
in
jge
rcll
xchg
cld
xor
jp
lock
mov
add
inc
add
dec
lret
cld
and
shl
lods
popa
stos
insb
fistl
cmpsb
and
shll
add
mov
dec
pop
pop
sti
xor
jae,pn
pop
mov
add
adc
mov
shl
jmp
jbe
outsb
addb
and
ja
outsb
pushf
inc
filds
push
pop
bound
mov
and
push
cmp
add
clc
cmp
add
gs
lea
inc
add
xchg
test
imul
mov
imul
movsb
xchg
push
xchg
dec
arpl
mov
hlt
mov
jle
pop
sub
push
add
add
cmp
inc
add
arpl
jmp
movsl
sbb
add
fcmovnbe
jmp
cwtl
adc
in
cmp
clc
jg
pop
mov
leave
push
pop
aad
hlt
adc
js
pop
in
mov
add
mov
scas
rep
xchg
loopne
popf
into
push
adc
ret
and
aas
rcll
sahf
or
xchg
mov
xchg
jne
jp
lret
clc
mov
mov
jp
mov
cld
push
push
ljmp
jmp
adc
ret
xchg
ret
dec
rolb
mov
add
jl
out
cmp
mov
or
test
leave
or
lahf
ret
xchg
pop
push
imul
leave
inc
xchg
clc
xchg
int
add
movb
xchg
and
outsb
test
sbb
lods
lret
outsb
in
or
push
lock
xchg
push
jbe
popa
popf
int
insb
dec
add
push
push
mov
dec
mov
add
repz
jns
jns
adc
add
sbb
add
sub
popa
cmpsb
jne
dec
test
push
test
dec
test
in
add
je
into
in
fucomip
rolb
pop
push
mov
test
movb
lcall
imulb
add
sub
shlb
insl
or
add
sbb
add
inc
add
push
add
sbb
out
test
or
or
sti
loope
out
mov
stos
mov
in
test
lock
add
xchg
mov
cltd
pop
cmpsl
ficompl
and
insb
dec
jge
ja
test
and
nop
clc
push
or
jne
push
xchg
enter
aas
sub
push
daa
mov
rorl
add
sub
or
add
lcall
dec
jp
mov
mov
enter
clc
out
add
ss
outsl
mov
xchg
js
jge
addb
clc
inc
adc
or
gs
cmp
add
add
push
mov
push
xor
in
movsl
mov
jl
roll
movb
push
adc
int3
jns
and
add
mov
dec
loope
inc
xchg
rolb
cs
loop
add
xchg
icebp
adc
cmp
rcr
sti
dec
js
aam
inc
add
jp
leave
sbbl
sti
push
pop
xchg
das
inc
add
movsb
addb
sbb
jecxz
retw
cwtl
testl
cmp
cld
xchg
pop
fwait
push
push
adc
ljmp
pushl
mov
xorl
icebp
pusha
add
xchg
jmp
cwtl
jbe
push
mov
dec
adc
or
stos
lahf
fpatan
and
jnp
into
inc
lods
rorb
inc
enter
xor
repz
jg
hlt
push
sub
into
test
std
insl
add
push
insl
int
cmp
sbb
lods
push
cmpsl
fnstsw
or
mov
cli
fwait
mov
and
mov
ss
inc
xchg
loop
out
fcomps
enter
inc
in
add
and
loopne
das
lods
sub
xor
xchg
xchg
addb
jns
xchg
cld
push
add
dec
adc
push
notb
mov
cmp
lcall
aaa
dec
loopne
adc
dec
push
jno
or
add
mov
outsl
sbb
rorl
add
arpl
cmp
leave
lds
inc
add
xchg
popa
mov
fcomip
xlat
lret
imul
ss
insb
lahf
or
push
adc
push
add
jp
in
cmp
xlat
iret
lods
and
and
inc
add
lods
mov
pop
imul
icebp
ja
jmp
pushf
adc
add
push
dec
loop
mov
pmulhw
pushl
clc
push
mov
xchg
mov
pop
or
mov
mov
arpl
push
cmpsb
add
inc
sub
add
les
xchg
das
mov
or
add
adc
mov
sub
mov
out
mov
sahf
insl
shrd
sbb
rcl
jb
aaa
loop
insb
mov
xchg
cvtdq2ps
pusha
add
cmpsb
jb
add
dec
int3
ret
push
mov
cmp
jmp
aas
ljmp
mov
add
repz
js
loope
std
jmp
adc
add
imul
aaa
rorl
mov
enter
mov
push
cmpsl
cmc
xor
and
pusha
add
add
push
in
ds
xchg
jns
adc
lods
cmp
std
addb
and
push
and
xchg
inc
adc
out
cmp
cmp
sbb
and
jle
mov
add
ret
fstpl
or
insb
add
mov
out
xor
or
pusha
add
mov
inc
add
addb
or
mov
push
add
unpckhps
jg
pop
stos
adc
mov
ret
cs
inc
add
inc
add
mov
push
pop
addr16
cmp
jecxz
dec
xor
cltd
cli
mov
xor
add
jbe
scas
ficoml
nop
mov
fsubl
nop
mov
lock
pop
repz
add
aam
aaa
sub
adc
dec
sub
sti
push
and
cmp
aam
mov
cmc
xor
outsl
ss
test
cmp
mov
and
add
lods
xchg
adc
lea
lret
pop
xor
cmp
push
test
cs
mov
sub
stc
repz
xor
pushf
mov
sub
jb
in
in
add
and
test
or
daa
mov
add
jg
push
push
jae
add
sahf
or
lods
fwait
ret
xor
ljmp
jecxz
mov
push
sub
in
dec
jmp
das
movsb
dec
sarl
mov
out
jmp
call
mov
adc
xor
mov
dec
mov
xor
stc
aas
xor
add
hlt
mov
pusha
add
outsb
adc
jmp
fimull
clc
adc
fdivs
sub
iret
test
movb
cld
or
sbb
lret
mov
add
push
fsubrs
insb
jge
daa
fwait
lret
pop
aad
or
aam
or
add
sahf
sub
ret
aam
mov
mov
repz
out
cmp
xchg
movsl
sub
lcall
js
add
cmp
add
leave
adc
cmp
imul
xor
cmp
mov
mov
pop
add
pop
pushf
lock
add
dec
inc
mov
std
repnz
add
dec
repnz
push
sbb
scas
stos
sbb
fcmovb
sahf
and
inc
add
xlat
lahf
jbe
cmp
mov
jnp
icebp
xor
cmp
push
in
or
rolb
addb
gs
imul
and
add
sbb
daa
icebp
xorl
sub
and
lock
adcl
cmp
add
jbe
mov
repnz
fstpt
aam
mov
or
xor
cmp
dec
push
and
push
and
es
addr16
pop
mov
mov
loope
test
cmp
push
sbb
imul
push
mov
add
sti
inc
add
jle
mov
jno
jbe
lock
dec
pop
sbb
mov
add
push
xchg
cmp
rcr
fsub
jmp
out
int
inc
cmpsl
xor
jae
aad
movb
pop
adc
rcr
loop
sbb
movsl
pop
inc
outsl
mov
xchg
popl
xor
mov
insl
repz
add
scas
mov
add
push
dec
stos
ret
movsl
inc
pop
add
cmp
add
add
pop
popf
inc
lret
or
add
xlat
ds
inc
add
movb
divb
movb
gs
jnp
scas
addb
dec
out
pop
out
fcomps
ljmp
ss
lds
vcvtss2sd
cmp
aas
mov
out
daa
lea
add
adc
mov
gs
mov
lret
lea
out
in
jo
add
xchg
pop
pop
xchg
test
cwtl
mov
lds
sub
sub
xor
wrmsr
iret
cli
sbb
xchg
scas
ljmp
pop
inc
add
mov
jge
and
clc
fstpl
jl
stos
sub
les
sar
xchg
cmp
stos
push
fstps
cli
and
push
jno
push
add
mov
in
ret
sahf
sbb
movb
jno
sub
fsubrp
addb
add
add
mov
mov
ja
pop
fistl
xchg
jne
push
rcl
cmpw
stc
rorb
and
lret
push
pop
pop
adc
add
xor
jns
pop
cmp
insb
ret
mov
add
or
add
repz
sahf
push
inc
xor
sbb
out
rcrl
movsb
pop
sbbl
div
div
mov
call
sbb
fwait
xchg
fcompl
and
loop
or
cld
pusha
add
repnz
jae
mov
ficoms
xor
gs
dec
pop
movb
mov
jno
dec
jmp
pop
dec
mov
mov
arpl
adc
sahf
sarl
arpl
clc
xchg
mov
add
cmpsb
int3
neg
ret
sub
das
push
ret
push
adc
loop
into
mov
add
add
xchg
lret
cmp
sub
lret
mov
pop
loope
xchg
rolb
loop
inc
add
in
sub
add
mov
out
dec
push
add
inc
add
add
mov
jg
xchg
sbb
vpavgb
pop
test
out
daa
jecxz
in
and
inc
std
aam
imul
push
inc
cmp
jl
sbb
sub
adc
ffreep
imulb
mov
cmpsl
fiaddl
xchg
xchg
das
fiadds
in
cmp
daa
xor
add
lock
in
dec
sbb
in
es
les
es
push
movups
sub
loope
insl
push
add
xchg
cmc
daa
inc
mov
cmp
mov
add
mov
push
mov
das
cmc
in
rclb
cwtl
bts
cmpsl
mov
xor
xchg
push
xor
mov
push
dec
pop
int3
ficompl
add
je
mov
in
cmc
cmp
ja
mov
sbb
add
popa
pop
xor
and
addb
imul
adc
sbb
mov
xchg
inc
add
add
imul
insl
popa
push
subl
cmc
sbb
add
leave
inc
add
sbb
test
pushf
sahf
sbb
sub
inc
jl
out
jmp
cltd
xchg
xor
into
icebp
adc
xor
inc
sbb
jmp
test
cmp
in
add
aas
pop
jg
dec
xlat
jmp
add
enter
mov
mov
ja
push
enter
mov
dec
daa
mov
cld
push
js
loop,pt
jge
or
fnstsw
and
aad
lret
ret
mov
rolb
clc
loopne
inc
nop
mov
negb
call
insl
fiaddl
aam
lods
jno
mov
mov
add
lods
cmpsb
or
ds
sub
mov
dec
jnp
adc
add
jle
mov
fwait
and
arpl
cmp
xor
or
out
in
dec
scas
repnz
sub
or
incl
mov
ja
stos
addr16
mov
sbb
vmovhpd
add
in
add
cmpsl
into
xlat
ss
or
lahf
call
xor
push
pop
lret
adc
rclb
mov
add
adc
inc
add
xchg
dec
and
movsl
xchg
sti
sub
jnp
mov
arpl
sbb
insl
aaa
or
out
sub
arpl
mov
adcl
add
lea
jge
add
push
mov
sahf
mov
mov
add
add
mov
mov
mov
dec
sbb
stc
adc
sbb
mov
xor
add
jns
add
imul
cmp
fisubrs
add
add
add
fisubrs
jmp
and
jno
jne
je
jb
xchg
fmuls
cwtl
push
shll
das
cmpsl
mov
test
sub
insb
inc
ja
inc
add
push
leave
mov
lods
ret
jge
jo
pop
lods
sbb
pop
cwtl
ljmp
jecxz
dec
dec
push
fidivrl
inc
add
add
lea
lcall
mov
rcll
jecxz
add
pop
jp
mov
mov
mov
sbb
add
mov
lahf
or
movsb
sub
aam
mov
add
dec
dec
pop
mov
jmp
in
repz
dec
mov
add
leave
adc
stc
arpl
mov
push
std
mov
or
ds
nop
aas
addr16
nop
xor
mov
fsubl
lret
pop
mov
adc
add
ljmp
xor
sbb
sbb
mov
les
mov
xchg
addb
inc
add
fldcw
inc
sbb
jl
dec
loop
out
test
jnp
lods
pop
fimuls
loopne
ret
scas
imul
fsub
adc
int3
mov
ret
dec
xor
movsl
dec
xor
lock
sti
pop
jp
nop
lahf
push
sub
mov
in
ret
jp
xchg
mov
pop
and
cmp
xchg
fisubl
inc
xchg
test
cmpsl
cltd
ret
loopne
sbb
add
mov
inc
pop
xor
aas
inc
jle
add
xchg
sbb
sub
add
push
stc
mov
lea
cld
xchg
rcrl
jae
js
es
sbb
pop
mov
je
cmp
sti
jge
daa
xchg
sahf
cmp
out
test
test
or
into
cmp
pop
cmp
add
lcall
add
adc
nop
scas
push
pop
mov
inc
add
jg
push
lret
add
sub
push
mov
lods
fxch
xchg
mov
mov
into
pop
xor
pop
in
out
stos
pop
push
test
repnz
push
loope
repz
int3
adc
aam
scas
jmp
mov
lds
push
cmp
sbb
and
outsb
aaa
ret
and
call
fs
jle
jns
cmp
add
test
lahf
sub
and
jno
xchg
mov
sahf
mov
mov
add
pop
cli
xlat
mov
or
inc
mov
sub
sahf
std
out
lcall
movb
cmpsb
daa
outsb
es
add
fldl
and
xchg
stos
sahf
mov
inc
add
movsb
dec
sub
add
push
and
mov
add
add
add
cli
ljmp
je
mov
jge
addr16
xchg
ficomps
xchg
imul
call
xor
outsl
sbb
sti
ret
les
pusha
add
daa
sub
mov
shll
sarb
add
gs
scas
adc
add
pop
jnp
psubd
push
add
xchg
cmp
lret
sbb
add
addb
loopne
mov
inc
cli
pusha
add
push
mov
sub
std
sub
out
add
fnstenv
xor
mov
shrl
bound
es
aam
int3
xchg
inc
add
ja
lret
addr16
mov
sub
stos
push
add
mov
lcall
mov
ljmp
add
add
fstl
xchg
shrl
lret
mov
cmp
ja
and
mov
sbb
cmp
lds
pop
jnp
je
xchg
inc
add
or
pop
add
inc
addr16
push
mov
addb
nop
adc
inc
add
and
clc
or
aas
pushf
data16
add
popf
pop
sub
cld
data16
inc
add
add
adc
fidivl
mov
les
jo
xchg
push
mov
addr16
jo
dec
or
mov
ret
loopne
arpl
and
jbe
and
push
add
add
data16
mov
add
or
sub
aas
lahf
outsl
dec
xlat
dec
movsl
fs
add
pop
insl
xchg
inc
add
aam
les
inc
add
es
add
stc
push
cmp
ror
shrl
shll
mov
ret
add
iret
aam
xlat
mov
cs
pop
and
lret
mov
add
xchg
jmp
int3
jno
sub
xor
or
aaa
sub
adc
xor
fidivs
imul
imul
dec
adc
mov
stos
inc
xchg
and
aad
push
std
aad
and
cli
adc
add
inc
add
add
int
cld
xchg
cmp
push
xchg
aad
lods
sub
loope
mov
test
xlat
cltd
ljmp
es
es
jg
sbb
adc
inc
sub
sub
or
lods
xor
in
mov
add
addb
add
inc
cmp
mov
jmp
adc
out
bound
divl
je
mov
call
cmp
dec
jmp
frstor
fistps
gs
and
mov
cli
cmpsb
repz
loopne
push
cmp
addb
lds
mov
arpl
in
in
in
push
jecxz
subl
adc
push
mov
call
dec
int3
adc
std
test
lcall
lret
jmp
out
aaa
mov
cmpsb
jmp
out
mov
sub
lods
add
adc
mov
lods
xchg
adc
leave
dec
fstps
and
cmp
les
bound
pop
shll
jge
iret
bound
or
out
and
sub
bound
push
add
pop
inc
sti
and
repz
and
push
mov
out
pop
jns
mov
rorb
jb
xchg
push
cmp
sbb
pop
jge
loopne
movsl
pop
mov
js
mov
js
cmc
fsubrs
out
dec
test
fcomps
decb
pop
dec
addb
cmp
pop
enter
push
xchg
int
inc
and
push
dec
pop
aaa
mov
rorl
shl
and
xchg
jne
out
jg
call
pop
mov
int3
sub
push
sub
add
pop
jns
mov
add
imul
jg
push
push
cmp
push
enter
and
sub
xor
cmp
popf
fstpl
and
test
jno
and
dec
loope
pop
cmp
testl
int
add
repz
mov
xchg
test
xchg
out
adc
cld
lret
or
lds
dec
xlat
mov
add
fwait
arpl
xchg
ja
xchg
inc
add
and
lds
fstl
int
ljmp
inc
add
lods
pop
jnp
jb
jne
mov
addb
js
rcl
dec
inc
add
jo
mov
dec
leave
scas
ret
sbb
in
fimull
dec
pushf
fiaddl
mov
sti
sub
add
loop
imul
jl
add
loop
mov
add
and
adc
negl
mov
int3
repnz
clc
es
loop
add
mov
cmp
or
repnz
xlat
lcall
xor
sbb
push
add
pop
mov
cld
movb
sbb
xchg
dec
and
loopne
jne
dec
movb
lahf
mov
cltd
pop
mov
add
bound
pop
lock
sbb
mov
xchg
loop
addb
lahf
push
cmp
push
sbb
decb
in
aas
gs
jbe
leave
fwait
aas
repnz
jmp
dec
add
add
dec
loopne
xchg
add
das
les
hlt
mov
adc
rolb
add
lods
and
jmp
push
das
mov
cmpsb
inc
dec
push
mov
aam
icebp
cld
cltd
cmpsb
cmp
bound
push
push
cmp
add
in
xor
jp
ffree
add
xchg
js
push
popf
sub
lret
cmp
nop
mov
cmp
sbb
leave
lock
add
bound
mov
mov
out
pop
pop
andl
clc
test
adc
add
aas
and
dec
pop
in
sub
mov
lret
loopne
mov
stc
mov
insb
insb
lock
insl
mov
inc
mov
cmpl
add
lret
or
movsb
sahf
jmp
mov
add
das
mov
je
mov
or
sub
cltd
inc
add
pop
int
sahf
or
addr16
sti
xchg
jl
sbb
cmp
popf
ds
sbb
fstp
sahf
shl
ret
sahf
add
stos
in
fsin
jno
inc
adc
adc
pop
int3
mov
add
pushf
jnp
or
iret
xor
inc
sub
dec
mov
cs
adc
sub
stos
fwait
xlat
movb
or
shrl
add
and
jb
lods
add
inc
mov
sbb
add
movsl
fildll
mov
pop
js
add
insl
cmc
inc
cli
lahf
int3
push
pop
sbb
mov
add
jmp
pop
movsl
cmpsb
mov
xchg
mov
cs
ja
xor
add
mov
ja
enter
jmp
pop
cmpsb
jns
repnz
jbe
fidivl
inc
add
and
adc
add
cwtl
mov
bound
mov
add
mov
mov
mov
xor
mov
or
imul
inc
add
add
fsubrs
sbb
fwait
and
cli
addr16
mov
in
and
push
add
cwtl
lods
mov
xchg
stos
ja
add
lods
inc
add
jae
out
mov
add
popf
es
jge
call
lar
fdivs
pop
sti
jae
jle
out
add
mov
xchg
xor
aad
ror
cmp
movsl
cmp
dec
in
scas
adc
jle
aad
pop
sbb
int3
lcall
push
jo
adc
shll
add
mov
add
lahf
jne
xchg
or
push
ss
rolb
add
sbb
push
push
imul
jbe
lods
lock
loop
repnz
inc
jp
add
pop
mov
inc
add
mov
sub
inc
add
add
add
mov
inc
add
inc
mov
outsl
adc
loop
pop
je
fstps
insb
sbb
imulb
add
pusha
add
add
adc
popa
mov
imul
mov
and
mov
outsl
popf
movsl
mov
adc
out
out
testl
hlt
inc
call
out
xchg
push
mov
add
addr16
popf
imul
cmp
and
hlt
comiss
jp
add
icebp
mov
and
add
sbb
stos
dec
inc
add
mov
add
inc
add
jne
aas
cld
fwait
in
mov
and
iret
add
jb
xor
jo
test
mov
add
push
test
icebp
adc
sub
adc
fidivl
sbb
push
add
pop
sahf
jmp
fbld
cmc
pop
and
and
adc
dec
loope
mov
add
mov
push
add
mov
sub
pop
mov
push
movsl
fcmovbe
lods
pop
fmull
adc
xchg
cmc
add
adc
fs
aas
loopne
inc
push
stos
out
mov
xor
cli
iret
pop
add
inc
or
cmc
cmp
rcl
andl
mov
fistl
movlhps
or
psrlw
jnp
fmull
jnp
push
add
imul
mov
and
mov
bound
cmc
sub
mov
pusha
add
pop
mov
fbstp
int
fistpll
ss
dec
ficomps
pop
aam
dec
popa
mov
sub
inc
addr16
xchg
lahf
pop
mov
aam
mov
jp
and
aam
mov
add
fisubrs
add
jns
arpl
add
aas
ss
dec
xchg
sub
xchg
adc
add
movb
and
cmp
jnp
movsl
mov
push
mov
sbb
xchg
xorl
fwait
inc
add
mov
sub
adc
fsts
dec
jae
rcll
lahf
mov
lds
cli
popa
imul
sbb
lods
lds
lahf
int
sbb
jno
gs
cmp
pushf
nop
and
test
xchg
dec
test
push
lods
mov
pop
aas
sbb
cwtl
lret
push
inc
add
mov
sub
inc
lret
iret
daa
push
addr16
stc
jb
int3
mov
mov
xor
test
xchg
sbb
mov
insl
dec
mov
aaa
cmp
pop
ret
hlt
in
adc
inc
dec
lds
out
xor
imul
clc
add
add
jl
nop
xchg
fcmovnu
and
jge
testb
jmp
add
mov
rorl
pop
clc
jno
pop
test
mov
cmp
xchg
jl
xor
add
dec
push
addb
lahf
lret
insb
cmp
iret
nop
pop
call
in
insl
out
scas
pop
push
lret
push
pop
daa
mov
imul
push
pushf
pop
mov
les
hlt
fucomi
jp
jae
mov
cmp
pop
jae
jae
cltd
pop
mov
or
js
jge
outsl
push
mov
std
jge
pop
adc
sub
cmp
rclb
xchg
or
mov
dec
xchg
ficompl
outsb
cld
cltd
pusha
add
jge
adc
fisttpll
push
fnstcw
pop
in
mov
inc
jl
stos
je
adc
data16
pop
dec
jmp
lds
push
lret
stos
int3
and
mov
mov
add
adc
movsb
push
mov
or
popf
pushf
adc
xor
pusha
add
push
fcomps
xchg
imul
add
and
repz
ss
xchg
lahf
push
fldenv
xchg
cmp
add
aaa
xchg
test
dec
outsl
lahf
add
lcall
cltd
or
inc
add
adc
cmp
insl
adc
lret
sahf
jg
pop
movsb
xchg
push
out
sbb
add
pop
xchg
js
lock
fisubs
jecxz
mov
aam
jns
dec
mov
push
in
sbb
jle
mov
ja
ljmp
add
add
xor
fdivrs
lahf
push
clc
push
mov
lret
add
pop
and
add
push
mov
add
cmp
sub
sub
dec
movb
or
pop
sub
lret
xchg
and
dec
cmp
repnz
filds
add
addr16
adc
add
aad
jnp
outsb
jge
add
xor
add
adc
pop
cmp
xor
fidivs
push
lock
inc
add
insb
in
add
imul
mov
dec
push
dec
push
add
or
pusha
add
or
pop
sbb
mov
cmp
aaa
leave
leave
jecxz
inc
add
add
adc
das
jne
add
fdivl
and
adc
or
sti
addb
xchg
mov
mov
and
sahf
test
ret
in
and
addb
iret
nopl
and
mov
test
push
scas
cmpsl
mov
pop
arpl
sub
xor
negl
fmull
cmc
rolb
or
jge
pushf
mov
movb
add
fnstcw
and
cmp
aas
out
mov
mov
incb
or
in
aad
test
add
scas
mov
andl
adc
mov
outsl
push
cmp
push
shll
enter
pop
add
add
cld
jns
int3
adc
mov
dec
sti
rolb
adc
inc
mov
data16
mov
push
jno
add
add
in
icebp
dec
stos
icebp
adc
add
dec
sub
scas
push
xchg
and
sub
xchg
mov
arpl
addb
xor
add
dec
sbb
out
fnstsw
inc
add
sub
mov
cmp
rclb
imul
in
adc
add
ret
sbb
jns
inc
add
movsb
xchg
scas
mov
jp
dec
fisubs
popa
pop
add
xor
add
rorb
xor
dec
jl
add
and
icebp
aas
and
adc
mov
hlt
movb
adc
mov
ret
mov
insl
leave
lock
mov
xor
add
xor
cltd
movsb
mov
jmp
dec
push
pop
xor
mov
aas
jne
xchg
xchg
dec
addb
or
fdivs
adc
aas
outsb
cli
push
iret
mov
add
mov
mov
xor
in
push
xchg
addb
mov
arpl
pop
xchg
dec
clc
push
and
push
outsl
jbe
cwtl
test
lods
ret
sub
addr16
leave
xchg
ret
push
lods
outsl
int
jns
and
mov
movb
repz
mov
xchg
hlt
into
addb
out
sub
in
fcompl
test
dec
mulb
push
inc
add
mov
pusha
add
mov
fs
sub
cmp
mov
insb
sbb
cmp
and
bound
pusha
add
pop
js
cmp
out
into
stos
filds
push
and
bound
mov
ss
inc
or
andl
lods
adc
lods
and
in
jno
lcall
gs
into
cwtl
rcll
icebp
xor
adc
pusha
add
mov
xchg
jecxz
stos
sbb
xchg
inc
dec
lods
inc
pop
repnz
cmp
test
addb
jnp
cmpsl
cmp
std
les
call
rolb
aam
mov
inc
add
inc
add
add
adc
mov
mov
add
mov
add
add
push
in
fcomps
rcr
pop
test
mov
enter
push
jae
int
and
xor
mov
push
test
add
jl
jno
rcl
ja
lods
fstpl
mov
mov
les
pop
out
dec
bound
hlt
jo
push
xor
push
mov
arpl
dec
loopne
jb
imul
cmpsb
adc
or
ja
cmp
add
orl
fmull
out
movb
ljmp
clc
add
sbb
mov
or
add
sub
cmp
add
add
add
mov
aaa
bound
icebp
inc
mov
add
out
testb
icebp
out
pop
dec
cmp
das
push
movsl
jle
cwtl
adc
out
inc
add
cwtl
pop
and
addb
out
mov
pop
xor
mov
and
inc
add
movsb
sub
sbb
inc
add
in
out
ret
or
fdivs
jp
popa
jecxz
fiadds
add
add
inc
mov
fwait
addb
mov
jne
out
pop
incb
add
push
addb
mov
cmp
ljmp
xacquire
mov
sbb
and
jmp
repnz
add
scas
call
ljmp
dec
xlat
hlt
cmp
call
sti
shll
rcrl
retw
pop
mov
add
pop
mov
addb
add
movb
dec
ss
addb
imul
jnp
mov
js
add
xchg
or
adc
sub
hlt
push
gs
push
cmp
and
stos
pop
inc
scas
adc
aaa
sbb
pushf
movsb
mov
pop
movsl
push
jb
outsb
pop
mov
lea
cmc
and
lret
inc
pop
mov
dec
adc
stos
pusha
add
nop
sub
arpl
jecxz
into
mov
or
xchg
movsl
add
dec
inc
popf
jle
scas
aam
imul
push
sbb
cwtl
push
adc
movb
lret
pop
mov
mov
add
mov
hlt
in
cmpsl
lds
aas
jb
cs
push
dec
mov
pop
dec
dec
xor
add
add
imul
fadds
mov
sub
hlt
iret
ljmp
lret
adc
xchg
aad
add
pop
rcll
lods
call
jecxz
mov
pop
jbe
add
mov
jp
mov
fimuls
cmp
in
lods
push
ficoms
aas
mov
add
jo
mov
cmp
lock
rcll
movsb
adc
dec
fildll
inc
add
sub
mov
lcall
cmp
add
mov
repnz
gs
subl
insl
cltd
mov
cli
inc
je
insl
xor
mov
xchg
mov
add
sbb
lods
gs
push
xor
lcall
aas
jge
movsl
dec
popf
inc
add
out
rcll
lock
pop
lcall
repnz
mov
mov
out
xchg
imul
ror
fnstenv
xchg
mov
hlt
les
xor
rolb
add
mov
lret
insl
push
mov
jl
arpl
jge
jle
addb
pop
inc
incb
out
sub
inc
add
ret
idiv
mov
and
adc
cmp
jno
shll
aas
lret
pandn
addr16
add
les
int3
out
xor
sub
jp
push
add
add
les
mov
call
jb
push
nop
jmp
repnz
jg
bound
dec
scas
or
mov
push
outsl
pop
incl
shrl
add
add
loope
lds
and
rolb
add
inc
pop
xor
aam
mov
sti
cld
or
adc
dec
cmp
and
idivl
and
fists
repz
mov
mov
daa
test
aas
xor
test
adcl
xchg
jp
sub
fs
addb
push
js
les
rolb
pop
and
cwtl
outsl
xor
pop
aaa
addb
inc
aas
jnp
xchg
pop
dec
fadds
pop
stc
add
rolb
data16
sbb
inc
add
pop
mov
leave
jmp
or
dec
add
inc
add
sub
fs
das
inc
insb
inc
add
in
nop
pusha
add
mov
add
xchg
sub
fs
popl
add
loop
and
dec
iret
pop
clc
arpl
cmp
mov
adc
movsb
adc
xorl
cmp
test
sbb
xchg
repnz
add
cld
xchg
pop
pop
fadds
add
add
or
add
or
mov
xchg
out
dec
xchg
fadds
mov
cmp
add
add
mov
mov
js
add
xchg
stos
rclb
pop
sub
or
cli
mov
dec
call
lods
pusha
add
jb
xchg
gs
dec
bound
rclb
pop
rolb
stos
mov
iret
idiv
sbb
dec
cli
inc
add
sub
addl
xor
aad
js
adc
imul
rorl
lods
lret
xchg
inc
add
push
lods
lods
popf
leave
push
xor
mov
push
pop
dec
add
pop
or
xchg
in
idivb
mov
pop
loope
lcall
fisubl
dec
sbb
mov
stc
test
inc
jge
pusha
add
je
mov
nop
jecxz
jmp
jo
or
std
pop
int
inc
add
pop
lret
cmp
jae
mov
das
xor
add
pop
add
add
invlpg
mov
push
outsl
or
es
int
or
adc
adc
adc
addb
pop
xchg
or
mov
add
pop
jbe
into
nop
and
call
xchg
pop
int
test
dec
or
adc
mov
pop
pop
pop
sbb
jne
add
mov
addb
jne
mov
fldcw
and
push
adc
add
shll
dec
push
pop
xor
mov
imul
sahf
ret
push
insl
pop
fimuls
sub
pop
or
push
add
and
fimuls
sti
inc
pop
push
and
push
dec
leave
mov
movsl
bound
cmpsl
add
push
mov
pop
lret
dec
xchg
in
xchg
mov
lods
je
pop
sbb
mov
sub
xchg
jle
mov
inc
add
imul
in
jge
inc
add
add
cmp
inc
add
add
loope
pxor
xchg
mov
xchg
stos
push
dec
and
dec
out
cmpl
fadds
add
not
cmc
mov
xlat
mov
jmp
std
jmp
adc
or
mov
pop
shr
xor
sub
mov
lret
xchg
push
and
loop
daa
and
jecxz
add
fisubrs
and
cmp
jbe
fimull
call
add
sbb
enter
ss
lret
pop
pushl
out
add
aam
sub
add
test
push
add
lea
and
push
push
sbb
inc
mov
sbb
mov
les
addb
fnstsw
mov
adc
scas
inc
add
arpl
out
addb
test
test
add
add
add
push
pop
add
in
jle
dec
rolb
xchg
ds
testl
inc
add
dec
adc
lcall
fst
pushf
jecxz
mov
push
icebp
mul
add
movb
adc
xchg
jbe
fiadds
add
add
fwait
jp
mov
sbb
fidivs
rolb
inc
hlt
mov
mov
pop
roll
lods
cwtl
mov
cmp
add
pop
jle
icebp
pop
ljmp
add
add
imul
jns
mov
call
ret
scas
stos
gs
add
insl
out
inc
loopne
loop
into
jmp
add
sbb
fnstsw
pop
jnp
ja
add
lret
test
movb
push
add
std
gs
add
xor
loop
aas
sbb
iret
inc
xchg
mov
sbb
push
or
add
imul
fidivrl
adc
rcrb
stc
adc
and
mov
add
movb
aam
aaa
sbb
repnz
jno
inc
add
ret
repnz
jnp
inc
add
cwtl
icebp
inc
and
sbb
lahf
cmc
das
cltd
push
mov
call
scas
in
into
minps
movsl
jg
or
mov
rcr
and
sbb
add
jbe
dec
mov
pop
lds
aam
cmpsb
jge
mov
icebp
push
movw
cmp
mov
push
add
loopne
xor
xor
in
xor
ljmp
mov
sub
jecxz
aaa
aaa
jle
mov
and
movsl
gs
inc
add
inc
add
lea
dec
ret
mov
mov
shll
out
jp
fbld
cmp
add
pop
in
dec
xchg
into
pusha
add
sub
push
push
xor
cltd
jl
cwtl
leave
mov
movsb
stos
mov
xor
add
mov
int3
movsb
dec
push
add
jnp
aas
mov
into
mov
imulb
cmp
push
stos
xor
cmp
aam
loop
xchg
pop
jbe
repnz
adc
lock
pop
fimuls
notl
sti
addb
data16
xor
dec
sub
dec
dec
addb
in
jae
dec
pop
in
ljmp
add
adc
sub
in
addb
sub
mov
mov
pop
mov
in
pop
xor
fs
bound
mov
dec
or
sti
rolb
test
xor
int
pop
or
add
mov
cld
or
mov
add
mov
ja
loop
mov
fs
add
cmpsb
xchg
and
jae
or
or
lret
imul
cltd
xor
sbb
shll
cli
mov
push
sbb
pop
fistpll
rcll
je
jg
sarl
bound
pusha
add
pop
les
pop
mov
add
mov
mov
jae
mov
sahf
popa
add
into
cmp
add
in
push
repnz
popf
in
popa
movb
xchg
cmp
mov
push
testb
mov
es
movsb
pop
aaa
xor
mov
popf
fwait
imul
jg
cmp
push
rclb
add
cmp
jno
add
xor
sbb
daa
sti
cs
lods
int3
xchg
and
movb
xchg
mov
pop
push
pop
lods
jne
mov
mov
bextr
hlt
xchg
out
lret
sarl
jnp
pop
xchg
fdivrl
add
ret
aas
xchg
sub
xor
jb
inc
sbb
mov
popf
das
add
sarl
stos
mov
mov
sti
and
mov
lahf
imul
inc
add
sub
mov
push
jg
aam
push
jg
fsubl
sbb
enter
and
imul
cmp
or
add
nop
out
enter
loope
in
push
sub
lods
add
jae
lea
in
lock
push
jmp
cmpsl
xchg
jecxz
nop
jne
xchg
lock
add
or
in
mulb
popa
cld
lret
push
pop
mov
popa
dec
lods
cmpsb
ja
jge
int3
stc
sub
add
jnp
inc
add
bound
mulb
xchg
arpl
iret
cmpsl
push
push
sub
pushf
inc
add
mov
dec
pushf
mov
pop
push
mov
lcall
jbe
inc
loope
add
cmc
mov
push
mov
shrl
cwtl
dec
jmp
cmc
mov
add
stos
xor
rcll
mov
mov
and
and
pop
jp
add
mov
jl
int3
jbe
mov
cwtl
dec
inc
jle
in
jno
adc
lcall
dec
fincstp
cmc
insb
xor
mov
imul
jl
imul
addb
push
add
or
clc
cmc
movsb
ljmp
add
pop
push
inc
mov
aad
fldt
fnstsw
enter
add
add
cmc
jge
push
jle
jmp
add
jle
dec
inc
or
lock
mov
push
in
scas
int3
movb
and
xlat
inc
adc
mov
mov
arpl
dec
inc
add
ljmp
add
pop
insl
cwtl
in
sbb
push
push
mov
sahf
push
xchg
aas
dec
mov
outsb
out
clc
lds
int3
ret
cwtl
xor
cwtl
push
jno
sbb
sahf
lahf
add
sarl
test
xor
sub
mov
ret
dec
mov
and
out
and
sbb
mov
pop
xchg
movl
out
sub
add
mov
push
add
ret
movb
add
mov
repz
aas
mov
push
pop
test
je
inc
int
and
add
sbb
hlt
hlt
rol
add
dec
pop
fs
jb
cmc
mov
das
inc
mov
cmp
loope
sbb
popa
xchg
jo
push
mov
loope
ficoms
push
sub
fnstsw
sbb
pop
test
stos
mov
out
aaa
and
xor
add
cmpsb
sbb
or
pusha
add
push
sub
add
loope
bound
int
xchg
imulb
js
sub
cmpsl
or
sbb
adc
jge
adc
adc
enter
cmp
sahf
mov
mov
xor
xor
and
pop
out
cmpsl
outsb
cmp
imul
ds
xchg
and
mov
fiaddl
add
jg
stos
movb
add
jne
lea
sub
lds
mov
mov
shll
xchg
mov
push
shll
pop
and
xchg
jmp
mov
pop
dec
adc
pop
or
test
bound
in
or
add
lcall
notb
clc
mov
or
xorl
outsb
ret
add
add
sbb
mov
mov
outsb
hlt
inc
add
cmp
repnz
addl
pusha
add
loop
add
pop
sahf
dec
sub
push
stos
and
push
cmp
arpl
aas
add
sti
push
push
aas
push
cmp
popa
arpl
popl
cld
rcrl
add
jge
rorl
outsb
pop
iret
testb
fldcw
sbb
and
testb
pop
test
cmp
adc
or
xchg
test
pop
mov
add
dec
test
add
jecxz
adc
push
or
mov
add
leave
pop
std
mov
test
cmpsl
into
cmp
sub
test
cs
std
push
add
sub
fdivrp
xor
add
adc
repz
xor
jb
stos
sbb
adc
scas
mov
xlat
xchg
add
arpl
mov
shrl
or
jbe
jg
add
add
gs
mov
stos
xchg
inc
add
adc
lcall
cmp
inc
add
jo
add
std
test
int
add
addb
aas
lea
xchg
addb
gs
and
add
push
push
xchg
lret
pop
jl
add
and
fiadds
mov
sub
test
jns
jle
dec
sahf
cmp
sub
push
adc
popf
sahf
fisttpl
stos
mov
shll
ds
repnz
lods
repnz
xchg
mov
add
pop
lret
addb
add
cmpsl
leave
insl
add
sar
add
clc
dec
rclb
lcall
bound
adc
xlat
push
add
clc
jmp
int
xchg
je
add
bound
xchg
inc
and
push
jbe
cltd
into
pop
mov
jne
dec
mov
cmp
sbb
xchg
imul
sub
or
out
call
push
add
es
pop
lock
or
mov
jmp
jo
fidivrl
fdivs
or
lret
pop
cwtl
xor
frndint
nop
ret
inc
push
lahf
lret
out
inc
int3
dec
repnz
mov
xchg
or
pop
leave
pop
enter
add
cmpsl
push
loope
divps
pop
lahf
mov
add
dec
scas
sub
in
addr16
rorl
inc
jne
lahf
mov
pop
leave
ja
pop
iret
lahf
sahf
repnz
imul
stos
pop
jmp
and
bound
insb
jae
stc
jo
mov
jmp
cld
push
xchg
fists
arpl
cmp
add
add
mov
ret
sbb
dec
mov
fbstp
mov
sbb
clc
or
lret
rolb
dec
sub
add
xor
add
test
hlt
add
int3
fldt
add
fnstcw
sahf
sahf
cmp
jecxz
loop
cmp
cwtl
sub
gs
and
push
test
mov
rolb
jle
addb
add
mov
test
fs
xor
add
cli
pop
out
dec
and
xor
jne
sarl
cmpsb
into
or
add
add
pop
jp
cmp
jns
addb
mov
sub
and
adc
adc
sbbl
lods
pop
cwtl
ret
xor
push
jo
aas
sub
xor
dec
sub
addb
pushf
lret
add
das
ss
pop
adc
out
test
sbb
cmp
add
imul
shlb
add
js
shrl
pop
xchg
pop
outsb
inc
in
jl
pop
jle
test
pop
push
add
add
adc
push
stc
sbbl
or
sahf
xchg
cmpsl
ja
call
aad
push
cmp
popf
stos
out
cmp
dec
call
inc
add
bsr
ja
push
add
out
adc
add
jno
mov
insl
add
mov
mov
pop
test
pop
rcl
mov
cmc
cmpsb
push
addb
jbe
arpl
aam
je
xchg
movsl
pop
lea
dec
sub
jo
mov
pop
xor
mov
bound
sub
mov
jle
popa
add
lret
lret
cltd
aaa
notl
mov
mov
pushf
cmp
repnz
dec
clc
push
aam
mov
mov
stos
shll
xlat
dec
xchg
dec
scas
shll
mov
adc
negl
xchg
sub
add
inc
dec
cmp
lcall
sbb
add
mov
xchg
shll
cmp
cmp
ret
out
cmp
pusha
add
mov
sub
add
dec
lock
inc
sbb
jb
in
cmp
adc
imul
and
add
lock
add
inc
add
push
jns
mull
mov
add
adc
out
das
inc
or
add
pop
fisubrs
mov
lahf
mov
add
into
sub
fldcw
pop
bound
xchg
rorl
pop
inc
mov
xor
jp
subl
das
xchg
jle
in
cli
inc
rcrl
fsts
adc
add
inc
add
lcall
rolb
enter
xor
add
inc
add
inc
add
mov
xchg
lahf
push
loope
add
clc
mov
repnz
rolb
xor
adc
cmp
adc
rorb
cmp
or
mov
push
fadds
mov
les
xor
dec
pop
movsb
xor
gs
mov
pop
lods
loope
mov
pop
adc
fwait
aam
jge
iret
out
jecxz
nopl
add
rolb
out
add
ds
add
movsl
cmpsb
bound
mov
dec
andl
jmp
mov
adc
add
jecxz
mov
scas
or
pop
and
inc
add
mov
jb
add
adc
sahf
push
adc
ret
add
call
jae
adc
add
nop
imul
ret
mov
add
mov
ljmp
fnstenv
add
add
cmovne
pusha
add
add
std
cmpsb
jge
mov
fs
xor
ret
mov
mov
stc
sbb
arpl
mov
enter
sub
test
test
xchg
mov
outsl
cld
lock
push
mov
push
adc
add
add
aas
jge
stos
push
and
cmp
int3
add
movsb
dec
lahf
dec
push
jp
lods
ret
aam
mov
dec
push
mov
sbb
les
repz
add
cmpsb
inc
add
and
add
mov
push
jle
fidivrl
mov
fs
std
mov
jp
xchg
faddl
out
and
pop
adc
mov
add
rorl
mov
loopne
nop
adc
popa
pop
loope
test
sub
jns
dec
jge
dec
inc
add
lret
pushf
dec
adcl
rolb
out
pop
jmp
orl
les
xor
add
push
or
into
jl
adc
xchg
lret
test
mov
cmp
cmpsl
dec
mov
xchg
xchg
add
daa
cmp
mov
add
add
mov
add
mov
add
dec
lods
mov
xchg
push
fwait
dec
gs
addb
add
into
push
add
push
popa
test
cmc
out
in
stc
insl
insl
xchg
in
aad
push
out
push
icebp
xchg
je
jl
in
push
mov
paddw
and
adc
jns
ja
shrl
add
scas
bound
shrl
fs
movsl
movsl
into
js
pop
or
in
cmp
subl
stos
adc
lea
add
mov
popa
xor
lea
xlat
call
imul
ljmp
imul
or
insl
addb
movsb
ret
frstor
or
cld
addr16
or
sub
push
pop
popa
sub
dec
fildl
inc
inc
add
xor
jnp
ret
dec
inc
add
lds
xchg
jle
in
xchg
mov
add
mov
jmp
push
outsb
xor
and
sub
add
iret
inc
add
fists
inc
movsb
dec
or
in
pop
xor
pop
lret
addb
cmp
fstpl
fcomp
adc
shlb
add
mov
jle
mov
mov
stc
and
in
xlat
mov
xor
subl
dec
dec
sarb
scas
mov
push
and
push
mov
adc
test
addb
add
test
icebp
sti
outsl
xchg
enter
add
inc
lods
adc
jno
loopne
mov
push
addb
fstpt
out
xchg
lods
lret
pushf
inc
testb
shll
add
adc
addr16
lock
pop
xor
mov
sti
xchg
adc
xlat
repz
mov
addb
daa
pushf
sbb
xor
roll
cmc
pop
test
and
fcoml
arpl
ret
xchg
mov
notb
inc
jns
and
push
push
xchg
dec
cmp
dec
cmp
mov
fadds
lret
faddl
sbb
push
fcmovb
hlt
addb
inc
add
mov
rcrl
push
lahf
cltd
hlt
jmp
mov
lahf
divb
cmp
add
fisubs
jbe
add
fisubrs
pop
movsl
test
pop
dec
or
add
add
add
out
push
loope
adc
add
push
scas
inc
add
hlt
mov
jp,pn
call
cli
or
mov
pushl
jg
iret
insl
xchg
xchg
mov
lods
inc
add
push
roll
push
stc
mov
shr
xor
xchg
and
jmp
adc
ss
lahf
and
pop
stos
sahf
ret
push
pop
setbe
addr16
pusha
add
shlb
and
out
shlb
inc
pusha
add
jmp
pop
mov
jno
mov
add
mov
decb
jbe
push
add
in
loop
arpl
pop
rclb
mov
shrb
pop
add
orl
scas
mov
adc
inc
add
out
add
arpl
addr16
jl
fstpl
jae
cmp
lret
sbb
push
loopne
out
mov
push
dec
in
or
sub
add
mulb
jmp
jp
add
ret
psubw
dec
movsb
in
lret
sub
jmp
movsl
rcrb
mov
jnp
and
rolb
pop
cmp
dec
add
leave
fstl
xor
add
cmpsb
xchg
sub
cs
mov
lea
shl
inc
xor
idivl
jle
jmp
adc
sub
mov
and
pop
sbb
dec
xchg
cmc
daa
test
mov
add
stos
stc
das
mov
rorl
jb
loop
divb
addb
add
mov
js
lds
add
out
jnp
mov
fisttpl
jmp
lods
in
pop
cs
mov
cli
iret
fyl2xp1
dec
mov
js
jg
push
fisubl
dec
andl
lcall
inc
std
or
add
mov
movb
sbb
sbb
add
mov
or
inc
add
xor
fildl
sub
clc
inc
add
xor
pop
js
jo
or
aas
jecxz
cmp
out
lea
add
xchg
mov
daa
xchg
ror
loopne
and
push
xchg
cs
sti
cmp
imul
add
movsl
mov
mov
jg
rcrb
jmp
xchg
sbb
aam
xchg
cmp
jge
jle
add
jno
or
movsb
inc
add
adc
cltd
ret
adc
or
cld
lods
or
or
rcl
scas
pop
mov
mov
mov
sub
xor
les
jne
jg
lar
aad
mov
add
aas
jnp
mov
add
mov
rol
add
xlat
bound
les
pop
push
add
lock
push
jae
inc
push
xchg
iret
pop
or
scas
test
add
add
jae
push
in
test
or
xlat
sti
dec
outsl
movsb
cmp
lret
ds
inc
add
aam
gs
sub
int
jmp
aam
push
cmpl
mov
incl
lahf
shrl
inc
lods
movl
jge
arpl
out
imul
lods
outsl
rorb
xchg
jge
mov
loop
add
enter
mov
test
mov
scas
les
mov
fcomps
fxch
fnstcw
xchg
arpl
shr
scas
hlt
and
xchg
add
cmp
int3
pop
sbb
sub
mov
je
fistps
bound
add
fimuls
push
out
sti
cmpsl
inc
add
mov
cmpsb
xchg
lods
stc
ds
ljmp
pop
sbb
mov
cmp
je
inc
push
mov
les
dec
ret
pop
adc
daa
cmpsl
cli
lahf
pop
mov
aam
cmp
xor
mov
xchg
insl
fsub
dec
or
leave
les
jmp
add
shrb
pop
ja
add
loope
icebp
cmpsl
or
jo
std
xor
pop
inc
leave
inc
cmp
stos
leave
pop
js
mov
and
iret
jmp
nop
clc
inc
leave
lret
and
jb
imul
inc
add
out
cmp
cmc
sbb
inc
dec
xor
sub
or
aas
das
fidivrs
mov
jns
insl
or
add
dec
sub
mov
les
dec
out
inc
in
sub
add
add
lcall
dec
xor
sbb
xor
adc
addb
add
jnp
js
sub
and
sbb
xchg
mov
add
sbb
test
mov
and
or
sahf
inc
or
int
xchg
mov
xchg
test
pop
in
sbb
push
cmp
mov
add
lods
sub
adc
xchg
mov
out
outsl
into
or
jb
dec
adc
add
mov
xor
add
cmpsl
jae
cmp
jmp
bound
pop
lock
iret
sti
stos
les
jge
mov
cmpsl
gs
enter
popf
stos
inc
mov
jnp
jno
fmull
xor
sub
push
dec
ljmp
ss
sub
aad
outsb
clc
stc
xlat
mov
add
fdivrl
into
mov
mov
dec
pop
jnp
addb
fisubs
jle
add
lcall
jno
repz
mov
cmc
insb
adc
pop
cld
test
and
call
sub
cmpl
and
mov
add
lcall
inc
add
or
mov
cli
jbe
aam
dec
mov
sahf
add
fs
scas
je
scas
imul
icebp
mov
icebp
pop
es
shlb
stc
insl
enter
psrlw
xor
jns
mov
xor
int3
orl
pop
lret
cmc
and
stos
notl
add
cld
into
pop
mov
lcall
cmp
fdivl
and
aad
jbe
rolb
xchg
adcl
jecxz
xchg
and
xchg
pop
pop
js
int
mov
dec
xchg
movb
addb
inc
stos
arpl
scas
and
add
lret
pop
sbb
arpl
mov
inc
add
add
enter
ds
inc
add
cmpl
add
insb
mov
fdivs
ss
lods
sbb
in
in
int3
xchg
lret
lret
add
aad
insb
je
add
mov
xor
movb
dec
cmp
mull
call
bound
and
inc
aaa
jmp
lcall
mov
shlb
mov
call
sahf
outsl
stos
or
sbb
push
or
mov
add
jnp
and
push
loop
inc
add
ds
nop
add
mov
jle
fs
out
mov
in
and
mov
in
and
das
fwait
leave
aad
pop
sbb
fcoms
mov
mov
jle
mov
mov
mov
fs
jns
push
iret
and
mov
add
inc
add
inc
loop
add
lock
mov
inc
in
pmaxub
mov
jns
pop
inc
add
fidivs
insb
jbe
scas
inc
repz
negl
mov
mov
add
and
adc
add
sub
iret
sbb
mov
into
mov
cwtl
jno
inc
add
test
in
add
aaa
movsl
adc
jg
adc
adc
add
int3
xchg
mov
add
push
leave
cwtl
and
cmp
dec
adc
insb
mov
daa
ss
jbe
or
jns
sub
ss
cli
jnp
fs
insb
movb
jbe
push
imul
mov
imul
test
out
test
mov
dec
adc
push
shld
jns
jl
addl
sbb
xor
testl
dec
jne
stc
xor
dec
mov
add
add
jge
ds
stos
addb
call
add
rolb
mov
fstpt
out
bound
cmp
enter
ret
inc
add
cmp
pop
rolb
fs
daa
push
pop
jnp,pn
mov
testb
pop
pop
adc
lahf
fists
lahf
stos
adc
inc
add
push
aad
add
cltd
cmp
outsl
pop
imul
add
add
and
ret
push
xchg
cwtl
pop
adc
push
pop
pop
jecxz
insb
mov
add
cmpsl
xchg
repz
data16
add
mov
add
dec
jnp
test
ds
sub
cmpsb
inc
sbb
jl
int
lahf
pop
pop
outsb
pop
inc
leave
mov
imul
lods
int
lcall
clc
rolb
mov
add
push
xchg
jnp
aaa
addb
mov
push
inc
add
pusha
add
and
mov
adc
insl
jecxz
repnz
or
lahf
scas
lods
pushf
sti
lods
into
inc
add
ret
dec
icebp
divb
mov
cmp
aaa
xor
jo
cli
xchg
test
mov
inc
lods
popf
mov
test
outsb
pop
pop
inc
adc
inc
or
dec
cld
sqrtps
sub
aam
sub
pop
mov
push
add
add
movb
push
lds
jo
outsl
push
push
cmp
xchg
jnp
aad
add
and
rorl
test
fwait
mov
add
xchg
inc
add
out
das
jnp
xchg
ror
xor
mov
inc
jmp
add
ljmp
andl
ret
cld
ror
and
pusha
add
aas
lret
addl
in
xchg
xor
bound
sbb
push
bswap
mov
fsubrl
mov
jp
cmp
shr
lcall
out
jp
out
push
fisttpll
mov
dec
and
sbb
push
test
push
or
mov
add
xor
fdivrl
xchg
call
xchg
scas
rolb
in
mov
arpl
or
mov
stos
mov
mov
mov
add
pushf
pop
pop
pop
iret
dec
jmp
add
jmp
les
push
aam
dec
hlt
das
fbld
int
pop
out
outsb
sub
mov
mov
ss
mov
add
pushl
mov
outsb
or
or
adc
das
pop
hlt
sub
mov
xor
shll
add
add
fisttpl
mov
cs
cmpsb
out
repz
pushf
mov
aad
sub
mov
push
les
mov
stos
push
stc
pop
inc
add
cltd
enter
xchg
adc
jae
or
mov
cltd
movsb
cltd
adc
icebp
scas
lahf
jbe
and
out
aaa
jecxz
pop
sub
int3
mov
fsubl
repnz
and
lea
lock
jns
inc
test
sub
jg
sub
inc
pop
cmp
dec
pop
dec
in
or
pusha
add
add
add
les
push
lret
adc
cltd
in
mov
jb
and
sahf
addb
mov
inc
aaa
out
push
addb
es
rorb
mov
mov
and
xchg
imul
xor
and
push
xchg
push
ficoms
xor
add
xchg
fdivr
icebp
push
daa
ja
in
insl
inc
add
push
add
push
add
sahf
push
sub
adc
and
imull
xchg
dec
scas
cltd
scas
mov
sub
in
scas
aaa
stc
inc
add
add
outsb
cltd
aaa
xor
imul
dec
mov
jae
ret
lods
inc
pusha
add
jo
scas
outsl
push
add
aad
hlt
jnp
xchg
sbb
xchg
stos
push
pop
pushf
roll
rolb
addb
inc
adc
aad
push
jb
fucomp
cld
pop
insl
mov
iret
stos
jbe
sub
adc
or
xchg
addr16
xchg
arpl
stc
dec
mov
cltd
pop
scas
dec
mov
mov
loope
push
add
addr16
stc
mov
xchg
sub
test
movsl
jp
in
mov
pop
mov
jmp
xchg
sahf
jo
inc
add
add
ljmp
pop
iret
je
push
mov
or
jae
sbb
les
pop
xchg
mov
mov
bound
popf
adc
and
mov
iret
bound
push
in
xor
out
jno
sbb
cs
movb
cmp
xor
lea
out
pop
inc
add
add
ret
dec
push
jne
lret
das
push
bound
fs
or
add
pop
divb
jecxz
rcrb
in
rclb
mov
bound
mov
pop
repz
pusha
add
jmp
add
xor
mov
stc
ret
test
aad
and
movsb
push
out
mov
scas
cmc
jmp
and
add
daa
dec
cmpsl
rcl
or
add
jo
cmp
movsl
clc
cmp
test
pop
mov
xor
push
push
pop
addb
jne
add
mov
mov
xchg
les
jmp
in
lret
aam
in
or
sti
adc
jmp
sub
daa
push
addb
dec
inc
call
fs
sarb
dec
loope
rol
jo
js
mov
add
push
cmc
inc
add
sbbl
jmp
add
cmpsb
push
leave
xchg
add
mov
lret
clc
cmp
jmp
cwtl
xor
in
mov
out
xchg
pushf
in
mov
mov
popl
jge
outsl
add
lcall
je
int3
sbb
mov
fbld
jno
pusha
add
mov
adcl
sbb
test
xlat
ficompl
popf
pop
dec
repnz
test
and
xorl
rolb
mov
pusha
add
aad
mov
shl
add
daa
test
adc
ja
pop
popa
fldcw
dec
cmp
insb
enter
add
insl
cwtl
pushf
cmc
lret
int3
mov
fs
or
inc
add
mov
mov
lfence
mov
mov
and
xchg
push
outsl
mov
fdivr
dec
aad
cmc
lock
inc
cmp
outsl
xor
mov
mov
loop
inc
lea
push
add
jne
xor
add
test
ljmp
adc
cmp
sub
stos
cld
sbb
std
lcall
sub
add
jge
add
or
sbb
loopne
mov
cmp
and
hlt
lcall
mov
pusha
add
push
gs
inc
add
adc
or
inc
jb
daa
or
sbb
mov
mov
icebp
xchg
rcl
or
adc
pushf
adc
int
add
popa
jne
add
inc
add
test
mov
add
push
lods
les
popa
jp
arpl
or
push
lahf
push
sahf
jecxz
popa
popa
add
hlt
leave
xor
mov
adc
lods
andl
or
push
add
fsubrl
lcall
mov
fwait
push
adc
jne
rcl
aaa
clc
mov
loope
std
out
and
stc
arpl
lret
xlat
std
leave
push
adc
cmpsb
jno
dec
aam
movb
movsl
outsl
dec
mov
jb
and
cmp
hlt
sbb
add
sahf
and
cmp
imul
das
pop
mov
je
test
sti
jo
fstpt
cs
addb
inc
add
add
mov
mov
in
imul
in
out
jne
decl
stc
ficompl
cmp
push
add
adc
fs
push
jge
pushf
aaa
in
jne
fcompl
add
lods
pusha
add
adc
in
mov
push
add
ret
les
and
addr16
aaa
stos
pop
mov
cmpsb
push
pop
lret
insl
insb
outsb
pop
in
popf
xor
loopne
dec
je
add
mov
lret
fimuls
add
arpl
or
sbb
das
mov
add
lock
lock
sbb
xor
outsb
adc
pop
and
ret
push
fcoms
push
pushf
mov
sbb
lods
dec
fcmovbe
cli
adc
iret
cmp
sbbl
rolb
lds
addr16
lret
shlb
add
or
mov
lods
daa
mov
jns
bound
arpl
add
adc
scas
mov
push
inc
add
adc
xor
outsb
lea
int
add
out
cmp
movsl
test
jecxz
cmp
pushf
std
lcall
lahf
sbb
xchg
add
add
movb
lods
stos
xchg
xchg
inc
add
outsl
aad
mov
push
in
xor
imul
scas
mov
mov
adc
add
sar
jo
arpl
cltd
xchg
fisubrl
pop
pushf
pop
or
in
divl
xchg
or
jns
scas
sbb
push
movb
mov
sbb
nop
out
add
dec
cmp
cwtl
mov
int3
pop
movsb
sub
inc
add
enter
leave
push
xor
dec
pusha
add
stos
xchg
mov
mov
inc
push
test
add
mov
mov
stos
loopne
xchg
pop
xchg
dec
inc
and
int
pushf
or
je
jne
inc
les
adc
mov
aad
cmc
pushf
pushf
dec
mov
pushf
inc
add
dec
in
jmp
iret
fisttps
push
mov
push
add
fbstp
lret
pop
and
adc
inc
add
scas
push
mov
jae
test
jno
or
xchg
pop
mov
inc
add
inc
add
je
mov
add
rolb
cmpsb
sbb
lret
mov
repz
or
insb
xchg
lcall
adc
faddl
decb
cltd
dec
lea
xor
add
int3
cltd
out
pop
xor
add
or
fbld
lahf
int
lods
push
shll
add
loope
mov
rolb
adc
gs
pop
call
popa
bound
mov
add
add
mov
icebp
cmovp
jmp
add
and
fs
add
lds
mov
jb
mov
xor
imul
xchg
adc
add
test
shlb
mov
fs
and
adc
sub
jae
in
sbb
jbe
or
ficomps
data16
push
add
xchg
push
inc
mov
mov
mov
stc
push
lods
xchg
xchg
imul
int3
cmp
mov
add
fiaddl
inc
add
mov
add
icebp
sbb
ds
inc
ficompl
sbb
xor
iret
loope
mov
mov
add
xor
add
lea
scas
ljmp
ss
add
add
push
pop
lods
inc
dec
mov
add
add
jns
add
jl
negl
mov
popa
pop
addb
das
xchg
out
lea
jnp
sarl
fnstcw
cs
repz
test
jle
jbe
cmp
lret
sbb
test
in
aaa
insb
mov
pop
pop
cmp
add
and
gs
movsb
sub
adcl
push
mov
add
loop
pop
cmp
or
movsl
icebp
loop
lock
sub
cmp
mov
cmpsb
shlb
adc
ror
mov
stc
nop
es
xor
add
dec
push
stc
nop
es
or
add
lds
add
clc
stc
nop
es
fsubs
add
add
pfcmpge
es
add
gs
cmp
nop
cld
nop
jmp
add
add
enter
mov
stc
nop
es
add
repnz
sbb
es
add
add
xchg
out
lods
lea
stc
nop
es
push
cmp
pop
pusha
add
jge
lret
stc
nop
es
inc
mov
add
inc
mov
and
xor
nop
es
add
das
add
jbe
dec
pop
stc
nop
es
add
dec
add
add
dec
cmp
nop
cld
nop
jmp
cmp
fadds
ret
call
stc
nop
es
add
je
sub
add
nop
cld
nop
jmp
fdivr
enter
inc
aaa
pop
push
push
mov
xchg
ret
gs
add
insb
xchg
cltd
xor
push
mov
xchg
ret
add
ret
add
mov
sar
es
test
repnz
aas
add
jmp
stc
nop
es
test
movsb
fildll
nop
cld
nop
jmp
add
inc
add
add
add
pop
push
mov
xchg
ret
add
cltd
popf
add
stc
nop
es
add
stos
out
add
jb
mov
enter
fists
nop
es
sbb
pop
add
in
add
mov
stc
nop
es
add
insb
add
fwait
cmp
nop
cld
nop
jmp
add
in
sbb
jecxz
inc
add
add
out
inc
pop
scas
jne
stc
nop
es
adc
add
sub
cld
nop
jmp
add
add
push
or
stc
nop
es
add
nop
es
mov
in
add
stos
add
nop
es
out
div
sbb
sub
es
cli
je
add
pop
jl
dec
adc
nop
es
mov
add
add
stc
nop
es
add
mov
pop
stc
nop
es
popa
add
push
add
push
cld
nop
jmp
add
add
add
add
push
mov
xchg
ret
push
test
cli
xor
es
xchg
add
add
rolb
xchg
ss
decl
push
mov
xchg
ret
add
push
pop
add
push
mov
xchg
ret
arpl
add
mov
call
stc
nop
es
add
add
addb
outsl
call
stc
nop
es
pop
add
popa
mov
nop
icebp
inc
add
adc
loopne
out
decl
push
mov
xchg
ret
pop
add
mov
sub
add
sbb
rolb
xchg
xor
psubsw
sub
add
nop
es
xor
cli
mov
gs
nop
es
add
cmp
mov
add
stc
nop
es
add
das
add
loope
mov
stc
nop
es
xchg
add
add
es
cli
mov
jl
movb
or
sti
stc
nop
es
jle
mov
push
movsb
sub
nop
es
add
jle
pop
mov
xchg
mov
adcl
stos
push
mov
xchg
ret
test
add
rolb
addr16
mov
pusha
push
mov
xchg
ret
mov
scas
mov
out
imul
stc
nop
es
aas
in
push
add
and
push
stc
nop
es
mov
add
push
pop
nop
cld
nop
jmp
test
dec
test
push
sbb
sbb
lea
nop
cld
nop
jmp
add
add
das
test
dec
add
nop
es
add
aas
add
adc
nop
es
enter
mov
push
stc
nop
es
add
xchg
add
mov
push
mov
xchg
ret
sub
out
push
add
mov
nop
es
push
add
add
stc
nop
es
gs
pop
add
cwtl
add
push
mov
xchg
ret
add
add
mov
js
cld
nop
jmp
aas
mov
imul
ljmp
nop
cld
nop
jmp
je
add
inc
add
stc
nop
es
adc
add
push
xchg
mov
sbbb
add
cltd
rep
stc
nop
es
aas
add
add
aas
cmp
jmp
cmpb
add
dec
add
aam
push
stc
nop
es
movsb
je
add
fadds
adc
xor
stc
nop
es
add
add
mov
stc
nop
es
add
add
add
stc
nop
es
add
nop
es
add
inc
add
arpl
stc
nop
es
mov
add
xor
jmp
cmp
xor
add
stc
nop
es
add
push
imul
es
add
popa
xor
test
nop
cld
nop
jmp
add
add
test
push
sbb
imul
add
idivb
test
test
es
adc
add
mov
add
nop
cld
nop
jmp
je
add
add
rolb
add
stc
nop
es
xor
das
inc
xor
test
pop
leave
stc
nop
es
jl
add
nop
test
add
stc
nop
es
mov
mov
stc
nop
es
add
das
rorb
popa
stc
nop
es
add
stos
dec
cmp
scas
mov
add
add
stc
nop
es
cltd
add
adc
nop
es
out
mov
mov
push
mov
xchg
ret
aas
xchg
add
es
add
in
mov
push
mov
xchg
ret
add
add
fimull
jb
xchg
je
je
xchg
je
xchg
shll
push
mov
xchg
ret
add
add
cmpb
add
out
arpl
add
mov
add
nop
cld
nop
jmp
push
add
xchg
or
shrb
mov
xchg
ret
cli
je
xor
mov
mov
xchg
ret
add
mov
add
add
mov
nop
cld
nop
jmp
add
dec
mov
push
mov
xchg
ret
add
add
aas
call
add
stc
nop
es
jl
aam
add
jg
stc
nop
es
inc
enter
repnz
cmc
sar
nop
es
fdivrs
add
add
mov
stc
nop
es
jl
add
inc
or
nop
es
add
add
and
add
nop
es
shrb
nop
es
aas
add
add
ficoms
cld
nop
jmp
add
ret
sub
or
sbb
scas
mov
stc
nop
es
insb
add
add
nop
es
add
or
add
out
push
push
mov
xchg
ret
test
pop
push
jbe
pop
mov
stc
nop
es
add
jns
das
pop
add
stc
nop
es
dec
pop
add
addb
lea
nop
cld
nop
jmp
jbe
add
sub
repnz
test
pop
add
stc
nop
es
add
scas
push
movsb
sar
push
push
mov
xchg
ret
add
add
add
dec
cmpl
push
mov
xchg
ret
add
sbb
popa
stc
nop
es
out
add
add
popa
jmp
push
stc
nop
es
add
cli
or
add
je
mov
stc
nop
es
or
fdivr
jne
push
mov
xchg
ret
add
dec
nop
cld
nop
jmp
cli
add
pop
xchg
fdivr
enter
nop
es
jle
pop
xchg
in
sbb
push
mov
xchg
ret
sbb
add
mov
mov
es
out
add
add
popa
xor
lret
push
mov
xchg
ret
add
popa
aam
sub
add
mov
stc
nop
es
jl
add
dec
flds
es
add
add
push
push
mov
xchg
ret
add
in
sbb
popa
rolb
pop
pushl
stc
nop
es
test
stos
add
loopw
addr16
int
pop
jae
nop
es
das
xor
xchg
sbb
nop
jmp
xchg
bnd
ret
pop
add
dec
adc
xchg
fiadds
xchg
ret
gs
mov
push
sti
push
mov
xchg
ret
aam
add
mov
add
stc
nop
es
adc
pop
adc
rcll
fmull
es
add
jmp
inc
add
es
add
add
jle
lds
stc
nop
es
xchg
aam
mov
je
insl
add
stc
nop
es
add
shlb
mov
aad
add
sbb
add
je
je
jge
inc
and
nop
cld
nop
jmp
add
add
xor
ret
stc
nop
es
add
shlb
cltd
cmp
sar
es
data16
add
dec
add
cwtl
ret
stc
nop
es
testb
add
jl
sbb
les
nop
es
add
cmp
and
nop
es
movsb
add
repz
es
scas
add
xchg
add
add
dec
cmp
nop
es
pop
add
add
add
nop
es
repnz
add
add
and
add
je
nop
cld
nop
jmp
xchg
mov
add
call
stc
nop
es
add
stc
nop
es
add
test
add
das
jle
cmp
nop
cld
nop
jmp
enter
je
push
add
add
stc
nop
es
adc
xor
inc
in
mov
xchg
ret
add
add
aam
out
lea
stc
nop
es
data16
shl
sub
es
xchg
sub
xor
add
add
stc
inc
add
xchg
or
or
add
fiadds
incl
xchg
ret
pop
repz
pause
cld
nop
jmp
data16
add
in
mov
pop
stc
nop
es
add
add
mov
out
mov
stc
nop
es
cmp
lds
adc
xchg
popa
add
nop
es
enter
adc
mov
xchg
ret
mov
mov
out
xchg
xor
add
cld
nop
jmp
add
add
sbb
adc
add
nop
es
xor
pop
xor
sbb
add
nop
es
add
arpl
cmpsb
inc
add
stc
nop
es
add
add
dec
add
mov
xchg
ret
xor
enter
sbbl
addb
lcall
sbb
xchg
xchg
add
xor
add
stc
nop
es
insb
add
push
push
mov
xchg
ret
push
jl
add
add
inc
add
call
stc
nop
es
mov
lds
es
add
add
xor
sub
stc
nop
es
xchg
add
add
add
stc
nop
es
add
add
sbb
jae
mov
stc
nop
es
pop
mov
scas
arpl
or
add
nop
es
je
add
test
stc
nop
es
cltd
add
aas
add
stc
nop
es
add
add
jle
rolb
mov
jmp
dec
xor
add
add
add
jo
scas
push
stc
nop
es
add
jl
hlt
add
push
mov
xchg
ret
add
push
stc
nop
es
add
sub
jmp
jb
add
mov
out
and
nop
cld
nop
jmp
add
pop
add
jbe
ret
cmpsl
dec
xor
stc
nop
es
sbb
stc
nop
es
xchg
add
stos
add
add
push
add
push
mov
xchg
ret
pop
add
repnz
je
stc
nop
es
add
fisttps
mov
add
nop
es
test
arpl
add
mov
nop
cld
nop
jmp
out
add
add
xchg
add
lcall
jle
add
dec
add
repz
or
movsb
stc
nop
es
add
out
sbb
add
out
out
clc
call
add
add
push
add
mov
add
pop
stc
nop
es
add
add
add
add
dec
cmp
nop
cld
nop
jmp
push
add
fsubs
or
testb
cmp
ret
add
add
sbb
jmp
in
add
add
cltd
add
ljmp
inc
add
test
add
stc
nop
es
add
or
jb
xchg
xor
movsb
add
add
sbb
add
nop
es
add
mov
xchg
ret
dec
insb
add
add
enter
mov
stc
nop
es
xchg
push
add
xor
inc
add
pop
movsb
je
mov
nop
cld
nop
jmp
push
mov
xor
stc
nop
es
rclb
pop
aas
add
in
incl
xchg
ret
mov
aas
add
mov
xchg
ret
rolb
pop
add
cltd
hlt
movsl
shrb
nop
cld
nop
jmp
pop
add
add
stos
add
add
mov
jb
push
mov
xchg
ret
arpl
insb
das
mov
es
add
add
add
nop
cld
nop
jmp
add
add
sub
jbe
stc
nop
es
add
rep
dec
stc
nop
es
inc
add
aas
je
jbe
add
add
or
stc
nop
es
xor
xchg
adc
insb
jne
stc
nop
es
add
test
or
mov
xchg
ret
in
ret
add
add
es
push
enter
add
pop
stc
nop
es
cmp
push
push
add
add
push
stc
nop
es
mov
stos
scas
test
lds
xchg
and
nop
jmp
add
pop
add
popf
mov
push
mov
xchg
ret
scas
add
add
stc
nop
es
dec
add
add
nop
cld
nop
jmp
add
add
stc
nop
es
add
scas
add
push
cltd
inc
push
mov
xchg
ret
add
ret
mov
mov
nop
es
aas
gs
out
push
stc
nop
es
add
add
adc
add
es
add
add
inc
add
xchg
stc
nop
es
add
add
add
arpl
xor
and
nop
cld
nop
jmp
add
stos
add
test
nop
cld
nop
jmp
jl
add
ret
add
add
add
add
popa
stc
nop
es
stos
rolb
add
add
stc
nop
es
gs
sbb
mov
and
shr
nop
cld
nop
jmp
sub
popa
mov
add
add
popa
add
nop
es
add
add
add
dec
cmp
nop
es
enter
lds
stc
nop
es
jbe
in
add
xor
into
mov
stc
nop
es
testb
sahf
mov
stc
nop
es
add
pop
add
push
add
nop
cld
nop
jmp
pop
add
mov
nop
cld
nop
jmp
add
add
push
stc
nop
es
pop
add
xchg
jl
jge
stc
nop
es
add
inc
or
popa
add
mov
xchg
ret
arpl
mov
cmp
push
push
mov
xchg
ret
lds
add
aas
mov
test
nop
cld
nop
jmp
adc
je
inc
mov
lds
inc
call
inc
add
xor
add
adc
xor
add
stc
nop
es
add
pop
add
push
mov
xchg
ret
add
popa
aas
add
inc
stc
nop
es
repz
mov
cmpl
nop
cld
nop
jmp
add
pop
repz
add
loope
pop
mov
stc
nop
es
add
test
mov
pop
adc
add
inc
popf
mov
stc
nop
es
test
data16
movzwl
stc
nop
es
add
xchg
repnz
mov
mov
stc
nop
es
data16
add
inc
add
stc
nop
es
xor
aas
xor
andl
jb
sub
aas
and
cld
nop
jmp
adc
aam
repnz
jae
adc
ljmp
add
movsb
add
xchg
inc
add
loop
lret
nop
cld
nop
jmp
inc
sbb
add
xchg
mov
jecxz
add
mov
lea
add
stc
nop
es
rol
xchg
pop
add
stc
nop
es
insb
je
add
pop
add
add
push
mov
xchg
ret
inc
or
add
stc
nop
es
add
adc
push
stc
nop
es
dec
test
jbe
lea
nop
cld
nop
jmp
add
cmp
jl
sub
nop
es
add
add
pop
movsb
fcoms
nop
es
mov
add
call
add
add
add
sub
imul
jb
add
arpl
add
popa
add
mov
xchg
ret
add
add
push
nop
cld
nop
jmp
add
push
add
mov
xor
push
mov
xchg
ret
add
add
add
xchg
stc
nop
es
add
test
mov
mov
icebp
cld
add
stc
nop
es
add
add
dec
pop
push
and
stc
nop
es
xor
add
push
stc
nop
es
shl
pop
stos
movsb
pop
add
mov
add
rorl
push
sti
sub
stc
nop
es
add
add
xor
add
push
mov
xchg
ret
add
sbb
mov
cltd
mov
nop
cld
nop
jmp
sub
add
std
rep
stc
nop
es
add
cltd
push
pop
movzwl
nop
cld
nop
jmp
add
add
or
cmc
scas
and
stc
nop
es
je
sub
cli
jle
push
pop
and
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
xor
and
nop
es
jmp
test
in
out
test
nop
cld
nop
jmp
or
xor
add
push
aad
leave
add
stc
nop
es
adc
adc
sub
fsts
in
sub
add
pop
inc
add
dec
and
add
add
pop
or
add
add
jbe
push
fdiv
stos
stc
nop
es
add
xchg
gs
add
es
add
imul
add
xchg
add
das
pop
xchg
fisubl
xor
add
nop
cld
nop
jmp
add
push
xchg
dec
dec
push
mov
xchg
ret
cltd
sbb
pop
aam
repz
push
mov
xchg
ret
add
add
add
scas
aam
add
stc
nop
es
add
out
adc
movzwl
stc
nop
es
xor
push
shll
enter
xchg
ret
lds
aam
test
add
rclb
icebp
inc
add
aam
add
add
push
push
mov
xchg
ret
scas
jmp
add
pop
dec
lahf
rep
nop
cld
nop
jmp
sbb
add
lds
xchg
xor
stc
nop
es
add
mov
das
add
inc
add
mov
xchg
ret
mov
add
cli
push
push
mov
xchg
ret
sbb
mov
aad
mov
push
mov
xchg
ret
add
in
add
cmpw
nop
cld
nop
jmp
add
push
fiadds
xchg
ret
repz
add
imul
je
out
inc
add
push
push
mov
xchg
ret
add
test
add
sub
inc
mov
call
stc
nop
es
add
add
inc
adc
nop
es
mov
add
xchg
insb
xor
test
push
mov
xchg
ret
xchg
jle
aas
dec
add
sti
inc
add
xor
add
add
clc
mov
stc
nop
es
add
xor
lret
nop
cld
nop
jmp
ret
aas
add
in
add
mov
sti
nop
cld
nop
jmp
sub
add
gs
add
or
stc
nop
es
pop
xor
pop
add
pop
push
nop
cld
nop
jmp
add
sbb
test
add
inc
cmp
stc
inc
add
add
test
sar
nop
es
test
insb
add
add
or
es
add
jl
add
sub
inc
cmc
inc
add
jl
cli
push
mov
cmp
ret
add
mov
sub
xor
add
stc
nop
es
je
lds
nop
cld
nop
jmp
add
add
add
mov
stc
nop
es
add
inc
add
mov
stc
nop
es
in
add
sti
xor
nop
cld
nop
jmp
add
inc
jle
jle
add
nop
es
das
lds
cltd
fcomp
aas
mov
push
mov
xchg
ret
rolb
sub
mov
stc
nop
es
add
mov
sbb
scas
movzwl
stc
nop
es
jle
add
xchg
hlt
add
or
es
add
add
lods
lea
stc
nop
es
add
ret
xchg
and
inc
add
add
nop
es
jmp
add
inc
add
push
push
mov
xchg
ret
add
pop
add
add
pusha
push
mov
xchg
ret
push
adc
add
adc
pop
popf
xor
stc
nop
es
add
popa
add
int3
popa
stc
nop
es
add
movsb
add
add
push
cli
add
stc
nop
es
stos
add
push
xchg
mov
test
nop
es
pop
add
mov
mov
stc
nop
es
add
add
xchg
cmp
jmp
jb
add
mov
insb
inc
insb
insb
stc
nop
es
add
add
pop
jmp
stc
nop
es
add
add
rolb
add
add
nop
es
enter
mov
add
mov
nop
cld
nop
jmp
add
add
xor
push
nop
cld
nop
jmp
aam
add
adc
popa
insb
mov
jb
add
add
clc
push
nop
cld
nop
jmp
inc
add
add
add
arpl
addr16
xchg
cmpl
mov
aas
add
fcomps
stc
nop
es
add
add
xchg
out
mov
stc
nop
es
add
mov
je
pusha
add
push
and
push
mov
nop
cld
nop
jmp
push
add
jne
and
nop
cld
nop
jmp
pop
inc
add
add
outsb
mov
stc
nop
es
push
adc
call
stc
nop
es
sbb
add
arpl
fdivrl
stc
nop
es
dec
mov
mov
pop
stc
nop
es
add
repnz
inc
add
pop
push
mov
xchg
ret
push
fadds
add
dec
mov
stc
nop
es
add
add
push
stc
nop
es
add
pop
add
pop
pop
test
test
repnz
stc
nop
es
add
add
ret
fsubs
add
add
add
mov
add
lret
stc
nop
es
jmp
test
repz
icebp
push
push
add
stc
nop
es
add
pop
add
add
pusha
add
add
push
mov
xchg
ret
push
add
test
cmpl
jbe
add
xchg
xchg
mov
push
push
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
lds
add
add
add
mov
push
mov
xchg
ret
popa
or
add
test
je
stc
nop
es
test
adc
push
stc
nop
es
in
add
repnz
das
insl
je
nop
cld
nop
jmp
in
data16
cmpw
nop
cld
nop
jmp
adc
add
jb
je
stc
nop
es
add
inc
sbb
nop
es
add
add
arpl
add
xchg
stc
nop
es
lds
add
add
add
sbb
iret
or
mov
lds
add
add
sbb
popa
adc
add
nop
es
mov
adc
adc
add
mov
push
mov
xchg
ret
mov
add
mov
xor
add
stc
nop
es
add
lea
mov
xchg
ret
cmp
add
rcrb
fiaddl
xchg
ret
add
enter
and
sub
jb
ret
insb
add
mov
ret
cltd
add
stc
nop
es
dec
repz
fadds
dec
and
stc
nop
es
add
cltd
in
out
jne
stc
nop
es
mov
add
jb
add
rolb
add
mov
push
mov
xchg
ret
mov
add
call
nop
cld
nop
jmp
add
pop
add
xchg
ret
stc
nop
es
jbe
mov
add
add
stc
nop
es
add
add
add
dec
mov
stc
nop
es
in
sbb
addb
push
mov
and
jno
or
inc
pop
cmc
add
ret
stc
nop
es
add
in
adc
pop
add
stc
nop
es
add
add
add
das
jne
nop
cld
nop
jmp
lds
enter
pop
mov
nop
cld
nop
jmp
add
xchg
orl
es
add
add
pop
in
dec
jne
nop
cld
nop
jmp
add
mov
enter
cld
nop
jmp
add
mov
scas
xor
stc
nop
es
sub
test
add
xor
push
mov
xchg
ret
add
movsb
jbe
add
ss
push
push
mov
xchg
ret
sbb
add
add
jmp
mov
stc
nop
es
add
adc
dec
gs
xor
push
mov
xchg
ret
add
add
add
cmpl
nop
cld
nop
jmp
dec
stos
cli
je
push
call
out
incl
add
xor
add
nop
cld
nop
jmp
add
aam
shll
add
nop
es
add
or
add
add
nop
es
out
adc
cmp
jle
pop
cmp
push
mov
xchg
ret
add
inc
push
add
add
nop
es
add
add
inc
add
xor
add
stc
nop
es
add
adc
nop
es
add
jle
add
les
add
nop
es
add
add
xor
add
stc
nop
es
xchg
add
jb
stc
nop
es
add
aaa
add
stc
nop
es
aas
add
cmp
movzwl
nop
cld
nop
jmp
add
popa
add
add
mov
push
mov
xchg
ret
add
cmp
sbb
test
fs
nop
es
testb
adc
and
add
jmp
mov
sbb
jmp
jb
test
add
imul
xor
nop
es
mov
insb
jne
push
loope
mov
imul
push
mov
xchg
ret
add
in
add
enter
es
add
or
add
jmp
push
mov
xchg
ret
add
gs
mov
push
test
nop
cld
nop
jmp
add
add
add
add
pop
pop
stc
nop
es
insb
cli
stos
test
mov
jmp
push
stc
nop
es
pop
add
popa
add
push
ret
mov
nop
cld
nop
jmp
fadds
add
add
insb
or
push
cli
inc
add
add
add
call
stc
nop
es
add
add
in
stc
nop
es
add
xor
stc
nop
es
data16
xor
mov
stc
nop
es
add
insb
add
das
add
push
mov
xchg
ret
add
add
stc
nop
es
je
jle
add
cmpsl
dec
mov
push
mov
xchg
ret
add
popa
out
add
jg
enter
jb
push
popa
xor
mov
jge
push
mov
xchg
ret
jle
add
add
lea
nop
cld
nop
jmp
xor
add
xor
stc
nop
es
add
cmp
inc
add
in
add
xor
mov
dec
add
movb
add
add
push
add
add
stc
add
stc
nop
es
adc
mov
je
and
pop
push
mov
xchg
ret
add
add
data16
mov
stc
nop
es
fadds
je
pop
call
nop
es
add
sbb
scas
decl
stc
nop
es
add
ret
test
stc
mov
push
mov
xchg
ret
sbb
cli
pop
mov
js
mov
adc
nop
es
add
adc
add
push
mov
xchg
ret
dec
add
imul
sbbb
mov
sub
jb
pop
add
das
add
out
inc
sbb
mov
xchg
ret
add
push
add
push
stc
nop
es
aas
rolb
cltd
add
mov
sar
es
add
test
add
add
nop
es
push
ret
pop
xchg
arpl
imul
stc
nop
es
add
add
movsb
xor
ret
nop
cld
nop
jmp
add
movsb
pop
je
or
jb
stc
nop
es
sub
inc
push
mov
dec
inc
nop
cld
nop
jmp
add
pop
data16
add
std
call
stc
nop
es
add
add
rclb
push
mov
xchg
ret
xchg
add
stos
inc
add
xchg
or
stc
nop
es
mov
adc
inc
and
push
mov
xchg
ret
je
das
rcrb
stc
nop
es
test
add
rol
mov
jb
cli
push
add
add
ret
add
cmp
nop
cld
nop
jmp
aas
add
jbe
add
xor
lret
iret
daa
mov
std
push
fs
or
cli
stc
nop
es
enter
add
sub
cld
add
push
mov
xchg
ret
push
xor
add
mov
stc
nop
es
add
sbb
xlat
jae
jl
dec
add
nop
es
or
je
scas
in
add
mov
lea
stc
nop
es
lds
fildl
es
out
popa
gs
pop
add
jne
nop
cld
nop
jmp
popa
aas
cmp
inc
mov
js
mov
push
add
lahf
and
mov
mov
stc
nop
es
scas
push
aas
stc
nop
es
xor
or
popa
mov
xchg
push
push
mov
xchg
ret
scas
fadds
sbb
pop
insb
out
add
stc
nop
es
test
add
adc
mov
stc
nop
es
jmp
add
mov
adc
nop
es
adc
mov
popa
iret
testl
nop
cld
nop
jmp
add
add
and
mov
xchg
ret
insb
add
mov
stc
nop
es
arpl
scas
push
mov
xor
push
mov
add
add
add
popa
stc
nop
es
movsb
add
add
xor
push
add
stc
nop
es
add
cli
cltd
add
nop
cld
nop
jmp
xor
dec
push
mov
or
add
add
repz
lret
cmp
push
mov
xchg
ret
testb
cltd
cmp
push
mov
loop
push
mov
xchg
ret
das
mov
add
mov
nop
es
add
add
nop
and
add
push
std
inc
add
sbb
push
add
push
mov
xchg
ret
cmp
jmp
mov
push
mov
xchg
ret
adc
xchg
add
idiv
sub
stc
nop
es
push
xchg
add
lret
push
nop
cld
nop
jmp
add
inc
add
test
add
add
mov
xchg
ret
aas
add
add
pop
stc
nop
es
ret
pop
add
xchg
add
jle
add
jae
cld
nop
jmp
push
add
mov
nop
es
inc
xor
test
inc
cmp
nop
es
xor
add
jecxz
mov
jb
xor
push
add
pop
mov
ljmp
fdivr
incl
mov
adc
push
push
mov
xchg
ret
add
add
add
fcoms
cld
jecxz
add
add
add
fimuls
nop
jmp
add
add
aas
add
jmp
stc
nop
es
add
jl
enter
add
hlt
dec
add
lds
arpl
flds
js
nop
cld
nop
jmp
adc
add
add
in
push
stc
nop
es
add
enter
gs
movzwl
stc
nop
es
push
movsb
add
add
pusha
push
mov
xchg
ret
aas
add
push
popa
add
pop
mov
nop
cld
nop
jmp
mov
add
mov
nop
cld
nop
jmp
data16
add
sub
es
add
add
jmp
mov
stc
nop
es
add
or
cld
nop
jmp
popa
add
mov
add
fmull
cld
nop
jmp
add
jmp
inc
pop
add
test
stc
nop
es
add
add
cld
push
stc
nop
es
cltd
add
xor
add
lods
push
push
mov
xchg
ret
popa
add
ret
repz
mov
rclb
push
roll
xchg
ret
enter
jl
xchg
sbb
sbb
cmp
ret
je
pop
add
mov
jo
nop
cld
nop
jmp
mov
push
imulb
add
stc
nop
es
add
sbb
popa
add
testb
and
add
lret
add
adc
nop
es
aam
movsb
add
add
xchg
add
stc
nop
es
xchg
pop
add
sbb
jl
stc
nop
es
add
add
add
test
jne
stc
nop
es
data16
xchg
pop
es
stc
nop
es
mov
add
stc
nop
es
mov
cli
adc
nop
es
mov
pop
mov
dec
in
mov
stc
nop
es
add
add
or
jp
movsb
stc
nop
es
retw
in
popa
add
jmp
stc
nop
es
scas
add
add
pop
add
jb
add
mov
jmp
fsubr
orl
addb
enter
popa
fmul
imul
stc
nop
es
pop
add
sub
not
addr16
jmp
stc
nop
es
xor
add
es
add
mov
div
nop
cld
nop
jmp
mulb
xchg
add
add
mov
es
scas
dec
test
add
push
scas
nop
push
mov
xchg
ret
mov
or
push
nop
cld
nop
jmp
add
add
je
add
mov
nop
es
aam
mov
add
nop
es
add
jmp
add
xchg
insl
call
stc
nop
es
test
nop
cld
nop
jmp
out
add
add
add
pushl
stc
nop
es
add
das
test
ljmp
cmpb
add
scas
add
in
add
add
inc
bound
mov
stc
nop
es
repz
add
add
test
nop
es
add
cld
stc
nop
es
add
mov
stc
nop
es
jle
cmp
add
and
cmp
stc
nop
es
add
add
and
mov
push
stc
nop
es
mov
pop
pop
mov
test
or
nop
es
xchg
jle
mov
sbb
push
add
shl
nop
cld
nop
jmp
push
xchg
add
add
add
mov
shlb
imul
add
add
aam
data16
in
and
stc
nop
es
add
add
add
mov
repz
mov
xchg
ret
add
mov
stc
nop
es
add
repz
add
rclb
loope,pt
add
add
adc
loope
stc
nop
es
repnz
cmp
mov
xchg
ret
add
add
les
insl
add
push
mov
xchg
ret
xchg
fdiv
push
add
shll
es
add
shlb
lds
mov
xchg
ret
add
mov
sub
pop
fcoml
cld
nop
jmp
inc
inc
add
xor
add
add
push
stc
nop
es
cltd
pop
push
add
add
push
fsts
mov
xchg
ret
das
test
add
jne
stc
nop
es
add
subl
push
mov
xchg
ret
popa
out
add
add
stc
nop
es
sbb
xchg
and
push
clc
push
push
mov
xchg
ret
add
add
add
stc
nop
es
add
into
lea
stc
nop
es
sbb
add
data16
add
stc
nop
es
scas
add
pop
add
fiaddl
es
pop
fadds
add
insb
add
push
mov
xchg
ret
add
pop
lds
pop
stc
nop
es
sub
pop
add
rol
sahf
jne
stc
nop
es
repz
lods
movswl
stc
nop
es
arpl
aam
add
loop
add
add
xchg
add
add
nop
cld
nop
jmp
xor
add
jle
aam
sub
int3
neg
add
cmp
in
test
dec
leave
cmp
xchg
scas
jmp
push
sbb
popf
cmp
jl
pop
in
add
das
pop
notb
lahf
jno
cmpsl
xor
div
lret
push
and
ret
out
xor
movsbl
push
add
sarl
push
pop
pop
mov
sub
or
daa
push
add
dec
mov
sub
aad
mov
icebp
aad
add
bound
inc
test
fisubl
fdivrl
and
sub
add
sbbl
mov
or
ret
int3
jnp
int
fldenv
clc
push
push
push
jmp
cld
inc
add
cli
jns
xor
fdivs
sbb
cltd
lods
lahf
addb
cmpsb
sub
pusha
add
test
add
push
and
mov
mov
inc
comiss
js
xor
jecxz
bound
fstps
push
and
mov
insl
imul
or
lcall
mov
dec
push
ja
and
and
test
leave
adc
lods
mov
cmpsb
push
mov
out
xchg
xchg
sub
addb
mov
pusha
add
aas
dec
or
xchg
cmp
int3
xchg
dec
call
add
mov
popa
addr16
xor
fisubrl
xor
jl
push
test
or
pop
mov
jae
jmp
mov
xor
cld
pop
gs
adc
add
add
int
inc
add
shl
out
sti
jp
out
add
push
ja
cli
movsb
lock
xor
in
shll
into
aas
pop
inc
shrl
imul
add
push
mov
fcompl
enter
inc
jge
je
aas
mov
push
push
adc
sbb
sti
push
insb
ret
je
jmp
cmp
cmp
pop
adc
je
sbb
mov
aam
add
cmp
or
cld
cmp
cmp
fistpl
pop
sbb
popa
push
nop
ss
jg
add
jmp
push
and
mov
insb
inc
jmp
mov
popf
or
lcall
outsl
jbe
js
repz
out
insl
or
aam
stos
bound
addb
sub
popf
and
out
cmp
add
or
lea
jb
xor
cmc
push
xor
iret
aas
shll
call
enter
add
cmp
inc
lret
iret
fnstsw
push
stos
mov
add
xchg
addb
es
xlat
jnp
mov
push
cwtl
sar
not
and
mov
dec
out
push
inc
add
int3
loop
insb
in
adc
add
addr16
leave
sbb
cmp
nop
xor
frstor
cmp
adc
adc
mov
scas
and
call
inc
repnz
mov
dec
stos
es
dec
pop
xchg
cmp
push
pop
lret
mov
shlb
and
adc
xlat
mov
push
mov
pop
jle
mov
mov
sbb
push
stos
dec
ret
addr16
mov
mov
arpl
ljmp
add
jnp
pop
stc
push
push
pop
jg
push
shlb
add
add
fdiv
dec
test
mov
stc
push
pop
ljmp
mov
pop
scas
aaa
mov
and
aas
outsb
jo
arpl
aaa
push
dec
inc
xlat
pop
stos
adc
add
ss
shlb
lods
outsl
loopne
inc
and
int3
aad
mov
mov
pop
mov
push
mov
stos
push
ja
lahf
mov
or
xor
dec
jae
push
in
mov
xor
and
jae
cmp
add
fwait
cli
scas
dec
ja
xlat
sub
sbb
out
mov
es
rcr
jmp
ret
add
outsl
test
cmp
add
dec
sbb
add
xor
jle
mov
dec
mov
sub
fiaddl
jge
or
std
mov
addb
or
add
push
imul
push
mov
add
fadds
cmp
add
sub
aas
hlt
mov
addb
out
jno
and
lahf
mov
cs
jbe
add
addb
jge
jecxz
decb
test
dec
repnz
daa
mov
mov
cmp
push
outsb
fldenv
add
fs
push
cmpsl
push
pop
insl
dec
out
mov
pop
lcall
dec
cmp
ret
outsb
lods
enter
adc
lds
jbe
mov
scas
push
pop
scas
sti
aad
sub
in
sub
mov
sub
lds
xchg
inc
pop
out
scas
jb
imull
sbb
mov
pop
jno
mov
addb
pop
aam
decl
xchg
dec
popa
and
jge
mov
mov
es
push
cs
jns
inc
add
mov
inc
xor
jns
adcl
cmp
je
adc
sbb
xlat
inc
iret
std
cmp
scas
shl
fnsave
mov
cmp
add
mov
inc
add
rcrb
cmpl
lret
setp
pusha
add
pop
cmpsl
mov
shlb
mov
xchg
xchg
cmpsl
mov
repnz
add
fnsave
rorb
stos
ret
jo
xchg
and
js
cld
inc
ja
fadds
adc
push
xchg
icebp
inc
add
adc
aad
fidivl
or
je
adc
ret
push
dec
fsub
insb
enter
into
loopne
xchg
fwait
mov
inc
add
fwait
fwait
lea
lahf
sub
cmpsl
mov
rorb
out
fstp
push
imul
xor
shlb
in
jg
fisubs
add
js
sbb
mov
adc
outsl
jno
clc
lods
add
add
xor
pop
push
inc
add
outsl
add
cmp
add
loop
dec
mov
testl
mov
or
add
pop
addl
push
ljmp
rol
add
cmpsl
loop
daa
jne
cmp
push
add
push
mov
lock
pop
loopne
bound
mov
je
push
jl
repnz
mov
movsb
sub
add
loope
mov
aad
aad
inc
mov
cmp
adc
mov
rolb
rcll
xor
add
jno
aas
push
imul
xchg
mov
jne
add
add
mov
repz
sbb
push
imul
nop
int3
divps
add
add
pop
ret
fidivrl
jl
add
gs
mov
dec
fwait
xchg
test
cltd
push
aaa
cli
jmp
fs
lods
push
mov
pop
out
mov
repz
add
call
pop
sti
je
pop
out
icebp
mov
test
mov
and
pusha
add
lods
push
mov
add
repnz
ficoml
fldl
lds
adc
mov
pop
push
add
xor
sub
mov
test
mov
addb
movsb
cli
insl
int3
mov
lods
movsl
fistl
add
push
call
es
addr16
inc
add
or
xlat
scas
notl
push
xchg
negb
rol
and
lahf
or
popa
xchg
ljmp
cltd
pop
test
dec
lret
or
insb
insb
and
inc
mov
jo
add
aaa
arpl
lods
sub
hlt
cmp
bound
mov
xor
scas
inc
add
inc
repnz
add
inc
add
dec
les
fwait
cmp
nop
cld
mov
pusha
add
sub
pop
sub
push
inc
lock
sbb
mov
add
mov
in
adc
ret
cmp
leave
rolb
mov
jbe
gs
lods
iret
pushf
jp
aad
cwtl
jo
stos
fs
pop
into
pop
or
cmp
xchg
pop
cmp
mov
push
or
add
mov
add
outsl
lods
aaa
jmp
push
add
lock
sub
add
mov
pop
or
adc
pop
scas
mov
je
outsl
sub
lods
pop
xor
lret
push
add
ror
sbb
iret
adc
add
and
push
push
sub
pop
sub
xor
jnp
imul
pop
xchg
mov
sub
and
add
push
add
xor
cmpsl
cwtl
mov
pushf
mov
push
cmpsb
and
xchg
outsb
adc
je
or
mov
ja
incl
jmp
cmc
insb
pop
xor
add
std
jg
xor
xor
xchg
mov
dec
mov
add
repnz
cmp
jo
cld
andl
cmp
dec
mov
sub
xchg
pop
adcl
add
fcmovb
add
inc
add
fdivl
das
push
std
pop
ror
add
xor
sub
lcall
aad
nop
jle
sub
add
hlt
jnp
and
xor
push
in
lret
movsb
mov
outsl
cmp
xchg
xor
sub
test
sub
loopne
testb
mov
pop
enter
or
pop
insl
pop
cmp
xor
imul
sub
add
or
lods
dec
mov
jecxz
ljmp
adc
out
pop
jae
lret
push
xor
push
dec
push
adc
mov
adc
das
push
lret
xor
xchg
pop
adc
dec
xchg
sub
lahf
lcall
add
mov
cmp
mov
inc
add
mov
sbb
or
fisubs
add
bound
sbb
loope
add
icebp
fidivrl
mov
cmp
movsb
mov
xchg
and
fidivl
mov
sar
adc
dec
or
jge
sbb
ret
pop
pop
inc
mov
cmp
icebp
xor
insl
xchg
inc
add
clc
xchg
test
subl
sbb
add
and
fisttps
jnp
add
pop
jp
stos
pop
lret
jg
addr16
aas
mov
adc
dec
jge
rcll
fisubrl
and
xor
pop
mov
push
xor
sahf
jnp
mov
out
test
cmp
push
mov
cmpsb
push
cmp
jl,pn
or
es
mov
mov
pop
xor
inc
mov
cs
cmp
cwtl
push
lds
outsl
adc
add
lds
and
test
add
adc
mov
or
sarl
sub
push
add
xor
adc
pop
dec
xchg
pushf
les
push
adc
add
sbb
cmpsb
push
leave
out
add
daa
fistpl
outsl
push
pop
mov
fistpll
sbb
not
pop
rorl
dec
xlat
jp
movsb
dec
cmp
pop
das
jae
push
add
add
mov
movsb
ja
pop
fildl
clc
add
dec
cmpsb
insl
shll
dec
ja
pop
xor
fs
jb
jo
into
lock
cmpsl
arpl
popf
jmp
cwtl
xor
inc
xchg
dec
mov
adc
cmpsl
pop
jp
dec
ret
aam
sarl
sahf
int
add
xor
cmc
dec
sub
xchg
add
lret
jns
mov
sbb
cmpsb
ret
js
push
pusha
add
mov
push
jo
push
mov
arpl
mov
iret
insb
and
xchg
jge
mov
dec
mov
lods
jmp
stos
mov
xchg
fmull
addr16
jle
int
out
enter
push
movb
shlb
cmp
xchg
cwtl
pop
dec
xor
adc
mov
popa
jle
and
das
push
icebp
popa
clc
popf
xchg
les
scas
fiaddl
sbb
jle
sub
push
and
in
push
add
add
ror
mov
inc
add
add
jle
push
add
int
add
and
in
cltd
rcr
mov
mov
xchg
sbb
arpl
cmp
in
addb
scas
mov
mov
xor
push
xchg
clc
div
cmpsb
pop
loop
dec
cmpsb
pushf
inc
add
add
adc
push
addr16
xchg
out
add
stos
mov
in
cmp
jb
add
add
sbb
rcll
mov
push
insl
flds
or
xlat
test
cmp
movl
cmp
jg
dec
ret
adc
fistpll
or
lds
add
add
out
add
ficoms
inc
add
jmp
stos
push
imul
pop
sbb
cmp
cltd
ja
shll
sub
es
test
add
mov
jmp
scas
jl
mov
cld
lret
stos
jae
push
cmpsb
les
imul
add
mov
lcall
pop
jg
lret
test
sbb
icebp
mov
push
add
add
pop
outsl
push
mov
sbb
xor
push
daa
push
mov
fsts
mov
mov
repnz
lods
fs
test
jae
sbb
adc
dec
lret
push
and
arpl
clc
push
mov
push
mov
jae
daa
xchg
or
dec
pop
movsl
scas
or
push
addb
xor
jge
push
jmp
pop
fwait
jecxz
addr16
add
inc
add
fstpt
sarb
push
add
fbld
int
mov
or
add
cmp
pop
and
mov
push
jnp
lahf
cld
cmp
pushf
ljmp
daa
or
ja
cmp
xor
add
pop
jno
gs
mov
cmpsb
cmpsl
add
in
pop
negb
imul
out
cld
adc
and
mov
in
push
aaa
pop
pop
insl
cmp
in
addb
sub
jge
fdivs
lret
insl
jno
add
out
add
shrb
jnp
es
clc
stos
pop
pop
jecxz
sbb
cmp
rorl
jg
sbb
jle
inc
inc
add
sahf
sub
push
sub
call
inc
pop
xorl
cmp
in
popa
mov
out
lcall
or
loopne
pop
je
cmp
mov
cmp
out
jp
mov
sbb
add
xor
add
addb
inc
and
mov
sub
jae
dec
bound
test
mov
add
mov
jne
xchg
add
inc
shrl
adc
jne
sahf
sub
pushf
punpckhdq
mov
fbstp
into
mov
out
jae
popa
mov
xor
rol
and
repz
inc
loope
xor
add
add
mov
aad
sbb
ljmp
addl
sub
movsb
or
sbb
insl
sbb
enter
cmp
insb
mov
push
lahf
or
mov
pop
fisubrl
cltd
xlat
lods
pop
adc
popf
add
mov
les
adc
jge
pusha
add
dec
inc
mov
insl
or
and
sbb
loopne
ljmp
inc
add
dec
cld
mov
push
bound
cmp
push
jno
adc
inc
add
cld
adc
add
jo
xor
mov
fisubs
js
mov
adc
lods
cmpsb
in
subl
clc
mov
sub
pop
jnp
xor
jmp
inc
lods
xchg
cmp
jnp
push
or
sbb
mov
jno
push
jb
fs
inc
push
dec
movsb
mov
std
into
inc
and
push
xchg
jl
mov
xlat
inc
cld
cltd
shlb
repnz
adc
xor
in
in
pushf
arpl
jb
inc
frstor
mov
fmul
jnp
jo
mov
dec
add
xchg
xchg
mov
leave
lods
or
addb
mov
sbb
or
fists
call
cs
insl
cmpsb
dec
push
fwait
movsl
ret
push
mov
jle
lcall
and
sub
sub
jns
loopne
int
jo
mov
rcll
popf
fs
lcall
out
adc
addr16
mov
lahf
xor
bnd
dec
bound
movsl
xchg
jnp
pop
xor
xor
mov
lock
out
sbb
sub
out
pop
adc
neg
mov
loope
std
jp
inc
push
adc
rcrl
arpl
xor
lret
sub
jae
add
add
nop
mov
aam
push
inc
mov
ljmp
and
dec
mov
add
bound
je
das
jo
mov
addb
add
lods
addb
sub
ror
aas
enter
clc
divl
das
pop
xor
scas
icebp
mov
movb
add
xchg
push
shr
mov
not
cmc
sbb
push
testw
adc
mov
sbb
lcall
hlt
insl
stc
pop
js
test
mov
cmp
push
mov
dec
fnstcw
cli
pop
pop
xor
add
pushf
fnstenv
jae
mov
mov
ljmp
aaa
scas
jae
mov
xor
hlt
push
adc
loopne
inc
aam
dec
fisubrl
insb
cmpsb
cmp
stos
add
icebp
push
insl
jae
xor
jne
mov
lods
xor
popa
pusha
add
loope
inc
add
mov
jecxz
xchg
mov
mov
mov
outsb
push
lods
int
sbb
mov
shlb
mov
daa
movb
cs
add
pushf
xchg
int
cmp
add
fistps
push
test
stos
ds
aas
mov
rolb
sbb
das
or
fisubrs
add
add
add
add
iret
mov
mov
popa
in
xor
cmp
testl
insl
pop
lcall
push
stos
inc
in
ficoml
int
add
cld
das
movl
or
adc
roll
sbb
sbb
add
cmp
icebp
mov
add
sub
dec
adc
add
pop
decb
cmp
cli
sub
mov
gs
mov
jg
dec
sub
cmp
mov
add
add
enter
js
cmp
fwait
movsb
adc
sbb
add
std
pop
adc
adc
inc
lret
pop
mov
sbb
ljmp
movb
loope
pop
test
aaa
iret
mov
pop
andl
jmp
xchg
movb
rol
mov
jmp
xor
push
insb
std
fdivrs
adc
xor
jb
repz
xor
out
sti
inc
add
stos
or
jbe
add
les
sahf
or
pusha
add
mov
push
mov
stos
fwait
jmp
mov
out
mov
mov
xor
mov
add
decb
mov
mov
ss
insl
fistpl
sub
lock
xor
cli
fidivrl
dec
xchg
dec
cmp
loope
push
add
xor
mov
pop
bound
hlt
push
sahf
mov
add
sahf
add
hlt
arpl
sbb
sub
movb
mov
aas
das
lds
push
rolb
adc
cwtl
mov
mov
out
sbb
jbe
hlt
out
ljmp
stos
or
add
dec
sbb
leave
cwtl
push
leave
adc
push
or
adc
inc
mov
dec
cmpsb
mov
scas
push
rcrl
add
mov
xor
or
sbb
pop
lods
jmp
ljmp
pop
xchg
xor
pushf
insl
test
pushf
add
lock
sbb
testl
into
sbb
or
aam
ja
xor
xchg
leave
cmpsl
popl
leave
stos
inc
add
in
sub
pop
fwait
inc
add
fcompl
cmp
and
popf
daa
fidivl
sti
adc
mov
loopne
mov
sub
xor
std
es
pop
movsl
or
mov
xor
sbb
fstpl
dec
in
mov
out
jno
push
lds
cli
mov
outsl
imul
add
push
test
mov
sbb
mov
add
iret
cli
nop
pop
nop
out
cli
mov
and
aas
push
inc
add
stc
mov
jb
add
mov
lret
xor
adc
add
rorl
aaa
lea
dec
mov
and
inc
adc
mov
clc
push
dec
insl
cwtl
out
add
mov
mov
add
je
mov
pop
adc
add
aad
mov
adc
sub
enter
jo
cltd
mov
lods
xor
add
dec
inc
add
mov
add
add
mov
and
pop
test
mov
leave
pop
jmp
hlt
or
xor
fsubr
dec
xor
xchg
mov
inc
add
fs
in
mov
negb
dec
aad
out
cs
xchg
enter
cmp
cs
andl
xor
xchg
stc
les
in
outsb
ds
pop
test
push
push
pusha
add
cwtl
dec
lcall
inc
add
dec
push
inc
add
jl
jbe
add
mov
mov
sub
sub
push
cmp
test
xorl
imul
imul
adc
add
out
imul
pop
mov
or
testb
mov
in
mov
cld
push
inc
mov
jno
bound
mov
add
outsl
push
sub
add
je
jnp
add
xor
lahf
lods
enter
pop
jecxz
pushf
jg
test
inc
add
and
dec
or
outsb
push
cmpsb
lea
mov
jno
movsl
lods
daa
stos
mull
outsb
sbb
xchg
sbb
and
lret
inc
add
cmpsl
and
in
ret
cwtl
adc
mov
pushl
test
data16
sub
dec
out
xchg
push
add
dec
xor
adc
or
add
add
jle
ret
xor
xor
cmpsb
hlt
mov
mov
jo
add
add
ret
imul
leave
call
stos
fistpll
xchg
jns
push
out
add
outsb
dec
lods
adc
daa
jne
enter
lods
scas
cmp
in
cmpsl
popa
mov
dec
fs
addr16
jnp
test
or
add
mov
aad
adc
arpl
cmpsb
lcall
mov
testl
lods
mov
sbb
dec
inc
add
jp
test
in
jae
jge
not
rclb
popf
inc
xchg
xchg
outsb
push
pop
dec
mov
mov
pop
rolb
sub
test
push
rolb
iret
stos
int3
nop
jg
cmp
jp
or
add
mov
mov
and
push
push
or
fdivl
xor
or
add
pop
stos
jge
xchg
fldcw
pop
imul
rolb
addb
sbb
mov
xor
add
xor
mov
add
daa
lods
pop
sub
push
xor
dec
and
insb
daa
ljmp
sahf
cmpl
push
jbe
into
test
popa
int
jl
push
out
adc
push
movb
enter
scas
jmp
loopne
pop
push
lret
ror
stos
jne
push
sti
movsl
shrl
hlt
xchg
mov
mov
dec
jge
nop
lds
mov
les
xor
fistpl
xor
loopne
xor
rorb
xchg
sub
adc
jne
jbe
hlt
xor
pop
jo
insl
fnsave
xchg
in
imul
cmp
stc
cmp
iret
movlps
and
mov
dec
fcomps
addb
pop
adc
mov
call
inc
loope
sub
loopne
ljmp
adc
test
add
xchg
inc
add
ret
orl
icebp
addb
fxch
push
icebp
cmpsb
inc
add
out
xor
lods
xchg
pop
push
fcomp
fwait
fs
hlt
adc
ljmp
dec
jnp
add
mov
dec
icebp
xchg
cmp
or
into
pop
xchg
adc
insb
jae
cmp
add
out
faddl
adc
ljmp
pop
sbb
out
dec
xor
inc
movb
popa
xor
aaa
jl
push
mov
jg
int
cmp
jle
popf
mov
cmp
or
cwtl
pop
push
icebp
sbb
cltd
jb
push
test
fucomi
push
jle
cli
ss
loop
movb
mov
addb
add
mov
fs
in
pop
add
add
sahf
jo
je
sub
cmc
or
loopne
inc
add
inc
add
inc
add
sub
cmp
movsb
dec
mov
test
mov
push
ss
loop
inc
imul
push
addb
add
add
mov
jno
and
mov
sarl
mov
pusha
add
je
add
jle
jl
jp
xor
pop
xor
js
dec
push
add
push
dec
sub
inc
pop
dec
sahf
pushf
cmpl
dec
jl
xor
lock
int
loop
inc
add
inc
and
add
pop
pop
cli
stc
cltd
mov
pop
sbb
xor
stos
fadd
add
and
push
add
add
inc
add
test
insl
xchg
and
or
nop
push
jo
addr16
or
jae
jmp
or
popa
imul
rolb
cmp
jmp
adc
cmp
cmp
ret
lret
mov
add
jne
sbb
add
dec
call
adc
in
lds
or
sbb
fcomi
in
mov
adc
add
aas
lahf
push
hlt
ret
inc
push
cmp
add
lcall
lcall
sub
movl
lret
add
mov
mov
mov
in
xchg
push
icebp
mov
into
cmp
jns
cli
lods
cltd
push
je
pusha
add
sub
add
add
mulb
outsb
mov
jb
rolb
inc
add
ror
scas
mov
rolb
sub
adcl
xchg
rolb
sub
in
test
fidivs
xor
add
add
js
xchg
aad
sub
mov
cmp
scas
out
or
mov
pop
ret
call
lret
push
add
mov
or
or
jns
cld
and
mov
xor
jge
add
xor
outsb
fildl
imulb
cmp
or
in
ljmp
movsb
prefetcht1
loope
push
lret
adc
scas
mov
jecxz
cwtl
jns
movsl
popf
int
jae
xor
bnd
fwait
clc
fwait
add
adc
iret
cmc
faddl
popf
and
gs
popf
lea
stos
pop
jge
adc
out
or
jle
rolb
add
ror
xchg
mov
xchg
loope
movb
sub
loopne
xchg
push
add
sbb
mov
rolb
dec
dec
mov
sub
or
or
lret
xchg
xor
addb
cs
addb
stos
int3
decl
jne
add
dec
imull
insb
test
fdivrp
lods
sub
add
add
bound
add
jp
inc
xor
test
xor
pop
xchg
call
mov
pop
aad
or
sarl
mov
pcmpeqw
ja
aad
jb
mov
test
sbb
add
stos
add
out
or
in
mov
inc
jo
mov
adc
std
pushf
enter
push
hlt
je
sahf
into
js
sbb
and
dec
test
in
mov
add
sbb
shll
add
inc
mov
cltd
xlat
popf
adc
pop
addl
stos
lahf
in
aaa
movsl
mov
sbb
mov
pop
adc
orl
js
pushf
pop
lret
xor
out
dec
imul
push
add
xchg
loop
dec
int3
pop
jbe
ja
lcall
add
les
or
lcall
jp,pn
adc
dec
and
pop
sub
sub
adc
sarl
add
hlt
cltd
stc
ror
daa
lret
lret
pop
mov
pushl
and
inc
add
mov
add
add
add
scas
inc
xchg
and
mov
rcll
adc
sti
imul
es
mov
les
movsb
jns
insl
inc
add
icebp
js
ret
mov
add
inc
pop
shlb
movb
jb
add
add
add
adc
xchg
or
dec
mov
jle
mov
mov
and
jmp
sub
pop
ljmp
sub
add
add
aam
adc
cmp
je
sub
mov
gs
int3
scas
movb
ja
and
lea
xchg
jb
add
icebp
or
xchg
push
loopne
test
movl
cmc
aad
data16
push
lret
loop
xchg
repnz
rolb
ljmp
xchg
stos
gs
aas
cmpsl
cli
data16
mov
mov
sbb
add
add
aas
shld
das
add
sub
sbb
out
sbb
or
hlt
flds
xchg
dec
cmp
and
fldenv
add
lock
add
mov
jnp
push
sub
lahf
movsl
push
in
mov
mov
roll
add
jp
jno
add
and
inc
add
mov
inc
mov
sbb
imul
clc
fbld
das
mov
hlt
jge
les
push
jbe
mov
dec
push
pop
outsb
ret
xor
out
das
sbb
mov
mov
out
inc
add
dec
daa
xchg
out
cmp
cmp
rolb
out
call
add
in
xchg
push
fistpll
leave
jns
fmull
hlt
ljmp
aaa
stc
jbe
scas
mov
pop
mov
adc
imul
xchg
addb
push
pop
das
jno
sbb
out
push
mov
dec
test
ja
pop
mov
push
cs
mov
add
xchg
sbbl
sahf
sbb
insb
repnz
in
xchg
add
cvtpi2ps
es
out
outsl
leave
or
add
inc
add
cmpsl
addr16
or
lock
cli
pop
mov
jo
sub
enter
push
inc
lock
xor
push
and
inc
add
ds
add
std
das
pop
mov
add
sbb
or
int
sub
into
cmpsl
mov
lret
test
cs
testb
daa
mov
pop
push
mov
rcrb
dec
inc
add
xchg
imul
and
pop
andl
cli
dec
testb
outsw
lcall
mov
jl
cmpsb
lds
add
pop
inc
ljmp
xchg
push
sub
bound
outsl
and
add
lock
js
gs
cli
inc
addb
cmpsl
cwtl
xchg
rolb
mov
lds
pavgw
or
lock
xchg
xchg
inc
cltd
daa
mov
sarb
std
push
outsl
add
hlt
or
int
inc
jb
cmp
pop
repz
jbe
xor
jb
mov
xlat
into
cltd
addb
fildll
ret
sub
adcl
add
into
lret
nop
das
jge
dec
inc
add
andl
jns
sub
push
out
test
xlat
call
addb
pop
adc
xor
mov
adc
add
stos
sub
xor
add
xchg
lcall
dec
sti
pop
mov
jnp
dec
in
adc
jns
push
sub
in
ret
je
add
or
push
or
hlt
mov
bound
sbb
cwtl
shrl
add
dec
lock
pop
roll
addb
lods
aad
addb
or
ret
dec
push
int
push
test
shll
cli
add
aad
sbb
mov
xlat
mov
leave
mov
pop
fidivs
pop
lret
fwait
push
cmp
nop
sub
cmp
cmpsl
scas
inc
push
add
dec
lcall
jno
xchg
enter
dec
mov
in
lret
jnp
jge
test
arpl
adc
repnz
add
sub
cmp
cwtl
xchg
shr
adc
push
or
cmp
add
cmp
dec
test
cli
out
push
push
pop
inc
add
add
lcall
in
lcall
add
test
mov
ljmp
add
fsubrl
add
push
or
pop
fs
and
nop
shrb
jno
add
scas
push
push
ljmp
cmp
fucomp
mov
std
pop
add
sbb
jg
cmp
stos
cmp
lds
add
xchg
mov
mov
add
out
mov
scas
outsl
shlb
int3
pusha
add
push
mov
xlat
scas
inc
add
add
icebp
jge
mov
dec
cmc
hlt
outsl
loopne
mov
cmpsb
enter
pop
sbb
add
dec
mov
pop
mov
or
jae
cli
fdivl
shlb
mov
fs
idiv
out
stos
mov
ja
lret
loop
mov
dec
out
sbb
mov
cltd
or
mov
bound
sub
imul
sub
fsubl
add
rcrb
mov
test
sti
les
add
bound
push
sbb
scas
popf
cli
jns
daa
dec
mov
xchg
xchg
aad
dec
xchg
es
fdivr
pop
adc
fwait
jno
in
or
sub
inc
add
in
movsl
mov
in
mov
jp
push
lods
push
stos
push
push
jb
pop
push
mov
lds
adc
test
mov
mov
mov
add
push
pop
sahf
or
ret
stc
push
out
sbb
int3
xchg
movsl
aas
xchg
test
inc
add
adc
inc
add
pusha
add
stc
or
stos
imul
add
pop
lret
sub
jle
lret
mov
shl
adc
cmp
dec
bound
xchg
test
jp
add
mov
add
enter
sub
cltd
cmp
or
push
enter
test
sti
mov
cmp
call
test
hlt
aaa
cmpsb
sbb
scas
push
in
add
ret
push
add
jmp
inc
add
jge
push
insl
xlat
stos
ffreep
add
mov
dec
cs
loope
mov
adc
pop
xor
jnp
cmp
mov
fwait
std
or
add
add
jno
test
jbe
hlt
xchg
sti
adc
xlat
hlt
cs
jge
mov
inc
adc
cmpsb
int
fistps
rorl
add
inc
xor
add
add
loopne
dec
cli
jmp
xchg
jo
push
rcll
out
popf
push
test
fisubrs
add
adc
jne
hlt
or
hlt
gs
adc
loop
cmp
in
and
sbb
into
inc
outsl
sbb
lret
adc
and
push
repnz
inc
add
mov
fwait
xorl
dec
pop
jg
dec
adc
and
sub
add
push
add
add
pop
inc
add
sub
orl
xchg
add
xchg
nop
mov
les
push
jg
pushf
pop
push
into
pop
fistl
loop
in
add
add
addb
pop
push
pop
cmpl
inc
add
in
push
mov
aas
cmp
paddw
mov
inc
add
xlat
push
nop
mov
jg
add
hlt
fucomp
mov
sti
cmp
push
test
mov
pushf
pop
test
jno
add
outsb
int
shrb
repnz
stc
cmpsb
iret
add
mov
add
aam
js
pop
fldcw
push
add
mov
repz
pop
cmp
ds
push
and
mov
movsl
nop
mov
jge
push
jle
jp
jne
adc
cmc
mov
movsl
xchg
mov
cmp
or
xchg
mov
add
adc
xor
aas
push
ret
loopne
or
test
jg
test
call
movb
popa
xchg
lret
add
shlb
mov
mov
cli
rcrl
test
jo
test
mov
mov
jns
add
clc
cmp
into
rcll
add
jge
add
pusha
add
lods
pop
in
mov
push
jbe
repz
mov
fmuls
into
mov
test
mov
stos
jae
es
lret
dec
int
jmp
cmp
imul
or
add
cli
out
sub
and
jle
lock
je
xchg
jo
inc
add
hlt
dec
daa
sarl
daa
cmp
and
mov
sahf
sub
leave
mov
test
in
pop
xlat
movb
shrl
adc
add
out
xchg
cmpsb
jp
push
xchg
mov
es
mov
cmc
jmp
xchg
add
push
ret
cmp
xor
push
mov
ja
sbb
sub
popa
cmp
push
lods
call
sub
dec
mov
std
cmpsl
cli
push
pusha
add
lret
lret
lods
enter
faddl
cld
mov
test
add
and
mov
adc
ja
in
push
add
xchg
repnz
mov
jmp
inc
add
das
mov
sarl
pop
js
fbstp
jno
cmp
aad
iret
fcompl
in
sub
popa
lret
add
js
lret
inc
add
mov
and
mulb
sbb
insb
mov
add
xor
imul
push
pushf
in
inc
add
cmpsb
jecxz
and
jae
imul
dec
scas
pusha
add
cmpsb
push
test
inc
in
sub
add
aaa
cmp
or
movsl
adc
lds
mov
push
mov
je
bound
call
lods
sub
jae
shl
jbe
stos
shl
push
pop
lods
xor
pop
push
sub
sbb
call
gs
sti
addb
sub
lock
jg
inc
add
mov
push
movsb
add
test
popaw
cmpsl
scas
sub
pop
iret
mov
mov
jne
sahf
pop
mov
cmpsb
scas
fwait
ss
push
ror
jge
pop
out
in
cmp
mov
mov
fsubrl
das
ret
ret
push
inc
xchg
es
mull
add
xchg
mov
rorb
aam
push
add
mov
add
push
sub
stos
adc
add
mov
sarl
xchg
lods
fsubrl
pop
out
jbe
add
push
cld
jge
addb
mov
add
rclb
jge
pop
jnp
ret
and
nop
jne
ja
addb
lods
mov
push
adc
adc
ret
pusha
add
pop
push
ja
add
xchg
fcoms
std
push
adc
movhlps
add
pop
push
sub
add
stc
mov
jge
xchg
das
test
hlt
addb
lcall
jae
xchg
pop
ret
add
in
je
add
nop
hlt
rclb
cmp
jne
cmpl
jb
cmc
mov
pop
pushf
ret
jp
std
mov
stos
pop
pop
movsl
jle
mov
push
adc
aaa
pop
xlat
mov
es
pop
fldt
xchg
jmp
orl
mov
xor
adc
das
mov
add
out
or
gs
repz
test
popa
xor
hlt
in
mov
int3
ret
dec
scas
add
loop
mov
cmc
jne
int
pop
inc
cmp
mov
lret
stc
and
jne
cmpsl
addb
pop
loopne
jae
cmc
inc
add
pop
dec
cs
and
xchg
lahf
adc
inc
add
push
mov
test
add
shr
mov
popa
jle
rolb
popa
pop
jmp
into
jnp
add
clc
test
fwait
je
dec
pop
jg
xchg
mov
push
addr16
call
sub
add
mov
sbb
sbb
add
jecxz
jbe
adc
jne
dec
std
mov
add
jne
repnz
xor
lods
xchg
notb
mov
add
mov
divl
mov
or
mov
les
cmp
imul
mov
add
int3
and
sub
arpl
repnz
ss
add
add
mov
in
sub
mov
cmp
add
das
adc
aam
loopne
cltd
push
add
inc
add
int3
jmp
add
mov
xor
scas
jmp
test
out
cmc
xor
pop
out
xchg
lret
pop
loopne
push
or
fwait
mov
mov
push
mov
push
pop
clc
inc
add
pop
ret
cmpsl
es
push
aaa
adc
xchg
int3
ljmp
pusha
add
call
sub
movb
fcmovb
sar
ljmp
insb
dec
jmp
add
loopne
adc
dec
roll
lods
loopne
or
hlt
push
sbb
add
les
mov
push
mov
cs
add
int
inc
add
add
fidivrs
cmpsl
dec
sar
je
add
testl
mov
add
jns
daa
cs
add
mov
pop
movsb
imul
mov
add
mov
jns
shll
and
push
add
hlt
int
inc
add
mov
aas
xor
pushf
xor
jno
addb
xor
pushf
out
jecxz
aam
xchg
das
mov
add
xchg
sahf
xchg
xchg
je
push
adc
cmp
push
sbb
ffree
add
cmp
add
std
pop
pop
daa
or
xor
adcl
daa
mov
lods
jnp
adc
imul
jno
popa
in
push
dec
sbb
or
jo
outsl
mov
push
movl
fisubs
fldenv
ds
mov
test
mov
pusha
add
shlb
cld
lods
push
sbb
pop
pop
pop
mov
cmp
bound
mov
push
adc
pavgw
xchg
in
push
push
loope
aam
clc
stos
and
js
mov
pop
in
inc
add
repz
test
aam
rorl
daa
fistpl
popf
xchg
cmp
data16
push
fcmovnbe
mov
fdivrs
or
sub
ljmp
cli
movsl
icebp
inc
lret
sub
push
inc
out
in
popf
insb
mov
push
add
fs
aad
stos
aaa
xchg
lock
mov
mov
inc
add
es
enter
push
test
leave
testl
pusha
add
bound
stc
sti
out
add
pop
add
int3
dec
out
jnp
cmpl
jnp
leave
les
gs
sbb
ja
sub
mov
mov
pushf
jle
add
mov
mov
add
push
ja
out
cmp
inc
jp
push
lods
lock
movsl
leave
push
add
pop
push
push
mov
cmp
pop
test
data16
leave
and
mov
add
les
repz
cld
cmpsb
movsb
pushf
xchg
ljmp
sub
adc
mov
das
jbe
adc
add
add
xor
movb
movb
out
lret
pop
xchg
les
popa
xlat
cmpl
cmp
add
lea
push
repz
sub
lock
test
jecxz
sub
es
fisubl
or
xor
sahf
sub
cmpsb
shlb
sbb
je
es
fcmovnb
ja
add
add
mov
mov
cwtl
cs
std
lahf
dec
mov
mov
mov
sbb
or
nop
pop
dec
xchg
inc
inc
add
lods
xchg
push
jae
pop
sub
add
pushf
addb
iret
and
cmpsl
xor
fisubs
mov
or
addb
xchg
shll
pop
cmpsl
mov
fwait
xor
outsl
adc
add
push
and
jb
xchg
sbb
add
xchg
sbbl
mov
ret
push
dec
cmpsl
out
lock
test
mov
sbb
insl
jmp
fs
sub
sub
sub
aaa
loop
stos
imul
inc
add
cltd
cmc
aad
in
insl
lds
fisttpl
mov
add
insl
xchg
sti
or
test
in
fdivr
lret
push
pusha
add
mov
xchg
in
jl
fidivrl
adc
loopne
inc
xchg
les
ds
inc
add
pop
inc
add
mov
jbe
and
mov
sub
or
xchg
jo
incl
inc
add
cmp
add
arpl
add
sbb
xchg
fnstsw
psubusb
dec
mov
adc
addr16
pop
xchg
loop
push
xchg
lret
add
das
jbe
out
mov
sbb
ljmp
loop
in
jns
mov
inc
add
jno
xor
movsl
stc
jp
imul
add
stos
lods
les
stc
dec
aaa
ret
add
sbb
rorl
add
repnz
mov
mov
icebp
addb
add
add
add
ret
xor
cwtl
pop
fisubrl
addb
ds
rolb
xchg
or
ret
mov
insb
insb
mov
pop
mov
dec
cmp
ret
add
icebp
cmpsl
dec
mov
inc
xor
rolb
sbb
or
xchg
cs
test
dec
adc
xchg
xor
test
rolb
jmp
test
pop
mov
and
scas
int
loop
mov
and
ljmp
mov
popf
lock
ljmp
cli
push
sbbl
lds
mov
mov
sarl
jge
cs
insl
lods
inc
add
pop
mov
push
popf
lds
push
mov
xchg
lea
push
or
loopne
mov
mov
pop
idivb
adc
xchg
and
push
lods
pop
jns
inc
add
xchg
jnp
xor
mov
pop
lcall
push
mov
sub
outsl
sbb
dec
outsl
fs
jo
dec
arpl
addr16
xor
es
jne
lds
ljmp
out
push
xchg
icebp
and
jg
sub
xchg
mov
lcall
dec
sub
sub
test
pop
cmp
add
pop
sbb
fcompl
dec
mov
pop
dec
int3
mov
lret
iret
mov
imul
push
mul
jbe
filds
xor
pop
lods
rcrb
fdivrl
mov
es
or
fstps
mov
add
test
xor
outsl
test
aas
or
test
icebp
test
popa
or
fcomps
xor
cmp
pop
mov
testl
push
test
jp
xchg
lret
fwait
sbb
jb
roll
add
sub
xchg
lcall
add
ds
mov
enter
mov
loopne
sub
cmp
mov
jmp
scas
jle
jecxz
test
aas
inc
add
bound
lret
insb
dec
mov
in
jno
aaa
adc
repnz
lods
add
repnz
imul
sahf
mov
push
xchg
ljmp
ja
or
mov
sub
ljmp
jb
cmpsb
je
xor
adc
xor
enter
jle
add
lahf
test
sbb
push
push
add
mov
jecxz
test
push
dec
insl
adc
aas
push
mov
scas
mov
mov
call
ja
daa
and
pop
push
add
cmp
xor
push
add
inc
add
imul
xchg
sub
lret
test
aas
push
addb
adc
add
sub
je
mov
and
lock
popf
mov
fisttpll
bound
movb
hlt
jb
imul
sbb
mov
sub
xor
cli
pushf
cmp
fbld
add
rolb
jns
dec
mov
inc
add
lea
and
in
mov
push
add
shll
popa
and
ret
les
ja
dec
inc
andl
stos
jno
stc
or
bound
sti
jno
push
insl
push
dec
fisttpl
into
loopne
pop
test
in
imul
inc
lahf
cmp
inc
add
add
scas
add
xchg
jmp
inc
add
dec
jmp
dec
ljmp
shll
jno
inc
add
in
push
add
js
std
sub
sti
fcompl
xor
jp
jg
cs
add
add
xchg
mov
add
mov
add
cmc
jb
cltd
outsl
pusha
add
xchg
repz
jbe,pn
lods
mov
and
and
mov
add
pushf
leave
aaa
ret
add
xchg
adc
add
push
repz
out
or
in
dec
pop
xchg
fcompl
pop
jecxz
into
sub
js
out
mov
push
add
push
test
hlt
adc
sarb
sti
sub
sbb
pop
enter
jle
in
cmc
add
dec
or
jae
inc
pop
outsb
pop
mov
pop
xor
das
test
fbld
cs
jle
jmp
xchg
popf
add
xor
jle
inc
testl
scas
cwtl
les
cwtl
sub
stc
xlat
nop
push
and
shll
xchg
mov
jmp
mov
xchg
jp
hlt
jbe
cli
aaa
data16
enter
es
loopne
scas
aam
inc
or
adc
mov
aam
jg
mov
orl
mov
lcall
mov
or
or
rolb
mov
popf
scas
sub
sarb
push
mov
mov
pop
pop
xchg
ficompl
stc
stos
pop
repnz
sbb
xor
mov
inc
cmp
adc
or
ds
pop
mov
jp
movb
push
xrelease
sub
lea
popa
add
mov
cmp
out
es
in
ja
ret
pop
inc
lret
inc
xchg
dec
or
xchg
stos
in
loopne
and
xchg
pop
sub
mov
dec
sbb
ret
or
adc
aam
mov
xchg
add
mov
cmp
mov
pop
mov
negl
sub
aaa
or
movsl
pop
lods
mov
add
stos
leave
sub
insl
aam
inc
jp
icebp
fisubl
push
jbe
lea
shlb
push
js
loopne
dec
sub
push
push
inc
add
mov
cmp
dec
mov
sub
cli
adc
out
imul
sahf
and
cmc
xor
and
push
mov
or
dec
pop
addb
cltd
outsl
std
movsb
addr16
push
repz
mov
dec
popf
outsl
push
mov
mov
sahf
ljmp
mov
fnstenv
mov
add
lret
cmpsb
push
ss
add
repz
out
fidivs
sti
or
mov
fiaddl
int
dec
cld
iret
jns
setbe
cmpsl
jae
push
aaa
dec
int3
add
and
addb
xchg
add
sbb
adc
es
popa
enter
das
push
add
add
cmp
add
and
xor
xor
outsb
stc
nop
icebp
je
popf
sub
gs
inc
or
les
adc
sub
mov
cmpsl
iret
rcrl
pop
xor
add
in
sub
ljmp
sub
daa
repnz
cmpsl
rolb
outsl
pop
aaa
xchg
ret
adc
and
cli
dec
psubd
pop
call
shr
sub
mov
cmpsb
rorl
pop
bound
js
dec
inc
add
add
cmp
cmp
cli
or
mov
andl
add
push
aad
add
xchg
ja
or
mov
jmp
les
dec
push
bound
das
and
dec
out
xorl
cmp
cmpsl
sbb
adc
aaa
sbb
sub
lods
adc
xor
mov
dec
fmulp
sbb
mov
fs
sbb
stos
jnp
push
jb
or
dec
mov
dec
rolb
rep
pop
xor
mov
cmc
shll
dec
and
add
xor
mov
arpl
cs
mov
ret
and
lret
inc
add
sbb
jmp
mov
ret
dec
mov
int3
in
mov
pmullw
xor
dec
addps
pop
sbb
jb
mov
ja
jb
fs
sub
fs
inc
or
cli
dec
sbb
add
push
dec
push
sahf
stc
stos
jne
js
push
mov
pop
addl
cld
sub
add
jb
popa
and
jae
sub
add
dec
aas
pusha
add
pop
inc
and
cmc
jbe
add
shr
das
jg
add
mov
mov
sub
lea
xchg
dec
xor
addb
and
jle
fstpl
bound
orl
add
push
fdivrp
dec
sub
enter
mov
or
xor
out
push
jb
push
lahf
mov
xor
hlt
adc
clc
ret
inc
push
dec
sub
movb
pop
push
enter
mov
add
inc
add
loopne
in
imul
bound
and
xor
add
pusha
add
cmc
mov
or
stos
mov
aam
mov
push
hlt
and
mov
movsl
cmc
loop
mov
ljmp
pop
adc
iret
push
inc
ret
fldl
rol
pushf
jmp
in
adc
add
fisttpll
sarl
mov
mov
int
mov
jne
fbld
push
mov
xchg
and
or
in
std
popf
scas
rol
sbb
cmpsl
mov
lea
add
xchg
iret
mov
and
pop
enter
jl
call
or
std
test
nop
fyl2x
push
xchg
jo
dec
jge
jge
lock
cmp
mov
inc
repnz
add
push
lods
pop
call
fs
iret
dec
pop
mov
push
push
stc
push
add
cmp
les
sbbl
and
bound
flds
aas
xor
xchg
dec
sub
add
lret
inc
add
repz
mov
mov
pop
lods
imul
test
mov
stc
dec
test
cwtl
dec
pop
mov
repz
xlat
addb
pop
adc
xor
xchg
mov
fcompl
jmp
ljmp
test
xor
icebp
ss
push
fnstsw
pop
fsts
push
addb
aam
dec
and
movsb
aam
fdivs
ss
add
mov
sub
and
pop
call
aad
adc
dec
adc
sbb
or
into
ror
mov
ficoms
lret
and
jecxz
adc
add
leave
lock
dec
movsl
filds
iret
sub
xor
add
pusha
add
or
cltd
inc
add
jp
nop
jle
nop
or
fsts
in
pop
loopne
bound
push
xchg
aas
xchg
popf
ja
addb
mov
push
roll
add
sub
mov
hlt
inc
in
fwait
push
sub
cs
test
test
add
add
jo,pn
and
add
cltd
cmp
xchg
or
and
pop
lret
testb
sbb
das
out
push
cwtl
sbb
sti
ja
adc
lret
rolb
mov
stos
mov
add
loop
add
not
fld1
movsl
lods
mov
loopne
mov
sbb
addb
cs
and
dec
adc
cwtl
loop
add
in
daa
test
sbb
test
dec
mov
add
add
mov
test
dec
pop
push
xlat
adc
xchg
movsl
push
cwtl
frstor
cltd
mov
cmpsb
inc
add
dec
dec
mov
xchg
add
mov
int
mov
cmp
cs
cmp
movb
jb
cmp
or
inc
add
push
scas
or
ss
dec
push
das
adc
fdivrp
std
mov
mov
lcall
stos
popf
mov
movsb
ret
add
sahf
je
cwtl
movb
pushf
mov
popf
jl
cld
hlt
test
cwtl
repnz
les
addr16
insl
arpl
sbb
jo
sbb
add
xor
sarl
inc
add
pop
test
push
push
dec
inc
rcll
aas
lahf
shll
mov
mov
notl
jbe
out
rolb
add
xchg
adc
ss
adc
adc
cmp
sahf
xchg
scas
les
iret
or
mov
sub
jne
xor
fidivrs
lret
push
rolb
retw
push
rolb
int
push
movb
enter
ret
xchg
push
xor
jp
clc
xor
shlb
add
inc
gs
mov
negb
pop
dec
sbb
cmpsb
xchg
jp
jmp
lcall
popl
add
pop
arpl
popa
jecxz
xor
add
or
cltd
test
fsub
insl
dec
add
or
cmp
add
iret
mov
in
pop
dec
pop
pop
inc
add
stos
or
fwait
sahf
insl
mov
push
add
sbb
lods
sarb
shl
push
mov
outsb
rcrb
mov
mov
xor
repnz
xchg
push
and
jmp
stc
sub
sbb
loop
or
cli
test
cltd
repnz
es
cmp
lea
popf
push
mov
jg
mov
sbb
add
and
and
icebp
scas
pop
push
cltd
mov
ja
push
das
jae
xchg
mov
jae
dec
xchg
clc
pop
jb
clc
int3
lret
addb
outsb
xrelease
add
jmp
inc
xchg
cmp
pop
in
test
inc
add
push
fwait
in
mov
les
lret
add
fwait
sbb
pusha
add
add
cmp
mov
pop
test
scas
cmp
bound
xchg
push
test
addb
cmp
jnp
and
add
dec
adc
dec
xchg
push
jns
adc
rsqrtps
xor
dec
or
lock
outsl
fwait
mov
scas
mov
add
inc
add
out
adc
add
and
sbb
and
stos
mov
test
push
jns
cwtl
test
js
imul
mov
fsubrl
jo
add
pop
mov
iret
push
xlat
mov
inc
add
pusha
add
jmp
fildl
mov
add
and
mov
adc
jae
sub
jp
xor
ljmp
push
xor
or
loope
aad
add
gs
cltd
out
repnz
orl
addb
and
lods
and
lea
add
adc
loopne
push
pop
mov
mov
and
pop
iret
add
sbb
bound
pop
push
mov
fsubrp
lods
sbb
lret
cs
xlat
in
dec
or
insl
pop
std
inc
test
pop
sar
cmpsb
lods
sarl
add
push
mov
std
mov
mov
push
push
or
push
cmp
jecxz
push
push
and
add
scas
leave
std
ret
loopne
push
lahf
inc
add
addb
mov
jge
add
add
add
aam
popf
imul
and
add
mov
shlb
test
shr
insb
push
scas
lods
stc
rcll
xor
sub
leave
xor
addb
ret
push
addb
popf
jecxz
ljmp
movsl
insl
push
jge
adc
aam
xorl
add
mov
or
mov
cld
and
dec
repz
and
popa
data16
xor
outsl
int
movb
sub
das
scas
xchg
dec
fnstsw
adc
add
push
jb
add
xor
mov
mov
in
cltd
test
fdiv
dec
and
rcll
jnp
movb
lret
push
jp
adc
fsubs
xor
ljmp
push
popf
jmp
pop
stos
insb
rolb
faddl
add
jle
add
add
mov
inc
lock
addb
out
mov
inc
mov
mov
jl
repz
mov
in
gs
fimuls
movsb
dec
inc
jge
in
mov
xchg
bound
in
add
mov
sub
jno
aas
fxch
enter
dec
mov
add
adc
sbb
add
xchg
xor
imul
jae
aaa
inc
xchg
fiaddl
or
jno
je
dec
sbb
xchg
lcall
sub
add
sbb
lock
xor
pop
loopne
in
jb
lahf
data16
lods
insb
out
xchg
hlt
dec
repnz
mov
xchg
hlt
sub
loopne
mov
pusha
add
jmp
jo
xchg
jle
dec
lods
add
mov
vpaddsb
sar
jns
pop
jl
fucompp
pop
push
xchg
mov
movsb
mov
push
dec
addr16
stos
arpl
add
pop
mov
or
xchg
adc
addb
add
hlt
dec
std
jbe
test
cmpsb
cwtl
leave
je
addb
or
cmc
out
hlt
cld
js
addr16
lret
dec
sbb
in
mov
mov
mov
cmp
adc
xchg
mov
add
add
sbb
add
mov
in
push
jp
dec
push
inc
add
add
and
hlt
sbb
stos
inc
add
incl
add
dec
mov
jecxz
sbb
das
mov
movsl
or
daa
inc
add
add
xor
pop
out
sbb
sub
in
pop
dec
or
addr16
inc
scas
int3
in
rolb
and
loopne
dec
adc
add
pop
mov
fisubrs
mov
mov
add
fbld
or
stc
jmp
push
ret
pop
imul
pushf
lea
icebp
mov
push
aas
mov
jae
and
ja
ds
dec
inc
add
repnz
inc
xchg
popl
and
jne
xchg
xchg
and
mov
add
mov
adc
push
add
sarl
push
insl
sbb
add
lea
loopne
push
lock
mov
add
shll
jbe
mov
outsb
push
or
and
xchg
xor
cmpl
dec
dec
and
fsubs
cli
inc
sub
lcall
lods
adc
test
aas
into
shlb
lea
test
or
mov
inc
test
lea
popf
movsb
mov
movb
push
pop
or
add
stos
jmp
mov
adc
pushw
stc
lods
inc
lret
mov
add
pop
sub
cld
ret
and
clc
adc
movsb
shrl
outsw
cmp
add
lods
push
xchg
adc
cmpsl
test
add
or
rcrl
fldt
add
push
js
pop
daa
push
in
std
mov
add
test
add
icebp
cli
daa
lahf
or
sbb
dec
aas
test
inc
add
movb
pop
push
aad
sub
xchg
sahf
in
out
ja
rolb
push
cmp
push
or
jo
popf
fsubr
pop
or
or
push
sub
loope
mov
xor
inc
test
xchg
movsb
orl
pop
pusha
add
add
cld
fcoml
repnz
xor
fistps
and
cwtl
fdivl
add
add
add
sub
add
mov
ret
add
mov
pop
rcl
les
pusha
add
adc
adc
testl
ljmp
ficompl
or
push
call
incb
rolb
popf
popf
jno
fldt
cmp
lea
add
dec
pushf
loopne
push
mov
out
dec
popf
out
repz
hlt
popa
sub
cmc
lds
add
movsb
or
scas
loope
xor
andl
jb
push
int
lods
inc
pop
movsb
rolb
dec
loopne
add
sbb
arpl
out
jmp
sti
lahf
push
mov
xchg
cmpsb
ret
in
mov
pop
pop
insb
lcall
les
mov
out
rcll
addb
push
sub
cmpsb
adc
sbb
mov
mov
pop
mov
mov
fs
jp
dec
sub
call
add
popa
aaa
fs
mov
dec
aas
out
mov
and
test
cmpsb
shr
pop
icebp
add
pop
test
inc
add
mov
mov
push
sbb
push
push
fimuls
ljmp
xor
lret
adc
setp
cwtl
fwait
insb
scas
adc
jne
in
cmp
leave
lahf
dec
scas
dec
xchg
add
sub
rolb
popa
in
inc
push
xchg
xor
mov
insl
iret
mov
and
int3
cmp
fldl
add
mov
xor
adc
or
shrl
sub
and
add
add
xor
add
jo
jb
jnp
addb
repz
or
jl
push
notl
pop
fdivs
sbb
or
and
mov
jmp
in
push
imul
push
cmpsb
xor
dec
jg
sti
mov
inc
cmpsl
add
push
fwait
push
mov
add
lcall
xchg
mov
arpl
in
int
iret
mov
les
sub
add
add
test
outsl
inc
add
lret
imul
add
mov
add
dec
test
mov
xchg
push
xor
mov
push
ljmp
adc
popf
pop
lea
addb
gs
add
push
xor
mov
pop
in
popf
cld
lahf
push
pop
decl
dec
jo
sbb
pop
dec
mov
mov
aas
out
ss
mov
mov
enter
add
push
aad
push
sub
ds
mov
insl
xchg
sbb
rolb
push
or
out
and
push
jle
ror
mov
dec
xchg
out
arpl
add
add
mov
mov
fcomps
adc
add
xorl
sbb
cltd
int
fcompl
fldenv
addb
add
pusha
add
push
or
add
and
jo
add
loop
push
rorl
pop
dec
push
ljmp
push
add
or
andl
mull
and
fcmovu
sbbl
push
dec
subl
fiaddl
dec
fsub
fldt
push
add
orl
loope
addr16
mov
adc
mov
bound
pop
mov
push
sub
rorl
adc
mov
add
das
add
enter
bound
pushf
add
sbb
pushf
mov
bound
mov
or
fnstsw
hlt
aam
repz
fs
xor
movsl
xchg
cmp
add
push
cmp
lods
les
sbb
sti
sbb
idivl
loopne
aam
shll
sbb
and
cmc
mov
addb
xor
xchg
inc
add
add
xlat
fbld
loope
fildll
js
add
addb
bound
into
imul
add
cmp
out
movb
test
mov
jb
pop
sbb
insl
adc
sbb
sbb
sub
rolb
mov
jne
jne
adc
in
cli
fcmovb
xchg
aam
add
xchg
mov
rolb
movsl
sahf
lods
dec
pop
push
or
movsb
dec
jae
mov
mov
pop
stc
lea
sub
and
fs
inc
add
and
scas
addr16
inc
add
add
call
add
push
pop
xor
push
pop
pop
loope
popf
test
mov
loope
sbb
addb
movsl
sbb
and
icebp
push
jbe
pushf
sbb
and
add
add
inc
loopne
test
xchg
xor
sbb
shrb
add
adc
dec
xchg
sub
ret
jae
add
add
out
sbb
jl
xchg
je
test
add
add
movsb
add
push
add
jge
lock
cli
mov
mov
jns
rolb
or
xchg
dec
xlat
sbb
rclb
fcmovbe
test
sub
rcrl
pop
cltd
sbb
adc
push
notl
lods
and
push
add
movsb
repnz
add
aam
rorl
repnz
movsl
cmp
fldenv
or
lret
push
sbb
cmpsl
js
inc
iret
nop
inc
lahf
mov
shl
scas
and
add
and
mov
pop
js
sbb
into
inc
add
sbb
dec
xchg
sub
rol
add
mov
addb
pop
or
fsub
jbe
pop
jae
mov
iret
inc
add
xchg
push
adc
insl
adc
jbe,pt
pop
add
push
mov
lret
fucom
in
jno
mov
cmc
je
sub
stos
dec
cmpsb
clc
les
int3
icebp
push
adcl
psadbw
testl
mov
fildll
lcall
mov
or
dec
mov
fdiv
jne
pushf
xchg
int
dec
xchg
imul
add
movb
gs
bound
ds
push
mov
shrl
out
fidivrs
sub
out
pop
enter
push
push
lods
mov
in
push
sbb
mov
add
add
push
fildl
cmp
stc
les
mov
cs
arpl
notl
sbb
sti
ret
xchg
push
adc
fmull
xor
adc
mov
insl
mov
shll
xlat
add
xor
add
dec
and
addb
mov
test
mov
add
mov
mov
icebp
popf
inc
out
adc
ds
push
stc
jno
mov
insb
mov
mov
pop
xchg
test
sbbl
mov
insl
icebp
test
nop
dec
mov
std
adc
out
sahf
push
cmp
imul
jg
clc
mov
lcall
add
xchg
shll
sub
add
loope
adc
push
or
js
cmpsb
push
add
lods
arpl
add
push
outsb
pop
inc
jge
pop
sarl
out
mov
sbb
sub
dec
out
data16
add
add
push
mov
add
shll
rorl
mov
movb
inc
cmpsb
xor
std
aam
cmpsb
popa
sbb
stos
test
push
aaa
mov
insl
aam
add
scas
ss
bound
mov
cwtl
sub
adc
jae
xor
stc
push
fyl2xp1
or
int3
orl
lahf
or
xchg
popa
push
pop
cltd
insl
int
jge
inc
add
sahf
and
pop
add
cmpsb
pop
leave
hlt
out
xchg
iret
jbe
jge
lds
into
mov
iret
test
sbb
lea
shlb
loopne
jle
loopne
dec
dec
clc
lea
mov
dec
loopne
mov
push
jb
cmpsb
push
shll
popa
movb
es
repz
out
inc
mov
and
mov
addb
sti
test
lds
add
push
mov
push
jne
fisttpl
add
adc
out
sub
movl
stos
mov
pop
lods
loopne
lods
dec
stos
sbb
in
adc
mov
add
int
push
dec
jg
stos
scas
addb
pop
xchg
jno
xor
aas
in
cmpsl
and
push
mov
loopne
cs
inc
add
popf
push
cmpl
xchg
mov
in
adc
addb
std
aam
add
test
js
cs
and
add
push
ja
add
push
cltd
stos
or
cmp
mov
pushf
sti
rorl
pop
stc
lahf
jae
movsl
pop
daa
dec
sbb
mov
jnp
add
mov
cltd
xchg
int3
add
mov
push
mov
add
mov
push
call
mov
add
cmpsb
xchg
cmp
pop
and
sub
push
pushf
ret
jno
scas
mov
cmpsb
or
popa
loop
xchg
cmpsl
addb
mov
add
fldl2e
push
push
pop
add
lahf
aad
jne
jbe
stos
or
xor
les
push
addb
or
in
in
sahf
xor
mov
and
int3
es
and
add
es
scas
into
cs
push
aas
dec
add
add
dec
data16
scas
dec
or
pop
xchg
pop
lock
sti
aas
addl
out
push
and
and
cltd
cmp
add
xchg
cli
add
stos
cmc
jno
cmp
sbb
aas
in
test
fs
inc
add
mov
push
mov
fisttps
xchg
adc
stos
inc
add
out
ficompl
mov
icebp
xchg
bound
or
inc
add
xor
xchg
outsl
aad
push
in
add
call
sti
iret
xchg
jne
jae
cmp
jmp
cmp
jno
push
adc
es
sbb
insl
imul
sbb
inc
add
xor
cmp
das
mov
lds
rolb
loop
mov
add
nop
add
test
lock
adc
cmc
and
ret
push
add
out
test
in
scas
jg
add
icebp
fcmovnbe
cwtl
arpl
xor
pusha
add
ljmp
add
mov
shl
aad
aaa
mov
loop
inc
imul
je
sub
fimull
mov
les
rolb
test
data16
add
and
popf
inc
nop
lods
rcr
sti
cmp
std
pop
cmp
cltd
pop
fwait
pusha
add
or
out
adcl
push
lret
mov
mov
sub
sti
cmp
adc
dec
jne
pushl
mov
sbb
push
mov
stos
or
ret
inc
add
lock
in
sbb
repz
jae
pop
mov
adc
pop
mov
in
movb
inc
add
rcl
dec
mov
mov
sbb
or
xlat
and
jecxz
or
pop
push
pop
xchg
out
pop
cli
sti
test
xchg
mov
scas
ss
add
mov
xchg
pop
adc
sti
xor
add
xchg
or
adc
add
adc
dec
ljmp
mov
adc
push
addb
cmp
add
out
inc
push
pop
mov
mov
mov
movsl
cmp
cld
jne
add
inc
out
fisttps
lahf
inc
add
dec
loope
adc
sbb
xorl
jmp
rclb
int
add
mov
xchg
cmp
data16
push
in
fcoml
lods
ret
jnp
add
jl
xchg
jmp
xlat
pop
push
pusha
add
rorl
mov
adc
loopne
cmpsl
mov
sbb
jae
dec
sahf
mov
add
sub
movsl
movl
sbb
pop
pop
inc
inc
ret
jae
push
jmp
sub
push
add
xchg
mov
xrelease
or
jb
xchg
pop
into
fsts
test
fcoms
out
adc
aad
and
push
outsl
pop
stc
repz
sbb
icebp
push
inc
mov
mov
popl
add
mov
lods
mov
add
bound
pop
negl
pushf
pop
and
dec
out
adc
add
add
pop
mov
jne
jns
jmp
xor
add
pop
addb
sub
cmp
xor
cmp
pop
fisubrs
dec
fists
mov
mov
and
add
jg
rolb
mov
lahf
lods
rcr
out
test
fucomp
sahf
je
jae
inc
mov
pop
fnstcw
lahf
fldl
and
mov
pop
jb
sbb
arpl
inc
add
stc
inc
movsb
sub
testl
mov
add
inc
xor
and
adc
xor
repnz
movb
mov
push
popa
lret
mov
cli
add
test
movb
pop
pop
pop
push
shr
dec
xchg
sbbl
mov
dec
sbb
and
inc
add
sub
insb
mov
xchg
push
sahf
ret
out
push
and
lock
dec
pop
or
or
test
mov
gs
jae
cmpsb
inc
add
loope
addb
add
or
add
testb
movsb
movsb
sahf
enter
mov
imul
add
int
cmp
sti
mov
popf
sti
mov
ss
into
aas
notb
out
lahf
xchg
or
and
into
cmpsl
arpl
iret
mov
add
add
add
xor
add
pop
or
idivl
cmpsl
ja
push
pushf
push
out
and
mov
rcrl
mov
movb
and
mov
popf
outsl
mov
inc
add
aas
ss
addb
incl
int
or
add
test
ds
pop
mov
inc
and
sahf
cmp
hlt
test
pop
inc
xchg
add
ss
add
jne
or
imul
add
sub
imul
mov
lcall
adc
mov
mov
jns
mulb
rolb
jecxz
stos
xchg
loopne
inc
cmp
jecxz
lods
push
cmpsb
dec
ret
outsb
loope
decl
add
jo
sbb
and
loopne
add
out
lods
or
add
mov
and
out
mov
lret
dec
loopne
add
or
aam
add
repz
inc
pop
cmp
mov
xorl
stc
mov
aaa
or
mov
in
aad
xor
add
push
jp
lret
mov
test
test
xchg
ficoms
out
push
mull
lret
xor
out
in
jmp
les
aad
mov
andl
enter
cli
jmp
rclb
mov
add
sbb
dec
push
add
xchg
addb
inc
add
jge
xchg
andl
jne
add
pushl
jne
or
aam
add
mov
add
add
ffree
add
jle
push
daa
call
shll
loope
fucomip
ficoml
js
sub
push
lods
xor
or
xchg
lcall
mov
add
movsb
pop
mull
or
mov
jae
jecxz
addr16
movb
js
dec
push
mov
lahf
out
orl
hlt
popa
cli
addb
jns
and
or
push
test
sti
cmp
faddp
xchg
out
xchg
in
mov
loopne
ljmp
adc
jp
sahf
dec
mov
adc
and
mov
jne
push
push
jecxz
dec
xor
sbb
cmp
mov
aam
mov
lret
xor
rcrl
lds
mov
sahf
pop
rolb
movsb
sbb
ret
stc
adc
add
dec
push
test
sbb
insl
mov
aas
pop
mov
dec
subl
imul
cmp
mov
aam
fs
mov
mov
add
jae
jmp
movb
sti
jge
pusha
add
fwait
push
fwait
xchg
jae
outsl
sub
and
xchg
out
popf
ljmp
push
insl
mov
aaa
sti
xchg
out
add
sarl
es
cmp
dec
add
add
movsb
sub
push
in
enter
add
mov
sbb
xor
or
push
add
add
imul
loop
hlt
icebp
cmp
enter
inc
add
dec
cmc
aad
hlt
jmp
or
ret
jb
add
mov
insl
mov
xor
and
pushf
xchg
leave
test
cmc
cli
rorl
jnp
cmc
add
pop
pop
mov
lods
in
dec
cli
jmp
push
add
mov
push
rolb
test
fisubs
call
rorb
inc
stos
mov
pushf
stc
and
cmp
test
ret
inc
add
rcrb
mov
add
into
mov
push
test
xor
push
pushf
cltd
fs
mov
rcll
inc
add
xor
push
outsb
ficompl
cmc
mov
test
es
push
add
dec
mov
fidivl
sbb
loope
mov
jl
sub
add
cmc
push
bound
mov
fdivrp
pop
cmp
mov
inc
inc
add
xadd
gs
adc
mov
add
add
add
mov
ds
pop
sahf
cltd
inc
fwait
cli
mov
sub
lods
add
rorb
or
adc
aaa
push
dec
jmp
xor
popa
ds
add
pop
rorl
std
mov
push
in
mov
pusha
add
add
call
scas
fidivrl
cmp
and
jae
dec
cltd
pop
cld
int
adc
add
test
add
and
das
insb
jmp
cmp
stos
ss
or
loope
sub
dec
adc
push
pop
jmp
xchg
xchg
aam
push
pop
or
add
add
fdivl
mov
sbb
jp
xchg
cmp
inc
add
insl
jmp
bound
fwait
push
and
sti
dec
add
pop
addb
fnstcw
aad
adc
add
sahf
int
es
shr
push
dec
arpl
sbb
popf
nop
dec
and
cmp
hlt
loopne
jb
inc
add
js
mov
loope
cltd
decb
int
cmc
mov
loop
mov
mov
add
add
pop
lock
add
sbb
jb
daa
mov
mov
add
pop
dec
cmp
fstps
and
sub
imul
bound
imul
mov
adc
or
ret
sub
aaa
testl
lods
movb
and
out
inc
add
jl
test
andl
nop
and
adc
or
mov
mov
jle
xchg
or
ret
je
enter
or
cs
pusha
add
jmp
push
push
adc
add
xor
mov
adc
mov
outsl
fildll
jmp
fildl
pop
jno
mov
add
mov
jmp
cld
mov
mov
add
add
push
add
lea
sub
push
mov
fildll
add
jne
mov
add
iret
sbb
add
mov
add
cltd
shlb
xor
push
shrb
xor
add
pusha
add
popf
gs
add
ljmp
cmp
push
cltd
jecxz
cmp
add
add
insb
inc
scas
js
or
std
repz
xor
into
int
mov
fistl
cmp
sub
insb
movsl
test
lcall
dec
fisubrl
addr16
enter
mov
test
mov
dec
lods
addb
inc
add
and
aas
push
cmc
xchg
jns
adc
inc
cli
push
or
add
sub
cwtl
movsl
orl
lahf
or
mov
mov
addb
add
adc
aaa
inc
lret
xchg
and
inc
add
jle
add
adc
mov
lcall
and
or
adcl
fwait
and
aam
in
add
and
and
push
lret
mov
repnz
xor
jns
daa
jns,pt
cmp
fwait
dec
xchg
cs
rolb
cmp
pop
gs
out
add
pop
int
in
test
add
jge
mov
and
dec
arpl
or
jge
mov
mov
xchg
ss
mov
jnp
mov
call
int3
addb
fidivrs
mov
add
add
shlb
ja
pextrw
pop
daa
or
mov
es
test
xchg
and
push
fidivrl
aaa
int3
repz
pop
jbe
cld
add
xor
push
outsl
jo
clc
test
in
ret
pop
dec
adc
jp
jle
push
lcall
lcall
sbb
pushf
shrl
xchg
enter
inc
add
jns
inc
inc
dec
dec
fists
push
data16
inc
add
xor
pusha
add
std
mov
popf
or
cmpsb
sbb
add
jmp
xchg
pop
ficoms
mov
jo
cltd
repz
ret
das
xor
sbb
out
mov
ja
aad
mov
add
mov
scas
jns
cmp
les
mov
cs
inc
add
testb
xchg
inc
out
mov
push
idivb
out
subl
add
out
daa
push
push
jge
add
add
sub
cltd
cli
and
repnz
repnz
dec
sbb
jmp
add
jne
inc
hlt
sbb
lahf
pop
xchg
mov
aaa
adcl
cmc
jmp
iret
fdivs
in
lret
pop
jnp
mov
jge
xor
jae
lea
int3
mov
addb
jnp
mov
daa
jb
sbb
xchg
loope
dec
mov
aas
les
sbb
test
rolb
lret
enter
ror
adc
add
jl
pop
cmpl
insb
cmp
or
jne
mov
add
stos
das
jbe
mov
cld
data16
lods
pop
push
stc
ss
adc
sbb
push
imul
and
mov
je
ficompl
icebp
addl
out
ljmp
sbb
pop
push
add
xor
mov
lcall
and
mov
out
into
movsl
fwait
jle
cmc
lods
xor
ss
loopne
std
jne
test
cmp
adc
faddl
dec
into
push
add
clc
xchg
cmp
inc
add
add
call
jmp
cmp
mov
insb
int
dec
pop
push
add
repz
mov
cmpsb
sub
inc
mov
pop
push
movsl
gs
loop
push
add
negl
add
out
inc
fwait
pop
dec
das
mov
shr
addr16
ja
mov
inc
fcoml
roll
pop
iret
push
test
sub
or
loope
xchg
ret
outsb
loope
adc
jbe
es
das
lea
lods
pusha
add
xchg
xlat
addr16
cmp
enter
scas
dec
out
push
sarl
sbb
test
mov
cmp
inc
flds
sbb
or
lods
addb
mov
jecxz
movb
ss
pushf
out
in
mov
push
inc
enter
dec
nop
notb
cli
je
cwtl
inc
add
call
repz
lcall
pop
xchg
mov
int
add
push
ss
scas
and
xor
jl
sbb
fs
xchg
stos
shlb
jns
lods
sub
jmp
sub
pop
icebp
hlt
inc
repnz
arpl
shll
cmp
aaa
push
cmp
fcmovb
imul
push
in
inc
mov
cmp
aaa
push
or
add
jb
push
les
xor
add
frstor
xchg
xor
push
pop
pop
rcr
cmp
insl
data16
mov
out
pusha
add
insb
sbb
dec
inc
test
lahf
jge
xchg
movb
pop
pop
roll
jno
add
dec
scas
sub
mov
mov
into
shlb
adc
rolb
mov
pop
cs
mov
mov
in
lret
bndldx
mov
dec
int
and
in
pop
adc
fwait
dec
xor
daa
xchg
push
cmp
nop
scas
push
icebp
cmp
loope
sub
inc
add
cmpsl
popa
inc
add
lea
add
pop
lret
push
pop
pusha
add
popf
jle
mov
add
hlt
faddp
add
jg
test
mov
push
jb
push
pusha
add
mov
je
aam
shll
lods
imul
out
repnz
hlt
sbb
or
jno
jne
int3
addl
jo
jecxz
add
movsl
jns
loope
rolb
jb
add
xchg
ret
jp
add
jl
scas
jbe
scas
mov
mov
add
mov
ds
sub
and
addb
jne
shl
pop
and
bound
test
ficomps
add
movl
adc
add
stc
push
cltd
push
add
or
jo
mov
or
or
add
pop
nop
lock
push
stc
lods
mov
add
cmp
sarb
orl
adc
mov
jp
cmp
inc
add
push
cmp
jle
daa
mov
pop
cmpsb
jp
lahf
inc
add
xchg
jno
mov
inc
add
inc
jae
fld
add
pushf
insl
imul
scas
and
mov
pop
and
mov
mov
loop
add
and
mov
ds
ja
push
call
aam
in
adc
pop
arpl
iret
push
cmp
lcall
push
xchg
add
add
inc
and
in
enter
mov
xlat
jae
xchg
std
test
repz
bswap
movb
out
lea
aaa
bound
and
add
int3
mov
sub
xchg
push
hlt
mov
add
pusha
add
aaa
and
pop
mov
cmp
and
jb
sbb
and
pop
add
xchg
sarb
and
loop
sarl
add
inc
adc
pop
add
arpl
add
inc
dec
imul
fimull
aas
in
cmp
aas
cmp
mov
or
pop
xor
outsb
mov
jge
xchg
xor
xchg
jbe
movsb
and
repnz
add
and
dec
and
add
add
mov
or
cmpsl
outsl
rolb
sbb
mov
mov
push
add
fdivrl
out
pushf
dec
lods
jbe
les
sub
fld
add
orl
das
ja
sahf
leave
mov
and
imul
lret
pop
out
lods
fimull
mov
add
or
adc
ja
add
xor
fidivrl
xchg
xchg
xchg
push
dec
inc
aas
pop
or
cmp
adc
dec
out
hlt
and
sahf
ja
push
add
or
adc
shrb
mov
xor
cld
or
mov
pop
inc
add
inc
cmp
push
sub
inc
add
add
dec
arpl
and
inc
add
insb
xchg
cmp
in
pop
inc
sti
gs
nop
mov
cmp
dec
sarl
movsb
jnp
call
mov
cltd
sbb
inc
add
xchg
aas
jo
cmp
sbb
adc
add
push
dec
mov
enter
add
dec
leave
addb
push
push
add
sub
mov
ja
xchg
jp
rolb
test
ds
xor
adc
add
mov
addb
jbe
sub
or
lds
push
or
xor
adc
push
rorb
out
negl
data16
and
or
add
loop
jle
stos
cmp
int3
cmpsb
cltd
adc
pop
or
icebp
imul
jmp
dec
or
sbb
sbb
insb
xchg
aaa
arpl
xchg
xor
and
push
cwtl
in
add
pop
lea
add
dec
call
add
lret
sub
jmp
pop
test
rolb
insb
jmp
mov
clc
cmc
or
sub
push
inc
add
mov
call
add
and
adc
xchg
jmp
or
cli
dec
mov
js
dec
aas
inc
add
xchg
fistpl
out
push
cld
push
xchg
cmp
xchg
and
mov
dec
pop
stos
xor
sbb
add
gs
add
loope
addr16
pop
mov
jecxz
pop
inc
insl
movb
mov
loop
jle
jne
bound
fidivs
out
cmpsb
dec
pop
outsl
xor
popf
or
jo
lcall
cmp
movsb
les
arpl
leave
inc
add
add
loope
daa
sti
test
mov
roll
add
inc
scas
or
addb
jnp
pop
loope
xchg
push
aas
dec
cmp
shll
icebp
into
pop
ret
sub
add
fistps
or
fsubrs
dec
pop
add
cmp
adc
or
and
mov
push
jge
mov
add
xor
or
ljmp
fucomp
inc
xchg
lock
push
add
inc
push
jb
sub
fnsave
xlat
mov
out
out
jle
adc
jns
ja
ret
jge
pop
mov
cs
fisttps
pop
jmp
add
jmp
je
mov
pop
jbe
fimull
xchg
push
sbb
in
and
adc
jne
push
hlt
mov
ret
push
add
decb
mov
add
fisttpl
sub
mov
inc
push
push
sahf
adc
adc
loopne
sarl
bound
adc
fldl
outsl
movb
outsb
cmp
mov
test
inc
mov
push
add
test
lods
pop
scas
dec
fidivs
loope,pn
mov
add
frstor
sbbl
testb
out
mov
adc
les
mov
mov
mov
test
lock
repnz
mov
push
sbb
and
xchg
sbb
test
shll
add
mov
add
mov
movb
in
jmp
sbb
fdivs
bound
sbb
bound
lea
sbb
data16
mov
add
inc
jecxz
imul
add
xchg
inc
add
cmp
dec
cs
dec
ss
or
or
pop
cmp
scas
adc
aas
nop
xchg
and
test
lods
push
repnz
add
je
and
into
push
in
bound
loopne
inc
add
adc
adc
loop
add
cmpsb
aam
mov
test
mov
imulb
sbb
lcall
add
pop
stc
test
and
dec
insl
jp
add
sbb
adc
pop
pusha
add
cli
inc
add
mov
sub
sarb
outsb
rolb
push
sub
movsb
jl
add
into
mov
sub
sub
mov
addb
xchg
lret
xchg
or
popf
jne
rcrb
cmp
or
es
sti
outsb
outsb
out
xchg
or
ret
or
sarb
sbb
stos
pop
adc
popf
pop
mov
add
outsl
sbb
fwait
bound
cmp
ficoml
dec
ror
les
popf
or
push
mov
mov
enter
add
push
testb
popf
out
pop
in
adc
push
cmp
popf
daa
popf
mov
inc
push
test
scas
pop
popa
iret
je
inc
add
push
pop
test
mov
int
lret
js
add
loop
lcall
adc
je
les
jnp
repz
repnz
pop
lret
outsl
jae
jo
mov
int3
je
add
movsl
push
or
or
aad
xchg
mov
inc
add
mov
pop
imul
ret
jg
ret
pop
push
lds
aad
cli
aaa
pop
adc
fildl
add
jmp
push
push
idivl
jns
mov
sub
add
add
mov
aad
jecxz
out
push
lock
fwait
dec
popf
out
jnp
mov
push
xchg
ja
inc
add
pavgb
push
addb
cmovl
fimuls
sbb
jns
cmpsl
mov
dec
add
add
add
daa
xchg
or
add
int
int
movsl
es
test
mov
out
popf
icebp
jb
out
or
ss
jl
inc
jmp
mov
cmc
clc
mov
sub
sbb
push
mov
lahf
sbb
notb
fcmovbe
aaa
xchg
mov
test
sub
in
frstor
roll
xor
test
out
push
add
pop
icebp
and
cmp
jae
mov
ljmp
add
or
inc
add
adc
aad
in
mov
mov
in
sub
lret
loope
test
add
out
mov
repnz
lret
and
xor
pop
loopne
sbb
nop
xor
mov
add
cmpsl
pop
pop
xlat
pop
outsl
lret
xchg
sub
clc
in
inc
add
movb
lods
xchg
dec
gs
add
stos
pop
or
ror
mov
add
sub
xchg
jnp
add
add
inc
add
sub
add
inc
add
add
mov
pop
push
mov
add
inc
stos
jns
lahf
test
fwait
inc
fstpl
mov
add
fnsave
ja
sbb
jg
mov
xchg
mov
sbb
sti
jbe
sub
inc
xchg
movsb
jecxz
xchg
cwtl
pop
jle
in
adc
sarl
mov
pop
lods
push
mov
test
mov
enter
add
dec
cli
mov
add
daa
xor
add
movsb
popa
and
mov
and
add
jb
in
in
sub
fcomp
sub
xchg
push
mov
or
add
lock
mov
addb
outsl
out
mov
rol
in
add
or
pop
add
mov
add
ss
fs
pop
data16
das
mov
fstps
mov
or
cmp
mov
inc
add
lods
and
cwtl
adc
xchg
or
test
lahf
mov
inc
xor
cmc
cmpsb
outsb
fmul
sbb
add
cmpsb
mov
test
mov
xor
dec
xor
jb
dec
pop
je
cltd
loope
jns
int
mov
mov
pushf
xor
xchg
sarb
ds
jle
and
dec
lock
out
lds
xchg
fsubs
aaa
adc
in
pop
adc
jmp
add
xor
out
adc
bound
cmp
pop
sub
cmpsl
movsl
sub
sbb
aaa
bound
aad
pushf
shlb
add
mov
dec
daa
push
inc
add
add
xor
stc
in
or
dec
in
sub
addl
add
push
jle
scas
and
cld
pop
dec
inc
mov
xor
inc
inc
add
adc
mov
mov
xor
inc
add
dec
bound
cli
mov
into
xor
xchg
mov
insb
movsb
cmc
sbb
push
cmpsb
xor
adc
xchg
adc
jne
mov
mov
jecxz
add
xlat
pop
sbb
fisttps
xor
ja
and
push
xchg
ss
ficomps
adc
dec
fmulp
mov
cmc
jl
add
ljmp
lock
add
ds
pop
add
mov
and
inc
mov
aam
mov
xlat
addb
subl
xchg
pop
into
push
add
mov
dec
add
fwait
push
in
pop
pusha
add
test
pushf
or
sbb
stos
or
bound
loopne
mov
xor
inc
add
jl
sbb
test
dec
xor
xchg
cmp
sub
xchg
xchg
cmp
call
xchg
xchg
inc
add
sbb
and
popa
sub
push
jl
in
int
and
test
inc
pop
repnz
hlt
std
cmp
insb
inc
sub
adc
add
fcomip
ja
into
sahf
and
adc
cmp
jle
xchg
popl
rcrb
add
jg
ret
jmp
mov
nop
sbb
imul
sub
insl
jmp
add
insl
inc
add
xchg
sbb
xor
int3
test
shrl
gs
mov
and
lock
sarb
add
in
test
nop
or
fld
or
add
add
xor
jmp
add
addb
leave
dec
loope
add
dec
mov
call
sbb
mov
lcall
mov
ret
mov
loope
xchg
cmp
mov
icebp
pop
arpl
aam
mov
cmc
and
je
mov
inc
push
mov
outsl
sahf
mov
mov
fisttpl
mov
add
lods
lcall
inc
pushf
es
push
repz
shlb
sahf
outsb
negl
inc
pop
inc
add
jb
add
xor
add
cmp
into
popa
in
cmpsb
into
push
aam
push
jg
scas
pop
fnstcw
loopne
mov
push
inc
pop
call
cmp
cmpsb
add
add
andl
push
or
xor
addr16
add
sahf
fwait
rcrb
mov
push
add
inc
aad
add
mov
loope
adc
mov
inc
jle
dec
pop
mov
hlt
sbb
rolb
movsl
shrl
out
mov
jl
lret
mov
add
xlat
push
stos
scas
mov
popa
es
jp
adc
roll
pop
popf
push
mov
xchg
push
rorl
and
mov
push
cmp
jl
mulb
xor
pushf
ror
inc
movsb
lock
addb
pop
inc
add
testb
fsubs
sbb
sbb
addb
inc
cltd
inc
add
repz
gs
pop
mov
lahf
fiaddl
push
and
dec
outsl
and
push
sub
add
sub
pop
inc
add
fldt
lods
arpl
mov
push
into
xor
xchg
adc
jae
add
add
fcoms
mov
add
arpl
and
mov
jl
dec
pop
je
adc
or
js
inc
add
cmpsb
xchg
add
inc
adc
cmp
jno
loop
je
add
dec
cmp
insb
xor
xchg
fnstenv
mov
repz
ds
lock
push
je
in
sarl
push
jae
jecxz
les
cmp
shrl
icebp
lcall
mov
push
ss
cs
pop
inc
add
adc
dec
and
mov
add
or
or
mov
lcall
test
xor
cld
xor
add
cli
repnz
adc
sbb
and
inc
add
mov
pushl
ficomps
xchg
outsl
xor
push
shlb
jp
add
or
nop
sub
rol
inc
cwtl
pop
mov
add
shll
pop
mov
sub
add
xchg
jmp
es
rcrl
pusha
add
std
mov
xchg
rolb
add
jg
cld
push
and
sysret
mov
push
out
pop
cli
cmp
sarl
insl
rcr
jnp
jbe
call
or
mull
pop
and
std
mov
cli
imul
filds
iret
scas
mov
insb
aad
add
ja
jecxz
cmp
and
fidivs
add
daa
jbe
addb
dec
pop
jl
pushf
je
mov
dec
xchg
cmp
mov
sti
flds
sub
mov
ficompl
pushf
pop
notb
sbb
dec
ja
dec
xor
pminsw
sub
fs
lcall
pop
fs
les
fldl
inc
add
cmp
cltd
jp
xchg
test
mov
xor
add
dec
fisubl
and
push
out
pop
sub
in
icebp
in
add
or
adc
xchg
push
jmp
repz
mov
sbb
scas
mov
sub
cmp
add
xor
hlt
lock
add
loopne
push
mov
jmp
mov
imul
mov
adc
add
cmp
mov
sub
dec
inc
sub
xchg
pop
shll
stc
or
subl
pop
inc
add
movsb
addps
add
push
add
jp
add
sbb
arpl
popf
rorl
in
ljmp
mov
sbb
mov
cmp
xchg
add
xchg
dec
add
insb
jo
and
out
push
and
nop
ret
out
mov
gs
out
mov
push
pushf
cmpsl
xchg
fwait
dec
insl
repz
push
add
in
cmp
aas
mov
fst
mov
insb
push
pop
test
dec
insb
pushf
add
xchg
fstl
loope
data16
pop
movsl
dec
jne
scas
push
mov
int3
mov
dec
std
jnp
pop
out
roll
add
add
movsb
cli
jnp
and
pusha
add
rorl
repnz
xlat
out
and
les
loopne
add
push
add
mov
mov
jbe
mov
in
mov
fldl
in
cltd
xor
mov
add
mov
leave
addb
and
cmp
faddl
addb
xchg
in
add
into
into
or
sub
insl
pop
or
or
jbe
adc
xchg
mov
call
call
hlt
push
int3
mov
int
call
out
mov
mov
or
cmp
push
inc
sub
dec
outsl
jp
xchg
push
loopne
cmp
ds
insl
adc
aaa
or
cmpsb
xchg
movl
xor
push
outsl
fwait
movsb
rorl
cmp
mov
sbbl
add
push
gs
xchg
xchg
inc
mov
out
out
nop
in
cmpsl
sbbl
clc
inc
add
hlt
or
sub
xchg
mov
add
scas
test
bound
pop
in
xchg
test
jg
stc
add
sub
fcmovnu
push
sbb
pop
test
fildl
in
xchg
je
dec
fnstcw
leave
loope
or
ret
dec
sub
mov
fisubrs
push
addb
inc
add
add
ds
mov
div
lods
int
mov
pop
pop
push
popf
popf
mov
arpl
ret
enter
aam
out
repnz
aad
and
jns
add
fwait
or
pop
test
mov
jl
mov
cmpsb
or
push
and
sti
sbb
stos
pusha
add
loopne
lock
add
cmc
sahf
ja
ss
dec
push
jmp
dec
lret
les
iret
pop
pop
push
cltd
mov
jp
add
push
cmpsl
xor
cmpsb
dec
mov
mov
dec
fwait
dec
dec
sbb
add
roll
inc
inc
xchg
sub
add
sbb
fstpl
mov
mulb
mov
push
pop
xlat
sbbl
lods
xchg
cmp
mov
push
aaa
adc
jne
dec
pop
fildl
mov
js
enter
push
add
xchg
sub
sbb
gs
or
pop
ja
jmp
mov
int3
jae
sbb
xchg
xor
adc
xor
pop
push
dec
push
repz
sbb
aam
inc
add
add
jns
lcall
cmp
jb
pusha
add
pop
cmp
loop
gs
mov
fsubs
pop
jne
fs
add
int
in
xlat
hlt
mov
mov
add
sbb
jno
lret
add
xlat
jae
cmpsb
mov
clc
popa
fldt
sbb
mov
scas
push
dec
movb
add
pop
mov
aas
enter
inc
add
divl
push
sub
dec
imul
jbe
jge
jb
add
mov
jge
ret
or
pop
dec
fldenv
lahf
push
inc
icebp
push
inc
add
mov
roll
lahf
mul
push
stos
push
dec
ljmp
add
jne
adc
out
sti
pop
iret
adc
test
add
add
jno
lcall
add
and
sub
xor
xor
pushl
iret
rolb
mov
imul
sbb
push
add
inc
addb
mov
ficompl
nop
xor
and
shl
inc
add
imul
or
test
jecxz
repz
add
test
xchg
into
sub
mov
jecxz
push
lret
or
lods
sbb
rep
mov
mov
mov
dec
fs
addb
add
test
mov
aas
mov
js
mov
mov
idivl
xchg
ss
clc
dec
std
push
in
rolb
out
inc
add
rolb
add
repz
add
sub
fnstsw
jg
into
mov
lea
push
cmc
sahf
popf
or
sbb
jmp
test
pop
repnz
cli
andl
add
incb
into
inc
add
adc
or
adc
ss
or
pop
aas
in
test
scas
cmp
jns
out
mov
ljmp
mov
es
jle
push
mov
out
jl
add
xlat
cli
dec
mov
lock
add
ja
mov
scas
in
dec
lret
mov
add
sub
les
imul
mov
sbb
out
mov
inc
add
fwait
pushl
ljmp
loopne
xor
fmuls
mov
int3
jp
lret
mov
cmp
sti
insl
mov
push
jb
stos
das
lahf
imul
mov
mov
mov
push
add
cmpsl
push
xchg
jns
punpckhbw
add
imul
dec
addb
cmp
test
xor
popf
adc
pop
sub
mov
hlt
cmpsb
sbb
in
scas
mov
js
lahf
divb
sub
loop
rolb
jmp
and
mov
gs
mov
jle
add
push
cli
cmpsl
push
shl
scas
xor
mov
pushw
enter
jmp
inc
add
or
or
and
jecxz
add
je
xchg
adc
insl
jae
fdivl
lret
test
fs
add
bound
pop
cmp
movb
fwait
stos
loopne
mov
lea
mov
add
popf
pop
stos
in
and
push
adc
xchg
jae
idivl
lcall
aad
cltd
int
jp
out
or
sbb
xchg
jg
mov
fsubl
push
add
add
fnstenv
mov
add
idivb
inc
repnz
insb
std
xor
stc
sbb
das
mov
outsl
push
add
lock
pop
pusha
add
fwait
or
push
subl
mov
jg
jnp
mov
push
mov
notb
in
mov
jno
imul
jno
add
daa
imul
push
sub
jle
stos
add
xchg
push
dec
and
mov
mov
sub
cmc
mov
jmp
aaa
ljmp
nop
push
mov
inc
pushf
xor
movsb
js
leave
popa
jle
push
and
popa
scas
inc
add
push
add
add
push
add
ja
arpl
js
xchg
push
mov
add
sbb
cmp
jle
pop
in
pushf
add
or
jmp
add
test
sub
ds
stc
inc
or
cmp
fnstcw
fcomip
loopne
adc
std
add
push
out
xchg
mov
mov
add
ret
out
hlt
pop
mull
ss
inc
add
push
pop
xchg
int3
xor
iret
mov
xchg
ret
popa
test
cmp
add
mov
mov
xor
imul
aaa
popa
xor
jno
add
cli
or
mov
data16
dec
xor
fs
mov
add
add
pop
jb
addb
adc
add
fs
sahf
and
outsb
cltd
jne
pop
add
jnp
leave
dec
push
ret
jae
shrl
pop
sbb
aaa
mov
loopne
repz
add
mov
sldt
cmp
adc
das
sahf
cmp
mov
scas
pop
add
cli
adc
xchg
push
loopne
icebp
lret
sub
sub
fwait
jnp
fmull
cmp
lods
xor
lea
cltd
xrelease
mov
mov
std
pop
ret
into
in
js
imul
in
push
icebp
pop
pop
movb
shll
pop
mov
inc
in
fcomps
jno
xchg
jecxz
fiaddl
add
mov
cmp
push
lds
jbe
add
daa
xor
jo
or
mov
jns
dec
xor
cmp
lods
sub
push
loop
sbb
hlt
xchg
ficompl
lods
push
repz
sub
movb
or
int3
loop
icebp
aas
add
mov
or
dec
dec
xor
js
orl
add
add
addr16
and
jno
movb
enter
clc
fst
std
scas
es
mov
inc
add
add
mov
mov
mov
add
loope
stos
roll
stc
loopne
addr16
add
mov
add
xlat
loopne
jp
push
dec
sbb
jne
dec
sbb
sub
pop
call
fiadds
add
test
xchg
push
fucom
and
xchg
ljmp
mov
sub
inc
add
icebp
daa
fisttps
sbb
push
hlt
addr16
cltd
cmp
mov
mov
rol
add
adc
addr16
add
lds
icebp
mov
xchg
andl
push
mov
sub
pop
xchg
insb
add
xchg
mov
std
aaa
cltd
sti
jge
insb
aas
sub
add
dec
lret
push
adc
push
dec
xchg
or
add
ljmp
mov
xchg
and
cli
xchg
call
sub
pop
lret
add
scas
mov
fcomps
bound
scas
dec
sub
imul
loopne
ret
dec
fwait
push
xchg
sub
mov
imul
jle
mov
jbe
push
and
lea
imul
dec
mov
add
cltd
xor
xchg
cmp
lret
icebp
clc
mov
mov
sti
pop
popf
insb
lahf
jl
xor
cmp
add
test
imul
pop
sub
in
out
xor
hlt
pop
call
add
push
push
addb
pusha
add
rcr
xchg
adc
pop
cli
insl
jle
popa
cmp
std
or
mov
pop
outsb
mov
js
add
push
aad
stc
mov
mov
add
dec
xor
cmpsl
pop
cltd
fiadds
cmc
cld
push
mov
sbb
imul
rolb
add
cmp
fwait
repnz
int
pushf
dec
popf
cmpsl
add
not
adc
dec
mov
jb
in
cmp
in
jge
mov
dec
push
mov
mov
in
push
jne
js
adc
jle
add
lret
outsl
push
mov
jae
add
lahf
pop
sbb
add
data16
movsb
out
dec
push
add
cltd
loopne
bound
mov
add
add
out
cmp
sub
addb
or
inc
jb
jg
leave
les
xlat
lsl
mov
xchg
mov
cmp
test
jle
out
push
out
adc
outsl
mov
call
addb
ss
bound
xor
lret
lret
lea
cld
fs
icebp
das
or
icebp
mov
or
sbb
push
movsb
cltd
xlat
pop
pop
idivl
add
stc
iret
ficoms
add
sar
std
xchg
mov
addb
mov
jbe
sbb
fcomps
mov
mov
imul
push
xor
or
icebp
push
mov
jl
filds
and
or
add
add
sub
cmpsb
imull
mov
popa
cmp
xchg
mov
xchg
pop
mov
xor
bound
mov
add
lcall
in
test
fsubrs
pop
cld
pop
negb
sbb
add
out
inc
add
xor
ja
imul
cltd
out
add
inc
cmc
pop
add
jnp
mov
push
lea
lea
add
jmp
aas
fsubl
add
les
cmp
dec
in
inc
add
fwait
cwtl
cmp
adc
fcomip
addb
xchg
std
pop
stos
jnp
jne
pop
cmp
pop
rclb
and
add
push
add
xor
xor
xor
dec
ljmp
jle
push
pop
push
mov
jb
dec
cmp
stos
mov
cwtl
xchg
xor
cmpl
jmp
clc
pop
sub
cmp
dec
outsb
in
out
fnstsw
lods
int3
or
cmp
jne
mov
mov
sub
jnp
pop
push
shlb
adc
push
inc
jmp
les
scas
and
lahf
pop
test
rorb
xchg
xor
sub
dec
push
ret
cmpsb
jnp
push
inc
ret
jg
mul
les
mov
divb
sub
icebp
repnz
dec
arpl
popf
lret
adc
mov
adc
mov
push
adc
add
sahf
push
mov
add
push
rolb
popf
xlat
rolb
mov
cwtl
mov
add
xchg
faddl
jbe
sub
add
lea
adc
add
loope
movsl
in
xor
arpl
mov
out
mov
push
add
push
ljmp
add
jns
mov
xor
aam
cmp
repnz
push
inc
jg
add
movsl
int
pop
jge
add
pop
dec
pop
icebp
push
adc
xor
adc
mov
loop
add
add
or
sbb
pop
xor
add
add
hlt
sbb
ss
nop
pop
dec
pop
ret
add
testb
insb
mov
out
imul
inc
push
dec
xor
pop
roll
xor
mov
adc
cmp
or
jbe
sub
enter
sbb
cmp
scas
jo
stos
insb
rolb
push
nop
out
adc
pop
push
iret
add
sub
xchg
adc
aas
mov
add
push
aaa
lea
outsb
mov
dec
jge
mov
sbb
test
push
cmp
daa
lds
insl
mov
add
rcr
lcall
add
sti
pop
dec
leave
mov
je
dec
in
push
fldt
sar
push
push
cmp
cs
add
test
xlat
or
mov
push
gs
push
cmp
iret
mov
lods
sarb
mov
inc
fdivp
lret
mov
pop
dec
and
jl
or
lds
mov
add
push
add
aam
pop
ror
testb
pop
fnstsw
nop
repz
push
push
scas
jle
adc
call
and
add
add
ret
sub
xchg
mov
mov
push
cltd
sub
mov
cmc
jecxz
clc
cli
jns
stos
sti
push
js
testb
push
add
cmpsb
push
pop
and
adc
sbb
lret
outsl
jle
dec
inc
sbb
iret
aam
and
mov
lret
add
add
xchg
cltd
icebp
jmp
adc
cmp
vpmacsswd
pop
pop
cmp
xor
xchg
daa
sbb
sbb
jmp
mov
dec
push
ds
dec
addb
add
jb
addb
ret
xchg
js
push
jg
cmp
pop
mov
pop
movsl
xor
xchg
cmp
rorb
or
nop
mov
add
into
stos
cmc
add
dec
lcall
sub
aas
jnp
rolb
inc
or
mov
aad
adc
aam
jnp
popf
jno
stc
ds
in
jnp
out
mov
enter
dec
les
in
xchg
jmp
sarb
mov
mov
mov
xor
test
jge
iret
add
adc
lea
push
mov
xor
faddl
add
adc
dec
sbb
jno
pop
xor
out
push
shl
aad
xchg
dec
ds
jg
add
fimuls
rolb
add
mov
xlat
outsl
cwtl
push
mov
sub
xchg
mov
test
sahf
or
push
inc
push
loop
add
xor
lea
add
adc
and
push
in
imul
popa
test
push
add
lea
sbb
cmpsl
mov
jle
shrl
inc
add
addb
adc
imul
add
inc
dec
in
addl
movsl
xchg
fbld
js
addr16
cli
pop
addb
lahf
out
pop
cmp
xchg
outsb
and
sahf
pop
xlat
sub
sbb
and
pop
inc
xchg
out
lock
movb
scas
xlat
adc
jge
cmp
mov
mov
xchg
mov
sbb
sbb
pop
mov
ss
mov
not
cvtps2pi
insl
push
les
fprem1
and
mov
mov
int3
mov
ficompl
add
xor
les
cwtl
sahf
scas
clc
movb
flds
add
in
mov
cmpsl
mov
sbb
xchg
inc
mov
dec
cs
or
and
mov
int3
out
loop
in
in
add
add
inc
add
testb
popl
mov
cwtl
pushf
fmull
enter
ret
add
les
sbb
mulb
add
mov
stos
jecxz
pusha
add
js
xchg
lock
insb
add
jmp
jp
add
sub
push
pop
and
int
add
xor
pop
push
add
jb
fstps
enter
leave
jbe
daa
dec
jp
mov
sub
mov
es
jp
call
sti
es
pop
mov
stos
loopne
mov
xor
lahf
movsb
sub
lds
inc
add
stos
in
insb
adc
and
jl
adc
sbb
add
mov
pop
jp
sub
in
aaa
jmp
fsub
xor
jns
add
int
and
jecxz
pushf
movsl
lea
sbb
in
into
and
je
icebp
sub
call
sti
ror
or
cld
cmpsb
mov
lret
out
add
add
xor
test
je
icebp
ret
and
movb
jo
daa
rcl
out
cld
outsb
push
add
push
repz
ret
lret
sti
out
cmc
mov
jl
aas
cmp
jl
cmp
jle
out
loop
mov
std
insl
cmp
add
fst
les
sahf
scas
cmp
iret
stos
push
les
push
fwait
addb
bound
nop
and
jne
nop
nop
mov
fsub
pop
push
mov
in
cmp
sbb
scas
add
xor
push
push
inc
pop
sti
pop
inc
add
push
rdpmc
adcl
ljmp
cmp
push
add
pop
outsb
into
andl
and
test
mov
in
jb
xchg
push
add
mov
out
jb
mov
jnp
aam
add
lahf
cwtl
pop
lods
mov
std
mov
mov
inc
pop
mov
cmp
add
push
mov
pushf
gs
push
orl
popf
lcall
std
inc
add
in
call
dec
movb
add
xchg
int
out
and
push
aam
sahf
movsl
sub
in
adc
pop
mov
xchg
out
pusha
add
push
inc
add
sub
repnz
iret
mov
cmp
fnsave
cltd
ret
les
push
mov
push
rclb
and
adc
mov
or
sbb
mov
mov
cs
sbb
bound
jbe
sbb
sbb
fdivr
ficoms
cmp
loop
pop
push
jmp
call
rorl
mov
pop
sub
and
jg
sahf
xor
and
mov
mov
inc
clc
mov
xor
shrl
xor
lar
sub
out
push
cmc
outsb
stos
xor
add
xor
addb
push
push
repnz
jae
add
push
mov
add
sub
add
cwtl
mov
fs
add
cmp
mov
add
movsb
push
data16
out
movb
xlat
mov
outsb
push
jp
add
pop
std
cld
mov
add
add
push
lods
inc
add
loop
add
mov
cmp
cmp
add
dec
lds
sbb
xchg
into
lcall
sbb
bound
mov
pop
sbb
rolb
jl
lock
lret
pop
in
mov
aam
mov
flds
ja
bound
and
sbb
decb
cmp
add
lods
sbb
push
add
inc
add
loopne
mov
push
pop
rorb
inc
add
jecxz
add
stos
jecxz
push
jb,pn
dec
jge
sbbl
sbb
adc
std
imul
mov
add
adc
sub
cli
test
fidivs
gs
rclb
ds
pop
mov
out
cmp
add
or
loopne
mov
add
jbe
xor
cmp
sub
add
imul
std
outsb
cli
fldt
mov
sbb
add
testb
std
arpl
mov
xchg
rol
mov
cmp
pushf
jl
pop
mov
das
into
or
lahf
in
adc
imul
lds
popf
aas
testb
xchg
cld
mov
add
rol
add
mov
cmp
cmc
or
stos
push
fsubs
nop
shl
sbb
out
adc
cli
jns
mov
rol
add
adc
mov
add
lahf
iret
jg
mov
loopne
dec
fdivs
sub
icebp
xchg
and
daa
lock
mov
add
in
fisubrl
rcrl
fwait
cmp
pop
xor
in
jmp
rcll
inc
sub
push
xor
xor
in
xchg
or
in
lods
popa
popf
aam
and
add
and
insl
out
cmp
test
data16
inc
movsl
mov
and
sub
fcmovne
jns
jecxz
add
lock
push
fldenv
int3
mov
push
cmc
pusha
add
cld
push
jp
sbb
cmp
push
sbb
mov
mov
outsl
pusha
add
stc
lock
xchg
inc
cmp
or
fnstcw
dec
jle
mov
stos
sbb
pop
add
and
cmc
movsb
xor
xchg
add
test
push
repnz
mov
push
or
jnp
mov
cmp
add
mov
sub
fimuls
sbb
daa
aad
inc
pop
and
roll
mov
movb
mov
lret
cwtl
cmp
mov
std
iret
movsl
push
inc
add
push
mov
cmpl
xor
add
es
mov
xor
cmc
jecxz
sub
mov
push
jae
insl
pop
cmp
popa
jbe
adc
dec
mov
mov
test
jne
outsl
lods
loop
je
mov
add
cmc
push
sbb
int
add
mov
test
pushf
or
mov
add
xchg
jns
jp
add
rorl
in
add
pop
push
inc
add
inc
and
stos
sbb
pusha
add
cwtl
jo
jp
in
sbb
add
or
ss
jg
dec
aad
std
test
jge
addr16
or
jecxz
cltd
lcall
loop
icebp
repnz
pop
in
mov
rcrb
push
imull
and
aam
jmp
pop
inc
add
mov
mov
imul
decb
cmc
fiadds
xchg
add
mov
mov
pop
icebp
nop
mov
out
sub
pusha
add
scas
cmp
add
pop
daa
idivl
sahf
rcrl
icebp
mov
fcmove
mov
fwait
pusha
add
mov
lods
std
xor
stos
insb
popl
lods
arpl
or
add
push
test
sub
add
xor
sahf
cmp
and
aad
lcall
nop
or
pop
loope
add
mov
sbb
popf
push
loopne
adc
jae
aas
inc
add
sti
xlat
cwtl
jl
sti
cltd
sbb
int3
adc
lea
icebp
scas
arpl
inc
add
cs
cmp
xchg
mov
lock
sbb
xchg
cwtl
lods
push
inc
push
mov
xor
xchg
arpl
inc
add
adc
xchg
push
pop
je
cmpsl
les
sar
les
hlt
add
mov
add
and
sti
mov
cmp
inc
dec
lock
les
pop
xlat
push
xchg
push
jl
jbe
adc
hlt
test
fcomps
sbb
xchg
rcrb
mov
scas
jb
aaa
pop
push
xor
mov
loop
and
add
ds
add
xorl
cmp
rolb
pusha
add
or
push
mov
out
ret
cli
pop
sub
icebp
adc
xchg
add
fucomp
popf
loope
jo
pop
xchg
popf
pop
cld
ja
dec
daa
ja
daa
jbe
mov
push
adc
or
aaa
push
loop
or
imul
mov
pop
out
xor
sbb
fcomps
fidivrl
or
cmp
lea
pop
fsubrs
int3
mov
into
popf
lcall
unpckhps
adc
cs
cmp
mov
push
xchg
test
mov
inc
lds
imul
icebp
or
xchg
bound
les
scas
rolb
jp
fidivrs
fistps
dec
mov
shll
cmp
cmp
jmp
add
and
sbb
sub
dec
cmp
mov
dec
lds
fisubl
cs
adc
loopne
add
pop
adc
leave
insl
and
pop
adc
fs
stos
push
insl
addb
aam
xchg
mov
mov
mov
pusha
add
hlt
iret
mov
in
mov
inc
add
and
stos
mov
int3
mov
into
push
fwait
mov
mov
jle
adc
aaa
sbb
imul
add
jge
xchg
and
insb
fucomi
pmulhuw
lods
aaa
add
xchg
xor
pop
or
pop
addb
outsl
mov
cmpsb
mov
or
pusha
add
clc
dec
rcrb
sbb
andl
mov
xchg
popf
aad
push
repz
sahf
pop
arpl
fsub
rcl
das
hlt
imul
pop
pushf
pop
push
imul
or
fwait
dec
jnp
add
bound
pop
ficompl
aam
test
add
pop
bound
loopne
push
add
test
lods
pop
movsb
scas
outsb
sub
mov
sbb
and
fimull
stos
inc
push
test
in
dec
out
and
add
addb
iret
popa
inc
mov
mov
stos
pop
jl
stos
iret
fdivr
out
mov
lock
mov
add
pop
add
andps
mov
xchg
fadds
hlt
int3
pop
testb
test
mulb
xchg
sbb
dec
lahf
adc
into
push
inc
xchg
or
imul
xchg
aam
xchg
mov
add
stc
jge
push
pop
enter
or
or
mov
dec
leave
sbb
lcall
or
add
loop
add
cs
adc
jmp
mov
xchg
inc
add
psrlq
mov
sub
jle
push
jns
or
jl
mov
add
inc
add
ret
iret
icebp
mov
adc
mov
fmull
sbb
test
aad
aas
xor
movsb
fnstsw
add
sub
int3
xchg
mov
xchg
jb
movb
dec
inc
add
bound
popa
dec
sbbl
mov
aas
test
scas
xchg
inc
add
pop
into
bound
cltd
pusha
add
rcr
cmp
rclb
fcmove
jecxz
sbb
and
jae
lret
lea
enter
cmp
mov
add
addb
mov
pop
cmpsl
push
push
adcl
add
push
ficoml
adc
add
into
pop
arpl
add
mov
sar
xchg
push
add
rolb
or
adc
push
add
fldpi
push
jle
popf
stos
je
jns
mov
sti
or
cmp
les
bound
xchg
xchg
xor
mov
aam
aas
push
orl
scas
pusha
add
add
out
sti
aaa
xor
cmp
jmp
lds
aad
aam
add
shl
cmp
cmpsb
fsts
mov
add
xchg
nop
mov
hlt
sahf
push
push
mov
mov
mov
xorl
shl
and
add
add
cwtl
scas
jne
dec
pop
push
or
jmp
push
or
add
mov
out
pop
jmp
cs
mov
mov
fstps
ds
hlt
dec
mov
je
addb
lds
jecxz
mov
int3
std
loopne
mov
flds
jbe
dec
dec
fldl
push
xchg
push
sbb
or
inc
add
popa
inc
add
add
or
stos
addb
push
sbb
cmpsl
jnp
jp
repz
jo
pop
pop
or
or
add
mov
lret
inc
add
add
mov
ret
mov
neg
cmovl
bound
xchg
in
addb
pop
rolb
mov
outsl
rolb
mov
and
jl
xor
rorb
ss
mov
test
rcll
add
push
jno
les
insb
cmp
cmpsb
pop
iret
pop
scas
xchg
jae
dec
addr16
fsubs
add
mov
add
add
lea
push
pop
pop
addb
sar
add
xor
in
pop
out
jle
dec
pop
jns
pop
cltd
je
sbb
xor
dec
rclb
dec
mov
hlt
pop
pop
gs
ss
xchg
xchg
mov
pop
iret
lds
hlt
lahf
jl
ret
add
ud0
mov
xor
rcll
test
int3
lcall
iret
imul
es
bound
out
sbb
arpl
shlb
xchg
lods
int3
test
data16
cmp
lods
lock
push
jl
add
ljmp
dec
aad
pop
jmp
pop
mov
es
call
je
fisubrs
repz
cbtw
dec
mov
stos
inc
les
fbld
inc
add
mov
sti
pop
and
je
mov
test
gs
push
mov
xchg
mov
int3
not
pop
xlat
adc
cmp
xor
scas
xchg
sbb
and
fldcw
cltd
hlt
mov
mov
mov
pop
sbb
movsl
mov
dec
mov
push
ljmp
push
in
add
adc
mov
out
test
movsb
adc
pop
insb
hlt
int3
lret
shll
xor
hlt
sti
cmp
cli
jl
ljmp
pop
aas
jne
fwait
mov
add
push
add
add
aam
mov
push
xlat
int
dec
icebp
pop
stos
rolb
fstps
mov
adc
jns
int
sub
pop
lods
mov
add
frstor
scas
mov
mov
adc
add
dec
addb
lea
xor
xlat
enter
adc
add
jmp
dec
push
mov
repnz
inc
add
sub
add
repnz
xchg
test
addb
pop
xchg
add
cmp
push
imul
dec
jg
packuswb
test
fisubrl
add
rclb
roll
or
xchg
shll
push
add
stos
mov
mov
mov
inc
add
adcl
es
sbb
add
lahf
sahf
add
es
push
cmp
xor
dec
xchg
adc
neg
daa
out
loope
data16
rcl
mov
out
xor
mov
clc
or
add
mov
xchg
xchg
stc
dec
scas
imul
std
jo
jae
push
stos
movsb
inc
add
sbb
mov
repz
mov
js
inc
add
add
cs
jge
fistps
inc
mov
test
pop
xlat
in
push
xor
int
add
xchg
pop
push
fidivrs
xchg
adc
sbb
inc
add
jle
nop
push
add
xchg
push
movb
dec
repnz
paddq
jo
add
addb
mov
jl
std
mov
push
mov
mov
loopne
movb
int3
bound
lock
sub
add
sbb
jle
add
mov
lods
ja
iret
movb
insb
nop
xchg
jns
sub
push
data16
adc
or
xchg
xor
js
inc
add
imul
jbe
xor
rorl
add
vandnps
push
adc
fcomi
out
aaa
ljmp
imul
xor
cmp
add
movsb
addr16
icebp
mov
jnp
or
and
inc
add
jo
add
add
sub
das
jecxz
enter
pushf
jno
add
dec
js
push
cmpsb
jae
arpl
jg
mov
xchg
jb
or
add
rol
add
add
xor
mov
out
dec
sbb
add
fldenv
add
clc
xchg
insl
test
add
cwtl
repnz
add
movsb
stos
xorl
push
add
inc
add
sub
sbb
or
push
repz
or
ret
sub
sbb
out
and
cmpsl
mov
jle
mov
jle
xchg
sbbl
add
movsb
xchg
stos
stc
test
mov
jp
mov
or
push
jne
push
push
add
cmp
aad
ljmp
push
stos
adc
cmpsb
ja
sub
shr
loopne
xor
addb
movl
cmp
test
adc
movsb
sbb
push
scas
cmp
leave
adc
cmp
sbb
push
scas
sub
pop
jle
fsubrs
insl
and
adcl
cmp
std
sbb
out
daa
push
clc
adc
add
mov
mov
fnstcw
cmpsl
icebp
test
sbb
pop
dec
ret
xchg
int3
jne
or
enter
add
sub
mov
frstor
add
push
push
andl
dec
sub
jnp
mov
push
insl
mov
xor
test
jg
imul
add
loopne
add
or
test
stos
cmp
xchg
ds
mov
push
inc
add
mov
cmpsl
mov
addb
ss
push
stos
dec
inc
mov
add
bound
lock
loope
sub
cmp
add
cmp
xor
repnz
add
pop
jp
xchg
xor
into
pop
add
fmulp
ljmp
test
lods
push
mov
add
add
add
pop
cmpsb
cmp
xlat
popf
int3
aad
addb
cmpsl
push
nop
mov
insb
add
shrb
ss
cmp
bound
imul
xchg
jle
ljmp
mov
mov
rorl
shrl
int3
aaa
adc
add
in
pop
jno
mov
xlat
arpl
rcrl
jo
lret
add
sarl
add
sub
add
push
scas
ja
mov
popf
test
add
out
add
mov
incb
add
dec
dec
inc
lahf
scas
leave
enter
add
cld
ljmp
mov
in
xchg
sub
and
mov
mov
testb
rorb
in
es
sub
ss
dec
lds
add
mov
add
or
jne
out
and
mov
fs
stc
stos
or
adc
push
filds
shl
repnz
imul
pop
push
push
jne
movsb
sbb
mov
mov
dec
popa
lret
daa
icebp
shll
lods
mov
push
jecxz
ret
enter
stos
int
jmp
jo
inc
mov
add
or
cltd
cmp
popa
adc
mov
sti
inc
lods
int3
mov
add
dec
mov
and
aaa
out
xchg
pop
cltd
add
ja
mov
mov
inc
and
sub
shrl
inc
aas
mov
push
iret
aaa
and
imul
xchg
mov
cwtl
xor
adc
sti
pop
lods
cmpsl
add
jmp
je
test
lahf
xchg
pop
inc
add
jp
pusha
add
lret
stc
inc
mov
in
sahf
push
lret
cwtl
xchg
push
fcomps
mov
xor
mov
add
scas
pusha
add
pusha
add
loopne
xchg
mov
rcll
icebp
popa
jecxz
add
mov
push
push
cmp
add
cmpsb
pop
je
and
mov
test
inc
add
les
add
sub
mov
sbb
or
push
test
pop
aas
addb
ss
jg
push
push
inc
lahf
sub
push
add
jae
add
loope
insb
sbb
push
sbb
inc
add
sbb
aaa
mov
mov
jne
jo
or
adc
jnp
adc
stos
add
aam
notl
scas
xchg
push
mov
mov
pop
ja
stos
repnz
adc
xchg
cwtl
add
adc
mov
loopne
jg
push
adc
sub
pushf
jo
pop
or
imul
inc
sbb
add
cli
repnz
or
iret
xor
mov
sbb
mov
mov
mov
xor
bound
sub
decb
inc
add
adc
daa
fldenv
add
sub
aam
fsubr
sbb
mov
movsl
sbb
pop
jge
fwait
addl
insl
mov
add
scas
dec
cmc
cmpsb
sub
cli
jg
stc
adc
mov
movsb
stc
xchg
add
or
adc
cmpsb
inc
add
sahf
sub
add
neg
ret
scas
or
cmc
or
stc
inc
adc
jo
scas
lret
xchg
jnp
leave
in
mov
bound
mov
mov
push
sbb
xchg
repnz
icebp
in
add
add
fnsave
lea
add
loope
inc
add
mov
arpl
scas
cmp
leave
stc
dec
jo
mov
and
sbb
xor
xlat
roll
or
in
pop
jb
inc
adc
cmc
lret
and
insl
ret
push
in
test
fnstcw
pop
sbb
mov
fsub
shrb
cmpsb
and
fs
movsb
lret
dec
cld
push
add
cmpsb
scas
insb
mov
ss
push
movsl
mov
mov
add
shl
sbb
jne
mov
mov
cwtl
pop
jge
sti
dec
cmp
call
inc
add
mov
push
mov
imul
fmulp
mov
push
adc
addb
pop
mov
fisubrs
mov
bound
mull
test
mov
push
pop
sub
rcrl
psrad
mov
cmpsb
daa
sahf
inc
add
pop
shl
rolb
ds
inc
stos
clc
movsb
mov
arpl
test
mov
adc
addr16
sub
inc
add
jge
jp
dec
pop
sbb
cmc
or
jno
dec
jmp
rcl
and
jns
add
pop
cmp
ds
cmp
jno
dec
sbb
arpl
push
jno
cmp
gs
inc
or
sahf
mov
xor
jp
mov
cmp
lea
cmpsb
push
addr16
mov
jne
jmp
addr16
or
outsb
inc
jp
add
outsl
sub
lcall
inc
add
lfs
es
inc
add
xchg
sti
push
outsl
test
jo
pop
sub
add
ljmp
add
pop
int3
aas
sub
fstpl
repnz
cmpsb
loope
add
add
add
cld
cmpsl
ss
push
xchg
iret
inc
jg
lret
adc
jge
arpl
out
in
fcoml
push
testb
stos
jnp
out
ljmp
pop
xchg
pop
xor
pop
lcall
xor
jae
xchg
stc
push
movb
stc
push
pop
cld
ss
sbb
mov
jmp
mov
loope
push
mov
xor
cmpsl
stc
xor
jbe
lods
push
rclb
jmp
sbbl
xchg
sbb
add
fstpl
adc
inc
ljmp
push
add
sahf
call
fists
mov
je
sbb
mov
pop
mov
sbb
cmp
push
sbb
icebp
in
xchg
cmp
daa
cmc
ror
mov
mov
pop
adc
mov
adc
add
cmp
xchg
test
push
mov
leave
xchg
out
clc
push
add
add
in
addr16
enter
sahf
pop
xchg
fdiv
into
ret
sar
repnz
push
sysenter
mov
enter
add
xor
leave
adc
and
in
into
cmpsb
ret
pop
sahf
cmp
addb
daa
pop
xchg
cli
popa
pop
mov
cmp
jmp
icebp
out
daa
int
movsl
inc
mov
push
movsb
push
shll
jge
dec
jnp
mov
pop
insl
add
in
cmpsl
int3
mov
lock
into
test
stos
dec
out
sbb
mov
and
add
stos
mov
sahf
dec
test
les
sub
fwait
inc
and
mov
push
add
lret
add
cmp
add
dec
aam
xchg
push
ret
scas
and
push
js
into
and
jmp
addb
add
lods
maskmovq
imull
pop
addb
add
jge
xchg
idivl
add
xchg
out
and
rolb
add
push
add
mov
dec
pop
iret
outsb
mov
mov
popf
cmpsb
push
add
int
push
rolb
adc
sub
fldl
inc
fs
push
add
dec
add
test
ror
sub
test
loopne
movsl
add
xchg
or
fldenv
add
push
mov
aas
roll
in
jg
or
mov
cmp
ss
adc
push
pusha
add
lret
mov
inc
jp
dec
add
add
mov
movsb
push
out
sub
xchg
jg
insb
in
out
cld
or
inc
cmc
jae
mov
add
repz
xchg
fistps
int
cmp
adc
decb
add
jbe
cmp
lret
cmp
dec
mov
fstpt
jns
aad
jmp
mov
sbb
out
inc
add
jg
cld
repz
ss
cmpsl
mov
xor
stos
xor
cmp
test
pop
mov
arpl
dec
xchg
push
inc
add
push
mov
xor
fstps
nop
inc
loopne
push
push
imul
lock
sbb
jb
lret
sbb
mov
dec
xchg
fcmovnu
ds
mov
and
loope
dec
jb
nop
push
repz
mov
add
call
inc
mov
mov
adc
mov
stos
imul
les
into
in
sbb
inc
mov
aam
fisubl
leave
cltd
or
xor
mull
roll
sbb
adc
out
push
in
xchg
pop
dec
lock
call
add
aas
fmull
add
push
push
add
lods
aaa
mov
mov
push
sbb
push
hlt
xchg
or
mov
popa
aas
test
add
cli
mov
lds
gs
push
ja
repnz
inc
rcr
and
sahf
mov
xchg
adc
dec
pop
and
iret
iret
sbb
addr16
inc
pop
jns
aaa
inc
add
ja
mov
jecxz
add
inc
add
mov
or
adc
xor
mov
popf
push
jno
daa
xchg
push
cmp
loop
dec
dec
sbb
jecxz
out
inc
add
xchg
mov
xor
jecxz
xor
fnstsw
adc
push
icebp
lods
ja
mov
into
jl
addr16
pop
cmp
insl
pusha
add
xchg
nop
inc
xor
jmp
mov
add
mov
stos
icebp
push
addl
nop
daa
ljmp
jecxz
push
push
add
mov
mov
orl
ljmp
push
lret
push
adc
movsl
dec
add
mov
xchg
pusha
add
movsl
rolb
nop
xor
sbb
pop
cmp
jnp
add
mov
inc
movsb
mov
push
add
adc
sub
add
fwait
xchg
mov
dec
mov
ret
sbb
fwait
scas
push
adc
push
add
divl
xchg
stos
jbe
stos
mov
add
add
lea
call
lea
ret
add
sbb
push
adc
inc
scas
push
test
test
xchg
dec
cmp
jle
pop
movb
add
push
cltd
sub
add
icebp
hlt
jmp
mov
xchg
inc
lock
push
stos
push
add
xchg
imul
mov
jb
jno
or
aaa
cmp
jo
repz
popl
or
dec
adc
test
xchg
mov
fnsave
repnz
adc
loopne
sbb
insb
jmp
sti
addb
cmp
push
cmp
add
addr16
push
adc
push
mov
outsl
mov
aas
jge
jb
add
out
add
xchg
and
out
adc
fsubs
or
int
xor
push
pop
mov
mov
add
pop
hlt
ja
rclb
