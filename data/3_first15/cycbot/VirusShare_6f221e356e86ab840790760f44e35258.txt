mov
mov
add
movl
or
add
in
add
inc
pusha
out
fwait
outsl
call
mov
test
add
fcom
and
adc
sbb
rolb
or
jge
shl
or
inc
inc
mov
sub
adc
fcmovnu
outsl
cmp
mov
mov
or
mov
or
add
div
add
mov
pushl
add
add
push
call
mov
outsb
inc
lret
xor
add
cs
rcl
and
dec
rcl
rol
cltd
jge
mov
adc
and
rol
fcoms
cmp
jbe
sti
in
popa
push
or
and
cli
mov
or
mov
or
mov
push
or
icebp
mov
ret
incb
fwait
cmova
loopne
into
or
mov
push
or
aaa
xlat
out
stos
faddl
mov
and
pop
clc
ljmp
in
dec
pop
add
sbb
rcr
mov
clc
loope
sub
fsubrl
lret
adc
mov
pop
out
sub
iret
xor
add
cmp
sti
pop
mov
mov
cmpsl
dec
call
mov
mov
cmp
pop
add
jmp
not
sub
loopne
mov
shll
and
fcomp
sub
xchg
hlt
push
push
js,pn
or
hlt
push
lea
push
push
call
cmp
hlt
adc
lret
sbb
sbb
jecxz
hlt
rcl
cmp
mov
notl
outsl
mov
mov
out
mov
mov
add
pop
inc
lock
mov
jo
jnp
dec
dec
mov
sbb
daa
pop
fcmove
stc
aam
loop
add
fmulp
jbe
andb
movsl
xor
or
pop
testb
jg
ds
sbb
in
mov
mov
xor
ljmp
jp
push
enter
sahf
jp
mov
lret
lret
jp
sti
in
mov
ds
push
mov
sahf
outsb
sbb
mov
mov
loop
mov
mov
sahf
push
enter
xor
lret
xchg
outsl
fcomi
or
push
xor
or
outsb
mov
push
dec
push
ret
fcmovne
xchg
mov
lret
ret
sub
movsb
pop
mov
aas
or
ret
mov
mov
mov
mov
int3
sahf
dec
jp
sub
pop
fcmovnb
xor
cmp
sahf
into
or
xor
outsb
fdivrl
outsb
js
loop
sbbl
or
sub
cwtl
pop
or
cli
cwtl
inc
and
inc
dec
jo
xchg
enter
xlat
pop
adc
cmp
inc
mov
int3
adc
shlb
sarb
mov
addb
jo
dec
hlt
xor
adc
cmp
sub
sub
adc
add
sub
outsb
test
in
add
mov
jbe
int
add
adc
outsb
cmp
dec
and
cmp
aam
lret
andb
mov
jp
adc
dec
pusha
mov
insb
push
adc
hlt
loop
jp
jp
mov
and
push
mov
ss
push
push
jo
cmp
push
loop
out
cmp
adc
xchg
fidivrs
fadds
cld
push
sbb
dec
pusha
xchg
shlb
adc
insb
and
mov
jo
add
mov
in
cmp
ret
negb
dec
or
sub
push
mov
shll
jo
push
push
adcb
sbb
or
mov
xchg
cmp
sub
fadd
or
xchg
or
cs
xchg
loopne
adc
add
sub
push
clc
outsb
ja
mov
jp
push
fimuls
lock
loop
outsb
dec
sbb
xor
in
jp
inc
negb
add
or
pop
xor
jns
mov
push
add
xor
inc
and
ljmp
lcall
lcall
jo,pn
mov
pop
fcomps
stos
enter
inc
mov
pusha
cs
adc
loop
lock
adc
pop
hlt
push
or
fnstenv
adc
xor
add
lret
test
dec
add
push
ss
arpl
loopne
xor
or
pushf
sbb
cmp
rorb
push
cmp
xor
xchg
jle
mov
enter
xor
sbb
add
mov
int3
xor
out
xchg
jle
jp
loopne
pusha
cltd
clc
shr
push
ret
sahf
inc
mov
rcrb
push
sub
pop
ret
cltd
popf
push
aam
into
sub
xchg
pusha
popa
xor
sahf
sbb
mov
bound
sbbl
xor
insb
insb
sbb
pushf
push
dec
ds
in
int3
shll
jp
mov
dec
call
loop
inc
mov
sub
mov
dec
or
push
mov
ret
mov
das
ss
fiaddl
jnp
mov
push
rcrb
mov
mov
in
jmp
outsb
xor
push
add
lcall
jmp
dec
sbb
push
xor
nop
push
or
jb
adc
jp
adc
push
fisubrl
push
xchg
or
push
and
loop
adc
xor
insb
or
jg
bound
mov
scas
enter
dec
pop
lcall
imul
mov
xchg
pop
loopne
or
push
and
push
sub
outsb
inc
or
int3
push
xor
insb
ret
or
es
adc
push
cmpsl
shll
push
mov
ss
sbb
sbb
dec
or
dec
loop
xorb
add
pusha
not
sarb
pop
lods
mov
inc
and
mov
mov
xor
es
dec
dec
lret
loop
sbb
xchg
loop
mov
add
jl
dec
mov
cmp
test
sbb
mov
xor
mov
sbbl
arpl
pop
xor
cmpsl
imul
cmp
loop
in
fs
mov
mov
push
push
adc
lock
js
inc
push
xor
enter
or
pop
mov
or
add
or
add
ds
mov
sub
xor
sahf
into
lods
mov
jbe
add
test
bound
mov
sbb
or
outsb
int3
add
adc
jp
xor
adc
xchg
xchg
or
xor
sbb
mov
loop
mov
push
mov
dec
leave
and
sub
dec
outsb
adc
pushf
or
xorb
test
mov
lret
ss
popa
sbb
mov
pop
and
cwtl
out
enter
sahf
push
daa
adc
outsb
or
icebp
adc
sub
dec
push
push
lds
testb
cwtl
popa
fs
jl
fidivrs
and
sbb
inc
push
pop
sbb
xor
jp
repnz
push
inc
adc
jl
xor
pushf
in
int3
lcall
add
ss
rolb
adc
aam
jo
jo
out
jo
mov
mov
add
dec
outsb
push
push
sub
add
into
dec
push
push
dec
cmp
mov
push
xor
add
xlat
popa
mov
push
xchg
jl
pop
test
inc
test
pop
xor
pop
mov
cld
inc
xchg
loopne
adc
jp
add
testb
cwtl
enter
out
push
inc
mov
and
cmp
xor
mov
adc
dec
call
xor
mov
add
sub
in
mov
shlb
mov
insb
lock
sbb
jb
into
sbb
push
imul
adc
lock
cmp
add
push
or
add
jbe
mov
jbe
dec
mov
dec
mov
negb
cmpb
pop
and
pop
sbb
movsl
add
fiadds
push
dec
sub
call
dec
pop
repnz
add
jbe
mov
je
sbb
adc
or
adcb
mov
test
loopne
shlb
push
dec
pop
call
cld
mov
lods
lcall
xchg
stos
lods
dec
hlt
inc
inc
incb
add
mov
sub
inc
add
cltd
lea
test
jmp
sub
clc
std
movsb
ret
xor
shl
addr16
or
andl
sub
lcall
xor
xor
pop
gs
or
or
xchg
xchg
ja
mov
aam
hlt
int3
fistpll
dec
clc
mov
xor
mov
mov
ror
and
lea
or
arpl
jne
rorl
or
roll
and
jbe,pn
std
xchg
lret
fisttpl
ret
sbb
mov
int
aaa
sbb
and
mov
aaa
xor
mov
lock
mov
in
rol
add
aam
jmp
jge
int3
jb
sti
xor
hlt
sub
test
jbe
inc
add
push
in
xchg
cld
add
fwait
loopne
ss
rcl
push
sbb
fcoms
icebp
dec
incb
ljmp
sub
or
xchg
in
jmp
and
rol
cs
lret
das
shlb
roll
mov
ror
mov
add
fmuls
incl
fst
fsubs
lret
in
fistps
cmp
int3
loope
add
aad
dec
fs
push
push
sub
push
outsb
adc
dec
loop
dec
sub
cmpsb
repnz
xchg
or
pusha
cs
pop
call
sbb
enter
testb
jp
push
ret
lcall
and
inc
push
xor
cwtl
inc
cltd
inc
sub
clc
pop
xchg
pusha
loopne
sub
dec
xor
add
xor
bound
sbb
mov
or
and
adc
xor
dec
sbb
cwtl
clc
mov
mov
scas
test
mov
xor
jbe
pushf
push
dec
es
xchg
add
xchg
or
insb
xchg
xchg
divb
push
loopne
movsb
xor
cmp
push
push
push
dec
loopne
mov
pushw
jl
rclb
lret
dec
or
add
cmp
pusha
xorb
add
and
test
pusha
xorb
push
orb
mov
outsb
ljmp
mov
dec
lods
cmp
mov
popa
mov
jae
cmp
cmpsb
pusha
pusha
mov
mov
pushf
cmp
jo
add
inc
and
pop
je
or
pop
out
add
push
dec
push
push
or
or
xchg
sbb
fisubrl
xchg
mov
mov
add
push
and
mov
cmp
or
or
mov
loop
xor
out
scas
xor
cmp
or
inc
xor
movsl
addb
ds
dec
xsavec
pop
inc
adc
popa
addb
or
lcall
sub
sbb
jno
or
je
out
sbbl
mov
mov
loop
aam
ret
repnz
xchg
cwtl
fldl
push
mov
mov
push
faddp
mov
push
addb
push
or
paddq
jle
sbb
xor
mov
andb
cmp
repnz
int3
in
cwtl
add
cwtl
inc
jo
jp
sub
sbb
jo
pusha
cwtl
adc
mov
add
mov
lods
stos
rorl
push
ror
mov
sahf
pop
xchg
push
add
inc
or
cmp
ret
dec
lcall
nop
adc
mov
adc
sbbb
and
jge
cli
add
int3
or
cli
mulb
or
sub
icebp
rolb
push
add
push
mulb
sub
ret
enter
xor
dec
cmp
pop
aaa
lcall
push
cwtl
adc
push
pusha
pop
jo
xor
push
dec
mov
sbb
sub
push
pop
bound
or
pop
outsb
push
adc
dec
loope
sahf
cltd
sbb
aam
sbb
cmp
push
adc
sbbb
cmp
and
cmp
aas
loop
xor
adcb
jp
push
pop
xor
xor
repnz
adc
mov
outsb
cmp
loopne
shr
jne
cmpsl
mov
mov
clc
push
cs
fsub
jnp
and
cli
lcall
scas
inc
push
ds
cmp
out
shl
lock
sbb
in
add
out
mov
jmp
incl
pop
or
loope
rcr
sbb
or
add
cs
cld
jg
popf
or
bound
add
add
fs
clc
adc
dec
movsl
or
enter
push
mov
adc
rorb
dec
stos
sbb
cli
andl
xor
xor
daa
sbb
or
jg
cmp
sub
je
sbb
mov
push
iret
xor
subl
push
lea
push
push
push
push
pushf
mov
push
call
cltd
push
dec
sbb
sbb
pop
idivb
aad
mov
out
stos
jp
mov
jo
fmuls
mov
addr16
iret
lret
jbe
js
shl
es
adc
jno
std
inc
mov
stos
cmp
fdiv
xlat
add
mov
in
insb
lcall
xlat
rcl
idiv
dec
cmp
or
int3
adc
in
xchg
xchg
pop
data16
sub
in
push
movsb
nop
dec
add
les
leave
stos
lock
xchg
xchg
arpl
adc
lret
sub
inc
pop
stos
mov
lfs
and
ss
or
bound
mov
imulb
into
pop
cmp
xor
add
dec
or
xor
or
mov
xchg
imul
orb
fs
sahf
mov
aam
dec
push
jo
aad
add
and
test
lock
push
or
xchg
fs
mov
imul
dec
adc
lods
int3
xchg
stos
or
inc
scas
sbbl
push
dec
add
add
test
cmp
mov
loopne
push
gs
int3
sbb
pushf
push
jo
xor
out
push
movsb
repnz
xchg
cmp
xchg
mov
or
mov
fmuls
inc
adc
aad
adc
lock
aad
adc
mov
rcr
cli
dec
into
adc
fdivs
fmuls
xor
add
xor
mov
lret
sub
sbb
push
orl
mov
test
fdivr
sbb
push
testb
pop
push
sbb
lcall
cmp
imul
push
mov
mov
add
xchg
sahf
inc
xor
xor
xchg
dec
mov
sub
sub
pop
insb
pushw
es
dec
out
rcrb
jnp
andb
adc
ljmp
scas
mov
push
lret
test
ds
imul
lret
pop
adc
sar
cmpsb
mov
mov
xor
push
sahf
loop
je
cmp
cmp
int3
dec
jne
nop
add
sbb
inc
lret
pusha
dec
dec
loop
outsb
xchg
sub
outsb
stc
sbb
dec
and
add
inc
xor
lret
fprem
add
lret
dec
jo
cld
loopne
add
inc
bound
lods
push
mov
rorb
mov
aam
xchg
sbb
inc
cmp
iret
xchg
test
cmp
jnp
outsb
and
mov
dec
fadd
and
xchg
sub
mov
or
pop
loope
push
cmp
sub
dec
leave
push
or
call
dec
and
jl
outsb
xor
cmp
xchg
mov
or
jo
data16
push
mov
pop
mov
dec
push
dec
xor
pop
enter
xor
mov
bound
loop
pop
add
xchg
ds
lea
sbb
jp
inc
pop
xchg
aaa
mov
jp
sub
push
pop
and
pusha
clc
inc
mov
nop
adcl
adc
sahf
add
loopne
mov
sub
test
adcl
ror
pop
cmpsb
jbe
loope
bound
rcrl
call
pop
push
imul
dec
sub
xchg
faddl
sbb
mov
test
xchg
add
pop
push
jb
xor
aaa
sub
lods
mov
stos
pusha
xchg
add
jmp
insl
in
aaa
fisttpl
xor
push
daa
cmp
sbb
insb
setne
daa
clc
fdivs
mov
loopne
xchg
shlb
mov
inc
rcrb
jb,pn
pop
push
loopne
data16
sub
and
je
or
mov
call
or
mov
cmp
sbb
ficomps
js
repnz
shlb
lcall
lods
loop
xor
inc
addr16
push
enter
and
inc
loope
cmpsb
xchg
cmpsb
pushw
xchg
loope
xchg
push
repnz
push
je
or
mov
hlt
inc
push
jp
test
test
push
xchg
popf
fdivl
mov
xor
push
cmpsb
adc
in
ret
loop
mov
adc
repz
das
xchg
cltd
hlt
pop
dec
mov
insb
mov
xor
out
dec
movb
sub
int3
dec
cmp
push
push
js
aad
inc
mov
inc
mov
aam
mov
push
add
and
xor
xchg
or
xor
aad
xor
sarb
aad
adc
dec
ret
or
rcr
pusha
insb
push
dec
lock
push
subl
adcb
push
xor
int3
ret
inc
jp
push
mov
andb
jle
mov
jl
sbb
sbb
rclb
dec
add
jae
inc
or
push
rcl
bound
jl
dec
inc
lock
push
xor
bound
sahf
and
xchg
sub
sub
loope
cmp
push
test
push
ret
lea
xchg
rclb
repnz
lret
push
jbe
xchg
pop
dec
shlb
xor
push
daa
fcoms
lret
or
sbb
pop
push
stos
inc
out
sbb
addl
and
push
mov
loope
mov
in
je
xor
mov
imul
js
jne
rolb
in
sbb
fidivs
push
push
enter
int3
or
int3
cwtl
push
add
jne
push
into
xchg
jo
sub
mov
pusha
cmp
jmp
out
or
ret
and
lods
popa
stos
inc
add
add
and
mov
dec
in
xor
pop
add
or
jle
pop
sbb
dec
clc
loop
or
xor
and
in
xchg
sbb
xchg
bound
jo
push
jb
inc
test
scas
xor
xor
loopne
add
sbb
add
sbb
leave
pusha
testb
clc
test
and
adc
loopne
cs
out
jecxz
stos
sbb
cmp
out
je
je
push
and
cmpsb
outsb
xchg
int3
orb
push
xchg
int3
add
subb
pop
scas
add
outsb
enter
pop
lock
jp
inc
mov
bnd
pusha
ss
mov
dec
push
lret
call
push
cmc
pop
mov
call
incl
xor
dec
adc
es
dec
and
inc
daa
test
inc
idivb
loope
ret
push
and
add
daa
and
xchg
cmp
or
rcll
pop
outsb
inc
mov
dec
lods
rcll
and
inc
clc
cmp
call
push
jbe
xchg
jge
push
dec
rolb
add
outsb
or
inc
jp
lret
sub
cmp
loopne
aad
or
pop
rorb
push
xor
and
xor
cld
mov
movd
push
add
test
shll
cwtl
cmp
and
xchg
xchg
or
or
fwait
dec
loope
mov
and
push
dec
cvtps2pi
les
add
fmuls
rolb
cmpsb
and
xor
jbe
or
ret
mov
fmull
and
lea
in
sbb
nop
inc
es
or
xchg
push
push
cwtl
in
push
cs
xor
dec
cwtl
je
xchg
push
mov
add
pusha
fs
xchg
push
arpl
jle
inc
add
adc
ljmp
outsb
jbe
out
leave
push
sub
push
testl
pop
int3
push
rcrb
or
pop
es
or
in
adc
xor
xor
insb
stos
mov
inc
loopne
dec
pop
xor
push
xor
cs
xor
xchg
xchg
loop
sbb
sub
adc
and
xchg
push
lds
pop
mov
insb
orl
xchg
pusha
hlt
pusha
xor
or
sbb
cmp
les
jo
jp
and
pop
daa
bound
mov
and
ret
add
cmpsb
insb
fdivr
addb
lock
push
notb
loopne
and
inc
scas
js
fs
mov
add
popf
jp
stc
dec
mov
hlt
push
adc
mov
or
loopne
sbb
shll
cs
shlb
test
add
cwtl
or
cli
and
fadd
pop
cmpb
or
mov
pop
scas
loopne
bound
aaa
in
mov
sub
mov
mov
pop
and
subb
push
loope
sub
push
xchg
push
dec
mov
jp
add
fdivrs
je
sbb
mov
add
popa
gs
mov
ss
pop
pusha
adc
adc
push
daa
add
rorl
stos
scas
mov
inc
out
mov
push
xchg
mov
sbb
push
xor
mov
cmp
out
push
or
je
push
cmp
add
mov
push
xchg
test
cli
jl
daa
mov
mov
push
push
ljmp
insl
mov
jbe
adc
test
xchg
pusha
xchg
add
dec
push
cwtl
in
cmp
push
sub
xor
rcrb
inc
call
loopne
call
xor
adc
sbb
sub
adc
fstpl
jns
jo
cmpsb
fsts
js
mov
push
dec
mov
pop
push
and
sbb
sub
lret
push
stos
outsl
lret
inc
leave
in
sub
insb
lods
out
xor
rcrl
pop
or
jns
aam
xchg
loopne
mov
and
mov
push
jle
sbb
mov
pusha
add
push
sbb
sbb
leave
insb
or
inc
ljmp
pop
add
xor
hlt
mov
adc
mov
test
bound
into
clc
or
sbb
sbb
push
je
out
add
pop
jbe
loopne
cmp
cltd
mov
mov
and
push
mov
dec
xchg
lds
inc
mov
pop
daa
adc
cmpsl
push
arpl
jl
adc
adc
cmpsb
cs
rcrb
sbb
xchg
push
in
clc
jno
sbb
sbbb
ljmp
aam
sbb
sub
xor
xchg
sbb
inc
or
jns,pt
adc
bound
popa
add
mov
int3
mov
je
add
ret
shlb
add
cmp
mov
popa
daa
pop
ret
loopne
outsb
mov
loop
stos
cld
or
ret
fnstenv
outsb
stos
cli
das
loope
adc
add
test
bound
xor
enter
sbb
popa
jl
fsubrl
loopne
lret
add
pushf
inc
and
ficompl
adc
add
jo
out
and
es
jl
sub
mov
lods
xchg
or
jecxz
je
stos
mov
adc
push
fdivrl
mov
pop
es
pop
loope
xor
cmpsl
mov
pop
dec
leave
and
inc
lcall
xor
sbb
inc
and
js
push
mov
pop
cwtl
dec
enter
int3
lods
push
cmp
push
or
rorb
sahf
leave
dec
or
fmul
inc
fisubrs
push
rorb
and
shrb
shrl
test
or
or
lret
je
jbe
and
mov
add
bound
and
cmp
push
cmp
in
lea
xor
lods
into
sbbb
pushf
bound
or
jo
ds
out
in
pop
push
int3
lcall
jp
pop
test
xchg
sbbl
sub
cmp
outsb
enter
inc
add
scas
pop
inc
and
xor
and
dec
or
push
adc
adc
cltd
pop
stos
push
mov
cmp
aam
add
fdivrs
sbb
enter
sahf
fadds
stos
and
adc
shlb
cwtl
xlat
loope
inc
xor
out
mov
xor
and
fdivp
push
dec
jb
call
jmp
xor
add
add
jae
pop
push
sbb
orb
dec
adc
xor
lret
or
xchg
pop
or
hlt
adc
test
dec
mov
dec
sub
les
loope
mov
call
jb
or
repz
push
fiadds
loopne
lea
cmp
jnp
aad
lahf
int
mov
dec
or
add
lret
sbb
fcoml
lret
test
fmuls
or
or
loop
cld
lods
mov
mov
repnz
sub
adc
test
sbb
rolb
inc
push
in
ja
out
dec
lock
jae
xor
shl
xor
int
xorl
jg
cld
mov
mov
sar
rcr
mov
cmc
mov
mov
dec
call
loope
mov
and
rcr
jnp
sbb
shl
neg
repz
sub
test
jb
pop
into
add
fbstp
xor
dec
dec
pop
rol
enter
test
adc
add
jl
lock
adc
xlat
add
int
adc
dec
neg
add
and
negl
xchg
les
jge
inc
inc
pop
add
lock
and
shrb
mov
mov
rcl
es
rcr
ret
add
dec
xor
fildl
neg
out
xchg
add
aaa
mov
ds
pushl
push
mov
jbe
in
add
dec
les
push
fisubrl
not
ljmp
fmuls
andb
inc
clc
sub
test
push
push
cmpl
mov
jecxz
sbb
pop
mov
outsb
mov
adc
adcb
or
pop
and
imul
inc
int3
out
push
jne
pop
cmp
shl
rol
pop
jl
pop
adc
cmpsl
sbb
cmp
icebp
push
iret
shll
sub
sbbb
clc
es
push
call
or
adc
sti
inc
push
rcrl
movsb
push
or
and
stos
lock
push
sub
or
ret
adc
lret
sbb
stos
shlb
cmp
add
jbe
je
push
lahf
mov
pop
cmpsb
add
cmp
sbb
into
les
iret
cmp
inc
sbb
lret
xor
or
mov
or
cwtl
fadds
add
adc
add
fsub
add
int
sub
push
cld
shr
mov
cmp
cwtl
push
inc
scas
loope
sbbb
add
sbb
lea
push
push
pusha
adcb
test
push
mov
sub
inc
outsb
popf
lret
insb
mov
stc
push
dec
outsb
mov
aam
lods
push
dec
inc
sub
test
cli
inc
cmp
aam
aam
fidivrs
imul
and
cmp
or
mov
mov
mov
out
adcb
ds
xor
mov
or
push
xor
push
outsb
or
stos
pop
sahf
push
lret
add
ljmp
cmp
test
fs
or
es
rclb
andb
mov
cmp
adc
jle
adc
pop
push
js
jl
rcrb
loopne
adc
adc
push
adc
nop
shlb
pusha
ret
add
inc
mov
cmpsb
xor
push
pop
lcall
sub
sahf
push
ret
sub
test
adc
adc
lret
cmp
fwait
in
int3
push
mov
rol
or
sub
sbb
sbb
mov
pop
movsb
enter
cmpb
outsb
dec
pop
inc
dec
pop
test
mov
ljmp
gs
aam
test
sbb
les
xor
lock
pusha
inc
shlb
cmpsb
sub
lret
mov
fcomp
adc
xchg
or
mov
cmp
adc
arpl
cmpsb
push
dec
cwtl
mov
mov
into
add
popf
sbb
out
insb
push
inc
add
into
sbb
pop
jno
sbb
es
lret
sub
jl
pop
outsb
xchg
inc
arpl
les
push
push
sbb
cmp
in
inc
in
xor
push
push
jo
lods
sbb
outsb
jns
subl
mov
or
add
dec
xchg
push
nop
rorl
out
clc
xchg
push
pushf
loop
xchg
push
dec
bound
mov
mov
push
or
out
dec
sbb
stos
or
xor
dec
or
into
xor
add
push
adc
and
cld
push
pusha
ret
enter
push
cmp
loop
jp
loopne
aam
cmp
inc
jl
push
aam
call
add
into
andb
xor
xor
idivb
lods
mov
adc
sub
inc
dec
pop
cwtl
movsb
ret
mov
and
adc
mov
stos
js
or
xchg
rclb
push
push
sbb
jb
push
push
jo
push
out
push
mov
daa
inc
test
push
inc
std
sub
xchg
xor
jo
mov
cmp
mov
out
dec
add
dec
je
cmp
scas
loope
xchg
adc
lock
inc
add
push
add
push
mov
jecxz
pusha
push
sbb
hlt
outsb
sub
cmp
jo
lcall
mov
sub
cmc
and
or
push
sub
and
lret
jbe
lds
adc
addr16
cmp
push
subb
data16
insb
fs
in
lock
sub
dec
add
mov
dec
pop
inc
sbb
aam
je
add
mull
out
sbb
idivl
out
inc
adc
add
mulb
cs
leave
add
sbbb
aaa
sti
push
inc
adc
pop
neg
shr
rol
push
dec
or
idiv
shl
not
push
inc
push
and
jns
out
js
push
pop
and
shlb
nop
add
sbb
add
xor
inc
clc
pop
clc
sbb
inc
push
sahf
test
xchg
in
adc
pushw
or
mov
cmp
pop
sar
xchg
jne
sbb
in
mov
xor
push
call
pop
or
scas
shl
jmp
mov
rorl
or
xchg
or
into
add
and
mov
pushf
mov
ja
xor
and
inc
and
jno
jle
mov
jp
stc
in
inc
cld
and
mov
and
cmp
ja
movsl
lock
lock
cld
mov
es
lahf
lret
dec
in
lock
xor
sahf
lock
sbb
push
or
test
add
fisttps
test
fdivl
jb
mov
add
add
in
out
or
stos
jmp
sbb
or
pop
add
decl
or
sar
rcr
rcrb
aam
sub
hlt
jmp
fildl
add
and
out
ja
sbb
xchg
mov
xchg
lock
adc
enter
inc
ret
sbb
mov
add
push
add
cmp
push
xchg
mov
jg
xchg
loope
xlat
adc
shl
divl
sbb
fsts
jb
dec
clc
and
sbb
leave
inc
and
loopne
sub
jae
add
sbbl
xchg
pop
sub
push
mov
adc
add
test
push
cmpsb
jmp
push
sub
cmpsb
out
pushf
scas
loop
mov
xor
test
sub
mov
aam
xlat
fs
inc
adc
clc
loop
jo
pushf
mov
adc
jle
xor
or
sub
adc
sub
jo
cwtl
clc
adc
fsubrs
pusha
push
lock
adc
xor
mov
sbb
and
int3
into
sbb
jb
lret
leave
mov
and
lods
scas
ret
movb
orb
sbb
inc
mov
push
jo
add
jmp
or
jo
cmp
push
lret
mov
loop
inc
sub
mov
into
mov
pop
dec
xor
sub
sbbb
xor
lods
push
sbb
rolb
leave
dec
push
dec
les
xchg
push
jo
jnp
add
lea
dec
sub
jmp
xchg
fsubl
push
pop
xor
xor
inc
add
push
add
push
push
daa
test
xor
sub
test
mov
dec
inc
je
dec
push
loopne
lcall
dec
int3
fs
add
adc
adc
ret
jge
xorl
pushf
add
add
add
xchg
test
add
test
adc
cwtl
sbb
lea
or
les
push
inc
rcrb
data16
mov
ret
add
xor
or
pop
movsb
add
lock
mov
sub
mov
add
sahf
add
fsubrs
dec
jo
and
in
cmp
push
add
int3
jle
dec
dec
adc
test
hlt
mov
or
popf
stc
xchg
cs
int3
sub
jb
mov
xchg
fiaddl
add
cwtl
xor
lcall
dec
and
xor
mov
stos
imul
xchg
inc
rclb
adc
inc
arpl
jl
lods
cmpsb
and
cltd
adc
enter
inc
mov
inc
pusha
cmp
and
and
ret
sbbl
icebp
xor
cmp
ret
popa
cmp
pusha
jbe
inc
add
aam
push
mov
mov
jo
insb
and
lods
dec
inc
cmp
shlb
into
lods
jb
sub
pushf
jo
xor
xchg
push
daa
mov
mov
adc
orb
mov
dec
data16
dec
nop
or
inc
ret
add
jb
mov
xchg
push
adc
mov
shlb
mov
jecxz
or
xor
idivb
adc
js
lret
loop
addr16
inc
pop
sub
test
mov
aam
push
or
pop
scas
rolb
jle
out
inc
mov
push
adc
jns
movsl
add
test
xchg
hlt
out
mov
sbbl
inc
into
mov
xchg
cltd
int3
aam
mov
lret
loopne
pusha
aam
add
adc
ljmp
sbbl
aad
popa
daa
sub
xchg
xchg
scas
bound
test
sbb
call
fidivrs
or
int
in
lods
add
push
lcall
call
cmp
inc
jo
test
enter
fsubr
icebp
aam
push
xchg
ja
mov
mov
call
les
push
adc
out
or
lock
adc
pop
bound
cmp
fdivl
inc
clc
add
shlb
push
out
and
push
pop
rcll
cld
jl
adc
adcl
cwtl
jne
jne
add
push
cmpsb
addb
mov
gs
push
mov
mov
inc
and
ret
sub
cmp
push
xorb
xor
lret
dec
sub
mov
cmp
pusha
loopne
clc
mov
mov
jp
jbe
loop
data16
les
mov
add
aaa
sub
or
push
pop
jp
mov
push
enter
mov
push
jo
adc
mov
adc
je
lods
insb
xor
clc
ljmp
mov
push
popa
xchg
insb
jo
sbb
ret
sub
dec
popf
push
sbb
fdiv
mov
repnz
add
add
loop
movsb
ret
push
mov
mov
les
mov
add
outsb
sbb
ret
push
test
and
dec
xor
xor
imul
push
mov
out
xor
xor
inc
sbb
fadds
mov
cmp
add
mov
and
xor
add
add
sbb
push
sub
sbb
lods
sahf
int3
notb
mov
pusha
lret
cmp
dec
inc
inc
or
lock
push
push
adc
dec
or
int3
dec
mov
xchg
mov
sub
xor
xor
jbe
mov
arpl
xor
push
cmpsb
cmp
or
jo
push
xor
cli
shrb
xchg
ret
jle
cwtl
add
and
ljmp
in
jno
adc
into
push
pusha
mov
xor
je
mov
aaa
xor
pushf
add
shll
repnz
loopne
cld
imulb
roll
cmp
add
and
lret
loopne
inc
sub
push
pop
and
rorb
idivb
dec
push
mov
mov
dec
outsl
cwtl
inc
orb
cmp
inc
sahf
adc
mov
mov
add
add
rclb
adc
ret
xor
add
cwtl
out
add
dec
es
sub
xor
shlb
xor
xchg
cmpsb
movsb
pop
or
cltd
sbb
testb
scas
adc
sbb
sub
sahf
rol
pop
xor
js
pop
dec
sub
mov
or
dec
fnstcw
mov
enter
mov
je
rorb
femms
sbb
ljmp
daa
sbb
cmp
lahf
add
ficomps
outsl
cld
inc
mov
ret
shrb
or
and
mov
adc
xchg
out
xor
jbe
flds
sbb
dec
push
or
adc
enter
call
jmp
xor
push
sbb
jmp
xor
cmp
adc
in
test
andl
in
not
arpl
pusha
xor
mov
push
arpl
or
in
mov
hlt
sbb
loope
add
rol
imul
add
and
sar
rcr
add
int3
rcl
shr
push
pop
pop
daa
mov
pop
in
pop
dec
adc
shl
lock
jmp
ror
xchg
rolb
es
jl
inc
dec
or
or
cmp
lret
inc
fadd
or
pusha
adc
dec
jg
in
sti
ds
sbb
dec
loopne
or
les
add
adc
cmp
or
clc
shlb
sub
xor
clc
mov
jp
push
mov
and
cmpsb
mov
xor
mov
insb
gs
ret
push
frstor
movsb
sahf
xor
test
jbe
pop
test
xor
out
adc
or
in
cmp
leave
data16
enter
inc
test
adc
dec
pushf
or
mov
mov
repnz
cmpsb
sbb
dec
mov
sbb
ret
pop
pop
or
adc
in
ret
mov
lock
push
mov
leave
cmp
sbb
push
loopne
xor
jmp
ret
mov
jp
xchg
adc
inc
mov
mov
inc
xor
sub
leave
movsl
sub
add
push
popf
mov
push
push
sbb
es
pusha
xor
dec
mov
stos
or
out
push
out
sbb
test
bnd
addl
inc
sub
adc
ret
adc
shlb
adc
ret
lret
les
add
stos
cmc
aam
push
mov
lock
call
xchg
or
adc
sbb
pop
data16
push
jle
aam
adc
xor
xchg
sbb
xchg
xor
add
inc
pop
add
adc
and
push
or
inc
add
pop
or
cld
jl
inc
test
fs
loopne
lret
fsubrl
push
xchg
js
push
and
add
outsb
push
jo
and
mov
outsb
lret
sarb
cwtl
push
inc
andl
adc
add
or
cmp
mov
cmp
les
xchg
cmpsb
or
shll
dec
mov
push
jbe
xor
cmp
add
sbb
pop
push
pcmpgtd
push
push
jo
mov
mov
push
repnz
xchg
mov
js
icebp
and
xor
sbb
inc
dec
cmp
jno
mov
adc
shlb
repnz
and
and
push
pushf
push
pop
cwtl
mov
arpl
mov
jp
xorl
int3
adc
mov
cs
movsb
adc
mov
rorb
adc
loopne
pop
movsb
popa
push
and
js
ds
mov
xchg
clc
push
aam
or
into
adc
test
int3
test
xchg
inc
call
xor
mov
popf
or
xlat
add
or
mov
or
jbe
fsubrs
arpl
sbb
roll
or
pop
je
les
xor
pop
dec
cld
and
pushf
adc
pop
test
orl
mov
ret
stc
fcompl
pop
popf
sbb
adcb
xor
incl
inc
shlb
push
les
icebp
sar
sbb
leave
dec
lcall
inc
lea
push
clc
ljmp
cmp
repnz
loop
inc
sub
lret
in
loope
sbb
movsb
dec
add
jo
push
cltd
push
fmul
sub
test
ror
in
enter
dec
daa
cwtl
pop
rolb
js
and
enter
lods
inc
mov
cmc
push
insb
rolb
and
add
rclb
outsb
roll
lods
xor
push
aad
dec
mov
ljmp
out
xor
or
xchg
sbb
lcall
movsb
in
jns
shl
or
mov
jecxz
mov
push
ret
int3
and
pusha
popa
inc
add
pop
addb
ss
ljmp
mov
adc
rcrb
xchg
loop
xorb
in
lret
outsb
adcl
cmp
or
mov
jp
cmc
ds
inc
or
shl
xor
pop
mov
js
pusha
or
xor
mov
mov
adc
inc
je
jp
mov
add
lods
fldl2t
mov
xchg
xchg
and
push
popf
movsb
push
mov
xor
inc
pop
rorb
and
xor
sbb
inc
out
jp
lea
mov
test
push
js
bound
mov
xchg
dec
xor
mov
xchg
sub
mov
addb
mov
in
or
xorb
shrb
pop
xchg
adc
cs
xor
adc
mov
cwtl
scas
les
ljmp
fdivs
sbb
daa
mov
lcall
jb
mov
fdivrs
adc
ljmp
mov
inc
fisttpll
mov
or
cmp
mov
enter
enter
push
int3
rolb
packsswb
mov
add
mov
test
pop
jle
push
or
xchg
adc
dec
fsubl
jbe
xchg
inc
add
push
mov
jb
popf
dec
dec
enterw
xchg
hlt
call
push
stos
xchg
dec
sub
sbb
add
or
pop
mov
dec
es
cmp
lock
loopne
loope
test
movsb
in
or
mov
lock
loop
inc
jo
jecxz
mov
test
push
xchg
ret
test
push
pusha
jmpw
lock
inc
mov
adc
popa
adc
cwtl
sahf
cmp
int3
pop
jmp
sbb
addb
shll
inc
sub
sti
sbb
in
cltd
push
imul
xor
inc
mov
aam
shlb
push
cmp
inc
sub
popf
sbb
loope
cld
bound
or
rcrb
and
cmpsb
ljmp
push
push
dec
cmp
es
pop
jns
pop
mov
and
bound
es
and
out
and
dec
outsb
pushf
sahf
add
or
movsb
ficomps
sarl
sub
in
scas
push
cmpsl
daa
ret
xchg
mov
jecxz
fs
mov
mov
mov
mov
sub
hlt
xchg
loopne
test
mov
dec
notb
dec
test
into
xchg
lea
in
mov
dec
stos
xor
stos
jle
inc
ret
fldl
lods
mov
movsl
loopne
dec
or
shl
add
pop
loopne
push
stos
push
ret
xor
les
or
cmp
shlb
cmp
dec
mov
test
and
sbb
xchg
push
push
repz
pushf
xor
sub
mov
xor
loopne
clc
ja
push
popa
cs
pushf
push
xchg
add
dec
or
sbb
push
test
sbb
mov
jbe
cli
xor
je
inc
loop
mov
ret
push
sbb
dec
pushf
and
mov
xor
loopne
adc
pop
es
hlt
popa
xor
sar
mov
je
cwtl
add
ret
in
push
mov
and
push
ret
sbb
out
leave
cmp
mov
mov
sub
push
cli
ficompl
loop
cltd
cs
pop
jbe
outsb
pop
lret
outsb
popa
arpl
scas
push
js
push
inc
test
add
mov
inc
adcb
mov
sbb
movsb
loopne
xor
mov
cmp
pop
dec
xchg
test
sbb
fs
sahf
repnz
mov
mov
cmp
daa
into
sbb
pop
ret
xor
push
mov
add
stos
sbbl
test
ret
or
mov
jecxz
inc
cs
lcall
add
mov
lods
inc
aam
in
call
pop
jg
fcmove
arpl
adcb
mov
push
movsl
xchg
and
mov
ror
cmc
push
pop
sbb
pusha
mov
in
xor
xor
mov
loope
lods
int3
loopne
sbb
and
fs
inc
mov
mov
xor
test
mov
xor
loop
inc
add
lret
ljmp
aam
sbb
mov
ret
xchg
jo
push
push
shlb
ret
push
movsb
or
or
add
xor
lret
xchg
sbb
push
data16
enter
mov
data16
add
addb
ljmp
cltd
adc
js
ret
or
dec
jle
mov
adc
outsl
pushf
insb
jb
or
je
es
dec
fcmove
scas
dec
fucomp
push
cld
mov
rol
or
cmp
mov
push
sahf
mov
adc
cwtl
jno
or
decl
cmp
adc
in
add
inc
or
add
pop
cwtl
sbbb
sbb
push
dec
or
push
push
xchg
or
popf
sbb
pop
lea
xchg
js
cmpb
outsb
inc
stos
sbb
test
loopne
push
xchg
dec
push
push
and
fimull
or
mov
pop
add
ficoml
or
mov
lods
jno
push
mov
cld
lret
sbb
nop
mov
sub
mov
add
roll
test
add
pusha
push
out
and
sbb
dec
mov
pop
cmp
loopne
loop
or
divl
mov
cmp
daa
and
sbb
data16
mov
imul
shrb
outsb
push
push
mov
jp
or
repnz
sub
xor
dec
pusha
ds
cmp
jmp
sub
jp
or
mov
cmpsl
jo
dec
xchg
cld
in
sbb
mov
sbbl
push
loop
inc
bound
sbb
xchg
ret
lods
dec
cmp
loop
xchg
sbb
sahf
enter
lret
add
mov
xchg
jp
push
js
popa
sub
and
pop
xor
mov
ret
xor
pop
es
or
or
pop
les
negb
mov
ret
mov
sbb
mov
push
push
xor
pop
ljmp
loop
jo
sub
fmuls
mov
mov
popf
adc
dec
push
mov
jl,pn
jne
xlat
sub
jo
xorb
cmp
scas
mov
jl
loopne
or
fsubrs
mov
jle
dec
inc
popf
fimull
mov
sub
mov
dec
and
loop
jno
mov
pop
loop
xchg
sbb
inc
roll
data16
adc
jbe
push
sub
xor
mov
loop
dec
jb
add
inc
cli
sub
mov
xchg
sbb
fnstsw
ret
xor
jbe
dec
out
rclb
dec
and
mov
or
imul
test
push
mov
pop
lret
ljmp
add
dec
cmp
mov
pop
hlt
xor
xor
push
aaa
xchg
xor
adc
in
aam
sbb
cli
es
pop
test
jno
mov
test
fisttpll
out
js
mov
lret
dec
out
xor
pop
pop
out
pusha
test
push
xor
dec
les
cwtl
jo
orb
mov
in
mov
or
inc
js
lcall
pop
mov
call
xchg
nop
sbb
hlt
cmp
jl
or
xor
inc
xor
test
out
push
inc
or
bound
leave
rolb
ret
inc
test
lcall
cmpb
or
adc
cs
in
push
dec
clc
xchg
push
pusha
mov
mov
xor
xor
mov
sti
pushl
sbb
pop
fisttps
popa
xchg
jl
outsb
cwtl
lds
jle
bound
dec
jg
ret
add
cmp
jmp
or
test
aam
jno
cmp
and
dec
data16
hlt
pop
cld
test
push
inc
ret
js
adc
inc
push
mov
mov
popa
rclb
push
les
out
xor
sahf
xor
addl
and
add
pop
stos
push
pop
mov
and
jo
orl
ds
imul
push
and
xchg
pusha
sarb
push
mov
orb
sbb
and
cli
xchg
or
fdivrs
scas
lea
movsb
nop
cmpsb
js
pop
sub
inc
dec
lea
mov
sbb
xor
adc
movsb
ja
push
or
adc
or
mov
adc
shr
ss
cmpsb
sub
pusha
outsb
jo
push
outsb
and
cwtl
sub
sbb
cmpsl
mov
cmovns
add
xchg
sbb
mov
jo
lods
xor
or
lock
bound
fs
dec
mov
add
sbb
jp
push
daa
jecxz
shll
xchg
or
out
lods
xor
nop
enter
push
or
push
pushf
lock
sbb
or
div
subb
daa
add
notl
inc
mov
shll
jo
sbb
into
imul
inc
or
orl
pop
sahf
mov
jo
pop
sahf
push
xchg
loop
sahf
lods
push
mov
test
sbb
lret
push
call
mov
inc
push
xchg
cmp
xor
sbb
push
and
xlat
in
lret
jle
xchg
dec
addl
mov
push
xor
loop
mov
push
mov
cmp
imul
scas
sbb
lret
pop
push
or
sub
push
bound
je
inc
jp
cmpsb
pop
loop
orb
adc
notb
pop
push
mov
and
popf
pusha
data16
loop
mov
sub
xor
or
je
and
fdivl
enter
das
insb
loopne,pt
loope
mov
fcom
jb
or
lock
cmp
push
sbb
adc
movsb
roll
test
mov
popa
cli
ret
mov
pop
pop
and
ret
cwtl
push
cmp
test
dec
mov
js
mov
cltd
jne
subb
or
mov
mov
in
xchg
pop
xor
insb
lock
lret
je
add
push
test
ds
push
jae
vsubss
into
mov
push
mov
mov
xchg
and
std
mov
out
clc
push
movsb
add
ror
shlb
mov
xchg
cld
xor
mov
in
mov
mov
push
mov
xchg
add
inc
test
push
jo
cmpsb
push
mov
or
sahf
sub
add
rcll
push
int3
pushl
adc
and
test
out
push
aam
jp
test
add
cmp
dec
mov
js
xchg
and
test
repz
popa
popa
or
pop
add
or
insb
add
ds
cmp
pop
imul
pop
aas
ljmp
or
push
push
and
xchg
sub
cmc
mov
add
adc
add
mov
ret
es
mov
fsubs
jp
lret
push
xor
sbb
or
sub
ds
jb
add
sbb
loop
jo
popa
mov
mov
mov
shlb
mov
add
icebp
sub
cs
mov
jb
fdivrl
fs
je
mov
or
push
dec
sub
clc
dec
loope
leave
lods
push
push
in
push
stos
xor
or
mov
or
cwtd
sbb
or
push
loopne
es
and
cmp
xor
and
pop
pop
sub
in
jo
jle
pop
enter
cmpsb
push
inc
loop
xchg
aam
mov
dec
ror
pop
loope
es
pop
or
out
mov
ret
fcoms
and
add
add
xor
push
arpl
mov
cmp
fs
xchg
fdivrl
dec
daa
and
aaa
push
cmpsb
call
push
sbb
ljmp
out
xor
xor
mov
mov
jp
outsl
add
adc
dec
xchg
pop
inc
add
fcomp
rolb
cwtl
popf
pop
add
push
dec
adc
add
sahf
sub
loopne
xchg
out
jo
sbb
andb
sahf
push
mov
xor
push
jp
pop
xor
cmp
inc
dec
loopne
cmpsl
push
dec
mov
ret
sahf
arpl
imul
dec
jge
fs
xor
push
add
clc
mov
test
dec
sbb
jle
lods
pop
loopne
or
cli
inc
xchg
jle
and
inc
pop
push
pop
sub
add
les
fdivrl
mov
push
mov
xchg
jo
sub
add
mov
xchg
push
jle
push
or
scas
cmp
add
nop
push
mov
xchg
pop
add
repnz
xchg
in
test
cmp
and
in
push
xor
icebp
ds
cld
dec
xchg
sbb
push
js
and
mov
inc
cwtl
xor
mov
mov
and
push
pushf
and
punpckldq
je
movsl
inc
or
out
cmp
jb
shlb
mov
sarb
inc
addr16
les
mov
js
sub
sbb
rclb
call
add
inc
pop
sub
sbb
les
sbb
mov
push
adc
movsb
nop
xchg
adcb
push
cmp
cmp
mov
jbe
rol
dec
or
orb
lods
sbb
sub
mov
movsb
rol
dec
or
inc
mov
push
xor
scas
mov
loop
jo
and
jp
add
and
add
jp
call
loopne
mov
xchg
xchg
sbb
push
sub
sbb
inc
cmp
enter
nop
push
pop
or
mov
or
lods
push
xchg
xchg
pusha
hlt
adc
lcall
jbe
ret
rorl
outsb
clc
lods
mov
adc
push
push
and
cli
or
add
pusha
lock
data16
push
pop
jp
cmp
sub
inc
push
dec
cltd
inc
shlb
mov
dec
js
sahf
or
mov
dec
jbe
xchg
add
or
and
into
in
outsb
cli
ret
sub
sub
pusha
rolb
cltd
inc
sbb
les
mov
sbb
jle
xor
enter
push
xchg
cmp
je
daa
movsl
dec
mov
mov
mov
cmp
pop
inc
lcall
push
lods
mov
jo
add
mov
push
repnz
xchg
pop
pop
inc
and
mov
loopne
outsl
sbb
sub
aam
sbb
jo
outsb
jae
jo
pop
sahf
rorl
nop
adcb
rcrb
sbb
jl
lods
ret
js
lret
insb
sub
inc
mov
cld
out
gs
mov
scas
insb
stos
xor
cld
aam
lods
subl
push
out
call
lods
fadd
push
dec
call
pushf
push
cmp
pop
lret
test
push
loopew
jp
sahf
dec
push
fsubrl
cli
out
adc
add
and
stos
imul
dec
fnsave
je
or
dec
jns
or
or
or
adc
or
sub
jno
mov
adc
popa
jbe
movsl
and
sub
loop
jle
and
add
jae
and
mov
jo
and
es
cmp
dec
add
mov
dec
push
ds
mov
mov
hlt
pop
mov
rolb
dec
cs
or
out
sbb
jbe
push
pushf
dec
int3
xor
inc
in
ljmp
push
lock
cmp
repnz
pop
mov
ljmp
loop
adc
push
xor
pop
pusha
out
mov
cmp
pop
add
stos
movsb
daa
icebp
mov
xor
ret
and
xchg
inc
dec
pushf
jb
cmpsl
xchg
sub
push
dec
adc
adc
jns
inc
mov
jo
dec
scas
mov
xchg
mov
pop
loop
sub
dec
xchg
loopne
int3
jb
repnz
inc
or
lret
jo
pop
add
pop
lods
xor
test
sbb
xchg
das
and
pusha
jno
pop
adc
sbb
outsb
outsb
jo
mov
push
and
xor
subb
jmp
out
inc
mov
push
inc
test
inc
dec
sub
mov
push
inc
push
push
popa
mov
jb
or
leave
jp
and
cmp
test
rolb
and
les
pop
add
jp
les
iret
orl
insb
out
js
and
psadbw
adc
pop
test
scas
mov
or
out
dec
inc
jp
sbb
or
pop
ret
xchg
add
xor
cmp
push
xchg
outsb
dec
fsts
cmp
lods
roll
sbb
push
bswap
inc
xor
mov
mov
adc
test
test
jb
pop
pop
xchg
sbb
dec
pop
cs
pop
je
adc
sbb
pop
xchg
sbbl
cwtl
dec
jle
loop
or
dec
mov
pop
pop
fiadds
hlt
loop
xor
lock
sbbl
sbb
ror
or
push
rorb
or
jp
js
dec
adcl
test
mov
jl
cli
or
movsl
push
fmuls
xchg
pop
sub
and
ret
je
nop
cmp
add
lock
dec
into
call
lock
mov
insb
xchg
repnz
mov
dec
loope
jl
push
inc
ss
lea
cmp
add
imul
push
sbb
jl
add
push
inc
aam
dec
cli
xor
inc
inc
ficoms
cld
pusha
in
into
sbb
sbb
call
sarb
bound
mov
xchg
xchg
mov
add
popa
js
pop
xchg
shrb
sbb
movsb
jb
push
xor
dec
sub
imul
cli
cmp
sahf
ds
in
aam
rclb
jb
dec
dec
dec
sbb
inc
cmp
and
adc
mov
xchg
adc
mov
mov
push
inc
sub
pusha
repz
push
xorl
or
jp
aaa
mov
sbb
sbb
push
inc
loope
add
and
xchg
rcrl
test
push
jo
or
mov
call
mov
test
sbb
shrb
pop
jp
jae
inc
mov
shlb
cmp
in
sub
dec
jmp
mov
lock
shlb
or
jle
into
push
rorb
xor
xor
add
nop
mov
int3
cmp
mov
andb
fs
fsubs
adc
lcall
stos
inc
sub
push
cltd
sub
or
or
pop
inc
or
adc
rorb
push
outsb
cmp
pop
daa
mov
xchg
in
and
pushf
xor
jl
movsl
andl
addr16
add
mov
loopne
cs
or
inc
sbb
add
sbb
fmul
les
es
in
mov
pop
orb
mov
test
and
js
test
push
out
call
add
lds
test
popa
out
popf
xor
mov
sub
stos
xchg
and
mov
pop
dec
cmp
pop
test
test
push
cmp
pushf
adc
pop
push
leave
xchg
lods
adc
fsubr
decl
cmp
out
sbb
jmp
jne
out
push
cmpsb
fistps
in
sub
mov
pop
mov
jb
outsl
pusha
mov
roll
mov
sbb
inc
hlt
ret
adc
fs
xadd
adc
sahf
dec
jecxz
cmp
jp
loop
rcrl
add
pop
ret
pushf
sbbl
cmp
cmpsl
call
mov
add
xor
xor
jp
dec
adc
mov
out
push
rorb
ljmp
sub
pop
ret
pushf
or
push
push
push
push
and
and
sbb
mov
fisttpll
inc
sbb
dec
ret
or
lea
outsb
cmp
pop
mov
or
inc
sbb
aam
es
sbb
jmp
adc
ds
inc
cwtl
xchg
cmpsl
and
or
sub
jbe
loope
jo
in
or
rorl
sbbb
sbb
adc
mov
fidivrl
lods
inc
adc
mov
xchg
push
push
data16
sbbl
scas
mov
mov
mov
sbb
inc
sbb
shlb
sbb
xchg
cmp
sbb
xlat
xor
push
in
loopne
add
int3
xor
dec
inc
in
movsb
adc
clc
inc
jo
pop
mov
or
xor
push
pusha
or
ret
sub
pusha
ret
cwtl
and
mov
xchg
repnz
jo
or
sbb
and
jb
inc
bound
into
xchg
pop
mov
fadds
stos
dec
outsb
js
jmp
and
outsb
jne
jecxz
fmull
jb
fsubrl
loopne
mov
pusha
fs
or
aam
add
or
dec
mov
inc
xor
mov
in
inc
data16
test
ret
sub
inc
popf
inc
pop
pop
sbb
sub
rcrb
fldenv
mov
test
mov
dec
test
jbe
pusha
xchg
cmp
sbb
ret
or
pop
loopne
pushf
push
mov
js
sub
sbb
ret
add
cmp
es
push
xor
inc
adc
mov
mov
fimull
jle
push
sbbb
leave
ret
fcompl
ret
dec
cmp
test
les
sahf
leave
push
mov
clc
pushf
cmp
xchg
pop
sub
ret
push
sbb
xchg
mov
sbbl
inc
sub
clc
xchg
sahf
ret
push
or
outsb
cwtl
mov
pusha
into
cmp
inc
or
mov
repz
fsubs
mov
insl
lea
fcom
sbbb
pop
inc
pop
lret
xor
lock
enter
mov
loop
das
mov
mov
rcll
sbb
inc
inc
movb
sub
lock
stos
hlt
jb
cmp
fs
addr16
add
jo,pn
enter
xor
xor
je
clc
incl
and
pop
test
push
lret
lret
mov
add
out
xchg
pop
pop
mov
out
je
psignb
stos
test
jb
loopne
movsb
mov
rorb
nop
nop
mov
adc
sbb
cmp
dec
shrl
xor
and
pushf
mov
les
movsl
pop
add
cmp
dec
push
pop
mov
cmp
arpl
mov
enter
cmpb
lods
adc
push
orb
or
mov
sub
xorb
mov
shlb
cmp
add
xchg
enter
movsb
shl
icebp
int
xor
mov
mov
push
and
mov
or
or
sbb
push
pusha
pusha
jo
lret
pop
fisubl
gs
and
movsb
enter
jno
xor
push
sub
loopne
test
xor
pop
push
cs
jbe
adc
cli
cmp
pusha
and
mov
push
data16
push
inc
leave
inc
dec
xor
test
cmpsb
pusha
add
pop
xor
sahf
ficomps
mov
mov
data16
mov
mov
lock
icebp
cs
mov
or
and
pop
lock
loop
mov
dec
xchg
pop
enter
ror
pop
or
addl
cs
push
and
dec
sbb
je
mov
adc
loope
mov
jo
push
ret
mov
mov
out
pop
imul
and
sub
add
add
bound
js
add
adc
adc
mov
stos
test
lret
loop
push
seto
dec
jmp
jb
mov
aam
or
xor
int3
or
hlt
sub
dec
sbbb
xchg
lea
jl
sbb
daa
mov
in
push
mov
or
leave
cmp
in
ret
dec
sbb
aam
mov
es
mov
mov
nop
movsl
mov
rorb
test
cmc
push
sbb
inc
ficoms
push
jmp
pushf
mov
les
cmpsl
mov
ret
push
lret
and
sub
xor
cwtl
add
and
pop
outsl
bound
cmpsb
mov
add
pop
shrb
adc
adc
shrb
mov
test
outsb
or
pop
pop
ds
xor
xor
mov
loop
or
push
fcmovu
mov
push
xchg
push
push
or
lods
loope
loope
xor
sub
loopne
icebp
jo
mov
add
xor
ds
mov
lods
inc
inc
pushf
test
or
and
shll
cli
mov
sahf
sub
lods
and
inc
sbb
outsb
ret
and
inc
cs
pop
les
or
add
lods
aad
dec
jp
inc
out
in
in
lods
dec
test
add
jo
fsub
jne
das
pop
in
mov
cmc
outsl
cmp
jb
sub
insl
fmull
cmp
pushl
add
neg
add
push
ror
rol
ror
lcall
jge
fadd
inc
lock
mov
out
ss
push
push
sbb
scas
aam
mov
test
je
mov
sbb
cmpsb
xor
shl
adc
pop
nop
jns
lods
movsb
aaa
pop
call
movsb
repz
add
ja
mov
sbb
nop
push
or
sbb
inc
imul
fistpll
and
inc
jb
adc
inc
sbb
jne
xor
add
pushf
jge
pop
aas
movsb
and
xor
int3
out
rorl
lret
add
cmpsl
movsb
and
mov
out
addb
cmp
mov
aam
sub
rcll
nop
jle
add
in
shl
testb
or
fcompl
rolb
add
in
fdivrl
sbb
rorl
add
dec
fistps
fdiv
sbb
jmp
js
into
sbb
fisttpll
push
jle
out
push
cmp
xor
pop
cmc
pop
add
mov
xchg
aam
push
inc
xchg
fstps
sub
add
pop
mov
std
xchg
ljmp
add
xchg
inc
std
popf
cmp
mov
outsb
sbb
cmc
clc
or
add
jo
and
pop
inc
jno
mov
inc
and
mov
fidivrs
mov
sub
xchg
mov
scas
lea
pop
xchg
adc
rcr
xor
aas
inc
xchg
pusha
incl
and
push
mov
in
inc
insb
orl
pop
mov
sub
clc
adc
adc
pop
divb
call
mov
pop
fisttpl
sbb
test
dec
inc
adcb
mov
ds
pop
clc
lea
push
push
adc
pop
je
and
sbb
adc
or
push
into
xor
dec
ljmp
rolb
divl
test
in
outsb
lcall
sub
hlt
cmp
test
hlt
adc
sbb
fsubl
push
loop
jno
push
js
lcall
sub
rorl
push
mov
mov
sub
mov
or
jge
mov
xor
in
xchg
xchg
cmp
and
mov
leave
mov
jno
inc
mov
push
fldcw
push
das
xor
jp
adc
and
test
in
pusha
mov
outsl
add
jle
cmp
fisubrl
dec
add
xor
cmp
adc
jb
bound
xor
cmp
jo
aad
in
add
adc
or
rcl
jp
mov
jp
dec
nop
jmp
or
adc
add
aam
push
insb
dec
pusha
and
sub
xchg
aam
xor
dec
pusha
pop
adc
adc
xchg
enter
mov
jno
cmp
adcb
pusha
js
adc
jecxz
fnstsw
sbbl
nop
mov
dec
lods
pusha
push
sbb
cld
fstpt
sbb
xchg
popa
lock
jo
pop
arpl
push
jo
pop
jo
push
ds
cltd
test
enter
xchg
loope
jb
inc
xchg
push
lret
sbb
testb
xor
dec
mov
rorb
push
cmp
jno
loop
movsb
inc
mov
lods
or
sahf
push
xchg
ljmp
sbb
xor
les
mov
inc
enter
or
sbb
push
cmp
addl
test
add
cmpsb
addr16
ss
into
and
dec
mov
in
xchg
lods
divl
pop
ret
mov
jb,pn
pop
arpl
or
inc
es
lret
mov
loopne
cmpsb
mov
lea
inc
out
dec
addr16
xor
leave
adc
push
insb
test
add
adc
jns
dec
rorb
mov
sarb
xchg
scas
add
and
loopne
push
or
je
push
ret
inc
push
mov
cmp
and
dec
ret
xchg
lock
cs
cli
sub
maskmovq
loop
pop
aad
inc
inc
mov
push
inc
in
jle
xor
sub
cmp
inc
sub
push
arpl
cmp
inc
orb
jae
xchg
popa
sbb
sub
lods
xchg
in
dec
inc
mov
inc
and
add
ret
or
mov
sbb
add
push
mov
inc
cmp
stos
xchg
mov
call
xchg
bound
rclb
xlat
popf
lret
decb
push
inc
lret
or
and
or
push
inc
and
mov
andl
into
ret
mov
pushf
adc
fwait
xor
outsl
aaa
cmp
mov
rcrb
test
dec
call
add
xchg
fiadds
movsl
jle
ss
mov
and
daa
and
pop
pop
add
cmp
cli
dec
lock
cmp
pushw
mov
mov
inc
cmp
push
add
mov
push
outsl
jmp
or
fidivl
movsl
xchg
sbb
add
push
inc
rcrb
test
mov
jno
andb
outsl
enter
enter
add
jl,pn
xor
inc
shrb
out
xor
mov
dec
mov
cmpl
jl
imul
sub
xlat
add
pop
push
pusha
sub
mov
jbe
hlt
or
in
int3
les
or
loopne
jb
or
lock
mov
cld
jne
popa
add
ret
add
out
lea
mov
xchg
sbb
movsb
xchg
add
test
add
inc
and
cmp
loop
test
inc
sbb
sub
xor
int3
test
repnz
cs
add
cmpps
roll
add
imul
xchg
clc
jo
test
outsb
pushf
scas
cld
loopne
ficomps
and
jle
jb
inc
sub
addb
mov
scas
mov
pusha
out
into
imul
loope
loop
mov
ret
cmc
pusha
sub
lret
xor
fs
dec
adc
push
fcomps
mov
pop
pusha
and
call
call
inc
lods
sbb
sbb
push
add
or
sbb
jo
mov
ljmp
xchg
dec
inc
sarl
cmp
cwtl
jb
aam
loope
stos
cmpsb
and
lret
dec
add
mov
rclb
xchg
push
ret
aam
inc
mov
jle
or
inc
into
pop
cmp
outsb
sti
jbe
pusha
bswap
mov
inc
sub
adc
add
sub
adc
sahf
mov
enter
ret
inc
mov
add
loopne
dec
sbb
dec
jo
sub
xor
jge
mov
js
mov
xor
mov
sbb
call
sbb
jo
test
cli
imul
fldlg2
mov
xor
nop
fstpl
xor
insl
mov
sub
scas
push
lret
pop
add
or
aam
dec
pop
jae
scas
std
bnd
xchg
pop
push
dec
repnz
test
xchg
pushf
jle
add
enter
out
aaa
je
add
mov
cmpsb
shlb
test
add
pushf
scas
rolb
lods
fcompl
pusha
movsb
xchg
xchg
push
sbb
push
sbb
rcrb
or
or
sbb
xor
add
xor
movsb
sbb
pushf
loopne
jo
fcmovnb
fcomp
popa
add
push
mov
sub
mov
loop
in
test
dec
outsl
imul
or
pop
and
dec
jmp
inc
jg,pt
pusha
pusha
jp
cmpsb
jg
xchg
ss
inc
xor
pop
lock
popa
jbe
xor
pop
pop
push
arpl
fs
xchg
inc
push
pushf
sbb
mov
pop
cmp
inc
jb
addb
aaa
cwtl
imul
push
adc
out
loopne
sub
fdivs
dec
outsl
ds
cs
cltd
and
pop
cmp
or
jp
or
fs
add
rolb
push
xchg
push
and
mov
lods
mov
fs
nop
mov
js
adc
ret
xor
out
fadds
dec
cmpb
mov
les
sub
xor
xchg
cltd
mov
sub
pavgb
or
push
push
cs
sub
add
je
xor
sub
shlb
rcr
add
bound
and
fsts
add
or
je
test
push
repnz
les
bound
sbb
test
and
adc
js
mov
jb
cmp
call
test
popa
pop
sahf
bound
scas
mov
es
cmpsl
cmp
dec
inc
or
enter
cmpsl
push
xchg
ss
or
sbb
mov
add
int3
test
ret
and
jo
inc
sahf
add
mov
fmul
stos
xchg
dec
mov
ss
divb
testb
notl
aam
xchg
call
dec
lods
stos
cld
sahf
push
mov
add
xchg
cmc
les
or
inc
mov
testb
sub
sarb
ret
ret
inc
jl
mov
fldcw
fidivrl
cltd
loopne
xor
les
sbb
xor
mov
insb
cmp
xchg
adc
test
ss
daa
jmp
imulb
mov
out
rcrb
adc
test
mov
hlt
sub
and
sub
sbb
pop
pusha
sbb
ljmp
js
test
mov
add
mov
xor
jl
xor
lea
nop
enter
and
movnti
sub
push
ljmp
mov
mov
inc
dec
in
aaa
or
push
clc
sub
and
jle
and
adcb
add
push
lret
dec
mov
pusha
sahf
mov
es
enter
dec
inc
mov
ljmp
scas
xchg
sbbl
stos
dec
lods
cmpsl
lock
lock
loop
add
int3
and
cs
out
rcrb
sbbb
sbb
mov
pop
dec
push
xor
push
stos
test
add
sbb
mov
push
push
add
sbb
pop
add
or
cs
andb
add
xor
shrb
repnz
pusha
rolb
sub
insl
cmp
xor
mov
or
cmpsb
push
or
or
sbb
leave
into
andb
ret
xchg
inc
sbb
decl
aam
mov
mov
add
adc
scas
pusha
push
mov
and
sbb
sahf
mov
insb
nop
loop
nop
pop
daa
and
push
shr
dec
popf
xchg
push
inc
fcomps
sahf
shll
stos
ret
add
sub
xchg
xor
mov
sub
stos
or
push
dec
mov
add
xor
out
ret
xchg
stos
push
ret
sub
adcl
dec
nop
mov
mov
loope
xchg
popf
and
jecxz
sub
xchg
lods
add
push
ss
rorb
inc
loop
and
push
dec
repnz
scas
leave
cli
mov
mov
push
xchg
movb
mov
mov
mov
mov
cmpsl
and
sbb
mov
or
adc
fs
inc
ljmp
lcall
jno
sbb
test
add
addr16
js
lods
inc
dec
ret
and
daa
push
orl
push
cmpsl
push
hlt
xor
imul
imul
loop
and
lock
jo
push
push
mov
inc
mov
lock
movsb
pusha
push
and
and
or
in
enter
sbb
movsl
pop
xor
in
lcall
and
sarb
sub
push
shlb
ret
jno
insb
into
mov
enter
dec
pusha
ds
popa
push
mov
xchg
insb
mov
xchg
scas
rorb
nop
mov
rdpmc
sbb
cmp
rcr
or
les
ljmp
and
enter
cmp
or
inc
enter
inc
sbb
add
es
mov
push
add
fs
push
mov
ret
xchg
jbe
hlt
outsb
xchg
push
or
dec
or
ds
pop
or
pop
or
xchg
test
jl
and
out
jp
mov
adc
bound
leave
push
ret
pop
mov
mov
mov
xchg
sbb
movsb
push
adcl
dec
pushf
bound
mov
and
pusha
mov
in
jb
inc
adc
or
jl
sbb
push
jp
sub
mov
jns
or
lods
mov
sarb
rclb
sub
js
loope
cmpsl
xor
mov
xor
or
mov
mov
mov
cmpsl
cmp
dec
push
test
cmp
xor
andb
insb
outsb
aam
sbb
inc
ret
or
xchg
push
sbb
sbb
repnz
ret
inc
push
xchg
js
adc
test
int3
jle
popa
dec
mov
or
push
shl
and
inc
fadds
mov
mov
mov
ret
jb
aam
dec
push
sbb
fdivrs
shl
mov
rclb
ror
test
lods
adc
add
add
incl
jmp
neg
pushl
inc
hlt
fdivrs
fstpt
or
sbb
dec
pusha
bound
add
enter
cmp
sarl
ljmp
sahf
inc
adc
add
sahf
or
or
add
jno
mov
nop
mov
fcoml
xor
nop
inc
add
add
jo
jp
pop
dec
data16
es
arpl
sub
xor
imulb
push
daa
xchg
movsb
lods
mov
in
jb
pushf
or
lcall
mov
int3
int3
fdivl
and
test
mov
addl
fadds
xchg
inc
sahf
pop
je
xlat
enter
xor
leave
faddp
dec
mov
inc
add
nop
lods
in
xchg
inc
idivb
xor
lcall
pop
xchg
into
into
push
std
js
dec
mov
fs
insl
adc
ret
lods
clc
sbb
lret
mov
or
mov
push
add
js
test
lock
inc
sbb
sub
mov
sarb
xchg
pop
xchg
fucom
and
ljmp
addl
sbb
movsb
ret
pop
test
test
test
push
movsb
enter
out
pusha
and
sbb
mov
push
push
int3
xchg
cmp
es
add
sub
mov
inc
push
pushf
sub
inc
das
xor
xchg
testb
push
paddusb
push
aam
test
hlt
dec
jo
push
movsb
adc
adc
jnp
sbb
cmp
add
shlb
sub
xor
pop
jecxz
jp
loop
cmp
bound
cmp
or
js
or
lods
mov
mov
jb
dec
aam
lret
add
inc
mov
sbb
dec
and
pop
mov
pminsw
or
mov
dec
jb
sahf
jle
leave
movsb
xor
sbb
sbb
adc
sub
mov
sbb
pusha
jp
mov
push
es
sti
push
shll
ret
je
addr16
cmpsb
pop
dec
call
fs
dec
bound
rcrb
loopne
or
push
xor
fdivl
inc
push
pusha
push
add
mov
xor
ss
ret
xor
ficomps
xor
jo
out
ss
dec
xchg
xchg
into
jno
push
sbb
sbb
lds
test
ret
loope
xchg
or
aad
and
jmp
jp
xchg
shr
add
mov
push
cmp
nop
push
sbb
and
int3
push
cwtl
jno
adc
push
mov
dec
or
pop
jo
adc
dec
loope
sub
cmpsb
lods
data16
aaa
jne
sub
in
jl
lea
mov
mov
bound
nop
push
xor
mov
into
jbe
call
jno
push
jnp
sbb
lock
rorb
arpl
test
sub
xor
mov
push
dec
enter
and
adc
movsb
add
enter
fidivrs
mov
jb
js
data16
mov
adc
add
push
xor
fmul
jb
adc
push
inc
and
mov
jb
and
popa
sahf
sub
pushf
mov
negb
push
rolb
clc
lret
sbb
pop
add
pushf
adc
in
push
lret
lods
roll
jle
push
and
loop
push
inc
mov
or
jp
movb
je
xchg
xor
je
loope
xor
ds
inc
xchg
adc
sbb
jae
sbb
sub
ret
dec
adc
ror
ret
add
xchg
xor
cmc
lock
mov
cmp
bound
dec
lods
adc
adc
sub
lret
add
add
dec
or
ret
or
es
cmp
xor
lods
or
and
xchg
fisubl
rcr
dec
test
or
lods
movsl
inc
fcomp
or
add
inc
mov
inc
xchg
push
pop
add
jae
jo
and
jo
adc
in
rorl
and
or
inc
out
xchg
xor
pop
jbe
dec
das
lods
nop
sbb
mov
and
xor
jmp
jo
adc
xchg
hlt
mov
sub
xchg
or
lock
popa
arpl
xchg
cmp
fs
sahf
and
xchg
cmpsb
push
movb
sbb
data16
add
call
xor
dec
in
stos
push
dec
xor
imul
lods
pop
into
sub
sub
lods
loop
adc
pop
dec
xchg
int3
ljmp
and
jp
jecxz
or
pop
shlb
sbb
jp
dec
mov
ret
mov
push
adcb
adc
push
ficoms
mov
mov
stos
xchg
lret
mov
push
out
cmp
rcll
inc
test
test
cmpsl
lock
push
jo
sbb
jp
xchg
cmp
pushf
and
mov
and
sbb
orl
out
sbb
mov
jo
and
call
sarb
sbb
arpl
fidivs
mov
xor
sub
loopne
xor
push
scas
inc
cmp
cmp
shl
push
add
les
fs
mov
cs
mov
add
repnz
enter
xchg
sbb
mov
sbb
in
jb
loopne
inc
push
push
cmp
add
add
adc
mov
pop
cs
mov
mov
ljmp
loop
mov
fimuls
int3
push
cmp
jbe
inc
cmp
in
mov
mov
jmp
es
pop
mov
pop
test
pslld
pop
in
jae
jns
js
ficoml
jg
jo
sub
shrb
nop
leave
leave
adc
push
push
aad
and
fs
sub
push
or
adc
cld
pusha
jbe
add
in
out
adc
pop
push
add
mov
xchg
std
push
and
ljmp
adc
movsb
adc
jae
mov
push
pop
or
jmp
xor
inc
cmp
sbb
fisttpll
aaa
push
les
pop
fimull
or
sbb
scas
int3
popa
inc
js
test
js
mov
mov
pop
insb
stos
add
cwtl
test
cmpsw
jb
fs
dec
and
faddp
sbb
js
mov
cmpsl
gs
dec
xor
jb
add
enter
sbb
sahf
sub
dec
pusha
imul
ljmp
outsb
lret
add
push
je
fimull
cld
je
adcb
inc
rclb
cmp
inc
add
jne
sub
add
xor
mov
mov
cmp
cli
adc
pop
loope
mov
push
sbbl
dec
cmp
pop
arpl
push
cwtl
mov
pusha
in
cmp
push
and
adc
subb
lret
jecxz
pop
fldcw
jne
dec
push
sbb
cmpsl
and
xor
outsb
cmp
inc
arpl
or
pop
loop
dec
jbe
pop
add
xchg
or
lret
or
sub
add
cli
pop
outsl
ret
push
je
addr16
test
xchg
shr
bnd
xchg
test
jmp
stos
and
lret
pop
xor
push
rcr
subb
sub
data16
push
or
pushf
jno
nop
out
les
es
mov
inc
loop
adc
mov
push
cmpsl
aaa
pop
imul
mov
mov
xchg
clc
rol
sbb
cmp
add
daa
daa
loope
xor
xorb
pop
insb
mov
push
testb
rorb
cmp
pusha
enter
pusha
xchg
adc
mov
cmp
xchg
rolb
test
sahf
push
mov
sub
inc
cltd
xor
push
sub
adc
test
inc
icebp
nop
adc
push
add
xchg
sbb
lods
xchg
and
mov
jl
roll
adc
xchg
sbb
mov
mov
adc
or
inc
add
daa
and
jle
dec
fxch
xor
ss
adc
lods
lret
jb
add
mov
ret
or
or
dec
and
or
lods
push
popa
lret
sbb
jne
dec
jg
cmp
push
ret
push
ljmp
mov
pop
adc
or
ret
xor
mov
inc
jl
insl
es
bound
mov
dec
inc
or
dec
rorb
jbe
pop
imul
and
loopne
push
push
cmp
push
daa
inc
jne
sahf
adc
or
or
mov
out
or
lods
mov
mov
adcb
lcall
stos
ret
call
xchg
pop
inc
mov
mov
rcl
jp
push
aam
add
cmp
roll
inc
sbb
jns
sahf
cmp
inc
movsb
pop
inc
xchg
sbb
adc
add
add
insb
pop
ret
push
or
ret
xor
or
leave
pop
jp
and
rol
add
add
sbb
ljmp
lea
bound
or
mov
mov
and
jcxz
cwtl
rcrb
add
dec
adc
push
mov
mov
mov
mov
shlb
push
cltd
test
pop
outsb
or
rcl
ljmp
or
pop
inc
xor
add
sub
dec
out
clc
mov
mov
sbb
add
nop
pushl
cmp
insb
pop
cmp
mov
and
jp
inc
jg
or
push
je
xor
push
ficompl
pop
mov
cmp
dec
lods
or
xchg
gs
xchg
popl
xchg
test
sbb
dec
jl
sbbb
mov
addr16
insb
or
hlt
ja
pushf
sub
adc
add
lcall
mov
daa
jp
xchg
sbb
cmp
mov
mov
cmp
stos
push
mov
out
mov
bound
sbb
clc
stos
adc
push
inc
cmp
test
push
cmpsl
orl
sbb
dec
or
add
cmp
outsl
sbb
adc
cld
cwtl
cmp
sarl
pop
dec
and
and
or
mov
dec
xor
lcall
adc
in
jp
enter
jae
rorb
adc
jl
mov
psubq
adc
fabs
gs
xor
add
or
or
pushf
loopne
mov
rolb
xor
adc
xchg
ret
test
cli
push
stos
xchg
test
scas
pop
mov
push
push
mov
add
dec
add
fildll
sbb
ret
roll
fcomps
sbb
xor
es
hlt
push
fldl2e
sub
fmuls
xlat
jb
ljmp
dec
xor
loope
test
adc
in
cwtl
or
or
leave
xor
lods
xchg
lods
test
mov
pop
inc
andps
adc
mull
shlb
popa
add
push
inc
icebp
into
jno
loope
ret
mov
insb
mov
loop
jl
cmp
or
push
sub
pusha
adc
in
js
pop
sbb
int3
mov
pop
and
xor
js
sbb
out
jmp
adc
sbb
xor
dec
pop
ret
sbb
daa
inc
sub
rolb
test
cmp
data16
xchg
adc
jmp
push
push
or
sbb
cmp
icebp
ret
sarb
insb
test
loopne
xchg
addb
decl
xchg
negl
aam
xchg
inc
aaa
pop
lods
subb
das
inc
cs
xor
xor
lods
add
pop
mov
adc
fcomps
adc
cmp
mov
dec
shlb
add
test
mov
or
push
ret
add
adc
jbe
pop
cmp
push
lods
inc
or
jp
das
or
sub
push
push
pop
ret
call
shlb
popa
mov
icebp
jl
push
sbb
dec
dec
add
push
and
sbb
ret
pop
push
inc
push
jbe
mov
cs
mov
jne
fs
xchg
push
ss
sahf
fisubs
lea
mov
aaa
adc
js
mov
mov
adc
or
mov
repnz
bound
je
sbb
int3
call
pop
sbb
mov
les
jmp
mov
ror
push
inc
lock
leave
test
in
ss
ret
push
xor
cwtl
add
add
add
mov
jbe
fcoms
mov
pop
xchg
dec
mov
loopne
je
mov
push
das
imul
xchg
sbb
or
jo
ss
sub
dec
dec
test
and
sub
sbb
add
adc
or
lods
xor
xchg
out
mov
mov
mov
cmp
jo
and
xchg
and
mov
xchg
loopne
lock
xor
mov
test
nop
scas
ret
xor
sbb
rclb
jo
dec
hlt
mov
adc
add
mov
jo
fisubrl
xchg
push
inc
daa
hlt
mov
xchg
pop
push
add
ret
mov
pop
outsl
lret
push
pusha
dec
push
pop
mov
shlb
and
mov
jle
popf
pusha
inc
sbb
shrb
and
xorl
loop
xor
inc
sub
inc
and
fsubp
or
loopne
cltd
sbb
xor
mov
cmpsl
push
shrb
push
pop
mov
movsb
push
test
and
mov
sbb
popa
loopne
leave
push
scas
and
pop
cwtl
jne
cmp
in
fisubl
lods
test
nop
push
push
xor
es
fidivrs
repnz
js
fldl
push
enter
xor
cmp
out
push
scas
mov
push
sbb
xchg
pop
pop
pop
pop
adcb
outsb
mov
dec
data16
add
aaa
sub
ret
in
out
sbb
sar
test
xchg
dec
adc
dec
push
jbe
push
pop
cmc
sub
xor
movsb
and
rcrb
dec
or
or
nop
or
inc
add
mov
mov
jne
pop
lods
and
push
push
and
imul
ret
mov
sbb
inc
push
lea
popf
mov
mov
daa
sbb
lret
lods
in
orb
push
fmuls
out
cmp
daa
into
sar
inc
inc
rorl
and
cmc
lcall
xchg
mov
jno
add
or
mov
ljmp
out
cmpsl
lea
mov
push
add
pusha
jo
ljmp
rolb
xchg
fmuls
jo
dec
jae
inc
shrl
insb
lret
nop
push
movsb
mov
movsb
xor
rcl
and
and
xchg
adc
mov
xor
and
cmp
or
mov
and
xchg
inc
pusha
or
test
mov
test
ljmp
xor
call
pop
push
push
pop
fsub
popa
or
sub
imul
lret
jle
push
lods
jle
int3
js
xchg
orb
ret
xchg
or
fcoml
sub
cmpsl
sub
mov
push
sbbb
jo
inc
or
icebp
loopne
cmp
cmpsl
mov
ljmp
hlt
popa
add
push
outsb
mov
inc
sbb
enter
adc
or
mov
call
sub
or
lret
sbbl
mov
xor
lods
sgdtl
mov
js
or
in
loop
mov
pushf
lods
push
dec
xchg
cs
add
cmp
fstps
imul
adc
or
pop
lods
adc
and
or
xor
adc
inc
mov
js
add
xchg
cmp
mov
add
movsb
xchg
pushf
movsl
mov
mov
in
or
xor
ret
js
mov
push
lahf
mov
daa
sbb
enter
roll
rcrb
lock
inc
loop
add
pop
push
or
xor
les
inc
fmuls
dec
push
sbb
loop
pop
mov
pop
push
push
push
push
and
xchg
xchg
shl
les
fnstcw
xor
mov
inc
adc
mov
movsl
ret
jb
mov
sbb
xchg
xorb
and
insb
pusha
lcall
add
push
in
push
xchg
loopne
pop
sub
lods
cmp
sbb
cmpsb
xchg
push
inc
testb
add
xor
cmc
js
dec
push
enter
jns
sahf
pushf
push
xchg
hlt
es
fsubl
orl
cmpsb
xor
fmull
adc
fdivp
pop
sbb
loopne
orb
enter
xor
xor
lods
out
or
mov
jp
mov
add
ret
add
outsb
push
or
int
hlt
lds
jle
xor
add
lods
shlb
pop
mov
imul
sahf
dec
add
pusha
or
mov
xchg
shr
data16
inc
enter
lret
and
test
add
xchg
adc
pop
repnz
and
xor
xorl
adcb
or
ljmp
test
push
data16
out
cmp
in
dec
arpl
in
rcrb
ficoms
push
das
or
test
scas
call
pop
mov
rolb
rolb
lea
ja
fwait
mov
add
push
ss
inc
push
pop
lods
test
pop
dec
jo
insb
xor
scas
and
rorb
push
sahf
lret
cmp
sub
notb
sub
test
add
add
cli
cmp
pop
sbb
sub
push
into
pop
outsb
pusha
movsl
sarb
xchg
fadds
inc
rcrl
and
mov
inc
push
xor
xchg
add
ds
stos
lcall
lret
popf
push
mov
mov
rolb
mov
loope
jbe
js
mov
pop
lods
mov
inc
addl
call
data16
orb
jo
mov
faddp
rol
xor
sbb
pop
sub
pop
cmp
xchg
mov
cmp
sahf
push
adc
sahf
push
es
add
pop
push
js
into
adc
decb
fs
push
sbb
or
decb
pop
or
xor
xor
push
nop
inc
inc
push
data16
push
push
xchg
arpl
dec
and
push
xchg
sbb
aaa
adc
cmp
in
or
ret
cmp
ret
add
add
jb
cmp
ds
push
jo
push
mov
ds
inc
cmp
mov
jo
mov
stos
es
les
popa
mov
call
mov
mov
dec
js
jae
inc
js
mov
pop
cmpb
push
inc
cmp
dec
lods
and
insb
dec
sub
and
outsb
popa
and
xlat
add
pop
adc
push
ret
cmp
lret
lods
addl
and
push
sub
jbe
sbbb
popa
and
sbb
push
mov
xchg
cmp
pop
sbb
cmp
pop
adc
es
fcoms
sub
sub
push
sbb
faddl
mov
push
push
dec
xor
out
dec
pop
loope
jge
xchg
cld
pop
arpl
sbb
push
js
sahf
mov
bound
and
pop
adc
and
nop
sub
and
lret
mov
ret
sub
loop
add
mov
ss
mov
aam
add
ljmp
cmpsl
cmpsl
mov
inc
test
ljmp
imul
or
jns
adc
mov
xor
lret
sbb
dec
test
sbbl
shlb
xchg
cmp
xor
sbb
mov
add
enter
dec
push
xchg
sbb
loope
lods
test
jno
mov
loopne
mov
add
push
sbb
bound
bound
pusha
add
xchg
pop
jns
push
pop
add
jp
loope
aaa
mov
and
push
ds
fistpll
mov
fcmovbe
sbbb
stos
and
push
jp
mov
push
test
xchg
cmp
sbb
sbb
push
pusha
xchg
mov
adc
jo
imul
push
hlt
jp
pop
adc
mov
sbb
sbb
pop
mov
data16
mov
mov
es
add
pop
xor
ret
mov
push
dec
xor
stos
mov
mov
lock
sbb
or
sbb
mov
push
xchg
test
pop
pop
rol
in
push
or
add
push
incb
pop
push
inc
add
jo
roll
pop
loop
and
andb
rorb
ret
js
out
cld
fcomps
in
and
mov
adc
ljmp
mov
sub
cmpb
dec
imul
ljmp
mov
cmp
daa
loop
cmp
sbb
xchg
ficoms
mov
sub
add
je
or
mov
fsubrl
lods
sub
cmp
push
dec
loop
ret
sub
lods
mov
test
cwtl
or
push
orl
pushf
pop
daa
push
xchg
xchg
ljmp
or
lds
popa
fs
mov
inc
ret
xchg
mov
pop
xchg
jp
cmpsb
inc
mov
arpl
xor
dec
add
outsb
insb
sub
push
mov
popa
and
lea
pop
test
out
xchg
mov
push
addr16
hlt
mov
push
loop
nop
fiaddl
jecxz
dec
enter
rolb
xchg
push
test
dec
jno
pusha
mov
addb
lret
es
enter
pop
push
mov
outsb
daa
xchg
jmp
dec
pushf
dec
pop
fdiv
dec
xchg
sbb
jb
test
mov
adc
js
mov
cmpb
and
pop
cmp
xor
xchg
shlb
xor
js
add
mov
mov
sub
xor
push
iret
icebp
sarb
loopne
mov
or
and
sahf
dec
int3
add
add
imul
inc
shll
out
jp
add
or
sbb
jp
lods
pop
ss
add
xchg
or
add
and
test
cmp
punpcklwd
mov
es
insb
in
lock
pop
dec
rclb
xchg
inc
fs
jg
push
addr16
mov
insb
inc
ror
or
sub
outsl
fists
neg
jmp
xchg
xchg
call
add
mov
mov
and
inc
nop
or
arpl
lret
adc
cwtl
ljmp
mov
arpl
movsb
ja
jmp
and
adc
ljmp
adc
movsl
pop
adcb
push
outsb
pop
jge
popa
cmpsb
inc
and
ret
push
sarb
xchg
mov
inc
out
add
sbb
shl
stos
xchg
fs
enter
xor
in
mov
inc
fcoms
xchg
cmp
ret
lret
ret
ficomps
mov
clc
cli
sbb
mov
sub
les
dec
cmp
mov
test
sbb
add
xchg
mov
lds
rcl
sbb
pop
and
jae
and
clc
jp
enter
jmp
test
and
pop
nop
push
mov
fs
xor
mov
cmp
rcrb
int3
arpl
in
rorb
mov
mov
or
add
jl
jo
and
mov
nop
or
mov
out
sbb
fisubl
inc
mov
push
std
xchg
lret
loopne
jecxz
adc
arpl
dec
sub
xchg
adc
xchg
lock
jbe
addb
es
shlb
push
push
or
rclb
pop
shll
cmp
cwtl
push
push
and
cmp
xchg
test
xchg
and
mov
adcl
and
push
daa
cwtl
xchg
mov
xchg
xor
jo
mov
les
mov
xchg
dec
mov
pusha
pop
mov
dec
pusha
xchg
mov
mov
add
pusha
sbbb
fidivl
jo
xchg
hlt
add
cmp
add
pop
cmc
xchg
pop
sbb
xchg
fldenv
ljmp
mov
xor
fsubl
dec
mov
add
fcoml
stos
xor
inc
rolb
push
dec
and
pop
add
jo
ja
mov
sub
mov
add
fs
in
add
sbb
mov
out
pop
and
inc
call
rcrb
push
scas
adc
rcll
push
cmp
test
pop
add
fcoml
ret
jo
jo
les
into
movsl
pushf
int3
add
ds
xchg
cmpsl
test
jns
mov
adc
adc
shrb
enter
or
jbe
rorb
xor
es
invd
cmpsb
inc
pushf
repnz
jbe
jbe
sbb
cmp
shufps
aaa
sbb
mov
and
jmp
xchg
add
add
loop
adc
js
dec
lret
adc
hlt
and
mov
addb
xor
lods
dec
sbb
data16
sbb
rol
or
addb
jno
xor
and
dec
pop
lahf
push
sub
pushf
in
pop
in
hlt
rcrb
xor
lock
into
in
cmp
pop
mov
ljmp
jbe
mov
push
mov
or
xchg
push
or
in
xor
cld
lods
adcl
adc
jo
lods
and
cmpb
add
aam
lret
lods
add
inc
insb
inc
cmpsb
push
mov
push
pop
addr16
cmp
cli
in
clc
ss
enter
out
cwtl
add
sbb
mov
jb
rcrb
xchg
cli
enter
icebp
cld
pop
nop
mov
jo
pushf
mov
push
sbb
jb
addl
or
push
data16
cmp
imul
adc
scas
mov
mov
xadd
or
sbb
adc
lods
add
sahf
push
mov
sub
out
sub
sbb
test
popf
inc
movl
jo
rolb
lods
pop
jo
in
mov
js
sbb
add
cmp
adc
das
inc
sub
nop
aam
lea
inc
ret
rcrb
mov
loopne
add
sbb
xor
fsubrl
shrb
jmp
loopne
js
push
xor
push
test
or
outsb
aam
adc
push
push
arpl
orl
sbb
push
stos
rcll
jae
inc
cmp
xor
push
pop
arpl
test
sub
mov
rcrb
dec
rcrb
loope
mov
sbb
xchg
cwtl
je
jo
inc
js
mov
mov
movsb
adc
lods
movsb
ds
dec
imul
add
adc
adc
mov
push
cmp
shl
and
loopne
push
ffreep
xchg
pop
mov
cmp
lods
or
and
fmulp
xor
loopne
push
je
pusha
lock
or
sub
jno
call
sub
not
call
xchg
adc
and
faddp
ror
xchg
xor
cmp
les
inc
sbb
es
fsts
jle
push
fcomps
test
or
sbb
lods
or
fisubl
inc
and
lock
in
mov
enter
imul
rclb
lock
and
addr16
xchg
mov
pop
stos
scas
add
icebp
test
in
adc
push
mov
mov
and
cmovno
or
jbe
adc
fcoms
mov
sahf
xor
nop
data16
sbb
rolb
push
pushf
jb
lods
xorl
repnz
dec
js
add
les
dec
xchg
pop
and
adc
test
fwait
add
imul
sub
add
loop
xor
and
fstpl
jb
add
or
dec
test
inc
rcr
leave
xorb
jb
push
cmpb
sbb
jl
add
adc
or
sahf
cwtl
push
mov
in
pop
push
test
std
jmp
cli
repnz
aad
int
jb
cmp
dec
add
jo
mov
adc
stos
ljmp
imul
daa
sbb
cmp
adc
js
mov
and
cmp
mov
enter
adc
cmp
mov
in
sbbb
inc
bound
insb
inc
rcrb
xor
sbb
dec
loopne
mov
enter
rorl
mov
je
xor
add
and
stos
rolb
pop
or
outsb
or
xor
dec
test
add
push
xor
pop
loop
das
adc
sub
or
add
popf
mov
xor
test
xor
push
stos
adc
gs
es
fs
pop
mov
xchg
sbb
mov
xchg
add
mov
fiaddl
xchg
fsubr
pop
add
shll
test
mov
or
sbb
mov
and
pop
fsubrl
bound
shlb
sub
ss
sbb
and
mov
in
fimuls
xchg
jmp
in
sub
pop
fs
mov
ljmp
jb
int3
clc
inc
or
loop
aam
and
xor
push
sub
imul
xchg
jb
and
in
jle
inc
sbb
adc
xchg
add
push
call
add
pop
jmp
inc
add
or
cmpsb
roll
xchg
in
js
dec
negb
push
scas
sbb
inc
lcall
and
ficoms
dec
pop
and
pop
inc
out
inc
pop
cmp
sub
testl
leave
fistpl
std
xor
dec
loopne
mov
lahf
adc
adcb
addr16
clc
stc
rol
sbb
jbe
je
sbb
add
dec
addr16
shr
xor
dec
loopne
xchg
test
lods
dec
shlb
adc
lcall
loop
inc
pusha
ficoml
add
xor
or
aam
js
into
outsb
shlb
mov
ds
xchg
sbb
push
loopne
sbb
mov
addr16
pop
and
push
decl
add
fsubs
and
sar
sbb
cmpl
pusha
or
push
jp
test
fwait
rolb
sub
mov
jo
xor
jmp
enter
rcrb
adc
sbb
pushf
and
sub
insb
add
popf
mov
push
shl
mov
fdivp
es
add
les
addr16
inc
pop
mov
pop
or
rclb
mov
push
lret
mov
bnd
inc
push
js
push
movsl
mov
test
lods
push
subl
inc
aam
fs
mov
rclb
inc
sbb
mov
xor
cmpsb
mov
push
aam
dec
popw
test
jb
xchg
xorb
push
lret
mov
or
insb
and
pop
push
add
adc
outsb
adc
add
push
push
xchg
lods
sahf
inc
outsb
mov
mov
mov
loop
mov
or
aam
ljmp
xchg
out
sub
rcrl
jle
int
dec
out
add
adc
pushf
out
lahf
je
lods
ret
gs
or
or
sbb
or
and
int
stc
jg
inc
ror
adc
not
inc
cmpsb
jle
stos
dec
sahf
sbb
mov
lret
xchg
xchg
test
fsubr
add
push
in
push
loopne
xor
xorl
jg
pusha
aas
rcr
dec
mov
or
and
pop
push
cmpsb
cmpsb
inc
ret
fidivl
push
and
rcrb
mov
outsl
sub
mov
ret
popf
cwtl
add
push
fidivl
xchg
sbb
outsb
testl
es
or
adc
fcmove
in
or
cmpsl
ret
adcb
pop
xor
mov
dec
movsl
hlt
add
imulb
sbb
es
push
pop
pop
cld
add
fadds
xor
mov
loopne
mov
test
repz
and
jp
rclb
test
mov
mov
test
shll
mov
mov
pop
push
lods
ret
xchg
mov
ret
popa
mov
add
push
mov
jp
enter
fmuls
jo
pushf
pop
dec
js
or
or
inc
rcrb
jp
sahf
mov
loope
rolb
sbb
xchg
bound
fcomps
inc
sub
xchg
jns
xor
scas
insb
cmp
mov
push
sub
mov
je
in
nop
add
or
into
cmp
or
or
dec
or
ljmp
call
jp
push
add
fs
jbe
pop
dec
adc
scas
cmpsb
sbb
xchg
push
mov
add
xor
push
int
es
push
cli
lret
test
inc
adc
push
and
mov
lock
outsl
mov
xor
cmc
add
mulb
add
clc
add
pop
bound
ret
incb
and
push
shrl
cmp
notl
xchg
mov
inc
pushf
sub
sbb
daa
or
sbb
cmp
push
inc
cwtl
sbb
dec
jo
dec
sbb
xor
pop
jge
movb
mov
fs
dec
push
dec
mov
es
cmp
jb
add
cmp
adc
sbb
rorl
push
mov
push
xchg
sbb
test
enter
icebp
xor
arpl
mov
or
enter
mov
add
clc
jo
sbb
rclb
sbb
push
ret
adc
popa
mov
sarb
out
lcall
les
pusha
inc
dec
movsb
loopne
sbb
adc
mov
adc
addr16
mov
nop
adc
sbb
fmuls
outsl
lret
repz
rorb
outsl
jo
daa
mov
mov
cmpsb
inc
popf
or
mov
or
arpl
or
mov
mov
mov
rolb
mov
mov
pusha
add
inc
or
mov
leave
mov
xor
sbb
add
in
push
rcpps
cmpsl
add
pop
mov
add
add
ds
fs
sbb
mov
mov
shlb
rolb
or
pop
cmpb
push
push
sbb
fiaddl
ficoms
ficoms
repnz
decl
fnstcw
sub
imul
mov
mov
mov
bound
rcl
mov
sbbb
mov
xchg
test
mov
fs
rorl
lock
inc
mov
imulb
int3
push
and
push
je
ret
je,pn
bound
scas
js
add
fsub
add
cmp
push
jo
das
ljmp
test
sbb
sub
mov
lock
sti
daa
and
xchg
add
add
sarb
adc
loopne
out
out
negb
mov
shrb
mov
loop
into
jne
pop
data16
adc
mov
mov
hlt
ss
test
mov
mov
es
push
test
outsl
loop
adc
test
adc
or
or
dec
mov
lods
mov
xchg
dec
cld
testl
fdivrs
outsb
js
fmull
arpl
xchg
jmp
lea
pushf
into
cmp
dec
push
outsb
cmp
jb
add
xchg
cmp
inc
jno
dec
pushf
adc
arpl
dec
subb
push
fimuls
popa
pusha
or
pop
pusha
loop
adc
pushf
test
adc
cmp
das
lret
nop
fs
pop
push
addb
in
inc
and
xchg
cmp
jp
add
inc
fsubrl
movsb
jno
and
sbb
cld
sub
cmp
cltd
mov
aaa
adc
int
cmp
xor
adc
sbb
loopne
or
stos
pop
add
lods
sahf
scas
enter
or
js
and
jle
cld
xchg
jp
js
loop
rorb
xchg
pop
jbe
pushf
push
push
sub
sub
adc
clc
fmul
mov
xor
inc
sarl
or
dec
add
fildl
xchg
jne
push
lods
addl
lock
clc
mov
and
jo
add
push
lods
mov
sub
ret
mov
out
ljmp
sahf
pop
mov
lret
shlb
test
loopne
jp
inc
or
orb
clc
xchg
icebp
adc
pushf
movsb
aaa
popa
xchg
inc
push
lods
mov
cs
push
sbb
xchg
push
push
notb
inc
mov
addl
inc
inc
jecxz
adc
test
std
push
loop
mov
loopne
and
add
push
and
push
xchg
inc
lods
aam
movl
or
sub
pop
or
jecxz
loope
pop
mov
mov
jb
lret
add
hlt
hlt
mov
mov
sub
push
mov
into
mov
test
push
fimuls
adc
out
inc
and
xchg
xor
cmp
cmp
or
push
cwtl
pop
arpl
lcall
popa
aam
adc
push
outsb
stos
inc
mov
nop
fisttpll
and
xor
mov
hlt
and
in
and
js
rcrb
sbb
xor
xchg
mov
lret
std
mov
mov
dec
popl
adc
xorb
mov
fidivrs
add
shlb
xchg
or
sub
adc
sbb
gs
pop
mov
dec
ss
mov
adc
mov
mov
pusha
test
inc
sbb
dec
xchg
xchg
push
out
outsb
dec
dec
and
xor
inc
add
sbb
cwtl
movsb
bound
xchg
and
stos
add
movsb
dec
cmp
xchg
sbb
je
pop
leave
test
sbb
mov
data16
int3
xorl
or
dec
test
dec
xchg
sbb
testl
xor
test
sub
movsl
mov
test
mov
bnd
shrb
lock
gs
xor
push
ret
push
ror
dec
xchg
cmpsb
dec
cmp
push
mov
dec
dec
adc
loop
adc
pop
mov
mov
sbb
nop
and
sarb
or
dec
inc
push
mov
rorl
cmp
dec
mov
clc
mov
movsb
les
xor
lcall
ret
fldl
or
adc
mov
mov
test
dec
les
jbe
push
sbb
or
jl
pushf
xor
dec
pushf
mov
call
dec
sbb
sub
test
add
xchg
sub
test
or
cmp
dec
test
mov
pusha
pusha
das
inc
mov
popa
xorb
jo
fsubl
cmp
xchg
daa
movsb
xchg
cmp
arpl
pop
sbbb
adc
cmp
sub
jo
repnz
dec
sub
lods
shlb
mov
cli
fs
loop
jl
loope
xor
fidivrs
xor
pusha
push
or
and
pop
nop
cmpsb
or
xchg
or
popf
sub
pop
cwtl
pop
inc
out
dec
pop
cmp
cmp
test
xchg
bound
mov
loop
pop
pushf
lea
inc
fadds
add
and
add
adc
pushf
or
add
cmp
xor
rcr
adcb
sbb
xor
mov
lcall
adc
pop
dec
call
mov
arpl
outsb
mov
test
push
add
add
or
mov
rolb
loop
mov
into
jo
dec
stos
or
push
out
or
pushf
mov
sbb
dec
lds
js
xchg
shlb
fadd
addl
push
jp
lods
sub
test
jecxz
jp
mov
icebp
and
je
cmp
sub
dec
shlb
mov
loope
iret
push
jbe
sbb
fs
loopne
jbe
sbb
repz
fs
push
jnp
mov
mov
mov
mov
lock
jnp
and
inc
and
shrb
sub
push
ret
js
add
mov
xchg
mov
mov
mov
pop
mov
fadd
call
pop
and
pop
mov
js
loopne
cmpsl
hlt
cmp
stos
dec
daa
adc
sbb
inc
jno
xor
sub
push
adc
xor
shrb
add
enter
cmp
mov
sub
sbb
adc
and
sbb
xchg
xor
add
call
xchg
or
push
and
pop
aam
mov
sbb
into
cltd
xchg
pop
mov
push
out
ret
orb
cwtl
int3
jb
adc
mov
movlps
dec
loop
popf
xchg
jb
fisubs
test
ror
mov
ret
dec
or
and
mov
loop
lds
cmpsl
pop
mov
xchg
lds
pop
pusha
sub
push
outsl
aam
loopne
adc
jecxz
pop
pop
add
push
cld
mov
lock
push
dec
pop
dec
xor
xor
mov
loopne
mov
loope
inc
ss
das
jmp
push
add
dec
cmpsl
es
sbb
imul
mov
mov
adc
mov
or
xchg
je
dec
movsl
xlat
sbb
test
adc
loop
push
add
lock
pop
aam
dec
es
aam
inc
and
jmp
into
and
cs
push
mov
arpl
pop
bnd
loopne
cmp
jb
jno
fisubl
or
adcb
adc
test
test
or
into
js
dec
mov
adc
xor
sub
rol
inc
fisubrs
xchg
pop
ret
fidivrl
push
cmpsb
into
jp
fs
sbb
into
mov
sub
jbe
push
ror
js
xor
xlat
pop
mov
sub
mov
ss
or
mov
add
lods
sbb
mov
repnz
cmp
arpl
inc
das
ret
test
push
enter
cmp
lret
and
ret
dec
pop
sub
mov
mov
hlt
pop
jge
push
xchg
pusha
xchg
mov
outsb
mul
sub
stos
cmp
call
pusha
dec
js
orb
push
lods
dec
inc
ret
pushf
lcall
xor
orb
loope
mulb
test
mov
pop
adc
mov
ret
push
sub
or
sbb
push
dec
jo
fs
orb
jle
or
cmp
xchg
jo
dec
mov
or
mov
adc
mov
push
outsl
rcrb
loopne
fadds
pop
xchg
add
sbb
pop
cmp
fwait
pop
mov
cmp
arpl
mov
mov
popa
ret
rcl
mov
jecxz
mov
arpl
outsl
lret
mov
sub
xchg
int3
repnz
push
mov
adc
xchg
loopne
jo
push
inc
ret
add
mov
pop
js
add
push
movsb
subl
enter
addb
push
sbb
inc
fiadds
loopne
je
pop
fdiv
push
add
add
in
cld
and
adc
or
addr16
into
lret
and
jecxz,pn
mov
adc
or
sub
movl
adc
jmp
adc
add
add
add
jecxz
pushf
popa
jl
pop
les
add
jg
addr16
lret
lret
pop
lret
sarl
aad
inc
neg
lock
sti
incl
into
inc
sti
aam
test
jae
jge
mov
shl
not
popa
or
mov
jle
jecxz
sub
jmp
shrb
sti
pop
testl
push
push
les
adc
mov
shrb
pop
jge
rcl
rol
shl
lods
xchg
mov
sub
mov
lock
sbb
fnstenv
out
add
add
sub
fistpl
sar
mull
notl
cli
outsb
xorl
xchg
outsl
add
or
xchg
ss
xchg
lret
iret
pusha
add
lock
push
xchg
rol
add
inc
or
inc
xor
sbb
cmp
pop
pop
repnz
and
shlb
inc
rolb
mov
mov
test
je
cwtl
xlat
pop
or
or
icebp
add
inc
xchg
divl
movsl
orb
cltd
sub
outsb
sub
dec
sbb
stc
inc
sbb
repz
jge,pt
mov
aas
fadd
jmp
rcl
das
insb
jecxz
ja
xor
mov
mov
jo
test
sti
push
les
or
ret
add
jne
sbb
xor
pushf
sti
or
sbb
in
sbb
call
pop
and
popl
dec
xor
sbb
clc
data16
std
lea
push
push
or
sbb
push
lea
jo
jg
mov
fsubs
movsb
jnp
sbb
xchg
add
js
xchg
setbe
out
pop
imul
data16
pop
push
dec
aam
clc
cmp
push
push
scas
icebp
and
and
sbb
mov
insl
push
or
add
popa
and
call
mov
add
xchg
stc
ja
sbb
repz
in
fsubs
out
sbb
arpl
ss
int
sub
mov
mov
sub
xor
mov
xorb
cld
test
sub
loopne
je
in
or
add
cmp
movsl
je
data16
imul
add
ret
mov
int3
leave
sub
rorb
dec
add
inc
cmpl
mov
dec
not
loopne
dec
sahf
or
jo
test
jo
sbb
inc
push
fcoms
cmp
sub
dec
and
mov
pop
mov
pop
add
rclb
rcrb
add
loop
into
mov
lock
adcb
and
popf
gs
les
push
adcb
aaa
lret
adc
pusha
or
out
xchg
insb
test
add
jmp
push
in
sub
xchg
adc
jb
test
mov
and
mov
mov
xor
mov
cwtl
inc
adc
cmp
mov
sub
and
pop
js
add
cmp
add
adc
fsub
adc
hlt
adc
fadd
insb
cld
cs
mov
movsb
add
xor
js
and
or
sbb
inc
lods
xchg
subb
cmp
repnz
pop
xor
jl
xor
rcl
nop
push
jl
repnz
mov
mov
test
mov
sbb
inc
dec
ret
vmovups
cs
rcrb
lds
sbb
test
lea
mov
not
js
mov
pop
sahf
xorb
rcrb
fcomp
push
imulb
add
popa
push
jb
pop
fldl
xor
loop
test
pop
xor
mov
push
xor
bnd
sahf
mov
lds
cmp
imulb
outsb
xor
or
test
pop
or
mov
pushf
int3
cli
divb
jle
rcll
inc
pop
sub
mov
or
andb
or
mov
xor
fcomps
sbb
test
sbb
fsubrs
mov
sub
enter
aam
add
add
ret
popa
add
pop
add
pushf
mov
rorl
pop
lret
xchg
bound
xadd
push
in
pusha
sub
jo
int3
pop
ljmp
call
mov
jo
hlt
nop
ljmp
cmp
enter
cmp
cmp
cmp
cltd
shrb
hlt
or
push
bound
and
adc
lods
sub
mov
popa
inc
insl
insb
sbb
push
or
mov
mov
push
xor
orb
mov
rsqrtps
mov
shrd
lret
adc
push
mov
icebp
js
sbb
pop
add
sbb
add
push
imul
aam
inc
or
cwtl
xchg
testb
xor
cld
in
ds
lea
or
cwtl
mov
add
and
dec
cmp
add
sbb
fcmovu
or
push
in
sub
jg
in
or
add
xchg
rolb
test
xchg
outsl
mul
add
popa
aad
adc
mov
xchg
add
or
or
dec
add
jecxz
mov
sbb
push
call
addr16
insb
test
call
rol
cmp
adc
in
test
cmp
ret
pop
xor
and
push
push
ljmp
mov
loop
inc
das
jp
push
xchg
mov
xorl
rorb
and
aam
pop
or
rorl
lock
rcrb
or
inc
or
inc
dec
or
rol
testb
ldmxcsr
fnstenv
jg
push
faddl
dec
sub
xor
jp
test
rorb
sub
stos
sahf
cmp
mov
inc
fnstcw
fcmove
adc
push
shrb
out
mov
movsl
adc
test
in
ficoms
pop
addr16
pop
sbb
xor
movsb
jae
push
rolb
fs
sbb
push
push
cld
xor
xchg
xchg
shlb
movsb
cmpl
popa
outsb
scas
sbb
lcall
mov
or
int3
and
mov
push
add
das
dec
or
or
loop
xor
sub
jb
push
jbe
mov
loop
fstpt
or
sbb
lret
and
mov
sarb
addr16
and
or
xchg
les
ret
ficompl
xor
cs
mov
add
add
ljmp
sti
into
jmp
and
das
mov
stos
fiadds
adc
mov
mov
pushf
or
add
lods
push
push
hlt
dec
adcb
adc
andb
cltd
or
ds
cmp
xchg
fsubl
dec
test
sub
test
clc
loop
subl
cltd
lods
int3
pushf
push
adc
pop
loopw
es
push
or
dec
jb
mov
lret
jne
icebp
rcr
lock
mov
sbb
shrb
sarb
push
outsl
nop
mov
dec
mov
mulb
into
cmp
daa
sbb
pop
stos
scas
push
int3
repnz
inc
popf
aad
jp
in
xchg
outsl
loope
aam
aam
mov
adc
jne
cmp
xchg
or
pop
subb
pushf
gs
sbb
ret
xor
mov
and
push
sub
dec
ljmp
push
ret
inc
inc
lods
lods
xchg
push
fidivrs
sbb
dec
mov
mov
mov
cwtl
add
sub
bound
inc
aam
pop
ret
aam
scas
hlt
lods
adc
ss
pop
sbbb
js
pop
cmp
ret
leave
sahf
adc
mov
dec
add
add
xchg
cli
pop
shll
adcb
push
dec
outsl
add
dec
ret
mov
add
push
jo
sub
sahf
mov
popa
out
mov
mov
enter
rorb
mov
mov
out
add
add
lods
sbb
jb,pn
les
loop
cmp
or
add
shr
sub
out
cltd
adc
push
ret
mov
cld
add
xorb
movsl
test
adc
clc
mov
shll
pop
cmp
shll
add
jne
sub
xchg
inc
push
popa
clc
divb
test
in
xor
in
sub
sahf
xchg
popf
data16
xlat
sarb
bnd
xchg
clc
mov
add
je
inc
sub
les
inc
movsl
xor
dec
pop
hlt
sbb
ror
out
pop
rcrb
hlt
sar
pushl
mov
loope
mov
in
stos
xchg
in
sbb
rol
movsb
sbb
cmpsl
movsb
cli
mov
or
xor
test
imul
add
xchg
ret
addb
popa
mov
scas
adc
xchg
pop
rolb
popf
in
adc
jecxz
movsb
mov
sarb
inc
decl
mov
xchg
or
mov
mov
pop
loope
xchg
into
sahf
pusha
sub
or
aam
xor
ja
sbb
push
push
loopne
inc
data16
je
aad
lret
ret
sbb
jmp
movb
sbb
jl
loopne
ret
sub
lea
cmp
in
and
or
cwtl
sub
inc
dec
popa
add
add
cmp
rcl
popa
aam
and
xor
add
mov
loopne
pushf
movsl
mov
ret
leave
test
lods
adc
sbb
or
dec
xchg
sbb
or
add
call
je
mov
imul
aaa
stos
sub
lret
sub
jbe
gs
and
inc
cmp
push
xchg
jo
loopne
xor
mov
adc
xor
rclb
inc
xor
or
inc
push
sbb
lret
add
or
jbe
dec
or
ret
cmc
sarb
test
jl
sub
jae
inc
dec
inc
jp
loop
fimull
add
shr
xor
push
add
sub
xchg
popa
aam
js
lock
push
into
cmpb
push
push
bound
push
xchg
lcall
add
cmc
rcr
je
jnp
and
inc
adc
inc
inc
or
sbb
or
xchg
mov
xchg
enter
lea
pusha
loop
lret
xor
inc
addb
mov
adc
lods
int3
cmpsl
mov
sub
mov
dec
jge,pn
adc
imul
sbb
or
or
cwtl
in
push
push
adc
out
mov
sub
out
push
pop
lods
sbb
mov
ret
imul
sub
call
sub
jmp
dec
jo
and
out
mov
dec
enter
jmp
sbb
xor
rclb
daa
je
or
or
inc
insb
es
mov
xchg
lcall
repz
add
and
daa
mov
mov
and
in
int3
dec
mov
xchg
push
inc
xchg
adc
fcomps
cli
push
sub
adcb
pushf
add
or
mov
orb
cwtl
incb
mov
xchg
or
test
sub
xor
or
cmp
sub
mov
jb
dec
sbb
mov
test
xchg
dec
rcrb
test
int3
push
in
pop
push
out
xorl
add
mov
call
mov
xchg
mov
jg
rcrb
int3
xchg
enter
mov
ds
push
les
dec
add
nop
add
clc
pop
mov
lods
outsl
lahf
or
leave
xchg
and
faddl
pop
dec
mov
test
repnz
loope
xchg
ljmp
sbb
xchg
or
int
push
lret
push
and
adcl
push
mov
notl
mov
adc
test
subb
fstps
xchg
inc
inc
pop
cmc
xchg
add
mov
shlb
enter
sub
inc
jnp
jge
add
xlat
ret
xchg
daa
pop
xor
pop
insl
loop
mov
jb
push
fcmovnu
test
xor
sbb
xchg
adc
notb
orb
add
and
xchg
sbb
and
or
fwait
dec
fsubs
add
lods
or
inc
faddl
sbb
xchg
pop
dec
and
dec
ficoms
iret
lea
pop
ror
dec
push
dec
inc
add
jge
lcall
stc
mov
test
lret
pop
add
xorl
push
inc
loopne
data16
pop
xor
cltd
mov
or
or
xor
push
push
sbb
leave
push
inc
xor
loopne
les
cmp
add
adc
sub
inc
insb
pop
leave
decb
into
ljmp
mov
jp
pop
xchg
push
mov
jo
dec
inc
jo
push
imul
hlt
movsb
aam
and
xor
push
xchg
ret
push
and
pop
sahf
bnd
mov
imul
cmp
in
add
stos
adc
xchg
and
sbb
rclb
dec
cmpl
pop
xor
inc
hlt
jb
jo
or
bound
push
repnz
les
imul
ss
test
xchg
pop
ret
rol
jbe
xor
jo
es
fs
add
mov
inc
sub
insb
sub
xor
mov
loopne
pop
rclb
in
add
mov
dec
rorb
cmp
and
sub
pop
ret
js
jge
sbb
es
pop
xor
sub
sbb
or
mov
inc
xchg
push
inc
out
wbinvd
das
pop
les
mov
scas
negb
enter
cmpsb
mov
push
mov
add
jno
push
pop
push
sub
sub
mov
add
push
les
loopne
mov
fidivl
out
rol
lret
push
add
mov
clc
jl
mov
dec
and
ljmp
push
pop
push
cmpb
xor
xchg
mov
fistl
shll
jl
jne
js
nop
jp
or
lods
cs
mov
adc
rorb
or
inc
sbb
dec
jmp
xchg
addr16
push
push
mov
test
jo
jmp
add
arpl
je
movsb
push
cmp
push
dec
inc
add
push
cwtl
cs
xor
xor
js
test
or
inc
dec
xor
or
mov
xchg
adc
lods
sub
adc
ss
push
subb
push
pop
pop
shl
push
fnstcw
mov
jle
loop
push
adc
xor
lea
add
outsb
icebp
fiaddl
sbb
pushf
pop
cmp
mov
or
mov
daa
popa
pop
sub
pop
fcompl
movsl
nop
incb
jb
cmp
imul
cmp
adc
inc
jo
cmpsb
sbb
lret
sbb
call
loop
rolb
sbb
lock
mov
inc
push
xlat
and
int3
cmp
pop
sbb
add
mov
rorb
scas
xor
cmp
mov
xchg
data16
loope
out
outsb
or
js
inc
lods
push
sbb
subb
mov
add
nop
js
pop
xchg
push
sbbb
insb
sub
pop
sbb
call
les
dec
adc
and
es
cmpsb
clc
mov
push
jle
mov
scas
aad
cwtl
lret
bound
sub
pop
outsl
inc
gs
sbb
mov
int3
inc
xchg
popf
push
and
xor
decb
loop
mov
les
xor
pop
jmp
shlb
mov
cmp
aam
xchg
cmpsl
fisttpll
dec
ljmp
rclb
xchg
sahf
mov
loop
ss
inc
loope
inc
or
cli
adc
insl
mov
nop
pop
int3
or
push
inc
push
xor
dec
dec
cmp
sub
sbb
xchg
test
cli
cmp
int3
outsb
test
pop
lea
fsubl
add
and
into
inc
aas
sbb
xchg
push
inc
or
jl
adc
push
xor
mov
test
pop
push
push
sbb
push
add
sub
add
xchg
jp
cmp
mov
lret
in
push
jecxz
stos
fwait
cmp
popf
xchg
pop
pop
cmp
andb
sbb
xor
ss
adc
out
add
loop
and
jo
and
shr
popa
mov
aam
daa
clc
xchg
jo
sub
inc
push
inc
lret
lea
sbb
es
and
ret
nop
js
rorb
add
pop
dec
and
cmp
outsl
pop
add
clc
add
jno
sbb
or
fcomp
push
js
sahf
call
add
mov
mov
sbb
pop
push
cmp
dec
cmp
nop
xor
add
dec
lret
js
or
loop
or
or
rclb
fnsaves
xchg
push
and
mov
inc
sub
aam
into
pop
adcl
add
les
sbb
sbb
or
ficoms
jae
hlt
mov
cs
in
addl
not
dec
sahf
addb
shrb
lret
or
cmpsb
std
sbbl
inc
jl
sub
push
pop
lock
xchg
adc
movq
cmp
mov
inc
loopne
push
xor
sbb
sbb
jecxz
inc
mov
xor
frstor
sub
and
test
out
jae
mov
loop
out
inc
push
mov
xor
push
js
cwtl
enter
mov
dec
fcomps
push
xlat
test
push
in
mov
add
fistpl
call
cmp
in
subb
inc
das
hlt
inc
lods
jl
or
nop
lock
jb
add
test
sbb
xchg
enter
pop
cmp
xorb
or
jb
adc
ja
sbb
jp
das
jb
mov
xor
mov
rcrl
adc
or
jbe
jno
xchg
fdivs
sbb
cmpsl
insb
gs
adc
xchg
sub
test
push
inc
rol
cld
push
pop
cs
sbbl
ret
pop
sub
ret
push
add
inc
add
cltd
or
test
mulb
inc
fs
or
inc
mov
mov
decl
inc
das
sbb
mov
sar
jmp
test
jecxz
and
mov
mov
ret
sub
or
and
lcall
xor
ds
mov
shlb
ss
push
push
push
push
push
mov
cltd
or
hlt
adc
rcrl
push
inc
pushf
mov
dec
mov
stos
jne
push
mov
loop
cmp
push
loopne
outsb
shrb
fcomps
movsb
dec
es
dec
mov
les
les
push
pop
pop
je
add
push
or
test
loop
fs
idivb
adc
test
out
add
repnz
nop
shll
pusha
lret
xchg
mov
sub
inc
cmp
sbb
or
lcall
mov
push
mov
fsubr
sub
ret
arpl
cmp
rcr
rorb
xchg
mov
out
fcmovu
mov
adc
pop
dec
add
or
and
mov
fs
sbb
pop
push
add
movb
xor
add
sbb
sub
lds
sbb
lods
and
add
je
and
es
dec
ret
mov
ret
cmp
mov
pop
dec
add
es
lcall
popa
jno
andb
inc
in
lock
push
sub
mov
les
jo
and
sahf
ret
fs
movsb
adc
cmp
adc
sbb
mov
out
ss
xor
jp
push
test
push
push
push
mov
inc
xor
dec
and
add
js
xchg
addb
mov
add
dec
pop
add
clc
push
lret
jbe
divb
mov
xor
mov
loopne
andl
dec
pavgw
lods
xchg
shl
call
das
xor
xchg
push
test
adc
lock
pusha
cli
adc
lea
rcrb
xchg
js
bound
mov
in
sub
mov
imul
jecxz
je
or
jb
icebp
ss
es
jb
jo,pn
xorl
loopne
fwait
mov
xor
stos
or
dec
jo
push
xchg
fnstsw
push
jbe
int
mov
stos
sbb
sahf
outsb
rclb
imul
inc
inc
push
add
dec
fisubrs
sub
inc
repnz
inc
xchg
pop
add
inc
mov
adc
pop
inc
fisttpl
sbb
and
inc
rol
sub
hlt
stos
adc
rorl
sub
loop
add
xor
jp
add
xchg
jecxz
sbb
xor
inc
ljmp
jle
mov
xchg
sbb
popa
repnz
xchg
cmp
pop
push
jl
ss
pop
shr
js
rolb
inc
inc
or
pop
bound
sbb
sub
cwtl
sbb
rclb
out
pusha
or
insb
jle
inc
mov
call
cmp
add
dec
inc
pusha
rolb
push
pop
cli
pop
ja
pop
popa
mov
add
adc
jnp
fldl
sarb
lea
arpl
ss
add
stos
enter
jo
aad
push
push
lahf
ljmp
mov
xor
sub
cmp
pop
es
or
mov
sbb
push
femms
out
cs
xor
jecxz
pop
jp
xchg
mov
outsl
sbb
xchg
or
pop
xchg
nop
adc
push
mov
test
xor
pop
add
sub
jno
test
push
stos
mov
out
fcmovb
call
mov
push
push
push
push
les
inc
or
add
lcall
dec
cmc
and
mov
stos
adc
and
push
pop
lret
dec
mov
in
mov
push
xchg
lcall
imul
mov
call
xor
sbb
mov
lock
or
jno
push
test
add
repnz
fsub
push
fisubrl
sub
sbb
adc
out
lods
aad
or
adc
or
cmp
sbb
sub
repz
add
mov
jno
outsb
xor
mov
pop
push
dec
inc
xor
push
xchg
outsb
std
jl
pop
adc
adc
adc
lret
inc
scas
dec
or
xchg
add
xchg
and
or
xor
orb
dec
outsl
inc
xor
push
orb
adc
xor
xorl
andb
dec
adc
push
movsb
xchg
or
imul
out
mov
push
or
pop
xor
mov
dec
mov
ljmp
addb
push
jp
pushf
pop
xchg
add
test
aam
jae
push
sub
sbb
jp
addr16
sub
push
les
cld
xchg
inc
in
pusha
addr16
enter
push
adc
mov
loop
lret
popa
jo
pop
pop
push
add
inc
pop
cmpsl
jo
arpl
nop
mov
mov
ret
cmp
es
sbb
xor
or
pop
das
nop
std
rol
mov
adc
bound
in
add
loopne
or
xor
xchg
xor
fiadds
pop
lods
jno
push
push
cs
lsl
fcomps
les
adc
push
sub
call
sbb
mov
lods
mov
les
pop
sub
sub
xchg
adc
nop
dec
dec
or
jl
pop
xchg
add
pop
mov
add
xchg
or
adc
jl
lock
enter
adc
pop
jp
or
and
mov
arpl
aam
dec
les
push
mov
roll
push
mov
sbb
and
stos
loopne
pop
inc
lock
push
into
aas
hlt
mov
ret
fs
mov
sub
addr16
fdivrp
jae
adc
cs
add
addl
ss
dec
or
push
add
adc
test
enter
inc
int3
shl
sub
into
andb
mov
xor
rol
shl
xor
pop
imul
rclb
mov
shlb
fwait
pop
dec
fdivr
push
xor
sbb
adc
dec
in
and
loopne
icebp
adc
ss
adc
xor
add
adc
les
dec
mov
push
loopne
push
dec
call
js
inc
and
pop
addr16
shlb
or
scas
mov
add
roll
testl
call
nop
jb
pop
sub
leave
in
faddl
inc
cld
shll
and
mov
xor
push
ljmp
push
inc
mov
jb
xchg
fwait
jnp
jecxz
sahf
push
outsb
lock
loope
push
sub
sub
add
xchg
lcall
mov
mov
mov
or
jge
ret
aaa
adc
sub
adc
sub
dec
mov
jb
fcoms
inc
push
sbb
or
andb
loopne
pop
and
lahf
stos
pop
push
rolb
les
add
inc
pop
rcl
sbb
xchg
mov
xchg
call
rclb
mov
push
sahf
sub
xor
pop
push
xor
xor
jo
push
stos
aam
mov
mov
inc
sub
jp
lret
ret
xor
xchg
mov
fdivs
dec
adc
clc
xor
ds
lret
das
ret
sahf
pop
sbb
mov
fstps
test
das
iret
and
mov
mov
add
int3
cmp
jecxz
adc
jp
rol
cmp
shlb
test
pop
add
xchg
call
pop
aas
xchg
or
push
xchg
and
into
push
nop
xor
push
and
pop
loop
out
insb
testb
push
test
mov
mov
pop
dec
fcoml
jle
ss
sbb
in
add
nop
and
dec
add
pop
movsb
pop
sbb
sub
sbb
pushf
mov
rcll
into
push
dec
sbb
sub
pop
push
mov
js
jmp
mov
pushf
inc
sbb
mov
push
xlat
adc
or
insb
popf
or
xor
mov
fimull
test
dec
mov
xchg
add
mov
mov
sub
push
shr
fcom
cs
add
pop
or
lret
or
mov
push
xchg
jp
loopne
inc
jmp
outsb
and
xor
ss
mov
inc
and
lret
orb
gs
lahf
lret
inc
adc
push
push
push
and
sbbl
or
imul
jp
ljmp
test
in
pop
pop
fcomp
outsb
and
lcall
pop
dec
pushf
push
pop
fisubl
repnz
rolb
sbb
push
or
sahf
les
xchg
cmp
and
not
sahf
in
adc
fidivs
mov
or
pop
sbb
xor
sbb
or
cmp
fldl2t
loope
cmp
or
inc
loopne
sub
or
push
add
push
push
into
push
xchg
or
add
test
and
dec
sbb
ss
fdivrl
xchg
xchg
inc
sub
jl
xor
cmp
test
js
daa
ftst
mov
js
jb
fdivrl
pop
xchg
test
bound
loope
push
add
or
push
lret
dec
les
add
mov
xor
sbb
push
pop
push
test
pop
push
bound
jb
and
mov
and
ljmp
mov
mov
rolb
scas
mov
jb
push
and
scas
outsb
jb
xlat
cmp
pop
sbb
and
fstps
rcl
or
and
dec
scas
mov
call
rorl
fs
add
pop
and
fsubp
push
nop
add
es
into
test
popa
cmpsb
sbb
lods
enter
sbb
sub
jp
inc
out
sbb
nop
inc
sub
sbb
or
inc
addr16
or
pop
repz
ds
inc
js
mov
pop
shlb
imul
adc
mov
fsubrs
sbb
sub
lods
call
mov
jb
add
xchg
lods
iret
loopne
or
mov
ror
rolb
andb
rol
mov
adc
and
push
dec
or
mov
sbb
push
pushf
xor
popa
shll
aas
loopne
sbbb
push
xor
adc
clc
ret
cmc
adc
bound
jb
xchg
mov
push
shrl
dec
subb
sub
mov
xchg
xchg
push
lea
or
inc
sahf
jl
adc
jp
dec
dec
cmp
or
nop
insb
sbbl
in
loopne
xor
jecxz
add
adcb
aam
add
xchg
cmp
mov
rorb
dec
lods
sub
add
test
dec
hlt
push
repnz
lods
jle
push
and
sbb
jbe
enter
adc
xor
push
sbb
ja
je
out
jo
sbb
lock
jnp
sbb
pop
mov
mov
js
stos
ss
ret
into
bnd
sbb
adc
xor
gs
sbb
movsb
dec
arpl
pusha
inc
xchg
push
sub
cli
pop
lret
xor
and
enter
cs
sbb
jp
xchg
test
push
push
cmp
push
mov
xor
dec
cmp
fadd
mov
jp
movsb
push
add
fdivrs
in
pop
add
fcoml
adc
rolb
inc
xchg
sbb
movsb
jb
push
dec
inc
sub
jl
pop
adcb
or
sub
punpckhbw
mov
sub
mov
cwtl
sbb
pushf
mov
jmp
mov
dec
test
mov
movsb
cmpsb
add
jmp
je
lods
shl
fsubp
rclb
clc
mov
inc
cmp
mov
and
and
mov
hlt
dec
or
inc
mov
or
mov
lds
push
xchg
pop
or
adc
pop
addb
idivl
or
jo
xor
or
pop
adc
sub
xor
add
fsubl
testl
jp
and
adc
jg
hlt
xor
sbbl
lret
addb
inc
jo
enter
sbb
pop
xchg
push
arpl
sbb
add
int3
cmp
add
mov
push
push
dec
xlat
add
mov
push
push
xchg
inc
add
jb
cli
mov
add
popf
jne
cmp
cmc
sbb
lret
icebp
or
lea
movsl
sbb
or
movsb
subb
enter
lret
outsb
decb
ss
sahf
fwait
in
lock
and
lahf
sbb
aam
scas
lret
test
or
xchg
or
inc
xchg
push
mov
dec
adc
sbb
orb
pop
mov
loop
lret
pop
jp
mov
fdivl
mov
push
or
and
xchg
mov
mov
xchg
mov
dec
cmovns
cs
mov
mov
arpl
jo
hlt
xchg
inc
sub
sbb
push
lret
out
lcall
or
and
daa
jmp
lret
inc
dec
or
addb
daa
sbb
push
dec
mov
pop
rcr
clc
sarb
pop
jp
mov
loop
sbb
pop
rorb
dec
add
cmp
cmp
stos
add
sbb
ss
movsb
xchg
inc
data16
pusha
sbb
loop
mov
push
aas
mov
cmp
sbb
out
cmp
cs
outsb
mov
sarb
xor
pop
ror
hlt
mov
add
jbe
hlt
ret
pushf
jo
popf
adc
push
in
rcr
enter
fs
test
test
pusha
adc
notl
mov
jle
outsb
pusha
cmp
push
pushf
lret
ss
and
cwtl
rcl
ljmp
nop
loop
mov
and
adc
popf
xor
ss
inc
xor
pushf
push
sbb
mov
gs
sbb
mov
movlps
stos
pop
push
adc
pop
add
fistpll
cmp
mov
sahf
mov
mov
popa
jbe
inc
sbb
pop
sub
dec
add
leave
adc
mov
xchg
or
test
ret
pop
sbb
dec
jle
rorb
push
js
negl
sbb
lret
pop
adc
add
mov
sbb
jp
scas
dec
xor
add
or
inc
imul
sub
sub
dec
dec
sbb
add
cmpb
lahf
adc
pushw
nop
insb
jno
into
repnz
and
add
sbb
dec
sbb
cmp
dec
movsl
cli
jbe
pop
jecxz
mov
adc
nop
mov
xor
mov
mov
adc
adc
xorb
out
adc
imul
cmp
shlb
out
sub
mov
es
loopne
or
pop
push
and
and
and
fnstcw
inc
mov
jmp
popa
or
movsb
dec
sbb
jbe
sub
in
mov
jbe
dec
fisttpll
hlt
int3
lret
jle
popf
dec
sub
pop
sbb
andl
jl
lahf
js
mov
pusha
and
mov
dec
roll
xor
jbe
les
dec
xchg
ret
xchg
jns
push
sbb
jo
test
push
loop
pusha
das
jbe
mov
aam
es
test
movsl
jno
inc
cmp
cmp
bound
mov
pop
cmp
mov
dec
lret
xchg
aaa
jg
loopne
adc
lods
adc
pop
inc
add
pop
fwait
js
roll
sub
or
adc
sbb
adc
add
add
js
adc
js
mov
mov
push
pop
sbb
xlat
add
mov
in
cmp
call
add
or
adcb
add
or
pop
xchg
adc
mov
or
fldcw
sub
adc
pusha
test
dec
jge
ljmp
push
push
rolb
rcrb
jo
or
push
imulb
xchg
push
insb
shr
lods
and
sbb
adc
push
sbb
in
scas
push
loop
xchg
cmp
cld
cmp
pop
or
dec
or
ret
xor
jb
out
xor
jl
sub
lods
in
xor
mov
or
enter
enter
and
ror
jo
pop
cmp
mov
cli
arpl
mov
mov
cs
inc
cli
arpl
imul
ss
lods
out
outsb
popa
add
lret
inc
add
jne
add
dec
test
jge
push
addr16
je
sub
loopne
xor
arpl
pop
push
fidivs
enter
or
add
sbb
jo
jecxz
ret
inc
mov
jmp
inc
add
adc
fisubs
les
mov
add
cmp
imul
xorb
sbb
rol
and
inc
mov
les
cmpsl
mov
andl
arpl
pusha
fidivl
fs
push
and
and
add
pop
or
and
xor
call
daa
add
rcrb
jl
mov
push
enter
movsb
or
movsl
dec
mov
sbb
cld
jle
cmp
pop
aaa
loopne
les
cmc
and
outsb
pop
push
aam
adcl
add
lea
nop
jl
push
pop
dec
sub
push
mov
jo
inc
push
stos
into
or
ret
and
mov
pop
mov
scas
mov
sbb
and
sbb
xor
mov
mov
xor
adc
mov
js
int3
xor
out
push
cmp
sub
dec
cld
nop
repnz
nop
mov
sub
cbtw
addr16
addr16
addb
xor
arpl
adc
jmp
jmp
shrl
and
dec
fdivr
pop
push
int
pop
xchg
push
dec
fwait
push
cmpsl
pushf
lods
pop
push
add
pop
dec
movsl
stos
lret
call
xchg
mov
pop
or
sarb
or
jno
adc
and
divb
cmp
or
adc
sbb
or
rcll
clc
mov
rclb
imul
inc
sbb
rcrl
push
fsub
add
jb
mov
xor
fcoml
lods
mov
loop
or
sbb
pop
xor
lods
lock
push
mov
test
out
outsl
call
test
cmp
adc
popa
pusha
nop
sbbb
push
cmp
push
push
sbb
loop
cmp
enter
sub
insb
fdivr
rcrb
add
xchg
mov
mov
jno
xchg
lock
cmp
mov
and
popl
push
inc
ret
out
or
mov
or
or
lods
add
das
js
push
xchg
push
ljmp
mov
into
xor
rcrl
xchg
xchg
shll
mov
scas
ljmp
push
cli
mov
aad
shlb
pushf
mov
add
sub
fs
out
fcoml
sbb
push
xor
dec
bound
cltd
sbb
push
cmp
sbb
mov
pop
sahf
ror
lds
cmp
fmuls
mov
add
cmc
and
sbb
fisubrl
pop
dec
mov
test
and
mov
add
ja
movsl
xor
and
push
xchg
cmp
pop
or
cmpsl
jb
dec
or
push
push
xchg
sbbb
insb
stos
mov
add
loopne
or
push
push
loopne
out
lret
cli
jo
int3
dec
dec
pop
mov
loopne
and
cmp
imul
sub
movsb
dec
fsubrs
rclb
and
or
ljmp
push
ds
push
jle
stos
or
push
mov
or
gs
js
mov
inc
or
mov
mov
loopne
enter
fiadds
xchg
jo
mov
pusha
jle
subb
pusha
mov
mov
ret
rolb
adc
dec
lods
andl
add
dec
dec
lods
xchg
lock
test
push
mov
js
add
mov
fiadds
popa
nop
sbb
xor
das
arpl
out
fsts
call
jb
add
mov
push
das
daa
jno
push
or
push
add
movsb
adcb
es
cmp
popa
add
inc
je
and
cmp
movsb
push
mov
mov
and
or
xchg
pushf
ficoms
or
jp
scas
andl
stos
rcrl
js
push
ja
inc
rol
push
mov
mov
loope
jns
out
mov
ret
or
rcrl
mov
hlt
fdivrs
shll
and
and
mov
sbb
xor
adc
mov
adc
pop
sbb
jecxz
scas
inc
hlt
cli
lahf
mov
xchg
jb
rclb
shr
dec
dec
inc
out
pop
shlb
mov
decb
or
es
les
mov
push
dec
fsubrl
or
test
jo
rol
add
fcmovbe
fisttpll
pushf
shl
test
jne
mov
std
iret
movsl
fstpl
jns
stc
xor
dec
lcall
pop
rcr
adc
in
divb
mov
mov
leave
adcl
addl
popf
xor
mov
or
xorb
insb
sbb
or
or
or
lcall
xor
sbb
bound
xor
sub
lea
jl
cmpsb
arpl
arpl
jp
cltd
dec
or
jecxz
shrl
push
mov
pop
push
adc
loope
dec
mov
mov
xor
adcb
pop
or
push
sti
sbb
or
inc
dec
stos
mov
xchg
sbbb
popa
mov
add
xchg
jle
lea
pusha
xchg
add
insb
pushf
popa
inc
jmp
mov
adc
popf
or
mov
push
jno
cltd
pop
cmpsl
push
clc
cmp
pop
mov
pop
dec
sub
and
push
push
and
adc
push
mov
add
aaa
fstps
loop
jl
les
loop
or
inc
das
mov
xchg
mov
pop
xchg
or
sbb
xor
ret
call
sub
jbe
sbb
xor
push
sbb
sbb
jbe
inc
xchg
pop
les
mov
or
xchg
xor
adc
daa
jecxz
inc
push
and
dec
mov
gs
mov
mov
pusha
rol
or
leave
mov
int3
add
mov
loopne
push
ljmp
sbb
loopne
jbe
push
enter
lods
and
jb
in
xor
inc
add
sbb
nop
sbb
mov
add
nop
bound
mov
test
add
dec
or
sbbl
or
sub
pop
les
inc
mov
xorl
lock
popf
dec
dec
sub
add
leave
ret
cld
xchg
popa
mov
int3
jg
mov
adc
js
loope
mov
fmuls
push
push
or
pop
mov
inc
lret
xor
imul
test
lock
imul
or
jp
push
push
or
xchg
dec
push
push
les
cmp
fucomp
or
inc
and
xchg
jbe
daa
test
inc
pop
rclb
ljmp
mov
ficomps
stos
fs
icebp
sbb
shrb
mov
arpl
ja
sahf
loopne
mov
dec
into
xor
stc
mov
in
xchg
aam
rcrl
ljmp
lods
mov
int3
sbb
push
sahf
imul
xorl
pop
inc
sbb
test
cmp
push
jb
mov
mov
adcl
loopne
cmp
mov
dec
mov
xchg
cmpsb
push
sub
mov
cmp
inc
mov
mov
or
mov
das
loopne
out
or
mov
pop
es
add
ss
stos
lcall
sbb
cmp
popa
lea
ja
xor
push
push
xchg
pushf
es
arpl
rcll
sub
loop
orb
add
mov
adc
push
push
and
jne
xor
mov
mov
mov
cmp
roll
fnstsw
ret
loop
push
dec
xor
rolb
push
loop
mov
test
or
lret
jne
xchg
out
adc
addb
mov
mov
push
mov
or
sub
cmp
les
inc
jb
movsb
ret
rol
lret
inc
mov
mov
orb
xchg
xor
imul
fsubrl
cmc
ror
repnz
cmp
fsubrs
ss
cwtl
or
lea
lock
xchg
adc
add
or
scas
dec
push
mov
arpl
lods
mov
xor
scas
or
pop
sarb
insl
rcrb
mov
mov
sbb
ret
mov
test
jb
mov
ret
nop
sub
aam
adcb
push
pop
andl
dec
pusha
fs
or
xchg
hlt
pusha
in
jecxz
cmpsb
fisttps
sub
cmp
insb
jb
push
sbb
push
adc
fidivrl
jmp
push
lods
sub
cmpsl
adc
dec
movl
or
sbb
add
dec
cmp
cmp
xlat
xor
mov
lods
jbe
or
or
add
mov
mov
test
add
mov
lret
inc
mov
loopne
push
push
and
sbb
leave
divl
dec
sahf
add
movsb
xchg
jp
nop
icebp
xor
cmp
jbe
adc
js
sarb
mov
push
mov
sbb
ss
je
inc
leave
pushf
loope
or
inc
rcrl
jo
clc
lods
or
ss
and
pop
mov
sahf
dec
fmul
adc
dec
add
xor
in
sub
push
mov
das
lea
xchg
lret
and
orb
xchg
xchg
js
jp
xor
rolb
mov
jo
into
inc
mov
nop
lea
xchg
ret
mov
mov
and
push
das
mov
mov
inc
cmp
push
pop
ret
jo
fdivl
dec
mov
dec
dec
testb
adc
cmp
push
loop
sub
outsb
cmp
xor
sbb
sub
push
idivb
push
nop
jnp
xchg
push
pusha
xchg
mov
sbbl
sbb
mov
into
jp
xor
loopne
sub
sbb
in
imul
xchg
pop
jno
xor
dec
sbb
xor
imul
xor
mov
lock
or
fadd
lret
add
ljmp
in
nop
jle
decl
aaa
inc
jl
dec
out
fs
call
pop
jne
dec
fcoms
hlt
adcl
mov
fiaddl
lock
inc
pop
test
test
push
enter
cmp
sbb
add
jle
not
sub
faddp
jge
mov
shl
imul
adc
sub
mov
inc
fs
xchg
enter
xchg
jle
out
and
push
adc
rclb
in
cs
xchg
test
out
jne
filds
add
dec
shr
mov
dec
call
jae
and
int3
add
dec
fs
rcl
rcr
push
loopne
dec
rorb
rorb
add
dec
test
jne
inc
sti
out
pop
or
addr16
or
xchg
or
adc
xchg
mov
add
push
sbb
adcl
into
push
mov
sbbl
dec
ret
std
add
repz
fdivrl
faddl
aaa
sbb
in
mov
fs
sbb
mov
loop
pushl
adc
or
adc
and
call
or
sub
das
repnz
sbbl
aam
sbb
pop
ret
sbb
sti
enter
dec
ret
pop
lods
xor
mov
cli
push
sbb
xchg
insl
or
xor
xorb
icebp
add
sti
daa
stos
jecxz
dec
hlt
shl
adc
push
dec
mov
mov
fwait
mov
push
insb
push
leave
pop
mov
rcrb
xor
pop
enter
lock
fisubs
nop
enter
movsl
mov
xor
sub
in
mull
inc
fildl
fiadds
or
sub
mov
sbb
bound
xchg
add
sbb
jmp
or
in
cli
sbb
gs
addl
lret
fwait
sub
leave
out
rolb
sbb
ja
push
sub
fldcw
mov
hlt
mov
add
jbe
test
inc
mov
movsb
pop
adc
cmp
dec
je
dec
jbe
and
add
incb
dec
enter
dec
in
push
rorl
je
mov
mov
test
push
cs
mov
cmp
and
push
ficoml
sbb
test
idivl
xor
stos
adc
sbbb
xchg
outsb
and
clc
xchg
push
push
dec
sbb
lea
or
lret
sbb
mov
adc
mov
xorb
dec
int3
test
xchg
cmp
test
or
mov
xor
lcall
fnstcw
adc
cmp
mov
xchg
push
adc
imul
js
pop
add
dec
add
cmpsl
cmp
sbb
ret
cmp
dec
ja
setae
mov
mov
cs
popa
cli
cmp
dec
mov
pop
add
push
add
adc
pop
out
sub
adc
into
xor
fidivs
lods
mov
jecxz
loopne
out
push
ss
add
dec
sbb
test
fs
jb
loopne
pop
pop
mov
rcl
push
sbb
test
call
push
cmp
sbb
subb
aaa
push
push
cmp
int3
cmp
and
mov
test
ror
in
sahf
and
sub
or
out
or
inc
mov
into
sbb
pushf
fdivrp
adcb
mov
lcall
or
inc
cmp
jecxz
sub
add
nop
ret
xchg
pop
pusha
and
xor
int3
imul
sub
sub
lcall
pop
flds
xchg
jne
icebp
clc
push
pusha
jo
xor
sbb
pop
loopne
pop
jnp
jo
xchg
test
mov
and
mov
mov
add
xchg
push
ljmp
sbb
rorb
int
xchg
jo
xor
hlt
sbb
push
test
mov
jb
pop
test
xorl
out
or
or
sbb
pushf
fidivs
sbb
adc
aam
or
push
repnz
mov
and
push
sbb
mov
fs
dec
sbb
cltd
mov
into
xchg
mov
repnz
mov
mov
push
pop
orb
and
adc
enter
aam
popa
sbb
xchg
sbb
inc
cmp
cld
xor
xchg
into
mov
push
jo
je
clc
xchg
cltd
xlat
cli
sbb
cmp
cwtl
clc
or
inc
or
lods
cwtl
add
dec
shlb
fcmove
xchg
bound
mov
cmp
je
loope
push
jle
out
mov
jne
mov
jp
mov
in
int3
insb
clc
push
ret
ret
lret
dec
push
add
cld
mov
xor
xchg
lea
test
fstpt
or
lret
or
xor
xor
shrb
fsts
mov
sahf
lcall
mov
xchg
lds
sub
xor
dec
clc
pusha
jp
shr
pop
sbb
insb
lock
shrl
cltd
mov
test
push
xchg
push
jp
sub
sbb
sbb
and
loopne
dec
pop
push
xor
xor
leave
push
jg
jnp
sbb
loop
mov
or
js
sbb
pop
jno
sub
jae
je
sub
xchg
stos
mov
push
cmp
cmpb
sub
lods
outsb
xchg
int3
mov
fcoms
cmp
cmp
fstps
test
out
es
std
aaa
dec
sub
push
mov
sub
xchg
xorl
movsl
adc
cmp
inc
je
pusha
stos
outsb
push
or
push
cld
jo
or
inc
jbe
push
cmp
sub
mov
and
push
sub
mov
movsb
or
lret
ret
inc
enter
xchg
push
add
movb
xchg
movsl
cmp
mov
mov
enter
mov
and
mov
loop
rorb
popa
popa
sbb
or
sub
push
mov
lret
shl
lods
mov
sbb
inc
xchg
mov
pop
or
cmp
or
sbb
hlt
fmul
ret
adc
int3
scas
jnp
xor
cwtl
mov
mov
sbb
sahf
lock
xor
xchg
sarb
ds
xor
xchg
sahf
fsubp
pop
fwait
jp
sub
test
repnz
pop
jmp
adc
or
rorl
test
arpl
in
in
sub
mov
imul
popa
popa
add
add
cmp
push
shr
jecxz
shlb
mov
xor
xor
cmp
jmp
mov
lcall
sbb
jo
cmp
mov
or
xchg
xor
push
arpl
addb
fistl
sbb
rolb
sbb
push
cwtl
repz
sbb
test
cli
cltd
loopne
cmp
fs
sbb
mov
lock
in
adc
outsb
cltd
movsl
xchg
loope
push
dec
dec
fs
jecxz
push
out
dec
or
sbb
mov
and
mov
rcrb
cli
add
rcrl
fcomps
pop
pop
sbb
leave
or
jo
pusha
inc
pcmpgtb
xor
jne
jp
push
xor
mov
jl
addl
lea
lods
lods
push
mov
aam
jbe
and
pop
rorb
mov
js
or
pusha
les
pop
sbb
xchg
xlat
inc
sub
inc
lret
xor
push
aam
call
xchg
cmc
sbb
lcall
pusha
mov
into
ljmp
sahf
out
in
out
add
and
xchg
add
and
inc
pushf
and
inc
add
popa
jl
into
adc
es
or
add
test
lea
repnz
mov
lods
and
jne
push
pop
push
cli
jb
outsb
xchg
rcrb
out
arpl
add
out
cmp
imul
mov
jle
repnz
jnp
adc
loop
cs
rclb
clc
mov
inc
insb
xchg
int3
push
xor
and
cmp
pop
popf
icebp
or
and
lea
or
je
js
sbb
add
andb
sbb
es
pop
mov
jo
and
sbbb
jmp
pushf
lcall
test
scas
and
and
adc
mov
mov
repnz
cmp
test
and
dec
adc
add
inc
push
add
xchg
mov
mov
outsb
pop
jno
popa
das
mov
pop
add
xor
jno
ret
push
pushf
sbb
dec
mov
push
pusha
adc
xchg
mov
sbb
imul
push
into
cmp
inc
jbe
mov
sub
jp,pt
cs
loop
enter
mov
je
jmp
mov
bound
sub
mov
sbb
popa
add
push
ret
mov
push
movsb
pop
sahf
movsb
xorl
nop
push
dec
cmp
pop
adc
push
xor
inc
xor
and
adc
hlt
mov
xchg
dec
mov
push
sbb
inc
lods
add
mov
lods
out
lods
and
and
sbb
nop
andb
xor
mov
jb
pop
into
rclb
loopne
test
jno
xlat
lret
inc
loop
xchg
test
fcmovnbe
loop
push
push
sbb
or
xor
xchg
add
ret
jo
xchg
insb
adc
rolb
adc
adc
dec
and
fsubs
cmp
and
or
roll
cmp
cmp
jecxz
js
inc
fisubs
fcompl
fnsave
adc
sahf
out
sbb
movsb
adc
loope
pop
out
and
sub
sub
lret
and
mov
xor
daa
add
loopne
outsb
and
mov
jp
testb
cltd
mov
hlt
add
mov
out
dec
sbb
or
out
scas
sbb
or
pop
bound
or
mov
xacquire
mov
adc
pop
loopne
lods
out
insb
sub
bnd
dec
cld
lret
or
jle
jne
or
pop
pop
dec
mov
pusha
add
pop
mov
mov
pop
adcl
ds
sbb
mov
sahf
scas
sbb
inc
mov
adc
ret
cmp
addb
xchg
adc
movsl
xor
push
add
fucomp
movsb
popa
lret
jne
lock
aaa
push
pop
arpl
add
or
pop
add
mov
sahf
add
pop
sarb
sbb
mov
adc
jns
sub
pusha
mov
fdiv
sbb
enter
sub
rclb
mov
mov
mov
int3
lods
enter
mov
dec
cmpsl
faddl
mull
pushf
and
repnz
mov
les
sbb
ss
add
dec
enter
les
mov
add
add
lretw
dec
nop
fcompl
mov
sbb
add
fiaddl
pop
call
fidivrl
dec
cltd
sarb
mov
mov
nop
cmp
pusha
test
nop
mov
lods
adcb
or
cmp
cmp
xchg
cmp
or
sbb
dec
lods
bound
imul
inc
fcoms
insb
and
xor
push
int
popf
push
and
inc
outsb
rorb
or
ret
lret
ja
sub
rcrb
call
jp
insl
push
jne
xchg
push
mov
fsubrp
cld
int3
xchg
mov
xor
repnz
test
push
sbbb
push
push
imulb
cltd
int3
add
xorb
inc
pop
loopne
cmp
cmp
push
int3
and
dec
loop
ficoms
in
ret
and
lods
dec
sbb
add
stos
inc
fadd
ret
outsb
je
pop
sub
adc
sbb
subl
sbb
bound
add
sbb
lock
mov
push
outsb
and
test
stos
aad
lock
adc
push
push
cmpsb
push
mov
sbb
lea
lods
inc
adc
ret
xchg
sub
fcmovb
adc
or
rolb
mov
pushf
js
cmp
jl
les
test
les
cmp
gs
push
scas
rol
mov
sbbl
cmpb
js
push
mov
enter
mov
push
out
mov
mov
push
inc
pushf
sbb
adc
push
inc
clc
mov
sbb
fiadds
xor
popa
adc
jno
or
or
aam
loope
xor
lcall
test
lea
cwtl
inc
adc
xchg
inc
popf
pushf
xchg
jp
mov
cmp
rcrb
clc
pop
loopne
call
icebp
add
rolb
testb
sub
xor
or
push
sub
js
fs
mov
sbb
mov
xchg
and
push
bound
xchg
mov
sbb
inc
inc
and
mov
movsb
jno
xor
mov
jbe
adc
hlt
mov
or
jne
sbb
add
fdivl
adc
mov
and
mov
rcr
dec
nop
xorb
mov
inc
insb
lods
ret
push
fbstp
mov
inc
or
rorb
and
roll
mov
fisubl
data16
sub
pushf
dec
xchg
xchg
adc
ljmp
pop
mov
and
or
call
sbb
sbb
in
xchg
pop
stos
adc
mov
push
push
mov
mov
sub
xchg
jb
cld
sbb
loopne
dec
aam
sub
xchg
inc
cli
mov
pop
or
rcrb
popa
inc
cltd
mov
ret
fld
inc
mov
sbb
fmuls
stos
cmp
in
popa
and
jle
add
jecxz
popf
cs
inc
sub
inc
and
xchg
push
movb
arpl
push
loop
test
pop
dec
and
mul
adc
fdivl
sub
sbb
jecxz
bound
imul
pop
cmp
and
sbb
fdivs
es
fldl
lock
cmp
lret
push
sbb
inc
inc
mov
push
push
out
xchg
lods
jp
pop
add
sbb
pusha
lods
and
stc
mov
lcall
and
lret
push
push
lahf
hlt
outsb
icebp
add
inc
in
or
adc
pop
outsb
xchg
cli
das
mov
add
xchg
sbbb
cwtl
push
rorb
adc
lods
out
sub
xor
push
push
in
jo
hlt
pop
fmul
fbstp
sbb
cmpl
push
sbb
or
and
pop
lock
add
pop
js
mov
in
or
sarb
scas
loop
sahf
rolb
lods
pusha
or
add
pusha
xor
xchg
dec
dec
jbe
xor
xor
gs
loop
mov
rclb
lock
pop
mov
les
fs
sbb
jp
shr
xchg
or
scas
lock
push
mov
and
loopne
cmp
push
xchg
lods
movsl
pop
sub
pop
and
ret
leave
cmp
and
push
lds
and
push
rorb
popa
cmp
dec
sub
push
test
js
ret
push
cmp
ret
add
cmp
in
loopne
dec
inc
mov
test
lret
outsl
ljmp
sarb
mov
mov
mov
in
subl
and
jbe
int3
xchg
in
add
popa
cmpsb
cli
and
mov
add
xchg
mov
pop
and
add
shlb
mov
lret
insb
push
adc
jae
pop
imul
les
or
hlt
stos
je
rcrb
out
rcl
jmp
adc
add
and
lret
call
mov
mov
inc
rorb
mov
lods
test
xchg
lods
or
add
mov
dec
jl
ds
mov
pushl
arpl
mov
push
cmp
adc
inc
addb
fstps
jp
jo
mov
jo
pushw
cmovno
jmp
sub
sub
add
es
jp
loop
and
rol
dec
jae
fstl
leave
add
sti
mov
dec
bound
pop
inc
cwtl
xchg
inc
push
xor
add
inc
leave
push
xchg
and
xorb
push
jl
adc
data16
insl
outsl
push
adc
push
xchg
inc
cs
mov
push
sub
or
add
addl
and
dec
popl
icebp
mov
or
nop
xchg
icebp
pop
dec
push
mov
js
adc
inc
mov
mov
les
add
mov
or
add
mov
nop
imul
pop
test
mov
xor
ljmp
inc
inc
shl
cmp
lret
push
xchg
ret
hlt
mov
fisubrs
ret
adc
data16
in
push
aam
and
je
test
mov
pushf
push
mov
inc
jo
xor
jmp
in
in
out
movsl
xchg
test
xchg
sbb
jle
mov
fnstenv
mov
xchg
sahf
push
xchg
jns
xchg
push
push
cmp
andl
cmpl
mov
adc
jle
cmp
xor
cmpsb
xor
out
mov
and
mov
mov
mov
addr16
cmp
push
hlt
mov
xor
hlt
cmp
sbb
pushf
lret
pushf
or
js
clc
fcomip
fs
mov
xor
and
and
or
mov
sbb
inc
mov
adc
sbb
pop
inc
push
insb
push
xor
add
mov
push
and
fs
mov
adc
adc
mov
sub
sub
push
rolb
out
and
mov
push
jbe
adc
inc
mov
nop
push
cmp
outsl
jmp
loop
cmpb
xchg
xor
pop
ss
test
xor
sbb
dec
mov
add
fdivs
mov
adc
outsb
negb
xchg
ds
mov
and
lds
mov
or
test
cmp
dec
out
push
enter
sbb
mov
popf
sub
jne
push
push
cltd
push
fcomps
jae
xchg
movb
jne
adc
xor
repnz
dec
int3
ljmp
xor
cmp
sub
xchg
in
insb
into
mov
add
shlb
mov
push
movsb
ds
cmpsl
adc
jo
push
sbb
jp
nop
mov
dec
repnz
xchg
mov
cmc
xchg
and
test
sub
ds
lea
mov
ror
mov
pop
jo
nop
or
lea
pop
cs
shlb
xchg
mov
rcrb
outsb
sahf
add
ljmp
fsts
faddl
xchg
enter
shl
ret
adc
push
sub
add
xor
xor
push
xchg
fld
xorl
and
pop
dec
sub
cmp
fimuls
push
add
les
sbb
push
add
pop
push
lcall
and
mov
popa
or
dec
pop
cli
pop
stos
jbe
popf
lods
pop
in
mov
add
popl
shl
add
xor
lds
or
lock
shlb
mov
push
inc
movsb
and
clc
mov
sub
insb
adc
push
jns
xorl
pusha
insb
stos
xchg
push
inc
shr
nop
je
or
push
test
pop
test
lods
roll
sbbb
ljmp
pushf
inc
mov
and
dec
pop
repnz
and
xchg
mov
push
inc
jp,pt
dec
test
clc
push
push
enter
stc
pop
cmp
xchg
add
mov
adc
ds
lods
and
or
cwtl
stos
outsb
and
xor
sbb
push
sub
or
mov
sub
les
divb
mov
xor
shlb
and
xchg
mov
orb
inc
enter
push
inc
mov
je
inc
and
cmovo
pop
dec
aam
push
xor
push
loop
xchg
xor
xchg
push
movsb
aad
or
push
mov
mov
sub
ret
mov
and
xchg
mov
ret
mov
call
imul
pop
cltd
mov
and
push
cwtl
repnz
pop
add
mov
sbb
xor
popf
cmp
lods
mov
lods
add
pop
add
jo
daa
pop
int3
lret
dec
mov
push
pop
cmp
mov
push
add
daa
mov
or
cmp
or
cli
scas
pop
ret
loop
xchg
adc
iret
movsb
and
and
leave
cld
enter
push
ret
aam
rclb
sbb
xchg
inc
ja
pop
xchg
sub
rclb
and
or
xor
jno
and
inc
call
jmp
sarb
push
ror
addr16
int
insb
jo
insb
dec
or
mov
hlt
mov
mov
sbb
stos
sahf
mov
sarb
popf
ror
rorb
mov
jno
push
xchg
sarb
js
sub
fs
sub
mov
push
xor
mov
inc
inc
mov
enter
cmp
inc
sbb
js
out
jb
cmc
xor
push
and
push
mov
mov
nop
xchg
test
mov
hlt
xchg
pop
mov
icebp
and
ss
loop
mov
cmp
xor
sbb
jmp
sbbl
sub
in
in
xchg
negl
push
fstpt
fwait
test
dec
push
shr
add
fisubl
lock
add
pop
aam
jecxz
cmp
add
add
or
push
sahf
aam
sar
shll
movsb
in
ret
push
sbb
add
dec
aam
hlt
and
add
jg
sub
mov
js
push
sub
mov
inc
aam
push
push
out
add
das
jmp
hlt
dec
sbb
movsb
ss
rorl
clc
jge
jle
push
lret
push
pop
and
sar
mov
outsb
insb
lret
in
ret
scas
jmp
dec
ja
dec
stos
sub
sub
push
adc
xchg
and
pop
bound
inc
adc
mov
test
push
push
jnp
xchg
jmp
push
ljmp
adc
dec
mov
sahf
mov
lret
mov
mov
psllq
jb
andb
pushf
mov
hlt
mov
jbe
mov
sbb
cmp
lcall
je
xor
icebp
movsl
fidivrs
fs
push
mov
ljmp
push
sub
dec
ffree
pop
les
in
xchg
jno
idivb
lret
ret
lret
mov
je
test
push
cltd
adc
scas
mov
les
pushf
dec
sbb
imul
sub
movsb
push
lods
inc
enter
mov
es
movsl
mov
push
repnz
xor
mov
and
icebp
test
shrl
cld
loopne
into
and
mov
xchg
movsl
lds
mov
adc
xor
push
shlb
xor
inc
push
stos
into
sbb
ret
popa
sub
out
push
fs
mov
mov
mov
popa
mov
pop
addl
and
sub
out
mov
jo
xor
dec
sbb
sbb
push
mov
adc
cmp
cld
cld
sub
es
cmp
sbb
ss
ljmp
test
mov
int3
call
add
xor
xchg
rcrb
xor
sbb
pop
test
sarl
enter
xor
push
mov
test
mov
popf
hlt
cmp
call
pop
adc
jp
rolb
sahf
pop
jp
pop
insb
movsb
arpl
ss
arpl
pop
sub
loope
mov
push
sub
jno
adc
mov
xchg
pop
sbb
cmp
sub
cmp
adc
mov
xor
ret
pop
daa
pop
shlb
in
sub
xchg
loop
test
jne
movsb
mov
aam
nop
xor
sbb
push
mov
hlt
cwtl
jbe
adc
jecxz
les
push
adcl
pop
adc
andb
push
pop
adc
repnz
dec
pop
ljmp
adc
or
inc
mov
or
inc
adc
ljmp
adc
loopne
inc
jecxz
mov
cmp
and
cmp
xchg
mov
or
adc
enter
es
sbb
mov
jb
test
test
dec
mov
mulb
sysret
sbb
in
loop
cmp
dec
mov
fidivrl
push
cmpsl
xchg
movsl
push
outsl
mov
or
mov
shlb
cmp
into
out
lea
or
inc
cmp
pusha
mov
stc
add
call
aam
or
out
pop
and
or
jne
add
adc
push
push
or
xorl
or
fisttpll
adc
and
adc
jbe
dec
lret
cmp
xor
mov
fmuls
into
jns
lahf
imul
xchg
pop
pushf
push
hlt
add
push
sbbl
add
out
or
data16
sbb
xor
daa
fistpll
or
fildl
testb
push
mov
mov
pop
out
add
dec
std
sahf
data16
xor
mov
push
lahf
insl
mov
inc
push
or
pop
dec
sbb
repnz
rclb
dec
and
mov
xor
in
jb
in
test
adc
push
pop
adc
pop
jg
js
js
mulb
les
mov
push
js
sub
sbbb
jbe
push
xor
or
cmp
pop
int3
test
sub
ljmp
sahf
sbb
icebp
mov
adc
aam
addr16
loope
dec
je
xchg
ja
in
in
fimuls
jecxz
sub
push
and
sbb
shlb
and
mov
mov
and
push
mov
hlt
pop
loope
xchg
mov
popa
outsb
dec
pushf
or
or
mov
loopne
jl
inc
inc
mov
or
and
add
jb
cli
test
sub
aam
dec
lea
or
call
ljmp
in
sbb
loopne
fs
testb
inc
and
mov
shlb
cltd
add
repnz
sub
sub
and
lret
popa
bound
push
cmp
adc
cmp
add
push
and
mov
inc
nop
sub
imul
inc
jl
clc
or
aaa
xor
and
xchg
push
inc
fld
addb
mov
push
popf
add
pop
adc
imul
mov
mov
out
jp
shlb
mov
adc
pushf
or
mov
inc
ljmp
int3
inc
enter
pusha
jb
addb
dec
push
dec
jmp
popa
sub
pop
sbb
je
mov
rcrl
insb
loopne
sub
ret
cmp
xor
enter
dec
xchg
add
sub
adc
std
inc
inc
imul
adc
and
or
jp
lret
enter
pop
jno
pusha
inc
xorb
and
mov
fs
inc
outsl
add
dec
fdivrs
xchg
mov
add
push
fmuls
mov
jbe
rorb
loope
pop
sbb
and
mov
cwtl
jmp
out
jo
loopne
rolb
jne
push
push
dec
imul
cmp
inc
imul
xor
or
std
es
or
push
pushaw
add
inc
shlb
sbb
lea
sub
mov
rorb
sub
xor
imul
sbb
into
lods
add
or
js
rcrb
pop
pop
mov
add
xor
outsl
inc
push
mov
cmp
xchg
lock
hlt
js,pn
push
inc
mov
xchg
mov
cmpsl
mov
gs
push
add
mov
adc
ret
jecxz
or
pop
mov
jo
arpl
jg
xchg
ljmp
mul
add
inc
mov
js
ret
xor
loop
ret
push
bound
pop
cmp
pop
in
mov
add
dec
inc
ret
gs
movsb
stos
aam
dec
add
stos
add
pop
test
mov
mov
ds
cmp
push
aam
rolb
shr
into
xor
xchg
xchg
pop
add
xor
add
cmpsb
sbb
mov
xchg
movb
or
add
out
addr16
mov
shrb
and
in
dec
mov
call
mov
add
adc
pop
and
es
add
hlt
mov
xchg
sarb
and
xor
stos
add
sub
or
lea
sbb
daa
hlt
fs
or
cmp
rcr
ficoms
mov
mov
mov
and
mov
mov
sub
cmpsb
dec
aaa
push
or
movsb
push
inc
arpl
push
cmp
and
sub
pop
aam
lock
inc
insl
sub
pop
cmp
or
int
push
ds
pop
inc
repnz
push
movsl
jmp
mov
ljmp
shl
in
nop
pusha
adc
rcrb
push
ret
fists
mov
pop
pushf
and
mov
loope
push
push
jle
aaa
mov
jne
push
addl
and
imul
stc
aam
mov
pushf
rcl
rol
and
lds
test
add
aam
sahf
or
dec
add
fs
fadd
arpl
or
push
sbb
dec
out
sub
enter
lea
sbb
mov
sub
mov
pop
les
iret
notb
je
add
int3
or
je
xchg
and
dec
call
push
fmuls
mov
pop
mov
hlt
jbe
sub
enter
enter
xor
xchg
ljmp
dec
push
cmpsb
js
cli
enter
push
add
jne
dec
out
cwtl
pushf
jl
or
rolb
cmp
int3
data16
pop
rcrl
dec
movb
adc
jl
pop
jnp
into
insb
lods
ss
lea
bound
push
mov
dec
cmp
adc
pop
sbb
xchg
test
push
and
rclb
subl
sub
cmp
and
cs
cltd
repnz
add
mov
mov
push
adc
aas
pusha
je
sub
pop
push
enter
mov
sbb
push
push
xchg
inc
and
mov
cmp
data16
lret
out
xchg
clc
inc
ljmp
aaa
loopne
shr
xchg
or
lret
xorb
outsl
ret
je
add
cmp
jbe
xor
sub
sbb
ja
ss
fiadds
jo
je
test
cltd
mov
push
pushf
pushf
jo
cmp
addb
movsb
mov
xor
mov
pop
lret
push
daa
xchg
in
mov
enter
and
cmpsl
roll
ss
inc
in
loop
sbb
cmpsb
mov
push
cmp
ficompl
pop
cld
clc
push
dec
vpsrad
lock
lds
repnz
and
test
in
cmpsl
push
cmp
dec
enter
and
lock
into
aam
ret
mov
xor
xor
mov
inc
movl
push
es
bound
arpl
sub
sub
mov
loop
pop
clc
or
add
cs
adcb
call
mov
icebp
pushf
insb
imulb
add
cmp
mov
xor
inc
cmp
lahf
xor
add
scas
cmp
outsl
cmp
push
cmp
push
pusha
repnz
dec
pusha
and
mov
adc
jb
cmpsb
pop
shll
push
mov
ja
js
les
mov
push
insb
dec
lods
xorb
dec
jo
and
mull
rorb
push
adc
or
ret
dec
push
test
or
sbb
push
cmp
pop
xchg
fdivrl
mov
addr16
in
lea
lods
sbb
add
jmp
push
es
sub
push
cmp
faddl
sub
ljmp
xor
adc
fisttpll
or
bound
xor
in
mov
imul
pop
dec
or
enter
ret
inc
push
mov
inc
loop
dec
loop
xchg
ret
or
jb
lcall
outsb
jb
out
xor
cmp
pushf
push
mov
add
icebp
pusha
scas
shrb
push
dec
cmp
imul
cmpsb
xchg
shlb
and
adc
popa
hlt
mov
test
js
mov
js
fs
int
mov
push
orl
std
dec
aam
sbbb
xorb
sbb
xor
fsubrs
jp
push
stos
test
bound
xor
leave
rolb
loope
mov
loop
enter
mov
enter
rol
mov
ss
pushf
dec
jo
push
sbb
push
outsb
or
test
sub
inc
cmpsl
idivb
andb
xchg
dec
faddp
loope
pop
ljmp
sub
insl
and
lods
inc
inc
pop
bound
sub
mov
dec
sahf
or
push
xorb
icebp
pop
sub
ljmp
and
mov
movsb
pop
ret
pop
movb
mov
push
sub
add
cltd
ret
push
ljmp
jmp
ljmp
and
push
xchg
dec
inc
inc
mov
je
sbb
test
add
ljmp
xlat
dec
ret
fildll
jne
push
mov
pop
rol
loopne
enter
je
in
cmpsl
push
int3
push
int3
add
cmp
pop
movsl
push
push
mov
sbb
mov
movsb
mov
decl
pushf
andl
sti
and
imul
mov
mov
outsl
lret
cltd
xchg
movl
and
fidivrs
xchg
cltd
cli
loop
movsl
or
outsl
mov
or
add
and
shl
add
movsl
loop
add
or
add
rcl
and
sub
cld
xchg
adc
fistps
popa
push
fstp
mov
or
test
or
std
adc
rolb
push
aas
and
dec
pop
and
or
sbb
in
rol
pushf
cltd
dec
cmp
jne
cwtl
fisubl
loopne
and
dec
lahf
mov
or
jge
mov
pop
pop
mov
xchg
mov
and
xor
sbb
pushf
test
pop
inc
xchg
jp
popa
adc
mov
or
xor
shr
add
lret
popa
xchg
inc
fdivrl
and
imul
dec
push
ds
in
fdivl
add
and
pusha
sbb
jae
nop
add
imul
clc
and
cld
adc
call
cld
add
rolb
ret
or
mov
or
lock
push
push
mov
mov
lds
out
add
xchg
xor
dec
fdivs
pop
lock
rcll
sub
or
sahf
imul
mov
or
lock
inc
mov
int3
adc
rcrb
out
sti
lahf
push
mov
xor
inc
sbb
mov
xor
cmp
and
pandn
lds
push
aam
mov
sbb
shr
and
in
shrb
add
push
sub
sbb
inc
push
lods
lds
mul
xor
adc
dec
add
or
rclb
or
mov
cmc
shl
or
xlat
add
jmp
inc
inc
call
addl
pop
lcall
call
je
pop
inc
inc
push
pusha
lods
dec
fs
push
cmp
jge
ficoms
inc
daa
pushl
ficoml
inc
add
adc
add
loop
int
fsubrs
andl
adc
add
jp
gs
and
push
add
or
push
dec
das
or
shl
rolb
lahf
and
pop
rol
shl
lahf
ret
loopne
xlat
or
aaa
sub
iret
shll
repz
iret
lret
std
add
outsl
xor
out
imul
pop
adcl
out
sbbl
and
add
push
mov
pusha
add
inc
rorl
mov
add
xor
addb
mov
lods
xchg
dec
repnz
ficoms
mov
mov
or
loopne
ret
push
inc
pop
repnz
enter
or
adc
cltd
and
bound
call
push
push
ds
loope
ljmp
sbb
mov
mov
dec
inc
cmpsb
xchg
jo
xchg
out
jae
or
push
loopne
pop
dec
loop
pop
adcb
inc
cmp
lea
mov
jp
add
mov
push
pushf
and
dec
cwtl
lods
and
pop
mov
jecxz
mov
mov
xchg
and
sub
pop
sbb
lea
xor
sahf
pusha
loopne
and
xchg
inc
les
jbe
add
pop
rcrb
test
add
pusha
dec
ret
iret
add
arpl
mov
sbb
cmp
mov
sbb
pop
inc
mov
add
into
ret
and
add
sbbb
mov
mov
cmp
pop
push
adc
inc
pop
xchg
enter
inc
cmp
cld
nop
cmp
sub
scas
addl
xor
and
lods
xchg
aam
repnz
imul
push
cmp
psubd
mov
ret
push
test
add
inc
test
push
mov
or
xchg
and
push
dec
rolb
shl
push
lock
push
popa
mov
push
enter
cmpsb
dec
loop
sarb
adc
push
cmp
lods
ret
xorb
push
test
loopne
dec
pop
mov
or
mov
mov
mov
push
sub
and
mov
push
test
push
xchg
jle
clc
push
rcrb
or
hlt
mov
shrb
dec
lods
sbb
or
sub
je
fmul
shrb
inc
or
inc
dec
enter
xor
xor
je
aam
inc
mov
xchg
cwtl
rcll
sahf
mov
ficomps
lock
or
adc
jo
pop
push
and
xchg
cmp
mov
and
cmp
xchg
cmp
or
cmp
sbb
mov
fcmovbe
inc
push
lods
into
or
cli
cwtl
data16
roll
or
test
pusha
jp
nop
in
pop
pmuludq
sahf
arpl
xchg
mov
add
imul
es
imul
int3
cld
mov
mov
push
in
lret
inc
imul
xchg
dec
popf
ja
test
add
jbe
xchg
sbbl
cmp
dec
sahf
rclb
cmp
movsb
cli
out
ljmp
lock
aad
pusha
fisubrs
cld
xor
cld
mov
dec
bound
add
inc
ss
mov
outsb
mov
bound
out
test
ljmp
pop
inc
cwtl
cltd
ret
add
popa
xchg
push
sbb
push
add
cmp
sbb
ljmp
in
ret
cltd
je
neg
push
sahf
movsb
xor
adc
xor
and
xchg
es
cmp
dec
mov
mov
fmul
xchg
js
into
cmp
pop
pop
rclb
or
add
lret
jno
sub
les
pop
add
into
xchg
dec
daa
xchg
sbb
gs
mov
pushf
jecxz
xchg
mov
adc
sahf
xchg
lods
jmp
mov
adc
jp
and
adc
and
pushf
or
shrb
jb
and
sub
les
adc
rol
out
cmp
jo
push
cmpb
ret
push
xchg
shlb
jle
js
xchg
push
jnp
not
sbb
in
inc
push
push
and
jnp
pop
sbb
in
dec
jbe
enter
push
movsb
stos
xchg
xlat
add
aaa
inc
mov
mov
or
add
enter
and
jp
cli
or
inc
jle
push
xor
lds
test
cmp
sbb
scas
pushw
out
outsl
test
adc
mov
clc
mov
rolb
aam
lret
or
xlat
or
fs
jmp
dec
xor
mov
or
jns
cmp
lcall
je
mov
sbb
add
hlt
xchg
jle
les
scas
and
and
adc
add
or
nop
sbb
aam
add
dec
fdivrs
aam
ljmp
xor
pop
pop
loopne
cld
mov
or
adc
push
lods
push
sub
dec
popf
je
out
into
jp
pop
testb
dec
xchg
xchg
xchg
and
ja
mov
cmc
mov
rorb
pop
mov
cmp
insl
mov
dec
push
adc
pop
or
mov
lods
and
jne
jo
dec
ljmp
mul
mov
fdivrl
mov
inc
pop
or
push
outsl
add
test
sbb
test
lock
ret
test
adc
mov
sahf
mov
lret
js
je
ss
mov
pushf
movsb
scas
pusha
into
mov
xor
xor
repnz
adc
sbb
repz
lock
ds
sbb
das
xchg
inc
pop
push
pop
js
pop
cld
or
mov
adc
or
mov
dec
imul
js
mov
push
sbb
fxch
adc
insb
sbb
rclb
mov
dec
sbb
pop
push
add
dec
mov
cmpsl
add
lret
int3
js
pop
pop
lock
pusha
push
dec
sbb
aad
movsb
dec
add
pavgb
and
addr16
das
int3
adc
sub
sbb
mov
adc
loope
cmpsb
clc
jl
or
cmp
incl
mov
test
out
xchg
les
sub
pusha
xchg
dec
in
jo
cmp
es
into
add
dec
das
or
pop
mov
ficoms
dec
ret
cmp
sarb
fwait
jo
ja
jo
hlt
dec
lock
mov
loopne
ror
lock
or
sbb
add
lods
rcll
adc
adc
xchg
sub
nop
testb
mov
int3
in
xchg
lea
cmp
dec
dec
ret
push
nop
mov
jecxz
jle
mov
sub
xor
add
jnp
adc
push
xor
push
push
push
in
add
jo
dec
je
dec
lock
inc
push
or
lods
cmpsl
or
inc
jo
test
test
sbb
insl
mov
cmpsl
in
outsb
mov
movsl
mov
outsl
loope
lret
mov
loopne
xchg
sahf
adc
add
insb
inc
out
loope
push
or
ficomps
push
pusha
and
sub
add
mov
cmp
add
jp
enter
mov
and
xchg
push
and
rcrb
call
sub
cmpsb
shlb
lods
test
or
dec
loopne
dec
adc
inc
add
js
adc
add
cmp
add
es
sub
shlb
adcb
add
mov
cmp
leave
lods
popa
sbbb
ret
adc
mov
in
sub
test
xchg
pop
or
jno
sbb
jo
sub
ss
inc
sbb
adc
pop
addr16
into
in
popf
les
sub
inc
add
daa
pushf
inc
bswap
mov
icebp
sbb
pop
mov
lret
jns
jl
jecxz
xchg
nop
and
adc
lock
or
pop
inc
push
sahf
pop
adc
xchg
pop
sbbb
rclb
scas
icebp
add
pop
popa
sub
lods
inc
sub
mov
pop
lcall
push
fmull
cmpsl
add
jle
js
addb
cmp
cld
sbb
les
mov
push
ss
movsb
and
xor
lcall
cmp
push
fcomps
push
dec
loope
xor
jmp
mov
xor
out
repnz
fcom
push
mov
xchg
sub
add
pop
mov
pop
jle
popa
and
dec
inc
loopne
data16
xor
dec
sub
arpl
ret
jno
loop
lret
add
rclb
or
inc
xchg
xchg
xchg
mov
sbb
in
or
inc
mov
add
jge
popf
or
aam
add
ss
sub
xchg
movsl
xor
cwtl
andb
lods
xor
push
das
ret
lods
icebp
addb
sbb
push
fnsave
xorb
sbb
shlb
inc
dec
mov
mov
adc
push
roll
xchg
sub
add
pop
xchg
push
test
push
pminsw
pop
xchg
int
scas
imul
sbb
or
jmp
addb
xor
cmp
and
xchg
outsb
jnp
mov
rcl
pusha
pop
pop
jmp
pop
rol
adc
test
xlat
jo
add
and
mov
xor
aaa
lods
dec
mov
out
iret
or
in
fiaddl
rcl
fists
out
not
addr16
incb
das
jecxz
ror
mov
adc
mov
ljmp
push
aam
cwtl
add
addb
pop
sub
jmp
sbbb
adc
pushf
inc
fadds
rcr
xor
xadd
sbb
lret
or
jno
xchg
jge
not
js
and
loop
push
lods
jge
rorb
push
xlat
push
jbe
lret
sbb
aad
sub
sub
addr16
push
outsb
jo
mov
add
loop
adc
sbb
jecxz
mov
loope
fs
lods
and
add
or
mov
xor
test
lods
stos
enter
test
sub
add
rolb
push
jne
lock
mov
lock
mov
lahf
adcb
add
fdiv
in
pop
clc
in
push
adc
roll
add
iret
xor
jb
mov
add
test
ror
lods
push
adc
add
incb
fidivs
sub
shl
mulb
and
and
or
idivl
fidivs
test
ja
mov
cmc
sarb
out
mov
fdivrs
rorb
add
fcompl
rcrb
movb
fsubrs
lret
out
lock
mov
add
sub
push
lods
mov
or
or
les
xchg
fadds
ret
or
int
sbb
testl
lods
rcrl
cmp
push
pop
and
jmp
stos
movb
adc
aas
fisubs
cmp
push
mov
daa
add
inc
inc
sbb
dec
inc
mov
inc
icebp
xchg
rol
shl
sbb
or
fdivr
es
dec
loop
ret
add
lods
push
les
outsl
rcll
in
sub
mov
sbb
cld
repz
das
adc
ljmp
adc
popf
pop
ds
outsl
pusha
add
sti
and
dec
nop
add
jecxz
add
and
sahf
inc
dec
je
je
test
jne
shr
jp
in
out
or
sarb
sbb
and
jl
or
cmc
cmpsb
lret
adcl
sbb
addr16
subl
xchg
stos
stc
or
xchg
test
adc
mov
sub
shrb
aam
test
adc
fiadds
pop
add
popf
jmp
push
mov
inc
ret
push
adc
test
push
dec
xor
insb
inc
mov
adc
inc
cmp
ja
popf
loop
ds
dec
sub
ss
testb
loopne
add
or
aaa
shrb
and
jmp
xor
add
popa
mov
and
sub
fisttps
sbb
xchg
push
pop
icebp
dec
ret
shl
les
lods
xchg
loope
mov
das
mov
add
adc
mov
sub
xor
add
mov
mov
popf
mov
adc
enter
cwtl
pcmpgtb
sbbb
cmpl
adc
aad
outsl
orb
aam
sub
xor
sbb
mov
inc
ja
movb
xchg
pop
jl
loopne
jb
pop
or
pause
cmp
enter
loopne
repz
adc
dec
cld
icebp
mov
jmp
js
addr16
jnp
cli
movb
fadds
jl
add
jb
fistpl
dec
jbe
insl
sbb
xlat
sbb
mov
sub
sbb
mov
scas
mov
loop
or
mov
cs
pop
pop
ret
aad
sti
cltd
loope
jbe
pop
sub
jp
pop
in
xor
and
adc
clc
lds
ret
jmp
scas
mov
loope
xor
mov
aas
rorl
lods
stc
in
jp
jo
in
int3
sbb
lock
fisttps
add
addl
sahf
add
inc
js
movsb
cmp
cli
lea
ds
add
orb
sarb
push
ficoml
shr
dec
inc
inc
cmpsl
cmp
dec
or
push
lods
jbe
loopne
das
sbb
push
mov
xor
sbb
add
inc
inc
in
mov
inc
sub
mov
pop
in
je
pop
fsts
xor
les
or
out
push
inc
jb
cmp
cmc
push
mov
leave
pop
add
inc
adc
add
pop
in
ja
xor
adc
test
cmp
testl
xchg
adc
dec
stc
add
lret
mov
mov
cmc
loope
and
icebp
dec
lock
jmp
add
stc
xchg
adc
pop
fdivrs
mov
insb
sub
sub
stos
add
imul
inc
jbe
inc
or
add
jns
push
mov
push
push
cmpb
daa
cmp
je
mov
mov
jnp
or
enter
in
add
test
adc
shlb
loope
dec
push
cld
cmpl
inc
jbe
xchg
xor
adc
mov
dec
add
jbe
cmp
aad
push
push
add
add
aas
sbb
sbb
mov
test
jae
jnp
sub
jne
cmp
sub
xchg
outsb
popf
pop
sub
add
xor
jle
stos
pusha
xor
adc
mov
cld
or
js
jnp
mov
sub
insb
outsb
loope
cmp
xchg
add
push
or
arpl
xor
movsl
js
xchg
es
inc
adc
jae
and
dec
adc
out
dec
xchg
imulb
push
out
add
pop
lods
into
out
pop
fiaddl
lock
test
ja
cmp
out
cmp
mov
cmpsb
jnp
xor
fsub
jl
or
or
test
mov
fcoms
into
orl
mov
stc
fmul
jb
js
and
sti
sub
xchg
in
xchg
shrb
add
les
mov
add
in
jmp
xchg
js
jne
jbe
clc
xchg
adc
mov
or
and
js
sbb
mov
pop
and
test
add
and
lds
ficompl
addl
iret
add
or
fisubs
dec
hlt
push
cltd
jge
inc
jo
in
out
scas
out
jl
lds
ret
sub
incb
pop
idivl
sub
mov
lahf
and
icebp
movl
sub
lock
mov
std
dec
sbb
shlb
or
lret
shr
iret
jecxz
iret
dec
adcb
jmp
out
push
add
fsubrl
cld
adc
shlb
pop
mov
push
shl
sbb
xchg
icebp
jmp
test
jbe
stc
mov
ret
lods
and
jecxz
add
mov
scas
cld
aam
and
js
jle
or
pop
cmp
and
js
mov
cs
leave
loop
shl
add
in
add
jge
setnp
sbb
mov
es
adc
push
or
pop
loopne
or
cmp
stc
pushf
mov
push
add
incb
jae
xor
pop
or
pop
dec
mov
push
int3
cmp
pushf
mov
push
clc
orb
mov
xor
and
mov
push
in
sbb
pop
mov
cwtl
adc
ljmp
lock
add
in
inc
pop
nop
or
repnz
cmp
syscall
and
add
adc
xor
clc
add
sbb
dec
mov
cwtl
inc
aam
xchg
movsl
inc
add
out
xor
add
pop
pop
shl
xorl
arpl
les
push
insl
js
jmp
sub
fstp
movsb
in
push
sbb
or
int3
pop
adc
xor
push
inc
add
sbb
mov
rclb
repnz
lret
push
inc
out
mov
push
jge
jnp
adc
in
mov
das
js
and
fisubs
nop
sar
xor
stos
popf
lar
mov
roll
rcr
adc
jnp
mov
aaa
adc
pop
xor
adc
ja
les
xor
lret
and
cwtl
mov
or
in
xor
cli
sbb
and
push
cs
shll
out
popa
leave
sub
and
push
insl
pop
movsb
sti
add
fwait
mov
lret
add
push
inc
mov
das
pop
lahf
fiaddl
dec
mov
dec
insb
cmp
dec
add
repnz
fwait
scas
inc
jne
iret
push
ret
add
aam
aam
sub
push
std
shl
rol
lcall
icebp
std
and
add
in
jae
sbb
movsb
testb
les
jmp
in
add
pusha
shrl
mov
or
aad
pop
dec
jmp
xchg
xlat
jne
xchg
ss
inc
lret
adc
inc
mov
add
aam
and
cmp
cltd
out
xchg
dec
sub
aam
and
sub
pusha
into
popa
adc
cmpb
sub
iret
outsb
inc
mov
cmp
and
fdivrp
fwait
adc
loope
aas
sbb
sub
xchg
add
popf
and
iret
lods
cmp
fdivl
or
es
ljmp
add
dec
es
movsb
outsl
mov
cmp
mov
mov
int3
ror
push
insb
shr
flds
jg
ficomps
les
lret
mov
add
rcrb
ss
pop
clc
cs
jecxz
test
and
cs
fs
sub
icebp
hlt
outsl
xchg
mov
loopne
push
push
movsl
inc
sbb
fsubs
mov
pop
cmp
jae
test
mov
push
pop
loop
jmp
call
negl
scas
mov
push
nop
adc
mov
xlat
cmp
sub
dec
aad
ljmp
push
cmp
stos
sub
dec
adc
sbb
movsl
cmp
sbb
xor
cmp
leave
adc
clc
out
cmpl
sbb
in
jno
mov
icebp
mov
cli
out
incl
or
test
out
mov
jmp
repz
ret
fdivr
cmp
in
inc
add
sub
negb
icebp
sbb
sub
inc
lock
xchg
cld
jmp
pop
pusha
int
or
cltd
mov
ret
cmpb
add
mov
adc
pop
inc
ret
mov
push
mov
jns
daa
pusha
repnz
add
sub
aaa
push
loopne
rol
aas
int
ja
and
pop
push
jns
mov
test
je
jo
push
xor
daa
js
mov
mov
subb
and
sub
pop
sbb
cmp
fistpl
sbb
jecxz
adc
pop
push
int
nop
rcr
fisubrl
xchg
push
inc
adc
sbbb
fcmovnbe
or
mov
mov
lea
arpl
xchg
jns
ja
shl
xor
repnz
mov
jns
loopne
and
test
add
pop
adc
scas
ret
ror
add
xchg
xchg
enter
or
in
dec
jo
inc
xchg
jle
pop
or
push
cltd
loopne
pop
lret
fstpt
shlb
cld
xchg
int3
mov
add
cmp
and
shr
lret
dec
shll
cmp
rolb
inc
pushl
pop
add
rolb
jbe
and
adcl
popa
aad
rorb
xchg
xchg
pop
sub
shl
pusha
movsl
or
mov
mov
jp
add
rcll
rorl
rclb
xchg
test
jmp
in
or
push
inc
rcrl
mov
mov
leave
push
fsubrs
incb
scas
cmc
xchg
mov
add
xchg
mov
lcall
mov
sub
fwait
aad
add
in
lock
xchg
ss
or
btr
in
dec
add
out
scas
jo
inc
aaa
mov
mov
sub
fisubl
xor
inc
mov
shlb
inc
xchg
and
arpl
jle
lahf
xlat
and
mov
pop
and
inc
or
loope
sbb
sbb
cs
ret
lods
cmp
push
cltd
pushl
stc
add
and
jae
inc
pop
ret
or
cmc
add
mov
adc
mov
sub
in
aam
ftst
or
shr
xorl
minps
cltd
add
movsl
sub
mov
inc
push
xlat
inc
sbb
add
ror
rcl
sbb
pop
cmp
je
jns
shr
mov
or
aad
pop
inc
loopne
mov
add
aas
mov
sub
test
adcb
add
cmpsb
mov
cmp
mov
jo
pop
fwait
mov
shlb
ss
add
mov
xchg
pop
sbb
xor
stos
mov
clc
rol
adc
icebp
and
cmc
loopne
add
pop
call
jb
pop
jnp
or
pop
add
roll
and
enter
mov
add
sbb
loop
es
add
jmp
leave
or
or
cwtl
mov
clc
lds
sbb
adc
pop
das
andl
pop
cltd
add
jle
mov
mov
xlat
movsb
testl
inc
and
ja
loopne
vgatherdps
loop
mov
loopne
and
das
add
or
fbld
pop
lock
mov
bswap
lods
pop
adc
mov
rorb
ror
sti
decl
jecxz
pop
iret
lret
leave
jge
inc
sub
cld
push
adc
je
out
mov
xor
ret
shrl
call
insl
cli
mov
pushf
mov
push
lds
cmp
sub
dec
cwtl
out
ret
dec
cltd
adc
xchg
lahf
sub
pop
out
adc
add
icebp
pop
stos
sub
pop
psllq
fcoms
test
xchg
add
bound
mov
jno
sbb
sbb
aas
insl
roll
loop
xor
aaa
rol
scas
xchg
adc
je
mov
add
dec
add
and
adc
rcrb
xor
cli
mov
je
fcmovne
shl
sbb
sbb
lods
jbe
or
adc
xchg
div
fchs
mov
fcoms
dec
sbb
adc
pop
loopne
loopne
unpcklps
aam
dec
or
pushf
lods
add
sbb
push
lret
ret
push
aam
xchg
mov
ret
push
push
add
das
jne
inc
nop
pusha
adc
cmpsb
push
rol
cmp
shl
and
ss
in
sbb
inc
ds
aam
mov
add
jmp
sub
enter
call
dec
js
adc
in
adc
jne,pt
ds
adc
fcompl
mov
das
adc
push
adc
and
adc
sbb
push
jns
rorb
push
jbe
inc
adc
rol
loopne
jo
xchg
mov
sub
mov
jbe
mov
or
mov
add
dec
loopne
or
insb
xor
fcomip
adc
mov
jbe
pushf
sub
out
sbb
cmp
stos
loop
jb
addl
add
lea
push
inc
sbb
clc
push
js
jecxz
out
js
or
mulb
push
stos
cmp
pop
insb
fwait
cmp
sub
push
sub
imul
mov
mov
fs
pop
sub
push
imul
adc
fldl
mov
lahf
or
mov
or
fildl
pop
or
clc
bound
push
aad
mov
data16
jno
and
cld
sbb
dec
fnstcw
add
sti
push
inc
jl
and
mov
movsl
mov
jle
cmp
sub
cli
scas
sub
sbb
add
push
and
add
pop
cmp
ss
cmc
mov
nop
push
loopne
jbe
pop
inc
sub
push
mov
popf
pop
fcompl
das
cmp
sbb
cld
cmp
cs
jmp
subl
test
lods
push
add
sub
cmp
insb
je
stc
pushf
add
shll
sub
rcr
or
aas
test
jecxz
jo
rclb
repz
shl
sbb
or
mov
out
imull
arpl
or
adc
sub
imul
dec
inc
push
mov
dec
pavgw
xchg
or
inc
mov
call
cmp
sub
loopne
or
mov
add
fisttpl
outsl
test
push
push
mov
jecxz
mov
adc
pop
add
aad
or
sahf
fmul
rcll
clc
fcomp
xchg
jle
ja
orb
xor
test
jge
fstps
pop
lock
lock
stos
hlt
inc
inc
sbb
xor
pop
sbb
bound
xlat
pop
push
enter
mov
push
rclb
mov
popa
add
adc
imul
cmpb
inc
inc
test
sbb
adc
jmp
out
es
pop
xlat
into
fists
mov
lea
xor
sbb
add
popf
adc
cmpsb
add
push
in
ret
cmp
add
and
mov
mov
pushf
xlat
push
lock
mov
jae
lret
insb
inc
xchg
inc
pusha
xchg
lea
lock
movl
iret
jb
add
out
mov
pop
sub
cmc
les
iret
in
add
push
das
adc
sbb
or
stos
pop
fsub
incb
mov
adc
rolb
mov
mov
je
in
mov
jg
sbb
sub
push
mov
push
push
pop
lock
stos
jbe
js
lock
xor
mov
xorl
popf
cmp
lock
xchg
push
mov
idiv
mov
or
add
sti
and
xchg
inc
loope
dec
iret
adc
pop
push
popf
hlt
cpuid
xchg
push
les
lds
out
icebp
and
addb
test
aaa
add
shlb
or
sti
stos
sbb
stc
mov
mov
mov
xchg
mov
inc
pop
push
mov
mov
cli
ret
jns
incl
orb
inc
mov
stos
push
dec
xor
ljmp
xchg
fistpll
dec
cmp
mov
cmpsb
mov
add
inc
jae
mov
xlat
add
sbb
clc
icebp
or
fstps
ret
dec
lret
dec
or
mov
movsl
nop
jge
or
jb
pop
cmc
pop
clc
rolb
ror
stos
add
jne
mov
jbe
dec
popa
ss
lods
mov
sub
test
les
fsubs
or
and
push
sbb
aaa
push
push
loopne
in
mov
cld
jecxz
or
fistl
subps
and
fmuls
and
or
add
dec
loopne
adc
and
and
sbb
inc
push
call
enter
sbb
cmp
loope
add
push
fdivs
or
dec
lsl
sub
add
cmp
outsl
dec
fadds
adc
daa
push
in
test
filds
movl
addr16
jbe
mov
jecxz
lahf
roll
push
imul
xchg
fimuls
sbb
insl
clc
cltd
xchg
rolb
cmpl
pushf
push
imul
inc
cwtl
pop
cmp
or
lds
sub
adc
aas
dec
icebp
pop
mov
xor
cmp
bndldx
xor
jbe
call
xchg
add
jecxz
push
rcr
pop
mov
sub
movb
push
inc
pop
cmp
sub
dec
xor
mov
add
daa
lods
mov
cli
adc
pop
sub
dec
cmp
xchg
push
pop
lret
and
xchg
enter
adcl
sbb
lock
enter
in
sbb
pop
rol
push
test
add
push
adc
in
inc
inc
div
add
ja
in
push
loope
out
add
mov
or
adc
scas
push
cltd
sbb
sbb
cwtl
out
jg
out
mov
lods
sbb
test
je
repnz
sub
jmp
inc
mov
add
ja
test
enter
push
aam
and
daa
adc
mov
fbstp
dec
push
cmp
jge
cmpsb
pop
add
incl
shlb
lods
cmp
jge
or
je
lods
out
loope
sbb
jmp
lock
cld
push
sbb
cs
push
test
jne
sub
rclb
fmuls
in
xlat
adc
loopne
inc
clc
aad
jecxz
rorl
xchg
std
addb
add
or
sub
sbb
push
inc
cmp
add
les
cmp
add
jnp
push
jge
add
xchg
sub
pop
iret
fdivs
fmuls
lret
sub
cmp
or
sbb
and
js
into
adc
cmp
inc
or
jo
mov
xchg
sti
out
jmp
or
repz
mov
push
sbb
or
add
sbb
mov
push
icebp
cmp
sahf
jge
and
add
pop
add
sbb
mov
or
jmp
test
icebp
orb
in
fs
xchg
push
sub
pop
mov
shll
aas
add
addb
or
fisttps
xor
sbb
sub
inc
aam
scas
rcr
aam
fcomi
inc
jp
adc
and
inc
in
rolb
ljmp
cmp
add
or
pop
loope
mov
test
xchg
xchg
add
scas
les
adc
repnz
mov
mov
sub
pop
jnp
or
sbb
sahf
jne
pop
cmp
sub
inc
or
sbb
outsl
xor
and
or
loop
or
lods
add
out
ret
ret
mov
sbb
ret
cmp
sbb
aad
xchg
dec
icebp
inc
scas
lods
mov
dec
and
dec
rcrl
push
fdivl
adc
or
sub
pop
clc
test
out
inc
push
pop
mov
sub
loope
sti
push
pop
xchg
sti
or
clc
popa
add
loop
loopne
sbb
movsl
fwait
test
push
add
mov
or
negb
jbe
mov
inc
cwtl
div
jno
cmpl
inc
inc
add
push
scas
cmp
call
push
rcrl
ret
adc
je
hlt
and
ljmp
movsb
mov
adc
ljmp
pop
pushf
sahf
cmp
or
sbb
in
adc
push
xchg
jge
pop
xlat
adc
testb
hlt
sbb
in
idivl
or
lret
push
push
jb
in
cmp
adc
mov
inc
pop
and
lret
loop
fiaddl
pop
fsubl
icebp
test
sub
jb
fiadds
mov
xlat
xchg
inc
pop
sahf
aaa
popa
or
or
add
repnz
loope
or
pop
pop
mov
pop
scas
xor
pop
cld
and
push
std
or
ret
fldt
adc
mov
adc
rol
inc
xor
push
lea
mov
lret
mov
int3
mov
mov
xor
add
lds
cld
push
inc
push
pop
inc
jmp
arpl
pushf
mov
lea
fwait
cmpsl
dec
or
mov
jmp
mov
or
jae
cld
add
inc
shlb
leave
cs
jg
push
test
xor
push
clc
scas
pop
icebp
dec
sub
or
xor
sbb
lret
xor
fcompl
cs
iret
or
shlb
sub
pushf
adc
and
lock
pop
dec
sbb
sbbb
mov
inc
inc
daa
arpl
adc
inc
jo
repnz
shrb
hlt
or
mov
repz
cmp
mov
lock
sbb
cmp
mov
dec
sbb
lcall
clc
cmpsl
subb
repnz
roll
loop
jl
dec
adc
fcmovnu
xor
jl
arpl
stos
adc
sub
addr16
push
loop
xchg
mov
mov
or
cmpsb
push
jecxz
push
xchg
nop
push
cltd
or
xor
jae
mov
sbb
sbb
xor
rcrb
cmp
aas
xor
cli
add
and
xchg
pop
lods
push
sahf
push
cmpb
into
nop
dec
or
fs
shlb
or
inc
clc
mov
jl
or
lcall
inc
cmp
bound
mov
sub
add
int
nop
jmp
xchg
aam
mov
inc
xchg
jl
loop
adc
mov
cmp
adc
sbb
fstpl
leave
icebp
add
into
add
enter
lds
fisttps
add
adc
test
and
xor
sbb
xlat
cmp
syscall
mov
daa
fwait
and
shl
mov
add
hlt
andb
iret
loope
repnz
sbb
cld
movsl
imul
test
mov
call
lds
ret
and
xor
mov
or
adc
pop
add
bound
sbb
mov
cmp
iret
jle
ret
add
pop
out
push
or
xchg
fists
inc
pop
scas
or
pop
pusha
mov
icebp
xor
enter
and
add
loopne
les
dec
shr
in
add
jg
loope
sti
add
push
repz
add
dec
add
cld
xchg
mov
dec
test
mov
enter
xchg
push
jmp
in
out
pop
and
aas
pop
mov
insb
mov
pop
jge
jb
in
add
es
shl
out
sub
xlat
adc
mov
insl
test
ja
add
or
or
add
nop
lret
arpl
aaa
or
inc
aaa
mov
sbb
dec
sub
outsb
pop
das
stc
sub
and
aaa
mov
sub
decb
insl
mov
sbb
add
or
jne
cli
mov
inc
bound
mov
fwait
rolb
lret
dec
daa
int3
sbb
out
mov
adc
loope
push
add
mov
call
adc
or
mov
jecxz
insb
xchg
ret
test
sub
push
popf
stos
in
ja
or
mov
adc
popf
or
push
add
adc
es
jne
adc
outsl
adc
les
adcb
push
sub
inc
dec
cmp
adc
ljmp
loope
lock
sub
mov
cmp
sbb
cmp
pop
loope
xor
rol
fcomps
scas
sbb
fsubrl
rcrb
rorl
cmp
push
loope
ror
jp
rol
push
push
push
push
push
adc
adc
or
inc
xchg
dec
mov
adc
test
inc
lock
sahf
mov
loope
or
test
fsubl
incl
in
xor
icebp
test
push
fimuls
sub
cwtl
fiadds
mov
decl
xor
test
push
aam
test
fcoml
jae
sub
pop
addr16
cmp
jb
ret
sbb
push
outsl
fistps
pop
cmpsl
mov
dec
jg
pop
mov
mov
arpl
mov
add
jo
pop
and
adc
aas
add
jmp
pop
xor
es
dec
sub
es
mov
mov
sbb
fiadds
pop
sbb
inc
push
loope
sub
pushf
sbb
lock
neg
jo
cmp
clc
test
sbb
xchg
mov
push
or
add
and
sub
xor
in
jmp
arpl
ds
adc
icebp
frstor
mov
add
adc
and
scas
sbb
shlb
or
push
aas
push
sub
ljmp
lods
mov
enter
dec
or
pop
leave
cs
cli
or
push
shl
aad
fisubl
je
js
dec
or
loop
sahf
lds
addps
lea
leave
and
es
aad
jnp
dec
scas
and
insl
ljmp
jo
push
gs
icebp
ret
pushf
insb
push
and
cwtl
rclb
cli
addb
inc
add
sbb
push
mov
outsb
aaa
fisttpl
jb
ret
add
hlt
lock
mov
mov
sub
jp
or
lds
les
std
popa
add
jne
add
lock
insl
sub
insl
cmp
adc
inc
dec
mov
sti
xchg
subb
sbb
mov
push
mov
sub
push
cmp
xchg
pusha
jg
add
adc
pop
mov
dec
fsubrp
icebp
add
push
test
pop
fwait
pop
sub
dec
or
dec
jmp
pop
insb
adc
jmp
or
lcall
push
das
pop
mov
aam
loopne,pt
add
fsts
push
pop
pop
inc
mov
outsb
ret
add
rorb
adc
adc
mov
loopne
adc
inc
mov
push
sub
rorb
mov
ret
addb
out
loope
movsl
paddd
lock
cmp
aaa
gs
dec
sti
leave
mov
loope
xor
aam
lods
ds
add
ret
adc
div
rorl
inc
xchg
icebp
test
test
xor
fsubrp
pop
stos
rol
sahf
or
int3
xor
ret
jo
sbb
mov
sub
cmp
icebp
xlat
dec
sub
and
cs
or
std
es
push
outsl
lcall
addl
test
test
push
or
adc
pop
xchg
cmp
xchg
or
rclb
mov
outsb
sbb
add
adc
pop
push
ror
cmp
inc
lock
jae
loopne
fcoms
add
and
lock
out
xchg
add
adc
mov
sub
jp
mov
js
mov
leave
xor
stos
ds
cmpsb
lret
out
push
and
iret
cmc
aaa
mov
loopne
pop
les
or
sbb
insb
pushf
inc
xor
push
daa
lock
add
cmp
bound
clc
rcrl
xchg
or
sahf
mov
push
lods
lds
sahf
pop
mov
insb
adc
into
or
rsqrtps
popf
adc
adc
adc
inc
test
pop
pop
dec
shlb
cld
jne
cmp
mov
data16
inc
aam
push
gs
daa
in
xor
sbb
clc
push
sub
lds
out
fmuls
sahf
add
inc
fcmovnb
or
test
cmovle
jbe
cmp
lods
xor
xor
mov
adc
movsl
pusha
mov
divl
loop
icebp
mov
push
pusha
xchg
add
sub
sbb
xor
movsl
adc
adc
cmp
xor
pop
ror
jae
pop
dec
inc
adc
enter
sbb
adc
mov
mov
std
popf
adc
fisubrs
jnp
xlat
fnstcw
push
test
sbb
ret
and
mov
mov
push
or
out
fwait
cmp
in
dec
mov
divl
out
sbb
insb
js
inc
loop
fwait
icebp
mov
xchg
sub
mov
lret
es
add
les
add
sarb
cld
push
mov
std
mov
nop
nop
ja
outsl
xor
lods
fwait
jg
mov
xor
and
int
pusha
mov
cmp
cmp
mov
test
push
int
add
mov
sbb
rolb
sub
aaa
clc
add
push
cmpsb
inc
xchg
repnz
rclb
test
jae
dec
mov
adc
adc
adc
fcoms
inc
sbbb
push
fsubr
ds
or
aaa
sbbb
dec
add
incl
or
js
sub
xchg
cmp
leave
sub
das
fadds
dec
stos
xchg
hlt
test
xchg
adc
inc
pop
jp
outsb
daa
leave
mov
add
pop
fisttpll
cmp
outsl
ljmp
popl
mov
add
xchg
add
sar
call
add
ret
mov
icebp
mov
sbb
out
jl
mov
nop
loop
scas
sbb
pushf
adc
adc
push
sbb
sbb
or
jge
mov
ret
add
mov
and
push
and
adc
leave
dec
testl
mov
push
jno
sub
pushw
dec
stc
pop
stos
adc
out
dec
les
inc
push
shrb
fadds
clc
push
push
inc
xchg
cmp
add
and
lret
icebp
enter
mov
add
xor
cmp
nop
in
test
adc
je
push
pop
scas
shrl
js
cmp
testb
cmpb
ret
aaa
ss
lret
test
jp
mov
jne
push
lcall
push
ret
sub
into
cmp
push
jnp,pt
jo
test
jbe
adc
sub
pop
push
arpl
fmul
add
ret
xorl
pop
xor
les
dec
inc
out
lret
pushf
inc
stos
lods
adc
imul
fcomps
inc
inc
std
xor
cltd
icebp
icebp
leave
daa
test
cmp
shl
sbb
stc
jmp
jmp
loop
call
and
mov
scas
mov
loope
ja
mov
adc
rolb
stc
push
xchg
mov
aas
push
push
sbb
lds
pop
sub
test
movsb
scas
leave
pop
or
popl
pop
in
jns
jnp
inc
fcompp
int
lret
lods
sbb
adcl
lods
adc
xor
xchg
imul
lods
and
sbb
or
and
ja
nop
pop
fst
pusha
inc
aad
mov
les
imul
push
push
dec
fsts
imul
push
mov
push
jne
loopne
and
pushf
adc
pop
out
or
add
in
add
add
orb
sub
lea
and
adc
fimuls
notb
cmp
mov
xor
mov
mov
into
add
adc
rcrl
test
sub
or
push
xlat
loopne
or
jmp
jmp
jp
or
add
xchg
sub
cmp
test
dec
mov
sub
dec
arpl
mov
iret
pop
xor
ror
push
cltd
add
cmp
inc
mov
or
int
sub
aas
xchg
push
aas
sbb
lods
cmp
jbe
xchg
scas
xchg
pop
xor
jnp
stos
les
inc
flds
scas
loop
push
sub
insb
sbb
dec
mov
lea
lret
push
into
adc
lods
orl
addr16
cli
gs
jg
adc
std
mov
jno
andb
es
pop
or
mov
js
mov
push
pushf
pusha
aas
das
sbb
sbbl
add
xor
adc
popa
push
imul
ss
rcl
add
jecxz
xcrypt-ctr
cmpsl
pop
punpckhbw
imull
add
movl
je
push
fstps
mov
push
cli
shl
adc
cld
push
inc
shl
pop
xlat
rcll
shr
dec
cli
or
popa
add
js
push
xor
inc
loopne
and
mov
push
cmp
call
pop
lods
mov
add
sub
push
push
das
pop
sub
lret
arpl
cli
loopne
xor
subb
enter
dec
orb
lcall
push
nopl
insl
ja
scas
add
sub
cwtl
dec
in
mov
mov
add
stos
sub
push
movsb
imul
pop
insb
or
sbb
sbb
adc
scas
test
cld
xor
lret
clc
pop
cmp
scas
and
jne
psraw
add
add
lret
push
dec
iret
or
pop
sbb
xchg
int
dec
add
add
addr16
sbb
sub
adc
dec
repz
inc
mov
inc
icebp
fisttps
test
je
cmp
push
add
rolb
outsl
in
dec
sbb
fs
xor
and
mov
xor
scas
jle
xchg
negl
cmc
dec
in
xor
imul
shrl
loopne
xchg
mov
mov
inc
je
popf
mov
sbb
or
rcrb
dec
jmp
fidivrl
repnz
loopne
loopne
stos
out
fcom
mov
adc
out
and
fstl
sbb
adc
mov
pop
pop
pop
cld
pusha
or
adc
jbe
jne
ud2
fstp
shrb
sub
dec
and
jg
jp
push
fnsave
loopne
inc
xor
cmc
push
or
lret
jno
push
das
pop
pop
jge
xor
addr16
ja
and
fnstenv
sub
mov
fisubrl
nop
jae
mov
les
nop
call
outsl
mov
lret
popf
mov
push
testb
flds
xadd
fs
inc
shl
cmp
pop
enter
or
lret
out
mov
cmpsl
jno
add
fisttpl
adc
inc
pop
sub
div
push
inc
xchg
cltd
cli
stos
jnp
cmp
inc
lea
mov
dec
test
pop
shrb
shrb
mov
sbb
cmpsl
lds
cmp
rorb
fs
out
push
sub
and
dec
mov
push
es
rcrb
sbbl
negb
push
add
ljmp
pop
xor
mov
add
push
rorb
jmp
or
mov
dec
xchg
inc
cmp
mov
call
cmp
insb
fadds
pusha
aam
sbb
repnz
xchg
mov
xchg
mov
test
idiv
test
lods
aad
test
adc
adc
addr16
adc
pop
mov
sub
adc
or
pop
bound
jp
popa
imull
or
mov
cmpsl
fnstcw
push
jo
dec
in
imul
xor
xchg
sub
movsb
sbb
push
add
mov
aad
and
inc
scas
jge
pop
loope
xchg
lods
mov
cmp
cmp
cmp
mov
ja
movsb
shll
insb
sbb
out
faddl
dec
or
add
rcll
ds
sbb
adc
sbb
fcmovu
or
mov
sbb
jno
insb
pop
movsb
imul
movsb
test
in
jg
lret
rclb
sub
push
sbb
push
sbb
xor
cltd
lret
and
jecxz
mov
or
rcrb
je
inc
dec
pop
insb
xchg
cmp
sbb
sbb
inc
or
lcall
movsb
aam
push
cmp
cmp
sub
out
xchg
lds
sbb
ret
cmp
fbld
pop
repnz
rolb
pop
test
add
add
std
hlt
jmp
icebp
jg
lods
inc
push
xor
imul
xchg
rcll
or
dec
loope
popa
sbb
flds
push
sub
fistpll
add
mov
sbb
movsl
push
rcrl
sbb
jmp
out
xchg
jno
jnp
and
or
cmpsb
jne
sub
in
repz
fildl
push
and
sbb
cmp
sbb
dec
fstl
loope
lret
jecxz
addr16
js
test
loope
mov
lahf
inc
std
xchg
inc
pop
push
add
push
push
dec
push
icebp
lods
add
fbstp
aas
mov
insl
paddsb
rorl
inc
test
jae
shll
adc
rcr
arpl
lret
pop
orb
or
cmp
pop
inc
out
add
cmp
sti
shlb
jae
lret
lret
mov
mov
inc
fs
call
iret
rcrb
inc
cmp
inc
aam
sbb
shll
and
into
rdpmc
sub
or
inc
lret
mov
mov
in
push
clc
iret
add
adc
add
lock
in
sub
cld
in
add
or
add
and
sbb
shl
mov
add
push
int3
mov
sbb
js
push
lret
test
sahf
inc
loop
lahf
aam
sbb
lahf
into
icebp
push
scas
movsb
mov
xor
ret
mov
mov
pop
ljmp
neg
push
and
dec
sbb
hlt
push
xchg
inc
sbb
jo
xchg
mov
js
cmpsl
mov
push
adc
cmpsl
push
aam
mov
das
addl
add
push
imul
das
jmp
or
pop
add
cli
add
inc
xchg
add
movsl
jno
and
outsb
sub
data16
dec
push
push
inc
inc
testl
popf
adc
or
add
sub
mov
in
cmpsl
jl
add
imul
xchg
mov
add
inc
rol
ret
fucomp
jecxz
xor
addb
mov
movaps
xor
fdivrs
fisubs
push
inc
and
sbbb
es
push
fwait
inc
adc
push
outsl
or
push
jg
rcr
hlt
int3
jp
or
movsb
test
and
mov
out
pop
outsb
push
jecxz
or
and
imul
clc
nop
pop
test
sbb
or
push
lods
add
rclb
nop
jmp
cwtl
mov
loop
pop
in
movsb
mov
push
xor
jbe
jge
jae
pop
xor
hlt
fiaddl
lock
fs
popf
cld
clc
rcl
fldlg2
xorb
pop
jecxz
push
jne
dec
iret
or
or
mov
add
or
adcl
lock
and
mov
sub
int3
pop
fsub
and
or
push
lret
fistpll
adc
mov
fsubp
dec
fiadds
push
pushf
adc
rol
fbld
dec
in
mov
ret
js
lret
arpl
mov
dec
sub
hlt
jne
cmp
mov
orl
test
sub
lods
xchg
mov
inc
lahf
test
push
jp
pop
arpl
std
icebp
push
mov
or
inc
dec
sbb
add
sar
loopne
js
sbb
sar
dec
imul
and
add
addr16
adc
cmp
fimuls
ret
out
xor
and
and
loop
and
leave
adc
int
repz
and
mov
jno
or
sub
and
sub
mov
sbb
sub
pop
ror
cmp
icebp
lcall
clc
in
mov
add
push
rcrb
add
int
xchg
push
push
or
pop
cwtl
or
test
int3
in
push
sub
xor
inc
mov
cmc
dec
pop
ret
cmp
jbe
dec
mov
mov
mov
add
and
jmp
mov
or
aad
sbb
jecxz
xor
enter
subl
hlt
add
inc
xchg
aas
das
test
jbe
cs
addr16
push
xchg
lods
lock
mov
sbb
movsl
mov
jg
enter
jae
adc
fisttps
adc
adc
hlt
xchg
jnp
lods
dec
loop
shr
shlb
cmp
adc
adc
das
shlb
dec
sub
sahf
lea
inc
clc
adc
jmp
aaa
filds
mov
into
sub
test
je
add
or
add
mov
loope
adc
cld
add
rolb
ljmp
xchg
lods
inc
sbb
aas
add
negb
into
add
lea
push
pop
fistl
mov
shrb
mov
pop
mov
out
daa
cmpsb
inc
cmp
sbb
rcrb
adc
ss
not
rclb
cli
clc
push
outsl
and
call
mov
add
ja
test
mov
lret
jne
dec
dec
cltd
into
sbb
mov
das
and
xor
and
iretw
xchg
addl
cmp
push
fldenv
inc
or
push
pop
mov
out
sub
sub
int
adc
sub
and
fcompl
testl
inc
sub
jle
push
push
gs
add
lods
lock
hlt
adcl
rcl
xchg
push
jle
sbb
loop
gs
test
sub
mov
adc
addl
hlt
ljmp
test
sbb
add
and
rcll
popa
rcrb
call
push
ljmp
sbb
les
out
ja
lods
shll
pop
add
mov
mov
les
lret
pop
sbb
pop
jbe
rcl
or
ret
sbb
ror
ja
xchg
inc
in
daa
nop
push
dec
imul
mov
and
jo
cmp
push
aam
orb
rorl
adc
pop
subb
lods
pop
iret
ja
out
cli
push
or
fbstp
mov
inc
jns
out
dec
cmp
pusha
push
sub
adc
sti
sbb
sbb
add
and
movsl
jo
ja
push
jo
rcrl
insl
xchg
js
rcrb
or
cmc
aam
push
dec
xor
inc
mov
dec
sub
jne
cmp
or
test
vsqrtpd
xchg
test
shlb
stc
les
orb
mul
add
xor
std
pop
xor
cwtl
test
jb
fwait
push
lods
and
pop
aad
int
lds
pushf
add
push
or
sub
je,pn
or
inc
adc
jns
sub
je
or
aas
adc
pop
rcr
stos
sub
cwtl
fbld
or
sbb
xchg
add
pop
mov
roll
cmp
mov
fs
sbb
xchg
and
lods
leave
add
add
push
aam
or
mov
hlt
loopne
lret
lea
xchg
cmp
push
or
sbb
cld
out
mov
add
popl
push
popa
insl
in
ss
and
xchg
sub
loopne
add
mov
inc
enter
rolb
ror
mov
jecxz
xor
in
or
pop
inc
pop
lret
mov
mov
xchg
add
shl
movsb
push
inc
pop
mov
ljmp
clc
movsb
add
sub
aad
push
dec
and
cld
rol
pop
sbb
ret
fisubl
add
call
pop
push
or
or
pop
leave
ret
cmp
dec
mov
jno
or
jns
add
xor
jo
inc
loopne
insl
dec
xchg
mov
pop
pop
push
cs
add
dec
mov
fs
inc
adc
out
call
xor
dec
and
dec
pusha
pop
mov
jmp
cmpsb
cmpsl
xor
fdivs
add
pop
test
xchg
loopne
movsb
inc
add
and
adc
pop
cli
jg
cli
call
add
popa
adc
add
jp
xor
test
sbb
adcb
dec
mov
mov
not
repnz
add
or
push
call
mov
ret
and
or
add
loopne
xchg
dec
mov
sbb
or
add
shlb
add
or
rcll
mov
push
push
imul
push
or
or
mov
rorl
std
lahf
into
dec
fwait
sbb
lods
push
stos
mov
or
lret
pop
mov
and
mov
movsl
scas
shr
cli
inc
aam
mov
xchg
or
sarb
hlt
jnp
add
pop
xor
and
or
inc
add
mov
pusha
adc
push
jecxz
sub
pminub
fisttps
mov
sbb
loopne
mov
or
and
xor
push
ret
inc
incl
dec
sbb
cmp
in
add
into
lret
sub
push
mov
or
dec
mov
and
inc
das
or
cmp
push
dec
sbb
add
loopne
sbb
clc
es
push
cmp
jle
cmpsb
hlt
dec
ret
in
ss
adc
test
add
add
xchg
loopne
cmpl
lret
cmp
repnz
into
inc
das
insl
or
jno
das
and
loop
push
outsb
jns
xor
dec
mov
lret
sbb
and
sub
lret
dec
and
lock
add
push
push
enter
mov
mov
pushf
addr16
in
rolb
shll
cmp
aam
inc
sbb
addb
or
add
adc
xchg
sub
add
mov
lret
scas
xchg
sub
pop
mov
pop
jbe
pusha
push
mov
movsl
xor
stos
dec
adc
bndldx
mov
lret
and
fadds
dec
or
inc
dec
mulb
or
add
adc
or
pusha
loop
es
pop
jb
mov
cs
push
inc
pop
movsb
inc
jle
fcoml
loop
loope
stc
mov
and
inc
lea
insb
pop
xor
sbb
dec
rcrb
imul
fdivl
inc
push
cmp
subb
sub
jo
or
push
or
adc
and
inc
add
or
mov
insb
pushf
cmp
ret
mov
mov
lock
cmp
addr16
adc
int3
test
es
sbb
xchg
pop
movsb
fidivrl
sub
int3
inc
mov
addl
ficompl
nop
lcall
lea
or
cmc
and
ret
dec
adc
xchg
outsl
mov
cmc
mov
mov
or
add
mov
mulb
mov
and
push
cmp
mov
ror
dec
push
jo
imul
lea
in
cld
xor
mov
and
popa
mov
jp
cmp
ljmp
xchg
cmp
rcrl
xor
xor
lahf
push
js
fsub
dec
ss
dec
add
jbe
cmp
nop
call
inc
pop
sub
xor
scas
push
cwtl
sub
data16
cmp
pop
inc
in
cmp
add
pop
adc
cmc
xor
push
dec
sbb
sbb
mov
rclb
sbb
adc
push
clc
andb
lea
or
inc
test
out
dec
sbb
sbb
popf
or
and
mov
sub
push
xchg
add
and
push
adc
xor
sbb
mov
loopne
mov
push
enter
cmp
push
repnz
inc
arpl
jle
inc
adc
mov
mov
add
in
push
test
sub
jnp
lods
mov
inc
lock
gs
xor
jo
in
inc
roll
dec
and
js
adc
loopne
ficoms
add
dec
mov
jmp
xor
hlt
push
xchg
jmp
testl
and
add
rclb
add
movb
or
or
push
aam
or
push
mov
shrl
cmp
sbb
mov
lock
lock
push
jp
sub
sub
testb
adc
sahf
sbb
out
mov
imul
testb
fs
or
xchg
fdivl
dec
xchg
add
cmp
js
jp
add
pop
jno
xchg
jne
ret
lret
sbbb
outsb
or
scas
add
xor
jne
sahf
es
rorb
in
add
pop
test
lea
rcll
add
shr
inc
push
sub
subb
inc
or
xchg
nop
xchg
push
add
xlat
sbb
ss
mov
js
cmp
mov
gs
pusha
xchg
scas
cmp
sbb
js
mov
jno
adc
sub
adc
xorb
notl
adc
ret
test
test
inc
mov
subl
loope
add
out
ret
jp
imul
lea
jp
clc
inc
mov
test
loopne
jmp
mov
js
pop
cmpb
or
js
loop
push
inc
adc
roll
cmpsb
into
ret
mov
lret
xor
sbb
ljmp
inc
test
sbb
cmp
sbb
mov
mov
inc
dec
pusha
insb
fs
int
test
adc
push
cmp
or
rol
mov
test
je
arpl
jbe
icebp
jg
sub
adc
divl
sarb
aam
stos
inc
mov
pop
lret
push
push
shll
popf
dec
inc
into
movsb
lock
mov
or
dec
data16
cwtl
inc
stos
adc
movlps
push
inc
movsb
xor
xorb
test
jb
xor
xchg
and
push
es
ljmp
cmpb
adc
insb
ficoms
xchg
into
dec
rcrb
xchg
cmc
and
add
jo
jmp
nop
adc
outsb
pusha
gs
popa
mov
scas
sbb
loopne
repnz
rol
or
fldl
pop
pushf
inc
sbb
mov
daa
or
or
adc
push
ret
xor
cmpsl
and
cmp
lea
lea
test
andb
jmp
add
mov
inc
in
and
xchg
lea
pop
into
cwtl
sbb
lcall
and
add
xor
or
nop
gs
and
aam
sub
cs
pusha
add
mov
int
shr
clc
lahf
adc
or
pusha
sbb
inc
fiadds
add
mov
or
adc
sub
dec
pop
sti
shr
sbb
inc
popa
xlat
adc
sbb
pop
sub
js
dec
sub
lret
mov
xor
push
loopne
icebp
ds
jp
ret
cld
jg
rol
fisubs
xor
ret
jmp
lret
jmp
sub
notl
sbb
jp
sbb
xor
jge
dec
lock
jae
jl
dec
shl
or
xchg
mov
ficompl
sti
cmp
orb
divl
ret
pushf
adc
pop
mov
pop
in
dec
mov
mov
andb
or
add
xchg
aam
lods
aas
sub
mov
mov
dec
push
mov
inc
jne
into
shlb
stos
loop
xchg
and
push
fsubrl
fs
pop
into
inc
es
jmp
and
test
add
addb
xchg
or
mov
or
andl
fstpl
xor
dec
mov
add
shl
cmp
imul
decb
lock
and
cs
cmp
adc
rcrb
movsb
sub
dec
push
lret
sbb
loopne
xlat
ljmp
fidivrs
enter
mov
test
scas
cld
loope
mov
shl
sub
pusha
mov
mov
jp
lret
or
jp
jecxz
fdivrs
jb
sbb
popa
dec
xchg
pop
iret
xor
push
sub
adc
adc
mov
aas
nop
jnp
xor
inc
out
push
loop
sbb
sahf
lds
aam
rclb
inc
popa
mov
and
jno
jp
negb
and
mov
and
sbb
pop
test
xchg
add
pop
js
dec
lret
popa
mov
cmp
inc
cmp
mov
or
cmp
imul
into
scas
test
sbb
mov
out
add
in
adc
je
ficoms
into
or
scas
push
pop
sarl
std
pushf
cmpsb
jo
hlt
mov
add
xor
sti
cmp
enter
or
inc
mov
addr16
lcall
xor
loope
rol
rolb
xchg
jp
in
imul
sbb
push
aam
mov
ficoms
lods
pushf
sbb
daa
xchg
and
cmpsb
dec
adc
add
push
add
inc
shlb
add
cmp
jo
loope
loope
fsubp
jp
inc
jecxz
or
icebp
js
mov
sbb
fs
dec
sbb
pop
shrl
negb
push
push
fisttpll
lods
pop
lds
out
add
xchg
addr16
les
sub
dec
dec
mov
mov
mov
dec
push
dec
cmp
jbe
and
lock
sub
call
lods
push
loop
mov
pop
lea
loope
inc
mov
mov
sbb
jo
add
je
inc
or
dec
or
lock
rorb
push
dec
bound
bound
clc
adc
dec
fdivl
out
adc
arpl
and
jp
sahf
sbb
mov
xor
dec
and
subl
xor
cmp
and
jle
jo
mov
or
dec
rorl
xchg
xor
fistps
popf
mov
aas
jg
pushf
inc
xchg
loope
add
jo
jb
popa
adc
loop
roll
inc
push
sbb
or
loop
adc
dec
mov
jae
xor
mov
ljmp
ret
ss
arpl
and
add
hlt
pop
rcrb
pushf
pushf
js
jp
loop
andb
push
xchg
jbe
inc
and
test
xor
invd
or
and
data16
pusha
lods
outsb
add
cmp
dec
pop
xchg
inc
lret
lods
icebp
pusha
sbb
xchg
aaa
test
or
cmp
jo
adcl
pop
sarb
lods
and
mov
or
clc
into
js
gs
ds
rolb
sahf
out
mov
pusha
in
mov
mov
mov
sbb
sbb
adc
test
outsw
nop
sahf
or
movsb
dec
push
test
and
dec
mov
add
sub
ja
enter
sarb
cmp
lcallw
and
ljmp
jno
push
xor
lock
test
xor
push
movlps
mov
push
cmpxchg
inc
jecxz
movsb
xor
pop
adc
ljmp
or
xchg
mov
les
sbb
xor
mov
movsb
pop
mov
loop
gs
dec
ljmp
inc
push
sub
popf
xorb
and
add
xchg
pushf
adc
lock
ss
cmc
xor
pop
loope
xchg
cld
xchg
dec
cmp
into
xchg
mov
lcall
dec
outsb
lods
cld
cld
pop
adc
inc
lret
lcall
push
je
sbb
add
outsl
inc
pop
adcl
xor
inc
xchg
xchg
or
je
jl
push
xor
jl
adc
insb
popa
out
pop
cmp
xor
add
popa
add
jne
inc
sub
adc
mov
jb
mov
mov
inc
imul
adc
cmp
pop
repz
mov
adc
rorl
adc
sbb
mov
inc
mov
mov
mov
movlps
daa
inc
xor
push
mov
or
movsb
adc
or
pop
movsl
dec
mov
add
or
adc
jae
adc
cld
mov
adc
push
cmpsl
push
popf
icebp
or
xchg
clc
lret
mov
add
mov
pop
and
pushl
xorb
dec
jp
gs
cmpsl
add
ss
xor
pop
enter
add
or
sbb
cwtl
push
in
push
dec
fcmovnb
and
or
mov
test
or
rclb
sub
mov
mov
lea
push
and
andb
or
add
jbe
adc
jp
lods
push
xor
bound
adcl
jo
mov
sbb
inc
xchg
dec
xor
ljmp
pusha
cmc
mov
sub
xchg
add
xchg
popf
lods
xchg
loopne
ljmp
ret
xchg
xchg
and
xor
loope
cmp
or
les
mov
lret
ljmp
dec
cmp
cmpsb
cmp
enter
dec
mov
push
invd
scas
loopne
retw
jp
ret
and
lcall
jecxz
xchg
xchg
dec
test
dec
add
jl
cmc
mov
mov
pop
bound
mov
dec
push
mov
xor
dec
mov
jl
popa
xor
lods
jb
rcrl
adcb
lods
in
add
subb
fidivl
je
or
enter
or
ret
enter
push
and
enter
sbb
mov
xchg
sbb
pop
sbb
push
mov
xorl
aaa
jp
or
jp
add
jo
or
or
out
in
or
xor
mov
sar
xor
push
sbbb
adc
gs
xor
sbb
mov
jp
cwtl
mov
sub
mov
scas
scas
ret
inc
mov
sbb
xchg
in
lock
sub
aad
jbe
mov
mov
mov
cmpsb
mov
xchg
xor
pusha
sub
pop
xor
fiaddl
imul
fsubs
popa
lods
lock
inc
or
test
lods
aaa
lock
mov
loop
xor
pop
lock
sbb
cwtl
pop
or
sbb
mov
out
aam
xchg
movsb
ret
pop
add
enter
mov
xor
or
fimull
dec
test
mov
insb
lods
pop
sarb
pusha
pop
hlt
insl
push
sarl
ljmp
bound
and
movsl
cmp
lcall
or
sub
sbb
push
out
int3
pop
les
add
xor
add
incb
mov
call
call
push
mov
lods
pusha
andl
popa
inc
call
scas
jle
or
ret
inc
push
fld
add
fidivrl
pop
mov
xor
fisubs
xor
push
enter
jno
xchg
and
adc
mov
add
imul
rcrb
sub
push
add
xchg
xchg
fs
or
lret
adc
or
shrb
pop
punpckldq
cmp
jnp
push
xchg
pop
dec
jl
add
cmp
sbb
in
mov
sbb
mov
jno
popf
insb
mov
push
cmp
dec
jne
adc
sbb
lcall
jb
loope
sbbb
xchg
pop
add
into
shll
mov
cs
or
cmp
pop
mov
xor
or
fwait
popa
les
clc
jb
icebp
pavgw
rcr
arpl
dec
mov
inc
mov
add
pop
sub
sub
clc
jl
insl
sub
or
mov
pushf
fcoml
jecxz
adc
mov
adc
pop
or
xchg
adc
dec
jne
or
lock
hlt
loop
sbb
fsubrl
push
inc
mov
clc
jmp
pushf
sbbl
repnz
xchg
push
aaa
dec
rclb
sbb
lds
add
test
rcrl
loopne
out
mov
sbb
clc
pop
adc
mov
push
or
enter
clc
push
cltd
push
and
clc
push
cmp
mov
push
aam
incl
inc
inc
adc
adc
movsb
mov
xor
outsb
shl
sahf
test
clc
addr16
fs
aam
add
sub
add
xorl
pusha
loope
push
cli
dec
cmc
add
sbb
or
movsl
xorl
cmp
or
jmp
das
in
adc
shl
rcrb
outsb
sub
stos
test
xor
shr
sub
push
loope
cmp
popf
push
shl
dec
xlat
xor
roll
clc
and
dec
mov
jnp
outsb
or
jg
push
cmpsl
gs
sahf
cs
subl
sub
or
aaa
mov
push
adc
call
inc
jge
fiadds
xorb
cmpsb
xor
sahf
jecxz
fimuls
add
iret
rcr
clc
sub
mov
sbb
add
mov
into
and
gs
push
repnz
sbb
add
inc
nop
ret
lea
mov
xor
jnp
pop
cmpsb
test
xchg
sbb
inc
mov
push
pusha
addps
ljmp
loop
pushf
or
lods
scas
mov
subl
dec
fsubl
lock
mov
ja
adc
fdivl
pushf
sahf
sbb
nop
cmp
hlt
or
cld
popf
lea
mov
sbb
xchg
dec
adc
jo
mov
sbb
pop
inc
jne
dec
shlb
adc
ret
mov
mov
add
push
shrb
mov
cmp
dec
sub
dec
xor
insb
ljmp
cmp
mov
jp
ss
or
out
mov
data16
add
or
rolb
outsb
test
into
bound
and
sbb
or
xchg
outsb
cwtl
cmp
testl
mov
cmp
pop
xor
add
call
test
jae
insl
jecxz
cs
add
in
add
enter
push
inc
adcl
cmp
add
adc
jbe
test
mov
imul
lods
test
cmp
dec
pop
mov
imul
and
lods
pop
dec
add
push
xor
or
shrb
std
fadd
out
loopne
inc
sub
mov
and
sub
sub
mov
xor
xor
pusha
ret
lock
push
push
movsb
cmp
sarl
ret
sbb
or
sub
data16
lcall
cmpsb
push
mov
or
ret
orb
mov
fdivrl
xchg
adc
sbb
sub
shr
add
pushf
movsl
in
inc
sub
mov
jno
jbe
js
mov
pop
loop
dec
cs
popf
popf
paddsb
inc
dec
adc
testb
add
lret
inc
mov
hlt
int3
xchg
sub
sbb
mov
push
cmpsb
loopne
loop
or
push
cmp
mov
xor
push
and
js
jp
mov
shll
push
loope
nop
mov
xor
push
dec
pop
inc
inc
sbb
lods
pop
pusha
mov
inc
test
inc
cmp
cmp
sub
and
or
pop
test
xor
or
sahf
jb
dec
mov
hlt
popf
sub
cmp
daa
push
or
pop
and
into
loope
arpl
les
push
dec
pusha
inc
lods
sub
add
insl
and
es
xchg
mov
cmpsb
adc
rclb
sarl
jne
addb
popf
or
arpl
mov
fidivrl
loop
mov
pop
push
inc
sub
push
or
xor
mov
or
cmp
aad
mov
mov
cmpsb
jo
mov
sbb
xchg
rorb
push
clc
dec
pop
rorb
lret
imul
push
js
cmp
or
pop
pusha
or
enter
mov
pop
dec
xchg
push
ret
and
popa
xchg
stc
jl
imul
lock
popf
dec
cmp
xchg
shrb
xor
mov
push
inc
or
sbbl
mov
into
clc
lods
movsl
push
dec
lea
js
adc
and
push
loop
and
lret
icebp
mov
sub
dec
ror
bound
addl
daa
cmpsl
mov
pop
cmp
mov
xchg
sub
bound
xchg
and
xchg
xchg
mov
mov
or
or
inc
ret
jo,pn
popf
or
mov
dec
arpl
cs
jb
xchg
pop
dec
xor
movsb
push
push
adcb
movb
or
sbb
movsl
xor
cwtl
or
shlb
mov
stos
lret
outsb
or
loopne
xchg
mov
sbb
mov
orb
xor
mov
sbb
add
rorb
cmp
lret
jbe
ret
mov
shrb
sub
ret
pop
ljmp
or
nop
and
add
rol
pusha
es
adc
and
fcompl
xchg
xor
ds
push
test
push
jp
clc
adcb
dec
scas
xor
push
or
pop
cltd
add
cmp
rclb
ret
jo
outsb
ret
jp
mov
and
jnp
add
loop
or
inc
outsl
pop
enter
push
or
arpl
pop
xor
loopne
dec
decb
cs
and
xor
cmp
push
hlt
mov
or
ljmp
sbb
popf
adc
and
push
movsb
sbb
test
mov
and
cmp
dec
push
ficomps
dec
mov
ret
inc
cmpsb
fs
ret
push
subb
pop
xor
add
movlps
pusha
and
xlat
in
sbb
or
mov
int3
sub
sub
in
clc
xchg
fldl
dec
data16
push
pusha
mov
sub
cmovb
mov
aam
pop
xchg
daa
shrb
add
nop
sbb
outsb
mov
js
stos
xchg
push
mov
js
fimuls
sub
cmp
cli
into
lods
arpl
mov
xchg
shlb
xchg
pushf
add
adc
push
cmp
inc
lret
ret
push
fidivl
or
jbe
push
push
lahf
pusha
adc
imul
test
adc
test
mov
adc
mov
fadds
push
loope
imul
ja
push
push
pusha
add
daa
jbe
jo
xor
orb
cld
inc
sbb
jo
sub
and
xor
push
cs
adc
inc
or
xchg
fs
leave
mov
imul
xor
add
cltd
push
inc
rcr
dec
add
pop
cmp
das
sub
rolb
mov
add
jp
ljmp
add
popa
pushf
mov
and
adc
jg
pop
and
adc
dec
loope
inc
lods
out
pop
movsb
pop
mov
inc
push
fwait
syscall
mov
or
imul
out
into
mov
test
pop
add
xor
sbbb
shll
loope
push
xor
imul
xor
pop
std
inc
pop
xchg
call
out
cmp
roll
push
imul
aas
dec
leave
call
or
adc
lret
adc
lods
cs
add
in
lahf
cmp
out
or
mov
cmp
fs
cltd
and
pop
ret
push
out
and
fs
cmp
mov
jl
pop
xor
mov
lods
sbb
in
add
or
mov
aad
ja
fisubl
mov
push
fs
nop
fs
or
out
xchg
or
bound
xchg
inc
mov
or
pushf
adc
inc
push
or
xchg
or
adc
mov
jp
outsb
add
xchg
roll
cmp
mov
dec
mov
mov
inc
popf
loopne
js
popa
or
mov
mov
jmp
add
into
and
mov
cmp
mov
and
movsl
add
arpl
pusha
sbb
cmp
sub
faddl
insl
cmpsb
ss
xchg
adc
int3
aas
iret
adc
mov
mov
dec
out
rorb
push
push
push
rolb
fisubrs
add
cmpsb
call
daa
mov
mov
mov
rolb
xchg
ficomps
sub
xchg
in
sbb
or
push
aam
sub
mov
inc
fsts
adc
cmc
xchg
push
and
out
adc
loop
add
dec
in
fs
jne
push
ss
push
outsl
sbb
pop
orb
xor
push
push
and
sbb
sbb
daa
pop
inc
adc
dec
pop
enter
adc
movsb
movb
lods
fdivl
push
jo
fadds
movsl
mov
inc
or
adc
mov
or
mov
mov
pop
ret
rcll
cltd
jno
or
imul
add
push
sub
test
mov
add
mov
adc
test
cmp
xchg
add
rolb
aaa
movsb
pop
mov
lock
inc
push
sbb
jp
adcl
scas
clc
jl
lret
sahf
ret
push
pop
pop
out
gs
xchg
fadds
icebp
movb
jbe
cmpsb
fs
fdivs
lock
loop
and
cli
loope
imul
test
call
cmpsb
adc
xor
mov
or
lock
and
int3
sub
into
sahf
xor
cli
inc
mov
bound
jae
ss
jns
scas
cmp
push
in
lods
add
loope
nop
inc
jbe
leave
xchg
or
inc
dec
sbb
mov
sbb
sbb
adc
jl
loope
and
nop
push
cmpb
adc
mov
test
or
loopne
xchg
mov
pushf
in
cmpsl
inc
jns
xchg
xchg
and
jo
mov
push
ret
cmp
sub
icebp
leave
mov
mov
add
jno
add
push
call
dec
or
lods
mov
ret
xorb
mov
and
adc
popa
mov
pop
lock
outsb
mov
into
sbb
addr16
push
fs
loop
cmp
xor
fsubs
mov
cmpsl
mov
sbb
or
dec
mov
fwait
and
xor
pop
push
mov
arpl
xor
leave
push
pop
popf
scas
xor
cwtl
jne
mov
adc
insb
arpl
mov
fwait
pop
xlat
and
mov
push
fwait
stos
fsubs
je
loopne
jo
add
loop
inc
dec
test
icebp
xorb
xor
sub
lock
out
fidivrl
test
or
adc
cmpsb
imul
mov
mov
mov
mov
pop
push
xchg
es
inc
les
sbb
sub
mov
add
cmp
add
mov
push
adc
loope
loopne
sahf
lock
incb
icebp
mov
outsb
mov
hlt
xchg
popf
sbb
mov
repnz
sarb
and
push
insl
leave
xor
movsl
test
lods
shll
call
and
cmp
jle
cmpsl
cmpsl
xchg
in
pushf
mov
int3
leave
mov
adc
pop
dec
mov
es
inc
leave
insb
add
xor
dec
xchg
inc
pop
dec
add
lret
inc
movsl
or
or
cmpsb
out
xchg
pusha
add
and
pusha
or
enter
mov
les
sbb
rcl
sub
sbb
cmp
xor
dec
das
jnp
jbe,pt
jl
pop
arpl
daa
ret
xchg
inc
movsb
sbb
push
pop
push
dec
push
cmp
sbb
mov
push
out
xchg
pop
or
pushf
insb
clc
push
pushf
mov
or
dec
mov
in
fs
or
push
mov
or
mov
push
rclb
bound
les
lods
fcoml
into
xchg
xor
dec
jo
lods
pop
or
push
les
jp
mov
fs
push
inc
stos
push
call
scas
and
in
cmc
enter
rcrb
mov
pop
dec
loope
je
les
mov
ret
and
ret
scas
mov
cmp
or
enter
imul
sub
shlb
push
pop
add
ljmp
fcom
cmp
test
dec
or
add
push
loop
dec
cmpsl
jb
lock
in
fisttpll
mov
xchg
addb
adcb
loop
aad
push
sbb
jb
pop
push
ja
ret
lcall
cld
ret
arpl
mov
or
sbb
lock
in
mov
mov
je
es
lret
inc
sbb
ret
pusha
je
and
or
or
mov
lret
stos
and
xor
orl
push
mov
mov
xchg
or
rcrb
insb
mov
sbb
xor
jne
hlt
mov
or
ds
mov
push
es
insb
adc
stos
or
sbb
lods
imul
cltd
adc
fidivrs
mov
loope,pn
xchg
pushf
push
cltd
lock
lods
fimull
into
sub
lods
add
inc
pusha
push
push
popf
out
mov
test
outsb
in
scas
outsl
inc
push
sbb
xchg
adcb
fsubrl
inc
and
or
mov
or
lret
cmp
push
mov
out
sarl
jle
push
mov
and
pop
inc
enter
jbe
ljmp
add
dec
data16
es
inc
push
iret
push
hlt
adc
int3
ret
hlt
fs
addb
push
sub
jo
adc
lods
mov
and
and
jbe
push
push
mov
ljmp
jo
push
lret
jns
mov
xchg
jb
xchg
add
loope
jl
dec
out
jno
adc
ret
movsl
jo
mov
gs
notb
pop
push
data16
or
or
pop
or
sub
cwtl
sbb
add
test
jo
push
mov
mov
pushf
es
dec
xor
mov
gs
es
pop
or
sar
test
pop
popf
int3
push
shlb
lds
lea
daa
sbb
jp
push
jl
push
sbb
or
lcall
repnz
adc
push
push
xor
shlb
jbe
sbb
jo
dec
mov
sbb
jo
clc
icebp
add
cvtps2pd
xor
cmc
ljmp
rolb
je
push
lods
dec
in
mov
das
sbb
ret
hlt
hlt
jmp
dec
mov
adc
fisubl
lods
enter
mov
jae
add
ret
fmuls
loope
xchg
pop
push
sbb
push
inc
adc
add
or
js
data16
jp
ror
inc
lret
aaa
pop
mov
add
cli
push
bound
xor
cmp
clc
mov
mov
loop
pop
inc
or
aam
xchg
sbb
cld
push
dec
sbb
loope
incl
pmaddubsw
lock
rolb
popf
mov
push
pop
mov
int3
out
jmp
sub
or
pusha
and
lret
das
sbb
arpl
jbe
in
push
or
pop
mov
push
int3
sub
mov
add
mov
nop
push
lods
mov
adc
sbb
push
fs
adc
push
mov
mov
andb
adc
sbb
push
push
adc
inc
les
mov
mov
pop
push
add
cs
loope
sub
lock
sbb
lret
jle
shlb
repnz
loop
pop
sbb
push
inc
fmull
sbb
shl
dec
jo
data16
imul
pop
cmp
mov
hlt
xor
lods
xorl
das
cli
xchg
mov
mov
inc
mov
pop
shrb
add
fidivs
lods
add
lahf
adc
lea
jmp
clc
mov
sbbl
mov
cmp
cmp
push
sbb
add
xchg
les
jp
adc
cli
xchg
push
dec
inc
inc
imul
cltd
or
push
fucom
cmp
xchg
pop
sub
add
inc
mov
mov
incl
pop
cmp
xor
jge
out
lcall
jno
add
or
mov
pusha
and
pop
js
push
sub
in
les
pop
mov
jl
add
mov
pop
addb
sbb
cwtl
add
fs
in
push
adc
mov
inc
cwtl
pop
outsl
fsubr
push
bound
in
es
add
add
xor
and
and
jne
sbb
out
lock
sbb
push
mov
lret
sbb
int3
addb
fidivrs
add
hlt
scas
dec
js
inc
pop
or
xor
leave
mov
push
aam
sbb
adc
adc
leave
call
cld
addr16
xchg
and
mov
add
mov
popf
sub
ss
pop
jecxz
cmp
mov
sbb
dec
add
hlt
xchg
mov
pusha
je
push
push
aam
mov
cmp
cmp
out
sub
je
push
jo
jne
sub
mov
pushf
test
cs
mov
loope
bound
add
push
add
sub
cmp
push
in
jmp
cmpsl
mov
xchg
int3
cltd
je
pusha
jl
cmpsb
mov
and
sbb
adc
inc
jmp
ror
pushf
lock
add
lret
pop
dec
scas
xchg
divb
mov
fidivrl
dec
fstps
or
add
imul
xor
je
mov
cmc
or
inc
pop
push
jp
outsb
fadd
in
mov
sub
loope
out
mov
sbb
and
lds
pushf
add
inc
xchg
sbb
rolb
cld
cs
dec
pop
cltd
mov
add
dec
sub
xchg
sbb
xor
mov
notb
xchg
lret
outsl
lods
inc
add
push
push
rcll
ja
mov
add
sbb
stos
push
lock
cmp
push
push
sbb
or
mov
rclb
add
mov
outsb
loop
loope
jo
mov
lods
mov
loop
test
nop
sbb
hlt
or
insb
mov
xorb
outsl
bound
lret
xor
les
mov
xor
push
clc
inc
imul
data16
mov
adc
cwtl
aam
outsb
shlb
scas
mov
les
cmp
xor
les
add
out
jp
js
inc
fidivrl
inc
ret
mov
in
dec
push
stos
push
pushf
inc
sarb
insb
lock
ret
dec
cmp
popa
jecxz
arpl
mov
sub
les
into
or
xchg
mov
out
pusha
xor
xchg
xor
or
mov
arpl
jecxz
dec
dec
lret
out
cmp
lret
cld
or
cmp
mov
push
and
inc
andb
call
push
sbb
mov
push
dec
inc
xor
dec
adc
mov
sbb
jnp
add
cmp
fidivl
lods
int
add
dec
call
rclb
adc
or
pop
mov
mov
pop
clc
xchg
rclb
pop
push
jbe
test
sub
addr16
leave
or
jmp
loopne
and
call
pcmpeqw
rol
rcll
xor
mov
sbbb
push
flds
jo
sbb
idiv
xchg
test
rcr
or
sbb
mov
pop
fadds
mov
push
icebp
into
adc
aaa
into
push
ret
add
icebp
pop
mov
sbb
jmp
jmp
aam
push
fabs
pop
push
xchg
sbb
repnz
test
push
or
pusha
push
adc
loopew
sbb
push
add
or
and
xchg
push
push
imul
push
notb
sarb
pop
inc
data16
fs
mov
sbb
ss
sbb
xchg
and
xchg
pop
add
push
pop
mov
inc
ret
add
shrb
push
fdivrs
and
sbb
das
add
rcrb
ret
js
xor
lret
rolb
sbb
imul
sbb
push
andl
cmp
je
sub
loop
and
xchg
mov
sbb
insb
pop
lock
imul
mov
inc
add
outsb
dec
add
sbb
cmp
dec
ret
scas
add
pop
push
repnz
in
sbb
sbb
fidivrs
add
je
call
dec
or
fs
repz
cmp
mov
xor
jae
mov
sbb
jmp
sub
inc
xor
mov
pop
xor
mov
pop
xchg
add
sbbb
jo
out
xor
push
sbbl
push
loopne
mov
push
vpshufhw
push
pop
adc
mov
mov
and
xor
push
xchg
push
popa
pushf
or
sub
mov
push
rorb
push
sub
pop
adc
sub
sbb
popa
arpl
loopne
fmull
inc
pop
lods
pushf
mov
mov
add
dec
stc
inc
push
xor
sub
pop
ret
mov
fidivl
add
jno
push
enter
icebp
xor
repnz
or
sub
call
sub
and
arpl
ret
inc
loope
push
arpl
jp
movsb
testb
iret
mov
mov
nop
or
les
xor
mov
mov
add
mov
jl
xchg
push
or
mov
sbb
mov
or
pop
nop
sub
fs
ret
test
sbb
mov
push
mov
adc
ret
sub
adc
dec
outsb
cmp
js
or
cmpsb
ret
or
mov
movsb
mov
in
jl
es
pop
dec
mov
in
sbb
jbe
loop
dec
pop
lods
inc
ss
or
orl
push
loop
sbb
mov
xchg
test
mov
sbb
dec
arpl
hlt
lods
jp
bound
lods
dec
dec
inc
mov
into
jb
jp
cmp
rclb
jns
cmpb
ss
test
jns
cltd
ror
jle
sub
cmp
test
or
add
ljmp
pop
movsb
xchg
aam
aam
aam
fdivrs
push
fldl
shll
jmp
xchg
jge
cmc
xchg
outsb
sub
lods
dec
lea
and
outsl
pop
loop
mov
bound
mov
mov
dec
adc
shrb
aas
nop
push
sub
and
rcrb
add
cmpb
xchg
xchg
call
xchg
adc
mov
lock
inc
cmp
ret
pop
push
xor
or
sub
cmp
add
push
sbb
clc
mov
jo
and
pop
mov
mov
inc
add
enter
inc
inc
xor
mov
imul
xchg
xor
in
push
lods
jb
sbb
rol
xchg
cli
incl
movl
ret
outsb
fstl
jnp
iret
inc
sti
repz
in
push
add
add
dec
inc
loop
mov
adc
arpl
push
repnz
loope
sbb
out
mov
mov
push
es
push
sbb
xor
adcb
fistpl
sbb
and
push
mov
lock
test
sbb
xor
nop
inc
cmp
sbb
ds
cwtl
cmp
addr16
cmc
add
mov
in
test
ficompl
mov
sbb
xor
sub
or
test
xor
les
push
mov
nop
adc
mov
xchg
test
push
push
pop
addr16
rcr
lods
rcrl
xchg
ret
xchg
adc
dec
pushf
cmc
testb
out
sbbb
lcall
test
inc
push
cmp
loop
jp
or
lods
add
pop
and
xchg
in
dec
daa
shll
push
mov
imul
repnz
pop
inc
leave
push
mov
mov
cmp
test
pop
ret
adc
addb
js
outsb
adc
mov
ret
pop
sub
dec
loop
ret
xchg
dec
inc
jecxz
fs
cmp
cltd
jo
cmpb
jo
loopne
pop
inc
test
and
mov
adc
hlt
clc
or
loopne
jbe
es
xor
ljmp
xchg
push
jae
and
cltd
sbb
mov
add
sbb
in
scas
or
and
faddl
push
sbb
sbb
jo
mov
sub
or
cmp
add
loopne
adc
xchg
or
jp
dec
daa
pop
fsubrs
cmp
popa
data16
in
lea
sub
test
sbb
stos
dec
lods
cmp
fcmovnu
testb
into
fidivs
mov
push
xchg
ds
push
sbb
and
sub
insb
xor
in
and
cmp
sbb
addr16
fwait
loope
inc
mov
mov
movsl
ret
inc
sarb
loop
addl
loop
push
sbb
movsl
mov
fisubs
xorb
in
dec
adc
rcrb
sub
popf
inc
call
xor
adc
outsl
pop
mov
js
or
dec
addr16
nop
in
xlat
movsb
dec
int
ret
sbb
fcmovnu
push
xor
push
mov
ret
fcompl
inc
lea
dec
rcl
fldcw
sub
es
and
inc
lods
or
mov
push
inc
inc
js
xchg
sahf
mov
rcl
cmp
or
push
lcall
or
popa
jmp
ret
loopne
xabort
fiaddl
rorl
adc
fildl
inc
loop
push
mov
mov
mov
mov
movsl
rorb
push
dec
inc
pop
fdivrl
fcoms
lock
xchg
dec
inc
cltd
clc
loop
sbb
ljmp
cmp
js
bnd
xchg
inc
andb
shlb
lret
addr16
outsl
or
pop
cmpsb
push
mov
pop
pusha
insb
rorl
pop
or
sub
push
clc
sbb
mov
add
rcl
sbb
push
jb
shlb
ja
xchg
dec
movsl
inc
jp
test
roll
addb
enter
dec
or
les
in
push
popf
aaa
pop
pop
xor
sar
clc
xorl
inc
adc
addl
lret
jnp
dec
dec
arpl
mov
cmp
sbb
and
fwait
jmp
push
add
decb
aaa
cmpl
js
call
jl
hlt
xorb
push
sub
test
fld
inc
sbb
lods
push
sbb
sbb
loopne
test
clc
push
inc
sbbb
add
mov
ret
es
test
xor
mov
sbb
test
aad
jno
stos
add
enter
lret
inc
add
das
or
adc
shlb
or
arpl
rorl
inc
sub
cmc
adc
fcompl
add
mov
mov
jb
lret
cmp
adc
push
jne
ficoms
mov
xor
sbb
hlt
xor
hlt
jns
add
jns
pop
adc
test
pop
in
cmp
add
add
sbb
std
dec
push
imul
rol
xor
test
and
xchg
xor
and
xor
xchg
addb
shrl
mov
xor
bound
xchg
add
and
lock
xor
add
pop
add
iret
jo
data16
dec
mull
xchg
mov
push
adc
mov
hlt
nop
push
test
jae
mov
pop
fmuls
leave
aaa
dec
sub
push
mov
jecxz
xchg
call
gs
and
xchg
xor
stos
sbb
fstpl
std
stc
out
xor
loopne
inc
cltd
xchg
daa
mov
clc
sub
xchg
pop
push
iret
clc
push
jmp
pop
adc
mov
sub
xor
mov
cwtl
insb
inc
mov
cmpsl
popa
dec
pusha
dec
jnp
sub
pop
mov
leave
or
mov
rorl
push
fcompl
sahf
push
out
xor
add
fildll
adc
lods
push
inc
sub
pop
pop
sub
ficoml
lea
mov
iret
push
js
dec
addr16
popa
sbb
jg
outsl
xchg
and
dec
sub
sub
in
dec
add
stos
out
and
ret
cli
dec
cld
mov
hlt
cld
xchg
adc
imul
mov
sub
test
xchg
inc
lds
pop
loopne
xchg
les
scas
mov
addb
insl
jmp
ljmp
inc
dec
test
aaa
add
sar
int
fildl
or
addb
jg
pop
pop
mov
adc
lods
inc
add
aad
fcmovbe
cmp
popf
jo
imul
push
sbb
sub
push
inc
loopne
fldz
or
dec
inc
sbb
sub
dec
add
pushf
inc
js
adc
cmp
mov
cwtl
and
sub
insb
jl
and
push
imul
inc
data16
popf
push
pusha
and
rcrb
mov
mov
or
and
adc
test
shlb
andb
iret
dec
dec
fcoms
and
scas
cmp
inc
enter
call
jl
push
xchg
jp
dec
and
jno
movsb
xchg
loopne
adc
orb
xchg
sub
push
data16
lock
adc
xchg
in
outsb
cmpsb
lret
rolb
sbb
adc
movb
pop
test
sub
sbb
adc
cmp
add
jno
sbb
xchg
test
into
push
repnz
or
adc
stos
fs
fisttpll
xchg
xor
sbb
xor
push
ret
lock
push
add
add
push
inc
mov
xor
push
adc
sbb
mov
rorl
pop
shrb
hlt
out
sub
roll
pusha
push
jo
or
mov
sbb
ja
and
or
rcrl
pop
stos
scas
or
inc
ret
add
pop
lret
fcom
push
sbb
adcb
xchg
mov
aam
dec
test
ret
inc
cli
mov
add
dec
shlb
add
or
adc
push
cld
dec
popa
add
sbb
xorl
js
push
addr16
cmp
mov
aaa
cmpsb
dec
jae
or
lock
test
movb
out
pop
push
loop
cli
lret
fcomps
sbb
fcomps
addr16
add
enter
scas
cmp
xor
ret
mov
mov
xchg
xor
sbb
aam
rol
inc
addr16
test
inc
pop
mov
lods
pusha
add
stos
mov
pop
xchg
lock
mov
pop
push
das
mov
and
and
and
xchg
xchg
ds
pop
xor
mov
mov
movl
push
push
nop
in
in
mov
sahf
dec
push
pop
unpcklps
mov
sub
mov
mov
loopne
dec
mov
ret
int3
pop
test
idivb
add
dec
sbb
fcompl
fcomps
xor
mov
lcall
xchg
inc
into
pop
mov
pop
inc
in
andb
mov
test
mov
push
add
clc
adc
or
jbe
sbb
sub
sbb
xchg
xor
or
mov
js
mov
pop
push
or
jo
lret
mov
popa
adc
and
mov
sahf
and
loopne
inc
mov
mov
push
out
cmp
rcll
xchg
cs
dec
mov
loop
dec
dec
mov
add
pop
outsb
cmp
out
mov
pop
dec
int3
rcl
mov
or
push
mov
xchg
out
mov
movsb
les
dec
mov
add
fs
test
in
add
jp
pusha
sub
pop
lret
pushf
js
push
subb
pop
or
lock
adc
xchg
sarb
aas
fs
ret
nop
movsb
inc
popf
in
xor
ret
jno
nop
scas
cmp
adc
cwtl
test
lcall
cs
xor
xlat
fwait
xor
jno
mov
mov
ret
push
inc
and
or
rclb
aaa
mov
fadds
push
incb
xor
and
sbb
movsb
mov
test
pop
sbb
fimull
push
sub
push
push
addb
push
mov
mov
jo
mov
sub
add
loop
in
in
mov
mov
xchg
in
push
mov
mov
or
push
mov
jo
leave
bound
cmpb
push
push
popf
inc
testb
inc
sbb
xchg
lods
notb
movsb
gs
sbb
pop
push
sub
mov
mov
sbb
mov
dec
mov
cmp
into
jne
movsl
icebp
mov
sahf
add
adc
mov
push
and
sahf
xor
cmp
xchg
and
mov
rclb
enter
push
out
sahf
sub
xor
push
and
jle
or
rcr
pop
or
push
adc
js
adc
addb
fistl
call
stos
adc
jo
inc
fldenv
push
ds
adc
mov
and
ds
push
leave
or
or
dec
imul
add
or
insb
pusha
mov
mov
mov
sub
xor
push
nop
adcl
xchg
lret
cs
insb
push
movsb
ror
les
sbb
lock
xor
jb
sbbb
mov
ss
xchg
or
add
das
xchg
lods
sbb
imul
movsb
sbb
mov
je
clc
dec
lahf
shl
popa
inc
sbbb
cwtl
fsubs
pop
push
jbe
pusha
push
lret
jp
mov
int3
dec
and
push
rol
jl
jo
leave
pop
xchg
mov
movsl
mov
mov
sub
jmp
add
lret
mov
arpl
fs
sbbl
xchg
push
xchg
mov
scas
add
gs
cli
shrb
cltd
or
inc
xchg
cwtl
dec
jmp
enter
jecxz
xchg
mov
sub
push
inc
call
daa
dec
xchg
dec
hlt
xchg
xchg
dec
inc
dec
test
int3
enter
cmp
outsb
sbb
xchg
mov
adc
rolb
data16
js
push
and
push
mov
lods
in
insl
call
xor
add
sbb
insb
popa
je
jbe
in
shlb
lock
xor
push
jo
push
xchg
test
add
mov
or
clc
mov
fwait
hlt
inc
insb
cmpsb
das
adc
sub
inc
negl
stos
icebp
lret
add
xor
add
mov
clc
test
lods
or
lock
clc
lods
fwait
aas
sbb
sbb
test
or
mov
les
mov
in
flds
ss
lret
mov
jecxz
and
add
aas
or
je
in
mov
add
aas
nop
ret
testl
dec
fisttpll
je
jno
stc
cld
sbb
pop
and
inc
movsl
fstpl
adc
or
sbb
mov
push
jo
hlt
mov
add
push
sub
add
jmp
and
adc
jecxz
add
xchg
and
or
mov
movsb
xor
outsb
push
cmp
int3
cmpsb
jg
imul
inc
or
add
sbb
out
loope
paddsb
push
mov
lret
xchg
pop
jl
sbb
daa
add
mov
mov
cmp
out
addr16
inc
mov
adc
and
pop
fs
push
mov
mov
cmpsb
add
push
subb
clc
pop
pushf
enter
or
movsl
xor
xor
pusha
xor
lea
rcll
push
loopne
loop
pop
call
and
les
ljmp
lods
punpcklwd
push
icebp
test
pop
nop
add
jb
cmpsb
and
xchg
xchg
call
testl
mov
rorl
or
add
repz
add
addl
lock
xor
dec
sbb
in
xorb
inc
jmp
xchg
out
loope
orb
pop
push
loopne
int
out
cmp
jecxz
xchg
pop
sbb
push
jl
dec
cwtl
loope
jmp
addr16
push
les
push
xor
fsubl
mov
cmp
lcall
sbb
jo
push
jp
call
data16
sbb
cmpsb
rcll
pusha
mov
add
sub
and
mov
lea
je
and
inc
jb
into
loop
mov
jae
ljmp
shlb
rolb
mov
shll
xorl
mov
cmp
lods
xor
push
dec
aam
pop
xchg
jne
inc
or
andb
mov
jle
daa
inc
daa
mov
rorb
add
loopne
mov
jp
test
orl
sub
imul
mov
inc
mov
or
xchg
inc
js
bound
or
inc
popf
popa
or
fiaddl
data16
cmp
adc
jb
push
and
cmpsl
into
sbb
adc
mov
sub
add
sbb
cmp
xchg
ljmp
insb
movsb
ret
rolb
dec
lcall
cmpb
cwtl
fidivs
xor
ljmp
test
mov
ljmp
xchg
pop
push
gs
pop
xor
int3
inc
andb
repnz
je
out
xchg
mov
loop
sahf
out
add
mov
dec
sub
adc
sahf
out
and
add
cmp
adc
sub
les
pop
pusha
loopne
and
cld
enter
push
mov
xchg
call
dec
test
mov
jecxz
push
in
sbb
cltd
inc
and
cmpsb
push
outsb
xor
add
mov
push
loopne
lea
ss
dec
mov
aaa
loopne
test
sbb
cmp
xchg
jl
inc
and
push
aam
pushf
sbb
inc
sub
out
dec
sub
js
cmpsb
loopne
dec
mov
mov
addl
mov
pop
cmp
test
sbb
pop
bound
lea
add
rolb
adc
mov
mov
mov
xchg
imul
ljmp
je
xor
mov
mov
add
mov
xchg
xor
add
lock
test
xchg
in
dec
insb
jne
lret
push
int3
inc
lock
ret
inc
insb
xor
xchg
mov
xor
ret
ret
push
je
or
mov
add
dec
popa
add
ljmp
popa
movb
mov
cwtd
js
sbb
xchg
jp
mov
add
jnp
sbb
mov
jno
setp
mov
jnp
lret
pusha
inc
aam
add
bound
incl
dec
mov
test
pop
sub
ret
or
add
jno
mov
sub
scas
push
or
loope
shr
push
fsubl
lret
or
mov
fisttps
stc
outsl
jge
sub
fsub
inc
add
cmc
xchg
out
sbbl
or
adc
or
pop
add
sbb
inc
ret
cli
adc
outsl
jge
dec
or
pushf
lods
and
mov
dec
adc
repz
sub
in
nop
adc
lods
xor
or
lret
xor
cmp
or
mov
cld
xor
jno
dec
adc
push
sbb
shrb
cmp
shr
add
lsl
js
stc
sti
aaa
rcrb
sub
lods
out
mov
fisubrl
sub
orb
pop
js
loop
or
shl
dec
fidivs
sbb
out
fsubrl
rorb
test
call
ror
dec
adc
push
iret
int3
lcall
sbb
cmpl
rcrb
and
ret
jns
fmul
xchg
or
aam
movsb
arpl
fsubrl
adc
loopne
push
andb
loopne
daa
sbb
lock
push
jmp
daa
in
insb
enter
data16
push
out
dec
or
xlat
mov
leave
mov
add
rcl
cmpsl
mov
xchg
jo
mov
cs
add
testb
int3
push
pushf
jb
out
mov
jo
sub
mov
movb
sub
aad
add
sbb
or
cmp
xor
insb
sub
push
sub
mov
out
divw
ffree
adc
add
or
xchg
inc
adc
in
mov
mov
je
xchg
xor
push
pop
data16
divb
mov
push
addl
arpl
lock
push
insb
orb
mov
popa
and
fcomps
jo
cmpsb
mov
outsb
mov
mov
cld
lcall
ret
xchg
sbb
and
push
movsl
mov
outsl
es
mov
clc
pusha
mov
ret
pop
xchg
and
mov
pop
lock
cli
sbb
push
mov
cmp
mov
add
inc
rolb
pop
dec
data16
fadds
push
mov
mov
or
or
or
loop
sub
and
loopne
pop
loopne
insb
push
ret
lcall
arpl
xchg
fs
adc
mull
mov
dec
mov
inc
inc
mov
andb
cmp
cld
or
gs
add
add
fistl
into
lock
pop
jmp
adc
loopne
mov
cmp
jp
and
push
call
add
push
inc
mov
inc
push
popfw
jp
fdivl
mov
add
movsb
mov
es
lret
or
arpl
lods
adc
inc
popf
xor
enter
lahf
addr16
add
mov
inc
popf
or
push
mov
and
sbb
lds
and
inc
fdivl
pop
loopne
sub
adc
inc
push
cs
push
mov
lods
cwtl
sub
ret
dec
sub
jo
shlb
pusha
or
mov
cmp
outsb
shlb
loop
or
sbb
xor
outsb
mov
mov
les
paddsb
fistpll
ret
stos
xor
fdivl
or
movsb
cli
enter
bound
xchg
loope
pop
cld
add
inc
ljmp
add
push
jb
jne
inc
lea
cmp
int3
push
cs
sub
call
test
ficoms
cmp
xchg
mov
out
ret
push
and
loop
xor
mov
mov
adc
lock
xchg
and
jb
shr
dec
jmp
or
push
mov
and
push
ds
or
pop
sbb
jg
push
jmp
cwtl
loope
insb
or
aaa
outsl
fstl
and
lock
add
jnp
fisubs
add
or
stc
add
add
leave
jl
inc
mov
inc
shrb
gs
cwtl
stos
cmp
inc
inc
es
inc
adc
add
or
incl
hlt
inc
sub
aas
test
fmuls
lock
fsts
cld
mov
ficoms
popa
and
inc
sbb
or
and
in
adc
or
pop
or
hlt
dec
rcr
mov
push
mov
adc
cmp
sub
hlt
sub
or
jns
leave
push
pop
push
jge
in
or
es
lcall
rcl
rolb
jmp
sti
adc
adc
pop
and
or
and
cld
or
jnp
bound
dec
cmp
fisttps
xor
notb
and
xchg
add
jecxz
mov
xchg
add
daa
xor
jb
gs
mov
mov
and
pop
push
pop
jmp
pusha
pop
push
inc
loopne
cmpsb
lock
xchg
shrb
rolb
jo
xor
dec
xor
in
inc
add
lods
inc
mov
sbbl
inc
xchg
cltd
add
incb
add
pop
mov
mov
sbb
loopne
sub
arpl
inc
dec
mov
rcll
xor
add
inc
inc
sbb
outsb
cmp
lock
push
xor
adc
stc
mov
push
xchg
ret
pusha
arpl
es
fdivrp
mov
ss
out
add
outsl
dec
clc
orb
in
call
test
mov
or
imul
add
in
mov
pop
addr16
xchg
inc
das
and
nop
pop
popa
insb
call
mov
or
sbb
inc
sbbb
dec
lods
cmpb
xchg
inc
in
add
sbb
jbe
into
sbbb
sbb
rcrb
and
cs
fcmovnbe
or
and
xchg
mov
or
push
lret
je
and
rorb
lret
loop
cmpsb
pushf
add
clc
movsl
cmc
xor
mov
idivb
push
pusha
xchg
call
push
clc
cmp
jb
sbb
adc
sub
mov
int3
into
aam
push
test
add
pop
cltd
sbb
jno
inc
outsl
mov
xchg
add
adc
cmpsb
add
cmp
sub
sub
dec
pop
cmp
dec
xchg
or
adc
sub
outsb
xor
fsubrl
xor
dec
mov
jp
pop
or
in
orl
pop
lods
enter
pop
adcb
fiadds
add
scas
and
xor
push
cmp
aam
cmp
faddp
lcall
sbb
test
sub
lock
inc
push
je
mov
test
xor
mov
int3
or
jae,pn
in
movsb
inc
das
and
mov
js
jp
push
cmp
pop
pop
negb
pushf
rcrb
rcll
loope
dec
adc
loope
or
out
imul
out
mov
sbb
adc
mov
and
mov
loope
or
cmp
jle
xchg
jmp
cmp
aam
insl
mov
push
les
or
and
dec
shlb
adcb
and
adc
sbbb
stos
xchg
xor
sub
sbb
test
push
xchg
mov
flds
adcl
push
ret
adc
pop
xchg
cmp
sbb
js
ret
inc
inc
cmp
hlt
inc
imul
mov
testb
loop
cmc
dec
dec
mov
mov
jbe
enter
jno
pushf
movsb
outsb
cmp
lock
outsb
mov
stos
clc
push
dec
adc
outsb
sbb
and
mov
or
mov
sbb
hlt
lcall
push
inc
shlb
mov
shrb
in
ja
pushf
hlt
call
pop
dec
and
in
cmpsb
mov
scas
mov
push
lods
push
push
add
add
jo
xor
cmpsl
aam
pop
fdivrs
and
cmovp
xchg
pushf
mov
pop
jo
push
inc
mov
cmpsb
lea
and
dec
push
outsb
test
es
xchg
ds
inc
loopne
pop
xor
cmpsb
cmpsb
shrl
and
fs
xchg
add
xlat
push
aam
fcoml
sbb
xchg
sbb
cmp
pop
cmp
rorl
loop
adc
cmp
cmp
call
mov
xor
sbb
cmp
sar
dec
out
dec
call
rolb
cmp
test
mov
stos
adc
arpl
xchg
fildl
repz
mov
xor
lret
sbb
push
mov
push
movsl
orb
add
pushf
cmpl
push
lret
shlb
cld
mov
mov
or
adc
pop
pop
or
pop
jecxz
xchg
mov
jnp
xchg
xor
cli
aad
mov
push
je
inc
mov
movsl
rorl
or
cmp
jp
pop
sub
rorb
adcl
dec
inc
call
movsb
xchg
je
cmp
sbb
sbb
pop
loopne
cmp
sahf
fdivrl
movsb
xchg
sbb
dec
cwtl
in
or
loop
xchg
fs
das
imul
mov
push
mov
enter
rsm
lret
xchg
lea
mov
xchg
sahf
push
xchg
jns
or
mov
sahf
jp
push
jle
mov
pop
mov
inc
cmp
inc
insb
adc
cmp
adc
loop
adc
sub
sbb
and
push
mov
mov
adc
xor
xchg
xchg
jp
pop
adc
mov
jb
add
jb
xchg
mov
stos
push
adc
sbb
inc
shll
mov
push
pop
sbb
dec
sub
mov
sbb
jb
xor
aaa
js
sahf
nop
jo
pushf
insb
test
les
ss
sbb
fs
pop
cmp
push
or
pusha
andl
clc
pop
xchg
sbb
inc
mov
jmp
mov
pop
push
fisubrl
sub
push
and
xlat
jmp
shlb
push
sbbb
and
sbb
mov
jb
pop
sarb
cli
mov
je
sbb
sbb
nop
fcmovb
add
movsb
inc
imul
inc
mov
xchg
rcll
fdivr
cmc
mov
int3
push
push
cmp
lea
or
mov
push
pop
cs
pusha
push
cmpsb
incl
jae
cmp
cli
std
add
leave
fcom
add
outsb
mov
xchg
push
adc
fiadds
dec
mov
mov
dec
arpl
ljmp
or
pushf
test
xlat
xchg
lock
daa
cmp
test
test
adc
popa
cs
ljmp
push
adc
cltd
add
mov
mov
add
pusha
shl
es
xor
cmp
mov
push
loopne
xchg
je
and
mov
in
je
hlt
jp
lea
vunpcklps
sub
ljmp
adc
xor
add
insb
pop
nop
and
adc
pushf
mov
subl
adcb
enter
das
les
lcall
or
int3
or
push
mov
dec
dec
sub
push
or
cmp
xchg
lock
adcb
adc
or
in
jl
inc
faddl
push
in
sahf
adc
pop
rcrl
mov
sbb
and
sub
in
leave
shrb
pop
inc
or
fdivrs
jle
dec
inc
add
mov
or
xchg
jle
push
call
leave
inc
ret
cmp
ror
loop
mov
dec
sbb
mov
popa
cmc
push
in
jge
rolb
xchg
or
cmp
push
sub
shlb
imul
loopne
test
jo
cmpb
jp
cwtl
lcall
inc
lea
cmp
cmpsl
mov
inc
das
push
fcoms
aam
es
ret
je
aas
ret
cmp
mov
loopne
sbb
pop
in
out
push
stos
mov
mov
add
sub
imul
ds
stos
lcall
ljmp
mov
cmp
lret
pusha
into
jbe
cli
add
loopne
adc
add
or
xor
pop
or
inc
push
xchg
add
out
adc
mov
mov
and
insb
ljmp
cwtl
inc
nop
mov
cmp
and
xor
cmp
xchg
mov
mov
pop
aaa
add
or
dec
inc
lods
sbb
fimull
xor
dec
roll
es
or
test
test
sbb
sub
cmpsl
xchg
pop
or
test
mov
pushf
pop
pop
xor
fimull
add
das
push
and
fdivrl
and
psrld
aad
mov
inc
repnz
xchg
sbb
mov
sub
cmp
fstpl
movb
and
xchg
jne
out
cmpl
test
leave
int3
jo
inc
sbb
scas
adc
cmp
icebp
pop
mov
aaa
decl
mov
test
xlat
cmc
mov
sbb
cmc
rorl
adc
fimuls
loopne
orb
fcomp
mov
jl
arpl
xchg
mov
add
inc
sbb
call
out
ljmp
cmp
cmp
sbb
jo
call
xor
ret
mov
push
sahf
cmp
adc
mov
arpl
push
xchg
mov
add
adc
sbb
or
outsl
loopne
aam
push
outsl
pop
sbb
dec
leave
adc
loopne
cs
pop
cltd
orb
sub
loope
cltd
or
jp
xor
fs
cmpsb
xor
aam
hlt
lock
push
dec
test
jl
in
xor
push
cmp
ret
pusha
js
movsb
hlt
lea
inc
sbb
enter
sbb
or
sahf
pop
fstps
push
aas
push
mov
push
adc
inc
sbb
lods
adc
xor
push
mov
mov
lret
push
aam
and
je
add
sub
lret
lea
dec
xchg
mov
xor
test
pusha
push
sub
rorl
or
xor
inc
je
mov
push
add
andl
fs
sbb
dec
or
loop
inc
cmpsl
les
scas
push
call
rclb
pushf
sub
jbe
xor
add
clc
cs
adcb
push
sub
and
lods
adcb
add
jbe
lret
inc
xor
andl
sub
ret
nop
rolb
xor
and
push
inc
fnstcw
ret
mov
cmc
and
adc
jo
and
movsb
cmc
push
les
push
and
in
out
and
pop
mov
adc
xchg
push
cmpsl
xchg
outsb
pop
bound
push
add
jo
mov
push
outsb
and
push
pop
push
sbb
out
sahf
xor
pushf
mov
jo
adc
push
lock
inc
andl
lods
ds
push
sub
call
jo
hlt
pusha
xor
lret
and
jb
or
adc
lods
xor
pop
lcall
or
lsl
sub
mov
sub
or
popf
insb
pop
push
pop
or
cmp
sub
clc
mov
movsb
into
sbbb
mov
sbb
lods
mov
pop
imul
lea
rorb
mov
xchg
add
jp
cmp
push
pop
cli
push
ljmp
mov
push
jbe
out
outsb
hlt
and
push
repnz
inc
mov
sahf
movsb
pop
add
fsubs
push
mov
lret
in
or
xchg
sbbb
je
in
add
arpl
jb
dec
sbb
fs
mov
dec
pop
das
mov
sahf
addb
js
inc
outsb
scas
and
xor
mov
imul
sti
sahf
adc
pop
mov
xchg
cmc
js
or
push
pop
pop
sahf
outsl
pusha
pop
pushf
mov
dec
dec
mov
into
cltd
cmp
pop
rcrb
sbb
sub
cmp
movsb
les
dec
mov
xchg
test
xor
cmpl
xchg
dec
negb
int3
xchg
push
cmpsl
andb
add
cwtl
or
or
jo
sub
nop
and
fs
xchg
sbb
decb
add
rclb
mov
mov
pop
lods
cmc
lock
pop
mov
xchg
add
icebp
xchg
pop
adc
mov
or
dec
inc
adc
in
push
add
push
or
add
cmp
push
xor
rorb
dec
dec
dec
jo
inc
mov
dec
pop
ss
pop
or
flds
shrb
mov
adc
in
inc
lret
xchg
pop
cltd
aad
xchg
cmp
and
cmp
es
sbb
mov
popa
aam
xor
mov
lea
inc
addr16
lods
lds
push
push
mov
and
adc
bound
rorb
pop
xchg
dec
loopne
and
jecxz
cld
pop
and
sbb
ret
ret
or
xor
iret
outsb
mov
adc
add
xchg
xchg
pop
push
inc
dec
lret
mov
testb
mov
sbb
mov
les
fimuls
cmp
pop
push
ss
mov
sub
jl
imul
test
sbb
lret
rorb
mov
and
jp
arpl
or
xorb
andb
loope
dec
add
lock
xchg
into
xor
mov
scas
jno
xor
enter
jmp
sub
fwait
clc
cltd
mov
cmc
adc
and
or
push
mov
jne
and
jp
imul
lods
sub
rolb
lea
in
movsb
bound
movsl
aad
enter
sbb
or
addl
mov
cmp
pop
adc
add
dec
adc
imul
imul
ret
and
hlt
loope
sub
xor
pop
mov
and
int3
imul
ljmp
outsb
cmp
xchg
adc
cmp
push
ja
push
inc
jo
sub
lret
js
adc
test
sub
pusha
hlt
insl
rorl
xchg
cltd
cwtl
insb
ss
data16
jb
xchg
dec
add
inc
mov
add
stos
jne
push
and
jnp
clc
jb
mov
rorb
or
enter
pop
mov
inc
sbb
ret
and
jmp
push
push
fidivs
jo
aaa
or
mov
adc
mov
int3
pop
push
in
popa
sub
mov
mov
dec
dec
sub
push
pop
popf
stos
nop
add
mov
pop
jp
xlat
das
inc
add
cmpsb
dec
loop
pusha
punpcklbw
push
mov
popf
imul
les
push
add
jo
aam
fst
sub
imul
aaa
jmp
outsb
jae
or
pusha
or
sbb
cli
mov
inc
push
mov
sbb
pop
js
ret
add
ret
popa
ret
lods
and
pop
mov
add
adc
push
nop
aam
fs
or
jae
or
in
cmpsb
sub
jp
es
ss
add
mov
xor
xchg
cmpsb
scas
jno
mov
xchg
in
jp
movsb
inc
xchg
and
out
mov
fcoms
das
or
hlt
lods
mov
pop
push
arpl
xchg
cli
mov
cli
in
push
cwtl
or
mov
add
pop
sbb
add
xchg
pop
mov
xchg
test
rclb
mov
leave
jp
cmp
add
dec
loopne
loop
lods
add
sbb
or
cs
outsb
xchg
inc
bound
lret
push
sub
outsb
mov
out
lret
mov
jmp
mov
outsb
outsb
or
test
inc
sub
out
into
leave
mov
cmpsb
inc
aad
cmp
xor
nop
outsl
add
adc
hlt
xchg
test
inc
cmp
inc
testl
lret
stos
xchg
xchg
loop
add
xchg
push
inc
cmpsl
adc
jecxz
mov
and
ret
enter
and
and
jns
pop
sbb
xchg
pop
add
or
popf
dec
ss
or
mov
das
dec
jbe
nop
mov
ljmp
or
out
sbb
loope
stos
or
jp
imul
lods
xor
shlb
imul
test
js
paddq
dec
loopne
push
outsb
into
push
out
mov
pop
push
adc
cld
jo
jns
jb
lea
or
jp
bound
sahf
mov
mov
loop
ljmp
andb
jo
hlt
inc
or
mov
xor
jno
cmp
rclb
mov
nop
jl
pop
add
add
sbb
scas
xchg
sbb
add
stos
mov
sbb
hlt
and
ret
jb
xor
jecxz
adc
adc
icebp
inc
or
sub
bound
test
mov
ret
xchg
mov
movsb
add
mov
nop
dec
inc
popf
add
add
ret
push
sbb
ljmp
mov
aam
and
addb
and
push
fsubrs
pusha
mov
cmc
xor
mov
cmp
cmpsl
sbb
lret
ret
push
jbe
mov
cmp
in
sbb
sbbb
sbb
or
mov
inc
mov
lds
push
jg
fidivl
sbb
fsts
and
fiaddl
jo
push
cmpsl
arpl
sbb
pop
cmp
pop
or
lods
cmp
push
loop
dec
das
ret
xor
cmp
xor
mov
sbb
addb
mov
sbb
or
insb
sub
ficoms
mov
aaa
push
aad
daa
outsl
jns
jno
addb
insb
cli
mov
xor
pop
sub
add
mov
je
enter
mov
pop
call
inc
sbb
push
jecxz
push
popa
loope
adc
add
test
clc
adc
mov
sub
pop
cmpsl
pop
xor
mov
mov
shlb
fldenv
adc
jmp
data16
or
cmp
adc
push
ljmp
insb
add
call
fildl
shrl
push
les
cmp
popa
addr16
fcmovne
xchg
ret
in
add
pop
xchg
jmp
inc
push
ret
xchg
stos
lret
xor
js
arpl
lret
ret
add
fldenv
mov
pop
or
or
fcomp
call
or
xchg
fsubrs
xchg
and
pop
dec
mov
ret
add
mov
ds
inc
cmpsb
push
push
inc
clc
jmp
xchg
rcrl
add
push
sub
add
sub
ret
in
test
or
mov
cmp
mov
aam
cmpsb
loop
rol
sbb
cli
push
cmp
inc
ljmp
repnz
movb
xchg
dec
mov
icebp
adc
sub
in
loop
dec
sarb
clc
or
xchg
or
adc
dec
jo
jp
add
fdivl
add
push
pop
aaa
gs
ljmp
adc
and
xchg
jl
call
adc
inc
and
xchg
pop
dec
orb
mov
aaa
subb
and
add
sbb
add
mov
ret
in
fcoml
push
xor
rcl
fldenv
push
push
mov
ficoms
add
sbb
dec
fnstcw
adc
and
add
inc
pop
xchg
xor
fimuls
mov
add
xchg
sbbb
cld
sub
aad
pop
inc
add
cmp
mov
fsubrs
ret
movb
push
sub
fidivrs
mov
jo
jbe
inc
enter
adc
adc
sub
xchg
or
xchg
sub
test
repnz
icebp
aam
add
adc
mov
cs
adc
aad
push
xor
cmp
add
push
xchg
mov
and
fidivrl
pushf
mov
jo
pop
xor
js
sahf
adc
mov
leave
sbb
ss
lock
xor
aam
cmp
and
ret
sbb
inc
dec
dec
add
pop
jo
adc
fadd
outsb
pop
clc
add
es
in
add
mov
sub
jo
sbb
inc
test
testb
adc
ror
mov
cmpsl
and
jnp
adc
cmp
loop
inc
mov
mov
repnz
mov
xchg
ficoms
sub
xchg
ret
ss
and
push
jb
lret
xchg
lock
or
mov
push
xor
inc
stc
xorb
add
loop
mov
fsubl
mov
cmpl
sub
dec
lea
xchg
jne
imul
mov
dec
xchg
test
mov
xchg
repnz
mov
js
rcrb
rorl
les
pusha
push
cwtl
or
add
ficoml
jecxz
xchg
clc
jb
ds
push
mov
or
fimull
and
sbb
insb
inc
sub
mov
sbb
sbb
orl
loopne
jle
mov
or
xor
mov
shl
adc
lock
nop
adc
and
push
ror
test
imul
sbb
fidivrl
ss
adc
ret
loopne
push
hlt
sbb
loopne
test
cmp
push
or
push
jp
mov
addb
cmp
dec
pop
xor
data16
add
sub
inc
test
push
and
arpl
adc
jp
bswap
into
mov
add
cmp
andl
inc
loope
pushf
sahf
fwait
dec
adc
sahf
mov
imul
stos
xchg
mov
xchg
xorb
addr16
push
sbb
aad
or
sbb
pushf
and
cwtl
or
pop
pop
xchg
ret
adc
arpl
sarb
push
push
push
dec
lret
lcallw
push
movb
push
sbb
lods
push
mov
xor
jmp
test
ljmp
pop
pop
leave
or
scas
or
or
sbb
cmp
or
sbb
je
in
cmp
insb
xchg
mov
xor
test
push
lods
insb
test
imul
and
mov
or
andb
pop
mov
pushf
adc
movsb
push
jbe
add
sbbb
dec
add
sbbb
loopne
xorl
pushf
inc
pusha
and
lds
aaa
add
push
hlt
pop
pop
cmp
add
pop
dec
mov
push
dec
out
push
mov
pop
mov
xor
or
jmp
or
enter
jbe
add
xchg
subb
xor
int3
jp
inc
lods
sbb
js
dec
xchg
data16
rolb
movsb
or
loopne
andl
pushf
rcl
inc
lret
ffree
ret
push
insb
sub
shr
test
scas
dec
outsl
fsub
movsb
push
sbb
fwait
push
mov
lock
sahf
dec
mov
das
lock
or
dec
and
dec
inc
push
push
pusha
and
or
cmpl
inc
xchg
pop
ret
mov
faddp
lret
inc
cs
add
add
pop
and
or
cltd
sbb
out
push
mov
pop
or
pushf
fs
pushf
jb
inc
sbb
or
inc
test
pop
sub
into
xchg
and
imulb
xchg
adc
inc
int3
clc
je
ret
xchg
xchg
stos
ds
lods
dec
inc
lea
scas
push
dec
adc
adc
dec
jo
or
push
orb
cmpsb
sbb
lods
xor
inc
or
xor
mov
jo
adc
sbb
cmp
and
cmp
pusha
or
inc
xchg
outsb
fcomps
nop
pop
pop
lods
sub
push
mov
adc
and
push
aam
push
ret
dec
mov
aam
aam
ret
push
pop
sbb
nop
pop
lcall
aam
sahf
xor
lock
add
ficoms
add
mov
jp
lods
loop
subb
add
push
addr16
and
cld
fwait
pushf
mov
hlt
push
jbe
aad
push
or
fsubrl
sbb
mov
testl
xor
mov
jp
dec
xorl
and
aam
rolb
mov
clc
and
das
jp
call
hlt
push
aas
pop
outsl
dec
fs
hlt
xchg
int3
xchg
sti
sbb
call
add
test
inc
jno
sbb
inc
adc
adc
mov
inc
int
mov
ss
pop
rcrb
or
jbe
test
popa
sbb
or
lcall
add
jb
sub
push
mov
xchg
sbbb
push
or
pusha
icebp
jg
mov
int
mov
mov
insb
sub
inc
imul
data16
xorb
sahf
mov
in
xchg
repnz
rolb
mov
test
sbb
test
mov
or
push
fdivl
xor
loopne
xor
xchg
inc
inc
add
or
inc
and
es
loope
out
cmp
mov
cltd
test
xor
sub
mov
scas
sub
sbb
cmpsl
js
mov
sbb
les
adc
add
push
or
stos
fdivs
mov
sbb
loop
adcb
mov
loopne
or
pop
outsb
pusha
dec
mov
pop
mov
ja
test
fwait
mov
pusha
or
sub
or
mov
jge
push
jp
pop
fisttpll
xorl
lret
js
push
adc
or
bound
aaa
xor
ret
js
imul
or
loopne
push
test
inc
cltd
and
sbb
hlt
jecxz
daa
jns
dec
jecxz
loopne
js
or
push
rcrb
clc
repnz
xor
notb
and
push
jge
or
push
sbbb
cmp
outsb
outsl
sbb
xor
lcall
jmp
ja
and
dec
push
scas
jo
add
popf
pop
sbb
loope
push
js
jb
sbb
mov
cld
enter
cs
rclb
ret
push
mov
movsb
mov
mov
mov
mov
sbb
enter
cmpb
xchg
push
hlt
xchg
sbb
jb
push
push
dec
cltd
pop
mov
jbe
lds
jno
lea
pop
pop
dec
xor
mov
jp
xor
sub
inc
popa
xor
in
jbe
pusha
dec
loopne
fdivl
mov
pushf
mov
cmp
sti
daa
or
into
cltd
mov
mov
push
js
lock
xor
fcoms
sbb
and
and
push
push
mov
insb
dec
data16
loopne
or
sbb
inc
sbb
mov
nop
loop
add
and
into
adc
inc
lock
mov
lcall
sbb
pop
push
adc
lods
mov
pop
mov
sub
cmp
xchg
loope
sub
and
test
pushf
std
cmp
inc
mov
pushf
sub
or
mov
pop
ljmp
xchg
add
imul
push
cmpsl
and
mov
or
push
cs
xor
adc
and
dec
rorl
xchg
cwtl
pushf
add
ss
mov
mov
cmp
sub
out
and
bound
dec
jmp
test
pop
cs
mov
loopne
adc
sbb
rolb
hlt
mov
pop
push
rolb
adc
pop
push
inc
sahf
leave
pop
cmp
sbbl
loop
neg
sbb
and
ret
mov
jno
into
sbb
cwtl
cltd
push
xchg
andw
daa
push
mov
adc
lret
les
lcall
lcall
sbb
jle
push
sub
mov
dec
and
mov
or
divb
inc
mov
scas
dec
add
inc
xchg
arpl
and
pop
add
hlt
mov
in
loopne
pop
adc
jo
push
add
or
loopne
cmp
lods
dec
xchg
test
mov
lret
or
fadd
or
rorb
hlt
or
push
mov
fmull
in
xor
and
and
xor
adc
push
push
adc
mov
shlb
push
outsb
mov
lods
xor
mov
roll
pop
loopne
pop
mov
nop
jb
xor
xor
or
add
cmpsl
jl
push
rcrb
inc
cmpsb
jo
inc
daa
into
or
dec
fcomp
mov
movsb
mov
add
js
cli
adc
push
mov
inc
sbb
lcall
insb
in
ret
pusha
xor
adc
sbb
mov
adc
js
lcall
fsub
push
in
dec
loopne
adc
adc
jno
loop
shl
adc
or
outsl
cmp
xor
or
das
jns
adc
jb
or
dec
loop
roll
cltd
add
adc
sbb
xchg
fadd
mov
cs
dec
lock
sbb
pop
cld
bound
cmp
movsb
xchg
mov
lods
insb
or
stc
call
dec
add
pusha
adcl
push
add
pusha
imull
fcmovbe
push
cmpsb
add
inc
inc
xchg
sbb
sbb
pop
sbb
sbb
jne
subl
xor
in
leave
sbb
cli
inc
popw
cmp
mov
push
mov
mov
mov
lcall
xchg
lret
pop
jge
pop
jo
lods
pop
pop
lock
sub
rolb
push
addl
jp
pop
ss
clc
js
push
mov
pop
cmpsl
aaa
sbb
add
add
mov
out
or
sbb
inc
jne
dec
dec
rcl
ret
sbb
push
rcr
sbb
or
xchg
dec
push
nop
fsub
into
enter
test
js
negb
mov
aaa
test
in
testb
or
loope
daa
sbb
cmpsb
pushf
out
fs
popf
fcoml
lods
aad
nop
or
in
cmc
cmp
je
mov
push
mov
mov
cs
ljmp
jo
pop
or
or
incb
js
cmc
sbb
jnp
dec
pop
inc
dec
pusha
ror
xchg
leave
les
and
lcall
fidivrs
or
add
adcb
sub
cmpsb
adc
je
lods
lcall
test
insl
cwtl
andb
cld
mov
pusha
mov
ret
pop
push
dec
popa
cmp
pushf
inc
data16
fs
roll
es
mov
cmp
in
cltd
in
jne
cld
fiaddl
sub
fidivl
fs
lret
cwtl
cli
push
iret
dec
inc
outsl
mov
or
cld
pusha
sub
add
outsb
cwtl
testb
ret
add
pushf
add
pop
and
pop
dec
cmp
sbb
mov
out
add
nop
aad
inc
lea
or
outsb
pop
test
pusha
xor
xlat
mov
xor
sub
repnz
loop
hlt
adcb
pop
xchg
imul
addb
add
xchg
jns
repnz
inc
sub
daa
lds
push
jl
xchg
dec
dec
popf
data16
bound
or
and
add
test
arpl
daa
in
and
sub
push
sbb
sub
sbb
lock
dec
sahf
mov
pushf
je
mov
ret
bnd
mov
or
clc
mov
or
push
lea
xchg
pop
push
cmp
fcmovu
add
mov
rclb
es
movl
or
push
js
popl
fidivl
push
mov
lods
and
pop
adc
mov
lret
dec
adc
icebp
xor
call
xor
adc
mov
dec
mov
mov
aaa
push
mov
push
imul
ljmp
mov
loop
cmp
xor
mov
add
pop
inc
push
xchg
mov
jg
cmp
xchg
lds
push
mov
push
les
jbe
ftst
push
in
xchg
je
push
xor
ljmp
jo
adc
jo
push
sahf
cmp
mov
mov
jp
and
outsb
scas
lock
dec
dec
pushfw
aad
cmp
imul
jbe
inc
sbb
leave
mov
push
xchg
rorb
out
mov
pop
adc
scas
xchg
xchg
cmp
movsb
roll
shrl
dec
test
mov
sbb
pushf
mov
inc
or
aaa
fimull
cs
push
loopne
push
into
inc
jbe
jmp
bound
mov
push
sub
test
push
xchg
inc
gs
pop
das
and
xchg
pop
mov
mov
pushf
add
pop
jno
test
xchg
add
xchg
add
hlt
sbb
dec
cmp
mov
xchg
sub
mov
xor
int3
xchg
sbb
mov
int
into
shrb
xor
and
loop
adc
push
lret
pop
mov
xchg
xchg
add
pop
lods
add
pop
add
pop
mov
xchg
test
data16
adc
xchg
add
jmp
add
jp
stos
xchg
inc
cli
mov
sub
test
jnp
inc
je
adc
mov
pusha
data16
lock
data16
imull
add
mov
sbb
or
jo
jo
shrb
add
stos
fmulp
inc
enter
dec
sbb
xchg
out
into
xchg
xchg
mov
sahf
inc
sub
addl
cwtl
xor
sti
call
push
stos
or
or
cwtl
ljmp
hlt
xor
sbb
and
xchg
push
inc
add
cmp
dec
je
sub
daa
loop
sbb
hlt
adc
push
ret
fsubs
hlt
pusha
xor
push
inc
jo
and
sbb
dec
into
sub
test
sbb
into
rol
push
call
js
ficomps
aam
sub
mov
lods
dec
jb
repnz
into
add
daa
test
mov
and
js
push
mov
scas
cmp
adc
cmp
mov
push
bound
adc
sarb
mov
clc
pop
mov
mov
pop
lahf
or
jno
hlt
cmp
loopne
sarb
sbb
movsb
xlat
push
adc
dec
add
add
insb
push
mov
pop
lods
stos
and
or
je
mov
pusha
rclb
pop
xchg
nop
sahf
cmp
and
fcoml
js
or
pop
movsl
enter
cmpl
fcompl
test
push
shr
loop
mov
cmpsl
xor
push
loopne
add
lods
and
frstor
xor
sub
or
xor
bound
fs
xor
out
inc
shrb
xchg
push
push
xchg
arpl
cmc
jo
and
cmpsb
or
adc
outsb
int
repz
inc
and
xor
scas
test
push
xchg
sbb
clc
mov
test
xor
dec
scas
cwtl
sbb
cs
or
arpl
loop
inc
xchg
add
arpl
and
mov
xor
dec
sbb
cmp
cld
lret
orb
lcall
add
dec
fcomps
cmp
xor
shlb
sbb
loopne
mov
cmp
dec
mov
negb
loope
fsubrp
inc
aam
fxch
scas
loop
push
dec
adc
test
in
gs
rorl
sbb
lods
das
shlb
sbb
lcall
adc
sbb
bound
stos
mov
in
push
mov
dec
cmp
cmpsb
or
add
sbb
adc
xlat
jb
dec
cmpb
mov
insb
rolb
pop
mov
pusha
fisttps
pushf
les
les
in
leave
nop
test
push
cmpsl
xchg
lret
xchg
data16
dec
push
cmpsl
fucom
bound
mov
sbb
cmp
movsb
mov
xor
sub
je
or
imul
inc
adc
out
out
sbb
push
xor
dec
xchg
pushf
lods
pop
pusha
xor
mov
cmpsb
nop
insb
xor
adc
xchg
cmp
dec
lods
xor
xchg
rorl
add
pop
pop
aas
lahf
movsb
subb
and
dec
sub
add
pop
in
repz
pop
mov
insb
sbb
xor
call
and
test
iret
or
rcrb
aaa
inc
push
test
or
movsl
add
mov
in
dec
mov
lock
mov
jno
call
mov
add
inc
stos
shlb
pop
push
roll
mov
lock
roll
push
mov
in
inc
movsb
cmp
cmp
addb
mov
fmull
aad
push
cmp
jmp
test
mov
mov
xchg
in
pushf
mov
inc
es
fcoml
mov
push
into
inc
pop
xor
sar
inc
mov
push
movsb
lcall
and
test
movsb
push
pop
inc
xor
fs
xor
out
mov
sarb
loopne
push
jo
repnz
sbb
xor
pop
call
mov
pop
cmp
or
imul
push
dec
xor
and
int3
addl
jns
je
int3
dec
popf
movsb
test
insb
xchg
or
dec
clc
repnz
adc
pushf
nop
inc
jp
xlat
inc
jb
xchg
sbb
cmp
ljmp
xor
shlb
imul
scas
dec
in
add
je
push
or
cmp
mov
and
sahf
xor
imul
add
leave
push
mov
ret
adc
adc
inc
out
push
das
xchg
mov
jle
mov
xor
mov
cltd
mov
lods
cmp
inc
mov
cs
pop
jno
lock
jp
pusha
add
mov
xor
sub
jp
xchg
pop
pop
adc
jb
je
xchg
push
lods
or
flds
jo
fs
sub
test
or
bnd
stos
ret
sbb
es
repnz
push
sahf
jne
sbb
lods
pop
leave
loop
dec
adc
shlb
sarl
xor
inc
dec
shlb
orl
outsb
mov
inc
push
dec
rorb
and
into
mov
dec
dec
mov
xor
mov
stos
in
push
jbe
add
mov
push
pop
push
cs
mov
pushf
add
jp
mov
adc
push
sub
push
pop
cmp
fs
xorb
fldenv
sub
xchg
orb
loop
dec
bound
test
cltd
lods
pushf
outsb
cmp
pushf
gs
arpl
int3
mov
xor
xchg
or
jecxz
es
and
dec
bound
inc
pop
faddl
inc
out
or
leave
inc
andb
fdivl
sbb
dec
mov
nop
lock
pushf
xor
lret
call
in
mov
test
into
aam
or
xchg
inc
dec
or
xor
insb
jno
push
daa
pusha
clc
push
cmp
dec
shrb
dec
cmp
or
adc
cmp
push
mov
add
cli
je
xchg
xor
mov
mov
nop
jo
push
inc
xor
mov
popf
xchg
les
jo
movsb
clc
mov
pushf
add
bound
and
sub
sti
mov
fsubr
mov
ret
sbb
fcompl
inc
sbb
dec
and
xchg
pop
nop
and
push
popa
xchg
push
push
or
in
push
jbe
add
fidivl
faddp
or
mov
outsb
xor
arpl
or
mov
call
ficoml
sbb
popf
add
in
mov
xchg
fiadds
clc
or
add
stos
dec
jmp
mov
adc
mov
add
push
mov
pop
clc
mov
dec
add
iret
mov
cmpsb
jp
pusha
fcoms
add
sbb
sahf
clc
call
aad
fnstcw
movsb
outsb
cwtl
or
mov
push
cmc
add
rorb
mov
adc
or
ret
roll
fidivl
xchg
sbb
out
jg
dec
rcrb
pop
dec
mov
cltd
arpl
ret
adc
lahf
mov
cmc
iret
outsb
jb
and
push
enter
int3
jb
and
dec
cmp
mov
dec
fimuls
cmp
ss
outsl
dec
outsl
push
jl
xchg
pop
leave
in
out
adc
dec
or
mov
popf
lods
add
pop
repnz
or
ja
xor
lcall
add
icebp
les
or
lods
movsl
push
or
fisubrl
mov
popf
int3
inc
bound
insb
in
push
add
sbb
sbb
adc
lret
or
sbb
lock
inc
and
xorb
push
jbe
or
push
mov
ljmp
das
or
movsb
jo
out
pop
xchg
push
inc
push
ljmp
in
mov
aad
inc
lods
rcr
pusha
int3
push
loopne
sub
mov
lret
inc
mov
dec
inc
adc
mov
std
cmpsb
clc
adcl
and
pop
adc
mov
and
es
xchg
sbb
mov
loope
add
rorb
fldl
mov
int3
push
into
mov
test
ljmp
and
xchg
dec
test
or
or
cmp
rorb
insb
mov
add
pusha
sub
pushf
sbb
xor
jns
mov
rorb
jbe
push
inc
or
es
movsl
orl
popa
add
jl
dec
ss
addl
sbb
imul
cmp
sahf
inc
mov
lock
xor
shrl
lret
jecxz
jle
sahf
sbb
dec
sahf
xor
outsl
shll
aam
jne
mov
xor
pusha
inc
sbb
cmp
push
and
xor
stos
shrb
sbb
pop
lret
mov
loopne
jmp
mov
add
and
test
add
lods
daa
mov
pusha
fstpt
cli
insb
inc
pop
mov
mov
cmp
pop
mov
and
orb
movb
push
add
cmp
add
cmp
shlb
sub
mov
fdivr
and
xor
lret
add
add
and
rclb
outsb
xchg
dec
arpl
xchg
cwtl
out
mov
jnp
push
add
inc
mov
jno
xchg
mov
dec
les
test
pop
inc
xlat
arpl
stos
outsl
fcomps
sbbb
push
outsb
mov
xchg
mov
faddl
adc
rcrl
cli
xor
cmc
lcall
lret
enter
scas
and
mov
push
divl
ja
xchg
sub
cmp
nop
cltd
pusha
loop
test
cmp
aam
inc
dec
xor
lock
sbb
sbb
imul
mov
inc
sbb
mov
mov
cmc
xor
adc
cmpsb
hlt
clc
lcall
mov
aam
fiadds
cwtl
add
jecxz
push
sub
mull
mov
jl
repnz
push
jmp
rol
insb
cmp
add
add
mov
push
leave
inc
jg
mov
xor
cmpsl
xchg
test
ljmp
mov
push
and
push
loop
movsb
cmp
inc
in
pop
sub
add
sub
push
push
and
loopne
out
int3
movsb
cmp
insb
jo
push
imul
jo
adc
hlt
push
popa
imul
jns
addb
adc
repnz
movsb
mov
outsb
cld
fsts
mov
xchg
push
pop
cli
in
and
test
insb
ljmp
arpl
pop
inc
es
hlt
sbb
aam
nop
imulb
cmp
daa
pop
sub
and
aam
xor
sbb
cmp
sub
cmp
push
loop
cs
test
loope
loop
mov
xchg
push
sbb
or
test
or
inc
gs
ret
mov
and
in
mov
ss
mov
push
addr16
xor
movsl
add
arpl
mov
inc
test
cwtl
pusha
dec
lret
es
or
das
lods
es
adc
pop
xchg
mov
sub
add
xchg
cmpsb
push
sub
ljmp
les
mov
adc
mov
cmp
arpl
ror
dec
push
pushf
fs
push
lcall
fiaddl
lods
xchg
pusha
and
or
mov
rolw
ljmp
mov
push
inc
inc
clc
pusha
fldcw
mov
mov
or
imul
xor
jle
or
js
jno
cwtl
mov
outsb
push
and
mov
xor
push
push
in
ss
pushf
mov
add
and
xor
ret
cmp
fs
xor
call
mov
adc
js
adc
mov
mov
inc
mov
inc
mov
hlt
andb
cmp
test
push
scas
fsubrp
and
out
sub
and
sahf
xchg
loope
jp
xchg
add
sub
sbb
adc
sbb
outsl
ljmp
dec
enter
ret
ljmp
push
sub
adc
add
cmp
in
imul
xchg
push
lods
test
or
lcall
inc
pop
sbb
lret
test
arpl
orb
cmp
fs
mov
test
cmpsl
loop
insb
lea
pop
lret
enter
test
ljmp
adc
out
hlt
aam
enter
mov
xchg
add
bnd
imul
pop
push
add
in
cli
mov
jl
sub
iret
mov
inc
add
sbb
nop
pop
or
iret
mov
jns
or
aas
lds
inc
lock
repz
mov
inc
iret
or
jbe
fadd
and
out
or
lahf
in
lods
sub
js
add
movb
dec
dec
pusha
xor
nop
fsubr
push
and
lret
sbb
sub
or
push
mov
inc
inc
in
das
pop
insb
or
mull
or
scas
xor
mov
dec
xchg
aaa
adc
inc
add
xchg
sbb
and
cwtl
data16
lock
ljmp
inc
aaa
pop
pop
xor
xchg
cli
daa
outsl
orl
jl
xchg
addb
xor
add
sbb
call
mov
or
mov
adc
jne
xor
or
mov
adc
nop
aas
loopne
inc
mov
xchg
imul
or
dec
pop
rcrb
popf
add
add
insb
inc
or
je
sahf
dec
cmp
call
jp
je
push
in
dec
adc
fidivrl
jg
inc
mov
mov
cmp
push
cmp
push
lds
pop
cmp
pushf
mov
mov
cmp
inc
pusha
dec
cwtl
insb
xor
addr16
xlat
addr16
and
and
shlb
lods
jo
outsb
mov
inc
repnz
fsubs
incb
lock
outsb
pusha
dec
jno
loope
dec
add
dec
scas
pop
pop
cltd
mov
sbb
and
and
adc
filds
dec
cmpsl
push
cli
int3
xchg
push
repnz
cs
in
shll
loopne
pop
jge
jnp
sbb
stos
iret
es
sub
cwtl
lods
inc
dec
loop
jb
lock
rorb
dec
cmp
sub
jmp
clc
test
sbb
je
and
nop
push
cmpsb
clc
rol
inc
sub
js
lods
sub
push
sub
dec
cld
cmp
fcompl
adc
sahf
aam
in
and
add
mov
pop
movsb
pusha
xchg
js
inc
jb
xor
add
in
fadds
js
pop
mov
or
push
dec
dec
sarb
add
jb
or
xor
outsb
mov
rcr
push
push
ret
cmp
into
clc
cs
jbe
int3
mov
out
and
xor
fimuls
xchg
add
inc
xor
rolb
sbb
fs
andl
subb
and
add
adc
add
add
popa
push
push
xchg
sub
fnsave
sub
xchg
mov
dec
loop
mov
jno
gs
lcall
addb
adc
and
addr16
sbb
roll
or
mov
cwtl
mov
loope
data16
or
sub
test
inc
es
inc
sbb
cmp
mov
and
mov
in
divb
push
stos
insb
sbb
loope
adc
adc
mov
daa
dec
add
add
mov
into
xor
test
xor
test
jmp
ds
adc
or
mov
sub
shrb
mov
pop
mov
add
nop
addr16
inc
sbb
orl
or
sbb
sub
adc
fmuls
bound
add
or
movsl
in
xchg
divb
push
pop
gs
xor
xlat
outsb
xchg
push
xchg
into
into
orb
adc
shl
sub
xor
mov
and
lds
mov
or
jle
rolb
sub
adc
mov
sub
je
in
mov
adc
mov
lret
lea
icebp
clc
ljmp
sub
xor
push
imul
dec
lret
sub
cwtl
mov
jecxz
xchg
push
andb
jbe
pop
ljmp
xchg
sbb
sahf
pop
xor
push
push
cwtl
xchg
sbb
ja
mov
enter
scas
adc
pop
sbb
xor
repnz
inc
ret
push
cli
xor
sub
xor
je
push
cs
add
imul
cli
and
subb
pop
xchg
aam
and
sbb
mov
pop
lea
notb
mov
xchg
pop
adcl
or
xorb
daa
jecxz,pt
adc
fsubl
sbb
mov
inc
arpl
ja
call
enter
and
mov
faddl
sbb
je
or
and
ret
dec
clc
dec
adc
xor
vmptrst
and
call
xor
sbb
js
pop
add
sbb
cli
mov
mov
xchg
mov
outsl
dec
mov
nop
push
push
cmp
jb
jo
mov
inc
jmp
scas
mov
loop
mov
sub
fcmovb
bound
pop
inc
mov
mov
or
xor
or
or
test
lods
sub
sub
loopne
push
pusha
and
lret
xor
fldl
incb
adc
and
enter
jb
add
cmp
mulb
fs
pop
pusha
cmpsl
andb
xchg
fsub
inc
add
add
cmp
cmp
adc
fisttpll
cmpsb
mov
mov
push
in
push
mov
loope
xacquire
lret
mov
and
gs
dec
das
sti
jb
push
add
loope
mov
addb
adc
cmpl
and
dec
pop
pop
daa
inc
shrb
fcoml
addl
mov
push
or
lret
adc
dec
and
loope
ficoms
jp
out
xorb
rorb
into
shlb
fs
adc
in
fsubrp
test
pushf
ret
pop
push
pop
je
ds
inc
lock
lret
or
dec
add
roll
ds
and
fld
enter
pop
push
inc
lods
mov
xor
dec
call
sbb
inc
fisubl
sbb
test
ret
cmp
sbb
jp
mov
push
fs
arpl
cmp
std
sub
mov
or
inc
inc
imul
test
inc
fadds
xor
pusha
repz
adc
pop
imul
ja
pop
push
cwtl
or
push
push
or
sbb
pushf
dec
or
lcall
sbb
cmp
hlt
sbb
ljmp
fcompl
lock
adc
xchg
push
pop
insb
cld
jg
lret
dec
cs
lods
pop
gs
add
or
ffreep
adc
jo
jmp
faddl
xchg
push
xor
sahf
jp
or
popf
lea
dec
xor
mov
push
subb
jmp
jl
insb
lea
mov
pop
lea
ljmp
sbb
or
sbb
call
xchg
int3
push
rcrb
testb
add
inc
fidivl
cmp
mov
repnz
xchg
ficomps
lret
mov
add
and
jns
fwait
int3
mov
sbbl
sbb
fildl
mov
js
outsl
xor
loop
fs
dec
lock
sbb
dec
dec
movsb
addr16
sub
mov
lods
or
lcall
enter
pushf
and
inc
out
in
add
mov
inc
mov
data16
movsb
cltd
hlt
push
jle
xchg
pop
or
test
orb
mov
cmp
xchg
and
or
cmp
or
add
pushf
push
adc
lock
xchg
xlat
imul
dec
xchg
add
repnz
xor
cmpsb
dec
inc
sbb
mov
das
jbe
aam
xchg
cld
adc
mov
fistpl
sbb
inc
jg
cmp
mov
sbb
lret
and
fdivl
cmp
adc
add
js
push
mov
pop
cmp
inc
aaa
add
xor
sbb
adc
into
popf
add
loop
pop
fnstcw
cmc
and
sub
mov
xor
dec
js
push
imul
loope
mov
add
add
insb
inc
sbb
adcl
push
and
je
arpl
jb
nop
xor
xor
and
push
xor
lea
push
les
inc
roll
addb
jnp
lcall
in
push
data16
sub
test
nop
es
push
jb
into
sbb
test
push
mov
adc
xchg
call
fsubs
ret
lods
es
mov
pop
hlt
pop
pavgw
ret
xchg
cmp
out
sub
jno
and
xor
adc
popa
rolb
mov
aam
loop
mov
rolb
push
adc
mov
cwtl
lods
and
push
dec
mov
repz
mov
loop
rorl
adc
sbb
movsb
test
pop
dec
js
pop
xchg
push
je
sbb
inc
mov
push
pop
gs
xchg
jne
adc
inc
dec
mov
mov
lret
fsubl
adc
popa
adc
test
or
je
dec
popa
sub
sub
pop
sbb
sbb
sbb
mov
lret
fwait
xchg
xchg
adc
lcall
sbb
aad
mov
ret
jmp
test
dec
aad
mov
xor
hlt
xchg
jo
fstps
mov
or
bound
and
lcall
enter
sarb
xor
loopne
cli
mov
repnz
or
mov
dec
cmp
or
sahf
mov
jb
ljmp
inc
cmp
cmp
push
ss
xor
mov
sbb
fcomps
lret
pop
lods
pushf
dec
add
lods
ret
or
push
daa
lret
and
sub
pusha
lret
sbb
insb
scas
cmp
pop
mov
mov
push
push
adc
xchg
test
loope
cmp
movsb
shl
push
mov
push
cmpb
dec
add
nop
cltd
je
les
pop
xchg
fs
inc
push
pusha
cmpl
pop
pusha
arpl
xchg
in
mov
push
pop
lret
cwtl
add
add
ret
cwtl
xchg
rcrl
call
rcll
daa
adc
mov
inc
or
ret
cmp
cmp
ret
xchg
xor
mov
push
mov
nop
lods
rorb
cmp
je
sbb
aad
outsb
sub
adc
bound
gs
mov
sahf
adc
xor
pop
loope
xchg
mov
je
jo
ret
outsb
movsl
arpl
dec
bound
mov
inc
sbb
mov
fbstp
add
jb
mov
dec
loopne
rcr
add
fdivl
in
jmp
mov
mov
xchg
inc
and
inc
daa
arpl
mov
rcrb
insl
push
jp
push
ss
push
je
shr
add
out
xchg
sub
sarb
loopne
pusha
cmp
add
and
pop
or
inc
mov
ror
sahf
dec
xchg
or
mov
dec
add
loop
inc
lcall
mov
enter
lods
xor
pop
pop
mov
lea
push
sub
fcompl
sbb
lock
cli
pop
dec
loopne
xchg
mov
push
dec
dec
outsb
loop
pop
cmpsb
mov
inc
jl
adc
rorb
add
rolb
insl
mov
pop
adc
dec
sbb
xchg
sbb
jle
adc
xor
sub
pushf
shrl
test
xor
sub
fs
outsb
lret
loopne
jp
and
int3
mov
jne
enter
addr16
test
subb
push
mov
imul
add
xor
adcb
adc
add
cmp
push
sbb
mov
push
rol
fcoml
rcrb
mov
cmp
inc
notb
sub
sbb
test
or
lret
aam
cmp
ret
sbb
push
js
in
sbb
clc
call
ss
hlt
and
shr
rcr
and
mov
sbb
hlt
xlat
add
add
push
ror
fnstsw
sub
pop
inc
or
dec
aas
mov
movsb
pushl
adc
and
jno
inc
push
add
add
jg
mov
push
lds
sub
outsb
adc
and
dec
aad
adc
and
icebp
sbb
cmpsl
rclb
arpl
lock
xchg
or
sbb
ror
mov
add
notb
data16
in
imul
cmp
mov
lock
gs
movsb
add
cmc
and
pop
pushf
and
or
test
daa
inc
js
shrb
and
sub
inc
mov
jo
cmp
adcb
or
sub
inc
loope
adc
shl
js
dec
mov
pop
out
and
push
mov
xchg
aam
ret
xor
adc
rcrb
mov
test
loopne
orl
mov
out
dec
sbb
mov
pusha
add
gs
add
pusha
mov
jecxz
jp
pop
and
mov
mov
or
xchg
fldl
addr16
fsubs
mov
sbb
mov
and
sbb
sbb
add
push
jbe
adc
fisubrs
mov
push
jb
mov
or
or
test
or
push
popf
dec
pop
pop
jl
mov
adc
xchg
jo
push
fdivrs
ret
jge
outsb
fstpt
inc
ret
fnstcw
inc
dec
faddp
mov
andb
sahf
add
jmp
les
cmp
cmpl
and
add
dec
stos
pop
sub
push
jmp
jns
xchg
mov
mov
loopne
out
inc
dec
add
cwtl
clc
loop
sbb
inc
sub
add
and
jmp
shlb
mov
push
jecxz
mov
cmp
es
outsb
lods
add
jge
bound
pop
scas
ret
enter
es
call
fmull
mov
ss
test
sub
pop
sbb
and
popf
fcomps
rcr
movsb
push
lods
xchg
xchg
xor
push
ljmp
jno
mov
mov
fdivs
dec
mov
push
fdivrs
test
sub
mov
ret
jno
lret
adcb
xor
lret
xchg
xchg
xchg
xchg
push
mov
fcmove
xchg
xchg
xchg
test
push
xor
loopne
aam
or
add
enter
ret
add
test
inc
cmpb
mov
inc
daa
xor
or
xchg
fcompl
insl
lea
stos
notb
mov
cmpsb
lods
loope
bound
rolb
mov
sbb
pop
sarb
sbb
mov
in
shrb
add
add
push
pop
pusha
icebp
push
popf
sub
xchg
sbb
enter
dec
outsb
mov
or
jmp
cli
xchg
sub
test
add
into
lods
jmp
inc
loopne
aas
aas
push
rcrl
fmuls
add
xchg
mov
xlat
mov
addb
and
mov
imul
loop
fidivrs
adc
mov
push
or
lahf
xor
js
sbb
loop
push
or
adc
insb
loop
shr
popa
sub
les
mov
lea
cli
orb
and
mov
cmc
xor
mov
sbb
fs
adc
lods
inc
inc
or
lock
cmp
cmp
aaa
rcl
in
bound
cs
rclb
das
dec
pop
dec
call
rorb
in
ret
cmp
sbb
jle
lret
js
jecxz
imul
pop
add
mov
ret
push
fisubrs
loop
imul
inc
mov
or
pusha
add
push
lret
mov
pusha
sbb
mov
pop
icebp
mov
sbb
js
mov
cmpsb
adc
jne
push
pop
or
sbb
or
movsb
xchg
mov
mov
jo
stos
jne
sbb
or
dec
test
sub
sub
imul
dec
pop
test
stos
and
xchg
jno
idivb
push
adc
popl
xchg
and
xor
xor
fstpt
jp
fcoml
jno
xor
sub
cmpl
lods
push
shlb
sub
icebp
sahf
push
sub
add
xor
inc
cmp
rcrl
jb
lret
ret
cli
xor
mov
movsb
push
add
jns
jb
shll
inc
sbb
pop
push
push
hlt
mov
scas
jmp
loope
cmpsb
imulb
sub
pop
mov
sub
cmp
rclb
into
and
add
cwtl
inc
add
fs
sbb
push
xchg
adcl
arpl
xchg
fildl
pop
dec
push
push
in
ljmp
mov
clc
je
icebp
xor
js
and
adc
sub
scas
xor
cmovl
sbbb
xchg
sbb
xchg
call
and
fldcw
in
data16
fst
rcrb
adc
mov
inc
js
mov
xor
jo
loopne
shr
sub
dec
push
shlb
sbb
in
adcl
adc
mov
shr
xor
push
inc
dec
leave
push
mov
sarb
fldenv
push
mov
xor
sbbb
arpl
push
push
out
lods
add
pop
sahf
jne
in
mov
jle
jp
push
arpl
inc
sub
xchg
in
xor
aam
scas
xchg
cmpsl
pusha
dec
punpckhdq
mov
mov
inc
jg
mov
pop
jp
xor
dec
jp
insb
bound
dec
cmp
sub
jo
xor
add
outsb
cmp
push
adc
andl
adc
ret
add
add
mov
nop
pushf
inc
bound
dec
roll
dec
dec
dec
ljmp
xchg
xchg
shl
mov
std
les
and
ja
testl
jo
repz
or
dec
pop
test
mov
or
lret
adc
sahf
test
mov
cwtl
inc
push
or
mov
loope
add
bound
loopne
es
add
sbb
loop
dec
and
xor
push
fsubrl
push
es
dec
mov
ret
aad
push
push
fwait
jecxz
pop
inc
mov
cmpsb
test
pusha
out
push
dec
sbb
data16
int3
push
mov
inc
or
cmp
or
jbe
mov
enter
cmp
mov
pop
adcb
call
xchg
lods
pop
or
js
pop
lret
or
loopne
add
ret
rcrb
popa
add
adc
loop
ds
sub
xor
in
loopne
sbb
inc
cmpsb
stos
xor
push
movsb
jl
xchg
mov
sbb
ds
or
mov
andb
cmp
xor
push
adc
stos
pusha
lock
push
pop
xchg
dec
ss
adc
clc
mov
sbb
push
rorb
sbb
mov
mov
outsb
insl
mov
jp
sbb
xchg
cmp
pop
sbb
xor
and
je
out
mov
mov
adc
cmp
add
pop
push
xchg
add
sub
inc
xchg
lea
mov
push
mov
loop
sbb
sbbl
push
mov
testb
mov
insl
adc
xor
mov
les
pop
add
cli
jl
lret
jo
inc
xor
ljmp
sbb
mov
lret
xor
sbb
inc
sbb
clc
adc
or
mov
je
inc
mov
add
int3
or
aaa
enter
loope
out
and
cmpsb
mov
jecxz
push
insb
mov
mov
das
popa
or
mov
jp
cltd
xor
dec
pop
xchg
or
add
pop
and
xchg
cmp
sbbl
mov
mov
inc
ss
ljmp
cli
push
push
jo
push
xor
sbb
adc
sbb
dec
je
addl
js
or
cwtl
inc
dec
cltd
addl
dec
push
pushf
icebp
xor
ljmp
or
js
cmp
add
xor
sahf
enter
call
pop
les
cmp
mov
push
push
stos
pop
push
or
ret
cmp
outsl
add
inc
divb
ret
push
lock
add
or
jp
sub
and
add
mov
dec
lcall
push
cmp
divb
jo
and
pop
xorb
push
dec
cmpsb
cwtl
push
incl
ljmp
mov
clc
jo
and
sub
push
adc
addb
xor
xor
and
ljmp
xchg
sub
pop
and
dec
xchg
jle
repz
pusha
mov
and
dec
mov
xchg
aam
or
loopne
cmpb
mov
xchg
je
add
popa
rcrl
int3
or
fisttpl
jge
ljmp
clc
rcl
or
and
xchg
mov
push
add
test
push
sbb
pop
aas
and
inc
or
push
sub
pop
xchg
in
cmp
adc
sbb
cld
outsb
xchg
lock
enter
push
inc
or
inc
aad
jnp
cmc
or
rcrb
xor
ret
jmp
roll
xor
fcomp
push
pop
push
or
lock
movsl
jl
xchg
out
sub
dec
pusha
add
sub
dec
mov
in
rcll
test
hlt
add
mov
and
addl
jmp
cmp
or
not
xor
jo
push
imul
lds
sub
or
and
daa
mov
inc
inc
fcomip
rol
aam
pop
stos
ficoms
shl
cltd
loopne
sbb
push
hlt
lods
mov
loopne
mov
adc
jno
lret
and
xchg
pop
sub
xor
and
fisttpl
pop
or
and
and
or
xchg
adc
sbb
sbb
imul
xchg
xchg
pop
jne
or
mov
outsl
or
adc
mov
int3
sub
ljmp
enter
sub
arpl
and
shlb
inc
and
jl
js
xchg
sbb
js
mov
iret
mov
push
cmpsl
scas
or
push
sarb
adc
xor
subb
mov
xchg
dec
inc
in
add
jno
fisubrs
sbb
sahf
adc
and
loope
mov
pushf
enter
rcrl
inc
bound
sub
in
loope
push
lcall
sbb
mov
mov
ss
mov
clc
add
jo
enter
sahf
or
cmpsb
dec
sbb
cwtl
dec
out
fistpll
sbb
out
pop
pop
test
popf
test
pop
push
in
dec
xchg
rclb
inc
lret
pop
add
xchg
mov
push
mov
int3
and
mov
mov
jle
push
mov
ret
sbb
push
int3
out
xchg
js
xor
pop
adc
adc
xchg
dec
sarb
inc
cmp
call
rol
dec
cmp
rcrb
mov
and
sbb
dec
sbb
daa
add
rclb
adc
cltd
jno
inc
adc
mov
pop
pushf
sbb
mov
lock
pop
pop
push
and
lods
pusha
xor
insb
addr16
nop
out
outsb
out
dec
mov
push
push
lds
add
pop
dec
add
rorl
cwtl
and
jl
or
mov
dec
lods
addl
sbb
xor
pushf
inc
add
xor
adcb
and
or
insl
add
pusha
jbe
xchg
ret
add
loopne
sub
fmull
add
xchg
leave
add
xor
loope
jb
pop
sbb
or
adc
jo
sub
push
push
dec
mov
mov
pop
inc
mov
push
xor
fsubrs
pop
lods
dec
das
sub
sbb
or
in
dec
jmp
xor
sub
dec
jo
or
pushf
or
imul
add
sbb
test
lea
lods
mov
andl
rolb
arpl
sub
xor
pop
add
dec
adc
fs
outsb
xchg
inc
loopne
lods
dec
cmp
or
mov
ljmp
fbstp
or
popa
dec
mov
mov
xchg
es
stos
out
or
ds
cmpsb
push
sbb
dec
adc
cmpb
sbb
or
inc
aam
mov
cmp
sub
or
addl
sub
andb
mov
inc
add
add
adc
xor
pushf
dec
sahf
daa
pusha
xchg
add
push
ja
es
add
push
leave
pop
ret
pop
fwait
ljmp
mov
inc
mov
test
cmp
lcall
push
cmpsl
mov
mov
push
dec
sbb
sub
rclb
sahf
ss
inc
les
pop
push
mov
loope
mov
or
test
lret
loopne
pop
xchg
or
jge
cld
test
lods
rorb
dec
mov
and
loopne
bound
mov
mov
test
cmpsb
int3
nop
push
loope
sbb
xor
inc
mov
jmp
test
pop
add
mov
shll
lods
sahf
pop
xor
inc
rolb
mov
std
add
sti
loop
push
sbbb
push
add
pop
lods
pop
pop
lea
push
out
in
fs
sahf
mov
push
push
pushf
dec
and
pop
cmpsb
inc
rcrb
in
mov
and
scas
mov
test
or
adc
shl
push
xlat
sbb
loope
cwtl
pop
or
gs
fcomp
cmp
inc
jmp
stc
jb
xor
lret
mov
and
add
sub
inc
lea
pop
cmp
notb
or
push
rclb
xorb
lcall
push
xor
incl
adc
cmp
mov
sbb
cmp
clc
add
icebp
and
fs
std
or
sbb
push
decl
pusha
xchg
push
mov
jp
fimuls
pop
sarl
sbb
xor
xchg
mov
pop
mov
jno
dec
add
cmp
leave
mov
mov
in
sub
jb
push
rclb
outsb
pop
xor
pop
mov
add
shrb
sub
jle
pop
cmp
mov
sbb
jp
cmpsb
mov
aad
fs
pusha
mov
js
lods
or
je
adc
gs
lret
shr
xchg
in
jl
in
pushf
test
adcb
hlt
adc
pop
call
ret
fbstp
cmpsl
xchg
xchg
jno
out
pop
pushf
or
jno
jno
repnz
jmp
fidivrl
adc
lret
adc
ret
pusha
sub
sbb
sbb
jmp
sbb
jnp
roll
add
dec
test
xor
pop
mov
dec
and
dec
pop
pop
xchg
je
cmp
dec
or
daa
sbb
mov
nop
sbb
pop
and
cmpsb
sbbl
push
adc
iret
movb
call
sahf
dec
mov
or
mov
and
fiadds
mov
into
xor
inc
pop
hlt
lcall
inc
jge
mov
jl
xor
push
dec
rclb
inc
push
mov
mov
js
xchg
fisubl
add
push
xchg
sub
rorb
out
add
frstor
push
xor
mov
or
adc
mov
or
lar
jp
fxch
pop
sbb
push
cwtl
out
cs
mov
insb
je
cmp
mov
imul
or
dec
add
inc
pusha
dec
inc
xlat
adc
mov
pop
loope
lea
pop
cli
inc
lock
and
nop
pop
mov
mov
cmp
push
pusha
mov
xchg
clc
jp
push
fidivs
mov
fistpll
add
aam
sub
mov
popa
cmp
aam
andb
mov
sbb
sbb
xor
add
sbbb
or
sub
movsb
cli
push
popa
and
inc
push
xchg
pop
pop
test
and
sbb
dec
inc
add
jecxz
cmp
dec
sbb
int
inc
adc
cmp
insl
loop
dec
or
inc
dec
lret
push
sbb
clc
mov
jecxz
fisubrs
addl
push
scas
insb
xor
fmull
or
hlt
ss
pop
and
subl
and
pusha
fimuls
mov
daa
adc
and
mov
in
fsubrs
ret
mov
jbe
xor
add
cmp
js
cmp
push
rolb
jp
loopne
cmc
mov
adc
adc
xchg
xchg
loopne
or
into
xchg
enter
push
imul
sub
mov
push
and
pop
mov
adc
xchg
push
dec
rorb
je
adc
fists
push
pop
xchg
xor
dec
popf
mov
inc
jle
lock
cmpsl
add
pop
fmull
cmp
mov
movb
push
or
push
mov
mov
add
push
sub
popa
sub
mov
clc
cmp
adc
lea
dec
jle
aam
or
jns
push
arpl
mov
sbb
xor
sbb
rolb
xchg
xorb
mov
sbb
push
inc
nop
stos
dec
addb
stos
cltd
push
pop
dec
xchg
xchg
lea
push
test
faddl
xchg
adc
sub
sbb
stos
mov
cld
or
mov
add
cmp
lret
je
inc
icebp
xchg
loope
jp
insb
test
cmp
pop
ss
enter
add
cmp
ds
cmp
std
mov
jmp
packuswb
push
pushf
sarb
addb
mov
lock
push
sbb
ret
xor
lock
pop
jle
mov
cmp
push
and
sahf
les
sbb
stos
push
jbe
inc
add
dec
or
lea
inc
lods
aam
rolb
sbb
xor
xchg
pop
and
pop
pop
dec
adc
xchg
xchg
and
dec
lcall
fdivr
add
fsts
sbb
andb
adc
xchg
mov
es
push
and
daa
xchg
pop
jmp
loope
inc
movsb
mov
jo
jecxz
xor
inc
jno
xchg
out
push
xor
add
into
subb
pop
xor
in
test
cmp
push
in
mov
mov
push
dec
cmp
sbb
flds
push
scas
sahf
push
aam
icebp
pop
or
push
sub
into
mov
mov
add
cmp
fdivp
rcl
xor
clc
test
pushf
in
cwtl
or
adc
jb
sbb
ret
xor
cmp
in
cli
mov
cmp
fstpl
enter
xchg
xor
cld
or
adc
inc
sbb
xor
rcr
and
cltd
push
arpl
inc
stos
or
and
cmp
push
mov
jg
or
dec
loope
sub
or
cmp
hlt
rcrb
ds
test
pop
sub
in
into
push
adcb
addb
adc
aaa
push
sbb
dec
jbe
scas
popa
aaa
nop
add
xor
test
in
addr16
mov
push
mov
cmp
popa
shlb
rolb
in
js
mov
jae
popa
mov
push
add
add
xor
shld
cmc
ret
orb
jo
rcrl
lret
rclb
addl
inc
cwtl
js
insb
insb
test
xchg
in
repnz
adc
scas
pop
sbbl
cmp
lods
inc
lock
jbe
xlat
jecxz
fnsave
jo
movsb
dec
loopne
push
pusha
add
loope
or
leave
push
aam
xchg
test
cmp
cmp
lcall
add
fcmovbe
test
lods
sbb
add
dec
lods
mov
push
or
movsb
or
mov
mov
movsl
xchg
cmp
shl
inc
mov
cmc
push
jg
outsl
pop
pushf
mov
inc
push
push
call
loop
or
push
stos
add
xor
les
mov
call
xchg
outsl
repnz
lahf
jle
or
add
or
sub
popa
shlb
mov
shr
test
adc
push
test
rcrb
repnz
test
aam
jo
push
aam
cld
jb
mov
cmp
mov
bound
pusha
xchg
addl
sub
or
sbb
cmpl
fldcw
mov
ret
push
push
and
inc
adc
mov
pusha
add
les
fsubs
pusha
loope
xlat
hlt
and
fiadds
test
jne
sbb
mov
pushf
fmuls
roll
scas
cmp
rcrl
sahf
mov
fcoms
imul
and
adc
into
mov
fsubrs
rolb
loop
and
pop
imul
push
bound
push
push
xor
xchg
lea
rcl
or
rcll
cmp
sub
mov
shlb
sub
push
push
mov
or
pusha
hlt
aas
adc
imul
add
add
adcb
call
loopew
sbb
mov
cmpb
cmp
or
adc
pop
mov
jecxz
and
inc
adc
cld
lods
lock
pop
push
cmpsb
push
ds
adc
jno
outsb
ret
nop
push
pushf
into
test
jle
mov
jle
cmp
addl
or
push
outsl
add
jle
loopne
movb
mov
push
cmp
pop
xchg
ss
mov
xor
pop
aaa
cmpsb
sbb
loopne
push
mov
pop
into
pop
cli
adc
cmp
push
push
xchg
js
sub
cmpl
or
bound
pop
roll
in
je
push
test
mov
nop
mov
mov
clc
push
mov
add
mov
loopne
dec
cmp
inc
xor
lret
enter
adc
outsl
sbb
js
ret
out
or
addl
xchg
mov
mov
mov
or
add
pop
arpl
mov
xor
jo
adc
loopne
add
test
pop
sub
sahf
fmull
add
sbbb
lcall
dec
mov
ror
sbbb
mov
adc
sbb
clc
sbb
or
shrb
and
xor
movsl
jmp
adc
mov
fidivrl
pushf
push
bound
addb
mov
into
add
cmp
inc
or
push
jbe
mov
lcall
test
js
cltd
mov
orl
adc
mov
lock
call
add
pusha
test
rclb
dec
aaa
ljmp
mov
les
adc
mov
push
lock
add
sbb
add
cmp
enter
mov
add
outsb
nop
je
sbb
hlt
or
nop
icebp
add
ds
add
jmp
mov
mov
test
jge
mov
jns
ljmp
jbe
aaa
adc
sub
mov
negb
add
les
jnp
fwait
mov
lret
dec
push
outsb
adc
in
sbb
and
mov
addl
dec
sub
adc
sub
hlt
jns
aam
inc
sti
add
add
push
and
pop
or
outsb
fisttps
inc
mov
ss
and
sbb
les
nop
orb
xchg
cmpsl
adc
or
andl
lods
jbe
icebp
xchg
popa
lea
lock
jge
dec
xchg
sbb
test
dec
inc
push
and
iret
fistl
subl
sbb
fwait
cli
mov
mov
ds
xchg
fiadds
mov
push
and
push
push
xchg
imul
mov
mov
imul
pusha
lret
popf
or
push
mov
sub
jns
out
es
inc
pop
mov
or
sbb
fs
fsubrs
push
push
xlat
shrb
cwtl
mov
mov
int3
add
xchg
xchg
mov
xchg
pop
movb
sarl
inc
add
cld
push
ss
sbb
movsl
xor
inc
jbe
sbb
jmp
sub
jo
add
or
inc
mov
mov
lods
or
mov
lock
mov
outsb
das
adc
jno
push
cs
jl
pop
dec
test
mov
sbb
xchg
dec
sub
test
icebp
xchg
inc
push
and
sahf
mov
nop
adcb
and
mov
and
pop
mov
or
or
xor
or
es
ret
adc
mov
addb
inc
mov
lods
inc
lods
xchg
aas
xor
inc
mov
jb
clc
nop
inc
pusha
loopne
adc
and
add
jno
outsl
dec
loope
ss
addb
ja
pop
pop
scas
pushf
sub
dec
fadd
inc
pop
lret
rorb
mov
shlb
and
loopne
pop
scas
test
add
pop
push
out
and
inc
adc
jne
sahf
orb
dec
push
je
xor
xor
test
je
movsb
mov
cmpsb
and
sahf
je
xor
xorl
inc
cwtl
jno
add
test
sarb
arpl
scas
inc
xor
push
test
out
sub
es
daa
add
mov
or
jo
or
xchg
loopne
or
xor
outsl
in
xorl
inc
and
jecxz
add
mov
add
ficoml
push
sbb
adc
es
xchg
pop
mov
and
loopne
fcomps
ret
inc
ret
lahf
xchg
inc
cmc
cmp
insl
loopne
sbb
test
xchg
dec
out
and
add
enter
add
repnz
mov
stos
xchg
rorb
sbb
dec
insb
clc
adc
sbb
cmp
sbb
jb
ror
add
test
es
pusha
xor
arpl
int3
push
bound
xchg
lea
shlb
pop
out
xchg
xchg
mov
xchg
push
dec
in
sbb
pop
pop
push
adc
into
and
arpl
xchg
jnp
outsb
sbb
cs
push
add
and
test
jmp
mov
xchg
or
cmp
xlat
push
mov
or
add
inc
outsb
push
or
daa
outsl
mov
dec
mov
sbb
fs
lods
adc
lret
inc
nop
cwtl
and
jb
jb
mov
nop
ss
mov
call
sbb
fiadds
and
movsb
subb
hlt
es
and
inc
or
movsb
int3
outsl
ret
adcb
and
lcall
je
jmp
hlt
ror
jmp
fwait
pop
xchg
sbb
push
mov
flds
das
xchg
pusha
sub
add
push
pop
adc
loop
mov
jno
clc
sub
mov
sahf
rcl
jb
mov
mov
push
dec
or
inc
shll
cmp
adc
inc
inc
xchg
dec
addr16
xor
pusha
imul
pop
stos
xchg
aaa
andb
jnp
js
addr16
aam
dec
movsb
aad
rclb
ds
push
das
test
cld
cs
sbb
bound
xchg
into
ret
dec
xchg
ret
lods
movsb
fcoml
ret
inc
pop
pop
flds
xor
ds
aam
loop
loope
add
adc
or
mov
shll
jl
ret
icebp
dec
xchg
mov
pop
jbe
rcll
sub
sub
jno
test
in
mov
repnz
jg
lcall
adc
cmc
pop
push
mov
adc
jp
mov
enter
push
adc
xchg
mov
cli
or
cmovnp
mov
pop
int3
es
cmp
pushf
mov
ret
dec
push
push
fidivs
sahf
or
mov
dec
repnz
xchg
pushf
push
dec
fld
fsubrs
cmp
rorb
mov
adcb
pushf
mov
xchg
loope
mov
add
sahf
push
pusha
adc
rcl
rol
and
mov
lret
ds
jp
test
nop
sbbl
and
lods
mov
xor
jbe
test
mov
rcrb
popf
push
outsb
out
dec
sub
adc
add
out
mov
xchg
jno
sbb
enter
movl
jo
xor
cmp
push
test
imul
push
es
push
test
xor
lcall
push
jmp
sbb
mov
rolb
lret
or
push
into
enter
add
nop
mov
mov
dec
sbb
push
into
xchg
xchg
add
test
mov
pop
xor
jae
mov
movsb
pop
rcll
xchg
mov
movsl
rolb
enter
adcl
fiadds
cmpsb
xchg
cmp
hlt
mov
movsb
add
jo
add
xor
lea
jl
push
rcrb
cltd
mov
push
mov
push
cmp
sbb
or
add
push
es
push
testl
xor
xor
pushf
leave
mov
xchg
jl
inc
xor
push
and
insb
push
sbb
jp
xor
ret
sbbb
or
call
sub
into
and
movl
sbb
and
cwtl
add
push
hlt
xchg
mov
es
and
sbb
jp
xor
ret
enter
daa
or
lret
add
inc
pop
dec
std
inc
out
in
ror
push
add
call
mov
push
mov
push
loop
arpl
sahf
pushf
fxch
adc
sub
aam
pop
adc
dec
sahf
xchg
add
cmpl
adcb
cld
cmp
mov
mov
mov
test
js
movsb
or
cmp
out
lea
mov
cmp
add
js
mov
lea
lcall
add
add
loope
roll
inc
loope
mov
mov
test
xchg
leave
ljmp
dec
dec
inc
movsl
xor
adcl
xor
enter
inc
push
arpl
lods
or
sub
dec
ret
sbb
es
pop
les
orb
scas
xchg
lea
mov
adc
mov
pop
pushf
cs
mov
out
sub
dec
lods
add
add
mov
xor
in
and
inc
out
push
add
addb
loop
xchg
adc
imul
rorb
loopne
imul
lcall
movb
rorl
stos
movsb
sbbb
pop
sbb
add
xlat
add
dec
movsb
sahf
dec
popa
xor
inc
shlb
mov
dec
clc
mov
rolb
test
hlt
and
sbb
add
jnp
and
lock
push
jo
xlat
mov
mov
add
ss
mov
cmc
xchg
fstps
xor
or
out
imul
sub
xor
sbb
xor
xchg
push
data16
ds
push
shl
pop
dec
mov
adc
pushf
xor
scas
add
outsl
fsub
pop
mov
inc
lods
bound
mov
push
ret
cwtl
cmp
push
mov
adc
pop
mov
repnz
enter
jmp
pop
imul
sbb
sub
test
lahf
int3
les
call
pop
jecxz
xchg
mov
cmp
or
fs
movsl
test
les
loope
scas
push
in
push
mov
ret
mov
fcoml
lret
fcompl
nop
jl
sbb
xor
inc
sub
jl
adc
sbb
enter
into
add
pop
adc
push
loop
stos
sbb
fadds
in
int3
nop
mov
imul
inc
cmp
sbbb
bound
push
jbe
jmp
bound
cwtl
lret
cmp
test
jl
sbb
push
and
add
push
inc
orb
push
sub
sbb
mov
sub
pop
insl
cmp
xchg
mov
and
add
xor
mov
into
loopne
sub
mov
add
add
or
das
hlt
jo
in
and
add
xchg
out
rorl
rol
ja
and
data16
xor
adc
pop
pop
inc
mov
mov
cmp
insb
bound
ljmp
sbb
jl
or
out
mov
xchg
or
add
test
dec
and
add
adc
daa
add
push
leave
mov
xchg
cs
xor
pop
jge
or
and
iret
outsl
dec
lret
fwait
rorl
lahf
rcl
push
sbbb
add
addr16
mov
push
and
pop
or
and
push
add
lret
dec
xchg
inc
jmp
cmpsl
insl
jg
or
xchg
js
gs
or
enter
jl
jb
inc
movsb
in
sbb
lods
icebp
xchg
mov
push
jo
add
adcl
rcrb
ror
sbb
mov
xor
xor
add
mov
lea
or
xor
cmp
notb
addb
js
inc
inc
xor
arpl
imul
push
dec
popf
lods
dec
movsb
mov
pop
jmp
pop
jbe
cs
enter
add
lods
sub
pop
bnd
push
dec
or
ss
adc
mov
mov
test
push
es
mov
inc
dec
xor
pop
lock
call
mov
movb
repnz
or
pop
sbb
or
adc
mov
sub
cmpsl
adc
xor
arpl
sbb
sbb
mov
ret
addb
sbb
lock
fsub
or
xchg
pushf
jmp
xorb
inc
insb
mov
popf
fcomps
inc
sub
push
mov
push
aam
mov
inc
push
clc
mov
mov
push
pop
add
pop
push
movsl
and
cmp
cmp
out
xor
sbb
xor
lret
push
push
push
popa
inc
mov
add
dec
or
cs
ss
dec
loopne
add
push
cwtl
nop
orb
nop
sahf
sub
xchg
js
jp
clc
and
test
nop
or
mov
out
and
lock
or
push
rol
jl
sub
sub
pop
push
pushf
inc
sbb
xchg
jne
push
test
dec
dec
xor
test
adc
and
mov
mov
int3
or
push
faddp
fiaddl
add
push
insb
dec
inc
loope
or
or
test
xchg
pshufb
fadds
add
loop
lods
popa
sub
loop
and
lret
or
cs
mov
cmp
pop
jmp
pop
xor
add
inc
cmp
pop
mov
addr16
mov
cmp
adc
outsb
xor
and
push
cmovo
xchg
test
mov
cmp
sbb
pop
aam
xor
pop
xchg
cmpsl
aaa
mov
or
fsts
and
and
mov
and
andb
es
xor
jo
gs
jl
addl
push
xchg
or
roll
or
or
pop
cmp
mov
lods
rcr
mov
sbbb
add
sbb
gs
popf
push
inc
cmp
and
adc
dec
cmpsb
fstl
ret
sahf
insb
loopne
enter
ljmp
stc
adc
loopne
sahf
sub
in
sbb
lods
mov
fld
ret
pop
cwtl
push
push
test
shlb
pop
cmp
push
xchg
fs
push
xor
pop
mov
sbb
dec
adc
rol
jp
jle
rcl
cwtl
movsb
bound
popa
sar
fisubrl
jp
cs
mov
adc
das
aad
add
jbe
xchg
mov
sbb
pop
dec
cwtl
dec
dec
movsb
fadds
xchg
cmpb
outsl
test
add
or
and
pusha
or
mov
rcll
jl
push
enter
sub
push
into
push
dec
adc
orl
sbb
sbb
loopne
js
xchg
adc
das
shlb
pop
cmp
sub
push
push
adc
icebp
and
sahf
mov
sbb
pop
push
push
loopne
or
jge
xorb
je
pushf
add
sbb
loop
and
xchg
dec
xchg
push
pop
jo
add
shlb
mov
add
mov
lds
fistps
push
test
sbb
mov
rolb
xchg
nop
push
add
or
mov
mov
bound
add
pusha
sarb
push
ret
add
mov
sub
test
pusha
adc
gs
add
and
or
or
and
and
dec
xor
cmp
hlt
mov
xor
and
or
clc
push
pop
cmp
add
add
out
or
or
loop
xorl
xor
cmp
xchg
jno
mov
movsb
ss
or
sbb
inc
push
inc
sbb
sbb
and
sti
push
dec
xchg
xchg
fdivs
hlt
je
adc
out
xlat
nop
adc
mov
ret
or
mov
inc
outsl
jge
or
andb
pop
pop
icebp
adc
movsb
mov
daa
addl
loope
jae
or
bound
pop
ffree
andb
cmp
shrb
sahf
das
add
les
mov
push
or
jne
mov
sbbb
xor
aad
pop
ds
ret
lret
inc
or
dec
fmuls
or
inc
mov
loopne
push
xchg
dec
push
ficompl
test
pop
imul
rolb
or
add
add
leave
insb
push
sbb
ret
push
xchg
xchg
dec
sub
mov
or
out
push
sbb
shll
rolb
cmp
cltd
test
leave
sub
xor
pushf
xchg
or
lret
mov
mov
call
mov
pusha
cs
xor
mov
jecxz
mov
insb
and
out
sub
jo
insb
loopne
pushf
mov
es
clc
or
lods
mov
adc
clc
and
add
enter
es
push
test
pushf
je
xchg
cld
add
inc
and
jo
cmc
and
xor
sbb
dec
sbb
cmp
les
pop
lock
and
das
imul
mov
lock
popf
jb
pop
insb
mov
gs
push
test
mov
pushf
rcl
or
ss
jae
inc
or
or
pop
fidivl
mov
jp
adc
out
les
sbb
insl
in
movsl
ret
decb
loope
inc
testb
dec
and
fbstp
lahf
and
or
lods
aam
fstps
jne
sub
pop
inc
sub
mov
pop
les
pop
pop
xchg
cmp
nop
jp
pop
iret
add
add
inc
rcl
pop
and
or
data16
adc
adc
fstl
pop
lods
negl
dec
inc
push
adc
inc
mov
add
push
pop
xlat
add
test
mov
jge
add
sbb
negl
cli
hlt
ds
push
ss
stc
xchg
adc
loopne
inc
xchg
or
and
or
push
add
jmp
push
mov
fldcw
pop
adc
cmp
mov
ja
pop
add
ljmp
inc
das
cld
cld
ret
loop
mov
fs
inc
sub
call
sbb
inc
loopne
mov
inc
add
inc
pop
inc
out
xor
mov
lods
dec
cmp
outsb
lcall
xchg
jp
push
xorl
sbb
fwait
push
dec
sub
and
iret
mov
xchg
aaa
ret
dec
dec
ljmp
popf
and
rcl
mov
fists
or
inc
push
xor
dec
cli
dec
add
ljmp
mov
inc
and
mov
rolb
add
andl
insb
inc
dec
or
jl
push
loop
jne
loopne
adc
jbe
add
inc
scas
or
add
cmp
sbb
inc
cmp
xchg
lock
repnz
loope
jmp
xchg
dec
sub
mov
push
inc
jge
lods
mov
push
push
xchg
xchg
bnd
rcrb
aad
sbb
xor
sbb
mov
xor
sbb
fnsave
loop
movsb
and
push
les
movsl
and
in
or
jbe
xchg
mov
push
js
mov
dec
out
cmp
addr16
sbb
pusha
and
push
push
xchg
or
test
sub
and
cmpsl
pop
arpl
jb
and
cmpsb
xorb
mov
inc
pusha
or
sti
push
dec
adc
push
or
or
push
inc
stos
push
add
add
sbb
jae
dec
lret
pop
mov
in
and
cmp
es
fimuls
cli
aam
ja
jo
xor
jb
insb
nop
in
scas
pusha
push
mov
cmp
dec
push
ret
cmp
mov
jbe
sbb
mov
or
or
pusha
aam
cmp
enter
es
push
shlb
inc
call
sub
cmpb
sub
push
inc
add
loopne
pop
loop
or
or
sub
dec
test
lret
lods
aaa
test
inc
push
or
jl
inc
sbb
push
adc
and
mov
cmpsl
jbe
push
pop
jecxz
mov
push
dec
push
xchg
scas
stos
xchg
push
add
scas
adc
daa
dec
push
nop
lock
enter
push
call
insb
daa
in
fsub
jo
pop
ljmp
xchg
sub
adc
out
ljmp
jo
mov
xchg
test
push
inc
lods
pop
xor
cmp
adc
inc
or
ret
sub
xlat
into
or
mov
sbb
ds
test
pushf
pop
leave
fstps
ret
rorl
fdiv
orl
mov
add
pop
rclb
addl
pop
push
daa
fadds
mov
xor
or
sub
pop
xor
or
dec
pushf
fidivrl
nop
pop
sbb
sbb
adc
sbb
enter
cwtl
xchg
inc
add
les
jo
add
fidivrs
data16
call
mov
adc
xchg
xor
enter
xchg
loop
test
and
movsl
xor
ss
mov
pop
mov
sub
rorb
daa
sbb
lret
jp
mov
arpl
add
adc
outsb
jns
pop
push
sbb
jge
in
mov
loope
push
mov
adc
out
xlat
pop
push
pushl
das
test
dec
or
jp
dec
push
pop
ljmp
adc
push
sub
inc
xchg
dec
shlb
cld
sti
nop
mov
push
cs
bound
insl
jecxz
mov
rorb
js
cmp
fucompp
push
test
pop
adc
nop
outsl
sarb
cmpsb
jbe
arpl
or
insb
and
or
das
jle
sbb
cmp
cli
push
daa
adc
and
dec
dec
xor
push
or
dec
push
cwtl
xchg
push
xchg
int3
adc
push
icebp
inc
inc
ds
xchg
add
push
jo
pushf
cmpl
mov
mov
test
movsb
and
lock
ret
ret
aaa
lods
jb
sbb
pusha
push
insl
push
ja
pop
push
ss
cmp
or
pextrw
pushf
mov
inc
or
les
fwait
cmp
lods
mov
ds
pop
icebp
cmp
jbe
push
addl
mov
call
es
ss
and
add
adc
dec
jbe
mov
scas
dec
es
sbb
outsb
or
add
xor
rcll
mov
cmp
jp
hlt
sub
ja
hlt
xchg
or
fdivs
or
adc
cli
adc
ret
mov
mov
mov
xchg
push
mov
mov
xchg
mov
inc
clc
cwtl
dec
xor
out
rcr
fs
or
mov
or
push
lods
and
push
add
or
gs
inc
sbb
sbb
push
pusha
inc
pop
xor
je
test
xchg
rcrb
ljmp
add
cmp
mov
ror
inc
jg
cmpsb
mov
fnstcw
movsb
les
das
inc
orb
mov
arpl
loopne
pusha
ret
adcb
cmp
xlat
flds
sbb
add
lea
arpl
addr16
cmpsb
dec
dec
add
sbb
fsubrs
or
in
push
inc
add
dec
addb
dec
adc
shr
mov
into
lods
xor
and
add
or
inc
in
ret
rcl
mov
or
jno
push
fldcw
pusha
inc
rorb
into
dec
bnd
bswap
add
push
fnstsw
add
popf
sahf
ret
les
inc
test
adc
enter
ret
and
lcall
shrb
or
addb
mov
sbb
push
aam
cwtl
data16
es
xchg
add
mov
mov
cli
push
nop
adc
or
pop
leave
cmp
adc
mov
fadds
popl
mov
or
mov
ss
lods
mov
int3
jp
dec
int3
inc
sub
fsubrs
cmp
sbb
mov
mov
loopne
xchg
packuswb
push
shl
movsb
aas
push
dec
lds
inc
add
add
cmpsl
mov
scas
in
in
lods
xorb
cmp
ret
hlt
push
cmc
add
addr16
push
jmp
in
mov
insl
pop
mov
inc
ds
jle
jo
enter
push
lods
mov
mov
mov
and
jne
mov
sarb
fidivrl
loop
mov
ficoml
adc
and
lea
or
jmp
cmpb
xor
inc
adc
mov
or
ret
sub
lret
loopne
roll
push
jne
arpl
cmp
dec
fisttps
popa
sbbb
shl
loop
or
push
add
add
push
inc
je
das
pop
sub
mov
in
dec
lods
mov
lret
sub
repz
roll
addr16
sub
movsb
aam
xor
jmp
sti
sbb
jg
inc
xchg
cmc
pop
sub
inc
hlt
mov
cmc
adcl
and
add
loopne
xor
rcrl
sarl
pop
mov
add
in
loop
or
fcmovbe
lea
inc
nop
cmp
or
int
push
dec
test
insb
dec
rclb
lods
in
mov
pop
cmpsb
ss
add
sbb
mov
dec
sub
lods
in
mov
decl
repnz
imul
push
outsb
adc
add
rolb
lock
adc
inc
add
adc
in
jl
jg
lock
mov
mov
ret
pushf
jb
xor
pop
cmpsb
sub
push
test
sarb
xchg
int3
or
adc
je
adc
add
fcom
inc
and
clc
enter
adc
addr16
test
jo
jo
clc
push
and
xchg
pop
xchg
into
push
into
dec
add
movsb
jae
xchg
xchg
mov
daa
xorl
or
mov
decb
rorb
into
mov
nop
push
jp
or
movsb
mov
mov
sub
xor
pusha
or
inc
loopne
add
loopne
xchg
cmp
lods
mov
or
pop
ss
sbb
jbe
mov
push
out
and
xchg
push
arpl
cmp
jecxz
push
ret
rcrb
inc
dec
adc
xor
or
dec
js
mov
jo
lret
xor
add
inc
mov
sbb
aam
adc
popa
xchg
mov
adc
push
rcrl
mov
mov
xor
add
adc
mov
dec
or
fxtract
stos
adc
add
inc
push
mov
inc
imul
inc
call
lods
inc
sbb
mov
push
xchg
adc
fidivrs
pop
icebp
xorb
nop
mov
add
fadd
mov
and
or
mov
xchg
adc
push
push
and
pusha
loopne
rclb
add
aam
hlt
rclb
and
pusha
add
insb
or
dec
mov
mov
inc
stos
adc
add
ret
jae
dec
loopne
enter
push
cmp
push
jb
add
ja
cmp
icebp
xor
cmpsl
loopne
aam
pusha
nop
insb
xor
aaa
push
add
roll
jp
cmpsl
xorl
xor
mov
rolb
sbb
nop
mov
shlb
test
loopne
lods
jb
mov
pop
sbb
fidivrs
or
in
push
add
into
xchg
dec
cs
pushf
push
mov
and
adc
dec
arpl
push
icebp
popa
mov
mov
scas
in
addb
arpl
pop
inc
dec
enter
xor
fwait
out
mov
adc
fcoms
cmp
jmp
xor
cmp
xchg
pop
adc
sbb
into
push
add
dec
sbb
mov
push
test
data16
pop
add
mov
cld
pop
scas
call
sbb
pusha
or
push
ficoms
mov
inc
add
pushf
jmp
pusha
inc
loopne
fs
jns
dec
or
and
sahf
or
sbb
push
pop
nop
inc
sbb
xchg
sbb
mov
jb
movsb
xlat
push
js
ss
dec
add
shr
in
lcall
or
daa
test
pop
inc
mov
scas
in
xchg
fwait
or
or
scas
scas
inc
and
jo
rorl
ret
ljmp
rol
das
and
adcl
and
stc
lret
add
inc
push
stos
repnz
cli
and
add
or
or
hlt
dec
stos
mov
push
xchg
in
lret
fstl
popa
mov
rcl
xchg
mov
sub
sbb
xchg
stos
inc
popf
adc
in
sub
cli
or
and
rcrl
ret
mov
gs
nop
mov
push
sarb
and
dec
mov
cmpsb
stos
sbb
jne
hlt
and
data16
mov
and
shlb
or
jb
or
push
les
add
xor
es
jl
jmp
pushf
fiadds
in
adc
icebp
mov
mov
ret
inc
dec
mov
loope
mov
inc
xor
sbb
in
or
push
add
push
mov
pop
sarb
xchg
or
mov
leave
cmpsb
adc
cmp
popf
cld
push
or
pop
sub
jb
fcomps
loope
shlb
in
adc
sahf
shlb
xor
cli
push
push
add
mov
cmp
and
add
or
add
movsb
cmpb
aam
and
pop
bound
xchg
rorb
pushf
mov
mov
jp
rorb
test
lret
les
sti
mov
movsl
pop
daa
pushf
test
cmpsl
add
adcb
dec
dec
rorb
or
cmp
dec
jo
sbb
and
ljmp
aam
js
je
jnp
sub
loope
inc
dec
inc
cmp
mov
fs
fmull
adc
adc
lret
dec
pusha
or
adc
pop
pop
and
xor
adcb
push
jo
pop
pop
sbb
scas
fcmovu
repnz
sbb
add
enter
mov
cwtl
pop
insl
adc
lret
mov
dec
mov
push
pop
or
inc
lret
xchg
xchg
dec
xchg
hlt
push
aad
pop
add
arpl
and
hlt
xor
cmp
in
out
int3
dec
sbb
rorl
adc
jae
fsubs
orl
mov
push
push
xor
sbb
or
addb
add
loop
lock
pop
in
cld
jbe
pushf
push
xor
pop
mov
pushf
fsubs
add
inc
mov
test
rolb
and
jae
imul
xor
or
pop
sahf
lock
mov
and
sbb
shrb
xor
sbb
inc
stos
and
ljmp
sahf
nop
add
insb
movsl
mov
mov
or
movsbl
test
out
xchg
ret
sti
cwtl
xchg
or
add
ret
nop
pusha
cmp
add
sbbb
loopne
sbb
ret
xor
das
or
xchg
mov
xchg
and
ret
pop
cmpsb
ret
or
out
push
and
dec
ss
ror
pop
test
adc
push
cmp
inc
daa
add
cmp
mov
test
xchg
sahf
hlt
fsub
push
sub
mov
push
mov
jnp
push
add
pop
pop
loopne
ss
sub
adcb
xchg
daa
mov
inc
push
enter
inc
loope
add
pop
std
inc
push
arpl
pushf
and
popa
shl
arpl
pusha
jnp
aaa
pushl
sbb
sbb
pop
sub
ret
add
xor
sbb
mov
pop
in
aas
adc
and
xchg
pusha
cwtl
pop
and
mov
push
push
sarb
dec
sbb
addr16
sub
les
sbb
mov
shlb
inc
adc
sub
jno
loopne
leave
cmc
out
or
mov
xor
add
cmpsb
pop
push
inc
lcall
mov
ret
mov
inc
push
cmp
movsb
pushf
push
es
idivl
mov
bound
aam
xor
add
push
mov
ret
sbb
lods
add
rcl
push
dec
adc
les
add
mov
adc
push
icebp
js
fnstenv
cmp
cs
ret
pop
sub
or
sbb
notb
dec
cmp
lcall
loope
sbb
imul
dec
xor
jle
and
pushf
jb
stos
add
push
push
xchg
dec
rcl
loopne
dec
nop
dec
mov
mov
pusha
rolb
rcrb
cli
ret
ret
shlb
add
cli
outsb
shlb
jo
push
nop
into
inc
jo
xor
push
into
sbb
in
sub
sub
into
jp
in
pop
sub
xorl
adc
mov
or
inc
mov
in
ret
cltd
mov
mov
xor
push
rorl
inc
roll
aam
popa
icebp
mov
push
add
test
dec
mov
ljmp
pop
mov
mov
popf
cmc
sbbb
lea
push
push
daa
adc
jne
shrb
bound
test
into
test
push
rcr
rorb
xchg
mov
in
sarb
int3
and
lods
mov
or
sub
sbb
dec
adc
add
or
pushf
push
adc
movb
and
sbb
add
mov
aam
nop
xchg
pop
and
rcrb
int3
lock
or
sbb
test
scas
fdivs
add
mov
ret
sahf
lret
push
push
jecxz
sahf
xor
push
lock
aad
test
and
or
sbb
mov
add
sub
movsl
addl
lcall
repnz
add
rorb
mov
push
clc
mov
jo
xchg
cmp
andb
dec
sbb
loope
ret
call
js
adc
clc
xchg
dec
cmp
cmp
xor
mov
push
sub
insl
loopne
ret
repnz
or
jmp
jb
hlt
mov
test
aam
pop
hlt
mov
inc
sub
mov
sub
xchg
push
dec
dec
mov
inc
push
js
loope
fwait
js
mov
into
lea
loopne
lea
jle
sbb
sarb
shrl
leave
inc
jb
ja
dec
fmull
dec
imul
imul
xorl
pop
loope
add
fdivrs
movsb
add
cmp
mov
xlat
add
jo
jb
xlat
leave
sbb
push
enter
dec
cltd
add
adc
or
hlt
dec
ret
jo
or
and
jo
daa
mov
sub
int
dec
in
in
or
and
inc
in
pusha
nop
out
dec
jl
mov
rcl
aad
sub
cmp
sarb
js
f2xm1
xlat
sbb
or
rcrl
pop
sub
sbb
sbb
fucomp
shr
mov
adc
adc
movsl
scas
dec
mov
arpl
xor
xor
xchg
add
mov
loopne
add
addl
pop
adc
and
je
fists
popa
inc
loope
lock
push
push
pushf
add
add
adc
sub
lea
xor
sbb
or
add
loopne
inc
in
sub
test
mov
das
lock
lods
sbb
pop
adc
lret
jne
mov
sbb
or
add
cmp
loopne
je
leave
mov
mov
adc
faddl
enter
sbb
sbb
sbb
adc
cwtl
sti
mov
or
test
push
push
fmull
fwait
push
aas
mov
push
cltd
and
mov
sahf
jne
xchg
xchg
mov
inc
mov
hlt
or
push
lods
loopne
lds
movsb
adc
mov
test
mov
adc
push
adc
js
mov
pop
cwtl
jp
loopne
pop
mov
nop
adc
sbb
shr
popa
mov
mov
std
add
repnz
or
jmp
repz
jmp
outsb
ljmp
cli
add
push
icebp
inc
fmuls
adc
add
cs
adc
loop
add
out
adc
mov
mov
cmp
rolb
nop
and
add
add
xor
pop
mov
sbb
jo
mov
mov
loopne
jmp
pop
dec
aam
add
pusha
clc
inc
pop
add
add
pushf
fadds
das
push
mov
incl
push
mov
lock
es
imul
xor
add
pop
movsl
fdivs
dec
sti
stc
jl
add
mov
push
adc
mov
test
jb
ficoml
int
adc
cmp
push
adc
add
xor
inc
push
xor
ret
fs
xor
mov
nop
push
fdiv
xchg
push
mov
add
jg
test
repnz
cmp
clc
clc
shlb
jb
cld
incb
rorb
dec
notl
jge
aam
sbb
dec
pop
jo
or
dec
add
adc
cmc
pop
enter
mov
xor
add
mov
xchg
xchg
adcb
enter
jmp
push
xor
xchg
fcoms
inc
rcrb
das
pop
sub
fimull
aad
lods
shrl
cs
lods
jge
mov
add
mov
jno
addb
and
nop
mov
cmc
or
sbb
call
or
lea
add
sub
cmp
fcoml
jp
sbb
add
pop
dec
mov
insb
adc
std
xchg
jb
icebp
sub
jns
std
cmp
loope
rol
or
icebp
add
pop
leave
sub
data16
push
test
add
mov
faddl
and
test
push
and
dec
pop
jl
lock
adc
jmp
rorb
xor
or
test
sbb
sbb
cmp
js
rcrb
jo
or
jo
imul
adc
hlt
sbb
movups
mov
nop
add
jno
mov
mov
mov
mov
cmp
aam
rorb
cmp
ret
cs
push
xchg
add
les
mov
ss
cmpsb
xor
sahf
es
nop
cltd
push
lret
insl
adc
cmpsb
xchg
add
ljmp
fmull
les
and
or
call
orb
outsl
scas
aam
fnstsw
cmpb
shl
or
das
push
mov
sub
je
sub
or
jecxz
sbb
mov
jo
mov
inc
cwtl
lea
push
nop
sbb
repnz
adc
or
pop
dec
or
test
pop
lret
xor
repz
sub
enter
push
push
das
mov
jno
mov
push
jb,pn
addb
jo
out
call
aam
inc
xor
xorb
ficoml
sbb
xchg
int3
push
fs
and
test
out
mov
loope
xorl
xchg
adc
enter
add
pop
test
rorl
or
push
jecxz
or
fcoml
cmp
lods
sub
jmp
outsb
sbb
test
xor
fidivrs
pop
sbb
hlt
adc
rcl
and
lods
dec
pop
bound
mov
or
inc
cwtl
push
cmpsb
add
ja
roll
xorb
aam
lea
push
sahf
xor
sahf
adc
and
shll
or
test
repnz
push
or
push
mov
es
gs
nop
es
and
mov
leave
sbb
loope
xchg
icebp
lret
pop
xorb
adc
jno
cltd
js
loop
in
adc
nop
cmp
ret
loop
imul
aam
jmp
xor
cld
mov
dec
lea
jo
popf
ss
loope
popf
pop
or
cmp
and
cmp
jne
pop
mov
xor
mov
sub
or
sub
push
sbb
out
and
loope
loope
repnz
add
xchg
int3
push
or
and
xor
cwtl
mov
or
adc
cmp
cmp
add
fdivrl
push
test
jbe
lock
push
adc
jo
or
and
mov
sub
pop
mov
je
jb
out
andb
cwtl
xchg
add
lock
in
cmp
in
mov
xchg
mov
clc
test
add
cld
xchg
cmp
outsl
or
xchg
cmp
test
xchg
loopne
and
push
addr16
mov
push
fcoml
out
or
mov
push
movsb
sub
xchg
cwtl
and
cmovo
icebp
insb
ret
dec
xor
dec
mov
pop
sbb
enter
lea
popf
xor
adc
add
xchg
aam
shl
xchg
lds
fnsave
add
mov
push
addr16
mov
sub
dec
inc
and
inc
popf
popa
lret
jmp
les
loop
adc
fs
or
xchg
xchg
lea
push
push
rol
add
add
les
pop
jns
inc
xor
sbb
movsb
jo
mov
stos
jns
add
inc
add
push
jbe
jmp
pushf
dec
or
outsb
flds
dec
movsl
adc
mov
insb
lret
mov
insb
mov
shlb
mov
sub
xor
adcl
call
inc
imul
push
cmp
xor
push
outsb
dec
adc
adc
xchg
dec
pushf
pop
inc
cmovo
mov
mov
enter
movsb
and
mov
loopne
loopne
insb
test
push
out
cmp
loop
subb
push
push
or
add
jp
and
out
or
shr
or
subb
push
out
pop
dec
xchg
addb
scas
xor
rorb
inc
inc
add
cli
ret
sbb
js
cmp
bound
inc
addr16
sahf
xchg
xor
pusha
lods
mov
ljmp
bound
mov
add
dec
mov
test
inc
cmp
ds
rcr
push
xchg
pop
ja
ret
lret
jp
cmp
fs
sbb
adc
xor
cmp
sbb
popf
or
adc
lock
jmp
shlb
sub
or
or
loopne
inc
add
les
jmp
xchg
mov
loopne
sbb
cmp
cltd
dec
stos
enter
adc
ret
sbb
cltd
mov
add
rclb
out
rol
and
adc
push
or
shlb
ret
call
sbb
xchg
adc
pop
into
clc
jbe
pop
add
adc
push
push
cmp
sbb
pop
sbbb
inc
pop
xor
add
icebp
xchg
das
inc
xchg
dec
mov
cwtl
jne
sbb
dec
pop
popl
xor
leave
adc
ret
outsb
data16
sub
lods
xor
or
and
pop
outsb
mov
inc
in
hlt
add
stos
xchg
lods
ficomps
es
push
in
or
shrl
inc
xor
jno
pop
rol
mov
pop
mov
das
xor
test
mov
es
paddsb
or
jg
ljmp
fsubs
jnp
mov
and
inc
daa
or
sbb
inc
add
mov
or
lcall
je
sbb
sahf
loope
mov
in
xchg
adc
decb
icebp
inc
insb
xor
xchg
subb
out
sub
out
fmull
gs
loop
cmp
roll
gs
fs
loop
in
push
scas
add
adc
xor
or
xor
push
add
sub
outsl
add
mov
mov
pop
loop
movlps
jp
add
pop
dec
cmp
pop
fwait
pop
in
add
inc
imul
push
mulb
adc
enter
fadd
pop
add
xor
nop
pop
lret
clc
xchg
fstl
pop
dec
int3
cmp
jb
and
sbb
adc
mov
mov
mov
push
sub
loop
cmp
mov
jo
shl
inc
sbb
push
or
mov
hlt
jl
push
adc
imul
adc
xor
fdivr
hlt
push
xchg
cmpsl
sub
arpl
xchg
adc
add
int3
movsb
das
rsqrtps
add
lret
cmp
je
xchg
pop
in
mov
sub
inc
dec
xchg
pusha
dec
popf
sbb
inc
mov
mov
je
nop
not
call
rolb
or
pop
loopne
cmp
sahf
xchg
mov
sbb
jge
xchg
pop
pusha
subb
jb
sbb
test
cli
push
mov
dec
jp
pop
xor
addb
pop
sub
pop
xor
jl
sub
pop
bound
cmp
push
jecxz
decb
lods
or
int3
test
mov
xchg
mov
scas
rol
adc
les
mov
movsb
pushf
ds
xor
aam
dec
dec
xchg
test
push
push
push
fwait
jp
add
sbb
xchg
rcrb
add
xlat
mov
adc
push
ds
mov
push
ret
test
mov
push
mov
ret
fdivrl
sbb
adc
pushf
or
int3
scas
inc
lea
ret
push
fadds
pusha
popa
arpl
lock
je
popa
insl
pop
nop
push
add
mov
mov
xor
and
add
push
sub
add
dec
adcl
add
lret
hlt
add
jno
cli
aaa
cltd
loopne
adc
sbb
jo
pop
in
push
mov
insl
ljmp
into
es
jb
jo
or
or
in
or
adc
sbb
dec
loopne
adc
stos
mov
lahf
pop
pop
xchg
jp
jo
into
lret
ret
mov
adcb
jle
insb
mov
js,pn
pop
test
or
or
popf
lret
and
xchg
push
divb
bound
test
add
or
dec
pushf
inc
pushf
adc
mov
add
cmp
push
shl
ret
ret
data16
dec
mov
pusha
addl
dec
nop
pop
push
lods
popf
sub
add
test
add
andb
inc
cwtl
mov
shlb
pop
outsl
std
idivb
das
mov
mov
cli
decl
lahf
shr
or
push
lods
orb
das
fiaddl
in
jns
neg
xchg
in
in
pop
scas
add
add
mov
jo
or
imul
push
icebp
in
push
xchg
xchg
and
ja
in
adc
inc
xor
xor
add
pushf
sbb
push
aam
jp
sub
mov
outsb
jb
roll
cmp
push
jo
outsl
pop
in
pop
sbb
out
nop
xchg
mov
jecxz
call
aam
pushf
sahf
imul
rolb
add
pop
dec
cwtl
add
cmp
popa
jb
pop
je
shlb
repnz
les
sub
xor
outsb
mov
ljmp
inc
insb
movsl
daa
jne
or
inc
add
stos
push
cmp
mov
push
mov
sub
cmp
xor
sbb
loope
ss
loope
js
pop
inc
push
repz
and
sbbb
lret
sbb
mov
sub
pop
add
mov
dec
js
out
mov
scas
sahf
jecxz
add
lret
add
pop
fxch
add
pop
test
into
orb
sar
dec
mov
je
fdivr
loopne
sahf
arpl
add
or
lock
jp
push
sbb
les
clc
mov
xchg
or
or
mov
xchg
adcb
loopne
cmpsb
test
or
ljmp
or
sub
mov
lcall
imul
test
sahf
popf
xchg
subl
aam
imul
js
or
jmp
mov
fmulp
adc
xchg
in
gs
xchg
sahf
fdivr
popa
inc
mov
sbb
sbbb
mov
nop
xchg
or
loopne
loopne
aaa
insb
sahf
mov
sub
lock
sti
scas
hlt
sbb
xchg
sbb
test
sahf
rol
sbb
call
pop
jbe
mov
or
arpl
xchg
jnp
xor
mov
sub
aaa
xchg
jno
pushf
sahf
sub
inc
andl
jo
inc
and
mov
pushf
and
inc
cmp
push
adc
aam
jecxz
and
outsb
int3
jp
sub
in
push
je
fdivrs
xchg
mov
adcb
adc
test
sar
add
jg
pop
adc
fadds
dec
rcrl
mov
or
inc
jp
mov
and
mov
pop
xor
adc
or
dec
sbb
lock
sbb
jo,pt
ljmp
bswap
pop
pop
sahf
dec
or
or
mov
jmp
xor
icebp
xchg
shlb
sbb
inc
cmp
lock
mov
xchg
push
dec
and
xor
sbb
mov
stc
push
lahf
xlat
dec
sub
mov
aaa
addb
rcl
sub
xor
dec
mov
pushl
shl
adc
roll
or
in
ret
add
daa
loope
aam
xchg
inc
mov
shlb
inc
and
inc
or
mov
mov
cvtpi2ps
les
mov
into
in
adc
adc
add
cwtl
dec
add
inc
fbld
repz
shl
xchg
aam
clc
sbb
shl
xchg
and
jmp
pop
inc
in
inc
int
inc
inc
outsl
fiadds
psrlq
jno
shl
dec
jae
int3
push
ror
add
or
adc
aam
push
addb
lret
scas
in
outsl
ss
sbb
loop
add
lods
adc
nop
xor
mov
fadd
adc
aam
inc
data16
mov
push
mov
aam
xor
or
add
sbb
ja
add
enter
inc
or
add
clc
decl
adc
or
sub
cli
push
loop
fists
push
adc
pop
cmp
mov
sbbl
sbb
loopne
icebp
xor
push
stos
xchg
lret
lret
inc
sbb
ret
enter
add
xchg
xor
xor
dec
or
test
arpl
int3
out
or
sbb
hlt
mov
add
sub
or
les
and
nop
pop
inc
pop
inc
and
cltd
pop
mov
fs
push
or
ret
jo
adc
sub
push
aaa
mov
popa
dec
push
sub
dec
lret
or
sbb
dec
aad
xchg
mov
lcall
sbb
enter
add
xchg
dec
and
in
imul
or
jmp
ret
je
xchg
pop
cmp
xor
test
into
mov
and
or
pop
push
shl
fs
frndint
jl
add
mov
js
scas
ds
lock
jb
dec
jmp
leave
or
and
jne
dec
sahf
fstl
push
mov
rcrb
xchg
xor
call
mov
sub
jnp
data16
jo
and
addr16
sub
adc
in
xchg
lcall
sub
xor
xor
sbb
jmp
lret
loopne
rclb
or
xor
out
shr
add
xchg
jp
imul
mov
int
fidivrl
mov
add
and
out
movsb
inc
enter
push
into
and
sbb
or
sbb
stos
push
nop
loope
add
ret
sub
push
push
dec
add
push
jl
push
fs
or
push
inc
sbb
adc
and
aad
jl
mov
jb
sub
sub
pop
xchg
mov
xor
js
cmpsb
xchg
and
lret
jl
sarb
xor
adc
cwtl
out
push
popa
add
xchg
xor
mov
clc
cmpsl
mov
sbb
add
lea
ja
loope
loope
add
out
or
rorb
inc
or
cmp
ret
sbb
mov
daa
je
in
ret
dec
ljmp
pusha
mov
enter
popf
test
aad
pop
cmp
movsl
or
popf
mov
fcompl
subb
adc
outsb
int3
nop
sbb
call
mov
je
xor
and
outsl
mov
mov
sbb
xchg
mov
xchg
pop
lock
xor
push
loop
mov
je
ror
and
push
jp
xchg
add
ret
or
aad
push
adc
xchg
add
or
lds
lock
xchg
fsubrs
or
mov
xor
in
push
out
inc
loope
pushf
mov
mov
and
push
inc
pushfw
addr16
idivl
loope
sbbb
and
adc
push
push
and
add
inc
or
cmp
sub
subb
adcl
add
movsl
pop
or
or
jg
and
add
jo
and
pop
mov
jno
dec
inc
ret
mov
fdivs
xchg
subl
and
sbb
sub
or
jl
pop
sbb
inc
jp
dec
jecxz
mov
testb
mov
lods
pop
or
push
incb
andl
sti
add
adc
and
lods
inc
pop
cld
mov
cmpsb
xchg
mov
ret
jns
cmp
lcall
aam
leave
les
sbb
and
cmp
sahf
adc
fsubrl
cmp
cmpsb
adc
movsb
shl
mov
mov
jecxz
stos
daa
xchg
mov
ret
pop
sbbl
push
aam
scas
and
cltd
and
test
cmp
push
dec
loopne,pn
inc
cltd
mov
add
xorb
stos
lret
adc
push
ret
add
mov
enter
push
daa
cmp
stos
idivb
or
sub
sbb
nop
out
int3
mov
nop
pop
fs
or
leave
add
fcoms
loope
aad
sbb
add
stos
sub
push
mov
ljmp
punpckhwd
into
push
sub
push
xchg
aad
pusha
add
hlt
or
fisttpll
cmp
jb
inc
outsl
call
movsb
xchg
and
sub
mov
cltd
push
lcall
addb
rclb
dec
mov
rorl
in
adc
mov
push
addb
dec
pop
out
sbb
inc
fdivrp
les
ret
xor
inc
cmp
push
push
mov
mov
jbe
inc
cmp
push
xchg
push
xorb
rcrl
movl
rolb
adcb
scas
stos
lcall
or
push
decl
arpl
push
addr16
or
mov
mov
or
outsl
and
inc
or
push
les
cmp
in
cmp
loop
xor
imul
add
xorl
inc
iret
pushf
mov
sahf
stos
and
mov
enter
cmp
out
add
dec
js
sbb
or
cmp
or
xchg
sub
cmp
rcrb
and
push
inc
mov
xor
adc
or
dec
das
inc
inc
add
xchg
add
or
sbb
fbld
dec
cmp
dec
mov
loop
lret
xchg
imul
insb
leave
pop
int
ds
rcr
pop
cwtl
aam
pusha
xor
add
rcrl
sahf
enter
sbb
fcomp
and
and
push
sbb
push
loopne
imul
or
jl
adc
pop
add
cmp
push
mov
push
lret
xor
mov
aam
pop
add
js
push
rorb
add
mov
mov
xor
aam
xor
jo
movsl
push
xor
mov
rclb
rclb
adc
sbb
dec
idivb
loop
out
call
sbb
test
ss
inc
aam
xor
out
dec
ficoms
push
mov
push
lahf
es
and
add
sbb
sbb
fldenv
pop
shlb
fiaddl
fdivrl
sbb
inc
push
mov
sub
ljmp
dec
cld
nop
pop
cmc
decl
xor
lock
mov
jecxz
or
push
rol
test
test
pusha
je
push
pusha
cwtl
dec
push
sbb
ljmp
push
or
cmp
sub
lds
bound
aaa
and
and
sbb
jecxz
subl
les
dec
mov
add
push
adc
scas
sub
push
movsb
xchg
mov
add
sub
orb
mov
adc
pop
movsb
push
pusha
mov
push
inc
jp
push
mov
xor
mov
scas
dec
sub
pushf
mov
mov
cmp
ljmp
xchg
adc
es
sahf
sbb
adc
pop
sub
nop
push
daa
push
push
mov
dec
clc
lods
ret
adc
ss
shll
imul
adc
or
pop
jb
lock
mov
rcr
lcall
mov
mov
add
pushf
cmp
push
aam
sbb
cs
divb
push
xor
mov
dec
and
sub
sbbl
add
je
add
mov
push
mov
add
loop
loop
iret
push
cmp
ss
cmp
xchg
pop
add
mov
mov
addb
push
mov
lods
mov
loop
popa
imul
mov
add
xchg
jp
shrb
ja
sbb
je
xchg
jb
enter
jmp
cld
movsb
les
xor
xchg
jo
sub
cs
or
push
bound
fcom
push
cmp
ds
test
cmp
das
or
cmp
cmp
enter
xchg
push
jo
ret
or
add
in
mov
lock
push
ret
fisubrs
xor
mov
pop
lods
add
movsb
outsl
shr
fstpt
cmpsl
shrb
loopne
les
lock
mov
lret
mov
or
add
jp
flds
sbb
sbb
pusha
fadds
or
pop
scas
sub
cwtl
push
cwtl
mov
cmpsl
jo
jo
and
nop
xchg
scas
sub
sub
enter
push
fiadds
add
or
sub
ret
pushf
dec
ds
xchg
xchg
inc
sub
pushf
sahf
mov
rdtsc
xor
ja
push
into
mov
or
mov
ss
mov
or
ret
ljmp
movsl
lds
sbb
add
mov
sbb
or
pop
and
fldpi
popa
adc
fadds
mov
pop
dec
xor
aam
shlb
js
mov
and
adcb
adc
lret
push
dec
popa
test
out
lret
inc
bound
pushf
movsl
push
addl
push
cmc
mov
cmp
ffreep
add
js
je
enter
pop
add
adc
cmp
data16
or
adc
pop
or
ffree
pop
test
rol
pop
dec
push
je
loope
xor
cmp
and
aam
insb
mov
xchg
jecxz
push
add
adc
dec
clc
and
imul
adc
add
loopne
adc
sub
add
lods
sbbb
sub
add
test
hlt
mov
add
shrl
dec
jns
inc
inc
add
add
popf
dec
and
iret
and
lea
ffree
or
notl
inc
cld
xchg
adc
adc
lret
imul
inc
sub
jno
iret
imul
incl
ja
das
addr16
and
test
rorb
mov
shl
rcrb
and
adc
xor
fwait
dec
or
sbb
pop
andb
inc
mov
mov
and
inc
mov
dec
loop
mov
or
orb
ja
push
adc
sbb
mov
dec
sbb
js
mov
ljmp
lods
cmp
dec
dec
cmp
enter
and
rolb
dec
ret
pop
adc
ret
inc
xchg
mov
loop
test
rcr
enter
fsubrs
ret
pop
dec
add
sarb
xor
push
stos
add
rclb
add
aam
or
or
sub
sub
add
es
push
cs
cmp
add
les
and
ret
nop
inc
sbb
sbb
adc
mov
hlt
and
mov
pop
sbb
mov
push
fcmovb
or
pop
mov
sarl
bound
adc
mov
dec
push
push
push
push
xchg
add
push
mov
testl
sub
jnp
jle
mov
mov
cmp
pop
add
dec
adc
dec
movsb
fmull
pop
sub
mov
inc
sbb
pop
rcll
mov
pop
sbb
es
dec
xor
testb
mov
jmp
test
fisubrs
mov
aam
or
int3
dec
mov
sbb
int
mov
roll
mov
ret
les
sbb
add
cs
mov
test
jnp
out
mov
xor
jne
inc
cmp
mov
sub
add
sbb
aaa
mov
pop
jb
stos
stc
sahf
add
push
shrd
push
dec
pop
jmp
out
sub
xor
call
movsb
pop
aam
pop
or
push
ret
pop
add
dec
rolb
cmc
test
pop
lock
and
push
push
bound
rcr
push
push
inc
sbb
fstl
or
dec
mov
movsb
or
les
or
movsb
rol
sbb
jmp
sbb
rorb
jp
inc
enter
adc
ret
pop
or
dec
and
or
test
mov
xchg
xor
movsb
inc
jo
pop
sbb
aam
insl
popa
push
in
cli
test
jnp
sub
sbb
pusha
ret
add
andb
lret
jo
test
fimull
add
mov
xchg
sbb
jo
jo
xchg
sub
push
out
inc
mov
xchg
in
mov
mov
push
icebp
xchg
sbb
or
rolb
test
hlt
mov
in
mov
or
imul
jbe
xchg
sub
xor
mov
cmpsb
cmp
mov
jl
jo
daa
lret
or
loop
lcall
or
adc
je
sub
ficompl
mov
loopne
mov
rorl
push
rclb
jp
dec
mov
push
add
repz
mov
dec
xor
lock
outsb
int3
imul
js
pop
mov
mov
das
and
and
add
or
es
enter
jo
and
ret
xor
or
lods
and
lret
out
or
dec
dec
adc
sub
daa
aaa
sbb
jnp
pop
jb
inc
add
mov
push
add
push
adc
xchg
and
xor
je
push
cmp
add
and
icebp
cmpsb
jno
push
js
in
mov
dec
add
mov
lods
int3
xchg
push
cs
or
cmp
test
fistpll
or
push
jo
xor
in
sub
xorl
stos
outsb
push
mov
mov
pop
push
xchg
repnz
test
adc
fcom
fimull
or
sbb
fs
mov
xor
scas
push
mov
mov
cmp
xor
xchg
xchg
dec
and
inc
and
xchg
xchg
test
lock
xchg
lock
daa
mov
sbb
or
cli
in
dec
inc
mov
xor
hlt
stos
xor
popa
jl
mov
mov
inc
bound
inc
add
or
add
adcb
inc
jp
adcb
icebp
je
or
adc
sti
call
cli
data16
shlb
dec
lods
mov
inc
lcall
cmp
adc
mov
adc
lret
jb
arpl
repnz
lcall
dec
mov
adc
popa
imul
xchg
mov
or
scas
dec
ror
lods
cmpsl
mov
push
cmp
idivl
or
dec
arpl
and
std
int3
scas
rcrl
fcom
pusha
fs
jp
nop
adcb
int3
xor
sarb
ret
pusha
mov
add
ss
dec
loopne
mov
divl
inc
cmp
data16
dec
inc
dec
adcb
nop
and
push
or
rclb
and
adc
mov
rorb
jb
mov
mov
push
hlt
xor
fdivl
orb
inc
or
jno
leave
fidivrs
cmp
adc
mov
sbb
jp
lods
outsl
loope
movsl
or
dec
cmp
pop
push
jo
mov
ret
insb
lods
sbb
xchg
mov
bound
es
dec
push
orl
mov
or
push
scas
andl
inc
lcall
add
repnz
das
std
mov
mov
sbbb
or
or
mov
pusha
subl
cwtl
sbb
cmpsl
pop
popa
out
mov
outsb
jg
xchg
jnp
mov
subb
popl
push
lahf
xchg
mov
push
xor
lds
mov
loope
add
les
cmpsb
dec
test
in
sbb
popf
add
lret
mov
imul
sub
inc
lret
mov
sub
xchg
add
mov
movsb
pop
pusha
add
or
mov
pop
xor
mov
shrb
int3
ljmp
bnd
cmpsl
test
call
divl
pushf
push
int3
test
and
and
xor
dec
pop
cmp
mulb
xchg
add
sbb
sbb
lcall
nop
sub
or
push
jbe
in
sub
jecxz
jo
mov
cmpsl
ret
paddd
push
aam
xor
gs
pop
andb
jl
pop
mov
push
rol
jo
out
ret
jp
rorl
xchg
add
pop
inc
lahf
pop
ret
test
aam
cmp
into
out
pop
hlt
stos
push
xor
sbb
push
xchg
test
cmpb
mov
mov
ret
push
mov
popf
into
stos
outsb
cmp
lods
cmc
sbb
xor
xor
mov
sbb
inc
jb
cmp
sbb
mov
icebp
in
adc
sub
adc
pushf
loopne
sbb
push
inc
das
roll
xchg
movsb
jo
adc
in
or
cld
nop
dec
shlb
push
pop
sub
jne
insb
lods
aad
sub
sub
inc
insl
cltd
sbb
hlt
bound
adc
imul
push
xchg
and
add
dec
jb
mov
sbb
ds
shlb
daa
das
inc
and
sbb
ret
pusha
fwait
loop
mov
pop
sbb
test
add
add
pop
ret
add
imul
rcrb
into
jnp
pop
cmp
ret
subb
cmp
mov
jecxz
dec
and
mov
or
into
sahf
lret
xchg
repz
test
pop
sub
cmp
mov
shrb
push
or
js
je
call
add
pop
push
adc
bound
xchg
push
fsubl
stos
adc
cld
xor
inc
pop
add
or
adc
push
loopne
sub
sbb
mov
lcall
sbb
mov
jnp
rcll
pop
jl
cld
or
aaa
je
dec
push
fdivs
pop
and
daa
xchg
adc
mov
xlat
or
mov
xchg
mov
stos
stos
adc
xor
cmp
lcall
and
cs
cmp
cmp
xorb
dec
xchg
or
ss
or
cs
inc
jecxz
lret
rcrb
jecxz
bnd
lods
decb
push
pop
scas
or
fnstsw
jmp
and
icebp
pop
push
nop
daa
hlt
adc
decl
movsb
mov
test
jle
add
faddl
test
inc
or
push
daa
ret
out
ss
loope
adc
lea
mov
dec
notrack
jno
ss
cmp
dec
jecxz
xlat
inc
and
mov
ljmp
lret
lods
xor
or
dec
movb
es
ret
sub
adc
adc
cmp
ret
inc
inc
lods
insl
pop
jmp
push
pushf
pop
push
push
or
adc
cmp
add
adc
sbb
push
xchg
mov
orb
test
push
les
lret
pop
xchg
add
adc
sub
clc
scas
cmpsb
rorl
call
out
sahf
mov
lret
arpl
sahf
mov
popa
cmp
xor
mov
test
ss
fadd
push
cmp
inc
test
dec
popf
mov
ret
loope
ss
cmp
mov
shll
inc
addr16
ret
roll
inc
cli
repnz
lock
mov
shlb
add
outsb
jb
xor
jp
repz
push
sub
push
xchg
push
je
pop
fsubl
push
leave
jne
inc
add
mov
je
cmp
insb
add
out
adc
jle
cmp
adc
push
lds
fidivrs
xchg
sbb
pop
inc
inc
mov
cltd
dec
sbbb
push
and
loope
rol
stos
and
adc
or
inc
bound
fs
sbb
fs
loop
pop
inc
push
push
push
insb
and
mov
ret
out
bound
jp
sahf
je
orb
jle
mov
mov
dec
loopne
adc
cmpsl
add
lods
lods
sbb
aam
sbb
push
and
push
or
xor
jo
adc
sbb
lods
push
in
or
and
push
nop
xor
gs
xchg
sarb
lock
fldcw
adc
mov
inc
sub
in
dec
sub
int3
xchg
testb
jp
cli
cmpsb
xor
inc
or
inc
inc
rorl
push
mov
xor
and
sahf
and
or
fwait
mov
lcall
sbb
les
dec
jp
pop
xchg
and
je
xchg
rolb
push
cli
add
cmp
data16
push
pop
adc
dec
insb
fldenv
adc
mov
or
mov
or
sub
sub
inc
stos
lock
add
mov
add
jmp
cmp
inc
adc
push
cmp
sbb
xor
inc
mov
loopne
pop
xor
lea
xchg
or
mov
pusha
dec
enter
push
push
add
mov
add
or
movsb
mov
clc
fs
mov
pop
rcr
addb
mov
mov
mov
jne
loopne
fistpl
outsl
adc
mov
and
rolb
lcall
push
lock
or
pop
clc
fistpll
push
fcmovb
stc
sbb
fldz
adc
mov
or
push
jle
rorb
mov
add
inc
adc
test
aas
mov
lea
adc
int3
mov
loope
int3
xor
push
sbb
or
roll
inc
inc
icebp
xor
in
or
add
or
popa
jmp
xchg
aam
push
rcr
ror
mov
xor
xor
push
push
sahf
hlt
fadds
fisttps
inc
and
inc
loopne
or
sbb
sar
in
lock
mov
or
adc
fwait
in
mov
or
add
push
push
idiv
mov
out
xor
arpl
and
mov
in
inc
sbb
fldcw
cmp
xchg
into
push
and
cld
pop
and
mov
mov
rcl
or
fsubrl
push
cld
add
sbb
hlt
add
adc
inc
jmp
fiaddl
hlt
in
pop
adcl
push
ror
push
mov
or
lea
inc
jp
call
adc
call
mov
pop
and
add
add
inc
add
shrb
lar
push
popf
adc
sub
pop
add
test
or
dec
aad
inc
cs
and
loop
ret
or
inc
imul
xchg
adc
iret
cmp
rcr
xchg
arpl
mov
add
test
nop
dec
adc
pop
das
imul
adc
enter
sub
jae
xchg
cli
or
xlat
in
xchg
ret
mov
out
movsb
popf
sub
and
imul
push
jmp
test
xor
mov
cmpsb
jg
push
ss
addb
push
in
nop
push
jge
rol
sbb
mov
pop
jb
or
adc
dec
jge
pop
sbb
dec
push
sbb
movsb
roll
fmul
xchg
sbb
popa
adcb
stos
out
sub
lret
in
sbb
jo
lret
add
push
not
inc
mov
gs
ret
or
outsb
fmul
test
adc
nop
enter
cmp
jo
ljmp
mov
rclb
or
das
cwtl
adc
cwtl
xchg
dec
mov
adc
cmp
sahf
rcrl
inc
or
mov
and
in
imul
sub
sub
sub
push
mov
mov
nop
mov
incb
xor
add
sub
xchg
into
jb
inc
push
lea
sub
cli
adc
dec
mov
push
movb
mov
mov
js
xchg
rolb
lock
test
pop
test
cmp
or
add
push
cmp
mov
xchg
push
cmp
je
adc
mov
rcr
lret
dec
jecxz
faddp
dec
cmp
je
mov
adc
jmp
adcl
loope
mov
and
lret
inc
mov
adcb
test
lret
add
dec
jo
sbb
fidivl
lret
mov
ror
mov
or
xorb
insl
bound
cmp
sub
sbb
mov
dec
sbb
sar
test
dec
sub
xor
sbb
orb
adc
lcall
ret
xchg
mov
loop
scas
loope
jecxz
jp
lret
notb
lods
mov
aam
lock
mov
lods
rcr
faddp
inc
and
movsb
mov
push
push
mov
mov
pop
js
jb
fdivs
lcall
adc
or
popa
mov
loopne
fcoms
cmp
rolb
xchg
fisubs
outsb
pusha
or
ret
mov
push
enter
loope
fld
jno
sbb
ja
or
adc
mov
or
adc
lods
es
roll
outsb
out
mov
mov
cmp
jno
pop
shrb
xchg
add
stos
pop
aad
movsb
lds
sbb
cmp
mov
mov
inc
pop
fsubrs
sub
and
sahf
adc
mov
pop
bound
loop
lods
fs
pop
sbb
xchg
pop
pop
js
mov
sbb
mov
add
lahf
ror
mov
xor
in
sbb
mov
lods
mov
inc
jbe
hlt
lret
or
jp
les
sbb
fdivs
dec
sbb
je
lret
or
fs
fcmove
inc
insb
lods
mov
pop
pop
or
add
cmp
movb
push
xchg
hlt
push
insb
mov
pop
sub
fdivl
dec
lcall
test
jno
cltd
adc
out
sahf
push
push
push
mov
pop
push
js
movsb
mov
lods
inc
fnstcw
fmul
les
ds
repnz
cmpsl
pop
push
dec
sub
add
aam
jb
add
push
xchg
in
sbb
mov
sub
cmpsl
mov
arpl
movsl
out
cmp
je
sahf
xchg
or
xorb
xchg
dec
cltd
mov
sbb
dec
int3
lcall
sub
mov
sbb
adc
fstps
add
inc
lahf
cmp
rolb
lock
jp
push
lock
mov
in
adc
enter
js
aam
sbb
rol
and
add
loop
add
sub
test
movsb
xlat
xor
cmp
adc
orl
mov
jp
pop
jp
ret
add
testl
pop
xchg
and
mov
stos
mov
xchg
sbb
dec
push
and
xchg
pop
nop
xor
rcl
into
push
data16
xor
cmpsl
mov
sub
push
mov
sub
pop
nop
sbb
push
mov
pusha
add
in
and
fidivrl
pop
outsb
movaps
scas
xchg
out
cs
rorl
pushf
xorb
or
subl
rcrb
ss
cwtl
mov
mov
ljmp
mov
shr
sub
fs
test
sbb
cmp
lock
push
movsl
or
and
scas
xchg
dec
pop
lods
mov
call
adc
mov
sub
sarb
sbb
xor
pusha
or
sbb
xor
xor
nop
mov
pop
cmp
stos
mov
push
ret
xor
pop
jne
lret
sbb
bound
jne
mov
cmp
dec
pushf
inc
jo
mov
mov
cmp
xchg
ret
faddl
add
adc
or
inc
lcall
mov
cli
jp
jp
xor
inc
and
test
mov
rclb
sbb
inc
fdivs
divl
dec
movsb
lock
lods
push
or
data16
cmp
gs
cmpsb
rclb
push
sub
lret
lods
popl
sahf
xchg
daa
dec
adc
nop
dec
mov
nop
xchg
cmc
test
dec
pop
jmp
xor
or
movsb
mov
inc
inc
arpl
push
adcb
fidivs
add
ret
fs
pop
jno
cmp
cmp
jb
push
and
loopne
pop
inc
loop
ljmp
dec
add
pop
subb
loop
sub
fcomip
adc
in
mov
pop
es
hlt
cmp
or
add
sbb
lock
add
movsb
loope
test
mov
sbb
rolb
mov
inc
dec
stc
mov
stc
neg
dec
push
scas
push
mov
sbb
insl
test
insb
mov
fisttps
and
add
decb
loopne
xor
or
or
cli
iret
movsl
adc
arpl
mov
lret
lods
iret
and
andl
or
mov
pop
test
add
xlat
add
add
inc
ljmp
or
sub
fwait
push
call
pop
cwtl
mov
lret
adc
mov
push
add
es
or
mov
sbb
mov
adc
mov
and
nop
mov
icebp
add
pop
mov
lods
mov
sbb
push
push
and
loopne
pop
in
push
xbegin
and
inc
and
cwtl
cmpl
push
jb
cmp
xor
pop
pop
rol
push
sbb
in
pop
sbb
adc
arpl
or
inc
sbb
jecxz
add
movsb
mov
cmp
adc
and
dec
gs
mov
icebp
shll
jecxz
in
mov
sbb
or
fstps
icebp
cmp
dec
xchg
add
mov
pop
lock
lahf
add
orps
dec
sbb
inc
jne
or
dec
cmp
cmp
lds
ds
pop
nop
ret
fildl
insb
mov
sbb
adcb
sbb
push
imul
push
ror
xorl
and
rorl
adc
cmpsl
dec
adc
daa
adc
push
inc
cmp
js
outsb
mov
cmpsl
and
add
loopne
mov
punpckldq
popa
push
xchg
stos
xchg
push
dec
ret
xchg
add
adc
mov
dec
fimuls
shlb
jae
call
sahf
clc
push
lods
sub
add
adc
inc
lods
pop
pushfw
mov
cmpsb
cmpsl
lock
pusha
cmp
sarb
mov
loope
out
test
pop
add
add
aaa
jmp
js
repnz
mov
pop
dec
movsb
and
sbbb
ljmp
mov
and
test
mov
mov
push
xchg
andb
sarb
or
rcl
or
sub
pop
push
adc
sbb
adc
inc
xorl
lret
or
dec
cli
mov
dec
lock
pop
ficoms
add
push
sbb
xor
sbb
mov
sbbb
lods
dec
mov
out
ja
cmp
popa
or
test
or
or
jp
add
imul
push
loop
lret
jae
push
stos
jbe
jp
add
or
dec
pusha
add
dec
or
mov
or
outsl
js
int3
test
sahf
mov
mov
add
push
fsubp
jp
inc
push
popa
jmp
adc
dec
cli
push
rorl
gs
pushf
adc
sbb
cwtl
arpl
adc
xchg
mov
sbb
sbb
push
adc
out
aam
and
pop
xchg
mov
aam
or
mov
mov
pushf
sub
or
fnstsw
or
fiadds
bound
sbb
adc
js
faddl
add
pop
je
mov
mov
mov
aam
or
xchg
dec
or
popa
and
jo
lock
jmp
add
fcomps
mov
lods
call
push
cmc
and
insb
adc
testl
out
enter
inc
or
xor
push
scas
test
pusha
leave
sbb
ret
push
cmp
or
push
mov
loopne
and
out
push
shr
loop
scas
cmp
push
adc
adc
orb
test
aas
nop
pop
aam
pop
xchg
insb
loop
dec
shr
xor
cmp
cwtl
loop
cmp
rcr
test
hlt
sbb
movb
js
and
add
ret
ret
sarl
movsb
sub
mov
mov
pusha
push
loope
imul
je
push
and
cltd
les
fcoml
sub
dec
mov
or
dec
fmull
jp
mov
adc
fcmove
fcom
addb
mov
cmp
and
mov
in
mov
stos
adc
repz
dec
jge
inc
mov
add
hlt
dec
add
rcll
inc
sub
add
cmpb
dec
or
adc
cmp
ret
mulb
mov
cmpsl
fidivl
iret
shrl
jp
stos
lcall
aad
push
divl
inc
jmp
add
push
stc
adc
orb
lods
add
or
jae
sbb
xchg
in
add
jle
or
mov
ret
int3
cmp
add
enter
xchg
push
loope
fisubl
mov
cwtl
jmp
sbb
xor
shrb
add
adc
xor
lahf
enter
out
mov
repz
fcoml
jp
adc
dec
std
cmpsb
add
push
addb
cmpsl
push
sbb
add
mov
cld
adc
pop
xchg
add
ljmp
shrb
roll
rcl
dec
adc
popa
loopne
inc
xlat
dec
cmp
add
sbb
clc
xor
adcb
lods
or
aas
repz
lods
or
xor
xor
or
lret
add
aaa
jnp
js,pt
aaa
dec
sbb
xchg
xor
push
sbb
sub
icebp
add
pop
std
jle
cmpb
or
fwait
push
xchg
inc
idivl
jnp
mov
cmpsl
xchg
mov
loopne
sbb
cmp
stc
jb
sbb
or
lock
das
das
cmpb
adcb
sbb
jg
and
lods
loope
sub
inc
aam
xchg
mov
add
insb
inc
fst
inc
lcall
out
inc
test
sbb
in
mov
xor
xchg
xchg
stos
push
cmp
pop
or
cwtl
jmp
xlat
repz
imul
add
sub
inc
mov
dec
das
jge
pop
or
mov
dec
sub
out
add
push
cmp
and
aam
iret
popa
push
sbb
adc
rolb
das
and
mov
sub
mov
shlb
shlb
xchg
push
sub
rolb
fstl
mov
aad
rclb
stos
clc
inc
decl
cwtl
adc
dec
call
push
je
mov
dec
add
jnp
mov
imul
dec
fmuls
stos
xchg
out
rcl
insb
xchg
sti
pop
pop
shr
pop
sub
pop
dec
gs
or
sub
mov
sub
push
add
es
adc
add
inc
aas
and
inc
fdivs
test
call
mov
xor
shl
sti
daa
fistps
rorb
add
test
cmp
popa
test
divb
dec
imul
jo
fstps
mov
or
sbb
lods
add
shrl
lret
dec
ret
pop
mov
inc
xor
clc
xor
daa
decb
add
sar
leave
lret
dec
dec
and
xchg
mov
fldenv
enter
jne
add
mov
mov
pop
and
add
or
std
movsl
or
shl
std
pop
shr
mov
rorl
shr
jge
mov
pop
ret
jmp
cmp
or
push
stos
sbb
jo
shrb
add
out
mov
pop
es
sub
jle
ds
push
mov
sub
xor
xchg
lods
dec
mov
mov
shlb
fisubrs
push
push
mov
mov
mov
and
fdivrs
lds
push
sub
loop
mov
sub
sbb
xchg
and
hlt
jbe
jmp
insb
mov
fstl
repnz
leave
flds
ja
mov
pop
and
aaa
pop
insb
mov
in
push
rorl
xchg
aaa
push
pushf
dec
rorl
clc
adc
mov
dec
mov
cmp
add
mov
hlt
add
mov
cli
aas
cmp
fsubrs
jl
add
sub
call
jo
ljmp
inc
xorb
inc
es
push
inc
fsubs
imul
adc
daa
inc
pop
cmc
aas
add
rclb
mov
cmp
mov
pop
adc
sarb
gs
vprotb
loopne
sahf
nop
xor
pop
js
inc
mov
xor
cmp
xchg
mov
sbb
sbb
xor
insb
arpl
mov
add
nopl
push
movsb
pusha
mov
addl
push
xchg
or
mov
les
cmpsb
testl
sub
pop
jae
xchg
rcl
xchg
inc
jecxz
int3
pusha
insb
dec
and
mov
mov
js
mov
and
mov
insl
pushf
or
adc
push
or
enter
ja
mov
es
cli
orb
les
mov
pop
sbb
ret
insb
add
popa
lcall
mov
or
inc
adc
xorl
push
and
popa
dec
popa
jo
orl
adc
mov
sbb
push
shrb
aam
push
ret
fldcw
xchg
sbb
adc
add
fstps
cwtl
mov
sbb
pop
rcll
push
stos
in
rol
jns
dec
add
shlb
add
inc
cmpb
push
or
mov
dec
test
adcb
jo
insb
dec
xor
push
mov
or
jle
xchg
movsl
addl
add
mov
in
jns
ret
pop
cmpb
lock
cmp
movsl
push
xor
adc
ss
xor
into
or
rolb
sahf
xchg
push
inc
sbb
push
or
pop
arpl
dec
loopne
test
nop
popa
stos
push
xchg
int3
or
or
mov
icebp
insl
ljmp
fimull
push
xchg
inc
sub
fs
cmp
pop
pop
js
inc
cli
lock
or
xchg
lcall
shlb
popa
sub
fndisi(8087
test
xor
movsb
ss
nop
dec
push
inc
cmp
sbb
add
jp
and
pushf
or
cs
add
or
sub
das
ljmp
popa
push
push
mov
inc
and
int3
cmpsl
pop
into
data16
mov
or
sub
subl
out
cmp
pop
and
call
test
mov
jo
sbb
dec
popa
sub
aam
dec
pop
fsub
int3
or
push
cmp
pusha
in
cmpsl
push
sbb
sar
aam
inc
das
or
cmpb
mov
and
rorb
call
push
mov
add
dec
xlat
adc
dec
add
mov
aaa
add
or
cmpsb
fidivs
out
sub
addb
mov
sub
movsb
jb
orb
adc
jmp
cmp
sub
scas
sbb
cmp
sbb
or
ret
xor
xchg
stos
xor
mov
rcll
xchg
pushf
sbb
pop
cld
int3
je
fcmovb
loopne
dec
insb
outsb
sbb
shlb
inc
sbb
adc
adc
jecxz
add
push
cmp
gs
or
mov
push
mov
repnz
mov
add
aam
jno
sbb
inc
adc
jle
mov
je
in
sub
add
clc
add
sahf
cmpsl
adc
in
mov
mov
test
mov
dec
rorb
or
sbb
insl
mov
or
in
adc
mov
sub
pop
or
in
cmp
sbb
sbb
mov
dec
adc
jmp
add
add
ret
cmp
jne
and
clc
jle
mov
not
inc
or
cmpsl
xchg
and
push
sub
cmp
xor
or
ja
pop
fcmovu
inc
add
jbe
push
divb
sbb
sub
jmp
adc
sbb
xchg
jge
in
mov
lock
in
sbb
dec
int3
inc
movl
or
or
js
or
add
call
call
ret
lds
roll
lea
pop
in
sub
decl
xlat
jnp
and
mov
ret
push
jne
sbb
mov
sub
mov
xchg
mov
jo
inc
push
or
and
ret
ret
loop
mov
scas
dec
inc
rorb
inc
loop
dec
les
dec
call
sbb
mov
lret
xchg
mov
in
dec
psubsb
movsl
mov
fcoml
pop
xchg
int3
ja
not
jp
out
loopne
adcb
or
je
je
inc
inc
movsb
inc
dec
inc
pusha
les
jne
ljmp
sub
rcrb
add
push
cmc
jp
je
lods
xorl
push
pop
inc
rcll
xchg
nop
sbb
test
sbb
push
push
push
stos
aam
or
les
cmp
push
xor
mov
push
loopne
xchg
shrb
shll
mov
pushf
or
bound
inc
lret
jmp
and
ret
xor
enter
gs
push
pop
insb
mov
add
pop
pop
inc
fdivp
mov
pop
pop
pop
push
test
popf
mov
sub
add
jbe
into
xor
into
inc
lods
add
mov
push
int3
loopne
test
xor
data16
dec
pop
mov
jbe
inc
pushf
and
xor
ljmp
mov
fcoms
adc
inc
inc
xor
pop
push
nop
and
adc
sbb
je
pusha
ret
sbb
push
ret
add
inc
mov
mov
cltd
rcll
lret
inc
aam
lret
adc
or
clc
loope
lea
cltd
xchg
xor
mov
movb
or
loope
loop
pusha
fs
leave
test
loopne
cmp
rcr
test
cwtl
ss
das
fwait
mov
cwtl
test
into
add
sub
scas
mov
cmpsb
lock
inc
mov
jmp
loop
xor
pop
inc
pop
outsb
xchg
pushf
icebp
xor
push
notb
data16
push
fidivs
add
pop
pushf
pop
cs
lahf
into
pop
sbb
jp
adc
addb
sbb
jno
push
or
cli
sbb
popa
add
ljmp
imul
loop
dec
repnz
aam
inc
je
dec
icebp
adc
sub
pop
mov
xorl
inc
scas
aam
pop
lea
dec
es
mov
in
xor
pushf
andb
add
sbb
pop
das
jle
loopne
ret
dec
add
ds
es
imul
or
dec
mov
add
jo
aam
and
mov
xorb
fisubs
ljmp
pushf
add
xchg
mov
stos
into
jne
xchg
mov
cwtl
mov
cwtl
ljmp
adc
fs
pushf
roll
inc
icebp
js
fisubl
icebp
filds
xlat
jecxz
push
fldl
incb
popf
test
shl
sbb
push
stc
mov
and
daa
cmp
pushf
ret
pop
or
mul
xchg
cmpb
sbb
sbb
fimull
test
outsb
lods
sub
lcall
scas
adc
jae
mov
sbb
out
push
dec
loope
mov
sbb
jb
pop
rolb
xchg
lock
int3
xor
pop
ljmp
insb
or
ret
mov
inc
pop
sub
sub
dec
mov
lcall
pop
bndstx
add
cmp
xor
push
imul
sub
dec
pop
add
add
or
pop
push
ss
adc
cmp
sub
es
lods
mov
enter
cmpb
inc
jo
lea
loopne
jno
loope
add
cli
xchg
sbb
xor
sbb
cmpsl
xchg
mov
and
ficompl
ljmp
sub
pop
bound
cwtl
roll
and
rclb
sti
or
jecxz
ret
and
and
sbb
push
xor
jge
xor
xchg
lret
cmp
cld
dec
cmp
pushf
ss
xchg
pusha
pop
loope
jnp
mov
inc
daa
outsb
mov
push
mov
and
xchg
sbb
lock
shr
sub
rorl
and
pop
jbe
or
andb
mov
mov
push
out
dec
dec
lret
jo
or
cmp
cmpsl
xchg
jle
lods
pusha
icebp
xchg
mov
jle
jp
inc
sub
cmpsb
mov
jb
lods
and
jg
adc
and
dec
jmp
or
mov
addb
ja
dec
inc
pushf
lea
push
sub
or
mov
xor
xchg
jb
xor
sbb
xor
mov
cli
scas
aad
sbb
inc
cs
mov
pop
pusha
cmpb
mov
and
push
pusha
fcomps
mov
lock
dec
loope
xor
push
enter
or
sub
sbb
push
pop
cmp
std
cmp
mov
gs
mov
jo
mov
add
mov
jne
test
add
lods
add
push
js
add
cmp
popa
cmp
jo
add
push
lock
test
imul
nopl
adc
addb
add
cmp
into
and
insb
lea
mov
mov
sub
pop
sbb
adc
mov
cmp
imul
add
push
push
jmp
stos
and
arpl
je
mov
sbb
mov
adc
andl
xchg
scas
into
or
rorb
lahf
addb
jmp
in
cmp
shlb
cli
dec
xor
adc
pop
mul
add
int3
mov
mov
rcrb
jb
repnz
adc
ss
xchg
xor
xchg
xchg
adc
inc
cmp
orb
pop
test
movl
jo
xor
js
or
int3
adc
sub
mov
cmc
das
xchg
fcompl
adc
movsb
pop
nop
or
sub
and
sbb
adc
inc
mov
subl
xchg
mov
cmp
out
test
insb
push
push
or
andl
dec
mov
add
call
dec
mov
inc
or
repnz
imul
rolb
ljmp
dec
mov
cmp
sbb
push
jb
lea
leave
adc
psubusb
jbe
jo
push
lea
test
pusha
add
push
test
cmp
sar
sub
sub
outsw
push
cmp
jnp
push
js
jp
mov
lods
mov
or
aaa
gs
iret
idivb
adc
test
pop
lea
mov
sbb
sub
cmp
push
out
jo
xchg
test
incb
adc
mov
rolb
test
lcall
enter
xorl
xor
lods
dec
pop
jmp
orl
into
xchg
into
add
mov
or
lret
mov
mov
out
imul
dec
push
lock
rorl
movsl
xchg
test
adc
add
sub
ror
test
sbb
test
fsubr
andl
jle
inc
cmp
push
xchg
inc
jb
test
call
loopne
popf
mov
arpl
mov
dec
les
nop
mov
popf
and
in
enter
add
rorb
sub
addr16
cmp
add
cmp
mov
mov
jb
sub
mov
rcrb
imul
ficompl
push
arpl
jne
ror
or
lret
test
leave
mov
aad
adc
push
jbe
mov
clc
or
into
or
xchg
xchg
rcrl
add
sti
dec
push
je
and
jb
addr16
lods
popa
lcall
push
pop
adc
cltd
xlat
fsts
mov
xchg
sub
xchg
mov
push
sub
inc
cmpsb
and
cmp
jb
out
add
je
and
mov
es
int3
sub
dec
mov
lret
bound
pop
or
adc
add
ja
inc
and
pop
inc
jb
and
adc
dec
test
or
jmp
cli
xor
mov
dec
pop
nop
sbb
dec
shlb
lods
and
mov
mov
decl
inc
mov
push
jg
les
sbb
mov
inc
cmpsb
pushf
clc
jnp
xchg
cmp
cmp
mov
mov
mov
xchg
jecxz
flds
ds
and
cltd
pusha
sub
imul
mov
mov
mov
and
jmp
push
sbb
cmp
lret
cwtl
jo
popa
out
xor
mov
push
test
adcb
cmp
xchg
je
sar
and
lcall
cld
mov
push
mov
mov
loop
loopne
dec
pop
cmp
pop
test
dec
dec
xchg
lods
fs
lea
or
loopne
out
lret
lods
and
ss
rcrb
push
sbb
js
pop
outsl
mov
push
mov
cmp
pushf
mov
shrb
sbb
bound
dec
test
out
inc
mov
xchg
mov
call
mov
sbb
pop
pop
adc
xor
cmp
or
or
pop
es
or
or
sbb
rcl
mov
add
sub
push
ljmp
mulb
push
leave
mov
xchg
mov
add
rclb
into
fldenv
cmp
fisubrl
dec
mov
and
nop
xor
and
inc
jmp
rolb
and
push
rcll
add
fsubs
rorb
sbb
adc
pop
sbb
and
jo
mov
jo
or
jbe
sub
push
scas
lret
mov
shr
push
sti
les
add
or
push
add
xor
cmp
movsl
shl
mov
sbb
popf
bound
sahf
push
js
and
cmp
inc
enter
or
and
cmp
inc
pushf
and
and
cmp
add
fadds
out
mov
push
pop
test
pop
and
cmp
jl
and
sbb
push
hlt
add
xchg
or
cli
clc
sbb
popf
and
jo
and
stos
jnp
mov
cmp
mov
sub
sbb
dec
mov
or
lods
mov
cli
or
add
mov
lret
dec
sub
push
mov
lcall
push
pop
bound
loope
mov
xchg
add
mov
sub
cli
data16
cmc
addb
inc
or
adcl
dec
xor
mov
ret
push
fdivrl
cmpl
sbb
mov
movsb
lock
mov
mov
dec
pop
ret
xor
dec
push
out
shll
adc
sbb
mov
sub
dec
rolb
push
in
dec
push
fmull
enter
jl
inc
push
jb
and
stos
adc
es
mov
popa
inc
lods
sub
fs
insb
je
or
mov
pop
add
jecxz
dec
cwtl
jg
pop
mov
dec
lods
imul
movsl
enter
sub
stos
enter
xchg
ret
movsb
imul
sbb
ret
cwtl
mov
bound
mov
or
push
push
adc
or
test
or
pop
fcompl
enter
stos
pop
lods
xchg
and
sub
sub
scas
xor
leave
or
sti
nop
rolb
sub
outsb
xor
je
push
adc
pop
lods
jle
and
cmp
pop
push
arpl
pop
rcrb
bound
mov
and
sar
test
pop
cmp
outsb
sbb
lret
sbb
and
sbb
sarb
cmp
sub
idivb
fcmove
mov
sbb
cltd
ljmp
ds
pop
cmp
cmp
movsb
rol
jo
pop
cmp
push
adc
js
add
push
push
cmp
sub
sub
sub
xchg
lock
add
daa
jle
arpl
daa
or
adc
mov
ret
loop
or
loope
out
pop
add
sbb
inc
xchg
push
sub
adcb
cmc
sbb
adc
test
pop
or
xchg
movsb
mov
dec
adc
add
daa
sarb
mov
test
and
jle
or
sub
inc
push
outsl
pop
outsl
jmp
sub
lds
adcb
push
xor
mov
inc
jbe
and
pop
call
sub
popf
faddl
add
aam
adc
xor
sbb
or
sbb
pusha
add
mov
mov
ret
dec
pop
mov
add
jo
xchg
add
fs
ret
add
jle,pn
xor
test
mov
pushf
mov
xor
aam
filds
js
lret
mov
mov
fs
and
xor
popf
imul
dec
out
ret
enter
mov
xor
daa
pop
adc
out
nop
xchg
movsl
stos
adc
cmp
sbb
mov
rorb
nop
pop
sub
iret
or
stos
iret
orb
enter
cmp
rclb
js
fs
adc
push
xchg
xor
xor
lock
dec
jo
call
imul
and
sbb
pusha
mov
aam
orb
pop
xor
mov
fs
pop
add
out
outsb
or
cmp
pushf
inc
scas
sbbl
repnz
addb
int3
inc
lret
insb
mov
ficompl
or
aam
jno
or
ljmp
inc
inc
sub
ret
pusha
popa
lods
enterw
dec
ret
clc
pop
or
push
arpl
repz
lcall
ret
js
or
aaa
es
push
pop
inc
inc
das
pop
xor
adc
adc
dec
rclb
mov
aad
push
loope
adc
lods
mov
mov
test
inc
jmp
push
icebp
add
lds
ss
leave
int
pop
inc
ss
pushl
rol
pop
ret
ljmp
and
pop
movb
jp
bswap
test
mov
movsb
jp
adc
insb
popa
mov
xor
push
into
mov
inc
dec
lret
dec
repz
call
push
push
jp
sbb
push
mov
push
dec
or
outsb
cmp
inc
add
push
cltd
sbb
inc
iret
mov
test
bound
pop
xorb
cwtl
xor
jp
xor
pop
pop
inc
inc
rclb
mov
ds
enter
xchg
pop
xor
int3
xchg
test
lods
sub
jl
cli
push
pop
test
jp
sti
or
pop
mov
les
fmuls
sbb
inc
sbb
mov
cs
jae
pop
sub
adc
lods
sbb
sub
add
add
mov
mov
ret
sub
mov
stos
outsb
scas
mov
movsb
jmp
clc
js
adc
xor
ret
inc
mov
lods
jne
cmpl
mov
das
mov
add
mov
cmp
push
cwtl
insl
sub
addb
or
push
and
and
mov
pop
rolb
pop
add
xor
inc
sahf
mov
into
push
lods
loopne
les
je
push
xor
or
mov
test
loopne
sbb
subb
daa
xor
add
loopne
pop
cmpsb
dec
sbb
xchg
push
nop
adc
dec
movnti
cmpsl
loop
sbb
or
and
and
or
rcrb
lret
push
push
pop
ret
fcomps
jb
push
aam
bound
and
push
push
nop
sbb
add
adcl
into
push
mov
enter
jb
and
dec
mov
or
xchg
xor
inc
into
test
js
add
in
cmp
popf
dec
mov
pop
inc
jecxz
add
jmp
mov
add
jo
mov
mov
adc
jb
enter
pop
jae
das
mov
adcb
sbb
cmp
hlt
jo
sahf
sbb
shl
push
sub
cmp
sbb
push
push
inc
fldl
push
cs
cwtl
dec
mov
jp
xor
pop
cmp
pushf
add
loop
pop
adc
push
mov
ficompl
inc
cmp
ja
stos
jl
jle
and
inc
add
test
cs
mov
fs
sbb
outsb
popa
sub
inc
orl
sbb
fidivrs
sub
rolb
mov
ret
push
jb
jmp
adc
xchg
mov
sbb
sbb
push
add
and
imul
xchg
push
into
rclb
std
mov
test
mov
dec
xchg
shl
rcrl
sbb
pop
dec
or
sbb
shlb
lods
or
fnstcw
or
addr16
movsb
dec
dec
and
and
cwtl
rcrb
sub
sbb
sub
lcall
xchg
das
pusha
roll
fldt
lcall
add
adc
adc
xor
insl
inc
ss
and
icebp
sbb
add
jo
adc
movsb
daa
pop
adc
sub
xor
das
jne
testb
mov
and
jmp
adc
je
dec
inc
arpl
push
xchg
cmp
push
ret
enter
mov
fs
add
mov
loop
out
xchg
fmull
push
lods
xor
rol
mov
mov
or
cmp
mov
jne
orb
cli
jo
mov
and
iret
pop
and
pusha
dec
loop
rolb
fdivl
mov
or
xor
and
inc
ret
fidivrs
pop
add
push
sbb
out
dec
loopne
test
lods
dec
sarb
xor
arpl
nop
or
jne
mov
cs
sbb
jnp
test
insb
jbe
fs
mov
add
cmp
jl
add
rcr
in
lret
ficompl
in
pop
fiadds
push
sbb
pop
dec
stos
inc
cmpsl
ror
sbb
lcall
dec
or
shr
mov
cli
inc
or
xchg
push
mov
push
out
pop
jp
or
push
stos
push
and
bound
mov
and
or
pop
jne
enter
xchg
les
addr16
adcl
push
xor
daa
flds
daa
or
popa
or
and
jo
call
int3
xor
or
jg
mov
pop
xchg
and
or
push
or
outsl
ret
out
mov
test
inc
sahf
mov
test
stos
push
add
mov
lea
icebp
adc
or
cltd
mov
mov
add
inc
lret
repz
jne
jnp
mov
bound
xor
dec
test
cwtl
sahf
or
inc
dec
cmp
and
ds
jbe
or
testl
call
sub
cld
cmp
divl
fdivr
sbb
outsb
inc
daa
add
inc
out
cmp
xchg
jb
sbb
xor
xchg
jb
push
jbe
lret
add
jmp
xchg
ret
adc
addb
in
push
imul
push
or
and
push
sub
pop
and
dec
jle,pt
imul
idivb
jo
sahf
in
cs
add
or
adc
pop
mov
mov
adc
imul
xchg
pushf
lods
or
push
mov
nop
dec
lret
and
pop
ret
adc
in
loop
cs
and
dec
lret
addl
push
mov
pop
call
js
dec
inc
dec
fsubl
sub
mov
xor
leave
push
mov
mov
sbb
std
fisttpl
sub
ret
dec
mov
pusha
mov
add
jle
cmp
gs
sbb
insb
push
cmp
leave
inc
xchg
push
adc
je
nop
push
push
xchg
jo
inc
shlb
and
adc
sahf
push
add
loopne
xchg
and
push
and
ficoms
lcall
mov
xchg
xchg
ret
pop
cmp
cmc
xlat
sbb
jo
push
and
jl
mov
jo
inc
cmp
ret
xor
cmpb
pop
and
pushf
lcall
ljmp
or
jp
mov
cmp
or
outsb
push
pop
dec
xchg
jecxz
xchg
pop
xor
sub
pusha
add
adc
dec
sub
lret
test
pop
mov
jp
shlb
lret
movsl
sbbb
and
stc
pop
dec
es
xchg
pop
bound
shlb
inc
loop
xor
fwait
jo
sbb
inc
mov
js
push
sahf
mov
daa
inc
add
xchg
push
pop
sti
nop
mov
push
sbb
add
add
dec
sbb
push
andb
stos
sbb
fisttpll
enter
push
int3
lret
jp
xor
and
sbbl
cli
enter
sub
inc
shlb
lret
pop
push
in
push
xchg
sbb
push
inc
bound
ret
fisubl
jp
nop
adc
sbb
lock
dec
in
ja
add
xchg
daa
dec
pop
jo
popa
mov
rorl
in
jp
pushf
movsb
mov
out
adcb
pop
mov
xor
bsf
push
or
and
aad
push
inc
test
wbinvd
sbb
out
fcoml
pushf
or
add
and
inc
testl
int3
and
nop
les
inc
mov
ficoms
fstps
out
popf
test
dec
xchg
jb
or
fisttpll
pop
in
xchg
loopne
pop
mov
push
push
sub
jo
stc
rol
repnz
loope
push
xor
pushf
xor
sahf
add
inc
jp
push
and
mov
jmp
pop
lret
or
inc
jb
rclb
xchg
mov
xchg
mov
jl
es
call
int3
mov
ret
bound
mov
addb
mov
mov
and
and
dec
xchg
mov
lcall
push
sub
mov
xchg
jo
fidivs
shlb
insb
mov
jbe
inc
addr16
pop
ficompl
mov
xor
sbb
cmpsl
sub
je
or
push
cmp
loopne
loopne
leave
push
sub
ret
nop
xchg
pop
jmp
rolb
rolb
je
ja
pusha
sub
ljmp
and
movsb
shl
pop
call
bound
xor
loope
fisubrl
in
add
daa
or
push
pop
pop
pop
lock
dec
ja
lahf
loopne
dec
cmp
push
push
loope
lea
jecxz
jmp
cli
jne
sarb
fsubl
ss
push
mov
lock
ret
jge
jmp
or
je
mov
lret
mov
mov
pop
mov
cmpsb
push
push
lds
push
cs
and
das
pop
inc
out
jl
xor
cmpsb
test
fs
test
inc
sahf
xor
inc
mov
xchg
lock
out
pushf
push
fimull
mov
cmpsl
insb
sub
cmp
clc
push
loop
inc
jle
loope
loop
jmp
push
mov
push
lret
or
nop
js
lret
push
cwtl
les
add
pop
test
cmpsb
pop
lcall
mov
add
pop
aam
pusha
xchg
pop
xor
js
jae
xorb
adc
adc
pop
lret
fst
nop
mov
sbb
push
xchg
sbb
mov
cmp
les
sbb
add
push
ss
pusha
mov
xchg
sarb
mov
add
sbb
xor
fimuls
jno
cwtl
outsb
mov
enter
ret
nop
mov
jp
jne
pop
add
aam
jle
ret
js
int
inc
sub
cld
sub
sub
dec
jmp
rcll
sbb
orb
pushf
sub
dec
rorb
or
push
dec
adc
test
test
data16
into
rolb
xor
sbb
push
aam
loope
addr16
mov
or
mov
or
inc
and
cmpsb
repnz
add
lock
or
ret
push
rcr
sub
inc
enter
jmp
xchg
cwtl
cmp
xchg
push
std
inc
test
xorb
xor
pop
lcall
fists
mov
push
cvtps2pd
jo
imul
jo
pop
out
and
xchg
idivb
mov
pop
adc
cmp
jno
outsl
sbb
mov
pusha
sbb
loope
mov
adc
xchg
orb
cltd
cmpsl
pusha
or
clc
xadd
cmp
sbbb
xchg
aam
jne
cmpsb
xor
xor
out
jp
jmp
mov
pop
xchg
jbe
mov
into
loopne
pop
push
mov
mov
cmp
cmp
or
out
popa
and
inc
cmp
sub
xor
lret
sub
adc
dec
dec
mov
and
ret
cltd
loop
jbe
dec
dec
sbb
jmp
bound
sub
cmpsl
rcrb
push
cmpl
adc
push
sub
xor
push
or
sub
or
arpl
daa
push
pushf
pop
sahf
call
or
clc
push
arpl
sbbb
and
pusha
test
xor
sbb
pop
inc
pop
sbb
mov
out
fsub
lods
pop
call
adc
mov
leave
shrb
mov
out
jl
or
cli
push
pop
clc
or
sbb
mov
xor
in
xchg
add
inc
mov
rolb
add
leave
sbb
and
mov
sub
jle
lods
je
cld
scas
jns
mov
ds
nop
outsb
jae
in
pusha
xor
adc
lods
psubusw
mov
push
ret
xor
adc
pop
mov
ret
adc
sub
aaa
inc
cmp
ds
xchg
sbb
xchg
popa
push
roll
sti
or
adc
daa
or
int
cmp
cmp
sbb
adc
call
inc
sar
inc
andb
aas
call
jne
int3
call
shll
fsubl
call
leave
sysret
or
xchg
lock
add
mov
mov
dec
test
inc
sbb
je
popa
or
adc
pinsrw
sti
adc
jecxz
xor
cmpb
js
push
or
stc
jns
lods
clc
outsl
mov
sub
rorb
inc
popa
sbb
dec
dec
fmuls
jne
pop
cli
pop
mov
daa
cmp
jne
pop
inc
mov
push
inc
add
ret
test
push
add
js
and
mov
adc
lret
cltd
sub
test
lret
cmp
iret
cmp
sub
leave
sti
mov
out
ror
pop
sub
pop
and
push
orb
cmp
push
loope
mov
mov
dec
sbb
sub
loope
mov
dec
daa
hlt
xchg
xchg
cmp
add
pop
or
inc
lret
xor
cmpb
insb
int
sbb
fdivrp
adc
push
in
jp
inc
or
dec
ljmp
xchg
push
fsubrs
lret
push
bound
mov
jp
int3
or
pop
push
push
xchg
mov
adc
outsl
fidivs
and
popa
sub
xorb
loop
cli
mov
call
push
push
sbb
daa
push
int3
shlb
popa
inc
imul
sbb
dec
push
push
lahf
sbbb
cmp
sub
dec
int3
mov
pop
sar
sarb
ret
inc
ret
dec
xchg
inc
sbb
or
and
in
movsl
loop
sbb
into
push
or
push
sbb
repnz
fidivs
popa
dec
lods
add
sbbl
add
sub
rorb
movsb
loope
inc
push
push
and
outsb
pop
rcl
xchg
or
sbb
mov
out
int3
adc
push
fs
adc
mov
call
mov
test
mov
sbb
pushf
sbb
ds
sub
cmp
cmp
hlt
cmc
bound
or
mov
add
dec
stos
xor
ljmp
lock
lcall
sbb
lods
in
lock
adc
fs
push
add
or
or
jo
push
cmp
daa
aam
call
dec
insb
add
xchg
pusha
and
imul
sub
dec
lock
cmp
cmc
es
popa
pop
popf
pusha
jo
adc
pop
sti
mov
insb
loop
push
test
add
adc
mov
les
js
jl
mov
loop
inc
push
and
sub
xchg
mov
jge
fisubrs
xchg
jp
loopne
lcall
jle
jbe
pusha
xchg
mov
push
aad
cmp
mov
roll
mov
testb
sub
lods
mov
daa
lock
push
loope
push
pusha
mov
in
push
ss
out
sbb
dec
push
jb
in
mov
adc
cmp
or
add
adc
push
xchg
loope
xor
iret
xor
and
jnp
cli
add
mov
outsb
jp
adc
sub
jmp
sbb
loop
ret
shll
movsb
or
mov
fs
or
pusha
mov
pushf
add
ja
and
jecxz
cmpsb
fs
loope
imul
loop
fidivs
repnz
push
mov
jo
dec
inc
scas
pop
pop
sbb
push
bnd
in
pusha
dec
ljmp
lock
cs
sub
data16
jno
lods
out
enter
dec
scas
popf
test
jo
sbb
or
imul
push
cwtl
push
mov
sub
dec
and
ret
jb
adc
inc
xchg
push
or
movsb
push
xor
xchg
inc
and
ss
push
repnz
sbb
out
xor
loope
pop
js
and
add
push
cmovo
add
sbbl
jbe
test
inc
loopne
lock
pop
mov
xchg
cmp
xor
sub
test
dec
je
dec
cwtl
icebp
xor
es
adc
stos
or
loope
movsb
mov
or
js
loop
pop
jl
imul
xor
and
jno
adc
mov
or
scas
dec
test
sbbb
testb
xor
add
icebp
ja
into
jne
inc
sbb
push
add
in
inc
lods
sub
test
imul
adc
jno
adc
adc
out
sub
xor
pusha
xor
push
fsubp
pop
inc
dec
sub
mov
clc
or
xchg
ret
arpl
rorb
rorb
xchg
push
mov
ret
pop
adc
fldcw
jle
popa
lods
mov
pop
add
xor
lret
mov
pop
or
ret
lcall
testb
mov
inc
cmp
test
dec
push
arpl
movb
lea
inc
call
and
jnp
jecxz
cmp
xchg
cmc
adc
pop
or
lret
add
sbb
hlt
and
xor
dec
xor
outsl
add
and
mov
or
and
push
dec
pop
cmpsl
mov
pop
leave
dec
sub
jbe
pop
nop
dec
sbb
cmp
mov
cwtl
subl
mov
inc
sub
and
sub
test
sub
mov
or
std
push
lea
add
or
push
mov
pop
cmp
or
jb
jne
testl
aam
popf
enter
xchg
lcall
ljmp
add
mov
sarl
add
rol
les
jbe
out
mov
into
push
testl
add
cld
lods
es
mov
pushf
mov
fidivrl
mov
sub
and
push
xor
or
or
or
out
and
mov
cmp
popa
cmp
jbe
leave
xchg
sbb
std
mov
and
iret
and
and
cmp
aam
aaa
or
arpl
rolb
dec
inc
test
inc
xchg
and
adc
xchg
shll
sbb
leave
test
arpl
cmc
repnz
push
es
aaa
adc
jmp
rcrb
lods
gs
ror
movsb
hlt
sahf
leave
movb
flds
push
into
add
loop
add
ret
test
js
cmp
push
cs
sahf
aas
and
rcrl
cmp
les
dec
adc
sub
mov
pop
out
adc
mov
inc
movsb
push
push
push
aad
add
xor
aam
and
pusha
and
mov
mov
dec
ret
push
mov
lea
push
lock
sbb
add
mov
add
and
adc
xchg
shrb
shll
sub
add
xchg
jle
or
stos
or
mov
add
and
imul
aam
hlt
add
js
mov
hlt
sub
dec
xor
inc
pminsw
dec
aam
or
add
mov
cli
test
jae
imul
adc
or
clc
jmp
adc
add
mov
xchg
shrb
roll
dec
mov
add
js
out
xlat
test
jecxz
outsb
aad
add
push
pusha
and
sub
lcall
test
push
jne
mov
and
inc
loope
and
not
adc
fdivs
and
shr
testb
rolb
iret
dec
adc
clc
loopne
xor
ret
outsl
jmp
jmp
cmp
ja
xor
add
jno
sbb
lock
test
movsb
dec
ss
adc
cmp
fsubl
and
or
mov
mov
adcl
jmp
enterw
xchg
fmuls
imul
mov
push
adc
movl
push
outsb
sub
inc
xchg
inc
loope
int
dec
add
add
and
pop
adc
pop
sarl
ret
rorb
mov
cmp
adc
or
shr
inc
cmp
mov
xchg
lock
mov
dec
adc
adcl
or
adcb
enter
stos
dec
push
mov
or
xchg
add
decl
jmp
test
xchg
push
leave
ret
and
daa
mov
mov
cmp
stos
mov
jp
outsb
push
sbb
pop
loop
loopne
inc
add
xor
or
mov
lret
lock
sub
adc
inc
jecxz
push
and
xor
test
mov
xchg
inc
sbb
sub
pop
inc
lea
push
xchg
loope
push
test
inc
sbb
cltd
movsl
jmp
ret
js
sbb
loop
add
or
adc
test
sbb
popa
sub
mov
addr16
js
mov
sbb
cmp
inc
or
add
ljmp
ret
leave
jmp
dec
lods
dec
pop
lret
and
imul
dec
mov
shl
in
sahf
or
mov
jl
mov
popa
lods
pop
dec
rcl
push
in
or
mov
mov
adc
stos
dec
or
jo
xchg
into
andl
xchg
dec
adc
sahf
add
cmp
mov
aaa
xchg
pusha
es
add
and
js
jbe
lret
js
jmp
add
cld
in
pusha
pusha
cmp
into
into
or
clc
jbe
add
pusha
adc
fsubrs
daa
add
sarb
es
cmp
shr
adc
push
pop
js
popa
rclb
mov
adc
je
test
rcrb
test
clc
icebp
nop
push
nop
lods
movsb
daa
pusha
dec
cmp
cli
mov
pushw
outsb
sub
jle
in
xorb
adc
xor
nop
adc
clc
or
notb
sub
pop
inc
int
jno
fdivrs
enter
cmp
push
pop
insl
pop
add
mov
les
sbb
sbb
sub
push
repnz
pusha
jne
cmpb
subb
addl
xor
sbb
jo
dec
ss
ret
sbb
pop
sbb
fcompl
out
call
rcrb
pop
loope
dec
mov
data16
push
add
dec
leave
int3
jecxz
xor
pusha
jo
imul
fdivrs
lea
or
ficoml
rcll
pop
shlb
rcrl
xlat
fcmovnbe
push
outsb
repz
and
or
pop
push
daa
push
fidivrs
push
dec
cld
aad
roll
sbb
lea
cmp
dec
jp
pusha
ljmp
into
inc
loopne
add
shll
push
push
fs
add
cmpl
mov
cltd
mov
mov
call
push
inc
jp
pushf
xor
adc
inc
dec
lods
mov
pusha
movsb
adc
and
enter
es
mov
adc
sub
lret
sub
mov
jnp
insb
lods
sub
sahf
add
sbb
mov
test
jmp
jbe
inc
sbb
push
add
sub
add
mov
inc
or
std
mov
add
js
roll
adc
sbb
sub
stos
xor
push
add
rorl
push
push
lret
push
lock
testb
sbb
shll
xor
les
xor
rolb
sub
push
cmpsl
aad
incb
in
arpl
sbbl
adc
inc
dec
test
movsb
out
jne
int3
mov
lret
lods
popa
and
xor
mov
pop
dec
inc
add
fs
in
loop
adc
into
sbb
push
sbb
rcrb
loopne
loop
test
adc
adc
shlb
xlat
dec
mov
mov
add
jp
mov
push
add
lcall
shlb
mov
jo
xchg
loope
xchg
mov
inc
flds
xor
push
and
add
jecxz
loopne
adc
js
xor
mov
dec
mov
add
xchg
mov
hlt
push
pop
xchg
inc
cmpsl
int3
adc
stos
pop
data16
add
and
lods
test
test
inc
xor
loopne
aas
pusha
loopne
aad
inc
imul
fcom
cmp
push
bound
pop
cmp
xchg
sub
push
js
lock
add
xchg
sbb
rorb
sbb
in
or
fiadds
or
push
iret
les
orb
lds
mov
dec
in
dec
aad
inc
lea
lock
mov
pop
mov
int3
or
lret
cli
push
pop
sbb
incb
add
loopne
lcall
push
adc
xchg
mov
pushf
inc
xchg
mov
in
add
or
shlb
test
test
nop
inc
in
repnz
or
mov
jae
inc
call
mov
pop
push
mov
push
xor
gs
dec
or
xchg
mov
sbb
push
push
sbb
push
ret
dec
push
sbb
push
push
and
sub
add
add
mov
push
dec
push
lods
pop
movb
decb
outsl
leave
ljmp
loopne
inc
mov
mov
mov
inc
jo
adc
js
ret
mov
xor
jae
dec
aam
sbb
push
cmpsb
ret
and
push
enter
rclb
mov
adc
imul
cmpsl
ret
inc
sub
fxch
hlt
pop
cld
jb
push
in
insb
orl
inc
cwtl
aam
mov
or
dec
out
push
add
sbb
cmp
ss
mov
push
adc
lods
or
push
out
sub
push
mov
movsl
add
mov
xchg
test
inc
jmp
mov
test
pop
xchg
popf
outsb
mov
in
imul
cmp
data16
sbb
js
mov
stos
add
movsl
pusha
mov
xchg
jecxz
mov
imul
pop
lret
dec
rorl
lods
adc
pop
lret
fs
mov
or
je
mov
mov
adc
adcb
mov
in
fidivl
lret
add
xor
inc
push
data16
lods
or
pop
jnp
rolb
and
lods
test
jg
pop
or
movsb
cmp
into
sub
push
inc
loop
and
or
xor
inc
and
mov
cwtl
or
pop
dec
fisubrs
pop
or
lds
loope
adc
incb
push
push
scas
cld
dec
loopne
mov
mov
movsl
mov
pop
pusha
cmp
adc
rolb
ret
pop
aam
add
add
jp
rclb
push
and
stos
sbb
insb
or
into
xor
add
insb
pusha
lods
in
mov
rcrl
jp
jo
mov
test
mov
mov
loopne
mov
push
xchg
ret
fsubl
in
lcallw
pop
js
mov
pop
add
insl
das
out
rol
jecxz
inc
cmc
mov
sub
imul
cmp
pop
sbb
push
xor
and
and
or
push
sbb
sti
cmp
xchg
add
sbb
mov
and
mov
rol
mov
mov
adc
mov
clc
in
and
test
ss
sub
leave
mov
test
sub
cmpsb
push
int3
or
jb
mov
jbe
stos
adc
pushf
pop
and
mov
sbb
mov
cmove
popa
mov
jo
dec
mov
rclb
js
mov
je
mov
mov
push
jo
mov
stc
pop
push
sbb
movl
loopne
mov
lock
pop
xchg
imul
or
push
and
mov
pusha
add
jle
sub
mov
adc
divl
aaa
ret
xor
mov
jns
cld
fsubr
fcmovb
lea
mov
shlb
push
sahf
dec
sti
inc
test
add
xor
or
mov
mov
pop
das
adc
mov
cmp
pop
pop
data16
addl
add
sbb
inc
or
push
ficomps
cmp
mov
push
ret
lods
insb
les
dec
and
cmp
gs
sbb
add
dec
popa
and
test
inc
movsl
sbb
mov
adcb
pushf
add
sbb
fbstp
fnsave
push
in
mov
shlb
pop
pushf
jp
cmc
pop
pop
or
cmp
xor
movsb
rcrl
add
mov
mov
pusha
icebp
xor
andb
xchg
dec
and
push
inc
ret
insb
pusha
lock
call
push
movsl
nop
mov
nop
pushl
popa
adc
insl
insl
mov
lock
mov
faddp
loope
test
and
in
push
cld
loope
pop
and
sbb
sbb
xor
pop
test
int3
mov
mov
ljmp
and
add
mov
push
mov
icebp
mov
cmp
ss
pushf
and
or
mov
cmp
inc
fsubrl
mov
sub
int
sbb
loope
adc
int3
shl
ret
mov
es
cmp
push
xchg
or
xor
rorb
mov
and
jp
lock
push
repz
xchg
mov
out
pavgb
shr
add
xchg
pop
popf
pop
inc
pop
scas
cmp
rorb
rol
out
test
mov
les
loop
inc
xchg
xchg
mov
in
push
jp
push
and
mov
push
jo
adcl
and
arpl
push
pushf
xchg
inc
jecxz
mov
imul
xchg
lea
push
dec
xor
and
add
cmpsb
stos
mov
int3
or
lock
pop
sbb
aad
add
xchg
lcall
add
in
sbb
loope
flds
es
xor
xor
lret
dec
mov
rcr
rol
pop
push
mov
mov
xor
lock
mov
sub
adc
imul
or
fcomps
aam
inc
jp
mov
sarb
sbb
mov
hlt
xchg
fldl
test
mov
rcl
cmp
rcl
xchg
int3
sbb
adc
xchg
mov
js
das
cwtl
cwtl
sub
lret
mov
jno
sbb
dec
dec
pop
pop
sbb
push
rcrb
ret
mov
mov
mov
jnp
mov
mov
jbe
js
or
cs
push
xor
loopne
xchg
loop
cld
or
sbb
push
addb
cmp
dec
sbb
sbb
ret
nop
pusha
mov
pop
push
outsb
loopne
rcll
cmp
add
fnstcw
pop
std
sbb
push
mov
add
ret
outsb
pop
sbb
and
xchg
movsl
mov
cmp
sbb
vpmaxsw
push
fdivl
bound
ret
push
lcall
les
mov
repz
dec
jbe
js
or
lret
mov
and
mov
jmp
sbb
sub
add
loopne
xchg
call
test
pushf
cltd
xchg
cs
nop
adc
push
and
in
adc
cmp
dec
jbe
dec
test
xchg
or
cmp
add
movsb
fwait
js
cwtl
add
add
mov
packssdw
bswap
insl
add
lcall
outsl
hlt
ljmp
outsb
dec
aam
cmp
es
cmp
outsb
push
add
xchg
mov
adc
loopne
xchg
into
push
push
sti
out
out
adc
shll
or
cld
fistps
inc
jno
adc
ficomps
cmp
nop
hlt
add
mov
add
out
jle
xchg
mov
sub
nop
pusha
mov
sub
push
mov
mov
xor
cmp
jbe
test
mov
in
pop
data16
add
cmp
lods
xchg
mov
sbb
sbbb
mov
xchg
add
sbb
mov
in
inc
jecxz
fimuls
jo
jne
or
imul
scas
insb
jp
movsb
xchg
aaa
and
test
adcb
gs
add
mov
cmp
or
xor
shlb
mov
inc
data16
inc
fwait
xchg
jle
push
xor
inc
add
or
fldenv
or
sbb
pop
jb
lock
push
sbb
lea
jo
mov
popa
int3
pushf
addl
aas
mov
incb
xor
inc
dec
mov
xor
xchg
xchg
mov
sub
xchg
ror
mov
pop
add
sysenter
clc
addl
inc
cmp
call
dec
mov
ss
pop
psubusw
mov
sahf
pushf
xor
pop
gs
rolb
mov
cmp
ljmp
jp
loop
orb
pop
adc
mov
cmp
pop
add
jp
cmp
sub
les
add
and
jne
mov
adc
jno
out
pushf
pusha
add
stos
mov
mov
xor
pop
sub
jp
subb
ret
popf
push
orb
cmp
mov
adc
loopne
lret
ret
rorl
jo
sub
rcrb
dec
or
mov
icebp
push
sbb
mov
sbb
adc
adc
push
pop
or
in
sbb
pop
movsl
xchg
push
mov
outsl
dec
loope
je
jle
or
jp
mov
aam
pop
add
pop
dec
into
push
lock
xor
xor
into
pop
je
sbb
inc
add
jae
push
mov
xchg
pushf
mov
push
out
inc
jecxz
sbb
and
pop
nop
push
out
inc
inc
push
and
dec
loop
sahf
mov
mov
bound
ret
or
inc
sub
ret
mov
xchg
add
push
popa
loope
mov
push
fs
aam
dec
outsl
int3
int3
arpl
inc
jp
and
hlt
or
and
hlt
xchg
push
xchg
cmp
aam
test
xor
xchg
mov
hlt
cmp
pop
or
lock
cmp
lret
popa
xlat
jne
ds
in
mov
sub
fcompl
mov
push
leave
loop
pusha
or
jbe
jno
and
roll
cmp
pop
or
cmp
bound
and
xchg
add
shr
pop
movsb
adc
inc
add
dec
popf
in
mov
xchg
popa
ret
push
add
cld
push
or
mov
or
add
dec
lret
out
push
fs
flds
push
ss
sbb
xor
js
jp
push
add
es
das
leave
popa
lock
xchg
dec
bound
cmp
pop
mov
test
je
sbb
out
incb
and
sahf
aam
out
dec
push
xchg
cmp
pop
enter
xchg
mov
jo
push
xchg
push
cwtl
jle
add
inc
sub
test
adc
push
into
or
jl
rclb
jp
xchg
dec
inc
adc
sbb
divb
icebp
movsb
mov
xchg
push
cwtl
xorl
xchg
loopne
das
jo,pn
add
cwtl
das
imul
sub
push
xor
xor
nop
jecxz
jecxz
negb
sub
push
jo
cmp
fs
inc
mov
cmp
gs
add
xchg
adc
fs
inc
mov
lret
mov
call
dec
dec
jb
push
int3
scas
push
jp
sbb
lea
inc
xchg
jecxz
enter
xchg
hlt
leave
ret
cli
mov
add
dec
test
jo
push
pushf
push
and
sbb
shlb
ja
flds
or
jb
and
outsb
sub
ret
xlat
cmp
out
inc
addr16
sub
or
add
bnd
cmc
xchg
cmc
xchg
jecxz
adc
pusha
and
mov
mov
fldcw
ljmp
jp
and
and
lock
cmc
pop
add
cmpsb
sbb
dec
inc
or
sbb
xchg
adc
ss
sub
cltd
rorl
lret
jp
sub
add
out
in
gs
loope
pusha
dec
mov
fisttpll
ret
inc
addb
or
xor
iret
shlb
pop
dec
pop
mov
addb
adc
xor
nop
sbb
or
sub
sbb
cmp
je
cmp
add
or
cmp
jo
xorl
notl
xor
and
sub
adcb
sbb
or
into
loopne
push
test
pusha
push
jne
mulb
loop
cwtl
cmp
rclb
into
rorb
push
aam
cmp
outsl
inc
inc
test
inc
ret
jecxz
fdivr
into
imul
jl
jle
xchg
add
jo
and
xchg
into
push
mov
insl
loopne
or
mov
or
ret
jle
pusha
or
pop
jmp
retw
sarl
orl
mov
push
mov
adc
jg
push
and
pop
sbb
lods
jo
push
inc
push
sarl
arpl
je
loopne
mov
push
test
sub
popa
fs
aad
mov
popf
dec
jbe
mov
int3
cmp
push
adc
mov
pop
inc
lahf
clc
adc
and
lock
mov
add
add
xchg
add
out
std
xchg
or
sbb
and
orb
push
cs
cmpsb
es
adc
sub
add
sahf
fst
or
add
mov
add
loop
cld
cwtl
mov
rcrb
shlb
enter
mov
mov
cld
lret
mov
and
push
bound
add
jnp
adc
or
add
rorb
and
push
in
adc
add
mov
movsb
test
test
pusha
mov
pushf
fildll
shll
jmp
sub
or
pop
sub
dec
push
push
lcall
shr
or
inc
and
push
inc
or
sub
ret
add
loope
or
inc
mov
lds
test
stos
insb
or
and
in
xor
add
mov
jle
pop
mov
push
ror
clc
pop
add
loope
jge
inc
sbb
or
call
adc
xchg
movsb
loopne
xchg
or
add
jb
insb
or
pop
pop
add
cmpsl
and
outsl
ret
fisubrl
xor
push
cmpsl
cmp
inc
andb
mov
sar
mov
lcall
xor
rorl
xchg
shrb
cwtl
inc
push
mov
inc
jae
and
push
adc
sbb
adc
and
lock
jg
sub
rcll
insl
pusha
xor
and
add
fists
lock
pop
or
fadds
and
mov
inc
inc
or
add
pop
mov
and
mov
add
popf
adc
or
rcll
aas
push
push
test
pushf
repnz
sbb
cli
pusha
mov
test
loope
inc
pop
or
push
cli
fsts
sbb
xor
pop
dec
ljmp
daa
add
xlat
push
jbe
rorb
shlb
test
xchg
cmpsb
add
jmp
mov
jno
rcrb
ja
cs
mov
rcrb
smsw
clc
add
add
adc
inc
insl
or
loop
add
out
loop
aam
loop
pop
adcl
jb
push
or
popf
lea
test
loop
popa
insl
jmp
ss
fs
dec
push
js
fiadds
les
inc
dec
add
int3
pop
jl
sahf
mov
cmp
adc
or
push
dec
in
and
dec
add
test
cltd
movsb
les
add
xchg
sbb
jb
add
int
add
stc
test
fldl
call
nop
add
ljmp
pop
sbb
xchg
mov
icebp
dec
dec
inc
in
sbb
adc
mov
sbb
jne
xor
xor
jns
lock
jno
cmpsb
in
dec
push
dec
dec
cmp
jo
iret
aad
jae
add
dec
mov
gs
and
call
adc
or
leave
aam
push
jmp
pop
test
and
mov
lcall
push
sub
ret
or
cmpl
test
inc
shl
inc
sub
cmp
sbb
xchg
mov
cs
popf
test
dec
aas
pop
or
pop
ficompl
js
lcall
dec
cmp
mov
inc
pop
les
notl
sbb
outsb
add
cmp
int3
enter
rcrb
pop
and
or
mov
out
test
ljmp
stos
and
or
mov
insb
outsb
xchg
ds
into
push
cmpsb
loopne
sbb
ret
ret
mov
mov
sbb
std
push
inc
pop
dec
mov
loopne
mov
les
inc
rol
xor
xor
or
xchg
or
bound
test
mov
pop
sbb
mov
push
test
data16
ret
xchg
and
les
add
andb
call
xchg
or
cmc
les
enter
lock
jl
sub
jae
cmp
dec
sbb
mov
mov
push
faddp
jmp
loop
push
add
adc
push
jp
xor
adc
mov
add
mov
sbb
hlt
jnp
adc
sub
ret
mov
add
fstps
fisttpll
cs
xchg
insb
push
out
dec
mov
xchg
add
mov
test
inc
or
push
xor
xchg
sbb
es
ret
xor
mov
jl
imul
push
adc
and
loopne
mov
mov
jmp
mov
inc
xchg
mov
js
xorb
add
fstpt
adc
xor
inc
pop
adc
or
and
popf
jno
imul
jo
xor
sahf
ficoml
push
sub
mulb
add
call
and
bound
call
mov
mov
je
xor
or
popf
mov
mov
xchg
dec
push
jo
cmp
add
nop
xor
enter
imul
mov
enter
inc
popa
inc
lock
lods
pop
dec
mov
pop
fidivrl
sbb
call
push
dec
and
mov
icebp
xchg
inc
shlb
cmp
test
sbb
sbb
inc
add
out
inc
push
dec
in
pop
jp
sub
out
loope
add
xor
pop
push
ret
add
jecxz
mov
push
adc
cwtl
mov
sbb
sub
loopne
and
or
sub
mov
add
adc
fs
and
add
fisubrl
jmp
jbe
push
sbb
leave
jecxz
ss
sbb
mov
inc
mov
pop
add
and
jmp
inc
test
into
lods
roll
and
call
adc
or
cmp
adc
add
daa
imul
sbb
xchg
jnp
sub
push
adc
jmp
adc
loop
cmp
dec
or
jb
or
sbb
daa
push
dec
rcl
jbe
adc
mov
pop
lea
xor
aaa
insb
inc
jmp
and
or
addr16
xorl
or
lock
mov
lods
push
inc
jns
call
in
cltd
push
and
jae
cmp
sbbb
sub
mov
rcrb
loopne
cmp
inc
cld
cltd
lcall
or
xchg
inc
cmp
pop
fs
add
fbld
push
and
push
sub
aam
jbe
mov
mov
rcrb
mov
xchg
incb
loopne
sbb
pop
test
xor
test
test
dec
xorl
cmp
add
dec
mov
call
out
xchg
dec
rcl
mov
test
or
fmuls
or
mov
loop
ss
and
lea
jne
add
push
pop
movsb
push
or
xchg
mov
mov
arpl
jno
sahf
enter
push
adc
and
cmp
imul
cmp
outsl
adc
lea
dec
adc
cltd
mov
sbb
cld
mov
data16
and
mov
fs
js
xor
andb
sub
inc
sbb
rcr
cmc
les
outsl
pusha
mov
int3
inc
loop
fisubrs
jl
out
and
outsb
xchg
lods
daa
push
adc
ret
call
sub
mov
sarl
cltd
jne
and
sbb
mov
pusha
arpl
push
out
add
xor
lret
dec
addr16
pop
cmpsb
mov
pop
fwait
clc
adc
pop
inc
push
adc
and
les
xor
adc
xor
and
jnp
hlt
xchg
int3
push
adc
pusha
dec
jo
fwait
sarl
dec
notl
mov
inc
je
in
sub
rcr
nop
push
pusha
or
mov
push
push
mov
pop
test
and
dec
bound
pop
push
or
mov
fiaddl
test
es
sub
lods
in
or
mov
icebp
mov
push
push
and
fmuls
add
push
push
fidivrl
fwait
stos
cmp
inc
adc
cmp
mov
mov
cmpsb
push
dec
pop
sbb
inc
xor
sub
cli
sub
push
outsb
pop
xchg
jo
popf
pop
dec
ret
push
jecxz
adc
lret
xlat
mov
repnz
adc
and
xchg
xor
dec
mov
dec
sub
inc
ror
mov
js
test
test
adc
adc
add
int3
cmp
movsl
pop
call
or
loope
mov
push
movsb
xchg
adc
lods
adcb
into
xor
xor
aaa
ror
xchg
bound
imul
cmp
fs
sbb
and
mov
insb
or
add
xchg
inc
pop
xchg
add
mov
dec
test
int3
sbb
and
stc
cld
xchg
push
jbe
push
nop
outsb
rolb
fidivs
rorb
sub
push
push
cmp
inc
arpl
sbb
add
xchg
call
enter
pop
fldlg2
mov
dec
ror
sub
push
push
mov
fdivp
jo
push
mov
test
mov
mov
sbb
shr
outsb
mov
dec
addl
dec
test
inc
push
mov
mov
mov
daa
dec
xor
das
sbb
adc
pop
test
and
push
daa
pop
pop
rolb
mov
enter
adc
sbb
fsubs
mov
in
sbb
mov
mov
push
dec
aam
js
adc
push
jo
lea
mov
jbe
or
movsb
into
push
mov
dec
inc
ljmp
add
pop
aas
or
cmp
jo
hlt
ret
jb
cmp
push
js
out
dec
imul
push
pxor
jbe
or
shll
loope
lret
imul
xor
mov
or
xor
push
cmpsb
sbb
add
jp
push
std
out
mov
mov
inc
rorb
sahf
rclb
adc
addr16
mov
arpl
push
pusha
mov
imul
test
lock
pushf
in
mov
add
adc
rcr
in
and
sbb
mov
movsl
sti
push
or
add
add
mov
movsl
lret
ret
ficomps
adc
push
ret
pavgb
jo
hlt
add
push
imul
mov
jns
mov
jp
or
shrb
or
dec
scas
test
xor
push
jmp
test
ss
adc
cld
in
mov
in
repnz
popa
dec
aad
call
cmp
mov
dec
and
and
mov
add
lods
pop
cmc
sub
mulb
xlat
test
mov
movsb
jb
sahf
mov
sbb
add
pop
cs
loope
loopne
imul
sbb
mov
mov
xchg
sbb
cmp
pop
mov
ret
push
add
xchg
and
xor
dec
adc
cmp
aaa
mov
jbe
inc
mov
sbb
mov
repnz
inc
mov
loopne
fsubr
mov
adc
xchg
adc
xor
in
fldl
outsl
cltd
push
jp
shll
rolb
pop
ja
pop
mov
mov
dec
jo
gs
adc
jl
pop
je
sahf
or
js
and
cmp
addr16
shl
rcrb
leave
lret
mov
in
cmpb
mov
ret
in
sbb
sbb
in
sahf
jbe
call
popf
or
adc
add
flds
arpl
mov
jo
sub
js
mov
ret
imul
mov
sbb
pop
rorl
push
rorl
pop
add
sbb
mov
cmp
cmp
cwtl
pop
or
sbb
inc
xchg
aaa
movsb
popa
adc
jo
mov
test
sub
adc
jb
lock
movsb
xchg
cwtl
add
pusha
jno
sti
or
dec
cmp
push
sbb
into
into
xchg
mov
cmp
out
lock
sub
xchg
ljmp
jb
or
in
ja
adc
adc
pop
dec
js
mov
mov
lock
adc
and
jp
mov
push
out
xchg
dec
xchg
xchg
ss
xchg
inc
lods
jp
movb
jo
test
outsb
cmc
mov
lea
jnp
insl
cmp
cmp
sarl
ss
sub
mov
aaa
je
mov
sub
pop
movsb
aam
mov
popa
lock
dec
test
mov
cmp
pushf
movsb
lods
cmp
mov
lea
repnz
lea
daa
pusha
add
nop
enter
adcb
insb
pop
and
fldl
or
mov
adc
xor
dec
sbb
sub
add
pop
popa
out
test
cwtl
pop
aaa
xchg
push
inc
cmp
sub
sarb
and
pushf
mov
xchg
pushf
cli
ss
sub
out
sub
dec
addr16
enter
mov
cmpsl
lods
xchg
dec
cmp
andb
cmp
inc
inc
sub
dec
clc
insb
xor
idivb
dec
sbb
andb
push
inc
cmp
jmp
mov
je
lret
rorb
mov
shl
push
adc
push
fsubrs
les
das
dec
addr16
push
jo
jno
lds
sub
push
push
mov
sbb
xor
lcall
dec
mov
lock
cmp
or
dec
roll
outsl
mov
in
inc
repnz
ret
out
cwtl
inc
shlb
or
xchg
mov
int3
pushf
lods
xor
sarb
fisubrs
cmp
sbb
lea
mov
out
jmp
ror
addps
outsl
bound
mov
jnp
clc
fidivrl
in
or
mov
out
jo
xor
lods
lods
lret
mov
and
mov
add
pusha
aam
and
mov
cwtl
mov
or
andb
es
and
mov
mov
ds
aad
mov
cltd
xor
ret
xchg
mov
xorl
adc
push
pop
dec
inc
mov
jbe
xchg
sbb
hlt
sbb
mov
sbb
pop
and
sarb
add
outsb
xor
mov
add
lret
pushf
rcrb
ret
rorb
dec
lret
negl
or
mov
xchg
lods
or
sbb
rol
push
or
sub
adc
movb
cltd
or
or
mov
dec
inc
xor
cmc
js
sbb
mov
cmp
test
enter
in
cs
ret
xchg
mov
inc
into
adc
push
lret
xor
xchg
pop
sbb
mov
out
inc
arpl
pop
mov
faddl
jo
jno
inc
les
clc
or
lock
jp
mov
js
ss
adc
daa
jecxz
pop
mov
jno
sub
inc
sub
mov
dec
shlb
mov
fs
xchg
dec
fdivr
les
mov
add
sub
in
loop
or
and
push
inc
dec
repnz
push
loope
stos
scas
cmp
adc
mov
pop
pop
cmpsl
lcall
add
out
mov
xchg
les
pop
mov
clc
sbb
push
pop
int3
or
arpl
push
rcrb
dec
or
xchg
outsl
les
or
andb
imul
nop
mov
inc
mov
test
aam
xor
xchg
adc
mov
roll
call
in
ret
xchg
xor
clc
ficomps
dec
sbb
sbb
xchg
outsb
js
adc
adc
xchg
fcompl
movsb
ja
adc
xchg
movsl
dec
leave
xchg
dec
jecxz
jb
pop
adc
add
movsl
js
aam
xchg
inc
add
cmc
xchg
rorl
lret
push
fs
dec
add
ja
add
es
cmp
push
push
and
sub
add
pop
cwtl
xchg
outsl
sbb
movsb
inc
es
jo
nop
dec
cmp
int
jns
inc
std
xor
xlat
pop
in
orb
outsl
enter
sub
pop
ds
push
les
add
or
xchg
ret
in
aaa
aaa
add
mov
fmul
js
filds
das
push
popf
mov
test
add
add
addl
sub
jmp
or
sbb
push
test
xchg
xor
fwait
add
aaa
xor
dec
xchg
loopne
adc
mov
addb
xchg
push
incl
addb
xor
les
sbb
xor
and
inc
push
js
test
adc
inc
jp
add
sub
xlat
sarb
xchg
xchg
dec
xchg
pushf
clc
or
add
pushf
adc
out
test
or
fcomp
push
adcl
add
push
je
pop
or
xlat
rorb
and
or
sbb
data16
loopne
cld
mov
iret
lret
cmpb
nop
or
sbb
popa
jae
add
adc
leave
daa
and
and
push
mov
ret
fadd
pop
dec
adc
and
push
faddl
add
inc
in
and
aas
xchg
into
shl
mov
imul
fcoms
popf
dec
push
push
pushf
rorb
push
mov
sub
insl
sbb
sbb
lcall
pop
adc
dec
sarl
mov
and
ja
fcompl
jbe
xchg
shlb
mov
lods
movq
testl
sbb
ss
shl
or
push
jmp
aam
iret
fwait
loope
js
and
cmp
adc
xchg
loopne
pop
xor
or
pop
push
in
popa
adc
jbe
adc
adc
adc
pushf
lea
and
add
add
add
lock
outsl
inc
add
insb
das
add
mov
lods
std
pop
mov
cmpsl
push
fidivs
psrlq
mov
add
sub
insl
shl
push
mov
inc
adc
push
push
adc
or
iret
movsb
sub
ds
cmpsl
push
pop
jl
dec
repz
movsl
ficoms
cmpsl
test
push
cmp
cmp
and
mov
andl
mov
stos
and
aam
fsubrs
or
leave
dec
daa
pop
inc
push
cmpsb
fisubl
enter
xor
addr16
mov
mov
fstpl
inc
add
add
aas
jge
shrb
lea
loopne
adc
enter
dec
and
mov
jbe
adc
clc
inc
and
add
ror
lods
js
cmp
inc
enter
cmpsb
mov
sub
rorl
push
pop
inc
outsl
dec
mov
adc
cmpsl
or
and
add
ror
inc
iret
mov
fsubrl
nop
xchg
ret
enter
add
cmp
ret
xor
or
sub
outsl
mov
add
mov
in
push
sub
jbe
dec
jp
enter
fs
out
dec
int
push
adc
lahf
sub
cli
adc
xchg
loop
xor
lds
dec
shrb
sub
xchg
js
xchg
andb
loop
jp
pop
mov
sub
in
sbb
subb
shlb
shlb
or
arpl
add
test
fs
mov
pop
popa
cmp
lea
inc
inc
das
adc
and
add
xchg
push
pushw
test
ret
outsb
jb
jmp
nop
mov
stc
dec
sub
fdivrs
cmpsb
xor
daa
loopne
pop
adc
inc
test
jo
or
sub
idivb
mov
nop
cmp
jno
sbb
xor
test
ret
xor
lcall
jns
add
rolb
cmp
icebp
ret
inc
xchg
mov
dec
push
mov
lret
pop
cmpsb
popa
push
dec
cmpsb
sti
cmp
sub
pop
je
gs
lea
jo
xor
push
push
mov
in
scas
and
les
mov
lret
or
loopne
mov
rolb
cli
les
dec
xor
xchg
inc
fisubs
cmpsb
pop
or
nop
lcall
cld
repz
sub
mov
xor
or
dec
dec
dec
adcl
xchg
mov
xor
es
or
xchg
add
pop
fdivrl
inc
xchg
or
xor
and
lock
mov
roll
mov
pushf
mov
stos
push
sahf
xchg
jmp
mov
or
and
adc
mov
test
sbb
sbb
adc
and
enter
call
push
and
mov
fs
pusha
imul
dec
sbb
outsb
mov
mov
xor
lcall
push
mov
rcrb
add
dec
mov
sub
sbb
rcl
sub
xor
andb
dec
or
xor
xor
and
pmaxub
inc
mov
lret
adcl
jb
dec
lahf
xchg
lock
mov
adcb
pop
inc
mov
xchg
push
mov
mov
xor
lds
js
adcb
aam
lret
fs
or
sbb
cmp
rclb
sahf
dec
ret
jg
adc
daa
mov
sub
xor
mov
popf
ds
fsubl
rcrb
or
dec
subb
xchg
nop
in
cwtl
jno
inc
jp
mov
xor
push
shrb
ror
xchg
ret
or
pop
fld
rol
pop
adc
cmp
sarb
outsb
xor
mov
jbe
call
ret
push
hlt
and
arpl
imul
cmpsl
lock
push
mov
push
or
leave
xchg
orb
push
movsb
insb
xchg
fmuls
sbb
cwtl
jno
int3
rorb
rcrb
xorb
fidivrl
imul
sub
out
mov
daa
lock
incl
lock
or
scas
or
xchg
jbe
add
enter
mov
xchg
or
mov
fs
rcrl
pop
add
outsb
jbe
icebp
xchg
inc
repnz
add
xor
rcrb
xchg
sbb
push
add
dec
push
mov
sahf
dec
testl
and
add
in
or
iret
fdivl
idivl
add
and
ljmp
fldcw
pop
mov
push
incl
or
cmp
add
sbb
ljmp
cmp
icebp
jo
or
popf
xor
jmp
loop
test
pop
ret
mov
orl
daa
int3
push
mov
pop
adc
sarl
dec
lahf
cwtl
mov
in
sub
add
jecxz
mov
mov
sahf
lock
insb
loope
sbb
mov
xor
jbe
loopne
inc
mov
jb
mov
push
bound
out
sub
hlt
movsb
sbb
imul
and
xchg
xor
pop
or
movsl
push
sub
loopne
pushf
outsb
scas
les
or
fcmovnb
les
sub
popf
mov
clc
shl
ss
in
mov
add
ficoms
push
dec
pop
jb
xchg
sub
mov
scas
or
cmp
pop
jae
mov
dec
ds
ss
push
or
or
ret
sbb
mov
sbb
and
xchg
imul
mov
push
push
dec
incb
inc
lock
in
mov
xor
std
and
cmp
ficoml
adcl
mov
or
jb
jne
push
hlt
xchg
or
aam
jo
push
movsb
ds
arpl
ret
cwtl
pusha
fs
sub
loop
jge
cmc
add
mov
popa
cmpsl
xchg
mov
push
add
xor
sbb
rorl
outsb
mov
jl
subl
popa
dec
int3
addr16
cltd
cmp
xor
push
arpl
add
fs
xchg
addb
outsb
inc
fs
push
xchg
jo
dec
jl
jo
xchg
cmp
loop
mov
lods
add
adcl
jb
adc
js
mov
jo
xor
push
push
jecxz
jo
loop
xchg
jo
pushf
fs
rcrb
inc
mov
daa
les
cmpsb
mov
cmp
popa
push
shlb
mov
add
pop
dec
addr16
es
push
lret
cmpsl
fsubs
cmc
sub
testl
sbb
mov
mov
cmpsb
repnz
imul
mov
mov
inc
sbb
dec
jmp
loope
cmp
pusha
ret
loopne
cmp
loopne
and
mov
out
loop
dec
clc
push
dec
add
jg
sbb
pop
nop
push
addr16
push
loop
push
test
ficompl
or
push
movsb
lds
xchg
ss
dec
sbbb
sbb
lock
movsb
add
jmp
sub
cmp
mov
sub
or
or
pushf
sbb
or
sbb
mov
mov
inc
sbb
loopne
cwtl
pusha
adc
fildl
mov
cmp
arpl
lcall
loopne
pop
add
js
inc
sub
shlb
test
enter
or
sbb
sbb
xor
push
jo
data16
inc
bnd
mov
xor
hlt
xchg
ret
or
or
push
outsl
sbb
call
sub
rcrb
mov
mov
mov
addl
mov
sbb
inc
movsb
push
fisubs
stos
xor
sahf
jb
loopne
add
push
test
xor
add
push
adc
jecxz
arpl
or
repnz
jge
outsb
test
lcall
test
push
dec
add
jp
push
and
sbb
loope
test
es
aam
pusha
push
sub
sbb
loop
mov
sub
lock
add
and
cli
cs
add
or
jle
test
fidivl
push
mov
push
mov
movsb
mov
xor
mov
sahf
push
loopne
rol
push
push
movsl
js
xchg
jae
sub
mov
popa
subl
dec
xchg
push
and
leave
cmpsb
popa
or
mov
xchg
mov
add
jp
mov
gs
jge
or
xchg
and
daa
imulb
xor
sbb
loopne
pusha
cmpsb
jae
scas
fs
and
loope
lods
sahf
out
dec
pop
xor
cmp
mov
sub
pop
mov
xorl
pusha
das
js
and
sub
xor
addr16
sub
pop
sahf
push
int3
xchg
mov
loope
les
xor
add
or
pop
call
or
lods
les
sahf
jbe
loopne
mov
mov
and
push
and
jbe
pushf
dec
adcb
jb
js
ret
mov
clc
sbb
sbb
into
sub
adc
xchg
sbb
inc
stc
dec
loope
ror
repz
mov
mov
or
ret
adc
fs
popf
xor
xchg
test
int3
dec
xchg
add
inc
xchg
add
push
mov
or
testb
popf
lods
add
sub
scas
push
mov
add
pop
inc
orb
nop
jo
mov
pop
xor
inc
loop
ljmp
ss
icebp
mov
or
xor
and
ljmp
ja
shll
inc
sarb
popa
addr16
stos
lret
loopne
popa
cmp
loopne
jb
jl
push
aad
fs
fcoms
loop
xor
inc
les
dec
pusha
push
and
add
jb
out
add
or
fcmovbe
sbb
or
jns
add
insl
shr
jmp
jnp
jg
cwtl
loope
jecxz
icebp
ret
shll
mov
gs
xor
inc
sub
xchg
popa
inc
sbbl
cmpsl
xor
je
cmpsb
js
or
or
js
mov
jl
test
sbb
push
imul
dec
loop
lret
shll
test
pop
adcb
faddl
and
movsb
adc
jo
and
pop
sbb
sbb
cmp
arpl
icebp
mov
inc
sbb
les
and
jnp
add
sbb
lea
sbb
bound
out
dec
add
bound
add
hlt
xchg
rol
enter
pop
and
test
jo
push
sbb
rolb
mov
add
xor
xchg
pop
das
jmp
adc
adc
mov
enter
cmp
mov
popf
and
pop
sbb
fwait
mov
mov
push
outsb
mov
sahf
dec
mov
push
xchg
push
inc
ret
cmp
hlt
js
inc
sti
and
xchg
mov
fcmovu
popf
popa
test
out
shll
mov
ss
daa
xchg
lcall
imul
or
movsb
add
push
int3
adc
pusha
mov
adc
or
cwtl
adc
xchg
mov
mov
add
movl
or
add
in
add
inc
pusha
out
fwait
outsl
call
mov
test
add
fcom
and
adc
sbb
rolb
or
jge
shl
or
inc
inc
mov
sub
adc
fcmovnu
outsl
cmp
mov
mov
or
mov
or
add
div
add
mov
pushl
add
add
push
call
mov
outsb
inc
lret
xor
add
cs
rcl
and
dec
rcl
rol
cltd
jge
mov
adc
and
rol
fcoms
cmp
jbe
sti
in
popa
push
or
and
cli
mov
or
mov
or
mov
push
or
icebp
mov
ret
incb
fwait
cmova
loopne
into
or
mov
push
or
aaa
xlat
out
stos
faddl
mov
and
pop
clc
ljmp
in
dec
pop
add
sbb
rcr
mov
clc
loope
sub
fsubrl
lret
adc
mov
pop
out
sub
iret
xor
add
cmp
sti
pop
mov
mov
cmpsl
dec
call
mov
mov
cmp
pop
add
jmp
not
sub
loopne
mov
shll
and
fcomp
sub
xchg
hlt
push
push
js,pn
or
hlt
push
lea
push
push
call
cmp
hlt
adc
lret
sbb
sbb
jecxz
hlt
rcl
cmp
mov
notl
outsl
mov
mov
out
mov
mov
add
pop
inc
lock
mov
jo
jnp
dec
dec
mov
sbb
daa
pop
fcmove
stc
aam
loop
add
fmulp
jbe
andb
movsl
xor
or
pop
testb
jg
ds
sbb
in
mov
mov
xor
ljmp
jp
push
enter
sahf
jp
mov
lret
lret
jp
sti
in
mov
ds
push
mov
sahf
outsb
sbb
mov
mov
loop
mov
mov
sahf
push
enter
xor
lret
xchg
outsl
fcomi
or
push
xor
or
outsb
mov
push
dec
push
ret
fcmovne
xchg
mov
lret
ret
sub
movsb
pop
mov
aas
or
ret
mov
mov
mov
mov
int3
sahf
dec
jp
sub
pop
fcmovnb
xor
cmp
sahf
into
or
xor
outsb
fdivrl
outsb
js
loop
sbbl
or
sub
cwtl
pop
or
cli
cwtl
inc
and
inc
dec
jo
xchg
enter
xlat
pop
adc
cmp
inc
mov
int3
adc
shlb
sarb
mov
addb
jo
dec
hlt
xor
adc
cmp
sub
sub
adc
add
sub
outsb
test
in
add
mov
jbe
int
add
adc
outsb
cmp
dec
and
cmp
aam
lret
andb
mov
jp
adc
dec
pusha
mov
insb
push
adc
hlt
loop
jp
jp
mov
and
push
mov
ss
push
push
jo
cmp
push
loop
out
cmp
adc
xchg
fidivrs
fadds
cld
push
sbb
dec
pusha
xchg
shlb
adc
insb
and
mov
jo
add
mov
in
cmp
ret
negb
dec
or
sub
push
mov
shll
jo
push
push
adcb
sbb
or
mov
xchg
cmp
sub
fadd
or
xchg
or
cs
xchg
loopne
adc
add
sub
push
clc
outsb
ja
mov
jp
push
fimuls
lock
loop
outsb
dec
sbb
xor
in
jp
inc
negb
add
or
pop
xor
jns
mov
push
add
xor
inc
and
ljmp
lcall
lcall
jo,pn
mov
pop
fcomps
stos
enter
inc
mov
pusha
cs
adc
loop
lock
adc
pop
hlt
push
or
fnstenv
adc
xor
add
lret
test
dec
add
push
ss
arpl
loopne
xor
or
pushf
sbb
cmp
rorb
push
cmp
xor
xchg
jle
mov
enter
xor
sbb
add
mov
int3
xor
out
xchg
jle
jp
loopne
pusha
cltd
clc
shr
push
ret
sahf
inc
mov
rcrb
push
sub
pop
ret
cltd
popf
push
aam
into
sub
xchg
pusha
popa
xor
sahf
sbb
mov
bound
sbbl
xor
insb
insb
sbb
pushf
push
dec
ds
in
int3
shll
jp
mov
dec
call
loop
inc
mov
sub
mov
dec
or
push
mov
ret
mov
das
ss
fiaddl
jnp
mov
push
rcrb
mov
mov
in
jmp
outsb
xor
push
add
lcall
jmp
dec
sbb
push
xor
nop
push
or
jb
adc
jp
adc
push
fisubrl
push
xchg
or
push
and
loop
adc
xor
insb
or
jg
bound
mov
scas
enter
dec
pop
lcall
imul
mov
xchg
pop
loopne
or
push
and
push
sub
outsb
inc
or
int3
push
xor
insb
ret
or
es
adc
push
cmpsl
shll
push
mov
ss
sbb
sbb
dec
or
dec
loop
xorb
add
pusha
not
sarb
pop
lods
mov
inc
and
mov
mov
xor
es
dec
dec
lret
loop
sbb
xchg
loop
mov
add
jl
dec
mov
cmp
test
sbb
mov
xor
mov
sbbl
arpl
pop
xor
cmpsl
imul
cmp
loop
in
fs
mov
mov
push
push
adc
lock
js
inc
push
xor
enter
or
pop
mov
or
add
or
add
ds
mov
sub
xor
sahf
into
lods
mov
jbe
add
test
bound
mov
sbb
or
outsb
int3
add
adc
jp
xor
adc
xchg
xchg
or
xor
sbb
mov
loop
mov
push
mov
dec
leave
and
sub
dec
outsb
adc
pushf
or
xorb
test
mov
lret
ss
popa
sbb
mov
pop
and
cwtl
out
enter
sahf
push
daa
adc
outsb
or
icebp
adc
sub
dec
push
push
lds
testb
cwtl
popa
fs
jl
fidivrs
and
sbb
inc
push
pop
sbb
xor
jp
repnz
push
inc
adc
jl
xor
pushf
in
int3
lcall
add
ss
rolb
adc
aam
jo
jo
out
jo
mov
mov
add
dec
outsb
push
push
sub
add
into
dec
push
push
dec
cmp
mov
push
xor
add
xlat
popa
mov
push
xchg
jl
pop
test
inc
test
pop
xor
pop
mov
cld
inc
xchg
loopne
adc
jp
add
testb
cwtl
enter
out
push
inc
mov
and
cmp
xor
mov
adc
dec
call
xor
mov
add
sub
in
mov
shlb
mov
insb
lock
sbb
jb
into
sbb
push
imul
adc
lock
cmp
add
push
or
add
jbe
mov
jbe
dec
mov
dec
mov
negb
cmpb
pop
and
pop
sbb
movsl
add
fiadds
push
dec
sub
call
dec
pop
repnz
add
jbe
mov
je
sbb
adc
or
adcb
mov
test
loopne
shlb
push
dec
pop
call
cld
mov
lods
lcall
xchg
stos
lods
dec
hlt
inc
inc
incb
add
mov
sub
inc
add
cltd
lea
test
jmp
sub
clc
std
movsb
ret
xor
shl
addr16
or
andl
sub
lcall
xor
xor
pop
gs
or
or
xchg
xchg
ja
mov
aam
hlt
int3
fistpll
dec
clc
mov
xor
mov
mov
ror
and
lea
or
arpl
jne
rorl
or
roll
and
jbe,pn
std
xchg
lret
fisttpl
ret
sbb
mov
int
aaa
sbb
and
mov
aaa
xor
mov
lock
mov
in
rol
add
aam
jmp
jge
int3
jb
sti
xor
hlt
sub
test
jbe
inc
add
push
in
xchg
cld
add
fwait
loopne
ss
rcl
push
sbb
fcoms
icebp
dec
incb
ljmp
sub
or
xchg
in
jmp
and
rol
cs
lret
das
shlb
roll
mov
ror
mov
add
fmuls
incl
fst
fsubs
lret
in
fistps
cmp
int3
loope
add
aad
dec
fs
push
push
sub
push
outsb
adc
dec
loop
dec
sub
cmpsb
repnz
xchg
or
pusha
cs
pop
call
sbb
enter
testb
jp
push
ret
lcall
and
inc
push
xor
cwtl
inc
cltd
inc
sub
clc
pop
xchg
pusha
loopne
sub
dec
xor
add
xor
bound
sbb
mov
or
and
adc
xor
dec
sbb
cwtl
clc
mov
mov
scas
test
mov
xor
jbe
pushf
push
dec
es
xchg
add
xchg
or
insb
xchg
xchg
divb
push
loopne
movsb
xor
cmp
push
push
push
dec
loopne
mov
pushw
jl
rclb
lret
dec
or
add
cmp
pusha
xorb
add
and
test
pusha
xorb
push
orb
mov
outsb
ljmp
mov
dec
lods
cmp
mov
popa
mov
jae
cmp
cmpsb
pusha
pusha
mov
mov
pushf
cmp
jo
add
inc
and
pop
je
or
pop
out
add
push
dec
push
push
or
or
xchg
sbb
fisubrl
xchg
mov
mov
add
push
and
mov
cmp
or
or
mov
loop
xor
out
scas
xor
cmp
or
inc
xor
movsl
addb
ds
dec
xsavec
pop
inc
adc
popa
addb
or
lcall
sub
sbb
jno
or
je
out
sbbl
mov
mov
loop
aam
ret
repnz
xchg
cwtl
fldl
push
mov
mov
push
faddp
mov
push
addb
push
or
paddq
jle
sbb
xor
mov
andb
cmp
repnz
int3
in
cwtl
add
cwtl
inc
jo
jp
sub
sbb
jo
pusha
cwtl
adc
mov
add
mov
lods
stos
rorl
push
ror
mov
sahf
pop
xchg
push
add
inc
or
cmp
ret
dec
lcall
nop
adc
mov
adc
sbbb
and
jge
cli
add
int3
or
cli
mulb
or
sub
icebp
rolb
push
add
push
mulb
sub
ret
enter
xor
dec
cmp
pop
aaa
lcall
push
cwtl
adc
push
pusha
pop
jo
xor
push
dec
mov
sbb
sub
push
pop
bound
or
pop
outsb
push
adc
dec
loope
sahf
cltd
sbb
aam
sbb
cmp
push
adc
sbbb
cmp
and
cmp
aas
loop
xor
adcb
jp
push
pop
xor
xor
repnz
adc
mov
outsb
cmp
loopne
shr
jne
cmpsl
mov
mov
clc
push
cs
fsub
jnp
and
cli
lcall
scas
inc
push
ds
cmp
out
shl
lock
sbb
in
add
out
mov
jmp
incl
pop
or
loope
rcr
sbb
or
add
cs
cld
jg
popf
or
bound
add
add
fs
clc
adc
dec
movsl
or
enter
push
mov
adc
rorb
dec
stos
sbb
cli
andl
xor
xor
daa
sbb
or
jg
cmp
sub
je
sbb
mov
push
iret
xor
subl
push
lea
push
push
push
push
pushf
mov
push
call
cltd
push
dec
sbb
sbb
pop
idivb
aad
mov
out
stos
jp
mov
jo
fmuls
mov
addr16
iret
lret
jbe
js
shl
es
adc
jno
std
inc
mov
stos
cmp
fdiv
xlat
add
mov
in
insb
lcall
xlat
rcl
idiv
dec
cmp
or
int3
adc
in
xchg
xchg
pop
data16
sub
in
push
movsb
nop
dec
add
les
leave
stos
lock
xchg
xchg
arpl
adc
lret
sub
inc
pop
stos
mov
lfs
and
ss
or
bound
mov
imulb
into
pop
cmp
xor
add
dec
or
xor
or
mov
xchg
imul
orb
fs
sahf
mov
aam
dec
push
jo
aad
add
and
test
lock
push
or
xchg
fs
mov
imul
dec
adc
lods
int3
xchg
stos
or
inc
scas
sbbl
push
dec
add
add
test
cmp
mov
loopne
push
gs
int3
sbb
pushf
push
jo
xor
out
push
movsb
repnz
xchg
cmp
xchg
mov
or
mov
fmuls
inc
adc
aad
adc
lock
aad
adc
mov
rcr
cli
dec
into
adc
fdivs
fmuls
xor
add
xor
mov
lret
sub
sbb
push
orl
mov
test
fdivr
sbb
push
testb
pop
push
sbb
lcall
cmp
imul
push
mov
mov
add
xchg
sahf
inc
xor
xor
xchg
dec
mov
sub
sub
pop
insb
pushw
es
dec
out
rcrb
jnp
andb
adc
ljmp
scas
mov
push
lret
test
ds
imul
lret
pop
adc
sar
cmpsb
mov
mov
xor
push
sahf
loop
je
cmp
cmp
int3
dec
jne
nop
add
sbb
inc
lret
pusha
dec
dec
loop
outsb
xchg
sub
outsb
stc
sbb
dec
and
add
inc
xor
lret
fprem
add
lret
dec
jo
cld
loopne
add
inc
bound
lods
push
mov
rorb
mov
aam
xchg
sbb
inc
cmp
iret
xchg
test
cmp
jnp
outsb
and
mov
dec
fadd
and
xchg
sub
mov
or
pop
loope
push
cmp
sub
dec
leave
push
or
call
dec
and
jl
outsb
xor
cmp
xchg
mov
or
jo
data16
push
mov
pop
mov
dec
push
dec
xor
pop
enter
xor
mov
bound
loop
pop
add
xchg
ds
lea
sbb
jp
inc
pop
xchg
aaa
mov
jp
sub
push
pop
and
pusha
clc
inc
mov
nop
adcl
adc
sahf
add
loopne
mov
sub
test
adcl
ror
pop
cmpsb
jbe
loope
bound
rcrl
call
pop
push
imul
dec
sub
xchg
faddl
sbb
mov
test
xchg
add
pop
push
jb
xor
aaa
sub
lods
mov
stos
pusha
xchg
add
jmp
insl
in
aaa
fisttpl
xor
push
daa
cmp
sbb
insb
setne
daa
clc
fdivs
mov
loopne
xchg
shlb
mov
inc
rcrb
jb,pn
pop
push
loopne
data16
sub
and
je
or
mov
call
or
mov
cmp
sbb
ficomps
js
repnz
shlb
lcall
lods
loop
xor
inc
addr16
push
enter
and
inc
loope
cmpsb
xchg
cmpsb
pushw
xchg
loope
xchg
push
repnz
push
je
or
mov
hlt
inc
push
jp
test
test
push
xchg
popf
fdivl
mov
xor
push
cmpsb
adc
in
ret
loop
mov
adc
repz
das
xchg
cltd
hlt
pop
dec
mov
insb
mov
xor
out
dec
movb
sub
int3
dec
cmp
push
push
js
aad
inc
mov
inc
mov
aam
mov
push
add
and
xor
xchg
or
xor
aad
xor
sarb
aad
adc
dec
ret
or
rcr
pusha
insb
push
dec
lock
push
subl
adcb
push
xor
int3
ret
inc
jp
push
mov
andb
jle
mov
jl
sbb
sbb
rclb
dec
add
jae
inc
or
push
rcl
bound
jl
dec
inc
lock
push
xor
bound
sahf
and
xchg
sub
sub
loope
cmp
push
test
push
ret
lea
xchg
rclb
repnz
lret
push
jbe
xchg
pop
dec
shlb
xor
push
daa
fcoms
lret
or
sbb
pop
push
stos
inc
out
sbb
addl
and
push
mov
loope
mov
in
je
xor
mov
imul
js
jne
rolb
in
sbb
fidivs
push
push
enter
int3
or
int3
cwtl
push
add
jne
push
into
xchg
jo
sub
mov
pusha
cmp
jmp
out
or
ret
and
lods
popa
stos
inc
add
add
and
mov
dec
in
xor
pop
add
or
jle
pop
sbb
dec
clc
loop
or
xor
and
in
xchg
sbb
xchg
bound
jo
push
jb
inc
test
scas
xor
xor
loopne
add
sbb
add
sbb
leave
pusha
testb
clc
test
and
adc
loopne
cs
out
jecxz
stos
sbb
cmp
out
je
je
push
and
cmpsb
outsb
xchg
int3
orb
push
xchg
int3
add
subb
pop
scas
add
outsb
enter
pop
lock
jp
inc
mov
bnd
pusha
ss
mov
dec
push
lret
call
push
cmc
pop
mov
call
incl
xor
dec
adc
es
dec
and
inc
daa
test
inc
idivb
loope
ret
push
and
add
daa
and
xchg
cmp
or
rcll
pop
outsb
inc
mov
dec
lods
rcll
and
inc
clc
cmp
call
push
jbe
xchg
jge
push
dec
rolb
add
outsb
or
inc
jp
lret
sub
cmp
loopne
aad
or
pop
rorb
push
xor
and
xor
cld
mov
movd
push
add
test
shll
cwtl
cmp
and
xchg
xchg
or
or
fwait
dec
loope
mov
and
push
dec
cvtps2pi
les
add
fmuls
rolb
cmpsb
and
xor
jbe
or
ret
mov
fmull
and
lea
in
sbb
nop
inc
es
or
xchg
push
push
cwtl
in
push
cs
xor
dec
cwtl
je
xchg
push
mov
add
pusha
fs
xchg
push
arpl
jle
inc
add
adc
ljmp
outsb
jbe
out
leave
push
sub
push
testl
pop
int3
push
rcrb
or
pop
es
or
in
adc
xor
xor
insb
stos
mov
inc
loopne
dec
pop
xor
push
xor
cs
xor
xchg
xchg
loop
sbb
sub
adc
and
xchg
push
lds
pop
mov
insb
orl
xchg
pusha
hlt
pusha
xor
or
sbb
cmp
les
jo
jp
and
pop
daa
bound
mov
and
ret
add
cmpsb
insb
fdivr
addb
lock
push
notb
loopne
and
inc
scas
js
fs
mov
add
popf
jp
stc
dec
mov
hlt
push
adc
mov
or
loopne
sbb
shll
cs
shlb
test
add
cwtl
or
cli
and
fadd
pop
cmpb
or
mov
pop
scas
loopne
bound
aaa
in
mov
sub
mov
mov
pop
and
subb
push
loope
sub
push
xchg
push
dec
mov
jp
add
fdivrs
je
sbb
mov
add
popa
gs
mov
ss
pop
pusha
adc
adc
push
daa
add
rorl
stos
scas
mov
inc
out
mov
push
xchg
mov
sbb
push
xor
mov
cmp
out
push
or
je
push
cmp
add
mov
push
xchg
test
cli
jl
daa
mov
mov
push
push
ljmp
insl
mov
jbe
adc
test
xchg
pusha
xchg
add
dec
push
cwtl
in
cmp
push
sub
xor
rcrb
inc
call
loopne
call
xor
adc
sbb
sub
adc
fstpl
jns
jo
cmpsb
fsts
js
mov
push
dec
mov
pop
push
and
sbb
sub
lret
push
stos
outsl
lret
inc
leave
in
sub
insb
lods
out
xor
rcrl
pop
or
jns
aam
xchg
loopne
mov
and
mov
push
jle
sbb
mov
pusha
add
push
sbb
sbb
leave
insb
or
inc
ljmp
pop
add
xor
hlt
mov
adc
mov
test
bound
into
clc
or
sbb
sbb
push
je
out
add
pop
jbe
loopne
cmp
cltd
mov
mov
and
push
mov
dec
xchg
lds
inc
mov
pop
daa
adc
cmpsl
push
arpl
jl
adc
adc
cmpsb
cs
rcrb
sbb
xchg
push
in
clc
jno
sbb
sbbb
ljmp
aam
sbb
sub
xor
xchg
sbb
inc
or
jns,pt
adc
bound
popa
add
mov
int3
mov
je
add
ret
shlb
add
cmp
mov
popa
daa
pop
ret
loopne
outsb
mov
loop
stos
cld
or
ret
fnstenv
outsb
stos
cli
das
loope
adc
add
test
bound
xor
enter
sbb
popa
jl
fsubrl
loopne
lret
add
pushf
inc
and
ficompl
adc
add
jo
out
and
es
jl
sub
mov
lods
xchg
or
jecxz
je
stos
mov
adc
push
fdivrl
mov
pop
es
pop
loope
xor
cmpsl
mov
pop
dec
leave
and
inc
lcall
xor
sbb
inc
and
js
push
mov
pop
cwtl
dec
enter
int3
lods
push
cmp
push
or
rorb
sahf
leave
dec
or
fmul
inc
fisubrs
push
rorb
and
shrb
shrl
test
or
or
lret
je
jbe
and
mov
add
bound
and
cmp
push
cmp
in
lea
xor
lods
into
sbbb
pushf
bound
or
jo
ds
out
in
pop
push
int3
lcall
jp
pop
test
xchg
sbbl
sub
cmp
outsb
enter
inc
add
scas
pop
inc
and
xor
and
dec
or
push
adc
adc
cltd
pop
stos
push
mov
cmp
aam
add
fdivrs
sbb
enter
sahf
fadds
stos
and
adc
shlb
cwtl
xlat
loope
inc
xor
out
mov
xor
and
fdivp
push
dec
jb
call
jmp
xor
add
add
jae
pop
push
sbb
orb
dec
adc
xor
lret
or
xchg
pop
or
hlt
adc
test
dec
mov
dec
sub
les
loope
mov
call
jb
or
repz
push
fiadds
loopne
lea
cmp
jnp
aad
lahf
int
mov
dec
or
add
lret
sbb
fcoml
lret
test
fmuls
or
or
loop
cld
lods
mov
mov
repnz
sub
adc
test
sbb
rolb
inc
push
in
ja
out
dec
lock
jae
xor
shl
xor
int
xorl
jg
cld
mov
mov
sar
rcr
mov
cmc
mov
mov
dec
call
loope
mov
and
rcr
jnp
sbb
shl
neg
repz
sub
test
jb
pop
into
add
fbstp
xor
dec
dec
pop
rol
enter
test
adc
add
jl
lock
adc
xlat
add
int
adc
dec
neg
add
and
negl
xchg
les
jge
inc
inc
pop
add
lock
and
shrb
mov
mov
rcl
es
rcr
ret
add
dec
xor
fildl
neg
out
xchg
add
aaa
mov
ds
pushl
push
mov
jbe
in
add
dec
les
push
fisubrl
not
ljmp
fmuls
andb
inc
clc
sub
test
push
push
cmpl
mov
jecxz
sbb
pop
mov
outsb
mov
adc
adcb
or
pop
and
imul
inc
int3
out
push
jne
pop
cmp
shl
rol
pop
jl
pop
adc
cmpsl
sbb
cmp
icebp
push
iret
shll
sub
sbbb
clc
es
push
call
or
adc
sti
inc
push
rcrl
movsb
push
or
and
stos
lock
push
sub
or
ret
adc
lret
sbb
stos
shlb
cmp
add
jbe
je
push
lahf
mov
pop
cmpsb
add
cmp
sbb
into
les
iret
cmp
inc
sbb
lret
xor
or
mov
or
cwtl
fadds
add
adc
add
fsub
add
int
sub
push
cld
shr
mov
cmp
cwtl
push
inc
scas
loope
sbbb
add
sbb
lea
push
push
pusha
adcb
test
push
mov
sub
inc
outsb
popf
lret
insb
mov
stc
push
dec
outsb
mov
aam
lods
push
dec
inc
sub
test
cli
inc
cmp
aam
aam
fidivrs
imul
and
cmp
or
mov
mov
mov
out
adcb
ds
xor
mov
or
push
xor
push
outsb
or
stos
pop
sahf
push
lret
add
ljmp
cmp
test
fs
or
es
rclb
andb
mov
cmp
adc
jle
adc
pop
push
js
jl
rcrb
loopne
adc
adc
push
adc
nop
shlb
pusha
ret
add
inc
mov
cmpsb
xor
push
pop
lcall
sub
sahf
push
ret
sub
test
adc
adc
lret
cmp
fwait
in
int3
push
mov
rol
or
sub
sbb
sbb
mov
pop
movsb
enter
cmpb
outsb
dec
pop
inc
dec
pop
test
mov
ljmp
gs
aam
test
sbb
les
xor
lock
pusha
inc
shlb
cmpsb
sub
lret
mov
fcomp
adc
xchg
or
mov
cmp
adc
arpl
cmpsb
push
dec
cwtl
mov
mov
into
add
popf
sbb
out
insb
push
inc
add
into
sbb
pop
jno
sbb
es
lret
sub
jl
pop
outsb
xchg
inc
arpl
les
push
push
sbb
cmp
in
inc
in
xor
push
push
jo
lods
sbb
outsb
jns
subl
mov
or
add
dec
xchg
push
nop
rorl
out
clc
xchg
push
pushf
loop
xchg
push
dec
bound
mov
mov
push
or
out
dec
sbb
stos
or
xor
dec
or
into
xor
add
push
adc
and
cld
push
pusha
ret
enter
push
cmp
loop
jp
loopne
aam
cmp
inc
jl
push
aam
call
add
into
andb
xor
xor
idivb
lods
mov
adc
sub
inc
dec
pop
cwtl
movsb
ret
mov
and
adc
mov
stos
js
or
xchg
rclb
push
push
sbb
jb
push
push
jo
push
out
push
mov
daa
inc
test
push
inc
std
sub
xchg
xor
jo
mov
cmp
mov
out
dec
add
dec
je
cmp
scas
loope
xchg
adc
lock
inc
add
push
add
push
mov
jecxz
pusha
push
sbb
hlt
outsb
sub
cmp
jo
lcall
mov
sub
cmc
and
or
push
sub
and
lret
jbe
lds
adc
addr16
cmp
push
subb
data16
insb
fs
in
lock
sub
dec
add
mov
dec
pop
inc
sbb
aam
je
add
mull
out
sbb
idivl
out
inc
adc
add
mulb
cs
leave
add
sbbb
aaa
sti
push
inc
adc
pop
neg
shr
rol
push
dec
or
idiv
shl
not
push
inc
push
and
jns
out
js
push
pop
and
shlb
nop
add
sbb
add
xor
inc
clc
pop
clc
sbb
inc
push
sahf
test
xchg
in
adc
pushw
or
mov
cmp
pop
sar
xchg
jne
sbb
in
mov
xor
push
call
pop
or
scas
shl
jmp
mov
rorl
or
xchg
or
into
add
and
mov
pushf
mov
ja
xor
and
inc
and
jno
jle
mov
jp
stc
in
inc
cld
and
mov
and
cmp
ja
movsl
lock
lock
cld
mov
es
lahf
lret
dec
in
lock
xor
sahf
lock
sbb
push
or
test
add
fisttps
test
fdivl
jb
mov
add
add
in
out
or
stos
jmp
sbb
or
pop
add
decl
or
sar
rcr
rcrb
aam
sub
hlt
jmp
fildl
add
and
out
ja
sbb
xchg
mov
xchg
lock
adc
enter
inc
ret
sbb
mov
add
push
add
cmp
push
xchg
mov
jg
xchg
loope
xlat
adc
shl
divl
sbb
fsts
jb
dec
clc
and
sbb
leave
inc
and
loopne
sub
jae
add
sbbl
xchg
pop
sub
push
mov
adc
add
test
push
cmpsb
jmp
push
sub
cmpsb
out
pushf
scas
loop
mov
xor
test
sub
mov
aam
xlat
fs
inc
adc
clc
loop
jo
pushf
mov
adc
jle
xor
or
sub
adc
sub
jo
cwtl
clc
adc
fsubrs
pusha
push
lock
adc
xor
mov
sbb
and
int3
into
sbb
jb
lret
leave
mov
and
lods
scas
ret
movb
orb
sbb
inc
mov
push
jo
add
jmp
or
jo
cmp
push
lret
mov
loop
inc
sub
mov
into
mov
pop
dec
xor
sub
sbbb
xor
lods
push
sbb
rolb
leave
dec
push
dec
les
xchg
push
jo
jnp
add
lea
dec
sub
jmp
xchg
fsubl
push
pop
xor
xor
inc
add
push
add
push
push
daa
test
xor
sub
test
mov
dec
inc
je
dec
push
loopne
lcall
dec
int3
fs
add
adc
adc
ret
jge
xorl
pushf
add
add
add
xchg
test
add
test
adc
cwtl
sbb
lea
or
les
push
inc
rcrb
data16
mov
ret
add
xor
or
pop
movsb
add
lock
mov
sub
mov
add
sahf
add
fsubrs
dec
jo
and
in
cmp
push
add
int3
jle
dec
dec
adc
test
hlt
mov
or
popf
stc
xchg
cs
int3
sub
jb
mov
xchg
fiaddl
add
cwtl
xor
lcall
dec
and
xor
mov
stos
imul
xchg
inc
rclb
adc
inc
arpl
jl
lods
cmpsb
and
cltd
adc
enter
inc
mov
inc
pusha
cmp
and
and
ret
sbbl
icebp
xor
cmp
ret
popa
cmp
pusha
jbe
inc
add
aam
push
mov
mov
jo
insb
and
lods
dec
inc
cmp
shlb
into
lods
jb
sub
pushf
jo
xor
xchg
push
daa
mov
mov
adc
orb
mov
dec
data16
dec
nop
or
inc
ret
add
jb
mov
xchg
push
adc
mov
shlb
mov
jecxz
or
xor
idivb
adc
js
lret
loop
addr16
inc
pop
sub
test
mov
aam
push
or
pop
scas
rolb
jle
out
inc
mov
push
adc
jns
movsl
add
test
xchg
hlt
out
mov
sbbl
inc
into
mov
xchg
cltd
int3
aam
mov
lret
loopne
pusha
aam
add
adc
ljmp
sbbl
aad
popa
daa
sub
xchg
xchg
scas
bound
test
sbb
call
fidivrs
or
int
in
lods
add
push
lcall
call
cmp
inc
jo
test
enter
fsubr
icebp
aam
push
xchg
ja
mov
mov
call
les
push
adc
out
or
lock
adc
pop
bound
cmp
fdivl
inc
clc
add
shlb
push
out
and
push
pop
rcll
cld
jl
adc
adcl
cwtl
jne
jne
add
push
cmpsb
addb
mov
gs
push
mov
mov
inc
and
ret
sub
cmp
push
xorb
xor
lret
dec
sub
mov
cmp
pusha
loopne
clc
mov
mov
jp
jbe
loop
data16
les
mov
add
aaa
sub
or
push
pop
jp
mov
push
enter
mov
push
jo
adc
mov
adc
je
lods
insb
xor
clc
ljmp
mov
push
popa
xchg
insb
jo
sbb
ret
sub
dec
popf
push
sbb
fdiv
mov
repnz
add
add
loop
movsb
ret
push
mov
mov
les
mov
add
outsb
sbb
ret
push
test
and
dec
xor
xor
imul
push
mov
out
xor
xor
inc
sbb
fadds
mov
cmp
add
mov
and
xor
add
add
sbb
push
sub
sbb
lods
sahf
int3
notb
mov
pusha
lret
cmp
dec
inc
inc
or
lock
push
push
adc
dec
or
int3
dec
mov
xchg
mov
sub
xor
xor
jbe
mov
arpl
xor
push
cmpsb
cmp
or
jo
push
xor
cli
shrb
xchg
ret
jle
cwtl
add
and
ljmp
in
jno
adc
into
push
pusha
mov
xor
je
mov
aaa
xor
pushf
add
shll
repnz
loopne
cld
imulb
roll
cmp
add
and
lret
loopne
inc
sub
push
pop
and
rorb
idivb
dec
push
mov
mov
dec
outsl
cwtl
inc
orb
cmp
inc
sahf
adc
mov
mov
add
add
rclb
adc
ret
xor
add
cwtl
out
add
dec
es
sub
xor
shlb
xor
xchg
cmpsb
movsb
pop
or
cltd
sbb
testb
scas
adc
sbb
sub
sahf
rol
pop
xor
js
pop
dec
sub
mov
or
dec
fnstcw
mov
enter
mov
je
rorb
femms
sbb
ljmp
daa
sbb
cmp
lahf
add
ficomps
outsl
cld
inc
mov
ret
shrb
or
and
mov
adc
xchg
out
xor
jbe
flds
sbb
dec
push
or
adc
enter
call
jmp
xor
push
sbb
jmp
xor
cmp
adc
in
test
andl
in
not
arpl
pusha
xor
mov
push
arpl
or
in
mov
hlt
sbb
loope
add
rol
imul
add
and
sar
rcr
add
int3
rcl
shr
push
pop
pop
daa
mov
pop
in
pop
dec
adc
shl
lock
jmp
ror
xchg
rolb
es
jl
inc
dec
or
or
cmp
lret
inc
fadd
or
pusha
adc
dec
jg
in
sti
ds
sbb
dec
loopne
or
les
add
adc
cmp
or
clc
shlb
sub
xor
clc
mov
jp
push
mov
and
cmpsb
mov
xor
mov
insb
gs
ret
push
frstor
movsb
sahf
xor
test
jbe
pop
test
xor
out
adc
or
in
cmp
leave
data16
enter
inc
test
adc
dec
pushf
or
mov
mov
repnz
cmpsb
sbb
dec
mov
sbb
ret
pop
pop
or
adc
in
ret
mov
lock
push
mov
leave
cmp
sbb
push
loopne
xor
jmp
ret
mov
jp
xchg
adc
inc
mov
mov
inc
xor
sub
leave
movsl
sub
add
push
popf
mov
push
push
sbb
es
pusha
xor
dec
mov
stos
or
out
push
out
sbb
test
bnd
addl
inc
sub
adc
ret
adc
shlb
adc
ret
lret
les
add
stos
cmc
aam
push
mov
lock
call
xchg
or
adc
sbb
pop
data16
push
jle
aam
adc
xor
xchg
sbb
xchg
xor
add
inc
pop
add
adc
and
push
or
inc
add
pop
or
cld
jl
inc
test
fs
loopne
lret
fsubrl
push
xchg
js
push
and
add
outsb
push
jo
and
mov
outsb
lret
sarb
cwtl
push
inc
andl
adc
add
or
cmp
mov
cmp
les
xchg
cmpsb
or
shll
dec
mov
push
jbe
xor
cmp
add
sbb
pop
push
pcmpgtd
push
push
jo
mov
mov
push
repnz
xchg
mov
js
icebp
and
xor
sbb
inc
dec
cmp
jno
mov
adc
shlb
repnz
and
and
push
pushf
push
pop
cwtl
mov
arpl
mov
jp
xorl
int3
adc
mov
cs
movsb
adc
mov
rorb
adc
loopne
pop
movsb
popa
push
and
js
ds
mov
xchg
clc
push
aam
or
into
adc
test
int3
test
xchg
inc
call
xor
mov
popf
or
xlat
add
or
mov
or
jbe
fsubrs
arpl
sbb
roll
or
pop
je
les
xor
pop
dec
cld
and
pushf
adc
pop
test
orl
mov
ret
stc
fcompl
pop
popf
sbb
adcb
xor
incl
inc
shlb
push
les
icebp
sar
sbb
leave
dec
lcall
inc
lea
push
clc
ljmp
cmp
repnz
loop
inc
sub
lret
in
loope
sbb
movsb
dec
add
jo
push
cltd
push
fmul
sub
test
ror
in
enter
dec
daa
cwtl
pop
rolb
js
and
enter
lods
inc
mov
cmc
push
insb
rolb
and
add
rclb
outsb
roll
lods
xor
push
aad
dec
mov
ljmp
out
xor
or
xchg
sbb
lcall
movsb
in
jns
shl
or
mov
jecxz
mov
push
ret
int3
and
pusha
popa
inc
add
pop
addb
ss
ljmp
mov
adc
rcrb
xchg
loop
xorb
in
lret
outsb
adcl
cmp
or
mov
jp
cmc
ds
inc
or
shl
xor
pop
mov
js
pusha
or
xor
mov
mov
adc
inc
je
jp
mov
add
lods
fldl2t
mov
xchg
xchg
and
push
popf
movsb
push
mov
xor
inc
pop
rorb
and
xor
sbb
inc
out
jp
lea
mov
test
push
js
bound
mov
xchg
dec
xor
mov
xchg
sub
mov
addb
mov
in
or
xorb
shrb
pop
xchg
adc
cs
xor
adc
mov
cwtl
scas
les
ljmp
fdivs
sbb
daa
mov
lcall
jb
mov
fdivrs
adc
ljmp
mov
inc
fisttpll
mov
or
cmp
mov
enter
enter
push
int3
rolb
packsswb
mov
add
mov
test
pop
jle
push
or
xchg
adc
dec
fsubl
jbe
xchg
inc
add
push
mov
jb
popf
dec
dec
enterw
xchg
hlt
call
push
stos
xchg
dec
sub
sbb
add
or
pop
mov
dec
es
cmp
lock
loopne
loope
test
movsb
in
or
mov
lock
loop
inc
jo
jecxz
mov
test
push
xchg
ret
test
push
pusha
jmpw
lock
inc
mov
adc
popa
adc
cwtl
sahf
cmp
int3
pop
jmp
sbb
addb
shll
inc
sub
sti
sbb
in
cltd
push
imul
xor
inc
mov
aam
shlb
push
cmp
inc
sub
popf
sbb
loope
cld
bound
or
rcrb
and
cmpsb
ljmp
push
push
dec
cmp
es
pop
jns
pop
mov
and
bound
es
and
out
and
dec
outsb
pushf
sahf
add
or
movsb
ficomps
sarl
sub
in
scas
push
cmpsl
daa
ret
xchg
mov
jecxz
fs
mov
mov
mov
mov
sub
hlt
xchg
loopne
test
mov
dec
notb
dec
test
into
xchg
lea
in
mov
dec
stos
xor
stos
jle
inc
ret
fldl
lods
mov
movsl
loopne
dec
or
shl
add
pop
loopne
push
stos
push
ret
xor
les
or
cmp
shlb
cmp
dec
mov
test
and
sbb
xchg
push
push
repz
pushf
xor
sub
mov
xor
loopne
clc
ja
push
popa
cs
pushf
push
xchg
add
dec
or
sbb
push
test
sbb
mov
jbe
cli
xor
je
inc
loop
mov
ret
push
sbb
dec
pushf
and
mov
xor
loopne
adc
pop
es
hlt
popa
xor
sar
mov
je
cwtl
add
ret
in
push
mov
and
push
ret
sbb
out
leave
cmp
mov
mov
sub
push
cli
ficompl
loop
cltd
cs
pop
jbe
outsb
pop
lret
outsb
popa
arpl
scas
push
js
push
inc
test
add
mov
inc
adcb
mov
sbb
movsb
loopne
xor
mov
cmp
pop
dec
xchg
test
sbb
fs
sahf
repnz
mov
mov
cmp
daa
into
sbb
pop
ret
xor
push
mov
add
stos
sbbl
test
ret
or
mov
jecxz
inc
cs
lcall
add
mov
lods
inc
aam
in
call
pop
jg
fcmove
arpl
adcb
mov
push
movsl
xchg
and
mov
ror
cmc
push
pop
sbb
pusha
mov
in
xor
xor
mov
loope
lods
int3
loopne
sbb
and
fs
inc
mov
mov
xor
test
mov
xor
loop
inc
add
lret
ljmp
aam
sbb
mov
ret
xchg
jo
push
push
shlb
ret
push
movsb
or
or
add
xor
lret
xchg
sbb
push
data16
enter
mov
data16
add
addb
ljmp
cltd
adc
js
ret
or
dec
jle
mov
adc
outsl
pushf
insb
jb
or
je
es
dec
fcmove
scas
dec
fucomp
push
cld
mov
rol
or
cmp
mov
push
sahf
mov
adc
cwtl
jno
or
decl
cmp
adc
in
add
inc
or
add
pop
cwtl
sbbb
sbb
push
dec
or
push
push
xchg
or
popf
sbb
pop
lea
xchg
js
cmpb
outsb
inc
stos
sbb
test
loopne
push
xchg
dec
push
push
and
fimull
or
mov
pop
add
ficoml
or
mov
lods
jno
push
mov
cld
lret
sbb
nop
mov
sub
mov
add
roll
test
add
pusha
push
out
and
sbb
dec
mov
pop
cmp
loopne
loop
or
divl
mov
cmp
daa
and
sbb
data16
mov
imul
shrb
outsb
push
push
mov
jp
or
repnz
sub
xor
dec
pusha
ds
cmp
jmp
sub
jp
or
mov
cmpsl
jo
dec
xchg
cld
in
sbb
mov
sbbl
push
loop
inc
bound
sbb
xchg
ret
lods
dec
cmp
loop
xchg
sbb
sahf
enter
lret
add
mov
xchg
jp
push
js
popa
sub
and
pop
xor
mov
ret
xor
pop
es
or
or
pop
les
negb
mov
ret
mov
sbb
mov
push
push
xor
pop
ljmp
loop
jo
sub
fmuls
mov
mov
popf
adc
dec
push
mov
jl,pn
jne
xlat
sub
jo
xorb
cmp
scas
mov
jl
loopne
or
fsubrs
mov
jle
dec
inc
popf
fimull
mov
sub
mov
dec
and
loop
jno
mov
pop
loop
xchg
sbb
inc
roll
data16
adc
jbe
push
sub
xor
mov
loop
dec
jb
add
inc
cli
sub
mov
xchg
sbb
fnstsw
ret
xor
jbe
dec
out
rclb
dec
and
mov
or
imul
test
push
mov
pop
lret
ljmp
add
dec
cmp
mov
pop
hlt
xor
xor
push
aaa
xchg
xor
adc
in
aam
sbb
cli
es
pop
test
jno
mov
test
fisttpll
out
js
mov
lret
dec
out
xor
pop
pop
out
pusha
test
push
xor
dec
les
cwtl
jo
orb
mov
in
mov
or
inc
js
lcall
pop
mov
call
xchg
nop
sbb
hlt
cmp
jl
or
xor
inc
xor
test
out
push
inc
or
bound
leave
rolb
ret
inc
test
lcall
cmpb
or
adc
cs
in
push
dec
clc
xchg
push
pusha
mov
mov
xor
xor
mov
sti
pushl
sbb
pop
fisttps
popa
xchg
jl
outsb
cwtl
lds
jle
bound
dec
jg
ret
add
cmp
jmp
or
test
aam
jno
cmp
and
dec
data16
hlt
pop
cld
test
push
inc
ret
js
adc
inc
push
mov
mov
popa
rclb
push
les
out
xor
sahf
xor
addl
and
add
pop
stos
push
pop
mov
and
jo
orl
ds
imul
push
and
xchg
pusha
sarb
push
mov
orb
sbb
and
cli
xchg
or
fdivrs
scas
lea
movsb
nop
cmpsb
js
pop
sub
inc
dec
lea
mov
sbb
xor
adc
movsb
ja
push
or
adc
or
mov
adc
shr
ss
cmpsb
sub
pusha
outsb
jo
push
outsb
and
cwtl
sub
sbb
cmpsl
mov
cmovns
add
xchg
sbb
mov
jo
lods
xor
or
lock
bound
fs
dec
mov
add
sbb
jp
push
daa
jecxz
shll
xchg
or
out
lods
xor
nop
enter
push
or
push
pushf
lock
sbb
or
div
subb
daa
add
notl
inc
mov
shll
jo
sbb
into
imul
inc
or
orl
pop
sahf
mov
jo
pop
sahf
push
xchg
loop
sahf
lods
push
mov
test
sbb
lret
push
call
mov
inc
push
xchg
cmp
xor
sbb
push
and
xlat
in
lret
jle
xchg
dec
addl
mov
push
xor
loop
mov
push
mov
cmp
imul
scas
sbb
lret
pop
push
or
sub
push
bound
je
inc
jp
cmpsb
pop
loop
orb
adc
notb
pop
push
mov
and
popf
pusha
data16
loop
mov
sub
xor
or
je
and
fdivl
enter
das
insb
loopne,pt
loope
mov
fcom
jb
or
lock
cmp
push
sbb
adc
movsb
roll
test
mov
popa
cli
ret
mov
pop
pop
and
ret
cwtl
push
cmp
test
dec
mov
js
mov
cltd
jne
subb
or
mov
mov
in
xchg
pop
xor
insb
lock
lret
je
add
push
test
ds
push
jae
vsubss
into
mov
push
mov
mov
xchg
and
std
mov
out
clc
push
movsb
add
ror
shlb
mov
xchg
cld
xor
mov
in
mov
mov
push
mov
xchg
add
inc
test
push
jo
cmpsb
push
mov
or
sahf
sub
add
rcll
push
int3
pushl
adc
and
test
out
push
aam
jp
test
add
cmp
dec
mov
js
xchg
and
test
repz
popa
popa
or
pop
add
or
insb
add
ds
cmp
pop
imul
pop
aas
ljmp
or
push
push
and
xchg
sub
cmc
mov
add
adc
add
mov
ret
es
mov
fsubs
jp
lret
push
xor
sbb
or
sub
ds
jb
add
sbb
loop
jo
popa
mov
mov
mov
shlb
mov
add
icebp
sub
cs
mov
jb
fdivrl
fs
je
mov
or
push
dec
sub
clc
dec
loope
leave
lods
push
push
in
push
stos
xor
or
mov
or
cwtd
sbb
or
push
loopne
es
and
cmp
xor
and
pop
pop
sub
in
jo
jle
pop
enter
cmpsb
push
inc
loop
xchg
aam
mov
dec
ror
pop
loope
es
pop
or
out
mov
ret
fcoms
and
add
add
xor
push
arpl
mov
cmp
fs
xchg
fdivrl
dec
daa
and
aaa
push
cmpsb
call
push
sbb
ljmp
out
xor
xor
mov
mov
jp
outsl
add
adc
dec
xchg
pop
inc
add
fcomp
rolb
cwtl
popf
pop
add
push
dec
adc
add
sahf
sub
loopne
xchg
out
jo
sbb
andb
sahf
push
mov
xor
push
jp
pop
xor
cmp
inc
dec
loopne
cmpsl
push
dec
mov
ret
sahf
arpl
imul
dec
jge
fs
xor
push
add
clc
mov
test
dec
sbb
jle
lods
pop
loopne
or
cli
inc
xchg
jle
and
inc
pop
push
pop
sub
add
les
fdivrl
mov
push
mov
xchg
jo
sub
add
mov
xchg
push
jle
push
or
scas
cmp
add
nop
push
mov
xchg
pop
add
repnz
xchg
in
test
cmp
and
in
push
xor
icebp
ds
cld
dec
xchg
sbb
push
js
and
mov
inc
cwtl
xor
mov
mov
and
push
pushf
and
punpckldq
je
movsl
inc
or
out
cmp
jb
shlb
mov
sarb
inc
addr16
les
mov
js
sub
sbb
rclb
call
add
inc
pop
sub
sbb
les
sbb
mov
push
adc
movsb
nop
xchg
adcb
push
cmp
cmp
mov
jbe
rol
dec
or
orb
lods
sbb
sub
mov
movsb
rol
dec
or
inc
mov
push
xor
scas
mov
loop
jo
and
jp
add
and
add
jp
call
loopne
mov
xchg
xchg
sbb
push
sub
sbb
inc
cmp
enter
nop
push
pop
or
mov
or
lods
push
xchg
xchg
pusha
hlt
adc
lcall
jbe
ret
rorl
outsb
clc
lods
mov
adc
push
push
and
cli
or
add
pusha
lock
data16
push
pop
jp
cmp
sub
inc
push
dec
cltd
inc
shlb
mov
dec
js
sahf
or
mov
dec
jbe
xchg
add
or
and
into
in
outsb
cli
ret
sub
sub
pusha
rolb
cltd
inc
sbb
les
mov
sbb
jle
xor
enter
push
xchg
cmp
je
daa
movsl
dec
mov
mov
mov
cmp
pop
inc
lcall
push
lods
mov
jo
add
mov
push
repnz
xchg
pop
pop
inc
and
mov
loopne
outsl
sbb
sub
aam
sbb
jo
outsb
jae
jo
pop
sahf
rorl
nop
adcb
rcrb
sbb
jl
lods
ret
js
lret
insb
sub
inc
mov
cld
out
gs
mov
scas
insb
stos
xor
cld
aam
lods
subl
push
out
call
lods
fadd
push
dec
call
pushf
push
cmp
pop
lret
test
push
loopew
jp
sahf
dec
push
fsubrl
cli
out
adc
add
and
stos
imul
dec
fnsave
je
or
dec
jns
or
or
or
adc
or
sub
jno
mov
adc
popa
jbe
movsl
and
sub
loop
jle
and
add
jae
and
mov
jo
and
es
cmp
dec
add
mov
dec
push
ds
mov
mov
hlt
pop
mov
rolb
dec
cs
or
out
sbb
jbe
push
pushf
dec
int3
xor
inc
in
ljmp
push
lock
cmp
repnz
pop
mov
ljmp
loop
adc
push
xor
pop
pusha
out
mov
cmp
pop
add
stos
movsb
daa
icebp
mov
xor
ret
and
xchg
inc
dec
pushf
jb
cmpsl
xchg
sub
push
dec
adc
adc
jns
inc
mov
jo
dec
scas
mov
xchg
mov
pop
loop
sub
dec
xchg
loopne
int3
jb
repnz
inc
or
lret
jo
pop
add
pop
lods
xor
test
sbb
xchg
das
and
pusha
jno
pop
adc
sbb
outsb
outsb
jo
mov
push
and
xor
subb
jmp
out
inc
mov
push
inc
test
inc
dec
sub
mov
push
inc
push
push
popa
mov
jb
or
leave
jp
and
cmp
test
rolb
and
les
pop
add
jp
les
iret
orl
insb
out
js
and
psadbw
adc
pop
test
scas
mov
or
out
dec
inc
jp
sbb
or
pop
ret
xchg
add
xor
cmp
push
xchg
outsb
dec
fsts
cmp
lods
roll
sbb
push
bswap
inc
xor
mov
mov
adc
test
test
jb
pop
pop
xchg
sbb
dec
pop
cs
pop
je
adc
sbb
pop
xchg
sbbl
cwtl
dec
jle
loop
or
dec
mov
pop
pop
fiadds
hlt
loop
xor
lock
sbbl
sbb
ror
or
push
rorb
or
jp
js
dec
adcl
test
mov
jl
cli
or
movsl
push
fmuls
xchg
pop
sub
and
ret
je
nop
cmp
add
lock
dec
into
call
lock
mov
insb
xchg
repnz
mov
dec
loope
jl
push
inc
ss
lea
cmp
add
imul
push
sbb
jl
add
push
inc
aam
dec
cli
xor
inc
inc
ficoms
cld
pusha
in
into
sbb
sbb
call
sarb
bound
mov
xchg
xchg
mov
add
popa
js
pop
xchg
shrb
sbb
movsb
jb
push
xor
dec
sub
imul
cli
cmp
sahf
ds
in
aam
rclb
jb
dec
dec
dec
sbb
inc
cmp
and
adc
mov
xchg
adc
mov
mov
push
inc
sub
pusha
repz
push
xorl
or
jp
aaa
mov
sbb
sbb
push
inc
loope
add
and
xchg
rcrl
test
push
jo
or
mov
call
mov
test
sbb
shrb
pop
jp
jae
inc
mov
shlb
cmp
in
sub
dec
jmp
mov
lock
shlb
or
jle
into
push
rorb
xor
xor
add
nop
mov
int3
cmp
mov
andb
fs
fsubs
adc
lcall
stos
inc
sub
push
cltd
sub
or
or
pop
inc
or
adc
rorb
push
outsb
cmp
pop
daa
mov
xchg
in
and
pushf
xor
jl
movsl
andl
addr16
add
mov
loopne
cs
or
inc
sbb
add
sbb
fmul
les
es
in
mov
pop
orb
mov
test
and
js
test
push
out
call
add
lds
test
popa
out
popf
xor
mov
sub
stos
xchg
and
mov
pop
dec
cmp
pop
test
test
push
cmp
pushf
adc
pop
push
leave
xchg
lods
adc
fsubr
decl
cmp
out
sbb
jmp
jne
out
push
cmpsb
fistps
in
sub
mov
pop
mov
jb
outsl
pusha
mov
roll
mov
sbb
inc
hlt
ret
adc
fs
xadd
adc
sahf
dec
jecxz
cmp
jp
loop
rcrl
add
pop
ret
pushf
sbbl
cmp
cmpsl
call
mov
add
xor
xor
jp
dec
adc
mov
out
push
rorb
ljmp
sub
pop
ret
pushf
or
push
push
push
push
and
and
sbb
mov
fisttpll
inc
sbb
dec
ret
or
lea
outsb
cmp
pop
mov
or
inc
sbb
aam
es
sbb
jmp
adc
ds
inc
cwtl
xchg
cmpsl
and
or
sub
jbe
loope
jo
in
or
rorl
sbbb
sbb
adc
mov
fidivrl
lods
inc
adc
mov
xchg
push
push
data16
sbbl
scas
mov
mov
mov
sbb
inc
sbb
shlb
sbb
xchg
cmp
sbb
xlat
xor
push
in
loopne
add
int3
xor
dec
inc
in
movsb
adc
clc
inc
jo
pop
mov
or
xor
push
pusha
or
ret
sub
pusha
ret
cwtl
and
mov
xchg
repnz
jo
or
sbb
and
jb
inc
bound
into
xchg
pop
mov
fadds
stos
dec
outsb
js
jmp
and
outsb
jne
jecxz
fmull
jb
fsubrl
loopne
mov
pusha
fs
or
aam
add
or
dec
mov
inc
xor
mov
in
inc
data16
test
ret
sub
inc
popf
inc
pop
pop
sbb
sub
rcrb
fldenv
mov
test
mov
dec
test
jbe
pusha
xchg
cmp
sbb
ret
or
pop
loopne
pushf
push
mov
js
sub
sbb
ret
add
cmp
es
push
xor
inc
adc
mov
mov
fimull
jle
push
sbbb
leave
ret
fcompl
ret
dec
cmp
test
les
sahf
leave
push
mov
clc
pushf
cmp
xchg
pop
sub
ret
push
sbb
xchg
mov
sbbl
inc
sub
clc
xchg
sahf
ret
push
or
outsb
cwtl
mov
pusha
into
cmp
inc
or
mov
repz
fsubs
mov
insl
lea
fcom
sbbb
pop
inc
pop
lret
xor
lock
enter
mov
loop
das
mov
mov
rcll
sbb
inc
inc
movb
sub
lock
stos
hlt
jb
cmp
fs
addr16
add
jo,pn
enter
xor
xor
je
clc
incl
and
pop
test
push
lret
lret
mov
add
out
xchg
pop
pop
mov
out
je
psignb
stos
test
jb
loopne
movsb
mov
rorb
nop
nop
mov
adc
sbb
cmp
dec
shrl
xor
and
pushf
mov
les
movsl
pop
add
cmp
dec
push
pop
mov
cmp
arpl
mov
enter
cmpb
lods
adc
push
orb
or
mov
sub
xorb
mov
shlb
cmp
add
xchg
enter
movsb
shl
icebp
int
xor
mov
mov
push
and
mov
or
or
sbb
push
pusha
pusha
jo
lret
pop
fisubl
gs
and
movsb
enter
jno
xor
push
sub
loopne
test
xor
pop
push
cs
jbe
adc
cli
cmp
pusha
and
mov
push
data16
push
inc
leave
inc
dec
xor
test
cmpsb
pusha
add
pop
xor
sahf
ficomps
mov
mov
data16
mov
mov
lock
icebp
cs
mov
or
and
pop
lock
loop
mov
dec
xchg
pop
enter
ror
pop
or
addl
cs
push
and
dec
sbb
je
mov
adc
loope
mov
jo
push
ret
mov
mov
out
pop
imul
and
sub
add
add
bound
js
add
adc
adc
mov
stos
test
lret
loop
push
seto
dec
jmp
jb
mov
aam
or
xor
int3
or
hlt
sub
dec
sbbb
xchg
lea
jl
sbb
daa
mov
in
push
mov
or
leave
cmp
in
ret
dec
sbb
aam
mov
es
mov
mov
nop
movsl
mov
rorb
test
cmc
push
sbb
inc
ficoms
push
jmp
pushf
mov
les
cmpsl
mov
ret
push
lret
and
sub
xor
cwtl
add
and
pop
outsl
bound
cmpsb
mov
add
pop
shrb
adc
adc
shrb
mov
test
outsb
or
pop
pop
ds
xor
xor
mov
loop
or
push
fcmovu
mov
push
xchg
push
push
or
lods
loope
loope
xor
sub
loopne
icebp
jo
mov
add
xor
ds
mov
lods
inc
inc
pushf
test
or
and
shll
cli
mov
sahf
sub
lods
and
inc
sbb
outsb
ret
and
inc
cs
pop
les
or
add
lods
aad
dec
jp
inc
out
in
in
lods
dec
test
add
jo
fsub
jne
das
pop
in
mov
cmc
outsl
cmp
jb
sub
insl
fmull
cmp
pushl
add
neg
add
push
ror
rol
ror
lcall
jge
fadd
inc
lock
mov
out
ss
push
push
sbb
scas
aam
mov
test
je
mov
sbb
cmpsb
xor
shl
adc
pop
nop
jns
lods
movsb
aaa
pop
call
movsb
repz
add
ja
mov
sbb
nop
push
or
sbb
inc
imul
fistpll
and
inc
jb
adc
inc
sbb
jne
xor
add
pushf
jge
pop
aas
movsb
and
xor
int3
out
rorl
lret
add
cmpsl
movsb
and
mov
out
addb
cmp
mov
aam
sub
rcll
nop
jle
add
in
shl
testb
or
fcompl
rolb
add
in
fdivrl
sbb
rorl
add
dec
fistps
fdiv
sbb
jmp
js
into
sbb
fisttpll
push
jle
out
push
cmp
xor
pop
cmc
pop
add
mov
xchg
aam
push
inc
xchg
fstps
sub
add
pop
mov
std
xchg
ljmp
add
xchg
inc
std
popf
cmp
mov
outsb
sbb
cmc
clc
or
add
jo
and
pop
inc
jno
mov
inc
and
mov
fidivrs
mov
sub
xchg
mov
scas
lea
pop
xchg
adc
rcr
xor
aas
inc
xchg
pusha
incl
and
push
mov
in
inc
insb
orl
pop
mov
sub
clc
adc
adc
pop
divb
call
mov
pop
fisttpl
sbb
test
dec
inc
adcb
mov
ds
pop
clc
lea
push
push
adc
pop
je
and
sbb
adc
or
push
into
xor
dec
ljmp
rolb
divl
test
in
outsb
lcall
sub
hlt
cmp
test
hlt
adc
sbb
fsubl
push
loop
jno
push
js
lcall
sub
rorl
push
mov
mov
sub
mov
or
jge
mov
xor
in
xchg
xchg
cmp
and
mov
leave
mov
jno
inc
mov
push
fldcw
push
das
xor
jp
adc
and
test
in
pusha
mov
outsl
add
jle
cmp
fisubrl
dec
add
xor
cmp
adc
jb
bound
xor
cmp
jo
aad
in
add
adc
or
rcl
jp
mov
jp
dec
nop
jmp
or
adc
add
aam
push
insb
dec
pusha
and
sub
xchg
aam
xor
dec
pusha
pop
adc
adc
xchg
enter
mov
jno
cmp
adcb
pusha
js
adc
jecxz
fnstsw
sbbl
nop
mov
dec
lods
pusha
push
sbb
cld
fstpt
sbb
xchg
popa
lock
jo
pop
arpl
push
jo
pop
jo
push
ds
cltd
test
enter
xchg
loope
jb
inc
xchg
push
lret
sbb
testb
xor
dec
mov
rorb
push
cmp
jno
loop
movsb
inc
mov
lods
or
sahf
push
xchg
ljmp
sbb
xor
les
mov
inc
enter
or
sbb
push
cmp
addl
test
add
cmpsb
addr16
ss
into
and
dec
mov
in
xchg
lods
divl
pop
ret
mov
jb,pn
pop
arpl
or
inc
es
lret
mov
loopne
cmpsb
mov
lea
inc
out
dec
addr16
xor
leave
adc
push
insb
test
add
adc
jns
dec
rorb
mov
sarb
xchg
scas
add
and
loopne
push
or
je
push
ret
inc
push
mov
cmp
and
dec
ret
xchg
lock
cs
cli
sub
maskmovq
loop
pop
aad
inc
inc
mov
push
inc
in
jle
xor
sub
cmp
inc
sub
push
arpl
cmp
inc
orb
jae
xchg
popa
sbb
sub
lods
xchg
in
dec
inc
mov
inc
and
add
ret
or
mov
sbb
add
push
mov
inc
cmp
stos
xchg
mov
call
xchg
bound
rclb
xlat
popf
lret
decb
push
inc
lret
or
and
or
push
inc
and
mov
andl
into
ret
mov
pushf
adc
fwait
xor
outsl
aaa
cmp
mov
rcrb
test
dec
call
add
xchg
fiadds
movsl
jle
ss
mov
and
daa
and
pop
pop
add
cmp
cli
dec
lock
cmp
pushw
mov
mov
inc
cmp
push
add
mov
push
outsl
jmp
or
fidivl
movsl
xchg
sbb
add
push
inc
rcrb
test
mov
jno
andb
outsl
enter
enter
add
jl,pn
xor
inc
shrb
out
xor
mov
dec
mov
cmpl
jl
imul
sub
xlat
add
pop
push
pusha
sub
mov
jbe
hlt
or
in
int3
les
or
loopne
jb
or
lock
mov
cld
jne
popa
add
ret
add
out
lea
mov
xchg
sbb
movsb
xchg
add
test
add
inc
and
cmp
loop
test
inc
sbb
sub
xor
int3
test
repnz
cs
add
cmpps
roll
add
imul
xchg
clc
jo
test
outsb
pushf
scas
cld
loopne
ficomps
and
jle
jb
inc
sub
addb
mov
scas
mov
pusha
out
into
imul
loope
loop
mov
ret
cmc
pusha
sub
lret
xor
fs
dec
adc
push
fcomps
mov
pop
pusha
and
call
call
inc
lods
sbb
sbb
push
add
or
sbb
jo
mov
ljmp
xchg
dec
inc
sarl
cmp
cwtl
jb
aam
loope
stos
cmpsb
and
lret
dec
add
mov
rclb
xchg
push
ret
aam
inc
mov
jle
or
inc
into
pop
cmp
outsb
sti
jbe
pusha
bswap
mov
inc
sub
adc
add
sub
adc
sahf
mov
enter
ret
inc
mov
add
loopne
dec
sbb
dec
jo
sub
xor
jge
mov
js
mov
xor
mov
sbb
call
sbb
jo
test
cli
imul
fldlg2
mov
xor
nop
fstpl
xor
insl
mov
sub
scas
push
lret
pop
add
or
aam
dec
pop
jae
scas
std
bnd
xchg
pop
push
dec
repnz
test
xchg
pushf
jle
add
enter
out
aaa
je
add
mov
cmpsb
shlb
test
add
pushf
scas
rolb
lods
fcompl
pusha
movsb
xchg
xchg
push
sbb
push
sbb
rcrb
or
or
sbb
xor
add
xor
movsb
sbb
pushf
loopne
jo
fcmovnb
fcomp
popa
add
push
mov
sub
mov
loop
in
test
dec
outsl
imul
or
pop
and
dec
jmp
inc
jg,pt
pusha
pusha
jp
cmpsb
jg
xchg
ss
inc
xor
pop
lock
popa
jbe
xor
pop
pop
push
arpl
fs
xchg
inc
push
pushf
sbb
mov
pop
cmp
inc
jb
addb
aaa
cwtl
imul
push
adc
out
loopne
sub
fdivs
dec
outsl
ds
cs
cltd
and
pop
cmp
or
jp
or
fs
add
rolb
push
xchg
push
and
mov
lods
mov
fs
nop
mov
js
adc
ret
xor
out
fadds
dec
cmpb
mov
les
sub
xor
xchg
cltd
mov
sub
pavgb
or
push
push
cs
sub
add
je
xor
sub
shlb
rcr
add
bound
and
fsts
add
or
je
test
push
repnz
les
bound
sbb
test
and
adc
js
mov
jb
cmp
call
test
popa
pop
sahf
bound
scas
mov
es
cmpsl
cmp
dec
inc
or
enter
cmpsl
push
xchg
ss
or
sbb
mov
add
int3
test
ret
and
jo
inc
sahf
add
mov
fmul
stos
xchg
dec
mov
ss
divb
testb
notl
aam
xchg
call
dec
lods
stos
cld
sahf
push
mov
add
xchg
cmc
les
or
inc
mov
testb
sub
sarb
ret
ret
inc
jl
mov
fldcw
fidivrl
cltd
loopne
xor
les
sbb
xor
mov
insb
cmp
xchg
adc
test
ss
daa
jmp
imulb
mov
out
rcrb
adc
test
mov
hlt
sub
and
sub
sbb
pop
pusha
sbb
ljmp
js
test
mov
add
mov
xor
jl
xor
lea
nop
enter
and
movnti
sub
push
ljmp
mov
mov
inc
dec
in
aaa
or
push
clc
sub
and
jle
and
adcb
add
push
lret
dec
mov
pusha
sahf
mov
es
enter
dec
inc
mov
ljmp
scas
xchg
sbbl
stos
dec
lods
cmpsl
lock
lock
loop
add
int3
and
cs
out
rcrb
sbbb
sbb
mov
pop
dec
push
xor
push
stos
test
add
sbb
mov
push
push
add
sbb
pop
add
or
cs
andb
add
xor
shrb
repnz
pusha
rolb
sub
insl
cmp
xor
mov
or
cmpsb
push
or
or
sbb
leave
into
andb
ret
xchg
inc
sbb
decl
aam
mov
mov
add
adc
scas
pusha
push
mov
and
sbb
sahf
mov
insb
nop
loop
nop
pop
daa
and
push
shr
dec
popf
xchg
push
inc
fcomps
sahf
shll
stos
ret
add
sub
xchg
xor
mov
sub
stos
or
push
dec
mov
add
xor
out
ret
xchg
stos
push
ret
sub
adcl
dec
nop
mov
mov
loope
xchg
popf
and
jecxz
sub
xchg
lods
add
push
ss
rorb
inc
loop
and
push
dec
repnz
scas
leave
cli
mov
mov
push
xchg
movb
mov
mov
mov
mov
cmpsl
and
sbb
mov
or
adc
fs
inc
ljmp
lcall
jno
sbb
test
add
addr16
js
lods
inc
dec
ret
and
daa
push
orl
push
cmpsl
push
hlt
xor
imul
imul
loop
and
lock
jo
push
push
mov
inc
mov
lock
movsb
pusha
push
and
and
or
in
enter
sbb
movsl
pop
xor
in
lcall
and
sarb
sub
push
shlb
ret
jno
insb
into
mov
enter
dec
pusha
ds
popa
push
mov
xchg
insb
mov
xchg
scas
rorb
nop
mov
rdpmc
sbb
cmp
rcr
or
les
ljmp
and
enter
cmp
or
inc
enter
inc
sbb
add
es
mov
push
add
fs
push
mov
ret
xchg
jbe
hlt
outsb
xchg
push
or
dec
or
ds
pop
or
pop
or
xchg
test
jl
and
out
jp
mov
adc
bound
leave
push
ret
pop
mov
mov
mov
xchg
sbb
movsb
push
adcl
dec
pushf
bound
mov
and
pusha
mov
in
jb
inc
adc
or
jl
sbb
push
jp
sub
mov
jns
or
lods
mov
sarb
rclb
sub
js
loope
cmpsl
xor
mov
xor
or
mov
mov
mov
cmpsl
cmp
dec
push
test
cmp
xor
andb
insb
outsb
aam
sbb
inc
ret
or
xchg
push
sbb
sbb
repnz
ret
inc
push
xchg
js
adc
test
int3
jle
popa
dec
mov
or
push
shl
and
inc
fadds
mov
mov
mov
ret
jb
aam
dec
push
sbb
fdivrs
shl
mov
rclb
ror
test
lods
adc
add
add
incl
jmp
neg
pushl
inc
hlt
fdivrs
fstpt
or
sbb
dec
pusha
bound
add
enter
cmp
sarl
ljmp
sahf
inc
adc
add
sahf
or
or
add
jno
mov
nop
mov
fcoml
xor
nop
inc
add
add
jo
jp
pop
dec
data16
es
arpl
sub
xor
imulb
push
daa
xchg
movsb
lods
mov
in
jb
pushf
or
lcall
mov
int3
int3
fdivl
and
test
mov
addl
fadds
xchg
inc
sahf
pop
je
xlat
enter
xor
leave
faddp
dec
mov
inc
add
nop
lods
in
xchg
inc
idivb
xor
lcall
pop
xchg
into
into
push
std
js
dec
mov
fs
insl
adc
ret
lods
clc
sbb
lret
mov
or
mov
push
add
js
test
lock
inc
sbb
sub
mov
sarb
xchg
pop
xchg
fucom
and
ljmp
addl
sbb
movsb
ret
pop
test
test
test
push
movsb
enter
out
pusha
and
sbb
mov
push
push
int3
xchg
cmp
es
add
sub
mov
inc
push
pushf
sub
inc
das
xor
xchg
testb
push
paddusb
push
aam
test
hlt
dec
jo
push
movsb
adc
adc
jnp
sbb
cmp
add
shlb
sub
xor
pop
jecxz
jp
loop
cmp
bound
cmp
or
js
or
lods
mov
mov
jb
dec
aam
lret
add
inc
mov
sbb
dec
and
pop
mov
pminsw
or
mov
dec
jb
sahf
jle
leave
movsb
xor
sbb
sbb
adc
sub
mov
sbb
pusha
jp
mov
push
es
sti
push
shll
ret
je
addr16
cmpsb
pop
dec
call
fs
dec
bound
rcrb
loopne
or
push
xor
fdivl
inc
push
pusha
push
add
mov
xor
ss
ret
xor
ficomps
xor
jo
out
ss
dec
xchg
xchg
into
jno
push
sbb
sbb
lds
test
ret
loope
xchg
or
aad
and
jmp
jp
xchg
shr
add
mov
push
cmp
nop
push
sbb
and
int3
push
cwtl
jno
adc
push
mov
dec
or
pop
jo
adc
dec
loope
sub
cmpsb
lods
data16
aaa
jne
sub
in
jl
lea
mov
mov
bound
nop
push
xor
mov
into
jbe
call
jno
push
jnp
sbb
lock
rorb
arpl
test
sub
xor
mov
push
dec
enter
and
adc
movsb
add
enter
fidivrs
mov
jb
js
data16
mov
adc
add
push
xor
fmul
jb
adc
push
inc
and
mov
jb
and
popa
sahf
sub
pushf
mov
negb
push
rolb
clc
lret
sbb
pop
add
pushf
adc
in
push
lret
lods
roll
jle
push
and
loop
push
inc
mov
or
jp
movb
je
xchg
xor
je
loope
xor
ds
inc
xchg
adc
sbb
jae
sbb
sub
ret
dec
adc
ror
ret
add
xchg
xor
cmc
lock
mov
cmp
bound
dec
lods
adc
adc
sub
lret
add
add
dec
or
ret
or
es
cmp
xor
lods
or
and
xchg
fisubl
rcr
dec
test
or
lods
movsl
inc
fcomp
or
add
inc
mov
inc
xchg
push
pop
add
jae
jo
and
jo
adc
in
rorl
and
or
inc
out
xchg
xor
pop
jbe
dec
das
lods
nop
sbb
mov
and
xor
jmp
jo
adc
xchg
hlt
mov
sub
xchg
or
lock
popa
arpl
xchg
cmp
fs
sahf
and
xchg
cmpsb
push
movb
sbb
data16
add
call
xor
dec
in
stos
push
dec
xor
imul
lods
pop
into
sub
sub
lods
loop
adc
pop
dec
xchg
int3
ljmp
and
jp
jecxz
or
pop
shlb
sbb
jp
dec
mov
ret
mov
push
adcb
adc
push
ficoms
mov
mov
stos
xchg
lret
mov
push
out
cmp
rcll
inc
test
test
cmpsl
lock
push
jo
sbb
jp
xchg
cmp
pushf
and
mov
and
sbb
orl
out
sbb
mov
jo
and
call
sarb
sbb
arpl
fidivs
mov
xor
sub
loopne
xor
push
scas
inc
cmp
cmp
shl
push
add
les
fs
mov
cs
mov
add
repnz
enter
xchg
sbb
mov
sbb
in
jb
loopne
inc
push
push
cmp
add
add
adc
mov
pop
cs
mov
mov
ljmp
loop
mov
fimuls
int3
push
cmp
jbe
inc
cmp
in
mov
mov
jmp
es
pop
mov
pop
test
pslld
pop
in
jae
jns
js
ficoml
jg
jo
sub
shrb
nop
leave
leave
adc
push
push
aad
and
fs
sub
push
or
adc
cld
pusha
jbe
add
in
out
adc
pop
push
add
mov
xchg
std
push
and
ljmp
adc
movsb
adc
jae
mov
push
pop
or
jmp
xor
inc
cmp
sbb
fisttpll
aaa
push
les
pop
fimull
or
sbb
scas
int3
popa
inc
js
test
js
mov
mov
pop
insb
stos
add
cwtl
test
cmpsw
jb
fs
dec
and
faddp
sbb
js
mov
cmpsl
gs
dec
xor
jb
add
enter
sbb
sahf
sub
dec
pusha
imul
ljmp
outsb
lret
add
push
je
fimull
cld
je
adcb
inc
rclb
cmp
inc
add
jne
sub
add
xor
mov
mov
cmp
cli
adc
pop
loope
mov
push
sbbl
dec
cmp
pop
arpl
push
cwtl
mov
pusha
in
cmp
push
and
adc
subb
lret
jecxz
pop
fldcw
jne
dec
push
sbb
cmpsl
and
xor
outsb
cmp
inc
arpl
or
pop
loop
dec
jbe
pop
add
xchg
or
lret
or
sub
add
cli
pop
outsl
ret
push
je
addr16
test
xchg
shr
bnd
xchg
test
jmp
stos
and
lret
pop
xor
push
rcr
subb
sub
data16
push
or
pushf
jno
nop
out
les
es
mov
inc
loop
adc
mov
push
cmpsl
aaa
pop
imul
mov
mov
xchg
clc
rol
sbb
cmp
add
daa
daa
loope
xor
xorb
pop
insb
mov
push
testb
rorb
cmp
pusha
enter
pusha
xchg
adc
mov
cmp
xchg
rolb
test
sahf
push
mov
sub
inc
cltd
xor
push
sub
adc
test
inc
icebp
nop
adc
push
add
xchg
sbb
lods
xchg
and
mov
jl
roll
adc
xchg
sbb
mov
mov
adc
or
inc
add
daa
and
jle
dec
fxch
xor
ss
adc
lods
lret
jb
add
mov
ret
or
or
dec
and
or
lods
push
popa
lret
sbb
jne
dec
jg
cmp
push
ret
push
ljmp
mov
pop
adc
or
ret
xor
mov
inc
jl
insl
es
bound
mov
dec
inc
or
dec
rorb
jbe
pop
imul
and
loopne
push
push
cmp
push
daa
inc
jne
sahf
adc
or
or
mov
out
or
lods
mov
mov
adcb
lcall
stos
ret
call
xchg
pop
inc
mov
mov
rcl
jp
push
aam
add
cmp
roll
inc
sbb
jns
sahf
cmp
inc
movsb
pop
inc
xchg
sbb
adc
add
add
insb
pop
ret
push
or
ret
xor
or
leave
pop
jp
and
rol
add
add
sbb
ljmp
lea
bound
or
mov
mov
and
jcxz
cwtl
rcrb
add
dec
adc
push
mov
mov
mov
mov
shlb
push
cltd
test
pop
outsb
or
rcl
ljmp
or
pop
inc
xor
add
sub
dec
out
clc
mov
mov
sbb
add
nop
pushl
cmp
insb
pop
cmp
mov
and
jp
inc
jg
or
push
je
xor
push
ficompl
pop
mov
cmp
dec
lods
or
xchg
gs
xchg
popl
xchg
test
sbb
dec
jl
sbbb
mov
addr16
insb
or
hlt
ja
pushf
sub
adc
add
lcall
mov
daa
jp
xchg
sbb
cmp
mov
mov
cmp
stos
push
mov
out
mov
bound
sbb
clc
stos
adc
push
inc
cmp
test
push
cmpsl
orl
sbb
dec
or
add
cmp
outsl
sbb
adc
cld
cwtl
cmp
sarl
pop
dec
and
and
or
mov
dec
xor
lcall
adc
in
jp
enter
jae
rorb
adc
jl
mov
psubq
adc
fabs
gs
xor
add
or
or
pushf
loopne
mov
rolb
xor
adc
xchg
ret
test
cli
push
stos
xchg
test
scas
pop
mov
push
push
mov
add
dec
add
fildll
sbb
ret
roll
fcomps
sbb
xor
es
hlt
push
fldl2e
sub
fmuls
xlat
jb
ljmp
dec
xor
loope
test
adc
in
cwtl
or
or
leave
xor
lods
xchg
lods
test
mov
pop
inc
andps
adc
mull
shlb
popa
add
push
inc
icebp
into
jno
loope
ret
mov
insb
mov
loop
jl
cmp
or
push
sub
pusha
adc
in
js
pop
sbb
int3
mov
pop
and
xor
js
sbb
out
jmp
adc
sbb
xor
dec
pop
ret
sbb
daa
inc
sub
rolb
test
cmp
data16
xchg
adc
jmp
push
push
or
sbb
cmp
icebp
ret
sarb
insb
test
loopne
xchg
addb
decl
xchg
negl
aam
xchg
inc
aaa
pop
lods
subb
das
inc
cs
xor
xor
lods
add
pop
mov
adc
fcomps
adc
cmp
mov
dec
shlb
add
test
mov
or
push
ret
add
adc
jbe
pop
cmp
push
lods
inc
or
jp
das
or
sub
push
push
pop
ret
call
shlb
popa
mov
icebp
jl
push
sbb
dec
dec
add
push
and
sbb
ret
pop
push
inc
push
jbe
mov
cs
mov
jne
fs
xchg
push
ss
sahf
fisubs
lea
mov
aaa
adc
js
mov
mov
adc
or
mov
repnz
bound
je
sbb
int3
call
pop
sbb
mov
les
jmp
mov
ror
push
inc
lock
leave
test
in
ss
ret
push
xor
cwtl
add
add
add
mov
jbe
fcoms
mov
pop
xchg
dec
mov
loopne
je
mov
push
das
imul
xchg
sbb
or
jo
ss
sub
dec
dec
test
and
sub
sbb
add
adc
or
lods
xor
xchg
out
mov
mov
mov
cmp
jo
and
xchg
and
mov
xchg
loopne
lock
xor
mov
test
nop
scas
ret
xor
sbb
rclb
jo
dec
hlt
mov
adc
add
mov
jo
fisubrl
xchg
push
inc
daa
hlt
mov
xchg
pop
push
add
ret
mov
pop
outsl
lret
push
pusha
dec
push
pop
mov
shlb
and
mov
jle
popf
pusha
inc
sbb
shrb
and
xorl
loop
xor
inc
sub
inc
and
fsubp
or
loopne
cltd
sbb
xor
mov
cmpsl
push
shrb
push
pop
mov
movsb
push
test
and
mov
sbb
popa
loopne
leave
push
scas
and
pop
cwtl
jne
cmp
in
fisubl
lods
test
nop
push
push
xor
es
fidivrs
repnz
js
fldl
push
enter
xor
cmp
out
push
scas
mov
push
sbb
xchg
pop
pop
pop
pop
adcb
outsb
mov
dec
data16
add
aaa
sub
ret
in
out
sbb
sar
test
xchg
dec
adc
dec
push
jbe
push
pop
cmc
sub
xor
movsb
and
rcrb
dec
or
or
nop
or
inc
add
mov
mov
jne
pop
lods
and
push
push
and
imul
ret
mov
sbb
inc
push
lea
popf
mov
mov
daa
sbb
lret
lods
in
orb
push
fmuls
out
cmp
daa
into
sar
inc
inc
rorl
and
cmc
lcall
xchg
mov
jno
add
or
mov
ljmp
out
cmpsl
lea
mov
push
add
pusha
jo
ljmp
rolb
xchg
fmuls
jo
dec
jae
inc
shrl
insb
lret
nop
push
movsb
mov
movsb
xor
rcl
and
and
xchg
adc
mov
xor
and
cmp
or
mov
and
xchg
inc
pusha
or
test
mov
test
ljmp
xor
call
pop
push
push
pop
fsub
popa
or
sub
imul
lret
jle
push
lods
jle
int3
js
xchg
orb
ret
xchg
or
fcoml
sub
cmpsl
sub
mov
push
sbbb
jo
inc
or
icebp
loopne
cmp
cmpsl
mov
ljmp
hlt
popa
add
push
outsb
mov
inc
sbb
enter
adc
or
mov
call
sub
or
lret
sbbl
mov
xor
lods
sgdtl
mov
js
or
in
loop
mov
pushf
lods
push
dec
xchg
cs
add
cmp
fstps
imul
adc
or
pop
lods
adc
and
or
xor
adc
inc
mov
js
add
xchg
cmp
mov
add
movsb
xchg
pushf
movsl
mov
mov
in
or
xor
ret
js
mov
push
lahf
mov
daa
sbb
enter
roll
rcrb
lock
inc
loop
add
pop
push
or
xor
les
inc
fmuls
dec
push
sbb
loop
pop
mov
pop
push
push
push
push
and
xchg
xchg
shl
les
fnstcw
xor
mov
inc
adc
mov
movsl
ret
jb
mov
sbb
xchg
xorb
and
insb
pusha
lcall
add
push
in
push
xchg
loopne
pop
sub
lods
cmp
sbb
cmpsb
xchg
push
inc
testb
add
xor
cmc
js
dec
push
enter
jns
sahf
pushf
push
xchg
hlt
es
fsubl
orl
cmpsb
xor
fmull
adc
fdivp
pop
sbb
loopne
orb
enter
xor
xor
lods
out
or
mov
jp
mov
add
ret
add
outsb
push
or
int
hlt
lds
jle
xor
add
lods
shlb
pop
mov
imul
sahf
dec
add
pusha
or
mov
xchg
shr
data16
inc
enter
lret
and
test
add
xchg
adc
pop
repnz
and
xor
xorl
adcb
or
ljmp
test
push
data16
out
cmp
in
dec
arpl
in
rcrb
ficoms
push
das
or
test
scas
call
pop
mov
rolb
rolb
lea
ja
fwait
mov
add
push
ss
inc
push
pop
lods
test
pop
dec
jo
insb
xor
scas
and
rorb
push
sahf
lret
cmp
sub
notb
sub
test
add
add
cli
cmp
pop
sbb
sub
push
into
pop
outsb
pusha
movsl
sarb
xchg
fadds
inc
rcrl
and
mov
inc
push
xor
xchg
add
ds
stos
lcall
lret
popf
push
mov
mov
rolb
mov
loope
jbe
js
mov
pop
lods
mov
inc
addl
call
data16
orb
jo
mov
faddp
rol
xor
sbb
pop
sub
pop
cmp
xchg
mov
cmp
sahf
push
adc
sahf
push
es
add
pop
push
js
into
adc
decb
fs
push
sbb
or
decb
pop
or
xor
xor
push
nop
inc
inc
push
data16
push
push
xchg
arpl
dec
and
push
xchg
sbb
aaa
adc
cmp
in
or
ret
cmp
ret
add
add
jb
cmp
ds
push
jo
push
mov
ds
inc
cmp
mov
jo
mov
stos
es
les
popa
mov
call
mov
mov
dec
js
jae
inc
js
mov
pop
cmpb
push
inc
cmp
dec
lods
and
insb
dec
sub
and
outsb
popa
and
xlat
add
pop
adc
push
ret
cmp
lret
lods
addl
and
push
sub
jbe
sbbb
popa
and
sbb
push
mov
xchg
cmp
pop
sbb
cmp
pop
adc
es
fcoms
sub
sub
push
sbb
faddl
mov
push
push
dec
xor
out
dec
pop
loope
jge
xchg
cld
pop
arpl
sbb
push
js
sahf
mov
bound
and
pop
adc
and
nop
sub
and
lret
mov
ret
sub
loop
add
mov
ss
mov
aam
add
ljmp
cmpsl
cmpsl
mov
inc
test
ljmp
imul
or
jns
adc
mov
xor
lret
sbb
dec
test
sbbl
shlb
xchg
cmp
xor
sbb
mov
add
enter
dec
push
xchg
sbb
loope
lods
test
jno
mov
loopne
mov
add
push
sbb
bound
bound
pusha
add
xchg
pop
jns
push
pop
add
jp
loope
aaa
mov
and
push
ds
fistpll
mov
fcmovbe
sbbb
stos
and
push
jp
mov
push
test
xchg
cmp
sbb
sbb
push
pusha
xchg
mov
adc
jo
imul
push
hlt
jp
pop
adc
mov
sbb
sbb
pop
mov
data16
mov
mov
es
add
pop
xor
ret
mov
push
dec
xor
stos
mov
mov
lock
sbb
or
sbb
mov
push
xchg
test
pop
pop
rol
in
push
or
add
push
incb
pop
push
inc
add
jo
roll
pop
loop
and
andb
rorb
ret
js
out
cld
fcomps
in
and
mov
adc
ljmp
mov
sub
cmpb
dec
imul
ljmp
mov
cmp
daa
loop
cmp
sbb
xchg
ficoms
mov
sub
add
je
or
mov
fsubrl
lods
sub
cmp
push
dec
loop
ret
sub
lods
mov
test
cwtl
or
push
orl
pushf
pop
daa
push
xchg
xchg
ljmp
or
lds
popa
fs
mov
inc
ret
xchg
mov
pop
xchg
jp
cmpsb
inc
mov
arpl
xor
dec
add
outsb
insb
sub
push
mov
popa
and
lea
pop
test
out
xchg
mov
push
addr16
hlt
mov
push
loop
nop
fiaddl
jecxz
dec
enter
rolb
xchg
push
test
dec
jno
pusha
mov
addb
lret
es
enter
pop
push
mov
outsb
daa
xchg
jmp
dec
pushf
dec
pop
fdiv
dec
xchg
sbb
jb
test
mov
adc
js
mov
cmpb
and
pop
cmp
xor
xchg
shlb
xor
js
add
mov
mov
sub
xor
push
iret
icebp
sarb
loopne
mov
or
and
sahf
dec
int3
add
add
imul
inc
shll
out
jp
add
or
sbb
jp
lods
pop
ss
add
xchg
or
add
and
test
cmp
punpcklwd
mov
es
insb
in
lock
pop
dec
rclb
xchg
inc
fs
jg
push
addr16
mov
insb
inc
ror
or
sub
outsl
fists
neg
jmp
xchg
xchg
call
add
mov
mov
and
inc
nop
or
arpl
lret
adc
cwtl
ljmp
mov
arpl
movsb
ja
jmp
and
adc
ljmp
adc
movsl
pop
adcb
push
outsb
pop
jge
popa
cmpsb
inc
and
ret
push
sarb
xchg
mov
inc
out
add
sbb
shl
stos
xchg
fs
enter
xor
in
mov
inc
fcoms
xchg
cmp
ret
lret
ret
ficomps
mov
clc
cli
sbb
mov
sub
les
dec
cmp
mov
test
sbb
add
xchg
mov
lds
rcl
sbb
pop
and
jae
and
clc
jp
enter
jmp
test
and
pop
nop
push
mov
fs
xor
mov
cmp
rcrb
int3
arpl
in
rorb
mov
mov
or
add
jl
jo
and
mov
nop
or
mov
out
sbb
fisubl
inc
mov
push
std
xchg
lret
loopne
jecxz
adc
arpl
dec
sub
xchg
adc
xchg
lock
jbe
addb
es
shlb
push
push
or
rclb
pop
shll
cmp
cwtl
push
push
and
cmp
xchg
test
xchg
and
mov
adcl
and
push
daa
cwtl
xchg
mov
xchg
xor
jo
mov
les
mov
xchg
dec
mov
pusha
pop
mov
dec
pusha
xchg
mov
mov
add
pusha
sbbb
fidivl
jo
xchg
hlt
add
cmp
add
pop
cmc
xchg
pop
sbb
xchg
fldenv
ljmp
mov
xor
fsubl
dec
mov
add
fcoml
stos
xor
inc
rolb
push
dec
and
pop
add
jo
ja
mov
sub
mov
add
fs
in
add
sbb
mov
out
pop
and
inc
call
rcrb
push
scas
adc
rcll
push
cmp
test
pop
add
fcoml
ret
jo
jo
les
into
movsl
pushf
int3
add
ds
xchg
cmpsl
test
jns
mov
adc
adc
shrb
enter
or
jbe
rorb
xor
es
invd
cmpsb
inc
pushf
repnz
jbe
jbe
sbb
cmp
shufps
aaa
sbb
mov
and
jmp
xchg
add
add
loop
adc
js
dec
lret
adc
hlt
and
mov
addb
xor
lods
dec
sbb
data16
sbb
rol
or
addb
jno
xor
and
dec
pop
lahf
push
sub
pushf
in
pop
in
hlt
rcrb
xor
lock
into
in
cmp
pop
mov
ljmp
jbe
mov
push
mov
or
xchg
push
or
in
xor
cld
lods
adcl
adc
jo
lods
and
cmpb
add
aam
lret
lods
add
inc
insb
inc
cmpsb
push
mov
push
pop
addr16
cmp
cli
in
clc
ss
enter
out
cwtl
add
sbb
mov
jb
rcrb
xchg
cli
enter
icebp
cld
pop
nop
mov
jo
pushf
mov
push
sbb
jb
addl
or
push
data16
cmp
imul
adc
scas
mov
mov
xadd
or
sbb
adc
lods
add
sahf
push
mov
sub
out
sub
sbb
test
popf
inc
movl
jo
rolb
lods
pop
jo
in
mov
js
sbb
add
cmp
adc
das
inc
sub
nop
aam
lea
inc
ret
rcrb
mov
loopne
add
sbb
xor
fsubrl
shrb
jmp
loopne
js
push
xor
push
test
or
outsb
aam
adc
push
push
arpl
orl
sbb
push
stos
rcll
jae
inc
cmp
xor
push
pop
arpl
test
sub
mov
rcrb
dec
rcrb
loope
mov
sbb
xchg
cwtl
je
jo
inc
js
mov
mov
movsb
adc
lods
movsb
ds
dec
imul
add
adc
adc
mov
push
cmp
shl
and
loopne
push
ffreep
xchg
pop
mov
cmp
lods
or
and
fmulp
xor
loopne
push
je
pusha
lock
or
sub
jno
call
sub
not
call
xchg
adc
and
faddp
ror
xchg
xor
cmp
les
inc
sbb
es
fsts
jle
push
fcomps
test
or
sbb
lods
or
fisubl
inc
and
lock
in
mov
enter
imul
rclb
lock
and
addr16
xchg
mov
pop
stos
scas
add
icebp
test
in
adc
push
mov
mov
and
cmovno
or
jbe
adc
fcoms
mov
sahf
xor
nop
data16
sbb
rolb
push
pushf
jb
lods
xorl
repnz
dec
js
add
les
dec
xchg
pop
and
adc
test
fwait
add
imul
sub
add
loop
xor
and
fstpl
jb
add
or
dec
test
inc
rcr
leave
xorb
jb
push
cmpb
sbb
jl
add
adc
or
sahf
cwtl
push
mov
in
pop
push
test
std
jmp
cli
repnz
aad
int
jb
cmp
dec
add
jo
mov
adc
stos
ljmp
imul
daa
sbb
cmp
adc
js
mov
and
cmp
mov
enter
adc
cmp
mov
in
sbbb
inc
bound
insb
inc
rcrb
xor
sbb
dec
loopne
mov
enter
rorl
mov
je
xor
add
and
stos
rolb
pop
or
outsb
or
xor
dec
test
add
push
xor
pop
loop
das
adc
sub
or
add
popf
mov
xor
test
xor
push
stos
adc
gs
es
fs
pop
mov
xchg
sbb
mov
xchg
add
mov
fiaddl
xchg
fsubr
pop
add
shll
test
mov
or
sbb
mov
and
pop
fsubrl
bound
shlb
sub
ss
sbb
and
mov
in
fimuls
xchg
jmp
in
sub
pop
fs
mov
ljmp
jb
int3
clc
inc
or
loop
aam
and
xor
push
sub
imul
xchg
jb
and
in
jle
inc
sbb
adc
xchg
add
push
call
add
pop
jmp
inc
add
or
cmpsb
roll
xchg
in
js
dec
negb
push
scas
sbb
inc
lcall
and
ficoms
dec
pop
and
pop
inc
out
inc
pop
cmp
sub
testl
leave
fistpl
std
xor
dec
loopne
mov
lahf
adc
adcb
addr16
clc
stc
rol
sbb
jbe
je
sbb
add
dec
addr16
shr
xor
dec
loopne
xchg
test
lods
dec
shlb
adc
lcall
loop
inc
pusha
ficoml
add
xor
or
aam
js
into
outsb
shlb
mov
ds
xchg
sbb
push
loopne
sbb
mov
addr16
pop
and
push
decl
add
fsubs
and
sar
sbb
cmpl
pusha
or
push
jp
test
fwait
rolb
sub
mov
jo
xor
jmp
enter
rcrb
adc
sbb
pushf
and
sub
insb
add
popf
mov
push
shl
mov
fdivp
es
add
les
addr16
inc
pop
mov
pop
or
rclb
mov
push
lret
mov
bnd
inc
push
js
push
movsl
mov
test
lods
push
subl
inc
aam
fs
mov
rclb
inc
sbb
mov
xor
cmpsb
mov
push
aam
dec
popw
test
jb
xchg
xorb
push
lret
mov
or
insb
and
pop
push
add
adc
outsb
adc
add
push
push
xchg
lods
sahf
inc
outsb
mov
mov
mov
loop
mov
or
aam
ljmp
xchg
out
sub
rcrl
jle
int
dec
out
add
adc
pushf
out
lahf
je
lods
ret
gs
or
or
sbb
or
and
int
stc
jg
inc
ror
adc
not
inc
cmpsb
jle
stos
dec
sahf
sbb
mov
lret
xchg
xchg
test
fsubr
add
push
in
push
loopne
xor
xorl
jg
pusha
aas
rcr
dec
mov
or
and
pop
push
cmpsb
cmpsb
inc
ret
fidivl
push
and
rcrb
mov
outsl
sub
mov
ret
popf
cwtl
add
push
fidivl
xchg
sbb
outsb
testl
es
or
adc
fcmove
in
or
cmpsl
ret
adcb
pop
xor
mov
dec
movsl
hlt
add
imulb
sbb
es
push
pop
pop
cld
add
fadds
xor
mov
loopne
mov
test
repz
and
jp
rclb
test
mov
mov
test
shll
mov
mov
pop
push
lods
ret
xchg
mov
ret
popa
mov
add
push
mov
jp
enter
fmuls
jo
pushf
pop
dec
js
or
or
inc
rcrb
jp
sahf
mov
loope
rolb
sbb
xchg
bound
fcomps
inc
sub
xchg
jns
xor
scas
insb
cmp
mov
push
sub
mov
je
in
nop
add
or
into
cmp
or
or
dec
or
ljmp
call
jp
push
add
fs
jbe
pop
dec
adc
scas
cmpsb
sbb
xchg
push
mov
add
xor
push
int
es
push
cli
lret
test
inc
adc
push
and
mov
lock
outsl
mov
xor
cmc
add
mulb
add
clc
add
pop
bound
ret
incb
and
push
shrl
cmp
notl
xchg
mov
inc
pushf
sub
sbb
daa
or
sbb
cmp
push
inc
cwtl
sbb
dec
jo
dec
sbb
xor
pop
jge
movb
mov
fs
dec
push
dec
mov
es
cmp
jb
add
cmp
adc
sbb
rorl
push
mov
push
xchg
sbb
test
enter
icebp
xor
arpl
mov
or
enter
mov
add
clc
jo
sbb
rclb
sbb
push
ret
adc
popa
mov
sarb
out
lcall
les
pusha
inc
dec
movsb
loopne
sbb
adc
mov
adc
addr16
mov
nop
adc
sbb
fmuls
outsl
lret
repz
rorb
outsl
jo
daa
mov
mov
cmpsb
inc
popf
or
mov
or
arpl
or
mov
mov
mov
rolb
mov
mov
pusha
add
inc
or
mov
leave
mov
xor
sbb
add
in
push
rcpps
cmpsl
add
pop
mov
add
add
ds
fs
sbb
mov
mov
shlb
rolb
or
pop
cmpb
push
push
sbb
fiaddl
ficoms
ficoms
repnz
decl
fnstcw
sub
imul
mov
mov
mov
bound
rcl
mov
sbbb
mov
xchg
test
mov
fs
rorl
lock
inc
mov
imulb
int3
push
and
push
je
ret
je,pn
bound
scas
js
add
fsub
add
cmp
push
jo
das
ljmp
test
sbb
sub
mov
lock
sti
daa
and
xchg
add
add
sarb
adc
loopne
out
out
negb
mov
shrb
mov
loop
into
jne
pop
data16
adc
mov
mov
hlt
ss
test
mov
mov
es
push
test
outsl
loop
adc
test
adc
or
or
dec
mov
lods
mov
xchg
dec
cld
testl
fdivrs
outsb
js
fmull
arpl
xchg
jmp
lea
pushf
into
cmp
dec
push
outsb
cmp
jb
add
xchg
cmp
inc
jno
dec
pushf
adc
arpl
dec
subb
push
fimuls
popa
pusha
or
pop
pusha
loop
adc
pushf
test
adc
cmp
das
lret
nop
fs
pop
push
addb
in
inc
and
xchg
cmp
jp
add
inc
fsubrl
movsb
jno
and
sbb
cld
sub
cmp
cltd
mov
aaa
adc
int
cmp
xor
adc
sbb
loopne
or
stos
pop
add
lods
sahf
scas
enter
or
js
and
jle
cld
xchg
jp
js
loop
rorb
xchg
pop
jbe
pushf
push
push
sub
sub
adc
clc
fmul
mov
xor
inc
sarl
or
dec
add
fildl
xchg
jne
push
lods
addl
lock
clc
mov
and
jo
add
push
lods
mov
sub
ret
mov
out
ljmp
sahf
pop
mov
lret
shlb
test
loopne
jp
inc
or
orb
clc
xchg
icebp
adc
pushf
movsb
aaa
popa
xchg
inc
push
lods
mov
cs
push
sbb
xchg
push
push
notb
inc
mov
addl
inc
inc
jecxz
adc
test
std
push
loop
mov
loopne
and
add
push
and
push
xchg
inc
lods
aam
movl
or
sub
pop
or
jecxz
loope
pop
mov
mov
jb
lret
add
hlt
hlt
mov
mov
sub
push
mov
into
mov
test
push
fimuls
adc
out
inc
and
xchg
xor
cmp
cmp
or
push
cwtl
pop
arpl
lcall
popa
aam
adc
push
outsb
stos
inc
mov
nop
fisttpll
and
xor
mov
hlt
and
in
and
js
rcrb
sbb
xor
xchg
mov
lret
std
mov
mov
dec
popl
adc
xorb
mov
fidivrs
add
shlb
xchg
or
sub
adc
sbb
gs
pop
mov
dec
ss
mov
adc
mov
mov
pusha
test
inc
sbb
dec
xchg
xchg
push
out
outsb
dec
dec
and
xor
inc
add
sbb
cwtl
movsb
bound
xchg
and
stos
add
movsb
dec
cmp
xchg
sbb
je
pop
leave
test
sbb
mov
data16
int3
xorl
or
dec
test
dec
xchg
sbb
testl
xor
test
sub
movsl
mov
test
mov
bnd
shrb
lock
gs
xor
push
ret
push
ror
dec
xchg
cmpsb
dec
cmp
push
mov
dec
dec
adc
loop
adc
pop
mov
mov
sbb
nop
and
sarb
or
dec
inc
push
mov
rorl
cmp
dec
mov
clc
mov
movsb
les
xor
lcall
ret
fldl
or
adc
mov
mov
test
dec
les
jbe
push
sbb
or
jl
pushf
xor
dec
pushf
mov
call
dec
sbb
sub
test
add
xchg
sub
test
or
cmp
dec
test
mov
pusha
pusha
das
inc
mov
popa
xorb
jo
fsubl
cmp
xchg
daa
movsb
xchg
cmp
arpl
pop
sbbb
adc
cmp
sub
jo
repnz
dec
sub
lods
shlb
mov
cli
fs
loop
jl
loope
xor
fidivrs
xor
pusha
push
or
and
pop
nop
cmpsb
or
xchg
or
popf
sub
pop
cwtl
pop
inc
out
dec
pop
cmp
cmp
test
xchg
bound
mov
loop
pop
pushf
lea
inc
fadds
add
and
add
adc
pushf
or
add
cmp
xor
rcr
adcb
sbb
xor
mov
lcall
adc
pop
dec
call
mov
arpl
outsb
mov
test
push
add
add
or
mov
rolb
loop
mov
into
jo
dec
stos
or
push
out
or
pushf
mov
sbb
dec
lds
js
xchg
shlb
fadd
addl
push
jp
lods
sub
test
jecxz
jp
mov
icebp
and
je
cmp
sub
dec
shlb
mov
loope
iret
push
jbe
sbb
fs
loopne
jbe
sbb
repz
fs
push
jnp
mov
mov
mov
mov
lock
jnp
and
inc
and
shrb
sub
push
ret
js
add
mov
xchg
mov
mov
mov
pop
mov
fadd
call
pop
and
pop
mov
js
loopne
cmpsl
hlt
cmp
stos
dec
daa
adc
sbb
inc
jno
xor
sub
push
adc
xor
shrb
add
enter
cmp
mov
sub
sbb
adc
and
sbb
xchg
xor
add
call
xchg
or
push
and
pop
aam
mov
sbb
into
cltd
xchg
pop
mov
push
out
ret
orb
cwtl
int3
jb
adc
mov
movlps
dec
loop
popf
xchg
jb
fisubs
test
ror
mov
ret
dec
or
and
mov
loop
lds
cmpsl
pop
mov
xchg
lds
pop
pusha
sub
push
outsl
aam
loopne
adc
jecxz
pop
pop
add
push
cld
mov
lock
push
dec
pop
dec
xor
xor
mov
loopne
mov
loope
inc
ss
das
jmp
push
add
dec
cmpsl
es
sbb
imul
mov
mov
adc
mov
or
xchg
je
dec
movsl
xlat
sbb
test
adc
loop
push
add
lock
pop
aam
dec
es
aam
inc
and
jmp
into
and
cs
push
mov
arpl
pop
bnd
loopne
cmp
jb
jno
fisubl
or
adcb
adc
test
test
or
into
js
dec
mov
adc
xor
sub
rol
inc
fisubrs
xchg
pop
ret
fidivrl
push
cmpsb
into
jp
fs
sbb
into
mov
sub
jbe
push
ror
js
xor
xlat
pop
mov
sub
mov
ss
or
mov
add
lods
sbb
mov
repnz
cmp
arpl
inc
das
ret
test
push
enter
cmp
lret
and
ret
dec
pop
sub
mov
mov
hlt
pop
jge
push
xchg
pusha
xchg
mov
outsb
mul
sub
stos
cmp
call
pusha
dec
js
orb
push
lods
dec
inc
ret
pushf
lcall
xor
orb
loope
mulb
test
mov
pop
adc
mov
ret
push
sub
or
sbb
push
dec
jo
fs
orb
jle
or
cmp
xchg
jo
dec
mov
or
mov
adc
mov
push
outsl
rcrb
loopne
fadds
pop
xchg
add
sbb
pop
cmp
fwait
pop
mov
cmp
arpl
mov
mov
popa
ret
rcl
mov
jecxz
mov
arpl
outsl
lret
mov
sub
xchg
int3
repnz
push
mov
adc
xchg
loopne
jo
push
inc
ret
add
mov
pop
js
add
push
movsb
subl
enter
addb
push
sbb
inc
fiadds
loopne
je
pop
fdiv
push
add
add
in
cld
and
adc
or
addr16
into
lret
and
jecxz,pn
mov
adc
or
sub
movl
adc
jmp
adc
add
add
add
jecxz
pushf
popa
jl
pop
les
add
jg
addr16
lret
lret
pop
lret
sarl
aad
inc
neg
lock
sti
incl
into
inc
sti
aam
test
jae
jge
mov
shl
not
popa
or
mov
jle
jecxz
sub
jmp
shrb
sti
pop
testl
push
push
les
adc
mov
shrb
pop
jge
rcl
rol
shl
lods
xchg
mov
sub
mov
lock
sbb
fnstenv
out
add
add
sub
fistpl
sar
mull
notl
cli
outsb
xorl
xchg
outsl
add
or
xchg
ss
xchg
lret
iret
pusha
add
lock
push
xchg
rol
add
inc
or
inc
xor
sbb
cmp
pop
pop
repnz
and
shlb
inc
rolb
mov
mov
test
je
cwtl
xlat
pop
or
or
icebp
add
inc
xchg
divl
movsl
orb
cltd
sub
outsb
sub
dec
sbb
stc
inc
sbb
repz
jge,pt
mov
aas
fadd
jmp
rcl
das
insb
jecxz
ja
xor
mov
mov
jo
test
sti
push
les
or
ret
add
jne
sbb
xor
pushf
sti
or
sbb
in
sbb
call
pop
and
popl
dec
xor
sbb
clc
data16
std
lea
push
push
or
sbb
push
lea
jo
jg
mov
fsubs
movsb
jnp
sbb
xchg
add
js
xchg
setbe
out
pop
imul
data16
pop
push
dec
aam
clc
cmp
push
push
scas
icebp
and
and
sbb
mov
insl
push
or
add
popa
and
call
mov
add
xchg
stc
ja
sbb
repz
in
fsubs
out
sbb
arpl
ss
int
sub
mov
mov
sub
xor
mov
xorb
cld
test
sub
loopne
je
in
or
add
cmp
movsl
je
data16
imul
add
ret
mov
int3
leave
sub
rorb
dec
add
inc
cmpl
mov
dec
not
loopne
dec
sahf
or
jo
test
jo
sbb
inc
push
fcoms
cmp
sub
dec
and
mov
pop
mov
pop
add
rclb
rcrb
add
loop
into
mov
lock
adcb
and
popf
gs
les
push
adcb
aaa
lret
adc
pusha
or
out
xchg
insb
test
add
jmp
push
in
sub
xchg
adc
jb
test
mov
and
mov
mov
xor
mov
cwtl
inc
adc
cmp
mov
sub
and
pop
js
add
cmp
add
adc
fsub
adc
hlt
adc
fadd
insb
cld
cs
mov
movsb
add
xor
js
and
or
sbb
inc
lods
xchg
subb
cmp
repnz
pop
xor
jl
xor
rcl
nop
push
jl
repnz
mov
mov
test
mov
sbb
inc
dec
ret
vmovups
cs
rcrb
lds
sbb
test
lea
mov
not
js
mov
pop
sahf
xorb
rcrb
fcomp
push
imulb
add
popa
push
jb
pop
fldl
xor
loop
test
pop
xor
mov
push
xor
bnd
sahf
mov
lds
cmp
imulb
outsb
xor
or
test
pop
or
mov
pushf
int3
cli
divb
jle
rcll
inc
pop
sub
mov
or
andb
or
mov
xor
fcomps
sbb
test
sbb
fsubrs
mov
sub
enter
aam
add
add
ret
popa
add
pop
add
pushf
mov
rorl
pop
lret
xchg
bound
xadd
push
in
pusha
sub
jo
int3
pop
ljmp
call
mov
jo
hlt
nop
ljmp
cmp
enter
cmp
cmp
cmp
cltd
shrb
hlt
or
push
bound
and
adc
lods
sub
mov
popa
inc
insl
insb
sbb
push
or
mov
mov
push
xor
orb
mov
rsqrtps
mov
shrd
lret
adc
push
mov
icebp
js
sbb
pop
add
sbb
add
push
imul
aam
inc
or
cwtl
xchg
testb
xor
cld
in
ds
lea
or
cwtl
mov
add
and
dec
cmp
add
sbb
fcmovu
or
push
in
sub
jg
in
or
add
xchg
rolb
test
xchg
outsl
mul
add
popa
aad
adc
mov
xchg
add
or
or
dec
add
jecxz
mov
sbb
push
call
addr16
insb
test
call
rol
cmp
adc
in
test
cmp
ret
pop
xor
and
push
push
ljmp
mov
loop
inc
das
jp
push
xchg
mov
xorl
rorb
and
aam
pop
or
rorl
lock
rcrb
or
inc
or
inc
dec
or
rol
testb
ldmxcsr
fnstenv
jg
push
faddl
dec
sub
xor
jp
test
rorb
sub
stos
sahf
cmp
mov
inc
fnstcw
fcmove
adc
push
shrb
out
mov
movsl
adc
test
in
ficoms
pop
addr16
pop
sbb
xor
movsb
jae
push
rolb
fs
sbb
push
push
cld
xor
xchg
xchg
shlb
movsb
cmpl
popa
outsb
scas
sbb
lcall
mov
or
int3
and
mov
push
add
das
dec
or
or
loop
xor
sub
jb
push
jbe
mov
loop
fstpt
or
sbb
lret
and
mov
sarb
addr16
and
or
xchg
les
ret
ficompl
xor
cs
mov
add
add
ljmp
sti
into
jmp
and
das
mov
stos
fiadds
adc
mov
mov
pushf
or
add
lods
push
push
hlt
dec
adcb
adc
andb
cltd
or
ds
cmp
xchg
fsubl
dec
test
sub
test
clc
loop
subl
cltd
lods
int3
pushf
push
adc
pop
loopw
es
push
or
dec
jb
mov
lret
jne
icebp
rcr
lock
mov
sbb
shrb
sarb
push
outsl
nop
mov
dec
mov
mulb
into
cmp
daa
sbb
pop
stos
scas
push
int3
repnz
inc
popf
aad
jp
in
xchg
outsl
loope
aam
aam
mov
adc
jne
cmp
xchg
or
pop
subb
pushf
gs
sbb
ret
xor
mov
and
push
sub
dec
ljmp
push
ret
inc
inc
lods
lods
xchg
push
fidivrs
sbb
dec
mov
mov
mov
cwtl
add
sub
bound
inc
aam
pop
ret
aam
scas
hlt
lods
adc
ss
pop
sbbb
js
pop
cmp
ret
leave
sahf
adc
mov
dec
add
add
xchg
cli
pop
shll
adcb
push
dec
outsl
add
dec
ret
mov
add
push
jo
sub
sahf
mov
popa
out
mov
mov
enter
rorb
mov
mov
out
add
add
lods
sbb
jb,pn
les
loop
cmp
or
add
shr
sub
out
cltd
adc
push
ret
mov
cld
add
xorb
movsl
test
adc
clc
mov
shll
pop
cmp
shll
add
jne
sub
xchg
inc
push
popa
clc
divb
test
in
xor
in
sub
sahf
xchg
popf
data16
xlat
sarb
bnd
xchg
clc
mov
add
je
inc
sub
les
inc
movsl
xor
dec
pop
hlt
sbb
ror
out
pop
rcrb
hlt
sar
pushl
mov
loope
mov
in
stos
xchg
in
sbb
rol
movsb
sbb
cmpsl
movsb
cli
mov
or
xor
test
imul
add
xchg
ret
addb
popa
mov
scas
adc
xchg
pop
rolb
popf
in
adc
jecxz
movsb
mov
sarb
inc
decl
mov
xchg
or
mov
mov
pop
loope
xchg
into
sahf
pusha
sub
or
aam
xor
ja
sbb
push
push
loopne
inc
data16
je
aad
lret
ret
sbb
jmp
movb
sbb
jl
loopne
ret
sub
lea
cmp
in
and
or
cwtl
sub
inc
dec
popa
add
add
cmp
rcl
popa
aam
and
xor
add
mov
loopne
pushf
movsl
mov
ret
leave
test
lods
adc
sbb
or
dec
xchg
sbb
or
add
call
je
mov
imul
aaa
stos
sub
lret
sub
jbe
gs
and
inc
cmp
push
xchg
jo
loopne
xor
mov
adc
xor
rclb
inc
xor
or
inc
push
sbb
lret
add
or
jbe
dec
or
ret
cmc
sarb
test
jl
sub
jae
inc
dec
inc
jp
loop
fimull
add
shr
xor
push
add
sub
xchg
popa
aam
js
lock
push
into
cmpb
push
push
bound
push
xchg
lcall
add
cmc
rcr
je
jnp
and
inc
adc
inc
inc
or
sbb
or
xchg
mov
xchg
enter
lea
pusha
loop
lret
xor
inc
addb
mov
adc
lods
int3
cmpsl
mov
sub
mov
dec
jge,pn
adc
imul
sbb
or
or
cwtl
in
push
push
adc
out
mov
sub
out
push
pop
lods
sbb
mov
ret
imul
sub
call
sub
jmp
dec
jo
and
out
mov
dec
enter
jmp
sbb
xor
rclb
daa
je
or
or
inc
insb
es
mov
xchg
lcall
repz
add
and
daa
mov
mov
and
in
int3
dec
mov
xchg
push
inc
xchg
adc
fcomps
cli
push
sub
adcb
pushf
add
or
mov
orb
cwtl
incb
mov
xchg
or
test
sub
xor
or
cmp
sub
mov
jb
dec
sbb
mov
test
xchg
dec
rcrb
test
int3
push
in
pop
push
out
xorl
add
mov
call
mov
xchg
mov
jg
rcrb
int3
xchg
enter
mov
ds
push
les
dec
add
nop
add
clc
pop
mov
lods
outsl
lahf
or
leave
xchg
and
faddl
pop
dec
mov
test
repnz
loope
xchg
ljmp
sbb
xchg
or
int
push
lret
push
and
adcl
push
mov
notl
mov
adc
test
subb
fstps
xchg
inc
inc
pop
cmc
xchg
add
mov
shlb
enter
sub
inc
jnp
jge
add
xlat
ret
xchg
daa
pop
xor
pop
insl
loop
mov
jb
push
fcmovnu
test
xor
sbb
xchg
adc
notb
orb
add
and
xchg
sbb
and
or
fwait
dec
fsubs
add
lods
or
inc
faddl
sbb
xchg
pop
dec
and
dec
ficoms
iret
lea
pop
ror
dec
push
dec
inc
add
jge
lcall
stc
mov
test
lret
pop
add
xorl
push
inc
loopne
data16
pop
xor
cltd
mov
or
or
xor
push
push
sbb
leave
push
inc
xor
loopne
les
cmp
add
adc
sub
inc
insb
pop
leave
decb
into
ljmp
mov
jp
pop
xchg
push
mov
jo
dec
inc
jo
push
imul
hlt
movsb
aam
and
xor
push
xchg
ret
push
and
pop
sahf
bnd
mov
imul
cmp
in
add
stos
adc
xchg
and
sbb
rclb
dec
cmpl
pop
xor
inc
hlt
jb
jo
or
bound
push
repnz
les
imul
ss
test
xchg
pop
ret
rol
jbe
xor
jo
es
fs
add
mov
inc
sub
insb
sub
xor
mov
loopne
pop
rclb
in
add
mov
dec
rorb
cmp
and
sub
pop
ret
js
jge
sbb
es
pop
xor
sub
sbb
or
mov
inc
xchg
push
inc
out
wbinvd
das
pop
les
mov
scas
negb
enter
cmpsb
mov
push
mov
add
jno
push
pop
push
sub
sub
mov
add
push
les
loopne
mov
fidivl
out
rol
lret
push
add
mov
clc
jl
mov
dec
and
ljmp
push
pop
push
cmpb
xor
xchg
mov
fistl
shll
jl
jne
js
nop
jp
or
lods
cs
mov
adc
rorb
or
inc
sbb
dec
jmp
xchg
addr16
push
push
mov
test
jo
jmp
add
arpl
je
movsb
push
cmp
push
dec
inc
add
push
cwtl
cs
xor
xor
js
test
or
inc
dec
xor
or
mov
xchg
adc
lods
sub
adc
ss
push
subb
push
pop
pop
shl
push
fnstcw
mov
jle
loop
push
adc
xor
lea
add
outsb
icebp
fiaddl
sbb
pushf
pop
cmp
mov
or
mov
daa
popa
pop
sub
pop
fcompl
movsl
nop
incb
jb
cmp
imul
cmp
adc
inc
jo
cmpsb
sbb
lret
sbb
call
loop
rolb
sbb
lock
mov
inc
push
xlat
and
int3
cmp
pop
sbb
add
mov
rorb
scas
xor
cmp
mov
xchg
data16
loope
out
outsb
or
js
inc
lods
push
sbb
subb
mov
add
nop
js
pop
xchg
push
sbbb
insb
sub
pop
sbb
call
les
dec
adc
and
es
cmpsb
clc
mov
push
jle
mov
scas
aad
cwtl
lret
bound
sub
pop
outsl
inc
gs
sbb
mov
int3
inc
xchg
popf
push
and
xor
decb
loop
mov
les
xor
pop
jmp
shlb
mov
cmp
aam
xchg
cmpsl
fisttpll
dec
ljmp
rclb
xchg
sahf
mov
loop
ss
inc
loope
inc
or
cli
adc
insl
mov
nop
pop
int3
or
push
inc
push
xor
dec
dec
cmp
sub
sbb
xchg
test
cli
cmp
int3
outsb
test
pop
lea
fsubl
add
and
into
inc
aas
sbb
xchg
push
inc
or
jl
adc
push
xor
mov
test
pop
push
push
sbb
push
add
sub
add
xchg
jp
cmp
mov
lret
in
push
jecxz
stos
fwait
cmp
popf
xchg
pop
pop
cmp
andb
sbb
xor
ss
adc
out
add
loop
and
jo
and
shr
popa
mov
aam
daa
clc
xchg
jo
sub
inc
push
inc
lret
lea
sbb
es
and
ret
nop
js
rorb
add
pop
dec
and
cmp
outsl
pop
add
clc
add
jno
sbb
or
fcomp
push
js
sahf
call
add
mov
mov
sbb
pop
push
cmp
dec
cmp
nop
xor
add
dec
lret
js
or
loop
or
or
rclb
fnsaves
xchg
push
and
mov
inc
sub
aam
into
pop
adcl
add
les
sbb
sbb
or
ficoms
jae
hlt
mov
cs
in
addl
not
dec
sahf
addb
shrb
lret
or
cmpsb
std
sbbl
inc
jl
sub
push
pop
lock
xchg
adc
movq
cmp
mov
inc
loopne
push
xor
sbb
sbb
jecxz
inc
mov
xor
frstor
sub
and
test
out
jae
mov
loop
out
inc
push
mov
xor
push
js
cwtl
enter
mov
dec
fcomps
push
xlat
test
push
in
mov
add
fistpl
call
cmp
in
subb
inc
das
hlt
inc
lods
jl
or
nop
lock
jb
add
test
sbb
xchg
enter
pop
cmp
xorb
or
jb
adc
ja
sbb
jp
das
jb
mov
xor
mov
rcrl
adc
or
jbe
jno
xchg
fdivs
sbb
cmpsl
insb
gs
adc
xchg
sub
test
push
inc
rol
cld
push
pop
cs
sbbl
ret
pop
sub
ret
push
add
inc
add
cltd
or
test
mulb
inc
fs
or
inc
mov
mov
decl
inc
das
sbb
mov
sar
jmp
test
jecxz
and
mov
mov
ret
sub
or
and
lcall
xor
ds
mov
shlb
ss
push
push
push
push
push
mov
cltd
or
hlt
adc
rcrl
push
inc
pushf
mov
dec
mov
stos
jne
push
mov
loop
cmp
push
loopne
outsb
shrb
fcomps
movsb
dec
es
dec
mov
les
les
push
pop
pop
je
add
push
or
test
loop
fs
idivb
adc
test
out
add
repnz
nop
shll
pusha
lret
xchg
mov
sub
inc
cmp
sbb
or
lcall
mov
push
mov
fsubr
sub
ret
arpl
cmp
rcr
rorb
xchg
mov
out
fcmovu
mov
adc
pop
dec
add
or
and
mov
fs
sbb
pop
push
add
movb
xor
add
sbb
sub
lds
sbb
lods
and
add
je
and
es
dec
ret
mov
ret
cmp
mov
pop
dec
add
es
lcall
popa
jno
andb
inc
in
lock
push
sub
mov
les
jo
and
sahf
ret
fs
movsb
adc
cmp
adc
sbb
mov
out
ss
xor
jp
push
test
push
push
push
mov
inc
xor
dec
and
add
js
xchg
addb
mov
add
dec
pop
add
clc
push
lret
jbe
divb
mov
xor
mov
loopne
andl
dec
pavgw
lods
xchg
shl
call
das
xor
xchg
push
test
adc
lock
pusha
cli
adc
lea
rcrb
xchg
js
bound
mov
in
sub
mov
imul
jecxz
je
or
jb
icebp
ss
es
jb
jo,pn
xorl
loopne
fwait
mov
xor
stos
or
dec
jo
push
xchg
fnstsw
push
jbe
int
mov
stos
sbb
sahf
outsb
rclb
imul
inc
inc
push
add
dec
fisubrs
sub
inc
repnz
inc
xchg
pop
add
inc
mov
adc
pop
inc
fisttpl
sbb
and
inc
rol
sub
hlt
stos
adc
rorl
sub
loop
add
xor
jp
add
xchg
jecxz
sbb
xor
inc
ljmp
jle
mov
xchg
sbb
popa
repnz
xchg
cmp
pop
push
jl
ss
pop
shr
js
rolb
inc
inc
or
pop
bound
sbb
sub
cwtl
sbb
rclb
out
pusha
or
insb
jle
inc
mov
call
cmp
add
dec
inc
pusha
rolb
push
pop
cli
pop
ja
pop
popa
mov
add
adc
jnp
fldl
sarb
lea
arpl
ss
add
stos
enter
jo
aad
push
push
lahf
ljmp
mov
xor
sub
cmp
pop
es
or
mov
sbb
push
femms
out
cs
xor
jecxz
pop
jp
xchg
mov
outsl
sbb
xchg
or
pop
xchg
nop
adc
push
mov
test
xor
pop
add
sub
jno
test
push
stos
mov
out
fcmovb
call
mov
push
push
push
push
les
inc
or
add
lcall
dec
cmc
and
mov
stos
adc
and
push
pop
lret
dec
mov
in
mov
push
xchg
lcall
imul
mov
call
xor
sbb
mov
lock
or
jno
push
test
add
repnz
fsub
push
fisubrl
sub
sbb
adc
out
lods
aad
or
adc
or
cmp
sbb
sub
repz
add
mov
jno
outsb
xor
mov
pop
push
dec
inc
xor
push
xchg
outsb
std
jl
pop
adc
adc
adc
lret
inc
scas
dec
or
xchg
add
xchg
and
or
xor
orb
dec
outsl
inc
xor
push
orb
adc
xor
xorl
andb
dec
adc
push
movsb
xchg
or
imul
out
mov
push
or
pop
xor
mov
dec
mov
ljmp
addb
push
jp
pushf
pop
xchg
add
test
aam
jae
push
sub
sbb
jp
addr16
sub
push
les
cld
xchg
inc
in
pusha
addr16
enter
push
adc
mov
loop
lret
popa
jo
pop
pop
push
add
inc
pop
cmpsl
jo
arpl
nop
mov
mov
ret
cmp
es
sbb
xor
or
pop
das
nop
std
rol
mov
adc
bound
in
add
loopne
or
xor
xchg
xor
fiadds
pop
lods
jno
push
push
cs
lsl
fcomps
les
adc
push
sub
call
sbb
mov
lods
mov
les
pop
sub
sub
xchg
adc
nop
dec
dec
or
jl
pop
xchg
add
pop
mov
add
xchg
or
adc
jl
lock
enter
adc
pop
jp
or
and
mov
arpl
aam
dec
les
push
mov
roll
push
mov
sbb
and
stos
loopne
pop
inc
lock
push
into
aas
hlt
mov
ret
fs
mov
sub
addr16
fdivrp
jae
adc
cs
add
addl
ss
dec
or
push
add
adc
test
enter
inc
int3
shl
sub
into
andb
mov
xor
rol
shl
xor
pop
imul
rclb
mov
shlb
fwait
pop
dec
fdivr
push
xor
sbb
adc
dec
in
and
loopne
icebp
adc
ss
adc
xor
add
adc
les
dec
mov
push
loopne
push
dec
call
js
inc
and
pop
addr16
shlb
or
scas
mov
add
roll
testl
call
nop
jb
pop
sub
leave
in
faddl
inc
cld
shll
and
mov
xor
push
ljmp
push
inc
mov
jb
xchg
fwait
jnp
jecxz
sahf
push
outsb
lock
loope
push
sub
sub
add
xchg
lcall
mov
mov
mov
or
jge
ret
aaa
adc
sub
adc
sub
dec
mov
jb
fcoms
inc
push
sbb
or
andb
loopne
pop
and
lahf
stos
pop
push
rolb
les
add
inc
pop
rcl
sbb
xchg
mov
xchg
call
rclb
mov
push
sahf
sub
xor
pop
push
xor
xor
jo
push
stos
aam
mov
mov
inc
sub
jp
lret
ret
xor
xchg
mov
fdivs
dec
adc
clc
xor
ds
lret
das
ret
sahf
pop
sbb
mov
fstps
test
das
iret
and
mov
mov
add
int3
cmp
jecxz
adc
jp
rol
cmp
shlb
test
pop
add
xchg
call
pop
aas
xchg
or
push
xchg
and
into
push
nop
xor
push
and
pop
loop
out
insb
testb
push
test
mov
mov
pop
dec
fcoml
jle
ss
sbb
in
add
nop
and
dec
add
pop
movsb
pop
sbb
sub
sbb
pushf
mov
rcll
into
push
dec
sbb
sub
pop
push
mov
js
jmp
mov
pushf
inc
sbb
mov
push
xlat
adc
or
insb
popf
or
xor
mov
fimull
test
dec
mov
xchg
add
mov
mov
sub
push
shr
fcom
cs
add
pop
or
lret
or
mov
push
xchg
jp
loopne
inc
jmp
outsb
and
xor
ss
mov
inc
and
lret
orb
gs
lahf
lret
inc
adc
push
push
push
and
sbbl
or
imul
jp
ljmp
test
in
pop
pop
fcomp
outsb
and
lcall
pop
dec
pushf
push
pop
fisubl
repnz
rolb
sbb
push
or
sahf
les
xchg
cmp
and
not
sahf
in
adc
fidivs
mov
or
pop
sbb
xor
sbb
or
cmp
fldl2t
loope
cmp
or
inc
loopne
sub
or
push
add
push
push
into
push
xchg
or
add
test
and
dec
sbb
ss
fdivrl
xchg
xchg
inc
sub
jl
xor
cmp
test
js
daa
ftst
mov
js
jb
fdivrl
pop
xchg
test
bound
loope
push
add
or
push
lret
dec
les
add
mov
xor
sbb
push
pop
push
test
pop
push
bound
jb
and
mov
and
ljmp
mov
mov
rolb
scas
mov
jb
push
and
scas
outsb
jb
xlat
cmp
pop
sbb
and
fstps
rcl
or
and
dec
scas
mov
call
rorl
fs
add
pop
and
fsubp
push
nop
add
es
into
test
popa
cmpsb
sbb
lods
enter
sbb
sub
jp
inc
out
sbb
nop
inc
sub
sbb
or
inc
addr16
or
pop
repz
ds
inc
js
mov
pop
shlb
imul
adc
mov
fsubrs
sbb
sub
lods
call
mov
jb
add
xchg
lods
iret
loopne
or
mov
ror
rolb
andb
rol
mov
adc
and
push
dec
or
mov
sbb
push
pushf
xor
popa
shll
aas
loopne
sbbb
push
xor
adc
clc
ret
cmc
adc
bound
jb
xchg
mov
push
shrl
dec
subb
sub
mov
xchg
xchg
push
lea
or
inc
sahf
jl
adc
jp
dec
dec
cmp
or
nop
insb
sbbl
in
loopne
xor
jecxz
add
adcb
aam
add
xchg
cmp
mov
rorb
dec
lods
sub
add
test
dec
hlt
push
repnz
lods
jle
push
and
sbb
jbe
enter
adc
xor
push
sbb
ja
je
out
jo
sbb
lock
jnp
sbb
pop
mov
mov
js
stos
ss
ret
into
bnd
sbb
adc
xor
gs
sbb
movsb
dec
arpl
pusha
inc
xchg
push
sub
cli
pop
lret
xor
and
enter
cs
sbb
jp
xchg
test
push
push
cmp
push
mov
xor
dec
cmp
fadd
mov
jp
movsb
push
add
fdivrs
in
pop
add
fcoml
adc
rolb
inc
xchg
sbb
movsb
jb
push
dec
inc
sub
jl
pop
adcb
or
sub
punpckhbw
mov
sub
mov
cwtl
sbb
pushf
mov
jmp
mov
dec
test
mov
movsb
cmpsb
add
jmp
je
lods
shl
fsubp
rclb
clc
mov
inc
cmp
mov
and
and
mov
hlt
dec
or
inc
mov
or
mov
lds
push
xchg
pop
or
adc
pop
addb
idivl
or
jo
xor
or
pop
adc
sub
xor
add
fsubl
testl
jp
and
adc
jg
hlt
xor
sbbl
lret
addb
inc
jo
enter
sbb
pop
xchg
push
arpl
sbb
add
int3
cmp
add
mov
push
push
dec
xlat
add
mov
push
push
xchg
inc
add
jb
cli
mov
add
popf
jne
cmp
cmc
sbb
lret
icebp
or
lea
movsl
sbb
or
movsb
subb
enter
lret
outsb
decb
ss
sahf
fwait
in
lock
and
lahf
sbb
aam
scas
lret
test
or
xchg
or
inc
xchg
push
mov
dec
adc
sbb
orb
pop
mov
loop
lret
pop
jp
mov
fdivl
mov
push
or
and
xchg
mov
mov
xchg
mov
dec
cmovns
cs
mov
mov
arpl
jo
hlt
xchg
inc
sub
sbb
push
lret
out
lcall
or
and
daa
jmp
lret
inc
dec
or
addb
daa
sbb
push
dec
mov
pop
rcr
clc
sarb
pop
jp
mov
loop
sbb
pop
rorb
dec
add
cmp
cmp
stos
add
sbb
ss
movsb
xchg
inc
data16
pusha
sbb
loop
mov
push
aas
mov
cmp
sbb
out
cmp
cs
outsb
mov
sarb
xor
pop
ror
hlt
mov
add
jbe
hlt
ret
pushf
jo
popf
adc
push
in
rcr
enter
fs
test
test
pusha
adc
notl
mov
jle
outsb
pusha
cmp
push
pushf
lret
ss
and
cwtl
rcl
ljmp
nop
loop
mov
and
adc
popf
xor
ss
inc
xor
pushf
push
sbb
mov
gs
sbb
mov
movlps
stos
pop
push
adc
pop
add
fistpll
cmp
mov
sahf
mov
mov
popa
jbe
inc
sbb
pop
sub
dec
add
leave
adc
mov
xchg
or
test
ret
pop
sbb
dec
jle
rorb
push
js
negl
sbb
lret
pop
adc
add
mov
sbb
jp
scas
dec
xor
add
or
inc
imul
sub
sub
dec
dec
sbb
add
cmpb
lahf
adc
pushw
nop
insb
jno
into
repnz
and
add
sbb
dec
sbb
cmp
dec
movsl
cli
jbe
pop
jecxz
mov
adc
nop
mov
xor
mov
mov
adc
adc
xorb
out
adc
imul
cmp
shlb
out
sub
mov
es
loopne
or
pop
push
and
and
and
fnstcw
inc
mov
jmp
popa
or
movsb
dec
sbb
jbe
sub
in
mov
jbe
dec
fisttpll
hlt
int3
lret
jle
popf
dec
sub
pop
sbb
andl
jl
lahf
js
mov
pusha
and
mov
dec
roll
xor
jbe
les
dec
xchg
ret
xchg
jns
push
sbb
jo
test
push
loop
pusha
das
jbe
mov
aam
es
test
movsl
jno
inc
cmp
cmp
bound
mov
pop
cmp
mov
dec
lret
xchg
aaa
jg
loopne
adc
lods
adc
pop
inc
add
pop
fwait
js
roll
sub
or
adc
sbb
adc
add
add
js
adc
js
mov
mov
push
pop
sbb
xlat
add
mov
in
cmp
call
add
or
adcb
add
or
pop
xchg
adc
mov
or
fldcw
sub
adc
pusha
test
dec
jge
ljmp
push
push
rolb
rcrb
jo
or
push
imulb
xchg
push
insb
shr
lods
and
sbb
adc
push
sbb
in
scas
push
loop
xchg
cmp
cld
cmp
pop
or
dec
or
ret
xor
jb
out
xor
jl
sub
lods
in
xor
mov
or
enter
enter
and
ror
jo
pop
cmp
mov
cli
arpl
mov
mov
cs
inc
cli
arpl
imul
ss
lods
out
outsb
popa
add
lret
inc
add
jne
add
dec
test
jge
push
addr16
je
sub
loopne
xor
arpl
pop
push
fidivs
enter
or
add
sbb
jo
jecxz
ret
inc
mov
jmp
inc
add
adc
fisubs
les
mov
add
cmp
imul
xorb
sbb
rol
and
inc
mov
les
cmpsl
mov
andl
arpl
pusha
fidivl
fs
push
and
and
add
pop
or
and
xor
call
daa
add
rcrb
jl
mov
push
enter
movsb
or
movsl
dec
mov
sbb
cld
jle
cmp
pop
aaa
loopne
les
cmc
and
outsb
pop
push
aam
adcl
add
lea
nop
jl
push
pop
dec
sub
push
mov
jo
inc
push
stos
into
or
ret
and
mov
pop
mov
scas
mov
sbb
and
sbb
xor
mov
mov
xor
adc
mov
js
int3
xor
out
push
cmp
sub
dec
cld
nop
repnz
nop
mov
sub
cbtw
addr16
addr16
addb
xor
arpl
adc
jmp
jmp
shrl
and
dec
fdivr
pop
push
int
pop
xchg
push
dec
fwait
push
cmpsl
pushf
lods
pop
push
add
pop
dec
movsl
stos
lret
call
xchg
mov
pop
or
sarb
or
jno
adc
and
divb
cmp
or
adc
sbb
or
rcll
clc
mov
rclb
imul
inc
sbb
rcrl
push
fsub
add
jb
mov
xor
fcoml
lods
mov
loop
or
sbb
pop
xor
lods
lock
push
mov
test
out
outsl
call
test
cmp
adc
popa
pusha
nop
sbbb
push
cmp
push
push
sbb
loop
cmp
enter
sub
insb
fdivr
rcrb
add
xchg
mov
mov
jno
xchg
lock
cmp
mov
and
popl
push
inc
ret
out
or
mov
or
or
lods
add
das
js
push
xchg
push
ljmp
mov
into
xor
rcrl
xchg
xchg
shll
mov
scas
ljmp
push
cli
mov
aad
shlb
pushf
mov
add
sub
fs
out
fcoml
sbb
push
xor
dec
bound
cltd
sbb
push
cmp
sbb
mov
pop
sahf
ror
lds
cmp
fmuls
mov
add
cmc
and
sbb
fisubrl
pop
dec
mov
test
and
mov
add
ja
movsl
xor
and
push
xchg
cmp
pop
or
cmpsl
jb
dec
or
push
push
xchg
sbbb
insb
stos
mov
add
loopne
or
push
push
loopne
out
lret
cli
jo
int3
dec
dec
pop
mov
loopne
and
cmp
imul
sub
movsb
dec
fsubrs
rclb
and
or
ljmp
push
ds
push
jle
stos
or
push
mov
or
gs
js
mov
inc
or
mov
mov
loopne
enter
fiadds
xchg
jo
mov
pusha
jle
subb
pusha
mov
mov
ret
rolb
adc
dec
lods
andl
add
dec
dec
lods
xchg
lock
test
push
mov
js
add
mov
fiadds
popa
nop
sbb
xor
das
arpl
out
fsts
call
jb
add
mov
push
das
daa
jno
push
or
push
add
movsb
adcb
es
cmp
popa
add
inc
je
and
cmp
movsb
push
mov
mov
and
or
xchg
pushf
ficoms
or
jp
scas
andl
stos
rcrl
js
push
ja
inc
rol
push
mov
mov
loope
jns
out
mov
ret
or
rcrl
mov
hlt
fdivrs
shll
and
and
mov
sbb
xor
adc
mov
adc
pop
sbb
jecxz
scas
inc
hlt
cli
lahf
mov
xchg
jb
rclb
shr
dec
dec
inc
out
pop
shlb
mov
decb
or
es
les
mov
push
dec
fsubrl
or
test
jo
rol
add
fcmovbe
fisttpll
pushf
shl
test
jne
mov
std
iret
movsl
fstpl
jns
stc
xor
dec
lcall
pop
rcr
adc
in
divb
mov
mov
leave
adcl
addl
popf
xor
mov
or
xorb
insb
sbb
or
or
or
lcall
xor
sbb
bound
xor
sub
lea
jl
cmpsb
arpl
arpl
jp
cltd
dec
or
jecxz
shrl
push
mov
pop
push
adc
loope
dec
mov
mov
xor
adcb
pop
or
push
sti
sbb
or
inc
dec
stos
mov
xchg
sbbb
popa
mov
add
xchg
jle
lea
pusha
xchg
add
insb
pushf
popa
inc
jmp
mov
adc
popf
or
mov
push
jno
cltd
pop
cmpsl
push
clc
cmp
pop
mov
pop
dec
sub
and
push
push
and
adc
push
mov
add
aaa
fstps
loop
jl
les
loop
or
inc
das
mov
xchg
mov
pop
xchg
or
sbb
xor
ret
call
sub
jbe
sbb
xor
push
sbb
sbb
jbe
inc
xchg
pop
les
mov
or
xchg
xor
adc
daa
jecxz
inc
push
and
dec
mov
gs
mov
mov
pusha
rol
or
leave
mov
int3
add
mov
loopne
push
ljmp
sbb
loopne
jbe
push
enter
lods
and
jb
in
xor
inc
add
sbb
nop
sbb
mov
add
nop
bound
mov
test
add
dec
or
sbbl
or
sub
pop
les
inc
mov
xorl
lock
popf
dec
dec
sub
add
leave
ret
cld
xchg
popa
mov
int3
jg
mov
adc
js
loope
mov
fmuls
push
push
or
pop
mov
inc
lret
xor
imul
test
lock
imul
or
jp
push
push
or
xchg
dec
push
push
les
cmp
fucomp
or
inc
and
xchg
jbe
daa
test
inc
pop
rclb
ljmp
mov
ficomps
stos
fs
icebp
sbb
shrb
mov
arpl
ja
sahf
loopne
mov
dec
into
xor
stc
mov
in
xchg
aam
rcrl
ljmp
lods
mov
int3
sbb
push
sahf
imul
xorl
pop
inc
sbb
test
cmp
push
jb
mov
mov
adcl
loopne
cmp
mov
dec
mov
xchg
cmpsb
push
sub
mov
cmp
inc
mov
mov
or
mov
das
loopne
out
or
mov
pop
es
add
ss
stos
lcall
sbb
cmp
popa
lea
ja
xor
push
push
xchg
pushf
es
arpl
rcll
sub
loop
orb
add
mov
adc
push
push
and
jne
xor
mov
mov
mov
cmp
roll
fnstsw
ret
loop
push
dec
xor
rolb
push
loop
mov
test
or
lret
jne
xchg
out
adc
addb
mov
mov
push
mov
or
sub
cmp
les
inc
jb
movsb
ret
rol
lret
inc
mov
mov
orb
xchg
xor
imul
fsubrl
cmc
ror
repnz
cmp
fsubrs
ss
cwtl
or
lea
lock
xchg
adc
add
or
scas
dec
push
mov
arpl
lods
mov
xor
scas
or
pop
sarb
insl
rcrb
mov
mov
sbb
ret
mov
test
jb
mov
ret
nop
sub
aam
adcb
push
pop
andl
dec
pusha
fs
or
xchg
hlt
pusha
in
jecxz
cmpsb
fisttps
sub
cmp
insb
jb
push
sbb
push
adc
fidivrl
jmp
push
lods
sub
cmpsl
adc
dec
movl
or
sbb
add
dec
cmp
cmp
xlat
xor
mov
lods
jbe
or
or
add
mov
mov
test
add
mov
lret
inc
mov
loopne
push
push
and
sbb
leave
divl
dec
sahf
add
movsb
xchg
jp
nop
icebp
xor
cmp
jbe
adc
js
sarb
mov
push
mov
sbb
ss
je
inc
leave
pushf
loope
or
inc
rcrl
jo
clc
lods
or
ss
and
pop
mov
sahf
dec
fmul
adc
dec
add
xor
in
sub
push
mov
das
lea
xchg
lret
and
orb
xchg
xchg
js
jp
xor
rolb
mov
jo
into
inc
mov
nop
lea
xchg
ret
mov
mov
and
push
das
mov
mov
inc
cmp
push
pop
ret
jo
fdivl
dec
mov
dec
dec
testb
adc
cmp
push
loop
sub
outsb
cmp
xor
sbb
sub
push
idivb
push
nop
jnp
xchg
push
pusha
xchg
mov
sbbl
sbb
mov
into
jp
xor
loopne
sub
sbb
in
imul
xchg
pop
jno
xor
dec
sbb
xor
imul
xor
mov
lock
or
fadd
lret
add
ljmp
in
nop
jle
decl
aaa
inc
jl
dec
out
fs
call
pop
jne
dec
fcoms
hlt
adcl
mov
fiaddl
lock
inc
pop
test
test
push
enter
cmp
sbb
add
jle
not
sub
faddp
jge
mov
shl
imul
adc
sub
mov
inc
fs
xchg
enter
xchg
jle
out
and
push
adc
rclb
in
cs
xchg
test
out
jne
filds
add
dec
shr
mov
dec
call
jae
and
int3
add
dec
fs
rcl
rcr
push
loopne
dec
rorb
rorb
add
dec
test
jne
inc
sti
out
pop
or
addr16
or
xchg
or
adc
xchg
mov
add
push
sbb
adcl
into
push
mov
sbbl
dec
ret
std
add
repz
fdivrl
faddl
aaa
sbb
in
mov
fs
sbb
mov
loop
pushl
adc
or
adc
and
call
or
sub
das
repnz
sbbl
aam
sbb
pop
ret
sbb
sti
enter
dec
ret
pop
lods
xor
mov
cli
push
sbb
xchg
insl
or
xor
xorb
icebp
add
sti
daa
stos
jecxz
dec
hlt
shl
adc
push
dec
mov
mov
fwait
mov
push
insb
push
leave
pop
mov
rcrb
xor
pop
enter
lock
fisubs
nop
enter
movsl
mov
xor
sub
in
mull
inc
fildl
fiadds
or
sub
mov
sbb
bound
xchg
add
sbb
jmp
or
in
cli
sbb
gs
addl
lret
fwait
sub
leave
out
rolb
sbb
ja
push
sub
fldcw
mov
hlt
mov
add
jbe
test
inc
mov
movsb
pop
adc
cmp
dec
je
dec
jbe
and
add
incb
dec
enter
dec
in
push
rorl
je
mov
mov
test
push
cs
mov
cmp
and
push
ficoml
sbb
test
idivl
xor
stos
adc
sbbb
xchg
outsb
and
clc
xchg
push
push
dec
sbb
lea
or
lret
sbb
mov
adc
mov
xorb
dec
int3
test
xchg
cmp
test
or
mov
xor
lcall
fnstcw
adc
cmp
mov
xchg
push
adc
imul
js
pop
add
dec
add
cmpsl
cmp
sbb
ret
cmp
dec
ja
setae
mov
mov
cs
popa
cli
cmp
dec
mov
pop
add
push
add
adc
pop
out
sub
adc
into
xor
fidivs
lods
mov
jecxz
loopne
out
push
ss
add
dec
sbb
test
fs
jb
loopne
pop
pop
mov
rcl
push
sbb
test
call
push
cmp
sbb
subb
aaa
push
push
cmp
int3
cmp
and
mov
test
ror
in
sahf
and
sub
or
out
or
inc
mov
into
sbb
pushf
fdivrp
adcb
mov
lcall
or
inc
cmp
jecxz
sub
add
nop
ret
xchg
pop
pusha
and
xor
int3
imul
sub
sub
lcall
pop
flds
xchg
jne
icebp
clc
push
pusha
jo
xor
sbb
pop
loopne
pop
jnp
jo
xchg
test
mov
and
mov
mov
add
xchg
push
ljmp
sbb
rorb
int
xchg
jo
xor
hlt
sbb
push
test
mov
jb
pop
test
xorl
out
or
or
sbb
pushf
fidivs
sbb
adc
aam
or
push
repnz
mov
and
push
sbb
mov
fs
dec
sbb
cltd
mov
into
xchg
mov
repnz
mov
mov
push
pop
orb
and
adc
enter
aam
popa
sbb
xchg
sbb
inc
cmp
cld
xor
xchg
into
mov
push
jo
je
clc
xchg
cltd
xlat
cli
sbb
cmp
cwtl
clc
or
inc
or
lods
cwtl
add
dec
shlb
fcmove
xchg
bound
mov
cmp
je
loope
push
jle
out
mov
jne
mov
jp
mov
in
int3
insb
clc
push
ret
ret
lret
dec
push
add
cld
mov
xor
xchg
lea
test
fstpt
or
lret
or
xor
xor
shrb
fsts
mov
sahf
lcall
mov
xchg
lds
sub
xor
dec
clc
pusha
jp
shr
pop
sbb
insb
lock
shrl
cltd
mov
test
push
xchg
push
jp
sub
sbb
sbb
and
loopne
dec
pop
push
xor
xor
leave
push
jg
jnp
sbb
loop
mov
or
js
sbb
pop
jno
sub
jae
je
sub
xchg
stos
mov
push
cmp
cmpb
sub
lods
outsb
xchg
int3
mov
fcoms
cmp
cmp
fstps
test
out
es
std
aaa
dec
sub
push
mov
sub
xchg
xorl
movsl
adc
cmp
inc
je
pusha
stos
outsb
push
or
push
cld
jo
or
inc
jbe
push
cmp
sub
mov
and
push
sub
mov
movsb
or
lret
ret
inc
enter
xchg
push
add
movb
xchg
movsl
cmp
mov
mov
enter
mov
and
mov
loop
rorb
popa
popa
sbb
or
sub
push
mov
lret
shl
lods
mov
sbb
inc
xchg
mov
pop
or
cmp
or
sbb
hlt
fmul
ret
adc
int3
scas
jnp
xor
cwtl
mov
mov
sbb
sahf
lock
xor
xchg
sarb
ds
xor
xchg
sahf
fsubp
pop
fwait
jp
sub
test
repnz
pop
jmp
adc
or
rorl
test
arpl
in
in
sub
mov
imul
popa
popa
add
add
cmp
push
shr
jecxz
shlb
mov
xor
xor
cmp
jmp
mov
lcall
sbb
jo
cmp
mov
or
xchg
xor
push
arpl
addb
fistl
sbb
rolb
sbb
push
cwtl
repz
sbb
test
cli
cltd
loopne
cmp
fs
sbb
mov
lock
in
adc
outsb
cltd
movsl
xchg
loope
push
dec
dec
fs
jecxz
push
out
dec
or
sbb
mov
and
mov
rcrb
cli
add
rcrl
fcomps
pop
pop
sbb
leave
or
jo
pusha
inc
pcmpgtb
xor
jne
jp
push
xor
mov
jl
addl
lea
lods
lods
push
mov
aam
jbe
and
pop
rorb
mov
js
or
pusha
les
pop
sbb
xchg
xlat
inc
sub
inc
lret
xor
push
aam
call
xchg
cmc
sbb
lcall
pusha
mov
into
ljmp
sahf
out
in
out
add
and
xchg
add
and
inc
pushf
and
inc
add
popa
jl
into
adc
es
or
add
test
lea
repnz
mov
lods
and
jne
push
pop
push
cli
jb
outsb
xchg
rcrb
out
arpl
add
out
cmp
imul
mov
jle
repnz
jnp
adc
loop
cs
rclb
clc
mov
inc
insb
xchg
int3
push
xor
and
cmp
pop
popf
icebp
or
and
lea
or
je
js
sbb
add
andb
sbb
es
pop
mov
jo
and
sbbb
jmp
pushf
lcall
test
scas
and
and
adc
mov
mov
repnz
cmp
test
and
dec
adc
add
inc
push
add
xchg
mov
mov
outsb
pop
jno
popa
das
mov
pop
add
xor
jno
ret
push
pushf
sbb
dec
mov
push
pusha
adc
xchg
mov
sbb
imul
push
into
cmp
inc
jbe
mov
sub
jp,pt
cs
loop
enter
mov
je
jmp
mov
bound
sub
mov
sbb
popa
add
push
ret
mov
push
movsb
pop
sahf
movsb
xorl
nop
push
dec
cmp
pop
adc
push
xor
inc
xor
and
adc
hlt
mov
xchg
dec
mov
push
sbb
inc
lods
add
mov
lods
out
lods
and
and
sbb
nop
andb
xor
mov
jb
pop
into
rclb
loopne
test
jno
xlat
lret
inc
loop
xchg
test
fcmovnbe
loop
push
push
sbb
or
xor
xchg
add
ret
jo
xchg
insb
adc
rolb
adc
adc
dec
and
fsubs
cmp
and
or
roll
cmp
cmp
jecxz
js
inc
fisubs
fcompl
fnsave
adc
sahf
out
sbb
movsb
adc
loope
pop
out
and
sub
sub
lret
and
mov
xor
daa
add
loopne
outsb
and
mov
jp
testb
cltd
mov
hlt
add
mov
out
dec
sbb
or
out
scas
sbb
or
pop
bound
or
mov
xacquire
mov
adc
pop
loopne
lods
out
insb
sub
bnd
dec
cld
lret
or
jle
jne
or
pop
pop
dec
mov
pusha
add
pop
mov
mov
pop
adcl
ds
sbb
mov
sahf
scas
sbb
inc
mov
adc
ret
cmp
addb
xchg
adc
movsl
xor
push
add
fucomp
movsb
popa
lret
jne
lock
aaa
push
pop
arpl
add
or
pop
add
mov
sahf
add
pop
sarb
sbb
mov
adc
jns
sub
pusha
mov
fdiv
sbb
enter
sub
rclb
mov
mov
mov
int3
lods
enter
mov
dec
cmpsl
faddl
mull
pushf
and
repnz
mov
les
sbb
ss
add
dec
enter
les
mov
add
add
lretw
dec
nop
fcompl
mov
sbb
add
fiaddl
pop
call
fidivrl
dec
cltd
sarb
mov
mov
nop
cmp
pusha
test
nop
mov
lods
adcb
or
cmp
cmp
xchg
cmp
or
sbb
dec
lods
bound
imul
inc
fcoms
insb
and
xor
push
int
popf
push
and
inc
outsb
rorb
or
ret
lret
ja
sub
rcrb
call
jp
insl
push
jne
xchg
push
mov
fsubrp
cld
int3
xchg
mov
xor
repnz
test
push
sbbb
push
push
imulb
cltd
int3
add
xorb
inc
pop
loopne
cmp
cmp
push
int3
and
dec
loop
ficoms
in
ret
and
lods
dec
sbb
add
stos
inc
fadd
ret
outsb
je
pop
sub
adc
sbb
subl
sbb
bound
add
sbb
lock
mov
push
outsb
and
test
stos
aad
lock
adc
push
push
cmpsb
push
mov
sbb
lea
lods
inc
adc
ret
xchg
sub
fcmovb
adc
or
rolb
mov
pushf
js
cmp
jl
les
test
les
cmp
gs
push
scas
rol
mov
sbbl
cmpb
js
push
mov
enter
mov
push
out
mov
mov
push
inc
pushf
sbb
adc
push
inc
clc
mov
sbb
fiadds
xor
popa
adc
jno
or
or
aam
loope
xor
lcall
test
lea
cwtl
inc
adc
xchg
inc
popf
pushf
xchg
jp
mov
cmp
rcrb
clc
pop
loopne
call
icebp
add
rolb
testb
sub
xor
or
push
sub
js
fs
mov
sbb
mov
xchg
and
push
bound
xchg
mov
sbb
inc
inc
and
mov
movsb
jno
xor
mov
jbe
adc
hlt
mov
or
jne
sbb
add
fdivl
adc
mov
and
mov
rcr
dec
nop
xorb
mov
inc
insb
lods
ret
push
fbstp
mov
inc
or
rorb
and
roll
mov
fisubl
data16
sub
pushf
dec
xchg
xchg
adc
ljmp
pop
mov
and
or
call
sbb
sbb
in
xchg
pop
stos
adc
mov
push
push
mov
mov
sub
xchg
jb
cld
sbb
loopne
dec
aam
sub
xchg
inc
cli
mov
pop
or
rcrb
popa
inc
cltd
mov
ret
fld
inc
mov
sbb
fmuls
stos
cmp
in
popa
and
jle
add
jecxz
popf
cs
inc
sub
inc
and
xchg
push
movb
arpl
push
loop
test
pop
dec
and
mul
adc
fdivl
sub
sbb
jecxz
bound
imul
pop
cmp
and
sbb
fdivs
es
fldl
lock
cmp
lret
push
sbb
inc
inc
mov
push
push
out
xchg
lods
jp
pop
add
sbb
pusha
lods
and
stc
mov
lcall
and
lret
push
push
lahf
hlt
outsb
icebp
add
inc
in
or
adc
pop
outsb
xchg
cli
das
mov
add
xchg
sbbb
cwtl
push
rorb
adc
lods
out
sub
xor
push
push
in
jo
hlt
pop
fmul
fbstp
sbb
cmpl
push
sbb
or
and
pop
lock
add
pop
js
mov
in
or
sarb
scas
loop
sahf
rolb
lods
pusha
or
add
pusha
xor
xchg
dec
dec
jbe
xor
xor
gs
loop
mov
rclb
lock
pop
mov
les
fs
sbb
jp
shr
xchg
or
scas
lock
push
mov
and
loopne
cmp
push
xchg
lods
movsl
pop
sub
pop
and
ret
leave
cmp
and
push
lds
and
push
rorb
popa
cmp
dec
sub
push
test
js
ret
push
cmp
ret
add
cmp
in
loopne
dec
inc
mov
test
lret
outsl
ljmp
sarb
mov
mov
mov
in
subl
and
jbe
int3
xchg
in
add
popa
cmpsb
cli
and
mov
add
xchg
mov
pop
and
add
shlb
mov
lret
insb
push
adc
jae
pop
imul
les
or
hlt
stos
je
rcrb
out
rcl
jmp
adc
add
and
lret
call
mov
mov
inc
rorb
mov
lods
test
xchg
lods
or
add
mov
dec
jl
ds
mov
pushl
arpl
mov
push
cmp
adc
inc
addb
fstps
jp
jo
mov
jo
pushw
cmovno
jmp
sub
sub
add
es
jp
loop
and
rol
dec
jae
fstl
leave
add
sti
mov
dec
bound
pop
inc
cwtl
xchg
inc
push
xor
add
inc
leave
push
xchg
and
xorb
push
jl
adc
data16
insl
outsl
push
adc
push
xchg
inc
cs
mov
push
sub
or
add
addl
and
dec
popl
icebp
mov
or
nop
xchg
icebp
pop
dec
push
mov
js
adc
inc
mov
mov
les
add
mov
or
add
mov
nop
imul
pop
test
mov
xor
ljmp
inc
inc
shl
cmp
lret
push
xchg
ret
hlt
mov
fisubrs
ret
adc
data16
in
push
aam
and
je
test
mov
pushf
push
mov
inc
jo
xor
jmp
in
in
out
movsl
xchg
test
xchg
sbb
jle
mov
fnstenv
mov
xchg
sahf
push
xchg
jns
xchg
push
push
cmp
andl
cmpl
mov
adc
jle
cmp
xor
cmpsb
xor
out
mov
and
mov
mov
mov
addr16
cmp
push
hlt
mov
xor
hlt
cmp
sbb
pushf
lret
pushf
or
js
clc
fcomip
fs
mov
xor
and
and
or
mov
sbb
inc
mov
adc
sbb
pop
inc
push
insb
push
xor
add
mov
push
and
fs
mov
adc
adc
mov
sub
sub
push
rolb
out
and
mov
push
jbe
adc
inc
mov
nop
push
cmp
outsl
jmp
loop
cmpb
xchg
xor
pop
ss
test
xor
sbb
dec
mov
add
fdivs
mov
adc
outsb
negb
xchg
ds
mov
and
lds
mov
or
test
cmp
dec
out
push
enter
sbb
mov
popf
sub
jne
push
push
cltd
push
fcomps
jae
xchg
movb
jne
adc
xor
repnz
dec
int3
ljmp
xor
cmp
sub
xchg
in
insb
into
mov
add
shlb
mov
push
movsb
ds
cmpsl
adc
jo
push
sbb
jp
nop
mov
dec
repnz
xchg
mov
cmc
xchg
and
test
sub
ds
lea
mov
ror
mov
pop
jo
nop
or
lea
pop
cs
shlb
xchg
mov
rcrb
outsb
sahf
add
ljmp
fsts
faddl
xchg
enter
shl
ret
adc
push
sub
add
xor
xor
push
xchg
fld
xorl
and
pop
dec
sub
cmp
fimuls
push
add
les
sbb
push
add
pop
push
lcall
and
mov
popa
or
dec
pop
cli
pop
stos
jbe
popf
lods
pop
in
mov
add
popl
shl
add
xor
lds
or
lock
shlb
mov
push
inc
movsb
and
clc
mov
sub
insb
adc
push
jns
xorl
pusha
insb
stos
xchg
push
inc
shr
nop
je
or
push
test
pop
test
lods
roll
sbbb
ljmp
pushf
inc
mov
and
dec
pop
repnz
and
xchg
mov
push
inc
jp,pt
dec
test
clc
push
push
enter
stc
pop
cmp
xchg
add
mov
adc
ds
lods
and
or
cwtl
stos
outsb
and
xor
sbb
push
sub
or
mov
sub
les
divb
mov
xor
shlb
and
xchg
mov
orb
inc
enter
push
inc
mov
je
inc
and
cmovo
pop
dec
aam
push
xor
push
loop
xchg
xor
xchg
push
movsb
aad
or
push
mov
mov
sub
ret
mov
and
xchg
mov
ret
mov
call
imul
pop
cltd
mov
and
push
cwtl
repnz
pop
add
mov
sbb
xor
popf
cmp
lods
mov
lods
add
pop
add
jo
daa
pop
int3
lret
dec
mov
push
pop
cmp
mov
push
add
daa
mov
or
cmp
or
cli
scas
pop
ret
loop
xchg
adc
iret
movsb
and
and
leave
cld
enter
push
ret
aam
rclb
sbb
xchg
inc
ja
pop
xchg
sub
rclb
and
or
xor
jno
and
inc
call
jmp
sarb
push
ror
addr16
int
insb
jo
insb
dec
or
mov
hlt
mov
mov
sbb
stos
sahf
mov
sarb
popf
ror
rorb
mov
jno
push
xchg
sarb
js
sub
fs
sub
mov
push
xor
mov
inc
inc
mov
enter
cmp
inc
sbb
js
out
jb
cmc
xor
push
and
push
mov
mov
nop
xchg
test
mov
hlt
xchg
pop
mov
icebp
and
ss
loop
mov
cmp
xor
sbb
jmp
sbbl
sub
in
in
xchg
negl
push
fstpt
fwait
test
dec
push
shr
add
fisubl
lock
add
pop
aam
jecxz
cmp
add
add
or
push
sahf
aam
sar
shll
movsb
in
ret
push
sbb
add
dec
aam
hlt
and
add
jg
sub
mov
js
push
sub
mov
inc
aam
push
push
out
add
das
jmp
hlt
dec
sbb
movsb
ss
rorl
clc
jge
jle
push
lret
push
pop
and
sar
mov
outsb
insb
lret
in
ret
scas
jmp
dec
ja
dec
stos
sub
sub
push
adc
xchg
and
pop
bound
inc
adc
mov
test
push
push
jnp
xchg
jmp
push
ljmp
adc
dec
mov
sahf
mov
lret
mov
mov
psllq
jb
andb
pushf
mov
hlt
mov
jbe
mov
sbb
cmp
lcall
je
xor
icebp
movsl
fidivrs
fs
push
mov
ljmp
push
sub
dec
ffree
pop
les
in
xchg
jno
idivb
lret
ret
lret
mov
je
test
push
cltd
adc
scas
mov
les
pushf
dec
sbb
imul
sub
movsb
push
lods
inc
enter
mov
es
movsl
mov
push
repnz
xor
mov
and
icebp
test
shrl
cld
loopne
into
and
mov
xchg
movsl
lds
mov
adc
xor
push
shlb
xor
inc
push
stos
into
sbb
ret
popa
sub
out
push
fs
mov
mov
mov
popa
mov
pop
addl
and
sub
out
mov
jo
xor
dec
sbb
sbb
push
mov
adc
cmp
cld
cld
sub
es
cmp
sbb
ss
ljmp
test
mov
int3
call
add
xor
xchg
rcrb
xor
sbb
pop
test
sarl
enter
xor
push
mov
test
mov
popf
hlt
cmp
call
pop
adc
jp
rolb
sahf
pop
jp
pop
insb
movsb
arpl
ss
arpl
pop
sub
loope
mov
push
sub
jno
adc
mov
xchg
pop
sbb
cmp
sub
cmp
adc
mov
xor
ret
pop
daa
pop
shlb
in
sub
xchg
loop
test
jne
movsb
mov
aam
nop
xor
sbb
push
mov
hlt
cwtl
jbe
adc
jecxz
les
push
adcl
pop
adc
andb
push
pop
adc
repnz
dec
pop
ljmp
adc
or
inc
mov
or
inc
adc
ljmp
adc
loopne
inc
jecxz
mov
cmp
and
cmp
xchg
mov
or
adc
enter
es
sbb
mov
jb
test
test
dec
mov
mulb
sysret
sbb
in
loop
cmp
dec
mov
fidivrl
push
cmpsl
xchg
movsl
push
outsl
mov
or
mov
shlb
cmp
into
out
lea
or
inc
cmp
pusha
mov
stc
add
call
aam
or
out
pop
and
or
jne
add
adc
push
push
or
xorl
or
fisttpll
adc
and
adc
jbe
dec
lret
cmp
xor
mov
fmuls
into
jns
lahf
imul
xchg
pop
pushf
push
hlt
add
push
sbbl
add
out
or
data16
sbb
xor
daa
fistpll
or
fildl
testb
push
mov
mov
pop
out
add
dec
std
sahf
data16
xor
mov
push
lahf
insl
mov
inc
push
or
pop
dec
sbb
repnz
rclb
dec
and
mov
xor
in
jb
in
test
adc
push
pop
adc
pop
jg
js
js
mulb
les
mov
push
js
sub
sbbb
jbe
push
xor
or
cmp
pop
int3
test
sub
ljmp
sahf
sbb
icebp
mov
adc
aam
addr16
loope
dec
je
xchg
ja
in
in
fimuls
jecxz
sub
push
and
sbb
shlb
and
mov
mov
and
push
mov
hlt
pop
loope
xchg
mov
popa
outsb
dec
pushf
or
or
mov
loopne
jl
inc
inc
mov
or
and
add
jb
cli
test
sub
aam
dec
lea
or
call
ljmp
in
sbb
loopne
fs
testb
inc
and
mov
shlb
cltd
add
repnz
sub
sub
and
lret
popa
bound
push
cmp
adc
cmp
add
push
and
mov
inc
nop
sub
imul
inc
jl
clc
or
aaa
xor
and
xchg
push
inc
fld
addb
mov
push
popf
add
pop
adc
imul
mov
mov
out
jp
shlb
mov
adc
pushf
or
mov
inc
ljmp
int3
inc
enter
pusha
jb
addb
dec
push
dec
jmp
popa
sub
pop
sbb
je
mov
rcrl
insb
loopne
sub
ret
cmp
xor
enter
dec
xchg
add
sub
adc
std
inc
inc
imul
adc
and
or
jp
lret
enter
pop
jno
pusha
inc
xorb
and
mov
fs
inc
outsl
add
dec
fdivrs
xchg
mov
add
push
fmuls
mov
jbe
rorb
loope
pop
sbb
and
mov
cwtl
jmp
out
jo
loopne
rolb
jne
push
push
dec
imul
cmp
inc
imul
xor
or
std
es
or
push
pushaw
add
inc
shlb
sbb
lea
sub
mov
rorb
sub
xor
imul
sbb
into
lods
add
or
js
rcrb
pop
pop
mov
add
xor
outsl
inc
push
mov
cmp
xchg
lock
hlt
js,pn
push
inc
mov
xchg
mov
cmpsl
mov
gs
push
add
mov
adc
ret
jecxz
or
pop
mov
jo
arpl
jg
xchg
ljmp
mul
add
inc
mov
js
ret
xor
loop
ret
push
bound
pop
cmp
pop
in
mov
add
dec
inc
ret
gs
movsb
stos
aam
dec
add
stos
add
pop
test
mov
mov
ds
cmp
push
aam
rolb
shr
into
xor
xchg
xchg
pop
add
xor
add
cmpsb
sbb
mov
xchg
movb
or
add
out
addr16
mov
shrb
and
in
dec
mov
call
mov
add
adc
pop
and
es
add
hlt
mov
xchg
sarb
and
xor
stos
add
sub
or
lea
sbb
daa
hlt
fs
or
cmp
rcr
ficoms
mov
mov
mov
and
mov
mov
sub
cmpsb
dec
aaa
push
or
movsb
push
inc
arpl
push
cmp
and
sub
pop
aam
lock
inc
insl
sub
pop
cmp
or
int
push
ds
pop
inc
repnz
push
movsl
jmp
mov
ljmp
shl
in
nop
pusha
adc
rcrb
push
ret
fists
mov
pop
pushf
and
mov
loope
push
push
jle
aaa
mov
jne
push
addl
and
imul
stc
aam
mov
pushf
rcl
rol
and
lds
test
add
aam
sahf
or
dec
add
fs
fadd
arpl
or
push
sbb
dec
out
sub
enter
lea
sbb
mov
sub
mov
pop
les
iret
notb
je
add
int3
or
je
xchg
and
dec
call
push
fmuls
mov
pop
mov
hlt
jbe
sub
enter
enter
xor
xchg
ljmp
dec
push
cmpsb
js
cli
enter
push
add
jne
dec
out
cwtl
pushf
jl
or
rolb
cmp
int3
data16
pop
rcrl
dec
movb
adc
jl
pop
jnp
into
insb
lods
ss
lea
bound
push
mov
dec
cmp
adc
pop
sbb
xchg
test
push
and
rclb
subl
sub
cmp
and
cs
cltd
repnz
add
mov
mov
push
adc
aas
pusha
je
sub
pop
push
enter
mov
sbb
push
push
xchg
inc
and
mov
cmp
data16
lret
out
xchg
clc
inc
ljmp
aaa
loopne
shr
xchg
or
lret
xorb
outsl
ret
je
add
cmp
jbe
xor
sub
sbb
ja
ss
fiadds
jo
je
test
cltd
mov
push
pushf
pushf
jo
cmp
addb
movsb
mov
xor
mov
pop
lret
push
daa
xchg
in
mov
enter
and
cmpsl
roll
ss
inc
in
loop
sbb
cmpsb
mov
push
cmp
ficompl
pop
cld
clc
push
dec
vpsrad
lock
lds
repnz
and
test
in
cmpsl
push
cmp
dec
enter
and
lock
into
aam
ret
mov
xor
xor
mov
inc
movl
push
es
bound
arpl
sub
sub
mov
loop
pop
clc
or
add
cs
adcb
call
mov
icebp
pushf
insb
imulb
add
cmp
mov
xor
inc
cmp
lahf
xor
add
scas
cmp
outsl
cmp
push
cmp
push
pusha
repnz
dec
pusha
and
mov
adc
jb
cmpsb
pop
shll
push
mov
ja
js
les
mov
push
insb
dec
lods
xorb
dec
jo
and
mull
rorb
push
adc
or
ret
dec
push
test
or
sbb
push
cmp
pop
xchg
fdivrl
mov
addr16
in
lea
lods
sbb
add
jmp
push
es
sub
push
cmp
faddl
sub
ljmp
xor
adc
fisttpll
or
bound
xor
in
mov
imul
pop
dec
or
enter
ret
inc
push
mov
inc
loop
dec
loop
xchg
ret
or
jb
lcall
outsb
jb
out
xor
cmp
pushf
push
mov
add
icebp
pusha
scas
shrb
push
dec
cmp
imul
cmpsb
xchg
shlb
and
adc
popa
hlt
mov
test
js
mov
js
fs
int
mov
push
orl
std
dec
aam
sbbb
xorb
sbb
xor
fsubrs
jp
push
stos
test
bound
xor
leave
rolb
loope
mov
loop
enter
mov
enter
rol
mov
ss
pushf
dec
jo
push
sbb
push
outsb
or
test
sub
inc
cmpsl
idivb
andb
xchg
dec
faddp
loope
pop
ljmp
sub
insl
and
lods
inc
inc
pop
bound
sub
mov
dec
sahf
or
push
xorb
icebp
pop
sub
ljmp
and
mov
movsb
pop
ret
pop
movb
mov
push
sub
add
cltd
ret
push
ljmp
jmp
ljmp
and
push
xchg
dec
inc
inc
mov
je
sbb
test
add
ljmp
xlat
dec
ret
fildll
jne
push
mov
pop
rol
loopne
enter
je
in
cmpsl
push
int3
push
int3
add
cmp
pop
movsl
push
push
mov
sbb
mov
movsb
mov
decl
pushf
andl
sti
and
imul
mov
mov
outsl
lret
cltd
xchg
movl
and
fidivrs
xchg
cltd
cli
loop
movsl
or
outsl
mov
or
add
and
shl
add
movsl
loop
add
or
add
rcl
and
sub
cld
xchg
adc
fistps
popa
push
fstp
mov
or
test
or
std
adc
rolb
push
aas
and
dec
pop
and
or
sbb
in
rol
pushf
cltd
dec
cmp
jne
cwtl
fisubl
loopne
and
dec
lahf
mov
or
jge
mov
pop
pop
mov
xchg
mov
and
xor
sbb
pushf
test
pop
inc
xchg
jp
popa
adc
mov
or
xor
shr
add
lret
popa
xchg
inc
fdivrl
and
imul
dec
push
ds
in
fdivl
add
and
pusha
sbb
jae
nop
add
imul
clc
and
cld
adc
call
cld
add
rolb
ret
or
mov
or
lock
push
push
mov
mov
lds
out
add
xchg
xor
dec
fdivs
pop
lock
rcll
sub
or
sahf
imul
mov
or
lock
inc
mov
int3
adc
rcrb
out
sti
lahf
push
mov
xor
inc
sbb
mov
xor
cmp
and
pandn
lds
push
aam
mov
sbb
shr
and
in
shrb
add
push
sub
sbb
inc
push
lods
lds
mul
xor
adc
dec
add
or
rclb
or
mov
cmc
shl
or
xlat
add
jmp
inc
inc
call
addl
pop
lcall
call
je
pop
inc
inc
push
pusha
lods
dec
fs
push
cmp
jge
ficoms
inc
daa
pushl
ficoml
inc
add
adc
add
loop
int
fsubrs
andl
adc
add
jp
gs
and
push
add
or
push
dec
das
or
shl
rolb
lahf
and
pop
rol
shl
lahf
ret
loopne
xlat
or
aaa
sub
iret
shll
repz
iret
lret
std
add
outsl
xor
out
imul
pop
adcl
out
sbbl
and
add
push
mov
pusha
add
inc
rorl
mov
add
xor
addb
mov
lods
xchg
dec
repnz
ficoms
mov
mov
or
loopne
ret
push
inc
pop
repnz
enter
or
adc
cltd
and
bound
call
push
push
ds
loope
ljmp
sbb
mov
mov
dec
inc
cmpsb
xchg
jo
xchg
out
jae
or
push
loopne
pop
dec
loop
pop
adcb
inc
cmp
lea
mov
jp
add
mov
push
pushf
and
dec
cwtl
lods
and
pop
mov
jecxz
mov
mov
xchg
and
sub
pop
sbb
lea
xor
sahf
pusha
loopne
and
xchg
inc
les
jbe
add
pop
rcrb
test
add
pusha
dec
ret
iret
add
arpl
mov
sbb
cmp
mov
sbb
pop
inc
mov
add
into
ret
and
add
sbbb
mov
mov
cmp
pop
push
adc
inc
pop
xchg
enter
inc
cmp
cld
nop
cmp
sub
scas
addl
xor
and
lods
xchg
aam
repnz
imul
push
cmp
psubd
mov
ret
push
test
add
inc
test
push
mov
or
xchg
and
push
dec
rolb
shl
push
lock
push
popa
mov
push
enter
cmpsb
dec
loop
sarb
adc
push
cmp
lods
ret
xorb
push
test
loopne
dec
pop
mov
or
mov
mov
mov
push
sub
and
mov
push
test
push
xchg
jle
clc
push
rcrb
or
hlt
mov
shrb
dec
lods
sbb
or
sub
je
fmul
shrb
inc
or
inc
dec
enter
xor
xor
je
aam
inc
mov
xchg
cwtl
rcll
sahf
mov
ficomps
lock
or
adc
jo
pop
push
and
xchg
cmp
mov
and
cmp
xchg
cmp
or
cmp
sbb
mov
fcmovbe
inc
push
lods
into
or
cli
cwtl
data16
roll
or
test
pusha
jp
nop
in
pop
pmuludq
sahf
arpl
xchg
mov
add
imul
es
imul
int3
cld
mov
mov
push
in
lret
inc
imul
xchg
dec
popf
ja
test
add
jbe
xchg
sbbl
cmp
dec
sahf
rclb
cmp
movsb
cli
out
ljmp
lock
aad
pusha
fisubrs
cld
xor
cld
mov
dec
bound
add
inc
ss
mov
outsb
mov
bound
out
test
ljmp
pop
inc
cwtl
cltd
ret
add
popa
xchg
push
sbb
push
add
cmp
sbb
ljmp
in
ret
cltd
je
neg
push
sahf
movsb
xor
adc
xor
and
xchg
es
cmp
dec
mov
mov
fmul
xchg
js
into
cmp
pop
pop
rclb
or
add
lret
jno
sub
les
pop
add
into
xchg
dec
daa
xchg
sbb
gs
mov
pushf
jecxz
xchg
mov
adc
sahf
xchg
lods
jmp
mov
adc
jp
and
adc
and
pushf
or
shrb
jb
and
sub
les
adc
rol
out
cmp
jo
push
cmpb
ret
push
xchg
shlb
jle
js
xchg
push
jnp
not
sbb
in
inc
push
push
and
jnp
pop
sbb
in
dec
jbe
enter
push
movsb
stos
xchg
xlat
add
aaa
inc
mov
mov
or
add
enter
and
jp
cli
or
inc
jle
push
xor
lds
test
cmp
sbb
scas
pushw
out
outsl
test
adc
mov
clc
mov
rolb
aam
lret
or
xlat
or
fs
jmp
dec
xor
mov
or
jns
cmp
lcall
je
mov
sbb
add
hlt
xchg
jle
les
scas
and
and
adc
add
or
nop
sbb
aam
add
dec
fdivrs
aam
ljmp
xor
pop
pop
loopne
cld
mov
or
adc
push
lods
push
sub
dec
popf
je
out
into
jp
pop
testb
dec
xchg
xchg
xchg
and
ja
mov
cmc
mov
rorb
pop
mov
cmp
insl
mov
dec
push
adc
pop
or
mov
lods
and
jne
jo
dec
ljmp
mul
mov
fdivrl
mov
inc
pop
or
push
outsl
add
test
sbb
test
lock
ret
test
adc
mov
sahf
mov
lret
js
je
ss
mov
pushf
movsb
scas
pusha
into
mov
xor
xor
repnz
adc
sbb
repz
lock
ds
sbb
das
xchg
inc
pop
push
pop
js
pop
cld
or
mov
adc
or
mov
dec
imul
js
mov
push
sbb
fxch
adc
insb
sbb
rclb
mov
dec
sbb
pop
push
add
dec
mov
cmpsl
add
lret
int3
js
pop
pop
lock
pusha
push
dec
sbb
aad
movsb
dec
add
pavgb
and
addr16
das
int3
adc
sub
sbb
mov
adc
loope
cmpsb
clc
jl
or
cmp
incl
mov
test
out
xchg
les
sub
pusha
xchg
dec
in
jo
cmp
es
into
add
dec
das
or
pop
mov
ficoms
dec
ret
cmp
sarb
fwait
jo
ja
jo
hlt
dec
lock
mov
loopne
ror
lock
or
sbb
add
lods
rcll
adc
adc
xchg
sub
nop
testb
mov
int3
in
xchg
lea
cmp
dec
dec
ret
push
nop
mov
jecxz
jle
mov
sub
xor
add
jnp
adc
push
xor
push
push
push
in
add
jo
dec
je
dec
lock
inc
push
or
lods
cmpsl
or
inc
jo
test
test
sbb
insl
mov
cmpsl
in
outsb
mov
movsl
mov
outsl
loope
lret
mov
loopne
xchg
sahf
adc
add
insb
inc
out
loope
push
or
ficomps
push
pusha
and
sub
add
mov
cmp
add
jp
enter
mov
and
xchg
push
and
rcrb
call
sub
cmpsb
shlb
lods
test
or
dec
loopne
dec
adc
inc
add
js
adc
add
cmp
add
es
sub
shlb
adcb
add
mov
cmp
leave
lods
popa
sbbb
ret
adc
mov
in
sub
test
xchg
pop
or
jno
sbb
jo
sub
ss
inc
sbb
adc
pop
addr16
into
in
popf
les
sub
inc
add
daa
pushf
inc
bswap
mov
icebp
sbb
pop
mov
lret
jns
jl
jecxz
xchg
nop
and
adc
lock
or
pop
inc
push
sahf
pop
adc
xchg
pop
sbbb
rclb
scas
icebp
add
pop
popa
sub
lods
inc
sub
mov
pop
lcall
push
fmull
cmpsl
add
jle
js
addb
cmp
cld
sbb
les
mov
push
ss
movsb
and
xor
lcall
cmp
push
fcomps
push
dec
loope
xor
jmp
mov
xor
out
repnz
fcom
push
mov
xchg
sub
add
pop
mov
pop
jle
popa
and
dec
inc
loopne
data16
xor
dec
sub
arpl
ret
jno
loop
lret
add
rclb
or
inc
xchg
xchg
xchg
mov
sbb
in
or
inc
mov
add
jge
popf
or
aam
add
ss
sub
xchg
movsl
xor
cwtl
andb
lods
xor
push
das
ret
lods
icebp
addb
sbb
push
fnsave
xorb
sbb
shlb
inc
dec
mov
mov
adc
push
roll
xchg
sub
add
pop
xchg
push
test
push
pminsw
pop
xchg
int
scas
imul
sbb
or
jmp
addb
xor
cmp
and
xchg
outsb
jnp
mov
rcl
pusha
pop
pop
jmp
pop
rol
adc
test
xlat
jo
add
and
mov
xor
aaa
lods
dec
mov
out
iret
or
in
fiaddl
rcl
fists
out
not
addr16
incb
das
jecxz
ror
mov
adc
mov
ljmp
push
aam
cwtl
add
addb
pop
sub
jmp
sbbb
adc
pushf
inc
fadds
rcr
xor
xadd
sbb
lret
or
jno
xchg
jge
not
js
and
loop
push
lods
jge
rorb
push
xlat
push
jbe
lret
sbb
aad
sub
sub
addr16
push
outsb
jo
mov
add
loop
adc
sbb
jecxz
mov
loope
fs
lods
and
add
or
mov
xor
test
lods
stos
enter
test
sub
add
rolb
push
jne
lock
mov
lock
mov
lahf
adcb
add
fdiv
in
pop
clc
in
push
adc
roll
add
iret
xor
jb
mov
add
test
ror
lods
push
adc
add
incb
fidivs
sub
shl
mulb
and
and
or
idivl
fidivs
test
ja
mov
cmc
sarb
out
mov
fdivrs
rorb
add
fcompl
rcrb
movb
fsubrs
lret
out
lock
mov
add
sub
push
lods
mov
or
or
les
xchg
fadds
ret
or
int
sbb
testl
lods
rcrl
cmp
push
pop
and
jmp
stos
movb
adc
aas
fisubs
cmp
push
mov
daa
add
inc
inc
sbb
dec
inc
mov
inc
icebp
xchg
rol
shl
sbb
or
fdivr
es
dec
loop
ret
add
lods
push
les
outsl
rcll
in
sub
mov
sbb
cld
repz
das
adc
ljmp
adc
popf
pop
ds
outsl
pusha
add
sti
and
dec
nop
add
jecxz
add
and
sahf
inc
dec
je
je
test
jne
shr
jp
in
out
or
sarb
sbb
and
jl
or
cmc
cmpsb
lret
adcl
sbb
addr16
subl
xchg
stos
stc
or
xchg
test
adc
mov
sub
shrb
aam
test
adc
fiadds
pop
add
popf
jmp
push
mov
inc
ret
push
adc
test
push
dec
xor
insb
inc
mov
adc
inc
cmp
ja
popf
loop
ds
dec
sub
ss
testb
loopne
add
or
aaa
shrb
and
jmp
xor
add
popa
mov
and
sub
fisttps
sbb
xchg
push
pop
icebp
dec
ret
shl
les
lods
xchg
loope
mov
das
mov
add
adc
mov
sub
xor
add
mov
mov
popf
mov
adc
enter
cwtl
pcmpgtb
sbbb
cmpl
adc
aad
outsl
orb
aam
sub
xor
sbb
mov
inc
ja
movb
xchg
pop
jl
loopne
jb
pop
or
pause
cmp
enter
loopne
repz
adc
dec
cld
icebp
mov
jmp
js
addr16
jnp
cli
movb
fadds
jl
add
jb
fistpl
dec
jbe
insl
sbb
xlat
sbb
mov
sub
sbb
mov
scas
mov
loop
or
mov
cs
pop
pop
ret
aad
sti
cltd
loope
jbe
pop
sub
jp
pop
in
xor
and
adc
clc
lds
ret
jmp
scas
mov
loope
xor
mov
aas
rorl
lods
stc
in
jp
jo
in
int3
sbb
lock
fisttps
add
addl
sahf
add
inc
js
movsb
cmp
cli
lea
ds
add
orb
sarb
push
ficoml
shr
dec
inc
inc
cmpsl
cmp
dec
or
push
lods
jbe
loopne
das
sbb
push
mov
xor
sbb
add
inc
inc
in
mov
inc
sub
mov
pop
in
je
pop
fsts
xor
les
or
out
push
inc
jb
cmp
cmc
push
mov
leave
pop
add
inc
adc
add
pop
in
ja
xor
adc
test
cmp
testl
xchg
adc
dec
stc
add
lret
mov
mov
cmc
loope
and
icebp
dec
lock
jmp
add
stc
xchg
adc
pop
fdivrs
mov
insb
sub
sub
stos
add
imul
inc
jbe
inc
or
add
jns
push
mov
push
push
cmpb
daa
cmp
je
mov
mov
jnp
or
enter
in
add
test
adc
shlb
loope
dec
push
cld
cmpl
inc
jbe
xchg
xor
adc
mov
dec
add
jbe
cmp
aad
push
push
add
add
aas
sbb
sbb
mov
test
jae
jnp
sub
jne
cmp
sub
xchg
outsb
popf
pop
sub
add
xor
jle
stos
pusha
xor
adc
mov
cld
or
js
jnp
mov
sub
insb
outsb
loope
cmp
xchg
add
push
or
arpl
xor
movsl
js
xchg
es
inc
adc
jae
and
dec
adc
out
dec
xchg
imulb
push
out
add
pop
lods
into
out
pop
fiaddl
lock
test
ja
cmp
out
cmp
mov
cmpsb
jnp
xor
fsub
jl
or
or
test
mov
fcoms
into
orl
mov
stc
fmul
jb
js
and
sti
sub
xchg
in
xchg
shrb
add
les
mov
add
in
jmp
xchg
js
jne
jbe
clc
xchg
adc
mov
or
and
js
sbb
mov
pop
and
test
add
and
lds
ficompl
addl
iret
add
or
fisubs
dec
hlt
push
cltd
jge
inc
jo
in
out
scas
out
jl
lds
ret
sub
incb
pop
idivl
sub
mov
lahf
and
icebp
movl
sub
lock
mov
std
dec
sbb
shlb
or
lret
shr
iret
jecxz
iret
dec
adcb
jmp
out
push
add
fsubrl
cld
adc
shlb
pop
mov
push
shl
sbb
xchg
icebp
jmp
test
jbe
stc
mov
ret
lods
and
jecxz
add
mov
scas
cld
aam
and
js
jle
or
pop
cmp
and
js
mov
cs
leave
loop
shl
add
in
add
jge
setnp
sbb
mov
es
adc
push
or
pop
loopne
or
cmp
stc
pushf
mov
push
add
incb
jae
xor
pop
or
pop
dec
mov
push
int3
cmp
pushf
mov
push
clc
orb
mov
xor
and
mov
push
in
sbb
pop
mov
cwtl
adc
ljmp
lock
add
in
inc
pop
nop
or
repnz
cmp
syscall
and
add
adc
xor
clc
add
sbb
dec
mov
cwtl
inc
aam
xchg
movsl
inc
add
out
xor
add
pop
pop
shl
xorl
arpl
les
push
insl
js
jmp
sub
fstp
movsb
in
push
sbb
or
int3
pop
adc
xor
push
inc
add
sbb
mov
rclb
repnz
lret
push
inc
out
mov
push
jge
jnp
adc
in
mov
das
js
and
fisubs
nop
sar
xor
stos
popf
lar
mov
roll
rcr
adc
jnp
mov
aaa
adc
pop
xor
adc
ja
les
xor
lret
and
cwtl
mov
or
in
xor
cli
sbb
and
push
cs
shll
out
popa
leave
sub
and
push
insl
pop
movsb
sti
add
fwait
mov
lret
add
push
inc
mov
das
pop
lahf
fiaddl
dec
mov
dec
insb
cmp
dec
add
repnz
fwait
scas
inc
jne
iret
push
ret
add
aam
aam
sub
push
std
shl
rol
lcall
icebp
std
and
add
in
jae
sbb
movsb
testb
les
jmp
in
add
pusha
shrl
mov
or
aad
pop
dec
jmp
xchg
xlat
jne
xchg
ss
inc
lret
adc
inc
mov
add
aam
and
cmp
cltd
out
xchg
dec
sub
aam
and
sub
pusha
into
popa
adc
cmpb
sub
iret
outsb
inc
mov
cmp
and
fdivrp
fwait
adc
loope
aas
sbb
sub
xchg
add
popf
and
iret
lods
cmp
fdivl
or
es
ljmp
add
dec
es
movsb
outsl
mov
cmp
mov
mov
int3
ror
push
insb
shr
flds
jg
ficomps
les
lret
mov
add
rcrb
ss
pop
clc
cs
jecxz
test
and
cs
fs
sub
icebp
hlt
outsl
xchg
mov
loopne
push
push
movsl
inc
sbb
fsubs
mov
pop
cmp
jae
test
mov
push
pop
loop
jmp
call
negl
scas
mov
push
nop
adc
mov
xlat
cmp
sub
dec
aad
ljmp
push
cmp
stos
sub
dec
adc
sbb
movsl
cmp
sbb
xor
cmp
leave
adc
clc
out
cmpl
sbb
in
jno
mov
icebp
mov
cli
out
incl
or
test
out
mov
jmp
repz
ret
fdivr
cmp
in
inc
add
sub
negb
icebp
sbb
sub
inc
lock
xchg
cld
jmp
pop
pusha
int
or
cltd
mov
ret
cmpb
add
mov
adc
pop
inc
ret
mov
push
mov
jns
daa
pusha
repnz
add
sub
aaa
push
loopne
rol
aas
int
ja
and
pop
push
jns
mov
test
je
jo
push
xor
daa
js
mov
mov
subb
and
sub
pop
sbb
cmp
fistpl
sbb
jecxz
adc
pop
push
int
nop
rcr
fisubrl
xchg
push
inc
adc
sbbb
fcmovnbe
or
mov
mov
lea
arpl
xchg
jns
ja
shl
xor
repnz
mov
jns
loopne
and
test
add
pop
adc
scas
ret
ror
add
xchg
xchg
enter
or
in
dec
jo
inc
xchg
jle
pop
or
push
cltd
loopne
pop
lret
fstpt
shlb
cld
xchg
int3
mov
add
cmp
and
shr
lret
dec
shll
cmp
rolb
inc
pushl
pop
add
rolb
jbe
and
adcl
popa
aad
rorb
xchg
xchg
pop
sub
shl
pusha
movsl
or
mov
mov
jp
add
rcll
rorl
rclb
xchg
test
jmp
in
or
push
inc
rcrl
mov
mov
leave
push
fsubrs
incb
scas
cmc
xchg
mov
add
xchg
mov
lcall
mov
sub
fwait
aad
add
in
lock
xchg
ss
or
btr
in
dec
add
out
scas
jo
inc
aaa
mov
mov
sub
fisubl
xor
inc
mov
shlb
inc
xchg
and
arpl
jle
lahf
xlat
and
mov
pop
and
inc
or
loope
sbb
sbb
cs
ret
lods
cmp
push
cltd
pushl
stc
add
and
jae
inc
pop
ret
or
cmc
add
mov
adc
mov
sub
in
aam
ftst
or
shr
xorl
minps
cltd
add
movsl
sub
mov
inc
push
xlat
inc
sbb
add
ror
rcl
sbb
pop
cmp
je
jns
shr
mov
or
aad
pop
inc
loopne
mov
add
aas
mov
sub
test
adcb
add
cmpsb
mov
cmp
mov
jo
pop
fwait
mov
shlb
ss
add
mov
xchg
pop
sbb
xor
stos
mov
clc
rol
adc
icebp
and
cmc
loopne
add
pop
call
jb
pop
jnp
or
pop
add
roll
and
enter
mov
add
sbb
loop
es
add
jmp
leave
or
or
cwtl
mov
clc
lds
sbb
adc
pop
das
andl
pop
cltd
add
jle
mov
mov
xlat
movsb
testl
inc
and
ja
loopne
vgatherdps
loop
mov
loopne
and
das
add
or
fbld
pop
lock
mov
bswap
lods
pop
adc
mov
rorb
ror
sti
decl
jecxz
pop
iret
lret
leave
jge
inc
sub
cld
push
adc
je
out
mov
xor
ret
shrl
call
insl
cli
mov
pushf
mov
push
lds
cmp
sub
dec
cwtl
out
ret
dec
cltd
adc
xchg
lahf
sub
pop
out
adc
add
icebp
pop
stos
sub
pop
psllq
fcoms
test
xchg
add
bound
mov
jno
sbb
sbb
aas
insl
roll
loop
xor
aaa
rol
scas
xchg
adc
je
mov
add
dec
add
and
adc
rcrb
xor
cli
mov
je
fcmovne
shl
sbb
sbb
lods
jbe
or
adc
xchg
div
fchs
mov
fcoms
dec
sbb
adc
pop
loopne
loopne
unpcklps
aam
dec
or
pushf
lods
add
sbb
push
lret
ret
push
aam
xchg
mov
ret
push
push
add
das
jne
inc
nop
pusha
adc
cmpsb
push
rol
cmp
shl
and
ss
in
sbb
inc
ds
aam
mov
add
jmp
sub
enter
call
dec
js
adc
in
adc
jne,pt
ds
adc
fcompl
mov
das
adc
push
adc
and
adc
sbb
push
jns
rorb
push
jbe
inc
adc
rol
loopne
jo
xchg
mov
sub
mov
jbe
mov
or
mov
add
dec
loopne
or
insb
xor
fcomip
adc
mov
jbe
pushf
sub
out
sbb
cmp
stos
loop
jb
addl
add
lea
push
inc
sbb
clc
push
js
jecxz
out
js
or
mulb
push
stos
cmp
pop
insb
fwait
cmp
sub
push
sub
imul
mov
mov
fs
pop
sub
push
imul
adc
fldl
mov
lahf
or
mov
or
fildl
pop
or
clc
bound
push
aad
mov
data16
jno
and
cld
sbb
dec
fnstcw
add
sti
push
inc
jl
and
mov
movsl
mov
jle
cmp
sub
cli
scas
sub
sbb
add
push
and
add
pop
cmp
ss
cmc
mov
nop
push
loopne
jbe
pop
inc
sub
push
mov
popf
pop
fcompl
das
cmp
sbb
cld
cmp
cs
jmp
subl
test
lods
push
add
sub
cmp
insb
je
stc
pushf
add
shll
sub
rcr
or
aas
test
jecxz
jo
rclb
repz
shl
sbb
or
mov
out
imull
arpl
or
adc
sub
imul
dec
inc
push
mov
dec
pavgw
xchg
or
inc
mov
call
cmp
sub
loopne
or
mov
add
fisttpl
outsl
test
push
push
mov
jecxz
mov
adc
pop
add
aad
or
sahf
fmul
rcll
clc
fcomp
xchg
jle
ja
orb
xor
test
jge
fstps
pop
lock
lock
stos
hlt
inc
inc
sbb
xor
pop
sbb
bound
xlat
pop
push
enter
mov
push
rclb
mov
popa
add
adc
imul
cmpb
inc
inc
test
sbb
adc
jmp
out
es
pop
xlat
into
fists
mov
lea
xor
sbb
add
popf
adc
cmpsb
add
push
in
ret
cmp
add
and
mov
mov
pushf
xlat
push
lock
mov
jae
lret
insb
inc
xchg
inc
pusha
xchg
lea
lock
movl
iret
jb
add
out
mov
pop
sub
cmc
les
iret
in
add
push
das
adc
sbb
or
stos
pop
fsub
incb
mov
adc
rolb
mov
mov
je
in
mov
jg
sbb
sub
push
mov
push
push
pop
lock
stos
jbe
js
lock
xor
mov
xorl
popf
cmp
lock
xchg
push
mov
idiv
mov
or
add
sti
and
xchg
inc
loope
dec
iret
adc
pop
push
popf
hlt
cpuid
xchg
push
les
lds
out
icebp
and
addb
test
aaa
add
shlb
or
sti
stos
sbb
stc
mov
mov
mov
xchg
mov
inc
pop
push
mov
mov
cli
ret
jns
incl
orb
inc
mov
stos
push
dec
xor
ljmp
xchg
fistpll
dec
cmp
mov
cmpsb
mov
add
inc
jae
mov
xlat
add
sbb
clc
icebp
or
fstps
ret
dec
lret
dec
or
mov
movsl
nop
jge
or
jb
pop
cmc
pop
clc
rolb
ror
stos
add
jne
mov
jbe
dec
popa
ss
lods
mov
sub
test
les
fsubs
or
and
push
sbb
aaa
push
push
loopne
in
mov
cld
jecxz
or
fistl
subps
and
fmuls
and
or
add
dec
loopne
adc
and
and
sbb
inc
push
call
enter
sbb
cmp
loope
add
push
fdivs
or
dec
lsl
sub
add
cmp
outsl
dec
fadds
adc
daa
push
in
test
filds
movl
addr16
jbe
mov
jecxz
lahf
roll
push
imul
xchg
fimuls
sbb
insl
clc
cltd
xchg
rolb
cmpl
pushf
push
imul
inc
cwtl
pop
cmp
or
lds
sub
adc
aas
dec
icebp
pop
mov
xor
cmp
bndldx
xor
jbe
call
xchg
add
jecxz
push
rcr
pop
mov
sub
movb
push
inc
pop
cmp
sub
dec
xor
mov
add
daa
lods
mov
cli
adc
pop
sub
dec
cmp
xchg
push
pop
lret
and
xchg
enter
adcl
sbb
lock
enter
in
sbb
pop
rol
push
test
add
push
adc
in
inc
inc
div
add
ja
in
push
loope
out
add
mov
or
adc
scas
push
cltd
sbb
sbb
cwtl
out
jg
out
mov
lods
sbb
test
je
repnz
sub
jmp
inc
mov
add
ja
test
enter
push
aam
and
daa
adc
mov
fbstp
dec
push
cmp
jge
cmpsb
pop
add
incl
shlb
lods
cmp
jge
or
je
lods
out
loope
sbb
jmp
lock
cld
push
sbb
cs
push
test
jne
sub
rclb
fmuls
in
xlat
adc
loopne
inc
clc
aad
jecxz
rorl
xchg
std
addb
add
or
sub
sbb
push
inc
cmp
add
les
cmp
add
jnp
push
jge
add
xchg
sub
pop
iret
fdivs
fmuls
lret
sub
cmp
or
sbb
and
js
into
adc
cmp
inc
or
jo
mov
xchg
sti
out
jmp
or
repz
mov
push
sbb
or
add
sbb
mov
push
icebp
cmp
sahf
jge
and
add
pop
add
sbb
mov
or
jmp
test
icebp
orb
in
fs
xchg
push
sub
pop
mov
shll
aas
add
addb
or
fisttps
xor
sbb
sub
inc
aam
scas
rcr
aam
fcomi
inc
jp
adc
and
inc
in
rolb
ljmp
cmp
add
or
pop
loope
mov
test
xchg
xchg
add
scas
les
adc
repnz
mov
mov
sub
pop
jnp
or
sbb
sahf
jne
pop
cmp
sub
inc
or
sbb
outsl
xor
and
or
loop
or
lods
add
out
ret
ret
mov
sbb
ret
cmp
sbb
aad
xchg
dec
icebp
inc
scas
lods
mov
dec
and
dec
rcrl
push
fdivl
adc
or
sub
pop
clc
test
out
inc
push
pop
mov
sub
loope
sti
push
pop
xchg
sti
or
clc
popa
add
loop
loopne
sbb
movsl
fwait
test
push
add
mov
or
negb
jbe
mov
inc
cwtl
div
jno
cmpl
inc
inc
add
push
scas
cmp
call
push
rcrl
ret
adc
je
hlt
and
ljmp
movsb
mov
adc
ljmp
pop
pushf
sahf
cmp
or
sbb
in
adc
push
xchg
jge
pop
xlat
adc
testb
hlt
sbb
in
idivl
or
lret
push
push
jb
in
cmp
adc
mov
inc
pop
and
lret
loop
fiaddl
pop
fsubl
icebp
test
sub
jb
fiadds
mov
xlat
xchg
inc
pop
sahf
aaa
popa
or
or
add
repnz
loope
or
pop
pop
mov
pop
scas
xor
pop
cld
and
push
std
or
ret
fldt
adc
mov
adc
rol
inc
xor
push
lea
mov
lret
mov
int3
mov
mov
xor
add
lds
cld
push
inc
push
pop
inc
jmp
arpl
pushf
mov
lea
fwait
cmpsl
dec
or
mov
jmp
mov
or
jae
cld
add
inc
shlb
leave
cs
jg
push
test
xor
push
clc
scas
pop
icebp
dec
sub
or
xor
sbb
lret
xor
fcompl
cs
iret
or
shlb
sub
pushf
adc
and
lock
pop
dec
sbb
sbbb
mov
inc
inc
daa
arpl
adc
inc
jo
repnz
shrb
hlt
or
mov
repz
cmp
mov
lock
sbb
cmp
mov
dec
sbb
lcall
clc
cmpsl
subb
repnz
roll
loop
jl
dec
adc
fcmovnu
xor
jl
arpl
stos
adc
sub
addr16
push
loop
xchg
mov
mov
or
cmpsb
push
jecxz
push
xchg
nop
push
cltd
or
xor
jae
mov
sbb
sbb
xor
rcrb
cmp
aas
xor
cli
add
and
xchg
pop
lods
push
sahf
push
cmpb
into
nop
dec
or
fs
shlb
or
inc
clc
mov
jl
or
lcall
inc
cmp
bound
mov
sub
add
int
nop
jmp
xchg
aam
mov
inc
xchg
jl
loop
adc
mov
cmp
adc
sbb
fstpl
leave
icebp
add
into
add
enter
lds
fisttps
add
adc
test
and
xor
sbb
xlat
cmp
syscall
mov
daa
fwait
and
shl
mov
add
hlt
andb
iret
loope
repnz
sbb
cld
movsl
imul
test
mov
call
lds
ret
and
xor
mov
or
adc
pop
add
bound
sbb
mov
cmp
iret
jle
ret
add
pop
out
push
or
xchg
fists
inc
pop
scas
or
pop
pusha
mov
icebp
xor
enter
and
add
loopne
les
dec
shr
in
add
jg
loope
sti
add
push
repz
add
dec
add
cld
xchg
mov
dec
test
mov
enter
xchg
push
jmp
in
out
pop
and
aas
pop
mov
insb
mov
pop
jge
jb
in
add
es
shl
out
sub
xlat
adc
mov
insl
test
ja
add
or
or
add
nop
lret
arpl
aaa
or
inc
aaa
mov
sbb
dec
sub
outsb
pop
das
stc
sub
and
aaa
mov
sub
decb
insl
mov
sbb
add
or
jne
cli
mov
inc
bound
mov
fwait
rolb
lret
dec
daa
int3
sbb
out
mov
adc
loope
push
add
mov
call
adc
or
mov
jecxz
insb
xchg
ret
test
sub
push
popf
stos
in
ja
or
mov
adc
popf
or
push
add
adc
es
jne
adc
outsl
adc
les
adcb
push
sub
inc
dec
cmp
adc
ljmp
loope
lock
sub
mov
cmp
sbb
cmp
pop
loope
xor
rol
fcomps
scas
sbb
fsubrl
rcrb
rorl
cmp
push
loope
ror
jp
rol
push
push
push
push
push
adc
adc
or
inc
xchg
dec
mov
adc
test
inc
lock
sahf
mov
loope
or
test
fsubl
incl
in
xor
icebp
test
push
fimuls
sub
cwtl
fiadds
mov
decl
xor
test
push
aam
test
fcoml
jae
sub
pop
addr16
cmp
jb
ret
sbb
push
outsl
fistps
pop
cmpsl
mov
dec
jg
pop
mov
mov
arpl
mov
add
jo
pop
and
adc
aas
add
jmp
pop
xor
es
dec
sub
es
mov
mov
sbb
fiadds
pop
sbb
inc
push
loope
sub
pushf
sbb
lock
neg
jo
cmp
clc
test
sbb
xchg
mov
push
or
add
and
sub
xor
in
jmp
arpl
ds
adc
icebp
frstor
mov
add
adc
and
scas
sbb
shlb
or
push
aas
push
sub
ljmp
lods
mov
enter
dec
or
pop
leave
cs
cli
or
push
shl
aad
fisubl
je
js
dec
or
loop
sahf
lds
addps
lea
leave
and
es
aad
jnp
dec
scas
and
insl
ljmp
jo
push
gs
icebp
ret
pushf
insb
push
and
cwtl
rclb
cli
addb
inc
add
sbb
push
mov
outsb
aaa
fisttpl
jb
ret
add
hlt
lock
mov
mov
sub
jp
or
lds
les
std
popa
add
jne
add
lock
insl
sub
insl
cmp
adc
inc
dec
mov
sti
xchg
subb
sbb
mov
push
mov
sub
push
cmp
xchg
pusha
jg
add
adc
pop
mov
dec
fsubrp
icebp
add
push
test
pop
fwait
pop
sub
dec
or
dec
jmp
pop
insb
adc
jmp
or
lcall
push
das
pop
mov
aam
loopne,pt
add
fsts
push
pop
pop
inc
mov
outsb
ret
add
rorb
adc
adc
mov
loopne
adc
inc
mov
push
sub
rorb
mov
ret
addb
out
loope
movsl
paddd
lock
cmp
aaa
gs
dec
sti
leave
mov
loope
xor
aam
lods
ds
add
ret
adc
div
rorl
inc
xchg
icebp
test
test
xor
fsubrp
pop
stos
rol
sahf
or
int3
xor
ret
jo
sbb
mov
sub
cmp
icebp
xlat
dec
sub
and
cs
or
std
es
push
outsl
lcall
addl
test
test
push
or
adc
pop
xchg
cmp
xchg
or
rclb
mov
outsb
sbb
add
adc
pop
push
ror
cmp
inc
lock
jae
loopne
fcoms
add
and
lock
out
xchg
add
adc
mov
sub
jp
mov
js
mov
leave
xor
stos
ds
cmpsb
lret
out
push
and
iret
cmc
aaa
mov
loopne
pop
les
or
sbb
insb
pushf
inc
xor
push
daa
lock
add
cmp
bound
clc
rcrl
xchg
or
sahf
mov
push
lods
lds
sahf
pop
mov
insb
adc
into
or
rsqrtps
popf
adc
adc
adc
inc
test
pop
pop
dec
shlb
cld
jne
cmp
mov
data16
inc
aam
push
gs
daa
in
xor
sbb
clc
push
sub
lds
out
fmuls
sahf
add
inc
fcmovnb
or
test
cmovle
jbe
cmp
lods
xor
xor
mov
adc
movsl
pusha
mov
divl
loop
icebp
mov
push
pusha
xchg
add
sub
sbb
xor
movsl
adc
adc
cmp
xor
pop
ror
jae
pop
dec
inc
adc
enter
sbb
adc
mov
mov
std
popf
adc
fisubrs
jnp
xlat
fnstcw
push
test
sbb
ret
and
mov
mov
push
or
out
fwait
cmp
in
dec
mov
divl
out
sbb
insb
js
inc
loop
fwait
icebp
mov
xchg
sub
mov
lret
es
add
les
add
sarb
cld
push
mov
std
mov
nop
nop
ja
outsl
xor
lods
fwait
jg
mov
xor
and
int
pusha
mov
cmp
cmp
mov
test
push
int
add
mov
sbb
rolb
sub
aaa
clc
add
push
cmpsb
inc
xchg
repnz
rclb
test
jae
dec
mov
adc
adc
adc
fcoms
inc
sbbb
push
fsubr
ds
or
aaa
sbbb
dec
add
incl
or
js
sub
xchg
cmp
leave
sub
das
fadds
dec
stos
xchg
hlt
test
xchg
adc
inc
pop
jp
outsb
daa
leave
mov
add
pop
fisttpll
cmp
outsl
ljmp
popl
mov
add
xchg
add
sar
call
add
ret
mov
icebp
mov
sbb
out
jl
mov
nop
loop
scas
sbb
pushf
adc
adc
push
sbb
sbb
or
jge
mov
ret
add
mov
and
push
and
adc
leave
dec
testl
mov
push
jno
sub
pushw
dec
stc
pop
stos
adc
out
dec
les
inc
push
shrb
fadds
clc
push
push
inc
xchg
cmp
add
and
lret
icebp
enter
mov
add
xor
cmp
nop
in
test
adc
je
push
pop
scas
shrl
js
cmp
testb
cmpb
ret
aaa
ss
lret
test
jp
mov
jne
push
lcall
push
ret
sub
into
cmp
push
jnp,pt
jo
test
jbe
adc
sub
pop
push
arpl
fmul
add
ret
xorl
pop
xor
les
dec
inc
out
lret
pushf
inc
stos
lods
adc
imul
fcomps
inc
inc
std
xor
cltd
icebp
icebp
leave
daa
test
cmp
shl
sbb
stc
jmp
jmp
loop
call
and
mov
scas
mov
loope
ja
mov
adc
rolb
stc
push
xchg
mov
aas
push
push
sbb
lds
pop
sub
test
movsb
scas
leave
pop
or
popl
pop
in
jns
jnp
inc
fcompp
int
lret
lods
sbb
adcl
lods
adc
xor
xchg
imul
lods
and
sbb
or
and
ja
nop
pop
fst
pusha
inc
aad
mov
les
imul
push
push
dec
fsts
imul
push
mov
push
jne
loopne
and
pushf
adc
pop
out
or
add
in
add
add
orb
sub
lea
and
adc
fimuls
notb
cmp
mov
xor
mov
mov
into
add
adc
rcrl
test
sub
or
push
xlat
loopne
or
jmp
jmp
jp
or
add
xchg
sub
cmp
test
dec
mov
sub
dec
arpl
mov
iret
pop
xor
ror
push
cltd
add
cmp
inc
mov
or
int
sub
aas
xchg
push
aas
sbb
lods
cmp
jbe
xchg
scas
xchg
pop
xor
jnp
stos
les
inc
flds
scas
loop
push
sub
insb
sbb
dec
mov
lea
lret
push
into
adc
lods
orl
addr16
cli
gs
jg
adc
std
mov
jno
andb
es
pop
or
mov
js
mov
push
pushf
pusha
aas
das
sbb
sbbl
add
xor
adc
popa
push
imul
ss
rcl
add
jecxz
xcrypt-ctr
cmpsl
pop
punpckhbw
imull
add
movl
je
push
fstps
mov
push
cli
shl
adc
cld
push
inc
shl
pop
xlat
rcll
shr
dec
cli
or
popa
add
js
push
xor
inc
loopne
and
mov
push
cmp
call
pop
lods
mov
add
sub
push
push
das
pop
sub
lret
arpl
cli
loopne
xor
subb
enter
dec
orb
lcall
push
nopl
insl
ja
scas
add
sub
cwtl
dec
in
mov
mov
add
stos
sub
push
movsb
imul
pop
insb
or
sbb
sbb
adc
scas
test
cld
xor
lret
clc
pop
cmp
scas
and
jne
psraw
add
add
lret
push
dec
iret
or
pop
sbb
xchg
int
dec
add
add
addr16
sbb
sub
adc
dec
repz
inc
mov
inc
icebp
fisttps
test
je
cmp
push
add
rolb
outsl
in
dec
sbb
fs
xor
and
mov
xor
scas
jle
xchg
negl
cmc
dec
in
xor
imul
shrl
loopne
xchg
mov
mov
inc
je
popf
mov
sbb
or
rcrb
dec
jmp
fidivrl
repnz
loopne
loopne
stos
out
fcom
mov
adc
out
and
fstl
sbb
adc
mov
pop
pop
pop
cld
pusha
or
adc
jbe
jne
ud2
fstp
shrb
sub
dec
and
jg
jp
push
fnsave
loopne
inc
xor
cmc
push
or
lret
jno
push
das
pop
pop
jge
xor
addr16
ja
and
fnstenv
sub
mov
fisubrl
nop
jae
mov
les
nop
call
outsl
mov
lret
popf
mov
push
testb
flds
xadd
fs
inc
shl
cmp
pop
enter
or
lret
out
mov
cmpsl
jno
add
fisttpl
adc
inc
pop
sub
div
push
inc
xchg
cltd
cli
stos
jnp
cmp
inc
lea
mov
dec
test
pop
shrb
shrb
mov
sbb
cmpsl
lds
cmp
rorb
fs
out
push
sub
and
dec
mov
push
es
rcrb
sbbl
negb
push
add
ljmp
pop
xor
mov
add
push
rorb
jmp
or
mov
dec
xchg
inc
cmp
mov
call
cmp
insb
fadds
pusha
aam
sbb
repnz
xchg
mov
xchg
mov
test
idiv
test
lods
aad
test
adc
adc
addr16
adc
pop
mov
sub
adc
or
pop
bound
jp
popa
imull
or
mov
cmpsl
fnstcw
push
jo
dec
in
imul
xor
xchg
sub
movsb
sbb
push
add
mov
aad
and
inc
scas
jge
pop
loope
xchg
lods
mov
cmp
cmp
cmp
mov
ja
movsb
shll
insb
sbb
out
faddl
dec
or
add
rcll
ds
sbb
adc
sbb
fcmovu
or
mov
sbb
jno
insb
pop
movsb
imul
movsb
test
in
jg
lret
rclb
sub
push
sbb
push
sbb
xor
cltd
lret
and
jecxz
mov
or
rcrb
je
inc
dec
pop
insb
xchg
cmp
sbb
sbb
inc
or
lcall
movsb
aam
push
cmp
cmp
sub
out
xchg
lds
sbb
ret
cmp
fbld
pop
repnz
rolb
pop
test
add
add
std
hlt
jmp
icebp
jg
lods
inc
push
xor
imul
xchg
rcll
or
dec
loope
popa
sbb
flds
push
sub
fistpll
add
mov
sbb
movsl
push
rcrl
sbb
jmp
out
xchg
jno
jnp
and
or
cmpsb
jne
sub
in
repz
fildl
push
and
sbb
cmp
sbb
dec
fstl
loope
lret
jecxz
addr16
js
test
loope
mov
lahf
inc
std
xchg
inc
pop
push
add
push
push
dec
push
icebp
lods
add
fbstp
aas
mov
insl
paddsb
rorl
inc
test
jae
shll
adc
rcr
arpl
lret
pop
orb
or
cmp
pop
inc
out
add
cmp
sti
shlb
jae
lret
lret
mov
mov
inc
fs
call
iret
rcrb
inc
cmp
inc
aam
sbb
shll
and
into
rdpmc
sub
or
inc
lret
mov
mov
in
push
clc
iret
add
adc
add
lock
in
sub
cld
in
add
or
add
and
sbb
shl
mov
add
push
int3
mov
sbb
js
push
lret
test
sahf
inc
loop
lahf
aam
sbb
lahf
into
icebp
push
scas
movsb
mov
xor
ret
mov
mov
pop
ljmp
neg
push
and
dec
sbb
hlt
push
xchg
inc
sbb
jo
xchg
mov
js
cmpsl
mov
push
adc
cmpsl
push
aam
mov
das
addl
add
push
imul
das
jmp
or
pop
add
cli
add
inc
xchg
add
movsl
jno
and
outsb
sub
data16
dec
push
push
inc
inc
testl
popf
adc
or
add
sub
mov
in
cmpsl
jl
add
imul
xchg
mov
add
inc
rol
ret
fucomp
jecxz
xor
addb
mov
movaps
xor
fdivrs
fisubs
push
inc
and
sbbb
es
push
fwait
inc
adc
push
outsl
or
push
jg
rcr
hlt
int3
jp
or
movsb
test
and
mov
out
pop
outsb
push
jecxz
or
and
imul
clc
nop
pop
test
sbb
or
push
lods
add
rclb
nop
jmp
cwtl
mov
loop
pop
in
movsb
mov
push
xor
jbe
jge
jae
pop
xor
hlt
fiaddl
lock
fs
popf
cld
clc
rcl
fldlg2
xorb
pop
jecxz
push
jne
dec
iret
or
or
mov
add
or
adcl
lock
and
mov
sub
int3
pop
fsub
and
or
push
lret
fistpll
adc
mov
fsubp
dec
fiadds
push
pushf
adc
rol
fbld
dec
in
mov
ret
js
lret
arpl
mov
dec
sub
hlt
jne
cmp
mov
orl
test
sub
lods
xchg
mov
inc
lahf
test
push
jp
pop
arpl
std
icebp
push
mov
or
inc
dec
sbb
add
sar
loopne
js
sbb
sar
dec
imul
and
add
addr16
adc
cmp
fimuls
ret
out
xor
and
and
loop
and
leave
adc
int
repz
and
mov
jno
or
sub
and
sub
mov
sbb
sub
pop
ror
cmp
icebp
lcall
clc
in
mov
add
push
rcrb
add
int
xchg
push
push
or
pop
cwtl
or
test
int3
in
push
sub
xor
inc
mov
cmc
dec
pop
ret
cmp
jbe
dec
mov
mov
mov
add
and
jmp
mov
or
aad
sbb
jecxz
xor
enter
subl
hlt
add
inc
xchg
aas
das
test
jbe
cs
addr16
push
xchg
lods
lock
mov
sbb
movsl
mov
jg
enter
jae
adc
fisttps
adc
adc
hlt
xchg
jnp
lods
dec
loop
shr
shlb
cmp
adc
adc
das
shlb
dec
sub
sahf
lea
inc
clc
adc
jmp
aaa
filds
mov
into
sub
test
je
add
or
add
mov
loope
adc
cld
add
rolb
ljmp
xchg
lods
inc
sbb
aas
add
negb
into
add
lea
push
pop
fistl
mov
shrb
mov
pop
mov
out
daa
cmpsb
inc
cmp
sbb
rcrb
adc
ss
not
rclb
cli
clc
push
outsl
and
call
mov
add
ja
test
mov
lret
jne
dec
dec
cltd
into
sbb
mov
das
and
xor
and
iretw
xchg
addl
cmp
push
fldenv
inc
or
push
pop
mov
out
sub
sub
int
adc
sub
and
fcompl
testl
inc
sub
jle
push
push
gs
add
lods
lock
hlt
adcl
rcl
xchg
push
jle
sbb
loop
gs
test
sub
mov
adc
addl
hlt
ljmp
test
sbb
add
and
rcll
popa
rcrb
call
push
ljmp
sbb
les
out
ja
lods
shll
pop
add
mov
mov
les
lret
pop
sbb
pop
jbe
rcl
or
ret
sbb
ror
ja
xchg
inc
in
daa
nop
push
dec
imul
mov
and
jo
cmp
push
aam
orb
rorl
adc
pop
subb
lods
pop
iret
ja
out
cli
push
or
fbstp
mov
inc
jns
out
dec
cmp
pusha
push
sub
adc
sti
sbb
sbb
add
and
movsl
jo
ja
push
jo
rcrl
insl
xchg
js
rcrb
or
cmc
aam
push
dec
xor
inc
mov
dec
sub
jne
cmp
or
test
vsqrtpd
xchg
test
shlb
stc
les
orb
mul
add
xor
std
pop
xor
cwtl
test
jb
fwait
push
lods
and
pop
aad
int
lds
pushf
add
push
or
sub
je,pn
or
inc
adc
jns
sub
je
or
aas
adc
pop
rcr
stos
sub
cwtl
fbld
or
sbb
xchg
add
pop
mov
roll
cmp
mov
fs
sbb
xchg
and
lods
leave
add
add
push
aam
or
mov
hlt
loopne
lret
lea
xchg
cmp
push
or
sbb
cld
out
mov
add
popl
push
popa
insl
in
ss
and
xchg
sub
loopne
add
mov
inc
enter
rolb
ror
mov
jecxz
xor
in
or
pop
inc
pop
lret
mov
mov
xchg
add
shl
movsb
push
inc
pop
mov
ljmp
clc
movsb
add
sub
aad
push
dec
and
cld
rol
pop
sbb
ret
fisubl
add
call
pop
push
or
or
pop
leave
ret
cmp
dec
mov
jno
or
jns
add
xor
jo
inc
loopne
insl
dec
xchg
mov
pop
pop
push
cs
add
dec
mov
fs
inc
adc
out
call
xor
dec
and
dec
pusha
pop
mov
jmp
cmpsb
cmpsl
xor
fdivs
add
pop
test
xchg
loopne
movsb
inc
add
and
adc
pop
cli
jg
cli
call
add
popa
adc
add
jp
xor
test
sbb
adcb
dec
mov
mov
not
repnz
add
or
push
call
mov
ret
and
or
add
loopne
xchg
dec
mov
sbb
or
add
shlb
add
or
rcll
mov
push
push
imul
push
or
or
mov
rorl
std
lahf
into
dec
fwait
sbb
lods
push
stos
mov
or
lret
pop
mov
and
mov
movsl
scas
shr
cli
inc
aam
mov
xchg
or
sarb
hlt
jnp
add
pop
xor
and
or
inc
add
mov
pusha
adc
push
jecxz
sub
pminub
fisttps
mov
sbb
loopne
mov
or
and
xor
push
ret
inc
incl
dec
sbb
cmp
in
add
into
lret
sub
push
mov
or
dec
mov
and
inc
das
or
cmp
push
dec
sbb
add
loopne
sbb
clc
es
push
cmp
jle
cmpsb
hlt
dec
ret
in
ss
adc
test
add
add
xchg
loopne
cmpl
lret
cmp
repnz
into
inc
das
insl
or
jno
das
and
loop
push
outsb
jns
xor
dec
mov
lret
sbb
and
sub
lret
dec
and
lock
add
push
push
enter
mov
mov
pushf
addr16
in
rolb
shll
cmp
aam
inc
sbb
addb
or
add
adc
xchg
sub
add
mov
lret
scas
xchg
sub
pop
mov
pop
jbe
pusha
push
mov
movsl
xor
stos
dec
adc
bndldx
mov
lret
and
fadds
dec
or
inc
dec
mulb
or
add
adc
or
pusha
loop
es
pop
jb
mov
cs
push
inc
pop
movsb
inc
jle
fcoml
loop
loope
stc
mov
and
inc
lea
insb
pop
xor
sbb
dec
rcrb
imul
fdivl
inc
push
cmp
subb
sub
jo
or
push
or
adc
and
inc
add
or
mov
insb
pushf
cmp
ret
mov
mov
lock
cmp
addr16
adc
int3
test
es
sbb
xchg
pop
movsb
fidivrl
sub
int3
inc
mov
addl
ficompl
nop
lcall
lea
or
cmc
and
ret
dec
adc
xchg
outsl
mov
cmc
mov
mov
or
add
mov
mulb
mov
and
push
cmp
mov
ror
dec
push
jo
imul
lea
in
cld
xor
mov
and
popa
mov
jp
cmp
ljmp
xchg
cmp
rcrl
xor
xor
lahf
push
js
fsub
dec
ss
dec
add
jbe
cmp
nop
call
inc
pop
sub
xor
scas
push
cwtl
sub
data16
cmp
pop
inc
in
cmp
add
pop
adc
cmc
xor
push
dec
sbb
sbb
mov
rclb
sbb
adc
push
clc
andb
lea
or
inc
test
out
dec
sbb
sbb
popf
or
and
mov
sub
push
xchg
add
and
push
adc
xor
sbb
mov
loopne
mov
push
enter
cmp
push
repnz
inc
arpl
jle
inc
adc
mov
mov
add
in
push
test
sub
jnp
lods
mov
inc
lock
gs
xor
jo
in
inc
roll
dec
and
js
adc
loopne
ficoms
add
dec
mov
jmp
xor
hlt
push
xchg
jmp
testl
and
add
rclb
add
movb
or
or
push
aam
or
push
mov
shrl
cmp
sbb
mov
lock
lock
push
jp
sub
sub
testb
adc
sahf
sbb
out
mov
imul
testb
fs
or
xchg
fdivl
dec
xchg
add
cmp
js
jp
add
pop
jno
xchg
jne
ret
lret
sbbb
outsb
or
scas
add
xor
jne
sahf
es
rorb
in
add
pop
test
lea
rcll
add
shr
inc
push
sub
subb
inc
or
xchg
nop
xchg
push
add
xlat
sbb
ss
mov
js
cmp
mov
gs
pusha
xchg
scas
cmp
sbb
js
mov
jno
adc
sub
adc
xorb
notl
adc
ret
test
test
inc
mov
subl
loope
add
out
ret
jp
imul
lea
jp
clc
inc
mov
test
loopne
jmp
mov
js
pop
cmpb
or
js
loop
push
inc
adc
roll
cmpsb
into
ret
mov
lret
xor
sbb
ljmp
inc
test
sbb
cmp
sbb
mov
mov
inc
dec
pusha
insb
fs
int
test
adc
push
cmp
or
rol
mov
test
je
arpl
jbe
icebp
jg
sub
adc
divl
sarb
aam
stos
inc
mov
pop
lret
push
push
shll
popf
dec
inc
into
movsb
lock
mov
or
dec
data16
cwtl
inc
stos
adc
movlps
push
inc
movsb
xor
xorb
test
jb
xor
xchg
and
push
es
ljmp
cmpb
adc
insb
ficoms
xchg
into
dec
rcrb
xchg
cmc
and
add
jo
jmp
nop
adc
outsb
pusha
gs
popa
mov
scas
sbb
loopne
repnz
rol
or
fldl
pop
pushf
inc
sbb
mov
daa
or
or
adc
push
ret
xor
cmpsl
and
cmp
lea
lea
test
andb
jmp
add
mov
inc
in
and
xchg
lea
pop
into
cwtl
sbb
lcall
and
add
xor
or
nop
gs
and
aam
sub
cs
pusha
add
mov
int
shr
clc
lahf
adc
or
pusha
sbb
inc
fiadds
add
mov
or
adc
sub
dec
pop
sti
shr
sbb
inc
popa
xlat
adc
sbb
pop
sub
js
dec
sub
lret
mov
xor
push
loopne
icebp
ds
jp
ret
cld
jg
rol
fisubs
xor
ret
jmp
lret
jmp
sub
notl
sbb
jp
sbb
xor
jge
dec
lock
jae
jl
dec
shl
or
xchg
mov
ficompl
sti
cmp
orb
divl
ret
pushf
adc
pop
mov
pop
in
dec
mov
mov
andb
or
add
xchg
aam
lods
aas
sub
mov
mov
dec
push
mov
inc
jne
into
shlb
stos
loop
xchg
and
push
fsubrl
fs
pop
into
inc
es
jmp
and
test
add
addb
xchg
or
mov
or
andl
fstpl
xor
dec
mov
add
shl
cmp
imul
decb
lock
and
cs
cmp
adc
rcrb
movsb
sub
dec
push
lret
sbb
loopne
xlat
ljmp
fidivrs
enter
mov
test
scas
cld
loope
mov
shl
sub
pusha
mov
mov
jp
lret
or
jp
jecxz
fdivrs
jb
sbb
popa
dec
xchg
pop
iret
xor
push
sub
adc
adc
mov
aas
nop
jnp
xor
inc
out
push
loop
sbb
sahf
lds
aam
rclb
inc
popa
mov
and
jno
jp
negb
and
mov
and
sbb
pop
test
xchg
add
pop
js
dec
lret
popa
mov
cmp
inc
cmp
mov
or
cmp
imul
into
scas
test
sbb
mov
out
add
in
adc
je
ficoms
into
or
scas
push
pop
sarl
std
pushf
cmpsb
jo
hlt
mov
add
xor
sti
cmp
enter
or
inc
mov
addr16
lcall
xor
loope
rol
rolb
xchg
jp
in
imul
sbb
push
aam
mov
ficoms
lods
pushf
sbb
daa
xchg
and
cmpsb
dec
adc
add
push
add
inc
shlb
add
cmp
jo
loope
loope
fsubp
jp
inc
jecxz
or
icebp
js
mov
sbb
fs
dec
sbb
pop
shrl
negb
push
push
fisttpll
lods
pop
lds
out
add
xchg
addr16
les
sub
dec
dec
mov
mov
mov
dec
push
dec
cmp
jbe
and
lock
sub
call
lods
push
loop
mov
pop
lea
loope
inc
mov
mov
sbb
jo
add
je
inc
or
dec
or
lock
rorb
push
dec
bound
bound
clc
adc
dec
fdivl
out
adc
arpl
and
jp
sahf
sbb
mov
xor
dec
and
subl
xor
cmp
and
jle
jo
mov
or
dec
rorl
xchg
xor
fistps
popf
mov
aas
jg
pushf
inc
xchg
loope
add
jo
jb
popa
adc
loop
roll
inc
push
sbb
or
loop
adc
dec
mov
jae
xor
mov
ljmp
ret
ss
arpl
and
add
hlt
pop
rcrb
pushf
pushf
js
jp
loop
andb
push
xchg
jbe
inc
and
test
xor
invd
or
and
data16
pusha
lods
outsb
add
cmp
dec
pop
xchg
inc
lret
lods
icebp
pusha
sbb
xchg
aaa
test
or
cmp
jo
adcl
pop
sarb
lods
and
mov
or
clc
into
js
gs
ds
rolb
sahf
out
mov
pusha
in
mov
mov
mov
sbb
sbb
adc
test
outsw
nop
sahf
or
movsb
dec
push
test
and
dec
mov
add
sub
ja
enter
sarb
cmp
lcallw
and
ljmp
jno
push
xor
lock
test
xor
push
movlps
mov
push
cmpxchg
inc
jecxz
movsb
xor
pop
adc
ljmp
or
xchg
mov
les
sbb
xor
mov
movsb
pop
mov
loop
gs
dec
ljmp
inc
push
sub
popf
xorb
and
add
xchg
pushf
adc
lock
ss
cmc
xor
pop
loope
xchg
cld
xchg
dec
cmp
into
xchg
mov
lcall
dec
outsb
lods
cld
cld
pop
adc
inc
lret
lcall
push
je
sbb
add
outsl
inc
pop
adcl
xor
inc
xchg
xchg
or
je
jl
push
xor
jl
adc
insb
popa
out
pop
cmp
xor
add
popa
add
jne
inc
sub
adc
mov
jb
mov
mov
inc
imul
adc
cmp
pop
repz
mov
adc
rorl
adc
sbb
mov
inc
mov
mov
mov
movlps
daa
inc
xor
push
mov
or
movsb
adc
or
pop
movsl
dec
mov
add
or
adc
jae
adc
cld
mov
adc
push
cmpsl
push
popf
icebp
or
xchg
clc
lret
mov
add
mov
pop
and
pushl
xorb
dec
jp
gs
cmpsl
add
ss
xor
pop
enter
add
or
sbb
cwtl
push
in
push
dec
fcmovnb
and
or
mov
test
or
rclb
sub
mov
mov
lea
push
and
andb
or
add
jbe
adc
jp
lods
push
xor
bound
adcl
jo
mov
sbb
inc
xchg
dec
xor
ljmp
pusha
cmc
mov
sub
xchg
add
xchg
popf
lods
xchg
loopne
ljmp
ret
xchg
xchg
and
xor
loope
cmp
or
les
mov
lret
ljmp
dec
cmp
cmpsb
cmp
enter
dec
mov
push
invd
scas
loopne
retw
jp
ret
and
lcall
jecxz
xchg
xchg
dec
test
dec
add
jl
cmc
mov
mov
pop
bound
mov
dec
push
mov
xor
dec
mov
jl
popa
xor
lods
jb
rcrl
adcb
lods
in
add
subb
fidivl
je
or
enter
or
ret
enter
push
and
enter
sbb
mov
xchg
sbb
pop
sbb
push
mov
xorl
aaa
jp
or
jp
add
jo
or
or
out
in
or
xor
mov
sar
xor
push
sbbb
adc
gs
xor
sbb
mov
jp
cwtl
mov
sub
mov
scas
scas
ret
inc
mov
sbb
xchg
in
lock
sub
aad
jbe
mov
mov
mov
cmpsb
mov
xchg
xor
pusha
sub
pop
xor
fiaddl
imul
fsubs
popa
lods
lock
inc
or
test
lods
aaa
lock
mov
loop
xor
pop
lock
sbb
cwtl
pop
or
sbb
mov
out
aam
xchg
movsb
ret
pop
add
enter
mov
xor
or
fimull
dec
test
mov
insb
lods
pop
sarb
pusha
pop
hlt
insl
push
sarl
ljmp
bound
and
movsl
cmp
lcall
or
sub
sbb
push
out
int3
pop
les
add
xor
add
incb
mov
call
call
push
mov
lods
pusha
andl
popa
inc
call
scas
jle
or
ret
inc
push
fld
add
fidivrl
pop
mov
xor
fisubs
xor
push
enter
jno
xchg
and
adc
mov
add
imul
rcrb
sub
push
add
xchg
xchg
fs
or
lret
adc
or
shrb
pop
punpckldq
cmp
jnp
push
xchg
pop
dec
jl
add
cmp
sbb
in
mov
sbb
mov
jno
popf
insb
mov
push
cmp
dec
jne
adc
sbb
lcall
jb
loope
sbbb
xchg
pop
add
into
shll
mov
cs
or
cmp
pop
mov
xor
or
fwait
popa
les
clc
jb
icebp
pavgw
rcr
arpl
dec
mov
inc
mov
add
pop
sub
sub
clc
jl
insl
sub
or
mov
pushf
fcoml
jecxz
adc
mov
adc
pop
or
xchg
adc
dec
jne
or
lock
hlt
loop
sbb
fsubrl
push
inc
mov
clc
jmp
pushf
sbbl
repnz
xchg
push
aaa
dec
rclb
sbb
lds
add
test
rcrl
loopne
out
mov
sbb
clc
pop
adc
mov
push
or
enter
clc
push
cltd
push
and
clc
push
cmp
mov
push
aam
incl
inc
inc
adc
adc
movsb
mov
xor
outsb
shl
sahf
test
clc
addr16
fs
aam
add
sub
add
xorl
pusha
loope
push
cli
dec
cmc
add
sbb
or
movsl
xorl
cmp
or
jmp
das
in
adc
shl
rcrb
outsb
sub
stos
test
xor
shr
sub
push
loope
cmp
popf
push
shl
dec
xlat
xor
roll
clc
and
dec
mov
jnp
outsb
or
jg
push
cmpsl
gs
sahf
cs
subl
sub
or
aaa
mov
push
adc
call
inc
jge
fiadds
xorb
cmpsb
xor
sahf
jecxz
fimuls
add
iret
rcr
clc
sub
mov
sbb
add
mov
into
and
gs
push
repnz
sbb
add
inc
nop
ret
lea
mov
xor
jnp
pop
cmpsb
test
xchg
sbb
inc
mov
push
pusha
addps
ljmp
loop
pushf
or
lods
scas
mov
subl
dec
fsubl
lock
mov
ja
adc
fdivl
pushf
sahf
sbb
nop
cmp
hlt
or
cld
popf
lea
mov
sbb
xchg
dec
adc
jo
mov
sbb
pop
inc
jne
dec
shlb
adc
ret
mov
mov
add
push
shrb
mov
cmp
dec
sub
dec
xor
insb
ljmp
cmp
mov
jp
ss
or
out
mov
data16
add
or
rolb
outsb
test
into
bound
and
sbb
or
xchg
outsb
cwtl
cmp
testl
mov
cmp
pop
xor
add
call
test
jae
insl
jecxz
cs
add
in
add
enter
push
inc
adcl
cmp
add
adc
jbe
test
mov
imul
lods
test
cmp
dec
pop
mov
imul
and
lods
pop
dec
add
push
xor
or
shrb
std
fadd
out
loopne
inc
sub
mov
and
sub
sub
mov
xor
xor
pusha
ret
lock
push
push
movsb
cmp
sarl
ret
sbb
or
sub
data16
lcall
cmpsb
push
mov
or
ret
orb
mov
fdivrl
xchg
adc
sbb
sub
shr
add
pushf
movsl
in
inc
sub
mov
jno
jbe
js
mov
pop
loop
dec
cs
popf
popf
paddsb
inc
dec
adc
testb
add
lret
inc
mov
hlt
int3
xchg
sub
sbb
mov
push
cmpsb
loopne
loop
or
push
cmp
mov
xor
push
and
js
jp
mov
shll
push
loope
nop
mov
xor
push
dec
pop
inc
inc
sbb
lods
pop
pusha
mov
inc
test
inc
cmp
cmp
sub
and
or
pop
test
xor
or
sahf
jb
dec
mov
hlt
popf
sub
cmp
daa
push
or
pop
and
into
loope
arpl
les
push
dec
pusha
inc
lods
sub
add
insl
and
es
xchg
mov
cmpsb
adc
rclb
sarl
jne
addb
popf
or
arpl
mov
fidivrl
loop
mov
pop
push
inc
sub
push
or
xor
mov
or
cmp
aad
mov
mov
cmpsb
jo
mov
sbb
xchg
rorb
push
clc
dec
pop
rorb
lret
imul
push
js
cmp
or
pop
pusha
or
enter
mov
pop
dec
xchg
push
ret
and
popa
xchg
stc
jl
imul
lock
popf
dec
cmp
xchg
shrb
xor
mov
push
inc
or
sbbl
mov
into
clc
lods
movsl
push
dec
lea
js
adc
and
push
loop
and
lret
icebp
mov
sub
dec
ror
bound
addl
daa
cmpsl
mov
pop
cmp
mov
xchg
sub
bound
xchg
and
xchg
xchg
mov
mov
or
or
inc
ret
jo,pn
popf
or
mov
dec
arpl
cs
jb
xchg
pop
dec
xor
movsb
push
push
adcb
movb
or
sbb
movsl
xor
cwtl
or
shlb
mov
stos
lret
outsb
or
loopne
xchg
mov
sbb
mov
orb
xor
mov
sbb
add
rorb
cmp
lret
jbe
ret
mov
shrb
sub
ret
pop
ljmp
or
nop
and
add
rol
pusha
es
adc
and
fcompl
xchg
xor
ds
push
test
push
jp
clc
adcb
dec
scas
xor
push
or
pop
cltd
add
cmp
rclb
ret
jo
outsb
ret
jp
mov
and
jnp
add
loop
or
inc
outsl
pop
enter
push
or
arpl
pop
xor
loopne
dec
decb
cs
and
xor
cmp
push
hlt
mov
or
ljmp
sbb
popf
adc
and
push
movsb
sbb
test
mov
and
cmp
dec
push
ficomps
dec
mov
ret
inc
cmpsb
fs
ret
push
subb
pop
xor
add
movlps
pusha
and
xlat
in
sbb
or
mov
int3
sub
sub
in
clc
xchg
fldl
dec
data16
push
pusha
mov
sub
cmovb
mov
aam
pop
xchg
daa
shrb
add
nop
sbb
outsb
mov
js
stos
xchg
push
mov
js
fimuls
sub
cmp
cli
into
lods
arpl
mov
xchg
shlb
xchg
pushf
add
adc
push
cmp
inc
lret
ret
push
fidivl
or
jbe
push
push
lahf
pusha
adc
imul
test
adc
test
mov
adc
mov
fadds
push
loope
imul
ja
push
push
pusha
add
daa
jbe
jo
xor
orb
cld
inc
sbb
jo
sub
and
xor
push
cs
adc
inc
or
xchg
fs
leave
mov
imul
xor
add
cltd
push
inc
rcr
dec
add
pop
cmp
das
sub
rolb
mov
add
jp
ljmp
add
popa
pushf
mov
and
adc
jg
pop
and
adc
dec
loope
inc
lods
out
pop
movsb
pop
mov
inc
push
fwait
syscall
mov
or
imul
out
into
mov
test
pop
add
xor
sbbb
shll
loope
push
xor
imul
xor
pop
std
inc
pop
xchg
call
out
cmp
roll
push
imul
aas
dec
leave
call
or
adc
lret
adc
lods
cs
add
in
lahf
cmp
out
or
mov
cmp
fs
cltd
and
pop
ret
push
out
and
fs
cmp
mov
jl
pop
xor
mov
lods
sbb
in
add
or
mov
aad
ja
fisubl
mov
push
fs
nop
fs
or
out
xchg
or
bound
xchg
inc
mov
or
pushf
adc
inc
push
or
xchg
or
adc
mov
jp
outsb
add
xchg
roll
cmp
mov
dec
mov
mov
inc
popf
loopne
js
popa
or
mov
mov
jmp
add
into
and
mov
cmp
mov
and
movsl
add
arpl
pusha
sbb
cmp
sub
faddl
insl
cmpsb
ss
xchg
adc
int3
aas
iret
adc
mov
mov
dec
out
rorb
push
push
push
rolb
fisubrs
add
cmpsb
call
daa
mov
mov
mov
rolb
xchg
ficomps
sub
xchg
in
sbb
or
push
aam
sub
mov
inc
fsts
adc
cmc
xchg
push
and
out
adc
loop
add
dec
in
fs
jne
push
ss
push
outsl
sbb
pop
orb
xor
push
push
and
sbb
sbb
daa
pop
inc
adc
dec
pop
enter
adc
movsb
movb
lods
fdivl
push
jo
fadds
movsl
mov
inc
or
adc
mov
or
mov
mov
pop
ret
rcll
cltd
jno
or
imul
add
push
sub
test
mov
add
mov
adc
test
cmp
xchg
add
rolb
aaa
movsb
pop
mov
lock
inc
push
sbb
jp
adcl
scas
clc
jl
lret
sahf
ret
push
pop
pop
out
gs
xchg
fadds
icebp
movb
jbe
cmpsb
fs
fdivs
lock
loop
and
cli
loope
imul
test
call
cmpsb
adc
xor
mov
or
lock
and
int3
sub
into
sahf
xor
cli
inc
mov
bound
jae
ss
jns
scas
cmp
push
in
lods
add
loope
nop
inc
jbe
leave
xchg
or
inc
dec
sbb
mov
sbb
sbb
adc
jl
loope
and
nop
push
cmpb
adc
mov
test
or
loopne
xchg
mov
pushf
in
cmpsl
inc
jns
xchg
xchg
and
jo
mov
push
ret
cmp
sub
icebp
leave
mov
mov
add
jno
add
push
call
dec
or
lods
mov
ret
xorb
mov
and
adc
popa
mov
pop
lock
outsb
mov
into
sbb
addr16
push
fs
loop
cmp
xor
fsubs
mov
cmpsl
mov
sbb
or
dec
mov
fwait
and
xor
pop
push
mov
arpl
xor
leave
push
pop
popf
scas
xor
cwtl
jne
mov
adc
insb
arpl
mov
fwait
pop
xlat
and
mov
push
fwait
stos
fsubs
je
loopne
jo
add
loop
inc
dec
test
icebp
xorb
xor
sub
lock
out
fidivrl
test
or
adc
cmpsb
imul
mov
mov
mov
mov
pop
push
xchg
es
inc
les
sbb
sub
mov
add
cmp
add
mov
push
adc
loope
loopne
sahf
lock
incb
icebp
mov
outsb
mov
hlt
xchg
popf
sbb
mov
repnz
sarb
and
push
insl
leave
xor
movsl
test
lods
shll
call
and
cmp
jle
cmpsl
cmpsl
xchg
in
pushf
mov
int3
leave
mov
adc
pop
dec
mov
es
inc
leave
insb
add
xor
dec
xchg
inc
pop
dec
add
lret
inc
movsl
or
or
cmpsb
out
xchg
pusha
add
and
pusha
or
enter
mov
les
sbb
rcl
sub
sbb
cmp
xor
dec
das
jnp
jbe,pt
jl
pop
arpl
daa
ret
xchg
inc
movsb
sbb
push
pop
push
dec
push
cmp
sbb
mov
push
out
xchg
pop
or
pushf
insb
clc
push
pushf
mov
or
dec
mov
in
fs
or
push
mov
or
mov
push
rclb
bound
les
lods
fcoml
into
xchg
xor
dec
jo
lods
pop
or
push
les
jp
mov
fs
push
inc
stos
push
call
scas
and
in
cmc
enter
rcrb
mov
pop
dec
loope
je
les
mov
ret
and
ret
scas
mov
cmp
or
enter
imul
sub
shlb
push
pop
add
ljmp
fcom
cmp
test
dec
or
add
push
loop
dec
cmpsl
jb
lock
in
fisttpll
mov
xchg
addb
adcb
loop
aad
push
sbb
jb
pop
push
ja
ret
lcall
cld
ret
arpl
mov
or
sbb
lock
in
mov
mov
je
es
lret
inc
sbb
ret
pusha
je
and
or
or
mov
lret
stos
and
xor
orl
push
mov
mov
xchg
or
rcrb
insb
mov
sbb
xor
jne
hlt
mov
or
ds
mov
push
es
insb
adc
stos
or
sbb
lods
imul
cltd
adc
fidivrs
mov
loope,pn
xchg
pushf
push
cltd
lock
lods
fimull
into
sub
lods
add
inc
pusha
push
push
popf
out
mov
test
outsb
in
scas
outsl
inc
push
sbb
xchg
adcb
fsubrl
inc
and
or
mov
or
lret
cmp
push
mov
out
sarl
jle
push
mov
and
pop
inc
enter
jbe
ljmp
add
dec
data16
es
inc
push
iret
push
hlt
adc
int3
ret
hlt
fs
addb
push
sub
jo
adc
lods
mov
and
and
jbe
push
push
mov
ljmp
jo
push
lret
jns
mov
xchg
jb
xchg
add
loope
jl
dec
out
jno
adc
ret
movsl
jo
mov
gs
notb
pop
push
data16
or
or
pop
or
sub
cwtl
sbb
add
test
jo
push
mov
mov
pushf
es
dec
xor
mov
gs
es
pop
or
sar
test
pop
popf
int3
push
shlb
lds
lea
daa
sbb
jp
push
jl
push
sbb
or
lcall
repnz
adc
push
push
xor
shlb
jbe
sbb
jo
dec
mov
sbb
jo
clc
icebp
add
cvtps2pd
xor
cmc
ljmp
rolb
je
push
lods
dec
in
mov
das
sbb
ret
hlt
hlt
jmp
dec
mov
adc
fisubl
lods
enter
mov
jae
add
ret
fmuls
loope
xchg
pop
push
sbb
push
inc
adc
add
or
js
data16
jp
ror
inc
lret
aaa
pop
mov
add
cli
push
bound
xor
cmp
clc
mov
mov
loop
pop
inc
or
aam
xchg
sbb
cld
push
dec
sbb
loope
incl
pmaddubsw
lock
rolb
popf
mov
push
pop
mov
int3
out
jmp
sub
or
pusha
and
lret
das
sbb
arpl
jbe
in
push
or
pop
mov
push
int3
sub
mov
add
mov
nop
push
lods
mov
adc
sbb
push
fs
adc
push
mov
mov
andb
adc
sbb
push
push
adc
inc
les
mov
mov
pop
push
add
cs
loope
sub
lock
sbb
lret
jle
shlb
repnz
loop
pop
sbb
push
inc
fmull
sbb
shl
dec
jo
data16
imul
pop
cmp
mov
hlt
xor
lods
xorl
das
cli
xchg
mov
mov
inc
mov
pop
shrb
add
fidivs
lods
add
lahf
adc
lea
jmp
clc
mov
sbbl
mov
cmp
cmp
push
sbb
add
xchg
les
jp
adc
cli
xchg
push
dec
inc
inc
imul
cltd
or
push
fucom
cmp
xchg
pop
sub
add
inc
mov
mov
incl
pop
cmp
xor
jge
out
lcall
jno
add
or
mov
pusha
and
pop
js
push
sub
in
les
pop
mov
jl
add
mov
pop
addb
sbb
cwtl
add
fs
in
push
adc
mov
inc
cwtl
pop
outsl
fsubr
push
bound
in
es
add
add
xor
and
and
jne
sbb
out
lock
sbb
push
mov
lret
sbb
int3
addb
fidivrs
add
hlt
scas
dec
js
inc
pop
or
xor
leave
mov
push
aam
sbb
adc
adc
leave
call
cld
addr16
xchg
and
mov
add
mov
popf
sub
ss
pop
jecxz
cmp
mov
sbb
dec
add
hlt
xchg
mov
pusha
je
push
push
aam
mov
cmp
cmp
out
sub
je
push
jo
jne
sub
mov
pushf
test
cs
mov
loope
bound
add
push
add
sub
cmp
push
in
jmp
cmpsl
mov
xchg
int3
cltd
je
pusha
jl
cmpsb
mov
and
sbb
adc
inc
jmp
ror
pushf
lock
add
lret
pop
dec
scas
xchg
divb
mov
fidivrl
dec
fstps
or
add
imul
xor
je
mov
cmc
or
inc
pop
push
jp
outsb
fadd
in
mov
sub
loope
out
mov
sbb
and
lds
pushf
add
inc
xchg
sbb
rolb
cld
cs
dec
pop
cltd
mov
add
dec
sub
xchg
sbb
xor
mov
notb
xchg
lret
outsl
lods
inc
add
push
push
rcll
ja
mov
add
sbb
stos
push
lock
cmp
push
push
sbb
or
mov
rclb
add
mov
outsb
loop
loope
jo
mov
lods
mov
loop
test
nop
sbb
hlt
or
insb
mov
xorb
outsl
bound
lret
xor
les
mov
xor
push
clc
inc
imul
data16
mov
adc
cwtl
aam
outsb
shlb
scas
mov
les
cmp
xor
les
add
out
jp
js
inc
fidivrl
inc
ret
mov
in
dec
push
stos
push
pushf
inc
sarb
insb
lock
ret
dec
cmp
popa
jecxz
arpl
mov
sub
les
into
or
xchg
mov
out
pusha
xor
xchg
xor
or
mov
arpl
jecxz
dec
dec
lret
out
cmp
lret
cld
or
cmp
mov
push
and
inc
andb
call
push
sbb
mov
push
dec
inc
xor
dec
adc
mov
sbb
jnp
add
cmp
fidivl
lods
int
add
dec
call
rclb
adc
or
pop
mov
mov
pop
clc
xchg
rclb
pop
push
jbe
test
sub
addr16
leave
or
jmp
loopne
and
call
pcmpeqw
rol
rcll
xor
mov
sbbb
push
flds
jo
sbb
idiv
xchg
test
rcr
or
sbb
mov
pop
fadds
mov
push
icebp
into
adc
aaa
into
push
ret
add
icebp
pop
mov
sbb
jmp
jmp
aam
push
fabs
pop
push
xchg
sbb
repnz
test
push
or
pusha
push
adc
loopew
sbb
push
add
or
and
xchg
push
push
imul
push
notb
sarb
pop
inc
data16
fs
mov
sbb
ss
sbb
xchg
and
xchg
pop
add
push
pop
mov
inc
ret
add
shrb
push
fdivrs
and
sbb
das
add
rcrb
ret
js
xor
lret
rolb
sbb
imul
sbb
push
andl
cmp
je
sub
loop
and
xchg
mov
sbb
insb
pop
lock
imul
mov
inc
add
outsb
dec
add
sbb
cmp
dec
ret
scas
add
pop
push
repnz
in
sbb
sbb
fidivrs
add
je
call
dec
or
fs
repz
cmp
mov
xor
jae
mov
sbb
jmp
sub
inc
xor
mov
pop
xor
mov
pop
xchg
add
sbbb
jo
out
xor
push
sbbl
push
loopne
mov
push
vpshufhw
push
pop
adc
mov
mov
and
xor
push
xchg
push
popa
pushf
or
sub
mov
push
rorb
push
sub
pop
adc
sub
sbb
popa
arpl
loopne
fmull
inc
pop
lods
pushf
mov
mov
add
dec
stc
inc
push
xor
sub
pop
ret
mov
fidivl
add
jno
push
enter
icebp
xor
repnz
or
sub
call
sub
and
arpl
ret
inc
loope
push
arpl
jp
movsb
testb
iret
mov
mov
nop
or
les
xor
mov
mov
add
mov
jl
xchg
push
or
mov
sbb
mov
or
pop
nop
sub
fs
ret
test
sbb
mov
push
mov
adc
ret
sub
adc
dec
outsb
cmp
js
or
cmpsb
ret
or
mov
movsb
mov
in
jl
es
pop
dec
mov
in
sbb
jbe
loop
dec
pop
lods
inc
ss
or
orl
push
loop
sbb
mov
xchg
test
mov
sbb
dec
arpl
hlt
lods
jp
bound
lods
dec
dec
inc
mov
into
jb
jp
cmp
rclb
jns
cmpb
ss
test
jns
cltd
ror
jle
sub
cmp
test
or
add
ljmp
pop
movsb
xchg
aam
aam
aam
fdivrs
push
fldl
shll
jmp
xchg
jge
cmc
xchg
outsb
sub
lods
dec
lea
and
outsl
pop
loop
mov
bound
mov
mov
dec
adc
shrb
aas
nop
push
sub
and
rcrb
add
cmpb
xchg
xchg
call
xchg
adc
mov
lock
inc
cmp
ret
pop
push
xor
or
sub
cmp
add
push
sbb
clc
mov
jo
and
pop
mov
mov
inc
add
enter
inc
inc
xor
mov
imul
xchg
xor
in
push
lods
jb
sbb
rol
xchg
cli
incl
movl
ret
outsb
fstl
jnp
iret
inc
sti
repz
in
push
add
add
dec
inc
loop
mov
adc
arpl
push
repnz
loope
sbb
out
mov
mov
push
es
push
sbb
xor
adcb
fistpl
sbb
and
push
mov
lock
test
sbb
xor
nop
inc
cmp
sbb
ds
cwtl
cmp
addr16
cmc
add
mov
in
test
ficompl
mov
sbb
xor
sub
or
test
xor
les
push
mov
nop
adc
mov
xchg
test
push
push
pop
addr16
rcr
lods
rcrl
xchg
ret
xchg
adc
dec
pushf
cmc
testb
out
sbbb
lcall
test
inc
push
cmp
loop
jp
or
lods
add
pop
and
xchg
in
dec
daa
shll
push
mov
imul
repnz
pop
inc
leave
push
mov
mov
cmp
test
pop
ret
adc
addb
js
outsb
adc
mov
ret
pop
sub
dec
loop
ret
xchg
dec
inc
jecxz
fs
cmp
cltd
jo
cmpb
jo
loopne
pop
inc
test
and
mov
adc
hlt
clc
or
loopne
jbe
es
xor
ljmp
xchg
push
jae
and
cltd
sbb
mov
add
sbb
in
scas
or
and
faddl
push
sbb
sbb
jo
mov
sub
or
cmp
add
loopne
adc
xchg
or
jp
dec
daa
pop
fsubrs
cmp
popa
data16
in
lea
sub
test
sbb
stos
dec
lods
cmp
fcmovnu
testb
into
fidivs
mov
push
xchg
ds
push
sbb
and
sub
insb
xor
in
and
cmp
sbb
addr16
fwait
loope
inc
mov
mov
movsl
ret
inc
sarb
loop
addl
loop
push
sbb
movsl
mov
fisubs
xorb
in
dec
adc
rcrb
sub
popf
inc
call
xor
adc
outsl
pop
mov
js
or
dec
addr16
nop
in
xlat
movsb
dec
int
ret
sbb
fcmovnu
push
xor
push
mov
ret
fcompl
inc
lea
dec
rcl
fldcw
sub
es
and
inc
lods
or
mov
push
inc
inc
js
xchg
sahf
mov
rcl
cmp
or
push
lcall
or
popa
jmp
ret
loopne
xabort
fiaddl
rorl
adc
fildl
inc
loop
push
mov
mov
mov
mov
movsl
rorb
push
dec
inc
pop
fdivrl
fcoms
lock
xchg
dec
inc
cltd
clc
loop
sbb
ljmp
cmp
js
bnd
xchg
inc
andb
shlb
lret
addr16
outsl
or
pop
cmpsb
push
mov
pop
pusha
insb
rorl
pop
or
sub
push
clc
sbb
mov
add
rcl
sbb
push
jb
shlb
ja
xchg
dec
movsl
inc
jp
test
roll
addb
enter
dec
or
les
in
push
popf
aaa
pop
pop
xor
sar
clc
xorl
inc
adc
addl
lret
jnp
dec
dec
arpl
mov
cmp
sbb
and
fwait
jmp
push
add
decb
aaa
cmpl
js
call
jl
hlt
xorb
push
sub
test
fld
inc
sbb
lods
push
sbb
sbb
loopne
test
clc
push
inc
sbbb
add
mov
ret
es
test
xor
mov
sbb
test
aad
jno
stos
add
enter
lret
inc
add
das
or
adc
shlb
or
arpl
rorl
inc
sub
cmc
adc
fcompl
add
mov
mov
jb
lret
cmp
adc
push
jne
ficoms
mov
xor
sbb
hlt
xor
hlt
jns
add
jns
pop
adc
test
pop
in
cmp
add
add
sbb
std
dec
push
imul
rol
xor
test
and
xchg
xor
and
xor
xchg
addb
shrl
mov
xor
bound
xchg
add
and
lock
xor
add
pop
add
iret
jo
data16
dec
mull
xchg
mov
push
adc
mov
hlt
nop
push
test
jae
mov
pop
fmuls
leave
aaa
dec
sub
push
mov
jecxz
xchg
call
gs
and
xchg
xor
stos
sbb
fstpl
std
stc
out
xor
loopne
inc
cltd
xchg
daa
mov
clc
sub
xchg
pop
push
iret
clc
push
jmp
pop
adc
mov
sub
xor
mov
cwtl
insb
inc
mov
cmpsl
popa
dec
pusha
dec
jnp
sub
pop
mov
leave
or
mov
rorl
push
fcompl
sahf
push
out
xor
add
fildll
adc
lods
push
inc
sub
pop
pop
sub
ficoml
lea
mov
iret
push
js
dec
addr16
popa
sbb
jg
outsl
xchg
and
dec
sub
sub
in
dec
add
stos
out
and
ret
cli
dec
cld
mov
hlt
cld
xchg
adc
imul
mov
sub
test
xchg
inc
lds
pop
loopne
xchg
les
scas
mov
addb
insl
jmp
ljmp
inc
dec
test
aaa
add
sar
int
fildl
or
addb
jg
pop
pop
mov
adc
lods
inc
add
aad
fcmovbe
cmp
popf
jo
imul
push
sbb
sub
push
inc
loopne
fldz
or
dec
inc
sbb
sub
dec
add
pushf
inc
js
adc
cmp
mov
cwtl
and
sub
insb
jl
and
push
imul
inc
data16
popf
push
pusha
and
rcrb
mov
mov
or
and
adc
test
shlb
andb
iret
dec
dec
fcoms
and
scas
cmp
inc
enter
call
jl
push
xchg
jp
dec
and
jno
movsb
xchg
loopne
adc
orb
xchg
sub
push
data16
lock
adc
xchg
in
outsb
cmpsb
lret
rolb
sbb
adc
movb
pop
test
sub
sbb
adc
cmp
add
jno
sbb
xchg
test
into
push
repnz
or
adc
stos
fs
fisttpll
xchg
xor
sbb
xor
push
ret
lock
push
add
add
push
inc
mov
xor
push
adc
sbb
mov
rorl
pop
shrb
hlt
out
sub
roll
pusha
push
jo
or
mov
sbb
ja
and
or
rcrl
pop
stos
scas
or
inc
ret
add
pop
lret
fcom
push
sbb
adcb
xchg
mov
aam
dec
test
ret
inc
cli
mov
add
dec
shlb
add
or
adc
push
cld
dec
popa
add
sbb
xorl
js
push
addr16
cmp
mov
aaa
cmpsb
dec
jae
or
lock
test
movb
out
pop
push
loop
cli
lret
fcomps
sbb
fcomps
addr16
add
enter
scas
cmp
xor
ret
mov
mov
xchg
xor
sbb
aam
rol
inc
addr16
test
inc
pop
mov
lods
pusha
add
stos
mov
pop
xchg
lock
mov
pop
push
das
mov
and
and
and
xchg
xchg
ds
pop
xor
mov
mov
movl
push
push
nop
in
in
mov
sahf
dec
push
pop
unpcklps
mov
sub
mov
mov
loopne
dec
mov
ret
int3
pop
test
idivb
add
dec
sbb
fcompl
fcomps
xor
mov
lcall
xchg
inc
into
pop
mov
pop
inc
in
andb
mov
test
mov
push
add
clc
adc
or
jbe
sbb
sub
sbb
xchg
xor
or
mov
js
mov
pop
push
or
jo
lret
mov
popa
adc
and
mov
sahf
and
loopne
inc
mov
mov
push
out
cmp
rcll
xchg
cs
dec
mov
loop
dec
dec
mov
add
pop
outsb
cmp
out
mov
pop
dec
int3
rcl
mov
or
push
mov
xchg
out
mov
movsb
les
dec
mov
add
fs
test
in
add
jp
pusha
sub
pop
lret
pushf
js
push
subb
pop
or
lock
adc
xchg
sarb
aas
fs
ret
nop
movsb
inc
popf
in
xor
ret
jno
nop
scas
cmp
adc
cwtl
test
lcall
cs
xor
xlat
fwait
xor
jno
mov
mov
ret
push
inc
and
or
rclb
aaa
mov
fadds
push
incb
xor
and
sbb
movsb
mov
test
pop
sbb
fimull
push
sub
push
push
addb
push
mov
mov
jo
mov
sub
add
loop
in
in
mov
mov
xchg
in
push
mov
mov
or
push
mov
jo
leave
bound
cmpb
push
push
popf
inc
testb
inc
sbb
xchg
lods
notb
movsb
gs
sbb
pop
push
sub
mov
mov
sbb
mov
dec
mov
cmp
into
jne
movsl
icebp
mov
sahf
add
adc
mov
push
and
sahf
xor
cmp
xchg
and
mov
rclb
enter
push
out
sahf
sub
xor
push
and
jle
or
rcr
pop
or
push
adc
js
adc
addb
fistl
call
stos
adc
jo
inc
fldenv
push
ds
adc
mov
and
ds
push
leave
or
or
dec
imul
add
or
insb
pusha
mov
mov
mov
sub
xor
push
nop
adcl
xchg
lret
cs
insb
push
movsb
ror
les
sbb
lock
xor
jb
sbbb
mov
ss
xchg
or
add
das
xchg
lods
sbb
imul
movsb
sbb
mov
je
clc
dec
lahf
shl
popa
inc
sbbb
cwtl
fsubs
pop
push
jbe
pusha
push
lret
jp
mov
int3
dec
and
push
rol
jl
jo
leave
pop
xchg
mov
movsl
mov
mov
sub
jmp
add
lret
mov
arpl
fs
sbbl
xchg
push
xchg
mov
scas
add
gs
cli
shrb
cltd
or
inc
xchg
cwtl
dec
jmp
enter
jecxz
xchg
mov
sub
push
inc
call
daa
dec
xchg
dec
hlt
xchg
xchg
dec
inc
dec
test
int3
enter
cmp
outsb
sbb
xchg
mov
adc
rolb
data16
js
push
and
push
mov
lods
in
insl
call
xor
add
sbb
insb
popa
je
jbe
in
shlb
lock
xor
push
jo
push
xchg
test
add
mov
or
clc
mov
fwait
hlt
inc
insb
cmpsb
das
adc
sub
inc
negl
stos
icebp
lret
add
xor
add
mov
clc
test
lods
or
lock
clc
lods
fwait
aas
sbb
sbb
test
or
mov
les
mov
in
flds
ss
lret
mov
jecxz
and
add
aas
or
je
in
mov
add
aas
nop
ret
testl
dec
fisttpll
je
jno
stc
cld
sbb
pop
and
inc
movsl
fstpl
adc
or
sbb
mov
push
jo
hlt
mov
add
push
sub
add
jmp
and
adc
jecxz
add
xchg
and
or
mov
movsb
xor
outsb
push
cmp
int3
cmpsb
jg
imul
inc
or
add
sbb
out
loope
paddsb
push
mov
lret
xchg
pop
jl
sbb
daa
add
mov
mov
cmp
out
addr16
inc
mov
adc
and
pop
fs
push
mov
mov
cmpsb
add
push
subb
clc
pop
pushf
enter
or
movsl
xor
xor
pusha
xor
lea
rcll
push
loopne
loop
pop
call
and
les
ljmp
lods
punpcklwd
push
icebp
test
pop
nop
add
jb
cmpsb
and
xchg
xchg
call
testl
mov
rorl
or
add
repz
add
addl
lock
xor
dec
sbb
in
xorb
inc
jmp
xchg
out
loope
orb
pop
push
loopne
int
out
cmp
jecxz
xchg
pop
sbb
push
jl
dec
cwtl
loope
jmp
addr16
push
les
push
xor
fsubl
mov
cmp
lcall
sbb
jo
push
jp
call
data16
sbb
cmpsb
rcll
pusha
mov
add
sub
and
mov
lea
je
and
inc
jb
into
loop
mov
jae
ljmp
shlb
rolb
mov
shll
xorl
mov
cmp
lods
xor
push
dec
aam
pop
xchg
jne
inc
or
andb
mov
jle
daa
inc
daa
mov
rorb
add
loopne
mov
jp
test
orl
sub
imul
mov
inc
mov
or
xchg
inc
js
bound
or
inc
popf
popa
or
fiaddl
data16
cmp
adc
jb
push
and
cmpsl
into
sbb
adc
mov
sub
add
sbb
cmp
xchg
ljmp
insb
movsb
ret
rolb
dec
lcall
cmpb
cwtl
fidivs
xor
ljmp
test
mov
ljmp
xchg
pop
push
gs
pop
xor
int3
inc
andb
repnz
je
out
xchg
mov
loop
sahf
out
add
mov
dec
sub
adc
sahf
out
and
add
cmp
adc
sub
les
pop
pusha
loopne
and
cld
enter
push
mov
xchg
call
dec
test
mov
jecxz
push
in
sbb
cltd
inc
and
cmpsb
push
outsb
xor
add
mov
push
loopne
lea
ss
dec
mov
aaa
loopne
test
sbb
cmp
xchg
jl
inc
and
push
aam
pushf
sbb
inc
sub
out
dec
sub
js
cmpsb
loopne
dec
mov
mov
addl
mov
pop
cmp
test
sbb
pop
bound
lea
add
rolb
adc
mov
mov
mov
xchg
imul
ljmp
je
xor
mov
mov
add
mov
xchg
xor
add
lock
test
xchg
in
dec
insb
jne
lret
push
int3
inc
lock
ret
inc
insb
xor
xchg
mov
xor
ret
ret
push
je
or
mov
add
dec
popa
add
ljmp
popa
movb
mov
cwtd
js
sbb
xchg
jp
mov
add
jnp
sbb
mov
jno
setp
mov
jnp
lret
pusha
inc
aam
add
bound
incl
dec
mov
test
pop
sub
ret
or
add
jno
mov
sub
scas
push
or
loope
shr
push
fsubl
lret
or
mov
fisttps
stc
outsl
jge
sub
fsub
inc
add
cmc
xchg
out
sbbl
or
adc
or
pop
add
sbb
inc
ret
cli
adc
outsl
jge
dec
or
pushf
lods
and
mov
dec
adc
repz
sub
in
nop
adc
lods
xor
or
lret
xor
cmp
or
mov
cld
xor
jno
dec
adc
push
sbb
shrb
cmp
shr
add
lsl
js
stc
sti
aaa
rcrb
sub
lods
out
mov
fisubrl
sub
orb
pop
js
loop
or
shl
dec
fidivs
sbb
out
fsubrl
rorb
test
call
ror
dec
adc
push
iret
int3
lcall
sbb
cmpl
rcrb
and
ret
jns
fmul
xchg
or
aam
movsb
arpl
fsubrl
adc
loopne
push
andb
loopne
daa
sbb
lock
push
jmp
daa
in
insb
enter
data16
push
out
dec
or
xlat
mov
leave
mov
add
rcl
cmpsl
mov
xchg
jo
mov
cs
add
testb
int3
push
pushf
jb
out
mov
jo
sub
mov
movb
sub
aad
add
sbb
or
cmp
xor
insb
sub
push
sub
mov
out
divw
ffree
adc
add
or
xchg
inc
adc
in
mov
mov
je
xchg
xor
push
pop
data16
divb
mov
push
addl
arpl
lock
push
insb
orb
mov
popa
and
fcomps
jo
cmpsb
mov
outsb
mov
mov
cld
lcall
ret
xchg
sbb
and
push
movsl
mov
outsl
es
mov
clc
pusha
mov
ret
pop
xchg
and
mov
pop
lock
cli
sbb
push
mov
cmp
mov
add
inc
rolb
pop
dec
data16
fadds
push
mov
mov
or
or
or
loop
sub
and
loopne
pop
loopne
insb
push
ret
lcall
arpl
xchg
fs
adc
mull
mov
dec
mov
inc
inc
mov
andb
cmp
cld
or
gs
add
add
fistl
into
lock
pop
jmp
adc
loopne
mov
cmp
jp
and
push
call
add
push
inc
mov
inc
push
popfw
jp
fdivl
mov
add
movsb
mov
es
lret
or
arpl
lods
adc
inc
popf
xor
enter
lahf
addr16
add
mov
inc
popf
or
push
mov
and
sbb
lds
and
inc
fdivl
pop
loopne
sub
adc
inc
push
cs
push
mov
lods
cwtl
sub
ret
dec
sub
jo
shlb
pusha
or
mov
cmp
outsb
shlb
loop
or
sbb
xor
outsb
mov
mov
les
paddsb
fistpll
ret
stos
xor
fdivl
or
movsb
cli
enter
bound
xchg
loope
pop
cld
add
inc
ljmp
add
push
jb
jne
inc
lea
cmp
int3
push
cs
sub
call
test
ficoms
cmp
xchg
mov
out
ret
push
and
loop
xor
mov
mov
adc
lock
xchg
and
jb
shr
dec
jmp
or
push
mov
and
push
ds
or
pop
sbb
jg
push
jmp
cwtl
loope
insb
or
aaa
outsl
fstl
and
lock
add
jnp
fisubs
add
or
stc
add
add
leave
jl
inc
mov
inc
shrb
gs
cwtl
stos
cmp
inc
inc
es
inc
adc
add
or
incl
hlt
inc
sub
aas
test
fmuls
lock
fsts
cld
mov
ficoms
popa
and
inc
sbb
or
and
in
adc
or
pop
or
hlt
dec
rcr
mov
push
mov
adc
cmp
sub
hlt
sub
or
jns
leave
push
pop
push
jge
in
or
es
lcall
rcl
rolb
jmp
sti
adc
adc
pop
and
or
and
cld
or
jnp
bound
dec
cmp
fisttps
xor
notb
and
xchg
add
jecxz
mov
xchg
add
daa
xor
jb
gs
mov
mov
and
pop
push
pop
jmp
pusha
pop
push
inc
loopne
cmpsb
lock
xchg
shrb
rolb
jo
xor
dec
xor
in
inc
add
lods
inc
mov
sbbl
inc
xchg
cltd
add
incb
add
pop
mov
mov
sbb
loopne
sub
arpl
inc
dec
mov
rcll
xor
add
inc
inc
sbb
outsb
cmp
lock
push
xor
adc
stc
mov
push
xchg
ret
pusha
arpl
es
fdivrp
mov
ss
out
add
outsl
dec
clc
orb
in
call
test
mov
or
imul
add
in
mov
pop
addr16
xchg
inc
das
and
nop
pop
popa
insb
call
mov
or
sbb
inc
sbbb
dec
lods
cmpb
xchg
inc
in
add
sbb
jbe
into
sbbb
sbb
rcrb
and
cs
fcmovnbe
or
and
xchg
mov
or
push
lret
je
and
rorb
lret
loop
cmpsb
pushf
add
clc
movsl
cmc
xor
mov
idivb
push
pusha
xchg
call
push
clc
cmp
jb
sbb
adc
sub
mov
int3
into
aam
push
test
add
pop
cltd
sbb
jno
inc
outsl
mov
xchg
add
adc
cmpsb
add
cmp
sub
sub
dec
pop
cmp
dec
xchg
or
adc
sub
outsb
xor
fsubrl
xor
dec
mov
jp
pop
or
in
orl
pop
lods
enter
pop
adcb
fiadds
add
scas
and
xor
push
cmp
aam
cmp
faddp
lcall
sbb
test
sub
lock
inc
push
je
mov
test
xor
mov
int3
or
jae,pn
in
movsb
inc
das
and
mov
js
jp
push
cmp
pop
pop
negb
pushf
rcrb
rcll
loope
dec
adc
loope
or
out
imul
out
mov
sbb
adc
mov
and
mov
loope
or
cmp
jle
xchg
jmp
cmp
aam
insl
mov
push
les
or
and
dec
shlb
adcb
and
adc
sbbb
stos
xchg
xor
sub
sbb
test
push
xchg
mov
flds
adcl
push
ret
adc
pop
xchg
cmp
sbb
js
ret
inc
inc
cmp
hlt
inc
imul
mov
testb
loop
cmc
dec
dec
mov
mov
jbe
enter
jno
pushf
movsb
outsb
cmp
lock
outsb
mov
stos
clc
push
dec
adc
outsb
sbb
and
mov
or
mov
sbb
hlt
lcall
push
inc
shlb
mov
shrb
in
ja
pushf
hlt
call
pop
dec
and
in
cmpsb
mov
scas
mov
push
lods
push
push
add
add
jo
xor
cmpsl
aam
pop
fdivrs
and
cmovp
xchg
pushf
mov
pop
jo
push
inc
mov
cmpsb
lea
and
dec
push
outsb
test
es
xchg
ds
inc
loopne
pop
xor
cmpsb
cmpsb
shrl
and
fs
xchg
add
xlat
push
aam
fcoml
sbb
xchg
sbb
cmp
pop
cmp
rorl
loop
adc
cmp
cmp
call
mov
xor
sbb
cmp
sar
dec
out
dec
call
rolb
cmp
test
mov
stos
adc
arpl
xchg
fildl
repz
mov
xor
lret
sbb
push
mov
push
movsl
orb
add
pushf
cmpl
push
lret
shlb
cld
mov
mov
or
adc
pop
pop
or
pop
jecxz
xchg
mov
jnp
xchg
xor
cli
aad
mov
push
je
inc
mov
movsl
rorl
or
cmp
jp
pop
sub
rorb
adcl
dec
inc
call
movsb
xchg
je
cmp
sbb
sbb
pop
loopne
cmp
sahf
fdivrl
movsb
xchg
sbb
dec
cwtl
in
or
loop
xchg
fs
das
imul
mov
push
mov
enter
rsm
lret
xchg
lea
mov
xchg
sahf
push
xchg
jns
or
mov
sahf
jp
push
jle
mov
pop
mov
inc
cmp
inc
insb
adc
cmp
adc
loop
adc
sub
sbb
and
push
mov
mov
adc
xor
xchg
xchg
jp
pop
adc
mov
jb
add
jb
xchg
mov
stos
push
adc
sbb
inc
shll
mov
push
pop
sbb
dec
sub
mov
sbb
jb
xor
aaa
js
sahf
nop
jo
pushf
insb
test
les
ss
sbb
fs
pop
cmp
push
or
pusha
andl
clc
pop
xchg
sbb
inc
mov
jmp
mov
pop
push
fisubrl
sub
push
and
xlat
jmp
shlb
push
sbbb
and
sbb
mov
jb
pop
sarb
cli
mov
je
sbb
sbb
nop
fcmovb
add
movsb
inc
imul
inc
mov
xchg
rcll
fdivr
cmc
mov
int3
push
push
cmp
lea
or
mov
push
pop
cs
pusha
push
cmpsb
incl
jae
cmp
cli
std
add
leave
fcom
add
outsb
mov
xchg
push
adc
fiadds
dec
mov
mov
dec
arpl
ljmp
or
pushf
test
xlat
xchg
lock
daa
cmp
test
test
adc
popa
cs
ljmp
push
adc
cltd
add
mov
mov
add
pusha
shl
es
xor
cmp
mov
push
loopne
xchg
je
and
mov
in
je
hlt
jp
lea
vunpcklps
sub
ljmp
adc
xor
add
insb
pop
nop
and
adc
pushf
mov
subl
adcb
enter
das
les
lcall
or
int3
or
push
mov
dec
dec
sub
push
or
cmp
xchg
lock
adcb
adc
or
in
jl
inc
faddl
push
in
sahf
adc
pop
rcrl
mov
sbb
and
sub
in
leave
shrb
pop
inc
or
fdivrs
jle
dec
inc
add
mov
or
xchg
jle
push
call
leave
inc
ret
cmp
ror
loop
mov
dec
sbb
mov
popa
cmc
push
in
jge
rolb
xchg
or
cmp
push
sub
shlb
imul
loopne
test
jo
cmpb
jp
cwtl
lcall
inc
lea
cmp
cmpsl
mov
inc
das
push
fcoms
aam
es
ret
je
aas
ret
cmp
mov
loopne
sbb
pop
in
out
push
stos
mov
mov
add
sub
imul
ds
stos
lcall
ljmp
mov
cmp
lret
pusha
into
jbe
cli
add
loopne
adc
add
or
xor
pop
or
inc
push
xchg
add
out
adc
mov
mov
and
insb
ljmp
cwtl
inc
nop
mov
cmp
and
xor
cmp
xchg
mov
mov
pop
aaa
add
or
dec
inc
lods
sbb
fimull
xor
dec
roll
es
or
test
test
sbb
sub
cmpsl
xchg
pop
or
test
mov
pushf
pop
pop
xor
fimull
add
das
push
and
fdivrl
and
psrld
aad
mov
inc
repnz
xchg
sbb
mov
sub
cmp
fstpl
movb
and
xchg
jne
out
cmpl
test
leave
int3
jo
inc
sbb
scas
adc
cmp
icebp
pop
mov
aaa
decl
mov
test
xlat
cmc
mov
sbb
cmc
rorl
adc
fimuls
loopne
orb
fcomp
mov
jl
arpl
xchg
mov
add
inc
sbb
call
out
ljmp
cmp
cmp
sbb
jo
call
xor
ret
mov
push
sahf
cmp
adc
mov
arpl
push
xchg
mov
add
adc
sbb
or
outsl
loopne
aam
push
outsl
pop
sbb
dec
leave
adc
loopne
cs
pop
cltd
orb
sub
loope
cltd
or
jp
xor
fs
cmpsb
xor
aam
hlt
lock
push
dec
test
jl
in
xor
push
cmp
ret
pusha
js
movsb
hlt
lea
inc
sbb
enter
sbb
or
sahf
pop
fstps
push
aas
push
mov
push
adc
inc
sbb
lods
adc
xor
push
mov
mov
lret
push
aam
and
je
add
sub
lret
lea
dec
xchg
mov
xor
test
pusha
push
sub
rorl
or
xor
inc
je
mov
push
add
andl
fs
sbb
dec
or
loop
inc
cmpsl
les
scas
push
call
rclb
pushf
sub
jbe
xor
add
clc
cs
adcb
push
sub
and
lods
adcb
add
jbe
lret
inc
xor
andl
sub
ret
nop
rolb
xor
and
push
inc
fnstcw
ret
mov
cmc
and
adc
jo
and
movsb
cmc
push
les
push
and
in
out
and
pop
mov
adc
xchg
push
cmpsl
xchg
outsb
pop
bound
push
add
jo
mov
push
outsb
and
push
pop
push
sbb
out
sahf
xor
pushf
mov
jo
adc
push
lock
inc
andl
lods
ds
push
sub
call
jo
hlt
pusha
xor
lret
and
jb
or
adc
lods
xor
pop
lcall
or
lsl
sub
mov
sub
or
popf
insb
pop
push
pop
or
cmp
sub
clc
mov
movsb
into
sbbb
mov
sbb
lods
mov
pop
imul
lea
rorb
mov
xchg
add
jp
cmp
push
pop
cli
push
ljmp
mov
push
jbe
out
outsb
hlt
and
push
repnz
inc
mov
sahf
movsb
pop
add
fsubs
push
mov
lret
in
or
xchg
sbbb
je
in
add
arpl
jb
dec
sbb
fs
mov
dec
pop
das
mov
sahf
addb
js
inc
outsb
scas
and
xor
mov
imul
sti
sahf
adc
pop
mov
xchg
cmc
js
or
push
pop
pop
sahf
outsl
pusha
pop
pushf
mov
dec
dec
mov
into
cltd
cmp
pop
rcrb
sbb
sub
cmp
movsb
les
dec
mov
xchg
test
xor
cmpl
xchg
dec
negb
int3
xchg
push
cmpsl
andb
add
cwtl
or
or
jo
sub
nop
and
fs
xchg
sbb
decb
add
rclb
mov
mov
pop
lods
cmc
lock
pop
mov
xchg
add
icebp
xchg
pop
adc
mov
or
dec
inc
adc
in
push
add
push
or
add
cmp
push
xor
rorb
dec
dec
dec
jo
inc
mov
dec
pop
ss
pop
or
flds
shrb
mov
adc
in
inc
lret
xchg
pop
cltd
aad
xchg
cmp
and
cmp
es
sbb
mov
popa
aam
xor
mov
lea
inc
addr16
lods
lds
push
push
mov
and
adc
bound
rorb
pop
xchg
dec
loopne
and
jecxz
cld
pop
and
sbb
ret
ret
or
xor
iret
outsb
mov
adc
add
xchg
xchg
pop
push
inc
dec
lret
mov
testb
mov
sbb
mov
les
fimuls
cmp
pop
push
ss
mov
sub
jl
imul
test
sbb
lret
rorb
mov
and
jp
arpl
or
xorb
andb
loope
dec
add
lock
xchg
into
xor
mov
scas
jno
xor
enter
jmp
sub
fwait
clc
cltd
mov
cmc
adc
and
or
push
mov
jne
and
jp
imul
lods
sub
rolb
lea
in
movsb
bound
movsl
aad
enter
sbb
or
addl
mov
cmp
pop
adc
add
dec
adc
imul
imul
ret
and
hlt
loope
sub
xor
pop
mov
and
int3
imul
ljmp
outsb
cmp
xchg
adc
cmp
push
ja
push
inc
jo
sub
lret
js
adc
test
sub
pusha
hlt
insl
rorl
xchg
cltd
cwtl
insb
ss
data16
jb
xchg
dec
add
inc
mov
add
stos
jne
push
and
jnp
clc
jb
mov
rorb
or
enter
pop
mov
inc
sbb
ret
and
jmp
push
push
fidivs
jo
aaa
or
mov
adc
mov
int3
pop
push
in
popa
sub
mov
mov
dec
dec
sub
push
pop
popf
stos
nop
add
mov
pop
jp
xlat
das
inc
add
cmpsb
dec
loop
pusha
punpcklbw
push
mov
popf
imul
les
push
add
jo
aam
fst
sub
imul
aaa
jmp
outsb
jae
or
pusha
or
sbb
cli
mov
inc
push
mov
sbb
pop
js
ret
add
ret
popa
ret
lods
and
pop
mov
add
adc
push
nop
aam
fs
or
jae
or
in
cmpsb
sub
jp
es
ss
add
mov
xor
xchg
cmpsb
scas
jno
mov
xchg
in
jp
movsb
inc
xchg
and
out
mov
fcoms
das
or
hlt
lods
mov
pop
push
arpl
xchg
cli
mov
cli
in
push
cwtl
or
mov
add
pop
sbb
add
xchg
pop
mov
xchg
test
rclb
mov
leave
jp
cmp
add
dec
loopne
loop
lods
add
sbb
or
cs
outsb
xchg
inc
bound
lret
push
sub
outsb
mov
out
lret
mov
jmp
mov
outsb
outsb
or
test
inc
sub
out
into
leave
mov
cmpsb
inc
aad
cmp
xor
nop
outsl
add
adc
hlt
xchg
test
inc
cmp
inc
testl
lret
stos
xchg
xchg
loop
add
xchg
push
inc
cmpsl
adc
jecxz
mov
and
ret
enter
and
and
jns
pop
sbb
xchg
pop
add
or
popf
dec
ss
or
mov
das
dec
jbe
nop
mov
ljmp
or
out
sbb
loope
stos
or
jp
imul
lods
xor
shlb
imul
test
js
paddq
dec
loopne
push
outsb
into
push
out
mov
pop
push
adc
cld
jo
jns
jb
lea
or
jp
bound
sahf
mov
mov
loop
ljmp
andb
jo
hlt
inc
or
mov
xor
jno
cmp
rclb
mov
nop
jl
pop
add
add
sbb
scas
xchg
sbb
add
stos
mov
sbb
hlt
and
ret
jb
xor
jecxz
adc
adc
icebp
inc
or
sub
bound
test
mov
ret
xchg
mov
movsb
add
mov
nop
dec
inc
popf
add
add
ret
push
sbb
ljmp
mov
aam
and
addb
and
push
fsubrs
pusha
mov
cmc
xor
mov
cmp
cmpsl
sbb
lret
ret
push
jbe
mov
cmp
in
sbb
sbbb
sbb
or
mov
inc
mov
lds
push
jg
fidivl
sbb
fsts
and
fiaddl
jo
push
cmpsl
arpl
sbb
pop
cmp
pop
or
lods
cmp
push
loop
dec
das
ret
xor
cmp
xor
mov
sbb
addb
mov
sbb
or
insb
sub
ficoms
mov
aaa
push
aad
daa
outsl
jns
jno
addb
insb
cli
mov
xor
pop
sub
add
mov
je
enter
mov
pop
call
inc
sbb
push
jecxz
push
popa
loope
adc
add
test
clc
adc
mov
sub
pop
cmpsl
pop
xor
mov
mov
shlb
fldenv
adc
jmp
data16
or
cmp
adc
push
ljmp
insb
add
call
fildl
shrl
push
les
cmp
popa
addr16
fcmovne
xchg
ret
in
add
pop
xchg
jmp
inc
push
ret
xchg
stos
lret
xor
js
arpl
lret
ret
add
fldenv
mov
pop
or
or
fcomp
call
or
xchg
fsubrs
xchg
and
pop
dec
mov
ret
add
mov
ds
inc
cmpsb
push
push
inc
clc
jmp
xchg
rcrl
add
push
sub
add
sub
ret
in
test
or
mov
cmp
mov
aam
cmpsb
loop
rol
sbb
cli
push
cmp
inc
ljmp
repnz
movb
xchg
dec
mov
icebp
adc
sub
in
loop
dec
sarb
clc
or
xchg
or
adc
dec
jo
jp
add
fdivl
add
push
pop
aaa
gs
ljmp
adc
and
xchg
jl
call
adc
inc
and
xchg
pop
dec
orb
mov
aaa
subb
and
add
sbb
add
mov
ret
in
fcoml
push
xor
rcl
fldenv
push
push
mov
ficoms
add
sbb
dec
fnstcw
adc
and
add
inc
pop
xchg
xor
fimuls
mov
add
xchg
sbbb
cld
sub
aad
pop
inc
add
cmp
mov
fsubrs
ret
movb
push
sub
fidivrs
mov
jo
jbe
inc
enter
adc
adc
sub
xchg
or
xchg
sub
test
repnz
icebp
aam
add
adc
mov
cs
adc
aad
push
xor
cmp
add
push
xchg
mov
and
fidivrl
pushf
mov
jo
pop
xor
js
sahf
adc
mov
leave
sbb
ss
lock
xor
aam
cmp
and
ret
sbb
inc
dec
dec
add
pop
jo
adc
fadd
outsb
pop
clc
add
es
in
add
mov
sub
jo
sbb
inc
test
testb
adc
ror
mov
cmpsl
and
jnp
adc
cmp
loop
inc
mov
mov
repnz
mov
xchg
ficoms
sub
xchg
ret
ss
and
push
jb
lret
xchg
lock
or
mov
push
xor
inc
stc
xorb
add
loop
mov
fsubl
mov
cmpl
sub
dec
lea
xchg
jne
imul
mov
dec
xchg
test
mov
xchg
repnz
mov
js
rcrb
rorl
les
pusha
push
cwtl
or
add
ficoml
jecxz
xchg
clc
jb
ds
push
mov
or
fimull
and
sbb
insb
inc
sub
mov
sbb
sbb
orl
loopne
jle
mov
or
xor
mov
shl
adc
lock
nop
adc
and
push
ror
test
imul
sbb
fidivrl
ss
adc
ret
loopne
push
hlt
sbb
loopne
test
cmp
push
or
push
jp
mov
addb
cmp
dec
pop
xor
data16
add
sub
inc
test
push
and
arpl
adc
jp
bswap
into
mov
add
cmp
andl
inc
loope
pushf
sahf
fwait
dec
adc
sahf
mov
imul
stos
xchg
mov
xchg
xorb
addr16
push
sbb
aad
or
sbb
pushf
and
cwtl
or
pop
pop
xchg
ret
adc
arpl
sarb
push
push
push
dec
lret
lcallw
push
movb
push
sbb
lods
push
mov
xor
jmp
test
ljmp
pop
pop
leave
or
scas
or
or
sbb
cmp
or
sbb
je
in
cmp
insb
xchg
mov
xor
test
push
lods
insb
test
imul
and
mov
or
andb
pop
mov
pushf
adc
movsb
push
jbe
add
sbbb
dec
add
sbbb
loopne
xorl
pushf
inc
pusha
and
lds
aaa
add
push
hlt
pop
pop
cmp
add
pop
dec
mov
push
dec
out
push
mov
pop
mov
xor
or
jmp
or
enter
jbe
add
xchg
subb
xor
int3
jp
inc
lods
sbb
js
dec
xchg
data16
rolb
movsb
or
loopne
andl
pushf
rcl
inc
lret
ffree
ret
push
insb
sub
shr
test
scas
dec
outsl
fsub
movsb
push
sbb
fwait
push
mov
lock
sahf
dec
mov
das
lock
or
dec
and
dec
inc
push
push
pusha
and
or
cmpl
inc
xchg
pop
ret
mov
faddp
lret
inc
cs
add
add
pop
and
or
cltd
sbb
out
push
mov
pop
or
pushf
fs
pushf
jb
inc
sbb
or
inc
test
pop
sub
into
xchg
and
imulb
xchg
adc
inc
int3
clc
je
ret
xchg
xchg
stos
ds
lods
dec
inc
lea
scas
push
dec
adc
adc
dec
jo
or
push
orb
cmpsb
sbb
lods
xor
inc
or
xor
mov
jo
adc
sbb
cmp
and
cmp
pusha
or
inc
xchg
outsb
fcomps
nop
pop
pop
lods
sub
push
mov
adc
and
push
aam
push
ret
dec
mov
aam
aam
ret
push
pop
sbb
nop
pop
lcall
aam
sahf
xor
lock
add
ficoms
add
mov
jp
lods
loop
subb
add
push
addr16
and
cld
fwait
pushf
mov
hlt
push
jbe
aad
push
or
fsubrl
sbb
mov
testl
xor
mov
jp
dec
xorl
and
aam
rolb
mov
clc
and
das
jp
call
hlt
push
aas
pop
outsl
dec
fs
hlt
xchg
int3
xchg
sti
sbb
call
add
test
inc
jno
sbb
inc
adc
adc
mov
inc
int
mov
ss
pop
rcrb
or
jbe
test
popa
sbb
or
lcall
add
jb
sub
push
mov
xchg
sbbb
push
or
pusha
icebp
jg
mov
int
mov
mov
insb
sub
inc
imul
data16
xorb
sahf
mov
in
xchg
repnz
rolb
mov
test
sbb
test
mov
or
push
fdivl
xor
loopne
xor
xchg
inc
inc
add
or
inc
and
es
loope
out
cmp
mov
cltd
test
xor
sub
mov
scas
sub
sbb
cmpsl
js
mov
sbb
les
adc
add
push
or
stos
fdivs
mov
sbb
loop
adcb
mov
loopne
or
pop
outsb
pusha
dec
mov
pop
mov
ja
test
fwait
mov
pusha
or
sub
or
mov
jge
push
jp
pop
fisttpll
xorl
lret
js
push
adc
or
bound
aaa
xor
ret
js
imul
or
loopne
push
test
inc
cltd
and
sbb
hlt
jecxz
daa
jns
dec
jecxz
loopne
js
or
push
rcrb
clc
repnz
xor
notb
and
push
jge
or
push
sbbb
cmp
outsb
outsl
sbb
xor
lcall
jmp
ja
and
dec
push
scas
jo
add
popf
pop
sbb
loope
push
js
jb
sbb
mov
cld
enter
cs
rclb
ret
push
mov
movsb
mov
mov
mov
mov
sbb
enter
cmpb
xchg
push
hlt
xchg
sbb
jb
push
push
dec
cltd
pop
mov
jbe
lds
jno
lea
pop
pop
dec
xor
mov
jp
xor
sub
inc
popa
xor
in
jbe
pusha
dec
loopne
fdivl
mov
pushf
mov
cmp
sti
daa
or
into
cltd
mov
mov
push
js
lock
xor
fcoms
sbb
and
and
push
push
mov
insb
dec
data16
loopne
or
sbb
inc
sbb
mov
nop
loop
add
and
into
adc
inc
lock
mov
lcall
sbb
pop
push
adc
lods
mov
pop
mov
sub
cmp
xchg
loope
sub
and
test
pushf
std
cmp
inc
mov
pushf
sub
or
mov
pop
ljmp
xchg
add
imul
push
cmpsl
and
mov
or
push
cs
xor
adc
and
dec
rorl
xchg
cwtl
pushf
add
ss
mov
mov
cmp
sub
out
and
bound
dec
jmp
test
pop
cs
mov
loopne
adc
sbb
rolb
hlt
mov
pop
push
rolb
adc
pop
push
inc
sahf
leave
pop
cmp
sbbl
loop
neg
sbb
and
ret
mov
jno
into
sbb
cwtl
cltd
push
xchg
andw
daa
push
mov
adc
lret
les
lcall
lcall
sbb
jle
push
sub
mov
dec
and
mov
or
divb
inc
mov
scas
dec
add
inc
xchg
arpl
and
pop
add
hlt
mov
in
loopne
pop
adc
jo
push
add
or
loopne
cmp
lods
dec
xchg
test
mov
lret
or
fadd
or
rorb
hlt
or
push
mov
fmull
in
xor
and
and
xor
adc
push
push
adc
mov
shlb
push
outsb
mov
lods
xor
mov
roll
pop
loopne
pop
mov
nop
jb
xor
xor
or
add
cmpsl
jl
push
rcrb
inc
cmpsb
jo
inc
daa
into
or
dec
fcomp
mov
movsb
mov
add
js
cli
adc
push
mov
inc
sbb
lcall
insb
in
ret
pusha
xor
adc
sbb
mov
adc
js
lcall
fsub
push
in
dec
loopne
adc
adc
jno
loop
shl
adc
or
outsl
cmp
xor
or
das
jns
adc
jb
or
dec
loop
roll
cltd
add
adc
sbb
xchg
fadd
mov
cs
dec
lock
sbb
pop
cld
bound
cmp
movsb
xchg
mov
lods
insb
or
stc
call
dec
add
pusha
adcl
push
add
pusha
imull
fcmovbe
push
cmpsb
add
inc
inc
xchg
sbb
sbb
pop
sbb
sbb
jne
subl
xor
in
leave
sbb
cli
inc
popw
cmp
mov
push
mov
mov
mov
lcall
xchg
lret
pop
jge
pop
jo
lods
pop
pop
lock
sub
rolb
push
addl
jp
pop
ss
clc
js
push
mov
pop
cmpsl
aaa
sbb
add
add
mov
out
or
sbb
inc
jne
dec
dec
rcl
ret
sbb
push
rcr
sbb
or
xchg
dec
push
nop
fsub
into
enter
test
js
negb
mov
aaa
test
in
testb
or
loope
daa
sbb
cmpsb
pushf
out
fs
popf
fcoml
lods
aad
nop
or
in
cmc
cmp
je
mov
push
mov
mov
cs
ljmp
jo
pop
or
or
incb
js
cmc
sbb
jnp
dec
pop
inc
dec
pusha
ror
xchg
leave
les
and
lcall
fidivrs
or
add
adcb
sub
cmpsb
adc
je
lods
lcall
test
insl
cwtl
andb
cld
mov
pusha
mov
ret
pop
push
dec
popa
cmp
pushf
inc
data16
fs
roll
es
mov
cmp
in
cltd
in
jne
cld
fiaddl
sub
fidivl
fs
lret
cwtl
cli
push
iret
dec
inc
outsl
mov
or
cld
pusha
sub
add
outsb
cwtl
testb
ret
add
pushf
add
pop
and
pop
dec
cmp
sbb
mov
out
add
nop
aad
inc
lea
or
outsb
pop
test
pusha
xor
xlat
mov
xor
sub
repnz
loop
hlt
adcb
pop
xchg
imul
addb
add
xchg
jns
repnz
inc
sub
daa
lds
push
jl
xchg
dec
dec
popf
data16
bound
or
and
add
test
arpl
daa
in
and
sub
push
sbb
sub
sbb
lock
dec
sahf
mov
pushf
je
mov
ret
bnd
mov
or
clc
mov
or
push
lea
xchg
pop
push
cmp
fcmovu
add
mov
rclb
es
movl
or
push
js
popl
fidivl
push
mov
lods
and
pop
adc
mov
lret
dec
adc
icebp
xor
call
xor
adc
mov
dec
mov
mov
aaa
push
mov
push
imul
ljmp
mov
loop
cmp
xor
mov
add
pop
inc
push
xchg
mov
jg
cmp
xchg
lds
push
mov
push
les
jbe
ftst
push
in
xchg
je
push
xor
ljmp
jo
adc
jo
push
sahf
cmp
mov
mov
jp
and
outsb
scas
lock
dec
dec
pushfw
aad
cmp
imul
jbe
inc
sbb
leave
mov
push
xchg
rorb
out
mov
pop
adc
scas
xchg
xchg
cmp
movsb
roll
shrl
dec
test
mov
sbb
pushf
mov
inc
or
aaa
fimull
cs
push
loopne
push
into
inc
jbe
jmp
bound
mov
push
sub
test
push
xchg
inc
gs
pop
das
and
xchg
pop
mov
mov
pushf
add
pop
jno
test
xchg
add
xchg
add
hlt
sbb
dec
cmp
mov
xchg
sub
mov
xor
int3
xchg
sbb
mov
int
into
shrb
xor
and
loop
adc
push
lret
pop
mov
xchg
xchg
add
pop
lods
add
pop
add
pop
mov
xchg
test
data16
adc
xchg
add
jmp
add
jp
stos
xchg
inc
cli
mov
sub
test
jnp
inc
je
adc
mov
pusha
data16
lock
data16
imull
add
mov
sbb
or
jo
jo
shrb
add
stos
fmulp
inc
enter
dec
sbb
xchg
out
into
xchg
xchg
mov
sahf
inc
sub
addl
cwtl
xor
sti
call
push
stos
or
or
cwtl
ljmp
hlt
xor
sbb
and
xchg
push
inc
add
cmp
dec
je
sub
daa
loop
sbb
hlt
adc
push
ret
fsubs
hlt
pusha
xor
push
inc
jo
and
sbb
dec
into
sub
test
sbb
into
rol
push
call
js
ficomps
aam
sub
mov
lods
dec
jb
repnz
into
add
daa
test
mov
and
js
push
mov
scas
cmp
adc
cmp
mov
push
bound
adc
sarb
mov
clc
pop
mov
mov
pop
lahf
or
jno
hlt
cmp
loopne
sarb
sbb
movsb
xlat
push
adc
dec
add
add
insb
push
mov
pop
lods
stos
and
or
je
mov
pusha
rclb
pop
xchg
nop
sahf
cmp
and
fcoml
js
or
pop
movsl
enter
cmpl
fcompl
test
push
shr
loop
mov
cmpsl
xor
push
loopne
add
lods
and
frstor
xor
sub
or
xor
bound
fs
xor
out
inc
shrb
xchg
push
push
xchg
arpl
cmc
jo
and
cmpsb
or
adc
outsb
int
repz
inc
and
xor
scas
test
push
xchg
sbb
clc
mov
test
xor
dec
scas
cwtl
sbb
cs
or
arpl
loop
inc
xchg
add
arpl
and
mov
xor
dec
sbb
cmp
cld
lret
orb
lcall
add
dec
fcomps
cmp
xor
shlb
sbb
loopne
mov
cmp
dec
mov
negb
loope
fsubrp
inc
aam
fxch
scas
loop
push
dec
adc
test
in
gs
rorl
sbb
lods
das
shlb
sbb
lcall
adc
sbb
bound
stos
mov
in
push
mov
dec
cmp
cmpsb
or
add
sbb
adc
xlat
jb
dec
cmpb
mov
insb
rolb
pop
mov
pusha
fisttps
pushf
les
les
in
leave
nop
test
push
cmpsl
xchg
lret
xchg
data16
dec
push
cmpsl
fucom
bound
mov
sbb
cmp
movsb
mov
xor
sub
je
or
imul
inc
adc
out
out
sbb
push
xor
dec
xchg
pushf
lods
pop
pusha
xor
mov
cmpsb
nop
insb
xor
adc
xchg
cmp
dec
lods
xor
xchg
rorl
add
pop
pop
aas
lahf
movsb
subb
and
dec
sub
add
pop
in
repz
pop
mov
insb
sbb
xor
call
and
test
iret
or
rcrb
aaa
inc
push
test
or
movsl
add
mov
in
dec
mov
lock
mov
jno
call
mov
add
inc
stos
shlb
pop
push
roll
mov
lock
roll
push
mov
in
inc
movsb
cmp
cmp
addb
mov
fmull
aad
push
cmp
jmp
test
mov
mov
xchg
in
pushf
mov
inc
es
fcoml
mov
push
into
inc
pop
xor
sar
inc
mov
push
movsb
lcall
and
test
movsb
push
pop
inc
xor
fs
xor
out
mov
sarb
loopne
push
jo
repnz
sbb
xor
pop
call
mov
pop
cmp
or
imul
push
dec
xor
and
int3
addl
jns
je
int3
dec
popf
movsb
test
insb
xchg
or
dec
clc
repnz
adc
pushf
nop
inc
jp
xlat
inc
jb
xchg
sbb
cmp
ljmp
xor
shlb
imul
scas
dec
in
add
je
push
or
cmp
mov
and
sahf
xor
imul
add
leave
push
mov
ret
adc
adc
inc
out
push
das
xchg
mov
jle
mov
xor
mov
cltd
mov
lods
cmp
inc
mov
cs
pop
jno
lock
jp
pusha
add
mov
xor
sub
jp
xchg
pop
pop
adc
jb
je
xchg
push
lods
or
flds
jo
fs
sub
test
or
bnd
stos
ret
sbb
es
repnz
push
sahf
jne
sbb
lods
pop
leave
loop
dec
adc
shlb
sarl
xor
inc
dec
shlb
orl
outsb
mov
inc
push
dec
rorb
and
into
mov
dec
dec
mov
xor
mov
stos
in
push
jbe
add
mov
push
pop
push
cs
mov
pushf
add
jp
mov
adc
push
sub
push
pop
cmp
fs
xorb
fldenv
sub
xchg
orb
loop
dec
bound
test
cltd
lods
pushf
outsb
cmp
pushf
gs
arpl
int3
mov
xor
xchg
or
jecxz
es
and
dec
bound
inc
pop
faddl
inc
out
or
leave
inc
andb
fdivl
sbb
dec
mov
nop
lock
pushf
xor
lret
call
in
mov
test
into
aam
or
xchg
inc
dec
or
xor
insb
jno
push
daa
pusha
clc
push
cmp
dec
shrb
dec
cmp
or
adc
cmp
push
mov
add
cli
je
xchg
xor
mov
mov
nop
jo
push
inc
xor
mov
popf
xchg
les
jo
movsb
clc
mov
pushf
add
bound
and
sub
sti
mov
fsubr
mov
ret
sbb
fcompl
inc
sbb
dec
and
xchg
pop
nop
and
push
popa
xchg
push
push
or
in
push
jbe
add
fidivl
faddp
or
mov
outsb
xor
arpl
or
mov
call
ficoml
sbb
popf
add
in
mov
xchg
fiadds
clc
or
add
stos
dec
jmp
mov
adc
mov
add
push
mov
pop
clc
mov
dec
add
iret
mov
cmpsb
jp
pusha
fcoms
add
sbb
sahf
clc
call
aad
fnstcw
movsb
outsb
cwtl
or
mov
push
cmc
add
rorb
mov
adc
or
ret
roll
fidivl
xchg
sbb
out
jg
dec
rcrb
pop
dec
mov
cltd
arpl
ret
adc
lahf
mov
cmc
iret
outsb
jb
and
push
enter
int3
jb
and
dec
cmp
mov
dec
fimuls
cmp
ss
outsl
dec
outsl
push
jl
xchg
pop
leave
in
out
adc
dec
or
mov
popf
lods
add
pop
repnz
or
ja
xor
lcall
add
icebp
les
or
lods
movsl
push
or
fisubrl
mov
popf
int3
inc
bound
insb
in
push
add
sbb
sbb
adc
lret
or
sbb
lock
inc
and
xorb
push
jbe
or
push
mov
ljmp
das
or
movsb
jo
out
pop
xchg
push
inc
push
ljmp
in
mov
aad
inc
lods
rcr
pusha
int3
push
loopne
sub
mov
lret
inc
mov
dec
inc
adc
mov
std
cmpsb
clc
adcl
and
pop
adc
mov
and
es
xchg
sbb
mov
loope
add
rorb
fldl
mov
int3
push
into
mov
test
ljmp
and
xchg
dec
test
or
or
cmp
rorb
insb
mov
add
pusha
sub
pushf
sbb
xor
jns
mov
rorb
jbe
push
inc
or
es
movsl
orl
popa
add
jl
dec
ss
addl
sbb
imul
cmp
sahf
inc
mov
lock
xor
shrl
lret
jecxz
jle
sahf
sbb
dec
sahf
xor
outsl
shll
aam
jne
mov
xor
pusha
inc
sbb
cmp
push
and
xor
stos
shrb
sbb
pop
lret
mov
loopne
jmp
mov
add
and
test
add
lods
daa
mov
pusha
fstpt
cli
insb
inc
pop
mov
mov
cmp
pop
mov
and
orb
movb
push
add
cmp
add
cmp
shlb
sub
mov
fdivr
and
xor
lret
add
add
and
rclb
outsb
xchg
dec
arpl
xchg
cwtl
out
mov
jnp
push
add
inc
mov
jno
xchg
mov
dec
les
test
pop
inc
xlat
arpl
stos
outsl
fcomps
sbbb
push
outsb
mov
xchg
mov
faddl
adc
rcrl
cli
xor
cmc
lcall
lret
enter
scas
and
mov
push
divl
ja
xchg
sub
cmp
nop
cltd
pusha
loop
test
cmp
aam
inc
dec
xor
lock
sbb
sbb
imul
mov
inc
sbb
mov
mov
cmc
xor
adc
cmpsb
hlt
clc
lcall
mov
aam
fiadds
cwtl
add
jecxz
push
sub
mull
mov
jl
repnz
push
jmp
rol
insb
cmp
add
add
mov
push
leave
inc
jg
mov
xor
cmpsl
xchg
test
ljmp
mov
push
and
push
loop
movsb
cmp
inc
in
pop
sub
add
sub
push
push
and
loopne
out
int3
movsb
cmp
insb
jo
push
imul
jo
adc
hlt
push
popa
imul
jns
addb
adc
repnz
movsb
mov
outsb
cld
fsts
mov
xchg
push
pop
cli
in
and
test
insb
ljmp
arpl
pop
inc
es
hlt
sbb
aam
nop
imulb
cmp
daa
pop
sub
and
aam
xor
sbb
cmp
sub
cmp
push
loop
cs
test
loope
loop
mov
xchg
push
sbb
or
test
or
inc
gs
ret
mov
and
in
mov
ss
mov
push
addr16
xor
movsl
add
arpl
mov
inc
test
cwtl
pusha
dec
lret
es
or
das
lods
es
adc
pop
xchg
mov
sub
add
xchg
cmpsb
push
sub
ljmp
les
mov
adc
mov
cmp
arpl
ror
dec
push
pushf
fs
push
lcall
fiaddl
lods
xchg
pusha
and
or
mov
rolw
ljmp
mov
push
inc
inc
clc
pusha
fldcw
mov
mov
or
imul
xor
jle
or
js
jno
cwtl
mov
outsb
push
and
mov
xor
push
push
in
ss
pushf
mov
add
and
xor
ret
cmp
fs
xor
call
mov
adc
js
adc
mov
mov
inc
mov
inc
mov
hlt
andb
cmp
test
push
scas
fsubrp
and
out
sub
and
sahf
xchg
loope
jp
xchg
add
sub
sbb
adc
sbb
outsl
ljmp
dec
enter
ret
ljmp
push
sub
adc
add
cmp
in
imul
xchg
push
lods
test
or
lcall
inc
pop
sbb
lret
test
arpl
orb
cmp
fs
mov
test
cmpsl
loop
insb
lea
pop
lret
enter
test
ljmp
adc
out
hlt
aam
enter
mov
xchg
add
bnd
imul
pop
push
add
in
cli
mov
jl
sub
iret
mov
inc
add
sbb
nop
pop
or
iret
mov
jns
or
aas
lds
inc
lock
repz
mov
inc
iret
or
jbe
fadd
and
out
or
lahf
in
lods
sub
js
add
movb
dec
dec
pusha
xor
nop
fsubr
push
and
lret
sbb
sub
or
push
mov
inc
inc
in
das
pop
insb
or
mull
or
scas
xor
mov
dec
xchg
aaa
adc
inc
add
xchg
sbb
and
cwtl
data16
lock
ljmp
inc
aaa
pop
pop
xor
xchg
cli
daa
outsl
orl
jl
xchg
addb
xor
add
sbb
call
mov
or
mov
adc
jne
xor
or
mov
adc
nop
aas
loopne
inc
mov
xchg
imul
or
dec
pop
rcrb
popf
add
add
insb
inc
or
je
sahf
dec
cmp
call
jp
je
push
in
dec
adc
fidivrl
jg
inc
mov
mov
cmp
push
cmp
push
lds
pop
cmp
pushf
mov
mov
cmp
inc
pusha
dec
cwtl
insb
xor
addr16
xlat
addr16
and
and
shlb
lods
jo
outsb
mov
inc
repnz
fsubs
incb
lock
outsb
pusha
dec
jno
loope
dec
add
dec
scas
pop
pop
cltd
mov
sbb
and
and
adc
filds
dec
cmpsl
push
cli
int3
xchg
push
repnz
cs
in
shll
loopne
pop
jge
jnp
sbb
stos
iret
es
sub
cwtl
lods
inc
dec
loop
jb
lock
rorb
dec
cmp
sub
jmp
clc
test
sbb
je
and
nop
push
cmpsb
clc
rol
inc
sub
js
lods
sub
push
sub
dec
cld
cmp
fcompl
adc
sahf
aam
in
and
add
mov
pop
movsb
pusha
xchg
js
inc
jb
xor
add
in
fadds
js
pop
mov
or
push
dec
dec
sarb
add
jb
or
xor
outsb
mov
rcr
push
push
ret
cmp
into
clc
cs
jbe
int3
mov
out
and
xor
fimuls
xchg
add
inc
xor
rolb
sbb
fs
andl
subb
and
add
adc
add
add
popa
push
push
xchg
sub
fnsave
sub
xchg
mov
dec
loop
mov
jno
gs
lcall
addb
adc
and
addr16
sbb
roll
or
mov
cwtl
mov
loope
data16
or
sub
test
inc
es
inc
sbb
cmp
mov
and
mov
in
divb
push
stos
insb
sbb
loope
adc
adc
mov
daa
dec
add
add
mov
into
xor
test
xor
test
jmp
ds
adc
or
mov
sub
shrb
mov
pop
mov
add
nop
addr16
inc
sbb
orl
or
sbb
sub
adc
fmuls
bound
add
or
movsl
in
xchg
divb
push
pop
gs
xor
xlat
outsb
xchg
push
xchg
into
into
orb
adc
shl
sub
xor
mov
and
lds
mov
or
jle
rolb
sub
adc
mov
sub
je
in
mov
adc
mov
lret
lea
icebp
clc
ljmp
sub
xor
push
imul
dec
lret
sub
cwtl
mov
jecxz
xchg
push
andb
jbe
pop
ljmp
xchg
sbb
sahf
pop
xor
push
push
cwtl
xchg
sbb
ja
mov
enter
scas
adc
pop
sbb
xor
repnz
inc
ret
push
cli
xor
sub
xor
je
push
cs
add
imul
cli
and
subb
pop
xchg
aam
and
sbb
mov
pop
lea
notb
mov
xchg
pop
adcl
or
xorb
daa
jecxz,pt
adc
fsubl
sbb
mov
inc
arpl
ja
call
enter
and
mov
faddl
sbb
je
or
and
ret
dec
clc
dec
adc
xor
vmptrst
and
call
xor
sbb
js
pop
add
sbb
cli
mov
mov
xchg
mov
outsl
dec
mov
nop
push
push
cmp
jb
jo
mov
inc
jmp
scas
mov
loop
mov
sub
fcmovb
bound
pop
inc
mov
mov
or
xor
or
or
test
lods
sub
sub
loopne
push
pusha
and
lret
xor
fldl
incb
adc
and
enter
jb
add
cmp
mulb
fs
pop
pusha
cmpsl
andb
xchg
fsub
inc
add
add
cmp
cmp
adc
fisttpll
cmpsb
mov
mov
push
in
push
mov
loope
xacquire
lret
mov
and
gs
dec
das
sti
jb
push
add
loope
mov
addb
adc
cmpl
and
dec
pop
pop
daa
inc
shrb
fcoml
addl
mov
push
or
lret
adc
dec
and
loope
ficoms
jp
out
xorb
rorb
into
shlb
fs
adc
in
fsubrp
test
pushf
ret
pop
push
pop
je
ds
inc
lock
lret
or
dec
add
roll
ds
and
fld
enter
pop
push
inc
lods
mov
xor
dec
call
sbb
inc
fisubl
sbb
test
ret
cmp
sbb
jp
mov
push
fs
arpl
cmp
std
sub
mov
or
inc
inc
imul
test
inc
fadds
xor
pusha
repz
adc
pop
imul
ja
pop
push
cwtl
or
push
push
or
sbb
pushf
dec
or
lcall
sbb
cmp
hlt
sbb
ljmp
fcompl
lock
adc
xchg
push
pop
insb
cld
jg
lret
dec
cs
lods
pop
gs
add
or
ffreep
adc
jo
jmp
faddl
xchg
push
xor
sahf
jp
or
popf
lea
dec
xor
mov
push
subb
jmp
jl
insb
lea
mov
pop
lea
ljmp
sbb
or
sbb
call
xchg
int3
push
rcrb
testb
add
inc
fidivl
cmp
mov
repnz
xchg
ficomps
lret
mov
add
and
jns
fwait
int3
mov
sbbl
sbb
fildl
mov
js
outsl
xor
loop
fs
dec
lock
sbb
dec
dec
movsb
addr16
sub
mov
lods
or
lcall
enter
pushf
and
inc
out
in
add
mov
inc
mov
data16
movsb
cltd
hlt
push
jle
xchg
pop
or
test
orb
mov
cmp
xchg
and
or
cmp
or
add
pushf
push
adc
lock
xchg
xlat
imul
dec
xchg
add
repnz
xor
cmpsb
dec
inc
sbb
mov
das
jbe
aam
xchg
cld
adc
mov
fistpl
sbb
inc
jg
cmp
mov
sbb
lret
and
fdivl
cmp
adc
add
js
push
mov
pop
cmp
inc
aaa
add
xor
sbb
adc
into
popf
add
loop
pop
fnstcw
cmc
and
sub
mov
xor
dec
js
push
imul
loope
mov
add
add
insb
inc
sbb
adcl
push
and
je
arpl
jb
nop
xor
xor
and
push
xor
lea
push
les
inc
roll
addb
jnp
lcall
in
push
data16
sub
test
nop
es
push
jb
into
sbb
test
push
mov
adc
xchg
call
fsubs
ret
lods
es
mov
pop
hlt
pop
pavgw
ret
xchg
cmp
out
sub
jno
and
xor
adc
popa
rolb
mov
aam
loop
mov
rolb
push
adc
mov
cwtl
lods
and
push
dec
mov
repz
mov
loop
rorl
adc
sbb
movsb
test
pop
dec
js
pop
xchg
push
je
sbb
inc
mov
push
pop
gs
xchg
jne
adc
inc
dec
mov
mov
lret
fsubl
adc
popa
adc
test
or
je
dec
popa
sub
sub
pop
sbb
sbb
sbb
mov
lret
fwait
xchg
xchg
adc
lcall
sbb
aad
mov
ret
jmp
test
dec
aad
mov
xor
hlt
xchg
jo
fstps
mov
or
bound
and
lcall
enter
sarb
xor
loopne
cli
mov
repnz
or
mov
dec
cmp
or
sahf
mov
jb
ljmp
inc
cmp
cmp
push
ss
xor
mov
sbb
fcomps
lret
pop
lods
pushf
dec
add
lods
ret
or
push
daa
lret
and
sub
pusha
lret
sbb
insb
scas
cmp
pop
mov
mov
push
push
adc
xchg
test
loope
cmp
movsb
shl
push
mov
push
cmpb
dec
add
nop
cltd
je
les
pop
xchg
fs
inc
push
pusha
cmpl
pop
pusha
arpl
xchg
in
mov
push
pop
lret
cwtl
add
add
ret
cwtl
xchg
rcrl
call
rcll
daa
adc
mov
inc
or
ret
cmp
cmp
ret
xchg
xor
mov
push
mov
nop
lods
rorb
cmp
je
sbb
aad
outsb
sub
adc
bound
gs
mov
sahf
adc
xor
pop
loope
xchg
mov
je
jo
ret
outsb
movsl
arpl
dec
bound
mov
inc
sbb
mov
fbstp
add
jb
mov
dec
loopne
rcr
add
fdivl
in
jmp
mov
mov
xchg
inc
and
inc
daa
arpl
mov
rcrb
insl
push
jp
push
ss
push
je
shr
add
out
xchg
sub
sarb
loopne
pusha
cmp
add
and
pop
or
inc
mov
ror
sahf
dec
xchg
or
mov
dec
add
loop
inc
lcall
mov
enter
lods
xor
pop
pop
mov
lea
push
sub
fcompl
sbb
lock
cli
pop
dec
loopne
xchg
mov
push
dec
dec
outsb
loop
pop
cmpsb
mov
inc
jl
adc
rorb
add
rolb
insl
mov
pop
adc
dec
sbb
xchg
sbb
jle
adc
xor
sub
pushf
shrl
test
xor
sub
fs
outsb
lret
loopne
jp
and
int3
mov
jne
enter
addr16
test
subb
push
mov
imul
add
xor
adcb
adc
add
cmp
push
sbb
mov
push
rol
fcoml
rcrb
mov
cmp
inc
notb
sub
sbb
test
or
lret
aam
cmp
ret
sbb
push
js
in
sbb
clc
call
ss
hlt
and
shr
rcr
and
mov
sbb
hlt
xlat
add
add
push
ror
fnstsw
sub
pop
inc
or
dec
aas
mov
movsb
pushl
adc
and
jno
inc
push
add
add
jg
mov
push
lds
sub
outsb
adc
and
dec
aad
adc
and
icebp
sbb
cmpsl
rclb
arpl
lock
xchg
or
sbb
ror
mov
add
notb
data16
in
imul
cmp
mov
lock
gs
movsb
add
cmc
and
pop
pushf
and
or
test
daa
inc
js
shrb
and
sub
inc
mov
jo
cmp
adcb
or
sub
inc
loope
adc
shl
js
dec
mov
pop
out
and
push
mov
xchg
aam
ret
xor
adc
rcrb
mov
test
loopne
orl
mov
out
dec
sbb
mov
pusha
add
gs
add
pusha
mov
jecxz
jp
pop
and
mov
mov
or
xchg
fldl
addr16
fsubs
mov
sbb
mov
and
sbb
sbb
add
push
jbe
adc
fisubrs
mov
push
jb
mov
or
or
test
or
push
popf
dec
pop
pop
jl
mov
adc
xchg
jo
push
fdivrs
ret
jge
outsb
fstpt
inc
ret
fnstcw
inc
dec
faddp
mov
andb
sahf
add
jmp
les
cmp
cmpl
and
add
dec
stos
pop
sub
push
jmp
jns
xchg
mov
mov
loopne
out
inc
dec
add
cwtl
clc
loop
sbb
inc
sub
add
and
jmp
shlb
mov
push
jecxz
mov
cmp
es
outsb
lods
add
jge
bound
pop
scas
ret
enter
es
call
fmull
mov
ss
test
sub
pop
sbb
and
popf
fcomps
rcr
movsb
push
lods
xchg
xchg
xor
push
ljmp
jno
mov
mov
fdivs
dec
mov
push
fdivrs
test
sub
mov
ret
jno
lret
adcb
xor
lret
xchg
xchg
xchg
xchg
push
mov
fcmove
xchg
xchg
xchg
test
push
xor
loopne
aam
or
add
enter
ret
add
test
inc
cmpb
mov
inc
daa
xor
or
xchg
fcompl
insl
lea
stos
notb
mov
cmpsb
lods
loope
bound
rolb
mov
sbb
pop
sarb
sbb
mov
in
shrb
add
add
push
pop
pusha
icebp
push
popf
sub
xchg
sbb
enter
dec
outsb
mov
or
jmp
cli
xchg
sub
test
add
into
lods
jmp
inc
loopne
aas
aas
push
rcrl
fmuls
add
xchg
mov
xlat
mov
addb
and
mov
imul
loop
fidivrs
adc
mov
push
or
lahf
xor
js
sbb
loop
push
or
adc
insb
loop
shr
popa
sub
les
mov
lea
cli
orb
and
mov
cmc
xor
mov
sbb
fs
adc
lods
inc
inc
or
lock
cmp
cmp
aaa
rcl
in
bound
cs
rclb
das
dec
pop
dec
call
rorb
in
ret
cmp
sbb
jle
lret
js
jecxz
imul
pop
add
mov
ret
push
fisubrs
loop
imul
inc
mov
or
pusha
add
push
lret
mov
pusha
sbb
mov
pop
icebp
mov
sbb
js
mov
cmpsb
adc
jne
push
pop
or
sbb
or
movsb
xchg
mov
mov
jo
stos
jne
sbb
or
dec
test
sub
sub
imul
dec
pop
test
stos
and
xchg
jno
idivb
push
adc
popl
xchg
and
xor
xor
fstpt
jp
fcoml
jno
xor
sub
cmpl
lods
push
shlb
sub
icebp
sahf
push
sub
add
xor
inc
cmp
rcrl
jb
lret
ret
cli
xor
mov
movsb
push
add
jns
jb
shll
inc
sbb
pop
push
push
hlt
mov
scas
jmp
loope
cmpsb
imulb
sub
pop
mov
sub
cmp
rclb
into
and
add
cwtl
inc
add
fs
sbb
push
xchg
adcl
arpl
xchg
fildl
pop
dec
push
push
in
ljmp
mov
clc
je
icebp
xor
js
and
adc
sub
scas
xor
cmovl
sbbb
xchg
sbb
xchg
call
and
fldcw
in
data16
fst
rcrb
adc
mov
inc
js
mov
xor
jo
loopne
shr
sub
dec
push
shlb
sbb
in
adcl
adc
mov
shr
xor
push
inc
dec
leave
push
mov
sarb
fldenv
push
mov
xor
sbbb
arpl
push
push
out
lods
add
pop
sahf
jne
in
mov
jle
jp
push
arpl
inc
sub
xchg
in
xor
aam
scas
xchg
cmpsl
pusha
dec
punpckhdq
mov
mov
inc
jg
mov
pop
jp
xor
dec
jp
insb
bound
dec
cmp
sub
jo
xor
add
outsb
cmp
push
adc
andl
adc
ret
add
add
mov
nop
pushf
inc
bound
dec
roll
dec
dec
dec
ljmp
xchg
xchg
shl
mov
std
les
and
ja
testl
jo
repz
or
dec
pop
test
mov
or
lret
adc
sahf
test
mov
cwtl
inc
push
or
mov
loope
add
bound
loopne
es
add
sbb
loop
dec
and
xor
push
fsubrl
push
es
dec
mov
ret
aad
push
push
fwait
jecxz
pop
inc
mov
cmpsb
test
pusha
out
push
dec
sbb
data16
int3
push
mov
inc
or
cmp
or
jbe
mov
enter
cmp
mov
pop
adcb
call
xchg
lods
pop
or
js
pop
lret
or
loopne
add
ret
rcrb
popa
add
adc
loop
ds
sub
xor
in
loopne
sbb
inc
cmpsb
stos
xor
push
movsb
jl
xchg
mov
sbb
ds
or
mov
andb
cmp
xor
push
adc
stos
pusha
lock
push
pop
xchg
dec
ss
adc
clc
mov
sbb
push
rorb
sbb
mov
mov
outsb
insl
mov
jp
sbb
xchg
cmp
pop
sbb
xor
and
je
out
mov
mov
adc
cmp
add
pop
push
xchg
add
sub
inc
xchg
lea
mov
push
mov
loop
sbb
sbbl
push
mov
testb
mov
insl
adc
xor
mov
les
pop
add
cli
jl
lret
jo
inc
xor
ljmp
sbb
mov
lret
xor
sbb
inc
sbb
clc
adc
or
mov
je
inc
mov
add
int3
or
aaa
enter
loope
out
and
cmpsb
mov
jecxz
push
insb
mov
mov
das
popa
or
mov
jp
cltd
xor
dec
pop
xchg
or
add
pop
and
xchg
cmp
sbbl
mov
mov
inc
ss
ljmp
cli
push
push
jo
push
xor
sbb
adc
sbb
dec
je
addl
js
or
cwtl
inc
dec
cltd
addl
dec
push
pushf
icebp
xor
ljmp
or
js
cmp
add
xor
sahf
enter
call
pop
les
cmp
mov
push
push
stos
pop
push
or
ret
cmp
outsl
add
inc
divb
ret
push
lock
add
or
jp
sub
and
add
mov
dec
lcall
push
cmp
divb
jo
and
pop
xorb
push
dec
cmpsb
cwtl
push
incl
ljmp
mov
clc
jo
and
sub
push
adc
addb
xor
xor
and
ljmp
xchg
sub
pop
and
dec
xchg
jle
repz
pusha
mov
and
dec
mov
xchg
aam
or
loopne
cmpb
mov
xchg
je
add
popa
rcrl
int3
or
fisttpl
jge
ljmp
clc
rcl
or
and
xchg
mov
push
add
test
push
sbb
pop
aas
and
inc
or
push
sub
pop
xchg
in
cmp
adc
sbb
cld
outsb
xchg
lock
enter
push
inc
or
inc
aad
jnp
cmc
or
rcrb
xor
ret
jmp
roll
xor
fcomp
push
pop
push
or
lock
movsl
jl
xchg
out
sub
dec
pusha
add
sub
dec
mov
in
rcll
test
hlt
add
mov
and
addl
jmp
cmp
or
not
xor
jo
push
imul
lds
sub
or
and
daa
mov
inc
inc
fcomip
rol
aam
pop
stos
ficoms
shl
cltd
loopne
sbb
push
hlt
lods
mov
loopne
mov
adc
jno
lret
and
xchg
pop
sub
xor
and
fisttpl
pop
or
and
and
or
xchg
adc
sbb
sbb
imul
xchg
xchg
pop
jne
or
mov
outsl
or
adc
mov
int3
sub
ljmp
enter
sub
arpl
and
shlb
inc
and
jl
js
xchg
sbb
js
mov
iret
mov
push
cmpsl
scas
or
push
sarb
adc
xor
subb
mov
xchg
dec
inc
in
add
jno
fisubrs
sbb
sahf
adc
and
loope
mov
pushf
enter
rcrl
inc
bound
sub
in
loope
push
lcall
sbb
mov
mov
ss
mov
clc
add
jo
enter
sahf
or
cmpsb
dec
sbb
cwtl
dec
out
fistpll
sbb
out
pop
pop
test
popf
test
pop
push
in
dec
xchg
rclb
inc
lret
pop
add
xchg
mov
push
mov
int3
and
mov
mov
jle
push
mov
ret
sbb
push
int3
out
xchg
js
xor
pop
adc
adc
xchg
dec
sarb
inc
cmp
call
rol
dec
cmp
rcrb
mov
and
sbb
dec
sbb
daa
add
rclb
adc
cltd
jno
inc
adc
mov
pop
pushf
sbb
mov
lock
pop
pop
push
and
lods
pusha
xor
insb
addr16
nop
out
outsb
out
dec
mov
push
push
lds
add
pop
dec
add
rorl
cwtl
and
jl
or
mov
dec
lods
addl
sbb
xor
pushf
inc
add
xor
adcb
and
or
insl
add
pusha
jbe
xchg
ret
add
loopne
sub
fmull
add
xchg
leave
add
xor
loope
jb
pop
sbb
or
adc
jo
sub
push
push
dec
mov
mov
pop
inc
mov
push
xor
fsubrs
pop
lods
dec
das
sub
sbb
or
in
dec
jmp
xor
sub
dec
jo
or
pushf
or
imul
add
sbb
test
lea
lods
mov
andl
rolb
arpl
sub
xor
pop
add
dec
adc
fs
outsb
xchg
inc
loopne
lods
dec
cmp
or
mov
ljmp
fbstp
or
popa
dec
mov
mov
xchg
es
stos
out
or
ds
cmpsb
push
sbb
dec
adc
cmpb
sbb
or
inc
aam
mov
cmp
sub
or
addl
sub
andb
mov
inc
add
add
adc
xor
pushf
dec
sahf
daa
pusha
xchg
add
push
ja
es
add
push
leave
pop
ret
pop
fwait
ljmp
mov
inc
mov
test
cmp
lcall
push
cmpsl
mov
mov
push
dec
sbb
sub
rclb
sahf
ss
inc
les
pop
push
mov
loope
mov
or
test
lret
loopne
pop
xchg
or
jge
cld
test
lods
rorb
dec
mov
and
loopne
bound
mov
mov
test
cmpsb
int3
nop
push
loope
sbb
xor
inc
mov
jmp
test
pop
add
mov
shll
lods
sahf
pop
xor
inc
rolb
mov
std
add
sti
loop
push
sbbb
push
add
pop
lods
pop
pop
lea
push
out
in
fs
sahf
mov
push
push
pushf
dec
and
pop
cmpsb
inc
rcrb
in
mov
and
scas
mov
test
or
adc
shl
push
xlat
sbb
loope
cwtl
pop
or
gs
fcomp
cmp
inc
jmp
stc
jb
xor
lret
mov
and
add
sub
inc
lea
pop
cmp
notb
or
push
rclb
xorb
lcall
push
xor
incl
adc
cmp
mov
sbb
cmp
clc
add
icebp
and
fs
std
or
sbb
push
decl
pusha
xchg
push
mov
jp
fimuls
pop
sarl
sbb
xor
xchg
mov
pop
mov
jno
dec
add
cmp
leave
mov
mov
in
sub
jb
push
rclb
outsb
pop
xor
pop
mov
add
shrb
sub
jle
pop
cmp
mov
sbb
jp
cmpsb
mov
aad
fs
pusha
mov
js
lods
or
je
adc
gs
lret
shr
xchg
in
jl
in
pushf
test
adcb
hlt
adc
pop
call
ret
fbstp
cmpsl
xchg
xchg
jno
out
pop
pushf
or
jno
jno
repnz
jmp
fidivrl
adc
lret
adc
ret
pusha
sub
sbb
sbb
jmp
sbb
jnp
roll
add
dec
test
xor
pop
mov
dec
and
dec
pop
pop
xchg
je
cmp
dec
or
daa
sbb
mov
nop
sbb
pop
and
cmpsb
sbbl
push
adc
iret
movb
call
sahf
dec
mov
or
mov
and
fiadds
mov
into
xor
inc
pop
hlt
lcall
inc
jge
mov
jl
xor
push
dec
rclb
inc
push
mov
mov
js
xchg
fisubl
add
push
xchg
sub
rorb
out
add
frstor
push
xor
mov
or
adc
mov
or
lar
jp
fxch
pop
sbb
push
cwtl
out
cs
mov
insb
je
cmp
mov
imul
or
dec
add
inc
pusha
dec
inc
xlat
adc
mov
pop
loope
lea
pop
cli
inc
lock
and
nop
pop
mov
mov
cmp
push
pusha
mov
xchg
clc
jp
push
fidivs
mov
fistpll
add
aam
sub
mov
popa
cmp
aam
andb
mov
sbb
sbb
xor
add
sbbb
or
sub
movsb
cli
push
popa
and
inc
push
xchg
pop
pop
test
and
sbb
dec
inc
add
jecxz
cmp
dec
sbb
int
inc
adc
cmp
insl
loop
dec
or
inc
dec
lret
push
sbb
clc
mov
jecxz
fisubrs
addl
push
scas
insb
xor
fmull
or
hlt
ss
pop
and
subl
and
pusha
fimuls
mov
daa
adc
and
mov
in
fsubrs
ret
mov
jbe
xor
add
cmp
js
cmp
push
rolb
jp
loopne
cmc
mov
adc
adc
xchg
xchg
loopne
or
into
xchg
enter
push
imul
sub
mov
push
and
pop
mov
adc
xchg
push
dec
rorb
je
adc
fists
push
pop
xchg
xor
dec
popf
mov
inc
jle
lock
cmpsl
add
pop
fmull
cmp
mov
movb
push
or
push
mov
mov
add
push
sub
popa
sub
mov
clc
cmp
adc
lea
dec
jle
aam
or
jns
push
arpl
mov
sbb
xor
sbb
rolb
xchg
xorb
mov
sbb
push
inc
nop
stos
dec
addb
stos
cltd
push
pop
dec
xchg
xchg
lea
push
test
faddl
xchg
adc
sub
sbb
stos
mov
cld
or
mov
add
cmp
lret
je
inc
icebp
xchg
loope
jp
insb
test
cmp
pop
ss
enter
add
cmp
ds
cmp
std
mov
jmp
packuswb
push
pushf
sarb
addb
mov
lock
push
sbb
ret
xor
lock
pop
jle
mov
cmp
push
and
sahf
les
sbb
stos
push
jbe
inc
add
dec
or
lea
inc
lods
aam
rolb
sbb
xor
xchg
pop
and
pop
pop
dec
adc
xchg
xchg
and
dec
lcall
fdivr
add
fsts
sbb
andb
adc
xchg
mov
es
push
and
daa
xchg
pop
jmp
loope
inc
movsb
mov
jo
jecxz
xor
inc
jno
xchg
out
push
xor
add
into
subb
pop
xor
in
test
cmp
push
in
mov
mov
push
dec
cmp
sbb
flds
push
scas
sahf
push
aam
icebp
pop
or
push
sub
into
mov
mov
add
cmp
fdivp
rcl
xor
clc
test
pushf
in
cwtl
or
adc
jb
sbb
ret
xor
cmp
in
cli
mov
cmp
fstpl
enter
xchg
xor
cld
or
adc
inc
sbb
xor
rcr
and
cltd
push
arpl
inc
stos
or
and
cmp
push
mov
jg
or
dec
loope
sub
or
cmp
hlt
rcrb
ds
test
pop
sub
in
into
push
adcb
addb
adc
aaa
push
sbb
dec
jbe
scas
popa
aaa
nop
add
xor
test
in
addr16
mov
push
mov
cmp
popa
shlb
rolb
in
js
mov
jae
popa
mov
push
add
add
xor
shld
cmc
ret
orb
jo
rcrl
lret
rclb
addl
inc
cwtl
js
insb
insb
test
xchg
in
repnz
adc
scas
pop
sbbl
cmp
lods
inc
lock
jbe
xlat
jecxz
fnsave
jo
movsb
dec
loopne
push
pusha
add
loope
or
leave
push
aam
xchg
test
cmp
cmp
lcall
add
fcmovbe
test
lods
sbb
add
dec
lods
mov
push
or
movsb
or
mov
mov
movsl
xchg
cmp
shl
inc
mov
cmc
push
jg
outsl
pop
pushf
mov
inc
push
push
call
loop
or
push
stos
add
xor
les
mov
call
xchg
outsl
repnz
lahf
jle
or
add
or
sub
popa
shlb
mov
shr
test
adc
push
test
rcrb
repnz
test
aam
jo
push
aam
cld
jb
mov
cmp
mov
bound
pusha
xchg
addl
sub
or
sbb
cmpl
fldcw
mov
ret
push
push
and
inc
adc
mov
pusha
add
les
fsubs
pusha
loope
xlat
hlt
and
fiadds
test
jne
sbb
mov
pushf
fmuls
roll
scas
cmp
rcrl
sahf
mov
fcoms
imul
and
adc
into
mov
fsubrs
rolb
loop
and
pop
imul
push
bound
push
push
xor
xchg
lea
rcl
or
rcll
cmp
sub
mov
shlb
sub
push
push
mov
or
pusha
hlt
aas
adc
imul
add
add
adcb
call
loopew
sbb
mov
cmpb
cmp
or
adc
pop
mov
jecxz
and
inc
adc
cld
lods
lock
pop
push
cmpsb
push
ds
adc
jno
outsb
ret
nop
push
pushf
into
test
jle
mov
jle
cmp
addl
or
push
outsl
add
jle
loopne
movb
mov
push
cmp
pop
xchg
ss
mov
xor
pop
aaa
cmpsb
sbb
loopne
push
mov
pop
into
pop
cli
adc
cmp
push
push
xchg
js
sub
cmpl
or
bound
pop
roll
in
je
push
test
mov
nop
mov
mov
clc
push
mov
add
mov
loopne
dec
cmp
inc
xor
lret
enter
adc
outsl
sbb
js
ret
out
or
addl
xchg
mov
mov
mov
or
add
pop
arpl
mov
xor
jo
adc
loopne
add
test
pop
sub
sahf
fmull
add
sbbb
lcall
dec
mov
ror
sbbb
mov
adc
sbb
clc
sbb
or
shrb
and
xor
movsl
jmp
adc
mov
fidivrl
pushf
push
bound
addb
mov
into
add
cmp
inc
or
push
jbe
mov
lcall
test
js
cltd
mov
orl
adc
mov
lock
call
add
pusha
test
rclb
dec
aaa
ljmp
mov
les
adc
mov
push
lock
add
sbb
add
cmp
enter
mov
add
outsb
nop
je
sbb
hlt
or
nop
icebp
add
ds
add
jmp
mov
mov
test
jge
mov
jns
ljmp
jbe
aaa
adc
sub
mov
negb
add
les
jnp
fwait
mov
lret
dec
push
outsb
adc
in
sbb
and
mov
addl
dec
sub
adc
sub
hlt
jns
aam
inc
sti
add
add
push
and
pop
or
outsb
fisttps
inc
mov
ss
and
sbb
les
nop
orb
xchg
cmpsl
adc
or
andl
lods
jbe
icebp
xchg
popa
lea
lock
jge
dec
xchg
sbb
test
dec
inc
push
and
iret
fistl
subl
sbb
fwait
cli
mov
mov
ds
xchg
fiadds
mov
push
and
push
push
xchg
imul
mov
mov
imul
pusha
lret
popf
or
push
mov
sub
jns
out
es
inc
pop
mov
or
sbb
fs
fsubrs
push
push
xlat
shrb
cwtl
mov
mov
int3
add
xchg
xchg
mov
xchg
pop
movb
sarl
inc
add
cld
push
ss
sbb
movsl
xor
inc
jbe
sbb
jmp
sub
jo
add
or
inc
mov
mov
lods
or
mov
lock
mov
outsb
das
adc
jno
push
cs
jl
pop
dec
test
mov
sbb
xchg
dec
sub
test
icebp
xchg
inc
push
and
sahf
mov
nop
adcb
and
mov
and
pop
mov
or
or
xor
or
es
ret
adc
mov
addb
inc
mov
lods
inc
lods
xchg
aas
xor
inc
mov
jb
clc
nop
inc
pusha
loopne
adc
and
add
jno
outsl
dec
loope
ss
addb
ja
pop
pop
scas
pushf
sub
dec
fadd
inc
pop
lret
rorb
mov
shlb
and
loopne
pop
scas
test
add
pop
push
out
and
inc
adc
jne
sahf
orb
dec
push
je
xor
xor
test
je
movsb
mov
cmpsb
and
sahf
je
xor
xorl
inc
cwtl
jno
add
test
sarb
arpl
scas
inc
xor
push
test
out
sub
es
daa
add
mov
or
jo
or
xchg
loopne
or
xor
outsl
in
xorl
inc
and
jecxz
add
mov
add
ficoml
push
sbb
adc
es
xchg
pop
mov
and
loopne
fcomps
ret
inc
ret
lahf
xchg
inc
cmc
cmp
insl
loopne
sbb
test
xchg
dec
out
and
add
enter
add
repnz
mov
stos
xchg
rorb
sbb
dec
insb
clc
adc
sbb
cmp
sbb
jb
ror
add
test
es
pusha
xor
arpl
int3
push
bound
xchg
lea
shlb
pop
out
xchg
xchg
mov
xchg
push
dec
in
sbb
pop
pop
push
adc
into
and
arpl
xchg
jnp
outsb
sbb
cs
push
add
and
test
jmp
mov
xchg
or
cmp
xlat
push
mov
or
add
inc
outsb
push
or
daa
outsl
mov
dec
mov
sbb
fs
lods
adc
lret
inc
nop
cwtl
and
jb
jb
mov
nop
ss
mov
call
sbb
fiadds
and
movsb
subb
hlt
es
and
inc
or
movsb
int3
outsl
ret
adcb
and
lcall
je
jmp
hlt
ror
jmp
fwait
pop
xchg
sbb
push
mov
flds
das
xchg
pusha
sub
add
push
pop
adc
loop
mov
jno
clc
sub
mov
sahf
rcl
jb
mov
mov
push
dec
or
inc
shll
cmp
adc
inc
inc
xchg
dec
addr16
xor
pusha
imul
pop
stos
xchg
aaa
andb
jnp
js
addr16
aam
dec
movsb
aad
rclb
ds
push
das
test
cld
cs
sbb
bound
xchg
into
ret
dec
xchg
ret
lods
movsb
fcoml
ret
inc
pop
pop
flds
xor
ds
aam
loop
loope
add
adc
or
mov
shll
jl
ret
icebp
dec
xchg
mov
pop
jbe
rcll
sub
sub
jno
test
in
mov
repnz
jg
lcall
adc
cmc
pop
push
mov
adc
jp
mov
enter
push
adc
xchg
mov
cli
or
cmovnp
mov
pop
int3
es
cmp
pushf
mov
ret
dec
push
push
fidivs
sahf
or
mov
dec
repnz
xchg
pushf
push
dec
fld
fsubrs
cmp
rorb
mov
adcb
pushf
mov
xchg
loope
mov
add
sahf
push
pusha
adc
rcl
rol
and
mov
lret
ds
jp
test
nop
sbbl
and
lods
mov
xor
jbe
test
mov
rcrb
popf
push
outsb
out
dec
sub
adc
add
out
mov
xchg
jno
sbb
enter
movl
jo
xor
cmp
push
test
imul
push
es
push
test
xor
lcall
push
jmp
sbb
mov
rolb
lret
or
push
into
enter
add
nop
mov
mov
dec
sbb
push
into
xchg
xchg
add
test
mov
pop
xor
jae
mov
movsb
pop
rcll
xchg
mov
movsl
rolb
enter
adcl
fiadds
cmpsb
xchg
cmp
hlt
mov
movsb
add
jo
add
xor
lea
jl
push
rcrb
cltd
mov
push
mov
push
cmp
sbb
or
add
push
es
push
testl
xor
xor
pushf
leave
mov
xchg
jl
inc
xor
push
and
insb
push
sbb
jp
xor
ret
sbbb
or
call
sub
into
and
movl
sbb
and
cwtl
add
push
hlt
xchg
mov
es
and
sbb
jp
xor
ret
enter
daa
or
lret
add
inc
pop
dec
std
inc
out
in
ror
push
add
call
mov
push
mov
push
loop
arpl
sahf
pushf
fxch
adc
sub
aam
pop
adc
dec
sahf
xchg
add
cmpl
adcb
cld
cmp
mov
mov
mov
test
js
movsb
or
cmp
out
lea
mov
cmp
add
js
mov
lea
lcall
add
add
loope
roll
inc
loope
mov
mov
test
xchg
leave
ljmp
dec
dec
inc
movsl
xor
adcl
xor
enter
inc
push
arpl
lods
or
sub
dec
ret
sbb
es
pop
les
orb
scas
xchg
lea
mov
adc
mov
pop
pushf
cs
mov
out
sub
dec
lods
add
add
mov
xor
in
and
inc
out
push
add
addb
loop
xchg
adc
imul
rorb
loopne
imul
lcall
movb
rorl
stos
movsb
sbbb
pop
sbb
add
xlat
add
dec
movsb
sahf
dec
popa
xor
inc
shlb
mov
dec
clc
mov
rolb
test
hlt
and
sbb
add
jnp
and
lock
push
jo
xlat
mov
mov
add
ss
mov
cmc
xchg
fstps
xor
or
out
imul
sub
xor
sbb
xor
xchg
push
data16
ds
push
shl
pop
dec
mov
adc
pushf
xor
scas
add
outsl
fsub
pop
mov
inc
lods
bound
mov
push
ret
cwtl
cmp
push
mov
adc
pop
mov
repnz
enter
jmp
pop
imul
sbb
sub
test
lahf
int3
les
call
pop
jecxz
xchg
mov
cmp
or
fs
movsl
test
les
loope
scas
push
in
push
mov
ret
mov
fcoml
lret
fcompl
nop
jl
sbb
xor
inc
sub
jl
adc
sbb
enter
into
add
pop
adc
push
loop
stos
sbb
fadds
in
int3
nop
mov
imul
inc
cmp
sbbb
bound
push
jbe
jmp
bound
cwtl
lret
cmp
test
jl
sbb
push
and
add
push
inc
orb
push
sub
sbb
mov
sub
pop
insl
cmp
xchg
mov
and
add
xor
mov
into
loopne
sub
mov
add
add
or
das
hlt
jo
in
and
add
xchg
out
rorl
rol
ja
and
data16
xor
adc
pop
pop
inc
mov
mov
cmp
insb
bound
ljmp
sbb
jl
or
out
mov
xchg
or
add
test
dec
and
add
adc
daa
add
push
leave
mov
xchg
cs
xor
pop
jge
or
and
iret
outsl
dec
lret
fwait
rorl
lahf
rcl
push
sbbb
add
addr16
mov
push
and
pop
or
and
push
add
lret
dec
xchg
inc
jmp
cmpsl
insl
jg
or
xchg
js
gs
or
enter
jl
jb
inc
movsb
in
sbb
lods
icebp
xchg
mov
push
jo
add
adcl
rcrb
ror
sbb
mov
xor
xor
add
mov
lea
or
xor
cmp
notb
addb
js
inc
inc
xor
arpl
imul
push
dec
popf
lods
dec
movsb
mov
pop
jmp
pop
jbe
cs
enter
add
lods
sub
pop
bnd
push
dec
or
ss
adc
mov
mov
test
push
es
mov
inc
dec
xor
pop
lock
call
mov
movb
repnz
or
pop
sbb
or
adc
mov
sub
cmpsl
adc
xor
arpl
sbb
sbb
mov
ret
addb
sbb
lock
fsub
or
xchg
pushf
jmp
xorb
inc
insb
mov
popf
fcomps
inc
sub
push
mov
push
aam
mov
inc
push
clc
mov
mov
push
pop
add
pop
push
movsl
and
cmp
cmp
out
xor
sbb
xor
lret
push
push
push
popa
inc
mov
add
dec
or
cs
ss
dec
loopne
add
push
cwtl
nop
orb
nop
sahf
sub
xchg
js
jp
clc
and
test
nop
or
mov
out
and
lock
or
push
rol
jl
sub
sub
pop
push
pushf
inc
sbb
xchg
jne
push
test
dec
dec
xor
test
adc
and
mov
mov
int3
or
push
faddp
fiaddl
add
push
insb
dec
inc
loope
or
or
test
xchg
pshufb
fadds
add
loop
lods
popa
sub
loop
and
lret
or
cs
mov
cmp
pop
jmp
pop
xor
add
inc
cmp
pop
mov
addr16
mov
cmp
adc
outsb
xor
and
push
cmovo
xchg
test
mov
cmp
sbb
pop
aam
xor
pop
xchg
cmpsl
aaa
mov
or
fsts
and
and
mov
and
andb
es
xor
jo
gs
jl
addl
push
xchg
or
roll
or
or
pop
cmp
mov
lods
rcr
mov
sbbb
add
sbb
gs
popf
push
inc
cmp
and
adc
dec
cmpsb
fstl
ret
sahf
insb
loopne
enter
ljmp
stc
adc
loopne
sahf
sub
in
sbb
lods
mov
fld
ret
pop
cwtl
push
push
test
shlb
pop
cmp
push
xchg
fs
push
xor
pop
mov
sbb
dec
adc
rol
jp
jle
rcl
cwtl
movsb
bound
popa
sar
fisubrl
jp
cs
mov
adc
das
aad
add
jbe
xchg
mov
sbb
pop
dec
cwtl
dec
dec
movsb
fadds
xchg
cmpb
outsl
test
add
or
and
pusha
or
mov
rcll
jl
push
enter
sub
push
into
push
dec
adc
orl
sbb
sbb
loopne
js
xchg
adc
das
shlb
pop
cmp
sub
push
push
adc
icebp
and
sahf
mov
sbb
pop
push
push
loopne
or
jge
xorb
je
pushf
add
sbb
loop
and
xchg
dec
xchg
push
pop
jo
add
shlb
mov
add
mov
lds
fistps
push
test
sbb
mov
rolb
xchg
nop
push
add
or
mov
mov
bound
add
pusha
sarb
push
ret
add
mov
sub
test
pusha
adc
gs
add
and
or
or
and
and
dec
xor
cmp
hlt
mov
xor
and
or
clc
push
pop
cmp
add
add
out
or
or
loop
xorl
xor
cmp
xchg
jno
mov
movsb
ss
or
sbb
inc
push
inc
sbb
sbb
and
sti
push
dec
xchg
xchg
fdivs
hlt
je
adc
out
xlat
nop
adc
mov
ret
or
mov
inc
outsl
jge
or
andb
pop
pop
icebp
adc
movsb
mov
daa
addl
loope
jae
or
bound
pop
ffree
andb
cmp
shrb
sahf
das
add
les
mov
push
or
jne
mov
sbbb
xor
aad
pop
ds
ret
lret
inc
or
dec
fmuls
or
inc
mov
loopne
push
xchg
dec
push
ficompl
test
pop
imul
rolb
or
add
add
leave
insb
push
sbb
ret
push
xchg
xchg
dec
sub
mov
or
out
push
sbb
shll
rolb
cmp
cltd
test
leave
sub
xor
pushf
xchg
or
lret
mov
mov
call
mov
pusha
cs
xor
mov
jecxz
mov
insb
and
out
sub
jo
insb
loopne
pushf
mov
es
clc
or
lods
mov
adc
clc
and
add
enter
es
push
test
pushf
je
xchg
cld
add
inc
and
jo
cmc
and
xor
sbb
dec
sbb
cmp
les
pop
lock
and
das
imul
mov
lock
popf
jb
pop
insb
mov
gs
push
test
mov
pushf
rcl
or
ss
jae
inc
or
or
pop
fidivl
mov
jp
adc
out
les
sbb
insl
in
movsl
ret
decb
loope
inc
testb
dec
and
fbstp
lahf
and
or
lods
aam
fstps
jne
sub
pop
inc
sub
mov
pop
les
pop
pop
xchg
cmp
nop
jp
pop
iret
add
add
inc
rcl
pop
and
or
data16
adc
adc
fstl
pop
lods
negl
dec
inc
push
adc
inc
mov
add
push
pop
xlat
add
test
mov
jge
add
sbb
negl
cli
hlt
ds
push
ss
stc
xchg
adc
loopne
inc
xchg
or
and
or
push
add
jmp
push
mov
fldcw
pop
adc
cmp
mov
ja
pop
add
ljmp
inc
das
cld
cld
ret
loop
mov
fs
inc
sub
call
sbb
inc
loopne
mov
inc
add
inc
pop
inc
out
xor
mov
lods
dec
cmp
outsb
lcall
xchg
jp
push
xorl
sbb
fwait
push
dec
sub
and
iret
mov
xchg
aaa
ret
dec
dec
ljmp
popf
and
rcl
mov
fists
or
inc
push
xor
dec
cli
dec
add
ljmp
mov
inc
and
mov
rolb
add
andl
insb
inc
dec
or
jl
push
loop
jne
loopne
adc
jbe
add
inc
scas
or
add
cmp
sbb
inc
cmp
xchg
lock
repnz
loope
jmp
xchg
dec
sub
mov
push
inc
jge
lods
mov
push
push
xchg
xchg
bnd
rcrb
aad
sbb
xor
sbb
mov
xor
sbb
fnsave
loop
movsb
and
push
les
movsl
and
in
or
jbe
xchg
mov
push
js
mov
dec
out
cmp
addr16
sbb
pusha
and
push
push
xchg
or
test
sub
and
cmpsl
pop
arpl
jb
and
cmpsb
xorb
mov
inc
pusha
or
sti
push
dec
adc
push
or
or
push
inc
stos
push
add
add
sbb
jae
dec
lret
pop
mov
in
and
cmp
es
fimuls
cli
aam
ja
jo
xor
jb
insb
nop
in
scas
pusha
push
mov
cmp
dec
push
ret
cmp
mov
jbe
sbb
mov
or
or
pusha
aam
cmp
enter
es
push
shlb
inc
call
sub
cmpb
sub
push
inc
add
loopne
pop
loop
or
or
sub
dec
test
lret
lods
aaa
test
inc
push
or
jl
inc
sbb
push
adc
and
mov
cmpsl
jbe
push
pop
jecxz
mov
push
dec
push
xchg
scas
stos
xchg
push
add
scas
adc
daa
dec
push
nop
lock
enter
push
call
insb
daa
in
fsub
jo
pop
ljmp
xchg
sub
adc
out
ljmp
jo
mov
xchg
test
push
inc
lods
pop
xor
cmp
adc
inc
or
ret
sub
xlat
into
or
mov
sbb
ds
test
pushf
pop
leave
fstps
ret
rorl
fdiv
orl
mov
add
pop
rclb
addl
pop
push
daa
fadds
mov
xor
or
sub
pop
xor
or
dec
pushf
fidivrl
nop
pop
sbb
sbb
adc
sbb
enter
cwtl
xchg
inc
add
les
jo
add
fidivrs
data16
call
mov
adc
xchg
xor
enter
xchg
loop
test
and
movsl
xor
ss
mov
pop
mov
sub
rorb
daa
sbb
lret
jp
mov
arpl
add
adc
outsb
jns
pop
push
sbb
jge
in
mov
loope
push
mov
adc
out
xlat
pop
push
pushl
das
test
dec
or
jp
dec
push
pop
ljmp
adc
push
sub
inc
xchg
dec
shlb
cld
sti
nop
mov
push
cs
bound
insl
jecxz
mov
rorb
js
cmp
fucompp
push
test
pop
adc
nop
outsl
sarb
cmpsb
jbe
arpl
or
insb
and
or
das
jle
sbb
cmp
cli
push
daa
adc
and
dec
dec
xor
push
or
dec
push
cwtl
xchg
push
xchg
int3
adc
push
icebp
inc
inc
ds
xchg
add
push
jo
pushf
cmpl
mov
mov
test
movsb
and
lock
ret
ret
aaa
lods
jb
sbb
pusha
push
insl
push
ja
pop
push
ss
cmp
or
pextrw
pushf
mov
inc
or
les
fwait
cmp
lods
mov
ds
pop
icebp
cmp
jbe
push
addl
mov
call
es
ss
and
add
adc
dec
jbe
mov
scas
dec
es
sbb
outsb
or
add
xor
rcll
mov
cmp
jp
hlt
sub
ja
hlt
xchg
or
fdivs
or
adc
cli
adc
ret
mov
mov
mov
xchg
push
mov
mov
xchg
mov
inc
clc
cwtl
dec
xor
out
rcr
fs
or
mov
or
push
lods
and
push
add
or
gs
inc
sbb
sbb
push
pusha
inc
pop
xor
je
test
xchg
rcrb
ljmp
add
cmp
mov
ror
inc
jg
cmpsb
mov
fnstcw
movsb
les
das
inc
orb
mov
arpl
loopne
pusha
ret
adcb
cmp
xlat
flds
sbb
add
lea
arpl
addr16
cmpsb
dec
dec
add
sbb
fsubrs
or
in
push
inc
add
dec
addb
dec
adc
shr
mov
into
lods
xor
and
add
or
inc
in
ret
rcl
mov
or
jno
push
fldcw
pusha
inc
rorb
into
dec
bnd
bswap
add
push
fnstsw
add
popf
sahf
ret
les
inc
test
adc
enter
ret
and
lcall
shrb
or
addb
mov
sbb
push
aam
cwtl
data16
es
xchg
add
mov
mov
cli
push
nop
adc
or
pop
leave
cmp
adc
mov
fadds
popl
mov
or
mov
ss
lods
mov
int3
jp
dec
int3
inc
sub
fsubrs
cmp
sbb
mov
mov
loopne
xchg
packuswb
push
shl
movsb
aas
push
dec
lds
inc
add
add
cmpsl
mov
scas
in
in
lods
xorb
cmp
ret
hlt
push
cmc
add
addr16
push
jmp
in
mov
insl
pop
mov
inc
ds
jle
jo
enter
push
lods
mov
mov
mov
and
jne
mov
sarb
fidivrl
loop
mov
ficoml
adc
and
lea
or
jmp
cmpb
xor
inc
adc
mov
or
ret
sub
lret
loopne
roll
push
jne
arpl
cmp
dec
fisttps
popa
sbbb
shl
loop
or
push
add
add
push
inc
je
das
pop
sub
mov
in
dec
lods
mov
lret
sub
repz
roll
addr16
sub
movsb
aam
xor
jmp
sti
sbb
jg
inc
xchg
cmc
pop
sub
inc
hlt
mov
cmc
adcl
and
add
loopne
xor
rcrl
sarl
pop
mov
add
in
loop
or
fcmovbe
lea
inc
nop
cmp
or
int
push
dec
test
insb
dec
rclb
lods
in
mov
pop
cmpsb
ss
add
sbb
mov
dec
sub
lods
in
mov
decl
repnz
imul
push
outsb
adc
add
rolb
lock
adc
inc
add
adc
in
jl
jg
lock
mov
mov
ret
pushf
jb
xor
pop
cmpsb
sub
push
test
sarb
xchg
int3
or
adc
je
adc
add
fcom
inc
and
clc
enter
adc
addr16
test
jo
jo
clc
push
and
xchg
pop
xchg
into
push
into
dec
add
movsb
jae
xchg
xchg
mov
daa
xorl
or
mov
decb
rorb
into
mov
nop
push
jp
or
movsb
mov
mov
sub
xor
pusha
or
inc
loopne
add
loopne
xchg
cmp
lods
mov
or
pop
ss
sbb
jbe
mov
push
out
and
xchg
push
arpl
cmp
jecxz
push
ret
rcrb
inc
dec
adc
xor
or
dec
js
mov
jo
lret
xor
add
inc
mov
sbb
aam
adc
popa
xchg
mov
adc
push
rcrl
mov
mov
xor
add
adc
mov
dec
or
fxtract
stos
adc
add
inc
push
mov
inc
imul
inc
call
lods
inc
sbb
mov
push
xchg
adc
fidivrs
pop
icebp
xorb
nop
mov
add
fadd
mov
and
or
mov
xchg
adc
push
push
and
pusha
loopne
rclb
add
aam
hlt
rclb
and
pusha
add
insb
or
dec
mov
mov
inc
stos
adc
add
ret
jae
dec
loopne
enter
push
cmp
push
jb
add
ja
cmp
icebp
xor
cmpsl
loopne
aam
pusha
nop
insb
xor
aaa
push
add
roll
jp
cmpsl
xorl
xor
mov
rolb
sbb
nop
mov
shlb
test
loopne
lods
jb
mov
pop
sbb
fidivrs
or
in
push
add
into
xchg
dec
cs
pushf
push
mov
and
adc
dec
arpl
push
icebp
popa
mov
mov
scas
in
addb
arpl
pop
inc
dec
enter
xor
fwait
out
mov
adc
fcoms
cmp
jmp
xor
cmp
xchg
pop
adc
sbb
into
push
add
dec
sbb
mov
push
test
data16
pop
add
mov
cld
pop
scas
call
sbb
pusha
or
push
ficoms
mov
inc
add
pushf
jmp
pusha
inc
loopne
fs
jns
dec
or
and
sahf
or
sbb
push
pop
nop
inc
sbb
xchg
sbb
mov
jb
movsb
xlat
push
js
ss
dec
add
shr
in
lcall
or
daa
test
pop
inc
mov
scas
in
xchg
fwait
or
or
scas
scas
inc
and
jo
rorl
ret
ljmp
rol
das
and
adcl
and
stc
lret
add
inc
push
stos
repnz
cli
and
add
or
or
hlt
dec
stos
mov
push
xchg
in
lret
fstl
popa
mov
rcl
xchg
mov
sub
sbb
xchg
stos
inc
popf
adc
in
sub
cli
or
and
rcrl
ret
mov
gs
nop
mov
push
sarb
and
dec
mov
cmpsb
stos
sbb
jne
hlt
and
data16
mov
and
shlb
or
jb
or
push
les
add
xor
es
jl
jmp
pushf
fiadds
in
adc
icebp
mov
mov
ret
inc
dec
mov
loope
mov
inc
xor
sbb
in
or
push
add
push
mov
pop
sarb
xchg
or
mov
leave
cmpsb
adc
cmp
popf
cld
push
or
pop
sub
jb
fcomps
loope
shlb
in
adc
sahf
shlb
xor
cli
push
push
add
mov
cmp
and
add
or
add
movsb
cmpb
aam
and
pop
bound
xchg
rorb
pushf
mov
mov
jp
rorb
test
lret
les
sti
mov
movsl
pop
daa
pushf
test
cmpsl
add
adcb
dec
dec
rorb
or
cmp
dec
jo
sbb
and
ljmp
aam
js
je
jnp
sub
loope
inc
dec
inc
cmp
mov
fs
fmull
adc
adc
lret
dec
pusha
or
adc
pop
pop
and
xor
adcb
push
jo
pop
pop
sbb
scas
fcmovu
repnz
sbb
add
enter
mov
cwtl
pop
insl
adc
lret
mov
dec
mov
push
pop
or
inc
lret
xchg
xchg
dec
xchg
hlt
push
aad
pop
add
arpl
and
hlt
xor
cmp
in
out
int3
dec
sbb
rorl
adc
jae
fsubs
orl
mov
push
push
xor
sbb
or
addb
add
loop
lock
pop
in
cld
jbe
pushf
push
xor
pop
mov
pushf
fsubs
add
inc
mov
test
rolb
and
jae
imul
xor
or
pop
sahf
lock
mov
and
sbb
shrb
xor
sbb
inc
stos
and
ljmp
sahf
nop
add
insb
movsl
mov
mov
or
movsbl
test
out
xchg
ret
sti
cwtl
xchg
or
add
ret
nop
pusha
cmp
add
sbbb
loopne
sbb
ret
xor
das
or
xchg
mov
xchg
and
ret
pop
cmpsb
ret
or
out
push
and
dec
ss
ror
pop
test
adc
push
cmp
inc
daa
add
cmp
mov
test
xchg
sahf
hlt
fsub
push
sub
mov
push
mov
jnp
push
add
pop
pop
loopne
ss
sub
adcb
xchg
daa
mov
inc
push
enter
inc
loope
add
pop
std
inc
push
arpl
pushf
and
popa
shl
arpl
pusha
jnp
aaa
pushl
sbb
sbb
pop
sub
ret
add
xor
sbb
mov
pop
in
aas
adc
and
xchg
pusha
cwtl
pop
and
mov
push
push
sarb
dec
sbb
addr16
sub
les
sbb
mov
shlb
inc
adc
sub
jno
loopne
leave
cmc
out
or
mov
xor
add
cmpsb
pop
push
inc
lcall
mov
ret
mov
inc
push
cmp
movsb
pushf
push
es
idivl
mov
bound
aam
xor
add
push
mov
ret
sbb
lods
add
rcl
push
dec
adc
les
add
mov
adc
push
icebp
js
fnstenv
cmp
cs
ret
pop
sub
or
sbb
notb
dec
cmp
lcall
loope
sbb
imul
dec
xor
jle
and
pushf
jb
stos
add
push
push
xchg
dec
rcl
loopne
dec
nop
dec
mov
mov
pusha
rolb
rcrb
cli
ret
ret
shlb
add
cli
outsb
shlb
jo
push
nop
into
inc
jo
xor
push
into
sbb
in
sub
sub
into
jp
in
pop
sub
xorl
adc
mov
or
inc
mov
in
ret
cltd
mov
mov
xor
push
rorl
inc
roll
aam
popa
icebp
mov
push
add
test
dec
mov
ljmp
pop
mov
mov
popf
cmc
sbbb
lea
push
push
daa
adc
jne
shrb
bound
test
into
test
push
rcr
rorb
xchg
mov
in
sarb
int3
and
lods
mov
or
sub
sbb
dec
adc
add
or
pushf
push
adc
movb
and
sbb
add
mov
aam
nop
xchg
pop
and
rcrb
int3
lock
or
sbb
test
scas
fdivs
add
mov
ret
sahf
lret
push
push
jecxz
sahf
xor
push
lock
aad
test
and
or
sbb
mov
add
sub
movsl
addl
lcall
repnz
add
rorb
mov
push
clc
mov
jo
xchg
cmp
andb
dec
sbb
loope
ret
call
js
adc
clc
xchg
dec
cmp
cmp
xor
mov
push
sub
insl
loopne
ret
repnz
or
jmp
jb
hlt
mov
test
aam
pop
hlt
mov
inc
sub
mov
sub
xchg
push
dec
dec
mov
inc
push
js
loope
fwait
js
mov
into
lea
loopne
lea
jle
sbb
sarb
shrl
leave
inc
jb
ja
dec
fmull
dec
imul
imul
xorl
pop
loope
add
fdivrs
movsb
add
cmp
mov
xlat
add
jo
jb
xlat
leave
sbb
push
enter
dec
cltd
add
adc
or
hlt
dec
ret
jo
or
and
jo
daa
mov
sub
int
dec
in
in
or
and
inc
in
pusha
nop
out
dec
jl
mov
rcl
aad
sub
cmp
sarb
js
f2xm1
xlat
sbb
or
rcrl
pop
sub
sbb
sbb
fucomp
shr
mov
adc
adc
movsl
scas
dec
mov
arpl
xor
xor
xchg
add
mov
loopne
add
addl
pop
adc
and
je
fists
popa
inc
loope
lock
push
push
pushf
add
add
adc
sub
lea
xor
sbb
or
add
loopne
inc
in
sub
test
mov
das
lock
lods
sbb
pop
adc
lret
jne
mov
sbb
or
add
cmp
loopne
je
leave
mov
mov
adc
faddl
enter
sbb
sbb
sbb
adc
cwtl
sti
mov
or
test
push
push
fmull
fwait
push
aas
mov
push
cltd
and
mov
sahf
jne
xchg
xchg
mov
inc
mov
hlt
or
push
lods
loopne
lds
movsb
adc
mov
test
mov
adc
push
adc
js
mov
pop
cwtl
jp
loopne
pop
mov
nop
adc
sbb
shr
popa
mov
mov
std
add
repnz
or
jmp
repz
jmp
outsb
ljmp
cli
add
push
icebp
inc
fmuls
adc
add
cs
adc
loop
add
out
adc
mov
mov
cmp
rolb
nop
and
add
add
xor
pop
mov
sbb
jo
mov
mov
loopne
jmp
pop
dec
aam
add
pusha
clc
inc
pop
add
add
pushf
fadds
das
push
mov
incl
push
mov
lock
es
imul
xor
add
pop
movsl
fdivs
dec
sti
stc
jl
add
mov
push
adc
mov
test
jb
ficoml
int
adc
cmp
push
adc
add
xor
inc
push
xor
ret
fs
xor
mov
nop
push
fdiv
xchg
push
mov
add
jg
test
repnz
cmp
clc
clc
shlb
jb
cld
incb
rorb
dec
notl
jge
aam
sbb
dec
pop
jo
or
dec
add
adc
cmc
pop
enter
mov
xor
add
mov
xchg
xchg
adcb
enter
jmp
push
xor
xchg
fcoms
inc
rcrb
das
pop
sub
fimull
aad
lods
shrl
cs
lods
jge
mov
add
mov
jno
addb
and
nop
mov
cmc
or
sbb
call
or
lea
add
sub
cmp
fcoml
jp
sbb
add
pop
dec
mov
insb
adc
std
xchg
jb
icebp
sub
jns
std
cmp
loope
rol
or
icebp
add
pop
leave
sub
data16
push
test
add
mov
faddl
and
test
push
and
dec
pop
jl
lock
adc
jmp
rorb
xor
or
test
sbb
sbb
cmp
js
rcrb
jo
or
jo
imul
adc
hlt
sbb
movups
mov
nop
add
jno
mov
mov
mov
mov
cmp
aam
rorb
cmp
ret
cs
push
xchg
add
les
mov
ss
cmpsb
xor
sahf
es
nop
cltd
push
lret
insl
adc
cmpsb
xchg
add
ljmp
fmull
les
and
or
call
orb
outsl
scas
aam
fnstsw
cmpb
shl
or
das
push
mov
sub
je
sub
or
jecxz
sbb
mov
jo
mov
inc
cwtl
lea
push
nop
sbb
repnz
adc
or
pop
dec
or
test
pop
lret
xor
repz
sub
enter
push
push
das
mov
jno
mov
push
jb,pn
addb
jo
out
call
aam
inc
xor
xorb
ficoml
sbb
xchg
int3
push
fs
and
test
out
mov
loope
xorl
xchg
adc
enter
add
pop
test
rorl
or
push
jecxz
or
fcoml
cmp
lods
sub
jmp
outsb
sbb
test
xor
fidivrs
pop
sbb
hlt
adc
rcl
and
lods
dec
pop
bound
mov
or
inc
cwtl
push
cmpsb
add
ja
roll
xorb
aam
lea
push
sahf
xor
sahf
adc
and
shll
or
test
repnz
push
or
push
mov
es
gs
nop
es
and
mov
leave
sbb
loope
xchg
icebp
lret
pop
xorb
adc
jno
cltd
js
loop
in
adc
nop
cmp
ret
loop
imul
aam
jmp
xor
cld
mov
dec
lea
jo
popf
ss
loope
popf
pop
or
cmp
and
cmp
jne
pop
mov
xor
mov
sub
or
sub
push
sbb
out
and
loope
loope
repnz
add
xchg
int3
push
or
and
xor
cwtl
mov
or
adc
cmp
cmp
add
fdivrl
push
test
jbe
lock
push
adc
jo
or
and
mov
sub
pop
mov
je
jb
out
andb
cwtl
xchg
add
lock
in
cmp
in
mov
xchg
mov
clc
test
add
cld
xchg
cmp
outsl
or
xchg
cmp
test
xchg
loopne
and
push
addr16
mov
push
fcoml
out
or
mov
push
movsb
sub
xchg
cwtl
and
cmovo
icebp
insb
ret
dec
xor
dec
mov
pop
sbb
enter
lea
popf
xor
adc
add
xchg
aam
shl
xchg
lds
fnsave
add
mov
push
addr16
mov
sub
dec
inc
and
inc
popf
popa
lret
jmp
les
loop
adc
fs
or
xchg
xchg
lea
push
push
rol
add
add
les
pop
jns
inc
xor
sbb
movsb
jo
mov
stos
jns
add
inc
add
push
jbe
jmp
pushf
dec
or
outsb
flds
dec
movsl
adc
mov
insb
lret
mov
insb
mov
shlb
mov
sub
xor
adcl
call
inc
imul
push
cmp
xor
push
outsb
dec
adc
adc
xchg
dec
pushf
pop
inc
cmovo
mov
mov
enter
movsb
and
mov
loopne
loopne
insb
test
push
out
cmp
loop
subb
push
push
or
add
jp
and
out
or
shr
or
subb
push
out
pop
dec
xchg
addb
scas
xor
rorb
inc
inc
add
cli
ret
sbb
js
cmp
bound
inc
addr16
sahf
xchg
xor
pusha
lods
mov
ljmp
bound
mov
add
dec
mov
test
inc
cmp
ds
rcr
push
xchg
pop
ja
ret
lret
jp
cmp
fs
sbb
adc
xor
cmp
sbb
popf
or
adc
lock
jmp
shlb
sub
or
or
loopne
inc
add
les
jmp
xchg
mov
loopne
sbb
cmp
cltd
dec
stos
enter
adc
ret
sbb
cltd
mov
add
rclb
out
rol
and
adc
push
or
shlb
ret
call
sbb
xchg
adc
pop
into
clc
jbe
pop
add
adc
push
push
cmp
sbb
pop
sbbb
inc
pop
xor
add
icebp
xchg
das
inc
xchg
dec
mov
cwtl
jne
sbb
dec
pop
popl
xor
leave
adc
ret
outsb
data16
sub
lods
xor
or
and
pop
outsb
mov
inc
in
hlt
add
stos
xchg
lods
ficomps
es
push
in
or
shrl
inc
xor
jno
pop
rol
mov
pop
mov
das
xor
test
mov
es
paddsb
or
jg
ljmp
fsubs
jnp
mov
and
inc
daa
or
sbb
inc
add
mov
or
lcall
je
sbb
sahf
loope
mov
in
xchg
adc
decb
icebp
inc
insb
xor
xchg
subb
out
sub
out
fmull
gs
loop
cmp
roll
gs
fs
loop
in
push
scas
add
adc
xor
or
xor
push
add
sub
outsl
add
mov
mov
pop
loop
movlps
jp
add
pop
dec
cmp
pop
fwait
pop
in
add
inc
imul
push
mulb
adc
enter
fadd
pop
add
xor
nop
pop
lret
clc
xchg
fstl
pop
dec
int3
cmp
jb
and
sbb
adc
mov
mov
mov
push
sub
loop
cmp
mov
jo
shl
inc
sbb
push
or
mov
hlt
jl
push
adc
imul
adc
xor
fdivr
hlt
push
xchg
cmpsl
sub
arpl
xchg
adc
add
int3
movsb
das
rsqrtps
add
lret
cmp
je
xchg
pop
in
mov
sub
inc
dec
xchg
pusha
dec
popf
sbb
inc
mov
mov
je
nop
not
call
rolb
or
pop
loopne
cmp
sahf
xchg
mov
sbb
jge
xchg
pop
pusha
subb
jb
sbb
test
cli
push
mov
dec
jp
pop
xor
addb
pop
sub
pop
xor
jl
sub
pop
bound
cmp
push
jecxz
decb
lods
or
int3
test
mov
xchg
mov
scas
rol
adc
les
mov
movsb
pushf
ds
xor
aam
dec
dec
xchg
test
push
push
push
fwait
jp
add
sbb
xchg
rcrb
add
xlat
mov
adc
push
ds
mov
push
ret
test
mov
push
mov
ret
fdivrl
sbb
adc
pushf
or
int3
scas
inc
lea
ret
push
fadds
pusha
popa
arpl
lock
je
popa
insl
pop
nop
push
add
mov
mov
xor
and
add
push
sub
add
dec
adcl
add
lret
hlt
add
jno
cli
aaa
cltd
loopne
adc
sbb
jo
pop
in
push
mov
insl
ljmp
into
es
jb
jo
or
or
in
or
adc
sbb
dec
loopne
adc
stos
mov
lahf
pop
pop
xchg
jp
jo
into
lret
ret
mov
adcb
jle
insb
mov
js,pn
pop
test
or
or
popf
lret
and
xchg
push
divb
bound
test
add
or
dec
pushf
inc
pushf
adc
mov
add
cmp
push
shl
ret
ret
data16
dec
mov
pusha
addl
dec
nop
pop
push
lods
popf
sub
add
test
add
andb
inc
cwtl
mov
shlb
pop
outsl
std
idivb
das
mov
mov
cli
decl
lahf
shr
or
push
lods
orb
das
fiaddl
in
jns
neg
xchg
in
in
pop
scas
add
add
mov
jo
or
imul
push
icebp
in
push
xchg
xchg
and
ja
in
adc
inc
xor
xor
add
pushf
sbb
push
aam
jp
sub
mov
outsb
jb
roll
cmp
push
jo
outsl
pop
in
pop
sbb
out
nop
xchg
mov
jecxz
call
aam
pushf
sahf
imul
rolb
add
pop
dec
cwtl
add
cmp
popa
jb
pop
je
shlb
repnz
les
sub
xor
outsb
mov
ljmp
inc
insb
movsl
daa
jne
or
inc
add
stos
push
cmp
mov
push
mov
sub
cmp
xor
sbb
loope
ss
loope
js
pop
inc
push
repz
and
sbbb
lret
sbb
mov
sub
pop
add
mov
dec
js
out
mov
scas
sahf
jecxz
add
lret
add
pop
fxch
add
pop
test
into
orb
sar
dec
mov
je
fdivr
loopne
sahf
arpl
add
or
lock
jp
push
sbb
les
clc
mov
xchg
or
or
mov
xchg
adcb
loopne
cmpsb
test
or
ljmp
or
sub
mov
lcall
imul
test
sahf
popf
xchg
subl
aam
imul
js
or
jmp
mov
fmulp
adc
xchg
in
gs
xchg
sahf
fdivr
popa
inc
mov
sbb
sbbb
mov
nop
xchg
or
loopne
loopne
aaa
insb
sahf
mov
sub
lock
sti
scas
hlt
sbb
xchg
sbb
test
sahf
rol
sbb
call
pop
jbe
mov
or
arpl
xchg
jnp
xor
mov
sub
aaa
xchg
jno
pushf
sahf
sub
inc
andl
jo
inc
and
mov
pushf
and
inc
cmp
push
adc
aam
jecxz
and
outsb
int3
jp
sub
in
push
je
fdivrs
xchg
mov
adcb
adc
test
sar
add
jg
pop
adc
fadds
dec
rcrl
mov
or
inc
jp
mov
and
mov
pop
xor
adc
or
dec
sbb
lock
sbb
jo,pt
ljmp
bswap
pop
pop
sahf
dec
or
or
mov
jmp
xor
icebp
xchg
shlb
sbb
inc
cmp
lock
mov
xchg
push
dec
and
xor
sbb
mov
stc
push
lahf
xlat
dec
sub
mov
aaa
addb
rcl
sub
xor
dec
mov
pushl
shl
adc
roll
or
in
ret
add
daa
loope
aam
xchg
inc
mov
shlb
inc
and
inc
or
mov
mov
cvtpi2ps
les
mov
into
in
adc
adc
add
cwtl
dec
add
inc
fbld
repz
shl
xchg
aam
clc
sbb
shl
xchg
and
jmp
pop
inc
in
inc
int
inc
inc
outsl
fiadds
psrlq
jno
shl
dec
jae
int3
push
ror
add
or
adc
aam
push
addb
lret
scas
in
outsl
ss
sbb
loop
add
lods
adc
nop
xor
mov
fadd
adc
aam
inc
data16
mov
push
mov
aam
xor
or
add
sbb
ja
add
enter
inc
or
add
clc
decl
adc
or
sub
cli
push
loop
fists
push
adc
pop
cmp
mov
sbbl
sbb
loopne
icebp
xor
push
stos
xchg
lret
lret
inc
sbb
ret
enter
add
xchg
xor
xor
dec
or
test
arpl
int3
out
or
sbb
hlt
mov
add
sub
or
les
and
nop
pop
inc
pop
inc
and
cltd
pop
mov
fs
push
or
ret
jo
adc
sub
push
aaa
mov
popa
dec
push
sub
dec
lret
or
sbb
dec
aad
xchg
mov
lcall
sbb
enter
add
xchg
dec
and
in
imul
or
jmp
ret
je
xchg
pop
cmp
xor
test
into
mov
and
or
pop
push
shl
fs
frndint
jl
add
mov
js
scas
ds
lock
jb
dec
jmp
leave
or
and
jne
dec
sahf
fstl
push
mov
rcrb
xchg
xor
call
mov
sub
jnp
data16
jo
and
addr16
sub
adc
in
xchg
lcall
sub
xor
xor
sbb
jmp
lret
loopne
rclb
or
xor
out
shr
add
xchg
jp
imul
mov
int
fidivrl
mov
add
and
out
movsb
inc
enter
push
into
and
sbb
or
sbb
stos
push
nop
loope
add
ret
sub
push
push
dec
add
push
jl
push
fs
or
push
inc
sbb
adc
and
aad
jl
mov
jb
sub
sub
pop
xchg
mov
xor
js
cmpsb
xchg
and
lret
jl
sarb
xor
adc
cwtl
out
push
popa
add
xchg
xor
mov
clc
cmpsl
mov
sbb
add
lea
ja
loope
loope
add
out
or
rorb
inc
or
cmp
ret
sbb
mov
daa
je
in
ret
dec
ljmp
pusha
mov
enter
popf
test
aad
pop
cmp
movsl
or
popf
mov
fcompl
subb
adc
outsb
int3
nop
sbb
call
mov
je
xor
and
outsl
mov
mov
sbb
xchg
mov
xchg
pop
lock
xor
push
loop
mov
je
ror
and
push
jp
xchg
add
ret
or
aad
push
adc
xchg
add
or
lds
lock
xchg
fsubrs
or
mov
xor
in
push
out
inc
loope
pushf
mov
mov
and
push
inc
pushfw
addr16
idivl
loope
sbbb
and
adc
push
push
and
add
inc
or
cmp
sub
subb
adcl
add
movsl
pop
or
or
jg
and
add
jo
and
pop
mov
jno
dec
inc
ret
mov
fdivs
xchg
subl
and
sbb
sub
or
jl
pop
sbb
inc
jp
dec
jecxz
mov
testb
mov
lods
pop
or
push
incb
andl
sti
add
adc
and
lods
inc
pop
cld
mov
cmpsb
xchg
mov
ret
jns
cmp
lcall
aam
leave
les
sbb
and
cmp
sahf
adc
fsubrl
cmp
cmpsb
adc
movsb
shl
mov
mov
jecxz
stos
daa
xchg
mov
ret
pop
sbbl
push
aam
scas
and
cltd
and
test
cmp
push
dec
loopne,pn
inc
cltd
mov
add
xorb
stos
lret
adc
push
ret
add
mov
enter
push
daa
cmp
stos
idivb
or
sub
sbb
nop
out
int3
mov
nop
pop
fs
or
leave
add
fcoms
loope
aad
sbb
add
stos
sub
push
mov
ljmp
punpckhwd
into
push
sub
push
xchg
aad
pusha
add
hlt
or
fisttpll
cmp
jb
inc
outsl
call
movsb
xchg
and
sub
mov
cltd
push
lcall
addb
rclb
dec
mov
rorl
in
adc
mov
push
addb
dec
pop
out
sbb
inc
fdivrp
les
ret
xor
inc
cmp
push
push
mov
mov
jbe
inc
cmp
push
xchg
push
xorb
rcrl
movl
rolb
adcb
scas
stos
lcall
or
push
decl
arpl
push
addr16
or
mov
mov
or
outsl
and
inc
or
push
les
cmp
in
cmp
loop
xor
imul
add
xorl
inc
iret
pushf
mov
sahf
stos
and
mov
enter
cmp
out
add
dec
js
sbb
or
cmp
or
xchg
sub
cmp
rcrb
and
push
inc
mov
xor
adc
or
dec
das
inc
inc
add
xchg
add
or
sbb
fbld
dec
cmp
dec
mov
loop
lret
xchg
imul
insb
leave
pop
int
ds
rcr
pop
cwtl
aam
pusha
xor
add
rcrl
sahf
enter
sbb
fcomp
and
and
push
sbb
push
loopne
imul
or
jl
adc
pop
add
cmp
push
mov
push
lret
xor
mov
aam
pop
add
js
push
rorb
add
mov
mov
xor
aam
xor
jo
movsl
push
xor
mov
rclb
rclb
adc
sbb
dec
idivb
loop
out
call
sbb
test
ss
inc
aam
xor
out
dec
ficoms
push
mov
push
lahf
es
and
add
sbb
sbb
fldenv
pop
shlb
fiaddl
fdivrl
sbb
inc
push
mov
sub
ljmp
dec
cld
nop
pop
cmc
decl
xor
lock
mov
jecxz
or
push
rol
test
test
pusha
je
push
pusha
cwtl
dec
push
sbb
ljmp
push
or
cmp
sub
lds
bound
aaa
and
and
sbb
jecxz
subl
les
dec
mov
add
push
adc
scas
sub
push
movsb
xchg
mov
add
sub
orb
mov
adc
pop
movsb
push
pusha
mov
push
inc
jp
push
mov
xor
mov
scas
dec
sub
pushf
mov
mov
cmp
ljmp
xchg
adc
es
sahf
sbb
adc
pop
sub
nop
push
daa
push
push
mov
dec
clc
lods
ret
adc
ss
shll
imul
adc
or
pop
jb
lock
mov
rcr
lcall
mov
mov
add
pushf
cmp
push
aam
sbb
cs
divb
push
xor
mov
dec
and
sub
sbbl
add
je
add
mov
push
mov
add
loop
loop
iret
push
cmp
ss
cmp
xchg
pop
add
mov
mov
addb
push
mov
lods
mov
loop
popa
imul
mov
add
xchg
jp
shrb
ja
sbb
je
xchg
jb
enter
jmp
cld
movsb
les
xor
xchg
jo
sub
cs
or
push
bound
fcom
push
cmp
ds
test
cmp
das
or
cmp
cmp
enter
xchg
push
jo
ret
or
add
in
mov
lock
push
ret
fisubrs
xor
mov
pop
lods
add
movsb
outsl
shr
fstpt
cmpsl
shrb
loopne
les
lock
mov
lret
mov
or
add
jp
flds
sbb
sbb
pusha
fadds
or
pop
scas
sub
cwtl
push
cwtl
mov
cmpsl
jo
jo
and
nop
xchg
scas
sub
sub
enter
push
fiadds
add
or
sub
ret
pushf
dec
ds
xchg
xchg
inc
sub
pushf
sahf
mov
rdtsc
xor
ja
push
into
mov
or
mov
ss
mov
or
ret
ljmp
movsl
lds
sbb
add
mov
sbb
or
pop
and
fldpi
popa
adc
fadds
mov
pop
dec
xor
aam
shlb
js
mov
and
adcb
adc
lret
push
dec
popa
test
out
lret
inc
bound
pushf
movsl
push
addl
push
cmc
mov
cmp
ffreep
add
js
je
enter
pop
add
adc
cmp
data16
or
adc
pop
or
ffree
pop
test
rol
pop
dec
push
je
loope
xor
cmp
and
aam
insb
mov
xchg
jecxz
push
add
adc
dec
clc
and
imul
adc
add
loopne
adc
sub
add
lods
sbbb
sub
add
test
hlt
mov
add
shrl
dec
jns
inc
inc
add
add
popf
dec
and
iret
and
lea
ffree
or
notl
inc
cld
xchg
adc
adc
lret
imul
inc
sub
jno
iret
imul
incl
ja
das
addr16
and
test
rorb
mov
shl
rcrb
and
adc
xor
fwait
dec
or
sbb
pop
andb
inc
mov
mov
and
inc
mov
dec
loop
mov
or
orb
ja
push
adc
sbb
mov
dec
sbb
js
mov
ljmp
lods
cmp
dec
dec
cmp
enter
and
rolb
dec
ret
pop
adc
ret
inc
xchg
mov
loop
test
rcr
enter
fsubrs
ret
pop
dec
add
sarb
xor
push
stos
add
rclb
add
aam
or
or
sub
sub
add
es
push
cs
cmp
add
les
and
ret
nop
inc
sbb
sbb
adc
mov
hlt
and
mov
pop
sbb
mov
push
fcmovb
or
pop
mov
sarl
bound
adc
mov
dec
push
push
push
push
xchg
add
push
mov
testl
sub
jnp
jle
mov
mov
cmp
pop
add
dec
adc
dec
movsb
fmull
pop
sub
mov
inc
sbb
pop
rcll
mov
pop
sbb
es
dec
xor
testb
mov
jmp
test
fisubrs
mov
aam
or
int3
dec
mov
sbb
int
mov
roll
mov
ret
les
sbb
add
cs
mov
test
jnp
out
mov
xor
jne
inc
cmp
mov
sub
add
sbb
aaa
mov
pop
jb
stos
stc
sahf
add
push
shrd
push
dec
pop
jmp
out
sub
xor
call
movsb
pop
aam
pop
or
push
ret
pop
add
dec
rolb
cmc
test
pop
lock
and
push
push
bound
rcr
push
push
inc
sbb
fstl
or
dec
mov
movsb
or
les
or
movsb
rol
sbb
jmp
sbb
rorb
jp
inc
enter
adc
ret
pop
or
dec
and
or
test
mov
xchg
xor
movsb
inc
jo
pop
sbb
aam
insl
popa
push
in
cli
test
jnp
sub
sbb
pusha
ret
add
andb
lret
jo
test
fimull
add
mov
xchg
sbb
jo
jo
xchg
sub
push
out
inc
mov
xchg
in
mov
mov
push
icebp
xchg
sbb
or
rolb
test
hlt
mov
in
mov
or
imul
jbe
xchg
sub
xor
mov
cmpsb
cmp
mov
jl
jo
daa
lret
or
loop
lcall
or
adc
je
sub
ficompl
mov
loopne
mov
rorl
push
rclb
jp
dec
mov
push
add
repz
mov
dec
xor
lock
outsb
int3
imul
js
pop
mov
mov
das
and
and
add
or
es
enter
jo
and
ret
xor
or
lods
and
lret
out
or
dec
dec
adc
sub
daa
aaa
sbb
jnp
pop
jb
inc
add
mov
push
add
push
adc
xchg
and
xor
je
push
cmp
add
and
icebp
cmpsb
jno
push
js
in
mov
dec
add
mov
lods
int3
xchg
push
cs
or
cmp
test
fistpll
or
push
jo
xor
in
sub
xorl
stos
outsb
push
mov
mov
pop
push
xchg
repnz
test
adc
fcom
fimull
or
sbb
fs
mov
xor
scas
push
mov
mov
cmp
xor
xchg
xchg
dec
and
inc
and
xchg
xchg
test
lock
xchg
lock
daa
mov
sbb
or
cli
in
dec
inc
mov
xor
hlt
stos
xor
popa
jl
mov
mov
inc
bound
inc
add
or
add
adcb
inc
jp
adcb
icebp
je
or
adc
sti
call
cli
data16
shlb
dec
lods
mov
inc
lcall
cmp
adc
mov
adc
lret
jb
arpl
repnz
lcall
dec
mov
adc
popa
imul
xchg
mov
or
scas
dec
ror
lods
cmpsl
mov
push
cmp
idivl
or
dec
arpl
and
std
int3
scas
rcrl
fcom
pusha
fs
jp
nop
adcb
int3
xor
sarb
ret
pusha
mov
add
ss
dec
loopne
mov
divl
inc
cmp
data16
dec
inc
dec
adcb
nop
and
push
or
rclb
and
adc
mov
rorb
jb
mov
mov
push
hlt
xor
fdivl
orb
inc
or
jno
leave
fidivrs
cmp
adc
mov
sbb
jp
lods
outsl
loope
movsl
or
dec
cmp
pop
push
jo
mov
ret
insb
lods
sbb
xchg
mov
bound
es
dec
push
orl
mov
or
push
scas
andl
inc
lcall
add
repnz
das
std
mov
mov
sbbb
or
or
mov
pusha
subl
cwtl
sbb
cmpsl
pop
popa
out
mov
outsb
jg
xchg
jnp
mov
subb
popl
push
lahf
xchg
mov
push
xor
lds
mov
loope
add
les
cmpsb
dec
test
in
sbb
popf
add
lret
mov
imul
sub
inc
lret
mov
sub
xchg
add
mov
movsb
pop
pusha
add
or
mov
pop
xor
mov
shrb
int3
ljmp
bnd
cmpsl
test
call
divl
pushf
push
int3
test
and
and
xor
dec
pop
cmp
mulb
xchg
add
sbb
sbb
lcall
nop
sub
or
push
jbe
in
sub
jecxz
jo
mov
cmpsl
ret
paddd
push
aam
xor
gs
pop
andb
jl
pop
mov
push
rol
jo
out
ret
jp
rorl
xchg
add
pop
inc
lahf
pop
ret
test
aam
cmp
into
out
pop
hlt
stos
push
xor
sbb
push
xchg
test
cmpb
mov
mov
ret
push
mov
popf
into
stos
outsb
cmp
lods
cmc
sbb
xor
xor
mov
sbb
inc
jb
cmp
sbb
mov
icebp
in
adc
sub
adc
pushf
loopne
sbb
push
inc
das
roll
xchg
movsb
jo
adc
in
or
cld
nop
dec
shlb
push
pop
sub
jne
insb
lods
aad
sub
sub
inc
insl
cltd
sbb
hlt
bound
adc
imul
push
xchg
and
add
dec
jb
mov
sbb
ds
shlb
daa
das
inc
and
sbb
ret
pusha
fwait
loop
mov
pop
sbb
test
add
add
pop
ret
add
imul
rcrb
into
jnp
pop
cmp
ret
subb
cmp
mov
jecxz
dec
and
mov
or
into
sahf
lret
xchg
repz
test
pop
sub
cmp
mov
shrb
push
or
js
je
call
add
pop
push
adc
bound
xchg
push
fsubl
stos
adc
cld
xor
inc
pop
add
or
adc
push
loopne
sub
sbb
mov
lcall
sbb
mov
jnp
rcll
pop
jl
cld
or
aaa
je
dec
push
fdivs
pop
and
daa
xchg
adc
mov
xlat
or
mov
xchg
mov
stos
stos
adc
xor
cmp
lcall
and
cs
cmp
cmp
xorb
dec
xchg
or
ss
or
cs
inc
jecxz
lret
rcrb
jecxz
bnd
lods
decb
push
pop
scas
or
fnstsw
jmp
and
icebp
pop
push
nop
daa
hlt
adc
decl
movsb
mov
test
jle
add
faddl
test
inc
or
push
daa
ret
out
ss
loope
adc
lea
mov
dec
notrack
jno
ss
cmp
dec
jecxz
xlat
inc
and
mov
ljmp
lret
lods
xor
or
dec
movb
es
ret
sub
adc
adc
cmp
ret
inc
inc
lods
insl
pop
jmp
push
pushf
pop
push
push
or
adc
cmp
add
adc
sbb
push
xchg
mov
orb
test
push
les
lret
pop
xchg
add
adc
sub
clc
scas
cmpsb
rorl
call
out
sahf
mov
lret
arpl
sahf
mov
popa
cmp
xor
mov
test
ss
fadd
push
cmp
inc
test
dec
popf
mov
ret
loope
ss
cmp
mov
shll
inc
addr16
ret
roll
inc
cli
repnz
lock
mov
shlb
add
outsb
jb
xor
jp
repz
push
sub
push
xchg
push
je
pop
fsubl
push
leave
jne
inc
add
mov
je
cmp
insb
add
out
adc
jle
cmp
adc
push
lds
fidivrs
xchg
sbb
pop
inc
inc
mov
cltd
dec
sbbb
push
and
loope
rol
stos
and
adc
or
inc
bound
fs
sbb
fs
loop
pop
inc
push
push
push
insb
and
mov
ret
out
bound
jp
sahf
je
orb
jle
mov
mov
dec
loopne
adc
cmpsl
add
lods
lods
sbb
aam
sbb
push
and
push
or
xor
jo
adc
sbb
lods
push
in
or
and
push
nop
xor
gs
xchg
sarb
lock
fldcw
adc
mov
inc
sub
in
dec
sub
int3
xchg
testb
jp
cli
cmpsb
xor
inc
or
inc
inc
rorl
push
mov
xor
and
sahf
and
or
fwait
mov
lcall
sbb
les
dec
jp
pop
xchg
and
je
xchg
rolb
push
cli
add
cmp
data16
push
pop
adc
dec
insb
fldenv
adc
mov
or
mov
or
sub
sub
inc
stos
lock
add
mov
add
jmp
cmp
inc
adc
push
cmp
sbb
xor
inc
mov
loopne
pop
xor
lea
xchg
or
mov
pusha
dec
enter
push
push
add
mov
add
or
movsb
mov
clc
fs
mov
pop
rcr
addb
mov
mov
mov
jne
loopne
fistpl
outsl
adc
mov
and
rolb
lcall
push
lock
or
pop
clc
fistpll
push
fcmovb
stc
sbb
fldz
adc
mov
or
push
jle
rorb
mov
add
inc
adc
test
aas
mov
lea
adc
int3
mov
loope
int3
xor
push
sbb
or
roll
inc
inc
icebp
xor
in
or
add
or
popa
jmp
xchg
aam
push
rcr
ror
mov
xor
xor
push
push
sahf
hlt
fadds
fisttps
inc
and
inc
loopne
or
sbb
sar
in
lock
mov
or
adc
fwait
in
mov
or
add
push
push
idiv
mov
out
xor
arpl
and
mov
in
inc
sbb
fldcw
cmp
xchg
into
push
and
cld
pop
and
mov
mov
rcl
or
fsubrl
push
cld
add
sbb
hlt
add
adc
inc
jmp
fiaddl
hlt
in
pop
adcl
push
ror
push
mov
or
lea
inc
jp
call
adc
call
mov
pop
and
add
add
inc
add
shrb
lar
push
popf
adc
sub
pop
add
test
or
dec
aad
inc
cs
and
loop
ret
or
inc
imul
xchg
adc
iret
cmp
rcr
xchg
arpl
mov
add
test
nop
dec
adc
pop
das
imul
adc
enter
sub
jae
xchg
cli
or
xlat
in
xchg
ret
mov
out
movsb
popf
sub
and
imul
push
jmp
test
xor
mov
cmpsb
jg
push
ss
addb
push
in
nop
push
jge
rol
sbb
mov
pop
jb
or
adc
dec
jge
pop
sbb
dec
push
sbb
movsb
roll
fmul
xchg
sbb
popa
adcb
stos
out
sub
lret
in
sbb
jo
lret
add
push
not
inc
mov
gs
ret
or
outsb
fmul
test
adc
nop
enter
cmp
jo
ljmp
mov
rclb
or
das
cwtl
adc
cwtl
xchg
dec
mov
adc
cmp
sahf
rcrl
inc
or
mov
and
in
imul
sub
sub
sub
push
mov
mov
nop
mov
incb
xor
add
sub
xchg
into
jb
inc
push
lea
sub
cli
adc
dec
mov
push
movb
mov
mov
js
xchg
rolb
lock
test
pop
test
cmp
or
add
push
cmp
mov
xchg
push
cmp
je
adc
mov
rcr
lret
dec
jecxz
faddp
dec
cmp
je
mov
adc
jmp
adcl
loope
mov
and
lret
inc
mov
adcb
test
lret
add
dec
jo
sbb
fidivl
lret
mov
ror
mov
or
xorb
insl
bound
cmp
sub
sbb
mov
dec
sbb
sar
test
dec
sub
xor
sbb
orb
adc
lcall
ret
xchg
mov
loop
scas
loope
jecxz
jp
lret
notb
lods
mov
aam
lock
mov
lods
rcr
faddp
inc
and
movsb
mov
push
push
mov
mov
pop
js
jb
fdivs
lcall
adc
or
popa
mov
loopne
fcoms
cmp
rolb
xchg
fisubs
outsb
pusha
or
ret
mov
push
enter
loope
fld
jno
sbb
ja
or
adc
mov
or
adc
lods
es
roll
outsb
out
mov
mov
cmp
jno
pop
shrb
xchg
add
stos
pop
aad
movsb
lds
sbb
cmp
mov
mov
inc
pop
fsubrs
sub
and
sahf
adc
mov
pop
bound
loop
lods
fs
pop
sbb
xchg
pop
pop
js
mov
sbb
mov
add
lahf
ror
mov
xor
in
sbb
mov
lods
mov
inc
jbe
hlt
lret
or
jp
les
sbb
fdivs
dec
sbb
je
lret
or
fs
fcmove
inc
insb
lods
mov
pop
pop
or
add
cmp
movb
push
xchg
hlt
push
insb
mov
pop
sub
fdivl
dec
lcall
test
jno
cltd
adc
out
sahf
push
push
push
mov
pop
push
js
movsb
mov
lods
inc
fnstcw
fmul
les
ds
repnz
cmpsl
pop
push
dec
sub
add
aam
jb
add
push
xchg
in
sbb
mov
sub
cmpsl
mov
arpl
movsl
out
cmp
je
sahf
xchg
or
xorb
xchg
dec
cltd
mov
sbb
dec
int3
lcall
sub
mov
sbb
adc
fstps
add
inc
lahf
cmp
rolb
lock
jp
push
lock
mov
in
adc
enter
js
aam
sbb
rol
and
add
loop
add
sub
test
movsb
xlat
xor
cmp
adc
orl
mov
jp
pop
jp
ret
add
testl
pop
xchg
and
mov
stos
mov
xchg
sbb
dec
push
and
xchg
pop
nop
xor
rcl
into
push
data16
xor
cmpsl
mov
sub
push
mov
sub
pop
nop
sbb
push
mov
pusha
add
in
and
fidivrl
pop
outsb
movaps
scas
xchg
out
cs
rorl
pushf
xorb
or
subl
rcrb
ss
cwtl
mov
mov
ljmp
mov
shr
sub
fs
test
sbb
cmp
lock
push
movsl
or
and
scas
xchg
dec
pop
lods
mov
call
adc
mov
sub
sarb
sbb
xor
pusha
or
sbb
xor
xor
nop
mov
pop
cmp
stos
mov
push
ret
xor
pop
jne
lret
sbb
bound
jne
mov
cmp
dec
pushf
inc
jo
mov
mov
cmp
xchg
ret
faddl
add
adc
or
inc
lcall
mov
cli
jp
jp
xor
inc
and
test
mov
rclb
sbb
inc
fdivs
divl
dec
movsb
lock
lods
push
or
data16
cmp
gs
cmpsb
rclb
push
sub
lret
lods
popl
sahf
xchg
daa
dec
adc
nop
dec
mov
nop
xchg
cmc
test
dec
pop
jmp
xor
or
movsb
mov
inc
inc
arpl
push
adcb
fidivs
add
ret
fs
pop
jno
cmp
cmp
jb
push
and
loopne
pop
inc
loop
ljmp
dec
add
pop
subb
loop
sub
fcomip
adc
in
mov
pop
es
hlt
cmp
or
add
sbb
lock
add
movsb
loope
test
mov
sbb
rolb
mov
inc
dec
stc
mov
stc
neg
dec
push
scas
push
mov
sbb
insl
test
insb
mov
fisttps
and
add
decb
loopne
xor
or
or
cli
iret
movsl
adc
arpl
mov
lret
lods
iret
and
andl
or
mov
pop
test
add
xlat
add
add
inc
ljmp
or
sub
fwait
push
call
pop
cwtl
mov
lret
adc
mov
push
add
es
or
mov
sbb
mov
adc
mov
and
nop
mov
icebp
add
pop
mov
lods
mov
sbb
push
push
and
loopne
pop
in
push
xbegin
and
inc
and
cwtl
cmpl
push
jb
cmp
xor
pop
pop
rol
push
sbb
in
pop
sbb
adc
arpl
or
inc
sbb
jecxz
add
movsb
mov
cmp
adc
and
dec
gs
mov
icebp
shll
jecxz
in
mov
sbb
or
fstps
icebp
cmp
dec
xchg
add
mov
pop
lock
lahf
add
orps
dec
sbb
inc
jne
or
dec
cmp
cmp
lds
ds
pop
nop
ret
fildl
insb
mov
sbb
adcb
sbb
push
imul
push
ror
xorl
and
rorl
adc
cmpsl
dec
adc
daa
adc
push
inc
cmp
js
outsb
mov
cmpsl
and
add
loopne
mov
punpckldq
popa
push
xchg
stos
xchg
push
dec
ret
xchg
add
adc
mov
dec
fimuls
shlb
jae
call
sahf
clc
push
lods
sub
add
adc
inc
lods
pop
pushfw
mov
cmpsb
cmpsl
lock
pusha
cmp
sarb
mov
loope
out
test
pop
add
add
aaa
jmp
js
repnz
mov
pop
dec
movsb
and
sbbb
ljmp
mov
and
test
mov
mov
push
xchg
andb
sarb
or
rcl
or
sub
pop
push
adc
sbb
adc
inc
xorl
lret
or
dec
cli
mov
dec
lock
pop
ficoms
add
push
sbb
xor
sbb
mov
sbbb
lods
dec
mov
out
ja
cmp
popa
or
test
or
or
jp
add
imul
push
loop
lret
jae
push
stos
jbe
jp
add
or
dec
pusha
add
dec
or
mov
or
outsl
js
int3
test
sahf
mov
mov
add
push
fsubp
jp
inc
push
popa
jmp
adc
dec
cli
push
rorl
gs
pushf
adc
sbb
cwtl
arpl
adc
xchg
mov
sbb
sbb
push
adc
out
aam
and
pop
xchg
mov
aam
or
mov
mov
pushf
sub
or
fnstsw
or
fiadds
bound
sbb
adc
js
faddl
add
pop
je
mov
mov
mov
aam
or
xchg
dec
or
popa
and
jo
lock
jmp
add
fcomps
mov
lods
call
push
cmc
and
insb
adc
testl
out
enter
inc
or
xor
push
scas
test
pusha
leave
sbb
ret
push
cmp
or
push
mov
loopne
and
out
push
shr
loop
scas
cmp
push
adc
adc
orb
test
aas
nop
pop
aam
pop
xchg
insb
loop
dec
shr
xor
cmp
cwtl
loop
cmp
rcr
test
hlt
sbb
movb
js
and
add
ret
ret
sarl
movsb
sub
mov
mov
pusha
push
loope
imul
je
push
and
cltd
les
fcoml
sub
dec
mov
or
dec
fmull
jp
mov
adc
fcmove
fcom
addb
mov
cmp
and
mov
in
mov
stos
adc
repz
dec
jge
inc
mov
add
hlt
dec
add
rcll
inc
sub
add
cmpb
dec
or
adc
cmp
ret
mulb
mov
cmpsl
fidivl
iret
shrl
jp
stos
lcall
aad
push
divl
inc
jmp
add
push
stc
adc
orb
lods
add
or
jae
sbb
xchg
in
add
jle
or
mov
ret
int3
cmp
add
enter
xchg
push
loope
fisubl
mov
cwtl
jmp
sbb
xor
shrb
add
adc
xor
lahf
enter
out
mov
repz
fcoml
jp
adc
dec
std
cmpsb
add
push
addb
cmpsl
push
sbb
add
mov
cld
adc
pop
xchg
add
ljmp
shrb
roll
rcl
dec
adc
popa
loopne
inc
xlat
dec
cmp
add
sbb
clc
xor
adcb
lods
or
aas
repz
lods
or
xor
xor
or
lret
add
aaa
jnp
js,pt
aaa
dec
sbb
xchg
xor
push
sbb
sub
icebp
add
pop
std
jle
cmpb
or
fwait
push
xchg
inc
idivl
jnp
mov
cmpsl
xchg
mov
loopne
sbb
cmp
stc
jb
sbb
or
lock
das
das
cmpb
adcb
sbb
jg
and
lods
loope
sub
inc
aam
xchg
mov
add
insb
inc
fst
inc
lcall
out
inc
test
sbb
in
mov
xor
xchg
xchg
stos
push
cmp
pop
or
cwtl
jmp
xlat
repz
imul
add
sub
inc
mov
dec
das
jge
pop
or
mov
dec
sub
out
add
push
cmp
and
aam
iret
popa
push
sbb
adc
rolb
das
and
mov
sub
mov
shlb
shlb
xchg
push
sub
rolb
fstl
mov
aad
rclb
stos
clc
inc
decl
cwtl
adc
dec
call
push
je
mov
dec
add
jnp
mov
imul
dec
fmuls
stos
xchg
out
rcl
insb
xchg
sti
pop
pop
shr
pop
sub
pop
dec
gs
or
sub
mov
sub
push
add
es
adc
add
inc
aas
and
inc
fdivs
test
call
mov
xor
shl
sti
daa
fistps
rorb
add
test
cmp
popa
test
divb
dec
imul
jo
fstps
mov
or
sbb
lods
add
shrl
lret
dec
ret
pop
mov
inc
xor
clc
xor
daa
decb
add
sar
leave
lret
dec
dec
and
xchg
mov
fldenv
enter
jne
add
mov
mov
pop
and
add
or
std
movsl
or
shl
std
pop
shr
mov
rorl
shr
jge
mov
pop
ret
jmp
cmp
or
push
stos
sbb
jo
shrb
add
out
mov
pop
es
sub
jle
ds
push
mov
sub
xor
xchg
lods
dec
mov
mov
shlb
fisubrs
push
push
mov
mov
mov
and
fdivrs
lds
push
sub
loop
mov
sub
sbb
xchg
and
hlt
jbe
jmp
insb
mov
fstl
repnz
leave
flds
ja
mov
pop
and
aaa
pop
insb
mov
in
push
rorl
xchg
aaa
push
pushf
dec
rorl
clc
adc
mov
dec
mov
cmp
add
mov
hlt
add
mov
cli
aas
cmp
fsubrs
jl
add
sub
call
jo
ljmp
inc
xorb
inc
es
push
inc
fsubs
imul
adc
daa
inc
pop
cmc
aas
add
rclb
mov
cmp
mov
pop
adc
sarb
gs
vprotb
loopne
sahf
nop
xor
pop
js
inc
mov
xor
cmp
xchg
mov
sbb
sbb
xor
insb
arpl
mov
add
nopl
push
movsb
pusha
mov
addl
push
xchg
or
mov
les
cmpsb
testl
sub
pop
jae
xchg
rcl
xchg
inc
jecxz
int3
pusha
insb
dec
and
mov
mov
js
mov
and
mov
insl
pushf
or
adc
push
or
enter
ja
mov
es
cli
orb
les
mov
pop
sbb
ret
insb
add
popa
lcall
mov
or
inc
adc
xorl
push
and
popa
dec
popa
jo
orl
adc
mov
sbb
push
shrb
aam
push
ret
fldcw
xchg
sbb
adc
add
fstps
cwtl
mov
sbb
pop
rcll
push
stos
in
rol
jns
dec
add
shlb
add
inc
cmpb
push
or
mov
dec
test
adcb
jo
insb
dec
xor
push
mov
or
jle
xchg
movsl
addl
add
mov
in
jns
ret
pop
cmpb
lock
cmp
movsl
push
xor
adc
ss
xor
into
or
rolb
sahf
xchg
push
inc
sbb
push
or
pop
arpl
dec
loopne
test
nop
popa
stos
push
xchg
int3
or
or
mov
icebp
insl
ljmp
fimull
push
xchg
inc
sub
fs
cmp
pop
pop
js
inc
cli
lock
or
xchg
lcall
shlb
popa
sub
fndisi(8087
test
xor
movsb
ss
nop
dec
push
inc
cmp
sbb
add
jp
and
pushf
or
cs
add
or
sub
das
ljmp
popa
push
push
mov
inc
and
int3
cmpsl
pop
into
data16
mov
or
sub
subl
out
cmp
pop
and
call
test
mov
jo
sbb
dec
popa
sub
aam
dec
pop
fsub
int3
or
push
cmp
pusha
in
cmpsl
push
sbb
sar
aam
inc
das
or
cmpb
mov
and
rorb
call
push
mov
add
dec
xlat
adc
dec
add
mov
aaa
add
or
cmpsb
fidivs
out
sub
addb
mov
sub
movsb
jb
orb
adc
jmp
cmp
sub
scas
sbb
cmp
sbb
or
ret
xor
xchg
stos
xor
mov
rcll
xchg
pushf
sbb
pop
cld
int3
je
fcmovb
loopne
dec
insb
outsb
sbb
shlb
inc
sbb
adc
adc
jecxz
add
push
cmp
gs
or
mov
push
mov
repnz
mov
add
aam
jno
sbb
inc
adc
jle
mov
je
in
sub
add
clc
add
sahf
cmpsl
adc
in
mov
mov
test
mov
dec
rorb
or
sbb
insl
mov
or
in
adc
mov
sub
pop
or
in
cmp
sbb
sbb
mov
dec
adc
jmp
add
add
ret
cmp
jne
and
clc
jle
mov
not
inc
or
cmpsl
xchg
and
push
sub
cmp
xor
or
ja
pop
fcmovu
inc
add
jbe
push
divb
sbb
sub
jmp
adc
sbb
xchg
jge
in
mov
lock
in
sbb
dec
int3
inc
movl
or
or
js
or
add
call
call
ret
lds
roll
lea
pop
in
sub
decl
xlat
jnp
and
mov
ret
push
jne
sbb
mov
sub
mov
xchg
mov
jo
inc
push
or
and
ret
ret
loop
mov
scas
dec
inc
rorb
inc
loop
dec
les
dec
call
sbb
mov
lret
xchg
mov
in
dec
psubsb
movsl
mov
fcoml
pop
xchg
int3
ja
not
jp
out
loopne
adcb
or
je
je
inc
inc
movsb
inc
dec
inc
pusha
les
jne
ljmp
sub
rcrb
add
push
cmc
jp
je
lods
xorl
push
pop
inc
rcll
xchg
nop
sbb
test
sbb
push
push
push
stos
aam
or
les
cmp
push
xor
mov
push
loopne
xchg
shrb
shll
mov
pushf
or
bound
inc
lret
jmp
and
ret
xor
enter
gs
push
pop
insb
mov
add
pop
pop
inc
fdivp
mov
pop
pop
pop
push
test
popf
mov
sub
add
jbe
into
xor
into
inc
lods
add
mov
push
int3
loopne
test
xor
data16
dec
pop
mov
jbe
inc
pushf
and
xor
ljmp
mov
fcoms
adc
inc
inc
xor
pop
push
nop
and
adc
sbb
je
pusha
ret
sbb
push
ret
add
inc
mov
mov
cltd
rcll
lret
inc
aam
lret
adc
or
clc
loope
lea
cltd
xchg
xor
mov
movb
or
loope
loop
pusha
fs
leave
test
loopne
cmp
rcr
test
cwtl
ss
das
fwait
mov
cwtl
test
into
add
sub
scas
mov
cmpsb
lock
inc
mov
jmp
loop
xor
pop
inc
pop
outsb
xchg
pushf
icebp
xor
push
notb
data16
push
fidivs
add
pop
pushf
pop
cs
lahf
into
pop
sbb
jp
adc
addb
sbb
jno
push
or
cli
sbb
popa
add
ljmp
imul
loop
dec
repnz
aam
inc
je
dec
icebp
adc
sub
pop
mov
xorl
inc
scas
aam
pop
lea
dec
es
mov
in
xor
pushf
andb
add
sbb
pop
das
jle
loopne
ret
dec
add
ds
es
imul
or
dec
mov
add
jo
aam
and
mov
xorb
fisubs
ljmp
pushf
add
xchg
mov
stos
into
jne
xchg
mov
cwtl
mov
cwtl
ljmp
adc
fs
pushf
roll
inc
icebp
js
fisubl
icebp
filds
xlat
jecxz
push
fldl
incb
popf
test
shl
sbb
push
stc
mov
and
daa
cmp
pushf
ret
pop
or
mul
xchg
cmpb
sbb
sbb
fimull
test
outsb
lods
sub
lcall
scas
adc
jae
mov
sbb
out
push
dec
loope
mov
sbb
jb
pop
rolb
xchg
lock
int3
xor
pop
ljmp
insb
or
ret
mov
inc
pop
sub
sub
dec
mov
lcall
pop
bndstx
add
cmp
xor
push
imul
sub
dec
pop
add
add
or
pop
push
ss
adc
cmp
sub
es
lods
mov
enter
cmpb
inc
jo
lea
loopne
jno
loope
add
cli
xchg
sbb
xor
sbb
cmpsl
xchg
mov
and
ficompl
ljmp
sub
pop
bound
cwtl
roll
and
rclb
sti
or
jecxz
ret
and
and
sbb
push
xor
jge
xor
xchg
lret
cmp
cld
dec
cmp
pushf
ss
xchg
pusha
pop
loope
jnp
mov
inc
daa
outsb
mov
push
mov
and
xchg
sbb
lock
shr
sub
rorl
and
pop
jbe
or
andb
mov
mov
push
out
dec
dec
lret
jo
or
cmp
cmpsl
xchg
jle
lods
pusha
icebp
xchg
mov
jle
jp
inc
sub
cmpsb
mov
jb
lods
and
jg
adc
and
dec
jmp
or
mov
addb
ja
dec
inc
pushf
lea
push
sub
or
mov
xor
xchg
jb
xor
sbb
xor
mov
cli
scas
aad
sbb
inc
cs
mov
pop
pusha
cmpb
mov
and
push
pusha
fcomps
mov
lock
dec
loope
xor
push
enter
or
sub
sbb
push
pop
cmp
std
cmp
mov
gs
mov
jo
mov
add
mov
jne
test
add
lods
add
push
js
add
cmp
popa
cmp
jo
add
push
lock
test
imul
nopl
adc
addb
add
cmp
into
and
insb
lea
mov
mov
sub
pop
sbb
adc
mov
cmp
imul
add
push
push
jmp
stos
and
arpl
je
mov
sbb
mov
adc
andl
xchg
scas
into
or
rorb
lahf
addb
jmp
in
cmp
shlb
cli
dec
xor
adc
pop
mul
add
int3
mov
mov
rcrb
jb
repnz
adc
ss
xchg
xor
xchg
xchg
adc
inc
cmp
orb
pop
test
movl
jo
xor
js
or
int3
adc
sub
mov
cmc
das
xchg
fcompl
adc
movsb
pop
nop
or
sub
and
sbb
adc
inc
mov
subl
xchg
mov
cmp
out
test
insb
push
push
or
andl
dec
mov
add
call
dec
mov
inc
or
repnz
imul
rolb
ljmp
dec
mov
cmp
sbb
push
jb
lea
leave
adc
psubusb
jbe
jo
push
lea
test
pusha
add
push
test
cmp
sar
sub
sub
outsw
push
cmp
jnp
push
js
jp
mov
lods
mov
or
aaa
gs
iret
idivb
adc
test
pop
lea
mov
sbb
sub
cmp
push
out
jo
xchg
test
incb
adc
mov
rolb
test
lcall
enter
xorl
xor
lods
dec
pop
jmp
orl
into
xchg
into
add
mov
or
lret
mov
mov
out
imul
dec
push
lock
rorl
movsl
xchg
test
adc
add
sub
ror
test
sbb
test
fsubr
andl
jle
inc
cmp
push
xchg
inc
jb
test
call
loopne
popf
mov
arpl
mov
dec
les
nop
mov
popf
and
in
enter
add
rorb
sub
addr16
cmp
add
cmp
mov
mov
jb
sub
mov
rcrb
imul
ficompl
push
arpl
jne
ror
or
lret
test
leave
mov
aad
adc
push
jbe
mov
clc
or
into
or
xchg
xchg
rcrl
add
sti
dec
push
je
and
jb
addr16
lods
popa
lcall
push
pop
adc
cltd
xlat
fsts
mov
xchg
sub
xchg
mov
push
sub
inc
cmpsb
and
cmp
jb
out
add
je
and
mov
es
int3
sub
dec
mov
lret
bound
pop
or
adc
add
ja
inc
and
pop
inc
jb
and
adc
dec
test
or
jmp
cli
xor
mov
dec
pop
nop
sbb
dec
shlb
lods
and
mov
mov
decl
inc
mov
push
jg
les
sbb
mov
inc
cmpsb
pushf
clc
jnp
xchg
cmp
cmp
mov
mov
mov
xchg
jecxz
flds
ds
and
cltd
pusha
sub
imul
mov
mov
mov
and
jmp
push
sbb
cmp
lret
cwtl
jo
popa
out
xor
mov
push
test
adcb
cmp
xchg
je
sar
and
lcall
cld
mov
push
mov
mov
loop
loopne
dec
pop
cmp
pop
test
dec
dec
xchg
lods
fs
lea
or
loopne
out
lret
lods
and
ss
rcrb
push
sbb
js
pop
outsl
mov
push
mov
cmp
pushf
mov
shrb
sbb
bound
dec
test
out
inc
mov
xchg
mov
call
mov
sbb
pop
pop
adc
xor
cmp
or
or
pop
es
or
or
sbb
rcl
mov
add
sub
push
ljmp
mulb
push
leave
mov
xchg
mov
add
rclb
into
fldenv
cmp
fisubrl
dec
mov
and
nop
xor
and
inc
jmp
rolb
and
push
rcll
add
fsubs
rorb
sbb
adc
pop
sbb
and
jo
mov
jo
or
jbe
sub
push
scas
lret
mov
shr
push
sti
les
add
or
push
add
xor
cmp
movsl
shl
mov
sbb
popf
bound
sahf
push
js
and
cmp
inc
enter
or
and
cmp
inc
pushf
and
and
cmp
add
fadds
out
mov
push
pop
test
pop
and
cmp
jl
and
sbb
push
hlt
add
xchg
or
cli
clc
sbb
popf
and
jo
and
stos
jnp
mov
cmp
mov
sub
sbb
dec
mov
or
lods
mov
cli
or
add
mov
lret
dec
sub
push
mov
lcall
push
pop
bound
loope
mov
xchg
add
mov
sub
cli
data16
cmc
addb
inc
or
adcl
dec
xor
mov
ret
push
fdivrl
cmpl
sbb
mov
movsb
lock
mov
mov
dec
pop
ret
xor
dec
push
out
shll
adc
sbb
mov
sub
dec
rolb
push
in
dec
push
fmull
enter
jl
inc
push
jb
and
stos
adc
es
mov
popa
inc
lods
sub
fs
insb
je
or
mov
pop
add
jecxz
dec
cwtl
jg
pop
mov
dec
lods
imul
movsl
enter
sub
stos
enter
xchg
ret
movsb
imul
sbb
ret
cwtl
mov
bound
mov
or
push
push
adc
or
test
or
pop
fcompl
enter
stos
pop
lods
xchg
and
sub
sub
scas
xor
leave
or
sti
nop
rolb
sub
outsb
xor
je
push
adc
pop
lods
jle
and
cmp
pop
push
arpl
pop
rcrb
bound
mov
and
sar
test
pop
cmp
outsb
sbb
lret
sbb
and
sbb
sarb
cmp
sub
idivb
fcmove
mov
sbb
cltd
ljmp
ds
pop
cmp
cmp
movsb
rol
jo
pop
cmp
push
adc
js
add
push
push
cmp
sub
sub
sub
xchg
lock
add
daa
jle
arpl
daa
or
adc
mov
ret
loop
or
loope
out
pop
add
sbb
inc
xchg
push
sub
adcb
cmc
sbb
adc
test
pop
or
xchg
movsb
mov
dec
adc
add
daa
sarb
mov
test
and
jle
or
sub
inc
push
outsl
pop
outsl
jmp
sub
lds
adcb
push
xor
mov
inc
jbe
and
pop
call
sub
popf
faddl
add
aam
adc
xor
sbb
or
sbb
pusha
add
mov
mov
ret
dec
pop
mov
add
jo
xchg
add
fs
ret
add
jle,pn
xor
test
mov
pushf
mov
xor
aam
filds
js
lret
mov
mov
fs
and
xor
popf
imul
dec
out
ret
enter
mov
xor
daa
pop
adc
out
nop
xchg
movsl
stos
adc
cmp
sbb
mov
rorb
nop
pop
sub
iret
or
stos
iret
orb
enter
cmp
rclb
js
fs
adc
push
xchg
xor
xor
lock
dec
jo
call
imul
and
sbb
pusha
mov
aam
orb
pop
xor
mov
fs
pop
add
out
outsb
or
cmp
pushf
inc
scas
sbbl
repnz
addb
int3
inc
lret
insb
mov
ficompl
or
aam
jno
or
ljmp
inc
inc
sub
ret
pusha
popa
lods
enterw
dec
ret
clc
pop
or
push
arpl
repz
lcall
ret
js
or
aaa
es
push
pop
inc
inc
das
pop
xor
adc
adc
dec
rclb
mov
aad
push
loope
adc
lods
mov
mov
test
inc
jmp
push
icebp
add
lds
ss
leave
int
pop
inc
ss
pushl
rol
pop
ret
ljmp
and
pop
movb
jp
bswap
test
mov
movsb
jp
adc
insb
popa
mov
xor
push
into
mov
inc
dec
lret
dec
repz
call
push
push
jp
sbb
push
mov
push
dec
or
outsb
cmp
inc
add
push
cltd
sbb
inc
iret
mov
test
bound
pop
xorb
cwtl
xor
jp
xor
pop
pop
inc
inc
rclb
mov
ds
enter
xchg
pop
xor
int3
xchg
test
lods
sub
jl
cli
push
pop
test
jp
sti
or
pop
mov
les
fmuls
sbb
inc
sbb
mov
cs
jae
pop
sub
adc
lods
sbb
sub
add
add
mov
mov
ret
sub
mov
stos
outsb
scas
mov
movsb
jmp
clc
js
adc
xor
ret
inc
mov
lods
jne
cmpl
mov
das
mov
add
mov
cmp
push
cwtl
insl
sub
addb
or
push
and
and
mov
pop
rolb
pop
add
xor
inc
sahf
mov
into
push
lods
loopne
les
je
push
xor
or
mov
test
loopne
sbb
subb
daa
xor
add
loopne
pop
cmpsb
dec
sbb
xchg
push
nop
adc
dec
movnti
cmpsl
loop
sbb
or
and
and
or
rcrb
lret
push
push
pop
ret
fcomps
jb
push
aam
bound
and
push
push
nop
sbb
add
adcl
into
push
mov
enter
jb
and
dec
mov
or
xchg
xor
inc
into
test
js
add
in
cmp
popf
dec
mov
pop
inc
jecxz
add
jmp
mov
add
jo
mov
mov
adc
jb
enter
pop
jae
das
mov
adcb
sbb
cmp
hlt
jo
sahf
sbb
shl
push
sub
cmp
sbb
push
push
inc
fldl
push
cs
cwtl
dec
mov
jp
xor
pop
cmp
pushf
add
loop
pop
adc
push
mov
ficompl
inc
cmp
ja
stos
jl
jle
and
inc
add
test
cs
mov
fs
sbb
outsb
popa
sub
inc
orl
sbb
fidivrs
sub
rolb
mov
ret
push
jb
jmp
adc
xchg
mov
sbb
sbb
push
add
and
imul
xchg
push
into
rclb
std
mov
test
mov
dec
xchg
shl
rcrl
sbb
pop
dec
or
sbb
shlb
lods
or
fnstcw
or
addr16
movsb
dec
dec
and
and
cwtl
rcrb
sub
sbb
sub
lcall
xchg
das
pusha
roll
fldt
lcall
add
adc
adc
xor
insl
inc
ss
and
icebp
sbb
add
jo
adc
movsb
daa
pop
adc
sub
xor
das
jne
testb
mov
and
jmp
adc
je
dec
inc
arpl
push
xchg
cmp
push
ret
enter
mov
fs
add
mov
loop
out
xchg
fmull
push
lods
xor
rol
mov
mov
or
cmp
mov
jne
orb
cli
jo
mov
and
iret
pop
and
pusha
dec
loop
rolb
fdivl
mov
or
xor
and
inc
ret
fidivrs
pop
add
push
sbb
out
dec
loopne
test
lods
dec
sarb
xor
arpl
nop
or
jne
mov
cs
sbb
jnp
test
insb
jbe
fs
mov
add
cmp
jl
add
rcr
in
lret
ficompl
in
pop
fiadds
push
sbb
pop
dec
stos
inc
cmpsl
ror
sbb
lcall
dec
or
shr
mov
cli
inc
or
xchg
push
mov
push
out
pop
jp
or
push
stos
push
and
bound
mov
and
or
pop
jne
enter
xchg
les
addr16
adcl
push
xor
daa
flds
daa
or
popa
or
and
jo
call
int3
xor
or
jg
mov
pop
xchg
and
or
push
or
outsl
ret
out
mov
test
inc
sahf
mov
test
stos
push
add
mov
lea
icebp
adc
or
cltd
mov
mov
add
inc
lret
repz
jne
jnp
mov
bound
xor
dec
test
cwtl
sahf
or
inc
dec
cmp
and
ds
jbe
or
testl
call
sub
cld
cmp
divl
fdivr
sbb
outsb
inc
daa
add
inc
out
cmp
xchg
jb
sbb
xor
xchg
jb
push
jbe
lret
add
jmp
xchg
ret
adc
addb
in
push
imul
push
or
and
push
sub
pop
and
dec
jle,pt
imul
idivb
jo
sahf
in
cs
add
or
adc
pop
mov
mov
adc
imul
xchg
pushf
lods
or
push
mov
nop
dec
lret
and
pop
ret
adc
in
loop
cs
and
dec
lret
addl
push
mov
pop
call
js
dec
inc
dec
fsubl
sub
mov
xor
leave
push
mov
mov
sbb
std
fisttpl
sub
ret
dec
mov
pusha
mov
add
jle
cmp
gs
sbb
insb
push
cmp
leave
inc
xchg
push
adc
je
nop
push
push
xchg
jo
inc
shlb
and
adc
sahf
push
add
loopne
xchg
and
push
and
ficoms
lcall
mov
xchg
xchg
ret
pop
cmp
cmc
xlat
sbb
jo
push
and
jl
mov
jo
inc
cmp
ret
xor
cmpb
pop
and
pushf
lcall
ljmp
or
jp
mov
cmp
or
outsb
push
pop
dec
xchg
jecxz
xchg
pop
xor
sub
pusha
add
adc
dec
sub
lret
test
pop
mov
jp
shlb
lret
movsl
sbbb
and
stc
pop
dec
es
xchg
pop
bound
shlb
inc
loop
xor
fwait
jo
sbb
inc
mov
js
push
sahf
mov
daa
inc
add
xchg
push
pop
sti
nop
mov
push
sbb
add
add
dec
sbb
push
andb
stos
sbb
fisttpll
enter
push
int3
lret
jp
xor
and
sbbl
cli
enter
sub
inc
shlb
lret
pop
push
in
push
xchg
sbb
push
inc
bound
ret
fisubl
jp
nop
adc
sbb
lock
dec
in
ja
add
xchg
daa
dec
pop
jo
popa
mov
rorl
in
jp
pushf
movsb
mov
out
adcb
pop
mov
xor
bsf
push
or
and
aad
push
inc
test
wbinvd
sbb
out
fcoml
pushf
or
add
and
inc
testl
int3
and
nop
les
inc
mov
ficoms
fstps
out
popf
test
dec
xchg
jb
or
fisttpll
pop
in
xchg
loopne
pop
mov
push
push
sub
jo
stc
rol
repnz
loope
push
xor
pushf
xor
sahf
add
inc
jp
push
and
mov
jmp
pop
lret
or
inc
jb
rclb
xchg
mov
xchg
mov
jl
es
call
int3
mov
ret
bound
mov
addb
mov
mov
and
and
dec
xchg
mov
lcall
push
sub
mov
xchg
jo
fidivs
shlb
insb
mov
jbe
inc
addr16
pop
ficompl
mov
xor
sbb
cmpsl
sub
je
or
push
cmp
loopne
loopne
leave
push
sub
ret
nop
xchg
pop
jmp
rolb
rolb
je
ja
pusha
sub
ljmp
and
movsb
shl
pop
call
bound
xor
loope
fisubrl
in
add
daa
or
push
pop
pop
pop
lock
dec
ja
lahf
loopne
dec
cmp
push
push
loope
lea
jecxz
jmp
cli
jne
sarb
fsubl
ss
push
mov
lock
ret
jge
jmp
or
je
mov
lret
mov
mov
pop
mov
cmpsb
push
push
lds
push
cs
and
das
pop
inc
out
jl
xor
cmpsb
test
fs
test
inc
sahf
xor
inc
mov
xchg
lock
out
pushf
push
fimull
mov
cmpsl
insb
sub
cmp
clc
push
loop
inc
jle
loope
loop
jmp
push
mov
push
lret
or
nop
js
lret
push
cwtl
les
add
pop
test
cmpsb
pop
lcall
mov
add
pop
aam
pusha
xchg
pop
xor
js
jae
xorb
adc
adc
pop
lret
fst
nop
mov
sbb
push
xchg
sbb
mov
cmp
les
sbb
add
push
ss
pusha
mov
xchg
sarb
mov
add
sbb
xor
fimuls
jno
cwtl
outsb
mov
enter
ret
nop
mov
jp
jne
pop
add
aam
jle
ret
js
int
inc
sub
cld
sub
sub
dec
jmp
rcll
sbb
orb
pushf
sub
dec
rorb
or
push
dec
adc
test
test
data16
into
rolb
xor
sbb
push
aam
loope
addr16
mov
or
mov
or
inc
and
cmpsb
repnz
add
lock
or
ret
push
rcr
sub
inc
enter
jmp
xchg
cwtl
cmp
xchg
push
std
inc
test
xorb
xor
pop
lcall
fists
mov
push
cvtps2pd
jo
imul
jo
pop
out
and
xchg
idivb
mov
pop
adc
cmp
jno
outsl
sbb
mov
pusha
sbb
loope
mov
adc
xchg
orb
cltd
cmpsl
pusha
or
clc
xadd
cmp
sbbb
xchg
aam
jne
cmpsb
xor
xor
out
jp
jmp
mov
pop
xchg
jbe
mov
into
loopne
pop
push
mov
mov
cmp
cmp
or
out
popa
and
inc
cmp
sub
xor
lret
sub
adc
dec
dec
mov
and
ret
cltd
loop
jbe
dec
dec
sbb
jmp
bound
sub
cmpsl
rcrb
push
cmpl
adc
push
sub
xor
push
or
sub
or
arpl
daa
push
pushf
pop
sahf
call
or
clc
push
arpl
sbbb
and
pusha
test
xor
sbb
pop
inc
pop
sbb
mov
out
fsub
lods
pop
call
adc
mov
leave
shrb
mov
out
jl
or
cli
push
pop
clc
or
sbb
mov
xor
in
xchg
add
inc
mov
rolb
add
leave
sbb
and
mov
sub
jle
lods
je
cld
scas
jns
mov
ds
nop
outsb
jae
in
pusha
xor
adc
lods
psubusw
mov
push
ret
xor
adc
pop
mov
ret
adc
sub
aaa
inc
cmp
ds
xchg
sbb
xchg
popa
push
roll
sti
or
adc
daa
or
int
cmp
cmp
sbb
adc
call
inc
sar
inc
andb
aas
call
jne
int3
call
shll
fsubl
call
leave
sysret
or
xchg
lock
add
mov
mov
dec
test
inc
sbb
je
popa
or
adc
pinsrw
sti
adc
jecxz
xor
cmpb
js
push
or
stc
jns
lods
clc
outsl
mov
sub
rorb
inc
popa
sbb
dec
dec
fmuls
jne
pop
cli
pop
mov
daa
cmp
jne
pop
inc
mov
push
inc
add
ret
test
push
add
js
and
mov
adc
lret
cltd
sub
test
lret
cmp
iret
cmp
sub
leave
sti
mov
out
ror
pop
sub
pop
and
push
orb
cmp
push
loope
mov
mov
dec
sbb
sub
loope
mov
dec
daa
hlt
xchg
xchg
cmp
add
pop
or
inc
lret
xor
cmpb
insb
int
sbb
fdivrp
adc
push
in
jp
inc
or
dec
ljmp
xchg
push
fsubrs
lret
push
bound
mov
jp
int3
or
pop
push
push
xchg
mov
adc
outsl
fidivs
and
popa
sub
xorb
loop
cli
mov
call
push
push
sbb
daa
push
int3
shlb
popa
inc
imul
sbb
dec
push
push
lahf
sbbb
cmp
sub
dec
int3
mov
pop
sar
sarb
ret
inc
ret
dec
xchg
inc
sbb
or
and
in
movsl
loop
sbb
into
push
or
push
sbb
repnz
fidivs
popa
dec
lods
add
sbbl
add
sub
rorb
movsb
loope
inc
push
push
and
outsb
pop
rcl
xchg
or
sbb
mov
out
int3
adc
push
fs
adc
mov
call
mov
test
mov
sbb
pushf
sbb
ds
sub
cmp
cmp
hlt
cmc
bound
or
mov
add
dec
stos
xor
ljmp
lock
lcall
sbb
lods
in
lock
adc
fs
push
add
or
or
jo
push
cmp
daa
aam
call
dec
insb
add
xchg
pusha
and
imul
sub
dec
lock
cmp
cmc
es
popa
pop
popf
pusha
jo
adc
pop
sti
mov
insb
loop
push
test
add
adc
mov
les
js
jl
mov
loop
inc
push
and
sub
xchg
mov
jge
fisubrs
xchg
jp
loopne
lcall
jle
jbe
pusha
xchg
mov
push
aad
cmp
mov
roll
mov
testb
sub
lods
mov
daa
lock
push
loope
push
pusha
mov
in
push
ss
out
sbb
dec
push
jb
in
mov
adc
cmp
or
add
adc
push
xchg
loope
xor
iret
xor
and
jnp
cli
add
mov
outsb
jp
adc
sub
jmp
sbb
loop
ret
shll
movsb
or
mov
fs
or
pusha
mov
pushf
add
ja
and
jecxz
cmpsb
fs
loope
imul
loop
fidivs
repnz
push
mov
jo
dec
inc
scas
pop
pop
sbb
push
bnd
in
pusha
dec
ljmp
lock
cs
sub
data16
jno
lods
out
enter
dec
scas
popf
test
jo
sbb
or
imul
push
cwtl
push
mov
sub
dec
and
ret
jb
adc
inc
xchg
push
or
movsb
push
xor
xchg
inc
and
ss
push
repnz
sbb
out
xor
loope
pop
js
and
add
push
cmovo
add
sbbl
jbe
test
inc
loopne
lock
pop
mov
xchg
cmp
xor
sub
test
dec
je
dec
cwtl
icebp
xor
es
adc
stos
or
loope
movsb
mov
or
js
loop
pop
jl
imul
xor
and
jno
adc
mov
or
scas
dec
test
sbbb
testb
xor
add
icebp
ja
into
jne
inc
sbb
push
add
in
inc
lods
sub
test
imul
adc
jno
adc
adc
out
sub
xor
pusha
xor
push
fsubp
pop
inc
dec
sub
mov
clc
or
xchg
ret
arpl
rorb
rorb
xchg
push
mov
ret
pop
adc
fldcw
jle
popa
lods
mov
pop
add
xor
lret
mov
pop
or
ret
lcall
testb
mov
inc
cmp
test
dec
push
arpl
movb
lea
inc
call
and
jnp
jecxz
cmp
xchg
cmc
adc
pop
or
lret
add
sbb
hlt
and
xor
dec
xor
outsl
add
and
mov
or
and
push
dec
pop
cmpsl
mov
pop
leave
dec
sub
jbe
pop
nop
dec
sbb
cmp
mov
cwtl
subl
mov
inc
sub
and
sub
test
sub
mov
or
std
push
lea
add
or
push
mov
pop
cmp
or
jb
jne
testl
aam
popf
enter
xchg
lcall
ljmp
add
mov
sarl
add
rol
les
jbe
out
mov
into
push
testl
add
cld
lods
es
mov
pushf
mov
fidivrl
mov
sub
and
push
xor
or
or
or
out
and
mov
cmp
popa
cmp
jbe
leave
xchg
sbb
std
mov
and
iret
and
and
cmp
aam
aaa
or
arpl
rolb
dec
inc
test
inc
xchg
and
adc
xchg
shll
sbb
leave
test
arpl
cmc
repnz
push
es
aaa
adc
jmp
rcrb
lods
gs
ror
movsb
hlt
sahf
leave
movb
flds
push
into
add
loop
add
ret
test
js
cmp
push
cs
sahf
aas
and
rcrl
cmp
les
dec
adc
sub
mov
pop
out
adc
mov
inc
movsb
push
push
push
aad
add
xor
aam
and
pusha
and
mov
mov
dec
ret
push
mov
lea
push
lock
sbb
add
mov
add
and
adc
xchg
shrb
shll
sub
add
xchg
jle
or
stos
or
mov
add
and
imul
aam
hlt
add
js
mov
hlt
sub
dec
xor
inc
pminsw
dec
aam
or
add
mov
cli
test
jae
imul
adc
or
clc
jmp
adc
add
mov
xchg
shrb
roll
dec
mov
add
js
out
xlat
test
jecxz
outsb
aad
add
push
pusha
and
sub
lcall
test
push
jne
mov
and
inc
loope
and
not
adc
fdivs
and
shr
testb
rolb
iret
dec
adc
clc
loopne
xor
ret
outsl
jmp
jmp
cmp
ja
xor
add
jno
sbb
lock
test
movsb
dec
ss
adc
cmp
fsubl
and
or
mov
mov
adcl
jmp
enterw
xchg
fmuls
imul
mov
push
adc
movl
push
outsb
sub
inc
xchg
inc
loope
int
dec
add
add
and
pop
adc
pop
sarl
ret
rorb
mov
cmp
adc
or
shr
inc
cmp
mov
xchg
lock
mov
dec
adc
adcl
or
adcb
enter
stos
dec
push
mov
or
xchg
add
decl
jmp
test
xchg
push
leave
ret
and
daa
mov
mov
cmp
stos
mov
jp
outsb
push
sbb
pop
loop
loopne
inc
add
xor
or
mov
lret
lock
sub
adc
inc
jecxz
push
and
xor
test
mov
xchg
inc
sbb
sub
pop
inc
lea
push
xchg
loope
push
test
inc
sbb
cltd
movsl
jmp
ret
js
sbb
loop
add
or
adc
test
sbb
popa
sub
mov
addr16
js
mov
sbb
cmp
inc
or
add
ljmp
ret
leave
jmp
dec
lods
dec
pop
lret
and
imul
dec
mov
shl
in
sahf
or
mov
jl
mov
popa
lods
pop
dec
rcl
push
in
or
mov
mov
adc
stos
dec
or
jo
xchg
into
andl
xchg
dec
adc
sahf
add
cmp
mov
aaa
xchg
pusha
es
add
and
js
jbe
lret
js
jmp
add
cld
in
pusha
pusha
cmp
into
into
or
clc
jbe
add
pusha
adc
fsubrs
daa
add
sarb
es
cmp
shr
adc
push
pop
js
popa
rclb
mov
adc
je
test
rcrb
test
clc
icebp
nop
push
nop
lods
movsb
daa
pusha
dec
cmp
cli
mov
pushw
outsb
sub
jle
in
xorb
adc
xor
nop
adc
clc
or
notb
sub
pop
inc
int
jno
fdivrs
enter
cmp
push
pop
insl
pop
add
mov
les
sbb
sbb
sub
push
repnz
pusha
jne
cmpb
subb
addl
xor
sbb
jo
dec
ss
ret
sbb
pop
sbb
fcompl
out
call
rcrb
pop
loope
dec
mov
data16
push
add
dec
leave
int3
jecxz
xor
pusha
jo
imul
fdivrs
lea
or
ficoml
rcll
pop
shlb
rcrl
xlat
fcmovnbe
push
outsb
repz
and
or
pop
push
daa
push
fidivrs
push
dec
cld
aad
roll
sbb
lea
cmp
dec
jp
pusha
ljmp
into
inc
loopne
add
shll
push
push
fs
add
cmpl
mov
cltd
mov
mov
call
push
inc
jp
pushf
xor
adc
inc
dec
lods
mov
pusha
movsb
adc
and
enter
es
mov
adc
sub
lret
sub
mov
jnp
insb
lods
sub
sahf
add
sbb
mov
test
jmp
jbe
inc
sbb
push
add
sub
add
mov
inc
or
std
mov
add
js
roll
adc
sbb
sub
stos
xor
push
add
rorl
push
push
lret
push
lock
testb
sbb
shll
xor
les
xor
rolb
sub
push
cmpsl
aad
incb
in
arpl
sbbl
adc
inc
dec
test
movsb
out
jne
int3
mov
lret
lods
popa
and
xor
mov
pop
dec
inc
add
fs
in
loop
adc
into
sbb
push
sbb
rcrb
loopne
loop
test
adc
adc
shlb
xlat
dec
mov
mov
add
jp
mov
push
add
lcall
shlb
mov
jo
xchg
loope
xchg
mov
inc
flds
xor
push
and
add
jecxz
loopne
adc
js
xor
mov
dec
mov
add
xchg
mov
hlt
push
pop
xchg
inc
cmpsl
int3
adc
stos
pop
data16
add
and
lods
test
test
inc
xor
loopne
aas
pusha
loopne
aad
inc
imul
fcom
cmp
push
bound
pop
cmp
xchg
sub
push
js
lock
add
xchg
sbb
rorb
sbb
in
or
fiadds
or
push
iret
les
orb
lds
mov
dec
in
dec
aad
inc
lea
lock
mov
pop
mov
int3
or
lret
cli
push
pop
sbb
incb
add
loopne
lcall
push
adc
xchg
mov
pushf
inc
xchg
mov
in
add
or
shlb
test
test
nop
inc
in
repnz
or
mov
jae
inc
call
mov
pop
push
mov
push
xor
gs
dec
or
xchg
mov
sbb
push
push
sbb
push
ret
dec
push
sbb
push
push
and
sub
add
add
mov
push
dec
push
lods
pop
movb
decb
outsl
leave
ljmp
loopne
inc
mov
mov
mov
inc
jo
adc
js
ret
mov
xor
jae
dec
aam
sbb
push
cmpsb
ret
and
push
enter
rclb
mov
adc
imul
cmpsl
ret
inc
sub
fxch
hlt
pop
cld
jb
push
in
insb
orl
inc
cwtl
aam
mov
or
dec
out
push
add
sbb
cmp
ss
mov
push
adc
lods
or
push
out
sub
push
mov
movsl
add
mov
xchg
test
inc
jmp
mov
test
pop
xchg
popf
outsb
mov
in
imul
cmp
data16
sbb
js
mov
stos
add
movsl
pusha
mov
xchg
jecxz
mov
imul
pop
lret
dec
rorl
lods
adc
pop
lret
fs
mov
or
je
mov
mov
adc
adcb
mov
in
fidivl
lret
add
xor
inc
push
data16
lods
or
pop
jnp
rolb
and
lods
test
jg
pop
or
movsb
cmp
into
sub
push
inc
loop
and
or
xor
inc
and
mov
cwtl
or
pop
dec
fisubrs
pop
or
lds
loope
adc
incb
push
push
scas
cld
dec
loopne
mov
mov
movsl
mov
pop
pusha
cmp
adc
rolb
ret
pop
aam
add
add
jp
rclb
push
and
stos
sbb
insb
or
into
xor
add
insb
pusha
lods
in
mov
rcrl
jp
jo
mov
test
mov
mov
loopne
mov
push
xchg
ret
fsubl
in
lcallw
pop
js
mov
pop
add
insl
das
out
rol
jecxz
inc
cmc
mov
sub
imul
cmp
pop
sbb
push
xor
and
and
or
push
sbb
sti
cmp
xchg
add
sbb
mov
and
mov
rol
mov
mov
adc
mov
clc
in
and
test
ss
sub
leave
mov
test
sub
cmpsb
push
int3
or
jb
mov
jbe
stos
adc
pushf
pop
and
mov
sbb
mov
cmove
popa
mov
jo
dec
mov
rclb
js
mov
je
mov
mov
push
jo
mov
stc
pop
push
sbb
movl
loopne
mov
lock
pop
xchg
imul
or
push
and
mov
pusha
add
jle
sub
mov
adc
divl
aaa
ret
xor
mov
jns
cld
fsubr
fcmovb
lea
mov
shlb
push
sahf
dec
sti
inc
test
add
xor
or
mov
mov
pop
das
adc
mov
cmp
pop
pop
data16
addl
add
sbb
inc
or
push
ficomps
cmp
mov
push
ret
lods
insb
les
dec
and
cmp
gs
sbb
add
dec
popa
and
test
inc
movsl
sbb
mov
adcb
pushf
add
sbb
fbstp
fnsave
push
in
mov
shlb
pop
pushf
jp
cmc
pop
pop
or
cmp
xor
movsb
rcrl
add
mov
mov
pusha
icebp
xor
andb
xchg
dec
and
push
inc
ret
insb
pusha
lock
call
push
movsl
nop
mov
nop
pushl
popa
adc
insl
insl
mov
lock
mov
faddp
loope
test
and
in
push
cld
loope
pop
and
sbb
sbb
xor
pop
test
int3
mov
mov
ljmp
and
add
mov
push
mov
icebp
mov
cmp
ss
pushf
and
or
mov
cmp
inc
fsubrl
mov
sub
int
sbb
loope
adc
int3
shl
ret
mov
es
cmp
push
xchg
or
xor
rorb
mov
and
jp
lock
push
repz
xchg
mov
out
pavgb
shr
add
xchg
pop
popf
pop
inc
pop
scas
cmp
rorb
rol
out
test
mov
les
loop
inc
xchg
xchg
mov
in
push
jp
push
and
mov
push
jo
adcl
and
arpl
push
pushf
xchg
inc
jecxz
mov
imul
xchg
lea
push
dec
xor
and
add
cmpsb
stos
mov
int3
or
lock
pop
sbb
aad
add
xchg
lcall
add
in
sbb
loope
flds
es
xor
xor
lret
dec
mov
rcr
rol
pop
push
mov
mov
xor
lock
mov
sub
adc
imul
or
fcomps
aam
inc
jp
mov
sarb
sbb
mov
hlt
xchg
fldl
test
mov
rcl
cmp
rcl
xchg
int3
sbb
adc
xchg
mov
js
das
cwtl
cwtl
sub
lret
mov
jno
sbb
dec
dec
pop
pop
sbb
push
rcrb
ret
mov
mov
mov
jnp
mov
mov
jbe
js
or
cs
push
xor
loopne
xchg
loop
cld
or
sbb
push
addb
cmp
dec
sbb
sbb
ret
nop
pusha
mov
pop
push
outsb
loopne
rcll
cmp
add
fnstcw
pop
std
sbb
push
mov
add
ret
outsb
pop
sbb
and
xchg
movsl
mov
cmp
sbb
vpmaxsw
push
fdivl
bound
ret
push
lcall
les
mov
repz
dec
jbe
js
or
lret
mov
and
mov
jmp
sbb
sub
add
loopne
xchg
call
test
pushf
cltd
xchg
cs
nop
adc
push
and
in
adc
cmp
dec
jbe
dec
test
xchg
or
cmp
add
movsb
fwait
js
cwtl
add
add
mov
packssdw
bswap
insl
add
lcall
outsl
hlt
ljmp
outsb
dec
aam
cmp
es
cmp
outsb
push
add
xchg
mov
adc
loopne
xchg
into
push
push
sti
out
out
adc
shll
or
cld
fistps
inc
jno
adc
ficomps
cmp
nop
hlt
add
mov
add
out
jle
xchg
mov
sub
nop
pusha
mov
sub
push
mov
mov
xor
cmp
jbe
test
mov
in
pop
data16
add
cmp
lods
xchg
mov
sbb
sbbb
mov
xchg
add
sbb
mov
in
inc
jecxz
fimuls
jo
jne
or
imul
scas
insb
jp
movsb
xchg
aaa
and
test
adcb
gs
add
mov
cmp
or
xor
shlb
mov
inc
data16
inc
fwait
xchg
jle
push
xor
inc
add
or
fldenv
or
sbb
pop
jb
lock
push
sbb
lea
jo
mov
popa
int3
pushf
addl
aas
mov
incb
xor
inc
dec
mov
xor
xchg
xchg
mov
sub
xchg
ror
mov
pop
add
sysenter
clc
addl
inc
cmp
call
dec
mov
ss
pop
psubusw
mov
sahf
pushf
xor
pop
gs
rolb
mov
cmp
ljmp
jp
loop
orb
pop
adc
mov
cmp
pop
add
jp
cmp
sub
les
add
and
jne
mov
adc
jno
out
pushf
pusha
add
stos
mov
mov
xor
pop
sub
jp
subb
ret
popf
push
orb
cmp
mov
adc
loopne
lret
ret
rorl
jo
sub
rcrb
dec
or
mov
icebp
push
sbb
mov
sbb
adc
adc
push
pop
or
in
sbb
pop
movsl
xchg
push
mov
outsl
dec
loope
je
jle
or
jp
mov
aam
pop
add
pop
dec
into
push
lock
xor
xor
into
pop
je
sbb
inc
add
jae
push
mov
xchg
pushf
mov
push
out
inc
jecxz
sbb
and
pop
nop
push
out
inc
inc
push
and
dec
loop
sahf
mov
mov
bound
ret
or
inc
sub
ret
mov
xchg
add
push
popa
loope
mov
push
fs
aam
dec
outsl
int3
int3
arpl
inc
jp
and
hlt
or
and
hlt
xchg
push
xchg
cmp
aam
test
xor
xchg
mov
hlt
cmp
pop
or
lock
cmp
lret
popa
xlat
jne
ds
in
mov
sub
fcompl
mov
push
leave
loop
pusha
or
jbe
jno
and
roll
cmp
pop
or
cmp
bound
and
xchg
add
shr
pop
movsb
adc
inc
add
dec
popf
in
mov
xchg
popa
ret
push
add
cld
push
or
mov
or
add
dec
lret
out
push
fs
flds
push
ss
sbb
xor
js
jp
push
add
es
das
leave
popa
lock
xchg
dec
bound
cmp
pop
mov
test
je
sbb
out
incb
and
sahf
aam
out
dec
push
xchg
cmp
pop
enter
xchg
mov
jo
push
xchg
push
cwtl
jle
add
inc
sub
test
adc
push
into
or
jl
rclb
jp
xchg
dec
inc
adc
sbb
divb
icebp
movsb
mov
xchg
push
cwtl
xorl
xchg
loopne
das
jo,pn
add
cwtl
das
imul
sub
push
xor
xor
nop
jecxz
jecxz
negb
sub
push
jo
cmp
fs
inc
mov
cmp
gs
add
xchg
adc
fs
inc
mov
lret
mov
call
dec
dec
jb
push
int3
scas
push
jp
sbb
lea
inc
xchg
jecxz
enter
xchg
hlt
leave
ret
cli
mov
add
dec
test
jo
push
pushf
push
and
sbb
shlb
ja
flds
or
jb
and
outsb
sub
ret
xlat
cmp
out
inc
addr16
sub
or
add
bnd
cmc
xchg
cmc
xchg
jecxz
adc
pusha
and
mov
mov
fldcw
ljmp
jp
and
and
lock
cmc
pop
add
cmpsb
sbb
dec
inc
or
sbb
xchg
adc
ss
sub
cltd
rorl
lret
jp
sub
add
out
in
gs
loope
pusha
dec
mov
fisttpll
ret
inc
addb
or
xor
iret
shlb
pop
dec
pop
mov
addb
adc
xor
nop
sbb
or
sub
sbb
cmp
je
cmp
add
or
cmp
jo
xorl
notl
xor
and
sub
adcb
sbb
or
into
loopne
push
test
pusha
push
jne
mulb
loop
cwtl
cmp
rclb
into
rorb
push
aam
cmp
outsl
inc
inc
test
inc
ret
jecxz
fdivr
into
imul
jl
jle
xchg
add
jo
and
xchg
into
push
mov
insl
loopne
or
mov
or
ret
jle
pusha
or
pop
jmp
retw
sarl
orl
mov
push
mov
adc
jg
push
and
pop
sbb
lods
jo
push
inc
push
sarl
arpl
je
loopne
mov
push
test
sub
popa
fs
aad
mov
popf
dec
jbe
mov
int3
cmp
push
adc
mov
pop
inc
lahf
clc
adc
and
lock
mov
add
add
xchg
add
out
std
xchg
or
sbb
and
orb
push
cs
cmpsb
es
adc
sub
add
sahf
fst
or
add
mov
add
loop
cld
cwtl
mov
rcrb
shlb
enter
mov
mov
cld
lret
mov
and
push
bound
add
jnp
adc
or
add
rorb
and
push
in
adc
add
mov
movsb
test
test
pusha
mov
pushf
fildll
shll
jmp
sub
or
pop
sub
dec
push
push
lcall
shr
or
inc
and
push
inc
or
sub
ret
add
loope
or
inc
mov
lds
test
stos
insb
or
and
in
xor
add
mov
jle
pop
mov
push
ror
clc
pop
add
loope
jge
inc
sbb
or
call
adc
xchg
movsb
loopne
xchg
or
add
jb
insb
or
pop
pop
add
cmpsl
and
outsl
ret
fisubrl
xor
push
cmpsl
cmp
inc
andb
mov
sar
mov
lcall
xor
rorl
xchg
shrb
cwtl
inc
push
mov
inc
jae
and
push
adc
sbb
adc
and
lock
jg
sub
rcll
insl
pusha
xor
and
add
fists
lock
pop
or
fadds
and
mov
inc
inc
or
add
pop
mov
and
mov
add
popf
adc
or
rcll
aas
push
push
test
pushf
repnz
sbb
cli
pusha
mov
test
loope
inc
pop
or
push
cli
fsts
sbb
xor
pop
dec
ljmp
daa
add
xlat
push
jbe
rorb
shlb
test
xchg
cmpsb
add
jmp
mov
jno
rcrb
ja
cs
mov
rcrb
smsw
clc
add
add
adc
inc
insl
or
loop
add
out
loop
aam
loop
pop
adcl
jb
push
or
popf
lea
test
loop
popa
insl
jmp
ss
fs
dec
push
js
fiadds
les
inc
dec
add
int3
pop
jl
sahf
mov
cmp
adc
or
push
dec
in
and
dec
add
test
cltd
movsb
les
add
xchg
sbb
jb
add
int
add
stc
test
fldl
call
nop
add
ljmp
pop
sbb
xchg
mov
icebp
dec
dec
inc
in
sbb
adc
mov
sbb
jne
xor
xor
jns
lock
jno
cmpsb
in
dec
push
dec
dec
cmp
jo
iret
aad
jae
add
dec
mov
gs
and
call
adc
or
leave
aam
push
jmp
pop
test
and
mov
lcall
push
sub
ret
or
cmpl
test
inc
shl
inc
sub
cmp
sbb
xchg
mov
cs
popf
test
dec
aas
pop
or
pop
ficompl
js
lcall
dec
cmp
mov
inc
pop
les
notl
sbb
outsb
add
cmp
int3
enter
rcrb
pop
and
or
mov
out
test
ljmp
stos
and
or
mov
insb
outsb
xchg
ds
into
push
cmpsb
loopne
sbb
ret
ret
mov
mov
sbb
std
push
inc
pop
dec
mov
loopne
mov
les
inc
rol
xor
xor
or
xchg
or
bound
test
mov
pop
sbb
mov
push
test
data16
ret
xchg
and
les
add
andb
call
xchg
or
cmc
les
enter
lock
jl
sub
jae
cmp
dec
sbb
mov
mov
push
faddp
jmp
loop
push
add
adc
push
jp
xor
adc
mov
add
mov
sbb
hlt
jnp
adc
sub
ret
mov
add
fstps
fisttpll
cs
xchg
insb
push
out
dec
mov
xchg
add
mov
test
inc
or
push
xor
xchg
sbb
es
ret
xor
mov
jl
imul
push
adc
and
loopne
mov
mov
jmp
mov
inc
xchg
mov
js
xorb
add
fstpt
adc
xor
inc
pop
adc
or
and
popf
jno
imul
jo
xor
sahf
ficoml
push
sub
mulb
add
call
and
bound
call
mov
mov
je
xor
or
popf
mov
mov
xchg
dec
push
jo
cmp
add
nop
xor
enter
imul
mov
enter
inc
popa
inc
lock
lods
pop
dec
mov
pop
fidivrl
sbb
call
push
dec
and
mov
icebp
xchg
inc
shlb
cmp
test
sbb
sbb
inc
add
out
inc
push
dec
in
pop
jp
sub
out
loope
add
xor
pop
push
ret
add
jecxz
mov
push
adc
cwtl
mov
sbb
sub
loopne
and
or
sub
mov
add
adc
fs
and
add
fisubrl
jmp
jbe
push
sbb
leave
jecxz
ss
sbb
mov
inc
mov
pop
add
and
jmp
inc
test
into
lods
roll
and
call
adc
or
cmp
adc
add
daa
imul
sbb
xchg
jnp
sub
push
adc
jmp
adc
loop
cmp
dec
or
jb
or
sbb
daa
push
dec
rcl
jbe
adc
mov
pop
lea
xor
aaa
insb
inc
jmp
and
or
addr16
xorl
or
lock
mov
lods
push
inc
jns
call
in
cltd
push
and
jae
cmp
sbbb
sub
mov
rcrb
loopne
cmp
inc
cld
cltd
lcall
or
xchg
inc
cmp
pop
fs
add
fbld
push
and
push
sub
aam
jbe
mov
mov
rcrb
mov
xchg
incb
loopne
sbb
pop
test
xor
test
test
dec
xorl
cmp
add
dec
mov
call
out
xchg
dec
rcl
mov
test
or
fmuls
or
mov
loop
ss
and
lea
jne
add
push
pop
movsb
push
or
xchg
mov
mov
arpl
jno
sahf
enter
push
adc
and
cmp
imul
cmp
outsl
adc
lea
dec
adc
cltd
mov
sbb
cld
mov
data16
and
mov
fs
js
xor
andb
sub
inc
sbb
rcr
cmc
les
outsl
pusha
mov
int3
inc
loop
fisubrs
jl
out
and
outsb
xchg
lods
daa
push
adc
ret
call
sub
mov
sarl
cltd
jne
and
sbb
mov
pusha
arpl
push
out
add
xor
lret
dec
addr16
pop
cmpsb
mov
pop
fwait
clc
adc
pop
inc
push
adc
and
les
xor
adc
xor
and
jnp
hlt
xchg
int3
push
adc
pusha
dec
jo
fwait
sarl
dec
notl
mov
inc
je
in
sub
rcr
nop
push
pusha
or
mov
push
push
mov
pop
test
and
dec
bound
pop
push
or
mov
fiaddl
test
es
sub
lods
in
or
mov
icebp
mov
push
push
and
fmuls
add
push
push
fidivrl
fwait
stos
cmp
inc
adc
cmp
mov
mov
cmpsb
push
dec
pop
sbb
inc
xor
sub
cli
sub
push
outsb
pop
xchg
jo
popf
pop
dec
ret
push
jecxz
adc
lret
xlat
mov
repnz
adc
and
xchg
xor
dec
mov
dec
sub
inc
ror
mov
js
test
test
adc
adc
add
int3
cmp
movsl
pop
call
or
loope
mov
push
movsb
xchg
adc
lods
adcb
into
xor
xor
aaa
ror
xchg
bound
imul
cmp
fs
sbb
and
mov
insb
or
add
xchg
inc
pop
xchg
add
mov
dec
test
int3
sbb
and
stc
cld
xchg
push
jbe
push
nop
outsb
rolb
fidivs
rorb
sub
push
push
cmp
inc
arpl
sbb
add
xchg
call
enter
pop
fldlg2
mov
dec
ror
sub
push
push
mov
fdivp
jo
push
mov
test
mov
mov
sbb
shr
outsb
mov
dec
addl
dec
test
inc
push
mov
mov
mov
daa
dec
xor
das
sbb
adc
pop
test
and
push
daa
pop
pop
rolb
mov
enter
adc
sbb
fsubs
mov
in
sbb
mov
mov
push
dec
aam
js
adc
push
jo
lea
mov
jbe
or
movsb
into
push
mov
dec
inc
ljmp
add
pop
aas
or
cmp
jo
hlt
ret
jb
cmp
push
js
out
dec
imul
push
pxor
jbe
or
shll
loope
lret
imul
xor
mov
or
xor
push
cmpsb
sbb
add
jp
push
std
out
mov
mov
inc
rorb
sahf
rclb
adc
addr16
mov
arpl
push
pusha
mov
imul
test
lock
pushf
in
mov
add
adc
rcr
in
and
sbb
mov
movsl
sti
push
or
add
add
mov
movsl
lret
ret
ficomps
adc
push
ret
pavgb
jo
hlt
add
push
imul
mov
jns
mov
jp
or
shrb
or
dec
scas
test
xor
push
jmp
test
ss
adc
cld
in
mov
in
repnz
popa
dec
aad
call
cmp
mov
dec
and
and
mov
add
lods
pop
cmc
sub
mulb
xlat
test
mov
movsb
jb
sahf
mov
sbb
add
pop
cs
loope
loopne
imul
sbb
mov
mov
xchg
sbb
cmp
pop
mov
ret
push
add
xchg
and
xor
dec
adc
cmp
aaa
mov
jbe
inc
mov
sbb
mov
repnz
inc
mov
loopne
fsubr
mov
adc
xchg
adc
xor
in
fldl
outsl
cltd
push
jp
shll
rolb
pop
ja
pop
mov
mov
dec
jo
gs
adc
jl
pop
je
sahf
or
js
and
cmp
addr16
shl
rcrb
leave
lret
mov
in
cmpb
mov
ret
in
sbb
sbb
in
sahf
jbe
call
popf
or
adc
add
flds
arpl
mov
jo
sub
js
mov
ret
imul
mov
sbb
pop
rorl
push
rorl
pop
add
sbb
mov
cmp
cmp
cwtl
pop
or
sbb
inc
xchg
aaa
movsb
popa
adc
jo
mov
test
sub
adc
jb
lock
movsb
xchg
cwtl
add
pusha
jno
sti
or
dec
cmp
push
sbb
into
into
xchg
mov
cmp
out
lock
sub
xchg
ljmp
jb
or
in
ja
adc
adc
pop
dec
js
mov
mov
lock
adc
and
jp
mov
push
out
xchg
dec
xchg
xchg
ss
xchg
inc
lods
jp
movb
jo
test
outsb
cmc
mov
lea
jnp
insl
cmp
cmp
sarl
ss
sub
mov
aaa
je
mov
sub
pop
movsb
aam
mov
popa
lock
dec
test
mov
cmp
pushf
movsb
lods
cmp
mov
lea
repnz
lea
daa
pusha
add
nop
enter
adcb
insb
pop
and
fldl
or
mov
adc
xor
dec
sbb
sub
add
pop
popa
out
test
cwtl
pop
aaa
xchg
push
inc
cmp
sub
sarb
and
pushf
mov
xchg
pushf
cli
ss
sub
out
sub
dec
addr16
enter
mov
cmpsl
lods
xchg
dec
cmp
andb
cmp
inc
inc
sub
dec
clc
insb
xor
idivb
dec
sbb
andb
push
inc
cmp
jmp
mov
je
lret
rorb
mov
shl
push
adc
push
fsubrs
les
das
dec
addr16
push
jo
jno
lds
sub
push
push
mov
sbb
xor
lcall
dec
mov
lock
cmp
or
dec
roll
outsl
mov
in
inc
repnz
ret
out
cwtl
inc
shlb
or
xchg
mov
int3
pushf
lods
xor
sarb
fisubrs
cmp
sbb
lea
mov
out
jmp
ror
addps
outsl
bound
mov
jnp
clc
fidivrl
in
or
mov
out
jo
xor
lods
lods
lret
mov
and
mov
add
pusha
aam
and
mov
cwtl
mov
or
andb
es
and
mov
mov
ds
aad
mov
cltd
xor
ret
xchg
mov
xorl
adc
push
pop
dec
inc
mov
jbe
xchg
sbb
hlt
sbb
mov
sbb
pop
and
sarb
add
outsb
xor
mov
add
lret
pushf
rcrb
ret
rorb
dec
lret
negl
or
mov
xchg
lods
or
sbb
rol
push
or
sub
adc
movb
cltd
or
or
mov
dec
inc
xor
cmc
js
sbb
mov
cmp
test
enter
in
cs
ret
xchg
mov
inc
into
adc
push
lret
xor
xchg
pop
sbb
mov
out
inc
arpl
pop
mov
faddl
jo
jno
inc
les
clc
or
lock
jp
mov
js
ss
adc
daa
jecxz
pop
mov
jno
sub
inc
sub
mov
dec
shlb
mov
fs
xchg
dec
fdivr
les
mov
add
sub
in
loop
or
and
push
inc
dec
repnz
push
loope
stos
scas
cmp
adc
mov
pop
pop
cmpsl
lcall
add
out
mov
xchg
les
pop
mov
clc
sbb
push
pop
int3
or
arpl
push
rcrb
dec
or
xchg
outsl
les
or
andb
imul
nop
mov
inc
mov
test
aam
xor
xchg
adc
mov
roll
call
in
ret
xchg
xor
clc
ficomps
dec
sbb
sbb
xchg
outsb
js
adc
adc
xchg
fcompl
movsb
ja
adc
xchg
movsl
dec
leave
xchg
dec
jecxz
jb
pop
adc
add
movsl
js
aam
xchg
inc
add
cmc
xchg
rorl
lret
push
fs
dec
add
ja
add
es
cmp
push
push
and
sub
add
pop
cwtl
xchg
outsl
sbb
movsb
inc
es
jo
nop
dec
cmp
int
jns
inc
std
xor
xlat
pop
in
orb
outsl
enter
sub
pop
ds
push
les
add
or
xchg
ret
in
aaa
aaa
add
mov
fmul
js
filds
das
push
popf
mov
test
add
add
addl
sub
jmp
or
sbb
push
test
xchg
xor
fwait
add
aaa
xor
dec
xchg
loopne
adc
mov
addb
xchg
push
incl
addb
xor
les
sbb
xor
and
inc
push
js
test
adc
inc
jp
add
sub
xlat
sarb
xchg
xchg
dec
xchg
pushf
clc
or
add
pushf
adc
out
test
or
fcomp
push
adcl
add
push
je
pop
or
xlat
rorb
and
or
sbb
data16
loopne
cld
mov
iret
lret
cmpb
nop
or
sbb
popa
jae
add
adc
leave
daa
and
and
push
mov
ret
fadd
pop
dec
adc
and
push
faddl
add
inc
in
and
aas
xchg
into
shl
mov
imul
fcoms
popf
dec
push
push
pushf
rorb
push
mov
sub
insl
sbb
sbb
lcall
pop
adc
dec
sarl
mov
and
ja
fcompl
jbe
xchg
shlb
mov
lods
movq
testl
sbb
ss
shl
or
push
jmp
aam
iret
fwait
loope
js
and
cmp
adc
xchg
loopne
pop
xor
or
pop
push
in
popa
adc
jbe
adc
adc
adc
pushf
lea
and
add
add
add
lock
outsl
inc
add
insb
das
add
mov
lods
std
pop
mov
cmpsl
push
fidivs
psrlq
mov
add
sub
insl
shl
push
mov
inc
adc
push
push
adc
or
iret
movsb
sub
ds
cmpsl
push
pop
jl
dec
repz
movsl
ficoms
cmpsl
test
push
cmp
cmp
and
mov
andl
mov
stos
and
aam
fsubrs
or
leave
dec
daa
pop
inc
push
cmpsb
fisubl
enter
xor
addr16
mov
mov
fstpl
inc
add
add
aas
jge
shrb
lea
loopne
adc
enter
dec
and
mov
jbe
adc
clc
inc
and
add
ror
lods
js
cmp
inc
enter
cmpsb
mov
sub
rorl
push
pop
inc
outsl
dec
mov
adc
cmpsl
or
and
add
ror
inc
iret
mov
fsubrl
nop
xchg
ret
enter
add
cmp
ret
xor
or
sub
outsl
mov
add
mov
in
push
sub
jbe
dec
jp
enter
fs
out
dec
int
push
adc
lahf
sub
cli
adc
xchg
loop
xor
lds
dec
shrb
sub
xchg
js
xchg
andb
loop
jp
pop
mov
sub
in
sbb
subb
shlb
shlb
or
arpl
add
test
fs
mov
pop
popa
cmp
lea
inc
inc
das
adc
and
add
xchg
push
pushw
test
ret
outsb
jb
jmp
nop
mov
stc
dec
sub
fdivrs
cmpsb
xor
daa
loopne
pop
adc
inc
test
jo
or
sub
idivb
mov
nop
cmp
jno
sbb
xor
test
ret
xor
lcall
jns
add
rolb
cmp
icebp
ret
inc
xchg
mov
dec
push
mov
lret
pop
cmpsb
popa
push
dec
cmpsb
sti
cmp
sub
pop
je
gs
lea
jo
xor
push
push
mov
in
scas
and
les
mov
lret
or
loopne
mov
rolb
cli
les
dec
xor
xchg
inc
fisubs
cmpsb
pop
or
nop
lcall
cld
repz
sub
mov
xor
or
dec
dec
dec
adcl
xchg
mov
xor
es
or
xchg
add
pop
fdivrl
inc
xchg
or
xor
and
lock
mov
roll
mov
pushf
mov
stos
push
sahf
xchg
jmp
mov
or
and
adc
mov
test
sbb
sbb
adc
and
enter
call
push
and
mov
fs
pusha
imul
dec
sbb
outsb
mov
mov
xor
lcall
push
mov
rcrb
add
dec
mov
sub
sbb
rcl
sub
xor
andb
dec
or
xor
xor
and
pmaxub
inc
mov
lret
adcl
jb
dec
lahf
xchg
lock
mov
adcb
pop
inc
mov
xchg
push
mov
mov
xor
lds
js
adcb
aam
lret
fs
or
sbb
cmp
rclb
sahf
dec
ret
jg
adc
daa
mov
sub
xor
mov
popf
ds
fsubl
rcrb
or
dec
subb
xchg
nop
in
cwtl
jno
inc
jp
mov
xor
push
shrb
ror
xchg
ret
or
pop
fld
rol
pop
adc
cmp
sarb
outsb
xor
mov
jbe
call
ret
push
hlt
and
arpl
imul
cmpsl
lock
push
mov
push
or
leave
xchg
orb
push
movsb
insb
xchg
fmuls
sbb
cwtl
jno
int3
rorb
rcrb
xorb
fidivrl
imul
sub
out
mov
daa
lock
incl
lock
or
scas
or
xchg
jbe
add
enter
mov
xchg
or
mov
fs
rcrl
pop
add
outsb
jbe
icebp
xchg
inc
repnz
add
xor
rcrb
xchg
sbb
push
add
dec
push
mov
sahf
dec
testl
and
add
in
or
iret
fdivl
idivl
add
and
ljmp
fldcw
pop
mov
push
incl
or
cmp
add
sbb
ljmp
cmp
icebp
jo
or
popf
xor
jmp
loop
test
pop
ret
mov
orl
daa
int3
push
mov
pop
adc
sarl
dec
lahf
cwtl
mov
in
sub
add
jecxz
mov
mov
sahf
lock
insb
loope
sbb
mov
xor
jbe
loopne
inc
mov
jb
mov
push
bound
out
sub
hlt
movsb
sbb
imul
and
xchg
xor
pop
or
movsl
push
sub
loopne
pushf
outsb
scas
les
or
fcmovnb
les
sub
popf
mov
clc
shl
ss
in
mov
add
ficoms
push
dec
pop
jb
xchg
sub
mov
scas
or
cmp
pop
jae
mov
dec
ds
ss
push
or
or
ret
sbb
mov
sbb
and
xchg
imul
mov
push
push
dec
incb
inc
lock
in
mov
xor
std
and
cmp
ficoml
adcl
mov
or
jb
jne
push
hlt
xchg
or
aam
jo
push
movsb
ds
arpl
ret
cwtl
pusha
fs
sub
loop
jge
cmc
add
mov
popa
cmpsl
xchg
mov
push
add
xor
sbb
rorl
outsb
mov
jl
subl
popa
dec
int3
addr16
cltd
cmp
xor
push
arpl
add
fs
xchg
addb
outsb
inc
fs
push
xchg
jo
dec
jl
jo
xchg
cmp
loop
mov
lods
add
adcl
jb
adc
js
mov
jo
xor
push
push
jecxz
jo
loop
xchg
jo
pushf
fs
rcrb
inc
mov
daa
les
cmpsb
mov
cmp
popa
push
shlb
mov
add
pop
dec
addr16
es
push
lret
cmpsl
fsubs
cmc
sub
testl
sbb
mov
mov
cmpsb
repnz
imul
mov
mov
inc
sbb
dec
jmp
loope
cmp
pusha
ret
loopne
cmp
loopne
and
mov
out
loop
dec
clc
push
dec
add
jg
sbb
pop
nop
push
addr16
push
loop
push
test
ficompl
or
push
movsb
lds
xchg
ss
dec
sbbb
sbb
lock
movsb
add
jmp
sub
cmp
mov
sub
or
or
pushf
sbb
or
sbb
mov
mov
inc
sbb
loopne
cwtl
pusha
adc
fildl
mov
cmp
arpl
lcall
loopne
pop
add
js
inc
sub
shlb
test
enter
or
sbb
sbb
xor
push
jo
data16
inc
bnd
mov
xor
hlt
xchg
ret
or
or
push
outsl
sbb
call
sub
rcrb
mov
mov
mov
addl
mov
sbb
inc
movsb
push
fisubs
stos
xor
sahf
jb
loopne
add
push
test
xor
add
push
adc
jecxz
arpl
or
repnz
jge
outsb
test
lcall
test
push
dec
add
jp
push
and
sbb
loope
test
es
aam
pusha
push
sub
sbb
loop
mov
sub
lock
add
and
cli
cs
add
or
jle
test
fidivl
push
mov
push
mov
movsb
mov
xor
mov
sahf
push
loopne
rol
push
push
movsl
js
xchg
jae
sub
mov
popa
subl
dec
xchg
push
and
leave
cmpsb
popa
or
mov
xchg
mov
add
jp
mov
gs
jge
or
xchg
and
daa
imulb
xor
sbb
loopne
pusha
cmpsb
jae
scas
fs
and
loope
lods
sahf
out
dec
pop
xor
cmp
mov
sub
pop
mov
xorl
pusha
das
js
and
sub
xor
addr16
sub
pop
sahf
push
int3
xchg
mov
loope
les
xor
add
or
pop
call
or
lods
les
sahf
jbe
loopne
mov
mov
and
push
and
jbe
pushf
dec
adcb
jb
js
ret
mov
clc
sbb
sbb
into
sub
adc
xchg
sbb
inc
stc
dec
loope
ror
repz
mov
mov
or
ret
adc
fs
popf
xor
xchg
test
int3
dec
xchg
add
inc
xchg
add
push
mov
or
testb
popf
lods
add
sub
scas
push
mov
add
pop
inc
orb
nop
jo
mov
pop
xor
inc
loop
ljmp
ss
icebp
mov
or
xor
and
ljmp
ja
shll
inc
sarb
popa
addr16
stos
lret
loopne
popa
cmp
loopne
jb
jl
push
aad
fs
fcoms
loop
xor
inc
les
dec
pusha
push
and
add
jb
out
add
or
fcmovbe
sbb
or
jns
add
insl
shr
jmp
jnp
jg
cwtl
loope
jecxz
icebp
ret
shll
mov
gs
xor
inc
sub
xchg
popa
inc
sbbl
cmpsl
xor
je
cmpsb
js
or
or
js
mov
jl
test
sbb
push
imul
dec
loop
lret
shll
test
pop
adcb
faddl
and
movsb
adc
jo
and
pop
sbb
sbb
cmp
arpl
icebp
mov
inc
sbb
les
and
jnp
add
sbb
lea
sbb
bound
out
dec
add
bound
add
hlt
xchg
rol
enter
pop
and
test
jo
push
sbb
rolb
mov
add
xor
xchg
pop
das
jmp
adc
adc
mov
enter
cmp
mov
popf
and
pop
sbb
fwait
mov
mov
push
outsb
mov
sahf
dec
mov
push
xchg
push
inc
ret
cmp
hlt
js
inc
sti
and
xchg
mov
fcmovu
popf
popa
test
out
shll
mov
ss
daa
xchg
lcall
imul
or
movsb
add
push
int3
adc
pusha
mov
adc
or
cwtl
adc
xchg
pop
js
je
ret
adc
dec
ficoms
jbe
sbb
movsb
inc
ljmp
into
or
into
ret
mov
lods
sub
xor
pop
nop
fs
xchg
in
or
cs
lret
push
scas
adc
cmp
cwtl
xor
sub
shll
dec
jo
leave
dec
in
aam
mov
jle
subb
mov
mov
repnz
mov
ds
scas
enter
daa
sub
push
adc
test
xor
cld
or
popa
mov
out
test
loopne
mov
jle
add
loop
cmp
push
xchg
xchg
push
mov
push
movsl
or
lods
andb
rorl
dec
lock
jo
dec
xor
pop
adc
push
dec
pop
imul
loop
aaa
shlb
pop
or
jp
sub
sbb
ljmp
push
das
pushf
popf
or
ss
or
or
ret
add
ljmp
sub
adc
jb
test
mov
lcall
repz
in
popa
sub
push
fdivrl
es
push
fcoml
leave
cmp
sub
cmpb
lods
jp
loop
dec
enter
cmp
sub
andl
add
ret
cmp
inc
adc
sbb
dec
cmp
xor
cmp
sbb
add
xor
dec
mov
ds
sahf
inc
and
or
cmp
pushl
adc
incb
cmp
xchg
mov
jb
adc
roll
das
push
mov
cld
cli
or
xorb
add
add
adc
sub
cs
inc
and
in
xor
or
pusha
sub
les
and
dec
les
mov
dec
shrl
mov
push
nop
sbb
push
sub
xor
jo
insb
xor
outsb
je
and
idivb
push
sub
dec
mov
je
xchg
sbb
push
cmp
mulb
int3
les
or
aam
and
loop
iret
pop
pop
dec
fwait
mov
fstpl
or
or
sbb
iret
into
movsb
or
daa
add
xchg
add
inc
outsl
or
adc
mov
mov
mov
and
sbb
xor
dec
xor
pop
sarb
mov
mov
dec
sub
es
popf
lock
lock
cmp
call
pop
fadds
jp
push
les
jne
or
sbb
and
and
xchg
nop
adc
cmp
and
rorb
jp
lret
sbb
dec
cmp
push
inc
popa
imul
or
ficompl
and
je
pushf
insb
imul
xchg
xchg
movsb
mov
gs
add
pop
push
xor
stos
xchg
pop
shr
sbb
out
mov
clc
and
outsb
mov
xchg
cmp
or
lock
icebp
xchg
gs
mov
mov
push
imul
fwait
mov
das
mov
add
jb
testb
mov
cltd
xor
jl
dec
add
mov
dec
into
lea
js,pn
and
js
xor
fstpt
push
xor
scas
jge
aam
add
movsl
mov
push
jp
jmp
jecxz
out
or
das
xor
sub
clc
cli
pushf
xchg
adc
cmc
cmp
nop
xchg
add
mov
les
adc
cltd
sbb
outsl
jge
pop
in
enter
inc
ret
lahf
sub
mov
je
js
sahf
xor
adc
daa
dec
adc
movb
dec
fsub
rcrb
and
xorb
pop
cmp
and
aam
and
ret
and
sbb
into
jp
mov
adc
pop
add
mov
and
mov
push
stos
dec
test
nop
xor
push
jl
xchg
xchg
das
into
jmp
inc
sbb
add
or
mov
mov
sqrtps
add
mov
cmpb
test
incb
cmpl
ss
push
or
mov
jle
add
mov
out
adc
adc
adc
and
inc
cmp
rorl
adc
mov
cmp
and
pop
jne
or
mov
push
mov
or
sbb
jl
push
test
stc
and
or
push
and
sub
sbb
loopne
imul
pop
subb
adc
jg
sbb
aas
fistpl
add
ljmp
mov
mov
shl
rcrl
stos
pusha
test
rol
dec
inc
fsubs
and
inc
push
in
and
pop
in
fiadds
fwait
jp
jae
aaa
or
inc
js
pushf
inc
adc
adc
hlt
push
mov
and
add
stos
or
dec
and
sbb
inc
shl
jg
add
adc
inc
lods
incl
fs
bound
sbb
and
add
jp
popa
xchg
outsl
sub
adc
jo
pop
adc
hlt
fsub
lret
out
stc
or
rcrb
fwait
test
xchg
clc
sbb
pusha
mov
add
and
sub
int
scas
or
lock
out
stc
les
add
inc
mov
shl
xchg
sbb
or
data16
dec
subl
pop
divb
push
fldt
clc
push
jno
xor
jmp
fiadds
mov
sub
push
jae
lods
add
orl
or
into
cmpsl
mov
mov
xor
add
outsl
jne
inc
sub
mov
xor
ret
xor
inc
cld
pop
popf
push
jecxz
repnz
xchg
inc
das
jecxz
push
stos
repnz
lret
sbb
sbb
f2xm1
mov
cmp
inc
call
mov
and
dec
inc
pop
movb
pop
xchg
xchg
cld
lret
mov
add
js
or
inc
popa
or
mov
inc
ss
mov
push
inc
pop
xchg
or
into
xchg
enter
sbb
xchg
sahf
scas
add
orb
xchg
lea
shll
push
test
inc
add
cltd
sbb
lret
into
xorb
cmp
cmc
push
xchg
in
add
mov
pushf
lods
fidivrl
test
popa
sub
and
dec
sub
pop
cmpsb
mov
dec
sbb
in
lods
insl
pushf
and
push
inc
notb
mov
xor
dec
cltd
pop
and
outsb
or
mov
popa
lods
mov
xchg
cli
xchg
andb
push
and
inc
flds
daa
test
xor
push
arpl
push
pop
bound
xchg
xorl
push
inc
outsb
dec
addb
adc
popw
or
inc
xorw
push
mov
sbb
xchg
xchg
and
sbb
cmp
into
pop
push
adc
push
cmp
test
jl
mov
mov
add
mov
pop
jp
out
and
sbb
fmuls
or
add
sarl
jle
xor
xchg
addl
lret
dec
nop
ret
xor
xor
stos
ja
into
add
mov
push
fdivs
mov
cmp
dec
pop
push
xchg
loopne
add
lret
add
loop
test
mov
and
mov
jl
gs
pop
leave
mov
shlb
add
sbb
pusha
add
or
xor
add
mov
mov
push
addb
xchg
pop
mov
dec
cmp
jecxz
in
and
or
adc
push
and
out
test
add
mov
lea
fsts
xchg
adc
pop
xorb
stos
inc
aam
xor
mov
mov
stos
mov
add
inc
dec
add
dec
sbb
popa
jo
addl
jp
push
or
xchg
lods
xor
xchg
jb
sbb
cmp
xor
mov
and
jb
mov
loopne
adc
jae
leave
mov
loope
cwtl
jp
loopne
pop
cmp
pop
mov
je
adc
xor
or
arpl
in
cmp
test
jo
adc
pushf
push
dec
mov
xor
bound
mov
pop
cwtl
lret
jns
adc
push
push
mov
insb
in
push
inc
lods
or
mov
xchg
les
or
pusha
xchg
jnp
cmpsb
jo
ret
mov
cmpsl
testb
push
dec
shll
lea
cmp
pop
inc
xchg
push
jb
pop
or
xor
dec
sub
call
pushf
rcll
sbb
cmp
or
dec
jbe
cmpsb
pusha
dec
stc
shrb
ficoms
fdivrp
and
ret
xchg
out
hlt
pop
add
lods
daa
je
ljmp
add
add
jne
cmp
sub
enter
cmp
dec
js
pop
mov
loopne
test
lret
popa
mov
push
addr16
mov
mov
push
pop
mov
mov
pop
dec
enter
dec
addr16
jecxz
pop
fidivl
inc
js
lock
shlb
dec
jnp
outsb
mov
xor
push
cmp
jbe
test
jb
loopne
test
sbb
shlb
mov
out
lock
ja
outsl
imul
mov
pop
pop
xor
hlt
or
pop
sbb
js
dec
push
into
les
shl
int
jbe
add
mov
in
jp
pop
sbb
sbb
and
xor
xchg
ror
mov
adc
out
xor
cmpsb
cld
test
push
xor
sub
test
xor
lret
stos
jbe
enter
bnd
mov
cmp
and
test
out
cmpsb
loope
jns
push
add
sbb
dec
mov
add
xchg
out
sub
pusha
sbb
mov
movsl
xchg
pop
push
rolb
or
inc
add
sbb
dec
cwtl
push
push
dec
xor
cmp
std
sbb
inc
je
pop
jle
loope
xchg
cld
cli
adc
push
jl
lret
mov
cmpsb
xor
mov
ret
or
mov
ss
mov
loope
lret
mov
out
roll
sbb
in
dec
dec
pop
mov
xchg
out
cs
lret
push
das
xchg
andb
test
dec
or
pop
adcb
cmp
ret
idivb
cmp
xchg
sbb
andl
les
inc
add
pop
adc
xchg
scas
call
out
sbb
sub
dec
mov
adc
push
mov
cld
js
sbb
jb
mov
sub
sub
and
mov
js
mov
or
mov
lea
ror
fdivl
jp
shrb
out
sahf
sbb
daa
sbb
push
mov
outsl
dec
addl
lret
jle
mov
adc
push
es
mov
or
or
inc
arpl
pop
cltd
test
fmull
pop
cwtl
mov
pop
scas
xchg
cmpl
cmp
mov
popa
pop
jnp
mov
jo
jecxz
cmp
pop
dec
imul
jbe
das
pop
lods
bound
pusha
insl
cmp
pop
fucomi
ficoms
cmpsl
and
push
ret
daa
jnp
lret
iret
out
cmp
pop
movsb
cltd
nop
lock
ret
bound
pop
aam
int
data16
fnstenv
out
sbb
pop
xor
rorb
adc
push
cmpsl
shr
xor
je
adc
sbb
dec
or
shlb
pop
outsl
push
roll
jecxz
xor
add
ljmp
xchg
arpl
adc
dec
cmpsl
add
mov
imul
lock
movsb
test
test
add
arpl
rol
add
adc
or
cmc
and
mov
mov
je
pop
in
mov
test
lods
orb
lahf
test
loope
cmpb
call
cmpb
mov
add
loope
sbb
movsl
call
lds
xor
mov
aam
js
loopne
or
push
pop
shl
and
cmp
fistl
adc
call
jp
jg
insb
hlt
sub
mov
rcrb
cmp
sub
push
rclb
addr16
sbb
pusha
lods
or
mov
mov
pop
ret
sbb
xchg
mov
jecxz
push
adcl
scas
xlat
push
or
dec
clc
test
adc
add
in
or
adc
xor
add
push
xor
out
les
mov
and
push
inc
mov
xorl
mov
push
and
rclb
lods
xorb
push
add
mov
add
ret
pop
fwait
nop
pop
ret
ret
loop
jbe
sub
mov
mov
inc
sbb
loop
push
jb
pop
xor
cmp
mov
mov
pop
ss
hlt
jge
mov
or
push
daa
jecxz
adc
sbb
push
rclb
fbstp
sbb
jo
arpl
out
push
adc
mov
push
pop
xchg
jo
test
push
popa
loopne
xor
sahf
shrb
les
add
cwtl
and
pop
push
or
pop
or
dec
sub
xlat
sbb
xlat
insb
mov
cltd
add
xchg
cmp
fldl
enter
je
rcrb
arpl
pop
sub
ret
jecxz
jl
adc
cmpsl
push
out
mov
cmp
push
movsb
mov
sbb
dec
rorb
outsl
mov
mov
xchg
sbb
aam
rcrb
lahf
loope
adc
cmp
jo
xor
into
or
test
push
mov
add
bnd
loope
stos
mov
or
into
xor
add
dec
jns
daa
push
xchg
jo
mov
mov
pop
add
pushf
pop
mov
pop
or
and
stos
movsb
mov
or
mov
mov
or
data16
xchg
into
nop
add
add
jmp
cmpl
cmpsb
shrb
addb
test
pop
push
popf
movsl
aad
sti
mov
push
push
jo
data16
xchg
inc
cmp
andl
sbb
dec
sbb
jo
pop
ljmp
dec
orb
pop
push
shlb
aam
in
rolb
adc
in
bound
dec
pushf
ficompl
cmpsb
test
out
xorl
sbb
ret
push
sahf
jmp
mov
imul
dec
sub
and
inc
add
fs
lods
hlt
pop
xor
jmp
push
inc
push
adc
sub
div
lods
cltd
and
push
jo
sahf
mov
mov
cld
ficoms
sbb
push
mov
push
dec
xor
fisttpl
mov
test
icebp
fdivr
ja
mov
sub
call
or
std
pop
xor
or
xchg
push
cmp
pop
mov
subl
loop
fmuls
cs
or
movb
bound
notl
rclb
push
ret
inc
adc
loope
jp
jg
fcmovnu
mov
outsl
xchg
cmp
push
adc
inc
cmp
mov
mov
add
push
sub
cmp
fidivrl
push
scas
test
push
and
pop
dec
cmp
xchg
pop
pop
add
jmp
inc
mov
fcomps
dec
sahf
sbb
pop
cmpl
insl
or
cmpsl
jae
sub
sub
ret
adcb
shlb
mov
cmc
xor
clc
adc
adc
hlt
jbe
cmpb
into
push
jo
in
rolb
in
add
dec
movsl
aaa
jo
xlat
inc
stos
xchg
cmp
xor
adc
lock
in
or
sahf
add
rorb
dec
fldl
dec
or
mov
enter
sub
insb
dec
mov
pushf
mov
and
pop
push
jmp
ret
fneni(8087
mov
scas
sbb
and
ret
rorb
ljmp
add
jle
adc
insb
stc
and
add
popa
lock
mov
loopne
or
cmpsl
negb
or
and
and
sarl
enter
or
in
ss
sbb
lea
and
jle
lods
sub
mov
mov
data16
or
mov
repnz
xor
roll
lock
pop
xor
pop
mov
or
adc
add
cmp
or
or
popa
mov
cmp
sub
into
sbb
loopne
mov
sbb
clc
mov
xor
orb
push
fisttpl
mov
mov
push
mov
addl
loop
xor
es
nop
in
mov
cmp
nop
fs
xor
shl
loopne
idivb
cmp
and
pop
pushf
test
mov
mov
jle
pop
andl
loopne
in
inc
lret
inc
dec
mov
xchg
and
or
jb
lock
pushf
mov
push
xor
pop
arpl
inc
nop
pop
sbb
cltd
cmp
lods
sub
xorb
add
sub
mov
popf
rorb
push
loopne
or
mov
lret
fsts
and
mov
adc
fnstenv
aaa
pushw
popa
lret
into
fisubrs
xor
cmp
sub
pusha
xorb
sbb
push
and
daa
rcrb
inc
cmp
mov
mov
ljmp
movsb
add
sub
dec
cwtl
mov
mov
inc
xor
pushf
add
ret
push
pop
sahf
add
loop
mov
or
push
add
sub
leave
mov
add
lods
xchg
idivb
push
or
loop
xor
in
adcb
jp
in
int3
xchg
push
xchg
and
cmp
rorb
cs
arpl
fdivl
cmc
shll
ret
into
ret
mov
mov
fidivl
add
ljmp
pushf
out
cs
inc
push
push
jb
cmp
push
hlt
fidivs
cs
xor
bound
shlb
aaa
call
insb
push
nop
add
mov
and
into
rcl
inc
cmp
push
pop
ljmp
in
rep
jp
movsb
and
rcll
sub
push
lods
movsl
xchg
test
dec
dec
sub
mov
inc
daa
cs
mov
mov
outsb
xor
sbb
mov
pop
jo
adc
pop
es
test
add
pop
mov
jno
lret
ret
clc
ret
aas
mov
ljmp
ret
jp
jb
add
pop
jp
jno
rolb
fmull
or
leave
inc
loopne
push
xchg
add
push
mov
or
cmp
ljmp
add
xchg
jo
out
insl
mov
jb
mov
ss
pop
lea
stos
rcl
fcompl
sub
lds
add
int3
pusha
scas
pop
lret
clc
sahf
cmpsl
push
pop
jle
xor
and
mov
test
js
jo
stos
pop
cmp
mov
xor
mov
and
xor
fisttpl
pop
adc
pusha
inc
mov
lods
add
test
mov
in
push
enter
out
dec
test
loope
add
mov
pushf
fs
popa
sub
ficompl
or
adc
push
lret
mov
inc
push
lock
add
test
ret
lods
dec
in
call
pusha
pop
insb
dec
jbe
je
loop
mov
adc
add
push
outsb
lea
pushf
add
jo
lret
lcall
dec
mov
adc
es
xor
imulb
int3
or
adc
call
dec
xor
pop
pushf
mov
fstps
andb
shrb
mov
loopne
mov
xchg
mov
sbb
cli
jl
test
jl
or
add
lods
lods
xor
hlt
and
pop
gs
push
ret
add
cmp
push
xor
movsl
mov
sub
xor
mov
mov
xchg
mov
adc
push
or
mov
mov
add
xor
push
xchg
jb
adcb
rcrl
push
int3
inc
enter
daa
sbb
sarb
lods
mov
push
loopne
pushf
and
cmpsb
lods
adc
pop
adc
add
inc
push
inc
mov
mov
sbb
je
test
pushf
mov
js
clc
loope
loope
aam
pop
loopne
das
push
mov
and
and
cs
add
test
andb
xorb
push
add
dec
sub
das
add
and
call
sbb
adc
mov
rolb
mov
repz
sub
lcall
sarb
testb
je
pop
jns
push
add
mov
xchg
rolb
xchg
push
dec
mov
dec
ss
xlat
je
rolb
les
bound
push
cmp
sarl
mov
and
or
ret
cli
xchg
es
cmp
xchg
cwtl
repnz
push
and
jbe
lret
sarb
lcall
or
mov
add
add
and
push
lret
cmp
pusha
and
add
cmpsb
inc
enter
pop
pop
bound
xchg
es
push
ljmp
pop
js
or
pop
push
hlt
les
cmp
adc
push
pop
sub
sub
orl
cld
mov
out
outsb
mov
or
lods
mov
xchg
and
inc
ljmp
les
jbe
add
jbe
and
pop
cmp
into
sbb
push
inc
jmp
loop
or
add
adc
enter
loop
les
ret
mov
adc
or
xor
dec
sar
mov
sbbl
pop
int3
pop
imul
fimuls
mov
mov
test
movsl
xchg
popf
fs
bound
dec
ret
outsb
sub
cld
or
jo
cmp
cs
test
jb
pusha
arpl
xor
mov
or
sahf
rcr
aam
in
inc
xor
shrb
jmp
xchg
je
loop
and
fiaddl
push
inc
popf
lods
inc
xchg
es
fsubrl
andb
mov
mov
test
lret
lods
int3
outsl
rcrb
sub
jecxz,pn
pushf
mov
inc
mov
popa
lahf
xchg
add
test
and
or
cwtl
pusha
and
lods
lods
jne
jae
movsb
jnp
push
and
or
testb
sbb
dec
pop
pop
add
jb
jo
mov
test
pop
xor
fidivrs
lcall
dec
push
or
push
bound
cs
push
ret
inc
adc
mov
dec
popa
pop
mov
xor
cmpl
inc
and
mov
mov
xor
xchg
out
add
adc
pop
pushf
push
push
xor
je
les
ficoml
int3
pop
pop
ret
cmpsb
jne
xchg
sbb
add
pusha
es
mov
repz
mov
mov
pop
jecxz
cs
jp
dec
add
mov
cmp
xor
or
mov
sbb
clc
cmpsb
sbb
mov
lods
xor
sbb
jo
lods
sahf
adc
push
loope
ss
cmp
repz
dec
inc
mov
xor
cmc
xor
imul
in
enter
popa
adc
jae
xchg
and
pop
mov
inc
mov
fcomp
push
inc
addr16
inc
ret
loop
pushf
in
jo
fisubl
or
dec
les
sarb
pop
shll
cmp
je
inc
cmp
das
sbbb
fcmovbe
or
adcb
rclb
jno
dec
or
outsl
push
or
or
sub
cmpsl
xchg
mov
adc
pop
mov
push
outsb
rorl
mov
inc
inc
mov
or
ret
or
leave
jge
pushf
mov
cmp
add
cmp
xchg
int3
push
rclb
jo
fdivr
cmpsb
xor
out
xchg
adc
push
ljmp
ret
xor
sbb
mov
xor
dec
add
pop
insl
dec
inc
push
daa
in
push
ret
jp
in
sub
or
fldenv
push
push
fsubrs
mov
or
sbb
lock
push
xchg
sbb
add
dec
dec
mov
or
popf
xchg
fstl
adcl
mov
adc
or
add
icebp
ss
push
push
sbb
mov
aam
sbb
idivb
lods
rorl
test
adc
inc
fsts
movsb
rorb
ss
movsb
adc
pop
add
xchg
into
push
aam
fimuls
pop
pop
inc
dec
ss
inc
out
jp
cmc
ss
cmp
sbb
loop
scas
xor
push
mov
add
xchg
mov
dec
pop
test
push
xchg
jle
pusha
pusha
addr16
cltd
sbb
pop
es
xor
fsub
xor
xchg
mov
sbb
cwtl
sbb
jnp
xchg
inc
mov
add
sbb
subl
test
pop
mov
adc
mov
int3
rorb
jp
stos
lret
ficoms
mov
scas
dec
into
push
adc
mov
rcrb
add
mov
add
add
dec
pop
inc
mov
cli
sarb
mov
or
dec
jmp
dec
add
push
sub
bound
ljmp
sbbb
xchg
idivb
adc
or
mov
dec
pop
inc
popa
adc
test
jae
notb
add
into
test
dec
pop
jmp
cmp
pop
push
ret
inc
pop
outsl
lret
fidivl
pop
fcoml
test
push
cmp
and
rcrl
mov
xchg
mov
pushf
cmpsb
and
movsb
mov
movsb
popa
and
sbb
add
arpl
mov
movsb
xchg
insb
stos
adc
stos
dec
lret
lret
add
les
dec
aaa
out
loop
cmpsb
into
adc
enter
fmuls
je
add
inc
mov
push
orl
int
push
out
and
ljmp
in
or
mov
sbb
push
lock
xor
imul
or
add
inc
ret
push
jne
sbb
pop
dec
popf
sub
add
rol
loop
andb
in
mov
loopne
push
shll
ds
cmp
sti
loope
add
out
xchg
cmp
sahf
std
sub
sahf
adc
push
push
aam
sub
push
jcxz
imul
rorb
push
mov
mov
xchg
push
xchg
ror
dec
fsubrl
ret
enter
arpl
loop
jg
or
inc
lods
les
xor
mov
mov
mov
xor
and
add
xchg
or
push
sbb
or
loopne
shr
imul
mov
lock
sub
insb
push
es
push
pop
int3
mov
das
xchg
lods
jp
sbb
jp
inc
in
mov
xor
int
cmp
xor
ret
les
add
arpl
jp
adc
aam
xor
pop
cmpsl
xchg
shlb
movsl
or
mov
jno
inc
or
xor
sbb
fs
test
ror
pusha
or
inc
mov
pusha
pop
lock
mov
add
icebp
cmp
add
or
add
pushf
and
mov
js
adc
jp
lret
fs
bound
mov
cs
ss
cmpsb
pop
adc
or
mov
fsubs
xor
jo
ds
and
bound
cmpsl
sbb
mov
jo
cmp
loopne
or
inc
or
outsl
loop
fs
enterw
add
xor
lcall
cmpsl
mov
jmp
xchg
cld
xchg
sbb
mov
or
sbb
and
rclb
into
out
mov
xor
mov
mov
dec
push
popa
push
ret
mov
or
sub
loope
xchg
mov
mov
loope
mov
mov
lcall
mov
dec
adc
repnz
dec
fldenv
cmpsb
insb
mov
cmc
adc
cmp
xchg
enter
push
pop
add
out
out
mov
xchg
cmp
and
dec
sbb
daa
or
fs
sub
sbb
outsb
sbb
insb
popa
cmp
xor
icebp
sbb
adc
and
mov
add
push
pop
sbb
out
push
js
ret
fmul
outsb
push
loopne
sbb
cmp
and
in
sub
enter
aaa
hlt
insb
or
mov
dec
sub
add
bound
rcrl
inc
mov
and
movsl
mov
mov
xchg
fiadds
push
push
imul
mov
add
outsl
push
xchg
sub
ret
push
addr16
je
ljmp
pop
xor
dec
addr16
or
add
lret
loopne
pusha
stos
push
xor
xchg
shl
test
shlb
pop
in
mov
popa
cwtl
inc
fsub
cmpl
pushf
int3
lods
ret
aam
and
cmp
test
cmp
notb
jno
cmpsb
pushf
nop
lea
mov
aaa
inc
sub
sub
and
decl
out
int3
inc
or
pusha
adc
sbb
mov
add
add
push
mov
cld
enter
in
sbb
push
cli
pushf
loop
sbb
xchg
xorl
insb
adc
lods
inc
fsubr
push
or
push
inc
pop
pop
sbbb
loop
lods
push
xor
add
push
ds
gs
cmp
xor
loope
shlb
fs
fldt
xor
rol
popf
cmp
pop
into
add
repnz
outsb
and
push
inc
jmp
push
in
loop
not
sarb
or
cmp
mov
js
add
pop
and
lods
or
sbb
or
lods
mov
inc
test
ds
sub
push
jae
scas
jo
mov
loop
sarb
inc
divb
jo
or
cmp
and
subb
lods
mov
sahf
add
and
and
ds
jb
loop
xchg
or
xor
mov
stos
xchg
push
xchg
mov
inc
rclb
mov
mov
xchg
ret
test
dec
push
inc
sbb
xor
add
or
mov
cmp
jp
or
sahf
rclb
aam
fimull
or
or
dec
inc
sbb
orl
adc
cmp
movsb
adc
dec
add
imul
push
loope
cmp
ds
rolb
ss
mov
add
inc
rcrl
sbb
add
pop
xchg
dec
pop
neg
cmp
sbb
adcb
pop
notb
push
cmp
and
add
ja
cmpsl
jne
push
adcb
inc
pop
loop
mov
ret
mov
mov
imul
sub
inc
les
add
adc
sbb
cwtl
dec
cltd
xor
push
or
add
adc
push
hlt
sahf
stos
dec
sbb
xchg
push
andl
dec
sub
dec
mov
jmp
shlb
mov
shll
push
xchg
lock
mov
push
testl
mov
cmpsb
dec
dec
outsb
adc
pop
js
mov
push
movb
xor
ret
in
or
xchg
or
fadds
les
leave
mov
or
ljmp
stos
ljmp
adc
push
jo
xor
lret
jo
addr16
sbbb
add
outsl
fcomps
mov
cmp
xchg
add
shrb
cmp
cwtl
enter
adc
add
jb
adc
xor
mov
add
xchg
aad
out
stos
or
and
cmp
inc
cmp
xchg
adc
ror
push
jbe
outsb
sub
loopne
inc
sahf
sbb
xchg
push
xchg
lods
or
cmp
mov
popf
add
sub
fmull
js
mov
and
and
xchg
add
ja
sub
ja
sbb
js
push
popf
rolb
xchg
xlat
cmp
pusha
jno
orb
lock
add
add
cld
rolb
mov
ficompl
add
jp
stos
inc
push
lock
dec
nop
clc
jno
int3
push
stos
ss
jg
nop
or
nop
jg
or
testb
into
jne
xorb
jno
pusha
xchg
add
imul
loop
add
cmp
fistpll
fcmovb
fimuls
cli
int3
mov
or
sub
xchg
inc
lods
add
xlat
adc
mov
and
int
outsb
add
arpl
mov
and
add
sbb
lea
cmp
sub
sub
dec
adc
add
or
jmp
imul
ja
movsl
inc
fstps
test
and
lcall
daa
js
outsl
ret
inc
ja
push
pop
mov
ret
pop
rcr
or
xchg
xchg
cmp
and
aas
fisttps
jne
mov
sbb
sbb
push
push
push
dec
fldl
cmpsl
mov
dec
add
mov
insl
jmp
cmpsl
add
ret
xor
shl
popa
pushf
daa
push
add
or
xchg
out
dec
stos
jge
cld
jmp
outsl
mov
sub
and
sub
jno
scas
xor
sub
iret
repz
dec
mov
fcmovnb
mov
mov
clc
xchg
add
inc
popa
mov
add
sub
adc
loop
fsubrs
sub
in
push
mov
xchg
jl
pop
sbb
add
lret
or
jbe
lods
fcompl
xor
mov
ss
popl
inc
dec
cmp
sub
les
pop
mov
jne
sarb
or
dec
xchg
bound
cmp
adc
and
hlt
imul
dec
push
loopne
adc
sub
lock
test
push
std
cmp
jne
sbb
pop
mov
jp
mov
and
jo
jno
ret
add
gs
push
or
dec
test
xchg
or
les
jo
cli
push
lock
dec
aam
mov
lea
inc
adc
sbb
or
jno
lea
jo
cmc
mov
aam
fdivrl
scas
ljmp
jl
and
add
cmp
push
lea
sarl
rolb
lods
orl
cmp
mov
sbb
ds
add
je
in
pusha
xchg
out
jo
xor
out
sbb
pushf
test
nop
add
ret
les
sub
push
fidivrl
push
mov
add
mov
pop
dec
mov
in
rclb
pop
je
test
js
cld
dec
cmp
lret
lcall
jnp
xor
into
xchg
adc
int3
add
jp
arpl
lret
inc
imul
and
add
xorl
and
in
mov
sbb
add
pop
arpl
enter
xor
bound
int3
push
and
test
inc
xchg
out
xor
mov
int3
sahf
xor
out
sub
repz
ja
or
push
pop
test
or
add
pop
adc
mov
inc
cmp
cmpsb
mov
adc
push
mov
inc
mov
cmp
mov
ret
xchg
out
or
cmp
in
idiv
loop
arpl
sti
nop
mov
lret
movsb
xorb
xchg
jl
mov
popa
daa
mov
test
inc
mov
and
roll
popf
and
pop
pusha
inc
mov
sahf
sbb
or
js
pusha
sub
les
inc
or
push
push
arpl
ljmp
add
pop
inc
sbb
pop
js
es
and
xor
sahf
and
mov
push
shlb
push
inc
loopne
into
ret
pop
adc
or
aam
jbe
add
inc
jecxz
loope
loop
cmp
add
xor
mov
orl
mov
sbb
pop
imul
xchg
dec
xlat
enter
sbb
pop
cmp
sbb
shlb
data16
sbb
test
sub
pop
xchg
pop
fadd
rcrb
mov
sbb
out
or
in
mov
bound
mov
stos
pop
mov
xchg
push
xor
mov
add
sub
int3
cmp
aam
es
popa
lcall
or
orb
imul
xchg
arpl
or
roll
adc
cmp
jmp
aam
pop
dec
subl
imul
sub
mov
mov
or
mov
mov
jmp
loop
lcall
adc
jle
add
add
sbb
stos
push
aaa
sbb
call
inc
ror
jg
lock
insb
addr16
filds
cmpsl
lods
and
cmp
pop
push
mov
mov
pop
jmp
test
es
fwait
lock
outsl
gs
int3
aas
bound
lods
dec
and
push
and
pop
dec
sbb
push
mov
lret
mov
cmp
add
pusha
insl
insb
hlt
adc
sub
inc
sub
fwait
mov
loope
jmp
add
mov
dec
mov
pop
push
push
lock
fnstenv
pushf
or
cmpsb
xchg
push
filds
inc
inc
jp
iret
cmp
or
inc
sbb
jae
mov
and
xchg
or
sbb
sub
idiv
inc
adc
and
test
adc
lea
sbb
add
test
fdivrs
popf
cmp
sbb
push
add
int3
and
xchg
or
and
or
jbe
iret
inc
or
dec
ss
es
mov
clc
aaa
add
lods
mov
add
xchg
mov
jns
movsl
adc
mov
flds
xchg
adc
rol
inc
or
sarl
test
fstl
cmp
mov
imul
stc
sbb
add
lahf
ret
cwtl
test
adc
jge
and
pop
jmp
clc
mov
xor
push
imul
sub
testl
enter
pusha
xor
lods
in
or
or
cmp
and
rorb
adc
adc
les
dec
sbb
rcrb
imul
adc
or
orb
cmpl
jecxz
loope
push
movsl
shr
xor
mov
in
mov
ret
into
mov
jecxz
mov
mov
movsb
sbb
rcr
jae
sbb
pop
mov
filds
inc
fmull
push
and
mov
jle
add
repnz
add
push
and
or
cmp
jbe
push
fcmove
rol
fists
iret
and
test
loopne
fldcw
cwtl
xor
mov
push
push
adc
add
ror
iret
mov
popa
mov
divl
sub
in
neg
rolb
jae
adc
add
mov
adc
int3
fisubrs
sbb
fisubs
jecxz
lret
jecxz
and
addb
loopne
ret
pop
or
popa
pop
ss
xchg
add
test
jae
xchg
fmull
push
push
aad
out
fcoml
add
sbb
sub
imul
sub
dec
mov
scas
pop
lds
cli
jmp
test
scas
ror
jae
les
ljmp
pop
rol
adc
aam
inc
and
movl
out
cmp
inc
js
and
in
lahf
push
jno
nop
sub
testb
shlb
pop
jno
stos
fsubl
daa
fcoms
jmp
sarl
test
push
sbb
push
cmp
xor
fdivrl
addr16
add
rcl
ja
sbb
fsubr
das
push
push
and
or
orb
outsb
fmull
mov
adc
out
push
and
sbb
or
rorl
out
rorb
out
js
mov
and
in
add
or
mov
inc
adcb
or
dec
push
ss
aaa
pop
out
pop
inc
pop
xchg
imul
inc
dec
jecxz
xchg
add
add
sbb
and
push
push
mov
mov
sub
pusha
or
or
mov
pop
mov
add
sub
sbb
mov
xchg
inc
enter
clc
movsb
xchg
je
jno
test
pop
xor
dec
mov
popa
pop
je
sbb
mov
xchg
popf
ja
test
or
inc
mov
push
int3
cmp
sub
add
xchg
pop
les
mov
dec
aam
push
enter
sub
lock
add
jno
push
and
cld
fneni(8087
push
xchg
testb
sub
xor
fistl
jno
ss
data16
adc
fs
mov
clc
xor
mov
or
xor
dec
xchg
call
pop
lds
int3
pop
lock
enter
out
cmp
dec
xor
lret
lret
repnz
mov
or
mov
inc
inc
jl
mov
lret
xor
mov
test
dec
add
add
lcall
mov
or
push
pop
in
nop
aam
ret
addb
lret
push
xor
cli
dec
in
add
mov
pusha
rorb
xchg
cli
popf
add
or
hlt
adc
add
mov
fwait
test
mov
jo
addb
or
mov
dec
jmp
mov
pusha
add
addl
cmovae
adc
mov
or
and
ret
rorl
sub
xor
inc
arpl
cmpb
xchg
dec
loop
lret
adc
enter
cmp
nop
call
insb
outsb
cmpb
jno
mov
js
xchg
cmpsl
add
mov
mov
or
cld
add
add
icebp
sub
xchg
xor
sub
cmp
stos
pop
dec
add
or
cmc
ret
call
or
push
in
or
add
or
js
xchg
pop
sahf
sbb
imul
sbb
add
outsb
popf
movsb
xchg
xchg
push
pop
fidivl
imul
xchg
sub
dec
xor
ficoms
mov
and
xor
hlt
and
adc
push
jbe
test
fsub
inc
inc
xchg
daa
shrb
jle
in
mov
fcompl
or
cmp
js
pop
mov
cwtl
push
push
cmpsb
js
ret
adc
int3
fsubrs
loopne
hlt
lock
mov
sub
push
mov
mov
mov
mov
add
cmp
iret
xor
mov
fdivrs
sbb
call
cmp
rcrl
xor
js
push
mov
add
sbb
pop
add
lea
hlt
out
adc
or
loop
loope
mov
or
in
inc
cmpl
jne
mov
adc
movsb
test
les
pop
fs
fwait
ret
jnp
add
sar
or
mov
fdivl
gs
sub
sub
push
mov
and
mov
or
jns
xor
in
lret
xchg
les
xchg
adc
inc
popf
or
and
dec
popa
in
testb
sbb
in
ljmp
insb
lcall
cltd
cmp
insl
xor
loopne
lret
cmp
and
popa
inc
push
pushf
or
xchg
xor
lock
jmp
or
les
and
inc
dec
aam
add
scas
mov
rcrb
mov
enter
les
fadds
popf
fs
jae
or
fmul
fisubs
or
rcrb
jmp
mov
xor
push
movsb
xchg
adc
inc
shlb
sarl
test
or
out
jp,pn
push
jb
cmp
pop
popf
aam
cs
rolb
popa
xor
outsb
fdivrl
rcrb
sbb
cmp
adc
aaa
sub
jp
stc
or
outsb
enter
xor
and
sub
jns
stos
loop
mov
gs
or
test
cmp
xadd
push
mov
daa
add
mov
mov
add
pop
fmuls
cmp
adc
inc
les
dec
lods
stos
ds
rorb
xorl
add
jns
lcall
cli
stos
test
mov
rclb
jo
sbb
roll
xchg
int3
test
push
push
mov
sub
mov
cmp
fs
arpl
fs
mov
pusha
jo
ficomps
fs
dec
in
sub
and
cld
adc
adc
mov
stos
push
mov
add
lret
xchg
xor
ficoml
fisubrl
mov
fcoml
xchg
in
test
cwtl
loopne
ret
aaa
push
ret
push
lock
cmpsb
aam
rorb
mov
mov
cmp
clc
adc
pusha
pop
sbb
push
mov
adc
or
in
call
adc
or
sub
ds
fcoml
xchg
jo
ret
mov
xchg
add
jo
inc
sbb
pushf
sub
mov
add
jae
cwtl
dec
sbb
rcrb
mov
sbb
adc
mov
inc
or
mov
inc
bound
cmpsl
ret
inc
mov
and
inc
aaa
lcall
mov
test
or
outsl
das
out
lcall
add
hlt
outsl
sub
or
xchg
lahf
sbb
lcall
or
xchg
pop
idiv
lea
xchg
and
clc
adc
rcr
xor
popa
loop
iret
xor
mov
outsl
in
gs
packssdw
push
add
mov
lock
mov
xor
addl
dec
mov
push
je
enter
addr16
cmp
push
xor
xlat
icebp
nop
mov
mov
cmp
clc
dec
addr16
push
mov
xchg
lods
orb
sbb
push
or
sahf
mov
pusha
cmpb
adc
mov
and
xor
push
jo
movb
movsb
int3
jb
sbb
cs
fwait
or
pop
into
xchg
cmp
push
rcrb
and
lods
stos
das
ret
inc
jo
test
loopne
es
sbb
movsb
and
or
jo
cli
mov
scas
aad
int
clc
push
mov
mov
test
mov
cmp
int3
inc
dec
popf
sub
push
push
add
and
ljmp
fwait
lock
out
popa
fs
cltd
ret
mov
std
push
iret
lret
nop
adc
into
repnz
mov
pop
fiadds
mov
inc
mov
popa
sbb
cmp
lods
daa
andb
xorb
shufps
and
dec
and
test
mov
adc
cmp
test
adc
push
or
loop
mov
xor
and
sahf
cmp
or
sub
iret
mov
pop
mov
insb
jo
adc
jle
jb
loope
ret
mov
cmp
xor
scas
ret
add
dec
cmp
mov
jecxz
cmp
test
adc
pusha
xorl
xchg
inc
sub
test
jle
sub
or
pushf
int3
cmp
and
xchg
js
and
in
lea
pop
movl
lret
daa
xchg
jl
push
pushf
inc
cmp
movups
add
call
test
or
adc
sub
add
xorl
xchg
sbb
mov
mov
rcrb
arpl
lret
dec
xor
cmp
call
loop
xor
cmp
xchg
dec
and
jb
or
pop
adc
movsb
adc
xor
or
xor
sbbl
jno
pushf
lods
fs
jo
sub
lret
mov
add
pushf
call
pop
pusha
loopne
adc
sbb
or
or
sub
inc
dec
adc
add
dec
outsl
cmp
js
add
inc
pop
int3
ret
xchg
sub
jo
pop
and
adc
inc
dec
dec
data16
sub
pop
mov
push
xor
bound
mov
je
ficoml
cmp
pop
adc
sub
mov
mov
cmp
es
mov
loop
pop
cmp
mov
and
lea
pop
lods
cmc
into
insl
xchg
je
xor
and
mov
xchg
adc
out
shl
push
pop
std
fistpll
add
hlt
add
mov
inc
push
mov
ret
mov
fsubrs
cs
repnz
adc
call
add
test
outsb
sbb
xor
rol
test
sbb
push
xchg
movsb
mov
cmp
pop
push
mov
jp
xor
inc
xor
sbb
inc
cmp
rcll
dec
dec
rclb
mov
sub
enter
cmp
aas
je
call
decb
or
inc
lcall
mov
mov
pop
orb
cltd
lock
xchg
cmp
and
mov
cmp
adc
sbb
cmp
outsb
data16
push
xchg
push
mov
or
mov
lret
dec
bound
jne
adc
popf
mov
xchg
lock
rorb
pop
adc
pop
mov
jb
xor
xchg
call
decb
icebp
adc
and
inc
xchg
mov
pushf
adc
lods
movsb
loop
cmpb
push
data16
mov
jb
inc
or
cmp
pop
xchg
lock
jb
xor
dec
pop
push
dec
ret
or
add
icebp
rol
sbb
xchg
sarb
jl
add
and
push
sahf
add
xor
ss
movsl
mov
test
repz
enter
daa
sbb
ror
popa
pop
popa
or
push
inc
adc
cmp
icebp
push
xchg
shrb
loope
test
lret
fs
ljmp
push
push
mov
adcl
orl
lret
enter
sub
cmp
sahf
mov
movsl
jnp
xor
outsl
sub
xchg
adc
insb
push
dec
and
adc
ss
mov
bound
adc
in
add
cmp
dec
cmp
decb
pop
inc
ss
loopne
pop
xchg
ret
and
and
into
sub
outsb
add
jbe
cmp
push
sub
loop
mov
xor
lea
adc
popa
or
cli
leave
shll
in
inc
xor
pop
pusha
cli
ret
push
adc
incl
push
lods
sub
xchg
popa
pop
push
sbb
sbb
ds
inc
xchg
cltd
cmp
cltd
loopne
lret
add
jo
or
xchg
movb
aam
sub
repnz
xchg
call
loopne
xchg
popa
inc
lea
push
xor
mov
test
std
rol
mov
cmp
adc
xchg
mov
and
add
decb
xchg
xchg
aam
xchg
and
inc
or
ss
xchg
xchg
popf
sub
enter
les
mov
or
and
push
mov
push
push
clc
xchg
cmp
and
sub
out
pusha
hlt
mov
jne
xor
cmp
cmpsl
inc
cmpb
sbb
cmpsb
rcrb
add
mov
xor
sbb
xchg
push
stos
movl
mov
lods
dec
fstl
rclb
dec
jnp
push
pusha
and
and
cmp
cmp
in
jl
pop
and
push
xchg
xor
sub
mov
lods
in
or
outsb
popf
imul
mov
aam
xchg
rcr
add
pop
cwtl
in
test
sub
push
ret
xchg
jle
pusha
ja
popf
mov
sbb
push
andb
mov
mov
push
sbb
test
es
jge
xchg
sarb
adc
and
lret
clc
jp
xchg
aaa
mov
push
lcall
cmpsl
xor
sahf
xchg
push
test
add
xor
outsb
dec
inc
inc
cmp
and
cmp
movsb
bnd
dec
bound
data16
sbb
pusha
mov
sbb
data16
rcl
push
pushf
dec
or
dec
fimull
cs
xor
sbb
pop
mov
adc
cmp
cs
cmp
sbb
lret
push
mov
mov
xorb
div
js
push
loopne
nop
mov
in
or
fbld
and
es
shlb
push
cmpb
popa
xlat
cmp
mov
rcrb
inc
cmpsb
sub
xchg
sbb
andb
cmpsl
push
and
repnz
and
mov
ret
lahf
push
dec
mov
int3
test
je
mov
andl
add
pop
adc
sub
inc
hlt
mov
xor
ja
sbb
cli
adcb
popa
dec
mov
loopne
xchg
cmp
sub
push
mov
pop
cmp
jp
lret
ret
lret
push
mov
mov
push
sub
lds
fidivs
xor
test
dec
popa
or
dec
pop
in
pushf
sbbl
pop
mov
nop
comiss
mov
mov
or
mov
sub
xchg
out
fs
or
sub
adc
inc
cmp
jbe
in
adc
stos
hlt
mov
mov
pop
jmp
mov
loope
mov
int3
into
add
test
cmp
push
sub
dec
imul
cmc
jp
mov
enter
inc
mov
inc
push
ss
sbb
scas
imul
cmpsb
repnz
jl
mov
mov
sub
in
and
pop
inc
cmp
stos
pop
adc
ljmp
lret
test
add
aas
ljmp
xor
sbb
inc
loopne
lret
lods
mov
sbb
dec
xor
test
mov
test
push
sbb
or
xchg
mov
xor
jo
lock
clc
pushl
sub
cld
xchg
fnstenv
ficomps
inc
and
cmp
loop
in
or
push
jo
xchg
push
mov
ret
jl,pt
daa
xchg
pushf
mov
mov
dec
dec
add
or
push
les
inc
pusha
test
imul
cmp
push
shrb
test
push
daa
leave
push
sbb
pushf
test
dec
ljmp
inc
dec
fdivrs
jbe
jp
hlt
cs
fs
add
push
test
add
dec
push
in
in
add
jae
enter
lods
inc
cmp
xchg
aam
xchg
aam
and
test
inc
lcall
inc
add
enter
mov
cwtl
cld
push
mov
xor
sub
mov
inc
ss
addl
hlt
xor
pusha
add
xor
jp
xchg
outsb
repnz
pop
les
test
outsb
in
sub
jp
fisubs
js
fsubp
outsb
dec
incb
xchg
fsub
cs
add
adc
inc
in
out
sbb
negl
xchg
jbe
rcrb
or
xor
sbb
jb
fdivl
fdivr
sbb
pop
dec
mov
pop
daa
mov
push
sub
enter
push
ret
int3
int3
enter
fcoml
add
xor
dec
pusha
mov
mov
mov
push
pop
sti
pop
scas
ret
cmp
xor
xor
js
sbb
iret
enter
dec
int
and
sub
sub
sbb
sbb
push
loop
sub
adc
add
or
pop
dec
mov
fmul
loop
xor
or
and
xor
adc
gs
xchg
ss
das
verr
or
loopne
and
jno
ret
dec
xchg
xchg
mov
mov
add
cmp
or
rcl
or
subb
push
sub
dec
cwtl
or
xchg
and
pop
pop
or
out
ss
adcl
jbe
inc
sub
inc
xor
mov
cmc
mov
je
add
adc
mov
or
sti
loopne
pusha
ret
shrb
mov
mov
sub
call
imul
push
add
adc
push
adc
scas
or
fisttpll
js
push
inc
fstpl
sub
rcrb
and
push
mov
sbbb
pushf
loopne
mov
sarl
jnp
xor
pop
mov
push
sbb
movsb
js
test
mov
ret
push
ss
pop
out
pusha
dec
jmp
and
mov
or
sbb
push
lods
mov
cmp
arpl
fprem
mov
cmp
ret
and
cmp
push
pop
movnti
xchg
sub
in
popa
or
call
xor
or
in
adc
pushf
js
icebp
inc
ficomps
push
andb
adcb
xchg
add
ret
cmp
je
test
jge
fidivl
fcmovnb
push
inc
insb
and
pop
rorl
mov
repnz
insb
loopne
shll
xlat
or
push
push
aam
xchg
jge
add
add
int
sbb
loope
in
not
xor
mov
mov
inc
fcmovnb
or
sbb
pop
sbbl
enter
mov
or
xor
xchg
inc
fdivl
rcrl
adc
inc
rorl
aad
insl
jns
test
push
repnz
pop
mov
add
add
cwtl
xchg
xor
fstl
not
cmpb
clc
xor
inc
pusha
and
fs
cmp
fs
ljmp
xrelease
data16
jnp
mov
fdivrl
jmp
add
bound
mov
and
mov
sti
sbb
mov
pop
jp
pop
pop
adc
loop
or
xchg
cwtl
mov
xchg
xchg
loopne
rclb
xchg
and
push
stos
test
pop
aaa
test
xor
xor
loop
lock
mov
add
mov
and
mov
adc
add
in
fbld
adc
testb
or
jl
scas
out
add
out
mov
ds
shl
dec
sub
shrl
lods
inc
mov
pop
jecxz
push
dec
push
mov
shl
push
xor
add
mov
loope
mov
dec
shl
or
inc
insb
dec
inc
sarl
out
movsl
pop
aam
not
mov
out
add
dec
cmp
and
push
push
push
add
sub
sbb
and
add
sbb
aad
adc
lahf
mov
jmp
ljmp
testl
incl
inc
mov
aaa
mov
imul
sbb
xchg
xchg
std
dec
mov
nop
repnz
xchg
dec
sub
jb
lret
cmc
pop
sahf
js
test
xchg
loopne
push
je,pt
mov
xchg
dec
push
xchg
in
add
fdiv
cmp
mov
movsb
scas
fdiv
adc
cmp
and
ss
sbb
inc
test
aaa
or
testl
mov
cmp
loopne
add
pop
frstor
int3
mov
mov
push
mov
adc
or
pushf
dec
jns
jo
and
enter
add
dec
je
lret
pop
jle
push
in
or
adc
out
xor
xor
cld
mov
lods
mov
lock
jo
jno
jl
popa
sbb
xchg
xchg
mov
sbb
pushf
or
out
mov
pusha
jmp
ljmp
pop
dec
cmp
lcall
jle
xor
and
sub
lods
sub
add
jbe
and
loop
enter
cli
pop
jo
loopne
add
les
push
ret
inc
jp
ret
inc
push
inc
sbb
add
xor
sarb
pusha
pusha
jo
lods
adcl
jbe
or
rorl
cwtl
jno
icebp
xchg
xorb
mov
and
sub
dec
ja
mov
push
jno
xchg
pop
mov
cmp
push
ret
push
outsl
inc
loopne
push
pusha
out
loopne
fisttpl
sbb
rcrb
cmp
xchg
mov
cmp
adc
daa
push
ret
insb
call
xchg
mov
mov
xchg
pusha
sbb
testb
repnz
push
enter
daa
test
cmp
pop
pop
outsb
mov
sahf
test
fcmovbe
addb
fdivp
jbe
jne
dec
pop
loop
jecxz
cmp
pop
or
popf
pop
and
or
sbb
cmp
xchg
cmp
into
enter
push
cmp
scas
push
cmp
push
testb
lods
or
or
ss
lret
jns
lret
dec
xchg
mov
mov
add
push
cmp
mov
outsb
jecxz
inc
sbb
addb
inc
hlt
sub
out
loope
hlt
test
pop
ficoms
ret
mov
pushf
pop
inc
loope
shlb
inc
lea
mov
sbb
cmp
lret
ret
xchg
ret
outsb
xor
loope
enter
xor
hlt
and
data16
sarb
or
pop
in
push
das
sbb
lock
push
sbb
mov
add
mov
insb
mov
repnz
test
dec
loope
test
jp
fcmovb
push
pop
add
cli
mov
shll
mov
xor
cmpsb
add
js
push
dec
pop
push
loope
inc
add
enter
loopne
aad
dec
subb
pop
dec
mov
clc
inc
add
fcompl
xchg
mov
lock
pop
jp
in
push
loopne
js
and
add
hlt
add
adc
sbb
add
lock
lret
cmp
adc
rol
push
xchg
hlt
and
or
loop
mov
inc
mov
push
rorb
xor
and
adc
mov
ja
fsubrs
rolb
xor
mov
movsl
pop
xchg
lock
or
scas
int3
nop
jno
cmpsl
mov
jo
or
outsl
lret
mov
loope
sbb
dec
or
and
test
or
xchg
xor
add
xchg
nop
dec
clc
jg
sbb
out
wrmsr
pop
inc
aaa
xor
add
insb
pop
clc
fsubrs
or
and
mov
pop
adc
add
test
add
in
xchg
js
loope
push
pop
or
mov
xchg
pop
imul
pop
sbb
fsubs
jbe
sub
inc
push
or
inc
adc
data16
fmull
dec
fsubrs
lods
jbe
or
bound
add
insl
add
jecxz
adc
ja
push
xor
sub
and
mov
dec
shr
sbb
pop
inc
sub
adc
jmp
jbe
mov
lods
in
or
fimuls
sbb
add
sub
mov
xor
mov
push
shlb
aad
or
jmp
icebp
nop
fcom
inc
fnstcw
cli
dec
ficompl
rol
stos
hlt
ljmp
or
adc
adc
or
lahf
dec
lcall
loop
shrb
lods
int3
cld
jns
sbb
add
pop
dec
adc
mov
je
or
cmovs
dec
push
iret
ret
dec
mov
rol
add
icebp
outsb
ret
sub
cli
xchg
pop
dec
loopne
cltd
adc
call
and
je
push
jb
in
xchg
and
xor
cmp
dec
jg
je
andb
mov
mov
dec
cs
fadds
test
xchg
shrb
add
test
push
sub
dec
jecxz
push
mov
jle
test
and
dec
jle
arpl
push
lret
rolb
orl
vmwrite
push
ret
adc
sbb
xor
sbb
nop
and
sar
fnstenv
rcll
pop
test
es
add
sub
into
nop
sbb
or
pop
andl
aam
sbb
test
fcoms
mov
push
sbb
and
test
js
xchg
push
pop
sarb
pop
xchg
cmp
lcall
test
ljmp
mov
or
imul
jmp
sub
or
cld
mov
add
pop
test
push
lcall
dec
sub
les
adc
sbb
pop
inc
mov
mov
pop
mov
inc
push
sbbl
test
and
fadd
nop
sub
adcl
push
sbb
and
sbb
flds
js
or
addr16
in
or
sub
mov
pusha
pop
loop
inc
mov
lret
gs
jne
int3
mov
inc
test
cmp
adc
ret
fistps
push
inc
imul
call
xchg
push
xor
imul
xchg
sahf
dec
pusha
inc
sub
sub
sbb
inc
les
test
sub
imul
push
xor
jo
shrb
nop
pop
cmp
incb
test
test
pusha
and
mov
add
or
xorb
cmp
jno
sub
jno
in
jo
cli
movsb
dec
andb
ret
outsl
adc
subl
sar
test
and
data16
push
sub
mov
cmp
jns
jo
xchg
rcrl
push
pop
loopne
pusha
sub
insl
lods
push
lods
daa
push
mov
pop
push
xchg
xor
outsb
cwtl
adc
sbb
xchg
adc
mov
and
jbe
je
in
gs
dec
ljmp
jnp
jle
arpl
push
cmp
push
or
mov
aaa
sbb
hlt
mov
adc
cmp
push
out
push
scas
rorl
aam
shlb
xchg
fcoms
mov
push
bnd
movsb
dec
or
sub
aam
loop
movb
add
or
inc
push
js
jle
adc
dec
dec
fistps
dec
sub
sub
ret
add
ret
inc
dec
enter
mov
shrb
jb
cmp
js
sub
data16
sub
pop
dec
xor
xchg
movsb
cmpsb
pop
and
jl
jmp
or
push
sub
shrl
repnz
cwtl
mov
cs
and
sbb
inc
add
insb
mov
invd
push
sub
or
mov
imul
ret
ret
andb
shl
and
mov
sbb
nop
popa
pop
mov
lock
les
dec
adc
jp
out
mov
mov
fisubrl
add
mov
jbe
push
outsb
lods
push
mov
cli
testb
test
cmc
mov
les
sub
popa
int3
inc
fsubr
add
jb
je
lret
fadds
xor
fdivl
inc
popa
xor
insl
lret
mov
hlt
xchg
jns,pt
sub
dec
and
xor
test
test
ret
mov
adc
int
xor
xor
add
mov
push
movsb
xchg
loop
ret
fs
pop
dec
add
inc
mov
adc
bound
popf
push
pusha
add
add
dec
adc
mov
push
inc
pop
and
jbe
push
xchg
push
jbe
pop
xchg
sbb
jp
popa
sub
ret
xchg
nop
imull
and
insb
add
dec
dec
test
adc
adc
hlt
push
lock
mov
adc
inc
adc
jo
mov
and
mov
add
cmp
mov
sbb
xchg
dec
cmp
ret
rcrl
mov
inc
xchg
pop
inc
pop
push
mov
inc
nop
push
inc
ret
cmp
fs
shrb
jmp
or
into
movsb
xchg
ret
iret
movsl
dec
mov
xor
jno
xchg
or
lcall
call
xchg
add
dec
mov
cmp
add
sbb
pop
push
inc
mov
adc
cld
jo
add
arpl
sti
cmp
or
jle
lods
push
dec
leave
and
out
mov
add
mov
bound
sbb
dec
mov
pushf
fimuls
lods
mov
in
or
pop
mov
aam
movsb
js
xchg
or
lret
insb
xchg
xchg
sahf
je
pop
nop
rolb
lods
sbb
add
jp
repnz
adc
test
enter
lret
iret
add
js
or
add
or
mov
loope
lea
ret
or
mov
insl
into
adc
daa
fs
xchg
inc
les
mov
addb
int3
cmpb
dec
clc
fisttpl
jle
mov
push
or
cmp
sub
addb
loopne
cmp
pop
adc
xchg
test
cmp
pop
dec
inc
xchg
nop
pop
sub
mov
nop
push
ljmp
test
lock
lods
add
aam
dec
test
popa
jo
or
mov
xor
sbb
insl
cmp
push
loopne
mov
or
adc
sarb
cmp
cmp
lock
mov
pop
mov
add
sub
nop
mov
or
adc
fiaddl
in
lcall
push
cmpsb
xchg
mov
out
xchg
and
mov
adc
mov
adcl
cwtl
movsl
and
mov
shll
and
pop
lret
dec
mov
adc
jo
fldl2e
inc
shll
je
add
xchg
movsb
mov
loop
rolb
dec
jge
cltd
add
and
push
cli
dec
rolb
add
test
jl
stos
or
ficoms
jl
sbb
outsl
push
jns
mov
lods
sbb
jmp
fs
or
mov
cltd
or
insb
jmp
mov
or
loope
cmp
push
mov
push
fiadds
test
rolb
mov
xor
mov
test
mov
inc
insb
sbb
adc
dec
mov
ret
jno
or
rclb
dec
loop
sbb
push
or
push
xchg
shlw
pop
sbb
fcmovb
cmp
xchg
test
push
push
cmp
sbb
inc
cmp
cmp
adc
jp
dec
ret
or
cmp
je
sahf
jmp
rorl
jb
push
js
add
xchg
pop
pop
nop
mov
jo
lcall
fcoml
jb
test
bound
loopne
mov
aaa
pushf
cmpsl
enter
sub
push
dec
dec
loope
adcb
sbb
jbe
mov
push
dec
jge
add
sub
lods
add
sub
cmp
xor
pop
mull
inc
rclb
xchg
lret
cmp
pop
insb
add
bound
push
xchg
xchg
and
fwait
sub
adc
push
dec
ds
jb
popa
adcb
mov
dec
adc
jmp
sbb
xor
push
rol
mov
cmp
xchg
pop
jo
dec
mov
push
dec
loopne
leave
aad
ret
aam
call
push
pop
jo
insb
andl
in
outsb
cmp
cmp
lret
sbb
into
jle
push
sbb
or
popa
arpl
pop
inc
xorl
lods
xchg
pop
imul
xor
cmc
popf
test
or
into
jo
pop
std
mov
sbb
inc
lock
in
xor
and
shrl
popa
das
push
inc
sbb
jne
dec
dec
dec
call
add
bound
or
loope
ds
out
adc
and
test
daa
pop
ss
mov
inc
mov
icebp
adc
push
loope
stos
jge
add
push
ficomps
or
and
pushf
adc
sbb
inc
or
cmp
jb
aaa
mov
push
or
dec
stos
div
mov
out
fsubl
or
jp
xchg
xor
and
icebp
inc
ljmp
mov
xchg
cmc
mov
or
loopne
fldenv
add
dec
inc
xchg
jp
adc
sbb
sbb
fsts
and
and
inc
inc
push
js
lret
or
push
outsl
or
add
mov
test
mov
jo
add
or
sbb
pop
mov
xor
or
pop
sub
add
dec
stos
lcall
mov
add
add
js
cltd
lahf
add
lock
lods
hlt
xchg
rolb
push
ret
jp
out
add
add
xor
mov
cmp
aam
push
jp
les
pusha
inc
and
subb
adc
pop
fsubrl
int3
dec
xchg
push
mov
rol
adc
cmp
dec
loopne
nop
xor
popa
sub
stos
mov
mov
or
enter
imul
and
jo
xor
dec
sbb
ret
jl
xchg
ss
push
mov
mov
insb
repnz
mov
das
mov
xchg
addl
pushf
fidivrl
adc
cmp
and
cwtl
icebp
xchg
adc
xchg
adc
sub
movsl
sub
jbe
sbb
lock
dec
cmp
lods
sbb
shll
or
xchg
mov
test
dec
cmp
movb
and
pop
push
lods
pusha
inc
lea
lea
push
sbb
enter
test
push
xchg
mov
xchg
js
les
ret
test
cwtl
test
add
push
test
mov
adc
divb
jno
add
xor
outsl
and
push
cs
pop
mov
or
shl
loopne
test
and
shlb
and
cltd
subl
aam
test
dec
add
jnp
mov
int3
mov
inc
mov
test
and
xchg
lcall
and
sub
push
push
inc
inc
or
hlt
xor
xchg
cmp
cmp
sub
sbb
xor
mov
mov
movsl
sbb
in
inc
sub
xor
fldenv
or
jb
mov
add
push
pushf
xchg
rorb
sbb
or
add
test
or
pop
js
mov
sbb
inc
pushf
insl
sbb
addb
mov
sbb
fdivl
jp
adc
adc
nop
pop
add
inc
ret
dec
sbb
jmp
dec
sub
outsb
mov
push
notb
ret
xchg
int3
push
es
pop
push
xor
daa
pop
add
outsl
xchg
mov
xchg
inc
das
mul
add
or
pusha
jbe
call
inc
pushf
mov
loop
das
push
dec
sub
or
mov
dec
adc
into
pop
xor
cmp
mov
sub
insb
loop
imul
and
jmp
mov
je
pop
je
jno
mov
movsb
or
mov
lcall
push
xor
stos
repnz
mov
loopne
sbb
ficompl
jae
cmp
es
sbb
jno
lret
and
or
mov
adc
sbb
mov
sbb
push
push
lcall
add
ljmp
data16
stos
pop
jp
mov
and
hlt
scas
xchg
fstps
mov
sbb
and
mov
push
daa
insb
ss
jp
mov
push
test
lods
push
jbe
adc
loope
push
out
loopne
push
xchg
lret
or
pop
repz
les
js
cmp
addb
cmp
or
pop
sahf
add
adc
mov
movsl
jle
push
fcompl
fmul
loop
loop
mov
cmp
insb
xorb
outsb
and
rol
mov
add
ficoms
scas
movsb
mov
pop
rorb
pop
dec
xchg
inc
dec
jl
and
shll
icebp
xor
and
repnz
xchg
subb
sub
call
loopne
sub
cmc
out
mov
lock
push
add
push
dec
out
sbb
dec
bnd
cmp
mov
mov
push
and
sbb
pop
pop
sbb
push
pushf
dec
xchg
cmp
pop
pop
and
add
push
add
outsb
enter
jmp
js
mov
ret
add
jp
cmpsb
xor
mov
xor
xchg
push
jns
jo
sbb
cld
pop
mov
jmp
push
call
pop
lods
in
and
into
sbbb
inc
or
in
sarl
aam
mov
push
dec
dec
sub
sub
rcrb
lret
mov
and
lods
mov
mov
jno
add
inc
xlat
xchg
lret
and
pop
sbb
mov
adcl
fs
sbbb
inc
xchg
ret
and
int
pop
js
and
loop
pop
imul
mov
out
imul
mov
repnz
mov
cmp
loop
lret
andb
xor
ss
inc
call
xchg
pop
pop
andb
sbb
pop
ss
push
adc
xchg
es
push
into
push
add
mov
test
push
jne
or
dec
nop
js
xorl
mov
lock
sub
rorb
scas
or
fcmove
push
and
lahf
mov
pusha
and
mov
xchg
aad
inc
pop
mov
cs
jge
jbe
js
sbb
lret
add
clc
xchg
xor
xchg
sahf
jbe
daa
popf
test
push
js
dec
push
enter
addb
dec
xchg
mov
lret
loope
stos
call
add
arpl
mov
jg
xor
call
stos
mov
and
push
mov
ss
mul
fisubl
cltd
sbb
mov
add
imul
repnz
or
and
pop
sbb
pop
and
push
mov
pushf
rol
int3
push
je
sbb
jecxz
or
out
mov
or
daa
test
or
or
int3
and
test
dec
mov
fcoml
pop
xor
mov
jmp
add
mov
sbb
rolb
or
imul
mov
dec
cli
jp
pop
aad
cmp
or
imul
add
fistl
orb
mov
xchg
add
or
add
fs
divb
leave
add
insb
fiadds
add
loop
push
rolb
aas
fisttpl
mov
xor
mov
adc
and
js
xor
into
or
jmp
or
adc
sub
or
aas
mov
add
mov
sbb
mov
enter
movsl
test
inc
test
popa
sbb
dec
adc
and
js
inc
xor
popf
add
imul
ret
lret
mov
jmp
rcrb
mov
dec
xor
dec
inc
cmp
cltd
push
push
jo
rol
lret
ds
xchg
in
pusha
cs
jne
sbb
lea
lock
xchg
mov
movsl
xor
and
popf
movsl
xchg
je
int3
add
out
movsb
mov
enter
add
mov
sbb
jbe
test
pop
dec
mov
cmp
leave
cmp
outsb
daa
push
or
mov
mov
lock
js
test
stos
add
adc
mov
fidivrl
and
js
push
dec
rorb
inc
adc
loopne
js
stc
or
xchg
ds
add
inc
loope
sub
cltd
push
xor
mov
les
push
sbb
adc
lods
ret
inc
in
pop
repz
push
xchg
addl
or
jge
jne
xchg
enter
icebp
daa
pop
push
rolb
jmp
xchg
inc
mov
inc
jmp
adc
and
xor
js
pop
fsubs
push
in
sar
pop
pop
fneni(8087
inc
sar
loopne
out
lcall
xorb
sahf
xchg
or
xchg
mov
sbb
sbb
nop
or
jp
test
test
clc
out
xchg
popa
sbb
ljmp
test
daa
push
test
and
adc
xchg
pop
ret
pop
jns
bnd
popa
pushf
push
xor
push
in
xor
popf
mov
push
xor
loop
mov
pop
xchg
xlat
lret
pop
jne
sbb
or
xor
adc
xadd
mov
pop
push
add
xchg
add
popf
inc
cwtl
sub
and
inc
push
push
push
mov
test
pop
shl
jne
mov
cmp
fiadds
inc
add
pop
in
into
xchg
cmp
mov
sbb
lahf
aas
push
loop
fisubl
pushf
loope
imul
mov
je
into
nop
xchg
sub
mov
mov
lods
mov
insb
scas
and
cmp
adc
or
dec
insl
push
int3
hlt
js
aaa
ficompl
jb
and
add
lods
nop
and
jnp
jns
sbb
jo
mov
insb
push
mov
hlt
out
and
mulb
test
scas
add
fs
add
lock
cmp
or
mov
dec
imul
sbb
call
sbb
movb
pop
push
gs
sbb
pusha
fists
add
add
lea
inc
lret
shll
pause
sbb
xchg
or
mov
stos
mov
add
push
rolb
and
inc
push
jno
sbb
cmp
shlb
andl
mov
loopne
loopne
mov
push
push
decb
cltd
pop
mov
sbb
call
mov
dec
in
pushf
sbb
arpl
orb
mov
daa
in
ss
ljmp
or
mov
addb
adc
adc
inc
sbb
add
pusha
je
jb
ret
inc
andb
inc
js
ret
or
push
rcr
fidivrs
or
mov
fcom
sarb
addl
and
movsl
es
inc
aam
mov
je
xor
sbb
pop
hlt
mov
push
dec
mov
push
sbb
and
dec
or
xchg
shll
int3
pop
fdivs
fld
ret
jb
lods
xorl
mov
fdivrl
add
pusha
fiaddl
pushf
inc
or
dec
adc
dec
or
lret
and
add
or
mov
push
fisubrs
loopne
fldl
icebp
dec
add
add
adc
int
popa
imul
and
sub
add
inc
push
ss
fcmovbe
add
into
mov
loop
cwtl
enter
inc
push
push
call
jns
jnp
mov
pop
push
mov
popa
mov
or
shrb
sahf
loop
and
cmp
push
jmp
add
push
xchg
shrb
mov
jo,pt
add
or
mov
jb
test
pop
push
inc
pushf
es
adc
add
js
mov
add
dec
fdivs
and
jae
mov
jo
xchg
clc
int3
aaa
xor
xorb
xchg
adc
mov
prefetchw
or
or
in
push
mov
mov
call
ljmp
pushf
mov
add
je
outsb
scas
aad
push
arpl
xchg
ljmp
dec
mov
in
sub
sbb
sbb
lock
decl
fcmovnb
sub
js
sbb
push
jp
repz
dec
clc
rorb
mov
pop
sbb
pop
pop
add
push
xchg
pusha
ficompl
add
mov
xchg
adc
sbb
bound
shr
lea
adc
mov
sbb
pushf
mov
dec
push
orb
cmc
inc
dec
xchg
xchg
sub
jecxz
sbb
lock
mov
dec
add
pusha
leave
lea
in
xchg
int3
pop
stos
sbb
ja
ret
mov
push
imul
push
fsubrs
jb
cmp
sbb
adc
pushf
add
and
clc
imul
add
shlb
cmovs
push
ret
sbb
movsb
in
cmc
sub
xor
fcoml
out
es
ret
rorb
mov
hlt
cmpsb
popa
ja
dec
repnz
rclb
mov
pushf
mov
inc
lods
pop
clc
lret
addb
push
pop
push
mov
cmp
mov
ret
or
jecxz
ret
mov
push
jbe
insb
push
shl
daa
popa
mov
cmp
mov
hlt
out
mov
test
jne
dec
add
push
xlat
lcall
sbb
loop
or
enter
mov
clc
sub
rcl
rclb
ret
fs
adc
xchg
sbb
mov
ret
adcb
fnsave
inc
mov
test
mov
les
xor
push
dec
xor
inc
push
sbb
mov
add
mov
mov
inc
rolb
sub
sbb
bound
loope
mov
sbb
sbb
add
orb
shlb
sub
sub
and
cmpsb
cmpsb
into
out
add
dec
dec
sub
and
fisubs
jle
nop
add
stos
mov
rolb
adc
or
inc
fmul
pop
repnz
jae
push
divl
jb
dec
xchg
xor
xor
mov
fsubr
mov
push
test
leave
adc
adc
pop
push
bound
int3
fxch
test
cmp
sbb
ds
rclb
mov
sub
punpckhdq
and
pop
push
lods
push
jno
xor
lret
test
xchg
lods
rcrb
orl
dec
cmp
adc
outsl
or
add
outsl
mov
pop
scas
inc
xchg
dec
dec
jb
adc
or
shlb
push
sub
fsub
pop
jl
push
or
pusha
popa
lret
pop
dec
cld
inc
mov
sbb
fiadds
lea
fimuls
into
adc
sbb
sti
mov
pop
jmp
cmpb
sub
nop
arpl
jo
ret
sbb
cld
pop
jp
or
cmpsl
movb
enter
mov
test
lret
mov
pop
lods
and
nop
shrb
inc
loop
cmp
rcll
adc
addr16
jbe
jg
sbb
rclb
mov
test
pop
or
pop
sub
outsb
mov
mov
jmp
jecxz
pushf
inc
dec
pop
pop
adc
mov
sub
pop
cmp
test
js
xchg
test
mov
or
jnp
lcall
rorl
cwtl
jno
hlt
jo
sarb
popa
cmp
jp
cmp
sub
dec
mov
dec
inc
xor
pusha
inc
jp
leave
jp
icebp
mov
lods
aad
dec
push
jne
pop
mov
enter
adc
rclb
addr16
jecxz
nop
std
xchg
push
mov
jbe
push
pop
sub
data16
or
and
imul
sbb
ret
pop
xchg
mov
or
dec
add
addr16
imul
ret
imul
in
dec
xchg
aad
jl
xchg
xor
cmp
jmp
mov
adc
ljmp
lock
pop
rcrb
inc
arpl
cmp
dec
dec
mov
sbb
xchg
lcall
pop
mov
shlb
jo
loop
shlb
mov
add
test
mov
pop
or
insb
mov
inc
lahf
push
shlb
imul
outsb
sub
popa
rcrl
lret
sbb
or
or
cmp
push
mov
push
test
sbb
insb
mov
push
js
cmp
or
addl
test
andl
push
shrl
sbb
push
mov
jo
push
icebp
mov
xor
and
adc
and
cmp
rcrb
ljmp
lret
xorb
clc
pop
cmp
paddsb
pop
daa
dec
mov
lods
and
mov
dec
mov
rorb
into
faddl
in
int
xor
mov
lret
xor
cs
mov
adc
and
lret
or
dec
ja
xchg
lock
jns
sbb
or
daa
pop
out
push
ret
daa
jae
push
pop
sub
cltd
popa
mov
jle
add
adc
mov
sbb
push
dec
add
mov
xchg
xor
or
movsl
sbb
mov
enter
jle
sbbb
std
cli
sahf
les
into
fldl
mov
mov
mov
lea
mov
lods
or
test
jbe
push
dec
data16
and
push
cmp
bound
bsf
in
repnz
mov
push
ds
add
inc
les
add
cmc
dec
fs
sahf
xor
aam
into
mov
mov
mov
pop
adc
lods
and
mov
adc
test
or
cmp
xor
sti
jno
gs
orb
test
jb
inc
push
mov
incb
cs
gs
mov
fisttps
loopne
subl
sbb
call
or
or
adc
loopne
clc
push
mov
mov
xor
cmp
es
push
inc
shlb
xor
mov
xchg
cwtl
sbb
mov
sbb
jecxz
mov
ret
add
icebp
add
ret
popa
testb
cs
and
adc
mov
and
cmp
les
fmull
fistpl
lret
add
mov
sub
dec
add
inc
push
inc
jnp
inc
loope
test
sbb
fsubs
xor
inc
cmp
inc
lret
sub
xchg
or
daa
test
das
sub
jo
arpl
lods
adc
mov
push
inc
lods
loop
movsb
xlat
nop
shlb
setl
mov
cmp
push
movsl
mov
notb
push
sarb
lea
in
or
pop
dec
jb
call
sbb
pop
enterw
cmpsl
cmp
repnz
mov
jne
push
add
push
xor
add
mov
pusha
pushf
or
mov
and
cwtl
mov
add
or
clc
xchg
jno
popa
xor
jecxz
dec
int
lcall
out
test
lock
test
xchg
push
push
les
mov
movsl
pop
faddl
push
push
ret
rolb
xor
inc
data16
or
xlat
pop
les
or
movsb
push
rol
pop
cmp
pushf
push
or
or
lret
mov
nop
subl
pop
lret
push
test
movsl
in
enter
cwtl
iret
or
rclb
sub
loopne
arpl
xchg
pushf
inc
add
jp
rcr
test
push
mov
out
adc
lods
cli
push
leave
pop
js
js
gs
or
lret
add
shrb
dec
js
and
xor
orl
loopne
push
bound
rcrb
dec
fisubrl
pusha
inc
pop
push
fs
js
jp
push
jp
mov
adc
test
or
movsl
xor
sub
in
add
mov
pop
pop
and
sbb
test
push
pop
add
adc
pusha
add
xor
sahf
mov
and
xchg
adc
xor
or
sarb
sbb
loope
lods
or
xchg
cmp
cmp
cli
dec
sahf
lea
sub
setae
cmpsb
push
jo
repnz
enter
mov
pusha
outsl
shll
jo
push
loopne
xchg
cmp
pop
ror
jb
into
pop
add
mov
xor
loop
pop
mov
addr16
imul
mov
loop
int3
pusha
popl
mov
dec
xchg
push
pop
imul
je
icebp
leave
fs
int3
out
mov
inc
movsl
xchg
mov
mov
pop
add
xchg
or
out
or
pop
pop
das
fsubr
cmpb
shlb
pop
mov
dec
mov
xchg
sbb
xchg
clc
mov
je
fadd
push
fcmovbe
jno
lods
or
cmc
fs
jmp
loop
xchg
jb
movsb
cld
ficomps
add
push
mov
xor
xor
dec
bound
dec
stos
movsb
repnz
lret
jecxz
enter
das
dec
xchg
xor
nop
cmp
mov
outsb
xchg
loope
cmp
pusha
and
cs
cmpb
mov
dec
or
icebp
mov
xchg
and
ret
addr16
dec
in
sub
and
xorl
adc
roll
movb
inc
loopne
pop
adc
repnz
push
arpl
and
sub
or
daa
out
inc
pop
mov
mov
xchg
dec
or
xchg
add
mov
rorb
or
xor
jg
add
or
pop
push
and
adcl
dec
inc
roll
sbb
dec
jle
xor
or
jbe
sbb
mov
dec
fdivrs
movsl
punpckhdq
xchg
pop
enter
pop
jg
aaa
filds
dec
gs
jp
sbb
imul
mov
sbb
outsb
loopne
push
jl
pop
ret
sbb
js
push
icebp
push
cmovb
push
and
mov
int
dec
adc
ja
mov
add
pushf
adc
lods
lods
inc
pop
xchg
jb
call
loop
loop
ljmp
imul
fmul
outsb
dec
or
fs
push
xchg
lcall
dec
mov
push
or
mov
ljmp
inc
sub
or
je
iret
cmp
xchg
repnz
rolb
sbb
insl
sbb
adc
or
push
sbb
push
inc
mov
and
adc
xor
add
push
fcmovnbe
stos
pop
sub
mov
xor
rcl
pop
pop
sub
dec
cmp
jmp
add
ss
ret
pop
xor
adc
pop
gs
push
inc
test
mov
push
push
sub
xchg
push
inc
xor
push
push
ljmp
enter
adc
mov
add
pop
rcrb
mov
inc
repnz
cmpsl
pusha
or
test
push
inc
cmp
lods
stos
sbb
addl
jmp
push
push
mov
xor
movsl
fiaddl
push
lret
cmp
or
nop
and
sbb
xchg
xchg
xorb
cwtl
xor
sar
xchg
mov
adc
fadds
jno
sbb
push
aas
or
push
pop
and
nop
pop
cmp
btc
and
push
das
xor
mov
xchg
sbb
pop
sbb
js
adcl
fmuls
inc
mov
cld
or
jmp
push
mov
inc
pushf
sbb
mov
jle
add
inc
outsb
popf
cli
or
xchg
pushf
add
into
mov
add
sub
cli
lret
push
sbb
scas
and
cltd
sbb
sahf
mov
out
push
enter
movsb
mov
outsl
lods
int3
jle
test
call
add
cmp
push
mov
subb
call
xlat
pop
push
or
add
lcall
or
mov
jno
mov
or
pop
je
push
and
cmp
out
cmp
aad
pop
jb
inc
jp
mov
add
push
cmp
test
inc
jb
add
jo
add
scas
and
push
or
push
rcl
cmpsl
pop
jo
xchg
movsl
sbb
and
jl
add
rcll
and
rcrl
ret
mov
insb
mov
shlb
mov
mov
xchg
add
leave
cmpsl
inc
fidivl
sbb
sbb
xor
adc
add
mov
rol
fs
mov
or
and
cmp
ret
arpl
inc
pop
fsubr
into
push
mov
sahf
mov
push
dec
or
inc
dec
pop
or
movsb
and
inc
mov
xor
push
push
lgs
sub
out
jle
les
dec
insb
jne
cmp
sub
mov
stos
push
jmp
mov
adc
notb
rol
sbb
xor
inc
repnz
lea
imul
enter
xchg
gs
test
in
cmp
lods
int3
lcall
ret
or
int
dec
mov
lods
mov
sub
lods
and
shl
adc
in
mov
dec
jb
inc
pop
mov
push
ds
adc
enter
sub
add
cmc
and
js
cmpsl
leave
out
into
mov
loopne
shrb
pushf
pop
mov
jo
mov
xor
mov
push
mov
rolb
les
xchg
insb
mov
adc
mov
add
inc
mov
or
inc
lods
loopne
inc
rcrl
cli
shll
sbb
dec
xchg
test
andl
pop
mov
jmp
push
je
mov
xchg
jo
push
mov
or
sub
cmp
add
and
movsl
inc
aam
or
pop
sub
mov
adc
sbbb
xor
lock
out
xchg
xchg
je
dec
push
push
jb
or
rol
or
inc
cmp
cld
movsb
jp
mov
cmp
sahf
sub
test
push
or
fstps
jnp
call
aam
js
test
mov
mov
pop
punpckhdq
push
push
xor
into
bound
pop
xchg
adc
inc
daa
push
ror
popa
dec
cwtl
dec
jae
add
lcall
pushf
or
out
js
jmp
inc
mov
xor
leave
ret
rcl
xchg
outsl
adc
xor
sbb
out
lcall
or
cmp
mov
xor
or
sub
das
sub
aad
inc
es
jo
xchg
lea
adc
cli
repz
push
add
sbb
mov
dec
test
repnz
cmpb
dec
out
mov
cs
mov
addl
les
xor
xorl
sbb
push
push
test
push
out
add
jo
leave
ret
call
sub
sahf
or
dec
fildl
call
dec
mov
and
fisttps
fcoms
int3
add
and
bound
jle
out
lret
sahf
in
sbb
jne
mov
daa
push
jge
mov
add
cmovno
int3
xorl
notl
sub
mov
add
dec
sbb
xchg
mov
and
xchg
mov
movsl
adc
lret
and
mov
sbb
mov
jge
andb
adc
inc
rcrb
int3
xchg
ror
xor
xor
push
and
mov
test
push
std
pop
dec
pop
sbb
insl
sarl
xchg
add
shl
adc
add
mov
or
cmp
mov
divb
add
adc
and
clc
mov
iret
xor
cs
or
ret
xchg
and
push
clc
or
sbb
inc
dec
dec
pop
pop
add
dec
pop
int3
fistpl
call
clc
icebp
push
xor
or
or
nop
rolb
mov
mov
inc
sbb
jmp
adc
push
mov
clc
adc
and
xor
ljmp
or
mov
or
fwait
or
sbb
mov
mov
mov
xadd
jl
les
xor
dec
nop
mov
pop
loop
adc
sar
sar
jo
cli
inc
cli
rcrb
nop
inc
add
stos
repz
mov
aas
and
inc
dec
lea
jp
inc
clc
sbb
mov
outsl
mov
lahf
inc
pop
add
int
inc
mov
adc
sbb
jne
sbb
inc
xor
dec
sub
inc
mov
mov
push
imul
dec
loopne
mov
dec
f2xm1
pop
xchg
jbe
or
inc
pop
lcall
mov
adc
push
loope
das
aad
shlb
jb
inc
adc
lea
sub
sete
adc
xchg
movsl
test
pop
insl
in
das
pop
and
mov
mov
in
push
dec
adc
ret
add
ss
rolb
sbb
aam
inc
mov
orb
stos
xchg
push
add
mov
in
sub
fs
arpl
jo
insb
mov
roll
outsb
push
or
sbb
jne
dec
mov
call
lods
les
leave
sub
test
push
push
into
add
fidivrl
mov
xchg
sub
adcb
push
inc
push
mov
mov
pop
rcl
pop
sbb
or
and
popf
or
adc
xchg
pop
add
adc
xchg
bound
and
add
ret
cwtl
cmp
dec
orb
add
dec
adc
fs
add
ljmp
sbb
cmp
cmp
cmp
push
rolb
pop
sbb
inc
lret
inc
insb
or
loopne
dec
loop
or
cmp
sub
mov
test
fnstcw
inc
push
jo
daa
push
push
insl
sbb
mov
sbb
loope
sahf
into
orl
dec
add
shrb
ret
cltd
pop
iret
xor
inc
ljmp
mov
mov
lods
insl
popa
loopne
fs
mov
mov
movsb
jp
inc
loopne
xor
xchg
inc
inc
jp
arpl
push
xor
sub
sbb
dec
lods
mov
pop
das
int3
xor
int3
pusha
adc
popa
and
xchg
jp
inc
dec
pop
aas
xchg
ret
adc
xchg
xchg
push
dec
fcompl
and
loope
or
jbe
add
test
xchg
pop
adc
mov
fmuls
inc
ud2
and
push
xor
imul
les
xor
stos
pop
add
jl
loop
test
xchg
push
daa
rorb
xchg
add
outsb
pop
addr16
lret
pop
adc
fs
sbb
xchg
or
cmp
mov
push
pusha
and
aam
les
fdivrs
cwtl
jl
inc
xchg
int3
lea
xchg
insb
pushf
jo
push
adc
and
mov
js
test
xor
jbe
bound
or
dec
lock
or
push
add
add
and
jmp
pushf
test
js
in
push
ss
mov
sbb
in
js
fdiv
adc
lret
xor
jo
xor
incb
mov
xor
movsl
and
jg
test
in
pushf
mov
inc
fdivl
nop
mov
rclb
pop
sbb
xchg
push
outsb
mov
xchg
mov
xor
dec
mov
xor
jo
js
clc
jle
insb
sub
mov
adc
addr16
or
sub
xchg
xor
insl
ljmp
stc
jbe
inc
bound
sarl
js
mov
aas
push
in
add
addb
decl
cmp
ss
push
out
ljmp
pop
repnz
cld
mov
xor
lret
push
fwait
lret
jge
shrb
push
sbb
stos
sub
repnz
add
and
mov
jno
lods
iret
and
add
cld
daa
lods
insl
push
add
cmpsl
add
add
mov
mov
jne
push
or
out
sbb
mov
std
daa
add
enter
xchg
inc
jmp
adc
fwait
pusha
fucomip
test
clc
add
sbb
movsl
sbb
push
test
das
add
or
xchg
xor
out
xchg
lcall
pop
test
sbb
rorb
mov
adc
add
xor
xor
test
stos
dec
inc
sbb
bound
stc
aam
add
mov
dec
sub
addb
fisttpll
enter
mov
dec
or
mov
stos
fwait
inc
rcll
cli
add
in
sub
push
mov
test
jl
sbb
cld
inc
fcmovnb
adc
ja
std
mov
mov
sbb
inc
int3
push
scas
pop
push
in
inc
push
mov
inc
push
cli
ret
subl
ror
push
rol
xchg
jge
adc
icebp
orb
inc
cmp
mov
adc
dec
sub
xchg
xor
andl
xor
mov
inc
addb
rolb
add
shlb
int3
jne
or
xchg
inc
stos
repnz
daa
and
xor
sbb
xchg
mov
mov
adc
sub
cmp
enter
lret
mov
mov
push
jo
add
mov
mov
inc
test
das
mov
add
sub
lods
fs
dec
dec
fsts
push
cmp
cmpsl
mov
cs
cmp
jno
mov
inc
sbb
cmp
push
pop
mov
xchg
add
jne
lock
add
push
adc
leave
mov
nop
or
data16
js
dec
xchg
cltd
pop
dec
mov
pop
nop
rcrb
outsb
add
mov
or
cs
dec
orb
ret
mov
mov
dec
sub
pusha
adc
adc
or
inc
sbb
pusha
or
fsts
jle
add
ja
ror
ret
or
mov
push
repnz
lahf
adc
jbe
add
sbb
add
divl
jmp
popf
or
add
dec
pop
add
test
lret
cli
jno
xchg
adc
lock
push
inc
dec
movsl
cmp
xchg
add
nop
adc
lcall
inc
jecxz
adc
lcall
adc
adc
mov
lcall
mov
in
fs
das
or
or
or
nop
adc
lock
mov
pop
sub
xor
data16
mov
dec
pop
fucomi
int3
lods
hlt
fidivs
test
or
push
inc
push
enter
dec
movsl
cmp
mov
or
es
rolw
sub
sbb
and
cmp
addb
sub
sub
push
jno
call
pop
lods
test
push
xchg
ss
xchg
and
cmp
inc
jmp
pop
sbb
lods
push
or
push
insb
inc
test
push
nop
ficoms
mov
pop
into
or
or
test
cmp
xchg
test
xor
xchg
shl
sub
cmp
add
add
cli
sub
mov
repnz
rcl
es
test
xor
jo
xchg
mov
scas
inc
sbb
push
sbb
sbb
pushf
popa
add
add
mov
pushf
push
scas
inc
lea
repnz
loope
cmp
cmovp
iret
clc
cs
cltd
adc
push
xor
dec
pushaw
bound
add
loopne
adc
insb
push
call
jno
cmp
ss
pushf
fcmovnb
pop
cwtl
cmp
cmc
add
cmpb
js
lods
sub
cmp
mov
adc
sbb
adc
dec
jp
movb
add
push
dec
cld
int3
jp
or
xor
inc
nop
or
pop
lahf
into
add
inc
and
inc
xchg
push
addr16
and
xor
in
push
or
mov
lods
sbbl
stc
call
test
add
movl
test
add
or
loopne
aaa
lea
xor
xchg
push
pusha
inc
scas
cli
cmp
pop
es
or
inc
add
cmp
sarb
push
jp
shrb
hlt
adc
test
or
adc
dec
lock
and
dec
clc
pop
push
daa
add
std
out
movsl
lret
rclb
xor
jecxz
dec
xor
jp
or
mov
lock
xor
and
and
popa
es
adc
negl
mov
int
clc
push
add
movsb
or
xor
and
push
ret
mull
xor
insb
pusha
loop
sbb
test
mov
mov
mov
cmp
sub
sbb
push
xor
stos
xchg
sbb
cmpxchg
and
mov
dec
loop
mov
jl
push
loopne
or
cmp
mov
sbb
push
add
push
rcrb
xchg
and
fadd
fnop
xchg
sahf
pop
daa
pop
inc
daa
cli
aam
sarb
or
imul
and
mov
sbb
lods
and
dec
dec
and
fisttpl
insb
fs
ficompl
cmpsb
cli
sub
hlt
and
and
push
xchg
movsb
dec
cmp
push
cmpsl
aaa
lock
adc
add
xchg
sub
xchg
and
cmp
and
je
and
mov
mov
adc
jp
pop
or
and
je
or
mov
xchg
pop
adc
fs
rolb
pop
inc
xor
inc
push
lods
mov
add
aad
inc
or
enter
sbb
outsl
or
rol
or
test
sahf
sbb
mov
jmp
pop
in
mov
lret
inc
dec
and
sub
pushf
jbe
dec
cmp
cmp
cmp
mov
jb
rolb
insb
or
les
xchg
nop
xor
testl
xor
divb
adc
clc
lcall
push
pop
mov
pop
inc
push
push
cmp
mov
insb
fs
andl
sbb
es
nop
jno
xchg
dec
imul
xchg
push
xor
test
shlb
sahf
sub
sbb
lods
jns
and
insb
jb
or
cli
sbb
test
sahf
cmpsb
mov
int3
call
and
pop
fwait
cmp
cmp
sahf
xchg
andb
or
push
mov
sub
push
test
es
testb
sbb
aam
daa
sub
jl
lea
pop
mov
sbbb
in
pop
xor
shl
xchg
mul
and
pop
mov
sbb
ret
fadd
pop
inc
and
pop
ss
ret
mov
mov
sbb
adc
and
and
ljmp
cmpnleps
add
fidivs
jo
add
ret
push
mov
loope
push
mov
pop
nop
jb
jbe
insb
lods
lods
push
push
hlt
ret
push
dec
jmp
adc
loope
dec
andb
mov
inc
lret
sarl
fs
adc
xor
adc
xor
lock
mov
mov
or
sarb
mov
push
inc
xchg
in
xchg
test
testb
sbb
sbbl
mov
mov
mov
scas
adc
adc
add
mov
mov
ret
lds
flds
lea
jo
ret
xchg
rcll
adc
xor
inc
sahf
and
sub
test
and
lea
fwait
adcb
xchg
bound
push
test
nop
imul
jp
sbb
inc
jge
sub
push
sbb
popf
push
jp
cs
adcl
cmp
pop
jnp
xchg
cli
mov
mov
je
pop
xchg
jo
or
enter
jecxz
je
xchg
lret
adc
outsb
bnd
inc
or
jb
jmp
cmp
loopne
sbb
add
orb
jo
ret
ret
adc
jb
and
jmp
je
ja
push
fs
push
add
xor
xor
fcomps
jb
xchg
push
fistl
push
cs
pop
add
js
mov
gs
fadd
cmp
subl
jno
mov
push
nop
or
test
lods
jo
xchg
and
fld
ret
adc
sbb
mov
mov
mov
lods
inc
jl
lods
call
popf
xchg
arpl
dec
lock
xchg
mov
push
lock
mov
hlt
or
mov
mov
ret
mov
cli
cmp
ret
cmp
fadds
cwtl
and
sbb
shlb
pop
adc
cli
les
loop
sub
nop
jp
dec
mov
leave
mov
fistps
jmp
cmp
test
cmp
cwtl
sub
dec
mov
inc
mov
mov
std
imul
xchg
mov
sub
enter
push
xor
add
mov
arpl
clc
adc
shll
push
xor
loope
fs
jns
sbb
mov
or
inc
insb
mov
in
add
adc
adc
xor
mov
or
arpl
xchg
jmp
add
jp
and
ret
mov
imul
xchg
icebp
xchg
hlt
adc
cmc
movsb
inc
pop
inc
lret
mov
cmpsb
ss
add
lods
sbb
push
shlb
mov
arpl
cmpsb
and
or
iret
dec
add
xchg
ret
xchg
or
das
out
sbb
popa
cmc
bound
repnz
xor
dec
mov
xchg
sbb
mov
mov
sub
js
popf
and
ret
into
dec
rolb
rolb
dec
and
test
dec
sahf
flds
cmp
push
lods
lret
inc
xchg
call
repnz
rol
push
in
dec
push
push
pusha
and
push
push
in
out
push
push
cmp
sarb
mov
sub
dec
sub
sbb
or
cmp
rclb
loop
ror
pusha
xorb
arpl
cmp
pop
shl
xchg
ss
xchg
ret
scas
imul
cwtl
push
mov
ljmp
and
cmpsb
dec
ljmp
pop
sub
cltd
pusha
das
and
mov
dec
pop
xor
add
sub
je
pop
push
jl
roll
movsl
push
mov
call
movl
fstl
mov
dec
pop
cwtl
jns
imul
or
les
add
xor
jl
sub
stos
ror
add
lock
les
and
adc
and
xchg
into
jp
sub
and
enter
shl
mov
testb
xchg
jns
adc
inc
and
adc
sub
test
sarl
or
dec
pop
add
dec
ljmp
dec
mov
jl
sahf
add
dec
sbb
decl
or
fadds
lods
or
faddl
pop
les
or
mov
les
inc
inc
test
insl
js
add
and
sbb
shl
xchg
mov
xchg
mov
or
test
mov
jge
mov
sub
mov
inc
in
or
dec
lock
nop
mov
sub
dec
push
pop
xchg
das
lods
cmp
pop
cmp
adc
stos
inc
mov
fwait
inc
loop
mov
sbb
insb
cli
shll
dec
xor
mov
fs
inc
dec
jbe
inc
inc
scas
and
jle
and
dec
push
and
adc
enter
mov
pop
aam
insb
push
ss
pop
jmp
data16
test
xor
or
dec
lock
xchg
in
inc
sub
push
test
test
sub
xchg
push
push
aam
xor
dec
push
popf
mov
pop
mov
subb
leave
dec
orb
imul
dec
sbb
cmc
mov
test
aaa
xor
test
adc
fsubs
into
clc
inc
add
adc
xor
mov
ja
lret
sub
xor
rorb
mov
lcall
adc
adc
add
dec
xorl
enter
popa
push
out
push
lods
ret
adcb
dec
push
inc
scas
jnp
mov
mov
mov
xchg
mov
cmpsl
pushf
xor
pop
push
scas
fs
jp
lock
push
sbb
lods
adc
sbb
enter
mov
add
inc
js,pt
sub
sbb
and
or
pop
jbe
inc
ds
push
je
lahf
dec
jnp
jb
mov
fs
adc
test
mov
rolb
sub
add
push
loop
mov
out
or
push
js
lock
and
jp
gs
into
out
mov
cmp
bound
xor
inc
dec
sbb
loop
inc
mov
ficoms
mov
sub
lock
cmp
loopne
add
pop
mov
dec
mov
xor
mov
sub
cwtl
xorb
or
mov
outsb
add
sub
daa
into
xor
cmpsb
or
lea
cmpsb
mov
setge
inc
inc
mov
fadd
pop
cmp
mov
mov
xor
inc
out
sahf
xchg
adc
cmp
mov
in
repnz
into
pop
cld
mov
mov
inc
cld
dec
and
dec
jae
es
dec
lea
push
push
nop
adc
push
sub
addr16
xchg
icebp
rcr
and
mov
lret
sahf
adcb
sub
sbb
xchg
cmp
xchg
insb
nop
enter
fs
test
nop
or
dec
mov
shrb
add
data16
and
sbb
lods
mov
or
sahf
cmpsb
in
popa
test
add
shl
repz
cltd
mov
or
jbe
ss
xor
popa
in
nop
test
add
pop
and
hlt
add
lcall
pop
jo
dec
mov
xchg
jp
jg
rolb
shll
dec
jo
stc
push
shl
xor
es
inc
neg
push
pop
xor
pop
dec
movsb
dec
inc
add
clc
adc
xor
mov
ja
fisubrs
in
mov
leave
fldl2t
xor
rcrb
mov
add
repnz
mov
ja
jle
js
mov
jne
fdivs
inc
test
push
or
nop
outsl
addl
fldcw
fsubrp
sbb
adc
fmuls
clc
xchg
and
and
add
push
lret
out
and
jmp
es
xor
addb
icebp
adc
test
test
xchg
clc
dec
xchg
xor
and
xor
loope
sub
inc
dec
shll
jge
sub
cli
mov
and
outsb
popa
dec
mov
das
mov
cmp
popa
jp
test
push
loop
lods
push
rolb
sbb
hlt
test
push
test
xor
mov
pop
xchg
pop
jns
shl
cmpsb
mov
mov
adc
or
pusha
xchg
out
xchg
sbb
adc
and
shll
lret
or
stc
call
xor
push
inc
and
imul
out
rcrb
les
lret
inc
mov
hlt
idivb
sub
js
mov
jecxz
lret
or
jne
xchg
push
cmpsb
lea
xor
fcomps
xchg
sbb
pop
bound
lea
ret
subl
pusha
add
or
and
mov
dec
nop
lcall
sbb
add
adc
sbb
ret
cmp
loope
je
and
and
pinsrw
lret
sbb
out
stos
aaa
pop
ficomps
enter
daa
loope
xor
pop
mov
adc
insl
sbb
int3
dec
mov
xchg
mov
sub
cmp
call
mov
clc
lahf
or
adc
ret
pop
scas
test
mov
sbb
mov
ljmp
push
dec
adc
sub
mov
into
sbb
cmp
movsb
movsb
outsl
cmpb
add
dec
dec
clc
xchg
insb
lods
xchg
movsl
jno
lods
cmpb
push
cmovo
pop
add
sub
nop
dec
mov
mov
mov
enter
ret
lods
addb
mov
imul
movsl
push
movsb
outsb
es
jb
bound
lret
insl
mov
xchg
jle
imul
inc
out
shl
inc
mov
inc
fs
xchg
add
loop
cmp
inc
xlat
add
adc
xchg
test
xor
dec
mov
in
cmpsb
xchg
or
adc
je
xchg
scas
jg
in
dec
lods
inc
lret
rcrl
subb
add
cwtl
daa
pop
sahf
dec
jnp
pop
cmpb
sub
pop
dec
cmp
pop
cld
cmp
cmp
dec
jle
mov
fs
dec
xor
mov
push
pop
xor
cmc
ss
pop
jae
ljmp
pushf
bound
mov
orb
push
test
adc
push
gs
cmp
add
fidivs
mov
cmpsb
mov
mov
mov
lock
push
sub
loop
pop
arpl
sbb
sub
leave
dec
add
push
inc
sbb
xchg
lea
push
dec
adcl
add
mov
and
je
xchg
loopne
jo
fs
shl
adcb
jbe
pop
lods
sbb
jp
fcom
popf
dec
test
outsl
inc
ss
aas
orb
push
aam
ds
xor
dec
jb
mov
cwtl
mov
cltd
xor
xchg
add
dec
ss
mov
push
xorb
inc
sub
xchg
mov
dec
lcall
cwtl
xchg
pushf
pop
mov
xchg
adc
inc
loopne
jae
inc
inc
movsl
rcl
dec
add
lret
shl
jo
pushf
pop
popl
cmc
inc
xchg
shl
add
pop
subps
jo
add
or
cmp
xchg
mov
out
rclb
adc
imul
xchg
sbb
popa
pusha
popa
cmpsl
jo
mov
mov
outsl
sub
shlb
imul
inc
dec
xlat
sbb
mov
mov
adc
je
je
mov
xor
rolb
lods
clc
pop
jbe
outsl
loope
mov
sub
mov
add
mov
dec
lea
sub
test
addl
xchg
or
jne
test
xchg
jo
inc
into
stos
out
imul
mov
sbb
stos
fcomps
je
xchg
jge
clc
mov
and
mov
pop
or
loop
cmp
jmp
inc
push
add
pushf
fisttpl
adcb
cli
xchg
leave
mov
push
daa
xchg
dec
push
je
ss
shl
mov
cli
pop
movsb
loop
xchg
pop
fdivp
call
daa
push
ret
sarl
sahf
js
push
inc
cmpsb
mov
rcll
pop
sbb
ds
mov
add
xor
repnz
in
cmpsb
nop
mov
imul
lods
rorl
sub
xchg
lret
pushf
inc
rcrb
pop
add
xchg
imul
pop
jns
sbbb
adc
push
push
cmpsb
ss
imul
loop
inc
adc
push
mov
or
add
pop
push
xchg
sub
push
shrb
sbb
mov
sbb
pop
cmpl
cmpsl
pusha
push
cmpsl
mov
mov
and
and
push
mov
pop
sub
mov
sbb
imul
pop
sbb
rcr
addb
inc
fnstcw
xchg
test
jp
push
pop
jnp
mov
sbb
fnstenv
out
xlat
xor
ss
movsl
gs
addr16
popa
rolb
mov
inc
ret
sbb
test
add
inc
jmp
mov
add
xchg
lret
aad
mov
and
jbe
inc
or
pusha
popa
lea
idivl
out
push
notb
adc
outsb
sub
cld
pop
movsl
imul
loop
xchg
fst
cwtl
add
addb
cmpsl
jmp
adcb
and
jne
or
cmp
loop
xchg
cmpsl
lock
or
adc
aas
rcrb
xor
cld
stc
and
inc
scas
adc
sub
push
sub
fs
inc
or
push
mov
sbb
inc
gs
push
and
fadd
testl
ss
aam
push
jp
add
and
sbb
adc
add
loopne
into
or
jnp
movb
sub
daa
shll
or
and
sub
or
ret
or
js
loopne
adc
cmpsb
fdivl
cmp
outsl
add
cltd
jb
pop
pushf
js
or
sub
mov
push
pop
stos
insb
call
sahf
fs
sbb
push
cmp
adc
js
xor
addb
mov
pusha
outsl
pop
sub
mov
add
dec
dec
mov
enter
xchg
xor
mov
or
or
imul
fdivs
push
das
leave
mov
sub
lods
lods
add
or
dec
pop
and
mov
pop
in
mov
mov
movsb
outsb
mov
pop
lret
jb
js
push
pushf
inc
es
xor
adc
test
pop
adc
xor
jae
mov
adc
mulps
gs
jmp
xchg
push
jl
mov
xchg
fidivs
cmp
xorb
enter
sbb
mov
cwtl
mov
lods
sub
lock
xchg
mov
lock
sub
pop
enter
lea
int3
jo
mov
mov
dec
dec
nop
sbb
sub
cmp
inc
push
mov
or
cmp
test
test
mov
or
and
pop
and
pop
ljmp
sbb
insb
push
mov
jle
add
sbb
dec
or
xor
and
pop
sti
das
pop
push
cmp
cmp
sahf
dec
testb
movsb
push
pop
add
sub
push
loopne
push
adc
adc
mov
adc
sbb
out
and
xor
mov
imul
or
push
sahf
dec
pop
cmp
mov
cwtl
mov
data16
jo
push
adc
loop
push
and
data16
stc
jo
lea
test
xchg
ss
les
mov
push
mov
pop
pop
repz
popf
cmp
mov
or
stos
or
outsl
mov
test
add
lcall
out
shlb
mov
cmc
fs
jbe
mov
mov
mov
bound
in
rcll
pop
push
xchg
andl
push
shlb
popa
lods
inc
xor
loopne
pop
jbe
sub
sub
lcall
and
jp
hlt
movb
stos
and
inc
pop
loopne
fistpl
addb
sbb
popl
insl
or
push
insb
cltd
adc
repz
mov
xchg
dec
daa
das
rcrb
sbb
mov
icebp
pop
std
mov
sbb
xchg
xchg
mov
push
js
subl
mov
push
and
rclb
add
pop
add
cld
test
lret
in
mov
dec
xchg
add
push
xchg
or
nop
lods
xor
mov
addb
or
call
fstpl
sti
loope
mov
sbb
jbe
aam
scas
rorl
xor
shl
rcrb
sub
iret
pop
test
clc
addl
btr
arpl
add
jge
push
hlt
push
loope
aad
fisubrl
clc
mov
add
lret
inc
or
push
orl
pop
mov
mov
pop
push
xchg
popa
ret
lret
mov
insl
lcall
popa
ja
inc
aaa
dec
ja
test
xchg
xchg
inc
cmp
add
push
jg
add
jle
shr
enter
adc
or
or
dec
push
mov
jg
sub
inc
xor
jne
dec
mov
test
pop
inc
rcr
adc
pop
lock
es
or
xorl
adc
subl
or
pop
test
jne
aam
push
in
in
or
scas
mov
negl
outsl
adc
stc
add
pusha
or
jmp
insb
rcrl
lret
jle
push
push
jo
sub
mov
and
sbb
pop
in
jmp
rol
xor
sub
cmp
mov
into
jnp
or
dec
popa
inc
sbb
fidivs
jne
adc
pop
xor
ds
daa
add
xor
inc
mov
and
jecxz
add
addr16
push
je
sbbl
ret
add
clc
xor
mov
rclb
xlat
das
fiaddl
inc
nop
in
cmp
pop
cmp
mov
fdivr
dec
aam
xchg
inc
xor
inc
sbb
pop
ss
push
popa
or
or
das
aad
xor
xor
push
jge
fcmovbe
ficompl
mov
fiadds
pop
add
fidivs
jge
or
lcall
andl
dec
push
inc
loope
or
cs
ret
into
addb
cmp
sbb
xchg
and
mov
gs
mov
ret
mov
add
and
dec
stos
inc
in
and
xor
rcrb
push
mov
or
or
push
push
push
rorb
jbe
sub
inc
test
mov
pusha
loopne
out
pop
insl
jl
test
mov
cmp
je
inc
push
inc
lods
sti
mov
jge
movsb
int3
ret
xchg
nop
cmp
mov
rorb
fiadds
cmp
les
test
and
dec
xor
in
pop
cmp
push
lods
sbb
sbb
fisubrl
sbb
cmp
dec
cltd
adc
movsl
mov
xor
inc
int3
mov
jg
repnz
xor
cld
outsb
addb
and
dec
lods
or
pop
popf
xchg
add
aaa
pop
adc
mov
xchg
jp
sub
add
mov
add
inc
xor
inc
adc
mov
out
int3
pop
jmp
imul
repnz
cmp
xchg
mov
popf
push
hlt
dec
push
push
movsb
mov
jecxz
data16
add
pop
cmc
loope
inc
or
sub
gs
adc
sbb
xor
sbb
cmp
pop
rcrb
mov
popf
test
mov
js
mov
mov
rcr
or
dec
outsb
dec
add
cwtl
sbb
mov
or
jb
arpl
sbb
pusha
data16
adc
ficoms
ljmp
and
push
sbb
sbb
addb
mov
fimull
in
dec
xchg
add
pop
incb
cmp
pusha
jmp
loopne
add
ret
or
or
in
sub
pop
mov
xchg
lea
mov
and
loopne
mov
or
add
add
mov
out
xchg
jnp
bound
in
addr16
leave
ror
sbb
ds
loope
jb
cmpsb
sub
add
lods
mov
sbb
and
xchg
mov
jbe
mov
push
or
data16
xchg
xchg
mov
jb
xor
xchg
xchg
loope
aam
xchg
scas
dec
cmp
sahf
mov
xchg
dec
add
pusha
cli
push
pusha
call
sahf
pusha
flds
fmul
je
test
mov
test
sbb
push
mov
sub
adc
mov
aam
rolb
dec
cmp
pop
dec
pop
dec
scas
hlt
cmp
or
into
push
scas
or
dec
fdivs
inc
daa
add
dec
add
jp
sbb
out
cmp
xor
test
jle
xchg
dec
dec
pushf
call
adc
add
xchg
sbb
movsb
aam
pop
sbb
add
add
sbb
mov
sbb
enter
js
aaa
pop
inc
cmp
mov
jmp
enter
jecxz
in
fcompl
int3
push
hlt
insl
ja
pushf
out
incb
inc
add
mov
call
pop
add
cmpsl
scas
fcomip
inc
ss
cmp
jns
ret
std
adc
adc
loope
das
in
test
lea
jp
or
lahf
jae
inc
lods
rclb
rol
add
xor
aad
or
pop
out
sbb
aam
xlat
inc
dec
sbb
icebp
repnz
in
in
add
mov
arpl
bound
and
es
mov
pop
add
mov
out
and
xlat
rorb
or
and
mov
add
or
and
inc
scas
dec
andb
jmp
fcmovnb
jp
enter
or
or
and
cmp
dec
push
xor
imul
out
push
dec
lea
xchg
sub
stos
cmp
xchg
and
movsb
jo
adc
xor
popa
or
pop
xchg
cmp
mov
push
mov
repnz
mov
or
imul
sbb
mov
rclb
mov
lret
mov
xchg
stos
add
push
lcall
jle
rcrb
adc
add
pop
sbb
adc
cltd
xchg
sub
xor
mov
hlt
xchg
or
or
add
inc
jp
add
add
ds
push
mov
lock
inc
dec
xchg
insb
lock
fidivs
add
ds
orl
pop
push
xor
xlat
xor
cmp
nop
add
sarb
je
pop
mov
daa
add
mov
mov
inc
movsl
mov
sub
lret
xor
adc
add
stos
jle
cltd
les
clc
add
sbb
inc
outsb
rolb
ljmp
cli
and
popa
dec
cmp
dec
xor
jne
inc
pop
pop
dec
sub
push
ss
jbe
mov
push
xchg
test
xchg
jnp
outsb
cmp
adc
adc
mov
sbb
pop
lea
movsl
jne
adc
pop
dec
sub
lock
test
loope
adc
movsb
ret
mulb
lcall
lcall
push
or
jnp
cwtl
cmp
pusha
mov
stos
pop
cmp
mov
adc
insb
loope
add
pop
push
jl
je
adc
push
mov
xor
jl
mov
inc
and
mov
sub
dec
adc
gs
loope
xor
js
mov
loop
cs
add
inc
or
rcrb
pop
xchg
xchg
inc
xchg
enter
xor
adc
xchg
cmp
sub
pop
xor
ja
int3
cmpsb
mov
xchg
xchg
dec
pop
pop
ficoml
test
insb
loopne
mov
dec
dec
fcoms
mov
pop
aaa
push
sbb
cmp
out
lods
dec
lods
push
mov
outsl
rorb
cmp
jl
xchg
clc
or
jnp
ss
and
dec
lahf
test
mov
das
ret
or
push
add
xchg
adc
lods
lods
push
xor
shlb
sbb
jo
adc
sub
xchg
xchg
js
pusha
sbb
mov
outsb
sub
jbe
in
cmp
or
in
popa
leave
push
aam
sbb
push
mov
cs
cmovs
lea
movsl
loop
andb
lods
pusha
cltd
stos
fld
pop
sbb
mov
nop
movsb
aad
pop
mov
mov
xchg
hlt
and
cmp
es
or
add
popl
mov
mov
and
add
lods
pushf
sub
cli
test
adc
loop
sbb
loopne
sub
cli
movsl
or
outsl
mov
jecxz
push
and
lods
aad
loopne
movsb
jbe
xchg
js
jo
mov
sub
mov
cmpsb
inc
cmpsb
inc
repz
push
add
and
aam
and
and
into
jle
jae
xor
xor
das
xchg
and
push
mov
push
adc
sub
ds
sbb
or
adc
xorb
call
push
in
pop
adcb
aaa
mov
sahf
push
pop
arpl
stc
xchg
rcrb
jno
scas
sbb
xor
adc
sbb
push
mov
or
inc
dec
lods
ror
sub
pop
xor
rorl
push
inc
fmull
adc
push
mov
cmp
and
jmp
inc
xor
in
or
push
pop
or
cltd
sub
andb
mov
mov
into
into
es
scas
add
movsb
and
lcall
jns
sbbb
mov
xor
mov
mov
or
rclb
les
push
scas
ficoms
cwtl
mov
push
or
or
inc
daa
sbb
popa
insl
inc
xor
movsl
adcb
inc
jl
fbstp
arpl
sbb
add
push
inc
push
pusha
push
xchg
push
arpl
es
cmpsl
inc
jp
dec
inc
and
dec
notb
lock
push
imul
mov
inc
inc
mov
adc
rol
fs
outsl
or
ret
dec
xchg
mov
fstpl
loop
fcoml
inc
adcb
dec
adcl
xchg
add
out
push
mov
pushf
mov
xor
and
sbb
aaa
and
shlb
fmuls
add
subb
or
mov
jne
dec
add
and
ss
xchg
stos
or
sub
push
xor
scas
adc
shlb
dec
divb
das
enter
adc
pop
jge
sbb
cld
or
pop
add
arpl
xchg
icebp
adc
nop
mov
cmc
or
mull
mov
xorl
ret
lcall
pop
or
sub
je
xchg
inc
cmc
xorb
and
xchg
loop
xor
inc
pop
shlb
inc
inc
cmp
insl
inc
add
pop
pop
testl
add
or
inc
add
ljmp
jo
mov
sbb
les
cld
sub
jp
mov
pop
or
hlt
mov
push
sahf
adc
lea
or
repnz
pushf
pop
add
sub
cwtl
mov
and
and
insb
adc
and
out
xor
icebp
xor
das
dec
or
push
push
sbb
jecxz
orb
rorb
aad
stos
test
jecxz
push
insl
jge
dec
push
or
pusha
shrl
es
cmpsb
int3
pop
jno
dec
sbb
mov
and
aas
aaa
add
mov
movsb
outsb
or
icebp
test
push
cmpsb
and
arpl
ret
xor
add
xchg
xor
jmp
xchg
movl
sar
loop
test
je
jg
movsl
inc
push
add
iret
pop
lods
cld
jle
insb
int3
pop
mov
or
addl
push
in
xchg
sub
pop
adc
add
outsl
popf
sub
dec
lret
sahf
xor
pop
movsl
and
sbb
lods
les
and
mov
ret
adc
xchg
insb
ljmp
xor
rcll
pop
or
lock
jge
repz
pusha
adc
dec
sahf
adc
sbbb
push
sub
xor
add
pop
pop
ret
inc
adc
flds
jo
adc
les
inc
imul
lret
xor
push
sbb
xchg
cli
push
popa
xchg
push
or
jmp
rcl
data16
test
ja
jns
mov
lret
cmp
inc
ss
jle
or
clc
dec
add
adc
add
adc
or
loopne
hlt
or
or
or
dec
xor
lea
add
adc
stos
aad
or
add
roll
jne
or
movsb
pusha
and
in
pop
movsb
test
in
stos
cmc
mov
or
add
or
outsb
stos
out
sbb
fs
lods
sbb
fs
addr16
dec
daa
add
push
cmovb
add
add
cmp
sub
cmp
dec
and
pop
sbb
inc
sbb
adc
push
mov
xor
push
fcmovbe
mov
dec
xor
cmp
mov
push
push
data16
test
js
mov
loopne
or
sbb
je
mov
pop
flds
cwtl
fadd
lret
sarl
test
push
xchg
mov
and
mov
loop
cmpsb
fidivrl
in
xor
xchg
cmp
sbb
loope
xor
les
ret
pop
add
or
or
test
push
mov
inc
js
adc
gs
add
adc
and
scas
adc
fwait
ret
les
repnz
jp
or
mov
nop
je
dec
daa
movsb
mov
inc
rorb
out
and
out
adc
clc
addb
jmp
rclb
xchg
ljmp
push
rorb
jmp
test
sbb
push
and
adcl
addl
fisubl
mov
outsb
jb
dec
or
cmp
xchg
mov
push
sub
das
faddl
rcl
ret
mov
xor
cmp
xchg
and
insb
or
sbb
sbb
xchg
push
or
call
mov
stos
jo
es
fnstcw
and
mov
cld
ljmp
out
in
push
dec
jp
sahf
movb
outsb
push
sub
adc
mov
jbe
push
xor
loopne
test
pop
faddl
mov
jle
sbb
xor
inc
inc
dec
add
dec
pop
rol
sub
loope
cmp
shrl
dec
fs
cmp
cwtl
mov
test
ljmp
loopne
fs
add
loopne
aam
pusha
mov
pusha
arpl
mov
add
shr
push
pop
pop
push
lock
call
and
dec
add
loope
jnp
cmpsb
dec
lods
xor
and
mov
add
pop
or
int
rolb
mov
gs
sbb
insb
or
ds
and
ror
ret
push
arpl
add
cmp
ficompl
jb
test
jge
outsl
push
outsl
nop
pop
outsb
lret
arpl
add
sbb
dec
push
es
push
push
loopne
ret
push
in
or
xchg
mov
push
push
pop
mov
xchg
jne
inc
or
and
mov
cld
adc
push
adc
jb
or
and
push
ret
sub
pusha
stos
and
addl
sub
clc
xor
adc
push
das
inc
or
xchg
push
mov
mov
adc
inc
adc
lds
push
mov
sahf
repz
sbb
sub
mov
mov
test
inc
ret
aam
xor
test
xor
dec
inc
cmp
push
cmp
cmpsb
fcoml
xchg
outsb
mov
jecxz
mov
push
clc
out
hlt
sti
or
and
dec
into
xchg
aam
adc
mov
clc
dec
xchg
pop
clc
test
xor
call
rcrb
sub
loope
cmpsb
add
push
pop
loopne
popa
call
mov
rcll
leave
add
orl
sti
fmull
dec
decl
divl
iret
shr
loopne
ds
ret
mov
sub
xor
inc
mov
push
jle
fstpt
adc
xlat
cli
xor
cld
jae
jge
clc
or
in
add
gs
adc
and
add
cmp
pop
add
adc
inc
movsb
lock
push
or
and
push
or
mov
cmp
inc
cltd
mov
addb
sbb
fsts
adc
adc
xor
subb
sub
rorl
or
fsub
test
mov
sbb
and
lock
add
call
icebp
adc
xor
lea
mov
and
sbb
xor
inc
mov
dec
ret
adc
clc
test
call
mov
jle
shll
add
adc
imul
jp
shl
arpl
add
mov
test
xor
and
xchg
inc
and
daa
xor
por
loopne
mov
push
sbb
xchg
sbb
nop
dec
pop
pop
loopne
adc
shrb
inc
pop
pop
jb
sub
rcl
cld
jmp
inc
pop
adc
push
ret
or
xchg
sbb
push
loop
rcll
add
inc
in
in
mov
outsl
sub
andb
sbb
or
insl
adc
or
ret
xor
in
lret
test
jae
sbb
mov
das
or
adc
xchg
push
xchg
pop
loopne
or
clc
push
adc
mov
shlb
notl
fcomps
dec
or
lea
pop
mov
sub
shl
sbb
add
iret
loopne
clc
icebp
cmp
push
loopne
and
adc
cs
push
insb
out
std
cmpsl
insl
sbb
inc
cmpsb
sub
sub
mov
rcl
jecxz
ja
xor
and
push
or
inc
pop
push
inc
pusha
cli
dec
repz
loop
mov
or
arpl
das
shl
jge
ja
lret
sbb
add
sbb
hlt
mov
or
movsl
add
cmpsb
xor
adc
mov
outsl
and
adc
shll
cs
fcoms
imul
inc
dec
shlb
or
setnp
push
mov
cmpsb
mov
cwtl
mov
pop
es
les
sub
mov
mov
bound
mov
insl
je
and
or
sub
test
sbb
sub
sub
and
push
js
mov
adc
popa
dec
arpl
mov
rol
cmp
data16
dec
cltd
lcall
gs
daa
rclb
rolb
add
movsl
xchg
rorb
add
out
loop
outsl
test
xchg
mov
dec
lods
sub
fdivrl
or
push
xor
xchg
add
aas
sub
push
aas
mov
pop
jns,pn
ret
arpl
cmp
or
flds
jns
test
lret
xchg
sub
inc
or
xchg
imulb
rcll
xchg
xor
xchg
pop
cmp
push
lds
fmuls
clts
cli
outsb
cmp
inc
sahf
addb
sahf
dec
fmuls
or
packsswb
loopne
inc
xchg
cmpsl
and
push
fwait
pop
jmp
cmp
sub
popa
push
subl
test
mov
outsb
dec
add
sarl
cmp
sbb
loop
push
mov
push
push
push
sbb
xor
cli
push
loop
mov
xor
sbb
ret
or
cmp
pop
sbb
shlb
int3
or
lea
mov
push
or
imul
dec
ret
outsb
add
add
pop
cmp
dec
xchg
movsl
adc
movsb
mov
push
dec
fadds
or
xor
mov
xchg
data16
dec
bound
mov
adc
cli
sub
sbb
or
cwtl
clc
mov
push
push
loop
cmpsb
xor
daa
mov
lea
movsl
pop
pushf
adc
xor
sbb
jne
jbe
rol
cmp
mov
not
pushf
jb
imul
enter
nop
fsts
ds
call
jo
jl
lds
test
xor
ljmp
add
dec
mov
push
dec
rclb
leave
mov
mov
xchg
ss
loopne
sarl
add
sub
lods
sbb
cli
into
sbbb
ss
inc
dec
cmpl
pushf
sbb
xchg
mov
sahf
pop
movsb
mov
sbb
js
std
push
xor
push
add
loope
pushf
jl
insl
orl
inc
js
mov
fsubr
pop
fimull
pushf
sbb
inc
js
pop
lea
cmpb
mov
ret
arpl
popf
adc
inc
cmp
shrb
pop
add
popa
outsb
jp
jmp
call
imul
and
adc
sbb
add
xor
add
enter
sahf
faddp
mov
xchg
rolb
loope
sbb
jnp
sbb
sub
ret
lret
ret
inc
in
dec
popa
out
and
mov
test
or
jg
jae
not
nop
hlt
out
pop
les
stc
sbb
mov
mov
push
cs
xchg
push
or
xor
imul
jne
movsb
and
mov
mov
mov
rorb
jbe
lea
push
adc
addl
je
es
into
add
insl
leave
and
sahf
lock
sub
sub
jne
add
cmpsl
in
pmuludq
cmp
pop
shlb
or
or
pop
sub
incl
push
out
shr
jo
mov
jmp
popa
lcall
xchg
xchg
and
lods
mov
pop
fiaddl
pop
aaa
fs
jp
xor
and
aam
push
fprem
xor
jmp
mov
test
mov
aam
sbbb
inc
ret
pusha
jmp
in
aaa
decb
inc
dec
lods
cmp
or
lret
or
js
and
sub
movsb
lods
fdivl
movsl
xchg
mov
loopne
nop
add
sub
sub
mov
iret
or
jo
clc
into
xor
fildl
lea
xorb
and
pop
test
ror
cmpsb
or
pushf
push
sbb
mov
mov
popf
and
pop
inc
and
xchg
xchg
negl
rolb
push
sbb
mov
add
mov
leave
stos
test
xchg
add
push
movsl
inc
cwtl
inc
ret
imul
pusha
imul
fistpll
or
jo
cmpsl
stos
shlb
sub
or
jge
mov
fwait
repnz
test
cmpsb
jo
nopl
fisubs
pop
dec
into
lods
ljmp
push
jne
adc
les
dec
sub
or
hlt
xchg
adc
stos
movsl
test
popa
lret
lock
push
lock
ja
sbb
xchg
sbb
pusha
fs
sbb
mov
sub
aaa
jb
inc
xchg
add
or
lods
pop
pop
xchg
mov
push
xor
cmc
xchg
mov
pop
mov
ret
push
add
add
mov
ret
add
push
lods
cmpl
xchg
inc
pop
pop
enter
mov
addl
add
jmp
lock
enter
inc
jo
mov
mov
xorl
ja
test
mov
cmc
jo
adc
movhps
pop
push
cltd
ret
xchg
xchg
push
ds
xorb
inc
mov
fidivrl
jo
add
and
mov
mov
lock
add
and
xchg
orl
in
sbb
fcompl
dec
leave
xchg
nop
mov
arpl
imul
test
inc
add
mov
out
dec
hlt
pushf
xchg
addr16
in
adc
jnp
mov
rcrb
leave
pop
in
aaa
inc
inc
rolb
mov
mov
pushf
sub
call
orb
adc
cwtl
xor
push
orb
sahf
or
push
loopne
or
repz
lret
rcrb
popa
push
outsb
cs
pop
jnp
stos
xchg
push
mov
xorl
scas
lock
js
xchg
adc
add
pop
sbb
dec
call
into
rcl
lods
nop
and
and
add
ret
xorl
jge
push
dec
push
ret
push
inc
inc
sub
mov
and
movsb
in
pusha
movsb
fs
cmp
xor
or
popa
enter
ret
nop
mov
cmc
add
cmp
pop
das
add
imul
shl
mov
dec
xor
sub
jp
loopne
sbbb
andb
sbb
xor
lds
movsb
clc
call
add
sub
fmuls
addr16
out
sub
or
jnp
inc
popl
and
xor
aam
outsb
cmp
es
sub
fsub
adc
inc
mov
add
ljmp
test
arpl
mov
xor
insl
add
ljmp
and
and
enter
jecxz
imul
adc
mov
popa
add
inc
bound
mov
addr16
mov
fwait
xchg
push
hlt
push
add
push
add
les
std
push
xchg
movsb
addr16
sbb
rcl
or
inc
pop
mull
or
xchg
or
es
xor
pop
jmp
sub
or
add
ret
sbb
sub
sbb
or
add
and
mov
cltd
push
cmpsl
push
cwtl
adc
pop
sub
outsb
mov
inc
sbb
xor
push
cmpsb
dec
test
sbb
push
adc
adc
xor
xchg
loopne
test
push
call
ret
dec
sbb
adc
insb
loopne
hlt
aam
and
xorb
cwtl
shrb
jl
push
fld
dec
shl
xor
adc
sbb
mov
cmpsl
inc
mov
hlt
movsb
jb
adc
push
add
test
pop
daa
ret
add
or
xor
cwtl
jo
sbb
ret
ljmp
sbbb
in
ret
add
or
sub
js
mov
push
add
mov
jmp
sahf
mov
mov
pop
mov
inc
cwtl
pusha
movsl
and
pusha
es
mov
mov
add
mov
addb
mov
fidivl
sub
mov
ret
cwtl
mov
inc
bound
out
xchg
mov
add
adc
orb
xor
add
mov
lods
adc
or
test
sub
nop
enter
test
xor
into
js
mov
mov
aam
push
lods
push
insw
sub
xchg
adc
lcall
lea
dec
sbb
or
js
inc
sbb
orl
insb
dec
cmp
mov
in
mov
and
hlt
sbb
insl
cmp
sub
xlat
inc
mov
mov
pop
jp
adc
dec
pop
add
insb
push
sbbl
stos
dec
test
xchg
push
or
es
ss
jecxz
ret
add
outsl
pop
dec
loop
icebp
cmpsb
rolb
aaa
sbb
idivb
ret
dec
mov
scas
dec
sub
push
xorl
jo
mov
lea
pusha
and
push
sub
lods
fsubl
idivb
rclb
xchg
jnp
hlt
push
mov
insl
sbb
push
mov
mov
outsl
pusha
mov
ret
lds
and
sbb
or
xchg
data16
loop
lcall
sbb
xor
adcl
idivb
sbb
cs
push
cmpsb
and
or
adcl
inc
add
lock
lcall
movb
cld
sbb
test
rol
sub
dec
mov
mov
fsubs
enter
pusha
and
adcb
pusha
outsb
jmp
pop
mov
jne
ds
sbb
and
push
sti
out
cmpsb
pusha
add
cmp
mov
shl
and
es
imul
adc
scas
cmp
mov
mov
mov
into
mov
xchg
cmpsb
aam
inc
jbe
hlt
inc
enter
aad
jl
loop
arpl
stos
scas
xor
or
daa
pushf
xchg
mov
xor
lret
movsb
sbb
cli
inc
jo
pusha
mov
pop
aam
pop
fsubrs
add
sbb
push
push
inc
mov
mov
es
add
cmpsb
pop
inc
adc
mov
mov
popf
or
int3
gs
hlt
mov
sbb
lock
cmp
push
rcrb
inc
push
dec
mov
addr16
stos
and
jo
loop
adc
jo
mov
push
clc
add
or
dec
cwtl
dec
cwtl
and
sbb
push
mull
test
xchg
add
ret
push
jmp
aam
sub
cli
dec
mov
into
lcall
shl
test
pusha
pavgw
pop
xor
or
inc
cmp
sub
sbb
cld
dec
xchg
dec
mov
or
rcrb
lret
adc
movsb
mov
stos
hlt
outsb
push
mov
sahf
jb
lods
and
je
shl
cmp
jp
call
xchg
ret
ror
inc
inc
jo
dec
mov
xor
js
and
adc
add
ret
mov
in
outsb
sarl
adc
call
xor
cmp
or
xchg
inc
sbb
leave
or
movsl
clc
je
cmp
clc
fstl
sbb
push
pusha
sub
mov
mov
xchg
and
and
push
js
nop
push
or
dec
push
mov
adcl
lret
pop
adcb
fdivrs
in
pop
loop
or
sbb
push
xchg
dec
lock
mov
or
mov
or
xor
inc
out
bound
loope
push
xchg
outsb
pusha
cmc
test
mov
popf
loopne
add
call
lods
mov
sub
sbb
les
jo
pop
mov
hlt
push
sahf
mov
jnp
sub
xor
pusha
cmp
ret
push
inc
dec
nop
mov
cmp
andb
add
das
add
cmp
inc
ds
mov
inc
add
pop
aaa
sub
dec
pop
scas
jp
popa
add
imul
mov
addb
add
clc
dec
or
mov
push
push
lcall
inc
lret
xchg
jg
mov
pushf
sub
sbb
stc
push
xchg
inc
cmpsl
push
sbb
xor
inc
adc
enter
push
push
mov
sbb
pop
call
jb
mov
or
in
push
or
mov
ret
ljmp
mov
mov
add
jmp
hlt
mov
lret
loop
sub
push
mov
xchg
loope
mov
jae
add
cwtl
fmull
add
or
popa
insb
sbb
dec
cmp
jp
jo
adc
cltd
les
or
fdivl
aaa
mov
repnz
or
mov
ss
sub
insb
sub
or
andl
pop
mov
out
hlt
xor
adc
jbe
sub
push
out
nop
mov
add
push
add
shrd
cli
inc
jmp
push
punpckldq
mov
xchg
sti
into
inc
mov
sub
xchg
sbb
pop
dec
aad
inc
mov
ja
inc
add
mov
add
xor
sbb
dec
pop
add
push
daa
push
push
pop
add
adc
and
pop
mov
xchg
or
adc
pop
cmp
loopne
bound
xor
xchg
out
sub
and
xchg
inc
fmul
ds
out
sub
mov
hlt
ja
pop
xchg
xchg
rcrb
xor
mov
push
and
aam
push
pop
repz
sbb
sti
adc
sub
add
mov
cmp
push
cmp
add
mov
dec
cmp
orb
adc
leave
or
ds
rcll
test
enter
dec
sub
sbb
adc
xchg
xor
mov
dec
lods
push
mov
sbb
add
bound
js
ret
sbb
fwait
je
fidivl
and
mov
in
add
jo
push
lret
adc
mov
loope
sbb
das
xchg
dec
sbb
and
mov
mov
in
les
fists
pop
jo
or
lock
arpl
sub
xorl
lcall
push
push
pushf
pop
mov
and
fiadds
mov
popf
dec
mov
mov
and
sub
sahf
adc
gs
pusha
inc
data16
test
stos
test
sub
aam
sub
inc
aaa
xlat
in
sbb
mov
outsb
jno
dec
insb
addb
mov
mov
and
mov
pusha
sahf
xchg
pop
ficomps
fsts
in
sahf
mov
xor
addr16
lret
inc
dec
jmp
imul
int3
gs
sbb
pop
mov
imul
or
push
mov
negb
xchg
add
jo
inc
xchg
and
sub
adc
sbb
cmp
shrb
movsb
popa
loope
sbbb
in
or
loopew
nop
jg
jp
mov
jmp
inc
int3
sbb
enter
cmpsb
xchg
neg
push
pop
neg
decl
lea
jbe
out
sbbb
decl
inc
call
adc
ret
cmp
fidivrs
popf
inc
jno
ss
hlt
mov
inc
cmp
or
pop
xor
dec
mov
mov
add
icebp
sahf
sub
inc
sub
sahf
jbe
sub
pushf
inc
lcall
jo
xchg
outsb
inc
leave
add
add
arpl
mov
subb
push
dec
jbe
jno
push
xchg
xor
and
je
push
nop
xor
and
add
dec
cmpsl
push
pop
or
popf
popf
rcrb
call
ja
movsb
jo
test
xchg
and
sub
popa
pusha
adc
xchg
mov
adc
inc
jno
sbb
pop
test
sbb
xor
into
scas
mov
cmpsl
adc
xor
inc
sbb
addr16
push
or
mov
ss
inc
jecxz
testb
jmp
loop
bnd
inc
add
lahf
ret
into
add
push
imul
loop
sub
xor
imulb
aad
lods
xor
pop
das
pop
in
cld
jge
add
fdivrs
dec
lock
insl
sub
pop
push
pop
xchg
sbb
push
jp
mov
pop
mov
push
pushf
addl
xchg
pop
mov
sbb
xchg
loop
or
push
dec
sbb
cmpsb
push
movsb
xor
adc
mov
sbb
pop
cmp
add
lret
xor
fidivs
sbb
and
insb
pop
cmp
popa
fstps
sbb
push
and
in
sub
or
dec
and
fsts
dec
sub
sbbb
push
or
loopne
rorl
cld
xchg
jle
es
sub
jae
popa
aaa
lret
movsl
xchg
lret
lock
xor
pop
adc
adc
addb
push
pop
rorb
repnz
lods
adc
mov
fistl
movsl
mov
cwtl
push
add
nop
pop
xor
addr16
clc
daa
xchg
or
enter
js
nop
pop
cmp
or
adc
push
divb
mov
ret
add
inc
pop
subb
pop
lret
gs
mov
xchg
push
packsswb
pop
arpl
mov
pop
cmp
fildl
add
and
add
sbb
or
add
adc
mov
mov
add
lret
or
clc
jb
loopne
xor
cmc
and
clc
lretw
ret
sarb
inc
cmp
bound
xor
push
ljmp
or
add
insb
push
stos
ror
dec
ljmp
push
xchg
inc
mov
sbb
addr16
shrb
inc
out
cs
insb
and
adc
lods
adc
cmpsl
fxch
int3
mov
sar
shl
adc
cmp
ja
add
jp
adc
js
ljmp
cmp
pusha
mov
add
inc
mov
xchg
outsl
imul
mov
imul
sahf
adc
cmp
mov
ret
or
in
jnp
and
inc
in
pushf
adcl
mov
icebp
push
ret
push
and
mov
lea
xor
mov
mov
dec
outsb
lods
mov
or
into
xor
inc
enter
or
call
jb
mov
mov
shlb
or
movsl
ret
mov
lret
ja
dec
push
es
inc
push
ret
loop
fdivrl
pushf
dec
sbb
int3
test
xchg
divb
xchg
inc
call
sti
mov
xor
imul
pop
dec
jmp
imul
out
inc
outsl
nop
aaa
jle
sub
jbe
or
shll
popa
sub
jne
inc
mov
sbb
addr16
test
out
add
xor
sub
lea
aam
mov
mov
aam
xor
imul
aam
addl
cmpsb
out
cwtl
js
fidivs
sub
pop
cmpl
mov
bound
nop
clc
je
mov
pop
dec
in
mov
cmp
nop
xor
ljmp
popf
adcb
mov
cmp
xchg
loopne
ret
adc
rcrb
push
mov
insl
inc
sbb
daa
xchg
xor
mov
cld
movb
or
xchg
nop
inc
inc
sbb
dec
or
jae,pt
mov
loopne
rcrl
push
mov
subb
dec
ret
mov
xchg
push
adc
inc
mov
mov
loope
xor
test
sbb
js
sbb
sbb
mov
test
jb
xchg
sub
jbe
cmp
or
hlt
inc
mov
pop
into
je
mov
fsubrs
or
loope
stos
stos
pop
sbb
sbb
pop
and
outsl
mov
sub
xor
orl
scas
cmpsl
push
arpl
or
mov
in
insb
mov
lods
fsubl
lea
sbb
mov
push
andb
fs
and
dec
dec
rorl
movsb
jne
faddp
cmp
sbb
stos
dec
push
sbb
test
adcb
loop
mov
lods
sahf
jo
push
ss
push
add
clc
lods
and
xor
stos
cmp
sbb
jns
xor
testb
rcrl
and
xchg
xchg
and
xchg
xlat
dec
mov
jo
mov
loopne
cs
sbb
push
pusha
dec
out
mov
push
testb
nop
sbb
sbb
xchg
pusha
pop
data16
nop
and
mov
xor
cmp
lock
mov
xor
mov
insb
dec
xchg
outsl
mov
pusha
or
and
paddb
test
in
jae
mov
push
ret
push
mov
adc
ds
lock
lods
arpl
or
or
imul
leave
int
mov
push
add
add
add
adc
and
push
movsb
push
push
movsb
jo
or
adc
xor
or
call
jmp
int
inc
addl
pop
outsb
mov
cltd
stc
pop
add
out
sbb
nop
insl
stos
add
ficoml
mov
mov
ss
cmp
out
repz
mul
adc
xor
xchg
add
inc
pop
xchg
pusha
int3
cmp
movb
enter
fldcw
inc
or
mov
and
push
decb
xchg
sub
lock
adc
sbb
add
ret
sarb
sbb
sarb
cltd
test
sub
pushf
subb
adc
lods
cmc
addb
mov
lret
test
mov
ss
or
and
shll
xor
daa
sbb
sbb
ret
xchg
mov
xor
add
jp
inc
push
add
js
rolb
fdivp
movsb
popa
clc
mov
cmpsb
js
pusha
ljmp
xchg
cmp
insl
xchg
daa
xor
mov
pop
mov
cmp
dec
xor
mov
lock
lock
adc
mull
jecxz
bound
dec
push
xchg
popa
inc
iret
mov
jecxz
rcrb
aam
cs
scas
ficoms
test
xchg
dec
push
xor
fs
jmp
mov
cmpb
cmp
xor
lret
push
pop
stos
push
jb
jae
pushf
imul
xor
outsb
imul
mov
pop
xor
lea
pushaw
mov
addl
out
sarb
push
test
out
fcoml
rcrb
xchg
in
dec
leave
add
and
and
or
ret
loopne
mov
sbb
push
fcomps
ret
push
nop
bound
xchg
inc
mov
andb
or
imul
pop
jle
ffree
or
ljmp
movb
or
or
test
xlat
inc
cmp
or
xchg
mov
jecxz
lock
xor
or
and
orb
sub
fs
sub
test
loope
push
push
adcb
mov
xor
lret
pop
ret
lds
push
rorb
dec
in
jbe
ss
mov
lock
xor
jo
lods
cmp
mov
in
je
ffree
rorb
pop
adc
sub
add
lret
in
add
push
in
lahf
movsl
push
inc
cltd
dec
jb
movsb
dec
sub
cmp
mov
js
addr16
pop
inc
or
push
out
imul
xchg
inc
sbb
jo
mov
xor
bound
jecxz
in
jle
jge
and
dec
aad
add
sbb
aaa
xor
dec
outsb
hlt
sbb
pop
js
in
pop
or
inc
enter
and
sbb
adc
dec
push
adc
sbb
sub
dec
rorb
jbe
pop
call
mov
xor
popa
add
sub
xchg
pop
push
orb
and
fmull
mov
pop
sbb
inc
ja
sbb
inc
rcr
mov
test
dec
pop
push
nop
pusha
xorl
xor
dec
xchg
sbb
outsl
ljmp
sub
inc
sub
rclb
inc
lret
push
setp
add
push
dec
enter
cmp
popa
mov
pushf
pusha
test
push
xchg
sbb
sbb
adc
dec
dec
and
aam
dec
data16
xchg
fisubs
and
test
jecxz
ret
lret
adc
and
or
xor
out
jno
loope
scas
add
lcall
and
and
sub
jmp
mov
jle
jo
cmpl
mov
mov
insb
jecxz
movb
bound
fisttpl
add
lock
rorl
je
pop
xor
dec
pop
or
xchg
sahf
mov
dec
sahf
adc
dec
cmpb
or
insl
movsb
lds
mov
subb
mov
sahf
xchg
jo
sub
jp
mov
outsb
sbb
mov
xchg
sub
jns
mov
into
mov
inc
pop
push
mov
adc
mov
cmp
add
hlt
pop
or
inc
mov
mov
into
scas
pop
sub
rolb
in
arpl
xor
sub
push
hlt
mov
xchg
dec
push
mov
mov
sub
lret
repnz
push
popa
popl
sub
fiaddl
lock
push
mov
mov
movsb
xor
fstps
subb
rclb
sbb
lcall
test
out
inc
sub
xor
mov
add
lahf
insl
lret
jg
dec
or
sub
mov
cmpsb
popl
xchg
pop
add
loope
sub
sahf
popf
add
sub
test
xchg
adc
sub
lds
pop
pusha
stos
push
cmp
lcall
in
mov
add
mov
mov
cmp
and
pop
xchg
jmp
adc
popf
popa
shlb
or
or
xchg
and
xchg
adc
int
or
mov
adc
popf
les
cmp
jecxz
cs
enter
into
push
jecxz
fs
mov
sub
cwtl
push
js
push
dec
pusha
mov
push
or
dec
hlt
in
data16
and
std
mulb
push
testb
mov
push
movb
ljmp
mov
jnp
cmc
xor
and
jb
and
cmp
mov
cwtl
add
sbb
lret
es
or
add
idivb
loopne
loop
rcrl
push
push
pop
sbb
dec
bound
bound
pusha
out
dec
adc
popa
cmp
dec
jbe
dec
mov
ret
cmp
loope
test
cs
adc
mov
adc
addb
and
daa
pop
sub
je
push
loopne
scas
jb
lods
mov
mov
pushf
inc
pop
push
adc
xor
cmp
out
notb
inc
lea
popf
push
add
xchg
insb
xchg
pushf
add
add
mov
push
or
addb
xchg
test
nop
rcll
andb
out
outsb
mov
scas
jne
sbb
dec
loope
ret
dec
cmpsl
dec
push
adc
inc
lock
ss
inc
sbb
mov
cmp
mov
push
xchg
fimuls
and
xchg
shll
mov
pusha
int3
mov
push
je
push
enter
sbb
fs
and
lahf
fmuls
jne
sub
out
xchg
mov
dec
cld
pop
ret
add
jecxz
mov
icebp
pushl
arpl
cwtl
sbb
adc
add
fcoms
stos
daa
mov
or
ljmp
add
adc
js
mov
push
cmp
add
cltd
mov
fwait
xor
pop
pop
jp
and
or
dec
and
rcrl
sbb
jmp
xchg
push
dec
inc
arpl
nop
rolb
xor
ds
push
xchg
and
jmp
add
je
sub
sbb
ss
es
lcall
ss
mov
inc
or
adc
add
sub
add
push
or
sub
sub
push
mov
push
aaa
movsb
test
and
add
insb
inc
xor
int
mov
fcoml
add
int3
dec
adc
icebp
push
stos
mov
add
push
out
mov
or
pop
rcll
rorl
lcall
gs
clc
push
xor
and
pop
fdivrs
arpl
mov
dec
and
and
add
scas
cmpb
cmp
clc
push
add
scas
rcl
cmp
loop
add
xor
lods
fwait
test
ret
loopne
xor
cmpsb
fs
and
push
push
adc
mov
dec
fdivl
or
pusha
sub
jbe
push
mov
jne
and
iret
gs
jo
lock
xor
les
push
loopne
pushf
mov
and
cmp
loopne
outsb
sbb
ret
xorb
movsb
cmc
orb
jmp
popa
add
mov
sbb
mov
int3
sub
add
mov
jno
loopne
movsl
mov
lods
out
push
jp
push
cli
mov
pop
loop
mov
pop
mov
and
push
icebp
lods
rol
push
dec
lahf
xchg
ret
push
andb
mov
xor
shlb
or
scas
mov
or
pop
btc
dec
loopne
cwtl
scas
pop
hlt
mov
or
push
lods
dec
shrl
nop
lret
or
adc
mov
inc
lea
ja
add
xchg
fdivrs
imul
sbb
pop
mov
out
movsl
inc
fcomp
je
pushf
add
adc
sub
rcr
add
add
stos
sbb
pop
lcall
sub
inc
add
adc
add
mov
sbb
js
js
adc
adc
insb
inc
leave
cmp
and
cmp
push
jo
icebp
push
ret
pop
addr16
adc
inc
push
pushf
adc
sbb
bound
xor
xor
loopne
or
adc
push
lret
pusha
or
add
inc
push
cmpsb
ds
aaa
push
inc
jo
push
mov
int
inc
popa
loope
lret
push
jns
or
mov
sbb
mov
jo
lods
sub
adc
dec
popf
test
loop
test
push
add
loop
sbb
adc
sub
adc
and
mov
and
lcall
dec
ret
xchg
rcrb
sub
insb
push
data16
sub
lret
push
ret
push
sub
jno
adc
ficoms
fstp
rclb
cwtl
andl
push
xchg
sub
fs
fidivrs
or
push
int3
pop
ss
sahf
inc
pushf
popa
lock
ljmp
pop
arpl
pushf
sbb
hlt
cli
sbb
pop
cmp
je
ret
pop
xchg
test
pusha
or
add
imul
mov
test
sahf
pushf
sbb
cmp
lret
push
jle
sahf
adc
xchg
loopne
inc
xchg
ret
fiadds
inc
hlt
test
adc
into
cmpb
pushf
add
xchg
sbb
jns
bound
xchg
jno
push
test
and
loop
pushf
or
jle
or
mov
push
mov
js
push
fdiv
pop
mov
int3
push
lcall
mov
pushf
mov
add
mov
push
loopne
and
mov
pop
movsl
adc
xor
add
mov
lret
and
push
mov
mov
mov
enter
mov
or
sahf
rorb
sub
inc
sub
sbb
inc
aad
lock
subl
push
xor
sbb
out
pop
pop
sbb
out
dec
push
imul
ret
addr16
xchg
and
pusha
pusha
inc
cltd
jo
es
xor
cld
push
xchg
mov
lcall
xor
pop
mov
rcrb
or
or
cwtl
and
mov
mov
dec
int3
mov
cmp
mov
push
shrb
pop
dec
stos
pop
mov
push
and
mov
lods
sub
imul
xor
lods
gs
daa
or
xor
aam
mov
add
pop
jo
add
adc
stos
cmpsl
sub
inc
lea
in
loop
jo
adc
arpl
mov
sbb
mov
push
adc
mov
mov
icebp
add
js
in
mov
enter
and
in
inc
sub
push
xchg
pusha
cmpsl
mov
fmuls
lret
pop
push
mov
adc
mov
inc
fdivrs
xchg
adcl
out
xchg
xchg
mov
push
sti
pop
mov
test
adc
mov
sbb
add
xlat
cmpsb
lods
xor
mov
push
rol
loope
mov
or
dec
mov
insb
and
icebp
jo
push
outsb
inc
sbbl
loopne
rclb
adc
and
dec
dec
or
shll
jle
mov
gs
pusha
dec
mov
mov
cmovle
jnp
jo
dec
xor
push
push
rcrb
rolb
cmp
sbb
rcrl
jne
mov
mov
ficoms
inc
popa
lods
add
add
jne
mov
jp
lret
inc
sbb
ret
cmpsl
arpl
pusha
mov
and
fiadds
loope
jns
insb
sub
pop
adcb
xchg
enter
mov
xor
or
xor
or
dec
cmpsb
lret
inc
inc
fiadds
das
lret
test
fidivs
popa
mov
shll
data16
aam
addl
sub
hlt
test
sub
lea
es
xchg
mov
loope
mov
dec
sbb
outsl
add
leave
outsb
add
or
mov
sub
in
ficoms
or
cmp
insl
add
mov
pop
orb
ret
push
sahf
jbe
adc
rclb
js
mov
push
das
ret
adc
outsb
jl
inc
into
mov
sub
ja
pop
or
push
xchg
into
sub
xchg
and
les
lods
pop
sub
loope
adc
sub
add
nop
xor
ljmp
inc
call
iret
xchg
enter
sub
sbb
add
cmp
push
or
scas
push
popl
aam
or
call
sbbb
stos
xor
inc
repnz
aam
or
nop
rol
cmp
pop
or
ret
mov
int3
sbb
cmp
fcoms
je
cmc
dec
add
mov
xor
aaa
fs
cmp
mov
cmp
add
and
push
inc
out
dec
repz
dec
iret
add
sub
daa
xchg
push
push
sub
mov
jns
nop
mov
cmp
addr16
sbb
mov
mov
adc
fs
cmp
xor
jp
dec
cmp
adc
mov
sub
pop
sbb
xchg
mov
push
daa
xchg
dec
sbb
pop
es
push
repnz
jl
test
lods
xchg
lret
pusha
pop
sbb
sub
sbb
inc
pop
or
imul
data16
pop
xchg
cwtl
add
adc
dec
aam
ror
add
add
inc
cmpsb
mov
fs
pop
xchg
xlat
fdivp
and
lock
insl
loope
pop
pop
and
jbe
ret
movsb
adc
adc
jp
dec
incb
in
inc
popf
sbb
loopne
push
mov
pusha
adcl
add
in
mov
enter
aam
xor
into
sahf
push
dec
sub
cs
push
loop
jo
lods
icebp
adc
mov
popa
and
les
je
xchg
les
fisubs
test
bound
js
call
dec
test
fs
mov
mov
mov
cmpsl
xor
les
dec
xlat
lret
insb
fdivrl
sub
adc
sub
fdivl
and
xchg
rorb
sahf
insl
out
mov
adc
loopne
sub
inc
leave
mov
push
fidivs
push
in
inc
test
out
in
push
test
jbe
xor
sub
fcoms
nop
and
xchg
insl
rolb
and
adc
les
aad
sub
dec
mov
adc
cmp
add
or
ja
inc
sbb
daa
out
adc
fcomp
mov
pop
inc
sub
out
or
jmp
or
movsb
out
inc
fadd
pop
lret
mov
fdivrs
lea
test
sub
popf
sbb
mov
xor
mov
mov
daa
arpl
sub
stos
pop
mov
in
xchg
add
inc
lret
test
sub
cltd
js
xchg
dec
add
scas
inc
sbb
sub
cmpsb
xor
and
jo
ficoms
adc
sub
mov
popf
and
sbb
jnp
dec
fsub
adc
or
mov
js
xchg
sahf
call
or
lcall
pop
push
js
dec
or
mov
icebp
int
mov
mov
rcll
jl
xchg
and
and
jecxz
mov
xchg
mov
pushf
xchg
rorl
lods
xchg
pop
xchg
shrl
inc
pusha
loopne
push
push
dec
pop
mov
and
les
dec
pop
inc
inc
sub
adcb
xor
arpl
das
pop
orb
adc
cmpsl
out
pop
popf
lret
sahf
or
cmp
xor
cmp
push
push
mov
push
xchg
and
dec
popf
dec
xchg
sbb
aam
inc
imul
test
out
mov
add
insl
pusha
sub
xor
jmp
fwait
lret
js
sbb
rol
xchg
clc
cmp
dec
stos
push
sbb
cmp
inc
or
inc
lea
scas
and
jbe
rolb
imul
push
push
outsl
cltd
testb
sarb
test
js
popa
add
cwtl
sbb
xchg
sbb
movsb
sbb
out
mov
jecxz
or
sbb
jae
and
pusha
dec
test
in
cmp
pushf
outsb
popf
into
xchg
mov
and
sub
into
push
xor
fidivl
or
cmp
and
add
in
je
sub
cmpb
cmp
rolb
sbb
movsl
pop
fstpt
scas
or
into
mov
mov
addr16
sahf
sub
mov
adc
and
sub
outsb
jno
mov
cmp
cli
and
jo
lret
mov
inc
rorl
and
mov
inc
dec
adcl
push
adc
jmp
and
push
add
mov
push
loope
adc
mov
lcall
mov
cmp
daa
jmp
aam
shr
jg
jo
gs
insb
pop
xchg
bound
mov
mov
push
or
sarb
mov
add
adc
dec
mov
lock
jne
enter
sub
mov
dec
movsl
fisubs
daa
inc
daa
cmpb
or
xor
pop
cmpb
cmp
jmp
mov
mov
pop
add
sbb
add
sbb
xchg
std
or
rol
fildl
divb
push
mov
jecxz
enter
pushf
sbb
mov
into
enter
jecxz
add
sub
lock
mov
nop
cmpsl
mov
call
push
push
scas
mov
dec
cmp
inc
add
xor
movsl
jno
leave
cltd
mov
inc
xor
cmpsb
mov
mov
add
inc
cmp
sbb
mov
leave
xor
xchg
cmp
andb
dec
inc
cmp
ss
bound
scas
mov
dec
lock
push
lret
sub
dec
fsubs
push
mov
lret
hlt
dec
fidivl
arpl
mov
lcall
inc
je
mov
inc
add
ficomps
dec
ror
jecxz
enter
push
add
das
pop
je
cmp
int
and
add
ss
adc
dec
and
push
mov
ret
add
push
inc
addr16
pushf
dec
addb
xchg
add
jb
inc
push
adc
bound
repz
out
test
pop
sbb
daa
mov
fimuls
mov
int3
inc
inc
flds
testl
xor
ficoml
cmp
adc
sarb
push
in
aam
fmuls
add
add
xchg
sahf
push
adc
das
push
pop
xchg
mov
pusha
lock
xor
sahf
loopne
outsl
movups
inc
xchg
pop
sbb
packssdw
jb
mov
insb
lret
add
test
movsb
out
sbb
adc
and
add
xchg
or
pop
push
xchg
stos
or
aam
and
hlt
and
cltd
loopne
ror
arpl
pusha
test
xor
inc
js
mov
faddl
mov
and
ljmp
mov
mov
enter
adc
outsb
fdivp
rolb
mov
test
lods
adc
add
ljmp
rcrb
adc
and
and
jp
inc
ret
out
push
jne
xchg
cmp
loopne
shrl
mov
jbe
adc
push
ss
dec
jo
int3
sti
inc
push
rclb
xor
mov
jp
call
fs
into
ret
popa
fcoml
lret
out
sbb
inc
cmp
jo
repnz
das
push
and
cmp
dec
cltd
mov
pop
dec
stos
scas
bound
js
dec
mov
or
mov
ljmp
mov
cmp
xchg
sub
pop
sub
or
sub
movsl
and
cmpsb
dec
sub
push
std
loopne
inc
add
pushf
push
push
pop
sbb
nop
sbb
pusha
and
push
adc
or
mov
or
add
repnz
ljmp
mov
sbb
or
add
jb
add
inc
pop
lret
or
xor
pusha
sub
jecxz
mov
rolb
loopne
sahf
test
xchg
sub
push
dec
xor
cmp
jno
lods
xor
add
sbb
add
pop
sbb
test
xor
pop
push
es
jne
test
add
sahf
xchg
mov
add
xor
push
in
dec
movsb
jo
fdivs
sub
pop
aaa
test
daa
sbb
sub
push
or
cli
adc
addr16
mov
jl
xchg
ja
push
adcb
shl
mov
ret
sub
mov
ds
sarl
sbb
mov
call
inc
test
aaa
push
popa
stos
push
lock
ret
adc
add
out
sbb
mov
xchg
mov
inc
test
nop
ss
sub
movsl
call
dec
sbbb
sub
xchg
aad
jp
fcoml
adc
cmp
cmp
xchg
subl
push
bound
push
mov
aas
adc
dec
push
ss
sub
push
popa
fs
lea
loop
sbb
push
inc
adcl
scas
rolb
and
or
add
mov
or
fnsave
cmp
ror
adc
sub
cmp
popfw
test
cmp
xchg
xchg
mov
mov
lret
add
loope
jae
dec
pop
andl
fdivrl
aam
add
hlt
pop
jne
ljmp
in
es
loopne
pop
push
sbb
adc
and
das
subl
sub
daa
nop
leave
cli
movsl
inc
ja
adc
and
push
mov
xchg
fisubs
je
mov
sub
shl
xor
jl
mov
rcll
lock
xchg
xchg
or
sub
mov
pop
jne
aam
and
inc
shrb
ret
mov
fwait
inc
jl
inc
push
cmp
enter
pop
jp
in
test
cmp
xor
adc
ljmp
subb
jb
fadds
sub
add
dec
data16
adcb
xchg
xor
sbb
pop
push
or
movsb
dec
ret
sub
idivl
or
popa
add
and
dec
adc
xchg
mov
loopne
lret
movsb
push
xchg
mov
push
pop
mov
push
add
jno
rol
hlt
ss
outsb
js
mov
adc
add
pusha
push
dec
ds
and
add
dec
push
hlt
inc
or
mov
lret
add
add
dec
js
mov
data16
adc
and
sub
adc
repnz
pop
sub
test
loopne
pop
xchg
sub
mov
mov
pusha
dec
loop
cmp
hlt
or
add
call
add
cmpb
mov
xchg
cli
sbb
jo
in
ds
xchg
add
lcall
adc
adc
xchg
arpl
ficomps
xor
outsl
xor
fs
pop
ret
sbb
pop
pop
add
in
pop
ficoms
adc
cmp
mov
movsb
sbb
adc
fnstenv
insl
mov
test
shrb
mov
loope
jge
push
loop
inc
jbe
jmp
pushf
or
add
or
cmp
push
popa
xorl
cmpsb
push
loopne
xchg
xchg
mov
clc
scas
jp
jl
in
adc
xchg
test
out
stos
sub
sbb
iret
and
mov
xor
xchg
mov
je
aas
mov
arpl
xorb
cltd
mov
add
cmc
out
shr
pop
outsb
inc
mov
mov
je
xchg
xchg
andl
mov
jmp
push
cltd
inc
inc
sahf
cmp
and
dec
jbe
xorl
jno
push
add
add
ret
add
push
add
xchg
mov
add
xor
aaa
mov
pop
add
or
cmp
jne
ret
sbb
sbb
lods
pop
and
xor
lock
lret
imul
sbb
arpl
adc
xchg
push
lock
jae
dec
popf
and
add
inc
nop
push
xchg
add
xor
adc
jo
imul
and
add
leave
sbb
xchg
xor
mov
popf
mov
incb
push
push
fstps
and
xor
bound
xor
roll
jo
push
push
cld
xor
loop
and
add
xor
adc
mov
sub
mov
jb
into
mov
inc
cli
fiaddl
mov
push
test
mov
call
test
cmpsl
pop
mov
add
mov
cwtl
and
mov
mov
imul
fsubrl
dec
xchg
dec
leave
inc
xor
pop
incb
dec
mov
rolb
cltd
repnz
pop
movsb
cmp
pusha
jo
adcb
push
or
push
sbb
mov
jno
dec
popf
cmp
jp
lods
adc
mov
mov
pop
push
cmp
push
cs
rcl
mov
test
add
add
int3
jb
dec
push
les
mov
call
jp
xor
aam
stos
stos
adc
sbb
xor
shlb
sbb
or
into
mov
dec
test
cmpsb
orb
loope
or
mov
test
mov
insl
ret
add
fsubrs
and
mov
loop
pop
add
lea
mov
jp
jmp
sub
jl
jp
js
ss
in
loopne
sbb
adc
mov
add
xchg
in
pushf
sbb
mov
mov
cmp
xor
or
ljmp
cmp
push
rclb
nop
and
add
push
das
cmp
scas
sub
cmp
pop
js
fmul
and
test
mov
xor
pop
mov
mov
inc
push
push
test
adc
pop
daa
shlb
ss
sbb
rcrb
or
sub
or
and
push
cmpsb
ljmpw
loopne
and
adc
jo
mov
add
pop
sbb
xor
or
jp
pop
push
sub
add
push
sub
ja
lock
leave
aam
mov
xchg
cmp
mov
mov
mov
pop
jbe
pop
mov
test
adcl
repnz
data16
lock
pusha
push
es
in
adc
into
rol
push
loop
sub
xor
xchg
jge
loop
sbb
scas
dec
out
push
or
sub
sahf
push
cs
scas
and
adc
cmpsl
mov
jne
loop
pop
and
sahf
lods
jno
pop
or
lret
test
lods
in
into
xor
inc
sbb
inc
lea
fsubrl
mov
cmpsb
push
cmp
xor
push
outsb
sub
pop
ret
rorb
sbb
push
aaa
cli
adc
sbb
and
lret
adc
enter
pop
inc
push
push
push
rorb
mov
lods
je
push
dec
outsl
add
xor
push
gs
insl
daa
dec
cmp
hlt
pop
pop
pushf
loopne
inc
sbb
sub
add
add
rcrb
xchg
imul
pop
scas
outsl
pop
push
xor
and
mov
push
add
xchg
xor
inc
jg
in
stos
shll
faddl
loop
pop
sbb
mov
enter
fcompl
gs
aam
cmp
sbb
mov
dec
xor
push
inc
lret
xor
mov
pop
push
sbb
mov
push
or
xorb
cmp
incl
sbb
xchg
pop
mov
or
mov
pop
pop
dec
jne
ljmp
jecxz
leave
push
ss
add
add
adc
and
popf
ret
jo
ljmp
inc
fstl
add
inc
out
outsb
rcrb
es
adc
out
ret
or
flds
cmp
leave
push
sbbl
adc
mov
je
lods
and
sbb
nop
xor
jb
mov
push
adc
fsubrs
inc
mov
or
adc
inc
xchg
inc
popl
lods
add
cmp
sub
push
xchg
lock
xlat
sbb
arpl
xor
mov
adc
cli
xor
push
arpl
loop
inc
add
mov
arpl
push
mov
jg
adc
hlt
cli
addr16
ret
pop
or
adc
sbb
mov
jb
mov
lods
popf
push
add
dec
enter
mov
mov
sbb
loopne
sub
pop
rol
scas
js
pushf
test
in
add
addb
adc
jecxz
lock
out
pop
jl
push
jg
adc
add
add
shl
testl
adcl
rclb
pusha
inc
mov
sbb
ret
pop
push
add
mov
mov
pop
imul
icebp
dec
add
aaa
xchg
test
ror
push
sub
add
orb
rol
push
cld
push
add
clc
and
sub
cmp
call
dec
mov
lds
je
mov
test
jmp
or
and
insb
fadd
enter
jle
add
push
mov
push
add
mov
fiaddl
jg
or
int
rorl
test
adc
xchg
add
jmp
mov
loop
and
and
add
xor
fadds
insl
inc
stos
push
orb
lock
push
inc
push
mov
dec
xor
sbb
fnstsw
roll
or
xchg
inc
add
jecxz
mov
or
mov
jge
adc
sub
add
sti
add
xor
and
and
push
adc
test
jae
lods
jne
mov
sub
pop
pop
adc
push
stc
shl
mov
xor
add
daa
or
adc
das
xor
outsb
jge
add
sbb
mov
sub
out
fsubrl
lods
xchg
dec
add
fldl
dec
push
xchg
mov
mov
and
insb
mov
pop
or
aad
push
and
cld
mov
es
dec
mov
push
daa
roll
inc
jo
ds
pop
rorb
inc
repz
push
xor
sub
cmp
inc
ficoms
xchg
jns
outsl
push
xchg
push
bound
mov
mov
fxch
test
inc
outsl
out
into
sbb
das
adc
cmp
testl
adc
popf
add
sub
push
dec
pop
push
adc
gs
add
hlt
adc
add
hlt
add
ret
pop
leave
adc
cmp
pop
sbb
ljmp
or
push
add
stos
decb
and
jecxz
ljmp
xor
mov
jne
xchg
cmp
adc
dec
inc
fistpll
mov
add
hlt
mov
pop
dec
and
dec
inc
loope
test
stc
push
add
xchg
rcrb
and
sbb
insl
pop
dec
pop
in
aad
ret
sub
add
repz
hlt
loope
dec
call
call
cmp
mov
jno
add
movsl
rorl
bound
and
jb
add
jnp
subl
loope
cmp
pusha
lods
insl
cli
dec
adc
or
sub
ret
sub
aam
cs
orb
or
jbe
les
jp
enter
xlat
rcrb
push
push
popa
inc
pop
out
dec
inc
repnz
mov
pop
inc
lock
adc
clc
and
sbb
cmp
es
std
pop
movsb
daa
xor
jl
add
mov
pop
push
push
adc
nop
and
icebp
popa
mov
je
daa
xor
sub
dec
rcrb
inc
or
jbe
mov
mov
add
cmpl
test
data16
jo
adc
dec
jmp
jo
lret
dec
xchg
mov
test
fisttpll
mov
gs
add
sbb
cs
mov
cmp
dec
mov
loop
sub
ret
cmp
sbb
fsubl
xor
cli
or
mov
movsb
xor
push
or
cmp
dec
repz
inc
sbb
mov
in
or
shrb
sub
dec
je
xchg
xchg
sbb
sub
add
rorb
insl
pushf
lahf
mov
mov
cwtl
nop
cmp
movsb
add
mov
xor
push
popa
and
mov
sahf
mov
dec
jns
sbb
movb
add
orb
gs
xchg
mov
adc
sbb
out
xchg
dec
push
jg
add
jg
movsb
pop
xchg
cmpl
pop
sub
cmp
cmc
adcb
int3
pop
mov
rcll
cmp
sbbb
or
or
or
xchg
xchg
push
fsub
nop
mov
movsb
test
sbb
fs
cli
fstl
test
sbb
xchg
dec
push
iret
faddp
or
mov
cmc
les
sub
lret
pop
cmp
or
push
imul
adc
hlt
or
add
or
sbb
push
lahf
fnstcw
xchg
ljmp
add
int
sbb
test
rol
fidivl
in
mov
or
inc
sahf
xchg
loope
inc
jo
and
sbb
shll
add
mov
sub
cmp
outsb
sbb
mulb
or
dec
data16
mov
imul
push
or
sub
and
and
dec
arpl
loopne
fs
xchg
cmp
pop
inc
xchg
xor
sbb
jo
xchg
and
ficomps
and
mov
shlb
enter
or
inc
and
jp
mov
lret
pusha
pop
enter
shlb
xor
inc
xchg
imul
outsl
mov
shlb
test
inc
add
adc
mov
daa
dec
arpl
enter
sbb
sub
inc
sbb
aam
pop
push
inc
add
rcl
ljmp
inc
cmp
bound
popa
fs
inc
pop
cs
sub
or
scas
xchg
iret
add
insb
add
or
aad
mov
push
jno
push
js
and
lea
outsb
lcall
mov
pop
adc
mov
ljmp
pop
leave
xchg
xchg
in
xor
loopne
rcrb
lret
pop
lcall
shrb
call
sbb
cmpsb
shlb
sahf
sbb
es
mov
push
idivb
bound
push
xchg
enterw
pusha
push
jae
enter
or
push
add
loopne
and
push
add
add
xchg
call
dec
or
rcrb
repnz
popa
rcrl
inc
pop
xchg
and
fwait
push
and
cmp
rolb
sbb
ret
lret
movsb
lcall
pop
into
sbb
cmpsb
aas
jg
call
aam
inc
imul
mov
fnstenv
dec
pop
mov
mov
mov
in
pusha
out
mov
lods
insb
and
or
xchg
push
inc
pushf
mov
js
lock
lcall
in
add
sbb
sbbb
sub
push
mov
push
mov
cmc
ss
jp
inc
pusha
cmp
adc
rcrb
pop
xor
es
cld
push
sub
pusha
cmpsb
out
lock
lock
addb
add
cmp
movsl
mov
movsb
cli
push
xor
cmp
and
dec
loop
push
dec
in
mov
dec
inc
imul
test
imul
push
pushf
sbb
ret
jno
dec
sub
subb
addb
dec
sarb
mov
inc
rolb
inc
push
sbb
mov
mov
sbb
dec
popa
je
mov
and
jno
cld
adc
inc
mov
outsl
sbb
xchg
xor
fwait
or
mov
adc
test
int3
jb
xchg
add
aam
jmp
or
iret
mov
jbe
leave
into
pop
ror
jle
push
mov
push
pop
inc
sarl
or
pop
bound
mov
add
xor
push
loop
push
mov
mov
mulb
cmp
push
inc
inc
fucom
xchg
push
add
dec
cwtl
inc
je
pop
pop
xchg
insb
cmp
inc
in
push
cmp
sbb
mov
fidivrl
fstpt
shufps
outsl
bound
xchg
xchg
xchg
add
jb
jo
sub
sbb
add
mov
or
xchg
lret
fsubl
dec
mov
add
dec
ljmp
andl
addb
add
sbb
mov
and
inc
jbe
pusha
adc
bound
adc
cmc
cmp
cmp
adc
sar
addb
push
shll
dec
in
aam
add
mov
mov
add
aas
sub
add
add
rcr
dec
mov
rorb
das
or
jo
leave
dec
adc
push
sub
mov
rorb
arpl
push
lods
adc
jp
arpl
aaa
mov
cmp
mov
push
lret
and
mov
ds
and
and
out
sahf
loop
movsl
mov
cmp
inc
dec
mov
xchg
xchg
xchg
dec
mov
add
movsb
and
int3
insb
aaa
outsb
fbld
inc
lock
and
sbb
ljmp
insb
fdivr
sbb
sbb
mov
mov
test
add
inc
insb
pop
dec
xchg
cmp
fucomp
push
ret
mov
aam
sub
sbb
int
sbb
add
inc
adc
jno
jp
add
js
in
and
gs
add
call
fisttps
test
sub
sahf
call
or
lret
push
push
mov
aam
in
lret
or
aaa
into
adc
andb
idivb
pop
in
adc
fbstp
inc
inc
or
repnz
ja
mov
push
cmpsl
pop
cmpsb
mov
mov
enter
add
cmp
or
popf
lock
sub
add
xchg
sbb
out
and
pop
test
mov
test
hlt
adcb
or
ljmp
jmp
cld
insb
pop
sbb
add
xchg
ss
mov
mov
and
add
mov
mov
in
fs
and
rol
rcrb
cltd
andb
push
dec
mov
lods
sbb
push
mov
stos
sub
xchg
jle
mov
and
lahf
mov
mov
sarb
dec
cmp
rcrb
rclb
imul
movsb
in
rorb
adc
add
ss
aad
add
sahf
sub
push
mov
sarb
sub
in
imul
and
inc
add
xchg
add
addb
ret
adc
test
add
mov
dec
and
es
daa
loop
cmp
jo
adc
popa
pop
addr16
sti
inc
add
das
or
nop
or
rorl
pop
mov
jmp
and
cwtl
or
lret
gs
dec
cmp
insl
inc
enter
orb
pop
rorb
and
or
mov
bound
rolb
push
and
dec
enter
jae
adc
filds
dec
mov
pusha
or
xchg
pop
dec
addl
mov
negb
sub
je
cwtl
xor
adc
loopne
arpl
push
adc
mov
xchg
cld
sbb
sahf
ret
outsb
jbe
jo
andb
sub
adc
rcrb
adc
inc
addl
sbb
addr16
arpl
pusha
daa
aaa
push
cmp
cmp
dec
inc
mov
mov
rcll
and
or
orb
sbb
ret
and
cmp
lcall
push
xor
mov
ret
lods
mov
and
add
out
mov
mov
xor
pop
pushf
xchg
xor
call
jl
mov
int3
cmp
dec
daa
mov
or
shlb
enter
push
adc
inc
pop
mov
dec
jl
addb
cmp
popa
rolb
push
pop
in
mov
xor
lods
push
pop
cltd
mov
mov
xor
sbb
adc
je
hlt
and
mov
nop
xor
enter
xor
push
xchg
push
push
xor
adc
push
test
shlb
pop
adc
daa
mov
mov
lcall
push
test
loopne
and
leave
jl
mov
xor
add
jno
decl
gs
xchg
test
lds
lret
bound
shlb
lcall
mov
mov
pop
orb
xor
cwtl
pop
jmp
sbb
add
mov
push
sub
mov
sbb
xchg
cmp
movb
adc
test
lock
pusha
test
jo
mov
cmp
ret
lret
dec
divb
push
push
ja
in
imul
clc
adc
lock
push
repz
jecxz
mov
jo
push
mov
sahf
inc
in
push
js
mov
inc
lock
xor
fiaddl
imul
sahf
sbb
dec
jp
sbb
subl
lret
xor
push
test
test
sbb
lods
out
mov
adc
lock
repnz
shl
add
insb
call
dec
movsb
pusha
push
mulb
es
adc
mov
lock
inc
ret
adc
xor
xchg
inc
aam
mov
cmpsb
in
movl
cmp
or
das
sbbl
mov
pushf
rcr
into
sub
loope
cltd
xchg
flds
cmc
cmp
pop
aam
fidivs
adc
loopne
and
invd
push
mov
inc
adc
aaa
or
fs
les
scas
xchg
xchg
pushf
lea
adc
push
mov
hlt
enter
je
popa
je
sbb
sbb
add
add
mov
or
repz
push
popa
sub
dec
mov
shlb
lea
addr16
mov
cmp
push
mov
xor
jns
cmp
push
std
push
xor
loope
sub
xor
sbb
xchg
jo
mov
shl
xor
cmp
outsb
test
sbb
dec
cld
mov
xchg
add
push
aad
lret
mov
pop
in
mov
xor
test
lock
xlat
jb
and
mov
lret
movsb
inc
loop
dec
loop
add
shll
icebp
xor
jmp
and
out
bound
imul
cld
sbb
sbb
push
xchg
inc
clc
sbb
ror
imul
rdmsr
loopne
xchg
ror
push
lods
add
mov
push
and
lea
and
jecxz
or
sub
shlb
dec
clc
je
sbb
addb
xorb
nop
cmp
sbb
pop
lret
add
xchg
or
divb
mov
cmp
xor
xchg
push
and
negb
push
jno
enter
popf
sbb
jne
or
xor
jle
mov
fbstp
cmp
adc
fcompl
or
xchg
push
lock
jne
icebp
sahf
cltd
fcompl
pop
and
mov
push
ficomps
mov
scas
shl
lret
xor
lcall
repnz
dec
in
imul
fidivrs
ret
dec
xor
les
push
es
icebp
or
pop
sbb
xor
add
and
push
and
cld
les
js
pop
adc
xor
xor
pusha
mov
or
pop
fcoms
and
adc
adc
outsl
rorl
and
xchg
push
jbe
jns
add
cmp
addl
adc
mov
sub
mov
or
cmp
xchg
cmpl
sbb
add
in
xchg
add
ret
add
dec
cmpsl
nop
inc
idiv
call
punpcklbw
mov
push
xchg
inc
mov
push
push
cltd
cmpsb
dec
cmp
add
xchg
pop
xchg
and
sahf
fcompl
inc
aam
lock
jns
xchg
sbb
repnz
and
add
pop
sahf
pop
shl
mov
sub
push
int
das
popa
mov
test
pushf
sbb
inc
dec
loopw
inc
lea
nop
mov
out
ret
int
inc
insb
inc
add
jp
ds
loope
mov
dec
and
push
movsl
jo
sub
pop
xchg
sub
iret
dec
clc
add
or
push
ds
or
mov
adc
push
pusha
sub
lods
outsl
nop
js
jnp
adc
pusha
lods
xor
dec
add
gs
add
test
roll
into
nop
popa
inc
add
push
sarb
adc
or
daa
popa
daa
ljmp
sbb
pop
add
in
or
inc
jmp
ret
jo
into
mov
dec
cmp
cmp
ljmp
jp
adc
fcmovnb
pop
sbb
xorb
insb
sahf
ret
sub
push
roll
int3
pusha
jb
sbbl
rolb
fdivrl
pop
popf
or
push
and
sbbb
aad
xor
adc
popa
sub
pop
insb
add
jb
add
push
push
push
shlb
xor
imul
dec
cmpsl
xchg
and
imul
lock
add
das
pop
pop
or
nop
jp
lret
sahf
scas
cmp
sub
add
xchg
mov
stos
lock
fxch
xor
or
lret
mov
cmc
sarb
loop
and
mov
cmp
pop
stc
sub
or
fs
arpl
arpl
xchg
stos
and
enter
in
arpl
popa
and
or
or
mov
outsb
and
cmp
add
push
divb
pushf
add
add
dec
enterw
shl
xor
inc
imul
dec
jo
xchg
cmp
inc
cmpsl
ret
pop
test
rclb
jmp
xor
cs
repnz
sbb
xor
push
shrb
js
divl
add
aas
and
mov
cmp
notl
stos
cld
or
sbb
in
lret
adc
test
ds
icebp
pop
je
cmp
fnstcw
test
into
loopne
mov
sub
sbb
test
add
lods
gs
jp
push
xchg
sbb
xchg
dec
shlb
outsb
sub
push
cmp
jecxz
xchg
test
pushf
or
pusha
mov
sahf
cwtl
les
fcmovb
lods
imul
into
mov
or
push
imul
dec
addb
jle
arpl
add
push
pushf
pop
ret
push
addr16
add
ljmp
pop
dec
movsb
jmp
push
enter
ret
pushf
inc
push
mov
rcl
sub
pusha
je
sub
or
push
pushf
arpl
andb
xchg
push
lods
dec
pusha
inc
jbe
imul
outsb
fisubl
aaa
pop
xchg
mov
dec
push
or
xchg
int3
mov
xchg
xor
lret
or
dec
xorb
mov
adc
rcrb
data16
or
sbb
xchg
inc
lcall
pop
sub
insb
test
enter
scas
pop
pop
xor
add
lock
inc
or
and
mov
pop
test
sub
xor
sbb
dec
cmp
push
stos
mov
jbe
test
push
cmp
and
lock
mov
push
and
inc
inc
or
ror
sbb
addl
cmp
sbb
add
pop
sub
pusha
outsb
mov
sbb
inc
xor
inc
dec
movsb
mov
inc
mov
insb
nop
clc
or
imul
xchg
inc
xchg
cli
inc
nop
leave
ds
pop
addr16
roll
pop
add
mov
rolb
out
adc
andl
cmpsl
addl
and
rcl
push
or
out
add
stos
push
add
xchg
and
adc
xchg
stos
dec
add
lea
int3
pop
addl
mov
mov
mov
rcrl
mov
test
sub
test
jnp
cmp
rcrb
xchg
xor
jecxz
mov
or
inc
xor
xchg
enter
fidivl
xchg
mov
mov
sub
pop
pop
sub
filds
fs
fmulp
out
or
add
push
adc
les
pop
add
test
in
push
xchg
divl
lret
push
inc
into
xchg
cmp
sbb
ljmp
es
push
push
adc
insl
mov
int3
cwtl
ds
out
inc
xor
xchg
lock
andb
xchg
cmp
mov
jno
pop
mov
pusha
push
dec
loope
and
mov
mov
cmp
cld
jle
mov
into
dec
daa
cltd
test
push
cmp
push
jmp
jl
push
push
push
fucomip
inc
inc
and
rcrl
add
mov
inc
ds
xor
dec
or
dec
jno
mov
fs
clc
movsl
jno
inc
vshufps
mov
add
aam
mov
sbb
inc
cmp
rclb
cld
mov
lods
xlat
sbb
or
add
or
scas
and
jb
pop
clc
xchg
ror
push
lods
adc
inc
shl
lea
popf
adc
add
lods
lock
ss
xchg
sub
or
cld
dec
sub
flds
xor
xchg
aam
pop
and
mov
xor
pusha
or
sbb
push
movsb
sahf
rol
in
pop
xchg
loopne
xor
jl
push
adc
stc
test
mov
insb
cmp
rclb
insl
lret
mov
dec
inc
adc
rcrb
lcall
push
pop
and
insl
fsts
inc
fdiv
mov
popa
pusha
mov
insb
pop
std
add
pop
addr16
clc
pop
aam
in
cmpb
loop
mov
movsb
add
ljmp
jo
lods
call
mov
jnp
loopne
lods
mov
xchg
sbbb
pop
adc
mov
movsb
inc
das
or
pop
loopne
adc
aaa
mov
nop
jp
jne
jo
loope
subl
cmp
jo
dec
push
mov
xchg
pop
cmp
push
sbb
dec
loopne
mov
mov
rol
sahf
fisttpll
add
icebp
or
pop
xchg
hlt
adc
add
or
sti
mov
or
fsubs
mov
inc
xchg
inc
xor
jne
enter
or
push
mov
xor
cmp
cmp
arpl
jle
mov
hlt
mov
sub
sub
enter
sub
pop
sbb
push
sub
in
and
pop
sbb
outsl
push
inc
pop
xor
sbb
aad
ljmp
inc
jbe
fsts
xor
gs
rolb
push
or
push
adc
jno
jne
loop
adc
dec
imul
hlt
dec
sbb
sub
sbb
jo
pop
stos
cmpsb
aad
sbb
into
test
xchg
fmull
cltd
js
scas
cmp
sub
mov
adc
cmp
in
push
fiadds
aam
enter
add
push
cmp
icebp
inc
pop
ds
and
and
out
and
test
fstps
movl
mov
push
mov
and
jne
add
add
lret
jbe
push
pop
adcb
sub
add
jne
jb
aam
xor
lea
jns
push
and
fsubrs
jp
aaa
add
xchg
sub
dec
sar
dec
cmp
or
movsl
xor
push
push
adc
push
xchg
imul
popa
and
mov
mov
push
and
sub
cli
outsb
lret
add
mov
adc
rcr
sbb
inc
mov
cmp
lock
jo
pop
cmp
cmpsl
sub
ja
push
add
jo
sbb
add
xor
and
pop
cmp
xchg
ss
mov
or
push
cmp
andb
inc
push
jo
jns
aam
cmc
inc
adc
add
push
dec
xchg
sub
and
call
das
call
addl
sbbb
push
add
nop
xchg
sbb
jmp
ss
mov
popa
movb
repnz
insb
sbbl
add
lods
inc
hlt
xchg
adc
pushf
int3
call
out
mov
add
sub
or
ficompl
push
scas
xchg
xchg
inc
xchg
mov
sbb
push
push
shll
xchg
jne
adcl
sbb
movsl
loope
cltd
mov
into
movsb
les
ss
adc
fs
or
lock
sti
sub
push
mov
js
sub
sbb
add
xchg
or
adc
or
push
movsb
xchg
call
or
add
dec
mov
or
xchg
push
dec
enter
xchg
call
mov
inc
and
dec
pop
push
push
shlb
mov
aas
out
sbb
icebp
xor
xlat
and
or
xchg
or
adc
repnz
ss
loopne
jmp
sbb
icebp
and
hlt
sub
mov
repnz
pushf
cli
lcall
pop
daa
add
mov
stos
cltd
cmp
pop
xor
shl
mov
popa
inc
cmp
dec
ljmp
xchg
mov
and
adcb
js
xor
test
mov
adc
cli
xchg
dec
xchg
loopne
or
jne
out
jno
pushf
adc
xchg
push
mov
or
push
js
inc
or
cmpsb
cmp
or
int3
repnz
dec
add
add
pop
es
aam
dec
jle
mov
stos
pusha
mov
push
sub
push
fucomp
sub
sub
mov
push
push
sbb
loopne
cmp
push
mov
pop
mov
jl,pt
lret
mov
sub
push
bswap
mov
inc
adc
rclb
mov
andl
pop
dec
iret
adc
outsb
mov
pop
mov
and
or
push
les
clc
add
adc
dec
xorb
jno
mov
or
jg
call
lock
out
mov
jns
sbb
test
in
add
add
xchg
add
xchg
or
popa
or
sbb
cwtl
aas
orb
lea
xchg
mov
cmp
or
es
adc
or
std
fisubrl
push
mov
pop
xchg
cmp
lock
jecxz
mov
pushl
inc
aaa
add
stos
push
adc
ss
ret
mov
sub
sub
and
jne
sbb
in
xor
push
arpl
aad
xchg
add
mov
push
lock
mov
add
loopne
sarb
stos
clc
ljmp
push
lea
add
mov
ret
in
and
push
mov
cmp
roll
inc
xlat
adc
aaa
pop
call
pop
sbb
es
ret
in
mov
popa
xor
divl
xchg
sub
mov
dec
xor
popa
xor
sub
lock
dec
add
notb
inc
add
sbb
nop
mov
xorl
fs
cmpsb
push
and
aad
push
hlt
sub
cmc
jg
add
mov
and
cmp
jne
repz
sbb
cwtl
sub
dec
stos
ss
icebp
fldt
fucom
or
subl
xlat
aaa
adc
cmpsb
test
rclb
pop
lods
stos
test
inc
sub
outsl
in
or
and
xadd
sbb
xchg
movsl
lret
xor
sbb
sub
arpl
push
cli
dec
xchg
call
shlb
and
stos
loopne
cmpl
fiaddl
orl
clc
sbb
adc
dec
xchg
sub
std
pop
out
mov
sub
pop
add
xchg
lock
xchg
stos
push
and
enter
mov
inc
out
and
mov
xlat
jp
pop
xchg
les
mov
mov
xorb
and
rolb
jg
jae
out
xor
stc
or
cld
xor
fsub
mov
adc
jg
xchg
cmp
into
mov
rcr
mov
sbb
cmp
or
hlt
pop
xchg
push
and
enter
jo
loop
fwait
mov
ss
inc
lods
sbbl
clc
xor
xchg
adc
cld
ds
sbb
add
imul
imul
sub
cmp
dec
add
dec
or
add
das
loopne
add
fnstcw
push
scas
loopne
and
add
dec
and
ret
popf
test
or
xchg
jno
jnp
sbb
icebp
mov
inc
fsubl
mov
push
pop
push
lods
pusha
and
push
movsb
test
orb
pop
loop
xor
lods
mov
test
mov
rcll
pop
xchg
lea
fadds
inc
push
push
sbb
adc
add
pop
jo
xor
push
out
inc
dec
cmp
mov
test
daa
cwtl
xorb
cmp
cmp
iret
xchg
cld
add
add
mov
sahf
and
loope
movsl
add
sub
test
pop
inc
mov
add
sbb
mov
push
inc
jmp
and
cmp
and
mov
lods
mov
xchg
mov
add
inc
push
xor
lcall
mov
cmpsb
xchg
xor
xor
out
into
ret
rcr
daa
push
rorl
sbb
jle
pop
jp
add
and
and
enter
pusha
pop
cmp
xor
loopne
loop
inc
mov
aaa
ret
add
lods
es
or
mov
and
mov
dec
rorl
cli
adc
arpl
add
push
push
adc
or
incb
aaa
lock
inc
mov
popf
adc
lret
bound
inc
dec
mov
lock
insb
sub
mov
xchg
mov
sub
fisubl
inc
cmp
and
xchg
push
push
add
adcb
add
inc
or
sarb
imul
mov
dec
mov
rol
add
sbb
packsswb
mov
outsl
jns
sbb
push
inc
jp
lea
sbb
dec
rclb
push
gs
popf
popf
push
je
add
push
sub
or
cwtl
cmpsl
pop
popa
push
or
fsubrs
bound
lsl
lods
mov
dec
mov
loope
push
sub
mov
cwtl
jno
inc
ss
mov
out
mov
push
mov
lods
pusha
movsl
mov
mov
sub
lret
test
push
and
inc
nop
push
mov
jbe
das
sbb
push
xchg
mov
xor
pop
xor
jmp
dec
jo,pn
jb
fs
fmuls
xor
mov
or
and
pop
rcrb
dec
push
mov
mov
push
sub
nop
dec
jle
sti
xor
loope
adc
add
and
or
push
xchg
sub
or
ret
sahf
xor
add
jl
bound
mov
sahf
sbb
adc
imul
add
and
mov
sbb
xchg
aaa
dec
imul
jp
out
into
sbb
lock
xor
xchg
sub
dec
bound
stos
and
add
push
ret
loop
test
or
push
jp
leave
shll
inc
cmp
mov
mov
add
mov
jo
mov
sbb
pusha
add
icebp
add
test
push
daa
mov
or
mov
cwtl
xor
imul
cmp
push
cmp
inc
jo
cmp
inc
mov
xchg
adc
out
into
or
fs
mov
mov
mov
loopne
dec
loopne
adc
lods
pop
inc
and
daa
sbb
ss
sbb
ljmp
or
jno
xchg
add
imul
clc
sub
shlb
cmp
or
add
pop
stos
jns
mov
mov
loope
js
dec
ss
arpl
ljmp
cmp
pop
xor
cmp
ja
cmpsb
add
adc
lea
mov
pop
add
call
and
jp
xorb
inc
mov
mov
jne
push
movb
push
push
xchg
xchg
test
inc
add
or
pop
dec
pusha
or
sbb
inc
pop
repnz
aaa
mov
lea
sbb
in
jno
bound
pusha
mov
push
ror
ret
ret
lods
xchg
dec
mov
arpl
pusha
test
or
pushf
dec
js
push
bound
int
scas
inc
pop
mov
icebp
adc
popf
pop
outsb
scas
lcall
mov
mov
cmp
sbb
sub
jecxz
sbb
popf
rorb
cmp
into
jp
mov
dec
jno
xchg
xchg
shll
jo
dec
dec
push
ret
dec
pusha
push
or
mov
xchg
add
in
loopne
js
cmp
pop
fistps
je
daa
fmulp
fmul
cmp
ficoml
sub
jp
fstpl
ret
dec
and
pushf
push
je
imul
xchg
cltd
and
pop
iret
inc
add
dec
cmp
push
mov
add
push
mov
mov
pop
or
push
rcl
mov
adc
pop
aam
xor
jp
cmpsl
mov
xchg
ret
scas
mov
jmp
pop
ljmp
xor
lock
test
subb
pushf
orl
xchg
movsb
xor
xchg
and
cmp
arpl
data16
and
xor
mov
push
cmp
mov
pop
add
es
popf
xchg
fidivl
out
iret
adc
push
clc
decl
push
push
mov
pop
imul
movsl
call
fwait
cld
pushf
idivb
mov
mov
imul
push
push
mov
sbb
das
xor
cmp
and
jae
pop
inc
mov
xor
pop
dec
es
pop
adc
nop
loopne
xor
adc
movsl
dec
outsb
mov
in
sbb
pop
rol
dec
push
enter
rol
sub
mov
add
xchg
cmp
int3
fdivs
insb
inc
cwtl
jne
mov
inc
outsb
popf
push
push
pop
xchg
xchg
adc
xchg
sbb
sbb
xchg
data16
add
mov
mov
cmp
insb
movsb
mov
push
xor
sub
xchg
inc
xchg
add
xchg
inc
cwtl
xchg
or
cmp
cmp
daa
jecxz
les
lods
sahf
or
mov
lods
mov
mov
xor
dec
lock
rolb
enter
lods
xchg
adc
test
pop
or
jp
mov
daa
jno
in
jbe
add
pop
mov
push
ss
sub
jno
sbb
sbb
lea
repz
pop
mov
cmpsl
ret
pop
ret
push
pusha
mov
mov
and
push
sbb
aam
jmp
sub
les
fsubrs
jp
in
or
or
and
popa
mov
fsubrs
sub
cmp
add
and
push
push
jmp
push
or
dec
sbb
ret
call
and
insl
jl
xor
lret
lods
sbbl
stc
or
sbb
push
mov
dec
shlb
int3
or
pop
lcall
shlb
rolb
lods
sub
or
ss
jmp
pushf
add
xchg
pop
jmp
test
sub
aam
cwtl
mov
add
ljmp
mov
and
add
mov
mov
aam
pop
adc
mov
jo
or
outsb
shlb
mov
cmc
les
orb
jle
and
ficomps
push
fs
xor
ljmp
aaa
sbb
add
add
gs
insb
in
or
movsb
ss
sbb
fwait
jb,pn
rcr
and
push
and
jp
jp
js
xchg
xor
pop
jge
dec
pop
cwtl
add
fadds
add
scas
dec
int
or
loopne
rcll
int3
int3
pop
cwtl
les
int3
jo
xchg
aam
fisttps
mulb
popa
popf
push
repz
ret
xor
pop
mov
mov
adc
shlb
add
sub
add
jo
pop
test
sub
and
add
mov
sub
jle
jecxz
add
pusha
push
add
dec
dec
or
xor
in
or
and
mov
pop
das
sbb
jnp
sub
jmp
mov
xor
shlb
loop
test
enter
xchg
xchg
push
sub
inc
daa
data16
loope
pushf
in
pusha
add
xchg
fimuls
adc
add
inc
or
mov
dec
mov
xchg
inc
mov
xchg
lock
mov
shrb
add
jb
inc
push
andl
es
addr16
mov
xchg
lea
pushf
lock
cmpsb
push
pop
imul
xchg
lcall
pop
mov
lret
add
push
out
loopne
pusha
jb
mov
lods
sbb
test
stos
push
inc
popa
and
jp
xor
aam
inc
pop
push
and
sbb
mov
xchg
xchg
xor
xchg
add
js
or
fadds
push
outsb
mov
push
push
inc
dec
add
xor
xchg
cmpsl
cmp
pushf
adc
stos
push
xor
mov
jmp
js
jo
xor
add
lods
insb
xor
sub
inc
pop
xchg
enter
lret
dec
es
sbb
pushf
xor
xorl
cmpsl
test
adcb
ret
or
push
out
aam
push
add
push
sbb
aas
insl
bound
fmuls
add
adc
fs
shrb
mov
xor
or
cs
xor
cmp
adcl
mov
clc
and
or
call
xchg
arpl
dec
data16
fsubs
push
cmp
mov
mov
push
pop
mov
pushf
adc
push
push
inc
popl
jo
push
cmp
mov
cwtl
mov
mov
jmp
enter
mov
js
in
ret
xchg
faddp
rorl
nop
lods
mov
shlb
fnsave
adc
or
dec
cmc
push
lret
mov
loopne
mov
sbb
cld
loopne
lock
je
loopne
orl
xchg
mov
cmc
and
push
and
bound
add
dec
xchg
xchg
cltd
mov
sbb
or
push
test
ret
push
in
movsb
xchg
xchg
or
popa
lret
inc
mov
cmpl
cwtl
or
ret
mov
add
sar
inc
loopne
and
cmp
je
inc
xor
push
and
push
or
dec
rorb
mov
inc
mov
fidivrs
xchg
sbb
inc
push
and
add
sub
popf
sub
test
dec
js
push
and
jne
sub
mov
out
jp
imul
andb
xchg
sbb
xor
inc
cli
js
dec
rolb
jl
std
loopne
pop
pop
pop
push
sub
push
push
outsl
loop
cmp
xor
test
bound
adc
shlb
xor
mov
cmp
subl
ror
sbb
or
arpl
jbe
data16
pusha
jb,pt
icebp
dec
or
pop
and
aas
mov
add
shl
ret
inc
cmp
repz
xchg
xorl
cmp
int3
cmp
mov
cmpsb
jne
in
movsl
sub
sbb
call
push
shll
or
pop
add
pop
push
ds
cmpsb
mov
adc
sbb
inc
mov
test
arpl
xchg
movsb
sbb
mov
mov
cld
adc
sbb
inc
lods
ja
sahf
add
xor
int3
xor
orb
xchg
movsb
xchg
shl
ljmp
loopne
iret
ljmp
add
adc
pusha
and
out
or
std
sbb
stos
addb
or
rclb
sbb
mov
pop
ds
xchg
dec
jle
add
add
jnp
push
cli
fmull
rcrb
pop
pop
cld
add
push
out
dec
adcb
cld
adc
lock
inc
stc
ljmp
adc
push
pop
orl
movsb
or
rol
xor
cmp
push
bound
call
jge
mov
pop
dec
or
call
mov
xchg
stos
cli
add
sbb
sbb
jecxz
ficomps
push
sub
and
test
insl
pusha
js
repz
sbb
mov
xchg
adc
pushf
add
test
aas
arpl
movsb
lods
std
xchg
xchg
in
adc
and
inc
jo
js
or
jg
add
mov
nopl
add
cltd
movsl
outsl
push
pop
dec
clc
fs
js
sub
insl
loop
mov
mov
cli
add
ret
in
adcb
dec
xchg
cmp
stos
jo
dec
scas
aaa
and
and
enter
fiadds
dec
movsb
xor
fsts
sbb
jp
push
pop
arpl
and
and
mov
add
sbb
out
rol
mov
ds
gs
inc
ficomps
push
push
loopne
jecxz
add
mov
sbb
subb
dec
hlt
mov
fidivs
fidivl
add
jmp
lcall
outsb
mov
adc
and
dec
outsb
lret
add
mov
mov
jbe
repnz
and
rcl
sub
mov
mov
repnz
js
jo
mov
lret
push
jp
mov
addb
rolb
insb
loop
pop
addr16
ret
adc
fucom
inc
adc
cld
loopne
sub
testb
popa
cmp
js
ss
into
adc
and
rcrb
rcl
shr
mov
fnstsw
push
xor
add
lock
jns
neg
lret
mov
and
cmp
inc
call
pop
push
aam
jne
popa
add
jbe
outsb
cmpsl
add
sbb
lods
repnz
push
loopne
jae
pop
ljmp
push
xlat
in
or
pop
sbbb
push
pushaw
stc
in
cs
pop
das
fimull
or
xchg
aad
cs
mov
and
mov
inc
stc
enter
xor
jnp
mov
and
or
jp
push
rclb
sbb
popa
add
ret
rcr
pop
dec
cmpsb
push
cs
test
cmp
enter
sub
leave
mov
or
les
fimuls
or
xor
dec
outsb
popa
movsl
gs
cmpsb
dec
insb
sub
add
ret
subl
js
sbb
adc
sub
and
loop
add
loop
cwtl
mov
xchg
and
cmp
popa
lock
xor
mov
inc
xchg
add
fs
or
jmp
imul
inc
dec
cmpb
sub
pushf
xchg
mov
jae
or
andb
or
mov
push
shl
je
icebp
adc
pop
push
hlt
sbb
insb
or
sub
repnz
cmp
ds
xchg
cld
pop
adc
or
ret
fadds
sbb
cmp
call
mov
mov
cld
mov
xchg
sbb
js
sub
ret
pusha
inc
cmp
inc
loop
testb
jg
in
sbb
jb
int3
mov
addb
push
mov
pushl
popl
ljmp
mov
ljmp
xlat
pop
xchg
sahf
cmp
sbb
xchg
pop
lods
and
cmpsl
add
js
jp
aad
bound
ror
ret
nop
cmp
push
out
lods
sub
mov
push
imul
stos
lods
ret
je
popf
mov
mov
xchg
or
push
lcall
enter
xchg
lods
subl
push
addb
mov
push
in
pushf
out
stos
test
sub
pop
pusha
dec
xchg
jne
test
push
addr16
cmp
pop
mov
push
mov
or
sub
inc
push
leave
fisubs
push
ror
hlt
mov
or
inc
add
push
mov
or
and
stos
pop
call
dec
xchg
inc
arpl
and
mov
mov
adcb
and
inc
ficoms
mov
movsl
test
ffree
xchg
fldcw
and
push
push
push
xor
arpl
push
mov
xchg
loopne
lret
cmp
cmpb
push
or
add
cli
mov
cmp
push
addb
into
arpl
sbb
or
xchg
adc
push
xchg
sbb
mov
add
sub
inc
sbb
sub
lods
lcall
int3
stos
dec
loopne
or
pop
je
xor
imul
pop
ret
inc
mov
cmpsb
test
sti
mov
call
lret
add
push
ljmp
jo
insb
movsb
fimull
xlat
ret
clc
shlb
lret
sbb
jbe
in
inc
push
nop
popa
aam
mov
loop
and
sub
fidivrl
enter
inc
inc
sarl
aam
adc
inc
xchg
mov
mov
sub
call
ds
cli
mov
fs
sub
sbb
arpl
push
adc
es
pop
mov
rclb
xor
or
xor
push
add
insl
addr16
ss
lahf
pop
fmulp
push
or
dec
sbb
jp
pop
lret
test
mov
aam
cltd
lock
jb
jbe
jecxz
out
mov
xchg
sbb
push
ljmp
imul
sbb
mov
stos
daa
add
addl
shlb
gs
pop
mov
test
adc
mov
ljmp
xorb
loop
cli
pop
push
dec
jecxz
dec
inc
or
jmp
dec
fsubrs
mov
enter
mov
dec
out
loopne
cmp
or
or
lods
push
and
sahf
mov
enter
jecxz
fsubrs
mov
mov
xorb
xor
xchg
jns
je
lock
sub
sbb
xchg
outsb
sbb
pop
push
enter
hlt
lock
ja
pop
xchg
fs
or
sbb
in
jle
ljmp
inc
stos
sub
lods
outsl
mov
mov
push
sar
mov
outsl
loope
scas
lahf
popf
cs
mov
or
cmp
xor
mov
mov
dec
xchg
push
push
push
add
call
punpcklwd
push
shlb
push
stos
sub
daa
jo
outsb
and
push
test
loopne
cwtl
enter
or
mov
cmp
arpl
pushf
fmuls
arpl
dec
and
out
insl
es
mov
sbb
push
test
leave
loope
and
lods
popa
dec
loopne
cli
cwtl
push
mov
jmp
adc
or
mov
dec
or
fcoms
popf
and
loop
addr16
pushf
into
sub
inc
pop
inc
dec
add
sub
je
xchg
sbb
ljmp
scas
adc
out
idiv
push
pop
lods
push
inc
cmp
jp
sbb
mov
inc
mov
xor
cmp
and
nop
xchg
jns
xor
jno
cmpb
adc
jbe
mov
jne
xchg
in
daa
mov
lret
push
lock
lods
add
shl
jno
call
outsb
adc
rol
bound
sbb
lods
mov
flds
out
adc
adcl
xchg
xchg
enter
cmp
incb
fwait
call
xchg
test
mov
mov
mov
aam
push
insl
jle
sbb
fiadds
hlt
cmp
pop
xor
imul
pop
rol
and
iret
rcrb
jle
jne
mov
dec
inc
sbbb
cmpsb
pop
loop
stos
push
js
sub
into
pop
xchg
cs
subb
push
jno
fiadds
test
sbb
outsb
ss
add
or
xchg
jnp
push
mov
pop
mov
adc
test
and
daa
in
fisttpl
daa
jmp
pop
cld
movsb
jl
and
loop
sbb
cmp
mov
dec
cli
mov
insb
dec
dec
mov
mov
mov
das
outsb
mov
jo
mov
popa
xor
pop
xor
in
push
push
mov
sahf
or
cmp
stos
add
sub
jnp
inc
cmp
or
inc
in
fldl
es
mov
cmp
mov
dec
insb
xchg
add
subb
adc
je
loope
js
jno
arpl
mov
pushf
cmp
mov
shlb
cld
lcall
and
lock
pusha
ret
ret
sub
imul
xor
jo
ret
mov
sbb
mov
xchg
repnz
daa
cmc
dec
xor
or
or
inc
je
rcl
sbb
sbb
xor
lds
xor
leave
andl
loop
addb
or
and
and
shlb
cmp
jb
lods
inc
add
pop
flds
dec
jbe
dec
mov
call
dec
repz
jmp
aad
lock
inc
je
sbb
and
lods
rcrl
hlt
sbb
or
inc
add
dec
sbb
daa
addr16
xchg
sub
dec
or
mov
push
push
ret
sbb
jns
aaa
jne
lods
dec
dec
daa
push
pop
jecxz
cld
mov
sub
push
pushf
push
ljmp
shlb
cs
nop
add
jmp
adc
inc
cmp
sbb
dec
pop
push
fs
in
push
popf
div
jb
gs
xchg
mov
xchg
cmp
or
xor
shlb
shrb
or
pop
test
cmp
add
jns
cmp
stos
sub
ljmp
aam
aad
mov
mov
mov
mov
dec
mov
sub
les
nop
pusha
in
push
pop
es
mov
xorb
rorb
add
and
push
es
dec
js
pusha
in
adc
cmpsl
cmp
lds
sbb
mov
and
out
cmpsb
adc
and
or
pop
mov
and
adc
or
test
inc
add
push
sub
lods
insb
fs
or
add
sbb
xchg
add
and
adc
xchg
pop
cmp
pop
push
daa
mov
inc
jbe
ljmp
cbtw
pusha
lret
sbb
sbb
push
mov
pushf
orl
add
test
cmc
rorb
outsb
push
nop
adc
movsb
pushf
sub
mov
add
enter
ljmp
idivb
add
bound
loop
xor
dec
inc
je
add
or
pop
mov
mov
push
xor
test
add
mov
xor
xchg
outsb
xorl
mov
xor
add
push
and
fstp
and
xor
sub
and
and
mov
fiadds
cltd
fadds
outsb
loop
addb
or
xchg
rorb
xchg
out
sbb
ret
ret
xchg
xor
mov
loop
mov
mov
push
xchg
repnz
aas
gs
jno
cmp
xchg
movsl
cmpsl
add
mov
pop
pop
nop
loop
shlb
and
xchg
push
cmp
sub
lret
add
inc
nop
lret
mov
shrl
sub
xchg
sub
xlat
sbb
and
push
or
push
into
xor
mov
pusha
shlb
mov
jb
enter
dec
shll
mov
int3
jl
push
cli
pushf
movsb
push
adc
and
icebp
rcrl
push
inc
push
mov
mov
push
scas
jp
mov
sbbb
lret
enter
fs
lods
jno
je
push
mov
into
push
incb
fbstp
outsb
mov
ljmp
jbe
xchg
scas
pusha
out
adc
xor
or
ljmp
movsb
pushf
addl
hlt
outsb
nop
mov
mov
mov
mov
pushf
and
xor
ret
add
lds
inc
push
jo
cmp
inc
jecxz
xchg
aam
loop
je
lods
and
or
inc
jo
mov
add
inc
and
dec
and
cmp
mov
inc
and
add
pop
pop
adc
pshufw
xchg
mov
sub
enter
or
sub
or
ljmp
sbb
xchg
inc
mov
push
push
test
pop
cmc
jne
outsb
loop
jbe
lret
mov
and
pop
lock
mov
aas
lods
and
wbinvd
inc
sub
cltd
rcrb
pop
inc
or
mov
pop
pushf
gs
fmuls
push
idivb
pusha
xchg
push
cmp
xchg
subb
jno
adc
mov
mov
adc
out
jnp
xchg
push
fwait
stos
mov
xor
shl
mov
pop
dec
dec
pushf
test
lock
js
dec
dec
sub
inc
mov
or
inc
movsb
sahf
or
loop
loopne
nop
or
lret
cs
ljmp
ret
add
sub
sub
ret
loop
sbb
pusha
push
les
sub
xor
add
mov
mov
or
enter
testb
mov
or
mov
add
cmp
lret
xor
lods
les
test
lods
mov
adc
push
aam
sbb
orb
jno
lods
pop
loopne
push
cmp
pusha
call
push
mov
nop
add
mov
mov
xchg
mov
lods
inc
aam
sbb
jns
mov
inc
push
pushf
pop
sbb
or
cmp
mov
mov
movsb
fisubs
and
mov
inc
sbb
or
das
sbb
sbb
clc
jnp
je
ljmp
xchg
gs
cmp
dec
mov
es
push
adc
shlb
ret
popf
les
in
pop
leave
ret
cwtl
sbb
push
cmpsl
xchg
add
mov
jns
push
lret
or
sbb
loope
loop
loopne
and
mov
or
mov
sbb
rcrl
insb
pop
or
cmpsl
add
push
arpl
icebp
xlat
in
fcompl
jns
jp
fcomip
add
jb
add
sub
cmp
fmuls
mov
ret
cmc
sub
adc
adc
sbb
add
cmp
enter
and
js
jne
inc
into
adcb
adc
nop
into
inc
add
insb
dec
leave
ret
test
clc
pushl
xchg
adc
mov
sahf
lcall
sbb
sbb
mov
xor
pop
pop
xor
cli
jns
add
rclb
js
mov
icebp
sahf
xor
ret
mov
sbb
subb
dec
cmp
imul
jmp
js
push
jb
and
adc
fdivs
inc
faddl
mov
clc
mov
mov
and
pop
mov
pop
fadds
fnsave
mov
lods
test
imul
nop
pop
jb
jl
loopne
daa
hlt
mov
pushf
out
data16
adc
lret
jno
xchg
mov
mov
fstpl
xor
adc
lock
mov
lret
push
rcrb
in
in
inc
push
add
mov
xchg
add
sbb
jge
lret
dec
mov
dec
cmp
out
ret
xor
test
addb
rolb
jo
test
xorb
hlt
call
and
in
mov
adc
xchg
cs
ss
sub
stos
or
loopne
add
inc
adcb
mov
jnp
pushf
rorb
adc
xor
or
or
add
addl
sbbb
mov
or
daa
mov
sbb
fiaddl
sbb
dec
ja
popl
fs
inc
add
jae
inc
xchg
in
fsts
cltd
mov
cmp
movsb
cmp
scas
scas
push
or
bnd
lods
aad
rclb
push
pop
xchg
loopne
int3
push
loope
es
sbb
dec
mov
adc
dec
cmp
and
push
xlat
or
das
clc
test
movsl
das
mov
xor
pop
divb
xor
orl
jmp
orb
add
ljmp
dec
loopne
test
push
hlt
xchg
dec
mov
sbb
pop
lods
js
dec
leave
lock
adc
es
dec
lods
rol
lods
test
dec
cli
daa
mov
sbb
inc
rclb
cmp
cwtl
mov
ret
add
fdivrl
mov
push
mov
mov
loopne
jp
shr
and
sahf
push
mov
adc
aaa
push
insb
fs
pop
mov
or
das
sub
pusha
in
dec
or
and
pop
dec
nop
pop
mov
jb
pop
xchg
nop
adc
testb
inc
add
clc
shlb
push
mov
enter
xchg
push
imul
push
popa
rcrl
adc
or
lods
cmpsb
mov
insb
push
loope
adc
negb
lahf
mov
push
pop
dec
addr16
test
std
push
sbb
pop
lods
adc
xchg
cmpsl
cs
sbb
jo
call
rorb
or
dec
ret
inc
adcb
aas
std
pop
cmc
pop
fistpll
cli
mov
push
stc
inc
cmpsb
jo
pushf
lods
xchg
fsubrl
mov
push
or
dec
aam
pusha
dec
xchg
mov
dec
stos
shrl
aad
rcrl
testb
fadd
cld
ljmp
gs
loope
rolb
inc
lcall
fidivl
rolb
adcl
dec
inc
adc
push
push
shlb
fsub
push
cld
enter
ss
pushf
clc
in
cld
roll
mov
mov
xor
mov
lods
xchg
sbb
fmul
fcmovu
and
cwtl
and
popa
arpl
sbb
pop
insl
les
push
int3
push
or
mov
into
dec
ljmp
pusha
jo
out
jl
mov
xor
xchg
int3
or
mov
fdivs
xor
ss
pushf
jp
cmp
in
dec
push
push
push
mov
mov
leave
movl
fsubrl
iret
push
out
adc
add
fadd
xor
enter
xor
fcmovbe
sbb
jl
imul
push
pusha
fiaddl
pop
shlb
jno
loop
push
bound
les
in
enter
popf
shlb
push
cmp
les
inc
or
pop
sarl
fcompl
inc
push
rolb
xor
fsts
lea
mov
mov
repnz
jmp
and
pop
bound
adc
pop
fsubrl
enter
jb
andl
fdivrl
insl
push
inc
popa
addl
fdivp
add
dec
jl
outsb
dec
mov
outsb
xor
or
xor
mov
pop
mov
and
pop
int3
adc
push
mov
pop
and
je
fcmovbe
sub
xchg
jb
and
adc
add
sbb
dec
push
sub
test
sbb
inc
loopne
jl
movsb
and
mov
push
jnp
mov
pop
cltd
adc
pop
inc
jbe
enter
cmp
es
xlat
xor
and
xchg
push
xchg
sub
adc
dec
mov
xor
dec
add
sbb
gs
add
mov
ror
arpl
dec
adc
imul
enter
xor
sahf
shl
in
xor
push
out
xor
jl
add
popa
insl
enter
pop
push
and
test
jo
pop
loopne
pop
rol
sbb
sub
cld
sub
or
sbb
pushf
inc
add
test
out
fs
xor
push
movsl
mov
test
push
jp
sahf
xchg
das
loop
mov
sub
or
sbb
sub
cmpb
sub
dec
xchg
cmp
mov
jle
adc
lods
mov
leave
push
dec
je
or
jp
dec
ljmp
lock
cs
mov
push
pop
inc
add
jp
and
data16
and
movsb
mov
sbb
ja
out
xchg
pushf
xlat
push
or
sti
out
sqrtps
data16
popa
call
sarb
pop
cmp
pop
sbb
pop
cmp
test
ret
ljmp
cwtl
mov
outsb
fnstcw
cmp
data16
sbb
cmp
ret
divb
mov
repnz
jmp
sbb
jae
imul
cmp
mov
orb
mov
int3
clc
test
jl
inc
mov
outsl
sbb
jmp
xchg
adc
xor
sbb
mov
xchg
aaa
pusha
fcomps
mov
mov
and
sub
or
xor
ret
icebp
mov
inc
mov
xchg
and
mov
pusha
inc
out
call
pop
insb
pushf
jl
pop
shlb
push
fimull
into
outsl
sbb
cli
mov
or
imul
jp
mov
jo
into
ljmp
jo
mov
mov
push
fnstcw
dec
aam
outsb
loop
enter
push
mov
pop
sbb
mov
jbe
mov
sub
cwtl
test
add
popa
or
xchg
ret
mov
das
rcrb
push
sbb
jno
add
or
sbbl
and
add
ror
push
das
and
cmpb
jp
jo
lock
and
adc
cmpsb
jb
push
xor
jo
addl
add
bound
mov
mov
pop
adc
dec
leave
sub
xchg
cmc
push
sbb
push
aam
leave
add
add
mov
cmpsl
xor
loopne
pop
rorb
or
rol
inc
fnsave
sahf
hlt
inc
or
cwtl
and
pop
add
pop
adc
imul
adc
mov
jp
test
fs
faddl
pop
dec
adcl
cli
mov
xor
push
lods
aaa
lods
movsl
inc
jb
aaa
mov
sub
ficompl
sbbl
dec
pushf
jg
icebp
xor
pop
enter
push
dec
jae
mov
xchg
sbb
cmp
fisubs
enter
loope
mov
sub
inc
inc
stos
jmp
push
sahf
enter
mov
inc
sub
stos
dec
ret
pop
cmp
adc
sbb
push
cmp
xor
add
xchg
fisubrs
pop
test
mov
pop
orb
shrb
cmp
int3
ljmp
movsl
mov
mov
rorb
sbb
enter
pop
pusha
imul
mov
fsubs
dec
lock
icebp
nop
in
outsl
test
inc
and
or
xchg
pop
fistl
cmp
sbb
add
xorb
movl
scas
call
lods
adc
cmp
lret
fst
aam
add
fisttpll
add
inc
mov
or
xor
ret
shl
pop
mov
gs
mov
ds
enter
mov
push
leave
mov
cwtl
or
cmpsl
or
or
lret
sbb
mov
sbb
pushf
inc
and
xor
int3
and
sub
popf
and
cli
add
mov
and
repnz
xor
mov
loopw
xchg
jo
loope
add
push
cmpsl
mov
enter
mov
cmp
jp
push
adc
dec
es
xor
inc
fcoms
mov
stos
xchg
or
movsb
inc
testb
sub
adc
test
leave
cmp
lcall
mov
adc
mov
xchg
sarb
pop
nop
rorb
sbb
sbb
addb
inc
and
rolb
les
inc
mov
movsl
mov
adc
sub
jns
cmp
scas
cmp
mov
sbb
sbb
test
outsb
repnz
xor
popf
push
adc
jl
shll
mov
push
fiadds
cmp
and
or
sbb
mov
mov
sub
or
pop
inc
and
mov
sarl
dec
add
adc
cmp
fs
loopne
fs
rcrl
into
push
push
sub
rorl
mov
cmpps
shlb
in
fistpll
push
mov
xor
mov
sub
jnp
insb
int3
mov
loopne
and
popf
mov
outsb
mov
out
mov
xchg
add
xchg
lret
test
adc
push
aaa
sbb
adc
in
add
xchg
addb
rclb
lret
ret
stos
push
sub
inc
lret
js
scas
adcb
push
lock
or
rclb
sbb
mov
fwait
dec
movsb
sbb
mov
adcb
aam
fsubs
hlt
xchg
pop
test
dec
shlb
cmp
and
dec
aam
sbb
push
pushl
push
hlt
dec
sub
inc
test
add
mov
push
shrb
mov
adc
cmpb
test
sbb
pop
pop
mov
andb
loop
enter
sbb
jp
jns
and
push
xchg
aam
add
stos
adc
or
phsubd
xchg
shl
sbb
add
mov
sbb
mov
enter
sbb
push
sub
push
test
sub
xor
lret
loopne
or
loop
js
fs
and
push
and
shrb
dec
sub
xlat
adc
xor
push
call
push
or
addb
dec
js
adcl
or
movsl
jne
xor
lock
xchg
xor
aam
push
sahf
push
loope
add
je
enter
arpl
and
gs
shl
inc
xor
jecxz
inc
fcmovne
dec
leave
push
push
ss
push
andl
adc
cmpsl
bound
sbb
pop
lock
adc
loopne
out
xchg
fadds
jno
xor
push
mov
xchg
nop
in
adc
jo
xchg
adc
pushf
lods
mov
adc
bound
imul
cmpsl
xchg
adc
or
icebp
jp
xor
mov
pusha
sub
dec
xchg
xlat
xchg
sbb
leave
test
inc
pop
pop
rep
xchg
push
cli
xchg
mov
sbb
jle
xchg
popf
insb
sub
sub
aaa
addb
nop
sahf
jo
fadds
gs
inc
loop
lock
dec
adc
mov
xchg
mov
inc
xchg
gs
lods
and
jmp
mov
enter
mov
push
adc
sub
movsl
aam
mov
adc
inc
pushf
push
pop
sbb
xor
cmp
inc
mov
push
or
sbb
and
push
ret
icebp
cmp
les
das
xchg
js
dec
jbe
fs
adc
mov
ret
jmp
or
mov
mov
xor
cli
jb
cmpb
add
add
cmpsb
push
push
mov
fldpi
adc
repnz
aad
pop
dec
add
xor
xor
movsb
arpl
push
pop
js
inc
int3
inc
js
xchg
inc
into
mov
sub
jb
rorb
or
mov
hlt
xchg
fld
mov
aam
push
sbb
jle
loopne
leave
movsl
adc
les
int3
xor
or
mov
inc
sbb
insb
mov
aad
and
cmp
jbe
xor
mov
fmull
pop
ljmp
jo
add
xchg
inc
popf
movsl
mov
inc
orl
arpl
add
es
and
cmp
sbb
add
dec
stos
je
sub
rsqrtps
in
loopne
nop
sbb
jo
inc
cmova
pop
movsb
push
add
xor
aad
shr
in
repnz
or
lret
xchg
inc
add
sbb
inc
popa
je
pop
push
dec
or
loope
xor
test
mov
nop
xor
inc
adc
aaa
pushf
inc
into
sbb
out
les
add
loope
inc
cwtl
or
jo
jge
pop
addl
rcll
mov
cmp
adc
bound
mov
sarb
ljmp
cmp
sbb
lods
ret
adc
lea
repnz
cmp
mov
lock
and
push
pop
mov
cmp
dec
jb
nop
and
pop
ret
dec
dec
or
fimuls
or
mov
add
iret
insb
dec
pop
cmp
jle
push
loope
movsb
xor
ss
pop
lret
idivb
cmp
adc
je
ficoms
lret
push
icebp
sub
push
test
fcompp
jo
dec
outsl
pop
xchg
mov
mov
mov
xorl
popf
mov
test
mov
clc
ja
mov
adc
fucomp
aam
mov
adc
and
mov
loope
fisubrl
push
add
push
dec
sarb
jmp
add
enter
cmp
or
fcom
pop
and
scas
fsubs
push
add
clc
add
add
addr16
sbb
fists
adc
les
push
inc
add
inc
rorb
sbb
push
mov
or
jo
add
movsl
and
inc
mov
or
into
and
les
je
sar
mov
push
dec
dec
arpl
lret
push
nop
xchg
pop
sbb
and
add
add
sbb
mov
hlt
js
push
lods
cmp
faddl
add
into
inc
push
dec
mov
es
adc
inc
inc
and
mov
cmp
lea
test
add
sbb
and
pushf
add
add
push
cmp
push
cmp
rolb
mov
ret
inc
sbb
xchg
inc
dec
lods
aad
test
push
dec
xchg
daa
adc
idivb
fldl
fsubrl
cmpl
add
push
in
add
or
rcl
add
or
addr16
loopne
out
mov
rolb
nop
pushf
sub
test
xchg
call
and
cmc
andb
insb
imul
addb
xchg
push
inc
fnstcw
push
xchg
xchg
mov
fcomi
xor
das
add
push
mov
and
sbb
sub
adc
test
push
push
or
xor
loopne
dec
popf
sbb
ljmp
cmc
or
push
xchg
lock
cltd
outsw
cmp
and
pop
rcrb
shlb
pop
inc
cmp
adcb
inc
or
int
pop
pop
mov
adc
pop
mov
inc
push
jb
and
xchg
add
and
mov
add
lret
add
adc
push
fsubl
bound
dec
or
xor
mov
push
and
jge
adc
cmp
jo
popa
aad
xor
mov
ljmp
das
sub
mov
inc
inc
or
mov
js
repnz
mov
test
push
cmpsb
sub
dec
xor
inc
and
add
sub
mov
mov
test
jbe
enter
cmp
fcom
cmp
push
cmpsb
adc
popf
sub
into
mov
divb
and
mov
xor
ficoml
pop
in
adc
or
xor
add
test
cmc
loop
hlt
mov
scas
sahf
cmpsl
jo
imul
adc
mov
mov
pop
loopne
jecxz
xor
je
addb
movsb
lock
or
xchg
mov
inc
sub
mov
mov
lods
hlt
pushf
xchg
fsubs
push
daa
leave
push
add
es
loopne
cmp
push
pop
rolb
jne
push
sbb
sub
cmp
push
sub
daa
add
mov
pusha
insl
pushf
insb
rorl
pop
sub
shll
pop
cmp
add
sar
xor
and
sbb
push
rorb
adc
popa
cmp
imul
call
enter
pop
test
into
lcall
call
rcr
xchg
or
add
les
sahf
and
fmuls
repnz
pop
loope
je
add
flds
test
mov
or
jns
xchg
or
push
loop
negb
mov
add
jl
sub
hlt
incl
pop
bound
xorl
jecxz
inc
nop
mov
adcl
int3
mov
outsb
into
incb
les
sbb
and
dec
cld
hlt
arpl
arpl
sbb
add
xor
add
outsb
and
mov
enter
sbb
dec
outsb
ljmp
iret
and
into
mov
mov
fisubrs
pop
out
dec
mov
xor
ret
ret
movsb
cli
and
ret
pop
jp
stc
jbe
movsl
rorb
and
sbb
fdivs
jno
stos
aam
inc
arpl
ds
mov
mov
stos
es
pop
lock
inc
rolb
lods
aad
hlt
mov
inc
push
shr
add
push
ss
gs
jmp
add
lods
adc
and
push
das
mov
mov
add
push
pop
je
fs
fstpt
hlt
mov
pop
or
and
mov
mov
push
rcll
clc
cmp
shlb
dec
cmpsl
push
sbb
repz
mov
loop
shl
inc
cld
add
sub
add
jns
pop
sbb
push
sti
lods
dec
lea
test
sub
add
add
mov
imul
mov
int3
roll
dec
jbe
or
arpl
xchg
xor
rcl
jns
jp
push
fadds
ret
cmp
or
and
or
adcl
daa
dec
js
xchg
fbstp
and
cmpsb
aam
int3
jecxz
inc
fimuls
enter
push
pop
lret
sub
mov
push
cmp
andl
in
mov
addl
push
into
sbb
test
inc
push
in
xor
test
and
js
into
daa
xor
test
aam
pop
push
adc
cmp
mov
dec
lods
push
jle
mov
mov
dec
fsub
into
sub
push
outsb
or
dec
xchg
dec
sub
pop
not
push
add
mov
int3
sahf
add
cmpsb
xor
je
xor
ficompl
pop
les
ljmp
sub
xchg
sar
or
cmp
mov
mov
mov
mov
sbb
inc
stos
inc
sbb
ror
int3
out
sub
pop
push
orb
aas
mov
enter
dec
sbb
movsl
and
shrb
inc
loop
mov
push
xchg
enter
xchg
lret
sbbb
cmp
ret
pop
insb
lods
outsb
and
sbb
and
adc
popa
insl
push
hlt
out
push
pop
roll
inc
insb
js
and
std
mov
sbb
sbb
cmp
inc
push
jne
out
push
fisubrl
push
and
xchg
rorb
mov
jne
adc
cmpsl
loope
sarl
or
adc
sbb
js
or
pop
rcll
and
cli
jbe
pop
cmp
scas
cmp
mov
jae
inc
cmpsb
sub
sahf
out
mov
xchg
or
jmp
int3
adc
pop
sub
pushf
cmp
subb
loop
lock
lahf
cmp
ret
xchg
sbb
mov
adc
sbb
addb
addl
bound
insl
cmp
pop
addr16
into
dec
mov
lods
xor
mov
mov
xor
mov
mov
push
rcr
or
push
inc
cmp
push
push
mov
inc
in
xchg
pop
hlt
rorb
add
or
dec
add
ret
fs
sbb
dec
ljmp
mov
inc
fdivs
adcb
jp
or
push
pslld
mov
or
inc
add
shlb
xchg
mov
popa
xor
loop
or
pusha
adc
movsb
jl
rorl
sbb
adc
cmp
out
jo
jno
cwtl
adc
pop
xor
lcall
mov
repz
enter
mov
adc
scas
mov
mov
xchg
out
mov
mov
cmp
mov
stos
cmpsl
loopne
bndstx
jecxz
lods
lods
rolb
ud1
nop
dec
or
ljmp
rolb
add
lods
out
xchg
movsb
pusha
sub
mov
mov
or
cli
and
jp
lds
inc
sbb
jmp
mov
fs
mov
and
push
jmp
pushf
ret
sub
rolw
mov
xor
jb
jecxz
sbb
sub
shlb
push
adc
pop
or
leave
cli
movsb
lcall
cwtl
mov
pop
push
mov
add
mov
cmp
mov
xor
popa
sbbb
jbe
cmp
lock
dec
xor
mov
push
nop
dec
jo
sbb
int
xchg
xchg
xor
and
mov
push
or
mov
xchg
mov
mov
orb
dec
sub
xchg
imul
adc
xor
lods
insl
pop
jae
jmp
xchg
xchg
push
in
xor
mov
mov
inc
inc
jns
sbb
pushf
and
jmp
ret
or
push
mov
and
daa
jecxz
xor
dec
ss
or
out
push
inc
inc
sub
js
es
test
fs
dec
push
jo
popa
fsub
mov
jo
jle
xchg
and
cmpsl
nop
mov
test
rclb
mov
adc
loopne
mov
xchg
and
xchg
test
ret
mov
loope
or
jnp
mov
mov
inc
orb
call
sti
pushl
dec
and
xor
fistps
push
fstl
xor
mov
xor
sub
lods
sahf
xor
pop
mov
popa
imul
jnp
faddp
fwait
push
outsb
jge
pushf
push
add
xchg
shrl
pop
arpl
push
adc
cwtl
dec
inc
imul
arpl
or
and
popa
jne
mov
lcall
ret
test
fdivs
xchg
repnz
push
add
addr16
popa
sub
nop
es
pusha
fldl2t
imul
xorb
add
pop
int3
andb
test
inc
xorb
or
popa
gs
subb
or
dec
adc
dec
dec
aam
pop
cmp
jo
sbb
xchg
popa
gs
mov
rcll
icebp
sub
addb
sub
jnp
mov
sbb
dec
cmp
pusha
lods
mov
ret
push
push
shlb
inc
adcb
pop
pop
repnz
mov
sbb
not
mov
lods
inc
mov
loopne
add
psllq
xor
mov
cmp
and
fisubrs
adc
test
lock
or
push
pop
pusha
mov
xor
fiaddl
sub
les
les
stos
sbbl
test
sbb
mov
sbb
and
cmp
inc
dec
rorb
jae
sub
mov
or
sub
popa
in
jmp
or
pop
aaa
sbbb
ljmp
add
xor
add
ret
mov
popa
sbb
push
or
loope
and
ss
and
in
push
ret
xor
jg
mov
jle
in
xor
mov
mov
lcall
mov
cld
add
pushf
and
xchg
cmp
and
xchg
push
inc
sub
push
cmp
pop
test
sbb
popa
and
dec
call
cmp
push
enter
adc
adc
or
jp
cmp
ret
out
loop
or
dec
inc
sti
stos
xchg
and
loop
aam
rolb
in
pushf
jmp
fisubrs
mov
sbb
sub
mov
test
loop
rcll
mov
fwait
or
sbb
add
leave
dec
nop
xor
cmp
mov
adc
aam
hlt
rcrb
cwtl
nopl
inc
pushf
xchg
add
xor
jp
push
push
xchg
mov
mov
xlat
mov
mov
push
sub
mov
sbb
cmp
sbb
or
lock
mov
scas
xor
je
ljmp
enter
and
sbb
cli
dec
pushf
dec
cmpsl
sbb
sub
fsts
adc
ret
test
mov
sbb
repz
fwait
nop
add
incb
lea
leave
scas
xchg
fcmovnbe
and
add
jo
xchg
aam
pushf
mov
shr
lods
pop
xor
xchg
cwtl
pop
add
cmp
dec
push
push
shr
add
jb
jp
test
test
ljmp
popa
nop
push
xor
test
sbb
jne
pop
xchg
jecxz
and
push
stos
fiadds
cmp
xor
ds
xor
push
mov
jb
arpl
inc
call
ret
jecxz
leave
sbb
jno
jecxz
fs
mov
push
movsl
inc
fstpl
pop
leave
cmc
loop
or
sbb
adc
mov
outsb
mov
in
fs
cmp
in
cmp
nop
and
inc
sahf
mov
jne
inc
xchg
in
addb
pusha
out
daa
sub
outsb
cmp
xchg
cld
xor
sub
inc
cltd
adc
cmp
cld
fsubrl
mov
pop
sbb
jl
cmp
adcb
push
out
sub
push
mov
inc
xor
ss
loope
or
data16
fisubrl
mov
shlb
sbb
cwtl
adc
and
in
cmp
add
mov
adc
fs
adc
lods
sbb
je
fs
push
call
jg
enter
nop
cli
fimull
jno
hlt
pusha
fcoms
mov
daa
lret
pushf
sbb
sarb
adc
enter
fs
jne
lcall
outsb
nop
xor
inc
les
xchg
push
and
sub
sbb
mov
mov
insl
enter
shll
push
inc
mov
inc
movsl
je
gs
lret
fisttpll
mov
pop
fs
icebp
jp
xor
ret
adc
mov
adc
subb
mov
imul
inc
sub
inc
in
movsl
andl
jae
adc
push
pop
sub
mov
pop
inc
int3
dec
mov
mov
rol
cmpsb
loop
and
sbb
cmp
pop
push
mov
add
leave
sbb
data16
xchg
rcll
xlat
jbe
or
mov
dec
sub
test
enter
leave
jecxz
adc
cwtl
lods
test
fnstcw
aas
jl
pop
pop
mov
mov
add
push
rcl
sbb
adc
ret
and
push
or
push
push
dec
or
cmp
insb
les
and
aad
rcrl
jb
lock
xchg
sbb
sbb
jb
lret
sub
or
cld
add
cmpsl
shll
xor
pushf
sub
imul
cmpsb
in
jb
arpl
xorb
or
sub
out
xchg
pop
mov
mov
fwait
inc
push
mov
sub
jp
js
add
and
movl
pop
or
xchg
test
cmpsb
mov
xchg
jns
inc
xchg
xchg
sbb
gs
mov
pop
add
jge
or
rorb
sub
and
lahf
fwait
and
rolb
xchg
rolb
aad
adc
roll
push
rcrb
mov
add
mov
jno
mov
add
enter
lock
push
inc
lahf
or
daa
dec
rclb
mov
loope
and
imul
pop
sub
addb
mov
rcrb
dec
pop
and
push
xchg
bound
aad
jns
cli
fildl
ljmp
ret
add
xor
xchg
fcompl
ret
popa
cltd
push
test
cmp
int3
aaa
pop
sub
or
leave
mov
ret
jo
dec
cmp
add
jb
mov
pushf
and
xlat
int
test
sub
xchg
insb
pop
ficompl
mov
movsl
ja
mov
sbb
scas
idivb
adc
mov
cld
xchg
rcrb
or
or
pop
addr16
pop
add
sbb
sbb
dec
adc
inc
sub
into
sbb
xchg
cmp
mov
pop
dec
inc
xchg
push
push
fwait
ljmp
rclb
xor
sub
in
sar
in
dec
sbb
cmp
bound
dec
xor
adc
outsl
jbe
inc
sbb
and
adc
xor
daa
das
pusha
orb
and
push
ss
fadds
push
in
insl
cmp
dec
clc
mov
xor
push
ret
lret
clc
adc
test
mov
testb
mov
add
dec
sub
lret
es
push
cwtl
dec
xor
roll
xor
sub
loopne
shlb
test
jbe
ret
aam
test
mov
ficoms
imul
loop
repnz
and
or
insl
add
repnz
jb
test
in
or
adc
push
xchg
adc
xchg
mov
dec
xor
jo
nop
loopne
xchg
ret
and
mov
xor
pusha
sub
sarb
or
push
les
inc
cmp
leave
pop
aam
cli
inc
cs
pusha
loopne
push
cmp
sbb
sub
cmp
sbb
push
sbbb
push
xchg
push
jbe
cmpsl
orb
test
jmp
push
movsb
mov
inc
ss
xor
adc
inc
mov
scas
dec
inc
andb
shlb
sbb
test
or
mov
insb
add
push
push
mov
sbb
pop
add
sub
movsb
dec
ret
cld
jns
ror
adc
inc
lods
sub
pop
mov
rcr
and
shl
or
pop
pushf
push
test
cli
sbb
cmpps
xchg
sbb
popa
addr16
add
sub
jo
out
adc
shr
rcrb
inc
stos
cmp
mov
cmp
sub
xchg
ljmp
mov
les
insb
insb
pop
mov
loop
mov
add
aam
mov
in
loope
pop
mov
mov
sar
xchg
xchg
pusha
inc
dec
je
xchg
enter
mov
push
js
je
push
mov
mov
mov
cmp
int3
add
bound
mov
dec
adc
fsubs
and
jmp
inc
cmp
add
mov
sbb
loope
xchg
xchg
xchg
or
outsb
test
aam
mov
call
cli
mov
sub
dec
aaa
or
sbb
cmc
mov
loopne
shlb
mov
add
decl
outsb
lea
in
xchg
fs
rcll
sahf
and
imul
out
sub
fdivp
push
and
push
pop
data16
jo
ja
sub
enter
or
enter
pop
sahf
mov
fisubs
and
call
xor
stos
push
pop
add
inc
imul
stos
ret
xchg
cmp
lock
andb
insl
pushf
inc
xchg
lea
cmp
sbb
movsb
jae
mov
outsb
add
jbe
xchg
enter
push
sar
jl
jecxz
cmpsb
cmp
lods
cwtl
xor
xor
pop
xchg
add
pushf
mov
xor
sbb
mov
push
les
pop
ret
dec
ss
sbb
test
push
cmpsb
sbb
sub
jnp
mov
mov
sahf
jbe
push
bsr
lods
out
dec
les
out
addr16
into
and
insb
mov
pop
outsb
adc
sub
pop
xor
add
push
outsl
or
and
add
jge
inc
dec
push
add
lds
inc
stos
pop
lock
mov
mov
xorb
and
pop
dec
scas
jle
insb
jne
outsb
mov
push
fs
adc
xadd
add
fs
jp
cmp
cltd
push
push
pop
js
lcall
xor
shll
arpl
test
adc
lods
hlt
mov
test
jp
pop
rcrl
cmpsb
jb
xchg
lret
mov
push
out
xchg
mov
xchg
pop
mov
shrl
lea
mov
push
dec
or
nop
add
enter
xchg
pop
push
push
pop
das
ljmp
pusha
xor
sbb
call
inc
divb
ss
out
cmpsb
loop
sub
add
test
mov
mov
ret
xchg
jl
dec
pop
cmpsb
mov
xor
pop
testb
inc
andl
mov
pop
xchg
mov
dec
jp
inc
testl
adc
xor
and
stc
rclb
adc
cmc
dec
popf
push
popa
add
mov
aad
adc
setnp
push
pause
pop
cwtl
cmp
and
addb
sbb
adc
repnz
inc
jbe
inc
shlb
sub
arpl
pop
test
cmp
loope
cmp
sti
js
subb
sbb
jecxz
push
pop
add
sbb
pop
mov
insb
add
ss
rclb
repz
call
push
dec
mov
insb
gs
rcl
cli
cmpsb
popa
mov
les
pusha
push
fs
adc
and
mov
xchg
inc
sbb
es
into
mov
dec
push
xchg
mov
or
jp
inc
inc
jmp
adc
nop
imul
xor
push
jp
inc
inc
test
fs
jo
bound
lret
imul
adc
or
inc
lock
jg
pop
inc
xchg
jl
daa
ljmp
add
xor
xchg
adc
dec
mov
bound
repnz
jo
lods
or
sbb
mov
pop
mov
push
mov
sbbl
repnz
add
cs
inc
inc
dec
adc
je
lcall
dec
lds
mov
sub
inc
mov
inc
jmp
dec
push
out
cmp
push
enter
in
xor
out
adc
push
lret
pushf
mov
clts
andb
xchg
xorb
rorl
shr
rorb
out
add
out
flds
pusha
int3
pop
and
push
xor
test
cmpl
and
mov
orl
add
mov
dec
fdiv
mov
jl
scas
dec
loope
push
push
popa
mov
cmp
mov
or
add
pop
jmp
hlt
es
xor
les
push
or
lea
fimuls
pop
mov
outsl
inc
push
or
push
loop
pop
pop
jbe
call
and
xor
adc
inc
sbb
jp
sub
dec
scas
add
jno
cmp
dec
mov
icebp
xor
sbb
jbe
aad
or
test
lods
inc
jmp
push
js
adc
add
je
fstp
sahf
in
jp
test
andb
mov
or
adc
addb
js
loopne
sub
mov
xor
jb
cwtl
into
pop
or
mov
jo
test
xchg
loope
test
hlt
popf
insb
ljmp
push
xor
pop
loop
or
or
sbb
dec
sbbl
mov
jecxz
test
inc
popf
rcr
loopne
add
push
xor
add
incb
add
les
jno
mov
xchg
xchg
pop
andb
add
lahf
xor
and
xchg
jp
das
inc
jle
ret
ret
rcr
inc
int3
dec
mov
xchg
cmpsl
outsb
or
rcrb
js
add
and
enter
adc
or
sbb
add
ret
out
sbb
xor
cmp
pop
arpl
outsb
cmp
in
and
dec
or
int3
nop
lret
rcrl
pop
or
mov
in
enter
fnstcw
push
mov
mov
push
adc
pop
xor
pop
in
xchg
test
pop
test
push
jmp
push
loop
sbb
push
or
mov
sub
je
sbb
pop
in
jle
ret
inc
call
into
push
mov
pop
sbb
in
and
mov
xchg
mov
add
adc
mov
cmp
lcall
sbb
lods
sub
ret
inc
and
or
adc
add
mov
and
jmp
sbb
sahf
jnp
std
cmp
andl
test
sub
adc
hlt
cli
xor
or
stos
mov
lret
popa
lret
add
cwtl
int3
addb
rsqrtps
cmp
dec
adcb
xor
sbbb
and
sub
push
pop
xor
movsb
xchg
lods
xchg
and
mov
sarb
adc
add
mov
cmp
and
dec
or
cmp
es
mov
push
jl
or
push
mov
mov
sbb
mov
in
rorl
stos
add
fsubrs
add
sub
add
ror
ja
push
dec
call
sbb
push
or
add
add
xor
mov
xchg
sbb
int3
jp
pop
ror
les
add
and
hlt
xor
mov
inc
inc
andb
daa
mov
orl
sbb
in
into
or
jmp
pushf
hlt
mov
jo
sbb
in
sub
adc
or
mov
or
sahf
mulb
push
add
xorb
pop
cs
dec
les
adc
dec
cltd
mov
push
and
cmp
cmpsb
sub
or
lcall
adc
fsts
xor
push
shl
fldenv
push
js
ret
jl
popf
pop
les
ljmp
bound
xorl
outsb
fs
mov
mov
rcr
push
inc
inc
and
mov
imul
jp
cmp
gs
xorb
loopne
cwtl
or
push
addr16
dec
xchg
lds
lods
hlt
ss
jl
mov
fisubrl
je
lea
test
inc
or
xchg
js
sbb
mov
mov
shr
inc
mov
loop
mov
lcall
lods
pop
sbb
nop
xor
adc
adc
pushf
cmp
inc
pop
dec
sbb
push
pop
push
fiadds
pop
cmp
ljmp
pop
pusha
dec
imul
adc
sbb
fs
mov
push
cmp
in
or
mov
icebp
sbb
pop
sbb
fldl
and
dec
dec
adc
test
adc
xchg
jo
cmp
scas
loopne
mov
addb
add
fsubl
mov
mov
push
or
xchg
adc
add
or
sub
add
jp
outsb
stos
xchg
dec
mov
rolb
sub
sub
arpl
dec
loopne
xor
mov
and
iret
andb
jno
andl
adc
gs
cmpsb
mov
pop
js
pop
mov
lret
aam
mull
leave
add
xchg
add
or
je
data16
jo
or
nop
xchg
push
lea
fistpll
adc
sub
lret
icebp
lock
pop
jle
push
ret
or
into
cmc
mov
les
test
and
rcrl
daa
popa
test
or
ficomps
loop
hlt
je
cmc
inc
adc
lods
jp
sub
sbb
sbb
add
sbb
ja
lret
cmc
or
cmp
inc
clc
fmul
adc
inc
cmp
push
push
pop
loopne
test
push
jo
add
mov
pop
or
lret
gs
mov
jmp
push
hlt
add
popa
je
out
inc
out
insb
adc
xchg
clc
adc
into
loop
sub
push
int
int
cmp
pop
imul
xor
lock
and
push
rorb
add
mov
out
shlb
mov
shl
je
bound
idivb
push
and
push
pop
test
mov
les
pushfw
jl
cmp
faddp
mov
adc
adc
repnz
es
arpl
rcrb
notb
or
adc
add
adc
and
xchg
stos
add
inc
lods
xchg
mov
nop
adc
xor
cwtl
cmp
pop
pop
xchg
aaa
adc
mov
es
ljmp
mov
sbb
inc
push
outsb
fldcw
sub
fcmovbe
lods
shll
bound
pop
psubsw
push
or
add
sbb
repnz
mov
lret
and
stos
dec
aam
jo
sbb
mov
cmp
ljmp
popa
cmp
gs
jne
xchg
rclb
movsb
test
sub
push
dec
fcoms
dec
mov
inc
cmp
pop
mov
adc
sub
dec
clc
and
mov
iret
test
pop
add
or
jp
sbb
sub
arpl
cltd
cmp
and
mov
add
sarl
into
mov
fdivrs
sbb
add
cmpsl
push
fidivs
push
push
adc
and
xchg
or
dec
sbb
daa
push
scas
sub
pop
xor
inc
fidivrs
shlb
adc
push
xchg
mov
xor
jl
xchg
adc
adc
pop
inc
push
shrl
jp
lock
out
mov
pop
loop
test
jp
or
ja
mov
loopne
or
dec
cmp
push
jo
popa
es
dec
cbtw
in
inc
jp
xchg
or
aam
push
addr16
pop
dec
aam
and
hlt
js
cmp
cwtl
mov
push
xchg
cmpsb
inc
push
mov
jl
jno
mov
ficoms
loopne
dec
push
addr16
add
out
or
mov
inc
inc
or
ja
jmp
pop
lea
jnp
cli
mov
inc
add
repnz
imul
add
mov
adc
sub
stc
orb
test
addl
loope
jo
lods
cmp
lret
push
sbb
and
fwait
cs
in
sub
ljmp
jb
and
aaa
insb
inc
mov
add
fdivs
outsl
scas
xchg
sbb
mov
and
inc
mov
jno
in
scas
cmc
pusha
push
xchg
loopne
add
popa
test
shl
loop
js
loop
jne
sub
adcb
aam
int3
sbb
loopne
inc
jle
inc
cmp
ljmp
pop
xchg
pushf
add
cmp
dec
movsb
cs
sub
cli
pop
push
aaa
adc
adc
mov
adc
cmp
pop
cmp
loop
les
or
js
push
xor
je
mov
aam
add
xchg
shrb
fcompl
or
inc
loope
aad
hlt
and
cmp
xor
sub
or
ficomps
aas
and
push
sbb
jns
cmp
dec
clc
sbb
mov
popa
sbb
adc
inc
xchg
mov
jb
xor
mov
push
sub
inc
ret
pusha
xor
jnp
test
mov
daa
lret
stos
rol
rorl
movsb
hlt
xchg
xchg
adc
cmp
and
rclb
scas
sbb
pusha
inc
inc
rclb
mov
add
inc
mov
test
add
xor
xchg
push
hlt
mov
lods
or
or
sbb
fnsave
push
add
inc
or
push
push
add
ljmp
add
fcmovnb
add
mov
mov
and
pusha
ja
add
sbb
push
jg
dec
sbb
outsb
dec
push
dec
inc
fadds
adc
push
add
pop
addl
jo
and
lea
and
ss
cmp
pop
inc
cmp
add
movsl
mov
bound
enter
push
dec
push
mov
andl
mov
or
sbbl
sbb
xchg
push
mov
imul
orb
xorb
xor
flds
cli
clc
mov
fwait
xor
push
mov
mov
mov
adcb
pop
daa
sbb
call
adc
push
and
lret
push
orl
or
or
adc
xchg
mov
cmp
push
xor
push
nop
dec
jp
lods
jae
and
pusha
pushf
lods
inc
dec
cmpsb
sub
jae
sub
xchg
ss
push
dec
push
jecxz
je
loop
cwtl
lock
adc
jl
add
std
fwait
inc
movnti
leave
xchg
xorb
add
gs
testb
dec
cs
push
pop
add
icebp
xor
xor
or
sbb
int3
mov
mov
lock
and
xor
movl
addb
dec
xor
or
lock
lret
into
sbb
sub
pop
cmp
push
jle
jbe
fnstenv
adcl
inc
sbb
mov
push
inc
or
dec
add
leave
js
inc
shlb
push
mov
es
push
call
add
push
sub
enter
outsb
mov
loopne
sub
ret
sbb
pusha
ds
inc
stos
or
fcom
push
sbb
or
sar
data16
ret
inc
inc
push
pop
mov
xchg
clc
gs
lret
dec
test
icebp
popa
bound
push
push
sahf
mov
push
daa
push
call
push
jl
loopne
call
movb
test
test
sahf
add
mov
sub
movsl
mov
pop
ret
mov
mov
cmp
sub
sbb
popf
or
sbb
jb
xor
push
scas
sarb
xchg
in
test
push
and
add
cmp
vpmovd2m
mov
ror
movsb
ret
lcall
lret
push
sub
push
dec
insb
inc
data16
mov
ja
mov
ds
xor
call
mov
and
ficoms
jmp
nop
mov
cmpl
mov
xchg
cmp
mov
push
inc
mov
dec
mov
pop
sub
push
hlt
sbb
jg
lcall
pop
neg
or
push
add
leave
ret
stc
cli
push
push
fstl
lods
pop
jp
and
roll
or
mov
lea
or
orb
mov
jp
sbb
add
das
ret
cmpxchg
cmp
inc
add
adcl
into
inc
adc
daa
push
outsb
and
ret
mov
lds
in
enter
push
outsb
popf
push
es
lea
rclb
cmp
outsb
inc
push
or
and
xor
movsl
pushf
sbbb
mov
mov
cmp
push
addl
int3
sarb
cmp
xchg
and
aam
or
das
sbb
cmp
cmp
mov
mov
or
and
lcall
mov
call
jo
mov
push
rclb
ss
movsb
mov
popa
rolb
test
xor
enter
scas
and
and
in
xor
rcrb
ret
cmp
sahf
outsb
sub
fadds
mov
js
loopne
pop
fadds
pop
ss
mov
mov
xor
mov
dec
xor
mov
test
mov
js
pop
cmpsb
inc
mov
or
xchg
ret
and
push
aam
call
aam
or
gs
sub
ficomps
adc
loope
sbb
nop
jo
and
mov
xchg
test
nop
mov
mov
mov
sbb
clc
lret
jns
xchg
xchg
js
cmp
push
insb
dec
mov
xchg
pusha
pop
add
add
dec
ljmp
rcl
mov
cmp
imul
push
cmp
loopne
bound
xlat
cmp
or
adc
push
lods
adc
add
mov
movsb
mov
xchg
test
loope
sbb
nop
pop
add
cmp
lret
mov
add
mov
inc
pop
add
dec
jp
ljmp
sbb
inc
popf
inc
and
das
jnp
or
sahf
mov
cs
and
dec
xchg
loop
fsubl
fcoml
mov
roll
clc
lret
in
insb
loope
in
push
loopne
loop
ret
rcll
rolb
mov
movb
sbb
sub
pop
sarl
or
shrb
fdivrs
imul
into
pop
ret
lret
mov
add
lea
xchg
ljmp
xchg
fstl
cwtl
into
nop
sbb
cli
mov
cmp
mov
dec
imul
hlt
sbb
pop
movsb
loopne
xchg
or
shr
push
cmp
gs
xor
or
lods
dec
loope
rolb
ret
push
fs
outsb
popa
add
lock
rcrl
adc
js
push
jecxz
or
int3
ljmp
call
aas
inc
movsl
aam
mov
add
into
fdivrp
mov
add
xchg
ret
mov
jo
das
outsl
popf
dec
pushf
xchg
repnz
repnz
and
inc
add
mov
out
push
fxch
or
movsb
mov
and
nop
nop
add
push
stos
and
cmc
inc
mov
add
and
pusha
stc
push
or
pop
push
pop
enter
in
enter
ss
data16
loopne
and
mov
insb
shlb
sahf
dec
cmp
mov
xchg
xchg
cmc
clc
cmp
cmp
or
ret
pop
sbb
or
mov
push
and
adc
sahf
cmp
dec
xor
mov
lods
add
cwtl
cmp
xchg
dec
add
or
lea
add
inc
sbb
xchg
inc
inc
and
or
sub
and
jmp
or
cmpsl
mov
mov
inc
adc
stos
cmp
mov
dec
and
and
xchg
lea
xchg
sbb
lret
jo
mov
xor
scas
jp
es
in
pop
push
xor
push
inc
imul
xchg
je
add
rol
rclb
xchg
push
jnp
mov
ret
icebp
add
lret
sbb
cli
inc
ljmp
sbb
fsts
xor
lods
jo
add
ljmp
hlt
cmc
test
test
xor
cltd
sbb
add
daa
add
cmp
test
push
mov
mov
out
pop
lods
inc
not
mov
mov
sub
jb
push
push
ss
jl
fucom
sub
add
jecxz
jmp
bound
repnz
sub
or
jo
push
pop
mov
cmpsl
xor
addb
mov
fs
add
adc
je
adc
aam
adc
or
pop
cmp
ljmp
and
out
dec
sub
push
sbb
nop
adc
int3
repnz
xchg
out
pop
pop
xchg
cmp
mov
add
adc
xor
es
xor
in
pop
cmp
dec
cwtl
jbe
sbbb
cmp
fmul
subb
dec
jle
push
or
addr16
or
sbb
sahf
or
cmp
cmp
ret
mov
push
mov
pop
loope
rcrl
mov
xor
or
push
mov
inc
inc
jle
imul
in
dec
loop
jnp
rolb
cltd
xchg
rol
imul
lods
and
inc
push
repnz
xchg
mov
or
cmp
xor
or
mov
cs
inc
pop
mov
cmp
lea
jl
or
mov
xor
insb
or
rol
push
and
call
lcall
call
sarb
xor
pusha
adc
mov
inc
pop
out
push
inc
mov
into
and
leave
push
sub
mov
xchg
mov
inc
push
outsl
cmp
and
lea
subb
mov
lods
aaa
or
xor
roll
sub
inc
outsb
cmpsb
fwait
nop
adc
test
mov
or
mov
jnp
loope
sbb
loopne
sbb
out
movsb
xchg
xor
xor
mov
cmp
or
cmp
inc
sub
cmpb
cwtl
pop
push
loopne
and
into
shrb
dec
jbe
push
add
or
je
pop
push
pusha
ret
add
data16
mov
xor
dec
add
into
insb
hlt
lods
mov
ret
cld
shll
push
pusha
fsubr
or
rol
iret
push
nop
push
addr16
xor
jb
je
pop
dec
popl
ret
xor
push
loope
mov
xor
mov
fnstcw
mov
mov
jl
popa
inc
or
loop
mov
xchg
mov
pushf
jns
mov
jbe
jo
nop
loopne
pop
daa
sub
rclb
dec
test
or
xchg
pop
mov
rorl
jecxz
lret
cmp
push
aaa
pop
es
push
add
test
or
pop
cmp
mov
add
arpl
jbe
sbb
sbb
aam
fidivs
xchg
mov
dec
xchg
pop
mov
adc
cli
insb
loopne
xchg
enter
cmp
lock
push
sbbb
mov
push
hlt
sub
subb
jl
jmp
sub
in
gs
loop
mov
push
jg
dec
inc
pop
rcrb
sbb
push
movsb
cltd
lret
xor
fistpl
add
loope
mov
pop
nop
or
jl
pop
add
roll
ret
clc
jb
mov
jl
leave
cmc
and
jo
movsb
movsb
mov
sahf
and
shl
inc
outsl
test
xor
subb
rorl
or
pusha
ds
ret
and
clc
cmp
bswap
sbb
or
or
jecxz
jns
js
repz
xchg
enter
fcoml
imul
pop
leave
push
jl
push
push
fsub
pop
aam
add
cmp
loop
fs
bound
cmp
dec
lret
lods
icebp
mov
ss
jb
xchg
test
jbe
xchg
movsb
xchg
push
mov
mov
fsubr
add
sbb
out
sbb
pop
cmp
scas
mov
mov
fnstenv
inc
sar
xchg
push
sbb
daa
movsb
sbb
and
popa
and
es
and
mov
fs
xor
andl
and
push
ret
pop
pop
addb
add
lods
imul
dec
adc
stos
js
ret
leave
add
inc
push
push
ror
mov
mov
clc
mov
or
test
sbb
in
dec
aaa
mov
mov
adc
sarb
cmpsl
jg
pushf
loop
out
nop
cmovnp
lods
lods
xchg
lods
push
icebp
dec
imul
dec
mov
push
add
cmp
jecxz
xor
and
mov
or
hlt
push
or
xor
mov
cmp
or
dec
inc
pushf
adc
jmp
mov
rorb
jle
stos
jb
adc
xchg
fwait
mov
in
xchg
dec
bound
sbbb
sub
inc
addl
in
cmpsb
sbb
es
dec
dec
mov
in
xor
push
mov
leave
mov
pop
or
hlt
mov
cwtl
cmpsl
add
xchg
or
arpl
push
jp
in
adc
sbb
or
test
or
loopne
pushf
xchg
or
mov
xchg
loope
inc
add
sbb
ss
and
and
adc
mov
sub
add
cmp
nop
mov
sub
mov
pushf
test
addr16
dec
dec
or
aam
mov
inc
sub
push
mov
and
aam
movsl
sub
adc
dec
jl
ret
sub
icebp
mov
ljmp
xchg
or
nop
mov
xchg
in
shlb
test
mov
jo
dec
ss
ficoms
cs
into
das
or
xchg
lods
dec
xchg
sub
pop
dec
add
inc
mov
inc
and
lcall
pushf
pop
mov
jnp
mov
out
rcrb
xor
adc
insb
cmpsb
popa
jo
shl
push
data16
dec
das
add
jmp
pusha
mov
inc
push
dec
gs
sbb
adc
add
fs
jbe
pushf
jne
add
mov
popa
leave
inc
repnz
loope
xchg
mov
inc
movsb
rcll
loopne
xchg
sub
sahf
pop
loope
ret
hlt
add
mov
ficoml
repz
movsl
add
add
dec
shlb
inc
or
xor
andl
add
xchg
inc
mov
imul
outsb
or
mov
dec
loop
rcll
sub
xor
jle
lret
mov
mov
push
mov
xchg
add
test
popa
pop
pop
xchg
push
icebp
mov
cltd
add
dec
insb
ror
pop
rorb
push
in
or
fsubrs
add
jp
sbbb
shrb
jmp
xor
add
sub
add
lret
ljmp
mov
mov
xor
pop
arpl
test
push
add
xor
mov
mov
mov
sbb
loopne
dec
xor
jbe
fldenv
lret
xor
pop
push
cmp
out
or
xchg
pop
adc
mov
push
mov
cmc
lods
pop
es
in
cmp
or
scas
xchg
dec
and
add
xor
lcall
add
lods
je
sbb
rcrb
lds
cmc
movsb
jno
push
loop
jns
nop
or
lods
jmp
pop
js
sti
mov
loopne
mov
icebp
js
loop,pn
add
jne
jbe
cs
call
xchg
sbb
add
pop
mov
push
loopne
or
dec
or
push
jmp
xchg
repz
sub
shll
push
adc
subb
sbb
xor
xor
shl
test
add
subb
in
mov
add
ljmp
rclb
jp
xchg
push
enter
shrb
cmpsl
xor
in
dec
sbb
or
or
pop
adc
inc
cmp
icebp
aam
stos
loopne
adc
call
sbb
sub
or
push
sbb
push
mov
mov
sub
cld
pushf
pusha
mov
add
lock
mov
and
nop
adc
loopne
loopne,pt
xchg
inc
inc
inc
movsl
xchg
fiaddl
cld
rclb
orb
dec
and
das
bound
push
xchg
test
valignq
xchg
mov
pop
pop
cmp
and
xchg
mov
int3
xchg
jl
mov
adc
push
sarb
cmp
or
push
dec
daa
and
fwait
sub
cmp
scas
mov
shrb
adc
adcb
cmpsl
jbe
xchg
sub
shlb
loop
jne
movsl
cmpb
rcrb
and
rcrb
inc
push
pushf
dec
lcall
push
and
adc
popa
xchg
jp
subb
pop
cmp
cld
or
add
xor
jbe
or
dec
add
into
inc
rclb
insl
or
imul
dec
call
aas
out
andb
sbb
pop
sbb
into
pusha
sub
add
lock
dec
xor
leave
arpl
fmull
push
xchg
movl
mov
sub
pop
rcrb
push
or
sub
rcll
push
mov
dec
mov
xor
or
mov
sbb
icebp
lar
push
jb
lcall
in
pop
adc
pop
push
nop
xchg
jmp
and
xor
ljmp
and
ret
cmp
ss
mov
fs
cmpb
adc
pop
test
pop
loopne
or
inc
ds
pop
xor
xor
scas
daa
xor
mov
inc
fmuls
push
hlt
fisubs
lods
in
inc
xor
sub
sbb
and
pop
rolb
stos
dec
rolb
sbbl
or
js
movsl
popf
dec
push
push
shl
sbb
inc
pop
ret
mov
add
inc
cld
mov
fmuls
movsb
and
xor
mov
sbb
and
addb
inc
xor
inc
scas
mov
xchg
inc
jge
fmul
fstps
mov
test
inc
mov
xor
in
aas
adc
add
gs
push
fcomps
sbb
lock
jbe
stc
iret
mov
xchg
orb
mov
in
ja
mov
data16
dec
add
mov
int3
mov
ficoml
aam
sub
loop
mov
xchg
xor
push
push
test
ja
jp
and
jae
mov
fcomps
inc
test
jae
mov
jne
sbb
xlat
xchg
fsubp
nop
pop
mov
mov
pop
xchg
pop
adc
pop
mov
hlt
loope
sbb
sbb
shl
inc
jmp
jbe
aam
cmp
jbe
ficoms
adc
ljmp
dec
inc
xor
jge
mov
push
in
mov
lret
adc
inc
and
pop
icebp
jmp
dec
or
loopne
inc
pop
xchg
or
or
dec
mov
jo
in
mov
xor
loope
cld
daa
imul
xchg
outsb
maskmovq
jp
inc
or
add
jge
xor
cmp
push
mov
sub
pop
in
out
aas
add
adc
pop
inc
jl
fmuls
push
pop
mov
push
loop
jb
pop
mov
dec
jno
or
xchg
xor
aam
loope
or
movl
lahf
adc
and
sbb
test
add
shrl
inc
mov
or
loope
or
and
je
add
push
sub
hlt
aas
lret
inc
stos
cmpsb
adc
mov
pushf
and
cmpb
dec
es
scas
xchg
aad
dec
icebp
loope
xchg
or
sub
push
call
in
dec
ss
jb
sub
loope
push
xor
inc
test
or
shrb
fdivrl
shlb
loop
roll
jl
push
ret
ljmp
ljmp
mov
xor
jecxz
xor
add
mov
loopne
sub
mov
add
test
js
rorb
xchg
mov
or
ljmp
movsl
test
lea
sahf
mov
xchg
adc
int3
mov
add
hlt
fiadds
je
icebp
mov
push
push
or
pushf
pusha
jmp
jecxz
lahf
xchg
pusha
add
les
mov
sbb
mov
push
jle
xor
push
xor
sub
or
sbb
dec
and
insb
sub
or
cltd
pop
mov
add
orb
test
in
push
xchg
adc
inc
add
or
pop
cmp
addb
gs
pop
sub
pop
cmp
jl
lea
add
out
test
jns
adc
xorb
nop
adc
outsl
ret
lods
outsb
adc
addb
mov
js
aam
dec
cmp
icebp
lcall
mov
pop
pop
movsl
popa
lret
ret
mov
out
or
pop
lods
icebp
lods
addl
or
adc
test
out
or
or
cs
push
inc
clc
xor
jnp
bound
fchs
dec
push
adc
adc
and
in
les
pushf
adc
push
push
ret
dec
dec
sbbb
mov
pop
lret
push
jecxz
sahf
cli
sbb
outsl
mov
jecxz
jbe
sbbb
push
out
test
inc
ret
ret
les
cmp
pusha
cs
xchg
test
inc
fcoms
data16
test
movb
cmp
and
mov
nop
xchg
jge
cmp
inc
or
sub
mov
jp
push
aam
add
das
lret
data16
xchg
push
rol
data16
or
add
mov
and
test
pop
lret
inc
inc
push
jmp
mov
mov
add
lret
cmp
mov
mulb
andb
sub
sub
outsb
movsb
dec
lea
rcrb
into
push
faddl
sbbb
scas
fsubs
mov
test
xchg
push
outsb
lea
mov
jne
mov
push
sub
mov
or
sub
and
cmpsb
rcrb
adc
push
call
xchg
clc
daa
and
ljmp
test
insb
or
bound
mov
mov
imul
aaa
cmpsl
ds
push
hlt
adc
xchg
push
xor
push
dec
push
inc
nop
mov
push
sbb
pushf
std
jno
push
ret
ret
add
pop
inc
test
cmp
jp
repnz
je
call
xor
push
pop
bt
lret
pop
orb
test
add
and
stc
cli
int3
mov
lods
push
rcrb
addb
dec
cmp
add
or
pusha
punpcklbw
jo
cmp
and
mov
mov
push
mov
cmpsl
mov
add
movsb
mov
imul
dec
sub
pop
inc
or
lods
lea
jne
hlt
nop
mov
cmp
add
mov
push
les
mov
dec
test
adc
xor
inc
or
cmp
orb
rcrb
aaa
xchg
sbbl
adc
ret
loope
mov
cld
push
add
bound
pop
ret
sbb
pushf
dec
into
pop
mov
lods
xchg
iret
xorb
cmp
sbb
movsl
dec
mov
mov
xor
add
rolb
stos
adc
jbe
ficomps
cmp
loopne
sub
vmread
cmp
xchg
jp
pop
clc
push
dec
lds
mov
adc
add
fmuls
lock
mov
fwait
js
icebp
pop
cmp
sbb
aam
rcrl
in
dec
dec
mov
nop
shrb
jne
pop
add
in
pushf
and
subl
das
test
xor
aam
ds
add
xchg
or
pop
out
or
mov
add
shr
jnp
rcr
ret
js
mov
or
loopne
jle
adc
or
shll
pushf
cli
add
dec
sahf
cltd
in
push
add
mov
dec
cmp
outsl
cmp
lret
xchg
ljmp
or
mov
cmpsl
mov
bound
inc
push
es
imull
and
hlt
xor
adc
adc
adc
lea
add
mov
dec
push
and
es
pop
mov
adcb
loopne
mov
push
push
jle,pn
jb
mov
mov
sbb
and
mov
inc
jle
or
sbb
xor
ret
or
xchg
sbb
push
push
es
aam
orb
or
mov
mov
cvtpi2ps
lods
or
pop
add
adc
subb
inc
lret
nop
outsb
call
adc
call
pusha
pusha
popa
push
lock
loopne
imul
sbb
push
add
test
mov
cmp
xor
xchg
inc
ficoms
dec
dec
add
daa
or
inc
imul
imul
jl
sbb
fildl
inc
xchg
cmp
movsb
or
inc
int
and
scas
add
dec
or
adc
add
xor
pop
sbb
push
fsubl
add
leave
sti
into
je
mov
cli
bound
mov
rorb
inc
mov
adc
add
mov
mov
or
push
movsl
inc
mov
dec
mov
adc
rorb
dec
adc
mov
rcr
rcrl
xchg
movsl
addr16
hlt
adc
ficomps
orb
pusha
jecxz
dec
dec
and
sar
adc
stos
sarl
pop
aas
jle
pop
sar
inc
xor
mov
jl
xor
sahf
mov
sub
dec
dec
jecxz
xchg
mov
jmp
test
jne
inc
mov
pop
ret
jne
push
and
fsubr
pop
sarb
cwtl
mov
inc
dec
add
mov
sahf
lret
mov
push
sarb
and
loopne
lods
es
push
add
pop
push
ficompl
cld
aam
movsl
shlb
xor
jl
or
or
out
dec
sub
hlt
adc
pop
add
sbb
inc
pop
or
add
fs
add
rcr
sbb
inc
push
pop
push
incl
dec
add
addb
ja
dec
mov
inc
adc
mov
repnz
sub
pushf
cli
aas
cmpb
rcl
and
nop
orl
add
cmpsb
dec
je
xor
aam
call
and
pop
xchg
and
pop
add
mov
inc
test
sahf
test
and
cmpsb
icebp
mov
inc
sub
xchg
lea
xor
lock
lret
xor
xor
xor
xchg
xorb
cmpsb
add
loopne
out
js
cmp
add
imul
or
dec
mov
cs
pop
loopne
dec
jo
cmp
xchg
dec
or
out
jo
or
xor
jo
mov
cs
cmp
out
push
popa
mov
push
mov
sbb
enter
andb
pushf
sub
xorl
fcoms
roll
mov
add
xor
push
cmp
sbb
call
nop
push
xor
mov
loopne
ljmp
adc
and
ss
inc
mov
inc
dec
pusha
adcb
or
wbinvd
inc
lret
sbb
push
xor
xor
jo
xor
xor
pushf
movb
cmovl
pusha
pop
add
insl
jecxz
mov
shlb
sbb
loope
sbb
xchg
xchg
mov
xorl
pushf
mov
sbb
nop
dec
cmp
push
cmpsb
icebp
in
sub
push
nop
push
ret
mov
or
in
and
lcall
sbb
ret
pop
push
xchg
and
or
inc
sub
push
dec
js
inc
fcomps
loopne
mov
das
call
repz
push
adcb
negl
insb
push
mov
icebp
ret
call
push
hlt
adc
mov
cld
xor
or
push
movsb
sbb
push
daa
dec
pusha
mov
push
cmp
add
xchg
pop
dec
rolb
in
mov
mov
inc
xchg
add
lret
test
push
in
fs
push
mov
ret
cs
add
or
adc
pop
xchg
les
es
mov
and
into
xchg
dec
outsl
or
pushf
add
inc
lods
mov
bnd
loop
js
add
cmpb
popa
dec
loopne
daa
ds
dec
ret
test
imul
mov
bound
add
inc
push
dec
imul
test
jne
jb
or
pop
stc
test
xor
cs
push
pop
and
ljmp
shr
add
add
push
aad
mov
or
dec
leavew
pop
rolb
sub
add
aam
jp
jbe
dec
jo
fs
adc
mov
enter
addb
jecxz
loopne
lock
mov
sbb
arpl
inc
inc
pusha
loop
imul
popf
ja
enter
cmp
pop
or
lret
add
push
fidivs
push
sub
add
inc
pushf
in
mov
dec
jbe
push
push
adc
fcoms
xor
add
or
jg
ss
out
inc
rol
sbb
in
xchg
xchg
dec
cmp
pusha
xor
adc
sbb
in
add
pop
scas
dec
cmp
mov
jo
adc
test
xor
adc
adc
inc
fsincos
sbb
repnz
test
repnz
loop
mov
mov
flds
lock
mov
int3
xor
add
pminsw
sbb
adc
aam
and
add
add
ret
jne
sbb
fisubrl
sti
dec
add
mov
in
mov
push
aad
and
cs
jne
xchg
lret
bound
add
in
mov
mov
lods
mov
ret
dec
sahf
inc
push
mov
es
sub
roll
mov
mov
inc
in
jbe
jmp
fdivl
les
mov
cltd
jne
into
ret
or
lret
pushf
inc
mov
hlt
test
sbb
jecxz
outsl
pop
inc
xor
push
ficomps
cmpb
addr16
and
and
int3
ss
inc
cmp
jnp
or
adc
call
outsl
sbb
call
jne
push
push
in
pusha
das
test
sub
sub
sbb
lods
leave
mov
roll
clc
cld
jecxz
cmp
cmpsl
push
es
pop
fdivrl
dec
jns
stos
mov
maxps
jl
pop
mov
test
or
cmp
mov
stc
add
mov
or
sub
fldcw
rol
mov
sub
sub
js
dec
add
push
mov
dec
clc
cmp
call
add
cld
dec
cltd
and
xchg
jl
mov
arpl
outsb
or
mov
repz
add
lahf
dec
inc
fs
push
pop
scas
pop
inc
or
push
and
add
xchg
mov
adc
or
add
cmc
shlb
dec
cltd
cmp
sub
sbb
jmp
nop
bound
add
sbb
and
and
sub
add
inc
cmpsb
mov
mov
jo
loop
inc
inc
add
je
or
cmpsb
adc
and
mov
push
aaa
inc
dec
cmpsb
outsb
dec
push
orb
ret
pop
inc
sbb
loop
stos
cmpl
ljmp
sbb
sarl
rolb
imul
jle
add
mov
pop
xchg
dec
inc
ret
insb
inc
push
xor
add
fs
mov
sub
bnd
or
cwtl
add
out
dec
pop
nop
mov
pusha
imul
call
add
push
inc
add
adc
arpl
cld
rclb
xor
add
push
scas
lods
insl
pop
adc
or
aam
insb
lods
mov
aaa
js
xor
out
mov
sub
inc
dec
mov
mov
add
out
ret
pusha
and
enter
dec
loopne
out
in
cmp
test
andb
mov
mov
adc
mov
data16
popf
dec
iret
lea
or
jmp
scas
adc
ljmp
pop
es
test
and
es
outsb
into
cltd
cmp
lods
lock
inc
das
push
rclb
fcmovnb
and
push
ss
push
gs
mov
cwtl
pusha
or
inc
add
in
mov
jno
ss
sbb
mov
dec
testl
dec
mov
pusha
loope
jg
xchg
push
add
and
fmulp
testb
pop
cmovns
xchg
dec
xor
adc
or
clc
mov
movsb
sahf
xor
test
or
sbb
rcrb
mov
outsb
lds
ljmp
clc
push
out
cwtl
xchg
and
mov
inc
xchg
and
add
pop
inc
leave
sub
mov
pusha
pusha
lea
cmpsl
cmpsl
and
cmpl
push
cmp
jo
mov
rorl
dec
dec
stos
imul
add
cmpsb
or
adcl
xchg
pop
out
into
aam
pop
inc
add
jo
pushf
js
aam
sarb
pop
xchg
adc
xchg
fs
rcrb
out
or
push
and
sbb
pusha
inc
repnz
sbb
mov
mov
mov
inc
sub
imul
dec
or
adc
repnz
xchg
pusha
popf
enter
dec
sbb
mov
pushf
sub
xchg
mov
test
mov
pusha
cmp
and
pop
xchg
dec
xchg
sarl
mulb
push
test
iret
inc
mov
insb
movsb
mov
jne
inc
adcb
insl
jmp
dec
add
mov
daa
xor
and
loopne
pop
xor
adc
dec
ja
hlt
rol
leave
js
mov
dec
pop
add
mov
add
fadd
lea
insb
add
inc
jb
punpckhwd
push
ret
sbb
nop
pop
mov
loopne
popa
pop
add
pusha
sub
add
rcr
imul
movsb
das
sbb
jo
loopne
mulb
dec
es
xor
nop
orb
jno
movsl
les
test
mov
data16
fimuls
je
je
insb
dec
cmpsb
and
adc
out
sub
je
pusha
imul
ficompl
in
push
jno
mov
jle
sub
jp
loop
or
inc
enter
mov
das
lds
add
adc
pop
ret
pop
bound
jo
xchg
test
daa
dec
pushf
and
xlat
sbb
xchg
rcll
loop
roll
insb
int3
mov
es
pop
pop
ret
mov
mov
je
xor
ret
xor
je
xchg
cmp
jge
cvtpi2ps
cmpsb
insb
push
lcall
repnz
push
cmp
and
decb
ret
pop
xor
pop
or
enter
rorl
add
cwtl
cmp
addr16
es
pushf
sub
sub
ret
and
cmp
imul
inc
inc
push
ret
mov
cwtl
jl
rcll
add
and
rcrl
xchg
nop
js
inc
lea
cmpsb
int3
lea
imul
in
insb
fisttpll
outsb
mov
or
movb
mov
add
test
push
add
fwait
es
pop
xor
mov
ret
inc
mov
fadds
test
ret
cmp
or
js
push
sbb
add
jecxz
rorb
jno
ret
aam
ret
ljmp
push
xchg
add
or
xor
cmp
jbe
sub
push
fisubrs
dec
inc
aam
lds
jg
hlt
subb
xor
jp
shll
lret
mov
inc
insb
ret
push
jbe
jo
adc
shrb
outsb
in
lret
shrl
sbb
ret
inc
cmp
dec
mov
ret
cmp
sahf
pusha
add
and
jmp
insb
movsb
jge
inc
loop
sub
enter
jo
xor
inc
cmp
sbb
cli
incl
mov
dec
sbb
stos
test
in
dec
add
mov
js
mov
and
out
push
sbb
ja
out
mov
cmp
cmp
inc
mov
or
add
repnz
bound
into
std
push
xor
mov
inc
mov
cs
ljmp
pop
push
fdivrs
addb
mov
xor
or
js
cmp
add
pop
hlt
js
pushl
mov
xchg
lds
mov
outsl
inc
jb
jp
jg
enter
iret
inc
in
js
mov
cltd
add
mov
push
call
dec
stos
cld
sbb
rol
aad
pop
cltd
adc
or
push
xchg
sbb
ret
push
push
mov
xor
insb
mov
cmp
clc
push
mov
xchg
push
sbb
mov
xchg
mov
data16
xchg
icebp
sbb
pushf
ret
push
cmp
add
add
mov
sub
loopne
imul
mov
loope
cmp
cld
hlt
sub
aam
xor
outsb
cli
inc
jo
iret
xchg
push
repnz
cmp
insb
aam
push
add
sbb
arpl
adc
jp
xor
popa
jbe
sahf
inc
and
js
xorl
cmp
push
adc
stos
inc
jp
inc
iret
lds
jns
push
dec
adc
push
mov
lock
jb
mov
cmpsb
add
and
sub
into
push
inc
adc
push
dec
jge
inc
ret
xor
mov
cmovp
mov
rcl
mov
add
inc
jecxz
daa
rolb
push
mov
adc
outsl
lods
xchg
and
xor
pop
sbb
fcmovb
shlb
scas
adcb
and
lret
ret
movsb
add
dec
jo
loope
mov
xchg
jno
push
dec
adcl
add
cmp
js
fs
pop
sbb
cmp
jne
out
adcb
or
repnz
mov
movsb
das
fists
and
jo
or
push
mov
xor
outsb
push
jl
mov
insb
call
add
mov
pusha
sbb
nop
sahf
and
add
mov
push
xchg
outsl
fdivrs
lea
add
pushf
or
jbe
jo
dec
mov
sub
rcrl
icebp
pop
xchg
add
jo
adc
and
push
push
or
xchg
adc
cmp
imul
mov
cmpsl
push
lods
xchg
divb
adc
push
dec
je
jae
add
sub
mov
lret
push
push
scas
xchg
cmp
mov
or
push
test
out
sbb
xchg
loopne
and
or
cmpsb
push
inc
aas
mov
sbb
xchg
lret
inc
fiadds
lret
ljmp
pop
add
cli
into
sahf
js
push
adc
es
pop
test
loope
loope
xchg
mov
inc
mov
xor
adcb
enter
dec
pop
mov
or
mov
loope
mov
sbbl
and
jle
icebp
dec
fadd
ds
push
xchg
or
orb
or
fcomps
incb
add
ss
inc
dec
add
sbb
jbe
pop
popl
push
addb
cs
outsl
jecxz
sub
sbb
fmull
lcall
dec
jo
into
dec
lock
jbe
xor
adc
arpl
lret
pop
sarb
xor
push
mov
fidivrs
les
jbe
inc
dec
push
sub
push
sub
sbb
aad
push
adc
and
shlb
push
or
movsb
ficomps
out
jne
mov
add
call
setl
sbb
rcrb
adc
xor
push
mov
dec
ret
imul
mov
insl
cmpsb
ljmp
add
push
mov
and
dec
dec
int
sbb
loop
mov
pop
mov
cld
stos
mov
mov
xchg
cmp
or
mov
and
add
push
jo
xor
fmull
or
inc
sbb
les
sbb
dec
dec
add
xor
sub
or
mov
lods
dec
ret
sub
or
cmp
mov
push
sbb
mov
js
out
imul
adc
sbb
sbb
sub
xorl
xchg
js
andb
cmp
jb
ret
rcrb
out
enter
fs
push
inc
add
test
add
inc
sub
sbb
into
fsubs
adc
or
cmp
enter
mov
ret
xchg
or
mov
adc
test
loop
pop
es
mov
jb
outsb
les
mov
rcr
push
mov
xor
push
sbb
dec
sub
loop
enter
pop
push
pop
sahf
dec
xchg
sbb
out
inc
dec
subb
inc
push
roll
push
cmp
sarb
enter
lods
movd
add
push
das
or
roll
mov
mov
push
loop
stos
and
mov
je
fs
or
sbb
das
dec
and
adc
inc
arpl
mov
movsl
add
mov
cmp
data16
add
pop
test
lahf
daa
ljmp
xorl
dec
mov
lods
test
lea
cmp
loope
push
sub
call
sbb
sbb
xchg
adc
adc
roll
push
pop
inc
test
cmpsb
pop
das
fidivs
out
insb
pop
pop
enter
loope
lods
pop
test
mov
or
leave
mov
sahf
enter
lods
add
cmp
imul
sub
push
mov
arpl
push
sbb
adc
js
or
pushf
rcrb
push
lds
pop
mov
jb
sbb
sbb
jge
mov
addr16
sbb
inc
mov
dec
lods
stos
jg
mov
or
cmp
add
mov
jmp
insl
in
mov
fsubrs
cld
sub
add
or
push
pop
push
test
add
dec
add
les
out
outsb
movsb
icebp
mov
rolb
mov
pavgb
mov
push
sub
dec
dec
mov
push
adc
leave
sub
ss
fcomp
push
mov
int
push
mov
aas
pop
rolb
or
xcrypt-cfb
cmpsl
pusha
movsl
iret
imul
out
subb
xor
push
push
xor
add
aas
mov
out
icebp
sbb
jecxz
jecxz
cli
mov
iret
dec
or
adc
cmpsl
or
mov
and
mov
push
cwtl
cmp
frstor
ret
add
ljmp
dec
ret
push
xchg
imul
add
int
scas
aam
inc
sbb
fs
jmp
mov
shr
imul
mov
addb
je
clc
mov
or
imul
push
pusha
or
test
lret
cmc
sbb
xor
shll
test
add
mov
fnstcw
cmc
shlb
fwait
sbb
adc
lock
xchg
add
push
ret
roll
movsb
xorb
or
add
or
mov
sub
and
mov
loop
add
lcall
push
push
popa
cmp
ljmp
sub
jecxz
fldcw
addr16
imul
push
ljmp
push
cmp
mov
add
pop
aam
pop
iret
icebp
dec
push
xor
or
jg
nop
mov
sub
add
outsl
lret
add
xor
movsb
xlat
pop
sbb
test
rclb
and
pop
dec
dec
sti
mov
imul
mov
jmp
fadds
repz
fstpt
adc
push
xor
jp
cmp
jbe
out
sub
addr16
lret
movsl
scas
mov
in
mov
mov
cmpsb
mov
adc
nop
xchg
dec
sbbl
adc
subl
adc
xor
setl
mov
add
lock
gs
xor
fidivrl
adc
pushf
push
aad
push
xchg
nop
addb
mov
sbb
pop
test
inc
jp
pop
nop
mov
mov
inc
inc
mov
fildl
mov
or
dec
test
je
jle
push
adc
in
add
jle
rclb
ret
pop
fisubl
or
inc
dec
push
and
stos
and
dec
loope
mov
pusha
dec
mov
sbb
sbb
adc
fnstenv
mov
adc
lret
or
pop
cs
sub
movsb
aaa
xor
push
hlt
dec
inc
addr16
jo
in
in
xchg
dec
or
pushf
mov
sbb
test
add
lret
call
test
mov
add
mov
enter
shlb
pop
or
sub
sbb
or
cmp
xor
movsb
mov
and
cmp
jl
fstpt
xchg
sbb
popa
inc
mov
out
ss
adc
jbe
mov
push
cwtl
xchg
sbb
inc
inc
call
sbb
jo
or
testb
lcall
loop
ret
fiadds
test
fidivl
mov
or
adc
push
sub
xchg
ds
fadd
add
sbbb
mov
pop
fcompl
xorb
or
insb
loop
xchg
std
rorl
test
adc
mov
adc
xor
lahf
inc
fcoml
shlb
nop
jo
mov
mov
mov
ret
xor
mov
ret
pusha
adc
movsb
lods
xor
and
sarl
sbb
lods
push
out
lea
fs
adc
inc
pop
sub
call
pop
mov
sbbb
mov
inc
ret
push
sbb
dec
sbb
ret
cmp
je
xchg
jl
push
xor
and
test
js
xchg
push
cmp
repnz
sahf
push
mov
fidivl
ret
mov
js
push
stos
mov
inc
dec
fadds
es
inc
pop
pop
add
rol
mov
xor
cs
mov
or
push
jp
test
into
testb
push
xor
mov
in
xor
mov
push
sbb
in
pop
jp
mov
jns
or
sahf
xor
mov
enter
add
pop
cwtl
push
add
rclb
in
xchg
nop
lods
stos
sarb
lret
insb
or
cmp
add
popf
xchg
shlb
cmp
outsl
sahf
mov
sub
jp
fs
push
lret
test
xchg
mov
dec
push
pop
mov
sub
jmp
cmp
ficoms
mov
sub
jae
and
aaa
test
inc
adc
add
xor
popa
pop
test
loopne
in
and
and
dec
mov
and
rcll
and
jo
lret
adc
ljmp
add
xchg
rcrb
inc
sbb
leave
or
mov
sbb
sbb
and
fiadds
xor
push
adc
xchg
cmp
pop
xchg
rcl
dec
jne
mov
adcb
xor
out
pop
test
adc
out
cld
dec
xchg
outsb
movsb
or
jecxz
mov
test
and
mov
test
enter
shrl
push
adc
hlt
xchg
loop
add
leave
out
cmp
addl
and
pop
je
push
lcall
lock
adc
movsl
jnp
or
clc
and
push
pop
test
xor
dec
sbb
rolb
sbb
dec
repnz
mov
push
xchg
xor
in
gs
xchg
insb
fs
mov
sbb
lret
sbb
add
add
adc
dec
nop
jb
rcll
xchg
imul
aam
clc
xor
push
mov
inc
stos
movsl
mov
les
pop
nop
mov
into
jo
inc
xor
shrb
cmp
mov
xor
mov
push
xchg
jecxz
hlt
lret
adc
push
shlb
fs
pusha
pop
adc
inc
jo
mov
pop
mov
test
sub
add
rclb
sub
pop
push
lahf
jl
mov
jb
out
add
xorb
andl
lret
cltd
push
and
pop
mov
pusha
insl
cltd
je
jbe
rorb
sbb
or
in
jnp
xor
cmp
mov
inc
xor
push
fcoml
or
in
nop
or
sti
insb
orb
inc
lods
cmpsb
xchg
mov
adc
add
and
mov
mov
push
lock
mov
jnp
std
rolb
cmp
mov
push
into
mov
push
pop
movsb
xor
cmc
push
shll
test
in
pop
jl
sahf
xchg
jecxz
sub
pusha
test
test
ret
xor
jo
adc
mov
inc
cmp
push
push
inc
lods
or
pop
adcb
loop,pn
and
pop
ljmp
pop
add
fsubs
rol
cwtl
mov
pop
adc
add
lret
int3
push
xor
and
mov
cmp
sbb
push
push
inc
das
xchg
sub
jb
push
xchg
cmp
nop
test
pop
add
pop
fs
jmp
icebp
pop
push
aam
adc
int3
out
dec
movb
fists
xchg
xor
es
cs
jecxz
xchg
dec
push
outsb
movsb
sbb
sub
loopne
push
add
mov
fnstsw
add
push
cmp
sbb
push
adc
lret
sbb
fcoms
les
or
jne
xor
pusha
push
xorb
sahf
xor
cmp
ret
insl
lock
ret
cmp
xchg
jb
ret
xor
aam
xor
outsb
sbb
ror
out
xchg
add
pop
sti
or
xor
xor
insb
ret
mov
xchg
stos
rclb
sbb
lret
mov
dec
dec
dec
xlat
inc
add
pushw
adc
sub
adcl
and
shl
jg
loop
sub
push
and
loopne
sub
dec
inc
mov
rcl
fs
pop
dec
shlb
sbb
pop
xor
mov
mov
pop
dec
movsb
fcmovnbe
add
xchg
lods
rorl
and
imull
sbb
adc
cmp
imul
mov
sbb
les
adc
mov
cmc
nop
jne
loopne
daa
test
stos
loopne
mov
test
mov
inc
pop
cli
lcall
popf
push
imul
es
pusha
gs
jb
fcomps
daa
pop
fldenv
xor
cmpb
cmp
sub
and
daa
das
mov
xchg
leave
pop
stos
xchg
in
lret
xor
sbb
retw
adc
xor
insb
lcall
pop
js
xchg
push
push
shlb
dec
inc
cmp
cmp
daa
dec
mov
add
jp
adc
scas
or
lea
or
sub
xchg
test
fadds
jp
and
mov
push
xadd
push
es
in
loope
or
pop
push
xchg
sub
inc
mov
mov
push
or
mov
test
shll
xor
push
psubsb
outsl
inc
lar
shrb
addr16
into
rcll
bound
loopne
xor
sub
imul
shll
cld
jle
push
push
or
imul
mov
sub
add
jnp
loopne
adc
enter
lods
nop
fs
pusha
pop
stc
add
repnz
mov
cmp
jbe
cmp
add
rolb
cmp
or
or
les
pop
dec
pushf
inc
mov
es
out
push
pop
pop
sub
mov
mov
addb
push
jbe
xorb
or
mov
rclb
lcall
fistpll
or
adc
dec
inc
lods
dec
outsl
or
adc
adc
js
inc
rorl
hlt
sub
fists
pop
xorb
adc
mov
bound
cmpsb
sub
xchg
addr16
ret
push
jp,pt
jo
data16
cwtl
popf
ret
fisubrl
ljmp
rorb
loope
lea
test
sbb
inc
add
shlb
sahf
xor
fs
dec
fsubrl
es
or
lods
push
push
jnp
push
dec
lahf
push
lret
xchg
mov
push
push
and
incb
decb
inc
sbb
add
xor
push
adc
fistl
mov
nop
mov
shlb
push
sub
pusha
out
addr16
push
sub
cwtl
pop
or
fisubs
mov
subb
push
lock
lcall
push
push
mov
movsl
fs
mov
jmp
inc
push
imul
aaa
jl
addl
out
pop
roll
lret
shl
or
dec
lret
inc
push
fimuls
arpl
push
clc
adc
pop
pop
loop
pop
jl
mov
les
mov
jo
out
mov
add
mov
lret
fnstcw
pop
leave
sub
add
mov
popa
scas
cmp
xorb
adc
adc
popa
scas
xor
fs
fcompl
adc
mov
push
xchg
xchg
inc
les
leave
push
xchg
mov
mov
adc
mov
nop
mov
adc
les
inc
loope
sbb
loope
mov
and
inc
sbb
mov
sbb
add
and
fmul
sbb
movsb
rcl
popl
pop
lods
cmpsb
and
or
mov
mov
xor
and
adc
cmp
mov
add
insb
mov
xor
xor
jnp
cmpsb
loop
xchg
or
out
dec
ss
cmp
push
dec
leave
add
xchg
sbb
imul
xchg
mov
je
adc
mulb
sub
sub
cmp
js
xchg
mov
cmpsl
insb
xchg
add
add
fidivrs
sbb
cwtl
xchg
lret
loope
rcrl
push
roll
js
mov
xor
inc
adc
rcll
inc
mov
mov
push
test
clc
test
popaw
mov
stos
sbb
mov
cmp
ss
call
add
je
jnp
mov
push
lods
xor
je
in
dec
sbb
cmpsb
in
dec
and
jp
mov
sub
xor
jecxz
cs
or
mov
dec
ret
test
xor
leave
cwtl
cmp
mov
popf
je
inc
and
mov
lret
jmp
aam
xchg
rcrb
mov
rorl
and
mov
cmp
sbb
cltd
or
push
fcoms
aaa
inc
or
addl
add
aam
lret
rcr
jecxz
cmpsb
je
inc
lods
push
dec
lods
popa
stos
test
sbb
loopne
xchg
ret
stos
jbe
push
ret
adc
mov
jo
test
jl
and
add
pop
mov
lods
or
adc
inc
mov
add
sbb
and
pop
ror
test
add
rclb
adc
mov
xchg
aas
stos
rol
shl
lahf
adc
or
ret
movsl
push
ret
sbb
mov
insl
lods
mov
and
es
add
mov
push
pusha
je
or
sbb
movsl
rclb
xchg
push
or
repz
adc
mov
shr
mov
enter
les
push
into
mov
pusha
push
and
insb
mov
sahf
jb
adcl
jne
rolb
adc
gs
push
cltd
fs
mov
jmp
inc
ret
fdivrl
cmp
int3
sub
lds
inc
xchg
cmpsl
addr16
repnz
data16
inc
or
xchg
xchg
int3
mov
mov
and
pop
sbb
add
mov
dec
jne
xor
cmp
ja
mov
mov
lahf
or
ret
adc
mov
xchg
cmpl
push
pop
xchg
test
jae
lea
in
sbb
dec
arpl
ljmp
fsubl
sub
and
lock
ja
movb
movl
js
mov
lods
ror
ja
fadd
out
jecxz
rclb
test
dec
jmp
and
add
test
push
cmp
push
pop
rolb
das
in
inc
fisttpll
jb
or
mov
nop
ret
jbe
and
push
mov
mov
adc
sbb
mov
mov
push
iret
add
inc
shrb
rcrb
xchg
cmp
mov
add
hlt
enter
enter
js
add
jo
add
clc
dec
fucomi
xchg
adc
dec
adcl
xor
or
push
xchg
xchg
mov
adc
jo
dec
mov
das
loopne
sub
push
jl
push
or
push
cwtl
gs
ljmp
ljmp
andb
arpl
adc
adc
sbb
fnstcw
gs
pop
push
push
enter
fdivl
fisttps
mov
sahf
inc
jp
aam
lcall
mov
leave
adc
sbb
in
dec
aaa
sbb
bound
pop
ds
push
outsb
clc
push
lods
pop
shll
xchg
movsb
dec
or
cmp
jns
pavgw
push
xor
jo
test
or
jp
dec
sbb
sub
movsl
push
outsb
sbb
adc
hlt
xchg
jmp
in
cld
xor
orl
pop
jp
or
loope
pusha
inc
push
mov
pop
jmp
scas
sarb
jbe
imul
mov
xor
rclb
sbb
rcll
ljmp
rol
jge
xchg
sbb
repz
push
xorl
dec
push
xor
lcall
add
cmp
sub
ret
dec
push
xlat
ret
js
cmp
movsl
xchg
int3
or
clc
and
push
xchg
mov
mov
in
fs
gs
xchg
sub
adc
dec
cmp
shlb
adc
add
xchg
sub
adcb
mov
inc
orl
pop
orl
sub
mov
test
adc
or
push
sbb
xor
test
lods
push
push
mov
popf
jbe
dec
jp
cmp
pushf
mov
dec
add
push
mov
xor
into
movsb
xchg
pop
adc
aaa
int3
push
js
andl
je
sbb
sbb
add
shll
cmc
subb
rolb
and
cltd
mov
adc
inc
ret
cli
mov
je
mov
mov
adc
aaa
dec
loope
xchg
mov
test
push
adc
pushf
pop
imul
push
subb
test
rcll
sbb
xchg
mov
lods
mov
mov
mov
dec
adc
stos
or
mov
mov
sub
xor
imul
insb
push
or
lahf
xchg
mov
xchg
sub
xchg
cwtl
jno
xchg
stos
cli
cmp
imul
test
and
or
adc
lock
orl
test
push
jns
arpl
mov
inc
cwtl
mov
rcll
xchg
fs
cmc
imul
add
or
cwtl
test
dec
lcall
sbb
dec
cs
mov
ret
sahf
or
lret
repz
mov
or
adc
sub
dec
popl
lods
mov
dec
adc
dec
test
dec
jnp
or
push
dec
or
pop
sub
scas
add
push
and
jg
aaa
inc
jecxz
adc
neg
pop
shl
je
or
jl
ret
jl
pop
mov
test
mov
lods
dec
arpl
and
pop
and
ror
push
xchg
in
ret
xchg
lret
adc
mov
loopne
pop
js
push
xchg
or
mov
jmp
xchg
sub
sbb
pop
and
sub
sbb
loop
push
pop
xor
inc
data16
pop
or
inc
or
fdivrl
mov
mov
cmp
mov
and
ret
shrb
call
cmp
lret
pop
mov
inc
mov
xchg
dec
sbb
mov
xor
lcall
movsb
in
test
stos
inc
sbb
sub
jno
push
mov
sub
and
insb
add
cmp
stos
mov
push
pop
adc
push
addr16
xchg
sahf
lea
mov
pop
pop
decb
rcll
shlb
pop
and
ljmp
mov
test
stos
inc
sbb
xchg
out
add
mov
pushf
lea
mov
add
push
pop
dec
sbb
push
jge
es
inc
les
icebp
cwtl
pushf
and
loop
cmp
pop
jbe
pop
pop
sbb
mov
sbb
ss
push
int3
mov
insb
dec
add
bt
mov
xchg
out
inc
sahf
outsl
dec
xorl
push
push
jp
mov
mov
cmp
cmp
add
xor
push
mov
incb
jge
lahf
xchg
push
pusha
push
push
loop
sub
insb
cmp
lock
lds
mov
int3
lcall
jbe
xchg
loope
ret
pusha
pushf
rcrb
or
cwtl
movsb
addl
mov
mov
sub
sbb
mov
mov
or
in
sub
cmp
in
mov
je
les
mov
mov
sub
stos
pop
add
pop
mov
pop
jbe
or
jae
fwait
push
aam
out
xor
xchg
push
cmpsb
sahf
add
fnstenv
xchg
sarb
daa
test
add
push
cmp
fdivp
push
ljmp
dec
jp
mov
lock
ljmp
push
adcl
div
pop
and
or
sbb
mov
xor
push
pop
push
inc
aaa
and
mov
sbb
push
jo
es
or
xchg
int3
sub
ds
or
pop
ror
cmp
inc
dec
fsubrs
and
jg
jne
pop
ret
sbb
push
sbb
bound
fwait
or
cmp
lcall
mov
and
orb
mov
in
subl
ds
scas
add
or
adc
add
sbb
dec
adc
jp
lods
loopne
add
jmp
inc
call
aam
sbb
cmpsb
add
xchg
out
inc
push
es
pop
pop
xor
jge
xchg
inc
stos
test
into
sub
add
dec
push
ror
sub
xor
mov
jmp
sahf
rcll
dec
sbb
mov
shlb
ret
or
loop
jp
xor
inc
mov
push
daa
cmp
hlt
push
hlt
mov
nop
fs
xor
add
push
xchg
pop
rcr
xor
or
add
lods
adc
jp
sub
push
dec
mov
lock
shlb
and
inc
mov
push
sahf
and
mov
enter
ss
push
push
xorb
pop
mov
sub
jecxz
cmp
cli
pushf
mov
hlt
or
push
sub
push
es
adc
test
or
test
adc
lret
fwait
sbb
push
push
xorb
aam
mov
outsl
inc
or
mov
cld
clc
sbb
add
add
pop
xchg
rorb
cmovs
fisttpl
xchg
fwait
sbbl
lcall
dec
in
lods
pop
mov
mov
inc
sbb
add
sbb
xlat
inc
loopne
xor
mov
jge
mov
loope
scas
gs
push
adc
xrelease
add
stos
stc
dec
lcall
adc
pushf
out
or
push
jecxz
pusha
push
push
add
xchg
or
aam
inc
inc
mov
popf
and
pop
xchg
push
add
movsb
cmpl
lods
in
inc
xchg
sub
mov
aam
adc
push
and
gs
adc
or
inc
add
ds
and
jno
lea
out
jge
in
xor
push
dec
pushf
push
cmp
fwait
or
jge
fidivl
xor
or
rorb
and
xorb
jo
xor
inc
push
in
sbb
sub
and
or
cmp
mov
into
enter
jo
int3
sbb
push
inc
roll
nop
sbb
mov
lock
xchg
sahf
pop
out
repz
adc
ss
inc
call
fsubrl
inc
jmp
sbb
push
jb
mov
test
pushf
xlat
or
lcall
mov
inc
loop
adc
add
shll
or
mov
cmp
dec
lock
outsb
into
and
and
mov
rorb
mov
add
addb
mov
inc
lea
push
andb
add
aam
daa
xor
ret
mov
add
jle
add
shlb
lods
and
sbb
sbb
or
mov
ret
outsb
mov
lret
fs
mov
out
in
daa
xor
cmp
adc
and
mov
xor
je
lock
xchg
adc
sbb
insb
into
push
scas
xor
ficoms
and
loop
lock
push
das
pop
or
fidivs
js
into
mov
mov
push
add
push
imul
test
pop
push
add
xchg
sub
jl,pt
orb
push
movsl
daa
xor
mov
pop
addr16
xchg
sbb
sbbl
mov
out
rorb
add
add
push
ljmp
call
xchg
clc
add
pop
add
xchg
out
inc
push
push
push
movsl
xor
xor
and
lods
mov
enter
call
jmp
mov
rolb
push
push
mov
out
loop
and
mov
js
addr16
ljmp
add
push
and
loope
pop
mov
fcoms
iret
push
and
ror
rorb
push
divl
and
rclb
cltd
xchg
xor
sub
xchg
jge
pop
push
mov
dec
pop
andb
rolb
cmp
pop
xor
jnp
and
fstpt
enter
cmp
cmp
inc
enter
adc
jno
shrb
out
or
inc
sbb
mov
je
pop
loopne
add
mov
loopne
dec
fnstcw
or
inc
sub
push
push
mov
mov
fchs
mov
pop
mov
mov
rolb
add
dec
and
je
dec
push
xor
mulb
test
adc
mov
fsubs
cmc
scas
push
add
jp
sub
push
mov
loopne
pop
in
jmp
jb,pn
repz
ja
cmc
lods
mov
and
mov
and
push
add
shlb
in
and
jp
jecxz
fmull
jle
or
pop
adc
dec
pop
pop
push
sbbb
popa
xor
inc
xchg
sbb
repnz
xchg
addl
jno
mov
cmp
dec
sbb
in
int3
fdivrl
mov
add
pushf
pop
sub
aas
icebp
test
orb
xor
nop
loope
into
dec
lret
xor
mov
ret
call
stos
rcl
cmp
cmp
arpl
add
outsb
and
and
mov
xor
rcrb
sbb
push
or
mov
les
cmp
add
push
or
ret
arpl
ss
adc
andl
xchg
sbb
xor
xor
dec
clc
add
push
mov
xchg
mov
mov
test
xchg
or
lcall
mov
xor
sub
lret
addl
pop
arpl
xchg
pushf
pop
js
xor
test
mov
addb
jbe
cmpb
dec
push
and
sbb
sbb
xchg
sbb
aam
mov
cs
or
dec
pushl
rorb
cmp
pushf
pushf
loop
mov
rcrb
test
cmpb
gs
add
mov
inc
inc
jbe
add
es
outsl
pop
test
mov
clc
or
loopne
call
mov
leave
in
in
dec
push
push
push
shrb
push
mov
xor
sbb
aam
pop
sbb
and
mov
mov
inc
sbb
clc
pushf
push
insb
push
arpl
aad
pop
sbb
add
inc
sbb
fcompl
cwtl
test
sub
lret
inc
pop
data16
js
loop
dec
addr16
pop
test
cwtl
dec
adc
test
push
and
int3
cwtl
push
out
push
shll
pop
sub
xchg
addr16
pop
or
test
or
sbbb
dec
bound
mov
mov
addr16
inc
dec
pushf
push
insb
sbb
addl
int3
inc
adc
sbb
push
sbb
jns
sbb
sbb
pop
jp
int3
inc
test
negb
das
dec
push
push
scas
mov
sbb
js
stos
mov
lods
pusha
add
mov
lds
enter
jno
sub
orl
push
mov
and
rcrb
rolb
mov
and
idivb
aad
adc
cli
sbb
xchg
mov
scas
in
inc
ret
xchg
mov
xor
pop
push
sbb
arpl
or
mov
pusha
gs
hlt
repnz
sbb
call
dec
push
fwait
clc
in
mov
shll
test
or
aaa
dec
clc
cmp
cltd
mov
call
cmp
mov
and
rol
push
inc
ss
and
stos
nop
and
mov
rcr
or
cltd
pop
gs
loop
mov
in
push
dec
jno
mov
cmc
xor
les
push
lock
mov
movsb
rolb
out
mov
jecxz
popa
hlt
cmp
enter
leave
lods
rol
and
gs
ror
in
jne
pop
and
cmp
dec
mov
push
push
mov
bound
ret
cltd
jo
fiadds
faddl
push
cmp
push
mov
sbb
sub
testb
and
mov
xor
clc
jbe
add
mov
ffreep
jmp
sub
mov
lods
cmp
sub
sub
cmp
mov
leave
cmp
jne
sahf
dec
add
jmp
gs
stos
inc
lret
and
cmp
push
jo
xchg
popa
add
or
xor
or
or
fstps
jp
push
sub
jb
dec
dec
cmp
test
sub
inc
bound
add
add
pop
lds
subb
xor
movsl
es
pushf
mov
adc
ja
flds
pop
int3
ret
cltd
ss
fsubrl
jb
cmpsl
adc
inc
jmp
adc
test
cltd
jo
dec
pop
das
loope
xor
push
fs
sbb
adcb
mov
xor
test
inc
mov
pop
jo
xchg
adc
adc
or
lret
or
hlt
xor
cmpb
xchg
or
hlt
cltd
insb
push
cmpsl
xchg
lea
mov
loop
adc
cmp
push
insl
add
xchg
in
xchg
test
pushf
and
and
or
lds
mov
pop
cmpsb
cmpsl
sbb
sub
in
or
xor
pop
ljmp
or
cmpsl
inc
sbb
xor
add
fdivs
or
cmc
cwtl
cmp
lock
test
sbbb
mov
xchg
adc
cmp
nop
cmpb
lcall
xor
movsb
and
insw
loopne
push
mov
cmp
push
xor
and
lods
jecxz
pushf
lock
flds
mov
rclb
jp
popa
push
shr
xor
mov
add
jbe
scas
rorb
loope
rcll
outsl
xlat
test
xchg
daa
add
push
mov
lds
xchg
shlb
bound
pop
es
loop
into
lods
mov
addr16
aam
pushf
int3
dec
and
les
rcrb
sbb
clc
add
pushf
or
rcrl
push
jmp
rolb
sbb
mov
xchg
cmpsl
js
or
pop
inc
fstpl
mov
dec
lods
ss
sub
or
sbbb
ret
cmp
jo
dec
popa
xor
mov
ljmp
cmpb
add
popf
dec
xor
or
shll
mov
add
insl
je
aam
xor
scas
pop
cmpsl
jp
push
add
add
inc
xlat
add
adc
push
push
mov
push
js
adc
adc
roll
scas
add
push
pushf
inc
add
mov
xchg
xor
dec
jg
fistpl
add
push
inc
push
dec
dec
xor
push
ss
add
sub
out
std
fiadds
xor
inc
andb
loopne
sub
call
jnp
push
mov
jns
shll
jno
inc
gs
pop
repz
or
hlt
in
cmpsb
mov
ja
in
xlat
xchg
add
jb
sub
ja
fisubrs
js
jns
add
inc
dec
dec
sahf
out
loopne
push
push
pop
fidivl
lock
xor
lcall
jmp
jno
cmpb
enter
outsl
push
sarl
jp
mov
incl
out
fwait
add
in
jle
movsb
pop
sbb
xchg
cmpsl
jns
mov
fisubrs
daa
lods
xlat
decl
pop
push
or
repnz
push
xor
xchg
inc
push
adc
mov
daa
incl
mov
jge
sub
andb
sub
xlat
and
inc
rclb
mov
aaa
and
mov
repz
xchg
mov
push
mov
lcall
setb
stc
fnstcw
pop
xchg
enter
mov
insl
jle
ret
xchg
xchg
jo
pusha
xor
lds
push
mov
sub
xchg
mov
hlt
out
jl
xor
pop
xor
aas
jo
dec
test
lcall
or
dec
or
mov
loop
adc
cmp
ja
mov
cmpsl
into
mov
dec
and
loop
or
push
sub
rorb
popf
stc
jge
loope
popa
int
fdivs
lcall
inc
push
sbb
daa
add
data16
in
and
pop
out
test
xchg
xor
call
insb
jmp
and
xlat
lret
xor
ss
in
hlt
adc
pop
cs
push
icebp
jmp
loop
stc
lds
jno
jle
frstor
and
je
adc
jmp
jecxz
push
mov
sahf
sub
shl
add
shl
aas
sub
popf
shl
cwtl
enter
mov
jl
ret
xchg
xor
mov
fisubrl
ljmp
sub
or
test
insl
jnp
xchg
cmp
or
mov
call
mov
add
inc
adc
xor
mov
lods
lret
mov
in
cmp
fdivs
fcomip
lcall
cs
je
pusha
ret
and
sub
cmp
lock
decl
mov
or
mov
pusha
push
cwtl
cltd
sub
pop
push
movsb
inc
lcall
bound
int3
pop
ljmp
fcoml
ja,pn
loope
sub
xchg
call
sbb
jns
sub
jle
jae
dec
mov
fnstsw
scas
mov
jb
xchg
pushl
cmpsb
and
loop
xchg
dec
lods
sbb
testl
mov
incl
pop
add
dec
stc
sti
inc
jae
addb
jno
cld
cmp
call
pop
cmp
out
popa
add
bound
dec
xchg
jmp
pop
or
sub
xchg
lea
lds
cmp
xor
sbb
jg
mov
jmp
jmp
pop
loop
jo
call
das
sub
cmpl
jg
mov
and
jbe
je
test
cmpsl
jmp
js
cmp
jg
mov
xlat
jmp
clc
loopne
pop
rclb
subl
aaa
orl
sbb
movb
lcall
out
ret
fs
adc
call
jbe
jno
and
outsl
cli
call
loopne
cltd
mov
ret
or
and
das
add
jg
iret
lock
decl
imul
mov
mov
push
push
jecxz
cmp
mov
cld
pop
in
hlt
shr
pop
mov
mov
adc
lods
jae
call
push
mov
sub
adc
mov
outsb
gs
push
ljmp
outsl
in
enter
jno
aas
sbb
mov
push
or
mov
pop
mov
or
popf
inc
sub
or
out
out
mov
mov
pop
mov
mov
pand
cmp
xorl
xor
stos
dec
daa
mov
arpl
inc
jmp
hlt
xor
and
jp
jge
push
or
xchg
outsl
and
cs
dec
idiv
aaa
std
lcall
pop
inc
mov
sub
ljmp
flds
imull
ljmp
mov
out
and
mov
push
inc
cmp
mov
shll
ljmp
sbb
mov
ljmp
xor
push
inc
push
shlb
lret
jmp
lcall
jb
pop
test
sub
fsubrl
ret
mov
jbe
test
add
insb
xchg
arpl
mov
and
out
call
test
test
pop
jmp
lods
inc
cmpsb
dec
pop
cltd
cld
xlat
cmp
xchg
ror
out
cmp
nop
xchg
and
push
addr16
cmp
sbb
cmp
dec
sub
push
sbb
dec
das
jb
mov
out
movsb
or
repnz
or
jp
cmc
jg
fildl
jns
lcall
xor
inc
push
xlat
or
sbb
jne
clc
jle
push
int3
add
leave
mov
das
call
mov
cmpl
sbb
clc
pop
cmp
xor
gs
imul
dec
jmp
xor
mov
imul
pusha
repnz
orb
ljmp
mov
cli
mov
inc
xor
jl
into
cmp
std
mov
adc
movsl
jae
bnd
add
mul
pop
cmp
call
lcall
lcall
jb
xchg
dec
andl
cs
mov
call
jp
mov
shlb
adc
call
aaa
je
fdivs
fbstp
and
and
jg
mov
sub
sbb
mov
aam
jg
inc
cltd
out
adc
jmp
sbb
int
mov
mov
scas
stos
arpl
cmpsl
imul
inc
pop
dec
dec
cmpsl
jbe
dec
je
sbb
push
sarb
shrl
lods
je
cmpb
jle
xor
jmp
or
pop
repz
xchg
outsl
pop
popf
in
fcompl
das
lds
dec
je
fmull
lret
lcall
lcall
fcmovne
mov
imulb
push
ss
adc
push
push
loop
incl
pop
out
and
popa
loopne
push
push
notb
fcmove
imul
jmp
cltd
xor
add
or
insl
outsb
outsb
push
into
or
in
or
fcoml
dec
imul
fsubrl
lock
dec
xor
arpl
jg
cmp
lcall
cmp
xchg
and
mov
add
in
xchg
enter
sbb
jmp
jmp
mov
mov
out
pop
dec
dec
movsb
addb
fbld
jmp
mov
xchg
dec
fstpl
arpl
loop
xchg
mov
lea
ret
jl
test
call
xchg
outsb
insb
pop
frstor
push
icebp
push
xor
ljmp
call
std
dec
xchg
or
cmpsl
mov
shrl
dec
ds
decl
add
sub
push
lahf
mov
jl
jecxz
push
adc
sub
fdivp
test
mov
outsb
push
inc
add
cmp
mov
out
add
add
loopne
pop
loopne
clc
test
xchg
mov
mov
jmp
fldl
inc
aaa
jp
inc
push
out
aam
sbb
dec
jp
lahf
cmp
ja
or
xchg
adc
mov
push
push
lret
je
adc
pop
cmp
das
ss
xchg
xor
aad
js
int3
sbb
test
insl
xchg
or
pop
or
add
jg
in
push
pushf
out
ret
adc
mov
mov
out
incl
decb
in
jmp
push
xor
push
aam
sub
incl
loop
insb
jmp
sahf
mov
jbe
pop
insb
jecxz
mov
push
adc
inc
jmp
call
jns
cltd
xchg
mov
mov
xor
int
aaa
fnop
sbb
dec
shrl
mov
pushl
nop
sub
sbb
out
jnp
or
ficomps
arpl
incl
aad
jnp
or
jb
xor
out
sarb
loop
popa
mov
push
fildll
arpl
iret
push
xchg
mov
lcall
push
xchg
adc
or
roll
inc
add
repnz
cmpsl
xchg
push
dec
and
call
cmp
mov
fdiv
xchg
shlb
loop
cmpsl
cltd
aad
jg
jg
movsb
sub
fstpt
fs
adc
gs
es
int
mov
mov
js
mov
fdivs
mov
sbb
sub
sub
decl
mov
xchg
daa
bound
mulb
mov
push
loopne
jmp
mov
clc
jmp
cmpb
push
and
mov
and
inc
jge
dec
mov
jns
pop
pop
out
sbb
xchg
sahf
push
inc
inc
lods
jnp
lds
inc
xchg
daa
mov
sbb
mov
movsl
into
lret
movl
lcall
jmp
or
daa
sub
fwait
stc
jns
ret
into
pop
shlb
sbb
and
scas
xor
cmp
cld
call
jbe
data16
rol
sub
decl
out
push
push
mov
jle
popa
cli
insl
test
add
jnp
mov
rcrb
dec
clc
cld
in
arpl
mov
jno
add
loop
jno
sbb
cmp
lcall
lea
fidivl
enter
or
pop
dec
mov
push
std
jg
or
jmp
ret
cltd
sub
xchg
and
fdivrs
mov
jl
push
push
push
shrl
sbb
mov
jbe
es
jno
orl
sbb
or
jnp
dec
lods
insl
xchg
popf
stos
shufps
xor
lds
xchg
ljmp
xor
sbb
push
pop
fadd
aas
xor
stc
movsl
jg
sahf
sub
sbbb
mov
cs
and
mov
out
pusha
inc
jle
cwtl
int3
repz
sub
cmpsl
dec
inc
pop
xchg
cld
cli
insl
inc
fidivrs
mov
and
or
sarl
pop
inc
or
fwait
xor
call
enter
push
fisttps
pop
out
insb
les
push
cs
mov
inc
fistps
imul
in
lcall
fidivs
outsl
loope
pop
rolb
pop
sbb
mov
mov
jecxz
ljmp
clc
rolb
into
mov
cs
push
cmp
test
loope
mov
fdivrp
ljmp
jne
pushf
jg
inc
nopl
cmp
into
aad
dec
ret
lahf
pop
sub
mov
call
push
pop
mov
movsb
inc
xor
mov
cmp
xchg
cmp
shll
decl
adc
je
in
les
into
add
jo
cwtl
and
adc
jg
pusha
pop
mov
decb
xchg
pushl
cmp
push
sbb
jmp
adc
mov
test
shl
lcall
aas
sub
repnz
cwtd
bound
std
lcall
mov
imul
mov
sti
pop
pop
push
jns
pop
lds
push
xchg
stos
fldl
incl
cld
mov
xor
adc
push
push
pop
dec
jmp
aaa
lcall
call
ret
mov
mov
daa
sti
dec
scas
test
sbb
xor
push
xchg
call
or
pop
movsl
loopne
lea
cli
icebp
mov
push
xor
or
mov
ljmp
and
jb
sub
lea
sub
pop
lret
inc
outsb
iret
inc
call
xor
xor
inc
incl
fdivl
pop
out
nop
mov
mov
aaa
out
sbb
call
std
ffree
push
jmp
call
jns
pop
jns
sub
lcall
call
ss
lea
or
or
ret
mov
mov
daa
int
ja
push
ds
arpl
call
fcompl
call
cwtl
adc
aas
cli
and
cmp
xadd
es
lahf
iret
jmp
cmp
xor
test
mov
sbb
mov
fnstcw
ljmp
cmp
lea
incl
jo
inc
pop
lock
mov
and
xchg
dec
int3
inc
inc
clc
js
add
inc
mov
aad
inc
movsl
lods
push
sti
sbb
push
sub
dec
shr
rorl
mov
jmp
loope
cmpsl
jns
dec
xorb
enter
jnp
sub
lret
or
mov
mov
lock
cld
subl
jns
ds
leave
out
out
cli
ffreep
test
and
pushf
push
mov
sbb
add
sti
ljmp
xchg
enter
test
fs
jmp
lret
adc
mov
jg
jns
pop
cmp
aas
ret
je
mul
je
jle,pn
fstpt
push
dec
mov
aam
mov
sub
outsl
hlt
outsl
or
dec
arpl
shll
mov
cmp
bound
negb
repnz
lock
orb
push
dec
clc
xchg
sub
pop
cmp
inc
int
fistps
divl
sub
inc
lahf
shll
mov
or
cmp
sub
decl
pop
test
xchg
xchg
std
dec
adcl
in
add
mov
mov
decl
ds
push
xlat
gs
inc
jae
pop
jb
nop
cld
ret
ret
fwait
notl
add
repnz
fistps
lcall
les
sub
addr16
cmp
sub
decl
hlt
xlat
xchg
push
adc
cmp
cmp
xchg
or
jns
jp
ljmp
idiv
enter
pop
push
or
cmpsl
scas
daa
or
outsl
mov
cmp
decl
mov
adc
push
inc
outsb
xchg
mov
pusha
xchg
fidivrl
sar
sarb
push
sub
imul
mov
lcall
mov
jg
ljmp
and
cmc
mov
imul
aas
adc
pusha
mov
cmpsb
ljmp
mov
xlat
das
std
fcoml
mov
mov
dec
mov
cmc
mov
pusha
cmp
mov
or
xchg
xor
pushl
loopne
mov
push
arpl
cmpsl
orb
xchg
das
pop
sbb
stos
mov
jmp
lods
mov
ja
aas
add
loopne
mov
mov
outsb
jno
cmp
jns
dec
mov
push
or
fs
test
add
push
int3
push
testb
scas
pop
add
jmp
jo
bound
or
jbe
das
lock
cli
mov
pop
in
sbb
inc
pushl
add
mov
mov
hlt
cmpsb
sbb
jmp
outsl
repz
mov
in
incl
push
xchg
xchg
jne
iret
iret
push
aam
cmp
add
xlat
mov
scas
jbe
test
call
xlat
frstor
push
call
out
jae
repnz
stos
in
movsl
adc
or
mov
arpl
movaps
and
stos
leave
aad
icebp
movsb
dec
scas
jp
out
out
pop
stos
mov
movsb
loope
inc
gs
fisubl
loop
dec
hlt
jne
push
add
jns
xor
mov
ljmp
push
iret
mov
aas
or
mov
inc
aas
fcoms
xor
movsl
pushl
aaa
cmpsb
pop
pop
inc
aaa
sub
sahf
movsl
or
push
and
insb
adc
fnstcw
sti
cmp
mov
inc
add
lahf
movsb
xchg
leave
call
mov
loop
pop
mov
fisttpl
xchg
mov
xchg
ljmp
popf
xor
xchg
xor
jo
cmp
loop
push
dec
adc
dec
ljmp
push
fcomps
je
push
mov
loop
hlt
jae
loop
mov
inc
or
pop
xor
pushl
jl
dec
loope
mov
xchg
test
int
jae
hlt
and
mov
rorl
lods
dec
pop
add
sahf
ret
push
sub
aad
icebp
insl
nop
dec
lahf
lret
mov
mov
lods
lock
dec
add
jg
push
notb
adc
or
jnp
xor
loopne
jo
leave
inc
pop
pop
es
add
jg
loopne
shlb
jmp
rorl
push
cmpsl
cs
jbe
xchg
rorl
ja
cmp
inc
push
daa
gs
or
call
adc
cld
fnclex
cmp
imul
mov
icebp
repnz
loope
push
pop
popa
mov
add
incl
or
dec
mov
dec
lea
insb
sbb
add
fs
std
subl
xchg
pop
xchg
movsb
out
cmpsb
arpl
mov
fwait
inc
aas
inc
push
sbb
lcall
push
out
es
jmp
dec
xor
int
test
mov
pop
fbstp
call
jle
mov
push
cmc
in
push
jo
mov
or
ror
pop
call
push
sub
pop
roll
xchg
push
inc
adc
pushl
pop
push
and
mov
repnz
mov
mov
in
cmp
lea
rcll
xchg
and
adc
adc
dec
fnsave
stos
js
dec
repnz
lret
ljmp
arpl
jmp
cli
rolb
lock
sub
inc
scas
pusha
dec
inc
test
xchg
and
in
loopne
inc
xchg
push
mov
xchg
and
sbb
xor
std
xchg
push
call
jo
push
sub
jge
xor
mov
test
jmp
shl
mov
or
dec
gs
cltd
push
imul
loope
mov
decl
or
test
lock
sub
jl
sbb
pop
jp
call
jns
and
outsb
push
popa
xchg
pop
push
subb
rorl
xlat
iret
sbb
es
mov
add
jp
imul
loop
movb
incl
xor
sar
add
push
push
pop
aam
or
shrl
je
sti
jge
stc
inc
jg
call
mov
adc
ss
push
cmp
sub
scas
or
gs
lcall
out
pop
mov
dec
xlat
cmp
ret
pop
std
das
scas
enter
movsb
xor
push
inc
fadd
test
mov
decl
cmp
fstpt
enter
xchg
mov
ss
cld
sahf
adc
sbb
push
xchg
call
cld
sti
imull
xor
add
push
pusha
stc
xor
dec
or
mov
adc
mov
incl
adc
xchg
repnz
pop
aas
scas
mov
ror
push
mov
test
fcmovb
cmp
outsl
ljmp
hlt
shrl
or
pop
mov
rcr
push
mov
lods
mov
mov
out
xchg
aam
xlat
mov
rcrb
int
jb
test
xor
dec
dec
add
nop
test
xchg
mov
sub
lcall
roll
scas
pushf
xchg
cwtl
push
mov
mov
clc
insb
sbb
cs
cmpb
jmp
mov
mov
incl
dec
ret
or
pop
adc
sti
icebp
xchg
and
sub
mov
xor
outsl
lret
push
ret
ljmp
not
cmp
lds
aad
fld
xchg
iret
pop
not
mov
jg
loop
jae
adc
testb
mov
mov
or
imul
pop
cld
std
fisttpll
and
mov
xor
int
cmpsb
or
pushl
pop
mov
sub
or
std
ret
mov
popf
mov
pusha
sbb
lock
test
sbb
xchg
cmp
idivl
add
fmull
clc
ljmp
in
lds
sbb
imull
inc
add
mov
and
out
rclb
lods
iret
push
icebp
lcall
js
icebp
lds
test
ds
hlt
or
sti
cltd
and
fcomip
ljmp
mov
setg
test
out
fwait
cmp
mov
adc
ljmp
jg
add
shrb
inc
mov
fcoms
inc
iret
ret
xor
adc
mov
mov
sti
mov
or
adc
addb
jg
in
ljmp
testl
decl
mov
dec
or
pop
pusha
sbb
push
xchg
push
imul
add
jg
mov
fdiv
loope
adc
push
scas
xorb
insl
lea
imul
xor
call
jne
mov
mov
out
or
dec
fildl
movsb
addr16
dec
or
daa
popa
mov
lcall
cmpsl
daa
daa
dec
sahf
adc
cmp
adc
inc
ficoms
or
push
sub
mov
add
pop
xor
add
icebp
dec
push
cwtl
inc
stc
sub
sbb
bound
in
xchg
leave
and
outsl
clc
pop
cmc
sub
lret
mov
movsl
imull
data16
pop
aam
stos
call
orb
and
das
and
cmp
sbb
jl
cwtl
push
and
decl
fs
movsb
dec
inc
paddd
sub
fcos
jmp
test
mov
rolb
push
aam
rcrb
lock
outsb
movsb
xor
ret
jne
bts
inc
adcl
lock
idivb
stos
push
xlat
addr16
loopne
decl
popa
sub
sbb
addr16
imul
pop
push
mov
lcall
mov
mov
ret
pop
xchg
pop
stc
fnstcw
add
dec
ds
or
dec
std
je
jb
push
sbb
dec
jle
dec
fnsave
pushl
mov
mov
adc
mov
sub
or
in
mov
icebp
popa
decl
xchg
daa
xor
and
fstps
lret
xchg
xchg
pop
xchg
sahf
jge
xchg
pop
lods
sbb
or
xchg
mov
xchg
adc
push
jg
mov
orb
push
int
daa
mov
sbb
jmp
test
int
test
xor
lea
jo
sub
scas
adc
xchg
insl
mov
les
incl
icebp
push
pop
imul
jl
mov
mov
ljmp
mov
sbb
mov
es
mov
and
mov
jmp
ljmp
inc
popf
fwait
js
xor
mov
mov
jmp
jl
jae
pop
cmp
fcoml
notl
out
cmc
fcoml
mov
test
cmp
stos
call
mov
call
mov
cmpsl
add
lods
jno
scas
loop
inc
mov
ljmp
push
add
inc
mov
lcall
out
int3
jmp
inc
je
movsb
jmp
ret
cmp
cmp
in
pop
xor
fsubrl
jb
pop
nop
jecxz
outsb
loope
jge
pop
int3
mov
cmp
popa
testl
mov
jmp
xlat
mov
rclb
pop
dec
loop
dec
mov
cltd
in
push
fildl
push
into
pop
cmpsb
jecxz
leave
pop
gs
push
lods
sub
xchg
pop
ljmp
xchg
and
stos
lmsw
test
sti
adcl
and
out
pop
mov
fbld
push
les
mov
mov
out
and
sub
out
mov
pop
out
jle
ljmp
mov
mov
cmp
mov
gs
cld
pop
clc
sub
mov
insb
fcmovbe
inc
rorb
iret
cltd
cmp
enter
xchg
mov
jg
outsl
cmpsb
push
ss
scas
popa
icebp
push
pop
inc
pop
rorb
lahf
dec
scas
fcomi
ljmp
sub
mov
push
dec
loop
xor
sub
in
ljmp
cli
pop
lcall
jb
test
ficoml
inc
fistpl
arpl
add
and
call
add
inc
outsl
das
sti
mov
mov
call
xor
scas
stc
or
lods
jmp
mov
sti
ficoms
or
sbb
xor
add
call
xchg
or
jno
stc
push
xchg
lcall
test
inc
xchg
mov
cmp
cmp
out
cmp
or
out
mov
and
push
add
sub
fmuls
push
hlt
pushl
jbe
aas
sar
cmp
and
adc
outsb
lret
cmpsl
mov
sbb
mov
inc
inc
ljmp
mov
xchg
mov
shrb
push
pop
data16
push
mov
decl
pop
ljmp
je
mov
jae
xor
aad
jg
xchg
movsb
aam
or
aas
jmp
ja
xchg
aad
sub
psrld
jnp
xchg
ljmp
pop
inc
jns
mov
dec
push
jae
jge
jp
sbb
push
lea
pop
mov
sbb
xor
pop
int3
xor
lea
pusha
mov
xor
repz
add
out
ja
pop
cmp
fidivl
stos
fwait
into
mov
mov
jge
mov
sbb
xchg
mov
ret
xchg
push
cld
mov
pushf
sbb
cli
in
scas
push
mov
out
adc
add
adc
sbb
incl
test
add
xchg
sub
xchg
push
xchg
iret
out
jecxz
jnp
sbb
pop
lock
out
adc
sbb
ss
push
call
mov
mov
sti
popa
adc
cs
jg
jle
adc
sub
clc
mov
sub
cld
incb
adc
loopne
jmp
lods
ja
lcall
xor
das
mov
iret
movl
mov
ljmp
enter
push
adc
xor
sub
push
dec
faddp
js
pop
and
sbb
jno
push
inc
in
sbbl
adc
and
jo
cmp
scas
jns
push
lock
fisttpll
and
xchg
bswap
push
push
push
rorb
sub
pop
sbb
push
aas
das
push
in
mov
fldt
or
mov
incl
sub
jp
ja
cmc
push
xchg
push
clc
fcomip
faddl
jo
xchg
dec
sarb
sahf
xchg
xor
sbb
incl
fidivl
mov
or
pop
movsb
int3
mov
sti
push
mov
lock
shlb
mov
pushf
movsl
repz
les
call
hlt
ret
mov
add
mov
xchg
jnp
cmpsl
dec
and
and
push
addr16
pop
in
ljmp
adc
mov
sbb
mov
mov
aam
ljmp
cmp
loop
xor
jno
das
add
pop
or
mov
sbb
popf
sub
pop
in
push
mov
inc
add
arpl
add
mov
mov
push
clc
and
lds
shlb
xchg
fists
push
aas
fsubrl
pop
out
bound
incl
or
mov
rcr
cltd
jno
jno
dec
push
push
mov
fcomip
incl
push
jb
je
push
jle
je
lret
mov
pop
shll
call
data16
fsubl
xchg
mov
xchg
fwait
stos
daa
jne
jns
sub
pmaddwd
pushl
ss
xor
mov
inc
sub
insl
sub
fists
or
mov
sbb
clc
arpl
sub
lcall
push
push
adcb
ficompl
aaa
mov
dec
add
ja
sbb
jle
sub
popf
mov
mov
mov
inc
in
lret
mov
jbe
fs
xchg
dec
movsb
out
pop
dec
out
jo
aaa
lods
mov
pushf
fsubrl
ljmp
push
pushf
sarb
hlt
mov
mov
cmp
insl
iret
jg
pushl
xchg
mov
adc
dec
xchg
jge
sub
imul
cmpb
dec
daa
nop
fwait
push
sbb
or
fadds
cmp
pop
pop
xchg
testb
clc
push
jb
push
imul
xchg
int
stos
hlt
dec
mov
push
repz
lds
int
jnp
lods
repz
dec
ljmp
sub
movsb
clc
out
in
push
pusha
por
jg
jmp
dec
aaa
cld
dec
push
mov
xor
mov
push
mov
sub
aad
pushl
outsl
xorb
aad
lret
cltd
add
jno
bound
xor
xchg
push
sbb
sbb
sbb
and
mov
sbb
enter
push
inc
aaa
add
mov
lcall
ror
xor
mov
in
ja
test
inc
jns
decl
pusha
rolb
push
sbb
push
fidivrs
xchg
push
in
setg
andl
add
out
fadd
cmp
cmp
push
inc
test
lock
ljmp
and
addb
insl
cmpsb
push
push
and
aam
inc
dec
push
pop
push
mov
fcomip
pushl
mov
pop
mov
fsubrl
ss
push
fdivrs
in
and
pop
nop
fucomi
adc
lea
enter
repnz
dec
push
das
mov
jle
dec
cmp
jle
fcoms
xchg
and
push
addr16
cmpb
aad
mov
fdivrs
insl
xor
mov
decl
out
iret
in
sbb
outsl
in
imul
insl
mov
movsl
mov
cmp
decl
dec
adc
jecxz
les
xlat
sbb
add
jge
cltd
cli
sbb
shlb
scas
pushl
cs
or
sbb
inc
push
adc
fwait
push
or
idiv
in
xor
int3
mov
adc
mov
movsl
daa
insb
mov
clc
enter
fisubl
lcall
sub
inc
pop
or
pushf
push
pop
mov
mov
jmp
fwait
jb
mov
jno
inc
push
push
push
push
pop
orb
test
incl
cmpsl
pop
or
xchg
or
cltd
mov
in
mov
mov
call
sbb
mov
insl
in
or
ljmp
stc
ret
call
fdivrs
and
fwait
inc
mov
dec
jb
adc
insb
lock
les
sar
outsl
clc
jmp
decl
xchg
iret
cmp
push
in
pusha
xor
xor
std
call
insb
sarl
adc
xor
cmpsl
mov
subb
decl
pop
imul
xchg
call
add
sub
out
dec
js
popa
lods
pushf
mov
popa
or
stos
pop
pop
js
mov
nop
movsl
mov
ffreep
add
pop
pop
push
cld
dec
mov
jnp
fistpll
addr16
push
repnz
add
fcomi
or
xor
jmp
insl
pop
jecxz
push
ficomps
aad
inc
scas
inc
xchg
cmpsb
outsb
ds
popf
fildll
push
add
fisubs
mov
test
pusha
xor
pop
decl
decl
add
lods
into
imul
mov
mov
push
out
aad
mov
test
gs
mov
das
sbb
pop
addr16
inc
adc
in
and
repnz
mov
int3
data16
call
mov
scas
icebp
movsb
add
pop
scas
push
lret
cwtl
push
imul
jle
incl
dec
mov
xchg
imul
aaa
jbe
testb
mov
xchg
jecxz
sbbb
sar
cmp
push
cltd
cmpsl
ja
imul
mov
cli
sahf
sti
add
xor
pop
xor
js
cltd
ud0
incl
out
pop
mov
test
mov
cmp
out
push
mov
sbb
fs
add
call
sarl
jge
push
lret
mov
mov
fbld
dec
cmp
imul
jmp
fs
add
aas
rcl
mov
stos
mov
adc
xchg
fistl
mov
xchg
sbb
dec
push
fcompl
std
inc
out
jae
push
sbb
nop
dec
xorl
add
mov
popf
cwtl
inc
xor
jmp
inc
ja
stos
lret
ss
bound
xor
mov
jmp
dec
pop
xor
mov
add
insl
adc
mov
push
das
test
mov
cmp
ljmp
mov
test
pop
push
lods
adc
mov
adc
dec
pop
mov
mov
xor
daa
dec
pop
add
insb
leave
add
ja
pop
adc
fistps
mov
push
adc
out
xchg
fcoms
faddl
gs
push
mov
fsubrs
push
jg
ljmp
outsb
sbb
adc
jno
loope
in
dec
jae
cmp
inc
mov
out
push
cmpsb
ds
lcall
outsb
lahf
lcall
test
stos
arpl
pushf
and
mov
mov
inc
imul
dec
out
ljmp
inc
stc
jg
mov
inc
mov
cmpsl
adc
push
xchg
stc
mov
dec
fadd
pusha
js
repz
xor
pop
jle
arpl
fcomip
ljmp
mov
mov
and
xchg
sbb
cmp
add
xchg
push
test
or
jmp
out
frstor
xor
xchg
add
into
mov
inc
and
fsubr
das
sbb
incl
mov
inc
shr
pop
sbb
call
mov
aas
mov
jmp
push
sub
dec
clc
sub
out
out
aas
out
std
aam
xchg
jbe
bound
out
pushl
ret
sbb
dec
pop
ds
popa
lahf
adcb
ret
fs
cmpsl
repnz
shr
mov
cld
mov
bsr
fildll
jecxz
mov
push
mov
jb
fcomip
cld
iret
pop
enter
out
jb
mov
aam
xchg
aaa
andb
lret
push
mov
scas
lock
lcall
inc
inc
inc
fucomip
outsl
sub
mov
in
lcall
sub
das
cli
pop
mov
das
inc
jmp
xchg
imul
push
aad
ljmp
mov
pop
out
cmp
test
inc
inc
sbb
out
dec
mov
call
addr16
scas
clc
decl
out
mov
mov
xor
adc
jge
push
adc
inc
push
in
and
fnsave
idivb
lret
cltd
inc
add
std
push
sar
mov
rclb
adc
into
xor
and
ljmp
out
fst
push
inc
mov
xor
and
aam
inc
mov
lea
dec
mov
push
fidivl
mov
pushl
ds
movsb
pop
dec
inc
shlb
xor
clc
push
sub
push
in
xchg
mov
ljmp
test
xor
shll
pop
add
leave
jp
push
xchg
cmp
scas
xor
dec
jmp
mov
xchg
imulb
stc
push
jns
xor
mov
call
loopne
adc
ss
pop
adc
push
cmp
cmp
sub
mov
inc
incl
cld
andb
lds
pusha
into
mov
loope
mov
cmp
pop
push
data16
mov
jae
adc
inc
loopne
stos
jne
mov
scas
pop
mov
push
lea
repz
xchg
inc
jne
adc
adc
fwait
daa
push
enter
mov
stos
mov
dec
jns
outsb
ljmp
in
ret
mov
ficomps
stos
jbe
stos
icebp
push
fwait
mov
jns
push
call
dec
mov
out
loop
and
push
movsb
cmpsl
outsb
adc
sbb
push
outsb
sub
loop
mov
call
pushf
xchg
lret
add
xchg
add
mov
sub
pushf
cmp
push
sbb
push
mov
lcall
out
inc
iret
aas
pop
and
mov
mov
aaa
scas
jl
stos
xchg
jnp
daa
xchg
loope
insl
sub
decl
jb
cmc
ss
repz
mov
dec
fbstp
pop
lea
mov
js
pop
xchg
mov
mov
js
fnstenv
jmp
xchg
jne
popf
xchg
or
add
popf
out
push
fwait
pop
addb
mov
ljmp
sahf
add
dec
inc
and
push
mov
inc
out
icebp
and
mov
lcall
pop
sub
rorb
lret
inc
es
repz
push
enter
outsl
and
mov
sbb
jno
pushl
adc
xchg
fwait
dec
cwtl
push
push
clc
cmp
pusha
in
jo
mov
and
ljmp
inc
test
fxch
pop
jbe
fadd
lcall
mov
cwtl
pop
aam
imul
mov
mov
push
xchg
in
decl
clc
push
imul
jecxz
mov
mov
cmp
cld
mov
int3
scas
sbb
int
in
inc
adc
jmp
cmp
scas
add
sbb
add
xchg
mov
sub
cmp
add
dec
lds
ret
andl
decl
inc
out
adc
movsl
sub
mov
adc
jecxz
std
inc
pushl
push
ret
insl
lea
cltd
or
loop
scas
loopne
and
sub
pop
jo
and
pop
cmp
nop
mov
hlt
lret
dec
xchg
pop
clc
inc
pop
subb
push
std
ljmp
sbb
mov
sbb
into
sub
sub
nop
push
mov
clc
push
mov
mov
data16
cli
leave
lods
fs
inc
out
shlb
or
push
repnz
fwait
mov
js
push
lock
jg
xor
mov
mov
out
mov
hlt
ljmp
cmp
decl
xchg
fs
rcrl
les
jb
xor
sti
es
out
gs
repz
call
jae
push
dec
jae
cmpsl
jnp
loop
jnp
cmp
push
sub
ret
sbb
mov
aas
pop
test
ffreep
mov
ja
js
adc
fbstp
inc
ret
scas
aaa
hlt
lahf
dec
lcall
lea
test
out
es
aaa
idivl
xchg
inc
mov
sub
je
jmp
mov
into
push
test
and
scas
fisttpll
push
pop
popa
lcall
mov
mov
push
mov
add
inc
mov
std
xor
mov
stos
movsl
rol
lcall
add
in
mov
ds
pop
lfs
jb
aaa
mov
xchg
bound
push
jne
outsl
add
ljmp
and
dec
lret
inc
sub
jmp
cld
sbb
inc
fsub
in
sbbb
pop
and
sbb
cld
jle
cmpl
push
xchg
loop
lcall
fcoml
mov
push
js
sti
popa
pop
sbb
dec
sbb
mov
fdivrp
call
pop
add
mov
out
push
xor
pop
mov
movsl
xchg
jp
out
nop
fsubs
cwtl
push
jno
sub
mov
jle
aaa
lock
xchg
loope
adc
jnp
or
jg
jg
aaa
aad
lret
fcompl
xchg
mov
inc
nop
add
decl
cmp
jb
jo
push
sub
popf
stc
ds
dec
push
and
mov
ljmp
sti
or
insl
add
mov
std
test
mov
scas
in
ficoml
pushf
aas
ss
xchg
sarl
inc
std
loope
push
mov
pushf
stos
dec
jp
mov
sbb
cs
sahf
mov
dec
pop
addr16
iret
mov
jmp
cld
int3
push
mov
ret
xchg
jne
repz
loopne
dec
mov
xchg
pop
bound
cli
out
jne
mov
mov
ljmp
xchg
cld
sub
push
aad
hlt
nop
mov
call
rcl
scas
shrl
or
pushf
add
mov
repnz
and
dec
dec
in
push
decl
push
and
pop
call
xchg
mov
rorl
pop
jo
incl
adc
mov
mov
fldcw
jl
loop
cmpsb
or
sahf
and
enter
in
cmp
cmpsb
test
lahf
xor
sti
clc
jge
jnp
cmc
cmp
mov
int3
aaa
mov
ljmp
sahf
mov
push
in
and
mov
push
push
adc
dec
cmpsb
mov
in
dec
cs
fists
xor
pop
bound
xor
push
mov
cmp
jge
in
push
fsubl
mov
mov
jne
mov
scas
nop
lods
dec
xchg
imul
mov
inc
stos
pop
sti
daa
inc
sub
ss
fisubs
mov
push
sahf
ss
test
add
loop
xor
jo
cwtl
ds
push
ud0
inc
mov
and
out
or
cmpl
sub
add
mov
push
dec
mov
arpl
and
or
xchg
inc
incl
inc
jg
out
popf
cmpl
mov
testb
and
mov
push
js
les
icebp
add
loopne
xor
dec
out
ljmp
jb
aam
xchg
adc
stos
ljmp
fcompl
mov
mov
adc
cmpsb
dec
cmp
fmull
jl
sub
inc
lcall
incl
out
and
mov
and
mov
sahf
pop
adc
sar
jmp
int3
repz
inc
stos
into
pop
push
xchg
xor
sbb
cwtl
xchg
movsb
cmp
scas
add
call
jle
in
lea
test
jae
mov
aam
lds
mov
mov
jbe
sub
inc
jbe
sbb
push
movsl
inc
lods
daa
jb
dec
cld
call
add
jmp
cltd
and
inc
repnz
mov
mov
xor
repnz
lcall
imul
xchg
test
xor
rolb
mov
xor
and
jmp
test
decl
scas
push
cmc
fnstcw
fs
sbb
outsl
mov
inc
mov
jg
cmp
loopne
ljmp
inc
lds
mov
jae
test
ficompl
dec
push
jle
icebp
add
call
mov
xor
outsl
mov
cmp
out
inc
ds
dec
incb
addr16
add
jmp
test
dec
xor
repnz
and
inc
and
clc
push
xchg
xor
fistpl
mov
dec
stos
std
ljmp
mov
inc
inc
repnz
cmp
insl
sub
nop
mov
inc
scas
scas
lret
das
bound
ljmp
sub
loopne
scas
int3
jle
outsb
into
inc
lret
cli
add
stos
and
incl
cltd
rcrb
sbb
fwait
pop
xor
or
js
adc
stos
flds
pushl
repz
jecxz
mov
pop
cwtl
lea
dec
xchg
xchg
push
fbld
push
addr16
pxor
lcall
fnstenv
dec
aam
shl
faddl
fdivrl
adc
cmpl
das
jbe
mov
add
xchg
push
repz
jmp
push
inc
mov
and
aad
cmc
lcall
jl
push
adc
imul
lock
xchg
out
incl
lds
dec
xor
and
pusha
dec
pushf
ja
fcompl
jmp
push
decl
enter
loopne
filds
fdivp
in
insb
and
mov
jl
decl
mov
inc
out
arpl
mov
pop
lret
movsb
outsl
mov
fstps
jp
in
cmpsl
xor
stos
xor
adc
mov
mov
loop
mov
mov
adc
xchg
int3
inc
shrl
arpl
inc
xchg
enter
dec
decl
mov
shrl
out
arpl
mov
loope
add
mov
push
aad
mov
jno
mov
xor
pushf
and
outsl
pop
pop
shl
outsl
sub
jmp
lret
jo
push
call
adc
fcomps
add
jmp
popf
pop
jne
push
xor
and
mov
fidivrs
push
shrb
dec
pusha
cld
cmp
gs
movsb
insl
roll
jg
push
insl
inc
scas
int
ljmp
aaa
mov
pop
fldcw
add
push
sbb
push
cmp
repnz
inc
ret
mov
fwait
lcall
sbb
repnz
and
bound
icebp
lea
and
jp
addr16
incl
jne
mov
lret
or
lahf
stos
xchg
pop
wbinvd
xchg
or
lahf
movaps
ljmp
out
and
ss
mov
lds
decl
lcall
push
leave
xchg
test
mov
test
sub
repnz
xchg
push
cmp
arpl
jmp
add
lods
adc
insl
adc
sub
cli
cltd
pusha
and
repz
ljmp
adc
pop
mov
mov
sbb
push
pop
das
ss
fstpl
inc
decl
mov
cltd
jae
in
repnz
cmp
fwait
adc
pop
cmc
lcall
push
mov
mov
movsl
pop
and
repnz
mov
adc
cld
sub
enter
jge
call
push
xchg
iret
popa
in
scas
in
lods
lcall
jmp
test
mov
xlat
lock
inc
mulb
sub
add
xor
and
lea
cmp
incl
push
das
fcoms
test
enter
mov
loopne
ljmp
fcoms
ljmp
push
bound
mov
pop
push
sbb
adc
pop
sub
mov
xchg
notl
pushl
out
or
fisubs
or
in
or
and
jg
mov
jmp
icebp
pushl
mov
out
ret
xchg
das
lock
push
push
and
xchg
add
fbld
sbb
pop
xor
in
push
int3
pushf
mull
ret
mov
jle
sub
xorb
mov
sub
int
cmc
fs
cmpsl
sbb
repnz
inc
imul
mov
inc
mov
stos
jg
mov
scas
or
xor
int3
cltd
dec
cltd
mov
sarl
cmc
mov
mov
cld
test
iret
adc
cmc
mov
in
jmp
in
mov
jbe
icebp
das
std
mov
ss
mov
xchg
insl
xor
imul
lcall
lahf
and
mov
or
adc
push
mov
incl
outsb
mov
mov
mov
sub
pop
repz
cwtl
call
sbb
inc
mov
and
xchg
sbb
pop
aaa
shrl
lcall
mov
add
in
jno
andl
dec
mov
imul
incl
mov
jne
pop
lret
outsb
clc
and
mov
insb
jb
imul
mov
dec
aaa
lds
xchg
stos
and
ret
outsb
pop
pop
mov
cmpsb
push
adc
push
sub
fstpl
pop
adc
sbb
test
adc
loope
lret
xor
jp
xchg
lret
cmp
shrl
je
icebp
pop
push
arpl
pop
mov
les
into
rcl
cmc
pushf
das
xlat
add
call
imul
lods
add
dec
mov
or
in
aas
insl
push
or
ja
les
ljmp
jg
or
outsb
dec
sub
sub
mov
cwtl
pop
mov
ljmp
inc
notb
fstenv
fidivrl
mov
mov
lahf
jle
lds
mov
clc
mov
add
mov
ret
pushf
pop
push
in
stos
into
hlt
lods
mov
jmp
in
test
bound
add
aas
sub
hlt
addr16
das
cli
incl
inc
inc
cmc
xor
jnp
int3
test
jo
dec
sar
incl
xchg
xchg
in
cmp
pop
and
jnp
sbb
sbb
mov
lock
pushl
test
push
inc
outsl
and
xchg
subl
jg
pand
sarb
sbb
insl
outsl
inc
dec
mov
je
mov
add
lods
xor
fs
je
add
ljmp
pop
push
call
jg
stc
sub
mov
lods
mov
push
loopne
xlat
rolb
add
cmp
call
cmp
dec
hlt
movsb
ret
data16
bound
mov
pop
adc
rorb
iret
in
mov
jmp
outsl
incl
imul
push
dec
lahf
mov
pop
xchg
xlat
mov
mov
sti
xchg
sbb
mov
xchg
dec
movsb
pop
sbb
dec
lret
cld
lahf
and
dec
enter
cld
add
decl
xchg
dec
insl
jbe
sub
das
push
mov
push
mov
ljmp
enter
pop
jmp
ja
lcall
js
xor
call
daa
inc
pop
rolb
and
jns
popf
or
test
stos
xchg
fidivrs
jbe
in
pusha
test
pop
cmc
mov
movsl
mov
xchg
mov
mov
push
fbld
and
stc
inc
insl
sahf
push
pop
xchg
cmp
sub
imul
and
mov
mov
and
adc
ljmp
xchg
xchg
add
test
divb
and
call
mov
adc
jns
test
dec
dec
lock
mov
cmpl
ljmp
in
xchg
shr
out
out
sub
idiv
je
add
cmpsl
rcrb
dec
dec
popf
dec
pop
mov
outsl
incl
cmp
lcall
add
add
daa
and
lods
aam
push
mov
xchg
popaw
fldt
gs
mov
or
popf
cmp
int
push
lcall
hlt
roll
shl
in
push
add
mov
insl
gs
push
xorb
push
mov
bound
mov
cld
decl
popf
iret
test
lock
cmp
clc
cmpsl
xchg
cmp
in
sahf
fdivrl
jg
insl
mov
xor
dec
outsb
pushf
gs
f2xm1
adc
jmp
out
cmpsl
dec
sbb
imul
mov
xor
bound
es
mov
js
daa
idivl
mov
xchg
and
pop
push
ss
push
loope
movsl
adc
jmp
imul
mov
xor
sub
dec
call
mov
loopne
mov
adc
jo
xor
or
add
mov
cwtl
pop
cmp
sub
jnp
mov
xor
cmp
loop
adc
adc
jb
and
sub
cwtl
sarl
stos
adc
push
lock
call
pushf
mov
std
fmuls
leave
cltd
inc
adc
jp
sub
add
adc
scas
mov
aas
adc
mov
mull
clc
adc
popf
call
mov
sbbl
out
cmp
daa
mov
adc
mov
fsubl
sti
rcll
lock
sbb
es
fsubrs
fisttpl
std
lret
bound
dec
jle
mov
jae
ret
lods
test
xchg
outsl
sbb
addr16
jbe
or
aad
mov
mov
mov
decl
popf
clc
dec
icebp
imul
out
xor
jecxz
lret
push
inc
incl
call
add
pop
fnsave
fidivl
in
and
and
test
jmp
push
movsl
cmc
sbbb
fs
outsb
incl
add
mov
rol
mov
popf
lock
xor
fldt
xor
popa
loop
xchg
and
lcall
dec
mov
leave
adc
mov
fstpl
test
mov
jle
inc
arpl
ljmp
cld
out
mov
mov
stos
imul
sub
mov
mov
test
rorl
arpl
lods
ret
ljmp
cli
call
fiaddl
fistpl
pop
mov
mov
jge
das
scas
call
xchg
dec
or
enter
scas
inc
enter
cltd
and
es
loopne,pn
sub
push
fisttpll
dec
imul
stc
and
jb
mov
add
les
cmp
mov
pop
add
test
add
xor
sbb
mov
pushl
aam
call
adc
sbb
add
jne
insl
dec
int3
inc
or
pop
sbb
sar
popa
cmp
cmpsl
mov
adc
mov
xchg
dec
push
adc
inc
inc
ret
les
or
scas
decl
fldcw
lea
pop
jbe
jne
ss
ljmp
pushl
leave
and
mov
adc
dec
mov
pop
int3
aad
xor
mov
add
ljmp
jge
xor
test
sbb
dec
adc
js
mov
fsubrl
dec
push
pop
xrelease
dec
push
out
xchg
lret
pop
inc
roll
pop
sti
sub
lods
pop
rcrb
push
sub
jmp
movsl
push
stos
faddp
lcall
xor
xor
std
xor
or
xchg
aaa
lock
or
in
cmp
xor
je
inc
repz
enter
xor
repz
xchg
jp
sar
jmp
xchg
clc
mov
or
aaa
jl
mov
sub
shr
pop
insb
mov
out
push
dec
lcall
mov
xorl
imul
orl
clc
dec
sub
movsl
or
xor
test
add
sub
jmp
or
mov
aad
inc
je
inc
in
mov
add
cltd
push
mov
mov
jnp
incl
mov
push
repz
jmp
push
mov
jmp
xchg
ljmp
pop
scas
push
xor
out
inc
ja
sub
call
stos
in
mov
dec
mov
call
mov
sub
repz
mov
push
stos
jmp
out
cwtl
mov
push
sbb
cmp
shrb
xchg
adcl
test
nop
sbb
into
push
orl
add
xchg
sahf
sub
je
jmp
pop
pop
iret
inc
mov
or
and
jne
dec
pop
xor
stc
jmp
cmpsb
mov
jmp
out
stos
lea
jnp
out
repnz
lret
pushl
pop
pop
movsl
in
sbbb
cmpsb
sbb
ja
mov
mov
mov
fistpll
inc
cmp
ljmp
mov
pop
outsb
cld
add
dec
iret
int
loopne
jmp
sbb
bound
ja
push
mov
mov
into
jnp
loopne
stos
jle
scas
cmp
pushl
imul
adc
rcrb
add
outsb
fdivs
rcll
mov
mov
lcall
ljmp
mov
jns
scas
adc
or
fdivs
push
movsl
mov
mov
mov
push
or
jmp
addr16
cmc
ja
incb
xor
out
lcall
es
push
testb
ret
push
js
adc
fmuls
fcomps
push
pop
xchg
cmp
ret
std
ret
lods
push
dec
fwait
sub
push
push
fnsave
dec
adc
xchg
cmpsl
popl
icebp
push
ja
push
nop
push
or
insb
mov
incl
test
loopne
sbb
push
xlat
mov
cmp
sti
fldt
jbe
sbb
mov
push
scas
scas
xor
lds
das
jb
or
addr16
loopne
cmpsb
inc
xor
adc
int3
mov
incl
push
jmp
loop
call
imul
cltd
ja
add
push
pop
cmp
pop
add
cmpsl
ret
xchg
call
or
mov
jmp
mov
lods
sahf
sbb
out
rcll
bound
sub
push
sbbl
lret
je
xlat
out
mov
mov
lahf
jnp
or
jmp
iret
xchg
bound
mov
or
xlat
popf
mov
push
and
jo
mov
xchg
jmp
xchg
dec
iret
or
xchg
jge
mov
sti
adc
iret
dec
inc
adcb
lcall
pop
jnp
rcl
jmp
xchg
orl
mov
cmp
mov
pushl
icebp
lods
loop
clc
inc
add
test
fcmovb
sub
mov
adc
call
test
into
gs
aas
push
sarb
sar
imul
stc
lcall
jmp
lret
xchg
ret
imul
in
sbb
out
pop
xchg
filds
popa
xchg
pop
idiv
pushl
push
jnp
out
cmp
fistl
mov
jae
inc
popf
inc
mov
push
sub
pushl
mov
push
mov
lret
lcall
xor
pop
xor
pop
xor
mov
aas
dec
popa
jmp
push
rcll
mov
or
xchg
ljmp
cli
stc
nop
pop
or
push
js
and
loope
mov
push
push
sti
dec
ja
enter
incl
lods
aam
mov
push
push
add
addl
hlt
call
lods
dec
mov
call
adc
mov
pop
mov
jnp
add
dec
sbb
cmp
push
inc
xor
in
mov
aad
adc
adc
mov
xor
or
aaa
ja
or
adc
dec
icebp
mov
rolb
push
pop
inc
inc
daa
cmp
jp
iret
dec
mov
inc
push
fstpt
and
daa
and
inc
or
insb
lahf
fs
pushl
jg
sarl
das
inc
push
sub
out
cmpsl
mov
add
push
push
pushf
and
decl
out
push
pop
jb
mov
iret
and
pop
pop
add
roll
cli
jo
mov
aas
sbb
ss
fsts
scas
add
fwait
cli
out
sbb
cmp
mov
scas
xor
imul
push
in
aaa
pop
mov
pop
insb
hlt
int
aaa
mov
dec
mov
mov
rcll
jmp
in
in
jno
test
fs
cmp
iret
cmpl
int
xchg
les
xor
incl
cmp
xchg
sbb
sti
cmpsl
adc
sbb
lcall
enter
subl
jle
outsb
scas
outsl
cli
jmp
adc
and
dec
xchg
inc
sahf
int3
filds
decl
sti
inc
lock
out
mov
jns
mov
std
mov
pop
cmp
lods
movsb
xor
outsb
inc
sub
testl
add
push
pop
aas
mov
ljmp
push
jmp
dec
dec
pop
or
xchg
xchg
jg
popa
and
fisttpl
add
inc
jb
int
decl
out
jns
iret
pushf
call
jo
mov
xchg
jmp
pop
mov
fs
cmp
add
pop
mov
iret
outsl
adc
sti
sbb
xchg
mov
xchg
push
pop
ret
incl
inc
xchg
add
sti
xor
xchg
ljmp
inc
fs
xchg
popa
add
push
inc
dec
adc
cmp
mov
pop
idiv
cmpsl
cwtl
sub
sbb
sbb
push
pusha
and
inc
jmp
clc
mov
adc
add
add
jg
out
sahf
popa
aad
or
pop
jmp
jmp
cmpl
mov
xor
and
sub
movsb
sahf
adc
pop
jmp
out
subl
mov
add
mov
fs
pop
scas
add
dec
call
xchg
stc
popa
out
scas
popf
and
stos
add
mov
xchg
jb
and
jns
mov
mov
sub
pushf
mov
xchg
lret
cmp
addr16
das
iret
adc
xchg
decl
gs
sarb
call
sub
pop
inc
pop
add
jne
xor
jl
sbbb
or
roll
lcall
or
pop
add
lcall
mov
jle
out
inc
mov
and
pop
cmp
mov
ljmp
mov
data16
fs
subb
mov
mov
mov
mov
roll
mov
pop
pop
cld
aaa
std
js
movsb
inc
sbb
jno
cltd
sbb
fxch
jmp
movsb
xchg
jecxz
ja
push
in
ljmp
xor
movsl
push
xlat
adc
mov
lcall
outsb
fildl
jo
out
out
fnstenv
xlat
ret
dec
lds
movsl
inc
pop
mov
out
mov
push
pushf
pop
jne
push
pop
movsl
rorb
xor
sbb
fs
jg
fdivl
jge
cwtl
xchg
fcmovnu
inc
push
cwtl
ret
mov
xchg
loopne
mov
jnp
popa
test
push
jg
push
scas
mov
cmp
inc
xor
push
iret
cmp
repz
sub
das
clc
jmp
enter
add
xchg
adc
xchg
cld
daa
mov
jecxz
mov
incl
stos
xchg
fistpll
cmp
enter
cmp
sbb
cmp
sbb
jmp
loopne
or
mov
push
call
add
push
jp
push
ret
push
pop
or
fwait
xor
imul
adc
movsb
cmpsl
lock
incl
xor
jno
fs
in
mov
sub
xor
xchg
mov
sbb
in
cmpsb
cmpsb
pop
pop
test
sub
inc
push
les
lock
jmp
sub
dec
outsb
cmp
mov
cmp
lcall
cmp
adc
jmp
push
mov
das
xlat
sarl
push
sub
dec
fimuls
add
inc
mov
mov
clc
cltd
mov
scas
andb
lcall
dec
stc
aad
jae
dec
mov
cs
sbb
pushl
insl
cli
loop
js
dec
fsts
sub
push
out
or
out
xor
mov
dec
push
ss
outsb
popf
xchg
sub
jne
std
pop
hlt
decl
cltd
js
mov
lahf
sahf
adc
imul
cwtl
out
sub
in
movsl
call
push
movl
std
push
xchg
cmp
in
add
loop
pop
fsubs
decl
dec
sub
mov
push
push
aam
jp
cwtl
push
into
int
pslld
pop
sub
int3
mov
lock
cs
mov
loope
pop
jp
movsl
xor
cli
rclb
mov
repnz
fdivl
jne
sbb
sbb
test
cli
ljmp
xchg
sti
test
inc
or
cltd
add
fidivl
incl
insl
push
xor
sub
sbb
popl
add
cli
testl
xchg
movsb
incl
outsb
dec
dec
jecxz
scas
notb
stc
cltd
adcb
inc
jecxz
movsb
and
lcall
sahf
mov
pop
test
aas
push
repz
out
arpl
in
cmp
mov
inc
adc
pushf
and
jmp
mov
hlt
mov
ds
adc
xor
lcall
pusha
adc
push
or
adc
inc
and
xor
xchg
call
ja
nop
iret
push
in
addr16
mov
add
sahf
loopne
sbb
or
inc
mov
mov
icebp
dec
sub
pushf
adc
lock
mov
test
jb
int3
xor
push
lds
push
inc
cmp
jnp
lds
nop
mov
dec
fdivrs
push
add
push
cltd
cld
std
cmp
in
xchg
jp
mov
dec
clc
cmpsl
inc
inc
xchg
jno
pop
dec
mov
out
pushl
push
sbb
jnp
lock
xchg
sbb
scas
cmp
rclb
xchg
aam
inc
insb
les
and
ljmp
push
mov
fldenv
cmp
pop
xchg
jns
xchg
mov
adc
cmp
mov
or
in
lock
data16
gs
fwait
shll
imul
fmull
rcr
aas
inc
xor
dec
cmp
adc
push
lods
repnz
jns
mov
testb
mov
mov
lds
scas
xchg
xchg
pop
push
push
mov
insl
pop
lods
and
scas
out
cmp
mov
push
jg
out
jmp
daa
test
push
adc
push
sub
add
xchg
xchg
leave
mov
and
test
lock
sub
push
mov
mov
xor
pop
fnstcw
in
push
das
dec
add
ljmp
mov
adc
es
repz
stc
pop
negb
iret
mov
mov
mov
outsl
idivb
or
les
je
ja
mov
mov
lods
popa
and
dec
xchg
sbb
mov
iret
repz
add
clc
cld
decl
lods
mov
sub
dec
adc
add
pop
repnz
lcall
insb
sbb
cli
sub
int
mov
repz
jmp
je
dec
or
xchg
shll
jmp
gs
adc
mov
aam
sbb
ljmp
shlb
push
adc
push
cmc
cmp
jge
and
inc
or
out
cmpsl
rorl
mov
sti
mov
test
hlt
ficomps
subl
aaa
inc
and
adc
xor
lcall
loop
incl
pop
std
sti
push
and
sub
pop
mov
jmp
pop
mov
inc
or
cltd
mov
les
stos
loope
pop
pop
mov
sbb
inc
add
inc
ljmp
cmpsb
dec
and
ja
mov
cmp
shlb
add
or
cmp
xchg
jg
incl
mov
add
sub
push
arpl
loop
gs
cli
mov
jecxz
iret
or
lods
sahf
cld
ja
cmpsb
js
push
inc
inc
xor
xchg
lret
dec
icebp
fimuls
out
xorl
mov
sub
sbb
push
inc
mov
adc
jnp
inc
ljmp
cmp
out
insb
sbb
lock
pop
and
movsl
lcall
pop
enter
call
in
fiadds
lret
sbb
mov
mov
imul
mov
std
dec
cltd
dec
fstps
pop
stc
mov
bound
enter
lcallw
lea
popf
sahf
loope
repnz
jmp
bound
lret
mov
push
push
sti
sub
and
xor
ja
mov
mov
dec
add
xor
int
fsubs
mov
lahf
les
repnz
xchg
das
cli
sbb
pop
loope
inc
pop
cmp
adc
test
push
in
jae
sbb
jmp
call
adc
scas
pop
sub
lock
inc
cmpsl
out
xchg
dec
xor
std
xchg
pop
in
rorb
les
imul
cmp
fstp
ljmp
xchg
adc
xchg
les
setne
pusha
clc
mov
incl
cmpsl
xorb
cmp
clc
or
mov
ret
in
pop
xchg
jns
mov
mov
sbb
jno
xchg
ret
sub
adc
xchg
jb
call
adc
cmpsl
outsb
das
stc
cmp
mov
test
sub
repnz
in
push
sbb
dec
jb
sahf
enter
shll
xchg
adc
popf
xor
jmp
shll
mov
sub
cmp
addr16
popf
out
clc
popa
out
mov
cmp
mov
ljmp
xchg
ss
lahf
add
sub
or
mov
mov
xchg
ja
mov
ljmp
push
mov
and
out
ljmp
fidivrs
jge
mov
add
cmpsl
cli
xor
movsb
pop
mov
jae
imul
add
xchg
scas
mov
in
mov
mov
lret
push
aam
test
mov
sbb
repz
inc
dec
ljmp
jmp
loopne
test
mov
mov
push
and
inc
call
decl
sbb
fnstsw
subl
testl
sub
xor
pushl
lcall
mov
jg
add
out
dec
mov
int
sbb
xchg
repnz
mov
pushl
jge
mov
xlat
aaa
cmp
scas
stos
cmp
iret
push
loopne
push
gs
jo
adc
dec
fldenv
mov
lods
inc
push
xchg
cmp
mov
mov
decl
push
fcmovnb
scas
xchg
push
mov
jo
outsb
mov
fsubl
adc
fcomip
call
jne
mov
jge
xchg
icebp
lahf
cmc
les
mov
pop
cltd
jg
push
jg
push
fincstp
inc
cld
jl
in
repz
ss
popa
daa
std
push
sub
cmp
jmp
sar
mov
sub
or
mov
inc
push
or
adc
and
jmp
mov
frstor
icebp
call
cli
jnp
sbb
addr16
sub
jg
xlat
cmc
lods
sub
sbb
pushf
mov
sbb
ret
out
js
call
scas
mov
imul
pop
lahf
loopne
or
or
mov
decl
in
int
or
jge
xchg
mov
in
sub
and
fsub
mov
incl
cmpl
mov
dec
mov
je
xorb
mov
leave
scas
adc
mov
hlt
mov
lcall
aas
or
cmp
and
call
mov
push
test
pop
or
fdivrp
incl
ss
push
and
inc
rcr
lcall
cmp
decl
sbb
mov
lahf
xchg
jns
adc
mov
jbe
mov
push
and
sub
ljmp
sub
movb
movb
push
cli
push
xor
lcall
arpl
dec
add
or
mov
and
je
or
or
decl
test
or
mov
lea
push
xor
adc
jne
call
or
aaa
test
jg
adc
loopne
mov
lock
jl
in
mov
in
sub
imul
pushl
cld
pusha
ja
insb
sahf
mov
negb
add
loop
in
in
pop
pop
inc
sub
call
dec
lds
mov
test
jae
jno
das
daa
xor
jmp
fwait
sbb
test
out
adc
sub
lcall
lea
sub
push
hlt
lcall
jns
fistl
sub
in
jge
sub
add
lcall
loop
rorb
sahf
push
data16
mov
imul
aas
in
pushf
jg
push
pop
idivl
and
push
in
ja
and
push
sub
inc
nop
ljmp
in
js
cmp
les
cs
lods
roll
mov
jecxz
fisubl
insl
call
or
fptan
das
pop
add
adc
mov
lcall
xchg
or
pushl
jo
adc
pushl
and
ja
test
pop
and
jg
inc
ja
mov
sbb
cltd
scas
xlat
test
nop
pop
out
gs
push
call
sarl
push
rcll
and
sbb
jb
cs
loop
pop
inc
xchg
dec
movsl
push
decl
test
mov
xor
mov
rcr
mov
adc
jb
jmp
incl
fwait
sbb
push
ds
push
mov
sbb
pop
pusha
and
adc
ss
scas
jecxz
lcall
negb
xor
push
mov
rorl
mov
xor
cld
sub
ljmp
mov
insl
jl
out
jbe
fistpll
xor
or
push
in
ljmp
lret
add
cmp
push
fucomip
xor
sbb
clc
test
jmp
adc
inc
pop
cmpsl
mov
mov
stos
xchg
jp
ds
jl
and
push
adc
lcall
mov
outsb
pusha
xor
mov
adc
and
in
incl
dec
fwait
dec
and
jns
dec
xor
pop
mov
mov
sub
cld
call
mov
push
adc
mov
mov
mov
in
jge
sbb
lcall
xorb
fisubrs
add
and
push
and
cmpsl
nop
lods
inc
inc
xor
leave
fwait
mov
ret
adc
pop
cmpl
dec
rorl
pusha
and
add
jge
push
cmc
lock
jne
rcll
xor
push
dec
out
lcall
mov
ljmp
lret
cmp
mov
daa
sahf
pop
aam
mov
flds
ret
call
pop
jle
sub
rcl
jbe
jmp
cmpsb
xor
in
push
scas
dec
adc
adc
add
test
scas
inc
lcall
cmp
ret
jne
jmp
add
jmp
adc
jg
call
or
cmp
mov
add
sub
sti
cmp
pushl
rcrl
rcl
insb
or
add
sarb
movsb
sub
stos
xlat
mov
sbb
pushl
cmp
test
jmp
dec
sub
cmc
push
cmove
mov
or
sub
adc
test
mov
mov
in
jne
push
xor
addr16
push
xor
hlt
jmp
in
push
cs
test
sub
es
xorb
popa
pop
jle
jmp
mov
sub
mov
aad
push
or
sub
stc
xchg
je
lods
popf
pop
push
push
pusha
pop
cmp
fwait
call
fmuls
jecxz
in
out
inc
dec
xchg
pop
lods
nop
icebp
xor
sbb
sub
jae
lcall
test
xchg
andb
insl
repnz
dec
inc
stos
sbb
sub
jecxz
mov
daa
arpl
jno
lock
ret
jle
aam
sahf
cli
mov
rcl
incl
dec
in
fnstenv
loopne
popf
mov
in
lea
fidivrl
push
nop
and
lock
mov
xchg
xor
add
cmp
rorb
decl
and
mov
adc
scas
push
test
inc
jns
xor
ljmp
cmpsl
mov
ljmp
in
test
jmp
xchg
jae
and
sbb
dec
ljmp
sahf
xchg
xor
enter
scas
lahf
iret
pushl
sub
xlat
cli
outsl
cli
jmp
xor
pushf
les
xor
imul
out
lock
push
dec
pop
push
mov
loopne
push
ret
push
insb
xchg
cwtl
imul
pop
mov
dec
mov
clc
jno
mov
pusha
and
sbb
inc
mov
mov
out
adc
pusha
arpl
popa
shlb
icebp
movsl
scas
jle
cmp
insl
icebp
fstpt
cmp
mov
icebp
cmp
mov
enter
pop
mov
mov
incb
or
lcall
mov
loopne
stos
pop
pushf
push
addr16
fcomi
dec
inc
mov
test
lret
pop
push
push
add
push
iret
dec
adc
out
cmp
dec
pop
aaa
adc
xor
rcrb
adc
setl
popa
dec
ror
lea
clc
lock
inc
cmp
hlt
sbb
ffreep
inc
jecxz
mov
pop
mov
imul
popa
jmp
push
sbb
jecxz
in
jp
movsl
cmp
fs
daa
daa
pop
add
xorb
jmp
rcrl
cmp
imulb
jp
push
xor
xlat
jno
hlt
jg
ljmp
push
push
dec
shr
xor
push
int3
cmp
push
push
mov
fucom
mov
ljmp
xchg
lret
mov
and
adc
inc
or
pop
imul
cmp
iret
mov
adc
cltd
cli
call
dec
dec
mov
ss
in
lret
outsb
insl
mov
dec
jb
bound
incl
cli
mov
xchg
jp
lock
xor
inc
xor
mov
dec
mov
or
rol
outsb
sub
jns
add
out
mov
int3
jmp
sub
ljmp
mov
lock
and
hlt
and
loop
push
jb
and
cmp
jg
dec
dec
add
push
int3
add
testl
mov
data16
call
push
adcb
and
xor
inc
xor
push
add
mov
pop
pushl
pop
shrb
lret
pop
jae
popf
je
mov
aam
jp
adc
nop
aad
insb
jbe
jno
ljmp
adc
jne
lea
cmpb
lcall
ret
leave
cmpsl
mov
ss
jne
in
lcall
sub
fildll
push
in
ret
cmp
js
mov
dec
push
sti
jmp
lds
movsl
fcmovnb
lcall
push
bound
test
jae
xchg
mov
mov
fsubrs
xor
incl
xchg
inc
nop
mov
inc
imul
mov
push
movb
or
cli
repnz
xor
mov
dec
sub
add
mov
out
jae
jg
ljmp
std
test
cwtl
cli
fisubrl
negl
mov
cmp
fnstsw
mov
or
in
cmp
movsb
repz
ret
xlat
inc
sbb
sub
adc
call
inc
ror
and
xor
push
adc
nop
imul
lcall
dec
dec
dec
add
movsb
xchg
mov
sub
mov
push
mov
aam
mov
mov
fdiv
jg
inc
push
push
push
outsb
sbb
test
jl
ljmp
ret
and
repnz
pop
adc
sub
nop
testb
push
out
lahf
xor
cld
jnp
push
adc
mov
mov
rorl
add
mov
call
mov
inc
loop
dec
jg
pop
pop
dec
pop
stos
xorps
or
aas
adc
jmp
adc
in
addl
subl
in
pop
xor
jecxz
pusha
cmp
mov
sub
divb
mov
and
dec
insb
mov
enter
push
leave
push
sbb
ljmp
call
jnp
pop
mov
sti
mov
jge
ficompl
mov
xor
jmp
cmpsl
pop
fldln2
mov
daa
jne
test
push
nop
inc
cmp
cwtl
mov
data16
add
cmp
outsb
push
add
xchg
and
push
jmp
pop
cld
mov
sbb
test
aas
dec
addl
push
mov
push
pop
add
cli
fs
out
dec
fwait
int
pop
fwait
sbb
loope
sbbb
adc
jmp
sbb
inc
incl
mov
mov
cltd
mov
jmp
pop
ds
sub
inc
ja
lcall
popl
mov
movsl
imul
pop
xchg
lods
lahf
loope
in
push
pop
mov
fmull
insb
aaa
lret
add
inc
es
and
or
xchg
aad
lods
cmp
adc
incl
or
decb
int
loope
sub
and
push
cmpsb
add
cs
insb
cmp
sbb
lcall
arpl
push
jae
dec
insb
xchg
cmp
add
mov
push
arpl
das
cmp
decl
add
ficomps
and
or
lcall
inc
add
cli
lcall
mov
xlat
cmpl
dec
push
sub
decl
in
mov
inc
xlat
xor
adc
xor
jmp
ds
rolb
fstpt
mov
jb
into
test
xchg
stc
test
dec
mov
ljmp
fadd
or
pop
sub
mov
xor
repnz
movsl
loopne
add
inc
xchg
adc
ds
xor
aas
loopne
in
das
mov
and
pushf
xlat
or
lcall
add
ficompl
or
ja
lret
cli
push
aam
clc
sub
xchg
push
xor
cld
fcomip
call
cli
adc
adc
pop
aad
mov
incl
push
and
out
jg
in
mov
push
pop
test
mov
sbb
push
cmp
leave
aad
mov
dec
mov
lods
jg
call
shl
repz
xor
xor
out
pop
xchg
mov
decl
push
xchg
mov
adc
repnz
aad
pop
sub
nop
repz
pop
out
xchg
push
dec
push
dec
fbstp
packsswb
mov
cmpsb
shrb
dec
push
enter
fistpll
or
into
in
ss
jecxz
lret
mov
roll
lock
lcall
hlt
cmp
jecxz
ficomps
icebp
xchg
adc
stc
cld
xchg
pop
test
test
adc
jmp
hlt
in
adcl
hlt
cmovs
fdivs
fcomip
jmp
lcall
jbe
mov
hlt
pop
mov
call
mov
mov
bound
sub
call
push
jge
adcl
aas
fxch
and
sub
ret
cmp
clc
pop
and
jmp
int3
fisttps
outsl
mov
in
jno
in
ja
cmp
hlt
ja
add
pop
out
adc
sub
imul
in
sub
jo
decl
data16
xchg
ds
cli
mov
or
sahf
dec
leave
mov
push
repnz
push
adc
cmpsl
fadd
popf
arpl
outsb
xor
jne
mov
lea
pushl
loopne
add
hlt
jecxz
mov
cmpl
test
cmpsb
jg
fs
ljmp
scas
and
cmp
aam
sbb
ljmp
int3
outsb
xor
stos
sbbb
mov
arpl
fs
mulb
pop
fldl
shufps
mov
test
outsl
jmp
roll
xchg
negb
lea
sbb
mov
xchg
ret
sub
add
dec
cmp
repnz
pop
or
jl
mov
aam
sub
bnd
icebp
arpl
and
dec
fsubrl
sub
or
subb
test
xlat
add
call
ss
pop
and
nop
cmp
add
xor
cs
lcall
xor
mov
scas
fcomi
fnsave
shll
call
iret
int3
ljmp
cmp
pop
xor
xchg
mov
xor
dec
mov
push
ds
loope
mov
pop
adc
and
lahf
fiadds
sub
mov
or
sbb
cmp
lret
jbe
mov
imul
mov
xchg
sbb
cmp
sbb
les
push
cwtl
mov
std
mov
shlb
xchg
bound
push
lcall
mov
lock
aaa
cmp
sbb
sub
push
mov
enter
decl
sbb
xchg
stos
repnz
or
std
lahf
in
movsl
or
cli
inc
push
push
inc
mov
sahf
std
jno
fwait
dec
inc
stos
sub
xchg
cmp
mov
pop
jne
sbb
or
mov
addr16
js
ljmp
mov
loopne
inc
adc
rep
jecxz
mov
jnp
nop
mov
sbb
xor
push
leave
lret
push
clc
jp
aas
out
aam
jge
adc
push
inc
fcomp
pop
iret
push
xlat
inc
push
jae
cmc
fwait
lock
aaa
decl
repnz
insb
push
movsb
test
mull
outsl
scas
in
inc
adc
sbb
dec
xchg
cmovbe
pop
or
jnp
sub
imul
popa
sbb
mov
adc
pop
es
ljmp
repz
faddl
inc
in
lods
cli
fstpl
pop
aam
fs
adc
fistl
lret
sub
ret
sub
xchg
adc
fidivl
movsb
cli
jl
lcall
bound
jo
jmp
mov
xchg
addb
mov
sbb
xchg
scas
pushl
iret
sbb
clc
out
pop
sbb
cmp
outsb
inc
fldl2e
jo
addr16
xorb
cmpsb
xchg
jge
stc
and
lahf
mov
mov
cmp
pusha
mov
nop
mov
jne
roll
cmp
inc
sar
jmp
jge
xor
cmp
or
inc
lock
sub
imul
xor
call
out
and
cmp
xchg
or
gs
adc
mov
mov
mov
mov
out
cld
mov
ud2
add
adc
outsb
dec
jge
adc
incl
addl
mov
fwait
add
bnd
in
jecxz
ljmp
and
add
xchg
shr
leave
rsm
jo
jp
jle
cld
mov
fdivs
in
mov
arpl
imul
xlat
movsl
call
fbld
cli
out
sbb
mov
push
int3
cld
stos
gs
xor
fsubrl
shlb
adc
stos
sub
nop
mov
mov
addb
pop
mov
lcall
loope
scas
adc
cwtl
add
jmp
int
lret
inc
daa
call
das
jb
push
lods
popa
push
nop
push
sti
scas
lahf
pop
jl
xor
xchg
mov
jg
cli
dec
cmc
and
cmp
mov
neg
and
fdivr
movsl
mov
mov
imul
push
sbb
cmp
jmp
fdivl
test
arpl
adc
sub
icebp
cld
iret
insl
cltd
sarl
jg
decl
dec
addr16
sub
xchg
add
jae
loope
xor
rcr
mov
mov
xchg
fiaddl
pop
mov
cwtl
adc
in
pop
cs
jmp
pop
ja
xlat
les
push
mov
mov
mov
incl
shlb
cmp
sub
xchg
push
mov
mov
popa
nop
lods
fucom
popf
lret
cli
lcall
repnz
decl
jb
mov
dec
fildl
push
jg
jg
or
cmpsb
jg
mov
repz
mov
jo
pop
jl
xor
decl
repz
jns
mov
invd
add
or
mov
inc
mov
cmp
pushl
xor
dec
push
mov
mov
inc
es
mov
cld
xor
fcmovnb
adc
int
out
outsl
mov
mov
xlat
dec
lock
call
daa
push
jmp
leave
mov
push
lea
imul
outsb
clc
fsubrp
mov
test
pop
shr
sub
ljmp
scas
aad
pop
popa
mov
add
pop
mov
or
xchg
mov
jmp
cmpsl
pop
stos
xchg
imul
fistpl
pop
xchg
das
loopne
pushl
cltd
xchg
rcr
dec
fsub
ficompl
pop
lock
xchg
sub
mov
mov
popa
jg
push
mov
lahf
inc
test
notl
and
add
xchg
cmp
mov
pop
sub
fcoml
cmp
popfw
mov
cmp
movsl
decl
xor
in
sbb
xchg
aaa
dec
jnp
push
test
cmc
dec
mov
lcall
or
aas
cld
mov
lahf
aas
sub
xchg
mov
mov
iret
or
fs
adc
imulb
daa
addb
mov
clc
jp
dec
pop
cmpsb
mov
mov
pusha
subb
jl
ficoms
jmp
arpl
std
adc
xor
add
sbb
sbb
lods
arpl
pop
cmc
cmp
in
jmp
dec
or
mov
punpckhwd
xchg
js
or
addr16
jbe
mov
ret
sti
in
divl
cmpsl
or
inc
mov
andb
push
xchg
lret
cmp
cmp
negl
outsb
sarb
addr16
ljmp
sub
paddd
add
jp
add
sahf
xlat
call
dec
movsb
out
mov
pushf
decl
ja
iret
imulb
stc
dec
ss
js
cld
nop
inc
je
jge
call
cli
decl
pop
mov
cmc
jecxz
xchg
js
sbb
jge
pushf
mov
jg
pushl
mov
mov
adcb
inc
push
loope
xchg
int3
faddl
pusha
les
jg
xor
jle
pop
cwtl
xor
dec
lock
ss
test
xor
ljmp
insb
add
dec
pop
and
mov
testb
cmpb
xchg
push
sbb
inc
in
inc
cmc
fwait
jnp
xchg
mov
lret
outsl
lods
mov
mov
movsb
push
test
out
cmpl
or
roll
mov
and
xor
mov
dec
ret
inc
push
mov
xchg
mov
jp
cs
xchg
jp
mov
dec
inc
cmp
call
mov
jne
popf
loop
and
pop
pushf
jno
dec
dec
xchg
push
mov
mov
call
adc
imul
push
insl
int
popa
das
cli
lcall
pop
shl
dec
repz
xor
pop
dec
outsl
dec
es
mov
push
xlat
incl
scas
xchg
negb
mov
in
test
push
test
push
cld
inc
and
loope
in
mov
and
push
mov
pop
add
inc
sbb
call
cmc
push
ret
leave
iret
xchg
bound
pop
rolb
or
and
xchg
decl
cli
and
repz
mov
lcall
bound
dec
pop
xchg
push
lcall
fnstsw
test
loope
int
mov
dec
mov
jmp
jp
jmp
and
xchg
fdivs
adc
imul
cmp
mov
clc
rolb
or
mov
popa
push
test
mov
adc
xchg
mov
lods
jne
lret
mov
adc
mov
jns
mov
scas
fcomip
fsubl
mov
dec
inc
push
or
sub
and
mov
pushl
push
jg
sti
xor
std
addl
inc
scas
jmp
dec
push
mov
ljmp
sbb
cli
cmpsb
fsubs
add
fwait
push
and
dec
mov
lods
mov
call
lret
and
dec
insl
mov
sbb
call
dec
xchg
flds
fmull
and
add
lret
jmp
jae
cmp
mov
dec
and
iret
sbb
jmp
add
loope
in
jl
lods
xchg
movsl
mov
add
mov
lcall
sbb
movl
pop
push
mov
mov
out
test
je
rcrl
lcall
or
sahf
or
add
and
jl
jno
in
pusha
xor
mov
mov
lret
mov
mov
in
inc
shr
push
or
pop
pop
cmp
jne
mov
cmp
inc
insb
js
sub
sub
fldl
dec
mov
in
cwtl
in
mov
add
adc
cmp
incl
iret
cmp
rorl
js
repnz
push
sub
sbb
ret
sub
add
int3
mov
pop
test
inc
mov
ret
rolb
outsl
mulb
cmp
shrb
dec
out
faddl
outsb
mov
mov
sbb
ja
arpl
push
dec
ljmp
xor
xor
jmp
fisttpll
pop
push
jae
imul
pop
jo
pushl
cs
stos
mov
rol
pop
jne
loopne
and
fists
inc
fwait
icebp
fcmove
ja
adc
mov
pop
xor
jb
icebp
mov
call
popf
fnstenv
push
das
adc
cmp
push
jg
mov
sbb
hlt
pop
push
scas
mov
dec
xchg
pop
movsb
sbb
das
pushl
inc
inc
mov
js
jp
aas
gs
inc
clc
mov
push
mov
and
stos
clc
mov
mov
jo
sbb
adc
stos
aas
push
scas
data16
pop
cmp
andl
fstps
mov
add
inc
ds
pop
dec
ja
cmpb
sbb
cmp
inc
hlt
mov
jmp
das
addl
lcall
sbb
push
data16
popl
out
pop
cld
jmp
aaa
sti
cs
xchg
leavew
xchg
and
xchg
xchg
out
pop
mov
push
enter
push
mov
push
fs
outsl
push
cmp
call
repz
rcrl
pusha
inc
popf
test
jg
adc
jmp
stos
call
xchg
inc
rorl
lret
mov
in
mov
mov
jmp
inc
hlt
mov
das
outsb
add
lahf
aas
dec
out
lea
cmpsb
cmpsb
jl
jg
popa
cmc
sbb
push
sub
dec
inc
push
xchg
fdivl
jb
push
dec
sub
adcb
int
test
lea
jae
pop
je
adc
mov
mov
xor
std
lahf
mov
loop
fiadds
mov
or
ss
inc
add
pusha
loopne
out
inc
jbe
pop
imul
mov
pushf
or
call
clc
mov
pop
jmp
outsb
js
fnstcw
add
pushf
stc
mov
addb
push
jbe
rorb
or
mov
adc
mov
icebp
mov
aas
iret
test
jge
mov
in
aam
xor
jmp
test
mov
inc
mov
notb
and
imul
xorl
adc
ljmp
addr16
or
sub
addb
stos
inc
mov
mov
mov
mov
shlb
push
or
clc
dec
sub
inc
nop
std
sbbl
pusha
or
sti
push
clc
cmc
outsl
fisubs
popa
imul
add
jl
shll
ds
insb
cld
push
shl
mov
test
ja
repnz
jle
push
stc
add
decl
test
mov
ljmp
imul
cmc
rcrb
inc
adc
lods
inc
sub
lcall
dec
inc
jbe
mov
rorb
faddl
pop
js
inc
cltd
push
rclb
sub
and
imul
pop
outsl
inc
push
outsl
sub
outsl
lcall
mov
or
ljmp
inc
cwtl
xor
cmp
adc
mov
mov
jle
shlb
mov
push
cmp
adc
pop
addr16
push
mov
adc
and
ljmp
mov
mov
cmpl
cmp
test
push
adc
cmp
ret
add
cld
push
decl
dec
or
dec
mov
mov
fdivrs
pushl
sub
mov
adc
xchg
repz
mov
incl
cmp
mov
jnp
adcb
push
iret
pop
pop
cwtl
mov
arpl
test
ljmp
jnp
cmc
or
mov
lea
adc
pushl
mov
das
fcmovb
mov
and
icebp
enter
mov
pop
xorb
incl
xchg
mov
fstpt
lock
pop
xchg
rolb
push
or
mov
aaa
mov
dec
lcall
addl
jg
sub
mov
xlat
rcrb
mov
push
jg
jmp
cmc
pop
xchg
out
js
jne
pushl
lahf
cmp
dec
push
cmp
cs
iret
ss
push
dec
add
mov
loope
add
sti
fisttpl
decl
stos
inc
xor
arpl
add
mov
xchg
jo
lods
repz
xchg
pusha
mov
ljmp
and
movsl
adc
aam
jp
enter
jno
push
dec
ror
xchg
lock
icebp
cmp
decl
cwtl
cmc
push
test
cmpsl
mov
mov
shlb
ljmp
call
lock
adc
sbb
ljmp
dec
ljmp
pop
cmp
in
cmpsl
imul
xor
sub
jne
mov
sub
das
push
je
pop
cmp
hlt
retw
dec
imul
push
sbb
mov
ja
mov
sub
inc
lods
push
inc
xlat
push
stos
insb
dec
insl
loopne
into
leave
jno
pop
repz
movsb
imul
pushl
sbb
jge
sub
add
pop
rorb
in
mull
cmp
dec
mov
sbb
cltd
and
lret
jg
sti
aam
push
add
and
cltd
mov
cmp
sbb
mov
les
adcb
dec
and
sbb
xorl
ret
xor
pushl
jmp
mov
ret
xchg
sbb
aam
pop
bound
test
mov
inc
cli
dec
notb
lcall
cmp
sbb
and
les
shlb
and
or
jnp
adc
decl
pop
xchg
or
mov
shl
and
test
inc
mov
movsl
pop
arpl
incl
gs
loope
fs
mov
in
sub
pop
mov
sahf
aaa
std
jns
adc
ret
pushf
repnz
mov
or
rcll
mov
sub
mov
xorl
rcll
cmc
mov
aad
jecxz
shlb
mov
lcall
scas
movsl
ret
push
dec
mov
cpuid
roll
cmp
sar
pushl
pop
jb
je
addr16
mov
js
out
xchg
sbb
incl
je
add
adc
jno
out
faddl
scas
adc
es
jp
nop
inc
xchg
fildl
decl
xor
out
and
cmpsb
mov
rclb
dec
repz
fdivrs
push
pop
dec
pop
js
jp
dec
dec
dec
mov
in
dec
lods
push
sub
jmp
push
out
fwait
adc
mov
in
jge
jb
ret
jo
std
das
lret
sar
jmp
in
mov
jp
xchg
xchg
or
fldenv
mov
mov
icebp
lcall
mov
xor
mov
pop
ja
lcall
jns
xchg
xor
leave
lods
push
call
popf
mov
xchg
incl
sbb
add
in
movsl
sbb
mov
cld
stc
xchg
repz
pushl
sbb
push
inc
dec
in
arpl
test
nop
dec
xchg
pop
mov
cmpsb
ljmp
lcall
clc
clc
mov
or
repnz
orl
push
frstor
push
mov
adc
xchg
push
mov
mov
sub
ret
clc
fsub
push
inc
lea
mov
jle
push
lcall
aas
lds
fidivrl
pop
push
push
rcll
loopne
or
lret
std
je
mov
ret
jmp
jne
inc
mov
loope
je
cmp
fcmovnb
fisubl
jb
dec
xor
ljmp
add
push
aam
mov
sub
cmp
fimull
repnz
out
cmp
call
jae
jle
outsl
or
data16
mov
push
in
cmpsb
int3
add
bound
jg
daa
push
mov
test
mov
inc
sub
jmp
adc
mov
lods
aas
gs
ret
jae
mov
and
insb
lret
inc
push
les
je
loopne
fsubrp
jae
push
mov
sub
xor
xchg
je
pushl
cld
repz
popf
and
lcall
test
fsts
sar
decl
sbb
xchg
mov
add
and
adc
call
aam
insb
lcall
scas
push
xchg
filds
dec
movsl
cli
psubusw
ljmp
and
inc
adc
scas
ljmp
fistps
bound
pop
in
lods
shrb
jge
mov
aad
jnp
and
ljmp
dec
mov
imul
jle
inc
mov
call
sub
cmp
addr16
sub
cli
and
or
xchg
out
incl
cld
pop
aaa
xor
and
cmp
adc
sbb
clc
incl
js
out
inc
cmp
lock
data16
push
dec
jle
mov
ds
adc
push
cwtl
std
mov
fmuls
or
int3
mov
call
loopne
lahf
outsl
into
inc
and
scas
jno
int3
arpl
jge
adc
cld
std
push
inc
les
lea
jecxz
mov
cmp
imul
imul
das
cli
jg
aad
movb
shl
and
in
mov
mov
ds
stc
pop
inc
mov
les
cld
pusha
aam
mov
mov
pop
shlb
jnp
cli
pop
mov
cmp
xor
or
cmp
pop
cs
jmp
mov
mov
mov
inc
adc
push
cmp
ljmp
push
je
icebp
ret
aam
mov
jge
insl
lea
repnz
fcompl
loopne,pt
ljmp
pushf
xchg
arpl
bndstx
mov
mov
stc
inc
mov
dec
push
xchg
in
jae
fstp
fs
cmp
pushf
into
pop
in
mov
stos
dec
in
adc
das
mov
hlt
xchg
xor
inc
aad
stos
sbb
xlat
ljmp
pushl
mov
jmp
add
mov
out
pushf
ds
stos
std
rorl
decl
pop
xchg
cmc
mov
cld
adc
dec
outsb
pop
fyl2xp1
and
jg
cmp
xchg
scas
gs
and
xchg
or
gs
js
pusha
fmuls
dec
cltd
rcrb
lock
mov
push
cltd
cmpsb
xchg
pop
pushf
insb
es
popf
rorb
push
push
adc
inc
movsl
xchg
decl
mov
clc
push
loope
sbb
xchg
xchg
ljmp
push
dec
inc
cmp
push
repz
and
inc
test
aaa
ret
xchg
sub
lret
jg
call
ret
addr16
xchg
mov
push
into
inc
cs
mov
mov
dec
mov
incl
add
iret
pop
dec
jmp
push
into
push
sahf
adc
or
outsl
clc
incl
inc
aas
cmp
in
mov
mov
mov
cmp
ret
fists
pop
sbb
add
mov
inc
pop
fdiv
mov
jbe
mov
lcall
xchg
pop
add
loope
ljmp
adc
sahf
call
jl
jno
pop
add
and
push
push
gs
xor
ja
loop
outsb
scas
jge
mov
mov
int
sbb
adc
aaa
cmp
pop
int3
fwait
mov
dec
xor
cmp
hlt
aaa
in
jle
ja
mov
mov
out
jg
lock
int3
aam
mov
push
lock
lea
or
imul
fisttps
xchg
pop
or
das
in
loopne
push
add
decl
adc
nop
mov
dec
mov
sub
faddl
dec
lret
dec
lcall
jb
xor
mov
lcall
fildll
idivb
mov
mov
jns
fisttpll
jg
jne
aaa
and
fnsave
mov
call
inc
inc
or
in
roll
mov
sub
or
jns
pop
dec
push
enter
mov
jmp
pop
in
adc
testb
jns
lock
sbb
lock
add
add
mov
xchg
adc
decl
ds
jmp
xchg
sub
sarl
mov
lcall
std
call
mov
push
mov
cwtl
cmp
aas
aaa
mov
add
lret
das
mov
decl
xchg
sbb
inc
pop
mov
scas
lret
andl
sbb
movsb
push
ljmp
les
xchg
xor
inc
jge
xor
pop
aam
or
inc
sub
in
stc
pop
or
pushl
push
dec
lret
pusha
insb
sub
out
mov
rorl
int
aad
addr16
aas
lcall
cmp
sbbl
lea
imul
adc
mov
inc
call
mov
popa
mov
aad
hlt
mov
scas
mov
inc
mov
and
cmp
and
pop
stos
pop
jmp
dec
mov
incl
jns
sub
xor
xor
enter
int
dec
xchg
mov
sub
decl
test
and
inc
mov
repz
ds
lea
dec
das
mov
hlt
cmp
mov
fidivrl
sbb
mov
adc
fwait
aaa
mov
push
call
pushl
xchg
mov
in
dec
mov
jmp
and
or
inc
aam
jmp
lret
lcall
sbb
or
push
rcl
xlat
mov
or
cmp
push
xchg
sub
mov
ljmp
sub
jo
shll
into
push
cmpsb
fdivs
jge
add
mov
mov
jmp
scas
aad
inc
sbb
dec
aas
test
int3
test
ljmp
shlb
enter
icebp
xor
cmp
sub
adc
inc
and
add
inc
xor
add
shr
outsb
mov
pushf
cmp
ja
cmpl
dec
icebp
mov
lcall
jmp
cmp
cwtl
incl
jp
fildll
pop
cmp
loop
jb
mov
dec
lock
xchg
mov
xor
cld
add
jae
loopne
mov
adc
fs
call
dec
sarb
inc
push
mov
cmp
dec
sub
lcall
insl
push
icebp
xchg
pop
inc
jb
paddsw
stos
or
jmp
jnp
cld
jl
push
cmp
outsl
xor
inc
xchg
push
movsl
cmp
iret
ljmp
add
jp
mov
adc
xor
push
or
lcall
jmp
cmp
push
lods
test
ja
mov
push
ds
or
hlt
int
lcall
ffreep
or
pop
sub
adc
inc
mov
or
inc
out
mov
cmc
decl
fwait
xlat
iret
and
jl
add
mov
sbb
decl
dec
movsl
xor
arpl
lds
add
jbe
fbstp
and
imul
mov
dec
cmpsb
xchg
sub
popf
nop
xchg
and
mov
cmpsb
lcall
dec
mov
loop
inc
into
pushf
fidivl
xor
sahf
orb
lock
pop
std
xchg
mov
lcall
xchg
mov
push
sbb
iret
arpl
cltd
andl
into
data16
sub
jg
push
fsubr
sub
add
repnz
loop
jae
jae
sti
ds
fistps
mov
les
ja
inc
repnz
int
push
mov
fidivs
mov
or
lcall
incl
sarb
push
movsb
xchg
xor
cmpsl
test
decb
mov
incl
xchg
vxorps
sub
in
js
jg
mov
lcall
stos
inc
test
incl
pop
test
imul
cmp
bound
push
loope
mov
push
std
jmp
or
ret
enter
and
js
adc
sub
incl
xchg
pop
ret
jge
jg
xchg
sbb
lods
and
pop
movsl
shrl
pop
cmp
icebp
xlat
lock
jp
cmp
pushf
nop
iret
movsb
pop
sbb
dec
jns
stos
fildll
mov
sbb
push
loope
lret
jle
xchg
and
lods
out
add
mov
aad
sti
fcompl
mov
jmp
cwtl
sti
mov
ja
mov
mov
cli
shlb
loop
cmpsl
insl
mov
dec
push
sub
orb
sbb
inc
roll
sarl
cmpsb
add
sbb
cmp
data16
pop
inc
push
loope
add
dec
aam
jl
xchg
mov
push
sub
mov
pop
mov
lcall
mov
lcall
pop
jp
mov
jp
fcmove
cmp
or
mov
push
ja
outsl
jp
idivl
fcomps
sub
ret
dec
jo
push
call
std
fisubs
mov
fistpl
movsb
jmp
rorl
test
dec
jne
mov
jecxz
bound
mov
sahf
or
mov
dec
sub
ljmp
in
pop
dec
sbb
push
shlb
aad
bnd
sub
push
pop
or
scas
mov
incl
in
int
jno
cmpl
sub
xchg
xchg
push
loop
test
jnp
dec
add
fpatan
mov
sub
cld
cmc
sub
addb
xchg
out
repz
out
test
pushl
js
lahf
addr16
or
lahf
mov
idivl
pop
or
outsb
lods
push
or
add
jne
frstor
mov
or
stos
call
sbb
or
cmpsl
jge
cli
push
adc
mov
and
ljmp
mov
cld
jo
pop
popa
push
imul
clc
imulb
jbe
cmp
je
pushf
lcall
mov
pop
sbb
ror
in
fidivrl
xchg
mov
push
cmpsb
inc
inc
and
jle
leave
inc
outsb
inc
cmp
xor
dec
iret
cmp
sbb
je
mov
ja
mov
int3
stos
inc
int3
lret
mov
dec
xchg
adc
cmp
imul
sti
jecxz
out
inc
pushl
adc
les
out
or
lods
mov
cld
adc
adc
pushl
dec
test
jle
sbb
or
lret
or
loop
xchg
jne
sub
and
pop
ljmp
jmp
jo
mov
or
jmp
cmp
bound
sub
push
jmp
ja
into
mov
rcl
jg
cli
push
gs
out
stos
clc
dec
push
dec
shlb
cmp
adcl
push
inc
or
dec
sti
push
push
adc
leave
in
lods
sub
lods
cltd
out
mov
push
daa
push
pop
sbb
pushl
mov
lods
jmp
jl
mov
sbbl
jl
cmp
inc
xlat
dec
int3
pop
jecxz
imul
xchg
jle
sub
ljmp
cmp
jbe,pn
xchg
ds
mov
add
push
iret
rol
enter
orl
push
loope
push
lods
dec
pop
loope
push
pop
inc
sub
addr16
pop
jp
mov
inc
sbb
or
mov
out
cli
mov
pop
fprem
out
pop
lret
xchg
lea
ljmp
fucom
xchg
incl
jae
iret
pushf
adc
adc
cmp
inc
sbb
push
out
and
addr16
ljmp
mov
lea
and
out
mov
or
pop
push
cmpsl
pop
mov
mov
out
cli
cmpl
movsb
popa
int3
shl
inc
push
clc
cmovl
push
movsl
push
call
cvtpi2ps
cmp
mov
shrl
xlat
mov
sahf
push
pop
aaa
imul
mov
inc
cli
mov
lods
or
clc
push
inc
adc
ljmp
call
repnz
int3
or
dec
les
jbe
ljmp
jg
lods
outsb
lahf
incl
int3
pop
xor
sbb
adc
cli
fwait
das
les
sbb
cli
pushl
xor
push
out
dec
xchg
xchg
addr16
jb
inc
bound
or
inc
xchg
cmpsb
icebp
call
jb
jnp
sbb
sbb
repz
pop
inc
pop
mov
jno
leave
inc
or
xchg
inc
push
dec
cld
jl
ljmp
add
inc
in
aad
fbld
jnp
mov
jns
sbb
cli
pushf
add
or
decl
mov
add
jns
les
je
adc
xlat
push
or
pushl
dec
xor
jo
adc
add
cmp
int3
push
aad
adc
mov
call
and
es
idivb
sbb
mov
aam
sbbb
add
mov
insl
mov
sub
gs
mov
inc
mov
fmuls
fcoms
ljmp
in
fisubrl
aaa
mov
or
sub
xchg
sub
mov
add
cmp
stc
and
mov
lods
mov
mov
sub
lcall
jbe
pop
addl
lcall
adc
mov
enter
jg
xor
push
inc
loopne
sti
jo
sti
movsl
jo
je
jmp
sbb
dec
das
in
es
ljmp
nop
shll
inc
jmp
lods
loope
pop
ja
dec
stc
aaa
inc
or
stos
decl
rcll
push
sar
pusha
into
xorl
ljmp
mov
mov
int
ret
or
imul
xlat
test
cmp
jmp
sub
pop
sub
andb
xlat
inc
mov
jg
cmp
movsl
mov
movsl
int3
ja
adc
and
mov
loopne
loopne
cmp
leave
xor
daa
xchg
or
push
adc
cmp
push
mov
call
cmp
and
dec
mov
call
test
aad
pop
mov
inc
push
push
jne
ljmp
and
bound
andl
inc
fucom
sbb
cld
or
ljmp
xchg
sahf
fists
negb
out
gs
inc
adc
add
cmc
cmp
mov
das
clc
inc
and
shl
xor
push
add
or
test
mov
call
jbe
bound
jmp
lcall
push
inc
mov
and
sti
clc
add
pusha
ljmp
jg
call
adc
or
mov
mov
adc
xchg
btc
fisttpll
xchg
sbb
call
dec
and
adc
xor
push
cmp
mov
mov
ljmp
add
int3
cmp
pushf
orb
cld
jecxz
jl
ret
xor
pushl
cmp
ret
mov
push
xchg
daa
test
rorb
add
jb
xchg
rcrb
lds
pushl
inc
adc
out
mov
fnstcw
push
adc
shll
sti
or
inc
fdivrs
sub
push
in
dec
add
repnz
xor
orb
mov
cwtl
out
dec
dec
dec
orb
loope
pop
pop
and
push
push
add
or
fidivrl
jbe
addr16
ja
les
adc
mov
add
dec
and
sarl
imulb
lcall
sahf
sub
xor
lods
fwait
push
outsb
inc
movsl
pop
movsb
js
push
push
cltd
xchg
mov
cltd
test
mov
movsl
add
fcmovb
sub
sarb
stos
cmp
outsb
jns
test
popf
dec
mov
cmp
out
xchg
adc
ret
add
in
adc
mov
rcrb
or
in
lret
pop
insb
arpl
mov
hlt
jae
lock
jmp
and
imul
cmp
ljmp
pusha
push
cmp
adc
xchg
push
mov
pop
xor
dec
pop
loopne
das
nop
shlb
cli
push
rorl
add
pushl
pop
ja
push
rcrb
rcrl
filds
mov
ljmp
int3
push
ret
loop
mov
mov
inc
out
or
fistpll
cmp
push
ret
into
scas
fs
cli
cmpb
ficomps
shlb
jno
mov
inc
mov
fldt
and
sarl
mov
xor
clc
push
out
leave
sbb
pop
adc
jge
cld
xchg
jnp
adc
fcompl
adc
call
inc
mov
adc
iret
push
dec
mov
jmp
out
stos
decl
mov
cld
popa
adc
and
scas
cltd
ja
jle
lret
mov
out
jg
incl
cmpsl
dec
addr16
scas
cmp
arpl
out
in
add
add
subb
jecxz
iret
push
movsl
int
clc
pop
incl
dec
inc
push
ret
push
insb
jno
arpl
rcr
lods
cmpsl
std
or
sbb
jg
inc
cld
bound
in
adc
dec
ret
incl
in
or
mov
mov
lods
icebp
into
stos
cmp
std
push
divl
lcall
rorl
test
xchg
mov
lods
xor
sub
lds
mov
std
test
ljmp
mov
dec
mov
pop
leave
xchg
sbb
lods
lcall
cli
jmp
negb
sub
std
inc
js
adc
lods
movsl
sahf
cmp
leave
fidivrs
lcall
into
mov
out
pop
cmp
jle
out
gs
insb
shrl
orl
mov
in
mov
mov
shl
push
out
xor
hlt
mov
lcall
push
add
mov
and
sub
imul
mov
test
out
and
or
fisubrs
jno
fwait
jo
das
push
adc
ficompl
mov
fcomps
mov
lcall
push
or
ljmp
sarb
xor
fdivs
cmpsl
movsb
or
std
pushl
or
aas
xchg
mov
pusha
adc
into
out
fcoml
xchg
out
xchg
adc
xchg
mov
mov
xchg
sub
xchg
xchg
jns
add
out
sti
repnz
aas
aas
out
inc
adc
jmp
hlt
cltd
addb
adc
jg
adc
push
and
decl
movsb
scas
xor
mov
add
out
add
add
dec
loop
sub
call
dec
shrb
mov
mov
jmp
stos
lods
adc
ljmp
jmp
mov
inc
mov
pop
ret
repnz
popf
lcall
jmp
lcall
addr16
mov
add
sub
jmp
xchg
lods
mov
clc
fistpll
mov
ds
sbb
sbb
test
mov
cmp
and
ljmp
push
push
xchg
stos
repnz
mov
cmpsb
in
adc
out
jg
mov
adc
dec
int
xor
insb
das
in
repnz
push
mov
lods
cwtl
cwtl
lret
mov
xchg
jae
mov
ljmp
xor
test
sbb
sar
mov
cmpsl
out
and
push
dec
xchg
arpl
xchg
insl
lods
sub
jle
mov
ds
push
cli
push
pop
test
daa
dec
adc
and
lcall
inc
popa
xor
mov
insl
pop
nop
mov
lcall
mov
ret
sbb
push
pop
test
mov
jb
outsb
in
lcall
xor
and
test
or
rclb
decl
cmpsl
imul
in
push
ret
mov
and
aad
pop
iret
pop
fs
in
ds
jb
test
mov
push
int3
pop
es
bound
imul
je
decl
mov
stos
movsb
xchg
lds
or
sahf
nop
xor
data16
into
cwtl
mov
lcall
and
xchg
mov
cmp
sbb
stc
mov
mov
mov
pushl
cmpsb
sbb
mov
add
push
into
int3
xchg
lods
lods
jg
fcompl
cs
call
jg
fsubs
in
dec
bound
add
push
pushl
cmp
sub
data16
std
das
cmp
xchg
add
addl
or
fcoml
cmp
xchg
fidivl
sti
add
inc
mov
sbb
sbb
pop
push
xor
fisttpl
jb
je
xchg
mov
mov
orw
insl
push
or
in
xor
out
mov
iret
rcll
push
lds
aam
dec
add
mov
sub
mov
cmp
push
inc
lods
test
pop
ja
and
sbb
xchg
pop
push
in
inc
xchg
fdivl
jo
mov
call
cmp
jmp
in
sbb
sar
xchg
and
xchg
cmp
and
test
mov
xor
aad
cmp
int3
lcall
push
roll
cmp
and
movsl
jne
mov
lcall
lock
jbe
xchg
aam
jle
mov
push
or
xlat
fwait
mov
in
cmp
pop
lock
ljmp
out
aad
pop
sbb
jne
andb
mov
out
dec
insl
mov
jp
sbb
push
pop
pop
scas
in
mov
notb
repz
das
pop
mov
test
lock
hlt
cmpsb
out
aas
sbb
mov
notb
sar
mov
fists
les
jo
push
subb
shl
lods
scas
mov
and
jp
leave
int
push
sbb
ljmp
push
testb
ficoms
aad
jp
out
adc
incl
test
pop
repz
lea
out
stos
add
out
sbb
insb
mov
imul
or
ljmp
insb
xor
cs
insb
add
arpl
add
sub
addb
jmp
cwtl
adc
push
add
inc
gs
imul
popa
je
idiv
idiv
push
imul
imul
gs
bound
arpl
in
popf
flds
ss
jb
jne
add
es
push
and
mov
inc
imul
cmp
mov
jae
daa
dec
popa
mov
jb
sbb
inc
jb
popa
jae
popa
jo
xor
aaa
sti
pop
push
jns
insl
into
popaw
jne
je
dec
mov
jne
addr16
ss
push
imul
fs
push
outsl
mov
gs
or
or
or
fidivrs
cltd
push
push
push
dec
jns
int3
fisubl
pop
adc
outsb
pop
dec
in
lahf
rcll
dec
outsb
imul
jg
repnz
push
outsl
push
pop
mov
jo
call
insb
outsl
bound
and
subb
mov
in
into
pop
ret
imul
int
scas
and
dec
sbb
jns
push
and
inc
push
sbb
adc
pop
or
pop
jae
je
dec
outsl
arpl
push
jnp
ja
push
sub
jo
push
jne
sub
jne
insb
rcrl
outsl
add
dec
inc
pop
lock
jo
and
fs
xchg
mov
adc
and
jl
mov
xlat
lock
dec
jae
rclb
loope
mov
xchg
outsb
mov
lock
inc
xchg
ljmp
test
sub
add
mov
jo
push
jae
lret
or
ret
inc
dec
inc
gs
insl
dec
jns
push
or
ja
ret
and
inc
jo
and
mov
sbb
stc
fwait
rorb
aas
dec
cli
stc
inc
inc
xchg
lcall
inc
inc
leave
xor
mov
insb
dec
outsl
adc
int3
inc
push
out
imul
and
or
xor
outsl
inc
sub
and
ret
fmul
push
outsb
insl
insb
xor
popa
bound
xor
inc
ss
dec
arpl
fs
or
adc
sbb
xorb
cmp
mov
mov
inc
nop
insl
inc
in
loopne
aad
pop
orl
and
mov
insb
je
imul
jg
inc
mov
outsb
ja
in
push
outsl
insb
jne
jmp
std
aaa
inc
insb
cmp
int3
aaa
sbb
sbb
repnz
jns
std
stos
xor
es
mov
push
imul
ret
xlat
jl
cmpsl
inc
insb
int3
jae
andl
mov
sub
mov
js
inc
jae
jne
push
cld
mov
pop
es
cmp
mov
xchg
leave
push
xchg
xor
mov
scas
cmp
insb
jae
mov
xlat
imul
push
pop
shl
push
dec
xchg
cmp
jl
xlat
push
inc
mov
cltd
push
cwtl
jae
mov
add
xor
add
xchg
lahf
jbe
sub
ds
sub
add
mov
sbb
outsb
add
inc
loopne
sbb
fs
sub
xor
adc
sub
inc
sbb
xor
mov
popa
add
adc
push
roll
dec
add
jnp
sahf
jne
mov
inc
mov
cmp
insb
sbb
cmp
inc
cmpsb
xchg
faddl
jb
int3
dec
gs
addl
dec
push
divb
ds
insb
addr16
push
out
out
inc
out
aas
bound
outsl
js
es
inc
dec
inc
push
andb
inc
imul
adc
cld
jo
fildl
in
xor
fcompl
dec
mov
dec
jbe
cmp
lods
add
inc
insl
bnd
sbb
jo
ljmp
pusha
jl
mov
insl
pop
loopne
jge
pusha
mov
push
cwtl
outsl
ja
stos
in
into
cmp
pop
dec
insl
jl
sbb
dec
loope
sbb
imul
outsl
xchg
pushw
mov
jl
mulb
in
push
push
outsb
inc
inc
inc
inc
insb
push
gs
ja
arpl
cs
cmp
add
xchg
xor
rorl
insb
loope
inc
js
int
xorb
rcll
roll
sub
test
push
xchg
sbbl
xor
outsl
dec
fs
and
hlt
out
rcrb
cmp
inc
cmp
jo
fwait
cltd
out
mov
data16
aas
push
insl
push
aam
add
das
pop
push
push
xor
out
push
dec
mov
sbb
icebp
jae
repz
ja
cmp
jns
insb
roll
jbe
insl
adc
aaa
adc
push
mov
xlat
dec
lret
nop
sbb
je
pop
sbb
xchg
ret
stos
push
and
out
int3
xor
ljmp
mov
imul
pusha
test
cltd
dec
push
mov
cs
push
jns
xchg
shl
repz
mov
jo
xor
jns
pop
pushf
lds
inc
fcoms
or
ds
ja
lahf
loop
xor
lods
cmp
push
inc
push
dec
inc
jp
add
in
imulb
test
add
add
sbb
jnp
mov
daa
mov
adc
nop
add
jg
and
add
add
mov
pop
es
adc
mov
pop
mov
cs
cs
shll
push
xlat
add
rcrl
in
add
xchg
mull
shlb
jp
inc
cmp
mov
cs
dec
out
xchg
mov
fistl
or
jle
xchg
jg
dec
pop
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
