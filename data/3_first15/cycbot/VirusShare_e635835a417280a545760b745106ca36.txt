push
loop
in
jecxz
in
loope
in
jecxz
in
call
loop
pop
in
in
loop
in
in
in
loop
in
jecxz
in
in
in
out
in
in
in
in
in
call
loop
fsubr
loop
ljmp
in
jecxz
in
out
in
jecxz
in
in
in
in
in
call
loop
cmpsl
loop
in
jecxz
in
out
in
loop
in
out
in
loope
in
loop
in
jecxz
in
out
in
loop
in
in
in
in
in
in
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
call
loop
shl
loop
insl
call
loop
pop
jecxz
in
in
in
call
loop
sub
loop
or
loop
push
call
loop
jmp
loop
aaa
out
in
loope
in
jecxz
in
jmp
loop
lret
call
loop
and
loop
dec
in
in
out
in
out
in
out
in
out
in
out
in
call
loop
in
loop
xchg
out
in
jmp
loop
std
out
in
in
in
jmp
loop
cmpsb
in
in
out
in
loop
in
in
in
in
in
call
loop
add
loop
je
loop
inc
out
in
call
loop
mov
loop
xor
loop
push
jmp
loop
cli
call
loop
cmp
loop
std
jecxz
in
in
in
out
in
call
loop
daa
in
in
jecxz
in
in
in
in
in
jmp
loop
push
in
in
loope
in
call
loop
push
loop
shl
loop
xor
out
in
jecxz
in
in
in
call
loop
in
in
in
in
in
loop
in
out
in
out
in
out
in
in
in
jecxz
in
in
in
jecxz
in
out
in
in
in
jmp
loop
cmp
loop
pop
loope
in
out
in
in
in
jmp
loop
or
loop
push
out
in
loop
in
in
in
in
in
in
in
out
in
out
in
out
in
in
in
in
in
jecxz
in
in
in
in
in
out
in
jmp
loop
and
loop
out
loop
test
loop
sub
loop
aaa
jecxz
in
in
in
out
in
in
in
jmp
loop
adc
loop
mov
loop
and
in
jecxz
in
out
in
loop
in
jmp
loop
shl
loop
pop
call
loop
imul
in
jmp
loop
inc
in
in
out
in
in
in
in
in
out
in
loop
in
in
in
out
in
in
in
in
in
loop
in
jecxz
in
loope
in
out
in
in
in
jmp
loop
in
in
in
in
loop
in
in
in
out
in
loope
in
in
in
in
in
jmp
loop
out
in
call
loop
dec
call
loop
lock
in
call
loop
popa
out
in
call
loop
push
jecxz
in
out
in
out
in
in
in
loope
in
loop
in
call
loop
mov
in
in
in
in
out
in
in
in
jecxz
in
out
in
out
in
loope
in
loop
in
out
in
call
loop
sbb
loop
push
out
in
call
loop
aaa
jmp
loop
icebp
out
in
in
in
out
in
call
loop
and
loop
stos
loope
in
out
in
jecxz
in
loope
in
out
in
loope
in
out
in
out
in
out
in
loop
in
jecxz
in
out
in
call
loop
cmp
loop
loope
loop
into
loope
in
in
in
loop
in
in
in
loop
in
jecxz
in
in
in
loop
in
out
in
in
in
out
in
jecxz
in
out
in
out
in
in
in
in
in
in
in
jecxz
in
loope
in
in
in
loop
in
out
in
out
in
loope
in
jmp
loop
inc
loop
in
out
in
jecxz
in
out
in
loop
in
loope
in
loop
in
out
in
loope
in
jmp
loop
lret
out
in
in
in
out
in
call
loop
stos
jecxz
in
jecxz
in
in
in
out
in
call
loop
push
jecxz
in
out
in
loop
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
loop
in
in
in
call
loop
out
loop
lods
in
in
in
in
out
in
out
in
out
in
loop
in
call
loop
sbb
loop
repnz
in
call
loop
mov
jecxz
in
jecxz
in
jecxz
in
jmp
loop
adc
loop
in
in
in
in
in
in
in
out
in
call
loop
push
loop
in
call
loop
cmpsl
in
in
loop
in
loop
in
out
in
out
in
call
loop
pop
in
in
out
in
out
in
out
in
out
in
in
in
jecxz
in
out
in
jmp
loop
jne
loop
cs
in
in
in
in
in
out
in
in
in
call
loop
and
jmp
loop
xchg
out
in
in
in
out
in
out
in
out
in
in
in
call
loop
fsub
loop
xchg
loop
cmp
loop
outsl
in
in
loop
in
loop
in
out
in
jecxz
in
in
in
in
in
loop
in
in
in
out
in
loop
in
loop
in
in
in
out
in
jmp
loop
mov
loop
popf
loop
in
out
in
in
in
jecxz
in
loop
in
loop
in
jecxz
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
in
in
out
in
in
in
in
in
jmp
loop
sbb
loop
leave
out
in
call
loop
cmp
loop
push
in
in
out
in
out
in
loop
in
loop
in
call
loop
cmc
in
in
loop
in
out
in
in
in
loop
in
out
in
call
loop
push
jecxz
in
out
in
jecxz
in
out
in
in
in
loope
in
in
in
in
in
loope
in
loope
in
out
in
jmp
loop
scas
out
in
out
in
out
in
out
in
loope
in
call
loop
pop
call
loop
pop
out
in
call
loop
out
in
in
in
in
in
jecxz
in
loop
in
call
loop
leave
in
in
jecxz
in
loop
in
out
in
in
in
in
in
call
loop
jmp
jecxz
in
out
in
out
in
loop
in
out
in
out
in
loop
in
out
in
loope
in
loop
in
jmp
loop
and
loop
int3
out
in
loope
in
out
in
in
in
jecxz
in
out
in
call
loop
je
loop
or
loop
shr
in
out
in
out
in
out
in
call
loop
dec
out
in
call
loop
inc
jecxz
in
loop
in
loop
in
in
in
loope
in
in
in
in
in
jecxz
in
jmp
loop
or
loop
jl
loop
lret
in
out
in
out
in
jmp
loop
jae
loop
jecxz
loop
jne
loop
iret
loope
in
in
in
in
in
out
in
loop
in
out
in
in
in
loop
in
jecxz
in
loop
in
out
in
in
in
call
loop
adc
loop
fsub
loop
mov
loop
mov
loop
and
loop
jbe
loop
shl
in
jmp
loop
loop
dec
in
in
out
in
out
in
in
in
call
loop
inc
loop
in
in
in
out
in
jmp
loop
sbb
loop
jne
loop
sbb
loop
xor
jecxz
in
call
loop
pop
in
in
out
in
loop
in
in
in
in
in
jecxz
in
out
in
out
in
call
loop
dec
in
in
jecxz
in
out
in
out
in
jecxz
in
loop
in
jecxz
in
call
loop
cmp
loop
iret
jecxz
in
out
in
out
in
in
in
out
in
jecxz
in
call
loop
push
out
in
jecxz
in
loope
in
call
loop
loop
in
out
in
out
in
in
in
jmp
loop
add
loop
fs
in
jmp
loop
pop
jecxz
in
out
in
in
in
out
in
loop
in
in
in
in
in
loop
in
loop
in
in
in
jecxz
in
loop
in
out
in
loope
in
call
loop
mov
loop
movsb
loope
in
jmp
loop
adc
loop
lahf
out
in
out
in
in
in
jmp
loop
lret
in
out
in
out
in
out
in
in
in
loop
in
loop
in
loope
in
out
in
loop
in
in
in
loop
in
jecxz
in
out
in
out
in
out
in
out
in
jecxz
in
call
loop
adc
in
in
jecxz
in
in
in
loope
in
jecxz
in
call
loop
xchg
call
loop
add
loop
add
loop
dec
jecxz
in
loop
in
out
in
loop
in
loop
in
in
in
in
in
loope
in
call
loop
jb
loop
fsub
loop
xor
loop
jl
loop
lret
jecxz
in
loope
in
loop
in
in
in
in
in
call
loop
mov
loop
and
loop
sub
loope
in
in
in
loope
in
out
in
in
in
jecxz
in
loope
in
in
in
loop
in
out
in
out
in
call
loop
into
out
in
loop
in
call
loop
and
in
in
in
loope
in
loop
in
loope
in
call
loop
and
in
out
in
in
in
jecxz
in
loope
in
call
loop
adc
loop
cmp
loop
or
loop
fucom
loop
add
loop
ja
loop
pusha
out
in
in
in
call
loop
call
loop
sti
jecxz
in
out
in
jecxz
in
loope
in
in
in
call
loop
shl
loop
in
in
in
in
call
loop
dec
jmp
loop
loope
loop
or
loop
sti
loop
in
loope
in
jmp
loop
adc
loop
xchg
loop
sub
loop
jnp
loop
ds
in
out
in
in
in
in
in
jmp
loop
xlat
jecxz
in
loop
in
out
in
in
in
out
in
in
in
in
in
loope
in
in
in
jecxz
in
in
in
out
in
out
in
loop
in
jecxz
in
loope
in
out
in
out
in
call
loop
and
loop
push
call
loop
pushf
call
loop
mov
loop
ljmp
in
jecxz
in
in
in
jmp
loop
cmp
loop
push
in
in
in
in
call
loop
loop
imul
in
jecxz
in
call
loop
popf
loop
in
call
loop
mov
loop
stc
in
in
loop
in
jecxz
in
jecxz
in
jecxz
in
loope
in
in
in
jecxz
in
out
in
loop
in
in
in
jecxz
in
out
in
loope
in
call
loop
out
loop
fninit
loop
cmp
loop
fwait
jecxz
in
out
in
jecxz
in
jmp
loop
add
loop
mov
loop
mov
loop
cli
jecxz
in
in
in
jecxz
in
loope
in
jecxz
in
out
in
in
in
call
loop
jno
loop
std
out
in
out
in
in
in
call
loop
out
loope
in
loop
in
in
in
call
loop
and
loop
daa
in
in
in
in
in
in
out
in
loop
in
jecxz
in
in
in
jmp
loop
shl
loop
out
in
jecxz
in
in
in
loop
in
out
in
call
loop
scas
jecxz
in
loop
in
in
in
out
in
out
in
in
in
call
loop
stos
call
loop
in
in
in
in
out
in
in
in
out
in
out
in
in
in
out
in
jecxz
in
out
in
in
in
jecxz
in
call
loop
mov
loop
mov
loop
cmc
in
in
loope
in
in
in
jecxz
in
jmp
loop
push
out
in
loop
in
jecxz
in
jmp
loop
arpl
loop
dec
in
in
call
loop
fwait
loope
in
in
in
out
in
in
in
in
in
call
loop
call
loop
xchg
loop
in
out
in
loop
in
in
in
out
in
out
in
loope
in
loop
in
out
in
loop
in
in
in
loop
in
in
in
loope
in
jecxz
in
in
in
call
loop
xor
out
in
loope
in
in
in
in
in
loop
in
in
in
in
in
loop
in
out
in
out
in
loope
in
in
in
call
loop
cmc
out
in
jecxz
in
in
in
in
in
loop
in
out
in
loop
in
jecxz
in
in
in
in
in
call
loop
sub
loop
mov
loop
loop
loop
and
loop
in
in
jecxz
in
out
in
jmp
loop
je
loop
outsl
out
in
in
in
call
loop
dec
call
loop
ret
loope
in
loope
in
loop
in
loop
in
jmp
loop
xor
loop
inc
jecxz
in
in
in
loop
in
jecxz
in
in
in
jecxz
in
in
in
loope
in
out
in
loop
in
loop
in
in
in
jmp
loop
xchg
call
loop
xchg
loop
push
out
in
in
in
out
in
jmp
loop
jp
loop
je
loop
call
loop
ds
in
out
in
loope
in
out
in
in
in
loop
in
loope
in
loop
in
jecxz
in
loope
in
in
in
in
in
out
in
out
in
in
in
out
in
call
loop
movsl
out
in
out
in
loop
in
loop
in
in
in
jecxz
in
loop
in
loop
in
loop
in
out
in
out
in
out
in
out
in
in
in
out
in
jecxz
in
call
loop
mov
loop
fucom
loop
in
in
out
in
jecxz
in
in
in
loop
in
out
in
in
in
jmp
loop
jg
loop
jl
loop
sbb
loop
mov
out
in
in
in
out
in
jecxz
in
out
in
loop
in
jmp
loop
out
in
jmp
loop
in
in
call
loop
loop
lock
in
call
loop
mov
jmp
loop
push
out
in
in
in
jecxz
in
in
in
out
in
out
in
in
in
in
in
out
in
call
loop
mov
loop
lock
in
in
in
call
loop
call
loop
test
call
loop
push
out
in
jecxz
in
out
in
in
in
in
in
loop
in
in
in
in
in
loope
in
loop
in
in
in
out
in
in
in
call
loop
das
call
loop
push
in
in
out
in
out
in
in
in
jmp
loop
inc
call
loop
pop
out
in
loop
in
loope
in
loop
in
out
in
loop
in
out
in
in
in
in
in
out
in
loop
in
jmp
loop
popf
out
in
in
in
loope
in
loop
in
out
in
loop
in
loop
in
out
in
out
in
in
in
jmp
loop
mov
loop
int3
out
in
in
in
in
in
loope
in
out
in
call
loop
pop
jmp
loop
push
jmp
loop
mov
out
in
jecxz
in
in
in
jmp
loop
ja
loop
add
loop
pushf
out
in
call
loop
xchg
loop
ja
loop
jo
loop
pop
out
in
in
in
out
in
in
in
call
loop
inc
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
in
in
in
in
loop
in
in
in
jecxz
in
loope
in
jecxz
in
out
in
loope
in
jecxz
in
in
in
loop
in
jecxz
in
jecxz
in
out
in
out
in
out
in
call
loop
test
loop
and
in
jmp
loop
loop
in
call
loop
and
loop
out
loop
loop
and
loop
nop
call
loop
loop
sub
loop
xor
loop
inc
loop
in
jecxz
in
loop
in
loope
in
in
in
loope
in
jecxz
in
in
in
out
in
out
in
call
loop
push
out
in
out
in
out
in
loop
in
in
in
loop
in
out
in
loop
in
in
in
out
in
out
in
out
in
loope
in
loop
in
loop
in
in
in
in
in
call
loop
loopne
loop
inc
call
loop
in
out
in
jecxz
in
call
loop
sbb
loop
jnp
loop
fwait
call
loop
mov
loop
popa
in
in
out
in
jecxz
in
jecxz
in
in
in
call
loop
loopew
in
out
in
out
in
out
in
in
in
in
in
in
in
out
in
jecxz
in
call
loop
dec
loop
in
loop
in
call
loop
fndisi(8087
loop
fsubp
loop
out
in
call
loop
push
in
in
loop
in
jecxz
in
out
in
call
loop
pmulhw
in
loop
in
call
loop
xchg
jecxz
in
out
in
jecxz
in
loop
in
jmp
loop
pop
jecxz
in
loop
in
out
in
in
in
loope
in
call
loop
jbe
loop
shl
loop
add
loop
cmpsb
loop
in
loop
in
out
in
call
loop
test
loop
add
loop
shl
loop
js
loop
imul
loop
lcall
in
out
in
loop
in
in
in
call
loop
sbb
in
in
out
in
in
in
loop
in
out
in
out
in
in
in
call
loop
inc
out
in
jecxz
in
call
loop
lahf
in
in
in
in
in
in
loop
in
out
in
out
in
jecxz
in
out
in
call
loop
lcall
in
jecxz
in
in
in
in
in
in
in
in
in
call
loop
push
loop
in
in
in
loop
in
out
in
out
in
out
in
loop
in
out
in
loop
in
in
in
out
in
out
in
out
in
in
in
out
in
in
in
loop
in
call
loop
dec
in
in
loope
in
jecxz
in
call
loop
mov
loop
jp
loop
mov
out
in
in
in
out
in
loop
in
out
in
jmp
loop
aaa
call
loop
shl
in
loop
in
in
in
in
in
loope
in
out
in
in
in
call
loop
test
loop
mov
loop
test
loop
js
loop
test
loop
adc
in
in
in
in
call
loop
and
loop
lahf
call
loop
sub
loop
mov
call
loop
ret
in
in
out
in
in
in
out
in
jecxz
in
jmp
loop
into
in
in
in
in
jecxz
in
out
in
call
loop
and
in
in
in
jmp
loop
inc
jmp
loop
mov
loop
sbb
loop
cmp
loop
xor
loop
and
loop
adc
loop
xchg
loop
clc
out
in
call
loop
leave
jecxz
in
in
in
loop
in
out
in
out
in
out
in
loop
in
out
in
jecxz
in
jmp
loop
push
out
in
in
in
jmp
loop
pop
loop
in
in
in
out
in
in
in
out
in
out
in
out
in
in
in
jecxz
in
in
in
call
loop
pop
loop
in
jecxz
in
jecxz
in
out
in
in
in
pusha
add
and
jmp
add
and
jmp
add
imul
jle
dec
push
xor
fldenv
mov
add
add
cli
add
xor
dec
jae
pushl
pushl
addl
adc
in
jp
add
lret
repz
push
sub
jns
fdiv
stos
jno
cld
mov
add
xchg
adc
pushl
lods
mov
fildll
push
add
mov
dec
rcrb
rcrl
jmp
mov
ret
add
ret
add
add
add
add
ljmp
into
mov
push
lods
leave
xor
jmp
add
add
fisubrl
stos
jmp
fnstenv
add
movsl
add
or
pop
mov
sub
add
push
and
jmp
fiadds
add
add
add
lcall
sub
add
imul
push
loope
sahf
movl
inc
add
out
out
or
xchg
fldcw
call
jmp
add
mov
fadds
cmpsl
add
lcall
loopne
jg
add
add
testb
add
xchg
test
pushf
dec
pop
jb
fucomip
dec
aad
add
cmp
test
inc
add
pop
xchg
mov
add
dec
push
lds
xor
pushl
sbb
mov
push
rolb
add
ss
add
decl
lock
nop
push
push
add
xchg
or
add
add
test
roll
cmpsl
add
rorb
jbe
or
jo
decl
lcall
add
jmp
add
in
push
pop
add
popa
add
mov
add
sbb
push
mov
add
lahf
popa
add
pop
push
or
ret
add
xchg
das
iret
les
stos
into
imul
movb
jb
lcall
cmp
add
lcall
mov
jmp
dec
inc
add
in
out
lea
call
jb
incl
mov
pop
roll
mov
fwait
cmp
out
or
add
movsb
add
cmpsb
add
mov
xor
lcall
xor
jmp
dec
cs
or
cmp
iret
movl
mov
pushl
cli
mov
add
jno
mov
xor
jmp
add
imulb
cli
xchg
mov
add
insl
add
adc
add
clc
cld
pusha
add
aad
mov
sub
js
in
xchg
lods
xchg
repz
inc
add
repnz
pop
aas
jg
add
popl
inc
jecxz
push
mov
sub
push
push
push
push
push
call
push
push
call
cmp
je
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
je
ret
pushl
add
inc
add
jb
mov
add
popf
in
ja
add
call
fldcw
add
inc
add
jp
xchg
push
add
xor
in
addb
mov
scas
addl
add
and
pushl
incl
dec
jno
push
test
adc
mov
pushl
mov
add
mov
and
call
mov
add
cmpsl
add
pushf
add
cmp
std
jno
call
std
jb
inc
add
xor
add
lret
dec
lods
cmp
jp
les
jmp
add
push
jnp
repnz
mov
cmp
or
faddl
stc
lods
mov
inc
add
add
aaa
pop
add
add
cmp
adc
call
out
or
mov
aad
add
mov
add
mov
shlb
ret
outsl
movb
imul
push
movl
js
add
add
fldl
xor
call
lcall
add
and
call
ljmp
push
les
movsl
add
test
daa
add
xor
add
adc
inc
add
jbe
pop
dec
inc
add
dec
sbb
xchg
mov
add
shrb
push
icebp
imul
add
shrl
add
rolb
add
out
mov
sbb
add
sub
scas
mov
mov
jns
xchg
mov
xchg
push
lds
arpl
cli
xor
lcall
and
ljmp
mov
jl
add
sub
popa
add
jb
pushl
add
dec
dec
cwtl
pop
fiaddl
add
aaa
inc
add
push
add
es
enter
inc
add
push
int
cmp
in
cmp
jg
add
cld
inc
add
test
push
add
incb
roll
aas
push
add
xchg
les
cltd
int
jmp
add
sub
push
pop
cmp
pop
or
add
clc
dec
xor
add
xor
push
add
sbb
pop
add
add
inc
add
xchg
inc
add
add
aam
or
fmuls
loop
push
add
cmp
add
lcall
add
mov
test
je
lock
add
iret
push
rcl
xor
pushl
add
aad
pop
in
push
add
out
xor
lcall
das
mov
repnz
add
jo
incl
jmp
or
repz
into
repz
add
fiaddl
call
add
pushl
add
jbe
add
mov
outsl
mov
loop
and
inc
add
inc
add
jl
add
add
sub
decl
cmp
mov
add
js
inc
add
adc
ljmp
add
add
add
inc
add
hlt
in
xor
call
push
add
movl
data16
seta
add
dec
mov
add
incl
add
cltd
and
mov
add
add
xchg
jle
add
cmp
lcall
lock
mov
add
hlt
mov
xchg
mov
jbe
add
mov
insb
cmp
outsl
dec
push
xchg
cs
das
jge
sahf
mov
test
add
dec
loope
mov
inc
add
inc
add
jmp
add
add
push
add
adc
stc
in
cld
add
incl
jns
add
mov
add
incl
insb
add
pushl
add
outsb
jle
into
std
inc
add
test
in
add
arpl
lcall
lcall
add
xchg
adc
mov
add
addl
add
add
movl
add
in
rolb
add
call
inc
add
mov
ss
add
ljmp
jg
add
cli
call
add
lret
ljmp
addl
add
push
push
add
jle
add
dec
addb
fwait
mov
sbb
leave
insl
and
ljmp
push
add
cli
cwtl
mov
gs
in
sub
ds
and
jmp
add
pop
nop
pop
jecxz
xor
ljmp
test
scas
movl
call
lcall
inc
add
jg
add
ljmp
jb
jl
clc
data16
mov
add
sub
cmp
add
fistl
add
dec
xchg
pop
lcall
daa
add
jo
lcall
sbb
ficompl
test
test
loope
ret
add
and
ljmp
xchg
std
movsb
add
add
nop
movb
imul
jecxz
lret
mov
bound
inc
add
mov
push
add
arpl
jmp
jecxz
bound
lcall
add
cmp
in
jl
test
xor
aam
push
std
out
and
cli
and
mov
daa
add
fsubrs
add
sti
pop
add
dec
or
add
add
addb
add
sbb
fisttpll
sti
aaa
pop
aam
add
es
add
decl
push
add
out
fstl
ret
rcrl
inc
add
mov
mov
int3
xor
lcall
mov
push
add
ljmp
fistpl
jecxz
in
in
stc
daa
add
add
or
cmp
ljmp
cmp
hlt
push
add
xor
mov
hlt
pop
add
add
mov
cmp
add
std
aas
out
mov
fstps
call
push
movl
add
movsl
add
add
movsb
add
sub
sbb
add
add
pusha
add
imul
or
push
add
insl
mov
mov
cmp
fisttps
jmp
add
push
add
lret
movb
rolb
jl
add
pop
data16
add
lcall
push
roll
ds
jp
xlat
push
cld
pusha
add
mov
mov
mov
lret
in
fs
ja
adc
lcall
xchg
mov
add
incl
das
sub
mov
imulb
imul
movsl
add
and
add
add
adc
add
icebp
std
dec
imul
pop
xor
add
xor
add
add
cmp
sbb
neg
add
fldt
sub
add
add
jg
add
iret
push
loope
inc
add
xor
lcall
push
push
add
push
add
jno
call
enter
test
add
lds
stos
scas
addb
add
ljmp
dec
jg
jmp
add
addb
add
xor
jmp
mov
sub
add
xor
decl
call
movsl
add
add
mov
test
add
xchg
int3
mov
add
mov
pop
aas
push
push
add
add
push
ds
mov
cmpsb
add
xchg
dec
xor
call
pushl
outsl
add
ljmp
add
add
je
add
add
ss
add
sub
add
xchg
xlat
out
pop
sarl
das
loop
add
add
cs
movsl
add
add
adc
add
jb
ljmp
jecxz
pushf
scas
bound
decl
lock
and
call
mov
pop
rolb
add
movsb
add
stc
in
movl
rolb
add
dec
insl
jno
jmp
cmp
and
pushl
or
xchg
and
je
jo
lcall
add
arpl
ljmp
imul
and
pushl
push
add
pusha
add
int3
mov
sets
scas
push
pop
inc
add
mov
lock
adc
call
push
jno
call
and
jmp
sbb
add
xor
lcall
mov
push
jmp
add
xor
stc
or
jbe
mov
ret
sbb
add
enter
and
incl
add
pushf
dec
xchg
and
ljmp
mov
roll
leave
dec
sahf
sub
or
lds
jmp
add
test
and
cmp
add
add
dec
add
jmp
incl
add
data16
add
ret
add
pop
sub
inc
add
mov
fmulp
lods
adc
aas
mov
jle
movb
loopne
jne
ret
in
dec
add
call
add
add
outsl
pop
das
dec
jno
call
mov
xor
in
es
call
add
repnz
add
add
add
sbb
add
pop
mov
add
fsubrs
add
sbb
mov
add
popf
sub
xchg
addl
addb
add
or
add
jae
aas
fwait
xchg
mov
aad
imul
insb
push
mov
cmp
jmp
aaa
push
xlat
cmp
xchg
mov
add
add
and
call
scas
addl
add
cmp
fisttpl
aaa
fnstcw
jge
shrb
pusha
add
push
add
lds
hlt
popf
inc
add
dec
in
push
add
add
push
sbb
stc
sub
jb
jmp
add
stc
add
xchg
iret
lret
add
push
add
scas
lds
fstl
add
xchg
inc
add
inc
add
mov
jnp
sub
mov
mov
dec
jns
push
push
xchg
insl
jmp
add
xor
decl
push
add
das
cmc
sub
add
add
mov
adc
in
sbb
fcoml
mov
stc
mov
js
add
push
add
pusha
add
aad
cmpsl
add
add
push
sarb
add
pusha
add
addl
xchg
add
decl
mov
and
incl
mov
adc
jmp
add
dec
or
add
shlb
lret
inc
add
cmpsl
add
add
cli
cmp
add
mov
pop
push
add
repz
sbb
icebp
dec
cmpsb
add
add
incl
fxtract
addl
jle
add
icebp
add
jl
sti
in
jge
dec
push
addl
lea
arpl
ljmp
int3
pop
je
sahf
jmp
pop
mov
sbb
add
jmp
inc
add
call
add
lahf
jno
call
sarb
movsb
add
mov
xchg
mov
repz
insl
sub
cld
sbb
add
roll
jno
lcall
sbb
mov
ja
add
add
xchg
pop
dec
ret
les
or
pushl
and
inc
add
add
je
add
cmp
lea
aaa
roll
mov
mov
add
cld
cmp
fcmove
jb
dec
lea
add
ja
add
add
stc
pop
bound
jmp
add
inc
add
sub
add
or
out
fbstp
add
insb
daa
add
fnstcw
inc
add
dec
inc
add
jae
decl
stos
add
lcall
int3
jmp
add
xor
fidivrs
jno
jg
dec
inc
add
mov
add
xchg
test
add
jmp
add
add
out
sbb
sahf
sub
add
mov
inc
add
sahf
aam
scas
sbb
repnz
push
mov
cld
incl
jnp
jnp
adc
jmp
push
movb
imul
xchg
push
add
cli
xchg
or
jae
inc
add
jmp
rolb
sub
cmp
popa
add
fdivs
inc
add
sbb
add
decl
add
jae
push
push
add
and
pushl
loope
adc
ljmp
add
add
jmp
negl
and
and
incl
add
cltd
and
movsl
add
mov
add
inc
add
add
pop
mov
push
aam
add
pop
in
inc
add
mulb
cmp
push
ja
pop
aas
cmp
add
clc
sbb
add
jne
add
cmpsb
add
fstl
add
ret
add
add
xor
lcall
sbb
add
add
xor
add
xor
mov
pop
inc
add
push
add
mov
or
fisubrl
push
pop
and
call
add
dec
inc
add
dec
add
mov
into
and
decl
sti
sbb
push
addb
cmpsb
add
jb
jmp
jo
jmp
add
sub
testl
adc
cmp
push
adc
mov
loope
in
mov
add
in
mov
add
add
jmp
add
add
aas
addl
add
xchg
mov
push
data16
add
add
test
mull
add
add
incl
add
sahf
jle
add
sub
addb
pop
rol
add
fcomps
mov
add
movsb
add
add
add
add
lcall
mov
pop
add
add
add
mov
fwait
pop
cmp
repnz
add
xchg
cmp
jbe
ret
inc
add
gs
mov
add
and
data16
pop
jle
leave
fucom
add
add
lcall
clc
push
fcoml
call
ljmp
add
addb
in
into
add
int
add
hlt
jae
lcall
add
out
aaa
dec
sub
outsb
mov
loop
xchg
mov
cmpsl
add
add
add
jg
add
add
add
pop
aas
mov
in
xor
jp
aad
cmc
mov
nop
dec
cmpsl
add
add
xchg
pop
push
add
cmc
fisubrs
popa
add
clc
adc
lcall
jmp
inc
add
dec
inc
add
mov
pop
pop
inc
add
jo
incl
add
xor
push
xor
call
add
icebp
aaa
xchg
dec
jb
ds
add
add
push
add
jecxz
sbb
out
mov
addb
add
cmp
dec
test
add
add
jbe
add
pushl
sbb
cmp
call
pop
cwtl
iret
ds
or
pop
cmp
mov
push
in
jnp
add
ss
cmp
add
and
lcall
xchg
xor
inc
add
adc
pushl
jp
mov
add
out
icebp
or
add
cltd
adc
call
add
push
int
cs
pushf
movsb
add
and
pushl
pushl
stc
clc
dec
lahf
xlat
cmp
xor
mov
pop
sub
add
add
sarl
sbb
add
bound
incl
rolb
mov
push
pusha
add
and
jmp
jmp
call
mov
add
jno
incl
lds
or
add
pop
jp
inc
add
mov
add
mov
push
movl
addb
xchg
lods
mov
add
add
add
ljmp
add
adc
inc
add
faddl
jmp
add
insl
lods
pop
pop
loope
mov
add
mov
pusha
add
addb
pop
sub
add
push
mov
cmp
decl
cmc
lds
fcoml
mov
add
fsub
add
jg
outsl
jmp
add
jne
cltd
add
decl
ret
push
pusha
add
popa
add
into
pop
mov
pop
inc
add
dec
roll
add
add
sbb
call
jne
add
add
add
add
addl
cmp
popa
add
sub
add
int
add
addb
imul
add
leave
fcoms
mov
lret
cmp
sub
movl
cmp
add
lret
add
cs
outsb
mov
lret
ljmp
dec
push
jmp
add
mov
add
mov
add
jno
dec
add
decl
out
cmc
jae
ljmp
cmp
mov
addb
in
aaa
jnp
add
add
add
ret
lret
add
mov
add
imul
mov
pop
jo
incl
add
lret
cmp
daa
add
inc
add
cld
inc
add
testb
test
outsb
push
pushf
and
test
std
cmp
inc
add
push
ret
mov
add
stos
int3
stos
outsb
das
mov
call
call
mov
inc
add
add
dec
mov
add
xor
lcall
push
daa
add
arpl
call
add
ljmp
xor
add
sti
mov
roll
add
push
fidivrl
pusha
add
sbb
add
call
add
lcall
add
add
push
jns
mov
jnp
push
add
sti
pop
arpl
decl
sbb
add
dec
stc
mov
decl
xchg
testb
add
pop
add
dec
push
push
mov
push
add
sub
mov
add
add
add
add
clc
push
add
and
inc
add
add
popa
add
addb
aaa
jl
add
scas
sahf
jb
incl
add
nop
sub
add
add
mov
add
lods
push
add
addl
sbb
add
sar
mulb
add
push
lcall
xchg
mov
mov
cmc
insl
or
sub
int
add
call
add
scas
fistps
mov
add
fsubp
add
mov
decl
push
add
jl
out
adc
cmp
sub
lock
fistpll
shr
jo
jp
add
fldcw
dec
add
call
dec
dec
repnz
lret
cs
adc
incl
mov
add
add
mov
add
aas
cmp
pusha
add
jmp
mov
ret
mov
pop
push
add
in
push
add
fnsave
xchg
adc
mov
mov
scas
inc
add
in
inc
add
add
push
addr16
jle
pushf
lds
pushf
lock
add
mov
pop
loopne
jb
mov
add
lret
pop
mov
add
out
xchg
cmp
add
es
adc
incl
add
rolb
clc
push
cmpsb
add
add
scas
cltd
out
bound
fisttpl
or
fcoms
shlb
fsubrl
jmp
loope
mov
out
repnz
pop
loopne
fiaddl
add
xchg
je
mov
pop
add
incl
cmc
fs
addl
sahf
fs
add
mov
add
int
fisubs
stos
rolb
add
test
movl
dec
mov
mov
mov
imul
mov
mov
add
fiadds
add
add
enter
ja
xor
imul
sbb
add
loope
fisubrl
jmp
add
outsl
jb
jmp
add
add
addl
xor
call
fildl
jmp
add
cmc
inc
add
push
add
test
sahf
mov
mov
imul
xchg
addl
popf
mov
bound
fimuls
movsl
add
decl
std
pop
test
xor
dec
jmp
sub
lcall
dec
xor
call
mov
add
fmuls
add
add
in
js
aaa
jl
add
add
call
addl
in
movl
add
adc
incl
add
lds
xchg
add
jmp
pushf
out
inc
add
cld
movl
add
jmp
jae
decl
aam
popa
add
adc
add
add
add
push
add
add
xchg
shll
popf
mulb
add
sahf
clc
test
pop
push
add
mov
inc
add
jbe
push
add
add
jmp
add
xchg
inc
add
loop
call
mov
add
mov
xchg
jmp
add
jnp
add
je
add
inc
add
add
jne
cli
rcr
or
jl
cmpsl
add
add
sub
int
int3
cmp
data16
add
fstpl
test
iret
adc
add
and
incl
add
mov
push
and
jp
add
dec
mov
clc
and
call
xor
call
lret
test
je
pop
scas
std
and
jmp
popf
sub
add
push
ret
adc
and
incl
mov
add
or
add
or
inc
add
pop
shll
pop
cmp
addb
lods
push
out
dec
mov
sbb
lret
scas
xor
fbstp
popf
shlb
add
or
push
xlat
xlat
sub
std
jne
inc
add
iret
pop
dec
dec
gs
sbb
add
addb
mov
movb
stos
or
ret
stc
in
xchg
data16
mov
xor
lcall
ret
add
dec
xlat
movsb
add
mov
add
mov
add
xchg
fnstsw
aas
sbb
add
mov
call
je
push
in
fldt
add
call
xchg
dec
add
mov
xor
incl
ljmp
add
xchg
xchg
aad
rolb
mov
add
addb
or
scas
lea
pushl
add
fs
add
add
sub
fsubl
jmp
push
add
cmp
roll
mov
mov
add
add
cmp
add
lret
xor
lcall
cmp
decl
dec
je
movb
add
insb
dec
sbb
daa
add
loop
mov
nop
adc
call
mov
add
cmpsl
add
hlt
pop
outsb
mov
add
movb
add
loop
adc
sbb
test
add
add
call
add
lret
mov
mov
mov
leave
into
aas
mov
lahf
cltd
aam
add
push
add
and
decl
rclb
add
aas
sub
add
jp
add
mov
add
popa
add
js
add
add
mov
adc
ds
pusha
add
test
movl
xor
mov
int
out
pop
mov
xor
adc
pushl
cmp
sbb
inc
add
add
cmp
pop
imul
lock
rol
add
and
ljmp
add
mov
lcall
or
add
jbe
add
testl
std
mov
test
xchg
popf
xor
push
xor
out
clc
bnd
pushl
pop
fst
imul
pushl
add
cltd
fwait
ds
outsl
outsb
arpl
call
test
shll
add
pop
sub
sbb
popf
cmp
sahf
mov
xor
dec
mov
loop
lret
call
add
ds
add
in
cld
rcrl
push
add
push
add
add
rclb
cmp
inc
add
out
mov
dec
push
add
mov
add
test
inc
add
flds
add
call
sbb
add
add
ret
cmpsb
add
dec
into
movsl
add
pop
push
xchg
inc
add
popa
add
ljmp
and
or
lods
or
in
outsl
roll
enter
clc
mov
add
add
fwait
lods
mov
js
jp
add
in
sti
jne
add
add
gs
stos
jmp
add
mull
add
movsb
add
dec
jne
add
add
jmp
add
add
jns
in
mov
movl
mov
loopne
xchg
ja
je
fwait
je
add
add
or
add
jno
decl
cmp
test
adc
add
add
pop
lea
in
clc
mov
xchg
cmp
add
ja
imul
movsb
add
incl
sbb
add
out
push
add
add
add
in
imul
push
add
test
add
loopne
jb
movsb
add
add
inc
add
pop
dec
inc
add
jmp
addb
add
ljmp
push
add
push
outsl
or
daa
add
mov
and
jmp
add
xor
incl
lcall
scas
mulb
movl
test
pop
scas
sbb
add
add
cmp
or
xor
incl
pushl
decl
dec
dec
arpl
sti
mov
outsb
pop
cmpsl
add
mov
ljmp
fisttpl
add
pop
add
addl
loope
data16
lahf
add
pushl
lods
in
das
cld
mov
add
pop
add
add
add
xor
add
add
movl
cmp
ljmp
jmp
add
pop
mov
xchg
mov
add
add
insb
scas
mov
sub
inc
add
add
pop
out
movsl
add
mov
add
add
pushf
clc
inc
add
fcomps
movsl
add
mov
add
jnp
rolb
jmp
jno
decl
jo
ljmp
or
mull
add
lcall
mov
pushl
scas
into
addb
mov
or
cmp
add
cmpsb
add
add
add
in
push
jb
sti
fsubrl
jge
pop
lcall
mov
ficoms
je,pt
add
add
movsl
add
mov
add
add
add
xchg
mov
leave
js
xlat
add
repz
mov
jmp
add
add
jno
call
out
push
add
xor
call
sub
add
jl
add
mov
add
mov
jecxz
ljmp
adc
jmp
add
add
ljmp
inc
add
mov
add
sti
jmp
movq
push
mov
mov
mov
push
rorl
call
outsl
xor
repz
add
mov
imull
add
les
sahf
ficompl
movb
add
cmp
xchg
lea
call
add
xor
decl
add
inc
add
decl
addb
and
call
add
push
dec
jg
add
mov
add
add
imul
or
add
test
clc
xchg
sbb
xchg
mov
add
add
pop
pushl
add
sub
jmp
xor
dec
scas
addr16
add
push
sbb
pop
xchg
roll
and
mov
add
or
xlat
and
dec
dec
mov
pushl
inc
add
ss
add
pop
add
decl
add
lahf
sbb
arpl
lcall
fsub
add
jmp
add
fstpl
add
add
sub
push
push
xor
dec
les
jbe
fucomip
js
add
mov
bound
pushl
add
addb
mov
add
rolb
jns
jecxz
das
fistpll
clc
test
lret
test
add
mov
mov
in
sub
mov
add
ja
jl
xchg
xor
decl
mov
add
and
jg
clc
jp
pop
in
sub
add
add
addb
xor
jmp
mov
inc
add
cmpsl
add
loope
mov
add
mov
add
lea
push
mov
add
pop
xlat
or
mov
push
movl
push
add
inc
add
lcall
push
addl
in
or
icebp
mov
inc
add
jg
push
add
sbb
mov
pop
in
sar
mov
mov
int3
mov
mov
lds
jmp
pop
pop
or
pop
xlat
jg
add
addl
imul
ljmp
jg
inc
add
pop
fstpt
and
mov
jmp
shrb
mov
sub
add
into
push
add
cs
inc
add
addb
add
sbb
add
mov
mov
add
adc
lcall
in
jg
pop
xor
pushl
add
and
jmp
add
dec
add
fimuls
daa
add
pushf
pushf
mov
stos
loopne
loop
repz
pushl
popl
or
insb
lcall
dec
xor
lcall
jp
add
je
add
adc
mov
mov
jecxz
lods
pop
xchg
daa
add
add
and
lcall
jmp
dec
jg
in
bound
in
mov
pusha
add
ja
add
mov
add
das
or
jmp
mov
arpl
fistl
cmp
or
loope
mov
test
bound
call
add
mov
and
std
mov
call
add
fimuls
popa
add
push
fisttps
push
add
loop
lock
mov
inc
add
add
xor
decl
and
popa
add
mov
add
mov
arpl
call
add
add
cmp
rcl
popf
jmp
ror
bnd
clc
lea
add
add
jmp
add
icebp
movsl
add
aaa
jecxz
inc
add
add
pop
push
bound
pushl
add
cmp
add
loop
negb
out
mov
add
rolb
add
imul
add
add
outsb
add
lock
add
dec
daa
add
add
add
sub
add
adc
ljmp
xchg
xor
mov
sbb
leave
insl
jle
ja
push
int
add
addl
das
addl
xlat
mov
addb
add
into
push
xchg
mov
mov
ljmp
add
mov
cltd
adc
call
add
aad
aam
dec
jo
lcall
add
and
ljmp
push
add
cmp
add
mov
cmp
add
iret
lods
mov
adc
decl
data16
add
push
add
mov
add
sbb
add
xor
push
add
scas
mov
add
push
mov
pusha
add
cli
lods
xchg
pop
dec
mov
add
cmpsl
add
roll
add
decl
add
outsb
jp
inc
add
push
dec
fsubs
add
rorl
mov
add
add
add
leave
addb
cmp
add
cmp
aas
loopne
faddl
ret
and
mov
cli
fwait
add
add
add
inc
add
ret
add
out
ds
cli
add
add
cmc
adc
pushl
cmp
add
adc
jg
lods
push
add
mov
mov
jle
je
add
push
sub
add
push
add
mov
dec
jae
pushl
add
mov
add
sahf
movsb
add
popf
pop
and
leave
mov
call
add
sbb
mov
incl
sbb
xor
pop
add
jmp
es
xchg
popa
add
stc
mov
sub
pushf
imul
inc
add
sub
test
adc
js
cmp
cmp
add
and
dec
mov
lods
and
dec
or
popf
enter
fsubrl
or
xchg
xchg
pop
dec
aam
add
add
add
sbb
rolb
fwait
jnp
add
stc
pop
add
add
dec
outsb
hlt
test
jo
dec
data16
lea
lahf
or
add
jp
out
pop
mov
add
out
arpl
call
add
incl
inc
add
xchg
push
mov
cltd
add
pushl
push
mov
adc
clc
test
add
call
add
sarb
jbe
scas
test
add
fisubrl
xor
jle
add
int3
or
movl
add
jmp
xchg
adc
pushl
cmc
inc
add
pop
jge
fwait
int3
scas
out
xor
inc
add
jmp
add
shlb
add
push
push
adc
fimull
insl
xor
lcall
movsl
add
add
add
outsl
and
jnp
mov
idivl
dec
pop
add
pushl
repnz
addl
add
add
addl
incl
fldt
dec
xor
jmp
add
add
mov
aad
sub
or
adc
inc
add
lods
xor
push
cmp
or
xchg
aaa
in
scas
mov
popf
push
add
sahf
pop
or
push
add
xor
int
xor
jmp
ljmp
test
push
ja
and
add
and
sub
out
and
lcall
push
add
stos
add
call
incl
fidivl
dec
stos
aas
pusha
add
data16
add
incl
mov
add
test
pop
add
call
aas
jne
pop
jecxz
mov
push
mov
popf
push
js
add
mov
hlt
mov
add
repz
add
dec
xchg
cmp
cmp
ljmp
addb
add
and
jmp
outsb
arpl
lcall
add
add
fwait
movsl
add
pusha
add
xchg
repz
xchg
xor
mov
in
add
sub
mov
mov
mov
cmc
and
jns
inc
add
movsb
add
fcomip
inc
add
add
cmp
scas
jle
add
add
test
sahf
hlt
mov
mov
add
xchg
cmp
fs
cli
roll
jge
fcoms
jmp
add
jne
out
int3
sub
stos
rcrb
iret
sahf
filds
mov
mov
add
dec
mov
add
lcall
divl
add
mov
rcrl
jbe
rol
add
push
jo
incl
add
add
and
das
inc
add
mov
mov
movsb
add
add
sub
nop
data16
add
or
mov
test
enter
jle
push
add
lahf
cltd
cmpsl
add
add
mov
fisubl
call
addl
inc
add
fistpll
add
add
dec
icebp
jo
lcall
or
jl
push
rorb
xor
pop
xchg
push
add
sbb
lret
or
add
jmp
add
outsb
jge
add
lock
xor
fisubs
add
fistpl
mov
jecxz
mov
scas
nop
imul
ljmp
mov
push
mov
add
mov
sbb
in
mov
add
rolb
stos
dec
inc
add
xchg
lods
in
out
sahf
xchg
ja
pushf
fwait
ret
add
add
jmp
add
pushf
mov
inc
add
test
mov
add
in
dec
aam
imul
lock
xor
xchg
test
sub
outsb
inc
add
lret
add
lcall
fwait
out
add
add
insb
jbe
adc
call
fwait
dec
iret
xor
jmp
jmp
ficompl
add
pushl
xchg
jbe
ja
add
call
mov
sub
in
mov
pushl
mov
jne
add
add
stc
and
decl
add
pushl
mov
ja
je
adc
ljmp
add
push
pop
add
jnp
scas
loop
push
push
add
repnz
jl
movsb
add
add
lea
mov
mov
cwtl
xchg
push
add
add
pushl
lods
stc
lcall
sbb
add
jmp
jne
jnp
ret
add
add
push
push
add
mov
add
add
fisttpll
add
jecxz
fld
add
add
add
insl
scas
or
add
add
into
xor
add
adc
pushl
add
mov
add
push
add
sahf
add
addl
add
cmc
daa
add
xlat
std
and
push
mov
jmp
int
add
mov
in
inc
add
mov
mov
pusha
add
pusha
add
movsb
add
add
push
movsb
add
pop
fstl
mov
xor
incl
add
cmp
add
dec
fprem
mov
mov
mov
movl
decl
outsl
xchg
mov
xlat
popa
add
insb
popa
add
in
and
call
add
mov
add
out
inc
add
add
lret
dec
push
add
jg
add
aaa
cld
dec
xor
lcall
hlt
add
pushl
add
test
repnz
cltd
leave
jp
push
pcmpgtd
adc
ljmp
sub
add
sarl
mov
pop
pusha
add
ja
jp
test
jge
clc
bound
cmp
cmp
add
and
lcall
pop
add
call
dec
mov
add
movl
mov
and
push
or
add
scas
cmp
pushl
add
sbb
out
sbb
mov
add
dec
sub
lods
leave
aas
inc
add
xor
jmp
add
mov
shlb
cld
cmc
mov
add
add
and
pushl
ret
add
mov
sub
out
enter
sti
xchg
popa
add
ds
add
xchg
xchg
divl
add
xchg
fidivrl
add
sbb
decl
cltd
fucomi
into
mov
data16
test
mov
fsubr
adc
pushl
fxch
pushf
xchg
push
jne
add
push
add
inc
add
jge
aam
add
out
ret
add
add
jo
incl
add
or
push
add
out
mov
loop
std
jne
add
push
outsb
pop
rolb
nop
push
mov
add
add
add
sbb
sbb
cs
add
xor
shr
push
lds
imull
in
lods
addb
jns
imul
pop
adc
jmp
add
add
and
fisubrl
call
jmp
ljmp
mov
add
xchg
dec
jmp
xchg
data16
add
in
cmpsl
add
int3
dec
fmull
in
fmulp
sbb
call
arpl
lcall
call
lret
repnz
nop
inc
add
mov
lock
call
add
sub
call
pop
add
std
daa
add
add
jno
jmp
add
mov
jns
ret
pop
notb
pop
dec
scas
mov
add
jbe
push
add
adc
jmp
add
adc
call
fdivrs
add
incl
mov
add
mov
add
adc
call
adc
ljmp
xchg
xchg
ljmp
ljmp
add
test
movl
js
cmc
iret
bound
lcall
push
dec
xor
call
add
inc
add
xor
add
popa
add
or
fwait
int
div
into
inc
add
push
add
dec
cmpsl
add
inc
add
add
xchg
dec
js
add
scas
es
enter
push
add
add
rorl
out
add
jmp
test
insb
mov
add
xchg
fcoml
add
mov
jne
add
dec
push
push
dec
adc
incl
add
ss
and
pushl
outsl
ljmp
shrl
adc
pushl
ljmp
dec
sbb
sub
addl
add
inc
add
adc
std
jp
pop
lods
and
bound
jmp
add
test
lret
mov
addb
add
fidivs
add
xchg
inc
add
add
inc
add
aaa
add
aas
mull
jge
pop
aam
add
push
shrl
xchg
mov
mov
add
jno
incl
cmp
call
jl
add
addl
aaa
push
add
iret
dec
cmpsb
add
add
add
pop
add
fisttpl
add
add
fistpll
and
push
in
loopne
dec
or
add
cld
icebp
sub
adc
ja
add
sahf
shlb
lcall
shll
call
jno
jmp
pop
test
icebp
out
out
test
pushf
adc
lcall
jg
cmpsb
add
insb
imul
sahf
add
incl
inc
add
push
in
inc
add
ds
jbe
inc
add
call
sbb
outsb
loopne
aad
add
ljmp
hlt
mov
add
cmp
movl
lcall
jmp
daa
add
mov
add
pop
add
add
fsts
add
push
xchg
xchg
fucomip
mov
fisttpll
incl
jmp
add
add
add
mov
in
inc
add
fucomp
or
cli
sbb
xor
out
roll
ja
add
ds
movb
aad
add
and
pushl
add
or
mov
add
add
pop
call
loop
xchg
lods
mov
out
ret
pushf
cmp
ljmp
stos
outsl
jbe
dec
rcrl
jmp
decl
pushl
ja
add
hlt
xchg
inc
add
inc
add
inc
add
jno
incl
add
xchg
cs
add
jmp
loopne
dec
sub
test
lds
out
push
sbb
add
and
dec
cmp
into
aaa
sub
decl
inc
add
out
and
decl
inc
add
out
xchg
jne
leave
or
data16
add
jne
idivl
popa
add
lcall
mov
dec
gs
or
push
add
mov
jecxz
repnz
sbb
or
add
bound
decl
push
add
jnp
add
cmp
not
scas
inc
add
mov
das
mov
add
push
mov
out
push
add
arpl
incl
mov
add
xchg
jg
mov
mov
lods
inc
add
push
add
sar
lods
lds
addl
incl
cltd
add
or
jb
lcall
add
push
outsl
xchg
incb
inc
add
jecxz
addb
into
sub
add
adc
pushl
add
aam
push
bound
call
insl
test
imul
pushl
add
fadds
jno
pushl
sub
mov
and
incl
add
dec
adc
add
stos
lret
jmp
mov
add
adc
lcall
stc
scas
adc
decl
add
add
or
sbb
lcall
movl
clc
and
fcmovu
jno
ljmp
add
mov
decl
jmp
add
sbb
je
add
jl
add
popa
add
scas
mov
lcall
or
add
mov
sbb
test
cwtl
or
add
mov
add
ret
aad
add
push
rcrl
pushl
jmp
jmp
ljmp
sbb
add
pusha
add
les
xchg
dec
pusha
add
inc
add
ret
add
mov
add
xor
lcall
mov
add
xchg
clc
in
mov
inc
add
cmpsl
add
xor
adc
pop
mov
dec
xor
pushl
add
out
add
jmp
add
add
add
cmp
add
scas
cld
sub
fwait
lahf
in
mov
sub
and
ljmp
inc
add
mov
ja
mov
xor
add
mov
push
call
or
jp
enter
add
or
push
fbld
add
fiadds
add
mov
mull
outsl
clc
repz
add
bound
jl
inc
add
imul
les
sbb
sbb
and
dec
jmp
add
in
or
push
test
mov
mov
mov
mov
sbb
test
add
pop
dec
add
xchg
mov
xchg
cmp
add
add
sbb
add
aaa
cmpsb
add
enter
pop
add
push
lea
add
add
xchg
sbb
pusha
add
ja
call
std
lock
push
push
add
pusha
add
xor
pop
test
dec
test
adc
call
sti
jecxz
in
or
pop
sub
dec
add
lcall
dec
clc
sbb
add
sahf
jle
add
cmp
icebp
outsb
addl
add
clc
pop
scas
xchg
push
add
push
add
cwtl
mov
add
add
lds
xor
ljmp
dec
jnp
inc
add
int
xor
add
incl
mov
push
mov
add
sub
xchg
cld
popa
add
sti
call
jnp
add
add
cmp
mov
sbb
add
xchg
fsubrs
pop
inc
add
movb
ret
add
add
int
mov
dec
inc
add
jecxz
sub
jl
add
and
aad
add
mov
add
xchg
bound
pushl
mov
iret
mov
dec
fwait
ret
add
iret
arpl
ljmp
imul
sbb
incl
add
inc
add
mov
repz
roll
dec
sub
mov
cmpsl
add
fcompl
push
add
out
inc
add
add
ds
add
add
cmp
mov
add
pushl
dec
push
add
shlb
dec
sub
add
add
push
fstl
add
pop
mov
je
push
fldl
call
lods
iret
push
add
sbb
add
arpl
decl
add
jmp
pushl
jmp
add
or
add
add
xchg
or
addb
cltd
enter
sahf
mov
jnp
movl
add
add
add
data16
add
movsb
add
push
push
movl
xchg
xchg
iret
cld
fisubs
jb
lcall
push
pusha
add
pushf
xchg
xor
ljmp
add
incl
add
xor
call
add
add
add
sbb
and
mov
add
add
jno
jmp
add
jbe
xlat
ret
add
jne
in
std
divb
pushl
mov
jmp
mov
pop
in
loopne
and
call
add
sub
dec
repnz
arpl
lcall
fsts
jge
dec
pushf
jne
dec
pop
cmp
int3
mov
out
lret
add
add
dec
add
incl
add
mov
cmp
add
daa
add
sti
xchg
fildl
testl
and
push
pop
insb
sub
das
push
ljmp
jge
jmp
add
xchg
imul
mov
adc
add
add
jp
in
add
dec
add
sub
xchg
mov
push
sub
lds
jl
add
inc
add
jge
dec
test
add
mov
iret
test
loope
cmp
pop
pusha
add
movsb
add
add
add
xchg
fimuls
test
ret
add
ljmp
lock
call
in
mov
roll
mov
roll
push
sbb
lret
push
xor
decl
dec
movb
add
cwtl
dec
cmp
add
push
js
fdivrs
bound
incl
add
ret
add
jle
mov
jne
call
outsl
push
add
ja
add
push
sbb
jle
xor
das
pop
mov
mov
ret
add
mov
test
add
addb
add
lcall
mov
add
mov
fiadds
add
call
test
lret
add
xor
push
add
xor
incl
addr16
loope
add
out
roll
fsubl
add
sub
decl
insl
jo
decl
aaa
and
lcall
lods
ja
add
add
ret
add
add
dec
data16
pop
add
add
xlat
enter
add
add
fldt
repnz
fcmovnb
add
mov
xchg
test
sbb
mov
inc
add
out
icebp
cmp
call
mov
add
ret
add
add
pop
mov
pop
icebp
pop
pushf
stos
out
scas
aad
data16
inc
add
cmc
xchg
je
add
xchg
lcall
test
sub
add
mov
jmp
addb
push
add
movl
lods
jle
adc
call
in
adc
call
mov
cmp
repz
xchg
jbe
add
push
test
add
push
add
push
add
xor
add
sti
mov
mov
pop
xchg
xor
std
mov
scas
cmp
pop
adc
jmp
add
in
lcall
test
xor
add
fwait
sub
and
dec
popa
add
notl
and
ljmp
fwait
outsb
insb
pop
xor
incl
mov
add
clc
add
pop
sub
jb
jmp
sub
lcall
cmc
add
dec
ljmp
sahf
xchg
into
movsb
add
xchg
sbb
mov
add
cmpsl
add
add
data16
jmp
dec
and
lcall
mov
pushl
pop
mov
fbld
add
xchg
rorb
xor
jmp
add
dec
cmp
out
add
dec
data16
xor
add
add
cs
mov
and
jmp
sub
sbb
sbb
in
cmp
and
call
ljmp
push
add
mov
add
or
aad
mov
sub
jmp
add
ljmp
jnp
inc
add
hlt
shl
mov
insl
aam
cmp
dec
xchg
in
add
loope
dec
stc
fnstsw
imul
pop
cmp
jge
cld
pop
jne
push
add
adc
call
jmp
sarb
ja
popf
dec
int
add
add
mov
jle
add
add
add
add
pop
push
bswap
jg
add
rclb
add
jb
call
decl
add
mov
mov
add
fcmove
cmpsl
add
push
fwait
xor
lcall
lock
add
iret
repz
in
jg
add
add
data16
or
cmp
add
ljmp
add
push
add
mov
lcall
icebp
sub
xchg
movb
add
stos
add
push
push
add
stc
sbb
cmp
mov
add
aad
sub
add
das
or
popf
incb
add
pusha
add
imulb
add
cli
lea
and
lcall
clc
xchg
ds
mov
add
jp
dec
or
mov
lock
mov
add
add
push
fisttps
stos
cli
lock
or
add
cld
jecxz
pop
mov
movl
mov
push
mov
mov
mov
add
add
add
sub
add
psrlw
insl
dec
aad
add
lcall
out
inc
add
test
and
jmp
les
repnz
mov
add
mov
lods
loope
xor
pop
pop
arpl
call
add
or
call
cmp
mov
and
add
incl
sbb
cmpsb
add
dec
iret
pop
jle
add
dec
jg
enter
lods
xor
pushl
mov
sbb
rolb
push
daa
add
repnz
mov
arpl
js
add
and
push
paddd
add
add
add
adc
inc
add
add
and
sti
popf
mov
decl
in
mov
lds
je
add
shl
add
les
sbb
inc
add
cmp
loopne
push
jg
add
mov
fsts
sub
sbb
sbb
std
sbb
and
decl
jmp
out
outsl
pusha
add
mov
stos
scas
add
call
add
pop
add
movl
roll
jb
dec
add
jmp
add
les
and
cmp
adc
push
cmp
add
ds
lcall
lods
jl
xchg
pop
shr
jns
mov
lret
adc
pushl
jg
add
add
add
add
cs
pusha
add
ret
add
add
cmp
xchg
addb
add
sub
push
add
add
pushl
jmp
call
add
divl
add
lcall
add
enter
add
add
lret
call
add
jle
add
jne
add
add
add
shll
add
inc
add
arpl
call
mov
push
add
adc
out
push
add
push
std
push
jecxz
lahf
mov
je
in
dec
in
or
pop
add
push
imul
jae
decl
je
add
add
stos
rolb
xchg
iret
push
add
push
add
inc
add
loopne
mov
adc
cli
test
ret
add
add
add
mov
or
add
lret
mov
add
add
ret
add
outsb
popf
aas
add
push
call
add
pusha
add
movb
xchg
sbb
aas
pop
xchg
ljmp
add
add
jne
mov
mov
out
xchg
out
mov
add
stos
mov
mov
repz
jmp
cmp
mov
fisubrl
loope
jle
add
add
add
xchg
das
inc
add
ja
iret
out
inc
add
add
aas
roll
dec
mov
cmp
jae
ljmp
add
decl
jmp
xchg
hlt
testb
add
mov
shr
sahf
xchg
mov
inc
add
adc
add
adc
call
push
je
sub
add
imul
add
mov
cmp
in
movl
add
roll
add
adc
test
addb
add
dec
int3
cmp
das
jns
add
cli
mov
jo
ljmp
add
mov
xchg
lret
in
cmp
imul
jg
push
jl
inc
add
mov
sub
add
and
call
lret
loope
lods
gs
movsl
add
lds
mov
stos
loop
out
mov
xor
decl
add
nop
add
divb
pushl
and
add
mov
mov
imul
xor
decl
add
hlt
xchg
das
lret
jge
dec
xor
shl
xchg
out
arpl
incl
pusha
add
cmpsl
add
add
mov
pop
sbb
jae
decl
push
fcomi
pop
add
inc
add
imul
pop
push
mov
add
call
stos
inc
add
adc
incl
add
add
and
jmp
jne
cmp
add
mov
dec
sbb
loopne
pushf
rolb
jp
sbb
enter
push
jl
das
cmp
xchg
cmpsb
add
loope
ret
xor
ljmp
push
add
fistl
add
add
call
ret
add
mov
pushl
jnp
or
and
push
add
sub
xor
lcall
sti
push
add
add
add
data16
add
and
insl
inc
add
dec
hlt
jle
ret
add
add
push
add
xchg
sub
add
imulb
clts
add
fwait
push
aad
sub
sub
cmp
add
mov
daa
add
add
xchg
ffree
add
pop
push
add
pop
pop
fstps
aaa
adc
jmp
push
mov
add
adc
call
ret
or
hlt
jp
repz
add
add
push
add
fmulp
dec
bound
call
jmp
add
jne
stc
ja
add
insl
js
add
add
mov
call
addl
add
add
ret
add
ljmp
add
call
mov
add
hlt
xchg
mov
add
add
mov
ficoml
mov
add
incl
add
fucomp
pop
icebp
ret
push
int
add
xchg
add
mov
incl
decl
add
add
sub
pop
xchg
test
lcall
and
jmp
jl
add
test
jbe
aad
push
cmpsb
add
push
stos
add
inc
add
movl
loop
faddl
call
das
in
add
dec
sbb
or
sbb
daa
add
and
imul
mov
outsl
addl
cmc
xor
iret
cwtl
or
cld
addl
enter
add
pop
sub
add
call
add
shll
ljmp
adc
decl
add
in
addr16
add
add
ljmp
dec
cwtl
jle
add
add
insb
and
call
adc
ljmp
add
roll
pop
ljmp
popf
mov
add
jno
pushl
adc
faddl
dec
push
mov
cmp
lea
cli
ss
movsb
add
add
addr16
jnp
push
clc
je
add
cmpsb
add
mov
inc
add
add
sbb
ds
add
lcall
rolb
add
adc
pushl
pushl
incl
incl
add
xchg
adc
incl
daa
add
add
mov
add
mov
pop
push
mov
repz
and
dec
pop
call
add
sarb
mov
adc
inc
add
jle
or
jbe
add
pop
add
out
stos
add
inc
add
call
decl
imulb
mov
add
mov
data16
and
call
arpl
inc
add
add
mov
or
clc
or
dec
ret
add
arpl
mov
pop
xchg
clc
pushf
dec
xchg
push
movsl
add
jbe
in
inc
add
mov
push
add
pop
mov
lock
cmpsl
add
sub
adc
lcall
xchg
mov
jmp
decl
xor
call
mov
add
add
add
mov
std
and
sahf
lret
sbb
add
add
jmp
add
add
flds
mov
and
mov
add
sub
enter
jbe
mov
add
add
add
pop
imul
add
cmc
pop
movswl
lahf
scas
fnsave
decl
fimuls
add
add
push
fwait
lods
xchg
addl
add
pusha
add
insl
je
push
add
mov
push
imul
cmc
out
clc
fbld
add
mov
add
aaa
cmc
push
shrb
lcall
add
adc
call
leave
cmp
add
loopne
aam
xchg
jo
call
and
decl
add
idivl
push
add
mov
insl
cmp
jb
lcall
jl
fsubrs
addb
dec
add
add
rcr
xchg
popl
add
xchg
test
fmull
add
iret
imulb
pop
jb
fdivrl
inc
add
mov
incl
add
imulb
out
test
loopne
mov
pop
adc
ljmp
leave
mov
add
mov
push
hlt
xchg
out
adc
cmp
add
inc
add
cltd
icebp
jbe
add
bound
ljmp
xchg
hlt
adc
incl
add
xchg
cmp
ja
sbb
adc
roll
add
add
add
cmp
lcall
mov
dec
push
add
pop
stc
jle
sbb
popf
inc
add
inc
add
xor
decl
out
loop
add
ljmp
mov
mov
movb
addb
sti
popa
add
sub
add
sub
call
add
imul
add
jbe
add
mov
add
sbb
call
pop
xor
ficoms
push
add
rcrl
add
add
add
sub
lret
fistps
cmpsl
add
or
call
mov
or
mov
test
push
add
popa
add
xlat
mov
add
jmp
add
sti
xchg
js
inc
add
ljmp
add
sbb
add
add
adc
cld
xlat
mov
int3
out
cmp
add
jbe
cltd
rcll
add
in
lret
or
add
push
ror
fstps
aaa
jno
dec
mov
fwait
inc
add
add
mov
jbe
add
pop
push
mov
add
add
add
decl
int3
aam
add
ja
push
sub
sbb
jp
pop
pop
out
inc
add
xor
decl
addb
add
call
frstor
jae
incl
dec
inc
add
cmp
jl
xor
das
in
fdivrs
fstpt
clc
outsb
pop
test
pop
add
movl
cmpsb
add
imul
add
decl
add
out
jb
mov
add
jmp
add
out
xchg
repz
cmp
fisubrs
or
insb
jmp
mov
add
out
jne
cli
das
jbe
add
decl
add
outsl
test
lds
test
montmul
cmpsb
add
mov
jmp
add
ret
add
cmp
add
jmp
and
mov
push
add
jle
hlt
pop
decb
mov
xchg
cld
popf
out
add
lds
enter
incl
inc
add
jmp
fisubrl
and
cmp
fldcw
lods
out
movsb
add
into
cli
mov
sub
cltd
pop
pop
sbb
add
outsl
pusha
add
stc
mov
cmp
data16
mov
outsl
jp
negl
add
out
cmp
push
add
sti
add
add
push
cwtl
dec
addb
xchg
adc
ljmp
loop
push
push
ljmp
mov
fldl2e
repz
jge
add
enter
jp
outsb
xlat
mov
xor
add
dec
or
add
mov
mov
inc
add
mov
pushl
inc
add
or
inc
add
ljmp
js
add
add
add
mov
add
add
movl
add
mov
in
sbb
hlt
sub
testb
add
mov
add
into
addl
nop
mov
adc
testb
jmp
add
add
aas
mov
add
add
roll
add
add
sub
cmp
or
sbb
cli
jmp
xchg
jmp
outsl
and
pushl
add
jle
test
out
pop
add
jecxz
decl
add
imul
in
xor
add
incl
scas
cmp
add
sbb
fwait
dec
sub
movsb
add
outsl
fs
add
inc
add
call
add
dec
out
pop
mov
mov
dec
xor
lcall
mov
xchg
cmpsb
add
xor
inc
add
sbb
aam
add
add
into
in
into
ss
sbb
add
pcmpeqd
mov
add
leave
add
out
sbb
inc
add
stos
mov
cwtl
lds
mov
add
add
cmp
add
das
imulb
inc
add
lods
nop
jne
add
sarl
lret
loope
in
sub
lret
repnz
push
xlat
stc
adc
decl
add
rclb
jp
add
aam
add
addl
push
add
addb
add
pop
loop
cmpsb
add
jg
sti
xchg
cmp
add
adc
pop
xchg
out
adc
lcall
mov
or
imull
xchg
push
add
fidivrs
mov
add
cmc
dec
jl
pusha
add
dec
les
jl
bound
jp
pop
mov
push
push
cmp
jmp
add
inc
add
jo
push
movl
xor
ljmp
push
dec
outsb
xchg
aaa
xor
jg
cld
mov
pushl
mov
jnp
add
sub
dec
cmp
cmc
cmp
pop
js
add
rcrb
out
xchg
adc
incl
inc
add
add
call
call
inc
add
fidivs
pushl
mov
add
test
aam
inc
add
pusha
add
pop
dec
inc
add
mov
pop
data16
cmp
imul
pushl
add
dec
push
and
pushl
rolb
cmp
clc
ret
std
jge
mov
add
sbb
rcll
lock
in
sbb
pop
addb
ds
imul
in
lea
add
sub
idivl
or
add
xor
incl
daa
add
cld
fisttpll
add
add
push
addb
add
lods
mov
dec
mov
icebp
add
push
inc
add
jmp
add
add
mov
pop
out
lret
addb
pop
add
sbb
add
mov
sbb
push
xchg
push
add
sti
rcl
int
sub
addl
adc
lcall
in
ret
add
jmp
add
incl
jmp
mov
lret
add
push
xlat
mov
jo
jl
add
add
jno
jmp
add
cmp
sahf
xlat
add
lcall
mov
data16
sbb
in
jp
add
and
inc
add
add
sysexit
and
inc
add
lret
bound
lcall
add
shl
add
dec
xchg
and
inc
add
add
ja
cld
sbb
lret
add
pusha
add
shrb
push
add
mov
add
mov
out
or
ss
repnz
xchg
popa
add
insb
xor
ljmp
pop
repnz
mov
outsl
mov
pop
movl
add
lods
mov
adc
lcall
inc
add
and
fidivl
add
pop
push
dec
mov
add
add
pop
mov
lods
cmp
xor
movl
and
dec
add
xor
lcall
lahf
jo
ljmp
add
insb
iret
stos
mov
lcall
outsb
test
stos
xchg
xor
lcall
popa
add
pop
fsubr
adc
stc
cld
mov
add
add
add
out
mov
pop
jbe
and
incl
pop
push
push
xchg
enter
jbe
lret
dec
adc
call
call
and
out
xchg
jae
incl
test
add
sub
push
mov
add
add
addl
inc
add
les
sti
leave
jmp
adc
incl
fsubs
xor
call
add
push
add
inc
add
push
add
cmc
xor
inc
add
and
ljmp
xchg
dec
test
mov
sub
jmp
add
add
add
push
shlb
add
sti
addl
inc
add
mov
out
addl
sub
xchg
int
xchg
cwtl
mov
lcall
sbb
inc
add
imul
sbb
outsl
mov
leave
add
incl
mov
jmp
sarb
mov
popf
imul
je
xor
jmp
add
movsl
add
sub
data16
add
add
in
mov
shll
add
jmp
push
add
cmp
incl
call
add
mov
or
cmp
add
add
call
add
movb
mov
gs
add
loope
addl
add
hlt
sbb
add
int3
les
mov
aaa
in
lahf
mov
add
mov
add
mov
add
jmp
fdivr
pop
xchg
cmp
add
add
jecxz
sbb
pushf
and
popa
add
dec
cltd
cltd
stos
pop
jb
decl
add
cmp
inc
add
bound
lcall
pop
push
lret
inc
add
add
int3
bound
decl
add
jbe
and
inc
add
dec
jge
mov
add
xchg
pop
add
stc
jg
xchg
push
jmp
add
add
cld
int
mov
fdivl
lcall
inc
add
ja
inc
add
xchg
mov
add
dec
cmpsl
add
add
jmp
xor
push
pop
jge
sbb
add
push
cs
lods
mov
pop
test
add
mov
shlb
add
or
rolb
xchg
mov
add
add
movl
cmp
push
add
ds
add
add
sub
xchg
cmp
call
mov
mov
add
push
sarl
add
push
ja
add
add
add
lahf
ffreep
add
pop
jmp
inc
add
call
or
ss
add
addb
add
add
mov
sbb
add
sbb
ljmp
and
sti
popa
add
push
add
lahf
xchg
stc
out
aam
ss
add
scas
push
into
push
add
add
xlat
test
das
add
fsubrs
push
movsl
add
lea
mov
sub
sahf
push
dec
pop
outsl
mov
insl
es
add
mov
bound
dec
sub
add
mov
pop
testb
jb
call
cmp
popa
add
sbb
jmp
cmc
icebp
or
adc
jmp
add
sbb
dec
das
or
add
aad
lods
das
shl
add
ficomps
call
xor
jmp
push
xor
lcall
out
mov
cltd
arpl
call
and
rorl
xor
pushl
jmp
shlb
call
cs
bound
lcall
jl
jge
add
call
add
add
decl
pop
out
and
ljmp
xor
lcall
add
dec
jns
or
in
mov
lcall
clc
sub
lcall
pop
ret
add
lcall
xor
pushl
roll
add
sub
mov
add
in
mov
mov
pop
sub
add
xor
add
imul
jg
add
repz
add
ret
add
xlat
sub
add
push
add
gs
scas
scas
mov
decl
aam
add
fwait
sub
add
shr
inc
add
add
sti
loopne
or
add
push
add
add
jge
nop
pop
inc
add
adc
lcall
sahf
add
decl
addb
add
add
jnp
add
dec
dec
imul
insl
in
test
cli
inc
add
pop
mov
hlt
test
mov
add
add
inc
add
mov
mov
add
movl
inc
add
jl
add
rolb
mov
shlb
inc
add
loope
xchg
loopne
enter
mov
pushf
xor
pusha
add
sbb
mov
sbb
mov
add
jmp
add
pop
dec
aad
add
cmp
mov
push
add
lcall
test
lds
roll
add
movb
fnstcw
aaa
mov
addb
add
test
mov
fistl
push
add
les
adc
dec
push
dec
data16
add
loop
sub
add
shr
xlat
repz
out
data16
pushl
add
inc
add
adc
jle
add
ret
add
decl
push
sbb
add
movb
add
push
jns
add
cmp
mov
add
mov
add
pop
mov
nop
out
mov
add
or
add
add
xor
dec
mov
cld
addl
int3
xor
lcall
xchg
jae
dec
out
xor
lcall
add
lcall
enter
jne
or
xchg
jecxz
pop
cltd
cld
jge
and
cmp
repz
pop
divb
add
cmp
aaa
mov
jnp
pop
roll
mov
add
adc
call
mov
add
in
mov
out
loopne
aas
fistpll
add
lahf
push
stos
lock
fmul
inc
add
lcall
fldt
xchg
out
mov
push
add
dec
hlt
rolb
dec
movsl
add
push
add
aas
roll
sbb
jne
adc
lcall
std
lods
insb
ret
add
sbb
addb
adc
fdivr
mov
add
add
xchg
je
add
jne
repz
call
add
xchg
lahf
xchg
xchg
lods
fcmovu
jns
add
push
insl
xchg
add
add
add
mov
add
cmp
aaa
mov
push
push
lahf
inc
add
cmpsb
add
frstor
xchg
push
test
dec
push
add
add
pop
addb
dec
add
push
add
stos
and
ljmp
sbb
add
add
jmp
add
outsl
fwait
clc
jno
pushl
fucomi
or
in
or
int3
mov
add
add
or
inc
add
rcll
mulb
add
adc
jmp
add
add
outsb
lahf
mov
push
fs
addl
add
add
decl
or
addb
sub
lock
popa
add
mov
ret
add
data16
add
add
jmp
add
cwtl
jbe
add
and
xchg
jnp
loope
sub
jbe
add
add
stos
addl
push
mov
mov
ret
lahf
push
data16
mov
add
inc
add
add
xchg
dec
sti
dec
js
add
xchg
lock
das
xor
jmp
add
add
cltd
mov
jle
mov
add
or
nop
mov
add
add
and
test
add
insl
add
add
int3
dec
cwtl
sub
add
jmp
add
sbb
mov
addb
add
add
add
ret
add
mov
add
imul
or
shl
outsb
pop
sti
jecxz
xchg
push
push
icebp
push
add
add
lcall
cwtl
ret
add
mov
imul
push
mov
add
dec
inc
add
add
in
mov
fimull
aad
add
out
adc
in
cmp
push
pop
add
fdivrs
add
add
data16
imul
decl
add
inc
add
add
mov
xor
jmp
add
je
lret
sahf
outsl
mov
add
shrb
incl
lret
xchg
push
add
mov
add
xchg
or
add
add
add
pushf
jnp
rcrb
insl
loope
fwait
pushf
lret
or
or
aas
fdivs
adc
ljmp
add
cmp
or
add
add
incl
add
lahf
out
sarl
roll
and
mov
add
add
jp
dec
movb
mov
leave
fwait
lahf
jbe
shl
push
add
adc
call
stos
gs
popf
lock
pop
cltd
sub
add
cmc
les
xchg
xchg
loope
fadds
fstl
enter
loopne
movb
add
jmp
push
sbb
mov
add
out
pop
xchg
lods
push
add
add
and
jp
add
sub
test
cli
adc
lcall
jbe
add
cli
pop
add
add
adc
incl
inc
add
les
popa
add
push
add
sub
popf
rolb
add
add
add
fmuls
insl
mov
add
dec
fucomi
or
push
paddsb
call
incl
data16
lcall
add
les
fsubr
dec
dec
shrb
lret
lcall
mov
lcall
and
lcall
cltd
paddsw
insl
adc
lcall
enter
lcall
out
sbb
mov
xchg
test
mov
add
pop
rcrb
pop
add
test
pop
dec
roll
cltd
lret
add
push
add
inc
add
sub
add
jmp
leave
loop
pushf
adc
mov
push
out
lds
adc
add
ljmp
add
stos
fld
add
and
dec
dec
xchg
xchg
mov
in
lds
mov
addb
popf
jne
add
sub
pop
pop
adc
lcall
add
movl
and
enter
and
pushl
add
lcall
jns
dec
xchg
xlat
call
add
cld
or
lods
addb
mov
in
pop
sub
add
cli
ljmp
fcoms
addr16
pop
bound
pushl
fdivr
add
add
icebp
fnstcw
pop
and
call
add
add
mov
add
pop
insl
into
push
add
push
or
cwtl
push
pusha
add
dec
xchg
addb
and
mov
mov
pushl
call
pushl
jp
mov
mov
mov
sbb
add
add
stos
in
push
xchg
cmp
out
pop
cmp
push
add
jno
ljmp
lcall
add
adc
call
repz
xchg
adc
ljmp
cmp
in
ss
xchg
cmp
add
lahf
adc
jmp
in
mov
lahf
inc
add
adc
das
pop
adc
ljmp
add
ljmp
pop
jb
incl
add
mov
mov
adc
mov
add
mov
add
call
repnz
lret
mov
add
add
inc
add
xchg
nop
mov
pop
cmpsl
add
add
iret
aam
add
push
nop
xor
incl
dec
aad
add
popl
add
add
add
add
cmp
add
push
add
cltd
inc
add
add
add
add
dec
out
dec
add
fldenv
pushl
rclb
cli
fdivl
push
pop
ds
push
mov
fiaddl
sbb
mov
cmpsb
add
sub
xchg
nop
cmpsb
add
incb
push
add
or
dec
sbb
je
loope
and
jbe
and
pushl
ljmp
adc
in
inc
add
jmp
sbb
cmp
repnz
jmp
add
test
data16
loope
je
out
push
out
movb
add
push
add
add
sub
add
test
mov
dec
mov
imul
mov
insl
jno
fmul
sbb
mov
fucomi
pop
scas
xor
push
test
xacquire
dec
out
pop
repnz
push
pop
dec
xor
lcall
mov
inc
add
stc
jg
add
add
ja
in
push
mov
stos
xchg
sbb
jmp
incl
addl
add
ret
pop
addb
arpl
fildll
sbb
add
rcrb
push
pop
mov
pop
pop
loop
xor
jmp
add
add
add
ljmp
repnz
add
loopne
add
call
lcall
repnz
sbb
add
add
cmp
pop
or
js
popf
hlt
xor
incl
inc
add
je
add
fwait
lds
jp
push
push
mov
aaa
popa
add
mov
out
and
add
roll
clc
loope
call
add
addl
aaa
movsl
add
push
loop
push
dec
je
add
add
jb
out
lcall
incl
fdivl
or
pop
das
das
xchg
pop
sbb
cmp
adc
pushl
pop
stos
clc
js
lods
push
mov
jb
lcall
popf
xor
inc
add
add
call
into
mov
mov
dec
mov
cltd
inc
add
std
cmp
sub
add
scas
add
push
jno
lcall
add
jmp
add
add
filds
sti
adc
cmp
adc
call
mov
incl
add
mov
and
add
dec
mov
addb
push
sbb
and
sbb
std
lret
adc
pushl
cmpsb
add
xchg
ror
xor
addb
add
adc
incl
call
call
pop
adc
pushl
jmp
shll
out
xchg
jns
push
add
sbb
adc
cmp
pushl
push
adc
jmp
add
lea
cli
in
push
add
push
js
add
dec
add
mov
neg
cwtl
fisubrs
jg
add
mov
dec
mov
data16
icebp
cltd
aad
add
or
sbb
add
add
add
push
add
pop
pop
fdivrl
out
dec
or
dec
js
mov
add
je
ret
add
das
shrb
push
add
sub
fwait
mov
int
sub
mov
add
ljmp
dec
nop
mov
jmp
add
nop
nop
outsl
iret
inc
add
pop
add
sbb
hlt
popf
cmpsl
add
add
decb
mov
test
loopne
inc
add
adc
call
ret
add
cmpsl
add
add
push
sub
add
or
ljmp
loope
jmp
add
add
mov
scas
out
addl
sbb
les
sbb
mov
lods
pop
cmpsl
add
test
leave
inc
add
addb
mov
data16
jb
dec
jecxz
adc
call
xchg
add
ljmp
xchg
into
push
and
ljmp
ret
add
pop
hlt
mov
or
add
imul
add
xor
jmp
pop
ss
add
or
dec
mov
add
sbb
add
incl
mov
add
push
add
dec
and
decl
add
inc
add
aaa
idivl
push
add
lret
add
imul
les
push
add
adc
add
xchg
pop
and
cld
out
out
js
add
mov
inc
add
outsb
in
jle
lds
mov
mov
add
sbb
rcl
cmpsl
add
push
add
aaa
aad
mov
je
mov
or
js
mov
push
adc
inc
add
xchg
data16
mov
scas
sub
add
push
add
inc
add
out
adc
push
xchg
push
add
sarb
add
or
add
pop
sahf
test
mov
add
add
and
jmp
add
pop
ja
add
into
shl
add
add
jl
xchg
stos
movb
ss
jmp
pop
mov
loopne
mov
data16
add
ljmp
sub
xor
ljmp
add
lcall
cmpsb
add
iret
addl
xchg
cmpsb
add
les
mov
add
lret
lds
fxch
add
call
add
addb
stos
or
cli
repnz
pop
push
xchg
cld
push
add
jp
dec
ret
add
add
lods
in
repz
add
or
adc
lcall
add
dec
dec
mov
mov
sub
add
add
out
xchg
fstps
das
ss
pop
lods
add
jmp
add
add
dec
pop
xchg
imul
inc
add
push
add
ljmp
stc
push
and
pop
cmp
dec
push
inc
add
movsb
add
jl
sbb
pusha
add
mov
add
fildl
out
xlat
jae
fcoml
add
mov
xchg
or
mov
and
fidivrs
dec
test
push
add
roll
xchg
adc
lcall
daa
add
mov
out
in
cmc
and
jmp
cmc
les
test
sti
xor
decl
jbe
movb
pop
or
pop
aaa
add
add
addl
add
mov
in
sahf
fsincos
addl
dec
sbb
mov
push
add
sbb
je
add
mov
dec
mov
stc
adc
ljmp
fdivp
fidivrs
jb
mov
add
jo
call
add
lea
imul
add
mov
jns
add
mov
loop
cwtl
out
mov
jecxz
icebp
jg
loopne
and
xchg
test
cmp
cmp
mov
sysret
add
mov
add
rcrl
not
pop
cmovae
incl
add
xacquire
xor
jl
movsl
add
fiadds
cmp
pop
loop
pop
jp
mov
add
incl
add
jmp
mov
xor
mov
popf
and
incl
incl
mov
jle
outsl
inc
add
test
les
outsb
xchg
ss
dec
movb
sub
add
mov
xor
lcall
and
jmp
add
add
fadds
fmul
dec
leave
jb
inc
add
insl
sti
loopne
movsl
add
lods
jb
incl
iret
repz
scas
sbb
add
push
add
sbb
add
add
cltd
dec
cli
xchg
push
loopne
cmp
xchg
xor
call
jmp
jg
add
adc
add
add
insb
test
mov
add
add
add
pushl
sbb
addl
test
xchg
dec
lock
add
in
add
aas
or
dec
jno
cld
cmp
and
ljmp
mov
iret
hlt
jg
sbb
call
mov
add
dec
bound
jmp
add
adc
ljmp
add
les
mov
add
lcall
mov
roll
dec
cmp
mov
mov
out
ss
addl
add
inc
add
add
jmp
add
movb
or
add
shr
cmp
push
fsubp
add
mov
call
xor
in
jb
lcall
add
xchg
outsb
movb
add
inc
add
pop
and
dec
movsl
add
add
dec
push
mov
mov
enter
pop
mov
and
ljmp
push
int3
daa
add
push
dec
neg
int3
and
popf
push
scas
pop
add
aad
xor
fldt
pusha
add
sbb
add
imul
add
aam
negl
jp
sahf
lret
std
add
push
add
addb
add
jmp
movsb
add
pushf
adc
mov
pop
adc
call
lds
test
leave
sub
add
fidivrs
nop
jmp
add
add
jmp
rolb
add
pop
mov
dec
sbb
sub
pop
mov
add
push
push
mov
xchg
ret
hlt
mov
add
call
mov
xchg
ret
pop
add
repz
mov
adc
jmp
add
add
rolb
add
xor
ljmp
call
nop
jmp
sbb
rcll
mov
xchg
ret
add
clc
imul
add
add
inc
int3
mov
nop
jmp
add
mov
add
pop
xor
nop
jmp
add
and
aam
cmpsl
add
shrl
enter
adc
add
mov
add
dec
pusha
nop
jmp
hlt
add
test
in
add
pop
nop
jmp
pop
add
add
mov
nop
jmp
sahf
add
add
sub
dec
push
nop
jmp
add
add
xor
aas
jl
mov
nop
jmp
dec
add
inc
addb
mov
nop
jmp
imul
adc
add
push
mov
xchg
ret
add
add
mov
nop
jmp
adc
in
xchg
xchg
insb
xor
nop
jmp
add
add
mov
nop
jmp
adc
popf
je
add
add
arpl
incl
add
mov
addl
mov
nop
jmp
add
add
mov
nop
jmp
popf
add
xchg
xchg
dec
test
nop
jmp
sbb
add
add
jbe
mov
imul
mov
or
add
add
nop
jmp
add
aam
add
nop
ds
nop
jmp
jnp
add
leave
push
mov
add
mov
mov
dec
push
mov
mov
add
add
add
mov
add
push
nop
jmp
popf
mov
hlt
sub
hlt
mov
nop
jmp
add
add
nop
jmp
add
inc
add
add
lock
in
gs
add
ljmp
out
push
mov
mov
add
push
lret
or
nop
jmp
add
mov
mov
xchg
ret
jnp
sahf
pop
sub
add
add
test
ret
xchg
cmp
jmp
int3
out
add
pop
mov
push
mov
xchg
ret
add
out
pop
nop
jmp
add
add
jl
ss
mov
nop
jmp
out
add
pusha
nop
jmp
add
mov
add
add
pop
pusha
nop
jmp
add
add
std
movswl
nop
jmp
hlt
or
add
push
mov
add
add
add
aad
add
popl
jmp
add
add
sahf
iret
mov
nop
jmp
imul
add
mov
xchg
ret
add
and
ljmp
nop
jmp
ret
add
add
add
nop
jmp
cmp
mov
jg
or
add
ss
mov
cmpl
cmc
pop
add
clc
jnp
add
add
nop
jmp
add
add
add
add
call
nop
jmp
add
add
add
add
add
add
inc
add
dec
push
mov
aaa
test
add
or
jb
add
nop
jmp
sbb
add
xchg
fwait
mov
nop
jmp
sbb
test
add
nop
jmp
hlt
cmp
add
lret
call
add
xchg
add
sahf
mov
nop
jmp
add
add
clc
add
incl
jmp
nop
jmp
add
add
dec
mov
push
mov
xchg
ret
lret
xchg
mov
nop
jmp
add
pop
int3
add
nop
jmp
aam
jnp
add
add
call
nop
jmp
add
movntq
out
push
nop
jmp
add
mov
clc
les
out
dec
pop
push
mov
xchg
ret
add
insb
jmp
nop
jmp
int3
mov
adc
add
pushf
cmp
nop
jmp
out
int3
faddl
dec
incl
je
mov
add
nop
jmp
popf
cmp
out
fcom
in
je
nop
jmp
cmp
movzbl
test
jmp
jb
or
call
add
sti
nop
jmp
or
add
mov
jg
nop
jmp
jae
out
fsubrs
data16
movsl
mov
xchg
ret
lret
inc
add
xor
lcall
add
add
nop
jmp
rorb
loop
nop
jmp
jnp
add
mov
insl
ret
nop
jmp
or
or
test
push
mov
xchg
ret
add
aas
cmc
test
jmp
push
add
ret
add
pop
testl
movb
xchg
ret
sahf
add
add
nop
jmp
add
mov
push
outsb
pop
push
mov
xchg
ret
add
add
inc
add
xor
pushl
cmp
nop
jmp
ret
or
mov
add
add
jae
or
add
jg
add
add
add
or
pushf
rep
push
mov
xchg
ret
hlt
cmc
pop
popf
mov
nop
jmp
add
mov
add
in
add
inc
add
jns
loop
xchg
lds
push
add
mov
inc
push
mov
xchg
ret
repz
inc
add
or
pop
add
ss
popf
xor
sub
mov
nop
jmp
aas
add
add
sbb
jmp
out
test
add
loop
pop
shr
nop
jmp
add
add
add
arpl
pushl
xchg
mov
notb
jae
adc
mov
dec
cmp
jmp
add
in
add
mov
mov
nop
jmp
add
push
dec
cmp
jmp
test
add
jb
xchg
loopne
cmpsb
add
lea
xchg
or
add
add
lods
test
push
mov
xchg
ret
popf
add
stc
push
nop
jmp
aas
popf
add
add
add
add
add
add
repz
rcll
ret
or
add
leave
sub
call
sub
xor
nop
jmp
mov
add
add
mov
nop
jmp
add
add
pop
fst
cmp
clc
nop
jmp
pop
or
inc
pop
call
nop
jmp
pop
out
hlt
repz
movzwl
nop
jmp
out
out
or
sub
add
nop
jmp
add
in
sbb
rclb
add
add
add
ficoms
add
movb
rep
nop
jmp
pop
add
add
add
jecxz
or
popa
add
add
add
push
add
jmp
dec
adc
sahf
pushf
inc
add
add
cmp
mov
sub
xor
and
je
jne
nop
jmp
pop
add
add
hlt
push
jmp
mov
add
add
lds
inc
add
mov
xor
nop
jmp
imul
add
add
pop
nop
jmp
add
xchg
pop
cmp
pop
cmc
push
add
rdpmc
rclb
add
inc
sub
add
jge
jns
nop
jmp
push
daa
int3
ret
aas
and
push
mov
add
sbb
in
or
add
scas
mov
push
mov
xchg
ret
add
add
ficoml
pop
add
add
pushl
xor
nop
jmp
aas
inc
addb
sub
dec
push
mov
add
roll
roll
daa
add
pop
inc
fildl
pop
cmp
mov
xchg
ret
ror
les
out
push
push
mov
xchg
ret
mov
add
cmp
add
add
out
or
add
sbb
add
lret
add
lds
mov
into
or
dec
jl
andps
mov
nop
jmp
add
inc
adc
stos
adc
add
add
out
inc
add
and
ljmp
out
nop
jmp
imul
add
mov
outsl
or
add
add
clc
cwtl
jne
nop
jmp
push
push
sbbb
enter
push
add
outsl
add
test
add
push
mov
nop
jmp
ret
add
add
add
push
mov
adc
jl
aad
imul
repnz
cmp
rorl
add
add
add
add
pop
or
add
and
and
ret
bound
push
xor
jg
add
adc
pop
ret
add
mov
pop
nop
jmp
add
push
add
out
inc
mov
nop
jmp
mov
add
pop
add
xor
add
nop
jmp
add
rclb
add
or
adc
and
popf
test
cs
nop
jmp
pop
add
xor
repz
dec
nop
jmp
add
or
add
adc
call
pop
jmp
nop
jmp
hlt
add
add
jmp
push
add
mov
nop
jmp
add
popf
clc
add
add
mov
nop
jmp
cmc
add
popf
add
nop
jmp
jl
add
or
mov
xchg
ret
xchg
hlt
mov
push
nop
jmp
mov
add
add
pop
nop
jmp
add
add
or
add
pop
dec
nop
jmp
aam
add
add
add
clc
pusha
push
mov
xchg
ret
daa
in
add
dec
mov
xchg
ret
je
add
call
nop
jmp
add
add
int3
add
nop
jmp
or
sldt
cmp
shll
fisttpl
add
add
add
inc
je
dec
je
add
lds
cmpsl
add
jg
nop
jmp
fldl
pop
add
xor
decl
nop
jmp
add
add
mov
mov
add
pop
testl
nop
jmp
fisubs
hlt
push
pushl
nop
jmp
in
pop
add
add
mov
nop
jmp
test
add
add
arpl
inc
add
jmp
add
addb
sub
mulps
fiadds
add
add
aam
xor
call
rclb
mov
inc
add
sbb
pop
cwtl
mov
nop
jmp
aas
je
add
add
add
add
add
mov
add
push
call
add
lret
leave
call
nop
jmp
fsubrs
test
adc
add
add
add
inc
add
ficoms
in
ss
loop
add
add
pop
add
xor
nop
jmp
sbb
or
jb
add
add
nop
jmp
rolb
cmc
cmp
setnp
icebp
nop
jmp
add
mov
add
add
or
inc
add
add
jne
nop
jmp
out
mov
stos
nop
jmp
add
add
add
aaa
xchg
into
inc
nop
jmp
inc
imul
pop
cmp
in
pop
push
mov
add
cmp
mov
ret
filds
add
adc
add
add
sbb
addb
add
mov
cmp
add
rolb
add
add
incb
mov
xchg
ret
imul
adc
jmp
adc
add
add
add
add
add
add
jmp
stc
push
add
pop
add
xchg
xchg
inc
add
nop
jmp
xchg
add
add
nop
jmp
hlt
fiadds
divps
jb
cmp
add
push
mov
xchg
ret
add
pop
push
nop
jmp
add
dec
add
add
add
lods
inc
add
jnp
add
mov
push
mov
xchg
ret
out
mov
jne
nop
jmp
mov
notl
incl
add
lret
add
nop
jmp
add
add
add
push
mov
xchg
ret
add
add
in
mov
nop
jmp
fiadds
mov
fcmovb
nop
jmp
add
add
add
add
jmp
xor
add
add
adc
pushl
call
ljmp
nop
jmp
hlt
add
or
inc
call
add
jle
inc
sub
push
cmpsb
inc
add
add
push
push
mov
xchg
ret
in
add
mov
es
inc
add
aam
mov
nop
jmp
clc
push
jnp
pop
xor
add
lahf
mov
nop
jmp
add
rolb
add
xor
xchg
inc
add
push
addb
ret
nop
jmp
add
addb
add
add
inc
add
add
dec
jb
aam
add
fwait
je
nop
jmp
add
mov
add
push
mov
xchg
ret
add
pop
rep
push
mov
xchg
ret
add
pop
add
ljmp
nop
jmp
sldt
hlt
inc
cmc
mov
imul
jmp
hlt
pop
addb
add
jne
nop
jmp
inc
add
add
push
nop
jmp
add
add
mov
dec
stos
nop
jmp
imul
xor
add
cli
pop
push
mov
xchg
ret
add
inc
add
add
nop
jmp
add
add
push
outsl
pop
xor
nop
jmp
or
add
in
lds
pop
push
push
mov
xchg
ret
dec
hlt
add
add
pushl
add
or
add
nop
jmp
add
add
add
mov
nop
jmp
add
in
add
jo
incl
jne
nop
jmp
in
and
sahf
or
push
nop
jmp
add
ret
imul
add
sti
test
push
mov
xchg
ret
add
add
pushl
dec
xchg
nop
jmp
je
in
aas
hlt
dec
add
mov
nop
jmp
add
in
add
in
push
nop
jmp
add
inc
push
add
jmp
add
fldl
jecxz
inc
add
xor
mov
nop
jmp
out
mov
jl
leave
nop
jmp
cmc
clc
add
add
push
nop
jmp
add
add
cmp
cmp
nop
jmp
xor
inc
add
add
je
add
nop
jmp
jb
add
imul
seto
adc
call
add
mov
add
jmp
adc
test
fsubr
mov
nop
jmp
daa
or
or
outsb
jmp
nop
jmp
imul
add
mov
nop
jmp
mov
add
add
mov
nop
jmp
inc
add
sbb
mov
xchg
ret
sahf
aam
push
push
mov
xchg
ret
popf
add
enter
adc
add
add
pop
adc
decl
hlt
test
sldt
mov
xchg
cmp
ficoms
in
push
pusha
jns
add
in
out
les
jmp
mov
add
nop
jmp
aam
daa
popf
add
bound
decl
add
add
sbb
add
mov
nop
jmp
sub
sub
jg
call
add
add
add
push
push
mov
xchg
ret
add
push
movl
add
ficoms
add
push
xor
in
sbb
inc
add
push
sub
inc
and
jmp
add
add
bswap
cli
dec
nop
jmp
add
fmuls
loop
inc
add
lcall
jmp
jnp
imul
mov
nop
jmp
add
mov
push
mov
mov
std
add
repnz
adc
call
jmp
jmp
test
and
popf
add
sub
in
add
add
add
add
outsl
or
nop
jmp
jb
cmp
push
add
xchg
sbb
lret
addl
add
add
jl
add
add
push
mov
xchg
ret
mov
loop
push
mov
xchg
ret
add
xor
jmp
sub
sbb
rorb
jmp
cmc
add
sbb
add
sbb
lock
incl
add
add
ficoms
mov
xchg
ret
sbb
add
cli
call
nop
jmp
adc
aas
cmp
add
nop
pop
adc
push
nop
jmp
or
mov
add
add
nop
jmp
mov
add
inc
add
pop
nop
jmp
fadds
out
add
and
push
xor
inc
add
call
lcall
adc
push
add
jmp
xor
lcall
out
call
add
fadds
outsl
int
mov
clc
call
add
mov
mov
add
call
mov
nop
jmp
add
add
sbb
push
out
decl
imul
fadds
mov
mov
xchg
ret
imul
pop
dec
nop
jmp
add
add
inc
inc
neg
mov
nop
jmp
add
call
into
ret
add
add
add
add
ret
add
add
mov
fcmovb
nop
jmp
add
jnp
clc
add
sbb
jmp
add
add
add
je
les
pusha
add
adc
jmp
add
loop
cmpsb
add
lods
inc
add
cmc
add
jmp
add
leave
add
push
mov
xchg
ret
add
nop
jmp
out
ss
mov
add
nop
jmp
adc
aam
int3
add
add
sub
nop
jmp
or
add
test
in
pop
popa
nop
jmp
ficomps
je
scas
push
nop
jmp
or
add
pop
xor
add
sub
dec
sub
incl
add
cmc
clc
ss
adc
lcall
add
cmp
pushl
ret
add
jae
jge
mov
add
add
incl
add
jge
nop
jmp
aas
add
add
pop
nop
jmp
add
add
add
popa
add
int
inc
adc
lcall
clc
inc
inc
add
and
adc
add
sbb
add
nop
jmp
int3
mov
aam
add
clc
ret
nop
jmp
int3
or
add
sbb
enter
add
add
repz
add
mov
nop
jmp
add
out
pop
or
clc
decl
out
add
push
push
mov
xchg
ret
cmp
fldl
aad
pop
nop
jmp
or
xor
jnp
in
cwtl
add
nop
jmp
inc
add
add
add
sub
add
add
int3
ud2
sub
add
jmp
pop
aam
xchg
add
add
nop
jmp
add
add
test
popf
inc
add
add
decl
mov
and
pop
in
mov
push
nop
jmp
sub
or
add
inc
xor
jmp
add
scas
call
add
nop
jmp
popf
add
lret
bound
incl
popf
dec
push
mov
xchg
ret
mov
test
sti
add
nop
jmp
jnp
inc
aam
add
mov
nop
jmp
pop
add
rolb
add
mov
add
or
mov
xchg
ret
xor
ret
add
popf
inc
add
outsl
add
xchg
repnz
in
repz
jnp
sbb
adcb
mov
mov
nop
jmp
add
add
add
add
dec
cmp
jmp
add
daa
jl
add
jmp
inc
aas
add
add
jmp
add
add
add
and
push
add
adc
dec
jne
nop
jmp
hlt
add
mov
fwait
inc
add
dec
daa
jae
sub
nop
jmp
inc
xchg
or
call
ljmp
pop
add
pop
je
inc
add
add
decl
or
add
popf
adc
add
add
addb
push
mov
lret
jns
or
xor
add
pop
xchg
decb
test
jmp
sbb
adc
mov
mov
and
mov
or
dec
push
push
mov
xchg
ret
add
outsb
and
jmp
jb
ror
xor
mov
jmp
pop
xor
mov
nop
jmp
repz
sub
pop
or
cmp
add
add
repz
je
nop
jmp
outsl
dec
pop
ret
add
add
fsubrp
pop
ljmp
add
inc
outsl
add
out
add
add
add
push
mov
add
add
adc
pushl
jmp
jmp
sbb
add
add
mov
nop
jmp
out
add
cmp
jge
incl
add
les
jmp
dec
sub
sahf
add
in
cmp
nop
jmp
add
mov
xchg
ret
xchg
adc
repz
add
incl
add
and
add
add
jmp
add
add
add
nop
jmp
add
roll
mov
nop
jmp
ret
jnp
add
cltd
and
nop
jmp
add
add
out
mov
nop
jmp
mov
add
nop
jmp
add
add
add
add
add
add
add
dec
test
sahf
add
nop
jmp
add
pop
mov
nop
cld
jmp
add
in
repz
nop
jmp
add
popf
jae
lret
arpl
stc
dec
nop
jmp
add
test
out
adc
nop
mov
add
add
xchg
nop
jmp
add
push
add
int3
mov
push
sti
incl
pop
add
add
daa
out
roll
add
cli
pushl
mov
daa
add
adc
jp
mov
add
jmp
add
push
push
mov
xchg
ret
sahf
xor
fsubrs
hlt
incl
or
add
imul
add
add
push
push
mov
xchg
ret
add
add
and
nop
jmp
pop
or
mov
ret
add
mov
nop
jmp
add
clc
daa
add
xchg
push
dec
sub
nop
jmp
out
add
data16
ljmp
ljmp
add
add
movzwl
nop
jmp
add
popf
pop
add
push
nop
jmp
ret
jae
add
push
nop
jmp
add
aas
add
out
sub
cmpl
mov
test
add
call
incl
out
add
pop
add
add
incl
add
xchg
nop
jmp
hlt
add
add
add
pop
add
add
add
fisttps
adc
fiadds
add
and
adc
add
add
add
pushl
push
mov
xchg
ret
add
cmp
stos
notl
aas
hlt
mov
add
nop
jmp
mov
push
out
mov
push
nop
jmp
sldt
add
mov
pop
pushl
nop
jmp
add
add
add
subl
push
mov
xchg
ret
cmp
add
push
add
sbb
inc
add
add
nop
jmp
popf
add
add
fldl
add
add
fistl
mov
xchg
ret
or
add
or
mov
push
nop
jmp
add
cmp
add
mov
nop
jmp
jae
add
movzwl
nop
jmp
add
add
popa
nop
jmp
mov
cmp
add
add
add
es
nop
jmp
addb
popf
mov
nop
jmp
add
add
shlb
inc
jb
nop
jmp
daa
orb
decb
test
jmp
hlt
or
push
mov
xchg
ret
pop
inc
add
adc
jmp
push
jl
ret
ret
popf
test
rclb
jnp
fadds
xchg
je
mov
add
in
sub
nop
jmp
cmc
jae
xchg
add
pop
fmuls
jmp
add
inc
add
ret
push
push
mov
xchg
ret
sldt
xchg
jmp
or
add
setge
mov
add
push
mov
hlt
pop
xchg
in
add
xor
dec
push
nop
jmp
fldl
add
add
xchg
add
js
ljmp
add
cmp
add
add
add
jmp
add
inc
hlt
push
jb
nop
jmp
add
or
jmp
or
or
movsl
add
call
mov
xchg
ret
add
add
ja
mov
nop
jmp
lret
add
nop
or
popf
nop
jmp
add
push
add
push
mov
xchg
ret
aas
pop
test
push
nop
jmp
add
in
clc
add
add
pop
add
nop
jmp
imul
add
mov
nop
jmp
pop
add
mov
add
add
nop
jmp
add
add
pop
mov
nop
jmp
add
nop
iret
mov
push
mov
xchg
ret
out
add
dec
mov
nop
jmp
add
mov
add
scas
inc
add
add
add
add
scas
add
or
nop
jmp
add
fadds
dec
nop
jmp
add
pop
sahf
inc
add
jp
mov
cmpsl
ret
loopne
adc
dec
test
mov
push
mov
xchg
ret
xchg
hlt
fucom
add
add
rclb
ljmp
add
or
popa
jmp
push
xor
inc
add
jne
ret
nop
jmp
je
int3
daa
add
add
inc
add
jne
nop
jmp
add
aas
les
cmp
xor
jmp
in
add
mov
in
call
aas
fisttpll
jne
nop
jmp
aas
aam
mov
mov
nop
jmp
sbbb
inc
add
decl
nop
jmp
cmp
add
in
mov
loop
dec
sub
nop
jmp
add
aas
pop
dec
push
mov
xchg
ret
add
add
push
add
mov
nop
jmp
jae
pop
adc
add
pushl
ja
xor
nop
jmp
add
test
add
ss
inc
push
mov
xchg
ret
sbb
add
popf
push
push
mov
xchg
ret
add
add
add
incl
add
pop
cmp
call
incl
add
shll
jmp
andb
je
add
ret
add
push
pop
cs
nop
jmp
add
out
test
xor
cli
call
decl
add
sbb
adc
jmp
add
add
mov
nop
jmp
jnp
add
sbb
aas
or
stos
nop
jmp
inc
add
je
sbb
pushl
add
jle
ss
add
sub
decl
inc
imul
ret
add
mov
nop
jmp
add
mov
sub
call
dec
jb
mov
ljmp
add
add
incl
jb
add
call
inc
hlt
pop
popf
scas
xor
nop
jmp
jl
add
lods
nop
jmp
add
add
jge
movb
add
nop
jmp
cmp
or
push
and
mov
xchg
ret
push
add
cmp
movsb
loope
incl
mov
add
add
add
decl
je
rclb
pop
nop
jmp
add
inc
mov
jecxz
loope
fildl
rcll
decl
aas
test
or
add
add
add
nop
jmp
popf
popf
add
pop
out
call
inc
cmc
add
mov
imul
xor
and
mov
mov
xchg
ret
add
xor
add
cwtl
sub
push
mov
xchg
ret
in
sar
je
nop
jmp
add
in
jmp
in
add
adc
inc
add
push
jl
nop
jmp
add
fsubp
cli
mov
nop
jmp
add
jl
and
incl
add
add
push
add
lret
rep
push
mov
xchg
ret
addb
stc
mov
nop
jmp
cmp
aam
add
sbb
jmp
cmp
daa
or
fdivrs
add
jmp
add
add
mov
xor
nop
jmp
mov
call
nop
jmp
jl
sbbb
add
lahf
lea
nop
jmp
pop
in
add
add
pop
push
push
mov
xchg
ret
aam
add
add
add
call
add
mov
stc
add
nop
jmp
sahf
pmulhuw
jae
inc
add
ret
add
add
mov
inc
add
add
push
loope
adc
ljmp
jg
nop
jmp
clc
add
pop
xchg
fnsave
jmp
add
scas
push
nop
jmp
mov
mov
popf
xor
jp
nop
jmp
push
add
clc
mov
push
mov
pushf
mov
shll
and
movl
in
call
or
sbb
in
add
add
jle
in
add
add
test
arpl
jmp
ret
push
mov
xchg
ret
jnp
or
dec
inc
nop
jmp
add
fidivs
add
adc
decl
inc
nop
jmp
inc
je
add
es
call
incl
pop
push
push
add
movsl
add
loop
mov
xchg
ret
push
inc
cmp
pop
push
mov
xchg
ret
rolb
test
or
stos
inc
add
jl
add
test
call
add
add
jmp
add
add
add
push
mov
xchg
ret
add
add
cmp
mov
dec
add
xor
add
daa
fiaddl
jge
nop
jmp
push
pop
add
xchg
add
test
call
incl
jb
je
add
lcall
inc
sbb
or
cmpl
add
xchg
add
test
out
call
mov
sti
nop
jmp
and
in
add
and
ljmp
jle
add
incl
add
sub
adc
incl
fmull
insb
add
add
pop
add
add
jp
enter
in
incl
outsl
out
add
mov
cmp
nop
jmp
add
add
fcoms
jmp
add
adc
jno
call
fmuls
mov
hlt
sub
movsl
nop
jmp
mov
and
hlt
insl
mov
nop
jmp
add
pop
ss
add
movswl
nop
jmp
jae
add
inc
add
mov
xchg
ret
add
xchg
lret
push
nop
jmp
add
repz
cmp
add
jmp
add
add
in
outsb
cmp
nop
jmp
pcmpeqb
aas
add
add
add
jmp
add
add
in
add
nop
jmp
and
movq
add
add
add
nop
jmp
pop
in
add
jle
jne
nop
jmp
int3
int3
adc
add
sahf
push
push
mov
xchg
ret
hlt
dec
add
push
inc
add
add
nop
jmp
add
mov
jne
nop
jmp
add
add
fadds
dec
call
nop
jmp
pop
test
outsl
pop
push
nop
jmp
sub
aam
add
repz
push
mov
xchg
ret
add
and
add
add
nop
jmp
popf
add
rep
nop
jmp
pop
je
add
add
cmpsl
add
dec
jecxz
pushl
add
jl
adc
ljmp
rclb
fldenv
and
add
add
mov
add
ficoms
jmp
cmp
add
rolb
clc
and
jmp
adc
jae
inc
add
mov
pop
push
mov
xchg
ret
add
test
movsl
add
ror
pop
nop
jmp
inc
daa
xchg
add
ficoms
sbb
rcrb
ret
aam
inc
add
mov
jmp
int3
add
int3
pop
push
add
in
mov
push
mov
xchg
ret
add
nop
jmp
test
sub
add
add
xchg
repz
cli
nop
jmp
pop
add
pop
add
mov
add
nop
jmp
xor
add
xchg
push
add
adc
lea
nop
jmp
add
add
add
lock
push
push
mov
xchg
ret
pop
in
jb
mov
push
mov
xchg
ret
add
add
clc
nop
jmp
add
cmp
sbb
pop
jbe
pushl
push
mov
xchg
ret
add
cmc
or
mov
xchg
ret
add
add
nop
jmp
out
add
pop
pop
mov
sbb
decl
ss
push
mov
pop
sbb
push
nop
adc
dec
add
ljmp
in
incl
add
or
mov
nop
jmp
imul
add
ficomps
cmp
jg
nop
jmp
add
rorb
add
aaa
sub
nop
jmp
repz
cmovb
decl
rep
nop
jmp
cmp
popf
pop
pop
add
mov
pop
push
mov
xchg
ret
jae
add
pop
push
nop
jmp
add
jnp
add
setg
in
add
add
add
mov
pop
add
aam
add
into
dec
pushf
jae
sub
outsl
mov
cld
mov
add
mov
or
add
jmp
add
pushl
test
out
sub
pop
inc
add
adc
decl
hlt
notb
test
mov
shlb
movsb
add
stc
fsubrl
adc
incl
add
nop
xor
out
popf
loop
add
addb
fdivs
jge
outsb
sarl
mov
ret
add
adc
add
cmp
add
mov
cmp
call
inc
add
jb
pushl
add
sub
addl
add
inc
add
push
lea
stc
or
popf
imull
dec
mov
add
add
xchg
pop
sub
add
add
das
mov
pop
pop
bound
inc
add
mov
jns
add
and
mov
xchg
lcall
jecxz
mull
lock
aas
or
cmpsb
add
inc
add
jl
xchg
aaa
stc
out
mov
xchg
xchg
popa
add
xor
lcall
add
mov
add
decl
ret
mov
mov
add
pop
stc
pop
loopne
mov
leave
xor
decl
mov
add
lock
add
sub
sbb
inc
add
fnsave
add
inc
add
dec
inc
add
mov
ret
add
push
xlat
loope
jmp
mov
cmp
add
leave
jmp
add
lock
out
xor
sbb
add
clc
decl
cmp
add
dec
mov
and
call
fmull
add
add
das
inc
add
mov
add
add
les
jbe
add
push
cmp
in
pop
cmpsl
add
into
std
jmp
test
mov
stc
push
add
popa
add
or
cld
push
mov
out
mov
push
add
mov
insl
mull
add
cmpsl
add
adc
push
sbb
fisubrs
push
add
dec
dec
inc
add
movl
lcall
dec
adc
lcall
mov
add
push
add
cltd
adc
sub
jo
lcall
sub
arpl
pushl
addb
mov
jns
add
inc
add
test
add
ljmp
xchg
into
rolb
add
outsl
cmp
mov
lahf
test
add
xchg
outsb
dec
repnz
pop
in
sti
jbe
mov
add
std
js
pop
add
and
in
dec
xor
call
inc
add
ficoml
add
sub
inc
add
add
decb
add
aas
pop
pop
or
nop
adc
ljmp
pop
fwait
movl
add
fsub
add
add
insl
std
cmp
add
outsl
imul
movl
popf
test
inc
add
and
jmp
add
inc
add
inc
add
or
add
insl
mov
out
xor
dec
lcall
add
add
leave
xchg
loopne
addl
add
mov
mov
add
shl
aam
inc
add
dec
flds
add
lret
add
jmp
add
sbb
mov
xchg
pop
pop
sti
outsl
shll
cmpsl
add
ljmp
add
sbb
add
add
dec
test
dec
fistl
xor
ficomps
addb
or
shl
cmpsb
add
gs
add
push
add
mov
add
dec
mov
xor
fsubrl
mov
mov
mov
add
mov
sbb
dec
xchg
mov
jg
cli
add
push
xor
jmp
add
add
xchg
cli
push
pop
aas
pop
rol
add
je
xchg
pop
std
mov
add
movsl
add
pop
inc
add
call
mov
mov
add
add
add
out
in
mov
lcall
mov
scas
data16
pusha
add
sbb
pop
jae
call
js
xor
sahf
popf
pop
cld
dec
and
mov
xchg
arpl
jmp
add
out
enter
xor
jmp
cld
adc
ljmp
ret
loopne
sbb
add
xor
call
add
aaa
cmp
out
sub
cmp
scas
mov
sub
addl
xchg
lret
push
add
mov
jmp
insb
imul
movl
sbb
rcrb
hlt
and
jmp
decl
and
lcall
mov
lret
inc
add
mov
add
mov
push
ljmp
xor
pushl
add
add
or
shl
add
and
pop
negb
lds
push
dec
mov
pop
or
sub
add
inc
add
push
add
mov
movswl
add
push
add
movl
addl
or
xor
lcall
nop
sbb
decl
imul
adc
jmp
add
inc
add
jmp
add
shlb
add
adc
add
add
fiaddl
add
out
dec
cmp
add
cmc
push
jp
add
push
push
add
ret
add
xchg
lods
dec
addb
add
js
call
add
decb
into
jl
xor
adc
jmp
add
mov
lret
push
lock
xor
out
cmc
rorb
and
lcall
inc
add
lcall
mov
pop
add
ljmp
call
cmovb
mov
add
mov
mov
mov
add
bound
jmp
idiv
push
cltd
loopne
and
lcall
data16
jg
push
add
iret
xor
dec
jne
add
jmp
add
add
std
mov
incl
ljmp
dec
sahf
pop
xchg
lods
dec
iret
or
add
xchg
sbb
adc
pushl
dec
mov
call
out
add
decl
xor
mov
add
clc
xchg
fisubl
add
sbb
aas
mov
imul
add
add
inc
add
dec
addb
lds
out
shlb
ds
add
add
dec
jmp
into
mov
add
sti
mov
add
lods
or
daa
add
add
add
pop
sub
add
mov
mov
aas
movb
adc
lcall
insb
aas
sbb
repnz
mov
in
push
mov
add
add
push
mov
inc
add
mov
sbb
lea
adc
sbb
push
add
cmp
aad
xor
decl
xor
add
pop
test
pop
out
pop
lea
add
out
call
add
dec
dec
hlt
inc
add
push
dec
mov
sbb
decl
dec
insl
fadds
call
add
jp
sub
inc
add
pop
xchg
loopne
aam
push
add
cmp
out
std
int3
ds
clc
imull
add
adc
lcall
adc
call
add
xchg
push
mov
add
enter
call
xchg
mov
cli
stc
push
add
mov
add
incl
add
pop
add
inc
add
mov
add
lcall
insb
shll
mov
fs
dec
std
ds
inc
add
jecxz
dec
or
add
mov
add
sbb
add
mul
add
add
ljmp
xchg
fistpll
add
jo
decl
inc
add
cmp
pop
add
pusha
add
lret
push
pop
ljmp
xchg
adc
push
addl
push
sub
scas
nop
cltd
fsubrs
or
shrb
mov
add
sub
sub
mov
mov
add
test
das
and
pushl
add
pop
int
pushf
adc
add
add
add
addb
add
add
xor
call
add
xchg
mov
or
add
jmp
add
push
add
xchg
xchg
pop
fistpll
iret
dec
stos
outsl
sub
xchg
cs
jg
inc
add
add
mov
addb
ljmp
jle
pop
outsb
pop
inc
add
adc
call
enter
push
add
dec
movsb
add
add
roll
add
addb
xor
jge
lods
pushf
pushl
adc
call
lcall
sti
mov
add
addl
add
add
mov
add
adc
lcall
push
mov
add
je
add
mov
rcr
into
out
in
les
into
test
cmp
add
add
lcall
fstl
fadds
lcall
nop
xor
lcall
in
mov
nop
loop
les
stos
sub
add
dec
nop
pop
jae
jmp
mov
jno
inc
add
add
and
jno
pushl
stc
xchg
std
out
movl
sub
dec
ds
call
add
in
dec
push
add
mov
sti
mov
add
inc
add
mov
fistl
xchg
pop
add
data16
add
mov
push
movl
adc
add
xchg
mov
add
imul
out
sbb
add
lea
pop
add
add
jmp
add
sbb
add
pop
mov
and
dec
cmp
mov
add
cmp
add
mov
add
sbb
nop
nop
jne
std
lret
imul
sbb
out
lock
cmpsb
add
decl
inc
add
lds
mov
addl
neg
xor
cmp
cs
aas
jbe
add
push
ds
add
pushl
push
add
sti
sahf
mov
xchg
push
push
add
or
xchg
roll
xchg
inc
add
sbb
rolb
add
dec
out
pop
or
lods
push
inc
add
addb
or
sahf
addb
data16
lahf
lds
mov
jg
add
insl
xlat
roll
add
add
add
add
add
cmpsl
add
dec
push
add
js,pn
adc
decl
add
mov
in
insb
xchg
xor
movsl
add
add
hlt
fneni(8087
add
fidivrl
cwtl
sub
add
xor
incl
add
mov
lcall
ret
add
test
mov
lret
pop
hlt
in
inc
add
add
mov
popa
add
jb
ljmp
jmp
nop
dec
aaa
sub
jmp
push
movl
incl
mov
and
ljmp
add
add
add
nop
adc
or
shlb
add
lods
push
xchg
ret
add
dec
inc
add
dec
sub
add
lret
lods
test
dec
pop
push
pop
dec
push
sahf
adc
ljmp
add
add
jl
add
lds
and
cli
fbld
incl
add
addl
add
ret
add
pop
cmp
add
cmp
sbb
push
add
addb
fisubs
mov
jmp
add
add
fdivrl
jp
add
add
inc
add
movsb
add
inc
add
out
xchg
fsubrl
sbb
mov
fisubrs
sbb
popf
inc
add
xor
lcall
cmp
daa
add
js
add
add
mov
decl
aas
xor
jl
mov
addl
lcall
lret
add
add
dec
cmpsb
add
push
mov
add
mov
add
jb
call
mov
ljmp
cmc
or
add
ret
mov
shr
adc
ljmp
jb
cmp
sub
mov
fcompl
add
enter
pop
pop
xor
call
call
incl
ljmp
add
lcall
in
lock
mov
mov
xor
pop
addl
dec
stc
stc
jno
jmp
out
adc
rolb
add
leave
movsl
add
imul
add
mov
lods
jl
mov
sbb
iret
movsb
add
mov
out
mov
mov
push
or
xchg
fsubrl
add
xchg
nop
addb
jns
test
add
lcall
in
pop
jo
cld
jle
roll
add
aas
cltd
loop
mov
mov
add
fsubr
cli
outsl
dec
pop
cmp
data16
add
call
xchg
jmp
add
add
lods
test
cmpsl
add
lods
aam
adc
add
adc
add
outsl
mov
add
add
push
add
fisubl
scas
movsb
add
xor
decl
adc
pushl
pop
repnz
add
mov
sub
add
insl
mov
pop
jns
add
add
jae
push
pop
mov
movsl
add
add
inc
add
loope
push
add
lods
mov
inc
add
add
xchg
add
ljmp
add
icebp
push
push
xchg
push
mov
add
iret
in
push
add
xchg
jmp
add
jmp
add
cs
or
sub
mov
mov
pop
and
add
lods
adc
add
sti
cmpsb
add
dec
in
cs
cmp
loope
mov
movsl
add
fsub
add
lret
or
pop
hlt
push
add
mov
add
stc
lahf
xchg
lds
mov
int
mov
hlt
cmpsl
add
ljmp
inc
add
mov
mov
sbb
add
pushf
jns
in
mov
test
out
adc
add
leave
adc
mov
stc
mov
adc
decl
jbe
add
ljmp
call
jmp
incl
add
pop
push
movl
mov
add
aaa
js
add
pushl
jmp
add
add
add
add
push
bound
ljmp
add
mov
jne
mov
adc
jmp
add
in
shl
add
add
add
jmp
push
test
add
hlt
shlb
outsl
rolb
inc
add
ret
mov
sbb
lcall
rorl
dec
lods
adc
mov
lret
push
add
movsl
add
add
sbb
add
inc
add
push
leave
jae
mov
pop
sahf
lret
push
add
sub
add
into
mov
add
jns
sbb
lods
sub
or
cld
mov
push
or
mov
xor
in
mov
xchg
pop
out
mov
add
decl
push
inc
add
add
sbb
and
ljmp
add
lods
data16
in
and
dec
or
je
in
in
sbb
fnstenv
repz
or
rolb
add
incl
lcall
iret
out
push
add
add
cmc
dec
fiadds
xchg
jle
add
and
jmp
dec
sbb
lahf
sub
add
inc
add
sbb
lds
inc
add
popa
add
xor
pushl
add
cs
xchg
jno
pushl
jns
mov
jnp
das
fdivl
xchg
and
stc
inc
add
pop
mov
popa
add
add
call
dec
sarl
out
pop
cmp
ljmp
and
incl
jg
add
scas
push
add
fsubrs
pop
out
lea
aas
sub
sub
sbb
add
cmp
gs
lret
pushl
movl
sbb
fisubrs
sbb
decl
jne
add
xchg
sub
add
jo
decl
jecxz
mov
pop
mov
icebp
adc
incl
sbb
add
jmp
call
int
scas
jmp
adc
and
fildl
add
je
lds
push
add
lds
xchg
insl
dec
mov
ret
pop
or
add
adc
incl
add
cmc
arpl
call
add
add
mov
mov
lahf
pop
cs
jp
fcmovb
add
sti
rcll
push
add
je
add
add
cmpsl
add
add
fsub
add
fcompl
clc
out
xor
shll
or
dec
ret
add
mov
pop
xchg
add
push
mov
add
divb
add
addl
push
add
add
add
add
mov
aaa
cld
lds
pop
test
add
add
push
mov
in
lcall
out
cld
aas
imul
pop
add
add
sahf
pop
xchg
jecxz
mov
arpl
decl
cmc
ds
add
sbb
incl
rcr
jnp
repnz
inc
add
and
lcall
lahf
jge
clc
and
dec
jno
lcall
add
clc
stc
inc
add
incl
jmp
add
mov
and
lcall
add
add
add
jmp
jecxz
cwtl
jmp
decl
imul
add
add
add
adc
push
add
cli
les
inc
add
bound
mov
pushl
mov
stos
loope
add
jmp
add
movsl
add
add
imul
cmp
aas
or
call
jp
ret
add
add
jg
test
mov
add
out
xor
lcall
repz
movb
call
add
mov
add
and
add
add
or
jno
jmp
add
ljmp
popf
lahf
fwait
xor
jmp
add
add
cs
pusha
add
test
add
add
add
mull
add
add
imul
mov
fdivl
fdivrl
loopne
cmp
cs
add
roll
adc
std
inc
add
mov
or
ljmp
add
add
rcl
mov
ret
mov
add
addb
add
pushl
add
ljmp
pop
imul
add
sub
bound
call
mov
jne
into
imul
lret
out
and
fidivrl
cli
mov
add
repnz
call
loop
xchg
push
loope
shlb
pushl
cmp
data16
pop
pop
lock
push
add
add
call
mov
data16
decl
data16
popf
rcll
add
jecxz
sbb
or
add
jmp
add
add
call
mov
add
jmp
add
outsl
lods
stos
js
inc
add
add
pop
addl
and
dec
jo
out
xor
add
cmpsb
add
mov
or
add
jl
push
sbb
sbb
outsl
dec
mov
test
repnz
mov
add
mov
jmp
mov
cmp
into
cmpsl
add
jmp
add
ljmp
xor
sti
and
add
imul
fidivs
mov
int3
add
imul
add
cmp
jl
add
jae
jnp
add
test
testl
mov
push
add
bound
ljmp
pusha
add
inc
add
push
add
sbb
xchg
xlat
addr16
adc
fadd
add
add
pop
cmovg
push
jns
jle
rcr
fisttpll
push
add
cmpsl
add
add
bound
ljmp
jle
insb
mov
add
add
mov
sbb
mov
add
add
cmp
dec
cmp
out
int3
or
xchg
mov
pop
stos
rolb
jae
lcall
mov
dec
roll
xlat
leave
mov
loop
in
std
sbb
add
jmp
add
add
call
push
add
adc
jmp
adc
lcall
add
pop
negl
jle
add
data16
call
add
dec
mov
dec
adc
decl
mov
fldenv
repz
popa
add
in
idivl
add
call
pop
push
mov
add
add
inc
add
add
icebp
sub
add
mov
mov
add
lahf
imul
xchg
ret
add
loop
aaa
xchg
not
out
in
movl
jbe
add
movsl
add
fsts
mov
add
jecxz
and
ljmp
add
out
sbb
add
inc
add
cmovb
mov
mov
hlt
lods
inc
add
mov
ljmp
ret
scas
push
test
add
stos
loope
out
rolb
add
js
test
jbe
mov
add
call
decl
ss
out
scas
sub
push
movsb
add
add
add
add
add
ljmp
sbb
ret
add
add
lds
add
pushl
add
push
xchg
jmp
add
or
ljmp
les
rcrb
sbb
add
xor
fmuls
jnp
add
add
mov
push
pop
int
add
mov
mov
test
mov
add
add
add
mov
push
push
aaa
repz
add
std
ret
mov
int
outsb
sub
add
std
daa
add
push
add
mov
lret
push
pushf
and
call
mov
push
fdivrp
clc
or
into
jb
decl
call
sbb
push
xor
call
ljmp
mov
movb
addl
push
data16
pusha
add
pop
into
or
fstps
gs
add
lcall
mov
add
sub
add
inc
add
or
pop
addb
add
bnd
push
imul
add
pusha
add
scas
ss
push
mov
add
jmp
add
pop
add
call
push
adc
jp
add
add
jle
lods
mov
push
add
sub
ljmp
insl
push
push
icebp
faddl
cmp
out
cmp
ret
add
rorb
add
popf
xor
mov
add
sbb
lcall
decl
add
les
jnp
add
jns
add
jbe
adc
aas
cmp
add
add
jle
mov
ljmp
addl
add
adc
jne
roll
add
loope
inc
add
inc
add
sahf
in
in
mov
mov
add
lds
mov
insb
mov
adc
add
sbb
sbb
movsb
add
add
dec
or
jle
cmp
mov
add
xchg
fnstenv
add
mov
add
add
jecxz
xchg
jns
or
repnz
pop
cltd
fwait
jnp
add
jno
lcall
rolb
add
jmp
mov
add
adc
mov
jb
call
add
fdivrl
clc
sub
add
add
cwtl
outsb
les
sbb
and
cmp
rolb
add
out
roll
aaa
out
mov
movq
das
call
add
imul
mov
add
add
pushf
cmc
lcall
ret
add
adc
jge
push
ret
add
add
push
mov
jo
incl
dec
ljmp
add
mov
dec
ficompl
cmp
mov
add
int3
adc
fnsave
pop
add
in
ds
mov
call
mov
addl
add
add
add
dec
ret
add
pushl
movb
in
stos
adc
pushl
add
sbb
sbb
mov
add
push
in
cmp
add
mov
movsl
add
add
dec
stos
inc
add
repnz
push
loopne
or
add
add
inc
add
add
xchg
mov
fxch
movsl
add
lods
leave
add
ljmp
loop
sub
mov
mov
add
outsb
imul
add
mov
imul
mov
pop
roll
add
mov
sbb
add
fcompl
xchg
pop
ss
add
push
add
mov
add
aaa
mov
mov
add
add
loop
pop
test
in
xchg
mov
out
mov
add
int3
push
mov
rcll
mov
fbstp
add
cmpsb
add
jo
ljmp
lret
out
test
cmp
push
iret
in
sbb
ja
add
pop
cmp
push
add
mov
ffree
add
add
aad
add
sti
jl
push
data16
add
add
mov
add
add
jmp
lea
dec
scas
addl
mov
add
or
add
pop
or
jb
push
adc
add
and
pushl
lcall
add
sbb
aad
add
fmull
jg
add
negb
popf
pop
add
decl
repnz
inc
add
xchg
roll
or
jno
incl
add
pop
add
adc
push
sub
incl
mov
cmpsl
add
add
push
add
cwtl
mov
sahf
mov
stos
lcall
add
jl
mov
xchg
pop
cltd
and
lcall
lds
jecxz
out
adc
jmp
add
into
fsubr
cwtl
mov
jl
cmp
sbb
lds
mov
add
ljmp
jne
add
cmc
iret
fnstcw
pusha
add
cmp
adc
jg
xchg
push
add
cmp
stos
inc
add
jmp
add
hlt
jmp
add
dec
or
decl
xor
decl
xchg
mov
jmp
mov
or
push
add
add
movsb
add
les
inc
add
mov
add
cmp
jbe
repz
mov
add
fistpll
cmp
add
hlt
stos
or
xchg
ret
or
xchg
mov
popa
add
sbb
sub
bound
decl
add
cmp
leave
mov
jbe
stos
xor
jmp
add
imul
pushf
data16
leave
daa
add
jp
mov
movsb
add
cwtl
fcoms
dec
mov
call
add
pushf
test
push
test
add
mov
mov
jo
dec
movb
movb
in
clc
ret
add
add
incl
add
lret
and
ljmp
roll
out
push
loop
pop
push
add
aad
lods
sarb
test
add
movsb
add
mov
add
and
jmp
ljmp
fmull
js
ds
xlat
add
ljmp
dec
push
add
push
add
aaa
push
add
xor
lcall
jl
add
add
jbe
jmp
sub
add
aas
cltd
in
push
das
fxch
jne
inc
add
sti
or
lret
rol
add
inc
add
pop
mov
or
push
add
adc
pushl
call
sub
je
mov
ret
add
add
out
pushf
in
and
cmp
add
sbb
pushl
insb
mov
out
push
test
loope
and
sbb
add
add
or
add
add
decl
inc
add
arpl
incl
add
mov
mov
sub
in
hlt
nop
or
add
xor
jmp
add
add
popa
add
sti
test
aad
push
sub
add
add
push
add
add
xor
incl
add
lcall
push
and
cld
les
jne
add
push
iret
js
xor
mov
jbe
add
mov
mov
add
adc
jmp
add
xchg
push
aad
jecxz
push
das
push
add
xchg
pop
push
add
lock
mov
inc
add
add
or
jmp
incl
add
xchg
cs
dec
iret
jecxz
mov
add
sbb
dec
sti
pop
and
call
data16
add
inc
add
add
nop
ret
mov
xor
jmp
jecxz
dec
push
inc
add
inc
add
add
in
push
jmp
ljmp
adc
jmp
pushf
xchg
adc
decl
sbb
out
int3
stos
stos
and
jmp
cld
out
outsb
outsl
sbb
incl
add
lds
inc
add
leave
lods
lahf
xchg
adc
ljmp
add
fisttpl
and
fdivr
fnsave
add
or
lcall
mov
adc
add
cltd
das
outsl
imul
add
repz
add
jns
ss
add
jnp
pop
test
loop
cli
ret
add
push
stc
pop
movsl
add
mov
jp
ja
sub
add
stos
iret
lahf
push
cmp
inc
add
aaa
mov
fnstsw
add
or
shll
add
dec
add
decl
and
lcall
inc
add
add
mov
add
xrelease
mov
inc
add
jmp
jl
add
das
stc
rcrl
add
mov
shrd
sahf
in
add
out
leave
inc
add
popf
lock
call
pusha
add
sbb
add
addb
add
nop
js
inc
add
lahf
popf
ds
add
or
fstps
add
imul
add
mov
push
mov
add
mov
lret
ror
ret
popf
push
add
pop
sbb
incl
push
mov
dec
push
stos
cli
xor
incl
add
pop
mov
dec
aam
rep
and
jmp
add
jns
addb
fwait
xor
ljmp
addb
hlt
mov
je
add
stos
adc
xor
add
add
cmp
inc
add
dec
mov
fwait
call
test
xor
add
incl
or
mov
incl
adc
push
xchg
rolb
fcoml
add
jo
lcall
leave
push
mov
iret
jbe
insl
das
inc
add
inc
add
add
cltd
std
jg
add
xor
dec
sbb
jmp
fidivrl
or
fildll
jo
jns
or
iret
pop
or
add
pavgw
das
inc
add
out
in
into
sub
ret
add
movsb
add
dec
stos
inc
add
jle
divl
incl
or
add
cmp
dec
outsb
cltd
addl
and
add
add
ljmp
mov
add
mov
and
jle
outsb
jge
or
rcrl
sub
adc
ljmp
jge
add
push
bound
mov
add
xchg
mov
push
add
mov
dec
in
jno
dec
jbe
add
inc
add
add
scas
clc
bound
cmp
add
and
lcall
xor
and
pop
and
imul
enter
bound
ljmp
mov
add
sub
addl
add
clc
xchg
ret
add
add
js
outsl
test
mov
add
addb
dec
cmc
push
xchg
out
jbe
add
mov
push
add
or
and
call
push
std
jbe
jg
push
xchg
xor
fcoml
add
out
dec
test
mov
jl
add
das
bound
call
hlt
jg
int
fistpl
cmp
je
out
add
dec
daa
add
int
inc
add
jnp
push
addb
add
cld
iret
stos
push
lahf
pop
mov
push
aam
addb
add
push
lods
sub
add
mov
cli
mov
add
lcall
inc
add
mov
fwait
sbb
test
lahf
ret
lret
enter
add
cmc
mov
add
sbb
pushl
decl
das
mov
pop
add
xor
mov
mov
addl
sub
jle
test
div
and
ljmp
sub
add
idivl
ja
add
inc
add
cmpsl
add
add
add
xor
ljmp
push
add
add
fdivrl
add
pop
jae
cmp
fstpt
mov
clc
push
add
pushf
jmp
push
ds
sub
add
decl
stos
inc
add
mov
add
stos
jbe
add
pop
sbb
jnp
inc
add
dec
add
cmp
cmp
xlat
lds
clc
jg
inc
add
adc
dec
inc
add
lcall
dec
add
scas
into
ficoms
add
ret
loope
ret
add
jecxz
out
mov
bound
call
add
repz
add
push
push
call
dec
fisttpll
hlt
test
xchg
cmp
add
xlat
cli
add
mov
sub
and
and
call
add
add
shll
test
leave
push
add
adc
call
add
xlat
xor
pushl
add
cmp
add
cmp
call
jg
add
add
push
call
lds
das
adc
fidivrl
out
inc
add
and
decl
out
fistpll
cld
add
push
in
and
out
pushf
and
pushl
decl
add
jmp
push
cwtl
cmp
pop
pop
fmull
imul
add
call
icebp
in
mov
loopne
xchg
movsl
add
add
jo
jge
jp
add
add
push
test
mov
cmp
incl
rolb
jno
incl
sbb
add
pushl
add
call
add
sub
xchg
jns
sti
scas
and
or
lods
dec
std
inc
add
out
ja
add
outsb
and
incl
add
cmp
add
ja
bound
dec
push
insl
shll
shll
dec
pop
xchg
or
mov
mov
ret
add
sub
and
add
jae
lcall
jp
int3
adc
add
mov
cmp
pop
movsb
add
add
ljmp
add
add
ljmp
jne
add
sub
add
test
dec
push
jno
fucom
add
sbb
cwtl
sbb
mov
xchg
repz
adc
decl
inc
add
jo
decl
add
decl
pop
xchg
xor
add
add
lea
loope
push
add
xor
incl
lcall
loope
roll
add
jbe
pop
and
decl
addl
add
push
add
scas
pop
out
xlat
add
je
jl
add
mov
adc
mov
mov
add
data16
lcall
ljmp
cmp
call
add
add
bound
decl
rorb
daa
add
pushl
or
inc
add
mov
add
jnp
add
cmp
add
pop
popf
cld
arpl
lcall
out
and
lcall
add
add
jle
add
sahf
push
rolb
jg
stos
in
fisttps
adc
call
movl
push
dec
aas
lahf
adc
inc
add
nop
je
and
jmp
add
out
mov
add
push
call
test
in
mov
pushl
pop
xchg
add
dec
cmovbe
sbb
sbb
addl
shrl
sub
add
add
cs
add
or
push
inc
add
jae
cmp
fwait
mov
rolb
in
cmpsb
add
lret
lahf
addb
add
mov
add
aaa
cld
add
ljmp
icebp
fldlg2
mov
mov
rolb
movsb
add
fmuls
mov
add
mov
mov
add
jb
push
loope
add
test
cmp
add
jg
imul
in
adc
call
cmp
add
test
fiadds
incl
add
repz
fpatan
cwtl
dec
int
add
cmpsl
add
ljmp
fcom
pop
inc
add
popa
add
xor
add
lcall
leave
adc
decl
xchg
ja
add
add
and
addb
pop
out
sub
xchg
daa
add
push
add
add
pushl
jmp
add
jb
jmp
add
dec
mov
lcall
lret
jle
sbb
add
add
xor
ljmp
add
test
add
das
inc
add
cmp
out
call
push
out
test
fninit
add
pushl
shlb
pmulhuw
das
movsl
add
incl
add
inc
add
in
add
xor
mov
mov
dec
dec
jnp
push
into
cld
sub
repz
inc
add
sub
add
stc
outsb
sti
addb
inc
add
dec
xchg
jg
cmpsl
add
add
jl
add
xor
add
cmpsl
add
jmp
adc
sti
push
jmp
add
fucomip
push
mov
in
or
add
dec
int3
js
cmpsl
add
fadds
add
shrb
lret
mov
sar
out
adc
lcall
add
add
xor
add
xlat
adc
ljmp
jno
jmp
add
iret
insl
addl
dec
dec
pusha
add
fsubs
cltd
aaa
imul
lock
pushf
loopne
xor
push
xor
push
cs
cltd
scas
mov
sub
popf
out
imul
mov
add
add
pushl
and
fsts
pushl
add
call
add
inc
add
add
add
add
mov
sbb
jmp
cmp
pop
out
mov
aad
clc
sub
xchg
and
and
call
add
jmp
add
cs
cmp
add
mov
adc
jmp
add
dec
sub
pop
dec
stos
pop
movl
add
je
add
lcall
adc
shrb
xchg
arpl
clc
sub
push
add
repz
push
outsl
iret
mov
jns
add
add
scas
ss
add
cmp
add
xchg
jb
jmp
dec
fisttps
fdivr
repnz
sbb
mov
ds
testl
add
mov
jl
xchg
sarl
aaa
fcomps
cltd
mov
mov
call
lcall
inc
add
pop
jo
ljmp
mov
add
jae
jmp
add
mov
call
fidivrl
inc
add
add
add
bound
decl
ret
add
jecxz
sahf
inc
add
add
pop
lods
xchg
cld
dec
mov
add
test
mov
add
out
dec
push
std
scas
aas
outsl
cmp
mov
pop
movl
jmp
xor
decl
add
pushl
push
xlat
lret
cmp
cmpsb
add
or
lcall
mov
sbb
add
lcall
in
fimull
pushl
call
add
bswap
out
sahf
mov
add
js
add
add
cld
loop
mov
push
push
add
lcall
cs
add
out
sahf
daa
add
add
add
add
rcrl
add
dec
jl
add
add
dec
push
lods
aam
add
test
add
cmpsb
add
cmpsl
add
sub
jmp
imul
jmp
incl
push
sbb
out
jl
add
add
cmp
push
add
fnsave
add
xchg
test
pusha
add
mov
mov
jo
jmp
add
cmp
mov
fcmovu
je
add
daa
add
lret
jg
ss
jle
imul
jmp
cmp
push
add
push
add
sub
dec
pushf
dec
das
mov
add
lret
add
dec
mov
cs
add
mov
jmp
pop
loopne
push
add
and
ljmp
insl
mov
add
add
dec
test
lcall
scas
sbb
push
pushf
adc
add
add
push
add
daa
add
jb
lcall
jg
imul
jmp
sub
add
mov
decl
pop
into
jbe
adc
pushl
add
add
inc
add
mov
movl
dec
dec
nop
xacquire
push
sbb
add
push
or
add
mov
mov
add
decl
add
push
add
push
add
mov
add
add
dec
mov
inc
add
push
idiv
mov
fstp
cmp
decl
dec
mov
icebp
pop
testb
test
add
mov
scas
clc
add
fsubl
adc
fs
add
jmp
push
addl
popa
add
fsubrl
push
push
add
jecxz
ja
scas
inc
add
jmp
cli
enter
aad
add
sbb
add
addr16
mov
add
dec
lds
sbb
notb
xor
add
and
inc
add
add
decl
stc
jno
call
sbb
add
loop
fistpl
add
movl
out
lea
sahf
or
mov
aam
mov
cli
mov
ds
add
dec
cmp
arpl
ljmp
or
insl
dec
fiaddl
cli
cmc
or
cmp
sub
add
dec
inc
add
jge
push
xor
pushl
add
mov
in
daa
add
mov
add
mov
pushl
add
push
add
filds
mov
cld
aad
lahf
xchg
imul
push
or
add
jne
mov
rcll
int3
jg
add
add
xchg
sbb
add
mov
add
add
addb
inc
add
jmp
add
dec
lods
sub
adc
mov
mov
add
inc
add
mov
movsb
add
and
jmp
sub
xchg
arpl
jmp
add
scas
mov
and
aam
add
aas
test
std
aam
add
jle
add
cmc
push
jns
scas
xchg
fiaddl
dec
mov
ror
test
mov
jle
add
sbb
addl
add
add
pop
aaa
cs
add
add
sbb
rclb
pushl
add
out
xor
add
incl
mov
test
jns
add
jbe
push
add
loop
inc
add
cmp
shl
and
jmp
roll
add
movl
ficomps
push
push
loop
insl
stos
sbb
pop
or
negb
add
push
stc
aas
fwait
add
decl
inc
add
pop
xor
jmp
test
sub
add
aas
inc
add
add
test
je
pusha
add
xlat
inc
add
add
jnp
shrb
movsb
add
cmp
mov
xor
xchg
scas
je
stc
data16
cli
test
aad
push
jmp
add
cmpsb
add
add
and
xchg
movl
popl
and
pushl
add
and
fists
add
fisubl
jecxz
sbb
scas
lock
push
add
mov
mov
test
mov
sti
lods
cltd
addl
scas
cmpsb
add
cmp
pushl
call
pop
sbb
jmp
add
fistl
fmull
roll
jmp
movb
mov
lahf
or
lret
flds
testb
dec
fsin
inc
add
aad
inc
add
push
leave
roll
sub
xor
aas
mov
inc
add
mov
add
xor
fiadds
fstp
and
incl
add
add
add
js
pop
insb
sub
cltd
cmc
shlb
lcall
cmpsl
add
add
add
add
add
addb
std
aam
stc
cs
add
call
daa
add
clc
lods
push
in
nop
sbb
movsl
add
and
movl
add
push
add
push
fwait
movsb
add
add
pop
add
push
inc
add
inc
add
push
jp
sbb
add
fwait
sbb
mov
add
shlb
add
and
ljmp
pusha
add
movl
call
lcall
out
lcall
in
insb
xchg
jmp
bound
lcall
add
xor
decl
mov
add
pop
pushf
imul
lcall
push
add
and
das
mov
add
inc
add
fbld
mov
lahf
sbb
jmp
add
mov
lea
add
mov
sti
je
add
add
mov
call
nop
add
decl
push
add
popf
js
push
add
pushl
call
gs
test
jnp
add
cld
arpl
incl
or
aas
lock
ljmp
add
cld
fdivl
enter
adc
ljmp
inc
add
xchg
in
jns
pushf
add
dec
addb
add
cmp
call
incl
pushl
jns
lods
js
adc
jmp
addl
sub
mov
rorb
dec
jae
incl
add
push
add
test
push
addb
ss
jo
call
call
rolb
pushl
pushl
add
jnp
sub
add
movb
add
and
inc
add
roll
add
and
lcall
add
dec
pop
jl
lods
push
add
mov
lock
add
jne
add
add
fistpl
add
pushl
call
mov
in
pop
push
add
push
scas
fisttpl
push
push
add
mov
outsb
sti
testl
add
pushl
jbe
add
add
std
sub
cli
scas
lret
xor
decl
mov
dec
adc
jo
call
cmp
adc
lcall
dec
xor
add
and
inc
add
lret
test
lret
add
pushl
cmpsb
add
dec
in
aam
call
xor
pushl
add
addb
iret
addb
add
sbb
add
add
incl
add
fnstcw
movl
ret
add
mov
add
pushl
fadd
add
sub
add
xchg
pusha
add
sub
add
enter
popa
add
lods
aas
dec
ja
scas
lods
mov
add
dec
fiaddl
add
push
test
mov
add
sbb
adc
je
add
rolb
stc
cs
in
mov
stc
mov
in
dec
and
jo
jmp
ljmp
ljmp
scas
add
pushl
jmp
add
add
add
hlt
mov
add
add
mov
add
or
jno
ljmp
or
ljmp
ds
mov
add
call
add
fnstcw
iret
or
mov
out
pop
pushf
daa
add
fstpl
add
pop
nop
and
inc
add
or
mov
icebp
mov
dec
sbb
lcall
lods
push
outsl
xchg
loop
sbb
call
lea
iret
mov
sub
movl
jo
lcall
add
pop
mov
aas
mov
add
xor
incl
ljmp
jl
cs
xor
roll
add
mov
or
cli
lret
int3
inc
add
movsb
add
adc
das
dec
xchg
and
ljmp
cld
sbb
or
add
mov
add
sub
add
les
fbstp
adc
leave
mov
stos
jmp
imul
pop
sti
js
or
mov
lret
gs
add
sbb
popf
psraw
inc
add
jge
out
scas
xchg
jmp
pushl
inc
add
xor
pushl
lcall
add
jge
cmp
stos
shl
add
dec
inc
add
cmp
add
scas
or
xchg
inc
add
add
addr16
insb
lock
add
clc
enter
call
add
cmp
inc
add
sbb
add
dec
mov
adc
mov
jg
lea
call
rolb
repz
jg
add
mov
addl
pop
and
jmp
jmp
loop
icebp
mov
das
lods
daa
add
daa
add
out
sub
add
test
addb
add
movsb
add
aas
pop
sbb
add
jae,pn
ljmp
xchg
and
push
sbb
dec
add
ljmp
sub
lahf
push
cld
mov
inc
add
cmc
inc
add
sub
jmp
mov
es
imul
in
ds
add
add
mov
adc
ljmp
in
std
cwtl
mov
xchg
dec
data16
add
clc
test
sub
dec
jle
add
cli
mov
adc
fwait
sti
cwtl
je,pn
sub
incl
add
pop
mov
fcoml
jle
xchg
pop
dec
mov
pop
mov
push
add
xchg
cwtl
pop
jne
add
out
add
fwait
push
xchg
jg
inc
add
cmp
sub
sub
add
sub
cmp
cwtl
add
push
add
push
add
push
sbb
call
addl
or
jae
incl
imul
addb
ret
xchg
fstpl
add
lcall
add
mov
daa
add
add
inc
add
out
out
cmpsl
add
push
push
add
dec
xlat
mov
aaa
pushf
mov
push
in
int3
adc
pushl
add
cmp
add
inc
add
movl
jl
mov
add
add
cmp
and
addb
jecxz
xor
lcall
je
sbb
arpl
pushl
dec
jp
out
jge
add
in
loope
shl
leave
rcll
lock
popf
xor
mov
jl
add
dec
mov
add
mov
mov
mov
incl
add
add
out
push
add
mov
add
mov
jmp
add
stos
add
test
add
xlat
adc
call
add
hlt
addl
xor
inc
add
lds
sbb
add
popa
add
sbb
pusha
add
icebp
or
adc
xor
call
add
xchg
mov
pop
data16
call
add
xor
fucom
add
add
add
pop
cmpsb
add
add
xor
add
add
pop
add
fisubrl
push
or
mulb
add
adc
in
iret
ss
fmulp
mov
xor
mov
xchg
cmpsl
add
add
push
xor
incl
add
inc
add
mov
and
call
add
repnz
add
xchg
bound
jmp
add
insl
nop
or
mov
add
dec
push
add
sub
or
jmp
nop
xchg
mov
add
add
ret
add
mov
add
shrb
sbb
mov
add
sbb
lea
inc
add
add
add
iret
adc
push
sub
add
push
add
cmpsb
add
ret
add
incl
mov
add
cmp
add
jmp
pushl
call
sub
mov
clc
inc
add
popf
ss
push
loope
js
aas
test
add
add
push
add
aad
add
add
filds
in
dec
test
addb
outsl
sbb
imul
cmp
add
jb
jmp
adc
mov
mov
insl
adc
jmp
adc
incl
mov
dec
pop
es
mov
mov
dec
and
call
leave
and
pushl
add
leave
mov
js
or
add
dec
add
lcall
lods
loopne
and
clc
fbld
add
add
or
and
movl
jmp
add
cmp
jg
cmp
add
movsl
add
add
and
call
jmp
dec
mov
push
fucom
add
int3
and
ljmp
mov
xor
std
or
das
and
mov
call
pop
adc
lcall
mov
mov
add
in
push
out
push
xchg
pop
sbb
inc
add
add
dec
lret
lods
inc
add
scas
pop
add
push
add
das
popa
add
xchg
ss
sub
pusha
add
daa
add
addb
test
add
aas
mov
popa
add
mov
cmc
mov
add
adc
add
insl
mov
sahf
mov
push
add
mov
add
out
inc
add
xchg
jae
fucomp
scas
xchg
jae
jmp
decl
add
addl
inc
add
sub
insl
cltd
fistl
add
sbb
in
addr16
add
add
cli
pop
sub
add
sbb
add
pop
into
pop
mov
mov
inc
add
add
int3
inc
add
xor
cli
je
add
mov
pop
addb
cmp
xchg
pop
ljmp
and
lcall
movsb
add
jmp
js
frstpm(287
add
aad
push
sti
ffree
add
jae
cli
inc
add
insb
push
cmp
xor
ljmp
dec
push
pop
fbstp
mov
clc
mov
stc
mov
add
add
xor
decl
sarb
cmc
pop
push
jns
scas
jae
ljmp
lds
mov
adc
add
decl
adc
icebp
test
lret
jmp
add
sbb
fdivrs
cmp
mov
add
add
stos
int3
mov
mov
clc
or
cmc
sahf
mov
xor
call
pop
mov
add
xchg
in
or
add
add
adc
add
ljmp
jbe
dec
mov
jnp
pushf
sub
divl
das
add
fnstsw
jg
add
add
add
pushl
push
test
push
pop
je
adc
ljmp
add
or
add
add
in
push
jo
jmp
std
add
or
movb
add
add
push
fwait
push
pusha
add
pop
nop
jo
decl
add
and
incl
add
dec
add
dec
jae
push
test
pop
add
pop
jo
jg
add
hlt
push
jns
add
jg
fisubrl
jg
push
add
lock
iret
loop
pop
sub
sti
mov
sti
scas
mov
add
add
add
fsub
add
add
mov
stos
jp
add
adc
lcall
jno
cli
outsl
push
add
jo
call
or
add
lcall
sbb
add
add
sub
lds
and
in
push
jmp
add
data16
add
loope
jecxz
and
inc
add
add
xor
jmp
data16
lds
fimull
bnd
add
add
in
push
ss
add
lret
mov
hlt
mov
cmp
pushf
jp
add
xor
sbb
mov
jp
movb
add
pop
mov
add
jge
sbb
mov
cmc
xor
incl
add
in
rolb
add
mov
add
dec
fsubl
add
jp
ror
pop
insl
mov
or
add
lods
imul
push
das
push
add
lds
add
jmp
pushl
sub
add
sbb
jle
add
xchg
xor
call
and
decl
cltd
push
rcrl
inc
add
je
sbb
push
push
popf
xchg
ret
add
out
fsubr
push
jle
add
jecxz
lds
mov
add
mov
fistpl
lods
lcall
jmp
add
pop
pop
jl
scas
push
fistpll
test
inc
add
lods
cmp
fwait
jns
add
add
in
ss
add
dec
cmp
pop
add
add
mov
push
cmp
sub
cmp
decl
pushf
jg
add
sahf
mov
adc
pushl
incl
mov
dec
shlb
dec
sub
aas
push
mov
sti
jg
add
sarl
xor
and
push
inc
add
fwait
push
xchg
mov
lcall
lcall
add
dec
inc
add
cmp
add
cmp
repnz
rcrb
nop
jae
sti
jne
xor
clc
add
int3
dec
sbb
jg
dec
jne
push
les
adc
lcall
rcl
xor
fidivrs
add
out
dec
xchg
xchg
xchg
mov
les
je
xor
jle
pop
mov
add
add
ds
je
xchg
sbb
insl
adc
call
decl
add
rolb
add
jb
decl
pop
xchg
jmp
sahf
jl
add
stos
sbb
fiadds
add
dec
xchg
movsb
add
add
out
sub
out
mov
je
adc
add
negl
les
mov
pminub
cmp
in
cmp
jns
add
movd
push
mov
and
incl
add
cmp
jecxz
sbb
add
add
cmp
add
xor
cmp
sbb
sbb
add
addl
jb
call
add
jge
lds
into
cmp
jo
decl
dec
xchg
mov
add
decl
push
mov
jne
mov
add
pop
add
xchg
and
xchg
aad
sub
fldl
call
cmp
xor
rolb
or
test
inc
add
push
add
lods
sbb
incl
add
inc
add
jecxz
imul
sub
jmp
jmp
pushl
xchg
inc
add
push
add
xchg
addr16
add
imul
add
mov
sub
add
lcall
dec
into
clc
cmp
pop
movsl
add
call
jmp
sub
mov
imul
mov
ljmp
test
lods
jecxz
fwait
mov
or
fwait
xor
ljmp
add
mov
insb
push
add
mov
sub
data16
add
mov
out
and
add
cmpsl
add
add
aam
in
cmp
ret
mov
mov
adc
jmp
xor
decl
jbe
pop
add
imul
mulb
jmp
push
add
xlat
rolb
rcrl
loopne
aas
mov
and
decl
fs
mov
lahf
mov
scas
je
add
movb
add
mov
stos
stos
fisubl
shl
add
add
and
jmp
popa
add
xchg
jno
call
mov
mov
xchg
sbb
add
int3
push
sbb
and
decl
sub
insb
inc
add
insb
xchg
mov
ljmp
addl
push
adc
out
lcall
add
ljmp
pop
pop
or
cmp
add
insb
lahf
jbe
or
add
add
lahf
mov
add
test
mov
jle
add
jge
test
push
mov
mov
add
sub
add
cmp
add
and
push
lret
push
push
or
add
cltd
ljmp
pop
out
mov
repnz
test
pop
cmp
decl
out
mov
add
adc
lcall
add
sarb
lret
xchg
ret
add
add
mov
add
ljmp
jmp
add
mov
jg
push
and
push
lret
add
pop
repnz
add
cmpsl
add
loope
push
add
roll
fiadds
imul
add
add
sub
and
sub
lds
or
sbb
insl
xlat
fmul
fcoms
add
and
call
decl
pop
ja
add
decl
fsubrl
out
addb
push
inc
add
or
lret
xchg
inc
add
stos
jecxz
jp
mov
add
dec
lahf
jmp
addl
and
add
enter
outsl
mov
jns
mov
xchg
out
test
add
sbb
pop
or
test
add
icebp
sbb
mov
add
or
add
add
sub
inc
add
test
jl
add
push
add
add
add
add
ret
add
add
add
add
fsubrp
push
add
data16
mov
cmp
add
mov
mov
repz
adc
add
push
add
mov
jne
add
in
mov
mov
add
mov
push
add
jecxz
xor
mov
push
jb
call
xchg
clc
fwait
rolb
push
xor
call
add
lret
and
jmp
mov
addb
sub
push
or
add
cmpsl
add
jns
mov
pushf
inc
add
incl
decl
lods
mov
int
sbb
fisttpll
add
sbb
sub
rolb
cmp
repnz
mov
add
decl
test
mov
daa
add
out
lahf
shr
pop
push
and
incl
addb
add
add
xchg
push
cmp
dec
cs
mov
or
or
add
jb
call
nop
rorb
jb
jmp
add
lock
loop
xchg
lock
add
mov
daa
add
add
dec
aad
ret
add
incl
decl
jmp
pop
mov
rcl
or
sbb
decl
imul
pusha
add
fisubs
outsb
sbb
mov
in
adc
cli
mov
test
add
xlat
push
in
mov
pusha
add
jmp
dec
lods
adc
lcall
add
pop
or
mov
xchg
xor
decl
fsub
add
add
dec
xor
ljmp
add
push
cmp
insl
test
ljmp
xor
jge
add
sbb
pop
jp
cmpsl
add
add
aad
daa
add
sbb
xchg
or
ret
add
jb
ljmp
mov
dec
rolb
adc
jmp
sbb
inc
add
xor
incl
add
mov
add
add
push
add
or
out
dec
adc
ljmp
cmpsb
add
add
arpl
call
in
ret
add
add
stc
sub
push
add
aad
jno
pushl
add
popf
jnp
out
xchg
test
push
add
outsb
les
roll
incl
insl
mov
imull
inc
add
pusha
add
psllq
add
loope
add
jmp
add
ljmp
fsubrl
add
incl
dec
and
adc
fucomp
jecxz
je
std
mov
mov
dec
addl
adc
jmp
pmaxsw
fdivrs
dec
mov
sbb
addl
add
or
add
adc
ljmp
add
jns
add
add
in
push
inc
add
data16
fs
add
pushl
decl
or
sbb
fwait
shll
push
scas
sti
xchg
adc
pushl
pushl
inc
add
add
cmpsl
add
add
jmp
ljmp
add
add
lcall
dec
into
and
incl
mov
add
pop
popf
loope
pop
push
sub
scas
ljmp
inc
add
mov
pop
sbb
add
push
add
in
pop
imul
pushf
call
mov
dec
xchg
adc
incl
pushl
add
adc
incl
push
lea
add
data16
add
iret
xchg
and
lcall
lcall
lcall
pop
fisubs
fstpt
cwtl
roll
rcl
rorl
and
jmp
add
sbb
std
pushf
faddp
add
hlt
xlat
stos
call
add
jecxz
push
add
ret
fdivs
add
leave
ljmp
mov
aam
inc
add
lock
add
xor
pushl
add
add
adc
jmp
cli
movsl
add
lcall
fcmove
cmpsl
add
movl
pushl
add
popf
push
add
add
push
mov
mov
jb
fstpl
adc
jb
dec
jae
lcall
add
pushf
lods
adc
call
jns
fwait
sahf
cld
and
dec
jns
imul
add
add
rorl
mov
dec
push
fnstcw
add
xor
aad
add
lcall
jge
iret
jno
incl
inc
add
add
pop
or
add
add
jle
add
jl
aam
fsub
add
or
cmp
add
mov
pop
add
incl
push
push
add
stos
sti
mov
or
out
sbb
add
mov
dec
push
add
push
add
mov
lea
push
add
xor
lcall
xor
test
and
call
add
inc
add
add
xchg
push
mov
out
cmpsl
add
test
add
incl
js
push
rcl
cmc
lcall
add
inc
add
pop
and
call
cld
rclb
add
jecxz
mov
mov
addl
mov
out
dec
cmp
xor
jmp
es
bnd
jmp
add
jb
jmp
push
pusha
add
adc
jmp
pop
lret
lcall
decl
mov
add
inc
add
inc
add
jmp
fdivl
stc
aad
add
nopl
call
or
mov
add
mov
add
add
cmp
dec
addl
add
jne
aad
or
and
sbb
mov
lcall
inc
add
lahf
in
ret
add
add
aaa
pushf
jp
and
inc
add
pushl
jmp
add
rcr
and
ljmp
lods
or
add
sbb
fisttpl
ljmp
rolb
add
add
idivb
addl
pop
add
pop
lret
addl
call
aad
shll
add
cltd
pop
cmp
add
mov
mov
add
add
scas
test
into
add
pushl
add
aaa
or
jno
inc
add
pushl
aaa
mov
add
jge
add
pushl
test
sbb
std
scas
mov
lret
add
pop
imul
test
push
xchg
mov
jp
push
add
ljmp
mov
add
data16
std
imul
pushl
test
sub
imul
jmp
sub
call
jo
incl
incl
lock
ljmp
pop
popa
add
xchg
outsl
addl
xor
decl
scas
jg
add
mov
addb
add
leave
iret
lret
sub
pushl
lock
ss
leave
add
add
lret
int
dec
push
aas
scas
pop
lret
jmp
add
je
mov
add
push
add
and
add
sti
mov
stos
pop
repnz
movsb
add
add
incl
lret
jge
fmulp
mov
rcl
rorl
xor
call
sbb
add
call
fildl
incl
add
add
sbb
je
xchg
dec
in
out
int
adc
mov
leave
in
outsl
sub
fdivrp
stos
add
jno
inc
add
add
jb
call
add
out
mov
add
adc
incl
inc
add
les
mov
loope
mov
incl
xchg
test
repnz
add
add
inc
add
sub
js
add
push
addb
je
es
add
add
in
lcall
add
shlb
sarl
fucomip
jb
call
inc
add
pushf
jns
dec
mov
add
push
filds
add
mov
ja
fs
cmpsb
add
add
pop
inc
add
add
jle
sub
mov
repz
add
push
add
mov
decl
cwtl
out
sub
add
jecxz
fwait
mov
call
mov
add
inc
add
pusha
add
mov
add
add
add
in
dec
inc
add
das
inc
add
incl
inc
add
add
push
int3
jl
add
in
sub
jecxz
jle
fwait
xor
ljmp
dec
sbb
movb
add
lds
jb
jmp
add
outsb
lahf
test
mov
cmpsl
add
ds
cmp
add
out
in
xchg
loopne
cmp
add
mov
xlat
pusha
add
call
add
add
hlt
and
cli
or
inc
add
xchg
movl
movsb
add
mov
fldl
add
popa
add
outsb
push
dec
addl
add
sbb
out
or
jae
ljmp
mov
add
add
mov
pop
mov
inc
add
pop
movsl
add
sub
fdivr
das
sahf
and
add
mov
sub
mov
add
jmp
add
add
lret
add
add
add
decl
aaa
addb
repz
xchg
inc
add
lret
xchg
movb
push
inc
add
outsl
jae
call
add
enter
addl
cs
add
loop
add
push
into
mov
and
or
les
ret
add
sub
add
jl
add
sub
jno
lcall
add
imul
ljmp
lock
cmc
push
add
cld
out
xlat
xchg
in
cltd
stos
inc
add
lea
adc
test
dec
ficompl
dec
roll
cmp
and
jmp
add
and
incl
add
data16
add
sbb
into
clc
lds
push
dec
jno
incl
add
add
push
movl
in
arpl
ljmp
stc
inc
add
jl
inc
add
or
movsl
add
lcall
ljmp
push
add
movsb
add
add
emms
mov
xchg
inc
add
iret
sub
out
ret
add
fs
das
jno
decl
add
ljmp
pop
add
call
jmp
call
add
test
jecxz
sub
dec
mov
xchg
in
out
or
add
pop
add
js
int3
mov
test
cltd
add
add
cli
pop
fucom
add
test
cli
insl
inc
add
notb
fimuls
and
decl
push
xchg
mov
add
jns
addb
repnz
xchg
data16
add
lcall
movsl
add
add
mov
add
fldenv
push
add
sbb
dec
xor
xor
add
inc
add
mov
add
pushl
les
add
lcall
cmp
aam
dec
scas
sbb
mov
loope
xchg
add
call
mov
ljmp
lods
inc
add
enter
add
arpl
pushl
add
data16
add
aad
xchg
xor
ljmp
mov
inc
add
add
pushl
fisubrl
add
add
lds
pop
push
add
aad
sub
add
sahf
pop
test
add
test
dec
xor
incl
decl
and
jmp
or
mov
mov
add
ljmp
mov
enter
add
jmp
decl
pop
clc
lahf
cmp
add
add
in
sti
ja
rolb
xor
pushl
jnp
mov
nop
fldenv
cli
jae
incl
add
mov
add
lcall
add
fisttpll
sub
add
add
add
inc
add
pop
add
rolb
dec
and
xchg
push
fildll
cmp
push
mov
dec
das
add
mov
add
jo
decl
cltd
and
ljmp
lock
incl
lcall
xchg
cmp
add
bound
jmp
add
jmp
inc
add
and
ljmp
dec
je
ret
add
mov
add
rol
add
mov
movb
jp
inc
add
andnps
add
ss
and
inc
add
ljmp
mov
decl
aas
push
add
popf
stc
and
adc
pushl
incl
pop
push
add
and
add
addl
mov
cli
sub
jle
add
jmp
lahf
push
mov
xlat
cltd
push
push
aad
xor
stos
pushf
ds
imul
push
add
je
add
pop
xchg
ret
add
cmp
inc
add
cltd
jo
jmp
rolb
cmc
xchg
je
addb
add
lds
sti
loope
sub
add
decl
sub
sbb
aam
cmp
addl
add
xchg
add
jmp
xchg
popf
iret
xchg
xor
call
shrb
cmp
and
movsl
add
daa
add
mov
add
add
call
add
mov
xchg
in
jecxz
and
call
add
fisttpl
mov
mov
add
mov
test
pop
mov
mov
add
push
lret
imul
ljmp
or
sbb
xchg
jae
pushl
mov
in
js
sub
add
mov
add
pop
mov
test
cmp
in
roll
lahf
mov
add
jmp
add
add
ljmp
xchg
ret
add
mov
decl
imulb
add
add
cmp
mov
add
pop
mov
add
mov
lea
cwtl
add
dec
pusha
add
push
mov
incl
add
sbb
push
add
mov
mov
add
movsb
add
push
outsl
addl
xchg
stc
sbb
in
mov
jmp
add
jns
add
mov
add
sbb
add
aaa
add
incl
jmp
ljmp
cli
xchg
pop
in
dec
test
push
xchg
mov
xchg
testb
lahf
popf
ja
in
push
movsl
add
data16
inc
add
loope
xchg
add
jp
fstl
notl
pop
popa
add
inc
add
lods
aaa
mov
add
test
add
add
hlt
mov
add
cli
addl
stc
inc
add
push
add
jge
add
adc
lods
addl
mov
inc
add
lea
inc
add
xchg
pushf
pop
sub
add
add
ljmp
add
pushf
mov
call
std
xchg
push
or
add
ficoml
pop
pop
call
lcall
dec
and
adc
hlt
pop
mov
addb
pushl
mov
mov
add
add
jns
in
xchg
aam
sub
into
pop
add
lock
add
lcall
data16
inc
add
pushl
in
or
loope
out
xor
es
loopne
enter
notb
cs
adc
dec
out
sub
add
add
adc
call
rolb
movl
add
cmpsb
add
add
jmp
add
test
dec
mov
dec
or
dec
mov
les
push
sahf
mov
dec
ret
add
dec
arpl
in
push
add
movl
aas
cmp
add
xchg
fnstcw
decl
or
jnp
dec
pop
inc
add
jg
push
sti
roll
jns
iret
push
inc
add
adc
sahf
out
roll
xlat
xchg
out
jnp
data16
call
dec
addb
jge
dec
dec
scas
out
xor
call
mov
jnp
call
fsincos
popf
movsl
add
das
movsb
add
test
jmp
sahf
in
pop
cwtl
daa
add
rorl
add
add
cmp
out
xchg
cwtl
mov
push
shr
add
add
lcall
adc
decl
adc
incl
add
push
mov
pusha
add
xchg
sub
add
gs
mov
add
inc
add
jbe
loopne
pop
jg
inc
add
pushl
fwait
pop
pushl
inc
add
rolb
mov
add
js
xlat
mov
push
add
mov
mov
add
sbb
dec
mov
cmp
imul
dec
or
pushl
mov
xchg
dec
lret
add
inc
add
aas
int
or
add
add
call
add
fdivs
add
les
je
add
in
mov
adc
pushl
dec
and
ljmp
add
out
cmp
lret
inc
add
sbb
push
dec
and
incl
jmp
ret
add
mov
add
pop
ret
add
add
jb
inc
add
add
jmp
add
repz
add
into
das
push
movsb
add
add
int3
mov
sarl
cmp
add
jno
call
cmp
adc
add
push
cmpsb
add
add
add
incl
push
jnp
add
mov
idivl
add
aam
mov
xor
push
popf
pop
int
add
pushl
out
dec
imul
push
add
ljmp
ss
insl
xchg
mov
aas
in
push
add
icebp
cli
cmpsl
add
call
add
pop
lret
insl
inc
add
insb
icebp
push
add
iret
inc
add
add
lcall
imul
stos
popf
pop
xor
lcall
add
or
and
decl
jg
add
push
movb
add
ds
add
or
inc
add
push
stc
dec
mov
sbb
addb
add
add
shlb
add
cmp
add
call
into
test
add
out
jbe
push
les
dec
ds
push
add
data16
jne
add
ds
inc
add
jg
nop
cmp
add
push
fcoml
addb
jecxz
pop
add
mov
add
mov
sub
add
push
cmpsb
add
sub
nopl
fistpl
inc
add
push
mov
sbb
lcall
out
adc
incl
addr16
out
push
mov
cmp
add
push
and
out
int3
and
call
ljmp
dec
sahf
cli
roll
ss
mov
xor
cmp
add
add
add
pop
add
add
fistl
push
pop
sub
cmc
out
dec
outsb
pop
rolb
add
add
dec
xor
lcall
add
add
mov
add
daa
add
pop
es
add
mov
add
push
fsubp
add
jg
mov
add
test
add
and
jns
add
and
pushl
add
iret
inc
add
pop
dec
std
in
pop
movl
dec
push
or
jge
sti
movl
pop
test
testl
les
dec
out
mov
mov
ss
fistpl
add
cmp
jmp
into
stos
loopne
stos
loopne
addb
add
sahf
imul
xchg
jg
inc
add
leave
movsl
add
lcall
pop
cld
pusha
add
sbb
stos
pop
sub
xchg
sub
int
mov
js
add
push
faddl
add
adc
cld
insl
mov
cmp
addl
sub
add
add
add
fsubrs
and
dec
shll
add
or
add
lock
add
lods
mov
mov
movsb
add
inc
add
call
mov
ljmp
std
fmuls
pushl
xchg
lds
sub
pop
loope
jbe
add
enter
rcr
das
pop
lret
rol
add
shrb
fsubr
inc
add
mov
and
call
lcall
add
in
je
call
add
sub
jnp
pop
add
add
sub
add
fldcw
lock
pop
mov
aad
add
aad
add
call
add
mov
out
aaa
fsubrs
push
xchg
loopne
data16
add
je
add
push
jnp
xor
in
mov
ljmp
pushl
addl
pop
jge
add
in
ja
cmc
dec
jmp
in
pushf
cmc
push
add
xchg
cld
sbb
add
sub
movsl
add
out
mov
add
mov
add
add
roll
xlat
mov
add
int3
std
rolb
mov
mov
add
in
jne
mov
test
mov
incl
add
add
incl
mov
jmp
bound
lcall
mov
enter
cld
int
add
shll
mov
rcrb
sbb
sbb
outsl
pop
movsb
add
std
mov
sub
add
adc
push
add
daa
add
shr
lret
cmp
add
add
iret
mov
mov
out
clc
or
add
and
add
push
add
js
dec
daa
add
incl
addb
and
sub
and
dec
push
dec
popf
shr
push
add
or
addl
lods
cwtl
movl
add
jbe
mov
add
cmpsl
add
jmp
hlt
add
lcall
fstpl
jbe
add
fcompl
ret
roll
add
aad
add
lock
inc
add
pushf
xchg
mov
sbb
push
pop
add
add
inc
add
add
adc
decl
add
push
adc
call
add
pop
mov
xchg
jmp
add
stos
cmp
mov
mov
int3
xchg
push
inc
add
add
call
add
add
out
test
jbe
fsubrs
pop
add
add
lea
cmp
cwtl
pop
incl
movb
add
jae
jmp
decl
mov
add
adc
mov
adc
call
daa
add
les
pop
push
fwait
jne
and
lcall
clc
push
add
xor
decl
dec
lds
dec
jb
push
xor
or
outsb
jge
cmc
adc
call
add
ret
add
test
add
jbe
sub
add
jecxz
roll
add
ret
add
jg
rorb
popa
add
std
roll
add
sub
call
call
add
insb
mov
add
xchg
loopne
sbb
add
ljmp
add
fcmovnb
add
call
into
ja
add
out
cltd
roll
jg
add
fcmovnbe
xlat
scas
pop
push
sub
push
into
push
add
out
jns
add
in
and
mov
int3
into
push
sbb
add
inc
add
popa
add
in
scas
mov
aaa
lret
add
cmp
add
mov
lods
rolb
add
xchg
shll
loope
outsl
mov
add
xchg
push
dec
push
add
sarb
mov
addl
jns
scas
jno
mov
mov
jl
add
sbb
add
add
xchg
rcrb
push
lret
addb
push
or
xor
call
fisttps
add
add
sbb
jb
jmp
sub
mov
add
add
lds
add
into
mov
inc
add
sbb
jne
add
jge
mov
mov
jmp
cli
pop
dec
shl
add
pushf
sbb
add
push
add
pop
add
push
add
add
aam
add
add
cmpsl
add
add
mov
add
outsb
js
cmp
jle
add
loop
adc
jmp
sbb
add
pusha
add
loop
and
fistl
dec
inc
add
add
and
pushl
add
jmp
add
xchg
xchg
mov
sbb
xor
jmp
add
fbld
ljmp
xchg
pop
ss
pushl
add
jg
and
incl
mov
fisubrl
add
out
mov
push
dec
ss
or
push
in
adc
inc
add
cwtl
rorl
adc
incl
mov
ja
add
jecxz
jle
inc
add
lcall
dec
pop
fcomps
jns
addl
fmuls
xchg
lock
jmp
test
add
data16
add
jp
add
rorb
insb
scas
fisubs
inc
add
add
mov
das
sahf
addb
dec
inc
add
jbe
pop
into
xchg
mov
push
inc
add
notb
add
inc
add
iret
incl
js
add
add
sbb
test
cmp
ljmp
test
movsl
add
jmp
dec
inc
add
out
or
call
add
adc
jmp
mov
add
out
roll
xchg
dec
adc
jmp
add
add
ljmp
mov
leave
jae
push
push
divb
call
fistpll
fisubs
dec
pusha
add
xchg
mov
cmpsl
add
add
sbb
ljmp
xor
mov
push
pop
mov
fldcw
push
add
push
imul
or
call
decl
imul
add
cmp
add
in
aas
roll
xor
lcall
add
les
mov
xlat
mov
jns
fsubs
popf
add
call
add
push
and
jmp
cs
ljmp
sub
dec
iret
fwait
hlt
push
add
mov
jmp
cmp
pushf
pop
or
add
cwtl
ds
xor
ljmp
inc
add
call
add
jne
add
xchg
inc
add
add
pop
push
add
ror
pop
pop
loop,pn
js
inc
add
in
sbb
add
std
inc
add
ret
add
inc
add
xor
adc
jle
fists
ret
add
mov
lea
add
test
pop
cmp
add
das
aad
cvtps2pi
jg
xor
add
inc
add
dec
or
add
nop
cmp
push
push
fadds
add
lcall
xchg
call
imul
insl
lahf
and
ljmp
xor
add
push
add
int3
repz
pop
sub
xchg
fsubrs
movb
inc
add
add
xor
call
inc
add
mov
add
inc
add
addl
pop
add
add
fwait
popf
popa
add
pop
and
call
add
mov
add
sbb
xchg
in
call
inc
add
push
nop
add
lea
xor
inc
add
jo
incl
inc
add
imul
dec
ds
add
xchg
aam
or
add
lret
dec
add
or
cld
sub
add
add
add
add
fsts
mov
addr16
ficoml
incl
add
and
in
stos
das
sub
movl
pop
nop
hlt
mov
mov
xor
lcall
add
call
movsl
add
xchg
add
jmp
jno
call
add
sbb
mov
add
mov
fwait
cmpsl
add
add
and
fiaddl
pop
cmpsb
add
mov
mov
jo
call
aaa
test
addl
idiv
mov
add
fwait
out
push
add
mov
incl
jp
add
add
lock
movsl
add
dec
mov
jle
add
add
call
add
mov
push
add
aad
or
add
push
pop
ficomps
stc
outsb
inc
add
test
add
add
ja
push
add
mov
sub
sub
sbb
add
lahf
nop
test
rcll
add
add
addl
dec
mov
pop
out
mov
arpl
out
bound
jmp
dec
add
call
push
add
cmpsl
add
add
xor
lds
cmp
adc
pop
stos
pop
xchg
mov
add
dec
roll
xchg
cmp
add
pushl
add
mov
add
fwait
pop
cli
jo
jmp
add
ret
add
enter
or
add
aas
dec
dec
mov
movsl
add
xor
add
push
add
push
xchg
jmp
add
repnz
roll
add
add
add
ljmp
xchg
xchg
inc
add
sbb
add
test
and
mov
insl
jg
shl
ds
frstor
pushl
adc
fisubs
add
mulb
pop
add
add
bound
decl
cmp
sub
outsb
out
lock
push
add
daa
add
add
jg
add
push
je
mov
mov
cltd
xchg
scas
std
mov
cltd
and
ljmp
push
add
stos
push
roll
add
cld
push
and
jmp
ret
mov
push
adc
pushl
add
inc
add
cmc
add
xchg
and
fisubrs
add
stos
lcall
lcall
cmpsl
add
rorl
add
and
jmp
inc
add
cmp
in
mov
add
add
into
or
pushf
fildll
shrl
pushf
cmp
add
sbb
add
add
data16
mov
push
push
icebp
cmpsb
add
addb
popf
jl
push
cli
cmp
add
inc
add
add
mov
add
jle
cs
arpl
ljmp
adc
nop
arpl
pushl
cmp
xlat
inc
add
mov
cmc
jmp
push
add
push
add
jae
push
xchg
mov
add
decl
loop
ja
and
add
adc
pushl
dec
mov
dec
aaa
jb
ljmp
add
add
lahf
add
cli
adc
add
push
add
ret
add
add
add
xchg
sbb
push
fdiv
push
push
mov
add
jae
jmp
add
push
in
mov
scas
add
call
aam
add
scas
adc
ljmp
icebp
movl
add
fisttps
clc
xchg
jo
cmp
add
loopne
cmc
pop
push
add
xchg
out
mov
add
add
push
mov
les
mov
add
dec
insb
and
mov
pop
add
push
iret
iret
sbb
add
and
jmp
jbe
add
and
jmp
add
jo
decl
add
std
cmp
lcall
roll
xchg
roll
add
add
decb
addl
mov
ss
inc
add
ret
add
mov
pop
cltd
inc
add
movsl
add
jno
push
lcall
stos
lds
cmp
add
stos
add
push
add
add
add
dec
push
aas
push
add
add
add
dec
xchg
ds
sbb
sbb
mov
in
lahf
aam
add
imul
stos
xchg
mov
imul
cmp
add
loopne
sbb
add
sub
mov
sub
cwtl
adc
pushl
add
in
out
xor
incl
lea
add
xchg
movsl
add
add
add
in
scas
testl
add
add
incl
add
and
addl
dec
lcall
xchg
cld
fimuls
sub
daa
add
pop
add
enter
cwtl
dec
add
jge
mov
ljmp
aaa
int
jl
sbb
mov
or
decl
xor
call
cld
cltd
inc
add
cmp
jo
call
add
cmpsl
add
sti
fiadds
add
scas
jb
incl
dec
imul
lcall
sub
add
movsl
add
add
call
add
jmp
add
test
addl
ljmp
xchg
clc
mov
mov
jmp
add
adc
xor
inc
add
scas
jg
fdivrl
mov
add
fidivl
call
push
add
aad
daa
add
mov
call
add
add
pop
ret
add
pop
pop
cmpsl
add
sub
xor
incl
add
je
add
jmp
add
or
jmp
fsubs
add
add
popa
add
mov
fcoml
add
pop
gs
add
addl
add
aaa
ja
add
dec
adc
ljmp
add
in
cs
je
add
add
cmp
pop
cmpsl
add
out
js
and
inc
add
lahf
int
add
xchg
clc
add
lcall
adc
clc
cmpsb
add
decl
rol
add
incl
add
outsl
rolb
pop
insl
push
xchg
sub
lods
hlt
push
mov
stos
out
nop
fstpt
mov
add
incl
dec
inc
add
add
or
sarb
ficomps
out
sub
in
repz
add
mov
push
popf
inc
add
ljmp
enter
and
ljmp
sti
or
sub
pop
xchg
mov
add
mov
dec
enter
adc
in
pushf
sti
fwait
and
add
mov
roll
jle
add
sbb
daa
add
cmp
jmp
add
jb
incl
push
add
sub
test
mov
shrb
out
fidivl
lcall
add
popa
add
xlat
push
add
push
add
xchg
inc
add
rolb
inc
add
loope
mov
add
std
aaa
jo
decl
in
mov
and
pop
lea
test
outsl
adc
lcall
sub
add
add
add
add
cwtl
mov
xchg
xchg
dec
or
mov
dec
pusha
add
jmp
add
cmpsb
add
bound
clc
push
adc
and
add
testl
dec
sub
add
add
add
fisubl
ljmp
jg
sti
push
add
int3
addl
das
xor
push
add
decl
add
fildl
rolb
add
sub
mov
jmp
jle
add
jne
das
fsubr
inc
add
stos
cmp
add
jmp
lods
cmp
add
mov
add
and
add
adc
mov
stos
outsl
fbld
add
push
add
mov
add
stos
rorl
add
in
std
sbb
jmp
daa
add
add
dec
xchg
pop
mov
add
mov
shrb
arpl
lcall
add
jge
fnstenv
mov
dec
je
lods
add
aas
divl
int
add
dec
in
int
movsl
add
add
add
pop
inc
add
or
add
dec
out
lret
test
jmp
jmp
add
add
xchg
push
add
mov
xor
call
push
push
xchg
and
jmp
clc
adc
mov
mov
mov
add
jo
in
inc
add
ljmp
sbb
pop
inc
add
pushf
addl
insb
mov
add
cli
hlt
imul
shll
mov
add
add
mov
add
jne
imul
cwtl
pop
add
add
mov
lret
jns
jne
ljmp
xchg
insb
mov
add
cmp
and
xor
mov
or
add
mov
jmp
dec
call
add
les
add
dec
inc
add
addl
inc
add
fcmovne
int
push
cmp
xor
incl
add
call
in
mov
cmp
incl
addb
out
fidivrl
xchg
fstp
jg
sub
add
pop
stos
xchg
jl,pn
out
push
add
loopne
mov
dec
test
inc
add
sub
enter
adc
call
stos
add
ljmp
lods
in
imul
pushl
ljmp
pushf
mov
jge
mov
lods
rolb
lcall
jb
call
sti
negb
pop
inc
add
push
sbb
fidivl
call
add
dec
and
mull
jmp
add
out
xchg
cltd
mov
add
xor
add
add
call
add
cmp
loope
or
pop
add
out
jbe
aaa
sbb
movsb
add
add
add
xor
incl
inc
add
cwtl
add
lcall
out
mov
incl
enter
dec
pop
popf
dec
js
adc
push
add
int3
cld
lea
add
mov
and
pushl
icebp
roll
rolb
decl
xor
mov
call
add
clc
cmp
lods
addb
add
add
add
js
add
out
mov
jl
cmpsl
add
mov
dec
jne
add
sbb
add
jp
inc
add
mov
add
pusha
add
fisttpll
push
loope
stc
imul
add
sub
add
add
pop
pop
es
repz
add
mov
add
add
mov
add
jne
dec
lods
inc
add
mov
add
addb
xor
ljmp
add
decl
add
add
pushl
or
add
mov
sbb
fucomi
jb
mov
lahf
lods
loop
leave
add
incl
lcall
add
scas
test
push
add
add
mov
in
push
lcall
mov
lret
jo
pushl
rolb
push
dec
inc
add
hlt
out
or
stc
aaa
push
sub
fsubr
out
sbb
add
test
sub
out
mov
inc
add
push
pop
xchg
in
add
decl
add
and
fistps
pusha
add
roll
add
adc
ljmp
jns
out
cmp
add
push
sbb
cmpsl
add
add
pop
ljmp
decl
jle
add
pop
test
loope
loop
dec
test
rcll
decl
inc
add
addl
add
out
jge
add
stc
sub
push
add
add
mov
and
ljmp
add
add
clc
cmp
add
xchg
dec
add
test
xchg
sahf
jle
add
sub
add
sahf
add
clc
lea
in
dec
adc
cmp
mov
addl
cmp
data16
adc
jmp
add
arpl
jmp
pop
pop
push
xchg
add
incl
cmp
add
sub
popf
syscall
add
fstl
aaa
les
sub
add
hlt
adc
incl
add
lds
ja
inc
add
icebp
xchg
fsts
add
jb
call
aas
add
int
inc
add
mov
push
cli
push
cld
fiaddl
add
adc
out
mov
add
inc
add
or
add
add
incl
add
ja
out
cmp
sbb
add
pop
cmp
or
jl
inc
add
dec
add
ljmp
clc
mov
lods
jge
add
lods
jecxz
fisttpl
lret
xor
pushl
or
add
lods
cmp
sahf
in
loopne
mov
loop
mov
std
int3
cs
add
iret
dec
or
mov
int3
add
insl
movsb
add
add
add
enter
jmp
loope
dec
pushf
adc
test
cmp
sub
pop
dec
add
sbb
pop
xor
incl
jnp
add
jp
mov
dec
mov
mov
mov
add
mov
frstor
stos
cmp
mov
add
cwtl
mov
inc
add
add
pushl
cmp
mov
sub
push
add
push
insl
in
mov
mov
mov
bound
decl
data16
call
mov
add
aas
and
or
add
popf
sarl
nop
xchg
shl
inc
add
cmpsb
add
cli
out
ret
add
sub
mov
lcall
sbb
add
sti
push
jb
cmp
mov
call
add
lods
loopne
jns
add
adc
push
add
pop
ret
add
ljmp
pop
insl
cs
repz
add
add
add
ret
loop
xchg
insl
jmp
mov
xor
lcall
loope
in
lahf
fcomp
push
add
pop
imul
shl
loope
leave
bound
mov
add
lret
imul
popa
add
mov
cld
cmp
jp
fistl
loop
cmp
lahf
adc
inc
add
jmp
pushl
in
mov
add
inc
add
add
insb
xchg
push
add
sub
and
decl
add
dec
add
cmp
sti
das
icebp
inc
add
aam
test
add
call
dec
lahf
roll
add
add
add
mov
add
inc
add
jo
ljmp
mov
lds
arpl
call
lcall
or
call
add
incl
mov
add
pushl
mov
lcall
dec
pop
rorl
incl
decl
add
add
sub
add
add
add
sub
add
add
sbb
add
add
sbb
decl
rolb
out
mov
mov
fadds
add
inc
add
pushf
mov
mov
mov
add
stc
mov
lock
add
stos
push
jmp
roll
dec
rolb
jbe
scas
ret
add
add
ds
addb
mov
add
push
add
and
xlat
out
jmp
add
call
mov
add
add
xchg
pop
add
add
jp
pop
add
add
add
mov
add
add
sbb
call
push
lods
add
std
jb
pushl
add
pusha
add
in
fsubrl
pop
cli
cmpsb
add
iret
mov
sar
aad
push
add
sbb
jge
push
add
lcall
fldenv
add
movsl
add
arpl
ljmp
add
mov
ret
xor
call
lods
inc
add
jmp
add
add
add
adc
pushl
add
pop
ljmp
rolb
jg
inc
add
add
add
sti
fcmovnu
push
imul
push
pop
and
call
sbb
arpl
push
pop
add
add
lcall
mov
push
add
add
mov
lods
std
or
hlt
rolb
add
mov
push
add
in
mov
add
sbb
loop
dec
and
cmp
add
push
add
pushl
add
mov
loopne
push
inc
add
jmp
lahf
fstpt
add
add
and
add
mov
call
call
and
add
add
cmp
lret
aad
add
add
jp
push
addl
add
outsb
addb
xchg
mov
jae
jmp
or
add
cld
ss
mov
add
pop
push
add
sub
pop
std
jge
add
jmp
add
or
jns
pop
aad
lock
ss
mov
add
test
fstl
add
pop
add
adc
leave
leave
mov
add
add
jmp
incl
add
adc
push
xchg
addb
arpl
jmp
ljmp
jmp
add
jmp
add
ret
add
add
dec
add
stc
push
add
or
add
xchg
push
lret
xor
jmp
add
mov
add
mov
pop
cmpsb
add
ja
add
cwtl
js
dec
jb
pushl
dec
lea
mov
mov
fdivs
cmpsl
add
add
data16
mov
test
jmp
mov
add
mov
call
pop
dec
mov
xchg
lret
mov
ja
xchg
das
dec
insl
bound
pushl
lcall
ficompl
xor
call
add
test
fmulp
call
fstpl
xchg
aaa
or
pop
sahf
repnz
add
roll
pushl
add
add
incl
add
incl
mov
notl
popf
clc
data16
jns
xchg
and
stc
jmp
add
imul
push
add
decl
pop
out
pop
add
pop
dec
repz
pop
test
sbb
inc
add
sbb
add
add
mov
rolb
add
dec
cld
cmpsl
add
jge
add
call
std
inc
add
int3
cmp
push
imul
test
lahf
loop
in
mov
sub
add
int3
enter
dec
sti
sbb
or
or
daa
add
cld
sahf
dec
xchg
rcll
add
xor
incl
addl
and
pop
mov
stos
xchg
pusha
add
jp
add
cmp
cmp
add
leave
push
repz
sbb
push
ret
mov
adc
incl
rolb
dec
rolb
add
or
jae
jmp
jp
add
add
push
dec
test
add
in
pop
sub
xchg
scas
xchg
xchg
xor
jmp
xor
call
decl
xchg
out
lahf
xor
cmp
out
fldlg2
xor
call
and
pushl
adc
stc
or
add
mov
add
cmpsl
add
dec
xchg
pop
push
mov
pop
test
cli
arpl
out
int3
es
dec
not
and
incl
pop
mov
addl
add
xchg
mov
das
pop
in
enter
add
cltd
sbb
mov
out
std
js
sub
incl
xor
fwait
and
std
dec
js
out
test
add
add
add
ljmp
add
fidivs
incl
add
xchg
cmp
pop
aas
das
add
call
jg
add
adc
jmp
add
data16
add
add
mov
add
ficoms
stos
mov
add
mov
jbe
jg
and
add
jmp
add
inc
add
daa
add
dec
out
ret
add
xchg
enter
add
test
sbb
add
adc
pushl
adc
lcall
lret
add
mov
aas
outsb
xchg
in
push
add
aaa
stos
hlt
arpl
dec
pop
fs
add
mov
pop
xchg
mov
movsl
add
inc
add
add
add
or
add
lds
stos
fimull
xchg
daa
add
std
fcomip
push
or
add
or
mov
add
jmp
outsl
or
add
add
decl
add
dec
jo
decl
mov
inc
add
je
sub
jnp
push
jg,pt
sbb
in
out
push
call
fiadds
lcall
fcomip
pop
movl
or
loop
adc
call
sbb
jle
add
cmp
pop
mov
frstor
add
rolb
push
pop
sbb
pop
test
loopne
movl
add
inc
add
add
xchg
lret
and
ljmp
outsl
adc
call
add
mov
inc
add
ret
imul
add
add
push
int
pop
movl
xor
incl
fbld
add
lea
imul
add
and
lcall
push
cli
mov
cs
lock
jmp
stc
and
dec
push
add
xchg
data16
inc
add
pop
xor
add
roll
cmp
adc
pushl
pushl
push
in
in
jbe
add
stos
lret
outsl
es
add
xor
jmp
add
add
decl
ss
add
je
es
add
add
jl
mov
add
mov
inc
add
mov
es
dec
hlt
psraw
add
inc
add
jmp
or
aad
sbb
fs
xlat
pop
outsl
stc
addb
stos
mov
std
lods
cmp
add
lret
add
dec
mov
scas
and
fidivs
pushl
add
push
add
enter
add
fcomp
pop
insb
sub
pop
push
les
nop
std
rolb
add
xchg
cmc
test
aas
fs
mov
add
mov
add
imul
fistl
lcall
pop
or
add
loop
inc
add
leave
mov
add
stc
movb
imul
and
pushl
lcall
les
sub
pop
sbb
pushl
call
lahf
outsb
into
xchg
addl
cmp
add
mov
mov
pop
clc
scas
les
leave
xchg
mov
fdivr
dec
add
and
insb
adc
add
or
addb
adc
fisttpll
lods
mov
je
in
mov
movb
sbb
lcall
pop
add
incl
mov
mov
pushl
push
gs
lds
ss
pop
addb
addl
add
add
jns
les
rolb
add
add
or
add
add
incl
push
gs
add
add
mov
and
incl
dec
pushf
sbb
sub
rclb
sahf
pop
dec
and
adc
incl
add
add
xor
ljmp
and
movsb
add
fwait
addl
xchg
push
add
mov
cli
lea
add
mov
xlat
mov
add
cwtl
jle
add
ljmp
push
mov
icebp
int3
and
lcall
push
aas
or
movb
inc
add
add
sub
mov
add
mov
das
push
add
fimull
adc
mov
insb
into
data16
enter
mov
pop
repnz
roll
add
and
jmp
mov
xor
cli
les
xchg
mov
jae
jmp
add
add
mov
add
insl
and
call
add
push
add
mov
add
add
cli
and
call
add
lcall
jmp
add
mov
mov
push
add
cld
xchg
add
call
sbb
or
lock
add
rol
add
xor
jne
fsubrs
jge
add
sarb
add
fisubrs
add
scas
addb
addb
jmp
add
roll
fdivs
push
clc
cltd
inc
add
pop
add
inc
add
push
jmp
add
lds
mov
sub
cmp
sahf
lcall
add
pop
and
incl
xor
mov
mov
cs
loope
test
incl
inc
add
incl
lds
lods
push
les
cmp
add
add
dec
jno
call
add
jecxz
int
loopne
lret
push
push
mov
mov
add
in
aaa
adc
call
add
jno
ljmp
pop
add
lcall
add
repnz
mov
movl
or
sbb
call
or
add
mov
jbe
fldenv
repnz
int
add
add
pop
cld
xor
inc
add
add
or
add
jmp
rcll
add
arpl
lcall
addb
gs
rcll
jmp
fsubp
add
add
mov
push
popa
add
dec
mov
add
jbe
add
add
imul
jecxz
fldenv
lret
add
sti
repz
xor
lcall
data16
jmp
and
incl
call
pop
pop
sbb
test
mov
add
xor
inc
add
dec
jl
xor
std
add
add
jb
call
add
insl
jge
push
inc
add
adc
decl
or
roll
add
push
stos
cmp
and
jmp
mov
mov
sub
int3
inc
add
add
cmp
pop
aam
sub
add
push
add
add
jno
inc
add
cmp
fst
pusha
add
mov
add
dec
mov
js
add
xchg
xlat
sbb
add
xor
dec
scas
pop
lods
mov
popa
add
test
into
push
and
ds
cmpsb
add
cld
adc
add
gs
popf
stc
push
inc
add
out
xchg
cs
or
add
inc
add
loop
xlat
cld
add
adc
imul
add
or
rolb
pop
xlat
xor
inc
add
add
push
add
add
add
sbb
dec
leave
movsl
add
add
xchg
cmpsl
add
add
lods
out
sub
incl
add
dec
pop
bound
jmp
fstps
add
mov
or
add
in
mov
arpl
ljmp
pop
clc
push
cwtl
push
cwtl
popf
daa
add
or
cld
ss
pop
and
add
mov
mov
decl
dec
cmp
int3
aad
add
add
jl
lret
jp
add
ljmp
pop
inc
add
inc
add
mov
rcrl
cmc
ficoml
xchg
ljmp
jbe
push
scas
mov
pop
jae
jmp
add
add
sub
popf
aam
inc
add
add
ljmp
jbe
fidivs
lret
add
add
imul
leave
mov
lcall
add
xor
call
scas
or
scas
stc
xchg
sub
mov
add
stos
mov
insl
data16
mov
add
add
xor
ljmp
fwait
push
cli
dec
xor
jmp
cld
lsl
jmp
add
add
mov
lcall
dec
push
add
je
movl
cmp
add
lock
pop
dec
or
add
add
lcall
sbb
add
adc
pushl
add
inc
add
les
push
add
outsb
add
ljmp
add
add
cld
mov
sbb
cmp
stos
cmp
addl
push
add
gs
add
add
add
add
add
add
call
mov
add
arpl
cmp
inc
add
push
add
cmp
jmp
add
cs
scas
push
mov
push
add
movsb
add
add
fdivs
add
inc
add
decl
addb
add
and
pop
int
add
inc
add
add
cltd
scas
xchg
cltd
insl
mov
add
inc
add
data16
mov
dec
out
push
add
jae
call
loopne
mov
adc
call
add
stc
pusha
add
out
jl
fisubl
add
pop
add
mov
add
mov
mov
push
add
inc
add
je
addl
add
mov
ret
adc
incl
clc
adc
decl
mov
frstor
add
enter
call
out
adc
ljmp
out
and
decl
add
add
std
icebp
out
xor
jmp
add
cmp
add
mov
je
add
mov
add
jmp
add
std
jae
ljmp
mov
jl
add
inc
add
je
add
add
call
jg
add
pushl
jns
add
pminsw
pop
in
dec
adc
incl
mov
add
popf
push
and
pushl
dec
add
ljmp
mov
in
outsb
insb
adc
push
fistpl
xor
decl
das
push
lea
outsb
imul
push
jle
lret
add
cs
add
sbb
and
ljmp
adc
decl
movsl
add
add
add
std
push
jecxz
das
sti
inc
add
ljmp
add
call
jmp
add
sub
add
jmp
mov
add
add
dec
or
add
pushl
in
stc
cwtl
rcrb
sbb
add
add
inc
add
pop
mov
add
jnp
add
shll
jecxz
hlt
sbb
mov
std
aaa
sub
call
lcall
or
cmp
add
stc
mov
jns
add
add
dec
add
ljmp
lock
push
js
fwait
or
and
add
popf
sub
out
addb
adc
aas
mov
test
daa
add
rcrb
sahf
adc
incl
addb
jno
decl
add
loop
loop
or
cli
sub
jno
ljmp
enter
call
dec
mov
add
lods
faddp
add
pusha
add
cltd
jmp
add
lock
add
jmp
add
mov
add
adc
mov
lahf
mov
xchg
fsubl
ljmp
jbe
add
data16
jmp
add
call
add
jae
ljmp
sarb
lret
outsb
dec
arpl
decl
xchg
push
add
int
sti
add
jb
lcall
ret
add
add
add
rorl
cli
out
roll
lock
add
add
insb
sub
cmp
aaa
sbb
pop
nop
ret
add
out
stos
xchg
mov
repnz
inc
add
add
fiadds
bound
lcall
add
push
xchg
stos
fimull
aam
add
jmp
add
push
add
jnp
lcall
sbb
out
call
push
das
pop
inc
add
mov
mov
addr16
add
xor
lcall
lea
insl
lret
pop
imul
xor
jmp
add
dec
xlat
push
add
iret
pop
mov
sbb
add
popa
add
cld
mov
in
popf
lock
inc
add
mov
add
mull
push
add
call
add
xlat
and
movsb
add
add
add
push
pop
add
or
incl
add
jge
xor
mov
roll
add
mov
add
das
filds
add
push
add
shll
incl
xor
in
lods
cmp
sahf
jns
add
mov
addl
sarb
stc
add
lcall
mov
add
loopne
pop
xchg
dec
cmp
bound
ljmp
add
dec
and
lcall
add
loope
enter
add
mov
imul
mov
pushf
lods
int
test
lahf
dec
jb
jmp
add
add
push
add
sbb
ljmp
dec
and
pushl
add
jg
cmp
cli
push
jle
add
mov
mov
mov
adc
push
pushl
pop
mov
add
sub
add
mov
jp
or
js
add
les
movsl
add
xchg
add
pushl
int3
cmp
fucomip
adc
decl
je
add
sbb
add
add
and
jmp
add
push
add
pop
add
sub
sbb
add
pushf
lods
push
idivb
and
ret
add
add
dec
mov
aaa
imul
incl
add
add
jmp
add
movsb
add
pushl
jmp
dec
jb
pushl
add
incb
push
mov
imul
pop
shlb
cmp
repz
icebp
xchg
and
incl
aam
add
add
ljmp
ljmp
add
sub
xchg
jg
addl
push
test
jmp
lods
popa
add
loopne
pop
xor
mov
dec
daa
add
sub
lret
addl
or
add
add
decl
add
or
dec
cmp
add
scas
cld
rorb
add
call
dec
adc
lcall
xchg
rcrl
cmc
sub
jmp
mov
pushl
dec
and
pop
pop
out
fmull
ja
add
pop
addl
add
fimull
sub
cmpsb
add
add
inc
add
add
or
add
pop
xchg
arpl
jmp
add
cmp
xor
in
cmpsb
add
loop
incl
fistl
ljmp
call
mov
add
lcall
cltd
ret
add
pop
cmp
mov
adc
lcall
pushl
in
mov
ds
dec
push
add
mov
add
cmp
xchg
imul
test
jo
inc
add
dec
push
add
mov
dec
das
pop
dec
push
bound
lcall
add
sbb
shll
add
ss
das
enter
add
fidivl
rcrl
add
dec
enter
or
popa
add
popa
add
xchg
mov
ds
xor
lcall
call
cli
scas
fdivrs
add
pop
adc
pushl
jg
add
jp
fsubp
add
lods
pop
jl
add
cmp
pushl
lcall
add
shrb
add
mov
pop
and
add
divb
pushl
test
scas
xlat
cmp
lahf
xchg
mov
clc
fisttpll
ds
add
adc
and
ljmp
aaa
mov
mov
xchg
xor
ljmp
pop
or
nop
imul
sub
stc
xor
inc
add
ljmp
xor
lcall
add
aam
cs
and
incl
sub
dec
xchg
cmp
mov
mov
and
call
or
fnsave
pop
xor
push
pop
into
call
loopne
and
jmp
popa
add
and
leave
icebp
xchg
adc
clc
or
add
pop
sbb
xchg
inc
add
push
popa
add
sar
mov
add
and
ljmp
sbb
hlt
roll
bnd
push
or
add
fcoml
pushl
push
lods
bound
call
add
fstl
pushl
incb
ret
add
and
decl
xchg
das
arpl
sti
insb
jecxz
push
add
decl
jmp
add
add
dec
and
decl
mov
sbb
add
incl
add
icebp
dec
cmc
hlt
or
stos
lahf
push
sbb
dec
loope
xor
dec
dec
adc
push
sbb
lods
or
or
cs
and
jns
jecxz
data16
add
push
pop
mov
sub
aas
dec
dec
cmp
cmp
or
lcall
add
aaa
daa
add
and
movsb
add
mov
add
mov
push
jns
in
lret
or
sub
push
mov
movsb
add
add
add
add
add
sub
decl
and
pop
addl
add
add
lcall
lcall
mov
dec
inc
add
fbstp
jmp
add
and
jmp
add
inc
add
aaa
pop
bound
lcall
fldcw
and
call
add
popf
psubb
cltd
xor
dec
movl
hlt
addb
push
add
jle
stos
test
shlb
dec
pop
jmp
ja
dec
dec
xor
decl
aad
add
into
mov
cmp
call
jmp
inc
add
add
dec
mov
aad
cli
out
xchg
imul
test
fcompp
sbb
pop
icebp
in
inc
add
push
adc
pushl
stos
loopne
and
dec
pop
push
movb
inc
add
mov
push
add
add
lcall
mov
out
adc
decl
inc
add
cmp
fdivr
in
pop
outsl
mov
add
jl
sbb
les
movb
add
add
add
mull
xchg
push
pusha
add
and
mov
adc
xor
call
sub
jmp
xchg
pop
mov
call
lds
shl
dec
popf
add
decl
ret
add
add
fsubr
test
inc
add
ja
cmp
je
jne
aaa
outsb
call
jno
in
xchg
dec
push
add
dec
into
add
incl
push
xchg
cmp
inc
add
lret
out
add
xlat
cltd
adc
lcall
test
add
dec
and
decl
add
add
mov
xchg
add
stc
cmp
add
movb
add
cmp
add
mov
add
add
pop
imul
inc
add
jmp
mov
out
xchg
fsubl
pushl
stos
fistps
pop
xchg
add
mov
inc
add
add
push
add
mov
cmpsl
add
add
mov
add
dec
mov
add
add
shlb
imul
pop
mov
imul
push
add
adc
lcall
daa
add
add
add
cmp
add
push
sti
mov
scas
addb
add
push
xor
jnp
insb
rolb
add
adc
xchg
mov
ret
add
sub
xchg
jbe
add
xchg
push
jmp
add
icebp
out
jge
cmp
mov
jno
decl
popf
mov
add
test
sub
add
sbb
and
push
ds
mov
add
xchg
push
add
loope
out
mov
addb
mov
add
add
jmp
or
ljmp
enter
mov
xor
lcall
test
cmp
loop
sbb
test
mov
add
cmp
imul
incl
nop
dec
mov
repz
mov
add
jmp
jmp
add
das
pop
ss
add
sbb
sahf
cmpsb
add
add
mov
add
mov
jno
inc
add
ret
add
addb
inc
add
fldl
push
popf
dec
ret
add
push
add
mov
repz
fisubl
add
ljmp
cmpsb
add
daa
add
movsl
add
add
add
out
mov
add
and
inc
add
xchg
mov
jl
inc
add
sbb
inc
add
cmp
add
das
push
dec
daa
add
lcall
jo
decl
and
jp
lds
pop
push
fiaddl
incl
add
add
stos
jne
inc
add
push
test
sub
mov
mov
sub
add
mov
int3
iret
in
test
push
pop
out
addl
push
leave
pop
xchg
cmpsl
add
push
mov
add
pop
xchg
mov
xchg
mov
add
into
jb
js
add
sahf
lret
xchg
imul
jle
add
cmc
xchg
sbb
ljmp
pop
or
aad
add
cs
in
fistl
mov
imul
sub
pmullw
sub
add
dec
in
cltd
mov
bound
pushl
mov
cld
jns
cld
icebp
rorl
add
stc
mov
add
out
mov
add
call
add
add
call
add
dec
aam
add
sub
fisubl
add
add
ljmp
popa
add
cmp
jge
pop
and
push
mov
xlat
jmp
incl
add
inc
add
add
stos
fdivrl
out
jo
jmp
ljmp
addl
int
push
add
out
pop
push
add
jbe
into
pushf
xor
dec
jbe
dec
test
xchg
dec
lods
jne
mov
ret
add
aas
sbb
xor
add
sub
imul
leave
and
pushl
add
xchg
sbb
add
push
add
ret
ljmp
mov
sti
fcmove
jp
std
xor
jmp
add
pop
scas
aam
inc
add
jbe
xor
call
pop
or
and
decl
push
push
add
push
das
xchg
cmpsl
add
add
mov
mov
add
add
xchg
mov
add
mov
add
clc
repnz
lds
test
ss
sbb
cltd
dec
sbb
adc
pusha
add
add
cltd
add
lcall
add
cmp
push
mov
test
lret
pop
rolb
frstor
call
in
sbb
in
cmp
add
mov
dec
sbb
xor
jmp
add
jnp
add
add
add
xor
jmp
add
call
add
fdivrl
xor
clts
add
add
xor
jmp
cmp
add
mov
fadds
add
xchg
xor
lcall
push
sti
bound
pushl
int3
push
add
icebp
push
add
mov
cltd
adc
decl
nop
mov
lock
jmp
add
and
incl
dec
xor
in
fcmovnb
add
ficoms
add
push
add
or
call
jae
mov
and
jmp
add
adc
jmp
call
add
pop
movsb
add
add
and
std
sub
mov
xchg
dec
mov
loop
cmc
mov
ret
mov
add
hlt
dec
pop
or
jg
add
jle
inc
add
xor
incl
xlat
bound
pushl
jb
jmp
incl
call
add
add
dec
sub
inc
add
movl
push
jg
add
ja
xchg
data16
or
add
cmp
push
adc
jmp
call
in
jl
add
add
loopne
arpl
ljmp
push
jae
pushl
ljmp
add
sbb
add
cmp
stos
sub
cli
mov
clc
push
sub
inc
add
pop
adc
fwait
pop
mov
jmp
add
ss
jbe
jge
push
add
int3
push
add
je
add
xchg
pop
stos
movsl
add
adc
call
pushl
fcoms
insl
mov
inc
add
pop
mov
adc
jmp
add
adc
jmp
incl
add
cmp
mov
jecxz
aaa
mov
add
int3
jae
dec
in
cmp
sbb
add
cmp
repnz
lods
add
add
jp
shll
sbb
fcoms
in
dec
xor
push
addl
add
je
add
mov
add
jmp
add
add
mov
repz
add
pushf
adc
push
rolb
inc
add
mov
call
mov
sub
aam
add
mov
sbb
add
pushl
add
lods
push
inc
add
pop
push
les
pop
mov
aas
and
ljmp
pop
lds
or
addb
cmp
add
xchg
push
lcall
movl
fisttpll
add
aas
sbb
repnz
inc
add
adc
add
mov
fidivrs
ss
or
sub
add
add
leave
cs
test
ss
add
decl
aam
pusha
add
push
add
decl
add
lods
mov
mov
inc
add
fildll
add
js
fildl
dec
out
jecxz
pop
mov
add
insl
addb
mov
pop
aas
lea
aad
lods
fucomi
repz
adc
mov
sbb
add
cld
mov
mov
jl
cld
add
lcall
addb
daa
add
add
jbe
xchg
inc
add
loopne
pop
add
aad
jl
push
imul
mov
add
mov
add
push
inc
add
and
mov
pushl
add
add
incl
decl
add
xchg
leave
sub
fistpl
add
pop
or
sub
add
jle
sar
imulb
scas
cmpsl
add
js
add
leave
cmp
xor
call
jl
add
add
inc
add
dec
bound
push
lahf
cmpsl
add
add
pop
int3
stos
jl
add
mov
add
movl
add
test
add
cli
dec
mov
lret
in
mov
add
xchg
xchg
adc
jmp
or
in
jne
rclb
dec
push
inc
add
mov
add
mov
xchg
push
add
pop
decl
add
test
xchg
dec
cmp
mov
pop
inc
add
or
add
insl
sbb
sahf
push
add
dec
mov
mov
popa
add
xchg
push
stc
dec
and
push
push
add
mov
roll
sbb
push
add
add
test
mov
add
pushf
push
add
call
sub
add
cld
xor
mov
aad
repz
test
dec
leave
in
std
addb
and
call
add
pop
adc
sbb
std
sub
out
mov
add
data16
add
lcall
icebp
int
mov
lcall
add
add
popf
xchg
inc
add
xor
dec
int
jl
add
stc
push
dec
stc
fcomi
jg
add
jo
inc
add
cld
dec
jmp
add
cwtl
push
pushf
jp
and
incl
pop
push
cmp
mov
pop
js
push
add
scas
test
mov
js
add
push
sbb
roll
add
mov
sub
out
or
add
and
decl
xor
lcall
add
je
filds
call
gs
outsb
into
mov
cmpsb
add
loopne
ljmp
cmp
adc
mov
incl
push
add
add
add
mov
cwtl
xor
nop
inc
add
es
mov
add
add
cmp
add
bound
incl
dec
dec
xchg
jg
push
aas
cld
das
mov
dec
imul
add
and
lcall
dec
iret
adc
push
bound
decl
jo
cmp
mov
add
lcall
dec
cmp
add
mov
aas
fsubrl
xchg
cmp
mov
and
inc
add
outsl
cmp
fisttps
dec
lods
addl
mov
fisttps
mov
lcall
roll
pop
pop
sub
add
add
call
aas
sub
xor
lcall
add
pop
add
jge
jg
add
mov
jmp
roll
add
mov
pop
jp
add
sub
fsubs
neg
jb
decl
xor
decl
mov
movsl
add
dec
test
mov
leave
jnp
add
scas
push
hlt
jmp
xor
call
outsl
xor
loop
rolb
xchg
repnz
or
push
js
imul
add
push
stc
inc
add
mov
inc
add
push
add
cmc
icebp
sub
add
add
adc
dec
cmc
cmp
test
arpl
ljmp
xchg
adc
pushl
lahf
shr
cld
pop
mov
je
inc
add
scas
rcrl
or
test
adc
push
addb
lahf
cmp
out
dec
inc
add
aaa
add
mov
add
add
jne
idivl
add
xchg
or
icebp
cld
xor
mov
jns
jl
add
jb
lcall
movl
add
xlat
add
addl
call
add
push
add
inc
add
hlt
push
add
pushf
mov
add
pop
xchg
mov
xchg
mov
ss
in
addb
insb
cmp
pop
mov
movl
notl
push
addl
xchg
fbstp
jno
pushl
push
add
icebp
xlat
mov
push
push
outsl
addl
sbb
mov
sub
add
cs
add
add
add
ljmp
popa
add
fdivrs
out
and
ds
xor
mov
add
dec
int
add
nop
fdivs
jmp
jl
pop
sahf
movsb
add
nop
pop
fcom
sub
push
cmpsl
add
push
jns
push
add
out
and
add
add
cli
fidivrs
sub
addl
into
and
pushl
add
add
cwtl
inc
add
in
fistps
xor
ljmp
sub
add
cmp
jmp
add
mov
and
lcall
clc
xchg
mov
lret
cltd
inc
add
push
mov
jl
add
jne
aaa
ljmp
jnp
adc
incl
add
sub
pop
enter
add
lahf
stos
or
stos
mov
add
sub
cmp
insb
add
or
mov
sbb
add
fidivs
roll
bound
incl
add
dec
int3
sbb
add
dec
adc
call
data16
add
incl
inc
add
add
xchg
sti
in
int3
data16
add
sbb
std
int3
cmp
add
sbb
inc
add
mov
mov
cmp
mov
loopne
sahf
in
shlb
add
incl
call
push
arpl
ljmp
jo
call
inc
add
add
add
js
jno
incl
add
dec
cmp
fstpt
add
ljmp
mov
call
add
lret
xchg
push
push
cwtl
mov
cmp
js
add
add
js
lods
inc
add
add
add
dec
pushf
cmp
pop
test
pop
movsl
add
dec
jmp
mov
jp
movsl
add
jb
ljmp
daa
add
lcall
stos
pop
lret
cltd
roll
add
and
jmp
add
push
add
add
ljmp
call
and
incl
test
arpl
ljmp
loop
dec
pusha
add
mov
mov
push
add
decl
and
decl
sbb
ret
pop
stc
add
lcall
dec
cmp
pop
push
sbb
dec
into
inc
add
adc
ljmp
add
add
add
call
add
dec
xchg
outsl
aas
mov
add
add
dec
xor
jmp
call
mov
sbb
imul
and
ret
add
decl
loope
nop
add
mov
add
insl
test
pop
or
fwait
movb
mov
data16
jmp
adc
cmp
add
aad
sbb
lcall
xchg
cmpsb
add
jge
icebp
lret
cwtl
mov
inc
add
ljmp
add
or
add
add
mov
mov
fwait
pop
aas
push
add
push
add
icebp
sub
mov
jno
decl
add
add
add
cmpsl
add
xchg
jmp
xchg
mov
or
add
jae
call
lcall
push
shll
call
add
gs
add
adc
push
cmpsl
add
add
sub
movb
cmp
dec
ljmp
lret
pop
add
into
daa
add
addb
mov
sub
add
cli
add
incl
add
adc
sar
push
lods
popf
stc
clc
xchg
push
add
sub
xchg
js
mov
add
jmp
mov
add
addb
shl
fdivrl
dec
inc
add
sbb
int
add
add
cmp
add
cmp
cmp
add
addb
cmc
mov
add
movsb
add
mov
icebp
sbb
mov
add
fs
adc
jmp
add
in
imull
add
xchg
adc
jmp
add
fstpl
cmp
push
push
add
and
pop
sub
mov
ret
add
add
sbb
sub
or
add
addb
cli
inc
add
add
movsl
add
sbb
inc
add
sub
jmp
clc
pop
add
jne
add
adc
mov
mov
in
bound
jmp
data16
fstl
add
cwtl
jae
decl
jo
call
mov
test
ljmp
nop
decb
ja
or
cltd
ljmp
cmp
inc
add
inc
add
daa
add
in
cmp
test
or
add
adc
pushl
pushl
cltd
sbb
adc
shlb
ljmp
xor
adc
xchg
data16
les
sub
add
push
pop
inc
add
mov
add
inc
add
out
and
incl
cmp
or
fisttpll
ds
sbb
roll
add
incl
lcall
jo
ljmp
mov
dec
mov
sub
add
icebp
add
add
in
movl
fadds
add
mov
sbb
push
popf
cli
push
jl
xor
push
imul
ljmp
add
notb
add
call
test
mov
movsb
add
push
add
int
push
mov
aaa
lea
push
fstpl
mov
push
add
sahf
pop
arpl
push
add
jmp
push
insb
lods
outsb
popf
push
mov
pop
inc
add
ljmp
mov
add
push
fisubs
cmp
add
mov
rcll
lcall
mov
pop
paddq
shr
xor
decl
sbb
or
mov
stos
shrl
imul
sti
dec
push
add
mov
add
add
add
add
out
xor
jmp
add
repnz
dec
mov
xchg
pop
dec
in
loopne
xor
lcall
adc
jns
add
ds
mov
adc
ljmp
or
nop
dec
push
jb
add
inc
add
aam
fdivs
jmp
ljmp
add
daa
add
movsb
add
push
sbb
ljmp
popf
out
add
clc
push
hlt
test
jp
icebp
add
clc
pushf
ret
add
pop
or
add
xor
incl
leave
mov
add
add
decl
and
fcmovb
add
dec
lahf
test
push
ljmp
cmp
lea
incl
repnz
push
push
pop
pushl
ficoms
decl
add
pushl
pop
adc
incl
add
pusha
add
movl
lcall
add
cmp
dec
jnp
sub
inc
add
lcall
jno
call
pushl
nop
mov
jnp
xor
lcall
add
adc
decl
add
test
add
mov
pop
dec
mov
pop
outsl
jl
add
in
jae
jmp
add
arpl
decl
sbb
xchg
mov
add
dec
sbb
dec
sub
xor
ljmp
or
stos
push
sub
add
add
add
shl
add
and
dec
les
and
ljmp
push
int
add
insb
mov
and
dec
jmp
addb
jg
and
jmp
decl
or
cmc
in
in
ja
out
or
roll
add
sahf
xor
mov
add
and
movl
cmp
add
mov
rcrb
pop
movsl
add
fcmove
adc
lcall
sub
inc
add
fmuls
add
out
lea
call
xchg
sbb
add
or
dec
inc
add
sub
decl
in
adc
cmp
movl
add
add
addr16
add
jg
add
daa
add
add
cmp
pop
out
roll
aas
push
add
lock
ror
mov
push
xchg
les
pop
mov
aas
fidivs
add
fistpl
mov
fdivl
add
cmp
or
ss
hlt
xchg
ja
movsl
add
mov
rorb
add
lcall
add
dec
call
je
add
fmuls
addl
add
lea
jmp
add
call
cmp
add
pushl
sbb
cmc
add
cmp
add
push
add
lret
cwtl
pushl
adc
pushl
popf
repnz
lcall
out
aas
xchg
popf
xor
call
add
dec
enter
add
dec
jl
addl
jnp
jp
jbe
adc
cmp
loop
cmpsl
add
add
out
or
add
pushl
xor
add
out
mov
pop
pop
push
add
ljmp
out
dec
pop
jae
call
add
dec
sarb
call
add
fimuls
add
roll
in
out
inc
add
fstpl
push
add
and
dec
aas
cmpsb
add
sbb
clc
mov
add
popf
xchg
xchg
add
mov
out
fdivrl
add
roll
add
movsb
add
fidivs
inc
add
add
movsl
add
add
jo
ljmp
add
add
dec
jmp
add
sbb
addl
add
call
cld
pushf
cmp
add
lcall
ret
add
inc
add
mov
dec
fidivs
add
dec
fists
add
add
decl
pop
dec
push
lcall
call
movb
addb
add
fsubs
loop
inc
add
pop
repz
pop
adc
lcall
les
fldl
xchg
and
outsb
or
xor
pushl
xchg
loop
fmulp
pop
mov
mov
mov
add
sub
xlat
imul
cmc
jae
jnp
add
add
jl
add
pop
test
mov
dec
dec
xor
adc
jmp
ljmp
jg
push
mov
add
fptan
add
add
mov
addb
cmp
inc
add
ljmp
pusha
add
and
lcall
xchg
pop
nop
xor
incl
xchg
pop
shlb
mov
aaa
addb
mov
je
inc
add
incl
mov
add
and
jp
cmc
pop
test
hlt
dec
cmp
add
add
ljmp
jnp
add
jne
xchg
dec
in
clc
push
push
loop
dec
jae
call
xor
dec
lock
out
dec
lods
mov
fsubs
add
addl
jecxz
mov
mov
push
push
add
add
mov
jmp
call
sub
mov
aam
add
sbb
xchg
push
mov
pop
xor
sti
addr16
les
imul
add
cmp
add
ljmp
dec
inc
add
sbb
stc
xlat
lret
shl
add
push
add
and
fimuls
add
pop
mov
jae
ljmp
aad
pop
ss
add
pushl
jle
push
push
dec
in
jbe
add
add
xchg
jbe
add
call
ljmp
add
jnp
mov
push
add
movsl
add
ljmp
incl
push
insb
inc
add
roll
addl
outsl
sub
lods
xchg
jae
cmp
add
add
sahf
push
add
pop
arpl
incl
sti
leave
sub
cmp
jle
rcr
add
and
and
jmp
add
add
and
pushl
repz
add
mov
xor
and
lds
pop
and
call
add
jg
mov
adc
lcall
test
cmc
jle
xor
ljmp
repz
add
and
pushl
test
add
call
imul
movl
fcom
rolb
enter
and
add
aad
fs
movl
add
mov
js
sbb
add
addb
add
and
call
adc
sub
sub
xchg
xor
addb
xchg
in
leave
sahf
jmp
mov
cmc
ret
loop
test
outsl
jb
incl
add
std
cmpsl
add
sub
xchg
sahf
sub
add
jne
add
test
cwtl
data16
ljmp
cmp
call
outsb
inc
add
xchg
inc
add
aam
lds
sbb
arpl
lcall
add
add
mov
les
aas
test
inc
add
ret
add
push
sub
or
add
ljmp
test
enter
dec
cmp
notb
or
dec
test
movsl
add
dec
in
cmpsl
add
fnstcw
mov
aas
cwtl
sti
ljmp
testb
xchg
sbb
dec
sbb
repnz
pop
mov
add
repz
add
jmp
stos
mov
test
out
sub
add
add
add
inc
add
addb
aam
out
sbb
push
add
outsb
jmp
ret
mov
fcoml
add
add
into
pop
addl
inc
add
insb
lahf
jbe
add
aaa
inc
add
stos
xchg
sub
add
arpl
push
mov
outsb
push
aas
and
arpl
pushl
decl
movb
shl
add
mov
add
xor
mov
jo
ljmp
mov
add
dec
mov
pusha
add
push
add
xchg
ret
add
mov
add
add
sub
lds
xchg
mov
add
jle
add
imulb
rolb
add
rolb
add
pushl
js
add
jg
out
mov
loopne
dec
popa
add
lahf
loop
add
add
pop
sbb
pop
roll
add
addl
jnp
add
outsl
pusha
add
lcall
jg
mov
add
loope
mov
mov
xor
lcall
ret
jmp
add
add
dec
pop
hlt
dec
in
fcmovbe
addl
or
sub
add
add
push
clc
into
ret
add
dec
fnstenv
add
dec
loopne
or
jmp
add
ret
add
dec
dec
push
add
or
add
jmp
add
add
jns
sbb
add
add
xor
sbb
add
call
cmp
dec
adc
decl
divb
jmp
add
add
or
dec
shlb
pop
xchg
aad
add
les
fwait
dec
outsb
push
lret
push
add
movsl
add
stos
lea
mov
add
in
push
aas
pop
mov
cmp
push
inc
add
mov
scas
mov
call
ljmp
dec
add
call
add
add
add
jle
add
jmp
clc
dec
mov
add
dec
adc
mov
add
shll
add
movl
inc
add
js
jg
add
add
xchg
push
scas
movsl
add
add
add
add
pop
and
inc
add
jp
pop
sub
add
arpl
pushl
add
lds
sub
add
add
leave
cltd
cmpsl
add
fwait
loop
dec
popa
add
out
emms
inc
add
xchg
fimuls
fnstsw
add
cli
cmp
pop
inc
add
pop
aas
sahf
nop
push
mov
mov
add
pushf
ja
add
add
movsl
add
adc
pushl
and
decl
jbe
stc
cld
jo
call
ljmp
sub
test
insl
dec
adc
data16
fwait
repnz
pushl
add
cmpsl
add
mov
xor
cld
lea
mov
add
inc
add
inc
add
pop
lock
add
add
jmp
and
aas
dec
data16
add
es
sub
mov
mov
mov
call
pop
jmp
das
sub
add
adc
jnp
mov
jno
jmp
mov
repnz
jae
cmp
jmp
cmp
add
addb
push
add
dec
rcrb
enter
loop
dec
adc
jmp
add
jg
xor
jmp
inc
add
pop
adc
call
add
ret
add
add
add
push
mov
mov
test
push
add
int3
jp
add
call
bound
call
add
add
addb
add
repz
mov
dec
and
aas
insb
xor
decl
add
stc
mov
add
popa
add
aaa
jb
decl
addl
mov
fnstenv
add
lret
jae
call
add
in
cmpsb
add
or
rclb
jnp
add
bound
decl
addl
addl
out
rcll
add
add
xor
ljmp
pop
mov
mov
add
xor
incl
ljmp
fadds
add
jbe
cmpsl
add
adc
rolb
fidivrl
dec
addl
ret
add
push
add
js
push
inc
add
xor
jae
call
sub
loopne
addl
and
into
test
das
and
call
decl
jp
test
jecxz
mov
jmp
add
add
int
xor
decl
or
jmp
call
call
ror
and
inc
add
aad
add
xchg
push
add
push
add
cwtl
stc
inc
add
jb
call
add
bound
jmp
add
outsl
push
add
or
scas
mov
inc
add
pop
addl
sub
cmp
xchg
int
int
sub
lret
mov
push
jo
lcall
add
add
add
les
roll
cmp
jb
mov
fucomip
loope
popf
dec
mov
aas
sbb
ljmp
out
mul
add
jmp
mov
aam
add
cmpsl
add
add
add
pushl
add
add
inc
add
add
add
daa
add
cld
je
add
sbb
mov
jmp
add
fcoml
lcall
insb
hlt
stc
fildll
push
push
out
lock
add
int3
or
mov
and
mov
es
rolb
mov
push
out
inc
add
sub
dec
ljmp
add
nop
cwtl
stc
xchg
popa
add
push
dec
inc
add
cmpsl
add
add
aad
scas
mov
add
lods
lcall
sbb
add
je
jb
pushl
add
lods
repz
mov
add
cmp
add
test
mov
jge
add
jge
aam
add
bound
pushl
jmp
decl
xchg
xor
lcall
add
jmp
lods
jle
add
rcr
insb
ljmp
mov
loopne
jecxz
xchg
fwait
inc
add
addb
xor
jo
call
mov
cld
cmp
add
lret
stc
cmp
mov
add
scas
jne
add
mov
jno
mov
sbb
imul
data16
int
add
add
sub
adc
lcall
dec
sbb
or
add
repnz
add
daa
add
lcall
mov
xor
pushf
outsl
mov
add
xchg
test
pop
xchg
dec
jns
cmp
rclb
jle
add
les
out
cmp
add
inc
add
sub
lock
add
pop
fists
pop
movb
addb
stos
xchg
mov
adc
inc
add
mov
add
jge
test
push
add
ret
add
cld
xchg
jne
xchg
les
sub
add
daa
add
aaa
mov
pop
cmp
ret
add
xor
fucompp
out
scas
movl
shr
pop
add
add
call
add
adc
sub
pop
test
pop
add
lcall
mov
dec
scas
fwait
cmp
pop
mov
insl
sahf
into
xchg
xchg
lods
xchg
xor
decl
add
cmp
xchg
mov
add
add
add
or
pop
add
sti
call
sbb
clc
jg
pop
push
add
add
roll
add
mov
call
add
pop
inc
add
sub
jmp
add
addb
xchg
sub
add
int3
xor
push
add
dec
mov
adc
imul
xor
call
push
mov
mov
je
mov
pop
pop
inc
add
push
add
pop
das
cmp
daa
add
add
stc
mov
scas
pop
dec
jne
add
shll
add
aas
sbb
add
pop
pop
fisubrs
jmp
jle
movb
ror
ret
call
dec
into
pop
sub
add
inc
add
lods
enter
and
jg
push
cwtl
inc
add
mov
sbb
out
insb
mov
movsb
add
loope
fisubrs
in
push
xchg
lret
scas
add
pushl
add
inc
add
clc
jne
add
outsb
lcall
iret
push
nop
pushf
or
mov
mov
add
dec
or
add
enter
add
sub
add
xor
decl
ss
movsb
add
lcall
jbe
add
cs
add
lods
mov
int3
or
sbb
add
add
push
dec
pop
add
call
lcall
add
call
add
push
insl
in
pop
cmp
imul
cli
cmp
addb
jbe
add
mov
jnp
aam
dec
pusha
add
loop
xchg
push
add
in
sbb
add
push
or
cmc
movsl
add
das
into
mov
pop
xchg
dec
adc
add
add
mov
add
push
lock
jecxz
add
add
push
add
inc
add
add
xchg
mov
add
ds
addl
jno
decl
rcrl
and
pushl
sahf
mov
test
popf
leave
and
out
pop
sub
or
add
xor
push
or
lcall
and
xor
jmp
pushl
out
roll
xchg
jae
call
add
xchg
jbe
add
aas
add
add
lcall
add
add
sub
jns
decl
add
movb
add
dec
mov
push
add
sahf
xor
sbb
addb
loope,pn
movsb
add
ret
jle
add
add
incl
push
push
jg
mov
enter
pop
add
mov
inc
add
sbb
aaa
outsl
out
pusha
add
flds
jecxz
mov
sub
add
cmp
add
mov
adc
fadd
add
add
loope
lods
xor
lcall
jp
outsb
imul
jg
mov
arpl
call
xchg
pushf
jne
add
add
jnp
add
push
mov
add
cmp
addl
lret
cmp
xor
jmp
incl
add
add
jns
add
sbb
cmp
jns
push
dec
adc
add
ret
add
pop
sahf
mov
mov
in
addl
adc
pushl
out
xchg
repz
pushl
add
imul
adc
mov
add
pop
addl
add
nop
xlat
push
dec
cmp
mov
pusha
add
sahf
scas
and
jmp
add
add
xlat
add
call
jb
inc
add
addl
add
push
and
inc
add
cmp
add
xchg
cltd
mov
xchg
fwait
dec
push
loope
lahf
jne
sub
lods
mov
je
mov
dec
addb
lods
adc
inc
add
and
lcall
sbb
pop
pop
push
cmc
cmp
rol
add
add
hlt
sub
enter
hlt
push
mov
add
test
testb
call
rclb
add
pop
pop
in
stc
xchg
mov
pop
mov
outsb
jge
add
or
add
stos
ljmp
adc
incl
xchg
addl
pushl
jp
iret
push
out
xor
pushl
popl
aad
xor
incl
push
movb
add
add
add
xchg
push
add
imul
insl
dec
adc
push
test
add
xchg
jp
clc
cmc
sbb
shlb
xchg
adc
push
adc
call
in
adc
aam
xchg
or
jmp
xor
mov
sbb
int
xlat
cmp
movzwl
add
jmp
add
jb
fcompl
lds
shrl
add
sub
adc
jns
add
decl
fs
mov
add
movl
add
xchg
test
or
jno
call
inc
add
or
push
xlat
sub
and
dec
inc
add
js
dec
add
call
lahf
imul
add
sbb
add
mov
add
repnz
lret
incl
add
add
jle
add
addb
add
test
roll
xchg
cmp
add
faddl
popa
add
cmp
imul
iret
push
add
fadd
add
add
jmp
xor
call
jbe
or
add
or
or
add
cs
fstl
add
decb
pop
xchg
iret
cmc
icebp
jne
pop
inc
add
add
jo
jmp
add
add
mov
add
call
add
add
xor
lcall
jne
int
add
xchg
dec
mov
adc
inc
add
add
pusha
add
dec
push
add
mov
add
add
add
or
sbb
lea
pop
add
roll
test
xor
pushl
add
jbe
add
addl
leave
dec
inc
add
or
out
mov
das
addl
add
leave
add
call
add
fmuls
mov
imulb
adc
addb
add
push
data16
jp
stos
push
add
push
xor
ljmp
mov
adc
sbb
add
and
lcall
mov
jmp
decl
add
sbb
fcmovne
loope
lock
push
add
sbb
add
inc
add
push
enter
cmp
jp
sbb
cmp
pop
cli
cmp
jmp
int
inc
add
in
push
add
mov
test
test
in
inc
add
mul
add
imul
dec
mov
add
loop
add
call
add
sub
add
jl
pop
lods
adc
add
jmp
add
push
push
jno
lcall
xchg
ficomps
decl
out
and
incl
add
jmp
add
stc
xchg
or
dec
mov
mov
add
ja
pop
xlat
mov
lcall
popa
add
out
dec
mov
jle
add
jo
jmp
jg
add
rolb
insb
cmpsl
add
stc
adc
xor
mov
add
mov
ret
test
mov
add
lret
daa
add
add
add
rep
icebp
decb
pusha
add
cli
jno
lcall
mov
lds
fmuls
jmp
push
pop
inc
add
add
stos
push
add
push
cld
push
pop
fstps
int3
mov
lds
ja
add
add
xchg
fisttps
add
ja
adc
dec
popa
add
call
push
out
sub
aas
pushf
mov
xor
js
aad
add
bound
pushl
add
cmp
cli
or
xlat
test
add
jp
cmp
roll
add
add
push
xor
add
popf
loop
call
xchg
cmp
push
into
adc
fidivl
inc
add
mov
rcll
add
ljmp
decl
add
loop
scas
ret
add
mov
add
add
push
add
add
decl
add
mov
aaa
mov
xor
call
aaa
xchg
dec
jg
in
jecxz
aam
out
inc
add
sahf
add
jae
jmp
add
cltd
jg
add
or
in
add
fistl
out
mov
add
add
add
lgs
inc
add
jnp
add
mov
ljmp
add
inc
add
add
cmp
stc
xlat
pop
movb
pusha
add
ds
addb
add
add
in
cmc
daa
add
add
xor
in
jnp
add
add
add
add
jne
add
add
js
aaa
cmc
inc
add
imulb
sbb
imul
movsl
add
mov
loop
je
ss
imul
decl
cmp
add
pop
nop
shrb
insl
test
add
jecxz
call
movb
add
and
jmp
test
imul
aas
jne
xlat
mov
dec
or
add
add
ss
dec
into
jmp
mov
push
add
sbb
out
lret
enter
pop
jbe
aas
test
mov
add
pop
pushf
std
mov
add
and
mov
shlb
add
incl
lods
cmp
cli
lret
add
push
outsb
pop
into
jne
add
push
shlb
inc
add
iret
stos
cmc
hlt
inc
add
jne
add
inc
add
pushf
cmp
mov
out
lahf
into
pop
aad
insb
jns
das
push
add
movsl
add
insl
dec
mov
clc
wrmsr
add
push
jg
add
and
stc
bound
decl
add
or
ljmp
sub
add
add
jmp
daa
add
add
roll
add
daa
add
push
add
adc
lcall
add
jge
add
dec
inc
add
mov
mov
aas
shr
lahf
imul
push
loopne
inc
add
xchg
sbb
add
add
clc
sbb
add
mov
cli
int3
fcompl
inc
add
rorl
xchg
and
decl
movb
pusha
add
hlt
mov
lret
testl
pop
pop
out
adc
call
add
movsb
add
add
lods
jle
jno
inc
add
ss
pushl
sbb
into
mov
cld
jns
add
stos
xor
incl
add
roll
add
scas
cmp
add
call
add
mov
scas
das
inc
add
jg
add
jg
iret
mov
mov
dec
test
mov
decl
repz
inc
add
add
aaa
icebp
shrb
sti
push
add
add
sub
sub
aam
lcall
jl
ffree
add
bound
ljmp
add
out
mov
out
jo
lcall
add
call
xchg
test
sbb
add
push
mov
and
inc
add
add
in
push
js
add
and
call
add
jecxz
lods
idiv
or
and
fidivrl
loopne
jb
incl
or
adc
jmp
add
ficoml
in
rcrl
add
cmp
imul
cmp
add
and
sahf
push
fsubr
leave
xchg
mov
push
add
sbb
outsb
insl
push
add
out
test
ljmp
pop
push
add
mov
push
les
mov
mov
mov
call
pop
sbb
aaa
mov
lcall
shl
push
add
xor
call
test
lods
lahf
xchg
outsl
pop
rorb
add
sbb
add
inc
add
inc
add
jmp
add
add
cmpsl
add
test
repz
aas
clc
inc
add
push
add
mov
add
movl
mov
add
add
add
sti
test
add
sbb
mov
std
jae
incl
movl
push
and
call
ljmp
sahf
and
sub
add
sub
jmp
add
mov
lret
push
jo
lcall
mov
dec
loopne
xchg
ret
xchg
ja
cmp
add
and
lcall
inc
add
add
jae
decl
aas
mov
and
add
add
mov
add
call
add
jo
incl
add
addl
mov
pop
adc
pushl
or
sbb
sti
adc
cmp
icebp
mov
call
decl
add
stos
jno
pushl
dec
sub
or
add
add
ja
inc
add
add
in
push
inc
add
leave
mov
add
add
xchg
mov
or
add
push
add
add
decl
xchg
sub
add
aaa
dec
daa
add
jns
add
fwait
or
data16
aaa
ret
add
jmp
incl
lea
add
pop
enter
push
add
add
and
incl
add
push
outsb
push
mov
mov
aam
sbb
in
dec
repnz
dec
and
jge
roll
dec
and
nop
pop
jp
outsb
je
sti
sti
pusha
add
adc
decl
repnz
test
xor
out
push
jae,pn
dec
cwtl
js
add
jno
ljmp
loop
dec
sti
dec
scas
rcl
lock
cmp
add
sub
add
pushf
testb
xor
decl
and
lcall
or
add
je
lds
jle
add
test
jp
sub
add
jmp
add
or
mov
add
xor
lcall
add
ljmp
mov
add
jmp
add
data16
hlt
test
sbb
mov
enter
add
mov
test
imul
pop
bound
decl
repz
lods
fcoml
add
and
jmp
daa
add
add
jecxz
imul
sbb
add
cmp
add
mov
sbb
sub
aaa
push
add
aam
mov
or
add
fists
add
or
jns
addr16
add
fisubl
add
mov
mov
test
js
call
add
add
add
les
pop
jp
cwtl
in
shrl
add
lcall
add
rcr
mov
jecxz
mov
adc
call
xor
mov
push
lea
add
add
iret
inc
add
mov
add
xchg
mov
arpl
clc
mov
add
ret
add
and
jmp
int
fwait
pop
cmp
jg
add
cmpsl
add
push
dec
fidivrs
add
adc
lcall
jmp
outsl
pop
jecxz
pop
mov
data16
bnd
data16
int
add
jmp
incl
sti
pop
mov
inc
add
test
in
int3
cs
mov
inc
add
pop
dec
icebp
xchg
xchg
imul
jo
aas
push
add
jne
add
push
add
inc
add
xor
cmp
lock
int3
aad
addb
scas
in
jb
call
fsubs
add
xchg
pop
inc
add
sahf
rorl
loopne
mov
movsl
add
mov
lret
push
test
add
fs
or
rolb
push
mov
mov
dec
cld
xor
lcall
movl
dec
call
add
pop
add
and
pop
js
add
loopne
ss
add
inc
add
mov
add
js
push
add
call
add
push
sbb
dec
mov
fcomps
push
adc
jnp
rolb
pop
jne
push
add
xlat
and
pushl
fisttpll
push
sarl
add
enter
call
imul
outsl
jge
sbb
sbb
add
add
inc
add
shll
sub
pop
sub
inc
add
xchg
arpl
jmp
add
mov
add
aad
dec
mov
mov
add
sbb
loope
addb
add
inc
add
neg
loopne
pusha
add
les
and
call
pop
adc
fnstenv
sbb
mov
rorl
add
add
decl
cmpsb
add
mov
scas
sbb
add
rclb
mov
adc
pushl
cmp
js
xchg
ss
push
stos
test
aas
and
mov
add
call
insl
xchg
imul
add
cmp
add
inc
add
les
aad
push
aas
mov
xor
mov
ss
sbb
call
xchg
clc
insl
addl
dec
xchg
add
add
and
incl
xchg
data16
add
dec
test
lock
and
push
and
call
addl
shll
jg
sti
out
mov
xchg
test
movl
add
or
aad
or
ljmp
jnp
icebp
jecxz
push
outsl
movsl
add
inc
add
sub
jne
add
sbb
add
lret
ljmp
sub
xor
call
inc
add
call
aam
sbb
test
add
insb
pop
icebp
mov
int3
sbb
imul
adc
decl
dec
push
or
stos
adc
pop
adc
fildl
sbb
daa
add
add
mov
cmp
add
lcall
cs
std
les
xchg
aas
stc
dec
in
rolb
xchg
dec
mov
add
mov
lcall
decl
dec
sbb
add
lods
add
jmp
add
add
xor
lcall
sub
repz
or
int
sahf
fsubrl
add
mov
add
movsb
add
dec
add
decl
or
es
add
push
test
imul
lods
jg
pop
popl
out
adc
incl
mov
insb
sbb
rolb
add
cmc
rolb
add
mul
add
push
xchg
mov
add
hlt
movl
repz
fstl
incl
add
dec
pusha
add
sbb
mov
out
pop
jmp
mov
add
and
incl
jle
in
adc
pop
xchg
mov
add
decl
movl
aaa
int
add
and
fsubrl
addl
add
push
push
add
repnz
add
jno
incl
add
roll
add
js
iret
movb
mov
add
fdivrs
add
mov
pop
lock
les
inc
add
pop
rolb
notb
setg
or
dec
add
inc
add
ja
popa
add
push
mov
iret
inc
add
out
adc
aad
add
mov
or
call
add
roll
or
xchg
movb
icebp
rolb
add
scas
xchg
xchg
jge
js
jno
lcall
push
xchg
push
push
scas
bound
jmp
dec
into
aas
push
dec
lret
mov
adc
cli
mov
aas
sub
jge
aaa
lcall
cmp
add
inc
add
daa
add
stos
cmovle
add
mov
add
mov
nop
leave
addl
cli
adc
jmp
add
sub
add
lcall
sbb
xchg
sbb
mov
cmp
add
sbb
pusha
add
push
add
jl
add
out
inc
add
add
add
add
pushl
mov
cmp
rolb
add
into
pop
sub
add
dec
imul
cmp
add
push
mov
inc
add
xchg
jmp
add
mov
inc
add
cmp
insl
xor
decl
pop
add
and
decl
lahf
jge
mov
dec
jmp
mov
adc
jmp
out
pop
add
add
pop
outsb
daa
add
adc
fmuls
add
add
fdivp
and
jns
mov
jbe
dec
enter
mov
add
fmul
aaa
sbb
push
add
call
add
mov
push
std
lods
dec
fsubl
ljmp
stos
inc
add
pushf
mov
add
add
or
nop
inc
add
adc
incl
mov
and
fstpl
xchg
lea
dec
test
cmpsl
add
add
push
pop
outsb
or
add
jmp
add
dec
in
add
cmpsb
add
mov
and
dec
xor
call
add
add
add
add
add
scas
enter
clc
popf
sbb
jbe
mov
jno
fcompl
pushf
movsb
add
xchg
nop
movsb
add
lods
addl
add
mov
add
add
out
adc
add
fstl
decl
jp
sti
sahf
xor
cmc
pop
pop
in
jmp
ret
add
insb
adc
ljmp
add
data16
les
call
inc
add
ficoml
decl
test
xor
call
add
xor
decl
add
xchg
roll
add
out
inc
add
jp
loopne
shlb
push
frstor
lcall
fsubr
clc
mov
mov
sbb
in
cmp
loope
jmp
fldenv
in
pop
jmp
bnd
aad
add
add
nop
ret
jne
add
push
add
inc
add
mov
jl
or
inc
add
inc
add
daa
add
addb
out
enter
or
icebp
jp
adc
cmp
cwtl
inc
add
add
lcall
dec
lock
fidivrs
pop
push
dec
mov
addl
call
add
movl
dec
cld
push
addl
shll
add
or
xlat
mov
fidivrl
mov
outsb
jnp
add
jle
xchg
insl
sbb
add
jmp
add
add
add
push
add
movl
fs
add
jge
mov
add
lods
aam
add
pushf
les
shll
add
xchg
test
cmp
inc
add
sbb
sbb
iret
ret
add
stos
pusha
add
shll
add
sti
xor
je
add
push
pop
sbb
rolb
jb
fstpl
lret
cltd
sub
aad
mov
cwtl
lahf
xor
decl
add
out
sub
addl
ss
xchg
inc
add
add
sti
and
pop
sub
mov
add
add
dec
sbb
mov
add
push
nop
out
mov
sub
mov
add
sbb
add
cwtl
in
sbb
add
addl
addl
insb
or
mov
data16
decl
sub
dec
adc
add
or
inc
add
insb
addr16
data16
add
pop
jge
add
cmp
mov
mov
dec
mov
idivl
push
call
stc
xchg
movb
inc
add
add
enter
add
mov
add
int3
cmpsl
add
decl
add
js
inc
add
jne
add
cmpsb
add
lret
or
pop
sbb
ljmp
sbb
xor
dec
imul
into
jmp
out
pop
sbb
mov
pop
mov
int
daa
add
and
shll
sbb
and
ljmp
cmpsb
add
loopne
ret
repnz
cmp
dec
fs
insl
mov
idiv
or
jmp
push
shrl
lods
push
mov
add
adc
ljmp
xor
jmp
data16
pop
repz
add
leave
rolb
adc
incl
test
adc
sti
shlb
decl
or
std
cmp
lret
lret
ss
push
jns
add
add
cmp
sbb
add
or
add
incl
add
sub
push
or
add
fucomi
mov
add
test
hlt
addb
mov
bound
jmp
push
jecxz
push
add
dec
les
fdivrs
add
ljmp
add
xor
lcall
sbb
jnp
int
fidivl
pop
addb
cli
add
ljmp
mov
add
add
jl
movsb
add
popf
stos
sbb
mov
loop
add
inc
add
add
call
add
add
aas
xor
call
dec
repz
lds
xchg
lcall
int
ljmp
add
or
push
add
mov
mov
xor
jmp
imul
aas
icebp
xor
lret
mov
push
jecxz
mov
add
jle
xor
std
xor
ljmp
add
push
add
icebp
mov
push
add
ljmp
dec
mov
iret
ret
add
fisubl
add
int
sahf
sti
mov
rorb
call
xlat
clc
push
jns
aaa
jmp
pop
xchg
add
int3
daa
add
dec
lret
mov
rolb
and
incl
add
mov
loopne
jne
xor
pushl
dec
sti
inc
add
mov
sub
mov
nop
push
add
nop
and
dec
clc
ret
add
add
scas
fwait
ds
stos
push
call
jb
ljmp
add
mov
lcall
add
or
jmp
add
push
roll
inc
add
pop
aas
xchg
das
xor
call
decl
je
test
push
add
add
ljmp
mov
mov
push
pop
sub
add
xor
dec
or
dec
dec
jmp
add
add
add
stos
fstpt
add
dec
dec
xchg
xor
mov
das
cmp
add
repz
pop
sub
jo
jle
add
add
mov
add
mov
decl
stc
cmp
cwtl
cmp
cs
outsb
movsl
add
ficomps
jle
push
popf
movl
inc
add
je
add
add
addl
jbe
addl
add
add
xchg
loopne
fdivrl
std
filds
add
inc
add
ss
in
lret
lea
add
add
xor
ljmp
jo
jmp
test
negl
pushf
test
xchg
sbb
and
call
add
scas
inc
add
decl
lcall
je
add
lods
mov
sti
inc
add
pusha
add
adc
inc
add
ljmp
outsb
aas
pushl
ss
xchg
rclb
inc
add
push
add
movsb
add
mov
jle
add
sbb
add
push
add
mov
add
outsl
cmp
mov
and
call
insl
out
fldt
inc
add
add
adc
pushl
jmp
push
fimull
add
add
add
push
push
inc
add
pop
sub
add
inc
add
pushl
sbb
add
or
add
addl
add
fnstcw
lock
dec
xchg
ss
dec
jmp
in
dec
pusha
add
outsl
movsb
add
int3
leave
jne
cmp
add
dec
inc
add
xor
incl
sti
cmp
add
lea
nop
ret
add
push
xor
repnz
add
insb
ja
pop
mov
or
sub
add
and
mov
add
cmp
add
std
sub
jb
fsubrl
jp
add
in
cld
je
add
add
ja
add
mov
repz
mov
idivl
test
pop
add
incl
add
push
add
cs
addl
hlt
push
mov
stc
lahf
mov
pop
inc
add
cltd
lcall
add
cmp
ljmp
addl
pop
loop
push
xchg
xchg
xchg
and
cmc
adc
pop
shrb
je
mov
test
add
mov
daa
add
call
push
xchg
test
cmp
add
add
dec
shld
xor
add
movsl
add
add
loop
jne
add
push
add
xchg
mov
jl
inc
add
push
add
jae
push
icebp
out
xlat
in
sti
cmp
shlb
sub
pop
pop
or
aaa
lret
add
mov
add
test
mov
sbb
sbb
sahf
xchg
lret
xchg
jg
pushf
scas
data16
movsb
add
into
and
mov
movsl
add
pushf
arpl
fstpt
xchg
add
arpl
call
flds
lcall
push
add
in
jne
cmp
sbb
and
inc
add
pushl
jnp
add
stos
cld
int3
pop
add
loop
daa
add
mov
repnz
add
call
add
add
jge
add
inc
add
jmp
dec
ja
psrlw
add
sbb
add
not
roll
add
in
movsl
add
lahf
in
inc
add
add
xlat
out
lret
in
and
out
sti
and
adc
lcall
xor
cmp
pop
xchg
in
or
add
ss
lcall
jge
sbb
add
in
xor
pushl
ret
add
data16
cmp
inc
add
movsb
add
addb
add
fnstenv
add
cs
add
test
adc
decl
pop
cltd
stc
lahf
jmp
stos
push
pop
and
add
sub
add
or
cmp
push
addl
addb
insl
icebp
xor
add
and
push
je
and
decl
inc
add
pop
inc
add
js
in
cltd
jns
inc
add
imul
add
out
pop
and
push
xor
jne
add
add
dec
mov
add
pop
or
out
jp
aas
jecxz
clc
fisubrs
cli
test
inc
add
add
push
add
cmpsl
add
add
lock
add
jbe
shl
add
push
and
call
loop
jb
jl
lcall
xlat
xchg
aam
mov
adc
decl
push
add
fchs
add
call
mov
pop
ret
add
shr
push
add
out
popf
fisubs
lcall
loope
sti
push
or
add
mul
add
test
add
xor
xchg
fs
add
add
test
popa
add
popf
pop
adc
push
ficompl
jecxz
les
cmp
js
add
mov
add
cmc
xchg
arpl
incl
add
sbb
jmp
inc
add
push
inc
add
enter
add
xchg
les
add
jmp
add
jno
pushl
das
inc
add
add
in
jo
jmp
pop
add
lcall
add
add
jl
mov
pushf
xor
push
add
pop
lock
cmp
mov
add
ljmp
push
add
aas
lahf
nop
sarl
ljmp
add
cli
push
imul
add
add
add
fcomps
add
fisubl
add
aaa
mov
je
add
xor
decl
test
mov
sbb
cmp
dec
mov
roll
add
incl
add
xor
incl
mov
mov
mov
dec
jmp
jmp
rclb
inc
add
add
push
add
mov
adc
ljmp
add
add
pop
jnp
add
dec
fldt
add
jae
decl
incl
aas
xor
mov
push
add
push
icebp
mov
push
push
jmp
stos
aaa
mov
add
pop
scas
jmp
lock
add
out
adc
lcall
data16
add
incl
popf
sbb
add
pushl
xchg
inc
add
jae
ljmp
dec
adc
jmp
add
ja
add
jb
fsubrs
jmp
lret
xchg
mov
int
addl
mov
or
arpl
filds
push
add
pop
js
add
adc
mov
testb
push
bound
incl
call
decl
xchg
sbb
add
xor
incl
mov
push
add
xchg
sub
daa
add
add
mov
popa
add
mov
addb
xchg
lods
or
mov
lcall
xlat
data16
out
test
adc
add
jp
out
lcall
pop
icebp
xchg
pop
mov
add
jmp
add
test
jge
add
xor
push
mov
add
or
or
push
sbb
adc
mov
cmp
push
sub
ficompl
out
lret
or
jp
add
add
sahf
repnz
cmpsb
add
fcmovb
add
push
mov
out
loope
aad
add
add
ljmp
movsb
add
add
addl
xchg
adc
lcall
cli
xor
push
movsl
add
rcl
lds
xor
lcall
lahf
lods
stos
inc
add
mov
push
add
decl
add
lahf
push
imul
mov
add
addl
jecxz
sbb
add
data16
dec
shll
adc
jmp
mov
add
call
mov
add
add
js
adc
jmp
pushl
cwtl
lock
add
sub
add
stos
icebp
loope
mov
adc
add
and
decl
loopne
lock
jmp
fcoms
add
add
icebp
movl
ror
icebp
mov
les
lods
cmp
sub
aam
jb
call
call
lcall
lahf
fnstsw
addl
xor
jl
add
fldenv
add
lods
jg
add
pushl
add
insb
mov
jl
add
pop
daa
add
inc
add
movl
add
mov
xchg
add
add
mov
pop
test
cmpsl
add
add
jmp
xchg
sbb
rclb
add
fdiv
in
in
push
add
das
mov
add
decl
inc
add
add
cmp
adc
call
inc
add
xor
sti
pop
stos
mov
aas
mov
and
xchg
inc
add
popl
add
movb
pop
add
add
add
nop
mov
add
fisttps
sbb
adc
pushl
mov
mov
add
add
xchg
call
jmp
mov
add
push
ja
add
push
jne
xchg
js
lea
enter
cmp
popa
add
or
cmp
ljmp
add
aas
cmpsl
add
jp
icebp
enter
add
mov
and
in
jecxz
mov
add
aaa
insl
fsub
add
scas
mov
sahf
lods
je
jl
adc
jmp
add
cltd
mov
incl
add
xor
jle
aaa
mov
nop
arpl
pushl
xor
rol
add
dec
cmp
add
and
call
push
jl
addb
add
mov
gs
or
loope
or
mov
decl
mov
hlt
repz
jge
add
movsb
add
add
or
lcall
pop
cltd
lret
les
push
in
in
repz
mov
call
call
xchg
in
pop
imulb
push
mov
pop
test
pop
pop
xchg
rolb
add
pop
insb
dec
shlb
add
add
sbb
add
add
dec
addb
add
add
push
push
add
mov
dec
xchg
adc
call
cmc
addb
mov
add
leave
mov
mov
cltd
test
add
mov
dec
out
pushf
jmp
iret
and
ljmp
push
xor
pushl
insb
rcr
dec
lock
jno
pushl
pop
cmp
xchg
mov
jb
pushl
pop
cwtl
pop
push
add
sub
insb
cltd
jg
popa
add
scas
or
add
mov
add
add
in
sub
nop
pop
cmp
mov
adc
mov
add
data16
stos
jg
mov
add
add
popl
lcall
add
sub
ljmp
ret
into
cmc
lahf
bound
decl
add
js
add
insl
xor
jmp
add
inc
add
cmp
sub
and
jge
rclb
incl
pop
mov
dec
insb
mov
add
decl
mov
add
bound
cmp
add
addb
sbb
add
pop
xor
call
add
adc
push
imulb
and
cmp
mov
jmp
add
pop
into
std
ja
sahf
lret
out
loope
imul
add
adc
incl
add
or
add
ret
add
inc
add
xlat
pop
inc
add
pushl
call
mov
push
testb
add
add
push
add
mov
jo
jge
add
push
add
cmp
or
cs
lea
add
fstl
push
fs
mov
add
dec
insb
faddl
pushl
add
xchg
adc
call
add
and
inc
add
call
adc
fdivr
or
mov
jnp
add
add
rdtsc
add
pop
add
stos
addl
sub
add
pushl
add
lret
outsb
push
sbb
in
xor
call
sti
jnp
ds
ss
mov
pusha
add
add
jmp
incl
add
sub
add
inc
add
shll
sti
loope
mov
add
add
xlat
add
fistpll
xchg
jne
add
jle
add
mov
add
call
pop
push
mov
addb
add
outsb
jns
adc
jmp
add
dec
pop
dec
jns
lods
cld
outsb
lock
dec
in
dec
dec
sti
enter
pop
add
add
push
add
xor
cwtl
cmp
mov
add
out
cli
jae
ljmp
jecxz
out
pop
imul
push
add
sahf
and
incl
sub
aad
add
mov
add
push
add
ljmp
inc
add
add
jmp
add
add
cmpsb
add
lcall
mov
xor
cmp
ljmp
add
lcall
scas
test
add
cli
pop
cs
mov
push
cmpsb
add
xchg
inc
add
out
jnp
bound
push
push
push
add
jl
bound
std
dec
pop
add
js
sub
loop
add
add
ficoms
bswap
cli
cwtl
dec
lret
bound
call
mov
aam
add
fidivrs
cmc
and
cli
inc
add
ret
add
outsl
pop
fstpt
mov
add
rorl
mov
ret
add
add
push
pushf
cli
push
add
out
fisubrl
xchg
push
add
mov
xor
pushl
mov
les
mov
add
fidivs
clc
push
add
cld
pushf
ja
jno
incl
jae
fiadds
stos
fnstcw
pop
jmp
out
incb
add
xlat
or
jne
add
xor
jmp
add
aas
push
push
add
jae
ds
clc
scas
test
iret
dec
inc
add
pop
sbb
sbb
add
adc
push
jo
decl
add
jge
add
cmp
add
push
add
pushf
sub
add
adc
call
lcall
ss
sub
cmp
and
decl
cmpsl
add
add
stos
inc
add
adc
incl
sub
sub
xor
dec
cmpsl
add
add
sub
add
lds
lret
inc
add
push
push
push
xor
fadds
add
lcall
push
loope
sbb
mov
add
add
mov
scas
int3
push
leave
cmp
lcall
cld
sbb
repz
add
mov
jecxz
inc
add
mov
roll
push
mov
add
addr16
mov
add
fcoms
add
push
add
dec
shl
push
cmp
push
lahf
dec
sbb
cmp
add
cmp
ja
mov
ljmp
int3
cmp
movsb
add
nop
xchg
mov
add
add
jp
add
and
pushl
add
pop
add
jecxz
movb
push
pop
add
jmp
add
xor
incl
add
pushl
das
leave
fisttpl
inc
add
out
inc
add
js
xchg
movaps
adc
lcall
add
jmp
movl
add
mov
push
mov
inc
add
fldenv
dec
aas
sahf
pop
push
sub
pushl
fidivrl
inc
add
mov
add
add
or
ss
jae
call
add
decl
popa
add
and
incl
jmp
decl
fdivr
pop
jl
sub
push
mov
add
jecxz
outsb
and
call
fwait
inc
add
dec
loop
xchg
inc
add
fwait
gs
pop
inc
add
ljmp
lret
clc
push
and
jmp
add
xchg
arpl
call
mov
add
loopne
mov
arpl
incl
mov
add
call
mov
xchg
addb
mov
and
pop
pshufw
pushf
cmp
int3
hlt
push
xor
jmp
add
stos
push
or
aaa
in
xchg
out
mov
add
icebp
movsl
add
add
rolb
add
mov
xchg
and
dec
xchg
loope
push
or
fsub
add
add
cs
cmp
add
add
jns
cltd
movb
add
aad
add
add
mov
fdivr
loope
add
add
push
add
inc
add
xchg
add
jmp
add
jno
lcall
add
lahf
and
call
incl
add
jnp
xor
inc
add
and
pushl
add
in
sub
in
mov
std
outsb
xchg
jbe
add
push
add
jnp
add
lods
repz
sahf
stc
cmp
decl
mov
xchg
cwtl
push
clc
push
adc
add
add
jne
cli
icebp
mov
xchg
testb
push
pop
and
out
arpl
ljmp
int3
inc
add
in
adc
dec
push
ds
pop
fdivrs
jb
call
imul
mov
sbb
mov
mov
mov
icebp
lcall
add
sub
add
add
movb
fadds
jmp
add
push
rolb
hlt
fiaddl
add
shlb
mov
decl
sbb
add
hlt
add
call
dec
popf
adc
call
add
jo
lcall
add
inc
add
cltd
int
mov
add
add
addb
leave
daa
add
add
lcall
js
add
popf
loope
mov
add
addr16
sbb
lcall
ss
cli
or
call
ljmp
test
daa
add
pushf
popf
xchg
pop
jno
push
adc
pushl
call
out
scas
inc
add
sti
mov
push
aam
xchg
lea
outsb
imull
imul
inc
add
xor
inc
add
add
add
daa
add
dec
out
mov
xor
add
jmp
add
fdivp
loop
movsb
add
jp
add
add
stc
jnp
and
incl
aad
add
mov
xlat
test
xchg
cmpsl
add
add
in
mov
xchg
mov
add
adc
cmp
mov
and
pushl
addb
add
call
dec
jle
jae
jmp
sbb
add
adc
call
add
imul
push
add
test
and
push
xchg
xor
decl
dec
adc
push
in
in
inc
add
add
loop
add
pushl
add
ljmp
or
jmp
sbb
add
scas
sarl
addl
pop
cmp
cmp
sbb
add
test
test
mov
push
cmc
sbb
jae
mov
out
cmp
call
add
cmp
jl
add
push
add
adc
stos
nop
jg
ljmp
lret
fwait
mov
sub
loope
mov
les
and
mov
add
push
add
leave
mov
push
add
lcall
pop
std
aas
in
ret
into
xchg
out
pop
test
outsl
mov
jns
add
inc
add
lret
xchg
pop
movsl
add
lret
add
cld
nop
fcompl
add
xchg
out
jp
add
lret
add
inc
add
push
cmpsl
add
sbb
add
lahf
inc
add
add
js
add
popa
add
add
add
add
push
roll
add
add
dec
outsb
jmp
roll
add
cmpsb
add
add
mov
add
in
adc
add
add
pushl
add
mov
add
sbb
jnp
mov
js
repz
out
pop
jle
mov
sbb
aas
je
aaa
jb
pushl
or
add
sub
mov
add
or
stc
push
pusha
add
mov
cltd
fldt
sarl
stc
fnsave
or
add
add
les
imul
xchg
sti
test
push
add
out
jge
add
push
push
inc
add
scas
or
add
add
pop
sub
push
add
push
das
mov
ss
mov
sbb
adc
pushl
fldl
jns
add
mov
push
ja
add
inc
add
popa
add
pop
add
add
ljmp
jne
add
ret
xchg
mov
add
add
pop
sbb
mov
fiadds
add
insb
or
add
into
mov
addb
outsl
lcall
aas
or
ficoms
add
cmovge
add
data16
or
add
push
add
scas
mov
mov
fidivrs
lret
cld
pop
inc
add
pop
add
nop
pop
sub
ljmp
jecxz
ja
xor
cmp
fsubrs
inc
add
aas
call
pushl
add
sbb
add
cmp
dec
in
mov
push
dec
jbe
add
je
inc
add
add
inc
add
sub
pop
cmpsb
add
pop
sub
add
inc
add
mov
adc
push
push
or
add
push
add
add
call
incl
mov
mov
add
sub
push
call
lcall
nop
sub
call
add
or
and
mov
xor
ljmp
add
pushl
adc
fstp
imul
flds
add
pusha
add
enter
add
mov
jmp
add
data16
out
pushl
add
add
ds
xchg
out
movb
pop
inc
add
xchg
cltd
fldt
xchg
ljmp
cmpsb
add
xchg
mov
add
mov
movsb
add
mov
add
shlb
pushl
decl
fisttpl
mov
pop
mov
add
add
add
cmp
icebp
lret
mov
aaa
pop
cmp
push
enter
cmp
call
dec
sbb
add
mov
add
add
add
popa
add
gs
outsl
js
imulb
add
notl
add
scas
scas
jo
jmp
add
add
mov
stos
addb
pop
mov
add
and
call
and
cli
fdivl
or
add
clc
mov
lahf
pop
inc
add
mov
add
sub
inc
add
pushl
add
or
rorb
ja
and
pushl
fcomps
movsb
add
jne
stc
mov
mov
add
repz
dec
sti
shrl
loop
jbe
add
decl
add
adc
incl
ja
sub
add
sub
dec
fldl
add
dec
loope
dec
push
sahf
es
aas
add
pushl
add
and
lcall
add
ret
add
pop
pop
mov
add
pushl
js
and
inc
add
mov
add
adc
arpl
lcall
cmpsb
add
add
hlt
jbe
add
cwtl
ficompl
push
xchg
dec
or
test
or
xor
ljmp
mov
sub
add
test
add
cli
mov
clc
dec
push
add
repnz
add
negb
clc
test
in
xchg
mov
loopne
dec
ja
cmp
jmp
mov
add
cmp
mov
add
add
jmp
add
inc
add
push
add
movl
das
push
add
arpl
lcall
adc
in
in
in
outsb
lret
lods
inc
add
sub
add
adc
pushl
add
push
outsb
aad
pop
mov
mov
push
push
add
lret
scas
or
add
add
test
add
call
cli
popf
out
aad
enter
jae
incl
add
ds
aaa
and
sbb
adc
jno
incl
add
xor
dec
mov
jnp
inc
add
addb
push
addb
pop
add
cltd
sub
inc
add
les
call
inc
add
add
loopne
jg
add
cs
add
decl
sbb
pop
mov
lret
inc
add
add
add
dec
adc
dec
xchg
adc
ljmp
addb
test
mov
not
sub
popa
add
pop
mov
cmp
fcomp
cltd
mov
stc
jge
add
inc
add
out
repnz
jle,pt
adc
jg
add
sbb
lahf
and
lcall
mov
add
aas
stos
test
rolb
lds
jmp
add
mov
insb
sub
incl
xor
ljmp
add
mov
fldenv
add
dec
lods
sbb
add
pop
mov
movb
add
int
sbb
sub
add
and
call
fnstsw
in
or
add
nop
sbb
add
mov
sbb
mov
inc
add
add
add
add
sub
add
add
ljmp
test
divb
mov
fidivl
scas
shlb
add
pop
dec
leave
mov
add
or
sbb
iret
icebp
fcompl
add
mov
fnsave
and
cmp
add
aaa
lods
jmp
mov
js
sti
jbe
inc
add
sti
xchg
add
decl
stc
outsl
mov
push
add
pop
xchg
aas
inc
add
push
jp
icebp
mov
jnp
add
fsubs
int3
pop
and
jmp
add
popf
xchg
iret
adc
jg
pushf
or
lock
incl
dec
jbe
add
call
dec
loopne
sub
cmp
add
push
repz
add
das
mov
cwtl
mov
rolb
push
movl
dec
lock
add
cmc
sub
adc
ljmp
add
add
jp
add
in
mov
and
call
out
loopne
pusha
add
dec
mov
out
divl
add
sub
add
jnp
xor
add
sbb
add
out
cmp
add
pushl
in
and
lcall
inc
add
add
bound
ljmp
cmpsb
add
xadd
loopne
push
out
test
sub
add
sub
lods
push
jecxz
push
add
xchg
cmp
jno
push
js
add
cmp
sbb
frstor
add
add
dec
lock
sti
movl
cli
in
jne
add
jne
pop
push
int
je
sbb
mov
ds
add
xlat
sbb
mov
cmp
sahf
sbb
ja
mov
add
add
dec
add
ljmp
xor
decl
rclb
jl
push
add
cmpsb
add
add
mov
aam
das
outsb
mov
int
and
decl
sti
xchg
xchg
mov
test
ret
add
pop
jo
jmp
mov
mov
push
add
dec
inc
add
ja
inc
add
sub
xchg
gs
mov
pop
clc
loopne
ljmp
or
add
add
sbb
add
mov
add
pushl
xchg
or
or
bound
lcall
xor
add
add
or
mov
mov
sbb
inc
add
and
sub
aad
addb
leave
js
cmp
add
inc
add
add
xlat
js
jnp
cmp
pushf
imul
addl
add
cmpsb
add
add
add
xor
pushl
push
sahf
rcr
je
add
add
daa
add
testl
xchg
xor
incl
add
call
ret
add
ljmp
add
dec
push
lds
mov
inc
add
dec
or
std
jbe
add
xchg
cmp
add
xlat
xor
pop
dec
push
mov
push
cmpsb
add
add
rolb
addl
leave
bound
incl
data16
add
call
decl
mov
addb
add
int
mov
int
mov
not
pop
cmpsb
add
inc
add
enter
decl
add
movsb
add
add
add
add
and
ljmp
sbb
dec
mov
add
dec
movsb
add
ss
movsl
add
add
or
cwtl
dec
or
mov
lods
push
adc
decl
lock
push
add
popf
push
add
xor
jmp
lcall
add
jp
cld
ret
insl
mov
enter
xchg
cmp
stos
push
pop
lret
add
addr16
push
add
test
jg
add
das
lock
pop
js
add
aaa
in
push
enter
pushl
or
adc
dec
aaa
mov
pop
aas
test
inc
add
imul
add
inc
add
out
and
pop
sbb
call
pushl
add
call
add
mov
shrb
add
mov
out
or
add
jg
jb
call
lcall
iret
adc
jmp
add
dec
repz
add
call
add
data16
sub
and
imul
pop
ds
fildl
lcall
stos
cmp
das
dec
sti
in
add
stos
xchg
lds
push
add
cmp
jmp
add
pop
enter
jl
nop
push
xor
jg
movb
add
dec
and
mov
add
add
in
jnp
add
xchg
and
dec
add
lcall
cmc
into
or
jle
mov
fsubs
mov
add
call
add
sbb
in
ss
jge
add
out
sbb
add
or
lcall
enter
fwait
add
incl
icebp
xchg
ja
fxch
movl
les
ljmp
sbb
lcall
roll
int3
add
add
mov
pushl
add
movsl
add
add
add
jbe
xchg
loop
mov
mov
add
adc
call
jmp
add
jae
decl
cmp
incl
ljmp
popf
push
xchg
stc
lahf
daa
add
addb
add
movsb
add
call
pop
movsb
add
aas
loope
xor
pusha
add
lcall
jmp
call
push
fwait
jg
cmpsb
add
lcall
add
es
inc
add
sbb
add
add
xor
jmp
add
outsl
adc
xlat
mov
add
int
add
add
shrl
inc
add
loop
in
jl
dec
lock
push
add
popa
add
xchg
push
mov
xor
sti
sbb
add
dec
out
rcl
push
jp
add
dec
mov
imul
je
add
xchg
adc
lcall
nop
add
in
sub
outsb
add
mov
add
roll
stc
or
xor
clc
push
add
pop
addl
movb
add
jmp
add
add
loop
inc
add
ljmp
jb
jns
add
dec
bound
decl
cs
out
mov
out
int3
or
iret
out
jg
add
frstor
incl
cmpsb
add
lcall
add
push
add
iret
jb
jmp
add
not
enter
pop
insb
das
and
lcall
push
add
mov
add
cmp
adc
lcall
xchg
mov
add
add
add
mov
xchg
insl
push
dec
ljmp
data16
add
add
or
sub
mov
stos
gs
xor
stos
add
lcall
push
mov
add
test
adc
pushl
es
insl
or
test
dec
leave
push
pop
sahf
scas
movl
add
rolb
int
cltd
fdivl
add
incl
add
add
pushl
cmp
dec
push
add
lret
icebp
pop
enter
mov
rcr
je
add
add
dec
pop
gs
mov
add
out
mov
add
add
lret
or
add
inc
add
jecxz
push
add
xor
incl
mov
add
ljmp
add
inc
add
inc
add
sub
add
pusha
add
adc
scas
stos
adc
xchg
or
sahf
mov
add
test
addb
inc
add
aad
lcall
cld
in
addb
cmc
loopne
mov
add
push
add
add
das
test
fwait
jecxz
pop
sbb
add
leave
fimull
push
lahf
mov
add
jae
add
data16
inc
add
loop
cmp
stc
or
xchg
out
aad
insl
js
xchg
ja
add
pushl
lcall
js
cltd
test
mov
imul
add
mov
sub
ss
call
add
mov
mov
or
add
repz
add
add
out
testb
incl
add
sub
adc
ljmp
add
fcmovu
mov
mov
mov
sbb
mov
inc
add
popf
dec
insl
mov
cmp
arpl
incl
outsb
xchg
and
lcall
dec
out
pop
mov
bnd
icebp
lcall
add
xchg
std
addl
add
and
cmp
jecxz
les
lds
imul
cmp
push
or
sub
movl
cltd
movl
add
outsl
and
lcall
daa
add
or
pop
popf
inc
add
add
decl
mov
addr16
ret
add
add
movl
enter
mov
jb
push
mov
push
mov
sbb
mov
inc
add
sub
mov
mov
dec
and
pushl
push
fisttps
cmpsl
add
les
xchg
jle
add
cmp
pop
movsl
add
add
add
out
iret
adc
mov
inc
add
or
add
add
clc
hlt
jbe
xchg
pop
rcrl
jbe
addl
add
jg
add
sbb
add
test
xor
pop
lret
or
dec
push
mov
in
stc
mov
nop
xchg
sti
xor
decl
lds
sahf
aad
add
adc
stc
cmp
jmp
daa
add
push
push
test
add
js
add
sbb
fidivl
jmp
push
cltd
push
add
jno
call
push
push
repz
call
incl
dec
leave
stos
and
jl
stos
jne
roll
push
lods
xlat
inc
add
test
jo
ljmp
pop
std
jo
jmp
add
push
les
repnz
clc
sbb
xor
jmp
outsl
mov
jg
mov
les
dec
in
sahf
add
dec
dec
mov
int
add
adc
ljmp
movsb
add
mov
cwtl
aam
xchg
addl
xchg
addl
or
test
bound
decl
movsl
add
add
add
add
jb
incl
bound
ljmp
push
add
inc
add
in
test
add
jmp
les
mov
fiadds
add
mov
data16
jmp
cli
push
fnsave
jmp
add
xchg
xor
lcall
add
addl
mov
add
push
add
xchg
pop
add
cmp
mov
add
loope
mov
lret
sub
add
adc
ljmp
addl
pop
out
and
jnp
repz
inc
add
mov
xchg
in
jl
add
ljmp
stos
pusha
add
fcoms
add
dec
cmp
adc
aas
dec
add
sbb
fwait
std
stc
cli
std
clc
push
add
xchg
xchg
sbb
ljmp
push
add
sbb
fld
add
sub
add
movl
add
xchg
push
add
pop
push
les
pop
or
cmpsb
add
sbb
add
das
dec
repnz
lcall
jmp
ljmp
and
out
data16
cmp
add
pop
je
add
push
mov
xor
incl
add
add
negl
adc
incl
fcmovnu
mov
imulb
les
mov
lret
xlat
or
cmpsb
add
xchg
mov
data16
decl
add
addl
add
sub
mov
addl
or
sub
lret
add
push
add
dec
add
lcall
int
fdivrl
jne
adc
mov
sub
add
push
add
add
lea
test
dec
pop
stc
cs
hlt
pop
or
lret
iret
or
add
xor
lock
call
add
pop
test
dec
call
add
addl
mov
pop
fmull
je
pop
rorb
xor
push
jne
negb
cltd
inc
add
add
leave
arpl
ljmp
add
into
test
add
add
push
add
inc
add
xchg
mov
call
cmp
xchg
roll
dec
loop
imul
cmp
add
or
inc
add
cwtl
or
add
adc
decl
cmpsb
add
push
add
loope
fsub
add
cmp
add
xor
jmp
fcoms
call
add
and
jmp
add
out
mov
add
xchg
mov
cltd
jle
xchg
les
mov
std
test
aad
leave
sbb
pop
std
fwait
mov
pop
movsl
add
add
rolb
xchg
add
lcall
add
push
add
and
ds
add
pop
sarl
push
add
cwtl
lret
push
add
xchg
test
ficompl
decl
xchg
sub
jl
int
add
add
jg
push
jecxz
dec
addr16
dec
fsubl
jge
push
add
cmp
popf
xchg
loopne
ret
add
add
icebp
call
int
add
add
add
jge
jle
adc
jmp
push
add
and
rcll
nop
dec
or
push
jae
lcall
mov
xor
jmp
add
add
pop
fsubrl
decb
pop
cmp
add
lcall
push
add
inc
add
mov
mov
add
add
add
decl
inc
add
lret
or
adc
jmp
cltd
inc
add
movsl
add
iret
mov
loope
push
mov
add
mov
xor
ljmp
add
mov
sbb
hlt
das
sahf
fmulp
sub
adc
incl
add
add
lea
outsl
pop
add
xor
call
jmp
add
add
ret
add
outsb
addl
fadds
cwtl
outsb
mov
inc
add
sahf
bound
call
add
jns
int3
inc
add
and
mov
inc
add
xor
add
pop
sbb
mov
add
jo
ljmp
loopne
scas
divb
add
xchg
or
add
fmul
scas
aam
push
jnp
jae
lcall
sub
lret
mov
scas
cltd
mov
out
addr16
into
mov
std
mov
pop
mov
pop
addb
add
add
or
iret
jl
addl
inc
add
mov
mov
lock
jg
add
outsl
std
push
std
notl
add
add
mov
enter
call
int3
add
mov
mov
mov
int
add
xchg
aad
jecxz
and
dec
xacquire
mov
add
aas
setnp
cwtl
pop
mov
add
add
jmp
adc
dec
or
js
lds
rcrb
pop
xor
cli
xchg
in
je
fnstsw
fsts
mov
test
jp
add
fmuls
lret
ljmp
mull
jmp
add
stc
adc
ljmp
int3
test
mov
xchg
cltd
outsb
in
push
add
pusha
add
setb
add
fstps
mov
add
leave
inc
add
bound
dec
adc
cmp
ljmp
mov
cmc
jge
bound
jmp
movsb
add
cwtl
sti
jp
les
hlt
ss
mov
adc
xor
mov
in
xchg
scas
push
pusha
add
adc
jmp
and
add
xor
decl
or
pop
xor
pushl
add
rcll
jmp
ljmp
out
mov
add
movsl
add
xlat
outsl
fcmove
xchg
fists
add
fs
mov
pushf
xlat
jmp
pop
mov
mov
aas
dec
enter
add
out
je
sub
ret
xchg
inc
add
fldt
dec
or
jmp
add
notb
add
lret
fbstp
decl
pop
mov
xor
pushl
add
push
scas
inc
add
incl
pushl
inc
add
pop
roll
add
push
add
add
add
fwait
xchg
sub
xor
incl
add
sbb
add
add
add
and
inc
add
cwtl
lahf
pop
roll
add
push
add
loopne
mov
insl
sub
add
sbb
lock
push
add
ja
mov
bound
pushl
xchg
dec
jno
call
outsl
aas
call
and
dec
repz
jns
add
out
lcall
test
xor
decl
jecxz
movsl
add
add
xor
call
add
adc
add
mov
add
movb
xchg
into
mov
jns
xor
pushl
add
dec
lods
inc
add
sub
pop
pop
nop
data16
add
jl
jmp
decl
add
or
cmp
jbe
sbb
add
lcall
jae
ljmp
loop,pt
or
mov
leave
cmp
push
add
pushf
push
mov
insl
add
fsub
add
pop
jle
add
sub
inc
add
or
add
lret
popa
add
fs
add
push
icebp
dec
sub
in
adc
mov
add
addb
jge
or
add
mov
rclb
addb
inc
add
sub
add
test
jo
decl
adc
call
pushl
jmp
shrb
push
test
notl
sbb
jle
sub
mov
add
mov
add
push
loopne
mov
mov
add
push
add
in
fsts
mov
add
sbb
add
imul
push
or
int3
push
add
jmp
add
ja
cmp
or
add
inc
add
popa
add
insb
aam
add
add
test
loope
cs
incl
fidivrs
sub
add
leave
int
das
xor
jmp
fnstcw
mov
in
test
ljmp
leave
jns
jo
jmp
add
addl
add
in
or
les
rcll
inc
add
add
ljmp
add
add
adc
outsb
int3
add
xchg
and
outsb
pop
aaa
std
xchg
and
dec
push
push
aas
push
add
xor
jl
imul
dec
sahf
lahf
enter
decl
fistps
add
dec
cmp
idivb
add
fisubl
add
loopne
dec
push
add
shll
mov
cmp
mov
add
incl
add
mov
add
add
mov
ljmp
xchg
das
je
add
push
insl
jge
int
loope
jns
sub
add
add
sub
add
out
faddl
hlt
jne
cmpsb
add
call
rolb
add
lods
pop
mov
aad
psubusb
out
push
or
add
jmp
add
mov
nop
adc
call
pushf
sub
in
cmc
push
movl
into
jno
pushl
jmp
add
add
adc
lcall
mov
lret
dec
or
xchg
add
decl
out
in
inc
add
xor
sbb
add
aad
add
pop
popa
add
dec
or
rolb
add
call
ljmp
test
outsl
std
cmpsb
add
push
add
add
pop
mov
dec
cwtl
jbe
mov
addl
and
call
dec
jecxz
fsubp
add
call
add
jb
mov
lret
pop
xchg
repnz
add
addl
add
ljmp
add
add
aas
mov
pop
hlt
xlat
add
dec
fcoms
add
push
mulb
add
add
push
add
sbb
sbb
aas
and
xor
call
sub
add
pop
sub
js
pop
xchg
cmp
movl
mov
pop
pop
jae
pushl
add
lret
outsl
pop
jge
out
int
add
and
jmp
add
incl
add
pop
jnp
add
std
mov
add
mov
jmp
add
add
jnp
pop
add
add
stos
inc
add
aaa
ffree
add
xchg
js
push
jno
jmp
add
movl
sub
add
dec
test
loop
mov
mov
imul
loope
push
add
in
int3
sbb
add
popa
add
lret
or
add
add
sub
les
cmpsb
add
add
pop
jb
incl
call
and
incl
adc
nop
in
lcall
idivl
jns
add
jne
add
pop
fsubr
or
add
xchg
movsb
add
push
and
or
push
push
fwait
and
jns
mov
and
jns
mov
stos
aam
push
add
imull
xchg
test
or
add
repnz
add
stc
sarl
out
cli
sub
pop
bound
decl
xchg
xor
addl
sbb
out
in
xchg
and
add
push
add
int
add
in
mov
mov
push
add
fisubrl
dec
cmpsb
add
add
aas
outsb
incb
mov
fldt
add
aas
into
mov
add
add
add
out
in
mov
and
add
ss
inc
add
incb
ljmp
dec
arpl
decl
add
jle
mov
fsubrl
add
test
add
stos
inc
add
xor
jmp
cmp
pop
mov
add
add
imul
jno
lcall
push
add
xchg
xor
pushl
inc
add
add
add
lahf
loope
cld
add
sti
dec
repz
iret
rolb
add
add
int
jecxz
daa
add
leave
ljmp
incl
cmp
fwait
or
add
add
inc
add
jmp
add
push
add
movb
add
stc
jmp
in
mov
aam
add
aam
mov
add
or
pop
sbb
mov
add
sti
cmp
pop
cmpsl
add
addl
add
add
push
cmc
lods
add
add
add
movl
add
add
or
add
sbb
addb
inc
add
push
scas
movl
and
lods
mov
mov
add
push
add
popf
mov
add
lcall
inc
add
leave
sbb
addl
add
stos
dec
addb
sbb
add
jbe
movsb
add
add
add
add
add
mov
xchg
out
add
inc
add
and
lcall
rorl
add
jmp
add
test
add
add
cmp
mov
out
mov
push
mov
das
or
inc
add
jg
das
js
add
pop
add
inc
add
add
add
jmp
add
add
pusha
add
cwtl
sub
movsl
add
add
push
add
enter
ret
add
call
sbb
mov
add
sarl
sub
add
les
aaa
and
movb
ficomps
pop
fldcw
xchg
lods
cltd
lods
add
ljmp
add
jno
lcall
add
add
xchg
push
pop
add
ljmp
jmp
add
sub
add
test
dec
sbb
dec
movsb
add
mov
int
jg
lahf
into
les
ret
add
push
fcmovnbe
mov
pusha
add
incb
add
inc
add
fdiv
ucomiss
ljmp
movl
aad
add
incl
decl
outsl
in
pushf
test
das
mov
dec
fisttpll
inc
add
add
ljmp
rolb
xor
ljmp
and
in
xchg
outsl
lds
and
pushl
sub
sbb
call
sub
add
push
sbb
mov
inc
add
lds
out
fdivp
lret
jae
jmp
add
out
dec
data16
ljmp
addl
dec
mov
add
imul
or
ds
mov
fbstp
add
cmp
mov
movsb
add
lret
and
or
and
incl
sahf
call
add
add
add
leave
xor
add
fsubrp
les
cwtl
ja
cmpsl
add
jle
add
dec
lea
lret
add
je
add
dec
fwait
pop
pop
jno
jmp
ljmp
nop
mov
cmp
add
stos
fsubl
add
lret
add
aas
roll
mov
ds
add
testb
add
adc
incl
xor
ljmp
sbb
dec
push
add
sti
movl
add
xchg
enter
push
pop
lahf
popa
add
repz
add
pop
sub
jge
add
add
xor
out
rol
add
and
cmp
mov
add
jb
ljmp
sbb
add
and
jmp
incl
jmp
pop
test
add
mov
add
dec
insb
push
add
lods
jge
jle
add
jp
xor
std
icebp
sbb
lods
outsl
pop
push
add
add
dec
lea
es
sbb
mov
inc
add
rolb
addb
insb
out
bound
decl
xor
add
loopne
testl
in
repz
and
ljmp
outsl
pop
inc
add
loopne
enter
push
fwait
lret
pop
pop
mov
mov
mov
jns
and
call
into
mov
add
jns,pt
xor
decb
add
and
jmp
adc
mov
add
add
jb
jmp
iret
into
ds
jg
add
repz
fmull
movsb
add
add
jnp
pusha
add
addb
dec
bound
jmp
popa
add
in
lret
loope
maskmovq
divl
aad
sub
aaa
mov
add
addb
jg
sub
call
xchg
mov
or
add
add
mov
sub
lea
lcall
mul
add
add
xor
inc
add
add
jo
rolb
cli
cmpsl
add
fcmovb
add
xchg
and
cld
pusha
add
fdivrp
out
aas
dec
inc
add
inc
add
bound
jmp
add
mov
ljmp
notl
add
dec
sahf
insb
pop
call
add
cmpsl
add
mov
cmpsl
add
sarl
lods
or
add
mov
outsb
rolb
add
push
sbb
add
test
add
xchg
and
incl
inc
add
xchg
pop
incb
movsl
add
out
xchg
fdivs
add
add
mov
nop
addb
inc
add
jne
xchg
push
add
ljmp
xchg
sbb
stos
scas
sbb
add
call
add
adc
lcall
add
jne
add
add
repnz
adc
call
decl
in
and
ljmp
cmp
jmp
mov
dec
sbb
scas
stc
sti
fldl
testl
xor
add
mov
cmp
add
pushl
push
add
fbstp
notb
add
mov
add
add
push
add
dec
sub
mov
xor
incl
add
pop
push
push
push
fnstcw
aaa
mov
hlt
das
cmc
repz
sub
pop
fst
adc
add
fdivrs
stc
sub
jb
jmp
add
sbb
mov
add
cmp
add
add
lcall
jg
add
add
inc
add
lret
sbb
xor
add
ficomps
repz
sbb
cld
add
xchg
jb
ljmp
dec
lret
dec
cwtl
in
jg
add
add
popf
pop
fimuls
inc
add
cmp
addl
add
aaa
mov
int
add
dec
cmpsl
add
fildl
mov
dec
test
add
int3
shll
add
inc
add
push
jo
mov
add
add
add
call
add
sub
addb
loope
xor
inc
add
je
in
mov
xlat
mov
inc
add
ljmp
addl
je
arpl
decl
adc
call
cmp
enter
iret
xor
decl
xor
lcall
add
jge
jae
incl
add
fistpll
add
movsb
add
fisubs
add
add
inc
add
and
jmp
add
add
add
xchg
sub
add
add
add
outsl
loopne
clc
in
mov
shll
testl
sub
add
add
pop
add
inc
add
add
jecxz
stc
fbld
add
cmp
frstor
jne
sti
das
aam
add
adc
jmp
xor
jmp
out
shrb
cmp
xchg
movsb
add
add
xchg
or
cmpsl
add
stos
xchg
cwtl
popa
add
pusha
add
mov
movsl
add
add
movsb
add
inc
add
stc
dec
movsl
add
push
lock
add
or
add
mov
add
add
add
pushl
inc
add
cmp
shlb
test
add
mov
leave
sub
pavgb
or
add
ret
jno
lcall
add
ds
add
cmp
int
stc
pop
addb
or
add
icebp
inc
add
repnz
adc
lcall
xchg
out
scas
es
adc
add
cmp
ss
push
out
dec
lret
cmpsb
add
sbb
lds
adc
pushl
dec
jl
add
lret
inc
add
aam
call
add
jmp
mov
add
dec
xor
mov
sti
popa
add
mov
mov
add
ds
decl
xchg
dec
jge
add
mov
push
adc
ljmp
xchg
loopne
ja
add
addb
add
aas
push
xchg
jp
mov
sub
fmulp
iret
jl
scas
inc
add
outsb
inc
add
sub
add
call
push
add
pusha
add
sti
movb
enter
add
movl
add
jo
ljmp
and
mov
inc
add
cltd
mov
in
mov
add
nop
shrb
jns
add
push
outsb
mov
add
push
add
nop
sbb
push
add
lea
lcall
movb
movb
shlb
jae
pushl
ljmp
sub
mov
mov
pop
add
add
jle
mov
jmp
cmc
in
mov
mov
add
or
sub
aad
add
push
add
jnp
cwtl
int3
lods
cltd
loope
test
xor
mov
add
push
mov
xor
jmp
add
bound
fstl
push
dec
sub
add
jne
mov
push
add
bound
cmp
add
jmp
add
roll
cmp
pushl
add
xchg
shl
add
mov
add
out
dec
stc
inc
add
fs
and
pop
add
add
add
add
out
imul
int
xchg
inc
add
inc
add
xchg
push
cmc
test
fstps
jl
add
add
add
fcoml
in
mov
add
cmpsl
add
movl
ljmp
add
sbb
popa
add
cli
movb
push
add
pop
mov
in
push
in
addb
arpl
pushl
add
push
lret
movsb
add
call
cli
dec
movl
arpl
decl
clc
mov
lcall
ja
add
int3
daa
add
add
jmp
lea
add
cmpsl
add
add
adc
call
popl
add
dec
or
add
add
add
enter
push
add
sbb
mov
scas
dec
data16
add
inc
add
dec
pusha
add
jb
jle
or
add
imul
pop
in
pop
loop
lea
in
pushf
jge
movl
cmp
rolb
add
cwtl
jge
add
pushf
mov
das
sar
icebp
add
jns
aaa
dec
sub
add
push
mov
cmpsb
add
mov
add
dec
imul
jmp
add
push
add
jne
add
add
mov
add
fldcw
lret
test
ret
add
sbb
add
ret
add
adc
incl
adc
add
jmp
call
add
or
fdivp
ret
add
int
loop
out
xchg
popa
add
les
lock
add
add
add
in
and
popf
and
idivl
stos
mov
push
jmp
sbb
add
add
jle
add
or
scas
shlb
jmp
add
sti
lods
aaa
daa
add
or
xor
jmp
sbb
sub
int
mov
add
mov
xor
incl
add
stos
push
dec
leave
xchg
mov
xor
inc
add
lcall
xchg
imul
add
xchg
push
pop
cmp
add
add
jmp
add
data16
cmp
lcall
mov
pop
dec
and
incl
add
int3
jne
test
addl
mov
dec
loopne
dec
ljmp
push
add
push
in
cwtl
xchg
jle
aad
cmpsb
add
add
movsl
add
add
lds
aaa
scas
sahf
clc
in
lcall
lcall
outsl
xchg
mov
add
jg
mov
mov
sbb
add
add
lds
in
addl
add
jbe
mov
add
adc
pushl
cltd
push
add
dec
push
add
dec
adc
incl
xor
call
push
cmp
xchg
xchg
das
cmp
out
idiv
adc
ljmp
js
addl
add
lcall
and
decl
pop
sbb
inc
add
je
add
sub
pop
mov
add
scas
into
daa
add
dec
cmc
fldt
in
addl
add
add
jmp
add
ljmp
add
mov
add
cmpsb
add
cmp
popf
mov
cmp
leave
movb
sbb
roll
inc
add
sbb
xor
fbld
ljmp
ficoms
lcall
sbb
lcall
xor
push
lret
lds
cmp
cmp
sahf
dec
pop
lods
add
ljmp
adc
incl
push
mov
add
ss
movl
loopne
outsb
push
inc
add
das
pop
pop
inc
add
addl
mov
das
inc
add
mov
add
or
add
inc
add
jae
decl
imul
xor
add
test
add
notb
add
in
xchg
pop
leave
addl
fisttps
cli
cli
push
add
mov
add
inc
add
addl
cld
popf
inc
add
add
incl
ljmp
sti
movntps
add
fdivr
into
lea
add
outsb
dec
lock
mov
inc
add
jmp
add
mov
add
movsb
add
add
mov
xchg
movsb
add
add
mov
add
aam
js
jne
fisubs
jmp
adc
jmp
lock
add
inc
add
jg
idivb
pop
add
add
pop
jns
dec
fists
add
decl
and
mov
cltd
into
or
mov
cmp
int
add
sbb
add
add
decl
imul
out
xchg
jle
add
test
fldcw
dec
int
dec
adc
push
pop
sub
add
decl
test
call
out
enter
add
jp
int
or
and
ficompl
xor
neg
loopne
cld
sub
and
sub
or
add
movsb
add
sbb
cld
int3
xchg
jecxz
or
add
pop
pop
stos
push
xchg
lods
dec
std
popf
xchg
jnp
adc
add
cmp
das
mov
add
lcall
mov
jge
adc
jmp
call
add
inc
add
inc
add
xlat
mov
call
inc
add
nop
add
push
icebp
inc
add
cmpsb
add
movsb
add
mov
ljmp
push
add
xchg
push
add
push
sahf
lahf
inc
add
jb
cmp
adc
cmpsb
add
add
add
mov
adc
add
adc
dec
and
decl
xchg
add
dec
sub
add
faddp
add
add
sbb
add
in
jl
sti
cli
jp
loope
loopne
add
lcall
pop
call
and
pushl
incl
add
addb
cmpsl
add
add
dec
movb
leave
aam
push
add
addl
add
call
pextrw
add
push
aaa
jo
incl
mov
movl
aam
pop
mov
rcrl
in
mov
ljmp
adc
add
ja
add
ljmp
insl
inc
add
inc
add
enter
in
sahf
stc
fldpi
add
or
xchg
inc
add
data16
and
lcall
sbb
push
roll
movb
in
inc
add
dec
mov
add
cmp
decl
movb
add
xchg
inc
add
xchg
stos
jbe
add
out
cmp
imul
pusha
add
fisubrl
lcall
hlt
cmpsl
add
dec
repnz
test
push
add
addl
add
add
pop
adc
or
and
decl
add
or
outsl
cmp
ljmp
push
test
call
inc
add
push
cmpsb
add
outsb
inc
add
repz
scas
sub
stc
ret
add
mov
jne
dec
hlt
push
add
popf
in
mov
out
adc
add
mov
sub
jmp
ljmp
add
push
add
push
std
mov
aam
xlat
fsub
add
incl
scas
addl
add
pusha
add
outsb
jno
cmp
ljmp
mov
mov
mov
push
mov
jo
jmp
add
pop
loop
cmp
mov
popa
add
imul
inc
add
push
add
cli
xor
pushl
pop
jo
push
xchg
negb
jl
add
ss
add
cmp
add
add
cmp
add
decl
cmc
lods
or
add
jl
add
cmpsl
add
adc
decl
fiaddl
clc
pop
ret
add
add
ljmp
movb
or
adc
call
ljmp
add
add
inc
add
jno
decl
cs
mov
test
insl
hlt
sub
stc
rcl
lret
push
add
pop
xor
addb
js
pop
fbstp
jp
add
popf
les
outsl
arpl
decl
add
add
add
add
add
aas
es
out
dec
jno
call
in
lahf
in
mov
addb
add
imul
add
into
in
add
jge
add
lods
push
add
ja
add
add
add
xchg
addl
nop
and
adc
jmp
add
pop
push
xor
ljmp
or
dec
roll
cmp
xlat
xchg
pushl
add
out
in
iret
or
add
rcll
add
mov
add
add
aas
incl
sbb
add
stos
inc
add
mov
jle
add
mov
ror
mov
test
pop
jl
mov
imul
jge
jno
decl
add
iret
xchg
std
leave
pop
aad
add
add
pop
out
addb
add
pushl
jmp
into
xlat
ret
add
pop
add
lcall
call
stos
leave
push
add
xchg
pop
aam
add
lds
adc
pop
lds
movsl
add
add
mov
add
cli
xchg
push
add
push
jle
ss
pop
and
sub
xchg
add
call
mov
clc
push
add
popf
lret
jae
lcall
addl
js
dec
insb
popa
add
rorb
add
incl
add
lds
xchg
std
cmp
in
es
dec
out
rorb
add
push
add
sti
dec
hlt
in
xchg
mov
rorl
fcom
jg
add
ret
add
out
cwtl
mov
jbe
add
je
jg
ret
add
add
outsl
inc
add
lret
daa
add
test
adc
lcall
add
aas
mov
sub
or
lcall
push
fisubrl
rep
stos
and
lcall
and
lcall
mov
add
add
inc
add
popa
add
mov
jp
push
xor
mov
add
das
ret
add
inc
add
ja
into
inc
add
add
jmp
and
ljmp
movsb
add
push
add
cwtl
imul
push
inc
add
jns
add
jle
and
decl
mov
dec
jae
jmp
add
aam
add
dec
cli
imul
jmp
pusha
add
mov
sub
daa
add
cwtl
push
add
or
and
ljmp
mov
dec
push
add
loope
pop
les
pop
cltd
int3
dec
pop
and
ljmp
repz
nop
aad
call
repnz
add
outsl
mov
add
call
inc
add
add
add
ja
mov
jmp
adc
push
add
inc
add
hlt
in
mov
cmp
add
sub
mov
mul
add
inc
add
add
addb
repz
mov
jge
jmp
add
or
hlt
push
add
mov
and
sub
cmp
and
out
hlt
mov
xor
cmp
add
jns
fnstcw
ret
add
add
add
lcall
and
xchg
mov
add
add
stos
lods
or
add
cli
in
sub
add
sub
add
out
loop
mov
call
jmp
push
cmc
jecxz
push
add
lock
push
add
pop
out
aad
mov
add
lret
sub
call
fwait
out
in
adc
lcall
dec
arpl
decl
or
imul
cwtl
ds
xchg
inc
add
cltd
pushf
sbb
add
nop
pop
lds
mov
dec
jo
ljmp
pop
pusha
add
and
ljmp
insb
sub
jmp
jge
and
repnz
add
xor
jmp
add
add
cmp
test
out
xor
incl
add
sbb
add
out
adc
inc
add
lret
mov
in
jae
dec
xchg
mov
jbe
add
jne
loopne
lods
scas
xor
pushl
add
mov
loop
ljmp
add
int
dec
adc
jmp
add
or
fadd
add
movl
cmpsb
add
mov
addl
add
mov
add
daa
add
add
jmp
outsb
inc
add
sub
pop
pushf
push
out
add
cmp
aad
xor
incl
add
push
add
jecxz
mov
stc
testb
pop
inc
add
mov
add
add
add
push
roll
add
mov
adc
add
stos
addl
add
inc
add
int
pop
loopne
jmp
xor
inc
add
mov
movsl
add
add
adc
dec
jo
jnp
add
push
xchg
or
add
xor
ljmp
sub
jl
lcall
xchg
cmc
mov
push
add
lock
add
and
ljmp
mov
shrl
add
mov
add
push
add
add
jl,pt
mov
movb
jno
lcall
cld
add
dec
stos
imul
jg
fldenv
add
outsl
jl
stos
xchg
insl
cltd
iret
jecxz
push
test
inc
add
dec
cmp
iret
cmp
mov
test
pusha
add
xor
ljmp
in
leave
in
mov
add
test
sbb
add
add
js
sar
xchg
addb
add
cmp
pop
test
pop
pop
jne
cs
lods
dec
adc
decl
add
out
lret
incl
jg
add
addl
add
sub
add
add
outsb
add
jmp
decl
movsb
add
add
add
fucom
add
push
fidivl
or
mov
jnp
add
adc
inc
add
jge
imul
stc
jmp
sti
movl
out
sub
xchg
pop
shrb
sub
test
sub
movsb
add
jae
incl
sbb
add
add
test
or
pop
dec
cmp
add
jae
mov
dec
in
add
incl
rolb
pop
addb
pop
int
negb
lods
cli
loop
insl
push
bound
cmp
add
lret
xchg
in
outsb
dec
or
cs
sub
cmp
add
mov
add
incl
hlt
bound
ds
push
add
jno
call
pushl
add
addb
mov
add
xchg
sub
and
frstor
sahf
add
dec
push
add
cmp
scas
mov
push
add
xchg
lret
dec
inc
add
movl
add
push
xchg
pusha
add
lcall
jno
jle
jl
repz
pop
lret
pushf
adc
call
out
mov
add
movsb
add
xchg
por
pushl
push
add
and
push
test
cmp
add
xchg
xor
jmp
add
std
add
cld
pop
add
aad
push
xor
jecxz
jnp
sbb
add
add
add
mov
mov
add
pushl
fstpl
pop
add
ljmp
or
mov
add
adc
test
lea
add
pop
in
xchg
repnz
pop
xchg
inc
add
dec
shrb
outsl
imul
xchg
sbb
add
mov
jne
add
xchg
test
add
fdiv
paddw
outsb
sub
decl
add
mov
jo
call
movl
add
fsubrl
add
add
xchg
das
stc
dec
rolb
lea
decl
adc
pushl
add
fidivs
adc
pushl
add
add
decl
dec
inc
add
call
das
mov
add
sub
add
add
cmc
add
add
xor
xlat
arpl
jmp
call
mov
sub
lods
ljmp
arpl
out
add
decl
xlat
imul
push
add
pop
les
lret
inc
add
add
push
lcall
add
enter
add
xchg
das
push
add
arpl
call
xlat
jns
popf
push
jb
jmp
mov
add
imul
and
or
add
cmpsl
add
add
add
or
mov
add
scas
xchg
and
jmp
arpl
ljmp
xchg
ret
add
jmp
add
cmc
pop
add
clc
pop
adc
loop
rolb
add
mov
jge
bound
jl
mov
dec
lahf
lods
sub
mov
cmpsb
add
add
lcall
add
pop
aaa
cmp
add
mov
jo
pushl
xchg
inc
add
in
lods
ss
addb
add
decl
inc
add
xchg
mov
dec
xchg
bound
stc
mov
sahf
cmp
add
xchg
mov
cmp
adc
xchg
add
call
mov
add
icebp
add
incl
sub
add
mov
or
add
ds
add
jo
call
mov
add
sbb
cli
add
decl
push
int3
push
and
lcall
rolb
repz
inc
add
add
bnd
jnp
in
roll
add
mov
add
xchg
push
add
cmp
add
push
jne
test
addb
xor
les
sub
and
decl
outsl
rolb
sti
push
add
push
sarl
sbb
mov
outsl
js
push
int
xchg
addb
pusha
add
mov
out
jbe
clc
enter
aas
xchg
push
and
out
cmpsl
add
lcall
push
add
xor
ljmp
inc
add
mov
jp
movb
loopne
xchg
jb
dec
pop
fsubl
push
dec
cwtl
sub
out
xchg
pop
add
add
add
push
mov
push
add
mov
leave
movsl
add
fidivs
roll
add
mov
push
add
in
push
pop
sub
xor
dec
cmp
sbb
add
loope
jns
xor
inc
add
add
sbb
mov
pushl
push
jg
add
ljmp
inc
add
or
add
call
add
rolb
mov
add
mov
add
or
sub
xor
roll
add
jmp
add
int
add
pop
pop
lea
xchg
movsb
add
ljmp
lcall
stos
jle
xor
call
loopne
adc
lcall
xor
in
pusha
add
cmc
sbb
push
add
call
lea
xor
lcall
aas
lods
out
mov
sub
push
cmpsl
add
add
call
incl
add
cmp
jle
push
add
adc
push
xor
add
add
push
add
popf
dec
mov
pop
daa
add
ljmp
dec
cld
adc
mov
add
incl
jnp
add
pop
fdivrl
add
stc
jmp
imulb
rcll
stc
insl
sub
icebp
jge
add
add
add
xchg
adc
add
lahf
addb
add
rclb
jnp
add
repnz
bound
or
inc
add
dec
cmp
rolb
pop
mov
mov
jl
or
fcmovnb
add
add
pop
mov
std
mov
xor
pushl
ljmp
add
aaa
add
ss
sti
mov
fsubrl
xchg
in
add
pushl
add
addl
add
sub
push
add
pop
cmp
sbb
stos
mov
adc
push
pop
sbb
add
out
mov
cld
out
hlt
inc
add
or
add
addb
mov
incl
add
xchg
jmp
add
lcall
ret
add
out
fnstenv
out
addb
popf
shrl
jbe
add
add
jae
call
ljmp
popf
cmp
lret
insb
ds
shr
cmpsl
add
mov
out
movsl
add
in
xor
add
ret
add
jns
add
roll
add
hlt
inc
add
jo
dec
sbb
mov
fprem
mov
testb
jb
decl
loop
int3
sbb
add
or
push
push
add
rolb
cmp
bound
inc
add
and
lcall
add
roll
push
xlat
ljmp
push
push
les
mov
add
cmp
add
add
mov
add
sub
dec
cmp
add
cld
aaa
ljmp
fistps
lock
add
and
decl
out
mov
loope
jb
jmp
in
sbb
in
lea
pushl
repnz
test
add
pop
xchg
jae
call
pop
pop
pop
int
xchg
dec
movb
mov
in
mov
pushl
pop
add
jmp
add
dec
sub
push
or
imul
mov
pusha
add
sbb
add
addr16
xor
fisttpl
or
add
aad
cmp
add
hlt
sbb
add
sbb
mov
mov
add
stos
jns
imul
add
xchg
fwait
jecxz
push
rcl
xchg
ficoms
lcall
push
rolb
fmulp
pop
push
add
addb
add
xlat
jo
lcall
add
add
add
mov
mov
inc
add
jo
incl
or
loop
jne
lahf
inc
add
das
ja
jmp
xchg
sub
adc
push
or
mov
mov
xlat
aad
data16
ret
jo
decl
sbb
cs
add
pop
mov
shld
jae
jmp
mov
push
add
inc
add
cmp
rolb
jecxz
xlat
aam
notb
incl
and
decl
dec
int3
and
popa
add
in
sti
and
decl
add
mov
ljmp
fsubs
add
or
cmpsl
add
add
xchg
push
add
or
test
xchg
sbb
stos
add
jnp
dec
jmp
movsb
add
xlat
inc
add
shlb
push
mov
cwtl
movswl
add
dec
cs
inc
add
cli
mov
adc
jns
and
pop
sub
add
add
jge
add
cltd
sbb
add
push
in
lea
cwtl
add
decl
xor
jnp
add
add
sub
or
mov
nop
mov
jne
je
add
add
cmp
popa
add
jp
jo
incl
add
pop
pop
add
decl
call
push
stc
nop
push
jle
pop
dec
test
add
fstpt
stc
add
jo
out
in
pop
fistl
ljmp
cltd
insb
les
cmp
add
add
and
pushl
add
test
inc
add
icebp
mov
or
adc
call
psllw
outsl
sub
movl
adc
add
jge
jle
and
and
test
xor
pushl
add
add
add
sub
add
clc
and
call
jmp
add
fmuls
mov
add
into
inc
add
cmp
xor
mov
decb
daa
add
jns
cmc
stc
dec
repz
inc
add
add
xor
ljmp
jmp
roll
inc
add
add
push
add
mov
and
add
inc
add
cmc
cltd
fwait
adc
decl
inc
add
outsl
mov
add
clc
mov
dec
inc
add
cwtl
lods
adc
call
mov
mov
movl
add
add
aaa
xor
incl
xor
pushl
or
adc
mov
sahf
jmp
stos
push
mov
mov
or
add
pushf
imul
into
pop
popf
sbb
push
inc
add
lcall
test
jne
mov
aaa
cli
sub
addl
test
jge
out
sub
add
add
call
xlat
enter
ljmp
mov
add
inc
add
loop
lods
call
cli
and
add
add
jmp
decl
add
push
mov
add
mov
adc
incl
mov
adc
movsl
add
add
testl
sub
nop
mov
add
add
incl
add
jnp
add
dec
scas
jno
dec
or
sub
testb
scas
aas
pop
lock
adc
push
adc
out
sub
add
add
cltd
pushf
dec
sahf
wbinvd
sbb
add
push
and
lcall
xchg
push
xchg
pop
fldl
add
add
mov
call
add
mov
push
add
out
lret
lds
jne
pop
in
in
jp
add
fwait
jmp
sub
out
icebp
push
jo
lcall
jecxz
sbb
jecxz
nop
mov
stc
idiv
push
jg
mov
or
adc
lcall
mov
negb
call
ficomps
bound
call
repnz
adc
pushl
decl
loop
aad
adc
lcall
add
mov
sbb
add
or
jbe
add
cmp
pushf
test
add
sbb
imul
add
cmpsl
add
addl
fnsave
jmp
add
add
jae
ljmp
cmpsl
add
add
inc
add
loopne
mov
icebp
inc
add
lock
add
imul
add
inc
add
pop
fdivs
add
fistps
jge
jl
add
mov
pop
adc
add
pushl
pushl
imul
and
mov
add
adc
push
cmp
mov
mov
cmp
or
jbe
add
add
incl
sbb
mov
push
mov
sub
add
add
call
lcall
add
jbe
les
test
add
in
push
push
xchg
pop
xlat
xchg
add
push
jle
add
les
notl
add
dec
in
data16
add
add
jbe
inc
add
add
cmp
sub
add
les
in
mov
add
sub
call
imul
dec
das
stos
xchg
scas
mov
add
dec
sub
mov
add
dec
int3
xor
add
mov
out
lret
sub
movb
add
mov
add
fiadds
jge
rcl
and
inc
add
call
out
ficompl
and
test
divb
add
cmp
pop
add
out
addr16
and
push
and
jmp
jg
lcall
push
stc
lods
jo
incl
inc
add
mov
aaa
add
jmp
jns
push
add
ljmp
inc
add
mov
add
push
or
add
add
ljmp
test
popa
add
out
idiv
jg
add
mov
loopne
dec
fmuls
add
cmp
add
incl
aad
xor
xchg
int3
or
xor
jmp
add
add
out
mov
out
cmpsl
add
jno
jmp
add
add
sbb
add
pop
call
add
addb
test
rolb
mov
add
test
add
add
mov
stc
bound
jmp
add
ja
aaa
jbe
add
adc
mov
jl
iret
pop
idivl
inc
add
jle
add
lea
lcall
cmp
call
add
pusha
add
xchg
mov
add
add
dec
iret
jae
pushl
mov
add
into
aad
insl
lods
adc
ljmp
insl
lahf
daa
add
add
das
sbb
cmp
add
add
xchg
pop
add
rolb
pushl
push
lea
add
imul
daa
add
mov
add
add
xchg
loop
or
jb
fmul
stc
clc
mov
add
jae
incl
shlb
decl
push
xchg
or
insb
add
cmp
add
repz
add
decl
call
repz
je
add
add
mov
add
dec
sub
mov
dec
pop
xchg
scas
imul
lcall
and
call
icebp
push
add
lcall
sbb
add
add
pop
pop
cmp
dec
mov
imul
mov
add
shl
add
clc
repz
ljmp
xchg
test
cmp
push
int3
push
ja
aad
and
incl
push
jnp
rorl
cli
and
fidivs
imul
es
mov
sub
xchg
and
lcall
pop
repz
push
add
cmp
add
fsubrs
fcom
pop
mov
add
call
imull
movb
in
dec
repnz
add
cmp
pushl
mov
addl
ss
xchg
shrl
and
dec
imul
add
mov
inc
add
jge
add
enter
push
repnz
inc
add
scas
xor
jmp
add
add
add
xchg
fwait
or
cmpsb
add
test
dec
in
dec
dec
sbb
and
pmaddwd
popf
jnp
mov
ja
imul
add
pop
mov
pushl
pushl
mov
add
jmp
idiv
mov
jle
add
add
sub
cmp
add
out
push
add
into
ret
add
add
push
cwtl
pop
stos
sub
lods
fistpll
lods
mov
ja
sbb
nop
inc
add
mov
adc
push
cs
add
nop
popf
xchg
movsb
add
or
mov
add
xchg
lret
rclb
add
mov
add
dec
cmp
xchg
or
inc
add
sub
mov
add
sbb
sub
mov
add
mov
push
movsl
add
pusha
add
xchg
xor
call
jnp
add
jl
add
push
add
add
jmp
scas
jg
out
fwait
sub
add
pop
xor
inc
add
into
cmp
cmpsl
add
add
xchg
out
ds
add
out
fsubrl
mov
add
add
stos
sbb
xchg
clc
in
sub
add
add
test
sbb
add
add
push
add
xor
pushl
cmp
lahf
dec
test
dec
mov
pop
loope
cmp
ret
add
xchg
mov
movsb
add
add
xchg
sub
ja
add
push
aad
add
ficoml
add
jb
lcall
popf
push
fmulp
push
jb
lcall
add
cmp
inc
add
out
jns
add
sub
and
jmp
add
jg
add
pop
adc
call
fwait
pusha
add
push
pop
inc
add
jo
jmp
add
xor
mov
jae
jmp
jmp
mov
xchg
mov
mov
jmp
mov
add
xor
push
and
call
inc
add
or
add
add
push
fsubs
test
cmc
mov
add
add
jg
add
addl
int
xor
ljmp
movsb
add
add
add
lcall
popf
out
xchg
mov
adc
xlat
shrb
fwait
cltd
jecxz
xor
ljmp
add
call
add
dec
cltd
mov
pushl
add
cwtl
mov
pushf
pushf
sub
add
leave
mov
add
add
mov
mov
add
add
incl
add
es
pop
clc
pop
fildl
mov
dec
pop
nop
push
clc
push
cwtl
test
popa
add
and
decl
rolb
ljmp
add
fdivrs
add
ljmp
mov
and
push
mov
add
add
mov
xor
push
addl
add
xchg
jg
jp
pop
pop
cwtl
std
dec
pop
nop
fs
addb
sahf
addl
lcall
out
mov
or
add
incl
jmp
incl
add
or
add
mov
add
push
fstps
add
decl
add
aaa
lcall
popa
add
sahf
mov
add
lods
jne
repz
and
push
push
cmpsb
add
jp
jns
xchg
fdivrp
push
jg
add
pop
adc
pushl
pushl
lods
das
xor
add
jp
fisubrl
enter
sbb
sbb
add
mov
roll
cmp
add
lret
mov
add
fsubrl
inc
add
push
lret
add
aaa
push
and
incl
add
mov
push
mov
add
or
test
add
and
xchg
clc
frstor
or
mov
add
dec
push
xchg
mov
sub
xchg
mov
jp
movl
xchg
mov
push
jns
ja
add
cmp
add
add
inc
add
xor
pushl
mov
cmp
mov
add
mov
inc
add
fistps
jg
add
pop
fnstcw
out
xchg
push
mov
sub
pop
add
jmp
std
cmp
aas
stos
push
add
inc
add
inc
add
cmc
and
lcall
ja
ljmp
cmc
xchg
test
cld
mov
nop
data16
movb
add
hlt
inc
add
add
decl
or
add
mov
add
sub
add
outsb
bound
call
add
enter
pop
jbe
mov
add
add
and
cmc
test
incl
int3
cmpsb
add
mov
mov
jns
mov
fisttpll
cmp
movsb
add
aad
data16
repnz
clc
mov
decl
jo
mov
jecxz
fadds
ja
mov
add
call
xor
enter
das
mov
ljmp
jbe
add
lods
add
xor
std
rcr
addl
call
imul
add
pop
mov
or
lods
test
jno
inc
add
imul
adc
ljmp
and
ljmp
mov
addl
add
outsl
das
fdivs
lcall
sbb
add
mov
adc
incl
jp
add
mov
cmp
jecxz
in
xchg
or
add
out
loope
or
ret
add
data16
or
scas
mov
push
aas
arpl
mov
sub
jae
call
push
add
mov
xor
pushl
add
and
incl
test
shrl
call
sbb
add
scas
pop
and
decl
add
loope
pop
cli
out
lea
and
add
push
loope
sub
aad
add
into
sbb
lcall
inc
add
icebp
jns
add
icebp
imul
sahf
cld
ds
add
test
add
add
insb
addb
popf
cwtl
stos
push
movl
add
ss
jns
add
bound
call
add
sub
add
cmp
add
sub
add
mov
push
add
in
arpl
dec
addb
add
push
add
clc
push
add
movsl
add
add
jge
add
scas
add
lcall
adc
call
add
bound
jmp
test
push
sub
add
lcall
adc
decl
and
incl
cmp
adc
push
nop
or
bound
incl
outsb
add
insb
xor
jmp
call
add
scas
das
outsb
inc
add
out
femms
outsl
insb
mov
arpl
ljmp
test
add
add
xor
sti
push
or
int
roll
pop
daa
add
cli
out
insl
addb
add
add
or
lret
call
push
xchg
pop
les
add
decl
jns
insl
push
add
mov
xchg
xlat
adc
decl
add
jecxz
push
inc
add
or
add
add
push
add
pop
bound
fdivrs
dec
lods
lahf
xchg
in
insl
mov
hlt
pusha
add
inc
add
adc
and
mov
lods
mov
add
xor
incl
xchg
xor
cmp
lcall
add
push
addl
jl
inc
add
or
fsubrl
iret
and
ljmp
push
jl
shll
aas
add
lcall
sub
pop
push
add
aaa
fcompl
in
insb
inc
add
jns
add
mov
mov
sub
add
sub
arpl
in
shll
call
sub
decl
cmp
rcr
or
std
clc
lret
es
add
lcall
stos
loop
nop
dec
out
out
pop
add
ljmp
mov
mov
enter
arpl
decl
incl
call
cs
add
mov
pushl
imul
sti
fstps
push
test
sub
sti
add
jmp
jmp
xchg
mov
mov
pushl
roll
pop
and
incl
loop
in
jge
mov
jne
std
pop
cld
sbb
leave
out
pop
add
add
add
add
push
addl
xchg
or
add
pop
lahf
pop
lahf
inc
add
test
lcall
ds
in
and
mov
add
popf
xchg
cmp
add
pop
xchg
scas
imul
jb
call
shrl
mov
add
add
fdiv
xchg
dec
test
dec
stos
mov
cmpsl
add
add
add
push
add
cwtl
jl
cmc
sbb
mov
js,pt
sub
fsubl
add
add
outsb
cmc
out
mov
add
cmp
add
decl
addb
add
add
add
cmp
sub
add
lret
add
inc
add
fs
add
sub
jns
jg
add
pop
adc
lcall
cs
add
xchg
aad
adc
dec
mov
jnp
adc
ljmp
xor
cmc
rorb
push
or
add
roll
icebp
mov
ds
add
mov
cmpsl
add
repz
push
imul
test
mov
add
mov
ljmp
pop
mov
add
cmp
add
decl
bound
call
ljmp
int3
int
jmp
les
jg
add
cmp
out
cli
ficompl
add
lcall
mov
incl
bound
pushl
sarl
add
decl
lcall
add
inc
add
decl
bound
fistps
scas
clc
scas
add
aas
inc
add
xor
call
loopne
adc
lcall
enter
mov
xchg
rorb
add
mov
incl
add
lods
and
ljmp
outsb
cwtl
adc
pop
sub
add
outsb
test
or
jbe
mov
test
fsts
add
dec
dec
jae
pushl
stc
rolb
xchg
jbe
push
addl
add
jg
add
sbb
in
pop
addl
mov
pop
xchg
ljmp
movsl
add
jge
add
cs
adc
fisttpl
xchg
add
gs
sbb
add
xor
call
jbe
fstl
mov
jmp
add
ret
or
lcall
cmp
jg
mov
sbb
add
ficompl
jg
add
jl
mov
add
push
add
add
mov
addb
add
mov
ljmp
je
outsb
pusha
add
addb
add
int
bndldx
sbb
ss
xlat
add
mov
lock
add
ljmp
add
inc
add
dec
jl
mov
and
jmp
mov
in
dec
xchg
pop
movsb
add
and
xchg
loop
movl
xor
jns
lock
add
or
sub
sbb
dec
pop
bound
incl
add
xchg
aas
mov
add
push
add
cmp
js
mov
je
mov
out
addb
add
add
lcall
add
das
jne
jp
add
lahf
pushf
std
dec
push
int3
fwait
mov
je
mov
add
aad
in
push
mov
out
sbb
call
inc
add
notl
out
enter
fcompl
inc
add
or
ljmp
add
incl
or
mov
fisttpll
rcrl
add
add
adc
pushl
mov
sub
add
int3
clc
movb
inc
add
cwtl
push
clc
sti
test
push
int
xchg
sti
insb
addl
jbe
add
mov
sbb
outsb
mov
jmp
add
add
add
add
pmuludq
push
insl
mov
mov
shl
add
add
lds
call
add
add
aas
in
mov
add
inc
add
dec
push
add
std
out
cmp
xor
call
push
and
js
or
push
int3
jge
jb
dec
jle
xor
jmp
fistl
add
sbb
fidivs
add
mov
enter
mov
addl
cs
addl
inc
add
ss
dec
rcrb
add
push
leave
add
ljmp
add
lret
ljmp
lea
add
pushl
decl
sbb
add
fld1
add
xchg
xor
add
int3
repz
jmp
push
add
enter
add
add
and
inc
add
add
iret
sbb
add
add
add
or
sbb
outsl
xchg
ret
add
add
mulb
pushl
fwait
aas
pop
push
add
dec
sti
and
ljmp
sub
stc
mov
add
dec
or
add
jne
aaa
cvtdq2ps
jb
jmp
add
pusha
add
or
mov
jns
add
test
pop
icebp
pop
test
add
add
add
fstl
cltd
or
add
negl
add
xchg
push
add
lahf
call
push
fwait
inc
add
and
lret
out
aas
loopne
movl
lock
cmp
jne
insl
shrb
pop
add
dec
cmp
enter
add
adc
mov
addl
and
decl
pop
push
add
and
mov
fsubrs
add
and
rcll
xor
decl
push
mov
inc
add
mov
push
mov
add
pusha
add
dec
adc
addb
cmp
sbb
push
mov
mov
add
js
sub
pop
enter
mov
int
call
cmp
add
test
scas
lcall
rcrl
dec
mov
add
add
xor
sub
incl
pusha
add
pop
cmc
test
fiadds
rcr
scas
mov
imul
fsubrl
add
lock
movsb
add
add
pop
mov
lcall
mov
add
inc
add
push
mov
inc
add
ror
add
pop
inc
add
outsb
sbb
add
add
jmp
add
out
adc
pushl
outsb
stc
fcomp
lahf
and
mov
jae
call
add
push
lods
sahf
fistpll
aad
jl
inc
add
mov
addb
test
loop
clc
mov
adc
lcall
leave
inc
add
mov
mov
jmp
sbb
add
loopne
xchg
jl
add
fsubrs
and
sti
cmpsb
add
sbb
data16
xor
pushl
pop
push
add
scas
push
cmp
xor
decl
xchg
cmc
or
fisttps
ljmp
sbb
addb
add
lock
add
sub
adc
scas
mov
out
ret
add
add
incl
add
popa
add
jns,pt
sub
addb
mov
ljmp
jbe
ja
out
inc
add
add
out
push
std
mov
xchg
dec
clc
test
jne
sub
add
mov
adc
sub
in
pop
pop
scas
jb
incl
cmp
jecxz
dec
or
add
mov
xchg
cmp
or
xchg
xchg
xchg
aaa
sbb
add
stos
ss
push
aas
cltd
enter
add
pop
pop
mov
frstor
add
mov
mov
or
addb
jmp
pushf
nop
inc
add
add
add
fwait
cwtl
bound
call
and
stc
scas
nop
push
add
adc
add
cwtl
cmpsl
add
and
jmp
add
add
lock
loopne
pop
movb
xor
decl
add
pop
lahf
cmp
mov
jnp
inc
add
insl
in
mov
jmp
add
mov
fucomp
add
jnp
mov
dec
inc
add
scas
fistps
add
inc
add
sbb
je
neg
pop
loopne
mov
ja
hlt
scas
shl
shr
out
jge
mov
pop
je
push
dec
lret
push
mov
rcrb
in
enter
ret
add
sti
dec
add
cmp
add
jge
or
add
add
lret
test
sbb
add
jge
repnz
add
adc
jmp
add
add
test
and
lcall
add
add
les
cli
mov
jb
lcall
or
add
add
add
add
decl
stos
test
add
call
add
sbb
fimuls
repnz
xchg
mov
pop
add
fcoms
decl
add
add
les
data16
shrb
cmp
add
cmp
test
mov
ret
add
add
movsb
add
outsl
punpckhwd
and
call
sbb
add
out
mov
add
fwait
negl
in
ds
int
push
lods
mov
int3
int3
aam
add
decl
add
adc
cmp
movl
outsb
mov
sti
pop
sub
cltd
add
fists
xchg
loope
sbb
ljmp
add
cmpsb
add
addb
add
fmuls
ljmp
push
add
jge
int
adc
call
lahf
add
decl
add
add
call
stos
addb
inc
add
pushf
rolb
xchg
or
add
pop
add
addb
scas
ret
xlat
out
dec
and
inc
add
mov
pop
pop
dec
inc
add
shr
pushf
test
sub
out
xor
inc
add
push
pop
or
add
adc
mov
dec
mov
add
and
jmp
add
mov
and
push
mov
add
mov
fidivrl
je
ljmp
add
rolb
add
inc
add
loopne
sub
add
cli
xlat
sbb
mov
or
add
add
add
call
or
shll
add
mov
ljmp
add
xor
add
mov
fsubrp
leave
cmp
add
cli
stc
push
dec
mov
mov
pop
nop
jae
mov
add
fwait
inc
add
mov
out
cltd
out
jp
fstps
pop
push
pop
xchg
push
add
stc
clc
lods
jbe
add
or
add
cwtl
sub
add
fcoml
add
popl
ljmp
call
xchg
mov
xlat
mov
test
decb
add
negb
pushf
cwtl
xchg
enter
xchg
leave
push
add
mov
pop
enter
add
lock
add
fnstcw
ret
add
test
pop
push
jmp
neg
stos
js
cmpsb
add
flds
cmpsb
add
xchg
and
shlb
dec
outsb
inc
add
add
add
push
jge
add
test
push
add
fwait
jg
mov
dec
jg
repnz
add
call
incl
add
inc
add
jmp
call
xlat
ret
add
add
cld
push
push
add
shrb
test
pop
movl
add
xchg
fadds
jp
add
dec
and
jmp
add
fnstsw
push
sub
sub
add
adc
pop
xchg
cmpsl
add
add
dec
dec
pop
in
mov
repnz
int3
ret
add
bound
pushl
mov
add
addb
add
cmp
or
add
mov
in
pop
mov
add
test
add
add
push
add
jns
icebp
lret
push
add
divb
add
negl
xchg
cmp
add
addl
push
add
add
call
add
decl
hlt
mov
xor
jmp
add
adc
decl
jno
inc
add
xor
push
rcll
add
pop
pop
addb
and
pop
dec
add
add
mov
push
add
adc
jmp
lcall
rolb
jmp
rolb
lcall
jmp
add
jmp
add
push
into
imul
decl
add
add
add
add
test
add
hlt
fidivl
add
sbb
test
clc
cld
rclb
add
inc
add
sub
add
add
lahf
pop
sbb
popa
add
test
and
dec
les
xlat
jge
mov
add
loope
xlat
mov
fcomip
aas
sbb
leave
cmp
lods
add
push
pop
add
jle
fdivr
sbb
movsb
add
inc
add
clc
addl
fs
loope
ret
add
ret
add
xchg
jns
add
add
cmp
fdivrs
jle
pop
sbb
insb
sti
jp
add
add
sub
xchg
out
lds
jb
push
outsb
roll
push
cli
dec
push
add
or
lock
cmp
addb
add
or
cs
mov
cmp
sub
add
std
xor
in
scas
jne
xor
call
fistl
add
dec
jo
call
push
add
shll
add
mov
add
decl
add
dec
cmp
sub
mov
and
clc
out
mov
add
add
pushl
add
add
incl
add
push
add
add
dec
jns
jmp
scas
lahf
lahf
pop
push
mov
in
pushf
xchg
loope
push
std
in
mov
add
push
add
push
stc
movb
jno
decl
jg
push
pop
ja
fs
add
pushl
incl
add
enter
iret
jecxz
lea
cmpsl
add
imul
ret
negl
test
je
outsl
xor
jmp
or
add
add
add
lcall
decl
std
test
add
aad
push
sti
or
add
in
movsb
add
ljmp
inc
add
add
or
xchg
add
incl
add
dec
jge
add
pushl
incl
call
add
push
pop
dec
ljmp
add
add
lcall
add
add
add
add
jnp
mov
cld
lret
and
cmp
mov
add
jb
call
xchg
sub
xor
ljmp
inc
add
test
pop
cmp
loopne
xchg
std
icebp
xor
ljmp
dec
jnp
add
add
dec
cmp
xor
pushl
rolb
aam
mov
add
imul
ffreep
add
in
jp
inc
add
xchg
or
add
dec
es
lret
and
pushl
add
cmp
add
imul
mov
nop
push
add
out
push
add
imul
sti
sbb
add
lret
xor
incl
adc
call
jb
inc
add
and
decl
inc
add
add
repnz
mov
call
dec
push
add
or
inc
add
dec
mov
mov
dec
and
mov
addl
add
ljmp
aas
lods
flds
add
mov
add
addl
pop
sbb
xchg
sahf
aam
add
inc
add
leave
cwtl
or
xor
in
outsl
ss
insb
add
lcall
add
data16
pop
dec
aam
js
add
jb
jmp
mov
add
lods
pop
xchg
mov
adc
add
dec
jle
inc
add
out
mov
push
std
inc
add
icebp
adc
lcall
xchg
sarb
add
addl
adc
inc
add
rcr
repnz
in
ss
call
sbb
mov
and
jmp
pop
jns
or
xlat
add
cmp
add
je
imul
data16
dec
dec
nop
cld
dec
sbb
dec
mov
rorl
dec
dec
cmp
add
lods
dec
insl
aas
dec
push
add
xor
push
arpl
decl
sub
sbb
lea
pop
rcrb
insl
add
add
jmp
add
jle
push
pop
xor
push
addl
add
jle
add
movb
mov
pop
fidivrs
add
out
mov
add
sub
pop
ds
pop
lea
sahf
cmpsb
add
and
ljmp
add
stos
in
daa
add
mov
add
adc
dec
pop
mov
mov
dec
jecxz
push
add
mov
sbb
add
shlb
add
ljmp
add
fs
or
add
incl
mov
push
outsl
add
ljmp
mov
insl
jo
std
or
std
lcall
call
sbb
add
pusha
add
mov
add
mov
jmp
add
inc
add
pop
xor
call
inc
add
add
inc
add
push
add
mov
add
sbb
jbe
push
mov
add
lcall
add
movl
scas
xchg
enter
ret
add
repz
pop
xlat
dec
jp
cld
out
xor
decl
data16
cs
add
hlt
push
ds
add
int3
lock
add
add
mov
jmp
lcall
mov
mov
fidivrs
inc
add
jmp
shlb
cli
in
jae
mov
cmp
jmp
adc
dec
mov
cmp
ljmp
out
cmc
inc
add
add
lods
test
sub
mov
cmp
sbb
add
add
or
add
xchg
and
into
in
jo
incl
add
rep
push
add
jns
push
jns
pop
cwtl
std
outsb
pusha
add
dec
push
push
add
lahf
xchg
cmp
add
add
jmp
imul
add
incl
test
test
call
popa
add
mov
add
add
leave
popa
add
insb
add
pushl
add
pop
mov
add
mov
add
sbb
push
scas
cmpsl
add
or
sti
mov
call
add
mov
arpl
ljmp
data16
ret
add
adc
add
sarb
lea
jl
add
decl
insl
add
add
push
add
rcrb
add
lds
pop
pop
inc
add
add
pushf
cmpsl
add
add
cltd
push
add
add
cli
lds
scas
mov
call
faddl
add
push
cwtl
call
xchg
and
pushl
push
and
call
dec
mov
incl
add
ja
rcll
decl
add
lahf
xchg
aaa
lret
inc
add
add
pushl
insl
das
aaa
iret
jnp
add
add
pushl
add
jg
or
add
sbb
adc
adc
filds
add
test
xor
decl
fwait
lods
lret
call
not
xchg
dec
repz
add
dec
adc
call
mov
jle
pop
lock
add
and
call
std
repnz
mov
add
add
sub
in
fdivs
fdivrl
inc
add
stos
add
fisttpl
inc
add
mov
inc
add
jmp
add
mov
push
push
and
jmp
call
add
cmp
add
ja
add
and
fdivs
je
add
add
xchg
int
repnz
add
fwait
aas
cmpsb
add
inc
add
add
push
xor
mov
add
add
pop
rol
add
add
mov
data16
pusha
add
xchg
in
les
pop
add
ljmp
scas
sahf
dec
fprem1
cltd
inc
add
add
add
push
add
cmc
dec
push
hlt
sbb
mov
add
pushl
jbe
cltd
outsl
ret
add
aam
outsl
jg
addl
mov
movl
add
add
movsb
add
lret
sub
cmp
mov
add
ds
mov
jl
push
out
insb
fdivrl
sti
addb
and
add
call
add
adc
mov
add
mov
addb
xchg
dec
pop
pop
add
add
sub
add
add
xor
call
decl
add
mov
jnp
add
lret
call
add
add
stc
fwait
mov
test
adc
add
pushl
add
mov
push
outsl
insl
aaa
jae
decl
mov
movl
lds
sbb
movb
jl
iret
ljmp
add
ja
xchg
pop
sub
pop
ljmp
enter
negl
and
js
adc
mov
or
ret
add
add
stos
sti
inc
add
dec
ficoms
add
add
adc
stc
jge
add
add
pop
cwtl
incb
call
add
pushl
js
jp
mov
pop
xor
decl
add
add
or
add
ljmp
xor
fbstp
xchg
or
add
pop
dec
push
push
add
cmp
dec
and
js
push
add
jns
add
in
or
dec
xchg
sahf
daa
add
push
imul
out
lds
add
pushl
add
imulb
insl
jecxz
jle
add
pushl
xor
call
cmc
or
add
add
mov
cmp
add
xor
ljmp
or
mov
add
stos
in
cltd
pop
negl
das
jp
sbb
add
add
add
add
adc
call
inc
add
xchg
inc
add
push
scas
mov
xchg
rcl
lods
out
inc
add
pop
stos
mov
dec
xor
jg
add
add
call
cld
jmp
inc
add
add
pushl
inc
add
inc
add
xchg
xchg
mov
fldcw
add
or
add
in
inc
add
add
add
hlt
mov
add
add
cmp
push
loop
test
stos
lcall
test
je
add
cmp
add
neg
mov
loop
movl
addl
add
outsb
jnp
pop
and
add
jl
test
xchg
mov
mov
add
mov
and
jmp
jmp
push
fucom
add
cmp
xor
jmp
add
shrb
add
push
popf
leave
jns
xor
mov
test
je
ficoml
pop
jg
ss
sub
inc
add
add
lcall
add
and
sti
sub
lods
addb
add
insl
movb
add
ret
add
add
add
adc
call
push
jne
insb
insl
adc
inc
add
push
add
cmp
push
mov
roll
xchg
sbb
and
cmpsl
add
pop
and
jmp
add
loope
xchg
pop
mov
inc
add
ljmp
push
add
jo
call
sets
push
rcrb
jp
push
add
fisubrs
cs
add
ds
mov
add
add
fs
add
add
aad
add
cmpsb
add
add
xchg
cmpsl
add
add
jge
push
lock
add
cmp
cmp
ficoml
call
add
mov
add
aam
add
outsl
clc
dec
daa
add
sbb
ljmp
add
inc
add
sbb
xlat
gs
sbb
add
mov
and
push
test
jle
dec
and
jmp
add
jle
add
add
fmul
jae
decl
cmp
add
lds
mov
add
call
add
pop
add
decl
dec
cmpsl
add
or
add
bound
jl
mov
imul
add
add
or
adc
pushl
xchg
xchg
out
mov
imul
ss
add
jl
push
sub
call
mov
test
dec
or
pop
inc
add
ljmp
nop
jo
jmp
push
addb
add
stc
push
xor
lcall
cmp
pushf
sti
cmp
lds
add
push
add
push
add
push
and
pushl
add
cmp
add
cmpsl
add
add
jmp
add
ljmp
add
add
sti
xchg
cli
shll
add
sub
dec
lret
push
stos
push
in
sbb
ljmp
mov
jo
call
cmp
xor
call
ja
fwait
xchg
in
adc
call
add
add
xlat
and
dec
push
jne
lea
jmp
add
add
lea
add
sarl
cmpsl
add
ljmp
add
gs
add
aas
pop
add
sarl
add
jns
add
in
add
incl
fwait
test
add
fwait
jo
push
hlt
jl
xor
fsubr
cltd
push
add
add
int3
in
jno
ljmp
jmp
outsb
jb
jmp
add
add
add
cmp
add
in
push
cmpsb
add
fsts
jle
test
add
mov
call
adc
lcall
fadds
push
data16
add
add
push
add
add
int
jecxz
sbb
adc
pusha
add
cmp
incl
add
pushl
inc
add
fdivrs
dec
in
jae
ljmp
sbb
incl
add
dec
incb
mov
loope
mov
cmp
add
add
leave
dec
in
out
sub
xchg
fdivl
add
push
add
pop
shlb
mov
jmp
frstor
lods
pop
mov
dec
pop
add
bound
mov
push
add
cmp
sbb
popa
add
dec
or
repz
notl
adc
dec
scas
pop
pop
icebp
inc
add
mov
add
int
add
sub
add
decl
add
push
jae
decl
sahf
into
push
movb
add
add
sub
adc
add
stc
xor
pushl
jmp
fdivs
incl
dec
and
js
add
nop
lock
repz
imul
aas
dec
mov
and
data16
add
sahf
push
add
scas
ret
pop
push
add
and
call
add
fwait
sahf
nop
lahf
clc
and
jmp
add
decl
add
popf
push
lahf
xor
stos
xchg
xchg
scas
movnti
inc
add
ja
add
add
add
pop
lcall
push
and
call
xchg
cmc
test
roll
add
mov
add
sub
mov
mov
dec
mov
mov
mov
add
mov
mov
xor
add
xor
pushl
add
stos
mov
test
cld
jecxz
pusha
add
inc
add
fsubrs
fidivrl
xchg
push
add
pop
loop
mov
into
movb
add
icebp
pop
movsbl
add
negl
inc
add
pop
xchg
addb
hlt
xchg
test
ret
add
mov
add
add
dec
test
out
scas
inc
add
add
jp
mov
xchg
aam
jb
pushl
pushl
add
cld
lods
mov
add
idiv
arpl
lcall
mov
push
jns
xor
mov
add
enter
cmp
leave
sahf
jge
add
dec
lods
cld
mov
dec
popa
add
mov
in
test
lcall
loop
sbb
arpl
decl
and
ljmp
mov
xchg
rolb
shrb
push
add
sti
and
js
add
pop
push
add
mov
add
mov
dec
fsubs
decl
out
enter
outsb
mov
cld
pop
jns
add
fidivrs
mov
add
movsl
add
mov
leave
fmull
add
fwait
popf
jl
mov
mov
les
movsb
add
add
cmc
push
xlat
sbb
add
mov
stos
mov
push
xor
jmp
add
add
lcall
lea
mov
add
add
add
lods
mov
sbb
add
pop
jns
mov
add
add
ljmp
icebp
xor
fldl
mov
pushl
add
stos
add
push
add
add
punpckldq
out
stos
or
pushf
aaa
xchg
stc
in
inc
add
enter
pop
mov
add
add
xor
decl
cmp
call
inc
add
popf
xchg
push
movb
unpcklps
push
add
dec
push
xchg
mov
add
mov
aam
jecxz
call
imul
push
inc
add
daa
add
xlat
fwait
cwtl
adc
dec
lds
arpl
inc
add
aaa
lock
out
ret
add
lcall
fwait
lcall
lods
mov
cmc
or
jmp
add
pop
outsb
popf
ljmp
xor
mov
mov
cmp
add
cmp
sub
xor
call
popf
xor
lcall
add
add
push
scas
shl
add
mov
push
mov
add
push
add
movsb
add
add
aas
lahf
daa
add
add
xchg
sti
cmpsl
add
iret
xor
decl
jle
sbb
aad
mov
add
dec
mov
flds
dec
and
jmp
pushl
inc
add
cmp
dec
roll
add
pop
add
pop
jle,pn
lret
xchg
pop
bound
lcall
lods
jge
add
dec
ss
sbb
dec
add
jmp
add
add
dec
xor
add
sbb
repz
or
push
cmc
fmuls
jmp
add
push
sarl
mov
add
insl
das
stc
jns
dec
ret
mov
dec
mov
add
movsb
add
dec
add
call
add
jmp
cltd
outsl
mov
add
add
lock
int
and
decl
add
addb
fwait
in
sub
add
fldl
out
dec
hlt
push
add
sub
and
pushl
call
add
jmp
push
fucom
add
add
data16
call
rcll
add
sub
lods
add
jmp
jmp
add
sub
fwait
xor
out
and
sbb
add
add
mov
add
cs
push
add
xor
add
pop
push
add
adc
decl
add
jne
dec
shrl
ja
cmp
add
nop
xor
jmp
test
mov
into
mov
xchg
adc
aas
sub
cli
loope
scas
mov
add
mov
mov
shll
add
iret
js
adc
ja
inc
add
jecxz,pt
sub
xchg
push
push
je
sub
sbb
add
stc
push
add
adc
jmp
std
les
ftst
add
xor
lcall
add
inc
add
clc
adc
incl
add
xchg
mov
js
add
out
in
loop
jecxz
dec
icebp
jnp
addb
add
addr16
mov
add
mov
add
add
add
lcall
add
add
add
cltd
pusha
add
mov
mov
cmpsl
add
add
mov
jae
inc
add
and
jmp
pushl
ljmp
or
sub
add
cmpsl
add
dec
jle
add
stos
insb
in
int3
cmpsl
add
jecxz
inc
add
cs
add
sub
jle
fs
sub
dec
pop
add
add
mov
add
add
data16
add
mov
add
xor
jmp
add
call
rorb
mov
mov
add
addb
test
push
mov
pushl
scas
or
or
mov
lock
jmp
lods
sbb
lea
dec
adc
fcompl
mov
inc
add
fsubs
test
rcll
add
insl
or
ja
movb
lods
movsl
add
inc
add
fsincos
mov
cwtl
dec
repz
add
inc
add
add
outsl
ret
add
xchg
aaa
call
ds
pop
jne
je
int3
cmp
incl
add
mov
and
decl
loope
jp
mulb
imul
add
add
push
jg
adc
jmp
add
lds
and
cwtl
in
movb
repz
decl
add
add
push
and
mov
shlb
ljmp
inc
add
incl
call
add
ss
mov
add
push
sbb
mov
mov
xlat
xchg
or
add
jns
ret
add
cmp
or
add
add
sbb
add
jno
jmp
ljmp
push
push
mov
out
cmpsb
add
addb
mov
add
mov
out
aad
add
jg
add
pushf
adc
inc
add
add
cmpsb
add
add
fcoms
sahf
mov
or
add
add
add
out
movsb
add
popa
add
addb
dec
nop
js
add
jp
add
add
enter
insl
or
mov
add
jge
add
or
ds
cmp
mov
movsb
add
add
add
movsl
add
rolb
push
add
out
rolb
out
or
xor
jae
incl
add
lds
push
add
jl
inc
add
mov
xchg
lds
testl
lods
cmp
add
add
xchg
xchg
xchg
sub
mov
jne
das
adc
fists
cmp
stos
test
adc
aas
lret
xchg
stc
aas
xchg
adc
decl
add
mov
cld
fidivs
decl
addl
xchg
pandn
ficoml
push
rcrb
movb
add
add
movsl
add
addl
add
data16
xor
pushl
add
repnz
jmp
add
test
movsl
add
pop
cmp
mov
add
add
ds
fwait
scas
jg
sub
add
in
int
sbb
add
rolb
add
stos
test
xchg
idivb
lods
out
xor
push
push
mov
add
call
add
std
sbb
out
incl
in
pop
inc
add
pop
cmp
mov
push
inc
add
mov
push
add
in
out
pushf
jp
movl
cmp
or
lods
jns
sbb
gs
jmp
adc
lcall
add
incl
add
pusha
add
dec
mov
test
xchg
fiaddl
add
add
incl
add
add
call
mov
pop
or
xor
ljmp
mov
mov
add
add
fisubrl
js
sbb
fmul
mov
mov
dec
sub
repz
ss
mov
jg
add
out
cli
fwait
dec
testb
add
add
lcall
lcall
add
cmp
enter
inc
add
cmp
leave
movl
imul
push
add
pop
add
sbb
jbe
js
popa
add
ret
add
enter
pop
ror
out
cmpsb
add
add
add
incl
scas
in
cs
push
add
mov
pop
scas
in
scas
push
push
mov
add
pushf
ret
add
movb
pusha
add
das
adc
lcall
add
mov
and
outsl
jnp
xchg
sahf
aaa
scas
roll
pop
xor
and
pushl
or
call
sbb
inc
add
call
repnz
bound
dec
bnd
mov
add
add
add
add
imull
add
inc
add
add
dec
aam
popa
add
arpl
ljmp
cli
pusha
add
and
lcall
lock
ret
mov
add
movb
rcll
lcall
decl
cmp
add
add
and
scas
and
cmpsb
add
add
icebp
clc
mov
loope
xchg
cs
jb
pushl
add
sub
lock
js
divb
add
xor
incl
push
rcll
push
shl
add
dec
out
rorl
in
jg
fistpll
sbb
dec
imul
add
nop
hlt
scas
js
add
cmp
outsb
pop
std
dec
sub
add
add
sbb
or
pop
mov
add
mov
add
add
out
addb
sub
loop
cld
push
cld
call
push
add
add
jnp
into
test
mov
add
jae
cmp
test
decl
fs
add
fdivs
fisubs
inc
add
enter
mov
clc
pop
addb
lods
mov
add
add
sbb
inc
add
mov
jo
pushl
fsubrl
add
add
push
icebp
rolb
add
fsubl
testl
mov
add
mov
add
shrb
lods
cmpsb
add
add
outsb
push
nop
jnp
pop
mov
pop
adc
incl
add
pop
inc
add
dec
jne
out
adc
decl
lahf
popf
pop
sub
add
ds
mov
pop
cmp
add
jle
cmp
data16
add
inc
add
clc
xor
or
out
sbb
add
imul
addb
lock
add
pop
dec
pop
out
push
add
xor
call
add
pusha
add
jns
stos
sub
cmp
add
pop
mov
test
roll
add
incb
add
add
add
aas
out
add
adc
addb
movl
addb
arpl
jmp
add
addl
shll
push
pop
movsb
add
inc
add
add
push
dec
push
add
lock
movsb
add
sbb
add
imul
add
add
add
push
pop
fisubs
add
inc
add
dec
pop
movl
cld
inc
add
jmp
cmp
add
dec
pop
mov
add
pushl
add
or
push
add
mov
add
add
jmp
add
lds
add
jmp
inc
add
xchg
sbb
add
dec
xchg
jno
out
inc
add
popa
add
pop
mov
add
adc
jmp
push
addl
sbb
inc
add
or
add
adc
jmp
add
add
push
cmp
inc
add
enter
test
add
adc
movl
mov
mov
cli
mov
fnsave
addr16
ja
dec
add
fdivl
sbb
scas
aaa
push
or
add
jno
loopne
mov
jmp
add
cs
cmp
mov
lcall
rol
add
scas
scas
or
cli
cli
mov
jg
out
outsl
xchg
jge
repz
add
dec
jg
add
xchg
rclb
add
push
add
leave
lret
imul
insb
jo
out
pop
loop
das
xor
jmp
add
jmp
add
into
arpl
call
add
adc
les
pop
test
ror
idivb
jns
pop
sbb
add
popa
add
inc
add
jno
jmp
mov
ljmp
dec
add
loop
push
mov
popa
add
fs
cs
cltd
adc
test
add
pop
pop
jnp
hlt
je
add
add
std
lds
mov
add
clc
pop
fildll
xor
in
cmpsb
add
test
lock
pushl
push
sbb
ds
add
fistpll
push
sbb
adc
ljmp
add
adc
decl
cmp
sbb
add
push
ljmp
add
cltd
sub
add
decl
dec
incb
lcall
add
decl
leave
rcrb
das
gs
cmp
outsb
hlt
mov
sbb
inc
add
push
std
sub
xchg
pop
lahf
ret
add
add
jg
xchg
mov
add
add
fistl
mov
pop
popf
fwait
push
add
mov
adc
add
out
pop
xchg
xlat
pop
and
lcall
jle
add
add
fsubl
add
lcall
gs
add
jmp
add
mov
or
pusha
add
mov
add
lcall
dec
dec
fimull
add
pop
in
stos
mov
fwait
sub
push
les
xchg
mov
dec
xchg
adc
jmp
add
add
lea
add
int
and
ljmp
add
enter
jbe
add
add
inc
add
add
pushl
mov
add
movsl
add
add
inc
add
cmp
jmp
adc
mov
decl
add
jge
add
testb
call
cmpsl
add
cs
out
xlat
mov
decl
jbe
jae
decl
negb
mov
push
add
inc
add
cmp
jo
decl
incl
add
lret
sub
add
add
lods
mov
ja
popa
add
push
mov
pushf
push
add
cmp
xchg
xchg
xor
push
xchg
and
inc
add
xchg
into
mov
push
add
std
ljmp
mov
outsb
je
add
add
loop
pop
cmp
add
add
sub
add
loopne
push
loope
sub
rolb
rcl
stos
dec
pop
xor
aaa
fdivp
adc
call
sbb
add
lcall
sbb
add
add
add
add
sti
roll
pop
sbb
or
inc
add
add
lods
jne
fcompl
ret
add
inc
add
xor
rclb
aam
std
into
sub
outsb
xlat
pop
dec
sub
mov
les
movl
cmp
push
mov
and
ljmp
or
gs
ljmp
mov
add
add
mov
scas
shll
adc
lods
cmp
cmp
inc
add
bound
push
pusha
add
jmp
add
pusha
add
push
mov
add
mov
lcall
sbb
pop
cmp
xor
ljmp
pop
pop
jae
pushl
add
jo
fptan
ljmp
sbb
mov
add
movl
pop
fiaddl
repz
sahf
data16
stos
add
add
add
add
add
adc
add
add
rcrl
negl
iret
inc
add
push
add
addl
out
lds
mov
in
lock
dec
inc
add
mov
add
add
test
js
add
jmp
add
or
sub
clc
jbe
jl
add
adc
add
cli
scas
add
cmp
pop
add
mov
cld
hlt
mov
xlat
addb
and
lcall
mov
add
rolb
incl
add
push
daa
add
dec
xlat
or
add
add
lcall
fsubrl
inc
add
lahf
and
xchg
dec
adc
pushl
pop
mov
push
add
fwait
out
cmpsb
add
add
fstl
mov
mov
add
add
add
mov
push
add
movsb
add
add
cli
arpl
dec
int3
xchg
and
jmp
add
or
push
add
pushl
add
mov
rolb
add
add
sahf
pop
pop
nop
mov
add
jmp
xlat
add
add
xchg
loopne
int
adc
pushl
add
add
jo
jmp
add
stos
xchg
cwtl
cmp
aam
addr16
mov
call
dec
fldenv
movl
push
sarb
and
lret
pop
add
add
inc
add
inc
add
add
and
dec
std
lock
mov
popf
fcmove
movsl
add
inc
add
adc
push
push
addl
add
push
sub
lock
add
out
jp
pop
mov
and
sub
addb
dec
imul
sarl
add
adc
decl
add
inc
add
sbb
jbe
add
or
arpl
incl
mov
mov
pushl
add
add
decl
add
lcall
push
cmp
ds
hlt
xchg
enter
mov
sbb
add
cli
xchg
inc
add
sub
add
mov
jge
movsl
add
push
add
ret
add
roll
shl
add
cmpsl
add
add
mov
add
add
add
neg
fdivl
push
cmp
shlb
call
add
cltd
movl
inc
add
das
popf
addl
add
addl
or
loopne
repnz
add
jle
loope
enter
jne
sub
and
fldt
add
mov
ljmp
inc
add
add
add
mov
ret
add
add
pushl
add
jmp
mov
ficoms
fcompl
aad
add
add
lds
cmp
xchg
dec
fidivl
add
fwait
add
addl
push
add
addl
jns
mov
adc
jmp
add
push
sti
cmp
ljmp
mov
cs
mov
add
hlt
inc
add
add
insl
mov
std
sub
ljmp
xor
pushl
inc
add
in
scas
ds
insl
xchg
fadds
mov
loopne
cmpsl
add
dec
or
add
add
add
sub
add
add
add
or
add
sub
lcall
push
add
mov
sub
loope
cltd
ljmp
add
addb
sti
or
jl
add
stos
das
and
incl
add
roll
add
xor
out
rorl
aaa
xchg
mov
push
cmpsb
add
data16
push
jg
add
add
test
ljmp
add
adc
jmp
add
inc
add
adc
decl
or
sbb
add
call
incl
jp
sbb
add
xchg
dec
std
mov
add
mov
mov
cli
movb
add
mov
ljmp
paddsw
ficoml
add
cli
sti
xchg
push
add
xor
pop
movl
adc
fildl
add
inc
add
sub
and
add
mov
out
pop
mov
add
dec
add
xor
jmp
fldt
cld
xchg
add
call
das
push
add
mov
add
pushl
test
jo
jl
addl
out
pop
test
pslld
cwtl
mov
add
imul
cmp
mov
dec
out
popf
xchg
nop
lock
pop
inc
add
xor
jmp
add
packssdw
in
mov
push
add
add
and
jecxz
or
roll
add
fisttpl
pop
fwait
insl
sahf
divb
xchg
add
ficompl
insl
sbb
mov
fldenv
add
ss
push
add
xchg
pushf
push
or
add
add
cmp
loope
lret
mov
ficoms
fwait
xchg
cltd
mov
add
mov
add
mov
jecxz
push
or
test
cmp
mov
sub
jg
jbe
dec
out
outsl
xchg
sbb
movl
mov
add
ja,pn
mov
leave
movsb
add
pop
add
bswap
lret
aas
mov
ret
jns
idivl
in
cmpsb
add
add
mov
add
push
add
jae
ljmp
lret
int
aam
fwait
lret
addb
cmp
addl
icebp
mov
cmp
jns
mov
xor
jge
fbstp
call
cli
sub
dec
inc
add
psrld
add
mov
add
xor
add
stos
ja
shlb
insl
movsb
add
add
insb
pop
add
addl
xchg
outsl
jbe
add
and
jmp
add
mov
add
cmpsl
add
add
addl
add
adc
mov
jb
ds
add
add
mov
movsb
add
addb
rclb
mov
add
cmc
sub
add
jbe
gs
add
addl
pop
les
sub
add
test
sarl
ret
add
dec
fildl
add
jae
lcall
idivb
decl
push
stc
jge
push
stc
std
cmp
add
cwtl
xchg
addb
insl
mov
movsb
add
sbb
movb
sbb
ljmp
add
fcoml
dec
inc
add
stc
lcall
add
mov
pop
aas
loope
pusha
add
bound
dec
insl
sbb
add
pushl
inc
add
mov
add
cmpsl
add
inc
add
mov
sub
add
cmpsb
add
add
popa
add
xchg
popl
decl
jne
xchg
ror
jle
fucomp
popa
add
fimuls
mov
xchg
xchg
clc
lcall
pushl
fmul
das
xchg
clc
inc
add
pop
or
sub
movl
push
add
add
das
push
add
addb
add
fstl
call
add
cmp
out
cmp
add
fidivs
xor
incl
push
mov
add
incl
add
roll
loope
dec
mov
aas
mov
in
jl
add
add
and
push
mov
and
jl
and
lcall
push
fsubl
add
testl
out
mov
add
add
add
pop
cmp
aad
add
cmp
lods
cltd
test
fidivl
add
outsb
popf
mov
push
mov
rcrl
cmc
xor
pushl
ljmp
inc
add
jns
in
inc
add
fs
mov
jmp
pusha
add
int3
clc
out
daa
add
aad
stos
and
incl
inc
add
pop
in
mov
add
repnz
pushl
dec
pop
pop
mov
decl
jecxz
jmp
add
jecxz
adc
inc
add
cmpsb
add
push
or
add
int3
sub
addb
rolb
dec
lea
pushf
cmp
lcall
jecxz
popf
int
add
ljmp
add
fwait
jmp
add
dec
adc
push
call
add
lds
pop
jns
or
add
add
icebp
movl
inc
add
mov
incl
jge
add
addl
mov
cmp
clc
test
add
test
add
pop
call
jl
lcall
add
add
movsl
add
pushl
xchg
cld
xlat
pop
add
addl
jae
pushl
push
add
xlat
lods
lret
add
dec
and
pushl
hlt
mov
decl
add
decl
add
decl
sub
xchg
jno
call
jno
jg
push
add
push
int3
and
fmuls
daa
add
cmp
add
test
inc
add
sub
dec
mov
movsl
add
lcall
add
dec
out
mov
add
out
les
pusha
add
cmp
add
ljmp
jno
pushl
loope
inc
add
test
shrb
clc
mov
inc
add
lret
idivb
shrl
stos
pop
jne
add
push
adc
incl
call
pushl
add
sub
psubq
imul
add
mov
mov
xor
pushl
jmp
add
hlt
mov
data16
lea
xor
mov
add
out
lahf
xchg
push
add
repz
ds
add
ja
inc
add
mov
add
jl
lahf
out
lcall
popa
add
xchg
push
add
jle
loope
sub
iret
xor
decl
mov
mov
pop
icebp
xor
mov
sub
add
cmp
dec
movl
incl
add
cmp
jmp
add
mov
inc
add
lods
pop
movb
jne
mov
mov
ret
add
dec
cmp
add
jns
addb
push
add
add
fdivl
add
negb
adc
pushl
popa
add
popf
hlt
or
decl
and
decl
add
dec
dec
mov
add
js
pop
movsl
add
repnz
insl
lock
aad
add
add
jae
jmp
cmp
fs
push
pop
add
lea
add
mov
fisttps
test
notl
stos
add
dec
stos
das
inc
add
scas
mov
adc
add
xchg
cmp
add
incl
in
and
scas
fidivl
cmp
ljmp
add
cmp
jmp
inc
add
dec
ss
mov
pop
add
lret
loop
daa
add
pop
call
add
call
call
adc
dec
roll
cmp
jnp
add
aad
inc
add
ret
add
adc
out
fwait
loopne
push
add
push
add
repnz
mov
add
add
add
adc
fbld
add
push
ds
ljmp
cmp
daa
add
mov
add
popa
add
outsb
push
add
add
push
arpl
ljmp
xchg
mov
mov
loopne
inc
add
fsubs
add
jp
add
test
pop
fadds
jbe
ret
add
ret
add
lods
lahf
inc
add
incl
add
add
push
xchg
dec
jle
dec
pop
mov
add
add
cli
cli
ret
add
test
xchg
stos
lret
incl
popf
push
add
sbb
aam
mov
add
add
lock
pop
imul
aaa
pop
sbb
bound
jp
mov
out
dec
add
push
add
dec
in
aam
push
jno
call
add
ds
pop
mov
add
lcall
add
inc
add
add
pop
stos
lahf
jl
addb
add
flds
add
in
iret
insb
cmp
jle
add
sbb
decl
add
add
leave
push
add
jp
add
mov
adc
jmp
pop
cltd
addl
or
cltd
mov
add
pop
add
add
jg
add
jbe
daa
add
fwait
push
add
dec
inc
add
add
loopne
or
and
inc
add
iret
test
jecxz
cmp
inc
add
ja
push
add
inc
add
stos
cmpsb
add
movsl
add
cwtl
lcall
cli
call
decl
in
pop
dec
mov
add
call
js
jnp
inc
add
ja
add
iret
jmp
add
mov
cmpsb
add
push
add
add
push
test
enter
add
dec
call
mov
out
mov
and
or
int
add
xor
ficoml
arpl
inc
add
add
add
js
add
jae
jmp
add
add
pop
lock
fisubl
add
dec
ds
add
fsubr
sbb
add
add
mov
roll
add
dec
movsl
add
add
xchg
arpl
clc
jb
fisubl
rolb
add
add
add
ljmp
mov
lods
scas
add
sbb
mov
addb
sbb
rorl
or
add
icebp
addl
add
imull
add
xchg
popa
add
sub
xor
call
sbb
inc
add
std
ficompl
add
pop
data16
neg
add
lcall
add
iret
sbb
add
mov
cmc
ss
dec
les
cmp
add
mov
inc
add
mov
add
adc
stos
addl
clc
rolb
out
add
lret
jmp
pop
push
add
pop
sarl
divl
sahf
std
lcall
lock
stos
jnp
add
mov
inc
add
jmp
cmp
les
dec
scas
jno
dec
adc
add
push
add
loope
test
mov
add
mov
inc
add
jmp
adc
add
mov
jb
call
movsl
add
movsl
add
shlb
or
mov
add
lahf
add
ljmp
pushl
call
mov
add
outsl
push
add
add
add
aaa
adc
decl
icebp
xor
add
jmp
aas
pop
fwait
das
hlt
pop
add
add
mov
xor
pushl
decl
mov
add
imul
add
xor
and
call
sbb
add
ffree
add
mov
add
out
sbb
cltd
movsb
add
mov
repnz
xchg
mov
nop
test
mov
adc
pushl
movsl
add
adc
jmp
add
jmp
add
mov
shlb
inc
add
mov
lahf
lock
add
jl
lds
jmp
repz
jmp
add
jmp
add
insb
lcall
imul
roll
and
frstor
addb
jbe
lret
mov
icebp
and
ja
mov
lret
mov
scas
pop
sub
add
or
adc
jmp
add
nop
mov
add
push
add
and
incl
insl
jle
in
jb
cld
aam
popf
xchg
out
adc
lcall
mov
mov
add
or
test
pop
xor
mov
test
lods
add
fidivrs
lcall
sub
sbb
add
pusha
add
add
mov
xchg
add
push
fstl
call
or
add
fst
jbe
push
add
mov
in
movsl
add
and
in
xchg
fbld
add
add
cmpsb
add
std
mov
add
sti
rolb
add
incl
add
push
add
mov
decl
add
dec
test
adc
jns
aad
dec
ds
sbb
sub
dec
cmc
push
add
testb
pop
out
xchg
clc
mov
add
add
push
add
cltd
add
lcall
add
dec
addl
add
cltd
jmp
fimull
add
roll
add
enter
call
add
pop
daa
add
ret
sub
pushl
xor
fidivs
movsl
add
add
mov
inc
add
add
push
dec
fiaddl
and
incl
adc
jmp
add
add
add
xor
mov
aaa
mov
add
cli
add
cld
add
js
cli
push
mov
add
xor
fidivs
push
jne
or
addl
ljmp
das
mov
das
rcl
add
jp
add
mov
negb
add
jbe
rep
push
std
idivl
lods
dec
nop
sbb
push
add
fcmovne
sti
ds
add
rolb
add
add
hlt
or
add
je
xchg
mov
in
ret
add
mov
add
xlat
aas
ficomps
fs
jns
xchg
dec
aad
add
add
call
sub
add
je
xor
call
clc
inc
add
les
sti
jno
pushl
jmp
add
bound
push
or
add
imul
call
xchg
push
in
xor
ljmp
loop
jnp
pop
lret
add
fimull
dec
cld
mov
call
add
dec
cmp
add
mov
push
or
add
jge
jmp
pop
lret
lret
xor
pop
push
add
movb
cmpsl
add
or
add
roll
add
mov
daa
add
fsubs
add
insl
std
call
call
pop
mov
data16
rcrb
js
insb
add
add
add
pop
dec
sbb
push
add
pusha
add
sbb
add
add
jmp
jmp
add
dec
push
add
sbb
cmp
adc
add
or
add
xchg
aaa
add
call
pusha
add
cs
add
add
lahf
movl
mov
push
test
inc
add
add
add
cmp
sub
adc
add
std
sbb
test
ret
add
pop
or
add
add
sub
add
add
mov
add
add
mov
ret
add
and
incl
add
int3
inc
add
hlt
dec
loop
jo
pushl
add
dec
jno
incl
mov
add
sub
mov
jp
add
sgdtl
ljmp
adc
call
dec
movb
int3
add
mov
push
add
push
add
push
add
std
mov
fisubs
add
xchg
add
nop
mull
lcall
xchg
insl
imul
roll
popa
add
pop
pop
mov
or
xchg
dec
leave
test
push
add
int
push
cmpsb
add
add
mov
add
add
std
sarl
sub
dec
push
dec
jb
inc
add
imul
pop
lds
jbe
ja
add
jmp
add
lock
add
mov
add
pop
sub
mov
push
hlt
fwait
arpl
jmp
add
mov
mov
inc
add
sbb
js
add
ja
jae
decl
cmp
jle
cli
sti
data16
jp
push
stos
test
popa
add
leave
pop
push
mov
add
mov
les
jge
dec
xchg
sbb
add
outsb
jae
lcall
sbb
add
into
and
addb
add
outsb
mov
dec
add
call
pushf
int
add
fbstp
jns
add
xor
pushl
add
add
popa
add
pop
jl
mov
add
lcall
test
mov
repnz
scas
js
add
les
mov
add
je
pop
jg
ljmp
push
add
ljmp
or
cmpsl
add
ficoms
inc
add
mov
add
add
addb
mov
pop
hlt
test
out
daa
add
loop
push
and
pushl
sub
sub
loop
adc
pushl
add
dec
cltd
mov
add
push
lock
mov
cmp
rorl
sub
mov
push
mov
inc
add
pop
add
add
cmp
ret
add
jbe
pop
cli
lret
repz
add
dec
test
aas
xor
dec
or
add
and
decl
jg
add
add
addb
dec
dec
loop
sub
incl
push
add
mov
add
daa
add
pushl
pushl
add
cmp
jne
sub
add
ret
add
add
push
jmp
xlat
inc
add
add
fucomp
sub
sbb
aad
inc
add
and
call
outsl
add
add
decl
mov
add
add
add
incl
movb
dec
pop
mov
loope
lds
lds
cmp
lock
push
scas
jp
addl
clc
jbe
sahf
out
cmp
cmp
lods
inc
add
xchg
pop
or
jp
out
std
sti
add
add
fisubrl
sub
add
aaa
or
in
push
add
xor
xlat
adc
sbb
push
add
inc
add
cmp
ror
xchg
mov
incl
xor
call
add
sbb
addb
add
cwtl
insl
jns
pop
mov
mov
add
mov
pop
add
jg
add
sub
lcall
add
or
add
mov
and
lcall
adc
pushl
push
mov
adc
pop
add
or
add
scas
mov
add
gs
test
mov
addb
and
jmp
add
lock
push
mov
xchg
push
add
add
call
add
loop
inc
add
adc
ljmp
rcrb
mov
in
mov
add
dec
movl
add
aam
ds
jmp
sahf
xor
in
add
dec
xor
ss
dec
aam
mov
ds
mov
cmp
add
dec
or
add
mov
shlb
add
add
mov
rcrb
out
mov
into
cld
xlat
jne
cmpsb
add
add
dec
jbe
add
mov
not
jo
jmp
adc
pushl
add
addl
add
add
adc
lret
dec
das
ficoms
out
adc
in
dec
addl
dec
addl
sbb
xlat
mov
add
roll
aam
sbb
add
mov
mov
inc
add
inc
add
loop
cmp
add
add
xchg
das
js
add
sub
jecxz
push
add
mov
ja
add
insl
mov
cmp
add
lea
add
and
call
jno
call
add
sbb
inc
add
ficoml
add
sbb
add
movl
add
filds
outsb
and
add
mov
add
std
cmpsb
add
add
in
xor
call
add
and
aad
jns
add
and
call
pop
mov
add
and
jmp
add
fnstcw
cwtl
or
aas
mov
cmpsl
add
add
sahf
mov
sbb
add
incl
xor
cmp
imul
lods
add
inc
add
inc
add
mov
test
push
add
add
jbe
out
dec
scas
push
stos
mov
imul
push
add
push
fwait
sbb
mov
or
xchg
adc
add
add
pushl
call
ret
add
cwtl
mov
int
pop
xchg
xchg
and
incl
call
fnstenv
in
divl
adc
pushl
mov
push
add
sbb
addl
jge
imul
movsl
add
ljmp
add
pop
jl
add
sub
js
fstl
jmp
add
add
or
mov
arpl
decl
xchg
push
inc
add
js
dec
aas
dec
lcall
incl
lret
lret
add
jmp
add
cmpsl
add
loop
dec
out
jns
pop
sbb
inc
add
rolb
add
push
add
out
rolb
dec
or
lcall
push
loop
test
add
cmp
je
inc
add
fnsave
add
push
jp
jmp
jne
add
cmp
clc
inc
add
in
std
cltd
aam
add
jnp
pushf
leave
push
add
fdivs
nop
mov
add
test
cmpsl
add
sub
rolb
or
pushf
mov
addb
jne
rolb
fdivrs
push
clc
test
hlt
and
call
mov
lcall
add
add
bndstx
repz
mov
jmp
add
xor
add
movb
pop
in
loop
pop
xchg
cmpsl
add
push
sahf
in
mov
clc
es
fsts
add
cmp
push
add
or
add
stc
pop
cmp
addl
daa
add
add
sahf
pop
jno
ljmp
inc
add
sub
adc
lcall
add
push
js
add
sbb
mov
add
add
inc
add
stos
xor
pushf
add
call
xchg
or
jecxz
data16
and
jmp
add
pop
imul
jo
call
add
dec
test
push
pop
cli
sbb
add
test
aam
add
add
push
xchg
mov
add
add
add
outsb
mov
in
std
mov
add
ljmp
cltd
pop
xchg
add
stc
fisubl
aam
add
jle
pusha
add
iret
mov
shll
add
ljmp
incl
fst
adc
jmp
cmc
xchg
add
add
sbb
sub
add
add
and
jmp
add
adc
pushl
add
add
add
mov
daa
add
cltd
xor
dec
push
or
daa
add
aaa
add
and
dec
push
push
add
xchg
popf
popa
add
notl
add
or
pushf
add
insl
or
adc
jmp
add
add
aas
adc
decl
sbb
add
push
ds
add
loopne
insl
pop
jb
cmp
mov
xchg
hlt
jb
pushl
add
add
pop
ja
add
add
js
jnp
in
jmp
iret
sbb
ljmp
add
adc
lcall
add
bound
inc
add
add
xchg
into
roll
add
mov
push
in
ret
add
ret
add
add
inc
add
dec
addb
cmp
jg
add
dec
mov
ds
aad
cmc
xchg
pusha
add
pop
jns
into
loop
push
and
int
add
and
cli
lods
mov
add
pushl
mov
sbb
rolb
add
in
jecxz
and
jmp
aad
add
std
pop
out
cmp
or
add
push
inc
add
imul
call
rclb
and
ljmp
cmpsl
add
add
xchg
fisubs
pop
mov
call
out
fwait
rcl
cltd
cmp
mov
add
call
fistpll
sbb
pop
addb
add
adc
add
fidivs
incl
imul
jo
incl
incl
jmp
add
mov
jae
incl
add
gs
xchg
mov
call
and
inc
add
add
add
dec
imul
add
add
jnp
dec
and
jmp
fnstsw
loope
out
jns
rolb
sub
add
pop
imul
add
data16
add
add
pop
bound
inc
add
dec
and
mov
mov
cmp
add
sub
jno
lcall
add
ficoms
mov
adc
add
xchg
iret
adc
ret
mov
add
add
stos
mov
add
loopne
or
add
jp
add
dec
popa
add
std
jge
add
mov
inc
add
dec
push
call
push
add
aam
add
dec
push
add
add
loope,pt
call
addl
add
xchg
fisttps
sbb
inc
add
movsb
add
add
mov
add
sub
push
xor
call
add
sub
add
outsb
dec
mov
add
pop
dec
fstp
push
negb
shll
add
repz
stc
xor
incl
and
push
inc
add
jecxz
imul
dec
sahf
sub
cwtl
and
pop
add
xor
decl
push
push
icebp
ds
mul
add
mov
fidivs
lcall
test
push
and
jmp
lcall
or
add
cmp
mov
call
decl
popa
add
lea
adc
jmp
xor
decl
jns
add
add
out
xchg
mov
mov
pop
mov
aaa
imul
or
inc
add
filds
lea
addl
add
xchg
sbb
cmp
adc
inc
add
lds
mov
or
scas
sbb
bound
decl
mov
cmpsl
add
sub
lcall
scas
add
movb
fiadds
decl
pushf
test
and
call
jns
add
push
add
loop
or
add
jmp
add
ljmp
in
sub
add
add
pop
fxch
mov
or
xor
js
add
lcall
pushl
pushl
pushl
add
add
push
jbe
add
and
jmp
jmp
add
das
sub
cmp
xchg
roll
add
add
fdivl
add
int3
sub
testb
movb
mov
add
mov
add
dec
jbe
mov
pop
fucom
add
roll
mov
add
out
add
jmp
add
addl
loop
xchg
sub
cmp
ss
movb
xlat
jno
fucomip
xchg
jne
add
cld
mov
xor
out
sub
mov
add
std
sahf
daa
add
jo
call
jae
lods
jae
inc
add
je
xchg
shlb
or
add
aas
cmp
fistl
add
addr16
mov
mov
add
mov
jg
push
add
lea
add
sti
dec
and
pushl
add
sub
jg
or
add
fwait
pushf
out
and
notb
add
lcall
or
add
cmc
cmpsb
add
sbb
add
cmpsb
add
pop
scas
mov
cli
push
add
mov
add
sub
repnz
add
xor
add
ljmp
pop
inc
add
add
mov
in
mov
dec
popf
ja
xchg
in
jnp
mov
imul
xor
adc
incl
rolb
stc
es
das
adc
jmp
add
jns
push
add
test
psubd
inc
add
cmp
shll
std
pop
call
fdiv
test
jo
decl
sti
aas
mov
jne
add
add
stc
xchg
rolb
fcoms
ds
push
xchg
movsb
add
add
inc
add
add
not
in
adc
lcall
add
mov
ja
add
add
pop
sbb
add
decl
jbe
scas
lods
jb
pushl
insl
test
incl
mov
sbb
adc
add
roll
mov
dec
xchg
addb
and
dec
cwtl
fnstcw
add
add
add
cmp
add
push
jle
roll
sbb
adc
ljmp
call
jbe
add
fisubl
imul
and
ljmp
ljmp
data16
add
loop
outsb
sub
lea
imul
sbb
add
add
add
decl
cvttps2pi
cmpsl
add
js
popa
add
iret
jmp
sbb
jg
add
sub
push
mov
negb
cmpsb
add
das
aaa
mov
add
jmp
lock
je
xchg
cs
mov
add
mov
mov
lcall
add
xor
decl
dec
rep
out
icebp
pop
adc
nop
in
movsl
add
jb
call
add
cmp
decl
add
imul
add
loope
fimuls
mov
add
stos
popf
test
dec
jo
pushl
ljmp
add
inc
add
mov
add
fldcw
js
add
add
add
jle
bound
mov
add
add
insb
mov
push
mov
sub
dec
bts
push
mov
incl
pushl
inc
add
sub
or
mov
pop
int3
lahf
fldenv
aam
dec
dec
test
add
push
add
data16
add
pushl
hlt
sbb
pop
sahf
push
sbb
out
xor
ljmp
sub
js
add
xchg
mov
add
sbb
and
mov
push
into
cwtl
in
mov
add
les
clc
add
das
out
pop
loope
add
push
mulb
add
roll
arpl
clc
adc
ljmp
mov
mov
add
mov
add
xor
add
add
lcall
add
sti
mov
fistl
popa
add
roll
add
xor
mov
sub
inc
add
rcrl
in
sub
xchg
fstpt
ror
jne
jae
call
lcall
pop
addl
add
repnz
fdiv
movb
add
push
add
movaps
cmp
pop
add
lcall
stc
jns
dec
pandn
jmp
dec
enter
into
mov
fimuls
shlb
add
les
rolb
xor
mov
enter
jle
pop
xchg
sbb
daa
add
xor
incl
inc
add
pop
out
stos
sub
pop
xchg
movb
add
jbe
add
push
add
inc
add
mov
lods
mov
add
cmc
jecxz
xlat
ja
add
add
pop
mov
add
pop
jns
add
mov
add
inc
add
sarb
adc
jmp
pop
push
add
lret
cli
pop
pop
add
iret
mov
pop
add
add
add
add
decl
or
add
scas
mov
loope
cmp
jns
cmp
aam
add
jnp
push
add
scas
outsb
jp
add
fs
add
mov
lret
mov
add
addb
add
dec
add
add
xchg
rclb
jl
testl
pop
add
enter
mov
cld
and
cmp
mov
out
jae
jmp
add
jbe
add
stos
mov
call
fidivs
rolb
pop
cltd
mov
add
lret
lret
call
mov
add
add
test
mov
mov
in
jle
mov
add
or
dec
or
add
repz
add
add
repz
cmpsl
add
add
add
mov
jb
inc
add
inc
add
ficoml
lods
decb
push
mov
repnz
stos
ds
add
or
clc
sbb
daa
add
add
lods
xlat
out
fsubrl
addb
addl
enter
adc
decl
add
jecxz
in
xor
incl
mov
popa
add
lea
js
lods
and
decl
out
mov
dec
pop
mov
jle
out
add
decl
test
repz
call
add
bound
ljmp
jne
and
addb
add
add
mov
add
lcall
mov
or
clc
lds
or
add
inc
add
adc
call
dec
and
inc
add
aad
daa
add
add
bnd
jnp
mov
adc
cmp
add
pop
bound
lcall
clc
push
add
lcall
cmp
add
cmp
add
jmp
add
neg
pushf
std
mov
add
add
mov
call
add
stos
outsl
scas
inc
add
movl
ss
xor
pushl
cmp
aas
je
or
add
add
add
imul
test
lcall
call
aaa
push
xchg
outsl
inc
add
in
mov
sti
sti
je
sbb
add
and
decl
add
out
leave
stc
mov
add
jne
adc
jmp
add
mov
fldl
lret
movsb
add
lds
jp
in
mov
fidivrs
cmp
xor
call
add
jns
add
in
sub
pusha
add
cmc
pop
out
out
test
loop
cmpsb
add
xchg
ljmp
jg
add
add
inc
add
into
adc
fidivl
fcmove
add
and
decl
lahf
rolb
add
add
loopne
cmp
inc
add
pop
dec
mov
icebp
pop
into
scas
cmc
add
ljmp
or
add
mov
ret
add
add
cpuid
add
in
out
out
push
fxch
int3
icebp
sbb
add
cmp
enter
add
pop
loope
stc
pop
mov
mov
scas
ficomps
add
imul
mov
mov
addb
xchg
out
movb
ljmp
add
add
mov
sub
mov
add
push
add
sarl
ret
add
imul
sbb
cmpsl
add
add
add
ljmp
ret
inc
add
or
sbb
add
mov
lcall
add
sbb
push
add
pop
scas
sbb
dec
jg
daa
add
xor
cmp
jnp
mov
xchg
or
xor
incl
popf
cwtl
xor
inc
add
add
out
xchg
dec
ret
cmp
add
pop
and
incl
add
call
push
das
cli
add
js
sub
insb
and
aad
cmpsb
add
push
add
shlb
test
lcall
dec
iret
movsb
add
cmc
out
ja
jno
dec
mov
add
cmpsl
add
les
test
rolb
cmpsl
add
add
cmp
add
dec
xchg
lods
sbb
xor
decl
loope
xor
decl
add
jb
lcall
add
and
call
jns
in
jnp
cmp
pop
mov
add
incl
adc
add
iret
lods
jno
lcall
or
lea
and
dec
mov
mov
ret
add
ret
add
fstps
in
add
daa
add
add
jmp
call
add
push
das
adc
pushl
xchg
push
out
add
add
jns
int3
sub
add
add
out
sbb
lcall
and
in
adc
dec
dec
loop
loop
mov
add
dec
enter
xchg
dec
nop
les
mov
sub
add
ja
add
data16
add
add
add
jmp
add
lds
sbb
or
cld
pushl
mov
add
imull
and
call
adc
ljmp
jnp
adc
jmp
add
call
add
lcall
lcall
sbb
mov
add
jle
push
add
jbe
roll
add
jle
out
dec
push
jmp
xor
add
and
dec
int3
mov
add
add
add
add
inc
add
pushf
or
xlat
xchg
mov
pop
enter
add
adc
lcall
mov
cmp
aam
pop
pop
jnp
add
sub
inc
add
addl
dec
roll
add
add
add
push
xchg
adc
ljmp
imul
sub
add
inc
add
add
jp
dec
cmc
out
into
lock
inc
add
cmp
insb
or
push
leave
out
addb
mov
pop
call
decl
add
jo
incl
add
arpl
jmp
decl
mov
mov
add
lcall
pop
sub
lock
loopne
dec
push
add
jo
fcoms
add
stos
add
mov
xchg
adc
sti
push
add
addl
add
jns
sbb
ss
add
rclb
sub
add
add
mov
test
test
fsubl
fildl
xor
lret
sti
jle
rolb
roll
inc
add
push
add
mov
movsb
add
cmpsb
add
dec
jbe
add
adc
incl
test
mov
das
mov
inc
add
xlat
jbe
add
negb
dec
loop
mov
add
popa
add
test
sub
es
add
add
stc
dec
jle
add
push
add
add
in
mov
add
adc
cmp
xor
in
loop
pop
repz
fsts
ret
add
ret
add
ljmp
add
pop
add
add
jb
incl
lock
add
dec
pop
into
sbb
filds
and
pushl
add
outsl
dec
and
decl
ret
mov
and
incl
sbb
add
call
add
cli
mov
cmp
add
outsb
ffree
add
cmp
add
sti
mov
mov
sti
adc
decl
mov
or
sub
add
dec
ss
dec
mov
add
add
push
fnstsw
add
cltd
xchg
jmp
add
fldl2t
fdivs
add
cwtl
insl
or
ljmp
mov
addb
or
xchg
roll
add
addb
push
add
xchg
dec
popf
dec
jg
add
add
push
fistpll
mov
add
jge
add
xlat
sbb
add
adc
call
inc
add
add
or
fwait
dec
jl
stos
cmovnp
cwtl
pusha
add
xor
decl
pusha
add
sbb
movb
add
add
loope
dec
mov
add
cmc
movl
std
dec
xchg
dec
das
dec
divb
add
mov
dec
inc
add
mov
mov
loope
mov
add
fbstp
add
mov
dec
imul
repz
test
scas
addl
add
add
inc
add
fdivrs
ss
push
add
idivb
mov
ss
add
pop
sbb
add
xor
jmp
add
js
mov
jge
mov
pushl
add
aas
xor
jmp
xchg
stos
pop
lret
loop
push
add
mov
push
add
jmp
leave
and
jmp
add
add
add
xchg
dec
test
or
adc
cmp
daa
add
shlb
movl
mov
xor
call
iret
add
lret
lret
add
add
cmpsl
add
call
test
ja
out
push
add
les
sbb
add
cli
icebp
xchg
inc
add
lcall
xchg
xor
js
add
push
add
mov
incl
add
jns
mov
add
add
add
add
popa
add
pop
dec
aaa
xor
lcall
add
jmp
add
and
decl
mulb
int
loopne
mul
add
fistl
push
stos
inc
add
xor
jmp
xchg
addb
mov
mov
add
add
in
xchg
inc
add
jle
add
adc
call
ljmp
add
add
mov
imul
add
movsl
add
loope
inc
add
fcomip
addb
mov
dec
aam
sub
add
or
pushf
push
in
sbb
add
adc
cltd
mov
adc
incl
add
mov
sbb
or
add
add
jmp
add
jmp
or
mov
dec
jecxz
jne
shll
pushl
pop
mov
or
add
arpl
ljmp
add
add
jae
call
add
xor
cmp
and
xor
jmp
push
push
push
add
sub
add
dec
out
into
jae
call
iret
push
scas
pop
sub
movl
pop
ss
pop
test
sti
add
add
xor
jge
les
push
add
add
sbb
push
add
sub
cmp
xor
ljmp
in
jae
call
mov
mov
pop
or
mov
mov
addb
add
add
sbb
inc
add
imul
add
incl
sub
sahf
push
mov
add
repnz
dec
or
pusha
add
insl
inc
add
iret
mov
aam
stos
mov
mov
pushl
lcall
add
cltd
addb
scas
dec
and
sub
dec
sub
pushf
push
add
sbb
adc
cmpsl
add
inc
add
mov
cmp
lcall
inc
add
mov
add
insl
rcrb
pop
jns
sarl
xchg
xor
ljmp
inc
add
add
add
cmp
add
dec
xchg
out
fisttps
xlat
push
add
stos
pop
mov
add
loop
and
in
jnp
std
ja
add
je
push
inc
add
mov
push
data16
fiadds
or
push
cld
call
add
dec
pop
lcall
jns
fldcw
xchg
jle
and
ljmp
lcall
mov
rcrl
jp
test
repnz
add
mov
add
dec
dec
pop
jg
jnp
add
add
int
add
adc
mov
inc
add
fiadds
add
fidivs
add
dec
mov
xor
call
loope
or
pushl
jg
add
ret
add
push
add
cmp
inc
add
xor
mov
scas
xchg
dec
les
aam
mov
out
cmpsb
add
and
xchg
js
mov
jp
xchg
lods
push
add
add
add
pop
roll
rcrl
or
test
out
lret
sub
aaa
pushf
into
and
push
loop
sub
jns,pn
fistpll
jo
dec
xchg
filds
add
add
add
div
into
data16
enter
repz
pusha
add
test
pop
fidivl
add
add
inc
add
jmp
cmp
dec
mov
call
int3
fidivs
or
add
rolb
movb
jg
dec
push
pushf
jl
mov
xchg
scas
mov
add
aam
xlat
out
cld
dec
jns
mov
sti
divl
add
push
add
enter
add
mov
test
mov
add
add
movsl
add
aas
mov
add
aad
add
addl
add
add
fcom
lret
mov
add
sub
push
fdivrp
cmp
pop
mov
add
ds
movb
fildl
add
jae
ljmp
xchg
in
movsl
add
lds
test
inc
add
add
add
scas
popa
add
das
rorb
cmc
cmc
xlat
popa
add
sub
clc
iret
ret
loopne
mov
rolb
cmpsl
add
cmp
scas
pop
pop
mov
icebp
loopne
or
push
pop
aaa
pop
xlat
sub
add
fldl
add
addl
pop
add
adc
add
xchg
out
xor
add
pop
add
mov
mov
lea
push
add
mov
arpl
jmp
sub
mov
push
push
add
mov
add
call
add
out
inc
add
enter
add
mov
add
aas
push
das
loop
fcomps
out
jae
jmp
add
sbb
jecxz
sub
xchg
pop
push
inc
add
add
movsb
add
xchg
les
movsl
add
push
add
mov
add
test
repnz
xchg
lcall
cltd
and
decl
outsb
xor
pushl
add
lcall
mov
add
dec
lahf
and
incl
add
or
ljmp
inc
add
mov
add
pop
in
push
add
mov
decl
or
and
pushl
and
jmp
mov
xchg
lret
mov
dec
bound
out
imul
add
pushl
ljmp
add
sbb
add
add
add
or
rcl
add
gs
add
fcoml
add
inc
add
sub
pop
or
mov
add
imul
add
hlt
repnz
cmp
add
push
bound
jnp
lock
pushl
sub
add
lcall
push
xor
mov
and
test
sbb
add
decl
fcomps
test
mov
arpl
incl
add
jle
add
sub
add
xor
lcall
add
call
add
push
shld
xchg
loope
and
incl
add
pop
in
dec
test
add
pop
push
add
out
outsb
inc
add
push
add
cmp
add
add
aam
add
mov
add
dec
loope
daa
add
jnp
roll
popa
add
rolb
jns
add
in
adc
pushl
add
add
ficoms
add
insb
mov
incl
add
pop
jmp
jbe
add
aas
arpl
cli
cli
jle
add
or
add
sahf
insl
mov
ljmp
iret
pop
lods
add
xchg
cmpsl
add
xor
cmp
add
add
and
dec
push
stc
and
lcall
jp
lahf
or
lea
mov
in
roll
lcall
add
mov
mov
xchg
cmpsl
add
incl
jmp
mov
popf
rclb
decl
jle
add
adc
stc
je
add
xchg
shrl
mov
sahf
das
mov
and
and
dec
in
fimull
cmp
dec
sbb
push
add
incl
add
add
push
pushf
mov
fs
out
dec
inc
add
cmp
repz
push
adc
jmp
filds
lahf
or
fs
or
add
movsl
add
add
add
adc
jmp
add
ret
push
fldt
fimuls
jno
ljmp
dec
xor
jl
push
mov
and
jmp
add
add
sub
test
clc
lea
add
adc
into
adc
call
add
loopne
sub
lcall
inc
add
mov
xchg
jno
ljmp
rolb
pop
add
add
add
pop
add
pushl
push
push
add
lret
in
dec
adc
jmp
adc
jmp
mov
cmc
fidivrl
nop
xor
decl
in
mov
mov
mov
call
add
jbe
xchg
adc
lcall
hlt
into
pop
adc
pushl
add
das
and
call
mov
and
jmp
add
jp
add
push
insb
xchg
xchg
shr
add
ljmp
pop
pop
fcompl
ret
add
add
insb
mul
add
jo
decl
fnstenv
xchg
mov
ljmp
data16
incl
add
pop
insb
shr
jl
add
jmp
inc
add
lahf
in
or
mov
xor
jmp
add
or
xchg
roll
mov
add
add
sub
cmp
and
call
add
cld
lcall
mov
push
add
pop
sub
mov
iret
stos
pop
inc
add
jno
incl
add
sbb
sarl
mov
inc
add
and
mov
push
jmp
add
inc
add
shll
cmp
add
add
add
in
movsl
add
stc
movb
jno
pushl
inc
add
ljmp
push
lcall
in
imul
add
push
add
add
jne
add
lods
dec
pushf
sbb
mov
addb
loope
scas
mov
add
gs
mov
mov
sbb
clc
movsl
add
lcall
ds
push
xchg
mov
inc
add
cmp
add
fdivrs
jl,pn
dec
adc
decl
mov
lret
add
stos
sbb
add
ljmp
sbb
add
adc
pushl
call
add
lods
and
lcall
out
imul
or
add
in
lahf
jmp
lahf
xor
jmp
ja
aas
xchg
adc
mov
mov
outsb
push
add
arpl
call
imul
call
addl
dec
out
outsl
cmp
lcall
inc
add
add
add
out
dec
mov
fcmove
mov
ljmp
jle
xchg
xor
call
add
mov
stos
sbb
lret
add
popf
imul
lods
cmp
add
pop
and
adc
mov
add
mov
xor
addb
lret
add
cmpsb
add
les
out
add
inc
add
add
std
les
jno
dec
inc
add
outsb
mov
fstp
push
cld
cmp
sahf
add
jmp
add
sub
add
ljmp
inc
add
sti
in
ljmp
cld
xlat
addl
sub
shlb
in
imul
xor
lcall
lods
call
cmpsl
add
add
adc
incl
jns
add
jp
jp
jg
or
les
mov
ret
add
adc
fdivs
mov
int
mov
mov
movsb
add
add
out
fwait
addl
add
xor
add
dec
insl
das
sbb
add
add
popf
mov
mov
ja
pop
dec
fdivs
add
and
pushl
add
jmp
add
fmuls
fisttps
cs
test
mov
add
call
mov
add
sub
pop
mov
or
add
mov
add
lods
inc
add
mov
sub
mov
cmc
mov
add
push
mov
sbb
add
add
pop
pop
lret
incl
call
mov
add
add
and
mov
aas
roll
add
or
fcoml
jbe
add
dec
sarb
inc
add
jnp
add
cmp
adc
and
cli
jo
fildll
push
dec
jmp
lock
bound
call
aaa
xchg
into
ljmp
sti
cltd
adc
add
add
inc
add
das
pop
addl
add
jae
pushl
das
mov
fsubr
addb
ds
add
mov
add
mov
cwtl
sub
add
mov
fisttpl
jp
aaa
test
addb
daa
add
ret
cmp
add
mov
mov
inc
add
call
daa
add
add
add
xor
jmp
add
add
add
fisttps
hlt
insl
inc
add
jb
jg
aas
addb
add
out
push
pop
add
add
lcall
add
sbb
in
js
iret
arpl
jns
repz
ret
add
sti
sub
shl
adc
decl
inc
add
add
sbb
inc
add
bound
call
addl
add
movsb
add
add
sbb
hlt
push
pop
add
add
fcmovb
add
shlb
ficomps
mov
sarl
addb
jge
pop
adc
push
in
pop
insb
pop
add
lahf
mov
pushl
jmp
add
jbe
imul
add
cmp
xchg
imul
push
or
mov
add
push
jo
call
add
add
add
cltd
adc
ljmp
jns
mov
lea
add
mov
outsb
aam
xchg
push
inc
add
sub
add
push
push
add
bound
lcall
add
add
xchg
dec
pusha
add
and
call
xchg
outsb
std
adc
jmp
add
inc
add
jl
add
add
ficoms
push
mov
adc
add
into
mov
add
and
or
add
adc
incl
cmp
add
addb
add
decl
add
add
xor
dec
out
mov
add
pushl
insb
add
decl
add
fstpl
push
add
lcall
imull
push
add
cli
jp
sub
or
add
lcall
add
or
inc
add
mov
add
adc
sbb
add
add
pop
repz
fildl
add
sub
add
jmp
add
add
icebp
sub
mov
push
add
loope
and
ljmp
pop
inc
add
js
add
movsl
add
lcall
popa
add
icebp
std
adc
call
add
add
incl
outsl
outsb
mov
fwait
aad
jns,pn
add
add
dec
ret
and
lcall
mov
add
mov
icebp
out
lret
xor
decl
mov
into
push
fsubrl
pop
mov
add
jg
add
and
add
jg
inc
add
add
out
xchg
push
add
pushf
mov
pop
test
add
push
add
ljmp
add
add
and
fwait
sti
repz
decl
or
add
add
xchg
dec
xor
add
pushl
and
loope
push
add
mov
xchg
xor
incl
mov
mov
add
add
adc
jmp
add
mov
lds
ja
iret
lock
fldt
add
pop
jb
lcall
adc
xchg
sub
inc
add
in
in
cmp
add
fistpl
and
inc
add
mov
nop
imul
push
fidivl
push
cli
dec
mov
jmp
add
add
call
add
fstl
and
lcall
aad
or
test
add
add
mov
mov
lahf
daa
add
jmp
add
push
add
push
jecxz
data16
rolb
lret
ja
mov
call
mov
lock
sub
decl
incl
lcall
inc
add
sub
add
inc
add
cmc
lcall
jae
decl
mov
int3
xor
in
mov
and
pushl
sbb
sub
xchg
lds
addr16
ja
dec
pop
shlb
cwtl
sahf
test
notl
cld
fxam
add
cmp
push
add
sub
add
adc
add
cmp
das
dec
pop
insl
mov
or
sahf
add
outsb
out
out
pop
sbb
out
lds
negb
lds
arpl
jmp
add
add
sub
mov
add
je
add
out
xor
pop
adc
lcall
cmpsb
add
mov
jecxz
pop
mov
imul
into
arpl
lcall
xor
mov
jbe
add
push
fidivrl
add
jne
in
out
out
icebp
xchg
fwait
push
or
xchg
push
add
stc
xor
push
push
mov
decl
sbb
jg
add
jmp
mov
add
mov
push
mov
movb
scas
dec
or
add
fcmovu
and
pushl
jns
add
adc
jo
pushl
jg
in
mov
incl
xchg
les
nop
push
add
add
popa
add
pause
xchg
fincstp
ja
add
add
decl
push
pop
adc
call
add
loop
jle
or
scas
dec
sub
jg
mov
inc
add
add
xor
dec
cmp
movsl
add
jp
add
movl
add
add
pusha
add
and
lcall
add
into
cmpsb
add
loop
sub
add
pop
pop
je
lcall
xchg
xor
add
addb
movsb
add
add
out
testb
sbb
add
mov
rol
add
jge
mov
push
sub
add
cltd
sbb
fsubl
decl
push
arpl
ljmp
mov
jmp
repz
add
insb
sub
lret
addl
popf
ja
add
jnp
lds
stos
sbb
push
xchg
aas
setae
ljmp
add
mov
inc
add
aaa
cmp
sub
jmp
mov
aam
add
sbb
adc
lcall
mov
addl
add
jl
xor
lcall
add
mov
lret
xchg
adc
lcall
decl
add
jmp
stc
push
add
pop
dec
mov
cld
cmpsb
add
jmp
push
cmpsl
add
add
icebp
mov
add
popf
das
jns
repnz
pop
add
add
jo
incl
add
sbb
decl
enter
repz
cmc
jnp
add
mov
bound
decl
add
pop
mov
out
push
xor
lcall
fadd
add
jmp
fsubrl
add
mov
insb
pop
lods
movl
add
dec
sbb
xchg
push
xchg
cmpsl
add
jne
test
fucom
add
add
xor
in
sbb
sub
xchg
bound
jmp
or
push
mov
cld
xchg
cmp
int
inc
add
cli
movsb
add
pop
add
add
outsl
push
and
roll
lret
ja
jle
pop
push
divb
pushl
add
aad
mov
xchg
ljmp
pop
mov
add
das
ljmp
inc
add
xor
inc
add
pushl
std
loopne
inc
add
inc
add
sub
addb
addl
pop
mov
add
add
mov
pop
rorb
addl
add
jb
inc
add
add
lea
call
lcall
and
out
adc
ljmp
xlat
call
sbb
jae
jmp
shrb
add
add
xchg
add
ljmp
lcall
add
add
addb
mov
add
mov
fidivl
call
xchg
js
ror
pop
inc
add
ret
add
sub
add
dec
and
decl
insl
xchg
push
mov
ljmp
add
test
lret
jmp
add
cmp
in
loop
mov
sar
pushf
mov
adc
stc
mov
loope
xchg
xor
mov
and
decl
add
cmc
scas
push
pushl
add
xchg
jmp
add
add
add
dec
fistl
dec
adc
decl
addb
cld
dec
int
add
add
cmp
aam
sahf
scas
dec
addb
sub
add
cmp
or
add
outsb
xchg
add
lcall
jmp
push
das
mov
faddp
add
int
or
add
add
aam
jp
xor
lcall
mov
pushl
les
cli
fdivrs
push
stos
into
out
mov
add
sarb
sub
add
lahf
mov
movl
add
dec
pusha
add
repz
pusha
add
jge
add
leave
add
call
lret
les
inc
add
add
jae
lcall
mov
sbb
lcall
movsb
add
inc
add
add
ds
jns
push
add
add
add
add
xor
call
jmp
mov
cmc
jl
addl
cmp
add
pop
pop
in
dec
add
jmp
add
add
xchg
sbb
lret
nop
cmp
cltd
test
cwtl
mov
inc
add
add
xchg
mov
leave
cli
in
fsubs
xor
incl
jecxz
sbb
daa
add
add
xor
ss
mov
add
mov
cli
or
dec
call
sub
add
add
add
jmp
add
pop
inc
add
nop
xchg
fcoml
jmp
call
call
dec
jnp
in
je
add
dec
mov
add
scas
addb
add
loop
jnp
adc
incl
add
rcrl
xor
xchg
push
mov
add
out
and
ljmp
jle
pop
loopne
sarl
add
cmpsl
add
sub
repnz
add
sub
test
dec
lods
in
ja
pop
das
and
incl
add
xchg
mov
add
sti
popf
mov
lods
pop
test
add
mov
xchg
outsl
sti
imul
or
mov
add
mov
roll
add
add
jg
add
mov
xchg
jl
sub
roll
jmp
pushl
popa
add
cmp
add
mov
add
push
notl
mov
add
rclb
add
lods
xchg
mov
jp
jbe
aad
mov
sub
lcall
add
inc
add
jbe
add
lea
dec
das
xchg
jbe
add
out
sub
xor
or
or
add
roll
add
imul
roll
add
mov
add
fists
inc
add
loop
mov
or
out
ret
add
movsl
add
or
mov
cli
movsl
add
fiadds
add
stc
ljmp
lret
mov
xchg
aaa
ljmp
int
movl
add
pop
stc
repz
jmp
loope
cmp
shlb
add
dec
or
add
mov
call
mov
push
sbb
sbb
push
cmp
pushl
incl
lods
or
dec
mov
add
test
out
or
xchg
inc
add
cmp
and
call
leave
pushf
pusha
add
lods
sqrtps
decl
scas
xor
call
add
ficomps
cmp
add
xchg
xor
push
sti
pop
add
dec
xor
test
ret
mov
mov
incl
add
iret
mov
inc
add
adc
lcall
imul
jb
dec
pop
mov
fs
inc
add
cmp
adc
nop
sub
xchg
or
mov
popf
push
add
or
fimuls
cwtl
aas
pop
cmp
movsl
add
or
add
movb
add
out
cmpsb
add
or
sti
sbb
add
jl
cmp
xchg
fisttps
add
add
xor
inc
add
jecxz
dec
jmp
add
dec
push
add
pop
daa
add
mov
aam
add
jl
testl
add
insl
jb
ljmp
lcall
xchg
pop
test
add
stc
insb
jmp
push
jg
add
cmp
pop
roll
add
scas
jnp
add
dec
or
add
out
sub
sbb
mov
add
dec
mov
push
rcrb
ss
push
dec
in
sbb
add
push
sub
pop
dec
sub
call
stos
addl
fcmovnb
add
add
data16
pop
roll
imul
mov
add
sbb
add
popf
mov
ljmp
sbb
add
add
fsubr
in
imul
cmp
fnsave
test
add
jp
or
adc
and
call
je
cmp
add
or
outsb
inc
add
add
mov
lret
lret
mov
dec
mov
add
xor
dec
lret
decl
xlat
sub
notb
call
add
mov
pop
test
iret
dec
dec
insb
push
add
sahf
cmp
out
aam
js
imul
or
enter
movsb
add
inc
add
leave
adc
pushl
cmpsb
add
shll
cld
add
out
push
add
add
jb
dec
push
add
rorl
xchg
stos
or
outsb
ss
add
cmp
pop
or
dec
pop
sar
in
divl
push
sbb
add
and
push
sbb
addl
jmp
mov
xchg
xchg
cmp
and
incl
cmp
adc
pop
iret
insl
outsl
inc
add
imul
add
sbb
mov
in
das
and
lcall
fstpl
enter
pop
bound
incl
add
push
movlps
jmp
add
mov
mov
add
adc
decl
sub
add
lret
add
or
movsb
add
jae
call
sbb
push
test
mov
sub
add
addb
ss
divl
add
mov
jns
stc
xchg
add
dec
adc
ljmp
repz
add
add
dec
in
jo
lcall
lahf
test
and
fcmovnu
push
addl
cltd
dec
pop
adc
jmp
add
jecxz
add
mov
lcall
mov
cltd
aam
add
cld
movb
in
mov
dec
xchg
jmp
add
add
jb
jmp
dec
roll
add
add
lcall
add
popf
fiadds
add
insl
mov
xor
incl
aaa
inc
add
movsb
add
nop
xchg
pop
mov
add
jns
add
jmp
add
addb
test
mov
add
pop
add
mov
xchg
dec
mov
cli
inc
add
sub
ja
add
fnsave
dec
ds
sbb
xchg
add
incl
add
jo
push
cmp
mov
add
xchg
popf
dec
dec
pop
jp
popf
sbb
mov
inc
add
sub
int3
hlt
lock
call
call
add
jge
xchg
mov
add
out
jg
add
xor
decl
mov
sbb
ljmp
lcall
cmp
lods
shl
int
add
jno
lcall
test
xlat
enter
xlat
scas
fisttpl
add
add
jecxz
pop
lcall
sbb
pushl
pop
jns
ret
add
shlb
add
sub
add
add
enter
xor
ljmp
add
sub
jnp
add
add
in
jbe
inc
add
lds
cltd
inc
add
imul
lods
jmp
add
addb
or
dec
and
lcall
in
stc
or
add
jg
add
add
lcall
rcrb
loopne
xchg
sbb
pop
sbb
cmp
xchg
test
leave
push
pop
fmuls
add
jle
mov
mov
add
jecxz
push
add
add
sub
push
xor
ljmp
add
bound
inc
add
dec
aas
cmpsl
add
xor
push
mov
xchg
xlat
adc
lcall
or
add
push
pop
mov
add
add
fcoms
add
add
add
ljmp
mov
adc
pushl
ss
add
fidivrs
mov
add
in
sub
add
add
pop
and
call
add
lcall
jmp
std
in
mov
add
int
and
stos
enter
scas
movb
pop
out
inc
add
jnp
repnz
sbb
add
push
add
enter
aaa
fwait
add
std
pop
jmp
mov
fbstp
scas
push
add
fmulp
dec
mov
icebp
loop
rcl
mov
add
mov
add
add
add
dec
fisttpl
mov
lret
dec
loopne
fbstp
dec
sub
inc
add
addl
add
decl
data16
pop
and
jmp
add
shrb
add
decl
ljmp
add
movsb
add
add
pop
add
push
add
lods
xchg
or
lcall
add
out
sub
lds
outsb
adc
add
mov
add
and
jmp
decl
rolb
mov
mov
add
data16
pop
imul
add
add
add
outsb
mov
add
imul
ljmp
ljmp
add
addl
in
les
pushf
jb
pushl
add
add
and
pushl
pushl
add
add
cli
or
out
pop
jp
or
fildl
fmuls
adc
jmp
add
add
dec
sbb
addl
mov
mov
dec
movb
ret
pop
add
add
and
pushl
xchg
push
add
mov
inc
add
decl
mov
add
lcall
mov
decl
sbb
add
hlt
inc
add
lods
xchg
add
fldl
jmp
add
sbb
sub
jno
jge
cmp
out
inc
add
decl
add
das
addl
add
add
sub
add
jb
jns
popf
call
popf
int
add
sti
ret
add
add
js
scas
mov
out
xchg
jae
jmp
add
add
imul
xor
lcall
mov
out
push
add
jae
pushl
inc
add
inc
add
inc
add
popa
add
inc
add
call
js
or
imul
sarl
jg
add
decl
jecxz
mov
cmp
add
push
out
sbb
add
in
jb
call
xchg
xor
decl
mov
pop
sub
shr
iret
mov
add
js
mov
pop
idivb
or
add
lret
push
aam
add
push
add
fcmovnu
lock
shlb
decl
in
mov
pop
out
and
jmp
add
scas
test
test
mov
and
mov
add
add
sahf
xor
add
push
loopne
leave
inc
add
xor
call
loope
data16
mov
mov
sbb
mov
cmp
xchg
mov
add
adc
decl
add
xor
lcall
mov
add
jp
mov
mov
add
iret
mov
flds
add
mov
add
pop
jl
inc
add
sbb
jp
push
outsl
cmpsb
add
add
add
fcmovnbe
aam
sbb
gs
mov
rcll
pushl
add
pushf
je
mov
lcall
lcall
js
or
sbb
pop
jnp
add
push
dec
test
cmc
outsb
cmp
xchg
dec
rcrl
add
aas
popf
jns
add
add
decl
repz
or
imul
incl
add
cs
xchg
push
and
jae,pt
decl
aam
xchg
repz
fists
in
movb
add
add
ljmp
neg
push
xchg
inc
add
shl
scas
push
add
mov
inc
add
fcmovnu
mov
clc
icebp
mov
int3
inc
add
jg
and
jmp
add
mov
pop
lock
cmp
add
movsb
add
dec
sbb
ja
inc
add
add
jbe
xchg
mov
mov
adc
ljmp
xchg
arpl
fsub
add
and
jmp
add
or
add
mov
cli
adc
lcall
jo
fimull
xchg
int3
lods
imul
ljmp
test
dec
mov
and
mov
test
pavgb
mov
pop
enter
or
add
and
decl
add
add
sbb
add
sub
push
add
insb
dec
fstps
xor
inc
add
add
add
cld
ret
add
jecxz
movsl
add
xchg
jns
jp
and
sti
and
lcall
add
add
mov
add
add
push
or
pushf
addb
xor
incl
pushl
scas
push
pop
shlb
in
std
adc
incl
call
push
dec
clc
sbb
fistl
add
add
xor
decl
cs
mov
push
std
pop
add
xchg
sub
mov
mov
add
call
inc
add
outsl
mov
mov
and
aas
fisttpl
xor
pop
mov
insl
repnz
add
lods
xor
cmp
frstor
add
mov
add
js
add
add
out
outsl
or
add
jmp
add
add
sub
push
in
movsb
add
fcoml
jmp
add
add
int3
cmpsb
add
sbb
add
ret
add
add
xor
fimull
add
adc
popa
add
int3
data16
pushl
add
mov
inc
add
add
add
inc
add
cmc
cs
cmc
test
push
add
xchg
je
cltd
and
inc
add
data16
or
adc
jnp
add
mov
das
or
xchg
js
popf
das
or
add
test
xor
mov
sub
cmp
mov
add
sbb
push
add
lds
or
mov
add
call
xchg
or
jecxz
add
add
decl
mov
add
lcall
popf
cmpsb
add
add
pop
or
ret
or
or
add
add
dec
into
int
add
decl
dec
sub
out
mov
push
add
mov
add
pushf
in
repnz
loope
jle
jg
mov
add
fdivrl
add
xchg
jg
inc
add
loopne
daa
add
shrl
pop
js
dec
test
cmp
lea
and
push
inc
add
sub
add
lcall
pop
cli
and
incl
xchg
je
addb
add
cli
push
add
jecxz
pop
lock
inc
add
pop
jecxz
inc
add
add
pop
jecxz
mov
insl
add
add
lcall
idivb
inc
add
lea
add
add
out
jp
pop
jp
mov
cmpsl
add
pusha
add
mov
add
or
pop
rcrl
add
ret
add
add
aad
mov
add
add
add
xchg
push
imull
xchg
adc
lcall
mov
mov
mov
fsubl
add
sbb
xchg
call
aam
add
mov
add
dec
xchg
xor
xor
decl
cld
call
add
push
mov
add
add
add
pop
out
add
and
decl
add
imul
add
cmpsb
add
jns
add
in
pop
pop
test
sub
clc
push
add
inc
add
mov
stos
imul
add
push
add
stos
push
fwait
mov
xor
cmp
add
addl
add
in
mov
add
clc
push
pop
sub
add
dec
or
and
call
call
add
rcl
mov
add
test
or
inc
add
mov
cli
loope
ljmp
test
sbb
add
lock
jmp
add
xchg
fnsave
add
enter
add
xchg
mov
into
dec
pop
jno
lcall
addl
mov
outsl
jnp
mov
add
call
mov
jne
add
or
add
pop
roll
nop
outsb
fisubl
and
lcall
lcall
insl
push
add
bound
incl
cmp
add
sahf
and
lcall
add
lcall
add
add
adc
ljmp
icebp
iret
dec
mov
scas
aad
add
cmp
xchg
lcall
add
pop
or
mov
dec
cmp
je
loope
std
fidivl
add
xchg
mov
mov
movb
adc
ljmp
dec
cmpsl
add
pop
sub
xchg
pop
lcall
cld
or
jp
cwtl
mov
movsl
add
dec
pop
adc
jmp
add
ljmp
addl
mov
add
jbe
sub
add
data16
add
jb
jns
xchg
in
out
inc
add
add
in
sub
add
cld
pop
stos
xchg
out
and
pushl
push
cmp
movl
and
lret
test
jmp
stos
xchg
mov
or
fiaddl
jmp
dec
cmc
negl
xor
ljmp
aam
sbb
in
ljmp
add
shrb
cli
mov
in
mov
fistpl
fsubs
cmp
mov
add
inc
add
data16
js
add
movsl
add
push
jmp
inc
add
push
xor
fistps
adc
ljmp
mov
add
std
int3
xchg
sbb
add
add
mov
dec
insl
sbb
cmp
add
add
call
test
add
push
add
data16
add
and
call
pop
loop
ret
add
test
pushf
xchg
jb
lcall
sbb
rclb
sub
int3
xchg
addb
jae
ljmp
psubsw
adc
sti
fucomip
addb
push
inc
add
repz
add
add
pushf
dec
shl
add
add
jno
lcall
push
add
jbe
push
shrb
inc
add
sbb
nop
xor
addb
add
sub
faddl
shll
jmp
fnsave
add
mov
aaa
in
inc
add
adc
decl
add
dec
and
jmp
add
add
add
add
sbb
in
fadds
add
imul
mov
mov
add
bound
call
ds
pop
int
add
add
mov
std
and
dec
sar
add
into
jp
stos
roll
add
call
add
call
add
jle
fbld
add
je
dec
mov
add
out
lock
call
dec
or
ja
fstl
decb
add
outsl
jle
add
arpl
pushl
and
decl
repnz
pop
roll
and
call
fdivl
jmp
cwtl
mov
jmp
pushl
pop
arpl
stc
out
dec
test
mov
mov
add
dec
push
add
adc
jmp
incl
jmp
into
lds
mov
call
pop
cmp
add
sub
bound
ljmp
add
inc
add
sbb
jne
push
add
jl
cmp
or
shll
add
add
xchg
repz
incl
add
fistl
push
out
inc
add
push
jg
xlat
and
decl
dec
fcoml
movl
sub
ljmp
add
mov
rorb
fmull
jae
call
mov
adc
jmp
cmp
sbb
cli
scas
push
daa
add
add
mov
test
dec
mov
add
lods
add
call
jle
or
pop
mov
clc
cmpsb
add
inc
add
cmp
cmp
sbb
add
jae
incl
add
add
mov
sub
cmp
add
add
divl
imull
push
jp
int3
popf
lds
in
jne
add
dec
iret
mov
call
add
inc
add
pushl
cmp
sub
rorb
pop
xchg
movsl
add
sbb
in
roll
dec
push
cld
lods
mov
cwtl
and
jmp
push
jmp
push
stos
add
faddl
add
mov
and
jmp
add
aam
inc
add
jg
add
sbb
dec
cmpsl
add
add
enter
inc
add
or
inc
add
add
bound
push
xchg
mov
add
aad
push
aad
test
mov
aas
cmp
or
add
mov
add
pop
daa
add
adc
in
add
call
add
push
hlt
inc
add
lock
push
test
decl
xchg
adc
ljmp
add
fnstenv
or
sub
add
call
xchg
pop
in
mov
xor
incl
add
lret
or
add
xchg
ja
xchg
aad
roll
sub
movsl
add
leave
mov
iret
and
jmp
add
stc
aaa
nop
roll
add
mov
jmp
add
jo,pt
inc
add
add
std
push
pop
add
add
add
dec
fmuls
rcrl
add
xor
pushl
add
add
data16
jno
ljmp
or
stc
mov
push
mov
mov
ss
add
decl
hlt
sbb
add
xchg
mov
add
add
add
mov
add
out
test
loopne
dec
mov
sahf
fiaddl
dec
cmp
mov
and
pushl
adc
jmp
add
in
lods
or
and
incl
push
add
add
pop
add
out
movb
mulb
add
push
add
fdivrl
mov
in
mov
add
push
addl
or
inc
add
or
inc
add
jne
cld
mov
stc
das
addb
addb
add
add
mov
movl
jnp
imull
and
call
dec
push
cmpsb
add
xor
ljmp
sbb
insl
mov
add
daa
add
lcall
adc
inc
add
addl
adc
inc
add
fwait
push
addb
ret
add
incl
add
call
pop
xchg
fmull
mov
cmp
add
add
call
xchg
add
push
addl
jl
dec
enter
add
nop
dec
sub
add
mov
inc
add
sbb
jle
add
add
mov
add
add
imul
in
call
dec
lcall
add
add
push
add
fxam
add
leave
jb
ljmp
test
add
add
fwait
repnz
dec
push
cs
popf
sti
pop
insl
sbb
lcall
xchg
addb
add
sbb
gs
addl
add
sbb
lds
int3
gs
push
mov
arpl
add
add
add
pop
mov
cmp
std
mov
add
ljmp
pushf
stc
scas
push
jle
stos
xchg
negb
inc
add
data16
add
aaa
pushf
xchg
mov
and
dec
sbb
fdivrs
adc
call
add
scas
fdivp
xchg
in
das
cmpsl
add
das
sbb
sbb
add
sbb
push
add
test
adc
lcall
add
int
add
add
lcall
mov
and
sub
lahf
push
add
add
lahf
and
pushl
add
mov
sahf
ds
mov
add
addl
add
addl
das
dec
test
dec
sbb
jmp
sbb
xchg
faddl
add
and
jnp
aaa
out
test
xchg
mov
fiaddl
add
mov
add
sbb
add
inc
add
or
ljmp
add
das
inc
add
mov
add
xlat
mov
ljmp
xor
add
addl
popa
add
clc
rolb
inc
add
cld
popl
xchg
lds
roll
add
ljmp
aas
in
push
pop
ret
add
add
mov
stc
sub
or
jb
jmp
add
jl
xchg
rcll
bound
pushl
pushf
mov
out
mov
add
jmp
add
in
out
mov
sbb
aad
push
add
daa
add
iret
rcll
lret
cmp
jge,pn
add
rcr
test
and
cmp
xchg
mov
ljmp
movl
add
adc
add
lods
push
addl
sub
cmp
mov
outsl
inc
add
cwtl
push
jmp
mov
mov
add
ljmp
ds
inc
add
int
mov
call
icebp
popf
cmp
add
xchg
addb
add
sarl
sub
jb
ljmp
pop
pushf
inc
add
mov
jnp
call
jmp
add
add
stos
push
add
and
js
add
xchg
stc
in
mov
add
gs
lods
aaa
mov
add
mov
call
xor
jmp
add
xchg
mov
add
movsb
add
push
add
ja
fstpt
add
std
jnp
add
add
add
stos
bound
incl
add
xor
cmp
ds
add
popf
push
pextrw
add
add
pop
je
add
and
lcall
adc
add
cltd
cmp
dec
jne
xor
jmp
or
add
jae
dec
pop
add
add
xchg
xor
push
mov
stos
add
ljmp
cmc
sub
inc
add
ss
call
adc
mov
push
jno
call
fcomi
sub
repnz
mov
push
out
pop
out
push
sbb
sbb
add
test
sar
out
inc
add
mov
adc
dec
aad
rcl
outsb
mov
add
add
add
dec
mov
arpl
incl
add
repnz
dec
dec
pop
jae
in
movsl
add
jge
dec
xchg
sbb
aaa
mov
mov
popf
ror
xor
lcall
add
add
mov
stos
out
xchg
lret
cwtl
xor
ljmp
add
and
ljmp
xchg
and
aam
sbb
add
test
ret
add
add
incl
push
mov
add
adc
call
out
fadd
add
mov
add
sub
add
sbb
xchg
loopne
jecxz
lds
jmp
addl
dec
lret
call
cli
aad
jmp
jge
add
scas
push
push
mov
pusha
add
xchg
rorb
addb
dec
int
add
out
jns
adc
jmp
jno
lcall
jno
decl
outsb
jnp
pop
mov
or
aas
and
decl
sub
dec
and
in
repnz
mov
fwait
mov
mov
inc
add
addb
sti
rolb
cld
cli
xor
fldcw
addb
jo
mov
popf
scas
dec
mov
push
mov
add
push
cmpsl
add
mov
mov
bound
call
and
ljmp
insb
add
decl
bound
decl
jecxz
sub
repnz
add
stos
inc
add
mov
ret
add
addb
mov
jnp
add
daa
add
jmp
mov
adc
test
add
or
add
cmp
inc
add
add
sub
lcall
loop
pop
mov
call
push
test
outsl
inc
add
outsb
dec
stos
and
dec
pop
aas
fwait
ret
add
add
out
mov
add
test
mov
sahf
loope
xchg
cmpsl
add
xor
cmp
lds
and
push
add
and
mov
add
sub
add
mov
add
xor
add
popa
add
das
and
lahf
push
iret
jl
fiadds
add
stos
iret
aas
cmpsl
add
cwtl
imul
mov
mov
dec
mov
add
xor
pushl
add
shlb
inc
add
add
pusha
add
cli
push
jg
outsl
mov
cli
inc
add
lcall
incl
pushl
inc
add
sbb
add
pushl
mov
call
mov
xlat
jl
imul
pop
roll
out
add
mov
add
fsub
add
add
imul
add
data16
add
or
add
fchs
add
stc
add
ljmp
jbe
loop
repz
js
sbb
dec
les
cmp
add
xor
addl
add
nop
pop
add
cmp
dec
pop
les
dec
or
jmp
add
jle
inc
add
inc
add
cmp
add
add
scas
test
mov
aaa
cmpsl
add
add
mov
jl
add
add
mov
add
add
arpl
jmp
add
mov
jg
add
cs
mov
add
stc
mov
rclb
movb
add
dec
mov
decl
xchg
adc
add
mov
icebp
call
sub
add
add
scas
pop
jae
lcall
roll
mov
aas
xchg
in
mov
jp
or
lret
imul
add
dec
mov
mov
dec
jb
fisttpll
add
and
js
inc
add
push
push
movsl
add
lcall
movl
bound
dec
pminsw
popa
add
out
test
dec
pop
xchg
add
call
add
addb
cli
sarl
inc
add
push
movl
add
sub
add
ret
add
jo
pushl
add
mov
das
or
pop
push
add
xor
decl
aaa
sbb
add
cwtl
xor
push
mov
push
add
sbb
lret
adc
stc
daa
add
pop
iret
ds
js
scas
les
sub
in
aaa
jb
decl
pushf
outsb
arpl
fsubl
inc
add
mov
leave
insb
xlat
dec
in
inc
add
pop
aad
dec
popf
out
testb
add
add
lea
add
pop
cld
je
inc
add
pushf
repnz
ljmp
nop
pop
add
loopne
pusha
add
or
loope
fbstp
shll
out
gs
ja
ja
add
test
addb
add
cmp
bound
call
imul
pop
mov
in
or
call
mov
add
lret
pop
scas
inc
add
and
jmp
add
add
ljmp
xchg
pop
scas
clc
jecxz
jne
mov
add
and
mov
lfs
add
mov
or
scas
jo
out
in
adc
inc
add
add
cltd
or
inc
add
push
insl
mov
sahf
lcall
call
add
xor
ljmp
jle
add
jecxz
das
and
incl
push
add
xor
pushl
ljmp
add
scas
adc
int
add
lds
mov
pushl
fistpl
cmpsl
add
mov
mov
test
inc
add
ret
add
mov
or
push
cmp
jp
add
add
lea
add
mov
add
out
add
add
rolb
add
aaa
push
xlat
test
jno
decl
xor
jae
call
into
fstps
addl
add
add
lcall
pop
test
mov
outsl
or
pop
les
in
addl
sub
gs
imul
nop
add
jnp
push
dec
fisttps
cmp
add
pop
xor
ljmp
add
jbe
push
add
hlt
hlt
add
call
inc
add
add
fidivrs
cmp
add
inc
add
jmp
je
mov
out
xchg
into
mov
pop
out
addb
add
repz
sahf
add
ljmp
test
sub
push
mov
or
add
mov
enter
hlt
outsl
pop
and
ljmp
rcrl
mov
jmp
add
add
push
add
dec
stos
jns
adc
jle
xor
jge
add
movl
cmp
jge
add
add
add
pushf
push
add
jnp
jl
add
sti
roll
push
add
xchg
stos
addb
mov
push
mov
jmp
loope
mov
mov
ljmp
add
roll
add
add
movb
sub
sub
pushf
inc
add
loope
mov
lret
icebp
jne
ror
fcoms
add
sub
add
pushl
or
xor
add
add
sub
push
mov
add
add
cmp
lock
addl
imul
push
mov
pop
sahf
jns
add
jecxz
cmpsb
add
add
in
push
pop
mov
stos
mov
add
dec
or
decl
sbb
add
int3
sub
mov
pcmpgtb
xchg
inc
add
mov
jnp
lods
cmp
dec
adc
ljmp
add
and
call
pushl
jmp
add
push
add
in
imul
aaa
add
jmp
add
xor
incl
decl
push
xchg
jne
jnp
mov
data16
mov
bound
incl
xchg
jg
sbb
adc
dec
js
sbb
push
add
sbb
mov
test
faddl
add
fadds
daa
add
jmp
add
mov
out
xor
jmp
xor
add
sbb
outsb
jne
dec
lds
sbb
jle
sub
add
jecxz
test
push
loope
dec
pop
mov
cmp
or
add
and
jns
inc
add
xor
jmp
add
lcall
push
insb
roll
fisttpll
add
int
add
pushl
add
add
test
ljmp
add
fldcw
xlat
shrb
add
fbstp
xchg
adc
call
add
push
add
mov
xchg
ret
add
add
pushl
add
shlb
dec
or
mov
addb
adc
sti
out
xchg
mov
cmp
inc
add
add
pop
bound
jmp
mov
mov
lcall
mov
inc
add
sbb
add
mov
add
add
add
sub
pushl
incl
sub
pop
and
inc
add
add
xor
lcall
jbe
sbb
inc
add
xchg
cwtl
add
cld
addl
add
adc
add
repnz
test
fbstp
decl
add
clc
mov
jno
add
faddl
test
add
jno
jmp
add
add
decb
add
and
mov
nop
cs
xor
lcall
mov
pushl
lret
add
call
in
sbb
ds
loope
lods
or
shll
add
pop
mov
pop
pop
imul
out
cmc
mov
or
out
pop
movl
out
data16
ljmp
xlat
je
push
add
sbb
add
add
enter
test
inc
add
inc
add
lret
add
xchg
imul
add
or
add
repz
pop
mov
sti
sbb
out
out
add
out
sub
xor
loopne
inc
add
adc
ljmp
add
test
mov
add
adc
mov
dec
jle
stos
fwait
xor
loop
jp
addl
cmp
add
imul
add
roll
push
out
pop
sub
mov
add
pop
add
pop
inc
add
add
xchg
ret
sub
add
adc
fnstcw
sbb
test
adc
int
add
out
pop
cmp
or
add
xor
decl
pop
arpl
call
add
mov
add
call
lcall
and
incl
sbb
add
add
ja
mov
popa
add
pop
iret
push
js
sbb
xchg
push
add
dec
test
xor
pushl
ljmp
add
xor
decl
lahf
sbb
add
into
jp
push
lods
nop
add
push
ljmp
mov
add
jmp
add
xor
call
ljmp
icebp
int
sub
add
jmp
add
pop
mov
add
add
adc
decl
cmpsl
add
mov
movl
popf
jne
add
ret
add
push
sub
test
cmp
js
add
cli
cli
inc
add
add
lret
sbb
add
stc
ret
sbb
aad
mov
add
in
shlb
add
add
call
into
into
sub
data16
add
push
add
add
lret
loop
xlat
fists
mov
cld
es
xchg
xchg
xor
ja
into
sub
mov
call
pop
pop
mov
adc
incl
push
cwtl
cltd
push
add
lock
add
add
cli
xlat
sub
fdivl
add
jae
lcall
rol
add
dec
push
add
mov
arpl
incl
repz
add
push
aad
sub
push
add
cmpsl
add
jecxz
movb
add
jnp
add
xchg
add
add
add
js
add
out
mov
or
add
add
dec
sbb
fadds
add
roll
add
test
inc
add
add
add
xchg
sbb
add
out
mov
inc
add
sbb
dec
add
decl
add
mov
cmp
mov
stos
or
pop
ret
add
addl
or
xchg
fimuls
rolb
add
inc
add
fwait
dec
outsl
sub
mov
xchg
fisubl
cmp
add
and
stos
lock
push
or
cmp
xchg
sbb
ficomps
ret
push
sti
addl
add
mov
jecxz
pop
lahf
jne
dec
lahf
mov
add
add
dec
test
test
cmpsb
add
inc
add
dec
out
dec
xchg
sub
jge
inc
add
adc
call
push
out
push
add
decl
scas
out
ljmp
movb
add
ljmp
ds
pop
pop
xchg
mov
mov
cs
in
mov
movsl
add
ds
and
cmp
popf
test
sti
xchg
push
add
mov
adc
call
inc
add
add
dec
jnp
cmc
mov
mov
sbb
ds
add
int
prefetch
or
addb
add
mov
add
pusha
add
xchg
rcr
sti
das
je
fcoml
cld
adc
push
loope
inc
add
jl
shll
add
add
inc
add
ds
int
bound
pushl
add
lock
fdiv
push
add
mov
dec
xor
fimull
add
pop
add
add
add
jo,pt
push
shrb
aaa
pop
add
addb
jnp
add
fistpll
out
popa
add
loopne
xchg
arpl
lcall
xchg
add
dec
xor
popa
add
or
rolb
jp
das
push
jp
movb
add
xor
inc
add
lret
add
push
gs
adc
ljmp
add
mov
dec
stos
jge
add
ljmp
push
movb
add
sub
mov
add
xchg
adc
jmp
jge
mov
pop
jmp
push
xchg
les
and
lcall
add
std
lcall
ljmp
divl
add
add
xchg
xlat
loopne
adc
decl
pop
jbe
mulb
fiadds
lcall
pop
push
jno
lcall
xchg
pop
leave
das
or
lret
movb
add
mov
in
inc
add
lods
push
sbb
rolb
add
mov
add
in
xor
add
outsl
out
js
test
mov
add
int
sbb
add
sub
jns
addb
add
lret
adc
decl
xchg
loop
sahf
fstps
add
jno
push
out
jae
decl
add
ficomps
push
sbb
test
add
add
sub
mov
add
mov
mov
stos
cmpsl
add
addl
cmc
mov
xchg
pusha
add
sbb
push
out
dec
fidivl
or
sbb
fistpll
jp
add
cwtl
xchg
loopne
adc
ljmp
add
call
add
xor
decl
pop
add
adc
lcall
ljmp
decl
add
lock
std
sub
test
int3
xlat
xlat
xchg
scas
xor
decl
lea
push
add
cmpsl
add
shl
push
cmp
test
popf
xor
mov
lahf
add
in
add
pushl
pushl
xchg
mov
add
clc
lcall
push
mov
data16
inc
add
lret
add
mov
jnp
cmpsb
add
add
mov
adc
call
add
inc
add
decl
pop
lods
sti
push
mov
pushf
pop
std
pop
add
cmpsl
add
popa
add
mov
add
outsl
loopne
int
loop
int
push
mov
add
add
imul
cmp
xor
loopne
test
repnz
add
xor
add
je
pop
out
fstl
push
add
or
push
add
push
inc
add
ljmp
sub
mov
insb
cmpsl
add
fwait
int3
aaa
mov
sub
add
aaa
push
add
jnp
arpl
incl
add
pushf
dec
and
lcall
dec
dec
stc
movl
loopne
inc
add
stos
push
add
pushl
jmp
add
shrl
pop
add
inc
add
add
mov
add
call
add
mov
push
add
je
xor
call
dec
fidivs
mov
xor
add
enter
out
addb
out
loop
popa
add
xchg
mov
add
loopne
push
pop
out
mov
les
jle
add
faddl
add
dec
sbb
push
sbb
cmc
popa
add
jp
mov
push
add
cmpsb
add
add
nop
stos
ss
or
decl
mov
add
jmp
pushf
add
add
int3
dec
int3
sbb
mov
pop
addb
add
cmpsb
add
int3
cmp
add
les
out
xchg
mov
out
add
decl
add
mov
ds
test
loopne
push
fimull
mov
add
pushl
sub
call
add
cmc
mov
repnz
add
enter
add
mov
out
cmpsl
add
jbe
add
xchg
inc
add
add
cmpsl
add
lods
mov
add
sbb
test
jae
push
cmp
add
add
decl
sub
lea
pop
int3
addr16
add
call
roll
cmp
sahf
iret
into
push
sub
lret
adc
jge
in
shr
inc
add
add
add
add
lcall
and
lcall
add
push
rolb
insb
stos
mov
clc
incl
or
add
jns
sbb
add
cmp
out
jno
jmp
imul
decl
mov
mov
jg
add
aaa
or
add
jnp
sub
lret
sbb
out
jne
fstpl
sub
ficoms
add
outsb
cmpsb
add
xor
add
mov
add
cmp
int3
and
pushl
add
jecxz
add
incl
lcall
jnp
dec
lcall
ret
fbstp
add
inc
add
call
jmp
add
inc
add
add
sbb
adc
add
xchg
stc
aad
nop
and
pushl
add
jne
add
lret
lcall
xor
add
push
fadd
add
add
mov
add
mov
loope
dec
jp
add
jge
add
lds
movl
push
add
add
mov
dec
pop
xor
dec
inc
add
adc
mov
dec
mov
pusha
add
into
mov
in
fistpll
sbb
incl
add
add
cmpsl
add
add
mov
test
push
add
ret
add
push
dec
fisubs
mov
add
cmpsl
add
lea
out
cmp
addb
add
add
add
es
lcall
add
daa
add
incl
flds
xor
jmp
add
mov
jmp
add
sub
ret
add
lcall
add
jle
or
scas
les
sub
xchg
cmp
dec
and
push
add
jmp
dec
pop
pop
lods
nop
sub
lock
fidivs
add
or
mov
iret
outsb
jns
add
add
in
jge
sub
pop
or
nop
aas
roll
repz
mov
rcrl
les
xchg
and
add
add
aas
xchg
sti
mov
lret
add
pushl
imul
add
pop
mov
xor
inc
add
inc
add
lods
push
push
xchg
sti
or
add
push
add
mov
pop
outsb
int3
in
aam
or
jg
mov
add
ret
gs
add
add
add
push
add
lods
ljmp
in
add
jmp
add
ja
add
add
pushf
fstps
sbb
dec
ret
out
or
cmp
jp
push
int3
sbb
std
or
in
out
or
add
insl
int3
pop
and
pushl
jmp
push
pop
mov
add
jmp
xchg
out
jb
incl
add
data16
jbe
add
push
outsl
dec
mov
add
and
lcall
nop
push
add
push
or
add
loope
jno
lcall
jle
add
add
jmp
add
cmp
add
xchg
mov
jmp
shrl
add
inc
add
mov
add
jno
pushl
or
movsb
add
adc
incl
push
add
or
add
sbb
incl
cmp
adc
lcall
in
add
ljmp
incl
add
int3
xchg
jmp
add
outsl
cmpsl
add
addb
add
cmp
lret
add
inc
add
aad
daa
add
add
addl
add
ret
add
out
movsb
add
add
cwtl
xchg
add
ljmp
and
ljmp
fs
xor
cmp
add
decl
rcrl
scas
jae
jmp
jno
decl
jecxz
adc
jg
add
and
jnp
lret
add
decl
cmpsb
add
add
push
add
pop
xchg
out
test
cli
inc
add
mov
add
push
adc
pushl
add
das
pop
popa
add
mov
sub
lock
out
loope
pushf
fcoms
add
popa
add
mov
push
mov
xchg
xchg
and
add
xor
cwtl
xor
lcall
fsubrl
jp
adc
cld
les
mov
lret
movsl
add
mov
data16
ljmp
add
lcall
add
add
decl
pushl
popf
iret
sub
ljmp
inc
add
add
add
mov
sahf
rcll
leave
or
mov
xchg
jo
incl
ljmp
jp
repz
adc
fldt
mov
lods
lret
fists
xor
jmp
mov
xchg
ds
xor
ljmp
decl
add
aad
add
add
cld
jp
ss
add
incl
jmp
and
ljmp
add
add
popf
in
int
add
ds
cld
dec
fmull
jbe
push
add
icebp
mov
jmp
add
jmp
fisubl
ljmp
cwtl
ret
add
dec
out
inc
add
leave
insb
mov
add
add
hlt
xor
incl
jmp
add
decl
push
inc
add
mov
daa
add
mov
add
jp
mov
add
movsb
add
ffreep
add
add
jmp
mov
dec
cmpsl
add
add
scas
in
jnp
add
add
lret
fcmovne
lcall
add
sahf
sbb
pop
pop
add
push
pop
cltd
cmp
add
sub
rolb
mov
and
lcall
fdivrs
lahf
pop
movl
add
push
add
fisttpl
js
add
addb
lods
sub
add
jnp
test
out
mov
ljmp
add
sub
addb
add
jmp
repnz
sbb
add
call
pop
xchg
jp
add
push
add
aas
or
test
es
fimuls
movsb
add
add
push
add
cli
push
add
rep
fwait
lcall
dec
inc
add
mov
add
jno
incl
leave
pop
mov
imul
dec
push
add
cmc
lret
addl
cmc
jo
incl
jmp
pop
out
in
push
dec
fcmovnbe
aaa
xchg
test
add
add
out
mov
sub
add
decl
add
add
sub
add
mov
dec
mov
add
add
add
add
fcomps
test
and
add
ficoms
es
mulb
int3
lret
add
xor
call
test
jl
ret
add
mov
iret
sti
ret
add
and
jmp
add
clts
add
mov
jmp
in
push
xchg
mov
add
lods
inc
add
mov
mov
add
lods
repz
jne
add
into
imul
movsl
add
xchg
rorb
sbb
add
mov
into
test
sbb
adc
add
add
sub
push
pop
adc
incl
sub
cmp
sub
rolb
cmpsl
add
pop
test
and
mov
add
sahf
cmp
in
mov
addl
fcomps
jnp
add
das
into
adc
rclb
cmp
add
add
cmp
stos
or
call
ljmp
xchg
inc
add
inc
add
lds
sahf
das
jle
add
add
sahf
and
pushl
mov
sbb
add
dec
shlb
and
fists
add
pop
mov
jmp
add
test
dec
add
add
repz
jnp
iret
in
mov
cltd
scas
or
repz
add
jg
sub
inc
add
jno
pushl
clc
rcll
je
push
add
daa
add
pop
sbb
sbb
lea
sbb
stos
jle
repz
pusha
add
jl
adc
call
xchg
cli
in
addb
addl
mov
cmp
lods
and
decl
cmp
mov
xchg
inc
add
rol
add
add
pop
xor
push
mov
out
sub
addb
push
add
call
mov
test
adc
lcall
test
mov
cltd
stos
not
data16
pop
xchg
jnp
add
xor
decl
add
sbb
add
stc
mov
jmp
pushl
dec
cs
add
arpl
fstp
push
mov
adc
add
add
ret
add
je
mov
in
mull
add
add
adc
sbb
add
popa
add
xchg
pop
jns
pushf
mov
add
inc
add
cmpsl
add
outsl
pop
mov
lcall
add
add
add
push
xchg
xor
jmp
xchg
out
add
xor
push
jp
test
push
pushl
jg
and
pushl
pop
or
call
ljmp
or
inc
add
add
inc
add
jecxz
mov
icebp
jmp
cmp
or
mov
call
sub
mov
fiadds
adc
imulb
test
xchg
rolb
xchg
push
or
sahf
sarl
pop
dec
int3
sahf
or
add
ret
add
add
bound
decl
add
dec
popf
js
test
sbb
call
popf
hlt
mov
add
add
add
push
pusha
add
cmp
add
adc
out
or
fldl
add
rorl
sub
aad
ret
add
inc
add
sti
push
add
sbb
loopne
dec
mov
cmp
mov
fadds
and
jmp
roll
adc
js
sti
into
mov
add
jb
incl
enter
inc
add
imul
add
call
add
lret
mov
insl
ljmp
push
sbb
add
add
and
jmp
add
jp
add
lds
ds
aas
inc
add
add
push
add
sbb
insb
arpl
call
je
movl
add
add
jns
lds
lea
fcomps
add
adc
ljmp
add
jo
call
sub
jne
add
mov
lcall
dec
les
shll
ljmp
fcomi
inc
add
stos
fsubl
add
lds
and
enter
add
mov
sti
push
jo
lcall
jmp
add
ljmp
or
add
stos
inc
add
jle
push
add
daa
add
jo
dec
inc
add
xchg
xchg
and
fistpll
add
sbb
data16
call
add
stos
adc
decl
pusha
add
movb
add
mov
add
lcall
add
add
inc
add
mov
roll
popa
add
das
icebp
add
incl
out
insb
clc
fiadds
jmp
addb
das
inc
add
mov
mov
arpl
mov
add
movsb
add
push
pop
outsb
scas
fstl
fwait
aas
sub
ljmp
push
add
test
pop
add
lcall
adc
decl
enter
stos
lock
ljmp
add
xchg
xchg
mov
pop
inc
add
push
ja
sarb
rclb
add
jo
ljmp
add
cld
lods
jg
add
add
movl
incl
add
pop
xchg
loope
xor
decl
movl
ret
xchg
add
ljmp
xlat
push
lcall
pop
or
add
ret
add
push
sbb
add
leave
ljmp
mov
dec
adc
lcall
add
lret
ret
add
lea
pop
fdivrl
loope
dec
fidivrl
sahf
inc
add
lods
dec
inc
add
add
dec
les
lods
fcmovnbe
cmpsl
add
add
xchg
daa
add
add
or
nop
cli
roll
inc
add
mov
pmaxub
add
sahf
pop
pop
add
insb
adc
incl
add
addb
cmp
inc
add
add
push
add
dec
jbe
movsb
add
cld
lock
jmp
add
add
add
push
add
and
call
out
jne
inc
add
xchg
rol
add
xchg
mov
pop
xchg
fisubrs
dec
jp
add
imul
dec
aas
and
lcall
dec
jg
mov
inc
add
jbe
cmp
sub
adc
add
mov
loope
data16
sub
mov
cld
adc
incl
add
jmp
mov
or
lods
call
add
stos
inc
add
cmp
add
call
stos
popf
out
in
inc
add
add
add
add
add
mov
add
mov
hlt
out
inc
add
jno
decl
data16
and
pushl
add
bound
stc
xchg
jo
decl
inc
add
add
ljmp
xchg
xor
decl
and
jle
insl
dec
add
call
lcall
add
jnp
fstl
addb
add
add
jmp
pushl
add
call
pushl
mov
into
movsl
add
add
add
aad
add
pushl
add
addl
pop
pushf
inc
add
lret
cmp
fcomip
jae
inc
add
add
add
mov
pop
mov
sbb
add
cmp
add
pop
cs
add
pop
cmp
push
sbb
add
mov
ret
add
add
xor
decl
xchg
test
xchg
inc
add
push
iret
inc
add
loope
mov
mov
test
jg
add
clc
jp
fcmovu
movsl
add
xchg
es
xchg
mov
std
popa
add
push
xor
jmp
jl
xchg
bound
jg
mov
lea
inc
add
push
add
dec
inc
add
call
mov
mov
sbb
sub
jmp
or
cmc
sbb
addb
mov
xor
lcall
add
int
add
hlt
jno
dec
scas
mov
sub
jge
add
add
push
lcall
add
mov
add
jmp
pushl
add
pop
in
sub
add
sbb
loop
popa
add
ds
mov
iret
dec
aaa
pop
dec
aad
jl
add
test
addb
cmc
jnp
aaa
mov
add
rcl
and
sub
push
mov
fsts
and
push
int3
test
mov
add
add
push
add
mov
mov
mov
cmp
xchg
imulb
xchg
popa
add
inc
add
fistps
add
sub
mov
add
add
xor
pushl
add
jg
ja
add
mov
add
ljmp
add
std
outsl
sbb
pushl
mov
loope
add
mov
dec
out
cltd
or
dec
lret
js
out
cli
push
add
inc
add
cmp
add
out
test
sbb
add
movsb
add
add
jno
jmp
call
add
js
add
sbb
fidivrs
and
jmp
insl
cmp
sub
mov
in
push
sahf
push
add
fsub
add
nop
stos
xchg
pop
mov
add
mov
insb
pop
push
insl
stc
je
add
lcall
out
xor
call
add
sub
cltd
mov
call
xchg
xchg
cmpsb
add
jp
lahf
rcrb
pushf
icebp
or
add
cmp
ja
add
add
int3
outsl
cmp
ljmp
outsl
push
movsb
add
int
add
cli
mov
cld
or
fbstp
push
inc
add
add
jne
pop
dec
add
push
add
pop
adc
jmp
add
add
outsb
sub
add
mov
add
add
add
dec
push
sti
fwait
roll
add
leave
mov
pop
add
add
cli
pop
and
add
ret
add
jb
dec
xchg
and
jnp
add
daa
add
add
ficoml
test
repz
decl
pop
mov
ret
add
add
jle
add
addb
add
xchg
pop
mov
in
rcll
stc
xchg
and
lcall
add
lret
mov
stc
mov
mov
mov
cmp
shrb
push
add
in
out
jne
into
je
xchg
pop
jmp
mov
add
into
dec
aam
jmp
add
and
jno
ljmp
dec
testl
addl
xor
fldl
cmp
cmp
add
push
add
xor
decl
stos
dec
add
add
ljmp
aas
push
add
ljmp
mov
loope
insl
cmp
cmpsl
add
stos
lcall
imul
add
mov
loop
push
mov
add
push
push
in
inc
add
popl
ljmp
add
xor
decl
cwtl
push
mov
sbb
lahf
pushf
or
ds
loopne
loope
inc
add
add
add
enter
incl
pushl
push
mov
jbe
add
in
mov
mov
jb
incl
pop
add
jmp
add
dec
fwait
aam
add
fmul
sbb
adc
jmp
jp
inc
add
add
push
sahf
mov
add
add
add
mov
aam
add
cltd
shll
mov
add
in
jmp
stc
jl
add
inc
add
mov
nop
inc
add
shlb
ret
rolb
mov
add
pushf
imull
pushl
add
in
imul
decl
mov
int
pop
leave
sub
add
sbb
testb
pop
mov
mov
outsl
movl
addb
ret
add
add
add
lcall
cmp
and
lcall
roll
out
pop
data16
adc
inc
add
or
movsl
add
cltd
sbb
add
cs
lahf
ret
add
add
adc
add
pop
stos
push
shrb
add
flds
add
add
imul
add
xchg
jbe
mov
mov
add
mov
add
jne
add
jmp
inc
add
adc
ljmp
data16
xlat
xchg
stos
addb
add
out
lret
push
cmp
sub
add
sub
add
and
add
call
add
enter
fisttpl
cmp
mov
pop
add
push
add
rcl
mov
lcall
sbb
inc
add
cmp
mov
pushl
fildll
add
ja
sti
dec
scas
sbb
add
jnp
or
add
jns
add
push
xor
sti
cld
ljmp
js
add
int
loop
mov
jne
daa
add
in
mov
idivl
add
add
daa
add
test
pop
out
xchg
add
inc
add
js,pn
cmp
add
pop
out
lock
mov
add
popa
add
hlt
or
rcll
std
je
and
out
nop
adc
dec
jae
pushl
xor
addb
add
add
add
jge
add
xor
jmp
ljmp
nop
xchg
lds
jns
mov
int3
push
adc
loopne
out
xchg
pop
dec
dec
out
mov
inc
add
push
aas
movsb
add
roll
stos
sub
mov
inc
add
xchg
xchg
jle
mov
add
pop
data16
movl
popf
fdiv
pop
xor
mov
jb
lcall
inc
add
imul
add
add
iret
into
dec
push
dec
dec
sbb
lahf
pop
ljmp
mov
pop
or
and
jmp
and
jne
xor
stos
les
xor
int3
stos
cwtl
add
ljmp
add
add
add
incl
add
in
nop
cmp
bound
jmp
add
in
pop
lcall
add
pusha
add
jg
add
lcall
push
sub
add
add
push
lret
xor
add
mov
dec
xor
dec
mov
push
add
fldl
add
out
fldln2
cmp
jmp
jle
pop
hlt
test
ror
insl
pop
out
jp
jno
call
pushl
or
mov
add
inc
add
sub
sbb
lcall
xchg
je
and
incl
add
mov
add
mov
and
lcall
pushl
mov
add
add
fmull
mov
cmp
cmp
add
jne
jne
mov
xchg
cltd
mov
dec
jb
lcall
jge
mov
add
or
rsm
popf
jae
inc
add
test
out
rolb
adc
pushl
add
xor
pushl
add
push
pushf
pushf
nopl
incl
and
inc
add
data16
ficoms
inc
add
jno
lcall
add
mov
faddl
add
movb
push
add
xchg
std
and
pushl
add
ret
add
mov
les
enter
add
pop
jno
incl
xchg
xor
lcall
inc
add
in
ss
add
data16
add
ljmp
mov
mov
pushl
add
cs
test
mov
mov
lret
lcall
add
testl
data16
add
mov
push
mov
push
add
add
cli
jp
call
mov
adc
ljmp
add
divl
pushl
insl
and
ljmp
fsubl
loopne
dec
and
add
shl
stos
lds
stc
xchg
arpl
fisubrl
push
add
repz
nopl
mov
cltd
push
sbb
in
jge
add
stos
les
test
add
dec
mulps
adc
ljmp
addb
add
roll
repnz
add
out
stos
mov
add
add
or
add
incl
ss
popa
add
and
add
iret
out
fbstp
xchg
stc
sahf
add
fsts
sbb
jmp
in
mov
call
int
add
push
scas
popa
add
xor
pushl
pop
add
jmp
cmp
ljmp
push
mov
decl
fisubs
add
xchg
push
add
dec
fldt
push
add
and
out
cmc
and
call
add
cmp
test
xchg
fmulp
addl
and
call
ljmp
leave
inc
add
ret
add
add
roll
push
bound
ljmp
inc
add
lret
movsb
add
add
call
les
mulb
add
and
test
pop
sub
add
bound
push
add
aam
jmp
mov
add
sbb
add
xchg
jge
xchg
cmp
xor
decl
mov
add
pushl
xchg
daa
add
add
daa
add
cmpsl
add
inc
add
addl
add
add
ljmp
add
jb
js
add
data16
push
xchg
loop
cmpsb
add
call
add
xor
jmp
add
fisubs
repnz
inc
add
std
test
mov
roll
jbe
add
ljmp
repnz
add
jns
popf
adc
lcall
or
xchg
sbb
xor
call
ret
jno
call
jmp
add
jecxz
arpl
decl
incl
add
cmpsl
add
add
add
data16
add
gs
cltd
outsb
and
add
ljmp
add
jno
js
test
rolb
add
jbe
mov
imul
stos
loop
pop
mov
in
jg
add
add
mov
mov
adc
add
jnp
adc
push
add
icebp
lret
insl
push
jmp
sbb
add
push
add
int
dec
or
add
out
rolb
insl
sbb
or
add
add
dec
inc
add
shll
test
xlat
xor
add
add
cmp
incl
xchg
push
add
cmpsl
add
add
mov
incl
addb
add
add
add
adc
call
shr
mov
add
xchg
sub
int3
data16
add
add
sbb
xor
call
add
scas
and
jmp
call
decl
mov
add
pop
push
mov
imull
sbb
or
in
outsl
cwtl
ja
sbb
stos
stos
loopne
xor
ljmp
jl
add
xchg
push
cs
sub
add
add
ja
jnp
push
jae
call
push
add
push
add
push
pop
int3
movl
sub
add
mov
mov
jb
jg
or
jge
je
add
jl
or
add
les
and
lcall
push
add
enter
ret
add
call
cwtl
je
add
fmuls
add
sti
jbe
inc
add
xor
lahf
inc
add
mov
cmp
mov
je
in
push
bound
inc
add
ds
add
int
test
dec
mov
ljmp
mov
add
add
rcll
fidivrl
lahf
out
out
mov
add
add
xchg
jg
add
xchg
stos
push
dec
aas
push
add
cmc
mov
add
mov
add
xchg
xchg
test
fdivl
add
cmp
lcall
mov
js
movl
add
add
add
add
pushl
add
add
insb
push
jmp
ja
add
jmp
mov
push
add
leave
sbb
mov
lock
jo
lcall
push
dec
lcall
and
sbb
call
add
mov
ljmp
jmp
sub
sub
inc
add
sbb
movl
add
rcll
leave
sbb
mov
movsl
add
add
rolb
add
xchg
testb
call
add
mov
add
sub
das
les
dec
jo
jmp
dec
aad
jnp
test
add
jge
adc
dec
negb
lds
xor
ljmp
call
pushl
inc
add
stc
jno
call
mov
je
add
popl
add
pushl
sbb
mov
adc
push
pop
mov
inc
add
or
add
push
jo
pushl
ljmp
imul
pop
lds
rolb
inc
add
movsl
add
add
or
add
imul
add
jne
add
add
in
int
adc
lcall
pop
flds
iret
daa
add
add
inc
add
mov
mov
add
add
decl
adc
out
push
add
movsl
add
mov
mov
xor
incl
add
inc
add
add
ret
add
add
dec
fnstsw
push
add
and
ret
repnz
stc
in
lods
dec
push
add
negb
das
dec
lea
add
mov
adc
lcall
fistpll
dec
nop
aaa
cmp
add
cs
add
mov
fistps
add
cli
lock
loope
loopne
ds
jmp
inc
add
pop
ljmp
movsl
add
das
jae
ljmp
push
sbb
inc
add
lods
loope
mov
fdivp
mov
add
add
or
pusha
add
pop
xor
inc
add
push
loope
sub
push
add
sub
add
and
jmp
add
hlt
mov
add
fidivl
jmp
mov
add
push
add
pop
addb
add
pop
xor
call
std
add
int
add
jne
fsin
and
cmp
xchg
inc
add
and
std
push
ja
inc
add
ljmp
xor
add
ljmp
add
adc
decl
pop
xchg
push
arpl
call
add
incl
movsl
add
pop
add
xor
lcall
add
aam
clc
roll
imul
out
lods
jo
call
dec
movsl
add
add
aas
mov
pop
add
add
or
sub
add
add
incl
fnsave
sub
xchg
lcall
add
add
mov
add
add
ret
add
aad
push
mov
rolb
add
fcoms
mov
add
push
mov
mov
add
adc
lcall
add
sub
nop
push
add
ljmp
shrb
add
mov
add
add
sar
in
fildl
inc
add
add
imul
pop
xor
mov
decl
add
xlat
mov
mov
fsubl
add
add
push
add
add
ljmp
notl
js
jmp
ds
adc
decl
pushl
dec
mov
xchg
shll
add
cmp
sub
add
or
add
push
add
jo
dec
pop
cmp
add
push
add
mov
add
pushl
add
lea
push
inc
add
add
lcall
sbb
xchg
add
lcall
xchg
mov
mov
add
clc
in
out
clc
mov
adc
add
mov
jl
addb
add
lods
sub
add
mov
outsb
and
add
add
adc
decl
add
dec
pop
cmp
add
xor
jmp
add
cmp
add
xchg
adc
mov
mov
or
pop
add
add
decl
lds
cli
movsb
add
decl
add
test
push
lods
outsl
and
outsl
sbb
inc
add
add
xchg
movsl
add
add
fsqrt
sub
call
ja
cltd
std
add
lock
test
sbb
mov
int
or
call
cmp
mov
ss
adc
inc
add
sbb
es
dec
sub
xchg
and
jmp
add
imul
mov
mov
add
xchg
outsl
clc
add
call
sub
add
lahf
push
add
arpl
decl
popa
add
hlt
xchg
les
pop
jge
mov
pop
popa
add
test
xchg
cs
jno
pushl
add
add
add
es
add
incl
incl
add
jbe
and
pop
test
adc
incl
pushl
mov
add
jl
movb
stos
dec
shlb
incl
sbb
and
dec
inc
add
fdiv
insb
popf
and
decl
xchg
fwait
or
popa
add
xchg
mov
inc
add
ljmp
mov
mov
add
out
xchg
dec
cmp
cmp
lcall
xchg
fdivs
xor
incl
add
xchg
in
jmp
data16
fisttpl
addl
imul
pushl
add
and
xchg
inc
add
int3
call
add
js
jg
or
add
daa
add
xchg
mulb
jp
push
add
add
add
dec
mov
add
push
dec
adc
and
jmp
lcall
add
ficoms
pushf
int
insb
and
scas
add
call
ljmp
add
fsubr
fwait
and
jmp
add
dec
inc
add
repnz
add
lcall
add
adc
jmp
out
nop
pop
add
add
jne
scas
lcall
add
adc
incl
cmp
bnd
add
xchg
loopne
out
push
add
jg
add
aam
int3
mov
jb
std
insb
cmc
ljmp
cmp
cmp
jbe,pn
lea
add
dec
hlt
mov
push
add
mov
roll
or
je
add
add
add
mov
add
imul
jne
inc
add
xchg
and
sti
fistps
pop
inc
add
jecxz
xchg
add
in
out
jbe
icebp
jns
sub
xor
jmp
add
mov
test
add
sbb
xor
ljmp
pop
stos
stos
mov
add
push
inc
add
add
shlb
push
lock
mov
add
jmp
add
add
movb
add
add
jbe
mov
out
add
lcall
add
jnp
repnz
nop
in
fucomi
pusha
add
inc
add
jno
ds
ljmp
call
jmp
add
in
incb
add
movsb
add
add
xlat
mov
out
in
ss
add
add
mov
xchg
lock
sub
mov
adc
lcall
add
in
test
xchg
repz
call
movl
add
lahf
std
xor
insl
sbb
pinsrw
call
enter
inc
add
imul
pushf
les
pop
out
loopne
stos
stc
add
pushl
cmp
add
mov
nop
fistps
enter
mov
stc
sbb
add
push
add
xor
ljmp
sbb
ja
jge
ds
test
add
out
daa
add
xor
jmp
insb
cmp
int
jae
dec
movb
add
pop
add
cmp
cmp
add
popa
add
decb
xor
lcall
cmp
nop
imul
cli
rcrb
test
lock
mov
add
mov
adc
add
add
aad
add
fdivs
jmp
add
icebp
push
add
sbb
decl
add
mov
mov
sub
add
add
add
mov
push
xor
dec
mov
cmpsb
add
dec
test
shlb
ds
xchg
add
aaa
popa
add
inc
add
dec
