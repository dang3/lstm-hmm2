dec
cwtl
into
dec
push
jmp
pop
call
rolb
out
lret
dec
sub
add
add
or
push
jle
repz
idivl
mov
fstl
leave
jg
fs
mov
ljmp
dec
std
add
leave
mov
pop
loopne
add
decl
mov
push
push
jnp
out
aas
add
adc
sbb
ret
cmp
xor
les
daa
loope
inc
add
gs
sarl
movsb
scas
sbb
es
es
mov
les
cwtl
or
bound
movsl
jp
into
jnp
aam
add
out
scas
out
fucomip
mov
adc
pop
dec
mov
mov
jle
ret
and
push
pop
pop
sub
mov
rolb
sbb
xchg
mov
add
cmp
xor
fwait
mov
sbb
and
xor
mov
addb
loop
cmp
dec
loop
add
inc
add
addr16
mov
imul
dec
ja
movl
jle
adc
test
int3
in
push
dec
jle
test
pop
inc
iret
mov
add
add
addb
mov
push
enter
stos
mov
loopne
imul
cmp
mov
pop
lods
push
pop
fstp
repnz
sbb
dec
leave
ljmp
adc
imul
mov
pop
mov
mov
scas
or
mov
cwtl
mov
ror
mov
jl
loop
or
add
add
sub
je
ja
ret
xchg
hlt
cwtl
sub
pop
mov
sub
popf
mov
pop
or
jbe
push
push
shrb
cmp
lods
hlt
jbe
add
lret
push
add
mov
add
add
adc
stos
mov
daa
mov
cmp
sar
out
inc
add
cwtl
addb
imul
out
aas
fdivr
and
jg
std
or
or
dec
mov
pop
das
mov
sub
je
xor
in
mov
cmp
jge
dec
xchg
pop
ss
add
xor
repnz
sub
dec
stc
pop
lea
add
xor
repz
sbb
cmp
add
dec
sub
sti
cmp
loopne
mov
test
scas
xchg
test
jge
fidivl
into
hlt
bound
jae
mov
inc
add
test
in
mov
add
clc
mov
rcrl
mov
js
jno
jns
std
xor
iret
std
cmpsb
hlt
push
cmp
jg
and
arpl
and
scas
es
pop
sbb
clc
pop
push
mov
sbb
pop
adc
push
jo
aaa
jmp
adc
and
add
lock
and
mov
adc
sbb
cmpsb
xchg
xor
loop
ja
xor
or
cmp
in
jmp
movb
add
fdivp
jle
in
ljmp
and
inc
add
xor
fdivrl
cmp
and
jns
add
or
adc
ficompl
jnp
int3
push
shrl
sbb
in
lods
mov
push
jge
addr16
xchg
paddsw
lock
dec
xchg
and
hlt
pop
or
fmull
jle
loopne
add
sbb
cmp
mov
push
loop
cmpsb
hlt
jmp
mov
fwait
push
sar
sbb
dec
jnp
lods
sarb
lods
pop
ja
pop
fcoml
add
in
scas
in
je
mov
or
fdivrp
sbb
and
inc
add
and
or
fdivl
cli
mov
add
xchg
mov
push
add
cli
fnstcw
stos
pop
adc
push
stos
out
je
dec
test
pop
pop
mov
ss
add
add
lcall
stos
fldcw
xor
jle
or
shrl
add
sub
sbb
xchg
or
pop
xlat
mov
in
xchg
adc
inc
iret
pop
out
pop
mov
lea
cwtl
movsb
jge
in
add
inc
mov
shrb
adc
or
jecxz
add
mov
mov
and
cltd
movsl
movsl
enter
addb
and
loop
lods
mov
jns
add
add
add
jbe
or
add
xchg
rorb
adc
filds
add
push
pop
push
cwtl
fistps
add
xor
int3
fimull
push
or
pushf
repnz
mov
loope
push
or
add
pop
int
xchg
mov
sbb
loope
push
adc
add
push
imul
aad
in
fistpll
add
jecxz
add
int3
out
iret
imul
push
inc
add
mov
add
pop
push
insl
testb
push
add
xlat
setne
addb
add
add
xchg
das
sbb
sbb
aam
mov
xor
dec
cmpsb
xchg
inc
add
add
mov
sti
push
ret
sub
and
or
sub
jns
aad
mov
repz
add
movsb
cs
lock
push
cmp
cmpsl
imul
ja
shr
inc
gs
lcall
sub
scas
mov
jle
mov
in
movl
push
add
clc
sub
add
add
scas
mov
fs
movsb
in
fdivrp
in
pusha
add
add
rorl
push
mov
add
lods
nop
mov
pop
gs
add
inc
add
push
xor
insl
dec
inc
bound
addb
fmuls
inc
add
stos
xchg
fidivrl
loope
mov
xor
in
movsl
mov
xor
inc
add
xchg
cmp
cltd
es
and
psubsb
add
ret
movsl
pop
or
daa
xchg
push
lahf
mov
jecxz
push
add
pop
scas
sbb
imul
cs
aad
mov
xlat
outsb
adc
or
xchg
inc
add
cmp
push
mov
and
xchg
jecxz
cmp
ds
aad
aad
outsb
ss
push
aad
or
pusha
add
sub
cmp
faddl
je
xlat
clc
addb
outsb
pop
nop
iret
orl
add
rolb
rorl
add
xchg
and
imul
mov
pop
sbb
push
jnp
movsl
adc
ljmp
movb
add
jb
out
ljmp
ss
je
fistl
test
sub
push
divps
add
or
int3
push
sahf
push
loop
push
jge
ljmp
add
add
outsl
mov
popf
push
mov
addb
inc
add
or
or
test
sub
and
frstpm(287
lret
xchg
mov
push
test
add
sbb
ret
inc
add
lods
ja
xchg
push
lret
clc
leave
leave
std
jno
adc
int3
add
sbb
sub
pop
je
bound
push
mov
fildll
iret
cmpsb
sub
mov
inc
add
xor
adc
push
push
stos
xchg
popa
jns
in
lret
loope
add
cmp
lods
fwait
test
mov
cmpsb
sub
adc
add
mov
lods
mov
dec
inc
add
adc
add
pusha
add
ds
add
jmp
mov
sbb
inc
add
and
mov
push
jns
jae
dec
mov
dec
jp
mov
jbe
popa
int3
and
add
jg
dec
ljmp
pop
jnp
rcr
mov
gs
and
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
ja
xor
adc
lods
clc
xor
cwtl
inc
loop
imul
outsb
pusha
add
xor
movb
out
loop
cmp
jl
dec
sub
mov
mov
adc
xchg
stos
mov
xor
xchg
ds
push
mov
movntq
ljmp
pop
in
add
movb
xchg
sbb
sub
fisubl
out
nop
cwtl
insl
test
fimull
cmp
inc
add
inc
mov
aam
add
push
or
push
pop
cmp
xorl
ja
cmp
sub
filds
inc
fsubrl
addb
cwtl
pop
insl
cmp
jne
cmp
lret
or
pusha
add
pop
add
pop
scas
fnsave
cmc
mov
pushf
arpl
rolb
add
jne
enter
pop
pop
insb
enter
cmpsl
dec
dec
mov
icebp
cld
cmpsb
pop
jp
inc
call
jmp
popf
ljmp
sti
mov
push
aad
loop
add
and
push
int3
jo
leave
dec
repz
add
add
into
xchg
int3
pop
cmp
inc
test
mov
xor
add
mov
ljmp
pop
sub
jge
mov
mov
ja
ffreep
add
or
pop
rorl
jecxz
jns
insb
xor
xor
pop
mov
pop
mov
add
and
mov
lea
inc
hlt
dec
push
mov
pop
jg
adc
cmp
in
dec
pop
scas
push
mov
out
mov
add
xor
in
sbb
loope
mov
mov
fsubp
jae
inc
popf
jno
pop
in
xchg
mov
lds
int3
mov
stc
xor
xchg
mov
testb
testb
lea
sahf
js
imul
dec
clc
jle
lods
data16
movsb
int
add
mov
test
and
xchg
insl
mov
add
sub
pop
adc
xchg
push
mov
add
push
out
fmull
jne
mov
add
push
pop
cli
cld
movsl
mov
cmp
push
mov
mov
sahf
leave
fbld
add
sarl
inc
mov
or
push
insl
cmp
push
push
push
jge
pop
xchg
fsubrl
movsl
jbe
add
pushf
into
push
add
xchg
mov
mov
cmp
jb
aad
les
bound
call
lcall
xchg
pusha
add
jns
jns
and
ds
mov
inc
dec
jb
mov
sub
addr16
cltd
push
loopne
mov
mov
out
xor
push
cmp
loopne
enter
das
and
cmpsb
es
cmp
imul
add
xor
add
jp
pop
out
loope
cmp
inc
push
adc
ja
stc
movsl
xor
inc
xor
xchg
adcl
add
dec
mov
jle
and
int3
inc
push
mov
scas
cld
jns
cwtl
sbb
push
rcrb
lods
sbb
div
xchg
and
aas
je
nop
mov
sbb
leave
lds
rcll
cmp
repz
xchg
pop
sub
icebp
and
sbb
add
in
cmc
int
addb
les
mov
int3
pop
ja
imul
in
fs
adc
mov
pop
lods
push
lret
and
fs
cmp
jnp
iret
push
lahf
push
and
in
test
add
add
out
jecxz
hlt
cld
mov
imul
pop
adc
dec
mov
add
movsb
test
inc
add
inc
add
mov
jno
sbb
inc
add
lods
mov
and
call
sub
push
sbb
xchg
jge
jno
adc
sub
or
je
sub
sub
scas
sub
mov
add
cmp
sbb
cmp
lret
or
jmp
repnz
add
and
aam
pop
nop
adc
lret
je
les
mov
adc
push
add
mov
add
push
addb
mov
mov
sub
dec
pop
in
shll
inc
jle
jge
xchg
inc
sub
xchg
mov
sub
push
mov
into
xchg
cmc
out
ret
or
mov
jp
xchg
mov
sti
push
add
add
and
cmp
xchg
mov
adc
xor
xchg
cmc
sti
mov
add
stos
sub
cmc
fisttps
push
dec
out
les
icebp
adc
mov
jecxz
leave
xchg
addb
sub
lahf
clc
fcmovne
push
add
sbb
and
and
adc
add
xlat
clc
sbb
ljmp
dec
pop
mov
xlat
pop
xchg
jmp
fsubl
sti
jb
clc
lea
test
add
sub
add
fistl
pop
loopne
mov
rorb
inc
add
das
dec
lret
sarb
push
push
rcll
lret
jns
bound
in
nop
mov
xadd
shll
xor
adc
xchg
dec
mov
mov
pop
push
enter
pop
xorl
inc
js
push
add
pop
lahf
push
and
push
jo
mov
pop
add
inc
cmc
dec
adc
add
mov
int3
adc
aas
xor
insb
push
sbb
dec
jbe
add
fildl
jp
jno
rolb
mov
sbb
sub
std
aas
repnz
jno
jne
jl
loop
jae
mov
push
push
pop
push
int
test
shl
and
rcll
bound
mov
aas
push
mov
dec
filds
xchg
int
pop
dec
mov
test
stos
push
sbb
lret
push
dec
mov
pop
call
add
and
cwtl
lret
or
jl
jae
push
sbb
lea
shl
rcl
adc
aaa
cmp
or
dec
jo
leave
inc
add
clc
cwtl
cltd
or
pop
push
mov
fs
mov
icebp
fcmove
xchg
push
les
mov
xchg
adc
iret
or
sub
aas
rcl
lds
lcall
or
push
dec
jbe
iret
jo
in
or
mov
cmp
pop
cmp
nop
fimull
sbb
lods
lds
pop
xchg
in
lea
jno
xchg
test
pop
mov
or
loop
mov
add
pop
or
add
ja
out
cmpsb
mov
shrl
sahf
push
outsl
out
gs
adc
add
stos
mov
push
mov
clc
inc
add
gs
ljmp
mov
inc
add
fs
testb
in
push
js
add
mov
out
cmpl
addb
and
fdivrp
pop
sub
push
or
movsb
pop
cmp
jnp
icebp
leave
mov
mov
movsb
or
enter
adc
mov
loop
add
add
add
mov
lea
and
mov
movsl
inc
add
ds
js
mov
lahf
sbb
cmp
outsb
mov
mov
in
push
mov
push
adc
test
add
xchg
cmp
pushf
sub
loope
cmp
add
adc
ja
add
in
fsts
and
cmp
add
shl
imul
jg
push
and
push
push
pop
mov
add
inc
add
add
add
add
int
int3
push
insb
lcall
into
push
repnz
push
sahf
aam
mov
fisubl
push
lret
repnz
stos
dec
or
pop
mov
xor
sub
fwait
mov
push
fs
and
les
outsl
fdivrp
and
jo
cld
in
add
jmp
pop
xchg
std
and
and
and
pop
cmpsl
pop
xlat
loop
and
fmull
mov
loop
jne
and
outsl
pop
loop
cli
fwait
dec
imul
sub
ret
das
movsl
lcall
mov
in
in
shrb
xchg
push
cmp
xor
add
inc
inc
add
and
ss
jle
sbb
jnp
and
xadd
xchg
out
ds
lds
icebp
call
and
push
js
pop
fiadds
add
cmpsl
mov
dec
lret
push
add
pushl
bound
addr16
out
mov
aaa
int
sub
adc
enter
iret
std
sbb
adc
hlt
cmpsl
insb
sar
int
xor
clc
bound
add
sahf
push
int3
ds
xor
add
gs
aad
mov
adc
ret
dec
test
js
mov
enter
add
fcompl
dec
loop
xchg
into
adc
add
out
pop
sbb
out
add
out
jecxz
pop
or
aam
addb
fsubrl
insb
test
movsb
add
jno
and
mov
pop
hlt
in
inc
add
mov
fsubrs
xor
and
sbb
push
push
mov
adc
repz
test
jnp
addb
push
outsl
jle
daa
int3
loop
sti
cmp
push
leave
mov
pop
daa
dec
stc
sbb
dec
jl
jno
sbb
dec
les
movb
mov
dec
out
cmp
pop
jb
ret
inc
add
mov
xor
inc
fcompl
movsl
push
or
lret
xchg
xor
cmpsb
sub
add
sbb
imul
addb
lret
fcmovnu
popf
mov
icebp
arpl
je
popa
test
inc
mov
pop
rolb
add
pop
lods
jle
add
out
or
dec
or
lock
clc
pop
in
lret
jmp
mov
push
repz
sbb
out
and
xlat
dec
dec
test
cmpsl
test
jno
call
dec
pushf
addr16
mov
out
stos
xchg
xchg
out
clc
jmp
pop
std
push
pushf
mov
add
add
or
mov
mov
mov
lret
dec
sbb
incb
add
outsl
or
jl
mov
or
push
aad
fs
mov
dec
es
add
cmpsb
les
adc
dec
inc
add
jnp
nop
inc
add
jle
fsubrs
mov
mov
fldl
dec
mov
flds
out
push
jnp
loopne
add
cld
dec
adc
or
and
push
rolb
jo
mov
xor
stos
mov
add
call
pop
mov
or
imulb
cs
mov
mov
test
lock
mov
scas
sbb
or
pop
pop
push
add
out
loopne
and
jp
pop
bound
sti
bound
inc
pop
pop
call
add
mov
push
cmpsb
push
mov
dec
jge
test
xchg
xchg
rcll
mov
into
jo
add
xchg
jmp
cmp
pop
pop
mov
sub
push
daa
and
adc
push
inc
add
add
push
js
pop
lock
adc
leave
jmp
push
mov
pop
sbb
fstpt
push
add
pop
cs
or
stos
je
push
cwtl
jg
addb
outsb
outsl
sbb
and
adc
mov
add
xor
shlb
adc
fstpl
or
pop
dec
adc
fiadds
add
xor
lret
inc
add
dec
out
cmp
jl
lahf
and
jecxz
sub
dec
mov
add
cmpsl
lahf
ss
cmpsb
daa
out
in
add
add
out
shll
sub
insl
out
ret
ljmp
aaa
adc
mov
mov
mov
stos
mov
lods
jle
shl
fldcw
jmp
dec
jle
call
nop
xchg
or
ret
int
ja
pop
mov
inc
add
dec
cmp
mov
cld
cmp
notb
jle
mov
fs
movsb
cmp
cmc
push
or
stos
mov
xchg
lret
addb
jns
addb
pop
dec
fcomps
mov
out
mov
scas
ss
repnz
lea
fstl
or
enter
jne
xchg
ret
or
sbb
addb
pop
movl
xchg
add
ljmp
inc
movb
xor
cmpsb
push
add
add
imul
int
mov
rcrb
adc
shll
or
jns
clc
sub
andl
add
adc
sbb
jp
jno
cmp
jecxz
pop
pop
mov
jmp
addl
imul
les
sub
and
add
sub
daa
lea
push
shll
xchg
xchg
les
or
lods
in
xchg
pusha
add
pop
push
std
xchg
xor
add
jbe
jp
push
xor
jns
fnstsw
int
add
loopne
imul
jne
mov
add
shrl
scas
pop
jg
jae
or
addb
jmp
pop
push
jge
ret
mov
dec
lea
jmp
sub
mov
add
mov
lds
push
inc
out
jo
adc
dec
xor
push
dec
sub
lods
inc
add
imul
je
into
lds
adc
aad
xor
lret
lret
stos
mov
jo
jno
insb
sbb
xor
or
push
aas
mov
push
adc
in
xor
dec
testl
in
popf
shll
add
sbb
fsubrs
rolb
fistl
in
xchg
jmp
les
xchg
cmp
mov
in
loopne
les
mov
or
gs
lret
push
shl
sahf
pop
stos
cs
sahf
not
icebp
cmpsb
and
je
or
pop
push
mov
jle
lds
pop
stc
pop
loop
add
pop
pop
and
loop
jnp
fwait
mov
stos
mov
ret
repz
push
add
dec
push
and
and
pop
sbbl
cmp
add
sbb
inc
add
sti
mov
hlt
outsl
cmp
xchg
add
xchg
movsb
cmpsb
lcall
lock
jb
mov
gs
mov
lcall
or
das
test
add
xchg
ret
addb
mov
test
imul
xchg
push
or
jne
adc
sbb
ret
rcrl
mov
pushf
mov
popf
mov
add
cmpsb
xor
mov
push
ret
shrl
fimuls
sbb
xchg
dec
test
add
xor
inc
add
sub
ret
daa
mov
in
or
sub
ret
mov
out
pushf
arpl
mov
mov
jecxz
mov
add
pop
cmpsl
xor
scas
mov
stos
lds
addl
ret
mov
xchg
in
sahf
mov
and
mov
loope
adc
addb
pop
xchg
je
cmc
std
pop
and
sbb
adc
add
add
mov
aaa
jp
add
inc
add
lahf
mov
add
shll
jno
stos
loopne
stos
cli
mov
add
adc
outsl
insb
mov
mov
pusha
add
insl
and
js
idiv
cli
push
mov
adc
leave
lock
pop
outsl
cmp
dec
add
cmp
ss
xor
add
fldt
add
dec
jae
fldt
jl
fsubs
xor
adc
imul
js
inc
add
xor
loopne
add
aaa
and
int
add
pop
mov
or
lds
dec
into
pop
jo
xchg
push
hlt
int3
aad
sbb
enter
and
mov
xchg
xchg
fwait
lahf
adc
lahf
or
enter
test
cwtl
in
test
add
in
add
loopne
xchg
cmc
xorl
aad
inc
add
test
add
push
insb
xchg
cli
lods
iret
sbb
jp
or
mov
push
cmc
addb
test
out
int3
pop
enter
mov
data16
push
add
fadd
add
xchg
cmpsl
les
ds
and
pop
mov
mov
imul
outsb
adc
sarl
or
comiss
mov
cmp
add
jmp
fdivrs
and
mov
mov
ljmp
push
fmulp
icebp
push
adc
jge
xchg
loop
mov
jle
mov
add
fildl
in
pop
push
cmp
add
sahf
pop
repz
add
hlt
lock
xchg
mov
add
add
pop
jo
xlat
add
cs
jge
or
add
jae
jbe
mov
mov
add
add
xor
adc
bound
push
ret
push
jb
mov
in
pop
lods
add
daa
popf
cltd
nop
xor
stos
adc
mov
pop
lea
xor
fisttps
cmpsb
ja
push
rolb
add
sbb
add
repz
mov
out
sub
insl
pop
ss
push
and
in
jmp
in
xor
pop
jge
mov
add
jmp
js
sbb
xor
jb
mov
aas
xlat
sbb
cld
push
aad
add
xlat
out
or
imul
not
pop
add
movsb
ss
mov
inc
cltd
xlat
inc
sti
cmp
iret
cmc
shlb
aas
enter
das
das
imul
inc
xchg
sub
loope
push
cmp
cld
insb
push
mov
push
addb
in
shlb
movsb
imul
xchg
addr16
mov
add
jl
cltd
and
dec
imull
hlt
pop
and
mov
mov
add
lcall
lds
adc
push
adc
xchg
pop
inc
rorl
add
jo
or
sbb
bound
test
add
pop
les
fistps
xlat
les
inc
add
iret
sub
movsb
lret
icebp
lods
sub
mov
mov
push
aaa
push
popa
enter
jns
push
pop
cmp
add
xchg
fs
insb
mov
cmpsb
lret
sbb
sbb
jo
loop
int3
sti
std
xchg
mov
add
fwait
icebp
test
fists
leave
lods
xor
mov
in
addb
ficomps
dec
sub
clc
add
cld
mov
xlat
push
std
ja
jns
inc
pop
movsb
lcall
icebp
test
les
mov
pusha
add
push
xor
or
mov
jl
sub
add
movsb
inc
outsb
std
sti
std
push
add
jo
dec
das
pop
xor
mov
xchg
or
xor
in
xchg
loopne
sahf
mov
je
cmp
jo
and
aad
mov
test
add
mov
fldt
es
mov
jb
jg
pop
xchg
jns
mov
add
cmp
stos
movsb
mov
stc
push
iret
nop
lcall
mov
push
push
pop
fwait
mov
movsb
dec
or
lahf
add
mov
outsb
fstps
imul
mov
pop
adc
mov
aas
adc
add
imul
movsb
jecxz
add
icebp
push
insb
push
sbb
clc
pushf
xlat
scas
dec
pop
jecxz
fs
mov
clc
dec
fwait
jbe
call
xchg
je
int3
inc
add
pop
xchg
lock
sahf
or
popa
or
sahf
lds
dec
pop
dec
pop
dec
fldenv
test
dec
and
cmp
pusha
add
vpackssdw
lret
or
lret
xor
nop
xor
int3
sbb
add
loop
xlat
jno
ljmp
into
scas
sbb
stc
pusha
add
and
cmp
jae
sarl
pop
out
xchg
jl
add
lods
fwait
pop
sub
inc
add
push
xchg
lret
insl
adc
jae
punpckhwd
and
push
pop
das
addr16
xor
push
add
add
mov
cmp
mov
inc
add
lock
mov
lea
not
rcll
in
inc
add
fmull
push
xchg
rolb
jg
or
jl
subl
je
xor
jge
add
add
jmp
jne
aaa
jae
xchg
stos
jb
xor
adc
sub
push
add
cltd
mov
inc
add
pop
mov
test
clc
dec
mulb
inc
and
jbe
mov
out
fs
jb
xor
and
xchg
shll
pop
addr16
fwait
pop
sub
stos
jne
mov
inc
add
xor
adc
icebp
iret
cmp
ss
out
lods
bound
push
sbb
dec
rol
add
add
sub
xchg
out
pop
addb
outsb
mov
outsl
popf
xor
in
inc
add
dec
pop
arpl
lods
fistpll
cmpsb
or
icebp
fnsave
imul
insb
movsl
fidivrs
add
mov
jae
jne
xchg
mov
add
test
repnz
mov
mov
mov
xor
and
mov
es
inc
add
je
jmp
rolb
rolb
push
ljmp
cwtl
dec
xor
loop
gs
les
and
xchg
incb
mov
adc
xchg
in
xor
sbb
add
out
bound
lret
cmp
jge
loope
pushf
fldenv
lds
and
adc
rolb
and
sbb
mov
mov
cmpsl
cltd
aas
repnz
icebp
dec
into
scas
lahf
dec
pop
frstor
lds
cwtl
mov
inc
add
add
inc
add
mov
faddl
xor
loope
add
scas
push
lods
popf
aad
testb
mov
mov
add
sbb
mov
fs
xchg
sbb
jmp
pop
jae
push
lret
add
push
outsb
dec
xchg
sahf
mov
or
adc
push
or
xchg
mov
push
div
loopne
cmpsl
cs
or
pop
cmp
jns
sbbl
ljmp
mov
mov
xor
in
ljmp
mov
mov
push
push
in
xor
jb
mov
dec
or
test
push
rolb
add
ljmp
add
mov
xorl
movl
cmp
ja
je
and
dec
lcall
add
cwtl
jp
mov
xlat
push
cwtl
js
enter
xchg
adc
jno
add
jno
cli
aam
mov
mov
xchg
and
rolb
and
stc
dec
lret
movsl
mov
enter
mov
push
cmp
push
adc
dec
ljmp
mov
pop
repz
iret
mov
lods
lcall
pop
dec
mov
insl
test
xchg
rolb
push
sbb
mov
inc
jp
stos
fbstp
cmove
mov
jmp
add
lcall
inc
add
xchg
aad
inc
sbb
sbb
and
subl
lret
and
inc
add
dec
jns
cmp
lea
sbb
insl
repz
pop
mov
fidivs
rorb
xchg
cli
inc
fidivrl
mov
xchg
cwtl
sti
arpl
hlt
mov
or
add
test
mov
jecxz
push
jg
imul
movsb
jne
out
add
sbb
adc
mov
pop
jne
iret
mov
xor
aad
sub
add
pusha
add
push
out
sbb
add
sbb
popf
dec
rolb
inc
add
icebp
jg
and
sbb
add
mul
pop
inc
mov
outsb
mov
push
sahf
movsb
ret
rcrb
sub
dec
lret
insl
pop
pop
ss
push
inc
add
mov
mov
add
jo
and
adc
icebp
push
out
out
sarl
inc
add
cltd
push
cltd
sbb
hlt
das
test
test
add
movsl
insl
pop
jb
int
addb
jle
orl
fsubr
arpl
or
mov
push
pushf
push
push
sub
fcoml
test
adc
je
bnd
iret
fisubrs
pop
push
push
sub
add
clc
xor
add
pop
and
xchg
mov
mov
mov
roll
mov
xchg
mov
xchg
jno
mov
xchg
lods
jae
xchg
mov
js
jg
bound
mov
stos
mov
outsl
dec
or
iret
rclb
mov
test
pop
mov
ss
mov
mov
cmp
push
fmull
fwait
add
add
pop
mov
mov
test
or
mov
sbb
inc
cmp
dec
in
lds
test
mov
and
arpl
sub
rolb
repnz
pop
push
jno
dec
adc
push
test
out
adc
lds
ds
add
in
mov
in
shlb
mov
jmp
add
jne
add
add
inc
add
mov
mov
pop
jle
add
std
mov
mov
add
fcoms
insb
shl
sub
add
mov
mov
div
bound
and
andl
push
pop
int3
cltd
arpl
pop
cmp
fwait
jge
add
jge
mov
mov
mov
add
in
ret
mov
nop
ret
xchg
cld
sbb
iret
pop
dec
xchg
dec
sub
adc
jge
push
aaa
aad
in
lea
cmpsl
out
je
cld
lret
adc
sbb
mov
mov
mov
fnsave
pop
int3
push
adc
andl
jl
jp
pop
fildll
fimuls
add
sbb
rcl
mov
push
addb
mov
push
add
and
add
cmp
call
negl
pop
adc
add
lods
dec
mov
shl
mov
aad
call
addr16
call
mov
dec
jp
cmp
sar
pop
das
es
loope
pop
sbb
and
jb
mov
push
sub
sbb
fdivrs
or
inc
mov
mov
ja
sbb
repnz
pop
adc
shll
stc
movsb
cmpsl
dec
arpl
dec
ljmp
out
nop
adc
mov
jnp
aam
rolb
add
dec
out
out
push
cmp
std
push
lds
add
roll
add
pushf
lods
jno
idiv
mov
inc
add
stc
cmc
sub
inc
ja
mov
sub
je
sbb
pop
inc
or
pushf
pop
jmp
mov
dec
cli
cld
lods
sbb
loopne
into
in
push
scas
inc
lahf
mov
enter
jecxz,pn
pop
inc
pop
test
notb
dec
dec
mov
jo
add
je
cltd
data16
mov
cmp
add
ret
aaa
mov
sbb
in
push
and
dec
inc
add
cmp
pop
out
mov
rcl
ja
cmp
push
or
movsl
out
pushf
aam
dec
mov
nop
sbb
stos
sti
and
adc
or
mov
add
dec
mov
adc
xlat
sub
adc
cwtl
fs
scas
ds
scas
loope
lret
es
movsl
rcll
fcoms
pop
addb
add
push
gs
add
stc
xor
inc
and
jae
push
mov
xor
jg
icebp
mov
push
or
add
es
jmp
into
ljmp
addr16
bound
dec
fcomps
mov
daa
lret
mov
mov
out
fisttps
push
bound
fwait
jae
gs
insl
inc
vpextrw
lds
ds
mov
mov
fstl
in
xchg
jecxz
fdivl
iret
movsl
mov
dec
dec
les
and
add
cmpsb
jge
xchg
dec
in
bound
mov
les
or
jg
loop
adc
out
sbb
and
scas
pop
or
push
jae
mov
loope
dec
sbb
and
scas
adc
outsl
push
xchg
dec
mov
pop
std
arpl
add
jbe
sti
fwait
lret
lea
add
fistps
cwtl
call
mov
add
inc
add
xor
mov
loop
add
repnz
lret
xor
outsl
clc
fdivrs
cmp
mov
arpl
lods
or
nopl
mov
xchg
xor
loope
lret
mov
and
hlt
sbb
sbb
or
adc
rolb
and
fists
rorl
xchg
out
and
push
cmc
mov
ss
inc
gs
pop
mov
inc
int3
jo
stos
jne
scas
fld
add
jns
mov
arpl
add
adc
pop
mov
lea
cli
mov
mov
in
outsb
mov
cmp
mov
add
flds
add
mov
and
das
pop
out
pop
xor
jg
push
sub
insb
jbe
fdivl
in
jecxz
filds
jnp
or
jmp
out
jae
mov
cwtl
pop
mov
or
mov
outsb
mov
add
cmp
pusha
add
xchg
xor
add
sahf
iret
incl
mov
test
fistpl
inc
pop
call
sub
sbb
cmp
add
outsb
fisttps
cmp
pop
scas
lock
jae
inc
add
rolb
jno
iret
sub
add
push
imul
int
cld
call
sub
mov
dec
push
jge
mov
and
pusha
add
outsb
aam
int
fwait
sub
and
mov
mov
sbb
xchg
daa
xchg
mov
aam
xor
fsincos
scas
mov
cmp
xlat
in
rolb
bound
les
adc
dec
mov
jnp
out
addr16
xor
jmp
pop
inc
add
push
mov
pop
loop
scas
dec
jp
sbb
cmp
into
dec
andl
and
bound
out
add
push
int
lea
lock
jle
rolb
jb
cmc
fwait
scas
xchg
jae,pt
std
xchg
arpl
fwait
out
mov
add
shlb
inc
pop
push
lea
fldenv
fldenv
add
cli
lahf
stc
loop
push
stc
mov
fldcw
test
cmc
loope
stos
push
sbb
loop
out
sbb
pushf
loope
das
out
ss
mov
or
add
jp
add
leave
mov
imul
add
and
fldcw
aam
sahf
outsl
lods
xor
sub
mov
call
xor
loop
add
arpl
mov
cwtl
inc
xor
xchg
roll
sti
push
lret
mov
call
push
shlb
and
mov
add
mov
xchg
addb
dec
jb
add
pop
push
call
ja
mov
or
pop
jae
add
add
in
push
int3
mov
fstpl
mov
loope
sub
and
cmpsl
dec
add
je
dec
sbb
xor
pop
pop
jp
and
push
lock
mov
dec
incb
add
push
dec
test
add
ljmp
aam
fwait
adc
inc
pop
and
pop
int3
pusha
add
xor
push
fs
jle
fld
add
repz
lret
sbb
ret
push
mov
xchg
adc
insb
push
out
and
push
scas
push
out
push
add
ljmp
and
iret
adc
aam
mov
or
insl
lock
pop
scas
add
faddp
xchg
sbb
dec
pop
mov
adc
add
adc
cmp
xchg
sbb
adc
nop
pop
pop
mov
out
outsb
push
mov
dec
aas
int
shrl
jns
clc
les
xchg
or
mov
sub
movb
xor
insb
xchg
push
pusha
add
stos
dec
xchg
imulb
ret
adc
cmp
bound
mov
and
mov
fadd
add
repz
sub
std
xchg
enter
fsts
movsl
mov
xchg
jo
xor
mov
in
leave
cld
call
outsl
rolb
fcoml
fstps
adc
mov
lret
test
and
fsubl
jl
pusha
add
out
in
push
into
inc
pop
ss
aam
gs
cmp
sahf
inc
add
jp
pusha
add
push
xor
jmp
shr
push
add
ja
test
cmc
push
imul
cmp
xchg
xchg
test
xchg
aaa
pop
jne
mov
inc
add
movsb
call
add
cli
inc
mov
test
mov
jle
mov
test
clc
das
push
adc
jge
outsb
ss
fnstcw
fwait
push
call
add
xchg
mov
and
or
fcmovne
adc
pop
pop
insl
xchg
xor
sub
aam
stc
fdivs
lahf
aad
sbb
nop
shl
jne
mov
cmp
inc
sbb
nop
inc
add
mov
je
sub
sbb
add
ds
push
and
xor
loop
inc
add
imul
xchg
aas
arpl
pop
push
loop
add
add
mov
scas
popf
daa
arpl
or
enter
popa
mov
xchg
mov
out
xchg
mov
cmp
cmpsb
gs
jmp
cmp
sub
fidivs
mov
xchg
dec
rcl
leave
std
sbb
popf
cmpsl
mov
icebp
ficomps
pop
dec
leave
sbb
outsl
mov
mov
dec
clc
in
loopne
outsl
mov
nop
pusha
add
add
in
xchg
inc
add
popf
arpl
adc
out
ret
add
dec
cmpsb
mov
add
jbe
nop
lea
push
sarb
add
call
add
bound
scas
imul
daa
add
push
js
clc
jle
add
xchg
loope
out
rol
add
lods
outsb
inc
add
mov
mov
sub
xchg
insl
jbe
out
pop
xor
dec
lahf
fcomps
pop
aam
data16
and
and
xor
sub
cmp
aas
push
mov
inc
add
mov
pop
pop
push
push
mov
xor
stos
aaa
add
fs
add
xchg
arpl
add
js
jmp
sbb
rolb
add
mov
push
loopne
fwait
pop
int3
sbb
scas
cwtl
dec
push
sti
push
test
pop
aaa
das
push
and
fmuls
dec
dec
sub
jb
xchg
cmp
jl
rcr
cmp
add
pop
xor
mov
mov
xor
sub
aad
je
gs
xchg
ficoms
adc
dec
dec
mov
add
cmpsl
dec
mov
xor
out
loope
or
fisubrl
shrl
into
pop
mov
ja
push
pushf
mov
data16
mov
push
mov
or
sahf
jno
pop
and
dec
inc
add
add
ficomps
adc
push
insl
or
push
inc
fldt
add
adc
es
mov
add
dec
popa
sbb
dec
jae
push
adc
or
lds
lods
sbb
mov
lods
mov
mov
xor
mov
mov
or
fst
sub
jnp
lret
icebp
lods
insb
mov
or
mov
repz
sbb
sbb
aas
mov
data16
fsubp
jmp
shll
sub
cwtl
or
icebp
mov
add
movsb
aad
jns
and
xor
inc
mov
enter
rcr
cmp
add
mov
xchg
loope
loopne
mov
int3
or
call
lahf
push
pop
pop
into
adc
int
jmp
fdivrl
out
mov
fidivs
mov
or
pusha
add
pop
xchg
add
push
sub
or
std
mov
in
mov
lods
or
xor
sbb
out
jmp
mov
push
push
mov
inc
cld
inc
cmp
inc
mov
lods
fildl
inc
add
or
stos
lret
pushf
push
jae
les
xchg
mov
nop
mov
or
add
xor
ljmp
jg
jg
xchg
jns
add
fidivs
pop
int
inc
add
xchg
std
cmp
push
xchg
cs
je
lds
fbld
add
enter
outsb
ret
jae
sbb
xchg
hlt
xchg
flds
adc
lahf
mov
adc
add
mov
ss
or
xchg
push
push
imulb
insb
xchg
daa
xor
xchg
addb
or
mov
sub
sahf
sub
lcall
push
xor
mov
mov
xor
add
dec
sbb
mov
outsl
loope
jge
fisubrs
std
mov
nop
push
fisttpll
pushf
jl
add
repnz
jmp
popa
jg
lcall
ds
add
xchg
xchg
cmp
imul
popf
sub
xchg
mov
mov
jle
or
loop
xchg
fsts
outsl
addb
icebp
popf
xorl
add
mov
xchg
dec
xlat
xchg
fbstp
mov
pop
loop
jns
add
push
test
push
faddl
lea
xlat
sub
pop
pusha
add
out
cwtl
jmp
and
ss
jp
js
popl
jno
mov
dec
jge
fdivrs
test
sti
test
lret
out
adc
inc
add
sub
pop
jle
mov
mov
push
rcrb
add
push
add
mov
scas
bound
cmp
andl
pop
xor
and
cmp
inc
lahf
repz
xor
lret
imul
mov
add
mov
inc
mov
test
cmp
jo
lret
jg
imul
cmp
pop
mov
jns
jl
dec
std
cli
hlt
sub
das
xchg
sub
dec
add
pop
pop
add
xchg
movb
daa
pop
mov
mov
mov
add
shrl
pusha
add
lret
lcall
sbb
jle
inc
add
test
inc
push
scas
mov
nop
pushf
lods
in
push
sbb
xor
imul
test
add
mov
mov
mov
stos
fucomip
int3
push
add
aad
push
imul
push
mov
in
movb
rolb
mov
stc
mov
outsl
mov
sub
add
push
add
insl
sub
call
jge
dec
mov
sbb
inc
pop
fidivl
push
adc
add
add
add
stc
out
fiaddl
jmp
scas
repnz
movb
dec
pop
mov
ljmp
jb
jbe
mov
or
addl
and
xor
or
les
divb
xchg
mov
inc
or
js
pop
in
ret
fildll
leave
adc
outsl
sub
pop
adc
popf
pop
imul
dec
fdivl
sbb
add
add
in
pop
adc
ljmp
gs
inc
adc
inc
add
test
push
int
stos
movsb
adc
mov
add
jle
repnz
clc
iret
cwtl
test
sbb
scas
jmp
sbb
test
out
dec
in
inc
cmpsb
loopne
orl
and
pop
sbb
jecxz
add
sub
mov
dec
in
inc
add
add
adc
test
arpl
movb
fdivs
clc
stos
arpl
sub
mov
add
lods
dec
popa
cmpsl
xchg
movsb
jp
jbe
sahf
lahf
insl
loop
push
popf
add
add
inc
add
cltd
fcmovnbe
pop
mov
rorl
pop
or
addb
cmpl
xor
out
add
dec
pop
pop
imul
loopne
cwtl
xor
fmull
ljmp
aas
arpl
inc
add
inc
xor
add
add
dec
aas
jno
jle
sbb
int
sub
test
stc
call
add
test
dec
sti
pushf
sbb
pusha
add
or
scas
out
cli
scas
ret
out
push
and
or
push
std
in
sbb
das
lods
jne
andl
and
adc
and
mov
mov
jmp
xlat
enter
xor
inc
add
pop
or
xchg
popf
inc
add
hlt
hlt
pop
jge
pop
xchg
movsb
adc
test
adc
insl
pop
sahf
clc
ja
icebp
ret
movsl
popa
enter
mov
imul
mov
adc
fmull
add
jne
insb
incb
cltd
js
mov
repnz
loopne
xor
inc
mov
fwait
scas
scas
stc
fdivr
dec
pushf
daa
jae
mov
add
sub
int
jne
fnstcw
jbe
insl
jns
outsl
jae
push
add
pop
gs
lret
cmp
dec
cwtl
int3
sbb
dec
scas
dec
lcall
lea
ja
pop
imul
add
xchg
mov
test
xor
sub
pop
push
sub
loope
lcall
cmp
xor
outsb
push
ljmp
mov
push
repnz
pop
fdivrl
dec
and
cmp
lret
sahf
imul
loopne
int3
insb
push
dec
into
adc
scas
arpl
xchg
test
mov
lds
fstl
add
repz
sbb
cmp
and
push
add
add
psubd
test
xchg
add
mov
mov
mov
pop
xorl
fwait
inc
out
sbb
add
stos
mov
pop
out
and
iret
push
cld
lods
sbb
mov
mov
push
or
push
cmp
add
push
xor
lahf
jo
mov
sahf
arpl
inc
add
rorl
dec
cltd
cli
push
xchg
lahf
mov
test
movl
and
stos
cmp
rolb
fisubl
dec
inc
add
dec
rolb
xchg
push
sbb
cmp
je
ljmp
push
push
pop
xchg
movsl
fdivl
mov
and
adc
imul
pusha
add
dec
imul
int3
dec
inc
sbb
lret
adc
inc
nop
mov
sub
pop
loope
mov
add
dec
sbb
cld
addb
stos
add
pop
mov
stc
xor
pop
mov
jbe
add
idiv
fnstcw
repnz
mov
dec
sti
test
test
adc
inc
add
imul
pop
mov
add
pop
xlat
inc
add
adc
mov
add
add
sarb
jae
and
sbb
push
pop
xchg
cmpsl
loop
cmc
sbb
aaa
mov
xchg
pop
int
cmp
inc
add
add
jno
mov
cmp
add
scas
addb
popa
in
into
call
movsb
xor
lret
sarl
inc
add
rolb
loope
mov
cmp
inc
add
jbe
loop
nop
mov
add
int
sbb
movsl
push
add
cmpsb
mov
mov
xor
mov
mov
add
add
addb
fnstcw
and
clc
aam
aas
sahf
inc
add
repz
fsubrl
and
mov
sub
mov
into
and
sbb
and
fadds
or
xor
mov
add
or
lahf
sub
jne
jo
fbld
add
cld
add
movsl
shrl
push
jne
imul
jl
push
inc
test
not
dec
loop
jge
addr16
filds
sub
pop
aas
sub
jo
mov
stos
push
loop
test
es
lcall
xchg
in
or
fistl
mov
push
dec
dec
movq
push
scas
inc
add
stos
or
fidivs
inc
inc
add
push
add
loop
jb
movsb
jge
push
leave
jnp
iret
outsl
stc
xlat
fildl
lea
xor
mov
push
sar
lock
inc
mov
xor
nop
fnclex
lock
outsb
cmp
notl
xor
add
lcall
add
rolb
push
ds
add
ret
cmpsl
mov
adc
or
mov
outsb
das
jge
repz
or
arpl
sub
add
add
aaa
testb
aad
psubsb
add
addl
hlt
push
inc
decl
jno
xchg
aaa
int3
faddp
cmpsl
mov
inc
jne
add
pop
dec
rcl
outsb
cmp
pushf
sub
stos
push
clc
ss
jnp
sub
jmp
mov
sbb
jae
xlat
shl
fcmovbe
lods
add
shlb
stos
and
adc
mov
test
in
and
sbb
pop
into
shr
cwtl
push
movb
dec
mov
and
outsl
ss
out
lds
mov
jp
sarb
jo
clc
sbb
add
push
mov
cmc
ret
daa
add
push
add
outsb
xchg
push
push
pop
sbb
jno
movb
lahf
cmpsl
test
add
aas
into
mov
push
insb
adc
dec
jns
sub
pop
add
sbb
psubusb
push
movsb
subl
jnp
fnsave
clc
out
jmp
jp
faddl
add
das
pop
stos
rclb
movsl
and
push
addb
loope
jp
push
mov
dec
push
xchg
mov
mov
and
lret
insl
adc
sbb
or
aam
mov
stos
mov
mov
aad
out
adc
sub
aaa
movsb
mov
lock
repnz
jle
jp
add
std
mov
cli
xchg
adc
or
mov
and
pop
mov
mov
jno
fmuls
jo
stc
bound
cmc
sub
inc
loope
sbb
mov
andl
out
push
xchg
inc
stos
adc
push
jnp
jmp
sub
mov
ret
sub
jb
aas
outsb
sub
sub
add
test
pop
rolb
add
lock
popa
sbb
add
mov
sbb
lea
cmp
mov
sub
pusha
add
popf
sub
cmp
scas
inc
test
leave
fiaddl
rorl
fs
test
std
jecxz
inc
add
adc
add
pop
push
call
and
xor
cmp
dec
iret
mov
cmp
add
lock
or
call
mov
or
aam
dec
fadds
push
add
inc
add
add
leave
or
out
dec
jnp
push
shrl
inc
or
rolb
arpl
jg
mov
fsts
pushf
dec
inc
add
movb
rorb
daa
dec
pop
sub
ss
add
into
push
cmp
fimuls
jne
mov
mov
cld
je
adc
xchg
fwait
xor
inc
add
sbb
daa
movb
mov
pushf
in
into
stos
mov
fsubrs
add
cmp
mov
fsubp
cmpsb
fidivrs
bound
mov
stos
clc
out
es
cmpl
push
ss
repz
add
in
bound
daa
fistl
or
idiv
fstpt
push
adc
int
xchg
sub
movsl
cld
pop
pop
out
mov
or
je
add
aaa
mov
mov
cmpsl
xlat
sbb
mov
xor
push
into
scas
mov
mov
pop
fcmovnu
ja
fistpl
push
cmp
lock
xchg
inc
or
cs
add
cmp
jbe
sub
sbb
and
jne
out
imul
jl
dec
xor
push
bound
or
mov
push
dec
sbb
adc
pusha
add
clc
loop
xchg
call
pop
cs
inc
add
and
mov
sub
add
mov
inc
cltd
movsb
jo
cmpsb
dec
fimull
add
xchg
adc
xchg
cmp
dec
mov
in
add
jmp
add
push
add
aaa
bound
bound
push
and
ret
xchg
push
das
aad
xchg
xchg
call
sub
test
push
lock
mov
or
mov
stos
js
dec
sub
push
ljmp
or
sub
and
pusha
add
shrl
xchg
push
add
std
cwtl
idivl
call
outsl
in
test
jle
push
cmp
cmpsb
mov
adc
add
pop
dec
mov
pop
dec
sub
jns
cmpsb
or
mov
push
and
jge
xchg
aad
add
lods
out
movb
test
push
xor
arpl
push
xorl
stos
cmpsb
inc
hlt
mov
add
push
lds
popf
cmpsl
aaa
stos
insb
xlat
rolb
addb
scas
outsl
jle
and
adc
decl
push
mov
cmp
sub
add
rolb
sub
inc
add
fcoms
add
jae
sub
mov
add
and
notb
mov
shlb
daa
inc
insb
popf
xor
popf
dec
ja
mov
mov
loopne
lcall
cmp
lret
mov
xor
add
cli
pop
xlat
mov
ljmp
sub
fmuls
addb
jae
add
mov
mov
cmp
movsl
js
sar
dec
add
sbb
popa
faddl
adc
and
loope
stc
aaa
mov
nop
lock
lods
add
test
ret
ja
mov
push
and
jnp
jecxz
int3
les
pusha
add
xchg
mov
lcall
sbb
mov
sbbl
push
scas
pop
mov
and
movb
rolb
pop
test
or
add
js
sbb
arpl
pop
and
inc
add
jle
cmp
fwait
shrl
shlb
adc
fidivrs
stos
and
loope
push
xlat
or
fstl
clc
cmp
das
or
pushfw
lahf
mov
ds
ljmp
out
test
test
fisubl
adc
shl
repnz
jmp
shl
cwtl
adc
mov
iret
repnz
inc
ja
push
hlt
xor
stos
pop
pop
xchg
xchg
clc
or
scas
stos
popa
aaa
inc
repz
push
xor
out
dec
js
js,pt
lods
adc
push
xchg
and
cli
les
push
aad
enter
sahf
adc
lcall
mov
sub
daa
loop
movsl
jmp
mov
add
and
jns
and
lret
fs
xlat
jp
mov
add
cmp
mov
cmp
sbb
sub
in
xor
inc
repnz
add
add
jmp
je
arpl
xchg
sub
add
pop
cmpl
in
ret
mov
movsl
cli
mov
add
add
add
jp
ficoml
pop
add
aam
outsl
out
dec
outsl
cli
and
cmc
mov
mov
mov
sar
aas
cmpsl
ljmp
int
xor
xchg
nop
pop
pop
cmc
inc
add
pop
dec
ret
hlt
inc
sarb
adc
pop
lods
je
add
mov
pop
inc
push
cltd
adc
add
imul
xor
dec
fistl
addr16
dec
popa
mov
inc
pusha
add
loope
fildl
lds
addb
add
scas
std
mov
jmp
das
in
add
daa
cmpsb
rorl
push
or
add
cmpsl
bound
mov
arpl
adc
mov
testb
add
pop
adc
push
les
inc
add
pop
add
into
imul
add
adc
push
daa
lea
fisttpll
adc
cmp
jno
jne
fdivrl
add
repz
aam
fcom
popf
ficoms
ror
in
in
push
es
add
xlat
shlb
xchg
int3
js
loope
cmpsl
pop
sbb
inc
add
popf
add
addb
mov
xor
adc
loope
sbb
int3
add
repnz
repz
xchg
bound
inc
add
sub
inc
lcall
ret
test
push
mov
xchg
xchg
jle
aas
addb
ds
or
test
aam
dec
lods
mov
add
cld
imul
std
push
jecxz
jp
pop
cmp
add
cld
rorl
cltd
dec
adc
div
ja
insl
adc
fmull
dec
inc
add
addl
lds
push
fcoms
add
shl
push
add
jb
adcl
lock
xor
lock
add
stos
out
mov
daa
hlt
imul
inc
add
add
daa
mov
lahf
outsl
sbb
adc
aad
bound
inc
add
clc
fsubrl
imul
inc
rolb
mov
add
sbb
pop
sahf
jmp
nop
adc
sbb
and
xor
imul
inc
ret
je
pop
loope
icebp
or
scas
cmp
repz
dec
repnz
cwtl
jmp
jmp
add
fs
inc
add
or
rolb
fcmovnb
scas
outsl
dec
and
adc
and
lds
insb
xor
pop
push
pop
lret
mov
push
and
cli
mov
push
push
leave
xchg
and
mov
adc
dec
adc
sti
inc
mov
mov
aam
dec
arpl
add
or
add
jge
push
in
jle
sub
test
js
xor
cmp
cmc
fnstsw
leave
loop
aam
xchg
ss
and
jno
jns
add
inc
add
aaa
das
sub
repz
lea
xor
dec
cmp
mov
push
test
roll
add
les
call
mov
push
repz
mov
mov
leave
sbb
add
ftst
into
insl
mov
pop
pusha
add
lret
out
stos
lcall
addb
dec
push
fbstp
pop
xchg
scas
cmp
adc
cmp
in
jb
add
nop
fwait
pop
in
inc
add
gs
pop
cmp
sub
adc
sub
mov
dec
aad
cltd
in
xchg
std
insl
jnp
add
sbb
ss
push
iret
pop
or
insb
push
add
movsl
addr16
cmp
clc
cld
mov
inc
dec
nop
packuswb
rolb
push
neg
rolb
add
add
jns
pop
inc
add
sbb
int3
jno
js
mov
or
lods
mov
xchg
bound
add
add
jecxz
imul
cmp
mov
xchg
cmp
test
in
cmpsl
mov
mov
out
shll
stc
mov
mov
pop
add
cltd
xchg
jle
inc
cwtl
fisubrl
add
add
data16
dec
insb
adc
add
mov
movsl
add
lods
dec
and
addb
outsl
mov
push
call
sbb
jnp
add
scas
cmp
mov
or
lock
sbb
inc
add
sub
sbb
in
mov
inc
xchg
mov
add
movsl
call
int3
sub
jo
or
andl
das
mov
mov
add
push
dec
cmp
mov
jne
es
out
jne
out
jb
fdivrs
add
xchg
jp
mov
mov
add
add
fistpll
xor
enter
shlb
add
repz
shl
bound
out
test
cmpsl
inc
add
rclb
xor
rolb
fnstcw
stc
shlb
cmp
or
add
add
jb
in
jge
push
dec
cld
stos
xchg
fs
repnz
mov
outsb
mov
outsl
sti
lods
fucom
popf
add
push
pop
mov
fstpl
loop
mov
fstpt
pop
int
add
xchg
or
into
mov
xor
fldl
pop
and
dec
movntq
xchg
lock
push
mov
fistl
push
add
push
aaa
enter
ror
and
or
sarl
sub
sbb
ljmp
jae
fsubs
je
fnsave
cmp
movsl
pop
lret
inc
add
adc
mov
add
lds
push
jo
cmp
xor
dec
mov
xchg
pop
mov
cmp
iret
imull
push
shl
pop
or
ss
in
ret
cmp
rolb
add
in
mov
xlat
movsl
mov
fcmovnu
insl
add
repz
add
sbb
jg
mov
jmp
jo
push
inc
es
or
std
test
rolb
popf
mov
adc
cmp
scas
inc
adc
stos
nop
test
xor
je
dec
fisubrs
push
add
lea
addb
add
cld
push
add
mov
mov
test
mov
or
gs
aaa
cld
loop
fnsetpm(287
xor
outsl
aas
add
movsl
pop
jne
aaa
test
leave
neg
std
mov
sbb
push
xlat
dec
insb
push
dec
pop
inc
add
shl
aaa
jl
imul
add
add
jmp
lea
cli
loope
cwtl
ljmp
imul
je
mov
les
aaa
dec
fs
dec
mov
ret
add
or
mov
push
out
mov
mov
fidivrs
js
mov
mov
dec
sub
xchg
daa
ljmp
add
lret
out
movb
push
sbb
add
or
scas
sti
not
movsl
loope
mov
jae
outsl
pop
arpl
scas
jns
push
inc
adc
or
dec
movsb
test
mov
rclb
mov
jb
sub
add
or
push
out
inc
add
scas
dec
les
insl
lret
enter
mov
mov
fsubs
add
jp
es
push
hlt
fsub
xchg
aaa
lret
lock
pop
pop
icebp
adc
xchg
xchg
or
filds
shll
or
xchg
mov
add
or
inc
out
sbb
xor
add
push
add
mov
popa
test
inc
add
fnstsw
add
imul
mov
add
or
mov
in
enter
adc
xor
add
mov
xchg
xchg
xlat
inc
add
xlat
lahf
adc
xor
or
xchg
es
int
cmpsb
and
fldcw
mov
fistps
repz
mov
lods
inc
add
fmulp
mov
or
and
insl
lea
out
loop
in
das
cld
or
or
sub
dec
mov
int
push
push
mov
jne
sub
cmp
jno
mov
lea
sbb
inc
add
aad
add
xchg
adc
outsb
add
mov
hlt
mov
cli
jns
loopne
insb
mov
jge
rcrl
decl
push
in
add
xor
adc
dec
sbb
adc
ja
add
dec
jnp
enter
pop
inc
add
pop
orl
xor
lods
pand
repz
mull
or
xchg
inc
jnp
pop
in
cmp
lods
mov
add
inc
add
and
lock
out
aam
xchg
mov
mov
add
xchg
clc
and
xlat
lret
push
outsb
xchg
sub
fucomip
add
mull
out
or
mov
arpl
lock
and
pusha
add
scas
push
loope
dec
test
sub
inc
add
movb
std
das
dec
ja
andl
aaa
fsubp
popf
lcall
add
andl
push
mov
shll
cwtl
imul
cmc
cmp
xchg
js
pop
fistps
pop
lret
push
add
mov
pop
adc
daa
lods
xchg
rcll
fisubrs
cmpsl
test
rorl
fcmovb
add
or
adc
sub
xor
shlb
loopne
sbb
addb
hlt
cmpsl
in
add
enter
jnp
mov
arpl
repnz
xchg
sub
or
add
popa
rolb
outsl
cmp
into
sub
test
arpl
pop
aam
clc
int
sbb
loopne
in
dec
xlat
addb
loop
pop
jl
add
xchg
add
xor
pop
ljmp
cmp
add
das
inc
add
push
pop
fbstp
cwtl
loope
mov
repz
add
cmp
mov
mov
movsb
test
add
stc
inc
mov
add
add
lret
lret
lret
push
add
or
ja
repz
arpl
pop
mov
and
add
sub
push
xor
and
stos
sub
mov
insl
fisttpl
inc
iret
cwtl
add
sub
fwait
cmp
jle
xchg
pop
jle
ds
mov
call
ret
ret
out
push
jle
add
shrb
add
or
add
adc
loopne
lock
addr16
or
push
add
mov
add
cwtl
xor
xor
or
sub
or
inc
lds
jo
test
imul
dec
fldl
dec
das
movb
cmpsl
xlat
jnp
stos
mov
push
cmp
push
add
mov
add
or
sbb
das
sub
dec
test
fmull
pusha
add
add
jecxz
addb
loopne
xchg
push
loopne
xchg
out
rorb
or
push
add
inc
xchg
ljmpw
in
sbb
imul
repz
rolb
pop
dec
dec
pusha
add
lcall
vandps
inc
cltd
fimull
cmpsb
retw
test
mov
stos
in
jo
in
cltd
dec
addb
addb
sahf
pop
outsl
cltd
stos
sti
sti
imul
mov
add
inc
add
popa
mov
jg
xchg
scas
lahf
push
inc
add
add
cltd
dec
inc
add
inc
popa
imul
inc
or
and
cmp
and
vcvttps2dq
in
insb
popf
inc
add
stos
cld
pop
stos
push
mov
dec
jp
add
pop
pop
test
aaa
loop
pushf
adc
jg
jo
popa
jb
dec
pushf
stos
pop
loop
nop
ficoms
mov
nop
xor
jmp
xchg
dec
scas
mov
fidivrl
out
sbb
or
mov
xlat
adc
out
sbb
ja
fldenv
jb
cwtl
bound
cltd
cmpsl
push
push
sarl
add
data16
and
stos
sbb
call
mov
shll
cli
mov
inc
add
fldl
lcall
pop
cltd
xlat
leave
imul
scas
cmp
push
mov
pop
orl
adc
out
pop
and
sub
movb
dec
cmpsb
jae
mov
sbb
inc
add
mov
push
scas
mov
inc
sub
add
cmp
add
std
lret
add
mov
pop
mov
add
xchg
movsb
cltd
addr16
mov
outsl
push
cs
sub
pop
mov
sub
enter
push
psrad
cli
sbb
pusha
add
add
add
mov
mov
popa
pop
pop
sub
outsl
sbb
xchg
idivl
mov
add
jb
jmp
push
xor
push
xlat
jae
sti
add
push
and
loope
jnp
hlt
or
ljmp
sub
gs
push
loopne
sub
jbe
add
mov
dec
lcall
in
pop
inc
add
cmp
add
shll
add
arpl
stos
daa
sub
or
loopne
int3
lods
push
pop
mov
inc
add
mov
xor
pop
jne
cmp
lock
add
xchg
dec
iret
loope
mov
xor
mov
pusha
add
push
fsubrl
fldl
pop
inc
xchg
pushl
cwtl
gs
jb
xor
dec
movsl
mov
ret
dec
and
sub
fcmovne
fsub
or
xor
mov
xor
fmuls
inc
add
push
in
sbb
dec
pop
jl
add
add
ret
out
lcall
add
gs
cmp
xchg
mov
pop
aas
push
add
scas
les
jmp
mov
sbb
out
jo
les
inc
pusha
add
orl
dec
popa
mov
daa
in
or
addb
out
cwtl
cli
xor
inc
mov
pop
inc
ss
test
div
pop
insl
add
aad
cmp
push
xchg
ds
add
jbe
cld
nop
lahf
stc
sahf
or
xor
add
sbb
dec
fdivrs
cmp
add
adc
sbb
cmpsb
loop
jae
push
roll
mov
dec
das
push
imul
aad
dec
addb
cmp
pusha
add
jle
loopne
adc
pop
adc
repz
rol
xchg
cmc
ljmp
pop
fcmovu
mov
add
sub
imul
movb
cs
lahf
sti
sbb
enter
mov
lcall
xchg
stc
sbb
cmp
pushf
or
das
repnz
loopne
dec
out
add
lahf
into
add
mov
arpl
pop
mov
add
les
into
test
lods
or
pop
adcl
sahf
iret
push
xor
inc
pop
jmp
mov
pop
push
mov
popf
loop
adc
and
fwait
push
iret
test
add
xor
cmc
sbb
out
aam
and
lret
xchg
aam
add
fdivl
dec
jbe
mov
push
add
call
jg
cmp
or
push
add
inc
dec
and
addb
adc
pop
add
jp
inc
add
adc
in
pop
popf
in
sub
xchg
mov
clc
ljmp
and
mov
cld
movsb
inc
je
in
push
and
mov
les
addb
movsb
mov
add
push
ss
xchg
add
addb
dec
imul
dec
jmp
and
mov
fdivrs
stc
inc
add
fistl
aas
mov
cmpsb
into
fbstp
fstps
imul
add
pop
pop
movb
add
sti
rorl
pop
orl
stos
jno
daa
test
in
sbb
sbb
jns
adc
inc
add
mov
enter
xor
jle
lret
add
insb
mov
pushf
jge
dec
xlat
mov
pop
pop
mov
inc
add
push
cli
mov
aam
and
mov
or
fwait
imul
imul
pop
popf
call
nop
scas
dec
inc
add
pop
pop
mov
pop
repz
ss
push
push
out
sbb
push
pushf
xsaves
ss
nop
cltd
fnstcw
xor
mulb
lods
adc
mov
sbb
mov
adc
pop
mov
pop
insl
jno
out
push
out
dec
ljmp
jae
rcll
icebp
das
fiadds
jb
push
sti
jp
add
call
fldl
mov
data16
ljmp
inc
mov
lods
aaa
pop
jbe
inc
add
fwait
dec
inc
add
add
std
fcoml
jnp
cmc
imul
fsubrs
mov
add
mov
xchg
push
push
nop
in
ja
inc
ret
xchg
leave
bnd
sbb
add
cmp
das
xor
inc
add
mov
ret
add
int3
out
xor
loopne
inc
je
sub
es
ss
arpl
sti
add
mov
or
popf
clc
pop
in
pop
movsb
ss
jne
cwtl
cmp
popf
addb
lret
sub
fwait
int3
xor
rol
add
inc
ret
xchg
cmp
add
pop
std
xchg
cltd
shll
idivl
or
lock
fisttps
cmp
bound
bound
shrl
ljmp
fdivrp
cs
add
into
push
nop
ds
sbb
paddb
add
fstpl
into
inc
mov
inc
add
and
xchg
neg
std
scas
aas
xchg
lcall
ja
fstl
jmp
cli
clc
jle
jns
lods
add
pushf
stos
inc
iret
add
mov
nop
cmp
pop
fmulp
bnd
lahf
sub
cli
ja
mov
pop
je
pop
sub
add
mov
lahf
sbb
xor
add
jns
mov
and
mov
stc
outsb
ja
es
std
lret
mov
sub
push
dec
xchg
add
shll
das
sbb
pushf
aas
jg
push
xchg
lds
cmp
pop
int3
dec
adc
add
pop
sub
int3
jmp
pop
mov
jnp
mov
lods
dec
push
jmp
ljmp
sub
mov
add
icebp
call
fstpl
mov
jno
negb
adc
cltd
xchg
adc
clc
stos
rcl
jmp
addb
add
das
stos
xor
inc
add
mov
stc
xlat
xchg
xchg
sub
das
pop
or
mov
mov
sub
js
inc
add
aad
xchg
xor
sub
jg
add
movsl
aad
in
pop
mov
inc
fwait
pop
adc
in
pop
in
test
sub
add
insb
es
jnp
sahf
pop
mov
loopne
mov
rcrl
push
pusha
add
sbb
test
inc
clc
and
bnd
push
push
aad
pop
adc
popa
pop
int
dec
scas
mov
cs
sarb
or
std
nop
lcall
mov
cld
adc
les
xchg
add
test
jo
enter
fwait
pop
ret
sbb
outsl
mov
stos
sbb
call
stos
hlt
jmp
add
repnz
add
aam
xchg
lret
imul
mull
add
mov
jp
addr16
jge
sbb
sub
icebp
pop
mov
daa
out
push
pop
cmpl
jns
cmpsb
roll
shr
outsb
lods
rorb
hlt
loope
iret
xchg
add
punpckhdq
es
push
in
xchg
mov
cli
mov
insb
pop
mov
inc
cmp
mov
sbb
mov
fwait
or
add
add
sbb
jge
ds
psubq
and
jne
testl
popa
enter
mov
and
pop
out
jbe
xchg
push
xchg
arpl
dec
icebp
cld
je
ret
leave
mov
inc
add
loopne
test
jecxz
mov
mov
and
dec
addb
in
mov
shrb
cmp
lcall
fistl
add
xchg
imul
addb
push
add
loope
pushf
es
push
and
test
sub
cmpsb
jne
and
adc
push
inc
add
jge
out
imul
out
mov
in
sbb
pop
ret
ja
add
divl
dec
jb
lret
jmp
mov
cmp
xor
adc
pop
inc
lods
pop
sbb
xlat
popf
flds
add
out
xchg
scas
push
adc
pop
mov
or
jne
jns
call
hlt
jge
dec
cmpsl
pop
mov
pop
ds
pusha
add
add
add
cltd
mov
add
pop
rorb
enter
test
cwtl
mov
mov
and
call
jns
add
jae
cld
adc
movb
popf
mov
movsb
aas
cmp
scas
repnz
lcall
pop
in
int
push
xchg
movb
pushf
loop
jg
mov
or
enter
movsl
mul
sbb
cmp
and
sbb
and
mov
rcll
sub
adc
arpl
ja
add
push
inc
add
and
sub
rcrb
push
ret
insl
sbb
jo
xchg
cmc
dec
rorl
mov
fstps
add
or
addb
lret
and
fsubrs
jmp
stc
insb
and
nop
nop
cli
or
or
mov
iret
mov
ljmp
add
xlat
jbe
add
bsr
xorl
in
int3
pop
decl
xchg
mov
inc
push
imul
repz
ljmp
repz
mov
xchg
icebp
clc
mov
and
mov
popa
not
add
add
cltd
sub
push
mov
stos
mov
sbb
ds
cltd
call
mov
cmpsb
inc
add
fldenv
sbb
movsb
fiadds
push
lretw
sarl
fnstsw
push
add
aad
out
sub
push
mov
leave
cmpsb
xor
add
sbb
ljmp
dec
mov
or
lret
sbb
and
sub
cmpsl
pusha
add
add
mov
ja
jmp
out
fwait
addb
push
cmp
lret
dec
add
add
push
cmpsl
loopne
out
mov
in
pop
mov
jge
pop
cwtl
jno
pop
mov
leave
cltd
cmpsb
fidivrs
mov
into
cmp
add
push
shld
sbb
add
cmp
push
insb
lahf
dec
sbb
in
xchg
mov
test
lods
jo
int3
mov
mov
inc
ds
addb
sti
xchg
insl
xlat
jb
jne
rorb
in
mov
movsb
jbe
jge
enter
xlat
pop
test
fxch
mov
pop
xchg
movsl
out
in
mov
aas
push
aam
add
jmp
sbb
mov
das
pop
sub
mov
pop
xchg
dec
pop
mov
stc
cld
cltd
sbb
outsb
nop
mov
stos
or
or
jbe
sub
add
or
sbb
xor
push
cmp
mov
push
lds
sub
pop
loopne
xchg
jmp
sub
mov
int
loop
das
addl
pop
nop
jmp
addb
mov
lcall
outsb
inc
jge
inc
xchg
adc
pop
xchg
or
add
enter
add
repnz
mov
add
pop
out
pop
ja
out
mov
adc
rolb
les
add
mov
pushf
leave
and
jl
icebp
int
jmp
mov
rolb
push
mov
add
dec
ja
cmp
add
fadd
fsubp
mov
int
fwait
movb
lods
and
nop
push
or
fwait
dec
cwtl
nop
test
pop
sub
pop
dec
cmpsl
cld
dec
rolb
ljmp
xlat
cmp
inc
add
push
adc
sti
lahf
lds
loop
imul
mov
inc
and
mov
jl
in
in
test
sub
movsb
xchg
lea
sahf
cmp
mov
pop
mov
insl
ret
daa
xor
add
shrl
inc
add
mov
ljmp
add
jne
mov
pop
aad
into
leave
in
push
lahf
addr16
call
les
adc
cmp
add
xchg
push
mov
xchg
add
jp
sub
add
fnstsw
add
inc
inc
add
jl
dec
lds
add
dec
lret
inc
dec
push
sti
dec
cld
xchg
scas
dec
jnp,pn
fwait
js
lock
adc
jmp
out
add
xchg
push
incb
lods
pop
xchg
push
in
inc
js
outsl
inc
add
jle
mov
into
mov
add
xchg
out
mov
xchg
les
or
mov
mov
movb
xchg
ret
adc
jo
sbb
push
add
add
and
adc
or
sub
mov
mov
fldenv
lcall
push
mov
add
sub
scas
and
data16
cmp
jl
or
nop
call
lret
mov
mov
sbb
fwait
lock
push
cmp
add
fbld
pop
sbb
push
sub
push
je
push
inc
add
xchg
jmp
xchg
push
add
int
std
inc
fildl
mov
inc
add
daa
dec
xor
repz
mov
push
jne
sub
push
adc
ret
jp
xchg
fcoml
cmp
jae
frstor
test
pop
cmp
mov
ret
ds
add
sub
movsb
call
daa
or
bound
test
lahf
dec
rcl
ret
lods
js
dec
fwait
push
ret
stc
xlat
outsl
sbb
test
mov
out
mov
jge
out
pop
xchg
mov
add
or
push
cmpsb
pop
decb
add
dec
jbe
xor
jge
push
out
call
add
jecxz
fdivs
clc
xchg
sub
inc
sbb
int3
sub
mov
ljmp
shr
out
loopne
test
mov
mov
mov
ret
sub
or
sub
fisttpl
push
sahf
sbbl
add
sbb
jne
lods
dec
loopne
push
pop
lea
iret
rcll
adc
and
mov
cs
cmp
cmpsl
fwait
xor
sahf
adcl
jae
lret
enter
daa
in
hlt
fcompl
out
insb
mov
in
es
ret
mov
mov
test
daa
scas
cmpsl
bound
adc
insb
jp
into
mov
add
xchg
mov
lret
repnz
jae
jp
inc
add
cmp
arpl
fiaddl
dec
or
mov
sub
and
iret
mov
sub
inc
add
mov
jle
push
cmp
sub
inc
push
mov
or
and
repz
add
push
cltd
mov
inc
add
push
push
in
add
fisubl
les
inc
add
pushf
mov
and
mov
loop
inc
add
setae
notl
adc
addr16
int
jbe
imul
cmp
xor
add
test
mov
ret
and
add
shrl
xchg
dec
sbb
mov
mov
mov
adc
add
add
cld
push
adcl
movb
mov
fcoml
das
fildl
add
xchg
jg
scas
jo
mov
in
lret
push
push
jo
andl
jecxz
add
jg
in
push
lret
sub
add
or
mov
add
jmp
add
inc
daa
xchg
and
scas
jl
dec
inc
dec
adc
int3
shll
lcall
inc
outsl
mov
test
sbb
stos
xchg
xor
or
mov
in
pop
jle
push
inc
push
xchg
icebp
es
into
jno
shlb
int3
mov
jl
mov
inc
int3
jnp
add
or
or
or
fwait
aaa
loopne
or
mov
add
fs
neg
mov
or
or
adcl
mov
or
arpl
mov
clc
loope
sti
xchg
add
ljmp
lahf
cmp
jl
cmp
repnz
loopne
cmpsl
xchg
push
rorl
adc
or
mov
push
adc
mov
add
testl
jecxz
mov
testb
rorl
cmp
add
lret
add
pop
dec
push
popf
into
pop
lock
fisubl
add
stc
mov
inc
adc
add
ret
repnz
js
push
xchg
lds
pop
dec
or
add
xchg
imul
ljmp
scas
hlt
je
xchg
and
add
icebp
sbb
dec
call
add
js
or
fimuls
hlt
loop
mov
dec
movsb
sti
pop
or
mov
push
push
aad
mov
fistl
or
add
int
and
dec
loop
mov
pop
imul
cmp
mov
stos
pop
les
scas
bound
je
jp
sub
xchg
sub
add
gs
cmp
repz
mov
add
add
jbe
sbb
adc
add
xchg
lcall
test
fwait
pop
and
pop
push
out
jno
rorb
leave
out
loop
pushf
sbb
xor
and
add
dec
jl
mov
hlt
add
or
call
inc
fwait
sbb
push
mov
inc
push
rolb
push
or
add
shrl
dec
mov
add
inc
add
cwtl
xor
or
lds
push
cltd
stos
jg
ds
rcrb
jg
push
sbb
pop
mov
pop
xchg
lret
jo
add
xor
dec
dec
lods
mov
inc
xchg
push
add
add
adc
dec
test
aam
divl
cmp
fstp
xchg
push
sbb
cmc
mov
lret
xor
ja
jnp
xor
cmp
mov
push
movsb
push
adc
jmp
aad
add
pop
jae
push
daa
outsb
dec
popf
push
xchg
push
xchg
aad
add
sub
or
xor
pop
adc
test
gs
ljmp
movl
push
cmc
lret
inc
test
mov
cwtl
loopne
cmpsl
add
rolb
addb
mov
pop
adc
imul
cmp
adc
movsl
mov
pusha
add
push
popf
dec
lcall
push
pop
enter
fcomps
adc
sub
and
dec
push
ds
xchg
addb
sub
add
xchg
cmp
addb
sarb
add
add
ja
jl
loope
mov
dec
push
dec
mov
add
mov
push
jmp
sbb
nop
sub
mov
sub
outsb
mov
cltd
out
mov
cmpsl
fwait
and
addb
push
add
pop
nop
pop
popa
or
push
out
inc
in
mov
rorl
push
cmp
dec
xchg
stc
testb
dec
int
add
sahf
xchg
js
inc
xor
insl
movb
adc
fldl
jmp
daa
push
mov
and
pop
addl
add
movsb
add
xchg
sbb
gs
dec
bound
mov
sbb
pop
scas
dec
jns
sarl
xchg
divb
mov
jno
lods
mov
push
mov
cmp
loopne
add
loope
and
xor
nop
bswap
or
lcall
adc
add
aas
xor
test
movsb
scas
xchg
sbbl
dec
nop
les
lock
lret
outsl
aas
inc
add
cmp
inc
les
pop
je
add
add
fcomps
pop
testl
cmpsl
jno
test
sub
aas
sbb
push
mov
inc
lea
lret
inc
add
mov
cwtl
add
stos
dec
cmpsb
ljmp
mov
add
push
inc
add
aaa
leave
lcall
push
xchg
mov
add
add
jo
out
scas
push
add
and
iret
and
insb
sbb
call
mov
pop
inc
add
mov
add
inc
add
fidivs
push
dec
pop
lea
leave
lock
inc
add
js
arpl
add
into
icebp
pop
iret
aaa
xchg
xor
sub
sahf
xchg
push
xor
out
loopne
js
adc
jge
adc
adc
and
shlb
jge
rolb
mov
inc
add
adc
push
sub
sbb
clc
pusha
add
add
lds
iret
das
cmc
cld
repz
sub
xor
xchg
ja
jbe
popf
mov
mov
pop
jge
enter
fs
inc
pop
pop
mov
push
rol
add
ds
or
aaa
movsb
dec
and
cmp
js
fistps
inc
pop
mov
adc
cmc
adc
test
sarb
loop
repz
push
add
testl
mov
pusha
add
jns
into
jle
jnp
and
push
dec
xchg
test
and
dec
insb
cmp
and
outsb
sbb
daa
xchg
or
jle
adc
add
push
or
add
dec
div
jae
xchg
call
sbb
xor
xchg
cmp
jnp
addb
aaa
lcall
push
das
mov
inc
add
cmc
lcall
xor
jl
cld
inc
outsb
push
in
div
out
xorl
enter
pop
jo
add
add
push
mov
and
push
xor
popl
imul
arpl
jb
rcl
pop
testb
bound
loopne
cli
jg
out
outsl
jge
addl
loope
ret
add
jmp
lods
cs
jnp
xor
pop
push
mov
sbb
je
clc
pop
adc
mov
mov
or
adc
pop
mov
testb
inc
push
mov
sbb
add
imul
sub
mov
dec
mov
negl
push
sahf
cmp
testl
addb
push
mov
xor
mov
pop
es
insb
or
and
dec
gs
pusha
add
sbb
add
mov
sti
mov
add
mov
xorl
mov
stc
nop
es
xchg
mov
jae
movzwl
stc
nop
es
in
mov
mov
jne
stc
nop
es
pop
add
mov
popa
add
nop
es
or
cmc
add
add
add
add
nop
es
roll
cmp
mov
add
adc
add
inc
fdivs
cwtl
add
push
mov
xchg
ret
add
add
imul
les
stc
nop
es
add
mov
nop
cld
nop
jmp
mov
test
pop
jae
cld
nop
jmp
add
inc
movsl
add
mov
xchg
ret
cmp
cmpw
stc
nop
es
add
add
mov
stc
nop
es
mov
shll
inc
add
pushf
je
stc
nop
es
add
xchg
cmpl
jbe
add
add
lods
and
push
mov
xchg
ret
stos
add
test
dec
imul
orb
in
pop
push
stc
nop
es
pop
leave
sti
xlat
add
add
add
lods
and
imul
es
add
es
jb
addb
add
add
mov
mov
stc
nop
es
add
mov
aad
xchg
inc
nop
loopne
pushl
push
mov
xchg
ret
test
inc
add
decl
push
icebp
inc
add
int
int3
jge
mov
test
or
add
nop
es
enter
mov
push
mov
xchg
ret
scas
add
add
fmull
mov
xchg
ret
cmp
cmc
add
scas
inc
sti
xor
stc
nop
es
sarl
inc
add
mov
xchg
ret
add
nop
cld
nop
jmp
xchg
test
addl
cmp
nop
cld
nop
jmp
add
jne
gs
cld
nop
jmp
mov
int3
sbb
add
mov
xchg
ret
out
popf
fs
mov
nop
cld
nop
jmp
add
add
xchg
addl
lret
pop
push
mov
xchg
ret
ja
mov
push
cli
inc
push
mov
xchg
ret
fs
add
add
bound
mov
es
add
std
add
sub
mov
xchg
ret
mov
aad
pop
stc
nop
es
add
add
push
push
mov
xchg
ret
mul
fisttpl
pop
add
mov
nop
cld
nop
jmp
sbb
pop
aam
add
nop
cld
nop
jmp
int
mov
pop
add
adc
nop
es
add
push
stc
nop
es
xchg
add
imul
es
push
push
mov
xchg
ret
inc
rcrb
mov
stc
nop
es
add
add
cs
stc
nop
es
rcrb
add
add
stc
nop
es
fdivs
jge
test
mov
xchg
ret
add
jae
add
test
push
mov
xchg
ret
xchg
jge
imull
nop
cld
nop
jmp
cmp
lahf
add
int
mov
push
loopne
mov
xchg
ret
add
push
stc
nop
es
add
add
xor
add
add
stc
nop
es
cmp
fwait
pop
out
add
pusha
push
mov
xchg
ret
add
out
cmc
fwait
add
es
add
out
add
insb
inc
insb
insb
stc
nop
es
add
push
stc
nop
es
jge
cmp
inc
addb
push
mov
add
adc
sbb
add
cmp
add
add
nop
es
add
add
test
jb
add
sti
xchg
push
push
mov
xchg
ret
leave
popf
add
push
stc
nop
es
sbb
add
nop
es
fwait
fwait
int3
add
add
push
stc
nop
es
add
add
add
adc
nop
es
stos
cmp
add
add
stc
nop
es
add
fadds
add
andl
nop
es
shll
mov
push
jge
subl
push
pop
add
xor
sti
xor
nop
cld
nop
jmp
or
rolb
mov
add
stc
nop
es
add
rol
add
add
add
stc
nop
es
test
add
test
nop
cld
nop
jmp
out
movsb
negl
pop
mov
stc
nop
es
add
add
add
mov
stc
nop
es
popf
add
movb
add
adc
dec
or
mov
xchg
ret
add
inc
xor
nop
es
add
add
rcll
cmp
icebp
nop
cld
nop
jmp
add
add
test
pop
pushf
call
stc
nop
es
lahf
add
lret
pusha
nop
cld
nop
jmp
add
add
add
cmp
ds
add
fcomps
jge
and
call
nop
cld
nop
jmp
mov
mov
cld
nop
jmp
movsl
fcom
add
add
add
jne
stc
nop
es
cmp
inc
cmp
inc
xor
stc
nop
es
add
stos
stos
xchg
add
add
std
add
stc
nop
es
add
add
add
nop
es
add
in
or
mov
nop
es
add
push
dec
inc
stc
nop
es
cmp
add
add
rep
stc
nop
es
fmul
addb
shrl
add
add
stc
nop
es
add
mov
scas
cmpl
nop
cld
nop
jmp
add
cmc
addb
add
sub
push
mov
xchg
ret
add
cmp
nop
cld
nop
jmp
jge
add
lea
nop
cld
nop
jmp
test
xchg
add
push
mov
xchg
ret
add
pop
or
aam
test
push
mov
xchg
ret
add
add
mov
nop
jmp
jae
add
scas
mov
push
mov
xchg
ret
xor
cwtl
add
push
mov
xchg
ret
add
inc
add
jmp
nop
cld
nop
jmp
add
add
add
push
mov
xchg
ret
imul
cmp
add
add
nop
es
testl
stc
nop
es
fildl
sti
add
mov
stc
nop
es
movsl
add
test
pop
add
stc
nop
es
push
es
std
sbb
stc
nop
es
jb
add
jge
pop
pop
je
stc
nop
es
add
in
aaa
out
push
nop
cld
nop
jmp
test
testl
add
call
add
add
add
add
nop
es
popf
add
std
andb
ds
stc
nop
es
int
add
mov
sub
nop
cld
nop
jmp
add
mov
push
mov
xchg
ret
movsl
add
add
stc
nop
es
add
mov
lods
je
stc
nop
es
ja
push
xor
jle
sti
add
add
add
add
jmp
popa
add
cld
nop
jmp
push
add
jge
popf
test
and
push
mov
xchg
ret
cmp
sbbb
jb
xor
add
pop
ret
stc
nop
es
xchg
stos
imul
add
fwait
pop
xchg
stc
nop
es
jb
add
rolb
add
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
std
mov
add
rep
stc
nop
es
mov
int
add
popf
push
or
nop
jmp
fs
add
add
nop
cld
nop
jmp
add
test
add
popl
nop
es
addl
mov
add
xor
add
stc
nop
es
test
sahf
jb
nop
cld
nop
jmp
add
popl
stc
nop
es
add
add
add
stos
mov
stc
nop
es
add
out
ja
xor
mov
stc
nop
es
or
add
add
cli
mov
stc
nop
es
mov
bound
ficoms
nop
es
enter
rcrl
shll
nop
es
jge
add
stos
nop
cld
nop
jmp
xchg
add
push
pop
je
stc
nop
es
add
out
push
stc
nop
es
ja
test
in
add
adc
cmc
inc
add
add
add
lahf
pop
xor
pusha
stc
nop
es
out
addb
add
jge
push
nop
cld
nop
jmp
roll
add
fadds
add
and
or
add
nop
es
movsl
add
inc
xchg
lock
and
push
mov
xchg
ret
add
mov
add
stc
nop
es
add
add
sarb
mov
movswl
stc
nop
es
add
add
mov
add
push
mov
xchg
ret
add
add
sub
test
sbb
es
add
stc
nop
es
test
xor
idivl
jmp
inc
add
inc
add
add
sbb
add
nop
es
fs
movl
sbb
add
add
sbb
push
stc
nop
es
xorl
add
test
sar
es
stc
nop
es
leave
inc
cwtl
mov
stc
nop
es
add
add
out
mov
add
stc
nop
es
leave
pop
mov
popf
add
shr
add
nop
cld
nop
jmp
cmp
es
leave
add
sbb
jne
push
mov
xchg
ret
add
testl
sub
nop
es
add
push
repnz
lock
add
lahf
add
test
cmpsb
repnz
push
jne
stc
nop
es
scas
add
adc
cmp
inc
add
add
stos
jge
ret
stc
nop
es
add
add
enter
push
jle
idiv
nop
es
add
out
mov
movsb
scas
and
stc
nop
es
in
int3
add
in
cmp
push
mov
xchg
ret
addb
add
sub
push
sub
sti
incl
add
jl
add
add
stc
nop
es
enter
xchg
push
dec
outsl
popa
fs
nop
es
in
fs
push
push
mov
xchg
ret
mov
mov
es
in
adc
loop
into
div
nop
cld
nop
jmp
std
scas
add
jae
mov
inc
nop
cld
nop
jmp
mov
add
add
push
stc
nop
es
out
add
fs
pop
ds
stc
nop
es
adc
add
leave
add
sbb
adc
nop
es
fwait
add
push
stc
nop
es
add
add
addb
sub
nop
cld
nop
jmp
test
add
fcmovnb
push
mov
xchg
ret
add
xchg
xchg
push
mov
xchg
ret
cmp
add
inc
xchg
push
shl
cld
mov
stc
nop
es
add
rolb
add
add
xchg
ret
add
add
insb
insb
add
stc
nop
es
xchg
jae
mov
je
nop
cld
nop
jmp
add
add
mov
stc
nop
es
xchg
testl
pop
stc
nop
es
add
add
mov
xchg
cld
mov
nop
cld
nop
jmp
fcmovnbe
mov
sub
nop
es
add
pop
add
sar
es
pop
add
out
add
stc
inc
stc
nop
es
xlat
xlat
add
pop
add
stc
nop
es
test
add
mov
lea
nop
cld
nop
jmp
add
add
push
stc
nop
es
std
cmp
into
mov
push
mov
xchg
ret
xchg
pop
cmc
inc
lret
or
mov
xchg
ret
add
jae
test
add
add
sbb
test
es
add
pop
mov
push
mov
xchg
ret
popf
ja
test
add
stc
nop
es
popf
add
popl
pop
fimull
es
test
add
inc
add
add
jge
xchg
test
mov
stc
nop
es
imul
cmp
add
inc
add
sub
lock
add
int
mov
add
push
sub
dec
push
stc
nop
es
add
test
shr
push
mov
xchg
ret
add
sbbl
push
mov
nop
cld
nop
jmp
cmp
add
popf
fwait
push
stc
nop
es
jb
mov
add
mov
jmp
sti
orl
add
add
or
jbe
stc
nop
es
inc
xor
je
pop
jne
stc
nop
es
cmp
add
sub
nop
es
sbb
mov
sbbl
es
popf
popl
testl
clc
push
mov
xchg
ret
out
add
xor
add
and
outsl
pop
stc
nop
es
out
sbb
mov
lret
add
push
mov
xchg
ret
andl
xchg
mov
xchg
ret
pop
sbb
or
jne
add
nop
cld
nop
jmp
mov
imul
cld
nop
jmp
adc
add
add
stc
nop
es
add
int
fwait
mov
add
add
repz
dec
add
xor
idiv
stc
nop
es
xlat
mov
add
stc
nop
es
sti
add
cld
and
push
mov
xchg
ret
enter
add
es
add
add
inc
daa
mov
jb
jbe
pop
stc
nop
es
movsb
add
or
enter
int
pop
jae
nop
es
xlat
fildl
add
adc
cld
nop
jmp
cmc
jge
ret
testl
cld
stc
nop
es
add
mov
ja
stc
nop
es
int3
add
ja
dec
pop
stc
nop
es
pop
fcmovne
jb
add
cmp
add
nop
es
add
add
inc
add
add
je
xchg
dec
adc
mov
xchg
ret
fcoms
pop
push
mov
xchg
ret
int
cmc
add
cmp
lods
stc
nop
es
movsb
add
add
rcr
or
sti
nop
cld
nop
jmp
stos
add
add
add
add
xor
cld
nop
jmp
test
imul
xchg
push
mov
xchg
ret
mov
inc
add
add
sub
nop
jmp
test
ret
add
inc
arpl
add
stc
nop
es
add
add
jle
mov
add
nop
es
jge
mov
xlat
jne
push
inc
pop
mov
stc
nop
es
add
add
jb
add
mov
inc
xchg
xchg
cmpsl
adc
clc
inc
add
add
addb
adc
inc
add
push
stc
nop
es
pop
add
sti
cmp
add
add
lods
jne
stc
nop
es
cmp
add
pushf
add
add
sti
inc
sbb
and
stc
nop
es
scas
add
stos
push
mov
xchg
ret
jae
int
fs
adc
je
stc
nop
es
scas
int
loop
sub
stc
nop
es
cmc
mov
mov
cmpl
nop
cld
nop
jmp
leave
add
fadds
cmc
xchg
mov
es
out
mov
test
jge
jge
stc
nop
es
int
xlat
testl
adc
add
nop
es
add
out
xor
adc
nop
es
add
push
mov
xchg
ret
add
pop
add
inc
add
push
push
mov
xchg
ret
movsl
add
lahf
push
jge
cmpsb
pop
dec
stc
nop
es
add
add
xchg
rolb
rep
stc
nop
es
fildl
test
add
cld
nop
jmp
add
add
pop
cmpl
nop
cld
nop
jmp
ja
mov
add
add
nop
es
inc
jae
dec
push
mov
xor
add
add
mov
and
jge
stc
nop
es
add
cmp
pop
add
add
aam
mov
push
mov
xchg
ret
add
test
xchg
jb
add
add
out
add
push
mov
xchg
ret
add
cmp
push
mov
xchg
ret
add
jge
add
add
cld
nop
jmp
pop
add
inc
jge
add
xchg
cmpl
adcb
add
inc
add
jg
loop
push
mov
xchg
ret
add
int3
out
add
nop
adc
mov
xchg
ret
add
lahf
jge
add
push
stc
nop
es
scas
add
add
sar
add
pop
stc
nop
es
cmp
add
add
add
dec
cmp
nop
es
or
addl
pop
popa
testl
nop
cld
nop
jmp
add
test
std
call
adc
add
sti
add
pop
fisubrl
jb
addb
add
pop
nop
cld
nop
jmp
add
subl
pop
mov
stc
nop
es
add
mov
sub
nop
es
add
mov
jne
stc
nop
es
add
stc
mov
push
mov
xchg
ret
add
mov
cmp
cld
nop
jmp
popf
push
add
cmp
add
add
nop
cld
nop
jmp
add
adc
sahf
push
nop
cld
nop
jmp
movsb
fs
add
std
add
lahf
test
fsubl
xor
add
stc
nop
es
adc
rolb
inc
stc
nop
es
addb
add
mov
xchg
ret
int3
xor
arpl
nop
es
enter
mov
fcomps
nop
es
stos
scas
add
fcomps
enter
jb
addb
adc
add
pop
call
nop
cld
nop
jmp
add
scas
leave
add
push
mov
xchg
ret
test
ret
shr
outsb
push
stc
nop
es
movsb
add
add
in
sar
push
mov
rcr
cmp
fidivrs
mov
add
mov
stc
nop
es
fildl
popa
dec
push
stc
nop
es
test
orl
push
push
mov
xchg
ret
add
out
add
stc
nop
es
fwait
popf
sbb
jmp
stc
nop
es
mov
sbb
stc
nop
es
cmp
out
sbb
add
adc
mov
lds
stc
nop
es
add
sarb
xchg
sbb
test
es
roll
inc
add
leave
nop
cld
nop
jmp
push
add
in
pop
test
stc
nop
es
add
mov
push
stc
nop
es
adc
inc
fildl
cmp
nop
es
sbbb
add
mov
nop
cld
nop
jmp
add
add
jae
icebp
addr16
and
push
mov
xchg
ret
add
add
es
mov
stc
nop
es
add
add
subl
nop
es
fildl
cmp
das
rep
push
mov
xchg
ret
add
std
add
movsb
cmp
stc
nop
es
popf
add
test
imul
dec
push
stc
nop
es
movsb
add
rolb
sahf
add
stc
nop
es
add
jnp
clc
stc
nop
es
add
out
je
nop
cld
nop
jmp
mov
add
ret
out
pop
nop
cld
nop
jmp
mov
ret
push
add
jg
jmp
sub
add
add
test
add
add
mov
pusha
stc
nop
es
add
add
imul
add
nop
es
cmp
movsl
jae
add
nop
es
add
fs
test
and
mov
stc
nop
es
mov
aad
movzwl
stc
nop
es
in
adc
push
nop
cld
nop
jmp
mov
fadds
imul
test
movzwl
nop
cld
nop
jmp
add
push
testl
es
test
add
add
es
add
mov
add
divl
push
ljmp
jb
pop
add
xor
push
stc
nop
es
add
add
add
jae
add
add
incl
xchg
ret
imul
mov
pop
push
mov
xchg
ret
add
mov
adc
stc
nop
es
addb
sbb
dec
test
nop
cld
nop
jmp
ja
imul
nop
cld
nop
jmp
cmp
add
sarl
test
pop
add
stc
nop
es
add
xlat
push
xchg
loope
aad
pushf
pop
stc
nop
es
add
cmp
add
addb
mov
nop
cld
nop
jmp
rolb
add
cmpb
inc
mov
es
add
out
push
stc
nop
es
mov
int
add
add
jns
nop
cld
nop
jmp
test
add
or
stc
nop
es
add
add
add
outsl
arpl
add
nop
es
add
xchg
dec
push
push
mov
xchg
ret
add
add
pop
add
sub
jb,pt
nop
cld
nop
jmp
add
add
add
add
add
out
incl
cltd
add
stc
nop
es
add
popf
add
movsb
or
stc
nop
es
popf
add
sub
jb
test
xlat
rcll
popa
stc
nop
es
sti
add
inc
mov
add
pop
stc
nop
es
cmp
add
lahf
add
movzwl
stc
nop
es
add
test
cmp
f2xm1
inc
add
enter
push
les
stos
pop
stc
nop
es
std
out
addb
mov
mov
nop
es
add
fdivs
in
push
stc
nop
es
add
fwait
mov
add
nop
add
add
ljmp
dec
mov
stc
nop
es
out
movsl
add
add
add
add
add
gs
pop
inc
xchg
popl
sbb
es
add
add
fildl
add
stc
nop
es
add
add
nop
es
mov
add
add
les
nop
es
std
add
mov
stc
nop
es
xchg
add
add
inc
add
stos
in
add
fwait
inc
add
xchg
push
xor
ja
lcall
dec
add
add
add
add
add
jne
stc
nop
es
add
mov
loopne
nop
es
add
mov
mov
push
push
mov
xchg
ret
add
add
out
xchg
cmp
jmp
jp
nop
cld
nop
jmp
add
adc
xchg
sub
stc
nop
es
add
add
push
mov
xchg
ret
imul
mov
stc
nop
es
jae
add
nop
cld
nop
jmp
imul
int3
sti
stc
nop
es
fs
add
xchg
enter
js
nop
cld
nop
jmp
rol
xor
aam
cmc
ds
stc
nop
es
out
rolb
add
sar
es
mov
add
mov
stc
nop
es
pop
stos
add
sub
es
rolb
add
jbe
push
mov
xchg
ret
mov
jp
dec
sub
nop
es
fmuls
pop
jmp
stc
nop
es
add
add
je
mov
nop
cld
nop
jmp
int3
ja
jge
int
rclb
add
add
add
add
cmp
add
movb
add
nop
cld
nop
jmp
xor
pop
nop
cld
nop
jmp
mov
add
add
mov
pop
stc
nop
es
add
add
stos
add
lds
push
mov
xchg
ret
add
scas
testl
jmp
add
add
stos
mov
test
sub
push
mov
xchg
ret
sbb
push
sub
es
out
add
add
js
mov
stc
nop
es
add
add
jecxz
and
stc
nop
es
popf
add
enter
popa
add
mov
xchg
ret
add
in
add
add
stc
nop
es
add
enter
es
add
add
std
xlat
add
aam
xor
stc
nop
es
cmc
add
add
popa
nop
cld
nop
jmp
popl
add
add
shrb
stc
nop
es
add
add
xor
or
add
add
repz
test
pop
nop
cld
nop
jmp
enter
fwait
add
add
test
nop
cld
nop
jmp
add
xchg
add
mov
stc
nop
es
mov
mov
xchg
ret
add
add
into
je
nop
cld
nop
jmp
mov
mov
stc
nop
es
testl
add
pop
add
popf
or
jge
pop
add
stc
nop
es
ret
ret
jmp
call
or
add
add
pop
mov
mov
push
mov
xchg
ret
adc
adc
pop
lea
stc
nop
es
cmc
rolb
popf
add
adc
and
outsb
xchg
stc
nop
es
add
add
add
enter
stc
nop
es
add
int
test
test
stc
nop
es
ret
fmul
lea
push
mov
xchg
ret
int3
add
add
nop
es
in
testl
rcll
out
inc
add
add
add
add
mov
sbb
jmp
mov
add
test
stc
nop
es
xchg
add
pop
ret
nop
cld
nop
jmp
sti
add
mov
mov
es
add
movsb
cmp
popl
in
call
stc
nop
es
ret
add
into
testl
add
add
add
mov
stc
nop
es
movsl
add
add
xchg
aaa
mov
rep
jmp
stc
nop
es
sbb
dec
shr
nop
cld
nop
jmp
pop
add
add
add
inc
stc
nop
es
fwait
add
add
fmuls
jmp
and
rcrb
or
stc
nop
es
inc
idivl
mov
stc
nop
es
add
fcomps
add
xor
stc
nop
es
add
sbb
jbe
xor
stc
nop
es
inc
popl
andl
mov
xchg
ret
inc
test
mov
stc
nop
es
add
add
inc
add
xchg
es
sbb
sbb
mov
xchg
ret
add
inc
mov
mov
stc
nop
es
ret
inc
add
outsb
shl
nop
cld
nop
jmp
add
add
add
add
mov
xchg
sub
adc
inc
add
fwait
add
add
stos
push
mov
push
aaa
add
add
xchg
add
je
cs
push
mov
xchg
ret
add
add
add
mov
stc
nop
es
mov
add
stc
nop
es
xor
movsb
add
sub
stc
inc
add
mov
add
jbe
stc
nop
es
add
push
or
cld
nop
jmp
popf
add
movsl
push
xchg
xor
push
mov
xchg
ret
jge
mov
leave
xor
stc
nop
es
add
stc
nop
es
movsl
imul
push
test
pcmpgtb
add
nop
es
fs
xor
iret
pushl
stc
nop
es
add
ret
mov
pop
push
stc
nop
es
add
jge
or
sar
es
sbb
pop
add
push
stc
nop
es
adc
mov
movsl
xchg
add
mov
es
add
bound
lret
lea
stc
nop
es
add
std
add
mov
and
nop
cld
nop
jmp
cmp
add
inc
add
or
nop
es
int
add
add
mov
add
add
nop
es
popl
hlt
push
mov
stc
nop
es
add
ret
sbb
xor
incl
or
add
xor
push
mov
xchg
ret
push
sarb
xor
and
nop
es
add
testl
push
mov
xchg
ret
leave
sbb
mov
or
jb
add
pop
mov
stc
nop
es
add
add
pop
add
mov
mov
stc
nop
es
add
pop
roll
inc
add
push
sbb
mov
xchg
ret
add
adc
mov
sbb
faddl
xchg
ret
add
add
mov
stc
nop
es
inc
push
add
pop
push
mov
xchg
ret
add
imul
stos
ret
add
add
add
add
add
roll
ja
pop
mov
stc
nop
es
xchg
add
outsb
mov
stc
nop
es
sarb
ret
mov
sub
stc
nop
es
add
out
add
add
es
loopne
stc
nop
es
xlat
add
add
add
jmp
scas
cmp
mov
add
repnz
and
dec
push
mov
xchg
ret
add
xlat
movsl
add
fmuls
nop
es
scas
add
mov
xchg
jb
add
add
add
add
or
es
mov
add
inc
xchg
jmp
nop
cld
nop
jmp
fwait
add
add
jne
nop
cld
nop
jmp
add
enter
sub
rclb
incl
add
xchg
popf
cmp
sti
call
stc
nop
es
std
ja
adcb
stc
nop
es
fadds
mul
inc
out
adc
mov
stc
nop
es
xchg
in
sbbl
nop
cld
nop
jmp
add
enter
add
push
mov
xchg
add
add
mov
mov
add
jmp
add
add
nop
es
add
fwait
incl
repz
nop
es
scas
popf
add
add
out
mov
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
jge
add
cs
stc
nop
es
shrb
push
stc
nop
es
imul
add
int3
mov
test
jge
stc
nop
es
xchg
add
inc
add
loop
jmp
nop
cld
nop
jmp
add
push
add
test
incl
dec
cmp
nop
es
add
sahf
lea
stc
nop
es
imul
test
popa
cmpsl
jg
add
stc
nop
es
int
mov
mov
stc
nop
es
add
cmp
mov
shrl
nop
es
add
jae
movsl
jb
aad
add
nop
cld
nop
jmp
add
cmp
cmp
leave
repnz
add
sti
add
add
dec
mov
nop
cld
nop
jmp
xor
add
cld
nop
jmp
int3
add
or
imul
movsl
test
sti
inc
add
add
mov
scas
pop
stc
nop
es
mov
sti
add
aas
je
stc
nop
es
add
add
stc
nop
es
add
add
int3
add
jb
cmp
adc
fwait
add
add
jb
inc
add
add
jge
ss
push
mov
xchg
ret
add
imul
add
stc
nop
es
rolb
xlat
std
jge
enter
xchg
add
add
ljmp
xchg
ret
add
nop
es
pop
add
and
nop
cld
nop
jmp
add
jge
mov
nop
cld
nop
jmp
inc
xlat
in
add
stc
nop
es
add
push
fwait
es
rclb
jecxz,pn
add
add
and
dec
movzwl
stc
nop
es
add
push
stc
nop
es
xlat
add
test
add
add
lock
add
mov
add
test
das
add
nop
cld
nop
jmp
xchg
or
out
add
es
es
cmp
cmp
add
lea
mov
xchg
ret
add
add
inc
add
push
in
add
add
mov
cld
nop
jmp
inc
add
pop
add
nop
cld
nop
jmp
add
add
data16
fwait
mov
stc
nop
es
add
out
lret
and
nop
es
mov
xchg
movsb
testl
mov
xchg
ret
in
add
mov
stc
nop
es
add
cmp
jnp
mov
das
mov
add
fwait
dec
pop
push
mov
daa
add
fadds
cld
add
add
in
subl
stc
nop
es
cmp
mov
add
mov
mov
jg
mov
jl
mov
stc
nop
es
scas
add
cmp
mov
xchg
ret
popf
int
add
rep
stc
nop
es
push
add
add
ja
jno
mov
push
mov
xchg
ret
add
popf
adc
repz
es
add
rcrb
push
mov
xchg
ret
mov
leave
leave
leave
movsb
add
call
cmc
ljmp
pop
stc
nop
es
add
add
pop
out
enter
shrb
mov
xchg
ret
int3
xor
data16
pmaddwd
stc
nop
es
add
stos
pop
mov
nop
jmp
popf
add
int
adc
mov
xchg
stc
nop
es
add
add
push
push
stc
nop
es
add
add
jns
inc
and
stc
nop
es
add
sbbb
cld
nop
jmp
add
add
add
imul
lcall
orb
incl
add
fs
enter
mov
xchg
ret
add
jg
pop
and
cld
nop
jmp
sti
fwait
add
out
add
stc
nop
es
int
add
shl
cmp
add
xchg
ret
xlat
add
xchg
pop
nop
cld
nop
jmp
add
add
add
xor
dec
push
mov
xchg
ret
scas
out
popf
add
movsl
add
mov
push
mov
xchg
ret
pop
xchg
movsl
add
cs
stc
nop
es
shlb
popf
add
adc
nop
es
es
in
add
insl
mov
stc
nop
es
add
add
rolb
outsb
mov
stc
nop
es
add
add
stc
nop
es
inc
lahf
add
add
movsl
lret
add
nop
cld
nop
jmp
xchg
sti
mov
stc
nop
es
cmc
add
add
stc
nop
es
xor
inc
lahf
or
xor
add
stc
nop
es
ret
popa
stc
nop
es
add
mov
lock
push
nop
cld
nop
jmp
movsb
std
cmp
fildl
imul
mov
cmc
stc
nop
es
idiv
test
add
stc
nop
es
add
cmpl
sti
stc
nop
es
cmp
add
add
callw
nop
es
add
movsl
add
add
xor
fs
nop
es
add
add
outsl
add
push
mov
xchg
ret
mov
ret
push
nop
cld
nop
jmp
jae
add
fwait
add
add
xor
lret
inc
in
cmp
xlat
jle
pause
cld
nop
jmp
leave
out
popf
stos
enter
gs
add
test
stc
nop
es
add
jne
stc
nop
es
add
lahf
fisttpl
es
jb
pop
add
xadd
add
nop
es
sbb
pop
mov
sar
nop
es
fwait
or
add
sar
nop
es
add
add
mov
nop
es
add
popl
test
shl
stc
nop
es
inc
pop
out
int
xchg
pop
in
mov
push
mov
xchg
ret
add
cmpb
push
stc
nop
es
add
enter
enter
mov
stc
nop
es
enter
jb
ja
rep
stc
nop
es
shlb
add
mov
stc
nop
es
add
rolb
add
or
test
stc
nop
es
cmp
stos
stc
nop
es
sti
cmp
xchg
fstpt
add
popa
fistpll
stc
nop
es
sti
sbb
stc
nop
es
fsubrs
fwait
add
mov
push
mov
xchg
ret
add
inc
add
jmp
add
xchg
dec
inc
add
add
sahf
pop
in
ret
add
shll
mov
addb
in
adc
cmpsl
les
or
mov
pop
in
ljmp
adc
sub
addb
nop
mov
out
sahf
pop
test
stos
addb
test
jp
or
sub
inc
test
and
pop
inc
mov
in
lods
outsl
inc
add
jmp
push
in
packssdw
lods
adc
mov
js
add
sub
fidivrl
cs
mov
adc
nop
and
pop
xchg
mov
div
cmp
inc
add
mov
pushf
cs
in
add
scas
insb
adc
imul
xchg
inc
add
fwait
inc
add
fwait
or
inc
loopne
mov
scas
scas
mov
ret
jmp
inc
add
xlat
lds
lahf
movb
add
adc
repz
add
js
add
xchg
dec
pop
adc
push
cmp
push
outsb
pop
insb
add
jns
pop
inc
add
aam
div
imul
in
sbb
inc
add
push
imul
add
jl
pop
jo
jp
test
pop
mov
push
add
scas
adc
filds
enter
pop
in
fwait
pop
movsb
repnz
dec
mov
xor
xor
cmp
add
or
inc
test
icebp
mov
mov
cli
and
lahf
xchg
arpl
int
outsb
loop
nop
loop
add
mov
push
ss
loop
add
test
ja
pop
leave
or
into
idivl
jns
jl
inc
mov
dec
mov
mov
es
xor
in
call
add
and
in
test
push
ja
lock
das
ds
inc
dec
and
xchg
sub
outsl
cmp
mov
push
add
popa
xchg
addb
xchg
dec
sbb
sbb
fisttps
leave
pop
and
mov
sbb
fmuls
jae
adc
arpl
sub
xlat
pop
loop
lret
movsl
xchg
and
sbb
addl
mov
lock
and
jmp
fnsave
outsl
mov
sahf
insb
das
mov
jl
rolb
sub
push
pop
imul
test
repnz
dec
ret
sbb
add
add
add
mov
mov
imul
aaa
out
xor
xor
bound
mov
mov
mov
jle
dec
sbb
add
je
std
push
mov
mov
adc
outsb
out
lods
inc
pop
lea
xchg
pop
sub
jo
sub
inc
add
pushf
and
inc
add
cmp
add
xchg
sbb
sbb
adc
fnstenv
xor
sbb
pop
fcoml
loope
out
xor
inc
add
std
mov
addb
push
js
pusha
add
xor
or
fsubs
inc
xchg
mov
or
sbb
in
mov
bound
jbe
cmp
mov
sarb
pop
push
xor
add
mov
adc
rcr
insb
out
adc
outsl
stos
out
aas
or
pop
xchg
cmp
mov
add
add
out
add
out
out
cmp
rcr
xchg
rol
sub
dec
or
xchg
rcll
outsl
test
mov
mov
stos
popa
adc
shll
inc
jge
notb
lret
insl
pop
mov
setg
cmc
push
xchg
out
sbb
dec
addb
jns
lods
add
xchg
aad
mov
and
xlat
ret
shll
adc
mov
and
aas
incb
cmp
pusha
add
faddp
cmpl
add
jno
mov
aad
test
or
shll
xor
pop
shll
mov
addb
sbb
ss
addb
mov
push
mov
dec
xorl
add
pop
repnz
push
add
xchg
test
sbb
out
sbbl
adc
lret
add
popf
sub
in
push
add
add
dec
adc
adc
cmp
cwtl
out
and
adc
out
add
add
xchg
pop
js
push
xor
push
jnp
cmp
dec
test
mov
or
jo
bound
cmp
lret
dec
sbb
lock
ds
xchg
push
fisubrs
cmp
fisubs
xchg
sbb
pop
dec
loope
popa
in
shlb
mov
test
ljmp
push
ljmp
test
addb
insb
xchg
adc
dec
loopne
pop
orl
pusha
add
inc
imul
sbb
popa
mov
rcr
or
push
jg
ss
xlat
rolb
ljmp
inc
icebp
rorb
inc
loop
add
sti
cld
stos
mov
pop
fwait
jl
add
or
add
push
push
jne
add
add
out
int
lock
or
mov
fcomp
sbb
push
mov
inc
add
popf
ds
push
and
sub
in
leave
repz
sbb
stos
out
loopne
sub
sbb
xchg
mov
xor
ja
adc
jns
ret
push
adc
add
dec
loop
add
mov
les
lods
add
jo
jns
outsb
movsl
mov
add
add
jmp
cmp
daa
addl
fimull
fs
inc
add
add
call
mov
pusha
add
add
mov
push
setl
out
inc
jne
mov
out
and
add
int3
xchg
dec
sub
lds
mov
or
dec
mov
adc
push
add
fs
add
jo
bound
or
adc
das
out
mov
xor
test
cmp
out
lods
imul
or
push
cld
filds
fs
call
hlt
ret
les
dec
inc
add
cmp
xchg
fimull
sbb
dec
push
enter
iret
outsb
mov
xchg
ficomps
add
push
data16
in
jb
adc
out
testl
mov
push
in
dec
push
inc
mov
dec
les
lea
sbb
adc
mov
adc
mov
sub
xor
jno
ja
sub
or
add
cmp
pop
or
push
loop
push
pop
xor
xchg
scas
inc
add
pop
aas
ljmp
popf
lahf
mov
dec
ja
rclb
add
mov
push
add
fmull
aad
out
mov
dec
mov
pop
je
lods
xchg
xlat
xor
outsl
push
data16
inc
add
adc
mov
mov
enter
mov
add
lods
adc
repz
test
dec
movsb
ret
xor
add
das
sti
bound
mov
add
icebp
xchg
mov
rclb
mov
icebp
sub
adc
cli
jp
addb
push
push
sbb
jecxz
add
pop
pop
inc
data16
sbb
flds
enter
loope
stc
mov
test
jge
add
js
das
lret
out
sub
jnp
in
fdivrl
cs
mov
fcmovu
lret
dec
dec
lods
mov
mov
jg
mov
push
jmp
out
mov
xor
jle
lods
cltd
stos
push
cs
dec
popf
mov
push
push
fsubl
or
cmpsl
mov
and
icebp
outsl
outsl
lock
pop
gs
data16
andl
or
jle
js
cmpsb
inc
push
lret
cmpl
popa
cmp
in
lret
cwtl
push
add
lret
addr16
add
jb
inc
add
pop
es
arpl
lods
sbb
nop
ret
cmp
jae
addb
cli
iret
mov
mov
mov
push
xchg
and
test
sti
std
push
sub
mov
add
push
in
or
pushf
cltd
inc
add
sti
ljmp
push
test
ja
dec
loop
mulb
lds
add
lcall
push
inc
aad
or
mov
push
pop
in
test
fadds
sub
xor
je
cmp
dec
fsubrp
adc
in
shlb
add
add
add
cmc
xor
test
cld
cld
loop
aam
jecxz
decb
insl
push
jl
mov
pusha
add
repz
pop
mov
inc
add
xchg
cmp
inc
add
add
in
dec
dec
and
add
icebp
sti
scas
push
cld
fbld
xchg
add
sbb
test
loopne
mov
lods
cmc
jmp
xchg
xlat
pop
outsb
fdivrs
decl
dec
sbb
adc
movb
add
fisubrl
and
mov
mov
sbb
mov
aam
add
cmpsb
mov
cli
in
lods
icebp
ljmp
add
and
dec
mov
xor
gs
mov
pop
or
inc
add
dec
or
mov
dec
ret
fs
into
icebp
push
mov
sti
add
lahf
dec
inc
aas
pop
icebp
inc
add
add
push
das
dec
adc
adc
xor
bound
int
ret
xor
cmp
roll
push
imul
hlt
pop
mov
int3
sbb
xchg
jns
or
cmc
xchg
icebp
lret
fildll
movsl
jo
xchg
add
cmpsb
push
lret
push
idiv
xlat
mov
add
stc
pop
rolb
pusha
add
sub
cmc
cmpsb
test
fnstsw
cmp
loop
mov
add
in
hlt
outsl
mov
dec
rorl
pushf
movsb
mov
add
mov
add
push
xchg
mov
mov
mov
hlt
es
xchg
sbb
xor
inc
add
rcrl
and
stos
lret
repz
repz
ds
es
fistps
fmulp
inc
popf
sbb
mov
sbb
cmp
jns
add
jb
clc
cmp
test
cmpsb
popa
mov
add
dec
inc
mov
pop
mov
push
add
nop
gs
in
dec
add
in
aaa
cld
xchg
add
mov
mov
pop
ljmpw
push
cs
ret
sbbl
lods
lret
insl
inc
addr16
lods
loope
jns
pop
out
inc
add
jecxz
jbe
or
dec
or
mov
lret
cmp
pop
dec
push
jbe
std
xchg
mov
int
dec
popf
in
das
cmp
ret
jmp
sub
mov
jb
std
xor
sub
mov
mov
inc
push
mov
incl
add
ljmp
dec
add
mov
fldl
inc
add
mov
hlt
in
jmp
pushl
jl
xor
movsl
repz
lret
xlat
push
fdivl
push
je
std
or
test
mov
jne
movb
les
add
pop
xor
rorb
stos
xchg
cmp
add
pop
data16
fwait
pop
test
cmp
sbb
out
inc
add
bound
mov
test
or
inc
pushf
inc
add
cmp
adc
push
scas
dec
dec
inc
in
or
dec
pop
outsb
test
push
push
out
movb
xchg
test
cmp
insb
pop
repz
mov
ret
xor
jb
ja
add
add
or
sti
jno
mov
fnstcw
xchg
jecxz
sbb
push
xlat
sub
mov
pop
insb
repnz
dec
lcall
mov
or
mov
popf
notl
adc
les
ja
xor
sbb
add
sub
push
insl
roll
or
inc
add
mov
adc
gs
jge
and
cmp
xlat
sub
add
cmp
rorl
sti
mov
lods
sub
les
fldenv
jne
sti
lds
decb
in
mov
dec
ret
out
int3
cltd
aam
pop
test
test
mov
adcl
adc
xor
das
inc
call
lcall
in
xorl
push
pop
xlat
fisubs
addl
dec
testl
jmp
movsl
inc
xlat
mov
adc
imul
aam
sub
mov
jae
jnp
pop
adc
inc
add
xor
add
add
adc
push
add
xchg
pop
in
sbb
xchg
ss
dec
mov
xchg
xchg
outsb
push
stos
and
add
xor
je
adc
lahf
fucom
mov
xor
pop
out
movsl
xlat
jno
xchg
pop
mov
cld
inc
xlat
mov
push
add
cmp
sub
out
sub
mov
sbb
and
add
add
mov
movsb
hlt
mov
aas
jle
pop
jl
inc
nop
xor
mov
xor
popa
and
pop
push
cmp
push
mov
mov
jle
es
sub
add
lods
mov
out
enter
movsb
mov
mov
push
mov
cmp
add
and
cmpsb
shll
pop
xor
or
ja
ret
test
mov
fildll
leave
fbstp
mov
xor
leave
int
dec
loopne
testl
xchg
xchg
push
push
jge
inc
inc
add
mov
adc
mov
add
pop
imul
lcall
loopne
outsl
or
sbb
sub
and
es
lods
and
jae
lahf
addps
cltd
stc
pop
mov
push
je
setnp
daa
sbb
pop
cmp
enter
scas
mov
call
ja
dec
xor
mov
cmc
lea
add
ss
notb
mov
dec
cwtl
negb
mov
sub
mov
mov
xor
lea
pop
addb
or
xchg
xor
xchg
shll
mov
fcomps
pop
out
push
adc
mov
sbb
add
js
mov
push
fdivl
rcrl
add
jae
cmp
insl
bnd
xchg
out
push
ret
xor
fstl
outsb
rcrb
sarl
xor
jae
jbe
int3
fstpl
pop
cmp
rolb
int
lret
out
adc
shr
adc
jns
in
jge,pt
jae
pop
mov
mov
mov
push
and
shlb
inc
add
stc
jae
xor
mov
test
mov
pop
add
scas
das
cmp
adc
mov
sbb
dec
cmp
add
mov
mov
stos
in
add
mov
testl
or
cld
or
mov
add
dec
jl
cmp
js
js
pop
push
lcall
aaa
addr16
jns
in
out
or
adc
dec
cmpsl
push
sbb
mov
test
add
mov
iret
xchg
cmp
pop
das
dec
iret
jae
jmp
fdivs
mov
pop
mov
jne
or
push
outsb
fucomi
add
outsb
or
addb
pusha
add
mov
ljmp
xlat
xchg
arpl
inc
jg
jle
sahf
ja
jge
std
mov
or
outsl
aaa
jle,pn
cmc
mov
or
and
clc
in
lea
out
push
mov
adc
jbe
fidivrl
and
and
mov
lret
jo
add
cmp
insb
xchg
pop
ret
ja
sahf
fdivl
and
mov
lcall
push
add
xor
sub
add
or
jmp
rcrb
and
fucomi
outsl
bound
scas
iret
popa
stos
xchg
movb
or
add
xor
mov
bound
lahf
sbb
sub
jge
push
xor
add
sbb
and
xchg
cs
cmpsl
pop
cmpsb
add
sub
or
fwait
inc
add
xchg
or
jns
lcall
jae
movd
pop
mov
add
clc
in
iret
push
push
xor
adc
ret
jno
cmc
hlt
xor
pop
movsb
mov
aaa
adc
inc
ljmp
sbb
les
sbb
popf
mov
cmc
mov
ret
in
xchg
adc
test
jmp
icebp
adc
mov
fimuls
data16
arpl
dec
push
mov
lods
outsl
outsb
pop
jge
or
pop
nop
push
mov
add
lods
dec
xchg
je
fmuls
js
test
aas
jmp
lret
rcll
jno,pn
mov
push
mov
add
and
push
lea
enter
gs
clc
test
mov
fwait
mov
inc
add
psubsb
dec
movsb
xchg
in
xor
xchg
jne
aad
sbb
add
adc
mov
xor
dec
fdivr
jnp
rcll
cmp
getsec
bound
out
mov
xor
mul
xchg
or
dec
xchg
xchg
add
mov
je
jns
push
xchg
daa
sarl
cmpsl
push
pop
xor
rcrl
rolb
push
mov
insl
inc
mov
outsl
cld
xor
xchg
xchg
adc
add
sub
add
pop
imul
pop
cld
jmp
loope
inc
add
repz
repz
push
popa
mov
and
jns
push
push
leave
jae
add
cmp
add
fistpll
lahf
stos
stos
shlb
push
or
xchg
mov
xchg
sbb
loope
test
popa
mov
add
pusha
add
dec
cmpsb
in
xor
and
clc
inc
add
dec
rcll
xchg
and
pop
dec
insb
jno
scas
or
test
sahf
leave
mov
add
mov
fdivrl
pusha
add
adc
imul
add
mov
pop
dec
jo
repz
sub
xlat
dec
or
cmp
xor
mov
xlat
push
mov
xchg
xchg
sbb
sub
mov
ss
mov
push
ds
dec
je
push
cwtl
stos
mov
add
push
popa
pop
add
daa
mov
mov
mov
mov
mov
push
decl
mov
adc
sbb
xor
ljmp
gs
pop
dec
pop
xchg
mov
mov
push
add
fldl
cmpsb
pop
je
loop
repz
je
push
xchg
cwtl
adc
or
je
mov
add
fmull
sub
fnstsw
js
gs
scas
and
mov
lods
lods
mov
mov
in
xchg
and
xchg
out
jno
xor
pop
jnp
jo
add
push
mov
dec
js
mov
and
xor
push
ja
and
fdivs
mov
xchg
mov
sub
sbb
sbb
xor
fcomip
sbb
je
cmp
sub
xchg
cmp
jmp
mov
sbb
stos
jmp
scas
movb
add
add
mov
add
movsl
sub
repnz
ja
shlb
sub
mov
cli
pop
mov
push
fcompl
jge
sarl
scas
jmp
add
aas
scas
rolb
mov
pop
int
ret
lods
jnp
xor
sahf
lds
dec
lods
je
mov
mov
mov
out
sbb
ss
add
xchg
mov
dec
lcall
iret
ja
mov
hlt
lock
out
insb
pop
pushf
dec
stc
addb
jnp
add
ja
mov
add
dec
mov
jl
lret
push
add
xchg
sbb
add
push
pop
xchg
inc
add
mov
add
pop
mov
xor
outsb
mov
sub
add
nop
push
mov
inc
add
scas
adc
dec
cmp
or
cmpsl
inc
add
mov
xchg
shlb
ja
cmpsl
lock
mov
sub
adc
xor
add
loopne
popf
mov
sbb
cmp
adc
mov
arpl
and
cmp
add
outsb
cmp
sbb
jns
xlat
cmpsb
cmp
pop
dec
data16
dec
notb
ja
xor
lods
xchg
mov
std
jo
cmc
test
xchg
inc
push
in
cltd
jno
add
pop
inc
add
jecxz
sub
push
add
outsl
fstps
cli
fsubs
scas
pusha
add
add
inc
mov
inc
xchg
arpl
mov
mov
mov
add
insl
lcall
pop
notl
outsl
in
mov
cmpsl
out
xchg
or
fcompl
icebp
inc
add
dec
inc
add
add
rolb
out
adc
adc
add
es
sahf
mov
mov
js
mov
fwait
cld
pop
fdivrl
mov
movsb
inc
add
lea
enter
mov
sbb
nop
imul
jp
add
mov
inc
scas
dec
inc
mov
insb
aas
push
pop
sbb
xlat
divb
xchg
and
jb
cmpl
jb,pt
add
add
std
pusha
add
mov
sub
add
sub
imul
out
dec
push
adc
sub
sbb
shll
adc
adc
dec
icebp
dec
shll
or
mov
sbb
lcall
add
mov
or
and
sub
das
mov
in
stc
inc
mov
push
leave
pop
and
in
pop
data16
add
push
add
decb
out
out
push
xchg
sub
cmpsl
gs
pop
sub
pop
in
inc
add
xchg
or
xchg
sub
mov
dec
mov
cld
mov
xchg
fisttpll
popl
sbb
iret
test
stc
jg
dec
out
xchg
xor
push
mov
in
dec
ja
jo
dec
imul
sbb
and
pop
cmp
sar
clc
pushl
filds
add
mov
sub
xchg
in
in
add
inc
mov
inc
add
add
add
adc
jg
or
add
jmp
outsl
jbe,pt
xor
mov
addb
stc
push
push
cmpsl
lea
mov
dec
mov
mov
cmp
movb
adc
lahf
dec
negl
add
pop
dec
dec
lahf
push
sub
jne
jl
cld
dec
stc
cmp
aad
jb
and
out
pusha
add
enter
add
sub
push
fcoml
push
shr
ds
insb
lea
add
aaa
mov
cmp
jmp
cltd
inc
add
add
or
mov
or
addl
push
push
movsl
ftst
lock
jns
cmp
push
jae
pusha
add
adc
jae
ret
adc
jb
in
addr16
push
inc
add
shrl
ja
mov
mov
frstor
cmp
add
stc
add
call
ficoml
adc
inc
add
call
adc
lods
adc
movsb
dec
sbb
dec
test
in
sub
sbb
jmp
loopne
mov
repnz
movsl
mov
gs
push
add
jns
ret
nop
jne
repnz
int3
xchg
cli
mov
popa
lahf
push
pop
lcall
popf
mov
add
adc
add
lahf
loope
jns
rol
add
add
add
es
inc
adc
scas
mov
mov
inc
sti
sahf
adc
cltd
push
ret
iret
cli
sti
aaa
and
pop
jp
int
add
aam
leave
inc
and
push
mov
pop
push
pop
outsl
sub
ds
mov
decl
cmp
mov
add
ret
jmp
iret
xor
push
repz
out
sub
sub
cmp
imul
lock
in
mov
dec
nop
icebp
pop
pop
bound
ret
insl
dec
pop
pusha
add
or
mov
pop
rorl
sbb
rcrb
xchg
or
add
jp
add
test
out
jge
dec
test
jmp
and
fisttps
inc
add
shll
xchg
fcomps
add
lock
sti
and
insb
arpl
xor
fbstp
js
aam
mov
out
xchg
fwait
jns
int
loop
xchg
lock
addb
sbb
pop
and
sub
push
ja
into
xchg
mov
cmp
dec
and
sbb
popf
jecxz
test
xlat
nop
xchg
dec
add
cltd
addb
adc
inc
mov
xchg
and
jmp
mov
movsl
cli
sbb
bound
mov
out
sub
fld
jmp
and
stc
xchg
ljmp
add
cmp
cmp
pop
aaa
cmp
stos
in
idiv
shlb
adc
add
adcl
add
in
sub
cmp
in
ffree
movsb
icebp
lods
jno
jp
sbb
cmp
mov
pusha
add
dec
jp
add
and
mov
int3
test
aad
add
daa
mov
push
push
cwtl
dec
inc
xlat
lahf
dec
pop
add
ret
pop
and
repz
add
orl
mov
inc
and
out
mov
out
cmpsb
das
inc
mov
jg
lods
lahf
push
pop
ret
push
push
jbe
add
inc
add
pop
popa
addb
mov
ds
add
pop
mov
test
xor
rolb
adc
fisttps
int3
test
push
mov
icebp
pop
movsb
aas
js
bound
xchg
xor
xor
pop
in
add
rcrl
add
cmpsb
pop
test
jmp
enter
pushf
test
inc
adc
pop
je
mov
shrl
inc
addb
dec
in
cmp
insl
daa
das
cltd
outsb
push
aas
lahf
rorb
rolb
lock
lret
adc
fidivrs
inc
add
push
xchg
jbe
lret
cmpsb
dec
ja
jmp
jb
mov
add
jb
add
xchg
cmp
jae
dec
addb
clc
inc
add
cmpsb
aad
bound
ret
bound
cmp
fdivrs
cmpsl
adc
push
lds
cmp
xor
pushf
lock
jne
sub
add
pop
pop
xlat
hlt
nop
and
add
sti
sbb
pop
add
cmp
push
xchg
adc
outsb
add
pop
fs
lcall
add
cmp
movsb
out
or
sub
cmpsb
xchg
ret
test
mov
push
neg
imul
out
push
popa
repz
dec
cwtl
sbb
jg
out
mov
mov
push
loopne
sbb
xchg
data16
add
mov
and
rolb
mov
or
iret
mov
push
push
divb
xchg
mov
sti
sbb
scas
pop
cmp
xchg
adc
and
and
inc
in
nop
test
inc
add
dec
inc
cmp
add
mov
rcl
cltd
lahf
xchg
push
int
les
push
jge
sbb
add
add
jae
xchg
cmp
cmpsl
mov
gs
rolb
adc
jae
and
inc
adc
jae
shll
inc
dec
int3
lret
add
pusha
add
add
dec
xor
les
jns
lods
call
je
adcl
mov
xor
mov
fcoms
add
push
mov
xor
shrl
fisubl
insb
cltd
addb
bound
hlt
pop
mov
gs
mov
mov
clc
cld
inc
add
out
or
jo
or
inc
add
aaa
push
fsts
scas
dec
test
adc
fxch
js
and
xor
fs
std
add
sub
arpl
icebp
sub
int3
dec
bound
cli
loope
cwtl
das
arpl
mov
add
sbb
stos
shrb
add
mov
xchg
or
adc
movsb
out
clc
sarb
nop
pop
ret
out
push
mov
lcall
adc
add
fwait
add
mov
mov
mov
ds
dec
popa
and
mov
sbb
mov
negl
sbb
jo
cmp
test
sub
cwtl
hlt
data16
test
xor
jmp
notb
push
lock
add
movsb
push
fs
adc
lahf
and
adc
ret
mov
add
inc
mov
test
jp
lcall
inc
add
pop
mov
jbe
std
mov
movb
repnz
clc
pop
lds
dec
xchg
int3
jp
addb
sbb
jb
mulb
xchg
jecxz
mov
mov
fmuls
rorb
jmp
add
inc
add
mov
lcall
xor
xor
add
add
imul
push
jnp
inc
add
pop
aam
ret
pop
negl
out
jnp
sarb
push
into
xor
push
pop
mov
and
add
mov
mov
xchg
mov
cli
stos
repz
sub
mov
mov
fdivr
fstpt
sbb
mov
push
sub
jb
fabs
add
push
out
clc
sti
sub
push
add
jle
or
shr
fmuls
jbe
daa
mov
fsubrl
imulb
push
sub
mov
lretw
mov
jge
push
add
lock
aad
add
add
repnz
dec
jmp
mov
or
mov
add
hlt
mov
fldcw
mov
ljmp
add
daa
stos
icebp
mov
dec
and
frstor
cwtl
iret
rcrl
mov
sahf
jae
mov
lret
stos
sub
das
jp
loope
add
inc
shrl
add
dec
fucompp
rolb
and
mov
mov
dec
je
imul
call
add
push
jb
ret
pusha
add
int
fnstsw
jb
pop
adc
add
dec
xchg
lea
fsts
jg
xlat
repnz
out
out
adc
cmp
addb
out
mov
cmc
fadd
shrl
pop
mov
ss
shrb
push
dec
dec
enter
add
push
xchg
push
cli
stos
or
mov
repnz
xchg
xor
js
es
mov
add
xlat
pop
jecxz
xor
sub
sbb
outsb
loopne
xor
faddp
js
popa
cmp
fcomps
sbb
push
adc
in
mov
xchg
mov
mov
sbb
add
xchg
ret
int3
mov
cs
lock
add
xchg
push
loop
cmp
fdivl
inc
add
inc
add
loop
add
add
inc
and
add
mov
inc
push
je
add
push
mov
daa
fstpt
pusha
add
arpl
jo
adc
imul
adc
mov
rolb
stc
push
nop
xor
fcmovbe
rorl
or
adc
int3
daa
shlb
popf
dec
mov
insb
bnd
iret
fistl
jmp
inc
push
pop
or
mov
dec
js
dec
hlt
push
add
lret
mov
cmc
mov
in
push
jg
retw
stc
mov
add
pop
pop
adc
loop
stos
lahf
add
jb
sub
dec
jbe
xchg
insb
pop
inc
xchg
sbb
orl
mov
int3
or
mov
push
or
into
or
inc
add
push
dec
stc
push
in
xchg
movb
add
xchg
sub
inc
jae
sub
repz
dec
std
jecxz
mov
arpl
add
out
sub
or
dec
rorl
das
mov
shl
mov
loop
repz
loope
ljmp
int3
dec
dec
sbb
arpl
adc
ss
mull
sub
push
mov
pop
aas
sub
inc
add
les
pop
dec
pushf
nop
nop
fbld
pop
popa
jne
and
lock
add
push
fucomp
into
hlt
fldl
dec
les
mov
sub
mov
movb
pminub
lcall
add
lahf
fldcw
sbb
xchg
jle
fcompl
mov
push
push
mov
shlb
or
sub
bound
push
cmp
adc
stos
xor
hlt
mov
popf
popf
sbb
cmc
dec
mov
int3
je
push
js
repz
fdivrl
lret
jo
lret
jae
cwtl
dec
inc
add
push
xchg
mov
mov
pop
setne
cmpsb
cmp
jg
lcall
addr16
mov
pusha
add
or
push
cli
fstpt
push
sbb
add
loopne
insb
pop
arpl
addb
add
jae
jp
pop
insb
outsb
mov
flds
jle
add
fidivl
rcrl
mov
iret
push
pop
divl
call
ljmp
mov
ja
pop
fistl
movsl
mov
out
add
fs
stos
cli
scas
add
lret
fsubrs
mov
push
bound
add
sti
jp
mov
jns
sarl
mov
in
je
fadds
aad
add
scas
addr16
fs
jno
jmp
add
test
cmc
mov
loop
scas
sti
sbb
rol
add
adc
gs
dec
div
xchg
sbb
dec
pop
push
ja
rcl
aam
xchg
insl
das
mov
mov
mov
imul
jecxz
add
popf
aaa
idivl
arpl
add
ljmp
push
call
mov
add
mov
dec
aaa
movups
sub
pop
les
xchg
scas
ja
lret
pop
call
jbe
std
lcall
in
insb
jl
add
cmp
outsb
xchg
sub
leave
in
xchg
pushf
in
cmp
xlat
aad
dec
pop
lods
outsl
jne
std
loopne
movsl
dec
xchg
mov
in
fisttps
sbb
out
imul
mov
inc
add
sarl
mov
cmpsb
pop
cmc
movb
xor
movsb
adc
mov
outsb
pop
es
pop
push
iret
leave
jge
xlat
and
push
xor
sar
mov
inc
add
jbe
mov
shrl
xor
stos
mov
lret
sub
xor
dec
mov
push
imul
pop
sbb
filds
cs
addr16
fsubrl
stos
ja
movsb
push
push
add
dec
inc
add
cmc
rolb
aas
scas
push
add
adc
pop
pop
xor
add
sub
pop
mov
xor
clc
cmp
in
sub
add
scas
sahf
popf
daa
or
mov
cltd
pushl
out
inc
add
inc
mov
add
gs
cmc
push
test
sub
enter
std
xor
push
es
dec
and
fisubrs
insl
in
adc
ljmp
nop
and
loope
test
insl
xchg
enter
or
orl
adc
mov
pop
or
mov
or
mov
dec
pop
outsl
mov
cmp
iret
enter
pop
addr16
dec
lods
xchg
lods
mov
add
shll
sahf
ret
sbb
in
pop
mov
ror
mov
int3
loop
stc
lods
outsb
pop
xchg
sbb
stos
addr16
sub
add
xor
xchg
inc
add
adc
adc
mov
cli
xchg
jnp
mov
sbb
cmp
push
or
ret
xor
mov
add
or
add
jmp
mov
cmp
roll
fldz
and
or
aas
jmp
outsb
in
loopne,pn
aad
mov
or
add
add
in
fldcw
or
bound
bnd
sbb
cmp
cmpsb
loop
ja
add
movsl
mov
iret
loop
or
or
push
adc
repz
add
mov
adc
sbb
adc
and
call
add
sbb
enter
adc
jp
test
xchg
repnz
jg
add
pop
push
rolb
das
sahf
ret
rolb
test
aas
imul
or
add
mov
jo
out
pop
stos
loop
sub
idivb
sti
push
or
iret
sbb
cmp
push
cmpsb
jge
jbe
insl
pushf
int3
test
ss
sbbl
les
inc
add
xor
jp
out
xor
ret
pop
sarb
push
add
and
and
aam
pop
addr16
add
outsb
jecxz
lods
lds
rcrl
jle
dec
xchg
addb
fldt
mov
xchg
mov
cmc
sahf
ret
pusha
add
or
push
fldcw
pop
ljmp
inc
jno
jb
mov
iret
cmpsb
imul
rclb
test
sti
lea
mov
add
mov
pop
rcl
movsb
push
lods
jmp
push
cmp
shll
add
xchg
loope
push
shlb
mov
push
jge
movb
sbb
jmp
movb
int
sub
mov
das
sbb
jg
push
xchg
xchg
xor
notl
mov
insb
or
xor
lretw
nop
add
mov
fdivrl
xor
stos
sbb
or
into
iret
xchg
cmc
loope
push
xchg
pop
loop
push
add
add
adc
sbb
popf
xor
sub
fadds
add
rcr
push
jmp
cmpsb
or
ficompl
cmp
xchg
test
jae,pn
jb
dec
addr16
mov
mov
int
xchg
mov
icebp
cmc
sbb
scas
adc
inc
add
mov
test
sbb
ja
inc
scas
jo
sub
jbe
jle
scas
and
dec
dec
or
xchg
add
fiadds
push
or
dec
sbb
adc
pop
dec
cs
adc
movb
pop
test
inc
add
addb
fldcw
mov
add
addb
mov
idivb
fldt
rolb
add
add
loope
mov
lcall
sub
int
cmp
add
mov
mov
dec
movsb
pop
xchg
dec
dec
aam
and
mov
mov
mov
int
insb
ja
push
adc
shll
dec
and
jmp
xchg
fwait
xchg
out
dec
xor
add
push
dec
fs
add
stos
ljmp
addb
mov
stc
xchg
and
mov
out
out
lcall
add
inc
add
cmpsb
das
xchg
push
sub
int
addb
pushf
sbb
xlat
inc
xor
pop
pop
outsl
movsb
shrl
mov
out
into
stos
fadds
clc
lahf
mov
add
and
push
cmp
sub
xor
stos
xchg
inc
daa
inc
add
inc
test
add
xchg
stos
cmp
lock
imul
push
add
xchg
jne
cld
outsl
inc
xor
add
mov
into
gs
mov
xchg
mov
into
mov
int3
pop
pop
push
xchg
sbb
dec
jecxz
jnp
mov
inc
mov
cmp
rclb
adc
mov
lds
xchg
jbe
jg
dec
negb
inc
xchg
xor
push
add
ret
push
test
das
pop
add
and
imul
ret
sub
jnp
test
xchg
scas
insb
lret
test
outsb
repz
or
mov
xchg
jb
data16
add
loopne
cmp
cli
xlat
jae
addr16
or
add
pop
icebp
and
dec
movl
clc
out
cmp
in
add
fadd
add
mov
and
sub
jo
movb
cmp
xchg
daa
push
jns
jmp
sbb
add
adc
aam
add
cmp
or
out
pop
cmp
mov
inc
xlat
insl
pop
ss
mov
outsb
adc
aaa
out
add
or
inc
add
lods
lea
adc
jo
mov
xor
dec
mov
enter
cmp
out
xchg
int3
jecxz
xor
add
jbe
test
lods
in
sub
outsb
into
mov
push
mov
add
cmp
sbb
sbb
and
lock
in
lock
movsb
xor
inc
iret
loope
stos
ds
add
in
add
mov
sub
pop
push
std
sub
add
adc
out
pop
mov
popf
cmc
pushf
out
push
cmp
and
pushf
xor
insl
icebp
ds
out
adc
ret
xor
mov
lcall
add
cmp
jb
sbb
repnz
cmpsb
setno
mov
mov
inc
push
and
ret
lock
rcl
test
jp
lea
lods
mov
push
mov
cmp
adc
inc
or
push
adc
jo
div
addl
rol
icebp
ja
dec
lahf
mov
xchg
xor
push
loope
mov
cmpsl
mov
fists
ljmp
mov
cmp
add
and
mov
xchg
aad
call
jbe
fucom
and
add
dec
icebp
shlb
popf
sbb
add
jae
mov
inc
add
dec
clc
add
adc
xor
lods
test
out
lcall
insl
popf
pusha
add
scas
loopne
ret
jp
add
add
inc
add
dec
int
aaa
rolb
add
inc
fwait
scas
push
add
sbb
enter
adc
xchg
mov
cli
jbe
cmp
sti
lahf
dec
insl
mov
add
test
jbe
cmpsl
imul
sarb
or
dec
icebp
mov
insb
or
cmp
enter
dec
mov
jecxz
mov
stc
cmpsb
mov
jbe
sub
sbb
pop
push
cmp
popa
repz
dec
or
ja
add
aam
fstpt
scas
dec
dec
int
imull
cmpsl
xchg
addb
repz
lods
ret
sub
add
add
fimull
push
das
shll
xor
in
jmp
rolb
jle
add
mov
add
inc
add
gs
inc
mov
jns
dec
hlt
loope
icebp
pop
jnp
mov
jbe
fstpl
loop
add
mov
addb
xor
icebp
sub
mov
or
ss
xor
sbb
mov
dec
sub
aas
jns
add
movb
fstl
and
loop
fimull
add
xchg
and
xor
nop
adc
jo
or
jge
inc
add
mov
pop
in
pop
xor
xor
jns
lahf
cmp
loopne
in
add
rclb
movsb
es
mov
add
dec
jb
cmpsl
xchg
mov
lock
out
movsb
rcll
or
stos
cmp
add
add
fisttps
scas
lahf
sbb
xor
pop
or
inc
add
movb
cmp
outsb
mov
and
cmc
outsl
add
pop
je
les
pop
repz
add
aas
sub
sub
add
cmp
push
sbb
loope
add
pop
incl
add
mov
mov
and
ret
lock
int3
jmp
mov
in
xor
mov
fs
add
lahf
mov
je
mov
pop
shrl
mov
out
jb
add
add
push
scas
or
mov
xchg
loope
push
ret
xor
add
and
addb
xor
xchg
test
push
add
jno
rorl
les
add
sub
adc
xchg
hlt
addb
jg
add
pushf
mov
call
pop
jl
push
mov
jnp
int
add
icebp
cmp
in
sbb
push
sbb
mov
xchg
mov
sahf
imul
imulb
addb
bound
cwtl
mov
lods
pop
push
add
das
push
rolb
jl
sub
xchg
xor
jl
adc
pop
rorl
or
push
pop
xchg
addb
add
mov
sbb
sub
jl
es
les
mov
lock
int
aad
jp
add
ss
mov
and
ljmp
xchg
into
lds
add
ljmp
cwtl
jno
inc
gs
xor
fcmovne
sbb
lret
inc
add
jle
push
aas
cmpsb
or
adc
mov
xor
push
mov
daa
inc
add
jae
test
add
test
mov
dec
std
test
repnz
jmp
mov
inc
sti
sbb
pop
pop
test
pop
lret
inc
mov
fsts
dec
mov
sbb
jns
add
or
push
sub
lock
cmp
adc
icebp
stos
nop
sub
sub
jb
fldt
pop
fwait
dec
cltd
popf
or
mul
nop
mov
lock
adc
mov
fmulp
xchg
ret
fmul
jnp
push
sub
sbbl
repz
xor
ja
or
addb
out
sahf
popf
out
out
or
xor
lds
out
and
or
lods
in
shll
mov
jge
fnstenv
add
xchg
xlat
fwait
jne
call
repnz
add
inc
add
clc
addb
dec
sbb
push
js
mov
lock
mov
in
insb
add
sbb
bound
xchg
pop
adcl
add
xchg
jo
loop
addb
add
outsl
jge
mov
pop
jl
mov
stos
fsubrl
add
adc
mov
cmp
jg
hlt
cmp
add
imul
jg
push
add
pop
ret
int3
arpl
fs
sub
imul
test
xchg
sub
sbb
add
test
stc
mov
jle
leave
dec
sub
ja
and
ljmp
or
xor
sbb
enter
adc
clc
xchg
stos
fdiv
xor
add
imul
jp
mov
stc
dec
adc
mov
fs
test
popa
dec
out
cs
sbb
icebp
in
mov
les
cwtl
mov
das
add
or
sub
fsubl
fnstenv
loop
xor
push
loop
aad
or
loopne
sub
jae
pusha
add
dec
or
push
shl
inc
pop
iret
mov
adc
in
outsb
loop
mov
dec
lahf
shlb
add
sahf
out
pop
imul
dec
ss
test
lret
not
xacquire
aaa
popf
sbb
add
pop
repnz
and
jg
sbb
das
scas
in
mov
subl
or
lock
shll
bound
pop
out
lock
scas
int3
iret
inc
and
inc
int3
or
adc
add
mov
rorl
add
sub
mov
ret
mov
clc
in
in
cmpsb
inc
add
add
mov
scas
sub
cmp
icebp
movb
sub
mov
dec
sbb
add
lods
jnp
mov
push
pop
lcall
add
add
loope
and
aad
aam
cld
cwtl
add
lods
or
add
aam
test
inc
add
adc
dec
dec
adc
test
and
fisttpl
sub
loope
ljmp
sti
xchg
xchg
cmc
nop
aam
cmpsl
push
ljmp
mov
sub
inc
stos
push
push
add
out
jae
mov
inc
add
add
movsb
mov
add
add
jae
jne
add
mov
dec
mov
fisubl
in
fxch
cmpsl
jnp
fstl
adc
cmp
mov
xor
mov
push
fnstsw
sub
mov
or
icebp
cmp
iret
xchg
imul
xor
mov
loope
inc
nop
dec
sub
xor
out
test
lret
dec
fmull
out
ret
fs
add
cmp
imul
cltd
jnp
push
cli
jp
xchg
cld
int3
out
and
xor
cmp
repnz
getsec
push
add
lds
xor
sahf
and
mov
fildl
mov
sub
add
addb
shl
mov
sub
xor
cmp
jmp
dec
cmpsl
and
xor
mov
std
pop
pop
jmp
insb
pop
test
clc
fildl
add
add
xorl
xor
cmc
movsl
inc
imul
pop
outsl
inc
add
enter
dec
lret
pop
shl
xchg
loop
add
ja
lods
cld
push
aam
cmp
lock
mov
push
nop
add
ret
mov
ss
xchg
mov
lods
and
sbb
incl
add
jns
jg
add
pop
lea
adc
mov
inc
add
xor
add
pop
inc
add
das
mov
mov
ficoml
ja
in
das
mov
cmpsl
rolb
add
aas
pop
sbb
dec
sub
jb
loope
sbb
std
frstor
or
lds
cmp
psllq
hlt
xor
add
repz
push
mov
lock
add
push
scas
lds
sbb
out
sti
ffreep
loopne
sahf
das
pop
ret
and
int
xor
add
cmp
pop
push
in
cmp
mov
shll
add
mov
fistpl
fiadds
add
cli
pop
lret
jo
lock
imul
jne
test
stc
pushf
mov
inc
stos
sarl
repz
test
fwait
push
pusha
add
add
sbb
add
dec
cwtl
mov
out
sub
movsl
inc
add
add
add
scas
sbbl
xor
jo
or
add
add
sub
fmul
fcomps
add
maxps
std
push
push
xchg
hlt
xchg
sbb
xchg
rcl
xchg
movb
fbstp
int3
shl
mov
mov
mov
imul
push
stos
les
stos
adc
insl
xchg
fcmovb
add
fisttps
adc
rolb
nop
mov
mov
add
cld
mov
ret
ljmp
imul
mov
jnp
fcompl
lahf
inc
cltd
jg
mov
bound
cmp
cmpsb
mov
add
int
cmp
pop
pop
push
push
xchg
and
mov
dec
ficoml
ret
mov
and
ficompl
pop
fmuls
or
je
jp
aaa
push
mov
xchg
mov
pop
mov
mov
mov
std
scas
jmp
outsb
scas
fidivs
fsubr
fwait
dec
sub
imul
inc
xchg
imul
xchg
test
shrl
loopne
sbb
pusha
add
scas
sub
add
addb
pop
scas
xchg
sub
add
add
dec
push
mov
add
xor
fcmovu
add
and
sbb
sub
outsl
sub
add
and
repz
jl
pushf
stos
sahf
repz
sub
dec
pop
pop
cltd
call
mov
popa
push
rcrl
and
mov
inc
sbb
jle,pt
adc
cmpsb
test
sub
fisttpl
xchg
ret
push
cmp
loope
xor
lds
mov
push
inc
add
cmp
scas
xchg
aaa
mov
add
mov
pop
dec
rorb
xchg
inc
adc
fnstcw
pop
loop
and
adc
adc
dec
push
fstl
inc
add
sbb
xlat
pop
pop
outsl
lret
pop
add
xor
fwait
dec
sbb
icebp
and
push
pop
push
adc
sbb
out
dec
and
nop
pop
pop
inc
cs
add
stos
lcall
icebp
ret
in
inc
add
mov
stc
mov
fwait
jne
insb
mov
adc
push
cmpsb
scas
dec
bnd
icebp
jne
repnz
jg
out
fwait
dec
push
mov
xchg
xor
push
bound
in
arpl
scas
add
add
jge
mov
and
jge,pn
test
adc
sti
xor
fisubs
jge
jbe
lock
adc
jnp
and
sbb
mov
in
movb
out
inc
add
mov
pop
jle
bound
dec
mov
add
insl
mov
dec
sbb
or
or
mov
adc
xor
daa
dec
mov
into
xchg
test
add
je
fdivrp
mov
in
repnz
dec
sub
xchg
or
sbb
sub
insb
rorb
push
mov
les
adc
xchg
cmp
movl
xchg
mov
add
or
pop
and
inc
add
loop
and
jmp
rolb
insl
pop
mov
aam
inc
inc
add
add
in
xchg
sub
push
push
dec
mov
imul
popa
mov
add
ret
mov
not
enter
pusha
add
in
mov
scas
sbb
sbb
add
repnz
dec
jp
jmp
xorl
sub
aam
cwtl
shll
add
notl
hlt
or
fcoml
cmp
push
icebp
ds
mov
addb
add
pop
mov
into
sbb
idivl
mov
or
push
rclb
enter
sub
mov
addb
ss
add
in
inc
add
rolb
mov
les
and
cmp
ret
sub
test
sub
fidivrl
add
jle
loope
iret
out
int
and
popa
mov
bound
lcall
push
or
pop
addb
lcall
data16
push
xchg
jnp
repz
or
and
inc
add
lds
sbb
sbb
dec
imul
pop
jne
aas
pop
aam
dec
xchg
fcompl
mov
in
repnz
pop
jg
out
mov
add
dec
cmp
ret
sub
inc
sti
inc
cmp
push
addb
arpl
stos
shll
mov
and
mov
sbb
int
sub
and
stos
jo
pop
mov
lods
or
rcrl
mov
imul
jmp
jg
push
mov
cmp
je,pt
outsl
xchg
pop
and
andl
lods
test
fnstenv
sub
movb
decl
xchg
scas
mov
out
dec
push
popf
or
and
fs
add
xor
dec
aas
insl
cld
bound
lock
pop
and
add
mov
mov
adc
lods
bound
push
pop
rolb
arpl
mov
stos
and
xor
clc
push
pop
jns
lea
push
adc
aaa
fcmovne
test
add
add
mov
repz
add
in
scas
inc
add
pushf
out
loopne
add
xlat
leave
and
adc
dec
jae
fcmovbe
or
mov
lcall
les
in
push
pop
ja
adc
sbb
inc
and
mov
add
mov
sti
popa
sti
addb
fwait
cmp
xchg
mov
push
sbb
sbb
jns
adc
jecxz
add
add
mov
pop
lcall
add
jbe
stos
mov
cltd
addr16
add
inc
test
lret
lahf
jne
push
pop
sub
dec
fstps
lods
add
cmp
pop
rcr
mov
in
leave
lods
xor
fstl
aad
pop
mov
out
mov
outsb
mov
insb
ja
push
add
fdivrl
mov
mov
addb
adc
lret
out
mov
inc
add
xchg
inc
add
add
xor
in
stos
popa
dec
and
jecxz
clc
testb
imul
sbb
lret
rolb
mov
aad
out
inc
add
add
jmp
sahf
sbb
sbb
mov
inc
dec
imul
sub
jecxz
dec
mov
add
or
adc
lock
popa
jo
mov
xor
xchg
mov
js
push
pop
pop
or
or
cmp
add
mov
adc
inc
add
mov
adc
xor
push
mov
ds
movsl
fsub
xchg
jmp
out
dec
inc
add
sub
pop
pop
add
ret
pop
rolb
mov
jns
std
inc
jl
cwtl
lods
shrl
add
mov
jo
roll
dec
test
pusha
add
add
cltd
xchg
std
cwtl
sbb
add
movb
add
push
mov
shr
popf
imul
or
jb
add
sub
xchg
and
fisubrl
stos
roll
push
push
ret
add
out
shl
cli
call
jnp
das
sbb
xor
stos
data16
pop
ret
jno
push
add
roll
and
icebp
mov
sbb
std
ljmp
pop
mov
jge
inc
add
inc
rolb
mov
xchg
js
xor
jnp
arpl
stc
mov
lea
iret
add
lret
ficoml
mov
imul
std
mov
insl
in
xchg
add
jp
and
daa
sub
xlat
inc
repnz
repz
lret
pop
push
clc
or
add
add
add
add
ds
lret
sbb
mov
fistpl
inc
add
mov
pop
pop
sbb
push
or
sub
cli
lods
enter
andl
xchg
cmp
outsb
test
xchg
jne
rolb
cld
ficomps
sahf
outsl
pop
test
mov
mov
adc
mov
rcrl
dec
unpcklps
scas
sub
pop
push
cmp
sbb
push
mov
add
jae
loopne,pt
lods
cmpsl
mov
push
test
pop
jno
divl
out
outsb
incl
in
xor
jae
xchg
mov
inc
add
jmp
pop
xchg
sub
int
lds
leave
cli
movsb
inc
add
cmpsb
xor
or
mov
push
add
rcrl
insl
out
add
cmpl
push
cs
sbb
inc
dec
addb
mov
out
mov
or
xchg
movsl
outsb
jge
xor
add
mov
add
add
pop
push
call
dec
jae
fildll
jbe
add
add
add
call
js
cltd
nop
lret
fnstsw
lods
pop
cwtl
inc
jo
pop
xchg
jb
lds
add
add
jne
pop
sbb
leave
jmp
add
or
hlt
xchg
ret
or
cmovns
add
mov
pop
int
fcmovnb
fcomps
fidivs
mov
jl,pt
dec
or
sub
xchg
pop
push
adc
add
adc
test
stc
xchg
or
push
bound
push
add
inc
add
add
mov
xchg
xchg
fwait
mov
dec
or
scas
add
adcl
sbb
xchg
loopew
loopne
xor
mov
jo
pop
add
insb
in
add
aas
rcrl
iret
aam
cli
scas
pop
cld
jmp
push
add
ljmp
mov
test
loopne
push
cld
sub
mov
fstps
pop
mov
je
call
xchg
icebp
loope
sbbl
sbb
movb
mov
add
loope
mov
stc
addl
mov
cmpsl
mov
cltd
movb
dec
and
addr16
mov
ret
fbld
je
sbb
orl
out
inc
add
call
xchg
movsb
xchg
xor
and
sub
push
leave
ficompl
dec
call
or
xlat
xchg
ficomps
jb
filds
idivb
jne
out
pop
imul
sbb
popa
enter
and
pushl
pop
pushf
jne
xchg
jle
lea
fimull
and
int
add
mov
add
mov
add
bound
cmp
jle
and
fcmovne
push
add
aam
dec
or
inc
add
sub
add
cs
lret
stos
es
add
mov
fiadds
inc
mov
add
addb
add
add
mov
sub
inc
add
push
dec
and
dec
ficompl
add
jns
out
test
pop
out
ror
jo
divl
jl
cmp
dec
bound
xlat
mov
dec
adc
dec
cmpl
rcrl
mov
ret
int3
sub
call
jecxz
add
add
fs
sub
jmp
clc
mov
pop
lods
scas
lcall
movb
cli
into
or
and
push
scas
stc
jl
add
stos
pop
rolb
mov
xchg
call
addb
fldl
addb
pop
push
and
xchg
xchg
mov
inc
mov
aad
addb
add
and
sahf
xor
add
mov
adc
pop
dec
sti
xchg
ror
fcoms
bound
arpl
ret
addb
mov
lret
jp
hlt
pusha
add
cwtl
jp
and
xor
cli
movsl
jg
add
jl
jmp
add
pop
adc
cltd
pop
lret
loopne
shrl
pop
repnz
push
fdivrs
fs
inc
dec
stos
test
add
adc
jge
cmp
add
push
and
negb
jnp
mov
mov
int
ret
or
insb
sbb
or
add
iret
fwait
lahf
jnp
dec
cmp
adc
movsb
cmpsl
or
ljmp
fstl
add
cmc
fstl
cli
mov
cli
mov
out
rolb
xchg
lods
gs
jmp
dec
movb
mov
addb
shl
out
add
adc
addl
out
add
add
js
shr
cld
dec
mov
and
enter
cwtl
cltd
push
aas
mull
jae
in
mov
addb
out
push
sub
sar
sub
and
das
and
repnz
pop
aas
pop
scas
pop
je
xchg
inc
add
xchg
or
mov
aam
negb
loop
adc
jle
stos
aad
push
fstl
outsb
mov
xlat
sbb
mov
add
add
pop
mov
rcll
push
mov
add
ret
pop
sbbl
mov
outsb
mov
adc
pop
rorl
cmp
out
add
arpl
ret
inc
into
mov
data16
in
xchg
push
data16
inc
add
idivl
rcl
lahf
inc
cvtpi2ps
adc
add
add
xchg
push
mov
scas
mov
cmp
push
stos
scas
in
inc
add
ss
jmp
repnz
test
aam
jns
cmp
cmp
gs
xchg
pusha
add
push
add
jne
test
popa
sbb
dec
and
shrl
mov
shll
jno
mov
push
imul
cltd
cmp
jl
jbe
xchg
add
leave
xor
imul
sbb
mov
loop
les
jo
ljmp
clc
cmpsb
mov
dec
push
push
mov
pop
mov
mov
sbb
outsl
cmc
lds
data16
jle
inc
add
movsl
cs
inc
add
jg
cvttps2pi
mov
mov
out
adc
mov
push
test
popf
adc
es
or
hlt
clc
dec
enter
mov
jmp
insl
push
out
jnp
stc
out
add
xlat
and
inc
add
ljmp
popa
mov
shr
negb
cmpsl
cmp
jp
xor
add
pop
cmp
lret
add
movsb
idiv
jne
fdivrs
lds
inc
add
pop
out
lret
dec
sub
pop
mov
dec
addb
jne
fdivrs
jmp
add
icebp
pop
std
call
ljmp
outsl
sbb
mov
test
addr16
imul
jecxz
lock
push
sbb
mov
inc
adc
lods
sbbl
pop
fsubl
movsb
mov
sub
das
gs
pusha
add
loope
daa
mov
dec
faddl
mov
add
or
lcall
cmp
movsb
jecxz
jle
dec
push
cwtl
jnp
mov
jno
pop
xchg
and
pop
mov
add
popa
pushf
dec
sub
add
sbb
test
ja
xchg
loop
jl
addb
mov
sbb
inc
add
imul
rcrl
mov
jbe,pt
dec
lahf
mov
js
add
std
int
xchg
mov
inc
add
adc
push
cmpl
aas
jecxz
lret
inc
add
add
xchg
mov
test
dec
dec
aam
jnp
inc
in
xchg
nop
sub
pop
mov
aad
fwait
xor
mov
cmpsb
xchg
scas
rclb
repnz
dec
or
push
das
js
aaa
push
aam
lock
adc
mov
jnp
cwtl
into
mov
inc
loopw
addr16
in
xchg
sbb
xchg
lret
clc
insb
andl
das
std
iret
sub
mov
leave
pusha
add
insb
lahf
mov
fcompp
adc
pop
xchg
enter
add
lret
in
add
out
or
aaa
repnz
loop
repnz
int3
fdivl
sub
into
shl
leave
sub
jmp
iret
jg
and
leave
mull
subl
enter
add
mov
push
pop
inc
add
inc
add
sub
jb
and
jno
mov
iret
mov
jne
and
mov
popf
int
mov
je
bound
jg
mov
or
push
inc
out
jmp
fnsave
pop
mov
inc
add
mov
push
push
jmp
das
fwait
pop
pop
ret
pop
nop
mov
popa
pushf
in
pop
mov
call
inc
add
sbb
pop
and
sub
mov
out
or
movsl
inc
rcrl
push
xchg
iret
jmp
xchg
pop
les
adc
stos
into
xor
adc
mov
lahf
jae
push
push
mov
test
stos
sub
adc
insb
loop
mov
lea
shll
stos
add
dec
pop
push
sbb
pop
dec
mov
mov
sbb
sub
lcall
shrb
imul
jmp
das
in
sub
mov
pop
jge
sub
fcmove
xchg
fisubs
add
inc
jne
sub
inc
add
insb
std
outsb
sbb
fsub
sub
mov
sbb
xchg
stos
into
sar
mov
jle
adc
pop
fsin
sub
sbbl
cs
movb
xor
jmp
leave
lock
sbb
xor
push
add
push
jo
push
xrelease
ret
addr16
xor
pop
xor
imul
adc
addb
ds
sahf
dec
es
and
push
jb
pop
ljmp
bound
or
add
xor
add
daa
adc
ljmp
mov
jae
mov
adc
in
dec
and
pop
cwtl
inc
add
stc
adc
fistpll
scas
addb
iret
push
adc
hlt
mov
adc
xchg
and
xchg
push
sti
sbb
mov
in
mov
sub
and
xchg
push
das
rolb
push
add
mov
and
lds
sub
add
aaa
in
insl
loop
jl
or
cmp
add
unpcklps
add
test
sbb
fimuls
dec
mov
add
inc
add
pusha
add
add
icebp
out
out
and
insb
testb
cmp
rolb
xor
push
add
add
rorb
jmp
inc
add
mov
pusha
add
fisttpll
add
jae
add
mov
ss
aam
or
mulb
jbe
add
xor
sub
loopne
pop
cs
dec
sub
inc
add
jbe
out
xor
out
jl
add
lcall
push
in
add
andl
test
in
sub
pop
in
rcrb
xchg
sbb
aam
lcall
shrl
shl
js
cmp
jmp
mov
cmp
lcall
mov
cmp
pop
jge
loopne
xor
xchg
fdivrl
jbe
mov
inc
add
pop
pop
leave
and
push
xor
pusha
add
repnz
mov
enter
movsb
push
jns
leave
cwtl
jb
mov
add
rcrb
sbb
scas
xor
test
mov
sub
mov
aas
bound
jl
inc
add
cmp
mov
stos
mov
sbb
test
xchg
cmpsb
les
xor
cmp
inc
add
sub
lret
push
xchg
in
fdivr
rcll
push
mov
pop
pop
dec
ret
and
and
mov
dec
lods
pop
pop
sti
pop
mov
fmul
adc
add
add
addr16
aad
arpl
out
xchg
scas
inc
add
or
lret
mov
movsb
call
mov
adc
rcrb
sbb
js
cs
out
mov
das
jl
xor
mov
xchg
in
sub
test
js
fcmovb
add
fcmovb
add
and
or
add
into
lods
mov
jl
push
inc
add
jmp
and
cmpsl
mov
fcoml
mov
and
test
add
add
cmp
cmp
das
jo
push
arpl
push
stos
dec
fidivl
jl
sbb
sbb
and
sahf
adc
pusha
add
adc
jmp
push
sahf
cmp
sahf
insl
xor
pop
das
fistl
sbb
stc
sti
jns
int
je
out
cwtl
mov
inc
add
inc
add
int3
sahf
push
cmp
add
lret
int3
add
push
test
pop
adc
stos
jg
setp
test
mov
push
loop
retw
sub
pushl
add
sub
fisubs
add
xor
outsb
fwait
push
and
cmc
rorb
mov
sub
pop
icebp
sbbl
push
cmp
push
mov
pop
movsb
sbbl
add
ret
push
add
add
sbb
iret
jecxz
xchg
fnstcw
notl
dec
push
xor
add
es
xchg
cli
mov
and
movb
data16
out
pop
pop
push
das
mull
sbb
push
cltd
xlat
pop
mov
xchg
loop
mov
mov
rorl
pop
add
or
add
sbb
imul
mov
pop
mov
dec
out
mov
addr16
nop
cmc
inc
add
and
fcomi
repz
jl
add
cmp
int
data16
jns
jg
stc
pushf
loopne
divb
fdiv
lret
insb
fistl
fdivrl
mov
add
dec
imul
xchg
push
fucompp
add
ret
je
or
icebp
xchg
mov
jo
push
inc
inc
add
add
jns
push
loopne
pop
mov
mov
mov
je
sub
pop
nop
bound
push
jmp
dec
xchg
jno
mov
adc
cmc
test
push
fisubrl
mov
insb
push
jg
lahf
fldt
lods
int
adc
add
xchg
mov
loopne
movsl
dec
insb
cmp
xor
and
push
mov
mov
sub
out
mov
popl
in
push
or
test
pop
and
in
add
sbb
jecxz
mov
jno
pushl
ret
sbb
sbb
ds
dec
fsubs
jp
pusha
add
or
ljmp
add
dec
or
orps
add
jp
mov
cli
inc
add
push
mov
add
xchg
adc
sub
out
ljmp
gs
in
add
adc
loopne
es
fsts
adc
leave
rolb
pushf
sbb
sub
jl
movsb
pop
mov
pop
popf
cmp
jle
cmp
insl
mov
pusha
add
dec
lahf
pop
add
and
mov
mov
add
cld
cmp
lods
push
fmull
cld
test
and
je
dec
int3
mov
xchg
jne
sbb
xlat
inc
add
imul
loopne
and
dec
rcrl
movsb
mov
xchg
pop
mov
and
inc
add
cwtl
shlb
jge
inc
add
movb
insb
in
jmp
cmp
jno
dec
inc
stos
sub
repnz
ss
and
push
and
sub
add
pop
cltd
in
push
add
gs
hlt
dec
out
jl
test
push
xor
shl
lcall
lret
or
cltd
aaa
outsl
xchg
inc
push
in
mov
and
sub
leave
hlt
mov
addb
jbe
addb
xchg
cmpsb
rcrb
out
or
aad
lahf
out
push
addb
jle
test
and
dec
jmp
pop
add
lods
test
push
cmpsl
movsl
mov
fcmovnbe
rolb
fcomip
push
mov
pop
fidivl
add
add
or
in
xchg
popa
and
popf
adc
jb
rolb
loop
push
mov
mov
cmp
out
jb
lcall
xchg
outsb
jo
cmc
imul
xor
xchg
inc
add
fwait
mov
rorl
gs
jmp
aaa
les
aas
add
push
pop
dec
cmp
and
or
mov
dec
call
add
pop
in
jg
loop
int3
push
into
add
imul
jmp
psubb
js
and
repz
ss
pushf
mov
addb
add
jmp
jmp
cmp
jns
jns
loopne
dec
repz
and
dec
pop
mov
add
cltd
iret
or
scas
addb
mov
xchg
mov
int
xlat
idiv
add
fistps
xor
and
jmp
out
dec
xor
shll
mov
mov
xchg
in
xor
inc
or
dec
xor
xorl
push
add
sub
dec
rcl
xor
sbb
call
pop
mov
or
repnz
xchg
xor
or
addr16
ljmp
aas
add
or
push
nop
xchg
inc
add
shrl
jge
ret
das
inc
mov
jno
lods
xlat
lods
cld
imul
mov
mov
and
pop
push
add
mov
dec
xchg
sarb
add
pop
fcom
push
nop
mov
jg
cld
out
int
inc
add
push
mov
add
add
fcompl
mov
inc
add
mov
xchg
cli
repnz
xchg
xchg
les
pop
sbbl
push
cltd
mov
push
inc
add
adc
add
adc
add
fsts
push
fidivrs
cmp
add
es
push
lret
xchg
mov
add
mov
and
cmp
push
mov
or
aad
and
mov
push
daa
stos
rorb
pop
xor
mov
xchg
xchg
aaa
fisubrs
lret
add
push
add
mov
push
mov
outsb
fstpt
rorl
orl
xlat
mov
dec
mov
in
push
adc
sub
add
add
cmpsb
xchg
jmp
or
dec
sbb
cld
into
or
clc
xchg
out
scas
stos
push
int3
push
cmp
movsb
jecxz
arpl
cmp
insb
mov
test
cmc
insl
inc
add
inc
addl
jo
inc
add
lret
mov
pand
mov
cmp
add
push
out
out
fwait
scas
addb
rcl
inc
add
inc
add
dec
xor
call
loope
and
aaa
cmp
in
stc
in
in
ds
sbb
and
cmp
push
loop
gs
cmp
arpl
add
icebp
fistps
out
pop
inc
aad
xchg
jae
push
movl
pusha
add
add
sahf
rolb
add
hlt
and
push
push
pop
loope
dec
int
js
mov
test
push
pusha
add
lret
mov
addr16
pop
pop
mov
add
mov
scas
jp
sti
nop
xchg
sti
popf
stc
aas
xchg
cmp
gs
add
and
adc
cmp
fisubrl
pop
push
xchg
call
add
pop
add
fs
add
sbb
mov
add
and
sub
mov
add
mov
clc
xchg
mov
add
lds
in
out
in
sbb
mov
add
negl
addb
fs
and
fldenv
lods
and
jne
in
and
xlat
and
mov
mov
pusha
add
call
loop
movsb
stos
hlt
add
and
jb
jge
shl
nop
cmp
or
mov
sbb
sub
out
es
mov
and
test
scas
lock
xor
sbb
sahf
test
jb
lods
push
lock
mov
insl
xchg
jp
sbb
ret
mov
int3
popf
insl
cs
clc
sub
std
cmpsb
sti
or
or
add
add
in
enter
mov
rorb
add
popf
jae
pop
aam
push
inc
add
cmp
or
and
rclb
loopne
out
rolb
mov
xchg
dec
push
add
add
movsb
out
xchg
or
pop
lret
jmp
xchg
stos
push
xchg
mov
sbb
jbe
ds
xor
mov
stos
sub
repnz
dec
daa
xchg
fisubrs
mov
adc
and
add
out
inc
mov
sub
cmp
decb
fidivrl
push
inc
icebp
jg
xchg
pop
sub
shlb
pop
aas
inc
add
mov
push
add
mov
jns
dec
and
faddp
add
add
or
add
push
pop
jb
sub
add
push
addb
and
push
lods
mov
insb
jg
addb
dec
lock
and
iret
fisubrs
xchg
sbb
stos
and
pop
pop
and
fiaddl
add
mov
xchg
pop
dec
mov
pop
lds
add
sbb
gs
sub
bnd
in
jle
clc
frstor
out
sub
add
and
cmpsb
xor
movb
aas
mov
jno
ficompl
xor
imul
add
cmpl
lret
stos
outsb
mov
lods
cli
mov
roll
add
enter
xor
add
rol
inc
cmp
or
fwait
cmp
les
jno
dec
and
and
xchg
and
icebp
adc
dec
fdivl
jmp
mov
int3
nop
fwait
cltd
loop
adc
or
add
sbb
subl
test
xchg
add
ret
add
lcall
js
mov
sbb
lock
popa
jb
push
fisubrl
fbld
andl
pop
pop
inc
cmp
out
test
mov
add
inc
add
push
sbb
stos
xchg
xchg
sti
outsl
mov
sbb
into
cli
loope
out
cs
pop
dec
jne
sub
dec
and
inc
mov
je
pop
pop
std
ss
aad
inc
add
sub
cmp
jmp
add
shr
push
xchg
mov
fldl2t
test
lds
mov
clc
jge
aaa
mov
out
shl
cmp
xor
movsl
loope
push
xorl
aas
inc
add
jle
adc
inc
add
das
in
add
jg
add
add
fcoms
outsl
pushf
xchg
jecxz
xchg
push
cld
jae
addr16
pop
pop
fwait
testb
dec
push
hlt
iret
movb
rolb
dec
addr16
sbb
and
cmpsb
cmp
loope
xchg
and
add
mov
sub
push
add
mov
sub
icebp
add
inc
out
add
push
out
insb
data16
cmpsl
adc
int
push
addb
clc
icebp
adc
fwait
outsb
popf
std
out
int
ljmp
inc
imul
notl
mov
daa
mov
dec
push
movb
pusha
add
dec
jmp
xchg
je
mov
ss
and
adc
add
mov
sbbl
sub
fsin
das
arpl
popa
jb
pop
mov
cwtl
cmpsl
mov
xor
or
psubb
out
jbe
add
fldcw
mov
inc
add
insb
test
add
icebp
lret
int
inc
and
arpl
scas
mov
icebp
movb
add
push
push
add
ljmp
rorb
ret
clc
cltd
cmp
mov
or
inc
add
sti
popa
lret
outsb
fcmovbe
jo
and
cmp
ja
dec
push
mov
mov
or
outsl
mov
jns
hlt
test
cmpsb
sub
popf
push
test
hlt
and
mov
mov
xchg
rol
out
adc
insl
aaa
cmpsl
ffree
add
fwait
movsb
push
lret
ja
pop
or
and
jle
add
mov
test
sbb
fnstenv
in
pop
cmc
insl
xchg
inc
lea
or
add
adc
pop
pop
cmp
add
loope
icebp
mul
repnz
add
and
repnz
inc
fdivrs
push
ret
movsb
cmpl
lahf
popl
push
mov
addr16
pop
sub
out
scas
xlat
cwtl
xchg
push
jns
test
pop
out
push
push
or
mov
sub
push
repnz
imul
or
xor
mov
test
push
or
mov
addb
add
pop
jo
shll
push
cmc
stos
aad
add
add
cmpsb
xor
fcmovbe
jo
std
inc
add
sub
add
mov
repnz
imul
lds
iret
and
ret
mov
inc
add
out
adc
adc
mov
fsubrs
push
mov
dec
repnz
aam
ds
lods
leave
scas
in
xlat
iret
push
pop
sahf
jo
or
inc
add
sub
movsl
iret
and
inc
add
test
and
fmuls
adc
inc
sarb
xchg
into
mov
jecxz
add
push
addb
add
cmp
dec
aaa
push
es
pop
iret
addb
add
cmp
cmp
cltd
inc
jge
pop
dec
loope
jmp
pusha
add
addb
and
mov
xchg
pop
call
push
add
jnp
call
add
pop
call
ljmp
and
fistl
movsl
push
shr
jns
pop
pop
test
loop
aad
out
mov
push
mov
shll
ja
sub
push
mov
adc
jge
cmp
add
add
add
fnstcw
jns
movsb
jno
push
add
in
sbb
add
lds
insb
mov
movsl
iret
sti
inc
add
xlat
jg
push
mov
mov
addb
mov
ja
dec
enter
inc
filds
mov
mov
insb
push
les
or
mov
push
out
jl
push
std
movsb
push
xchg
inc
add
jns
mov
cli
push
mov
aaa
stc
das
pop
lods
inc
xorl
lock
or
mov
jne
pop
dec
jl
incb
idivl
std
mov
movsb
lods
inc
add
add
int3
call
add
out
sbb
leave
cmp
mov
cld
cs
inc
jl
jp
xor
scas
xor
rolb
jge
add
imul
xchg
cmp
sti
mov
outsl
sub
in
stos
movb
pop
test
sbb
arpl
jge
xor
mov
fwait
movb
or
cmp
add
popf
inc
cli
lahf
mov
sbb
stc
push
inc
add
xor
xor
push
or
inc
leave
movsl
scas
cmp
leave
std
fbld
add
mov
data16
ljmp
xchg
lock
jb
inc
xor
inc
add
add
ret
pusha
add
scas
insb
aam
hlt
loopne
push
fsubl
gs
push
fs
movsb
xor
or
xchg
xchg
pushf
mov
sub
mov
xchg
adc
adc
enter
add
pop
inc
add
jnp
push
push
pop
addb
push
sbb
int
sti
or
lcall
ret
xor
inc
add
sub
and
xor
pushf
std
add
ja
add
ret
sahf
pushf
in
test
movsb
xlat
je
mov
jmp
xchg
cli
outsl
mov
xor
dec
add
pop
inc
jge
sub
in
stos
xorl
mov
jle
or
dec
push
xchg
or
lods
adc
add
repnz
add
pop
xchg
popf
ficompl
repz
xchg
xchg
lret
mov
stos
addr16
sub
cmp
je
add
das
test
mov
movsb
fistl
cmc
mov
pop
jecxz
jne
mov
xor
imul
cwtl
rolb
inc
loop
std
and
loop
add
inc
movsb
bound
insb
xchg
and
ret
add
dec
bound
out
int
add
sbb
loope
mov
addb
mov
ror
daa
inc
add
add
and
arpl
add
inc
add
out
hlt
jae
hlt
js
sbb
pop
mov
outsl
sbb
in
arpl
scas
popf
mov
ja
in
jbe
adc
ret
stc
push
ss
jle
data16
mov
add
and
mov
lock
cli
bnd
add
pop
cmp
sbb
mov
mov
ja
addl
shrl
xor
inc
add
or
ja
idivl
jmp
cmpsl
scas
jle
stos
nop
sbb
je
xchg
or
fbstp
push
ret
or
inc
add
into
sub
sub
iret
lahf
push
add
add
fnstcw
and
rolb
jb
push
add
mov
jmp
stos
bound
mov
test
addb
test
out
add
pop
lret
xor
int3
pop
mov
dec
std
loopne
cs
add
mov
clc
mov
dec
addl
pop
jno
cmp
mov
mov
inc
add
mov
xchg
add
fnsave
xor
jne
add
add
sub
xchg
movb
mov
scas
lret
std
scas
xor
sbb
add
add
imul
sub
push
lahf
pop
sub
nop
aad
and
dec
cmpsb
or
add
in
mov
mov
cmp
push
sbb
sub
stc
sub
xor
loopne
dec
mov
fwait
aad
jnp
fisttpll
fdivrs
add
xchg
in
jne
insl
or
cwtl
aad
test
jbe
push
mov
sbb
loop
gs
dec
cmp
fstl
in
or
pushf
mov
lods
mov
push
ficoms
xchg
pushf
mov
inc
add
jbe
movsb
mov
push
fimull
mov
cli
xor
add
std
adc
leave
call
jbe
sbb
xor
mov
add
mov
loope
addb
shll
mov
pop
mov
pop
dec
pop
push
jg
push
push
mov
sbb
les
pop
je
adc
scas
imul
out
cmp
add
and
in
ss
add
in
mov
out
sti
sahf
push
mov
lds
scas
mov
dec
cmp
loope
cs
mov
inc
add
pusha
add
in
ja
xchg
cmp
ret
addb
or
pop
mov
mov
in
addb
cmp
add
and
adc
sbb
in
testl
gs
push
sahf
test
lahf
icebp
popf
pop
pop
jmp
pop
fisttps
add
pop
js
sbb
or
dec
pusha
add
push
jb
push
push
mov
outsl
cmpsl
sbb
xor
mov
clc
leave
sub
cmp
outsl
and
fstps
xchg
cmc
or
mov
push
add
adc
xchg
jl
dec
cs
cmp
cmp
aaa
aad
or
jp,pt
adc
add
aam
clc
cltd
ret
in
imulb
hlt
lea
bound
in
mov
pop
mov
push
rorl
add
cmp
inc
mov
add
idivb
sub
sbb
sbb
sub
or
jbe
aaa
stc
pop
push
mov
and
cli
call
std
arpl
inc
mov
push
mov
addb
icebp
lock
xchg
pop
addl
add
xchg
pop
ret
cmp
push
adc
jno
dec
aam
add
es
cli
inc
lds
jne
movsb
sub
pop
jo
loope
outsb
imul
jno
sub
daa
jo
mov
or
push
or
lahf
insb
aam
test
ds
xchg
add
jle
and
add
outsl
loop
jns
xchg
sub
lcall
stos
ja
popa
sub
orl
mov
sbb
test
xor
or
mov
lods
arpl
aam
add
dec
sbb
xchg
cltd
std
out
push
js
gs
inc
add
fidivrl
add
ret
mov
and
push
pop
cmp
rolb
mov
aaa
mov
jne
pop
scas
imul
sub
add
pusha
add
xchg
sbb
rolb
jae
test
popa
pusha
add
std
lahf
movb
andl
das
out
mov
add
sbb
imul
or
push
jl
xchg
jb
addr16
add
pusha
add
add
jns,pn
sub
outsb
pop
mov
pop
addb
jbe
out
mov
mov
jp
lods
cmp
add
les
mov
fcmovnb
add
add
add
test
daa
or
xchg
mov
js
adc
insl
repz
inc
add
add
ds
jp
and
xchg
movl
mov
or
add
mov
push
movsl
inc
add
xor
add
add
es
cmp
sahf
cmp
rcrb
jnp
pop
sub
ljmp
push
insl
push
add
movb
stos
mov
gs
stc
or
into
out
movsb
pop
jmp
popf
in
mov
cs
push
lods
mov
cmp
cld
jg
rol
add
or
or
scas
add
or
dec
mov
add
add
fwait
xchg
push
jae
pop
clc
scas
das
idivb
mov
fwait
lds
add
pusha
add
loop
dec
jge
sub
jmp
and
prefetch
or
ljmp
jg
pop
sub
bound
cltd
movsb
jae
add
push
adc
rcll
addb
leave
addb
sti
scas
sbb
xor
xchg
addb
test
sub
add
into
mov
lea
jg
aaa
inc
lods
das
xchg
cmp
lods
hlt
jmp
xchg
pop
inc
fs
sbb
jp
cmp
push
push
sub
dec
imul
in
bound
mov
loop
pop
rorl
in
and
arpl
sbb
pop
movsb
iret
lods
jnp
jmp
push
mov
cmpsb
dec
mov
cli
add
js
sub
iret
leave
shlb
mov
cmp
movsb
adc
mov
lods
jmp
popf
mov
incl
and
in
mov
ss
outsl
outsl
sub
add
pop
add
add
jl
stc
fisttpl
and
in
int3
pop
and
and
jne
mov
insb
jecxz
sub
inc
aas
imul
push
add
popf
ds
cmp
xchg
mov
shll
lods
pop
push
das
mov
sbb
aad
andl
mov
inc
add
lds
das
pop
and
fwait
sbb
pop
pop
outsb
lret
js
add
imul
add
mov
aam
sbb
in
push
xor
jns
inc
add
mov
ja
xchg
adc
fiaddl
inc
add
mov
dec
roll
add
js
movsl
test
sub
sub
push
jmp
jnp
add
push
adc
adc
add
jne
mov
sub
pop
push
fcmove
mov
and
test
pavgw
js
out
xor
sbb
test
ss
int
test
insl
dec
fcomps
rolb
pop
xchg
in
insb
lret
and
fwait
sbb
mov
add
ljmp
add
in
push
loopne
add
jmp
jno
inc
jl
call
fisttps
fwait
ret
or
mov
das
adcl
and
mov
add
push
cmpsl
in
aad
dec
int3
ja
sub
add
clc
push
mov
add
mov
mov
mov
popf
addr16
mov
pop
dec
out
out
cmc
pop
es
adc
hlt
inc
add
or
push
add
test
sbb
add
add
xor
in
mov
push
ljmp
jns
into
fstpt
pushf
jno
jecxz
xchg
sub
and
adc
test
push
incl
adc
xor
and
add
xor
mov
adc
pop
pusha
add
hlt
cmp
pop
xor
es
rol
add
add
xchg
iret
dec
arpl
jle
sbb
arpl
mov
sub
add
push
adc
mov
pop
jp
fmull
lcall
xor
sub
add
dec
fdivr
fwait
add
dec
sub
dec
imul
test
xor
and
cmp
decl
test
sub
mov
adc
sub
insb
mov
sahf
jp
jl
inc
stc
out
out
dec
fstl
pop
sti
in
rorl
inc
sbb
push
jge
push
add
mov
xor
or
jecxz
fwait
push
mov
inc
push
xchg
iret
mov
mov
daa
sahf
cmpsl
adc
clc
xor
or
add
fcmovne
xchg
loope
adc
inc
add
imul
dec
fldcw
stos
insb
cmpsb
aam
xchg
push
fistpl
add
add
jl
lret
xor
add
add
les
jecxz
cmpsb
in
adc
insb
daa
rolb
lock
adc
fnsave
xchg
outsl
add
sbb
fcmovu
movsl
dec
in
cmp
popf
out
sbb
push
xchg
ds
xchg
shll
and
mov
mov
or
mov
add
rolb
mov
js
fildl
sti
xchg
jl
adc
es
mov
cmp
out
ds
rolb
mov
not
out
and
add
scas
mov
sti
jecxz
dec
cld
pop
int3
std
aad
cmpsb
inc
adc
insb
loop
pop
jae
pop
xor
pop
sub
stos
jns
adc
pushf
dec
dec
push
rcrl
or
add
xchg
cmp
add
xchg
xlat
fsubrs
shr
dec
jbe
ljmp
outsb
pop
sub
enter
jo
jnp
inc
add
add
jnp
ret
mov
jno
leave
adc
loope
push
int
fwait
pop
pushf
xorl
push
ss
push
and
dec
cmp
jmp
hlt
cs
das
sbb
popa
jp
lock
movb
outsl
lea
out
jmp
clc
movsl
cmp
jp
cltd
inc
add
ret
fadd
in
push
or
sbb
jae
lds
jmp
add
xor
inc
push
push
or
mov
fists
push
ss
push
push
or
ret
push
dec
dec
cmp
adc
dec
cmovge
add
out
mov
daa
mov
in
add
cld
nop
rsm
push
int3
lock
stc
aad
add
popf
into
xchg
out
or
out
push
xchg
repnz
sbb
mov
mov
dec
xchg
imul
psrad
pop
clc
movsl
sbb
add
xor
iret
xor
addb
or
or
xchg
in
cmp
das
mov
inc
add
not
mov
dec
mov
xchg
lahf
adc
lods
cmpsl
lret
or
add
or
mov
lods
adc
jo
jle
mull
and
add
bound
movsl
pop
dec
fsubr
scas
in
push
ret
inc
ja
aam
je
mov
rolb
pop
dec
jno
subl
push
push
into
xchg
xchg
hlt
mov
imul
mov
push
xchg
sbb
mov
push
inc
mov
addr16
std
aam
imul
inc
add
orl
ret
repz
in
fdiv
dec
mov
movsl
in
popf
xor
in
add
add
push
scas
mov
add
add
lahf
test
mov
add
stos
jecxz
add
cmp
jle
sub
add
xchg
cmpl
and
fs
loopne
addb
hlt
mov
lods
mov
cmp
mov
fnstcw
dec
mov
call
mov
inc
add
mov
adc
and
stc
mov
cmp
adc
add
xchg
jmp
xchg
add
cmpsb
imul
jo
stos
lea
enter
fwait
inc
ds
push
cmp
popa
sbb
add
sbb
adc
test
jmp
data16
mov
or
ljmp
out
insb
pop
pop
or
cmp
inc
push
mov
stc
push
adc
repnz
jae
rcl
inc
call
sar
and
jg
jl
mov
adc
outsl
or
cmovo
test
ds
cli
adc
stos
cmpsb
loop
dec
ljmp
stos
adc
in
daa
pop
daa
mov
imulb
add
mov
je
lock
mov
pop
add
mov
cltd
or
add
add
hlt
dec
xchg
mov
dec
mov
int3
cs
jle
jae
into
pop
jns
test
jae
jle
repz
add
arpl
ds
in
test
push
popa
in
fs
daa
fisubs
jns
pop
push
out
xor
pop
push
jg
pop
mov
mov
negl
or
addb
mov
mov
mov
cmp
ret
daa
lret
ljmp
adcl
lret
dec
int3
or
xchg
dec
pop
pop
les
xchg
enter
mov
negl
jg
jg
pop
xor
jbe
cli
imul
inc
add
sub
lock
out
int3
pusha
add
es
xchg
add
in
jb
loop
push
mov
addb
push
xchg
inc
sub
jmp
sahf
xor
outsb
push
insl
popf
cmp
and
das
adc
add
cld
jno
add
shll
lea
dec
or
sti
xchg
mov
mov
lcall
psrlw
jnp
stc
xchg
cmp
inc
mov
cmpsl
stos
fidivs
nop
jl
rorb
pop
es
addr16
gs
aas
or
clc
subl
pop
int3
cmp
lods
xchg
cwtl
loopne
add
inc
xor
xchg
dec
xor
xlat
xchg
or
stos
sub
add
aam
sbb
sub
add
mov
push
mov
push
sti
lahf
mov
mov
pop
add
rclb
cmp
or
pop
frstor
ret
test
or
jmp
aam
scas
sti
cmpsl
push
mov
mov
inc
outsb
mov
adc
ja
add
inc
add
jbe
in
pushf
cltd
stos
dec
fiadds
int
addb
mov
iret
sti
or
mov
cmc
ret
dec
imul
add
add
jle
mov
sbb
inc
add
and
cld
xchg
rep
lock
jecxz
jno
add
in
andl
addb
pop
pop
cmp
xor
loopne
mov
mov
mov
mov
pusha
add
pop
mov
dec
and
sub
cmp
or
xchg
pusha
add
adc
cmp
in
cmc
sub
push
mov
mov
out
inc
add
test
pop
mov
popa
dec
add
jecxz
aaa
mov
cld
pusha
add
jae
insb
out
or
inc
dec
sbb
out
ja
dec
adc
out
add
add
add
xchg
mov
out
xchg
xchg
push
pop
and
push
jg
mov
jns
test
in
xor
sbb
dec
pop
sub
fstps
jmp
push
fstps
cwtl
dec
arpl
add
stos
add
jge
adc
add
or
or
mov
or
lret
xchg
shll
inc
add
xchg
xchg
out
xor
ret
jg
add
and
push
jnp
add
adc
xor
mov
or
ret
lret
fmuls
mov
imul
pop
jecxz
popf
imul
dec
lods
cli
aam
add
add
lock
xchg
push
ds
add
pushf
clc
dec
out
inc
add
push
add
addb
add
dec
aad
lock
jg
cmp
sub
aaa
out
adc
and
test
mov
bound
mov
cltd
jge
mov
cwtl
jae
je
push
pop
mov
ss
add
add
xchg
pcmpgtw
dec
adc
cltd
nop
pop
les
xchg
xchg
ja
movb
fisubrs
mov
es
imul
mov
shr
fisubl
add
mov
inc
or
pop
std
out
push
je
add
stos
addb
rclb
stos
sub
js
ss
push
pushw
fstpt
test
dec
divl
xor
pop
push
add
add
scas
add
mov
mov
inc
xchg
and
xor
add
mov
and
leave
cmp
and
xchg
out
movb
or
add
paddw
fcoms
dec
mov
js
les
mov
mov
fmull
push
xor
stos
push
or
dec
mov
daa
jae
and
xchg
aad
jp
addb
add
sbb
outsb
outsb
xchg
push
xchg
push
add
cmc
test
jbe
sahf
inc
add
bound
cs
cmpsb
inc
mov
rolb
mov
cmp
xor
sub
and
dec
stos
fnstsw
xchg
adc
mov
scas
fsubp
mov
movsb
jb
pop
dec
test
call
jecxz
leave
clc
inc
dec
cmp
int3
dec
or
cmp
dec
xchg
jecxz
into
loopne
lea
enter
enter
or
push
xorl
jg
sub
sti
out
loope
aas
ror
sbb
cmp
lret
sub
fsincos
ja
dec
jmp
add
pop
cmp
sbb
mov
enter
in
mov
incb
pusha
add
push
inc
add
arpl
lahf
push
push
dec
test
icebp
cmp
cmp
addb
lea
push
push
pop
sub
add
popf
xchg
push
sub
in
xchg
ja
mov
xchg
mov
movsl
and
stc
lock
sub
les
insb
sbb
lods
xchg
ljmp
out
lock
test
adc
sbb
int3
in
jnp
sahf
ds
add
sbb
lds
scas
cmpsl
idivb
jno
test
ret
pushf
cmpsl
push
das
push
test
mov
dec
cmp
sub
or
icebp
mov
or
jns
loopne
pop
insb
mov
add
inc
add
mov
or
mov
aam
sbb
lea
js
and
sub
test
add
test
flds
add
push
mov
mov
sbb
push
ret
adc
ja
and
es
add
adc
dec
in
movl
dec
dec
fisttps
ds
into
mov
fs
mov
addb
and
sahf
stos
or
icebp
movaps
xchg
lea
add
out
sub
mov
inc
scas
jl
mov
es
adc
test
outsl
push
mov
jns
xor
add
in
or
add
xchg
sbb
dec
js
add
push
imulb
cmp
ret
xchg
or
add
and
pop
xor
xchg
test
mov
fisubrl
add
cli
push
adc
xchg
test
clc
sub
mov
inc
imul
imul
pop
stos
sub
cmp
pop
sbb
les
fxch
sub
imul
movsb
std
out
jnp
int
adc
jle
add
ja
into
in
lcall
cmp
add
jns
cmp
lods
cmp
sbb
add
daa
les
sbb
add
lea
add
cmc
outsl
xchg
mov
mov
lea
or
add
hlt
cli
lea
mov
pcmpeqd
jae
add
popf
add
fcomi
xchg
addb
xchg
jb
sbb
enter
mov
add
push
add
or
adc
xchg
mov
or
pop
mov
clc
jp
add
sub
shrl
sbb
lds
jo
ja
movb
ss
pop
fimuls
add
jge
xorl
adc
cwtl
jg
andl
insl
push
add
mov
inc
jmp
sbb
mov
iret
mov
pop
movsb
scas
fisubrl
adc
mov
in
and
add
ljmp
xchg
aaa
mov
imull
ds
push
xchg
mov
fidivrl
mov
mov
test
fisubrs
test
pop
cs
pop
sbb
stos
lahf
dec
aam
mov
add
iret
sbb
add
test
jmp
add
fidivrs
dec
and
imul
lods
or
adc
jns
jg
jecxz
add
sbb
push
inc
mov
xchg
clc
and
rolb
imul
and
xorl
test
pusha
add
cs
xchg
mov
cmp
stos
mov
addb
pop
cld
pushf
mov
jge
or
faddl
nop
pop
clc
addb
push
out
mov
sbb
hlt
sbb
out
cmp
insl
xchg
icebp
arpl
add
add
mov
inc
add
and
or
sub
stos
xor
inc
xchg
add
test
jb
lahf
push
pop
shrl
imul
out
mov
hlt
mov
jne
add
and
adc
push
add
daa
enter
das
mov
ja
mov
jle
inc
ss
xchg
out
jnp
sbb
jo
addb
out
in
mov
xor
jno
push
std
mov
push
fwait
mov
xchg
or
add
loopne
out
aas
loope
mov
arpl
orl
adc
and
xor
pop
and
fidivrs
js
lds
das
mull
aaa
icebp
sbb
inc
sbb
jbe
sbb
xor
popa
jmp
jmp
mov
mov
push
add
add
add
pop
jl
arpl
and
ds
leave
push
xor
pushf
mov
mov
ja
not
lcall
das
cmp
add
add
push
mov
sbb
imul
mov
jae
push
testb
sbb
je
dec
xchg
jge
into
outsb
inc
add
jbe
xor
cmp
rorl
cmp
dec
or
fwait
dec
pusha
add
mov
sub
rolb
inc
push
mov
jae
jecxz
cwtl
iret
xorl
sub
sbb
jmp
stos
out
popa
fcomip
push
push
jnp
pop
inc
push
cmp
xchg
fildl
aas
cmpsb
add
stc
sahf
push
and
sbb
mov
cld
pop
pop
push
add
movsl
and
sub
jp
outsl
sub
pop
out
test
ja
mov
inc
add
xlat
pop
cmc
adc
mov
jp
popa
xor
jnp
jl
xchg
sub
sbb
bound
sarl
push
add
push
add
icebp
ljmp
lock
pop
fsubrl
out
push
dec
mov
add
aaa
pop
pop
enter
cmp
int
mov
xchg
dec
loopne
xchg
xor
mov
push
add
mov
xor
add
add
ljmp
les
lret
mov
or
mov
mov
add
jns
addb
push
pusha
add
jo
and
push
and
js
cs
pop
mov
xchg
cmp
jl
sub
cli
mov
sti
movb
mov
aam
and
in
push
add
push
push
sub
add
and
or
hlt
stc
mov
add
in
xchg
fyl2xp1
aad
xor
mov
xchg
fdivrl
mov
test
aad
add
cltd
mov
dec
sub
add
loope
sub
mov
aaa
lods
mov
add
stos
ret
icebp
pop
sub
xchg
dec
stos
lahf
movb
jl
pop
and
mov
push
push
idiv
sbb
daa
in
orl
mov
add
cmp
in
adc
aam
fs
mov
add
js
ja
sbb
add
push
and
ss
fildll
outsl
insb
pop
mov
enter
pop
adc
insl
pop
jb
cmc
in
in
add
mov
push
imul
push
inc
add
xchg
jne
pushf
imul
add
push
ja
sbb
add
push
cltd
icebp
test
and
scas
sbb
je
add
repnz
insl
adc
add
enter
pop
movsl
stc
cmp
pushf
cltd
and
xchg
idivb
mov
stc
inc
and
inc
adc
pop
sahf
rolb
test
or
push
out
rorb
inc
add
push
xchg
or
fdivrl
sub
test
or
nop
jmp
sub
add
stc
mov
jmp
fsts
popf
std
pop
popa
rcll
or
xor
adc
add
lock
xchg
dec
push
sbb
pop
scas
mov
shl
jl
push
mov
out
add
fistps
sub
cmp
add
jb
stos
test
adcl
cmp
inc
jge
mov
gs
ret
mov
popf
shrb
fwait
and
jnp
pop
xor
dec
add
push
arpl
addb
pop
xchg
popa
cmp
rcrl
pushf
xor
fmuls
movsb
cmpsl
dec
aaa
sbb
sbb
into
pop
fiadds
inc
sbb
cmpsl
test
clc
sub
jmp
fwait
in
enter
lock
pop
xchg
loopne
out
adc
insl
dec
les
lea
mov
adc
mov
mov
add
jbe
lods
scas
push
xor
icebp
in
test
sub
xor
fmuls
mov
popa
lret
rolb
cli
sbb
cmp
loop
push
es
push
fbstp
and
mov
js
outsb
int
mov
in
jbe
cmp
push
xchg
ljmp
push
cmp
dec
test
mov
mov
cmp
cmpsl
test
fisttps
inc
add
sbb
cmp
out
pushl
sub
jb
dec
pop
add
jbe
xchg
inc
xchg
sahf
ss
imul
int3
pop
mov
pop
pop
ljmp
arpl
leave
adc
jae
dec
cmp
jecxz
lcall
add
and
in
cltd
push
push
add
out
lahf
lret
pop
and
push
test
rolb
mov
inc
add
sbb
sarl
sub
outsb
test
mov
clc
cmp
mov
cmpsb
scas
in
stos
mov
jbe
mov
pop
jo
push
clc
dec
add
shl
das
addb
add
mov
fs
xchg
xchg
mov
bound
test
rolb
add
pop
push
ret
test
fcmovne
test
mov
mov
clc
ja
into
shrl
jge
sbb
add
loop
repz
jbe
lea
cwtl
lods
and
sbb
fdiv
add
sti
daa
nop
and
xchg
stc
pushf
jp
add
in
insb
cltd
lods
xchg
inc
add
push
push
push
rcrl
les
rcll
mov
iret
xor
ds
cmpsb
sbb
mov
cmp
mov
adc
push
xlat
ret
adc
add
leave
xchg
clc
sub
add
cltd
or
add
aaa
jmp
scas
outsb
or
cmp
cmc
hlt
sub
imul
in
test
loop
clc
aas
pushf
push
lea
mov
icebp
incl
add
cs
dec
lahf
imul
xchg
xchg
addb
stc
cmp
sub
in
add
in
add
pop
dec
push
imul
bound
cmp
mov
hlt
les
pop
hlt
jns
cwtl
mov
add
je
daa
test
cs
push
addb
and
andl
mov
lret
les
loope
jbe
stc
test
add
cmp
push
add
lods
insl
sbb
les
data16
pop
repnz
sbb
cltd
test
enter
fcomps
or
bound
jge
fxtract
jbe
hlt
and
dec
sbb
sahf
xor
xchg
xor
dec
mov
inc
out
out
mov
cmp
sti
mov
inc
or
push
add
mov
sbb
xor
push
addb
xchg
aam
add
dec
stos
in
push
fmuls
lods
sbb
push
mov
lret
rolb
test
mov
movsl
adc
leave
imul
or
and
outsb
outsl
jnp
jmp
mov
xchg
leave
fcoml
int3
jnp
add
add
fisubl
inc
add
xor
mov
hlt
inc
add
add
pop
adc
addb
dec
mov
or
sahf
push
or
shl
jb,pn
mov
fistpll
call
fdivrl
or
and
test
aad
addb
add
adc
addr16
out
xlat
lret
inc
jnp
or
call
out
es
jne
in
fs
pop
cmp
mov
add
imul
pop
sbb
or
push
xor
dec
in
addb
push
inc
dec
addb
mov
data16
add
lahf
cmp
fildl
aad
pushf
shrl
adc
scas
sbb
and
mov
adc
sbb
scas
cmp
into
xchg
xchg
or
fnstenv
clc
ret
cs
mov
ret
cmpsb
mov
imul
inc
or
pop
nop
imul
mov
add
and
imul
add
add
add
test
add
push
dec
subl
cwtl
xchg
repz
mov
inc
add
push
addb
cmp
lret
fistpl
cmpsb
and
addr16
rorl
jle
mov
or
movsb
enter
fcmovb
add
ret
xor
imul
enter
sbb
cld
mov
enter
xor
ja
dec
jno
aas
lods
into
icebp
push
ss
mov
sahf
jo
add
and
bound
ds
mov
cli
mov
mov
repnz
bound
or
popa
lretw
xchg
mov
shlb
sub
adc
adc
les
push
xor
leave
inc
add
mov
pop
mov
adc
jp
push
xchg
out
arpl
push
mov
fwait
daa
push
addb
fiadds
int
cmp
mov
sbb
add
add
add
mov
sahf
push
leave
test
dec
lret
aas
pop
jl
lods
stc
arpl
dec
outsb
rolb
fs
xchg
sbb
add
xorl
addb
add
cmp
test
jge
add
add
xchg
adc
stc
xchg
je
push
fs
iret
mov
xor
rolb
add
push
fucomp
fisttps
rolb
mov
add
add
add
inc
pop
lds
mov
inc
add
mov
fs
movsl
dec
stc
xchg
out
mov
movb
sbb
jecxz
add
adc
out
ljmp
mov
ret
dec
inc
add
pop
mov
bound
cmp
or
lds
mov
inc
mov
out
inc
cmp
lock
hlt
fwait
cmp
pop
mov
mull
add
std
mov
fistpll
test
imul
imul
xor
jb
arpl
push
and
mov
mov
push
add
add
loope
add
add
or
call
stos
xchg
ds
mov
stos
cltd
or
mov
xor
je
sbb
and
xor
stc
daa
xchg
addb
movb
out
pop
and
mov
push
outsl
xchg
xor
add
movsl
dec
cli
push
inc
adc
loopne
mov
out
mov
testl
push
sbb
push
je
xchg
push
push
rcll
lock
add
leave
sti
popf
bound
push
and
xchg
mov
or
pop
jne
sub
add
xor
jnp
xor
sti
loope
js
add
clc
sar
rolb
add
add
push
mov
scas
in
fisubl
out
in
add
rorl
add
data16
jge
mov
or
testb
mov
ljmp
add
sub
dec
cmp
lret
out
insl
sub
arpl
mov
leave
imul
mov
daa
aam
sbb
cli
pop
sub
hlt
stos
in
cmp
fnstcw
adc
jmp
jo
cli
leave
push
jecxz
xchg
dec
fldcw
push
movb
mov
add
mov
pushf
add
inc
mov
inc
add
cwtl
mov
sub
jl
in
ret
nop
ljmp
fmul
mov
add
jb
cwtl
cmp
and
mov
fsub
mul
rolb
jecxz
mov
aad
dec
mov
scas
xchg
pop
fisttpl
dec
int3
dec
mov
test
jmp
outsl
xchg
lea
adc
lock
aad
rolb
add
cmpsl
jmp
xlat
iret
xor
xchg
cmc
loope
add
mov
cmc
into
dec
out
bound
testb
inc
add
inc
jmp
jmp
test
testb
add
adc
adc
adc
add
mov
xchg
movsb
pop
mov
add
repnz
test
pop
test
mov
xchg
push
std
mov
aaa
cli
aad
fildll
xor
cmp
pop
test
inc
add
and
or
xchg
aad
adc
scas
jns
cld
test
repnz
fidivs
mov
stos
mov
out
orl
in
cmpsl
mov
add
leave
cld
out
notl
add
mov
mov
and
mov
and
pop
and
je
negb
pop
test
stos
sbb
adc
popa
xchg
jmp
add
sub
xor
push
shrl
cmp
mov
add
arpl
add
scas
into
dec
das
sub
out
cmpsb
test
insb
push
sub
sbb
fs
xlat
rolb
mov
and
mov
push
popf
push
in
lods
sub
repz
popa
xchg
sub
dec
cmpsl
mov
inc
mov
add
jo
fidivrs
fdivr
ret
clc
cmp
leave
bound
xchg
stos
inc
inc
add
jecxz
mov
addr16
add
lret
sbb
lock
cltd
jmp
mov
stos
xchg
mov
dec
in
mov
fdecstp
fwait
pusha
add
mov
jno
imul
mov
mov
into
xlat
cli
mov
mov
jle
mov
ret
roll
pusha
add
cmp
out
cmc
push
shlb
lds
fsubp
in
gs
add
or
add
insb
fs
rol
add
mov
ja
sahf
imul
cwtl
inc
fdivl
add
mov
insb
jnp
xchg
pop
push
xchg
outsb
push
cmp
mov
mov
add
add
dec
addb
xlat
cmpsl
addr16
mov
and
nop
subl
sahf
aaa
lret
loope
sbb
pop
rolb
test
or
xchg
dec
rcll
mov
icebp
test
in
addb
ja
iret
clc
inc
mov
test
cld
test
sub
ds
and
fs
outsl
sar
push
xor
bound
jmp
cmpsb
pop
fwait
roll
fadds
fsubp
into
pop
xor
add
in
inc
mov
ja
xor
aaa
and
sub
mov
js
mov
insb
arpl
mov
and
and
push
add
movb
cld
fistl
add
cmp
add
mov
mov
adc
push
ss
dec
lea
add
sub
sti
inc
sahf
gs
jae
je
pop
loopne
les
mov
popa
loopne
add
es
fnstsw
mov
add
clts
add
data16
popf
mov
cmp
in
cmp
aam
mov
add
and
add
xchg
aaa
mov
jl
add
and
cld
lret
mov
push
test
adc
das
testl
adc
jns
stos
xchg
cmc
mov
loopne
inc
movb
int3
jmp
sarl
in
or
inc
add
add
stos
add
dec
mov
loope
out
icebp
nop
shll
xchg
jge
add
xchg
push
xorl
inc
fnstenv
add
xchg
mov
nop
testl
arpl
clc
xor
out
dec
lock
add
lock
movsb
rolb
add
cmpsl
and
xchg
and
ljmp
stos
int
sub
stos
pop
call
and
fnstenv
or
xor
iret
cmp
mov
inc
aad
cwtl
repnz
fdivp
popf
imul
cmp
out
add
mov
cltd
and
pop
xchg
outsb
les
sarl
into
lea
cli
lret
sbb
scas
into
xor
shlb
pusha
add
pop
dec
adc
add
adc
jmp
out
mov
mov
out
dec
addb
rcrl
addb
or
add
cmpsl
dec
jb
in
pop
bound
movb
cmp
add
add
iret
mov
cmpsl
outsl
movb
ret
std
lret
inc
cmpsb
imull
inc
add
add
or
cmp
add
rolb
push
pop
push
dec
stc
bts
psraw
add
stos
xlat
xchg
les
mov
scas
lea
fidivl
add
jno
shll
or
push
sti
push
mov
add
insl
mov
insl
mov
in
dec
enter
jo
in
jmp
divb
dec
add
mov
outsb
sub
mov
jecxz
lcall
enter
adc
mov
adc
mov
xchg
mov
and
movb
pushf
mov
ss
lret
sbb
add
and
adc
add
add
imul
mov
insb
icebp
mov
insb
add
jbe
mov
ljmp
jl
popa
jnp
mov
inc
fsubs
neg
int3
inc
add
jno
iret
fcompl
add
push
cmp
xor
sahf
fbstp
test
das
xchg
cmp
bound
add
mov
or
lret
add
icebp
lea
jg,pn
hlt
xchg
inc
add
aaa
enter
mov
mov
int
rolb
pop
aas
addb
or
bnd
jmp
les
pop
mov
cld
jns
push
inc
add
cwtl
ret
test
popa
or
sub
add
add
lods
movb
inc
jmp
insl
jb
movsb
outsl
and
hlt
xchg
push
test
mov
mov
add
add
dec
clc
iret
sti
inc
sub
add
xor
lret
scas
cs
push
add
daa
xorl
jl
add
adc
in
roll
mov
xor
mov
push
into
setg
repz
push
and
imul
jae
add
cmc
int
xchg
mov
loope
out
mov
js
xor
iret
lahf
ljmp
int
and
jae
add
pop
lret
je
push
add
cmc
xor
addb
mov
jno
cmp
imul
add
jp
mov
scas
mov
mov
leave
mov
fadd
add
stos
in
xor
fdivrs
dec
loop
shll
add
mov
into
push
test
rcrl
cmp
int
sbb
xor
sub
add
push
or
add
jo
add
inc
loop
mov
add
ffreep
sahf
xchg
int
outsl
dec
ret
mov
xchg
mov
movnti
xchg
cltd
testl
push
mov
icebp
mov
dec
js
mov
jge
es
test
add
lds
mov
sbb
dec
shlb
stc
mov
insl
inc
or
les
insb
bound
fisttpll
add
mov
mov
adc
test
and
call
in
add
push
pop
leave
loop
sbb
and
into
test
xchg
test
mov
imul
add
mov
cltd
js
int3
icebp
mov
add
add
rorl
jae
adc
les
ficoms
add
int
std
stos
ret
xor
sti
rclb
clc
mov
push
add
xor
jle
push
add
lods
pushf
out
add
xor
and
inc
add
jmp
pop
lods
and
add
mov
sbb
cmp
and
sub
cli
push
mov
fsubrp
xor
rclb
outsl
imul
mov
cmpsl
jge
ds
in
add
xchg
cmp
lret
push
xchg
loopne
ljmp
inc
add
and
scas
push
or
jns
add
or
add
inc
arpl
rolb
into
roll
sub
les
testb
jp
jbe
push
repnz
push
aas
addb
xchg
je
add
add
ljmp
stc
push
push
rorl
adcl
jge
add
push
mov
push
jg
int
dec
mull
push
arpl
dec
icebp
or
fnsave
cmpsl
shl
movb
fisttpll
pop
repnz
add
cmc
fnsave
out
mov
push
mov
sti
mov
pop
adc
sbb
leave
sub
shrl
in
or
push
sub
mov
dec
xor
jmp
add
pop
std
dec
and
and
sub
inc
xor
xchg
and
aaa
pop
lock
aas
mov
loopne
sbb
sub
inc
add
push
sarb
lds
shlb
mov
add
inc
add
roll
test
arpl
inc
test
scas
mov
or
add
jno
pop
xchg
es
movsl
pop
fwait
mov
xchg
or
fldcw
jne
lock
and
xor
in
not
jecxz
subl
xor
add
repz
xor
in
ror
xor
pop
subl
mov
add
sbb
andl
mov
adc
dec
xchg
shl
xchg
xor
mov
push
mov
jmp
push
pusha
add
call
xchg
add
popa
shll
jle
mov
add
inc
adc
and
mov
mov
call
jo
xchg
cmc
add
adc
adc
pop
pop
sahf
ljmp
es
or
hlt
iret
fidivrs
test
pop
int3
movsb
adc
ja
rcll
inc
loopne
lcall
mov
jge
mov
repz
loopne
xchg
mov
shll
imul
cwtl
test
add
inc
in
xchg
fildl
add
push
adc
adc
xchg
mov
lcall
addb
jecxz
pop
cli
js
add
push
jl
lods
iret
push
movsb
out
in
pop
push
es
aam
and
stc
or
mov
mov
out
cmpsl
adc
mov
lret
ljmp
lret
flds
sbb
xor
add
das
lea
pop
pop
mov
daa
cmp
push
inc
call
daa
jmp
fwait
xor
push
pop
in
popl
add
sub
lods
addb
inc
add
jge
iret
sub
xchg
mov
sbb
push
pop
mov
aas
push
lods
dec
dec
sub
add
in
mov
sbb
popa
je
mov
cmc
repnz
mov
mov
mov
sub
repnz
add
pop
jge
sarb
cmpl
add
das
dec
jle
inc
add
push
dec
cmp
add
mov
add
arpl
cmp
lret
adc
xor
jns
enter
repz
in
inc
dec
pop
xchg
ds
insl
mov
pop
and
lcall
fldt
cmp
xor
add
cwtl
lds
out
mov
push
xor
iret
mov
addb
mov
pop
mov
mov
nop
push
insl
sti
scas
or
push
mov
addb
dec
lods
and
add
cltd
push
or
sbb
add
in
sti
das
mov
sub
jmp
insl
repz
xlat
ljmp
out
dec
xor
push
mov
addb
add
addb
movsl
fcmovnu
adc
push
mov
in
popa
sub
stos
or
shll
mov
ja
add
mov
cli
add
mov
cwtl
pop
sbb
jecxz
mov
adc
pop
lret
jns
ljmp
in
ljmp
sbb
push
mov
add
pushf
push
add
add
dec
pop
xor
imul
xor
outsl
ds
jle
or
je
jnp
mov
mov
mov
add
cmp
in
mov
leave
out
scas
pop
addb
clc
ss
mov
rcll
add
cmp
insb
jo
imul
nop
and
adc
cmp
mov
out
cltd
sbb
es
xchg
inc
add
popf
ficomps
cmp
jnp
fs
shl
testb
pop
sub
fistps
sub
sahf
jns
adc
cmc
pop
or
sub
xor
pop
xchg
push
dec
push
mov
loop
pop
jl
jo
jp
loopne
add
add
movb
hlt
cli
pop
push
insl
jne
jae
shrb
sub
sysexit
pop
jmp
bound
repnz
push
jecxz
xor
and
mov
enter
sub
jmp
jmp
add
cmp
adc
add
and
pop
les
int3
xchg
sbb
arpl
test
cld
repnz
lds
out
add
les
push
add
ret
bound
or
roll
mov
jae
icebp
mov
cwtl
data16
mov
lds
ds
pop
mov
ficomps
std
inc
sbb
fdivrl
push
mov
std
mov
mov
gs
dec
mov
sub
mov
shrl
pop
test
jo
jl
enter
adc
jbe
repz
add
dec
xor
jecxz
dec
addb
pop
aas
sub
iret
je
xchg
data16
adc
jl
inc
add
roll
push
out
add
xlat
jp
addb
insb
pop
mov
test
rolb
mov
xlat
movsb
pop
dec
push
and
jmp
push
icebp
mov
xor
loope
mov
and
mov
xchg
mov
jb
data16
prefetch
test
test
test
daa
mov
xchg
mov
dec
xchg
iret
lahf
js
and
push
add
adc
xchg
adc
out
fsubs
xchg
fistps
and
xchg
pop
cmpsl
adc
into
xrelease
mov
push
out
jle
insb
xchg
and
cmp
clc
insl
cltd
adc
pop
insb
inc
imul
adc
xchg
out
js
xchg
adc
or
or
pushf
vorpd
clc
fmuls
loopne
aaa
pop
push
mov
sub
sbb
jmp
pop
fs
scas
mov
mov
adc
cwtl
cmp
aam
pop
cltd
lea
insl
aaa
inc
add
scas
negb
lcall
lods
push
and
jns
imul
push
add
or
xchg
jns
aam
add
ret
inc
push
movsb
out
mov
add
sbb
jo
add
lret
sub
cmpsl
inc
mov
enter
cmpsl
jne
subl
add
pop
movb
fcomip
data16
cmpsl
cmpsl
or
cltd
movsl
inc
add
movsb
sub
mov
xchg
jnp
stos
in
insl
jne
xor
movb
push
and
notl
push
mov
pop
out
dec
sbb
or
lcall
lods
or
es
add
cmc
cmpsl
pusha
add
sbb
mov
out
xchg
movsb
test
mov
fdivrl
or
into
insl
push
mov
or
lret
punpckhbw
add
sbb
add
loope
sub
dec
stc
mov
lahf
pop
mov
or
stos
rorl
and
mov
inc
add
fs
jb
cmp
add
and
add
mov
stos
les
inc
push
std
outsb
xor
je
add
dec
push
gs
adc
cmp
sub
scas
in
or
mov
mov
clc
mov
push
push
add
ss
mov
pop
xchg
inc
in
adc
mov
inc
add
outsb
xchg
and
xchg
dec
fdivrl
adc
aas
jnp
fimuls
add
adc
add
fsub
push
out
out
xor
enter
dec
adc
les
mov
add
inc
pop
pop
aas
mov
jecxz
out
nop
xor
push
les
dec
dec
pop
sub
and
fisubrs
xchg
rcr
lcall
push
in
push
add
adc
lahf
divl
out
loope
add
adc
mov
loopne
mov
bound
sarb
lods
test
and
push
in
sbb
inc
add
ljmp
cmp
movsb
xor
mov
mov
xlat
andl
daa
mov
cmpsb
ret
add
pop
js
imul
lea
mov
add
pop
addb
in
int3
mov
cltd
jg
adc
fs
ret
repnz
fadds
jne
rcll
xor
xchg
and
ljmp
bound
cmp
cmc
frstor
sbb
push
insl
pop
int3
ret
repnz
mov
rolb
addb
xor
sbb
aad
add
js
add
lds
mov
sub
loopne
or
and
sub
adc
push
fiaddl
mov
and
sub
add
inc
inc
add
push
add
dec
or
out
stos
adc
ficoml
sbb
jge
iret
and
mov
cwtl
fisttps
clc
push
add
xchg
push
add
push
sbb
xor
mov
jmp
jle
mov
es
insb
test
movsb
ljmpw
fnstcw
roll
icebp
sub
lret
add
xchg
add
mov
jge
sbb
out
inc
enter
adc
and
cmc
dec
lcall
sub
ja
js
pop
pushf
dec
in
mov
mov
sbb
xor
inc
dec
cs
fiaddl
add
sbb
mov
mov
adc
aas
cmpsb
dec
add
and
xlat
les
outsb
sbb
enter
aaa
icebp
out
jbe
add
in
jge
ror
sub
pusha
add
cld
cmp
add
aad
sarl
imul
cmp
lret
add
dec
cmp
fcompl
imul
add
mov
xor
das
add
sub
jp
push
add
lahf
dec
mov
into
xor
mov
add
lret
dec
lret
push
enter
add
fmuls
cmp
add
or
pop
addr16
dec
and
cs
mov
adc
mov
das
int3
xor
lret
push
ret
loope
mov
fwait
add
das
les
popf
and
ss
or
and
xor
cltd
popa
movb
sbb
xor
mov
push
into
jns
add
je
sahf
jo
fs
jns
adc
mov
movsl
movsb
push
mov
addb
in
fstpl
add
inc
test
inc
add
adc
inc
daa
jnp
ja
mov
sub
out
sub
aad
or
in
mov
cltd
idiv
push
out
loope
xorl
mov
add
jns
rolb
mov
xor
cmp
mov
add
adc
xchg
xchg
lods
sti
jecxz
jno
arpl
mov
call
gs
add
ds
fsubrl
daa
lcall
lahf
fs
pop
rolb
cmpsl
mov
inc
sbb
and
push
dec
out
sbb
push
lods
sub
pop
movsl
pop
mov
push
cmpsl
jns
addb
push
bound
js
in
jno
jmp
addr16
xchg
jno
ret
mov
inc
jnp
ljmp
jbe
xchg
mov
xchg
sub
mov
lds
adc
jo
cmp
imul
jp
jbe
add
xor
adc
inc
add
and
cltd
aaa
cmpsl
mov
add
cmpsb
mov
sti
imul
add
fcompl
add
dec
inc
add
cmc
outsl
test
movb
mov
rcrl
mov
call
lds
jns
popf
das
mov
cmp
mov
sahf
ds
