add
in
in
in
in
call
loop
test
loop
push
call
loop
mul
loop
or
loop
inc
in
in
call
loop
inc
jmp
loop
jb
loop
in
jecxz
in
in
in
in
in
loop
in
out
in
out
in
jecxz
in
jecxz
in
loop
in
in
in
jecxz
in
out
in
jmp
loop
cmp
loop
loop
pop
loope
in
out
in
in
in
jecxz
in
loope
in
loope
in
in
in
in
in
out
in
out
in
out
in
jecxz
in
loop
in
in
in
call
loop
movsl
jecxz
in
loop
in
in
in
loope
in
in
in
loop
in
in
in
in
in
call
loop
jp
loop
leave
out
in
jecxz
in
out
in
out
in
jecxz
in
loope
in
call
loop
or
loop
xchg
call
loop
aad
loop
insl
call
loop
int
loop
jl
loop
sub
loop
jecxz
loop
mov
call
loop
push
jecxz
in
loop
in
out
in
jecxz
in
loop
in
in
in
jecxz
in
loop
in
in
in
call
loop
and
in
in
in
out
in
call
loop
push
loop
in
jecxz
in
call
loop
test
loop
pushf
out
in
loop
in
jecxz
in
jmp
loop
sub
loop
jecxz
loop
and
in
in
in
out
in
out
in
jmp
loop
sub
loop
pop
out
in
in
in
out
in
loope
in
out
in
out
in
in
in
out
in
out
in
out
in
jecxz
in
loope
in
call
loop
out
in
in
in
jecxz
in
loope
in
out
in
loop
in
call
loop
movsb
loop
in
call
loop
mov
loop
mov
loop
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
out
in
out
in
out
in
jmp
loop
dec
jmp
loop
add
loop
in
in
in
jmp
loop
jnp
loop
jp
loop
xchg
call
loop
push
in
in
loope
in
in
in
out
in
jmp
loop
insb
call
loop
aas
jecxz
in
in
in
out
in
in
in
loope
in
loop
in
in
in
out
in
out
in
call
loop
adc
out
in
jmp
loop
push
in
in
in
in
jmp
loop
push
jmp
loop
test
loop
xchg
in
in
in
in
jecxz
in
out
in
loope
in
out
in
in
in
jmp
loop
cwtl
jecxz
in
jecxz
in
loop
in
loop
in
jecxz
in
out
in
loope
in
in
in
out
in
loope
in
loope
in
in
in
out
in
call
loop
push
in
in
in
in
loop
in
in
in
in
in
loop
in
loop
in
jecxz
in
jecxz
in
call
loop
push
in
in
jecxz
in
call
loop
jno
loop
jg
loop
jno
loop
mov
in
in
out
in
jecxz
in
jecxz
in
call
loop
mov
loop
loopne
loop
xchg
in
in
loop
in
loop
in
jecxz
in
loop
in
in
in
loop
in
out
in
jecxz
in
jecxz
in
jmp
loop
out
in
in
call
loop
aaa
jmp
loop
cld
loop
in
out
in
loope
in
out
in
jecxz
in
loop
in
jecxz
in
call
loop
stos
loope
in
loope
in
in
in
call
loop
pop
jmp
loop
movsl
out
in
jecxz
in
in
in
out
in
in
in
in
in
call
loop
lods
loope
in
call
loop
cmp
loop
pop
in
in
in
in
jecxz
in
out
in
call
loop
fwait
out
in
jecxz
in
out
in
out
in
in
in
jecxz
in
in
in
jecxz
in
jecxz
in
in
in
in
in
out
in
jmp
loop
cmp
loop
pop
out
in
jmp
loop
pop
in
in
out
in
in
in
out
in
out
in
out
in
in
in
loop
in
loop
in
jecxz
in
in
in
out
in
loope
in
loope
in
jecxz
in
jecxz
in
in
in
in
in
loop
in
out
in
out
in
loop
in
in
in
jecxz
in
out
in
in
in
out
in
loop
in
in
in
loope
in
loop
in
loop
in
call
loop
inc
call
loop
push
in
in
call
loop
or
loop
pop
jmp
loop
loop
push
out
in
call
loop
outsl
call
loop
stos
call
loop
cmp
loop
mov
call
loop
repz
in
out
in
in
in
out
in
in
in
jecxz
in
jecxz
in
out
in
out
in
in
in
in
in
loope
in
jecxz
in
jecxz
in
out
in
in
in
loop
in
out
in
jmp
loop
imul
in
call
loop
call
out
in
jmp
loop
push
out
in
jmp
loop
adc
out
in
in
in
out
in
in
in
out
in
loop
in
out
in
in
in
jecxz
in
out
in
call
loop
lods
loop
in
loope
in
in
in
call
loop
push
in
in
in
in
in
in
in
in
out
in
in
in
jmp
loop
jmp
loop
adc
loop
mov
loop
in
jecxz
in
jmp
loop
std
out
in
in
in
out
in
loop
in
loop
in
in
in
out
in
jecxz
in
loope
in
in
in
out
in
out
in
jecxz
in
out
in
loope
in
jecxz
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
jecxz
in
loope
in
call
loop
and
loop
cmc
jecxz
in
out
in
out
in
in
in
loope
in
call
loop
icebp
jecxz
in
loop
in
loope
in
jecxz
in
out
in
out
in
loop
in
out
in
in
in
in
in
loop
in
in
in
jecxz
in
out
in
call
loop
jmp
loop
out
out
in
jmp
loop
hlt
jecxz
in
call
loop
sbb
loop
popa
loope
in
in
in
jecxz
in
in
in
in
in
jecxz
in
in
in
in
in
call
loop
pop
in
in
loop
in
jecxz
in
loop
in
in
in
in
in
out
in
call
loop
sub
loop
int3
loop
in
call
loop
pop
out
in
out
in
out
in
loope
in
in
in
call
loop
out
in
call
loop
add
loop
in
out
in
in
in
call
loop
and
loop
dec
in
in
loop
in
jecxz
in
out
in
out
in
out
in
in
in
call
loop
and
loope
in
call
loop
lods
loope
in
out
in
out
in
in
in
in
in
out
in
out
in
out
in
jecxz
in
out
in
loop
in
jecxz
in
in
in
out
in
loope
in
call
loop
in
loop
in
out
in
loope
in
in
in
in
in
out
in
out
in
in
in
in
in
call
loop
sbb
loop
pop
loope
in
in
in
in
in
call
loop
shl
loop
out
loop
sbb
loop
mov
out
in
jecxz
in
out
in
call
loop
add
loop
push
out
in
in
in
out
in
in
in
call
loop
dec
in
in
loop
in
out
in
jecxz
in
call
loop
movsl
jecxz
in
in
in
loope
in
call
loop
loope
loop
repz
in
jecxz
in
loop
in
loop
in
in
in
out
in
in
in
in
in
in
in
out
in
loope
in
out
in
in
in
call
loop
clc
loop
in
loop
in
jecxz
in
loop
in
in
in
call
loop
jl
loop
sub
loop
lods
out
in
loope
in
out
in
in
in
jecxz
in
call
loop
or
loop
shl
in
call
loop
fs
in
call
loop
loop
mov
loop
or
loop
jle
loop
iret
loope
in
loop
in
loop
in
loop
in
out
in
in
in
in
in
out
in
loope
in
in
in
out
in
loope
in
in
in
jmp
loop
scas
in
in
call
loop
or
loop
loop
loop
xlat
jecxz
in
loop
in
loop
in
out
in
in
in
loop
in
jmp
loop
cmpsb
out
in
in
in
out
in
out
in
jecxz
in
out
in
jecxz
in
loope
in
in
in
out
in
out
in
out
in
loope
in
out
in
in
in
in
in
in
in
loop
in
jecxz
in
loope
in
call
loop
sti
jecxz
in
in
in
call
loop
jmp
loop
dec
out
in
out
in
in
in
out
in
call
loop
cld
call
loop
test
loop
and
in
loop
in
call
loop
das
jecxz
in
in
in
out
in
jecxz
in
in
in
in
in
out
in
call
loop
jg
loop
or
loop
cmp
loop
pop
out
in
call
loop
or
loop
and
out
in
out
in
in
in
loop
in
in
in
in
in
loop
in
jmp
loop
sbb
loop
mov
loope
in
loop
in
jmp
loop
inc
in
in
jecxz
in
in
in
jecxz
in
out
in
in
in
loope
in
call
loop
add
loop
ja
loop
sbb
loop
push
in
in
loop
in
in
in
call
loop
mov
call
loop
pop
in
in
loope
in
out
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
in
in
in
in
in
in
out
in
in
in
loop
in
loope
in
jecxz
in
in
in
out
in
in
in
in
in
jecxz
in
out
in
loope
in
jmp
loop
jmp
jecxz
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
in
in
in
in
loope
in
out
in
jmp
loop
mov
in
in
out
in
loope
in
loope
in
jmp
loop
out
loop
shl
in
in
in
jecxz
in
call
loop
mov
loop
shl
loop
mov
loop
je
loop
cmp
loop
sbb
loop
cwtl
call
loop
jno
loop
inc
in
in
jecxz
in
in
in
jecxz
in
in
in
in
in
out
in
in
in
out
in
in
in
jecxz
in
loop
in
out
in
jmp
loop
add
loop
leave
out
in
out
in
out
in
out
in
call
loop
stc
in
in
in
in
call
loop
jge
loop
jns
loop
push
loop
in
out
in
in
in
out
in
loop
in
loop
in
out
in
jmp
loop
insb
in
in
in
in
out
in
in
in
in
in
out
in
out
in
jmp
loop
sbb
loop
mov
call
loop
test
loop
push
in
in
out
in
in
in
out
in
out
in
loop
in
jecxz
in
jmp
loop
mov
jecxz
in
loope
in
loope
in
call
loop
stc
out
in
jecxz
in
in
in
loop
in
out
in
out
in
call
loop
xchg
loop
in
loop
in
in
in
call
loop
mov
loop
mov
loop
mov
loop
adc
loop
imul
loop
adc
loop
inc
jmp
loop
sti
in
in
in
in
out
in
jecxz
in
loope
in
out
in
call
loop
cmpsb
loope
in
out
in
in
in
in
in
in
in
out
in
loope
in
in
in
in
in
out
in
in
in
call
loop
xor
loop
fucom
loop
in
in
call
loop
sbb
loop
cltd
in
in
in
in
loop
in
call
loop
jns
loop
or
loop
imul
in
in
in
in
in
call
loop
mov
loop
sti
out
in
loop
in
out
in
in
in
in
in
in
in
jecxz
in
out
in
jecxz
in
out
in
in
in
loop
in
call
loop
cs
in
out
in
loope
in
call
loop
mov
call
loop
ds
in
out
in
loop
in
call
loop
add
loop
sbb
loop
cmpsb
in
in
out
in
loop
in
in
in
out
in
call
loop
adc
loop
mov
loop
lods
out
in
call
loop
mov
in
in
jecxz
in
in
in
in
in
loop
in
call
loop
js
loop
mov
loop
in
out
in
in
in
in
in
in
in
out
in
out
in
in
in
out
in
in
in
loop
in
out
in
in
in
loope
in
jecxz
in
loop
in
in
in
loop
in
in
in
loop
in
call
loop
cmp
out
in
in
in
call
loop
xchg
jecxz
in
out
in
jmp
loop
jmp
call
loop
push
call
loop
mov
jmp
loop
int3
call
loop
mov
out
in
in
in
jecxz
in
in
in
loop
in
in
in
out
in
out
in
loop
in
in
in
call
loop
js
loop
and
loop
mov
call
loop
cmp
loop
push
in
in
loope
in
in
in
in
in
out
in
jecxz
in
out
in
out
in
out
in
in
in
loop
in
in
in
in
in
call
loop
sub
in
in
in
out
in
call
loop
test
in
in
loop
in
loop
in
out
in
loope
in
loop
in
call
loop
in
jecxz
in
loope
in
jecxz
in
in
in
loop
in
loop
in
out
in
out
in
call
loop
sub
jecxz
in
loope
in
in
in
loop
in
in
in
jecxz
in
out
in
out
in
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
loop
in
call
loop
test
loop
stc
out
in
loop
in
out
in
out
in
out
in
loop
in
out
in
loope
in
loop
in
out
in
out
in
jecxz
in
loop
in
in
in
in
in
out
in
loop
in
out
in
out
in
jecxz
in
call
loop
fsub
loop
pushf
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
in
in
loop
in
out
in
jmp
loop
mov
loop
and
in
in
in
jecxz
in
jecxz
in
out
in
in
in
jecxz
in
call
loop
into
loope
in
jecxz
in
jecxz
in
in
in
call
loop
mov
loop
pmulhw
in
in
in
in
in
call
loop
in
in
jecxz
in
in
in
out
in
out
in
out
in
out
in
call
loop
sub
loop
popa
loop
in
in
in
loop
in
in
in
jmp
loop
test
loop
pushf
out
in
jecxz
in
out
in
call
loop
out
loop
data16
in
call
loop
or
loop
xchg
loope
in
in
in
out
in
jecxz
in
out
in
out
in
out
in
out
in
in
in
in
in
in
in
in
in
in
in
loope
in
loop
in
call
loop
pop
call
loop
mov
call
loop
add
in
in
in
in
jmp
loop
jl
loop
pop
out
in
call
loop
out
in
in
jecxz
in
loop
in
out
in
loop
in
loope
in
out
in
jecxz
in
in
in
in
in
loop
in
out
in
call
loop
push
jecxz
in
in
in
jecxz
in
jecxz
in
jecxz
in
in
in
in
in
call
loop
lret
in
out
in
jecxz
in
loop
in
jecxz
in
loope
in
jecxz
in
loope
in
in
in
out
in
loope
in
loop
in
jmp
loop
adc
jmp
loop
and
loop
pop
call
loop
mov
loop
in
jecxz
in
call
loop
shl
in
call
loop
add
out
in
call
loop
dec
in
in
jecxz
in
out
in
out
in
call
loop
scas
loop
in
out
in
out
in
call
loop
cmpsl
in
in
jecxz
in
in
in
loop
in
out
in
jecxz
in
call
loop
mov
out
in
in
in
loop
in
call
loop
dec
out
in
out
in
jecxz
in
in
in
loop
in
out
in
jecxz
in
in
in
in
in
call
loop
scas
out
in
call
loop
test
loop
cmp
loop
mul
loop
push
call
loop
adc
loop
ret
in
jecxz
in
call
loop
jp
loop
insb
out
in
in
in
out
in
out
in
out
in
out
in
jecxz
in
in
in
jecxz
in
jecxz
in
out
in
loop
in
loope
in
out
in
out
in
out
in
loope
in
in
in
in
in
loop
in
out
in
in
in
in
in
call
loop
inc
jecxz
in
loop
in
in
in
out
in
loope
in
in
in
in
in
jmp
loop
and
loop
in
in
in
loop
in
loop
in
in
in
loop
in
jmp
loop
aad
loop
sahf
loope
in
loop
in
in
in
out
in
call
loop
cltd
call
loop
pop
loope
in
in
in
in
in
in
in
in
in
loop
in
jmp
loop
push
loop
in
out
in
jecxz
in
in
in
out
in
loop
in
loop
in
out
in
in
in
loop
in
out
in
out
in
out
in
out
in
out
in
jecxz
in
in
in
in
in
in
in
loope
in
in
in
jecxz
in
out
in
call
loop
mov
loop
stos
out
in
loope
in
in
in
out
in
jmp
loop
add
loop
out
loop
inc
out
in
out
in
in
in
jecxz
in
loope
in
out
in
jecxz
in
call
loop
js
loop
cwtl
loope
in
call
loop
in
loop
ret
in
in
jecxz
in
call
loop
cli
loope
in
out
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
out
in
loop
in
call
loop
adc
loop
adc
loop
add
loop
sbb
loop
lock
in
out
in
call
loop
xchg
jecxz
in
out
in
jecxz
in
loop
in
out
in
in
in
in
in
out
in
loop
in
jecxz
in
in
in
call
loop
lcall
in
jmp
loop
cmp
loop
out
in
call
loop
sub
loop
and
in
jmp
loop
cmpsl
loope
in
out
in
call
loop
cmp
loop
in
loop
cltd
out
in
loop
in
in
in
out
in
out
in
loop
in
in
in
loop
in
in
in
loop
in
in
in
jecxz
in
jecxz
in
loop
in
out
in
out
in
out
in
out
in
out
in
jecxz
in
jmp
loop
out
jecxz
in
jecxz
in
fsubrl
mov
mov
shlb
add
mov
clc
push
mov
dec
pop
xchg
and
add
add
jne
pushf
jnp
aaa
mov
jecxz
daa
clc
and
add
pop
push
push
mov
js
clc
inc
add
pop
clc
xchg
scas
addr16
stos
mov
iret
sti
mov
gs
aam
call
fistpll
xbegin
mov
clc
loope
jl
clc
in
icebp
es
data16
sbb
add
scas
or
add
jne
ret
clc
sub
mov
jl
lcall
cmp
clc
sub
push
clc
cmp
ds
aad
loopne
pop
push
add
jne
sub
scas
jo
add
add
fs
push
je
jge
daa
clc
pop
dec
std
addr16
xchg
jecxz
sbb
gs
sub
add
add
add
add
testb
cmp
clc
clc
or
add
or
clc
fildl
add
add
mov
popa
add
jecxz
int
dec
das
sbb
addr16
sti
test
add
cmp
jno
add
add
aad
add
pop
or
push
aad
add
lret
out
mov
cmp
outsb
jo
add
sar
push
ss
test
lock
or
mov
push
add
add
add
add
add
popl
xor
add
pushf
bound
add
xor
add
ds
mov
ret
clc
push
clc
adc
add
pop
xor
add
clc
push
dec
inc
clc
cli
jg
clc
jo
add
cmp
test
push
jecxz
dec
pop
sahf
and
add
mov
add
adc
add
clc
fisubs
xchg
inc
add
rcll
es
lahf
outsl
cmpsb
clc
cmc
mov
jle
dec
cmp
clc
aas
xor
add
pop
add
add
scas
mov
sahf
mov
pop
xchg
test
adc
add
movsb
clc
stos
mov
clc
lods
mov
lods
push
add
add
clc
cmpsb
clc
call
imul
sub
mov
clc
push
dec
xchg
mov
push
jmp
dec
test
mov
jae
add
enter
inc
add
jae
add
add
pop
sahf
insl
fcoms
add
xor
add
ja
mov
filds
add
xor
add
repnz
add
insl
push
sub
add
add
push
add
dec
jb
add
push
sar
xor
clc
cmc
sar
dec
sbb
cmp
adc
sub
jle
rorb
shrb
popf
cmp
sbb
add
test
push
in
js
push
mov
test
xor
add
pop
cld
aam
xor
fstpl
add
fcmove
cld
imul
lret
rolb
add
inc
add
sub
fwait
push
or
mov
ss
test
mov
push
sub
out
pop
ljmp
push
inc
clc
ljmp
pop
sub
hlt
or
fsubr
cwtl
cmp
adc
add
xbegin
addr16
push
inc
clc
sub
or
lret
cmpsl
clc
inc
clc
xchg
aam
xor
add
sub
clc
scas
jo
add
add
mov
clc
push
add
data16
mov
clc
bound
add
clc
bound
add
clc
mov
je
add
test
mov
add
mov
dec
test
clc
aad
clc
loopne
mov
ljmp
add
lea
je
repz
jnp
sub
mov
add
sbb
add
daa
clc
movsl
clc
pop
push
jbe
clc
aas
mov
mov
mov
dec
mov
clc
xchg
jb
add
add
sub
push
out
or
jg
int
rorb
clc
jae
add
fsts
shlb
js
clc
mov
add
mov
mov
inc
clc
and
add
sbb
clc
mov
add
clc
xabort
clc
in
movsl
clc
mov
sbb
add
jp
movsl
clc
jne
add
mov
xchg
sub
test
mov
clc
sbb
pop
mov
clc
add
add
rolb
xchg
mov
jl
add
add
test
stos
movsb
clc
jne
or
add
mov
add
add
add
sub
mov
inc
clc
cmpsl
clc
pop
ja
or
inc
add
mov
add
out
out
dec
sbb
clc
jbe
popa
add
mov
clc
fistpl
cmp
incl
add
mov
sbb
bound
add
pop
daa
clc
or
vmovlps
add
out
hlt
sub
sub
add
daa
clc
data16
sub
clc
xabort
clc
dec
add
add
clc
into
shl
clc
inc
clc
sub
clc
fmul
mov
bound
add
imul
clc
jne
clc
fsubrs
mov
outsb
cmp
xchg
mov
es
negb
jmp
push
add
jle
out
rcrl
pop
or
add
pop
sbb
dec
push
in
fmulp
mov
mov
add
mov
clc
jo
add
enter
xchg
insl
mov
clc
cmp
add
xchg
xor
add
ja
lcall
sar
dec
mov
fistpl
xbegin
add
stos
xor
add
push
add
movsl
clc
mov
jno
add
add
cmpsb
clc
xchg
cli
lahf
in
fs
jno
add
add
inc
add
pop
pop
clc
sti
aad
sub
adc
add
jl,pn
cmp
clc
xchg
push
add
decl
clc
je
pop
sar
mov
in
jl
push
pop
mov
clc
mov
loop
adc
clc
dec
lock
pop
clc
sbb
add
add
adc
add
pop
data16
jmp
add
aas
cmp
out
xchg
sbb
xchg
and
add
clc
jge
clc
mov
cmp
clc
cmp
mov
movsb
clc
repnz
clc
sbb
push
add
cmc
pop
jle
adc
add
inc
clc
dec
aas
push
add
int
test
adc
add
adc
add
add
test
jp
clc
xor
cmp
ret
clc
sar
add
xchg
adc
add
push
fisubs
add
jecxz
hlt
mov
sar
add
je
xor
movsb
clc
xchg
add
add
add
out
in
dec
cmp
clc
popf
push
add
addr16
add
add
add
stos
enter
xchg
sub
cmp
imul
clc
rorl
add
ret
clc
clc
imul
lods
add
add
add
sub
je
aad
jle
clc
push
add
pop
imulb
cmp
add
and
outsb
jo
add
and
add
xchg
aad
mov
add
add
and
add
add
inc
clc
mov
fdivrs
in
or
pushf
pop
out
mov
clc
call
clc
lret
dec
movsl
clc
imul
add
sub
inc
clc
jb
add
pop
cltd
scas
and
lret
add
popa
add
arpl
add
and
add
add
mov
dec
xchg
xbegin
clc
adc
add
push
add
repz
adc
add
clc
push
pop
clc
jl
iret
pop
clc
leave
xchg
sahf
daa
clc
cmpsb
clc
jmp
mov
and
scas
pop
clc
push
add
jmp
mov
mov
clc
adc
mov
add
leave
mov
sbb
test
es
in
add
add
clc
gs
cli
repz
and
add
nop
jo
add
imull
xchg
idiv
push
fistpll
in
data16
inc
clc
sub
pop
xor
add
js
clc
lods
adc
add
insl
dec
test
jge
outsb
clc
cmp
clc
jns
rclb
add
xchg
pop
adc
add
add
jge
or
out
mov
add
cmp
clc
mov
mov
loope
xor
push
mov
jecxz
mov
add
pop
cwtl
loopne
aaa
cmp
add
cmp
clc
adc
dec
sbb
jl
ss
imul
dec
fdivs
add
dec
add
mov
add
pop
cs
mov
add
pushf
mov
sub
add
add
sbb
add
mov
clc
or
lret
dec
dec
dec
enter
out
mov
add
ds
add
add
and
add
imul
dec
in
add
add
add
add
clc
es
jmp
push
add
cmp
push
mov
mulb
jne
clc
mov
cmp
add
cmp
clc
aad
jge
clc
jg
sbb
shlb
add
and
add
clc
cltd
pop
in
jp
cmp
clc
clc
fbld
add
clc
mov
mov
add
xchg
and
add
mov
push
xchg
outsl
pop
shll
pop
xchg
cmpsb
clc
cmpsl
clc
mov
add
cmp
mov
add
pop
clc
mov
clc
dec
lahf
push
add
outsl
mov
clc
inc
add
cmp
and
add
add
adc
mov
fmull
push
add
nop
xchg
or
fs
test
adc
add
add
es
or
xchg
sbb
add
push
in
xor
add
add
clc
je
mov
add
xor
clc
and
add
clc
outsb
cmp
dec
xchg
push
add
sub
hlt
mov
push
xchg
lods
cmp
jns
or
movsl
clc
ss
pop
add
add
clc
dec
in
push
pushf
push
jle
test
xchg
push
add
aas
addr16
lock
or
add
add
stos
inc
add
sbb
clc
repz
shrd
popl
add
lret
inc
clc
xchg
jmp
add
lods
push
jo
add
out
fsubl
xor
mov
fwait
and
add
mov
xor
add
clc
repnz
cs
add
out
jo
add
jg
inc
add
jg
icebp
sar
jmp
add
dec
xchg
clc
popf
adc
add
add
add
mov
add
adc
in
in
push
adc
add
sarl
sub
mov
add
ds
push
push
insl
sbb
xchg
pushf
mov
cmp
inc
add
jg
inc
add
lock
repnz
ss
add
xor
xchg
int
cmp
aas
xor
add
shrl
aas
cmc
pop
clc
cwtl
xchg
out
fisubrs
sub
xor
add
hlt
pop
clc
popf
cmpsl
clc
addr16
stc
sub
negl
add
cmp
in
xlat
out
pop
lret
mov
add
add
mov
clc
repz
lahf
adc
add
add
add
add
outsl
fcomi
and
push
add
push
add
std
jmp
rclb
and
clc
cmp
cmp
inc
add
and
add
add
add
add
in
ja
add
jp
lahf
mov
fisubs
clc
dec
test
lods
aaa
dec
push
adc
add
clc
add
add
inc
add
inc
add
aad
cmc
lea
add
int
insl
adc
dec
xchg
mov
clc
cmpsl
clc
ds
clc
and
cmp
js
xchg
hlt
xor
add
fs
std
fnstcw
mov
dec
mov
add
jp
testb
in
sub
stos
fbstp
add
dec
fs
xchg
or
add
mov
add
mov
clc
repnz
add
xor
xor
in
push
clc
scas
aam
lods
push
mov
es
jle
jbe
add
mov
add
add
cmp
in
bnd
test
addr16
sub
cmpsb
clc
mov
clc
ror
push
add
pop
gs
xchg
mov
rorb
clc
sub
outsb
aas
adc
add
cmp
push
mov
clc
call
clc
push
add
cmc
ss
push
sbb
mov
and
add
jbe
in
push
mov
ljmp
ja
sahf
pushf
out
sbb
or
add
lahf
or
add
add
mov
jnp
stos
imul
std
hlt
in
cltd
cmp
push
mov
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
mov
push
lret
call
mov
clc
clc
repz
add
mov
cli
cmpsb
clc
mov
call
add
test
outsb
cwtl
data16
push
xchg
repz
clc
aam
lahf
sbb
clc
adc
lods
test
cmp
add
negb
insb
mov
call
imul
cmp
cmp
clc
jnp
adc
add
push
clc
fidivs
clc
lcall
pop
lcall
add
nop
dec
js
add
sbb
out
fistpl
clc
test
pop
outsl
pusha
add
mov
cmp
mov
add
movsb
clc
popa
add
out
lcall
cmp
cmp
dec
jae
add
sbb
add
pop
cmpsl
clc
inc
clc
pushf
inc
add
mov
aad
push
add
es
pop
adc
je
clc
outsb
add
mov
cmp
add
sahf
xor
add
jle
mov
mov
add
clc
daa
clc
fldt
je
bound
add
movsb
clc
mov
clc
loop
mov
clc
xor
xabort
in
pop
cmpsb
clc
push
sub
add
cltd
loop
sar
push
jo
add
lret
cmp
sbb
jb
add
popa
add
or
adc
add
sub
cmpsl
clc
sub
dec
jb
add
add
dec
push
pop
aam
dec
inc
add
mov
inc
clc
es
and
push
mov
test
int
push
xbegin
adc
add
add
test
cmp
xor
add
enter
fdiv
or
mov
push
mov
add
adc
mov
add
jle
add
inc
add
and
add
jns
clc
inc
clc
ret
clc
inc
clc
lahf
sub
add
jo
add
int3
sahf
insb
mov
out
and
add
add
stos
stos
test
push
add
xor
clc
aaa
enter
clc
cmp
or
popa
add
push
add
mov
add
xor
or
pop
clc
cli
adc
add
adc
and
ljmp
clc
cwtl
in
cmp
clc
shrb
adc
cmpsl
clc
xchg
scas
adc
add
mulb
add
pop
adc
sbb
clc
jle
ffreep
clc
cli
outsb
imul
clc
aad
sbb
push
add
outsl
gs
int
push
fildl
pop
popf
adc
add
clc
or
and
add
add
adc
clc
cmc
jg
jnp
clc
push
clc
xor
adc
clc
and
clc
cld
inc
add
pop
cltd
mov
pushf
inc
clc
aad
ds
add
adc
divb
push
inc
add
cmp
clc
sbb
scas
movsb
clc
cltd
js
add
mov
sbb
push
loopne
push
outsl
sahf
jb
add
fs
mov
roll
add
add
push
add
cld
leave
mov
adc
add
clc
jg
lret
add
inc
clc
mov
mov
jae
add
scas
rcll
pop
aam
xor
add
jmp
dec
mov
clc
xbegin
iret
sub
clc
mov
cld
mov
or
or
mov
clc
adc
stos
xchg
cld
mov
into
xlat
mov
cmp
cmp
and
js
and
add
add
push
clc
sar
mov
pop
jns
add
mov
cmp
sahf
pop
clc
jae
add
fwait
jo
add
add
xchg
adc
add
cmpsb
clc
in
sbb
clc
mov
lcall
das
xlat
jno
add
xchg
cld
mov
add
testl
jo
add
cmp
cli
cmp
cmp
clc
mov
xor
add
clc
bound
add
add
arpl
add
xor
add
lea
add
mov
stos
xchg
xor
add
add
in
imul
mov
test
sar
pop
cmp
clc
inc
add
ret
clc
mov
add
popa
add
ss
fnsave
clc
mov
flds
clc
insb
mov
clc
ss
xor
out
loop
hlt
push
add
mov
dec
xor
add
add
jmp
add
std
mov
shll
add
add
xchg
sbb
mov
pop
adc
add
lods
testb
mov
test
outsb
in
add
add
dec
dec
jecxz
xor
add
sub
adc
add
mov
fwait
push
add
push
add
jnp
clc
mov
add
or
add
test
pop
negl
add
popa
add
sub
push
add
cmp
repz
mov
test
sbb
sbb
packuswb
adc
clc
icebp
int
mov
gs
push
jnp
add
js
push
mov
add
ret
clc
or
jns
data16
insl
icebp
into
fldt
inc
clc
push
dec
jo
add
add
and
add
ret
faddl
clc
jp
fs
push
ret
add
mov
clc
loop
and
scas
adc
add
add
and
add
add
ret
push
add
jp
js
jne
mov
and
add
mov
add
add
mov
in
inc
add
clc
fs
adc
add
aas
cltd
cmp
sbb
clc
test
cmp
push
add
jg
inc
add
sbb
xlat
sbb
add
xor
add
pop
in
cmpsb
clc
push
data16
ret
cs
fs
xchg
lahf
mov
jecxz
mov
dec
xchg
dec
mov
pop
mov
adc
add
add
sbb
jl
mov
add
xor
add
add
dec
insb
pop
clc
cmp
pop
movsl
clc
pop
clc
add
add
mov
clc
mov
add
push
push
jo
add
cmp
fs
sub
add
nop
push
fsubrs
clc
imul
clc
cmp
data16
add
add
add
jnp
cmc
xchg
das
xor
clc
mov
jle
add
xor
clc
sub
add
dec
push
pop
xchg
mov
popa
add
fs
xchg
jb
add
xor
add
add
or
add
dec
in
test
fidivs
add
ret
clc
dec
or
dec
add
fcomps
outsl
and
add
ret
clc
xor
clc
xchg
mov
jne
clc
sub
or
repnz
add
clc
mov
pop
clc
pop
imul
add
add
out
mov
pop
mov
lcall
mov
clc
cmpsb
clc
fsts
add
fiadds
jmp
insl
shll
add
in
fsubrs
add
es
fcom
xchg
mov
out
rcrl
cmp
test
xchg
push
in
int
or
cmp
enter
add
add
push
adc
mov
dec
pop
lahf
fwait
and
add
add
add
add
mov
clc
frstor
fldl
cmp
addr16
data16
pop
clc
mov
xchg
and
add
ss
jecxz
and
add
clc
mov
add
jg
hlt
dec
stos
inc
clc
ds
leave
lret
dec
fsts
add
sarl
enter
add
jecxz
inc
clc
outsb
jb
add
add
adc
add
clc
or
test
add
push
add
lcall
lahf
xor
add
rolb
aam
push
mov
or
clc
and
add
out
jle
clc
cli
sbb
clc
pop
clc
mov
stos
cmc
lret
adc
add
adc
add
add
repnz
clc
jg
clc
pop
dec
adc
add
ja
femms
adc
fld
clc
pop
push
add
test
clc
xor
clc
movsl
clc
decb
nop
dec
xor
inc
clc
add
add
fstpl
mov
pop
or
ljmp
dec
nop
nop
aad
gs
sahf
push
sbb
into
pop
clc
into
push
mov
stc
cmp
jmp
add
mov
and
add
iret
pop
clc
cmp
es
xchg
mov
push
clc
xchg
insb
and
add
clc
ffreep
clc
cmp
xor
jle
cmpsl
clc
pop
popf
outsl
sbb
pop
sti
ss
adc
mov
lods
popa
add
cwtl
dec
sbb
add
inc
clc
aad
clc
pop
icebp
jge
neg
adc
add
clc
sar
cs
mov
clc
pop
fisttpll
add
add
cmp
clc
into
test
mov
add
aaa
xabort
cmp
add
mov
xor
clc
push
add
icebp
cwtl
pop
aas
clc
sub
sbb
add
out
popl
add
xlat
pop
clc
mov
clc
cmp
clc
push
jg
add
insl
inc
clc
iret
xchg
cmp
fists
ss
es
pop
pop
fdivs
add
cmp
aam
mov
mov
clc
lock
clc
sub
movsb
clc
mov
push
add
sub
add
stos
popa
add
pop
out
jbe
push
add
add
add
stos
xchg
mov
jg
clc
in
sub
clc
or
mov
imul
xchg
pop
push
call
lret
jg
add
add
add
clc
scas
not
push
icebp
outsb
cwtl
repnz
cld
lods
jl
mov
sahf
cltd
push
add
sub
pop
xchg
into
adc
inc
clc
adc
adc
add
cmp
clc
enter
popf
out
xchg
test
out
pop
clc
pop
and
add
push
or
clc
loop
sahf
jnp
pop
pop
aam
clc
shll
add
dec
cmp
sbb
dec
sub
cmpsb
clc
xor
add
add
xor
add
lret
and
add
cmc
daa
clc
stos
push
mov
hlt
jle
clc
push
add
xor
add
and
add
clc
notb
enter
clc
dec
cli
iret
cld
cmpsb
clc
lods
sbb
notb
cmpsl
clc
cmp
add
inc
add
rcrl
clc
test
clc
inc
add
enter
xchg
fnstenv
add
xor
add
into
jne
sub
add
add
push
vmovaps
and
add
add
jae
add
ret
clc
adc
add
clc
clc
push
clc
test
dec
xchg
mov
clc
es
movsl
clc
jmp
push
add
mov
adc
add
xchg
aas
daa
clc
adc
add
jno
add
test
bound
add
cmp
push
xlat
xchg
cs
clc
pop
sub
xchg
and
in
lcall
clc
xor
add
inc
add
mov
fidivrl
sbb
repz
clc
insl
xor
add
clc
adc
add
xchg
ss
clc
dec
aad
xlat
add
add
aad
fsubrs
adc
clc
ret
call
or
sti
inc
clc
pop
mov
sub
lcall
and
add
lret
clc
movsl
clc
clc
xor
add
jle
cmp
ja
gs
xor
add
add
jb
add
add
enter
jns
add
jb
add
clc
xabort
clc
dec
clc
fiadds
dec
pop
cli
sar
cs
stos
lret
pushl
add
mov
and
add
add
jge
cs
sbb
add
cmpsb
clc
pop
clc
sub
add
scas
ret
cmp
add
icebp
inc
clc
push
cmp
out
int3
cmp
add
sub
pusha
add
das
inc
clc
jae
add
mov
clc
es
out
jae
add
gs
push
cmp
adc
add
scas
cmp
clc
int3
jno
add
jne
add
add
add
lea
add
mov
pop
hlt
imul
add
adc
add
add
clc
sbb
mov
jb
add
add
clc
mov
clc
test
clc
fwait
mov
jbe
clc
add
int3
xchg
mov
je
mov
shll
add
push
push
stos
sub
add
mov
data16
test
test
sub
push
xor
add
add
inc
clc
sarb
add
cld
push
add
cwtl
add
add
data16
xchg
pop
nop
popf
aaa
xchg
lahf
pop
jecxz
jns
cmp
add
xchg
xor
add
jg
cmp
pop
sub
das
mov
jbe
clc
push
inc
add
cmc
and
add
or
add
incl
loop
mov
cmp
xchg
dec
stos
pop
sbb
sbb
ss
jne
add
gs
pusha
add
adc
add
inc
clc
aas
shr
lock
xchg
adc
mov
aad
add
outsb
dec
xor
add
or
clc
shll
test
and
add
clc
jns
add
sar
clc
into
sarb
add
lret
clc
sub
clc
dec
lcall
add
clc
mov
add
cmp
dec
sbb
mov
push
dec
add
lods
xchg
cld
add
add
inc
add
adc
add
dec
fdivp
fdivr
out
sub
add
add
jbe
push
clc
repnz
add
clc
xabort
inc
add
xchg
lcall
in
pop
data16
call
jge
fstpt
daa
clc
and
std
enter
or
movsl
clc
jl
push
inc
add
add
lea
clc
mov
add
clc
inc
add
mov
clc
inc
add
rcll
data16
jbe
inc
add
dec
mov
loop
test
or
add
loop
fildl
add
and
add
clc
mov
in
arpl
add
push
inc
clc
loope
or
mov
and
add
and
add
add
dec
add
cwtl
mov
test
data16
cmp
and
mov
inc
add
fwait
dec
movsb
clc
add
add
and
add
cmp
add
lods
clc
or
psrad
and
cmp
add
cmp
adc
adc
clc
out
adc
push
hlt
stos
xor
add
popf
push
popf
lcall
mov
clc
test
jle
das
loopne
imul
push
rcrb
clc
jae
add
in
cwtl
mov
add
fdiv
cmp
clc
sar
mov
add
movsb
clc
cmp
cwtl
push
inc
add
inc
clc
fs
loop
mov
add
push
xabort
lahf
adc
add
adc
add
lods
xchg
pop
aaa
add
add
lret
clc
mov
clc
nop
mov
add
ss
add
insl
jno
add
repz
clc
clc
adc
add
mov
sahf
fucomip
ret
jb
add
clc
push
dec
pop
and
add
cs
dec
ror
nop
outsl
sahf
out
out
popl
sar
mov
sbb
addr16
push
add
cli
shlb
divl
add
clc
sbb
dec
into
pop
lods
mov
mov
call
cmpsb
clc
jne
mov
add
mov
clc
mov
dec
sbb
add
fs
cmp
ds
frstor
imul
adc
push
fdivl
hlt
pop
adc
add
clc
xchg
mov
mov
or
clc
bound
add
push
add
or
aaa
stc
or
add
jns
in
mov
push
int3
sahf
mov
iret
js
adc
mov
jnp
clc
push
add
xchg
nop
es
push
xbegin
loopne
stos
mov
add
inc
add
xchg
jp
add
inc
clc
mov
dec
cmp
clc
xor
fst
fs
movsb
clc
aad
clc
sar
add
mov
in
add
add
add
clc
xchg
push
fistl
clc
xor
add
add
aaa
bound
add
gs
pusha
add
push
loop
scas
xchg
cmp
add
add
add
sub
xchg
mov
clc
lret
lcall
adc
xchg
adc
clc
and
add
ds
fildl
cli
aaa
mov
out
inc
clc
dec
and
add
push
add
jp
lods
xchg
fbstp
add
jge
and
add
out
nop
add
add
jecxz
push
lcall
add
add
pop
pop
das
pusha
add
cli
push
je
pushf
bound
add
outsl
out
mov
fs
mov
add
push
add
movsb
clc
xchg
jbe
clc
mov
xor
add
scas
add
add
dec
cltd
dec
adc
add
into
mov
mov
adc
cmp
clc
leave
mov
jbe
clc
sub
lcall
inc
add
cltd
bound
add
and
jo
add
pop
xabort
xchg
mov
push
add
add
movsl
clc
clc
jge
clc
push
inc
clc
mov
add
fiadds
add
add
clc
dec
insb
test
jg
add
jns
sub
clc
into
jle
cmp
bound
add
mov
add
imulb
mov
xor
add
add
fcomi
testl
clc
out
int
add
jmp
lods
dec
ret
clc
mov
sar
xabort
xchg
out
sbb
jge
push
add
mov
mov
hlt
dec
ljmp
add
filds
xchg
inc
add
pop
out
sub
inc
add
mov
add
dec
adc
add
clc
iret
adc
clc
mov
pop
int
and
add
mov
add
add
icebp
sub
xchg
xlat
inc
clc
insb
dec
fstpt
add
in
xor
add
cmp
daa
clc
in
adc
xchg
add
clc
call
mov
clc
or
add
xor
add
clc
fildll
iret
sbb
mov
add
push
add
sub
mov
sar
clc
pop
psllq
add
jb
add
add
dec
xabort
sahf
lock
mov
inc
clc
das
or
add
imul
or
add
pop
add
add
jns
repnz
add
mov
add
mov
nop
daa
clc
faddl
add
cmp
xchg
jg
or
outsl
sbb
clc
or
cmp
push
cmp
cwtl
movsl
clc
inc
clc
aaa
sub
enter
add
xchg
lret
scas
cltd
cli
xchg
mov
jecxz
push
add
push
add
mov
mov
js,pn
clc
shr
cmp
cmpsl
clc
mov
mov
clc
cld
or
inc
clc
test
aam
clc
cwtl
lcall
add
add
add
add
pop
mov
add
add
movsb
clc
fs
scas
pop
clc
push
add
add
add
adc
add
ss
inc
clc
mov
xchg
loope
sub
sub
clc
jbe
xabort
and
add
js
insl
clc
jmp
and
add
add
add
add
mov
cmp
and
clc
dec
xchg
push
mov
add
xor
inc
clc
push
or
add
add
adc
add
inc
clc
adc
add
iret
movsl
clc
out
cmp
mov
jae
add
add
jbe
pop
nop
icebp
or
push
add
pop
add
add
push
add
xchg
xchg
into
jg
test
xchg
pop
clc
xor
add
int
rcl
mov
loop
out
in
testb
inc
add
xchg
mov
inc
clc
add
or
clc
in
ret
clc
adc
add
mov
gs
scas
lcall
movsb
clc
mov
clc
aad
sub
add
mov
popl
add
icebp
add
add
add
add
pop
gs
nop
inc
add
push
add
shrb
clc
loop
into
mov
in
push
add
int3
push
add
js
mov
add
pop
push
and
add
pop
jmp
loope
es
test
or
pop
daa
clc
and
add
add
push
push
sbb
lret
xchg
or
mov
clc
in
mov
clc
iret
mov
push
clc
jmp
mov
clc
or
cmp
clc
lret
sbb
xchg
and
add
add
js
pushf
lock
push
lea
add
sub
dec
int
enter
add
add
jb
add
pop
mov
stos
adc
add
add
adc
add
add
add
jnp
add
pushl
cmp
fisttps
movlps
add
push
add
sbb
clc
popf
pop
imul
add
add
mov
jecxz
add
mov
loop
hlt
mov
mov
pop
cmp
dec
cld
cmp
mov
cli
lret
popa
add
arpl
add
clc
rcrb
push
add
insb
pop
sar
or
xchg
sbb
add
and
add
xor
clc
pop
adc
clc
loope
inc
clc
inc
add
xor
and
add
pop
xabort
clc
and
dec
dec
sub
sbb
push
xlat
mov
dec
test
addr16
sub
stos
xchg
pop
aas
or
or
clc
sbb
ljmp
ljmp
xchg
adc
add
ljmp
lret
test
mov
or
popa
add
sub
xchg
xor
clc
sahf
fdivrl
push
add
add
daa
clc
sbb
shl
fadd
clc
sbb
movsb
clc
rolb
add
pop
pop
jb
add
add
lock
push
aam
mov
clc
int3
dec
mov
rolb
add
mov
loope
data16
loope,pn
lahf
xor
add
sti
nop
nop
pop
jns
repnz
gs
sbb
add
push
add
shll
clc
fwait
lcall
mov
insb
testl
stos
xchg
xor
add
mov
jnp
and
add
xlat
adc
add
add
inc
clc
enter
jno
add
clc
test
lock
add
stc
fwait
push
dec
icebp
test
add
sar
jne
add
xor
add
cmp
and
add
add
jns
add
dec
and
add
push
add
inc
add
ret
clc
inc
add
pop
sbb
push
scas
pop
jp
stc
push
add
mov
add
clc
lret
out
xchg
push
add
sbb
out
repnz
mov
sbb
clc
js
stos
or
sbb
add
faddp
clc
cmp
xor
popa
add
xbegin
add
jp
add
mov
fsubrl
popa
add
clc
xabort
add
add
hlt
js
and
leave
int3
pop
cmp
popf
sbb
clc
ret
add
es
add
add
clc
cmp
xchg
insl
inc
clc
inc
clc
add
add
clc
ret
clc
add
add
in
add
add
add
push
gs
out
inc
add
in
xchg
jns
add
test
add
add
and
add
add
int
fcoms
pop
fiaddl
in
addr16
outsb
lock
add
jle
add
mov
add
xchg
mov
lock
jecxz
adc
add
aam
jmp
clc
sub
loop
repnz
add
sbb
add
aad
mov
jb
add
clc
mov
sub
stos
loop
cmp
outsl
movsl
clc
out
scas
add
add
add
add
add
cmp
cmp
addr16
data16
xor
adc
add
lret
jne
sti
hlt
mov
stc
insl
xor
add
clc
sbb
cmp
xchg
push
add
fdivl
add
ror
dec
fisttps
xchg
and
enter
mov
jle
add
fldz
adc
add
add
push
test
or
fisttpl
xor
jle
clc
mov
add
clc
xbegin
and
int
pop
hlt
sbb
add
add
pushf
mov
pop
dec
sub
insb
leave
enter
clc
repz
mov
sub
xabort
clc
pop
neg
fnstsw
jle
cwtl
jp
add
inc
clc
jbe
jp
add
add
add
clc
clc
sub
clc
out
jl
movsl
clc
mov
add
add
negb
shr
out
mov
add
in
outsb
gs
xor
add
xchg
add
add
clc
in
cmp
clc
and
add
add
testb
test
xor
add
pop
out
stos
add
icebp
jmp
clc
cmc
add
xchg
jo
add
mov
clc
or
dec
add
add
add
jg
lret
into
mov
add
aam
jge
add
dec
data16
or
imul
or
add
cmpsb
clc
push
clc
cmp
ja
ja
lcall
clc
fistpll
add
add
pop
clc
sahf
inc
clc
fcompl
test
add
cltd
cmp
xor
add
nop
lods
loopne
adc
add
into
mov
clc
jns
push
mov
aam
js
clc
sbb
clc
arpl
add
clc
or
add
push
clc
pop
insl
pop
add
add
add
inc
clc
push
add
addr16
lods
sub
pmaxsw
add
push
clc
scas
add
rcll
cmc
pop
jne
add
cli
mov
mov
iret
lahf
loop
sbb
xchg
xchg
je
lret
add
rorl
shlb
adc
add
add
aad
movsb
clc
nop
inc
add
push
add
leave
add
add
js
clc
mov
clc
inc
add
bound
add
js
mov
mov
jne
mov
loopne
repz
add
je
add
andps
add
add
bound
add
add
dec
das
dec
add
add
fadds
add
add
enter
inc
add
sti
js
jmp
lock
add
xabort
clc
ret
clc
sub
jg
sbb
mov
repz
nop
jecxz
fs
ret
clc
nop
es
add
pusha
add
xbegin
clc
pop
jecxz
rcll
clc
mov
cltd
insl
and
add
flds
gs
cmp
mov
add
jne
clc
mov
inc
add
cmc
ds
clc
mov
repz
add
add
sarb
clc
xchg
cwtl
xchg
inc
clc
mov
inc
add
sbb
xbegin
inc
clc
cmp
clc
call
fnstenv
add
dec
movsl
clc
leave
out
call
bound
add
jb
add
clc
imul
add
clc
ss
mov
clc
xchg
cltd
sbb
mov
add
add
add
push
add
addr16
mov
cli
cmp
clc
pop
jle
lret
dec
sbb
sar
jno
add
fisubl
mov
add
cmp
repz
add
mov
daa
clc
jns
pop
jmp
push
sar
push
add
mov
add
clc
sahf
jbe
add
or
add
jno
add
cmp
inc
clc
fcoml
stos
mov
add
cmp
negl
push
add
xabort
dec
cmp
clc
pop
pushf
mov
lods
jo
add
lods
movsl
clc
loope
push
outsb
cld
ret
clc
cmp
daa
clc
sarl
pusha
add
jg
mov
scas
mov
lods
ret
clc
sbb
add
pop
pop
jle
clc
xchg
xchg
mov
out
lret
add
jle
clc
js
add
sub
xor
add
mov
mov
clc
fdivl
cld
or
clc
mov
add
das
aad
sbb
clc
popf
and
cmpsl
clc
mov
pushf
lods
and
add
adc
add
sub
add
cmp
mov
xchg
add
add
add
scas
xor
add
outsb
sbb
add
out
repz
jmp
mov
add
clc
data16
pop
clc
cmp
popl
add
or
add
add
clc
adc
insl
aaa
shlb
add
add
add
jmp
push
or
bnd
movsb
clc
clc
nopl
clc
inc
clc
jmp
add
add
add
shr
xor
add
xchg
out
mov
push
push
pop
into
call
sar
add
ja
clc
jno
add
daa
clc
add
pop
xchg
mov
dec
popa
add
mov
add
fdivs
repz
sbb
shr
mov
xchg
stos
push
nop
mov
add
add
ret
xabort
ds
xbegin
out
repz
stos
sti
xor
add
clc
out
or
clc
pop
rcll
in
mov
clc
icebp
pop
push
add
inc
clc
pushf
pop
sti
mov
add
push
add
ljmp
add
xbegin
aad
push
ret
clc
jmp
mov
mov
sub
clc
cmp
repz
mov
clc
pop
pop
inc
clc
mov
xor
loope
cmp
xbegin
jle
dec
or
clc
xor
add
pop
dec
mov
ljmp
add
add
add
add
arpl
add
clc
nop
je
lret
cmp
mov
push
mov
stos
popf
xchg
mov
lock
gs
pop
in
inc
clc
mov
inc
add
arpl
add
xor
jbe
push
add
outsl
fs
repnz
add
movsl
clc
pause
jbe
or
add
xchg
cmpsl
clc
addr16
cmp
clc
jg
clc
xchg
imul
add
sti
adc
add
clc
repz
clc
adc
add
mov
clc
mov
cmp
clc
inc
clc
mov
add
add
into
mov
clc
mov
and
add
add
add
loop
sbb
jge
adc
add
rcrb
pop
pop
ret
clc
rcl
dec
push
xchg
sub
add
sub
add
inc
add
test
int
sahf
pop
sar
xabort
add
shrd
aam
add
test
cmc
cmc
lods
mov
das
dec
sbb
call
add
cmpsl
clc
jle
and
in
push
jp
loopne
push
das
inc
clc
loope
clc
in
mov
jne
add
aaa
lret
int
movsb
clc
lret
clc
lock
add
clc
mov
stos
pop
xchg
in
ret
clc
stc
roll
add
sbb
clc
sbb
es
xor
add
mov
push
push
inc
clc
divl
xchg
dec
xor
add
test
addr16
and
add
test
cmpsl
clc
mov
rcll
add
xor
add
data16
aam
and
add
add
cmp
sahf
cmpsl
clc
popf
inc
add
adc
mov
push
jns
scas
jmp
clc
dec
mov
jae
add
insb
loope
addr16
cmp
adc
add
clc
xchg
push
mov
xabort
adc
add
clc
pop
xchg
cmp
clc
lret
push
add
cmp
add
shr
cwtl
inc
clc
mov
in
jb
add
pop
fdivrs
push
clc
aas
scas
cmp
clc
add
add
add
clc
mov
cmp
clc
leave
push
jbe
add
sub
dec
sub
outsl
adc
add
adc
add
sub
clc
or
add
mov
add
mov
in
add
mov
clc
sbb
add
xchg
sub
adc
add
negl
clc
pop
or
add
add
add
pop
enter
ss
pusha
add
pop
lods
xlat
adc
add
push
outsl
imul
add
mov
adc
add
sbb
add
cltd
jbe
add
pop
cmp
fs
and
add
add
push
arpl
add
xchg
aas
mov
xchg
xbegin
movsb
clc
push
clc
sahf
cmp
clc
xlat
test
aaa
out
into
outsb
clc
test
pop
movsl
clc
or
push
mov
dec
cmp
ret
clc
push
add
imul
push
clc
iret
jno
add
push
sub
clc
ret
clc
sub
loopne
lods
dec
adc
add
in
sar
add
xor
add
in
push
dec
inc
add
cmp
cmpsb
clc
add
sbb
clc
in
xor
add
clc
sub
clc
sub
clc
add
add
clc
push
add
mov
mov
test
inc
add
mov
clc
pop
dec
cli
nop
adc
add
cld
fs
adc
push
mov
mov
cld
fldt
add
cmpsl
clc
and
add
add
cltd
inc
clc
sub
mov
loopne
sarl
filds
clc
imul
fdivl
add
push
push
movsb
clc
daa
clc
dec
sbb
xchg
in
jmp
clc
ret
leave
adc
add
ljmp
push
mov
jbe
add
xor
clc
push
add
and
add
add
clc
push
clc
mov
clc
ret
lret
push
add
and
arpl
add
add
add
inc
clc
push
add
stc
xlat
fsubs
cmp
std
ds
ret
xchg
scas
sub
fcomps
jns
add
add
clc
imul
add
add
mov
add
add
cmp
dec
sahf
mov
es
pop
mov
clc
xchg
push
aaa
dec
adc
clc
ds
add
add
cmpsl
clc
xabort
std
mov
adc
add
cld
xor
add
add
cmp
clc
int3
lret
clc
stc
inc
clc
push
add
in
xor
add
add
stc
cmp
fcom
cmp
jnp
inc
clc
jl
xchg
cmp
clc
out
dec
pushf
nop
push
add
push
clc
mov
sub
fwait
addr16
gs
leave
adc
add
in
aas
jge
clc
mov
add
adc
dec
mov
fs
mov
clc
mov
mov
add
push
clc
incb
add
clc
mov
push
sbb
add
rcll
pop
mov
pop
adc
stos
inc
clc
and
add
jo
add
clc
stos
aas
test
mov
mov
dec
test
mov
clc
sbb
add
jne
aas
lret
xchg
imul
push
sub
pop
int
push
pop
sbb
data16
ret
add
adc
loope
push
fdiv
ret
add
dec
inc
add
inc
add
rclb
clc
pop
push
add
add
xabort
cmp
push
mov
psubd
cltd
sbb
fsts
add
jb
add
xor
add
add
mov
add
mov
xchg
cltd
mov
int
and
xor
add
xlat
movsb
clc
jmp
cmp
clc
lods
mov
clc
or
loop
mov
cmp
clc
nop
repz
cmp
pop
xor
push
add
push
sub
clc
jle
lahf
push
in
std
sbb
clc
inc
clc
cmp
push
sub
add
rep
inc
add
mov
pop
cmp
pop
lea
add
rorb
lods
cmp
add
addr16
fldcw
inc
add
popa
add
fs
lret
clc
pop
cmp
add
push
lods
sbb
clc
or
push
and
add
clc
push
add
clc
cmp
inc
clc
adc
add
and
add
mov
pop
clc
ror
cld
push
add
inc
add
stos
xor
add
mov
lret
popa
add
stos
sbb
add
clc
aaa
leave
inc
clc
adc
add
out
mov
clc
cli
repz
int3
cmp
pushf
icebp
fldt
add
xor
inc
add
add
add
pop
outsb
lods
and
add
add
xor
add
xor
add
add
inc
add
ja
clc
cld
cltd
pop
or
add
clc
jnp
pop
popf
push
sub
clc
int3
xchg
mov
mov
add
add
add
push
frstor
add
inc
clc
mov
clc
fldt
out
rcll
incb
sbb
sti
xor
add
cmp
xchg
jno
add
inc
add
xchg
add
ret
clc
push
jbe
loope
xor
add
adc
add
clc
cmc
mov
cmpsl
clc
mov
aaa
dec
popf
pop
clc
test
push
sbb
xor
add
xor
add
clc
jne
pop
test
jmp
push
add
cmp
clc
stc
ret
clc
inc
clc
ss
clc
pop
dec
out
pop
cmp
clc
fdivrs
pop
scas
xchg
xor
sar
clc
sub
add
add
mov
aad
out
add
add
add
jae
add
or
mov
xabort
add
pop
es
cld
out
xchg
mov
pop
cli
faddl
clc
inc
clc
stos
test
scas
xor
add
inc
add
sub
std
je
add
dec
dec
iret
sub
add
add
add
out
add
ret
add
add
add
lahf
inc
add
xchg
push
ljmp
cmc
sarl
clc
jle
pushf
mov
outsl
and
notl
xor
add
clc
mov
ja
add
dec
in
js
xchg
adc
or
push
add
iret
or
add
cmp
add
xchg
test
stos
addr16
pop
clc
fldt
sar
clc
in
sahf
or
clc
hlt
iret
jnp
outsb
mov
loopne
or
pusha
add
pusha
add
iret
mov
lcall
add
xchg
cmp
mov
add
add
rorl
dec
add
cmpsl
clc
xbegin
cli
cmpsl
clc
mov
fld
clc
mov
add
loope
jns
mov
clc
sub
clc
ja
push
pop
jecxz
push
in
int
xchg
push
clc
and
add
clc
cmp
fisubl
push
clc
dec
das
jb
add
clc
push
test
movsl
clc
in
mov
popa
add
pop
arpl
add
pop
or
arpl
add
cld
aam
jae
add
inc
add
mov
imul
add
add
add
ficomps
lret
sub
add
cmp
add
and
add
add
mov
or
mov
clc
addr16
pop
pop
not
clc
pusha
add
aad
add
xchg
push
test
mov
gs
in
aam
or
xor
mov
xchg
mov
mov
inc
add
jge
lods
mulb
add
iret
add
lahf
pop
mov
mov
sbb
cmp
clc
cmp
add
push
clc
inc
clc
pop
test
or
adc
add
clc
mov
inc
add
mov
clc
or
in
cmpsl
clc
fsubl
add
clc
and
add
add
dec
jmp
pop
mov
xchg
jl
clc
lods
sub
aas
rorl
inc
clc
imul
and
add
sbb
add
pop
sahf
insl
je
cmp
sar
mov
push
add
and
add
add
cmp
mov
outsl
dec
shrl
sbb
inc
add
xchg
out
leave
pop
sar
add
in
pop
xor
push
paddb
add
dec
std
insl
dec
outsb
inc
clc
adc
sbb
clc
int
mov
add
mul
clc
inc
add
rcrb
clc
mov
fwait
mov
push
in
fsts
clc
pop
jnp
mov
scas
mov
mov
clc
sbb
adc
add
add
add
pop
int3
rcl
pop
stos
or
add
ficoms
jle
clc
xchg
movsb
clc
pop
mov
cwtl
xchg
xlat
fsts
jb
add
xabort
clc
ss
outsl
sbb
clc
inc
add
mov
cmp
add
add
gs
imul
add
or
leave
loope
stos
pusha
add
aas
or
add
push
lods
push
add
out
dec
or
sbb
clc
ja
data16
das
add
rcl
es
cmc
scas
jp
clc
xabort
add
fnstcw
popa
add
loop
mov
push
add
xabort
pop
dec
hlt
popa
add
mov
add
sbb
add
in
out
scas
mov
and
add
je
clc
mov
dec
in
clc
xor
add
add
add
adc
cmp
add
addr16
aad
add
pop
fldln2
lock
add
and
add
or
mov
sahf
je
in
jns
lods
add
add
jmp
mov
add
mov
clc
insb
push
aam
clc
inc
clc
iret
rol
clc
mov
dec
dec
test
mov
or
popa
add
ficomps
adc
add
or
clc
cmp
enter
add
push
or
int
mov
jge
bound
add
mov
pop
sar
clc
jns
mov
aas
xchg
inc
clc
mov
or
fnstenv
add
aas
scas
push
popa
add
add
add
add
xchg
dec
jge
mov
or
jl
in
push
add
and
add
jns
fld
clc
movsb
clc
test
jle
movsb
clc
shrl
or
add
add
popa
add
push
add
inc
add
rorb
test
adc
imul
clc
sub
lret
jecxz
inc
clc
test
scas
xchg
mov
add
pop
jnp
test
clc
push
add
sti
jb
add
add
mov
add
add
movsbl
clc
lcall
add
clc
sub
jecxz
pop
ljmp
ja
lods
test
testb
loopne
movsb
clc
jp
add
add
and
add
mov
inc
add
leave
push
jne
add
pop
xchg
mov
and
dec
cmp
xor
jb
add
cli
fcomp
in
test
pop
repz
add
add
inc
clc
push
add
enter
das
mov
add
jmp
add
repnz
mov
pusha
add
jmp
push
clc
jno
add
add
jbe
clc
sti
out
cmp
icebp
sub
pushf
push
test
in
pop
sbb
repnz
std
daa
clc
js
xchg
stos
inc
clc
cmp
ret
clc
iret
sbb
add
lahf
push
mov
add
inc
add
dec
and
cwtl
into
inc
clc
cmc
negl
add
mov
popf
incb
clc
fs
ret
clc
or
pop
jle
clc
dec
push
add
dec
cmp
xchg
cmp
add
jo
add
mov
add
jle
push
or
push
repz
movsl
clc
js
clc
sar
cmp
cmp
flds
clc
sbb
lea
clc
jbe
in
in
in
js
js
in
dec
daa
clc
je
clc
mov
mov
cmp
adc
add
sub
add
dec
cmp
push
add
cld
add
add
imul
dec
pop
shlb
add
add
cmp
mov
ljmp
xchg
lea
lret
cmp
icebp
mov
clc
scas
jl
fscale
mov
rolb
add
sar
cmpsb
clc
aaa
ja
add
test
ss
decb
xor
mov
scas
stos
push
ljmp
je
mov
iret
shll
sbb
clc
jle
cmp
and
add
pusha
add
lret
cs
test
fstps
cmp
push
add
outsl
bswap
lcall
clc
in
cmp
add
clc
cmp
mov
xabort
inc
clc
jae
add
sahf
lret
add
jb
add
clc
xor
xchg
in
insb
insl
aam
imul
add
mov
lods
test
mov
clc
xchg
fwait
mov
and
add
clc
clc
pop
aaa
or
ja
clc
stc
cmp
clc
lret
jp
cld
loop
push
dec
fadds
clc
lods
cmc
or
clc
add
add
clc
lods
cs
clc
js
clc
cmp
inc
add
inc
clc
or
add
xchg
cmpsb
clc
inc
clc
pop
int3
stos
adc
add
xor
add
dec
icebp
push
add
clc
jne
push
fbld
sti
lret
mov
add
out
adc
add
add
add
push
add
sbb
dec
outsl
cmpsl
clc
push
xchg
mov
clc
inc
add
jnp
xabort
mov
add
in
es
dec
and
add
jno
add
clc
mov
clc
cmc
push
add
faddp
clc
cmpsl
clc
inc
clc
and
add
or
add
xchg
and
add
mov
or
sub
xchg
and
add
add
clc
or
mov
push
dec
mov
clc
lret
jl
and
add
clc
test
add
add
clc
xor
add
lret
xchg
cld
lock
clc
cmp
sbb
adc
add
repz
xor
add
or
add
clc
mov
pushf
mov
int
lret
mov
or
add
mov
adc
add
add
add
insl
hlt
xlat
xchg
push
add
movsb
clc
pop
xchg
addr16
mov
sti
push
add
jns
mov
or
sbb
cmp
add
and
add
lock
add
push
dec
sbb
cwtl
loop
xchg
push
imul
add
clc
mov
sub
sbb
ret
clc
push
mov
pop
inc
clc
jge
into
push
add
dec
xchg
mov
add
gs
fnstsw
add
dec
js
pop
into
cmpsl
clc
cmp
add
push
add
push
clc
and
add
inc
clc
or
scas
je
sar
push
jg
xchg
cwtl
dec
sbb
add
push
add
ret
clc
cmp
insl
cmp
clc
pop
clc
mov
cltd
xor
pop
clc
jmp
add
cmp
stc
lea
add
xor
add
push
cmp
nop
arpl
add
clc
test
sti
fstpl
into
out
add
lods
ljmp
fldenv
pmaxsw
mov
push
fadd
clc
dec
imul
push
add
jne
or
aam
and
add
aad
cmp
repnz
clc
mov
pop
xchg
jge
mov
clc
cwtl
mov
or
sti
notl
add
mov
loop
in
add
add
clc
jmp
inc
clc
call
clc
xor
add
add
clc
leave
cmpsb
clc
and
add
dec
cmp
clc
cmp
icebp
clc
sub
add
and
add
in
aaa
xchg
out
lcall
clc
adc
dec
cld
outsl
cwtl
in
lock
nop
pop
insb
pop
fidivs
mov
xor
add
nop
and
add
xor
mov
add
imul
pop
addr16
xchg
xchg
stos
fstps
add
lods
cmp
clc
jmp
clc
mov
add
mov
mov
add
add
sub
pop
in
pop
cmpsl
clc
xbegin
add
push
clc
xor
add
ret
in
ss
inc
clc
cmpsb
clc
adc
add
stc
mov
inc
add
dec
cmp
or
mov
sar
xor
add
add
adc
add
mov
int3
xchg
loop
cmpsl
clc
sub
or
clc
xchg
addr16
mov
inc
add
and
xchg
aad
pop
lods
inc
add
lods
add
add
mov
clc
add
add
lahf
pop
xabort
mov
shr
adc
mov
clc
push
fsubrl
cmc
mov
add
and
aam
stos
push
cmpsb
clc
pop
mov
sbb
hlt
insb
pop
sti
insb
in
add
add
xchg
xchg
jecxz
cmp
clc
jne
cmpsb
clc
cmp
insb
mov
inc
add
fwait
shlb
add
mov
clc
fsub
clc
in
das
push
cmp
out
cwtl
xchg
sti
mov
xor
clc
xchg
in
jne
clc
push
xchg
ret
clc
loop
out
inc
clc
xor
add
jmp
add
add
and
in
jle
imul
clc
sbb
insl
xchg
jnp
mov
xchg
ds
mov
popa
add
int
dec
jo
add
cmp
mov
mov
ret
fucomip
aam
push
ss
jno
add
inc
clc
pop
testb
clc
sbb
movsl
clc
add
add
es
jl
stos
call
mov
aas
sti
daa
clc
cmp
daa
clc
cli
dec
xbegin
mov
dec
mov
mov
or
add
mov
add
adc
add
bound
add
ss
clc
add
add
add
add
xbegin
pop
int3
jnp
fisubrs
add
add
test
mov
clc
mov
cmp
jl
add
push
add
xchg
sbb
sar
dec
xchg
push
clc
mov
add
adc
add
clc
or
bound
add
inc
clc
loop
dec
push
pop
adc
add
clc
test
add
mov
pop
pushl
add
negb
lret
sbb
sahf
movsl
clc
dec
daa
clc
or
or
sar
repnz
or
clc
cmpsb
clc
add
add
mov
jne
lret
filds
clc
incl
add
cmp
jg
clc
mov
fs
mov
jge
and
add
add
clc
inc
add
add
add
cmp
jecxz
push
jo
add
cmp
add
xchg
sub
sahf
xabort
daa
clc
jnp
clc
mov
xchg
mov
pop
inc
clc
imull
pop
insl
push
mov
repnz
test
or
push
clc
stos
addr16
loopne
xlat
inc
add
lea
jb
add
jmp
sub
cmp
clc
inc
add
jns
add
dec
add
stc
xor
add
add
inc
add
int
in
mov
pop
xor
add
movsl
clc
cmp
fimuls
add
repz
add
xor
add
add
sar
scas
movsb
clc
dec
stos
push
add
jne
add
or
add
hlt
or
add
xor
push
iret
mov
cli
sti
ja
mov
cmp
clc
sti
jg
data16
inc
clc
mov
adc
add
add
xchg
mov
add
jbe
jmp
xbegin
scas
scas
dec
push
clc
fs
add
add
push
jo
add
xchg
sbb
add
add
xchg
jecxz
push
or
loopne
pop
loope
cmp
mov
fcmove
jle
clc
push
push
jl
data16
xor
add
add
in
call
xchg
out
aas
inc
add
or
xchg
cmp
add
in
ret
clc
xchg
pop
pop
cltd
push
insb
cmp
add
xor
add
insl
sub
lods
insb
mov
clc
sub
ss
add
mov
clc
loope
mov
add
leave
in
inc
clc
popf
sbb
add
es
divb
negb
clc
xor
clc
xabort
int3
sub
mov
clc
xchg
fldcw
add
xor
add
pop
mov
sahf
pop
imul
cmp
jb
add
add
xabort
sti
sbb
add
icebp
sub
add
int3
lret
add
out
int3
mov
aas
std
xchg
int3
shlb
repz
jmp
scas
test
jae
add
clc
jmp
jle
add
sbb
mov
hlt
or
add
pop
sti
sahf
shlb
clc
fisubrs
outsb
and
add
clc
push
add
sbb
fidivl
add
fs
divl
jne
clc
mov
out
push
add
sub
adc
add
clc
sub
lcall
sbb
xchg
jmp
mov
pop
data16
cmpsb
clc
mov
mov
add
adc
add
movsb
clc
cmp
and
xor
and
add
clc
out
xor
ljmp
jl
addr16
imul
add
mov
sub
clc
scas
ja
dec
fildl
or
add
ljmp
loope
mov
push
add
fnsave
jae
add
ret
clc
jbe
dec
sbb
clc
lea
fs
or
add
es
dec
jmp
mov
add
jb
add
clc
jp
imul
lods
fnstcw
jle
ljmp
ss
call
add
cmc
add
in
cli
sti
push
mov
test
mov
shll
dec
pop
push
clc
dec
or
fildll
repz
outsl
jge
jae
add
add
insb
push
sbb
mov
aam
jnp
gs
adc
add
clc
into
push
adc
add
jl
clc
jl
clc
dec
imul
pop
xchg
push
cmp
mov
add
cmp
adc
repz
pop
or
clc
outsb
and
add
iret
xor
add
jo
add
add
and
add
mov
pushf
inc
add
cltd
xabort
in
push
xor
add
fisubrs
push
in
xchg
pop
rol
clc
cltd
inc
add
pop
pop
clc
mov
sub
add
jp
xchg
mov
in
and
add
cmp
clc
jbe
clc
fwait
jp
pop
fildl
push
clc
mov
lods
mov
add
clc
movsb
clc
fsubs
add
pop
push
add
mov
clc
popa
add
push
add
bound
add
push
sbb
clc
sti
hlt
outsb
sub
sbb
mov
popf
sbb
xabort
clc
je
clc
aaa
dec
iret
ficoms
jg
outsl
hlt
jecxz
sbb
int
cmp
flds
adc
add
clc
push
add
mov
dec
xbegin
add
popf
pop
lea
jno,pn
add
popa
add
insl
ret
outsb
repnz
add
push
add
adc
add
inc
add
stos
sti
xchg
stos
ja
clc
mov
sti
mov
add
pushf
cmp
mov
add
test
clc
add
clc
jb
add
or
sub
bound
add
adc
pop
xor
add
clc
xor
add
mov
adc
add
add
mov
add
pop
clc
push
add
push
clc
sub
clc
daa
clc
push
xchg
sbb
lods
nop
cli
dec
mov
clc
stos
inc
add
pop
je
add
dec
pushl
sbb
scas
shl
xchg
mov
add
add
repz
clc
push
mov
pop
jae
add
add
in
aam
das
mov
dec
neg
fsubs
pop
cld
iret
mov
add
xor
push
add
cmc
inc
add
lahf
add
add
xlat
outsl
push
mov
enter
cld
icebp
cltd
xchg
sti
xor
add
jg
call
es
int
int
je
cmp
clc
and
add
in
jo
add
sub
clc
out
dec
test
in
sbb
clc
mov
cmp
cmp
loope
mov
leave
mov
clc
incl
add
pop
es
xchg
std
and
add
cmp
cmpsl
clc
xchg
push
add
mov
sar
clc
dec
loope
popa
add
or
add
dec
mov
test
popf
ret
clc
out
xchg
cmp
adc
add
or
dec
mov
clc
sbb
mov
sub
ljmp
jmp
sbb
addr16
xabort
stos
cmp
add
clc
shll
add
test
mov
clc
xabort
cld
xchg
add
add
mov
add
push
xabort
mov
aad
dec
and
add
bound
add
dec
loope
cmpsl
clc
js
cmp
clc
dec
jae
add
cltd
pop
cmp
add
add
clc
scas
out
dec
jmp
cmp
add
clc
fwait
out
dec
push
cld
or
clc
add
add
add
clc
pop
clc
fsubl
add
sub
fidivs
filds
add
mov
clc
adc
add
clc
es
mov
add
sbb
clc
faddl
add
and
add
aam
dec
loope
dec
imul
pop
fs
xor
add
pop
cmpsl
clc
test
addr16
mov
clc
xor
and
add
clc
hlt
or
add
cmpsl
clc
bound
add
add
test
xor
clc
ret
clc
bound
add
xbegin
es
push
cltd
mov
in
into
fidivrs
arpl
add
and
mov
rclb
ret
add
das
rolb
dec
mov
out
out
test
and
add
dec
xchg
mov
cmc
adc
add
xbegin
inc
add
rcrb
sarb
pop
cli
cld
mov
lods
and
add
clc
mov
adc
jge
cmp
mov
or
fldcw
dec
cmp
add
addr16
or
add
xchg
mov
sbb
int3
xchg
sar
pop
pop
gs
ljmp
bound
add
add
clc
or
mov
inc
clc
inc
clc
sar
sar
push
loopne
in
stc
sti
aam
clc
sub
add
aam
clc
mov
and
add
mov
icebp
in
rorl
es
clc
xor
lret
add
mov
cmp
test
rcrb
xchg
mov
mov
xchg
sub
clc
sahf
imul
cmp
xchg
mov
es
cmpsl
clc
std
cmp
add
mov
movsb
clc
inc
add
fs
cltd
clc
cmp
nop
cli
out
sub
and
add
jmp
into
sbb
ljmp
sets
adc
add
add
push
add
sar
jle
clc
pusha
add
sub
aas
mov
pop
jmp
shr
pop
aas
push
clc
popf
stos
push
add
out
lahf
bound
add
add
loope
jnp
xor
add
sub
mov
test
fs
fisttpl
add
enter
insl
and
clc
xor
add
clc
mov
clc
bound
add
sub
xchg
or
cmpsb
clc
imul
add
dec
sbb
add
aaa
cmp
lret
cmc
mov
stc
lock
int3
cmpsb
clc
insb
insb
mov
ljmp
add
clc
aas
sbb
add
add
mov
add
mov
clc
dec
jge
and
add
add
clc
mul
clc
ja
cmp
lcall
jp
clc
pop
pushf
movsl
clc
fwait
dec
push
clc
aaa
push
movsl
clc
xchg
lahf
xor
add
loopne
mov
clc
jbe
clc
inc
add
xor
add
in
ficompl
add
test
cmp
inc
clc
insl
js
clc
xchg
xor
add
add
imul
stc
sbb
inc
add
add
add
add
clc
xor
add
jp
pop
clc
loope
inc
add
into
movsl
clc
mov
aaa
insl
pop
mov
clc
ror
arpl
add
clc
sbb
jnp
pusha
add
inc
clc
xchg
bound
add
adc
leave
inc
clc
inc
add
mov
add
mov
add
mov
mov
sbb
add
ljmp
decb
addr16
rclb
clc
leave
cmp
hlt
loop
xor
add
sub
clc
pop
sub
clc
mov
lock
sbb
lret
inc
add
cmp
jp
clc
fisubrl
mov
add
cld
idivl
inc
clc
push
in
idivl
jbe
arpl
add
clc
sbb
je
clc
and
add
add
lods
mov
add
iret
jg
cmpsb
clc
dec
movsl
clc
pushf
and
add
add
psubb
int
loop
shlb
aas
mov
sub
push
sarb
xbegin
add
movlps
add
mov
push
xchg
jmp
cmp
mov
push
add
push
dec
push
clc
or
clc
call
dec
jle
popa
add
xchg
mov
fsubs
add
js
clc
mov
clc
rcll
add
add
jae
add
add
mov
sub
sahf
test
cmp
push
lock
fcmovnb
clc
mull
add
sbb
cmpsb
clc
mov
add
push
add
insb
xchg
adc
add
cltd
pop
dec
in
push
lret
clc
int
adc
push
xor
add
in
lock
adc
add
int
ds
add
icebp
ja
mov
mov
xchg
xchg
hlt
sarb
rorl
clc
ljmp
xchg
pop
sbb
mov
add
or
insb
pop
clc
mov
add
dec
pop
clc
xchg
out
or
add
cmpsl
clc
push
fcmovne
add
add
cmp
stos
cmp
push
mov
mov
adc
add
add
or
add
and
add
and
insl
cwtl
clc
pop
push
add
std
cmc
testl
cmp
dec
adc
sbb
cmp
inc
clc
jno
add
add
out
repnz
mov
add
add
clc
stos
mov
daa
clc
mov
mov
lea
add
adc
add
or
add
cmp
clc
xchg
push
add
mov
push
lret
cmp
adc
add
fcoms
mov
bound
add
fcom
cmpsl
clc
fldt
push
pop
and
add
push
cld
pop
aam
dec
mov
test
xchg
sub
add
hlt
insl
mov
clc
mov
clc
mov
add
in
inc
clc
into
add
add
push
add
lcall
pop
int3
jnp
clc
jno
add
loope
cltd
pusha
add
inc
add
insl
sbb
xor
add
ffree
clc
and
add
pop
popf
in
loopne
ret
clc
aas
hlt
xchg
and
jae
add
mov
add
adc
sbb
add
sti
sbb
clc
or
add
lock
clc
push
clc
jb
add
adc
add
add
ret
mov
dec
test
popa
add
adc
add
sar
std
xbegin
mov
clc
jmp
addr16
cmp
mov
clc
dec
pop
repnz
add
sub
clc
add
mov
cmp
js
clc
loop
jle
add
add
clc
push
std
sub
add
add
outsb
push
add
jecxz
or
clc
mov
xchg
sbb
clc
sub
sar
repz
clc
push
and
add
dec
adc
add
shl
clc
fstl
clc
mov
add
sub
sbb
jle
fadd
clc
call
clc
adc
mov
lahf
leave
mov
jnp
mov
cmp
outsl
fdivrl
sub
cltd
mov
in
push
xchg
lcall
add
sub
lea
jbe
push
add
pop
add
add
xchg
xchg
mov
or
repz
add
sbb
push
inc
clc
rcl
js
dec
xor
add
aad
out
sar
nop
jbe
sti
add
add
clc
push
add
in
mov
adc
add
add
jge
sar
add
pop
lcall
push
push
mov
aad
clc
add
add
add
or
and
add
clc
xchg
sbb
lock
add
pop
sbb
clc
mov
bound
add
add
add
jp
fildll
add
inc
clc
mov
add
adc
add
dec
pop
js
clc
inc
add
daa
clc
pushl
xor
add
and
add
clc
adc
add
clc
sti
jno
add
rcrb
sub
and
je
dec
outsb
xor
add
and
or
xchg
add
add
clc
mov
add
ja
mov
jp
clc
dec
push
jp
add
incb
add
sub
mov
cld
xor
add
add
into
into
lea
lock
loop
jnp
out
push
sbb
add
scas
jb
add
add
inc
add
popf
sar
mov
bound
add
clc
cmp
clc
pop
pusha
add
nopl
push
push
add
outsb
sbb
loop
xchg
pop
cmp
clc
xchg
icebp
sbb
out
sub
clc
clc
test
ljmp
scas
lret
fidivrs
scas
sub
add
in
sub
pushl
inc
clc
dec
mov
dec
inc
add
xchg
jg
jge
add
movsl
clc
add
add
out
xchg
outsl
lcall
xchg
xabort
add
push
add
push
add
mov
loopne
pop
insl
negl
cmp
add
lret
call
sahf
xor
add
add
mov
dec
inc
add
jae
add
bound
add
add
nop
xor
push
mov
cmp
add
sahf
or
mov
fcoml
add
pop
cld
xor
add
clc
mov
add
aas
sbb
sub
jg
add
dec
push
pop
test
pop
clc
pop
cltd
ljmp
add
and
add
sub
add
add
aaa
jmp
and
aam
clc
push
add
mov
popa
add
fstpt
add
loop
mov
add
pop
aad
clc
mov
clc
push
jg
clc
pop
cmp
dec
xbegin
add
and
add
add
and
mov
add
push
add
and
aaa
repz
add
sub
push
sar
mov
mov
dec
add
add
cmp
clc
stos
insl
or
pop
push
add
and
add
xchg
pop
clc
inc
add
inc
clc
jne
cs
xbegin
cltd
or
pop
cmp
clc
outsb
mov
or
add
mov
clc
inc
clc
adc
add
mov
loop
pop
in
lcall
icebp
ret
clc
dec
out
in
mov
cmp
add
xchg
aad
mul
clc
arpl
add
xchg
jo
add
clc
scas
into
fisubl
add
inc
clc
push
add
or
sbb
aas
cmp
add
repz
pop
jp
jno
add
ds
clc
test
xor
add
vxorps
push
pop
sub
test
xchg
add
jnp
xor
add
xchg
bound
add
add
movsl
clc
xchg
cmp
fisttps
lock
imul
mov
add
xchg
pop
cmc
je
or
add
push
add
pop
mov
sbb
lock
cmp
clc
dec
insb
xchg
mov
clc
and
add
xor
add
mov
xchg
jno
add
add
add
add
popf
push
add
push
add
xbegin
clc
inc
clc
fwait
movsb
clc
pusha
add
je
sar
aaa
push
xor
add
dec
sbb
repz
add
xchg
dec
inc
clc
shlb
add
clc
loopne
adc
add
scas
or
add
iret
mov
outsl
ret
vcvtps2pd
add
adc
add
lret
movsb
clc
xchg
or
and
add
clc
fcoml
clc
ss
lods
fstpt
cltd
or
jb
add
clc
out
pop
sbb
lock
add
into
pop
loopne
and
add
xchg
cmp
push
clc
ds
push
stos
pop
jge
push
pop
push
add
sbb
clc
bound
add
add
adc
sahf
addr16
fneni(8087
clc
pop
clc
push
push
add
jl
sbb
cli
and
push
clc
movsl
clc
std
cmp
rcrl
shl
into
loop
data16
lods
in
cltd
jb
add
push
add
aaa
pop
ret
clc
into
rolb
fs
sar
add
push
clc
dec
out
or
add
jns
clc
rcr
push
repz
clc
data16
repnz
sbb
hlt
inc
clc
pop
or
clc
sti
dec
push
aaa
adc
add
mov
pop
clc
cmpsl
clc
push
push
add
cmp
gs
pop
mov
add
xchg
sub
pop
and
add
jno
add
dec
mov
popf
ss
inc
clc
popf
neg
clc
xbegin
lret
jne
clc
cltd
push
add
int
scas
mov
add
mov
add
fs
std
jg
cwtl
ficompl
mov
sar
inc
clc
jecxz
out
inc
clc
inc
clc
popf
in
nop
fwait
ljmp
rcrl
aad
insb
xchg
push
fwait
sub
in
cld
pop
xchg
lods
ret
and
add
lock
cmp
mov
and
add
popf
loop
int
clc
push
inc
add
jnp
scas
mov
sbb
pop
scas
xor
addr16
jg
mov
clc
movsb
clc
fisttpl
out
and
add
clc
repz
add
pop
push
cld
push
add
rcr
sbb
pop
mov
clc
inc
add
cmp
mov
add
mov
add
aas
mov
clc
xlat
sub
data16
mov
add
icebp
ffree
clc
adc
add
adc
add
jg
lock
out
cmp
clc
in
pop
gs
fcoms
add
aam
cmp
xchg
in
outsl
pop
std
jo
add
add
xchg
loope
dec
repnz
imul
clc
mov
clc
or
xchg
jg
cmpsb
clc
mov
clc
rcrl
ret
outsl
push
add
shr
pop
fcoms
sbb
jmp
add
push
add
repz
stos
cmp
clc
ja
clc
std
ficomps
push
jnp
push
xor
add
add
sub
push
add
add
clc
clc
test
hlt
mov
popf
nopl
add
dec
mov
cmc
int3
mov
clc
or
push
xchg
mov
add
lods
outsl
aad
in
mov
add
or
vrcpps
add
add
shll
into
xchg
out
jbe
clc
dec
mov
add
in
add
add
add
add
add
dec
mull
xchg
cmp
clc
sub
clc
or
cmp
pop
clc
popa
add
dec
out
dec
pop
repnz
push
push
dec
hlt
clc
aaa
xbegin
add
add
add
add
add
call
xor
add
movsl
clc
sbb
add
jp
add
test
stc
mov
out
mov
clc
jbe
dec
inc
clc
mov
jmp
call
add
leave
insl
filds
neg
fdivr
add
add
clc
bound
add
clc
add
add
inc
clc
enter
mov
add
lret
add
add
xor
add
add
scas
outsb
xchg
jo
add
loop
push
add
jmp
clc
xor
add
add
mov
data16
push
add
loopne
in
sbb
icebp
stos
es
es
imul
clc
fcoms
clc
in
aam
add
or
mov
inc
add
xchg
pop
jmp
lods
pop
jg
and
add
imulb
push
push
mov
pop
and
add
mov
mov
mov
pop
fcmovnb
clc
pop
clc
lock
mov
cmp
in
sbb
addps
clc
xor
add
mov
cmp
fidivrl
clc
dec
push
out
xchg
and
add
clc
or
jecxz
outsb
or
call
dec
cmp
jb
add
pop
cmpsb
clc
sbb
pop
fisttpll
call
mov
scas
inc
clc
fs
call
int3
data16
into
sub
or
add
add
int
mov
add
pop
paddsw
sbb
clc
and
add
mov
leave
xor
add
mov
cli
pop
repnz
clc
jbe
ja
test
sub
add
bound
add
in
bound
add
push
stos
sbb
pop
test
mov
or
or
add
imul
mov
loopne
xchg
sti
xchg
out
testl
adc
clc
cmp
outsb
jle
pop
iret
insb
lea
stos
push
dec
test
mov
lcall
clc
sbb
dec
jecxz
jno
add
mov
clc
mov
mov
inc
add
push
clc
sbb
push
icebp
nop
cmc
lret
fistps
cmp
clc
mov
shrb
mov
clc
bound
add
xor
add
aad
clc
dec
sbb
arpl
add
jl
icebp
mov
aas
inc
add
add
add
and
add
push
add
add
clc
adc
add
add
mov
mov
mov
and
add
popf
out
ret
clc
jge
add
xchg
sub
add
cmp
add
jp
dec
ret
push
mov
xchg
cmp
xchg
cmp
jge
mov
sbb
dec
mov
xor
add
clc
push
clc
pop
or
clc
dec
in
jg
clc
nop
cmp
sbb
push
clc
jno
add
clc
pop
arpl
add
push
cmpsb
clc
pushf
aad
lret
push
add
mov
insb
loop
in
xchg
arpl
add
clc
cli
lods
ljmp
clc
dec
cwtl
nop
mov
mov
stc
mov
add
mov
out
mov
test
or
add
fstpl
fadds
clc
dec
aam
clc
mov
in
int3
sub
add
push
clc
xchg
scas
popf
push
clc
mov
xor
add
and
add
add
into
pop
bound
add
clc
or
pop
cmp
out
imul
add
or
ret
cmp
dec
push
clc
testl
ja
mov
cmp
xchg
jb
add
clc
pop
pusha
add
xchg
stos
push
add
push
jb
add
clc
int3
sub
insb
ss
add
cmp
clc
out
cltd
js
xbegin
clc
jge
add
aaa
mov
add
scas
outsl
mov
pop
in
xchg
rcrl
clc
mov
clc
xor
add
add
cmp
mov
add
push
incb
cmp
mov
out
adc
add
clc
rclb
xchg
ret
clc
or
mov
fxch
cltd
test
push
add
mov
test
loopne
inc
clc
daa
clc
fstpl
in
aaa
sbb
add
jo
add
repnz
jb
add
clc
aam
clc
mov
clc
mov
sub
add
jae
add
popf
push
jo
add
push
clc
daa
clc
adc
add
lea
mov
jne
clc
mov
xchg
daa
clc
daa
clc
scas
jb
add
xor
add
dec
loope
dec
test
outsl
jns
add
das
dec
es
scas
adc
clc
xor
add
clc
test
adc
add
dec
fiaddl
fcomps
clc
pop
cmpsl
clc
scas
and
add
clc
sub
in
pop
loop
xlat
pop
imul
sar
loopne
jg
not
int
add
add
and
clc
lea
add
pop
lea
out
add
movsb
clc
inc
clc
fcmovbe
js
push
mov
and
add
cli
js
add
gs
sbb
add
ret
clc
cltd
mov
mov
data16
dec
gs
mov
xchg
xchg
fs
sti
in
repz
or
lods
cmpsb
clc
cwtl
iret
into
push
clc
scas
clc
lea
cmp
pop
mov
add
dec
jecxz
jnp
clc
scas
fmull
clc
bound
add
repnz
clc
push
sbb
nop
jmp
jecxz
repz
push
add
mov
cs
nop
out
mov
incb
add
add
add
xchg
je
clc
sub
out
pop
clc
mov
push
add
inc
add
in
clc
mov
add
shll
sbb
inc
clc
jle
stos
mov
add
mov
clc
pop
mov
xbegin
adc
add
in
sar
movsb
clc
fmul
sub
add
push
fmuls
cs
xchg
cmp
movsl
clc
cmp
cmp
bound
add
dec
repnz
sbb
add
jg
clc
mov
xor
add
test
out
roll
clc
jns
fwait
push
push
imul
cmc
pop
inc
loopne
mov
test
pop
clc
clc
enter
xchg
mov
popa
add
pop
insl
movsl
clc
aas
or
add
fildl
clc
mov
clc
pop
sub
clc
push
icebp
pop
xor
clc
xor
add
mov
dec
fs
jl
in
add
add
add
movsb
clc
adc
add
out
cmpsl
clc
sub
push
add
scas
outsb
cld
adc
add
shl
clc
jne
out
adc
clc
mov
popa
nop
jmp
mov
jns
jg
mov
clc
mov
add
xor
add
jl
clc
xor
cltd
jbe
ret
clc
gs
lods
sahf
stc
fsubrl
imul
add
addr16
mov
add
mov
clc
mov
push
add
pop
cmp
sub
pop
aas
xor
js
push
add
inc
add
icebp
add
adc
add
add
pop
xbegin
fsubrs
mov
mov
clc
nop
dec
stos
pop
js
add
scas
aas
jp
clc
mov
jne
out
push
add
sbb
add
clc
sbb
sub
clc
mov
clc
xlat
dec
adc
add
add
add
clc
lods
mov
cli
pop
ja
imul
and
mov
xchg
ret
repz
add
add
clc
xchg
jg
clc
bound
add
out
fs
das
jmp
cmpsb
clc
mov
clc
mov
jecxz
add
push
repz
add
cmp
sub
mov
clc
rcrl
add
lahf
call
cmp
clc
into
out
or
addr16
cltd
jo
add
mov
mov
cli
xchg
aaa
cmp
test
clc
dec
rorb
jp
mov
clc
push
xor
call
add
clc
inc
add
pushf
inc
add
sbb
jmp
clc
and
add
clc
dec
mov
clc
mov
mov
xchg
ret
jnp
aad
ret
clc
jle
ljmp
xchg
fld
clc
inc
add
adc
add
jb
add
add
jl
cmpsl
clc
pop
clc
mov
inc
add
mov
mov
mov
and
add
push
or
cs
frstor
add
add
loopne
xchg
aam
mov
sbb
add
enter
xor
xchg
stc
pushf
sub
scas
cmpsb
clc
mov
mov
nop
jmp
add
sub
js
add
pop
jecxz
fildl
cmp
push
sub
pop
je
add
cmp
dec
sub
out
inc
add
test
clc
dec
lea
lahf
std
roll
add
stos
movsl
clc
jnp
clc
shll
lret
or
mov
jmp
movsl
movl
xlat
fbstp
out
dec
movsb
clc
cmp
add
movsb
clc
cmp
pusha
push
mov
xchg
ret
mov
adc
jbe
nop
jmp
add
stos
xchg
xabort
or
dec
pop
clc
mov
loop
stos
mov
dec
adc
add
xchg
ret
clc
sub
out
and
add
popa
add
add
add
add
addr16
fdivs
add
push
add
and
add
clc
pop
clc
xchg
mov
mov
shlb
pop
ficompl
add
test
cwtl
in
scas
push
mov
cmp
mov
xchg
ret
movsl
add
pop
nop
jmp
sbb
add
std
push
add
loop
mov
add
lret
cmp
clc
mov
ret
clc
push
add
clc
rolb
and
add
fwait
cmp
and
aad
add
xor
cld
ss
test
xor
shrl
pop
loopne
or
jp
xchg
ret
clc
pop
mov
addr16
loope
xabort
mov
jmp
or
push
inc
std
add
jle
push
pop
push
mov
xchg
ret
add
jmp
clc
cmpsl
clc
add
rolb
add
push
sar
pusha
add
cmp
add
jbe
mov
call
sub
ret
add
dec
mov
jnp
ss
clc
out
lods
popf
push
clc
sub
add
nop
jmp
pop
add
mov
dec
lahf
in
popf
dec
or
add
push
add
fmul
push
add
hlt
mov
stc
push
or
cmp
adc
add
inc
clc
shll
add
jbe
test
nop
jmp
add
jmp
adc
add
mov
add
add
xor
add
je
mov
loope
or
jmp
iret
outsl
je
bound
add
lahf
mov
add
push
add
and
add
popa
add
mov
clc
clc
cmp
sti
aaa
test
xchg
push
add
pop
dec
rclb
add
add
cwtl
dec
enter
dec
and
add
add
sub
mov
add
jecxz
insb
pop
mov
add
outsb
scas
ret
clc
sub
clc
mov
inc
clc
aaa
shll
cmp
add
xchg
inc
add
fimull
add
inc
clc
notl
sbb
sar
jecxz
push
add
cmp
rcr
sbb
add
or
clc
sbb
enter
fsubp
clc
mov
jo
add
push
add
movsb
clc
jb
add
mov
jb
add
add
mov
cwtl
mov
cmp
add
je
lret
xor
add
clc
inc
add
dec
mov
mov
int3
or
add
push
jmp
mov
movsb
stc
push
jg
clc
std
and
in
cmp
test
nop
jmp
sub
add
test
add
adc
add
add
leave
pop
xchg
gs
sub
xchg
xlat
pop
clc
xor
add
sub
sub
clc
fidivrs
add
sub
add
add
mov
jo
add
dec
push
jecxz
push
add
lahf
lcall
jo
add
add
cmp
fldenv
clc
and
add
clc
jb
add
add
cmp
add
push
ds
clc
shlb
add
popf
lock
lcall
je
add
xor
add
cmp
pop
pop
fstpl
stos
repnz
pop
jecxz
mov
roll
add
nop
add
add
add
or
fidivl
add
add
pop
mov
cmp
inc
add
cwtl
and
add
add
ds
lret
cmp
and
xchg
xchg
repz
add
add
add
adc
add
lods
test
push
add
add
add
add
aad
add
cmpsb
clc
enter
push
mov
sbb
clc
push
add
pushf
sti
xchg
add
add
sar
pop
cs
mov
nop
sub
clc
test
cli
xchg
loop
roll
add
fcompl
neg
jne
sub
nop
jmp
dec
loopne
stos
xchg
cmpsl
jb
push
shr
nop
jmp
mov
mov
into
adc
add
psubsb
clc
ret
push
mov
clc
add
add
add
shll
clc
call
fisttps
push
fisttpll
test
clc
ss
xchg
scas
movsl
clc
jns
xor
add
xor
shlb
jne
or
loop
adc
add
push
add
movsb
clc
daa
clc
xlat
push
movsl
clc
mov
decl
cltd
outsl
add
add
test
sbb
shlb
add
loope
hlt
cmc
std
inc
add
jae
add
clc
shll
clc
ss
add
add
xor
xor
add
fdivl
add
mov
stc
mov
insb
mov
aaa
adc
add
add
adc
add
insb
loop
xchg
fmull
pop
movsl
clc
sub
and
add
add
add
add
or
add
sub
mov
add
add
mov
jne
jle
movsb
clc
dec
arpl
add
in
in
or
add
xor
add
mov
dec
lahf
cmpsl
clc
fcmovnu
in
enter
sar
in
scas
out
dec
jne
clc
aaa
push
add
sar
std
shl
clc
repz
add
jae
add
xchg
mov
pop
xchg
cmp
test
add
add
pop
push
movzwl
nop
jmp
pop
add
add
iret
fwait
push
add
mov
scas
dec
add
pop
mov
pop
movsb
and
mov
add
clc
push
cmc
pop
lret
cmp
pop
sub
cmp
mov
inc
clc
xchg
mov
nop
jmp
jnp
sub
imul
xchg
hlt
aam
clc
mov
sbb
ret
nop
jmp
pushf
sub
sbb
or
xchg
mov
mov
imul
addr16
je
clc
fmull
ja
add
fstpl
clc
cmpsb
clc
adc
add
sub
add
clc
cmc
ja
clc
xbegin
mov
push
mov
mov
add
adc
add
jmp
adc
cltd
mov
cmp
inc
clc
push
push
nop
jmp
push
add
cmc
or
aam
js
add
clc
push
add
xor
add
mov
sub
add
add
push
add
or
pop
hlt
jae
add
pop
xor
add
xchg
push
mov
clc
and
add
sahf
and
add
sub
outsb
pop
aas
rcl
stc
out
stos
and
add
clc
popa
add
jne
aaa
int
dec
sbb
xchg
adc
add
mov
add
sub
test
clc
aas
clc
mov
or
add
lahf
scas
sub
cmpsb
clc
cs
aad
jp
clc
sub
clc
lret
push
add
repz
dec
lahf
icebp
jmp
fs
stos
lods
icebp
je
jns
sysexit
or
shr
dec
movq
add
add
sbb
mov
add
rclb
mov
xchg
idivl
nop
sub
add
cmp
mov
adc
add
add
jmp
add
scas
sub
movsb
clc
push
push
add
stos
add
add
mov
fucomp
out
mov
pop
fbld
add
sub
in
stos
iret
dec
and
add
mov
clc
cmp
clc
mov
clc
mov
add
jp
cmp
int
clc
mov
add
ja
loopne
test
clc
xor
add
notl
add
jb
add
clc
std
and
add
add
clc
xabort
clc
push
sub
nop
jmp
cmc
add
jg
add
or
clc
cmp
clc
and
add
add
pushf
int3
cmp
xchg
sbb
jmp
dec
add
jecxz
test
or
clc
push
add
lods
stos
xchg
adc
add
cmpsl
clc
out
inc
clc
push
add
lret
xor
add
cmp
add
add
add
xlat
in
repnz
das
and
add
mov
movsl
clc
fstpl
cmp
clc
push
outsl
pop
nop
jns
push
add
dec
in
test
push
add
sbb
ja
pop
adc
add
lahf
mov
out
out
dec
adc
add
add
ret
sbb
fiadds
add
adc
add
add
push
add
cmp
xor
add
pop
nop
jmp
jnp
out
dec
lea
clc
popf
test
add
cmp
clc
cmp
data16
fbstp
add
jmp
xor
add
pop
enter
mov
add
xchg
dec
inc
clc
pushf
cli
jg
sahf
or
add
ret
clc
adc
add
mov
and
in
je
cmp
clc
push
clc
frstor
clc
xchg
or
add
cmp
and
add
add
adc
add
cmp
cmp
xor
lods
das
aad
clc
movsl
clc
clc
insl
insl
dec
divb
add
movsb
clc
test
int3
mov
clc
fimuls
cmp
ret
pushf
xor
pop
nop
jmp
inc
add
ds
clc
in
add
add
clc
in
adc
xchg
sbb
add
clc
in
push
add
mov
add
dec
stc
jae
add
dec
pop
hlt
cmp
clc
ficomps
idivb
pop
pop
stos
sbb
fsubs
mov
sbb
add
popf
xor
jns
ret
clc
lods
lods
pushf
fildl
clc
stc
sub
pop
clc
mov
fsubp
clc
loopne
dec
jg
clc
pop
cmp
mov
mov
clc
xbegin
aaa
dec
cmpsl
clc
push
clc
xor
jecxz
dec
pop
pop
push
jne
cld
ljmp
inc
clc
lcall
std
push
add
add
push
xchg
adc
popa
add
mov
add
add
test
and
add
add
ljmp
xchg
jo
add
jnp
imul
lea
nop
jmp
add
std
pop
out
and
clc
mov
clc
into
xor
add
cwtl
ficomps
ja
filds
lods
mov
cwtl
xor
or
clc
push
add
adc
add
pop
clc
add
add
add
adc
add
mov
mov
add
stc
cmc
sub
xlat
and
add
add
jb
add
or
add
push
add
pop
and
jecxz
push
add
aam
inc
add
xabort
cmp
clc
cmpsl
clc
mov
add
push
iret
ds
shl
nop
jmp
add
pop
std
pop
cltd
cmp
fneni(8087
clc
mov
cwtl
lods
jg
add
test
xchg
add
add
add
add
je
pop
daa
clc
addr16
enter
popf
inc
clc
sub
xor
add
adc
add
popa
add
ja
mov
add
add
rep
push
mov
xchg
ret
dec
cmc
fbstp
add
or
pop
loope
movsl
clc
mov
mov
mov
mov
sahf
stc
shlb
add
imul
aaa
dec
mov
add
enter
add
add
clc
push
add
lods
out
aaa
inc
clc
fcmovne
into
sarl
aam
add
fadds
adc
add
jecxz
sub
lea
clc
sbb
cmp
add
add
imul
cmc
and
add
scas
xor
add
and
add
clc
cmp
pop
lods
mov
cltd
cltd
mov
add
sub
xor
add
add
nop
jmp
cmpl
clc
and
add
test
xor
add
pop
lods
mov
cmp
clc
xor
or
lret
adc
pop
jle
test
jne
mov
add
mov
clc
add
add
nop
repz
mov
add
repz
sub
repz
add
jnp
scas
mov
add
mov
adc
add
repz
cld
xor
aaa
or
es
xor
add
clc
push
out
mov
xor
add
dec
ret
sbb
add
ja
pop
add
add
ret
jne
and
add
add
and
adc
add
clc
lahf
faddl
clc
into
aas
xchg
arpl
add
add
fadd
clc
outsb
cmp
cmpsl
clc
and
add
stos
scas
dec
mov
mov
add
and
push
push
add
test
add
cli
cmp
pop
dec
std
repnz
add
inc
clc
inc
clc
clc
into
cmp
jl
jno
add
add
mov
add
adc
mov
fstpl
cmp
add
sbb
aam
and
add
or
clc
sub
add
jecxz
arpl
add
not
push
add
mov
cmp
add
das
mov
mov
xchg
ret
add
inc
clc
and
add
add
stos
sub
cs
movsl
clc
imul
bound
add
stos
push
add
cmp
clc
out
add
outsb
cs
cmpsl
clc
fcompl
add
add
add
clc
adc
cmc
jg
clc
cmpsl
clc
clc
or
ds
clc
push
mov
add
std
jl
dec
push
sbb
sarl
add
add
jbe
sub
movsb
clc
std
testb
add
popf
cmpsl
clc
xor
add
add
sub
add
push
faddl
xchg
ret
test
cltd
test
fucomp
js
or
jne
add
movsb
clc
or
clc
jnp
lret
ret
jl
pop
dec
pop
stos
into
scas
mov
add
add
push
leave
inc
clc
or
dec
xor
add
icebp
mov
push
add
pop
cld
in
sbb
xchg
clc
daa
clc
jle
dec
scas
leave
sti
lret
clc
xor
add
bound
add
inc
clc
call
nop
jmp
fbld
add
stc
sti
sub
movsb
clc
aaa
xbegin
add
jge
mov
clc
add
add
add
clc
nop
and
add
inc
clc
push
add
push
mov
outsb
dec
dec
mov
and
add
add
test
loope
repnz
sbb
clc
cmp
add
push
push
mov
xchg
ret
aam
stos
add
xchg
pop
xabort
clc
insl
jae
add
clc
jecxz
push
clc
arpl
add
add
mov
clc
inc
clc
sti
pop
fstpt
lret
add
add
add
mov
add
sub
clc
out
mov
filds
in
bnd
add
cmp
cmp
mov
add
sar
push
int
push
push
add
push
add
loopne
add
sar
mov
pop
add
add
mov
add
pop
loopne
cmp
mov
clc
add
add
in
imul
loope
dec
addr16
mov
add
out
push
adc
add
movsb
clc
data16
xor
add
add
add
sub
add
out
pop
mov
pushl
nop
jmp
dec
pushf
test
mov
sub
mov
hlt
dec
inc
add
xchg
js
jp
out
aam
dec
call
push
clc
jo
add
gs
nop
lret
clc
inc
clc
sar
stos
cmp
xchg
inc
clc
es
xbegin
clc
fwait
xor
add
mov
xchg
fisttps
clc
int
add
add
clc
mov
jne
daa
clc
lcall
clc
rcrl
sub
clc
incl
je
sub
add
clc
add
add
inc
clc
sbb
scas
clc
outsl
adc
add
clc
push
mov
ret
add
repnz
clc
adc
add
stc
pop
adc
add
out
add
jne
mov
and
xchg
or
add
or
xor
add
xor
add
add
data16
repnz
and
add
add
mov
ret
clc
stos
add
add
clc
out
sub
dec
out
scas
mov
clc
or
and
add
add
ds
aaa
and
add
ss
mov
lcall
pop
shll
cld
aaa
push
add
mov
add
addr16
leave
leave
hlt
adc
add
clc
aas
jnp
clc
pop
test
leave
movsb
clc
lods
cmp
clc
fistps
mov
push
mov
xchg
ret
pop
mov
add
popa
add
xor
push
outsb
movsb
clc
imul
xlat
lods
push
rcrb
fsubs
push
fsubs
add
add
inc
clc
stos
xor
stc
std
call
mov
and
pop
or
add
sub
imul
clc
mov
add
add
sub
add
add
ja
adc
add
inc
nop
jmp
movl
cltd
lret
add
pop
dec
xbegin
js
pushf
adc
add
decl
mov
adc
jmp
jle
jmp
push
test
cwtl
shrb
dec
cmp
mov
xchg
ret
cltd
adc
clc
lret
add
add
clc
add
add
push
push
mov
xchg
ret
add
sbb
cmc
pusha
add
mov
xchg
or
add
clc
fidivs
add
sbb
push
je
nop
jmp
movsl
add
or
data16
xchg
sbb
mov
clc
push
clc
fimull
mov
cli
shll
dec
aaa
fidivrs
fistl
stc
pop
dec
add
hlt
pop
clc
int
cs
push
call
sbb
clc
ret
and
add
stos
push
mov
xchg
ret
mov
add
aaa
lods
filds
cmc
arpl
add
test
lea
clc
data16
mov
add
jb
mov
push
mov
xchg
ret
imul
cmp
add
mov
xchg
ret
xchg
add
xchg
jge
add
jnp
pop
loop
loope
outsl
jnp
std
lods
arpl
add
inc
add
mov
or
test
fildl
jnp
clc
cmc
xor
dec
jmp
clc
ficoms
add
test
adc
add
mov
ljmp
add
sbb
adc
insb
adc
add
clc
mov
inc
or
incl
dec
adc
add
je
push
add
xbegin
add
push
aas
pop
add
test
cltd
loopne
dec
inc
clc
and
add
pop
inc
add
and
push
add
sbb
add
push
add
nop
jmp
test
movsl
shlb
add
das
mov
loope
inc
add
shr
dec
in
and
add
add
dec
mov
aaa
mov
add
mov
psubw
push
add
mov
clc
lahf
sbb
add
sub
test
clc
sahf
fwait
mov
add
iret
iret
jnp
clc
mov
push
sti
fwait
push
clc
hlt
jmp
add
in
icebp
fwait
jb
add
clc
ret
flds
clc
xor
add
clc
push
clc
sti
push
sub
push
mov
xchg
ret
jb
push
push
push
mov
xchg
ret
test
sar
sub
test
push
lahf
pop
jge
jae
add
pop
mov
add
pop
sarl
mov
lods
mov
movsb
clc
dec
cmp
push
mov
xchg
ret
add
cmp
push
or
clc
mov
jmp
repz
add
out
rorb
sub
iret
cs
pop
xchg
sbb
clc
imul
cltd
cmp
clc
mov
es
pop
movsl
clc
pop
or
in
cmp
jmp
in
out
iret
dec
xchg
shll
add
es
outsl
inc
add
ret
inc
clc
mov
add
insb
fldt
add
add
mov
idivl
add
dec
push
inc
clc
cmp
out
push
inc
add
scas
mov
clc
cs
cmp
lods
sti
mov
in
add
nop
jmp
pop
jg
pop
mov
mov
add
std
fsubrl
inc
clc
pop
lea
add
data16
icebp
jb
add
div
sar
mov
jo
add
add
jo
add
in
cmp
clc
xor
pause
jmp
add
add
inc
add
lcall
inc
clc
sahf
dec
sub
xchg
cmc
cmp
or
adc
add
clc
pop
scas
mov
add
incl
fldl
mov
add
adc
add
rcl
xor
add
xchg
pop
xabort
clc
cmp
add
clc
lcall
clc
aad
mov
pop
jl
mov
call
clc
add
add
dec
cmpsb
clc
xchg
mov
clc
pop
cmp
stos
js
add
loopne
or
add
inc
add
or
add
add
jge
sub
add
pop
test
fsts
add
clc
cs
clc
cmp
add
xchg
cmc
fadd
clc
cmp
push
out
push
ficoml
add
es
pop
fildl
mov
cmp
clc
xchg
mov
ljmp
nop
jmp
sub
sbb
xchg
sbb
add
aas
pop
lea
arpl
add
gs
xchg
sar
je
clc
daa
clc
mov
stos
out
gs
pop
clc
sub
add
pop
stc
icebp
dec
enter
dec
stos
add
add
loop
test
out
je
clc
xbegin
clc
push
inc
add
push
and
in
pusha
add
loop
psllw
lods
adc
add
clc
std
add
push
sbb
add
jmp
jnp
loopne
pushf
out
sub
enter
clc
mov
add
cmpsl
clc
inc
add
mov
jp
push
ret
clc
push
pop
nop
jmp
imul
fucomp
fdivrl
mov
sub
ret
movsl
pop
pop
cmp
clc
xor
add
push
mov
xchg
ret
mov
clc
dec
test
clc
clc
xor
enter
pop
imul
nop
outsb
jns
jb
add
into
sub
repnz
mov
push
add
repnz
push
jmp
lea
inc
clc
cmp
bound
add
mov
cwtl
stos
jnp
add
adc
add
add
lods
cmp
adc
add
faddl
cmp
mov
pusha
add
fwait
ret
clc
push
add
mov
add
mov
daa
clc
sbb
jae
add
add
sahf
mov
push
add
pushl
rclb
ljmp
out
jnp
sar
inc
clc
xor
add
add
push
push
aam
push
add
mov
ss
cli
xabort
clc
fcom
add
add
cmp
clc
and
add
mov
clc
into
sub
push
nop
jmp
pushf
adc
pushf
test
std
mov
nop
jmp
adc
add
test
adc
clc
idivl
mov
aam
clc
mov
add
add
mov
loop
mov
mov
cmp
clc
and
add
stos
lods
mov
clc
xchg
sbb
jmp
loopne
add
add
sub
icebp
inc
clc
mov
rol
clc
push
add
xchg
mov
cmc
call
clc
ret
rcrl
fsts
add
xabort
add
lret
push
add
addr16
inc
add
stos
jmp
cld
mov
add
add
addr16
test
sub
add
scas
pop
jae
add
jmp
shlb
add
add
push
cli
nop
xor
add
jns
clc
pop
pop
add
add
mov
mov
pop
loopne
int3
fs
int3
stos
lcall
arpl
add
add
xor
add
clc
mov
add
insb
daa
clc
sbb
sar
rcrl
clc
lret
cli
pop
clc
or
into
mov
dec
adc
out
mov
adc
fwait
push
add
mov
clc
in
inc
clc
aad
clc
xchg
push
test
xbegin
add
pop
push
clc
bound
add
clc
mov
mov
cmc
sub
into
jnp
mov
cmp
clc
xchg
fwait
xchg
inc
clc
inc
clc
xchg
lods
mov
clc
test
mov
xor
add
clc
adc
add
jae
add
add
rorb
movsl
clc
adc
add
add
fwait
cmc
daa
clc
rclb
clc
pop
sar
fcompl
clc
mov
jae
add
add
mov
clc
xchg
push
jne
nop
jmp
cmc
repz
xchg
mov
cmp
mov
xor
add
mov
sahf
push
pop
out
or
je
clc
sbb
pop
cmp
faddl
add
add
or
clc
inc
clc
dec
xor
add
push
rep
nop
jmp
add
adc
push
fstpl
clc
cli
and
add
add
sbb
pop
jns
clc
and
out
sub
clc
or
repnz
jno
add
mov
loopne
out
mov
clc
fwait
enter
scas
mov
clc
dec
int
jl
int
clc
mov
rcl
push
add
xor
add
add
jle
mov
hlt
out
jp
ds
cmp
add
js
clc
cld
jne
clc
cmp
add
xor
add
clc
cmp
in
xchg
and
add
clc
xchg
loop
sti
movsl
clc
pop
iret
rcrb
clc
jno
add
mov
add
add
add
fcompl
sti
sbb
out
pop
push
add
mov
pop
inc
add
clc
jae
add
es
sbb
imul
push
inc
clc
divl
clc
sar
out
insb
shl
clc
cmp
add
and
add
idivb
fcmovbe
lcall
jmp
jle
mov
movl
add
loope
loope
push
movzwl
nop
jmp
jle
push
repz
out
js
add
cmpsb
clc
push
jmp
mov
add
push
shr
push
mov
xchg
ret
movsl
fs
or
inc
clc
adc
add
add
test
icebp
cmp
add
add
clc
push
clc
lods
jo
add
sahf
outsb
sar
add
clc
ret
add
in
icebp
add
add
and
add
cmp
add
aad
clc
mov
cmpsl
clc
scas
in
fidivrs
mov
std
lods
jl
hlt
loop
sbb
add
clc
daa
clc
cmp
pushl
push
mov
xchg
ret
dec
test
stos
mov
clc
jecxz
cmp
sbb
inc
add
out
outsl
je
xor
sbb
dec
outsb
jle
push
mov
nop
jmp
iret
mov
push
add
shll
lahf
xor
add
in
adc
shlb
add
add
add
add
das
pop
lea
add
and
add
mov
xchg
imul
clc
lods
sar
sti
push
push
add
sbb
decl
cmc
jmp
pop
add
add
negl
sbb
xor
xor
nop
jmp
fstpl
clc
xchg
mov
add
inc
clc
mull
repnz
mov
add
inc
add
pop
add
add
shrb
pop
loope
out
mov
sar
jmp
push
stc
lock
cmp
insb
fsubs
add
mov
imul
jns
jb
add
inc
clc
lock
add
cmp
enter
inc
add
int
fistpll
mov
inc
add
test
test
fs
loopne
ljmp
add
mov
lcall
int
std
mov
cmp
cmp
push
mov
xchg
ret
aam
pop
sub
mov
clc
pop
mov
lret
lret
jae
add
pusha
nop
jmp
cltd
or
jecxz
pop
jg
call
add
nop
jmp
add
add
sbb
xchg
cli
dec
cmpsl
clc
add
add
int
add
lods
lea
rcl
imul
data16
xchg
fldt
pop
jge
ret
clc
push
push
xor
add
das
stos
jne
repnz
clc
pop
xchg
test
push
add
sar
add
push
and
inc
add
jnp
std
cmp
xchg
add
add
push
adc
add
xabort
add
add
shlb
clc
imul
lcall
xchg
cmp
add
sbb
sbb
add
clc
mov
clc
sub
clc
and
add
push
jmp
fisttpll
sbbl
add
stos
xchg
mov
pop
sbb
inc
add
xlat
jecxz
xchg
or
in
and
cmp
clc
mov
xchg
and
add
add
add
aas
push
loopne
insl
pop
clc
je
sahf
and
add
add
sbb
add
clc
push
push
cltd
iret
xor
add
fisubs
mov
sar
clc
test
jmp
mov
or
dec
or
mov
shlb
mov
clc
sbb
je
pop
push
add
sbb
dec
inc
add
pop
xchg
gs
clc
pop
lea
push
fistl
add
inc
clc
test
clc
roll
ficoms
add
clc
fists
mov
adc
add
arpl
add
clc
test
mov
fidivs
addr16
mov
clc
pop
in
cmp
sub
add
loopne
inc
add
fnstcw
lret
or
pushf
in
lea
nop
jmp
jns
cltd
pop
mov
xchg
movsb
clc
fdivr
and
and
aas
fmull
push
adc
push
add
bound
add
cmp
nop
jmp
xchg
add
aam
mov
add
xor
pop
clc
in
loope
test
mov
add
mov
pop
mov
ret
clc
mov
clc
pop
filds
add
clc
mov
add
loopne
mov
and
jmp
iret
xchg
stos
pop
add
icebp
in
dec
or
clc
ja
add
dec
push
and
add
jnp
test
pop
add
clc
cmp
add
clc
cmp
movsb
clc
pop
lea
dec
pop
es
loope
mov
clc
call
add
clc
sar
add
nop
jmp
cmpsl
add
pop
insl
add
add
add
add
mov
cmpsb
clc
data16
add
inc
add
inc
clc
cltd
xor
add
add
sbb
add
pop
or
push
aas
scas
daa
clc
cmpsl
clc
flds
add
scas
fwait
mov
mov
mov
clc
mov
clc
push
add
mov
ret
clc
imul
pop
clc
sub
add
or
loope
enter
mov
jne
dec
or
sub
mov
clc
jb
add
out
out
mov
sbb
add
arpl
add
clc
jno
add
add
cmpsl
clc
in
and
or
cmp
pop
jnp
add
push
lods
mov
das
and
add
clc
shl
push
push
push
mov
xchg
ret
xchg
pop
add
lods
sbb
nop
jmp
repz
nop
jmp
pop
add
jnp
add
sbb
sub
clc
pop
clc
push
sbb
test
jnp
add
add
movsl
jno
add
out
popf
out
mov
cmp
clc
test
insl
outsl
or
add
add
add
clc
xor
add
imul
clc
jne
in
outsl
dec
stos
js
inc
clc
xor
add
icebp
xabort
or
cmp
add
test
clc
dec
mov
mov
into
es
in
sub
add
bound
add
test
nop
jmp
xchg
add
push
adc
clc
cmp
sub
sbb
add
test
sub
out
arpl
add
add
cmp
adc
add
clc
xchg
inc
clc
pop
pop
push
stos
push
add
clc
popf
in
add
add
adc
aad
insb
add
loop
ds
add
xor
clc
arpl
add
xchg
scas
inc
add
sbb
test
xor
add
imul
pop
loop
sbb
inc
clc
fistpl
push
push
push
mov
xchg
ret
test
xchg
sbb
inc
clc
ljmp
imul
add
add
add
movsb
clc
cmp
add
and
daa
clc
xlat
out
and
add
lret
cli
mov
add
repz
imul
loopne
mov
add
mov
das
add
add
xor
add
gs
adc
inc
clc
sbb
clc
cltd
daa
clc
sbb
pop
clc
inc
add
jl
clc
lret
mov
clc
push
add
jb
add
clc
sar
xor
add
cli
and
add
cmpsl
clc
pop
scas
sar
shl
mov
aaa
cmc
movsl
clc
sub
add
add
add
data16
popf
cmp
jge
clc
mov
add
inc
add
sub
xor
add
add
add
mov
clc
jno
add
add
add
push
sar
mov
nop
out
lods
pop
clc
imul
lods
jno
add
out
dec
std
lcall
add
cmp
add
stos
test
pop
xor
add
sbb
pop
pop
pop
pop
clc
insb
lock
in
nop
and
lock
mov
jg
fcomps
add
mov
inc
add
xchg
sar
pop
sti
pop
loope
dec
pop
sbb
add
push
mov
xchg
ret
lea
aam
loope
ss
clc
cmpsb
clc
fistl
add
nop
jmp
mov
add
das
xabort
clc
lods
cmp
add
or
add
fbld
xchg
cmpl
add
add
pop
fcompl
clc
mov
cmpsl
clc
scas
push
cs
cmp
ffreep
clc
test
out
insb
jg
mov
dec
and
add
je
clc
inc
add
test
mov
add
pop
sub
cmpsb
clc
std
inc
clc
push
fwait
sbb
aaa
xor
inc
clc
lea
add
adc
add
repnz
mov
mov
add
add
jae
add
add
add
cmp
clc
das
mov
clc
je
shlb
cltd
mov
in
mov
out
jle
xchg
ss
add
js
sub
jg
pop
clc
imul
cmc
inc
add
or
clc
je
clc
inc
add
xchg
lods
dec
cs
movzwl
nop
jmp
stos
adc
add
inc
clc
sar
clc
gs
add
add
xor
add
add
das
or
xor
add
add
add
add
and
add
add
insb
lcall
push
fcomps
add
jmp
sahf
sub
imul
push
push
cmp
clc
inc
add
pop
add
add
add
mov
aaa
bound
add
mov
add
add
clc
add
add
sbb
test
aas
add
nop
jmp
std
test
clc
sbb
clc
cmp
ret
or
cld
push
add
inc
add
jbe
insl
cmp
sub
stos
push
xchg
mov
sar
add
fimull
aad
cmp
add
movsl
clc
jg
inc
add
das
negl
test
nop
dec
sahf
sahf
add
add
mov
inc
add
and
push
add
incl
stos
jns
into
outsb
hlt
and
add
add
mov
push
clc
inc
add
fldenv
add
add
mov
pop
push
jmp
jle
push
add
mov
xchg
pop
sub
clc
stc
jne
and
add
data16
mov
and
add
add
push
xchg
pusha
add
cmp
test
out
pop
loop
and
pop
adc
add
adc
add
add
rcll
add
mov
and
add
add
mov
lahf
jnp
test
clc
lock
jb
add
test
out
call
add
add
clc
sub
clc
push
lods
nop
jmp
lea
xchg
add
adc
add
mov
clc
mov
clc
ret
clc
jb
add
sbb
add
cmp
clc
outsb
mov
add
pop
cltd
dec
push
jmp
or
outsl
imul
add
imul
fnstenv
xor
add
cmp
cmove
icebp
into
sbb
and
add
add
jae
add
sbb
add
mov
clc
out
push
clc
nop
xchg
mov
repz
sub
add
push
clc
xchg
push
out
outsl
enter
jg
add
jnp
xchg
repz
clc
or
add
add
push
add
xor
add
push
icebp
and
add
clc
xor
add
lcall
xlat
scas
das
pusha
add
sub
clc
pusha
add
in
push
jnp
add
pop
jp
mov
push
add
adc
add
out
fsubp
clc
add
add
or
pop
push
mov
clc
imul
dec
add
add
add
jmp
add
pop
ret
clc
es
dec
mov
adc
add
sti
cmp
cmp
push
add
and
add
mov
clc
jnp
hlt
imul
clc
sbb
inc
clc
xchg
xbegin
in
jne
clc
cld
mov
clc
out
jae
add
jg
nop
jmp
movsl
stos
push
jb
push
bound
add
clc
push
clc
pushf
cmpsl
clc
call
cmp
fwait
decl
push
add
add
test
add
imul
push
xor
add
or
out
movsb
dec
cmp
add
jno
add
add
mov
or
add
sbb
jb
add
add
movsl
clc
repnz
clc
ret
clc
fnstcw
fisttps
clc
and
add
test
add
push
add
repz
add
ret
add
add
cmpsb
clc
mov
fdivs
clc
in
inc
clc
test
sbb
clc
mov
sub
shrl
clc
cmp
lods
push
add
nop
mov
cs
mov
add
scas
fs
outsl
arpl
add
enter
add
pop
sbb
jmp
addl
iret
adc
add
xchg
dec
imul
call
add
add
jmp
das
sbb
add
pop
push
mov
xchg
ret
sub
dec
add
cmp
mov
clc
mov
add
sbb
mov
clc
mov
jmp
mov
nop
jmp
mov
add
cmp
clc
inc
add
jmp
loop
leave
out
call
xor
add
and
add
add
cmp
clc
pop
jbe
clc
out
ret
clc
shll
add
and
add
cmp
jg
add
movsb
clc
nop
scas
pop
fsubs
add
add
add
aad
add
or
pop
mov
inc
clc
sub
xchg
push
clc
lock
fwait
outsb
cwtl
pop
add
add
and
add
lock
mov
xor
add
scas
jl
cmp
arpl
add
mov
add
clc
pop
fiadds
add
mov
clc
pop
aas
and
or
add
adc
jp
clc
mov
ljmp
add
ds
push
add
sbb
arpl
add
add
and
add
out
inc
clc
xchg
jg
add
mov
iret
inc
add
jb
add
jo
add
aaa
pop
decb
inc
clc
cmp
test
jle
leave
cwtl
mov
sub
add
fwait
ret
clc
test
and
add
clc
mov
inc
add
inc
add
push
iret
xchg
rol
clc
add
add
cmp
jmp
clc
cld
mov
clc
bound
add
mov
nop
jmp
fisttps
loopne
sub
clc
clc
mov
clc
mov
clc
xchg
hlt
cwtl
ret
clc
inc
clc
fsincos
jl
sub
fs
and
add
clc
mov
insl
stos
mov
push
add
loop
cmp
sti
movsb
clc
xor
add
add
cli
adc
add
add
add
in
mov
clc
cmpsb
clc
or
add
lods
or
jno
add
clc
icebp
ja
cli
xor
mov
push
mov
xchg
ret
add
clc
inc
add
loopne
movsb
clc
adc
lcall
clc
enter
xor
add
push
add
xchg
call
loopne
push
add
movsl
clc
dec
sbb
pop
cli
add
add
cltd
cmp
in
jne
int
clc
jecxz
xlat
fwait
dec
movsl
clc
cmp
jae
add
add
inc
add
adc
mov
xor
add
clc
repnz
add
inc
clc
dec
dec
jns
clc
xchg
xor
add
xor
add
jne
push
mov
clc
mov
lret
push
add
vmulps
hlt
sarb
ret
es
mov
cmp
mov
sbb
clc
jne
cmp
shlb
add
mov
cs
add
dec
pushf
cmc
xchg
repz
out
dec
mov
add
loope
xchg
or
add
movsb
clc
rorb
hlt
xchg
loop
pop
test
ds
add
int3
stos
adc
add
cmp
clc
movsl
clc
lods
pop
push
add
cmpsl
clc
add
add
es
dec
jne
fiaddl
add
clc
mov
cmp
clc
fisubrs
xbegin
testb
xchg
bound
add
inc
clc
mov
test
mov
add
or
iret
pop
push
add
push
mov
xchg
ret
fists
in
push
add
add
add
scas
mov
clc
sahf
jno
add
add
xlat
cmp
inc
clc
add
add
clc
enter
clc
je
clc
cmpsb
clc
test
add
add
clc
or
clc
or
out
popa
add
inc
clc
test
mov
movsl
clc
adc
add
and
add
clc
rcll
fdivrs
xchg
cmpsb
clc
dec
mov
add
push
cmp
add
add
add
stos
scas
inc
add
cmpsl
clc
mov
jg
add
xchg
int
in
ja
xor
add
add
cmpsb
clc
dec
push
add
mov
clc
dec
mov
add
push
add
jo
add
inc
add
and
add
add
mov
mov
add
es
sbb
clc
or
clc
cld
incb
clc
xor
add
add
add
addr16
cmp
mov
inc
add
cs
adc
add
clc
or
adc
add
clc
sarl
ret
in
in
add
add
je
xor
add
clc
mov
add
sbb
pop
jl
clc
pop
pop
xchg
test
clc
or
add
pop
inc
clc
sbb
clc
xor
add
lea
jmp
nop
jmp
test
movsl
cmpl
add
fcom
roll
add
add
push
push
or
add
rol
clc
jbe
in
dec
xchg
add
add
cmc
or
pop
test
mov
cmp
mov
es
mov
inc
add
loopne
jae
add
cmp
xchg
cs
mov
clc
pop
dec
arpl
add
push
jmp
std
add
push
jecxz
jo
add
pop
and
add
jb
add
sahf
int
js
clc
adc
aaa
sbb
jnp
add
test
mov
push
xor
nop
jmp
add
cmpsl
xchg
add
pop
ret
clc
and
movzwl
add
iret
in
push
add
push
je
add
sub
ja
clc
rclb
clc
data16
insl
fadds
mov
dec
outsb
int
clc
add
add
ffree
clc
mov
pusha
add
movsb
clc
mov
add
rcl
adc
add
clc
adc
xchg
dec
cld
jl
popf
xchg
xor
clc
in
dec
aam
dec
nop
mov
and
add
hlt
iret
cmp
fxch
jg
jne
jg
add
jno
add
xchg
mov
clc
repz
fisubrs
aaa
movsl
clc
cwtl
push
push
call
mov
xchg
ret
movsl
push
add
es
pop
adc
add
clc
jmp
data16
xlat
mov
add
add
mov
pop
dec
stos
movsb
clc
cmp
jp
nop
xchg
mov
clc
icebp
mov
add
add
outsl
dec
mov
clc
roll
add
out
in
push
add
loope
negb
inc
clc
or
stos
pop
add
inc
clc
cmp
clc
push
shrd
push
add
xlat
scas
pop
cmp
add
and
add
add
mov
pop
clc
inc
clc
clc
jb
add
mov
data16
xchg
push
clc
movsb
clc
imul
sub
clc
addr16
in
push
add
clc
and
xchg
cs
sti
sub
outsb
jns
add
add
testl
add
xabort
sbb
add
add
mov
clc
add
mov
clc
in
jne
clc
into
jb
add
mov
xchg
mov
mov
repz
iret
mov
clc
es
call
jno
add
inc
clc
lret
xchg
push
add
pop
fcomps
int
sub
pop
clc
or
add
jmp
out
hlt
xlat
enter
clc
add
add
clc
mov
es
push
mov
add
and
add
clc
std
jb
add
sar
int
clc
jo
add
shlb
add
scas
into
mov
xlat
lods
add
add
cmpsl
clc
cmpsb
clc
int3
adc
add
dec
xlat
mov
clc
sbb
cmc
jbe
add
pushf
aam
clc
fidivs
add
add
clc
cltd
mov
es
cmp
xor
clc
mov
dec
inc
clc
add
add
cmp
sbb
add
call
push
adc
rorb
insl
shr
cmp
sbb
add
mov
mov
xchg
ret
xchg
jns
add
insb
pushf
xor
add
sahf
add
clc
leave
scas
lea
add
stos
sahf
add
adc
add
out
daa
clc
xor
arpl
add
xchg
mov
sti
aas
jne
add
fwait
sbb
clc
clc
out
jl
in
inc
clc
sub
arpl
add
clc
stos
adc
add
clc
inc
add
imul
add
add
pop
and
add
mov
clc
inc
add
incb
add
add
cmp
clc
aaa
fisubl
add
testb
xlat
jnp
clc
pusha
add
pop
inc
clc
cmp
add
leave
or
dec
pop
jb
add
add
out
fsubrl
jns
loope
dec
or
add
out
and
add
cmp
clc
push
fistpl
fcomps
clc
enter
das
mov
outsb
and
add
and
add
inc
clc
ds
pop
add
outsb
and
add
adc
add
clc
jns
clc
into
adc
clc
daa
clc
test
dec
and
cmp
clc
push
mov
cmp
rcl
cli
pop
incl
enter
jl
add
add
inc
add
cmp
bound
add
scas
adc
add
add
cmp
sbb
mov
adc
jmp
mov
jmp
push
daa
clc
test
iret
scas
cmp
dec
lock
mov
clc
jg
cmp
add
test
mov
pusha
add
jge
add
adc
add
addr16
ret
clc
das
jno
add
add
push
push
sbb
mov
daa
clc
fstpt
fildl
scas
call
mov
xchg
ret
test
cwtl
add
mov
mov
clc
push
add
cwtl
jae
add
test
int3
sbb
cmp
test
add
nop
jmp
push
jle
xchg
xchg
push
push
gs
cltd
adc
add
imul
or
clc
inc
add
cli
scas
add
add
add
add
xor
add
push
mov
mov
add
insb
sti
mov
scas
stc
sar
cwtl
loopne
xlat
mov
mov
sub
mov
or
mov
in
xor
clc
out
dec
push
add
arpl
add
cmp
add
pusha
add
stos
pop
fldt
clc
sahf
and
add
popf
test
clc
pop
mov
add
clc
cli
cmp
add
incl
add
mov
cli
pop
movd
clc
mov
addr16
dec
ds
dec
sub
inc
clc
aad
sub
cli
dec
imul
insb
inc
add
rcrb
sar
push
nop
jmp
add
mov
cmp
sub
xchg
lods
jle
clc
stos
xchg
int
hlt
ljmp
xbegin
add
mov
clc
test
xchg
imul
cld
or
stos
mov
inc
add
lock
in
mov
clc
out
mov
jmp
add
inc
add
xchg
jl
icebp
xchg
daa
clc
cmp
cmpsb
clc
sbb
jmp
add
stos
std
push
add
std
sub
add
add
mov
repz
icebp
xchg
ret
cmp
sar
aad
and
add
das
gs
negl
loopne
cmp
add
arpl
add
fwait
dec
in
insb
inc
clc
sbb
mov
add
rcr
out
cmp
es
cmp
xor
add
push
movsb
clc
or
cmpsb
clc
and
or
add
add
inc
clc
shlb
add
mov
insb
aaa
inc
add
pop
das
jns
xchg
pop
mov
fcmovnb
clc
sti
adc
add
add
clc
faddl
and
add
fcomi
or
stos
push
adc
add
xchg
mov
add
inc
add
mov
pop
ja
loopne
insl
pop
dec
dec
mov
mov
pop
leave
fwait
jp
inc
clc
xor
add
pop
clc
out
push
add
jae
add
pop
lret
jnp
clc
stos
ss
aam
clc
sahf
ja
clc
jecxz
mov
andl
aas
add
imul
faddl
clc
lods
mov
mov
or
xchg
fnstcw
loope
data16
mov
insl
out
mov
mov
inc
add
pop
or
push
add
jns
clc
mov
clc
mov
pop
nop
jmp
inc
mov
push
add
cltd
cmp
dec
int
imul
in
div
inc
clc
shl
clc
ss
xabort
and
add
cmp
jmp
add
imul
es
cmp
fs
or
clc
push
add
jg
cmpsb
clc
cs
push
push
sbb
add
test
add
int3
and
add
clc
push
push
add
cmc
dec
movsl
mov
clc
inc
add
out
xchg
xlat
lods
cs
clc
aas
mov
add
negb
ja
add
nop
call
dec
sti
fists
ficompl
xlat
sbb
push
mov
xchg
sbb
cmp
adc
add
pop
ret
hlt
insb
mov
add
addr16
pushf
lods
sete
ja
add
xchg
dec
pop
clc
imul
bound
add
pop
cmp
add
inc
clc
jne
add
push
xchg
cmp
clc
das
mov
jb
add
clc
push
outsl
cmp
push
rep
nop
jmp
xchg
pop
movsl
jb
repz
add
nop
jmp
xchg
imul
push
repnz
jbe
jo
add
add
add
add
lock
aaa
sbb
shrb
fidivrl
mov
negl
xchg
xchg
pop
add
add
clc
cld
dec
xbegin
xchg
sub
sub
aam
cli
xchg
mov
test
cltd
movsl
clc
das
sar
clc
mov
lret
mov
notb
lret
ficompl
push
clc
mov
clc
rcrb
add
nop
jmp
add
pop
clc
or
inc
add
loop
cmpsl
clc
sub
clc
mov
jg
insb
sbb
inc
clc
inc
add
cmp
clc
cmp
pop
sar
push
add
cmp
clc
gs
lea
add
clc
or
push
adc
add
adc
push
clc
lret
add
sar
in
int3
test
xor
add
mov
outsl
xchg
pop
bound
add
jecxz
add
nop
jmp
mov
movsl
movsl
clc
mov
loop
pop
out
sar
clc
cmp
mov
clc
push
mov
nop
jmp
fstl
pop
pop
jmp
je
fbstp
jmp
add
lea
jns
dec
in
mov
popa
add
lcall
push
adc
add
cmpsl
clc
enter
mov
or
pop
test
fistl
add
add
add
add
push
nop
jmp
push
add
repz
scas
cmp
loopne
pop
push
xchg
mov
push
add
add
adc
add
clc
ljmp
inc
add
data16
push
add
cmpxchg
jnp
clc
cmp
clc
clc
fidivrs
pop
stc
xor
add
add
loope
inc
add
adc
jno
add
clc
mov
and
add
sbb
add
or
adc
add
jae
add
add
adc
clc
xchg
jnp
call
jmp
add
imul
pop
cmc
repz
xchg
imul
add
aaa
fnstenv
add
xor
fcomps
mov
push
mov
xchg
ret
jg
test
xlat
lcall
add
sbb
add
jl
clc
sbb
lret
js
add
dec
mov
xor
add
add
imull
inc
clc
flds
adc
push
cmp
sar
add
gs
sar
clc
push
clc
xchg
outsl
mov
jl
pop
shlb
sbb
xchg
xchg
stc
mov
add
nop
jmp
dec
repz
push
mov
into
jne
mov
adc
scas
sub
adc
add
xor
nop
jmp
std
pop
jmp
xchg
inc
add
jno
add
aas
adc
add
loope
cmp
ljmp
add
clc
jae
add
sbb
shll
clc
xabort
js
clc
add
jbe
lock
lahf
pop
clc
push
ss
add
add
scas
scas
inc
add
std
test
scas
sub
clc
loope
xchg
out
jl
clc
jbe
push
clc
cmp
mov
je
vshufps
xor
add
add
mov
mov
clc
pop
jno
add
daa
clc
cmc
rcr
rcl
pusha
add
dec
and
add
jl
jmp
add
int
inc
add
imul
clc
inc
add
ljmp
mov
clc
push
stos
jecxz
adc
add
xchg
jmp
cmp
aas
jne
add
inc
clc
xor
movsl
clc
nop
stos
pop
clc
iret
jne
lock
test
leave
fildll
lods
pop
outsb
out
dec
push
and
add
xor
nop
jmp
jnp
rep
test
adc
loopne
int3
or
clc
mov
cmp
add
mov
shr
add
add
add
cmp
clc
fwait
cmpsl
clc
push
add
xabort
mov
add
frstor
add
cwtl
inc
add
xlat
inc
clc
mov
clc
cmpsl
clc
loope
dec
fwait
pop
xbegin
add
cs
cmpsl
clc
cmp
ljmp
lahf
imul
xchg
dec
outsb
sub
adc
test
sbb
mov
clc
sbb
pop
data16
inc
clc
sub
inc
add
cmp
or
add
fs
pop
movsl
clc
stos
lcall
fistpll
mov
clc
clc
cli
dec
jbe
testl
rolb
movlhps
adc
add
mov
add
dec
mov
jg
jnp
jb,pn
add
mov
add
aam
icebp
es
ss
pop
push
push
rclb
add
jb
jmp
adc
in
or
daa
clc
enter
dec
mov
aas
cmp
dec
test
push
cmp
and
add
aas
adc
or
add
xor
add
add
outsl
ss
clc
xchg
in
cmp
loopne
jmp
cmc
pushf
aam
mov
popa
add
stc
sti
xor
mov
mov
add
es
mov
cmp
jmp
loopne
mov
push
pop
add
sub
cmp
xor
add
rolb
nop
jmp
jnp
movsl
jns
fwait
lret
pop
cmp
inc
clc
hlt
sti
push
nop
mov
sub
push
add
jne
ret
clc
xchg
pop
ljmp
xchg
dec
add
add
add
sar
push
cmp
xchg
xlat
call
add
mov
xchg
dec
adc
push
mov
xchg
ret
adc
arpl
add
out
mov
jl
clc
shll
add
add
add
mov
rclb
jb
add
push
add
mov
jecxz
or
add
clc
and
add
xchg
in
cmp
popa
add
jg
push
add
je
cmp
mov
xchg
ret
movsb
xchg
cmp
add
nop
jmp
add
or
mov
or
mov
clc
pop
pop
and
add
cmp
dec
push
call
nop
jmp
push
push
sub
push
mov
push
nop
jmp
add
mov
jg
iret
jb
mov
clc
repnz
imull
addr16
adc
add
clc
inc
add
cmp
rep
nop
jmp
mov
pop
push
add
dec
jo
add
xchg
xlat
ja
stos
xchg
sbb
push
out
inc
add
push
movsl
stc
xor
push
push
clc
repz
jo
add
jae
add
hlt
mov
imul
add
mov
movsb
nop
jmp
jle
inc
push
jns
add
add
outsb
xchg
or
add
imul
pop
dec
dec
push
add
mov
or
mov
xabort
or
cmc
dec
dec
sub
fldl
and
add
add
add
idivl
jne
add
clc
cld
in
pusha
add
daa
clc
gs
sar
mov
dec
and
add
add
fwait
push
adc
add
cmpsl
clc
mov
add
add
in
add
add
add
idivb
loopne
and
add
xchg
jo
add
dec
mov
add
pusha
add
repz
add
xchg
jae
add
call
push
insl
daa
clc
push
add
mov
clc
jb
add
cmp
cltd
jnp
add
add
jg
repz
add
lret
popa
add
fimuls
clc
cld
popa
add
sub
pop
inc
clc
xchg
movsb
clc
insl
xchg
push
cld
into
mov
into
fwait
je
icebp
mov
inc
clc
ret
clc
and
add
jecxz,pt
jmp
add
in
mov
pop
clc
out
or
mov
jmp
lea
mov
stos
jmp
scas
pop
sub
add
cmp
int
clc
lret
test
xchg
cmp
mov
ror
test
add
pop
jb
add
nop
jmp
add
stc
push
cmpsl
test
outsb
fcoml
sub
cltd
jns
clc
fildl
push
jb
add
stc
pop
int
add
pop
sbb
outsl
pop
pop
jnp
std
repz
inc
add
xor
add
mov
add
mov
nop
jmp
adc
sbb
jae
add
lea
nop
jmp
pop
add
adc
sahf
js
cmp
jne
nop
jmp
add
jb
aam
xlat
repz
aad
xor
add
push
add
xor
into
negb
add
outsl
xor
aas
arpl
add
clc
je
push
nop
jmp
jb
pop
pop
add
or
movsl
clc
sub
pushf
cmp
add
cmp
rol
clc
mov
mov
nop
jmp
push
add
out
or
clc
fbld
shrl
jmp
imulb
mov
add
fsubrl
mov
xbegin
nop
dec
mov
clc
cli
fildll
add
mov
call
add
jecxz
cwtl
mov
cmp
cmp
add
gs
adc
clc
sahf
or
adc
add
and
add
inc
add
test
sub
clc
repz
cmpsb
clc
mov
clc
int
pop
ret
push
dec
xor
add
or
add
add
adc
clc
mov
add
jns
sub
fisubl
add
mov
fistpll
pop
jecxz
call
add
add
add
sub
push
add
shlb
add
ds
in
jbe
sub
or
cmp
jae
add
xchg
mov
clc
cmp
add
add
add
mov
add
outsb
push
in
or
push
cmp
pop
add
add
sub
clc
lea
add
add
cmp
xchg
ja
mov
mov
fcoml
add
xbegin
ds
clc
push
xor
add
mov
add
push
add
sbb
clc
clc
mov
add
std
mov
and
add
pusha
add
add
pop
mov
nop
jmp
cmc
movsl
outsl
add
xchg
xchg
sbb
dec
repnz
out
and
add
clc
adc
add
gs
jge
fisubl
add
push
xor
add
int
clc
ja
push
push
cwtl
mov
sbb
mov
mov
add
clc
push
and
dec
mov
adc
add
mov
out
mov
out
and
add
add
add
jbe
add
out
movsl
clc
adc
add
or
add
xchg
xbegin
mov
clc
jno
add
clc
mov
add
push
ljmp
inc
and
jmp
adc
inc
mov
clc
cmpsl
clc
inc
add
int3
xor
add
add
add
add
arpl
add
push
push
mov
xchg
ret
iret
dec
sbb
sub
mov
add
adc
sbb
fcmovnbe
adc
clc
jbe
dec
clc
jge
mov
cmp
inc
add
rcl
and
add
cld
bound
add
imul
test
dec
nop
std
test
aam
clc
shrl
clc
cmp
clc
es
ss
adc
add
and
add
add
clc
mov
imul
add
mov
pop
nop
arpl
add
clc
cmp
fidivrl
adc
add
cmpsl
clc
mov
fldt
clc
add
fidivrs
pop
pop
jg
ja
clc
lock
ss
clc
mov
call
nop
jmp
fists
push
push
add
icebp
jne
jp
add
mov
sbb
add
mov
add
adc
add
popa
add
mov
clc
add
add
add
clc
add
and
pushf
cwtl
xor
cmp
xabort
mov
push
add
jo
add
mov
adc
add
clc
popf
add
add
pop
xor
add
mov
out
cwtl
int3
icebp
lock
fdivrl
clc
push
mov
nop
jmp
or
add
push
sbb
sbb
adc
or
add
iret
pusha
add
adc
clc
out
push
adc
add
add
fiaddl
add
pop
repz
xchg
cmp
clc
push
add
xor
les
push
mov
xchg
ret
add
sub
popa
add
add
add
add
mov
jle
xor
nop
jmp
jg
test
add
imul
cmp
add
add
cli
or
adc
add
sbb
add
add
inc
add
das
hlt
add
add
cmpsb
clc
arpl
add
xbegin
mov
add
dec
sbb
nop
xchg
mov
xchg
push
add
sub
mov
add
fists
add
daa
clc
jecxz
sar
fsubp
clc
dec
in
mov
add
xchg
mov
or
mov
clc
pop
xor
add
aaa
cmp
das
pushf
jns
cmp
cmp
ret
clc
cmp
xbegin
mov
xchg
ret
adc
pop
dec
jl
push
add
fsubrs
rclb
dec
add
push
iret
or
test
add
push
jmp
nop
jmp
xchg
out
xchg
jmp
clc
lock
add
cmp
add
and
add
add
cmp
add
stos
repnz
sbb
fs
jo
add
fadds
and
add
stos
mov
jmp
imul
add
enter
aaa
icebp
dec
inc
clc
aam
clc
hlt
ljmp
add
clc
addr16
add
add
mov
dec
and
add
cmc
cwtl
pop
jge
add
aam
clc
es
or
enter
jg
in
xabort
clc
nop
test
pushf
adc
add
add
mov
ret
fdivr
mov
pop
sub
je
leave
cwtl
push
add
cmc
mov
clc
xchg
mov
add
jecxz
jnp
daa
clc
cmp
clc
push
pusha
add
jae
add
clc
mov
cmc
cli
pop
out
jle
inc
nop
jmp
mov
add
clc
movsb
clc
lods
and
lahf
mov
clc
mov
add
aaa
add
rolb
xor
add
sbb
inc
add
xchg
cs
clc
mov
or
add
sbb
and
add
addr16
inc
clc
pop
jl
je
nop
jmp
dec
add
dec
jmp
clc
iret
lods
adc
add
add
add
adc
add
sar
imul
cmp
add
inc
add
inc
add
mov
sub
clc
xchg
jae
add
sub
add
pop
shrl
mov
and
add
sbb
add
pushf
jbe
leave
cmp
clc
mov
add
int3
push
bound
add
adc
add
add
int3
push
clc
rorl
fidivrl
cmpsl
clc
je
clc
mov
add
sub
sahf
insb
push
lret
and
add
imul
sti
add
add
add
push
add
clc
jno
add
scas
pop
mov
std
fwait
mov
das
jp
lock
xor
add
out
fiadds
fsubl
inc
clc
in
imul
mov
outsl
pop
cmpsb
clc
jp
inc
add
iret
clc
push
xchg
add
jle
push
movsb
add
scas
sahf
mov
add
push
add
add
add
addr16
imul
pop
jnp
add
dec
mov
clc
inc
clc
dec
jl
clc
or
clc
rclb
mov
cmp
cmp
add
mov
pop
clc
xor
add
add
xabort
data16
cmpsl
clc
scas
divl
lods
in
mov
lret
cmpsl
clc
clc
jb
add
out
adc
mov
or
imul
cmp
add
enter
es
call
nop
push
clc
imul
inc
add
das
jo
add
mov
add
out
xlat
sbb
lret
fwait
jge
add
data16
gs
popf
cmp
add
push
xchg
pushf
mov
xchg
jnp
mov
add
pop
std
pop
aad
leave
pop
push
loop
lret
mov
clc
cmp
mov
clc
cmp
not
pop
fidivrl
xabort
xor
add
adc
lods
frstor
flds
test
jmp
imul
cmp
add
in
divb
add
clc
in
sbb
jge
lret
xchg
int
sar
push
loope
clc
dec
mov
mov
add
xor
add
add
add
imul
clc
mov
add
rorl
cmpsb
clc
push
add
push
imul
clc
sbb
add
jg
lret
lret
adc
add
add
push
push
mov
xchg
ret
sub
mov
mov
clc
into
imul
mov
es
das
mov
clc
push
clc
js
clc
clc
sub
clc
in
aas
aaa
pop
jb
add
push
add
imul
mov
pop
ja
test
sub
add
loopne
and
add
lock
clc
inc
clc
cmp
clc
cmp
sub
clc
or
mov
xchg
nop
jmp
movsb
dec
add
setp
clc
and
repnz
add
jns
add
test
sti
aad
test
or
dec
pop
std
in
xchg
sub
lret
add
sbb
add
add
mov
nop
ret
iret
enter
jno
add
aaa
scas
push
jae
add
add
sbb
add
cltd
xchg
out
mov
outsb
movsb
clc
xchg
addr16
inc
add
push
add
sub
sub
add
dec
lods
xor
add
clc
mov
ret
clc
fwait
mov
mov
add
stc
fdivrs
clc
loop
push
sub
clc
popl
ret
xchg
cmp
imul
cli
ja
adc
add
sub
sbb
ljmp
mov
sahf
scas
mov
iret
push
add
test
dec
sti
mov
clc
push
bound
add
clc
fiaddl
clc
xor
add
nop
ficoms
pop
fmulp
mov
push
mov
xchg
ret
dec
dec
add
add
clc
divb
add
add
add
aam
add
shrb
cmp
cmp
mov
scas
nop
jmp
add
cltd
cmp
clc
movsl
clc
inc
add
cmp
dec
adc
add
mov
mov
in
inc
add
nop
jmp
jb
jns
push
mov
nop
jmp
jnp
test
add
movsl
clc
loopne
pop
clc
mov
in
call
ljmp
dec
push
js
clc
mov
mov
jg
add
or
pushf
rcr
pushf
pop
fstpl
push
add
inc
clc
or
jmp
fs
imul
add
scas
inc
add
sub
mov
jo
add
add
test
sub
adc
add
shr
add
add
clc
pop
pushf
mov
dec
stos
into
and
add
add
shll
dec
out
mov
mov
fwait
cmp
mov
add
sbb
lods
push
add
sbb
dec
adc
cmp
jnp
hlt
push
jno
add
cmp
push
push
clc
fcompl
das
dec
idivb
test
push
cli
add
add
clc
sub
je
nop
jmp
add
inc
xchg
mov
adc
add
inc
add
cmp
xor
add
test
stos
push
add
dec
push
aad
jmp
add
bound
add
and
add
pop
xchg
mov
xchg
jmp
sar
fsubrl
inc
add
pop
xchg
xor
add
sti
cmp
pushf
sbb
jmp
loopne
sub
sub
jmp
inc
add
adc
jp
fistpll
pop
cltd
inc
clc
incb
clc
cmp
std
cmc
out
and
add
out
adc
add
clc
sub
pop
call
psllq
mov
push
push
mov
xchg
ret
mov
add
push
mov
xchg
outsb
lods
mov
popf
fwait
cmp
adc
add
clc
push
lret
add
add
out
mov
xor
clc
enter
sahf
enter
mov
xabort
jo
add
push
push
mov
xchg
ret
loopne
push
or
inc
clc
mov
icebp
or
mov
clc
mov
add
push
cmp
push
clc
sub
rol
clc
fistpl
pop
clc
fimuls
mov
fimuls
clc
xor
add
clc
loope
leave
mov
popl
add
jl
add
stos
out
mov
push
push
add
popa
add
pop
clc
mov
add
decb
sar
xor
clc
fdiv
mov
clc
repnz
add
add
sub
std
and
add
or
in
sbb
push
add
and
adc
add
xabort
cmp
rcll
add
xor
add
hlt
popa
add
jno
add
es
sbb
or
mov
xchg
pop
stc
xchg
push
call
add
mov
in
pop
jae
add
clc
or
clc
dec
lret
loop
pop
clc
cmp
inc
clc
pusha
add
pop
insb
arpl
add
or
clc
clc
out
mov
dec
fwait
sbb
push
add
ret
jl
or
clc
sti
inc
clc
or
sbb
clc
adc
add
adc
addr16
jo
add
sbb
clc
mov
push
add
mov
mov
jp
lcall
ss
cmp
clc
lret
pop
in
sbb
add
add
add
add
mov
add
out
push
popa
add
movsb
clc
mov
sbb
add
push
add
ucomiss
ljmp
clc
xor
adc
add
stos
ret
clc
cmp
clc
and
mov
test
push
pop
jl
xchg
pushf
pushf
in
popa
add
imul
add
icebp
ljmp
dec
lea
mov
icebp
dec
inc
clc
cwtl
mov
add
xchg
mov
jmp
or
add
mov
cmp
add
sub
inc
clc
lret
test
add
cmp
clc
add
add
sbb
aas
mov
call
incl
jnp
mov
incl
add
add
xchg
jecxz
mov
add
adc
add
testb
add
adc
sbb
pop
clc
into
mov
out
call
dec
push
bound
add
add
add
pushf
mov
add
add
cmc
cmc
add
es
nop
aad
mov
lods
sbb
clc
add
add
aas
mov
xor
fwait
sahf
fdivs
add
das
push
cmc
pop
nop
push
add
cmp
cli
ret
clc
loopne
repz
add
add
mov
jmp
jmp
pop
or
push
adc
add
es
es
loop
cmpsb
clc
jns
in
addr16
cld
out
repz
and
add
scas
leave
xor
add
xchg
lock
sub
stc
mov
and
push
mov
xchg
ret
out
iret
repz
fldt
aaa
mov
std
mov
push
add
dec
test
add
leave
lret
xor
add
addr16
fmul
scas
frstor
cmp
mov
mov
cltd
jno
add
cmc
push
push
pop
push
mov
xchg
ret
inc
or
fistps
clc
cmpsl
clc
shll
jl
xor
add
gs
cwtl
test
jne
shll
add
add
repz
lret
xchg
das
pop
jnp
add
cmp
push
and
add
imul
add
add
aam
ds
notl
cmp
jmp
add
jmp
add
and
loop
loopne
and
add
clc
psrld
add
add
fmuls
and
inc
add
aam
movsb
fsubrs
adc
add
add
insb
inc
add
and
add
dec
mov
clc
add
add
and
pop
sbb
mov
or
daa
clc
or
out
cli
insb
mov
clc
mov
jmp
sbb
adc
add
adc
add
pop
nop
jmp
pop
add
add
clc
cli
lret
stc
movsb
clc
cmp
sbb
clc
or
cmp
fildll
push
add
cmp
mov
clc
sbb
stos
aaa
add
nop
jmp
mov
movsb
pushf
popf
and
add
cmp
clc
ret
clc
xlat
cmp
mov
clc
imul
call
incl
add
pop
clc
ljmp
popa
cmc
call
decl
into
pop
fs
fstpt
clc
sar
xchg
cltd
adc
add
nop
jmp
add
jns
or
enter
add
imul
add
add
add
mov
clc
xchg
cmp
mov
iret
ficoml
test
add
mov
cmp
pop
je
mov
add
movsl
clc
sti
push
add
lods
mov
jge
clc
inc
add
cmpsl
clc
jae
add
xor
add
xchg
insl
mov
clc
dec
mov
add
lret
lock
ljmp
clc
cmp
in
fstpt
add
add
mov
aas
sar
cs
clc
xor
mov
cmp
clc
out
loop
and
jl
add
cmp
clc
mov
jb,pt
nop
jmp
cltd
test
daa
clc
mov
enter
mov
pushl
pushf
insb
clc
jecxz
cmp
pop
dec
sbb
shll
add
mov
add
ss
test
push
je
nop
jmp
or
pop
lret
repz
clc
cmp
cmp
add
mov
nop
jmp
add
mov
pop
or
sarl
inc
clc
push
xchg
clc
cmp
cwtl
sahf
call
sahf
ds
add
and
add
add
cmp
nop
js
aam
clc
pop
cmp
testb
clc
std
cmp
insb
xchg
hlt
inc
clc
jge
adc
add
mov
clc
and
repnz
cmp
xor
add
add
fnstcw
ret
clc
sub
xchg
sub
add
mov
add
clc
es
sar
clc
jo
add
jns
mov
popa
add
popa
add
and
add
add
lods
insb
out
mov
decl
inc
and
add
mov
clc
in
inc
add
add
add
clc
std
push
clc
cmpsb
clc
lods
mov
add
push
sar
mov
push
pop
arpl
add
sub
bound
add
pop
clc
jle
and
enter
and
add
dec
push
add
push
push
clc
sar
out
gs
inc
add
xor
clc
mov
adc
jo
add
clc
push
bnd
dec
shll
add
bound
add
clc
cmp
clc
sbb
jmp
sbb
add
out
sub
mov
xchg
add
mov
in
stos
mov
jnp
bound
add
clc
adc
add
je
leave
sahf
inc
clc
cmp
clc
pop
clc
shl
clc
clc
test
es
xabort
clc
mov
add
mov
clc
insl
xchg
jge
add
mov
add
sub
into
mov
add
scas
iret
std
cmp
in
and
add
add
clc
out
jo
add
add
stos
jg
pmullw
clc
ja
clc
sbb
dec
lea
aad
clc
xchg
mov
cmp
incl
add
mov
add
pushf
add
mov
jecxz
xchg
shll
add
shl
cmp
sbb
adc
add
add
add
or
push
add
or
dec
mov
enter
clc
faddl
inc
add
mov
add
out
bound
add
add
cwtl
fsubrs
xchg
pop
mov
pusha
add
imul
je
dec
cs
sub
clc
add
add
mov
jle
inc
clc
pop
inc
clc
xchg
mov
outsl
cmp
add
out
call
jp
fcompl
add
fsubl
mov
cmp
clc
xchg
jnp
and
add
push
or
nop
jmp
push
dec
imul
mov
data16
cmpsl
clc
imul
gs
dec
imulb
test
cmpsl
clc
xchg
jle
loopne
shlb
add
dec
pop
js
aam
clc
pop
add
add
jo
add
add
test
js
inc
clc
mov
sar
cs
jb
add
mov
pusha
add
push
mov
mov
add
adc
test
clc
jl
insb
popa
add
das
dec
sahf
outsb
cmp
cmp
mov
sbb
adc
add
add
stc
inc
add
adc
lods
out
call
jmp
add
imul
clc
sbb
in
and
add
add
cltd
push
push
push
mov
xchg
ret
pop
aam
add
pop
inc
add
inc
add
adc
add
or
out
jmp
clc
xchg
mov
stos
xchg
cmp
aas
mov
clc
and
mov
addr16
call
lcall
clc
xchg
cmp
clc
ja
add
mov
push
je
clc
and
dec
dec
adc
add
inc
clc
lahf
es
inc
clc
inc
clc
out
sar
dec
mov
lods
int3
push
add
mov
loope
inc
clc
div
or
xchg
mov
jmp
int
call
add
daa
clc
scas
bound
add
clc
inc
clc
fmull
cmp
inc
clc
dec
pop
stos
jmp
clc
jle
das
ficoml
add
clc
mov
cltd
arpl
add
cli
insb
cmp
clc
icebp
loope
test
out
loop
ror
sbb
inc
add
repnz
std
jno
add
add
add
add
adc
add
ljmp
repnz
cmp
adc
add
add
das
je
fnstsw
out
add
add
dec
outsl
mov
clc
out
dec
cltd
mov
mov
clc
xchg
ja
cwtl
fst
mov
clc
mov
jle
mov
xchg
pop
mov
clc
hlt
imul
scas
push
push
push
mov
xchg
ret
out
jecxz
addr16
adc
sub
imul
scas
inc
clc
xchg
xor
clc
incb
add
add
push
add
add
aam
add
lea
add
insb
or
clc
xlat
mov
nop
jmp
mov
test
hlt
adc
add
clc
xchg
adc
add
pop
push
add
jbe
sub
jp
mov
push
mov
xchg
ret
std
cmpsl
cmp
inc
jp
nop
jmp
imul
adc
call
nop
jmp
fildll
dec
test
shr
pusha
add
jle
inc
clc
pop
popf
mov
clc
insb
pop
in
push
cmp
add
fmull
and
clc
jnp
clc
mov
incb
int3
hlt
dec
fisubs
add
in
mov
out
xchg
rcrl
loop
cmpsb
clc
hlt
inc
add
inc
add
lea
lret
add
mov
inc
add
es
sbb
lods
sahf
sub
add
mov
clc
cs
add
add
clc
loope
adc
clc
jl
clc
psubq
pop
cmp
repnz
cmp
clc
pop
loopne
iret
push
faddl
add
xchg
aad
outsl
int
add
in
mov
mov
clc
cs
int3
daa
clc
sbb
and
add
add
push
mov
nop
jmp
iret
mov
sahf
xor
xor
rclb
movsl
add
pop
mov
out
sar
clc
fxch
or
add
add
lret
sar
lret
stos
add
add
mov
jmp
clc
and
add
jp
jmp
add
mov
repz
add
lods
cmp
sub
adc
add
push
clc
jl
cmc
or
clc
stc
setbe
gs
movq
sub
lahf
lock
add
clc
and
add
mov
rorl
call
loopne
push
cmp
fldl
add
cmp
add
dec
and
add
clc
sar
add
add
and
js
jmp
add
cmc
add
add
jle
xlat
xchg
arpl
add
push
add
icebp
ret
clc
mov
outsb
push
jno
add
push
stos
nop
jmp
push
push
add
pop
mov
push
std
mov
add
xor
pop
mov
leave
ja
clc
mov
dec
popf
pusha
add
pop
clc
lods
sbb
push
mov
inc
add
call
incl
push
repz
cmp
or
xlat
cld
xchg
xor
add
sub
popa
add
dec
dec
mov
rorl
cmp
push
cmp
mov
nop
jmp
jg
add
lret
sar
into
cmp
outsl
jnp
dec
inc
add
pop
test
cmp
push
jbe
cltd
xchg
out
call
add
jp
shlb
add
loope
testl
sbb
sub
inc
add
test
lock
fstpt
sbb
movsb
clc
fcoms
in
cltd
cmp
add
nop
jmp
adc
push
mov
sbb
add
sar
add
adc
add
add
cmp
clc
cmc
pop
mov
xor
add
add
out
jo
add
add
decl
fwait
clc
call
add
clc
cmp
add
call
mov
lods
fidivrs
adc
add
jle
mov
add
pop
fwait
dec
fnstcw
dec
or
and
jg
jb
add
std
add
add
add
add
cs
mov
add
es
mov
and
add
addr16
pop
repz
add
shlb
and
iret
or
xor
xchg
jne
dec
mov
sbb
mov
inc
call
or
das
push
call
nop
jmp
mov
scas
incl
add
inc
add
push
outsl
bound
add
dec
inc
clc
push
icebp
mov
scas
out
push
add
inc
add
xchg
xchg
mov
mov
push
fcmovbe
mov
jle
inc
add
into
cmp
add
mov
out
xbegin
mov
xbegin
clc
pop
push
add
and
add
insl
int
clc
enter
mov
mov
into
fidivl
mov
sbb
pop
ret
pusha
nop
jmp
imul
jnp
push
jnp
mov
jl
push
add
dec
push
add
jae
add
fwait
pop
add
cld
popa
add
ret
clc
dec
inc
clc
test
inc
add
lock
clc
jo
add
push
xchg
mov
xor
nop
jmp
mov
mov
fstp
pop
xor
add
clc
stos
xchg
sbb
cmpsb
clc
xlat
and
add
mov
xchg
sub
clc
cmpsb
clc
mov
lods
stc
sbb
popa
add
bound
add
clc
mov
cmp
mov
nop
jmp
sub
fistpll
add
jae
add
clc
mov
add
and
add
add
mov
iret
xor
add
add
sti
idivb
clc
mov
dec
int3
inc
clc
fbld
add
mov
cmpsl
clc
mov
rcrl
inc
clc
sub
xchg
or
icebp
pop
or
inc
clc
leave
bound
add
add
lock
jl
scas
or
clc
insl
lea
int
clc
movsl
clc
cmp
clc
popf
cmp
ret
clc
mov
add
mov
pop
fbstp
lcall
call
inc
clc
xor
add
add
cmp
mov
add
and
xchg
mov
add
stos
out
pop
jo
add
sbb
add
sbb
aaa
cmp
mov
push
jmp
push
dec
std
stc
mov
pop
js
fidivl
add
adc
add
in
shlb
inc
clc
std
xor
add
fstl
gs
push
add
in
das
std
xchg
cmp
clc
repz
inc
add
clc
sbb
mov
clc
xor
add
pushf
cmp
add
jecxz
clc
push
clc
stc
aas
or
adc
add
clc
lock
fadds
add
pop
pop
cwtl
push
adc
add
cmp
add
cltd
loop
mov
xchg
xlat
filds
add
mov
push
inc
nop
jmp
stc
mov
mov
add
xchg
jle
in
dec
ja
xchg
shlb
dec
or
aas
xabort
clc
xchg
sbb
push
jmp
nop
jmp
add
mov
ret
mov
gs
inc
add
mov
cs
xchg
push
add
sub
add
pop
sti
pop
aam
imulb
pop
clc
sbb
clc
push
add
push
clc
call
xchg
cmp
push
add
fwait
cmp
clc
mov
pop
jmp
xchg
xchg
loopne
clc
std
xor
add
push
and
xchg
ret
aam
xchg
fnsave
xchg
rcll
sub
add
hlt
incb
add
xor
add
add
add
cli
scas
inc
clc
aad
add
pop
jnp
clc
clc
flds
add
outsb
addr16
adc
test
jmp
in
out
ljmp
clc
mov
pop
sub
popa
nop
jmp
dec
movsb
mov
push
pop
dec
stos
ljmp
clc
ret
xor
add
movsb
clc
jmp
fnsave
mov
sub
add
inc
mov
mov
add
nop
jmp
cmc
test
jle
dec
mov
add
test
add
mov
inc
add
nop
jne
push
add
dec
loopne
repz
in
fdivrs
xchg
xbegin
test
mov
cld
push
clc
ss
lcall
add
dec
cmc
mov
clc
out
cwtl
cmpsb
clc
mov
add
push
mov
xchg
ret
add
jg
cld
int
push
add
mov
clc
mov
cmp
add
std
loop
out
lcall
mov
nop
jmp
test
dec
imul
push
add
adc
add
xor
add
pop
push
add
fisubs
aas
sar
pop
nop
adc
add
inc
clc
fwait
xchg
xbegin
clc
fstpl
scas
and
mov
ret
clc
or
push
and
add
clc
test
add
add
add
and
add
xor
add
dec
mov
ss
add
sar
int3
push
add
dec
test
pop
in
hlt
mov
mov
cmp
xchg
ret
add
push
aam
clc
roll
add
add
dec
or
clc
es
cmp
and
add
jg
jge
dec
pop
mov
dec
jmp
push
test
push
xchg
clc
jae
add
add
and
inc
add
xor
add
clc
mov
add
add
dec
jno
add
imul
add
add
add
fcomps
jb
add
mov
clc
out
aas
and
add
sub
clc
push
jmp
add
pop
add
mov
clc
push
mov
nop
jmp
pushf
test
pushf
jle
add
clc
xchg
test
add
add
out
xchg
jp
fidivrs
mov
inc
add
ss
adc
add
add
loopne
lock
jno
add
pop
inc
clc
test
insb
cmp
add
aad
or
jno
add
insb
loopne
fildll
loopne
xabort
add
add
sub
xor
add
add
pop
adc
inc
add
push
clc
int
xlat
mov
add
clc
arpl
add
add
mov
clc
or
outsb
mov
jmp
jb
or
out
push
pushf
push
mov
add
sar
add
add
movsb
clc
mulb
push
inc
clc
test
shlb
adc
add
add
push
push
clc
inc
add
xchg
jb
add
add
nop
jmp
test
pop
push
xor
add
clc
push
cmp
jbe
add
add
outsl
and
outsb
lret
mov
xchg
ds
je
notl
sbb
icebp
nop
jmp
push
test
add
push
push
add
cltd
mov
add
cmp
outsb
iret
dec
push
cmp
add
pop
scas
repnz
mov
or
xchg
lods
ss
and
add
add
push
and
add
ret
dec
or
push
mov
xchg
ret
jnp
test
cli
xor
add
add
popf
fwait
mov
pop
sbb
add
popf
or
clc
and
add
xchg
xor
clc
pop
add
rclb
clc
shl
clc
jmp
mov
or
add
and
add
add
in
and
add
mov
clc
jb
add
add
decb
jne
clc
fimull
add
add
inc
clc
out
popf
push
add
mov
clc
lcall
dec
in
outsl
mov
jb
add
addr16
pop
clc
pop
aad
clc
aam
xor
clc
fcompl
add
and
add
adc
add
mov
inc
add
mov
add
jle
stos
movsl
clc
mov
popa
add
mov
clc
push
mov
nop
jmp
movsl
jb
insb
and
add
push
clc
adc
add
cmp
hlt
pop
mov
cmp
dec
push
mov
xchg
ret
pushf
push
add
clc
dec
addr16
icebp
mov
call
idivb
add
nop
jmp
mov
repz
jnp
clc
push
adc
add
pop
or
fmuls
dec
test
and
add
add
clc
sbb
add
xchg
pop
xor
add
clc
push
add
push
cmp
cmp
clc
or
dec
pop
jne
xchg
and
mov
jg
adc
add
idiv
jns
pop
add
add
gs
sbb
out
jnp
addr16
push
mov
nop
jmp
dec
fnstsw
adc
fs
cmp
fistps
in
add
add
sbb
push
add
decl
mov
add
jmp
jg
add
stc
shrb
clc
dec
jge
push
das
pop
mov
lock
jle
out
dec
xchg
cmp
clc
jecxz
and
or
sti
shll
add
aas
adc
decl
pop
pop
fnstsw
add
nop
jmp
add
test
push
xor
mov
clc
fwait
or
sar
repz
mov
add
lcall
inc
add
cmc
imul
inc
add
lods
and
add
jmp
clc
jne
clc
push
imul
push
add
sbb
dec
roll
add
mov
cmp
clc
aad
add
cmpsb
clc
push
jo
add
test
mov
or
clc
cmpsb
clc
xchg
inc
clc
nop
push
add
lahf
push
sahf
cmp
mov
daa
clc
stos
sbb
mov
jbe
clc
xchg
cmp
sar
add
sbb
push
call
cmp
mov
mov
aas
test
clc
cmpsb
clc
sub
nop
jmp
mov
push
adc
add
punpcklbw
add
outsb
xchg
cmp
and
add
rcrb
leave
ret
mov
jne
and
add
clc
jle
std
cmp
push
clc
push
add
cmp
clc
ds
data16
cli
cmp
daa
clc
jle
clc
sbb
add
and
add
std
jg
push
push
nop
jmp
adc
add
add
arpl
add
jp
in
mov
test
ret
clc
cs
add
xlat
vshufps
repz
add
jmp
jnp
jge
inc
clc
clc
movsb
clc
testb
xor
add
and
add
daa
clc
jbe
mov
add
add
test
loope
fsubs
je
add
pop
cmp
rclb
push
test
test
cmpsb
clc
xchg
mov
add
fsubr
dec
out
cmpsl
clc
shll
icebp
dec
pop
sti
jne
clc
test
push
movsl
cltd
incl
imul
jns
xor
add
push
ror
ds
add
add
clc
ret
clc
xor
add
add
add
mov
push
mov
in
add
add
adc
add
add
cmp
mov
and
cmpsb
clc
dec
xlat
aad
inc
clc
std
xor
clc
xchg
cmp
add
add
xlat
and
add
xlat
jbe
iret
xchg
xchg
xabort
clc
jp
clc
sbb
loopne
lahf
pop
sbb
add
std
test
dec
incb
clc
icebp
stos
mov
mov
push
adc
outsl
adc
add
sub
gs
sbb
test
call
add
add
jge
clc
in
ret
test
dec
sub
mov
scas
and
add
out
adc
add
popf
sar
add
cwtl
mov
push
stos
ss
loopne
gs
add
add
int
add
inc
add
cwtl
mov
pushf
divl
mov
clc
loop
into
jno
add
sbb
add
mov
adc
add
pop
out
jge
clc
or
addr16
mov
add
dec
pop
in
mov
fidivs
mov
add
mov
add
xor
add
ret
es
jle
xbegin
add
add
mov
and
add
add
ret
clc
mov
add
in
in
leave
cmpsb
clc
mov
add
pop
cmp
add
fldenv
add
enter
add
mov
xchg
push
clc
mov
cmp
test
jmp
sahf
xor
add
add
add
aaa
outsb
clc
lahf
push
clc
xor
clc
dec
fisubrs
movsl
clc
mov
lock
lods
fcmovnbe
and
add
mov
add
mov
add
dec
dec
mov
add
add
jle
data16
adc
add
mov
add
push
push
mov
xchg
ret
jle
pop
stc
cld
scas
dec
dec
push
or
in
lahf
mov
xchg
dec
imul
add
add
repnz
add
int
xchg
pop
out
xabort
add
out
repnz
lods
cmp
clc
insl
mov
add
dec
arpl
add
push
mov
or
pop
jmp
clc
or
dec
sahf
inc
clc
in
test
ret
mov
maxps
sar
clc
push
add
pushf
mov
pop
leave
shll
ja
loop
cli
popa
add
mov
jns
push
out
push
mov
clc
mov
clc
dec
pop
cmp
clc
shrl
jecxz
mov
add
clc
lock
add
nop
pushl
rclb
fwait
movb
sub
ret
fldl
push
inc
clc
adc
add
clc
add
inc
add
and
inc
clc
mov
add
jb
add
cld
lret
or
clc
sbb
ljmp
add
test
pop
sub
mov
outsb
mov
rcrl
popf
push
outsl
sar
push
xchg
inc
add
push
add
add
insb
aaa
es
pop
jl
clc
cmp
sbb
sti
nop
jmp
iret
add
cmpsl
adc
aas
mov
clc
xor
add
bound
add
xchg
adc
arpl
add
clc
scas
mov
pop
movsb
clc
lods
hlt
jge
bswap
pop
movsl
clc
mov
jb
add
clc
gs
xchg
dec
mov
inc
clc
insl
mov
clc
mov
add
aaa
out
jge
aad
jae
add
idivb
sbb
mov
repz
add
aad
add
jae
add
add
clc
sti
fisubrs
ret
clc
dec
push
add
sbb
cmp
in
stos
and
add
pushf
repnz
xor
push
nop
jmp
add
add
sub
clc
and
add
adc
add
add
and
add
nop
sar
xor
add
clc
scas
je
stc
std
cltd
mov
add
addr16
mov
add
test
jl
clc
push
ret
fisttps
clc
inc
add
lret
call
popa
add
sub
inc
clc
dec
fldcw
and
add
rcl
jl
push
add
mov
clc
icebp
jne
add
adc
pop
add
add
add
push
ret
clc
sbb
and
inc
clc
data16
and
push
add
nop
jmp
cmpsl
push
add
cwtl
sbb
add
dec
add
add
jp
ja
add
daa
clc
cltd
push
add
cmp
pop
pop
mov
or
stos
call
add
add
cmp
clc
xchg
inc
clc
repz
jne
xchg
xchg
or
cmpsl
clc
das
or
rorb
je
mov
add
fdivrp
repz
add
dec
push
add
das
mov
jmp
mov
and
std
cmp
add
cmc
mov
cmp
sub
clc
mov
add
add
mov
clc
fstp
fisubs
add
add
add
lock
xchg
mov
jmp
mov
movsl
clc
mov
sahf
and
clc
inc
clc
sbb
add
xchg
inc
clc
std
mov
mov
gs
in
xor
add
push
add
mov
push
pop
pushf
or
jb
add
add
ret
aas
pusha
add
or
clc
xchg
jmp
das
pop
clc
mov
inc
clc
xchg
iret
push
jnp
clc
or
jg
nop
jmp
add
clc
test
clc
jno
add
add
clc
lret
add
jns
jp
clc
popf
popf
adc
add
xlat
imul
clc
inc
clc
es
sar
push
mov
fwait
push
sub
push
mov
dec
jmp
add
jno
add
movsb
clc
pop
scas
sbb
clc
jmp
add
mov
clc
or
add
pop
sti
sub
adc
add
lods
loop
int3
sbb
pop
clc
dec
adc
add
fimuls
pusha
add
fmull
jle
cmpsl
clc
pop
mov
cmp
mov
mov
data16
xor
add
mov
clc
mov
add
ret
lret
adc
add
push
pop
pusha
add
dec
fs
mov
cmpsl
clc
push
add
or
add
jl
add
test
stos
cltd
lret
clc
and
aad
add
outsb
or
clc
push
and
add
insl
jbe
xabort
clc
cmpsl
clc
mov
push
add
flds
pop
sub
mov
inc
or
nop
jmp
add
fnsave
xor
add
add
add
add
in
push
sbb
clc
test
adc
add
cmp
add
clc
ds
mov
add
shl
clc
mov
add
add
add
daa
clc
push
push
add
push
xchg
add
add
push
mov
xchg
ret
add
add
mov
add
sub
add
mov
add
in
ds
aam
cmpsl
clc
mov
adc
add
clc
divps
and
add
repnz
out
sti
stos
in
jns
push
pop
xchg
xchg
adc
add
sar
loop
sahf
in
pop
push
scas
add
add
dec
fwait
mov
add
add
add
sar
push
add
ss
fsub
clc
movsl
clc
mov
mov
clc
adc
add
add
sti
jbe
mov
or
call
or
nop
jmp
or
add
mov
add
stos
aas
test
lods
call
nop
jmp
aam
orl
add
jge
inc
clc
data16
or
clc
sbb
test
add
nop
jmp
adc
cmp
out
mov
jbe
out
fdivrl
cli
test
and
add
push
add
lret
sar
and
add
clc
bound
add
dec
mov
clc
xbegin
add
xchg
and
add
cmpw
nop
jmp
mov
fstpt
lret
cmp
clc
gs
sbb
jno
add
clc
adc
add
lea
clc
fucom
clc
dec
jecxz
aad
insl
lret
clc
fisubrs
pop
lcall
dec
test
test
lret
cmp
add
add
or
cmp
add
add
clc
xchg
arpl
add
xor
add
clc
stos
js
clc
jns
clc
leave
xchg
push
push
nop
jmp
mov
sbb
add
cli
dec
fistpll
ficoml
push
adc
nop
jmp
push
adc
pop
test
add
clc
mov
clc
sub
cld
testl
int
add
dec
cwtl
sub
bnd
clc
and
add
popf
cwtl
mov
dec
repz
dec
loope
mov
clc
je
and
add
leave
pop
in
clc
scas
bound
add
push
push
add
jb
add
add
clc
pop
clc
jns
aas
in
jb
add
clc
cld
mov
and
add
add
clc
mov
mov
add
xchg
xor
add
fwait
lock
and
ds
push
enter
flds
add
outsl
aaa
mov
xchg
dec
pop
lret
inc
add
jecxz
rol
clc
jo
add
dec
xor
fs
das
mov
loope
jne
addr16
xchg
sub
hlt
inc
add
into
sub
lods
pushf
ret
out
inc
clc
jle
jnp
sar
test
add
inc
clc
push
call
add
fs
fnstsw
xbegin
sbb
fmull
add
nop
jmp
dec
dec
add
dec
sar
sar
cltd
xor
add
insl
out
mov
sbb
xchg
mov
add
lods
movsl
clc
pop
inc
clc
jbe
hlt
in
adc
add
daa
clc
jle
xor
nop
jmp
push
stos
repz
iret
pop
gs
dec
pop
mov
clc
or
sub
shll
add
or
lret
ljmp
clc
xchg
popf
adc
add
stos
ljmp
pop
add
sbb
add
dec
mov
lret
add
push
add
xchg
lret
stos
adc
add
clc
clc
pushf
pop
jns
xor
add
clc
gs
mov
cmp
push
jbe
clc
and
or
pusha
add
or
xor
das
sbb
jbe
add
mov
xor
clc
bt
popf
aaa
daa
clc
xchg
push
data16
popf
nopl
inc
clc
popa
add
inc
clc
sub
pop
sar
push
scas
in
stos
mov
pop
mov
sbb
add
clc
push
add
xor
add
add
clc
int
cmp
sub
inc
add
and
add
add
push
and
add
push
ja
add
jnp
cmpsl
out
lea
imul
lcall
push
lahf
or
add
add
add
inc
clc
loope
dec
push
add
mov
mov
pop
inc
add
mov
clc
test
data16
hlt
jne
movzwl
nop
jmp
stos
mov
divb
sti
pop
xchg
outsb
xor
arpl
add
clc
jp
add
sub
pop
sbb
repnz
sbb
mov
add
pop
push
clc
call
mov
push
xchg
test
sldt
add
xor
and
add
aaa
lahf
inc
add
insl
scas
push
addr16
push
lock
add
add
inc
clc
sub
pusha
add
lock
sub
loopne
sub
push
insb
push
add
xor
add
mov
clc
sbb
std
jl
sahf
fidivrs
add
pop
dec
and
std
dec
mov
push
mov
add
leave
push
mov
nop
jmp
push
push
add
stc
and
add
mov
clc
sub
xor
add
ljmp
add
add
clc
aas
jns
clc
ljmp
sar
inc
clc
pushf
bound
add
xor
outsb
cs
add
push
add
aas
pop
jmp
fimull
dec
dec
inc
add
add
add
add
adc
jle
add
lahf
stos
inc
clc
add
add
out
mov
stc
inc
clc
in
inc
clc
dec
xlat
rorl
mov
pop
clc
xchg
test
aas
inc
add
hlt
in
xor
add
add
sahf
cli
xlat
mov
test
add
stos
add
gs
lock
jno
add
add
add
clc
outsl
sbb
in
call
leave
sub
add
and
add
cmp
dec
and
repnz
mov
add
push
popa
nop
jmp
add
dec
add
jecxz
daa
clc
pop
repnz
add
pop
cmpsb
clc
ret
clc
popa
add
dec
mov
out
aad
inc
add
inc
clc
lret
cli
push
xor
push
mov
xchg
ret
mov
fdivs
or
clc
xchg
cmp
mov
sub
sar
clc
jmp
stos
inc
add
push
add
inc
clc
sub
nop
jmp
add
movsb
xor
add
or
add
popa
add
pop
and
add
mov
jecxz
mov
add
cmp
push
push
data16
outsl
dec
repnz
mov
clc
jbe
mov
push
mov
inc
add
xchg
xor
hlt
pop
cmc
ss
lahf
pop
insl
loopne
cmp
cld
outsl
cmpsl
clc
aad
mov
fstpl
clc
push
mov
clc
aam
notl
add
clc
cmp
fcmove
cli
and
add
std
roll
mov
mov
pop
ret
clc
xchg
fidivrl
pusha
add
pop
stos
adc
add
stos
push
mov
xchg
ret
fstpl
pop
add
bound
add
mov
push
mov
xchg
ret
add
mov
add
xbegin
clc
mov
xor
sahf
pop
and
add
push
add
clc
sub
arpl
add
mov
add
aaa
cmp
in
pop
push
add
loope
outsb
sbb
int3
inc
clc
and
add
add
add
movsl
clc
mov
pop
clc
jnp
clc
iret
out
daa
clc
xor
add
xchg
sub
dec
sbb
mov
xchg
ret
jb
sub
insb
fdivrl
clc
xor
add
xor
add
mov
pop
repnz
inc
clc
push
lcall
add
aas
push
add
cmp
outsl
repnz
daa
clc
add
add
fstp
repnz
test
or
cmp
and
add
clc
or
clc
aam
clc
test
adc
add
add
clc
and
add
clc
ja
xchg
test
clc
or
clc
or
add
mov
add
es
rolb
add
clc
shl
clc
test
add
mov
xchg
ret
pop
cmc
stos
mov
mov
add
dec
add
add
and
add
jbe
mov
into
lcall
jmp
or
inc
xor
add
out
enter
adc
movsl
clc
pop
inc
add
jmp
gs
push
subl
push
mov
xchg
ret
add
mov
and
push
adc
add
add
mov
bound
add
pop
inc
clc
leave
cmp
add
cmp
cmp
movsb
clc
push
cmp
dec
repnz
outsb
sub
cmp
mov
outsl
cld
jl
clc
pop
mov
inc
clc
lock
mov
push
inc
clc
lahf
ljmp
sbb
cmp
clc
pop
loopne
pop
jl
cmp
cmp
dec
sub
jns
pop
fsubrs
imull
push
add
movsl
clc
decl
add
ljmp
adc
add
xor
add
mov
cld
faddp
clc
jno
add
rdtsc
add
cmp
inc
add
cmp
movsb
clc
pop
xchg
dec
mov
movsb
clc
mov
add
stos
into
mov
mov
add
mov
in
aaa
ja
mov
cmc
fs
popf
push
xor
clc
or
add
mov
push
push
add
out
and
add
imul
mov
iret
sti
push
push
nop
jmp
add
add
ret
sbb
call
mov
inc
add
sar
clc
inc
clc
mov
cmp
clc
sahf
mov
lret
push
in
lret
fisttpll
mov
clc
insl
jle
add
mov
xchg
mov
jbe
add
inc
clc
cmp
clc
xbegin
pop
call
or
clc
je
push
daa
clc
pop
decl
mov
xchg
ret
or
jge
nop
jmp
loopne
iret
movl
add
nop
jmp
add
mov
add
and
add
push
add
rcr
xchg
clc
inc
add
fistps
cli
sbb
clc
test
add
loopne
mov
push
je
mov
clc
xabort
add
adc
add
scas
pop
testb
adc
add
lock
or
pop
sub
idivb
xor
add
add
clc
cmp
inc
add
shlb
and
add
mov
in
out
pushf
cs
add
push
add
cmp
mov
cmp
add
clc
fmuls
out
fs
pop
ja
clc
adc
add
fwait
push
mov
nop
jmp
push
add
xor
add
cmc
sar
out
xor
add
clc
sbb
clc
repz
not
push
shr
nop
jmp
movsl
imul
add
mov
dec
imul
sbb
add
add
mov
mov
mov
clc
test
aam
clc
and
add
clc
cmc
xchg
cmpsb
clc
fadds
pop
xchg
add
add
rcll
add
mov
xor
jmp
jg
jg
fsubrl
sub
clc
dec
sbb
sub
mov
jae
add
add
aam
data16
mov
pop
divl
xor
add
add
lret
pushf
stos
xor
add
inc
clc
loope
cmpsb
clc
cmp
add
xor
add
daa
clc
aas
dec
mov
nop
jmp
stos
add
clc
insb
push
cmc
xchg
cmp
nop
jmp
jmp
adc
jle
lock
xabort
clc
out
xchg
rcrb
jmp
clc
pop
repz
clc
xor
add
mov
jp
ret
jecxz
out
cmp
clc
inc
clc
hlt
adc
add
add
into
rorl
fwait
shrb
rcrb
pop
xchg
cld
pop
clc
push
pusha
add
sbb
addr16
fisubrs
rcrb
in
lcall
add
add
add
inc
clc
mov
mov
mov
sub
add
or
add
cmp
clc
jae
add
cmp
clc
inc
clc
daa
clc
xor
add
nop
jmp
add
jnp
movsb
push
add
fistpl
clc
jmp
mov
clc
inc
clc
in
mul
clc
sub
pop
sbb
nop
jmp
movsb
pop
movl
in
out
sti
mov
adc
add
adc
clc
fstpl
clc
daa
clc
repz
add
cli
leave
nop
xchg
mov
sub
clc
adc
ret
clc
sarb
mov
pop
pop
xor
add
push
inc
clc
cmp
out
out
pop
adc
add
stos
add
cmp
clc
sub
clc
je
or
daa
clc
pcmpgtw
xchg
and
add
jb
add
ljmp
add
add
push
add
xor
add
add
sub
add
sub
add
icebp
sbb
jmp
stc
movsl
add
add
cmpsb
clc
jae
add
add
clc
test
xchg
inc
add
repz
pop
dec
test
mov
clc
cmpsl
clc
repz
add
clc
aas
mov
sbb
xchg
mov
loopne
sbb
add
shrl
ljmp
xor
and
stos
sbb
arpl
add
clc
or
add
push
add
out
lock
lods
mov
xchg
add
add
xchg
inc
add
cld
or
sar
add
mov
lret
decl
push
cmpl
ljmp
dec
mov
add
movsl
clc
cwtl
pop
clc
or
clc
stc
adc
add
add
adc
add
mov
xchg
ret
fisttpll
jae
add
fisubrs
pop
in
test
add
push
mov
nop
jmp
mov
inc
add
mov
xchg
gs
push
add
mov
mov
dec
sub
dec
mov
jmp
test
pop
adc
ljmp
popa
nop
jmp
adc
add
push
add
movsl
clc
add
add
push
stc
sbb
push
push
add
mov
lea
jle
push
fwait
pop
pop
nop
push
add
ret
clc
and
jmp
jmp
push
pop
aam
jg
add
push
sbb
nop
xchg
mov
mov
add
cs
aas
mov
and
add
sub
mov
sbb
add
inc
clc
out
mov
dec
outsb
jmp
mov
push
clc
clc
pop
or
loope
mov
sub
ds
add
pop
push
cmp
fcompl
inc
add
inc
clc
js
mov
sub
stos
fildll
clc
push
xor
add
insb
scas
in
push
pop
inc
clc
add
fnstsw
push
add
jae
add
test
sub
pop
xchg
outsl
adc
clc
jle
clc
inc
clc
add
add
sub
add
aam
clc
xchg
ss
clc
sub
or
add
lods
xor
mov
dec
adc
inc
clc
xor
add
clc
aam
add
lahf
clc
xor
add
cmp
sub
in
aam
clc
cmpsl
clc
out
xchg
repz
add
pop
popf
mov
add
jl
jg
clc
pop
inc
clc
je
sub
lods
xor
jae
add
loop
cmc
ljmp
add
jecxz
mov
add
ja
add
add
cmpsl
clc
xchg
mov
test
add
imul
test
mov
clc
arpl
add
addr16
inc
clc
loopne
pop
cmpsl
clc
cltd
incl
jbe
jmp
dec
mov
push
call
push
add
cld
mov
jbe
jle
iret
xchg
clc
icebp
inc
clc
mov
cmp
cmp
stos
out
cmp
add
push
adc
add
scas
in
jb
add
dec
pop
clc
dec
push
add
ret
clc
pop
and
add
dec
pop
add
push
add
and
push
dec
inc
clc
jg
inc
clc
cmp
add
xchg
int3
mov
mov
scas
fiadds
add
repnz
cmp
push
inc
add
xchg
fisttpl
mov
cmp
xchg
repnz
add
xchg
sar
into
mov
clc
lods
dec
lods
fwait
jmp
clc
cltd
or
xchg
lea
ret
cwtl
xchg
nop
pop
std
fbld
add
pushf
xor
pop
mov
sarb
xchg
sahf
mov
sbb
bswap
sub
add
push
push
mov
xchg
ret
add
jmp
clc
imul
add
xchg
inc
add
push
add
int
jge
or
pusha
add
aaa
ret
nop
mov
jae
add
add
je
add
sbb
jnp
or
clc
mov
xlat
dec
mov
cmp
nop
jmp
jg
push
mov
fucom
mov
add
in
call
add
clc
arpl
add
repz
xor
clc
data16
repz
cld
dec
inc
add
push
add
inc
add
cmpsb
clc
in
fnstenv
xchg
add
clc
stc
decl
test
call
push
xbegin
add
out
sar
sbb
pop
inc
clc
push
and
add
push
adc
sarb
add
addr16
cmp
fadds
int3
imul
and
add
ret
xchg
cmp
add
mov
insl
push
mov
clc
je
pop
adc
dec
cwtl
lahf
adc
add
ret
clc
jbe
sti
stos
add
pop
jle
mov
jns
in
jmp
add
mov
or
add
sbb
add
add
add
add
es
nop
jmp
mov
out
push
movsl
clc
push
icebp
dec
or
clc
sti
mov
add
xchg
inc
add
lods
in
bound
add
jo
add
aam
ja
and
add
add
add
scas
daa
clc
mov
imul
pushf
inc
add
lret
stc
xchg
cmp
clc
ret
xor
add
add
xabort
adc
add
clc
adc
xlat
aaa
outsl
add
add
es
add
add
inc
clc
pop
xchg
and
add
fsubrs
push
add
or
popf
or
xchg
cmp
jp
sbb
sbb
imul
and
add
popa
add
adc
test
cmp
je
clc
mov
sbb
and
add
lock
sbb
xor
add
clc
stos
scas
inc
clc
xchg
sub
clc
ljmp
add
push
adc
add
loopne
jle
adc
dec
bound
add
add
sub
and
nop
jmp
dec
cmc
mov
push
data16
test
sub
fisttpl
push
add
data16
mov
sahf
insl
pop
sar
sbb
insl
xchg
xor
add
sub
test
ja
aam
cmp
add
jg
sarb
adc
add
in
xbegin
jo
add
clc
repz
jp
clc
jge
add
inc
clc
mov
leave
pop
cwtl
cmp
cli
cmp
call
xor
add
add
clc
dec
mov
clc
gs
pushf
and
cmp
jmp
add
aam
aam
clc
pop
arpl
add
add
pop
clc
out
cmpsb
clc
out
popa
add
fidivrl
clc
xor
add
std
mov
sub
aaa
clc
lods
repnz
add
add
clc
outsb
inc
add
int
xchg
xchg
clc
add
jge
clc
popa
add
sar
stos
xabort
add
jecxz
nop
imul
popa
add
mov
add
xchg
jle
and
add
add
bswap
and
add
sbb
pop
cmp
cmp
mov
add
outsb
cmp
aaa
inc
clc
push
shr
nop
jmp
adc
push
push
loopne
mov
test
fildl
adc
add
add
mov
clc
cltd
fs
xchg
loop
add
adc
add
cmp
clc
xchg
sar
clc
imul
add
jp
add
sbb
clc
push
add
push
and
add
add
push
aas
mov
int3
lcall
test
outsb
ja
les
nop
jmp
stc
push
loopne
stc
ret
inc
clc
sub
add
in
xor
add
sub
add
jb
add
mov
dec
jbe
rcll
pusha
add
adc
add
clc
cmp
call
jmp
add
add
xchg
int
add
test
fldcw
pop
clc
out
mov
push
clc
sbb
mov
xchg
ret
jg
movsl
dec
pop
dec
jp
cmpsb
clc
sar
ja
clc
outsb
xchg
das
pop
mov
add
mov
fimull
insb
into
jg
aas
xbegin
add
and
add
hlt
iret
enter
cltd
cmc
add
add
add
sahf
or
pop
iret
cmp
add
mov
jnp
stos
add
add
push
pop
xchg
jb
add
inc
clc
push
add
int
clc
pusha
add
stc
insl
test
pop
adc
or
mov
daa
clc
and
add
jl
xchg
test
dec
mov
jo
add
dec
sub
and
loop
in
pop
ror
jbe
add
and
add
nop
jmp
out
mov
jmp
addl
pop
mov
add
inc
add
ljmp
add
fisubrl
out
add
add
shlb
pop
aam
clc
jo
add
std
inc
clc
pushf
pop
clc
xchg
inc
clc
sub
ds
clc
cli
push
clc
inc
add
std
mov
clc
jmp
clc
mull
xor
add
add
add
add
cwtl
test
iret
or
ret
inc
add
lcall
mov
xchg
ret
add
add
clc
cmp
inc
add
adc
add
add
xchg
repz
add
add
xchg
pop
cmpsb
clc
fsubs
add
loop
mov
clc
aam
clc
cmp
or
push
add
push
mov
nop
jmp
add
jmp
push
outsb
insb
movsb
clc
xchg
xchg
xchg
push
add
cmp
sub
repz
clc
mov
ss
ficoms
add
pop
xor
adc
mov
xchg
ret
xor
inc
add
jne
arpl
add
repz
fdivr
xchg
and
add
arpl
add
aad
clc
fs
pop
sub
add
add
mov
arpl
add
pop
es
idivl
fucom
clc
sub
je
add
call
loope
std
cli
nop
mov
add
add
clc
arpl
add
mov
adc
pop
in
cmp
jbe
clc
mov
das
jns
in
and
add
imull
cmp
sbb
add
add
add
cwtl
push
mov
jno
add
daa
clc
inc
clc
sbb
popf
jmp
add
add
dec
mov
clc
push
push
iret
cmc
pop
xchg
sub
clc
cmp
sarb
and
decl
stos
ljmp
rcrl
sti
imul
fiadds
add
data16
out
ret
clc
sbb
test
stos
jno
add
jo
add
cli
push
push
clc
sub
mov
pop
leave
std
lret
and
add
bound
add
add
scas
push
add
in
mov
out
cmc
dec
and
xchg
cmpsb
clc
push
lea
fcmovnb
clc
xabort
adc
add
clc
mov
add
nop
jmp
jbe
sbb
jmp
jnp
loopne
out
mov
dec
mov
clc
lods
mov
push
add
pop
je
pop
clc
add
clc
push
add
jl
pop
xchg
cmpsb
clc
emms
insb
ljmp
push
clc
jmp
mov
add
adc
add
add
sub
clc
inc
add
imul
add
das
test
add
insl
call
clc
clc
mov
clc
bound
add
inc
clc
nop
xor
add
add
clc
jne
sahf
icebp
xor
add
cld
repz
jo
add
jmp
jns
mov
pop
stos
mov
push
hlt
xbegin
add
sar
clc
cmp
clc
fs
mov
or
clc
mov
clc
and
add
clc
cmp
xlat
mov
add
dec
or
fwait
mov
cmpsb
clc
sub
cmp
pop
popl
xchg
cltd
iret
jl
add
add
add
add
xor
sbb
add
add
pop
adc
je
negb
xlat
xor
add
ja
mov
dec
scas
jge
clc
push
dec
xor
mov
lcall
push
jmp
add
cmpsl
add
cmpsl
clc
fdivs
clc
xchg
icebp
rorl
or
mov
aad
or
lcall
int
call
add
add
xlat
fildl
add
sar
sub
ds
dec
mov
clc
shlb
add
clc
adc
add
sub
add
lret
jp
out
test
sbb
inc
add
repnz
sbb
lret
inc
add
je
std
in
imul
cmp
clc
pop
sar
fcmovb
clc
scas
sbb
inc
nop
jmp
push
mov
scas
mov
in
pop
mov
add
pop
lods
loop
inc
clc
add
add
sar
jne
nop
jmp
cmc
out
jg
out
bound
add
clc
adc
add
fcoml
lock
clc
or
lods
or
add
decl
jb
add
xchg
inc
clc
iret
inc
add
leave
dec
int3
jno
add
xchg
sub
xchg
loop
pusha
add
inc
clc
cmp
add
cmp
and
add
add
push
jmp
jge
loop
aas
sti
data16
lods
lods
aaa
xabort
popa
add
and
add
clc
add
add
add
add
stos
mov
test
mul
clc
leave
push
es
movsb
clc
adc
add
add
das
xchg
mov
clc
ss
add
add
add
enter
clc
cmp
sar
add
es
stos
ficomps
add
add
and
add
inc
clc
aam
add
sub
or
call
inc
cmc
pop
pushf
pop
xchg
aas
xor
add
jbe
add
add
add
repz
and
mov
add
pop
add
add
lret
js
repnz
popa
add
insl
fistpl
pop
xor
add
jmp
adc
add
dec
cmp
clc
decl
out
ljmp
out
add
add
push
push
xchg
lods
decl
dec
add
add
jb
add
aam
add
sub
scas
fnstcw
scas
mov
clc
pop
jecxz
cltd
jl
clc
cld
cmp
outsb
lret
leave
mov
gs
cmp
clc
test
rorb
mov
nop
jmp
jns
push
pushf
pop
movsb
xor
add
clc
aam
popf
aad
mov
jae
add
jl
add
outsb
mov
jae
add
in
add
nop
jmp
movsl
adc
jecxz
mov
cmp
clc
pop
daa
clc
pop
call
mov
xchg
ret
std
test
movsl
mov
jb
add
ss
mov
clc
loopne
out
data16
bound
add
pop
stc
push
push
add
sbb
into
arpl
add
pop
lahf
test
xor
push
pushl
push
mov
xchg
ret
mov
jno
add
inc
add
jecxz
cwtl
mov
mov
mov
mov
xchg
ret
movl
mov
inc
clc
adc
add
test
push
add
nop
jmp
jg
sbb
add
mov
push
add
icebp
ljmp
call
clc
scas
int3
in
pop
aaa
or
xchg
clc
js
and
add
mov
adc
nop
mov
pop
clc
sbb
add
add
scas
or
clc
es
xchg
push
add
lret
clc
inc
add
fldl
sbb
pop
jne
incl
dec
mov
mov
add
add
fs
mov
call
adc
add
push
imul
nop
jmp
cmc
test
loopne
or
xor
clc
cwtl
and
push
clc
xor
add
fsubr
xor
add
clc
int3
dec
repz
dec
xor
add
lock
add
clc
cmp
jge
inc
add
add
add
cmp
gs
jg
push
mov
nop
jmp
pop
movsl
or
add
add
nop
loope
sub
cmp
cmp
pop
jecxz
dec
jmp
jmp
add
push
add
add
ret
ljmp
out
add
jns
psraw
and
add
fwait
mov
mov
clc
cmp
push
fcompl
lods
js
ljmp
popa
add
xchg
sub
popa
add
dec
or
dec
inc
add
aam
rolb
fcmovnb
clc
mov
adc
add
clc
out
lahf
mov
add
xor
add
xor
add
and
add
cmp
into
jecxz
mov
clc
addr16
add
out
cmp
cmp
clc
xor
clc
scas
or
inc
clc
repz
pop
fstpl
jns
add
cmp
xchg
dec
lea
add
cmp
call
nop
jmp
add
jb
inc
jle
add
pop
adc
testb
es
xbegin
clc
fs
popf
adc
dec
xchg
xchg
dec
clc
fiadds
in
scas
xor
jb
add
clc
jl
mov
fidivrl
clc
mov
add
cmpsb
clc
push
jo
add
inc
clc
stc
jne
roll
add
mov
les
add
add
add
sub
test
mov
cmp
cli
mov
lret
xbegin
rorb
or
and
add
in
xor
clc
jnp
cmp
dec
divl
loopne
imul
mov
push
int
clc
call
dec
dec
out
jmp
in
adc
xor
xchg
inc
add
fs
inc
add
xlat
clc
ds
dec
or
cmpsb
clc
lret
add
int3
ja
cmp
clc
add
add
cmpsl
clc
jmp
enter
cmp
test
pop
lret
repnz
bound
add
add
and
add
cmp
xor
add
ret
clc
cltd
push
and
add
dec
jbe
aam
inc
clc
inc
add
mov
clc
movsb
clc
mov
sbb
or
inc
clc
jnp
clc
sbb
rclb
inc
inc
add
test
inc
clc
cmc
lcall
aas
mov
mov
ret
clc
mov
sbb
dec
stc
call
lcall
add
aam
clc
mov
clc
pushf
xor
add
setae
inc
clc
cli
pop
sub
clc
xchg
xor
add
pop
clc
jle
cltd
mov
add
insl
out
pop
cmp
popa
nop
jmp
mov
cltd
movsl
add
add
clc
mov
push
add
push
jno
add
sbb
add
or
add
xchg
or
rol
clc
lock
push
add
add
add
add
and
add
add
outsl
sub
xchg
shrl
lret
call
mov
add
ja
clc
xabort
pop
add
add
clc
adc
add
clc
push
or
add
pop
xchg
xor
add
nop
jmp
fildll
add
inc
add
hlt
loop
repnz
aam
clc
dec
fistps
push
jg
add
mov
test
iret
pop
leave
inc
clc
ds
decl
test
mov
call
jmp
stos
mov
pop
mov
inc
clc
fwait
insl
lcall
je
in
add
clc
add
add
clc
jo
add
add
mov
xchg
iret
cmpsl
clc
mov
mov
dec
sub
add
xbegin
jnp
int
cld
loopne
aad
jns
scas
sub
xchg
xchg
jecxz
hlt
add
add
mov
js
sub
out
mov
addr16
xchg
imul
clc
gs
call
clc
adc
add
cld
cmp
clc
adc
add
mov
nop
jmp
push
add
lcall
add
jle
clc
aas
sub
aad
mov
shlb
ljmp
add
xchg
jmp
clc
cmp
clc
cmpsl
clc
dec
pop
dec
inc
clc
test
cmpsl
clc
jge
jae
add
add
out
push
add
je
push
paddw
sahf
js
mov
xchg
cmpsb
clc
fstsw
pop
xchg
dec
pop
pop
movsl
clc
cs
sbb
add
clc
int3
scas
xor
add
add
clc
lret
adc
add
add
and
add
insb
sbb
in
cmp
mov
dec
test
mov
add
add
add
repnz
cmp
lar
add
push
mov
and
jmp
push
movsl
jle
jg
inc
clc
inc
add
mov
das
jle
mov
xor
add
dec
and
mov
add
dec
fadds
clc
sar
add
imull
jno
add
sub
mov
jae
add
pop
data16
mov
cwtl
pop
lods
into
int
clc
aas
pop
mov
add
push
add
int3
es
stos
cld
jne
pop
js
clc
fsubl
test
pop
add
clc
cmp
jb
add
lods
lods
xlat
ss
shrl
add
clc
add
add
clc
aaa
fnstenv
add
lcall
add
add
into
push
add
mov
cmc
cmpsl
clc
inc
add
addr16
das
repnz
clc
cwtl
mov
add
push
add
add
clc
std
xchg
sbb
xor
add
add
clc
push
clc
pop
mov
and
add
add
sbb
clc
bound
add
ret
in
arpl
add
clc
pop
sub
add
push
aaa
pop
add
adc
test
mov
loopne
mov
xor
add
xchg
icebp
inc
clc
test
movsb
clc
inc
add
lahf
mov
mov
clc
adc
add
add
jno
add
sub
add
cmp
jmp
add
pop
cmpsl
mov
cmpl
stos
out
out
mov
add
clc
fistpl
sbb
and
ffreep
addl
clc
pop
jb
add
insl
dec
mov
add
lea
push
add
aad
call
add
jge
mov
nop
jmp
repz
push
add
jle
and
add
or
lods
in
pop
ds
mov
push
clc
jbe
add
push
daa
clc
pop
clc
fwait
adc
add
push
sar
clc
pop
jo
add
imul
and
add
add
loopne
cmpps
add
clc
lea
adc
add
sbb
dec
xchg
imul
pop
popl
clc
stos
fsubs
add
add
add
pusha
add
pop
lea
outsb
cmpsl
clc
js
clc
jg
pop
lods
add
mov
clc
cmpsl
clc
inc
add
mov
arpl
add
popf
mov
adc
add
add
add
add
add
mov
std
clc
sar
lock
rcll
inc
clc
div
xchg
cmpsb
clc
into
out
mov
mov
pop
jp
clc
sbb
test
add
nop
jmp
push
dec
movsl
hlt
jmp
loop
ret
or
jbe
call
stc
pop
pop
clc
adc
inc
add
shlb
clc
lock
xabort
fstps
ficoml
clc
or
cmp
mov
and
add
add
or
jle
xchg
dec
out
push
mov
or
loope
jl
add
mov
add
in
ja
push
add
sub
out
push
cmp
jl
and
incl
mov
add
cmpsb
clc
cmp
ds
add
mov
clc
mov
or
add
test
out
in
lods
aaa
lock
add
xchg
repz
loopne
nop
jmp
out
stc
push
std
inc
clc
call
add
aaa
pushf
cld
xlat
fists
shrl
shrb
movsb
push
mov
xchg
ret
cmc
pop
iret
cmpsl
clc
lock
mov
dec
add
add
adc
add
add
push
mov
xchg
ret
test
cmpsl
sbb
in
cmpsb
clc
testb
push
je
lods
clc
fdivrs
fstpt
rclb
lea
xchg
ret
add
jmp
imul
nop
jmp
or
imul
negb
jb
add
clc
xchg
sub
clc
xabort
aam
fwait
clc
sub
jns
push
mov
cmp
xabort
clc
xor
add
add
add
ret
clc
es
fmull
clc
jg
mov
clc
jmp
push
loop
sbb
add
rol
clc
adc
add
add
add
arpl
add
or
add
mov
pop
jge
cmp
mov
clc
loopne
xchg
in
jnp
add
pop
flds
insl
push
add
xor
add
enter
mov
leave
lret
mov
add
lea
clc
push
aad
mov
add
mov
iret
inc
add
jge
clc
mov
cmp
inc
and
jmp
fldl
mov
adc
add
push
stos
mov
cli
cmp
and
push
pop
movsb
clc
jne
fs
jg
dec
xor
clc
popa
add
push
out
test
ret
adc
add
add
inc
clc
rol
clc
mov
mov
cmp
adc
lcall
add
add
add
add
add
add
mov
xor
add
insl
sahf
lea
push
xchg
into
cmp
add
clc
notl
add
in
inc
add
and
add
add
mov
add
insl
push
jmp
lea
out
mov
daa
clc
push
loopne
je
sub
add
or
adc
add
daa
clc
and
popa
nop
jmp
push
test
adc
mov
add
bound
add
pop
add
add
add
or
lret
or
and
add
stos
xor
cld
stos
mov
clc
dec
mov
add
in
sub
outsl
arpl
add
lcall
add
add
clc
cmpsb
clc
inc
add
mov
cwtl
popa
add
fcomps
mov
jne
xchg
adc
cmp
jb
add
add
push
xor
add
add
in
sub
push
mov
nop
jmp
push
push
iret
pop
pop
lea
push
add
and
lea
daa
clc
mov
test
sub
mov
xchg
mov
add
cltd
jge
jne
mov
add
clc
push
add
push
clc
add
add
add
fcos
mov
nop
jmp
push
iret
jle
mov
sbb
clc
imul
lea
pop
clc
push
and
test
add
nop
jmp
test
push
jecxz
pop
pop
out
imul
movsl
clc
inc
clc
sbb
clc
sti
loop
push
or
add
in
or
ret
clc
and
popf
aaa
fucomi
and
add
xbegin
add
xlat
inc
clc
mov
add
xchg
das
pop
jne
clc
mov
leave
xlat
inc
clc
ret
adc
add
xchg
jp
inc
clc
and
add
xchg
lret
dec
scas
imul
stc
or
mov
mov
nop
jmp
test
test
add
add
int
imul
add
aaa
inc
add
out
xchg
cmp
push
push
mov
xchg
ret
dec
jnp
clc
sbb
add
jno
add
add
sbb
pause
jmp
imul
add
stos
push
jmp
xchg
inc
add
in
pop
gs
aad
clc
int
sub
lea
add
jo
add
repnz
clc
xchg
out
popa
add
pop
pop
cli
repnz
movzbl
mov
clc
out
jecxz
mov
add
aaa
cli
dec
popf
pop
inc
add
aad
inc
clc
add
add
xchg
repz
gs
and
add
or
add
push
idivl
clc
test
cmp
mov
dec
jp
lea
add
movsb
clc
cmp
add
clc
pushf
ljmp
clc
jns
add
inc
add
into
cmpsl
clc
loopne
stos
cmc
pop
das
sub
mov
cmp
mov
add
cmp
jmp
jecxz
add
movsl
add
cmp
adc
add
mov
nop
jmp
iret
push
aam
leave
cwtl
imul
icebp
inc
clc
enter
add
mov
clc
push
add
push
pop
adc
add
jl
call
incl
test
clc
xor
add
js
std
mull
add
add
sub
pop
push
xor
add
add
clc
inc
add
popf
or
and
mov
out
aad
cwtl
jo
add
push
nop
jmp
jb
add
mov
add
inc
add
and
add
clc
test
add
xor
add
cmp
ret
clc
xlat
pop
push
cmp
and
add
clc
jmp
xchg
or
jp
clc
mov
add
lods
movsl
clc
sahf
iret
data16
cmc
cmp
add
into
adc
roll
add
clc
dec
repz
add
ljmp
in
mov
data16
imul
test
cli
pop
call
int3
sar
inc
clc
push
es
sbb
icebp
nop
jmp
push
jns
iret
add
pop
xor
sub
add
jns
clc
mov
add
add
add
push
add
adc
add
nop
jmp
add
std
popf
pop
loope
dec
inc
clc
jae
add
movsl
clc
adc
add
xchg
jb
add
divl
add
push
add
nop
jmp
inc
movsb
jle
iret
test
add
notb
dec
push
lods
rol
clc
incb
add
mov
out
sbb
lret
add
pop
fadds
add
xchg
not
jmp
lret
sub
fcoms
fabs
clc
and
add
push
clc
sti
loop
mov
pusha
add
cmp
inc
clc
cmp
test
fs
sti
xchg
repnz
push
clc
mov
nop
jmp
sbb
xbegin
test
add
inc
clc
mov
add
inc
clc
scas
das
adc
add
daa
clc
or
mov
mov
leave
leave
mov
add
popf
iret
into
sbb
clc
push
and
add
push
pop
xchg
jge
cld
mov
sbb
inc
clc
nop
or
mov
clc
cltd
popf
add
add
mov
push
mov
xchg
ret
xchg
add
dec
jo
add
clc
dec
dec
push
inc
clc
mov
xchg
sub
add
and
add
clc
test
clc
sbb
add
push
add
jge
pushf
out
sub
xchg
out
aad
push
lods
inc
clc
sub
insl
jno
add
cmpsl
clc
cmp
popf
sahf
xchg
add
add
push
sub
clc
or
jae
add
add
add
pop
sub
test
clc
nop
jmp
push
add
sub
xor
add
ret
add
dec
mov
mov
faddp
clc
pop
in
jl
clc
sub
add
mov
leave
inc
add
cmc
loopne
push
adc
ficoml
add
imul
cli
push
movsl
clc
cmp
nop
jmp
jb
jb
jle
add
scas
int
and
add
dec
cmp
stos
test
aam
add
sar
cmp
clc
mov
popf
cld
cmc
out
and
add
cmp
push
leave
xor
add
add
jmp
add
adc
add
adc
cmp
adc
mov
inc
add
add
xbegin
add
add
mov
add
lea
clc
mov
inc
add
fstpt
movsl
clc
inc
add
inc
call
push
add
add
pop
movsl
jle
sbb
add
arpl
add
inc
clc
sahf
add
clc
clc
data16
xchg
inc
add
std
or
or
inc
add
add
pop
sub
pop
adc
add
sahf
fdivrp
in
mov
clc
jmp
test
fs
jb
add
push
clc
jp
inc
clc
cmp
add
add
nop
jmp
add
call
into
dec
push
in
push
dec
sar
mov
clc
or
clc
mov
add
cmp
aaa
jb
add
cmc
mov
add
xor
add
add
add
leave
lods
ret
clc
adc
add
add
xor
add
jge
jno
add
clc
popf
adc
mov
xor
add
add
movsl
clc
fwait
aam
adc
add
sbb
test
add
ret
clc
sub
mov
nop
jmp
cltd
test
pop
fst
push
add
cmp
xor
add
loopne
xchg
data16
test
ret
clc
jg
int3
push
inc
push
mov
xchg
ret
stos
dec
add
dec
mov
add
sub
push
add
sub
movsb
clc
into
mov
int3
cmp
xchg
sbb
mov
icebp
sti
out
mov
add
inc
clc
ret
clc
nop
fsubl
clc
pop
dec
mov
in
loope
cmp
je
clc
xchg
loope
jg
lret
push
aam
push
xchg
leave
dec
xchg
dec
lret
add
fsubrl
mov
cmp
mov
data16
rcll
ret
test
xchg
test
sub
pop
jl
imul
inc
clc
inc
add
ret
clc
mov
push
cli
test
lea
rcl
dec
ds
add
xlat
clts
clc
xchg
sti
mov
in
add
add
jno
add
icebp
xchg
std
jl
pop
clc
add
add
lahf
ret
and
add
inc
clc
and
add
lods
in
mov
clc
cwtl
dec
mov
js
cmp
adc
add
clc
and
add
clc
ret
add
cmp
aas
and
add
inc
clc
ljmp
fstps
das
pop
jge
sub
xchg
mov
fisttpll
clc
mov
sbb
nop
jmp
pop
stc
xchg
sbb
push
dec
jb
add
je
clc
or
jbe
nop
jmp
adc
add
jne
clc
out
ret
clc
mov
mov
add
js
fdivrl
add
jge
clc
mov
clc
pop
mov
sbb
das
test
push
clc
mov
iret
push
pop
loope
pop
add
add
and
add
movsl
clc
jbe
and
add
add
clc
xchg
adc
add
add
aaa
xchg
mov
popa
add
xchg
mov
push
movsl
clc
mov
fcmovb
clc
pop
inc
clc
fisttps
out
and
add
lret
xchg
cmc
xchg
jo
add
clc
jb
add
inc
add
scas
add
cwtl
push
clc
sub
add
add
into
insb
mov
xabort
mov
sub
data16
fs
xlat
aad
clc
mulb
scas
jo
add
add
cmp
dec
xor
add
pop
ss
clc
sub
sub
xchg
das
jne
aad
arpl
add
add
gs
jae
add
push
push
mov
xchg
ret
test
std
xbegin
imul
clc
adc
add
jae
add
jmp
add
adc
add
leave
or
mov
add
dec
dec
scas
cltd
cmc
jle
inc
add
arpl
add
gs
push
add
push
call
add
pop
mov
add
into
daa
clc
push
add
imul
pop
jmp
mov
add
xor
add
add
cmp
hlt
mov
clc
jmp
sbb
cmpsl
clc
jns
clc
pop
sub
fs
jmp
add
bound
add
push
ljmp
mov
clc
push
je
nop
jmp
jnp
mov
add
add
push
pop
nop
jmp
xchg
xchg
jmp
imul
add
cmp
add
pop
sub
pop
pop
sbb
jmp
pushf
mov
dec
add
jg
int3
ljmp
loopne
mov
mov
arpl
add
clc
shr
cmp
call
je
je
mov
jmp
repz
inc
add
add
in
jo
add
clc
and
add
aad
inc
add
fimull
xchg
ja
push
clc
push
out
lret
cmp
clc
xor
add
repz
fbld
ljmp
sahf
ret
clc
push
lret
fistps
adc
clc
lret
xor
add
add
cmp
clc
or
and
add
fsubr
decl
test
cld
call
call
add
add
push
nop
jmp
cmpsl
test
fisttps
dec
add
clc
ljmp
shll
add
push
pop
cmp
mov
insl
pop
outsl
sub
fisttpl
mov
out
ss
add
sbb
add
int
add
add
ret
clc
adc
inc
clc
std
cmp
add
add
jl
clc
outsl
outsl
add
mov
arpl
add
jbe
and
add
mov
adc
add
jb
add
and
push
mov
xchg
ret
push
inc
xor
add
fucomi
arpl
add
test
call
lcall
or
xchg
push
sbb
clc
push
jmp
cmpsl
pop
add
jnp
mov
clc
mov
add
add
clc
cmp
fcomps
mov
clc
bound
add
jno
add
clc
clc
mov
and
add
cmp
add
add
add
jbe
dec
sbb
xor
mov
add
clc
int
sub
rcrl
out
sar
xchg
stos
or
add
enter
cltd
iret
mov
add
dec
nop
jmp
mov
out
jmp
pop
or
pop
sti
icebp
pop
push
mov
push
mov
xchg
ret
std
add
stos
lea
ret
clc
push
push
cmp
nop
jmp
repz
adc
add
in
imul
sbb
inc
add
mov
adc
add
addr16
pop
stc
push
adc
jb
add
add
ljmp
add
loopne
xchg
jb
add
and
clc
insb
lods
xor
add
and
add
movsl
clc
daa
clc
cli
jmp
gs
popf
xor
add
mov
add
pop
call
add
sbb
fsubrl
add
ret
clc
sub
push
mov
xchg
ret
jb
jg
outsb
das
or
clc
push
jg
add
xbegin
clc
iret
pop
daa
clc
push
add
mov
clc
xchg
mov
cmpsl
clc
insl
cmp
add
imul
out
mov
jmp
add
sbb
dec
lret
add
add
add
mov
pop
adc
add
xbegin
clc
add
add
jno
add
add
adc
clc
cmp
gs
sar
clc
push
add
dec
scas
aam
pop
inc
add
ror
xchg
cmp
pop
xchg
cltd
and
add
or
sub
lahf
gs
jns
int
clc
insb
xchg
mov
cmc
dec
push
clc
imul
add
fwait
sar
and
add
sub
add
inc
loope
add
xchg
jbe
add
and
sbb
clc
sahf
imul
std
mov
add
es
mov
jecxz
repz
add
add
stc
call
jmp
jmp
cltd
push
jmp
push
fwait
in
mov
clc
cli
scas
stc
mov
add
add
call
stos
pop
adc
add
clc
pause
rcl
pop
pop
mov
test
add
std
jle
add
clc
add
add
add
cld
push
ret
clc
sar
clc
fmul
add
lea
aas
enter
out
repnz
push
clc
mov
push
dec
imul
add
clc
adc
add
add
dec
iret
sti
or
clc
add
add
or
clc
je
cmp
call
nop
jmp
loopne
cmpsl
push
xchg
out
pop
pop
lea
popl
nop
jmp
add
aam
or
xchg
push
add
repnz
clc
jl
js
sar
inc
clc
mov
add
push
mov
nop
jmp
add
pop
pop
clc
ret
bound
add
lods
jl
ja
mov
add
aad
cmp
clc
mov
clc
iret
negl
cmc
fsubrl
clc
add
add
add
inc
add
loopne
add
add
aaa
sahf
data16
lock
pusha
add
cmp
cmp
clc
sar
xchg
pop
push
add
and
add
add
pop
lods
pop
clc
test
add
lret
clc
fiaddl
add
jecxz
scas
sub
testb
leave
fsubs
add
ss
cmp
pop
fmuls
fstpt
xor
add
add
mov
clc
jle
clc
aas
lret
imul
out
xchg
sub
lcall
mov
or
mov
add
cmp
clc
mov
add
push
jl
clc
std
inc
clc
sar
add
cmp
clc
aad
clc
movsl
clc
clc
data16
enter
add
add
add
daa
clc
dec
popa
add
xabort
js
mov
sbb
add
jbe
lock
add
add
clc
mov
xor
nop
jmp
mov
mov
cmp
push
inc
add
lods
stos
push
add
xchg
notl
jmp
clc
inc
clc
push
pop
dec
sbb
dec
into
pop
jle
inc
clc
mov
clc
fists
in
test
cmp
clc
dec
dec
xor
add
dec
cmpsb
clc
std
sbb
add
clc
mov
add
clc
adc
add
mov
push
mov
xchg
ret
test
add
sti
into
sub
mov
sbb
add
push
imul
mov
clc
xabort
clc
dec
lret
std
outsl
xor
nop
jne
add
aam
add
mov
add
mov
add
filds
push
clc
ret
clc
add
add
add
int
add
cld
sahf
xchg
xchg
rolb
add
push
jmp
lret
jecxz
xor
add
sub
mov
add
adc
add
clc
cmpsl
clc
pop
mov
sbb
clc
push
add
add
cmp
xchg
pop
mov
clc
movsb
clc
push
add
in
lret
add
shlb
add
add
dec
and
add
add
add
add
mov
sub
add
clc
mov
fsubr
xlat
push
add
xbegin
cmp
stos
xchg
jo
add
add
test
nop
jmp
jg
mov
jmp
add
xlat
ss
pop
aad
outsb
pop
sar
add
inc
add
test
inc
clc
jl
add
xor
add
mov
clc
mov
lahf
or
sub
xor
add
push
mov
inc
add
int
idiv
sub
nop
jmp
repz
test
das
jecxz
shrb
dec
lock
mov
xchg
loop
cs
clc
out
cmp
scas
imul
vcvtps2pd
sub
clc
mov
out
mov
sub
add
clc
jb
add
push
fildl
add
jmp
add
push
mov
add
pop
mov
dec
sti
sub
clc
pushf
adc
add
xabort
add
stos
cld
push
call
imul
jle
add
stc
push
movl
cmp
cmp
mov
in
xor
add
lock
add
xchg
aad
lods
out
mov
clc
xchg
outsl
push
dec
ja
loop
mov
or
clc
sbb
jmp
adc
push
adcl
jne
mov
push
cmp
push
mov
xchg
ret
or
add
or
clc
add
add
iret
sub
sbb
cwtl
fabs
clc
cmpsb
clc
bound
add
jmp
add
xchg
stc
inc
add
fistps
fwait
mov
xchg
push
mov
sahf
stc
add
clc
xlat
push
pop
clc
xchg
cmp
cmp
add
add
add
lods
cmp
add
int3
pop
sub
and
add
add
nop
jmp
mov
test
pushf
sbb
add
das
dec
das
test
ret
clc
adc
add
mov
add
test
outsb
ret
mov
loopne
inc
clc
push
add
inc
clc
call
lahf
jmp
push
add
push
cmpsb
clc
cmp
or
insb
mov
nop
jmp
ffree
mov
outsl
lods
out
xor
push
lods
test
mov
clc
jge
sbb
cmp
push
das
fistps
iret
or
inc
sbb
or
dec
push
cmp
cmp
add
dec
aad
loopne
and
lock
or
outsl
lea
add
add
in
scas
aaa
pop
lods
outsl
scas
cmp
xor
add
mov
xor
add
clc
mov
add
cwtl
push
xor
add
out
cmpsb
clc
ret
push
add
xchg
mov
add
inc
add
jmp
xchg
outsl
js
clc
sar
clc
add
adc
add
cmp
add
jmp
rorb
xchg
mov
clc
dec
and
add
clc
sar
xor
add
mov
mov
jg
clc
stc
test
add
or
lods
int
js
in
cmp
add
xchg
jne
fs
int3
xchg
cs
out
loope
aad
inc
clc
xor
add
jmp
loopne
movsl
cltd
push
push
mov
inc
add
push
mov
gs
jg
adc
add
clc
in
sbb
sub
push
adc
clc
leave
call
mov
add
lret
je
add
out
mov
add
and
imul
mov
ss
clc
sub
cld
fdivp
pop
lods
xchg
sub
mull
add
and
push
xabort
das
incb
add
sub
and
mov
add
add
data16
or
test
in
cltd
rolb
clc
fldenv
clc
mov
in
das
imulb
push
mov
push
mov
xchg
ret
or
add
clc
sbb
clc
mov
fisubs
add
pop
and
and
mov
add
mov
pop
pop
jmp
jg
inc
add
sub
cld
cmp
add
clc
pop
clc
jns
rorb
cmp
push
cld
push
add
add
add
jl
mov
add
cs
nop
jmp
adc
dec
adc
inc
add
hlt
xor
add
inc
add
mov
dec
pop
and
add
add
dec
data16
pop
clc
xchg
sbb
loope
in
cmp
into
test
mov
mov
in
in
mov
dec
movsl
clc
jle
add
dec
lahf
popf
pop
add
ret
clc
cld
jno
add
clc
mov
aad
cmp
add
adc
add
mov
add
dec
sar
out
jns
mov
xor
add
add
aad
ljmp
add
in
jbe
inc
add
cmp
inc
clc
lods
scas
rcl
cmp
int3
or
xchg
xchg
add
add
sbb
test
add
add
addr16
add
add
sbb
in
push
loope
xor
std
idivb
add
cmpsl
clc
jns
mov
clc
add
add
add
clc
sbb
outsl
mov
clc
neg
jle
clc
pusha
add
ljmp
cltd
inc
add
dec
xchg
xchg
jns
add
xor
add
inc
clc
aam
or
jnp
or
mov
cltd
xor
clc
mov
pop
dec
cwtl
xchg
xchg
push
add
sbb
loopne
jae
add
xor
xchg
nop
es
cmpsl
clc
inc
add
mov
clc
push
add
aaa
pop
xchg
add
jle
clc
cmp
push
cmp
ret
add
mov
clc
xchg
mov
add
clc
add
addr16
int
clc
popf
fbld
add
cmp
sahf
adc
clc
jae
sahf
mov
xor
add
clc
gs
cmp
xchg
jne
add
cli
mov
clc
cwtl
popf
sub
clc
add
add
js
movsl
clc
stc
imul
sub
inc
add
xor
add
clc
in
rcrb
xor
add
test
imul
dec
add
xchg
inc
add
inc
clc
push
dec
jo
add
xor
add
add
jge
int3
xchg
arpl
add
add
mov
push
adc
add
clc
mov
arpl
add
clc
shll
add
xchg
xchg
jne
add
and
add
dec
aas
mov
nop
jmp
cltd
mov
push
add
arpl
add
clc
push
clc
aaa
jae
add
cmp
jbe
add
adc
jmp
nop
jmp
pop
dec
mov
cmp
cltd
jns
clc
inc
add
movsl
clc
ret
clc
movsl
clc
sar
clc
pushf
fistl
add
dec
add
add
add
push
push
mov
xchg
ret
loopne
jb
sbb
fs
pushf
in
fidivrl
add
dec
push
mov
out
dec
push
add
mov
lods
iret
cmpsl
clc
jp
clc
ret
cmp
push
jge
outsb
lea
add
or
clc
icebp
cmp
adc
cmp
xlat
push
add
sar
adc
clc
data16
cld
outsb
xbegin
xchg
scas
arpl
add
clc
js
clc
push
inc
add
sti
mov
ss
xor
add
add
lcall
decb
add
decl
test
ret
incl
out
mov
out
call
mov
mov
jmp
sbb
dec
add
add
clc
xchg
lods
xor
add
outsl
fstpt
clc
cmc
aad
roll
dec
mov
movsb
clc
adc
add
add
aaa
sub
inc
clc
mov
add
call
fs
mov
xor
add
adc
clc
pop
fcomi
arpl
add
pop
xchg
cmp
clc
imul
mov
xor
pushl
cmp
add
rol
clc
pop
in
pop
inc
add
cmpsb
clc
mov
clc
inc
clc
push
adc
add
shr
or
add
sbb
pop
or
add
jecxz
xchg
pop
xchg
fcomip
xor
add
clc
jmp
sar
add
repz
jge
add
arpl
add
xchg
mov
clc
dec
js
int
clc
ficoms
dec
jl
adc
add
daa
clc
mov
popf
enter
movl
leave
bound
add
roll
add
mov
add
popa
add
sti
mov
leave
pop
xbegin
clc
xbegin
jecxz
xbegin
pop
imul
clc
mov
test
mov
sahf
pop
xchg
pop
sub
jmp
jae
add
loope
mov
push
or
clc
cmpsb
clc
jbe
imul
add
add
repz
clc
fidivl
pop
xchg
lret
sar
int
jg
divl
mov
add
clc
cmp
clc
neg
adc
add
das
cmp
pop
int3
fistl
cmp
jne
jmp
stc
repnz
or
clc
sub
outsl
jae
add
add
jno
add
jl
clc
ljmp
inc
clc
and
xchg
push
jg
clc
jmp
clc
push
adc
add
mov
nop
jmp
jecxz
iret
add
add
add
adc
lods
nop
jmp
cmpsl
pop
inc
adcl
jae
add
jmp
nop
jmp
loopne
jns
or
add
add
sti
jne
sar
pop
xor
add
push
add
gs
outsb
add
add
clc
sbb
add
fsub
clc
insl
dec
push
clc
ficompl
fs
dec
dec
dec
pop
jbe
jo
add
clc
jno
add
clc
push
add
mov
in
mov
cli
fs
push
dec
fimull
lahf
div
cmp
cltd
out
adc
add
pop
push
repnz
das
xor
sub
nop
jmp
jecxz
push
mov
mov
push
mov
xchg
ret
jb
stc
jns
addr16
lahf
add
add
inc
add
insl
aam
in
xor
push
clc
or
pusha
add
outsb
mov
xor
aaa
scas
cmc
sub
clc
mov
lret
and
add
clc
hlt
sbb
and
inc
add
sbb
bound
add
rcr
jge
fwait
push
loopne
mov
sub
in
mov
add
iret
daa
clc
or
add
dec
cmp
test
cwtl
test
mov
clc
xchg
sti
xchg
add
add
add
popf
and
add
clc
mov
in
xor
add
add
adc
add
add
jle
in
mov
fcmovne
pop
shlb
jns,pn
inc
add
decb
clc
ret
clc
psubq
clc
dec
push
aam
inc
repz
mov
jg
jg
cmp
add
out
push
add
and
fwait
cmp
add
sbb
sti
nop
jmp
mov
add
iret
fsubl
in
adc
add
push
pop
mov
or
xbegin
add
loope
sub
loopne
cmp
clc
popf
je
int
into
leave
add
add
sbb
mov
pop
jge
call
sbb
clc
sbb
inc
clc
insl
rorb
adc
add
cmp
clc
pop
ljmp
sbb
add
add
in
mov
leave
jno
add
mov
add
add
cmp
push
mov
nop
jmp
jnp
pop
or
add
add
jmp
mov
cmp
repz
and
add
push
add
add
inc
clc
sub
xchg
cli
xor
add
add
int3
inc
add
add
fdivr
inc
clc
adc
add
add
cmc
sbb
jmp
aam
adc
lea
clc
repz
sub
xor
add
sub
outsl
and
add
add
fs
inc
mov
add
dec
out
jb
pop
or
add
jmp
out
mov
add
and
add
adc
add
clc
loope
in
into
inc
clc
ljmp
add
add
jne
nop
jmp
dec
pop
push
sub
cli
adc
add
stc
call
pop
add
add
scas
fcoml
add
mov
clc
push
arpl
add
leave
fcmovu
hlt
jb
add
pop
popa
add
xchg
push
add
ret
clc
cmpsl
clc
in
mov
call
call
add
mov
nop
jmp
repz
add
mov
fcoms
jg
loopne
mov
dec
cmp
clc
lret
and
add
push
add
or
add
cmp
push
pop
in
gs
cmp
clc
inc
add
movsl
clc
push
mov
nop
jmp
adc
hlt
out
cmp
add
cwtl
sahf
mov
clc
sar
jae
add
clc
gs
add
add
inc
add
pop
jne,pn
add
add
add
xor
add
add
aaa
mov
add
nop
rol
clc
movsb
clc
lahf
mov
mov
clc
and
dec
push
add
ss
in
repnz
clc
clc
cld
loopne
mov
add
popf
mov
out
rcrb
push
xchg
aad
add
jmp
inc
add
test
clc
dec
aam
clc
in
or
clc
or
sub
push
aam
pop
xchg
nop
fcomip
and
add
adc
add
add
add
xor
add
clc
loopne
xor
add
xor
add
clc
jnp
xor
repz
stos
add
xchg
and
xor
add
mov
cmp
out
jae
add
hlt
aaa
icebp
adc
add
add
clc
cli
lret
negl
insl
popa
add
cli
arpl
add
cmp
sar
adc
add
add
div
jnp
cltd
pop
mov
jecxz
xor
add
clc
push
call
add
loopne
dec
out
daa
clc
gs
pop
and
add
loope
jecxz
mov
clc
stc
int
mov
or
sub
clc
sbb
push
add
nop
jmp
stos
imul
movsl
movsb
cmp
cmpsb
clc
mov
inc
add
add
popa
add
adc
add
add
and
inc
clc
add
jge
add
out
xchg
loop
xchg
mov
xor
add
dec
sub
add
sub
add
adc
add
sar
hlt
cmp
sbb
add
or
lret
les
nop
jmp
jmp
stc
mov
add
sar
into
clc
aam
push
add
iret
jns
clc
insl
sbb
xor
add
mov
add
loop
sub
xor
add
cmpsb
clc
movsl
clc
out
out
or
cwtl
insb
push
dec
nop
jmp
movsb
adc
add
add
adc
cmp
clc
imul
dec
test
xor
add
pushf
mov
dec
call
jle
add
add
inc
add
mov
xchg
and
add
clc
or
add
out
mov
push
nop
jmp
jns
jb
jle
pop
add
or
nop
jmp
repz
dec
sar
leave
cmc
dec
xchg
ss
pop
xchg
push
add
or
test
mov
add
jns
test
clc
pop
ret
add
nop
jmp
or
jnp
sbb
lods
mov
flds
push
add
xchg
or
clc
mov
add
add
pop
pop
xchg
mov
clc
push
add
xor
add
add
mov
shlb
and
add
adc
add
rol
clc
jae
add
clc
dec
fadd
clc
xor
add
push
add
sbb
clc
dec
es
movsb
clc
push
mov
nop
jmp
or
jecxz
xchg
or
add
or
add
ss
add
mov
jne
dec
cmp
out
dec
flds
add
clc
mov
clc
mov
jns
sar
into
es
mov
sbb
clc
xchg
pop
clc
fwait
loope
add
xor
add
add
ficoms
int
clc
psrad
nop
jp,pt
add
pop
clc
and
add
sub
add
inc
add
push
pop
adc
add
mov
add
xabort
pop
roll
add
shll
pop
mov
push
jne
nop
jmp
push
push
loopne
cmp
pop
lcall
add
or
mov
cmp
jmp
cltd
jle
out
aam
cmp
push
data16
ljmp
dec
pop
dec
jle
mov
movzwl
nop
jmp
pop
add
cs
aam
aad
cwtl
loope
cmp
clc
popa
add
cmpsl
clc
clc
jecxz
and
add
fs
aaa
leave
mov
clc
popf
popa
add
jns
jmp
mov
outsl
sub
clc
xchg
push
add
mov
push
add
ror
jb
add
push
add
test
and
add
and
add
add
mov
add
push
pusha
push
mov
xchg
ret
stc
push
pushf
test
mov
cmp
push
ret
add
loope
lods
push
clc
clts
clc
dec
pop
sub
clc
stos
dec
xlat
stc
mov
mov
xchg
ret
movsb
pushf
faddp
clc
sub
xchg
or
add
mul
clc
and
add
cltd
push
clc
cmp
enter
clc
in
jp
and
add
sbb
mov
pop
jle
ljmp
leave
call
cld
lods
mov
clc
daa
clc
fisubrl
lock
ret
mov
cld
and
or
sub
mov
nop
jmp
jb
or
jg
ja
clc
loop
inc
clc
inc
add
insl
dec
pop
mov
add
clc
xlat
sbb
loope
js
cmp
adc
add
aam
in
mov
iret
lea
imul
sbb
clc
aam
xchg
mov
add
jns
add
out
mov
clc
sbb
add
mov
mov
push
add
pop
mov
add
movsl
clc
pop
clc
inc
clc
sub
cmp
adc
add
xor
add
mov
add
cmp
sbb
jb
add
push
add
sub
xchg
or
add
mov
xlat
dec
in
test
popa
add
roll
sub
add
inc
clc
sbb
sbb
sti
push
push
ret
clc
dec
sbb
clc
ja
add
imul
clc
ja
loope
sub
add
fstpt
add
mov
mov
xchg
ret
mov
jmp
pop
test
push
iret
fsubrp
xchg
or
clc
pop
ret
clc
into
fs
ret
clc
insl
out
jl
loopne
lods
popf
test
add
add
mov
clc
cmpsl
clc
mov
and
clc
mov
add
add
sub
iret
sbb
clc
int
fs
das
push
clc
data16
mov
aad
clc
push
add
out
in
or
sbb
add
adc
add
mov
cmpsl
clc
xchg
out
in
xchg
jge
add
cmp
jmp
jns
jg
push
add
mov
xchg
ret
clc
enter
add
sar
fs
or
shll
inc
add
xor
add
clc
aad
add
nop
jmp
push
iret
mov
add
jle
clc
mov
add
es
dec
ficoms
add
clc
outsl
mov
add
pop
nop
jmp
mov
add
lea
mov
adc
add
clc
lahf
ss
fistpll
jmp
mov
subl
mov
push
mov
xchg
ret
push
xchg
cs
push
pushl
nop
jmp
dec
stc
jle
movsb
add
clc
out
imul
mov
add
xbegin
call
incl
iret
push
dec
xabort
mov
cmp
clc
sbb
cltd
cmp
add
pop
xbegin
mov
xchg
ret
dec
rep
jnp
hlt
cmp
out
test
sbb
mov
dec
movsl
movsl
jecxz
movsl
clc
lea
add
add
bound
add
rclb
call
nop
jmp
pop
pop
add
add
cld
idivl
call
jmp
add
clc
sahf
fwait
push
clc
sar
adc
sahf
and
add
cmpsb
clc
push
push
aad
incl
pop
dec
inc
clc
xor
add
push
cmp
mov
addr16
jno
add
add
xlat
popa
add
mov
or
pop
xor
add
add
xor
add
cwtl
xor
add
lcall
nop
jmp
add
add
clc
push
add
xlat
pop
sub
nop
mov
lret
mov
lcall
sub
or
dec
sub
push
sub
sub
inc
clc
loop
shll
add
movsl
clc
mov
sti
sbb
popf
nop
jmp
push
jnp
mov
add
hlt
lret
sti
adc
add
add
in
jl
cmpsl
clc
jno
add
stc
cli
cmp
clc
icebp
lcall
dec
js,pt
clc
and
test
outsb
xchg
mov
hlt
jo
add
add
fwait
pop
cmp
sub
dec
push
add
movsl
clc
adc
add
shrl
cmpsl
clc
adc
add
dec
divb
add
add
test
call
incl
pop
jb
hlt
iret
pop
xchg
cmp
clc
or
clc
notl
inc
add
lods
ja
xor
add
cmp
clc
push
add
dec
test
push
mov
pop
adc
add
add
clc
sub
add
clc
pop
mov
sarb
test
sbb
clc
cmp
add
hlt
xor
add
clc
mov
clc
sub
jo
add
sub
add
outsb
push
add
aas
mov
clc
mov
clc
xor
add
ljmp
add
cmp
mov
clc
add
add
inc
add
cmpsl
clc
and
add
fwait
mov
push
add
sarb
hlt
test
fimull
dec
xor
clc
ja
std
mov
or
jp
cmp
cmp
inc
add
lret
push
cld
jmp
jge
scas
xchg
in
out
push
pop
nop
jmp
add
dec
push
jns
stos
add
clc
mov
add
add
xor
add
add
aaa
cmp
add
nop
jmp
push
add
sbb
inc
add
loope
fdivrs
pop
test
clc
xchg
mov
jmp
pop
add
push
loopne
stc
test
dec
mov
mov
cmp
out
cltd
stos
fsubrp
sbb
adc
add
dec
scas
sub
push
mov
cmp
mov
ss
movsl
clc
jmp
cmp
ds
ret
clc
clc
bnd
or
call
clc
jge
int3
scas
dec
xchg
dec
adc
add
clc
stos
sbb
cmp
add
xchg
sbb
ss
xor
jae
add
xchg
outsl
cmpsb
clc
mov
js
xor
add
add
and
add
out
inc
clc
sar
or
add
add
into
cld
pushf
aas
out
shl
clc
leave
add
add
clc
dec
jno
add
loope
push
add
aas
and
jge
dec
jns
clc
ret
clc
xchg
pusha
add
addr16
clc
std
movsb
clc
icebp
xchg
ret
sbb
nop
jmp
pop
push
fildll
ja
clc
lods
dec
or
mov
std
mov
push
mov
nop
jmp
mov
add
out
sub
or
mulb
add
test
cmp
btr
jbe
push
add
shlb
clc
fs
mov
add
mov
cmp
clc
out
fistps
stos
push
test
incl
enter
xchg
ret
repz
scas
idivb
jp
incl
mov
dec
jnp
sbb
pusha
add
mov
clc
ss
clc
sub
pop
clc
xchg
mov
ret
sti
imul
mov
nop
jmp
pop
add
sbb
xor
add
sub
cmp
xor
add
add
leave
or
cmp
paddsb
mov
xchg
ret
out
stos
fbstp
jnp
jae
add
cmp
out
and
add
add
lahf
scas
fbld
or
and
add
add
addr16
jl
mov
clc
push
add
xor
add
shrb
push
clc
fisttpll
test
clc
hlt
mov
adc
add
add
mov
add
xabort
fs
adc
add
cmp
add
add
imul
pop
or
movsb
clc
test
mov
push
ret
clc
popa
add
jae
add
or
call
add
mov
add
mov
or
out
cmp
pop
inc
add
mov
add
popf
mov
jae
add
incb
add
jns
adc
add
sar
mov
clc
xchg
cmp
vmovaps
das
mov
add
add
or
push
mov
xchg
ret
out
aam
mov
jmp
clc
test
cmp
clc
adc
add
pop
xabort
cmp
cmp
clc
dec
cld
out
fldcw
stc
popa
add
push
aam
notl
lahf
xchg
out
cmp
es
sub
fs
xchg
aad
push
push
mov
js
jnp
and
add
add
test
clc
or
push
clc
ss
cld
push
inc
clc
xchg
sub
add
std
test
clc
lods
sub
clc
data16
xchg
xor
add
add
lods
fcoml
imul
fldl
sbb
imul
add
aad
push
mov
clc
add
add
nop
jmp
dec
jmp
add
jecxz
addr16
pop
clc
clc
push
inc
add
add
add
push
mov
loopne
das
test
xchg
lods
in
add
pop
mov
and
add
cmp
jg
sub
push
add
jnp
clc
in
xor
add
xor
add
in
dec
cmpsb
clc
and
add
and
add
sbb
clc
das
dec
enter
stos
nop
shl
clc
int3
ljmp
add
add
in
icebp
fmuls
mov
adc
add
fs
cmpsb
clc
mov
dec
cli
inc
pop
add
inc
cltd
aas
pop
add
inc
clc
cmp
clc
cmp
clc
test
clc
fmuls
clc
dec
pop
es
mov
add
add
add
lret
adc
add
adc
test
out
jo
add
add
negl
fldcw
mov
std
fisttpl
add
add
sbb
test
rcl
stos
into
ss
add
pop
mov
xchg
add
add
clc
movsl
clc
pop
lcall
push
add
jge
jmp
or
add
and
add
xlat
cmpsb
clc
add
clc
adc
add
jnp
mov
data16
inc
add
mov
lea
mov
add
add
jle
mov
add
add
fcmove
ljmp
das
cmp
in
lods
cld
mov
clc
loop
test
std
push
jmp
add
clc
cmpsb
clc
pushf
jg
clc
mov
mov
iret
add
mov
imull
ret
clc
fsubl
inc
clc
data16
and
add
sahf
cmp
leave
in
jne
mov
inc
clc
outsb
inc
clc
xchg
fsub
clc
sti
or
add
xor
cmp
test
xor
add
ret
clc
dec
dec
sub
or
jns
mov
test
lea
xor
clc
sub
add
mov
clc
jne
add
mov
ja
xor
clc
cli
in
xchg
movsb
clc
mov
cmp
sbb
shlb
xor
jge
jmp
into
imul
clc
imul
add
pushf
dec
push
ficoms
aaa
sbb
dec
stos
std
sbb
clc
and
fimuls
jecxz
daa
clc
and
add
clc
dec
xchg
iret
inc
add
or
das
jns
clc
sub
push
add
push
inc
clc
rol
clc
aad
js
clc
sub
outsb
push
add
lcall
jns
add
ss
add
xabort
add
in
addr16
push
xchg
gs
rcrb
jg
xor
test
pop
jp
clc
sar
mov
loopne
pop
fs
in
mov
add
pop
shl
pop
xor
add
in
push
shl
clc
lods
pop
jg
je
mov
and
add
fldenv
add
ljmp
clc
ss
add
add
add
add
mov
add
add
push
add
hlt
cmpsb
clc
inc
clc
push
add
mov
sar
and
add
clc
mov
jp
lret
clc
sahf
mov
cmp
stos
cmp
int
add
mov
add
add
cmp
ljmp
add
jl
add
xchg
jp
clc
sbb
add
clc
xor
add
add
lock
icebp
dec
xchg
push
in
daa
clc
lret
or
add
cltd
push
out
pop
clc
pop
clc
pop
clc
out
cld
data16
add
add
sub
clc
jge
insl
add
add
mov
aaa
xchg
movsl
clc
lock
and
xor
add
fsubl
add
data16
cs
out
mov
clc
dec
ret
cmp
adc
clc
shll
clc
jp
mov
data16
xchg
inc
clc
push
push
add
vandnps
clc
fdiv
pusha
add
or
add
jl
pmaxsw
fadds
clc
cmp
clc
dec
scas
call
mov
clc
jp
xor
add
add
sub
xor
pop
xor
add
add
sbb
mov
add
int3
ret
clc
dec
imul
add
test
pushf
xor
add
clc
dec
and
add
pusha
add
movsl
clc
repz
rol
clc
or
add
movsl
clc
push
add
mov
add
add
sub
add
sahf
clc
push
fbstp
pop
or
push
aad
clc
loopne
mov
clc
jmp
adc
add
xor
xchg
imul
jge
das
add
mov
add
jae
add
add
cmp
push
cwtl
test
add
xchg
lret
je
das
cmpsb
clc
js
clc
push
add
pop
clc
add
add
lcall
daa
clc
cltd
push
add
lret
jmp
add
scas
nop
dec
hlt
mov
clc
inc
add
cltd
push
add
pop
mov
add
pop
xchg
icebp
in
test
rcrl
xchg
sbb
clc
pop
mov
and
add
push
add
jmp
add
mov
add
or
add
clc
lahf
xchg
lret
adc
add
and
add
out
xor
add
add
add
mov
add
pop
jmp
aaa
aaa
xbegin
sti
inc
clc
outsl
test
adc
pop
pop
nop
pop
xor
add
add
add
clc
mulb
or
xchg
inc
add
lret
jo
add
add
push
popa
add
inc
clc
jp
add
dec
dec
mov
dec
idiv
imul
clc
enter
and
add
push
fs
dec
outsb
or
mov
clc
lret
sub
cmp
dec
pop
jb
add
clc
fldt
add
xchg
sub
xor
add
add
jmp
add
cmp
dec
push
xor
add
clc
aad
clc
add
add
clc
gs
xor
sbb
jecxz
add
add
mov
scas
test
mov
lcall
push
add
int
negb
jmp
add
add
stos
sbb
out
dec
scas
jae
add
add
mov
clc
fwait
loope
pop
cmp
add
add
sbb
clc
testl
cmp
mov
outsb
hlt
ret
clc
jmp
mov
add
sub
cmp
cmp
jne
sub
and
negl
jne
jae
add
add
cmp
dec
fisubrl
pop
insb
cmp
insb
call
jge
clc
pop
test
sbb
sar
popa
add
pusha
add
cmp
clc
push
clc
mov
inc
clc
loop
nop
ret
clc
cmc
pop
xlat
add
add
cltd
aas
cmpsb
clc
cmp
clc
jae
add
xor
add
push
jg
dec
clc
dec
dec
push
add
add
hlt
cld
push
and
clc
and
clc
push
mov
xor
add
clc
fdivl
sbb
sub
gs
cs
xchg
insl
loope
xchg
shlb
loopne
push
movsl
clc
dec
mov
pop
sbb
mov
gs
notb
add
push
xchg
pop
push
add
jne
cs
mov
out
push
dec
push
add
cs
es
xor
add
popf
stc
xor
add
int3
fistl
jbe
clc
inc
add
add
add
clc
fwait
out
lea
sub
pop
and
xchg
or
cmp
add
adc
add
cwtl
and
add
add
addr16
lods
in
xabort
clc
cs
outsb
fld
clc
pop
sub
add
mov
push
clc
inc
clc
mov
ds
ljmp
add
mov
add
cmp
mov
lea
add
testb
addr16
pop
aaa
push
add
add
add
pop
ds
mov
test
lea
add
sbb
add
add
xor
inc
add
jb
add
sub
clc
scas
stos
loope
pop
clc
dec
jge
xor
add
fsubl
movsb
clc
sub
or
add
shll
add
daa
clc
jl
fisubs
add
pop
pop
icebp
jne
aam
clc
mov
xchg
cmp
clc
daa
clc
pop
nop
ss
sti
daa
clc
jnp
fists
add
clc
pushf
push
sarb
inc
clc
xchg
xor
add
clc
pop
clc
jecxz
adc
add
mov
scas
lahf
dec
stc
rol
clc
jl
aad
ret
clc
in
lahf
cmp
inc
add
nop
xor
add
clc
xor
add
clc
cmp
add
popa
add
push
add
pop
xchg
sahf
dec
repz
add
dec
sahf
imul
mov
pop
int3
sub
int
push
nop
xchg
out
sti
test
clc
mov
cmp
clc
inc
add
lods
and
add
dec
test
leave
xchg
sahf
pop
repz
and
add
cmpsb
clc
fdivrl
jl
dec
xchg
and
add
popf
ficompl
scas
hlt
fstpl
jne
outsl
push
cli
sbb
add
ljmp
cli
repnz
xchg
mov
clc
sbb
add
popf
repz
clc
shll
lea
cmp
test
scas
mov
loop
test
add
test
clc
mov
xor
add
jns
clc
clc
loopne
loopne
add
add
inc
add
add
add
clc
hlt
stos
xor
add
add
movsb
clc
leave
xor
add
clc
jp
and
add
test
dec
int3
mov
add
jg
jge
xor
add
ja
jp
icebp
es
xbegin
jnp
or
xabort
inc
add
bound
add
add
add
arpl
add
lcall
xchg
icebp
arpl
add
add
mov
sub
ficoml
push
add
xchg
xchg
cmp
clc
test
mov
cs
pop
inc
add
mull
add
push
dec
inc
clc
loop
push
jge
clc
in
dec
pop
lock
clc
dec
jo
add
sbb
out
daa
clc
or
jge
add
loop
sbb
push
cwtl
push
add
adc
add
iret
mov
shll
add
xor
add
add
ljmp
add
mov
popf
push
adc
add
xlat
mov
out
imul
xor
add
lahf
xor
add
xbegin
clc
inc
clc
jne
add
cmp
add
or
clc
lcall
clc
jbe
add
popa
add
into
nop
fldt
dec
pop
gs
jno
add
add
mov
xchg
mov
arpl
add
mov
and
pop
clc
fs
in
and
pushf
inc
clc
lock
inc
add
fdivrl
clc
dec
aas
addr16
dec
leave
cmp
xbegin
add
xchg
mov
add
mov
loopne
sti
push
add
stc
push
stos
xor
add
repnz
clc
inc
add
or
roll
test
xchg
mov
clc
sbb
clc
pushf
arpl
add
mov
pop
repnz
add
add
sahf
cmpsb
clc
mov
clc
mov
clc
inc
clc
test
add
sar
xbegin
add
lret
xbegin
pop
adc
add
pop
cmpsb
clc
out
cmp
test
sbb
fstpl
clc
xor
add
add
xchg
fs
fdivrs
xchg
dec
movsl
clc
pop
lret
xchg
inc
clc
jne
clc
ljmp
add
stos
xor
add
fsubs
add
mov
mov
cmp
lret
dec
ds
clc
xchg
jle
add
pop
clc
repz
add
add
cmp
sub
jmp
clc
mov
cmpsl
clc
xor
adc
add
dec
push
loope
pop
ja
sti
jnp
xchg
hlt
scas
enter
movsl
clc
lods
add
add
lret
add
pushf
std
xabort
sar
shrl
jns
or
and
jmp
and
add
rcll
mov
mov
clc
adc
add
dec
int
adc
dec
fsts
adc
add
push
add
cmp
ret
clc
sub
xchg
pop
fldt
aam
push
mov
clc
repz
clc
adc
add
clc
inc
clc
inc
clc
shll
fisubl
js
outsb
decb
rcrl
clc
ror
repz
clc
rcrb
jbe
push
sbb
add
adc
add
mov
add
aam
xlat
pop
push
add
cmp
int3
lods
xchg
xor
add
aam
push
xor
dec
inc
clc
dec
pop
clc
inc
clc
xor
add
sahf
pop
clc
cmc
push
dec
mov
clc
sar
pop
jge
jb
add
clc
ja
push
add
add
add
arpl
add
add
mov
jecxz
lea
add
outsb
mov
clc
and
push
mov
call
xchg
std
mov
jle
push
repz
fwait
push
push
cwtl
out
dec
pop
decb
clc
pop
or
cmc
xbegin
cmp
add
pop
gs
sar
pop
cmpsl
clc
sub
clc
cwtl
int3
xor
add
clc
mov
add
cmp
clc
mov
aas
popa
add
mov
jns
dec
cmpsb
clc
clc
adc
clc
xchg
xchg
mov
sub
pop
clc
shrl
xchg
jno
add
and
jae
add
add
shlb
add
add
cmp
pop
cmp
jnp
lods
jae
add
clc
xor
icebp
cmc
xor
add
ret
pop
and
add
add
inc
add
jle
hlt
shl
and
jg
sub
or
add
insl
lods
fadds
add
popa
add
sub
sar
clc
inc
clc
push
das
data16
scas
lea
clc
aam
push
clc
cmp
add
stos
scas
add
add
sbb
clc
and
add
clc
inc
add
shlb
icebp
xlat
gs
pop
ret
clc
stos
jnp
add
sahf
mov
clc
arpl
add
clc
dec
sbb
sbb
add
mov
xor
add
mov
clc
add
addr16
lods
repz
sbb
cli
lea
mov
add
ja
add
shrb
scas
sub
add
add
and
add
mov
xchg
cmp
mov
fcmovnbe
bound
add
cwtl
or
notb
push
lret
stos
es
jne
cmpsl
clc
jo
add
add
cltd
mov
and
add
cmp
push
inc
add
xor
aaa
and
add
lahf
and
add
add
or
and
add
lods
sbb
xchg
mov
clc
into
jns
mov
mov
ficomps
enter
aas
xor
add
inc
clc
push
add
cmp
repz
data16
add
and
clc
xor
add
add
lfs
add
mov
push
add
cmp
lock
cmpsl
clc
pop
hlt
sbb
dec
lods
push
add
lahf
inc
add
out
ss
add
cmp
mov
xchg
repnz
call
xchg
xchg
adc
add
push
stos
adc
add
ret
clc
mov
sar
std
in
and
adc
add
clc
mov
dec
scas
bound
add
add
cld
xchg
xchg
mov
and
clc
pop
popa
add
pop
cmp
add
add
or
movsb
clc
pop
orps
mulb
clc
mov
clc
cltd
cli
sbb
add
in
scas
popf
cmp
sub
mov
cs
iret
ficoms
and
push
mov
das
pop
ja
jecxz
cmp
test
clc
inc
add
dec
sub
mov
add
lcall
clc
lret
fdivr
call
clc
inc
add
or
out
in
and
add
test
jle
add
lret
add
add
inc
clc
clc
cmp
in
sub
add
push
clc
xchg
out
pop
mov
add
xchg
jp
test
clc
add
push
and
lret
cmp
gs
gs
test
add
scas
data16
jl
add
loope
lret
jl
clc
mov
adc
add
add
push
out
xor
add
cmp
pop
ja
add
xor
lods
enter
push
bound
add
xor
inc
clc
cmp
add
in
mov
add
mov
mov
int3
lret
add
aad
or
inc
add
enter
add
jno
add
clc
cmp
inc
add
stos
mov
add
fwait
scas
rorb
mov
sub
cld
mov
mov
test
xchg
int
cmc
sub
jecxz
mov
test
fwait
mov
in
cmpsl
clc
movsb
clc
cmp
loop
jmp
add
bound
add
add
add
add
jp
clc
test
mov
mov
jne
inc
add
loop
mov
imull
cli
mov
popa
add
or
clc
cmp
clc
leave
dec
pop
or
dec
mov
add
xbegin
std
pop
clc
cwtl
stos
sar
pushf
dec
clc
adc
add
in
scas
fs
xchg
adc
add
adc
add
sbb
jne
mov
xor
add
add
pop
jle
sub
add
xor
add
sub
clc
pusha
add
mov
in
sar
mov
sbb
add
clc
into
xchg
add
add
add
or
pushf
adc
add
std
cmp
mov
test
mov
scas
stc
daa
clc
imul
fadd
clc
gs
jmp
fistpll
xor
and
add
inc
add
pop
clc
hlt
cmp
inc
add
mov
mov
clc
nop
pop
jl
xchg
adc
add
clc
xor
psrld
sarb
popa
add
mov
or
mov
clc
pop
cmp
add
cli
negl
xchg
popl
add
and
add
add
iret
stos
repnz
add
cwtl
and
cmp
clc
push
add
aam
inc
add
mov
clc
pop
mov
out
sbb
jge
clc
shr
cmp
out
cwtl
jmp
clc
scas
push
inc
clc
or
dec
cmc
out
fdivl
add
clc
jo
add
addr16
fimull
mov
aas
xchg
mov
pushf
mov
lods
das
testl
add
cld
pop
cmp
add
sarl
xchg
or
clc
leave
pop
shlb
add
rolb
adc
add
add
adc
add
jmp
add
pop
fbstp
jno
add
add
js
enter
add
lods
cld
push
add
aam
add
push
clc
imul
mov
clc
cmp
add
add
movsb
clc
and
add
add
ljmp
add
add
clc
or
es
cmp
arpl
add
mov
int
add
enter
clc
sbb
mov
sub
adc
clc
cmp
iret
push
inc
add
call
add
inc
add
sahf
mov
add
add
clc
mov
add
cmp
add
lret
or
clc
fsts
and
add
lods
sub
clc
pop
mov
clc
bound
add
jae
add
mov
clc
mov
inc
clc
addr16
or
gs
mov
cmp
xchg
loop
jmp
inc
clc
rcll
add
mov
add
pop
loope
xor
add
test
mov
loopne
stos
mov
lret
clc
lahf
jg
mov
sahf
or
lret
mov
add
adc
int3
sbb
add
add
mov
insb
jns
clc
mov
add
pop
cmc
xabort
add
std
loope
inc
clc
pop
push
dec
arpl
add
cmp
clc
mov
mov
clc
mov
add
iret
clc
ljmp
scas
je
ficompl
clc
adc
add
add
pop
xchg
movsl
clc
inc
clc
mov
sub
add
push
clc
sub
and
add
mov
pop
je
js
out
sub
mov
clc
data16
sub
ret
clc
dec
cmc
cmp
jmp
add
pusha
add
lcall
pop
insl
adc
add
scas
outsl
shrl
inc
add
adc
add
add
rorb
clc
mov
dec
jecxz
out
mov
clc
adc
add
add
dec
adc
add
insl
test
imul
xor
clc
nop
lods
jmp
add
mov
inc
clc
es
cmp
popa
add
cmp
add
rclb
clc
daa
clc
jg
jae
add
clc
test
clc
push
add
pop
repz
scas
dec
int3
repnz
cmp
push
clc
mov
push
sub
imul
cwtl
lcall
fwait
or
data16
icebp
push
add
xchg
jp
add
data16
sbb
push
pop
iret
mov
clc
push
add
leave
mov
in
or
pushf
mov
lcall
add
loop
dec
adc
add
add
aaa
mov
clc
out
out
incl
add
in
bound
add
add
loopne
addr16
cltd
jge
cmp
iret
dec
adc
add
add
pop
lahf
sar
fstl
xchg
pop
stos
cli
sbb
mov
push
fisttps
clc
stc
scas
loope
xchg
test
add
fstps
clc
inc
add
rorl
clc
push
add
and
add
xchg
and
xlat
mov
jp
fs
outsb
push
insl
xchg
sbb
mov
clc
sarl
and
and
add
add
or
add
add
push
cli
scas
and
add
clc
cmp
sub
loope
mov
stc
test
mov
fcompl
add
aad
sbb
imul
clc
push
push
add
lock
mov
in
fadd
clc
test
testl
push
mov
fwait
or
mov
adc
add
add
jge
push
inc
add
sub
in
mul
clc
dec
ja
add
adc
add
es
xlat
mov
push
add
repnz
xchg
jl
clc
repnz
mov
js
mov
lahf
jle
mov
call
clc
mov
add
add
add
add
adc
cmp
clc
lret
lods
xchg
dec
xor
add
clc
pop
push
add
daa
clc
mov
bound
add
clc
lods
mov
jg
sbb
push
mov
sub
pop
xchg
fmul
cld
xor
add
ret
clc
jecxz
iret
dec
pop
addr16
bnd
add
out
aam
jnp
clc
ret
xchg
dec
std
push
mov
jge
add
push
add
fs
mov
add
clc
cmp
clc
pop
movsb
clc
ds
das
xlat
bound
add
add
int3
popl
pop
fmull
inc
add
imul
jno
add
adc
clc
pop
mov
mov
cmc
out
cmp
clc
cmp
cwtl
mov
lods
scas
stos
xlat
mov
add
push
sbb
push
add
ret
and
add
jecxz
lahf
int
clc
fucom
clc
dec
jno
add
xchg
addr16
add
add
sar
mov
clc
and
add
add
jns
clc
jb
add
xor
adc
add
sbb
inc
clc
ja
call
mov
mov
pop
div
push
add
gs
into
mov
outsb
pushl
mov
sub
loope
xor
mov
loop
pop
clc
ret
sbb
add
pop
clc
mov
mov
sti
and
shrl
pop
cmp
xor
add
push
dec
cmc
ret
add
aas
repz
ret
clc
fimuls
add
loope
je
xchg
mov
add
test
cmp
cmpsl
clc
cmp
mov
clc
std
xor
add
sbb
mov
enter
push
add
outsl
dec
ds
pop
cmp
aas
pop
sbb
inc
clc
jae
add
add
fistpl
adc
pop
leave
adc
add
add
fistpll
cmpsl
clc
xbegin
in
sbb
xor
xlat
ja
clc
xbegin
cmp
jo
add
clc
testl
in
lcall
fnsave
add
add
outsl
dec
sbb
add
mov
sbb
mov
add
jnp
js
clc
ljmp
stc
repz
push
popa
add
xor
add
clc
bound
add
mov
lods
add
add
pop
push
clc
inc
clc
or
add
sbb
je
add
mov
clc
gs
lea
add
push
add
mov
add
mov
ficoml
clc
in
cltd
mov
aam
call
xchg
into
jmp
into
and
add
pop
lods
lret
dec
mov
mov
iret
adc
add
clc
add
sbb
mov
sbb
mov
inc
add
or
xor
add
cmp
adc
fwait
lahf
es
pushf
test
pop
aaa
jp
dec
push
sbb
repnz
repnz
jo
add
add
clc
push
cmpsb
clc
pop
clc
cmp
clc
aad
clc
ficomps
add
pop
out
cwtl
icebp
fsubrp
test
dec
mov
add
mov
clc
dec
aam
cltd
js
clc
pushf
sar
xlat
inc
clc
aaa
jl
mov
xchg
test
ret
clc
loope
stos
sub
clc
xchg
ficoml
add
jnp
inc
add
cld
push
jl
clc
and
add
add
xabort
push
dec
add
cmp
cld
je
add
jne
sahf
call
add
add
add
aas
in
div
popa
add
adc
add
jne
clc
sub
add
clc
and
add
add
mov
fistpll
clc
bnd
clc
add
xlat
xchg
sti
sub
jns
clc
popa
add
icebp
clc
sar
clc
mov
push
add
and
add
add
filds
adc
add
pushf
pop
clc
clc
jecxz
std
nop
mov
add
xor
add
clc
push
stos
jge
clc
ljmp
clc
dec
sarl
mov
ljmp
xchg
dec
pop
cmpsl
clc
and
add
add
addr16
stos
ret
popf
xchg
gs
ljmp
icebp
int3
add
cmp
add
test
cld
enter
ds
add
add
fdivp
mov
xabort
add
inc
clc
sar
clc
je
clc
sub
add
in
ljmp
add
fistpl
add
lret
add
mov
ja
lahf
stos
andnps
clc
or
add
mov
add
scas
xchg
push
add
hlt
fwait
jbe
fbld
clc
sub
add
xor
add
bound
add
add
pop
dec
sar
xchg
pop
dec
adc
add
add
mov
clc
icebp
sbb
add
add
arpl
add
mov
es
decb
push
clc
lods
mov
add
out
mov
push
pop
shl
test
jl
clc
inc
add
int
outsb
repz
clc
lea
inc
add
sub
fwait
sub
shlb
aas
jp
mov
pop
add
add
lods
jbe
int3
aad
dec
cmp
add
clc
aas
fmulp
sbb
in
sub
sbb
in
xchg
cmc
jns
clts
clc
pop
cmp
add
add
add
mov
fildl
clc
mov
leave
adc
sub
repnz
jb
add
add
push
fxam
clc
sub
clc
inc
clc
fcmovnu
cmp
clc
jnp
clc
jge
inc
add
pusha
add
or
add
addr16
cmp
add
xor
add
and
sbb
icebp
test
clc
inc
add
cmp
push
add
mov
add
fchs
clc
fwait
jne
xabort
push
lret
jb
add
add
add
bound
add
add
add
sub
add
and
add
or
clc
mov
daa
clc
push
out
adc
push
fiadds
add
sub
xchg
jle
dec
add
and
add
mov
test
mov
and
add
cmp
mov
fidivl
in
xchg
insl
clc
cmp
add
clc
ss
daa
clc
mov
test
lods
scas
add
add
add
hlt
sbb
outsl
jle
mov
shrl
push
dec
hlt
fisubrl
cmp
shll
gs
dec
in
jmp
clc
mov
push
loop
pop
sbb
lods
jle
inc
add
mov
pushf
mov
add
or
add
xchg
and
add
clc
push
push
or
add
mov
inc
add
inc
clc
and
sbb
clc
xor
test
sub
jp
xor
sub
add
clc
cltd
je
dec
repz
clc
sbb
cmp
cs
clc
xchg
xchg
fsubs
mov
and
add
adc
add
test
or
cmp
adc
clc
bound
add
sti
or
adc
add
or
add
imul
add
clc
jge
jbe
sub
add
imul
clc
add
add
dec
adc
add
clc
jg
repnz
push
sahf
ret
clc
pushf
sar
clc
cmp
data16
sub
or
mov
jno
add
pop
mov
mov
inc
clc
xor
add
in
and
add
add
pop
mov
adc
clc
aad
clc
inc
clc
cwtl
mov
movsl
clc
ljmp
add
ret
addr16
add
add
jg
add
aam
fdiv
jo
add
push
clc
pusha
add
adc
clc
inc
add
or
cmp
lret
fldt
xchg
out
jnp
clc
add
aam
add
mov
lock
pop
sbb
pop
inc
clc
and
pop
pushf
mov
add
adc
add
clc
ljmp
ret
clc
add
add
xor
add
clc
jle
in
clc
data16
inc
clc
dec
lea
loopne
cmp
clc
fidivrl
add
push
add
dec
add
push
or
clc
cwtl
mov
out
lret
clc
shlb
add
lahf
xchg
cmpsl
clc
mov
test
push
add
mov
clc
jbe
add
add
add
cmp
mov
push
mov
loope
loopne
mov
clc
lahf
aad
test
add
icebp
test
nop
inc
clc
aaa
sub
clc
in
jbe
jg,pt
mov
add
add
add
clc
sub
out
data16
or
jge
mov
add
out
nop
into
pop
movsb
clc
mov
ds
pop
dec
and
add
daa
clc
dec
fistps
xchg
pop
jge
add
into
pop
and
mov
add
add
clc
add
add
sbb
pop
clc
and
add
add
ja
clc
pop
clc
sbb
xor
add
adc
add
push
mov
pop
fucomip
rolb
mov
clc
lods
pop
daa
clc
aad
or
xchg
enter
std
add
add
int3
rcl
or
clc
ss
out
push
out
mov
sbb
fxch
stos
jo
add
clc
jbe
push
add
cmp
clc
jge
aaa
clc
inc
clc
outsl
mov
add
mov
fs
addr16
pop
int3
sbb
pop
fbstp
add
outsl
mov
int3
sbb
sbb
shlb
add
mov
dec
sar
add
jb
add
clc
dec
and
clc
mov
add
in
stos
js
clc
sar
aam
pop
rcrb
xchg
mov
jae
add
add
cmpsb
clc
test
mov
dec
xabort
aam
add
gs
out
add
add
ss
mov
add
inc
add
pop
je
add
dec
mov
jmp
add
push
add
dec
pop
aas
jl
jmp
clc
rclb
add
sbb
clc
pop
je
mov
and
outsb
push
or
clc
rolb
clc
inc
clc
mov
ljmp
stos
cmp
clc
sar
fisubrs
add
aad
clc
cld
shlb
push
jno
add
add
dec
popl
aam
mov
stc
loop
add
add
and
add
pop
dec
daa
clc
mov
clc
mov
ficompl
dec
add
add
jae
add
add
clc
fcomps
mov
lahf
xlat
aad
clc
sub
mov
add
push
push
add
add
add
add
jecxz
sub
clc
pop
iret
xor
add
add
mov
clc
jl
clc
pop
sbb
jmp
add
clc
fdivl
leave
mov
clc
nop
lret
out
dec
test
mov
aam
add
dec
dec
xor
cwtl
cmp
pusha
add
push
mov
idivb
loope
pop
stc
lea
es
imul
fsts
add
mov
sub
clc
inc
clc
cld
add
add
inc
add
pusha
add
shl
out
scas
jo
add
call
aaa
cmpsb
clc
dec
ja
jecxz
mov
sub
add
jmp
out
imul
inc
add
xchg
insb
jp
jle
jb
add
bound
add
lahf
mov
clc
cmp
clc
sub
jbe
clc
or
mov
mov
add
and
std
sbb
imul
xbegin
add
mov
jbe
out
mov
data16
sub
clc
sub
clc
sar
arpl
add
sbb
add
xor
add
daa
clc
fstps
clc
pop
and
add
jbe
std
clc
aas
dec
mov
movsl
clc
dec
cmp
test
loope
fimull
jo
add
add
mov
sahf
pusha
add
inc
clc
mov
dec
enter
cmp
jg
add
push
pop
fwait
ret
clc
push
add
sbb
adc
add
clc
lahf
out
adc
add
sbb
pusha
add
out
jae
add
add
or
clc
jecxz
push
add
sbb
popf
dec
push
clc
push
add
add
add
leave
dec
in
test
sub
clc
cmp
push
clc
xchg
ret
add
add
fldenv
bound
add
in
sti
outsl
jo
add
mov
clc
jg
mov
scas
sbb
sbb
push
movsl
clc
shlb
incl
adc
add
push
dec
std
push
pop
cmp
xabort
clc
xchg
icebp
push
add
cmc
dec
aas
mov
push
add
jns
clc
sub
add
jge,pn
mov
mov
mov
fmul
jb
add
add
cmp
inc
clc
pop
imul
push
lods
ljmp
add
mov
add
flds
xchg
push
cmp
lahf
mov
add
scas
popa
add
mov
and
add
mov
jno
add
out
jg
in
pusha
add
mov
imulb
pushf
inc
clc
data16
inc
add
push
add
xor
add
add
daa
clc
insl
gs
nop
dec
cld
xchg
je
add
bnd
repnz
cmp
mov
fisubs
clc
sbb
add
clc
faddl
add
sub
jp
clc
cmp
clc
inc
add
inc
clc
dec
dec
cmp
cmp
ja
lea
fstpt
nop
pop
cmp
jns
xor
add
push
push
add
lea
das
push
add
icebp
lret
sbb
add
add
pusha
add
mov
push
outsb
and
add
sub
fs
js
clc
fwait
pop
mov
jg
aas
add
xor
add
clc
mov
addr16
dec
cmp
mov
lahf
lret
mov
popf
xbegin
daa
clc
mov
add
jne
mov
clc
sti
xlat
pop
mov
mov
or
sbb
jmp
mov
mov
add
ret
mov
add
add
clc
iret
pushf
repnz
sub
lahf
sbb
clc
enter
clc
imul
icebp
cs
scas
jecxz
push
add
pop
test
xchg
in
ljmp
cmp
add
cmp
add
xor
xor
add
sbb
inc
clc
mov
clc
mov
clc
cmp
add
pop
jno
add
mov
clc
idivb
addr16
xchg
incb
and
push
aad
or
add
fimull
add
and
add
inc
add
rcr
mov
int3
pop
mov
add
jo
add
inc
clc
divl
cmp
clc
mov
clc
stc
jg
clc
into
mov
add
stos
sbb
leave
out
mov
sbb
add
ja
shr
and
add
clc
or
clc
dec
mov
add
jge
clc
cmp
push
pushf
cmp
add
addr16
xchg
jp
adc
add
clc
fidivl
mov
movsb
clc
je
pushf
cld
shl
mov
sbb
std
add
add
add
sub
clc
and
int
pop
scas
lret
jae
add
cs
mov
lret
cltd
jle
pop
outsb
jg
repnz
clc
aad
into
pop
das
sahf
movsl
clc
scas
or
push
add
cmpsb
clc
pop
outsl
outsb
pop
popf
cmp
cmp
test
scas
lock
adc
add
add
adc
dec
icebp
or
jp
add
mov
add
add
bound
add
jnp
test
add
hlt
je
push
xor
clc
or
add
cmp
add
xchg
int
pop
clc
stos
xor
add
mov
clc
cwtl
cs
addr16
inc
clc
enter
mov
adc
add
jl
mov
fisubrs
clc
cmp
leave
cmc
aas
fistl
clc
and
add
shrb
sub
pop
movsb
clc
xchg
pushf
shrl
adc
fbstp
imul
xchg
test
movsl
clc
ret
clc
or
clc
add
je
mov
add
xor
add
test
mov
add
push
clc
xchg
dec
cmpsl
clc
and
add
xlat
push
in
jg
clc
cmpsl
clc
bound
add
insl
std
mov
adc
add
push
add
jnp
lahf
mov
add
test
aas
mov
ja
xchg
out
xchg
xchg
mov
add
mov
dec
pop
push
add
sar
add
add
pop
cmp
xchg
mov
add
inc
clc
clc
gs
sbb
fdivrs
test
or
add
pusha
add
jecxz
jge
pop
aam
xor
clc
clc
xchg
add
add
dec
pusha
add
and
add
add
xbegin
sbb
add
out
mov
or
adc
add
pop
rclb
add
dec
mov
js
test
add
add
sub
clc
xchg
xchg
inc
add
bnd
jno
add
insl
fmuls
jno
add
add
add
xor
or
add
mov
setg
add
clc
sbb
jbe
icebp
hlt
cmp
adc
add
cmc
mov
sbb
clc
add
add
and
mov
ds
or
add
push
mov
clc
push
cld
jns
scas
loop
mov
add
add
lcall
repz
add
cmc
insl
pushf
cmp
clc
sub
loopne
popa
add
mov
cmp
dec
mov
add
icebp
cmp
xor
je
shll
iret
inc
add
std
inc
add
xor
add
lret
add
mov
sar
add
xlat
jne
jge
clc
loope
rolb
cld
xor
add
push
fidivs
add
mov
jae
add
popa
add
jle
sahf
xchg
call
clc
adc
add
mov
lret
std
push
add
fdivs
xlat
xor
clc
add
add
jmp
mov
clc
sahf
pop
or
add
jmp
sub
clc
addr16
iret
dec
cli
mov
je
mov
lahf
adc
add
aaa
push
mov
add
inc
add
mov
xor
add
clc
js
jb
add
add
cmp
popf
jne
clc
ret
clc
cmp
clc
mov
add
test
pop
rorb
push
add
test
jae
add
clc
mov
sub
clc
cmp
adc
add
lcall
cmp
adc
add
add
clc
fistpll
add
inc
add
mov
cwtl
pop
test
add
cmp
fisubrs
pop
cmp
add
mov
clc
call
clc
adc
add
add
pop
sub
fidivl
add
sar
push
add
cmp
mov
or
arpl
add
mov
add
ret
add
cmc
pop
clc
push
insb
or
out
imul
add
fcom
adc
clc
out
or
hlt
test
jno
add
clc
cwtl
lret
jbe
and
clc
adc
cmp
add
pop
sub
clc
call
lret
mov
mov
test
clc
cs
clc
ret
clc
xor
xchg
sub
add
test
aas
mov
or
imul
lret
add
add
popf
mov
cmp
mov
add
loope
push
mull
add
or
lods
jg
jbe
clc
jb
add
clc
test
add
add
add
mov
add
bound
add
nop
imul
sahf
jns
add
xor
stos
fadd
clc
sbb
xor
add
xor
stc
or
lods
cltd
sbb
add
clc
push
adc
cmp
test
push
jne
push
divb
aaa
add
or
add
dec
add
add
inc
add
or
clc
dec
clc
and
add
ja
clc
clc
into
into
jp
clc
push
add
gs
out
addr16
dec
cli
cwtl
sahf
cs
xbegin
push
data16
xor
add
jl
repz
add
add
clc
out
mov
aad
or
xabort
clc
xchg
cld
and
fsubrl
loop
rclb
add
cmp
add
jle
inc
add
pop
call
inc
clc
pop
loopne
sbb
addr16
xchg
out
or
add
pushf
into
or
add
clc
lret
cmp
pop
shl
pop
dec
icebp
mov
clc
enter
aas
pop
pop
fwait
cs
mov
jae
add
and
add
clc
fmuls
sti
aam
scas
push
add
arpl
add
add
push
bound
add
frstor
fwait
xchg
sub
clc
outsl
es
jp
xabort
mov
add
add
cmpsl
clc
add
add
bound
add
jo
add
aaa
aam
outsl
add
add
clc
arpl
add
add
cmp
add
es
lahf
push
add
iret
js
add
adc
add
out
popa
add
cli
push
sahf
sti
daa
clc
movsl
clc
sub
mov
inc
add
mov
mov
scas
lret
add
or
mov
clc
pushf
bound
add
add
adc
add
add
gs
push
arpl
add
pop
cmp
repnz
test
jle
clc
inc
clc
xchg
iret
stc
es
or
clc
or
cmp
lret
sbb
clc
cmpsl
clc
cmp
insl
dec
xlat
cmp
cmp
jecxz
xchg
push
sub
jl
clc
jle
add
insb
mov
aad
push
cmp
clc
dec
cmp
clc
fcoms
gs
in
stos
add
add
outsb
cmc
sbb
ss
clc
ljmp
push
add
cmp
ss
loop
test
loopne
cmp
mov
adc
add
sbb
add
xabort
clc
add
add
pop
mov
into
mov
lcall
jge
enter
cmp
popf
cmpsb
clc
in
xchg
divb
add
in
daa
clc
stos
in
mov
iret
es
add
add
cmp
add
add
pop
mov
clc
fiaddl
add
inc
clc
inc
add
mov
dec
and
add
jno
add
xchg
loopne
aad
clc
inc
add
lahf
push
outsl
enter
stos
mov
add
add
loopne
cmp
clc
popf
sbb
add
add
pop
clc
stos
push
xchg
ja
test
clc
and
stos
mov
outsl
jmp
adc
add
pusha
add
imul
sti
sbb
cmp
lret
pop
mov
mov
outsb
jno
add
mov
fcoml
stos
scas
inc
add
pop
sub
xor
add
dec
xor
add
fwait
jp
mov
jns
cmp
or
shlb
mov
fcmovb
clc
ljmp
mov
add
cli
daa
clc
jbe
test
outsb
jo
add
add
fsubl
add
lods
mov
add
insb
aad
and
add
add
mov
fisttps
add
enter
fisubrl
lock
mov
dec
pop
shr
dec
mov
add
dec
enter
add
ja
add
sub
add
xchg
push
add
clc
pop
inc
add
xlat
pop
in
jmp
rcll
xor
add
add
clc
add
add
add
lcall
ret
clc
dec
mov
pop
fisttps
push
cmp
add
mov
lods
cltd
mov
xor
clc
sahf
dec
sar
adc
inc
add
mov
aas
into
push
add
pop
leave
in
mov
inc
clc
or
ret
sub
incb
add
das
lret
out
pop
push
jecxz
and
add
sbb
clc
idivl
in
dec
pop
shrl
int
clc
leave
out
and
add
add
xor
add
jno
add
add
jb
add
xor
add
mov
clc
push
clc
and
add
add
repz
clc
pop
shll
add
adc
add
add
mov
fwait
cmp
clc
jmp
fldcw
clc
cmp
mov
add
ret
clc
je
mov
out
fs
mov
clc
int
pop
or
insl
xor
stos
arpl
add
mov
mov
add
aas
mov
cmp
cmc
adc
add
popf
std
sub
add
roll
daa
clc
daa
clc
loopne
fs
xchg
mov
adc
add
clc
ljmp
add
add
xchg
in
aas
pop
cmp
push
gs
popa
add
and
add
xor
or
adc
add
aas
insl
std
mov
std
mov
clc
mov
jbe
int
std
inc
clc
sar
push
add
clc
mov
push
or
data16
mov
lock
jbe
ljmp
pusha
add
stos
push
fdivrl
sar
lods
in
fistpll
bound
add
nop
xchg
mov
add
or
out
repnz
add
add
add
add
add
adc
add
clc
push
add
aad
add
pop
pusha
add
cmp
cmp
add
cli
out
push
roll
add
inc
clc
cmpsb
clc
xchg
xor
clc
test
sbb
aad
clc
and
add
add
pop
sbb
je
cmp
add
cmp
push
dec
jae
add
push
clc
aam
movsl
clc
inc
clc
stc
adc
add
clc
js
test
mov
push
sbb
inc
clc
push
or
mov
xchg
pushf
cltd
cmp
inc
add
ret
clc
inc
clc
xor
add
clc
nop
scas
xabort
jnp
dec
sub
or
mov
add
add
add
in
clc
and
add
out
lahf
daa
clc
fs
sub
notb
add
add
lock
clc
aad
test
sbb
lret
test
mov
sar
clc
mov
pop
push
add
bnd
outsb
adc
pop
clc
and
add
clc
and
add
add
jae
add
std
mov
clc
jno
add
add
cmp
inc
add
fsubs
clc
sub
add
inc
add
pop
sub
mulb
fwait
pop
cmp
sti
mov
clc
aas
insb
imul
out
hlt
cld
or
clc
pop
adc
add
add
xor
add
and
add
push
dec
ds
gs
hlt
fwait
incb
inc
add
push
pop
imul
clc
out
sub
sub
insb
repnz
mov
dec
dec
mov
scas
in
mov
mov
clc
push
add
cmpsl
clc
in
inc
clc
or
clc
faddl
add
cmp
fisubs
add
movsb
clc
cld
stos
lea
sbb
cmpsl
clc
pop
mov
lahf
push
mov
cmp
cli
cmp
enter
clc
pop
or
mov
clc
sbb
sub
mov
clc
js
add
pop
push
rcl
mov
cmp
jle
xabort
adc
add
xchg
xchg
ja
aas
mov
cmp
fadds
clc
inc
clc
xchg
cmp
add
sahf
aas
xchg
mov
add
dec
xor
add
clc
add
add
lods
and
add
cmp
dec
clc
loop
inc
clc
adc
add
push
add
sbb
inc
clc
kmovw
add
clc
xor
add
add
push
add
mov
add
test
add
inc
add
adc
add
add
clc
or
clc
adc
add
out
repnz
add
shlb
clc
or
clc
sti
test
cwtl
jns
fildll
mov
add
adc
add
cmpsb
clc
add
stos
test
cltd
ljmp
pop
cmpsb
clc
cmc
je
inc
clc
push
sti
mov
sar
add
mov
add
mov
dec
pop
decb
icebp
dec
mov
dec
pop
mov
mov
xchg
pop
mov
je
fsts
bndldx
add
loopne
or
add
clc
cmp
jp
loopne
popa
add
xchg
ret
clc
cmpsb
clc
sbb
mov
add
add
clc
cmp
add
add
rolb
add
sti
push
insl
sahf
movsb
clc
fistpl
and
add
imul
add
clc
clc
outsb
cmp
inc
clc
sub
add
clc
and
pop
outsb
addr16
inc
add
push
lahf
inc
clc
and
add
cmp
dec
jne
stos
jb
add
add
dec
push
adc
add
add
ss
clc
pop
call
jge
xchg
out
inc
clc
hlt
mov
clc
or
test
inc
add
xlat
jb
add
lret
cs
clc
jns
clc
cli
cmp
add
jns
call
cmp
test
add
inc
add
cmp
clc
sahf
hlt
push
fbld
lret
jecxz
stos
push
push
das
mov
clc
jmp
clc
ljmp
cld
out
pop
or
xor
clc
lsl
add
inc
clc
sbb
sbb
pop
pop
out
call
add
jns
aam
sti
fiadds
add
addr16
add
add
mov
jmp
lahf
jo
add
jecxz
pop
cmp
xor
clc
pop
jnp
icebp
aam
pop
fistps
add
sbb
enter
add
add
jb
add
add
mov
add
jg
clc
imul
mov
fsubr
movsl
clc
mov
push
scas
sahf
sarl
mov
clc
inc
add
and
add
mov
in
push
scas
cmp
pop
jo
add
clc
push
cli
cmpsb
clc
addr16
xchg
or
clc
mov
aam
icebp
pop
xchg
iret
or
pop
icebp
cli
ret
loopne
fimuls
cmp
cwtl
push
lret
popa
add
addr16
jb
add
jp
xlat
dec
or
js
add
mov
mov
loopne
or
push
in
test
inc
clc
jle
push
inc
clc
outsb
pop
clc
int
add
add
call
xchg
xchg
xchg
sub
aam
imul
add
sub
lahf
seta
clc
sbb
int3
cmc
jl
sar
add
stos
out
mov
add
add
add
xor
add
add
popa
add
add
add
clc
call
add
or
pop
clc
inc
add
mov
xor
add
xabort
add
ss
inc
clc
jb
add
sbb
test
cs
pusha
add
into
pop
jg
pop
repnz
fwait
or
add
cmp
imul
add
inc
add
sbb
nop
shlb
cmp
clc
push
clc
mov
mov
xchg
clc
xchg
xlat
adc
iret
jb
add
add
outsl
inc
clc
mov
add
mov
aam
jb
add
add
add
push
add
push
cmpsl
clc
mov
cmp
adc
add
fmull
out
lret
pusha
add
dec
dec
xchg
or
sti
flds
add
mov
jmp
clc
clc
add
add
xlat
dec
cmpsl
clc
dec
xor
incb
clc
data16
adc
loop
sti
mov
xchg
loopne
loopne
insl
and
add
imul
sti
repnz
add
negl
add
fsubs
add
sbb
clc
mov
inc
clc
and
add
enter
sar
inc
add
jl
add
bound
add
add
add
hlt
xchg
test
clc
add
push
ljmp
clc
xor
add
ucomiss
sbb
add
push
clc
iret
and
sbb
cmp
out
rcll
add
bound
add
cltd
aas
push
add
xor
add
add
fsubr
sar
loopne
push
add
cmp
fnstsw
dec
aad
arpl
add
add
add
shll
add
or
movsb
clc
or
std
pop
out
sub
and
add
sbb
test
xor
das
sbb
imulb
push
add
lods
sar
add
jbe
cmp
xchg
pop
push
inc
add
dec
cmpsb
clc
push
add
clc
adc
add
jmp
xor
add
sar
add
sub
cltd
lret
clc
push
clc
sahf
clc
mov
pop
cmpsb
clc
pop
jmp
add
outsl
inc
clc
sub
add
int
clc
or
xchg
add
add
sbb
sahf
lret
clc
push
add
aam
out
cmp
clc
jl
jns
or
xor
add
data16
cmp
add
xchg
mov
rcrl
repz
and
add
out
pop
popf
sbb
mov
clc
push
add
jae
add
aad
clc
call
aam
xbegin
clc
jp
repz
aam
clc
lahf
mov
jb
add
add
or
jecxz
or
fsubl
clc
fcomps
sub
dec
xchg
adc
add
xchg
negb
icebp
pop
push
add
jmp
push
add
add
add
lcall
add
xor
add
loop
hlt
or
inc
add
sub
add
fwait
push
and
add
cltd
dec
je
jno
add
out
cmc
ja
in
mov
pop
clc
mov
add
add
imul
xlat
mov
mov
clc
stos
call
xlat
adc
push
pop
clc
add
add
push
js
clc
xchg
lret
scas
test
call
add
pop
jmp
es
adc
add
lahf
sbb
clc
fsubl
clc
out
cmp
xchg
ds
or
clc
shlb
stos
sub
dec
add
add
add
mov
or
test
scas
add
add
add
and
add
or
clc
mov
clc
sar
cmpsl
clc
sbb
add
fwait
cli
and
add
mov
aad
call
clc
xchg
daa
clc
fcmovb
clc
jg
xor
add
mov
add
add
movsl
clc
xor
add
add
stc
and
add
clc
cmp
add
push
mov
xchg
xchg
push
jecxz
test
cmp
js
jmp
enter
mov
add
xor
mov
repz
add
aad
push
pop
clc
bnd
testl
fisttps
clc
cmpsb
clc
or
mov
clc
pop
cmpsb
clc
lret
shrb
add
emms
mov
clc
xor
add
xor
add
imul
add
jns
mov
imul
in
imul
push
mov
arpl
add
clc
dec
or
add
test
lods
add
mov
cmp
xor
add
std
xchg
and
bnd
add
xlat
jmp
cmp
mov
movsb
clc
xor
jo
add
imul
test
movsl
clc
push
push
pop
shll
dec
jno
add
cmp
jo
add
mov
sti
cmpsb
clc
mov
fcomps
btc
add
push
frstor
add
xchg
stc
add
add
cmp
mov
clc
sub
add
bound
add
and
fdiv
lret
add
xchg
fisubl
mov
add
add
clc
jge
repz
in
das
cmp
clc
cmpsb
clc
adc
add
ficompl
mov
add
lea
clc
push
add
data16
mov
add
int
add
add
sub
xchg
cltd
das
mov
mov
out
roll
add
clc
add
add
jmp
cmp
gs
mov
or
add
add
mov
stc
mov
jbe
cs
xchg
daa
clc
aaa
cmpsb
clc
dec
jmp
clc
dec
jns
call
clc
gs
cmpsl
clc
xor
add
add
push
mov
jg
lods
sbb
daa
clc
mov
clc
sub
clc
pusha
add
mov
jns
clc
iret
mov
clc
pushf
mov
mov
mov
jbe
in
int
clc
aam
xchg
or
add
pop
lea
push
cmc
aad
add
out
xchg
insl
sbb
add
sub
dec
xor
xchg
pop
jp
add
push
xor
push
inc
clc
repz
lcall
adc
add
cli
cmpsl
clc
lods
pop
into
scas
lods
and
add
movsb
clc
pop
je
mov
stos
cmp
clc
repnz
fldenv
add
jg
jmp
clc
sbb
add
sbb
pop
cmp
mov
daa
clc
inc
clc
cmp
clc
add
add
fadds
add
insb
push
add
sbb
push
in
mov
inc
add
cwtl
sbb
add
xlat
mov
js
jnp
clc
daa
clc
andnps
push
cmp
test
or
sti
lods
in
lods
and
add
mov
pop
xabort
add
fisubs
clc
sub
and
add
add
lret
pop
add
add
jg
out
stos
in
add
in
in
sub
mov
lea
add
push
xchg
and
add
add
xchg
dec
mov
clc
dec
jne
jmp
add
das
out
sti
lods
xchg
flds
sar
in
jbe
add
shr
movsb
clc
jb
add
cli
loop
flds
jne
movsl
clc
xchg
jg
daa
clc
sbb
pop
pop
mov
clc
cli
and
in
leave
pop
aas
cmovg
clc
or
add
iret
es
mov
pop
shll
add
mov
mov
clc
push
add
sbb
add
and
ljmp
call
insl
cmp
nop
int3
cmp
push
add
rorl
pushf
insl
not
mov
add
xchg
inc
clc
cmpsb
clc
mov
clc
push
pop
mov
lock
clc
mov
pcmpeqb
clc
icebp
push
in
dec
ret
clc
sub
add
bound
add
in
fidivrs
mov
mov
mov
xchg
aam
add
add
add
clc
loop
pop
icebp
dec
inc
clc
sub
add
shrl
mov
clc
inc
clc
repz
lahf
imul
xor
add
clc
add
add
xchg
mov
lret
in
xchg
jns
cmpsl
clc
cmp
clc
cmp
add
mov
cmp
add
push
sti
push
add
movsb
clc
clc
dec
lahf
loop
cmp
sar
stc
adc
cmpsl
clc
dec
jae
add
clc
test
clc
mov
ja
clc
xchg
push
clc
in
mov
loope
mov
addr16
iret
or
dec
xchg
data16
or
xchg
mov
cltd
push
je
pop
popf
das
xchg
jb
add
clc
in
add
repnz
mov
shl
clc
int3
dec
loope
adc
add
jge
mov
add
daa
clc
add
add
add
mov
clc
addr16
push
add
add
add
mov
dec
and
xor
add
fnstenv
add
add
outsb
jecxz
pop
clc
inc
add
repz
push
add
jmp
push
add
scas
and
add
ljmp
sar
add
mov
test
push
clc
pop
dec
jns
sbb
pop
addr16
mov
pop
sar
dec
in
pop
bswap
scas
je
mov
add
lret
add
sar
add
add
add
add
mov
add
sub
clc
push
add
xchg
or
sub
add
fisubrs
call
inc
clc
cmp
add
out
dec
and
add
clc
enter
gs
outsl
popa
add
div
fwait
xchg
mov
add
mov
movsb
clc
outsl
add
jmp
add
repz
add
pop
mov
inc
add
add
add
xchg
jnp
imul
xchg
push
js
aam
clc
xor
add
add
xchg
out
xabort
clc
addr16
iret
test
test
xor
jg
outsb
adc
add
fcoms
clc
xchg
cmp
cmp
sub
mov
push
adc
add
jns
pop
cwtl
js
add
add
in
pop
cmp
popf
in
clc
xchg
xor
add
add
mov
mov
jbe
add
fwait
jbe
aam
clc
in
or
add
test
cmp
lods
aaa
negl
clc
pop
imul
mov
jl
lret
xchg
movsb
clc
mov
std
add
add
shl
clc
pusha
add
outsb
out
or
or
dec
adc
add
out
fabs
clc
add
add
clc
cmp
and
add
add
clc
leave
mov
add
cmp
lret
mov
icebp
pop
push
add
mov
add
sbb
lods
xor
mov
cmpsb
clc
aam
clc
leave
xchg
mov
clc
ss
clc
mov
cmp
pop
clc
lcall
or
clc
push
add
mov
int
pop
add
xchg
adc
add
add
sub
add
cmp
cwtl
jo
add
cli
je
add
mov
or
mov
cs
sti
or
mov
fisttps
or
mov
add
hlt
add
clc
lods
out
sbb
xlat
imul
out
ljmp
add
add
roll
add
xchg
cwtl
mov
push
mov
js
in
in
xbegin
jns
clc
mov
data16
cmp
testl
xchg
mov
mov
pop
adc
add
lock
imul
enter
insl
mov
ljmp
add
mov
fwait
aad
stc
into
add
add
add
mov
push
sbb
push
xor
add
dec
adc
add
sti
out
iret
push
add
loopne
cli
sbb
inc
add
push
fiaddl
add
sar
cwtl
outsl
addr16
cwtl
fidivl
add
inc
add
lock
cld
jo
add
or
add
add
popf
outsl
dec
cmp
clc
data16
sub
ss
ret
clc
cmp
add
push
gs
mov
clc
mov
test
nop
es
faddl
add
cmp
dec
test
and
add
loope
pop
leave
cmp
mov
clc
push
add
add
mov
clc
push
test
clc
loop
cwtl
and
add
clc
and
add
add
and
cmp
pop
addr16
neg
adc
add
mov
cmp
and
add
pop
incb
clc
fadds
xbegin
sbb
mov
dec
lods
outsl
sahf
outsb
fnstenv
loope
pusha
add
mov
add
or
cld
pop
loope
in
push
scas
repnz
add
add
dec
xchg
push
push
insl
outsb
sbb
clc
mov
add
into
sbb
gs
jg
or
clc
mov
sbb
xchg
roll
ss
mov
sbb
dec
xor
add
cmp
call
mov
data16
call
test
icebp
loop
out
fs
mov
add
ss
test
fadds
loop
sub
xchg
inc
add
sub
inc
clc
in
int3
cmpsb
clc
and
add
aad
clc
or
add
into
mov
add
add
in
pop
xor
add
add
xbegin
clc
jnp
or
clc
shrb
jno
add
mov
enter
add
add
xchg
jno
add
sar
arpl
add
clc
dec
add
add
push
add
push
jo
add
in
mov
add
clc
imul
add
add
add
shll
and
into
daa
clc
jne
push
add
push
add
xchg
ss
add
dec
push
add
push
add
cmp
mov
add
add
add
mov
jnp
sub
lods
cmp
cmpsl
clc
mov
leave
scas
cmp
stos
lahf
inc
add
push
pushf
sar
and
add
clc
out
fldl
clc
sub
clc
adc
add
push
dec
adc
add
test
mov
fldenv
add
add
cmp
cmpsb
clc
nop
mov
cli
mov
in
pop
insl
ret
out
out
out
mov
mov
clc
cmp
add
add
daa
clc
sub
clc
ret
clc
pop
mov
cmp
clc
repz
mov
pop
in
jmp
dec
inc
add
ds
aas
pop
sarb
call
pop
ret
addr16
xor
add
push
add
mov
push
add
out
and
add
push
mov
clc
jb
add
js
clc
ljmp
add
in
pop
nop
aam
outsb
mov
leave
jle
int
clc
lahf
rcll
add
fisubs
add
cmp
add
divps
add
fidivrl
cmp
clc
sub
clc
dec
sub
stc
adc
add
pop
aam
add
sub
jle
clc
inc
clc
adc
add
icebp
insl
and
out
xlat
shll
add
xchg
jno
add
xor
add
sub
adc
add
mov
push
add
sar
clc
movsb
clc
in
lods
outsb
jg
clc
or
shlb
add
clc
sar
clc
and
add
jmp
add
adc
add
je
daa
clc
inc
add
cli
fisubl
clc
arpl
add
add
data16
movsl
clc
or
add
inc
add
mov
add
iret
test
add
add
add
movsl
clc
nop
cwtl
pusha
add
int
sbb
add
push
add
int
addr16
fdivrl
addr16
fimull
clc
push
sbb
divl
fcom
shrl
or
clc
leave
adc
add
insb
mov
inc
add
sub
mov
ja
cmp
mov
clc
xchg
outsb
insl
xabort
das
jp
sub
add
add
clc
mov
cmp
sti
movsb
clc
aaa
fcomp
mov
clc
mov
add
pop
iret
or
add
call
push
add
cld
jle
clc
or
or
clc
sbb
imul
add
add
sahf
ret
test
push
xchg
lret
mov
mov
cmp
js
mov
jnp
jo
add
ljmp
clc
scas
push
add
jge
jo
add
data16
inc
clc
repnz
cmp
push
stos
push
cld
mov
hlt
pop
repnz
add
jbe
xor
add
sub
jmp
push
add
xor
add
aas
divb
enter
out
mov
xchg
mov
sbb
and
inc
clc
xchg
mov
mov
add
ja
clc
mov
ds
clc
cmp
popa
add
clc
and
add
loope
mov
add
dec
je
jno
add
pminsw
loop
pop
outsl
outsb
sbb
sti
cmp
sar
jno
add
xabort
inc
add
add
or
clc
pop
lods
inc
add
xlat
popf
cmpsb
clc
and
pop
pop
push
and
clc
sub
imul
jnp
jnp
cmp
add
xchg
push
add
test
lock
mov
jg
flds
or
ficoml
add
add
add
add
mov
clc
test
insb
vmovups
add
add
icebp
dec
sar
sub
sub
in
clc
dec
outsb
leave
mov
add
xchg
and
add
jb
add
clc
pop
sub
xbegin
mov
cmc
lea
mov
sbb
add
loope
push
cmp
xchg
scas
in
xchg
xchg
or
aam
clc
cmp
mov
add
add
add
lcall
stc
daa
clc
in
mov
or
loopne
fisttpl
fucomp
cmp
cmp
add
add
adc
sub
clc
sub
jnp
clc
call
add
mov
mov
clc
jp
cmp
add
fsts
add
add
adc
adc
add
int
jp
je
clc
xchg
jecxz
in
jmp
clc
xor
add
add
xchg
call
push
add
sbb
movsb
clc
and
cmc
fsubl
gs
push
mov
popf
sarl
xchg
dec
inc
add
mov
add
add
clc
and
add
add
xchg
pop
fdivrp
xor
add
clc
mov
clc
arpl
add
mov
ffree
clc
outsl
icebp
imul
fs
call
pop
mov
add
clc
sbb
clc
sar
outsl
hlt
mov
push
add
xchg
cltd
push
icebp
inc
add
jne
vminps
add
test
jl
cmp
push
xlat
addr16
xor
adc
add
add
clc
popf
out
js
add
cltd
popa
add
lcall
cs
outsb
in
cmp
sub
clc
push
clc
popf
adc
add
imul
dec
dec
dec
in
cmp
add
clc
cmp
xchg
and
or
add
push
fwait
sar
inc
add
filds
add
inc
add
cmp
clc
adc
arpl
add
clc
addr16
cmc
xlat
sub
cs
add
clc
adc
add
add
stos
mov
add
loop
cmp
add
pop
clc
adc
je
cwtl
add
add
scas
add
fstpt
cmp
shll
clc
rcrb
mov
add
add
sub
lods
push
mov
push
emms
aaa
dec
mov
idivl
inc
add
push
outsl
rcl
or
add
sub
cmp
clc
sar
xchg
out
inc
clc
call
add
xchg
xchg
push
mov
dec
fidivl
clc
movsl
clc
xor
add
add
xchg
cmp
adc
add
add
push
add
rorb
or
add
mov
and
add
es
popf
adc
add
mov
clc
stos
cmp
add
mov
mov
fsubl
add
xchg
imul
xchg
xor
add
cmp
ret
push
insb
cmp
xor
clc
data16
enter
clc
hlt
and
add
clc
mov
jle
sbb
fcomps
jge
test
incb
js
jnp
clc
out
in
mov
add
mov
iret
xchg
lret
xor
add
mov
and
add
add
jle
das
xchg
pop
mov
clc
ficoml
xlat
lret
jp
mov
aaa
mov
add
pop
rclb
out
outsl
shll
add
bnd
push
xchg
shlb
insl
int3
cmp
add
aad
sbb
mov
add
jmp
ret
clc
jp
or
add
or
add
test
clc
push
add
cmp
clc
jb
add
scas
jl
movsb
clc
jmp
repnz
mov
outsb
cmp
add
loope
sub
cld
sar
ljmp
add
fistps
add
dec
cmp
pop
and
mov
sti
into
mov
test
add
add
add
clc
and
add
clc
arpl
add
in
mov
es
and
add
clc
fucomp
sbb
loope
cmp
add
add
scas
jae
add
aad
sbb
jl
iret
in
test
jl
add
jmp
add
clc
clc
fldenv
clc
arpl
add
test
sub
clc
push
cs
in
pop
bound
add
mov
aad
sar
scas
inc
add
pop
push
add
add
mov
adc
add
add
add
sub
xchg
scas
push
jbe
mov
inc
add
xor
add
clc
repz
loopne
ret
clc
adc
pop
pop
cmpsl
clc
fldenv
add
jbe
add
scas
je
add
mov
clc
cli
fdivrl
jnp
mov
sar
leave
add
add
add
clc
leave
push
in
lret
sti
mov
inc
clc
nop
push
fcomps
push
mov
sarl
add
lods
in
aam
inc
add
fisubrs
rolb
add
stos
mov
cmp
add
xchg
mov
clc
or
xchg
and
stc
mov
in
and
add
xlat
mov
aaa
nop
shlb
add
call
xchg
xor
add
add
push
jmp
push
add
ret
inc
add
in
nop
out
push
clc
mov
inc
add
or
add
add
loop
popa
add
mov
ja
clc
aad
insb
mov
xlat
loope
and
add
xabort
mov
clc
rclb
add
xchg
sub
clc
jns
arpl
add
rcrl
sbb
aaa
inc
clc
cmpsb
clc
pusha
add
mov
clc
movsl
clc
bound
add
lahf
jae
add
add
stos
jne
sbb
lret
ljmp
clc
mov
sbb
sbb
mov
clc
data16
dec
aam
clc
cmp
dec
mov
xchg
stos
add
or
clc
js
adc
clc
push
add
std
inc
clc
jl
add
pop
icebp
jb
add
clc
rol
clc
ljmp
leave
out
inc
add
clc
adc
clc
out
jnp
mov
xchg
mov
sbb
sub
loop
sbb
mov
add
or
clc
or
add
add
clc
insl
imul
xchg
jnp
clc
mov
cmp
add
sub
clc
fidivrl
emms
popl
clc
lock
clc
xchg
testb
add
clc
loop
arpl
add
sub
adc
add
js
add
add
sub
add
pusha
add
insb
cmp
add
cmp
jns
clc
cmp
aaa
dec
das
mov
and
add
and
add
dec
je
dec
xchg
out
ljmp
add
clc
imul
shll
add
test
clc
je
clc
insl
in
adc
add
add
hlt
imul
stos
aas
arpl
add
out
fsubrl
mov
cmp
clc
iret
out
scas
mov
sbb
mov
mov
arpl
add
dec
xchg
mov
clc
js,pn
clc
stos
xchg
inc
add
in
in
sarl
cmp
ret
clc
in
dec
jnp
pop
xor
add
add
cmp
test
xor
add
add
dec
sub
mov
fs
data16
hlt
scas
pop
or
loop
or
ljmp
add
outsl
or
clc
js
insl
mov
shrb
jg
sti
pop
js
hlt
jne
clc
jmp
or
mov
add
pusha
add
insl
cmp
add
mov
clc
je
push
add
repz
clc
mov
add
icebp
cmc
push
add
adc
add
clc
adc
xor
sub
cmpsl
clc
das
aaa
and
add
mov
test
lea
add
cmpxchg
clc
sub
push
or
clc
jo
add
cmp
xchg
lock
inc
clc
out
inc
clc
je
sar
mov
clc
cmp
add
clc
push
add
inc
add
or
push
clc
aaa
push
js
mov
inc
clc
clc
daa
clc
xor
add
test
mov
push
add
rcll
clc
repz
push
add
sbb
imul
add
dec
pop
addr16
pushf
push
jge
and
add
in
das
and
add
shll
add
outsb
mov
xchg
test
cwtl
fwait
jo
add
add
addr16
xor
add
pop
fs
fists
add
jb
add
and
cwtl
sbb
clc
mov
data16
push
lods
add
add
mov
clc
cld
xor
add
dec
add
clc
leave
cmp
mov
clc
jle
pop
xor
add
add
cmp
clc
enter
jbe
push
add
outsl
jp
add
test
clc
scas
lock
add
add
clc
jge
clc
push
adc
pop
std
scas
jl
clc
xlat
cwtl
cmp
incb
ficoml
dec
fisubrs
clc
mov
or
mov
add
in
lods
push
ror
add
add
test
sub
jl
jb
add
add
lahf
sub
bound
add
nop
and
add
clc
out
inc
add
scas
mov
clc
jnp
add
pushf
push
add
xor
clc
mov
add
xchg
mov
clc
cli
and
add
clc
popa
add
gs
cmpsb
clc
mov
add
add
mov
clc
dec
dec
xor
add
clc
cmp
add
fwait
stos
cmpsb
clc
ret
sarl
dec
aam
clc
xchg
push
jnp
adc
add
mov
mov
cmp
clc
xor
push
aas
call
add
add
xchg
xchg
or
popf
sub
add
push
fsubrp
mov
fadds
add
clc
jle
mov
add
cwtl
pop
out
jecxz
mov
clc
ret
clc
ss
loope
inc
add
jp
clc
xchg
enter
sbb
add
mov
clc
ret
and
add
imul
add
clc
fldl
mov
or
call
cmp
add
ds
jmp
repz
testb
clc
pop
jns
add
js
into
out
pop
pop
xor
add
lods
mov
sub
add
add
xabort
add
mov
bnd
lods
fisubrl
rorl
add
jns
adc
add
mov
clc
mov
add
test
add
xchg
aas
daa
clc
into
push
out
pop
clc
rcll
sub
sbb
xchg
je
clc
or
add
cmp
add
shrl
stos
dec
rol
clc
fidivrs
mov
clc
mov
clc
shlb
inc
add
sbb
into
sahf
xor
add
add
idiv
fwait
adc
add
clc
lods
test
bound
add
mov
mov
jp
clc
jp
cltd
jecxz
xbegin
add
add
psubw
clc
mov
pop
push
add
mov
movsl
clc
pop
in
jmp
cmp
test
cmp
add
aas
js
adc
add
jns
clc
jns
out
stc
and
add
sub
sbb
add
add
cmp
cmpsl
clc
mov
add
clc
cmp
add
outsb
xbegin
test
sti
jmp
clc
or
xor
add
add
sar
add
xlat
mov
clc
cltd
lahf
inc
add
jbe
gs
test
add
mov
add
mov
repnz
out
in
dec
add
add
add
stos
data16
jle
add
lret
sti
cmpsl
clc
sub
imul
jecxz
sbb
dec
push
dec
pusha
add
mov
ret
clc
fsub
clc
fisttpl
pop
in
xlat
jnp
aam
bound
add
clc
mov
pusha
add
sarl
xchg
xor
add
add
lcall
xchg
mov
jns
add
pop
adc
add
mov
add
xchg
pop
jo
add
cmpsl
clc
out
or
mov
adc
add
dec
push
xchg
or
add
add
mov
or
cmp
clc
xchg
iret
imul
dec
cmp
cmp
gs
mov
je
loop
mov
clc
loopne
sar
mov
jecxz
push
xor
add
sahf
push
add
mov
clc
adc
clc
clc
daa
clc
xchg
mov
clc
jo
add
clc
fnstenv
inc
clc
lods
mov
xor
add
add
jmp
sbb
fdivl
ret
clc
pop
popf
or
clc
push
add
pushf
fnstsw
add
jmp
clc
and
add
xchg
in
dec
clc
ds
stos
cld
push
pop
clc
repz
add
stos
jecxz
fcomi
jae
add
fnclex
clc
mov
fwait
mov
clc
mov
add
dec
into
hlt
in
lods
enter
add
std
cmpsb
clc
xor
add
clc
xor
add
mov
add
es
dec
cmp
xchg
mov
mov
dec
mov
add
add
mov
add
or
testl
iret
sub
add
pusha
add
movsb
clc
adc
add
dec
pusha
add
sbb
xchg
dec
es
fwait
insb
inc
add
xchg
add
add
or
add
cmpsb
clc
jmp
leave
test
sti
testl
pop
clc
xor
add
xlat
fidivs
add
fmuls
sarl
movsl
clc
jns
add
vmovaps
xchg
mov
pop
leave
adc
add
sub
clc
cltd
pop
int3
inc
clc
out
insl
mov
add
add
out
xor
add
jle
es
adc
and
add
cmp
add
clc
mov
add
mov
andps
fadds
inc
clc
mov
outsl
aaa
loopne
ds
cmp
jbe
pop
jno
add
clc
scas
bound
add
push
xchg
dec
ret
clc
jl
add
push
lret
clc
bound
add
clc
mov
xor
jmp
add
mov
jbe
xchg
jl
add
decb
dec
in
bound
add
lahf
jmp
testb
adc
pop
push
add
fimull
clc
mov
xor
fs
arpl
add
clc
stos
aaa
mov
clc
insl
data16
or
jns
push
out
ja
clc
es
push
clc
sahf
pop
pop
dec
xor
repz
add
sbb
dec
dec
daa
clc
mov
dec
test
notl
sub
add
jo
inc
add
fwait
mov
add
mov
jns
add
sub
jp
add
push
and
sub
inc
add
adc
add
add
add
pop
je
aaa
into
call
clc
sub
add
add
es
ret
clc
sub
clc
add
add
add
in
inc
clc
rcrb
mov
clc
xchg
xchg
mov
hlt
js
mov
fsubrs
add
ja
or
daa
clc
cwtl
filds
add
mov
ljmp
out
sbb
cltd
sub
adc
add
add
add
fs
cs
add
mov
ja
pop
pop
mov
jl
cs
clc
cwtl
in
mov
clc
fs
mov
stos
and
add
movsl
clc
sbb
add
repz
clc
push
rcr
sbb
pop
enter
add
ja
out
add
add
add
push
in
iret
mov
add
clc
cmpsb
clc
and
jecxz
popf
sarb
mov
aad
test
add
jmp
add
jmp
je
clc
add
add
clc
ret
aam
pop
mov
clc
ret
clc
cmpsl
clc
cmc
jg
mov
insl
mov
clc
test
int3
mov
nop
and
add
clc
mov
clc
dec
cs
inc
add
rcll
cwtl
ret
clc
rcr
imul
clc
lret
in
out
inc
clc
mov
add
push
add
out
xlat
scas
dec
mov
add
add
mov
add
shll
ljmp
adc
pop
inc
clc
mov
mov
jg,pn
add
sub
xabort
push
icebp
lea
add
and
add
mov
clc
or
jg
inc
clc
lock
adc
clc
mov
movsl
clc
xor
add
add
sbb
or
clc
sub
lcall
add
push
add
shll
clc
mov
add
jo
add
add
loop
push
mov
clc
mov
mov
add
push
jecxz
xbegin
adc
add
lock
dec
mov
pushf
sti
cmp
loop
sbb
sub
clc
call
jae
add
adc
add
clc
ds
xbegin
cmp
imul
add
fistps
dec
lret
test
add
aam
stos
mov
inc
clc
jp
clc
stos
or
insl
imul
mov
push
in
mov
clc
adc
add
sub
clc
push
dec
dec
pop
shll
call
clc
cmp
lods
int3
inc
add
mov
jle
mov
adc
add
fdivrp
mov
add
cmp
cmp
and
sbb
add
scas
ret
in
dec
jno
add
lea
mov
pop
stc
or
add
jne
cmp
xbegin
jo
add
clc
cltd
ror
fcmovnbe
push
fstpt
addr16
mov
xchg
mov
clc
push
clc
rcrb
add
out
int
clc
jl
clc
and
negl
pop
clc
jns
push
add
and
clc
stc
cmpsl
clc
movsl
clc
or
imul
pop
inc
add
addr16
pop
mov
xchg
xchg
inc
clc
daa
clc
or
add
add
mov
mov
clc
test
in
and
in
mov
push
add
mov
push
lcall
lea
clc
pop
stos
data16
lcall
repz
aam
mov
std
xor
add
scas
sahf
jge
and
sbb
add
pop
das
dec
ret
clc
or
add
sbb
push
cmp
push
add
loopne
out
or
inc
add
push
out
aad
add
pop
clc
mov
in
pop
jnp
clc
add
push
add
xchg
shrb
scas
jmp
ds
in
xabort
enter
cmp
add
mov
cmp
add
inc
add
ss
add
dec
xor
sub
clc
mov
leave
mov
stc
shll
add
sub
add
mov
fcoml
add
mov
test
inc
clc
xchg
and
add
clc
jns
jge
add
fs
jb
add
shll
clc
xlat
negb
es
test
add
or
add
rcr
xchg
scas
lods
mov
clc
jae
add
mov
add
ljmp
lret
out
ret
clc
xchg
sti
stos
rcll
add
mov
jmp
add
add
and
add
push
add
lret
add
fs
sbb
pop
push
add
cwtl
cmp
jno
add
lea
fs
xchg
adc
add
push
lcall
clc
add
add
sub
fsubs
add
cltd
xchg
pop
out
call
clc
cs
inc
clc
clc
push
dec
fidivs
je
jbe
jmp
xor
add
stos
pop
inc
clc
xor
add
clc
cmp
add
dec
xchg
cmpsl
clc
xchg
pusha
add
cmpsb
clc
dec
sar
add
daa
clc
ds
dec
dec
lods
jo
add
add
pop
daa
clc
clc
adc
add
add
inc
clc
sbb
mov
addr16
repnz
push
int
push
sbb
sbb
push
mov
lods
negb
add
imul
add
xchg
arpl
add
cld
imul
sbb
clc
sti
call
add
add
add
int
cmpsb
clc
xchg
roll
add
imul
xchg
mov
ljmp
inc
add
pop
ret
pop
lods
mov
clc
and
add
clc
push
movsl
clc
cli
xchg
cmp
clc
add
add
add
xabort
stos
jne
xor
jg
add
and
add
add
add
ja
push
bound
add
xchg
sbb
add
ljmp
jne
movsb
clc
jno
add
in
mov
add
cmpsb
clc
mov
add
gs
lret
dec
fnsave
add
cld
je
out
and
add
add
add
add
enter
ss
add
clc
loope
popf
ret
xchg
loope
cmp
clc
fnstcw
and
clc
cmp
clc
jp
in
popf
ret
clc
push
clc
cmp
in
adc
add
jbe
cmp
inc
add
mov
sbb
mov
add
shl
push
add
pop
sub
arpl
add
add
iret
cmc
repnz
clc
lahf
ss
pop
pop
es
inc
clc
pop
pusha
add
mov
push
jge
sti
jmp
clc
pop
xabort
in
out
sub
mov
aam
clc
push
negb
jge
clc
jle
clc
dec
stos
adc
add
add
sbb
clc
fcoml
aad
clc
bswap
jg
sbb
push
add
adc
add
insb
scas
sti
inc
add
sub
shr
jp
xchg
daa
clc
cmp
clc
xchg
or
ja
nop
insb
jne
pop
push
inc
add
pop
int
leave
stos
jb
add
cmp
add
stc
sahf
mov
push
movsb
clc
pop
cmp
pushf
inc
add
push
add
mov
jne
in
jmp
add
xor
add
fstpt
add
insb
movsl
clc
add
add
loopne
sar
cmp
out
test
aam
add
jnp
dec
xabort
push
mov
add
jle
cmc
cmp
inc
add
inc
add
icebp
sar
repz
jl
mov
add
xor
add
clc
sbb
xchg
dec
cmp
ja
clc
push
xabort
cmp
xor
add
jb
add
add
cli
inc
add
jl
mov
clc
xabort
adc
add
clc
movsl
clc
mov
add
add
clc
push
clc
add
add
data16
sub
test
inc
add
or
notl
xchg
fldl
clc
sub
cmp
or
pop
clc
push
add
cli
or
dec
test
gs
pop
insb
cmp
cmp
lock
add
xor
jns
jbe,pt
cmp
pop
clc
inc
clc
jle
xchg
sbb
clc
imul
clc
out
pop
clc
jecxz
sub
add
clc
loopne
call
push
test
sbb
in
dec
rorb
add
add
fmul
aam
clc
mov
test
jno
add
or
mov
add
sar
adc
add
cmpsl
clc
inc
clc
fmull
clc
mov
jmp
cmp
test
xabort
loopne
movsl
clc
shll
add
clc
scas
in
ret
clc
pop
test
or
add
add
xchg
pop
xchg
es
dec
sbb
add
add
and
lret
sti
cmpsb
clc
jle
xor
add
add
adc
add
sbb
sar
pop
clc
iret
lods
cld
push
add
icebp
push
stos
insl
insl
out
inc
add
mov
adc
add
dec
ds
push
jge
dec
sahf
sbb
cwtl
es
sbb
or
clc
out
jbe
mov
fwait
push
insl
outsb
cld
and
add
jo
add
clc
clc
push
push
mov
add
ds
inc
clc
push
add
push
add
pop
xchg
xor
add
mov
add
clc
insb
cmpsb
clc
cmp
xabort
sar
inc
clc
icebp
jp
clc
sar
clc
js
add
sub
cmp
and
cmp
clc
cld
sbb
in
cmp
mov
or
push
add
jg
add
add
mov
dec
or
add
cmp
shl
inc
add
dec
je
cmp
mov
test
jnp
add
adc
add
add
xor
lcall
xchg
movsl
clc
lea
clc
push
cmp
gs
jle
add
lods
and
add
add
js
xchg
mov
add
mov
dec
lods
cmp
clc
imul
dec
insl
sbb
clc
xabort
int3
or
add
mov
add
mov
data16
inc
clc
fildll
jae
add
dec
roll
add
pusha
add
jns
clc
inc
clc
lods
inc
clc
mov
sahf
xchg
sbb
cmp
mov
adc
add
pop
xor
aas
icebp
hlt
dec
push
clc
xchg
pop
fldl
add
push
add
add
add
clc
mov
cmp
mov
add
add
push
add
lods
dec
ljmp
add
clc
push
fisttps
fwait
jl
shll
lods
xchg
aas
push
pop
clc
cs
dec
mov
sti
add
add
scas
xor
add
add
push
add
into
mov
clc
mov
add
mov
clc
enter
ja
sub
clc
mov
clc
jbe
xchg
and
add
add
es
movsl
clc
inc
clc
fst
push
clc
in
cmp
dec
add
jge
mov
cmp
sarb
clc
aas
roll
cmp
sub
add
pushf
lods
mulb
not
sar
cmp
lcall
clc
or
add
stos
mov
push
fwait
jecxz
mov
testb
add
pop
or
sub
movsl
clc
pusha
add
dec
movsl
clc
mov
inc
add
repnz
inc
add
divb
sar
clc
add
add
fstp
mov
ljmp
adc
add
add
inc
clc
add
data16
popf
cwtl
adc
arpl
add
adc
add
add
mov
clc
adc
add
leave
mov
clc
sbb
clc
out
xchg
mov
mov
mov
test
loopne
dec
sbb
add
xor
add
addr16
std
mov
sbb
loopne
call
xor
add
clc
mov
test
cmp
insb
sbb
cmp
clc
adc
setle
mov
mov
fisttps
sub
fadds
clc
ret
pushf
mov
cmp
mov
jae
add
push
pop
or
cmp
adc
add
add
repz
popa
add
xbegin
add
in
cmp
das
sub
jp
in
sbb
clc
mov
iret
jmp
insl
movsl
clc
adc
add
clc
cwtl
cmovae
add
xor
add
add
out
ds
mov
sbb
adc
add
sub
push
nop
and
js
ja
cwtl
push
mov
push
dec
sub
pop
roll
add
jae
add
add
add
loopne
shll
add
ret
jle
xchg
sti
xor
add
add
clc
pushf
mul
clc
jge
clc
pushf
mov
add
aad
add
lahf
lret
sbb
or
je
add
push
je
sti
repnz
inc
clc
stc
jo
add
inc
add
xchg
fcmovnbe
push
jecxz
xchg
jle
lods
sub
push
je
push
add
ljmp
clc
fidivs
add
repnz
mov
inc
add
imul
clc
dec
decb
shlb
pop
lods
inc
add
in
int3
sti
scas
into
cmp
lcall
add
sbb
out
repz
jmp
jle
clc
jmp
add
push
clc
jns
pop
clc
cmp
test
loope
fnstsw
clc
sar
aam
push
sar
inc
add
cs
mov
or
pop
dec
stos
mov
xchg
testl
mov
xchg
lods
jecxz
popa
add
cmp
clc
notb
add
test
add
push
add
xor
add
repnz
dec
daa
clc
jl
or
lcall
out
cmp
mov
add
mov
test
in
mov
pushf
arpl
add
inc
add
dec
arpl
add
clc
xlat
inc
add
xor
add
inc
add
cli
outsb
sub
add
push
add
pushf
cmp
jmp
cmp
pop
inc
add
lods
addr16
scas
jl
add
ja
add
fdivr
cmp
jne
push
scas
inc
clc
inc
clc
dec
test
pop
xlat
or
xor
jno
add
xor
add
push
clc
or
add
jo
add
add
dec
push
add
jp
add
jnp
mov
mov
clc
lea
add
clc
aad
loop
int
ss
clc
jle
clc
test
lcall
clc
test
pop
mov
mov
ret
clc
mov
add
cmp
add
in
sbb
inc
add
push
nop
xchg
xchg
mov
clc
addr16
push
add
push
and
add
clc
jae
add
pop
loop
sbb
out
xchg
shl
clc
sbb
push
into
nop
inc
clc
out
jnp
cmp
add
clc
xchg
push
or
dec
pop
xbegin
push
outsl
rol
clc
pop
xchg
cmp
cmp
or
clc
cmpsb
clc
or
jnp
inc
clc
xchg
pop
scas
insl
cmp
inc
add
outsb
cmp
out
xabort
push
add
lods
iret
jae
add
jl
clc
or
lahf
cld
push
add
movsl
clc
mov
fnstenv
add
inc
add
sbb
scas
jnp
add
ss
pushf
cld
add
arpl
add
loope
jae
add
add
scas
cmp
add
mov
mov
lahf
sbb
add
out
dec
aas
jg
jns
and
add
and
fmuls
jns
add
sbb
jg
add
and
add
mov
clc
sbb
scas
mov
pop
fbstp
js
outsl
fnsave
fcom
pop
movsb
clc
daa
clc
push
add
repnz
data16
std
sub
ret
clc
loope
out
scas
jmp
add
sar
add
sbb
cmp
mov
mov
test
xor
loop
adc
divl
push
add
ss
clc
cmp
icebp
and
add
jmp
sti
mov
test
int3
push
add
push
add
add
add
pop
repz
enter
jmp
lahf
jnp
xlat
shlb
and
add
add
lock
loope
decb
or
clc
add
add
clc
fs
aam
cmpsb
clc
in
bound
add
clc
jmp
incb
sar
clc
pop
das
mov
stos
jle
xchg
cmp
clc
stos
xchg
dec
sub
das
das
adc
add
pop
mov
jb
add
daa
clc
xor
add
out
sub
mov
add
mov
add
jle
clc
lock
dec
or
lret
jns
mov
clc
mov
clc
cmp
test
shrb
pop
jp
cmp
jmp
rcr
or
je
push
add
jns
imulb
cmp
add
add
pop
cmpsl
clc
into
int
add
movsb
clc
lea
add
jo
add
stos
jno
add
add
fs
fidivs
fcmovne
xabort
sbb
clc
cmpsl
clc
fistpll
test
clc
pop
sbb
xbegin
add
cmp
gs
jge
and
add
clc
sub
add
clc
pop
ficompl
clc
mov
mov
add
arpl
add
insb
mov
clc
mov
bound
add
in
xchg
loope
jecxz
lahf
in
std
inc
clc
cmp
add
arpl
add
cmp
mov
cmc
cmc
sub
aam
clc
mov
mov
iret
push
cmp
inc
clc
adc
add
mov
das
popf
or
test
add
std
jne
sub
int3
scas
inc
clc
xabort
push
add
loope
cmp
add
cs
fs
cmp
or
clc
imul
sarl
clc
inc
clc
rcr
mov
fstl
add
pop
addr16
addr16
mov
and
add
xchg
das
mov
mull
clc
xlat
push
clc
shld
call
add
add
adc
add
push
clc
dec
xbegin
testb
cmpsl
clc
sub
scas
push
out
or
add
cmp
das
sub
xchg
test
push
je
pop
lods
jae
add
jnp
sub
clc
sbb
pop
nop
gs
out
dec
add
add
mov
dec
ds
aaa
cmpsl
clc
sahf
ret
clc
outsl
and
add
scas
out
sahf
into
out
in
mov
in
out
mov
lods
add
add
fcompl
add
imulb
sbb
loope
in
out
lret
push
add
cmpsb
clc
stos
push
lods
mov
add
add
fisttps
or
clc
in
adc
add
out
jg
fdivrl
sbb
clc
jl
or
push
add
ds
imulb
jns
push
add
into
xchg
push
add
and
add
add
bound
add
stc
cmp
in
mov
arpl
add
cld
mov
dec
cmp
sbb
int
and
add
add
daa
clc
or
add
add
cmp
pop
fisttpl
add
daa
clc
enter
pop
clc
rorb
mov
lods
push
sahf
call
clc
mov
xchg
jnp
pop
add
xchg
test
rsqrtps
add
sbb
leave
sbb
stc
adc
outsb
cmp
sbb
dec
icebp
leave
or
add
add
into
cld
xor
add
jl
add
pop
fs
cs
cmp
push
add
cmp
lret
sub
out
cmp
cmp
inc
add
testb
rcll
lret
add
cmp
add
push
fisubrl
clc
cmp
mov
jno
add
clc
inc
clc
in
fcomp
push
add
repz
rcll
mov
add
stos
jg
scas
mov
add
add
add
sar
clc
mov
inc
clc
xchg
dec
mov
add
inc
clc
test
clc
rcll
sbb
clc
cmpsb
clc
sahf
rol
clc
scas
pop
clc
sbb
clc
push
mov
clc
mov
mov
pusha
add
cs
mov
add
cmpsl
clc
adc
add
push
lods
dec
xchg
push
inc
add
std
test
cmpsl
clc
dec
cmpsb
clc
sub
clc
or
stos
sbb
xor
add
pop
stc
clc
xchg
adc
add
decb
jle
iret
out
and
xchg
pop
jg
add
mov
mov
jae
add
ds
data16
or
test
clc
mov
add
clc
mov
xchg
lret
mov
mov
fsts
clc
xbegin
add
aad
pushf
xchg
dec
rolb
add
add
clc
jecxz
xbegin
cmp
scas
loope
dec
cmp
int
mov
sar
insb
push
imul
add
stos
mov
pop
ret
add
clc
out
pop
fwait
add
add
add
lods
mov
lods
sub
xor
add
sbb
fs
cltd
cmpsl
clc
add
add
add
adc
add
dec
pop
pop
add
add
clc
adc
add
clc
repnz
stos
gs
pop
cmp
add
fs
jmp
add
loope
movsl
clc
xchg
out
aas
adc
add
add
sarl
add
mov
add
xabort
clc
insb
mov
cmp
add
inc
add
popa
add
mov
xabort
inc
add
jecxz
sbb
adc
add
add
push
add
dec
mov
pop
shlb
adc
add
clc
fdivs
add
mov
movsl
clc
xabort
and
add
add
add
clc
ret
add
pop
js
std
lock
and
add
clc
and
add
sub
mov
clc
dec
aas
lods
sbb
clc
xor
add
jno
add
sar
cmpsb
clc
mov
clc
mov
sub
mov
cmp
dec
clc
xor
out
rcrb
push
clc
pop
cmp
clc
pop
gs
jecxz
lods
out
lret
jne
cmp
add
add
cwtl
inc
add
pop
and
add
aaa
jbe
add
ret
add
leave
cltd
ds
ds
insl
aaa
shr
sbb
clc
das
loop
inc
clc
jp
add
stos
adc
add
cmp
clc
jbe
cmovnp
sub
clc
pop
lret
push
add
jns,pt
test
cld
xchg
add
loope
mov
fcmovnu
xor
stc
xlat
inc
add
es
inc
add
xchg
in
xchg
addr16
sbb
clc
enter
mov
push
data16
cmp
xor
add
int
push
add
imul
call
nop
cmp
cmc
sahf
pop
int3
pop
pop
cmp
cmp
add
mov
pop
pop
insb
pop
sbb
cmp
pop
mov
mov
clc
dec
add
clc
mov
push
xchg
add
add
cmp
adc
add
add
imul
sbb
rdseed
jb
add
add
clc
addr16
mov
out
insb
cmp
clc
lock
stc
arpl
add
add
sahf
jg
push
add
notb
sar
cmp
test
clc
push
sub
jbe
add
ret
add
cmp
clc
outsb
pop
pop
lret
push
mov
clc
jge
sar
mov
mov
clc
fs
popf
ret
clc
mov
add
xchg
and
mov
inc
clc
xchg
push
mov
and
outsl
lret
cmp
mov
or
cltd
pop
pop
pop
ds
clc
xor
add
mov
dec
popf
icebp
pop
cltd
stc
ss
cmp
jnp
adc
add
add
add
add
fisttpl
clc
pop
mov
add
add
add
jp
add
lods
es
mov
add
out
loope
pop
jnp
or
stos
ret
addr16
loope
cmc
or
push
pop
or
imul
jmp
add
repz
clc
add
add
clc
pop
sub
sub
add
add
fildll
hlt
cmp
xchg
sub
adc
xchg
rolb
add
pushf
fs
fcoms
add
clc
enter
lea
cmc
dec
mov
jle
gs
dec
stc
cmp
add
movsb
clc
and
add
sub
or
add
bound
add
ss
clc
scas
fisubl
add
sub
out
push
clc
push
add
pop
mov
clc
stos
sbb
icebp
test
sar
pusha
add
lock
int
add
cmpsl
clc
loopne
aas
mov
add
xchg
cli
adc
add
ds
fneni(8087
clc
inc
clc
loop
xor
add
clc
jbe
sar
adc
clc
loopne
enter
pop
daa
clc
fildl
add
add
int3
test
scas
mov
cltd
aaa
sahf
jbe
add
add
mov
push
vmovlps
add
clc
hlt
jae
add
stos
dec
ror
sub
add
cli
or
add
add
ret
clc
push
add
pusha
add
add
add
add
leave
fchs
clc
xchg
xabort
mov
je
mov
sbb
clc
sar
addr16
adc
add
clc
cmc
and
add
mov
add
and
add
jmp
clc
sbb
test
fsubl
sbb
mov
add
icebp
jecxz
loop
xor
add
dec
insb
sar
clc
test
out
pop
bnd
clc
mov
clc
outsl
sub
hlt
adc
sar
add
pop
mov
loopne
cmpsl
clc
dec
clc
jne
clc
push
clc
loop
lock
add
cmp
inc
add
mov
aam
mov
fildll
pop
push
add
imul
add
addr16
or
shr
out
aas
mov
add
fmull
cmp
pusha
add
lahf
aad
add
mov
popf
rclb
add
clc
fidivrl
fistps
clc
cwtl
testb
inc
clc
mov
clc
xchg
inc
clc
lock
xchg
inc
clc
fidivl
cltd
mov
cmp
lea
and
add
cmc
popf
cs
outsb
pop
bound
add
add
adc
add
pop
inc
clc
and
add
and
add
clc
cli
push
mov
clc
out
lock
pop
testb
xor
add
add
cmp
clc
pushf
inc
clc
test
mov
xchg
loopne
loope
and
fstpl
inc
clc
in
sub
push
ds
xchg
test
lods
data16
addr16
fldenv
ret
clc
int
clc
push
add
outsb
je
xchg
cmp
in
ds
mov
cmp
cmp
dec
ret
aas
xchg
jns
cmp
add
add
mov
lods
mov
add
add
movsb
clc
xor
add
xlat
std
adc
out
push
or
nop
inc
add
and
add
fsubs
add
mov
arpl
add
imul
clc
adc
add
jno
add
add
aas
push
mov
jl
scas
inc
clc
jp
aas
and
add
add
cmp
mov
pop
add
add
sub
add
cmp
add
jno
add
jecxz
jae
add
int
add
mov
add
ja
gs
repnz
iret
in
cmp
add
add
out
and
jge
mov
add
push
jns
xlat
mov
add
mov
mov
add
cmp
add
ret
fisubrl
cmp
mov
inc
add
or
add
adc
add
add
xor
add
dec
fwait
dec
xchg
sub
add
add
ret
mov
adc
lahf
aaa
cmp
and
add
cmp
pop
cmp
loope
xchg
std
lea
or
pmulhw
xor
clc
dec
mov
sar
cwtl
jecxz
and
add
dec
adc
adc
add
add
es
loopne
xor
inc
clc
negl
cmp
jb
add
bound
add
add
or
add
insb
test
fdivs
add
xchg
inc
clc
cmp
clc
add
add
jns
movsl
clc
mov
xchg
mov
call
mov
sar
add
or
mov
jne
xabort
mov
mov
jb
add
loop
jbe
lock
mov
push
add
xor
sub
in
xchg
mov
jle
and
add
jae
add
inc
add
and
add
outsl
pop
xor
add
clc
rcl
push
clc
pushf
xabort
lods
sbb
add
add
jnp
xchg
cld
jp
or
cwtl
testb
add
clc
fstpl
jne
popf
lods
sbb
inc
add
mov
clc
popf
scas
repnz
mulb
inc
clc
aaa
cmp
clc
rorl
jne
clc
push
pop
ret
clc
xbegin
xchg
sub
clc
cwtl
push
inc
add
dec
pusha
add
xor
add
clc
pop
iret
inc
add
aam
clc
enter
pop
xchg
mov
add
xor
add
add
dec
xor
add
mov
xchg
mov
pop
cltd
push
clc
or
iret
bound
add
clc
call
data16
loope
add
add
clc
bnd
dec
daa
clc
and
dec
add
add
or
ja
mov
cmpsb
clc
adc
add
stos
xor
add
add
cmp
loope
mov
fimull
in
fstpl
es
mov
xchg
rcll
add
fwait
xbegin
mov
mov
clc
clc
cmp
xbegin
gs
loope
mov
imull
and
add
jne
jge
lahf
cmp
inc
add
sbb
clc
repz
mov
jb
add
pop
mov
add
and
add
clc
imul
clc
jo
add
popf
cmp
clc
lea
add
add
pop
or
inc
clc
inc
clc
cwtl
testl
pop
or
add
loopne
and
aam
add
cmp
clc
adc
add
push
jp
adc
xchg
std
inc
add
lahf
lods
fs
into
and
add
call
aad
add
add
clc
stos
sbb
clc
test
fistl
xchg
ds
repz
pop
or
mov
loopne
rcr
push
add
das
mov
jmp
pop
outsb
sub
xchg
cmpsb
clc
add
mov
inc
clc
sti
mov
lock
clc
adc
clc
jno
add
dec
gs
enter
cmp
aaa
aaa
fwait
outsb
pop
inc
add
add
add
fadds
add
dec
stos
push
fisttpl
addr16
or
sbb
sbb
add
add
add
ret
clc
mov
clc
insb
add
add
dec
mov
jg
xor
add
in
movsb
clc
movsl
clc
fstpt
pop
clc
cli
cmp
scas
jg
data16
test
sbb
scas
mov
dec
std
mov
add
add
clc
mov
popa
add
add
add
clc
and
fldenv
shl
clc
lock
lret
clc
out
aad
mov
mov
cmp
int
sar
cmp
int
clc
and
add
ret
clc
sub
clc
add
add
call
add
cmc
mov
inc
clc
mov
dec
clc
test
mov
cs
cmp
popf
mov
add
add
and
add
push
pop
push
add
clc
loope
mov
lods
add
add
or
gs
cmp
push
add
push
sar
test
dec
bound
add
mov
jns
incb
clc
and
add
cmp
clc
int3
jmp
cmp
in
nop
lea
div
addr16
fwait
mov
mov
rcpps
add
mov
nop
pop
jno
add
insb
lcall
arpl
add
imul
add
mov
clc
dec
fwait
jae
add
jg
clc
insl
dec
adc
add
pusha
add
dec
ljmp
add
es
clc
add
add
idivb
push
inc
clc
dec
xor
add
sub
cmp
push
clc
sbb
clc
sbb
ja
mov
loope
xchg
sar
add
sub
clc
add
add
add
inc
clc
test
lods
iret
insb
shll
xchg
add
add
mov
shl
scas
xor
add
insb
out
lods
stos
xchg
imul
add
mov
xbegin
adc
add
cli
ja
clc
xor
add
cmc
into
jnp
and
lahf
mov
clc
cwtl
or
dec
and
add
adc
add
add
out
xchg
jl
clc
push
add
mov
pop
xor
add
sbb
add
cltd
aas
xor
clc
clc
pop
pushl
outsl
pushf
arpl
add
enter
add
push
test
xchg
pushf
and
add
jle
mov
sub
loope
scas
ret
clc
neg
jge
jmp
mov
mov
push
add
insl
and
add
sahf
inc
add
rep
pop
sar
cld
push
sbb
rorb
jno
add
outsl
jecxz
sar
xchg
inc
clc
xor
add
add
cmp
jp
test
pop
notl
add
sar
das
ret
in
jecxz
fucomip
lock
inc
add
repnz
imul
dec
mov
mov
call
add
mov
sbb
add
mov
pop
cmp
xor
add
add
add
pop
cld
add
fdivr
repz
push
add
dec
cwtl
pop
sbb
clc
sub
cmp
cld
sar
clc
jmp
clc
or
and
add
stos
cld
cmc
repnz
add
add
inc
clc
scas
hlt
pop
pop
clc
mov
dec
mov
xchg
dec
inc
clc
lcall
mov
clc
xchg
dec
adc
faddl
ret
fs
test
clc
cmp
pop
xor
clc
in
ja
in
xor
clc
loope
dec
pop
pushf
sbb
cmp
add
clc
mov
clc
out
pop
lods
mov
clc
mov
add
xor
add
clc
sbb
sbb
ret
clc
push
mov
sar
add
cmp
clc
fwait
inc
clc
test
fdivs
aam
out
lods
cmp
rclb
add
add
clc
data16
popa
add
add
add
adc
add
jb
add
add
xchg
jecxz
ds
and
add
add
add
arpl
add
out
mov
clc
add
add
test
repnz
loop
jg
add
cwtl
sbb
add
stos
and
add
add
clc
push
add
and
add
pop
pop
gs
loopne
enter
clc
in
es
in
xlat
sbb
cmp
clc
fcomps
inc
clc
loopne
stos
dec
sub
dec
xchg
enter
insb
jg
add
stos
mov
xchg
push
add
cmp
add
in
push
das
add
or
add
mov
pop
and
add
add
xchg
mov
out
sub
data16
cmp
icebp
sar
in
cmp
getsec
ficoms
add
shlb
add
add
pop
clc
mov
add
stos
and
stos
xchg
loop
mov
test
xor
jge
fld1
imul
xchg
test
push
test
clc
test
cmpsb
clc
pop
mov
repnz
add
adc
add
clc
fucomp
xor
add
scas
pop
jno
add
clc
jae
add
mov
lods
mov
scas
scas
sbb
adc
clc
push
add
bound
add
add
adc
dec
push
test
stc
addr16
cmp
add
mov
add
xlat
stos
xchg
mov
clc
mov
repz
clc
pop
and
add
loop
jae
add
clc
mov
add
add
add
mov
cs
xchg
sbb
cmp
clc
repz
and
add
lahf
ret
clc
test
clc
mov
enter
push
adc
add
and
add
and
add
out
and
add
add
ret
clc
test
pop
loop
clc
cli
clc
cmp
push
add
lock
sub
clc
in
cwtl
inc
add
xchg
xchg
clc
push
add
mov
lret
clc
mov
aad
cmp
add
sbb
xchg
ret
clc
push
cmpsb
clc
lcall
js
je
clc
inc
clc
inc
clc
jnp
jle
add
test
adc
add
add
out
push
xchg
xor
jne
add
inc
add
cmp
imul
clc
or
add
insb
inc
clc
clc
mov
clc
add
cmp
add
outsl
imul
push
add
sbb
lcall
pop
jae
add
pop
pop
sub
add
loopne
add
cmpsb
clc
movsb
clc
test
mov
adc
add
pop
clc
mov
cwtl
inc
clc
fbstp
clc
or
cwtl
pop
push
cli
mov
repz
jo
add
inc
add
pop
clc
es
cmp
lahf
pop
out
cmp
xor
add
aas
xbegin
push
clc
cld
mov
fwait
aad
add
mov
out
cmp
mov
clc
jg
add
cwtl
mov
xchg
mov
out
or
add
dec
sar
add
xabort
dec
sar
lret
fwait
in
and
add
and
add
jno
add
mov
add
mov
push
ljmp
add
xchg
mov
or
cs
clc
adc
add
mov
xabort
pop
sbb
daa
clc
jae
add
mov
xor
add
push
movsl
clc
sub
clc
and
cmp
mov
filds
push
jno
add
adc
add
add
or
add
sti
cli
mov
shrb
sbb
clc
aam
clc
xchg
mov
clc
jge
add
sarl
cmp
push
add
inc
add
push
push
add
in
adc
add
xchg
xor
add
xor
inc
clc
push
add
add
repnz
insl
fsubr
fistpll
in
stos
movsb
clc
ss
aam
pop
pop
nop
add
add
inc
add
clc
aaa
xchg
xor
jnp
add
es
cmp
mov
xchg
fstpt
mov
mov
mov
jb
add
mov
mov
insl
clc
sar
clc
cmp
add
fdivrl
clc
ret
clc
mov
clc
sbb
iret
pop
and
add
cmp
addr16
cmp
add
clc
in
out
xchg
push
clc
jge
clc
popf
pop
aam
iret
call
daa
clc
cltd
icebp
sti
scas
xchg
testl
clc
lret
sbb
clc
shrl
clc
mov
cmp
add
outsb
mov
xor
add
aad
pushf
push
mov
mov
popf
push
add
aam
add
lcall
cmp
inc
add
xchg
lods
data16
xor
add
cmpsb
clc
bound
add
enter
pop
iret
pusha
add
inc
clc
fstp
lods
mov
jl
xor
add
add
cmp
add
add
xor
add
add
lea
clc
adc
clc
xchg
push
ret
clc
xchg
jge
pop
clc
push
add
xlat
adc
clc
fs
outsl
add
add
push
daa
clc
xor
dec
imull
xchg
dec
and
add
fwait
xbegin
add
jnp
jb
add
jns
add
repz
sub
cmp
clc
cltd
gs
push
clc
es
jg
clc
mov
mov
lock
jae
add
add
clc
pop
cmc
sti
or
outsl
sbb
clc
clc
or
clc
push
jns
sub
cmp
mov
movsl
clc
pop
jne
add
cmp
add
jmp
pop
lret
call
add
insb
ljmp
clc
shl
lods
mov
sub
clc
push
add
inc
clc
cmp
add
movsl
clc
sbb
add
call
add
cmp
push
cwtl
or
add
bound
add
xchg
in
cmp
add
add
das
cmp
dec
sub
mov
xchg
pop
cltd
es
fsubp
clc
aam
dec
xchg
stos
xor
add
leave
xchg
dec
hlt
dec
insb
cmpsb
clc
shll
jae
add
add
xchg
lahf
xor
cwtl
mov
jnp
jo
add
add
add
sbb
lods
xabort
out
or
add
cwtl
fs
cmc
icebp
sub
gs
and
cmpsb
clc
in
fcomps
cli
das
jb
add
jne
add
add
jl
clc
and
nop
cmc
scas
xor
add
push
int3
lea
pop
inc
add
mov
dec
push
fwait
sbb
mov
pusha
add
lock
test
inc
clc
gs
test
mov
sub
in
leave
push
push
cmp
mov
js
clc
adc
mov
cwtl
lret
mov
cltd
cli
outsl
pop
gs
loope
xchg
aad
xor
or
rcr
data16
sti
dec
mov
rcrb
dec
xchg
or
mov
test
dec
dec
mov
sbb
scas
cmc
mov
add
dec
mov
clc
add
add
pop
dec
jle
push
add
inc
add
daa
clc
loop
jns
int
add
stos
adc
add
add
lret
daa
clc
movsb
clc
enter
dec
jb
add
into
mov
clc
ret
popa
add
cmp
xchg
vdivps
add
add
dec
scas
ficoml
add
mov
cs
dec
sub
pop
cmp
jne
jb,pt
add
sbb
add
sysexit
jp
lcall
push
nop
hlt
pop
push
add
adc
add
add
dec
stc
xchg
insl
push
movsl
clc
pop
jp
clc
cmpsl
clc
sub
test
in
repz
mov
clc
inc
add
xor
add
clc
adc
add
xor
add
clc
mov
clc
call
dec
stos
mov
inc
add
cmp
or
add
lcall
sub
add
mov
sti
scas
decb
clc
cs
fbld
clc
das
jne
add
cld
or
fcoml
add
daa
clc
fs
add
add
add
add
clc
sahf
cmp
add
clc
popa
add
sub
and
add
add
daa
clc
daa
clc
outsb
xor
add
test
in
mov
clc
cmc
bound
add
adc
mov
dec
imul
add
xchg
mov
add
pop
and
fwait
aam
mov
clc
sbb
clc
push
add
xor
add
mov
clc
pop
or
rol
clc
pop
xchg
jbe
mov
add
movsb
clc
not
ljmp
xchg
aam
xor
mov
dec
clc
xchg
cmpsb
clc
push
add
add
push
clc
fbld
add
or
sub
jnp
out
insb
push
add
inc
clc
jb
add
add
decb
mov
mov
add
cmp
call
mov
in
je
insb
lods
mov
xbegin
push
fisttpll
add
add
in
and
add
add
aaa
xchg
clc
rcrb
xchg
dec
xchg
cmp
clc
insb
cs
mov
clc
push
test
jne
clc
xchg
and
xor
add
clc
pop
add
add
in
ds
xor
push
add
and
add
daa
clc
jmp
pop
add
clc
daa
clc
pop
lea
add
jle
lcall
test
xchg
ret
clc
test
add
sar
add
push
xor
add
push
repnz
push
iret
out
jmp
clc
in
bound
add
mov
sbb
clc
and
clc
into
fwait
push
ja
or
push
add
pop
clc
es
shl
clc
notb
add
add
iret
jecxz
lcall
adc
add
xor
add
mov
sahf
pushf
scas
cmp
add
mov
loope
jge
test
jb
add
ret
clc
mov
add
lcall
cmp
icebp
cld
in
pop
mov
clc
daa
clc
stos
outsb
mov
mov
ret
clc
xbegin
xor
leave
inc
clc
or
add
add
clc
dec
js
mov
sub
pop
rcrb
dec
mov
imull
outsb
mov
inc
add
ljmp
cmp
test
pop
mov
inc
add
test
clc
xchg
testl
clc
out
jnp
cmp
jnp
mov
cli
dec
or
adc
shll
arpl
add
dec
out
sarb
sbb
pop
aam
add
lods
filds
add
sub
add
add
jp
add
sti
push
icebp
in
je
in
mov
test
push
rcpps
add
push
clc
outsb
mov
lods
lret
js
sti
cmpsb
clc
daa
clc
in
mov
cmp
pop
clc
cmp
mov
add
cmp
cmp
push
xchg
fildll
add
jle
add
add
add
cld
aas
repnz
daa
clc
pusha
add
pushf
cmp
jnp
clc
repz
or
iret
repnz
xchg
dec
jmp
clc
push
xchg
mov
clc
mov
sbb
fists
add
movsl
clc
aaa
adc
add
clc
imul
push
inc
clc
nopl
addr16
pop
adc
add
sbb
inc
add
sahf
xor
clc
push
add
mov
test
pop
cmp
dec
out
bnd
clc
pop
jno
add
mov
clc
or
mov
clc
or
js
mov
out
and
add
clc
mov
movsl
clc
lods
mov
clc
call
or
clc
xor
add
fbld
clc
test
sbb
mov
ficoms
add
clc
dec
mov
clc
mov
inc
clc
loop
adc
add
clc
mov
add
clc
clc
mov
add
sbb
sub
cmpsb
clc
roll
clc
pop
pop
pop
ret
clc
flds
cwtl
pop
ds
jmp
add
ret
add
and
jmp
stos
lods
ret
movsl
clc
xchg
mov
add
pop
mov
pop
mov
lret
enter
cmp
add
addr16
dec
xor
add
sbb
and
clc
roll
dec
jns
clc
sub
enter
add
inc
add
mov
clc
push
loopne
xor
add
clc
mov
stos
push
cmc
in
xchg
pop
inc
add
add
xchg
jmp
clc
pusha
add
mov
cmpsl
clc
add
add
add
decb
clc
sti
adc
add
test
scas
or
xchg
mov
sub
add
vphsubbw
pop
in
call
cld
mov
test
lahf
fisubl
add
outsl
in
and
add
clc
mov
int3
inc
clc
int3
pop
clc
ret
clc
sbb
sub
sbb
popf
rcr
shrl
loop
sar
xor
add
clc
cmp
adc
ja
sbb
clc
shlb
add
loopne
cmp
add
jo
add
aam
pushf
jg
inc
add
addr16
das
xchg
or
add
pop
pop
jp
mov
add
sub
add
addr16
test
data16
inc
add
fisubl
add
in
test
mov
cmp
clc
nop
push
add
sub
aas
mov
jo
add
clc
pusha
add
jl
xor
add
mov
adc
sbb
add
add
push
add
arpl
add
sub
mov
add
add
popl
clc
cmp
jle
test
idivb
clc
inc
clc
enter
clc
jb
add
or
clc
and
aad
xabort
lods
mov
scas
sbb
clc
out
shll
sbb
mov
and
test
addr16
mov
or
pop
xchg
mov
dec
xchg
icebp
push
clc
clc
xchg
adc
add
mul
clc
sbb
jecxz
pop
sbb
fidivl
cmp
add
add
mov
jae
add
add
sub
mov
shrb
push
add
mov
mov
push
clc
adc
add
add
add
mov
add
gs
inc
clc
xchg
xchg
bound
add
clc
imul
mov
xchg
hlt
mov
add
insl
out
xor
add
add
mov
sub
in
or
sub
add
ret
sub
add
add
add
cli
jne
add
in
test
cltd
xchg
gs
adc
repnz
add
add
push
mov
fcmovu
outsb
push
add
xbegin
clc
xchg
sub
xor
mov
sbb
inc
clc
or
push
add
sbb
insl
push
adc
add
clc
jmp
aas
mov
test
or
fsubrl
xor
add
jb
add
add
leave
xchg
fld
clc
cmpsl
clc
frstor
add
clc
dec
mov
pop
lods
ljmp
fstps
xchg
outsl
xchg
sub
sub
mov
clc
jb
add
clc
cmpsl
clc
sbb
mov
cmp
push
mov
int
add
sbb
pop
loopne
imul
data16
sub
or
clc
lods
adc
add
das
loop
xabort
jp
clc
imulb
sar
clc
sub
clc
lret
jmp
aas
int3
mov
add
in
inc
add
ja
movq
cmp
push
mov
mov
sbb
data16
loope
dec
add
add
add
clc
sub
add
add
add
add
lcall
mov
scas
ss
jecxz
jmp
cmp
add
sub
int
fs
je
add
repz
add
fcmovb
clc
cli
xchg
das
lret
add
lret
add
add
or
add
xchg
push
cmp
add
aad
push
test
adc
mov
clc
scas
push
dec
cwtl
jno
add
xor
add
and
add
mov
mov
add
push
push
rolb
add
add
inc
clc
aam
add
inc
clc
sbb
clc
fwait
pop
in
inc
add
lret
cmp
and
jg
add
add
lea
clc
gs
jo
add
add
add
cwtl
pop
clc
adc
add
mov
jmp
xchg
mov
clc
xchg
stos
cwtl
imul
push
cmp
sbb
cmp
pushf
lret
ret
insb
push
pushf
xchg
fs
xlat
jge
cwtl
pop
clc
push
dec
sub
add
cmp
test
int3
add
add
push
add
cld
mov
xchg
js
clc
mov
cmpsl
clc
in
es
testl
add
pop
int3
fidivrs
push
stos
insb
push
repz
lods
jl
clc
jnp
or
dec
test
jge
adc
add
add
inc
clc
or
add
add
clc
dec
aam
add
mov
dec
pop
dec
fs
clc
sbb
inc
add
fnstenv
add
mov
sti
sub
mov
add
add
add
pop
out
lods
mov
add
push
ss
mov
mov
clc
stc
pop
int3
into
lahf
jo
add
xor
or
sub
jbe
xor
into
dec
sbb
or
clc
hlt
or
xor
add
mov
add
sar
clc
sub
mov
push
add
cs
push
dec
inc
clc
mov
push
and
add
ds
clc
cli
sahf
cmp
insl
sub
adc
add
add
add
clc
push
push
cltd
shl
clc
dec
mov
cmc
xchg
sub
add
add
xchg
xchg
add
add
lret
xor
add
jnp
add
mov
aaa
jb
add
inc
add
push
ror
xchg
inc
clc
jg
push
mov
pop
clc
stc
roll
push
mov
cmp
pusha
add
xor
leave
mov
jbe
clc
lea
ret
add
int
add
cmp
stos
aaa
and
cs
out
add
add
xor
add
clc
rolb
repz
mov
clc
push
cmpsb
clc
sbb
dec
fbld
add
add
add
sar
add
push
add
fs
and
add
test
add
xbegin
add
icebp
adc
add
and
add
xabort
xchg
mov
add
add
add
ljmp
clc
xor
dec
kmovw
push
ds
dec
test
mov
jns
fldcw
pop
lock
gs
cld
mov
add
jnp
dec
push
add
lods
daa
clc
std
xchg
fnstsw
jno
add
iret
inc
add
jge
sub
clc
sbb
clc
lss
cmc
and
add
js
mov
xchg
or
sahf
fs
xchg
xchg
pop
negb
es
mov
pop
jae
add
cmp
clc
pop
addr16
pop
mov
jle
clc
popf
sbb
clc
fstp
mov
clc
loope
and
add
mov
clc
out
loopne
cmp
clc
int3
hlt
adc
add
dec
or
xor
add
add
add
lahf
mov
mov
cld
xchg
cmp
clc
add
add
sub
clc
mov
clc
nop
in
xchg
push
sbb
jb
add
clc
cmp
mov
clc
push
add
jmp
clc
add
xchg
or
mov
adc
add
add
fnclex
clc
sbb
jge
fistpll
add
ret
clc
sbb
mov
adc
and
add
clc
hlt
lahf
loopne
push
testl
add
xchg
nop
push
jne
xchg
adc
sub
popf
add
add
fisubs
pop
not
jecxz
sbb
clc
sub
psrld
movsb
clc
rcrb
add
ds
test
insl
jmp
lcall
fwait
das
and
bound
add
mov
mov
add
mov
clc
out
push
lock
xor
add
clc
fisubrs
mov
push
add
add
add
adc
add
add
sub
cwtl
or
cld
je
pop
jnp
shlb
clc
ljmp
inc
clc
ljmp
cmpsl
clc
and
add
stos
mov
repnz
mov
push
xchg
cld
enter
clc
mov
pushf
mov
pop
push
add
mov
add
dec
std
es
clc
in
dec
mov
ja
clc
gs
test
clc
in
add
add
popa
add
or
pop
data16
std
cmp
or
add
pop
pop
movsl
clc
or
mov
pushf
jae
add
clc
xor
add
and
add
fdivrl
clc
mov
insb
pop
add
add
clc
gs
scas
push
loopne
dec
jl
repnz
and
add
pop
clc
dec
dec
adc
add
cmc
jae
add
mov
dec
imul
aam
clc
dec
adc
add
or
sahf
jb
add
into
mov
divb
add
clc
gs
sub
stc
loopne
xchg
insb
fmull
jne
clc
jg
pop
call
add
test
lods
out
pop
xor
xabort
das
dec
jbe
clc
ds
add
clc
mov
das
push
xlat
mov
add
mov
add
add
insb
xchg
xabort
add
popa
add
sarb
out
mov
add
push
clc
repz
push
adc
add
insb
pop
mov
add
in
in
pop
inc
clc
xbegin
test
lret
dec
ret
clc
scas
je
clc
mov
and
ljmp
add
in
fs
rcll
add
sbb
fists
add
or
call
lahf
xor
clc
sbb
mov
add
add
and
iret
pop
push
add
xlat
adc
add
add
mov
mov
xchg
jo
add
add
clc
movq
clc
jbe
daa
clc
testb
sbb
insl
xlat
negb
or
test
pop
mov
aaa
push
add
bound
add
add
mov
stc
outsb
cmp
push
aaa
mov
clc
mov
jo
add
jno
add
add
clc
mov
out
icebp
fs
push
lods
inc
clc
mov
clc
mov
test
cmp
add
push
insb
lret
into
rcl
and
add
clc
push
cmp
js
dec
push
jl
xor
into
fildl
clc
iret
inc
add
jb
add
in
in
mov
hlt
addr16
ftst
clc
int
popa
add
or
add
xchg
pop
clc
fisttpl
jl,pn
mov
into
jecxz
mov
mov
test
xchg
ret
fstl
add
lods
clc
jmp
and
add
add
mov
cmp
lods
xchg
bound
add
out
mov
mull
add
fs
jp
fwait
dec
leave
jp
in
data16
test
data16
xor
add
add
jge
clc
repz
lahf
xbegin
pop
add
add
stos
jmp
sarb
xor
add
add
add
pop
sub
pop
xor
add
xor
add
fcoms
add
outsl
lods
lcall
sub
add
add
add
fstpt
cld
jae
add
enter
add
add
lret
sub
jne
clc
cmc
aad
add
xor
add
cmp
inc
clc
jo
add
sub
clc
jl
stc
xchg
xor
add
stos
scas
aas
mov
inc
add
mov
popf
lock
clc
popf
mov
fs
adc
add
ret
clc
mov
std
push
add
data16
mov
into
cmp
add
movsl
clc
bound
add
stos
outsl
pushf
add
add
clc
pinsrw
sbb
mul
clc
mov
pop
outsl
cli
pusha
add
imulb
outsb
cli
xchg
rclb
add
sbb
pop
shrl
arpl
add
add
xor
add
inc
clc
int3
call
add
clc
sbb
pop
inc
clc
dec
inc
add
repz
sub
add
fwait
in
aam
cld
mov
clc
cmp
add
movaps
sub
xlat
xchg
movsl
clc
cmc
adc
add
add
add
push
add
popa
add
xlat
xabort
push
sbb
mov
clc
mov
xor
cltd
dec
cmp
clc
insl
add
and
fistl
mov
clc
push
add
clc
cmp
add
or
add
jge
pop
fimull
add
out
or
in
push
add
cmp
clc
popa
add
insb
test
push
addr16
push
add
jle
cmpsl
clc
and
add
rcrb
add
clc
in
cmpsl
clc
lods
xchg
jle
clc
data16
icebp
pop
clc
adc
mov
add
add
clc
push
add
icebp
test
ret
clc
jnp
jnp
mov
int
adc
add
mulb
cwtl
cmp
push
or
or
add
add
daa
clc
or
clc
jg
clc
mov
push
add
movsb
clc
dec
sub
clc
mov
clc
fwait
lret
cmp
add
mov
stos
ja
adc
add
dec
xor
add
clc
jp
leave
fs
sbb
clc
pop
clc
sbb
push
lods
xor
imul
add
ret
fwait
loop
out
add
add
inc
add
jle
int
cmc
mov
ficomps
jo
add
add
clc
test
inc
clc
mov
clc
mov
clc
mov
cltd
xor
add
movsl
clc
xor
sub
sbb
clc
call
xchg
push
clc
lods
xor
add
cmp
popf
stos
stos
mov
clc
push
mov
loop
jge
clc
aas
mov
clc
leave
sub
clc
hlt
in
in
adc
add
jl
add
add
clc
fisttpll
cmp
clc
pop
aas
fadds
jmp
das
pop
ret
clc
lock
xchg
test
inc
clc
pop
clc
je
adc
lahf
addr16
xchg
push
clc
sub
clc
stos
in
pop
clc
call
ss
add
cltd
movsb
clc
push
sbb
stos
jne
clc
mov
clc
das
sahf
mov
add
cmp
clc
fmull
clc
inc
clc
clc
fcompl
xchg
inc
clc
jg
xor
or
clc
repz
push
clc
arpl
add
mov
cmp
std
stos
bound
add
jbe
sbb
xor
dec
sub
popf
jnp
dec
jp
das
sub
ret
cmp
pop
clc
leave
in
pop
xchg
loopne
gs
ret
clc
xchg
leave
cmp
stos
sahf
enter
clc
xchg
sub
outsl
jge
add
lea
mov
add
imul
add
add
add
mov
jp
or
jg
clc
in
test
jp
ljmp
dec
fsts
add
add
dec
bound
add
dec
repnz
and
add
mov
out
sub
into
dec
cmp
lahf
xor
clc
mov
push
jne
xor
add
icebp
jnp
cmp
add
add
add
add
push
cltd
pusha
add
mov
jae
add
jmp
add
int
clc
pop
call
pop
push
add
add
clc
and
add
cwtl
fneni(8087
clc
icebp
repnz
add
dec
push
adc
add
mov
add
add
inc
clc
cmp
data16
inc
clc
pop
enter
fwait
out
je
add
add
mov
add
adc
push
xbegin
cmpsl
clc
mov
xor
add
lahf
data16
xor
cli
lret
cmp
adc
add
cmp
inc
add
pop
out
jnp
pop
push
pop
mov
cltd
xchg
mov
fs
adc
add
aaa
leave
jae
add
in
adc
add
clc
bound
add
testb
lods
sbb
clc
pop
sub
insb
addr16
jnp
pop
imull
add
in
jo
add
and
mov
clc
iret
adc
add
int
add
add
dec
jns
xchg
mov
sub
aas
inc
add
dec
mov
push
jp
rcrb
clc
add
mov
add
pop
push
out
xchg
lods
add
xchg
jno
add
clc
xchg
mov
xor
add
add
xor
add
mov
add
jb
add
add
clc
inc
add
lret
dec
pop
sbb
push
add
into
cmp
add
jae
add
add
inc
add
xchg
hlt
mov
clc
xor
add
sbb
jne
clc
mov
pop
and
add
add
sub
test
push
xbegin
push
or
loopne
data16
or
mov
cli
xor
add
jp
std
jmp
clc
jbe
clc
fldl
add
lahf
cmp
jecxz
dec
xchg
movsl
clc
shlb
add
mov
add
mov
dec
jge
mov
clc
loope
jbe
in
push
jecxz
inc
clc
fidivl
dec
fs
mov
nop
ja
clc
pop
arpl
add
fimull
mov
mov
daa
clc
push
add
dec
popf
mov
add
pop
fnstenv
out
es
push
add
xabort
and
add
add
push
lods
xlat
gs
and
add
div
loopne
cmp
jle
and
add
idivl
in
xchg
stc
jno
add
cmp
add
or
add
mov
add
mov
jb
add
clc
loopne
push
add
pop
dec
fwait
sub
clc
sar
clc
scas
sar
adc
add
clc
sub
cmp
clc
mov
sub
sar
inc
clc
cmp
clc
cltd
push
mov
push
pop
pop
out
inc
clc
sti
xor
add
sub
clc
das
test
jecxz
out
addr16
lret
jbe
sar
adc
loope
xchg
inc
clc
lahf
sub
add
cmp
pop
dec
cld
xchg
cli
inc
add
ret
sub
xor
add
add
mov
clc
cmc
mov
mov
add
sbb
mov
clc
lea
and
add
iret
shll
add
cmpsb
clc
aaa
mov
cmp
cmpsl
clc
dec
ja
clc
cs
jp
clc
adc
out
cmp
add
and
add
sbb
nop
or
iret
test
sarl
add
loop
xbegin
clc
pop
cwtl
cmpsb
clc
adc
add
stos
sub
notl
add
lret
add
add
add
cmp
add
movsb
clc
adc
add
xchg
or
mov
sub
in
adc
add
sbb
outsl
cwtl
sar
loope
out
pop
faddp
clc
jne
or
int
cld
push
add
pop
cmp
clc
push
add
adc
add
not
andnps
add
or
loop
push
push
mov
clc
pop
ljmp
add
aam
fldl
add
icebp
mov
cmp
add
gs
es
test
add
mov
add
xchg
test
sub
add
loope
js
nop
jecxz
cmp
push
add
sbb
mov
pop
imul
popa
add
cwtl
jp
ss
add
movsb
clc
mov
pop
mov
gs
jae
add
push
aas
lods
in
sbb
add
clc
xchg
or
ja
repnz
add
jae
add
adc
add
add
push
loop
xor
add
insl
in
lret
into
sbb
cmp
clc
xchg
or
adc
or
rol
clc
out
rcl
shrl
jmp
add
pop
dec
pop
stos
loop
xor
add
cmovne
or
punpckhdq
add
push
es
mov
add
adc
add
and
add
out
sar
movsb
clc
add
add
add
push
jb
add
sub
xlat
lcall
add
jne
dec
mov
sti
mov
clc
addr16
dec
mov
mov
add
add
sub
clc
arpl
add
inc
add
outsb
int3
add
push
jns
cld
icebp
xchg
push
clc
data16
dec
lods
cmpsb
clc
and
clc
jns
lcall
clc
add
add
add
clc
jnp
push
mov
mov
or
pop
icebp
xabort
clc
stos
jecxz
stos
jmp
clc
lret
add
add
inc
clc
pop
jp
add
xchg
aaa
mov
push
add
mov
loope
stos
ss
mov
pop
data16
ljmp
add
fsubl
push
jnp
clc
negl
add
repz
or
insb
xor
add
inc
add
push
cmp
push
ss
ds
clc
lock
xor
add
mov
clc
aas
xchg
mov
clc
sub
inc
clc
push
mov
and
add
add
fstl
add
clc
push
stc
fildl
inc
add
jl
push
or
add
out
cmpsl
clc
jl
push
mov
scas
stos
or
cmp
clc
adc
push
add
push
clc
jmp
add
xchg
mov
clc
scas
xor
add
in
pop
jecxz
pop
mov
sub
mov
insb
pop
pusha
add
mov
mov
add
add
clc
ficompl
inc
clc
dec
out
dec
add
xchg
mov
js
cmpxchg
cmp
clc
mov
clc
inc
add
jge
into
or
clc
mov
add
mov
clc
mov
add
in
out
stc
jle
clc
xchg
test
add
outsb
stc
sub
aad
add
xchg
dec
jno
add
add
jmp
add
fcmovnb
clc
and
add
mov
cli
clc
cmp
mov
movsb
clc
pop
lock
xor
push
xchg
pusha
add
pop
loope
jl
lret
add
add
or
jmp
dec
int
clc
push
clc
push
lcall
test
add
and
add
xchg
cltd
jno
add
sar
add
clc
notl
clc
sub
inc
clc
mov
adc
add
clc
jp
cmp
sti
sahf
cmpsl
clc
xabort
mov
clc
cmp
clc
jmp
mov
mov
iret
es
xlat
inc
add
pushf
and
inc
add
fldl
add
arpl
add
mov
outsl
inc
clc
push
shrb
xchg
xor
add
dec
aad
mov
jge
dec
int3
cld
sbb
add
sbb
pop
cmpsl
clc
mov
add
add
sar
clc
mov
clc
dec
into
rcrb
ljmp
lret
push
pop
push
add
add
clc
out
sub
add
out
adc
add
and
add
pusha
add
mov
add
and
add
stc
mov
fiaddl
add
lret
sahf
mov
clc
in
insb
cmpsl
clc
adc
add
clc
jb
add
add
pushf
sbb
add
adc
call
cmp
clc
pop
push
add
and
sub
inc
add
nop
filds
mov
add
incl
push
inc
clc
and
add
clc
jge
movsl
clc
or
add
test
sbb
clc
gs
jge
mov
and
add
sar
or
sbb
mov
xlat
jnp
mov
add
sbb
add
add
add
addr16
sub
add
sub
add
pop
mov
add
mov
lea
cmp
inc
clc
xor
add
add
mov
add
mov
das
lcall
add
int3
xchg
outsl
fadds
add
xor
add
push
clc
adc
add
clc
inc
add
sub
dec
sub
mov
add
fwait
lret
or
je
jne
clc
ret
clc
ds
imulb
push
pop
rcll
add
or
mov
cmp
ja
data16
mov
repz
add
add
push
pop
and
add
addr16
jnp
mov
daa
clc
mov
clc
jecxz
sahf
lods
and
add
clc
fs
pop
aam
pavgb
add
add
clc
inc
add
mov
cmp
pop
clc
mov
call
add
add
or
sar
push
xor
add
loop
xchg
and
add
jb
add
pop
mov
mov
mov
clc
aad
inc
add
xor
add
adc
add
clc
and
add
fprem1
add
add
iret
xabort
clc
cltd
dec
sti
testl
sub
xchg
push
add
xchg
push
xor
add
fisubs
clc
adc
add
clc
push
js
test
push
sub
pop
clc
sub
clc
fidivrl
gs
call
imull
lcall
clc
loop
cmp
insl
adc
pop
lret
xchg
mov
clc
sub
clc
out
sti
or
clc
add
add
jns
clc
push
or
ret
xor
add
clc
jecxz
mov
add
add
xor
add
add
push
inc
add
fsubs
add
mov
xlat
xabort
leave
aaa
pushf
push
iret
mov
add
test
cmc
movsb
clc
push
add
sbb
dec
enter
scas
in
xchg
aad
add
jmp
push
divb
add
in
clc
imul
iret
xor
add
add
inc
clc
mov
add
xor
add
int
insb
gs
ret
mov
pop
sub
pop
mov
clc
rorb
jmp
cmpsl
clc
inc
clc
and
add
lahf
adc
adc
add
mov
popa
add
imul
clc
jb
add
and
std
repz
dec
fs
in
stc
adc
add
not
fidivl
add
das
xchg
cmp
imul
jmp
hlt
or
clc
js
cmp
xchg
jb
add
pop
xor
jbe
clc
or
push
add
push
mov
add
add
das
cmp
in
jno
add
add
stc
into
adc
add
insl
gs
fidivs
iret
pop
in
mov
in
inc
clc
pushf
cmpsl
clc
in
sub
dec
clc
mov
add
test
xchg
lahf
inc
clc
imul
clc
lock
jecxz
mov
clc
and
add
add
pop
or
cmp
xor
add
lea
in
pop
in
cld
test
xchg
dec
rcrb
enter
add
add
xor
mov
inc
add
iret
mov
add
scas
push
mov
imul
pop
add
add
out
push
clc
test
mov
add
imulb
xor
add
add
mov
add
ja
mov
push
add
push
ja
xchg
dec
inc
add
jmp
mov
notb
push
add
dec
in
pop
clc
xchg
push
add
adc
add
add
mov
add
mov
and
add
loopne
adc
add
add
mov
clc
loope
push
add
movsl
clc
test
clc
cs
clc
push
clc
jecxz
sar
icebp
xor
add
imul
cld
loope
pop
push
add
jno
add
test
gs
pop
xchg
scas
sahf
mov
clc
push
outsl
cld
insl
mov
clc
rolb
movsl
clc
lock
test
js
popa
add
insl
lret
xchg
xor
aam
add
cmp
xor
add
clc
negl
clc
pop
push
iret
out
push
add
hlt
imul
add
ret
clc
scas
into
fwait
in
dec
adc
add
ja
xor
add
incb
clc
xor
add
test
rorl
int
nop
push
add
sar
add
add
xchg
xchg
test
push
adc
add
lea
in
imul
sti
aaa
ror
cwtl
sbb
sub
add
push
add
test
inc
add
cwtl
dec
in
or
sbb
insl
inc
add
cmp
scas
or
dec
xor
add
add
clc
pop
jne
and
add
dec
rcrl
das
lods
mov
sbb
clc
mov
clc
das
and
push
mov
clc
mov
xlat
cmp
xor
dec
aam
clc
repz
movsl
clc
inc
add
mul
clc
xchg
mov
push
or
jnp
aaa
dec
lahf
xchg
push
into
add
jne
add
in
imul
js
cmp
pop
xor
pop
inc
add
mov
cs
daa
clc
sbb
jno
add
mov
add
fnstenv
in
in
jge
scas
fmul
pop
js
clc
scas
xlat
cmp
sbb
clc
push
add
jecxz
dec
scas
sbb
add
adc
add
mov
add
repnz
clc
jne
jne
stos
jbe
stos
jno
add
clc
push
clc
and
add
add
out
inc
add
add
add
loopne
faddp
clc
loop
xor
add
push
clc
cli
das
inc
add
add
add
dec
jae
add
movsl
clc
mov
xchg
jb
add
inc
clc
bound
add
lods
xchg
ret
clc
out
ret
xchg
cld
jns
or
xchg
xchg
enter
fstps
out
jns
cmp
clc
xchg
mov
clc
and
add
add
jb
add
add
mov
and
add
clc
xchg
fmull
test
add
jmp
add
cld
popa
add
cmpsb
clc
jle
das
xor
clc
xchg
cmp
clc
out
cmp
sahf
inc
add
pop
arpl
add
or
mov
add
sub
test
clc
add
add
dec
pusha
add
dec
push
jnp
test
clc
push
in
adc
add
sar
mov
clc
push
in
push
mov
jns
clc
push
jb
add
or
add
add
bound
add
add
jne
cmp
cmp
clc
lods
movsl
clc
in
pop
clc
aaa
pop
clc
data16
cmpsl
clc
mov
and
lahf
mov
add
fs
sbb
adc
add
test
add
add
clc
sub
das
imul
mov
in
sarl
mov
clc
lock
and
add
add
adc
add
call
sbb
loop
jne
xabort
xchg
sub
lret
push
pop
ret
add
mov
sbb
clc
jle
add
pop
imul
dec
sbb
mov
rcrl
nop
fimull
xchg
fldl
clc
inc
clc
ja
jb
add
pop
int
and
add
add
add
cmp
add
into
push
pop
sbb
add
stos
cmp
clc
mov
jecxz
xor
add
clc
int
inc
add
clc
ret
add
decb
add
and
add
movsl
clc
pop
inc
add
iret
stc
insb
es
out
jo
add
sbb
add
push
add
mov
cld
pop
clc
cmp
fisttpl
add
add
cmp
add
add
add
add
cli
cmpsb
clc
cmp
cmc
push
pop
leave
or
clc
add
add
and
bound
add
aam
out
and
add
leave
inc
clc
pop
pop
data16
cmp
test
ja
cmp
add
jae
add
stc
adc
add
and
add
or
mov
or
int3
loope
cmp
clc
shrb
add
inc
clc
xchg
xchg
push
add
mov
xbegin
clc
pop
mov
add
sub
add
cs
idivl
add
or
nop
xor
clc
bound
add
add
ja
cmp
jne
add
add
mov
inc
clc
push
add
gs
rolb
clc
jns
pop
xor
add
mov
add
push
ret
clc
loope
pusha
add
jp
vmovlps
add
add
arpl
add
mov
clc
inc
add
jae
add
add
xor
add
clc
jg
clc
cld
cltd
fs
push
jmp
clc
adc
add
jbe
add
add
add
add
xor
add
add
hlt
test
mov
stos
lret
add
je
lret
out
clc
and
push
dec
xor
fldenv
fists
add
clc
out
imul
arpl
add
push
jp
cmpsb
clc
dec
cmp
clc
rcr
insl
jne
clc
imul
addr16
xchg
stos
cmp
clc
mov
rorb
imul
mov
stos
adc
and
add
cmpsb
clc
fisttpl
insl
sub
ret
repz
ja
add
cli
mov
pop
stc
and
mov
out
pop
pop
clc
and
xlat
out
jnp
ja
clc
or
lret
xchg
adc
add
add
cmp
dec
dec
cmp
push
icebp
inc
add
dec
aas
inc
add
cmpsl
clc
sub
dec
imul
xchg
push
and
add
push
lods
cli
iret
sar
scas
sub
jns
scas
gs
sub
inc
clc
lret
add
push
add
sahf
inc
add
xor
lahf
scas
mov
mov
xbegin
clc
or
adc
add
push
fsubrl
out
enter
xlat
je
pop
pop
in
push
add
push
fildll
clc
cmc
data16
push
clc
and
adc
add
add
in
sbb
jl
inc
clc
outsb
je
add
push
add
dec
xchg
stos
out
outsb
rolb
add
sar
add
scas
data16
mov
leave
push
mov
xor
or
clc
mov
and
add
clc
xor
add
sub
pop
push
cmp
add
jmp
rol
clc
and
add
rcll
add
add
clc
mov
fdivrl
pop
jo
add
sbb
clc
or
adc
add
cwtl
mov
xor
clc
insl
cmc
call
lods
inc
clc
dec
or
ja
clc
and
adc
add
add
xchg
shrb
dec
call
fstl
arpl
add
outsb
sub
clc
das
cmp
fidivrs
push
xlat
icebp
jmp
add
dec
in
loopne
xchg
out
add
dec
inc
add
aam
pop
sbb
xor
add
jmp
inc
clc
lret
add
out
js
clc
push
mov
add
fisubl
mov
jle
clc
pop
arpl
add
stos
mov
clc
xabort
aas
imul
add
cld
repnz
or
add
cmp
je
clc
scas
gs
jge
dec
mov
add
clc
add
clc
xchg
dec
repz
push
clc
lcall
mov
mov
adc
add
clc
shr
jl
push
add
jl
clc
leave
stos
mov
dec
or
add
add
repnz
clc
jb
add
clc
jmp
cmp
add
add
lods
pop
mov
clc
js
push
add
movsb
clc
das
push
jo
add
fwait
or
push
adc
add
push
xor
add
mov
mov
mov
clc
aad
cmpsb
clc
fwait
pop
push
insb
cmp
adc
add
add
fisttpl
clc
outsb
and
add
clc
add
fidivs
pop
int3
mov
mov
clc
adc
add
clc
jns
aas
add
add
mov
test
sub
add
add
jae
add
clc
ret
clc
dec
movsb
clc
xchg
arpl
add
add
xchg
je
add
clc
cs
lock
add
clc
rorl
int3
cmc
push
je
clc
jbe
in
cmp
jg
mov
xchg
sub
arpl
add
ljmp
out
xchg
clc
imul
test
add
xchg
sbb
inc
clc
xchg
push
pop
xbegin
mov
inc
add
insb
sub
sub
xlat
add
test
insb
js
leave
data16
jmp
clc
xor
add
dec
push
in
mov
cltd
jge
cmp
clc
mov
add
pop
jle
mov
add
cmc
and
divl
dec
roll
mov
data16
test
or
add
xor
add
add
clc
vmovlps
add
clc
out
mov
mov
sbb
clc
jo
add
dec
rcll
xbegin
stc
xor
add
mov
xor
add
add
xchg
scas
adc
add
clc
push
clc
pop
scas
mov
inc
add
bound
add
add
fists
inc
clc
loope
out
sub
add
in
pop
loop
leave
mov
roll
add
clc
fisttps
cltd
pop
clc
loopne
cmp
sub
arpl
add
add
out
je
sti
cmp
adc
add
ret
cmp
mov
mov
or
clc
sbb
add
outsl
dec
mov
cmp
cwtl
sub
mov
mov
add
mov
push
add
call
jne
enter
xchg
push
clc
mov
jg
cmp
xor
add
clc
push
add
push
mov
and
add
add
xchg
out
xchg
xchg
pop
clc
cmp
clc
add
add
mov
mov
mov
push
notl
add
add
clc
mov
push
clc
xbegin
add
scas
or
clc
loop
mov
shll
xor
add
loope
clc
pusha
add
cmpsl
clc
xor
clc
cmpsb
clc
mov
aad
xchg
jne
rolb
clc
push
sbb
in
xchg
lods
test
mov
add
popl
add
xabort
mov
mov
mov
cmp
dec
ljmp
xabort
push
movsl
clc
add
add
in
sbb
es
movsb
clc
sbb
push
outsb
lods
dec
hlt
xbegin
test
add
add
cmp
in
cmp
clc
bound
add
push
int
sub
mov
test
and
lahf
pop
std
push
data16
and
add
mov
cmpsb
clc
lahf
test
add
mov
adc
add
add
mov
test
scas
aas
mov
add
clc
jae
add
add
pop
push
jbe
sahf
mov
dec
xor
add
lock
cmp
clc
movsb
clc
or
ljmp
mov
add
pop
clc
insb
pop
xor
add
add
testb
icebp
enter
cmpsb
clc
xor
add
aaa
cmc
stos
mov
cld
test
jecxz
cmp
clc
sbb
xchg
gs
js
clc
xchg
pop
pop
and
add
lods
jg
clc
stc
cs
bound
add
sub
out
repz
xor
push
add
clc
mov
mov
lret
xlat
adc
add
inc
clc
push
scas
icebp
sub
inc
add
ret
clc
dec
push
clc
pop
adc
add
ret
clc
rcr
mov
mov
clc
inc
clc
sub
dec
or
es
jg
cmp
xlat
xchg
mov
add
js
cwtl
mov
clc
mov
add
clc
xor
add
add
mov
sbb
mov
add
add
idivl
lea
fcomps
sbb
add
xchg
fldt
add
dec
pop
clc
mov
clc
fnstenv
cltd
jne
clc
dec
out
xchg
adc
ja
cmpsl
clc
mov
scas
fld
clc
sbb
cmp
sbb
clc
sar
or
mov
add
pushl
add
stc
push
dec
mov
add
pop
sbb
add
cmp
push
cld
fisubrs
fstps
lods
mov
clc
push
shrb
add
push
test
in
loop
mov
add
push
or
add
and
add
mov
xchg
and
clc
push
pop
mov
add
clc
adc
loope
mov
clc
test
lcall
cmp
stc
fimuls
negl
or
add
mov
add
clc
std
cmpsl
clc
push
imul
dec
inc
clc
icebp
insl
lfs
stc
cmc
popa
add
mov
inc
add
in
sub
sub
xabort
xor
add
clc
push
add
in
popa
add
imul
add
das
rorl
dec
push
fmuls
fadds
add
dec
sub
jbe
or
clc
push
fiadds
add
xbegin
lret
jns
mov
clc
ret
clc
mov
ja
adc
add
add
ret
mov
clc
test
clc
rcrl
xchg
xchg
out
test
mov
adc
add
adc
add
stos
test
out
sub
icebp
and
add
or
add
js
jge
clc
push
add
and
add
mov
clc
mov
inc
clc
imul
mov
inc
add
pop
push
clc
mov
push
add
mov
or
sar
xchg
sbb
cmp
clc
fldenv
test
mov
clc
insl
mov
mov
insl
xor
clc
cmp
add
add
mov
aas
repz
clc
sbb
add
clc
adc
add
clc
inc
add
xabort
leave
roll
add
mov
fidivrs
add
and
add
int3
lods
fisubl
repnz
add
and
push
loope
fildl
cli
mov
dec
ds
lahf
mov
add
out
xchg
xor
add
add
stos
lods
out
xlat
xchg
xor
add
in
xchg
jl
clc
dec
aam
sub
mov
add
add
fsubrp
out
push
hlt
inc
add
or
loope
sahf
cs
clc
mov
xor
add
push
add
mov
pop
add
add
cli
outsb
scas
pop
cmp
add
insl
fwait
inc
clc
push
add
rcll
add
pop
aaa
and
add
add
pop
js
add
popa
add
add
add
stc
or
xchg
adc
add
jbe
sbb
pop
adc
add
clc
ret
clc
xchg
imull
pusha
add
aam
push
punpcklbw
add
ficomps
xchg
cli
mov
sbb
into
insl
dec
dec
push
repz
pop
mov
add
popf
icebp
xbegin
clc
add
push
fstl
hlt
adc
add
fdivs
add
mov
add
outsb
popf
insb
xor
add
ret
clc
xchg
js
fimull
fistl
or
cli
add
add
mov
lock
clc
outsl
outsb
sub
cmp
clc
and
pop
movsb
clc
push
push
push
add
gs
sub
and
add
xchg
insl
adc
add
add
adc
add
clc
sub
clc
shr
sbb
pop
clc
in
dec
push
cltd
cld
dec
and
add
dec
adc
add
test
xchg
ss
insl
loope
xor
mov
rorb
xchg
pop
mov
add
sbb
clc
inc
clc
divb
add
push
jmp
clc
xor
add
mov
clc
dec
popa
add
mov
add
xor
add
push
add
cld
fwait
fs
adc
xchg
sub
add
sahf
repnz
add
jl
cmpsl
clc
xor
add
pop
push
add
push
add
ljmp
mov
add
mov
psrld
add
outsb
sbb
mov
outsl
and
add
shll
sar
clc
cmp
add
add
add
cmp
clc
jp
xor
add
mov
push
jbe
mov
clc
pop
mov
clc
fisttpll
pop
jmp
cmp
or
out
mov
add
loopne
sbb
add
jno
add
push
clc
adc
add
clc
sbb
add
xbegin
push
add
iret
or
add
shll
mov
push
leave
lahf
pop
xchg
in
popa
add
and
add
push
add
and
add
loopne
cmpsl
clc
cmp
scas
sub
or
add
mov
clc
das
add
add
imull
clc
out
iret
or
clc
dec
insb
dec
ficompl
pop
out
fsubrs
add
jl
push
clc
push
xor
add
stos
test
das
subps
clc
mov
clc
mov
clc
push
aas
adc
add
add
lret
jae
add
add
sub
or
into
fsub
clc
dec
cmp
clc
cmp
xchg
and
movsl
clc
xabort
test
fildll
mov
push
add
adc
mov
cmp
clc
cmp
fwait
sub
push
call
fsts
add
in
mov
push
clc
jmp
sar
fs
xabort
push
add
data16
sub
add
jns
add
add
mov
sub
add
clc
sbb
clc
sar
out
pop
mov
add
xlat
imul
pop
sub
mov
add
add
push
add
mov
add
xor
add
mov
fsubrs
sub
loop
into
push
ljmp
sar
aad
clc
sahf
add
add
add
mov
add
dec
push
add
pop
nop
fdivrs
add
fmul
mov
inc
add
mov
adc
sti
mov
xchg
aas
add
add
add
clc
stos
cmp
clc
mov
clc
pop
xchg
int3
js
shl
clc
outsb
and
je
pop
push
jo
add
imul
add
mov
add
jl
clc
add
add
in
sahf
loop
jp
add
sub
inc
clc
jnp
pop
mov
clc
jge
clc
mov
clc
dec
push
rcrb
add
outsl
idivl
clc
daa
clc
mov
add
pop
add
sbb
lods
fldenv
clc
bswap
or
inc
add
jmp
sar
enter
jo
add
clc
jg
add
add
add
add
xor
add
clc
push
mov
mov
clc
stc
sub
dec
pusha
add
mov
aaa
dec
lret
push
add
aad
dec
sub
adc
add
int3
mov
test
aam
mov
add
loop
mov
sub
jp
loopne
cmp
imul
add
add
lahf
xlat
stc
out
mov
add
nop
xor
add
rorb
add
jmp
add
lea
and
add
jecxz
push
add
ret
clc
mov
add
clc
cmp
add
xchg
sbb
pop
mov
clc
fldcw
push
add
insl
push
cmc
daa
clc
jge
clc
cwtl
cmp
sbb
mov
add
mov
dec
outsb
xbegin
jle
test
jecxz
jg
mov
mov
fwait
mov
pop
push
add
jo
add
int
xchg
cmp
sti
xchg
mov
pusha
add
mov
mov
mov
cmp
adc
add
cmp
test
push
jge
aad
clc
in
add
add
sub
mov
push
dec
sbb
lock
add
clc
stos
daa
clc
push
push
add
mov
add
fildl
jnp
pop
pop
pop
nop
push
clc
jp
adc
add
add
pop
push
add
iret
icebp
mov
leave
outsl
mov
clc
jns
in
loope
out
inc
add
push
out
ss
clc
mov
clc
mov
cmp
or
inc
add
rep
add
add
push
mov
lret
stos
flds
add
in
mov
clc
sbb
out
mov
add
add
add
add
js
add
fistps
sbb
cmp
pop
sti
clc
fnsave
add
mov
add
add
cwtl
lahf
aaa
sub
mov
add
clc
cmpsl
clc
aaa
test
cmp
adc
add
clc
loope
jne
ja
sarl
add
sti
fadds
sarl
dec
or
clc
mov
xor
add
xor
add
mov
clc
test
mov
add
jnp
sub
mov
aam
add
add
cld
in
cmp
je
lahf
inc
add
cmp
add
in
insl
jbe
clc
pusha
add
push
adc
cs
out
mov
out
adc
add
jge
clc
cld
pushf
and
add
push
fcompl
test
cli
fwait
push
clc
sahf
cmp
rcrb
mov
cli
xchg
jecxz
mov
add
jno
add
add
mov
xor
add
add
fbld
add
xchg
and
add
mov
add
add
clc
xor
add
mov
add
push
testb
sar
clc
call
mov
and
add
push
cmp
clc
rclb
add
shl
dec
push
add
add
cmpsl
clc
xor
add
pop
ss
add
pop
in
cmp
arpl
add
add
loopne
int
clc
leave
add
add
repz
add
add
inc
clc
outsl
popf
and
sub
add
xchg
jecxz
adc
push
add
lret
in
in
iret
xchg
popf
loope
and
add
fmull
pop
addr16
in
cmp
sar
inc
add
dec
das
lcall
clc
sbb
sub
clc
mov
inc
clc
int
push
or
test
sub
aam
add
sub
clc
mov
lock
int3
cmpsl
clc
mov
jbe
cmp
out
jb
add
adc
add
and
add
sub
add
inc
add
xchg
fbld
add
inc
clc
and
add
outsl
lcall
cltd
or
clc
push
add
xchg
lods
xchg
inc
add
mov
mov
pop
cs
fnsave
sub
mov
add
xchg
bnd
dec
adc
add
ljmp
lea
add
shll
add
clc
mov
adc
add
sti
loopne
add
add
clc
ds
int
rorl
or
mov
inc
clc
xbegin
gs
push
lret
clc
jge
add
add
mov
clc
hlt
or
clc
cmp
add
jb
add
ret
xlat
sbb
add
popf
push
add
push
imul
insb
jne
bound
add
clc
add
add
clc
push
push
clc
loopne
cmp
or
jecxz
push
cmpsl
clc
outsl
push
ret
add
bound
add
cmp
xor
add
sar
in
ds
push
add
insb
push
clc
jne
sub
clc
shlb
add
add
add
fmul
push
add
arpl
add
add
jp
mov
js
clc
out
pop
xor
add
in
jns
clc
shll
sar
add
pop
lods
ret
clc
or
jge
xor
add
data16
out
dec
pusha
add
sbb
add
dec
fdivrl
mov
inc
add
shlb
add
jae
add
push
xchg
or
add
and
sub
clc
popf
cmp
jecxz
cmp
add
cmpsl
clc
adc
add
cld
mov
add
add
mov
pop
pop
clc
adc
add
clc
or
clc
xlat
pop
mov
add
clc
mov
aaa
sub
sub
clc
jo
add
jbe
clc
int3
test
jmp
clc
xor
add
pop
ja
clc
je
mov
pop
mov
add
and
add
adc
add
add
lret
fidivl
add
add
add
clc
xor
add
add
cmp
add
jns
in
es
imul
clc
jmp
clc
icebp
dec
cmp
cmp
in
bound
add
punpckhwd
or
gs
jmp
into
adc
add
gs
lods
sbb
clc
out
leave
cmpsb
clc
and
add
or
enter
in
ljmp
lock
add
add
jge
in
jne
cmp
ret
clc
mov
inc
add
icebp
mov
add
test
data16
lods
sbb
clc
addr16
jo
add
pusha
add
mov
clc
xbegin
mov
add
iret
cmp
insb
xlat
mov
inc
add
shll
add
dec
imul
add
pop
shl
adc
sub
pop
xchg
in
in
push
shlb
popa
add
jmp
outsl
and
add
aam
add
add
add
clc
insl
push
add
iret
mov
je
add
mov
add
mov
clc
sbb
ds
shufps
sub
sbb
mov
xor
in
xchg
daa
clc
leave
sbb
clc
fidivrs
xabort
and
add
dec
dec
xchg
data16
fcompl
add
dec
sub
loopne
outsb
sub
clc
jbe
add
mov
cmp
add
add
add
sti
inc
clc
and
add
rcl
clc
cmp
aaa
stos
mov
clc
cltd
daa
clc
inc
clc
mulb
iret
divl
idivl
xor
add
add
loop
inc
add
loope
fsubrs
clc
loope
aam
cmc
push
sar
add
xor
add
fs
std
dec
mov
clc
push
clc
adc
add
or
pushf
cltd
addr16
jb
add
cmpsb
clc
xchg
daa
clc
mov
clc
test
dec
call
add
ljmp
add
push
clc
xchg
mov
clc
std
out
pop
inc
clc
dec
jbe
mov
push
scas
jne
movsb
clc
push
add
and
push
lods
cmp
clc
xchg
cwtl
sar
fimull
push
add
adc
add
gs
and
mov
and
test
push
add
xchg
sbb
xchg
jo
add
stos
pop
sbb
clc
call
add
test
lcall
adc
add
imul
add
aaa
mov
aad
rolb
in
mov
clc
out
mov
add
add
mov
add
add
int
and
add
mov
pop
cmp
add
loope
cmp
jge
rol
clc
push
sub
pop
and
add
add
or
fsqrt
push
add
mov
jecxz
cmove
and
fs
ljmp
sahf
mov
pop
and
add
int3
in
dec
fwait
test
mov
in
mov
push
or
inc
clc
inc
clc
test
mov
jle
add
add
add
clc
add
add
push
fisubs
add
arpl
add
add
dec
icebp
shlb
jecxz
push
add
cs
push
add
test
clc
mov
clc
in
fs
cmp
mov
xchg
or
push
mov
clc
xor
scas
cmp
scas
add
add
hlt
xchg
or
dec
adc
add
clc
cmp
add
xchg
sub
add
out
nop
mov
jnp
xor
add
add
dec
pusha
add
push
test
inc
add
sub
add
jg
and
outsb
xabort
jnp
xor
add
pusha
add
popf
fsubl
enter
mov
mov
iret
add
sar
f2xm1
push
call
clc
sti
cmpsl
clc
dec
cltd
dec
cmp
add
ret
fmuls
imul
pop
xor
add
out
adc
add
clc
mov
lahf
fstps
xbegin
ret
clc
and
add
clc
push
jns
clc
mov
cmp
add
push
add
bound
add
jns
inc
add
add
bound
add
jno
add
xabort
aas
mov
movsb
clc
cwtl
outsb
es
push
add
add
pop
sar
vsubps
sarb
mov
clc
call
ret
clc
or
clc
dec
out
pop
xabort
clc
inc
add
out
mov
add
je
das
and
shlb
add
push
dec
add
add
xchg
sar
mov
in
sub
ret
clc
push
lahf
xor
or
clc
push
clc
jb
add
add
ja
clc
jl
clc
clc
es
adc
add
or
clc
dec
add
mov
push
clc
sbb
lods
es
stc
adc
add
hlt
cwtl
push
add
inc
clc
ret
add
clc
test
enter
add
add
mov
mov
aaa
mov
clc
aam
cmp
and
jp
sar
xchg
dec
outsb
mov
fistpl
mov
or
clc
xabort
clc
pop
stos
out
out
jnp
incb
mov
sub
cmc
and
add
add
in
xchg
add
add
outsl
cmpsb
clc
mov
add
ds
mov
test
add
insl
xchg
mov
add
loope
fimull
add
dec
movsb
clc
xchg
insl
mov
add
add
clc
iret
and
add
bound
add
cmp
cmp
clc
imul
add
xor
add
add
dec
pop
cmpsl
clc
add
add
int
fwait
cltd
or
test
clc
in
pusha
add
out
jae
add
adc
add
mov
mov
cmp
arpl
add
out
mov
jbe
add
cmp
clc
movsb
clc
add
add
add
test
lcall
cmpsl
clc
pop
or
insb
inc
add
cwtl
xabort
mov
add
xor
add
ja
push
xchg
mov
pop
mov
push
add
mov
out
mov
sar
das
mov
add
clc
insb
or
push
add
mov
add
add
clc
iret
jge
add
and
add
push
add
cmp
sar
dec
sub
add
shl
icebp
xchg
aam
add
ficoms
add
mov
add
cmp
jne
add
dec
push
mov
add
clc
rcl
sub
outsl
aas
jecxz
cmp
adc
add
add
clc
pop
punpckhwd
sti
xchg
test
out
inc
clc
and
add
push
lods
stc
sbb
clc
xbegin
add
in
lods
or
and
add
mov
add
or
and
fiaddl
iret
adc
add
fsqrt
push
loope
scas
or
or
adc
insl
adc
loopne
and
clc
push
xor
add
mov
shlb
sbb
mov
cmp
clc
fdivr
dec
icebp
daa
clc
pop
jne
ss
imul
mov
cmpsl
clc
adc
add
pop
push
add
dec
data16
inc
clc
xchg
push
add
mov
mov
add
clc
cmp
clc
out
mov
add
fwait
mov
add
or
add
jbe
lods
cmp
lahf
pop
cmp
sub
shll
data16
dec
leave
sbb
call
add
jge
clc
and
add
and
sar
pop
push
inc
add
jbe
lock
into
mov
mov
imul
shrb
add
cmp
into
sbb
dec
iret
xlat
jne
mov
gs
je
mov
add
fs
in
pusha
add
push
nop
inc
add
push
sub
add
jle
add
cld
cmp
jo
add
clc
mov
gs
stc
mov
xor
add
add
mov
aaa
cmpsl
clc
adc
add
aad
add
sar
xchg
out
mov
mov
aam
test
or
clc
popf
push
rorl
iret
add
add
xchg
cmp
add
inc
clc
setg
clc
in
or
push
jge
clc
jo
add
push
add
mov
add
fwait
stos
mov
add
clc
stc
test
data16
ss
int
clc
mov
add
push
clc
sbb
push
clc
mov
jne
movsl
clc
adc
clc
sub
add
jg
scas
adc
add
pushf
dec
mov
imulb
scas
cmp
adc
add
clc
das
push
clc
fsubl
cmp
clc
pop
clc
inc
add
push
add
jne
cli
cs
xchg
cmp
sbb
add
and
add
add
fisubs
in
lock
jno
add
clc
add
or
clc
loop
jl
jge
jle
stc
hlt
cmpsb
clc
mov
clc
push
add
adc
add
pop
mov
clc
push
add
scas
inc
add
cmc
push
add
add
jmp
add
jle
add
push
add
ljmp
xor
add
cmc
push
add
pop
clc
sar
pushf
mov
cmp
add
mov
es
push
pop
clc
inc
add
out
lea
add
outsb
inc
add
or
cmpsl
clc
lods
stos
xchg
xchg
arpl
add
fs
or
ja
clc
and
add
xchg
fcoms
clc
leave
or
xbegin
pushf
ljmp
pop
daa
clc
add
adc
add
sbb
stos
sarl
scas
and
add
push
dec
xor
add
clc
ret
clc
xor
add
push
lret
cmc
jno
add
mov
insl
nop
push
clc
sbb
add
clc
lret
xor
add
clc
icebp
ja,pn
clc
jne
mov
add
xchg
dec
cmove
scas
jp
push
or
mov
pop
clc
bound
add
lret
and
add
movsl
clc
pushf
shlb
add
and
add
bound
add
push
clc
ret
clc
or
pop
iret
mov
pop
movsb
clc
pop
sbb
dec
mov
clc
mov
leave
fs
mov
inc
clc
jmp
jp
test
aaa
xabort
clc
insb
sbb
mov
movsb
clc
push
clc
mov
jo
and
data16
cwtl
scas
test
nop
imul
pushl
add
mov
add
test
cmpsb
clc
ljmp
stc
clc
push
stc
pushl
jae
add
clc
pop
cli
mov
stc
jmp
aaa
mov
clc
mov
int3
xor
add
jae
add
add
add
clc
push
es
fwait
sub
scas
inc
clc
jnp
int3
mov
inc
add
jp
stc
jb
add
test
push
enter
add
lret
inc
add
rcll
test
add
add
add
dec
and
add
add
test
add
std
aad
clc
mov
call
clc
pop
test
add
add
pop
xchg
push
add
sti
test
jl
das
fmul
mov
inc
add
stos
cmc
stos
stc
or
push
add
inc
add
jbe
add
into
data16
xchg
pop
xor
add
inc
add
jb
add
and
add
out
pop
fdivs
add
pop
imul
jb
add
add
lock
mov
clc
mov
icebp
mov
pop
shll
clc
icebp
jmp
in
push
add
cmp
mov
inc
clc
test
dec
daa
clc
inc
add
sub
mov
in
test
add
adc
add
add
dec
pop
push
nop
fcmovne
xchg
push
adc
add
je
mov
pop
adc
push
add
mov
jne
clc
rorb
dec
aaa
int3
movsb
clc
fs
inc
add
ljmp
imul
sbb
mull
add
test
ret
clc
aad
clc
inc
add
xor
add
add
imul
sar
add
xchg
sbb
aam
clc
add
add
lahf
sbb
and
add
pop
mov
clc
xlat
stos
mov
stos
repnz
add
xor
add
cmp
add
clc
sar
xlat
inc
add
xchg
out
mov
clc
pop
loopne
adc
add
mov
mov
add
clc
mov
add
sbb
add
bound
add
fcmove
sar
mov
xor
add
inc
clc
and
add
add
clc
inc
clc
push
add
pushf
pop
clc
inc
add
mov
je
clc
leave
xor
add
clc
push
fucomi
addr16
xabort
xchg
ja
push
add
lods
popf
loopne
cltd
out
arpl
add
add
clc
lock
sti
test
ret
add
mov
ja
xchg
inc
clc
jmp
jg
cmc
push
add
cmp
outsl
fisttpl
mov
push
add
nop
jns
clc
add
add
movsl
clc
pop
push
xlat
mov
es
in
cmp
clc
mov
test
pop
sub
add
adc
add
jg
clc
enter
clc
call
add
mov
push
mov
clc
lret
pushl
add
add
clc
adc
add
add
mov
fsubr
pop
push
pop
sbb
add
add
clc
xchg
inc
add
xchg
push
test
in
aas
mov
ret
clc
push
out
inc
add
add
add
inc
add
xor
jg
mov
add
xor
out
sbb
clc
mov
clc
mov
int
inc
add
jb
add
dec
cld
into
xchg
icebp
loop
jb
add
dec
pop
sbb
push
add
inc
add
or
clc
or
ja
call
pop
scas
test
inc
add
dec
jns
and
add
add
and
dec
ja
xbegin
ds
sar
xchg
mov
mov
scas
pop
sar
xchg
leave
jp
xabort
fnstsw
clc
push
adc
mov
cmp
add
pop
jmp
mov
add
fnstenv
add
ss
dec
xchg
mov
mov
clc
xchg
mull
xabort
cmp
add
mov
sbb
clc
xabort
outsb
dec
mov
pop
jno
add
clc
cmc
into
adc
add
fs
gs
inc
add
je
push
inc
clc
or
add
cmp
and
dec
and
add
clc
dec
dec
cmp
cmp
clc
pop
add
add
mov
cmpsl
clc
call
pop
clc
jg
test
sbb
mov
push
cmp
adc
gs
jne
push
xor
add
aaa
lret
in
xchg
cmp
cmp
clc
sub
add
mov
pop
xor
add
cwtl
jns
pop
xchg
jne
ret
clc
jne
or
add
add
clc
jnp
and
add
mov
add
add
clc
or
dec
mov
pop
cmp
mov
scas
call
clc
scas
in
jns
clc
sbb
sar
inc
add
inc
add
add
cwtl
sbb
clc
pop
or
sar
xor
add
leave
add
add
clc
dec
pop
inc
clc
sub
std
cmp
add
xor
ss
clc
dec
insl
pop
movsb
clc
inc
clc
push
movsb
clc
cmp
movsb
clc
add
add
add
pop
sti
xabort
loopne
pop
clc
imull
push
add
sbb
add
cli
cmp
fucom
clc
push
clc
fistpl
add
mov
aaa
and
add
add
inc
clc
jno
add
imulb
jns
mov
add
mov
cmp
sbb
mov
adc
sbb
insl
xor
add
mov
leave
mov
clc
adc
add
leave
loop
nop
cmp
xchg
push
add
nop
cmp
imul
scas
shll
sbb
add
pop
clc
sub
push
sbb
mov
clc
dec
enter
mov
ficoml
clc
std
test
cmp
iret
movsl
clc
loop
xlat
test
push
xchg
sar
and
add
ficomps
push
clc
imul
clc
aad
fstpl
outsb
test
loop
cmpsl
clc
test
add
and
cli
adc
add
xlat
dec
jl
lcall
mov
add
add
add
inc
add
mov
inc
add
dec
rcll
scas
bound
add
cmp
mov
test
pusha
add
xchg
mov
data16
lret
out
lret
shl
clc
push
in
repnz
fldcw
jbe
clc
cmp
data16
jl
imul
clc
bound
add
test
push
scas
dec
frstor
mov
or
clc
jmp
cmp
ficompl
mov
add
pushf
hlt
mov
add
xchg
cmpsb
clc
inc
add
loope
arpl
add
xchg
dec
daa
clc
fnsave
add
repz
sar
adc
add
add
add
add
test
or
add
idivl
clc
add
fdiv
cld
movsl
clc
sbb
int
into
out
mov
mov
ret
pop
out
mov
mov
insb
lcall
dec
cli
outsl
cmpsl
clc
ljmp
and
add
aas
je
insb
dec
outsb
insb
insl
push
add
jmp
cmp
sbb
test
enter
push
outsl
lcall
ljmp
js
arpl
add
add
pop
pop
movsb
clc
cmpsl
clc
sahf
hlt
in
mov
bound
add
clc
mov
mulps
add
add
add
sahf
inc
clc
inc
add
add
add
add
divb
jecxz
ss
add
pop
jmp
clc
fistl
aas
xabort
clc
cmpxchg
aam
cmpsb
clc
in
mov
repz
sbb
pop
push
add
in
bound
add
and
repnz
add
mov
add
icebp
sbb
sbb
add
add
or
add
clc
fmuls
add
adc
add
clc
cmc
addr16
cmp
clc
jo
add
sbb
mov
lods
fnsetpm(287
clc
cmpsl
clc
sub
jp
sub
clc
cmp
lea
add
cmp
aas
loop
int
add
mov
iret
adc
add
cmp
adc
add
clc
pop
fmul
imul
mov
clc
dec
lahf
fxtract
arpl
add
xchg
or
in
xor
aam
add
xchg
rep
inc
add
or
int
lea
adc
add
cwtl
sub
clc
in
jmp
add
add
clc
aad
test
mov
clc
lret
out
adc
add
imul
clc
push
test
fldl
xchg
int3
cmp
in
jno
add
enter
lahf
int3
cmc
out
sar
inc
clc
jp
add
rcrl
cld
negb
clc
clc
insb
mov
and
add
add
call
mov
shl
add
add
clc
push
loope
push
clc
gs
clc
xlat
jp
cmp
clc
inc
clc
fidivrl
js
dec
cmp
clc
lahf
xchg
lret
push
xchg
movsl
clc
cs
mov
or
add
add
mov
jb
add
fisttpl
clc
mov
je
lock
add
add
add
add
fbld
add
xabort
xchg
call
and
add
push
add
cmpsb
clc
shlb
clc
mov
jmp
hlt
int
clc
in
imul
mov
je
popa
add
add
add
lods
lock
add
dec
pop
xabort
add
or
outsb
sbb
inc
clc
iret
pop
jge
clc
or
add
sbb
scas
pushf
movsl
clc
jmp
ljmp
dec
dec
popf
into
sbb
cmp
clc
cwtl
xchg
rorb
add
movsl
clc
outsl
xabort
clc
clc
adc
add
clc
cmp
clc
mov
clc
xor
add
out
mov
pop
xlat
daa
clc
sar
add
aam
imul
xchg
mov
add
repnz
jmp
clc
iret
mov
dec
mov
push
test
push
inc
clc
int3
ret
movsl
clc
sbb
je
ret
clc
dec
notl
add
push
add
test
int
clc
cs
clc
pop
push
clc
add
add
add
sar
clc
jae
add
clc
ds
cltd
jmp
cmp
or
mov
mov
add
add
pop
es
inc
add
push
clc
movsb
clc
addr16
mov
inc
clc
loop
mov
add
xchg
fwait
mov
add
mov
pusha
add
push
add
stc
loop
daa
clc
pop
clc
aad
aaa
lods
mov
clc
pop
mov
or
add
imul
add
adc
add
sub
clc
push
push
clc
insb
jo
add
clc
sub
clc
mov
clc
loop
jo
add
aaa
int
push
add
mov
in
mov
cmpsb
clc
inc
add
jnp
clc
adc
dec
call
inc
add
ds
clc
addr16
add
shl
clc
sub
div
push
mov
add
add
loope
test
sub
stos
pop
lea
clc
or
add
and
add
clc
mov
cmpsb
clc
mov
fisttps
mull
insb
xchg
cli
cmp
stos
mov
clc
pushf
push
sar
xchg
ret
clc
xchg
inc
clc
inc
clc
aaa
stos
clc
push
add
cld
lock
push
add
adc
add
cld
cmp
clc
fneni(8087
clc
jge
mov
cmp
add
add
push
add
dec
cmp
fisttpl
clc
mov
add
inc
clc
roll
add
std
xabort
clc
cmp
add
sar
inc
add
inc
add
cmp
clc
enter
dec
or
jl
inc
add
mov
clc
push
add
add
add
push
fwait
mov
adc
add
mov
add
jg
xchg
jns
cmp
out
mov
mov
pop
outsb
push
add
cwtl
roll
add
sub
inc
clc
out
notl
sub
sbb
pusha
add
mov
add
ror
pop
mov
add
xor
jmp
add
push
add
mov
mov
mov
je
inc
clc
das
aad
int3
cmpsl
clc
adc
cs
lahf
mov
iret
push
fildll
xchg
dec
mov
pop
sbb
inc
add
jns
add
inc
add
sahf
cli
jp
sahf
lods
mov
das
push
jle
in
pop
movsb
clc
ss
lods
push
cmp
xor
add
fbld
sar
jne
jmp
add
pop
sub
push
push
push
and
add
bound
add
add
inc
clc
mov
cmc
inc
add
add
add
jbe
test
icebp
imul
xor
add
or
dec
mov
add
xor
fwait
dec
or
sar
mov
pushf
mov
add
sub
clc
sbb
add
add
movsl
clc
xchg
mov
xor
add
clc
push
xchg
fwait
dec
jnp
ljmp
add
cmp
clc
cmpsb
clc
or
add
sub
lahf
addr16
mov
clc
mov
add
rorl
clc
mov
clc
bound
add
inc
add
loop
dec
aam
fs
out
sub
adc
enter
add
stos
mov
clc
sbb
mov
clc
pop
ret
clc
in
test
ret
sub
pop
inc
add
adc
add
clc
cmpsl
clc
in
pop
inc
add
xchg
xchg
mov
fwait
pop
xlat
lods
mov
add
xchg
je
rolb
add
jns
push
add
je
movsb
clc
aaa
sub
imul
mov
arpl
add
clc
jecxz
cmpsb
clc
sti
mov
dec
sub
imul
cltd
jbe
clc
fs
mov
clc
imul
jns
pop
shl
clc
loopne
or
iret
push
pop
in
mov
cmpsl
clc
push
add
jecxz
cli
adc
add
clc
jge
sbb
push
add
mov
es
add
cli
pusha
add
jbe
paddq
add
xchg
push
int
das
ss
ficomps
fdivrl
clc
scas
jb
add
mov
adc
add
lret
cmpsb
clc
adc
add
add
mov
add
add
clc
jns
mov
cmc
mov
xor
add
clc
repnz
inc
add
xchg
mov
clc
push
clc
ja
or
cli
xchg
cli
out
shll
fabs
clc
outsl
icebp
sub
cmp
push
adc
add
in
mov
ss
and
or
cmp
mov
xchg
add
add
mov
fisttps
int3
out
testl
and
add
cld
add
add
add
add
sti
cmp
jp
mov
add
add
ret
mov
add
fidivrs
xchg
fwait
dec
jmp
out
xchg
mov
and
add
add
stos
je
clc
xbegin
popf
sub
add
movsl
clc
out
in
jae
add
in
movsb
clc
sub
lcall
clc
xchg
cmp
pop
clc
xor
add
dec
pop
out
popa
add
mov
mov
and
add
cltd
xchg
rcr
mov
clc
in
push
add
test
mull
add
test
add
imul
mov
stc
lret
jns
clc
into
cmpsl
clc
insl
insb
mov
add
mull
pop
mov
test
xchg
ret
aaa
dec
mov
cwtl
pusha
add
ret
mov
cwtl
mov
cmp
insb
or
add
movsl
clc
cs
cmp
pop
mov
mov
clc
add
mov
add
mov
sub
xchg
pop
dec
add
add
add
xbegin
in
push
jae
add
fdivrs
add
adc
add
add
or
clc
stos
sub
in
into
dec
adc
cmp
sub
or
push
add
dec
pop
mov
add
lods
sar
or
sub
mov
cmpsb
clc
fisttpll
add
add
mov
fnsave
pop
clc
inc
clc
fidivs
jp
clc
push
mov
jge
aaa
dec
add
test
sub
add
ret
push
jg
mov
pop
movsb
clc
ljmp
and
out
loopne
and
add
jnp
adc
add
inc
clc
pop
xchg
mov
push
mov
out
inc
clc
lods
and
add
scas
scas
push
add
scas
xor
add
clc
pop
cli
int
test
add
sar
push
clc
scas
out
dec
icebp
xor
add
lock
add
add
daa
clc
cli
mov
sbb
or
rcrb
adc
add
xor
add
add
cmp
sbb
dec
dec
je
cmp
clc
insl
mov
sbb
clc
push
or
add
dec
insl
loop
xchg
and
add
pop
mov
add
testl
mov
clc
or
add
adc
add
clc
pushl
add
out
clc
mov
xor
add
nop
or
xchg
iret
mov
add
outsl
inc
add
cltd
mov
clc
add
or
popa
add
imul
push
mov
add
inc
clc
and
add
jmp
or
clc
cmp
aad
icebp
or
clc
cmp
cmp
dec
push
or
clc
mov
mov
lret
test
cmp
clc
and
add
add
push
jmp
add
add
xor
add
add
jnp
and
add
sar
inc
clc
clc
sbb
push
add
insl
rcrl
out
cmp
cmp
clc
xchg
inc
clc
lret
sub
jne
out
test
sub
fsts
loopne
xchg
test
sarb
fdiv
jmp
add
clc
jnp
enter
and
add
clc
test
adc
add
inc
clc
adc
add
std
sub
jmp
into
jp
or
pop
sub
clc
push
add
cmp
xor
add
xor
add
cmp
test
jbe
add
jno
add
fisubrl
clc
jmp
pop
clc
inc
add
jp
dec
xlat
mov
mov
xor
add
clc
xor
add
add
add
add
lret
add
pop
fcomip
push
adc
add
mov
add
ret
clc
jp
clc
mov
add
inc
add
sar
mov
clc
fcomps
fadds
xchg
out
xor
add
add
cmp
je
and
add
mov
sub
adc
add
xchg
es
xchg
lret
push
add
adc
add
sub
dec
cmp
add
into
rclb
lret
pusha
add
call
and
add
lret
shrb
push
add
xor
add
fs
jnp
cld
mov
clc
fwait
cli
inc
clc
adc
add
jge
xor
add
shrl
xchg
sbb
inc
clc
xchg
aas
sahf
lods
sbb
outsb
pop
cmp
pop
decb
push
clc
mov
aam
fsts
sub
sbb
and
add
fs
sub
sbb
out
pop
sbb
pop
mov
add
mov
ja
add
and
jb
add
test
add
in
mov
aam
popf
cmp
clc
rcrl
je
add
aaa
clc
in
cli
das
lcall
das
leave
jne
mov
outsb
cmp
xchg
mov
test
ret
clc
push
add
inc
clc
push
add
pop
fisubl
add
dec
adc
add
add
sbb
jge
mov
mov
clc
dec
ficoms
add
inc
add
sbb
nop
iret
lret
imul
nop
inc
clc
fadd
clc
iret
add
add
clc
sbb
add
or
mov
adc
add
jb
add
cli
out
jbe
outsb
data16
jmp
cld
je
aam
add
sbb
push
hlt
loope
cmp
push
add
mov
add
add
add
inc
clc
push
in
push
mov
aad
push
add
inc
clc
movsb
clc
mov
lret
or
clc
sub
clc
icebp
xchg
int
jg
add
jbe
fbstp
add
add
add
mov
add
jp
pop
pop
clc
adc
pusha
add
and
xor
cmp
jb
add
dec
sbb
add
or
adc
add
add
aaa
aam
clc
sub
in
negb
push
clc
into
xbegin
xchg
inc
add
sub
lock
or
sar
or
scas
fbstp
xchg
mov
clc
fisttpll
pop
xor
xor
add
lock
clc
aaa
in
inc
clc
mov
push
add
mov
adc
add
into
jbe
mov
aad
fmuls
mov
mov
add
mov
clc
push
jle
push
dec
dec
jns
ret
clc
out
iret
push
clc
js
clc
stos
out
lods
movsl
clc
pop
shll
add
push
inc
add
and
add
clc
arpl
add
add
push
inc
add
jnp
clc
push
add
pop
mov
clc
das
pop
and
add
clc
cmp
add
xchg
pop
cs
popf
into
aaa
std
sbb
xlat
fistps
bound
add
arpl
add
add
add
add
aas
nop
sub
jle
pushf
add
add
cmp
add
mov
imul
add
and
push
adc
scas
lock
add
cmc
jge
fsubl
clc
imul
clc
mov
sar
mov
neg
addr16
mov
clc
xchg
mov
mov
clc
xchg
pushf
push
data16
roll
insb
xor
add
add
sub
clc
je
out
test
ret
clc
pop
out
jecxz
lods
jg
clc
mov
mov
adc
add
ljmp
add
add
imul
clc
cmp
clc
push
pop
jno
add
add
fistpll
pusha
add
mov
clc
addr16
push
test
add
in
push
add
popa
add
scas
sbb
clc
cmp
inc
add
and
mov
cmp
add
sti
push
sar
aad
test
cmp
loop
pop
push
add
push
addr16
test
inc
add
lock
add
mov
add
lods
mov
clc
jb
add
cmc
and
add
jne
fs
xchg
sahf
std
cltd
and
add
add
sahf
ret
addr16
js
add
ljmp
xchg
cmp
add
pop
clc
xchg
sub
sahf
jo
add
test
xor
clc
or
cmpsl
clc
aaa
cmp
add
dec
or
clc
cmp
clc
cmc
dec
mov
mov
clc
sub
add
dec
or
cmp
add
dec
jmp
and
add
cwtl
jmp
clc
adc
add
movsb
clc
arpl
add
pop
in
gs
xlat
cmp
clc
sar
outsb
shlb
dec
mov
fstpt
rorb
clc
mov
mov
cwtl
mov
ret
clc
pop
dec
cltd
mov
add
ja
clc
push
mov
gs
cmp
jnp
test
ficomps
xchg
clc
stos
jnp
adc
add
rcrl
lea
add
dec
loop
adc
add
pop
mov
test
and
mov
clc
inc
add
xor
add
arpl
add
das
dec
cltd
jb
add
ficoms
push
sub
sti
mov
add
jmp
rep
clc
cmc
push
add
mov
sub
negb
cmp
push
push
add
insb
xor
add
out
pop
push
xabort
add
and
add
add
sti
mov
mov
xor
add
xchg
dec
mov
insl
fisttpl
into
fldcw
out
inc
add
and
add
add
loop
and
add
ja
jmp
push
xor
add
bound
add
adc
clc
hlt
jne
push
add
mov
mov
loopne
into
pop
cmpsl
clc
stos
xchg
cmpsl
clc
scas
xor
add
cmpsl
clc
sar
stos
ss
xchg
mov
mov
jl
popa
add
adc
pop
or
mov
clc
fs
out
addr16
pop
pushf
add
add
push
add
pushf
dec
lea
xchg
add
add
push
clc
bound
add
add
or
clc
stc
push
add
sub
add
fstl
sub
push
clc
cmp
clc
in
push
add
cwtl
jl
clc
add
add
movsb
clc
and
add
cmpsl
clc
push
add
xor
add
add
daa
clc
out
jb
add
clc
sub
adc
add
clc
xchg
mov
clc
fstpt
out
jb
add
mov
jle
scas
sbb
outsl
idiv
test
cmp
add
ds
stc
cs
clc
lret
into
ret
clc
lea
add
pop
clc
push
jb
add
clc
ljmp
jns
add
mov
clc
jbe
aam
jb
add
pop
testb
cltd
loopne
leave
fcomps
adc
add
xor
add
add
mov
add
clc
mov
xabort
or
clc
inc
add
sbb
add
ljmp
incb
add
inc
add
add
add
add
dec
imul
clc
inc
clc
repnz
in
out
push
cli
xor
add
sub
or
outsl
mov
aam
scas
lods
popf
and
add
sar
and
add
add
imul
clc
push
xabort
mov
clc
push
add
xchg
mov
xor
out
sbb
pop
clc
sbb
clc
movsl
clc
mov
clc
xor
add
add
aad
and
mov
dec
mov
pop
lahf
mulb
mov
add
xchg
add
add
mov
add
mov
sar
add
mov
jo
add
iret
cmp
pop
cmp
mov
add
lret
xchg
mov
clc
cwtl
gs
ret
clc
mov
stc
mov
std
data16
into
cmp
ss
repnz
clc
push
cwtl
push
cs
jo
add
add
mov
scas
pop
xor
fldcw
jge
int3
ja
clc
jno
add
add
jne
popa
add
jb
add
fildl
add
dec
ret
cmp
clc
jmp
add
inc
add
mov
cmp
push
add
add
dec
call
clc
sar
sub
std
cmp
add
pop
push
push
lahf
add
add
xabort
clc
cmpsl
clc
pop
push
sar
clc
mov
mov
cmc
and
add
add
fdivrs
jno
add
cmpsb
clc
xor
add
xchg
dec
dec
dec
and
add
ds
add
fstl
add
bound
add
xor
add
add
jg
clc
adc
add
sar
out
mov
add
sub
xchg
mov
pop
jge
test
test
stc
fistps
add
add
clc
sub
test
and
add
push
push
std
call
add
movsb
clc
inc
add
mov
clc
cmp
or
add
iret
shl
cld
cmp
cmpsb
clc
add
add
and
add
imul
push
sub
clc
jnp
jge
frstor
add
jno
add
add
mov
lods
into
incl
clc
jnp
int
loop
or
aas
mov
mov
add
mov
add
lret
out
inc
clc
push
add
and
add
add
add
pusha
add
mov
push
mov
jmp
add
and
add
aas
jg
add
jbe
jmp
clc
xor
fisubrs
xor
add
inc
add
pusha
add
mov
or
add
add
add
into
mov
pop
out
mov
dec
jb
add
scas
lods
bound
add
push
mov
ss
pop
repnz
cmp
xchg
push
add
fdivl
clc
inc
clc
es
adc
add
jp
clc
je
add
and
sbb
loopne
repnz
add
xchg
xor
add
das
cmp
add
enter
lock
xbegin
scas
sar
clc
cmpsb
clc
ja
clc
mov
sbb
add
aaa
jbe
test
inc
add
dec
add
add
lahf
jge
sub
popf
mov
push
sbb
add
outsl
ja
clc
mov
mov
add
add
mov
cmp
dec
mov
add
scas
lea
fstps
decl
out
fsubp
clc
scas
insb
fcmove
xabort
pop
inc
add
inc
clc
lea
push
add
adc
add
jmp
dec
sub
sub
sub
mov
es
and
push
jmp
jno
add
clc
jmp
jmp
dec
inc
add
in
movsl
clc
mov
adc
add
pop
scas
or
push
js
popf
mov
pop
clc
xchg
fdivl
add
add
clc
or
out
cmp
clc
dec
mov
lret
movsl
clc
xchg
cld
jmp
clc
mov
out
cmp
cmp
pop
lret
sub
add
add
pop
mov
jp
clc
dec
sub
clc
adc
add
xchg
int3
dec
pop
adc
clc
dec
jbe
clc
pop
sqrtps
add
pop
cli
hlt
loopne
and
add
clc
cmp
jnp
cmp
push
push
arpl
add
add
es
jns
int
iret
inc
clc
ficoml
mov
dec
enter
and
lahf
loope
and
add
or
fadd
clc
inc
add
cmp
jl
add
pop
pusha
add
mov
sti
fidivrl
add
dec
rcrl
add
add
insb
pop
scas
xchg
and
and
stos
data16
js
add
add
fwait
xor
add
dec
test
in
clc
or
int
jnp
clc
pop
add
in
cli
mov
add
xchg
push
add
pop
mov
sub
mov
dec
push
clc
or
clc
pop
cmpsb
clc
or
popf
sub
lea
hlt
sub
cmp
clc
jne
add
xor
add
call
add
insl
in
stos
mov
pop
lret
das
fistpll
mov
loop
xchg
ss
lahf
neg
sbb
popf
add
add
push
es
loop
cld
test
xor
add
add
xchg
add
mov
out
sub
clc
lcall
hlt
lcall
inc
add
sub
clc
leave
scas
xor
add
add
cmpsl
clc
in
mov
add
jecxz
mov
dec
pop
cmp
inc
clc
inc
add
daa
clc
imull
add
adc
add
mov
add
xor
add
movsl
clc
ss
sub
rcr
outsl
aas
or
iret
xor
add
test
mov
cld
jbe
clc
es
mov
inc
add
test
add
sahf
into
lock
adc
js
add
add
mov
clc
dec
sbb
cmp
sub
pop
jnp
add
cmp
clc
es
clc
xchg
testl
clc
cli
sub
add
pop
pop
cmc
das
stos
into
mov
mov
mov
add
xchg
mov
clc
xor
and
add
clc
jnp
jmp
push
add
cltd
jo
add
lods
rcr
mov
data16
daa
clc
add
add
add
mov
add
clc
mov
add
mov
testb
and
add
add
ja
mov
mov
sbb
push
sti
pop
xchg
and
jge
cmpsl
clc
scas
cmp
ds
jmp
popa
add
imul
in
cmp
cmp
mov
add
sbb
clc
mov
add
xchg
sbb
add
jmp
add
dec
out
stc
in
pop
movsl
clc
xchg
sbb
mov
mov
enter
pop
add
add
clc
sub
inc
clc
xchg
xchg
add
add
add
iret
idivl
clc
push
mov
popa
add
xor
jg
clc
add
add
clc
cld
jbe
add
add
out
push
add
insl
dec
push
ret
clc
enter
loope
pop
imul
add
add
add
xchg
test
push
es
fcomip
cmp
add
xor
int
insl
xor
add
add
out
out
mov
loope
mov
xchg
sbb
fisttps
add
icebp
adc
add
clc
and
add
mov
add
arpl
add
ss
jnp
scas
mov
add
stos
jne
rolb
add
outsl
mov
dec
js
clc
into
fcoms
cli
push
testl
jl
clc
repz
add
xor
add
shll
cmp
and
add
push
xbegin
add
or
lahf
push
dec
pop
pop
sbb
adc
xchg
cmp
div
ret
clc
add
pop
test
or
lods
push
add
fcom
pop
cmp
test
cmp
arpl
add
sahf
scas
push
clc
shr
cld
push
lret
fildl
sbb
mov
clc
and
add
add
cmp
add
cwtl
adc
add
clc
push
call
add
xchg
sub
fs
ljmp
add
clc
lea
clc
push
fisubrs
clc
xchg
aad
add
inc
add
lods
cmp
fisubrl
add
stos
push
popa
add
inc
add
jnp
add
and
add
mov
inc
clc
lods
inc
add
pop
pop
sub
jg
lret
add
push
add
jno
add
enter
add
mov
mov
ss
clc
stos
ja
xchg
nop
stos
out
cmp
add
out
and
add
xor
clc
das
add
inc
add
pop
sbb
clc
leave
sbb
ss
cmp
fistpll
rorb
loope
push
clc
cmp
clc
jge
add
push
add
adc
add
testl
into
vucomiss
clc
js
add
mov
add
addr16
adc
adc
add
popf
push
add
pop
insl
scas
lret
add
add
push
add
movsb
clc
movsl
clc
xor
add
cli
ret
clc
mov
add
adc
add
movsb
clc
mov
ljmp
add
imul
or
jle
jnp
shr
outsb
int3
sti
inc
add
xor
add
clc
pop
and
add
scas
push
add
add
clc
scas
cmp
mov
jnp
sub
dec
ss
cmp
jae
add
pop
inc
clc
arpl
add
add
jnp
inc
add
pop
adc
add
clc
sbb
decl
cld
sbb
add
sbb
imull
mov
add
add
repz
pop
and
dec
mov
pop
and
add
pop
xchg
adc
add
push
out
sbb
pop
pusha
add
das
cmp
add
outsb
jae
add
icebp
call
add
add
fcoml
add
add
pusha
add
inc
clc
mov
sub
cmp
add
sti
lret
xor
insb
xor
add
enter
push
add
sub
push
cmpsb
clc
icebp
jne
test
in
mov
add
and
add
adc
add
lret
clc
addr16
clc
sar
test
data16
and
add
push
add
mov
xor
add
push
jp
clc
mov
jmp
cmc
in
loope
clc
mov
adc
add
dec
leave
shlb
adc
das
mov
enter
cmpsl
clc
sysexit
cmp
es
test
clc
cmp
add
add
ss
add
fcom
fwait
loope
mov
add
rcll
add
dec
sbb
cmp
clc
jne
out
mov
lahf
insb
cmp
add
mov
bound
add
clc
sar
mov
clc
mov
cli
pop
cmp
clc
pop
mov
lea
clc
popa
add
xchg
pop
mov
jnp
cmp
testb
fisttpll
add
repnz
add
clc
shl
clc
mov
imul
clc
jle
clc
bound
add
pop
push
es
nop
fcomps
add
outsl
scas
rcr
adc
adc
add
add
cmp
shlb
and
add
idivl
repz
std
dec
lods
mov
outsb
mov
and
scas
xabort
add
xor
clc
push
clc
jle
mov
clc
xor
clc
push
fcomps
inc
add
daa
clc
jns
add
or
add
clc
mov
mov
negl
sbb
push
jmp
add
addr16
push
pop
sub
test
clc
cmp
je
out
iret
aas
or
rolb
add
add
es
mov
add
lods
js
add
add
mov
jge
clc
dec
popf
xlat
inc
add
cmp
or
push
dec
or
inc
add
movsb
clc
cmc
xor
add
adc
add
push
add
scas
std
lret
lcall
add
nop
or
inc
add
in
dec
out
pop
lods
hlt
push
add
xchg
jge
clc
or
push
add
insb
pop
mov
shr
dec
nop
mov
dec
push
cmpsb
clc
inc
add
sbb
cltd
push
dec
test
lcall
xchg
or
add
add
inc
clc
gs
dec
xchg
mov
clc
adc
add
repnz
testl
int
imull
das
insb
xor
add
es
bound
add
sub
and
add
push
xlat
xchg
adc
add
push
mov
clc
int
test
jns
or
gs
dec
outsb
inc
add
not
fisubs
clc
lahf
mov
testb
clc
sti
cmp
dec
flds
clc
dec
pop
mov
push
outsb
or
add
cmp
add
sbb
add
pop
push
sub
clc
push
add
adc
add
clc
ret
or
add
adc
add
cmp
clc
dec
jl
or
insl
fdivp
and
add
ljmp
cli
gs
mov
pop
in
adc
stc
ja
clc
fimull
mov
add
test
clc
or
clc
int3
push
add
push
lods
and
add
clc
pop
mov
ret
clc
xabort
pop
cltd
leave
lahf
gs
test
fucompp
lcall
clc
out
test
jl
rcrl
mov
clc
jb
add
push
leave
icebp
movsl
clc
jecxz
lea
dec
and
movsl
clc
fldenv
ret
fsubs
mov
fucomp
xchg
xor
add
add
add
add
pop
out
mov
pop
or
jns
clc
xor
push
jp
imul
clc
daa
clc
push
jmp
jns
nop
and
pop
or
scas
mov
xor
add
sub
add
mov
xor
leave
xbegin
adc
inc
add
repnz
jo
add
add
fildl
jbe
outsb
push
adc
add
mov
dec
push
mov
pop
xchg
mov
clc
dec
adc
add
clc
movsl
clc
xbegin
popf
and
add
add
add
mov
add
nop
add
add
xchg
imul
jp
clc
xchg
xlat
lods
cmc
fsubl
add
push
pop
mov
clc
addr16
push
add
ljmp
add
insl
fdivl
notb
add
idivl
sti
mov
mov
add
stc
sbb
clc
push
add
push
add
mov
aam
adc
add
daa
clc
jae
add
faddl
add
sbb
sbb
loop
fiadds
lcall
xchg
cmp
push
add
out
stc
mov
mov
add
pop
mov
add
sarl
pop
sbb
clc
insl
in
rcr
sar
add
mov
dec
out
into
mov
mov
clc
jl
clc
bound
add
or
out
or
clc
xabort
cmp
mov
or
ficompl
ja
clc
adc
add
cmpsl
clc
xor
jo
add
add
add
ss
fnstsw
clc
ds
add
dec
insb
xchg
stos
das
call
fmuls
push
lcall
add
mov
sbb
dec
dec
jl
repz
mov
clc
mov
xchg
jmp
add
call
add
out
sbb
clc
fnstsw
push
push
dec
pop
pop
repnz
shll
push
cld
testb
add
add
sub
adc
add
test
mov
clc
pop
push
data16
cmp
out
punpcklwd
add
clc
push
clc
int3
xor
add
int3
and
clc
shll
clc
pusha
add
stos
jo
add
add
lock
push
clc
repnz
add
fiaddl
add
push
add
out
and
xor
add
cs
xbegin
je
rcrl
fs
sti
xor
add
add
fldenv
imul
add
sbb
pop
cmp
add
mov
sar
and
add
outsb
jae
add
clc
pop
xor
add
inc
clc
adc
clc
inc
clc
cmp
jl
add
xchg
cld
loop
out
into
add
add
pushf
lret
popf
push
aam
xchg
cmp
jmp
clc
ret
clc
mov
dec
stc
movsl
clc
ret
clc
jne
add
or
push
add
mov
in
push
clc
cmp
add
push
add
jge
add
in
arpl
add
clc
pop
sbb
clc
push
jbe
cmp
add
bound
add
clc
stc
outsb
push
iret
add
add
add
mov
pop
inc
clc
pusha
add
gs
pop
popf
push
pop
aas
or
fwait
cwtl
adc
add
pop
mov
mov
sbb
popf
repnz
add
pop
mov
call
add
dec
mov
ds
mov
clc
sti
daa
clc
jae
add
xor
add
icebp
clc
cmp
or
loope
xchg
cmp
lret
das
jg
lea
xor
add
add
jl
pop
sar
adc
add
add
cmp
push
add
aad
dec
das
lock
fucomi
push
cmp
add
pop
out
mov
clc
fcmovne
pusha
add
int
clc
pop
cli
ss
cmp
sub
stos
pop
addr16
stos
lret
sub
clc
clc
data16
fisttpl
repz
mov
lret
xchg
cli
sbb
ljmp
mov
push
cmp
icebp
cs
add
adc
add
repz
push
add
add
movsb
clc
cmpsb
clc
popl
sti
mov
int
jnp
clc
xor
clc
out
cmpsl
clc
mov
mov
imul
test
aaa
mov
jbe
bound
add
inc
add
and
add
add
or
jmp
clc
loop
mov
add
mov
clc
cwtl
daa
clc
push
clc
ret
js
sub
add
and
add
lods
mov
and
add
add
jle
test
int3
xchg
daa
clc
jns
addr16
test
mov
add
add
sbb
clc
inc
clc
or
sti
dec
mov
clc
out
movsb
clc
add
add
and
add
sub
cwtl
fs
leave
jge
loope
xchg
or
inc
add
push
clc
jmp
and
lcall
and
add
clc
mov
jb
add
add
sub
pop
xchg
aas
js
loop
fstpl
stos
cmpsb
clc
jge
clc
mov
lods
adc
add
cs
test
lock
add
notb
or
xor
mov
add
mov
xchg
stos
or
clc
sar
addr16
imul
add
jae
add
pop
fildl
clc
mov
lods
mov
xchg
sub
fadds
cmpsb
clc
xlat
adc
clc
adc
add
pop
movsb
clc
add
add
lods
sar
gs
or
add
jb
add
pop
mov
clc
cltd
and
add
cmp
cmp
jge
int3
scas
push
or
clc
dec
mov
clc
xlat
xchg
add
add
clc
test
pusha
add
aad
add
xchg
jnp
je
cvttps2pi
push
sahf
mov
jno
add
add
add
sar
and
add
ss
mov
add
or
add
call
loope
adc
add
add
xchg
icebp
mov
pop
xchg
cld
adc
add
out
jge
ret
clc
add
mov
mov
add
push
clc
pop
call
cld
into
cs
ljmp
push
hlt
add
add
enter
aas
xbegin
in
sub
lods
mov
dec
faddl
sar
add
add
add
dec
mov
clc
and
add
cmpsb
clc
adc
add
clc
gs
nop
cwtl
imul
mov
add
notl
clc
shll
add
in
into
sub
push
cmp
clc
knotw
cmp
clc
add
add
gs
out
sbb
push
clc
jno
add
adc
add
add
pop
adc
add
leave
cmp
xor
add
add
data16
cmp
clc
divb
sar
clc
sarb
sbb
dec
ja
sub
in
fldl
add
cmpsb
clc
popf
pop
dec
in
fsubl
add
clc
cmpsb
clc
xchg
jno
add
clc
fs
stos
push
test
xor
add
clc
mov
mov
clc
sbb
popf
mov
add
or
test
clc
push
movsl
clc
push
cld
sar
data16
addr16
inc
add
xor
add
clc
jp
inc
add
mov
add
clc
std
push
mov
clc
add
add
sbb
push
movsl
clc
inc
clc
pop
sti
popa
add
mov
xchg
leave
ret
add
xchg
int
sbb
into
lods
icebp
push
add
mov
jp
clc
stc
mov
cld
cld
xchg
shl
push
clc
repz
hlt
sti
fistl
add
sti
lods
xchg
leave
push
ds
jmp
add
add
test
movsl
clc
out
jle
fistpl
imul
data16
sub
add
and
add
clc
or
add
and
add
add
fsubl
xor
add
clc
or
aaa
mov
out
test
push
jae
add
clc
and
xor
add
add
clc
inc
clc
xlat
xor
inc
clc
jae
add
add
outsb
fs
dec
jecxz
cmpsl
clc
daa
clc
jge
add
mov
cmpsl
clc
test
flds
fs
push
dec
pop
sar
dec
jb
add
xchg
cmp
add
stos
jo
add
add
loop
pop
sar
clc
xchg
xchg
jbe
add
adc
cmpsl
clc
push
clc
test
clc
in
xchg
repz
clc
sub
adc
add
cmp
fyl2xp1
push
lods
push
add
xchg
mov
fwait
test
shl
clc
xchg
sbb
clc
cmp
clc
aad
sub
mov
scas
adc
xchg
add
add
pop
mov
add
mov
mov
clc
pop
clc
sub
pop
popa
add
lcall
cli
ljmp
adc
add
add
jae
add
add
int
clc
cmp
add
gs
sti
adc
add
lret
clc
out
xchg
mov
mov
stos
adc
jo
add
or
clc
sub
popa
add
pop
imul
add
fisttps
mov
clc
and
js
add
fdivr
fs
frstor
dec
xor
add
add
cmp
add
data16
pop
clc
bound
add
clc
and
add
xchg
sbb
pop
mov
add
pushf
stos
fldl
enter
add
hlt
fbstp
add
jbe
iret
out
pop
jne
dec
sbb
add
popa
add
xchg
aaa
std
sbb
mov
fadd
clc
insb
push
mov
xabort
mov
xchg
pop
cld
addr16
out
movsl
clc
and
add
sahf
pusha
add
or
add
pusha
add
xlat
and
add
pop
test
pop
lods
mov
clc
lcall
push
mov
ret
jle
add
insb
sahf
imul
test
clc
mov
scas
sub
popl
add
push
clc
mov
add
clc
push
add
ret
clc
cmc
cltd
clc
popf
lods
mov
add
add
imul
mov
jp
pushf
inc
clc
sbb
clc
pop
movsb
clc
push
or
jae
add
iret
adc
add
add
cmp
pop
mov
dec
inc
add
pushf
test
mov
mov
adc
inc
clc
xor
add
or
stc
xchg
mov
ds
pop
mov
clc
enter
ficoms
clc
xor
add
inc
add
pushf
cli
cmp
bound
add
repz
sar
clc
push
clc
mov
notl
clc
push
lods
push
add
pop
add
add
loop
nop
xor
add
cmp
inc
add
or
rclb
add
add
in
ret
clc
addr16
jecxz
clc
xor
clc
or
add
into
dec
test
divl
push
add
loopne
sahf
cmp
clc
data16
add
add
ds
ljmp
arpl
add
lahf
xchg
add
add
clc
scas
mov
clc
jmp
int3
mov
mov
in
hlt
cmc
sub
jmp
jmp
daa
clc
jns
js
add
mov
jns
add
jmp
stc
jle
adc
add
clc
dec
jns
clc
mov
pop
imul
xchg
mov
clc
lahf
dec
mov
push
cld
push
dec
jno
add
push
add
lcall
jne
and
add
clc
shr
xbegin
add
clc
add
add
add
xbegin
cmp
mov
dec
mov
imul
push
dec
mulb
add
push
push
add
iret
mov
add
clc
leave
loope
and
add
xchg
inc
clc
mov
insb
movsb
clc
xor
add
clc
push
add
repz
ret
xchg
cmp
clc
addr16
fwait
and
add
or
in
data16
and
add
rorb
clc
add
sbb
add
cmp
mov
scas
aam
add
jp
pop
xchg
push
add
lods
mov
in
scas
bound
add
add
push
add
cmp
ret
cmp
sti
in
push
cmp
clc
clc
cmpsl
clc
cmp
clc
sub
clc
jns
cmp
pop
scas
mov
xchg
shrb
add
mov
and
out
sub
and
add
add
dec
sub
add
sub
roll
clc
sbb
rcr
jg
dec
and
cld
push
loope
lret
cmp
shl
clc
push
inc
add
movsl
clc
pop
imul
cld
jns
add
cmc
call
add
jecxz
adc
ss
clc
fwait
into
cmp
aaa
xchg
sub
int
clc
push
pop
push
add
add
add
add
clc
arpl
add
out
xbegin
rorl
xor
add
xchg
xlat
scas
xor
add
inc
add
pandn
add
out
pop
cmp
dec
inc
add
in
scas
in
jp
sub
sub
ja
clc
adc
cmp
add
jl
fs
xor
je
jns
outsl
in
jecxz
lods
nop
adc
insl
xor
add
clc
in
push
mov
dec
std
or
clc
sbb
add
and
add
clc
sbb
js
dec
pop
xbegin
jp
push
add
sub
clc
in
sbb
jmp
jecxz
xor
add
je
clc
test
out
stc
mov
mov
add
gs
cmp
popa
add
jecxz
add
add
in
leave
xor
add
add
popa
add
sbb
in
shll
cmc
clc
sahf
insl
into
pushl
add
cmc
xchg
pop
movsb
clc
aad
add
inc
add
cmp
add
fmuls
rep
clc
mov
incl
clc
mov
ret
clc
fdivl
xbegin
clc
clc
or
loop
push
clc
and
ds
clc
jecxz
sub
mov
jnp
fnstcw
imull
clc
addr16
cltd
mov
shl
clc
pop
mov
add
add
clc
push
pop
clc
push
add
imul
popa
add
ljmp
clc
add
add
sub
ds
fisttpll
je
add
mov
clc
lods
ret
pushf
mov
add
in
outsb
cmp
clc
imul
add
add
push
add
test
iret
push
dec
add
mov
data16
das
jno
add
add
inc
clc
inc
clc
stos
sti
jns
clc
fdivrs
enter
or
adc
add
fdivrs
xor
add
adc
add
in
fs
jne
clc
aad
lret
clc
xlat
outsl
pop
xabort
add
mov
add
pop
repz
leave
repz
shll
add
push
xor
add
jl
xor
add
add
add
add
test
mov
mov
clc
jns
fsubl
outsl
adc
add
mov
add
jo
add
sahf
mov
add
push
add
lock
xlat
jno
add
adc
add
add
fwait
sub
into
in
mov
push
out
add
add
add
jle
sbb
fnsave
push
incl
xor
add
mov
xor
pop
mov
adc
add
in
int3
in
pop
rcr
in
push
add
inc
clc
pop
je
clc
dec
sahf
leave
mov
clc
ficoml
clc
push
and
dec
sub
add
popa
add
insb
add
add
mov
clc
mov
add
or
add
test
test
adc
add
dec
cltd
xor
add
push
in
lock
cwtl
pusha
add
mov
add
jmp
push
popl
jae
add
add
add
mov
clc
and
test
mov
add
aaa
cmp
add
push
mov
add
sub
mov
cmp
xlat
pop
stos
loopne
pusha
add
inc
clc
inc
clc
cmp
add
jb
add
cmp
fidivs
add
add
arpl
add
dec
sti
lahf
cmp
or
outsl
cmp
or
xor
iret
rcrl
cmp
xbegin
mov
dec
or
clc
inc
clc
pop
jbe
clc
xabort
add
sar
cmp
adc
add
clc
cmp
arpl
add
clc
adc
add
es
dec
sbb
clc
and
add
mov
and
add
add
mov
popf
ret
clc
pinsrw
or
clc
mov
xchg
in
push
add
ss
xor
add
lahf
pop
cmp
into
xor
add
jns
shl
clc
add
add
sub
stc
pop
test
add
mov
loopne
cmp
xbegin
add
shlb
sub
and
rsm
pop
jns
clc
rcr
dec
dec
cltd
mov
roll
clc
cmp
mov
clc
and
add
add
adc
add
gs
fcmovne
testl
data16
testb
add
movsl
clc
jbe
loop
out
add
add
ljmp
add
sbb
stos
inc
add
out
cli
in
inc
add
adc
add
lret
adc
add
jae
add
test
inc
clc
sub
clc
ficoml
add
inc
clc
xor
add
imulb
xchg
adc
add
add
getsec
push
add
fdivs
add
and
add
dec
call
mov
xor
add
push
stos
fidivs
add
push
add
adc
add
clc
out
add
fimull
movsl
clc
sub
push
into
sub
in
fsubp
clc
push
adc
add
mov
clc
add
fsts
pusha
add
lret
adc
xor
add
insb
sub
data16
stos
mov
clc
in
imul
or
clc
jnp
insl
jmp
ficoms
add
or
clc
xor
add
add
cld
icebp
dec
inc
add
sub
clc
sahf
jecxz
pop
sar
clc
in
add
add
cmp
fdivrs
iret
gs
jmp
add
add
xchg
sub
sub
clc
dec
clc
mov
rcrb
clc
jl
ret
movsl
clc
or
cmp
out
addr16
push
lahf
cmp
cmp
add
mov
push
add
ja
clc
adc
add
add
xchg
shlb
add
xor
add
fstpt
inc
add
jge
das
stc
mov
add
or
adc
add
mov
mov
inc
add
movsl
clc
icebp
xor
add
lahf
push
clc
xor
add
xbegin
jno
add
add
mov
sbb
inc
add
out
jmp
dec
xor
stos
cs
ja
adc
add
inc
clc
push
rcr
imul
clc
mov
repnz
dec
push
clc
pop
negl
clc
or
lret
add
ss
call
add
xchg
arpl
add
add
add
add
clc
jns
shrb
dec
sbb
inc
clc
cmpsl
clc
mov
lods
lret
add
add
loope
sar
add
add
add
jo
add
es
mov
es
fmulp
sub
imul
clc
test
cmp
test
sahf
push
sub
ds
add
jne
clc
inc
add
sbb
inc
add
mov
lret
mov
test
clc
clc
sarb
lahf
pop
push
add
sahf
mov
add
inc
add
add
mov
clc
lret
vxorps
clc
xchg
cmp
add
es
lret
add
notl
add
and
xchg
add
add
add
movsb
clc
mov
xor
mov
clc
movsb
clc
jle
jae
add
clc
adc
add
clc
cmp
clc
cwtl
mov
ficomps
iret
lock
add
add
aas
test
cmp
add
jecxz
or
add
add
cmc
insb
pop
push
clc
add
add
clc
in
dec
xlat
sbb
pop
adc
add
cs
enter
add
clc
mov
je
xchg
addr16
fs
cmp
popa
add
imul
sar
push
scas
test
xchg
mov
xor
add
clc
mov
cmp
clc
or
cmp
jp
loopne
fwait
push
add
add
cmp
add
mov
or
add
aad
hlt
ret
clc
push
scas
cmp
clc
vshufps
cltd
dec
addr16
das
sarl
pusha
add
push
clc
push
clc
loop
mov
insb
xor
add
add
or
clc
cwtl
lret
xabort
inc
clc
pop
popf
mov
clc
cmp
cltd
mov
xchg
mov
out
push
and
add
clc
xchg
sahf
fsubp
clc
dec
aam
sub
enter
ret
clc
test
sub
clc
jp
add
xabort
clc
mov
adc
sar
fidivl
enter
cmp
dec
insb
lcall
sbb
mov
pop
mov
add
sub
clc
jb
add
ljmp
clc
pushf
pop
clc
mov
inc
add
leave
add
push
loope
inc
add
ret
add
ret
clc
scas
lcall
pop
mov
clc
stos
jnp
xchg
cmp
shll
mov
sbb
add
stos
jb
add
jbe
cmp
mov
or
clc
scas
or
pushf
mov
adc
add
je
xchg
in
cmpsb
clc
lret
add
xchg
iret
movsb
clc
jb
add
cmp
pop
xchg
pushf
shll
clc
fcmovb
clc
mov
filds
add
push
add
dec
gs
sub
aad
clc
loope
mov
cmp
bound
add
cmp
ljmp
add
cli
add
sbb
add
into
out
out
cmpsb
clc
cmp
bound
add
mov
add
cmp
add
add
mov
dec
dec
stc
imul
push
add
xor
add
pushf
push
add
mov
ja
add
xchg
lods
or
push
xchg
std
ds
and
clc
loopne
insb
xchg
push
pop
popf
xor
add
clc
fdivl
add
push
add
repz
clc
mov
clc
push
lahf
sub
cs
call
pop
clc
jb
add
cmp
out
xor
add
cmp
clc
dec
stos
inc
add
xchg
das
movsl
clc
xbegin
aaa
negb
aaa
jae
add
add
cmp
clc
in
xlat
inc
add
int3
xchg
sub
ret
lods
clc
insl
dec
xor
add
or
pop
adc
pop
jnp
pop
jl
clc
jecxz
mov
daa
clc
cmp
loop
sbb
clc
push
add
adc
add
clc
clc
sub
add
adc
lock
clc
mov
dec
push
ja
outsl
sbb
push
sub
mov
add
pop
sti
mov
pop
mov
add
pop
hlt
add
add
add
out
push
movsl
clc
sub
push
add
xchg
or
cmc
bnd
pop
cltd
mov
xor
add
add
mov
clc
out
stos
mov
jp
int3
mov
clc
cmp
cmc
cmpsb
clc
cs
sub
sub
add
clc
int3
jg
clc
and
add
sbb
ficompl
in
sbb
mov
add
sub
out
ss
add
jecxz
xor
add
jne
add
dec
in
push
add
dec
mov
add
or
clc
cmc
test
sar
xor
aas
inc
add
mov
mov
push
add
aad
cmp
clc
xabort
cli
add
jbe
setl
nop
sub
push
scas
sti
in
xor
add
mov
imulb
sbb
jle
clc
es
sub
and
push
push
repz
clc
cmp
sbb
clc
pop
sbb
inc
add
testb
jg
nop
test
call
imul
data16
and
add
add
loop
cld
fnstcw
mov
pusha
add
cld
pop
fadds
aam
or
lods
cmp
jle
clc
add
sub
xor
add
xor
add
clc
rorl
mov
add
add
add
sub
mov
xor
add
clc
ja
cmp
inc
add
test
clc
mov
insl
xor
add
dec
div
nop
aad
outsl
js
add
sbb
add
add
cmpsl
clc
mov
sar
add
cmc
sbb
cmp
xor
add
jo
add
gs
fdivrl
decb
repz
movsb
clc
js
movsl
clc
out
test
dec
adc
add
xor
add
clc
mov
add
and
add
or
add
push
add
pusha
add
mov
add
test
add
in
xchg
mov
in
and
imul
clc
cmpsb
clc
or
fcomp
add
add
jle
jns
clc
or
add
loope
jmp
lret
je
icebp
mov
add
or
cwtl
sub
stos
mov
sbb
clc
cld
sub
dec
inc
clc
aam
clc
clc
fs
enter
mov
add
add
add
xchg
inc
add
clc
jno
add
clc
aaa
and
clc
movsl
clc
jle
add
dec
ja
hlt
jne
clc
aam
icebp
or
stos
pop
inc
clc
aam
sub
clc
test
icebp
add
add
lods
xchg
xchg
inc
clc
pushf
dec
xchg
adc
xor
add
xor
add
bound
add
filds
add
add
cmp
adc
inc
clc
mov
clc
roll
clc
inc
clc
cmp
clc
pop
cmp
movsl
clc
xor
dec
xor
add
sbb
mov
in
scas
mov
mov
clc
sbb
pop
pop
xchg
adc
popf
outsb
push
pusha
add
cltd
dec
and
test
mov
mov
pop
or
dec
push
add
cmp
loop
mov
bnd
add
mov
leave
shlb
sub
xchg
mov
clc
je
scas
xabort
clc
mov
add
enter
cwtl
clc
sub
clc
mov
sub
add
jae
add
clc
mov
jnp
clc
inc
clc
mov
mov
in
aas
loopne
lock
ret
daa
clc
add
add
out
daa
clc
inc
add
insb
pop
nop
add
add
or
inc
clc
ljmp
mov
add
pop
clc
push
add
cld
inc
clc
cmp
push
add
jae
add
clc
cmp
jno
add
dec
inc
add
sub
cmp
add
es
cmp
clc
sbb
call
clc
push
clc
inc
clc
cmp
lods
outsb
in
leave
pop
mov
push
add
stos
add
sub
mov
or
push
add
addr16
pop
lods
gs
stc
pop
shrl
inc
add
insl
sbb
add
xchg
mov
cmp
inc
add
clc
dec
add
add
cmp
mov
dec
ret
clc
imul
das
stos
test
add
sub
add
data16
jb
add
push
dec
insl
pop
cltd
jmp
sbb
cmp
clc
fcomps
and
mov
loope
or
out
push
into
xchg
out
divb
mov
add
cwtl
sbb
push
add
sub
mov
sar
pop
clc
loope
sbb
dec
or
add
add
lea
sbb
clc
pop
inc
add
jbe
clc
sub
nop
push
clc
xchg
push
dec
dec
push
add
loopne
mov
clc
mov
lcall
clc
test
inc
clc
fstps
sub
and
cmp
or
sbb
clc
nop
jl
lret
xchg
dec
lock
shl
clc
fistpll
clc
icebp
mov
pop
add
add
clc
and
add
xchg
fs
push
movsl
clc
ds
inc
add
daa
clc
push
add
push
add
loopne
jp
clc
xor
add
lahf
mov
ror
popf
or
bound
add
lock
clc
cmp
add
std
jno
add
mov
sub
clc
scas
adc
add
add
cmp
add
pop
cmp
push
faddl
add
mov
add
cli
test
mov
mov
add
clc
xchg
inc
add
pop
ficompl
jecxz
dec
aas
ret
clc
add
add
add
mov
add
add
add
push
clc
test
out
sbb
sub
add
pop
bound
add
add
pop
clc
sti
inc
clc
incl
add
clc
lcall
mov
adc
add
dec
jbe
push
add
xchg
sar
clc
push
insb
and
sbb
add
add
cmp
clc
in
pop
lock
and
add
add
push
push
add
mov
popl
movsb
clc
inc
add
pusha
add
jo
add
sar
sbb
add
add
stos
jle
clc
out
movsb
clc
scas
sub
pop
lock
mov
fists
add
stc
lret
clc
jne
int
pop
add
add
pop
add
pop
inc
add
lods
or
ss
rorl
in
lea
clc
arpl
add
outsl
add
add
add
add
add
mov
into
iret
gs
loope
and
add
add
pop
inc
clc
lea
add
jns
clc
adc
add
lcall
clc
cmp
repnz
gs
mov
clc
rorl
cmp
clc
mov
jle
clc
xchg
inc
clc
stc
and
add
mov
mov
jmp
adc
clc
sar
push
test
scas
push
jg
pop
jbe
scas
add
add
add
int
clc
cmc
adc
add
xabort
lret
xchg
sub
clc
imul
mov
xor
add
xchg
sub
clc
jns
inc
add
mov
lret
add
and
add
scas
ret
clc
mov
pusha
add
loop
fmuls
push
cld
popa
add
pushf
shrb
push
clc
insb
pop
sbb
xor
add
cs
clc
inc
add
pushf
mov
fimull
pushf
pop
jb
add
sbb
test
dec
ja
clc
jmp
add
fadds
add
dec
dec
negl
shrl
adc
add
out
adc
pop
pop
mov
add
sub
pushf
repz
in
enter
sar
mov
add
add
mov
add
inc
add
mov
clc
jbe
cmp
xchg
cld
mov
nop
and
test
cmp
add
pusha
add
data16
fst
cmp
add
sbb
dec
mov
push
call
add
xchg
jmp
clc
jp
pop
cmp
sub
and
clc
sub
xchg
out
add
sar
add
mov
xor
add
xlat
xor
clc
insb
dec
xor
add
add
out
fs
aas
aaa
inc
clc
jb
add
push
sar
mov
pop
pop
and
add
pop
cmp
add
mov
pop
dec
xchg
or
clc
or
clc
dec
push
pusha
add
fadd
clc
stos
cmp
clc
inc
clc
inc
add
je
sbb
add
and
xchg
iret
dec
pop
pop
stos
mov
clc
lahf
ret
or
jle
mov
push
add
fmuls
clc
fcmovnbe
lcall
fstl
add
xor
add
jp
in
sti
inc
clc
xor
add
aad
test
add
add
dec
clc
cmp
mov
pop
clc
outsl
add
loopne
data16
movsl
clc
pop
test
add
add
add
mov
add
sub
add
iret
cmc
es
add
add
daa
clc
mov
frstor
clc
mov
mov
add
mov
clc
call
clc
and
add
imul
push
sbb
test
clc
push
sub
xor
add
add
inc
add
sbb
sar
in
dec
pop
xor
add
mov
lods
dec
push
in
cmp
mulb
add
imul
and
xor
push
add
add
jmp
clc
fistps
dec
rolb
add
and
add
xchg
inc
clc
loope
out
xchg
jno
add
add
loopne
mov
clc
push
scas
pushf
and
add
add
mov
clc
gs
push
bound
add
add
add
push
add
xor
out
rcrl
push
data16
cmp
push
pop
std
mov
fld
clc
insl
stc
aad
cli
fnstcw
xor
add
add
or
add
add
outsb
jge
in
dec
push
add
or
add
push
dec
lcall
sub
sti
adc
add
clc
cmp
clc
mov
loope
xchg
mov
jb
add
mov
xor
add
fldenv
add
popf
aas
pop
icebp
cmp
imul
cltd
pop
cmc
fsubrl
add
add
add
hlt
sub
sar
jg
and
add
mov
clc
dec
test
int
movsl
clc
dec
cwtl
fs
stos
out
xor
add
dec
dec
push
fcomps
clc
and
add
and
add
mov
cmc
clc
xabort
sbb
sbb
aaa
cmp
in
out
ret
clc
aas
pusha
add
lods
popf
dec
je
repnz
clc
pop
clc
jnp
clc
jbe
clc
mov
or
cwtl
pop
jnp
fcmovnu
stc
insl
sar
fxch
inc
clc
jp
not
cmpsl
clc
and
add
sbb
mov
clc
xchg
addr16
bound
add
xchg
dec
lods
inc
add
aaa
cmp
clc
add
add
add
das
sbb
fsub
clc
fcoms
cmp
and
stc
and
add
clc
test
or
clc
sbb
clc
add
add
clc
testl
add
cmp
xbegin
push
add
or
sahf
insb
sub
add
lods
sahf
dec
dec
out
mov
fsave
cmp
sar
adc
add
mov
clc
dec
xor
clc
pop
es
sub
lods
rcll
clc
mov
clc
jge
ds
mov
cld
sbb
clc
daa
clc
inc
add
insb
fimull
add
aam
nop
das
cmc
mov
mov
mov
nop
bound
add
sub
add
add
gs
xchg
push
clc
daa
clc
mov
clc
xlat
fwait
aaa
pusha
add
test
insb
fimuls
add
xchg
push
add
pop
sar
add
gs
cmp
clc
pop
mov
add
add
xor
add
in
faddl
cmp
mov
clc
test
mov
xor
add
lcall
add
mov
add
pop
and
cmp
in
popa
add
fucomp
mov
mov
push
add
and
add
xor
add
cltd
jo
add
cld
adc
sbb
lods
xchg
and
add
clc
lods
jle
inc
clc
fstpl
dec
hlt
inc
clc
cli
dec
call
add
stc
aas
mov
pushf
sbb
ret
clc
push
mov
add
clc
mov
sar
dec
fdivl
clc
jb
add
mov
add
jle
clc
sub
clc
mov
sub
cmp
add
and
add
clc
cmp
and
dec
lcall
aad
jno
add
clc
inc
clc
sbb
sbb
mov
sar
clc
xlat
rorb
and
add
add
hlt
mov
add
arpl
add
add
adc
add
sub
clc
test
mov
and
add
jecxz
cmp
clc
pop
or
push
mov
aam
clc
jecxz
daa
clc
push
add
int
add
and
add
and
pop
clc
fbstp
adc
outsb
clc
mov
or
clc
pop
or
xchg
push
ror
int
clc
mov
test
mov
add
mov
gs
lods
cld
and
add
add
clc
or
xchg
jecxz
pop
cmp
clc
movsb
clc
adc
add
dec
push
add
addr16
repz
vrcpps
add
dec
sub
jmp
add
fstl
add
xor
clc
mov
xor
and
add
sbb
int
xchg
mov
cmc
mov
add
or
add
xor
clc
push
clc
jl
je
push
inc
add
or
in
ja
aad
mov
mov
push
dec
inc
clc
lock
xchg
pop
sub
clc
faddl
vorps
iret
mov
add
add
shl
clc
cmp
imul
mov
sahf
fcomi
or
mov
clc
pop
movsl
clc
jb
add
add
add
add
clc
leave
or
mov
add
add
add
adc
add
or
add
lret
add
clc
inc
add
mov
jecxz
jo
add
inc
clc
inc
add
mov
add
xchg
xchg
aaa
stos
sbb
fsubrl
sub
frstor
adc
push
add
xor
add
insb
fcoml
add
movsl
clc
push
pop
jecxz
or
fdivrs
rorb
xchg
pop
mov
clc
or
add
or
mov
add
jbe
mov
ffree
clc
clc
jns
mov
clc
lret
sub
inc
add
xor
sti
pop
sti
scas
leave
fidivrs
int3
pop
test
inc
add
xor
add
ja
clc
mov
aad
pop
mov
add
insb
add
add
in
or
clc
adc
xchg
jp
add
stc
inc
clc
lods
mov
pop
xchg
mov
imul
scas
adc
add
clc
mov
dec
pop
push
call
out
xbegin
dec
std
sbb
add
adc
add
inc
clc
stos
data16
mov
add
add
cmp
outsl
mov
push
in
xchg
cmp
cs
add
outsl
aad
pop
clc
sbb
push
jg
cmp
add
cli
in
add
add
add
nop
pop
clc
mov
cmp
clc
repnz
ss
in
dec
cmp
clc
enter
pop
or
add
inc
clc
jl
inc
add
loopne
mov
xchg
cmp
cmpsb
clc
adc
add
scas
mov
add
xchg
mov
lahf
popf
icebp
scas
es
scas
xchg
add
add
and
mov
test
adc
add
clc
or
add
add
lret
xabort
imul
push
add
call
add
cli
jne
clc
and
add
clc
inc
add
ds
and
add
std
enter
add
in
mov
add
pop
inc
add
push
add
cmp
clc
dec
push
add
mov
mov
mov
shrb
dec
jge
cmp
int
or
mov
add
mov
cltd
dec
and
add
in
cltd
mov
clc
dec
pop
fistl
rcrl
clc
add
add
clc
xor
mov
hlt
and
add
clc
or
cmp
out
xchg
mov
add
cmc
mov
pop
call
imul
xchg
fldt
push
add
add
sar
sbb
gs
mov
cmp
clc
ds
mov
push
add
data16
cmp
in
or
jo
add
add
data16
pusha
add
hlt
in
test
add
nop
mov
shll
clc
loop
and
add
dec
cmp
clc
adc
xchg
and
add
add
push
lock
xor
add
or
add
xlat
xchg
jne
pop
icebp
fiaddl
pop
or
sub
clc
movsb
clc
jbe
add
in
sarl
dec
aam
sbb
mov
int3
shrl
pop
pop
out
dec
xlat
cmp
cmp
clc
rcrl
dec
mov
clc
cmp
fsubs
fdivs
add
movsl
clc
aam
sub
test
push
test
ucomiss
pop
iret
xchg
push
jns
cmp
rorb
pop
push
add
clc
mov
sub
and
add
add
push
mov
imul
loopne
fcomps
push
mov
mov
lret
mov
fldt
mov
push
or
add
pop
clc
xor
add
xor
outsl
aas
inc
clc
or
add
clc
xor
add
add
xor
jmp
clc
dec
push
and
add
add
clc
cmp
sub
xchg
cmpsl
clc
cmp
add
pop
pop
clc
add
add
and
add
rclb
pop
imul
pop
inc
add
jo
add
sar
add
push
add
cmp
and
add
clc
cmp
clc
push
sti
mov
xchg
paddq
dec
mov
cmp
ret
add
fwait
out
hlt
cmp
fwait
cmp
out
pop
outsb
adc
xor
jmp
adc
add
jecxz
outsb
movsl
clc
aaa
and
add
test
push
xchg
fildll
add
cwtl
stos
xchg
cmpsb
clc
add
add
push
pop
cmpsl
clc
scas
jne
arpl
add
add
mov
cmp
jbe
add
cmp
add
pop
cmpsl
clc
fisttpll
add
leave
cmp
repz
add
add
add
clc
rcll
xor
add
xor
add
je
add
mov
sti
sbb
pop
cld
jae
add
add
sub
or
clc
adc
add
aam
xlat
in
sar
and
add
add
add
into
iret
mov
clc
das
adc
and
add
dec
jo
add
idiv
cwtl
push
clc
pusha
add
mov
add
sub
clc
push
fsubr
cmp
mov
call
inc
add
cmpsl
clc
or
clc
push
std
xchg
jg
jl
fiaddl
gs
and
add
dec
inc
clc
jg
lock
clc
jp
add
int
cmp
cmpsb
clc
push
popa
add
je
mov
add
mov
data16
add
add
imul
cmp
clc
xchg
test
movsb
clc
pop
jbe
clc
aas
xchg
lret
and
add
sub
add
add
lea
pushf
push
push
iret
pushf
ljmp
xchg
mov
rolb
clc
push
mov
clc
jmp
clc
jb
add
add
sub
add
push
add
push
add
clc
fsubrs
inc
add
fists
add
outsl
sub
add
add
push
or
and
add
sbb
lahf
cmpsl
clc
adc
add
lret
rcrl
inc
clc
jmp
add
cmp
int
lods
das
ja
xabort
in
or
vmovups
add
clc
cmc
lahf
or
clc
jno
add
movsb
clc
push
inc
add
adc
clc
mov
outsb
xor
add
add
inc
add
sahf
pop
and
add
add
stc
xor
and
add
add
mov
add
push
mov
add
aaa
mov
push
xchg
outsl
xchg
adc
add
cmp
inc
add
push
pop
xor
dec
gs
jmp
movsl
clc
mov
out
jmp
lods
ljmp
add
testb
mov
cmp
dec
push
dec
outsl
jnp
push
cmp
call
loopne
test
clc
aas
cmp
jge
subps
mov
loope
add
inc
add
push
clc
mov
add
xbegin
jbe
clc
jbe
mov
nop
lcall
ret
sar
ret
outsb
cmp
add
lahf
clc
jns
add
scas
inc
add
add
add
in
insl
dec
dec
ds
push
lret
inc
clc
inc
add
push
test
pop
lahf
movsl
clc
ljmp
jmp
pop
and
add
add
inc
add
xor
add
or
lock
push
push
sar
test
addr16
inc
add
push
mov
lods
adc
clc
sbb
xor
std
mov
add
icebp
notb
add
fdiv
mov
ret
clc
cmp
scas
mov
push
inc
clc
jg
cmp
add
xchg
xchg
sar
add
pop
add
inc
clc
aam
clc
cmp
aad
shr
cli
adc
add
add
add
fldcw
clc
insl
push
or
xchg
lock
add
push
add
divb
push
add
lock
sub
imul
add
lret
jo
add
popa
add
mov
add
add
sbb
rcrb
pusha
add
clc
xbegin
xchg
and
add
mov
add
sub
clc
into
mov
add
lods
and
add
imul
add
lods
sub
dec
cmp
add
xchg
and
add
pop
adc
clc
lcall
jno
add
add
inc
clc
aam
push
ret
clc
sahf
das
loopne
sbb
add
clc
ret
clc
or
jbe
clc
es
js
scas
xabort
cmpsb
clc
pop
fsubrl
clc
in
out
adc
add
add
imul
aas
out
push
cmc
dec
aaa
sub
es
mov
jl
clc
cmp
push
add
add
add
pop
push
add
movsb
clc
inc
add
sar
mov
lods
fisubrl
test
dec
fucomip
bound
add
clc
fsubrl
add
xor
je
push
call
leave
add
add
or
clc
pop
addr16
sub
clc
movsb
clc
add
add
add
add
shll
add
add
cli
add
add
out
push
clc
mov
test
dec
into
bound
add
in
clc
push
push
mov
add
aas
fistps
or
pop
scas
cmp
xchg
or
clc
scas
mov
scas
xlat
push
clc
add
cmp
clc
out
in
mov
cmp
xor
add
push
add
lods
mov
add
mov
ds
clc
je
add
sbb
cmpsb
clc
add
mov
add
mov
add
clc
inc
add
jb
add
sub
xchg
movsl
clc
lret
addr16
pop
clc
mov
sub
add
xchg
cmpsb
clc
push
xchg
call
or
inc
add
popa
add
sub
clc
add
add
add
lcall
mov
push
decb
add
add
and
add
xchg
inc
add
in
or
inc
add
mov
inc
add
pop
and
clc
cmp
add
mov
pop
mov
jg
xchg
mov
clc
pop
jb
add
add
mov
add
add
adc
call
clc
vmovlps
add
rcr
jns
enter
pushf
lea
pushf
out
cmc
xabort
clc
ds
aam
add
test
add
pop
outsl
mov
rcl
js
dec
pop
inc
add
into
jl
add
bound
add
sbb
loope
inc
clc
xchg
pusha
add
mov
sbb
cmp
dec
adc
add
loopne
ja
mov
clc
ja
fxtract
ret
clc
push
movsl
clc
js
inc
add
cmp
push
xchg
sub
sbb
clc
push
fwait
enter
clc
xabort
and
add
cmp
pop
push
add
testl
and
add
mov
fildll
dec
mov
fwait
adc
add
mov
cmpsb
clc
test
sar
clc
popa
add
cmp
add
pop
lret
lret
inc
add
lods
xor
fmull
fimuls
js
xor
inc
clc
mov
add
push
add
and
add
inc
clc
or
aas
mul
clc
mov
add
add
add
add
fnstsw
movsb
clc
popa
add
jmp
add
cmpsl
clc
shlb
cmp
movsb
clc
sub
add
clc
lock
std
jmp
add
mov
inc
add
cmpsl
clc
and
add
arpl
add
out
js
sarb
or
aad
add
sub
clc
stos
sbb
clc
inc
add
mov
xchg
push
cmp
cwtl
push
add
or
adc
dec
xor
add
loope
mov
adc
add
inc
add
in
cmp
jbe
mul
clc
add
movsb
clc
mov
jecxz
jp
out
jge
clc
fiadds
add
fucomi
popl
clc
jno
add
xchg
mov
ss
clc
iret
jbe
mov
mov
dec
pop
std
repz
add
test
jmp
sub
xchg
mov
add
xor
add
kmovw
dec
add
add
add
add
shlb
clc
xor
add
mov
mov
add
and
add
add
ljmp
inc
clc
push
clc
lea
jmp
add
push
dec
cltd
lret
gs
dec
dec
adc
add
add
xchg
sar
add
push
add
loope
out
push
add
mov
clc
cmp
clc
vunpckhps
dec
push
adc
add
or
pop
cmp
scas
jae
add
add
in
loope
sahf
dec
sahf
and
add
add
add
add
hlt
jecxz
into
jecxz
lock
inc
clc
xor
add
xbegin
inc
clc
pop
and
add
push
cmpsb
clc
aaa
cmp
dec
push
pop
push
add
clc
call
clc
loope
adc
add
fwait
aam
clc
dec
outsb
jle
cmp
mov
dec
mov
mov
add
sub
into
push
imul
aam
mov
pushf
loope
pop
push
cmp
or
clc
dec
arpl
add
lret
loop
fdivs
add
inc
clc
daa
clc
lods
sahf
jo
add
std
das
xchg
jae
add
inc
add
fiadds
add
sbb
out
sub
and
add
push
mov
clc
dec
loope
out
inc
clc
and
ss
into
lahf
xor
add
sarl
mov
add
inc
clc
add
add
or
add
add
add
daa
clc
xor
add
data16
xchg
ljmp
cs
add
mov
add
fisttpl
clc
cwtl
jmp
add
adc
add
fwait
lret
cmp
addr16
push
fs
fstpl
push
add
mov
and
add
sub
iret
pusha
add
pop
clc
mov
clc
pop
clc
add
add
loope
outsl
add
add
push
nop
out
cmp
add
cmp
add
lret
mov
cmpsl
clc
aas
dec
leave
dec
ss
fcompl
bound
add
enter
in
dec
je
add
push
hlt
and
fsubrs
inc
clc
stos
test
add
inc
clc
jnp
jmp
add
inc
add
sub
clc
adc
clc
mov
hlt
bound
add
add
clc
sbb
pop
adc
cs
pop
sub
xchg
mov
lret
pop
clc
adc
clc
push
arpl
add
mov
adc
add
clc
rorb
xchg
test
ljmp
add
clc
sbb
clc
jne
or
stos
pop
fisubs
add
add
ljmp
mov
pop
mov
lret
mulb
add
dec
sub
cmp
xchg
pop
xchg
push
add
sbb
sar
clc
sub
clc
push
dec
cwtl
bound
add
push
jns
clc
jnp
pop
sbb
add
sbb
sbb
fstps
std
xchg
mov
and
add
clc
jne
clc
sub
sub
xchg
cmp
xchg
dec
lea
int
add
fimull
aad
push
dec
mov
clc
adc
add
test
insb
xabort
add
aam
xbegin
mov
clc
or
xor
inc
clc
xchg
cmp
mov
clc
add
add
clc
cmc
cmp
add
sbb
and
add
clc
xor
add
sub
add
add
sar
test
lcall
cmp
into
pop
clc
data16
in
adc
add
leave
mov
add
or
add
clc
and
add
clc
dec
xchg
cmp
sahf
adc
add
add
pop
xchg
aad
clc
mov
push
add
clc
jnp
sub
lahf
scas
outsl
cmpsl
clc
clc
mov
clc
lahf
int3
add
add
stos
mov
lods
mov
cmp
pop
dec
or
add
cmpsb
clc
mov
jbe
add
fs
pushf
or
xchg
mov
fcmove
mov
jns
add
add
popa
add
scas
decb
mov
dec
jge
push
stos
sbb
inc
clc
repz
cwtl
jne
add
sti
cmc
push
clc
and
add
adc
add
push
aaa
call
clc
add
add
or
repnz
or
push
cmp
pop
jns
cltd
jnp
pop
out
xabort
clc
inc
add
cmp
add
aad
sub
cmp
push
clc
fsub
clc
data16
jb
add
ficomps
in
xbegin
movsb
clc
rcrb
clc
imul
cmpsb
clc
cmp
adc
add
adc
jg
aad
loop
sub
add
test
inc
clc
nop
pop
in
push
clc
dec
jecxz
sbb
add
call
clc
xabort
leave
jle
adc
add
jo
add
inc
clc
or
jle
dec
xchg
mov
fldt
clc
sub
push
xabort
add
adc
add
jno
add
clc
jg
clc
fwait
pop
or
add
add
call
xchg
popl
add
nop
mov
jp
push
inc
clc
js
mov
jo
add
ficoms
add
clc
in
lods
bound
add
clc
dec
push
add
mull
add
clc
xchg
mov
add
clc
xchg
cmp
mov
push
clc
jbe
xor
add
es
adc
add
in
add
add
push
outsb
pop
clc
arpl
add
clc
push
add
mov
clc
shl
mov
clc
lahf
jno
add
call
scas
add
add
clc
xchg
jl
clc
mov
adc
add
clc
mov
aas
xabort
jb
add
dec
sti
push
adc
add
mov
xchg
inc
add
imul
add
pop
jno
add
iret
clc
negl
jbe
in
pop
clc
lret
mov
jecxz
pushf
int3
arpl
add
bound
add
xbegin
rcrl
repz
enter
jmp
loope
ljmp
or
es
pop
fldenv
add
sub
sub
add
push
mov
clc
pop
nop
and
gs
and
add
add
lret
dec
push
add
mov
xor
cmp
clc
push
in
lea
add
inc
add
mov
add
cs
clc
lret
jg
rorl
sarl
push
add
dec
adc
je
add
xbegin
incb
clc
jb
add
add
call
push
clc
cmp
mov
jl
add
push
pop
fs
jge
dec
hlt
mov
push
add
push
xchg
gs
add
outsb
add
add
xchg
xbegin
mov
add
pop
adc
add
cli
rclb
add
add
in
clc
or
shlb
add
jecxz
dec
js
clc
mov
clc
fcoms
ja
add
ret
clc
dec
sub
clc
and
add
mov
jb
add
and
das
pusha
add
cmpsl
clc
ret
dec
fs
sub
adc
add
mov
push
add
push
clc
sub
jne
sbb
out
pop
push
into
pusha
add
mov
lods
popa
add
pop
pandn
fnsave
add
aas
xchg
movsl
clc
jg
stos
xchg
push
clc
dec
mov
add
or
mov
dec
adc
add
gs
mov
jmp
sbb
mov
xor
add
sbb
fdivl
add
repnz
jno
add
sub
xchg
stos
cmp
adc
out
adc
add
add
ja
dec
xlat
add
add
add
add
clc
cmp
cmp
clc
xchg
mov
inc
add
dec
jnp
inc
add
sbb
sar
add
stos
pop
fisubl
add
clc
cli
outsl
mov
jo
add
in
imul
scas
pop
pushf
movntq
out
and
add
add
call
popf
mov
xchg
dec
jae
add
mov
fs
insl
sbb
sub
push
sub
jmp
cltd
out
into
cmp
clc
jno
add
fistpl
push
jge
adc
sub
cmpsb
clc
cmp
inc
add
pavgw
scas
test
clc
push
add
mov
cmp
pop
popa
add
loope
je
test
cmpsb
clc
ja
add
push
clc
inc
add
mov
pop
clc
loope
enter
sbb
add
sbb
clc
dec
xchg
mov
out
xchg
fistl
add
add
outsl
popf
fnstcw
add
cli
inc
clc
pushf
lahf
xchg
push
add
push
and
sbb
push
jbe
jl
clc
inc
clc
mov
xchg
xor
add
jne
clc
test
xor
jl
add
test
add
adc
add
fnsave
clc
loope
out
daa
clc
xabort
iret
call
clc
lcall
clc
loop
into
pop
pop
cmp
add
dec
aaa
inc
add
insl
pop
pop
xor
add
rcr
xbegin
push
outsb
into
sbb
clc
inc
clc
pop
aas
bound
add
popl
mov
ret
clc
lahf
sub
outsb
pop
in
cmp
add
insl
mov
and
add
add
jle
push
add
inc
clc
popa
add
addr16
sar
push
clc
jns
stos
jae
add
sub
add
jg
clc
ss
jg
clc
pop
push
es
cmp
xor
add
sbb
mov
jne
sub
cmp
pop
adc
add
dec
add
test
mov
mov
ss
fstpl
fidivrs
cmp
clc
xor
leave
cmp
insl
push
clc
jne
add
mov
jb
add
clc
cmpsl
clc
repnz
add
stos
ja
sahf
fsubrl
sbb
add
sub
clc
mov
clc
fldt
clc
ret
jno
add
clc
or
fmull
out
xchg
xor
icebp
leave
or
push
add
adc
add
clc
push
and
add
add
ret
sbb
add
in
push
push
add
mov
mov
clc
out
push
add
dec
jge
arpl
add
jge
clc
jnp
push
je
clc
cmp
aad
lock
add
mov
xchg
pop
cmpsl
clc
inc
add
mov
and
add
clc
mov
push
sar
sbb
clc
pushf
lods
movsl
clc
cmp
jb
add
jae
add
add
cmpsb
clc
mov
add
add
clc
cmp
pop
or
in
push
clc
inc
add
xor
clc
scas
fldl
aas
xor
add
mov
stos
jp
adc
add
inc
clc
mov
lahf
push
faddl
lcall
leave
inc
clc
imul
clc
xor
add
idivl
add
lods
and
add
mov
in
jae
add
add
test
push
mov
icebp
jbe
bound
add
clc
out
std
fldt
lods
jns
and
add
cs
js
inc
add
mov
or
clc
pop
test
or
lret
clc
xchg
stc
repnz
add
cmp
mov
add
sbb
sub
je
pop
add
xor
mov
addr16
aam
add
add
jns
clc
mov
ficoms
pop
xor
movsl
clc
adc
fidivrl
jne
sbb
mov
push
movsl
clc
sar
jge
add
in
sbb
cmp
fdivrs
clc
mov
je
mov
add
add
add
xchg
mov
adc
add
add
pop
dec
sar
clc
cmc
or
xchg
cld
ds
add
pop
in
out
cmp
inc
clc
inc
clc
pop
clc
out
aaa
mov
mov
add
cmp
inc
add
rolb
add
je
arpl
add
adc
add
mov
cld
mov
mov
mov
pop
test
cmc
ficoms
add
jmp
clc
xor
add
add
add
xchg
sbb
stc
call
int3
inc
add
ljmp
adc
inc
add
pop
loopne
cmp
push
add
mov
xor
add
add
movsl
clc
sbb
sti
xchg
dec
cwtl
shrb
xor
clc
in
sub
clc
in
cmpsl
clc
cld
call
cmc
dec
daa
clc
in
enter
push
mov
mov
add
test
sbb
jne
clc
scas
aad
pop
push
add
push
ret
lock
clc
arpl
add
clc
cmp
cs
dec
and
add
std
jno
add
jecxz
push
cmp
test
test
jae
add
out
jle
cmp
add
cmpsl
clc
jge
clc
popf
jmp
and
push
cmp
cmp
clc
jnp
out
lods
lahf
cmp
clc
or
xchg
fldenv
icebp
pop
inc
add
inc
add
mov
pop
pusha
add
pusha
add
mov
add
pushl
add
jns
fdivrl
clc
in
stc
inc
clc
push
add
inc
clc
pushf
push
pop
or
clc
cwtl
add
add
inc
add
lret
sbb
cmp
clc
mov
inc
clc
jne
xor
add
adc
add
add
call
into
ret
push
add
scas
sub
clc
in
into
cmc
cmp
clc
mov
add
add
clc
jecxz
and
pop
outsl
test
clc
ret
clc
xchg
cltd
call
and
add
clc
push
clc
jae
add
mov
add
outsb
jmp
clc
xor
add
jno
add
flds
dec
jae
add
es
jno
add
fs
push
or
dec
cld
jp
sbb
add
pop
ljmp
clc
rcr
pop
mov
add
js
inc
add
movsb
clc
mov
clc
cmp
add
push
push
pop
dec
loope
gs
xlat
mov
jne
add
and
add
clc
lret
pop
mov
clc
mov
push
call
sbb
scas
pop
jmp
rcrl
push
repnz
out
push
jae
add
cmp
inc
clc
repnz
test
lahf
movsl
clc
sahf
push
dec
ret
clc
ficomps
js
clc
cmp
adc
add
cs
add
jle
xor
clc
pop
xchg
mov
clc
cmp
mov
xchg
pop
clc
jle
adc
push
adc
add
cmpsl
clc
push
add
mov
add
inc
add
std
adc
add
add
add
loope
mov
je
rcr
cmp
ljmp
cmc
ret
clc
jo
add
addr16
sbb
clc
lea
add
sbb
add
dec
out
sub
rcrb
xchg
and
clc
sub
addr16
jle
add
or
clc
scas
or
pop
dec
mov
jge
clc
dec
and
dec
or
movsl
clc
cmp
cmpsl
clc
divb
add
cmp
cmp
clc
pop
lods
test
jbe
clc
dec
inc
clc
fsts
leave
add
mov
clc
stos
sub
and
cmp
je
imul
rcrl
fsubrp
aad
xbegin
add
fisttpll
inc
add
adc
add
and
add
add
ja
cmp
mov
lret
inc
clc
int
pop
clc
sub
add
add
stos
xor
sbb
clc
call
mov
jg
lret
mov
add
clc
or
push
add
into
addr16
jecxz
mov
cmp
xchg
movsl
clc
mov
jae
add
in
incb
sarb
and
fildl
clc
adc
add
pop
dec
jmp
mov
add
xabort
sub
add
pusha
add
icebp
test
inc
clc
cmpsb
clc
mov
mov
in
jne
sbb
clc
imul
add
fsubr
dec
arpl
add
fcompp
ret
pop
cmp
add
arpl
add
clc
cli
jle
aam
clc
adc
add
and
add
clc
sar
xchg
adc
aad
add
ret
dec
das
pop
clc
addr16
insl
sar
sar
xchg
jmp
inc
add
clc
test
xor
add
pop
notl
add
lahf
cmp
clc
fidivrl
sti
jmp
imulb
rolb
stos
push
add
call
clc
push
cmp
clc
loopne
cmpsb
clc
sbb
out
test
fadd
clc
pop
dec
mov
pop
push
xchg
jbe
add
inc
add
sbb
jns
clc
cmp
clc
cmp
clc
in
sub
xor
add
or
ds
dec
mov
mov
sub
repnz
es
lods
cmp
clc
push
cmp
imul
lret
dec
sbb
add
xor
add
fstl
add
push
clc
divb
jns
clc
aad
clc
lods
inc
add
dec
lcall
in
or
dec
jnp
inc
add
cmp
ret
repz
out
pop
movsb
clc
jecxz
pop
jo
add
clc
in
add
add
add
call
add
clc
in
inc
add
and
add
clc
rcll
add
clc
xchg
add
add
push
add
into
cmc
gs
cld
sbb
clc
lea
sets
clc
out
mov
pop
shll
jnp
lcall
add
hlt
repnz
lahf
mov
insl
outsb
jnp
lock
add
add
and
add
adc
add
sbb
das
jno,pt
add
mov
hlt
std
data16
test
loopne
xor
in
and
add
clc
dec
aaa
xchg
or
cmp
dec
icebp
shl
loopne
inc
add
push
add
mov
clc
test
add
jecxz
fmul
inc
clc
lods
lcall
clc
mov
jo
add
lret
fimull
jb
add
add
inc
add
jg
cmp
clc
xor
fwait
push
xchg
aam
clc
outsb
xabort
cmc
testb
add
adc
add
add
fmul
sahf
movsb
clc
das
cmp
add
sub
clc
cmc
cwtl
cmp
jbe
clc
pop
cmpsb
clc
push
jnp
lods
lcall
xor
add
xbegin
sbb
cltd
xchg
jle
arpl
add
add
add
adc
add
clc
add
add
push
test
sub
outsb
ret
clc
push
ret
jns
inc
add
out
movsb
clc
cmp
mov
xchg
xor
add
and
add
push
mov
clc
sbb
clc
mov
movsb
clc
xchg
push
add
cmp
pop
jae
add
clc
sar
lret
frstor
jb
add
add
std
lahf
aas
cmp
cmp
pop
call
add
mov
clc
dec
lods
nop
filds
pop
stos
mov
clc
fimuls
repz
aad
dec
sub
loope
cmp
xchg
stos
clc
inc
add
xor
add
mov
sahf
add
clc
cmp
mov
adc
push
add
ds
add
cs
clc
dec
leave
cvtps2pd
mov
clc
fisubrs
clc
insb
popf
cmp
jmp
ss
aad
jno
add
mov
add
clc
sahf
add
aam
clc
iret
call
add
hlt
cmpsl
clc
sub
clc
bound
add
arpl
add
xchg
sbb
clc
inc
add
ljmp
clc
scas
xor
add
lret
in
fstps
jbe
cmp
add
push
add
cwtl
pop
mov
or
push
sahf
icebp
into
fs
insb
pop
or
clc
hlt
cmc
inc
clc
insb
or
clc
insl
out
arpl
add
add
push
clc
lahf
xchg
aaa
mov
jae
add
adc
add
adc
clc
ds
in
pushf
adc
add
xor
mov
add
clc
hlt
add
add
lods
mov
sub
clc
jo
add
add
and
push
add
adc
add
clc
loopne
ljmp
clc
loope
push
clc
push
int3
adc
add
cmp
shlb
add
clc
popf
sar
jecxz
enter
xchg
insb
sub
dec
pop
pop
add
add
inc
add
add
add
mov
pop
inc
add
inc
clc
inc
clc
incl
cmp
inc
clc
aaa
xbegin
into
std
mov
add
sbb
stos
jle
inc
add
jl
cmpsl
clc
sbb
in
sub
add
popa
add
fisubl
das
iret
in
push
add
cmp
clc
lahf
add
add
lods
adc
add
inc
clc
outsb
push
add
inc
add
xor
add
int3
aaa
inc
clc
ja
clc
not
arpl
add
sbb
add
add
lcall
pop
int
mov
mov
clc
inc
add
dec
pop
push
clc
outsl
add
pop
mov
clc
mov
clc
test
add
mov
add
cmp
xlat
mov
add
jae
add
enter
loop
and
add
test
sbb
das
push
add
cli
mov
push
add
mov
clc
dec
xchg
mov
sub
add
adc
add
popa
add
loop
xbegin
clc
push
clc
in
adc
add
ret
jp
push
push
mov
clc
mov
ss
adc
add
clc
mov
add
mov
clc
inc
clc
mov
sar
clc
xor
mov
push
xor
add
pop
jge
imull
jns
clc
out
add
add
insb
dec
lock
xabort
cmpsb
clc
cltd
icebp
mov
pop
mov
mov
idivl
out
imul
inc
add
push
add
or
push
add
shlb
add
jge
arpl
add
xor
add
push
add
outsl
add
cmp
clc
sub
and
add
sub
mov
xrelease
shll
mov
clc
mov
xchg
lock
clc
cs
dec
push
add
dec
out
int
and
add
add
cltd
mov
mov
clc
lods
xchg
leave
and
push
clc
cmp
add
sub
cmp
add
mov
sbb
inc
add
inc
add
loope
int3
punpckhdq
clc
mov
inc
clc
insb
loop
mov
add
add
dec
pop
fcomp
xor
add
pop
ret
cmc
rorl
movsl
clc
repnz
or
aaa
iret
xchg
cmp
scas
and
add
clc
jne
dec
and
sbb
mov
inc
clc
sbb
int3
repz
add
popa
add
ss
xchg
cmp
add
add
jns
clc
mov
cwtl
fcompl
popa
add
mov
add
adc
add
clc
and
sahf
data16
push
xabort
clc
sub
add
xchg
pop
pushf
pop
clc
adc
add
clc
cmpsb
clc
xor
add
add
in
mov
clc
sub
fcomip
repz
add
and
cld
ret
xbegin
clc
add
add
es
js
ja
cmc
dec
or
outsl
stos
jmp
clc
mov
add
into
xor
fistps
sub
and
add
add
scas
pop
sub
call
ds
inc
clc
scas
mov
xbegin
and
add
ret
clc
jbe
clc
jae
add
sbb
sbb
sub
add
and
add
add
clc
std
popf
gs
icebp
cmp
mov
stos
out
ljmp
sar
clc
sbb
add
pop
dec
add
add
clc
adc
add
add
mov
add
add
add
clc
inc
clc
outsb
jns
fidivs
add
mov
into
repz
shrb
out
cmp
clc
inc
clc
sti
int
push
jmp
clc
jp
lea
push
dec
pop
sbb
xchg
inc
add
jne
clc
mov
xchg
adc
push
add
cmp
sarb
daa
clc
ret
cmp
mov
sbb
stos
ss
jne
mov
add
clc
pop
icebp
sbb
mov
or
add
pop
or
add
inc
add
sar
clc
arpl
add
clc
sbb
popa
add
pop
ss
xchg
aas
inc
add
out
push
clc
pop
cmp
add
or
clc
inc
clc
ss
lods
add
add
bnd
cltd
fiadds
std
xchg
pop
jp
add
xchg
jecxz
jmp
jmp
stos
jmp
sub
dec
xchg
ret
clc
dec
cmp
out
xchg
mov
lcall
aam
push
flds
add
mov
xabort
add
aad
pop
repz
add
add
mov
adc
add
clc
push
add
cmp
loope
mov
lahf
addr16
push
cmp
clc
gs
jp
jns
add
jnp
ret
cmp
in
movsl
clc
lfs
clc
sbb
sub
xor
add
mov
or
cmpsl
clc
out
push
add
inc
clc
insl
hlt
ja
xor
dec
ficoms
add
clc
cmp
insl
cld
jne
or
mov
cli
and
add
mov
add
pushf
adc
add
roll
add
add
xchg
cmp
aaa
test
ret
clc
loop
sub
jb
add
add
stos
push
add
and
add
sahf
cmp
xchg
inc
add
mov
pop
xor
xlat
jo
add
ja
clc
xor
cmpsb
clc
out
sub
clc
cmp
or
jns
jecxz
xor
add
outsl
inc
add
shll
add
dec
sar
jp
clc
cltd
xor
add
add
cmp
jmp
jno
add
lret
popa
add
lahf
pop
imul
sbb
xchg
fsub
clc
out
js
and
add
push
pop
cmp
cmp
stos
xor
clc
mov
clc
mov
add
add
xor
add
popf
movsl
clc
mov
lret
or
outsb
mov
add
popf
outsb
lret
push
add
add
jle
clc
push
aaa
push
and
add
imul
and
cmpsb
clc
xchg
xor
add
add
cmp
cmpsb
clc
icebp
ret
clc
push
insl
push
loope
or
clc
loopne
imul
clc
mov
or
cmp
or
add
cld
mov
add
cltd
test
test
cmpsb
clc
into
xor
add
add
add
push
clc
mov
push
xbegin
call
imul
add
add
addr16
imul
clc
hlt
fisubl
add
movsl
clc
xor
add
add
push
inc
add
in
add
add
and
push
jno
add
mov
add
xchg
or
daa
clc
dec
mov
cmp
jmp
cwtl
push
add
add
xabort
clc
sbb
in
ret
clc
mov
add
clc
in
rol
clc
push
mov
out
lods
insl
aas
lahf
xor
add
sbb
popa
add
mov
mov
enter
add
in
fisubl
add
stos
incl
add
add
dec
dec
mov
pop
sbb
pop
lcall
js
inc
add
dec
dec
sub
add
out
scas
mov
push
add
loopne
das
cmpsb
clc
clc
stos
mov
clc
fcompl
sbb
push
add
xchg
sti
mov
jp
pushf
dec
dec
in
lea
or
inc
add
mov
clc
jbe
mov
adc
add
jne
add
mov
test
and
add
hlt
jo
add
add
lock
xor
fcompl
adc
add
lock
test
lahf
fsubp
clc
mov
jge
clc
push
add
xabort
fwait
bound
add
inc
clc
gs
popa
add
dec
cltd
int3
mov
add
enter
addr16
jae
add
push
sub
jns
sub
clc
push
add
dec
push
add
adc
clc
mov
add
pop
pop
jae
add
cmp
fsubrs
add
clc
inc
clc
cwtl
jge
and
add
xor
add
mov
add
mov
pextrw
and
add
add
inc
clc
sahf
movsl
clc
test
sarb
divl
clc
mov
add
shrl
clc
ja
dec
inc
clc
push
push
dec
mov
clc
or
xchg
mov
add
mov
mov
sbb
pop
mov
add
cmpsb
clc
add
add
add
repnz
gs
cld
cmp
add
fiadds
add
jne
xor
add
addr16
add
add
clc
cmovb
add
clc
fstps
data16
out
cmp
mov
lock
clc
inc
add
pop
mov
add
clc
xchg
jb
add
gs
dec
popf
leave
jo
add
add
fiadds
add
sub
lods
mov
arpl
add
clc
daa
clc
mov
xchg
and
add
lret
cwtl
jno
add
movsl
clc
cmp
inc
clc
test
in
daa
clc
cld
mov
dec
std
and
add
push
add
cmp
test
clc
add
inc
clc
enter
or
clc
push
cmpsl
clc
iret
fst
repz
clc
xchg
xchg
pop
jle
add
fadd
clc
or
clc
push
clc
int3
sbb
jle
leave
leave
mov
clc
out
ficompl
iret
aaa
clc
mov
mov
mov
loopne
es
lock
clc
add
xchg
lahf
stos
out
mov
std
shll
push
push
ss
or
clc
test
pop
cmp
ja
add
and
add
scas
dec
shrl
popf
test
add
add
fsubs
dec
loope
pop
jnp
adc
add
jbe
clc
int3
stc
push
xchg
jnp
pop
push
or
add
shrb
mov
aad
jmp
pop
pop
clc
test
cmp
add
aam
mov
clc
cli
and
jg
cmp
add
cmp
das
data16
mov
pop
sar
icebp
inc
clc
test
add
add
idivb
or
add
inc
add
out
imul
lods
dec
stos
addr16
lret
pop
scas
dec
xor
lods
lahf
ja
call
or
out
sub
add
mov
add
or
add
call
add
icebp
bound
add
add
std
repnz
sahf
je
test
xchg
xor
jno
add
add
add
add
mov
mov
cmp
dec
mov
clc
add
mov
stc
test
clc
rorb
xchg
jns
and
add
adc
add
dec
cli
mov
sbb
add
cwtl
cmp
sar
clc
int3
inc
add
rcrl
add
aam
xlat
add
arpl
add
push
add
push
sar
movsl
clc
xor
add
add
aas
jg
clc
shlb
add
cltd
call
scas
xlat
or
sar
popf
push
pop
cmp
clc
fsubr
or
cmpsl
clc
jmp
in
pop
icebp
sbb
jmp
cmpsb
clc
lret
add
dec
inc
clc
cmp
sbb
cmp
ds
or
loop
cmp
in
mov
add
add
inc
clc
xor
dec
cmp
add
xchg
adc
add
mov
mov
mov
mov
push
add
fsubs
clc
fdivl
sub
push
push
out
mov
jg
and
add
clc
push
pop
fidivrs
pop
pusha
add
ljmp
and
fildl
mov
adc
add
jg
fwait
test
lcall
imul
clc
pop
rcrl
xchg
sub
pop
arpl
add
clc
mov
cmp
add
add
cmpsb
clc
into
lcall
sub
add
pop
xor
add
lret
xchg
out
das
or
clc
nop
mov
ja
dec
xchg
adc
add
pop
shll
add
jno
add
mov
add
push
add
ret
clc
aas
fstpt
jmp
clc
int3
jge
scas
jl
sbb
add
jecxz
cmpsl
clc
test
inc
clc
jle
lcall
lret
mov
clc
mov
add
lcall
xchg
or
clc
xlat
lods
xchg
jb,pt
add
iret
jg
stc
fidivrs
aaa
jmp
clc
push
in
ja
sahf
adc
add
inc
clc
xabort
add
inc
add
maskmovq
mull
cmp
clc
fsubl
or
inc
clc
ret
clc
fisttps
xchg
push
add
xchg
jnp
imul
aad
outsb
sub
xchg
jb
add
add
add
cmp
clc
cmp
das
ljmp
dec
inc
clc
cmpsl
clc
mov
add
add
mov
mov
cmp
add
clc
in
pop
ja
shrl
std
out
arpl
add
add
add
test
jne
mov
fcoml
clc
cmp
mov
fstp
gs
sbb
mov
clc
xchg
ljmp
clc
stos
call
das
jp
add
mov
add
add
mov
add
and
or
or
and
add
lahf
push
add
inc
add
pushf
lret
mov
clc
and
add
mov
arpl
add
xbegin
leave
mov
add
bound
add
sbb
movsl
clc
cltd
bnd
add
or
add
dec
mov
add
icebp
je
clc
mov
clc
xchg
xchg
ret
clc
jle
inc
clc
and
add
add
in
aas
mov
clc
insl
xchg
test
clc
mov
mov
mov
add
pop
repz
daa
clc
cmpsb
clc
insb
sbb
inc
clc
mov
add
clc
inc
add
aad
clc
imul
adc
add
cmp
add
std
mov
popa
add
jg
negl
push
es
out
dec
mov
daa
clc
pop
adc
jge
clc
sbb
add
leave
int3
lret
add
add
clc
cmpsl
clc
mov
shlb
xor
into
mov
push
clc
cmp
clc
fbstp
leave
push
add
adc
add
add
add
mov
cmp
clc
out
push
push
xchg
mov
arpl
add
icebp
xchg
es
mov
lret
mov
add
and
add
lret
dec
loop
jp
stc
mov
add
add
add
mov
data16
dec
fiadds
daa
clc
cli
jle
fmuls
loopne
repz
add
clc
mov
xor
add
test
cwtl
ror
xor
add
add
sar
sbb
xor
sub
add
adc
add
add
pop
in
test
cmpsl
clc
mov
and
add
jo
add
leave
imul
cmp
pop
add
add
clc
xchg
xor
add
insl
pop
clc
test
sub
inc
add
xor
add
add
pop
mov
clc
jo
add
repnz
rorb
sar
lret
mov
pop
or
cmp
or
mov
add
ret
clc
popf
mov
add
push
icebp
stc
push
inc
add
cld
inc
clc
mov
clc
mov
clc
sub
lea
cmp
sub
mov
add
and
dec
inc
clc
push
add
int
movsb
clc
sub
int
add
lods
rorl
cmp
clc
pop
jecxz
pop
popl
test
sub
bound
add
clc
cmp
add
and
add
add
push
add
dec
fwait
lock
add
in
cmp
arpl
add
jb
add
add
xor
add
jno
add
add
loopne
nop
outsl
pop
mov
clc
fwait
mov
clc
lret
clc
scas
cmp
clc
and
xchg
inc
add
ja
and
add
fstpt
test
sub
cmp
clc
push
cmp
clc
inc
add
ds
xchg
sub
clc
ljmp
clc
data16
scas
sti
xchg
dec
pop
push
push
and
cwtl
cli
mov
pop
push
lahf
dec
call
ret
clc
xor
add
clc
movsl
clc
push
add
xchg
pop
cmp
clc
test
mov
xchg
das
sub
clc
mov
mov
xchg
jns
clc
xchg
jae
add
add
dec
pop
jg
stos
push
clc
mov
cmp
or
clc
push
clc
pop
jge
mov
add
jb
add
clc
aad
enter
clc
sar
clc
push
and
mov
cli
stos
data16
fwait
loopne
mov
push
and
sar
rcrl
add
test
add
leave
hlt
lock
clc
jbe
fcos
sbb
xor
add
clc
mov
add
clc
cli
mov
clc
maskmovq
negl
add
pop
inc
add
int3
sar
cmpsl
clc
dec
adc
add
add
int3
adc
add
add
push
clc
test
add
ja
pushf
lea
add
xchg
icebp
ret
clc
filds
add
popf
mov
add
loopne
addr16
mov
add
clc
adc
add
popl
add
add
daa
clc
mov
jbe
push
add
shl
clc
es
data16
sub
fwait
adc
add
mov
clc
sahf
mov
clc
out
sar
int
mov
push
add
rclb
mov
xchg
scas
xchg
push
pop
adc
add
adc
add
xlat
adc
xchg
lock
out
dec
pop
jge
add
push
mov
sub
mov
add
imul
add
dec
jno
add
sbb
pusha
add
mov
clc
pop
clc
negb
mov
add
adc
add
and
add
inc
add
bound
add
cmp
clc
cmp
pop
inc
add
ss
and
add
pop
clc
mov
mov
jbe
jbe
cmpsb
clc
scas
push
addr16
xabort
movsl
clc
in
pop
out
pop
add
add
add
fnop
negl
lahf
mov
clc
cmp
cmp
lcall
clc
jp
clc
insb
sbb
into
sar
outsb
push
add
adc
cmp
sbb
loop
outsb
dec
mov
clc
jecxz
cmpsb
clc
loope
jae
add
clc
xbegin
clc
inc
add
adc
clc
push
cld
push
out
dec
push
adc
add
sbb
push
sahf
test
cmp
mov
add
and
add
add
or
and
add
fimuls
mov
inc
clc
mov
add
mov
push
add
cmp
pop
push
cs
pop
fsts
loop
addr16
cmp
inc
clc
arpl
add
add
cld
jns
pop
clc
mov
clc
jl
fisubrs
xchg
adc
add
xchg
arpl
add
fistpl
pop
clc
cmpsl
clc
iret
fs
scas
add
add
clc
mov
ss
add
int3
xchg
dec
xchg
pop
xchg
jmp
add
push
xor
add
hlt
and
add
add
xchg
lret
xchg
mov
jecxz
pushl
lret
clc
mov
stc
aas
dec
fists
add
addr16
push
fnstsw
jmp
loope
xchg
test
add
mov
jl
mov
clc
push
add
mov
dec
clc
xchg
es
daa
clc
fcomps
sub
je
data16
jp
add
cmp
sub
add
ret
repnz
clc
pop
sti
dec
aas
cmp
push
cmpsb
clc
and
add
jmp
clc
cmp
out
pop
daa
clc
adc
add
lret
push
add
insb
dec
in
cmc
dec
add
xor
mov
clc
pop
jb
add
clc
mov
or
mov
mov
gs
pop
or
pop
lods
pop
pop
and
add
mov
mov
clc
insl
add
add
add
int3
cmp
add
lock
mov
push
push
add
jmp
inc
clc
xchg
cmp
cmp
sahf
rclb
insl
into
xchg
dec
sub
je
clc
sti
addr16
pop
lahf
repz
and
dec
or
int3
sti
sti
xor
adc
jge
idivl
mov
push
clc
or
add
lods
aad
lods
dec
push
xbegin
ss
pop
inc
add
pop
xchg
xchg
imul
push
loopne
lret
hlt
das
clc
jmp
mov
adc
add
shrb
clc
inc
add
insb
clc
int
add
cmp
dec
test
mov
add
aaa
xchg
xbegin
clc
xchg
mov
add
iret
xchg
ja
xchg
pushf
mov
jb
add
jp
pxor
arpl
add
clc
in
mov
add
divb
clc
jne
inc
clc
mov
push
add
dec
add
add
inc
add
nop
mov
std
push
add
add
add
lods
lret
fstp
in
cmp
loope
setb
add
ret
clc
movsb
clc
xchg
out
pop
clc
int3
and
add
add
clc
scas
sbb
repz
je
std
mov
in
push
test
add
scas
pusha
add
aaa
cs
push
clc
cmp
clc
loop
xchg
cmp
clc
cmp
inc
add
push
xor
xchg
jnp
add
push
enter
shl
clc
mov
clc
outsb
sbb
data16
push
add
add
clc
sbb
jnp
clc
mov
and
add
sbb
push
testl
pop
clc
sub
out
and
add
add
fistpll
loopne
push
sub
stos
xchg
inc
add
fwait
and
add
pop
cmp
push
clc
push
add
push
mov
add
dec
mov
cmc
mov
push
add
and
pop
and
test
mov
cmp
add
mov
clc
ss
add
notl
xchg
xchg
lret
xor
add
aaa
ret
pusha
add
add
add
fiadds
add
add
sub
clc
jle
sti
mov
add
add
sub
add
dec
pusha
add
xchg
jno
add
clc
test
int
mov
in
out
mov
clc
fstps
xchg
shrl
aad
xor
add
sbb
mov
clc
jno
add
add
test
jbe
cmp
pop
lret
add
or
mov
add
shl
test
hlt
or
fcompl
fistpl
add
mov
clc
xor
push
cmp
adc
add
mov
aad
popa
add
lret
cmpsl
clc
and
add
fisubs
clc
cmp
lahf
div
repz
jp
xbegin
cmp
cmpsb
clc
dec
sar
sbb
push
in
rcll
loope
clc
adc
add
jb
add
clc
xchg
sbb
dec
dec
loop
sub
add
inc
clc
cmp
fwait
xbegin
add
add
cmp
clc
xor
add
pop
insl
cmp
add
mov
clc
leave
xor
add
outsb
sbb
add
pusha
add
lahf
mov
insb
test
add
add
add
jbe
dec
xchg
sar
pop
sbb
add
or
clc
mov
jg
sbb
add
aad
push
shl
fbld
add
sub
cmp
pop
lods
sub
cmp
add
pop
xor
xor
daa
clc
xbegin
add
dec
ds
cmpsb
clc
push
add
pop
push
add
cmp
push
lret
call
js
clc
inc
clc
xbegin
clc
cmp
cmc
mov
popf
cmp
mov
xchg
fcomi
popf
mov
lea
xchg
mov
outsb
mov
add
movsb
clc
aaa
out
mov
pmaddwd
add
or
pushf
mov
add
lahf
stos
es
and
add
add
addr16
and
add
jnp
add
in
into
mov
inc
add
pop
jp
clc
faddl
nop
hlt
fwait
imul
push
add
jecxz
sub
mov
push
sub
mov
clc
and
add
mov
or
test
mov
aam
clc
adc
mov
xbegin
icebp
data16
add
pusha
add
mov
push
mov
pusha
add
fs
mov
mov
add
cmp
mov
xabort
bound
add
add
cwtl
cmp
pop
clc
incl
xchg
fisubrl
push
sbb
lcall
daa
clc
adc
add
push
fs
xbegin
mov
clc
sar
int3
cmp
push
lcall
cs
jmp
push
push
pop
add
add
pusha
add
dec
sarl
xor
xor
add
clc
cs
mov
clc
lret
and
add
push
inc
clc
or
cli
test
popf
das
add
add
idivl
adc
add
adc
add
add
add
add
add
clc
in
ljmp
inc
clc
js
imul
mov
push
add
mov
add
ret
add
pop
int3
ret
clc
fwait
lret
clc
ss
fstl
add
or
outsb
fs
loope
adc
add
clc
in
test
loop
mov
mov
mov
lret
popf
xchg
xchg
and
add
clc
xchg
mov
mov
mov
mov
div
test
sub
push
add
stos
dec
cmp
das
inc
add
mov
clc
dec
cmp
clc
mov
clc
jp
inc
add
sbb
add
add
arpl
add
clc
cmp
aaa
fstps
clc
cmpsb
clc
sbb
add
adc
data16
cmp
clc
pop
xor
aas
cmpsb
clc
sar
bound
add
cmp
clc
dec
addr16
scas
xor
add
xchg
lods
mov
mov
mov
inc
clc
test
clc
mov
add
add
jl
add
sub
pop
xor
add
ret
pop
clc
xchg
mov
and
ret
clc
rorb
dec
shl
clc
das
out
mov
add
mov
mov
sbb
out
dec
cmp
cmp
xchg
ds
in
and
add
add
push
add
mov
or
add
add
clc
ret
clc
sbb
aad
add
xbegin
clc
mov
repnz
lods
int3
mov
clc
xchg
outsb
mov
push
xlat
gs
sbb
add
mov
adc
jge
xchg
adc
add
insb
je
add
xbegin
or
add
add
clc
ficoml
rcrl
add
add
clc
adc
add
cmp
add
sbb
sub
add
arpl
add
add
out
insb
push
add
gs
xlat
jae
add
insl
cmp
imul
lock
mov
add
mov
clc
push
add
test
pop
repnz
clc
mov
iret
fmul
nop
mov
loop
inc
add
fsubrs
popa
add
test
clc
fisubl
add
dec
leave
add
mov
sub
mov
pop
lret
cmp
push
jo
add
or
jbe
clc
xor
add
add
dec
leave
and
lret
addr16
jg
add
xchg
lahf
int3
cmp
mov
mov
pushl
aad
clc
scas
int3
aaa
ljmp
add
inc
clc
push
push
dec
gs
adc
add
pushf
mov
mov
clc
out
add
add
add
add
inc
add
and
add
clc
dec
pop
icebp
fidivrs
gs
mov
clc
xor
add
pop
adc
add
aad
push
add
pop
push
add
loope
icebp
xchg
fucomip
xchg
nop
cltd
stos
icebp
jge
sbb
ja
inc
add
stos
shrl
test
mov
pop
clc
das
push
add
jg
fptan
sti
xchg
test
clc
inc
clc
push
sub
clc
mov
mov
loop
sub
insl
jne
xabort
aad
push
mov
clc
dec
jmp
fisubrs
add
or
push
popa
add
roll
mov
clc
repnz
clc
dec
inc
clc
insl
test
movsl
clc
xabort
add
sbb
inc
clc
ljmp
add
clc
cmp
das
sahf
dec
pushf
lods
lahf
add
add
add
add
add
add
sti
and
add
add
cltd
sbb
add
inc
add
sub
add
jmp
and
add
popf
xor
add
clc
call
add
clc
sub
add
imul
fiadds
sahf
sub
sbb
push
add
jle
add
add
insl
stc
push
out
movsb
clc
jg
clc
or
clc
mov
add
xchg
pusha
add
shll
clc
and
add
in
pop
dec
movsl
clc
lret
jmp
shrl
push
add
and
pop
xchg
out
or
inc
clc
dec
cmp
cmp
add
xchg
popf
repz
in
pop
pop
lret
push
js
arpl
add
pop
int
xbegin
clc
xor
add
xchg
lret
add
push
adc
add
add
clc
xchg
dec
mov
hlt
loop
xor
add
scas
data16
xlat
dec
dec
leave
push
scas
mov
add
xlat
ljmp
sahf
loopne
addr16
icebp
mov
repnz
fcom
scas
ss
add
sbb
nop
cmpsl
clc
inc
clc
fwait
ja
cmp
jl
clc
clc
sar
gs
push
add
mov
cmp
xchg
pop
lcall
clc
push
mov
or
lea
add
mov
enter
pop
int3
push
jge
addr16
inc
add
adc
add
add
jbe
cmp
clc
vdivps
add
and
add
clc
icebp
xchg
pop
dec
sbb
clc
xchg
call
add
adc
add
add
outsb
es
dec
rolb
clc
iret
jne
cs
xor
lock
cmp
add
in
pop
add
add
or
or
mov
movsb
clc
mov
mov
jecxz
sub
shl
mov
add
fstpt
and
add
or
cmp
xchg
addr16
aaa
xor
lcall
sub
add
clc
cmp
add
fisubrs
inc
clc
inc
clc
mov
das
xbegin
sub
xor
add
add
mov
lea
jno
add
jg
clc
sar
add
fsubrl
add
add
stos
push
jno
add
add
or
popa
add
loope
call
pop
cmp
clc
bound
add
loop
xchg
inc
add
mov
aam
mov
test
cld
imul
icebp
push
mov
add
arpl
add
add
icebp
aam
clc
fidivrs
stc
int
push
jecxz
std
repz
jbe
mov
popa
add
pop
and
add
jns
push
ljmp
daa
clc
out
ja
bound
add
out
sar
mov
dec
and
add
arpl
add
cmp
add
push
fistps
cld
shlb
add
cmp
push
inc
add
ja
clc
xor
add
clc
cld
sbb
sbb
add
clc
ljmp
add
inc
clc
inc
clc
int3
movsb
clc
xbegin
sar
clc
ds
clc
jge
clc
jmp
and
add
add
add
add
jns
clc
mov
stos
cli
pusha
add
inc
clc
jno
add
clc
fsubrs
loop
or
add
addr16
sub
clc
sar
movsl
clc
mov
add
fdivrs
ret
clc
jle
icebp
jbe
clc
out
and
add
push
add
xbegin
add
adc
add
add
popa
add
pop
sub
stos
popf
enter
cmpsl
clc
jne
clc
jae
add
loop
int
xchg
jp
add
arpl
add
mov
sub
clc
test
jg
add
rcrb
inc
clc
sub
add
or
push
clc
stc
pop
or
push
bound
add
sub
jne
pop
mov
or
stc
cmp
add
push
add
daa
clc
test
clc
out
jns
cld
cli
push
clc
icebp
aam
clc
or
clc
cld
int3
or
icebp
stc
cmp
pop
and
clc
sub
add
ret
clc
or
jnp
clc
push
add
pop
sub
and
add
sub
clc
or
add
sti
in
loopne
dec
mov
fsubp
clc
femms
inc
clc
pop
clc
outsl
arpl
add
add
add
insl
mov
cmp
clc
pop
sbb
dec
mov
inc
clc
popa
add
mov
scas
outsl
mov
iret
xbegin
int
add
jecxz
cmp
push
add
add
add
cmpsl
clc
pop
push
add
xchg
jo
add
add
adc
add
add
add
leave
jnp
or
add
lret
clc
add
add
clc
jo
add
mov
and
add
pusha
add
push
xchg
int
sbb
dec
mov
jo
add
pop
ret
stos
sbb
arpl
add
clc
bound
add
push
fimull
push
mov
ljmp
add
mov
clc
bound
add
clc
imul
cmp
clc
jecxz
ror
xor
xlat
dec
mov
cwtl
add
add
mov
aad
adc
add
clc
ror
jne
idivl
clc
jecxz
dec
popf
and
add
sar
scas
repnz
or
add
push
jne
cmp
add
add
jle
lahf
iret
sbb
clc
ja
push
add
shrl
jbe
cmp
jns
aam
clc
pop
clc
out
bound
add
add
clc
cmp
add
add
add
sbb
rcr
shll
add
clc
mov
dec
mov
add
outsb
test
in
inc
clc
cmp
clc
add
add
lret
add
add
push
clc
mov
fidivrl
fwait
and
sbb
xchg
clc
and
and
add
add
arpl
add
clc
aam
cmc
lret
xor
add
clc
mov
jle
push
add
jmp
jno
add
jmp
add
in
aam
dec
jecxz
ficomps
jno
add
inc
add
lods
jge
dec
ja
push
and
add
add
arpl
add
cmp
adc
add
clc
scas
cmp
inc
clc
dec
dec
mov
add
add
add
aas
clc
jne
mov
mov
add
and
add
lahf
mov
sbb
add
add
clc
dec
lea
mulb
jp
jmp
add
adc
add
mov
ds
jp
clc
js
arpl
add
pop
or
clc
jp,pt
dec
int
pop
pop
inc
clc
dec
push
inc
add
pop
cmpsl
clc
mov
add
sub
or
clc
mov
add
cli
ja
add
jo
add
movsb
clc
cmpsb
clc
dec
xor
add
je
pop
xchg
mov
clc
or
lret
sub
add
mov
adc
add
sbb
aaa
clc
in
add
add
sbb
inc
clc
fcmovnb
clc
js
popa
add
cmpsb
clc
push
and
add
pop
clc
mov
sub
clc
pusha
add
add
add
xor
clc
std
xor
add
enter
fnstcw
fildl
push
dec
fsubl
sbb
add
fistpll
dec
xbegin
jle
clc
mov
inc
clc
xor
add
add
clc
enter
clc
inc
clc
mov
clc
sar
clc
xchg
cmp
add
add
negl
xchg
lock
fptan
sbb
add
mov
xbegin
data16
pop
fucomp
mov
mov
ds
clc
dec
xor
add
sbb
jnp
clc
adc
and
add
add
push
outsl
xchg
jl
clc
xchg
add
add
popl
jmp
clc
or
lods
stos
imul
xor
add
aaa
pop
mov
add
adc
add
clc
push
fptan
cs
inc
add
add
add
add
sti
jae
add
gs
clc
mov
loop
ss
imul
inc
add
sub
add
add
sub
repnz
pop
rep
mov
out
xabort
add
dec
dec
sbb
add
xlat
cltd
xchg
inc
add
test
cltd
sbb
mov
pop
sarb
jae
add
add
dec
test
clc
movsl
clc
xbegin
frstor
add
in
nop
jne
jp
fimull
iret
and
add
and
pop
add
add
clc
js
clc
and
das
xchg
add
add
jp
pop
cltd
push
xchg
mov
clc
inc
clc
push
clc
in
xor
mov
stos
dec
mov
das
sahf
push
add
sub
add
pop
clc
lret
jbe
dec
jb
add
add
sbb
clc
cmp
mov
add
pop
clc
cmp
add
hlt
jnp
clc
add
add
sbb
call
add
clc
je
fildl
clc
mov
dec
unpcklps
add
cli
dec
pushf
jo
add
mov
add
hlt
xchg
cmp
add
repnz
jle
js
clc
xor
add
clc
hlt
pop
call
clc
jmp
jecxz
mov
add
sar
add
pop
mov
inc
add
movsl
clc
movsb
clc
pop
rcl
adc
add
add
push
add
int3
xbegin
pushl
clc
or
fldl
add
loope
in
push
adc
add
add
adc
add
mov
cld
icebp
mov
clc
jne
jl
push
add
mov
xlat
cmp
add
add
add
xchg
adc
xor
add
in
jg
mov
add
push
add
adc
add
and
add
cmp
stc
sar
lret
adc
add
clc
sbb
aad
clc
cmp
mov
jmp
pop
cmc
xchg
adc
add
xor
add
jge
sub
pop
xor
add
jge
clc
xabort
das
xabort
je
je
add
pop
push
loope
push
cmp
clc
es
dec
add
add
jne
clc
xor
add
clc
inc
add
xchg
aas
ljmp
cmp
test
push
add
dec
push
dec
cmp
enter
clc
cmp
mov
mov
clc
push
clc
pushf
in
push
mov
insb
xabort
mov
add
mov
pop
stos
jo
add
mov
lcall
add
add
test
shr
cli
jae
add
sub
xchg
adc
add
jmp
sahf
xchg
leave
sbb
pop
movsb
clc
mov
jg
clc
test
mov
xchg
lahf
fiadds
add
lock
clc
inc
add
adc
cmp
arpl
add
bound
add
mov
add
add
in
cmp
add
clc
cli
stos
shrl
adc
add
hlt
mov
xchg
push
xor
add
es
jo
add
clc
cwtl
out
outsl
fistpl
push
daa
clc
and
add
stos
or
fsts
adc
add
add
repz
lret
add
push
xchg
pop
push
or
add
mov
mov
add
cmp
add
imul
inc
add
mov
dec
es
mov
enter
add
jns
mov
fldt
push
add
or
aad
add
hlt
fisubrs
cmp
clc
mov
xlat
call
cmp
sbb
mov
add
add
add
xor
out
or
sahf
xchg
mov
push
add
inc
add
dec
aad
aam
int3
cs
shlb
add
ret
clc
std
cmp
clc
arpl
add
nop
push
fsubr
inc
add
xchg
repnz
add
movsb
clc
jge
add
xbegin
clc
push
leave
mov
repz
out
fadds
pop
mov
jecxz
enter
aad
ljmp
bound
add
cmp
push
add
arpl
add
pop
popa
add
inc
add
mov
movsb
clc
movsl
clc
or
jle
scas
in
dec
ret
clc
cltd
hlt
pop
add
bound
add
push
cmp
rcrl
sub
xchg
aas
mov
clc
cmp
mov
aas
scas
shrb
mov
and
mov
inc
add
sub
outsl
jns
clc
stc
dec
sub
add
mov
dec
push
ljmp
dec
popf
movsb
clc
mov
jle
inc
add
mov
add
je
clc
jle
add
mov
aad
add
xor
add
clc
enter
in
aam
push
add
movsb
clc
fsubp
clc
push
add
fcmovnu
test
sub
add
xchg
jno
add
dec
movsl
clc
or
pop
jno
add
notl
inc
add
je
cmp
std
imul
xchg
scas
aaa
mov
fadds
cld
fwait
add
xor
clc
js
clc
sbb
add
push
adc
in
or
add
cmp
lea
aas
ss
add
cmpsb
clc
cmp
adc
rclb
mov
arpl
add
loopne
and
add
xchg
dec
xor
clc
sar
clc
pusha
add
jb
add
cmp
mov
clc
push
std
and
add
test
aaa
mov
lret
add
jo
add
jnp
insl
sbb
add
inc
add
cmp
iret
inc
add
testb
cmp
jecxz
nop
jg
std
pop
clc
xabort
neg
inc
clc
and
add
add
sbb
jo
add
cmp
jl
clc
sar
fcomps
jl
dec
pop
aas
cld
test
jnp
loopne
mov
clc
mov
and
adc
sbb
clc
sar
jno
add
dec
push
add
sub
shr
sub
lods
sar
bound
add
pop
xchg
mov
mov
xabort
cmp
repnz
jge
sbb
mov
clc
xchg
xor
add
clc
dec
cli
lahf
movsl
clc
icebp
stos
xor
add
clc
or
add
jg
aaa
sbb
ficomps
pop
setl
sar
into
out
leave
lahf
sbb
mov
push
add
lcall
lcall
cmpsl
clc
xchg
mov
fistps
clc
mov
std
nop
test
add
stc
xor
cmp
js
clc
int
clc
loopne
lret
gs
push
clc
pushl
add
ss
add
jae
add
nop
mov
jecxz
adc
add
add
add
adc
clc
nop
push
clc
insb
ret
clc
cmp
mov
sub
enter
add
push
jge
clc
and
add
add
lret
sub
shlb
add
movsl
clc
push
push
add
sahf
shll
add
clc
mov
negl
clc
cmp
add
pushl
fs
cs
mov
clc
sahf
adc
add
clc
jo
add
clc
pop
push
add
outsb
mov
test
or
fisubs
add
mov
mov
add
addr16
clc
sbb
pop
clc
ss
mov
dec
arpl
add
fistl
fcmovu
cmp
inc
add
dec
hlt
push
dec
imul
pushl
add
add
pop
rclb
fcoml
add
add
clc
fwait
lret
lock
in
scas
mov
sub
add
or
sub
add
xor
add
mov
and
mov
add
psllq
jbe
and
add
add
add
pushf
leave
fs
das
es
push
add
adc
add
and
add
jle
clc
cwtl
int3
lods
jnp
add
aas
xor
add
jge
pop
mov
and
add
faddl
movsb
clc
insl
cli
dec
cwtl
xor
add
outsb
loop
mov
popf
xchg
jg
clc
iret
popa
add
test
xor
add
jl
pop
xchg
fbstp
add
push
add
dec
push
add
jge
add
push
and
lret
inc
clc
xlat
add
add
clc
mov
pop
pop
es
cmp
xchg
push
sub
push
clc
cmp
add
adc
sbb
push
pop
mov
clc
call
ret
mov
jg
leave
cmp
clc
lea
clc
jmp
lret
mov
or
add
cmpsb
clc
mov
pop
lret
sbb
and
push
ljmp
add
or
loop
xor
add
jge
sbb
sub
fidivs
add
add
and
pushf
nop
mov
add
add
add
in
addr16
clc
mov
mov
add
mov
clc
cmp
add
clc
fwait
and
add
pop
cmp
insl
mov
movsl
clc
cmp
add
mov
add
pop
jp
mov
pop
mov
add
adc
add
stc
xchg
test
pop
icebp
and
fsts
ja
iret
add
add
add
add
pop
dec
lcall
push
add
test
cmpsl
clc
gs
jbe
mov
jns
mov
adc
add
clc
das
scas
pushf
add
sti
gs
xor
add
lock
add
cmpsb
clc
push
add
cmp
add
pop
int
scas
push
inc
add
xchg
cmp
add
sahf
shrl
jg
jp
scas
repz
cmp
clc
fimuls
cmp
add
add
inc
add
movsb
clc
insl
aaa
out
jecxz
mov
xabort
cmp
add
scas
cmp
ret
clc
sahf
inc
add
cmp
lret
movsb
clc
test
das
popf
popf
std
push
add
cmp
clc
insl
inc
add
aas
add
add
add
clc
lahf
orps
scas
cmpsl
clc
add
add
div
insb
sbb
ret
pushf
pop
clc
stc
mov
outsl
mov
shlb
sbb
add
push
add
stos
mov
clc
push
jecxz
xchg
jmp
add
add
loop
shrb
add
loopne
inc
clc
fsts
add
add
loopne
push
icebp
cmc
jb
add
sub
test
das
pop
mov
cmpsb
clc
insb
push
add
jecxz
shl
clc
pop
mov
popa
add
aad
mov
mov
das
out
es
sbb
add
je
clc
sbb
push
add
jbe
xbegin
sub
add
clc
xor
add
scas
and
add
and
add
add
test
insl
es
push
das
test
add
mov
add
repnz
add
repz
add
jae
add
mov
add
int
xor
add
mov
sahf
lcall
or
aas
add
add
ds
lahf
inc
add
adc
mov
jg
mov
clc
add
add
adc
aad
clc
cmp
dec
addr16
xbegin
shl
clc
sar
xchg
inc
add
aam
icebp
sar
jne
xlat
jne
add
ja
clc
inc
add
push
movsb
clc
xor
add
insb
jae
add
xchg
mov
xchg
fdiv
add
add
push
pushl
add
push
add
popf
out
ss
add
sar
stos
mov
loopne
inc
add
add
add
inc
clc
sahf
cmp
xor
add
adc
clc
adc
add
add
xchg
pop
lcall
sahf
pop
fldt
add
cmp
clc
fs
dec
mov
sub
add
loopne
and
add
add
test
mov
inc
clc
outsl
cld
inc
add
ss
es
sbb
xor
add
jge
call
dec
push
call
xor
add
push
out
xchg
sbb
sub
outsb
into
jbe
inc
add
repnz
fistl
je
pop
mov
add
clc
xchg
inc
add
scas
sbb
add
add
sub
cltd
mov
xabort
xchg
add
add
xor
add
add
loope
dec
and
add
rolb
add
xlat
adc
add
movsb
clc
insb
stc
jl
xor
add
add
jl
add
nop
cld
sar
popf
movsb
clc
xchg
imul
clc
or
std
mov
mov
fcoml
rclb
stos
cmc
in
push
add
jns
add
push
clc
out
out
adc
fs
pop
clc
daa
clc
push
add
jns
call
add
push
add
jecxz
ds
shrb
add
mov
pop
stos
push
clc
addr16
jne
clc
mov
clc
lock
sub
add
scas
aad
aaa
or
add
add
clc
out
mov
add
dec
xchg
pushf
mov
clc
mov
clc
cmp
clc
or
cs
divb
add
and
add
add
inc
clc
scas
outsl
jne
mov
mov
add
and
add
clc
movntq
out
ficoml
add
mov
std
cltd
sbb
push
scas
dec
push
xlat
test
push
dec
pusha
add
rcl
adc
add
.byte
