mov
pop
or
hlt
pop
push
loop
mov
testb
rcrb
add
mov
test
enter
push
or
mov
adc
push
movsl
out
sub
test
out
int3
imul
inc
add
scas
lods
jbe
jnp
out
dec
bt
xor
inc
add
stos
aad
movsl
ss
mov
stos
adc
mov
or
push
xor
outsb
into
xchg
mov
mov
push
xchg
lret
adc
dec
push
inc
and
cmp
mov
xchg
push
fiadds
mov
adc
cli
mov
inc
add
and
add
xor
fxch
mov
add
add
psubusb
mov
jne
mov
jae
mov
js
inc
cli
push
and
lds
cmp
addr16
pop
inc
add
pop
jl
add
dec
xor
jmp
jae
add
gs
sbb
mov
add
pop
push
cltd
mov
sub
imul
xlat
mov
cld
subl
les
fldcw
js
inc
lods
adc
push
pop
add
scas
jle
lods
sub
mov
mov
or
push
roll
mov
pop
je
adc
outsb
imul
aam
gs
sub
add
pop
xchg
mov
int
mov
or
mov
add
xor
dec
testl
add
lods
sbb
add
lahf
inc
cld
das
xor
imul
movb
mov
adc
lcall
lock
enter
bound
and
fdiv
jmp
imul
or
mov
add
ss
jo
sub
inc
add
fidivrs
xchg
sbbl
das
lcall
dec
subl
test
xchg
push
push
cmp
add
add
pushf
loope
int
mov
and
add
in
and
repz
mov
iret
in
lret
cmp
jmp
add
clc
in
dec
adc
loop
pop
icebp
xchg
add
or
add
test
add
pushf
or
jle
cli
inc
inc
jo
mov
push
jb
mov
pop
addr16
add
or
pop
jne
movsb
xor
add
sbb
mov
jnp
sub
pop
in
mov
add
mov
push
mov
aad
ret
addb
test
in
cmpsl
xchg
out
outsb
outsb
cmp
cs
scas
or
mov
add
pop
push
dec
dec
mov
push
push
in
mov
sbb
jnp
scas
repz
nop
movsb
and
add
lods
jnp
cwtl
jge
cmp
add
xchg
push
mov
jb
xor
add
push
adc
mov
xor
pop
jle
into
inc
add
and
pop
div
loope
pop
add
pop
xor
es
or
inc
out
divl
lds
xchg
cmp
jl
pop
fcmove
xchg
pushf
push
movb
adc
lds
cli
push
test
xchg
adc
push
jb
iret
mov
in
mov
cmc
mov
pop
push
push
lret
mov
cmp
pop
jns
add
in
sti
cwtl
adc
mov
fxtract
test
adc
add
xlat
repnz
cltd
push
xchg
mov
stos
outsb
xor
rolb
imul
dec
or
fmuls
push
adc
jbe
jae
mov
pop
xchg
mov
int
inc
add
inc
add
std
std
repnz
leave
test
sbb
add
sub
shr
mov
and
inc
inc
add
inc
or
ss
pusha
add
add
adc
add
xchg
ljmp
je
xchg
pop
cmpsl
or
repz
mov
adc
inc
add
push
imul
xor
lea
sbb
jge
test
add
pop
or
cmc
fcmove
mov
out
adc
clc
out
fwait
pop
dec
dec
daa
jbe
mov
hlt
jae
shl
jne
fstps
ljmp
fstpl
daa
bound
ljmp
mov
lahf
dec
fistpl
inc
push
jge
enter
xchg
push
mov
push
push
adc
in
jb
dec
dec
and
icebp
fstpt
lret
call
jb
cmc
movsl
cmp
xchg
dec
adc
lcall
add
push
pop
out
mov
testb
icebp
mov
fiaddl
add
cmp
pop
rolb
inc
add
scas
jge
fstl
add
addb
add
pop
jns
xor
fstl
dec
jno
lcall
sub
mov
or
call
jl
add
pop
or
ds
inc
add
add
sub
jno
shlb
mov
mov
lods
mov
add
das
or
shll
andl
arpl
cmp
cmp
fbld
push
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
sub
mov
cs
push
push
lret
jmp
add
add
sarb
popf
jl
and
in
in
pop
cltd
mov
repnz
push
int3
rol
sbb
stos
jp
inc
add
push
add
loopne
xchg
iret
mov
cmc
lods
dec
cmpsb
out
and
testl
xor
aad
imul
std
addb
test
fs
inc
add
sti
stc
mov
stos
and
xchg
gs
pop
push
adc
mov
pop
inc
push
imul
fistps
cwtl
jb
fldl
out
push
je
xchg
cmpsb
movb
dec
fs
xor
leave
js
add
mov
fdivs
inc
neg
xchg
ret
insb
xor
mov
sbb
sub
and
or
pushw
add
mov
push
jnp
filds
add
addb
into
inc
add
pop
dec
dec
call
sub
sbb
sub
mov
js
sub
adc
add
in
adc
aam
sub
xchg
hlt
sahf
pop
les
dec
xchg
inc
add
mov
cmp
cmp
test
bound
ja
sbb
repz
adc
mov
mov
fwait
call
or
test
fsts
push
pop
test
jnp
movb
fdivs
rolb
jbe
pop
mov
adc
shll
add
add
sbb
add
dec
jns
ret
in
jno
lcall
sti
cltd
jmp
xchg
mov
jno
in
aam
addr16
iret
jge
icebp
or
mov
push
adc
fildl
pop
jg
inc
mov
push
xchg
jae
add
jnp
movsl
sub
sub
cmpsl
sahf
pop
ja
enter
out
add
push
xchg
fiaddl
add
aam
outsb
in
mov
pop
icebp
imul
pop
aas
test
xchg
int
add
xor
movb
int3
hlt
push
mov
mov
fimuls
test
adc
pop
mov
and
filds
jl
les
popf
xchg
ljmp
add
fwait
mov
std
ret
loopne
fdivs
add
pop
xchg
mov
mov
rol
sub
and
push
jnp
aas
aam
add
pop
aad
aas
xchg
outsb
test
mov
push
cmpl
in
xchg
mov
ja
sbb
pop
pushf
sub
push
sbb
out
mov
push
divb
pop
jle
push
jmp
sub
adc
das
cmp
clc
daa
sahf
maskmovq
idivl
loop
std
xchg
out
cmpsl
inc
arpl
out
cmp
out
setge
inc
add
out
jno
mov
jnp
push
pop
andnps
add
and
inc
mov
xchg
movb
inc
lods
xchg
push
pop
out
mov
lahf
xor
xor
pop
out
in
loop
fiaddl
das
mov
jl
add
xchg
stc
xchg
xchg
aas
pop
jbe
cmp
push
xor
mov
adc
popa
daa
and
fstpl
cltd
mov
out
std
cltd
pop
mov
mov
add
adc
movb
xor
push
stos
call
pusha
add
stos
shr
jp
fdivs
mov
shll
push
add
add
cmp
pop
dec
rcrb
les
std
sahf
lds
push
rolb
cmpsb
push
test
add
add
or
add
inc
add
fs
repnz
dec
pop
lahf
pushf
cmp
push
rolb
jno
adc
inc
aas
inc
add
xor
scas
outsl
insb
add
je
cmp
int3
and
sub
add
push
int
daa
es
aad
cmp
dec
pop
outsb
bound
and
fbstp
mov
sti
add
mov
les
adc
push
mov
jae
les
jmp
push
test
push
lcall
clc
cwtl
pop
mov
add
xor
xor
adc
mov
push
pop
cmpsb
lea
imull
dec
add
pop
aaa
leave
sbb
leave
cmpl
jns
or
sbb
xchg
pusha
add
ret
aad
int
arpl
add
imul
mov
popf
mov
dec
lcall
inc
add
hlt
sbb
push
insl
das
pushf
adc
dec
insl
mov
add
data16
dec
divb
sub
mov
sbb
sbb
scas
out
lret
pop
fbld
mov
pop
xor
dec
mov
add
adc
ja
cmp
insl
test
rolb
push
push
adc
add
cmp
cmp
popf
out
fucom
dec
aaa
in
imul
cmp
add
add
lcall
in
mov
xchg
hlt
test
push
movsl
mov
ds
jb
rcr
call
imul
notb
andl
mov
cli
lahf
jo
add
cmp
or
jno
mov
jbe
mov
sub
add
ret
or
jne
insl
movsl
mov
fsubr
pop
repz
pop
adc
inc
sub
addb
out
mov
push
and
sub
push
jmp
inc
add
decb
frstor
and
gs
out
dec
les
shlb
movsl
or
adc
jns
and
popa
mov
or
push
xchg
int
add
cs
aaa
std
dec
negb
inc
cmp
cmp
enter
jo
jae
mov
adc
fdivrp
mov
lock
mov
mov
add
inc
add
into
inc
add
inc
sub
les
adc
fdivl
push
icebp
sbb
add
imul
jns
inc
add
loopne
inc
add
gs
pusha
add
hlt
mov
mov
test
add
push
add
jnp
repnz
sub
add
push
mov
and
pushf
jmp
les
mov
add
addb
pop
push
aaa
sar
fisubs
mov
iret
mov
addb
es
mov
fstpl
xchg
es
dec
es
lods
rolb
xor
movb
pop
dec
les
cmpsb
icebp
test
sub
ljmp
loope
insb
push
lret
popf
scas
mov
add
pop
fsubrs
dec
inc
lret
inc
add
lods
aas
pop
cmp
dec
dec
inc
add
les
mov
jg
sbb
pop
dec
jbe
and
iret
into
addb
enter
cmp
pop
mov
cwtl
mov
unpckhps
add
jle
outsl
loopne
in
fildl
fbld
sbb
xchg
mov
stos
js
ja
leave
xchg
insb
outsb
fsubr
insl
adc
ss
lret
cmp
icebp
lock
push
test
test
scas
pop
xlat
lret
push
ret
mov
mov
in
pop
jp
ja
jns
mov
ror
movsb
push
aas
test
cmp
lea
hlt
mov
push
and
aad
call
cli
or
sbb
nop
imul
popf
pop
ffree
add
xchg
jmp
test
sldt
push
xchg
cltd
cmc
jns
mov
pop
in
pop
or
pop
sbb
popf
rolb
push
xor
jbe
sub
fcmovnu
outsb
mov
push
and
popf
mov
xcrypt-ctr
cmpsl
cltd
mov
xchg
mov
add
or
int
pop
mov
mov
add
sbb
enter
data16
rolb
dec
dec
sub
xchg
das
mov
pop
aad
adc
stos
call
inc
sub
add
add
sbb
sbb
cwtl
mov
imull
fsubrs
mov
push
and
imul
inc
cmp
xor
aad
add
jmp
lock
adc
fistpl
insb
mov
cmpsl
in
sahf
int3
and
dec
ss
xor
aam
cli
adc
xor
mov
dec
sbb
popf
dec
mov
cs
in
lret
pushf
xor
rcl
xorl
mov
js
jl
mov
push
imull
push
out
loopne
pop
push
and
movsb
inc
adc
fucom
cmp
insb
gs
std
jne
lods
cmp
lock
or
int
mov
add
mov
mov
out
rcll
movb
pop
or
xor
sub
jecxz
mov
add
xor
pushl
pusha
add
popa
dec
adc
jmp
add
addr16
mov
sub
shrb
fs
rcrl
rolb
addb
mov
push
pop
or
xchg
stos
stos
incb
sahf
pop
popa
movsb
lea
jo
xorl
or
push
arpl
mov
xchg
mov
fsubp
xchg
idivl
rcrb
loop
mov
scas
cmp
lahf
mov
aad
int
pop
mov
dec
shrl
jbe
add
in
pop
push
xor
push
cmp
data16
jnp
mov
nop
dec
lea
fistpl
mov
sarb
add
jne
fdivl
loopne
jecxz
mov
add
imul
add
mov
add
mov
inc
daa
ret
imul
fadds
xor
test
stos
dec
or
pop
jne
dec
cmp
imul
outsb
stos
fldcw
xor
iret
bound
popa
push
outsb
stos
jmp
xor
addb
das
js
xchg
pop
imul
fistps
aam
fisubrs
rolb
add
bound
nop
mov
push
push
cmp
pop
aas
aam
test
sti
adc
add
mov
test
add
popa
scas
xchg
stos
bound
sbb
add
mov
dec
ret
xor
xchg
pop
in
cmp
and
shl
sbb
cmp
fsubrs
pusha
add
sub
je
ja,pt
mov
test
jo
daa
shlb
add
mov
fcoms
nop
addb
dec
pusha
add
adc
inc
out
and
shl
sbb
mov
jle
push
loope
push
mov
shrl
or
add
add
jecxz
cltd
sub
subl
xchg
lods
push
gs
or
or
jp
lret
mov
scas
or
insl
aaa
adc
scas
lcall
or
pop
inc
add
mov
mov
jle
imul
stos
and
jnp
out
jge
xchg
cli
fsubs
popa
out
sub
negl
jnp
pop
mov
pop
push
insl
imul
cld
pusha
add
shrb
out
adc
or
add
addr16
inc
fwait
int
cmp
popa
adc
sbb
adc
popf
xchg
cwtl
mov
add
jp
iret
call
test
leave
outsl
aaa
cmpsb
js
and
inc
lea
push
mov
aaa
and
std
pop
adc
cmp
push
mov
add
jl
xor
shll
les
lods
pusha
add
test
mov
cmp
pop
addb
mov
cmc
jecxz
nop
in
and
std
cmp
aad
js
aas
mov
sarl
jge
xor
add
mov
mov
push
loope
or
cmc
shll
aas
lods
ret
cmpsl
pop
call
adc
and
sub
out
pop
outsb
mov
pushf
add
mov
dec
ror
sbb
movsl
mov
outsb
jnp
dec
imul
in
mov
and
enter
inc
add
cmp
fcoms
xor
xchg
xor
add
xor
stc
pop
mov
push
and
push
mov
push
pop
ftst
out
and
dec
pop
aad
ljmp
js
cmp
jle
out
testl
dec
hlt
aam
mov
and
dec
sbb
mov
jle
and
sub
in
dec
lock
xor
push
testl
add
add
add
in
mov
repnz
loop
jle
xor
dec
aas
cmpsl
mov
mov
int3
mov
add
icebp
nop
pop
mov
adc
and
jbe
xchg
daa
push
mov
repz
aaa
xor
dec
insb
aaa
sbb
fwait
call
add
mov
add
les
subl
fcoml
loope
xor
xchg
jnp
mov
adc
in
mov
add
stc
roll
cmp
pop
adc
inc
add
push
jp
sbbl
out
push
leavew
inc
add
mov
cmp
cltd
dec
or
stc
movb
xchg
mov
add
adc
mov
add
loopne
sahf
jle
addb
test
movsl
gs
fldl
je
jo
xchg
pavgb
mov
mov
mov
fldenv
ret
ljmp
jbe
sbb
dec
fisubrs
movb
cmpsl
shlb
sbb
or
mov
push
jg
imul
inc
xsaveopt
adc
inc
mov
push
mov
mov
jecxz
adc
adc
mov
stc
mov
cmp
test
mov
fstps
add
pushf
das
ficoml
mov
and
sarl
add
addr16
xchg
popa
sahf
adc
negl
imul
imul
cltd
cmp
outsb
test
jmp
leave
dec
mov
test
mov
pop
addb
jbe
xchg
xchg
orps
dec
lock
add
addb
in
jmp
push
sbb
fs
mov
in
cmp
mov
es
pushf
xchg
pop
cld
cmpsb
jns
and
and
gs
or
pop
dec
int
and
je
test
add
mov
or
lret
and
sub
xor
repnz
mov
mov
mov
inc
add
iret
movsb
xchg
addr16
lods
lret
pushf
cmp
push
outsb
xchg
mov
xchg
in
scas
mov
mov
lret
aaa
mov
sub
test
add
popa
push
add
repz
push
les
addr16
sti
outsl
or
movsb
loopne
fwait
shlb
les
bswap
mov
and
imul
sti
mov
je
int3
and
pop
pop
cmp
mov
push
adc
jns
xchg
cwtl
loope
mov
daa
loopne
test
pop
fsts
imul
cmc
repnz
pusha
add
lret
mov
lcall
nop
adc
jbe
add
sub
pushf
dec
and
lcall
cmp
xchg
les
add
lret
icebp
push
rolb
imul
inc
pop
xor
xchg
and
add
mov
fistpl
add
lret
xchg
add
fwait
push
jnp
inc
add
xchg
jb
add
add
cmp
jp
add
mov
add
inc
add
push
cmpsl
cmc
sub
ficomps
dec
lahf
lods
xor
loop
loope
enter
push
or
testl
push
xorl
aas
add
iret
leave
mov
push
cmp
xchg
icebp
pushf
push
cmc
stos
mov
mov
mov
int
fidivs
faddl
mov
outsl
data16
jmp
jge
pop
dec
insl
and
pop
fnsave
mov
dec
insb
and
mov
movsl
fimuls
push
push
mov
inc
add
es
das
in
test
adc
cmp
mov
addb
add
inc
add
jno
fiadds
sti
pop
addr16
in
aas
pop
loope
sub
add
outsl
xchg
push
jl
fistps
addb
push
dec
ret
mov
repz
mov
mov
mov
icebp
andl
xor
dec
addr16
ds
pop
mov
add
popf
mov
mov
pushf
or
cmp
add
pop
pop
in
or
movsl
mov
xor
xchg
push
fwait
outsl
add
jne
ds
shr
js
push
xchg
push
dec
dec
ret
mov
and
xchg
test
add
das
push
add
shll
add
imul
xor
cmc
icebp
fcmovb
sbb
jbe
js
sub
add
subl
cmp
add
xor
out
xchg
cwtl
les
cmc
push
pop
lahf
xor
mov
mov
mov
aam
xor
lret
inc
outsb
xchg
jns
loop
inc
add
xchg
inc
add
test
mov
inc
mov
mov
pop
daa
mov
add
push
dec
push
pop
inc
mov
mov
inc
fwait
lods
loop
or
mov
je
lods
push
imul
dec
adc
daa
and
xor
inc
add
xchg
fcmove
cmp
out
es
in
or
pop
push
push
test
or
in
test
sbb
lret
and
add
pop
pop
cmc
mov
movsb
xchg
cmp
mov
adc
std
dec
sbb
fcoml
mov
add
jno
dec
push
push
add
cmpsb
push
dec
movb
sub
call
add
add
pusha
add
les
mov
stc
out
dec
xor
pop
jae
ja
sti
cmp
push
dec
int3
loope
inc
xlat
inc
sub
call
push
add
jns
sub
jle
jmp
jmp
insl
push
or
fisttps
and
dec
dec
add
jle
insb
call
rolb
scas
push
pop
xchg
repz
rclb
mov
dec
mov
xor
inc
mov
push
mov
cmpsl
mov
cmp
xchg
mov
adc
xchg
sub
aaa
jo
movsl
push
mov
out
cltd
std
cld
pushf
hlt
jl,pt
add
mov
ljmp
mov
add
popf
xchg
aam
fstl
sbb
sub
cmpsb
out
sub
xchg
int3
leave
xchg
les
and
cmpsl
push
fcoml
xchg
daa
rolb
cmpsl
jmp
jg
leave
mov
inc
add
add
shrb
lret
dec
sbb
dec
pop
xchg
jle
push
pop
scas
sbb
pop
out
cmp
jno
add
xchg
push
fnstenv
inc
add
das
xor
add
pop
rcll
and
mov
arpl
jg
xchg
cmp
add
jge
xor
add
add
push
add
movsb
scas
xor
add
test
ss
mov
enter
shl
int
scas
dec
aaa
lret
mov
mov
jg
out
mull
xor
push
xor
aad
in
pop
sbb
fimuls
movsl
and
push
andl
das
cs
out
inc
add
addr16
sub
mov
rcrl
imul
xchg
xchg
mov
cmp
out
inc
or
mov
test
pop
mov
repnz
cmp
push
rolb
inc
add
scas
mov
inc
add
adc
imul
mov
inc
add
jmp
je
repnz
add
sub
add
jmp
aad
inc
add
sbb
pop
xor
jbe
pop
mov
add
and
sbb
test
int3
cmp
or
and
mov
xchg
loope
in
xchg
and
sub
xchg
mov
mov
cmpsl
jmp
sahf
test
divb
int3
cmp
push
out
jns
xor
mov
js
add
mov
sub
int
mov
cmpsb
xor
or
add
pop
addb
or
sbb
dec
movsb
cmp
xlat
inc
xchg
out
sub
mov
sbb
adc
xchg
into
pop
sbb
iret
mov
bound
loop
lahf
xchg
mov
jns
fdivs
lcall
popf
cmp
add
addb
add
pop
pop
push
rcrl
and
and
addb
andl
jns
add
rolb
mov
add
push
loope
add
notb
pop
mov
mov
xchg
jg
jmp
mov
dec
pusha
add
enter
adc
incl
add
sahf
sub
cmp
addb
cmp
jb
push
into
pop
loopne
sbb
xchg
cli
xchg
inc
add
push
mov
movsl
inc
jne
mov
ja
shrl
mov
movsl
jne
jge
clc
sbb
les
dec
movl
test
gs
mov
inc
test
mov
iret
mov
add
or
push
sub
hlt
sub
adc
pop
add
add
shlb
arpl
insl
sahf
movsl
sbb
fwait
adc
add
cli
in
xchg
aam
xlat
add
mov
mov
push
lods
or
insb
sub
add
mov
adc
add
fwait
push
mov
push
call
int3
ret
push
xor
frstpm(287
and
jp
and
mov
enter
test
pop
into
loop
dec
les
or
lret
mov
mov
jle
add
sub
cmp
mov
cmp
shll
stos
push
test
mov
insb
lods
mov
push
and
adc
push
and
xor
add
inc
inc
pop
notb
pop
sub
add
sbb
andl
mov
addr16
jns
cmpsl
test
cs
jg
test
fstpt
mov
pushf
inc
add
add
out
sti
fstpl
fistps
lret
enter
stos
out
arpl
int
cmpsb
and
wrmsr
cmp
out
std
adcl
jg
cmpsl
pop
inc
mov
dec
repz
pusha
add
pop
adc
push
pop
pop
xchg
xchg
js
outsl
jnp
int3
add
push
loopne
sbb
aas
imull
mov
sahf
outsl
mov
dec
call
das
ss
clc
push
mov
add
mov
mov
popa
fistpl
push
pusha
add
leave
or
into
loope
inc
add
lock
add
jge
add
push
jp
loope
fimull
jb
xchg
int
cmpsl
push
ljmp
jg
xor
jne
addb
lods
fcmove
inc
add
add
lcall
mov
scas
out
test
xchg
in
jmp
add
mov
and
mov
fisttpll
push
outsb
fisubs
test
lods
in
fdivs
aad
aam
hlt
in
push
daa
add
das
ret
add
jmp
mov
jae
add
lret
sti
or
data16
ja
add
int
imul
dec
clc
rclb
push
or
push
or
insb
fnstcw
cmp
out
pop
cmp
sub
adc
add
int
pop
sub
test
mov
mov
jle
out
xlat
xor
out
std
xor
add
inc
add
fdivl
icebp
addb
cwtl
movl
lds
pop
xchg
mov
lret
cmp
sub
insl
mov
xor
mov
jp
add
or
push
mov
stos
jnp
dec
sub
mov
sbb
add
test
mov
lahf
jge
adc
int
mov
xchg
mov
mov
popf
movsb
jl
fwait
out
loop
lds
ret
mov
mov
fs
pop
push
fucomp
test
mov
cltd
movb
inc
jge
and
arpl
add
invd
add
push
inc
add
xchg
out
fisttps
jo
xchg
fmull
popf
sti
lock
or
xor
add
das
mov
push
sbb
adc
pop
shll
int3
push
mov
inc
add
and
cld
cmc
mov
cmpsb
pusha
add
jno
in
inc
femms
dec
cmp
and
scas
roll
movsb
xor
fcmovnu
push
add
jnp
xlat
icebp
add
aas
fucomp
inc
add
push
scas
inc
add
aam
cmp
xor
or
scas
push
daa
xchg
or
rcrl
xlat
pusha
add
aam
push
push
mulb
call
inc
add
popf
bsf
cmp
mov
mov
add
add
or
mov
rol
add
lahf
iret
mov
jae
popa
fmuls
aas
scas
cmp
rcl
int
and
cmp
sub
xlat
loop
pop
testl
addb
xchg
aam
fisttpl
jb
cltd
push
call
add
flds
xchg
loopne
adc
loope
adc
bound
out
add
dec
icebp
jo
insb
les
cmp
lcall
inc
les
xor
and
cmc
les
or
pusha
add
and
jle
mov
stos
sbb
addb
jge
xor
leave
mov
adc
std
inc
add
and
cli
enter
inc
add
inc
xchg
testl
push
push
add
addb
movb
aas
cmpsl
inc
add
ds
pop
jbe
lods
movsl
mov
std
add
in
aaa
dec
addb
not
repnz
mov
or
fidivrs
or
call
add
add
pop
es
push
adc
inc
add
dec
pop
push
mov
push
jle
icebp
mov
ja
add
jecxz
pop
loope
xchg
iret
cmp
mov
add
xchg
push
js
bound
mov
rcll
pop
mov
rclb
jl
popf
movsl
jae
mov
shrb
arpl
stos
leave
or
push
dec
push
ljmp
cmp
mov
mov
fnstcw
pop
mov
push
insb
add
into
dec
or
jo
add
leave
scas
movb
xchg
push
add
lret
popa
mov
add
movsl
jecxz
test
xchg
xchg
add
out
icebp
sub
sub
mov
adc
aaa
jo
or
les
es
cmc
and
or
add
mov
sbb
push
adc
out
sbb
add
adc
sti
push
sti
lret
in
insb
out
or
add
push
lods
xchg
outsl
push
test
add
out
insl
mov
adc
gs
cli
sub
cmpsl
xor
mov
cmp
hlt
and
mov
and
daa
aam
add
int3
in
and
lret
call
cwtl
fdivs
adc
or
je
add
sti
int3
lods
mov
push
mov
inc
add
mov
push
add
data16
cmp
jle
clc
test
repnz
sahf
mov
xor
adc
icebp
pop
repnz
rorl
fsubrs
adc
dec
sub
adc
dec
mov
cmc
push
push
testb
add
push
stos
outsb
mov
cmp
pop
jg
int3
sub
or
mov
out
sbb
je
and
rorb
fdivl
cmp
cwtl
mov
ja
mov
pushf
xlat
nop
dec
fwait
xor
or
dec
xchg
sub
cmp
add
insb
or
cmp
xchg
mov
mov
frstor
and
mov
xchg
nop
xlat
mov
ret
ss
movb
lcall
pop
stos
pop
and
mov
dec
in
movb
mov
gs
sub
cltd
mov
sub
add
arpl
imul
or
movb
and
into
ljmp
jge
imul
push
clc
or
add
xchg
xor
sbb
jecxz
jp
add
push
add
jb
imul
sub
adc
inc
aaa
and
int
or
les
sub
adc
mov
pop
inc
add
popa
xchg
rolb
mov
sub
mov
add
scas
xor
test
aas
mov
add
fistps
add
les
mov
add
lret
sahf
out
popa
fs
imul
test
add
outsl
xor
jle
in
int
lock
fs
add
pop
and
mov
jne
lahf
jnp
cmp
fnstsw
and
mov
xchg
bound
push
lcall
add
jo
xchg
jb
mov
inc
add
loope
add
mov
add
inc
pop
sub
notb
mov
bnd
dec
inc
add
push
jbe
pop
outsb
fwait
push
cmp
out
pop
das
adc
push
or
jmp
clc
clc
or
daa
mov
mov
mov
add
jl
cmpsl
inc
and
xchg
push
xchg
add
insb
push
mov
outsb
sub
push
cmp
jno
gs
int
xchg
pusha
add
add
add
out
mov
fwait
sbb
pop
loope
cmp
add
test
stc
cmc
cmpsl
popf
push
lret
outsl
sub
test
fxch
cmc
add
dec
jbe
fwait
das
inc
fsub
adc
adc
xchg
andl
mov
adc
shlb
pop
int
and
add
mov
or
lods
aaa
popf
xchg
pop
ljmp
in
sbb
jg
pusha
add
add
cmp
pop
sub
or
lret
daa
adc
dec
cmovae
xor
mov
xorl
neg
sbb
repnz
sub
pop
call
dec
sbb
jb
aas
pop
mov
sahf
test
mov
adc
dec
js
imul
adc
sbb
mov
addr16
popf
dec
adc
loop
test
push
xchg
or
stos
nop
and
jecxz
mov
insl
xor
ds
imulb
or
add
dec
ja
enter
sbb
cmp
mov
fldenv
add
pusha
add
mov
stc
movb
xorl
dec
mov
add
loopne
xchg
mov
jl
call
mov
mov
mov
popf
or
rolb
sub
loop
popa
push
add
add
roll
cli
lds
enter
add
sub
dec
jbe
jp
add
add
pop
addb
cmp
les
sub
adc
mov
mov
movsl
jg
add
ds
in
mov
sbb
dec
jbe
mov
out
ror
in
mov
scas
daa
aad
loope
add
or
add
cmp
adc
sbb
dec
pop
cmp
clc
cli
mov
mov
add
cmp
rorl
add
sbb
xchg
jg
add
inc
add
stos
mov
lds
jge
add
mov
add
sbb
fstps
js
sub
mov
lods
pop
lea
add
outsb
enter
dec
add
rolb
das
xor
daa
aas
addb
adc
mov
adc
insb
or
pop
fistpl
ss
push
pop
lods
xchg
and
fwait
sub
in
mov
rcrl
sbb
les
cmp
dec
and
jns
outsl
or
inc
add
bound
dec
xchg
mov
cld
mov
test
mov
sbb
bound
stos
lea
adc
aad
repz
testb
pop
dec
sub
mov
cwtl
and
sbb
sub
dec
mov
in
fsubl
add
dec
push
add
xor
push
dec
lods
mov
and
mov
push
add
fcmovnu
add
sub
and
imul
stc
push
jo
pop
or
and
or
cmpsb
out
loopne
xchg
test
es
mov
addr16
add
add
test
sub
bound
stos
roll
xor
add
fisubrs
int3
push
cmp
shl
popf
in
bound
inc
mov
cmp
aam
call
or
mov
dec
movb
add
mov
jle
sbb
sub
fildll
dec
xor
imul
add
scas
dec
scas
mov
or
push
add
sbb
out
fsubrl
stos
pop
addb
xor
insl
jnp
xor
rcll
xor
push
adc
push
xchg
clc
dec
lods
test
add
mov
lock
fcoml
imul
popa
jmp
rolb
scas
xchg
mov
and
rcll
je
jae
mov
pop
outsb
jb
pop
inc
add
fwait
push
es
negl
add
push
pop
lods
pop
xor
popa
add
movb
inc
add
and
add
int
add
add
ss
add
les
push
xor
xchg
mov
add
mov
repnz
sub
jo
scas
xchg
fildll
dec
cld
fisubl
out
arpl
sahf
push
jle
mov
nop
jbe
add
test
std
jle
xchg
les
rolb
sbb
cmp
add
sahf
nop
loopne
fistpl
xorl
repnz
jb
mov
jnp
add
into
inc
add
inc
add
add
pushf
cmc
test
dec
out
test
or
adc
inc
data16
popa
dec
lock
data16
cmp
push
mov
popf
sbb
loop
sub
loope
adc
xchg
in
inc
add
xor
jne
roll
stc
pop
bound
cmc
push
cwtl
sbb
adc
jp
stos
pop
push
addb
out
mov
daa
xor
lods
mov
pop
fcoml
fucom
or
outsb
in
cmp
loope
push
mov
mov
xchg
or
mov
lcall
sbb
mov
and
ret
in
loope
xchg
clc
hlt
movsb
dec
movsb
leave
or
mov
rorb
iret
lock
and
inc
add
sahf
sub
call
arpl
pushf
lret
pushf
add
inc
add
outsb
xor
insl
movsl
mov
cmpsl
xor
addb
inc
jb
add
xchg
xchg
dec
pusha
add
icebp
xchg
lods
or
and
hlt
pop
dec
decb
mov
lock
pop
push
push
mov
add
mov
push
inc
lds
inc
pop
mov
stc
int
mov
add
in
push
xchg
lds
pop
insl
test
jl
adc
insb
aad
lea
jno
dec
mov
xchg
in
xchg
out
enter
pop
cld
pop
adc
jb
xchg
push
adc
cmpsb
dec
scas
mov
scas
cwtl
pusha
add
cmp
inc
not
adc
outsb
jmp
fdivrl
fidivl
push
roll
imulb
sub
sub
cmp
sbb
or
cltd
adc
jnp
jb
mov
jg
dec
push
jp
outsl
fldenv
bound
push
pop
mov
sub
sbb
add
rolb
nop
pop
lods
xchg
xlat
lds
fisubrs
clc
mov
mov
cmpsl
scas
xchg
xchg
dec
sarl
outsb
sub
xchg
cmp
test
xor
notb
dec
in
sbb
add
or
stc
addb
mov
mov
into
cmc
addb
fwait
adc
mov
ffreep
leave
adc
inc
jne
ret
aam
aad
add
lea
inc
add
push
movsl
push
pop
enter
sbb
aas
loop,pt
mov
add
flds
pop
push
pop
jne
iret
leave
pushl
aam
sbb
mov
and
loope
add
add
jbe
rolb
cs
rolb
int3
movsb
je
add
hlt
in
add
adc
stos
mov
movb
inc
add
popa
dec
aaa
inc
ret
nop
nop
jmp
lahf
xor
mov
inc
xchg
cmp
mov
scas
pusha
add
lahf
sub
ja
add
fidivl
and
adc
push
xlat
mov
mov
xor
add
xor
add
push
cmp
add
aad
add
lea
push
xchg
das
movb
or
in
jbe
incl
xor
xchg
arpl
dec
adc
add
cmpsb
push
add
or
fmul
jo
add
arpl
addb
xorl
add
rcll
jo
test
sbb
not
arpl
test
add
pusha
add
jecxz
sbb
out
jg
loop
sub
mov
cmp
mov
xchg
fsub
inc
in
add
gs
outsl
pop
mov
ljmp
in
jmp
mov
lea
fs
loop
nop
mov
add
add
sarl
int3
and
dec
push
out
dec
scas
push
cmp
fldcw
outsb
shll
movsl
pop
pushf
xor
push
pop
leave
das
and
sahf
lcall
je
or
sub
cmpsl
sbb
enter
mov
xchg
out
subl
sarb
aad
fs
out
fbld
into
pop
sahf
ds
inc
add
xor
addb
mov
add
push
aaa
gs
add
fs
and
xor
es
sti
jnp
cld
insl
jmp
fs
or
dec
je
push
cmp
rcrb
rolb
out
jae
mov
and
out
jg
add
out
pop
push
mov
pop
sub
addb
sub
test
rol
add
test
add
mov
jae
mov
and
pushf
sub
ss
in
add
lds
or
ffreep
add
popf
inc
push
dec
jnp
jge
add
repz
push
sbb
and
sbb
test
push
xor
out
jg
xor
fildl
jb
adc
addb
inc
pop
aas
dec
mov
pop
or
sbb
mov
loop
sbb
mov
in
call
push
jbe
stos
and
cmpsb
xchg
cs
add
xor
rclb
inc
add
or
test
jbe
stos
cmp
sub
sbb
je
add
sti
cwtl
rolb
lret
inc
add
data16
fs
add
hlt
iret
and
fidivrl
pop
jae
notb
loop
xchg
bound
inc
add
mov
fisubrl
cmp
jle
out
sbb
add
test
mov
rolb
sbb
inc
add
into
sbb
into
mov
add
jb
mov
imul
lret
jmp
pushf
push
in
movsl
out
dec
sbb
out
sbb
mov
adc
out
pop
jg
dec
and
ret
mov
mov
push
cmpsb
lahf
pop
xor
mov
add
stc
xor
cmp
xor
sbb
xchg
pop
icebp
ret
push
dec
ficompl
mov
xchg
pop
mov
dec
daa
jb
es
fsubrl
test
pop
xchg
mov
sbb
and
outsb
or
or
mov
cltd
aad
inc
popa
cs
add
sahf
sbb
ret
dec
mov
mov
fisttpl
addr16
mov
icebp
mov
pop
scas
mov
mov
push
jmp
leave
enter
cvtps2pi
and
push
daa
pop
scas
popf
lock
sbb
mov
jl
fsubp
pop
popa
loope
sub
cmp
pop
xor
sub
je
imul
ljmp
sub
lods
cld
xchg
sub
xor
enter
fwait
inc
add
jns
scas
jge
mov
mov
enter
add
pushf
test
xchg
add
xchg
or
cmp
pusha
add
lock
aas
stos
scas
popf
sub
ret
and
test
add
movb
jno,pn
sarb
jne
sbb
jle
je
addr16
addb
leave
jbe
jno
jge
add
imul
movsb
stos
notl
sbb
pop
mov
test
cmpl
add
fidivrs
mov
ret
adc
mov
out
lret
and
fbstp
ja
xor
mov
fnstenv
inc
add
ja
outsl
mov
fs
push
cmp
out
movsb
push
sbb
mov
imul
push
add
jo
push
ret
xor
repz
rcrl
jmp
jb
or
popl
xor
lea
scas
xchg
xchg
icebp
ret
movb
fldl
test
or
and
mov
cmpsl
cld
dec
lret
call
mov
jp
addb
xchg
jb
stos
negb
and
aam
pop
jg
sub
in
mov
sbb
add
mov
pop
push
mov
rcr
xchg
roll
idiv
mov
cltd
inc
mov
adc
xchg
imul
lahf
cmpsb
aam
scas
sub
movsb
test
repz
add
sub
and
ret
lods
and
nop
mov
add
push
mov
jge
xchg
jb
sbb
out
adc
mov
and
pop
lea
add
mov
movsl
sub
xor
inc
add
cmpsl
or
add
imul
fcompl
fcmovbe
xor
rcrl
add
xlat
ss
push
arpl
out
add
and
or
rcrl
addl
addb
popf
fdivrl
in
dec
sbb
shr
xchg
pop
rorl
add
add
add
push
add
shr
xchg
in
les
jl
inc
and
xlat
mov
loop
movntq
into
cmp
xchg
push
cs
shll
xchg
cmp
xor
and
sub
sarl
shr
lcall
jl
repz
add
adc
add
add
add
push
cli
std
lahf
inc
add
sahf
test
dec
push
andl
sbb
xchg
pop
pop
adcl
lea
in
shll
add
cs
ljmp
xchg
pop
hlt
out
lea
sub
inc
dec
bound
add
pushf
cmp
lock
jle
adc
leave
fiadds
mov
ret
popf
or
sbb
in
pop
push
cmc
roll
mov
scas
std
or
or
test
lret
cli
jne
in
les
cwtl
lds
ja
pop
add
std
icebp
fildl
dec
xchg
cmp
clts
add
xor
or
cs
inc
add
dec
jne
fcom
idivl
lret
out
lret
xor
add
and
cltd
shll
fiadds
mov
shl
fcmovnbe
jecxz
add
scas
xor
cwtl
push
add
add
mov
push
jmp
push
stos
aad
mov
les
or
fdiv
xchg
xlat
out
and
push
std
mov
mov
outsb
arpl
ficompl
int
loope
aaa
stos
inc
add
insl
lods
push
lds
add
leave
xor
pop
pop
and
mov
add
les
xor
fimull
ret
mov
xor
cmp
out
nop
test
addr16
popa
or
daa
add
popa
cld
mov
cmc
ret
jbe
dec
test
mov
jle
and
stos
adc
stc
test
push
fidivrs
inc
add
add
sahf
inc
add
lret
cmp
aas
mov
add
inc
add
cmc
jb
xor
test
mov
add
dec
or
or
repnz
ss
cmpsl
popa
out
add
inc
add
add
or
mov
insb
into
imul
icebp
aaa
sub
add
test
cwtl
push
jge
add
jne
jge
jp
insb
ja
push
add
jo
shll
add
in
daa
dec
sub
push
je
test
jae
cltd
xchg
xor
decb
add
pop
mov
add
xchg
inc
scas
mov
repz
addb
add
inc
add
sahf
xchg
xchg
pop
inc
add
repnz
inc
sbb
sub
rolb
pop
fucomi
xchg
popf
and
dec
stc
jbe
pop
fdiv
in
fwait
mov
sub
sub
push
xor
xor
addr16
adc
mov
xor
xor
and
jmp
pop
lahf
addb
repz
fsubs
fldenv
add
fstpl
sub
in
mov
xchg
aaa
sub
sbb
lods
movsl
dec
mov
sub
sbb
lods
pop
shlb
xchg
or
dec
imul
adc
jb
xchg
mov
mov
movsb
push
lret
lahf
or
aaa
aaa
adc
mov
faddl
add
lds
adc
movsb
lret
testb
push
mov
lcall
bound
push
add
mov
add
cmp
pushf
xchg
in
cmp
or
les
lds
mov
mov
cmp
mov
insb
sbb
cld
sbb
cmp
mov
outsb
inc
add
mov
push
mov
xlat
dec
pop
and
fisubrl
jno
xor
and
mov
pop
cwtl
loopne
push
xor
lahf
inc
add
imul
aaa
pop
jp
mov
ret
leave
adc
push
lret
fisubrs
aas
cwtl
and
mov
push
mov
stc
out
add
shl
sub
dec
test
ffreep
inc
jbe
pop
add
and
daa
push
pushf
in
lret
mov
test
ds
cmp
scas
pcmpgtd
add
add
shll
add
pop
adc
jo
mov
enter
push
xor
dec
rolb
les
dec
inc
in
test
sti
lock
push
sbb
jbe
inc
outsl
adc
or
push
xchg
sahf
jg
mov
mov
and
push
scas
sbb
aad
mov
je
leave
add
inc
scas
or
inc
sbb
mov
cmpsl
xor
repnz
in
movsb
jbe
mov
inc
add
mov
outsl
cmp
test
loop
pusha
add
movb
add
sbb
pop
jmp
sbb
pop
inc
add
push
inc
add
sbb
lret
fcomps
adc
stos
dec
leave
js
mov
imull
lret
icebp
mov
rcll
scas
decb
lcall
aaa
sbbl
mov
inc
fildl
sarl
pusha
add
das
xor
outsl
jns
and
or
adc
add
pop
cltd
pop
xchg
pop
jp
dec
sbb
xchg
push
push
xor
add
and
ja
ret
add
outsb
outsb
fcoml
inc
lret
sbb
stc
insb
shll
int3
jmp
pop
mov
push
lret
or
add
xor
enter
mov
add
daa
fs
lret
ficomps
jg
cmc
out
cmpl
dec
in
pop
jge
rolb
push
scas
rcl
add
push
sub
loopne
pushf
push
and
mov
std
arpl
add
jne
mov
rolb
aam
test
sub
outsb
sub
jno
pop
int
xchg
xor
add
andl
sub
jbe
add
mov
ja
adc
js
ds
rcll
imul
pop
jb
cmpsb
push
add
imul
push
incb
xor
lahf
out
xchg
add
fists
stos
data16
cmp
push
mov
cmp
cmp
movsb
xchg
xchg
cmp
mov
repnz
repnz
imul
xor
lea
cmp
les
mov
xor
test
imul
sub
cmp
add
mov
shl
rcrb
cld
push
insb
adc
xchg
std
jg
shlb
push
mov
sub
mov
jle
sbb
shl
in
add
add
jmp
adc
jle
jo
enter
or
add
xchg
ret
jg
nop
xchg
clc
out
xchg
dec
inc
dec
mov
adcl
test
clts
add
mov
inc
add
add
sbb
pusha
add
das
jae
xor
dec
mov
lahf
aas
xchg
or
cmc
addr16
cs
cltd
iret
das
aaa
pop
mov
adc
movb
hlt
dec
in
icebp
int3
and
add
fsubrp
addb
out
xchg
scas
imul
inc
xchg
fstps
push
add
add
xor
sbb
aam
js
cmpsl
cli
xchg
pop
sub
cmpsl
dec
es
add
add
cld
enter
or
les
cmp
mov
lods
add
pop
dec
cwtd
out
cmp
add
inc
add
icebp
insl
arpl
adc
call
test
insb
jg
cmc
sbb
add
dec
cmpsl
frstor
inc
add
mov
imul
fimull
clc
add
cmp
add
mov
arpl
push
inc
insl
or
lcall
movsb
mov
ret
inc
add
pop
xlat
inc
ret
jbe
das
out
ret
aam
push
iret
aam
add
sbb
shl
pop
adc
push
add
add
add
pop
scas
icebp
jmp
add
out
cld
add
add
add
inc
add
pusha
add
inc
mov
and
mov
xor
ja
or
dec
sahf
push
stos
cmp
add
sbb
or
sub
popf
cmpl
stc
push
leave
sahf
rol
add
popf
mov
aad
add
mov
dec
jle
add
adc
shl
sbb
repnz
xchg
das
test
add
call
bnd
data16
ret
addb
bound
push
scas
xor
daa
call
mov
outsl
ss
movsl
ljmp
dec
jns
insb
and
lods
call
addb
std
int3
jnp
mov
or
rolb
inc
add
push
inc
add
add
add
mov
xor
adc
add
shll
adc
cmpsb
jae
push
pop
xchg
add
pop
popa
cmp
cmp
xchg
mov
sbb
push
mov
adc
mov
fnstenv
xlat
or
or
push
mov
adc
pop
sbb
cwtl
stc
or
std
push
mov
jp
jbe
sahf
sahf
outsl
into
cmc
fimuls
sbb
popa
bound
pusha
add
mov
add
cmpsb
jnp
jo
push
mov
out
int3
addl
out
add
insb
sbb
or
push
lods
into
pop
xor
sub
add
outsb
imul
leave
mov
or
bnd
iret
bound
xchg
fildll
push
call
mov
outsb
adc
add
sti
and
ret
pop
int
jle
mov
test
dec
lahf
mov
icebp
stc
xchg
mov
data16
mov
scas
adc
je
xchg
jg
push
xchg
sbb
mov
repz
push
aam
fldcw
int3
insb
call
mov
pop
cmp
push
xlat
les
xor
mov
sbb
iret
scas
sub
lcall
sbb
popa
mov
fisubrs
lret
add
out
dec
js
sbb
mov
mov
add
or
mov
sbb
add
dec
xor
push
cmp
xor
jnp
lods
mov
aam
insb
addb
mov
add
adc
add
int3
gs
loop
pop
or
testb
repz
das
xor
jbe
xchg
enter
fisubl
adcl
and
test
jg
sub
gs
cwtl
idivb
xchg
test
sbb
ds
sbb
movsb
das
mov
sub
loop
and
xlat
scas
push
adc
int3
pop
cmp
out
ret
out
addb
rol
add
ss
jno
inc
add
jo
mov
and
mov
cmp
cli
lret
sbb
cld
inc
add
rolb
push
movsl
nop
stc
push
inc
pop
pop
das
into
cmpsl
addb
lcall
pop
mov
faddp
xor
gs
xchg
in
push
add
test
xchg
mov
repnz
loope
mov
mov
jl
dec
hlt
sub
or
and
pop
push
mov
loope
sbb
sarb
in
xor
xlat
push
aaa
int
cmp
or
fnstsw
push
add
add
sbbl
loope
push
aas
addb
mov
inc
sbb
sub
subl
adc
fwait
int
sahf
push
sub
mov
into
test
or
add
mov
sub
dec
and
mov
leave
dec
jp
add
or
addb
addb
fistps
mov
lahf
mov
xor
lods
jno
cld
jp
and
adc
inc
add
ja
call
push
jno
or
inc
push
in
lods
mov
outsb
test
or
stos
lcall
and
dec
sti
lds
mov
mov
sub
and
add
addr16
mov
pop
add
std
lds
add
inc
add
xchg
inc
pop
pop
jbe
adc
xchg
mov
iret
fdivl
psrlq
add
aad
xchg
inc
add
clc
push
xbegin
ss
pop
lret
mov
add
sbbl
imul
dec
xchg
cmpsl
mov
push
test
subl
add
add
pop
xor
pop
mov
pop
dec
lods
mov
test
movb
sub
dec
sbb
test
addb
cli
js
movb
leave
xor
xor
sub
mov
ffreep
push
pop
mov
mov
or
push
loopne
leave
xchg
fsubr
decb
pop
popf
mov
decl
jb
inc
mov
jge
jle
push
inc
jb
addb
jle
mov
cld
aad
cmp
inc
lea
add
jge
mov
push
aaa
loope
and
adc
cmp
das
sbb
lahf
inc
jmp
xchg
jae
adc
mulb
enter
pop
or
imul
out
leave
shll
ja
aaa
out
push
add
mov
jge
xchg
cmpsb
fstpt
pop
mov
idivl
sub
loop
sarl
mov
std
call
cs
push
mov
add
rolb
push
in
jae
pop
loop
cwtl
popl
movb
adc
rolb
in
adc
mov
add
dec
push
movsl
das
and
rorl
xchg
lods
aam
ret
loope
pop
rcl
shll
and
jnp
insb
int3
popf
dec
pop
fnsave
sub
fbstp
cmpsb
add
dec
cmc
fcmovu
pop
les
scas
add
add
fsubr
mov
fsts
clc
dec
jae
add
pop
and
jl
inc
sub
add
push
je
clc
mov
int3
mov
push
mov
xchg
lock
ret
ja
mov
aaa
push
push
rorb
loopne,pt
xor
fmull
adc
push
cld
sub
in
and
addb
addb
sub
mov
sahf
cmp
or
add
orl
or
mov
andl
bound
pop
jne
addr16
xor
dec
xor
shl
shlb
pop
mov
out
js
cmp
clc
js
inc
mov
fnsave
rorb
push
inc
sbb
xor
dec
xchg
mov
push
dec
cmpsb
inc
add
xchg
loope
pop
push
cmc
gs
inc
cmp
sub
mov
shrl
shrl
or
in
out
stos
pusha
add
jne
imul
bound
mov
test
imulb
sub
mov
aad
add
add
xchg
mov
add
jno
jge
dec
xchg
add
adc
jae
add
lods
sbb
lods
mov
xchg
fucomi
fwait
mov
add
adc
scas
arpl
xchg
push
mov
hlt
pop
push
cltd
dec
and
mov
mov
fsubp
fs
pop
dec
pusha
add
inc
movsb
test
aam
cmp
xor
xor
bound
xacquire
lds
xor
loopne
add
mov
and
loop
xchg
or
and
xchg
lods
sbb
push
add
add
xchg
or
add
out
div
or
dec
inc
add
xor
ffreep
add
xor
mov
int
jp
movsb
testb
in
add
ficoms
xor
adc
addb
popa
addb
scas
pushf
js
or
sti
stos
inc
xor
mov
shll
mov
outsl
mov
add
scas
xor
xchg
out
push
dec
ret
add
clc
jge
or
xor
and
sti
insb
sub
and
cld
xchg
inc
sub
xchg
lahf
dec
or
sti
repnz
push
out
jge
adc
sbbl
test
jne
cmpsb
adc
aam
xchg
inc
add
mov
add
cmc
mov
mov
pop
lock
jge
push
sub
ror
aaa
xchg
mov
out
aas
sub
xlat
mov
test
jb
int
sbb
out
test
rolb
adc
xor
mov
movsb
push
stos
lock
mov
and
xor
into
sbb
in
inc
inc
add
adc
pusha
add
push
popa
xchg
mov
repz
add
adc
je
cmpsl
addr16
adc
cmp
push
pushf
fwait
loope
adc
fs
lods
xor
add
xor
shrb
or
cmpsb
lcall
cmp
fbld
stos
popf
les
pusha
add
imul
cmp
mov
push
aam
sbb
dec
lahf
mov
xchg
jno
shll
mov
dec
mov
in
pusha
add
adc
lcall
pop
addb
jg
popl
add
leave
and
shlb
mov
jne
and
add
pop
push
xchg
addb
xchg
rsm
insb
insl
pop
shl
popf
xchg
pop
dec
xchg
sarl
add
jp
pop
test
popa
call
sbb
loope
add
mov
push
or
xlat
add
add
shrl
pushf
inc
cld
cld
cli
cmp
pop
and
movsb
adc
idivl
xchg
insb
jecxz
repnz
cwtl
out
jl
push
mov
imul
loop
inc
lods
lea
inc
add
cmp
inc
add
push
jl
jo
jnp
cmpsl
lock
repnz
orl
add
cld
jmp
aas
adc
mov
int
sahf
mov
adc
ljmp
addb
mov
mov
xchg
inc
cs
add
sub
jne
add
aad
js
mov
enter
fs
shrl
outsl
fstl
xchg
jne
add
sbbl
pop
pushf
dec
cmp
add
cs
add
adc
faddl
mov
dec
inc
rcr
add
pop
out
mov
test
inc
add
or
xchg
pop
push
jae
xchg
cwtl
push
insb
jae
ljmp
ljmp
fdivrs
flds
mov
push
add
and
pushf
mov
jg
jge
ret
xchg
outsb
out
andl
and
add
jg
ljmp
jne
sbb
push
xchg
shl
idivl
add
pop
outsb
clc
ss
ds
cmp
mov
fucomip
mov
add
lahf
or
enter
xchg
inc
add
arpl
pop
ret
xlat
sub
fsubrs
jecxz
sbb
cwtl
test
jmp
push
sub
add
add
jbe
push
adc
pop
or
test
xchg
inc
add
mov
dec
imul
dec
out
xchg
fstl
fstps
movb
aam
and
jbe
ss
xchg
cmp
int
or
pop
mov
xlat
mov
notl
mov
scas
push
stos
cmp
xlat
mov
testl
pusha
add
outsl
push
and
mov
jecxz
cli
js
ds
mov
adc
ds
sub
jle
lcall
icebp
jnp
pop
pushf
shll
aam
jp
pop
sbb
out
aaa
and
add
imul
fidivrs
inc
inc
add
and
outsl
jno
shll
jge
sbbl
lea
mov
add
xor
cld
mov
subl
adc
xor
mov
add
rolb
mov
test
adc
add
dec
dec
sbb
dec
pushl
fisubrl
fwait
iret
cmp
or
out
mov
cld
pop
je
xchg
cmp
pop
ret
mov
sbb
pushf
mov
in
lret
cmc
mov
jo
shll
cmpsb
push
shlb
addb
stos
jge
xchg
add
pusha
add
and
add
add
push
jmp
call
jge
push
daa
hlt
mov
lret
notl
pop
out
sbb
add
add
mov
outsl
gs
out
jnp
nopl
add
sub
mov
and
data16
rolb
mov
les
or
cmp
sub
test
addb
jno
jl
add
ret
adc
int
into
mov
add
adc
add
xlat
popa
jmp
add
add
cmp
jb
jmp
add
rcrb
not
lods
scas
pop
repz
add
mov
mov
lods
cmpsb
clc
add
cmp
pop
sbb
addb
and
cmpsb
mov
xchg
insl
lcall
sub
aad
add
jo
clc
adc
movb
mov
or
add
add
pop
into
add
xchg
pushl
sub
jge
aad
add
in
into
stos
repz
arpl
pop
das
sub
sub
lcall
mov
mov
add
add
add
xchg
ret
mov
or
inc
mov
jno
mov
les
push
testb
out
sub
insl
js
dec
outsb
push
push
pushf
sbb
mov
gs
js
iret
das
pop
xchg
icebp
pop
mov
add
dec
sub
ret
push
int3
xchg
in
test
lock
mov
addb
mov
movsl
popf
pushf
sbb
push
add
aas
icebp
jp
fmuls
add
fimuls
dec
test
xor
sub
xor
push
inc
and
in
fdivrl
movsb
sbb
xor
add
addb
xchg
aad
scas
xlat
pop
mov
cmovp
cs
aam
pop
das
insl
out
loop
xchg
and
sbb
jecxz
data16
pusha
add
lds
int
test
xchg
lods
lods
lahf
sub
popf
out
add
xchg
mov
or
dec
sbb
into
inc
add
inc
lds
js
stos
inc
add
push
mov
test
add
add
jb
xor
into
mov
or
jp
inc
arpl
xchg
aaa
cmc
sub
mov
adc
pop
and
fildll
mov
fldcw
sarl
loope
pop
mov
jae
es
sub
or
jnp
add
inc
xchg
sbb
ds
fmull
dec
jmp
cwtl
mov
xchg
adc
scas
stos
dec
test
cmp
fstpt
in
ljmp
jle
lods
inc
add
idiv
es
mov
xchg
mov
in
dec
inc
adc
imul
bound
push
mov
movb
push
fisubrl
sbb
pop
push
shll
insb
das
adc
fcoms
aam
cmp
or
data16
cmpsl
xchg
rcrb
mov
cmpsl
and
sbb
and
and
loopne
hlt
cmpsb
dec
cld
cmc
jnp
sbbl
inc
push
add
mov
push
sbb
es
filds
inc
add
xchg
cmpsb
test
hlt
mov
stos
iret
cmpsl
xchg
jae
or
jecxz
and
mov
jle
call
mov
pusha
add
inc
add
cs
aas
std
test
push
rolb
add
clc
mov
adc
adc
mov
out
push
or
sbb
add
jb
add
jg
cltd
dec
mov
xchg
in
inc
push
inc
fwait
mov
mov
dec
jle
add
or
int
pop
in
out
pop
cmc
cs
pop
pop
or
imul
mov
aaa
mov
clc
mov
dec
sarl
add
imul
popf
pop
push
push
rolb
clts
add
xor
mov
push
fiaddl
jo
nop
mov
les
and
mov
dec
ret
push
push
pop
repnz
sahf
adc
xor
out
add
aam
outsl
stc
sti
outsb
jge
sub
out
clc
jbe
decl
add
sbb
push
add
add
insb
cmpsl
cmp
ljmp
push
out
shrl
cmpl
mov
cwtl
cmp
add
outsl
addr16
xor
dec
gs
bound
ja
mov
out
dec
in
sarl
dec
into
int3
mov
xorl
mov
into
sbb
push
add
jo
je
mov
js
xor
cmp
iret
jg
sbb
xchg
cltd
inc
sub
xchg
inc
cs
mov
test
or
cmpsb
or
loop
sbb
sbb
add
sti
movsb
test
addr16
dec
sti
orl
mov
rolb
iret
fwait
add
add
fsub
push
xor
aas
sub
add
jp
dec
jg
or
lea
jbe
mov
inc
xchg
fsub
aad
jo
xor
jl
test
add
insl
test
mov
fisubrl
sub
mov
sub
add
push
arpl
mov
addb
add
pextrw
mov
dec
sub
jae
push
jns
lods
cmp
add
push
adc
push
in
sub
gs
or
test
test
daa
dec
shll
adc
jno
mov
or
add
cmp
add
sbb
jge
outsb
icebp
mov
add
or
add
push
xchg
test
add
inc
add
and
in
lods
jnp
aaa
pop
push
and
prefetcht2
pop
inc
add
jmp
frndint
inc
arpl
lret
add
and
ljmp
in
push
and
add
inc
xor
adc
lahf
jge
sbb
xlat
loopne
add
out
add
or
sbb
add
xchg
mov
mov
add
mov
cld
test
push
outsb
scas
aas
lcall
or
out
testb
push
mov
pop
scas
jmp
pop
arpl
imulb
push
jns
adcl
fsubrs
dec
sbb
xor
test
push
lahf
clc
sbb
mov
test
cmp
es
xchg
cmc
shll
in
pop
inc
xchg
fs
scas
inc
add
sbb
mov
push
add
pop
xchg
cmpsb
std
movsl
repz
dec
add
mov
cmpsl
cld
add
mov
iret
outsb
stos
pop
cld
dec
sbb
rcr
dec
xchg
xor
add
cmpsl
mov
mov
jmp
inc
add
out
push
or
mov
cmp
add
sti
mov
or
inc
add
cld
pop
aad
repnz
push
aam
mov
xchg
pusha
add
sbb
add
add
cmp
in
ret
enter
ljmp
adc
xor
lea
sub
xchg
cmpsb
lock
cmc
fnstenv
xchg
pop
adc
or
hlt
and
add
imul
leave
or
pop
fisttpl
add
loopne
fmul
popf
mov
inc
add
dec
insl
aad
dec
std
repz
cmp
adc
sub
xchg
adc
push
std
pop
shll
lcall
push
insb
in
in
dec
cmp
loope
int3
add
pop
shll
sbbl
cli
jg
aad
push
aad
add
mov
jo
add
mov
fsubs
movsb
js
scas
mov
xchg
adc
xor
in
push
mov
add
add
popa
xor
fistps
jb
cmc
enter
addps
aas
fdiv
ret
xchg
gs
xchg
ja
cwtl
xchg
adc
out
popf
je
adc
add
test
test
mov
and
fildll
adc
ret
add
pop
jne
add
js
outsb
jo
bnd
aas
or
icebp
xchg
add
add
fcmove
fdivs
addb
mov
movsl
sub
aas
stc
fdivrl
sub
jl
jecxz
pop
cmp
add
in
out
test
mov
test
pop
popf
jne
ljmp
push
scas
cld
int
popf
inc
add
add
fnstsw
into
pop
outsl
scas
iret
shlb
xor
add
bound
xor
sidtl
inc
cmpsb
mov
xchg
sbb
test
or
stc
mov
popa
sbb
inc
add
js
out
movsl
dec
int3
xor
pop
decl
clc
in
adc
xchg
add
andl
and
stos
fwait
pop
inc
or
into
leave
aam
mov
movsl
fimull
mov
push
xchg
cmp
cltd
add
jmp
enter
lcallw
lods
jbe
shll
scas
jno
mov
sub
jmp
inc
scas
leave
mov
ds
cwtl
sti
cmp
inc
add
cmc
stc
mov
addb
xchg
into
shrl
pushf
dec
jae
stos
and
pop
popf
and
clc
adc
jb
mov
pusha
add
adc
out
lret
nop
mov
sub
addr16
cmp
adc
addb
mov
lds
inc
add
mov
jl
add
dec
push
pop
dec
xchg
cltd
or
cwtl
ret
mov
aad
push
in
test
jbe
sahf
jmp
and
hlt
leave
lret
or
shlb
shlb
mov
imul
add
scas
xlat
push
add
sti
adc
mov
push
and
and
or
lahf
inc
cmpsl
mov
add
out
test
mov
mov
inc
add
faddl
sbb
push
adc
add
daa
and
shlb
cmc
iret
mov
xor
test
add
add
adc
adc
cld
jb
daa
jp
hlt
dec
scas
stos
lret
push
mov
mov
and
adc
lea
test
add
js
aam
rcr
pop
push
adc
inc
pop
out
iret
jg
flds
add
add
or
cwtl
push
inc
add
sub
mov
arpl
pop
bound
jns
push
in
jb
dec
aad
js
rorb
push
add
sahf
mov
add
in
adc
sub
jecxz
pop
mov
cmpsl
cltd
dec
sub
add
in
leave
mov
out
lret
mov
ljmp
insl
push
push
hlt
dec
addb
push
cmpsl
fistl
js,pn
mov
addr16
add
dec
mov
negl
pop
sbb
cmpsb
vpaddd
pop
adc
pop
scas
fidivs
add
lcall
and
and
push
or
push
sti
or
test
cmc
pushf
pop
cmpsb
addb
add
xor
push
pop
jbe
shl
das
divb
clc
arpl
movsl
jbe
inc
data16
jl
xor
mov
pop
jns
sub
add
mov
xlat
adc
cltd
adc
pushf
jb
jnp,pt
jb
test
rolb
add
add
or
repnz
faddp
scas
aam
cli
add
insb
dec
mov
inc
xchg
add
pop
in
les
inc
mov
or
insl
sbb
jmp
daa
sub
outsb
in
lahf
popa
xchg
pop
fimuls
and
and
insl
ret
add
mov
add
push
out
sbb
inc
add
mov
or
jl
mov
shr
es
adc
leave
aas
lock
fimull
push
add
int3
ds
cmp
addb
out
xchg
fs
fisubs
xor
add
add
orl
out
mov
xor
arpl
add
adc
add
add
mov
add
sbb
mov
popf
sub
sub
out
or
dec
arpl
xchg
push
mov
pop
sbb
lret
movsl
icebp
cwtl
mov
test
imul
mov
sub
daa
imul
pop
pop
jo
push
add
repz
add
mov
push
xchg
std
mov
or
cmp
out
add
inc
outsl
lods
dec
mov
movsb
jecxz
cmpsl
fistpll
dec
pop
sahf
jmp
cli
addb
cmc
aad
mov
mov
add
or
jg
loopne
add
add
rolb
addr16
imul
hlt
outsb
mov
sbb
mov
mov
scas
movsl
int3
sbb
dec
cwtl
pop
mov
popl
dec
jne
lret
add
push
inc
add
notb
adc
ljmp
stos
fcmovbe
push
add
addb
imul
push
adc
cli
inc
add
stc
mov
jmp
xchg
movsb
fisttps
mov
ret
rcr
jecxz
and
dec
out
popf
adc
mov
push
mov
add
stos
jle
sbb
dec
and
and
mov
add
mov
cmpsl
fstpl
mov
push
js
xor
rolb
add
xchg
sub
sub
mov
hlt
add
add
jmp
cs
jnp
andl
xor
xor
add
push
daa
pop
iret
cmpsb
adc
aaa
addb
stos
xchg
movsb
and
testl
xor
add
push
das
mov
and
push
ljmp
cltd
dec
and
mov
out
dec
mov
int3
inc
add
pop
es
inc
add
mov
xchg
xchg
dec
loop
dec
lods
push
push
and
stos
xor
or
movsb
dec
mov
adc
mov
or
das
lcall
in
dec
fsubrs
push
in
movsb
clc
jle
and
add
shlb
loopne
sub
cmpsb
mov
inc
add
cmp
inc
cmpsl
adc
pop
imul
push
push
jge
aad
cs
daa
aas
ror
pop
mov
jnp
push
insb
shlb
mov
sti
mov
enter
bound
flds
enter
aaa
in
add
jecxz
jae
stos
xchg
sbb
pusha
add
xor
mov
dec
int
movsl
addb
pop
push
or
fildll
mov
addb
pop
push
fs
fimuls
icebp
xor
add
inc
add
push
das
movb
add
sbb
add
sbb
add
cmc
std
cltd
mov
rcl
inc
mov
dec
ljmp
mov
adc
aas
mov
dec
push
arpl
sub
rcrl
popf
cmp
rcr
jge
sar
jno
inc
add
add
mov
test
dec
push
mov
mov
test
add
push
arpl
dec
mov
add
add
mov
cld
and
out
scas
jmp
push
add
out
bswap
mov
xchg
jl
ds
sub
rorl
fs
ret
inc
dec
jmp
sahf
pop
xor
bound
xchg
daa
ds
mov
fwait
mov
sub
adc
clc
stc
shrl
xor
dec
mov
cmp
dec
xlat
xchg
inc
mov
and
addb
pushf
sahf
sti
sbb
add
icebp
push
pop
jbe
mov
movb
add
mov
sbb
std
mov
xchg
adc
shrb
adc
add
fsubrl
pop
mov
fildll
popa
sbb
aas
inc
add
shl
fisttpll
sbb
push
mov
dec
ud1
xchg
inc
mov
sbb
imul
add
push
add
je
lods
mov
enter
stos
fdivs
addb
add
add
jns
xchg
test
pop
mov
bound
imul
adc
mov
jae
or
insb
cmc
rolb
xchg
inc
xchg
out
inc
add
cmp
jle
leave
add
sub
lock
shlb
xor
lods
sub
ljmp
or
and
inc
mov
inc
add
leave
lods
mov
sub
xor
cld
mov
add
test
jmp
cwtl
inc
add
sbb
mov
sbb
push
jp,pt
xor
add
iret
loope
jg
add
cmp
lret
xor
and
data16
xchg
push
add
adc
push
pop
lods
mov
push
fsubs
add
fisubrs
addb
jmp
push
fldt
mov
pop
mov
aad
mov
inc
add
push
add
adc
lcall
or
and
fstl
dec
outsl
fidivs
dec
fisubrl
mov
or
addr16
push
mov
dec
adc
jmp
ljmp
pop
dec
xchg
movb
scas
les
inc
add
insb
addr16
jmp
jae
mov
lds
stc
cmp
aam
mov
pop
fs
insb
sbb
push
push
subl
pushf
mov
jno
pushf
sarl
or
jge
scas
cltd
in
dec
std
sbb
adc
and
ret
fnstenv
fldenv
rol
ret
in
stc
or
dec
pop
icebp
xlat
cmpsb
ja
xchg
add
imul
ljmp
cmpsl
ss
daa
shl
xchg
sbb
lds
popa
dec
add
cmp
cld
jle
sub
xor
call
or
adc
lcall
pop
xchg
push
jl
add
movb
or
mov
push
add
mov
mov
mov
add
nop
inc
add
mov
decb
std
pop
dec
in
pop
daa
je
test
rolb
add
and
mov
mov
pop
dec
sbb
inc
add
pop
dec
jnp
adc
mov
insb
into
sub
addb
pop
pop
sub
es
or
mov
stos
inc
add
enter
add
mov
lock
add
pop
andl
stos
pop
iret
push
push
insb
jmp
jae
test
lods
daa
divps
cld
je
gs
xchg
pushf
in
loope
add
pop
testl
xor
add
or
cld
or
pop
out
jb
pop
mov
es
outsb
adc
pop
push
xchg
mov
rorb
scas
in
pop
aaa
dec
lret
lds
nop
add
dec
jo
add
popf
cmp
out
mov
int3
push
inc
add
pop
pop
in
into
add
mov
movb
sarl
les
stc
cmp
sub
movsb
scas
and
add
adc
inc
xchg
cli
sub
sub
lret
out
daa
sub
dec
xchg
pusha
add
sbb
cmp
adc
dec
arpl
mov
push
push
sub
lods
mov
cmp
out
outsl
mov
test
imul
jno
sar
jnp
loope
or
faddl
add
bound
xchg
lds
enter
or
cli
es
mulb
add
mov
test
pop
sbb
inc
xor
repnz
or
shr
das
pop
movsl
add
stos
pop
mov
aam
das
sbb
ror
call
das
fldcw
iret
cwtl
nop
jne
add
ja
lahf
add
outsb
add
add
add
imul
xor
sub
lahf
push
xchg
sub
mov
cmpsb
mov
mov
fs
stos
xor
add
int
push
push
dec
rcll
lret
mov
mov
addb
lret
lods
cmpsb
test
jl
iret
mov
call
jge
push
adc
gs
arpl
je
cltd
imul
movb
mov
push
insb
int3
pop
mov
into
mov
shlb
add
adc
les
mov
xor
push
adc
js
mov
mov
in
fadd
insl
cmp
cmc
dec
jnp
stos
cli
fadds
cmp
mov
loop
mov
loope
dec
fucomi
movsl
and
jl
add
test
jge
cmp
std
movb
out
cmpl
add
cwtl
scas
jp
mov
lea
add
arpl
mov
insb
mov
jge
mov
imul
inc
mov
xor
lods
add
xchg
cmp
das
in
adc
jb
and
add
sahf
lcall
loopne
lcall
sub
nop
subl
rcrl
imul
add
add
sub
add
addb
cmp
jnp
cld
insb
cmpsl
addr16
popf
movb
std
sbb
sub
nop
jl
ss
mov
ret
add
add
rcr
loopne
push
fs
imul
iret
mov
inc
add
mov
mov
nop
jge
fisttps
mov
addl
pop
jbe
xchg
icebp
dec
bound
jnp
jmp
add
mov
das
das
mov
xchg
inc
popa
adc
movb
es
jmp
jo
data16
push
add
jnp
mov
mov
mov
dec
cmpsb
sbb
das
jg
ja
sbb
lcall
add
aas
cmp
shlb
aad
add
insl
inc
add
mov
lcall
jo
xor
int
loope
or
sbb
testl
push
test
push
rolb
jle
fcoml
in
xchg
stc
xchg
dec
jbe
sub
pop
mov
jo
inc
scas
jo
pop
jae
cmp
mov
pop
xchg
aaa
popa
mov
push
xchg
add
addb
sbb
add
loopne
cmpsb
pop
sahf
jecxz
xchg
cmpsb
mov
stc
jecxz
data16
and
lods
lods
and
xor
mov
jp
pop
mov
fwait
data16
sub
xchg
div
sti
xor
lods
mov
out
call
dec
sub
mov
popa
loopne
add
add
fdivrs
lea
and
mov
jg
popf
insb
mov
jb
in
call
insl
fistpl
loop
rcr
mov
ret
pop
pop
dec
adc
adc
and
xchg
and
pop
jo
add
mov
clc
fsubl
shrl
in
dec
push
dec
mov
flds
outsb
test
scas
outsb
xchg
mov
pop
jl
call
xor
clc
jmp
faddl
adc
mov
scas
push
add
xor
out
push
sahf
mov
adc
pop
cwtl
xor
in
add
sub
pop
sbbl
add
and
add
xchg
xchg
add
mov
jp
inc
add
outsl
inc
nop
aas
rolb
jb
add
push
mov
add
mov
cwtl
addr16
sti
adc
scas
bound
mov
mov
cwtl
movsb
xchg
push
mov
dec
mov
xchg
jnp
cmp
adc
or
outsb
stc
rolb
add
ljmp
push
sub
inc
add
lcall
push
lret
lahf
sbb
into
adc
insl
addb
add
repz
pop
xor
cmpsb
insl
les
or
enter
ds
out
repnz
jns
mov
fwait
add
fwait
out
or
pop
mov
insb
imul
push
outsb
sbb
scas
mov
outsl
cmp
add
dec
fmull
add
js
add
jnp
sub
jg
add
and
mov
loopne
mov
add
cs
addb
add
repnz
and
pushf
mull
mov
add
pop
and
insb
in
aaa
js
jecxz
dec
ss
adc
movsl
jmp
add
int
dec
rolb
add
leave
inc
add
cmc
sub
mov
je
fstpl
lods
sahf
pop
mov
ljmp
push
sbb
cmpl
test
jb
add
add
cld
cmpsb
pop
push
jb
xor
sbb
fprem1
xor
mov
xchg
stos
int
les
aas
dec
inc
add
pop
addb
or
std
adc
mov
stc
xchg
push
cmp
push
jnp
dec
mov
aaa
scas
stos
fsubl
mul
inc
add
gs
jo
rcrb
stos
divb
lahf
inc
add
icebp
sbb
lods
xchg
in
fdivl
lds
inc
repz
rolb
inc
add
js
mov
push
stc
shlb
xlat
and
pop
mov
fadds
cwtl
or
cmp
rolb
or
push
rol
cltd
mov
xchg
test
inc
add
ret
add
pop
iret
popf
jae
std
in
pop
jno
call
or
and
push
test
add
mov
pop
mov
add
cwtl
ds
adc
mov
add
xchg
cmp
scas
out
add
fcmovb
add
leave
addb
loop,pn
fcmove
push
fldcw
xchg
scas
data16
jne
shlb
add
rclb
add
jg
scas
cmc
add
test
arpl
loopne
sarl
xchg
xor
sub
shl
jnp
enter
xchg
dec
xchg
ja
pushf
push
ja
arpl
push
dec
mov
xchg
cmpsw
jbe
sub
dec
add
bound
in
cld
out
ss
hlt
xor
xchg
dec
dec
jg
sub
push
add
cltd
arpl
iret
es
jb
cmpsb
cwtl
adc
add
lret
rcrb
inc
add
add
sti
pushf
jne
sbb
lods
jg
les
loop
sub
mov
inc
add
add
nop
add
rcrb
nop
jb
das
add
and
cmp
cld
jmp
std
add
roll
mov
jmp
add
xlat
add
cld
pop
push
mov
xchg
ret
add
add
iret
add
nop
cld
jmp
xchg
add
add
mov
stc
nop
jb
loopne
inc
fisttpl
cld
xlat
inc
add
popf
jecxz
jne
rep
nop
cld
jmp
pop
xlat
add
imul
stc
nop
jb
add
add
ficoms
mov
cld
jmp
xabort
inc
add
mov
stc
nop
jb
and
mov
push
mov
xchg
ret
add
pop
xchg
stc
nop
jb
add
movb
lret
mov
popa
add
mov
xchg
ret
das
pop
ljmp
mov
add
push
add
add
xchg
add
shll
aas
test
nop
cld
jmp
insl
addl
add
xor
or
stc
nop
jb
add
cld
decl
stc
nop
jb
jmp
outsl
add
movsb
nop
cld
jmp
insl
lret
mov
ficoms
mov
xchg
ret
sub
sub
loope
shl
jmp
push
push
add
add
add
add
ret
push
jb
add
stos
push
xlat
js
test
push
mov
xchg
ret
add
add
lret
adc
nop
jb
das
add
stc
nop
jb
add
lret
movb
add
stc
nop
jb
add
cltd
ret
stc
nop
jb
pusha
add
or
push
stc
nop
jb
add
add
add
push
adc
stc
nop
jb
xor
add
push
pop
push
mov
xchg
ret
sub
add
add
mov
xchg
ret
add
clc
xor
rcrl
cld
push
mov
xchg
ret
addl
fisttpll
test
add
stc
nop
jb
add
outsb
shr
stc
nop
jb
add
add
das
xchg
lea
push
mov
xchg
ret
insl
sub
mov
stc
nop
jb
repz
or
mov
cmp
stc
nop
jb
add
add
add
inc
fldl
xchg
ret
or
repz
jne
stc
nop
jb
add
sub
stc
nop
jb
lret
or
add
jb
jmp
nop
cld
jmp
add
pop
push
mov
xchg
ret
sub
dec
rep
stc
nop
jb
decl
adcl
stc
nop
jb
or
mov
push
mov
xchg
ret
sub
add
dec
movswl
stc
nop
jb
movsb
mov
je
sub
nop
jb
add
ud1
add
stc
nop
jb
add
mov
out
stc
nop
jb
add
mov
stc
nop
jb
add
sub
stc
nop
jb
add
add
nop
cld
jmp
add
add
or
jg
push
push
mov
xchg
ret
add
cmp
stos
psubsb
add
nop
cld
jmp
jg
add
adc
sbb
jge
stc
nop
jb
rorl
and
add
stc
nop
jb
add
xchg
js
mov
nop
cld
jmp
insl
pushl
stc
nop
jb
pusha
jg
sub
mov
in
popa
stc
nop
jb
add
add
add
lods
jmp
stc
nop
jb
fildll
arpl
pop
stc
nop
jb
xchg
lret
std
or
adc
nop
jb
lret
mov
lahf
add
push
mov
xchg
ret
add
pushl
nop
cld
jmp
fldl
loopne
stos
fdivrl
dec
add
mov
xchg
ret
and
xor
push
mov
xchg
ret
add
add
push
gs
js
nop
cld
jmp
sub
add
xlat
outsl
add
testb
jmp
add
pusha
add
add
mov
add
add
sbb
call
push
push
push
mov
xchg
ret
add
add
push
mov
nop
jb
movsb
add
fnstenv
push
stc
nop
jb
loop
add
je
inc
add
jl
add
add
add
add
cmp
stc
nop
jb
xchg
add
push
add
push
stc
nop
jb
add
sub
lret
addb
push
stc
nop
jb
add
roll
sbb
nop
jb
std
add
add
cli
mov
stc
nop
jb
insl
add
movsb
aaa
inc
insb
pop
nop
cld
jmp
add
add
add
sub
add
sbb
add
nop
cld
jmp
add
pop
stc
nop
jb
loopne
add
sub
add
pop
push
mov
xchg
ret
push
pusha
imul
mov
xchg
ret
add
add
inc
adc
mov
xchg
ret
add
add
jb
xchg
add
loop
outsl
rolb
dec
nop
cld
jmp
and
add
add
add
and
adc
loopne
nop
jb
jg
or
fdivrp
nop
jb
add
add
mov
push
push
stc
nop
jb
sub
insl
add
mov
nop
cld
jmp
jg
add
add
dec
cmp
nop
jb
add
add
das
aad
add
stc
nop
jb
xchg
add
xchg
dec
jg
mov
sbb
and
sarb
xchg
add
add
mov
stc
nop
jb
ljmp
xlat
fsubl
or
stc
nop
jb
add
push
stc
nop
jb
sub
xchg
cmp
or
dec
add
mov
ror
imul
sbb
jne
push
dec
cmp
nop
cld
jmp
add
popf
or
mov
stc
nop
jb
add
add
add
rolb
jb
stc
nop
jb
add
and
imul
xchg
add
add
and
ret
push
stc
nop
jb
je
clc
and
xchg
xor
mov
stc
nop
jb
dec
add
nop
xor
popa
stc
nop
jb
add
sub
std
push
in
mov
stc
nop
jb
fwait
add
add
adc
add
stc
nop
jb
add
popf
mov
cmpl
cmpsl
adc
add
xchg
add
sbb
jmp
add
add
add
xchg
xchg
icebp
test
sar
nop
jb
lret
add
add
pop
pusha
stc
nop
jb
outsl
add
aaa
add
mov
stc
nop
jb
into
pusha
lret
xchg
mov
cmp
lods
add
add
nop
jb
add
cmp
nop
cld
jmp
add
mov
xor
push
mov
xchg
ret
add
add
ja
stc
nop
jb
add
jecxz
mov
stc
nop
jb
add
subl
push
outsl
arpl
add
nop
jb
add
add
add
pushf
xlat
inc
add
add
add
mov
lods
out
inc
add
add
add
push
nop
cld
jmp
add
filds
lods
add
stc
nop
jb
add
sub
jbe
inc
push
mov
xchg
ret
add
and
adc
nop
jb
pusha
sub
frstor
and
push
mov
xchg
ret
flds
inc
add
add
idiv
incl
add
pop
es
mov
add
add
das
push
stc
nop
jb
add
add
add
add
ret
stc
nop
jb
imul
das
lock
nop
jb
add
add
add
add
mov
stc
nop
jb
add
in
push
jb
loop
loop
push
lret
xchg
out
add
nop
cld
jmp
mov
dec
ret
mov
push
mov
xchg
ret
sub
or
add
stc
nop
jb
sub
das
add
dec
and
stc
nop
jb
faddl
add
or
sar
nop
jb
add
push
stc
nop
jb
into
add
dec
push
stc
nop
jb
stos
add
add
add
and
add
nop
jb
aaa
add
popf
ret
add
add
adcl
add
es
mov
nop
cld
jmp
xchg
nop
lret
stos
add
and
jne
stc
nop
jb
add
es
push
stc
nop
jb
add
subl
sti
stc
nop
jb
clc
mov
nop
add
dec
add
stc
nop
jb
add
xchg
xor
stos
mov
push
mov
xchg
ret
add
and
nop
jb
add
add
rorl
repz
mov
xchg
ret
pusha
cmp
add
nop
jb
sub
js
imul
jge
inc
add
mov
lret
mov
stc
nop
jb
dec
add
fisttpll
xorb
pop
loopne
subl
add
add
addl
call
stc
nop
jb
add
test
mov
xchg
ret
das
add
fwait
jae
hlt
sbb
mov
adc
nop
jb
jb
add
stc
nop
jb
add
cmp
cld
jmp
dec
sub
xchg
stc
nop
jb
add
into
mov
dec
sbb
push
fadds
xchg
ret
add
lock
add
stc
nop
jb
imul
inc
add
cld
jmp
add
add
loop
mov
push
mov
xchg
ret
add
stc
nop
jb
shrl
sub
mov
stc
nop
jb
or
add
or
dec
mov
push
mov
xchg
ret
add
sub
cld
jmp
and
add
fists
stc
nop
jb
into
flds
add
add
icebp
aaa
inc
fwait
add
stc
nop
jb
pop
into
jb
mov
add
stc
nop
jb
add
add
lea
nop
cld
jmp
std
scas
insl
add
push
lahf
cmpw
nop
cld
jmp
stos
sub
stos
ret
stc
nop
jb
lret
nop
nop
movsb
push
fistps
or
add
stc
nop
jb
filds
jg
sar
nop
jb
add
add
cmpw
stc
nop
jb
xor
add
mov
add
stc
nop
jb
add
push
add
jle
jae
stc
nop
jb
add
das
lret
les
add
add
nop
jb
add
fmuls
test
nop
jb
xchg
add
xor
stc
nop
jb
fwait
clc
pop
in
les
stc
nop
jb
insl
add
xchg
ret
movb
add
push
mov
xchg
ret
and
push
ds
nop
cld
jmp
add
movsb
sub
xor
push
mov
xchg
ret
mov
test
nop
jb
add
push
add
mov
fildl
xchg
ret
add
push
jae
inc
jno
push
stc
nop
jb
add
add
dec
mov
stc
nop
jb
into
add
add
sub
cmp
sub
nop
jb
add
add
push
mov
xchg
ret
add
stos
add
push
jb
add
add
push
add
fadds
stc
stc
nop
jb
add
push
lret
add
mov
add
stc
nop
jb
add
scas
jmp
add
stc
nop
jb
add
call
stc
nop
jb
faddl
std
pop
pop
stc
nop
jb
or
add
add
and
add
nop
jb
xchg
add
add
add
fbld
inc
or
mov
xchg
ret
incl
push
sub
jp
inc
add
add
sbb
jb
faddl
insl
movsb
add
nop
jb
add
clc
add
dec
jne
nop
cld
jmp
add
std
fisttpll
nop
jb
push
add
dec
add
sti
add
stc
nop
jb
and
fmulp
xor
sub
test
nop
jb
add
mulb
lds
push
stc
nop
jb
jg
add
add
add
nop
jb
dec
sub
add
push
mov
pop
pop
add
mov
add
inc
inc
add
nop
jb
add
je
add
inc
or
nop
jb
add
sub
xchg
mov
pop
inc
dec
xor
add
add
nop
jb
add
sub
loop
add
pusha
stc
nop
jb
add
add
add
mov
or
stc
nop
jb
insl
subb
decl
mov
xor
add
stos
and
nop
cld
jmp
xchg
add
add
and
add
lret
stc
nop
jb
je
pusha
xchg
add
data16
push
push
mov
xchg
ret
add
subl
jmp
add
add
je
pop
dec
push
stc
nop
jb
add
xchg
mov
add
enter
and
inc
add
add
push
and
fld
nop
cld
jmp
pop
add
clc
add
and
ret
add
add
test
hlt
stc
nop
jb
sub
inc
xor
stc
nop
jb
add
add
mov
push
nop
jb
clc
add
clc
xor
stc
nop
jb
and
pop
add
add
mov
stc
nop
jb
insl
add
add
push
mov
xchg
ret
insl
fsubrl
xchg
cmp
push
mov
xchg
ret
add
fwait
add
pop
stc
nop
jb
add
add
mov
xchg
ret
add
add
add
divl
inc
out
push
push
mov
xchg
ret
imul
je
nop
cld
jmp
add
xlat
mov
jb
add
mov
std
stc
nop
jb
add
js
dec
sub
incl
add
pop
add
add
nop
cld
jmp
add
add
and
int
mov
nop
jb
mov
test
nop
jb
and
nop
cld
jmp
loopne
add
add
fs
add
cld
jmp
roll
les
into
subl
stc
nop
jb
incl
das
subl
pop
lock
add
lret
into
add
jno
pop
test
je
add
nop
cld
jmp
add
add
pop
movzwl
nop
cld
jmp
loop
add
fwait
mov
push
mov
xchg
ret
xor
jbe
mov
stc
nop
jb
add
stc
movzwl
stc
nop
jb
add
aaa
clc
mov
add
add
nop
jb
fldl
fmull
cld
loopne
add
add
insl
cmpl
nop
cld
jmp
mov
sub
popa
add
nop
jb
flds
add
xlat
int3
mov
stc
nop
jb
add
jmp
mov
xchg
ret
add
add
das
sub
stc
nop
jb
add
add
addb
add
repz
dec
clc
push
sbb
mov
add
add
xchg
pusha
mov
pop
add
mov
add
jo
inc
lret
add
mov
xchg
ret
sub
add
mov
and
inc
out
inc
stc
nop
jb
add
add
add
add
mov
xchg
ret
add
mov
xchg
ret
fbstp
xor
repz
jmp
stc
nop
jb
add
loopne
mov
jb
add
imul
stc
nop
jb
push
add
add
add
mov
notb
add
stc
nop
jb
add
insl
push
movsl
fiaddl
jb
add
inc
sbb
inc
and
nop
jb
add
incl
cld
jmp
aaa
fsts
and
add
popa
stc
nop
jb
addl
add
or
stc
nop
jb
movsb
sub
stc
nop
jb
xchg
mov
in
xor
stc
nop
jb
clc
add
pusha
lret
icebp
cmc
lds
mov
xchg
ret
add
js
add
dec
add
cld
jmp
mov
mov
push
push
mov
xchg
ret
insl
add
loopne
mov
add
nop
jb
popf
add
jnp
mov
push
stc
nop
jb
add
add
decl
jb
subl
add
stc
nop
jb
dec
xchg
ficoms
mov
stc
nop
jb
add
loope
pushl
push
mov
xchg
ret
loop
add
lea
mov
push
stc
nop
jb
fwait
js
add
adc
insl
jae
nop
jb
push
add
dec
pop
stc
nop
jb
add
jns
stc
nop
jb
filds
mov
mov
cld
jmp
aaa
add
je
pusha
ds
push
mov
xchg
ret
fwait
das
stos
add
push
add
jne
push
mov
xchg
ret
loop
add
dec
add
cld
jmp
pop
add
add
add
subb
clc
add
xchg
add
in
jne
stc
nop
jb
imul
add
nop
jb
xchg
xor
stos
imul
and
add
add
into
add
hlt
xchg
sarb
jmp
loopne
fldl
mov
mov
stc
nop
jb
add
cmp
sub
call
stc
nop
jb
xchg
add
mov
stc
nop
jb
add
addl
or
sti
stc
nop
jb
add
sbb
mov
adc
nop
jb
pusha
lret
pop
pop
stc
nop
jb
add
imul
subl
push
mov
xchg
ret
add
rorb
dec
outsl
popa
fs
nop
jb
mov
cmp
adc
stc
nop
jb
sub
add
loop
lock
add
nop
cld
jmp
imul
ret
nop
jb
add
into
add
jg
fdivr
nop
jb
add
add
add
mov
stc
nop
jb
imul
nop
cld
jmp
mov
jb
loopne
mov
stc
nop
jb
imul
ret
and
int
movb
add
nop
cld
jmp
add
add
push
push
mov
xchg
ret
add
into
add
add
push
mov
xchg
ret
fnsave
shll
call
cld
jmp
imul
pushf
cmpl
nop
cld
jmp
add
add
xor
add
stc
nop
jb
fxch
pusha
stc
nop
jb
add
sub
add
push
mov
xchg
ret
popf
scas
jg
or
in
cmp
xor
inc
daa
das
and
ss
mov
nop
cld
jmp
popf
sbbl
nop
jb
jb
add
rcrl
call
stc
nop
jb
add
pop
leave
dec
nop
cld
jmp
std
add
clc
aaa
das
add
js
add
jb
add
or
adc
xor
cmpb
call
dec
add
add
xchg
imul
addb
add
fmull
jb
push
pop
add
stos
insb
push
stc
nop
jb
loopne
fdiv
add
and
popa
insl
es
stc
nop
jb
dec
push
push
mov
xchg
ret
add
fwait
xor
jbe
stc
nop
jb
das
clc
aaa
js
adc
nop
jb
repz
jns
nop
cld
jmp
add
xchg
add
xchg
repnz
jb
add
add
push
orl
jb
add
dec
stc
nop
jb
xchg
scas
lret
add
add
in
push
nop
cld
jmp
loopne
cmp
add
clc
insl
outsb
inc
push
mov
xchg
ret
loopne
add
and
push
stc
nop
jb
cmp
add
add
xchg
in
add
push
stc
nop
jb
mov
push
add
add
jl
out
stc
nop
jb
xchg
add
add
nop
jb
aaa
add
insl
js
scas
and
nop
cld
jmp
add
or
mov
mov
xchg
xor
icebp
add
push
stc
nop
jb
add
add
add
nop
cmp
dec
cmp
cld
jmp
nop
add
aaa
cmp
sbb
mov
xchg
ret
mov
cmpsb
adc
repz
mov
xchg
ret
xor
loopne
test
add
stc
nop
jb
scas
add
stc
nop
jb
imul
add
mov
push
mov
xchg
ret
add
add
hlt
fisttpll
jb
add
add
add
inc
add
add
out
ret
push
mov
xchg
ret
add
add
add
call
stc
nop
jb
insl
add
test
stc
nop
jb
xchg
mov
stc
nop
jb
fwait
nop
add
stc
nop
jb
add
filds
das
add
mulb
stc
nop
jb
xchg
add
add
add
inc
add
popf
movb
xchg
addb
push
push
mov
xchg
ret
mov
in
je
nop
cld
jmp
add
xchg
stc
nop
jb
sub
add
std
add
gs
cmpsl
bound
push
mov
stc
nop
jb
add
pop
fists
nop
jb
push
add
add
add
inc
in
call
nop
cld
jmp
clc
add
xor
jmp
stc
nop
jb
rcr
xchg
cmp
jb
add
or
popa
nop
cld
jmp
nop
imul
xor
outsl
loopne
nop
jb
add
decl
push
mov
xchg
ret
popf
aaa
add
pop
nop
cld
jmp
add
sub
add
add
cltd
mov
stc
nop
jb
add
clc
cmp
nop
jb
add
add
cmp
nop
jb
add
jb
ja
rep
stc
nop
jb
popf
add
add
stos
cmp
nop
cld
jmp
sub
cld
add
nop
cld
jmp
push
das
add
je,pn
stc
nop
jb
imul
sub
clc
push
mov
xchg
ret
add
add
js
popa
stc
nop
jb
xchg
add
sub
outsl
jecxz
cmpsb
outsl
add
stc
nop
jb
das
add
shl
nop
cld
jmp
add
add
add
leave
add
stc
nop
jb
add
imul
add
add
js
add
inc
stc
nop
jb
add
add
adc
incl
add
add
add
add
jb
clc
sub
add
repz
rep
stc
nop
jb
add
add
add
cmp
iret
add
xchg
ret
add
mov
push
negb
mov
xchg
ret
add
add
add
push
mov
xchg
ret
sub
add
loop
or
stc
nop
jb
clc
lret
pop
aaa
jb
cmpsl
mov
stc
nop
jb
das
lahf
lods
stc
nop
jb
add
or
add
or
jae
dec
push
mov
xchg
ret
and
xor
sub
add
nop
jb
stos
add
dec
push
stc
nop
jb
repz
add
add
jb
mov
mov
pop
rep
stc
nop
jb
add
fst
rep
mov
stc
nop
jb
push
xor
lret
jp
jne
stc
nop
jb
add
add
add
add
nop
jb
add
jp
mov
add
nop
jb
and
add
jb
subl
add
add
jb
xor
pusha
add
add
xor
inc
add
fistpll
rclb
fiadds
xchg
ret
add
popf
clc
scas
add
nop
cld
jmp
clc
jg
sub
add
or
repz
nop
jb
cmp
fsub
add
popf
mov
stc
nop
jb
add
add
inc
add
nop
mov
mov
xchg
ret
xchg
add
je
call
nop
cld
jmp
add
add
and
stc
nop
jb
add
mov
add
push
test
nop
cld
jmp
add
add
add
inc
in
inc
push
mov
xchg
ret
add
add
push
in
push
stc
nop
jb
add
add
scas
insl
push
pusha
add
add
add
push
mov
xchg
ret
add
add
add
add
jb
add
repnz
sub
push
mov
xchg
ret
add
and
ljmp
add
addb
push
stc
nop
jb
add
lods
mov
stc
nop
jb
mov
stc
nop
jb
dec
add
add
add
adc
mov
stc
nop
jb
das
fldl
add
fiaddl
pause
cld
jmp
add
and
add
xchg
xchg
and
shrl
int
pop
jae
nop
jb
pop
xlat
add
jle
popl
nop
cld
jmp
add
pop
xchg
add
add
stc
nop
jb
add
sar
jb
pop
add
add
add
add
add
stc
nop
jb
pusha
sub
scas
hlt
incl
add
movsb
je
sub
or
jb
js
clc
add
ror
push
stc
nop
jb
xchg
xlat
add
jg
lret
and
stc
nop
jb
roll
cmp
cmc
fsubr
out
add
nop
cld
jmp
std
add
iret
ror
nop
cld
jmp
flds
fwait
add
clc
push
add
mov
xchg
ret
dec
add
popa
add
nop
jb
add
push
stc
nop
jb
mov
fstp
push
mov
mov
adc
nop
jb
add
pop
push
mov
int3
add
lret
lods
add
stc
mov
call
add
jg
add
rclb
fadds
xchg
ret
dec
scas
add
push
call
stc
nop
jb
outsl
add
data16
jno
add
nop
cld
jmp
mov
sub
out
shr
stc
nop
jb
insl
add
lret
and
sbb
mov
xchg
ret
aaa
fwait
sub
add
clc
stc
nop
jb
add
jb
popf
js
push
mov
ret
and
add
add
and
insb
div
nop
cld
jmp
add
fwait
add
rolb
call
stc
nop
jb
sub
add
mull
cmp
jb
or
add
add
mov
push
mov
xchg
ret
add
add
scas
mov
stc
nop
jb
loopne
add
add
add
repz
xor
nop
cld
jmp
or
pop
je
nop
cld
jmp
add
xchg
adc
nop
jb
add
add
xchg
add
pop
add
nop
cld
jmp
add
add
loop
and
test
push
mov
xchg
ret
add
add
mov
stc
nop
jb
add
or
clc
lret
pop
stc
nop
jb
add
add
inc
add
stc
nop
jb
loop
add
subl
mov
jg
les
mov
xchg
ret
jb
add
push
mov
xchg
ret
add
add
lret
nop
cld
jmp
add
addl
movsb
pop
stos
sbb
nop
jb
das
das
add
aaa
xor
inc
adc
cld
jmp
rep
fisubrs
imul
add
cmp
nop
jb
add
or
push
push
mov
xchg
ret
add
add
inc
in
mov
xchg
ret
into
add
push
test
stos
and
nop
cld
jmp
dec
add
xor
add
mov
stc
nop
jb
mov
push
push
mov
xchg
ret
add
add
lret
je
mov
push
stc
nop
jb
add
add
add
imul
incl
add
aaa
add
add
imul
faddl
xchg
ret
mov
dec
mov
push
mov
xchg
ret
jg
cmpl
fildl
xchg
ret
sub
xor
mov
incl
add
scas
add
stc
nop
jb
add
fldcw
stos
stc
nop
jb
pusha
add
push
mov
pop
add
stc
nop
jb
add
aaa
xchg
add
lea
stc
nop
jb
add
fnstcw
xchg
and
and
imul
in
jmp
in
add
push
mov
xchg
ret
addl
nop
jb
add
xor
add
addb
popf
je
stc
nop
jb
fisttpll
out
ret
stc
nop
jb
movsb
add
or
ror
push
mov
xchg
ret
and
sub
jmp
nop
cld
jmp
sub
fsubrl
jl
test
add
add
nop
jb
xchg
shll
cmpl
incl
add
mov
popf
stc
nop
jb
loop
mov
mov
xchg
ret
add
je
sub
push
mov
xchg
ret
pop
loop
add
ds
nop
cld
jmp
sub
add
add
nop
jb
into
aaa
pusha
jbe
mov
push
mov
xchg
ret
mov
fst
inc
cmp
sbb
add
stc
nop
jb
add
insl
push
aas
imul
stc
nop
jb
stos
add
add
push
stc
push
stc
nop
jb
clc
add
or
jb
mov
lahf
push
nop
cld
jmp
das
and
jecxz
lods
push
mov
xchg
ret
lret
add
or
nop
jb
add
xor
je
and
cld
lea
push
mov
xchg
ret
and
add
push
mov
xchg
ret
jg
add
add
jb
dec
add
add
shrl
mov
nop
cld
jmp
pusha
add
fmuls
cltd
repz
add
nop
add
icebp
leave
decl
push
mov
xchg
ret
orl
rclb
or
cmp
ret
xor
add
jg
inc
clc
stc
nop
jb
cmp
add
popa
stc
nop
jb
add
sub
mov
repz
mov
xchg
ret
faddl
add
cld
jne
nop
cld
jmp
insl
mov
nop
cld
jmp
pusha
mov
loopne
pop
xor
stc
nop
jb
outsl
insl
pop
pop
add
popa
add
mov
xchg
ret
insl
add
negb
nop
cld
jmp
outsl
jb
or
and
addb
mov
stc
nop
jb
js
arpl
and
nop
jb
sub
and
add
jb
push
mov
xchg
ret
sub
imul
stc
ljmp
add
fisttps
loop
nop
cld
jmp
das
cmp
outsl
clc
or
cld
jmp
mov
sub
xor
jb
insl
pusha
stc
nop
jb
fnstcw
std
add
inc
push
mov
xchg
ret
aaa
add
add
call
ljmp
pop
push
mov
xchg
ret
add
xlat
add
mov
gs
nop
jb
add
add
xchg
sub
rcll
in
add
add
push
add
xchg
mov
mov
add
in
add
pop
jle
adc
cmp
and
stos
sbb
inc
push
mov
xchg
ret
push
add
or
insb
nop
cld
jmp
or
xchg
and
add
pop
cmp
nop
jb
add
or
popa
add
mov
xchg
ret
popf
add
cld
imul
stc
nop
jb
mov
fisttps
cmpb
incl
xchg
push
add
add
mov
stc
nop
jb
add
stos
add
and
push
and
mov
nop
cld
jmp
push
add
sub
add
add
nop
jb
pusha
filds
roll
mov
mov
nop
cld
jmp
outsl
add
add
nop
jb
jg
xchg
pop
filds
and
add
stc
nop
jb
insl
rcll
nop
jb
lcall
and
add
sar
stc
nop
jb
add
pusha
add
add
mov
stc
nop
jb
movsb
add
add
test
cld
jmp
mov
and
je
push
push
mov
xchg
ret
fistpll
je
test
adc
stc
nop
jb
cmp
movsb
push
mov
xchg
ret
add
add
lea
nop
jb
popf
das
add
mov
jle
pause
cld
jmp
sub
lret
insl
add
clc
lahf
add
stc
nop
jb
clc
add
movsb
or
adc
nop
jb
add
pusha
stc
nop
jb
or
std
in
add
stc
nop
jb
aaa
add
add
nop
jb
xchg
into
add
push
and
dec
xor
stc
nop
jb
add
push
out
or
dec
fcos
inc
add
fmull
fstps
push
stc
nop
jb
mov
lret
add
stc
nop
jb
or
scas
mov
push
mov
xchg
ret
add
add
cmpsb
or
nop
jb
add
add
outsl
and
mov
stc
nop
jb
sub
add
xor
stc
nop
jb
mov
mov
leave
stc
nop
jb
jg
and
add
cmp
stc
nop
jb
add
in
push
mov
xchg
ret
pop
add
or
nop
jb
add
xor
stc
nop
jb
xchg
add
fwait
insl
add
imul
stc
nop
jb
add
mov
xchg
ret
clc
loop
mov
nop
cld
jmp
fbstp
in
mov
stc
nop
jb
and
or
fldcw
pop
add
pop
xchg
or
jmp
add
sub
clc
sarl
jb
add
add
add
cmp
nop
cld
jmp
add
push
push
les
or
mov
stc
nop
jb
add
add
xchg
outsl
mov
stc
nop
jb
lret
add
add
push
ss
pusha
std
call
ljmp
pop
add
je
pop
mov
add
nop
jb
add
les
push
outsb
push
stc
nop
jb
add
add
add
xlat
sub
jb
sub
add
pop
test
nop
cld
jmp
add
add
add
sub
dec
jmp
nop
cld
jmp
clc
xchg
xchg
add
mov
adc
nop
jb
add
add
inc
or
nop
jb
loopne
add
mov
add
nop
jb
loop
push
jo
outsb
mov
stc
nop
jb
dec
scas
add
add
mov
call
dec
je
pop
cmp
push
mov
xchg
ret
add
dec
push
mov
mov
add
incb
add
shrl
addl
add
mov
xor
add
test
pop
scas
in
adc
xchg
dec
loop
sub
lock
and
rcrl
test
mov
enter
pop
stos
fldl
loop
mov
xchg
fwait
pushf
ljmp
cmp
dec
das
cmpsb
in
add
lods
mov
add
or
add
repnz
dec
sbb
adc
add
arpl
std
jnp
push
inc
cmp
add
mov
jno
jp
and
fsubl
mov
xchg
inc
add
push
xchg
lret
xor
movl
out
imul
sbb
dec
les
mov
pop
cli
repz
cmp
xor
jb
add
mov
in
jns
out
xchg
sbb
addb
or
frstor
sub
add
sahf
add
pop
push
dec
insl
js
inc
movsb
push
mov
or
xor
repz
fmul
fnstsw
lds
push
mov
pop
xorl
lods
ds
das
add
les
sub
pushf
ret
movb
lcall
sub
jecxz
loopne
inc
in
ret
cmpsb
daa
push
into
cmp
stos
fwait
add
addb
xlat
addb
add
mov
jmp
stc
push
push
push
pop
adc
das
push
int
push
nop
out
in
mov
add
mov
inc
and
and
aaa
nop
inc
or
sti
fnsave
cmp
and
jb
and
clc
sub
outsb
int3
push
xor
movb
add
aam
add
push
add
pop
mov
mov
dec
shlb
add
cltd
xchg
jp
cld
or
add
jns
xor
cmp
dec
mov
add
cmc
rol
call
in
cwtl
sub
add
dec
lock
mov
int
repnz
rolb
lea
add
push
push
pop
push
ja
adc
dec
int3
cmpsl
lock
test
subl
mov
sbb
mov
jp
cmp
addb
cmp
jo
sahf
stos
test
dec
xor
cld
push
popf
jg
jne
jne
lods
out
cmpsb
in
add
fcmovnu
jbe
adc
push
mov
adc
clc
inc
sti
pop
jnp
lock
dec
idivb
add
repz
add
shll
add
daa
add
mov
sbb
jnp
mov
ljmp
cmp
sbb
pop
or
add
insl
add
mov
cltd
movsb
push
ret
and
sub
fistpl
outsb
out
mov
inc
mov
add
push
push
xchg
xor
dec
xor
scas
fnstenv
lods
push
negb
xor
inc
add
stos
outsb
fdivl
adc
outsl
xchg
shll
add
dec
push
icebp
cwtl
and
fwait
repnz
push
popa
xor
xor
jbe
jl
add
scas
sub
add
sahf
popf
ficoml
jl
xor
cwtl
aad
movb
and
repz
and
push
cmp
fsts
mov
mov
dec
scas
test
dec
and
in
add
decb
lcall
ss
push
pop
mov
mov
add
das
pop
and
ret
scas
call
add
insl
aas
sbbl
lret
mov
add
inc
push
add
mov
stos
mov
add
or
in
imul
add
mov
mov
das
dec
mov
cmp
cmpl
cli
jp
mov
xor
lea
adcl
mov
cltd
or
sbb
mov
mov
movb
sub
addr16
add
ljmp
and
movsl
jo
sbb
pop
fidivs
insb
sbb
les
jne
add
ret
cmc
or
cmp
cmc
xchg
mov
mov
dec
loopne
add
cmp
imul
and
lds
adc
jb
les
std
mov
push
mov
daa
cmc
out
rcl
pop
mov
adc
cmp
arpl
inc
add
pop
addr16
or
test
mov
or
repz
sar
mov
leave
mov
push
add
pop
cld
dec
cwtl
sbb
imul
call
mov
xchg
xlat
and
mov
das
es
addb
js
mov
add
pop
ret
aam
and
push
inc
and
push
es
scas
cmc
add
adc
cmc
pop
aaa
xchg
js
in
sbb
pavgb
push
add
xchg
testb
xor
jno
push
sti
or
jns
mov
inc
bound
ret
push
push
xrelease
ss
or
test
adc
shll
or
lret
xor
dec
xchg
jg
int
mov
mov
ja
fucompp
dec
mov
dec
mov
imul
and
jl
and
loopne
pushf
pushf
fnstcw
pop
mov
addr16
fwait
xor
mov
and
mov
or
xchg
lods
rolb
add
mov
incl
inc
xchg
add
xor
add
add
dec
mov
add
test
dec
iret
idivb
popa
cmc
dec
sar
fwait
mov
add
js
in
les
fsubs
fimuls
xchg
jae
push
bound
inc
add
and
add
dec
xor
repnz
add
cwtl
jg
adcl
lahf
fstps
add
out
mov
cwtl
ljmp
scas
sub
add
outsl
call
sub
cmp
int
addl
jne
dec
xchg
sub
iret
push
cld
hlt
aam
dec
in
inc
add
sbb
adc
mov
mull
call
mov
add
push
pop
ret
pop
mov
and
mov
xlat
mov
fstpt
nop
add
mov
movb
add
cmp
daa
add
lds
repnz
mov
add
int
push
jb
test
add
dec
adc
sub
add
outsl
cltd
das
ss
jb
test
or
addb
xchg
dec
push
or
mov
jecxz
jle
mov
lahf
add
jbe
jnp
jg
ret
into
mov
enter
loop
or
sub
int
add
rclb
or
shl
sbb
addb
push
inc
add
add
cmp
sbb
push
mov
dec
xor
mov
mov
pop
in
push
add
add
pop
lahf
int
jns
les
call
xor
xor
jbe
cmp
add
inc
add
or
add
lcall
dec
sbb
scas
test
push
cmpsb
lahf
addb
or
les
pop
aaa
cmp
sti
add
mov
sub
int3
push
sub
stos
arpl
in
fisubrl
dec
xchg
faddl
adc
in
icebp
push
jno
add
add
sub
ss
inc
rolb
and
ja
inc
add
dec
mov
add
inc
add
les
sahf
xchg
xor
dec
and
add
rclb
bnd
mov
add
jns
cmp
sub
mov
pop
mov
mov
mov
add
push
mov
pop
mov
fsubr
iret
dec
sbb
dec
cmc
push
mov
nop
dec
cmp
sub
cld
inc
add
cld
sub
dec
add
popf
or
sti
test
ds
mov
fsts
insl
aaa
or
pop
sub
lock
cmp
shrl
addb
testb
outsb
jo
mov
sbb
xchg
pop
lret
mov
mov
add
push
out
lret
icebp
rcrb
adcl
daa
adc
mov
xor
rcl
popa
movsl
dec
dec
outsb
mov
inc
add
inc
mov
rorl
jle
push
and
add
loope
jl
cmp
repz
add
dec
xchg
add
sahf
adc
dec
dec
in
xor
int
add
inc
add
outsb
test
add
rcrb
push
xor
stos
push
push
mov
pop
mov
push
mov
push
outsl
pop
lret
movsl
push
add
push
add
add
sbb
mov
hlt
mov
push
adc
or
jnp
xchg
es
dec
push
add
xchg
je
incb
fsub
jnp
mov
sub
ljmp
add
arpl
push
add
popa
push
jecxz
addb
ret
pcmpgtw
ffreep
add
popf
clc
sbb
xchg
ljmp
add
jmp
add
push
mov
push
cmp
inc
add
loopne
jo
add
fdivp
push
sub
mov
cmp
mov
dec
sbb
lods
loope
add
call
add
sbb
inc
add
sub
xchg
jnp
add
test
jg
push
out
sbb
addr16
mov
movb
test
mov
addr16
add
imul
sub
cmp
add
int3
sbb
nop
xor
or
daa
jno
loopne
dec
mov
fcmovu
mov
lahf
aad
and
inc
add
das
rcll
stos
enter
mov
lcall
push
mov
add
call
stos
cld
jecxz
std
pop
nop
add
add
add
clc
jae
xchg
rcrl
je
add
addr16
outsl
ret
xchg
sbb
push
ljmp
dec
lcall
xchg
movb
in
adc
in
fadds
add
xchg
or
jg
push
and
mov
or
aaa
pop
dec
xchg
pop
cld
mov
ja
ljmp
insb
add
adc
mov
imul
ljmp
add
pusha
add
add
xor
int3
mov
dec
jp
test
dec
repz
or
std
test
sahf
jmp
xchg
std
adc
loopne
sarl
pop
and
xchg
adc
dec
pop
inc
imul
xor
loop
lcall
sub
in
jno
loope
add
lea
lret
jbe
das
fildl
dec
or
rolb
and
enter
or
push
jecxz
xor
out
jg
cli
out
movsl
cs
add
rcl
bound
lcall
mov
jbe
mov
mov
cltd
add
add
outsl
mov
or
add
enter
imul
mov
loopne
dec
cmp
clc
scas
mov
push
or
push
aaa
shlb
add
add
cmc
ss
jge
loop
cmc
inc
add
shl
pop
push
pushf
mov
add
ljmp
mov
enter
mov
ret
out
leave
aam
imul
inc
add
xchg
ret
push
xchg
cmc
lcall
iret
sarb
ret
insl
js
jle
nop
cmp
cmp
insb
mov
push
shl
pusha
add
or
or
aam
sub
fisttps
pop
dec
pop
stos
pop
out
xchg
jbe
inc
add
movsl
mov
fisttpl
stc
mov
jae
mov
adc
popf
inc
jno
adc
bound
notb
cmp
push
mov
test
add
dec
in
loopne
sub
bound
inc
add
add
mov
call
sub
add
pop
pop
cwtl
pop
inc
or
pop
add
popa
cld
inc
mov
arpl
add
adc
mov
sub
arpl
stos
int
mov
ljmp
jbe
icebp
xchg
jns
inc
add
mov
fidivrl
fisttps
in
pop
pop
add
mov
std
sub
movsl
punpcklbw
or
movsl
jg
inc
add
mov
sub
add
adc
out
sub
fdivs
add
xor
adc
and
xchg
adc
add
xchg
aad
cld
jno
sub
add
push
test
mov
out
push
and
pop
clc
xchg
stos
sarl
aas
and
sbb
leave
push
sahf
adc
push
addb
mov
mov
pop
cmp
pop
stc
pop
xor
mov
mov
xchg
lods
add
mov
or
mov
dec
test
push
imul
pusha
add
add
push
shll
jmp
into
cmp
sbb
inc
sbb
addr16
pop
test
out
test
push
push
cli
mov
xor
pop
inc
add
dec
insl
mov
repz
adc
or
dec
xchg
test
arpl
mov
jns
fisttpll
xchg
imulb
xor
outsl
pop
sub
fwait
insb
rcrb
adc
jle
add
jmp
xor
into
fcomi
mov
es
jg
add
add
inc
add
push
cwtl
in
and
loop
sub
add
mov
xor
test
or
aad
aaa
cmpsl
push
lahf
sbb
add
cld
push
cli
push
outsb
mov
jns
pop
cltd
hlt
xchg
sti
sub
jmp
test
les
jnp
mov
xor
jle
fisttpl
data16
or
add
rolb
add
in
jmp
jp
xchg
cmpsb
mov
inc
add
xor
daa
lahf
movsl
xchg
fnstsw
lock
lahf
mov
mov
and
lock
ss
add
add
pop
mov
cmp
sub
add
faddl
add
ds
mov
adc
sbb
jns
out
fdivrl
lea
aad
sub
jmp
test
addb
daa
insl
adc
imul
scas
movb
into
mov
push
push
pop
mov
push
xor
repnz
in
sahf
pop
xor
pushf
pushf
push
jae
test
insl
or
jmp
sti
and
test
test
scas
or
push
in
dec
xchg
mov
lret
int
hlt
dec
sbb
pop
addr16
jecxz
lds
xchg
ljmp
add
jmp
add
sub
xlat
iret
add
adc
cmp
sub
jle
sub
lret
or
xor
aam
push
xor
add
sub
push
add
cli
js
add
and
cmp
mov
push
es
adc
and
dec
and
mov
call
add
push
adc
inc
add
sub
add
add
shr
fadds
or
xchg
xchg
aas
jbe
jae
dec
lods
inc
add
add
mov
or
inc
gs
or
adc
cwtl
push
fcmovbe
dec
rolb
or
adc
add
jle
outsl
xchg
jae
pop
insb
pop
arpl
mov
mov
mov
sbb
mov
cmp
cli
lock
test
jg
inc
mov
push
addb
add
or
add
xchg
movsl
xchg
in
inc
pop
cmp
add
cmp
out
mov
xchg
gs
les
mov
add
push
das
sbb
int
aad
cmpsl
adcl
xor
pop
xchg
sar
aad
inc
add
scas
out
mov
and
popa
push
push
jg
dec
ja
fs
mov
add
cli
icebp
mov
je
test
je
repz
push
add
or
data16
test
inc
add
mov
dec
movb
shll
or
inc
fistps
add
cwtl
jnp
inc
fildl
stos
out
cmp
leave
pushf
outsb
inc
sbb
push
dec
mov
xlat
leave
test
add
daa
jle
mov
in
sbb
movsb
aam
lods
call
mov
add
fsts
jge
cmp
std
out
fadds
int
in
fxch
cli
or
sbb
mov
lock
jo
xchg
loopne
add
add
dec
xchg
push
fisubs
jnp
add
cltd
nop
scas
inc
cmc
pop
and
xchg
shlb
push
cmp
sbb
jne
jns
mov
aaa
xchg
push
rolb
add
adc
cs
sbb
lahf
scas
in
addr16
dec
ss
ds
jne
and
inc
imul
jl
xor
andl
movb
inc
add
xchg
sbb
push
xchg
and
lahf
or
jne
pushf
inc
add
adc
test
ja
push
xor
adc
mov
add
stos
mov
add
divw
jle
sbb
clc
pop
jno
cmp
insb
rolb
adc
cltd
jg
mov
cmp
sbb
and
out
dec
and
sti
movsl
mov
scas
mov
sbb
mov
mov
cmp
sbb
sbb
fmul
dec
mov
hlt
add
movsl
dec
mov
adc
dec
xor
inc
add
lock
jae
test
aam
add
mov
dec
and
shll
add
nop
arpl
je
add
jmp
sbb
les
cmc
pushf
push
add
std
pop
mov
push
add
insb
mov
dec
insb
aaa
arpl
bound
sbb
cmpsl
das
push
pop
sahf
jge
push
adc
add
push
addr16
lods
aad
rcl
int3
and
mov
add
sub
loopne
push
les
cmpsb
imul
stos
or
jle
xlat
mov
in
imul
mull
add
cmovnp
shlb
mov
movb
sbb
jb
cmc
lahf
mov
orl
insl
movsl
fcmovnbe
mov
sbb
out
lods
loope
fisttps
jecxz
mov
sbb
popf
fcom
xchg
push
lcall
dec
jns
shll
mov
jmp
fcompl
movsl
ljmp
cli
jo
add
mov
mov
mov
pop
or
in
add
add
adc
xor
sub
mov
mov
or
cwtl
insl
cmp
xchg
or
test
jo
or
std
sbb
fs
mov
flds
add
sub
xchg
mov
add
dec
pop
cwtl
add
addb
repnz
aad
mov
dec
mov
add
jb
test
iret
mov
xor
shrb
outsb
das
dec
and
mov
fldl
clc
popa
jo
repz
cmp
call
sti
stos
aaa
mov
aad
cli
jle
inc
movsb
jle
ds
pop
mov
lds
xor
faddp
add
in
and
pushf
dec
adcl
ja
cltd
cltd
roll
ffree
mov
mov
xor
add
stos
dec
std
movb
int3
roll
cmp
push
dec
aaa
test
or
outsl
fadd
add
push
jbe
sub
pop
mov
fwait
shll
inc
add
out
add
or
movb
xchg
sbb
jae
ja
int
loop
repnz
dec
shl
int3
les
xor
cmp
xchg
jmp
xchg
add
inc
pusha
add
test
push
insb
jl
push
add
out
jnp
cltd
ss
and
add
mov
outsl
xchg
mov
mov
mov
jmp
inc
add
rol
int3
mov
outsl
arpl
jno
ljmp
out
pop
cmp
push
jg
jnp
mov
and
cmp
cmp
shrb
xchg
add
xchg
les
stos
jmp
cmp
insb
mov
xchg
inc
xchg
and
js
inc
mov
iret
add
negb
sub
aaa
dec
mov
les
out
into
das
xor
add
mov
call
adc
test
lret
push
ljmp
add
jg
xlat
bound
fldenv
jecxz
hlt
pop
test
popa
mov
mov
push
mov
insb
stc
clc
xor
cmpsl
es
jg
addl
mov
cltd
nop
mov
add
mov
fcmovnbe
cli
sub
in
loope
or
in
push
jns
add
outsb
lret
divb
jbe
push
dec
xor
repz
scas
add
pop
jno
ds
hlt
movb
cwtl
mov
add
add
push
cld
icebp
or
cmp
push
push
mov
inc
mov
stos
lea
repz
movsb
add
and
or
fs
ja
push
in
rolb
dec
or
std
jbe
insl
addb
scas
das
mov
fcoms
cmp
xchg
mov
sbb
cmp
out
add
sarl
jnp
push
add
inc
fldln2
mov
add
xor
jns
mov
mov
xor
dec
test
aaa
xchg
les
or
push
fstpl
mov
sub
movsl
popa
out
outsb
clc
push
and
add
sub
mov
popa
cld
mov
dec
pop
inc
jae
mov
adc
xor
add
scas
adc
cmp
adc
and
xchg
ret
in
or
mov
xchg
scas
and
and
xor
dec
fprem
or
dec
push
mov
dec
add
ds
adc
push
pop
cmc
adc
add
pop
imul
pop
and
and
adc
dec
dec
and
ret
mov
add
jecxz
movsl
loope
fisubl
arpl
std
jmp
ret
jne
inc
add
mov
jl
lds
ss
mov
push
mov
cld
out
xchg
cmp
arpl
mov
js
push
int
add
jge
xchg
lret
xor
xor
push
js
add
mov
mov
push
sub
in
mov
add
ljmp
add
fldt
pop
push
xchg
pop
ljmp
xchg
sbb
ja
stos
mov
add
daa
sbb
cmp
push
push
pop
xchg
lock
cli
daa
addb
xor
add
xor
divb
jbe
mov
jg
push
pushf
cmpsl
xor
mov
sub
push
xchg
add
jge
dec
es
xchg
lret
mov
xchg
jbe
mov
pop
roll
int
mov
add
jnp
cmpsb
ss
dec
pop
sbb
push
imul
jbe
jbe
add
bound
add
mov
popf
lea
lods
xlat
fxam
lea
add
inc
and
nop
faddl
movsb
jne
mov
or
cmpsb
push
add
jo
mov
push
addb
jle
pop
fcoms
ficoml
and
shlb
or
mov
gs
xchg
fnsave
fbstp
out
pushf
lock
arpl
push
stos
fs
daa
adc
popa
adc
or
ret
push
add
mov
addb
jb
adc
add
outsl
movsb
lahf
loop
pop
mov
lds
stc
cmp
adc
jecxz
add
gs
or
inc
add
or
sub
testb
add
cwtl
sbb
sub
push
std
stos
pop
loop
stos
xchg
js
ljmp
and
add
or
arpl
add
popf
lret
xchg
jb
sbb
xchg
push
sbb
jb
mov
adc
and
mov
int
cmp
out
outsl
repz
pop
int
push
aam
dec
ljmp
shlb
pop
loop
mov
sbb
add
shll
imul
fcmovnbe
dec
enter
or
cwtl
inc
add
cmpl
popf
and
add
aas
sub
popa
lds
xor
inc
cmpsb
in
daa
cmc
out
rolb
jp
aas
lahf
dec
xlat
sub
repz
popf
dec
addb
xor
cmpsl
rol
add
scas
sub
pop
mov
subl
pop
or
push
cmp
daa
lea
in
jecxz
add
jbe
push
xor
loope
enter
out
repz
add
jbe
inc
add
mov
aad
push
mov
mov
sub
ficoms
idiv
out
dec
adc
jle
outsl
setae
imul
add
inc
add
call
jns
pop
mov
outsl
rcrl
jo
in
mov
stc
sub
pop
cmp
sub
sbb
mov
inc
add
mov
xor
test
std
push
inc
add
or
cltd
cltd
pop
inc
add
stos
addr16
ss
mov
add
cmp
imul
xor
add
adc
cmp
mov
icebp
cmp
dec
inc
mov
into
mov
shll
add
lods
push
jg
xchg
add
inc
add
jne
mov
push
jnp
add
gs
sbb
lret
shll
mov
cltd
and
jmp
sub
psadbw
dec
je
inc
add
es
mov
inc
dec
or
and
test
jecxz
push
xor
cli
shrb
imul
or
cmp
add
shrb
or
out
add
cwtl
mov
cs
dec
ljmp
jae
stc
mov
out
sbb
lret
fistpll
push
call
jae
pop
insb
and
mov
cmp
and
lods
pop
out
pushf
mov
and
mov
fwait
and
add
mov
aad
pop
xchg
adc
cltd
xor
add
add
loopne
rcr
nop
push
push
add
pop
fsub
ja
jl
outsl
mov
inc
add
filds
lds
add
pop
adc
fdivrl
fdiv
cli
test
push
add
decb
aas
aam
push
inc
pop
cmc
rcrl
fisubrl
sub
xchg
movb
push
mov
fisttpl
mov
dec
pop
cwtl
xor
and
or
mov
add
lret
hlt
mul
add
lods
jmp
dec
dec
adc
les
adc
leave
xchg
lds
cmpl
xor
addb
add
sub
or
addb
inc
add
xchg
sub
push
addb
push
jp
mov
mov
cltd
bound
fistpll
cmpsb
aad
add
outsb
jbe
das
in
add
stos
adc
add
add
add
dec
dec
mov
push
aas
insb
in
and
int3
jg
mov
leave
push
out
xchg
cmpsb
mov
mov
mov
loopne
ret
jns
arpl
mov
and
outsl
inc
ja
stos
int3
dec
sub
dec
jo
add
lahf
and
or
push
mov
add
pop
loope
inc
in
arpl
mov
cld
in
push
pop
push
inc
add
and
inc
add
std
fstpt
clc
mov
adc
cmp
sub
jmp
add
dec
fsubrp
psraw
adc
or
addl
faddl
int
push
jno
push
and
add
add
add
shll
frstor
sbb
shl
sbb
mov
dec
js
dec
adc
add
imul
mov
mov
ds
sbb
mov
jno
and
loop
mov
push
jbe
fs
imul
jnp
popf
xchg
ja
add
dec
jg
mov
cmp
rcll
mov
lds
shll
add
jp
mov
mov
pop
popf
xchg
add
mov
cmc
fidivl
lock
jo
or
mov
mov
mov
sbb
ret
cltd
mov
adc
outsl
pop
sbb
mov
test
mov
add
es
fidivrs
push
es
test
mov
jnp
dec
out
out
scas
jmp
insl
xor
jl
adc
add
push
mov
into
dec
push
mov
in
xchg
inc
mov
sub
adc
push
xchg
pushf
pusha
add
sub
lret
ret
dec
rclb
rolb
sbb
repnz
xor
les
cmp
mov
push
push
sbb
enter
testb
add
les
mov
add
add
mov
outsl
insl
into
sub
rolb
int
sarl
outsb
cltd
inc
loopne
movsl
mov
mov
push
jl
stc
xchg
xor
sahf
cld
je
sbb
in
jae
sbb
or
mov
or
pop
sub
jecxz
xchg
jne
popa
ds
sub
mov
rclb
xchg
incb
or
fwait
leave
pop
fidivrl
insl
lahf
add
push
xchg
push
mov
les
jns
xchg
dec
andl
daa
mov
pop
movsb
fldl
bnd
jo
inc
add
clc
mov
adc
rcrl
aaa
fcoms
jae
adc
les
faddl
jns
in
sub
add
pop
cmp
mov
or
xor
je
add
add
addr16
rcrl
pop
cli
aaa
cmpsb
cmc
ljmp
int
inc
add
in
mov
sti
mov
dec
pop
cli
xor
add
jl
and
aaa
cmp
into
add
dec
xchg
enterw
add
mov
pop
add
aad
add
mov
add
sbbl
mov
push
loopne
pop
pop
sub
add
add
inc
sbb
cltd
xor
add
xchg
mov
mov
xor
inc
test
add
mov
mov
movb
les
mov
imul
adc
xchg
test
pusha
add
mov
ror
xchg
dec
pop
cmpsb
mov
lahf
enter
pop
pop
call
int3
fsubl
pushf
add
pop
faddl
scas
das
pop
lret
add
mov
out
adc
sahf
data16
addb
int3
jo
iret
lods
adc
addr16
cmp
lret
mov
or
sbb
pop
push
lock
pop
sbb
or
xchg
test
cs
cltd
das
xor
sbb
cmp
cmc
stos
dec
into
mov
add
pop
int
popa
aas
mov
inc
test
or
inc
add
in
cmpsl
imul
andl
xchg
stos
pop
sub
stos
mov
dec
loopne
inc
push
jp
add
push
jnp
loope
dec
and
popf
shll
xchg
in
adc
mov
adc
xor
loopne
cmp
jle
shrb
add
add
movsl
pop
mov
jmp
jo
aam
movsb
xchg
stos
jp
mov
add
add
or
pop
dec
scas
enter
cmpsb
out
lds
movsb
in
stos
sub
cwtl
cmp
or
movsb
scas
mov
cmpsb
stos
cmc
inc
add
fimuls
adc
insb
push
lods
mov
daa
daa
addb
and
sar
call
pop
ret
mov
aad
fwait
inc
fnsave
test
mov
les
insb
addb
ffreep
sbb
lret
cmc
mov
push
and
inc
add
pop
js
aad
outsl
mov
dec
pop
fimuls
xor
and
cmp
cmp
inc
dec
cmpsl
icebp
fcmovu
pop
leave
xchg
in
fnstcw
mov
scas
mulb
pop
mov
jbe
add
ljmp
aaa
jno
addr16
scas
enter
ja
push
daa
push
inc
ficompl
subl
lcall
ds
ficompl
daa
push
pop
lods
pop
roll
movsb
mov
in
loope
mov
jns
xchg
test
xchg
js
es
push
loopne
jg
insb
xchg
dec
jle
pop
mov
rcrb
mov
add
jae
in
popf
mov
lcall
mov
insl
ficomps
ja
add
add
imul
lock
add
ret
sub
and
adc
inc
aad
or
add
ficompl
add
adcl
outsb
add
aas
popf
inc
add
or
cmc
addr16
in
push
mov
imul
mov
int
inc
add
xor
repz
jle
add
hlt
mov
push
pop
dec
and
pop
mov
int
sub
jge
in
enter
cmp
mov
pop
xor
pop
jge
add
xor
push
dec
shrl
xor
outsl
or
mov
movb
xchg
inc
push
lea
pusha
add
adc
push
insb
js
mov
add
out
test
in
lahf
ds
loop
out
fidivrl
xor
in
icebp
das
repz
movsl
adc
mov
xchg
add
in
cmpsb
add
mov
addb
scas
ret
test
pop
cld
sub
or
fs
fdiv
cltd
and
fldcw
das
inc
cld
adc
and
cwtl
outsb
sub
jnp
loop
ds
sub
dec
nop
adc
popa
call
test
enter
pop
ljmp
sub
push
add
or
add
xchg
movb
add
je
call
adc
pop
les
rcrb
aam
loopne
hlt
push
dec
js
and
mov
add
in
fadds
pusha
add
mov
add
clc
push
repnz
or
cmp
scas
mov
repz
push
and
jecxz
xchg
adc
loop
testl
ret
add
dec
cmp
addb
cli
cmc
dec
adc
xchg
adc
test
inc
add
and
test
adc
std
xchg
gs
xchg
inc
dec
jne
out
jecxz
dec
ja
add
in
pop
xchg
movsl
imul
repz
and
xchg
imul
jnp
and
hlt
inc
add
insb
loop
mov
mov
dec
cmpsb
fbld
cmp
or
inc
and
inc
add
push
push
mov
ficompl
push
add
mov
push
je
add
test
add
inc
and
cld
int
mov
sbb
cwtl
nop
les
cmpsb
dec
or
sub
pmulhuw
pop
in
loop
inc
mov
outsl
outsb
inc
add
and
hlt
hlt
xchg
mov
mov
sti
mov
mov
lret
ret
imul
dec
dec
imul
sub
jle
mov
lret
adc
jge
cmp
or
gs
icebp
out
lea
dec
xchg
inc
mov
xor
rolb
and
push
xchg
movb
jg
add
pushf
test
add
repz
jo
sub
mov
and
mov
add
add
test
xor
out
sti
cmp
or
jle
sahf
adc
push
adc
test
pop
mov
xchg
adc
xchg
cli
aas
shrl
cltd
mulb
test
into
sti
mov
inc
add
mov
rclb
dec
and
and
in
lods
mov
ret
int
lods
fstpt
cmp
add
inc
add
lea
lea
incb
sahf
cltd
adc
js
ret
jle
mov
in
psllq
lahf
test
stc
pop
fstl
sahf
jnp
lahf
cmp
add
pop
inc
add
stos
lock
mov
adc
and
add
xchg
in
inc
add
test
xchg
jnp
loopne
cli
push
cmp
cltd
aas
shl
out
addb
stc
inc
stos
push
movsl
push
and
cmc
push
arpl
out
enter
shl
mov
out
loopne
ret
jge
test
add
xor
cmp
sub
movb
ret
mov
call
add
rcrl
sub
add
and
push
xchg
or
add
ficomps
cltd
gs
les
mov
mov
cmc
push
cmp
mov
les
popl
mov
popa
sbb
sbb
clc
rcrl
sbb
mov
movb
add
sub
addb
mov
clc
dec
cmp
dec
enter
cmp
jmp
push
add
lds
cmc
or
push
ja
sbb
test
dec
popf
sub
push
adc
addr16
mov
sbb
lcall
rcr
insb
aam
and
cwtl
clc
jnp
and
mov
inc
add
add
ds
inc
add
cli
pop
jnp
add
repz
mov
pushf
scas
or
je
cmp
sub
loop
pop
sbb
lds
cmp
pop
xor
cmp
outsl
scas
lods
sub
and
mov
dec
inc
add
mov
add
in
add
sbb
sub
pop
mov
adc
pop
mov
xchg
and
add
popa
lea
jnp
xor
add
pop
cmp
mov
lock
lret
add
add
jp
cmp
pop
xor
dec
stos
test
dec
jbe
lahf
push
push
sbbl
das
lret
cwtl
pop
pusha
add
cmp
add
jb
aas
movsb
clc
push
add
clc
inc
mulb
ja
mov
insl
repz
out
outsb
fmull
add
lret
out
pop
xor
test
cld
adc
cmpsl
popf
adc
add
out
cmpsb
mov
test
sub
repnz
pop
outsl
ss
push
imul
pop
loop
pop
sub
fcomp
stos
pop
inc
sub
add
aam
addr16
cmp
out
shlb
pusha
add
in
sarb
ror
movsb
into
cmp
xchg
fisttpl
jp
or
fstpl
add
les
push
add
mov
cs
push
bound
add
movb
aaa
mov
rclb
cmpsl
mov
jle
xchg
aas
in
pop
repz
sti
dec
and
mov
jp
and
xchg
mov
dec
scas
xor
xchg
call
fsubl
clc
push
push
aad
or
xchg
imul
cmc
push
fs
fmull
cs
inc
add
mov
in
pop
add
test
push
mov
mov
adc
jl
cmp
xchg
xor
inc
addb
add
mov
aam
sti
xlat
daa
xor
aas
lcall
sub
test
mov
arpl
adc
sub
dec
dec
jae
pusha
add
pop
cmp
pop
aad
add
scas
jg
into
xchg
fists
mov
sub
lret
adc
jmp
enter
add
mov
cmp
outsl
movsb
pop
les
jbe
dec
cltd
mov
jge
xor
jmp
std
sbb
xchg
mov
cmp
int
lret
or
adc
mov
or
inc
add
add
out
hlt
movsb
enter
jo
adc
inc
lods
sbb
add
cmp
out
add
sahf
arpl
add
add
cmpsb
mov
mov
xor
movb
in
and
pop
mov
xchg
cli
lock
scas
adcl
mov
in
push
mov
cltd
hlt
ret
and
movb
fldenv
repz
mov
and
push
add
push
in
addl
js
cmp
sbb
mov
add
push
cmp
add
in
outsl
mov
inc
add
push
push
or
cs
mov
int3
ret
daa
ret
xchg
push
das
imul
jle
arpl
jbe
fwait
sub
into
icebp
fbstp
dec
daa
out
add
sarl
movb
enter
aam
jle
cs
mov
stc
sti
ret
insb
dec
push
adc
inc
inc
add
sbb
or
or
push
cmp
adc
stos
jb
add
mov
js
cli
negl
add
mov
push
jne
push
inc
cmp
imulb
jns
mov
add
stos
or
inc
addb
imul
lods
gs
inc
add
add
sub
loop
and
add
jge
add
mov
fmuls
sub
add
dec
mov
push
rcll
jne
dec
or
movsl
notl
pop
mov
add
cld
pop
gs
sub
mov
aas
sub
jl
loope
bnd
add
push
add
popf
shlb
mov
out
inc
je
mov
jecxz
add
fs
sarl
out
cs
insl
dec
cmp
or
add
and
inc
pop
jbe
jno
test
jp
add
fmull
mov
jg
leave
addb
push
mov
mov
add
mov
mov
add
mov
dec
pop
mov
xor
inc
add
jmp
xchg
sbb
aad
dec
cwtl
xor
in
add
add
sub
jb
stc
inc
add
or
imulb
sbb
jne
and
pop
jge
push
xchg
add
rcrl
js
in
jbe
shlb
fmul
movsl
arpl
jle
leave
stos
mov
xchg
es
mov
scas
adc
nop
jo
sahf
mov
adc
aaa
mov
aaa
clc
adc
push
enter
add
mov
xor
shlb
sbb
cwtl
dec
fsubs
inc
fs
push
inc
add
hlt
rclb
or
mov
add
sbb
push
xchg
mov
nop
xchg
mov
mov
call
mov
sahf
imul
sub
cltd
xchg
leave
insb
in
aad
add
dec
adc
inc
add
pop
cwtl
lock
add
mov
repnz
push
push
mov
and
xchg
inc
add
pop
loop
xor
outsb
xor
dec
push
call
adc
fistpl
fbstp
xchg
hlt
pop
push
mov
xchg
lods
mov
pushl
cwtl
dec
xchg
loope
out
test
dec
pop
add
push
mov
push
lods
mov
mov
cltd
pop
xchg
loop
je
std
test
addb
sbb
lahf
fldenvs
test
inc
add
jp
aaa
adc
push
dec
inc
add
adc
mov
or
mov
bound
pop
push
in
jne
frstor
lods
mov
mov
into
push
dec
pop
shrl
mov
inc
push
int3
cmp
and
inc
add
hlt
adc
sub
pop
dec
loope
cmp
sub
outsb
jmp
and
stos
mov
add
adc
inc
and
testl
aad
or
jnp
mov
fmul
mull
js
mov
add
dec
jo
inc
add
cmc
inc
add
cli
dec
xor
mov
popf
in
dec
test
sub
xor
icebp
fldenv
pop
push
test
imul
jge
xor
jne
add
pop
mov
sbb
mov
push
outsl
imul
loopne
sub
jl
adc
popf
xchg
adc
mov
lret
jno
add
ds
test
push
mov
aaa
fwait
push
lds
into
push
flds
sub
xor
jbe
decb
and
jo
add
xlat
inc
int
xchg
addb
icebp
in
andl
mov
mov
push
mov
insb
mov
ss
subl
add
cmp
mov
inc
loope
and
movsl
pop
mov
pop
and
cld
xchg
push
popa
push
pop
mov
jns
movsb
pop
movb
out
add
rcll
jb
arpl
lahf
adc
pop
cmp
scas
cli
pop
lahf
std
cmp
cmp
in
lahf
pop
add
mov
add
test
push
outsb
testb
int3
sahf
loopne
sub
int3
in
popa
rcrl
adc
inc
add
add
cs
in
mov
insb
mov
and
call
lret
addr16
test
adc
sub
fnstenv
popf
dec
in
test
or
sub
xchg
xchg
aaa
adc
and
inc
jb
ret
cli
mov
pop
mov
sbb
int3
in
or
stos
xor
mov
mov
add
mov
pop
leave
xorl
jmp
push
jno
int
test
xor
mov
rolb
mov
add
add
popf
jbe
add
hlt
jno
pop
fistpl
cmpsl
sbb
ret
mov
and
insl
movl
rolb
dec
dec
dec
sti
jne
push
mov
sbb
add
cmovo
repnz
lods
lret
add
lock
pop
pusha
add
pop
push
mov
mov
dec
mov
push
rcl
sub
xor
sub
pop
fisttps
js
adc
ja
jne
pop
or
push
scas
popf
sbb
mov
add
sbbl
pop
push
pop
repnz
xchg
addb
mov
or
test
and
inc
add
xchg
js
add
lcall
cmp
dec
fidivrl
sbb
add
sbb
add
push
xchg
mov
add
xor
inc
xchg
int
push
pushf
or
inc
fidivl
idivb
fsts
outsl
aaa
movb
imul
cmpsl
cmp
fistpl
aad
jnp
add
jbe
push
mov
mov
loope
pushf
loopew
add
sub
sub
sbb
mov
push
outsl
cmp
pop
jae
movsl
bound
loopne
lock
adc
mov
addb
rol
cmpsl
sarl
adc
lea
je
xchg
jb
pop
cmp
pushf
icebp
mov
sbb
ljmp
aaa
dec
xchg
mov
mov
int
dec
xor
imul
into
cmpsb
imul
xor
nop
outsl
mov
add
xchg
sub
cld
mov
mov
fadds
dec
hlt
aas
leave
and
stos
sub
dec
pushf
mov
xchg
xor
add
inc
add
xchg
jb
mov
and
imul
inc
jge
push
push
pushf
enter
into
ss
add
xor
mov
ss
and
insb
fs
bound
fists
fisubl
outsb
lea
in
xchg
push
cmp
pop
arpl
sub
lea
or
xchg
pop
fmull
ljmp
or
add
and
iret
mov
mov
fnsave
add
inc
push
jg
out
push
mov
pop
mov
outsl
scas
push
aam
iret
and
add
inc
add
cmc
xor
sub
xor
adc
cmp
enter
add
xor
mov
mov
in
jmp
loop
in
sub
popf
mov
neg
pusha
add
mov
xor
lret
cmp
sub
ja
cmpl
push
call
scas
pushl
out
cmp
add
in
notl
test
mov
mov
add
arpl
mov
fstpt
rcrb
and
or
outsl
push
sbb
cmp
lcall
mov
jbe
sbb
add
sub
xor
fisubl
je
add
decl
out
cmp
mov
fimull
roll
adc
mov
add
mov
es
mov
add
mov
mov
pop
cmp
add
repz
pop
mov
subl
mov
dec
xchg
test
in
loop
roll
cmc
adc
inc
add
in
xor
add
add
jp
mov
add
fs
jno
nop
jle
test
stc
push
mov
xor
sarl
pop
inc
add
lea
xor
adc
xchg
cltd
roll
test
fistps
mov
push
imul
test
sbb
pusha
add
push
jb
dec
sarb
pop
lcall
cmc
dec
mov
add
scas
rolb
xor
jmp
hlt
add
rcrb
sub
add
fcoms
sub
xchg
jmp
mov
add
lds
inc
add
movsl
les
cmpsl
test
xor
clc
aam
pushf
or
inc
imul
dec
aad
repz
add
outsl
data16
mov
jo
jb
ss
cmpl
mov
fwait
ljmp
push
mov
pop
fs
add
fimuls
sub
inc
or
loopne
test
mov
mov
add
lahf
icebp
dec
popf
pop
fildll
test
scas
div
stc
pop
jns
sbb
out
add
mov
adc
add
mov
lret
dec
xchg
xchg
ss
dec
in
enter
cmp
mov
xlat
sub
mov
aam
pop
pushl
jmp
push
jmp
push
sub
outsb
mov
mov
test
scas
shr
xlat
das
frstor
es
std
test
jmp
mov
popl
add
push
pop
and
and
js,pt
pop
cmpl
mov
add
leave
pop
push
icebp
mov
add
ljmp
pop
mov
or
xchg
addb
add
or
sub
pop
jp
mov
repz
xor
add
xlat
daa
and
xchg
jle
add
popa
pop
mov
in
fnstsw
cmpl
icebp
cwtl
inc
mov
adc
movsb
jo
rolb
sbb
inc
add
jl
xchg
lods
in
imul
rcrl
and
sub
ja
dec
nop
push
insb
std
outsl
jl
outsl
and
ret
lock
stc
sub
mov
addb
adc
data16
add
adc
lret
call
add
imul
out
mulb
cli
xor
pusha
add
iret
movsb
add
inc
add
mov
mov
cmpsl
add
jne
frstor
mov
fsubl
loope
fdivs
inc
add
mov
or
rcl
out
std
mov
lock
add
add
icebp
jp
dec
mov
push
fisubl
or
lret
add
pop
mov
test
jmp
adc
lds
xchg
sub
sbb
jge
imul
orl
inc
add
and
lret
add
pusha
add
pop
out
in
gs
add
std
and
mov
jnp
rorl
fwait
xor
adc
add
mov
jne
add
lret
adc
cmpsb
fcomps
jle
outsb
and
ud0
or
inc
add
sar
push
pop
add
mov
pop
lcall
add
inc
add
leave
push
iret
stos
mov
sbb
adc
add
jmp
add
fistpl
jne
xchg
and
fdivp
es
adc
mov
push
xor
pop
or
xchg
xor
scas
or
dec
sarb
mov
lds
add
mov
add
lods
imul
add
push
lcall
loope
inc
mov
orl
dec
jge
or
scas
insb
or
test
inc
cmpsb
or
in
pop
pusha
add
inc
rsm
xchg
mov
lret
xor
add
rcrl
sbb
inc
add
mov
adc
repnz
add
mov
mov
or
add
or
jmp
dec
inc
scas
test
loope
inc
lea
loope
sahf
push
aaa
imul
dec
pop
je
mov
push
pop
push
jne
mov
pop
mov
cmpsl
adc
xchg
pop
pusha
add
or
xchg
cmp
jle
into
mov
adc
cwtl
mov
add
xor
add
mov
lcall
cmpsl
lods
pop
fstps
push
push
rorl
inc
add
aas
popf
add
jbe
mov
lea
jne
inc
mov
fs
mov
add
arpl
xchg
loop
cmc
mov
fcompl
push
pushf
push
xor
cli
jmp
xlat
mov
add
add
cmpsl
in
add
scas
dec
xchg
mov
add
add
jp
mov
add
add
dec
imul
push
add
or
fistl
and
jmp
add
lock
jns
add
push
add
push
icebp
jbe
push
adc
add
dec
xlat
mov
dec
lods
dec
shlb
leave
sti
lret
imul
cltd
inc
add
loop
push
jg
mov
lret
dec
push
cmp
add
fistl
adc
push
bound
and
out
mov
push
movsb
fildl
adc
dec
loope
ljmp
sti
frstor
inc
add
mov
scas
aas
pushf
jle
sbb
dec
scas
xchg
push
popa
push
mov
push
loope
pop
repnz
int3
sbb
ja
data16
add
imul
cmp
adc
pop
enter
into
jns
hlt
xor
in
clc
mov
add
xor
insl
sbb
or
mov
mov
add
xchg
jecxz
add
das
sub
adc
arpl
xchg
and
mov
pop
xorl
add
cmp
cs
sarl
ljmp
les
fcmovbe
lods
movsl
fdivl
jb
sbb
aas
pop
push
push
or
pop
cmc
pop
nop
cmp
pop
es
add
lea
mov
out
imul
mov
inc
imul
fimuls
popl
jne
ds
dec
jno
popf
mov
adc
icebp
mov
je
roll
sti
xchg
loopne
and
hlt
rcl
inc
fmul
out
xor
push
je
lret
and
jo
fsubrs
jmp
fsubl
dec
jns
pushf
adc
sub
lret
xor
push
rcll
and
mov
xor
add
mov
fnstenv
cs
xlat
sti
add
fdiv
inc
add
mov
push
cmpsb
imul
inc
add
into
hlt
inc
add
or
pop
xor
jge
mov
leave
xchg
mov
mov
popa
inc
add
inc
add
std
mov
outsl
and
bnd
mov
mov
jno
jne
pop
mov
in
inc
add
lea
out
xchg
in
test
je
aas
cwtl
xor
mov
pushl
or
xchg
pop
arpl
xchg
sarl
pop
aam
int3
pushf
insb
dec
mov
cmp
rcr
jmp
push
add
inc
nop
mov
add
push
xchg
jle
and
mov
clc
daa
fistpl
push
inc
mov
int
xchg
rolb
jno
add
push
or
add
into
jg
lods
leave
mov
ret
sti
mov
push
sbb
dec
imulb
lds
add
jbe
mov
les
sub
inc
add
rep
pusha
add
push
push
popf
sahf
push
add
pop
adc
loope
xor
sub
lock
negb
and
pop
push
jp
push
add
jae
add
sbb
or
pop
and
cs
jp
jo
jge
cmpsb
mov
pop
outsl
mov
and
mov
add
dec
mov
dec
in
sbb
push
incb
ja
xor
fstps
mov
gs
outsb
int
lret
cmp
dec
sti
cmp
shll
mov
sbb
popa
sub
cmp
daa
sbb
add
fwait
loope
hlt
loopne
add
pop
std
jge
xchg
adc
jle
lret
stos
mov
jl
insb
leave
cmp
jg
xchg
lret
push
and
add
jno
aad
pop
xchg
sarb
xchg
xchg
stos
decb
scas
inc
add
xor
xor
cltd
ret
iret
xor
cmpsl
orl
cmpsb
icebp
jno
pop
xlat
add
cld
xor
xor
gs
loop
ret
sbb
out
add
add
fisttpl
xchg
sub
pop
jnp
push
cmp
dec
xchg
arpl
sbb
add
mov
sub
and
mov
add
xor
scas
cmc
cs
jmp
cmpsl
mov
ret
xlat
jno
test
stos
push
add
xchg
insb
lret
addr16
add
out
ret
adc
pop
lret
pop
cmp
cmp
loopne
mov
pop
cmp
and
je
xor
lods
in
adc
movb
inc
cmp
pop
mov
or
popf
fs
sbb
test
dec
lods
inc
add
xorl
pusha
add
movb
in
cmpsb
cmp
jmp
and
sub
and
xchg
aad
add
mov
add
rclb
jns
jecxz
mov
add
sbb
stos
call
mov
adc
loope
mov
jge,pt
or
xchg
shrb
push
cs
add
or
sbb
add
call
push
jmp
add
in
add
jns
ss
dec
ja
mov
mov
mov
aad
jae
aam
add
fxtract
inc
add
pop
inc
or
stos
or
mov
pop
das
icebp
loope
jae
xor
add
adc
aas
fbld
pop
ss
and
mov
cwtl
push
sub
mov
ficoms
or
add
insb
in
aam
stc
or
push
mov
leave
xor
mov
mov
sbb
addr16
mov
add
mov
daa
mov
xor
movsl
fstl
cmp
stc
jl
fwait
jo
shll
push
aad
ja
adc
pusha
add
push
mov
add
nop
pop
push
fcmovnbe
and
jo
adc
cmp
rcrl
or
mull
test
dec
popf
pop
mov
movb
add
gs
xchg
mov
pop
push
jns
mov
nop
enter
dec
clc
dec
lods
lahf
fsubs
out
lods
addb
lret
outsb
xor
fsubl
add
push
loope
mov
fisttps
mov
and
inc
js
iret
sahf
mov
dec
jp
into
addb
inc
mov
xor
mov
add
push
or
mov
xchg
fldt
ss
xor
add
push
add
outsl
add
sub
xchg
dec
xchg
cmp
cmp
xchg
addb
fwait
push
xchg
stos
jno
add
sub
jl
or
pop
ja
cmp
xor
add
lods
out
adc
jbe
mov
add
or
pusha
add
cld
pop
dec
add
push
or
add
jnp
movsb
cmpsb
pop
stos
and
lods
inc
sub
fists
lret
loope
and
add
lcall
mov
mov
mov
pop
inc
add
vmulpd
mov
pop
mov
pop
pop
pop
pop
and
fdivr
mov
mov
mov
add
nop
add
imul
mov
mov
movb
mov
adc
add
ja
mov
test
jae
lods
repnz
icebp
aam
in
test
sbb
out
jg
cli
insb
mov
jecxz
add
shll
push
adc
xor
shlb
das
xor
ficoml
in
push
push
push
pop
pop
sub
dec
jns
jmp
into
mov
lock
ret
xchg
ret
sbb
cld
int3
inc
mov
xchg
ds
sub
mov
add
add
lcall
add
cmp
mov
jge
add
sarl
dec
es
mov
movsl
adc
cs
out
cmp
xchg
aas
cs
call
fs
out
fildll
shrl
xor
add
sub
xlat
addr16
ljmp
pop
mov
mov
ss
push
xchg
ret
dec
shll
adc
addr16
in
xchg
xchg
movsb
leave
test
inc
add
fwait
lcall
lcall
push
inc
lods
cs
fmul
rolb
imul
inc
sub
add
xlat
inc
jo
xor
xchg
scas
pop
outsl
cs
repz
xlat
xchg
adc
jle
add
aam
add
lret
scas
test
jmp
adc
xlat
jecxz
jmp
nop
loopne
addb
cwtl
cmc
pop
adc
das
std
movsb
cmc
insl
mov
cmc
push
fistps
out
pushf
adc
or
or
pop
sub
popa
mov
add
push
addr16
push
pop
frstor
sarb
sbb
outsl
dec
push
bound
out
mov
mov
pop
pop
in
and
xchg
adc
ret
ficoml
loope
das
popf
aaa
jecxz
das
out
lcall
rcr
cmpsl
mov
sub
in
loope
cltd
les
faddl
outsb
mov
fsts
push
scas
push
cmp
dec
subl
mov
call
xchg
pushf
adc
ja
add
cmp
ficoml
adc
push
add
jbe
and
pop
faddl
sbb
jle
fs
stos
mov
test
insl
cltd
cltd
push
cs
xor
pusha
add
add
imul
sub
xchg
btr
ret
bound
jb
add
pop
insb
inc
push
pop
rcll
sbb
adc
xor
in
cs
mov
add
adc
pop
mov
add
outsb
xchg
into
shll
stc
jo
repnz
aas
cmp
aad
sbb
les
stos
push
xchg
mov
loop
mov
mov
pop
lods
jl
into
mov
add
out
mov
add
nop
xchg
nop
ds
ljmp
cmpsb
bound
aad
sub
or
cmp
adc
pop
adc
push
fs
or
fcomp
xor
add
push
imul
and
inc
push
ja
push
es
xchg
ss
cmp
dec
test
movsb
iret
stc
and
mov
pop
idivl
enter
insb
mov
sti
cmpsl
xor
mov
popf
lods
xor
push
xlat
xor
fs
int
into
insl
mov
int3
cltd
pop
push
lret
loope
mov
arpl
dec
mov
rolb
stos
push
cmpsb
cmc
ficompl
add
js
mov
cltd
jecxz
push
adc
mov
adc
imul
out
lods
ret
dec
and
setl
into
xor
dec
in
pop
mov
add
add
adc
int
das
repnz
pop
adc
addb
fldl
into
call
pop
dec
push
pop
push
in
popf
jmp
loope
jl
push
mov
pop
aam
or
jmp
daa
cmp
or
es
xchg
and
pop
xchg
and
dec
sbb
jmp
push
add
daa
xlat
sub
test
pusha
add
push
pusha
add
and
enter
inc
add
in
in
jmp
fisubl
sti
push
ret
imul
adc
aas
mov
sti
xchg
mov
add
clc
imul
mov
pop
or
out
lret
cmp
iret
pop
fsub
scas
std
movsl
mov
or
je
jmp
xor
imul
lret
xchg
out
push
out
push
arpl
adc
out
sub
jnp
jo
std
fisubs
mov
cmc
flds
call
sbb
jo
mov
movb
or
insl
cmpl
add
add
or
outsl
fimull
lret
lahf
jp
iret
testb
and
ja
dec
in
mov
xchg
roll
mov
add
push
popa
cmpsb
dec
and
push
and
loopne
fucomi
jg
mov
add
or
popa
dec
dec
sub
inc
add
daa
pop
movsb
aad
pop
jle
bound
gs
movsl
scas
test
cld
mov
add
ljmp
mov
ljmp
jbe
push
xlat
dec
dec
xchg
pop
dec
inc
add
inc
mov
div
mov
jge
add
dec
mov
aam
add
insl
enter
sbb
addr16
and
cli
inc
add
cmp
pop
data16
jmp
mov
sbb
push
negb
test
add
dec
das
or
in
out
imul
out
xchg
call
in
fsub
lods
jg
push
movswl
es
cs
inc
lret
pop
or
int3
mov
add
jbe
and
jmp
add
repnz
sbb
sbb
aas
push
xor
mov
inc
add
add
divb
fstl
push
jo
movsb
ficoml
sbb
push
loopne
jo
inc
add
lahf
and
je
scas
inc
add
mov
addb
ljmp
mov
xlat
or
aam
xchg
movsl
mov
dec
je
rcr
cs
stos
jl
mov
sbb
sti
sbb
inc
mov
rolb
mov
lds
mov
mov
cld
loopne
cmp
repz
lock
adc
lds
repz
loopne
js
cmpsb
je
pop
lea
push
movb
ds
cmpsl
movb
push
mov
xchg
cltd
mov
lea
add
pop
js
arpl
cmp
jp
mov
adc
pop
insl
movb
pop
pop
ret
fsubl
add
add
pop
or
push
adc
inc
add
push
repnz
loopne
test
data16
je
scas
out
xchg
gs
sub
push
push
or
cmpsl
out
js
out
jge
add
cmp
out
add
lar
xchg
mov
sbb
lret
aaa
push
out
fwait
out
nop
and
jb
pop
xor
mov
enter
mov
jne
push
addb
adc
add
and
xor
dec
ja
add
aas
int
into
je
dec
cld
mov
mov
lea
call
push
mov
cmp
jns
jecxz
lahf
insb
stc
mov
test
scas
cmpsb
push
shl
repz
daa
arpl
jle
cmp
loop
add
or
push
popa
std
sub
jno
push
popa
adc
fsubl
les
and
testb
xchg
outsl
bound
inc
test
mov
fisubl
add
mov
push
sbb
lods
sub
push
cmpsb
negb
rcrl
paddusb
inc
add
in
jecxz
stc
loop
int3
xlat
jg
insb
adc
stos
inc
push
or
addb
aam
push
adc
jecxz
cmp
mov
or
scas
rcrb
add
add
lods
daa
les
clc
push
in
mov
jne
or
or
das
popl
and
xlat
inc
add
mov
xchg
aaa
sub
add
lret
mull
mov
xor
sub
lahf
jecxz
movsl
mov
leave
into
sbb
xor
push
mov
lds
xchg
jns
add
insl
in
into
das
jg
negb
das
xchg
pushf
sbb
add
add
movb
popf
push
lds
icebp
imul
adcl
or
out
outsb
sub
clc
jno
sbb
push
mov
test
xor
pushf
std
stc
rolb
nop
fucomi
movsb
bound
scas
mov
sub
mov
inc
add
clc
sbb
cmpl
or
imul
cltd
xchg
cltd
xchg
mov
add
push
xchg
xchg
test
das
sahf
dec
jne
adc
mov
push
rolb
shlb
popa
aam
or
jbe
mov
add
add
push
int3
rclb
mov
add
inc
add
xor
aaa
inc
add
lock
sbb
xor
fwait
add
aam
sbb
addl
cmp
sbb
dec
mov
jl
xchg
in
insb
jae
stos
into
mov
xchg
sub
and
out
cmp
and
sub
jle
xchg
adc
ret
insl
push
pusha
add
js
pop
test
jnp
sub
lods
pop
jne
add
and
add
xchg
pusha
add
ds
xor
and
shrl
sbb
es
add
xchg
lahf
es
bound
push
daa
repz
dec
push
add
add
xlat
xor
daa
shlb
out
jle
xchg
hlt
in
inc
dec
pop
call
cmpsb
int3
mov
pop
test
jo
roll
repnz
push
push
xor
add
inc
cmp
add
sbb
xchg
mov
popf
jae
lret
add
add
dec
cmp
mov
push
jo
xor
or
out
inc
in
scas
add
pop
cmpsb
jge
push
and
add
test
pop
lretw
push
out
mov
in
roll
or
cmp
fidivl
push
js
lahf
loop
leave
adc
xchg
cmpsl
and
add
addb
out
addb
cmp
jne
xchg
lahf
mov
mov
jbe
add
into
mov
mov
jecxz
sub
sub
xchg
cmp
xor
add
jno
addb
push
xor
fxch
sbb
add
outsb
repnz
jle
cmp
mov
or
sbb
mov
xor
inc
add
dec
clc
insl
pushf
sbb
inc
add
mov
dec
ffree
inc
add
or
sub
cli
adc
out
pop
cmc
add
pop
pushf
lahf
adc
loopne
leave
outsl
and
in
cmp
fldcw
push
cwtl
addb
add
insb
jl
cltd
repnz
clc
cmp
inc
add
mov
and
loope
or
and
jo
aaa
jge
mov
rorl
cmp
jns
add
add
mov
xchg
push
outsb
cltd
push
xchg
stc
movsb
je
add
add
push
jmp
push
repnz
push
ret
jae
loop
sbb
lcall
stc
lret
sub
lcall
pop
in
jnp
mov
std
mov
scas
pop
cmp
clc
inc
jmp
sub
in
add
jne
add
addb
lret
sbb
shrl
push
std
cltd
js
dec
scas
add
xchg
fdiv
mov
popa
pop
push
test
dec
lahf
icebp
les
cmc
xor
dec
mov
sbb
add
inc
cmpsl
mov
push
push
loop
push
das
ds
stc
hlt
xchg
cld
icebp
das
dec
inc
fs
add
add
sbb
aaa
mov
and
add
mov
cmp
xchg
or
mov
inc
sub
add
mov
adc
shll
mov
dec
push
mov
mov
adc
dec
xor
ja
pop
push
add
mov
in
rolb
test
xchg
adc
and
cwtl
adc
cwtl
out
push
cmp
mov
jp
push
jnp
movsb
test
arpl
das
ljmp
push
push
stos
xlat
addr16
das
sbb
xor
sbb
adc
xchg
inc
add
fxch
fcompl
pusha
add
out
fs
add
ljmp
add
in
pushf
out
lds
mov
ret
sahf
test
xchg
cmp
inc
and
fcoml
and
add
fcmovnb
add
pop
jmp
cmp
mov
mov
cmp
ficoml
add
sub
sub
mov
scas
xlat
xchg
push
mov
pop
dec
cs
test
cmp
push
scas
clc
mov
push
bound
push
xchg
mov
std
popa
push
shl
xor
mov
stos
and
inc
loope
std
sbb
movsb
outsl
mov
mov
and
aaa
adc
nop
cmp
ja
xchg
data16
dec
mov
ljmp
notl
xchg
mov
jmp
mov
outsl
scas
push
sub
sub
inc
ud2
loopne
les
negb
mov
fs
inc
add
cmp
shll
loop
add
jge
enter
push
imul
jge
lods
pop
adc
push
insl
shlb
xchg
xchg
popa
sbb
add
add
jnp
push
inc
lret
test
leave
inc
add
rorl
bound
lds
jo
add
stos
or
inc
pop
jmp
mov
movb
leave
xchg
lret
jo
cmp
pusha
add
rcll
jbe
bound
pop
jmp
ljmp
stos
outsl
xchg
cmp
fcomps
xor
and
cld
rolb
pop
or
mov
xchg
and
xchg
pop
bound
fwait
sbb
int3
cmp
xchg
out
inc
add
sub
mov
mov
fisubl
or
cltd
cmp
mov
popf
ret
lods
out
stc
int3
push
mov
rolb
add
inc
pop
mov
repz
pop
rolb
fmull
icebp
aas
addr16
stc
inc
xchg
jno
test
loopne
lcall
or
mov
sub
add
jmp
push
mov
adc
cmp
sub
jae
sahf
imulb
cmp
xor
bound
jmp
or
sub
call
leave
outsl
push
add
add
out
adc
loop
test
hlt
xchg
mov
clc
add
or
inc
loope
mov
mov
xlat
int
add
xor
push
lods
rep
pop
stos
mov
enter
movsb
mov
xrelease
out
sub
push
push
insb
pop
stc
cmp
cmp
cli
call
mov
add
add
push
and
mov
lods
repz
xchg
cmp
addb
insb
outsb
test
movsb
cmc
cmp
and
xor
popf
shr
fsts
mov
add
imul
push
mov
rolb
jge
mov
ja
addb
push
dec
movsl
rolb
and
inc
add
sub
sub
incb
add
mov
mov
test
loopne
faddl
push
loope
push
jbe
mov
sub
arpl
testb
imul
sub
or
add
mov
testb
loopne
cmp
and
adc
sub
push
out
hlt
dec
ficomps
cmp
add
mov
push
mov
fidivl
sub
and
sbb
sub
pop
std
and
sub
nop
and
pushf
imul
ljmp
call
inc
add
and
std
scas
sub
add
test
mull
in
and
ficomps
stos
jecxz
aaa
mov
dec
shll
cmp
cmp
add
xor
add
call
jg
movsb
fwait
push
pop
popa
sbb
jnp
adc
vpaddusw
int3
rcrl
add
mov
xor
hlt
mov
outsb
adc
push
jb
aam
jecxz
loope
movsb
adc
mov
push
inc
add
mov
sahf
and
loope
hlt
int3
jl
push
arpl
jg
cld
mov
xchg
ja
lret
push
add
push
hlt
cmp
sbb
movsl
xor
mov
movsb
jbe
push
std
sbb
aam
scas
in
das
ret
cmp
or
dec
pusha
add
cmpsb
xor
sbb
push
mov
cmp
xchg
popf
popf
fdivrl
pop
mov
xor
enter
notl
scas
xor
jbe
fs
test
int
jne
jbe
rol
out
mov
out
mov
repnz
cmp
push
mov
frstor
mov
push
pop
cmp
es
out
icebp
in
dec
or
stc
adc
out
das
cmp
clc
add
inc
add
int
repz
cmc
decb
jbe
icebp
sahf
jle
lods
in
in
add
test
aaa
lods
mov
xor
add
sbb
add
in
pop
stc
imul
mov
xchg
and
push
imul
add
outsb
push
mov
add
and
out
lds
addr16
jl
fldcw
add
add
jns
dec
test
lods
insl
sbb
or
push
sbb
add
fsubrl
xchg
adc
fisttpl
or
jno
aad
imul
xlat
sbb
jge
add
inc
add
add
inc
cmp
aas
fprem1
cmp
pop
inc
ljmp
les
sub
pop
outsb
jne
mov
inc
mov
mov
imul
fucomp
cmp
push
addb
sahf
xor
cmp
cmc
jp
popa
clc
jmp
stos
scas
xchg
xchg
ds
icebp
xor
sub
jle
js
loop
std
inc
mov
int3
gs
inc
add
int
jo
mov
mov
jb
outsb
push
cmp
push
mov
mov
movsb
push
cmp
rsm
pop
mov
xorl
inc
mov
add
shrb
pop
dec
cmp
xor
add
xchg
adc
inc
cmp
not
pop
pop
call
stos
loopne
adc
sub
dec
and
lods
sbb
cmp
add
jge
xor
call
addb
jae
insl
adc
shrl
imul
int
add
jle,pt
test
mov
add
push
movsb
pop
gs
fldenv
ret
add
lds
jae
xor
sub
mov
imul
je
sub
mov
add
inc
add
sbb
cmp
add
test
mov
add
aas
pop
push
cmp
mov
loope
xor
cli
inc
inc
sub
push
insl
lods
inc
add
cmp
arpl
inc
add
pushf
pop
or
lods
jns
sbbl
or
jl
addb
mov
mov
mov
or
scas
pop
or
nop
ja
add
adc
lods
lods
mov
push
frstor
add
inc
mov
insl
inc
add
pop
and
add
mov
or
sub
pusha
add
cli
and
jecxz
fwait
mov
jb
mov
sub
and
sbb
jnp
outsb
testl
add
addr16
cltd
inc
add
add
outsl
out
jg
mov
bound
fistpl
push
push
mov
mov
inc
add
cmpsl
cmp
test
aad
inc
add
add
mov
push
inc
add
sub
sbb
dec
out
sub
xchg
mov
cmpsb
push
or
in
push
ret
push
add
cmpsb
sbb
addb
push
addb
imul
fildll
inc
add
mov
js
add
shrl
jno
test
dec
push
add
push
repnz
dec
xlat
lock
pop
into
mov
adc
push
add
into
hlt
and
cs
xchg
pop
mov
loopne
bound
mov
test
out
mov
inc
add
cmp
cwtl
stos
inc
adc
movsl
bound
fists
out
jmp
dec
jmp
cmp
push
fbld
pusha
add
ljmp
aaa
or
inc
rcrl
lret
hlt
ja
inc
movb
sbb
push
clc
or
sbb
adc
je
scas
ret
xchg
enter
add
adc
jns
out
add
jns
jge
jl
rcr
and
push
mov
ss
mulb
cld
ds
xchg
mov
or
rolb
adc
movsb
mov
ret
xchg
adc
dec
pusha
add
jle
pop
into
scas
sahf
or
adc
dec
mov
clc
mov
push
sbb
cmpsl
gs
cmp
xlat
or
add
je
jp
or
sub
add
sbb
fistpl
test
mov
xor
jg
xchg
leave
push
lret
faddp
movsl
out
push
call
mov
outsb
cmp
push
jmp
xor
into
div
or
enter
shll
jg
out
sub
loop
jp
dec
mov
dec
mov
add
loop
xchg
std
cltd
jno
mov
sub
mov
jno
mov
jle
add
ja
add
ficoms
sbb
lods
insb
addl
pop
mov
scas
ret
lods
or
mov
cmp
add
test
mov
cld
sarb
push
lcall
js
test
add
add
setle
iret
inc
push
and
enter
pushf
fwait
mov
aas
ljmp
fldl
xchg
enter
fbstp
dec
mov
xchg
rcrb
cmp
flds
lock
jmp
ret
mov
mov
fldlg2
sub
inc
cld
adc
add
xor
push
dec
cmp
mov
test
and
sahf
sbb
add
mov
mov
cli
mov
add
adc
adc
add
mov
js
pop
mov
scas
push
xor
mov
cli
hlt
inc
add
push
xor
cli
push
adc
jmp
or
cmp
pushw
icebp
add
cwtl
mov
mov
je
jbe
ja
inc
sub
push
push
mov
sub
fwait
pop
jmp
rcl
mov
movsb
mov
or
dec
hlt
and
push
and
es
lods
leave
dec
push
add
dec
dec
hlt
int3
xchg
jg
add
or
test
inc
addb
lods
notb
sbb
cmp
add
sahf
and
test
and
mov
mov
add
loope
out
adc
lcall
sub
add
insl
mov
addb
inc
leave
addb
out
add
jae
add
out
dec
sbbl
or
aaa
outsb
mov
and
jno
and
loope
cmp
inc
add
dec
mov
mov
and
mov
inc
add
les
xchg
jo
loope
lcall
repnz
les
pop
loope
add
inc
aaa
add
jl
add
inc
add
fdivrl
add
jmp
mov
cmp
add
jp
cmp
sets
sub
cmp
xchg
ret
mov
cmp
sbb
mov
cld
faddl
xchg
mov
pop
addl
out
test
insb
pop
inc
leave
xchg
xchg
dec
iret
adc
inc
and
add
lret
aad
out
add
jb
dec
lcall
push
xchg
lcall
int
mov
movsb
adc
inc
cmp
xor
ja
fwait
int
cmp
mov
or
xchg
repz
into
stc
inc
add
mov
sub
add
nop
push
std
dec
mov
pop
xchg
jg
mov
push
add
cwtl
mov
xchg
sti
lret
xchg
sbb
mov
or
loope
jnp
insl
fisttpll
xchg
addb
push
mov
pop
mov
xor
es
mov
out
pcmpeqb
cmp
mov
out
aam
add
pop
pop
mov
pop
bswap
dec
inc
add
ret
xchg
push
jne
add
adc
or
fcomip
popa
cwtl
mov
jbe
push
popa
xor
pusha
add
pop
data16
jg
push
and
and
mov
pop
inc
xor
cmc
movsl
rorl
insl
sahf
loope
push
inc
add
lods
rcr
pop
adc
mull
add
gs
xchg
flds
push
or
push
jo
cmp
je
mov
addb
loop
cs
addb
movsb
or
add
jmp
adc
xor
push
cs
test
mov
movsb
out
and
out
lcall
lock
push
jbe
stos
loopne
add
jecxz
add
push
pop
adc
mov
xchg
jb
fcoms
rcl
dec
sbb
cld
sti
xlat
ret
jle
adc
cmp
cmp
add
push
imul
xor
sbb
je
add
add
cmp
sahf
mov
ljmp
or
aas
jp
push
sub
mov
mov
adc
test
rolb
test
lods
ret
jge
outsl
sub
jecxz
xchg
imul
setns
push
sbb
jo
dec
aam
mov
movb
inc
add
pop
addb
or
jns
aad
inc
mov
outsl
fdiv
aad
add
and
into
sub
jle
jg
add
sub
push
loope
xor
or
scas
mov
jns
pop
jecxz
or
cmp
or
adc
add
push
bound
jae
push
add
sbb
mov
in
mov
add
add
out
loope,pn
jmp
xchg
lock
add
iret
inc
add
stos
push
loope
and
in
fstpl
add
add
mov
sub
lret
mov
cli
cltd
xchg
inc
popf
adc
add
add
add
int3
test
add
pop
mov
xchg
dec
outsb
pop
mov
dec
xor
adc
clc
push
repnz
xlat
mov
cwtd
insb
call
push
repnz
out
sbb
testb
mov
inc
add
aaa
aam
xor
repz
inc
push
mov
jo
add
fidivrl
cmp
jecxz
into
cmc
push
rol
xor
cwtl
dec
out
out
xchg
cmp
test
add
das
sub
mulb
es
dec
dec
imul
rorl
adc
add
ret
into
ficoms
jne
xlat
dec
push
add
or
inc
xor
add
test
fdivrl
sbb
je
or
repz
insb
movsl
inc
add
iret
sbb
cmpsl
addb
push
int3
test
adc
cmpsl
gs
cmp
aas
js
mov
mov
dec
xchg
movq
lret
jmp
inc
mov
xchg
idivb
add
rolb
incl
movb
cltd
pop
sahf
loop
sahf
pop
inc
add
int
add
jno
pop
testb
cs
sarl
mov
jbe
inc
add
imul
dec
lods
mov
add
cmp
add
data16
es
iret
sub
ret
jecxz
dec
ljmp
add
rorl
xor
cmp
inc
push
cli
addb
idivb
fcmovnb
das
addb
negl
cmpsl
adc
mov
sub
popf
adc
cmp
loopne
sbb
pop
cs
addb
stos
mov
and
iret
loopne
add
cs
jmp
push
jge
xchg
aas
jg
jl
outsb
jb
add
pusha
add
mov
sti
ljmp
and
mov
dec
call
xlat
test
or
jne
lcall
add
add
jbe
and
in
pushf
and
stc
cmpsl
mov
jbe
inc
add
ja
lock
rorb
outsl
xchg
in
mov
or
xor
sbb
daa
scas
aas
fs
sub
add
shlb
inc
add
jle
enter
jb
js
cmpsl
stc
icebp
fcmovne
pop
xlat
sbbl
gs
or
jmp
and
or
icebp
inc
add
das
sbb
jb
movsb
mov
cmc
and
sub
insb
mov
call
xchg
lds
int3
daa
stc
jl
cmp
adc
dec
mov
or
mov
xchg
cmpl
divl
add
fcoml
lods
shll
les
and
enter
add
pusha
add
or
xor
clc
sub
subl
fmul
shrb
roll
pop
cmp
adc
add
mov
andl
and
or
xor
xor
iret
or
mov
or
cmp
inc
add
and
cltd
jl
sub
sti
js
pop
jno
add
lods
mov
mov
int
lcall
sahf
mov
fdivr
ss
add
dec
jl
sub
and
jge
mov
xchg
fisttpl
pop
ljmp
pop
test
lds
sub
push
in
jo
push
mov
and
lahf
lods
lret
add
mov
arpl
jp
cmovne
decb
pop
addb
je
out
aam
shll
jnp
add
sub
inc
add
fisttpll
pushf
xor
mov
dec
inc
fists
dec
out
cs
cmp
sbb
mov
add
mov
lock
hlt
out
ds
mov
mov
aam
ss
popf
dec
xor
cmp
and
aaa
push
mov
jg
xlat
jge
addb
out
sbb
dec
pop
mov
inc
xchg
jge
aam
fsubr
subl
push
add
fsubrs
js
and
jno
cltd
shl
or
lret
ljmp
add
fnsave
pop
and
aaa
mov
ret
dec
inc
popa
bound
repz
jge
pop
fsubl
ret
jecxz
test
mov
add
pop
sub
loopne
add
xchg
push
addr16
push
push
sub
scas
jb
adc
daa
sbb
inc
dec
mov
or
mov
in
test
pop
add
ja
ja
dec
push
es
fsubl
add
jge
loope
popf
dec
lods
lahf
dec
add
nop
repnz
sub
addr16
es
repnz
movb
ds
xchg
test
cwtl
and
sub
movsb
mov
add
ja
mov
clc
mov
or
popf
mov
jnp
lret
mov
cmp
xor
jl
xor
mov
pop
loop
movb
test
inc
add
xchg
push
in
adc
adc
fs
push
repnz
lock
outsb
loopne
add
sarb
xchg
out
dec
xchg
popa
cmpsl
cmp
and
mov
xor
jle
push
add
lea
add
or
movsl
push
add
xor
add
sub
adc
popf
jl
mov
cli
mov
stos
mov
out
mov
cwtl
xor
xchg
jae
rcrb
aad
pusha
add
mov
dec
aaa
inc
add
push
inc
push
nop
in
pop
bound
mov
xor
out
test
add
testb
aaa
sbb
fs
mov
scas
mov
mov
add
insb
scas
sub
pop
mov
jp
shl
mov
fucomi
addb
add
aas
pop
xlat
mov
jns
leave
lods
cmc
sub
xchg
push
adc
dec
addr16
shll
mov
jne
shll
add
add
popa
cwtl
mov
lahf
aam
push
add
int
out
jnp
mov
push
cmp
adc
fists
add
mov
loopne
call
rolb
cmpsb
repnz
sub
mov
xor
into
xchg
imul
rolb
addb
adc
cmc
fsubl
in
les
sbb
xor
divb
or
mov
add
cmp
js
jge
addr16
push
mov
cmpsl
xlat
out
adc
test
sahf
adc
jb
pop
popf
pop
xor
pop
aaa
dec
xor
jg
xor
jnp
mov
push
mov
inc
xor
fwait
mov
adc
jmp
fnstcw
sahf
fstps
into
inc
add
leave
xlat
xchg
sbb
mov
repnz
daa
mov
pop
fcmovbe
mov
loop
dec
call
jp
xor
inc
add
mov
cwtl
mov
loop
lahf
mov
and
cmp
push
push
movsl
jb
push
in
mov
popa
or
inc
push
push
clc
push
inc
adc
es
lret
mov
lret
stos
adc
adc
movb
aad
cmp
daa
clc
or
xor
negb
jb
inc
and
mov
icebp
pop
sub
ds
add
cmp
shrb
fcomp
xchg
add
push
push
mov
mov
push
lahf
movsb
ds
sahf
mov
push
xchg
std
xor
xchg
xchg
pop
jge
cltd
mov
loopne
add
jno
out
and
addb
inc
add
addb
add
jp
sbb
les
sahf
inc
pop
cmp
add
pop
popf
cwtl
cmp
addb
pop
adc
mov
test
inc
adc
popa
xor
pop
pop
mov
add
cmpsl
data16
pusha
add
pop
pop
loopne
mov
repz
sub
pushf
add
jne
adc
push
inc
add
and
mov
cli
call
fsts
sbb
and
add
adc
add
push
mov
inc
add
xchg
mov
pop
jge
out
jo
mov
mov
add
add
addb
xor
mov
add
mov
push
movsl
call
lock
dec
inc
mov
daa
stos
push
fcompl
stos
sahf
sbb
cmp
addb
cld
push
lods
push
enter
leave
add
shrl
nop
aas
int3
adc
shld
shlb
outsb
rclb
adc
adc
daa
cli
adc
ret
add
add
add
dec
pop
pop
push
push
mov
shrl
adc
add
jmp
idivl
pop
orl
push
fcmovne
mov
pop
inc
dec
or
data16
mov
int
lods
dec
je
hlt
and
and
cltd
pop
xchg
iret
push
and
sub
xchg
data16
cmp
lret
mov
lock
add
add
mov
lods
ss
push
ja
scas
mov
cmp
inc
add
pop
icebp
mov
test
loopne
mov
mov
cld
pop
sbb
bound
loop
lock
inc
and
fst
imul
cld
aas
cmp
mov
ja
lahf
jl
int
rcll
pop
push
xlat
adc
mov
test
lcall
das
outsl
sti
aam
sub
ljmp
sbb
sbb
pop
sub
add
ret
cmp
fs
stos
mov
sub
popf
sbb
idiv
repnz
lea
stos
dec
cli
inc
jmp
xor
add
stc
stos
inc
add
push
add
fstps
out
imul
xchg
and
dec
arpl
xchg
addr16
add
mov
mov
mov
or
adc
push
cmc
jg
out
fnstsw
pushf
iret
mov
je
jge
sub
jle
add
das
arpl
call
stos
jae
ss
dec
mov
cmpsl
jp
jecxz
aam
add
xor
daa
lds
enter
outsb
sbb
xor
mov
dec
lcall
hlt
into
stos
sbb
or
sbb
push
cli
les
movb
mov
shlb
sbb
inc
add
add
pushf
movsb
jp
xchg
xlat
dec
add
xchg
mov
and
sub
xchg
pop
xchg
sub
test
in
repz
adc
pop
jno
mov
inc
mov
jnp
movsl
test
scas
sbb
and
inc
add
lods
xor
sbb
outsl
mov
or
pop
xchg
std
lcall
out
jmp
rolb
add
sbb
nop
adc
into
adc
jge
add
repz
sub
add
jnp
cmp
ss
add
mov
jle
iret
aad
inc
push
or
dec
sti
pop
movl
xchg
stos
push
mov
test
lahf
dec
out
xor
lret
adc
fisttps
xchg
stos
cmp
or
sbb
dec
fcoms
jmp
fbstp
xchg
cmp
je
jo
add
mov
inc
sub
das
pop
cmpsb
dec
movsb
pop
stos
xchg
push
xor
jo
cmp
call
ss
jecxz
enter
in
ja
sahf
inc
addr16
stc
jae
in
cmpsl
sbb
pop
push
lods
sub
je
mov
add
movsb
and
div
cmpsl
push
aas
mul
in
jbe
sbb
xchg
jne
lea
mov
bound
and
sbb
sbb
mov
cltd
jmp
ds
fs
stos
gs
imul
dec
mov
addb
jnp
shlb
popa
xchg
inc
add
jae,pt
or
push
xchg
das
and
pop
js
jmp
mov
sbb
jo
inc
add
add
xor
out
sahf
mov
mov
add
dec
sarb
xchg
or
mov
scas
inc
lods
scas
lret
jle
lahf
imul
adc
fisubrs
mov
cltd
pusha
add
pop
pcmpeqw
lock
dec
jle
mov
pop
cltd
out
lahf
iret
push
inc
inc
sti
in
pop
xchg
gs
add
adc
add
fs
cmp
jne
add
or
jmp
scas
call
xchg
icebp
jle
xchg
out
adc
neg
pop
rcl
cmpsb
sahf
jno
add
adc
in
pushf
lock
sub
mov
dec
lea
mov
cwtl
divl
test
dec
xor
lods
andl
ret
mov
test
frstor
add
jge
sahf
fidivl
clc
call
addb
inc
in
movsl
mov
fistpll
or
pushw
or
push
imul
call
jns
dec
xor
test
and
gs
adc
mov
clc
xchg
xchg
cmp
ja
int
mov
and
mov
add
sbb
add
push
jbe
xor
jnp
cmp
bnd
xchg
jns
and
inc
pop
addb
pusha
add
out
in
in
out
dec
addb
in
add
fiadds
lods
addl
lock
into
sbb
add
jns
push
repnz
outsl
sti
jmp
mov
jno
adc
dec
mov
scas
outsb
jbe
ret
out
inc
push
cmp
or
loope
adc
mov
pop
cmp
lods
mov
loopne
add
out
jmp
ret
test
inc
jl
lret
lds
or
into
xchg
pop
imul
or
mov
cltd
and
cmp
cmc
lret
sub
inc
add
pop
dec
ss
mov
and
jnp
stc
push
pop
mov
sti
or
and
push
shll
sarb
or
cmp
add
dec
les
ficomps
push
add
pop
mov
adc
mov
rcrl
mov
add
or
call
jmp
push
stc
pop
push
jle
jl
cmc
xchg
lret
bound
and
aad
mov
pop
push
add
or
pusha
add
and
or
mov
mov
loope
adc
push
pop
cmc
push
add
dec
cltd
pop
imul
ds
test
and
mov
in
jb
mov
jl
shrl
sbb
add
jae
dec
cwtd
mov
addr16
pop
cmc
xor
pop
sahf
jle
or
cmc
mov
push
jmp
ljmp
fwait
dec
cmc
jmp
add
xor
xchg
fildl
sahf
and
xchg
cmp
xor
pop
out
mov
or
push
xchg
inc
add
cmp
mov
cmp
icebp
dec
and
add
mov
bnd
inc
add
test
or
out
jnp
popa
adc
test
loop
push
xor
or
push
or
add
test
pop
pop
int3
dec
outsb
add
ret
mov
dec
mov
jne
adc
gs
imul
jbe
addb
push
push
sub
popa
in
sub
add
mov
add
dec
cld
ja
sub
mov
adc
mov
les
mov
add
cmpsb
cltd
test
enter
dec
push
jae
test
cld
mov
jne
mov
cli
jge
add
addb
dec
roll
add
cli
xor
daa
mov
xchg
js
xor
cmp
ds
gs
mov
add
movb
mov
fbstp
clc
addb
rolb
xchg
fldl
and
inc
xchg
jmp
mov
add
divps
mov
in
test
arpl
loopne
vpsubusw
pop
int
insb
addb
test
or
rorb
jle
mov
ljmp
jne
mov
aas
or
in
fmuls
add
xlat
mov
inc
add
sub
test
add
shll
push
es
sti
jge
mov
jmp
mov
inc
ret
repz
sbb
add
mov
dec
jge
aam
adc
pushf
rolb
cmpsb
and
jnp
int3
testb
in
into
dec
mov
cmp
insb
dec
cltd
sti
sub
cmp
xor
insb
mov
mov
cltd
jo
aam
jle
js
push
add
stos
out
inc
add
out
push
push
jb
addr16
in
ret
cmp
jb
fimuls
jbe
sti
jb
inc
add
ds
popf
inc
cmpsb
fadds
sahf
data16
cmc
lock
push
insb
imul
cwtl
add
es
mov
xchg
mov
movsb
bound
sub
adc
rolb
xchg
sbb
cmp
sub
sbb
test
xchg
adc
add
movb
add
or
jae
loopne
push
or
aam
test
sbb
enter
mov
das
push
push
xor
and
jmp
adc
aaa
pop
mov
xor
mov
push
xor
rcpps
dec
mov
dec
jle
add
add
jg
jmp
xchg
data16
scas
or
pusha
add
jo
inc
add
jae
in
frstor
push
je
xor
inc
add
std
jae
cmp
ret
sub
inc
add
mov
rolb
jp
pop
dec
cmp
add
rorl
add
rorb
cwtl
shrl
add
shll
inc
mov
nop
pop
mov
mov
or
push
xchg
out
xchg
not
sub
xchg
mov
fadds
fdiv
dec
cltd
xchg
movsl
push
push
cs
ds
std
mov
push
rcr
nop
and
xor
sub
add
fstpl
jg
add
test
fiadds
popa
scas
imul
add
pop
pushf
pop
int3
mov
add
jp
cmpsb
bound
rorl
imul
xchg
pop
push
add
int3
icebp
arpl
add
mov
xlat
xor
adc
into
mov
mov
addb
in
add
sbb
mov
arpl
add
rolb
inc
sub
add
cmc
adc
push
pop
mov
testl
fists
add
jb
adc
add
mov
add
ret
dec
aam
inc
add
adc
pop
pop
rolb
adcl
jb
insl
cld
mov
add
rorb
idivl
add
int
ja
iret
in
fucomp
xchg
out
pusha
add
pop
inc
add
aam
popf
fiaddl
test
xor
jo
push
add
push
inc
add
add
adc
loop
fidivl
es
pushl
fisttps
add
sbb
cwtl
mov
and
clc
mov
pop
aad
mov
pop
mov
rclb
clc
add
mov
dec
fcompl
rcrl
mov
xchg
lret
add
adc
gs
add
pop
push
cmp
lahf
out
aad
enter
pusha
add
dec
xor
shlb
dec
jne
mov
mov
in
repnz
pushl
in
std
mov
rcl
dec
sti
or
cli
cld
ljmp
test
or
adc
les
popa
mov
mov
ds
add
daa
cmp
pop
cmpsl
outsl
xchg
clc
into
sete
xor
add
pop
les
and
inc
add
shl
into
test
push
iret
add
cmpsl
mov
pop
ret
cli
lahf
cmpsl
or
mov
scas
dec
xchg
loopne
out
ja
sub
push
fstpl
push
movsb
xchg
out
cmp
and
and
or
push
adc
sar
push
sbb
push
add
shrl
xor
mov
add
dec
cmpsl
std
sbb
inc
add
add
mov
and
adc
xchg
popl
push
sti
cs
lods
pusha
add
add
or
push
add
sbb
or
and
sbb
insl
sti
push
add
xor
cli
xor
pop
test
and
dec
mov
roll
mov
pop
cld
rolb
pop
lea
test
testl
and
cmp
push
jne
clc
jl
jo
mov
dec
or
dec
cmp
test
add
bound
push
add
add
add
pop
mov
inc
add
sbb
mov
inc
arpl
push
data16
push
or
or
sbb
mov
insl
sub
into
or
popa
jbe
cmc
push
hlt
into
les
call
cs
movsl
out
cmpsl
pushf
xchg
sbb
xchg
adc
jae
fildl
aas
cmp
jecxz
cmpsb
aam
sub
sar
vphaddubw
inc
add
mov
or
mov
mov
testb
add
scas
jmp
out
cmp
rolb
xchg
and
out
out
es
pushf
jmp
xor
jnp
and
and
das
add
xor
mov
adc
inc
stc
xlat
addb
add
dec
sbb
addb
jnp
sub
ret
inc
and
cli
idiv
adc
outsl
addr16
jp
lds
pop
mov
add
pushf
inc
add
arpl
mov
add
lahf
loop
ficoml
xchg
ret
dec
or
or
mov
sub
inc
out
mov
add
hlt
xlat
notl
mov
cmc
adc
cmp
mov
mov
and
xor
lcall
sub
xchg
or
es
sbbl
cld
das
cmp
aas
mov
mov
popa
movsl
cmc
clc
lea
std
jno
cmp
fidivrl
jle
inc
mov
sbb
jl
stos
aad
fstp
cmp
fidivl
sahf
addr16
add
js
and
mov
pop
add
add
mov
lret
or
scas
hlt
in
adc
xor
dec
outsb
jo
inc
add
add
mov
sahf
add
mov
adc
dec
cs
rcrl
xchg
jbe
imul
add
int3
addb
cmc
xchg
xchg
fsubrs
add
int
and
push
dec
lret
arpl
pop
push
adc
and
mov
xor
enter
or
mov
pop
adc
loopne
cmpsl
aam
jnp
and
outsb
aaa
jg
cld
test
mov
or
in
push
and
outsl
sub
and
aam
xor
mov
fcmovb
add
testb
xor
fdivs
jp
ret
and
mov
inc
shl
out
cmpsb
aad
clc
gs
lock
sbb
test
jb
out
idiv
test
add
data16
mov
add
cmp
mov
add
jb
add
and
xchg
pop
imul
icebp
mov
cmpsl
push
mov
sbb
mov
mov
hlt
cmp
add
xchg
adc
ds
icebp
mov
mov
and
addr16
sbb
jle
mov
outsb
stc
ret
add
add
mov
imul
int
lods
mov
int3
repnz
dec
adc
add
outsl
cltd
mov
and
xchg
pop
mov
and
das
pushl
cmp
in
hlt
imul
mov
xor
ret
test
rolb
xor
rcl
push
ljmp
icebp
movb
ljmp
mov
lea
adc
and
inc
add
in
add
xchg
sub
sub
add
jle
sti
int3
adc
pop
in
jb
dec
or
loop
add
mov
inc
add
fsts
pusha
add
outsl
adc
lods
mov
movlps
push
sub
pop
add
xor
xchg
in
adc
addl
xor
cmp
sbb
and
push
jg
push
xorl
push
fs
or
ss
mov
out
adc
add
aad
ret
push
jbe
pop
lods
cwtl
push
pop
pop
cmc
movsl
or
fimull
push
repnz
inc
add
mov
adc
addb
fimull
adc
push
add
mov
push
xchg
and
sub
add
add
xchg
mov
test
out
fnstsw
lds
push
rol
mov
fucom
mov
jl
pop
inc
add
cmp
or
xor
lds
add
loopne
ret
stos
je
icebp
sbb
sbb
repz
fisttpl
jae
jle
add
pusha
add
imul
out
jno
jb
add
add
rolb
sub
xchg
xchg
mov
rcl
imul
add
add
lds
je
xor
add
add
add
outsl
lea
sbbl
aad
in
jecxz
pop
adc
add
stos
psllw
sub
and
pusha
add
and
jmp
insb
push
fistl
push
mov
add
fisttpl
dec
out
test
out
mov
dec
outsb
dec
inc
add
lret
mov
data16
sub
add
add
ja
add
cmpsl
lock
sub
push
pop
sub
mov
or
lds
mov
mov
add
shll
and
jmp
jo
jp
jmp
push
add
pop
clc
or
pop
adcl
add
jo
addb
or
mov
xchg
cltd
jnp
out
and
addr16
cmpsl
mov
pusha
add
mov
pop
insl
pop
repnz
mov
push
jecxz
xchg
xchg
add
xchg
jo
cmp
out
sub
lea
sbbl
jp
daa
pop
sbb
rcr
lock
cmp
out
pop
int
or
nop
jmp
popa
pushf
lds
adc
xchg
scas
pop
out
pop
mov
pop
cmpsl
mov
xchg
dec
add
xchg
cwtl
lds
mov
pushf
rorb
xor
in
ret
add
jb
push
inc
inc
mov
lea
insb
lods
das
xor
lds
in
out
xchg
or
mov
sub
ffreep
add
icebp
xchg
adc
addb
adc
addr16
sbb
pop
fildl
in
fistl
pop
inc
jne
test
adc
cmc
inc
mov
outsb
movb
xchg
jb
addb
and
xorl
add
jmp
xchg
test
xor
cmp
ljmp
add
movb
xchg
sahf
negl
xlat
scas
stos
gs
add
xor
push
jne
sub
add
es
call
mov
stos
pushf
jns
add
sbb
jnp
mov
mov
sahf
lahf
jg
pop
das
push
in
xor
outsl
movsb
nop
add
jp
push
add
das
in
sbb
dec
sti
fsts
adc
bound
mov
mov
sub
add
jnp
add
lahf
out
andl
jne
roll
add
iret
cmp
push
add
push
xchg
mov
push
dec
test
sbb
int
cmpsb
sarl
test
add
jp
insl
idivb
mov
push
iret
pop
movsb
filds
add
adc
cld
fidivrs
sub
xlat
jns
iret
call
test
scas
sbb
mov
xchg
rsm
xor
dec
jle
int
enter
add
push
push
lahf
daa
jge
jbe
push
push
outsl
inc
fs
push
sub
das
ss
cmp
fisubs
cmpsb
les
jo
push
and
daa
iret
in
jg
dec
pop
ret
inc
cmp
push
add
push
mov
nop
lock
add
adc
add
call
cltd
adc
push
add
das
cmp
mov
stos
inc
sub
popa
mov
add
add
add
xor
insb
or
inc
mov
and
push
add
jmp
mov
mov
mov
xor
insb
push
ret
pop
mov
add
xchg
or
test
sbb
jp
repnz
add
pop
add
ss
mov
out
lock
imul
ds
fimuls
xchg
push
ljmp
add
sub
stos
insb
cs
add
push
and
rclb
fs
sbb
add
add
scas
ljmp
add
add
loope
xor
stos
enter
push
lcall
test
inc
push
add
loopne
push
ds
shl
mov
es
shll
mov
cs
imul
loope
mov
fcomp
cmp
and
in
push
mov
xor
pop
pop
and
and
je
sbb
ja
adc
push
add
pop
dec
mov
into
mov
jne
in
dec
mov
add
add
aas
lcall
push
pop
xor
mov
loope
inc
notl
aaa
aas
pop
fiaddl
stos
dec
cwtl
arpl
addr16
jp
xor
pop
out
gs
andl
incb
dec
test
add
mov
not
addb
and
outsb
fnstenv
outsl
aad
push
insb
adc
hlt
mov
or
rcrl
push
notl
lret
jmp
pop
or
mov
daa
and
push
add
stos
mov
xchg
scas
arpl
jmp
rorl
enter
out
add
insb
dec
or
jbe
mov
icebp
sbbl
mov
mov
fs
cmpsl
aam
dec
dec
decl
mov
data16
outsb
lahf
dec
sarb
pop
popw
out
add
dec
fs
sti
xchg
dec
test
jecxz
pop
shlb
imul
and
jp
add
das
xor
push
fsub
push
mov
