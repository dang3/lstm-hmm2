add
pop
insl
insl
insl
insl
insl
insl
stos
stos
stos
stos
test
sbb
sbb
sbb
int
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
bound
loop
loop
loop
loop
inc
inc
lock
or
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
add
adc
adc
adc
add
lret
and
rol
rol
shll
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
rcl
rcl
rol
roll
cmpsb
cmpsb
cmpsb
test
test
lea
lea
mov
mov
addr16
sub
add
add
add
add
add
xchg
sub
mov
mov
enter
push
push
push
sbb
fcomp
fcomp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
mov
mov
inc
inc
inc
inc
cmp
cmp
in
in
xchg
rcl
rcl
rcl
rcl
rcl
add
push
push
push
push
stos
stos
add
inc
inc
inc
inc
inc
inc
inc
sub
sub
out
add
add
mov
xchg
xchg
sti
sti
sti
sti
sti
sti
sti
sti
sti
out
out
clc
clc
add
push
push
push
push
push
push
push
and
or
add
das
das
das
das
das
das
das
das
das
das
das
das
das
das
jne
add
js
pop
pop
pop
pop
pop
cld
push
push
push
push
into
into
into
into
into
into
into
into
into
cli
cli
cli
cli
addb
mov
mov
cs
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
pop
filds
sub
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
fstp
add
add
push
div
in
in
pop
pop
pop
pop
lcall
jne
jne
jne
jne
jne
jne
jne
jne
jne
xor
adc
adc
inc
inc
fwait
fwait
fwait
fwait
fwait
fwait
addl
pop
pop
pop
add
sub
aas
aas
add
add
sbb
mov
mov
mov
sbb
sbb
add
push
push
push
shll
out
out
out
xchg
sub
mov
mov
mov
pop
mov
add
movsl
movsl
imul
out
out
xchg
xchg
xchg
xchg
xchg
add
add
add
or
add
into
mov
pushf
pushf
add
daa
daa
daa
fildl
push
mov
xor
mov
mov
mov
test
test
test
test
ss
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
dec
adc
ss
add
add
add
pop
pop
pop
pop
pop
sbb
sbb
sbb
add
add
add
rcl
rcl
rcl
lock
mov
mov
add
rcl
rcl
fcmovnu
add
add
xor
lock
push
lret
je
mov
add
mov
add
add
lea
jnp
sub
sub
push
push
push
push
push
xor
dec
dec
dec
inc
inc
inc
inc
fcmovu
fcmovu
fcmove
int
int
int
int
int
int
dec
dec
dec
add
add
add
mov
jg
jg
jg
jg
or
fdivl
xor
xor
xor
sbb
into
sbb
sbb
sbb
mov
mov
mov
mov
fs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
data16
bound
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
sti
sti
sti
sti
sti
sti
insb
add
out
out
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
and
and
imul
sbb
fcmovu
push
call
bnd
xor
inc
inc
inc
add
test
test
test
sbb
addb
std
std
add
add
add
add
add
add
add
aam
aam
aam
xchg
aaa
aaa
aaa
aaa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aam
mov
add
add
rol
rol
rol
es
mov
wrmsr
xor
xor
xlat
xlat
xlat
push
push
push
push
gs
mov
mov
add
add
add
jnp
jbe
pop
pop
and
lret
add
and
push
push
push
push
push
push
outsl
outsl
outsl
xor
xor
sub
sub
sub
sub
xor
dec
dec
dec
arpl
arpl
cld
ret
out
out
out
add
outsb
outsb
outsb
outsb
outsb
xor
xor
add
add
adc
adc
adc
add
add
add
sub
pop
pop
cmp
cmp
cmp
cmp
dec
cmpsl
fmul
into
into
enter
enter
enter
enter
enter
in
aaa
add
icebp
icebp
icebp
ljmp
jns
lcall
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
mov
mov
mov
mov
jns
jns
das
das
outsl
outsl
xchg
xchg
xchg
xchg
daa
daa
daa
daa
daa
daa
daa
daa
daa
sbbb
sbb
xchg
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
outsb
outsb
jg
in
lods
lods
lods
sbb
rol
jns
add
add
add
add
jae
jae
cmpsl
cmpsl
cmpsl
pushf
enter
xor
xor
lds
mov
mov
outsl
outsl
cmp
cmp
and
and
insl
insl
test
mov
gs
iret
iret
iret
iret
iret
iret
div
jg
jg
leave
leave
leave
leave
leave
rol
rol
roll
add
jno
insb
insb
insb
insb
sbb
sbb
mov
inc
inc
inc
inc
xor
push
movsl
and
loop
loop
and
xor
xor
lods
lods
and
and
es
add
add
add
adc
stc
fcmovu
xchg
xchg
xchg
cltd
cltd
cltd
add
mov
add
jno
jno
push
push
push
push
push
push
add
xchg
xchg
xchg
mov
xchg
xchg
stos
stos
stos
stos
out
les
sbb
int
int
int
mov
lea
mov
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
and
and
adc
addb
mov
mov
mov
leave
leave
add
add
add
mov
mov
xor
xor
xor
xor
lock
pop
inc
inc
inc
dec
dec
and
push
push
push
push
pop
pop
cmpsb
inc
leave
leave
leave
leave
leave
leave
jecxz
lahf
lahf
lahf
lahf
lahf
loop
loop
loop
int
int
or
jns
jns
jns
mov
pop
pop
test
rcl
rcl
rcl
rcl
add
popf
jno
jno
jno
jno
jge
jge
jge
jge
jge
adc
adc
adc
mov
and
inc
inc
cmp
cmp
imul
mov
xor
jo
push
push
push
push
push
sti
sti
sti
sti
sti
sti
sti
sti
sti
insb
pushf
pushf
pushf
xor
ret
ljmp
ljmp
pop
pop
inc
inc
inc
inc
inc
add
add
pushl
cmp
cmp
cmp
cmp
add
mov
mov
mov
mov
mov
jle
stos
dec
dec
dec
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
fsubr
out
out
lea
ret
incl
int3
int3
out
jae
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cmp
cmp
cmp
cmp
fcomp
fcomp
es
scas
scas
scas
scas
push
push
push
dec
dec
dec
cld
cld
cld
xchg
int3
int3
int3
int3
int3
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
out
imul
and
and
and
divps
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
inc
inc
inc
inc
xchg
xchg
xchg
cmpsb
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
sti
rol
test
mov
sbb
int
stos
stos
stos
stos
stos
addr16
iret
iret
or
or
or
aam
aam
aam
aam
aam
push
div
not
rcl
rcl
pop
pop
arpl
arpl
arpl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cmc
cmc
cmc
cmc
xchg
adc
pop
pop
pop
add
imul
mov
bound
bound
add
add
add
xchg
xchg
sti
sti
sti
sti
sti
sti
add
add
add
dec
addl
push
push
push
push
add
add
arpl
arpl
arpl
jge
inc
inc
inc
inc
scas
rcr
fisttpll
cld
cld
cld
cld
cld
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fstp
jno
jno
aad
aad
sub
sub
sub
imul
aas
sub
sub
sbb
add
rcl
insb
insb
insb
dec
pop
pop
pop
mov
outsl
outsl
pop
add
add
jmp
push
or
or
or
sbb
sbb
push
push
push
scas
scas
scas
sahf
sahf
scas
scas
adc
adc
adc
adc
sar
cld
cld
cld
cld
cld
push
xor
rol
mov
mov
lret
adc
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
push
pop
pop
push
iret
iret
iret
ljmp
dec
dec
test
push
push
push
mov
out
scas
loop
loop
push
push
pop
scas
add
fstps
out
out
sub
pusha
push
call
and
jae
jae
roll
and
add
add
mov
fwait
fwait
fwait
fwait
fwait
fwait
mov
mov
insb
insb
and
and
aaa
aaa
aaa
aaa
aaa
aaa
aaa
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
adc
add
add
sbb
sbb
loop
loop
loop
lahf
mov
mov
div
cmp
cmp
jne
jne
jne
jne
jne
jne
mov
rcl
shlb
and
repnz
cmp
cmp
cmp
cmp
cmp
sbb
sbb
test
lcall
jmp
mov
jle
xchg
les
movsl
rolb
add
lods
lods
lods
inc
jecxz
xchg
xchg
add
aas
aas
in
in
in
in
arpl
arpl
arpl
arpl
arpl
add
mov
mov
mov
mov
mov
add
cltd
cltd
push
push
push
push
push
push
push
and
lods
lods
lods
lods
loop
add
jns
jns
inc
inc
inc
inc
inc
inc
mov
mov
mov
outsl
outsl
outsl
outsl
outsl
outsl
rcl
inc
inc
inc
inc
inc
inc
out
out
or
dec
dec
pop
pop
cmp
pop
mov
mov
mov
mov
repnz
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
int
int
mov
push
push
sub
sub
sub
sub
cs
loope
loope
loope
loope
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
les
ss
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
push
stos
adc
das
das
das
das
das
add
popf
popf
xor
xor
xor
xor
xor
xor
jmp
jmp
add
add
add
fbstp
adc
adc
adc
call
call
call
call
call
call
test
cmp
repnz
je
je
je
je
movsl
movsl
movsl
ret
add
add
pop
pop
pop
pop
bound
bound
xor
lahf
add
add
add
sub
sub
sub
sub
sub
sub
sub
out
lods
lods
lods
lods
add
fstp
imul
imul
imul
jmp
add
and
and
and
and
add
es
std
std
std
mov
add
add
out
out
addb
push
cwtl
int
sub
sub
sub
sub
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
sti
sti
sti
test
test
test
jb
jb
jb
push
push
pop
pop
test
add
add
or
or
or
or
sub
sub
sub
out
out
testl
pop
jl
ljmp
add
add
add
push
push
push
push
push
add
add
lods
lods
add
mov
jle
aaa
aaa
dec
dec
dec
dec
dec
dec
xor
rclb
push
push
xchg
xchg
mov
inc
inc
inc
loop
add
add
inc
add
sbb
sbb
add
scas
in
mov
mov
xchg
xchg
xchg
mov
mov
sbb
inc
inc
inc
inc
inc
inc
push
push
inc
inc
inc
inc
loope
sti
sti
sub
sub
imul
out
cmc
cmc
cmc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
div
div
div
div
div
pop
pop
pop
pop
pop
pop
xchg
inc
inc
xor
push
push
push
es
aam
aam
mov
test
test
jp
jp
jp
jp
aad
aad
aad
addb
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
test
inc
inc
push
push
push
push
mov
repnz
pop
pop
pop
pop
pop
push
push
add
dec
dec
push
push
mov
lea
lea
adc
lock
add
dec
jae
jae
inc
inc
cmp
cmp
add
pusha
pusha
add
int3
int3
int3
int3
int3
sbb
sbb
add
insl
sub
sub
stc
stc
stc
stc
stc
stc
stc
stc
sub
pop
pop
data16
sbb
insl
popa
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
mov
mov
pop
pop
pop
pop
pop
addb
cmp
in
sub
sub
pop
pop
cmpsb
cmpsb
cmpsb
cmpsb
add
add
and
scas
scas
scas
scas
or
add
jnp
jnp
jnp
jnp
cld
cld
cld
cld
cld
sub
mov
aam
aam
aam
jmp
jmp
inc
inc
inc
mov
mov
mov
imul
imul
cs
insl
insl
insl
insl
mov
cmp
cmp
add
add
add
cmp
xor
xor
stos
stos
fistps
sub
jg
les
movsb
or
add
add
in
in
repz
sub
sub
add
inc
inc
jbe
jbe
add
push
push
imull
push
add
out
add
gs
outsb
outsb
cmc
cmc
xchg
push
push
add
xor
xor
or
or
or
or
mov
dec
dec
test
out
out
out
out
out
add
sti
sti
add
add
outsl
outsl
outsl
outsl
add
add
mov
add
add
add
rcrl
out
xor
xor
push
out
mov
and
imul
repnz
jae
jae
in
push
push
jns
add
test
test
add
add
pop
pop
mov
jmp
dec
dec
dec
dec
dec
dec
sub
das
mov
iret
mov
and
jge
push
push
push
push
push
push
push
add
sbb
push
add
or
stos
add
jne
jne
lock
add
add
add
call
and
add
add
into
into
into
into
push
push
push
push
push
sub
ljmp
daa
daa
daa
daa
inc
jno
mov
mov
mov
dec
dec
add
add
jge
jge
jge
jge
jge
jge
jge
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
add
add
ss
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
add
jge
jge
jge
test
add
inc
inc
inc
push
push
push
push
dec
dec
dec
dec
dec
sub
add
add
add
inc
inc
inc
inc
lcall
lcall
ljmp
test
rol
test
push
push
push
push
push
leave
leave
out
mov
out
out
out
out
incl
add
add
add
mov
jge
adc
adc
push
jmp
xchg
add
add
mov
mov
or
or
out
out
out
out
add
add
add
add
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
push
dec
test
test
mov
mov
jae
push
jns
nop
nop
nop
nop
nop
nop
nop
nop
jge
sbb
sbb
arpl
arpl
push
push
push
push
jno
popa
popa
adc
add
xchg
sbb
fcomp
fcomp
fcomp
fcomp
fcomp
fadds
movsb
movsb
insl
insl
insl
insl
insl
insl
insl
insl
insl
jnp
inc
sbb
mov
dec
dec
dec
aad
aad
jmp
imul
push
push
push
add
add
add
add
mov
adc
jecxz
adc
adc
adc
adc
adc
adc
adc
lcall
cltd
movsb
rcl
rcl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int
int
int
mov
int
xor
push
inc
inc
gs
gs
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jnp
rcl
rcl
rcl
rcl
mov
add
add
and
adc
adc
xor
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
jecxz
jecxz
jecxz
enter
insb
insb
lcall
lock
loop
loop
lcall
add
add
add
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
loop
loop
loop
loop
loop
fistpll
mov
mov
mov
add
add
test
cmp
cmp
inc
add
add
cmpsb
cmpsb
cmpsb
cmpsb
adc
adc
pop
pop
sbb
sbb
cs
hlt
hlt
hlt
hlt
add
add
sbb
lcall
add
add
mov
and
and
ljmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
add
dec
dec
add
rclb
adc
dec
dec
dec
dec
dec
dec
clc
fstp
ffree
mov
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
xchg
cs
fwait
fwait
fwait
push
jno
jno
outsl
outsl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
imul
mov
out
out
push
push
push
push
or
mov
adc
adc
add
add
jo
jo
jo
jo
jo
jo
addb
sahf
sahf
sahf
sahf
dec
lret
popa
popa
popa
popa
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
aas
aas
aas
aas
aas
aas
aas
test
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
test
test
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
je
je
je
jns
add
add
add
add
add
add
push
push
push
push
push
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
leave
leave
leave
or
sub
sub
call
cltd
movsb
movsb
movsb
movsb
stc
stc
stc
stc
test
mov
mov
mov
mov
mov
add
add
fwait
outsl
outsl
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
ds
xor
xor
pop
pop
pop
pop
cltd
cltd
cltd
cltd
bound
bound
add
add
add
add
out
flds
mov
mov
repz
aad
rol
bound
mov
mov
jno
mov
or
or
or
mov
mov
dec
add
add
add
pop
pop
pop
pop
pop
daa
daa
add
add
add
imul
mov
mov
add
add
mov
mov
mov
in
sbb
lods
lods
xor
or
es
and
and
and
dec
dec
es
leave
and
and
and
jno
jno
rol
shlb
and
and
push
mov
mov
mov
mov
mov
cld
inc
inc
inc
inc
inc
xor
push
jo
punpcklwd
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
lock
in
mov
mov
pop
pop
gs
and
jno
aaa
add
or
jne
imul
mov
mov
mov
mov
mov
mov
mov
aam
add
dec
dec
dec
dec
dec
dec
cs
test
inc
inc
inc
add
add
add
add
rol
aam
aam
inc
inc
pop
pop
xor
xchg
dec
dec
dec
dec
dec
ret
pop
pop
pop
out
out
out
or
or
pop
pop
pop
pop
pop
pop
adc
xor
xor
sbb
sbb
xor
sub
adc
jle
inc
inc
inc
inc
inc
inc
inc
test
cmp
cmp
cmp
cmp
cmp
leave
leave
dec
inc
inc
inc
inc
loope
loope
loope
mov
mov
mov
xor
push
push
push
push
push
push
ljmp
das
das
das
das
in
in
in
in
in
in
in
in
in
lock
mov
mov
add
cwtl
addl
sbb
add
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
cs
dec
dec
dec
dec
scas
scas
scas
scas
mov
mov
dec
dec
mov
mov
mov
cli
cli
cli
ds
add
add
add
add
add
add
add
cli
cli
cli
cli
sbb
into
into
sbb
sbb
mov
push
push
aas
aas
int3
div
div
div
testb
mov
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
push
pop
arpl
arpl
test
ss
fcmovu
add
add
cmpsl
cmpsl
cmp
cmp
cmp
and
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
addr16
arpl
repnz
inc
inc
inc
inc
inc
inc
popf
popf
popf
popf
popf
sub
add
add
adc
adc
fwait
add
add
add
pop
pop
mov
lea
push
push
sub
sub
sub
sub
lcall
das
das
and
and
ror
enter
enter
enter
push
push
push
push
push
push
push
push
fstp
jle
jle
jle
jle
jle
loope
mov
clc
clc
clc
clc
out
mov
cli
cli
cli
cld
cld
or
rclb
mov
loope
loope
loope
loope
loope
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cmpsl
sub
sub
sub
sub
sub
sub
sub
sub
hlt
hlt
hlt
je
je
movsl
addl
add
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp
es
xlat
xlat
xlat
add
jmp
or
data16
mov
add
push
push
push
push
push
push
push
push
push
push
push
mov
mov
inc
mov
mov
xchg
lret
lret
pop
pop
pop
pop
inc
inc
inc
sub
sub
push
push
push
mov
mov
add
jae
sbb
sbb
sbb
sbb
insb
insl
insl
rcl
rcl
rcl
rcl
rol
rol
shrb
fmull
dec
dec
scas
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
popf
popf
popf
popf
popf
cwtl
cwtl
mov
add
jo
add
push
push
push
push
push
jp
jp
cmp
cmp
cmp
mov
mov
int
int
add
jmp
jmp
jmp
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
loop
jae
jae
pop
pop
pop
pop
pop
pop
pop
pop
add
jo
out
out
out
out
out
imul
jmp
xor
xor
xor
xor
xor
xor
xor
xor
jb
jb
jb
cmpsl
cmpsl
cmpsl
cmpsl
sahf
add
aad
aad
test
test
add
push
push
push
push
push
push
push
push
cmp
cmp
add
push
or
and
das
das
dec
dec
addr16
fcmovnu
fcmovnu
fucomi
jmp
jmp
add
rol
push
push
push
imul
imul
mov
dec
cmp
add
add
add
stos
stos
stos
aam
aam
aam
aam
aam
js
add
hlt
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fld1
push
push
add
add
add
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
mov
mov
hlt
hlt
hlt
hlt
sub
cmp
cmp
cmp
cmp
cmp
rol
roll
pop
xor
xor
xor
or
sub
sub
sub
int
int
int
int
int
add
push
outsl
outsl
and
and
and
and
and
rcl
rcl
roll
mov
xchg
xchg
mov
test
test
test
cmp
cmp
cs
push
cltd
cltd
jns
push
push
add
jo
pusha
pusha
pusha
pusha
out
out
out
out
add
fists
add
add
imul
imul
imul
imul
imul
add
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
and
and
and
and
and
stos
jno
jno
jno
jno
jno
bound
adc
adc
jg
jg
jg
jg
jnp
lcall
push
push
push
xchg
xchg
jnp
jnp
jne
jne
jne
jne
xor
mov
inc
inc
inc
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
sldt
adc
push
div
cwtl
btr
je,pn
rcl
roll
movsb
pusha
pusha
pusha
pusha
sbb
sbb
add
push
push
add
add
add
test
lcall
dec
dec
dec
dec
sbb
into
rol
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
rcl
rolb
int3
int3
int3
int3
int3
int3
int3
int3
mov
adc
adc
jnp
add
outsb
outsb
outsb
outsb
outsb
sub
add
add
add
xor
add
adc
adc
push
into
into
sbb
rol
rol
sub
sub
add
bound
bound
js
js
js
js
test
test
or
add
adc
adc
sub
mov
mov
sub
sub
sub
add
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
int3
int3
cmp
cmp
cmp
cmp
mov
ds
mov
shll
bound
bound
bound
add
add
addr16
aaa
aaa
inc
inc
inc
inc
inc
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
push
adc
adc
into
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
sbb
div
xchg
xchg
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
adc
aad
insl
insl
insl
jp
jp
push
ljmp
movsb
movsb
movsb
movsb
movsb
movsb
jle
add
push
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
in
fsub
inc
inc
inc
inc
out
out
out
inc
inc
sub
sub
sub
sub
or
rolb
pop
pop
pop
sbb
sbb
sbb
sbb
lret
lret
lret
lret
mov
inc
and
and
and
rolb
add
aaa
aaa
es
mov
mov
mov
mov
mov
mov
mov
push
push
in
in
in
in
in
mov
adc
adc
adc
adc
xchg
xchg
xchg
sub
test
or
or
or
xor
xor
xchg
cmp
and
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
into
into
into
pop
pop
pop
pop
pop
pop
icebp
icebp
icebp
icebp
icebp
mov
mov
add
add
add
in
in
in
in
in
in
in
in
in
push
push
push
push
push
adc
pop
fwait
fwait
fwait
fwait
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
addb
inc
inc
inc
inc
fwait
fwait
fwait
fwait
fwait
movntps
sub
add
add
and
and
and
and
dec
add
jne
jne
add
sbb
mov
rcl
rcl
rcl
rcl
rcl
rcl
rorb
clc
cs
add
add
cmp
add
popf
aaa
aaa
add
test
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
stos
stos
stos
stos
or
or
ljmp
cmp
cmp
cmp
scas
scas
int
jp
cmp
cmp
incb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
daa
adc
adc
adc
adc
out
out
mov
sbb
sbb
push
inc
imul
dec
dec
repz
bound
bound
bound
cs
cmp
mov
mov
mov
mov
mov
lcall
leave
sbb
jb
jb
cltd
add
imul
jae
in
in
daa
daa
daa
daa
daa
dec
dec
dec
dec
sub
mov
sti
sti
sti
sti
sti
sbb
sub
mov
push
push
push
push
push
push
push
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
aas
aas
aas
aas
add
cwtl
push
mov
adc
test
test
add
add
add
add
jbe
add
push
push
push
push
push
push
xor
xor
and
and
test
fcomp
fcomp
fcomp
popa
aaa
ja
ja
ja
xchg
xchg
xchg
in
in
in
in
in
nop
nop
nop
mov
mov
jo
incb
add
add
mov
push
push
sbb
sbb
sbb
rcl
rcl
rcl
rcl
rcl
rcl
shll
faddl
add
jbe
jbe
jbe
jbe
jbe
rcl
rcl
rcl
rcl
add
push
push
push
push
jge
jge
in
popl
add
rcl
rolb
add
add
jo
jo
loope
loope
xlat
xlat
sahf
dec
dec
idivb
pop
pop
test
aam
aam
aam
aam
aam
imulb
push
push
push
push
jns
sti
sti
sti
sti
sti
sti
sti
sti
sti
outsb
add
and
and
xchg
xchg
push
pop
pop
cmp
cmp
cmp
sbb
sbb
add
adc
xor
sbb
sbb
sbb
xchg
xchg
xchg
xchg
xchg
mov
sbb
sbb
les
dec
dec
aad
out
out
out
out
mov
mov
xchg
xchg
xchg
xchg
add
add
add
jg
add
das
das
das
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cltd
cltd
pushf
pushf
fwait
fwait
fwait
fwait
fwait
fwait
fwait
imul
imul
mov
ja
add
add
out
out
out
popa
popa
popa
popa
pusha
pusha
push
dec
dec
sti
sti
sti
sti
addb
lea
mov
mov
test
sbb
push
push
loopne
loopne
loopne
inc
inc
sub
sub
lea
add
cmp
or
jo
jo
jo
jo
jo
jo
jo
out
out
out
out
adc
adc
adc
push
push
dec
dec
scas
scas
scas
scas
mov
add
add
inc
inc
inc
inc
inc
inc
or
sbb
sbb
sbb
int
int
int
int
mov
mov
lea
or
add
add
add
fs
rcl
rcl
rcl
rcrl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
addl
add
add
pop
pop
xlat
fdivrl
out
out
out
loope
loope
loope
add
add
add
jmp
mov
scas
scas
scas
scas
scas
scas
add
add
inc
inc
inc
repnz
aas
aas
aas
aas
aas
aas
adc
adc
adc
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
outsb
or
insl
mov
outsl
outsl
outsl
outsb
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
jbe
add
ss
add
add
jl
jl
jl
cs
pushf
pushf
pushf
pushf
pushf
add
add
add
add
mov
mov
or
or
or
or
or
push
push
push
icebp
icebp
icebp
pop
pop
xchg
repz
add
add
add
fdivl
xor
add
jb
insb
insb
insb
insb
insb
mov
mov
xor
xor
js
inc
inc
inc
inc
mov
add
add
add
add
ds
scas
scas
scas
jecxz
jecxz
jecxz
jecxz
xor
inc
inc
sahf
push
push
push
push
push
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
jo
adc
jb
add
or
or
or
or
or
inc
inc
inc
jbe
jbe
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
adc
adc
add
sbb
mov
or
sub
sub
push
push
push
push
push
adc
pusha
pusha
pusha
pusha
sub
sub
ret
ret
movsl
movsl
inc
adc
adc
adc
inc
inc
inc
inc
fstp
push
push
push
push
push
push
push
push
push
mov
adc
scas
scas
scas
scas
iret
iret
mov
mov
mov
mov
mov
ja
bound
xor
mov
insl
loopne
push
loopne
jecxz
and
mov
arpl
pushf
cmp
std
cmp
les
inc
scas
lock
andb
jbe
pusha
rclb
xor
mov
jae
mov
shlb
push
imulb
addb
subb
push
lods
xchg
fwait
push
add
add
xor
mov
push
ljmp
inc
inc
insl
xchg
add
add
lahf
fwait
les
fisubrs
jg
lea
adcb
into
mov
or
das
push
rorl
lods
shlb
mov
add
mov
idivb
and
pusha
xchg
mov
mov
and
inc
xchg
jae
ja
fsubrs
loopne
xor
mov
sar
adc
inc
stc
jecxz
addb
and
mov
ja
mov
adc
lea
and
fisubs
fcomp
mov
scas
inc
inc
fwait
movsl
xchg
sub
jg
movsl
stc
cmp
xchg
test
mov
js
addb
cmp
sbb
lods
inc
and
loope
xchg
add
inc
mov
add
sub
movsl
mov
cmp
pusha
and
jno
mov
inc
rcrb
adc
inc
add
adcb
pusha
out
xor
and
pusha
push
aas
stc
std
inc
ret
add
xor
mov
cmp
icebp
test
xor
mov
xchg
or
xor
inc
fwait
dec
sub
aaa
test
pusha
add
inc
aad
rcrl
in
in
pop
ds
mov
mov
jmp
mov
movsb
loopne
push
cld
mov
or
and
sar
inc
fsubrs
rcrl
test
andb
mov
sbb
inc
movsl
sahf
test
adcb
jnp
outsb
dec
jl
mov
shrb
sar
mov
add
int3
gs
out
arpl
or
sub
pusha
mov
inc
add
pop
or
test
fists
clc
imul
idivl
test
sub
loopne
sub
cli
adc
mov
pop
sti
and
add
jl
in
cmpsb
addb
pushf
mov
mov
cmpsb
add
not
xlat
outsb
pop
push
cs
andb
dec
mov
pusha
rcrb
mov
xchg
test
sti
sub
pusha
sub
add
push
mov
inc
adcb
test
loopne
sub
jmp
les
jmp
sti
inc
xchg
sbb
pusha
adcb
and
adc
sbb
aaa
lods
push
xor
and
and
sub
idiv
cvtpi2ps
loopne
fsubs
mov
shlb
xchg
cmp
ret
bsr
mov
mov
jmp
loopne
xchg
hlt
scas
inc
loopne
mov
push
orl
mov
xor
cmc
cltd
lcall
inc
pusha
or
add
sbb
loopne
pop
ja
bnd
loop
hlt
aad
push
rolb
cmp
cmp
mov
and
dec
dec
jecxz
sbb
repnz
mov
cli
sub
pop
xchg
hlt
cmc
mov
shl
data16
mov
mov
cmp
sub
push
js
aaa
lods
addb
pusha
lds
mulb
out
daa
lcall
add
dec
leave
pop
lret
cld
xchg
call
add
imul
shlb
nop
push
fildll
rolb
inc
inc
and
sbb
pusha
js
lock
mov
xchg
pushl
pushf
pusha
test
dec
mov
mov
cld
and
and
repz
push
pusha
loopne
loope
mov
ret
fxch
pop
nop
andnps
in
popf
jmp
hlt
loope
pusha
and
iret
inc
into
fs
ret
sbb
and
shlb
xor
stc
int
and
inc
ds
bound
ss
mov
dec
icebp
adc
mov
cwtl
mov
pushf
push
mov
std
dec
call
test
inc
adc
mov
adc
stos
pusha
loopne
addb
test
out
add
vmovq
mov
ret
inc
inc
lcall
data16
mov
sbb
push
and
stos
rol
shlb
test
sbb
inc
jo
push
add
ret
xchg
in
lret
adc
sbbb
add
testb
loopne
test
loopne
out
inc
rclb
xchg
out
push
pusha
loopne
pop
in
stos
mov
movsl
fldl
enter
enter
shlb
popf
push
inc
add
mov
jns
hlt
mov
pop
and
daa
mov
mov
mov
loopne
mov
rcrb
sti
sub
scas
lods
loopne
popa
adc
adc
bound
pop
inc
xchg
dec
jnp
loopne,pn
iret
jge
popf
or
adc
into
dec
cmc
adc
lret
cmp
adc
pusha
sarb
pop
add
cmp
lea
dec
repnz
push
push
dec
out
lcall
jno
dec
int3
xor
cmp
cltd
mov
jo
iret
sbb
not
out
repz
mov
mov
cmp
pusha
cmpb
sbb
inc
rclb
xchg
sbb
push
addb
nop
int3
popa
shl
fisttps
rol
jecxz
sbb
rol
sub
ret
xchg
cmp
cmp
dec
sub
and
mov
adc
jo
sbb
mov
mov
je
aad
push
stc
inc
adc
xchg
ljmp
inc
in
loopne
scas
mov
mov
rclb
xchg
loopne
mov
mov
fs
imul
das
out
adc
or
jo
insb
pop
dec
sbb
pusha
js
adc
push
sub
addb
js
push
mov
mov
mov
fidivrs
bndldx
std
cmp
add
test
adc
int3
mov
out
pop
mov
and
jo
sbb
add
mov
mov
loop
lods
rolb
pusha
rcr
pop
lds
sub
mov
les
fildll
jl
fs
pop
cmpsb
and
fwait
out
popa
adcl
ud1
pop
dec
shlb
outsb
rorl
and
jae
lret
pop
andb
sbb
addb
mov
and
dec
and
ret
dec
jge
lea
jmp
mov
imul
pusha
loopne
movsl
aaa
shl
sbb
jae
jl
xor
push
or
push
pop
insl
aaa
add
jns
stos
pusha
and
lret
sub
cltd
test
and
test
loopne
add
insl
cmpsb
loopne
fmuls
xor
shl
aam
loopne
adc
inc
adcb
loope
push
xor
fstl
lods
add
mov
ss
fldcw
mov
lods
or
shrb
rolb
and
andb
add
iret
sub
rcrb
imul
add
jno
and
mov
into
mov
pop
test
jcxz
outsb
mov
mov
mov
sbb
dec
int3
incb
addb
mov
inc
and
pop
dec
mov
subl
add
mov
loopne
in
fisubs
sbb
dec
inc
pusha
cmc
loopne
fstl
loopne
sbb
xor
pop
daa
cmp
test
cmc
mov
cmpsb
addb
stos
in
mov
mov
jg
mov
xchg
cmpl
rolb
sbb
fimuls
sbb
pop
addr16
jnp
sti
mov
mov
cmp
shlb
sbb
gs
push
and
cmpsl
and
add
jns
insb
jae
rorb
je
cmpsb
add
jp
push
mov
sbb
and
sbb
adc
jno
lret
mov
and
rorb
je
inc
sub
aaa
je
lret
lret
insl
lcall
xlat
les
lock
pusha
mov
popf
push
fildll
mov
pop
mov
rolb
mov
xor
push
gs
test
or
and
cmp
inc
or
sub
lcall
sbb
cmpsl
dec
push
mov
xor
add
outsl
popf
sbb
cmp
imul
add
aas
mov
mov
cmp
lea
scas
clc
les
and
pop
aas
rcll
test
mov
mov
pop
je
xor
fsts
push
mov
inc
xchg
hlt
or
jmp
pop
repz
adc
inc
add
repz
and
pop
popa
std
inc
jnp
push
mov
mov
and
mov
imul
inc
jae
std
daa
jmp
rcll
inc
cmpb
aad
jo
and
inc
rorb
sub
loopne
mov
dec
and
shlb
sub
sbbb
leave
jns
inc
xor
loopne
jne
pop
iret
jg
hlt
mov
mov
mov
out
xchg
mov
ss
fldl
sub
addb
addr16
xor
les
stc
adc
pop
xchg
and
and
mov
in
lahf
hlt
inc
rcrl
sbb
into
shrl
push
mov
addb
pusha
pusha
fisttpll
stos
andb
mov
pushf
das
andb
std
push
sbb
and
out
adc
cwtl
xlat
pop
pop
pop
cmp
mov
add
cmpsl
in
dec
movsl
or
andb
xchg
adc
rorb
or
icebp
loop
pushf
jns
je
outsl
out
cmp
not
ljmp
cld
es
mov
scas
and
jb
sbb
imul
or
js
rolb
pop
mov
adc
clc
mov
pop
add
pushf
dec
and
push
andb
lds
or
mov
push
and
mov
imul
fidivl
xchg
movb
and
mov
xor
or
inc
sub
shrb
xchg
and
out
xchg
jge
sbb
insb
xchg
xor
out
jle
scas
aad
loopne
sbb
movsl
mov
or
stos
pusha
and
addb
cmp
je
cmp
xor
and
and
pop
fistl
test
xchg
sbb
and
lock
pop
adc
rol
dec
inc
lahf
jns
mov
push
adc
inc
push
mov
cmp
lea
and
add
shlb
pop
inc
daa
add
shrb
mov
mov
and
sub
loopne
or
bound
jmp
mov
mov
adc
addb
pusha
shl
or
xchg
iret
jg
or
mov
mov
mov
mov
or
xor
sbb
mov
pop
out
mov
dec
mov
pop
xor
pop
out
jg
inc
and
daa
mov
imull
pusha
inc
insb
sub
and
mov
add
adc
rcrb
mov
pop
fwait
xor
jae
or
jge
mov
dec
out
pushf
fisubrl
shlb
std
rclb
addb
inc
and
andb
and
ret
in
inc
loopne
push
dec
sub
aas
mov
shl
mov
xlat
shl
pusha
pop
mov
imul
or
cmpsl
pop
sbb
inc
cmp
addb
lock
mov
add
repz
sbb
cmp
insl
pop
dec
test
cld
xor
add
push
inc
loopne
icebp
cmp
fildl
andb
jne
dec
push
sarl
shl
adc
dec
call
andb
inc
cmpsb
loopne
lock
repnz
mov
mov
adc
jns
rolb
aad
cmp
add
iret
lods
andb
in
adc
cmp
mov
or
sub
jg
sbb
mov
push
in
jb
loopne
lods
or
mov
mov
inc
pusha
mov
mov
cmp
test
pusha
fimuls
andb
cltd
add
hlt
gs
repz
push
cmp
cmp
repz
inc
inc
shlb
add
pusha
mov
scas
loope
ret
pusha
loopne
mov
mov
loop
rcl
pop
and
mov
sbb
fstpt
add
ret
jmp
inc
xor
addb
roll
sub
clc
stos
inc
pusha
adc
cld
dec
push
lcall
inc
loopne
dec
and
inc
aas
jp
or
inc
test
lds
fbstp
sub
in
into
jne
mov
inc
loop
xor
add
adc
mov
addr16
mov
sub
scas
xor
and
arpl
out
lret
pusha
mov
mov
jmp
ror
ret
in
xchg
shr
xor
add
mov
push
jecxz
loopne
sarl
and
add
fwait
xchg
in
stos
add
gs
dec
or
pusha
js
mov
xchg
jg
cmp
and
dec
push
push
cmp
fcmove
movsb
addb
dec
dec
loopne
insl
ret
fcmovnb
mov
inc
repz
jl
in
test
add
dec
pop
popf
jl
stos
and
rolb
adcb
mov
dec
addr16
push
dec
xlat
aaa
mov
shl
mov
add
inc
lret
out
aas
int
xchg
movsl
push
movsb
add
sbb
and
mov
and
add
cmp
std
cmp
test
orb
cmp
add
loopne
xlat
outsl
cli
cmp
in
mov
mov
rclb
or
rolb
loopne
jle
xor
pop
xlat
xor
and
shlb
imull
xor
mov
mov
outsb
xor
loopne
ss
mov
fldenv
je
mov
adcb
mov
add
cmp
push
push
cmp
arpl
xor
ljmp
addb
rcll
sti
movsb
and
dec
andb
pop
jae
add
lea
push
iret
test
shl
lret
in
aaa
lock
xchg
push
fsts
jns
mov
aas
xor
add
cmp
movsl
pshufw
loopne
pop
jp
inc
and
jae
cmp
movsl
dec
fs
test
inc
cmpsl
cld
cs
inc
adc
hlt
pop
cmp
dec
sub
cmp
jno
stc
and
das
hlt
adc
pop
mov
xor
sti
push
jbe
sub
rorb
das
xchg
cli
mov
and
jmp
pop
ret
and
add
add
and
pop
mov
mov
mov
subb
out
in
add
sub
pop
ret
rclb
mov
add
stc
inc
outsl
adc
mov
sub
inc
scas
cltd
push
push
negb
stos
shlb
daa
inc
mov
sbb
or
lret
add
inc
pop
mov
je
mov
jmp
pusha
shlb
mov
push
cmp
inc
loopne
ror
or
sahf
aam
loopne
or
pusha
stos
mov
ss
out
inc
or
jbe
push
stos
andb
add
in
mov
jg
inc
ds
and
cmp
add
scas
mov
xlat
stos
mov
and
je
in
es
adc
insl
fstpl
outsb
movsb
andb
iret
push
andb
mov
mov
xchg
pop
lcall
and
sub
orb
loopne
add
out
repz
sbb
add
cld
mov
push
pop
js
dec
push
pop
lret
xchg
pusha
lret
push
mov
lock
xchg
dec
mov
dec
and
addr16
sbb
xchg
arpl
and
mov
cmp
push
cmp
jns
repz
sub
and
add
sub
imul
sub
pusha
pop
jle
mov
imul
cmp
mov
lahf
scas
pop
add
inc
mov
in
ljmp
into
push
test
mov
or
loopne
sti
mov
push
dec
and
lods
pusha
add
jo
ret
int
cmp
out
push
adc
subl
dec
xor
pusha
ret
orl
and
mov
and
ds
and
push
dec
pop
insb
idiv
in
inc
mov
sub
and
pop
mov
arpl
lods
cli
loopne
aaa
addb
mov
jge
sbb
shrl
loopne
sbb
hlt
stc
push
add
jb
xor
in
in
loopne
sbb
cltd
fldt
mov
lock
xchg
ljmp
pop
cltd
push
cmpsb
and
leave
nop
addr16
push
pusha
inc
xor
jae
mov
loopne
sbb
cmovp
imul
push
ret
dec
lret
and
jl
inc
add
rorb
bound
jp
mov
pusha
lds
xchg
ss
shlb
adc
xchg
add
iret
into
mov
jno
add
addb
and
pushf
pop
add
sbb
imul
inc
fninit
mov
enter
fnstsw
pusha
mov
shlb
jmp
sub
mov
mov
sub
mov
mov
aaa
lret
xor
sbb
pop
dec
call
jbe
ret
pop
inc
mov
sar
addr16
mov
dec
pop
int
dec
andb
cmp
add
and
out
daa
testl
adcb
add
dec
mov
sub
cmp
movsl
test
loopne
mov
or
loopne
pusha
mov
int3
mov
sub
inc
sub
es
and
mov
stc
lods
stos
jg
pop
jbe
fisubs
nop
pop
lret
inc
fwait
add
enter
das
dec
add
loopne
xchg
push
movsb
pusha
pusha
or
mov
or
sbb
in
fnstcw
and
cmpsb
andb
push
repz
pop
inc
ljmp
sbb
add
inc
add
jb
add
add
fstpt
xor
inc
pusha
dec
test
and
add
and
xchg
repnz
leave
fsubs
loopne
scas
pusha
pusha
sbb
sti
sub
mov
mov
jge
jle
dec
adc
inc
mov
jnp
ss
addb
pusha
sbbb
pop
pop
repz
adc
mov
inc
inc
test
push
jae
in
lock
cmp
insb
mov
xchg
cmp
shll
and
arpl
in
mov
pusha
inc
pop
scas
push
aaa
nop
adc
rolb
dec
lcall
push
xchg
gs
dec
add
sbb
je
aaa
nop
iret
jecxz
jge
mov
pusha
and
addb
sub
mov
mov
inc
shrb
sub
and
loop
rol
and
mov
sub
sub
inc
sub
add
xor
add
mov
in
push
stc
xlat
mov
sub
push
sbb
testl
and
inc
bound
out
xchg
inc
sarl
in
daa
mov
test
and
addb
inc
sub
add
loopne
pushl
test
loopne
add
xchg
xchg
outsb
bound
adc
inc
sbb
dec
push
rsqrtps
mov
mov
loopne
fstps
jae
js
div
mov
xor
xchg
stc
daa
xor
repz
sub
in
lds
inc
pusha
js
sub
add
or
pusha
dec
mov
stos
inc
andb
loopne
repz
loopne
push
xlat
adc
and
cmpsl
mov
or
cltd
ret
pop
inc
mov
inc
pop
push
inc
add
fucomi
and
mov
stos
loope
add
sub
and
add
xor
or
adc
pop
loop
push
inc
sbb
mov
inc
into
outsb
adc
out
repnz
push
stos
addr16
pusha
fildll
shr
das
fldl
out
mulb
push
sbb
fimull
xchg
sbbb
ret
xor
adc
aam
jl
mov
test
jb
or
or
pop
roll
out
inc
sub
dec
les
xor
mov
mov
add
adc
sub
or
sbb
jmp
mov
loopne
sbb
popa
dec
dec
jp
add
int
call
mov
ds
mov
inc
xorb
xchg
fucomi
xor
out
insb
lds
negl
rol
ljmp
xchg
lds
loopne
mov
pusha
or
mov
xchg
fwait
mov
incb
out
pop
add
add
sbb
pop
mov
punpckhdq
orb
stos
and
adc
aad
js
inc
mov
xor
or
add
in
aaa
ljmp
and
sub
mov
inc
mov
mov
repnz
andb
into
inc
dec
mov
dec
mov
push
aas
ret
sub
loopne
mov
out
and
cmpsb
pusha
pusha
xor
and
push
jnp
cmp
rol
mov
ret
mov
mov
add
inc
repnz
mov
adc
mov
rcrb
dec
add
adc
dec
addl
les
add
push
push
push
call
cld
sub
inc
add
imul
nop
push
stc
pop
and
cmp
je
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
add
mov
cld
not
imul
and
es
call
sar
jmp
sbb
mov
add
add
pop
pop
add
pop
push
sub
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
mov
push
cld
jmp
xchg
je
xor
push
mov
jmp
subl
push
sub
cmc
test
add
icebp
pop
rcrl
and
clc
add
inc
sub
cmp
imul
sub
and
mov
mov
jmp
and
pop
aas
lods
loopne
pop
loope
push
lock
inc
push
dec
inc
rcrb
add
and
sub
dec
ficomps
punpckldq
jnp
and
add
loop
stc
add
loop
pop
icebp
scas
pusha
pusha
mov
sbb
add
lods
out
into
in
pop
push
jae
jae
ja
lods
inc
shlb
lahf
aam
mov
xchg
lods
and
lret
push
pushf
decb
gs
inc
int3
jne
scas
mov
inc
and
cmpb
stos
mov
lds
mov
mov
mov
test
sbb
push
or
inc
addr16
adc
jl
jl
xrelease
adc
mov
inc
enter
mov
inc
dec
add
lods
add
mov
test
add
mov
push
pusha
and
xlat
lcall
test
add
mov
loopne
sub
xor
cmc
mov
andb
ljmp
cmpsl
push
pop
lods
rol
jmp
and
and
jmp
and
lds
and
cmp
inc
ds
in
test
mov
sub
je
cltd
and
repz
andb
inc
cmc
mov
xlat
adc
pop
out
fcoms
push
jnp
out
lock
imul
repz
inc
sub
add
sahf
sahf
sbb
mulb
loopne
xchg
sbb
mov
movsl
aas
loopne
arpl
cld
adc
loopne
test
inc
sub
add
and
sub
push
cmp
and
fld
jle
imul
mov
or
repz
lods
test
shrb
insl
push
sub
repnz
inc
negl
jp
mov
mov
jnp
pop
cwtl
mov
mov
lret
clc
adc
pushf
fldt
pop
icebp
fdivrl
sub
daa
push
mov
ja
inc
or
and
adc
or
mov
mov
lds
mov
fcmove
sub
pusha
push
inc
mov
mov
add
outsb
ss
and
daa
xchg
shll
shrb
add
inc
add
xor
cmp
test
cli
mov
fcom
dec
xchg
pop
push
pusha
pusha
test
mov
dec
push
xchg
lods
inc
test
popf
test
and
sub
push
aaa
emms
arpl
dec
pushf
or
cltd
repz
and
rol
test
rorb
ror
push
mov
and
daa
mov
mov
xchg
inc
adc
outsl
jecxz
pusha
pusha
decb
add
pusha
xor
add
xor
inc
and
insl
jae
sbb
mov
nop
cli
jno
mov
fdivrp
push
je
cmp
mov
insl
mov
test
in
int
imul
shl
mov
cli
push
mov
mov
iret
push
rolb
sub
pusha
outsl
mov
loopne
movsb
rolb
push
out
cwtl
mov
shlb
cmpsb
mov
rolb
mov
div
insb
mov
cmp
xor
andl
push
fwait
cltd
cmp
pusha
cmpb
mov
adc
pushf
mov
mov
loopne
vpcomub
mov
or
rcll
in
fstl
xor
int
pushf
test
pusha
adc
and
out
mov
and
and
divl
sbb
and
mov
and
mov
addr16
xor
push
jp
div
inc
icebp
scas
addb
mov
icebp
call
nop
lcall
orb
lea
sub
rclb
jecxz
mov
in
push
jecxz
pushf
mov
dec
dec
xor
mov
or
popa
xchg
sub
jnp
scas
pusha
loopne
test
mov
into
add
inc
cwtl
dec
jmp
shll
inc
pusha
mov
adc
pop
xor
rcrb
pop
test
sub
rorb
add
fsubrl
out
or
aas
push
les
xlat
int3
psrlq
dec
mov
mov
and
and
jp
dec
dec
stos
add
sub
rorb
mov
mov
loopne
add
and
add
or
jbe
rolb
ret
adc
testb
cltd
cmpl
nop
mov
adc
cmp
jp
mov
loop
sub
cmpsb
mov
daa
nop
dec
cmc
imulb
rolb
add
mov
pusha
lret
add
mov
adc
loopne
or
xchg
cmp
dec
daa
addb
jae
les
aam
pop
test
aaa
test
or
mov
mov
rcr
cmpsb
add
fidivrl
data16
or
mov
out
test
orb
aas
adc
inc
ss
out
dec
jo
call
mov
loopne
mov
rolb
push
js
pushf
outsb
mov
imul
sbb
mov
inc
stos
add
or
mov
dec
mov
loop
pushl
mov
je
mov
pop
fldt
adc
xchg
out
xchg
inc
ljmp
jae
inc
add
mov
sub
pusha
mov
je
pop
jb
sbb
push
aam
or
push
mov
notl
scas
and
and
and
pusha
notb
mov
and
psrlw
sbb
pop
sub
pusha
shlb
inc
mov
push
mov
mov
inc
enter
and
add
add
cmpsl
jecxz
pop
cmpsb
and
inc
sub
add
or
cmpb
das
lret
dec
lds
scas
cmc
imul
and
jg
mov
call
inc
pushf
cmp
jb
push
mov
sub
shlb
add
and
sbb
outsb
loopne,pn
inc
xor
lds
jns
jnp
add
dec
repz
and
and
push
lret
daa
dec
inc
in
lods
setp
fistps
popa
lea
cmp
stos
shlb
shlb
int3
test
and
mov
loopne
imul
in
push
add
stc
xor
in
dec
or
mov
cltd
pop
mov
mov
je
push
aam
jp
xor
jle
push
jb
iret
scas
stos
adc
xchg
pop
push
loopne
mov
and
aaa
aam
and
das
or
outsb
out
sbb
cmpsl
cvtdq2ps
mov
add
lahf
cmp
loopne
mov
sbb
inc
loopne
inc
mov
ljmp
aam
add
icebp
pop
push
xchg
add
dec
lahf
fimull
dec
inc
jl
mov
icebp
jecxz
pop
sbb
fs
cmpsb
add
pop
frstor
xor
fisubrl
and
dec
lock
inc
loopne
mov
shlb
push
mov
pop
ja
loope
jmp
ljmp
js
lods
fldcw
sbbb
rolb
cmp
test
repz
dec
je
out
pop
cmp
and
loopne
sbb
push
mov
mov
loopne
rol
fimuls
mov
and
mov
push
add
mov
imul
fimuls
inc
inc
arpl
inc
stos
mov
mov
loop
stos
addb
add
aaa
nop
or
imul
loopne
sbb
js
scas
loopne
pop
lret
mov
mov
cmp
adc
ljmp
add
mov
mov
xchg
dec
fistps
nop
addb
insl
adc
ret
mov
repnz
pop
sub
add
in
adc
call
and
rorl
mov
andb
sub
xor
loopne
pop
adc
je
pusha
rcrb
xchg
out
pop
loop
out
fstpl
mov
inc
cmp
cmpsl
pushf
fcoms
sub
outsb
fildll
test
xor
loopne
mov
mov
test
rcrb
and
push
das
jbe
out
inc
sub
nop
subl
fnstsw
and
inc
test
push
pop
out
cli
cld
out
hlt
mov
loop
bt
cmp
add
jl
repnz
push
call
cmp
pop
push
loope
loopne
add
add
and
cld
or
ret
aad
sbb
shlb
loopne
cmpsb
shlb
gs
imul
rcl
clc
mov
pusha
or
xorb
sub
lcall
ret
xor
cld
or
jno
adc
mov
loopne
push
mov
and
shll
andb
loopne
rolb
cmp
pop
insb
add
pop
cmpsl
mov
sarb
inc
jo
aad
into
add
and
shlb
add
xor
xor
bound
sbb
mov
adc
addb
or
rcrb
in
mov
loopne
mov
lods
mov
loope
and
jnp
and
gs
lcall
adc
push
inc
cmpsb
add
cmp
xchg
sub
inc
fsub
jbe
loopne
mov
dec
fsubr
xor
mov
int
pop
xchg
lcall
push
lcall
and
jp
jb
inc
loopne
cmp
add
jmp
int
add
out
test
and
cmp
mov
jmp
push
scas
mov
pusha
add
loopne
adc
adc
jb
hlt
sub
pusha
and
xorb
outsb
outsb
and
repz
fistpll
andb
movsb
loopne
sbb
sbb
andb
testb
sbb
cli
movsb
add
aaa
test
sub
loopne
dec
hlt
lock
inc
cmpsb
rolb
fdivl
cltd
out
xchg
sub
xchg
imul
inc
rorl
xor
jl
repz
int3
psadbw
mov
les
add
add
cmp
mov
and
inc
jge
or
aas
xchg
ret
or
pusha
mov
decl
xor
test
pusha
icebp
and
adc
jle
xchg
sarb
adc
mov
and
aam
gs
mov
popf
mov
movsb
inc
mov
xor
loope
sbb
icebp
imul
mov
jmp
dec
fwait
popf
int
imul
adc
cmp
addl
mov
insb
mov
xor
adc
mov
addb
add
push
mov
js
mov
or
rolb
or
rcrb
add
inc
and
lods
push
mov
add
stos
add
add
inc
xchg
out
jle
out
and
and
push
les
mov
fiaddl
jnp
sbb
sbb
push
shlb
mov
int
bound
xchg
inc
and
and
lods
bnd
jecxz
mov
fadds
mov
jp
sbb
cmp
fldenv
inc
and
mov
xor
pusha
and
add
jae
or
fsubrl
sarb
lahf
pop
stc
lods
cltd
ss
shll
pusha
rol
out
jnp
pop
pop
test
mov
imul
andb
pusha
sarb
push
or
sahf
out
push
loopne
loopne
loopne
test
cmpsl
adc
hlt
inc
push
es
and
andb
andb
lret
jae
and
notl
sbb
popa
mov
or
add
pusha
mov
cmp
cmp
jge
mov
stos
jne
stc
xchg
dec
xlat
sub
inc
addb
cs
mov
psubsw
rolb
xor
jns
cld
jbe
lret
jb
or
add
inc
xchg
pop
sbb
mov
pusha
and
repz
cmp
inc
ror
pop
mov
add
jle
mov
stos
dec
movsl
aas
rorl
adc
into
sub
sbb
arpl
or
sbb
test
adc
mov
mov
and
mov
fs
fcoml
adc
mov
fs
xchg
scas
sbb
call
lods
pop
adc
xchg
add
cli
pop
mov
add
mov
rcl
out
call
mov
rolb
nop
loop
mov
nop
sbb
inc
cmc
inc
inc
inc
jge
sbb
mov
add
ret
mov
shrb
negl
push
test
push
and
push
rcrl
shll
dec
lods
loopne
dec
dec
jb
fisubl
rol
pop
stc
loope
push
cmp
les
add
lods
inc
js
cld
inc
out
push
into
mov
aad
cwtl
push
push
jg
sti
bound
inc
add
pop
sbb
stos
pushf
aad
fsub
mov
pusha
mov
notl
test
rcrb
xchg
test
addb
jb
aaa
dec
stc
fistpl
jmp
and
gs
sub
inc
shrb
std
repz
ret
jl
add
xor
ljmp
add
push
dec
fdivrp
leave
pop
sub
loopne
inc
pop
cmc
fxtract
setno
and
loope
sbb
in
insl
fs
loopne
cli
sahf
in
sbb
mov
adc
ficoms
cmp
cmpsl
fnstenv
rclb
mov
rsqrtps
xor
cld
cltd
xor
ret
sbb
mov
inc
into
mov
adc
cmp
in
icebp
or
andb
push
adc
add
and
and
addb
lcall
data16
cs
mov
cltd
xchg
cmp
or
add
call
in
pusha
inc
mov
mov
mov
or
pusha
xchg
add
xor
fisubrl
pop
test
das
dec
push
sti
jge
push
ret
dec
sahf
repnz
fcmovnbe
inc
jle
pop
xchg
cltd
cmp
addb
pushf
pushf
mov
mov
hlt
mov
negl
ret
xchg
scas
js
mov
addb
and
mov
and
icebp
push
clc
repnz
nop
cld
jae
add
xor
add
sub
add
lahf
cmpl
push
mov
nop
leave
nop
jmp
add
add
jp
xor
clc
repnz
nop
cld
jae
add
arpl
cld
xor
leave
mov
push
mov
nop
leave
nop
jmp
or
jnp
add
add
loopne
inc
jne
clc
repnz
nop
cld
jae
adc
ja
add
push
mov
nop
leave
nop
jmp
add
add
pop
sahf
lahf
inc
push
mov
nop
leave
nop
jmp
add
add
sub
add
repnz
nop
cld
jae
add
testl
pusha
and
shlb
push
mov
xchg
ret
mov
add
clc
repnz
nop
cld
jae
add
mov
scas
mov
clc
repnz
nop
cld
jae
testl
sti
push
clc
repnz
nop
cld
jae
mov
add
andb
nop
cld
jae
enter
in
jnp
enter
repnz
nop
cld
jae
add
add
push
add
mov
clc
repnz
nop
cld
jae
addl
add
inc
or
repnz
nop
cld
jae
lret
add
push
fistl
mov
xchg
ret
add
push
add
in
out
mov
add
add
clc
repnz
nop
cld
jae
add
add
ret
mov
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
and
add
lods
pop
push
clc
repnz
nop
cld
jae
enter
add
lret
inc
and
clc
repnz
nop
cld
jae
mov
sahf
jb
dec
enter
add
fstl
repnz
nop
cld
jae
movb
cwtl
or
push
add
aad
rclb
xchg
inc
add
add
outsb
mov
and
push
call
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
add
add
lea
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
or
jmp
lock
mov
nop
leave
nop
jmp
cmpsl
mov
push
add
inc
xchg
adc
nop
leave
nop
jmp
add
mov
add
add
push
clc
repnz
nop
cld
jae
lret
fldcw
mov
clc
repnz
nop
cld
jae
add
fldenv
loopne
movzwl
clc
repnz
nop
cld
jae
add
add
andl
nop
cld
jae
jnp
mov
add
add
xchg
push
jmp
add
fldenv
dec
xor
add
lea
push
add
add
xor
nop
nop
cld
jae
mov
outsb
cmpsl
and
pusha
xor
js
clc
repnz
nop
cld
jae
or
add
lds
sbb
lea
xchg
ret
add
movsl
dec
add
add
and
repnz
nop
cld
jae
lods
sub
cwtl
in
xchg
clc
repnz
nop
cld
jae
add
lods
add
add
shlb
push
push
mov
xchg
ret
arpl
cwtl
add
add
add
mov
mov
clc
repnz
nop
cld
jae
or
push
jle
mov
push
xchg
sub
clc
repnz
nop
cld
jae
mov
fistpl
mov
nop
leave
nop
jmp
popf
add
add
popl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
add
add
xchg
daa
mov
push
mov
nop
leave
nop
jmp
add
or
cld
js
add
clc
repnz
nop
cld
jae
mov
add
xor
add
add
xor
push
mov
xchg
ret
mov
movsb
add
add
int
ret
clc
repnz
nop
cld
jae
add
push
push
add
arpl
adc
jne
push
mov
nop
leave
nop
jmp
sub
call
inc
add
add
xor
mov
xchg
ret
push
lds
push
lds
add
sub
repnz
nop
cld
jae
ret
sub
loop
mov
aad
ret
add
fnsetpm(287
sbb
sbb
add
xor
icebp
push
mov
nop
leave
nop
jmp
fiaddl
jnp
mov
mov
add
clc
repnz
nop
cld
jae
push
add
mov
push
adc
mov
add
repnz
nop
cld
jae
add
push
add
repnz
nop
cld
jae
add
lods
and
cwtl
dec
mov
clc
repnz
nop
cld
jae
mov
mov
mov
xchg
ret
sub
mov
add
call
cld
jae
add
mov
mov
mov
repnz
nop
cld
jae
stos
testl
mov
clc
repnz
nop
cld
jae
xor
aam
in
mov
nop
nop
cld
jae
add
and
pop
clc
repnz
nop
cld
jae
lret
add
and
or
inc
add
or
lea
jno
clc
repnz
nop
cld
jae
in
add
aam
movsl
pop
imul
sub
add
repnz
nop
cld
jae
or
mov
clc
repnz
nop
cld
jae
dec
and
inc
add
aaa
pop
inc
add
roll
sub
cmp
add
ljmp
leave
nop
jmp
movb
mov
loop
xor
sbb
clc
repnz
nop
cld
jae
mov
add
int
jmp
or
repnz
nop
cld
jae
add
or
lds
and
add
inc
rcl
cs
clc
repnz
nop
cld
jae
popl
add
pop
clc
repnz
nop
cld
jae
sub
add
add
mov
nop
leave
nop
jmp
add
add
cwtl
movsl
rcll
repnz
nop
cld
jae
movsl
dec
stos
mov
je
add
push
mov
nop
leave
nop
jmp
mov
add
clc
repnz
nop
cld
jae
add
add
lds
jge
clc
repnz
nop
cld
jae
add
lahf
shl
push
mov
nop
leave
nop
jmp
push
outsb
popf
testl
cmp
repnz
nop
cld
jae
mov
mov
movsl
inc
mov
add
in
nop
leave
nop
jmp
sub
mov
out
fld1
clc
repnz
nop
cld
jae
add
cwtl
add
add
out
dec
add
repnz
nop
cld
jae
add
dec
add
cmp
and
decl
nop
nop
cld
jae
or
cwtl
mov
fistpl
jmp
add
lret
add
add
push
push
mov
fidivrs
mov
clc
repnz
nop
cld
jae
cmpsl
cli
add
add
xor
cmp
add
clc
repnz
nop
cld
jae
int
movsb
cmp
cmpl
mov
xchg
ret
xor
xor
push
and
or
clc
repnz
nop
cld
jae
mov
push
push
mov
nop
leave
nop
jmp
add
push
pusha
mov
repnz
nop
cld
jae
add
ret
add
lds
fisttpll
mov
nop
leave
nop
jmp
popf
or
jne
clc
repnz
nop
cld
jae
cmpsl
push
add
mov
xchg
ret
outsb
and
mov
push
clc
repnz
nop
cld
jae
lds
outsb
add
mov
nop
leave
nop
jmp
add
xor
mov
add
and
in
nop
leave
nop
jmp
mov
fimull
push
clc
repnz
nop
cld
jae
cwtl
sub
movsl
and
nop
cld
jae
add
lds
add
mov
push
mov
xchg
ret
add
mov
enter
daa
sub
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
sub
add
nop
cld
jae
add
cli
add
pop
push
mov
xchg
ret
add
or
add
clc
repnz
nop
cld
jae
dec
mov
mov
cwtl
mov
sub
add
repnz
nop
cld
jae
mov
inc
push
mov
xchg
ret
push
or
push
push
dec
fld1
clc
repnz
nop
cld
jae
add
enter
orb
mov
xchg
ret
add
add
enter
xchg
fistpl
clc
repnz
nop
cld
jae
push
push
add
lea
nop
nop
cld
jae
add
arpl
aam
add
jle
mov
clc
repnz
nop
cld
jae
mov
add
fisttpl
mov
sub
bnd
add
add
dec
stos
jmp
rclb
in
nop
leave
nop
jmp
add
stos
sub
add
xchg
add
clc
repnz
nop
cld
jae
add
lret
add
mov
xchg
ret
enter
mov
and
mov
mov
mov
addr16
or
pop
mov
sub
sbb
nop
nop
cld
jae
add
and
mov
add
xor
push
clc
repnz
nop
cld
jae
lods
add
dec
mov
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
sub
jmp
clc
repnz
nop
cld
jae
loop
sub
add
mov
nop
nop
cld
jae
mov
add
add
cmpsl
testl
cmpl
add
lods
and
sub
aam
pop
clc
repnz
nop
cld
jae
mov
ret
add
push
mov
nop
leave
nop
jmp
gs
add
repnz
nop
cld
jae
movsl
sti
push
add
cwtl
add
mov
pop
jnp
add
push
popf
lds
sub
pop
push
mov
nop
leave
nop
jmp
and
lds
fisubrs
inc
les
add
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
in
fiaddl
add
clc
repnz
nop
cld
jae
xor
movsl
mov
clc
repnz
nop
cld
jae
add
add
add
stos
jb
xor
push
mov
xchg
ret
dec
add
add
movb
rcll
data16
add
add
popl
int
xor
clc
repnz
nop
cld
jae
in
lea
add
cmc
clc
repnz
nop
cld
jae
xor
add
mov
nop
leave
nop
jmp
stos
neg
mov
cwtl
cmpsl
add
or
repnz
nop
cld
jae
movsb
add
add
test
clc
repnz
nop
cld
jae
stos
lods
sub
stos
pop
push
mov
xchg
ret
sub
jnp
add
in
ljmp
mov
nop
leave
nop
jmp
add
andl
mov
xchg
ret
add
add
push
lds
xor
add
push
mov
nop
leave
nop
jmp
int
add
repz
push
mov
nop
leave
nop
jmp
cli
popf
add
mov
clc
repnz
nop
cld
jae
add
or
in
lahf
push
clc
repnz
nop
cld
jae
or
mov
xlat
pop
clc
repnz
nop
cld
jae
outsb
push
lods
loop
add
decl
sbb
add
and
adc
mov
clc
repnz
nop
cld
jae
push
fld
add
test
add
clc
repnz
nop
cld
jae
orl
add
dec
sti
enter
lods
add
stc
pop
clc
repnz
nop
cld
jae
add
or
bound
add
push
mov
nop
leave
nop
jmp
push
add
add
loop
push
push
mov
xchg
ret
add
adc
adc
test
adc
add
repnz
nop
cld
jae
movb
push
add
clc
repnz
nop
cld
jae
add
cmp
andb
rep
clc
repnz
nop
cld
jae
lods
add
add
in
cwtl
push
pop
clc
repnz
nop
cld
jae
add
dec
lret
mov
fistps
repnz
nop
cld
jae
push
add
fstps
lock
dec
sub
in
nop
leave
nop
jmp
cmpsl
mov
dec
push
push
mov
xchg
ret
add
add
arpl
push
mov
nop
leave
nop
jmp
ret
roll
cwtl
pop
jbe
xchg
je
clc
repnz
nop
cld
jae
add
mov
roll
push
add
mov
mov
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
sub
pop
xchg
repnz
nop
cld
jae
and
repz
clc
repnz
nop
cld
jae
add
fstps
shlb
nop
nop
cld
jae
mov
lea
and
push
and
clc
repnz
nop
cld
jae
movsl
mov
int
movsl
clc
orl
gs
add
add
add
dec
xor
cmpw
push
mov
nop
leave
nop
jmp
lods
push
or
movsl
pop
push
mov
xchg
ret
xor
add
add
add
sub
repnz
nop
cld
jae
in
add
movsb
outsb
lea
dec
rclb
addb
cmp
ret
add
add
mov
add
clc
repnz
nop
cld
jae
add
int
idivl
nop
nop
cld
jae
add
arpl
rcll
les
add
xor
lea
fiaddl
lods
mov
clc
repnz
nop
cld
jae
add
fldcw
inc
mov
adc
add
repnz
nop
cld
jae
push
dec
clc
mov
cmpl
jae
add
and
repnz
nop
cld
jae
add
enter
inc
push
push
mov
nop
leave
nop
jmp
gs
add
enter
adc
jmp
nop
cld
jae
and
add
push
mov
clc
repnz
nop
cld
jae
flds
jnp
add
mov
nop
nop
cld
jae
cli
jnp
add
push
mov
nop
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
mov
add
sub
clc
repnz
nop
cld
jae
add
lea
iret
mov
clc
repnz
nop
cld
jae
jnp
mov
imul
add
mov
or
flds
push
or
xor
lea
addb
cmp
ret
cmp
xor
gs
push
mov
nop
leave
nop
jmp
add
jnp
add
or
repnz
nop
cld
jae
add
fs
xor
loopne
xchg
push
mov
nop
leave
nop
jmp
add
dec
in
mov
add
fwait
push
mov
nop
leave
nop
jmp
add
add
add
add
dec
add
add
add
mov
add
add
repnz
nop
cld
jae
add
lds
mov
push
mov
xchg
ret
add
lds
add
add
in
test
loopne
mov
push
mov
nop
leave
nop
jmp
movsl
arpl
mull
lds
mov
xchg
ret
enter
int
rol
clc
repnz
nop
cld
jae
add
fsts
xor
add
clc
repnz
nop
cld
jae
dec
mov
add
sti
mov
add
add
pop
clc
repnz
nop
cld
jae
add
movb
push
push
mov
xchg
ret
lds
add
roll
popf
pop
out
push
push
mov
xchg
ret
shll
popf
lds
clc
repnz
nop
cld
jae
add
stc
push
push
mov
xchg
ret
add
or
xor
aas
push
clc
repnz
nop
cld
jae
dec
add
add
addl
push
mov
xchg
ret
add
add
xor
clc
repnz
nop
cld
jae
add
movsb
add
add
aam
push
push
mov
xchg
ret
cmpsl
mov
add
sbb
add
repnz
nop
cld
jae
add
dec
add
int
pop
jae
repnz
nop
cld
jae
addl
stos
sbb
add
in
nop
leave
nop
jmp
add
dec
arpl
rclb
xchg
inc
add
add
add
sub
xor
xor
andb
add
repnz
nop
cld
jae
push
movsl
add
mov
xchg
ret
add
add
add
aad
ret
sbb
cld
jae
and
cli
add
mov
push
mov
xchg
ret
ret
add
add
add
hlt
or
and
jae
repnz
nop
cld
jae
push
enter
add
mov
clc
repnz
nop
cld
jae
cmpsl
add
push
mov
rorb
loopne
addb
je
clc
repnz
nop
cld
jae
add
push
jne
clc
repnz
nop
cld
jae
push
add
lock
pusha
clc
repnz
nop
cld
jae
push
sub
sub
inc
jecxz
repnz
nop
cld
jae
mov
mov
movsb
and
cwtl
inc
push
clc
repnz
nop
cld
jae
xor
add
sub
add
repnz
nop
cld
jae
sub
add
mov
pusha
sbb
add
repnz
nop
cld
jae
add
push
mov
nop
leave
nop
jmp
sub
jnp
aam
mov
ja
fs
repnz
nop
cld
jae
add
push
stc
rep
clc
repnz
nop
cld
jae
add
add
roll
lds
push
mov
nop
leave
nop
jmp
sub
push
add
inc
jbe
lahf
mov
push
mov
xchg
ret
add
dec
or
inc
add
or
mov
add
fisubrl
dec
cmp
repnz
nop
cld
jae
mov
add
push
mov
add
clc
add
call
and
repnz
nop
cld
jae
add
add
add
adc
lea
push
mov
nop
leave
nop
jmp
add
ficomps
repnz
nop
cld
jae
mov
pusha
jno
clc
repnz
nop
cld
jae
fidivrl
mov
or
pop
push
mov
xchg
ret
loop
stos
add
add
add
push
lea
push
mov
xchg
ret
xor
fisubl
add
push
outsb
inc
mov
clc
repnz
nop
cld
jae
push
add
add
cwtl
das
shr
push
mov
nop
leave
nop
jmp
jnp
lods
add
fisttpl
nop
nop
cld
jae
ret
lea
lret
popf
leave
clc
repnz
nop
cld
jae
add
add
arpl
add
add
mov
adc
repnz
nop
cld
jae
sub
mov
clc
repnz
nop
cld
jae
movb
push
xor
repnz
nop
cld
jae
dec
add
jge
clc
repnz
nop
cld
jae
push
lds
add
jnp
and
pop
pop
clc
repnz
nop
cld
jae
popf
cli
add
lds
and
add
clc
repnz
nop
cld
jae
or
rep
push
mov
nop
leave
nop
jmp
add
add
add
or
add
repnz
nop
cld
jae
add
sti
xlat
mov
push
mov
xchg
ret
xor
xor
pop
enter
clc
repnz
nop
cld
jae
add
sub
add
test
push
mov
nop
leave
nop
jmp
add
or
sub
mov
nop
leave
nop
jmp
add
stos
ret
add
cmpsl
add
mov
clc
repnz
nop
cld
jae
add
sbb
push
push
mov
xchg
ret
add
add
or
add
xchg
nop
nop
cld
jae
addl
and
dec
push
clc
repnz
nop
cld
jae
add
xor
add
add
mov
push
mov
nop
leave
nop
jmp
push
mov
cmpsl
lds
add
or
inc
add
adc
jnp
push
mov
xchg
ret
cli
sub
gs
mov
stos
clc
repnz
nop
cld
jae
sub
adc
xorb
push
mov
xchg
ret
mov
mov
add
push
mov
xchg
ret
flds
outsb
mov
ret
xor
nop
nop
cld
jae
popf
dec
sub
lods
adc
push
mov
xchg
ret
int
or
add
lods
insl
mov
push
mov
xchg
ret
add
push
xor
add
outsb
nop
dec
adc
mov
nop
leave
nop
jmp
add
lea
sti
add
add
fistpl
clc
repnz
nop
cld
jae
mov
add
add
mov
add
cmp
xor
add
and
imul
clc
repnz
nop
cld
jae
adc
add
jnp
add
add
mov
in
loop
add
lret
push
mov
nop
leave
nop
jmp
gs
dec
call
xchg
in
nop
leave
nop
jmp
add
add
cwtl
push
jmp
nop
cld
jae
mov
test
sub
and
and
add
add
xor
cmp
call
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
not
add
and
mov
inc
add
push
and
movsl
add
sbb
add
clc
repnz
nop
cld
jae
push
push
arpl
push
add
mov
nop
leave
nop
jmp
add
sub
testl
sbb
in
nop
leave
nop
jmp
add
push
xor
add
lods
shlb
test
push
mov
xchg
ret
add
add
add
sub
mov
or
repnz
nop
cld
jae
add
movsb
add
ret
popl
dec
cmp
repnz
nop
cld
jae
in
add
xor
add
nop
leave
nop
jmp
stos
adcl
popf
xchg
push
mov
add
add
add
out
add
add
or
push
lock
je
push
mov
nop
leave
nop
jmp
add
sbb
mov
xchg
ret
add
mov
add
pop
jne
push
mov
nop
leave
nop
jmp
ret
ret
aam
shl
push
mov
nop
leave
nop
jmp
mov
add
sbb
nop
cld
jae
add
or
push
mov
mov
xchg
ret
add
add
add
rep
clc
repnz
nop
cld
jae
cli
push
add
push
mov
repnz
nop
cld
jae
aam
and
add
add
pop
mov
clc
repnz
nop
cld
jae
add
push
in
mov
lcall
leave
nop
jmp
mov
lods
movsl
xor
add
jecxz
test
clc
repnz
nop
cld
jae
ret
aam
repnz
in
inc
test
nop
nop
cld
jae
sti
add
dec
add
push
mov
or
repnz
nop
cld
jae
idiv
add
push
push
mov
nop
leave
nop
jmp
add
add
xor
cmpsl
add
and
pop
add
clc
repnz
nop
cld
jae
ret
mov
xchg
mov
clc
repnz
nop
cld
jae
add
mov
add
and
ss
clc
repnz
nop
cld
jae
andl
push
mov
xchg
ret
lods
add
add
mov
rep
push
mov
nop
leave
nop
jmp
cwtl
flds
add
lds
nop
leave
nop
jmp
add
sub
add
andb
add
add
inc
jg
add
add
add
pop
pop
push
mov
xchg
ret
cli
or
add
je
pusha
pusha
ret
push
mov
nop
leave
nop
jmp
sub
or
xor
inc
filds
dec
cmp
repnz
nop
cld
jae
push
xor
lods
add
add
mov
xchg
ret
int
mov
push
dec
add
clc
repnz
nop
cld
jae
add
xor
add
fistpl
inc
add
add
add
or
flds
sti
mov
clc
repnz
nop
cld
jae
arpl
add
push
negl
mov
nop
leave
nop
jmp
add
add
imul
cld
jae
xor
mov
lods
push
in
add
clc
repnz
nop
cld
jae
cwtl
add
lds
aas
mov
clc
repnz
nop
cld
jae
lea
mov
add
stc
adc
add
repnz
nop
cld
jae
or
mov
out
mov
push
mov
nop
leave
nop
jmp
add
add
pop
gs
cli
rorb
add
and
add
roll
mov
xchg
ret
roll
lret
cmpsl
and
push
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
add
lods
sti
enter
and
ret
mov
push
mov
nop
leave
nop
jmp
add
lds
mov
and
clc
repnz
nop
cld
jae
add
jge
repnz
repnz
nop
cld
jae
cmpsl
testl
lods
addl
dec
popf
add
adc
pop
fwait
push
mov
xchg
ret
adc
mov
push
rcrl
add
clc
repnz
nop
cld
jae
mov
add
or
out
call
in
nop
leave
nop
jmp
xor
and
jne
clc
repnz
nop
cld
jae
mov
cmp
push
push
mov
xchg
ret
add
add
pop
add
clc
repnz
nop
cld
jae
and
enter
jnp
outsb
and
repnz
nop
cld
jae
add
stos
pop
clc
repnz
nop
cld
jae
mov
add
add
push
add
push
mov
nop
leave
nop
jmp
or
icebp
inc
dec
es
repnz
nop
cld
jae
add
xchg
nop
nop
cld
jae
sti
enter
add
push
pop
add
clc
repnz
nop
cld
jae
push
mov
add
cmpsl
cmp
mov
xchg
ret
flds
enter
add
lock
lahf
mov
push
mov
nop
leave
nop
jmp
push
add
add
in
add
clc
repnz
nop
cld
jae
sub
dec
mov
nop
nop
cld
jae
push
add
add
lds
push
add
clc
repnz
nop
cld
jae
add
lds
in
push
add
nop
nop
cld
jae
add
add
add
or
and
clc
repnz
nop
cld
jae
stos
add
mov
clc
repnz
nop
cld
jae
add
mov
cmpl
cld
jae
lods
add
movsb
mov
mov
xchg
ret
add
mov
add
push
clc
repnz
nop
cld
jae
gs
add
add
add
inc
and
mov
nop
leave
nop
jmp
add
fsts
mov
xchg
ret
add
push
add
mov
call
inc
add
add
lds
add
clc
repnz
nop
cld
jae
fcmove
add
inc
inc
dec
add
clc
repnz
nop
cld
jae
add
ret
aam
pop
clc
repnz
nop
cld
jae
enter
popf
outsb
add
jnp
push
mov
xchg
ret
sti
fisubrl
cmp
jmp
push
mov
xchg
ret
add
and
add
fnstenv
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
in
mov
add
cmp
repnz
nop
cld
jae
push
or
push
add
add
pop
fwait
clc
repnz
nop
cld
jae
add
add
mov
nop
nop
cld
jae
cli
popf
lods
in
enter
xchg
push
clc
repnz
nop
cld
jae
add
enter
push
or
repnz
nop
cld
jae
add
mov
add
in
nop
leave
nop
jmp
mov
add
add
add
clc
repnz
nop
cld
jae
add
add
nop
aas
cmp
push
mov
nop
leave
nop
jmp
add
mov
enter
nop
cld
jae
cmp
mov
sub
inc
add
push
fiaddl
add
mov
andb
mov
add
add
or
stos
cli
push
repz
mov
jne
clc
repnz
nop
cld
jae
aam
mov
cmpsl
sub
nop
cld
jae
add
dec
add
jo
push
push
mov
nop
leave
nop
jmp
or
push
clc
repnz
nop
cld
jae
and
add
nop
cld
jae
enter
add
lret
and
add
clc
repnz
nop
cld
jae
add
popf
fisttpl
nop
nop
cld
jae
cmpsl
sub
add
mov
aam
mov
loopne
mov
nop
cld
jae
add
lret
in
add
inc
adc
rclb
nop
leave
nop
jmp
or
enter
and
cld
push
mov
xchg
ret
add
fisubrl
fimull
mov
push
mov
xchg
ret
add
or
je
push
mov
nop
leave
nop
jmp
int
mov
add
repnz
nop
cld
jae
push
add
imul
repnz
nop
cld
jae
cwtl
jge
push
mov
xchg
ret
dec
popf
add
add
mov
ret
imul
nop
nop
cld
jae
stos
sti
add
adc
andb
jmp
push
mov
add
xor
sub
lds
insl
inc
add
dec
add
pop
xor
push
mov
nop
leave
nop
jmp
add
and
sbb
clc
repnz
nop
cld
jae
lea
adc
cmpsb
add
dec
in
jae
clc
repnz
nop
cld
jae
add
or
popf
in
adc
add
clc
repnz
nop
cld
jae
add
fcmove
dec
push
testb
add
in
nop
leave
nop
jmp
add
lds
add
add
inc
pop
clc
repnz
nop
cld
jae
gs
add
movsb
add
jl
xor
insb
jle
add
and
and
clc
repnz
nop
cld
jae
adc
add
mov
xchg
ret
add
or
sub
mov
nop
nop
cld
jae
outsb
add
testl
mov
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
stos
add
add
lds
stos
and
and
mov
nop
leave
nop
jmp
cwtl
add
mov
cwtl
xchg
mov
adc
repnz
nop
cld
jae
mov
fisttpll
in
nop
leave
nop
jmp
push
add
add
or
repnz
nop
cld
jae
enter
cwtl
dec
stos
add
mov
xchg
ret
add
add
call
clc
repnz
nop
cld
jae
add
add
lock
addb
mov
push
mov
nop
leave
nop
jmp
add
pushl
push
mov
nop
leave
nop
jmp
mov
cwtl
xor
mov
xchg
ret
mov
add
mov
or
in
nop
leave
nop
jmp
add
add
fidivrl
js
pop
clc
repnz
nop
cld
jae
add
mov
or
or
add
in
nop
leave
nop
jmp
add
add
je
fisttpll
nop
cld
jae
mov
dec
and
clc
repnz
nop
cld
jae
add
add
add
cwtl
pop
add
push
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
cwtl
add
dec
movb
adcl
lret
cli
incl
and
xor
add
jnp
add
clc
repnz
nop
cld
jae
add
or
int
mov
f2xm1
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
popl
lods
add
or
push
mov
xchg
ret
add
cmpsl
xor
cwtl
add
je
push
clc
repnz
nop
cld
jae
add
add
push
xchg
xor
push
mov
nop
leave
nop
jmp
add
movsb
inc
inc
insb
es
loopne
je
clc
repnz
nop
cld
jae
add
loop
push
mov
xchg
ret
loop
push
add
push
mov
clc
repnz
nop
cld
jae
fsts
lds
lret
add
fmuls
or
push
mov
nop
leave
nop
jmp
lret
add
and
push
clc
repnz
nop
cld
jae
lds
cwtl
or
push
clc
repnz
nop
cld
jae
add
movsl
in
add
push
mov
nop
leave
nop
jmp
enter
add
and
mov
add
push
mov
xchg
ret
push
push
push
add
add
jmp
jae
add
flds
add
or
nop
nop
cld
jae
add
push
add
mov
popf
repz
push
mov
nop
leave
nop
jmp
fiaddl
or
mov
jmp
or
add
add
add
add
lods
ss
imul
decl
enter
lods
movsb
dec
mov
pop
jp
mov
clc
repnz
nop
cld
jae
testl
lea
loop
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
cwtl
jnp
push
xchg
adc
or
inc
pop
add
push
mov
nop
leave
nop
jmp
sub
loopne
popa
push
clc
repnz
nop
cld
jae
push
sub
add
mov
xchg
ret
add
xor
push
xor
push
mov
xchg
ret
enter
add
add
loopne
fistpl
push
mov
xchg
ret
push
push
add
add
cmp
es
lds
test
repnz
nop
cld
jae
mov
and
in
nop
leave
nop
jmp
add
add
xor
clc
repnz
nop
cld
jae
add
mov
inc
push
mov
xchg
ret
add
notl
int
shll
call
clc
repnz
nop
cld
jae
add
cmp
jbe
add
clc
repnz
nop
cld
jae
cmpsl
add
xor
clc
repnz
nop
cld
jae
add
lret
int
mov
nop
nop
cld
jae
and
push
add
add
mov
repnz
nop
cld
jae
and
add
mov
scas
and
jge
dec
cmp
repnz
nop
cld
jae
add
lds
add
push
mov
clc
repnz
nop
cld
jae
popf
push
or
mov
repnz
nop
cld
jae
cwtl
sub
int
dec
sub
nop
cld
jae
stos
add
push
cmp
add
add
clc
repnz
nop
cld
jae
mov
bound
nop
nop
cld
jae
lret
add
add
jno
icebp
clc
repnz
nop
cld
jae
adc
add
sub
and
in
nop
leave
nop
jmp
push
add
add
clc
repnz
nop
cld
jae
add
std
testl
push
mov
nop
leave
nop
jmp
add
jnp
jmp
push
mov
nop
leave
nop
jmp
mov
add
mov
jae
push
mov
nop
leave
nop
jmp
push
mov
movsb
add
loop
push
ja
clc
clc
repnz
nop
cld
jae
mov
lret
add
pop
mov
mov
nop
leave
nop
jmp
in
dec
lods
add
pusha
call
cld
jae
lods
cmpsl
popf
lea
movsb
add
push
mov
jb
add
add
sbb
add
add
movsb
andb
lea
push
mov
nop
leave
nop
jmp
xor
mov
add
and
or
inc
add
add
mov
adc
repnz
nop
cld
jae
add
add
and
cmp
mov
xchg
ret
addl
shlb
add
clc
repnz
nop
cld
jae
sub
add
jmp
add
cwtl
roll
flds
cmp
xor
inc
stc
dec
push
mov
nop
leave
nop
jmp
add
aam
push
add
push
stos
mov
push
mov
xchg
ret
add
flds
cld
in
clc
repnz
nop
cld
jae
add
add
int
clc
repnz
nop
cld
jae
add
ret
fnstenv
call
push
mov
xchg
ret
add
enter
add
repnz
nop
cld
jae
loop
popf
add
add
mov
push
mov
xchg
ret
mov
and
add
adc
repz
repnz
nop
cld
jae
sti
loop
mov
sub
add
add
or
xor
add
jnp
gs
loop
sbbl
nop
nop
cld
jae
add
add
enter
jne
roll
repnz
nop
cld
jae
loop
add
pop
push
push
mov
nop
leave
nop
jmp
or
mov
rorl
scas
enter
nop
leave
nop
jmp
and
dec
arpl
inc
add
loop
add
mov
lods
add
pusha
mov
adcb
repnz
nop
cld
jae
add
int
add
add
push
push
mov
xchg
ret
enter
push
add
jl
test
push
mov
nop
leave
nop
jmp
shll
push
add
add
shlb
dec
lods
and
incl
and
int
push
push
lods
add
add
movb
pop
pop
clc
repnz
nop
cld
jae
xor
neg
mov
push
push
mov
xchg
ret
dec
mov
xor
push
daa
shl
push
mov
nop
leave
nop
jmp
loop
add
jl
sbb
and
push
addb
mov
and
repnz
nop
cld
jae
add
add
rep
clc
repnz
nop
cld
jae
lods
push
mov
and
mov
nop
nop
cld
jae
add
sub
enter
pop
icebp
decl
movsl
aam
sub
mov
mov
clc
repnz
nop
cld
jae
stos
push
add
movb
mov
nop
leave
nop
jmp
add
sti
addl
cmp
mov
nop
leave
nop
jmp
add
jnp
add
addr16
push
mov
nop
leave
nop
jmp
add
mov
sub
pusha
loopne
fwait
clc
repnz
nop
cld
jae
int
stos
mov
mov
test
add
push
mov
nop
leave
nop
jmp
add
push
orl
repnz
nop
cld
jae
lea
mov
fistl
pop
outsb
inc
add
add
popf
andb
stc
call
clc
repnz
nop
cld
jae
int
arpl
mov
cmp
ret
ret
add
add
add
dec
lret
andl
nop
cld
jae
mov
int
bound
push
mov
push
clc
repnz
nop
cld
jae
add
add
add
and
inc
cmp
mov
nop
leave
nop
jmp
add
movsb
add
mov
repz
mov
xchg
ret
add
add
enter
sub
add
repnz
nop
cld
jae
add
rcr
dec
push
mov
nop
leave
nop
jmp
cmpsl
loop
add
add
push
iret
push
push
mov
xchg
ret
cwtl
add
push
adc
movzwl
clc
repnz
nop
cld
jae
mov
pop
push
push
mov
xchg
ret
add
popl
arpl
test
push
mov
nop
leave
nop
jmp
add
add
xchg
pop
push
mov
xchg
ret
dec
add
push
lret
jnp
outsb
sub
and
push
mov
nop
leave
nop
jmp
add
mov
nop
nop
cld
jae
enter
int
cwtl
lods
add
push
mov
xchg
ret
mov
in
add
aam
ret
mov
clc
repnz
nop
cld
jae
push
mov
jle
xchg
xor
push
mov
xchg
ret
mov
mov
add
clc
repnz
nop
cld
jae
add
add
lods
xchg
mov
clc
repnz
nop
cld
jae
xor
and
sbb
das
inc
push
mov
xchg
ret
add
movsb
push
add
repnz
nop
cld
jae
and
lds
add
add
clc
repnz
nop
cld
jae
loop
add
cmp
push
mov
nop
leave
nop
jmp
sub
jge
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
or
add
add
clc
repnz
nop
cld
jae
add
mov
xor
daa
popa
clc
repnz
nop
cld
jae
cmpsl
add
sti
add
add
clc
pop
mov
clc
repnz
nop
cld
jae
in
testl
add
addl
mov
mov
rclb
xlat
xchg
inc
add
dec
mov
add
cwtl
add
scas
and
repnz
nop
cld
jae
add
cwtl
or
mov
and
push
ja
clc
repnz
nop
cld
jae
cmpsl
cmpl
cmp
nop
nop
cld
jae
add
cmp
repnz
nop
cld
jae
jnp
add
push
add
xor
push
mov
nop
leave
nop
jmp
stos
and
lea
add
mov
push
mov
xchg
ret
mov
add
jge
fists
in
nop
leave
nop
jmp
add
jnp
add
in
sub
or
mov
xchg
ret
add
aam
lret
add
pusha
pushl
clc
repnz
nop
cld
jae
cwtl
ret
add
call
jmp
add
mov
add
sub
add
add
mov
mov
test
out
clc
repnz
nop
cld
jae
and
inc
adc
repnz
nop
cld
jae
add
add
push
scas
pusha
add
sub
repnz
nop
cld
jae
xor
add
imul
ret
add
add
add
lea
stc
mov
clc
repnz
nop
cld
jae
add
cmp
pusha
loopne
mov
jb
repnz
nop
cld
jae
mov
add
inc
nop
cmpsb
inc
sbb
push
mov
nop
leave
nop
jmp
popf
aam
popf
cmpsl
add
add
nop
cld
jae
cli
mov
and
call
clc
repnz
nop
cld
jae
add
inc
adc
mov
xchg
ret
add
add
nop
nop
cld
jae
add
lea
gs
clc
repnz
nop
cld
jae
push
add
cmp
and
cwtl
mov
repnz
nop
cld
jae
add
pop
xor
clc
repnz
nop
cld
jae
add
add
subl
push
mov
xchg
ret
add
out
jl
xor
clc
repnz
nop
cld
jae
or
add
movzwl
clc
repnz
nop
cld
jae
add
add
adc
push
imul
nop
leave
nop
jmp
lods
push
mov
fcoml
rclb
in
nop
leave
nop
jmp
testl
sti
insb
add
add
cmp
push
mov
nop
leave
nop
jmp
add
roll
add
loopne
mov
clc
repnz
nop
cld
jae
add
cwtl
add
add
jp
pushf
mov
scas
add
push
push
mov
nop
leave
nop
jmp
lret
add
mov
cli
or
repz
mov
nop
leave
nop
jmp
add
add
loop
jns
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
or
mov
xchg
ret
add
testl
clc
repnz
nop
cld
jae
mov
add
div
sar
repnz
nop
cld
jae
add
sub
pop
pusha
push
mov
xchg
ret
arpl
add
aad
test
sar
clc
repnz
nop
cld
jae
loop
sub
ret
push
mov
nop
leave
nop
jmp
mov
push
lds
clc
or
rcrb
xor
repnz
nop
cld
jae
add
enter
mov
add
add
add
xor
add
call
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
or
cmpsl
arpl
movsb
shlb
push
mov
nop
leave
nop
jmp
push
testl
fstps
nop
cld
jae
enter
add
mov
mov
xchg
ret
mov
cli
add
xor
pop
push
mov
nop
leave
nop
jmp
movsb
mov
gs
lods
sub
inc
in
repz
repnz
nop
cld
jae
add
fiaddl
add
add
nop
cld
jae
add
dec
mov
cmpw
clc
repnz
nop
cld
jae
add
cmpsl
movsl
and
cmp
in
nop
leave
nop
jmp
cmpsl
testl
incl
add
repnz
nop
cld
jae
push
add
sbb
mov
push
mov
xchg
ret
push
mov
or
cli
push
fistpl
clc
repnz
nop
cld
jae
add
sti
mov
xor
push
mov
xchg
ret
cwtl
mov
loop
add
lods
stos
inc
and
dec
jno
sbb
push
mov
nop
leave
nop
jmp
add
fld1
clc
repnz
nop
cld
jae
add
lret
lret
and
cmpl
push
mov
nop
leave
nop
jmp
add
lea
dec
add
xlat
pop
push
mov
xchg
ret
add
movsl
sti
add
add
add
enter
nop
cld
jae
xor
add
loop
dec
clc
ret
call
clc
repnz
nop
cld
jae
add
lea
sbb
repnz
nop
cld
jae
fiaddl
add
cmpsl
or
sub
push
mov
nop
leave
nop
jmp
sub
push
sub
test
in
call
in
nop
leave
nop
jmp
add
push
mov
xchg
ret
cmpsl
add
lods
add
lods
push
mov
xchg
ret
add
cmp
and
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
or
add
fld1
push
mov
nop
leave
nop
jmp
mov
mov
mov
and
clc
repnz
nop
cld
jae
lods
add
les
clc
repnz
nop
cld
jae
add
add
add
loopne
mov
rcrb
mov
nop
leave
nop
jmp
add
cli
cmp
lret
rcl
clc
repnz
nop
cld
jae
mov
mov
mov
push
mov
xchg
ret
aam
lods
lea
add
sub
sarb
add
mov
stos
add
repnz
nop
cld
jae
sti
lds
fiaddl
notl
or
loopne
cld
push
mov
xchg
ret
add
int
push
enter
repnz
nop
cld
jae
or
add
push
add
mov
loopne
ret
fistpl
jmp
cmp
movsl
sub
push
add
push
add
dec
push
mov
xchg
ret
mov
mov
add
mov
clc
repnz
nop
cld
jae
add
add
andl
leave
nop
jmp
add
add
add
arpl
xor
inc
add
add
add
xor
mov
nop
nop
cld
jae
add
add
or
mov
add
in
int3
add
inc
mov
pop
mov
cmc
dec
dec
jp
or
sbb
lahf
dec
inc
mov
inc
jmp
aam
loopne
xchg
dec
lods
lcall
rolb
mov
rolb
stc
pop
jge
imul
sahf
push
cli
sub
and
loopne
dec
push
pushf
inc
hlt
je
mov
and
cmpsb
and
ss
pop
seto
rol
and
movsb
loopne
push
jmp
nop
xchg
aad
mov
scas
inc
inc
jecxz
inc
int
and
icebp
add
dec
and
aas
ret
stos
notl
xchg
enter
cmp
daa
popa
pop
xchg
xchg
push
mov
lret
aam
scas
sbb
mov
dec
xchg
leave
and
mov
sub
xchg
pusha
shrb
subb
pusha
rorb
pusha
mov
inc
xchg
jg
mov
mov
push
out
mov
mov
mov
cmpb
lcall
mov
mov
test
mov
test
pusha
push
clc
rolb
into
sbb
and
xchg
nop
mov
rcll
out
js
shl
mov
int3
xchg
jbe
lock
push
pop
cmp
push
and
out
push
mov
mov
mov
ret
scas
mov
or
sahf
jle
fs
jnp
pop
jb
cmp
adc
push
andb
data16
js
pop
add
and
and
fs
ja
daa
negb
mov
lret
adc
mov
xor
stc
push
push
sbb
aaa
mov
cltd
ss
mov
push
in
int
cli
scas
pusha
sbb
push
dec
in
out
loope
sub
lret
mov
fs
cmp
add
xchg
xlat
push
ret
ret
cmp
xor
out
lret
sarb
das
inc
adc
aad
andb
jle
ljmp
loopne
mov
loopne
mov
imul
lcall
sbb
push
sub
fwait
mov
push
leave
mov
xor
movsb
inc
loopne
jbe
lods
mov
repnz
or
and
dec
repnz
or
mov
loopne
pop
lods
sub
rolb
push
loopne
test
and
adc
dec
movsb
rolb
fiadds
repnz
dec
ret
mov
inc
xchg
scas
into
lock
jmp
xor
out
lcall
sub
and
mov
or
adc
push
rolb
call
rcrb
dec
aam
gs
pusha
adc
and
or
pusha
ret
pushf
cltd
jg
hlt
in
out
cwtl
sbb
mov
test
pop
into
movsb
shl
cmp
addb
rolb
loope
xlat
xlat
mov
jb
scas
loopne
idivb
enter
ret
loopne
mov
push
outsl
push
fcompl
sub
sbb
add
adc
xchg
lret
add
jp
addb
jns
dec
lea
sbb
xorb
in
insl
fidivrs
lods
addb
mov
in
push
cwtl
rorb
andb
fs
add
cmpsl
xlat
in
mov
loopne
mov
jmp
imul
jnp
cmc
repnz
sub
and
xchg
jecxz
sub
mov
mov
pusha
rcrb
pusha
adc
stc
in
jnp
mov
inc
sbb
lock
jle
mov
data16
outsb
xor
sub
pop
insb
xor
inc
push
dec
mov
mov
into
dec
das
add
addb
popa
inc
sbb
add
jecxz
mov
adc
insb
sub
inc
addr16
pop
push
daa
xchg
mov
enter
xorb
rolb
rolb
ret
fldenv
sbb
test
cmpsb
loopne
push
jnp
int3
cmp
jbe
ds
repz
andb
sub
clc
sub
loopne
decl
jg
ja
sti
cmp
mov
flds
pusha
pusha
arpl
shlb
mov
add
lea
jl
add
shll
mov
orl
in
int3
sbb
mov
inc
ljmp
push
popf
lcall
or
loopne
outsl
sbb
mov
ds
clc
jnp
jbe
sahf
daa
les
test
addb
mov
and
add
addb
pusha
subb
pop
nop
or
mov
jae
jmp
add
cmc
push
lahf
or
add
js
push
insl
inc
enter
subl
andb
and
arpl
sub
popa
xchg
shlb
mov
rcrb
je
xchg
pop
jmp
cmp
and
add
or
and
cmpsl
fnstsw
pop
addb
sub
shl
ljmp
lcall
out
mov
fwait
sbb
insl
lods
pusha
add
ss
mov
sbb
or
push
shlb
jl
pop
mov
out
mov
rclb
pusha
jmp
pusha
loopne
xchg
inc
mov
pusha
xchg
call
add
xor
dec
in
mov
cld
pop
in
pop
movsl
add
loopne
xor
sbb
jo
push
rcrl
mov
addb
xchg
mov
ds
inc
mov
nop
fs
jne
add
pop
movsl
in
sub
jl
ljmp
call
pusha
loopne
push
leave
mov
inc
cmp
pop
test
hlt
mov
fldcw
sbb
xlat
jbe
mov
mov
dec
outsb
dec
pop
jecxz
dec
pop
bound
mov
jno
or
add
mov
add
fcoms
addr16
aas
jp
mov
rolb
add
je
ficoms
dec
cltd
adc
mov
xchg
les
mov
pop
xchg
or
and
ds
addb
andb
cmpsl
movsb
and
loopne
cmp
outsl
scas
je
inc
imull
loopne
xor
mov
mov
pushf
push
shlb
and
inc
aam
lahf
mov
lods
lahf
xor
mov
insb
and
pop
das
sub
pusha
or
loopne
push
shl
add
rolb
mov
addb
and
xchg
imul
dec
jp
int3
sub
cmp
and
add
ret
cld
cld
push
clc
movsb
inc
pusha
xlat
repnz
popl
inc
pop
jmp
sbb
add
lret
adc
clc
loopne
addb
loope
xor
inc
and
sub
inc
out
jns
push
iret
cmp
sub
inc
adc
test
loopne
jb
sbb
pop
cmc
imul
popa
rcll
add
xlat
cmp
jge
mov
icebp
sub
out
arpl
add
loopne
add
sbb
aaa
iret
out
pop
mov
dec
xlat
daa
and
test
add
loopne
xchg
cld
ds
push
aas
xor
fsubl
add
jno
cmpsl
mov
or
and
inc
hlt
adc
out
outsb
pop
in
ret
cmp
ret
test
add
rol
fiadds
stos
andb
sbb
iret
dec
xor
inc
inc
push
inc
xchg
xchg
movsb
mov
mov
pusha
xchg
jle
loopne
mov
inc
push
clc
neg
sbb
mov
hlt
add
loopne
fidivl
loopne
jns
pop
ficompl
cli
out
mov
cmpsb
pusha
rcrb
lods
rolb
cltd
cmp
pusha
rclb
adc
sub
loop
adc
sarl
lahf
leave
hlt
pop
scas
and
shl
cs
aam
push
in
push
inc
mov
and
push
dec
and
subb
pop
and
test
cmpb
fs
mov
add
cmp
pusha
and
loopne
push
lods
shlb
scas
loopne
xor
sub
ret
jns
inc
loopne
mov
and
adc
cmp
mov
out
add
and
xor
fiaddl
ja
scas
cmpsb
inc
add
in
mov
add
in
hlt
jae
shl
out
addb
mov
jns
jne
mov
pop
outsb
pop
addr16
inc
sahf
lock
jp
and
mov
into
push
lods
mov
inc
pop
push
fmull
es
mov
push
andb
lock
mov
mov
mov
and
push
and
sahf
mov
inc
dec
sub
inc
xor
fstpt
push
stos
and
jnp
dec
out
inc
mov
sbbb
mov
outsl
aad
loop
inc
inc
dec
inc
pop
xor
pop
out
loopne
leave
mov
add
jns
repnz
in
js
dec
les
jnp
test
mov
decl
out
xor
enter
test
push
adc
notb
lock
jp
push
scas
mov
aaa
mov
and
inc
mov
fadd
and
mov
add
add
jge
mov
inc
lock
addr16
xchg
insl
mov
jno
mov
test
pusha
out
and
xchg
dec
jmp
std
mov
mov
mov
sahf
stc
ficomps
mov
fnstcw
add
jae
xchg
sbb
cli
insb
inc
scas
cwtl
sbb
adc
lret
pusha
cli
ljmp
inc
andb
inc
pop
fstps
loopne
repz
inc
inc
sbb
fsubrs
fwait
or
rol
dec
cld
and
inc
add
fwait
dec
lret
std
add
mov
inc
and
dec
and
and
loope
icebp
jbe
movups
aaa
jp
xchg
xchg
xchg
loopne
push
addb
and
sarb
jnp
inc
pop
cwtl
test
loopne
cltd
js
data16
adc
mov
loopne
mov
ja
in
xchg
mov
loopne,pt
shlb
in
push
ds
mov
mov
xchg
mov
pushf
repnz
cmp
loope
ret
and
inc
out
mov
inc
shlb
mov
int3
dec
cmp
pusha
push
stos
pusha
add
daa
loop
in
dec
imul
insl
iret
add
dec
sbb
cs
loopne
push
pop
sbb
lret
mov
push
jnp
loop
jnp
cmp
out
and
sbb
pop
sbb
mov
add
jp
mov
inc
ljmp
mov
rol
and
inc
and
loopne
sub
mov
rclb
ds
cmpsl
jle
ljmp
addl
cld
and
loopne
adc
mov
subl
add
jp
int3
pop
pop
xor
ret
mov
xorb
cmpsl
lret
lahf
cmpsb
loopne
add
sahf
and
pop
cltd
fdivrl
pusha
fiaddl
addb
es
xchg
lds
rolb
cld
xchg
fdivrl
pusha
fadd
imul
lahf
sub
stos
cwtl
mov
xor
roll
xchg
into
cmp
lods
test
cmpsl
dec
mov
loopne
push
pusha
mov
fwait
data16
adc
xchg
push
xchg
and
stc
call
data16
mov
mov
sbb
fdivs
and
xor
arpl
inc
push
icebp
movsb
pusha
pusha
cli
jnp
mov
sar
lods
mov
cmp
arpl
push
aad
add
inc
pusha
sub
push
mov
pusha
sbb
mov
jo
push
andb
aad
jb
std
sbb
lds
push
jns
mov
fisttpll
push
imul
addb
aam
pusha
inc
cmp
pusha
add
stc
dec
mov
push
shll
and
inc
push
in
iret
and
hlt
daa
idivl
mov
inc
jae
and
pusha
sbbb
pushl
and
in
test
and
jne
lret
adc
jno
jno
mov
sarb
sti
shrb
pop
mov
loop
ds
dec
imul
fmull
int
jle
jmp
and
insb
ss
mov
xchg
shl
mov
fnstcw
sbb
cmp
sub
inc
pop
jno
xlat
pop
push
cmc
and
sub
xor
shlb
loopne
and
test
xchg
pusha
and
shl
aad
test
mov
and
loopne
sarl
and
or
leave
push
pusha
pusha
pop
dec
mov
rolb
add
xchg
inc
rcll
or
adc
daa
sub
jmp
inc
mov
adc
stos
negl
loopne
and
mov
mov
std
jg
jne
cli
stos
sub
adc
js
ja
out
xchg
aam
and
fmull
adc
pop
push
add
add
mov
jb
add
sub
mov
push
add
and
sub
add
addr16
xchg
push
leave
das
push
inc
inc
adc
sti
jbe
add
add
lds
or
push
xchg
pop
inc
jns
rolb
add
pop
insb
sti
lcall
sub
pusha
popf
mov
add
jmp
data16
in
push
es
xchg
shlb
and
and
daa
add
rolb
movsb
add
mov
xor
xor
push
inc
stos
mov
inc
adc
or
clc
bound
int3
hlt
movsb
addb
pop
mov
push
lahf
into
add
cwtl
inc
push
stc
dec
adc
xchg
nop
imul
addb
mov
loopne,pn
or
sub
loopne
loopne
cmpl
and
aam
and
fs
inc
adc
push
jbe
out
loopne
cmpsl
shrb
xchg
push
addl
or
aad
and
xchg
scas
shr
rolb
mov
rol
dec
repz
jnp
dec
lds
fstpl
dec
sbb
fbld
xchg
mov
xorl
cmpb
bound
inc
mov
mov
mov
sbb
inc
mov
inc
xchg
sbbb
addb
push
ss
insb
inc
test
mov
loope
add
inc
and
pusha
add
jmp
ja
testb
jo
and
insb
mov
push
loopne
xchg
inc
js
movsb
pusha
sarb
loopne
mov
lahf
jle
lahf
push
out
fildl
pusha
loopne
mov
fmull
and
leave
adc
nop
mov
and
or
mov
ret
jecxz
inc
adc
cmp
sbb
push
subl
pusha
pusha
mull
sbb
xchg
sub
push
fists
shll
mov
aad
mov
mov
mov
rolb
dec
test
ja
push
sbb
pusha
out
mov
fwait
push
rcll
xchg
iret
inc
adc
fsubs
int
out
inc
and
stos
movsl
repz
push
mov
push
jb
jl
xor
cmp
fstps
add
scas
mov
out
arpl
xchg
imul
subb
dec
cmp
pop
dec
jecxz
cli
mov
andb
lock
cmc
in
loopne
and
xchg
fldenv
pusha
xor
ret
add
adcb
or
mul
mov
shrb
ret
xlat
push
inc
loopne
mov
dec
daa
mov
inc
shr
or
inc
rcrl
lret
rcll
pop
push
and
andb
cmp
mov
outsb
vrcpps
mov
cmp
pop
jae
lcall
add
shrb
mov
dec
pop
push
aas
ret
adc
and
add
andb
xchg
movsb
mov
popa
outsl
rcll
or
mov
shlb
repz
scas
fdivl
and
rclb
loopne
inc
repnz
jecxz
arpl
inc
in
or
rolb
inc
loopne
mov
loopne
push
fdivrp
xchg
div
scas
ret
and
gs
add
fists
sub
and
push
inc
pusha
sub
cs
loopne
addb
and
jo
add
into
inc
and
inc
jle
stos
addb
xor
and
in
mov
jmp
sbb
clc
xor
into
and
adc
daa
pop
pop
push
shll
pusha
pusha
mov
loopne
ds
adc
sarb
loopne
std
xchg
rclb
xchg
mov
adc
sarl
ja
mov
icebp
fs
call
and
roll
andb
ljmp
inc
loop
and
je
hlt
and
cmpsb
loopne
divps
ret
inc
add
in
addr16
das
stos
lahf
fwait
jo
sbb
aad
flds
pop
dec
or
shrb
dec
jae
pop
dec
test
rcrb
cltd
daa
fs
mov
add
jo
push
ja
cmc
in
xchg
scas
or
aad
and
xchg
popf
sbb
jge
daa
xor
xchg
mov
push
pop
xor
mov
adcl
out
jbe
insb
xorl
ja
push
fstl
or
mov
and
inc
mov
mov
sbb
pusha
lret
jp
sub
adc
mov
addr16
dec
xchg
add
daa
pop
ret
sub
add
adc
dec
mull
push
cli
cmpsl
add
shll
and
repz
cwtl
xchg
movsb
add
cmc
jg
sar
das
imul
push
sub
fnstcw
add
daa
jbe
add
loopne
leave
mov
xchg
dec
idiv
jge
inc
sbb
pop
mov
and
push
add
ljmp
aas
sbb
dec
in
xor
andb
and
outsl
mov
lea
adc
add
sbb
add
pusha
mov
xchg
mov
insl
jnp
ret
imul
or
and
pusha
loopne
xchg
dec
xchg
sub
add
and
mov
lods
adc
push
std
dec
mov
jns
rolb
andb
repnz
xchg
inc
xlat
mov
cmpsl
aad
pusha
mov
dec
adc
add
mov
jmp
in
ja
call
dec
outsb
xor
mov
and
loopne
out
xchg
lds
into
lock
and
add
insl
popf
clc
sbb
sub
fcmovu
adc
jae
cmpsb
loopne
sbb
pusha
adcb
mov
test
lock
out
xlat
fidivrs
arpl
shrl
lahf
rcrb
sarl
xchg
pop
sub
sbb
or
and
fstl
lock
div
test
rcrb
andb
gs
sbb
sub
loopne
shlb
lds
inc
mov
lods
push
inc
add
push
or
jle
shlb
mov
push
inc
mov
orb
push
dec
fstpl
inc
push
addb
add
out
rcrb
cwtl
and
test
xor
adc
jmp
add
fsubrs
adc
mov
or
rcr
ficoms
pop
add
push
mov
icebp
jecxz
jb
jg
jae
sub
dec
sbb
mov
mov
inc
loopne
iret
addr16
sbb
mov
shll
xchg
jnp
jmp
je
in
sub
fstpl
ja
and
mov
pusha
rclw
test
in
pusha
inc
pop
push
jns
lock
in
cmp
std
jle
sbb
stos
shl
xor
scas
and
push
fs
test
mov
fiaddl
inc
mov
inc
cmp
push
jge
and
mov
shlb
inc
add
push
leave
movl
mov
mov
inc
fdiv
pushf
subl
adc
std
and
add
pop
mov
andb
lret
xlat
je
les
pop
outsl
lock
daa
in
sahf
mov
dec
dec
aas
sub
loopne
mov
mov
push
mov
dec
cmp
loopne
inc
pusha
fmuls
push
pop
dec
mov
mov
mov
pusha
sub
pusha
enter
imul
jno
outsl
loop
mov
js
sahf
addr16
iret
sub
subb
inc
jg
aaa
xor
lds
lds
rcrb
mov
gs
jae
in
mov
inc
push
inc
add
sub
jns
shl
pusha
dec
xor
jno
jmp
jo
in
sbb
push
insb
jns
fwait
rcll
mov
rolb
outsb
and
shrb
dec
mov
rcl
movsb
and
test
and
call
xchg
mov
dec
fmuls
loopne
xchg
aam
pusha
inc
and
and
add
stc
imul
lods
ret
xchg
cltd
je
add
mov
test
das
push
arpl
cmp
and
add
inc
out
out
scas
mov
fcomps
dec
loop
xchg
and
ja
leave
ficoml
xchg
xor
or
into
pop
add
paddw
out
adc
xchg
and
jp
je
add
xor
or
pusha
repz
je
shlb
add
inc
inc
outsb
xchg
rol
jecxz
enter
mov
add
rcr
mov
push
mov
mov
mov
cmp
mov
xchg
jno
nop
adc
sysenter
jg
addb
hlt
jmp
and
loopne
lods
test
mov
or
inc
sub
sbbb
jo
cmp
push
ja
int
loop
or
imull
andb
jl
movsb
pusha
loopne
int3
outsb
adc
lods
add
loopne
inc
xchg
lahf
add
cmpb
leave
ret
jo
cmp
mov
add
cltd
out
adc
push
jg
add
pusha
add
sub
loopne
pop
in
cmp
jge
push
push
bound
sbb
xor
mov
out
dec
add
add
pusha
arpl
cwtl
mov
rolb
push
test
rcrb
rclb
add
sub
orb
sub
shlb
add
dec
pop
lret
pusha
mov
mov
pop
int
test
jmp
bound
and
loop
ss
xor
adc
jl
mov
shlb
shlb
inc
xor
and
adc
sub
fisttpl
shl
test
add
mov
add
shl
pusha
andb
sub
inc
int
ret
sub
ds
jnp
mov
or
pop
add
stc
faddl
shrb
iret
push
ss
add
add
xchg
in
sbb
inc
xor
and
mov
insl
dec
push
repnz
pop
outsb
jge
mov
xchg
mov
cmpb
pop
push
fstl
or
mov
xchg
in
cmpsb
inc
loopne
pushf
out
fwait
clc
xchg
xchg
leave
jmp
in
mov
aad
or
mov
pop
and
imul
mov
lret
xchg
cmp
mov
and
sti
imul
xchg
cmp
lods
add
or
fidivrl
adc
sub
push
clc
mov
mov
inc
test
loopne
addb
ficomps
ljmp
adc
push
fadd
adc
cmp
xor
sub
into
sbb
int
and
inc
clc
test
orb
xlat
aam
dec
push
inc
sahf
mov
add
push
imulb
je
mov
shlb
movsb
inc
rcrb
arpl
fidivl
les
rolb
test
add
inc
sbb
or
out
sbb
out
jl
push
pop
and
sbbb
rolb
std
xchg
movsl
loope
add
rol
sbb
and
clc
out
xor
pop
mov
cmp
and
sbb
leave
stos
mov
jecxz
ja
das
in
fcoml
icebp
pop
insb
sub
mov
dec
roll
pusha
mov
push
push
loopne
and
and
pusha
mov
pop
push
push
and
jmp
push
clc
jnp
pusha
shl
aas
pop
in
icebp
out
loopne
pusha
mov
mov
cmp
inc
stos
rolb
inc
enter
add
cmp
fwait
jmp
pop
clc
sahf
lods
push
add
lcall
mov
jne
inc
jmp
pop
ljmp
jp
pusha
and
movsl
xchg
mov
testl
inc
loopne
dec
loopne
and
mov
dec
fildl
sbb
mov
stos
loopne
mov
mov
test
shll
pop
sub
mov
add
pusha
and
das
arpl
mov
loopne
in
arpl
insl
mov
sbb
cmp
call
mov
push
inc
inc
ja
insl
cmp
cmpsl
pop
psubusb
movsb
and
inc
daa
mov
mov
addb
add
push
cld
cmp
push
pop
push
inc
xchg
push
add
enter
mov
pop
jno
aad
xor
add
cmc
xchg
jns
xlat
dec
cmpsl
lods
mov
clc
xor
add
mov
inc
sbbb
and
imul
mov
bound
insb
mov
inc
mov
inc
ret
int
test
sbb
call
jge
fs
ja
andb
lds
jbe
outsb
add
cmpsl
ja
imul
mov
jnp
pop
inc
out
rorb
and
inc
inc
mov
stos
mov
add
jmp
push
pop
mov
je
inc
sub
adc
mov
cmp
sbb
rclb
add
sti
mov
adc
and
shll
rcll
mov
inc
inc
push
jns
or
pushf
sbb
icebp
sub
shr
xlat
lds
lret
enter
dec
push
xor
push
stc
and
ror
push
inc
fbstp
addb
mov
mov
sbb
pusha
shrb
loop
push
push
pusha
and
add
popa
sti
daa
xchg
pop
pop
dec
outsl
xor
pop
xchg
outsb
outsb
lret
or
and
add
loopne
test
and
push
repz
mov
dec
and
push
dec
in
sti
mov
jb
xlat
rorl
pusha
inc
and
mov
ljmp
call
mov
inc
fnstsw
and
lea
jae
adc
sbb
loop
rorb
test
jle
aaa
and
sahf
push
pop
out
daa
mov
hlt
sahf
mov
xchg
inc
mov
push
add
inc
jmp
lahf
das
imul
test
ds
fidivrs
sbb
stos
shrb
and
push
in
xor
xor
addb
sbb
loopne
mov
push
cmp
inc
shlb
shlb
out
icebp
popa
dec
push
in
out
and
rclb
popf
jle
addb
addl
sbb
add
mov
loopne
and
repnz
movsb
pusha
and
sub
sbbb
mov
loopne
lods
xchg
mov
fimull
mov
adc
dec
cmp
fs
faddl
shlb
adc
out
inc
loopne
aaa
mov
xchg
cmp
sbb
adc
sub
dec
fmull
add
mov
ljmp
mov
push
std
mov
jmp
inc
mov
addb
add
add
dec
ret
and
inc
rcr
inc
stos
inc
inc
stos
outsl
rorl
addb
imul
icebp
add
loopne
sub
mov
loop
std
pop
stos
and
adc
and
cltd
fnstcw
mov
hlt
dec
insl
fldcw
bound
mov
clc
and
cld
adc
arpl
jne
loopne
xlat
mulb
xchg
pushf
pushf
jbe
adc
loopne
add
cmpsl
fdivl
and
add
ss
hlt
jno
shl
data16
xchg
pop
cmp
dec
push
mov
mov
test
add
sub
sbb
dec
insb
sub
loopne
add
mov
cmp
leave
or
shr
outsb
ret
pop
mov
dec
lret
jl
loopne
fstp
cmp
rcr
daa
and
loopne
outsb
jae
ret
inc
loopne
inc
mov
pop
fdivrl
mov
cmc
out
lods
cmc
xchg
lock
jge
mov
aaa
sbb
pop
das
pop
les
fcmovbe
push
xchg
jg
lahf
xor
jo
inc
mov
inc
mov
pop
sbb
adcb
add
jmp
pusha
inc
imul
dec
jns
lret
sub
mov
jbe
push
fistpll
aad
push
pop
push
addb
inc
repz
fwait
imul
mov
cmpsl
pop
lods
lods
icebp
dec
clc
andb
cmp
add
rolb
sub
xchg
cmp
cltd
iret
dec
xchg
sub
or
dec
inc
aad
and
xor
sbb
lock
aad
inc
sub
pusha
inc
pop
mov
outsl
scas
pusha
ret
and
fcomps
cli
addb
jo
cs
pop
pop
add
ds
lret
pusha
add
andb
repz
push
inc
jl
inc
jno
push
clc
or
pusha
jle
sbb
sahf
inc
lahf
mov
inc
xchg
cmp
rolb
push
jae
sub
pusha
out
sub
push
inc
inc
dec
inc
testl
insl
cmp
inc
lds
pop
or
xchg
rol
pusha
rclb
xor
or
je
adc
and
outsl
lret
and
orb
ret
pop
pop
cmc
jmp
add
add
xor
shlb
cwtl
jae
xor
jbe
or
pusha
xor
sbb
mov
andb
test
outsl
insb
stc
pop
mov
addr16
jb
imul
mov
adcb
ja
pop
in
adc
and
imul
out
out
sahf
add
mov
pop
jb
sbb
lret
add
loopne
dec
xchg
ret
rorb
add
xchg
mov
and
or
out
fsubrl
cmc
mov
addr16
scas
rolb
mov
sbb
mov
scas
push
jle
xor
push
out
and
loopne
lods
sahf
jl
sbb
lods
int3
and
mov
and
cmp
and
andb
mov
loopne
mov
addl
movsl
xchg
adc
and
add
push
pusha
adc
imul
xchg
pop
loope
repnz
inc
mov
mov
repz
in
gs
mov
xor
mov
test
pop
adc
std
lret
push
jge
xchg
jl
andb
stos
pop
sbb
andb
inc
dec
sahf
cmp
jne
pop
sahf
xchg
add
add
mov
aam
xlat
jno
and
nop
lahf
fmul
mul
pop
repnz
addb
push
pop
sbb
aad
jle
adc
mov
or
in
adc
pusha
cmp
arpl
rol
jns
inc
shlb
lahf
pop
mov
xor
inc
jo
xchg
scas
imul
rolb
pusha
shlb
cmp
inc
rcrl
sbb
pusha
push
push
inc
mov
dec
pop
nop
popf
inc
repnz
icebp
mov
mov
fs
in
outsl
or
inc
fwait
into
dec
pcmpeqw
and
add
loopne
mov
and
inc
or
pop
scas
insb
lcall
or
aas
or
dec
ficompl
xchg
mov
shr
add
pushf
shll
scas
rolb
sahf
out
divb
mov
pop
hlt
sub
int3
mov
addb
mov
ljmp
pop
mov
xchg
push
test
and
mov
pop
das
mov
loopne
data16
and
enter
cwtl
xlat
jnp
mov
push
xor
pop
ja
lds
inc
and
shlb
mov
fnstenv
add
inc
sub
rol
scas
rolb
sub
and
mov
inc
fsqrt
xor
lods
inc
orb
mov
jb
mov
add
push
loopne
or
mov
xchg
push
icebp
iret
cmp
xchg
orl
mov
and
faddp
jbe
test
pusha
jns
iret
sbb
test
mov
add
inc
pushf
lahf
add
fld
int3
pushf
jb
jne
lahf
dec
pop
adc
or
pusha
clc
into
inc
add
or
mov
jns
sbb
inc
jae
mov
ret
cld
sub
pusha
gs
add
jo
and
and
je
clc
adc
pusha
pusha
mov
insl
cmp
mov
mov
add
addl
sbb
mov
loopne
mov
fcomip
jp
cmp
fwait
cmp
xchg
jecxz
stos
loopne
lcall
in
push
jnp
dec
mov
imul
push
lahf
push
mov
push
loopne
pushf
mov
outsl
int
shll
loopne
daa
loopne
mov
inc
xchg
adc
xchg
sbb
cmp
push
xchg
loopne
fsubrs
sub
testl
sbb
stos
push
mov
in
mov
or
les
push
jmp
mov
sub
add
sti
aad
push
movsb
andb
rolb
add
shl
out
shrl
ror
fidivrs
nop
lret
jmp
fcoml
inc
inc
jne
std
dec
mov
mov
pushf
shlb
out
stos
inc
inc
or
inc
xor
mov
dec
pop
loopne
or
xchg
add
rolb
shrb
out
add
orb
pop
repz
and
mov
das
push
ficoml
jp
add
add
mov
and
cmp
arpl
push
xchg
adc
dec
dec
mov
inc
dec
push
loopne
insb
ficoml
jne
and
add
mov
mov
stos
loope
inc
add
adc
mov
sbbb
push
adc
andb
and
push
lcall
push
add
add
or
inc
or
sets
cld
xchg
andb
movsb
loopne
sbb
daa
xlat
and
xchg
adc
in
or
rcrb
xchg
push
inc
jl
out
jne
fnsave
dec
pusha
mov
pop
fcoms
or
sub
es
rclb
mov
insl
inc
fwait
arpl
jecxz
inc
scas
pop
andb
and
inc
jp
cmp
inc
add
andb
mov
cmp
cmp
not
daa
or
mov
xchg
mov
inc
pusha
sub
loopne
jge
in
add
pop
push
xchg
sbb
rcrb
shlb
adcb
outsl
cmpsl
mov
dec
movsl
push
ficomps
jb
andb
cwtl
dec
xor
mov
pop
mov
sub
push
fnstenv
inc
loopne
push
xchg
insl
mov
leave
mov
loopne
daa
push
jns
push
fidivl
lcall
push
sti
pop
icebp
sarb
jo
std
xchg
scas
stc
mov
sti
pop
xor
outsb
mov
mov
shl
add
adc
add
xchg
add
sbb
jmp
cmp
lock
and
mov
add
jno
fsts
mov
test
inc
mov
mov
rolb
push
pop
push
in
xchg
adc
sbb
mov
and
add
or
push
repnz
scas
add
push
xchg
inc
sti
loop
mov
rcr
stos
inc
and
dec
pop
nop
inc
mov
and
jmp
xchg
add
loopne
loopne
inc
ja
push
stos
add
mov
add
mov
mov
fs
int3
push
sbb
loopne
into
cmp
pusha
cmp
add
ss
and
ja
fisubl
addb
insb
rorb
jp
jmp
inc
push
addr16
das
jle
popa
mov
arpl
pop
cmp
inc
ficompl
add
and
sub
aad
inc
notb
stos
rolb
pop
out
inc
and
rorb
mov
inc
xlat
adc
jg
stos
popf
popa
in
pusha
inc
les
adc
test
and
pusha
and
jp
divl
outsb
sbb
pusha
adcb
add
repnz
dec
shll
std
sub
xlat
ja
pop
std
mov
xor
and
pop
xor
dec
xor
adc
mov
mov
add
aas
ret
mov
sub
xor
jge
js
xor
cmpsb
and
scas
and
mov
addb
and
mov
sub
and
loope
mov
inc
sbb
sbb
inc
ret
mov
int
dec
rclb
inc
mov
ret
push
sub
loopne
pop
imul
dec
and
add
roll
fs
repnz
ja
ss
into
mov
rcrb
jbe
std
sub
rorb
sub
and
add
ljmp
push
add
add
adc
mov
push
pop
arpl
insl
add
push
mov
pusha
mov
in
mov
shl
pusha
and
das
sbb
fidivl
jl
loope
aam
aad
ds
and
pop
xor
lea
stos
push
adc
inc
notb
ljmp
mov
mov
lret
imul
xchg
enter
dec
mov
mov
cmp
pop
out
ss
xor
pusha
orb
adc
add
addb
stos
inc
add
add
mov
sub
push
iret
jne
xlat
sub
shlb
mov
jnp
and
fidivrl
xchg
sub
add
or
push
pop
cmp
and
inc
mov
mov
and
sbb
or
out
addb
sbb
push
adc
ja
hlt
push
sub
adc
fistpl
cmp
sub
clc
push
loopne
int
mov
ret
sub
scas
lcall
mov
inc
pop
divl
or
mov
stos
mov
and
inc
add
cmpb
inc
jns
loopne
inc
inc
pop
jmp
sbb
xor
movsl
jmp
or
pusha
jmp
fs
sbb
push
add
aam
cmp
mov
daa
shrb
andb
in
mov
negl
adc
ljmp
out
enter
addb
cmc
xchg
mov
and
xchg
add
and
aas
and
rol
shll
leave
adc
test
shlb
mov
and
shlb
loopne
sbb
lahf
xor
pop
dec
iret
dec
jns
jecxz
or
mov
out
mov
cmp
cmp
mov
and
jbe
lods
shlb
addb
dec
test
divl
ror
inc
pusha
ljmp
mov
loopne
jbe
and
adc
lahf
cltd
sub
xchg
ja
leave
pop
lods
and
mov
lahf
xchg
pop
pop
mov
dec
pop
hlt
mov
inc
xor
inc
rorb
pusha
shr
stos
pusha
add
in
adc
shlb
and
push
and
mov
inc
popa
pop
test
and
call
lods
loopne
and
mov
fisubrl
mov
outsb
xchg
pusha
pop
fmul
push
mov
xor
and
stos
fisubrs
pusha
or
cmc
sub
loopne
data16
inc
add
mov
fdivr
adc
push
addb
sub
cs
in
int
xchg
dec
or
mov
mov
addb
icebp
or
add
inc
into
xchg
adc
pusha
pusha
jne
loopne
test
inc
loope
sub
test
mov
mov
ret
stc
and
sbb
rol
jbe
inc
rclb
inc
xchg
std
push
fstps
xchg
or
pop
mov
or
je
add
inc
and
mov
push
jns
inc
lcall
icebp
jg
pop
jae
out
int3
mov
sti
xor
rorl
and
inc
jmp
cltd
sbb
xchg
jns
dec
lcall
filds
loopne
orl
sarl
inc
loopne
inc
adc
xchg
sbb
sub
sbbb
pusha
loopne
and
fistpl
cltd
lret
lret
rcrl
aam
push
aam
mov
lret
mov
jae
add
add
scas
mov
or
cmp
bnd
inc
jg
outsb
jg
addr16
cmp
mov
imul
aas
movsb
add
mov
aas
mov
mov
andb
popa
lods
push
add
pusha
idivb
add
call
xorb
inc
sbb
inc
push
sub
fdivrs
into
arpl
inc
add
clc
dec
js
cwtl
movsb
add
lret
add
mov
jl
sub
dec
popa
or
pusha
stos
add
dec
out
sbb
ja
mov
rolb
xor
lahf
cli
add
mov
dec
mov
mov
and
and
fbstp
cld
sbb
aad
adc
push
mov
add
int
lahf
pop
pop
mov
mov
imulb
out
sub
cmp
cmp
jno
xor
ljmp
pusha
outsl
pusha
mov
inc
fimuls
cmp
push
mov
and
les
sbb
sub
xor
sub
mov
mov
pusha
adc
mov
call
popa
andb
shlb
dec
mov
je
aad
rol
shll
jbe
in
sub
cmp
call
sub
lods
pusha
inc
testl
push
mov
inc
cs
lcall
idiv
ret
inc
ret
stc
int3
call
pop
dec
inc
mov
jecxz
loopne
push
push
dec
lcall
and
addb
out
mov
jecxz
daa
sub
lock
mov
and
sub
loopne
mov
sub
and
mov
ficoml
inc
or
rolb
mov
inc
stos
xor
xchg
imul
in
mov
sahf
cli
jl
pusha
pusha
ret
inc
push
mov
mov
inc
sbbb
add
mov
loopne
std
test
mov
arpl
and
movsb
and
and
pusha
mov
insb
out
in
shlb
mov
sbb
sbb
inc
loopne
out
dec
fildll
mov
and
popf
pushf
pushf
pusha
das
pop
or
rclb
enter
push
bound
lods
pusha
add
add
inc
ds
dec
roll
adc
xchg
inc
pusha
test
add
cmp
jmp
and
mov
pusha
ljmp
mov
mov
int3
or
loopne
jge
out
push
mov
inc
sbb
js
inc
jge
addb
call
inc
xor
sbb
scas
pusha
add
imul
loopne
popa
ret
sbb
add
add
jns
sbb
jno
jnp
mov
gs
sbb
mov
or
inc
inc
es
aad
pop
mov
mov
lahf
aam
jg
mov
pop
jo
push
aaa
stos
add
and
in
sbb
adc
and
int
add
pusha
mov
test
out
jg
leave
sub
ds
or
adc
int
cltd
sbb
inc
or
out
mov
sub
js
xorl
call
and
or
lahf
pop
std
icebp
iret
jnp
loopne
movsl
sub
sarb
ret
push
mov
inc
cltd
pop
inc
fimull
fisubl
mov
add
inc
pusha
sub
pusha
sub
pusha
cmp
loopne
xchg
adc
mov
and
jae
add
and
stos
cmpsl
sarb
add
ret
test
push
dec
xchg
xchg
fmuls
lret
int3
adc
or
add
mov
cmc
cmp
lahf
outsl
loopne
nop
jo
push
pop
movsl
adc
sbb
imul
sahf
cmp
mov
and
movzwl
add
roll
dec
sti
js
outsl
test
andb
xlat
lods
pop
dec
push
pop
daa
xor
pushf
cmp
enter
pusha
lea
adc
je
adc
inc
ret
inc
push
and
jmp
pop
xchg
cld
outsb
ds
mov
sub
loopne
pushf
add
pusha
nop
lret
add
sub
rolb
cli
add
je
lcall
loopne
rolb
orl
hlt
xor
loopne
fucomip
push
sub
loopne
ret
push
pushf
fwait
stc
mull
sbb
lcall
add
pop
popa
adc
loopne
movsl
mov
dec
lds
pusha
loopne
and
in
sarl
xchg
add
pusha
xor
adc
sbb
out
ret
jp
std
arpl
arpl
inc
dec
mov
xchg
pusha
pop
and
loopne
nop
and
shlb
inc
decb
inc
shlb
inc
int3
aam
mov
mov
add
cmpsb
rolb
jb
jbe
cmp
cmovg
xor
popa
ficoml
xchg
shll
and
xor
jg
pop
lds
outsl
push
add
call
xchg
lods
pop
and
andb
mov
in
cmp
mov
inc
pop
mov
call
xchg
jle
loopne
scas
and
fldcw
mov
add
mov
lcall
adc
enter
cwtl
fadds
cli
ret
mov
cmpsb
addb
rolb
push
and
pop
add
mov
pop
push
mov
aad
aam
adc
ret
sbb
stos
loopne
jbe
inc
cmp
inc
cmp
fcomp
mov
pusha
inc
xor
sbb
or
mov
nop
mov
loopne
je
movsb
inc
inc
jle
and
pusha
push
imul
mov
and
jle
xchg
lods
popa
bound
ljmp
daa
adcl
inc
mov
mov
shlb
inc
cwtl
inc
sub
xchg
rcrb
movsl
inc
sub
inc
bound
stos
inc
sub
shlb
mov
dec
iret
adc
mov
xchg
clc
mov
dec
inc
shlb
push
das
into
fwait
int3
xor
push
repnz
loopne
pop
gs
push
adc
add
jg
inc
arpl
fidivl
dec
lahf
loop
push
inc
inc
sub
out
leave
lret
or
arpl
mov
imul
push
mov
xchg
arpl
xchg
ja
lock
call
sub
and
int
ljmp
addb
ss
inc
iret
or
or
nop
imul
cmp
fcoml
sbb
imul
fsub
and
rolb
mov
cmp
sub
loopne
sbb
add
inc
scas
inc
add
jp
data16
dec
out
jge
cmp
or
add
inc
shlb
pusha
stos
ljmp
xor
mov
and
jno
dec
in
ds
inc
inc
push
xor
je
mov
loopne
bound
jl
outsl
xor
mov
pusha
sbb
mov
imul
push
adc
mov
orb
add
mov
mov
repz
add
fldl
ds
andb
jb
ror
loopne
inc
in
add
scas
mov
mov
stos
loopne
adc
fists
gs
xor
add
mov
jge
clc
mov
loopne
iret
push
xor
sahf
js
inc
sub
or
addb
pusha
loopne
and
xor
sti
cmpl
jnp
xor
and
icebp
mov
rclb
andb
mov
jnp
cltd
and
push
inc
inc
mov
dec
sub
movsb
add
cs
add
int3
imul
sub
ds
test
mov
dec
pop
mov
into
test
inc
add
pusha
loopne
inc
sub
testl
jnp
sub
xor
loope
int
push
add
mov
jmp
adc
gs
aas
fucom
dec
mov
shlb
xor
mov
mov
movsl
or
and
into
mov
insl
cmpsl
xor
clc
xlat
jb
fbstp
sub
sub
jge
or
loopne
lods
loopne
jns
xchg
sahf
mov
repz
movsb
inc
shlb
gs
imul
movsb
inc
sarb
repnz
and
mov
xchg
enter
cmp
sbb
into
iret
cmp
movsb
and
loopne
es
loopne
andb
jb
inc
mov
xor
mov
pusha
dec
orl
mov
int3
fs
popf
add
icebp
icebp
outsl
fdivl
aam
sub
and
or
mov
neg
popf
mov
sub
cmp
sub
rcrl
ret
mov
addl
fcmovb
cmp
push
out
sbbl
inc
loopne
arpl
imul
movsl
jmp
cmp
push
mov
adc
mov
xchg
cli
pop
adc
add
xchg
add
and
add
arpl
ljmp
bound
pusha
cmp
or
in
add
cld
push
push
shll
stos
add
pusha
fstpt
xor
adc
pusha
mov
nop
jnp
xor
pop
mov
cmp
lcall
pop
imulb
xor
mov
mov
inc
and
test
fwait
mov
inc
sub
addb
dec
mov
jne
push
xchg
rclb
inc
shufps
imul
xor
mov
cwtl
pushf
mov
in
frstor
add
cmp
call
xor
enter
sub
loopne
mov
outsl
in
ret
pushf
pop
jne
and
imulb
mov
pusha
call
xor
mov
add
inc
mov
fs
subb
and
out
aaa
add
sbb
add
fnstcw
loope
adc
jbe
ja
andb
jne
cltd
fsubrs
mov
adc
loopne
sub
rolb
pop
sub
xorb
pop
mov
and
mov
shl
cwtl
jns
and
ret
cmpsb
pusha
and
lds
imul
daa
dec
inc
mov
fsubrl
jge
jo
pop
bound
mov
rclb
test
and
js
add
and
inc
cmp
jne
fs
inc
lret
push
inc
mov
jg
popf
cmpsb
add
push
sbb
mov
inc
add
hlt
test
loopne
pop
xor
vmovsldup
and
and
jecxz
fsubs
rol
out
es
loopne
shlb
sarl
lock
add
and
sub
and
jno
std
loop
mov
mov
sbb
rolb
loopne
fstpl
sbb
add
sub
lret
cs
loopne
push
dec
mov
and
or
dec
imul
mov
dec
fistps
mov
dec
lahf
imul
xlat
or
out
jnp
mov
aas
fildll
xchg
dec
faddp
std
ret
inc
adc
jge
inc
mov
or
testl
fidivl
mov
shll
pop
stos
mov
or
shlb
add
and
test
loopne
pop
test
lcall
adc
ja
cmp
cmp
xchg
repz
inc
shlb
cmp
add
pop
mov
mov
pop
gs
push
shlb
and
xor
js
icebp
sub
loopne
lds
loopne
mov
lahf
sbb
pushf
pop
dec
rcr
add
cmp
popa
add
pusha
out
repz
shll
outsl
outsb
fwait
pusha
loopne
roll
xchg
xchg
fimuls
xchg
add
rcl
das
movsl
mov
push
pop
fiadds
adc
outsl
divl
push
pop
in
inc
jne
lea
push
fsubrs
xchg
jecxz
push
xor
sub
inc
movsl
lret
mov
add
lret
adc
pushl
jg
ret
cwtl
jle
mov
pop
lahf
xchg
mov
addb
cmp
lods
pusha
shl
pop
movsl
add
jno
push
push
sub
pop
push
fucomip
pop
pop
push
inc
pop
imul
loopne
enter
add
mov
daa
jbe
and
dec
sahf
xchg
cld
data16
scas
push
lret
ds
mov
pop
add
mov
push
scas
loopne
lret
mov
add
lret
loopne
inc
mov
inc
inc
mov
loopne
in
out
fdiv
jge
inc
fsts
fdivrs
pop
fs
xchg
mov
pusha
pusha
add
jo
sti
imul
xor
sbb
addb
fstpt
loopne
jne
mov
scas
out
jmp
test
pusha
pusha
daa
pop
xchg
xchg
insb
dec
pop
mov
daa
pop
sti
inc
xor
ss
dec
negb
stc
repnz
in
add
test
les
cmp
icebp
ds
out
std
adc
xchg
add
mov
shlb
lock
mov
cmpsl
xor
out
fmull
jl
add
sub
and
mov
shlb
rol
jae
add
mov
js
ja
add
outsl
sbb
adc
sub
incb
test
add
add
popa
mov
icebp
add
lahf
xor
inc
xorl
mov
mov
or
xlat
sbb
rolb
cmpl
mov
das
fisubl
andb
inc
sarl
fisttpll
int
loopne
xchg
pusha
icebp
xchg
pop
add
je
popf
pop
lret
repz
mov
mov
and
push
cltd
pop
sbb
cltd
stc
ds
pop
mov
cmp
aam
andb
xor
jnp
loopne
add
add
xchg
loopne
xchg
inc
addr16
jl
jle
pop
dec
jg
pop
or
xorb
xchg
jmp
je
push
pop
mov
pusha
and
cld
loop
or
mov
popa
jp
and
jle
cmp
mov
out
mov
or
push
xchg
and
jne
loop
xchg
or
and
test
xchg
pop
xor
or
aaa
insl
mov
and
jge
jo
dec
lods
mov
cmp
stos
add
inc
cltd
in
andl
pusha
andb
xor
ljmp
xor
les
add
ljmp
pop
and
xor
mov
jo
and
sub
add
loopne
out
out
add
pop
push
sbb
jp
or
mov
rcll
cwtl
movsl
clc
cmp
inc
pusha
in
loopne
inc
and
daa
sar
in
add
scas
pusha
mov
mov
lods
mov
and
pop
mov
es
mov
adcb
loopne
sub
loopne
or
add
mov
imul
inc
xor
mul
iret
incl
mov
and
and
cmpsl
pop
cmc
pop
dec
push
xchg
fisttpll
push
sbbl
and
movsl
or
shlb
adc
jne
lcall
lock
add
loopne
push
inc
sar
add
jmp
jb
test
nop
sub
cmc
mov
pop
push
inc
mov
shlb
loopne
inc
mov
dec
std
shll
mov
and
sbb
inc
inc
xor
loopne
scas
ret
jno
int
int
out
mov
pusha
and
loopne
loopne,pn
pop
aam
jbe
jl
mov
mov
push
daa
ds
test
xchg
push
and
jge
sub
inc
add
shlb
mov
pusha
inc
lds
sub
insb
mov
mov
or
jns
loope
clc
mov
pop
sqrtps
inc
lds
push
out
cmp
or
adc
sti
mov
lcall
rorb
and
inc
scas
lcall
fstpt
stos
add
scas
xor
mov
and
pop
dec
jbe
or
add
add
cltd
mov
ret
xchg
add
mov
mov
mov
and
incb
nop
stos
cli
cltd
xchg
push
mov
shl
daa
pop
add
push
mov
mov
shll
sbb
sbbl
addps
xorb
mov
inc
mov
rorb
ror
ret
arpl
xchg
lock
mov
add
jle
mov
dec
cli
push
incl
fcomps
call
sbb
in
push
xchg
pop
daa
js
inc
pop
mov
loopne
sub
cmc
jae
cmp
inc
out
out
dec
dec
push
pop
bound
dec
roll
cmp
and
das
sbb
cmp
push
shlb
out
aam
push
pusha
cmp
cli
pop
sbb
popa
xchg
and
pusha
xor
push
pushf
fnstcw
shll
aaa
cld
movsl
or
jmp
sub
rcl
inc
inc
cwtl
xchg
cli
lods
repnz
jmp
cmc
push
stos
pusha
mov
mov
mov
add
and
lcall
pop
insb
jge
add
int3
xor
sub
loopne
jno
dec
inc
dec
mov
and
outsb
push
das
dec
cmp
loop
inc
loope
nop
cmp
mov
mov
out
inc
lret
adc
cld
pop
into
mov
adc
mov
cmp
ret
sbb
mov
out
aam
iret
push
mov
into
inc
sub
and
andb
sarb
sbb
add
and
xor
mov
pop
xchg
stos
pusha
sbbb
cmp
sub
push
pusha
jge
cltd
test
inc
dec
mov
out
lds
andb
xorl
xor
lea
cmpsl
and
roll
sub
pop
sub
out
ror
fbstp
arpl
inc
add
ja
andb
cmp
xchg
rcrl
and
andb
ds
mov
inc
ss
mov
mov
leave
mov
dec
cmp
ja
sbb
movsl
mov
xorl
mov
stos
mov
bound
jg
insl
addb
or
inc
fcomps
call
rcrb
xchg
shlb
andb
or
mov
and
xchg
jbe
pop
stc
cmp
pop
jnp
pusha
rclb
inc
push
subl
jg
andb
sbb
je
push
outsl
xchg
jae
mov
cwtl
dec
bound
cmpsl
loop
add
jecxz
out
xor
out
mov
ja
iret
xchg
addr16
ljmp
add
add
mov
inc
aas
add
loopne
mov
insl
sahf
sub
and
aaa
dec
sbb
pop
add
sbb
clc
push
mov
push
inc
adc
shll
xchg
nop
and
add
fmuls
inc
insl
loope
xchg
dec
xchg
enter
lcall
cmp
imul
mov
notb
adc
in
addb
int3
jnp
or
addr16
insl
into
jbe
std
pop
pop
outsb
adc
and
inc
andb
imul
mov
adc
cmp
push
push
fdivrp
stc
fidivrl
sti
lods
in
and
mov
scas
loopne
ds
xchg
fistl
adc
loop
rolb
jle
adc
enter
push
cld
movsb
mov
push
dec
shlb
sarb
aaa
out
out
xor
inc
push
cmpsl
stos
pusha
and
mov
mov
sbb
hlt
clc
push
cmc
xchg
and
popa
test
lret
fadd
sub
fsub
mov
mov
sbb
add
imul
mov
aad
and
out
iret
sub
cmc
mov
dec
mov
loopne
in
pop
add
xor
ljmp
je
je
rol
add
add
inc
xchg
pop
cli
out
inc
shlb
scas
xchg
frstor
xor
ret
mov
add
pop
aaa
adc
cmp
stos
xchg
lret
rolb
dec
and
mov
loopne
add
mov
dec
sbb
nop
pushf
pop
filds
adc
xchg
js
les
sub
sti
fisttps
mov
mov
inc
stc
mov
jb
sub
dec
inc
in
lahf
adc
loopne
jns
mov
outsb
icebp
or
pusha
push
loope
mov
sti
jg
and
and
mov
fwait
add
xchg
push
mov
test
jns
xchg
add
add
mov
movsl
and
pusha
fcoml
lea
and
xor
lds
mov
fcomip
or
add
shl
les
andb
add
lcall
add
sbb
sbb
push
pusha
adcb
aas
js
int
pop
adc
addl
xchg
lods
mov
add
xor
xor
loopne
dec
pop
and
add
jmp
mov
jmp
lcall
sbb
jg
inc
imul
xchg
sarl
lods
mov
push
sub
add
mov
sub
rol
jne
add
fmul
aad
cmpsl
in
sub
jg
and
ds
sub
and
push
pop
mov
dec
sub
outsl
push
xor
inc
subb
mov
inc
jnp
cs
orb
sub
dec
add
loopne
mov
rol
dec
lret
dec
mov
push
es
rol
in
adc
addr16
incl
das
add
add
sub
xor
inc
mov
mov
sub
or
add
jle
pushf
sahf
xor
mov
push
imul
int3
xor
iret
jnp
jnp
add
push
xor
hlt
outsl
call
add
out
addr16
mov
and
mov
mov
loopne
cmp
adc
js
loop
add
jle
in
cwtl
dec
sbb
jp
sbb
rolb
inc
push
movsb
addb
outsb
stos
shl
mov
add
jg
pop
xchg
mov
cmp
add
jecxz
mov
leave
movsb
and
pop
sti
push
ret
ja
iret
inc
aaa
mov
jp
adc
es
and
rorb
mov
jle
popa
ret
mov
movsl
shl
push
mov
mov
pop
cli
in
rclb
aaa
mov
aad
test
inc
push
mov
sub
mov
jecxz
pusha
and
lret
and
and
shlb
inc
sarb
xchg
inc
loopne,pn
sahf
rorb
mov
imulb
imul
ds
imul
popa
cmpsb
and
sti
std
fisubrl
xor
push
popa
pushf
clc
aas
fisubrl
rcrb
and
inc
ja
fdivrs
mov
loopne
cwtl
data16
push
call
pusha
pusha
clc
mov
adc
dec
ficompl
fwait
jp
loopne
mov
mov
add
std
in
icebp
lock
jle
loopne
cmp
test
pusha
xlat
and
mov
fadds
add
and
mulb
xor
mov
jne
push
nop
pushf
cwtl
dec
adc
rolb
fwait
sub
mov
jo
adc
out
mov
or
rorb
sub
shl
mov
or
arpl
jecxz
mov
aas
jecxz
mov
add
cmp
and
jae
divb
add
add
test
mov
scas
rolb
xlat
mov
std
mov
pushf
mov
test
add
pop
mov
mov
xor
inc
outsb
lcall
push
mov
test
and
and
loopne
mov
or
cs
jecxz
std
lahf
fucomip
shrb
popa
add
stos
jnp
shl
or
inc
jg
jmp
loopne
dec
push
sbb
into
cwtd
mov
or
inc
fdivr
xor
fsubrs
shrb
lods
inc
andb
shlb
dec
cmp
adc
loopne
push
adc
add
sub
pusha
xchg
jg
add
push
and
data16
outsl
in
stos
loopne
je
cmp
dec
sbb
cld
pop
scas
adc
dec
mull
pusha
shlb
loopne
cwtl
push
jp
add
sahf
xchg
push
scas
pusha
mov
jle
xchg
or
test
and
stc
jns
mov
xor
mov
dec
add
pop
pop
push
andb
mov
pop
imull
loopne
cmpsb
add
jae
popa
vprotb
mov
call
lds
mov
mov
and
pop
mov
mov
cmp
jmp
inc
jno
push
clc
dec
jne
orl
pusha
lcall
jno
cmp
add
jne
cltd
jcxz
ss
push
inc
sarb
loopne
cwtl
in
pop
cmp
add
mov
and
mov
pop
cvtps2pi
add
cmpsl
cltd
and
and
and
adc
push
pusha
pusha
jmp
push
jb
jo
mov
jp
les
addb
sub
sti
fnstenv
add
pop
and
mov
pusha
shrb
andb
mov
test
insl
add
orb
negl
iret
daa
fildl
jnp
cmp
fisttps
sahf
pop
or
lods
add
inc
std
cld
cld
imul
xor
stos
vpaddsw
cmc
sub
addb
jns
fidivl
std
inc
cwtl
or
inc
inc
in
xor
sub
stos
stos
and
mov
lock
sub
pusha
add
cmpb
ljmp
push
js
pop
cld
loope
mov
jo
and
add
or
pusha
add
pusha
xchg
sti
mov
pop
and
inc
shlb
xlat
lret
mov
das
addl
xchg
fdivrs
pusha
mov
ficompl
inc
loopne
mov
cmp
mov
push
scas
cmp
fldl
loopne
inc
jbe
sti
or
mov
rcr
adc
or
pusha
insl
and
sub
mov
mov
rclb
loopne
stos
andb
sub
cwtl
jns
mov
xor
xchg
sahf
mov
shrb
pop
lahf
nop
adc
fs
lret
add
imul
repz
dec
mov
sub
lods
push
sbb
loopne
in
xor
aaa
clc
movsl
xor
andb
jns
roll
shrb
out
in
push
mov
sbbb
inc
adc
inc
mov
mov
clc
popf
sbb
cs
loopne
and
outsb
aas
ja
sbb
xchg
shlb
inc
clc
pop
adc
jns
arpl
pop
mov
and
xchg
push
loope
loopne
and
inc
cmp
dec
imul
lret
add
pusha
data16
mov
sbb
sbb
sarl
mov
mov
pop
dec
int
xor
pop
cmp
fbstp
pop
or
add
push
fwait
sbb
shlb
pusha
pusha
sbb
or
inc
xor
xchg
fstl
outsl
and
inc
jbe
cmp
mov
shlb
inc
test
add
sub
pop
pop
addb
rolb
int
and
inc
insb
or
sti
mov
repz
add
sbb
and
jbe
jb
jmp
mov
xchg
mov
rcr
push
mov
jns
add
xor
loope
xchg
xchg
loope
lret
repz
adc
in
icebp
fcmovne
fisttpl
sbb
and
mov
aad
stos
movsl
mov
add
mov
mov
mov
sub
gs
jns
add
fstpl
loopne
pop
xor
or
mov
inc
mov
das
inc
mov
lahf
cmp
mov
or
mov
hlt
out
data16
dec
clc
mov
inc
and
pop
or
loopne
subl
and
loope
fdivrl
loop
andb
mov
mov
rolb
mov
fcmovb
stc
xchg
sub
ror
and
or
ffreep
leave
add
or
sub
repz
lea
inc
cmp
gs
in
jae
and
mov
and
mov
enter
cmp
in
out
cmp
inc
mov
push
sbbl
cmp
in
push
push
push
test
stc
sub
and
das
dec
lret
jp
xor
mov
loopne
add
addb
call
jmp
addb
dec
pop
inc
xchg
ds
pop
cmp
xchg
pop
and
jb
out
cmp
popf
leave
or
loopne
inc
and
xor
jo
pop
imul
js
andb
repnz
lock
aaa
jmp
lds
inc
jg
ret
push
sbb
loop
sub
xor
pop
fisttpll
and
mov
mov
ss
xchg
mov
mov
or
pusha
or
cmc
insb
test
inc
xor
mov
sub
movsl
fsubr
in
fwait
cwtl
mov
repnz
sbb
popa
loopne
inc
dec
lds
mov
sbbb
idivl
and
fimull
mov
in
js
loopne
xchg
mov
lds
and
int3
xchg
adc
push
loopne
push
pushf
cmpsl
movsb
inc
add
cmp
insl
mov
mov
jb
lahf
jecxz
inc
and
mov
sub
cmp
out
mov
and
and
fstpl
data16
std
xchg
add
rolb
mov
cmpb
cld
rcl
lahf
jmp
sub
add
and
pop
cli
mov
and
xorb
mov
push
ret
addb
rolb
jbe
add
sbb
mov
mov
fwait
movsl
fsubl
mov
lods
add
mov
faddl
sar
pusha
and
adc
mov
mov
inc
xchg
in
jae
add
shrb
xlat
movsl
cmp
mov
aas
cld
je
mov
repnz
and
add
mov
xchg
sarb
push
insl
mov
fcomi
ja
repz
push
add
xor
loopne
lcall
mov
adc
add
gs
sbb
andl
dec
cmp
mov
inc
mov
jle
in
jb
and
jp
push
shlb
orb
loopne
inc
loop
dec
xor
fcom
cltd
stos
add
or
pusha
push
mov
int3
fsubrl
inc
pusha
inc
nop
scas
test
dec
lret
and
loopne
add
aaa
mov
mov
call
pop
cmpsl
mov
sbb
lcall
push
pop
notl
mov
orl
ja
or
push
xbegin
mov
inc
in
test
scas
mov
mov
inc
add
addb
clc
pop
and
loop
pop
lods
pusha
and
in
notb
sbb
leave
add
test
loopne
rolb
andb
inc
loopne
mov
inc
loopne
icebp
mov
mov
loopne
aam
dec
imul
test
jecxz
mov
out
pop
bound
xlat
into
rolb
sub
pop
out
adc
and
outsl
out
aam
sub
mov
popa
sti
in
loopne
mov
pusha
pusha
jb
rolb
lret
inc
shlb
test
xchg
ja
rolb
orl
es
add
ror
xchg
loopne
add
in
scas
not
insb
add
rcrb
adcb
fsub
popa
fcmovbe
xchg
xchg
je
cltd
outsl
xor
leave
popf
xor
xor
je
add
inc
ror
sub
cmp
jno
pop
mov
and
andb
and
sub
pop
mov
sti
fcomi
lret
and
insl
pop
add
test
loopne
xchg
loopne
add
mov
sahf
inc
pop
ljmp
int3
pushf
or
dec
pop
cmc
cmpsl
dec
loop
andl
add
inc
mov
popf
mov
cli
fldcw
in
xor
add
jbe
add
shl
arpl
out
mov
pop
popa
cwtl
lahf
jbe
xchg
loopne
sub
loop
stc
xchg
bound
int3
or
ret
hlt
adc
xchg
nop
cli
loope
js
fcoml
dec
sub
pushf
pop
pop
push
jnp
jp
call
cld
lahf
outsb
dec
loop
aad
out
lea
shl
or
inc
jae
push
cwtd
fiadds
out
add
lahf
push
mov
mov
scas
lret
idivb
out
sbb
sub
loopne
test
loopne
in
push
sbb
rolb
cmp
sti
daa
push
inc
in
fldt
push
andb
rcrb
dec
mov
lcall
jmp
rolb
rcrl
add
rorb
pusha
push
andb
mov
in
jne
enter
pushf
jae
aad
mov
in
notb
and
or
and
addb
add
jmp
and
out
pop
adcl
ret
dec
mov
loope
pop
clc
pop
stos
loopne
pop
lock
sub
pop
xchg
movsb
addb
add
into
aas
mov
subl
and
mov
add
sbb
repz
mov
xlat
adc
dec
movaps
inc
mov
loopne
jns
test
pop
arpl
push
xchg
mov
jl
test
add
jae
jne
mov
loop
cmp
and
xor
mov
inc
lret
mov
push
mov
mov
add
scas
mov
push
pop
jnp
pusha
pusha
mov
mov
adc
mov
pop
movsl
fidivl
addb
sbb
mov
into
mov
add
and
jge
mov
mov
ret
and
push
andb
adcb
lods
rol
loopne
leave
sub
lret
fldenv
dec
jl
mov
and
cmp
scas
and
or
addb
and
mov
jne
iret
aam
add
dec
dec
rol
pop
test
stc
or
andb
les
fbstp
cld
inc
jle
push
mov
cltd
flds
mov
inc
sbb
imul
iret
pushf
cmp
xor
sti
dec
cmc
mov
inc
in
ficompl
jmp
inc
imul
pop
mov
cmp
pop
inc
jae
push
sahf
cltd
icebp
sub
clc
jl
mov
das
sbb
xchg
out
xchg
rorb
mov
cmc
xor
repz
push
jecxz
lods
mov
inc
sbb
lock
jp
clc
js
cmc
inc
aas
dec
pop
test
fsubrl
push
push
stc
mov
add
jmp
mov
mov
add
dec
jno
mov
shlb
xchg
fidivs
loopne
mov
adc
fsubs
xor
sub
addb
or
loopne
mov
add
cmpsb
shl
inc
mov
mov
xchg
orl
out
pop
jo
xchg
jmp
push
leave
mov
loopne,pn
and
mov
in
in
mov
call
loopne
adc
mov
hlt
xchg
mov
lret
shll
dec
decl
add
inc
jge
inc
inc
sub
mov
inc
je
dec
jg
mov
test
pusha
push
jmp
pop
cmp
cmp
aad
sbb
adc
cs
mov
jmp
jecxz
push
lret
iret
jmp
lods
mov
dec
lcall
in
das
push
xor
dec
xchg
xchg
xchg
aaa
enter
cmp
fcompl
and
stos
pusha
loopne
mov
mov
push
or
pusha
xor
push
cwtl
push
mov
in
enter
jg
movsb
mov
inc
rcrb
xor
xchg
jb
dec
and
pop
fcomps
mov
cmpb
lahf
cltd
ljmp
add
cmp
jne
pop
mov
movsl
idivl
lea
loope
sbb
jnp
loopne
incl
imul
inc
subb
adc
add
push
and
addr16
lods
les
hlt
outsb
inc
push
stos
clc
pop
push
and
pop
iret
loope
xor
xor
mov
mov
inc
xor
repz
lahf
pop
xchg
outsl
mov
lods
and
loopne
push
rcl
push
push
sub
loopne
jb
add
pusha
add
sbbb
ret
mov
xchg
lahf
fcomi
cmp
pusha
rcrb
repnz
lock
sti
adc
pushf
scas
loopne
fstl
inc
adcb
popf
mov
jle
jle
jns
sub
sbb
adc
fstpl
mov
or
subb
loop
loopne
sbb
push
mov
mov
push
scas
and
andb
test
and
lods
loopne
popa
cmpsl
mov
fs
fidivl
je
push
rolb
pop
out
js
sub
pusha
scas
push
adc
pushf
cmp
rorl
mov
js
rclb
loopne
cmp
gs
pop
mov
dec
jbe
mov
out
jg
les
rolb
push
aad
pop
jp
xchg
lcall
mov
popa
mov
jge
and
ret
jmp
adc
lret
xchg
and
shl
push
fdivl
inc
jns
hlt
sbb
adc
xor
jne
rolb
jge
ret
push
xor
dec
add
mov
xor
popf
xchg
mov
pop
jp
sub
and
mov
push
dec
add
sbbb
and
cmc
jbe
mov
or
cli
dec
sbb
sarb
and
and
shl
rorl
pop
andb
lods
rol
in
cld
daa
mov
pop
xor
adc
addb
mov
dec
adc
push
cli
scas
add
mov
mov
mov
adc
sbb
pusha
mov
lods
adcl
ss
enter
cmpsb
loopne
or
rcl
sti
push
cltd
xchg
mov
ss
rcll
xchg
sbb
int3
xchg
stos
pop
xlat
pop
fldenv
inc
dec
fisttpl
in
hlt
cmc
push
mov
mov
enter
rdpmc
cmpsl
ret
and
mov
pusha
add
xchg
sub
orb
lret
and
inc
in
sub
inc
cmpb
in
sbb
ljmp
fs
cmp
pushf
add
inc
push
ja
dec
gs
mov
add
add
or
cmpb
in
leave
sub
mov
cmc
xor
mov
test
and
cli
push
icebp
int
iret
pushf
push
sub
inc
scas
xchg
rcll
out
rolb
pop
into
fwait
jae
sub
rolb
loopne
push
mov
addb
adc
es
push
movsb
inc
shlb
adc
les
es
mov
mov
andb
test
sbb
mov
inc
mov
mov
pop
mov
test
clc
lahf
loopne
and
test
pusha
pusha
dec
dec
pop
into
mov
sbb
mov
in
cmc
sbb
rol
add
daa
dec
js
push
add
xchg
dec
mov
test
dec
push
loope
and
mov
sarb
cld
test
popa
push
pusha
cmpb
loopne
pop
in
aaa
pop
or
sbbb
and
pusha
xchg
and
fs
mov
test
imul
andl
dec
xor
pop
pop
call
and
idivl
inc
pusha
push
in
rcr
loope
push
add
pusha
mov
sbbb
fbld
pusha
pop
sub
pusha
pusha
cmp
and
int
lret
push
fdivrl
pop
inc
loop
je
mov
pusha
dec
jmp
and
shl
daa
lods
repnz
pop
test
rcr
jmp
mov
pushf
dec
cmp
and
adc
in
stos
rolb
jbe
addb
push
rcr
stos
or
and
xchg
mov
sbb
movsb
pusha
and
ja
and
adc
jnp
adc
loopne
insb
popa
jmp
fadd
xor
lods
push
xor
jecxz
and
and
inc
xchg
mov
adc
imull
loopne
fsubrl
arpl
sub
loopne
loopne
and
and
add
rolb
push
cwtl
add
or
sbb
xchg
negl
movsb
and
inc
andb
cmp
pop
push
cmpsl
xchg
xchg
lods
and
mov
iret
sub
cltd
mov
cld
jecxz
mov
aad
push
add
pop
outsb
add
push
movsl
scas
add
loopne
in
sbb
andb
mov
addr16
stos
inc
add
pop
nop
aam
outsl
push
mov
inc
xchg
addr16
pop
sbb
loopne
pop
jo,pt
add
cbtw
lods
loopne
push
mov
jg
out
imul
and
outsb
add
and
icebp
jl
loopne
data16
andb
loopne
testl
loop
push
jecxz
add
sbb
or
mov
dec
xor
pop
jne
pop
xchg
add
rcl
jbe
mov
mov
loopne
add
add
setg
rol
add
dec
adc
jp
and
add
cltd
dec
lcall
mov
pop
push
sbb
pop
mov
enter
sbb
and
aam
mov
sbb
lods
mov
xor
icebp
lahf
xchg
incl
mov
hlt
xchg
sub
jo
jns
ficoml
dec
jnp
push
xchg
adc
push
mov
fisttpl
mull
jge
andb
add
add
cmpl
mov
xor
mov
mov
daa
pop
imul
test
hlt
jecxz
cmp
mov
inc
fadds
mov
repnz
ret
xchg
clc
push
loopne
dec
xchg
pop
pop
clc
mov
inc
cmpsb
add
mov
push
lret
enter
pusha
shlb
adcl
pusha
pop
pop
in
dec
enter
pusha
mov
and
in
lds
mov
adc
push
sub
outsb
call
rclb
and
jo
notl
call
adc
jbe
out
pop
arpl
push
shl
cmp
cmp
mov
test
add
dec
shll
xchg
cmp
push
push
push
mov
repz
data16
xlat
and
inc
loopne
pop
pushf
pop
sbb
insl
scas
andb
fistpll
lahf
jno
xchg
adc
rolb
lcall
sub
loopne
push
je
ror
or
and
mov
push
cmp
mov
or
add
mov
and
sub
mov
sbb
shl
call
out
inc
and
add
jl
pop
in
mov
push
lock
sti
mov
subb
pop
int
loopne
xor
jno
sub
xchg
cltd
arpl
add
ret
pusha
loopne
aaa
into
dec
cmc
std
cmpsb
inc
pusha
cmp
pop
insl
out
je
addb
pop
mov
loop
enter
sarb
add
xor
aad
scas
jmp
push
arpl
movsb
loopne
cmc
mov
sbb
push
sub
mov
add
xor
loop
inc
mov
sarl
push
mov
mov
outsb
dec
xchg
or
loopne
pop
xor
xor
jge
add
mov
and
push
sbb
mov
ret
inc
out
add
int3
icebp
gs
fildl
cmc
push
into
loope
and
gs
out
daa
iret
mov
shlb
shlb
mov
mov
sub
out
pop
push
mov
or
aam
mov
ljmp
cmpsb
addb
pusha
pusha
xchg
add
mov
mov
jns
push
push
jg
and
xor
mov
ret
mov
add
mov
mov
xchg
repz
stos
push
movsl
out
pop
or
mov
jns
mov
push
and
or
add
out
push
call
repz
int3
add
stos
pushf
imul
enter
stos
jmp
mov
loopne
movsb
inc
inc
ret
ss
filds
out
shlb
loop
std
mov
into
xor
xchg
loop
aaa
jae
ret
pusha
sub
inc
cmp
ret
addr16
dec
test
shrb
pusha
xorb
dec
dec
jle
add
mov
pop
push
inc
pusha
push
sti
fistpl
mov
aam
mov
or
add
mov
aaa
sbb
mov
shl
add
rolb
mov
scas
idivl
loopne
aam
icebp
aaa
add
mov
push
inc
pusha
out
xchg
and
addr16
aad
ss
fwait
xchg
ds
nop
test
mov
leave
and
inc
cmp
and
das
sub
pusha
movsl
movsl
fistl
pop
mov
in
arpl
and
xor
daa
mov
rorb
mov
mov
mov
pop
outsl
xchg
stos
andb
lret
mov
mov
in
push
push
insb
out
int3
mov
dec
std
pusha
mov
pop
xor
or
and
dec
sub
es
loopne
shl
add
inc
sub
jmp
shll
adc
fs
mov
xor
sub
and
cmp
ja
cmp
fistpll
popa
push
shlb
cmp
aaa
sbb
dec
sub
xor
mov
dec
lods
xchg
flds
fwait
mov
subb
or
xchg
loopne
imul
or
mov
fcmovbe
int3
shlb
dec
in
mov
mov
mov
jae
popa
and
pusha
test
and
mov
xchg
mov
and
loopne
jmp
sub
push
mov
in
cmp
call
filds
and
mov
add
add
fwait
sarl
sub
and
fistpl
daa
clc
xor
adc
sub
or
add
inc
add
mov
int3
push
imul
dec
sbb
pusha
rolb
mov
add
sub
push
xlat
cmpsb
shlb
enter
push
and
adcb
push
std
das
mov
dec
jmp
jne
mov
fdivs
leave
gs
pusha
loopne
ficomps
xchg
lods
add
flds
and
mov
adcl
incl
out
xchg
loope
shl
push
imul
sbb
daa
mov
mov
loopne
push
test
inc
dec
sub
mov
and
mov
loopne
mov
cli
ret
enter
pop
cwtl
into
jge
xor
adc
es
mov
dec
adc
cwtl
xor
inc
into
jb
jo
mov
sub
add
in
in
pusha
add
jle
in
dec
fistpll
push
addb
xor
cmp
or
mov
in
icebp
in
out
in
jo
mov
loopne
xchg
dec
imul
and
add
andb
fldl
cmp
pop
add
orb
ret
or
add
xchg
xchg
incl
jo
mov
sbb
outsl
cltd
push
pop
mov
stos
xlat
lcall
test
rcr
push
fildll
leave
daa
pop
movsl
jnp
push
cmp
push
pop
stc
xchg
xchg
mov
and
and
xor
xlat
cmp
push
mov
cmpsl
pop
dec
mov
ss
inc
shl
fwait
dec
push
ds
jno
mov
add
mov
rorb
pusha
mov
pop
push
shlb
rcl
xor
and
mov
mov
mov
xor
sbb
out
mov
andb
fwait
mov
or
fiaddl
add
push
into
out
pop
pop
insb
cli
andb
pusha
stos
add
pop
lcall
mov
jbe
test
icebp
adcl
rcll
adc
xchg
sbb
push
arpl
xlat
imul
loopne
out
mov
xchg
loopne
xchg
xchg
imul
repnz
or
pop
jb
jo
std
pop
icebp
cmp
movsb
add
cmpsb
rolb
jns
mov
loopne
push
mov
addl
adc
jle
and
je
ret
pop
imul
lods
and
addb
mov
repz
mov
fidivs
and
add
fidivrs
lret
orl
xor
mov
shlb
inc
ret
ds
push
mov
hlt
mov
cmp
and
sub
loope
inc
add
and
cmc
lret
bound
testb
jge
dec
pusha
inc
push
loopne
mov
mov
add
jmp
fnstsw
daa
cmp
add
fs
daa
dec
xchg
arpl
sub
rolb
or
push
inc
mov
adc
add
sti
das
push
test
jnp
stos
inc
xlat
addps
andb
mov
pop
mov
sarl
loopne
adc
loopne
repz
pop
xor
hlt
jmp
xchg
or
push
jno
mov
dec
mov
loope
pop
dec
add
loopne
mov
mov
inc
add
loopne
pusha
ret
rorb
outsb
xchg
sub
xchg
sub
rcll
and
insl
in
mov
std
inc
clc
cli
xor
or
mov
sti
in
insl
cmpsl
sub
sahf
scas
andb
mov
pop
mov
pusha
add
push
rcll
mov
je
push
andb
daa
pop
out
and
dec
lret
decb
rolb
rolb
push
sarl
xchg
mov
mov
punpckhdq
cli
or
and
xorb
lret
cli
mov
loopne
jl
push
jp
pop
inc
push
in
daa
jmp
out
daa
jnp
clc
push
mov
and
mov
pusha
loop
andl
push
adc
pushf
xor
mov
lds
and
stos
xchg
loopne
and
mov
mov
add
lock
nop
fisttpll
push
pop
std
or
xor
loopne
xor
nop
je
loop
addb
dec
int
mov
in
imul
sub
shl
icebp
mov
mov
int
push
add
cmpb
fdivs
cs
outsl
jmp
andb
mov
mov
mov
dec
test
rcrb
stos
add
cltd
xchg
xor
test
es
shlb
jecxz
cmpsl
push
lahf
mov
mov
mov
jmp
movsb
mov
jl
push
repz
adc
mov
in
loope
sbb
pop
in
ret
scas
and
push
test
push
xor
xchg
out
lods
mov
mov
cmp
daa
jo
mov
mov
mov
loopne
cmp
sub
es
xchg
pop
lret
dec
dec
iret
jno
fstps
stc
xchg
xchg
sub
loopne
nop
ss
ss
scas
shlb
cli
mov
aam
scas
shlb
jmp
pop
and
jnp
inc
push
iret
cmc
xchg
mov
inc
out
int
and
ja
dec
mov
push
ja
or
pop
loop
dec
test
mov
xor
sub
pop
andl
sbb
adc
push
pop
push
enter
loopne
dec
data16
dec
lret
scas
cwtl
and
or
inc
movsb
pusha
loopne
add
cmpsb
shlb
addb
and
dec
and
pop
dec
hlt
test
pusha
aaa
in
push
inc
and
inc
lcall
addb
cmp
jecxz
mov
xchg
jb
lcall
mov
lds
clc
mov
loopne
out
mov
adc
fwait
xchg
out
fsubs
and
push
jle,pt
les
sar
outsl
cmp
add
xchg
push
inc
out
pop
pop
cmp
adc
cli
xor
push
test
inc
rol
inc
lcall
inc
dec
ljmp
xlat
cmc
sahf
out
shr
jg
dec
mov
fmulp
cmc
xchg
jp
xchg
xor
and
lret
rolb
cli
in
xor
push
int3
sbb
dec
push
adc
push
mov
sbb
aam
pop
cltd
ljmp
clc
negl
pop
cltd
ja
lods
and
dec
mov
test
inc
test
stos
andb
fwait
test
loopne
inc
add
shr
int3
stc
out
mov
lret
push
inc
shlb
mov
and
xor
inc
sub
add
add
or
xor
in
sti
das
push
sub
and
pusha
arpl
fidivl
xchg
test
pop
or
enter
and
insl
pop
jo
test
pusha
pop
pop
cwtl
es
and
push
addb
data16
xlat
jns
lods
pop
imul
pusha
adc
nop
pop
movsb
addb
xchg
sbb
dec
and
pop
xchg
add
mov
and
inc
shlb
rcrb
cmp
ds
and
mov
pop
imul
inc
inc
lahf
repz
inc
and
mov
mov
movsb
add
jno
aas
lods
and
movsb
loopne
negb
fwait
leave
rcl
in
test
inc
inc
data16
add
jne
scas
ds
push
je
dec
clc
js
inc
loopne
add
sarb
xchg
dec
in
cmp
and
jne
fbstp
mov
fiadds
mov
icebp
in
sbb
pop
or
jg
cli
inc
shlb
xlat
cmpsb
add
mov
lcall
cltd
adc
enter
mov
popf
mov
cmp
fs
inc
out
addb
mov
push
cltd
dec
mov
jg
lea
sbb
push
ret
ljmp
stos
mov
mov
and
add
arpl
in
push
mov
pusha
repnz
pop
arpl
sti
xor
lcall
jnp
mov
and
pusha
inc
jmp
mov
int3
insl
mov
rolb
out
lods
inc
inc
mov
out
fsubrs
pushf
inc
xlat
dec
and
cld
or
loopne
mov
icebp
int3
cmp
rolb
popa
aad
dec
bound
or
inc
xchg
pop
inc
and
addb
mov
call
pushf
loop
cmp
loopne
in
inc
sub
and
dec
lock
sub
fs
ja
fcomps
sub
mov
cmp
inc
adc
pop
inc
mov
aam
aam
out
xor
lcall
dec
filds
pop
test
in
clc
repnz
jo
add
mov
cpuid
shl
push
adc
mov
add
mov
mov
xchg
into
push
lods
add
push
pop
imul
and
sbb
xchg
sbb
inc
dec
lret
xor
fsub
sbb
stos
cli
roll
mov
mov
lea
mov
xlat
out
inc
repnz
push
out
pop
movsb
and
repnz
dec
jo
addb
popf
leave
sahf
clc
jnp
fnstenv
addb
cmp
add
adcb
add
imull
xchg
push
loope
mov
gs
sub
and
sub
ds
aas
mov
movsl
xor
negl
mov
popf
jbe
ret
add
roll
outsb
xchg
les
sub
loopne
imul
loop
and
and
mov
jle
jnp
dec
xor
bound
loope
mov
add
inc
call
scas
mov
push
and
sub
int3
mov
sub
mov
mov
arpl
clc
sbb
adc
sti
cmp
and
outsl
sbb
jae
pop
mov
mov
in
sub
loopne
rol
dec
out
scas
cmp
pusha
and
idivl
jg
fidivrl
cwtl
jge
jo
jbe
and
dec
ret
xchg
cmp
fwait
daa
shll
sbb
dec
test
inc
push
cli
sub
and
lret
pop
test
inc
pusha
rcrl
add
inc
dec
out
mov
xorl
push
push
mov
cwtd
jp
test
xor
mov
sub
mov
int3
sahf
sub
jmp
cmp
in
sub
andl
sbb
mov
cmp
push
mov
adc
mov
xchg
mov
shlb
jmp
shl
inc
fstps
mov
mov
mov
pusha
mov
xor
and
in
and
mov
in
add
xchg
add
adc
dec
js
add
pop
xlat
dec
ret
and
and
mov
jle
fisttps
pusha
sbb
loope
fiaddl
aam
mov
mov
icebp
or
adc
push
mov
push
movsl
stos
pusha
inc
gs
rclb
pop
or
pusha
mov
lods
scas
inc
mov
rclb
mov
pusha
xchg
mov
and
sbbb
xchg
jle
das
in
fiaddl
sbb
test
sub
add
or
and
jno
mov
pop
adc
shl
lret
add
lret
sbb
sbb
sub
cmpb
and
and
pop
les
xchg
inc
popf
mov
test
inc
frstor
neg
push
repnz
dec
cmp
push
scas
loopne
add
pusha
cltd
outsb
cli
aas
mov
lea
push
les
cmpl
push
das
push
jbe
rolb
jno
pushf
fldt
ja
adc
fs
jo
mov
add
dec
ror
pusha
and
dec
adc
or
ja
pop
dec
cs
sub
addb
sub
loopne
repnz
loopne
inc
cmp
into
cmpsb
mov
fcmovb
dec
mov
adc
push
int3
xchg
addr16
cmp
ficompl
mov
or
mov
inc
hlt
xchg
pop
stc
xor
pusha
mov
out
dec
mov
lea
stos
pushl
mov
inc
mov
mov
pop
pusha
jae
and
ds
sub
xorb
sti
lea
inc
xor
xor
test
and
and
xchg
mov
shlb
push
mov
push
sbb
pop
movsb
mov
adc
push
mov
sbb
xchg
push
mov
mov
jb
dec
cwtl
add
dec
out
inc
sbb
sahf
rorw
ds
test
aaa
inc
pop
push
jnp
sub
add
mov
sti
stos
movsb
and
sub
jbe
loop
jo
ret
cwtl
shll
filds
pop
int3
jbe
pop
cmp
mov
setb
mov
push
pop
jnp
and
loopne
and
sbb
mov
xor
into
mov
cld
inc
push
xchg
fwait
in
popa
adc
leave
adc
add
loop
xchg
add
add
inc
push
rcll
pop
mov
sub
loopne
arpl
sahf
add
add
add
inc
mov
test
andb
ds
jbe
sub
inc
jne
mov
rclb
pop
pop
test
mov
mov
and
popf
inc
lret
popf
xchg
sbb
inc
rcl
add
mov
movaps
pusha
add
das
pop
jnp
leave
outsl
sub
pop
shrl
xchg
cmc
adc
aas
pop
lret
jl
add
fildl
repnz
testl
addb
cld
sub
movsl
and
add
or
andb
xor
scas
loopne
cld
rolb
loopne
inc
jbe
clc
lcall
and
inc
inc
pop
addb
lret
and
icebp
inc
sti
clc
push
cmp
or
or
pusha
aam
frstor
ss
in
mov
addb
mov
xchg
jp
test
insl
mov
inc
jl
in
mov
push
sbb
lret
lds
int3
insb
sbb
ljmp
jns
lahf
loopne
pusha
ja
dec
repnz
mov
rorl
cmc
mov
rclb
dec
lret
test
loopne
mov
rcll
sub
xor
add
jmp
dec
out
and
xchg
pop
mov
add
rol
inc
or
lea
pop
fbld
addb
pusha
dec
dec
lahf
shlb
push
loope
cmp
ficoml
sbb
and
sarb
and
loopne
sbb
jge
mov
sbb
addb
addb
pusha
and
add
imul
repnz
mov
sbb
push
inc
loop
dec
frstor
leave
cs
pusha
movsb
loopne
std
addr16
inc
pop
adc
mov
ljmp
popa
rcll
sub
loopne
sbb
les
push
mov
mov
sbb
cmp
sbb
mov
or
cmpb
mov
cmp
cmp
subl
mov
in
into
adc
mov
ja
add
lods
pusha
pusha
loopne
push
jmp
int
leave
fsts
cli
jecxz
loopne
cmp
jmp
mov
pop
mov
divb
and
push
add
push
cs
rcr
dec
inc
ficompl
adc
mov
sti
test
and
loopne,pn
push
mov
dec
xlat
pop
jmp
inc
dec
jns
jbe
cmp
test
mov
and
lods
ret
add
or
les
pusha
adc
mov
and
inc
inc
sub
mov
and
loopne
mov
adc
inc
inc
mov
inc
jmp
shlb
inc
pusha
stos
sub
jmp
xor
add
and
leave
mov
and
insl
enter
fwait
ret
mov
mov
pusha
cmp
and
push
sbb
mov
addr16
test
pusha
fwait
inc
jno
xlat
pop
jge
mulb
jge
push
jno
ret
push
aad
or
imul
iret
mov
pop
inc
ljmp
push
adc
jno
or
pusha
les
scas
andb
mov
add
mov
pop
xchg
lcall
addb
shrl
mov
loopne
xor
or
add
mov
mov
popf
sbb
adc
mov
pusha
loopne
dec
fstpt
or
rcl
pop
icebp
push
xor
xchg
addb
sub
loop
dec
xor
mov
repnz
inc
xchg
push
and
xchg
mov
out
js
and
movb
sbbb
sbb
jno
loopne
fmull
into
ficoms
stos
add
add
ds
lea
in
lret
loopne
mov
inc
into
fidivrl
scas
pusha
sbbb
lahf
addr16
add
sbb
and
ss
dec
lret
mov
fmuls
add
inc
xchg
push
and
add
and
arpl
and
jmp
pusha
rorb
outsl
push
add
push
fnstcw
xor
push
inc
add
and
shlb
loop
mov
js
adc
inc
mov
xor
cmc
outsl
mov
mov
and
loope
into
out
jmp
mov
mov
loopne
pop
fdivs
adc
mov
xor
pop
push
mov
pop
xchg
adc
add
das
ljmp
fistps
and
jle
pop
cmpsb
rol
imul
sub
mov
inc
mov
lahf
aas
jg
mov
loopne
sbb
cmpsb
and
loopne
outsb
add
mov
xor
mov
out
incb
cmp
fstpt
pushf
add
sub
cmpb
insb
into
sti
scas
push
addr16
cmp
pop
ja
gs
dec
xor
outsl
ret
xchg
cmp
andb
mov
adc
pop
add
ss
cld
rorl
inc
pop
or
addb
adcb
scas
and
mov
sub
mov
rcl
dec
or
add
and
pop
les
mov
imul
pop
pop
inc
xchg
hlt
call
fcmovnb
xor
cmc
mov
sbbb
gs
sbb
adc
push
mov
test
and
and
mov
and
sub
mov
mov
loopne
mov
xchg
inc
insb
inc
popa
clc
test
pusha
jne
mov
xchg
popf
into
divb
inc
push
jle
lea
andb
or
jge
xchg
adc
or
xlat
dec
adc
loopne
add
sarb
and
inc
scas
loopne
lahf
and
xlat
rorl
shl
sbb
add
mov
push
mov
mov
shll
out
and
test
inc
sub
xorb
inc
fidivrl
push
add
shlb
loopne
sbb
rorb
mov
ret
shr
sub
cmc
push
fstl
insb
and
inc
add
nop
push
xchg
fs
pop
insl
xor
xor
pop
cmp
push
and
loopne
xor
and
pusha
loopne
inc
xchg
fwait
inc
or
sub
rorl
out
clc
inc
push
mov
fcoms
popa
cmp
mov
inc
sti
gs
pop
test
rolb
dec
icebp
lock
pusha
shlb
shl
outsl
mov
add
pop
pop
inc
cmp
pusha
sbbb
rol
add
ret
dec
mov
inc
pusha
mov
lret
les
or
mov
outsl
aam
pop
xchg
add
inc
leave
jmp
dec
sbb
and
lock
pop
pop
bound
add
jae
xchg
pop
mov
pop
leave
adc
jb
inc
pop
sbb
ja
fadd
sbb
repnz
hlt
adc
sbb
mov
adc
inc
je
movsb
and
mov
inc
lahf
xchg
stos
add
mov
jp
test
sarb
and
out
lods
mov
push
sti
fs
movsl
adc
insl
mov
icebp
and
std
mov
push
imul
scas
mov
outsb
enter
and
and
and
and
xchg
pop
pop
xor
sub
cwtl
or
les
xchg
cmp
cmp
xor
add
cmpsl
push
loopne
fcmove
push
sbb
sbb
loopne
out
fistpl
negl
je
cltd
xor
adc
dec
mov
sub
dec
popf
lods
pop
cmp
and
shlb
and
jns
clc
push
add
rolb
sbb
mov
sbb
inc
sbb
popa
and
inc
mov
sub
push
cmp
iret
stc
lahf
mov
addr16
gs
inc
and
and
add
or
push
push
insl
push
mov
outsl
rcrl
jle
sahf
js
lods
insb
inc
test
in
xchg
push
leave
test
mov
push
pop
sub
pusha
cmc
push
int3
and
cwtl
mov
loopne
scas
and
jo
and
fldl
data16
add
insl
fs
sub
loopne
xor
pushf
sbb
and
scas
inc
orb
mov
insb
cltd
sahf
fdivrs
push
insb
cwtl
cmovno
sti
jp
popf
mov
outsb
mov
out
and
orb
inc
push
inc
add
loopne
popf
outsb
jle
dec
push
mov
in
pop
lods
out
fbstp
out
inc
sub
push
into
dec
pop
adc
add
dec
jge
ja
call
add
xor
fcmovnbe
das
shrl
fdivs
mov
sub
jp
insl
lods
shlb
lret
sbbb
dec
in
out
in
mov
stc
jg
lret
in
inc
outsb
and
add
pop
push
jo
popa
ret
loopne
jecxz
mov
pusha
pop
inc
mov
loope
xchg
and
push
loop
std
mov
adc
addb
or
jno
je
test
les
xor
push
push
loop
xchg
mov
call
add
push
test
inc
pop
mov
add
addr16
cmp
imul
sarb
and
ja
mov
out
pop
push
cmpsb
inc
add
ret
add
outsl
inc
jg
pop
xor
lds
push
pop
imul
and
or
shrb
push
outsb
addr16
imul
add
repnz
outsl
xchg
inc
mov
and
ss
repz
mov
add
out
inc
inc
lret
cmp
addb
xchg
inc
filds
mov
push
mov
fidivl
movsb
pusha
loopne
cld
fsubl
rorb
or
and
gs
fmul
mov
fnstenv
loopne
ret
shlb
adc
loopne
push
mov
push
xor
sub
pusha
int3
sbb
xor
call
mov
xor
shll
rolb
xor
adc
shlb
mov
mov
mov
nop
jne
ds
imul
jo
inc
shlb
add
and
inc
mov
loopne
lret
jecxz
add
mov
cmp
xchg
rolb
or
loopne
fs
jb
push
or
add
out
ljmp
mov
pusha
mov
cmp
or
sahf
in
cmp
xor
pop
xchg
and
adc
loopne
or
jecxz
adc
xor
rorb
inc
nop
mov
and
ret
test
loopne
aam
pushf
pop
sbb
rol
pusha
inc
cmc
mov
out
fcmove
rcr
loopne
repz
adc
jge
mov
and
add
add
mov
and
push
test
add
int
stos
clc
mov
and
mov
cmp
into
lahf
sbb
mov
xor
mov
jmp
mov
add
pop
fistl
sbb
out
mov
mov
push
or
mov
fcmovnbe
aas
push
cs
inc
insb
andb
jg
icebp
cmp
mov
dec
jecxz
aaa
lcall
jbe
clc
fildl
in
and
test
ljmp
add
dec
sub
inc
icebp
mov
jbe
loopne
mov
sbbb
loopne
scas
inc
add
lods
mov
add
pop
ljmp
inc
dec
gs
lahf
jp
aad
xchg
lahf
xchg
cli
xchg
push
mov
sarb
movsb
and
add
xchg
adc
in
dec
and
mov
loopne
add
mov
and
rcrb
pop
ficompl
dec
xor
ds
xchg
jp
andb
adc
xchg
inc
xchg
jge
aad
dec
int3
push
cmc
movsb
mov
gs
dec
stos
andb
cmp
xor
pop
push
jbe
daa
inc
mov
loopne
and
in
faddp
pop
adc
mov
mov
fnsave
add
test
aaa
adc
dec
das
test
sbb
pop
add
hlt
adc
mov
loopne
jo
fmuls
rcrl
popf
rorl
dec
push
mov
push
xchg
dec
insl
jle
int3
stos
and
lods
mov
jl
stc
mov
mov
fcmovnb
inc
mov
cwtl
jae
out
mov
popf
daa
inc
jmp
pusha
and
in
sub
pusha
sub
cmpb
jo
je
andb
js
or
rolb
stos
loopne
dec
adc
int3
fmull
add
test
jp
jne
add
addb
mov
inc
adc
cmpsl
mov
loopne
push
cmp
andb
xor
arpl
mov
add
orb
repnz
addr16
loopne
pop
cmp
mov
inc
adc
push
add
and
in
mov
jg
add
pop
mov
ret
push
inc
adc
pusha
fcoml
mov
andb
dec
shrl
sarb
cmpsb
and
int3
inc
outsb
out
pop
mov
xchg
inc
and
pusha
or
andb
dec
xor
sbb
push
outsb
and
imul
loopne,pn
pop
scas
push
sub
add
pop
sahf
dec
out
cmpsl
mov
fidivrs
add
loopne
mov
cmp
cli
ret
cltd
jnp
pop
and
les
test
push
cmp
sti
rclb
xor
out
test
jecxz
iret
jb
xchg
sbb
xchg
and
andb
ret
push
cltd
dec
jno
cmp
mov
inc
pusha
fisubrl
jb
enter
sub
inc
jl
fimuls
loopne
xchg
ds
xor
movsb
and
movsb
shlb
std
dec
imul
stos
and
add
repnz
call
mov
sbb
mov
dec
mov
rolb
cmp
mov
jl
jl
inc
add
jp
or
pusha
xchg
fcompl
lret
and
cs
pusha
stc
movsb
shlb
jo
dec
jle
mov
mov
shll
aaa
cli
mov
rolb
jg
xchg
mov
push
ret
les
pop
roll
rol
sub
hlt
fucom
jp
mov
test
push
and
inc
xor
add
sbb
test
loopne
andb
pop
sbb
xchg
add
out
lock
loopne
cld
shlb
jae
adc
inc
mov
pop
addr16
arpl
fsubs
fbld
xchg
bound
add
andb
pushf
jno
lret
cmc
inc
and
pusha
push
add
mov
fs
test
pushf
push
jp
lret
or
dec
mov
ss
dec
jno
popf
push
enter
pusha
and
mov
push
pop
fimuls
sub
test
movsb
shlb
pusha
pop
xorl
mov
stos
push
sti
je
xchg
push
leave
enter
out
dec
mov
andb
mov
jge
inc
xchg
sbb
pop
fisttpl
js
pop
je
xor
fistpll
and
sbb
andb
mov
xor
les
leave
js
test
je
inc
orb
ds
aas
je
cmp
loopne
sub
in
mov
and
add
sahf
adc
inc
xchg
sti
mov
pop
das
add
repnz
outsb
mulb
mov
and
add
sbb
mov
stos
mov
sbb
aam
sti
dec
jp
jp
or
and
popf
push
and
push
in
decb
or
jg
jo
inc
iret
push
and
lds
repnz
inc
sarl
les
rolb
ret
pusha
add
dec
cmp
dec
mov
pusha
or
jne
cmpsb
shlb
and
imul
mov
cmp
and
neg
jge
mov
push
out
jg
mov
popf
jo
loopne
cmp
pop
push
adc
mov
add
add
and
jmp
mov
int3
call
js
stos
or
pop
out
jle
data16
add
stc
loop
pop
cmp
xor
addr16
push
adc
nop
call
loopne
inc
inc
mov
mov
lock
pusha
pusha
cwtl
cmpsl
int3
xlat
movsl
inc
mov
pop
mov
fsubp
pop
pushf
in
in
jne
add
nop
lahf
push
pop
push
mov
xchg
in
jns
call
mov
hlt
movsb
pusha
loopne
sub
pop
mov
add
adc
das
sahf
lds
jae
mov
enter
andb
addr16
lea
xchg
cld
rcrl
pusha
adc
xchg
lds
ja
push
stos
push
fs
sahf
or
push
add
and
adc
xchg
and
stos
sub
loopne
xchg
add
jnp
xchg
pop
jo
in
outsl
push
data16
andb
dec
jbe
dec
sbb
das
cmp
movl
inc
dec
dec
push
je
cmp
and
inc
dec
loopne
xchg
add
and
loop
xlat
push
fwait
lods
pusha
mov
xchg
mov
pop
sbb
gs
ficompl
mov
inc
insb
jp
in
in
or
iret
jecxz
and
xor
add
testb
mov
lea
cwtl
and
mov
add
loopne
adc
mov
xchg
dec
ss
mov
out
aam
shl
in
and
lcall
pop
aaa
add
lock
mov
cld
and
sar
xor
mov
shr
or
pop
mov
jne
lods
scas
pusha
add
fnsave
lret
enter
adc
cmp
loopne
push
dec
out
lcall
pop
add
adc
pop
fldt
popa
push
int3
es
incb
aas
popl
loopne
test
sahf
lock
fnstcw
sbb
or
imul
lods
and
mov
loopne
pusha
lcall
xchg
int3
lcall
nop
jge
mov
ja
imul
jg
jno
fsubs
ret
mov
and
push
addb
mov
push
insb
push
xchg
and
and
adc
enter
insb
rolb
and
rcrl
pop
lahf
cmpsb
pusha
subb
bound
mov
rcrb
xor
mulb
mov
mov
ret
xchg
and
bound
testl
mov
inc
sbb
mov
sbb
pop
dec
or
ja
pop
inc
ja
fwait
cmp
mov
jbe
stos
loopne
pop
imul
inc
push
lret
and
inc
shlb
pop
adc
stc
xlat
rclb
push
mov
mov
scas
cld
test
loopne
dec
lcall
inc
das
pop
insl
stos
fidivrs
inc
imul
jb
mov
fsubr
cmc
and
popf
rolb
mov
mov
push
iret
addr16
add
add
imul
sbb
and
push
rolb
and
push
cmp
ret
adc
test
andb
mov
sub
roll
scas
and
sbb
clc
cmp
sub
add
fs
add
mov
leave
sti
push
rcll
adc
mov
jle
xchg
cs
mov
stos
pop
fwait
icebp
fnstcw
outsb
or
inc
push
pusha
addb
xor
push
jb
add
mov
push
negb
add
and
mov
mov
jecxz
push
add
sarb
test
subb
hlt
call
pusha
fbstp
sub
insl
lods
inc
loopne
lret
cwtl
push
les
lock
cmp
pop
ljmp
xor
or
rcrb
sbb
loopne
cmpsl
mov
rcr
adc
pop
jg
mov
push
inc
pusha
jno
jb
je
jg
xchg
loopne
add
loopne
sbb
cld
mov
outsl
and
xor
push
cmovno
or
jne
cmpsb
add
adc
and
xchg
inc
in
inc
add
shl
scas
pusha
sarb
add
popa
in
mov
cmp
fs
jno
push
test
inc
fistps
addr16
test
and
xchg
ss
mov
sbb
roll
mov
cmpsl
xchg
xlat
fsubrs
jnp
mov
add
and
mov
daa
int
jo
dec
arpl
cmp
dec
arpl
fcoml
dec
rorl
loopne,pn
and
rcl
addb
pusha
add
jl
loop
stos
jns
or
loopne
pop
hlt
mov
addb
mov
shl
sbb
call
add
shl
mov
mov
mov
andb
std
sub
pusha
dec
test
jp
xlat
inc
push
mov
fildl
out
fmuls
push
movsl
mov
and
movsl
push
js
and
push
pop
sti
mov
mov
push
xchg
pop
mov
add
push
rorb
cld
addr16
pusha
loopne
loopne
scas
and
loopne
inc
mov
xchg
cmp
insb
jns
dec
aad
dec
ss
xlat
pusha
cmp
add
imul
inc
adc
addl
test
xchg
mov
cmp
inc
lock
and
sqrtps
add
pop
inc
or
add
into
loop
std
sbb
stos
pusha
inc
jp
in
add
pusha
ds
mov
push
xchg
adc
js
and
popa
mov
sub
mov
adc
inc
xchg
mov
orb
mov
pop
or
and
add
jb
les
movsl
inc
cmp
loopne
or
ret
nop
pop
cmp
div
cmp
lcall
inc
loopne
pop
cmpsl
fnstenv
cmp
xchg
pop
fwait
popf
cmp
loopne
popa
arpl
push
addr16
mov
outsl
mov
dec
inc
jecxz
pushl
faddp
sbb
cli
mov
cltd
shl
add
and
and
and
add
add
lahf
xchg
cltd
aam
rol
jle
add
add
orl
rolb
cmpsl
cmp
lods
add
clc
ds
mov
or
dec
js
jmp
xchg
das
fwait
call
dec
fcmove
mov
add
sbb
rcrb
int3
pop
popf
rcr
sub
push
cld
mov
mov
or
xchg
fisttps
jmp
jo
inc
mov
xor
add
aad
xor
addb
mov
mov
sub
mov
xchg
inc
cmpsl
and
add
xor
imul
pop
pop
or
dec
fwait
jae
repnz
mov
shlb
and
cmp
icebp
lods
pusha
add
push
pop
mov
cld
iret
arpl
adc
int3
pop
popa
and
or
lods
mov
and
lds
xchg
ja
fistpl
sbbl
push
sbb
daa
out
out
jae
mov
shll
xchg
mov
cmp
aas
hlt
xchg
mov
add
mov
jno
cmc
fcomip
lahf
add
sbb
push
arpl
test
jecxz
fcompl
aaa
dec
inc
or
mov
inc
mov
sbb
addr16
adcb
orl
loopne
shll
dec
fcmove
mov
push
insb
adc
cli
gs
mov
pusha
add
add
mov
arpl
xchg
or
cmc
mov
call
add
pop
subl
push
fsub
pusha
add
inc
add
int3
jno
dec
addb
inc
mov
sbb
or
rcrl
std
push
xchg
leave
add
js
pop
in
lahf
cmc
adc
jae
pusha
push
jno
loopne
sub
andb
outsl
add
addb
mov
vmread
dec
popf
cmp
push
xchg
aam
cmc
jb
pop
stos
push
and
and
loopne
ret
sub
mov
jmp
mov
loop
mov
ss
inc
push
das
mov
outsb
or
andb
jae
lcall
fs
stos
stos
inc
xorb
nop
cwtl
push
pmaxsw
adc
push
inc
jbe
jbe
sbb
mov
jl
inc
sbb
jmp
mov
loopne
and
or
add
gs
xor
mov
mov
dec
jne
and
shl
sub
add
push
orl
push
push
loopne
out
repz
jl
add
cmp
mov
pop
lods
sub
add
mov
or
lret
imul
jbe
test
lods
dec
std
or
pusha
aad
fstps
lods
and
sbb
mov
scas
loopne
mov
cltd
and
mov
or
aaa
inc
xchg
cmp
and
mov
out
cli
sbb
mov
add
add
lret
cmpsb
and
loopne
sbb
rclb
mov
and
pop
notl
daa
cmp
jge
addb
inc
push
imul
and
mov
inc
loopne
xchg
mov
xor
lock
enter
pusha
add
mov
jg
pop
scas
dec
sahf
out
and
and
or
mov
data16
push
movsb
inc
mov
insl
inc
inc
mov
scas
div
ret
jl
aam
rolb
in
icebp
dec
nop
and
sbb
ret
outsb
mov
and
lea
mov
mov
aas
jmp
js
mov
push
sti
arpl
push
cli
sub
ja
fwait
sub
pusha
cmpsl
loopne
rolb
mov
mov
pop
pop
in
pusha
loopne
shlb
xor
adc
and
fs
dec
inc
xchg
and
cld
aad
sarb
andb
jmp
and
sti
push
andb
push
adc
xchg
cli
cmp
and
sbb
mov
test
pusha
pusha
adc
xchg
icebp
mov
vphsubdq
pop
lret
mov
and
mov
shl
mov
std
sbb
push
and
hlt
call
loopne
int3
mov
mov
in
stc
xchg
pusha
sti
rclb
pusha
xorb
les
insl
orl
inc
add
xor
cmp
cli
popf
clc
pop
les
inc
xor
pop
pop
sub
dec
repz
xchg
rol
bound
xor
adcb
shlb
pusha
inc
lds
add
add
lret
addb
and
pusha
push
loopne
mov
popf
cli
ljmp
loopne
fwait
and
loopne
pop
push
jmp
inc
pusha
negb
loopne
dec
fs
mov
and
ret
add
fdivs
jbe
pusha
rcl
mov
xchg
outsl
inc
sti
or
xchg
pop
sub
add
jbe
xchg
lret
or
add
addb
pusha
sub
add
and
ss
sub
testb
pusha
roll
and
jne
push
out
fs
mov
lock
mov
orb
aas
jo
scas
rolb
pop
mov
jp
dec
xchg
andb
mov
xor
and
adc
mov
ret
in
clc
cmp
sbb
cltd
push
ljmp
jg
add
dec
xchg
bound
scas
jge
mov
loopne
add
pop
ds
cmp
mov
dec
ret
lock
pop
mov
mov
pusha
push
aad
jl
add
loopne
loopne
dec
leave
fwait
mov
mov
add
cs
loopne
add
loope
lds
or
shrb
cmpb
lcall
adc
out
mov
jbe
int3
mov
and
std
mov
test
loopne
in
push
repnz
push
ret
jge
push
faddl
mov
push
shl
mov
rorb
mov
pusha
callw
dec
insb
mov
loopne
push
mov
roll
lods
add
adc
and
add
mov
int3
stc
pop
notb
cltd
mov
jg
inc
lock
push
pop
dec
adc
in
pusha
pusha
sub
jns
jnp
add
xor
shlb
shlb
shlb
push
dec
push
mov
das
addb
scas
add
mov
enter
add
addb
mov
push
add
pusha
andb
xor
xchg
es
loopne
fldcw
add
ret
inc
rcrl
lret
inc
mov
mov
cmpsb
and
sub
xor
pop
push
dec
mov
mov
loopne
and
jb
mov
rcll
pminsw
lcall
lahf
ss
mov
rorl
fildll
rolb
jb
insl
dec
push
pop
mov
mov
pusha
int
outsb
mov
mov
lcall
lret
and
xor
pop
sub
cmc
mov
mov
mov
ljmp
es
xchg
mov
js
test
inc
ja
jge
mov
or
xchg
fdivrl
push
inc
loope
lods
into
sub
loopne
sbb
mov
jecxz
pop
data16
loopne
loopne
inc
dec
mov
shr
ret
push
push
adc
or
movsb
inc
and
or
loopne
lods
pusha
and
add
jae
jmp
prefetch
andb
xor
in
enter
xor
test
inc
aas
xor
mov
mov
adc
shlb
add
aas
jbe
mov
sbb
xchg
inc
clc
fidivrl
mov
int
add
add
xor
lahf
sbb
mov
les
or
add
jp
stc
or
xchg
add
xorb
pop
std
push
lahf
outsb
pop
aad
push
add
movsl
jb
jecxz
ja
pop
pop
pop
mov
sub
mov
les
inc
push
jg
push
mov
jg
mov
mov
addb
push
dec
xchg
shr
cli
ja
jecxz
fdivr
test
loop
xchg
and
cltd
adc
stc
xchg
or
fsts
pop
add
inc
lahf
call
repnz
ljmp
shrb
xchg
out
push
and
fistl
sub
loopne
ds
addr16
pop
push
push
loopne
inc
sbb
mov
or
and
dec
or
mov
movsl
dec
jecxz
icebp
lock
or
mov
and
dec
xchg
nop
rorl
rclb
dec
pop
es
dec
dec
xchg
mov
push
xor
fdiv
jecxz
xchg
cmp
push
inc
inc
jbe
pop
sbbl
popa
jecxz
daa
std
out
push
inc
loopne
xchg
aam
mov
mov
icebp
pop
dec
cmp
jle
xor
and
gs
and
mov
imul
dec
mov
ja
dec
xor
out
cld
and
jno
dec
je
add
ret
andb
jo
add
xlat
lock
inc
rcll
inc
mov
pop
cld
lock
lock
cmp
lea
jo
jns
inc
xlat
push
imul
cltd
xchg
inc
stc
shrd
jl
mov
and
cmc
and
sub
jnp
jae
shlb
mov
sbb
fs
push
loopne
faddl
loopne
and
rorb
push
clc
lret
pusha
inc
scas
and
jle
andb
js
mov
scas
pusha
rcr
mov
es
and
or
stc
fcompl
push
pop
fstpl
mov
inc
imul
and
add
cli
push
insl
push
pop
cltd
clc
mov
addb
data16
add
andb
lahf
lds
pusha
loopne
stos
shl
hlt
jno
fwait
pop
cmpsb
pusha
and
mov
js
mov
mov
aaa
sub
add
clc
lock
or
rolb
mov
xor
popa
mov
mov
inc
pop
xlat
mov
pop
push
jo
add
clc
xchg
xchg
dec
repz
std
mov
mov
inc
fucomi
dec
xchg
mov
or
add
out
mov
notl
cltd
or
and
int
xchg
inc
lea
stos
andb
in
jecxz
add
pop
add
or
add
pop
fistpl
cmp
ret
push
push
xchg
push
mov
push
loope
and
mov
rolb
xchg
lret
dec
pop
test
mov
loopne
in
int
nopl
adc
repz
push
or
mov
sbb
mov
loopne
xlat
cmc
add
sti
xor
nop
sub
inc
xor
mov
sbb
mov
add
incb
adc
fwait
add
loopne
sbb
rclb
setle
pusha
fists
xor
gs
in
push
or
shll
shl
outsb
pop
aaa
in
mov
outsl
lret
aaa
and
push
ds
stc
adc
fisubrl
sub
lea
cli
gs
mov
pusha
xchg
xchg
stos
pusha
loopne
int3
mov
dec
lcall
loopne
xor
and
cmp
fdivs
pusha
mov
loopne
test
push
addb
adc
and
loop
iret
xor
rcr
rorl
iret
dec
test
pushf
lcall
ror
or
push
sub
pop
cld
push
shl
dec
incb
xchg
add
push
pop
and
sbb
sub
and
sbb
mov
andb
inc
enter
pop
test
shlb
andb
sub
cmpsb
shlb
lret
and
push
cmc
lahf
sub
shrb
inc
movl
jp
mov
pop
mov
inc
and
xor
jns
dec
sti
daa
and
repz
cmp
sbb
insb
lock
mov
jns
jl
add
dec
faddl
mov
mov
inc
filds
loopne
rorb
shl
pop
dec
cmp
adc
pop
push
ljmp
push
test
sub
mov
in
outsb
pop
int
and
add
sahf
les
xor
scas
cmp
aad
mov
xchg
fildl
je
pop
shlb
daa
sub
inc
sub
lds
or
loope
pusha
loopne
sbb
pop
loopne
pop
or
jnp
aam
xchg
sbb
sahf
nop
aad
mov
enter
or
and
cmp
inc
xor
out
rol
lods
or
sbbb
sub
into
or
adc
dec
jge
rolb
dec
das
jns
pushf
in
adc
push
and
adc
add
jg
mov
mov
sbb
add
sbbb
cmp
popa
and
fwait
imul
lea
inc
inc
imul
pop
jge
jno
rolb
pop
or
rcrb
loopne
mov
ja
and
mov
lods
mov
mov
std
push
adc
add
sbb
sarl
dec
mov
in
cmpsl
sbb
not
gs
sbb
mov
and
mov
ja
imul
mov
shlb
inc
mov
ret
and
int3
jl
imul
sti
dec
inc
loop
fcompl
mov
mov
rorl
push
shlb
dec
mov
je
sbb
dec
pop
test
mov
lods
pusha
subb
shrb
pushl
sbb
cli
stc
in
test
addr16
pushw
insb
addb
push
cmpsl
push
adc
or
pusha
xchg
push
push
cmp
jbe
push
in
hlt
pop
lret
and
call
lahf
pop
lock
jl
jge
addb
js
mov
mov
dec
sarl
test
add
outsl
rorb
pop
out
ret
adc
mov
pushf
mov
fists
ss
jg
shlb
adc
cmovge
sub
fldcw
shrl
pusha
mov
and
mov
test
gs
ja
inc
inc
pop
and
sbbb
mov
xor
xchg
xchg
sub
sbb
fmul
and
adc
lock
pusha
inc
pushf
fsubrl
add
xchg
pusha
shl
bound
adc
xor
ljmp
pop
xor
mov
loopne
cmpsb
loopne
xlat
jmp
push
mov
aad
push
sbb
sub
mov
mov
add
lcall
pop
inc
int3
pop
bound
xor
inc
mov
pop
ficoms
ljmp
adc
push
aam
xchg
and
bndstx
mov
inc
and
add
pop
pusha
push
cmpsl
sub
mov
add
ret
push
loope
push
in
fldcw
add
pusha
add
and
cmpb
insl
repz
adc
ja
ss
pop
inc
in
mov
or
add
and
jnp
push
cmp
push
inc
add
add
pusha
add
daa
popa
sub
and
pusha
mov
add
mov
sbb
push
inc
rol
add
adc
mov
push
push
andb
iret
out
pop
fidivs
push
pop
int
sub
dec
dec
sub
push
add
push
aad
into
xor
pop
push
js
pusha
pusha
scas
rolb
sub
popa
mov
out
pusha
push
xor
andl
pop
and
cld
mov
rolb
test
loopne
loope
andb
push
push
and
std
int3
sbb
add
les
rorl
enter
ljmp
lret
pop
jmp
xor
mov
test
pusha
fwait
push
rol
rolb
pop
cmpsl
sbb
jmp
dec
adc
pop
popa
cmp
jp
lahf
xor
rcrb
mov
out
xchg
add
xor
test
and
adc
jecxz
sub
movsl
pop
fisubs
andb
xchg
mov
xchg
sbb
lcall
sbb
out
test
and
rorb
pop
mov
shrl
sbb
mov
and
mov
imul
sub
rclb
mov
and
lock
sub
and
fwait
aaa
std
fwait
add
add
cmp
push
test
inc
testb
rolb
and
sbb
and
rcrb
inc
orb
xorl
mov
std
jae
sub
add
fwait
std
mov
addl
inc
inc
leave
mov
imulb
push
mov
cwtl
adc
sbb
dec
add
lods
sbb
andb
loopne
sub
push
imul
loop
add
movsl
jp
push
xor
scas
mov
and
push
pop
sub
inc
inc
insb
movsb
shlb
andb
mov
aaa
mov
push
loopne
adc
cmpsl
mov
adc
jnp
or
mov
inc
and
stos
mov
push
push
test
loopne
cld
test
das
in
add
loopne
add
xor
dec
cli
or
jecxz
and
add
into
and
xlat
push
mov
in
pusha
addb
out
lock
and
jae
push
jno
outsl
mov
rclb
pushf
fwait
xchg
jl
andb
sub
inc
movsb
inc
pusha
add
orb
out
cmp
cmpsb
rolb
lahf
or
mov
dec
pop
es
mov
ss
xchg
fisttpll
pusha
mov
loopne
sub
dec
xor
cmpl
sub
push
imul
fstl
out
mov
xchg
inc
in
and
out
pop
imul
ss
pop
cmpsb
mov
in
gs
lea
mov
or
add
out
addb
addr16
jo
loope
jecxz,pt
pusha
jae
mov
cltd
sbb
push
bswap
dec
xchg
push
mov
pusha
ret
in
movsl
and
shrb
fwait
int
sbb
pop
popa
out
lret
mov
xchg
gs
les
cltd
scas
pusha
and
in
stc
in
lock
mov
sub
mov
inc
cld
cld
sahf
fcmovbe
cmp
jle
jb
inc
pusha
mov
leave
pop
xchg
sub
repz
icebp
test
jl
inc
loopne
jg
xor
adc
addr16
mov
mov
stos
add
mov
ss
fwait
sbb
stos
mov
test
fwait
cmp
xor
mov
xchg
add
add
and
andb
jne
adc
mov
addb
or
shll
and
mov
pop
push
rolb
xor
loopne
lods
adc
pusha
ja
negl
lahf
xlat
movsl
lds
out
mov
loopne
sub
mov
mov
kmovb
add
add
dec
into
insb
xlat
fstpl
jbe
rolb
mov
mov
rolb
and
test
and
pusha
ljmp
mov
jno
jns
ret
sbb
mov
mov
in
or
ret
pushf
leave
push
insb
mov
jae
addb
stos
loopne
xchg
fmull
and
add
jbe
jl
loopne
push
rol
int
mov
rol
std
cmp
aad
call
mov
test
pusha
xchg
push
add
add
mov
sbb
xchg
popf
jg
addl
inc
push
popf
mov
jecxz
loop
sub
ret
mov
loopne
inc
dec
stc
sbb
pop
mov
sub
add
shrl
stc
test
mov
inc
in
pop
in
sub
outsl
fmul
dec
movsl
ja
js
mov
mov
add
inc
ds
sti
in
shlb
outsb
adc
loopne
sub
add
scas
xor
mov
push
mov
mov
and
aas
cmpsb
shlb
sub
cmp
xor
cltd
or
add
rcl
cltd
jle
addb
sbb
out
pushl
cmc
mov
inc
jmp
adc
and
xchg
mov
push
adc
pusha
push
or
mov
add
loopne
xchg
xor
add
mov
test
jne
loop
push
gs
xlat
bound
inc
mov
push
sub
xorb
xor
fisttpll
fsubs
xchg
push
inc
sub
pusha
je
shrl
cltd
call
fcoml
sub
shrl
mov
adc
fcoml
fsubl
fcmove
out
pusha
loopne
push
push
insl
add
and
andb
shlb
sbb
jle
inc
mov
test
ljmp
xor
ja
jmp
test
addb
das
cli
adc
and
add
cmpsb
mov
push
outsb
push
or
lcall
and
andb
xchg
test
daa
fidivs
inc
jae
pusha
pusha
inc
lds
mov
xor
rclb
pop
insb
xchg
call
jp
popa
fisubl
ss
cmp
jp
inc
jns
inc
outsb
and
mov
fdivrp
mov
mov
add
xchg
dec
jge
lods
jcxz
push
sbb
cltd
jb
add
jnp
dec
sub
fimuls
mov
nop
idivb
sbbl
es
xchg
inc
rolb
xchg
sahf
divl
scas
jns
testb
clc
fdivrs
or
enter
or
add
jp
aas
jg
shrb
add
dec
push
fmuls
pusha
loopne
or
loopne
das
add
addb
xchg
repnz
mov
lock
pusha
add
mov
mov
shlb
clc
stos
and
lahf
jge
vpxor
pusha
and
loopne
mov
push
xor
add
clc
xchg
push
xor
sbb
or
inc
daa
add
aas
push
mov
data16
imul
and
dec
enter
andb
outsb
sub
pop
es
push
in
test
rclb
push
lds
mov
js
js
mov
and
popa
push
test
add
shlb
popf
pop
lds
mov
jge
fmull
enter
jns
mov
aam
dec
and
add
and
loope
adc
insb
cmc
repnz
push
jmp
out
inc
pop
adc
jl
push
call
adc
adc
ret
testl
sbb
and
push
mov
and
mull
push
push
pop
test
xor
push
xchg
pushf
xor
loopne
cmp
lret
xor
dec
xor
pop
jb
stos
inc
pusha
pusha
mov
mov
icebp
mov
pusha
inc
dec
insl
in
push
shrl
mov
test
loopne
xor
lds
and
xchg
popf
fwait
mov
inc
ljmp
loopne
jo
fldcw
andb
inc
dec
pop
notl
andb
loopne
movsl
dec
shlb
and
into
adc
jl
loopne
mov
mov
loopne
les
cmp
mov
scas
rolb
bound
pop
or
push
cwtl
aaa
xchg
nop
mov
loopne
pop
adc
addr16
and
loopne
mov
sub
pusha
mov
push
mov
jmp
or
cmp
shrb
and
jbe
jmp
repnz
bound
dec
and
loopne
shlb
nop
ljmp
daa
mov
cmpsl
dec
test
lea
cmpb
andb
mov
push
mov
jnp
sbb
leave
rcrl
pusha
pusha
and
inc
pop
lods
xchg
mov
mov
lret
add
push
or
int
mov
negl
nop
dec
pop
lock
ret
inc
stos
out
cmp
in
ret
pop
cmp
icebp
cmp
pop
mov
cmpb
cld
ja
or
lcall
ja
mov
xchg
arpl
outsb
in
mov
pop
roll
loopne
add
or
loopne
mov
ss
out
ss
jbe
pop
es
iret
loope
bound
push
cmp
aam
jecxz
add
pusha
xor
test
jecxz
popa
mov
adc
mov
sub
andb
mov
xchg
lret
loop
and
push
incb
xor
cwtl
add
popa
faddp
into
adc
andb
stos
sub
cmp
adc
insb
sbb
stos
leave
mov
rolb
fcmovnu
cmpsb
loopne
in
js
mov
rolb
rcrb
iret
mov
inc
xchg
inc
repz
loopne
push
loopne
mov
ror
pusha
shlb
push
data16
pop
xor
adc
fidivs
add
xchg
pusha
push
outsl
mov
push
ljmp
popf
divl
mov
fs
inc
inc
les
repnz
add
and
fmulp
add
fildl
loopne
pop
and
inc
mov
jmp
add
add
add
pusha
add
mov
or
push
sbb
mov
mov
xchg
cmc
xchg
mov
and
inc
stos
shl
pusha
stos
addr16
sbb
shlb
xchg
and
pusha
mov
pop
sub
add
loopne
xchg
mov
mov
mov
out
nop
jo
pop
out
out
call
sub
and
xchg
mov
push
lea
push
inc
dec
sbb
lcall
mov
add
and
and
pusha
ret
aam
dec
pop
leave
les
andb
aaa
cmpsl
sub
loop
and
adc
sub
rcl
or
loopne
xchg
mov
in
mov
adc
and
jl
sub
mov
push
fists
push
dec
sar
add
sbb
sbb
lds
inc
pusha
adc
dec
or
push
fs
xchg
leave
jae
and
mov
stos
loopne
mov
pop
stos
and
jbe
push
pop
inc
test
pusha
jg
iret
in
sbb
add
push
and
and
loopne
dec
ucomiss
xorb
add
push
inc
sbb
hlt
and
pusha
push
and
inc
popf
aad
mov
addl
and
jbe
lret
mov
js
popa
cmp
imul
xorl
loopne
daa
mov
inc
adc
mov
js
cmp
mov
sbb
mov
cli
push
andb
cli
dec
das
ja
inc
test
addr16
and
sbb
xchg
pop
xor
dec
pop
xor
outsb
xchg
out
mov
inc
and
adc
mov
cltd
push
ss
jge
xor
dec
mov
pusha
es
inc
cmp
nop
sbb
push
adc
pop
lret
cmp
addb
negl
mov
negb
mov
loopne
inc
inc
xchg
pop
push
aam
or
sub
loopne
sub
addb
icebp
test
push
test
add
into
jno
int3
pushf
mov
mov
and
repnz
cmp
gs
into
idivb
or
pusha
pop
push
adc
jmp
add
faddl
ljmp
fists
cld
fsubr
imul
jbe
mov
push
loopne
test
mov
add
andb
sbb
es
loopne
rorl
pop
mov
and
sbb
mov
inc
dec
repz
mov
sbb
inc
sarb
add
fs
rolb
leave
jge
loopne
call
mov
adc
jmp
xor
lcall
cld
or
cmc
das
orl
push
add
je
jo
in
fnstsw
cmc
pop
loopne
mov
iret
stc
or
subl
sbb
dec
test
cmpb
push
pop
inc
cmc
mov
mov
arpl
xchg
or
mov
mov
mov
mov
and
dec
mov
shlb
loopne
fdiv
cltd
fmuls
or
mov
loopne
out
fstps
dec
mov
pusha
cli
xor
lds
imul
inc
rcrb
popa
outsb
subl
cmpb
adcb
andb
clc
ljmp
push
jmp
loopne
sbb
sub
inc
ret
mov
data16
inc
dec
int
pop
push
and
jbe
xchg
pop
les
and
sbb
daa
xorl
pop
rcrl
or
and
inc
xor
inc
push
cmp
mov
inc
call
mov
mov
xchg
pop
loopne
lahf
mov
andb
cltd
stos
jne
lods
mov
out
out
lea
jmp
adc
mov
inc
sub
mov
shr
mov
pusha
and
rolb
mov
mov
cmp
ja
fxtract
or
loopne
push
jno
cmpl
dec
or
addb
dec
xchg
rcr
popa
movb
stos
mov
push
inc
lods
or
inc
jmp
adc
add
clc
repz
inc
mov
insl
push
addb
repz
pusha
dec
aam
shl
bnd
enter
into
mov
addb
stc
sbb
cmovle
adc
push
jp
adc
scas
mov
mov
addr16
adc
loopne
sbb
pop
or
and
dec
pop
inc
jnp
sub
add
gs
mov
cmpl
enter
pusha
mov
sub
icebp
dec
inc
std
inc
imul
std
divb
mov
fcoml
out
xchg
xor
int3
pop
add
and
dec
inc
jge
addb
sub
sub
call
loopne
leave
inc
push
test
and
inc
sub
mov
popf
inc
pop
mov
inc
sub
mov
mov
je
test
fiadds
lret
shll
loopne
jno
jnp
jnp
xlat
in
rolb
cmpsb
and
std
sbb
pusha
jbe
fmull
lods
addl
xchg
sahf
fs
rclb
mov
inc
push
jle
or
je
adc
mov
cli
popf
lock
jmp
mov
mov
pop
stos
rolb
mov
sbb
add
shlb
and
and
ret
inc
sub
stc
adc
adcl
imul
add
rolb
xlat
mov
sub
mov
sub
inc
mov
hlt
pop
out
cmp
inc
rcrb
pop
inc
sub
shlb
add
addl
dec
xchg
insb
jp
popf
ds
push
rol
pop
inc
sbb
jmp
test
fcmovne
pop
inc
jno
and
add
add
cmc
adc
ds
lods
addb
cmpsl
into
scas
add
in
xor
lock
or
insb
push
inc
and
pop
mov
inc
mov
cmp
pusha
pusha
inc
jno
mov
push
xchg
sub
adc
mov
push
clc
loop
mov
out
aas
push
xchg
js
or
pop
mov
test
pop
ja
inc
ror
and
fwait
scas
mov
hlt
ficompl
inc
inc
in
cmpsb
rolb
and
push
mov
adc
rolb
fsts
jbe
fwait
out
and
repnz
push
cmpsl
mov
push
addb
or
mov
in
push
and
mov
mov
into
fwait
scas
pusha
inc
imul
out
lds
pusha
pop
adc
mov
rclb
scas
loopne
mov
mov
in
xchg
gs
or
add
xchg
hlt
loop
pop
push
inc
pop
push
aam
cli
repnz
or
inc
and
adc
cwtl
pop
jbe
add
rclb
addb
andb
shlb
and
adc
loopne
add
xchg
jg
push
mov
pusha
cmp
adc
int3
cmp
pop
pop
int3
dec
movsb
mov
mul
insb
add
out
shl
pop
jo
mov
mov
inc
outsb
lcall
cwtl
movsb
add
cld
cli
std
cmp
push
jno
inc
dec
aad
mov
xchg
xor
add
dec
cmovb
addr16
xchg
mov
repz
inc
loopne
in
and
jnp
pop
sub
mov
outsb
stos
rolb
cltd
pop
leave
jmp
and
js
aaa
aaa
pop
addb
adc
mov
out
xor
popf
arpl
fwait
outsb
aaa
inc
pop
and
and
xchg
fidivl
and
cmp
enter
das
aam
shll
cmpsb
and
ljmp
mov
xorb
xor
or
and
pop
lds
add
loope
out
loopne
push
bound
ret
jg
iret
icebp
mov
lds
sbb
clc
js
inc
xchg
scas
addb
lds
lea
je
dec
dec
xor
xchg
inc
sub
rorb
roll
mov
inc
pusha
ja
xchg
aas
and
inc
push
pop
push
mov
mov
arpl
shll
mov
sbb
dec
push
add
jo
add
xorb
mov
into
xor
call
ret
jl
adc
aas
xor
call
sub
and
mov
js
adc
loopne
mov
jns
in
aam
mov
cmp
sarb
lret
mov
jl
cmpl
loopne
adc
inc
add
insb
jl
jae
cmp
cmpsl
fxam
dec
pop
out
mov
xchg
adc
push
fisttpll
loopne
jns
jns
sbb
add
push
fimull
fisttpll
xor
aam
sbb
mov
pop
mov
imul
loopne
mov
inc
xor
dec
aam
adc
jne
dec
ja
mov
jb
sub
add
cmp
rolb
ret
jmp
push
and
fwait
adc
insl
imul
dec
cmc
xchg
dec
add
loopne
rolb
test
and
gs
das
inc
sbb
or
mov
repnz
rcrb
add
and
add
inc
mov
insb
inc
in
mov
and
adc
push
aam
pop
cmpsl
and
and
pusha
and
fstpl
pusha
cmp
pop
cmp
cltd
popa
mov
inc
popa
lcall
addb
add
mov
xchg
js
in
inc
loopne
repz
mov
add
mov
xchg
fisubrl
adc
call
negl
loopne
xor
rorb
dec
call
mov
inc
inc
ret
lds
push
addb
daa
sti
or
dec
je
xchg
scas
data16
aam
sub
shl
add
mov
loopne
test
pusha
dec
pop
sbb
enter
fldl
lods
push
mov
dec
imul
outsl
out
ds
aas
jp
mov
lock
inc
lret
mov
dec
dec
sbb
cmp
fs
loopne
lret
mov
pusha
and
int3
pop
sti
dec
mov
jnp
push
cmp
add
scas
xchg
adc
mov
jo
stos
add
fstps
ret
pop
lahf
fadds
shl
cmpsl
in
shrb
inc
pusha
mov
sub
and
inc
mov
xlat
add
insl
test
test
add
shr
scas
loopne
jae
and
pop
add
lret
test
jno
fbld
pop
push
cld
rorl
adc
xlat
mov
or
pusha
xchg
sub
loopne
scas
inc
mov
popa
pop
lahf
cli
in
inc
mov
inc
mov
sub
mov
inc
xchg
inc
mov
push
xor
mov
dec
mov
push
jecxz
outsl
xchg
ss
lods
xor
loop
cltd
mov
aaa
in
aam
lret
sbb
jo
call
mov
xlat
push
test
add
mov
mov
xlat
in
addb
pop
jne
mov
pusha
and
out
lods
and
inc
stos
and
test
popf
mov
pusha
add
popa
sahf
mov
sti
in
nop
das
push
cli
sub
pusha
and
pusha
loopne
dec
aaa
sub
inc
pushf
rolb
dec
xchg
mov
and
mov
cmp
rorb
pop
or
pop
data16
outsb
ret
shlb
pusha
mov
mov
and
rclb
pushf
adc
mov
stos
loopne
jge
pop
stos
andb
jmp
shlb
pop
jp
addb
repz
adc
gs
gs
ja
dec
jmp
and
add
inc
mov
jae
enter
push
mov
sbb
fmuls
dec
cmpsl
cmpsb
rolb
fucom
xlat
push
into
add
inc
cmc
sbb
inc
mov
and
mov
add
rclb
mov
out
fwait
sbb
push
cmp
cmc
and
mov
clc
pop
fs
ret
mov
mov
inc
pusha
push
and
add
fstps
add
loopne
fwait
lds
loop
mov
iret
adc
cmpsb
shlb
jnp
xor
sub
add
addb
mov
pusha
loopne
mov
gs
push
int
stos
add
add
xorb
jae
xor
loop
outsl
pusha
adc
inc
loopne
sbb
andl
or
and
sub
mov
add
and
insb
and
inc
faddl
sub
and
inc
loopne
jne
adc
push
pusha
sbbb
loopne
xchg
or
and
insb
xchg
cmp
shlb
adc
and
cmpsb
mov
fildll
mov
inc
movsb
mov
out
add
rorb
loopne
inc
pusha
pop
push
pusha
and
cld
or
mov
fwait
addr16
mov
push
jb
imul
and
and
adc
inc
pusha
push
inc
xor
sbb
int3
repz
inc
imul
in
xchg
jge
push
inc
rcr
mov
or
fwait
push
xchg
add
push
inc
add
xor
inc
icebp
cwtl
popf
icebp
inc
cmp
mov
mov
jns
cmp
fidivl
mov
popa
pusha
cmp
fdiv
push
adc
inc
sarb
xchg
subl
dec
in
pop
ret
in
add
into
jp
inc
add
pusha
mov
mov
inc
pop
cmp
add
lcall
cld
push
add
xchg
or
fistps
in
inc
test
cwtl
clc
adc
and
dec
push
sti
xor
js
fs
fmulp
ds
rcl
pop
ret
adc
pop
insl
ja
dec
cmpxchg
mov
and
push
andb
mov
add
mov
pusha
pusha
sub
cmp
les
stos
and
dec
or
pusha
test
xor
and
loopne
jle
jl
sub
mov
mov
dec
xor
sub
out
sbb
loopne
mov
incl
mov
add
and
ret
fidivl
jge
jg
sbb
rolb
pop
cmp
jle
or
movsl
and
loopne
cmpsl
outsl
rorb
jmp
jne
cmc
inc
mov
xchg
cmpsl
outsl
mov
test
mov
mov
or
lods
les
mov
shlb
mov
and
dec
mov
and
loopne
jo
mov
cmp
inc
pushl
loopne
sub
mov
insb
movsb
loopne
sub
xlat
mov
loopne
push
pusha
pusha
pop
push
hlt
rorb
popf
out
rolb
or
sbbb
push
cli
daa
jle
out
and
dec
sub
mov
lret
sub
pusha
pop
jle
lds
adc
jmp
add
pusha
xchg
and
and
adc
orb
push
xlat
mov
xor
push
or
out
rorb
push
dec
and
stos
pusha
cmpb
jle
xchg
cmp
shrl
dec
lcall
jnp
cmpsb
loopne
shll
sub
ret
jae
dec
lods
pusha
shl
adc
mov
sub
out
cmc
adc
pop
pop
jecxz
ficoml
dec
jb
mov
loope
push
jnp
pop
out
push
adc
aas
inc
push
mov
mov
and
std
outsl
push
and
jno
pusha
add
xchg
pusha
jbe
lock
sub
aam
xchg
lar
loopne
sbb
cmp
cmpsl
mov
mov
mov
sbb
rolb
scas
add
mov
cmp
mov
jae
outsb
xor
or
jge
lcall
add
ljmp
xor
testb
cmc
idivb
jns
and
repz
lret
repz
int
inc
loopne
fiadds
les
daa
sahf
insl
and
sbb
xor
clc
push
sub
popa
add
lret
jge
jne
test
sbb
in
js
lahf
fidivrs
adc
sbb
and
jo
int
pop
add
enter
insl
sub
xor
addl
loopne
test
dec
leave
mov
test
pop
or
and
cwtl
icebp
std
push
push
loopne
in
pop
test
and
and
dec
jnp
lcall
mov
stos
inc
rclb
popf
insb
test
loopne
jb
or
loopne
xchg
enter
jle
shlb
fscale
aad
shll
shlb
les
jl
pop
and
mov
scas
inc
dec
mov
sub
cmp
mov
loopne
pusha
rol
xchg
adc
sub
inc
add
push
cmp
loope
cmp
cwtl
jnp
mov
mov
and
mov
sub
nop
ss
ficomps
dec
inc
or
inc
mov
out
or
orb
popa
test
ror
pop
jecxz
popf
add
cmp
mov
mov
ja
daa
inc
outsb
push
ror
jl
jns
pop
popf
cltd
pop
test
mov
jmp
inc
add
sbb
loope
xor
jno
loopne
outsl
dec
loop
mov
pop
rcl
fs
sub
inc
xlat
push
shlb
pop
insb
mov
inc
stos
xchg
xchg
out
xor
pop
aas
sbb
adc
fucomip
std
adc
shll
add
cltd
rolb
out
stc
enter
stos
rolb
popf
outsl
jp
cli
cs
inc
push
loope
sbb
faddl
cmc
xchg
jecxz
in
nop
out
pusha
fnsave
pop
push
push
mov
cs
mov
andb
insb
inc
addb
push
rorb
loopne
mov
mov
cmovne
pop
decb
jge
cmp
mov
andb
aaa
movsl
test
loopne
cmpsl
fs
or
inc
mov
je
and
cltd
jnp
mov
and
jno
scas
jg
and
daa
mov
inc
mov
add
and
fidivs
fildll
pusha
mov
rcrb
enter
sub
sbb
popf
cmp
cld
cld
repz
inc
shll
inc
nop
cli
fnstsw
xor
iret
mov
out
pop
mov
add
pop
push
or
aaa
cmp
in
xlat
shlb
xor
std
adc
aas
push
inc
pusha
lea
push
add
mov
or
loopne
pop
push
inc
push
dec
cmpsl
mov
mov
test
sbb
lcall
and
nop
rol
and
sub
inc
pusha
in
adc
hlt
or
mov
adc
cltd
out
pop
out
test
xor
sub
adc
icebp
dec
mov
sbbb
andb
out
xchg
cmc
negl
fimull
pop
pop
jo
test
inc
sbb
call
and
cmc
xchg
and
leave
idivl
in
jp
rolb
xchg
jns
xlat
push
loopne
movsl
cwtl
popf
xchg
cmp
or
imul
test
dec
out
icebp
mov
or
xor
push
push
mov
add
iret
sbb
add
stc
scas
ret
stos
push
xchg
mov
pusha
fisubs
rol
clc
pushf
or
and
cmp
loop
inc
call
shlb
sub
pusha
pushf
push
shl
cmp
loopne
arpl
andb
mov
add
xlat
inc
adc
test
pop
sbb
jmp
add
pusha
and
pop
imul
movd
pusha
add
sub
mov
in
jae
sbb
or
mov
xchg
xchg
mov
push
push
add
mov
xchg
aam
pop
mov
mov
xchg
mov
pusha
andb
inc
xor
cmpsl
jg
arpl
enter
bound
enter
andb
xchg
mov
shlb
dec
xchg
adc
ds
icebp
test
ret
sarb
add
mov
or
inc
push
mov
xchg
fwait
pop
jnp
adc
test
mov
push
mov
mov
loopne
ja
sbb
test
sub
xchg
mov
aad
jne
shlb
mov
add
mov
jp
test
enter
pusha
jl
insl
sub
adcb
sti
cmp
push
pusha
inc
flds
andb
mov
lock
addb
sub
inc
inc
xchg
imulb
addb
and
inc
mov
out
mov
addb
je
dec
sbb
xor
adc
inc
repnz
mov
jb
sub
sub
add
pusha
out
hlt
shll
repz
rcr
aaa
mov
shlb
cmp
cmp
mov
or
and
shlb
cltd
stos
shl
mov
addb
daa
xchg
jns
xor
and
rolb
inc
xchg
bound
and
jmp
inc
or
test
dec
add
clc
call
rorb
cwtl
mov
inc
xor
loopne
sub
xor
fists
rorb
or
pusha
inc
mov
push
loopne
push
inc
inc
cmp
xor
sbb
in
xor
pusha
das
inc
mov
fldcw
lods
andb
sbb
mov
xchg
lret
jge
xchg
mov
pusha
inc
sub
repnz
lahf
inc
push
cmp
lahf
sub
cmp
shl
rorb
xlat
dec
iret
lret
addb
shlb
dec
fwait
aaa
test
pusha
inc
inc
andb
sbb
pop
imul
lock
imul
testl
and
and
adc
inc
andb
ja
pop
mov
mov
pop
aaa
jb
iret
lods
addb
cmp
adc
add
jg
shlb
adcb
in
mov
repz
push
and
xchg
push
push
mov
or
div
es
pusha
int
adc
test
sbb
sub
ss
shrb
inc
cmp
fisubrl
and
mov
sbb
shlb
orl
xchg
pusha
mov
rolb
mov
sub
sti
test
dec
aam
pusha
add
xor
sub
enter
jmp
ficoms
rep
loope
std
sbb
sbb
rolb
sub
mov
and
sbb
in
xchg
push
loopne
fnsave
inc
add
jmp
shlb
mov
sbbb
rolb
jge
arpl
addb
popa
sub
loopne
pusha
sub
inc
jnp
inc
repnz
jle
or
jae
repz
mov
rolb
imul
inc
jl
incl
fcom
out
push
pusha
pusha
mov
pusha
mov
loopne
and
and
ret
aas
inc
int3
aaa
inc
jp
dec
sub
cwtl
nop
push
dec
jecxz
dec
or
aas
or
rol
mov
inc
cwtl
addr16
lea
aas
and
sbbb
or
inc
mov
inc
jg
repnz
xor
mov
mov
ljmp
ss
pop
inc
jno
loopne
sub
and
loopne
jns
or
push
mov
out
jge
out
rclb
sub
and
leave
lret
mov
sub
das
xor
lea
push
lea
inc
xorb
mov
cmp
add
xchg
popf
sbb
negl
jns
rolb
in
loope
sbb
addb
incb
mov
cmpsb
addb
mov
add
and
repnz
addb
or
int
repz
loopne
fwait
insl
jns
mov
repnz
icebp
fbstp
push
add
add
scas
lods
and
jp
rolb
cmp
js
loopne
gs
repz
dec
mov
push
mov
inc
stos
andb
scas
and
jae
aas
outsb
fisttpll
loope
inc
loopne
mov
push
scas
shlb
ss
sarb
cmp
push
inc
inc
sub
pop
and
and
dec
inc
hlt
adc
insb
jno
xchg
sub
ficoml
cmp
sbb
rclb
add
mov
sti
jne
andb
inc
add
push
loopne
lret
outsl
gs
ret
lret
rorb
and
mov
aaa
mov
shlb
fistps
ds
cmp
leave
inc
xlat
cmp
jne
mov
or
andb
mov
mov
rolb
shlb
mov
jo
test
mov
out
in
sahf
fs
add
sbb
nop
test
pusha
mov
jnp
stos
inc
and
xchg
fwait
rorl
adc
cmp
xchg
lock
or
add
mov
inc
outsb
push
pop
std
loop
stos
addb
loopne
add
repz
adc
aam
ret
loope
and
fs
mov
add
cmc
and
subb
push
roll
rcrb
inc
cwtl
and
sbb
and
lahf
mul
bound
addb
add
and
shrb
xorb
rcll
inc
and
inc
dec
fstl
add
sub
push
addb
or
mov
addb
imul
in
mov
movsl
mov
dec
insb
fdivs
sbb
jmp
call
inc
pusha
jl
jb
lahf
push
cltd
xchg
dec
jle
icebp
sbb
sbb
or
pusha
addr16
sub
addb
xorl
stos
and
fsts
jns
lea
add
shl
jo
dec
or
xchg
or
mov
cwtl
pop
xor
add
stos
mov
dec
add
mov
pop
inc
lock
push
andb
cmpsb
addb
loopne
pop
xor
lods
and
mov
and
add
sbb
push
pusha
loopne
pushf
push
and
xor
mov
mov
and
sbb
mov
push
add
pop
or
and
push
and
adc
mov
add
and
and
mov
in
fcoml
and
adc
mov
loopne
jns
mov
cmp
inc
lret
dec
dec
jns
and
sbb
or
and
inc
xchg
lea
sbb
jnp
jae
and
cmp
daa
test
inc
outsb
jge
sub
mov
rcr
add
ret
sti
jno
fistps
and
or
add
lcall
shlb
pushf
into
mov
pop
sbb
dec
jo
pop
icebp
mov
rorb
mov
xor
setp
lock
jmp
sbb
xchg
xchg
add
sbb
mov
jo
xchg
mov
push
adc
stos
jecxz
inc
lea
xchg
adc
inc
in
out
loopne
xorl
add
loopne
idivb
decl
jecxz
cmc
pop
push
arpl
pop
aaa
mov
fstpt
mov
pop
sbb
dec
xchg
movsl
aad
mov
mov
rorb
loopne
pop
shrb
inc
dec
and
xchg
mov
fcompl
test
and
cmp
sub
pop
push
lods
and
loope
fsubp
sti
hlt
pop
jg
add
cmp
push
push
pop
dec
hlt
push
insl
mov
dec
movl
pusha
and
insb
sbb
loop
push
rol
fdivs
movsb
mov
cmp
hlt
pop
sub
mov
mov
dec
cltd
sti
aad
and
insl
mov
add
and
imul
orb
and
shlb
call
inc
mov
mov
push
shlb
mov
mov
ss
pop
push
aad
xchg
lret
lods
fsubrl
add
inc
loopne
adc
std
jns
mov
inc
lods
xlat
imul
mov
xchg
cmp
xchg
pop
enter
lods
add
pushl
rolb
dec
mov
inc
mov
loopne
lock
push
rolb
shll
in
lret
out
dec
test
or
outsb
xor
and
cwtl
popa
push
addr16
push
call
mov
dec
push
js
ret
test
cmpb
lock
mov
or
addr16
cli
or
loopne
ljmp
das
dec
cmp
and
mov
mov
push
add
jae
nop
jp
sbb
pop
push
loopne
into
mov
lds
call
inc
scas
adc
aaa
or
cmp
mov
inc
loopne
scas
loopne
inc
sub
add
mov
out
loope
ja
rolb
mov
jp
xchg
into
cmpsl
xchg
out
and
enter
pusha
adc
and
lahf
or
lods
rolb
cmp
xor
rorb
push
movsb
pusha
cmpb
adc
jo
jg
or
inc
ja
in
fisttpll
loopne
mov
loopne
outsl
sbb
andb
jp
dec
outsl
rcll
push
dec
push
imul
dec
dec
shlb
lret
loope
insl
jbe
push
cmpsl
or
decb
add
test
stos
add
xchg
jno
data16
loopne
out
outsl
adc
mov
cmp
dec
lods
aad
rolb
xor
out
jge
mov
nop
jo
flds
inc
add
pusha
dec
mov
stos
call
mov
and
cltd
jmp
xchg
sbb
ror
push
fimuls
inc
and
push
aam
mov
or
sbb
insb
adc
mov
pusha
mov
outsb
adc
xchg
sub
jl
xchg
les
shl
pusha
mov
push
inc
loopne
adc
pop
adc
xchg
xchg
and
addb
repz
cmp
pusha
inc
in
add
and
std
lds
cmpsl
cld
testl
jle
add
push
push
ret
cmp
movsb
inc
add
insb
xchg
shl
int3
add
cmp
mov
mov
jns
cld
push
dec
jns
xor
int3
cmc
pusha
sub
adc
mov
rorb
xchg
cmp
movsl
scas
pusha
pusha
stos
dec
ficomps
mov
push
and
sub
mov
enter
dec
jle
add
sbb
sahf
or
inc
mov
push
inc
and
and
lahf
in
pop
hlt
and
stos
int3
push
xchg
cld
push
dec
dec
xchg
sub
lret
xor
add
shlb
jnp
rcll
sub
mov
jecxz
jb
ret
adc
out
mov
and
push
jmp
pop
mov
jns
mov
ss
jecxz
ja
inc
outsl
xor
and
pushf
cmc
dec
jo
xchg
sti
mov
pop
les
pop
popl
loopne
sub
add
cld
imul
inc
add
fildll
insb
dec
jbe
icebp
test
and
and
iret
movsb
pusha
and
and
and
xor
push
adc
mov
test
loopne
es
jg
dec
xchg
push
jno
shlb
adc
aam
xchg
sarb
test
and
mov
mov
xchg
fcoml
push
sbb
ss
or
shlb
pusha
andb
dec
xor
or
loopne
push
inc
xchg
orb
test
addb
and
ficoml
push
cli
inc
xor
pop
dec
scas
pop
inc
shr
popl
in
lea
add
bound
add
mov
pop
dec
xor
std
mov
fldt
addb
test
and
mov
add
subb
push
fdivs
adc
shlb
fnsave
sub
shrb
out
js
je
and
fs
jne
rolb
dec
lret
aas
jns
nop
je
addb
jg
daa
mov
loope
pusha
ror
mov
add
and
std
sub
bound
pushl
pop
pop
cmp
scas
add
push
pusha
mov
inc
cmc
cmp
and
inc
push
in
stos
and
fstl
jmp
sub
mov
pop
mov
xchg
mov
shrl
sbb
mov
and
testb
sarb
pusha
mov
mov
inc
lds
out
jg
inc
mov
mov
adc
mov
sbb
jl
or
inc
add
shrb
icebp
arpl
mov
xor
popf
mov
ficomps
rolb
fldt
pusha
cmp
or
loope
mov
inc
mov
cltd
ret
mov
mov
pop
fbstp
pop
mov
cmpsb
andb
or
add
ficoms
xlat
push
pop
cltd
jmp
sbb
stos
into
cmp
fnstenv
add
push
dec
enter
sub
js
dec
jmp
stos
add
xorb
popf
pop
jle
mov
dec
cwtl
jo
dec
ja
shll
fiadds
pop
shlb
pop
sarb
fcompl
inc
mov
inc
jmp
add
xchg
loopne
mov
mov
push
mov
mov
pusha
and
xchg
stc
xchg
ror
push
les
mov
addb
loopne
jae
sub
mov
aas
xchg
scas
rolb
adc
mov
mov
inc
int
jp
mov
lods
and
outsl
shlb
mov
bound
xchg
in
ds
add
in
pop
sahf
xorl
andb
fcompl
pop
dec
cmpsl
mov
dec
out
sub
out
inc
mov
enter
pusha
pop
sub
pusha
xor
pusha
add
sbb
xor
test
shlb
fimull
jnp
or
mov
mov
mov
pushf
or
int
lret
or
add
das
into
add
sbb
test
lods
jge
inc
jmp
les
mov
adc
xor
rorb
xchg
pop
mov
pusha
rcrl
pop
in
jae
add
fdivl
jns
mov
test
stos
or
mov
push
shlb
xchg
imul
mov
pop
xor
popf
pusha
push
cmp
lock
rcrl
int
mov
ljmp
adc
pusha
loopne
mov
mov
and
aas
add
loopne
jle
inc
sub
cmp
mov
cli
xor
xchg
loopne
call
and
jecxz
das
inc
das
sub
and
loopne
imul
shl
andb
pusha
inc
inc
mov
icebp
loop
pop
add
outsb
outsb
aad
movsb
shlb
rolb
jg
fidivrl
out
lods
and
movsb
loopne
mov
scas
mov
adc
jno
xor
rol
fucomp
and
loopne
mov
arpl
and
rolb
ja
mov
mov
add
add
mov
les
test
shl
mov
add
cld
xor
and
add
rcrb
push
aaa
aas
clc
xchg
hlt
loopne
sub
adc
cmp
push
rorb
stos
loopne
test
mov
sti
add
call
arpl
mov
sub
loopne
mov
fisttpll
sbb
and
xchg
push
xchg
add
pop
mov
xchg
arpl
sahf
push
inc
mov
jno
add
fucomi
xchg
pop
pop
cmp
movsl
pminub
push
inc
mov
mov
sbb
add
add
pop
inc
sbb
dec
add
mov
jle
jne
inc
movsb
add
jecxz
mov
and
cltd
into
mov
adc
push
loopne
adc
push
xchg
aam
adc
inc
and
inc
int
cs
loopne
xor
das
cmc
xor
sbb
add
pop
decb
dec
dec
xchg
pop
stos
and
cmp
leave
fistpl
aam
mov
push
or
mov
jns
out
callw
inc
or
xlat
cld
fisttps
inc
inc
pop
shlb
andb
mov
arpl
cmpsl
mov
insl
push
pusha
push
inc
and
hlt
leave
call
inc
test
inc
fwait
dec
pop
cld
addb
xchg
xchg
outsb
push
pushf
xchg
mov
and
ret
in
mov
mov
push
ljmp
xor
idiv
rorl
push
std
push
sbb
inc
xor
cmpsl
push
fidivs
dec
or
xor
shl
lods
mov
aas
xor
adc
push
push
cld
mov
mov
add
mov
push
cli
repnz
add
xchg
fs
icebp
dec
sbb
mov
popf
xchg
inc
mov
mov
cmc
mov
loopne
leave
ss
add
dec
arpl
pop
outsb
inc
hlt
sub
mov
es
scas
pusha
shrb
inc
pusha
mov
addr16
out
popf
inc
cmp
push
fistps
cli
jb
push
adc
xlat
jg
leave
scas
int
ljmp
cmc
loope
inc
and
sbb
fisttpll
bound
rcrl
icebp
fistpl
insl
lods
loopne
cmp
ss
ret
inc
or
inc
andl
lods
shl
scas
xchg
adc
adc
xchg
aam
inc
popf
lret
dec
pop
mov
cmp
addb
imul
shlb
inc
loopne
nop
dec
sarb
sbb
push
pop
sbbl
cmp
xchg
jnp
inc
inc
adc
mov
and
push
jb
pop
jle
sub
subb
mov
jge
or
pusha
pusha
pop
jno
das
adc
mov
cmp
add
leave
pop
repz
adc
cmp
inc
sar
movsb
loopne
add
push
or
or
movsb
shlb
addb
inc
jmp
push
pop
pop
adc
loopne,pn
xchg
insb
imul
add
sbb
cmpsb
pusha
pusha
lea
sti
mov
loope
fisttps
and
sub
pusha
fsubrs
inc
pusha
xchg
sub
push
out
adc
nop
lds
into
dec
dec
xor
shlb
orb
cmp
sbb
imul
mov
loopne
add
mov
movb
or
push
sbb
add
aaa
push
push
fisubrs
orb
inc
mov
inc
shrb
mov
insb
bound
cld
or
jmp
lret
push
call
arpl
rclb
std
sbb
adcl
and
sub
test
mov
dec
cmp
hlt
sarb
dec
je
gs
jp
mov
rcrb
stc
lods
add
jne
xchg
scas
push
and
loopne
leave
pop
mov
loopne
push
mov
add
push
xor
fstl
push
lods
bound
add
pop
and
inc
in
leave
add
push
insb
shll
nop
cmp
jge
xor
xchg
pop
in
insl
or
mov
sbb
push
push
bound
dec
outsb
popf
mov
push
pop
addr16
and
mov
sub
push
pusha
mov
outsl
inc
ret
aaa
ss
hlt
stos
mov
inc
pusha
cltd
cmp
mov
in
push
and
loopne,pn
insb
jg
loopne
lock
adc
sbb
cmp
push
cltd
adc
sub
loopne
out
and
inc
pop
inc
mov
dec
mov
or
pop
outsb
addb
jmp
inc
add
dec
xor
mov
or
push
shlb
adc
gs
ljmp
andb
add
loopne
pusha
arpl
cmp
adc
jl
adc
xchg
inc
xchg
adc
adc
push
movsb
rol
ret
ror
movsl
adc
pop
inc
addr16
xchg
or
mov
test
and
gs
xchg
sarb
or
fdivrs
loopne
ficoms
loope
mov
rcrb
pop
in
rcl
loopne
lret
xor
test
xor
and
cmpsb
mov
jns
xchg
push
and
test
dec
xor
je
enter
xchg
cmp
roll
inc
inc
lret
rolb
sbb
es
loopne
lret
mov
lods
shl
mov
or
inc
dec
adc
and
push
add
inc
into
clc
lock
inc
fldenv
and
mov
mov
xchg
sbb
mov
mov
dec
test
jne
and
inc
mov
mov
cmpsl
cmc
data16
out
xchg
or
cmp
cmpsb
add
sbb
sub
xor
mov
mov
dec
addr16
dec
mov
test
add
push
cmc
adc
mov
addr16
loopne
adcl
pop
stos
add
jae
iret
arpl
stc
cmp
divb
aad
xchg
add
lcall
pop
xchg
sahf
outsb
dec
mov
pop
mov
pop
ja
imul
dec
mov
pop
push
adc
rclb
pushf
repz
and
subb
andb
frndint
mov
fstl
enter
shlb
ret
xchg
fcoml
add
and
or
inc
cmpsl
das
adcl
mov
mov
sti
lods
or
mov
mov
pushf
outsl
jle
jne
add
enter
add
add
pop
loop
xchg
mov
add
lock
sub
mov
pusha
leave
stos
add
incb
loopne
mov
repnz
out
addb
lods
inc
loopne
popa
or
xor
cltd
pop
xor
lea
push
mov
add
xor
inc
mov
int
repnz
movsl
inc
rep
xchg
out
mov
pusha
leave
mov
andb
sbb
jne
shl
lahf
xchg
push
push
adc
inc
add
pop
decl
scas
shlb
mov
mov
incl
sbb
loopne
and
pop
pop
loope
mov
inc
mov
loopne
cwtl
dec
xor
inc
jo
mov
add
mov
insl
cmpl
flds
cli
aas
pop
or
or
add
fdivrl
push
pusha
mov
addb
push
cmpsb
mov
andb
arpl
adc
leave
call
cmpb
mov
pop
les
loope
add
or
cmp
lds
leave
jnp
mov
insb
jbe
inc
loope
mov
fstps
and
or
xchg
fldl
and
mov
and
cmpsb
and
or
mov
test
out
mov
lcall
jb
jnp
aam
loopne
adc
daa
pushl
mov
mov
sub
popa
addb
fcmovne
data16
xor
xchg
xchg
aas
push
mov
and
and
in
xor
popf
mov
sbb
mov
enter
in
fstpl
add
jmp
loopne
cmpsl
sbb
push
add
add
dec
addr16
inc
rorb
dec
jb
fidivs
out
push
and
movsl
loop
add
cmp
mov
adc
hlt
dec
cwtl
movsb
shl
icebp
sbb
pop
stos
mov
je
jne
or
dec
push
adc
jnp
mov
rolb
inc
pop
out
mov
pusha
mov
inc
xchg
jp
ret
push
movsl
imul
loope
out
inc
mov
add
dec
mov
stos
mov
xlat
loopne
push
addb
in
xchg
scas
add
popw
push
add
add
jmp
pop
rorl
jmp
push
inc
add
test
xchg
loopne
jne
inc
adc
and
lret
sbb
dec
int
or
add
int
cs
pusha
add
sbb
xchg
mov
mov
sahf
inc
jecxz
xchg
outsl
and
add
jmp
or
in
outsl
xchg
loopne
outsb
jecxz
mov
decb
push
fidivl
xchg
inc
cmp
loope
lods
inc
sbb
mov
sbb
inc
xor
adc
push
cmp
push
movl
sti
pop
stos
pusha
rclb
cmpsb
pusha
shlb
lock
test
fnstsw
lret
mulb
hlt
mov
mov
pop
gs
sub
inc
mov
mulb
add
aam
jae
dec
mov
ret
lret
xchg
xchg
or
ljmp
sahf
fisttpl
mov
xchg
scas
add
dec
push
adc
cmp
test
xor
inc
cmp
test
and
insl
push
push
adc
add
pusha
jge
sub
sarb
scas
add
mov
xchg
les
adc
repz
jg
cwtl
imul
int3
out
mov
mov
shlb
mov
xchg
inc
lcall
popf
cmpsl
sbb
out
aaa
lock
andb
push
loopne
ds
xor
mov
jbe
insl
enter
rolb
and
outsl
cmp
pusha
inc
push
aas
fxsave
scas
pop
xor
inc
rcll
popa
jp
int3
mov
and
fstps
and
scas
inc
add
fsts
jle
pusha
add
and
into
dec
ss
adc
loopne
rol
shll
in
ja
adc
xor
or
and
ret
dec
fdivs
icebp
mulb
rol
ret
add
inc
cmp
test
lods
sbb
cmpsb
loopne
scas
addl
and
jnp
lret
movsb
add
xchg
mov
xchg
test
add
int
lea
loopne
push
mov
dec
pop
subl
lock
aad
or
mov
shlb
and
jecxz
fildl
lods
loopne
mov
jle
andb
and
pop
mov
ljmp
add
imul
sar
pusha
inc
mov
or
mov
and
aaa
stos
rcll
sbb
push
and
pusha
xorb
sahf
imul
fmuls
das
stos
shlb
loopne
out
and
dec
adc
mov
daa
fmul
dec
daa
ret
test
mov
and
aam
pop
ljmp
inc
adcb
les
in
sub
stc
ffreep
sbb
lret
inc
out
jecxz
sub
dec
jns
and
rorl
mov
and
fbstp
or
loopne
stc
arpl
cmp
inc
test
rol
pushf
out
mov
repz
ret
pusha
cmpsb
mov
inc
push
pusha
loopne
nop
arpl
mov
inc
xor
xchg
repz
ljmp
fucom
pop
inc
xchg
xor
out
bound
jp
mov
and
xor
ret
mov
adc
push
jno
inc
add
xchg
xadd
lock
and
icebp
push
sub
rcl
fiadds
jp
or
mov
pusha
and
adc
add
and
mov
mov
push
addl
pushf
hlt
flds
add
and
outsl
add
sbb
mov
or
lods
jne
aaa
nop
jle
or
inc
adc
iret
jecxz
add
fs
mov
loopne
and
arpl
enter
mov
xlat
xchg
ss
pop
loop
xchg
popa
in
push
sbb
xor
jmp
mov
pusha
pop
dec
shlb
lea
mov
repnz
adc
mov
inc
pusha
pop
into
in
fisubrs
inc
push
addr16
fldl
jl
dec
jmp
shr
call
cltd
iret
test
shlb
sbb
inc
shlb
mov
xor
jns
jge
add
int3
or
adc
inc
hlt
jge
push
cmp
and
mov
sub
jmp
std
adc
and
pop
lock
lret
fstl
rdtsc
popf
lods
je
jnp
das
adc
push
roll
mov
jge
movsb
loopne
inc
addb
rcrb
imul
loopne
bound
insl
loop
pop
adc
add
inc
add
mov
xchg
inc
mov
loopne
xchg
adc
jns
jnp
stos
loopne
mov
in
jge
mov
int
fsubl
fsubl
pusha
mov
push
sbb
shlb
adc
mov
dec
xor
div
sub
dec
lods
iret
in
adc
shlb
popa
mov
loopne
addr16
mov
lods
aad
push
or
and
mov
adc
cwtl
mov
fdivl
in
js
pushf
stc
inc
fildl
test
call
add
and
inc
fcoml
jg
xlat
mov
out
ja
mov
dec
inc
xchg
lods
and
out
fists
rolb
scas
mov
push
pop
enter
sti
jp
dec
cmp
sub
pusha
mov
adc
shll
inc
int
pop
lret
and
inc
xchg
lock
in
xchg
into
cmp
adc
add
push
cmp
pop
dec
shlb
rolb
push
jmp
mov
mov
movsl
pop
mov
fs
and
inc
stos
loopne
out
nop
mov
testl
ds
out
divl
xor
jbe
sub
xor
insb
xor
lret
lods
add
mov
fs
inc
adc
data16
addb
dec
mov
adc
cltd
jo
push
loope
add
push
andb
cltd
test
loopne
loop
sbb
xlat
je
xchg
xchg
int
fcoml
mov
movsl
lds
sbb
adc
cli
fdivs
dec
add
push
adc
mov
cmp
loopne
and
xor
js
mov
jns
xchg
push
add
cli
dec
xchg
pusha
loop
and
xchg
arpl
pop
sbb
mov
sti
shlb
xchg
cmp
lahf
fldl
cs
sarb
mov
int
stc
jg
xchg
lods
inc
pop
mov
scas
adc
mov
mov
pusha
js
idivb
dec
xchg
fcmove
push
aaa
nop
test
sbbb
imul
rolb
sub
sti
fildll
leave
and
mov
pop
jo
xor
add
out
sar
xchg
xchg
pusha
inc
pushf
add
aaa
imul
outsl
fs
lock
and
add
scas
shlb
inc
pusha
test
and
pusha
subb
xorl
subl
pop
lret
xchg
xor
rolb
in
jnp
mov
fidivrs
lods
loopne
add
loopne,pn
mov
loopne
inc
xchg
popf
lock
ret
sbb
mov
andb
pop
or
mov
sahf
xor
dec
daa
sbb
mov
daa
pop
push
cli
xchg
add
or
and
or
loopne
out
xchg
xor
shlb
jne
pop
jp
das
test
rorl
dec
mov
call
shll
push
jb
inc
andb
xor
jge
iret
js
mov
jae
shlb
test
pusha
pop
inc
mov
mov
and
xchg
mov
loopne
lock
or
pusha
test
mov
and
repnz
andb
adc
sbb
xchg
sbb
jb
loopne
clc
fstpt
adc
dec
repz
mov
cmc
int
mov
outsl
or
mov
andb
cltd
jbe
ja
fidivrl
mov
movsb
and
scas
and
jle
lret
xchg
xchg
inc
fldt
shl
mov
mov
xchg
in
popa
mov
popa
xor
jnp
jo
loopne
xor
lret
mov
dec
lea
fists
imulb
call
sbb
push
mov
xchg
cld
mov
movsl
iret
cmp
xor
fstl
jb
mov
add
loopne
addr16
sub
adc
and
mov
decb
loopne
xchg
lahf
imul
sbb
and
jnp
aas
push
cmp
and
push
adc
addb
push
andb
xor
dec
adc
sub
xchg
push
outsl
js
fiaddl
lret
shlb
clc
dec
fmull
sbb
mov
in
sbb
cmp
stos
inc
int3
inc
mov
jnp
fdiv
loop
loopne
pop
xlat
push
xchg
imul
add
scas
inc
outsb
and
pusha
inc
std
pop
mov
sbb
mov
cmp
aad
jg
dec
jge
aam
cli
mov
loopne
and
dec
scas
scas
xchg
bound
aas
js
ljmp
loopne
mov
movsl
push
daa
mov
xchg
movsl
dec
mulb
loopne
xchg
ss
add
loopne
cmpsb
add
xor
sub
decb
ja
in
shr
pop
and
sbb
pusha
out
mov
add
xchg
adc
mov
xor
enter
mov
xchg
mov
push
push
in
dec
je
pusha
sub
adc
inc
sbb
jmp
hlt
and
mov
ja
in
sub
loopne
andb
jnp
shlb
inc
and
mov
addl
icebp
mov
shlb
inc
loopne
jg
inc
xchg
cmc
fstl
pop
pop
repz
jb
mov
cld
lods
shlb
movsb
add
xchg
push
rcrl
adc
and
sbb
leave
rorb
push
ds
lods
movsb
pusha
inc
rolb
jo
jne
mov
xchg
call
loopne
arpl
imul
xor
xchg
pop
repnz
mov
mov
ficoms
fsubl
mov
and
add
mov
sub
xchg
push
pusha
leave
imul
shlb
loop
rolb
mov
and
int3
mov
mov
mov
sub
pusha
add
repz
inc
and
fcoml
or
push
sar
push
in
in
xchg
mov
bnd
shrb
add
loopne
push
jno
pushf
out
movl
leave
sarb
cmp
fdivl
js
mov
and
push
repnz
xlat
xor
loop
cmp
inc
shl
dec
das
sbb
testl
and
sti
sbb
pushf
pop
mov
dec
imul
add
and
xor
aas
dec
pusha
cmp
lret
sub
shr
adc
jge
and
loopne
mov
adc
loopne
sarb
inc
sbb
inc
icebp
out
inc
push
fwait
popf
imul
stc
xchg
mov
shlb
idivl
pop
and
adc
fcmovu
mov
sub
add
adc
shlb
shrl
fnsave
mov
shlb
out
mov
fldt
xor
push
test
lahf
pop
daa
xchg
jg
xchg
stos
xchg
pop
std
out
add
je
outsl
jg
pusha
inc
jecxz
xchg
ljmp
out
int
jmp
xchg
mov
arpl
mov
sti
ja
add
mov
dec
pop
jge
sub
inc
imul
add
sub
pusha
addr16
pop
dec
in
jno
and
add
pop
cmp
test
jmp
addb
mov
cmc
xchg
and
imul
mov
scas
sbb
mov
push
jp
add
inc
addb
not
or
in
andb
jge
shl
jmp
push
pop
jae
jp
add
xor
and
inc
cmp
loopne
jb
mov
xor
lret
sbbb
mov
loopne
mov
xchg
xchg
mov
loopne
outsl
in
scas
mov
pop
mov
jns
test
and
inc
ss
sbb
clc
stos
inc
loopne
mov
cmc
xor
cld
jnp
pusha
add
cltd
xor
push
call
outsl
sub
jno
mov
andb
imul
std
fwait
pop
loopne
add
loopne
outsb
mov
jmp
cmp
test
and
jbe
push
mov
lahf
xor
daa
loop
mov
sbb
xchg
lahf
lock
dec
insb
jp
pop
mov
addb
mov
add
xchg
rorb
jo
mov
int
mov
mov
lods
inc
add
call
xchg
fs
push
bound
mov
pusha
inc
pop
and
into
fcomps
fmuls
xor
pop
xchg
stos
aaa
rcr
xor
and
js
roll
inc
mov
cs
push
xchg
inc
push
jmp
std
pushf
test
pusha
fdivr
enter
ds
sbb
push
scas
rolb
fwait
pop
std
xchg
adcb
jp
mov
cmpl
add
inc
pop
lret
mov
sub
mov
mov
mov
pushl
mov
cmp
mov
xchg
les
adc
push
push
mov
bound
fists
pop
or
mov
loopne
cmpl
add
mov
push
cmp
inc
xchg
dec
and
sub
fucom
jne
add
mov
add
dec
xor
in
sbb
sub
stos
or
and
add
loopne
ja
aaa
outsb
je
mov
test
imul
fcoml
pop
jbe
and
pusha
loopne
lcall
and
gs
test
pusha
loope
test
lods
lods
shlb
aad
or
push
lahf
in
nop
std
and
sbb
and
shlb
xor
add
jo
inc
divb
fidivrl
addb
inc
xor
in
sete
pop
and
pop
sbb
inc
shlb
addb
loopne
sbb
inc
inc
ret
bsr
xchg
fbstp
sbbl
addb
and
xchg
and
popa
cmp
je
nop
jmp
xor
mov
lahf
jnp
mov
fsub
jb
ret
fs
and
and
cs
and
std
mov
pop
mov
sbb
sarb
pop
add
rorb
in
xchg
enter
mov
pusha
dec
cmp
shlb
pop
push
rol
jo
dec
push
loopne
rcll
dec
sbb
rorl
cmp
mov
hlt
arpl
out
mov
push
pusha
inc
sbb
sub
push
test
push
popf
push
std
dec
adc
loopne
and
inc
inc
addl
and
rsqrtps
pop
mov
jmp
mov
or
loopne
rolb
pusha
cmp
adc
pop
jae
outsl
dec
push
add
pop
and
movsb
rol
cmc
cmc
je
inc
push
add
hlt
sub
filds
roll
cmp
add
dec
fisubrl
add
aaa
dec
inc
and
mov
xchg
imul
push
push
cwtl
push
inc
andb
jp
ds
fs
and
hlt
lods
ss
push
sbb
cs
add
movsl
mov
mov
xor
gs
inc
add
add
push
cmpsb
loopne
ret
xchg
insl
dec
dec
xor
and
cmpsb
loopne
and
loopne
sub
fs
test
adc
add
lahf
std
loopne
push
out
sbb
mov
xor
add
or
rol
dec
stos
out
xor
outsl
inc
pop
hlt
push
push
aas
hlt
ja
stc
ljmp
sbb
addr16
roll
decb
xchg
pusha
imul
sbbl
sub
pusha
or
loopne
xchg
andb
xchg
je
loop
inc
and
cmp
scas
cmp
jo
iret
je
sbb
cmp
add
and
adcl
cmp
cld
jb
fs
cltd
lods
jno
mov
mov
stos
loopne
adc
repz
mov
andb
imul
in
xchg
loope
test
mov
mov
test
and
jl
pop
cli
andb
mov
add
mov
shrb
lcall
std
inc
dec
imul
loopne
cmp
int3
xchg
lcall
loopne
pop
in
push
sub
add
and
add
add
jg
or
pop
cmp
pusha
sub
orb
ljmp
rcr
mov
outsb
xor
daa
or
sarb
mov
and
loopne
push
mov
sti
pop
push
insl
dec
mov
xchg
frstor
rol
shlb
xchg
lcall
lods
add
ja
scas
and
and
and
pop
and
inc
addb
in
aad
mov
jb
adc
cmp
push
fs
sub
loopne
aad
mov
mov
jmp
and
mov
add
mov
dec
aaa
int3
std
jnp
mov
and
and
jmp
jo
jne
call
and
in
aas
jo
addb
jge
loopne
dec
xchg
pusha
test
and
mov
inc
inc
sti
lea
pusha
inc
push
mov
and
ds
mov
jns
iret
movsb
inc
add
loopne
cmp
bound
sbb
rol
pusha
and
shrb
or
add
jge
cs
and
repz
cmpsb
addb
dec
push
xlat
cmp
pushf
addr16
push
xor
mov
mov
ret
sbb
mov
rclb
dec
push
loopne
in
addr16
mov
into
inc
add
adc
add
loopne
das
mov
cmp
sub
inc
fsubrs
andb
dec
jae
loopne
push
in
pusha
inc
loopne
and
xchg
sbb
mov
fcomp
cmp
push
push
orps
push
xchg
push
push
int
cmp
test
xorl
dec
or
inc
xlat
call
or
mov
push
adc
or
loopne
mov
mov
dec
iret
cmp
sti
movl
lahf
sub
xlat
clc
xchg
inc
inc
jle
ret
std
mov
and
dec
dec
fxch
jp
mov
pop
mov
pop
sub
sbb
in
push
dec
xor
shl
cmp
imul
jno
sub
dec
sub
sub
and
faddl
stos
pusha
loopne
add
add
rorb
xchg
push
in
out
inc
jo
sub
test
pop
adc
pusha
loopne
mov
pusha
leave
shlb
addb
rolb
and
movb
jne
xor
push
repnz
and
icebp
mov
pop
nop
jnp
and
pusha
mov
sahf
enter
mov
cmp
imul
inc
or
pusha
inc
daa
sbb
and
xor
loopne
in
inc
sub
mov
call
pop
jae
sbb
jecxz
lret
mov
call
inc
in
jle
inc
decb
orl
mov
addb
lods
and
pusha
and
hlt
repnz
adc
pop
mov
imul
and
popf
loope
fildll
and
out
popa
xchg
push
iret
jae
outsl
pop
jge
int3
test
add
dec
mov
shl
jmp
sub
lcall
add
jle
xlat
and
sti
push
fcmovbe
repnz
sahf
or
es
and
push
into
and
sti
rcrl
mov
mov
pop
jnp
mov
repnz
outsb
pop
sar
outsl
jl
inc
loopne
shr
addr16
mov
popa
dec
xchg
add
sbb
pushf
pop
mov
adc
adc
inc
xchg
mov
inc
lds
or
or
inc
cmc
repnz
adc
shl
test
leave
sub
add
adc
adc
inc
shlb
and
test
iret
add
sti
arpl
add
nop
mov
lahf
ret
loopne
lods
dec
adc
sbb
inc
cmpsb
andb
out
clc
dec
xor
loopne
shlb
mov
jns
mov
jbe
in
sbb
mov
inc
loopne
andb
adc
mov
or
inc
andb
hlt
add
mov
pop
sbb
popa
jl
sbb
cmp
std
add
sbbb
add
ss
push
mov
out
pop
and
sar
xchg
inc
and
add
mov
mov
add
outsb
push
outsb
std
cmp
std
pop
mov
pop
imul
cmp
or
pusha
add
test
ffreep
and
aad
inc
pop
icebp
push
add
inc
fstps
std
pop
push
lret
pop
pushf
mov
stos
loopne
jne
push
push
jae
stc
lea
mov
cmp
xchg
int3
mov
mov
addb
mov
ret
or
fstpl
or
and
aam
inc
mov
pop
andb
insb
insl
in
mov
addb
clc
and
cltd
mov
pusha
sub
jnp
mov
loopne
ss
and
js
cltd
and
aas
fs
test
rolb
pop
adc
push
cld
mov
and
mov
andb
pusha
pusha
cmp
and
loopne
pop
lret
fwait
insb
test
add
sub
mov
and
imul
test
pop
push
pusha
inc
mov
and
mov
loopne
ret
outsl
mov
and
dec
fmull
mov
and
ds
out
cld
in
xor
enter
lret
push
fisttps
in
cmp
lods
andb
or
enter
dec
jl
cmp
mov
stos
mov
orb
jge
nop
repz
jmp
pushf
dec
into
loopne
std
xchg
scas
andb
insb
adc
add
adcb
jns
test
mov
jg
neg
lea
das
xchg
in
cli
addb
int
xchg
mov
sbb
pushf
scas
mov
xor
pop
fcmovb
nop
jns
pop
and
in
lea
dec
pop
pop
pop
xor
inc
pusha
pop
ja
push
mov
sub
add
cmp
les
loopne
pop
bound
sti
lods
pusha
adcb
push
scas
cmp
push
jns
fwait
pop
aam
imul
and
and
test
inc
lea
addb
cmpl
inc
inc
jl
or
inc
mov
add
add
mov
enter
lods
sub
xor
dec
push
mov
pop
adc
xchg
mov
lcall
push
scas
jge
xchg
xor
int3
or
addb
jg
push
add
fwait
mov
and
push
lock
push
repz
sbb
and
leave
into
dec
push
dec
in
shrl
pusha
pusha
gs
pop
loope
cvtps2pi
xchg
dec
jl
mov
addb
jl
rcll
out
std
pop
popf
fidivrl
xchg
andb
inc
and
mov
ret
inc
cmpsb
mov
loope
pop
mov
mov
add
mov
push
fwait
push
inc
mov
cld
loop
rsqrtps
add
mov
lods
lret
inc
push
and
inc
test
push
lret
lods
pusha
shl
in
mov
add
aam
lret
push
addb
pusha
push
loopne
mov
addb
frstor
in
cmp
adc
addb
inc
mov
mov
pop
test
pusha
dec
mov
jae
sbb
rorl
inc
rcl
iret
pusha
inc
jnp
push
incb
mov
jle
aad
movsl
dec
sbb
mov
push
mov
std
daa
decl
xchg
clc
scas
mov
out
xchg
loopne
call
and
lock
shlb
push
scas
mov
movsb
addb
and
out
int3
xchg
mov
add
cwtl
gs
pusha
mov
in
jge
and
add
sbbb
push
adc
in
xchg
jnp
xchg
add
jmp
outsb
dec
pop
daa
pop
lods
loopne
xor
jns
leave
nop
es
xchg
addr16
add
pop
sub
pusha
add
inc
std
out
aas
lods
rol
jecxz
add
mov
jo
icebp
in
mov
xchg
pop
ljmp
ss
or
xor
mov
sbb
xor
addb
mov
popf
dec
icebp
addb
and
loope
jmp
cmp
or
int3
imul
cltd
jp
out
loopne
mov
or
mov
jmp
addb
jns
loopne
fisubl
and
pusha
loope
sbb
or
mov
mov
and
xchg
in
fadds
loopne
sar
test
mov
jl
push
inc
and
sub
dec
add
loopne
fistpll
jge
pop
push
mov
pusha
test
mov
in
imul
shl
mov
inc
mov
pusha
jae
inc
mov
mov
inc
data16
inc
add
pusha
shrl
adc
test
andb
ds
rcrb
ljmp
negb
jns
scas
sbb
add
xor
push
loopne
in
icebp
loope
pop
xor
shlb
sti
dec
jno
or
adc
rolb
and
fsubr
pop
mov
jl
sbb
push
fucomip
js
out
gs
jnp
popf
or
insl
dec
loope
xor
daa
dec
sbb
dec
mov
xchg
out
and
rcl
roll
rolb
mov
lods
sub
inc
mov
xchg
testb
push
fs
cmp
mov
mov
ss
outsb
or
or
pusha
cli
jle
sub
and
push
fmulp
ret
push
add
inc
add
loope
pusha
add
cmc
mov
sarb
cmp
inc
inc
mov
mov
lods
and
jnp
sub
pop
das
bound
jp
and
loopne
out
jmp
add
mov
add
xchg
add
test
and
outsb
aam
fmuls
mov
test
pusha
sub
rolb
jo
hlt
stc
or
xor
in
mov
lods
pop
or
mov
add
das
lret
or
inc
or
pusha
imul
mov
inc
scas
mov
push
inc
xlat
lret
add
add
sbb
or
xchg
add
aam
and
cmpl
mov
lcall
adc
xor
je
sub
fsubs
loopne
testb
pop
imul
rolb
pop
lcall
outsb
mov
push
loop
aam
loopne
add
add
rolb
pop
fwait
std
inc
add
xchg
adc
lods
sbb
shlb
inc
mov
dec
insb
pusha
lret
lcall
and
pop
bound
loopne
pop
and
mov
cmc
cmc
in
jecxz
neg
das
and
rclb
and
scas
jl
ficoml
adc
mov
add
add
pusha
and
ljmp
dec
mov
xor
repnz
cli
sbb
sub
leave
sti
ja
xchg
xor
negb
xchg
dec
add
add
inc
stos
loopne
rcrl
mov
push
xor
pop
aas
xchg
cmp
push
inc
cli
push
repnz
or
mov
jmp
or
movsl
xor
out
or
and
lret
pushf
std
add
test
mov
nop
push
ljmp
add
xchg
out
dec
and
dec
fsts
aaa
mov
xchg
inc
or
mov
shrb
add
xor
scas
shl
dec
addb
jo
xchg
popf
scas
cmp
xchg
rorl
rolb
adc
imul
pop
inc
mov
xchg
or
add
pop
out
mov
inc
pusha
mov
imul
sub
xor
and
inc
pop
dec
fdivs
jecxz
popw
push
pusha
mov
inc
movsb
andb
scas
mov
arpl
loop
test
add
sbb
add
push
das
adc
call
rorb
fmulp
out
pop
inc
or
and
adcb
inc
add
pop
mov
inc
jnp
test
sbb
xchg
inc
add
and
orb
leave
daa
adc
lock
cmp
and
and
loopne
aaa
mov
add
lahf
stos
and
into
test
shrb
inc
inc
mov
ret
addr16
jb
stc
mov
push
mov
mov
outsl
sub
outsl
jl,pt
mov
cmpl
fwait
add
loope
movsl
shrb
rorb
mov
xor
orl
add
rorb
jl
adc
jbe
test
faddp
add
fdivl
push
push
xchg
sbb
push
pusha
add
pusha
inc
or
and
sti
out
xor
loopne
fstpt
into
lcall
jp
and
in
jmp
add
shrb
pusha
inc
jno
rolb
stos
lret
std
push
popf
dec
jg
test
inc
enter
mov
pusha
sbb
dec
dec
shl
xor
repz
iret
ret
xchg
mov
sub
shll
inc
xchg
pop
outsl
jae
and
and
fdivrs
jg
add
inc
lret
push
and
add
lret
jne
dec
push
mov
inc
lods
rcll
xchg
push
inc
xlat
mov
pop
inc
fistl
push
add
call
inc
xchg
mov
in
mov
jns
cmp
movb
stc
dec
push
and
cld
mov
lea
shlb
dec
cmp
iret
aas
cli
mov
xchg
xchg
subl
adc
xchg
adc
or
push
and
loopne
lcall
adc
pusha
add
push
mov
xchg
fidivrs
movsl
cmp
stc
pop
adcl
adcl
ret
aam
inc
push
cld
or
xchg
dec
push
inc
loopne
mov
or
pusha
movsb
inc
sarb
sbbb
es
adcb
les
fdivrs
stos
cli
outsl
aaa
jne
mov
pusha
inc
pop
testl
test
loopne
xchg
push
push
lods
adc
in
mov
add
jbe
cmp
movsl
adc
pop
inc
jmp
insl
sbb
loopne
add
xor
add
add
rcrb
add
pusha
sarb
pop
mov
dec
push
add
pop
or
push
shll
mov
mov
or
loopne
mov
into
cmp
stos
sub
test
mov
pop
mov
mov
repz
push
mov
mov
movsl
and
and
movsb
add
ds
sbb
je
inc
rcrl
mov
mov
in
cmp
sbb
mov
cmp
idivl
int
dec
push
rolb
inc
loopne
cmp
push
sbb
lcall
stc
roll
jge
ficompl
xor
pop
aaa
cld
jnp
imul
hlt
subl
xchg
pop
lret
gs
lock
push
addb
adc
js
shlb
cmpsb
pusha
mov
and
push
add
add
fbld
and
push
hlt
dec
add
orb
pusha
in
push
pusha
rol
sti
adc
and
mov
adc
nop
out
mov
addb
dec
popa
pusha
cld
lods
push
xor
mov
pop
jbe
push
aas
cwtl
cmpsl
inc
jecxz
mov
inc
insl
icebp
aam
int3
dec
out
add
jg
int3
mov
sub
and
sub
bound
jle
xchg
push
jp
mov
pop
in
bound
es
jp
inc
fstpl
jno
fs
dec
mov
sub
insb
jo
fsubs
inc
inc
mov
mov
pushf
cli
ss
in
push
pop
adc
inc
sbb
sbb
add
add
adc
mov
pusha
inc
jne
and
dec
mov
in
mov
ss
and
subl
and
xor
popf
adc
pop
mov
sbb
loope
movsb
pusha
loopne
mov
out
mov
pusha
adc
aaa
shll
pusha
pop
dec
inc
dec
jmp
adc
mov
mov
loopne
femms
andb
mov
xchg
xor
stc
sbb
cmp
mov
and
xchg
mov
push
in
jg
loopne
pop
fildl
mov
andb
andb
pop
movsl
arpl
pop
xor
push
xor
jnp
jp
and
mov
add
cmp
arpl
jecxz
sub
mov
inc
mov
addb
or
mov
fwait
mov
pop
call
pop
sahf
scas
out
mov
cmp
mov
mov
pop
cmp
xlat
int
xchg
push
rol
push
add
xchg
push
lock
js
pop
mov
sbbl
or
mov
inc
cmp
cld
icebp
ja
sub
mov
nop
mov
pop
xchg
pusha
jae
cmp
jg
lcall
int
xchg
jae
mov
push
test
mov
pop
cmp
loope
out
lcall
mov
push
mov
andb
sub
pusha
cmp
xchg
lcall
push
mov
enter
pop
mov
pop
gs
in
pop
aas
outsb
lods
sbb
inc
gs
pusha
push
or
loopne
push
mov
cmp
jl
cmp
push
loope
dec
in
jnp
or
fidivrl
addb
and
inc
clc
iret
call
xor
add
scas
call
push
add
cld
jne
lret
mov
andb
dec
lock
mov
adc
jb
lods
pusha
and
cmc
cld
adc
leave
cmp
mov
adc
imul
inc
pop
cld
push
andb
cmp
int
xlat
push
mov
jnp
jle
jne
cmpsb
add
or
add
jns
fistps
shl
aas
inc
mov
dec
out
out
test
addr16
imul
ja
ljmp
push
fs
int
sub
pusha
mov
pusha
shlb
int
pop
stos
push
pop
xchg
cmp
sbb
loopne
push
jle
xchg
mov
and
add
mov
xor
cli
jmp
add
jnp
sub
in
fists
push
push
ret
rolb
ja
fidivl
psubsw
imul
loopne
mov
out
fdivs
mov
adc
mov
push
add
lods
loopne
sbb
cmp
fs
xor
add
notl
out
push
lret
xchg
out
and
and
pusha
imul
inc
out
movsb
pusha
inc
aam
sub
fildl
in
stos
and
movsl
jnp
jnp
mov
leave
mov
rolb
rolb
xchg
inc
orb
daa
in
ret
cmp
and
into
mov
fstl
mov
pop
push
pop
add
or
mov
xchg
notb
dec
ror
pop
loop
dec
call
enter
je
in
movsl
ljmp
mov
add
jno
pop
inc
das
jecxz
fwait
adc
sarl
sahf
aaa
in
std
cmp
dec
aad
clc
jns
jo
in
xchg
jl
rolb
add
add
mov
push
sub
mov
stos
shlb
dec
pop
or
add
arpl
cmp
jecxz
xchg
add
rclb
shlb
mov
pop
jmp
sti
pop
dec
repnz
and
xor
and
inc
stos
push
ret
pop
jae
imul
xor
cmp
insl
sbb
aaa
out
pusha
pusha
xchg
fdivrp
ret
mov
inc
or
pop
clc
add
and
stos
shlb
xor
loopne
arpl
call
dec
add
andb
jmp
test
ljmp
mov
loop
shlb
add
mov
mov
dec
repnz
outsb
in
ret
inc
sti
idiv
into
push
loopne
cwtl
dec
imul
int
jae
movsb
rol
dec
and
and
push
and
ja
jmp
insb
lock
xchg
scas
lret
jo
rolb
pusha
and
cmpsl
sbb
arpl
jnp
inc
adc
stos
mov
stc
xchg
aam
in
andb
fildl
pusha
add
js
and
andb
sub
mov
popf
or
add
and
or
test
shl
push
enter
inc
xor
xchg
pop
shll
push
pop
stos
out
dec
push
loopne
subl
add
mov
iret
xchg
aaa
fwait
pop
lods
lcall
jns
inc
pop
jns
movsl
xchg
and
mov
push
add
add
shlb
pusha
pop
xor
push
roll
jmp
xor
sarb
inc
sahf
clc
shrl
shl
jae
add
inc
stos
mov
add
into
test
xor
aam
mov
and
xlat
jo
daa
iret
adc
daa
in
pop
sgdtl
shlb
cmp
and
push
push
mov
imul
mov
mov
xlat
mov
add
cli
pop
cmp
call
jb
and
and
cmpsl
and
mov
pop
lods
mov
lcall
mov
add
lahf
mov
sbb
pop
inc
fcmovb
stc
sub
add
mov
movsl
push
aas
loopne
cmp
mov
inc
cmpsl
dec
int3
movsb
andb
pusha
mov
inc
decb
mov
fnsave
and
pusha
and
mov
movntq
loop
or
fs
adc
mov
push
addb
clc
mov
sub
add
inc
out
mov
sbb
mov
jb
dec
push
add
aas
adc
shll
loope
jge
sub
mov
push
sbb
add
add
xchg
loopne
rolb
mov
and
fdivr
or
cmp
inc
mov
or
and
js
cmp
jle
andb
xlat
or
adc
in
and
shlb
andb
inc
aas
mov
aam
pushf
lock
and
mov
dec
xlat
cmp
lea
sub
add
iret
je
fiaddl
movsl
lcall
xchg
jno
add
push
pusha
inc
sbbl
xchg
outsl
in
jae
fsts
arpl
pop
outsl
xchg
insb
sbb
mov
fdivrs
aas
sti
test
or
outsb
out
pop
fistl
pop
xchg
pusha
mov
pop
jae
add
testb
mov
add
cld
ret
pop
sahf
add
add
rcrb
shlb
lahf
push
push
pop
xorl
and
push
testb
pusha
inc
inc
mov
jne
sbb
jecxz
xor
and
cmc
cmpsb
mov
xchg
lret
jle
inc
pusha
sub
and
add
loope
inc
addl
push
roll
add
inc
movsb
loopne
cmpsl
fidivrl
pusha
loop
and
repnz
aaa
aad
aaa
jno
pop
inc
mov
pusha
mov
loopne
jbe
inc
loopne
push
mov
xchg
push
push
inc
xor
loope
int
cli
mov
dec
pop
cmp
and
out
push
jo
loopne
inc
jno
push
lahf
push
mov
cmp
add
pusha
sbb
icebp
dec
and
cmpb
sub
lea
cwtl
fdivrs
jp,pt
inc
and
subb
jg
cmpsl
xchg
fiadds
xchg
or
jnp
and
ret
lret
jno
xchg
cmp
mov
jnp
mov
push
addb
lods
loopne
xchg
xchg
dec
pop
andb
adc
popa
pop
add
imul
out
mov
xchg
push
inc
into
rclb
test
pusha
mov
loopne
cmp
mov
loopne
aad
jmp
push
inc
xchg
inc
push
iret
mov
adc
loopne
sbb
ficomps
xlat
add
pusha
mov
and
pop
rcl
cld
loop
mov
sahf
jg
addb
and
and
into
xchg
sub
and
fcoms
xchg
xchg
daa
icebp
lods
loopne
aaa
nop
gs
dec
andb
repnz
jnp
and
and
add
jbe
jmp
dec
inc
dec
out
in
or
inc
jle
shrl
inc
push
pop
out
pop
out
lea
cmp
pusha
mov
push
add
add
cltd
inc
insl
or
mov
outsb
or
loopne
add
in
outsl
scas
mov
cmp
or
fucom
pop
mov
cmp
mov
jmp
add
mov
leave
in
jae
mov
jge
shlb
dec
xchg
sbb
cmpsl
cmp
imul
jp
inc
rorb
pusha
aad
mov
jo
lret
mov
andb
inc
mov
js
fs
sub
or
orb
into
lret
sti
sti
xchg
sar
jae
mov
mov
pop
dec
dec
adc
push
cmc
sahf
enter
lods
cmpsb
add
cld
mov
inc
jge
insl
loope
push
imul
mov
lret
pusha
sub
and
sub
repz
jae
inc
mov
in
inc
enter
lods
pusha
inc
or
and
xchg
popa
in
dec
sub
cwtl
cmpsb
shlb
shrb
cmp
mov
cmpsl
inc
or
hlt
fbld
mov
add
xchg
xchg
testb
pusha
mov
pop
mov
loopne
fs
dec
movsl
test
lret
adc
inc
repnz
mov
sub
mov
dec
out
xor
sbb
icebp
sub
shl
mov
push
push
sub
sahf
or
jnp
mov
rorl
sub
andb
xchg
lret
outsl
xchg
je
adc
xchg
mov
mov
ficoml
push
pop
call
add
inc
mov
push
in
sub
mov
inc
adc
inc
orl
rolb
add
outsb
aam
mov
mov
out
pusha
add
out
imull
jnp
popa
xor
je,pt
lods
and
aas
test
sahf
sub
xor
push
xlat
mov
popf
add
pusha
mov
clc
outsl
xchg
pop
shrb
dec
and
jbe
dec
jl
shlb
bnd
es
dec
mov
add
shlb
pop
repnz
and
fxtract
jg
sarl
test
pusha
rclb
pusha
and
fs
or
enter
xor
push
add
loopne
xor
notl
xor
data16
shlb
rorb
mov
jle
push
push
andb
xchg
mov
mov
inc
jo
shl
add
andb
xor
sbb
push
mov
mov
cli
sub
add
xlat
clc
mov
jmp
sbb
pop
cmp
loopne
loop
es
pop
aad
ja
arpl
sbb
loopne
pop
ret
xor
push
loopne
mov
sbb
dec
jb
cmp
mov
inc
xchg
push
es
loopne
popf
ss
xor
xlat
xchg
fnstsw
neg
popf
xchg
int3
add
xchg
push
cltd
pop
cmp
inc
lods
jl
dec
pusha
clc
inc
ss
xchg
mov
xchg
test
pusha
xchg
xor
mov
sbb
fld
inc
movsb
mov
andb
rcll
jnp
push
pop
push
and
add
dec
pop
jbe
add
decb
adc
mov
and
mov
xchg
cmp
sbb
jae
insl
aas
xor
push
adc
decl
jns
cmp
jno
inc
rcll
xchg
push
mov
rorb
inc
subb
lock
mov
mov
pusha
xor
gs
add
nop
sbb
dec
sbb
rolb
and
mov
mov
lock
lcall
mov
push
sub
rolb
dec
das
xor
insb
mov
mov
into
mov
dec
cmpsl
mov
ja
repz
xchg
mov
loopne
or
mov
enter
mov
scas
shrb
les
mov
dec
imul
cltd
cmp
dec
dec
xor
in
and
cmp
jg
enter
pop
icebp
push
pop
lods
sub
scas
xor
call
mov
push
pop
das
or
mov
shl
pusha
pusha
repnz
cmp
or
rorb
sbb
out
fcomp
xchg
mov
mov
jge
and
mov
int
sbb
lock
lahf
jg
add
or
pusha
bound
and
pop
fcompl
inc
ret
mov
adc
enter
inc
xchg
fadd
and
sahf
dec
jg
loopne
ss
mov
inc
lods
pusha
inc
les
cmp
outsb
pop
hlt
out
jle
xlat
sub
add
sti
mov
adc
out
ficoms
xchg
sub
mov
std
inc
rorl
aaa
mov
sti
jl
mov
shrb
rcrb
in
shl
insb
inc
jno
addb
mov
add
lods
ss
test
mov
js
xchg
push
sbb
bound
push
addb
pop
into
movsl
or
add
loopne
cmp
mov
pushf
xchg
fs
sub
int3
adc
pusha
inc
pop
fidivrl
loopne
lds
mov
call
js
sub
xchg
pop
dec
jp
loopne
in
mov
in
fidivl
cli
and
and
xor
int
xor
push
xor
cwtl
pop
and
sbbb
lahf
cmp
xchg
icebp
and
mov
cmpsb
and
out
sub
subb
imul
and
mov
movsl
notl
aaa
mov
pusha
fsubrl
dec
mov
mov
lret
cmp
aad
mov
mov
shl
aaa
sahf
ja
pusha
and
scas
add
inc
and
inc
dec
imul
mov
shlb
loopne
pushf
push
sub
mov
test
add
and
mov
lcall
sti
and
inc
insl
push
jnp
xchg
ret
mov
jnp
out
out
inc
mov
adc
mov
add
sub
xor
insb
shl
pop
sbb
xchg
xchg
mov
subl
lahf
subl
rcrl
push
ljmp
ss
rolb
push
nop
pop
dec
sbb
mov
rcrl
adc
gs
cltd
addb
add
jmp
cwtl
mov
push
in
inc
push
rolb
seto
insb
insb
and
push
fadd
and
stos
and
in
bound
and
cmp
mov
pusha
sbb
add
push
ljmp
mov
jae
addb
inc
add
sahf
adc
lahf
aad
nop
jno
pop
in
dec
jnp
inc
sbb
pop
mov
xor
es
jp
cmp
mov
mov
test
jg
inc
dec
push
arpl
addb
and
das
dec
enter
pop
lret
imul
aaa
cmpsl
shlb
sbb
push
inc
pusha
xchg
cli
enter
push
pusha
aas
mov
mov
mov
jp
shlb
sbb
insl
mov
mov
mov
xchg
lods
outsb
cltd
inc
cmc
adc
dec
sub
loop
inc
adc
ret
sub
fmuls
and
lods
loopne
lret
lcall
leave
scas
pusha
inc
pop
repz
shlb
popf
sti
out
pushf
mov
sub
pusha
std
lock
xchg
ss
add
pusha
cwtl
adc
rolb
scas
mov
mov
test
rolb
addb
pop
dec
imul
add
and
loopne
mov
and
pusha
adc
mov
fldl
sbb
dec
push
sbb
xor
jl
add
rorb
inc
mov
into
mov
jno
ret
fsubrl
andb
rcrb
and
lock
rcl
sub
adc
jle
sbb
sbb
call
shlb
pushf
jns
in
movsb
mov
push
add
mov
or
insl
sbb
lcall
cmp
shlb
andb
pop
mov
out
dec
mov
inc
add
mov
xchg
push
hlt
ret
xchg
imul
sub
pusha
in
sti
mulb
inc
loopne
mov
test
add
loop
imul
add
ret
xor
cmc
sbb
mov
mov
xchg
out
aam
aam
fmuls
addb
cmp
inc
mov
pop
pop
mov
inc
push
loopne
dec
shlb
mov
pusha
cmp
xchg
dec
js
pusha
mov
cmp
mov
shlb
mov
adc
dec
ja
shlb
or
add
jae
mov
inc
jge
inc
sar
ret
jg
scas
shlb
pop
arpl
out
pusha
pusha
insb
aaa
popa
mov
push
and
mov
aaa
lds
rcrl
in
scas
shlb
testl
pop
mov
sub
jecxz
sbb
sysenter
mov
shl
pop
mov
jg
dec
dec
mov
and
pop
mov
mov
sbbb
mov
ret
push
ljmp
cmp
mov
or
and
xor
and
je
xchg
adc
aaa
mov
loopne
xor
jnp
out
pop
or
and
mov
mov
mov
and
jp
notl
cmpsl
pop
loop
sub
sbb
into
mov
adc
jns
push
sub
sub
pusha
cld
mov
pop
add
loopne
push
and
xchg
cli
or
sub
sbb
sar
popa
mov
outsb
xchg
adc
mov
mov
and
pusha
add
pop
loop
inc
loopne
cmpsl
jle
xchg
rolb
js
mov
sti
sub
andb
pop
mov
jbe
inc
jne
mov
sub
or
xchg
sub
cmp
dec
outsb
pop
clc
outsb
push
mov
cmpsl
dec
xchg
xlat
lock
and
out
sub
xchg
ss
loop
movsb
pusha
andb
pop
repz
mov
add
inc
inc
popf
loop
mov
mov
pop
jbe
fsubl
and
xchg
pusha
and
loopne
mov
adcl
mov
mov
lods
ss
and
loopne
push
daa
in
mov
pop
mov
pusha
xchg
add
inc
cmp
jno
add
inc
mov
das
jl
addr16
inc
dec
or
int3
or
test
rolb
sti
xchg
fsubrl
repz
mov
imul
rorb
rcrb
or
ror
push
nop
mov
sarb
xlat
sbb
fstp
out
subl
push
fcoml
cmp
test
js
lret
mov
and
xchg
pop
loope
gs
or
and
fistl
out
ljmp
popa
jp
cmp
and
or
add
mov
and
aad
add
imul
mov
inc
and
pop
fsts
aas
dec
xchg
mov
inc
sub
add
pop
xchg
xchg
addb
repz
pusha
add
in
inc
push
mov
xor
leave
inc
icebp
jg
rol
testb
int3
out
daa
stc
outsl
mov
in
dec
ret
and
pusha
and
sub
pusha
ljmp
lret
dec
and
dec
in
adc
jns
jmp
push
nop
imulb
and
fcoml
mov
in
cmpl
loopne
jg
mov
sub
mov
inc
popf
jae
inc
and
loopne
cmp
push
fiaddl
add
push
sbb
movsb
loopne
loope
fstpt
cmp
sbb
or
divb
cmpsb
addb
insl
push
sub
add
loopne
mov
rol
add
scas
loopne
pusha
leave
movsl
cmp
pusha
inc
lock
ret
inc
jp
adc
sub
callw
xchg
xor
arpl
test
xor
lcall
xchg
ror
bnd
rcrl
ret
sub
push
xchg
lahf
out
lret
je
mov
aam
lret
dec
sub
inc
aad
jnp
sub
mov
pusha
xchg
ja
aad
jns
mov
fs
leave
push
sahf
and
pusha
dec
dec
shrl
jb
lret
mov
mov
mov
insb
repz
and
inc
pusha
test
add
sub
loopne
ljmp
cmp
dec
adc
jmp
sbb
mov
rorb
shrb
mov
cltd
arpl
mov
add
negb
sahf
pop
pop
xchg
and
lret
repnz
leave
add
loopne
insl
pusha
sub
add
pop
xor
pop
cmp
fwait
js
pop
adc
insb
lea
test
shlb
add
xchg
push
das
push
xchg
and
pusha
ja
mov
mov
sub
lock
pusha
jle
and
andb
and
pop
sub
addb
pushf
icebp
adc
mov
nop
out
lcall
or
mov
jecxz
mov
and
pop
sar
mov
mov
rcrb
mov
push
je
jmp
out
insl
js
iret
and
aam
andb
and
pusha
mov
popf
pop
mov
lock
dec
sub
cmp
xchg
loope
mov
inc
jmp
mov
sbb
xchg
scas
pop
fmuls
insl
lahf
outsb
mov
push
mov
enter
mov
pusha
pusha
sbb
jmp
dec
jl
push
jb
mov
adc
incl
aam
mov
pop
push
push
jmp
pusha
mov
push
pusha
inc
fsubs
gs
jne
mov
add
jns
or
andb
test
loopne
ljmp
mov
inc
rorb
in
sarl
and
lcall
rcrb
loopne
faddl
movsl
add
sti
adc
adc
jmp
cmp
repnz
in
sbb
pop
outsl
cmp
pop
and
and
popa
fnstenv
popf
sbb
push
adc
stos
shlb
push
mov
sub
pusha
rcrl
add
pop
xchg
lret
jp
ret
mov
shlb
adc
pop
into
popf
addb
pop
rol
mov
mov
imul
sti
adc
xor
add
and
push
xchg
pusha
jmp
push
add
sbb
loopne
fdivrl
and
push
mov
mov
dec
in
pusha
subb
inc
xchg
sub
imul
jno
aaa
test
shlb
in
in
je
push
mov
push
pop
fucomi
outsb
hlt
jb
fnstenv
fwait
call
loopne
or
pusha
mov
pusha
adc
sub
test
rolb
and
pusha
hlt
rolb
push
mov
stc
adc
xchg
jno
mov
outsl
div
xor
rcrl
push
mov
inc
pushf
sbb
or
push
arpl
insl
cmpsb
loopne
lods
mov
push
cmp
jno
mov
adc
or
rolb
hlt
movsl
jne
ret
push
pop
push
shlb
pop
outsb
cwtl
fisttps
and
and
lods
xchg
daa
jl
mov
mov
std
pop
jns
loopne
ljmp
insl
cmpsl
mov
imul
inc
je
push
sbb
loop
push
mov
mov
mov
and
and
addb
pusha
pusha
jbe
inc
and
scas
sahf
fistpll
add
inc
test
pusha
lock
or
sbb
mov
faddl
loopne
push
xchg
in
mov
and
and
and
mov
and
xchg
xor
sbb
movsl
jge
or
and
imul
and
push
fsubrl
je
jae
mov
mov
mov
dec
hlt
lahf
mov
jns
fwait
lret
pusha
shll
jae
cmp
cmpl
and
and
jle
or
sbb
movsl
imul
lret
and
inc
jne
mov
xor
and
cmpsl
lcall
add
loopne
pop
pushf
fs
sti
sub
rcrb
call
push
insb
sbb
movsl
mov
push
add
and
call
cmp
inc
into
push
andb
jle
push
sub
push
and
cmpsb
pusha
and
add
insb
mov
xor
sbb
pop
out
inc
imul
mov
pop
push
add
cmpb
jbe
and
jbe
addl
aad
and
add
or
pusha
fsubl
push
dec
js
mov
enter
mov
xchg
rorb
cmpb
aam
mov
lods
add
ja
leave
jno
push
mov
and
daa
add
cmpsb
andb
mov
xor
pusha
inc
into
jmp
cltd
out
and
add
mov
fsts
xor
and
pusha
inc
lods
pop
mov
cmpl
loopne
mov
inc
fisubs
loopne
fldcw
pusha
jno
sub
mov
mov
mov
pop
lahf
repz
fnstsw
jl
adc
sbb
pusha
adcb
inc
into
imul
mov
dec
mov
inc
sub
ficompl
and
adc
xchg
add
loopne
adc
andb
jg
lcall
push
pop
dec
mov
xchg
push
and
fiaddl
mov
add
movsl
cmc
add
int
fs
pop
fsubrl
mov
xlat
lret
mov
mov
pop
jge
sti
jnp
push
andb
jno
aam
aam
adc
add
arpl
pop
pop
imul
mov
out
and
shlb
sub
xor
sti
movsb
addb
mov
jl
lock
cmp
out
test
xor
daa
popf
adc
subb
sub
dec
and
aas
xor
inc
and
push
jae
push
cmp
test
ss
and
pop
mov
sti
dec
dec
pop
pop
cmp
add
jge
in
loopne
jl
notl
push
out
iret
inc
mov
mov
xorb
or
addps
cmp
and
push
fbld
add
cwtl
outsb
daa
stos
push
cmp
call
in
inc
or
pusha
inc
daa
imul
out
outsl
inc
test
mov
mov
add
lea
adc
je
les
sti
nop
sub
loope
cmp
mov
add
cmpsl
mov
out
inc
sti
push
push
push
jle
ret
aad
mov
and
ss
jb,pt
out
bound
out
push
add
sub
mov
std
dec
add
fdivs
push
mov
in
insb
test
pusha
cld
arpl
and
or
inc
bound
cli
pop
dec
scas
pusha
rclb
inc
sbb
lret
push
gs
addb
inc
xchg
aas
out
mov
aad
push
and
pushf
mov
stos
sbb
and
rolb
jae
fs
push
lods
and
cli
ss
mov
mov
sbb
mov
xor
loopne
in
xor
lods
fwait
mov
or
add
lds
push
mov
jg
inc
adc
sub
pop
mov
rcr
inc
imul
ss
stos
mov
pop
or
inc
jl
hlt
mov
mov
out
fbld
aad
xchg
insl
or
pusha
and
inc
cmc
out
inc
mov
test
inc
fists
sub
inc
cli
dec
out
xchg
push
add
mov
or
mov
pop
std
les
add
js
test
insl
out
aas
mov
aam
mov
fs
mov
cmpsb
mov
cmpsb
mov
cltd
lcall
inc
mov
dec
push
mov
and
and
rcr
mov
loopne
pop
sbb
imul
shlb
mov
mov
insb
popa
nop
mov
loopne
add
adc
sti
fldt
dec
out
dec
outsb
out
fildll
pushf
mov
or
mov
sbb
mov
mov
out
mov
and
shr
pusha
ja
mov
add
mov
out
xor
addr16
int
dec
mov
mov
and
mov
inc
sarb
pop
lcall
popa
pushf
shlb
ja
and
repz
xor
lds
andb
push
and
lods
das
in
and
clc
lret
movsl
pop
push
and
push
loope
daa
stos
loopne
test
out
sbb
mov
pop
cwtl
lcall
loopne
inc
mov
mov
pop
mov
sahf
pop
mov
int
mov
cwtl
mov
or
pusha
popa
jmp
pusha
rolb
sti
jg
jp
lcall
loopne
leave
dec
mov
xlat
in
dec
adc
int
mov
dec
add
adc
inc
das
ficoms
or
shl
add
pushf
popf
cmpsb
rol
test
and
rolb
div
cmp
or
adc
addb
insb
outsl
sub
jo
dec
mov
fwait
or
sahf
jp
jae
jns
mov
clc
movsb
inc
or
add
mov
pusha
mov
lret
inc
xchg
cmp
and
and
mov
push
inc
mov
adc
lods
ret
sub
loopne
stc
mov
repz
and
pop
sbb
ja
dec
or
pusha
jae
xor
pusha
cmc
outsl
adc
loopne
iret
mov
pop
xor
cmp
inc
leave
mov
add
sub
dec
xor
loopne
jbe
ljmp
mov
sarb
jg
mov
push
div
xor
addl
sbb
adc
add
mov
inc
xchg
cmc
sub
xor
sar
ror
jae
mov
loopne
adc
icebp
xchg
test
mov
pusha
pusha
inc
aad
jbe
dec
mov
pop
adc
loopne
pusha
jns
inc
jne
xchg
js
testb
add
mov
add
inc
jmp
daa
arpl
mov
shl
mov
add
and
mov
and
inc
in
fdivl
pop
jecxz
cltd
daa
cmp
xchg
mov
xchg
add
repz
pushf
adc
mov
and
sub
add
push
cmc
in
frstor
dec
or
xlat
test
rcrb
inc
mov
push
sub
scas
mov
imul
or
insl
es
add
xor
daa
xor
add
fldenv
xchg
ss
pop
cli
pop
fcmovnb
out
clc
hlt
jo
andb
pop
shrb
push
test
sahf
mov
and
stos
pusha
add
or
ficomps
popf
pop
sub
in
mov
out
in
xchg
arpl
and
add
sub
pop
cmp
and
mov
rcr
xchg
xor
shlb
dec
ret
mov
dec
mov
jecxz
lret
aaa
in
enter
fwait
jp
xor
loopne
ret
mov
pushl
adc
mov
pusha
mov
dec
jl
adc
inc
in
jbe
fs
xlat
sub
cli
xchg
andb
pusha
add
aas
add
pop
xchg
and
cli
ds
lcall
and
sti
push
call
loop
lds
xlat
movsl
lds
sbb
jnp
out
mov
adc
mov
mov
loopne
xor
mov
decl
mov
in
test
shlb
pusha
cmc
and
ret
scas
mov
test
push
pusha
add
aaa
fmuls
mov
ljmp
mov
pusha
and
pop
test
lock
sub
add
add
dec
mov
fsincos
int3
and
xorb
sar
aas
mov
push
cmc
add
xchg
jb
and
mov
add
adc
ret
mov
icebp
or
outsb
dec
jmp
lret
addb
out
cmp
inc
cmovg
rolb
out
lea
xor
xchg
loope
xchg
mov
sbb
and
sub
leave
pop
lret
jge
ljmp
jb
push
push
pusha
mov
ficompl
loopne
pop
dec
inc
mov
adc
or
outsl
imul
adc
inc
test
pusha
enter
mov
or
sbb
xchg
dec
sub
mov
loopne
mov
inc
icebp
fwait
xchg
jmp
inc
sbb
in
pop
stos
push
push
iret
cmp
pusha
pusha
jl
xchg
xor
fst
out
or
add
push
pop
and
add
fsubl
mov
xchg
xor
push
push
add
pop
inc
mov
and
rcrl
adc
and
or
pop
sbb
rolb
shlb
ret
movsb
mov
mov
sbb
stc
rcr
divb
add
out
dec
mov
lcall
or
mov
cmc
in
jo
rcll
mov
mov
xchg
fcomi
cmp
mov
int
or
dec
xor
loope
mov
daa
mov
daa
xchg
jmp
loopne
push
call
ljmp
dec
ljmp
test
inc
ds
cmp
or
sbb
xor
lret
mov
mov
rolb
ja
or
pop
jnp
loop
and
and
xor
jl
cld
jno
adc
out
mov
pusha
push
push
andb
rolb
add
imulb
fwait
push
dec
aaa
bound
inc
sub
shr
jecxz
push
jg
pusha
rclb
mov
cmpb
pop
or
cmp
add
rol
faddl
push
sbb
mov
lods
shl
cmp
addr16
inc
insb
xchg
movsb
loopne
loope
pusha
xchg
push
std
call
pop
jno
in
int
repnz
push
sub
das
jmp
push
or
shl
bound
and
sub
rcl
jle
popa
cmp
loope
sub
mov
loopne
mov
or
imul
mov
xor
pusha
adcb
lret
mov
clc
into
pop
sbb
mov
pop
cmpsl
xor
add
dec
and
jg
pusha
pusha
xlat
movsb
add
lret
aaa
cmp
inc
shrb
pusha
loopne
add
jmp
pop
adc
sub
aas
xchg
jge
cmp
mov
adc
add
mov
shl
jo
mov
push
mov
mov
imul
inc
push
sub
xchg
sbb
dec
aaa
mov
fistpl
or
add
mov
cwtl
aaa
push
push
mov
imul
push
rolb
mov
shlb
add
xor
xchg
push
movsb
loopne
in
mov
dec
adc
mov
xor
fsubrl
shl
jp
ret
push
inc
loopne
and
and
fcomip
repnz
lret
push
mov
imul
and
ror
or
jo
add
aad
jno
ret
pusha
xor
jae
test
and
shlb
test
cmp
pusha
pusha
pushf
mov
or
jns
mov
mov
mov
loopne
frstor
pusha
sub
out
lods
and
sub
orb
inc
cmp
sub
enter
sbb
hlt
in
and
das
subl
les
add
stos
test
xor
dec
ret
jne
and
push
add
inc
dec
xor
dec
vmovq
mov
scas
mov
scas
pusha
andb
shlb
push
shl
int3
out
imull
ja
add
push
or
and
adc
jg
int
outsl
loope
xlat
push
pop
bound
mov
mov
mov
or
and
fs
sbb
in
stos
add
cmp
mov
pop
icebp
mov
mov
xchg
scas
cmp
jl
in
gs
dec
fisttpll
clc
adc
into
aam
out
jmp
xchg
add
loopne
jns
outsb
loopne,pn
push
loopne
and
jmp
inc
adc
scas
ss
rorl
out
test
mov
andb
test
cmc
xchg
and
outsb
rcrl
cmpsb
pusha
and
inc
roll
popf
fcompl
scas
andb
and
pop
mov
pop
mov
sub
repnz
int
cmp
and
incl
lret
inc
sbb
cli
xor
mov
jnp
xchg
out
push
xchg
shlb
bound
jp
jb
sub
or
jb
add
xor
out
or
add
pop
mov
sbb
sub
orb
inc
sbb
jmp
cltd
mov
jl
rol
dec
aam
or
mov
gs
push
movsl
fstps
in
into
jbe
mov
inc
pmaddwd
jns
cmp
jae
adc
adc
loopne
lea
stos
aad
add
lret
inc
mov
rcrl
cmp
shrb
cmp
ds
mov
mov
jl
mov
addb
jl
and
xchg
jmp
int3
cmp
add
das
outsl
add
